sbb
add
mov
sbb
push
fcmovb
lea
addl
vmovq
fdivs
insb
addl
push
and
pusha
sbb
xor
mov
push
push
call
xor
cs
cs
push
orl
movsb
mov
fisttps
das
pusha
lods
mov
pop
cmpsb
sub
aaa
testl
xor
cmp
hlt
pop
cmpsb
lea
mov
test
xchg
inc
jb
sbb
out
sbb
cmc
pop
mov
int
inc
sub
adc
add
mov
test
out
push
dec
rcl
mov
fwait
xor
jecxz
jge
xor
or
insb
pop
mov
in
mov
jl
xchg
xor
pop
frstor
int3
fsubrl
mov
mov
popa
jecxz
stos
mov
mov
sbb
jnp
push
jecxz
or
inc
leave
lods
stos
repnz
cmp
cmp
daa
inc
dec
dec
push
fistps
pop
jns
pushf
or
xor
daa
xor
cmc
mov
inc
andl
mov
sti
mov
xchg
xor
or
mov
test
mov
in
gs
cmp
inc
ret
mov
rcr
test
or
xor
pause
and
mov
mov
and
push
mov
push
scas
lret
ds
dec
adc
jo
jae
hlt
add
and
sahf
aas
add
ss
lret
les
hlt
cmpsl
imul
test
subb
mov
sbb
push
cs
dec
pop
adc
lcall
cli
movsl
test
mov
xchg
pop
loope
hlt
popf
or
es
insb
je
and
or
int
fmuls
ret
adc
inc
pop
pop
mov
xor
xchg
int
sub
pop
loopne
out
dec
mov
in
mov
jp
inc
scas
mov
sbb
sub
xor
addr16
sti
xchg
scas
adc
dec
push
or
inc
or
and
mov
in
mov
in
or
js
mov
popa
sbb
das
dec
pop
mov
iret
jnp
mov
dec
cmp
mov
lods
cmp
and
pop
in
dec
mov
jecxz
xchg
in
sbb
pushf
xor
in
cltd
push
mov
sub
sub
push
adc
mov
sbb
out
cltd
xchg
mov
ud0
mov
out
ljmp
sub
out
negl
enter
and
inc
push
and
mov
push
daa
xchg
xchg
adc
fs
xor
xchg
sti
into
or
sub
bound
xchg
sbb
imul
push
mov
add
out
pop
bound
jg
sub
cmc
inc
and
test
mov
out
mov
lds
push
or
dec
sbb
and
cmp
lahf
out
cli
adc
add
mov
cmp
xchg
jmp
xchg
sub
mov
sarl
inc
lods
lea
mov
imul
test
aam
push
fiaddl
mov
inc
popf
repnz
pop
movsl
xchg
je
rcrb
cmp
mov
sti
fmull
in
loope
insb
or
pop
inc
cs
xor
jp
leave
adc
lds
pop
mov
stos
mov
jg
mov
mov
xadd
sti
inc
lds
push
xchg
adc
inc
and
mov
lcall
mov
sbb
shr
mov
mov
add
out
push
inc
cld
inc
xor
jns
loop
jg
cmp
in
pop
aam
aas
mov
nop
enter
ljmp
gs
jg
dec
sub
je
rclb
xchg
push
cmp
stc
dec
test
in
push
loopne
insl
insb
fs
add
mov
mov
xor
mul
sbb
pop
xor
lcall
fistpl
scas
and
mov
test
jbe
xchg
lods
std
or
jp
dec
aas
sub
mov
cmp
sbb
mov
cmp
cmpsb
add
addl
mov
and
fsts
pusha
pop
insl
cmp
jge
push
and
out
cltd
dec
nop
notb
daa
mov
sub
mov
dec
test
les
gs
push
mov
or
enter
lods
xor
cmp
aam
clc
add
xor
aad
fiadds
jb
push
dec
add
lret
inc
and
ret
cmc
test
jno
dec
ret
cmpl
addl
mov
dec
push
out
rcll
testl
jp
pop
cmc
dec
je
sarl
dec
mov
test
jbe
incl
sub
or
jmp
mov
jp
dec
cs
push
jno
scas
xchg
hlt
cmc
shll
xchg
test
stos
jne
lret
cmc
setnp
add
mov
addr16
xor
or
push
bound
aaa
cmpsl
push
es
cmp
mov
mov
fcoms
cmp
lods
xchg
movsb
add
cwtl
sub
xchg
arpl
jae
pop
mov
fmull
pusha
aas
add
int3
shr
stos
mov
jno
jmp
inc
lods
and
outsl
push
cmp
pop
dec
add
lock
and
or
push
les
pop
pop
push
lret
daa
es
hlt
cmc
fisubs
jge
dec
mov
lret
mov
xchg
mov
test
jp
jg
call
cmp
lret
xor
sub
insl
in
lods
mov
push
fcomps
xor
xlat
ja
ds
fucomi
sub
lahf
inc
std
cmp
xor
adc
clc
cmp
es
gs
pushl
or
aas
mov
jp
and
int
lods
into
aam
lret
xchg
dec
dec
xlat
scas
dec
leave
stc
inc
sbb
inc
fcomi
push
xor
mov
aaa
clc
add
ret
inc
movsb
xchg
add
aad
pop
fsubrs
jl
fldenv
xor
cld
push
inc
sub
ret
dec
push
add
mov
adc
xor
mov
push
jge
sbb
in
push
or
xchg
push
sbb
sti
cmp
or
xchg
lods
sbb
cmpl
ljmp
or
inc
and
xchg
push
push
dec
jb
adc
cmp
adc
inc
sbb
xchg
and
mov
add
jae
inc
inc
in
std
loope
mov
jg
add
pop
or
imul
mov
mov
fs
adc
jns
out
inc
lret
push
insl
xlat
xor
insb
cs
pushf
dec
xor
push
mov
aam
cltd
lods
push
andl
ljmp
cmpsl
popa
fldl
test
hlt
rol
push
cmp
sar
sbb
mov
jo
jne
inc
popf
pop
stc
cmp
inc
icebp
and
loope
mov
mov
stos
pop
or
lods
xchg
in
mov
sbb
popf
cmp
inc
ljmp
jge
mov
jle
sub
or
imul
add
and
out
add
cmp
mov
cmpsb
cltd
stos
ficoms
les
std
lea
and
ds
adc
inc
dec
cmp
sbb
stc
pop
dec
scas
sub
sbb
lods
push
push
loopne
inc
mov
push
add
jg
sarb
out
adc
shlb
mov
xor
das
fildll
out
fists
ret
mov
jg
out
mov
sahf
fisubs
inc
int
test
xchg
in
iret
iret
xchg
rcl
mov
push
dec
xchg
inc
adc
xchg
fisttpl
das
mov
xchg
lods
shrb
pop
sub
inc
sbb
mov
loope
push
icebp
fnsave
mov
mov
mov
or
faddl
cwtl
orl
cwtl
inc
loope
mov
not
dec
push
jle
mov
movsl
test
pop
jl
lea
jge
inc
sub
mov
sbb
and
sub
je
cmp
mov
movsb
jae
push
fnstcw
sbb
pop
jmp
stos
lods
fsubrs
sbb
aaa
loopne
pop
dec
xchg
push
or
jl
pop
fs
ljmp
cmp
or
aam
leave
push
mov
jbe
or
negb
jne
sbb
fdivrl
jg
mov
jne
pop
cmp
xchg
hlt
fsts
mov
icebp
es
mov
sarl
cmp
sub
js
xchg
pusha
sub
pop
add
push
std
and
mov
jbe
inc
iret
mov
mov
test
mov
nop
and
pop
cmp
pop
repnz
adcb
lret
add
jb
jne
bound
test
mov
inc
les
pop
pop
cmp
jo
jl
and
fdivr
push
scas
mov
pusha
inc
orb
jno
push
push
xchg
mov
xor
dec
mov
out
mov
cmp
ja
jo
popa
sub
xchg
cli
aas
out
sub
cwtl
pop
rorb
sbbl
sbb
xor
mov
mov
push
jmp
dec
andl
xor
jno
cmp
ljmp
mov
cmp
incb
cwtl
or
xchg
mov
adc
test
dec
dec
cmpsb
ret
pushf
mov
jnp
gs
lods
in
sbb
outsb
mov
sti
xchg
adc
repz
pop
imul
push
pusha
ret
xchg
scas
xchg
das
mov
das
mov
mov
and
leave
nop
dec
mov
add
cmp
jecxz
mov
and
or
mov
jge
aaa
push
test
push
aaa
mov
cmp
aam
mov
fwait
mov
adc
add
bound
bound
stc
mov
sarb
push
ret
enter
lret
inc
rolb
xlat
repz
out
xchg
pop
pushf
es
iret
xchg
data16
push
imulb
cld
xchg
filds
sub
in
inc
aaa
xlat
inc
cmpsb
pusha
xchg
mov
sbb
mov
jl
test
sub
cmc
xor
mov
or
lret
add
jo
cmp
pop
subl
sbb
roll
into
pop
sahf
mov
fdivs
in
lea
mov
cmc
xchg
in
dec
addr16
aam
or
imul
aaa
jns
mov
mov
mov
sbb
push
scas
rcr
mov
sbb
scas
ss
sbb
pop
pop
lds
fwait
sub
mov
aas
mov
xchg
data16
jecxz
leave
je
repz
cld
fbstp
pop
jmp
es
call
test
push
push
xor
pop
fwait
stc
imul
stos
add
pop
push
or
iret
in
jle
push
and
lgs
pusha
mov
cs
sahf
xor
sub
shl
decl
mov
mov
and
outsl
mov
mov
xor
push
es
daa
dec
xchg
int
inc
or
dec
addr16
mov
jno
lods
and
aaa
andl
adc
js
push
lret
scas
lret
leave
in
test
pusha
shll
dec
fnsave
clc
xor
xor
push
les
push
and
bound
pusha
aad
into
mov
sub
pop
sbb
enter
and
js
clc
scas
xchg
lret
lods
xchg
ret
jg
rolb
push
pushf
jnp
adc
and
xor
out
cmp
adc
ror
xor
lret
test
sub
repz
cs
out
fbstp
pop
mov
jg
bound
add
cmp
out
push
jnp
sbb
xchg
iret
pop
test
or
das
cmp
popf
ds
xor
lret
jmp
xlat
jae
loope
ret
adc
jecxz
fpatan
js
jnp
lcall
mov
shrl
pushf
jo
and
pop
out
xchg
mov
adc
call
out
xchg
and
add
jmp
sbbb
push
lret
inc
rolb
repz
ja
cmpsb
xor
cld
jmp
xchg
mov
mov
push
repz
ds
clc
and
movsl
roll
enter
push
fs
cmp
dec
cmpsb
mov
xor
sbb
int3
loopne
and
dec
jg
add
in
pop
ja
mov
push
subb
jo
jmp
subb
cli
push
mov
pushf
scas
push
inc
mov
adc
lret
ret
lock
sub
cld
arpl
popf
int
movsl
mov
in
notl
mov
fisubrl
push
daa
xchg
mov
insb
and
lahf
sti
inc
or
sti
pop
jg
jge
je
push
pop
push
mov
sub
xchg
cmp
mov
cmp
insl
bound
xchg
fcom
jge
and
mov
sti
sub
mov
push
pop
or
sbb
jg
xchg
sub
and
mov
adc
loopne
xchg
inc
mov
push
call
cwtl
call
cmpsb
out
jne
icebp
sub
or
loope
mov
and
and
push
arpl
lretw
mov
call
mov
jo
mov
ljmp
and
sbb
lea
mov
dec
push
arpl
rcrb
lret
xchg
lahf
adc
jno
aaa
sub
imul
push
fstpt
inc
pushf
jbe
sbb
pop
and
jle
jnp
std
lahf
xchg
jo
ret
adc
and
ficoms
out
sbb
sbb
shlb
and
mov
ret
fldt
mov
mov
pop
test
jge
mov
xchg
inc
or
pop
out
ds
adc
mov
fldenv
cs
mov
jnp
movsb
scas
mov
xchg
mov
shrb
mov
int3
imul
int3
push
test
fistpll
xchg
movsb
test
mov
aaa
rclb
gs
xchg
xor
dec
adc
add
andl
into
xchg
rorl
aam
lret
fs
cwtl
jmp
mov
int
ret
sub
add
inc
outsb
xchg
cli
sub
inc
loope
pop
stc
push
nop
adc
fldl
push
loop
jmp
outsb
or
cmp
int
fldcw
loopne
loop
fists
jae
push
popa
cld
imul
insb
pop
xchg
lret
mov
cld
xchg
fs
jmp
jb
fnstcw
pop
or
shl
clc
xor
sub
push
insb
pop
pop
sahf
lock
lahf
push
fucomi
lret
popf
mov
add
scas
movsl
loope
insb
jl
mov
mov
addr16
sbb
ficoml
mov
addb
dec
adc
mov
int3
dec
push
xchg
aaa
sti
cltd
dec
call
or
sub
push
adc
adc
lret
pusha
hlt
nop
adc
jl
scas
fs
sti
mov
jecxz
aaa
jmp
leave
test
mov
and
mov
js
jl
cmp
dec
cmp
int3
mov
loopne
push
dec
jmp
pop
out
mov
sbb
pop
mov
sarl
jge
pop
dec
in
andl
sbb
test
shll
mov
xor
ja
and
stos
push
or
ja
cmc
sbbb
scas
mov
pop
push
loopne
xor
jg
and
scas
shll
aas
dec
lahf
or
jg
jge
pop
add
inc
jns
jne
mov
mov
xchg
push
lds
pop
jbe
testb
push
jl
out
out
pop
cltd
repnz
dec
mov
rcl
fwait
mov
push
loop
mov
not
jp
add
in
movl
fsubl
mov
mov
push
cld
loop
out
fisubrs
andl
add
xchg
hlt
js
push
mov
push
test
push
lock
loop
inc
sub
cli
jp
insl
pop
lret
adc
cmp
lock
in
mov
test
and
cmp
sub
dec
mov
loope
bswap
or
cmp
push
sub
icebp
jns
pusha
pop
in
jb
mov
jo
mov
roll
mov
cwtl
stos
push
mov
shll
loopne
cmpsb
mov
stc
pop
sub
and
out
test
sbb
outsl
mov
sub
jne
or
out
rcl
stc
sbb
push
jl
mov
shrl
test
scas
sbb
lret
jae
in
pop
push
sub
mov
xchg
xchg
xor
sub
sub
adc
and
nop
cs
or
or
sub
movsb
jg
sub
mov
sbb
push
dec
movzbl
pop
mov
inc
faddl
jnp
lahf
ret
daa
shll
adc
movsl
cltd
cmp
nop
pop
xchg
and
inc
add
or
cmpsb
stos
xor
pop
mov
push
sub
lahf
sbb
flds
pushf
test
push
lock
sbb
push
neg
jl
push
mov
leave
mov
mov
mov
jae
jno
out
pop
xorl
jle
xchg
in
test
js
adc
mov
jnp
sub
cmpsl
ja
call
jb
das
iret
es
adcl
sbb
mov
lret
xchg
xor
mov
xor
cmovae
idivb
push
sbb
insl
gs
mov
jmp
repnz
inc
icebp
fcomip
scas
mov
leave
jmp
clc
sub
fdivl
mov
mov
cs
dec
sti
sbb
imul
das
outsb
movsl
cmc
movsl
dec
sub
shll
push
enter
popf
outsl
fsubr
movsb
mov
mov
pop
pop
and
sbb
inc
inc
dec
loopne
mov
dec
sub
je
ror
pop
cmp
pop
dec
loop
cltd
movl
mov
sbb
push
dec
sub
in
and
fldcw
movsl
push
shll
push
dec
fidivs
pop
stos
dec
std
mov
outsl
dec
leave
or
sub
lret
mov
sbb
jl
and
fdivrs
pop
and
inc
or
idiv
jb
aas
mov
jle
cli
cmc
popa
push
lahf
cltd
scas
sub
adc
cmp
adc
test
repnz
mov
xor
inc
mov
cmp
stos
push
lcall
mov
aad
lea
mov
mov
mov
jge
lea
mov
mov
pop
push
pop
clc
pop
stc
in
mov
sbb
pushl
leave
mov
in
enter
cmp
fcmovbe
data16
inc
cmc
mov
jne
enter
mov
adc
mov
dec
push
add
push
mov
enter
test
mov
inc
cmp
cmp
jecxz
xor
push
sub
cmp
inc
inc
cld
sbb
cwtl
sti
or
ret
mov
scas
xchg
add
shll
mov
int3
mov
or
mov
add
inc
dec
adc
call
std
repz
dec
mov
jbe
push
mov
and
add
gs
cmp
adc
mov
nop
enter
ds
aad
mov
std
inc
hlt
daa
xchg
inc
ret
pushf
dec
imul
mov
jg
filds
jge
fiaddl
test
lret
adc
jge
cli
jns
ret
mov
mov
ffree
or
lea
adc
sub
fs
mov
lods
shll
xchg
popf
cmpsl
and
jge
pop
jne
loopne
aad
mov
sbb
add
ret
cmpsl
ret
aam
mov
mov
xor
mov
lds
lea
sarb
out
loope
cmp
orb
lds
adc
pop
mov
rorb
jo
imul
xchg
fdivr
cltd
loope
pushf
loop
push
sub
sub
mov
enter
aaa
ja
dec
sbb
push
sti
pop
xchg
rorb
outsb
adc
adc
jno
and
pop
mov
jns
icebp
inc
jno
int
pop
fnstcw
sahf
nop
cli
lahf
jmp
sbb
mov
mov
fidivs
movl
add
and
and
push
xchg
stos
mov
jmp
cld
xchg
mov
es
out
add
jno
pop
daa
js
push
js
loope
lods
push
in
inc
cmpsl
jno
pop
or
clc
jmp
daa
cmp
push
enter
inc
stc
in
lds
insl
pop
out
xchg
insl
jp
sbb
sbbl
sbb
or
mov
fimull
sub
mov
push
or
lods
mov
push
jae
fisubrl
test
cld
loop
dec
xlat
cmp
adc
pusha
or
inc
push
out
imul
shrl
sbb
call
mov
or
xchg
add
test
jmp
popa
dec
in
jo
int3
rclb
inc
mov
xor
pusha
add
pop
add
mov
add
or
div
xor
mov
fbld
addr16
and
orl
adc
bound
xor
aam
mov
cmp
jbe
push
mov
enter
ljmp
imul
jecxz
pushf
in
stc
ja
jnp
push
push
mov
cmp
xchg
clc
inc
xchg
idiv
pop
mov
ljmp
jle
rolb
mov
popa
push
in
in
fmull
mov
xor
lahf
mov
add
mov
mov
mov
sbb
dec
iret
mov
mov
or
lret
cs
rorb
adc
pop
pop
xor
adc
push
push
sti
lret
pop
jnp
jae
dec
das
ljmp
fsubrl
repnz
in
das
into
or
stos
cltd
jne
dec
and
lret
loop
pop
idiv
jno
mov
stos
sbb
or
rcrb
fcomps
mov
cmp
adc
inc
dec
nop
sbb
dec
cmp
les
fistps
je
rep
inc
jbe
mov
jle
mov
dec
push
adc
cmpb
imul
in
cmp
shr
cli
cmp
sbb
test
cmc
ja
cmp
gs
in
cmp
push
mov
xchg
xchg
in
loopne
push
fistpl
mov
jecxz
pop
ljmp
aaa
adc
out
cltd
lods
adc
inc
lock
add
mov
fsubrs
sahf
sti
pop
sahf
lahf
add
dec
cmp
jecxz
cmc
lahf
push
test
inc
es
lret
je
in
pusha
loopne
mov
xlat
mov
fmuls
lahf
fsubrl
cmp
and
xor
xor
mov
pop
stos
testb
fisttps
mov
filds
add
push
mov
ret
gs
sarb
lods
sbb
dec
add
mov
rorl
icebp
arpl
push
arpl
cmpsl
out
dec
js
sahf
add
data16
xor
or
lds
fldenv
mov
or
je
inc
push
iret
xor
push
lea
jle
loop
test
cmpsl
pop
pusha
sub
pop
jo
push
push
sarl
ret
mov
pop
jbe
test
ret
jmp
orl
or
mov
lret
mov
pop
inc
xor
dec
neg
mov
cmpl
push
inc
mov
addr16
data16
rorb
xchg
or
addr16
cmp
mov
jle
lret
or
and
jbe
pop
loope
fcoml
clc
cmp
inc
and
mov
ret
mov
sub
lods
lock
mov
push
jle
push
in
push
mov
mov
xor
testb
mov
aad
mov
dec
vpcmpgtd
push
roll
adc
scas
cmp
decl
lahf
jle
aad
cli
jp
nop
aas
shll
or
in
fisttps
das
xlat
cmpsb
mov
cld
dec
pop
fidivrs
jp
int3
fdivl
push
aas
inc
arpl
loopne
fwait
sbb
cmpsb
imul
sbb
jae
aas
cwtl
aas
jns
dec
cmpsl
sub
in
jae
out
xor
in
xchg
jp
adc
femms
cmp
loope
lret
mov
cmp
out
xor
lcall
loop
out
or
hlt
xchg
inc
aam
inc
sbb
pop
into
pop
mov
xchg
js
inc
nop
pop
cmpsl
pusha
insl
pop
add
jnp
aaa
sub
xchg
mov
arpl
lcall
add
fidivl
mov
je
lahf
jnp
xchg
push
out
dec
aaa
sub
loopw
xchg
adc
mov
or
pop
loopne
int3
dec
jle
jae
or
repnz
je
mov
ljmp
mov
aas
cmp
loopne
movsb
mov
sbb
jle
out
pop
notl
enter
or
mov
cli
inc
adc
xchg
mov
dec
adc
nop
movsb
js
xchg
stos
bound
repnz
mov
and
pop
sbb
int3
lcall
sbb
je
sti
dec
test
xor
lcall
push
lea
into
cmp
pushf
jl
aam
cwtl
inc
popf
cli
enter
push
sahf
cs
cmc
pop
push
cmp
jbe
notl
mov
add
or
add
sbb
pop
push
cwtl
sbb
sbbb
hlt
outsl
cld
xlat
cwtl
push
icebp
fmuls
push
mov
push
pop
pop
jne
pop
clc
fisttps
cltd
hlt
pop
dec
push
insb
pop
sbb
sti
xchg
add
xchg
push
lds
lcall
in
xchg
mov
enter
xchg
or
mov
and
aam
lods
and
lods
fstl
push
ret
pop
fwait
xor
aas
jmp
scas
mov
gs
les
movsb
sbb
ss
pop
rcrl
xor
sbb
mov
push
mov
and
inc
pusha
leave
mov
jns
pop
sbb
push
or
ss
pop
mov
pop
in
rcl
add
push
mov
adc
mov
xchg
jbe
rclb
popf
or
sbb
jne
fadds
movsb
and
jmp
lods
lahf
in
lret
sub
sub
inc
jl
jl
testb
mov
xorl
and
adc
lahf
xchg
sub
pop
mov
lock
outsl
fs
sub
ja
sub
repnz
push
pop
clc
jae
or
jb
add
test
jecxz
and
shlb
shrl
loope
aam
add
lahf
or
pushf
mov
cmp
lahf
imul
sarb
push
loope
call
sti
sub
mov
cmpsb
rsqrtss
or
movsl
rcll
test
leave
test
fwait
adcb
lods
xchg
push
pop
inc
imul
dec
cld
dec
ds
lods
cmp
mov
xchg
inc
aas
xchg
mov
cli
sub
sti
push
bound
aaa
dec
adc
sub
cmpsl
xor
gs
jno
jno
add
test
mov
mov
les
sub
ficomps
ljmp
pop
js
into
or
outsb
les
adc
xchg
jae
mov
mov
xlat
inc
js
mov
popa
push
fadds
push
test
dec
in
mov
cli
sub
test
or
jmp
mov
iret
cmpsl
roll
int3
cmpsb
push
ss
in
in
or
outsb
arpl
mov
aaa
cmp
lret
jmp
dec
jmp
aas
sub
mov
pop
fs
cltd
xchg
lods
xchg
mov
push
mov
pop
add
add
cmp
ret
arpl
push
mov
jb
popf
xor
test
negl
je
fwait
jnp
cmc
dec
insb
ror
out
sub
xor
pop
rol
daa
stos
pop
xor
inc
mov
dec
cmpsb
inc
clc
jmp
mov
inc
push
add
sbb
mov
jnp
xchg
dec
mov
mov
in
sub
icebp
or
not
jmp
outsl
popa
lahf
add
lods
or
cmp
or
imul
jp
shll
inc
prefetcht2
add
pop
jmp
mov
cwtl
lods
pop
addb
pop
inc
aad
mov
adc
fstl
xor
fsubp
jnp
add
rcrb
pop
orb
mov
push
or
js
or
dec
movsb
fisubrs
in
mov
int3
int3
lahf
ror
lods
call
or
mov
jmp
cmovne
inc
test
xchg
mov
imul
ret
ud1
dec
iret
fsubl
mov
fs
or
push
pusha
adc
andl
in
test
scas
andl
int3
jae
xchg
ljmp
sbb
shrl
mov
ljmp
repnz
mov
lock
jp
enter
dec
es
loope
sub
lret
mov
mov
push
adc
shll
xchg
es
cli
and
je
xchg
cmp
fisubrs
and
leave
stos
add
arpl
popa
aam
movsl
lods
pusha
cmc
stos
jp
mov
pop
adcl
fisubs
leave
int3
push
jmp
inc
ljmp
fstpl
inc
add
push
push
mov
inc
xchg
pop
daa
dec
xor
into
inc
and
jo
jno
enter
jle
jp
pop
push
inc
movsb
mov
cld
dec
daa
mov
out
push
fwait
or
aad
xor
cmp
stc
sub
in
mov
add
xchg
xor
sub
sbb
dec
daa
pop
pop
xor
pop
gs
out
lods
movsb
xor
lahf
pop
lods
mov
xor
adc
sbb
out
nop
inc
xor
or
push
das
les
and
mov
ret
mov
in
pusha
sub
stos
movsl
dec
add
dec
mov
dec
adc
and
xchg
out
les
std
push
mov
lds
pop
lret
push
inc
out
inc
dec
lret
mov
call
sbb
adc
xchg
pop
mov
int3
outsl
movl
pop
das
inc
call
sarl
inc
push
add
cmpsb
lods
jae
les
pop
pop
xchg
ljmp
test
loop
daa
pop
push
mov
iret
aam
gs
mov
aad
inc
sub
mov
adc
xchg
mov
add
lea
jmp
fdivl
pop
stc
mov
sbb
push
adc
xor
or
or
movsb
popa
rorb
adc
outsl
cmc
adcb
mov
inc
jnp
pop
lret
xchg
adc
faddl
cmpsb
ljmp
jecxz
aam
push
in
jecxz
ds
stos
add
les
xchg
ja
jne
push
sub
xchg
inc
lods
push
xchg
loopne
movsb
in
testl
or
xor
sub
or
xlat
js
xor
insl
or
imul
std
sub
xchg
jecxz
cmpsb
outsl
popf
repz
and
inc
gs
test
mov
push
or
ja
jo
lret
andb
cwtl
shll
into
sbb
roll
aas
jge
adc
sahf
ror
fbld
dec
jecxz
inc
mov
jne
mov
and
mov
jns
xor
clc
mov
and
mov
jb
inc
cmp
imul
lret
pop
jnp
mov
pop
dec
sti
cmpsb
inc
add
clc
notl
inc
mov
jmp
leave
data16
xor
sbb
pshufw
add
ret
sbb
rol
xchg
lods
stc
adc
xlat
xchg
or
jns
jge
sub
mov
mov
aad
jmp
sbb
jge
adc
popa
daa
lret
xchg
adc
shl
les
pop
popf
and
popa
inc
jns
es
inc
push
lret
cltd
daa
mov
mov
fisttpll
imul
push
adc
cs
jmp
mov
cmpsl
pusha
popa
xchg
sbb
or
int3
adc
dec
lock
shll
mov
sbb
and
repnz
cmp
xor
out
lret
rol
in
inc
out
rcrl
inc
lcall
jne
loopne
push
cmpsb
adc
js
popa
pushl
pop
sub
adc
and
mov
xchg
popa
pop
aaa
jo
sti
and
xchg
into
sub
sbb
movsl
pop
orl
inc
lret
xchg
daa
jbe
sbb
outsl
xor
cmp
shlb
sub
js
mov
mov
xchg
sahf
rclb
repnz
or
pop
sbb
push
ds
mov
xor
sbb
cmp
rcll
jno
inc
or
fwait
mov
inc
mov
gs
add
add
frstor
bound
sub
dec
sahf
mov
lret
mov
pushl
jnp
cmp
push
lock
cmp
push
js
and
movsb
xchg
clc
jno
push
rcll
cs
scas
outsl
adc
mov
inc
aad
add
mov
adc
xchg
jle
sub
jbe
jge
aas
and
sub
dec
movsl
push
cmp
loop
es
xchg
lcall
and
xor
xchg
add
mov
sar
jne
push
sbb
aam
mov
pop
and
in
mov
sub
jg
pop
cmpb
addr16
inc
popf
add
xor
loop
popf
lcall
js
stos
pop
push
sbb
mov
pop
scas
sub
repnz
inc
add
mov
roll
cmpsb
outsb
sub
insl
stc
sbbl
or
cld
rorb
xchg
repnz
push
and
int3
xchg
cld
insb
cmp
repnz
mov
cmp
cmpsb
test
into
test
lods
movb
xor
popa
imul
and
jne
stos
sub
popf
gs
out
xchg
xor
cmp
mov
mov
dec
ss
ds
jns
mov
ret
mov
pop
inc
inc
or
fidivrl
jl
hlt
lcall
ud0
lret
cltd
movsl
lret
xor
sbb
insb
push
inc
adc
movsb
pop
flds
scas
add
imul
repnz
mov
pop
nop
cmpsl
cltd
out
mov
mov
xchg
mov
push
frstor
mov
mov
push
fcompl
stc
sbb
icebp
stos
cmpsb
push
or
or
adc
dec
stos
loopne
push
sub
cltd
loop
movsb
xchg
aam
xchg
mov
push
inc
in
scas
lahf
jne
jb
pop
addb
lods
push
sahf
inc
xchg
out
call
loop
adc
in
jp
jb
addb
adc
xchg
popa
hlt
leave
jl
int3
mov
mov
pop
sarl
ss
imul
jmp
mov
mov
dec
loopne
enter
sti
lcall
sub
ljmp
xor
jp
cmp
adc
andl
rcr
mov
xchg
ret
pop
pop
cmp
add
cld
shll
sub
shll
inc
test
xlat
or
push
jnp
les
aam
les
inc
mov
cmp
fisubrl
push
xchg
je
bound
jmp
outsb
push
xor
faddp
inc
inc
mov
test
lret
push
xchg
cld
out
mov
add
sub
sub
jl
aam
jae
push
dec
mov
aas
mov
data16
adc
xor
shl
test
sbb
ss
mov
mov
fnstsw
xor
push
and
push
pop
inc
adc
cs
aad
shl
out
adc
loope
cmp
test
inc
push
mov
lcall
push
call
dec
dec
and
cmp
push
jae
dec
pop
out
mov
sbb
pop
jle
mov
int3
dec
ret
push
ret
sbb
les
pop
dec
xchg
xor
iret
inc
cmp
mov
mov
xor
in
fnstenv
and
push
lcall
repz
jge
and
insl
sub
inc
mov
xchg
fsub
call
sbb
imul
pop
fwait
enter
sub
sub
pop
lahf
std
fbld
cmp
xor
mov
pop
cli
addl
adc
sbbl
mov
cmp
sahf
mov
mov
int
push
inc
out
sbb
or
push
dec
dec
int3
stos
xchg
lret
mov
inc
insl
push
fidivrs
addr16
pop
sahf
sub
pop
rorl
or
aas
in
out
jne
lcall
divl
scas
pop
stos
adc
inc
mov
faddp
cmp
inc
das
push
mov
arpl
dec
xchg
notl
mov
mov
push
sahf
pop
dec
dec
cmp
rorb
xlat
push
mov
nop
cmp
lret
sbbb
xlat
and
push
cmp
cmc
jbe
dec
arpl
mov
sub
test
add
inc
mov
sbb
push
mov
jmpw
daa
iret
daa
xorl
es
mov
dec
out
inc
outsl
insb
push
inc
push
nop
dec
or
pushfw
cmp
sarb
stc
lea
pop
sbb
mov
xchg
cmp
inc
mov
shr
scas
int3
cs
pop
push
and
pop
sbb
pop
or
bound
mov
lret
jmp
pushf
jae
push
add
mov
aad
stos
pushf
fucom
xor
pop
and
inc
int3
add
test
popf
out
and
jb
rorl
nop
shrb
add
fmuls
push
xchg
xchg
daa
movsl
jbe
sarb
push
pop
lods
lret
in
inc
mov
and
das
inc
fadds
mov
cwtl
fstpt
or
jbe
fdivs
mov
cs
mov
xor
divb
sbb
sub
cmp
push
xchg
fmuls
sbb
xchg
aaa
hlt
mov
jecxz
xchg
push
mov
iret
repz
xor
imul
cltd
mov
dec
cld
dec
xor
adc
cld
mov
push
jmp
mov
mov
sbb
xor
loop
pop
test
loope
dec
aas
lock
unpcklps
popf
lock
lds
jne
mov
lock
mov
fcmovb
test
xor
pop
mov
cmp
enter
xor
int
cmp
dec
mov
and
imul
sub
mov
lahf
stos
pop
dec
inc
dec
adc
lock
sub
gs
inc
sub
inc
and
push
loopne
and
inc
rolb
clc
dec
mov
jns
adc
inc
rolb
adc
sbb
nopl
pop
loopne
sub
jb
cmpsb
xlat
and
xchg
test
aad
ja
sbb
dec
sub
leave
adc
cmp
jns
popa
in
cld
or
int3
cmp
or
out
and
fcompl
xor
mov
ficompl
dec
cmp
cmp
xchg
dec
cs
or
inc
and
test
inc
pusha
sub
lahf
xchg
inc
or
fldln2
or
cltd
adc
add
mov
lods
sbb
in
ret
shrl
adc
sbb
pusha
or
das
shll
dec
mov
lock
ret
in
mov
jns
repz
inc
cmp
fsubrl
in
mov
push
out
push
pusha
jmp
pop
xchg
jecxz
and
scas
pushf
and
aad
into
jle
scas
xor
xlat
sub
jle
stos
xchg
push
test
push
sub
xchg
cmp
xchg
nop
adc
mov
shll
les
mov
outsb
sbb
sbb
push
ret
inc
insb
sbb
lea
xor
test
xchg
sub
mov
lea
movsl
mov
mov
xchg
sub
fwait
addb
xor
dec
les
frstor
div
rorl
adc
xchg
mov
lods
and
int
or
ret
push
sub
jl
add
out
xor
push
push
dec
mov
sub
cmp
jno
movsb
out
lret
es
jl
pop
sbb
push
out
cmp
cmp
testl
xchg
mov
aas
outsl
out
add
cmc
fdivrs
push
ret
icebp
push
insl
xor
stos
dec
push
lds
in
sbbb
push
mov
fs
mov
cltd
lea
movb
in
xor
pop
pop
pusha
adc
neg
xchg
js
sbb
mov
out
xor
xchg
xchg
mov
cmp
dec
aam
add
mov
sub
jl
leave
jno
cmc
push
and
mov
out
jne
hlt
adc
inc
add
repz
add
cmpb
pop
lahf
ss
rol
push
adc
push
ss
sub
sbb
leave
test
xchg
pop
idivb
mov
pop
push
sbb
cwtl
xchg
lsl
icebp
ds
stos
jnp
mov
xchg
or
lds
jmp
gs
fstl
dec
sbb
inc
xor
xchg
sbb
test
mov
pop
stos
insl
mov
xor
adc
testb
mov
push
push
imul
jae
dec
push
xor
fmul
jne,pt
jle
sub
xor
dec
sbb
pop
or
pop
add
cmpsl
in
sub
xor
lea
add
push
or
pop
add
pop
mov
jbe
adc
inc
dec
adc
data16
pop
enter
rcrl
push
fcompl
xchg
push
adc
push
or
pop
sub
dec
leave
decb
pop
fsubrp
nop
dec
arpl
adc
ljmp
cld
adc
adc
mov
xchg
dec
jmp
out
nop
push
push
je
sahf
insl
and
outsb
outsw
add
dec
pop
push
int3
gs
loope
repnz
sub
fidivrs
sub
shll
pusha
int3
arpl
in
jno
sbb
xor
sbb
fidivrs
fs
popf
sti
inc
out
add
cmp
inc
dec
shll
mov
movaps
adc
adc
mov
mov
pusha
lcall
nop
mov
adc
push
out
add
push
cs
scas
mov
pop
mov
cs
ret
or
pop
mov
jge
dec
rcrb
xchg
cmp
inc
popf
xor
xor
pushf
and
pop
adc
and
fwait
sub
adc
cmp
movsl
data16
outsb
jns
pushfw
inc
or
dec
punpckhwd
aam
daa
push
popf
add
shufps
pop
nop
pop
jb
lods
inc
inc
imul
pop
cwtl
fbstp
push
jp
fdivr
fs
cmp
sub
ds
cmpsl
adc
push
mov
in
adc
out
std
cltd
and
cmpsl
mov
jl
add
or
aas
and
mov
xorl
in
push
fadd
xor
pop
repnz
movsb
or
xor
mov
jge
xorl
lea
cltd
xchg
scas
xor
and
mov
jecxz
add
jmp
pop
ret
or
add
loop
mov
mov
pop
jbe
xchg
fnstenv
pop
js
lods
or
aam
mov
outsb
cmp
mov
nop
mov
cmpsb
lret
or
sbb
fsubrs
inc
cmpsb
in
test
mov
je
xchg
xchg
xor
inc
mov
jne
int3
jmp
call
enter
sbb
jne
sbb
mov
and
pop
push
sub
mov
out
cmc
ljmp
lahf
stos
pop
jne
sub
fisubrs
mov
sar
lahf
addb
icebp
pop
fisubrs
mov
fdivrs
insl
dec
xchg
cmp
inc
dec
outsl
pop
push
std
jne
fdivl
daa
jo
es
pop
adc
outsb
icebp
data16
dec
and
outsb
out
out
add
sub
insb
or
xchg
les
pop
pop
and
xor
push
pop
inc
xchg
push
cmp
cmp
cmp
movsb
adc
divl
and
lcall
and
xor
lcall
imul
mov
cmpsb
ja
lds
call
in
cld
xor
repnz
mov
addr16
rorb
mov
and
mov
or
xor
adc
mov
mov
cwtl
aas
rorl
mov
dec
or
pushf
in
or
es
adc
push
xor
mov
fbstp
fst
fisubs
out
inc
fwait
jae
bound
inc
daa
out
pushf
xchg
in
or
add
jmp
sub
mov
fwait
je
loopne
loop
ret
scas
ret
insb
push
in
xor
sbb
add
cmpsl
shr
xor
dec
cmp
push
jae
mov
popa
cmpsb
mov
out
and
aas
add
test
or
in
add
pop
das
sub
xor
push
imull
incb
jge
adc
and
pop
xchg
ret
cmpsb
sbb
lret
pop
shlb
push
mov
sub
cmp
jae
add
dec
pop
cmp
icebp
sbb
pop
push
fs
inc
enter
int3
imul
cli
negb
xor
dec
popa
mov
aam
sahf
sbb
inc
in
mov
cmp
push
fsts
adc
andl
jge
lods
cltd
dec
shll
push
mov
adc
fistps
mov
sahf
cmpsl
sbb
add
movsb
fistl
jne
jecxz
or
mov
sarl
fdivl
xor
ficoms
push
popa
jmp
add
int
push
inc
lret
mov
add
mov
push
dec
sahf
lods
push
mov
loop
dec
fcmovnbe
fcmovb
ret
orb
dec
aad
add
jp
rclb
rcr
popa
ja
and
mov
lret
cli
fisttpl
ret
mov
push
popa
adcb
lcall
loop
out
lret
in
ret
pop
add
mov
sbb
push
out
fisttpl
out
xlat
dec
jno
add
lahf
mov
adc
ja
cmp
imul
loope
inc
test
fwait
push
pop
and
scas
in
and
std
cmp
push
xlat
pop
mov
stos
pop
gs
xchg
jne
push
shrb
and
mov
adc
rol
xchg
push
js
lds
gs
outsb
and
mov
push
jp
rorl
push
in
loop
repnz
jle
imul
dec
or
inc
lahf
pop
mov
lods
mov
insl
cld
mov
mov
aas
fistpl
aaa
xchg
loopne
ja
pop
cmc
pop
stos
xor
sti
mov
mov
mov
lock
sbb
jno
test
sbb
and
pop
lock
pop
rcr
mov
xlat
inc
mov
push
push
xchg
push
fnsetpm(287
cli
mov
mov
dec
ficomps
sbb
inc
push
cmp
call
inc
mov
cli
cmp
out
inc
jl
cmp
push
pop
mov
add
out
out
imul
in
add
cmp
icebp
xor
push
mov
in
cmc
leave
rcl
mov
push
xchg
xor
mov
jb
clc
inc
sbb
ret
clc
lods
shrb
cld
rcrb
mov
xchg
mov
test
mov
jl
sbb
xchg
mov
aam
cmc
popa
lcall
push
lods
add
sub
lea
jp
mov
xchg
mov
inc
test
mov
and
lret
push
out
sbb
ss
enter
sarb
mov
push
negl
shlb
lret
sti
call
pop
rorb
pop
test
test
repz
cltd
ds
mov
insl
mov
lret
in
insb
cmpsl
or
mov
loopne
scas
xchg
pop
stos
lods
mov
mov
pushf
cmp
orl
bound
mov
daa
cmp
mov
fldl2t
subb
xor
jg
push
mov
ss
mov
mov
pop
fldt
add
adc
xor
xchg
popa
sub
sbb
mov
popa
fwait
mov
mov
rclb
or
sub
mov
or
xchg
mov
pop
mov
les
mov
insb
push
cmc
mov
push
fwait
dec
lcall
push
dec
adc
mov
pop
sub
cmp
xchg
sarb
shl
popa
xchg
pop
mov
jne
adc
cmpsb
add
sbb
das
bound
and
ljmp
jecxz
and
mov
add
cs
adc
jnp
fildl
xor
push
cmc
pop
insb
cmp
push
xchg
xor
dec
out
jp
fcmovnu
jbe
jb
mov
lods
or
sub
push
in
int
lcall
out
mov
sbb
cmpsb
movsl
xor
push
sbb
and
xchg
mov
loopne
adcb
repnz
xor
out
jecxz
xlat
adc
sti
aas
popa
aad
adc
popa
xor
cmp
lock
insb
popf
and
enter
es
sub
enter
push
scas
sub
jle
out
inc
fs
out
and
mov
adcl
or
std
repnz
cmpsl
mov
lcall
mov
pop
lock
aam
mov
push
adc
insb
sub
rcrl
icebp
daa
enter
add
hlt
xchg
daa
pop
inc
loope
ret
scas
gs
rclb
add
push
jno
and
jae
rcrl
shll
test
add
mov
dec
or
mov
jae
scas
inc
scas
enter
cmp
out
addr16
jle
xchg
loope
mov
mov
imul
in
cld
mov
xor
sbb
jg
and
aas
incl
mov
int
xlat
jae
inc
fmuls
and
push
dec
fimull
dec
lret
popa
sub
cmpsb
imul
mov
xchg
cmpsb
and
xlat
mov
sub
pop
ds
cmp
xchg
les
mov
imul
mov
xchg
push
cmpsl
adc
mov
incb
mov
mov
jae
hlt
mov
xor
movsb
ret
add
sub
pop
jae
idivb
sub
fsubs
xor
lods
pusha
iret
out
ss
jae
xor
xchg
mov
xchg
sub
rolb
jae
mov
add
sub
jo
aam
inc
jae
enter
xchg
xchg
mov
imull
shrl
in
outsb
les
mov
insb
mov
sbbb
movsl
rcll
arpl
jns
jge
hlt
sbb
cld
push
sbb
cltd
cmp
pop
xchg
outsb
cmp
mov
add
mov
loope
mov
xor
sbb
mov
dec
ret
aad
pop
lds
in
ret
or
inc
mov
inc
push
xchg
jle
insl
push
je
mov
push
sarb
cs
pushf
cmpsb
ret
dec
dec
mov
xor
mov
aaa
xor
push
jb
and
adc
cltd
test
es
cmp
imul
mov
xlat
daa
les
jmp
cld
add
fbld
cld
leave
or
mov
push
mov
xor
sar
jbe
scas
test
or
sbb
lcall
roll
je
test
mov
lods
data16
sbb
jae
add
dec
insl
pop
lcall
pop
xlat
leave
arpl
jecxz
cmpsb
roll
orb
jge
mov
ds
sbb
hlt
add
mov
fs
popa
test
cmp
fistpll
call
leave
fadds
push
dec
fld
push
je
mov
pop
mov
fs
les
cmp
sti
add
mov
sub
sti
jge
push
or
imull
leave
push
sbbb
jmp
and
sub
cs
and
cmc
mov
fwait
mov
inc
gs
gs
sahf
sbb
aaa
shl
je
imul
pop
mov
xchg
dec
icebp
or
mov
call
subb
mov
aam
push
in
jne
icebp
inc
rol
pushl
xchg
inc
test
shrb
loope
adc
call
ds
hlt
and
pop
mov
xor
jne
mov
in
dec
fcomip
jnp
dec
pop
in
push
imul
dec
call
rcrb
inc
and
push
add
jns
test
cmp
xlat
add
ss
add
pop
pop
sarl
adc
and
dec
pusha
sahf
lret
bound
roll
movsl
mov
cmp
outsb
test
imull
lcall
insb
shlb
es
sub
add
mov
loopne
xor
or
lea
sbbl
and
mov
push
mov
jno
out
loope
outsb
fildll
xchg
and
mov
pop
push
mov
mov
out
flds
xchg
int3
cmp
fisubs
leave
push
nop
sbb
hlt
sbb
sbb
scas
mov
scas
arpl
loopne
in
fldt
pushf
push
call
mov
jp
orb
push
sub
jmp
and
xor
enter
inc
mov
jg
mov
outsl
les
sar
bound
ret
push
push
cltd
pusha
lea
fisubrs
jecxz
jmp
fwait
cmp
pop
add
mov
jae
jp
ljmp
jbe
shll
xlat
das
xor
lock
add
xor
ds
sti
pop
fsts
loopne
jle
push
push
sbb
rcll
lods
jp
loopne
mov
inc
adc
push
shr
dec
push
dec
xchg
xchg
test
add
push
push
cwtl
cmp
fwait
cmp
int
das
in
xchg
fcomps
out
pop
adc
scas
sub
and
xchg
movsl
movsb
rorl
mov
push
test
or
daa
gs
pop
mov
adc
inc
cmp
adcb
fidivrs
clc
add
loop
test
xor
xor
test
pushf
dec
mov
ja
dec
jnp
xor
add
mov
arpl
pop
jle
loope
pop
sub
add
hlt
movsl
add
push
jne
and
in
jne
lahf
add
push
inc
push
inc
int3
insb
sub
dec
xchg
sbb
loope
mov
xchg
push
ret
mov
sahf
into
clc
lret
mov
in
mov
mov
ss
dec
or
jp
daa
jge,pn
fwait
jl
popa
and
ss
cmpsl
mov
mov
imul
adc
jecxz
shrb
cmpsb
aas
out
xchg
xchg
dec
sbb
mov
mov
psubusw
sub
stos
mov
aad
pop
test
pop
movsb
fsubr
cmp
mov
cmp
mov
jbe
xchg
pushf
cmpsl
xchg
mov
movsl
iret
enter
push
and
xchg
fstpt
sub
push
push
lods
jecxz
fstpt
shr
in
lcall
add
dec
cmp
leave
xor
sbbl
repz
push
xchg
xlat
push
mov
iret
adc
into
pusha
mov
daa
xor
mov
les
push
mov
dec
cmpl
dec
ljmp
sbb
test
mov
dec
scas
push
repz
xor
jno
shrb
cmp
addr16
inc
test
test
adc
mov
fisubl
cmp
pop
xchg
jae
mov
pop
cmc
leave
nop
nop
ja
push
pop
xchg
popa
out
jl
mov
sbb
mov
add
je
and
and
leave
jle
int
dec
inc
pop
scas
inc
por
pop
xchg
lods
test
test
adc
stc
xchg
cmp
out
sbb
bound
xchg
mov
xor
pcmpgtd
js
rcll
in
jp
sub
push
add
push
dec
sbb
outsb
fcmovb
mov
aaa
sbb
lahf
sub
test
mov
mov
cmpsl
jmp
jl
aad
jnp
mov
or
sahf
and
gs
cs
in
fimuls
dec
test
mov
jno
push
sarb
pop
shr
pop
pop
xor
jns
jge
ficomps
dec
scas
cmp
jecxz
sub
inc
nop
dec
add
cli
dec
popf
pusha
push
fisubl
movsl
sti
into
push
mov
stc
cmpsb
xchg
jns
dec
rolb
xchg
les
test
iret
jbe
and
popa
sysexit
loop
sub
insb
and
xorl
ljmp
xchg
push
mov
xchg
jecxz
fimuls
mov
enter
movsb
repz
repz
dec
pop
adc
fwait
gs
and
or
add
je
aaa
xchg
jge
lods
test
sub
dec
pop
push
mov
add
jae
jae
xor
dec
dec
ja
ljmp
xlat
into
or
jbe
jle
and
stos
mov
mov
aad
adc
fsubrs
jmp
xchg
mov
pushf
or
fnsave
cmpsb
inc
data16
dec
mov
inc
scas
cmpsb
xchg
dec
lret
shl
adc
xadd
xchg
lods
adcb
aam
xchg
xchg
gs
int3
sub
push
sbb
pop
in
cmpsb
add
movsb
popf
daa
or
cs
cli
les
mov
in
clc
imul
ss
ret
push
and
insb
jo
repz
cltd
sbb
cmp
and
fs
or
pop
sbb
mov
sbb
addl
enter
ret
test
jb
xchg
ret
add
sub
dec
mov
scas
fs
ficompl
nop
sub
shrl
shlb
ror
jmp
ficomps
xor
pop
cmc
aaa
xor
mov
pop
negb
dec
lahf
or
out
ret
xor
std
pop
mov
push
les
push
movsb
pushf
int3
mov
mov
mov
shll
lods
inc
add
mov
mov
or
icebp
fcoml
notl
fdivrs
in
cltd
mov
dec
jecxz
dec
repnz
sub
jo
testl
mov
loopne
fstpl
inc
rcrl
shl
jne
pop
sbb
sbb
fimull
mov
push
jo
test
into
push
mov
out
jns
hlt
fildl
loop
loopne
repnz
xchg
dec
pop
shll
arpl
rorb
les
divl
pop
mov
icebp
sbb
sub
sub
loope
dec
insl
push
sbb
les
add
fwait
push
xchg
fndisi(8087
or
add
xor
jl
aaa
mov
mov
push
iret
clc
or
int
mov
sbb
pushl
shlb
repnz
addl
add
outsb
lods
mov
jp
bound
scas
cmp
repz
lea
insl
insl
dec
in
pushf
jg
xchg
insb
cmp
out
adc
movsl
ja
ja
ret
cmp
out
pop
sbb
fisttpll
mov
xlat
mov
add
in
pop
std
test
js
jg
outsl
mov
mov
test
ljmp
pop
jnp
xor
in
ret
je
fiaddl
lods
and
repnz
mov
stos
std
pop
mov
mov
js
scas
lret
xor
aad
sub
insb
insb
xor
lcall
or
mov
pop
sub
sub
mov
dec
mov
push
mov
sbb
mov
outsl
out
mov
xchg
out
dec
push
lret
and
std
xor
push
pushf
xchg
jo
cwtl
or
popf
jp
imul
scas
bound
lods
test
mov
rcrl
cmp
dec
dec
inc
push
mov
jbe
xchg
outsl
clc
jmp
pusha
int3
mov
pusha
loop
js
loope
mov
repz
jecxz
jne
loop
jle
sbb
cltd
dec
sti
mov
dec
xchg
xchg
sub
or
orl
push
push
stos
mov
insl
sub
shlb
cmp
cmpsb
lock
push
sbb
test
mov
pusha
movsb
pop
shll
cmp
iret
cld
inc
inc
pop
mov
or
xor
icebp
mov
rorb
mov
pop
dec
jbe
cmc
and
adc
pop
bound
pop
in
pusha
mov
data16
mov
or
push
aad
or
pop
mov
ljmp
sub
xor
add
mov
cmp
adc
dec
jae
mov
cmpsl
popa
data16
jne
hlt
sub
mov
xchg
fwait
into
lret
stos
mov
aam
ret
xchg
cmp
leave
enter
push
rclb
fbstp
jg
pushf
leave
negl
ljmp
dec
aad
and
mov
les
inc
fldl
test
xor
dec
cmp
jnp
lods
leave
xor
xchg
mov
jb
pop
sti
mov
lret
shlw
mov
enter
lcall
jp
sbb
sbb
lea
aaa
or
cmpl
shlb
insb
mov
xchg
mov
rorl
push
mov
cmp
sbb
mov
or
and
mov
rcr
sbb
stos
mov
mov
imul
fdiv
cmp
inc
outsb
pop
ss
xchg
dec
push
popa
leave
mov
xchg
mov
sub
test
mov
scas
in
lcall
rclb
jbe
mov
data16
call
repnz
mov
shrb
outsb
jle
and
or
dec
jle
mov
push
imul
jbe
fisttpl
loop
mov
xchg
pop
sbb
adc
cmp
push
sub
cs
mov
xchg
push
in
push
or
mov
push
fidivrs
mov
xchg
lock
pop
mov
sub
jno
fcmovnu
or
dec
and
lret
cmp
mov
or
repnz
es
sub
lahf
pushf
inc
popa
outsb
dec
addr16
push
pop
adc
ljmp
push
les
sbb
pusha
clc
sub
mov
loopne
cmp
nop
mov
es
negb
ret
push
sub
in
dec
cli
fistpl
lods
mov
sbb
mov
xor
jmp
cmp
dec
fldenv
fisttpl
dec
ficompl
fs
je
inc
sub
push
jle
dec
fildll
push
bound
movsb
lods
push
add
xor
jge
fcompl
int
subb
cmp
addr16
lea
fcoml
pop
dec
jno
in
fistl
jnp
in
push
fsubrs
xchg
adc
imul
into
aas
jbe
js
adc
rcrb
repz
fidivl
test
add
mov
adcb
or
dec
push
inc
mov
jecxz
repnz
mov
adc
and
adc
xchg
cmp
js
adc
jecxz
xchg
mov
fcmovnb
jne
out
loopne
xor
das
xor
jg
mov
ja
mov
lods
push
and
ds
aas
pop
xlat
popf
aas
inc
adc
xchg
divb
popf
xor
loope
mov
sbb
mov
push
fcmove
and
outsl
mov
adc
dec
adc
hlt
mov
pop
cmp
sub
les
repz
lret
add
sub
scas
in
insl
imulb
jecxz
push
movsb
add
loope
mov
movsb
sahf
fcmove
fwait
mov
int
ss
inc
jae
sbb
movsl
shl
xchg
int3
mov
add
pop
notl
int3
lahf
xchg
jecxz
mov
mov
sahf
frstor
sub
sub
es
push
sbb
or
arpl
mov
notb
lock
add
imul
and
xchg
adcl
ds
loopne
sbb
jle
mov
cli
mov
push
rorl
jecxz
outsl
xchg
dec
jmp
jno
xchg
xchg
jbe
leave
inc
mov
fnstcw
sub
adcl
sbb
jne
ret
or
dec
shrb
movsb
movsb
mov
and
notl
lods
lcall
pop
push
sbb
and
xor
sahf
ja
aas
sub
mov
xor
jle
pop
inc
mov
rclb
popa
sahf
flds
aas
ljmp
fisubrl
jg
add
das
jge
sub
or
out
stos
loop
mull
testl
xor
cld
movsb
les
jnp
jp
aad
sub
gs
add
cmpsl
and
orl
xchg
fwait
fs
lea
push
sbb
out
movsl
repnz
push
roll
jmp
in
repnz
sbb
sub
fdivs
and
adc
shr
jmp
leave
std
mov
mov
mov
sbb
sub
sub
and
sub
lret
int
ja
dec
jns
in
mov
into
out
lds
test
xor
imul
pop
jnp
adc
sbb
mov
pop
jg
push
jno
push
add
js
mov
lock
outsb
pop
xchg
jne
fwait
dec
aaa
xor
loopne
sub
mov
cltd
mov
negl
dec
mov
xlat
add
fisttpl
mov
mov
daa
dec
aad
push
inc
sar
mov
adc
gs
mov
dec
pop
test
into
jb
std
cs
movsl
mov
out
lahf
mov
mov
ret
mov
push
sarl
cmc
xchg
fincstp
testb
scas
cmp
cmp
xchg
cli
or
ffree
pop
leave
and
ret
js
mov
pop
imul
sbb
loop
pop
jbe
mov
rorl
inc
fdivrs
adc
adc
or
inc
push
sbb
aaa
nop
inc
mov
sarl
mov
out
je
js
fbld
fisttpl
jmp
mov
pop
xor
adc
jne
mov
inc
dec
sub
jnp
mov
mov
cmp
sub
notl
cmp
adc
shl
jo
or
in
add
adc
xor
ds
push
movsb
and
mov
pop
push
add
jle
sub
test
mov
repz
adc
rol
in
add
loopne
and
or
jne
cmp
jo
mov
push
insl
scas
add
push
xorb
add
xchg
mov
data16
in
mov
fsubs
cmp
jecxz
cmp
cmp
xor
cli
je
cltd
aam
inc
inc
jb
int3
call
mov
push
adc
mov
xor
fistl
scas
inc
mov
mov
cmpsb
push
icebp
addr16
mov
clc
adc
gs
push
lret
sub
dec
dec
lods
add
inc
rolb
insl
or
pop
and
imul
shll
int3
scas
call
dec
fs
push
cli
test
bound
lret
fwait
scas
cmpsl
andb
jns
in
jns
sub
sub
das
and
mov
sub
push
and
pop
out
imul
nop
outsl
dec
push
pop
fcoms
gs
aaa
out
and
add
pop
fstpt
push
aas
out
loope
clc
jae
sarb
mov
arpl
popf
int3
enter
out
mov
lret
movsb
push
shrb
add
mov
fdivrs
loopne
sub
fildl
push
test
xor
jp
add
decb
pop
ljmp
pop
sub
inc
jbe
cmpsb
dec
xchg
mov
jno
mov
repz
sbb
mov
cmpsl
jb
dec
inc
sub
into
pop
cmpsb
cmp
aad
mov
mov
hlt
test
and
mov
sahf
inc
jl
call
push
and
jmp
sbbl
add
test
mov
stos
push
sub
lea
arpl
scas
or
mov
add
xor
mov
sub
add
sub
cmp
in
movsb
adc
or
sub
in
xchg
mov
mov
fildl
mov
cs
fisubl
ret
and
jb
cltd
addr16
adc
jecxz
push
stos
imul
ret
test
lahf
mov
add
sti
lret
push
ficoms
pop
ljmp
ss
xor
aaa
out
dec
data16
lret
jle
cs
push
clc
mov
xlat
push
in
mov
cmpsb
dec
addr16
or
inc
xor
gs
out
movsb
mov
stos
dec
sbb
mov
cmp
in
mov
jne
sarl
inc
pop
pop
out
and
sub
pop
gs
fsts
lods
insb
mov
dec
hlt
jns
or
push
push
ss
dec
jecxz
repz
mov
fisubrs
dec
pop
out
cmp
and
inc
outsb
pop
aam
or
pop
cmp
adc
repnz
in
in
mov
inc
and
push
xchg
sbb
fldcw
add
repnz
call
xor
mov
push
mov
adc
mov
ss
push
imul
mov
xchg
in
icebp
push
imul
jmp
pop
or
ja
adc
xchg
pop
mov
repnz
pop
aaa
cwtl
mov
or
in
popa
push
lods
jge
mov
insl
mov
punpcklwd
int
mov
dec
xor
bound
daa
loope
and
xor
mov
and
inc
mov
ret
dec
push
rolb
outsb
jp
push
inc
mov
rcr
aaa
mov
xor
inc
inc
push
rorl
xor
jecxz
sbbb
push
aam
push
shrb
cli
adc
scas
and
and
loop
cltd
inc
and
out
lock
insl
mov
push
mov
lds
aad
rorb
ret
pop
pop
hlt
daa
ljmp
or
push
sub
roll
insb
xchg
dec
xchg
mov
sub
sbb
add
sbb
mov
ret
movsb
enter
dec
out
add
dec
arpl
pusha
jae
jl
rcll
out
aas
mov
fsubp
cs
fwait
adc
inc
cmp
dec
and
dec
fst
pop
ja
sarb
or
call
mov
stos
jbe
fldl
mov
cli
lahf
testb
add
sbb
roll
sbb
push
loop
and
idivb
push
outsb
cmp
fldl
aas
sub
pop
arpl
mov
dec
nop
inc
mov
cmp
mov
push
cmp
jp
jbe
jl
cwtl
cmp
sbb
repz
out
out
push
fidivrs
mov
adc
in
inc
push
mov
adc
pop
xor
popf
int3
push
out
fldl2t
shll
add
in
roll
imul
cmp
leave
xchg
fdivrl
fdivrl
cmpb
and
out
xchg
inc
insb
sahf
test
int3
jno
jb
mov
push
lret
mov
sbb
mov
movsb
ret
pop
sub
pop
and
cmpsl
rorl
nop
iret
es
mov
pop
arpl
push
out
pop
push
push
mov
cli
insb
add
int3
inc
popa
imul
jl
pop
ret
icebp
scas
mov
push
hlt
popf
testl
pop
lcall
je
mov
dec
test
pushf
mov
data16
sbb
sahf
sub
lret
das
mov
jg
mov
xchg
mov
cli
cmc
shl
hlt
inc
jnp
or
test
adcb
add
nop
cmpsl
jno
mov
aas
notb
das
or
mov
sbb
mov
pop
push
sti
out
and
lret
and
push
push
push
jno
test
jnp
cmp
into
jns
and
mov
clc
aad
test
loop
imul
push
iret
jecxz
push
aad
into
mull
lcall
jae
or
jb
jb
push
xor
mov
dec
sub
lahf
add
lahf
sub
lea
jge
and
mov
sub
or
mov
lea
mov
iret
dec
xchg
outsb
mulb
ret
addl
xor
cmc
add
sahf
mov
lcall
sbb
mov
mov
mov
ljmp
lods
xchg
popf
stos
popa
mov
sub
lahf
sub
ja
inc
es
jae
imul
scas
push
mov
mulb
popa
fidivrl
frstor
mov
mov
stos
sahf
in
aam
sahf
mov
pop
jp
cmp
ja
and
and
fildll
mov
icebp
add
adc
dec
mov
clc
mov
aaa
xchg
mov
shr
push
add
push
xor
jl
das
sub
mov
and
decb
cmp
dec
dec
push
xor
sbb
cmp
push
mov
mov
xchg
je
cmp
lahf
dec
test
pop
aad
lock
push
imul
push
push
fsubl
mov
repnz
xor
add
into
xchg
mov
push
sbb
test
sbb
and
rcr
add
cmc
shll
inc
fidivs
loope
push
or
mov
jecxz
push
xor
xchg
mov
and
pusha
pop
leave
pop
call
scas
mov
enter
outsb
jp
push
mov
fisttps
pop
scas
pop
loope
dec
jmp
cmp
roll
cltd
int
cs
testl
jbe
push
addr16
lahf
pop
dec
ficoms
sbb
or
imul
xor
int
jge
pusha
dec
pop
push
repnz
rcrb
push
aad
dec
add
aad
mov
pop
jmp
xlat
cli
les
jmp
sub
dec
mov
ljmp
out
stc
repnz
gs
lret
ds
and
and
int
mov
das
push
jae
sbb
mov
hlt
inc
ficompl
sbb
dec
push
xor
enter
add
pop
int
cli
pusha
lods
jp
mov
sti
mov
dec
dec
pop
sbb
call
xchg
adc
imul
test
gs
push
stos
pusha
lds
push
scas
loopne
sub
mov
mov
jo
cmp
sub
sbb
dec
scas
test
ljmp
inc
xchg
cli
or
inc
in
dec
and
jne
add
adc
and
sbb
sbb
cmp
jg
clc
mov
pop
sub
int3
inc
fisttpll
test
adc
xchg
and
xorb
add
ljmp
sbb
testl
cli
mov
inc
je
lds
xchg
fsts
or
mov
stc
icebp
sub
cmpsl
cmp
inc
xchg
js
add
mov
push
push
mov
cltd
mov
push
mov
fwait
stos
inc
cmc
xchg
shl
mov
into
stc
fcmovbe
mov
mov
ljmp
sti
iret
arpl
jns
jns
push
dec
inc
out
bound
rclb
rcl
das
movsb
sbb
mov
pop
arpl
sub
into
mov
fldenv
adc
dec
push
add
jae
cmp
mov
dec
pop
sub
pushf
popf
dec
das
pusha
lock
cmp
out
xchg
sbb
in
les
jmp
xchg
fidivl
orb
fsubrs
mov
inc
cld
pop
pop
movsl
aas
jnp
rcr
out
int
xor
sub
je
sub
ja
cld
fstp
jecxz
loopne
inc
jno
push
pop
bound
cmp
cmp
jecxz
push
test
jns
mov
test
and
js
jle
out
xor
mov
inc
int3
hlt
sbb
and
inc
fs
jmp
cs
inc
and
clc
mov
nop
xchg
mov
sahf
cmp
push
fldt
push
xor
fmul
leave
out
dec
js
lea
mov
ss
fdivrl
pop
call
ret
push
ss
push
push
cld
xchg
sbb
add
fsub
mov
movsl
push
add
mov
bound
sti
pusha
push
and
jg
jnp
and
or
jnp
inc
hlt
dec
mov
mov
adc
add
xchg
pop
xchg
cmpsl
rorl
mov
pushf
outsb
in
cmp
cmpsl
test
sarl
idivb
into
cmp
and
rclb
pusha
mov
mov
aam
divl
cmp
int
dec
data16
cmp
adc
push
roll
mov
enter
into
lahf
adc
jp
sarb
and
insb
push
mov
lcall
xlat
sarl
mov
fldl
mov
shrb
mov
mov
scas
push
fwait
out
outsb
mov
outsl
push
push
into
cmpsb
outsb
inc
popf
popf
push
xchg
or
cmp
pop
lods
lds
je
adc
fadd
pop
jge
ljmp
jecxz
rorl
inc
fwait
pop
jno
mov
fs
push
dec
cmpsb
loope
sbb
xor
jno
cmp
mov
stos
sbb
call
dec
fidivs
xor
add
ffree
in
cli
jle
js
lret
mov
push
popa
popa
daa
dec
cmp
pop
les
scas
out
jp
pushf
xchg
lret
icebp
add
scas
xor
es
push
sqrtps
pop
adc
jnp
enter
jns
out
rorl
or
repnz
mov
add
rorl
and
out
loope
cld
and
ret
inc
adcl
jge
aad
sbb
repnz
outsl
or
ja
push
inc
sar
or
jb
xchg
xorb
test
fimuls
fsubrl
jp
loope
cmp
movsb
insl
xchg
adc
adc
mov
dec
xor
sbb
clc
cmp
jb
cli
push
pop
negb
aas
inc
jne
fisubrl
insl
addb
cwtl
popa
mov
out
push
leave
xor
sbb
cltd
mov
fcoms
int
stos
aas
inc
flds
adc
cld
jae
in
jo
or
push
fwait
pop
ljmp
out
pop
inc
or
dec
fisttpl
int3
iret
xchg
addr16
sbb
loop
out
sub
xchg
cmp
inc
fs
jmp
push
aaa
add
sbb
pop
pop
adc
bound
std
out
mov
js
adc
pushf
xchg
scas
add
push
push
leave
aam
adc
stos
pop
imul
call
push
mov
cld
cmpsl
push
cmp
fisubs
inc
ss
and
lods
sahf
cs
jg
inc
xor
pop
and
push
and
inc
add
mov
fildl
jns
xchg
jg
dec
and
je
scas
sub
popf
into
insl
sahf
movhps
das
push
test
and
fnstsw
adc
push
fucomip
ja
rol
xchg
push
add
add
fistpl
and
cmp
roll
mov
cli
fistps
test
lds
sub
jbe
sub
and
push
cmpsl
inc
xchg
fcomip
push
inc
add
inc
rorl
out
frstor
inc
pop
and
lahf
iret
loop
mov
inc
stos
clc
xlat
in
xchg
xchg
sti
inc
rorb
ja
pop
xchg
int3
mov
mov
daa
lds
inc
dec
jns
xor
mov
or
adc
mov
fsubrs
xchg
test
xor
cmpsb
data16
data16
pop
mov
push
sbb
mov
aas
insl
movsb
mov
imul
or
test
iret
push
dec
inc
jle
xlat
sub
xor
ret
jle
mov
and
or
xchg
xchg
jl
dec
add
sub
test
loope
mov
cmpl
cmp
repz
pop
sti
idivb
inc
inc
push
int
xchg
mov
test
mov
ret
xor
test
cmpsl
push
ja
cmpb
jb
sbb
jg
and
adc
out
out
push
mov
jp
jo
push
add
dec
cmc
out
je
outsb
mov
dec
jno
arpl
aam
add
out
popf
frstor
sahf
icebp
in
lret
popf
dec
fdivrs
xor
adcb
and
mov
cwtl
mov
mov
push
xor
mov
dec
inc
lret
fistps
and
xorb
test
daa
sub
adc
mov
out
xor
fsubl
pop
cmpsb
adc
cwtl
out
repz
repz
aam
gs
cwtl
jecxz
call
or
popf
sbb
xchg
popl
icebp
dec
in
dec
push
ret
add
cmpsb
popf
mov
hlt
mul
mov
mov
mov
insl
cmp
jmp
scas
cltd
aas
push
sbb
pop
popf
out
fisubl
push
cmp
test
movsl
imul
cmp
in
in
pop
adc
xor
rorl
setp
in
mov
pause
in
push
and
sahf
inc
outsl
outsb
js
add
inc
pusha
dec
push
scas
sarl
in
outsl
dec
shlb
addw
ret
adc
mov
int
add
pop
scas
push
movsb
imul
inc
cmp
lock
stos
xchg
jl
pop
cmp
stos
test
into
mov
incb
push
pop
mov
push
adc
adc
scas
mov
mov
sbb
push
lock
fcmovnb
adc
jp
sahf
push
mov
push
test
ret
push
push
mov
push
mov
mov
loope
pop
sbb
xchg
call
xchg
lock
arpl
cld
jo
enter
dec
cmpsb
or
movsb
push
adc
push
sti
add
or
mov
jmp
popf
scas
jbe
xor
fpatan
xchg
jb
add
pop
push
mov
sbb
pop
cmc
push
dec
adc
lock
mov
ja
dec
negl
cmpl
inc
imul
xchg
mov
sub
add
mov
or
std
dec
dec
shrl
adc
sti
sub
add
cmpsl
jnp
add
adc
xor
xor
outsl
push
ja
loop
divl
into
out
clc
mov
sbb
hlt
jno
pop
sub
sub
sbb
sbb
stc
sar
push
popl
into
sub
scas
cmp
ret
and
dec
je
push
scas
xchg
push
push
test
in
ja
mov
xchg
les
int
push
jg
mov
jl
lds
jae
lods
add
cli
in
mov
out
mov
mov
push
test
dec
pop
imul
ret
mov
or
repz
add
imul
insb
lods
out
inc
inc
xchg
add
push
pop
out
imul
sub
or
and
and
cs
lcall
pusha
inc
jl
and
and
imulb
and
or
mov
pop
outsl
inc
or
lds
ret
sbb
cmp
jns
jbe
popf
lret
jecxz
test
mov
leave
xchg
fsubl
fwait
cmc
push
push
stos
pop
fwait
sub
mov
gs
scas
fld
les
xor
hlt
mov
xlat
jge
fwait
inc
imul
iret
jmp
scas
scas
repz
lret
mov
int
pop
lock
push
mov
leave
adc
mov
lahf
lea
nop
ficoml
cwtl
cmp
dec
push
out
sub
in
mov
push
jle
fmuls
int3
sub
cmp
jb
mov
jge
push
cmc
xchg
ljmp
aaa
leave
mov
fucomi
in
pusha
daa
idivl
inc
mov
cmp
sub
pushf
and
mov
xor
mov
add
mov
pop
es
out
inc
outsb
inc
inc
pushf
fistps
stos
mov
lods
aas
mov
lcall
pop
rclb
dec
fldl
ffreep
les
mov
ret
outsl
mov
xlat
xchg
adc
daa
xchg
mov
inc
ret
clc
cwtl
push
loopne
mov
subb
hlt
jae
iret
adc
insb
adc
sbb
mov
xchg
aas
test
jle
and
mov
fucom
add
cmpb
lret
dec
mov
mov
push
adc
stos
adc
sti
jne
inc
xor
sub
fisubrs
jbe
mov
icebp
xor
mov
mov
stos
sbb
fmuls
mov
es
lcall
sub
clc
mov
push
pop
xor
cmpsb
xor
out
mov
hlt
inc
mov
xchg
fcom
std
orb
inc
in
jnp
jmp
xlat
mov
outsl
inc
mov
das
int
jge
dec
pop
sbb
xor
sarl
movsl
push
outsl
or
push
sbb
or
scas
inc
js
loope
mov
sub
add
into
cmp
adc
addr16
js
movsl
dec
mov
into
mov
xor
push
dec
ret
repnz
decl
imul
sbb
andb
scas
sti
popf
add
sti
jbe
sti
pop
stos
cmpb
mov
mov
mov
xchg
daa
add
jae
xor
clc
ljmp
add
daa
stos
test
aaa
jg
sub
in
ret
stos
mov
cld
or
call
ds
fs
adcl
dec
test
sti
fnsetpm(287
loop
jo
js
xor
push
test
cmc
int3
sub
aam
push
cli
pshufw
hlt
out
or
cmp
cmp
push
push
into
xor
mov
jle
test
mov
lea
je
out
xor
dec
aaa
mov
cwtl
aam
xor
int
jns
shrb
loope
sbb
sub
xchg
ljmp
addl
cmp
stc
lret
cmp
sahf
addr16
insb
aam
js
cmc
out
pop
movups
jbe
mov
push
inc
jmp
rcrl
lret
mov
adc
mov
sbb
mov
les
fstpl
sub
repnz
ret
cld
sbb
xor
aam
pop
lds
cmp
jmp
push
insl
test
lds
in
out
mov
loopne
and
lret
enter
cwtl
push
pusha
sbb
in
sub
dec
dec
orl
mov
pop
sub
scas
xchg
push
and
iret
outsl
xor
inc
mov
mov
jg
into
pop
fsubl
loopne
jp
das
in
fstps
and
or
shll
shlb
jg
hlt
adc
xchg
jno
mov
add
cmpsb
mov
xchg
ljmp
jbe
leave
cmp
mov
ss
negb
pop
xor
sub
and
mov
adc
mov
outsb
repz
xchg
jbe
mov
das
inc
xchg
push
lds
inc
dec
xor
push
shll
hlt
sub
iret
sbb
adc
out
pop
fwait
push
hlt
lret
lret
in
fsubrl
pop
lds
mov
or
xchg
idivb
mov
cmp
fisttpl
inc
mov
and
loope
dec
add
push
adc
scas
push
or
popa
ja
push
loop
sub
icebp
pop
inc
push
push
pop
cmpsl
sahf
and
inc
clc
pop
push
dec
loop
int3
adc
sar
ss
mov
rol
flds
cmp
rol
loope
xchg
cltd
add
xchg
xchg
out
dec
jmp
fbld
iret
jecxz
movsl
xor
add
loope
lods
sbb
and
cmp
mov
les
ja
mov
enter
bnd
inc
scas
jno
push
mov
xor
sub
sub
or
testb
fildl
repz
jb
int
dec
sub
fnstenv
mov
aam
mov
xchg
xchg
push
dec
mov
je
cmp
pop
push
cld
xor
ljmp
out
adc
mov
enter
or
cmp
mov
inc
xor
inc
lods
dec
mov
imul
fadd
add
and
ja
jne
pop
and
in
pop
lret
test
mov
sub
pop
jg
aam
fs
pop
dec
pop
out
jle
push
pop
pop
xor
inc
outsl
stos
jbe
es
push
jecxz
push
jb
push
bound
dec
shlb
sub
fneni(8087
and
cwtl
mov
push
cmpsb
cmpsl
lds
mov
lret
clc
iret
or
jg
out
mov
aas
test
xorl
push
sub
xchg
jne
adc
cmp
loopne
pop
aas
insb
add
and
jo
stc
fwait
xchg
ret
sub
fsubl
jbe
sti
xor
sahf
stos
adc
xchg
in
pushf
mov
test
add
adc
push
out
inc
jae
jmp
das
scas
jp
mov
int3
mov
lds
xor
xchg
xchg
lret
xor
mov
test
mov
test
inc
and
leave
bound
fwait
push
ja
mov
in
outsb
mov
insl
xchg
mov
scas
les
mov
push
cmp
pop
aam
movsl
jbe
push
xchg
mov
xchg
sahf
insb
loop
dec
jnp
mov
pop
cmp
inc
add
add
repz
ja
sub
cwtl
xor
dec
outsl
cmp
dec
mov
in
dec
loope
out
xchg
ds
mov
xchg
jb
pop
ja
fcoms
push
insb
add
xchg
mov
aas
loope
aam
fs
sub
mov
adc
xor
cwtl
mov
jmp
pop
mov
mov
or
or
or
adc
adc
xchg
sub
lods
movsl
jl
or
and
push
inc
scas
sbb
cmp
cld
sahf
jbe
and
ljmp
sbb
adc
int
mov
jge
add
mov
jmp
or
gs
test
mov
loope
jecxz
cmpsb
imul
scas
outsb
cltd
sub
test
mov
ret
pop
pushl
loope
mov
cmp
sbb
les
pop
add
and
int3
mov
jp
cltd
mov
scas
inc
rorl
fs
jmp
pop
lds
std
std
xchg
shlb
neg
mov
ljmp
pushf
or
or
push
daa
sub
adc
jne
mov
push
mov
das
pusha
cwtl
outsl
incl
or
adc
lret
aam
and
mov
lea
xchg
sbb
push
out
mov
int
in
stc
or
mulb
outsl
jge
cmp
inc
fdivrl
int
mov
and
xor
lods
add
lods
ror
mov
arpl
test
fcomps
iret
mov
xor
mov
xchg
movsb
jecxz
js
xor
jae
mov
int3
xor
sub
cmpb
ds
pop
pop
fldl
xlat
dec
jbe
jmp
stos
push
inc
jbe
mov
pop
sub
jne
dec
sbb
push
xor
mov
add
pop
inc
dec
mov
cmp
insl
xor
out
mov
fsubs
ja
dec
xor
push
adc
shll
xchg
mov
sub
dec
aam
jne
shrl
sub
cli
lea
lret
stos
sub
fisttps
mov
cmp
push
dec
and
fildl
std
mov
mov
and
mov
add
cmp
cli
adc
movsb
jecxz
jge
stos
pop
and
mov
mov
cli
cmp
inc
addr16
ds
mov
in
add
test
mov
js
adc
loopne
xlat
sub
or
push
dec
lret
jbe
and
jge
out
sti
pop
adc
xchg
push
mov
and
xor
mov
xchg
jl
cmp
jne
sahf
gs
cmpsb
arpl
outsb
and
sub
pop
push
pop
push
out
fwait
jg
loope
cwtl
dec
pop
ror
jge
fnstcw
sub
lea
loopne
push
lds
xchg
ss
mov
sbb
in
cmp
cltd
mov
jnp
sub
gs
xchg
xor
fnsave
mov
mov
adc
ficoml
sub
mov
or
jne
xchg
inc
mov
sbb
jl
jnp
mov
cld
inc
push
inc
rorb
mov
sbb
sub
jne
jmp
xor
adc
cmp
out
sub
rorb
dec
jb
enter
test
adcl
jp
cmpxchg
inc
js
or
fsts
dec
js
faddl
jmp
inc
lods
mov
imul
mov
inc
inc
fldt
insb
fs
xor
orl
jbe
leave
xchg
jl
sbb
scas
nop
jecxz
sub
test
mov
sbb
arpl
lds
arpl
xor
outsb
repz
adcl
push
pop
inc
insb
xor
push
inc
lock
lock
sbb
clc
xor
or
adc
pushf
pop
loopne
jmp
je
daa
pop
mov
jl
aad
cld
enter
pop
scas
jne
jmp
dec
mov
mov
ud1
xor
jns
xor
xchg
cli
test
push
mov
lods
sbb
test
sbb
nop
push
shll
sub
xor
or
subb
sbb
xor
ret
inc
sbb
inc
push
push
pop
xor
inc
pop
stc
push
adc
pop
out
fstpl
test
out
mov
mov
mov
push
mov
daa
pcmpeqw
add
les
div
add
movsb
ljmp
mov
push
and
test
movsl
xchg
mov
stos
ja
les
clc
popa
cld
sahf
rorb
fcomps
fwait
mov
shlb
pop
into
mov
sti
dec
lods
inc
cmpsb
mov
fcoms
int
insl
push
dec
call
sub
push
mov
out
push
jo
pushf
inc
sub
pop
or
lcall
data16
add
jp
push
fistl
imul
add
or
and
test
jbe
mov
iret
xchg
inc
daa
mov
sbb
push
in
add
inc
stos
mulb
sbb
je
int
out
or
jae
pop
dec
stc
lret
lret
mov
or
inc
pop
idivl
inc
out
lods
stos
pop
cmpsl
dec
sbbb
mov
mov
loopne
cmp
cmp
stos
pop
inc
xchg
ljmp
cmp
push
fs
and
and
mov
sahf
add
loope
mov
int3
int3
jmp
xor
cmc
jmp
shl
cltd
hlt
lcall
lahf
push
mov
inc
inc
fildll
lods
and
mov
jns
cmp
jmp
sbb
outsb
dec
insb
outsl
mov
lret
sub
pop
pop
mov
lods
pop
out
loopne
mov
movsl
das
jg
push
add
leave
push
adc
fs
int3
pop
sbb
pusha
aam
fdivrl
pop
push
mov
push
add
push
mov
sbb
imul
xor
or
lds
dec
jnp
aad
lods
pop
push
dec
rorb
stos
pop
mov
inc
xor
xor
mov
imul
les
popa
xchg
in
sbb
adc
nop
jne
fstpl
xchg
lods
sub
in
aas
sbb
outsl
add
sbb
bnd
sub
lret
jne
cld
mov
dec
aad
dec
pop
fucom
or
pop
mov
push
xchg
andps
imul
cwtl
ja
imul
out
out
iret
cs
add
stos
jns
adc
das
xchg
jmp
leave
cmp
mov
in
xlat
int3
mov
mov
push
icebp
test
iret
into
les
fucomp
std
add
dec
loope
cmp
enter
loope
test
xor
sahf
pop
sbbl
test
cmc
mov
adc
pop
imul
mov
fidivs
call
stos
dec
jge
pop
adc
in
push
in
sub
dec
mov
mov
notl
mov
loope,pt
pop
cld
pop
sub
sbb
cltd
lcall
hlt
push
mov
add
push
adc
rol
shrb
jns
pop
aad
sbb
loopne
out
xchg
incb
inc
jno
mov
inc
push
fstpl
outsb
shrb
xchg
add
bound
mov
inc
push
cvtps2pi
out
cwtl
push
imul
push
mov
adc
add
addb
je
das
aaa
adc
lea
jp
mov
ret
rcll
lea
pop
leave
in
insl
mov
inc
mov
in
xchg
std
punpckhwd
das
arpl
aaa
aaa
sbb
in
pushf
adc
adc
cmp
and
iret
loopne
out
dec
idivl
mov
lret
xchg
xchg
mov
xor
push
adc
jg
fisubs
in
inc
andb
fwait
out
xor
shlb
mov
ds
or
mov
hlt
sti
lcall
or
jle
pop
shlb
les
mov
push
pop
dec
jmp
mov
test
sti
rdtsc
std
jecxz
jp
subl
cs
inc
iret
loope
aad
divb
arpl
pop
cmc
std
adc
shlb
mov
add
cmpsl
ljmp
mov
or
imulb
jbe
and
jnp
popf
scas
into
iret
sbb
outsl
aas
outsl
cmp
cmp
out
cltd
mov
mov
adc
mov
shr
push
fldenv
sbb
jg
ja
inc
imul
pop
loopne
lods
pop
cmp
mov
mov
icebp
cmp
jg
ficoms
mov
jne
dec
aas
pop
imul
xor
or
push
fisubrs
cmpsl
push
xor
dec
lret
jno
cltd
mov
jl
xchg
inc
sbb
fcompl
ss
jg
jl
out
dec
fdivrl
iret
push
out
sub
mov
add
xchg
aaa
je
or
adc
das
loopne
ret
push
xchg
pop
jp
icebp
pop
xchg
mov
js
fwait
neg
popl
addl
pop
inc
mov
and
int3
fidivrs
jb
fadds
test
lret
fwait
out
or
dec
sbb
scas
icebp
jne
push
lock
jnp
inc
mov
lcall
aam
xor
test
rcrb
test
sbbb
rorb
mov
cmp
mov
stc
dec
xor
xchg
sub
push
cmp
xor
xchg
subb
ds
sarl
decl
neg
mov
push
pop
in
and
mov
stc
into
xor
and
xchg
mov
mov
hlt
fsub
icebp
inc
mov
ljmp
out
adc
jge
stc
xchg
push
stos
ss
cmp
ret
popaw
xchg
add
dec
sbb
iret
in
cmpsb
mov
or
call
orb
loop
mov
insb
mov
mov
pop
xor
dec
or
push
jnp
int
in
and
dec
or
jge
cmp
push
xchg
cli
xor
mov
loope
fstp
sub
cmc
ret
xor
out
adc
adc
data16
ss
out
xchg
nop
sbb
loope
ss
cmp
sbb
xchg
cld
dec
repnz
pop
shrl
das
adc
test
daa
popf
cld
and
xchg
dec
nop
icebp
fwait
in
cld
mov
neg
mov
fdivl
insb
iret
add
lock
push
sbb
scas
jae
fwait
aas
test
add
loope
pop
cmp
dec
cli
jb
shl
int
push
mov
xchg
cmc
or
loope
add
or
iret
js
jne
jno
push
in
outsb
movsb
or
xor
dec
pop
pop
movsl
das
outsl
hlt
addl
mov
lea
mov
cmp
imul
imul
jg
jge
arpl
test
push
mov
int3
inc
es
loope
in
cmp
adc
xlat
or
jge
fwait
dec
ret
jo
jmp
loop
xor
jge
inc
adc
cmpb
dec
mov
es
mov
ja
std
clc
pop
mov
std
mov
xchg
leave
fdivl
aad
insb
filds
sbb
aam
pop
sbb
sbb
gs
mov
or
ja
or
and
adc
mov
pop
adc
sub
fidivrs
stos
rcrl
icebp
cli
mov
fstp
sbb
jne
hlt
push
gs
xchg
adc
mov
popf
sub
cs
sbb
xchg
aad
iret
mov
adc
and
push
dec
aam
ds
pop
mov
add
fldenvs
pop
addr16
int3
xor
scas
sub
mov
jle
not
cwtl
jmp
gs
icebp
mov
lahf
leave
scas
add
inc
xor
pusha
jns
rol
add
int
shll
or
add
add
cmp
mov
mov
lds
adc
mov
xchg
mov
mov
adc
or
mov
push
das
test
outsl
and
stos
test
jb
shll
and
loopne
test
lcall
sbb
es
sbb
xchg
pop
aad
xchg
loop
mov
int3
sub
imul
mov
pop
out
sti
andb
fiaddl
mov
push
mov
xor
mov
lods
mov
pop
xchg
sub
clc
lock
nop
pop
mov
ljmp
add
mov
fcompl
fsubrp
aaa
sahf
sbb
inc
ja
push
mov
jae
hlt
rorl
push
lods
dec
xor
loop
jle
pop
mov
fs
jns
fsincos
xchg
push
mov
inc
jmp
dec
pop
cmp
stos
mov
sub
sahf
sbb
sbb
icebp
leave
sbb
test
bnd
clc
iret
dec
lods
test
xlat
adc
out
fildl
ret
inc
xor
cld
pop
fucom
mov
push
pop
or
test
pushf
inc
xor
orl
sarb
mov
lahf
hlt
push
ret
insb
mov
je
sub
test
and
and
repz
stc
int3
in
or
dec
fbstp
and
out
mov
cmpsl
insl
addr16
call
push
cmp
test
cmp
insl
push
aaa
lods
push
sahf
js
or
cmp
insl
mov
aad
push
dec
mov
hlt
fstpl
xchg
ja
rolb
mov
les
dec
jmp
sub
sub
mov
xor
sub
outsl
mov
sub
inc
movsl
or
cmp
aad
or
push
xor
add
addl
or
or
mov
sbb
shlb
and
hlt
cmp
cmp
cli
std
dec
ret
mov
ficompl
push
dec
stc
in
sti
into
mov
or
jle
and
outsb
movl
movsb
mov
icebp
jmp
shll
or
dec
mov
out
aam
scas
ss
and
sbbb
fcompl
xor
out
inc
cs
sub
and
mov
jb
cli
jp
pop
mov
js
mov
int3
dec
in
fdivrl
mov
call
scas
or
pop
pop
adc
movsl
nop
out
mov
into
xchg
mov
jp
in
mov
aam
test
loope
xor
adc
jge,pt
pop
pop
orb
xchg
insb
test
hlt
xchg
push
xchg
shll
int
cmpb
push
inc
mov
sbb
icebp
iret
adc
push
dec
leave
fwait
aas
into
in
aad
mov
loopne
stc
lods
jne
or
rorl
aad
imul
xchg
sub
scas
push
dec
xor
add
mov
mov
mov
cs
sahf
mov
sti
push
mov
ficomps
aad
mov
mov
inc
jmp
mov
insb
sub
adcl
inc
fiaddl
ret
sub
cmp
sub
bound
and
sbb
mov
icebp
adc
nop
movsl
sbb
fsubr
pop
push
je
inc
cwtl
jmp
aas
mov
fwait
jge
ljmp
sbb
cmp
and
out
dec
dec
stos
push
mov
and
aaa
push
clc
and
sub
xlat
mov
push
or
clc
mov
test
jae
cmpsb
xchg
neg
dec
pusha
divl
shr
pop
pop
mov
testb
dec
mov
push
inc
rorl
and
dec
and
icebp
popf
ret
shll
std
imul
ljmp
pop
repz
add
dec
mov
lock
or
add
jno
jns
push
dec
clc
push
xchg
jo
cmp
jo
mov
pop
mov
lods
xlat
das
sbb
jbe
les
push
loop
sub
ja
mov
or
adc
add
das
ljmp
xlat
scas
testl
loopne
dec
inc
and
inc
mov
pop
gs
outsl
arpl
mov
dec
inc
int3
push
inc
std
jl
sarb
mov
xchg
and
divl
xchg
frstor
data16
sarl
in
sub
pop
pop
loope
xchg
les
ficoms
push
mov
imul
scas
pop
or
cmp
jl
dec
test
and
shll
lods
or
add
stos
jnp
inc
xchg
inc
and
cli
test
out
insb
jg
pushf
popf
and
pop
xlat
mov
in
sbb
loop
inc
push
outsb
dec
jmp
mov
stos
out
dec
mov
xor
sub
into
xlat
cmc
stos
in
sbb
dec
aam
mov
incl
inc
cmp
push
int3
test
cld
xor
mov
fsubrl
dec
mul
sti
in
inc
mov
fwait
shrl
ds
popf
mov
push
fwait
in
mov
jmp
adc
ret
sti
mov
mov
test
test
jnp
push
push
jbe
lea
adc
xor
mov
xlat
fiadds
and
mov
clc
xchg
sbb
pop
or
or
dec
shl
xchg
sub
pop
cmp
add
je
data16
ljmp
outsl
ljmp
repnz
mov
cmpsl
add
test
jbe
mov
xor
cltd
fwait
pop
adc
mov
repnz
dec
test
pusha
lods
lods
popa
cmp
push
loop
adc
mov
dec
dec
daa
adc
sub
sbb
xchg
add
or
cmp
or
icebp
lods
scas
jmp
das
xchg
testb
mov
popa
xchg
push
adc
div
cmc
mov
addr16
bndldx
cmp
inc
pop
nop
mov
gs
and
addr16
pop
loope
lcall
adc
pop
jo
inc
adc
enter
mov
js
jb
xor
jge
test
mov
idiv
push
scas
sbb
stc
xchg
mov
popf
cmp
jne
jge
mov
push
mov
mov
sbb
int
and
adc
cmp
ja
test
leave
fnstcw
push
cmp
mov
sub
dec
adc
stc
jl
sub
sub
adc
jg
mov
enter
mov
test
xchg
or
push
mov
in
jnp
shr
sub
xlat
push
icebp
addl
adc
push
jnp
int3
dec
dec
ja
aaa
mov
ja
add
lock
jl
mov
pop
dec
nop
inc
scas
sub
xorl
adc
ret
sub
jnp
enter
adc
pusha
add
addr16
lret
add
stc
jnp
push
cltd
popf
cmp
xchg
or
mov
jo
cld
movsb
out
insb
movsl
pushf
xor
lret
ja
jbe
icebp
xchg
fs
mov
adc
movsl
push
fildll
and
dec
jge
pop
sub
rclb
lcall
cwtl
lret
sarl
mov
gs
jmp
sbb
or
sbb
fbstp
jp
jae
jb
xchg
xor
daa
repz
adc
cmp
ljmp
lods
imul
jmp
pusha
repnz
fstpl
xchg
mov
in
mov
out
mov
loope
cmpsb
mov
pop
lea
cmpsl
cs
mov
mov
xchg
pop
pop
push
in
scas
xchg
inc
rorb
or
adc
and
push
lcall
pop
iret
jb
xor
hlt
ret
mov
push
in
dec
dec
mov
mov
jp
lahf
adc
leave
push
in
mov
and
rep
mov
pop
jp
or
test
mov
sarl
stos
icebp
push
add
lret
or
lret
dec
fidivs
or
add
enter
dec
fadd
sub
mov
pop
inc
pop
hlt
lahf
lret
mov
loope
in
pop
negb
andb
sub
add
aam
mov
mov
mov
jecxz
push
dec
push
test
cltd
lcall
dec
inc
inc
lahf
roll
push
ficoms
and
stc
xchg
popf
sbb
in
sbb
adc
fmull
and
mov
in
movsl
inc
xor
les
pop
push
push
rorb
or
clc
sub
cli
pop
popa
push
stos
xorb
jge
sbb
xor
ja
jae
jbe
xor
int3
xchg
pop
pop
sub
data16
or
inc
add
scas
movsl
jo
loope
xchg
push
cmp
into
add
cmp
add
sbb
outsb
ret
cs
xor
dec
xchg
xchg
movsb
test
and
cltd
clc
jg
test
sub
bound
mov
dec
xchg
das
mov
push
cmp
xlat
jnp
div
fdivrl
xchg
nop
sub
std
dec
pop
pop
pusha
fs
or
mov
dec
out
pusha
jo
ja
xchg
ss
xchg
dec
lods
mov
sub
sub
jmp
in
mov
cmp
js
or
out
jmp
add
mov
stos
sbbl
sahf
sub
mov
rolb
mov
enter
mov
enter
cmp
mov
jns
fst
out
inc
out
loope
pop
xlat
push
push
add
or
lods
pop
sub
addr16
aas
jno
outsb
mov
pushf
cltd
scas
push
push
scas
mov
mov
test
mov
shlb
lods
mov
mov
sbb
fsts
inc
ss
dec
mov
adc
xchg
fildl
fildll
mov
js
test
cmp
in
cwtl
mov
push
lcall
out
push
jae
jge
fcmovnu
push
push
stos
ljmp
cs
inc
cmpsb
test
xor
repz
or
inc
pop
push
push
mov
ret
sbb
fmull
mov
int3
jl
push
ror
daa
mov
test
mov
inc
int
sti
ja
pushf
and
adc
adc
pop
jo
icebp
lret
out
mov
lock
xor
divl
sub
xor
push
dec
mov
jecxz
or
lahf
js
push
or
mov
aad
jle
decl
sti
add
jmp
pop
mov
cmp
lods
lea
sbb
sub
popf
cmc
in
dec
lock
lret
stc
adc
popa
clc
movsl
adc
or
and
or
std
sub
int
clc
data16
adc
daa
dec
and
outsl
mov
outsb
mov
lret
jno
fst
loope
xchg
push
and
pop
xchg
lock
mov
xchg
mov
dec
cmp
cmp
push
repz
xchg
inc
xor
or
cmp
es
mov
fwait
add
adc
add
das
cmpsb
icebp
pushf
imul
sar
dec
mov
cmpl
jmp
sbb
das
cmp
rolb
clc
sbb
mov
test
mov
stos
mov
add
dec
pushf
inc
mov
ss
jo
ljmp
int3
outsb
shrb
ret
add
add
mov
fmul
test
or
shrb
pop
pop
cwtl
in
ret
and
iret
cld
xchg
and
sbb
cli
stos
adc
cmpsb
in
push
mov
fidivs
in
add
cli
ljmp
lods
scas
iret
loope
shll
inc
sub
test
jae
xchg
add
xor
xchg
mov
add
push
adc
mov
hlt
fistps
jmp
sbb
push
repnz
push
imull
sahf
in
scas
mov
push
loopne
jns
orl
flds
sbb
xchg
outsl
add
adcb
test
mov
enter
mov
xor
cmp
leave
jge
mov
cmpsl
add
lret
dec
clc
jmp
and
jne
mov
push
dec
mov
inc
shlb
jg
enter
pop
mov
and
push
mov
and
test
pop
dec
xor
pop
xchg
cmp
mov
inc
xchg
sub
cmp
in
cmpsb
shlb
cmp
jo
mov
shrl
sub
lods
push
dec
cltd
mov
je
cmpw
ja
addr16
jbe
mov
and
adc
std
push
mov
enter
test
mov
jl
jmp
mov
push
xor
imul
or
mov
and
pusha
inc
xor
xor
dec
mov
cmp
inc
push
daa
in
cltd
popa
stos
sar
ja
int
notb
or
loope
push
and
push
pop
mov
rclb
jmp
pop
sbb
add
sub
push
sub
sbb
shll
pop
das
jb
adc
pop
popa
add
rclb
lods
hlt
into
push
cmp
cwtl
inc
pop
xchg
fiaddl
adc
add
cwtl
add
iret
fsts
scas
xchg
loope
pop
mov
cld
jge
test
dec
push
cmp
jnp
lcall
and
push
adc
addr16
imul
imul
pop
lret
aad
mov
rcll
jbe
push
push
movb
push
push
lods
pop
popf
add
sbb
pop
xchg
shlb
pop
push
jae
jg
mov
add
mov
cmp
mov
cmp
inc
in
mov
push
lret
jae
movsl
jae
add
in
cld
daa
push
sub
mov
xchg
jb
pop
or
cmpb
ds
rorb
dec
mov
and
dec
fwait
pusha
push
aam
gs
cmc
sbb
inc
insl
push
and
xchg
sub
xor
das
fstpt
cmp
stc
mov
pop
or
mov
xchg
mov
lock
outsb
inc
mov
sti
jne
and
movsl
fstl
and
mov
into
dec
inc
add
cmpsl
in
mov
pop
or
into
jecxz
ss
push
or
cmpsb
imul
pop
mov
loopne
adcb
mov
mov
cmp
fwait
out
roll
dec
add
mov
cmpsb
das
int3
aad
push
sbb
mov
mov
mov
das
repnz
outsb
mov
mov
mov
and
dec
or
dec
sub
fsub
or
mov
call
mov
into
aam
fldt
mov
fidivs
popf
bound
mov
dec
loop
lret
pop
fwait
inc
push
test
push
add
in
cltd
mov
scas
adc
add
jbe
cmp
push
ja
mov
loop
das
push
push
pushf
lcall
arpl
cs
scas
lret
jp
lcall
or
and
inc
es
cli
inc
lahf
loope
fisubrl
xlat
inc
push
pop
imul
pusha
jne
inc
lcall
stos
mov
cmp
jg
call
shrb
int
pop
in
xchg
jp
das
lock
mov
pop
shl
mov
lret
xchg
lret
fucom
and
nop
lds
daa
jae
sub
inc
aam
ret
xor
lret
scas
mov
lods
xchg
loopne
pushf
nop
mov
push
call
cmp
adc
shr
stos
and
lock
lock
jle
vmovshdup
pop
mov
push
nop
ljmp
test
sahf
jno
mov
pop
pop
or
mov
mov
cmp
mov
xchg
iret
pop
sbb
pushf
xor
push
cmp
jmp
push
ja
out
or
xchg
jae
test
mov
pop
jp
or
inc
add
scas
push
mov
mov
push
mov
push
push
std
fidivrl
mov
stc
daa
bound
inc
sub
rcrl
and
xchg
in
icebp
ret
fstpl
and
repz
fstps
in
sub
mov
or
adc
xor
jle
fstpt
gs
cli
dec
insb
pop
inc
lcall
ret
pop
adc
loopne
add
cmp
jne
sbb
scas
inc
mov
add
add
fdivrs
fcompl
clc
aad
mov
xchg
rorb
mov
test
jg
loope
pop
jge
movsl
fs
rol
leave
pop
jmp
mov
dec
js
xchg
cltd
hlt
das
adc
fdivrs
xor
daa
sbb
sub
ja
leave
add
adc
dec
ja
cmp
push
adc
or
int
dec
sub
mov
int3
sahf
inc
fidivrl
and
sbb
push
pop
push
test
dec
inc
mov
mov
push
push
mov
cmp
pushf
rclb
in
pop
cmpsl
pop
ret
sbbb
in
orl
pusha
mov
or
jns
je
sbb
push
rcrl
pop
cmp
lcall
dec
jns
repnz
into
ret
in
xchg
insb
out
in
adcb
jle
sbbl
inc
xor
loop
jl
movsb
pop
shl
std
fcoms
xor
cvtdq2ps
inc
stos
jecxz
aaa
gs
dec
int
hlt
inc
mov
xchg
pop
fcompl
mov
out
gs
testb
ret
inc
fs
insb
cltd
arpl
mov
loopne
cmp
xchg
outsb
sahf
stc
nop
jl
xchg
gs
in
adc
adc
std
sub
fwait
mov
loop
push
imul
je
js
mov
fst
mov
xchg
mov
shlb
mov
mov
add
test
aas
out
int3
repnz
or
test
mov
lahf
mov
inc
add
cmc
add
add
dec
orb
sahf
mov
fwait
ja
xor
mov
arpl
lds
js
loope
inc
iret
loopne
cmp
jmp
mov
mov
icebp
aad
fistpll
lods
pop
fldcw
dec
pop
adc
outsl
mov
gs
movups
inc
add
mov
out
mov
nop
push
fstpt
cmp
sbb
push
pop
icebp
fs
jecxz
lret
test
in
pop
scas
pop
jle
es
test
and
cmp
or
cmpsl
jecxz
pop
ret
in
mov
leave
sub
loopne
and
adc
loope
and
sbb
pop
add
sub
push
icebp
or
ret
pop
dec
or
xor
add
sub
in
xor
sub
negb
lret
push
shll
push
adc
aas
or
lods
repz
sbb
inc
ljmp
mov
sub
cmc
in
stc
not
or
jecxz
repz
shlb
and
int3
int
push
adc
mov
jle
add
syscall
out
dec
cmp
lret
dec
addl
movsb
out
inc
stos
pop
sarb
test
gs
lds
sbb
shl
mov
sbb
dec
mov
cld
mov
lret
test
cld
test
xor
xchg
neg
sub
lods
insl
dec
lock
cmp
ss
cmp
addr16
inc
shlb
sahf
cwtl
add
ljmp
mov
xchg
sti
xor
cmpsb
fs
mov
dec
sbb
out
xlat
insb
aad
scas
repz
inc
add
imul
cmp
popa
dec
cmp
cmpsb
add
std
mov
add
add
mov
sbb
inc
fnstenv
nop
mov
fdivl
lcall
imul
imul
stc
or
ljmp
inc
es
sub
pusha
and
and
adc
pop
jp
cmpsb
mov
or
mov
in
jne
adc
rclb
sbb
shll
adcl
repnz
sbb
mov
int
xor
dec
repnz
mov
adc
lret
std
cmpsl
mov
ja
and
popf
inc
mov
cmc
arpl
lods
jno
cmp
or
aad
mov
jecxz
mov
lock
mov
imul
pop
sub
test
bound
xor
insb
daa
cmp
mov
sbb
cwtl
outsl
fnsave
rorl
dec
mov
xor
cli
jp
nop
push
in
cmp
adc
push
shll
pop
imul
jo
stc
xchg
mov
sub
mov
lods
add
leave
adc
push
out
cmc
dec
cmp
wbinvd
or
inc
test
mov
jns
mov
xchg
pop
imulb
les
dec
lods
jnp
and
fdivs
xor
push
movsb
inc
push
nop
xor
cltd
sbb
cmp
sbb
mov
dec
adc
cmpsb
pop
xchg
inc
mov
leave
jecxz
jg
stos
popa
xor
xchg
in
out
xchg
jmp
loop
popa
pop
clc
xor
js
and
pop
icebp
xchg
ljmp
mov
cwtl
mov
cs
mov
jmp
or
notl
lods
mov
neg
sub
dec
xchg
mov
jecxz
jns
nop
mov
ss
daa
and
test
dec
adc
sbb
push
test
je
fiaddl
xchg
sub
lret
shr
pop
sub
cmp
mov
adc
inc
xchg
xor
jne
dec
pop
pusha
les
out
out
cmpsl
push
sub
inc
pusha
sarl
stos
stos
and
jbe
sbb
in
xchg
adcl
and
cmp
iret
inc
jae
sub
sub
sub
jnp
sarb
cmp
rcrl
insl
jne
mov
shrl
pop
fadds
lods
repz
adc
push
sahf
or
jo
dec
outsl
stc
rorl
enter
jge
popa
mov
pushf
out
lcall
adc
loop
jne
dec
xchg
jl
test
sbbl
enter
pusha
adc
inc
or
ss
shrb
int
dec
sbb
jb
add
sub
stos
mov
aad
jno
adc
mov
jmp
dec
jno
sahf
mov
mov
in
pop
test
lret
in
jmp
add
int
adc
sbb
sbb
lods
int3
inc
inc
int3
cmp
push
pop
sub
sub
cmp
add
xchg
jae
jns
aad
je
xlat
push
les
aaa
cli
cmp
stos
shll
pop
insl
push
inc
repz
in
rolb
mov
mov
xchg
test
fwait
mov
sub
movsb
int
aad
adc
cmp
cmpsb
pop
fwait
and
sub
mov
mov
fbstp
fwait
jmp
imul
add
cmp
testb
or
inc
inc
jmp
sarb
xchg
cmp
push
popa
or
loopne
ja
outsb
out
outsb
lock
push
and
icebp
inc
adc
lret
jp
xchg
jl
leave
sbbl
into
cmpl
push
test
xorb
jb
jle
jge
dec
pop
jg
mov
sub
movsb
adc
xlat
neg
pop
sbb
jae
push
jmp
jne
sbb
into
call
aam
mov
pop
jns
pop
filds
mov
xchg
mov
add
xchg
sub
icebp
push
fistpll
xor
int
scas
cltd
aad
icebp
mov
xor
or
lods
int
stos
inc
rcll
adc
roll
nop
jmp
js
and
ja
stc
push
cmp
cmc
pop
mov
inc
dec
inc
cmp
jbe
adc
mov
xor
in
nop
fstps
mov
popa
cmp
sbb
addl
fwait
dec
inc
push
mov
cmc
gs
adc
sar
sbb
scas
xchg
mov
pushfw
mov
inc
ret
loop
adc
jmp
mov
mov
push
sbb
push
pop
fsubp
push
rclb
and
in
mov
dec
sub
adc
lret
mov
repnz
cmp
bound
pop
test
gs
dec
jo
fiaddl
ja
or
push
outsl
std
inc
and
les
cmpsb
or
pop
addl
int
fdivs
sahf
stos
mov
and
pop
jno
call
push
push
add
mov
movsl
inc
dec
nop
or
int3
pop
xchg
out
fidivl
loopne
test
sbb
cmp
push
pusha
push
idivl
fimull
push
ds
call
nop
and
add
test
sbb
in
call
push
sar
stos
sub
dec
das
lret
push
sbb
mov
cld
fidivrs
cmp
dec
in
scas
mov
scas
cli
out
addb
out
in
cmp
jge
xor
sbb
cmpsb
jne
gs
jno
adc
or
pop
mov
insb
push
pop
sbbb
fdivrp
mov
push
and
push
push
insl
xchg
lods
clc
pop
and
in
loopne
push
neg
and
jns
scas
mov
adc
jb
insb
mul
xchg
cwtl
mov
daa
cmpsb
jle
mov
loopne
addr16
mov
pop
movsl
add
mov
or
test
bound
test
test
lret
iret
addr16
out
cmp
scas
stos
pop
add
inc
mov
shlb
sahf
dec
sbb
sub
test
dec
cmp
arpl
inc
fstl
lea
sub
enter
adc
call
xor
jmp
jmp
adc
sbb
pop
imul
mov
xor
movsl
es
pop
push
and
test
add
lods
mov
fsubs
test
mov
sub
lods
inc
stc
js
test
pop
aam
or
mov
movsb
xchg
sbbl
pop
pop
xor
in
rol
mov
mov
int
scas
xchg
test
iret
mov
mov
mov
loope
out
lret
sbb
lahf
push
xchg
adc
sub
out
cmpsl
add
in
cmp
das
lahf
sbb
and
jns
pop
add
xchg
sub
sbb
cmp
lods
xor
push
test
mov
inc
pop
or
sti
sub
repnz
js
imul
push
daa
and
or
ds
and
leave
clc
add
mov
dec
arpl
dec
hlt
std
push
mov
dec
fistpl
xor
cmpsb
cmp
sbb
cmpsl
sub
fimull
test
loope
mov
and
sbb
lea
scas
out
sub
adc
cmc
pop
setno
loopne
inc
movsl
cmp
dec
int
jo
jmp
cmp
adc
les
xchg
or
fs
setl
sbb
cmp
fcmovbe
push
ja
insb
adc
fistps
hlt
adc
fistpll
sarb
xchg
gs
or
mov
out
jbe
jbe
fldenv
jb
xor
mov
push
leave
testl
dec
mov
add
mov
dec
jge
xchg
addl
cmp
cmp
into
xlat
repz
inc
das
push
stc
fcmovnu
fcompl
inc
or
leave
dec
push
fisttpl
lcall
std
mov
and
xorb
imul
and
in
xchg
outsl
push
dec
mov
or
rolb
mov
cmp
cli
and
sub
rolb
fldcw
sar
popa
sub
mov
inc
insl
out
xor
xchg
mov
sarl
loop
xor
push
or
les
jp
mov
cmp
hlt
push
cmp
push
dec
pop
hlt
gs
and
xchg
adc
pushf
jl
das
sbb
pop
icebp
xlat
sub
inc
xchg
inc
push
fcomps
aad
testl
lahf
xchg
sbb
aas
pop
dec
mov
push
pop
inc
and
lods
pop
mov
and
enter
mov
dec
scas
mov
mov
cmp
adc
shr
in
push
mov
inc
subl
sbb
pop
dec
je
fldt
cmp
popa
scas
pop
sub
repz
push
fimull
loop
sbbb
jbe
inc
emms
xchg
adc
lds
xchg
sub
and
mov
lds
sahf
test
sbb
ja
sub
and
adc
cmp
mov
cmp
addr16
pop
lcall
in
cltd
pusha
inc
cmp
mov
jge
lret
sarl
jl
fsts
sbb
mov
sbb
movsl
std
cwtl
stc
out
sbb
jae
cld
loop
mov
dec
pop
xchg
mov
das
mov
pop
push
and
push
inc
imul
jecxz
fs
adc
and
push
mov
shlb
mov
cwtl
jge
adc
and
push
xlat
lea
test
out
scas
mov
adc
mov
lods
mov
push
and
mov
lods
popa
xchg
fildll
pop
loope
mov
jge
pop
movsb
idiv
cmp
sbb
pop
sbb
inc
cmp
dec
xor
test
int
adc
cmp
cmpsb
imul
push
popa
rep
and
test
mov
jge
xchg
stos
inc
push
lock
imul
jb
fnstsw
inc
cmpsb
xchg
pop
out
shr
popa
mov
adc
cmp
jmp
dec
push
and
jecxz
cli
hlt
ljmp
xor
loopne
add
cmp
inc
push
jnp
enter
jp
test
mov
iret
test
int3
jmp
out
push
fsub
mov
mov
xchg
sub
inc
repz
mov
ret
sbb
lret
or
addr16
xchg
rorb
popl
lret
mov
rep
icebp
pop
insl
outsb
add
test
iret
push
jns
cs
inc
je
or
and
hlt
out
mov
sub
xchg
sarb
pop
sub
mov
loope
sbb
lods
xor
in
in
icebp
adc
xchg
xchg
sub
insb
stos
shlb
mov
mov
inc
xchg
sub
inc
inc
ss
dec
jb
sahf
inc
ss
stos
cs
mov
mov
testb
pop
mov
push
dec
add
add
inc
mov
les
pop
mov
xlat
sahf
cmc
inc
pop
cmp
aam
sahf
mov
mov
xor
je
xchg
leave
ficomps
mov
and
aad
cmp
xchg
mov
adc
adc
inc
jns
out
std
mov
repz
mov
and
lahf
out
pop
mov
cmpsl
ret
jmp
stos
pop
sbb
jb
cmpsb
xchg
dec
stc
mov
jecxz
outsb
jnp
ficoml
adc
inc
add
or
loope
mov
fisubs
jne
xor
cmp
xchg
mov
adc
je
xchg
xor
xchg
outsl
ret
imul
pop
mov
adc
mov
xchg
nop
imul
pusha
mov
mov
and
aas
movsb
aaa
faddp
mov
fadd
rcr
fcomps
movsb
cld
xchg
mov
mov
xchg
xlat
popl
inc
ds
cmpsb
sbb
loopne
dec
pop
or
in
xchg
pop
lret
jp
repnz
fs
and
loopne
pop
mov
pop
lock
jb
movsb
mov
into
mov
mov
xchg
xchg
lock
jl
out
dec
jp
dec
mov
jp
push
jp
mov
out
add
movsl
lods
adc
sbb
rcll
xchg
lods
ss
popf
lcall
dec
cmc
lcall
rcrb
repnz
scas
dec
mov
popf
push
mov
andb
add
add
jle
mov
in
inc
stos
fildl
scas
dec
pushf
test
fcmovnbe
movsb
roll
sub
leave
sti
notl
mov
mov
aad
mov
out
cmp
cs
push
sbb
fstpl
sbb
fsubl
fwait
popa
lahf
in
xchg
enter
or
jne
lcall
std
push
jge
mov
aaa
push
fs
inc
aad
cmp
sub
mov
les
mov
adc
loope
jns
xor
xchg
ljmp
fucom
dec
adc
sbb
push
inc
addb
mov
enter
jnp
dec
fiaddl
push
jmp
bound
pop
xchg
bound
lods
xor
mov
lret
popf
dec
dec
mov
sub
cmpl
push
push
and
in
mov
mov
add
pusha
mov
lcall
inc
mov
jl
xor
gs
test
push
jbe
cs
adc
sub
pop
pushf
int3
fwait
xor
pop
mov
out
xchg
and
adc
pop
nop
and
gs
cmp
mov
dec
stos
iret
sti
lock
mov
cmp
adc
ret
inc
or
loope
push
sbb
or
and
in
cmp
sub
aam
mov
ret
mov
xor
pop
iret
out
fisubs
jno
sbb
sbb
xchg
cmc
xchg
inc
add
int3
xor
xor
sti
std
sbb
pop
jg
cmp
addr16
sbb
sub
outsl
bound
add
cmp
mov
addr16
jl
aaa
dec
ja
add
xor
arpl
adc
mov
push
adcb
mov
sarl
xor
sbb
xchg
fldl
jb
es
outsb
mov
pop
mov
shl
loop
xor
dec
stos
das
ss
idivb
bound
adc
fstl
js
cld
aaa
enter
fdivrs
ret
or
adc
daa
arpl
shlb
add
inc
shrl
sub
sub
add
cs
mov
mov
push
in
mov
lret
shlb
mov
mov
or
mov
imul
xor
ret
add
imul
sbb
sub
ret
mov
fisubl
adcb
movsb
test
pop
xchg
xchg
mov
push
jle
add
std
lock
daa
jecxz
imulb
jne
or
roll
jno
jg
sbb
xor
outsb
loope
and
pop
stos
pop
xchg
adcl
sub
jmp
js
scas
sti
add
in
stos
sub
push
jl
scas
insb
add
ss
jmp
xchg
movsl
jecxz
inc
bound
outsl
pop
scas
pop
in
ja
fcoms
imul
xchg
orb
jmp
sti
test
push
fs
pushf
scas
cli
push
jle
inc
and
jge
imulb
push
sbb
inc
cwtl
lds
xor
xchg
mov
push
out
xor
pop
aam
xchg
popf
cmp
push
pusha
arpl
cltd
xchg
cld
xor
xchg
cmpb
jmp
test
ret
inc
sti
cmpsb
sbb
stos
mov
sbb
adc
sbb
stos
cmpl
jb
jae
aam
cli
gs
adc
cmpsl
sub
or
ljmp
sub
inc
test
minps
in
mov
incb
cmp
xchg
mov
aam
lods
pop
mov
int
gs
inc
pop
adc
ljmp
mov
xchg
stc
sub
and
popa
mov
fists
shl
es
fistps
push
test
xor
lret
mov
cld
and
fldcw
outsl
js
or
lret
dec
xor
sub
aam
and
inc
mov
aam
mov
push
out
pusha
add
sub
push
lret
sub
xchg
or
sbb
lods
shrl
xchg
mov
sub
or
adc
movsb
inc
xchg
aas
adc
inc
cld
scas
xor
sub
mov
cld
jno
xor
call
mov
push
mov
and
sub
movsb
lock
dec
pusha
xchg
xor
mov
sbb
lock
mov
popl
dec
pop
sub
sbbl
xchg
repz
inc
incl
xchg
jmp
mov
mov
scas
xor
adc
enter
add
pop
iret
or
aam
push
adc
mov
mov
das
pop
sbb
imul
cld
dec
lret
popa
pop
or
fisubrs
lods
pop
mov
out
sbb
dec
das
stos
sbb
inc
ret
pusha
sti
lahf
xor
jo
and
leave
sbb
or
pushf
adc
out
xchg
push
out
xor
aad
jg
ds
enter
mov
sub
lods
pushf
jnp
add
dec
pop
loope
ret
add
mov
push
push
mov
add
pop
xchg
pusha
jmp
xchg
pop
rclb
sbb
ja
clc
shll
inc
mov
decb
push
pop
adc
stc
sbb
mov
pop
mov
cltd
pop
pop
jge
in
adc
aaa
fldt
push
int
push
adc
pop
mov
dec
mov
fisttps
mov
popf
pop
popa
xchg
sbb
pop
jo
lret
aas
cmp
cmp
bound
wrmsr
mov
jecxz
lods
roll
inc
fdivrs
lds
sbb
xchg
inc
pop
repnz
cli
xchg
inc
movsb
add
mov
das
lret
adc
pushf
lods
xor
inc
push
imul
fs
les
mov
stc
shll
insl
out
or
lret
push
push
add
packuswb
xor
in
mov
ret
pushf
push
test
ret
sbb
jne
das
arpl
dec
add
shrl
adc
lea
das
test
ss
cwtl
mov
bound
mov
pop
sub
pop
popa
sarb
mov
fidivrs
pop
sbb
insb
popa
pushf
repz
push
out
das
pop
and
enter
sbb
fmull
arpl
mov
mov
data16
outsb
jp
add
test
sti
loop
xchg
in
pop
mov
pop
shlb
faddl
in
jbe
pop
mov
test
push
shlb
cmpsl
enter
sub
cmp
or
iret
movsl
inc
repz
movsl
addb
pop
scas
ljmp
xchg
dec
int3
outsl
cmp
mov
stos
ret
xchg
iret
lea
dec
inc
push
pop
subl
jne
mov
repnz
outsb
call
xorb
push
or
rcr
shr
xor
xor
or
cli
push
push
sub
push
aaa
mov
out
scas
scas
add
cmp
shll
cmpsl
loope
fwait
or
jmp
pop
sarb
pop
fdivr
mov
lods
std
sar
std
divl
mov
sbb
jg
shll
pop
push
sbb
shrl
jae
pause
rorl
int3
jecxz
pop
cmp
fs
adc
push
mov
aaa
imul
jg
cmc
add
aas
cmp
dec
add
pop
xlat
sub
dec
adc
mov
ret
push
dec
into
in
loope
mov
push
jae
insl
int
ret
inc
ret
aas
repz
mov
mul
sub
dec
rclb
inc
xchg
and
inc
pop
bound
cmp
cmp
jno
add
inc
sbb
loop
xor
pop
fsubrl
je
cld
xor
shrb
ss
jnp
insl
push
pop
aaa
lods
inc
cwtl
adc
or
pop
test
mov
stos
adcl
addr16
cmpsl
aam
jbe
inc
es
fldt
cltd
loope
mov
mov
push
cmp
mov
jle
sbb
sbb
adc
sahf
mov
dec
aad
sbb
mov
out
repz
push
push
pop
pop
adc
dec
xchg
mov
xlat
and
outsb
fcos
daa
xchg
fstpt
mov
iret
add
push
shl
xchg
and
push
test
aas
sbb
adc
jge
movsl
stc
stc
jmp
jae
mov
stc
sub
fiadds
ret
hlt
fsubrs
cmp
outsl
dec
or
dec
shll
sarb
add
cmp
fdivs
mov
cmp
add
push
push
cmp
dec
pop
movsb
inc
lods
push
cltd
jmp
lds
push
daa
adc
das
jp
shlb
addl
lods
push
jecxz
mov
push
mov
and
out
dec
pop
mov
inc
fidivrl
rcl
cmp
loop
fistl
mov
cmp
call
in
adc
jecxz
inc
pop
dec
lods
ja
sbb
mov
imul
dec
xchg
sub
cmc
cmp
jb
clc
dec
and
xchg
push
add
jmp
icebp
inc
mov
push
jg
out
cli
adc
pop
out
xor
push
iret
decl
rorl
aad
popa
repnz
sti
cmp
inc
fs
fnsave
add
pop
scas
out
jnp
and
test
lods
jno
mov
decl
mov
push
jg
dec
inc
lahf
add
ss
or
scas
mov
popf
or
ss
pop
sbb
inc
movsl
inc
pop
ljmp
outsl
cmpsb
sub
test
sub
inc
insl
sbb
jmp
stc
mov
xor
das
sbb
push
lcall
out
push
or
inc
test
cmp
into
testl
out
jecxz
pop
in
mov
pop
xor
test
xlat
adc
hlt
cmpsl
dec
push
shll
sub
int
mov
ds
aas
enter
and
xchg
mov
sbb
xchg
sbb
daa
push
rclb
in
inc
jo
mov
xchg
xor
das
ds
sarl
jecxz
popa
mov
mov
and
mov
push
push
addl
pop
mov
inc
push
stos
mov
das
mov
clc
or
mov
ja
pop
sbbb
push
or
mov
cmp
xor
and
not
inc
inc
push
sysexit
cs
dec
cmp
mov
xor
arpl
push
cmp
adc
ret
arpl
inc
adc
lret
pop
cmp
or
cmpsl
jecxz
je
mov
mov
sbb
xchg
out
fs
jnp
dec
or
xor
outsl
mov
inc
sbb
inc
stos
pop
pop
push
mov
or
nop
push
ljmp
sahf
outsl
push
mov
mov
out
pop
cmc
add
jg
xor
mov
sub
shlb
sbb
int3
ret
cmpsb
outsb
into
adc
pop
aam
sbb
sub
mul
ljmp
push
add
or
add
outsb
mov
dec
adc
mov
jge
outsl
out
pop
scas
add
xchg
xchg
sti
jg
mov
loop
xchg
mov
daa
add
mov
out
loope
repz
shlb
imulb
lret
dec
mov
call
lret
fwait
out
or
ljmp
sub
out
xchg
test
pop
sbb
cmp
push
jo
dec
inc
ds
ret
xchg
movsl
je
inc
sub
sub
mov
mov
out
out
test
ljmp
or
mov
pop
lds
int
loope
sub
mov
add
mov
test
outsb
lcall
jo
xchg
inc
or
mov
iret
jb
cmpsb
pop
push
inc
test
shl
and
in
es
aas
inc
movsl
xlat
sub
popa
lcall
push
adcl
notl
movsb
or
lock
scas
push
outsb
mov
loop
repnz
dec
add
arpl
lret
addr16
mov
lods
mov
test
xchg
repnz
sbb
cli
insb
sub
idivl
mov
sub
jl
scas
sub
lret
mov
pusha
adcb
xlat
movsb
xor
movsl
sti
inc
and
sub
xor
cmpb
jbe
dec
andl
pop
xor
pop
xor
aam
and
push
adc
rolb
arpl
aad
rolb
cmpsb
xorl
or
cmp
addr16
adc
and
or
add
dec
icebp
xlat
push
fcoml
fstpl
dec
and
call
lods
add
cmp
sub
dec
loopne
xchg
fisubrs
ja
jb
nop
xor
insl
insl
xor
and
jne
rorl
aad
lock
mov
nop
aas
and
push
sub
movsl
ss
icebp
jbe
dec
xchg
subl
dec
cmp
mull
and
inc
pushf
sbb
cmpb
fidivs
in
ror
in
xor
dec
jle
imul
dec
jp
and
shll
cmpsl
pusha
aad
mov
daa
outsb
pop
or
inc
lds
adc
xchg
mov
jp
sbb
xchg
sti
shrb
repz
pop
stc
in
imull
add
and
js
mov
test
cltd
out
subb
xlat
out
jmp
inc
filds
pop
jecxz
mov
je
hlt
mov
and
lock
sbb
mov
dec
dec
adc
std
insb
enter
pushf
jo
cwtl
rcrb
sbb
hlt
ja
or
sub
dec
adc
mov
xchg
popf
filds
xchg
je
sar
pop
cmp
mov
jne
sub
ja
push
ljmp
stos
sub
and
jns
jns
jge
aad
shl
jno
adc
xor
lods
rolb
push
mov
xor
and
addb
fwait
inc
add
pop
pop
xor
xor
pop
dec
addr16
add
mov
mov
pop
mov
mov
enter
lcall
mov
dec
mov
ds
fmull
jp
pop
outsb
ret
imul
movntq
je
and
jo
mov
pop
cmpsb
push
stos
frstor
lret
clc
xchg
xor
inc
iret
cmp
cmp
rcrl
jno
pusha
sahf
std
pop
push
es
out
and
clc
insb
lods
dec
lahf
add
scas
dec
jle
ret
or
je
mov
popa
dec
mov
fs
repnz
xchg
mov
pop
scas
mov
or
dec
cmp
aam
popf
out
repz
das
cli
push
cltd
xchg
sbb
inc
sub
shlb
lret
insb
inc
jge
insb
out
adc
lahf
mov
mov
test
aam
testl
rorb
rcr
clc
jno
andps
outsl
and
jecxz
push
jns
fndisi(8087
testl
xchg
xor
pop
or
xor
cltd
lods
in
inc
inc
push
cmp
mov
sub
mov
out
xchg
sahf
mov
cmpsl
lret
push
pop
inc
mul
add
add
cmp
add
cld
adc
cld
nop
into
sahf
leave
js
mov
jmp
ja
or
mov
jae
mov
mov
into
iret
and
mov
and
adc
sahf
sti
fidivs
adc
dec
add
mov
call
add
xor
test
scas
adc
jg
push
stos
xlat
cmc
fwait
adc
sub
shlb
or
imul
and
lods
xor
es
cmp
mov
dec
sub
jae
mov
xor
pop
leave
pop
push
stos
cmp
inc
cmp
inc
inc
shlb
push
cmp
sub
mov
ss
jbe
xchg
dec
or
inc
jg
les
mov
pop
sub
sbb
dec
ljmp
push
push
negl
pop
in
aas
mov
dec
inc
push
xchg
and
fs
ds
outsl
mov
stos
repnz
addr16
subb
dec
push
daa
xchg
cmp
lahf
imul
test
in
add
xchg
outsl
mov
jb
xchg
and
push
fimuls
imul
mov
fildll
sbb
repnz
sbb
add
les
push
jl
arpl
test
xor
addb
jb
jns
ret
loop
mov
jnp
std
mov
add
sub
in
ret
pusha
shll
stos
popf
jb
sub
lahf
add
xor
outsl
dec
clc
mov
subl
adc
frstor
or
add
cmp
lret
push
mov
push
aas
adc
sub
jg
push
push
les
sbb
pop
ss
add
inc
mov
xchg
add
sub
xor
arpl
int
push
sbb
sahf
pop
imul
inc
cli
jb
bound
xchg
ret
inc
xchg
dec
dec
xor
dec
inc
out
mov
data16
add
in
inc
stc
mov
xlat
test
fadd
xchg
xadd
dec
xchg
imul
jle
repz
sub
pop
loope
addl
sub
adc
fcomps
lea
dec
addb
and
popf
enter
and
jle
sub
xchg
outsl
mov
out
lahf
sub
insl
cli
mov
sub
insl
jno
ret
mov
insl
gs
shlb
or
lods
pop
std
xor
jnp
call
jae
xor
cmp
dec
cmpsb
pop
push
call
pop
push
sub
and
addr16
mov
lret
call
mov
in
and
mov
lret
jnp
orb
lcall
inc
and
mov
orl
add
les
fstps
xor
test
xchg
cli
or
xor
aaa
mov
and
pop
mov
repnz
jo
pop
mov
pop
ret
and
mov
arpl
xchg
lds
add
hlt
jo
push
fstpt
lock
pop
cli
repnz
fimuls
mov
in
jmp
jle
mov
rcrl
mov
test
and
jae
je
xchg
fs
frndint
scas
cli
hlt
cli
pop
xchg
movsl
mov
add
cmp
js
jbe
cmp
movsb
push
xor
data16
repnz
outsb
adc
jns
jl
push
subl
xor
xchg
mov
es
sbb
fldln2
push
into
andl
inc
add
mov
pop
or
out
xchg
xchg
loopne
adc
fs
andb
xor
iret
imul
push
mov
sbb
mov
mov
xchg
in
cmp
and
mov
sbbb
dec
mov
push
lea
mov
shrb
movsb
dec
inc
pop
jmp
les
mov
out
loop
push
sti
jae
fsub
and
xchg
adc
outsb
out
outsb
stos
inc
jae
add
push
sbb
sarl
mov
popa
mov
addb
les
push
or
insl
dec
and
jle
jecxz
out
sbb
jbe
fimull
jp
sbb
jb
sbb
sub
cld
movsb
jecxz
cmpsl
cmpsl
mov
ficoml
cld
sbb
dec
cmp
gs
lcall
sbb
out
outsl
and
imul
bound
imul
inc
aaa
decb
xlat
pusha
test
pcmpgtw
aad
mov
rolb
inc
xchg
mov
add
add
popf
lret
dec
cmp
fldl
out
mov
inc
cmp
mov
fcomps
mov
out
scas
je
mov
jp
test
push
iret
sub
ja
sub
pop
hlt
mov
cmp
mov
cmpsb
hlt
arpl
mov
lcall
iret
jmp
sub
sbb
scas
dec
divb
jle
aad
pop
insb
push
cmc
inc
xchg
xchg
paddb
dec
hlt
xchg
popa
jl
mov
adcb
jmp
jmp
ja
aaa
xor
add
in
sahf
inc
test
push
dec
shrl
shlb
test
jp
mov
test
and
roll
inc
bound
adc
loop
icebp
sbb
jg
add
mov
repz
jo
mov
sub
aam
sbb
aad
or
push
call
imul
nop
jnp
push
fmuls
mov
sti
sbb
aad
bound
jp
stc
inc
adc
lds
sub
xchg
fmull
stos
jle
inc
jmp
xlat
sbb
mov
jmp
and
sbb
aas
push
pop
and
fisubrl
stc
or
inc
mov
jl
pop
lret
dec
lock
int3
jg
sbb
jg
jae
sbb
cmp
aaa
push
xchg
fldt
xchg
rclb
popa
jns
mov
pop
pushl
sub
hlt
xchg
leave
aad
fimull
sbb
sbb
pushf
inc
popf
adc
dec
jns
ja
adcb
jge
jecxz
lcall
mov
popa
fsubrl
aaa
xor
imul
lcall
cmp
cmp
ret
lcall
aad
xor
fisubl
cmp
clc
pop
push
pop
push
imul
fwait
mov
outsl
push
cwtl
jp
insb
lahf
mov
fimull
inc
jno
push
fwait
mov
cli
inc
jbe
or
mov
push
rclb
mov
jg
stos
fnstcw
cmpsb
test
fsubl
enter
std
cmp
out
pop
mov
bound
notl
cld
mov
or
aas
jmp
gs
mov
xlat
leave
enter
inc
int
leave
mov
dec
jge
icebp
mov
mov
push
xor
sbb
add
scas
ds
mov
fsub
ret
push
jl
xor
adc
xor
xchg
aad
enter
addr16
loop
ss
pop
sub
movsb
sar
leave
in
xchg
xor
xor
scas
call
add
lods
xchg
cltd
arpl
cs
jl
rolb
xchg
je
ret
xor
or
add
pop
dec
jp
hlt
cmp
aas
mov
mov
xor
cwtl
sarl
sub
push
mov
or
push
adc
mov
ds
jo
mov
xor
jbe
mov
or
mov
xor
add
cpuid
or
pusha
data16
das
add
sbb
pop
gs
cmp
adc
push
cmp
sbb
fildl
mov
stc
adc
loop
out
inc
jae
andb
dec
lods
mul
bswap
aam
mov
rcrl
call
push
imul
lds
adc
loopne
repnz
nop
mov
jb
lds
mov
in
and
dec
fidivs
test
mov
pop
inc
sub
jmp
ljmp
jl
sbb
loopne
imul
or
shll
pop
cmp
ret
pop
lock
repz
pop
dec
ds
jae
in
scas
xlat
test
aam
cmpsl
in
cmp
push
xor
sbb
ljmp
pop
pushf
mov
ljmp
out
mov
or
or
lods
ss
pop
add
aaa
arpl
sbbl
cmp
jl
cmp
sub
pop
cmp
cmp
xchg
mov
adc
or
and
sub
arpl
mov
mov
lods
lods
mov
incl
inc
fistpll
sub
sbb
loope
mov
lods
or
push
js
push
push
adc
cmp
cmpsb
pop
int
iret
stc
sbb
movsb
rorb
mov
cmc
lcall
daa
loope
adc
xchg
cwtl
pushw
into
lea
jb
test
std
int
inc
and
or
sbb
jo
xchg
ret
das
cli
out
xchg
test
out
cwtl
dec
mul
cmp
dec
jp
mov
nop
and
loop
sahf
mov
je
test
add
and
xchg
outsb
mov
push
sbb
outsl
or
jnp
push
lret
xor
pushf
loopne
pushf
jae
mov
mov
pop
push
dec
or
lahf
xor
xor
jl
xor
dec
mulb
sub
shrl
gs
lcall
adc
mov
jne,pt
inc
jg
mov
jns
adc
ja
mov
loope
sbb
addb
xchg
push
mov
xlat
push
fdivrs
out
mov
xchg
add
push
repz
lret
sti
in
mov
xchg
cmpsb
and
out
sub
and
pop
cltd
js
not
cmp
aam
sbb
imull
mov
mov
push
sbb
jns
mov
add
mov
imul
xchg
enter
adc
imul
das
mov
scas
xchg
or
in
pop
pop
mov
sub
fucomip
or
or
dec
ja
adc
mov
dec
pop
cmp
mov
das
adc
xor
aam
shll
gs
clc
enter
in
xor
icebp
push
loope
stos
nop
add
xor
pop
imul
in
in
outsb
fldl
loop
add
sbb
sarb
scas
out
dec
mov
and
sub
push
in
jo
cltd
pop
int3
sbbb
pop
inc
rolb
je
sbb
xor
jg
mulb
movsl
push
mov
xchg
mov
int3
bound
fadds
xchg
dec
sub
pop
std
cmc
mov
loope
sub
sub
js
mov
ficomps
xor
sbb
xlat
gs
xchg
cmc
lret
adc
call
sub
jae
sar
enter
jl
pop
mov
cmp
inc
xor
or
push
mov
imul
sahf
jp
pop
dec
and
push
das
movsb
leave
das
sub
insb
push
nop
lods
mov
movsl
and
lock
cmp
rcl
pusha
push
adc
gs
mov
cli
into
scas
jnp
jno
stos
popf
push
push
sub
into
shr
mov
or
inc
out
fisubrs
xchg
fnstsw
xor
loop
popa
aam
cmp
xor
and
inc
sub
xchg
pop
stos
pusha
dec
scas
or
cmp
fisubrs
mov
popf
push
lods
adc
add
repz
pop
fisubrl
int
add
push
mov
jle
orb
sub
inc
enter
popf
or
and
out
fiaddl
cwtl
stos
push
fnstsw
cmc
pop
jo
addl
pop
dec
adc
push
fst
fsubp
cwtl
jbe
inc
popf
add
cltd
gs
lret
sahf
xchg
and
into
dec
xor
mov
or
lods
pop
lods
xchg
rolb
ret
push
inc
hlt
sbb
fldl
rcl
jge
adc
aas
out
adc
setb
test
jbe
into
out
cmpb
and
mov
imul
in
jl
mov
in
mov
rolb
push
loop
es
xchg
mul
jns
inc
popa
lcall
aad
mov
adc
xchg
shrl
lahf
adc
cmpl
in
rcrl
sahf
std
xorl
sarl
and
daa
popf
adc
mov
lds
pop
inc
dec
pusha
hlt
add
and
sarl
rcrb
lahf
adc
mov
out
lock
hlt
inc
bswap
stos
aaa
cmpsb
or
inc
or
aam
pop
inc
sub
sub
push
outsl
lahf
xor
and
push
pop
loop
fildll
sahf
scas
mov
adc
jp
dec
push
repz
cmp
inc
dec
fiadds
sbb
movsl
pop
xor
xor
mov
mov
mov
dec
cs
xor
outsb
sbb
pushf
mov
out
outsl
mov
ss
add
enter
jne
rcll
pop
js
dec
popa
adc
insb
int3
popf
cmp
icebp
and
daa
roll
inc
jmp
jmp
repnz
ret
mov
mov
in
xchg
jne
mov
iret
jge
or
iret
sub
lret
scas
mov
sub
lret
sub
jno
and
popf
movsb
mov
mov
pusha
popf
adcb
sahf
push
mov
or
pop
inc
adc
fnstsw
sub
jne
sub
xchg
cmpsl
repz
mov
cs
out
add
mov
mov
lcall
pop
js
loopne
in
das
popa
add
cld
mov
inc
pop
xchg
and
ret
scas
fdivrs
jnp
mov
faddp
divb
push
movsb
dec
mov
pop
out
movsl
push
dec
pop
js
rcll
jb
jmp
rclb
adc
lds
sarb
mov
out
hlt
push
movlhps
out
out
je
mov
mov
add
mov
and
lock
shrb
cmc
pop
or
mov
mov
push
cmp
pushf
and
sub
or
or
aaa
movsl
sbb
or
add
inc
popa
fistpl
sarb
cs
faddl
pop
jle
mov
pop
imul
push
arpl
sub
pop
push
push
mov
lahf
sub
nop
pop
cmp
in
jnp
sbb
mov
leave
cmpsb
xor
in
mov
mov
jb
push
dec
mov
out
push
stos
test
addr16
mov
out
lahf
pop
jo
inc
scas
jecxz
fadds
push
xor
into
in
gs
sbb
mov
xor
xchg
sbb
arpl
sbb
ret
dec
xor
orb
mov
or
dec
inc
cltd
sbb
sub
out
inc
movsl
daa
mov
mov
imul
ret
mulb
pop
clc
sti
mov
neg
daa
mov
xor
pop
outsl
push
in
sbb
push
mov
xor
in
inc
es
ss
addr16
pop
in
and
xchg
mov
add
dec
jle
hlt
fwait
mov
movb
pop
lods
ret
push
int3
in
xchg
stc
bswap
fldt
int
mov
sarl
and
rorb
xchg
or
daa
dec
enter
jmp
jmp
aas
fstpl
sub
enter
sahf
out
dec
fstps
cmp
lret
pop
scas
xor
fwait
ret
call
leave
jnp
jae
pusha
or
loop
mov
add
sub
pop
leave
cmp
pop
ja
mov
fs
dec
or
dec
cmpl
mov
jecxz
decl
push
cli
pop
push
cmp
cmp
pop
jne
mov
mov
pop
aaa
sub
ds
dec
jle
lea
pop
lret
icebp
mov
fwait
leave
mov
jp
sub
mov
test
cmc
and
loopne
add
into
dec
inc
addr16
xor
bound
xchg
jmp
adc
and
xchg
add
adc
inc
mov
into
icebp
inc
pop
pop
xlat
fstps
mov
and
jns
je
xchg
out
pop
push
mov
mov
dec
sbb
or
int
mov
xchg
inc
in
mov
mov
pop
xor
fs
xor
iret
push
clc
imul
daa
vmovaps
dec
push
mov
fldt
je
pop
ds
mov
mov
add
jl
sub
imul
mov
jge
test
add
mov
std
mov
out
push
and
imul
xor
mov
pop
inc
jmp
neg
les
mov
cld
jle
les
sub
xchg
dec
lock
push
loopne
loopne
xchg
jb
inc
bound
sbb
push
bnd
addr16
in
push
stos
or
je
and
cmp
inc
into
ss
mov
fnsave
test
in
cs
stos
daa
mov
sub
lods
mov
cmpsb
sub
cmp
pop
nop
mov
inc
jmp
xor
cli
sbb
push
popa
mov
fxtract
outsb
lret
and
dec
mov
jg
push
add
mov
sub
movsb
jg
mov
int3
cmp
push
sub
jnp
jle
mov
xchg
aas
stc
js
std
pop
sahf
repz
pop
or
mov
sub
mov
pop
aaa
cmp
rcrl
test
cwtl
adc
push
aaa
lock
lret
adc
mov
loope
mov
mov
push
pop
sbb
mov
adc
mov
in
gs
mov
xlat
fst
adc
nop
out
lcall
cltd
xchg
cmp
pop
rcrl
jmp
xchg
or
lahf
mov
sti
sahf
sti
fidivrs
paddsb
jns
stos
clc
jecxz
bound
jmp
pop
jge
mov
dec
jecxz
jg
add
dec
test
add
dec
xor
fcmovb
sbb
int3
mov
in
cs
mov
push
sub
push
sbb
mov
adc
sahf
adc
call
cmpsl
ds
sbb
xchg
xchg
pop
mov
mov
jne
js
popa
insb
mov
movsl
test
shrl
test
mov
sbb
fldt
ja
cmp
push
mov
lret
xor
dec
jne
lea
sub
inc
push
or
push
movsb
push
loope
sbb
es
jne
sub
imul
dec
repnz
cld
cmp
mov
inc
push
adc
jle
mov
test
cmp
pop
push
pop
xchg
es
insb
or
adc
adc
sbb
addr16
loop
sbb
mov
ljmp
scas
outsl
enter
into
orl
js
cld
int3
xor
insb
and
fsubrl
cmp
inc
adc
lret
and
std
sbb
fisttpll
jno
dec
pop
fnstenv
pushl
mov
movsb
or
adc
lds
sub
rolb
mov
test
push
cmpsb
addb
pop
xchg
push
pop
lods
gs
cmp
decl
andl
mov
cmp
or
gs
jne
pushf
add
sbb
pop
outsb
mov
lcall
shlb
xchg
mov
pop
pusha
jmp
cltd
fs
mov
adc
pop
mov
push
xor
rcll
rcr
insl
inc
movsb
insb
lret
ret
arpl
aas
sbb
pop
dec
mov
insl
push
stos
stos
pop
push
sbb
adc
in
clc
xor
sbb
mov
clc
xchg
fwait
addr16
fisubrs
orb
cwtl
jmp
pop
lods
les
rcll
adc
xchg
js
dec
inc
out
enter
repz
andb
testb
mov
movsb
shll
pop
call
jbe
mov
aam
xor
ret
aaa
stos
add
std
xchg
fnstsw
popa
fs
xchg
xor
lods
xchg
insb
jg
mov
add
jmp
imul
shr
push
add
ljmp
inc
mov
jb
popf
adc
scas
push
cmp
xorb
mov
push
inc
or
mov
xchg
jg
lea
xchg
cltd
pop
sub
xlat
je
out
outsb
mov
mov
adc
addl
es
mov
in
adcl
push
popf
jecxz,pt
xlat
cmp
pop
insb
sub
sub
add
aad
or
sub
inc
xor
cmp
ss
movsb
fwait
addl
call
js
mov
xlat
adc
outsl
and
stc
inc
cli
pop
daa
ja
add
and
inc
les
jne
out
arpl
ds
and
fcmovne
cltd
inc
push
imulb
call
sbb
ret
cmc
in
into
cmp
xlat
adc
and
add
push
add
arpl
cmp
and
push
pop
outsl
adc
mov
xor
jne
mov
arpl
mov
xchg
add
and
lea
xlat
andb
pop
pop
hlt
lret
mov
or
in
lods
dec
push
pop
loopne
jmp
sbb
mov
xchg
test
sbb
mov
pop
xor
hlt
sub
dec
imul
xchg
sbb
cwtl
xchg
and
dec
pop
dec
repz
dec
inc
sti
push
xchg
sub
adc
in
cmc
out
int3
and
mov
and
pushf
xchg
adc
or
mov
sub
sub
popl
shufps
mov
neg
pavgw
cmp
sbb
xchg
jns
dec
push
fisubl
sbb
jae
addr16
ljmp
pop
cwtl
jns
cld
push
xor
jmp
ljmp
inc
add
sar
and
sub
cmp
sub
fiadds
and
and
adcb
push
mov
push
shl
jns
mov
dec
cmp
cmp
xchg
out
pop
push
sub
jb
ja
push
add
add
out
shl
adc
mov
and
mov
in
es
mov
push
inc
call
cmpsb
int
jg
leave
mov
jne
test
lods
or
pop
ds
into
ret
fidivs
mov
sbb
mov
jl
add
and
cmp
lods
cmp
jl
mov
or
nop
arpl
add
icebp
roll
xchg
mov
aas
or
pop
xchg
mov
cmp
xor
js
jmp
jbe
mov
scas
loop
mov
inc
insb
pop
stos
cmpsl
push
push
and
and
scas
dec
push
cmp
add
and
add
test
adc
jo
push
jae
dec
adc
adc
and
fbstp
daa
icebp
jo
jne
cmp
push
ret
mov
sbb
mov
push
cmp
cmp
mov
fdivr
and
add
dec
push
test
inc
pop
cmp
cwtl
dec
lods
pop
push
push
fiadds
es
int
aas
mov
rcrl
lahf
lea
daa
mov
call
jne
mov
popa
mov
mov
and
push
sub
outsl
repnz
add
repz
mov
pop
stos
sbb
xor
repz
sub
shrl
pop
xchg
cmp
pop
cld
cmpb
jb
nop
lock
lcall
sbb
jmp
punpcklbw
cmp
clc
js
data16
xchg
or
fistl
mov
pop
fdivl
lea
fcmovbe
inc
enter
cld
aam
push
call
sub
and
std
repz
nop/reserved
repnz
pushf
xor
add
fisubl
stc
rcrb
dec
cmpsl
imul
pop
notb
inc
xchg
ret
inc
int3
push
or
lea
add
cld
mov
mov
cltd
mov
adc
pop
into
rcrb
inc
xchg
pop
icebp
cmp
int3
mov
jnp
imul
sbb
pop
xchg
xor
fldl
out
dec
sbb
mov
cs
sbb
and
lcall
pop
fwait
jno
addr16
sarl
and
lods
paddq
push
mov
fmulp
add
das
addb
jb
xchg
jno
pop
cmp
cmp
movsb
sarb
icebp
mov
aaa
lcall
sub
pop
std
gs
bound
and
mov
incb
and
lahf
sbb
negl
js
push
jmp
xchg
das
fwait
dec
dec
or
into
js
jne
sbb
cmp
xor
pop
adc
sbb
jbe
push
jp
iret
test
mov
mov
cltd
xor
sbb
imul
cmc
xor
and
inc
fwait
pop
lods
jmp
cmp
cmp
inc
dec
mov
mov
pop
cmp
and
push
adc
xor
sbb
push
dec
mov
notl
cli
push
add
mov
push
imul
or
and
xor
add
mov
mov
push
aam
push
int3
sbb
mov
stos
test
dec
js
sub
popa
sahf
mov
sti
jge
cwtl
test
das
arpl
add
mov
lcall
dec
jo
sub
sbb
outsl
test
aam
mov
mov
sbb
pop
jge
sti
insl
and
sbb
xchg
push
hlt
int3
out
test
pushf
fstps
or
repz
rcrl
dec
ret
lea
nop
mov
outsb
or
cmp
hlt
dec
repnz
lds
xor
adc
cltd
inc
lret
cwtl
aas
lret
dec
mov
mov
inc
sti
ret
jbe
pop
and
ficomps
push
movsl
or
dec
and
jo
lcall
or
in
setae
xor
xor
outsl
iret
jnp
pop
mov
mov
into
cmp
int
dec
adc
int3
or
xor
pushf
arpl
cmc
jge
jbe
movsb
add
inc
lret
into
jle
loopne
push
icebp
mov
icebp
and
sub
pop
arpl
cli
into
fdivrl
imul
cmp
pop
xorb
adc
cwtl
dec
pop
dec
cli
iret
lret
gs
clc
movsb
xor
ds
mov
sbb
lfs
cltd
pop
xor
pushf
push
mov
jno
dec
xorb
aas
jb
sub
std
imul
xchg
repz
ja
pop
mov
repnz
inc
dec
jbe
dec
mov
push
pop
mov
test
and
loop
test
es
push
ss
repz
pop
sbb
in
lds
fwait
add
or
pop
aad
sbb
lret
loopne
repz
stos
sti
and
inc
test
add
mov
test
xor
mov
cmovbe
sarl
adc
imul
test
cmp
or
push
leave
mov
rclb
stos
aam
jo
xor
sahf
aaa
comiss
scas
mov
imul
xchg
push
xor
aaa
repz
stc
mov
aaa
inc
sub
mov
inc
test
jle
inc
imul
cltd
pop
int
cmp
test
mov
cld
icebp
cmpsl
es
mov
xor
sub
mov
push
jle
pop
or
std
and
lods
cmp
mov
cmpb
jne
xchg
and
mov
faddl
add
in
or
cltd
aas
insl
lea
mov
inc
xchg
addr16
popa
aaa
mov
roll
js
popa
fiaddl
lret
fistpll
sbb
lods
out
int3
xor
and
loopne
sub
repz
out
dec
xchg
xchg
shrl
lcall
lock
push
lcall
cs
xchg
mov
ja
add
out
mov
and
test
out
mov
out
iret
mov
mulb
insl
push
push
jbe
xlat
out
lret
push
je
dec
fs
hlt
add
pusha
push
lret
iret
xchg
jae
test
fldt
fisubrl
or
jp
xchg
push
popa
inc
cmpsl
cld
lods
lahf
sahf
movsl
push
jb
int3
in
dec
jnp
faddl
xor
push
imul
cmp
pop
or
inc
ret
and
xchg
mov
inc
jno
popf
aas
or
adc
jl
sub
in
jle
das
push
sub
push
jmp
inc
dec
movq
repz
imul
pusha
push
int
inc
push
mov
enter
insb
enter
popa
fstpt
pop
repnz
shl
or
jnp
arpl
sub
int
aas
sbb
dec
jecxz
mov
fldl
insb
ficoms
repz
xor
mov
push
xchg
dec
mov
negl
iret
or
lods
fdiv
gs
jle
scas
jnp
inc
mov
inc
inc
mov
cwtl
or
mov
mov
xchg
scas
mov
or
fbld
adc
sub
pusha
leave
fnstsw
mov
xor
lea
in
jl
jb
jge
sub
and
into
mov
ds
mov
int
cltd
dec
jg
push
fucomi
imulb
jmp
fldenv
dec
lock
mov
enter
sub
or
mov
cmovno
sbb
mov
cs
push
pop
into
jmp
lcall
and
lcall
out
push
pop
bound
pop
nop
jle
popa
dec
cmp
inc
pop
enter
dec
pop
imul
cmp
jo
bound
shll
dec
in
add
clc
mull
pushf
in
jg
mov
lret
pop
jnp
push
sbb
inc
xor
adc
aad
scas
xchg
adc
fs
pop
xor
aad
and
jmp
stos
popf
dec
in
sti
jnp
xchg
jg
repnz
das
xlat
xchg
inc
xlat
mov
lods
jbe
and
push
out
std
mov
xchg
mov
push
mov
xor
sub
imul
loop
out
fs
push
mov
lcall
inc
adc
mov
sarb
xor
pop
jnp
cs
cwtl
jo
rcll
sub
mov
mov
pop
add
daa
insb
jge
test
add
sbb
cs
psubusb
shl
add
lcall
mov
dec
dec
push
pop
sahf
ja
std
jne
push
je
push
lret
out
add
cmc
scas
mov
test
and
mov
sub
xchg
pushf
fistpl
in
or
xor
aas
cmp
jge
addr16
xchg
xchg
fldln2
stos
cltd
ds
mov
dec
pop
mov
in
sti
pop
dec
pop
test
call
xor
lock
popl
pop
lret
nop
and
stc
xchg
push
add
sbb
orl
push
in
call
push
jnp
xchg
pop
leave
and
push
in
push
mov
and
pop
xchg
add
add
js
inc
cli
leave
test
loope
inc
push
fcomip
lods
push
aam
mov
mov
adc
scas
mov
imul
dec
int
fbld
cli
into
mov
inc
fdivrs
ljmp
shl
loop
xchg
inc
push
stc
rol
jge,pn
adcb
pop
pusha
push
shlb
inc
push
clc
iret
test
repz
push
dec
pop
insb
xchg
sbb
xchg
inc
cli
xchg
xorl
in
ficompl
jo
add
jmp
cbtw
int
jecxz
xchg
bound
jle
outsb
mov
fucomp
pop
int3
popa
push
outsb
cmpsb
leave
leave
fnstenv
mov
pop
mov
dec
std
rolb
mov
lret
call
cmp
xchg
push
mov
mov
stc
xor
int3
fildl
inc
cli
mov
clc
aam
add
cmp
mov
hlt
aad
sbb
adc
das
push
mov
push
pop
gs
shlb
push
xor
xchg
das
cmp
fldenv
inc
add
xchg
pop
insb
sbb
test
pop
jle
push
jae
add
push
cmp
push
push
push
fucomi
ficoml
push
mov
adc
push
test
shrl
into
bound
aaa
xor
popa
mov
xchg
mov
jno
jg
pop
ljmp
sub
dec
sahf
clc
dec
imul
pop
mov
pop
outsb
mov
mov
dec
lahf
xor
clc
js
or
add
adc
jecxz
in
dec
fsubr
and
outsl
ret
jne
js
sbb
int3
xchg
or
movups
cmp
inc
dec
pop
orl
std
ret
jmp
int
sbb
push
jns
clc
cmp
add
dec
scas
scas
clc
jb
ljmp
fcomps
fmul
jmp
clc
cmp
rclb
mov
mov
sub
bound
push
add
divl
xchg
loope
out
int3
jg
mov
sub
mov
inc
inc
out
mov
mov
out
outsb
addl
push
jbe
mov
scas
mov
aam
cli
inc
sar
push
lcall
sahf
xor
imul
sub
sub
mov
orb
mov
lock
imul
repz
dec
into
sahf
adc
adc
push
cmpsb
pop
xor
xchg
repz
pop
or
sbb
movsl
stos
stos
iret
adc
fmuls
sub
cltd
call
jmp
mov
and
dec
subb
in
mov
inc
movsl
jno
mov
imul
rcll
movsl
adc
dec
aas
sbb
fcmovnb
adc
adc
fbld
cmpsl
adc
xor
out
loopne
loop
push
cli
mov
dec
cld
mov
or
add
cmp
mov
xchg
aam
inc
inc
or
das
leave
clc
xchg
dec
in
repnz
gs
lea
fdivp
mov
fs
lcall
dec
cmp
jl
jno
mov
out
loopne
popf
das
xchg
fwait
insb
out
insb
pusha
jmp
sub
sbb
jp
inc
je
shrb
lods
adc
mov
clc
push
jp
rol
stc
inc
repnz
or
cltd
pop
adc
mov
repz
lea
push
movsl
lods
pop
add
aad
mov
incb
push
jp
fldcw
mov
cmp
addr16
dec
mov
call
jo
lods
sbbb
sbbb
dec
mov
add
push
imul
rorb
sbb
mov
add
mov
adc
inc
jp
xor
xor
push
mov
in
push
sbb
cmp
mov
ljmp
mov
xlat
jns
imul
jmp
jae
leave
fnstenv
push
fimull
test
mov
or
mov
mov
cmpsb
xor
fidivrl
or
icebp
push
les
or
adc
xchg
mov
into
insb
dec
inc
xor
cld
lea
mov
jle,pt
dec
xor
mov
aaa
mov
jo
inc
mov
add
sbb
inc
xor
pop
mov
test
adc
jnp
cmc
ret
stc
ror
or
sub
stos
sub
imul
je
mov
inc
inc
adc
clc
mov
outsl
jmp
xor
push
sarb
pushf
dec
call
dec
xor
pop
fstps
cmp
jae
fcompp
rorb
js
mov
jge
out
mov
aad
cmc
adc
and
and
out
jecxz
add
enter
and
jle
xor
pop
les
ja
or
pusha
dec
insl
jp
xor
lcall
sub
xchg
arpl
mov
fdivr
dec
ret
mov
lret
dec
scas
in
mov
insb
test
mov
imull
sbbb
pop
jns
imul
stc
xlat
sub
push
jno
test
or
cmpsb
sti
hlt
adc
pop
xchg
lods
sub
xlat
negl
rorb
ds
mov
xor
test
ljmp
dec
mov
xor
mov
mov
mov
push
sbb
lods
sbb
jecxz
xor
cmpsl
rcll
shlb
clc
mov
xchg
or
pushf
ljmp
hlt
or
fsubs
lds
call
adc
nopl
call
push
cs
stos
mov
out
sub
xor
mov
adc
xchg
mov
fsubl
out
pushf
lods
sub
enter
or
js
jo
mov
sub
lret
stos
out
xchg
pop
cmp
lret
add
xor
jbe
inc
jbe
or
repnz
incb
and
push
cltd
sbb
adc
add
sbb
inc
dec
inc
push
sub
xchg
pop
ds
lahf
faddl
fs
test
iret
rclb
jp
loop
pop
lahf
or
sahf
xchg
mov
xchg
inc
aaa
dec
xchg
jg
sbb
sarl
ljmp
movsb
test
fld
dec
mov
xor
mov
mov
scas
int3
xchg
divl
xchg
in
xor
rorl
mov
and
inc
out
fcoms
mov
xchg
into
stos
cmc
add
test
adc
jecxz
nop
or
movb
adc
leave
xor
imul
sub
call
shlb
or
adc
xchg
xchg
int3
fnstsw
dec
push
cmp
sub
not
cmpsl
fiadds
inc
adc
push
in
aas
jp
fstps
push
inc
fldenv
push
and
movl
js
xlat
mov
inc
push
jge
or
leave
inc
pop
mov
sub
cli
imul
and
aas
xor
gs
mov
jnp
xchg
sbb
cmpsb
sbb
jae
cs
add
xchg
sub
scas
cmp
xor
dec
mov
es
lds
dec
inc
xorb
and
fmull
lea
testb
cli
mov
mov
pop
sub
sahf
dec
ljmp
imul
jo
jp
jb
decl
out
lock
push
jecxz
out
xchg
push
aaa
jge
mov
sti
lcall
rol
push
sbb
fstl
push
out
scas
pusha
jno
cld
cmc
push
mov
scas
fidivs
sbb
repnz
mov
or
mov
lcall
int
sub
gs
pop
xor
mov
pop
lret
xchg
mov
nop
xor
xchg
xchg
mov
mov
cmp
mov
cmp
js
test
push
scas
sub
lahf
dec
inc
or
cmpsb
lcall
loopne
lcall
cli
scas
push
cmpl
xor
loopne
sub
clc
daa
cmp
dec
or
clc
sbb
and
cs
xor
fimull
adc
fcmovu
inc
xor
imul
xchg
jecxz
xchg
pop
ret
push
movsb
push
loopne
jbe
fbstp
imul
cmp
cmpsb
cmp
les
std
in
out
dec
int3
sub
jnp
pop
iret
ds
movsl
mov
loop
pop
push
nop
jmp
rclb
ret
add
rclb
js
pusha
mov
inc
adc
add
in
or
int
hlt
movsl
adc
adc
sub
pop
nop
pop
call
cli
push
aam
arpl
push
fwait
stos
pop
push
cld
sbb
cmp
movsl
sbb
fbld
inc
ret
les
push
daa
les
or
xor
fiaddl
sbb
mov
xchg
add
cmp
popa
dec
jb
mov
cmpsb
sub
push
mov
rolb
or
add
or
pop
in
mov
in
pushf
fdiv
or
mov
inc
inc
cmpsb
cmc
mov
inc
cmp
push
fidivrs
mov
xchg
inc
data16
aam
cli
dec
inc
lret
hlt
int3
movsl
loop
and
nop
repnz
testl
repz
and
test
adcb
mov
push
xor
jne
subl
ds
js
hlt
loope
and
mov
and
lea
movsl
xchg
arpl
cmp
push
pop
mov
call
jle
pop
cmpsl
mov
mov
lcall
pop
dec
adc
pop
in
xchg
ret
cld
test
insl
cmp
repnz
mov
xor
fisubrl
mov
js
rcr
add
fs
cmp
mov
mov
jb
jb
fmull
divb
lods
xchg
sbb
enter
sbb
popa
scas
dec
imul
mov
mov
push
jmp
divb
xchg
mov
cmp
jecxz
testl
ret
rcll
in
roll
jno
cmpl
mov
out
shl
cld
fs
xchg
inc
dec
scas
mov
inc
ret
in
adc
jne
leave
pop
test
dec
inc
rorb
cmp
xor
rcrb
jno
les
std
lahf
mov
sub
dec
sub
or
dec
rolb
stc
xor
aad
fisubl
fadd
xlat
add
inc
fdivl
pop
lahf
fisubrl
push
out
sbb
subb
mov
push
push
inc
inc
pop
push
dec
lcall
fldenv
xchg
cmc
inc
lods
adc
cmp
inc
lock
imul
fildl
std
shlb
cs
cltd
ror
cmp
mov
push
das
xchg
mov
jnp
lods
and
add
in
ret
mov
repnz
cmp
dec
mov
push
xchg
push
addr16
push
stos
movsl
movsb
mov
push
and
inc
sub
mov
enter
dec
lds
xor
je
push
xor
or
mov
xchg
cmp
jmp
cli
push
adc
jb
test
jo
or
jb
cmpsl
call
out
push
ror
sbb
ds
iret
fimuls
int3
fwait
movsb
push
inc
add
mov
sbb
cmp
pop
mov
or
and
lahf
arpl
pop
repz
test
pop
movsb
insl
out
fsubrs
sub
pop
or
cmpsl
inc
jns
aas
lahf
in
rcr
dec
jae
push
repz
mov
add
repz
mov
xlat
jecxz
daa
or
sub
and
rorb
xchg
in
out
scas
mov
adc
add
mov
insl
ja
xchg
lods
scas
jmp
jl
insb
aad
repz
test
in
pop
js
call
stos
mov
or
push
in
jp
add
bound
dec
sbb
and
xchg
pop
loope
and
insb
add
into
pop
mov
cmpsl
and
mov
push
int3
inc
popf
jmp
repnz
and
jne
out
cmp
adc
push
and
mov
out
cld
dec
sbbb
or
movsl
out
lds
popf
add
mov
aad
int
pop
loop
sub
add
mov
mov
or
add
mov
cmp
mov
xchg
mov
xchg
xchg
or
popf
adc
test
outsl
dec
pop
pop
mov
xor
aam
jno
xlat
imul
dec
test
sbbb
out
cli
mov
sub
push
and
cs
clc
mov
mov
stc
nop
cli
cmp
add
jno
ja
inc
fsubl
sub
repnz
xor
gs
rcrl
mov
add
pushf
xchg
sahf
xchg
pusha
adc
enter
shll
mov
inc
xor
jnp
cmp
mov
in
mov
push
sbb
sbb
dec
sbb
mov
scas
repnz
mov
fimull
lods
fildl
push
vpmuludq
test
sbbl
mov
jmp
scas
xor
xchg
out
push
out
mov
jae
stos
mov
and
scas
sub
lods
xor
mov
dec
xchg
outsb
fisttps
add
push
dec
mov
inc
test
insb
pop
inc
or
cli
push
xchg
shr
mov
fadds
popa
insl
imul
cmp
jno
mov
add
js
xor
leave
fildl
mov
aas
and
adc
lds
ficoms
jno
scas
xchg
sub
jl
xor
ja
loope
lahf
movsb
or
and
sub
add
adc
push
push
cmpsl
dec
jecxz
mov
movl
xchg
and
and
repz
xchg
xor
pop
mov
xchg
inc
add
xchg
cmpsb
push
xchg
or
sub
repnz
jno
push
sarb
xor
mov
lods
ja
mov
mov
mov
xchg
in
scas
sbb
imul
lret
adc
mov
ret
xor
xor
repnz
push
outsb
adc
sub
inc
cmp
js
xchg
pop
push
int3
jmp
lcall
push
rorl
cmp
decb
inc
aas
mov
jge
pop
sub
stos
jp
scas
cwtl
push
stos
jne
add
pop
scas
or
push
sub
or
inc
mov
pop
ljmp
add
mov
push
das
xchg
insb
or
int
mov
cmp
lahf
xor
cmp
repnz
out
xlat
outsb
mov
popl
xchg
push
dec
adc
jno
xchg
bswap
jnp
xor
push
les
adc
scas
fisubrs
daa
out
call
fstps
pop
pop
outsl
lret
xchg
add
enter
xor
inc
mov
jmp
out
cwtl
mov
dec
xchg
push
jmp
insb
fcompl
imul
test
pop
out
xor
pop
mov
dec
dec
and
push
imul
test
je
adc
dec
clc
mov
addr16
push
mov
xor
mov
mov
aam
push
andl
push
cmp
arpl
xorl
lret
dec
pop
xor
dec
inc
jecxz
dec
inc
fnstsw
and
mov
pop
test
jmp
xor
or
ror
push
rcrl
mov
inc
jl
add
pop
pop
inc
test
xor
mov
rcrl
aad
fistpl
mov
xor
aas
cmp
loop
out
js
mov
popa
out
mull
push
test
decb
imul
pushf
in
xor
shr
cmp
add
clc
or
push
lods
mov
out
push
ds
cmpsl
rcrb
aaa
pop
jbe
xchg
mov
push
or
xor
mov
sub
lds
mov
iret
jo
or
xchg
stos
andb
movsb
lahf
mov
cwtl
mov
pop
inc
adc
sahf
aad
adc
jo
xor
inc
add
je
decl
loope
fldl
sbb
mov
mov
out
imul
pusha
sahf
arpl
push
jle
fisubs
popf
pop
js
pusha
scas
popf
push
test
cmpsl
adc
pop
pop
push
ds
adc
sbb
xchg
push
jbe
popf
iret
bound
sub
or
jno
nop
leave
push
mov
inc
outsb
mov
xor
inc
pop
int3
cld
pop
adc
lahf
sahf
jbe
or
adc
dec
cmp
lods
sub
jp
test
inc
pop
inc
out
pushf
test
xlat
int3
jp
add
scas
pop
push
mov
pushf
jno
cltd
in
fidivl
and
sar
cmp
adc
pop
mov
loope
ljmp
stos
jb
or
push
scas
stc
insb
shlb
jl
and
in
mov
mov
test
frstor
xchg
cmp
jbe
imul
xor
ljmp
sbb
repz
ret
mov
mov
add
gs
addr16
push
lods
and
in
inc
cmp
xor
inc
xchg
lods
popf
sbb
sti
dec
in
mov
faddl
addr16
inc
xchg
xchg
ljmp
cmpsb
mov
mov
add
dec
push
cmp
xchg
aaa
jp
fbld
fldcw
roll
cmpsl
cmpb
lret
or
out
xchg
inc
out
mov
add
sbb
inc
mov
xor
fnstenv
ret
in
outsb
out
dec
cmp
sti
nop
inc
rcr
imul
adc
and
loopne
dec
test
out
clc
out
dec
dec
cmp
add
mov
and
jbe
lret
sub
addr16
adc
cmp
or
cmpsl
adc
dec
xor
fnstcw
pop
aam
xchg
sub
add
lods
mov
xor
daa
ljmp
clc
or
xor
inc
jnp
pop
push
lret
out
pop
shll
mov
sbb
cmpsb
rolb
push
fldt
mov
loop
and
mov
jns
sbb
xchg
sbb
das
add
mov
or
inc
xchg
popa
inc
shll
or
out
xchg
movsb
push
mov
mov
cltd
inc
cmp
jno
int3
mov
popf
jne
and
or
ds
fldt
addb
insb
movsb
iret
lods
ffree
mov
inc
sub
xlat
push
rcrb
jo
out
ret
shl
fidivrs
je
das
popa
lea
test
enter
pop
mov
repnz
mov
cmp
add
jmp
mov
or
dec
add
xchg
sub
mov
fbstp
mov
mov
test
sbb
lds
jb
pop
ds
push
pushf
sub
lahf
int
add
jecxz
pop
lds
xchg
cltd
sbb
gs
imul
jo
mov
enter
mov
dec
mov
add
cmp
sub
push
xchg
push
or
nop
mov
jge
imul
fdivl
push
cmpsb
or
or
jmp
jae
mov
pop
mov
xchg
cs
cmpsb
add
add
cwtl
xchg
aad
pop
pop
das
cwtl
adc
movsb
and
test
adc
jp
dec
pop
out
outsl
rorl
lahf
push
jl
call
sub
xchg
xchg
ret
sub
decl
xor
lret
and
inc
fs
lock
aad
jle
sahf
out
xchg
lea
movsb
and
jmp
lock
call
mov
aas
mov
mov
sbb
loopne
fisubrl
cwtl
data16
sub
cmp
cwtl
mov
mov
adc
jl
add
call
lds
les
sub
cmp
repnz
aam
outsl
mov
andl
adc
pop
out
cs
jbe
lods
and
int3
pop
mov
push
and
add
mov
xchg
adc
jp
pop
leave
mov
fwait
jbe
imul
mov
xor
push
xor
or
xchg
jae
test
and
in
mov
in
jb
xchg
cmp
and
icebp
pop
and
fistpll
mov
imul
or
sahf
jo
add
jo
mov
je
jmp
outsb
or
add
dec
xor
add
test
jle
data16
inc
dec
add
cmp
js,pn
inc
or
adc
push
mov
sbb
mov
aad
ja
push
push
xor
pop
mov
cmove
jp
jae
aam
mov
stos
push
mov
mov
adc
inc
jae
test
inc
jnp
test
push
push
rcl
in
idivl
and
xchg
inc
push
xchg
sahf
push
mov
mov
or
pop
dec
seta
lret
xchg
xchg
addr16
out
decb
addb
outsb
je
cmp
cmpsb
xchg
test
idivl
xchg
cmpsl
sub
xlat
mov
cli
rcrb
pop
popf
mov
imull
scas
sbb
cmp
xchg
loopne
andl
push
sub
mov
mov
mov
sbb
adc
pop
into
sahf
stc
pop
imul
dec
and
and
sub
icebp
lahf
lds
aaa
dec
data16
enter
mov
ja
mov
lret
jmp
test
dec
sub
pop
mov
pop
sbb
shrb
mov
ficomps
rcl
mov
nop
mov
mov
jne
adc
push
push
int
jae
cmpsl
gs
pop
outsl
cmpsl
mov
scas
mov
jge
xor
imul
push
xchg
cwtl
leave
stos
dec
pop
movsl
mov
pop
mov
int
cli
es
jle
mov
mov
es
pop
setge
adc
inc
push
addr16
into
les
in
in
outsl
insb
lret
jo
add
add
pop
hlt
mov
int
sbb
imul
sbb
cmp
dec
sbb
scas
and
dec
shlb
push
push
in
mov
lds
xchg
popf
lcall
jbe
daa
jl
cmpsb
jne
or
popf
push
fiaddl
call
push
sbb
push
fcompl
dec
xor
sbb
adc
fsubs
inc
push
jmp
sbb
inc
repz
pop
lock
adc
test
lock
shrb
inc
add
xchg
or
lea
bound
cmpsb
mov
mov
mov
mov
aaa
repnz
xor
or
outsb
ljmp
aaa
nop
cmp
xchg
pop
js
hlt
sti
cmp
movsl
mov
sub
test
pop
cli
js
cwtl
pop
push
pop
and
aad
xor
popa
rcl
lret
mov
nop
lds
jg
loop
cmp
mov
mov
xchg
add
dec
addr16
xchg
add
xchg
push
dec
xchg
xchg
jns
cmp
negl
mov
inc
je
jbe
cmpsb
aaa
js
in
jnp
or
iret
jns
mov
daa
mov
sbb
xor
add
cmpl
inc
mov
mov
test
ljmp
and
jns
out
add
rcll
lret
sbb
imul
stos
mov
das
movsl
mov
sub
rcrl
imul
inc
into
adc
cmp
lods
or
daa
xchg
iret
lods
adc
insb
and
in
pusha
push
int3
iret
test
in
dec
icebp
add
aas
mov
dec
daa
fsts
or
rorl
into
mov
mov
xchg
sbb
pop
and
adc
in
dec
lret
add
fbstp
popa
push
jp
sub
pop
rolb
aas
mov
xor
or
in
pushf
jne
aam
in
idivb
cli
or
popw
ja
cmpsl
cli
pop
or
gs
dec
daa
pop
ljmp
rcl
test
dec
inc
mov
andps
jae
mov
cli
and
and
stc
js
pop
out
sub
ds
rolb
aaa
push
movsb
bound
mov
pop
gs
jo
and
inc
pop
insl
jo
push
fldenv
dec
add
imul
mov
cmp
repnz
add
stc
fdivrl
std
and
push
scas
loopne
sub
inc
repz
pop
cmp
or
mov
dec
sbb
call
mov
mov
inc
xor
ret
pushf
ds
ret
pusha
push
xchg
in
mov
in
iret
sti
loope
fwait
hlt
inc
ss
jl
push
push
cltd
jo
xor
push
aam
jmp
sets
and
cmpsb
push
mov
push
xorb
jl
xor
add
mov
add
adc
rcrb
dec
dec
bound
insb
mov
jl
stos
fdiv
sbb
jnp
sub
ficompl
insb
mov
inc
pop
mov
jne
lds
mov
sti
adc
mov
inc
pop
dec
pop
adc
pushl
shlb
das
push
lret
lcall
xor
mov
xchg
xchg
or
fdivrs
cmp
test
fldz
xchg
ficoms
pop
or
fxch
ja
dec
lcall
shrl
mov
mov
imul
cltd
into
push
jae
push
and
fs
into
jecxz
inc
sub
mov
arpl
leave
xchg
push
add
cmpsl
fld
fimuls
jns,pt
pop
stc
iret
gs
inc
mov
cmpsl
and
fldl
jns
dec
lock
mov
cmp
jns
mov
stos
xchg
sub
push
movsl
addl
push
mov
jmp
cmp
clc
jle
cmp
xchg
add
fstl
mov
rclb
outsb
dec
xchg
sbb
and
je
cmp
lea
out
mov
aad
fwait
mov
adc
test
xchg
push
movsl
xrelease
push
test
add
sbb
pushf
pop
mov
push
int
test
enter
jle
cmp
out
int
hlt
pop
test
inc
pop
add
dec
adc
jo
add
repz
jo
cmpsl
fimull
ret
roll
fldt
sub
inc
popf
or
mov
add
dec
in
push
stos
testb
xor
jle
lds
test
sbb
fildl
pop
enter
roll
imul
mov
dec
in
shrb
sub
cmpsb
mov
addr16
js
ja
leave
jmp
sub
out
mov
mov
pop
or
dec
push
jne
sbb
lcall
mov
cmp
sbb
sub
jbe
enter
jns
enter
xor
xor
xor
dec
push
jmp
inc
xor
lea
mov
lret
sarl
ss
and
icebp
stc
leave
jbe
cmp
arpl
cld
jl
test
mov
cmc
pop
add
ret
cwtl
scas
cmp
pop
lret
int3
xor
add
test
sub
add
sbb
inc
mov
scas
inc
jmp
scas
adc
cmp
nop
test
daa
cmc
insl
movsb
cmp
mov
push
and
and
pop
xchg
inc
jp
push
in
mov
jns
sbb
aad
dec
mov
sub
xchg
push
je
fisubs
pop
subl
fmul
jmp
sub
pop
xor
ja
in
sbb
cli
loope
xchg
sbb
lds
push
ret
mov
in
popf
lea
int
jecxz
mov
test
inc
or
jno
daa
cld
pop
daa
inc
mov
mov
mov
sbb
dec
ret
aad
arpl
or
xchg
jg
jae
push
xchg
fildll
push
cmp
aas
jmp
inc
sub
mov
sub
xor
not
repnz
adc
cltd
sahf
imul
mov
cmc
add
sub
sub
dec
sub
cmp
cmpsb
addr16
in
lea
sub
sbb
cmp
xchg
pop
sbb
jne
pop
movsb
push
mov
xor
out
js
or
mov
insb
jno
cmpl
scas
push
pop
xor
popa
xchg
push
pop
xchg
dec
xor
dec
xchg
js
adc
dec
mov
ja
ret
aas
in
sub
and
fidivs
mov
movsl
cltd
gs
cmp
and
or
xchg
aad
scas
nop
in
dec
xchg
and
and
xor
ja
xchg
js
mov
jp
repz
mov
add
xchg
and
push
inc
push
fucomp
mov
mov
inc
and
xchg
cmc
mov
pop
and
adcl
test
add
fs
xor
sbb
xor
and
jl
and
sbb
or
imul
cltd
push
test
jp
fs
mov
mov
ret
in
loope
cmpsl
cmp
insl
or
dec
repnz
lret
loop
mov
dec
jle
cmovl
mov
add
movsl
iret
xor
cmpsb
mov
insb
xchg
push
or
jbe
clc
jno
xchg
mov
call
push
xorl
test
aam
les
jae
stc
sbb
clc
inc
ror
sub
sarb
nop
xor
cs
pushf
imul
jecxz
je
mov
jl
mov
sbb
pop
push
xchg
gs
inc
inc
and
repnz
mov
adc
insl
inc
popa
nop
sbb
lds
inc
dec
out
in
push
push
cmpsb
cmpsb
xchg
and
imul
fldenv
clc
cli
and
pop
popf
jb
pop
adc
xchg
add
xchg
mov
add
xor
or
stos
cs
ja
out
lahf
jb
sbb
in
pop
ss
les
jno
mov
pop
lcall
cmp
push
test
push
lods
fcomps
push
jo
or
push
out
gs
fcoml
sub
fldt
je
xchg
adc
or
push
jb
pop
lret
inc
addr16
in
sub
out
mov
cmp
adc
xor
cs
les
sub
pushl
sbb
and
addl
sub
dec
movsl
popf
add
mov
lea
mov
clc
pusha
cmp
mov
mov
arpl
push
and
or
sub
lret
icebp
push
fwait
inc
lds
call
push
pop
mov
mov
mov
cmp
cmp
andl
add
ffreep
fisttpll
fsubs
aad
pop
adc
in
aam
cmp
add
cmpsl
or
ljmp
lods
dec
cmp
sub
xchg
and
xchg
ficompl
pushf
hlt
inc
dec
jecxz
scas
cmp
jmp
jne
pop
stos
mov
fwait
loope
lock
lock
in
cmp
insb
lret
pop
stos
call
aaa
imul
inc
shl
rcrb
insb
inc
inc
mov
pop
aam
lahf
add
inc
or
imul
inc
mov
jp
roll
leave
cmc
lcall
push
xor
cmp
xor
repnz
ljmp
lcall
int
adcb
dec
faddl
sub
mov
stc
incl
mov
mov
mov
icebp
std
sbb
outsl
push
pusha
pop
lret
shl
test
push
mov
xorl
sbb
mov
jmp
push
gs
ss
fstpt
enter
pop
mov
mov
push
loope
mov
xor
dec
faddl
adc
imull
cs
cld
add
sbb
popf
cmp
repz
push
jnp
jp
sub
push
sbb
aam
clc
scas
sub
ja
pushf
jnp
mov
pop
dec
cmpsb
imul
mov
pop
out
mov
dec
mov
fbld
adc
std
addr16
xchg
shlb
dec
dec
pushl
inc
cmp
push
ja
movsb
adc
test
push
pop
ret
add
jae
int3
dec
inc
mov
mov
jg
jns
adc
loopne
fstl
cmp
cmp
addr16
mov
pop
in
push
push
xchg
sbb
enter
xchg
arpl
xor
es
mov
push
pusha
mov
dec
or
mov
push
sub
rolb
movsl
dec
xchg
mov
pusha
scas
sub
adc
jge
mov
stos
sbb
mov
dec
sbb
and
fnstsw
inc
call
psubusb
sahf
movsb
mov
insb
sbb
add
xchg
in
cltd
add
add
test
xchg
jns
mov
int
push
inc
loopne
out
dec
pusha
cmc
cli
mov
and
push
pushf
int3
int
lock
mov
pop
jmp
test
fwait
test
es
cmc
rol
sar
int
je
cmpsl
xchg
rcll
rcr
cltd
loopne
mov
jecxz
add
mov
cwtl
loope
sub
mov
mov
mov
cltd
stos
adc
and
mov
add
cltd
fistpl
bound
jno
dec
aas
jns
push
testb
jecxz
enter
arpl
gs
inc
pop
enter
sub
mov
or
test
jae
add
jbe
out
enter
mov
fs
sbb
sbb
rorl
in
and
ljmp
jge
sbb
cmp
pop
and
mov
inc
into
push
mov
add
adc
inc
mov
insb
inc
insl
pop
insl
fnstenv
cmp
insb
repnz
jecxz
js
and
jle
push
ja
jl
int3
mov
ret
cltd
lods
mov
dec
int3
and
and
aam
cmp
pop
mov
sbb
push
xchg
xorl
out
lret
inc
mov
ja
add
jno
xchg
out
clc
xor
push
inc
lret
arpl
fldcw
sahf
xor
mov
cltd
xor
cld
mov
cmp
mov
push
clc
sbb
lods
cmp
push
popa
or
in
xor
fwait
pop
out
in
sbb
pop
lds
addr16
lds
push
xor
lods
adc
sbb
sbb
mov
pop
inc
pop
pop
push
push
fwait
jb
mov
mov
dec
in
xor
dec
les
xor
xor
jnp,pn
add
or
dec
mov
xchg
adc
imul
adc
mov
jae
add
push
xor
cmp
scas
jmp
push
les
fidivl
sbb
dec
aaa
pop
and
mov
rep
fcoml
ja
movsl
pop
push
orb
inc
add
push
and
sbb
movsb
fistl
push
into
xlat
dec
scas
sarl
fs
pop
push
js
aaa
shlb
and
xchg
imul
add
sub
sbb
hlt
push
sbb
cltd
xchg
enter
mov
add
jne
shrl
dec
mov
orl
test
fdivs
pop
mov
adc
inc
aas
popa
jmp
push
xchg
jb
shrb
sbb
scas
jecxz
dec
out
cmp
mov
mov
test
pushf
andb
sti
lods
repz
insb
enter
mov
cmp
add
fs
lret
dec
in
sbb
cwtl
jb
cmc
imul
int3
inc
lock
sbb
jbe
adc
xlat
adc
cmp
jno
lahf
sbbb
jecxz
dec
inc
xor
mov
sbb
int3
mov
mov
inc
fcmovbe
mov
jno
push
mov
add
add
lods
fs
mov
rclb
out
out
cmp
add
addb
cli
bound
cmc
rorl
and
jno
mov
add
and
push
aad
fcom
adc
adc
mov
mov
mov
pop
movsl
addl
push
push
adc
stc
ljmp
int
pop
cmp
inc
movsb
xchg
in
jle
movsl
fstpt
mov
mov
jno
pop
mov
xlat
add
pop
sub
push
or
jle
mov
jecxz
dec
sahf
shrb
or
ds
andb
inc
pop
jge
mov
into
insl
neg
mov
push
adc
jbe
setbe
fisubl
stc
add
push
sub
mov
or
dec
adc
xchg
cmpb
push
xor
aam
or
in
es
mov
add
push
inc
adc
in
bound
push
aad
addb
pop
pop
out
out
dec
mov
iret
sti
sub
nop
cmp
push
ja
mov
xchg
in
xchg
std
mov
mov
mov
dec
jp
les
jns
rclb
call
add
lock
xlat
popa
les
test
in
pushf
loopne
scas
xlat
and
adc
cmp
sbb
sub
xor
cmp
push
stos
pop
leave
push
enter
jg
push
pop
clc
in
inc
jb
arpl
jmp
das
dec
or
dec
aad
and
push
mov
mov
cmp
enter
mov
js
jge
pop
popf
sub
fisubs
jns
scas
and
pop
push
jle
add
jns
pushf
and
xchg
dec
or
adc
scas
bound
jae
and
es
cmp
out
nop
cli
iret
fisubrl
push
add
push
or
xchg
and
sbb
push
xchg
imul
movhps
or
sbb
inc
and
sbb
xchg
shlb
dec
jbe
cmp
and
xor
ds
adcl
xchg
nop
sub
fisttpll
andb
mov
mov
jo
clc
jns
xchg
fs
stc
outsl
mov
mov
fs
mov
sti
ret
aad
mov
aam
je
in
push
mov
dec
pop
adc
out
shlb
cmp
cmp
or
dec
fistl
pop
mov
dec
outsl
pop
xchg
xchg
mov
fstpt
and
out
int3
jo
lret
push
mov
loope
fwait
inc
out
daa
lahf
imul
js
mov
mov
mov
push
inc
out
addr16
into
lods
push
push
hlt
popa
into
jb
pop
jae
cltd
or
mov
mov
cmpsb
jae
push
mov
sub
sub
adcl
push
lods
mov
call
sub
daa
xlat
adc
and
mov
or
scas
mov
pusha
xlat
pop
sbb
or
xor
cld
mov
and
cmp
cld
cltd
scas
mov
fwait
sti
sbb
cmpsl
mov
mov
test
inc
sub
pusha
mov
fdivl
cld
pop
cltd
inc
pop
or
mov
cmp
pop
mov
cltd
js
dec
das
je
mov
and
push
cmp
push
lret
or
pop
mov
insl
xchg
out
or
sub
pop
add
mov
leave
lock
call
pop
add
cli
add
aaa
inc
sbb
dec
movsl
jnp
jo
mov
dec
mov
popf
sbb
icebp
dec
repz
jne
add
js
sbb
ljmp
push
mov
loopne
cmpsl
subl
subl
inc
adc
test
inc
push
mov
adc
je
or
aam
mov
mov
jmp
int
jbe
adc
xor
inc
add
scas
push
xor
pop
mov
mov
popf
mov
sbb
std
cmpl
ss
ljmp
out
push
fadd
out
aad
pop
sbb
rcrb
fistpl
push
mov
xor
fdiv
arpl
pop
lea
insb
pop
enter
jns
in
test
sub
adc
fistpll
loopne
sbb
clc
mov
jmp
shlb
jge
adc
fisubs
adc
dec
into
or
lods
add
stos
mov
cmp
aam
jae
in
idiv
imul
xor
repnz
pusha
push
std
jo
and
xor
push
mov
mov
sbb
xor
das
clc
pop
or
sbb
ds
mov
mov
pop
inc
scas
mov
in
lods
mov
fistps
or
sbb
mov
add
mov
mov
push
je
addl
add
jb
adc
fstp
decl
pop
test
cmp
adc
sub
call
pop
ds
push
inc
scas
je
pop
jbe
sub
dec
or
pop
addl
sti
dec
cmc
cmc
imul
jb
push
arpl
and
testb
cmpsb
stos
cmp
mov
pop
movl
sbb
or
jbe
and
lret
pop
and
shll
rol
fnstcw
popf
sbb
fbld
mov
fldcw
mov
sbb
jnp
cli
xchg
lds
add
dec
and
mov
push
jne
andl
in
decl
jb
and
push
lods
lret
arpl
xchg
pop
cmc
xchg
das
push
jo
rcll
fs
pop
add
adc
stc
and
jle
and
repnz
mov
and
fucomp
pop
cmp
cmp
or
idiv
xchg
leave
sahf
ljmp
sbb
cmp
adc
push
test
je
cmp
and
dec
out
mov
out
inc
mov
push
and
outsb
push
inc
pop
movsl
sbb
mov
enter
xchg
shrl
loop
lods
mov
aaa
subb
int
test
cli
out
xor
fwait
cmp
idivb
adc
leave
insl
and
bound
sub
xchg
jge
xchg
pop
ja
daa
xor
xchg
int
test
loope
loop
sbb
lret
sbb
mov
pop
call
sti
jnp
mov
inc
shrb
aaa
ret
add
inc
sub
sarb
iret
out
mov
xor
out
cmp
rorb
xchg
aaa
xlat
inc
adcl
ds
leave
pusha
stos
insb
jecxz
insl
push
nop
outsb
mov
jecxz
cmp
mov
loop
pop
xor
sarb
je
int3
xchg
or
adc
mov
jns
pusha
dec
mov
ss
push
int
mov
in
pusha
test
pop
in
pop
mov
lock
push
or
jns
pop
jg
bound
pop
mov
lds
popf
or
ds
outsl
ss
andb
inc
cmp
mov
arpl
or
pop
mov
or
inc
jbe
popf
mov
cmp
dec
aam
or
sar
fwait
dec
cmpsb
cmc
pop
xchg
stos
lahf
lock
lahf
daa
fidivrl
sbb
scas
incb
dec
stos
frstor
loop
fstl
or
mov
fcmovne
js
nop
and
fwait
jle
dec
adc
fbld
loopne
fcomps
cmp
inc
fnsave
xchg
push
out
sub
jno
jle
fidivrl
mov
push
dec
adc
adc
pop
bnd
xchg
js
cli
xor
stos
shlb
cmp
sub
ds
ds
xchg
cmc
cmpb
je
ss
bound
sbb
cmp
std
xor
sub
or
iret
into
out
jnp
sub
inc
jg
push
add
sub
sub
mov
mov
add
xlat
mov
outsl
push
fmull
adc
and
je
fadd
sbb
inc
mov
shlb
lret
xor
or
mov
xchg
and
lret
dec
dec
add
shlb
dec
sub
mov
fs
insl
fisubrl
lds
fcom
call
leave
xchg
cltd
add
mov
adc
test
jae
negb
pushf
stos
lock
bound
inc
add
dec
daa
mov
je
insb
pop
adcb
xor
ljmp
popa
jl
sarb
mov
fidivrl
dec
sub
xchg
push
or
cmpsb
stc
icebp
sub
arpl
jmp
fsubl
push
fs
mov
cwtl
sti
pop
or
jae
dec
aad
fcomps
and
push
add
xor
push
and
mov
into
enter
mov
dec
adc
dec
jnp
jns
xchg
rcrl
das
cmp
mov
and
xor
xchg
test
jns
sub
xchg
ds
cmp
push
not
jmp
int
mov
dec
pop
add
rcrl
xor
inc
outsl
add
mov
lret
mov
into
push
inc
in
je
sub
movsl
xor
mov
jle
mov
push
pop
subl
sub
jle
sbb
cs
arpl
adc
gs
int
sbb
push
inc
mov
inc
dec
xor
adc
pop
leave
test
push
mov
cli
fnstcw
pusha
mov
imul
push
loope
or
in
mov
test
and
in
xor
icebp
pop
mov
push
movsb
pop
stos
movsl
add
aad
sub
or
loope
adc
cmp
movsl
sbb
sbb
xor
fidivs
push
lahf
dec
mov
mov
stc
aam
ss
sub
cmpsl
or
jno
cmp
xor
stos
add
shrl
mov
shrl
sub
mov
sub
xor
lock
pop
ljmp
test
adc
cltd
mov
sbbl
xor
fwait
adc
int3
xor
xorb
xchg
adc
push
jb
and
and
mov
shl
and
cmp
ficompl
and
cld
popf
pop
mov
enter
addr16
jae
lret
xlat
mov
push
sub
lea
push
ja
push
sub
pop
addl
out
mov
cmp
out
int3
test
lahf
ljmp
push
pop
mov
mov
push
inc
ret
andb
pop
mov
mov
or
ret
or
jbe
addl
xor
or
outsb
mov
jmp
lret
inc
outsb
lea
popf
adcb
insb
ja
sahf
cmc
sub
loopne
es
mov
sub
adc
int3
inc
popf
push
fsub
dec
int3
test
dec
in
add
aas
xchg
imul
lea
ljmp
jge
out
adc
sbb
outsl
jno
mov
push
inc
movsl
push
mov
nop
dec
into
rcr
movsb
in
xor
mov
bound
les
and
pop
dec
mov
mov
imull
inc
cmpsl
cwtl
das
xorb
cmp
pop
add
push
adc
out
movsl
call
lahf
dec
stos
cmpsl
push
lcall
mov
test
mov
inc
and
jle
icebp
jmp
gs
pop
pusha
ret
lods
stos
cmpsb
adc
mov
pop
jecxz
mov
pop
xor
cld
outsb
adc
aaa
pop
cmpsb
fwait
inc
push
cmp
adcb
inc
roll
ljmp
xchg
push
inc
sbb
jecxz
sub
adc
adc
out
push
test
and
push
mov
loop
jnp
sub
cmp
pop
cs
rcrb
mov
mov
loop
dec
xor
mov
mov
xchg
sbb
scas
jp
call
sbb
cmc
pusha
dec
sub
adc
data16
cld
fildl
adc
mov
arpl
sti
mov
inc
lea
pop
push
pop
fistpl
inc
mov
dec
ja
sbb
repnz
rclb
add
testl
inc
mov
fldcw
xchg
dec
jge
sub
es
lahf
inc
sbb
hlt
xor
xchg
push
mov
dec
cmp
dec
inc
xchg
mov
add
xchg
insb
shr
rcr
xchg
sbb
push
jmp
push
imul
repz
mov
cltd
xchg
jnp
or
xchg
and
add
test
pushf
cmc
pusha
cmp
jbe
dec
inc
mov
das
lret
mov
loopne
cltd
push
pusha
push
loope
cmpsl
pmaxsw
jo
shll
xadd
cmp
mov
push
rcrb
call
adc
adc
cmp
out
add
mov
xor
sub
mov
popf
loope
jno
js
test
stos
aas
ljmp
and
ret
mov
mov
inc
sub
mov
pusha
jge
jbe
sarl
xchg
sbb
dec
aas
and
cmc
and
sub
sbb
int
push
stos
xchg
inc
bound
and
outsl
cs
mov
pop
jmp
pop
adc
xor
adc
or
imul
pusha
mov
mov
inc
cmp
inc
sbb
fadds
cmp
repz
sub
jnp
sbb
dec
std
jns
fmul
pop
xor
jns
jne
push
xor
mov
xchg
stos
fcomip
fstl
outsl
jp
add
loope
dec
hlt
cmpsb
call
xchg
in
int3
sbb
add
mov
fs
mov
and
jmp
cld
inc
sbb
inc
push
movzbl
mov
cmp
mov
sbb
jb
leave
mov
lods
ja
adc
mov
pushf
gs
mov
in
outsb
pop
cmpb
push
fwait
jp
mov
ss
sbb
outsb
or
inc
lahf
subb
mov
sahf
mov
hlt
jge
mov
sbb
int
sub
mov
insb
out
or
sbb
xchg
bound
cmp
ret
xor
cld
lods
pop
add
int3
jl
ljmp
scas
std
or
fwait
std
hlt
pop
mov
and
idiv
data16
push
lods
test
test
and
xchg
nop
or
and
adc
daa
xchg
mov
pop
sub
jmp
push
or
or
or
rcrb
rcl
mov
xor
push
iret
xchg
jp
cwtl
xor
or
push
sub
xor
mov
test
adc
dec
fldl
jmp
cmp
cltd
cmp
in
rclb
fcoml
les
dec
push
cmp
jg
xchg
lahf
cmc
stos
lret
lods
ret
loope
cmp
jae
jno
cmp
xchg
aas
jo
div
jno
cmp
add
fisttpll
mov
mov
lds
es
aad
mov
hlt
adc
gs
pusha
mov
pop
fmull
aad
dec
shlb
sbb
daa
inc
dec
mov
xchg
fisubrs
popa
movsb
inc
mov
inc
push
pop
mov
fwait
das
push
jl
rep
lret
mov
nop
add
pop
aad
dec
push
arpl
push
enter
ss
sbb
mov
adc
sub
add
testb
ss
ss
jmp
mov
jne
je
ds
and
insl
stc
lods
push
stos
je
push
push
mov
xchg
adc
sbb
and
jl
cmp
xor
sbb
outsb
or
push
fiadds
xor
sub
fcmovb
loop
push
xchg
jne
lret
addr16
jae
xor
popf
iret
fstl
into
pop
movsl
out
push
xchg
dec
jmp
ret
adcb
das
sti
jmp
cmp
je
loop
imul
pop
push
movsb
mov
sbb
cli
in
fwait
push
push
add
mov
call
dec
inc
nop
cmpsl
sbb
cmc
scas
aad
push
test
test
mov
in
pop
dec
mov
mov
or
int3
add
int3
sbb
mov
inc
in
je
dec
cmp
mov
shrl
mov
out
clc
cwtl
push
mov
daa
cld
mov
xchg
fisubs
pop
aam
addr16
mov
cmc
pop
pop
mov
enter
aad
out
outsb
loope
mov
in
rcrl
shlb
popf
cmp
fidivrl
xchg
rep
mov
jnp
and
add
call
int3
js
inc
mov
xor
scas
or
jb
jb
cmp
xchg
xchg
mov
or
mov
mov
mov
dec
shlb
insl
mov
roll
inc
mov
or
fisubrs
xchg
scas
adc
pop
iret
jle
sbb
dec
dec
push
inc
sub
pop
cltd
cmpsl
das
add
mov
jo
inc
dec
pop
dec
mov
into
loopne
rcrb
or
mov
jno
idivl
cmpl
movsb
inc
inc
mov
ds
mov
xchg
std
kmovd
inc
das
mov
lea
int
push
and
pop
lods
inc
ds
stos
mov
fwait
repnz
lret
xchg
sbb
scas
xchg
mov
nop
pushaw
jae
push
lock
insb
mov
jb
xor
push
mov
sbb
sbb
shrl
cmp
push
and
fcoms
call
icebp
aam
jns
jg
jmp
dec
and
ret
aaa
add
mov
shr
xor
xchg
xorl
repz
mov
mov
add
jmp
jl
sub
in
in
xchg
add
rorb
in
imul
popf
inc
repnz
int3
xchg
cld
enter
int3
jg
in
adc
jmp
cltd
sub
sub
les
pop
and
and
testb
js
push
dec
repz
xor
or
int3
out
hlt
inc
xlat
js
add
fwait
inc
mov
sub
jge
andl
flds
cmp
jne
mov
dec
rcrb
xor
mov
lahf
pop
xchg
mov
xchg
jmp
dec
mov
lock
adc
je
add
jo
fsubs
hlt
test
fstpl
cld
pop
jne
mov
or
repnz
vcomisd
xchg
rol
dec
stc
pop
pushf
divl
lret
enter
out
out
cli
aaa
adc
test
jl
or
inc
icebp
sahf
push
in
mov
cltd
sbb
adc
jecxz
jmp
dec
subl
aaa
in
sbb
leave
sub
sbb
test
shlb
push
pop
jge
add
or
adc
ja
pushf
loope
lods
rcrl
cmp
das
out
sbb
mov
imul
movsl
inc
mov
in
sub
cmp
and
sbb
clc
out
inc
mov
mov
inc
mov
loopne
jbe
out
cmpsb
cmp
hlt
push
rol
mov
outsl
stos
dec
mov
or
mov
out
cli
imul
push
xchg
div
lret
jo
push
mov
dec
push
cwtl
mov
cmp
repz
out
sbb
inc
lret
cmc
mul
lods
mov
add
or
jns
sbb
test
push
dec
pop
adc
xchg
inc
sub
cmp
pop
xchg
adc
aam
inc
push
push
cmp
insb
mov
dec
jle
in
lcall
imul
shll
jo
mov
popf
and
scas
lahf
push
inc
js
xor
xor
in
sarl
sub
sbb
aam
pop
push
shrb
mov
stos
lock
stc
mov
pop
dec
jmp
cmp
movsb
rol
shrl
jne
scas
cmc
fmul
mov
jne
mov
push
lods
scas
sub
in
and
out
xchg
ja
test
sub
cwtl
sub
aad
mov
mov
aad
lcall
pop
pusha
stc
inc
xchg
inc
inc
les
xor
clc
or
or
pop
gs
es
xlat
and
outsl
and
test
adc
cmp
xchg
outsb
or
adc
lea
movsb
dec
imul
out
xor
dec
test
sub
dec
arpl
ja
stos
jne
push
jns
sbb
add
test
lods
cmp
pushf
incb
push
clc
adc
ret
mov
fucomp
push
mov
dec
pop
aas
ds
rcl
test
js
dec
in
sbb
pop
bnd
xchg
popa
mov
add
imul
xchg
shrl
and
call
loope
negb
adc
push
xchg
jg
sub
mov
clc
xor
xchg
and
and
xlat
cmp
aad
sbbl
neg
out
je
inc
push
dec
lods
mov
test
jg
out
jae
fiaddl
rcrb
shll
shlb
bound
dec
lods
adc
adc
add
pop
repnz
repz
jae
or
pop
outsl
test
insb
or
insb
dec
out
iret
xor
lea
cld
jecxz
mov
pop
sbb
pop
ds
aas
lcall
adc
rcrl
push
jle
ret
enter
push
fdivrp
pop
ljmp
xchg
shr
repz
fnstenv
xchg
imul
in
btr
in
loopne
push
imul
push
xor
ret
pop
rolb
dec
lahf
addr16
sti
das
rorl
fdivs
jb
insl
cmp
sub
jmp
hlt
push
xor
mov
movsl
pop
push
adc
sahf
xchg
add
jl
and
jecxz
xchg
jne,pt
ficoml
cmpsl
fildll
sbb
data16
icebp
sarl
mov
mov
xchg
pop
add
outsl
insl
jl
mov
movntps
fistl
xor
fsubrp
and
addr16
mov
adc
adc
xor
lret
inc
or
pop
pop
pusha
xchg
and
test
hlt
add
fs
inc
pop
and
movsb
sub
imul
imul
inc
ja
imul
mov
xchg
test
loop
jg
outsb
pop
das
negb
fimuls
inc
sub
fwait
cmpb
stc
jecxz
mov
xor
inc
sbb
mov
pop
out
aaa
and
dec
sub
jne
out
add
flds
sbb
xor
icebp
test
pop
and
rol
xchg
test
push
int3
mov
push
mov
inc
mov
pop
mov
outsb
mov
pop
lret
pop
xlat
mov
xchg
add
repnz
into
sti
out
mov
int3
test
rcll
cli
in
movsb
mov
inc
rolb
push
jl
imull
stos
into
mov
out
lods
adc
fidivs
add
jae
outsl
out
jp
dec
fldenv
fwait
shlb
add
pop
in
lods
dec
sub
and
xchg
test
mov
lock
jne
add
jne
loopne
cmpsl
loop
pop
sbb
loop
mov
test
cli
mov
fildll
xor
inc
fwait
test
enter
out
cwtl
cld
and
popa
pop
les
pop
cmpsl
movsb
fdivs
fidivrs
push
inc
sti
mov
movsl
mov
sbb
jle
es
addb
push
aas
sub
xchg
jmp
das
rclb
push
subb
arpl
fucom
aaa
mov
xor
aas
aam
dec
adc
jae
sbb
xor
mov
xor
pop
pop
mov
push
cmc
add
loope
cmp
mov
xor
jo
adc
jg
std
sub
lret
mov
sbbl
push
cmp
test
jb
sbb
std
xchg
outsl
push
enter
inc
pop
xchg
xchg
loopne
dec
rdpmc
sarl
iret
adc
imul
dec
sub
sbb
dec
iret
lahf
mov
sub
pop
mull
xchg
push
lret
imul
fs
or
fwait
aam
test
bound
sahf
sarl
mov
test
mov
mov
sub
loop
pop
push
sbb
icebp
dec
push
mov
push
or
jno
pop
data16
pop
jns
repnz
in
call
scas
in
in
or
xchg
imul
sbb
xor
js
mov
into
adc
inc
jmp
add
jo
daa
mov
daa
mov
nop
fisttpl
stc
loopne
mov
mov
leave
outsl
sub
push
das
inc
xor
dec
sbb
inc
mov
sub
xchg
jge
stc
xor
mov
lret
sbb
insb
mov
out
pusha
daa
dec
mov
xchg
push
jns
jae
xlat
cld
loop
inc
cmc
loopne
inc
adc
movsl
dec
push
inc
shrb
movsb
aaa
shll
xorl
cmp
gs
push
xor
pop
mov
add
pushf
dec
jo
ret
adc
outsb
bound
adc
mov
pushf
fucomp
mov
rcrb
testl
xchg
call
xchg
fdivl
pop
push
sbb
jl
popf
sub
or
inc
mov
fwait
rcll
xchg
mov
sub
cmpsb
jmp
sub
dec
pop
lea
je
sub
shrl
mov
test
enter
in
cmp
lret
push
leave
mov
cmpsb
dec
pusha
sub
scas
pop
rol
push
mov
sub
stos
jne
ljmp
lea
add
call
fstl
stc
add
call
fs
sahf
pop
inc
sub
xchg
insl
in
cmc
clc
push
cld
xchg
std
adc
add
xchg
test
push
dec
xchg
push
jp
aaa
lock
add
pop
sbbl
into
not
add
shrl
jmp
and
std
adc
and
insl
iret
cmp
xchg
loop
int3
fucomi
mov
mov
sbb
mov
mov
data16
out
sbb
cmpl
mov
shll
and
sub
add
push
shll
std
pop
fwait
ret
pop
insb
fsubr
adc
bound
push
push
mov
xor
das
sub
into
add
leave
adc
mov
xchg
cmp
movsl
inc
test
sub
js
scas
push
sub
inc
xchg
jb,pn
lods
sbb
stc
andl
jae
push
pop
outsb
seta
lods
ffree
imul
sbb
mov
daa
jg
add
scas
xor
add
add
outsb
add
fs
popa
cmp
fs
loopne
sahf
vpsadbw
xchg
jnp
cmc
inc
in
push
je
mov
dec
push
xchg
js
mov
add
push
or
jae
pop
and
push
jae
pop
jb
mov
dec
cwtl
inc
sub
pop
mov
je
loop
daa
bound
repnz
aas
loop
cs
pop
andl
ret
lret
push
fsubl
ret
mov
cmp
in
outsb
mov
push
inc
mov
or
adc
lea
push
in
xchg
imul
scas
add
sahf
or
cwtl
and
pop
movsb
push
addr16
loop
fyl2x
xor
mov
out
mov
imull
repz
jp
jae
stos
stc
fmull
sbb
push
cmp
out
inc
mov
aam
lods
mov
jg
or
aad
pop
add
enter
sub
xchg
test
jle
push
xor
add
test
aad
cmp
adcb
ret
addb
idivb
cmp
aas
addr16
mov
hlt
mov
sub
ja
in
pop
mov
cmp
sub
adc
test
shlb
jnp
icebp
and
rclb
add
and
repz
cwtl
test
or
int
pop
push
das
sbbb
cmpl
outsl
xchg
mov
notb
sub
cld
inc
mov
cmc
xchg
int
push
std
pop
sub
adc
dec
adc
in
jns
loopne
push
sbb
jns
and
out
lock
xor
mov
mov
sub
sbb
mov
enter
push
movsl
cmc
outsb
sbb
les
xor
pusha
mov
inc
cs
add
pop
cltd
out
por
out
cmp
jp
jbe
inc
push
mov
divb
mov
into
and
icebp
mov
cmp
imul
test
or
xor
int
and
les
xor
xchg
imul
inc
mov
or
ret
std
cmp
sub
push
lea
push
sub
xor
mov
add
xchg
fistpl
data16
andl
jl
stc
cwtl
mov
ret
sbb
push
sbb
in
imul
jnp
add
mov
int3
ss
jbe
push
repnz
and
mov
jp
dec
mov
inc
test
jno
arpl
xchg
add
xor
testb
pop
mov
enter
cmpsb
int
test
add
jge
mov
sbb
ja
pusha
repz
shl
cli
jle
movsl
cmp
adc
out
scas
movsl
aaa
jmp
xor
dec
push
mov
notl
enter
mov
jle
cltd
ds
insl
mov
sbb
sahf
icebp
pop
push
xsave
fisubrl
add
loop
inc
dec
pop
roll
dec
mov
sbb
test
mov
mov
iret
adc
adc
dec
mov
sub
xor
pop
outsb
rclb
sub
push
xchg
jge
lock
xchg
xorb
dec
outsl
rorl
sbb
jmp
mov
aad
sarb
dec
es
and
sbb
ret
xchg
pop
int3
and
loope
and
in
xor
faddl
pop
or
addr16
stos
mov
or
sub
sbb
mov
loope
sbb
mull
lods
mov
ds
nop
sahf
inc
fnstsw
dec
je
jge
jl
xor
icebp
nop
movsl
xor
or
jb
push
insb
dec
lods
cmp
xor
mov
add
dec
pop
insb
int
out
ja
jb
push
cltd
jb
adc
mov
mov
clc
movsb
or
loopne
push
rolb
cmp
sub
mov
in
jb
jbe
ds
push
fstl
cmpsl
and
jno
xchg
push
adc
xor
cwtl
mov
stc
inc
lea
aad
xor
sub
sbbb
nop
cli
movsb
scas
sahf
subb
xor
push
or
lret
xor
mov
lahf
hlt
add
jae
gs
lahf
mov
mov
mov
mov
sub
sbb
aam
shrl
subl
das
sbb
cmp
jnp
bound
daa
pop
and
adc
in
out
inc
test
fidivrs
movsl
sub
shll
ss
js
adc
popf
cmp
sbb
xchg
cmp
mov
add
pop
push
inc
xchg
sbb
add
insb
into
sarl
sub
gs
clc
push
jg
mov
mov
sbb
stos
inc
rcrl
xchg
daa
or
aas
mov
in
jle
cli
jno
sbb
in
lret
xorl
inc
out
adcl
into
pop
inc
fwait
pop
lea
adc
push
pop
in
cmp
test
imul
sbb
jmp
pop
sub
or
mov
jle
xchg
rol
add
or
cltd
fistpl
sub
add
push
mov
push
mov
and
xchg
sarb
pop
and
stos
daa
aaa
adcb
iret
loopne
and
daa
movb
xchg
je
scas
data16
pop
in
push
mov
test
lahf
std
std
mov
lret
xor
icebp
pop
lahf
sub
das
inc
push
xor
mov
lods
imul
inc
fnstcw
arpl
hlt
jno
sbb
mov
inc
out
jno
in
mov
cmp
and
lret
add
loopne
shrl
into
js
cmp
mov
jns
jne
cltd
mov
pop
sub
xor
shrb
xor
movsb
xor
inc
jl
arpl
and
pop
inc
imul
add
add
and
xchg
fdivl
stos
sahf
bnd
div
sbb
cwtl
prefetchwt1
imul
adc
or
sbb
adc
xchg
lret
cmp
add
stc
mov
loop
cmp
lods
dec
fstps
pop
movsl
ljmp
mov
mov
test
xlat
jle
cmpsl
dec
rol
test
jo
push
std
xlat
sbb
call
pop
pop
lea
push
lret
pop
stc
push
push
dec
sub
lds
sub
add
adc
sub
cltd
repz
jo
les
lea
lods
and
mov
jae
loopne
ret
inc
mov
ss
xlat
dec
lds
ljmp
lret
fs
cmp
sub
jne
out
mov
sub
jmp
pop
js
jnp
arpl
inc
std
and
mov
loop
pop
out
add
mov
shrb
add
push
cmp
mov
arpl
adc
cli
lock
jno
pop
leave
pop
iret
mov
insl
xor
push
out
rcl
ret
xchg
mov
pusha
enter
push
pop
call
or
leave
les
mov
aam
inc
enter
int3
cli
jecxz
lods
movsl
or
or
pushf
movsl
mov
aas
cmp
pop
or
test
ljmp
add
pop
icebp
mov
xor
paddq
xchg
outsb
xchg
mov
es
in
cmpsb
push
pop
inc
pusha
sbb
jns
stos
shll
inc
adc
ja
mov
jp
cmpsb
jge
push
jle
addb
mov
pushf
icebp
outsb
push
mov
dec
and
inc
lahf
shl
dec
dec
jecxz
fisttps
hlt
or
lea
ficoms
je
sbb
push
subb
xchg
mov
lret
mov
inc
and
int3
hlt
fidivrl
xlat
and
les
sbb
out
fists
mov
mov
orb
loopne
fs
or
add
data16
inc
movsl
add
pop
outsb
sub
lods
std
leave
dec
ret
shlb
mov
cmp
jbe
insb
adc
js
lods
xchg
std
push
and
popa
aam
loope
cmp
loope
adc
je
xchg
sbb
pop
or
push
into
jp
mov
sahf
jmp
fiaddl
jle
ss
dec
loopne
or
pop
in
mov
adc
aad
cltd
xchg
fcompl
xor
jge
mov
stc
bound
pusha
mov
rcrb
outsb
pop
pop
jbe
mov
subl
add
orb
or
cmp
mov
or
dec
aad
mov
push
mov
xchg
leave
int3
in
and
insb
xchg
decl
std
enter
dec
or
fimuls
cmpsl
jmp
push
push
jecxz
jecxz
mov
ja
push
push
sbb
xchg
call
push
pop
negl
lods
out
lds
and
mov
enter
dec
dec
sub
jmp
push
out
clc
fdivl
jg
sbb
mov
outsb
mov
dec
nop
xchg
jl
pop
test
sbb
cmc
jmp
lret
dec
add
movsl
addr16
add
mov
stc
out
cmpsb
mov
hlt
xor
cld
rcrl
pop
sub
jge
and
call
imul
out
mov
jns
push
in
add
movsl
or
dec
adc
or
and
arpl
shll
loope
mov
shl
or
fwait
dec
mov
or
or
outsl
cmp
inc
lods
fsubl
push
mov
lds
jle
or
jle
push
sahf
fisubrs
inc
enter
ss
xor
out
std
enter
adc
jne
inc
mov
or
sbb
xor
imul
ficoml
ss
dec
and
cmpsl
fimull
jae
test
add
imul
ret
cmp
dec
jbe
enter
hlt
add
adc
jno
out
cmpb
fisttpll
xor
lods
mov
and
hlt
add
jns
jge
ss
dec
cmp
xlat
insb
arpl
stos
sbb
adc
aas
adc
jno
mov
daa
or
aaa
lret
movsb
fsts
xchg
mov
mov
addr16
lea
xor
push
jg
insl
push
jbe
mov
or
adcl
loop
inc
iret
jle
lods
jnp
data16
pop
pop
jno
push
ret
pop
push
sbb
push
push
mov
je
mov
es
mov
les
pop
std
fmulp
ret
arpl
dec
mov
or
inc
push
sub
push
clc
dec
js
cmp
pop
out
in
adc
mov
dec
xor
sub
fs
push
out
xchg
pop
sbb
mov
mov
or
in
cmp
cli
dec
adc
daa
push
mov
adc
repnz
test
cmp
test
lea
imul
jns
fwait
push
ffree
dec
out
jle
das
aaa
pop
les
cs
ljmp
dec
cmpsl
repz
gs
jg
and
jo
mov
mov
sub
sbb
mov
dec
or
or
cmp
popa
cs
lret
push
cmp
stos
xchg
adc
or
mov
aad
gs
adcb
jmp
sub
ds
pop
lcall
test
or
push
inc
jne
in
pop
inc
gs
cmp
jle
mov
cld
mov
sub
mov
xchg
in
cmp
jo
in
insl
icebp
inc
xlat
fldl
fs
adc
int
fimull
pop
into
imul
imul
mov
scas
jmp
dec
jne
movsb
lods
add
hlt
inc
outsb
cmp
sahf
rcl
mov
pop
jb
jnp
dec
mov
mov
lods
cmovp
int
pusha
inc
gs
mov
lds
sub
mov
lea
mov
test
cmp
lock
nop
or
cmp
mov
push
mov
inc
push
mov
or
and
insl
xor
sub
sahf
test
cmp
mov
dec
jl
pop
xlat
les
loopne
push
js
stos
cmp
int3
mov
hlt
xchg
lds
out
xor
push
mov
sbb
fmuls
adc
loope
xchg
fisubs
adc
lods
xor
mov
pop
sahf
cmp
ret
lods
std
adc
or
inc
and
or
pop
xchg
aam
and
adc
mov
add
and
jl,pt
sahf
lret
jge
dec
pop
jo
sbb
movsl
sub
mov
pop
loop
pushl
mov
sub
sti
mov
dec
pop
xchg
movl
sbbb
and
and
push
push
repnz
lods
fdivrp
jmp
shrd
dec
shrl
adc
mov
lret
push
mov
and
test
mov
inc
adc
data16
popf
xchg
add
pop
push
add
inc
divl
pop
jnp
jge
xor
cld
outsb
lcall
or
sbb
negl
je
inc
inc
push
dec
and
in
push
call
or
test
out
hlt
fwait
mov
xchg
loope
pop
outsb
daa
jge
dec
out
pop
inc
sub
xchg
pushf
push
lods
and
sbb
movsb
repnz
roll
cltd
mov
xor
xchg
dec
jns
aas
pop
sub
xchg
ja
inc
push
popf
sbb
rcrl
push
mov
imul
pop
sbb
aaa
nop
mov
cs
out
std
xchg
mov
stos
pop
scas
sbb
lods
jb
xorb
xlat
mov
push
dec
aam
insl
lcall
cmp
and
push
pop
mov
insl
insl
ficoms
aas
sbb
and
add
xchg
into
push
mov
in
ror
mov
and
mov
aaa
sub
shrl
push
pusha
jb
adc
pop
pop
dec
mov
ss
rcl
sbb
mov
daa
stos
cmpsl
scas
loopne
cmpsb
pop
lods
push
ja
sahf
push
scas
andl
jmp
mov
sti
or
test
inc
mov
pop
mov
and
es
push
sub
inc
andl
sbb
scas
hlt
mov
add
and
mov
lcall
or
aam
adc
inc
stos
cmp
fwait
shl
mov
jecxz
pop
mov
pop
or
and
xor
icebp
loop
jl
aad
iret
enter
mov
inc
cmp
leave
ss
inc
mov
pop
jns
in
push
lret
push
sbb
add
jb
or
adc
mov
pop
fxch
mov
movsb
fcom
sbb
xchg
fbld
movsl
or
insb
push
xchg
pop
ret
cmc
mov
adc
sbb
stos
jne
fs
movsb
and
mov
aam
cwtl
xor
inc
jmp
or
cli
push
cwtl
mov
mov
push
add
les
rclb
and
push
out
push
outsl
pop
fldt
pop
enter
ret
cmc
fdivrs
inc
fcompl
cli
adc
pop
pop
dec
inc
pushf
push
mov
jmp
mov
sti
push
fadds
add
loope
pop
cmp
das
mov
jo
xor
jl
clc
popf
push
int
pop
cmpsl
cmp
dec
decl
pop
lock
cli
ret
mov
xor
into
pop
sub
hlt
pop
and
push
adc
add
sbb
cmp
sbb
jbe
cmpsb
ss
xor
push
std
jle
repnz
movsl
fsubs
loop
pushf
addr16
cmp
inc
add
imul
or
gs
hlt
dec
jmp
in
push
sbb
xchg
or
arpl
outsl
lods
popf
out
sbb
lds
xlat
lret
ret
subl
mov
xchg
cmpsl
mov
adc
push
sub
sub
movsb
imul
jp
add
icebp
stos
push
jg
sti
into
jns
jecxz
jmp
nop
and
or
fnstsw
sbb
nop
xchg
repz
push
fsubrl
aaa
subb
jge
movsl
dec
push
cs
sbb
add
repnz
xchg
stos
repz
aas
subb
jae
aad
outsb
movsb
or
les
les
and
bound
dec
test
xchg
je
push
pop
push
hlt
bound
pop
fldt
gs
iret
inc
or
loope
xchg
jle
and
jb
cmp
mov
pop
fsubr
out
xor
cmp
nop
in
out
sbb
mov
movsl
outsw
pop
cmp
sbb
cmpsl
push
cmpsl
or
push
push
sbb
stos
pop
fnstcw
sahf
mov
xor
int3
outsl
lods
lods
xchg
dec
push
sub
jg
jp
mov
rolb
mov
push
adcb
xor
cmp
and
jecxz
arpl
xchg
mov
mov
cmp
cmpl
subb
lods
sub
les
sbb
ret
push
fstps
data16
fimull
loope
and
fs
idivb
push
pop
mov
add
out
dec
push
push
and
in
pop
stc
lods
push
dec
into
mov
xorb
xchg
sub
sbb
enter
lcall
ljmp
jmp
movsl
je
or
push
fildl
imul
and
es
xor
or
xlat
sbb
mov
repnz
jne
aam
inc
dec
and
mov
and
pop
jae
inc
sub
mov
loopne
and
cwtl
imul
adc
aam
test
xor
scas
pop
cmp
push
jecxz
leave
test
in
pusha
dec
fs
push
inc
cmpsb
mov
bnd
jg
daa
imul
std
inc
xchg
addr16
in
jnp
xchg
and
fisubl
ja
nop
adc
sbb
pop
jecxz
lock
sbb
xor
leave
loop
fldcw
push
es
sarl
pop
shlb
and
and
dec
sahf
and
mov
enter
stos
sti
int
sbb
stos
mov
ret
dec
repz
loop
sub
inc
sarb
jmp
jge
in
push
mov
pusha
lods
rcll
dec
mov
dec
mov
jbe
ljmp
fdivrl
jp
rcrl
push
leave
or
mov
mov
cli
dec
sbb
test
pop
pop
dec
nop
xchg
shlb
mov
bound
dec
push
mov
jp
push
cmpl
addr16
sbb
popl
popa
not
and
sub
dec
push
andb
das
imull
sub
loope
mov
in
xor
adc
stos
es
aas
inc
cmp
movsb
gs
dec
cmp
fcmovb
push
inc
and
mov
add
ja
into
mov
mov
dec
pop
sub
icebp
cmc
iret
lcall
addr16
and
dec
push
or
testl
add
fnstsw
pop
inc
aam
xor
dec
push
in
push
lds
lock
int
mov
push
out
and
hlt
fisubrs
add
xor
shr
test
inc
notb
das
jbe
inc
sarb
ret
pop
xor
out
inc
mov
std
fwait
xchg
dec
icebp
pop
test
adc
mov
bound
mov
cwtl
mov
inc
loopne
inc
mov
or
movsl
push
push
orl
lods
push
push
aas
mul
push
test
fimuls
inc
jbe
push
fstpt
popf
mov
arpl
jno
cmc
mov
lds
add
ds
jae
aad
jno
xor
stos
mov
test
ss
jp
xor
mov
mov
pop
in
sbb
lcall
std
cltd
stc
mov
in
pop
lods
inc
es
aad
dec
xchg
loopne
rcrb
in
mov
xor
xchg
and
push
mov
cmp
test
repz
push
mov
xor
or
jnp
mov
ret
and
jge
aas
push
rclb
divl
dec
les
lods
or
jg
jbe
sbb
popw
pop
popf
fsts
jb
push
add
and
jg
insl
lods
jmp
loop
cmp
fsubp
push
mov
mov
enter
outsl
mov
rolb
mov
pop
dec
lcall
imul
cmp
push
and
xchg
mov
call
mov
fsubrs
fdivrp
out
push
pop
fstpl
out
pop
adc
stos
xor
mov
mov
fldt
mov
and
xor
cmp
xchg
add
rcll
jge
stos
sub
mov
mov
cmp
sub
add
les
icebp
lcall
out
int3
mov
jle
aad
leave
inc
loop
loope
test
xlat
sbb
scas
clc
fcoms
stos
sar
xor
sbbb
imul
pop
cld
cmp
or
pop
cmp
mov
in
insl
lcall
in
daa
inc
aas
pushf
xor
sbb
enter
bound
cmp
test
sbb
add
mov
and
ja
mov
test
push
add
orb
lods
cs
fimull
scas
xor
lea
outsb
sbb
test
gs
push
mov
or
mov
or
pop
addr16
into
lods
cwtl
popa
mov
sbb
jecxz
push
mov
push
and
movsl
xor
mov
jbe
fnstenv
cmp
cmp
add
add
push
xchg
in
fwait
dec
xchg
cmp
sti
mov
mov
data16
gs
gs
int
push
js
mov
lods
icebp
and
jl
lret
lds
xchg
ljmp
xchg
mov
add
iret
pop
pop
xchg
inc
pop
or
test
cld
mov
lds
push
push
inc
or
mov
cmp
inc
or
movsl
incl
sahf
jae
pop
jp
stc
xlat
or
aaa
pop
inc
movsl
outsl
lcall
pop
mov
dec
or
jnp
push
jns
out
sbb
les
push
mov
hlt
push
and
movsl
xor
jnp
sti
mov
jne
jge
xchg
xlat
dec
cs
fnstcw
add
or
fmul
cmp
mov
jo
ljmp
adc
add
mov
xor
mov
or
or
mov
push
pop
sub
push
hlt
fdivrl
xchg
pop
xlat
dec
cld
jnp
cmc
scas
mov
scas
lock
adc
mov
test
rcrl
dec
push
sbb
std
outsl
dec
lea
dec
pop
push
loopne
sbb
pop
mov
inc
test
cld
push
mov
push
pop
scas
cs
adc
or
cmp
or
push
test
xchg
jl
mov
mov
sub
stos
stos
imul
out
hlt
mov
jge
cld
and
in
pop
loopne
mov
inc
test
cli
add
adc
cli
rcrb
test
mov
jne
in
lods
mov
test
cmpsl
shll
insl
leave
mov
adcl
jno
int
mov
lods
adc
in
scas
xchg
aam
fistpll
daa
lock
or
fbstp
xchg
mov
jo
mov
push
testb
ret
xchg
movl
xor
and
xor
push
cmpsl
jmp
push
imulb
scas
xor
adc
shlb
insb
loop
stc
sarb
repz
hlt
roll
and
xor
shrl
mov
lret
sarb
mov
pop
sub
dec
stos
addb
push
mov
and
xor
and
ja
cld
push
ror
movsl
dec
add
xor
ret
test
call
push
sbbl
nop
aad
outsl
cmp
inc
jl
outsb
repnz
mov
cmp
jbe
mov
mov
inc
mov
xor
push
pop
lret
push
and
and
enter
aad
cmc
mov
mov
orl
dec
scas
push
add
dec
push
ja
xchg
shrl
idivb
xor
out
call
push
mov
sub
daa
mov
jmp
cld
dec
es
out
mov
jmp
xlat
insl
push
dec
dec
mov
sahf
jecxz
aaa
or
iret
jmp
sub
mov
add
adc
jle
jl
test
jg
fstpt
or
fidivs
ret
test
ror
lods
adc
sahf
xchg
xor
mov
sbb
test
clc
mov
pop
cmp
fistl
or
andb
stos
addr16
push
xchg
ds
push
in
mov
and
pushl
pusha
xor
jb
mov
adc
mov
jmp
xor
add
cmp
add
in
xor
cli
aaa
inc
repnz
into
inc
test
aas
cmpsl
std
and
out
jno
sub
sarl
inc
adc
jmp
ljmp
test
outsb
xchg
mov
jne
out
and
shl
orl
ret
iret
push
adcb
or
enter
mov
fistpl
jnp
push
pmulhw
add
test
mov
sbb
and
outsl
dec
sahf
pop
pusha
cmp
mov
insb
lahf
fwait
sarb
ja
std
jmp
shld
in
pop
push
daa
cmp
mov
inc
js
sub
xchg
pop
enter
inc
add
out
iret
sub
in
mov
ja
pop
mov
xchg
add
mov
jl
push
jmp
data16
mov
ss
stc
sub
mov
int
jle
xchg
mov
push
push
jle
xor
pop
insb
xchg
mov
sub
stc
jecxz,pn
rorb
mov
push
rcr
mov
fmull
and
jno
mov
cmpl
dec
shl
fxch
xor
fldl
push
sub
int3
mov
into
mov
adc
xlat
dec
push
movsb
push
adc
add
scas
push
enter
fdivrp
cmp
dec
sub
iret
out
stc
mov
or
and
inc
in
decl
bound
jl
scas
xor
rol
int
popa
mov
push
dec
pop
loope
test
sbb
cmp
inc
filds
push
sub
or
shrl
inc
sti
cmp
fsts
stc
lret
pop
adc
xor
inc
push
out
mov
std
das
pop
jmp
sbb
bound
mov
call
xchg
scas
or
mov
int3
jne
lods
out
and
repz
sbb
les
loope
push
cmp
and
sbb
sub
addb
adc
cmp
pop
rolb
pop
dec
int
js
ss
cwtl
imul
jle
int3
fidivrl
mov
jl
pop
adc
mov
push
jo
inc
das
in
add
bound
cmp
test
add
clc
in
test
xchg
movsb
dec
int3
pop
jecxz
out
inc
cwtl
cmp
sarb
loope
inc
xorb
lea
xchg
mov
imul
push
add
pop
lock
imul
or
enter
push
stos
push
data16
cmpsl
jmp
cli
lret
push
cmp
xchg
ret
out
mov
lret
sbb
push
add
std
xchg
fstpl
cs
arpl
int3
mov
mov
xchg
notl
and
add
push
stc
shr
xlat
jb
mov
in
jnp
in
repnz
cmp
pop
inc
ss
mov
in
sti
into
mov
xor
test
jge
loope,pn
testl
and
sbb
rolb
out
add
inc
pop
mov
cmp
std
out
outsb
mov
push
scas
jae
fwait
shl
cli
push
jmp
sub
adc
iret
mov
sbb
cwtl
test
lcall
or
adc
nop
and
xchg
push
sub
cmp
inc
dec
fistps
inc
push
xchg
mov
sub
push
lea
sub
push
mov
scas
pop
jl
cld
push
mov
lods
cmp
bnd
mov
jmp
sahf
jle
inc
and
xchg
jbe
mov
jecxz
cwtl
mov
adc
dec
sub
push
cmpsb
pop
inc
adcl
int
pop
jecxz
xlat
push
mov
jns
jnp
jle
aaa
arpl
mov
pop
lret
outsb
sarl
adc
jle
dec
rolb
shll
iret
jno
cmp
xor
cmp
push
dec
fisttps
mov
sbb
or
std
and
enter
roll
imul
cs
adc
add
test
pop
out
loop
pop
jns
test
enter
cmp
dec
stc
sbb
pop
ret
dec
cltd
gs
loop
xchg
inc
jae
cmp
jle
mov
pop
pushf
xchg
mov
jg
sbb
cmpsl
xchg
dec
push
jno
ljmp
int3
repnz
icebp
pop
lock
xlat
xor
gs
out
lret
mov
or
xchg
rclb
mov
sub
mov
mov
js
mov
pop
mov
dec
add
push
aas
lea
jg
loope,pn
adc
sahf
je
jg
test
push
andl
gs
rol
roll
mov
jmp
aas
inc
mov
jne
fldl
in
inc
aaa
cmp
fbstp
xchg
out
dec
jle
lret
sub
adc
aas
fstl
out
or
jecxz
pop
iret
lds
fsubl
test
pop
push
sbb
sub
pop
sub
and
aam
loop
pop
subl
mov
daa
adc
out
jns
js
dec
sbb
cmp
xchg
cmp
xchg
fiadds
sbb
insb
cld
xor
sub
insb
insb
in
xchg
mov
jecxz
cmp
jbe
pusha
roll
dec
jb
add
jno
shl
mov
lods
shlb
lahf
das
pop
mov
addr16
jnp
adc
cmp
mov
jbe
or
inc
push
jg
loope,pn
mov
inc
jl
sub
lahf
xorl
add
lcall
aaa
and
xchg
mov
add
ror
push
mov
cmp
mov
pop
loop,pt
xchg
out
xor
sbb
outsl
movsb
push
in
daa
inc
push
scas
or
jp
rcrl
repz
pop
sbb
in
ds
jo
gs
push
clc
or
test
pop
in
and
nop
fstps
leave
ss
xor
jb
xchg
addr16
mov
xchg
push
mov
fldcw
out
hlt
mov
lahf
jbe
addb
das
hlt
in
xor
cltd
mov
loopne
xchg
dec
dec
scas
cmp
lods
stc
inc
cmpsb
ljmp
sbb
orb
cmp
xchg
les
adc
or
xor
pop
out
sbb
std
aas
movsl
xchg
mov
in
xchg
out
cmovo
push
jecxz
jge
cltd
cmp
test
adc
push
inc
sbb
frstor
xchg
fmulp
rcr
mov
adc
test
pushf
push
sub
jle
outsb
les
fistpll
popa
jno
ror
out
mov
adc
sbb
inc
ret
lret
popf
mov
push
and
xchg
lahf
xchg
xchg
inc
sbb
iret
fcomi
mov
push
pop
jbe
test
repnz
mov
mov
cmp
mov
mov
xlat
outsb
sbb
cmp
mov
jle
sahf
sub
fistps
jne
nop
pop
xchg
mov
popf
sub
pop
pop
sub
out
call
xchg
pop
fwait
roll
add
and
jb
xchg
rorl
movsl
jae
push
mov
add
fists
push
test
push
jmp
push
scas
dec
cmp
push
ret
aad
xchg
xchg
sahf
mov
sub
aam
ljmp
sub
imul
xor
imul
inc
daa
fldt
lods
push
or
xor
data16
dec
mulps
jb
push
pop
push
inc
inc
ljmp
xchg
mov
out
sub
sub
dec
imul
xchg
js
shrb
lods
ljmp
cmpl
mov
xrstor
mov
js
out
insb
lods
das
sbb
add
or
out
adcl
add
fistpll
orb
push
and
adc
adc
js
rcrl
pop
mov
lods
mov
mov
call
cmp
lods
add
ja
push
loopne,pn
inc
les
shll
pusha
xchg
pop
lods
lods
inc
js
lods
outsl
sub
push
push
xor
jge
mov
push
jp
adc
int3
lahf
inc
shrl
test
cmp
inc
jne
inc
mov
out
sbb
jno
outsl
inc
cli
ficomps
sar
out
mov
push
mov
inc
sti
aam
iret
pop
or
leave
or
mov
daa
inc
push
aad
fimuls
int3
mov
aas
leave
aam
aam
xor
fdivrl
adc
jnp
xchg
xchg
add
jle
pop
addl
and
pusha
sbb
js
sbb
xor
lods
xchg
mov
out
in
cmpsb
das
mov
sub
popf
movsl
jne
pop
roll
sub
mov
mov
mov
outsl
movsl
adcl
mov
lret
fldcw
movsb
stos
sbb
aas
jmp
pop
inc
lcall
jo
shll
lcall
add
xor
call
std
adc
popa
pushf
sbb
dec
std
jge
iret
pop
push
dec
xchg
inc
movsl
fs
sub
int
lret
sbb
test
cmp
fstpt
sub
orl
jbe
jbe
jmp
mov
sbb
clc
add
push
test
and
insb
add
das
push
pop
mov
xchg
sahf
adc
sbb
inc
cmpsb
push
mov
mov
ds
cs
dec
push
ljmp
mov
jno
pop
test
pop
stos
cmc
add
into
add
adc
hlt
imul
mov
lea
subb
mov
dec
scas
mov
in
add
jp
enter
insl
test
sbb
and
xchg
pop
sub
adc
mov
in
lods
movsb
push
xchg
cmp
es
in
and
adc
fisttpl
iret
fwait
push
jo
jns
push
jp
inc
out
mov
or
leave
and
pop
punpckldq
or
rolb
mov
rcll
adc
aas
stc
fisttpl
pop
xor
jle
inc
mov
sbb
inc
ficoml
sbb
std
and
sub
dec
ljmp
jbe
lret
ret
fadds
ja
jecxz
adc
icebp
repz
pop
out
pop
out
out
es
sub
dec
lahf
mov
mov
dec
cmpsb
sub
dec
xor
fdivl
ja
jnp
xorb
ja
xchg
pop
jns
sbb
mov
inc
jg
pop
popa
stc
cld
cmc
mov
ss
push
inc
in
jmp
push
inc
mov
mov
jmp
jge
mulb
cld
add
fcomps
dec
pop
mov
push
lods
repz
call
mov
imul
xchg
push
mov
scas
stos
fs
mov
jne
pop
fcoml
jmp
sbb
xchg
sarb
jns
mov
sahf
icebp
pusha
mov
dec
push
xchg
dec
mov
inc
push
push
stc
movl
and
mov
push
cmpb
scas
fnsetpm(287
stos
nop
iret
movsb
in
fistpl
cmp
mov
dec
insb
popf
add
in
ds
and
fidivs
or
movsb
pop
adc
fimull
inc
or
stc
sub
jnp
int
mov
je
ja
stos
cmp
cmpsb
cmpsb
insb
xor
pusha
arpl
lods
and
pop
dec
push
inc
dec
in
jnp
andb
inc
aad
cs
pop
loop
out
pop
popa
cmp
mov
push
mov
imul
sbb
adc
lock
pushf
shrb
in
xchg
mov
sar
xchg
testl
inc
insl
int
jo
sbb
loope
mov
sti
mov
into
mov
andb
mov
lcall
divl
jo
jno
cmp
popf
sahf
jnp
pop
mov
sti
push
inc
adc
mov
js
cmpsl
aad
fstp
loopne
mov
add
and
jle
pop
out
aam
test
jmp
es
mov
adc
mov
insl
xchg
add
sub
test
inc
lds
ds
push
mov
addr16
pop
push
mov
je
scas
inc
icebp
dec
sbb
mov
and
ss
fimuls
int3
sub
jg
jne
mov
sub
movsb
mov
mov
ret
push
mov
push
sbb
ds
arpl
push
sahf
mov
in
adc
stos
sbb
pop
mov
aam
xchg
ljmp
xor
jmp
ror
out
pop
xlat
aam
aas
mov
xchg
lods
ja
or
pop
mov
sub
in
add
lds
stos
pop
scas
adc
jno
loope
sub
sti
sub
test
jmp
es
push
std
shlb
and
dec
xchg
call
and
jp
rclb
cwtl
scas
mov
mov
sbb
adc
insb
jle
aas
test
insb
push
icebp
xchg
mov
mov
insb
in
inc
mov
mov
sub
pop
pop
sbb
fdivs
mov
popl
and
xchg
xor
aad
lea
push
bound
jge
add
adc
cmp
or
pop
lea
pop
and
subl
mov
stc
pop
in
jo
imul
push
add
lods
out
or
dec
inc
in
fnstenv
ror
or
data16
cmp
das
ljmp
bound
ja
mov
sahf
jnp
xchg
les
or
pop
dec
pop
and
fisttpl
ret
jne
in
scas
jge
sbb
leave
jbe
stos
fs
jmp
pop
sbb
jg
scas
xrelease
ds
push
lds
fisttpl
and
mov
bound
mov
sbb
or
pop
ds
mov
out
mov
and
xchg
adc
and
mov
sbb
notl
out
dec
rorl
xchg
mov
in
jbe
outsb
mov
arpl
cmp
call
lahf
sub
insb
inc
xlat
test
rcll
pushf
xor
xchg
inc
repz
sahf
pop
ds
iret
lret
in
dec
es
ret
cmc
pop
cmp
and
test
add
mov
xor
adc
pop
xor
sbb
jae
cs
cmpsb
stc
pop
cli
xor
popfw
sbb
sarl
or
lret
fnstsw
lcall
bt
aaa
or
xchg
jns
aas
jno
jecxz
das
push
std
test
popf
mov
leave
push
ss
cs
leave
rorl
pop
lds
ret
jg
ljmp
inc
mov
cmc
fildl
inc
das
loopne
cmp
movsl
adc
fsubl
adc
pusha
mov
fmuls
movsb
push
push
insl
cwtl
jb
hlt
mov
jbe
jle
xchg
push
add
xchg
mov
ficoml
xchg
repz
dec
jns
mov
adc
cmpsl
lcall
pusha
dec
dec
repnz
lcall
cmpb
cmp
pop
pop
ret
mov
xor
movlps
jns
and
sub
mov
push
inc
loopne
add
or
xor
dec
sbb
jns
dec
jne
in
cs
pop
sti
data16
pop
lods
loop
out
pushf
das
xor
pop
xchg
sbb
pop
cmp
clc
sahf
cmp
jne
mov
jle
out
mov
mov
jb
fstpt
and
xchg
mov
mov
or
add
mov
out
push
mov
cli
fldt
and
rcr
js
addr16
outsl
stc
cmpsb
testl
jp
pop
ljmp
ret
xchg
xor
cmpsb
lods
out
jbe
mov
enter
hlt
jnp
and
cmpsb
cmpsb
lret
xor
sbb
push
or
xchg
cmp
jb
add
cmp
push
call
xchg
cmpsb
pop
xor
xor
pusha
jbe
mov
add
popa
ret
and
jbe
lahf
icebp
mov
adc
mov
fsubrs
push
mov
xor
xor
push
and
sbb
lods
sbb
imul
or
dec
push
sbb
push
lds
jmp
fdivp
dec
dec
adc
lcall
loop
pop
out
mov
fucomp
mov
in
repz
xchg
sub
arpl
or
mov
loop
push
in
add
mov
pop
aaa
cld
mov
and
adc
clc
and
jbe
ret
jb
pop
adc
das
adc
push
cmp
imul
bound
xchg
pop
fcmove
pop
jl
adc
mov
and
fsts
dec
cmpsl
es
push
lods
rorl
or
jnp
std
xchg
and
pusha
dec
mov
loop
out
loopne
mov
jle
clc
dec
mov
lock
inc
hlt
jbe
es
aad
xchg
push
jno
outsl
fwait
xchg
or
xchg
xor
aaa
sub
mov
or
fldenv
dec
loop
shll
mov
iret
mov
jp
addl
sarl
pop
mov
loopne
and
hlt
jbe
and
sbb
pushf
subl
aam
mov
mov
cmc
adc
enter
xchg
nop
gs
pushf
cwtl
pop
adc
imulb
mov
mov
movsb
cli
dec
add
xor
mov
jmp
fdivs
incl
aaa
mull
shrl
lea
int
mov
cld
add
cmp
mov
je
fdivrp
inc
lahf
movsl
ret
stos
push
xchg
orl
xchg
rolb
ja
gs
std
pop
pop
imul
pop
lds
daa
testb
push
js
ss
sbb
xchg
arpl
leave
dec
sbb
shrl
xchg
filds
mov
clc
pop
mov
and
and
outsl
cld
daa
mov
xchg
inc
out
jle
mov
sti
jg
dec
aaa
gs
push
cwtl
dec
aad
xor
sti
pusha
cmp
fimuls
or
jmp
pop
cwtl
xor
aad
dec
inc
fdivrs
outsb
mov
push
aaa
scas
testl
shl
sbb
jne
xchg
mov
mov
movsb
stos
out
or
or
dec
cs
and
inc
inc
or
or
inc
jl
and
dec
out
out
cmp
cmp
dec
cmp
lahf
call
or
aas
mov
pop
pop
int
daa
push
push
mov
pop
mov
add
ret
lds
mov
fbld
push
call
clc
and
insb
pop
jo
scas
mov
sub
and
and
mov
fcompl
push
scas
xchg
out
push
pusha
mov
fmul
jnp
lahf
and
pop
inc
ljmp
cmp
pop
shl
and
adc
incl
out
pop
jge
imul
daa
lcall
or
daa
add
cmc
cmp
or
call
xor
mov
cs
jns
adc
cs
mov
or
mov
jne
or
pop
bound
adc
or
cmp
xor
imul
aas
divl
inc
mov
add
inc
rolb
dec
inc
jmp
cmp
mov
call
jp
mov
xchg
add
jbe
add
call
cmp
cmp
push
sub
call
inc
pop
cltd
ss
sbb
xor
or
arpl
and
xor
or
loopne
push
mov
sub
aas
icebp
ss
sbb
xchg
pop
mov
nop
rcrb
fstps
dec
xchg
ss
jnp
or
idivb
rcll
stos
push
fwait
sbb
add
add
push
push
sahf
dec
dec
xchg
sub
movsb
aam
mov
and
test
lahf
cltd
push
mov
andl
iret
jne
xor
pop
sbbl
lea
clc
push
sbb
test
pop
stos
test
jl
push
xchg
jmp
inc
jecxz
cmp
add
or
cwtl
push
pop
dec
or
mov
repz
lret
lods
sbbb
mov
or
cmpsl
add
xchg
std
sbb
js
out
push
xchg
lods
sbb
fsubrl
iret
cmp
push
int3
repz
xchg
xor
pushf
push
mov
dec
movsl
mov
data16
push
push
xchg
out
inc
ljmp
add
mov
pop
dec
mov
lret
add
in
enter
inc
cwtl
jb
push
mov
in
inc
dec
movsb
fcomi
imul
xor
out
xchg
stc
push
push
repnz
addl
mov
xor
int
stos
cld
push
sbbb
jge
imul
pop
jns
dec
inc
fisubs
addb
or
outsb
cmpsl
pop
or
testl
add
fstps
pop
test
sbb
fildll
lock
gs
out
dec
icebp
pop
lahf
dec
test
je
jne
out
sbb
sti
cmpsb
pop
sti
pop
repnz
outsl
jae
xchg
cmpb
lods
push
cli
loop
testl
stos
jne
outsl
pop
cmp
movsb
or
test
roll
scas
test
fidivrs
jo
sbb
sarb
lret
les
pop
addl
cmc
xor
aas
mov
es
leave
test
stos
loop
sahf
cmp
pop
push
cmp
les
xlat
sub
cmp
insb
push
pop
in
jbe
scas
dec
xor
mov
mov
cs
push
setb
inc
imul
mov
xor
outsb
in
jg
enter
dec
xor
mov
in
lahf
jle
das
jecxz
and
or
dec
mov
sub
js
data16
mov
xor
mov
adc
mov
pop
cmp
movsl
ret
cs
adc
addl
jecxz
sbb
or
jo
mov
push
shl
imull
pop
aas
cs
gs
adc
cmpsb
inc
movsl
es
sub
lahf
sahf
in
pop
adc
cmp
jb
sub
aad
or
push
sti
inc
jle
pop
xorb
cmp
jnp
inc
rcrl
call
sarl
xorl
xchg
dec
and
mov
push
std
lods
mov
js
ret
dec
push
pop
adcb
out
mov
imul
daa
push
ds
paddsw
sub
xchg
mov
daa
sub
jbe
je
sbb
dec
pop
js,pt
movsb
cmpsb
inc
nop
hlt
fidivs
mov
sub
dec
rcll
outsb
ljmp
push
addr16
mov
cmp
stos
add
call
repnz
fcompl
mov
addr16
pop
adc
mov
int3
fcmovu
cs
mov
jecxz
rcr
push
repz
fcmovbe
leave
adc
dec
outsb
jle
cmpb
inc
cmp
test
inc
jmp
push
aam
out
repnz
fmull
mov
fdivl
xor
pushf
cs
dec
es
in
insw
or
push
mov
or
push
push
hlt
loopne
lret
loope
lods
filds
xchg
fbld
iret
repz
dec
sbb
cld
enter
pop
or
push
in
lock
pop
cmpsl
in
mov
xor
mov
jbe
jl
sahf
aad
in
ffreep
ret
call
mov
jnp
push
lods
arpl
shll
psubsw
pop
sub
aad
in
out
mov
out
xchg
xchg
pop
outsb
std
mov
popa
cmp
jp
mov
enter
mov
mov
mov
jge
scas
into
dec
insl
fmull
inc
ficoml
ja
mov
fs
fsubs
jo
adc
daa
test
inc
sbbl
xchg
sti
inc
cld
adc
inc
in
sti
sti
das
cmp
fcoms
ljmp
push
jae
xlat
mov
icebp
lret
xor
push
sbb
dec
ret
fucomip
je
adc
and
mov
or
xor
repz
cwtl
push
push
movsl
push
push
jns
lea
push
out
test
mov
or
leave
addr16
lods
xlat
pop
jo
pop
imul
adc
lahf
or
scas
fs
scas
lds
cli
fmull
in
call
clc
pop
mov
sar
lods
data16
or
lret
ret
or
int
add
fdivs
leave
sbb
popa
mov
insl
xchg
scas
dec
movsb
mov
ss
movsl
cmp
mov
lds
xchg
jp
and
jp
lods
sbbb
inc
ds
xchg
je
inc
jnp
xchg
test
lcall
sbb
das
push
rorb
sub
scas
adc
and
cmpsb
divl
iret
mov
push
adc
arpl
movsl
shll
push
cmpsb
les
pop
std
push
inc
insb
ds
inc
scas
push
mov
dec
dec
shll
mov
and
mov
cmp
inc
clc
mov
ja
jnp
aam
js
xchg
sbb
cmp
divb
data16
cmp
popf
push
inc
adc
sub
scas
lcall
sti
fadd
xlat
mov
lcall
stos
push
mov
mov
dec
insb
mov
ret
mov
pop
loope
jbe
rcrl
aaa
cmp
sti
jecxz
ljmp
and
nop
mov
push
adc
lret
mov
jmp
js
loopne
notl
pop
cmp
arpl
in
mov
add
pop
cld
subb
cld
adc
or
lds
add
jne
inc
and
push
mov
xor
push
mov
inc
lmsw
ds
sar
movsb
mov
push
and
rcr
dec
xor
mov
xor
outsb
and
test
fwait
push
push
pop
movsl
das
fdivp
repnz
add
xor
pop
filds
insl
lahf
push
stos
sbb
addr16
mov
mov
adc
or
lods
sarl
and
push
dec
fldcw
scas
leave
adc
scas
mov
test
dec
out
push
hlt
jns
cltd
sbb
push
jecxz
lds
inc
xchg
xchg
orl
out
sahf
add
js
add
daa
jne
pop
cmp
jmp
mov
and
xchg
cmc
repnz
and
lods
cli
out
xchg
stos
notl
in
ljmp
mov
out
jp
xor
xlat
aaa
sub
pop
shrl
push
pop
cmpsb
inc
xor
loopne
mov
loope
push
jns
jecxz
xor
movsb
icebp
cltd
dec
dec
das
test
inc
jnp
ss
inc
push
xor
int
call
cltd
add
and
cs
movl
mov
inc
and
outsl
xchg
jmp
out
jle
clc
lds
mov
push
test
jmp
xchg
and
sti
leave
push
adc
or
sub
pop
ret
lock
jo
loope
ret
gs
outsb
xchg
test
cld
xchg
mov
ret
jl
pop
lods
jle
call
jo
ss
adc
leave
or
mov
push
cld
sahf
mov
sti
dec
add
loop,pt
loop
les
push
mov
adc
adcl
mov
xlat
mov
adc
ret
inc
push
push
aas
or
mov
lock
loope
out
xor
add
sbb
push
aad
in
push
mov
orb
add
ds
out
and
push
jno
int
or
xlat
pop
or
sub
adc
leave
jmp
pop
adc
bound
shlb
adc
mov
push
push
popf
pop
pop
dec
ficomps
add
mov
adc
or
scas
aaa
mov
data16
loopne
lret
mov
out
lahf
sbb
sub
insl
jae
push
mov
push
jno
jo
pop
inc
add
jg
pop
add
hlt
testl
testb
push
push
into
stos
hlt
add
xor
and
dec
in
push
adc
and
or
nop
mov
mov
mov
add
and
loope
pop
insl
mov
sti
or
add
cmovge
cmp
mov
jecxz
sbb
pop
pop
sbb
movsl
sarb
jno
movb
adcb
cmp
jno
push
mov
shlb
sbb
out
clc
ret
jns
sbb
mov
cmp
xchg
mov
mov
sbb
mov
fistpll
or
stos
inc
and
inc
insb
popf
xchg
fisttps
xlat
push
and
add
lods
jns
sbb
or
mov
outsl
pop
push
test
push
repz
mov
adc
scas
comiss
imul
stos
pop
loopne
mov
popl
lock
mov
ficoms
cmp
jbe
sub
stos
adc
or
pop
call
leave
std
pop
mov
ret
jl
sbb
in
push
or
mov
sub
and
sbb
adc
mov
xchg
lcall
xchg
jle
mov
push
jno
jmp
sbb
aas
sub
bound
mov
mov
testb
lods
adc
dec
push
mov
adcl
mov
mov
adcl
psubq
mov
notl
js
mov
loope
mov
mov
sub
push
pop
and
inc
mov
inc
jns
add
jmp
cld
sbb
movl
lcall
pop
enter
xor
xchg
dec
pop
pop
sub
aas
test
xchg
cmc
les
xchg
out
fs
out
inc
enter
roll
or
js
sub
roll
mulb
fsubrs
pop
mov
iret
mov
and
mov
pop
jle
mov
clc
aad
jb
and
cmp
mov
outsb
sub
aas
xorl
cltd
sbb
dec
pushf
cmp
mov
push
sbbb
mov
cmp
inc
inc
push
outsb
cmp
mov
fcomi
add
movsb
sbb
mov
cmp
push
les
test
or
pop
es
pushf
mov
fistl
repnz
loop
xchg
push
mov
in
cs
add
lcall
popl
pop
jb
pop
sub
scas
sbb
xchg
jae
jno
dec
mov
xor
xchg
jne
fcomps
iret
pop
mov
outsl
lds
xor
js
cmp
sub
daa
shll
stc
enter
adcb
es
pop
mov
testb
into
xchg
rol
dec
sub
sub
inc
lret
out
pop
ss
dec
sbb
or
add
in
inc
xchg
mov
mov
js
out
push
sbb
lret
ret
mov
sbb
inc
and
ds
jmp
aam
sub
ljmp
xchg
pop
lret
out
mov
loope
add
mov
mov
push
outsb
data16
loopne
ffree
fimull
aas
adc
scas
push
sar
dec
fldcw
cmp
xchg
imul
xchg
lods
testb
push
dec
sbb
loop
push
outsb
add
sub
inc
int
imul
shl
push
test
fs
xor
xlat
dec
xor
cmp
gs
movsl
stos
push
shll
sub
test
call
insl
push
add
cwtl
pop
add
imulb
sbb
call
jbe
fcoml
mov
arpl
pop
repnz
loopne
cs
dec
xor
popa
and
add
daa
xchg
aam
xchg
mov
imul
fidivs
xor
xchg
rorb
nop
cltd
notl
sarb
jns
mov
jne
xchg
mov
inc
popf
clc
int3
mov
and
dec
jo
pop
mov
jge
fwait
popa
decl
mov
bound
aad
mov
pusha
add
jecxz
scas
inc
fucomp
jle
push
ret
mov
loopne
shrl
add
sub
in
xchg
xchg
cmp
mov
add
in
sbb
mov
in
push
inc
adc
in
rcrl
sub
and
les
leave
mov
mov
fistpl
add
push
jge
xor
fistpl
mov
mov
mov
movsb
repnz
jo
test
mov
popf
mov
pop
jl
fists
ds
pop
fidivrs
fstl
hlt
das
pop
stos
xchg
in
sub
inc
jne
call
test
fcoms
int3
cltd
push
scas
test
mov
inc
xchg
and
jbe
pop
fists
mov
xchg
aas
xchg
mov
jns
push
std
cmp
push
mov
mov
daa
rcrb
mov
test
clc
sub
imul
stos
xlat
js
adc
shrb
sub
fnsave
jecxz
cltd
pop
sarl
mov
mov
cmp
cs
repz
ror
popa
jecxz
inc
rcrb
mov
nop
shll
adcb
stc
sbb
je
in
jo
das
sbb
fcomip
xchg
fcoml
mov
jp
ret
xor
int
cmpsb
pop
in
inc
into
pop
fldenv
fcoms
sub
nop
dec
jne
push
ret
jmp
or
adc
xlat
cli
push
mov
arpl
xor
jnp
mov
sub
mov
push
dec
add
adc
inc
ja
and
pop
call
rcr
sub
fwait
das
ret
insb
xlat
fwait
cmp
push
dec
sub
jno
out
std
test
pusha
jb
push
jne
fdivr
cwtl
pusha
ljmp
int
xchg
pop
loop
shll
repz
in
cltd
xchg
mov
adc
dec
stc
dec
ljmp
rcrl
lret
out
or
inc
outsb
scas
sub
mov
int3
movsb
gs
push
out
mov
and
mov
add
add
push
out
mov
dec
lret
lea
xor
push
push
je
dec
push
movq
or
and
mov
mov
jp
dec
and
clc
enter
add
int
mov
adc
push
xchg
in
jne
test
pop
outsl
xor
pop
cmpsl
pusha
lret
mov
pushf
in
jne
arpl
iret
stos
pop
mov
cmp
ja
mov
pop
adc
mov
sahf
fiaddl
mov
call
popf
aaa
cmp
xchg
js
add
ret
lds
mov
mov
or
cmpsl
movsl
mov
inc
enter
cmp
in
sbb
mov
pushf
lcall
mov
aam
nop
sbb
daa
popa
aam
flds
bnd
fsubr
out
push
push
in
inc
aaa
into
sub
lret
fwait
inc
jecxz
pop
jnp
pop
xchg
lcall
and
jle
mov
fcomps
mov
dec
mov
flds
popf
add
dec
pop
test
or
pop
pop
leave
gs
jne
mov
xchg
pop
mov
mov
in
std
push
jnp
je
call
lcall
imul
and
outsb
and
mov
cs
mov
out
dec
fidivrs
push
test
and
jmp
repnz
xor
sbb
pop
pusha
jb
shrl
mov
inc
jae
ficoms
jg
push
loop
fidivrs
lcall
xchg
jnp
pop
jae
in
mov
inc
scas
adc
sub
mov
sbb
aas
data16
stos
xchg
stc
outsl
mov
sub
sub
pop
rclb
adc
jmp
add
aaa
cs
or
repnz
mov
dec
xchg
insl
inc
pop
xchg
hlt
push
jp
popa
cs
xchg
aas
mov
sti
or
shlb
les
scas
pop
jg
dec
outsl
jle
lods
insb
dec
fisubs
testb
mov
pop
in
xor
das
push
mov
lahf
lds
sbb
xchg
sub
xor
addr16
fsubp
int
sub
fcomps
insb
in
push
arpl
xorb
sbb
shll
jns
out
mov
add
out
testb
fwait
xchg
add
test
gs
push
pusha
adc
cs
adc
lods
and
dec
stos
cmp
pop
shrl
dec
sbb
push
ret
xchg
pop
push
xor
test
sub
push
idiv
mov
cmp
adc
mov
push
lahf
xor
lcall
push
xchg
sub
or
push
mov
das
ret
xchg
rcrb
inc
dec
mov
sub
pop
scas
xchg
adc
jne
xor
pop
shlb
sbb
dec
jno
fstps
adc
popf
mov
jp
push
push
or
sahf
inc
aad
aad
xchg
mov
lcall
and
jns
push
mov
bound
and
shrb
pop
stc
sbb
lods
jo
and
scas
cmpsl
push
xchg
push
scas
das
fwait
xchg
iret
loopne
mov
jle
xor
mov
xchg
xor
out
add
dec
jns
fsubl
push
push
std
stos
push
dec
mov
enter
test
mov
test
xchg
or
hlt
add
push
inc
cld
push
sahf
pop
jns
sbb
mov
shl
cmp
movsb
cmp
cmpsl
in
lods
jns
les
xchg
lret
cmp
sbbl
sbb
mov
mov
mov
ljmp
lock
sub
cmpps
loopne
gs
xchg
insl
repz
jbe
mov
xorb
aam
mov
push
lret
aad
ret
lds
jmp
addr16
aad
cmp
je
cmp
stc
bound
adc
je
movsl
sub
pushl
cmp
push
cmp
mov
mov
in
xor
ret
xchg
pop
test
mul
and
scas
xor
into
repnz
xor
icebp
sub
fcoms
xchg
xor
mov
xor
aas
add
sub
xor
mov
cmp
cwtl
aad
mov
adc
mov
mov
scas
add
jb
sub
mov
dec
adc
mov
imul
int3
in
lods
enter
popa
mov
ffree
cli
pop
ffree
xchg
fs
mov
push
adc
shll
xor
sbb
test
cmp
inc
subb
es
mov
ja
dec
ljmp
loop
cmp
lods
dec
adc
add
call
cld
mov
in
sti
cli
scas
imul
xor
sti
jno
shlb
xor
fdivrp
push
jne
mov
jno
aaa
fwait
clc
cs
xor
or
ret
fists
mov
outsl
sub
lcall
shl
xor
fmulp
ret
add
roll
cli
or
cmp
arpl
xchg
gs
jecxz
cltd
jge
mov
sub
xchg
sbbl
aam
sbb
adc
in
movups
push
cmp
or
enter
clc
test
mov
cmpsb
pop
stos
inc
sub
lahf
fiadds
push
lret
cmc
add
jmp
aaa
jmp
sub
dec
int
add
jno
jb
xchg
pushf
adc
mov
or
hlt
push
fiaddl
dec
es
jg
fstpt
add
pushf
jae
adc
out
add
xchg
sub
shll
lea
dec
jne
push
lods
xchg
cmp
aad
nop
stos
mov
jae
pop
mov
mov
imul
sti
imul
adc
push
xchg
adc
adc
jns
adc
stc
into
shrb
mov
imulb
adc
jae
cmc
nop
jle
cmpsl
push
pop
inc
popa
into
outsl
sub
lcall
inc
imul
mov
inc
sbb
shll
xor
adc
stos
mov
aad
lds
xchg
push
fsubl
mov
mov
imul
cmp
inc
sub
xchg
stos
nop
fimull
xchg
xorl
mov
adc
mov
dec
cmp
ss
ss
xchg
notl
test
lcall
cli
xchg
inc
cs
sbb
and
lahf
dec
xlat
push
adc
pusha
dec
push
cs
push
pusha
add
outsl
in
pop
lds
scas
aas
inc
repnz
in
call
test
mov
sub
pop
aas
pshufw
jo
or
movsl
adc
fbld
push
and
fstpl
jmp
js
xor
mov
jmp
fisttpll
mov
bound
outsl
mov
push
xchg
xchg
lretw
pop
mov
repz
or
sbb
push
divb
cmpsb
xor
daa
fstpt
fnsave
lcall
pop
inc
cmp
inc
jg
mov
and
call
stos
in
scas
inc
add
sub
or
in
mov
test
inc
pop
dec
mov
fistps
and
into
and
mov
movsb
mov
stos
stos
test
test
cmp
cwtl
jecxz
xchg
aaa
sbb
and
nop
stos
es
sbb
jmp
pop
or
mov
sub
push
sub
and
fcmovne
sbb
push
data16
out
clc
and
push
mov
fwait
pop
ret
lahf
pop
inc
mov
out
lds
mov
gs
cmp
cmp
roll
es
in
hlt
je
inc
push
push
jo
inc
sub
push
adc
mov
stos
add
arpl
dec
inc
sub
xlat
jno
addr16
js
push
mov
mov
jns
inc
cmp
adc
adc
xchg
sub
sub
outsl
in
sbb
std
cmc
imul
jno
and
incl
pop
adc
sub
out
or
jle
out
add
cs
ds
cmc
or
in
cmp
loop
fiadds
je
inc
xlat
jg
mov
sarl
loop
inc
xor
gs
mov
cmpsl
push
mov
mov
push
xchg
sub
inc
enter
mov
add
lcall
roll
fstps
sahf
or
int
and
pusha
mov
test
rolb
ret
mov
adc
sbb
scas
jae
shll
add
adc
add
imul
ss
loopne
jge
popa
hlt
mov
mov
lcall
sbb
popa
les
push
adc
enter
jg
jo
push
sti
popa
adc
cmova
adc
je
push
and
sub
cltd
cmp
addr16
lahf
mov
pop
mov
sbb
leave
imul
xor
mov
push
test
mov
leave
nop
les
fwait
div
mov
in
push
sub
xchg
pop
inc
fldenv
xlat
pop
mov
gs
rcrb
lds
test
mov
cmp
mov
mov
adc
push
dec
mov
xchg
dec
cmp
rorb
add
testl
mov
push
xor
add
mov
push
ds
add
mov
jns
inc
nop
mov
call
pop
pop
inc
and
pop
xor
push
and
sbb
cld
mov
fnstenv
jno
push
lods
repz
mov
out
add
stc
cmpb
ret
sarb
push
jmp
pop
push
shll
pusha
std
xor
jno
jns,pt
sbb
xorl
lds
out
and
mov
push
sahf
jns
cmp
add
or
pushf
testb
lahf
mov
jecxz
arpl
repz
mov
mulb
jae
xor
in
and
jle
in
inc
ret
or
fs
outsl
adc
jns
cmp
xchg
pushf
mov
sbb
mov
sbb
int
pop
fildl
sbb
xchg
add
dec
mov
mov
fdivs
push
cli
mov
adc
mov
jmp
bound
lret
add
pmulhuw
popf
sti
inc
lds
movsb
or
aad
pop
jl
das
adc
call
jne
or
adc
mov
and
sbb
xor
mov
mov
xchg
mov
jno
or
iret
aam
dec
out
ret
out
sbb
into
stos
mov
xlat
mov
adc
push
sub
or
outsb
lods
or
mov
jno
sub
push
mov
lret
imul
adc
mov
cld
xchg
out
push
mov
jns
pop
outsl
cmp
inc
pop
mov
mov
sbb
sub
jmp
out
jmp
mov
mov
jns
in
pop
scas
outsl
fiaddl
push
mov
sbb
in
push
dec
int3
nopl
aam
xchg
add
shlb
jmp
cld
jge
enter
pop
cs
inc
jo
cmp
cmp
mov
mov
sub
mov
outsl
out
lds
dec
popl
es
xor
nop
ret
mov
ret
inc
xchg
sub
mov
adc
adc
sub
out
adc
inc
jns
push
cld
aam
lock
les
inc
ret
cmpsb
mov
xorl
mov
lcall
pop
stos
loopne
ljmp
cwtl
add
push
add
pop
lcall
xchg
pop
add
xor
ficoms
leave
addr16
lret
add
imull
pop
iret
xchg
xor
invd
repz
push
into
add
andb
hlt
jnp
sub
out
int
jecxz
mov
sub
in
popa
jl
aad
sub
andl
xchg
stc
mov
sub
js
into
jmpw
dec
sbb
inc
xor
lods
pushf
loop
testb
or
and
je
dec
push
daa
mov
dec
call
je
lods
and
data16
jg
mov
in
imul
iret
fimuls
fdivs
mov
jb
movsl
sub
mov
mov
pop
add
rcrl
xchg
inc
icebp
aam
outsb
dec
inc
inc
cmp
mov
insl
dec
mov
cmpsl
stos
xchg
into
ja
cwtl
inc
dec
dec
or
cmp
das
mov
and
sbb
mov
aaa
das
xchg
loop
clc
jb
ret
mov
jo
cmpsb
mov
aas
test
stos
imul
roll
in
ljmp
ja
jno
dec
pop
lds
xchg
andl
xor
icebp
mov
xor
outsb
jb
testl
push
stc
pop
mov
xchg
nopl
aaa
cld
or
daa
aas
insl
mov
adcl
inc
testb
roll
data16
insb
mov
jo
sbb
in
jp
push
in
std
call
mov
or
mov
je
call
mov
jo
insl
sub
movsb
mov
inc
jmp
add
mov
push
lock
adc
push
pop
and
popa
stos
and
add
neg
rcr
fucomi
fbld
insl
fiaddl
and
or
and
xor
iret
outsb
add
hlt
pop
inc
pop
mov
imul
mov
enter
mov
push
inc
cmp
stos
pop
pop
fnstcw
push
push
dec
mov
stos
xor
push
lret
js
aam
jg
adc
and
or
pop
jbe
sub
or
cwtl
sub
push
mov
mov
dec
scas
pusha
fbld
movsb
stc
enter
push
insl
dec
jge
and
or
fldcw
popa
cs
xor
mov
jp
sbb
mov
mov
out
ret
jle
out
push
mov
push
call
fisubrl
dec
cmp
loope
pop
loop
rclb
in
and
cli
add
jns
pop
lea
jle
pusha
lret
pop
push
or
movsb
or
mov
mov
sbb
adc
lods
aaa
sub
out
mov
in
subb
push
lds
pop
push
fsubl
pushf
insb
sub
mov
in
loopne
push
faddl
jns
jo
mov
movsl
out
push
icebp
push
push
mov
xchg
xchg
repz
inc
in
cmc
jae
mov
mov
dec
mov
dec
mov
cvtdq2ps
jne
mov
xchg
inc
xchg
push
outsb
lds
cmp
push
push
roll
lock
push
mov
mov
adc
pop
in
cltd
and
pop
xchg
and
and
sub
insb
icebp
daa
lods
fidivrs
cwtl
stos
cs
add
cmp
jmp
lods
inc
xchg
scas
and
mov
in
cmp
ret
jae
xor
daa
xchg
mov
sub
hlt
loopne
xchg
int3
jmp
inc
jge
adc
push
arpl
and
out
lds
outsb
xchg
dec
cwtl
xor
cs
cmpl
popa
jnp
jg
pop
mov
scas
jmp
mov
lods
ds
loope
add
pop
sub
mov
cli
test
aam
add
pop
push
adc
sub
scas
inc
popa
sub
adc
stos
jmp
js
fs
mov
fsubrl
cmp
add
xor
jmp
cmp
jo
xchg
popa
sbb
movsl
adc
insb
or
fimull
mov
and
mov
mov
lret
lock
jbe
jle
mov
sub
or
test
out
inc
lea
jo
rol
inc
or
xorl
push
push
loope
iret
fucomip
int
ficomps
nop
and
test
mov
pushf
mov
icebp
ret
sbb
and
mov
cmp
mov
dec
sbb
mov
xchg
shlb
lret
das
jl
cltd
jne
mov
push
pop
adc
cs
push
es
jl
rol
xchg
std
inc
jle
push
rorb
outsl
mov
sbb
pop
loop
stc
shlb
mov
or
adc
xchg
icebp
fsubrs
pop
inc
imul
or
rol
push
cmp
and
popf
push
call
cltd
ja
add
xchg
bound
fsubrp
jb
add
jno
movsb
test
pop
dec
pop
dec
push
mov
add
and
rcrl
leave
dec
clc
xchg
xchg
push
in
xchg
sub
push
testl
add
jge
test
bound
xor
dec
les
jecxz
mov
cmp
testl
xchg
mov
push
out
orl
pop
mov
cmp
fidivl
lea
lds
popl
inc
stos
jb
push
mov
imul
xchg
cmpl
or
lods
loopne
in
stos
int3
fadds
or
loopne
xor
shlb
cmpsb
mov
cmpsb
lock
lods
ret
pop
xor
jmp
cmpsl
mov
es
mov
add
cld
insb
shll
stc
xchg
lock
imul
les
lods
mov
hlt
xchg
sub
and
dec
sub
push
stc
es
jns
xlat
in
popf
insl
adc
dec
int3
lds
push
les
xor
es
fsubr
vpcmpeqb
in
xor
mov
pushf
sub
loope
mov
cmp
and
xor
inc
aam
popf
xor
or
push
call
push
in
pop
mov
push
cmpb
pop
out
inc
mov
sarl
into
aam
or
push
or
sbb
icebp
sti
pop
adc
movl
push
rorb
add
sub
es
fs
cwtl
inc
pop
dec
ljmp
dec
and
push
push
icebp
push
push
mov
imul
dec
or
push
cmc
ret
leave
mov
sar
add
fsubs
pusha
jbe
call
adc
inc
mov
mov
or
and
cmp
aaa
mov
mov
cmc
loop
dec
mov
inc
aas
jecxz
adc
mov
lds
bound
add
ret
fistps
mov
popa
adc
imul
leave
cmpsb
sbb
cmc
lock
and
je
inc
inc
add
fucom
aam
mov
movsl
mov
push
jne
movzwl
call
adc
xchg
insl
pop
popf
fildl
pop
or
cmpsb
leave
jo
mov
clc
sbb
push
shlb
or
aad
mov
jne
insl
pushf
inc
roll
outsl
sub
std
imul
push
xchg
add
js
sbbl
and
mov
xchg
dec
rorl
inc
sbb
repnz
inc
mov
cs
pop
cmc
sbb
inc
or
pop
fbld
jp
jecxz
mov
xlat
or
cmpl
or
frstor
hlt
in
stos
enter
sbbl
je
fildl
sub
xchg
or
ljmp
lock
push
imul
push
push
and
mov
and
call
push
mov
aas
in
clc
sub
dec
testb
push
mov
cwtl
leave
out
dec
ljmp
mov
sbb
pusha
aam
mov
xchg
and
in
notb
push
dec
repnz
scas
test
add
xor
movsb
push
jno
pop
lods
out
out
xchg
jmp
shrl
clc
xchg
xchg
sbb
neg
aad
cmp
jecxz
mov
cmp
scas
adcl
jno
out
push
lret
sarl
jno
pop
or
test
mov
sub
cwtl
ret
mov
pop
push
cmpsl
mov
cltd
xor
pop
push
loope
imul
subl
pushf
testl
pop
jge
arpl
xor
cmp
xlat
pop
fucom
pop
sbbb
xor
pop
daa
out
ror
mov
mov
mov
xchg
sbb
mov
sahf
jmp
jg
ds
fdivr
sub
addr16
or
mov
dec
add
mov
cwtl
aad
inc
add
cmp
mov
fdivs
shr
push
adc
icebp
movsb
jb
ficompl
iret
adcl
jbe
arpl
fs
out
pop
xchg
xchg
mov
xchg
push
shl
sbb
clc
inc
mov
adc
lock
sti
mov
mov
ljmp
xchg
nop
popa
or
leave
out
stos
aad
fisubrl
outsl
popf
xchg
in
jg
repnz
mov
call
into
sbb
fs
mov
fisubl
loopne
lods
jle
mov
dec
sub
xor
das
push
cltd
push
jmp
push
or
dec
cmp
and
lods
pop
add
sub
mov
or
testl
outsb
test
mov
and
lcall
and
pop
insb
imul
mov
xchg
shrl
cmp
jbe
cmp
cmp
push
adc
mov
mov
stc
jmp
daa
mov
ja
movb
dec
cli
aad
jle
cmc
xchg
jbe
inc
insl
nop
mov
les
xor
push
xlat
inc
sbbb
aam
inc
std
ret
mov
add
fcomip
cs
cmp
insl
cmp
or
je
sbb
and
xchg
mov
sub
xchg
gs
iret
add
js
cmpb
movsl
pushf
pop
loopne
les
and
in
or
pop
jno
out
jae
shrl
dec
add
lds
pushf
pop
ret
insl
push
push
cmp
ret
push
inc
cld
les
cs
cmp
mov
repz
pop
cmp
mov
push
sub
into
les
sbb
sbb
andl
add
inc
shlb
sub
sbb
inc
xorl
bound
lret
lods
popf
push
sub
cltd
cli
loopne
ret
jge
lds
dec
lcall
lret
call
xlat
imul
addr16
pop
addr16
lds
adc
and
sub
pop
jbe
fisttpll
xor
sahf
lods
jecxz
sahf
dec
out
filds
dec
in
dec
push
jmp
addr16
fists
aam
xchg
mov
mov
arpl
dec
popl
fimuls
in
mulb
call
cmp
inc
in
xchg
jmp
inc
popf
addr16
jp
add
test
pop
lock
outsb
arpl
mov
and
adc
repnz
aaa
add
adc
ja
pusha
cmpsb
lret
mov
jl
sub
in
lock
ljmp
dec
sub
and
mov
out
inc
lods
xchg
jno
xchg
mov
lock
pushf
ljmp
addb
ret
test
mov
nop
rclb
xchg
inc
mov
xlat
sarl
aad
add
pusha
xchg
push
in
stos
imul
or
popf
insl
clc
push
loop
xchg
mov
or
sbb
jecxz
and
sbb
sub
sbb
inc
mov
dec
jo
add
mov
aaa
out
jnp
mov
out
scas
jecxz
mov
leave
dec
dec
ljmp
ljmp
mov
iret
sbb
push
cli
xchg
xchg
pop
lret
jge
fcompl
fldt
cmpsl
jmp
ja
in
adc
std
in
lret
jp
adc
mov
or
cmc
and
roll
inc
lock
outsl
fiadds
add
lahf
push
call
push
add
int
es
lods
mov
out
seto
push
push
clc
push
xchg
xchg
js
jns
outsb
cli
out
jmp
jnp
inc
cmp
mov
fisubrs
or
push
lods
fsubr
jp
adc
pop
sbb
mov
xchg
cmp
inc
jb
lds
cwtl
xchg
cmp
xchg
push
pop
ret
dec
stos
xor
ds
test
xchg
sbb
sbb
addr16
or
mov
jo
test
sub
xchg
inc
jg
mov
aas
mov
in
mov
jle
mov
cmp
lods
xchg
lret
ss
dec
sub
lea
leave
mov
push
push
ds
dec
cmp
dec
mov
insb
aas
push
dec
ror
pop
fdivr
adc
jnp
dec
dec
cs
stos
pop
dec
ja
movsl
insb
jne
sti
push
adc
clc
sbb
fcompl
push
lock
aad
mov
fs
sbb
cmp
lret
sahf
push
ss
sub
pop
cwtl
rol
mov
testb
lret
shll
mov
xchg
movsb
jo
popa
loopne
inc
mov
add
jbe
adc
stos
stc
cmc
sub
jnp
sub
jmp
jae
iret
scas
dec
pop
in
xor
insl
pop
xlat
leave
inc
xchg
pop
stc
jecxz
push
fstps
ljmp
inc
cmp
fwait
sbb
jbe
pop
xchg
cwtl
repnz
dec
icebp
sbb
mov
dec
enter
and
fisubs
orl
jnp
pop
lcall
sub
popf
adcl
jp
push
scas
in
shlb
cmp
repz
xchg
xchg
fisubs
cmp
scas
aaa
lods
cmp
aaa
jecxz
sahf
and
lcall
mov
xchg
add
lcall
nop
ret
mov
movsb
enter
push
mov
in
adc
stos
int3
in
sahf
pop
shrl
mov
pop
cmp
mov
aam
loop
shll
pop
pushf
jno
outsb
adc
jns
add
ret
jae
sarb
xchg
lea
add
mov
mov
lahf
insb
mov
aas
nop
xor
in
push
xchg
ljmp
icebp
pop
or
push
sbb
pop
mov
inc
mul
lods
enter
mov
call
dec
setno
push
fmuls
shll
test
fisttps
cli
ja
ficoml
push
adc
stc
mov
or
mov
test
jo
cmp
frstor
jmp
xor
movsb
aas
stc
mov
int
cld
fiadds
add
ja
xlat
aas
call
mov
out
test
cmp
inc
jg
mov
inc
add
xchg
mov
faddl
mov
and
sub
mov
mov
push
stos
shrl
inc
xchg
sbb
stos
pop
mov
fidivl
or
jae
into
lock
lcall
jnp
out
mov
pop
fs
jmp
push
or
addb
xchg
sbb
test
mov
out
ret
xchg
inc
aam
cld
mov
call
pop
test
lods
xor
cmp
or
into
aad
push
lock
test
xlat
add
sub
testl
sbbb
dec
pop
pop
ljmp
push
push
cwtl
into
and
sarb
test
dec
xor
mov
pop
test
sub
and
pushf
insb
mov
xchg
scas
sar
xor
scas
cmp
test
jno
idivb
mov
xor
push
mov
sti
je
dec
jne
xchg
pop
lahf
daa
shr
and
out
jmp
and
daa
scas
ja
jle
daa
sbb
fs
scas
rorb
lods
push
lods
xchg
test
xchg
or
roll
cwtl
push
and
mov
xchg
in
xor
pop
jbe
xchg
and
mov
mov
nop
mov
outsb
jl
scas
rorl
das
mov
adc
sub
or
mov
xor
scas
inc
cmp
lock
mov
cld
fnstsw
inc
mov
subb
push
call
add
int3
arpl
pop
mov
sub
mov
aad
loopne,pn
js
call
jae
pop
cld
add
mov
stos
outsb
mov
sbb
std
sbb
pushf
lods
iret
xchg
hlt
mov
push
lret
mov
mov
pop
adc
dec
or
pop
inc
scas
faddl
in
sub
mov
orb
jnp
pop
clc
jno
rclb
lahf
int3
and
mov
sbb
das
data16
mov
fildll
popf
add
sbb
xor
cmpsb
and
and
outsl
ret
mov
popf
stos
mov
aas
iret
adc
jl
push
mov
movl
adc
inc
jecxz
nop
addl
divb
lret
in
stc
cmc
loop
loop
rol
outsl
jl
into
jmp
jnp
add
pop
cmc
int
nop
xchg
ljmp
fcomip
sbb
or
sbb
push
sub
add
stos
push
cwtl
sbb
out
lods
sbb
pop
xchg
xlat
inc
je
dec
mov
mov
cmpsl
lea
jb
out
and
aam
cmp
int3
adc
push
jns
cvttps2pi
push
mov
repnz
push
and
pop
push
sub
or
xchg
adc
and
in
fldl
lds
and
out
outsl
pop
clc
push
stos
pop
movsl
mov
fs
xchg
sub
shrl
cmp
movsb
insb
inc
jae
dec
xlat
scas
adc
inc
pop
pop
aam
addr16
cltd
pop
cmp
xlat
stos
mov
jo
push
jl
add
sbb
cmp
shrb
pop
adcb
xchg
ja
jl
mov
push
inc
jmp
jnp
rorl
rorl
mov
add
xorb
imul
nop
push
mov
sbb
pop
arpl
leave
loopne
xor
adc
jns
and
inc
mov
stos
aas
cmp
outsl
xchg
out
jnp
std
dec
stos
mov
mov
fbld
xchg
xchg
cmp
mov
data16
jno
mov
mov
push
sbb
pop
mov
bnd
dec
lahf
shlb
xor
fsubrs
cmp
in
movsb
or
fsubrl
inc
pushf
inc
xchg
ds
jb
arpl
inc
mov
pop
in
sbb
add
rcrb
mov
les
clc
inc
leave
and
jmp
xchg
sub
xchg
popf
inc
lret
dec
add
jp
mov
je
iret
dec
inc
jg
aad
adc
clc
mov
jmp
push
xor
pushf
std
lahf
fisttpll
or
pop
mov
inc
xor
inc
adc
inc
adc
mov
dec
in
cltd
ficompl
je
cmpsb
in
orl
cmpsl
es
mov
xchg
jae
mov
xchg
nop
rolb
push
push
xchg
xor
adcb
shl
jmp
scas
sub
rcr
iret
sbb
stos
add
adc
sbb
inc
loop
mov
xor
pop
and
out
pop
mov
mov
cmc
js
adc
imul
les
add
add
cli
sbb
in
xorl
rcl
scas
outsl
nop
je
out
rolb
notb
repnz
xor
push
sbb
in
pop
and
rorl
sbb
out
cmpsl
shl
inc
test
jb
push
sahf
cmp
cmpl
cld
lret
rorl
cltd
cmp
gs
pop
mov
into
test
inc
sub
cmp
pop
mov
sbbl
imul
test
mov
xor
test
std
add
shl
inc
out
add
cmc
fistps
add
jl
rolb
sarb
inc
jbe
icebp
mov
bound
sbb
test
mov
data16
pop
dec
mov
int
xor
add
inc
mov
xchg
xor
xor
jnp
xchg
in
sbb
adcl
cmp
pop
or
movsl
xor
and
lcall
mov
mov
shrb
mov
xchg
icebp
in
test
xor
pop
add
popl
sbb
leave
dec
les
pusha
or
or
iret
pop
push
stos
lods
mov
dec
gs
leave
bound
cmp
loope
xor
mov
jmp
cmp
iret
mov
xchg
xchg
sub
iret
mov
or
or
pop
push
mov
repz
push
loopne
jno
repnz
insb
std
lods
nop
cmc
or
push
sbb
call
test
ljmp
push
sub
popa
nop
pop
ja
jno
or
sub
loope
scas
inc
cli
sti
adc
cmp
cmpsb
inc
std
inc
outsb
add
js
gs
cmp
negl
dec
or
sub
mov
and
lods
cmc
out
mov
xchg
dec
xor
aas
enter
cmc
inc
mov
sbbl
jo
pop
fisubs
popa
inc
mov
je
int
popf
adc
inc
subb
lods
repz
shll
fcmovu
push
xor
or
mov
shll
dec
xor
dec
sub
jmp
pop
aad
ss
xchg
sarl
adc
inc
cmc
dec
xor
push
mov
in
test
mov
xchg
lahf
outsb
outsl
sub
scas
mov
lods
aad
or
mov
dec
repz
dec
shrb
pop
mov
shll
icebp
or
pop
jb
dec
arpl
imul
or
repnz
hlt
or
dec
inc
scas
out
movsl
jmp
adc
lret
dec
out
dec
sub
rcl
les
jo
mov
pop
sar
sbb
pop
fs
mov
jle
imul
push
icebp
test
aad
sarl
mov
gs
fucom
notl
nop
jbe
cmp
jg
or
fists
inc
sahf
push
ja
pop
pop
pop
clc
sbb
jb
rcrl
xchg
jecxz
sbb
mov
push
sub
push
inc
xchg
cmp
stos
mov
sbb
mov
cmp
test
jge
pop
xchg
xchg
stos
adc
cmpsl
inc
sti
dec
sarb
fsubs
mov
clc
mov
dec
iret
repnz
dec
pop
push
add
ja
push
push
adc
cmp
jle
dec
fstpt
scas
or
sbb
adc
jno
mov
loope
sar
lock
ljmp
mov
push
ljmp
pushf
repz
xor
mov
jl
xchg
cmpsb
adc
or
outsl
imul
cmp
mov
pop
les
pop
fimull
xor
mov
shrl
adc
jecxz
adc
dec
aas
cmp
in
adc
ror
push
push
pop
loopne
and
cmp
pushf
push
sub
fimull
jp
insl
fistl
in
insb
add
cs
mov
test
incl
lret
movl
and
push
out
and
cld
add
mov
jno
mov
pop
mov
test
jbe
add
dec
out
and
pop
or
xor
fists
mov
repz
inc
xchg
jecxz
dec
xchg
pop
xchg
adc
ficompl
add
dec
jns
ja
dec
dec
mov
cs
iret
loope
loop
mov
in
add
hlt
xchg
fstl
sub
lods
mov
sbb
test
cmp
ja
aaa
or
test
out
stos
and
sbb
xor
xlat
repnz
mov
lcall
mov
gs
test
dec
mov
out
xchg
inc
aam
jmp
xor
mov
ficoms
test
and
pop
repnz
loope
dec
and
cmp
or
xor
sub
movsb
dec
ret
scas
test
jb
mov
xchg
scas
pusha
das
arpl
lds
js
cmp
jnp
jmp
xor
mov
mov
xor
jle
test
xor
lds
stos
push
inc
jb
je
push
xlat
ds
mov
cmp
inc
pop
les
xchg
adc
shl
jle
scas
insb
setb
sbb
repz
xorl
adc
push
mov
es
mov
mov
mov
jmp
adc
nop
jbe
pop
sbb
add
or
je
popa
inc
or
rcrb
and
fdivl
xchg
cmpb
mov
jg
adc
xor
sub
pop
xor
mov
insb
or
bound
adc
ret
pop
test
dec
pop
outsl
int
jno
loop
int
out
xchg
dec
jo
xor
push
ror
dec
add
int
addr16
sbb
lret
in
add
in
mov
das
nop
je
sbb
jmp
push
inc
cwtl
pop
xor
pusha
mov
and
jno
mov
xchg
sbb
dec
mov
cmp
adc
fwait
mov
aas
fstl
mov
sbb
mov
jg
lcall
add
push
sub
adc
mov
inc
mov
jmp
sbb
pop
into
fxch
sahf
xrelease
cld
ss
fwait
push
pop
mov
fs
sub
cli
mov
je
shrb
sbb
dec
inc
dec
sbbl
sbb
popl
push
pop
lock
sub
push
pusha
decl
inc
add
mov
lcall
out
test
jnp
mov
out
cmp
mov
cmp
inc
and
push
ds
mov
out
mov
sbb
repz
inc
adc
adc
insb
outsl
adc
lea
sbb
or
inc
and
in
stos
mov
xchg
filds
shll
inc
xchg
ret
test
adc
cmp
xchg
je
aas
repz
jb
xor
dec
cli
inc
mov
add
push
inc
mov
pop
adc
je
mov
xor
js
cmp
insb
and
ja
cmc
cwtl
fs
out
out
clc
loope
pop
xor
fwait
aaa
add
adc
in
mov
mov
push
repz
cltd
jl
fs
jne
sbb
dec
enter
jae
jmp
xchg
hlt
mov
lea
mov
jge
arpl
push
rcrl
lds
push
push
orb
mov
shl
pop
test
pop
subb
inc
ds
xor
xorl
push
xchg
add
test
int3
add
adc
dec
push
mov
sub
jne
les
mov
je
xchg
xlat
roll
sti
test
jnp
and
push
add
and
mov
pop
and
cltd
or
icebp
and
sub
push
insb
popa
loop
fucomip
dec
lahf
sub
clc
jg
jbe
dec
out
cmp
push
xchg
adc
xor
mov
and
push
add
into
cmp
push
pop
decb
jb
out
xchg
sub
mov
mov
mov
leave
movsl
xchg
jg
mov
lcall
testl
movb
pop
test
fsub
jle
jge
icebp
mov
stos
jb
loope
adc
mov
cmp
call
xchg
sub
mov
icebp
fsubrs
xchg
xor
pop
cmp
fdivs
int
ret
mov
jbe
loopne
repnz
outsb
lahf
inc
jae
sbb
push
xchg
sbb
movsl
jo
mov
into
or
ficompl
pop
daa
jmp
and
pop
jl
mov
loop
and
enter
mov
stos
pop
jge
sub
mov
or
aas
test
adc
scas
push
ss
xchg
jg
mov
jno
lret
mov
test
mov
sub
dec
roll
lret
in
xlat
cs
inc
js
into
out
call
lea
out
cs
add
sub
or
in
xor
mov
xor
xchg
xor
mov
push
mov
lret
sbb
in
outsb
xlat
test
adc
add
lds
testl
in
test
subb
clc
enter
nop
sahf
mov
ds
psubusb
mov
pop
xchg
cmc
mov
inc
sti
cmp
shll
or
xor
es
xchg
mov
jmp
aaa
rolb
pusha
je
sub
push
jmp
ror
fs
cmp
fdivrl
outsl
mov
sbb
xchg
in
mov
shlb
roll
xor
lcall
adc
roll
repnz
iret
insl
or
aam
je
mov
movsb
cmpsl
xchg
das
mov
into
dec
mov
jno
push
mov
scas
pushf
xchg
gs
movsb
inc
mov
mov
je
and
ja
xor
punpckhdq
xchg
mov
jns
cmp
add
and
lret
fldcw
mov
fwait
jae
push
leave
ficompl
pushf
cmp
xchg
mov
xor
test
xchg
addr16
adc
push
cmc
ljmp
int
xchg
pusha
pop
sti
or
repnz
dec
add
fsub
and
bound
sub
cld
in
cmp
arpl
and
xlat
std
loop
loopne
imul
loopne
stos
push
pop
jbe
dec
in
jo
xchg
dec
pop
add
das
cs
fwait
push
test
adc
in
xchg
rcr
dec
dec
sbb
push
inc
fisttpl
in
and
inc
xchg
mov
jbe
loopne
dec
nop
in
mov
lea
icebp
clc
fildll
xchg
pop
subb
out
mov
jb
das
scas
fmul
xchg
mov
in
jp
daa
push
aaa
xchg
loop
cmp
push
outsl
js
sbb
ja
jnp
cltd
dec
mov
lret
in
or
cmp
andb
mov
test
adc
daa
cltd
lds
popf
cmpsl
jno
push
add
add
mov
popf
shlb
xor
mov
decl
insb
mov
fwait
shll
pop
adc
inc
xor
cmp
jb
push
inc
mov
pop
pop
fucom
cwtl
push
pop
aad
adc
loop
sub
ds
pop
push
jmp
sbb
icebp
mov
push
or
cmp
jb
xchg
adc
xor
adc
push
scas
push
mov
push
loopne
lds
or
pop
cli
lahf
inc
ficompl
out
adc
cmp
arpl
pushf
inc
shlb
cmp
clc
jecxz
jecxz
inc
aaa
mov
inc
stc
jne
inc
lods
daa
jns
push
mov
aad
and
je
sub
lahf
cmc
mov
fistps
add
ja
fidivrl
jbe
data16
je
push
cmp
pop
addl
fcomps
add
popf
lret
inc
loop
cmp
incl
scas
lods
dec
or
nop
lret
movsl
cmp
or
gs
jo
jno
jmp
mov
pop
mov
jmp
mov
pop
adc
pop
adc
mov
fisttpll
ror
mov
sbb
sbb
add
inc
dec
fdivl
movsl
aam
jg
leave
or
cltd
je
and
loope
xchg
pop
lods
fisubl
and
xchg
pop
pop
sahf
insb
in
cmp
filds
mov
adc
pop
jg
jb
call
enter
pop
xchg
ja
sub
test
mov
dec
adc
xchg
pop
inc
mov
cmpsb
daa
xor
jl
pop
and
sub
mov
jb
scas
nop
inc
loopne
sbb
or
std
pusha
fistpll
sarl
and
jle
movsl
sub
cltd
leave
sti
shrb
mov
fs
xchg
inc
push
jo
out
push
out
les
push
idiv
or
mov
sub
lods
pop
xlat
xor
pop
out
sub
call
inc
ljmp
jnp
adc
jge
std
add
fisubs
int
xchg
out
sub
push
jo
mov
mov
sub
or
mov
xchg
or
pop
fbstp
mov
adc
icebp
push
mov
call
pop
fsubrs
out
leave
xchg
stos
cmp
adc
fistpl
lea
dec
int3
push
xor
mov
lock
xchg
push
cld
push
cmp
js
mov
aas
xor
mov
test
pop
outsb
inc
aaa
aas
sub
gs
cmp
push
or
mov
sub
sahf
leave
test
jo
cmpsl
div
and
sbb
insl
jb
push
mov
jmp
lea
adc
stos
sbb
inc
xchg
out
mov
ret
cmc
insl
push
pop
sbb
push
inc
pop
imul
andb
xchg
and
cltd
adc
fistps
mov
cmpsl
dec
fsubp
lret
outsb
pop
rcll
test
imul
cmp
push
prefetch
push
inc
pop
sbb
in
fwait
and
or
or
push
cltd
jnp
push
mov
push
xchg
sbb
jp
in
mov
loop
gs
jl
or
mov
lcall
sbb
sub
xchg
push
test
xchg
shlb
cltd
mov
push
add
icebp
sbb
cmp
imul
mov
adc
mov
and
sbb
stos
imul
sbb
or
pop
and
pop
sub
push
mov
movsb
repnz
aam
test
rol
rcll
xor
pop
imul
imul
in
add
mov
lahf
mov
jo
lea
test
pop
inc
lock
sub
out
outsl
pop
adc
mov
cmp
xchg
xor
in
out
mov
cmp
cwtl
in
or
mov
dec
lock
sub
dec
fidivl
aaa
mov
jne
enter
or
fwait
in
sub
mov
fcomip
sbbb
or
or
out
mov
ror
pop
loopne
ja
out
or
mov
cmp
fsubrl
ljmp
repnz
bound
lahf
dec
lret
dec
and
jl
or
mov
clc
or
orps
sub
push
mov
jne
pop
mov
inc
pop
in
push
rcrb
rcl
into
mov
sub
mov
fistpl
sti
add
stos
in
pop
pop
cmc
mov
mov
in
mov
mov
imul
imul
es
sbb
std
jecxz
subb
lock
sbbb
repnz
in
je
jb
pop
inc
or
in
lods
adc
outsb
cwtl
mov
test
push
js
add
adc
test
pop
lods
adc
inc
enter
mov
rcll
insl
idivl
lea
lcall
lock
popa
push
dec
aas
mov
lea
or
es
mov
mov
sub
xor
cmc
mov
dec
repz
dec
adc
shr
ret
daa
mov
and
leave
add
and
xor
xor
daa
movl
not
sub
and
pop
adc
dec
sbb
or
or
cld
das
mov
stos
call
jmp
xor
or
and
inc
insl
xor
into
mov
ror
dec
sub
dec
xor
mov
mov
mul
arpl
jb
dec
mov
jo
xchg
mov
popf
dec
push
inc
imul
test
or
jge
rorl
and
pop
lret
mov
fidivs
jbe,pt
xor
sbb
mov
push
iret
mov
mov
dec
fisubs
stos
xorl
je
cli
xchg
hlt
scas
aam
xlat
push
insl
movl
loopne
aam
sub
loop
adc
out
jnp
add
mov
arpl
int3
mov
add
int
fcomps
dec
or
les
mov
je
movsb
mov
scas
inc
adc
mov
pop
push
movsb
cs
gs
test
push
rorb
cwtl
and
shl
xchg
std
mov
xchg
mov
rorb
sbb
loopne
js
cld
jle
rorl
dec
cmp
xchg
or
ret
sbb
ja
stc
jecxz
push
jecxz
js
insl
icebp
adc
sub
and
enter
scas
sub
int
cmpsb
jmp
cs
test
mov
lret
or
add
iret
mov
mov
sbb
aam
cmp
cmp
aaa
popa
test
jge
lret
ret
and
jo,pt
mov
loope
adc
stos
int3
stc
lea
aam
xchg
sub
ror
addb
jle
pop
gs
add
jg
add
pop
xor
xor
push
fimull
xlat
push
jbe
mov
push
enter
outsb
xor
in
and
sahf
add
inc
mov
cmp
adc
mov
leave
pusha
adcl
xor
cmp
mov
xchg
pushf
push
dec
insl
fidivl
jp
xchg
pop
imul
inc
icebp
sub
mov
fstpt
in
ret
jle
lcall
sub
fmuls
pop
xor
nop
sub
or
mov
movsb
push
cwtl
mov
cmpsl
test
jle
push
and
daa
leave
jecxz
xchg
aam
ret
jbe
lret
lods
fstpt
push
adc
test
insl
fimull
push
push
fidivs
jb
jg
out
push
jp
mov
sub
lret
inc
adc
or
test
pop
fldenv
in
or
inc
sbb
xor
lahf
inc
jno
add
pop
ss
and
ja
mov
cmp
push
or
inc
pusha
and
xchg
daa
in
mov
cmp
fsubrl
push
push
fdivs
dec
jae
and
sbb
pop
lods
outsl
cmp
mov
lret
enter
aam
jp
mov
jae
push
stos
orl
cs
out
test
fwait
loope
out
jnp
mov
scas
cmp
jl
cld
mov
or
neg
or
aam
ret
fimull
and
lcall
aad
fstp
test
xchg
hlt
jmp
sbb
xor
xor
roll
in
imul
fsubrl
pop
out
ret
in
mov
xchg
mov
sbb
ljmp
pop
or
jl
xor
pop
push
dec
mov
cmp
out
or
in
mov
and
or
in
loope
cmc
mov
mov
mov
xchg
add
mov
movsl
push
mov
scas
or
or
rcr
mov
popf
jnp
xchg
divb
xor
ss
shll
inc
cltd
cli
or
sbb
dec
in
js
scas
xor
sub
push
pop
ds
pop
lahf
add
inc
mov
push
push
ja
fwait
das
mov
arpl
sahf
in
xchg
mov
les
mov
cmpsb
and
lods
mov
add
int
adc
enter
or
xor
mov
dec
cmp
ret
sub
cmp
sub
fisubrl
push
sti
mov
arpl
out
test
stos
mov
inc
mov
fisttpl
mov
sub
adc
idivb
adc
mov
sub
iret
cs
mov
loop
ljmp
add
scas
bound
stos
cmpsb
out
sub
fimull
dec
pop
push
pop
rclb
push
leave
out
rcr
es
mov
jbe
cmp
fmulp
popf
mov
xor
lret
lock
repnz
aad
adc
add
jb
mov
aad
add
sahf
pushf
jg
pop
jge
enter
call
add
iret
mov
pop
pop
subb
gs
or
fcoml
dec
pushf
cmpsb
add
in
xchg
test
adc
fsubrl
dec
or
cmp
inc
sbb
call
je
cli
push
mov
jb
rcrb
mov
in
ds
outsl
pop
xor
jo
nop
mov
and
cld
out
roll
std
adc
mov
xlat
mov
jae
popf
jmp
pop
lret
or
xchg
fnstenv
ret
ljmp
mov
and
call
out
mov
loope
sub
jne
subl
pop
sahf
mov
jno
shlb
jl
aas
pop
adc
or
iret
data16
or
jbe
ss
or
outsb
pop
jnp
jae
xchg
addl
rcrb
mov
add
cwtl
aam
pushf
lret
js
loope
sub
inc
dec
leave
insl
dec
and
pop
orb
fcomps
dec
mov
adc
leave
daa
mov
scas
fcompl
xchg
lods
lods
int
notl
clc
sbb
push
fdivl
ret
in
and
icebp
shlb
ljmp
sbb
outsb
stos
out
fwait
das
test
popf
lods
mov
mov
iret
push
scas
rolb
cmp
mov
loope
push
xchg
and
jbe
xchg
and
std
pop
push
call
sub
xchg
lods
dec
xchg
loop
clc
ret
cmpsb
cmpsl
mov
subb
pop
fstps
adc
in
mov
and
lods
fldl
das
sub
inc
gs
faddl
pop
aas
sbb
out
mov
push
pop
pop
nop
int
mov
sbb
pop
mov
push
jl
popf
add
movsl
push
mov
mov
mov
mov
and
push
dec
sub
std
fwait
mov
fwait
push
aam
les
lahf
repz
loopne
repnz
jle
icebp
clc
cli
push
add
insb
jnp
jle
push
or
adc
inc
fstpt
pop
pop
sbb
lock
mov
out
mov
or
push
std
push
idiv
xchg
dec
sahf
stos
arpl
mov
push
inc
test
jp
jp
mov
pop
ficomps
and
in
push
test
outsb
inc
shrl
ret
dec
insb
sarl
stos
dec
je
mov
and
inc
ficoml
inc
and
aaa
or
mov
in
dec
xchg
test
mov
incl
cmp
loope
sub
mov
sub
mov
fstpl
sbb
adc
mov
nop
jle
push
insb
mov
cmc
pop
leave
test
into
mov
out
push
mov
cld
mov
mov
into
and
leave
in
stc
inc
push
cmp
mov
cmpsb
push
adc
mov
orb
iret
aam
mov
inc
iret
in
dec
xor
pop
pop
frstor
xchg
cmp
les
push
sbb
incb
jecxz
xor
jg
sbb
nop
xchg
pop
push
mov
lea
push
lods
aas
daa
ljmp
pop
nop
push
adc
leave
and
shrb
cmc
and
popf
cmp
and
loop
jg
mov
dec
xor
cmc
add
dec
not
and
outsb
jo
ljmp
jae
inc
cmc
xchg
pusha
sbb
mov
adc
mov
or
push
mov
jp
out
lds
dec
push
addr16
stc
rcrl
lods
xchg
push
pminub
pop
mov
fidivs
shll
push
adc
lods
sub
add
ficompl
in
cmp
add
cs
js
arpl
orb
ss
repnz
test
push
xor
push
cmpsb
dec
adc
push
fcomi
dec
inc
rclb
loop
sbbb
movsb
movsl
push
mov
mov
or
cwtl
sarb
push
inc
xchg
mov
mov
xchg
negl
aas
push
iret
cmp
mov
pop
push
aad
dec
xchg
pop
adc
sbb
lock
adc
hlt
sub
mov
mov
or
sbb
lds
mov
aas
fisubrl
sub
cli
addb
sti
sbbl
popf
lods
jp
dec
rclb
lret
inc
and
and
and
mov
push
jl
fsubrl
call
sub
cmp
sub
mov
dec
sbb
and
mov
out
and
addr16
cmp
arpl
sahf
in
push
je
std
test
sbb
rorb
xchg
pop
stos
sarb
data16
mov
dec
fidivs
push
push
scas
lea
sub
pop
sbb
or
in
pop
mov
je
dec
add
rcl
cmp
or
sub
out
adc
mov
mov
loopne
imul
sbb
into
lcall
shll
pop
lret
mov
sbb
pop
cmp
jno
sbb
stc
adc
mov
test
roll
lods
sbbl
mov
jae
gs
lods
int
add
push
xchg
xor
cld
sbb
addb
rcrl
mov
cmpsb
xchg
scas
mov
in
shll
adcb
sub
xor
test
and
mov
fdivr
mov
enter
xchg
aas
pushf
dec
inc
ja
jnp
mov
jecxz
pop
mov
aaa
xlat
mov
push
xchg
jno
adc
push
and
push
fisubrs
cwtl
ficoms
mov
out
aaa
or
lea
das
std
fstps
sbb
les
mov
cmp
jns
gs
sbb
cli
sub
dec
les
adc
pop
fisttpll
ja
mov
decb
das
ret
ljmpw
rcrl
mov
cld
out
cmc
fcomi
leave
daa
push
inc
pop
lods
mov
mov
push
fdiv
cmpb
stos
rclb
push
bound
inc
fisubrs
jne
xchg
lds
jl
lods
inc
mov
aaa
shll
or
and
mov
jp
lea
inc
aaa
push
testb
in
xor
push
push
and
and
sbb
push
push
je
std
sub
fistl
dec
call
jmp
aas
push
push
cs
push
in
inc
fldl
sbb
scas
jae
mov
pop
stos
ljmp
fiadds
jp
popl
inc
inc
adc
shr
into
jbe
mov
mov
push
fistl
clc
push
mov
cmp
push
xchg
dec
ret
xchg
int
mov
push
rcll
aas
sbb
add
jns
pushf
cmp
cmpsl
cmp
aaa
inc
jmp
ret
xchg
jnp
mov
mov
fcoms
mov
xor
faddl
cmpb
ljmpw
jle
in
ficompl
call
sbb
lcall
es
xorl
jp
pop
fldcw
ljmp
sub
mov
fnstenv
add
pop
pop
shll
mov
xchg
push
jae
repz
inc
notb
push
fistpl
mov
push
in
jecxz
and
cmc
mov
add
add
insb
mov
dec
sub
or
mov
xor
dec
pop
fcompl
jns
cmp
js
fcmovne
pop
sbbb
xchg
outsb
add
loopne
xor
xor
cltd
xchg
leave
outsb
pop
and
inc
xchg
xchg
arpl
jo
fldl
push
imul
mov
pusha
jno
cmp
adc
dec
into
push
mov
jo
pop
pop
sub
inc
jg
leave
xor
ret
fldl2t
or
add
cmp
movsl
inc
fldl
mov
pop
popa
ss
fsubr
es
popa
jbe
pop
add
lret
add
xchg
call
cmp
scas
jl
or
xchg
outsb
mov
lret
movsl
or
mov
and
adc
sub
pop
outsb
sahf
mov
xchg
rclb
rcrb
stos
arpl
mov
mov
sbb
notb
mov
jae
cltd
dec
ljmp
ljmp
sub
loopne
jne
jns
xchg
lods
fidivrl
int3
pop
inc
xchg
xlat
dec
sbbl
jo
shll
xor
jo
mov
das
std
push
call
lds
movsl
xchg
out
sbbl
movsb
inc
push
lcall
loop
je
jb
imul
jae
imul
mov
enter
mov
mov
mov
mov
stos
imul
adc
sahf
or
aad
fisttpll
aas
sbb
adc
stc
sbb
mov
and
and
inc
lret
mov
adc
adc
aam
in
mov
into
fsubrs
mov
xchg
adc
imul
ljmp
hlt
mov
push
push
cmc
repnz
sahf
sbb
rcl
imul
mov
or
mov
xorl
incb
mov
cld
sub
fldt
mov
inc
lret
lahf
out
pop
xorb
adc
leave
stos
repz
dec
sbb
aad
sbb
leave
mov
sbbb
bound
sbb
out
xchg
mov
aam
sbbl
inc
pop
pop
push
sub
jge,pt
call
aaa
push
adc
adc
xlat
in
fcmove
jnp
inc
xor
stc
push
pusha
dec
jns
sbb
or
jp
adc
push
xchg
mov
nop
sub
xor
andl
xor
out
xchg
cmp
dec
lahf
jo
lods
out
pop
pop
dec
imul
mov
stos
cmpsb
loopne
inc
enter
add
gs
cmp
jecxz
adc
cmpsl
pop
call
arpl
cmpsb
incl
shll
in
jg
cmp
repnz
pop
sub
lret
aaa
fwait
lahf
ja
inc
inc
push
mov
jbe
cld
sub
bound
aam
cli
push
mov
xchg
push
jmp
pop
mov
xchg
mov
sbb
push
int
dec
outsb
xchg
sti
lret
push
outsl
xchg
and
pop
push
scas
mov
xchg
jge
push
mov
xor
mov
lods
roll
jp
xchg
push
fidivrl
arpl
mov
inc
cmp
lods
cmpsb
das
xor
dec
xchg
cltd
jmp
jne
jge
pop
test
dec
in
lret
jecxz
pop
std
pop
mov
pop
mov
jae
push
cs
and
mov
div
fldt
jle
sarl
push
movsl
mov
sarl
push
xchg
jno
imul
add
add
cmpl
pop
xchg
dec
jecxz
ljmp
xor
mov
xchg
push
or
shl
ss
mov
push
jno
jnp
mov
test
cmp
sarb
pop
xchg
pop
popf
jbe
jp
testl
push
stos
or
pop
lahf
mov
fs
pop
inc
inc
shll
cmp
out
push
shll
cmc
dec
pop
imul
es
add
add
ja
jg,pn
and
addr16
cmp
and
or
adc
sahf
nop
addr16
fdivp
cmp
repz
sbb
loopne
pop
jle
cmp
push
dec
jg
les
test
pop
fstpl
push
sbb
sbb
popf
rclb
xor
push
xor
mov
inc
mov
scas
adc
or
lahf
or
mov
mov
out
rol
xchg
pop
xor
add
inc
lds
idivb
out
fs
mov
lahf
cwtl
pop
fnstenv
fcoml
pusha
mov
jmp
pop
mov
add
fwait
lock
mov
cli
pop
adc
mov
dec
xor
push
insb
das
rolb
pop
shl
mov
xor
jae
jmp
das
pop
push
cs
push
mov
push
pop
rclb
leave
daa
std
xchg
jecxz
rcr
ret
push
sbb
pop
push
lcall
gs
xchg
push
ficoms
push
mov
in
fsts
xchg
push
pop
push
push
out
jmp
in
and
nop
mov
jbe
sbb
cld
inc
or
stos
insb
jno
rcrb
movsb
adc
jle
lahf
sbb
cmp
fwait
insl
data16
push
mov
test
cld
test
xchg
insb
aam
cmc
mov
sbb
adc
add
nop
mov
cmpsl
cmp
add
lcall
faddl
pop
gs
dec
daa
repnz
in
stos
shl
insb
xor
push
dec
adc
ret
rclb
cmp
sub
pop
pop
and
cld
sub
push
sbb
mov
test
push
jae
and
jge
lret
xchg
test
pusha
out
js
fs
je
dec
cwtl
movnti
push
test
pushf
pop
add
jmp
mov
and
mov
mov
ficompl
xor
fisubrl
in
mov
or
loop
js
or
insl
test
pop
mov
xor
push
jge
scas
dec
je
mov
add
xchg
xchg
dec
add
xor
shrb
jbe
fucompp
xchg
mov
pop
inc
test
nop
mov
ret
mov
js
rol
movsl
push
pmuludq
pop
mov
jmp
mov
and
cli
push
inc
sub
cmpsb
push
imul
dec
imul
xor
and
orb
mov
dec
xchg
mov
popa
sbb
sub
xchg
aaa
add
adc
ljmp
mov
shll
gs
lea
push
out
inc
push
dec
add
scas
push
repnz
enter
xor
test
jbe
ss
jnp
jecxz
arpl
hlt
call
pop
fildll
sbb
and
lahf
cmp
xchg
enter
xor
or
cmovb
dec
cmp
je
jecxz
ljmp
std
aam
add
sub
pusha
dec
or
mov
jle
push
aaa
mov
mov
push
int
dec
xchg
xchg
xor
mov
jmp
adcl
pop
pusha
mov
fwait
or
std
xchg
mov
scas
lcall
push
stc
cmp
imul
push
jae
dec
mov
mov
mov
repz
cld
or
xor
xor
adc
mov
scas
ja
ret
dec
lret
and
lahf
sti
sub
fmuls
add
push
add
lret
sbb
nop
cwtl
movsb
sub
movsb
repz
mov
pop
sub
pop
pop
mov
or
rsqrtps
adc
inc
insl
in
icebp
mov
mov
call
inc
rolb
arpl
mov
jmp
push
or
xchg
mov
mov
icebp
jl
cmp
enter
push
data16
lcall
test
lret
jno
sbb
add
xor
popf
jmp
pop
adc
test
push
rol
pushf
rclb
sub
sbb
push
push
nop
jl
mov
into
fmuls
sub
pop
pop
add
in
in
jp
xor
add
push
xchg
xor
sbb
jo
test
dec
int
ja
inc
cmp
popa
cmp
dec
add
mov
lcall
jle,pn
inc
jns
mov
inc
jae
or
dec
iret
sarb
test
in
jmp
adc
in
sub
and
loope
aad
cwtl
insb
iret
iret
jne
lods
dec
pop
fxch
pop
movsb
dec
or
pusha
stos
lock
inc
pop
fsts
ljmp
scas
and
xor
js
gs
std
mov
jmp
lahf
sub
out
jne
lock
lahf
jne
add
adc
push
mov
addr16
addr16
test
jge
cwtl
in
push
lods
cmpsb
shrb
jno
popf
shr
inc
cmc
mull
fs
test
add
rolb
inc
inc
outsb
and
xlat
mov
mov
cld
test
gs
xchg
and
movsl
jo
testb
jnp
repz
addr16
mov
mov
dec
adc
ss
sbb
push
push
cmp
or
dec
fwait
push
jnp
add
fs
and
stc
jns
mov
loop
mov
pop
xchg
int
clc
mov
jbe
mov
lds
repz
dec
push
imul
fists
js
scas
adc
jl
hlt
xchg
add
jne
inc
xor
lods
jmp
inc
push
pushf
ret
dec
flds
in
and
lret
test
lret
into
shrl
jb
hlt
push
mov
mov
mov
popa
das
aam
sbbb
mov
dec
jl
gs
push
adc
mov
fsts
xor
fistps
sbb
dec
in
ds
es
xor
arpl
sbb
fisubrs
imull
xlat
cwtl
pop
jbe
lcall
inc
scas
dec
or
pop
stc
adc
or
push
mov
in
imul
ljmp
cs
push
sbbb
ljmp
xchg
test
mov
mov
add
adc
xlat
popf
xor
jmp
mov
mov
clc
jae
dec
cwtl
bound
xchg
test
scas
andl
inc
mov
movsl
lcall
fisubs
xchg
jnp
loopne
lods
and
inc
loope
add
aaa
sub
inc
roll
mov
arpl
xor
jmp
add
adcl
mov
push
xchg
mov
repz
lret
jno
cmpsl
mov
outsl
sbb
movsl
jecxz
jge
xlat
mov
outsb
xchg
add
jbe
into
mov
push
adc
xor
outsl
jecxz
adc
xchg
xor
and
or
imul
or
in
sahf
mov
fistps
xor
orb
jmp
inc
push
xor
enter
sbb
mov
outsb
negb
mov
mov
mov
xor
imul
insb
xchg
dec
clc
mov
xchg
sbb
xchg
adc
es
aad
in
ret
scas
or
lods
xchg
jo
lret
mov
orl
xchg
or
lcall
popf
inc
cmp
adcl
push
fsubl
sub
inc
or
dec
push
jae
bnd
jmp
and
int
mov
pop
push
das
leave
pop
outsb
and
sbb
inc
in
nop
mov
push
adc
mov
jno
popa
fcoms
cmp
ret
lret
pop
leave
jo
add
add
inc
inc
bound
cmc
and
or
daa
jo
sub
fstpl
adc
inc
lret
jle
mov
shlb
insb
test
pop
push
ficomps
popf
loopne
lea
in
add
push
repnz
push
addr16
mov
mov
shr
lea
mov
add
jecxz
mov
mov
mov
push
mov
mov
adcl
jp
imul
cmpb
rol
mov
pop
xor
xchg
ja
mov
mov
out
iret
pop
jge
adc
std
add
lcall
shlb
xor
pusha
jae
dec
cltd
bound
add
mov
jns
data16
je
inc
daa
xchg
xchg
leave
out
push
or
push
and
mov
cmpsl
cwtl
addr16
sbb
push
dec
mov
out
hlt
test
dec
inc
aaa
mov
jbe
adc
dec
sub
pop
daa
les
cmp
enter
xchg
arpl
adcl
push
pop
and
dec
pop
aaa
mov
sub
xor
call
nop
ret
mov
loopne
pusha
repnz
mov
dec
mov
jns
jecxz
adc
xchg
sbb
sub
mov
cmpsb
adcb
jo
pop
mov
enter
or
or
xchg
into
or
jo
cmp
test
psrlq
leave
sub
les
outsb
jns
push
aaa
mov
psubq
nop
pop
rcr
xchg
iret
sahf
add
loopne
jne
inc
and
test
xchg
nop
repz
mov
mov
add
or
sbb
sbb
pusha
sub
int3
jno
or
push
dec
mov
cmc
adc
adc
sbb
adc
push
popf
insb
adc
leave
mov
out
insl
push
shll
hlt
or
dec
imul
mov
dec
inc
scas
data16
sub
xchg
rclb
dec
fwait
mov
pop
mov
sub
ret
icebp
into
jge
xor
mov
call
outsb
decl
xor
cmp
jnp
daa
jo
jnp
aad
push
inc
mov
jb
pop
mov
inc
push
mov
or
lret
fisttps
push
jno
sub
xchg
sbb
jle
shl
loope
mov
cmp
pop
loopne
xchg
incl
lahf
fcmove
movsb
mov
lret
inc
push
inc
pop
pop
push
sub
xchg
push
push
and
test
jp
mov
aam
jns
mov
stos
stos
dec
xchg
call
call
mov
mov
or
mov
cmpsb
pop
push
js
in
inc
inc
insl
enter
cltd
inc
outsl
call
push
inc
movsb
mov
cmpsl
rcll
mov
rcll
enter
es
pop
cli
add
ror
mov
out
add
inc
jne
and
icebp
cli
push
popf
mov
fmul
std
dec
ja
bound
inc
xchg
inc
xlat
gs
into
loope
lea
sbb
pop
insb
pop
mov
dec
arpl
xchg
fldcw
inc
inc
mov
shll
cli
inc
dec
loopne
push
in
sub
jp
gs
mov
add
loope
xor
dec
jmp
xchg
je
or
push
pop
dec
mov
es
mov
fists
cli
movsb
cwtl
sub
shrb
add
or
mov
bound
test
mov
dec
xacquire
mov
xor
cmp
aad
fnstcw
insb
add
mov
lock
mov
lea
pop
test
nop
daa
sbb
adc
mov
jno
push
popa
cmp
stos
mov
insl
dec
jecxz
and
lcallw
xchg
or
shll
adc
push
inc
mov
stos
sub
push
push
mov
and
aas
sub
not
sub
fldt
inc
jbe
jnp
mov
data16
jbe
cld
jns
or
test
mov
scas
mov
push
dec
mov
test
lahf
push
ret
jp
inc
mov
and
pop
xchg
mov
jnp
sbb
mov
test
jns
fiadds
inc
cmp
inc
sti
daa
lret
dec
jge
rcrb
or
mov
pop
ja
adc
adc
sbb
aaa
mov
mov
xchg
pop
mov
xchg
sbb
sbb
popa
mov
loopne
stos
or
pop
adc
mov
inc
jne
test
adc
and
inc
and
mov
movsl
test
push
push
cwtl
fstpl
out
and
inc
inc
pop
mov
push
cmpsb
addr16
push
cmp
lea
ljmp
push
and
push
xor
test
stos
dec
negb
int3
aam
std
add
out
int3
xchg
rclb
xchg
push
pop
pop
jno
insl
imul
in
mov
lods
jo
and
int
orl
add
xchg
lret
jmp
in
outsb
fs
loope
cmpsb
push
imul
mov
insl
xor
lahf
inc
jmp
shlb
and
inc
xor
sbb
xchg
push
cmp
inc
adc
rcrb
or
scas
cmp
repnz
jge
insb
add
popa
subb
nop
pop
jmp
rorb
out
push
xchg
mov
lock
push
mul
fdiv
punpcklbw
scas
pop
insb
cmpsb
push
mov
sahf
lock
xchg
in
data16
imul
xor
and
imull
inc
loop
aad
add
or
mov
jecxz
lea
xchg
or
rolb
test
adc
push
mov
sahf
pop
cmp
mov
fstps
mov
inc
inc
xchg
ss
and
jne
idivl
xor
cli
out
sub
lds
outsb
sub
sub
aas
sbb
push
pop
pop
insb
lret
push
push
lea
xchg
xor
inc
add
pop
data16
mov
xchg
das
push
inc
xchg
inc
lret
xor
cmp
add
ret
jne
pop
cmp
and
cli
dec
or
sti
mov
aad
outsb
add
xor
lock
popf
mov
dec
xchg
scas
xor
or
adc
dec
and
add
mov
lret
mov
and
mov
fdiv
adcl
inc
aaa
jae
aam
outsl
jae
imul
dec
xor
mov
out
stos
lcall
idivb
jb
lret
push
rcll
iret
mov
pop
pop
sbb
xor
dec
dec
jle
pop
loopne
movsb
pop
mov
in
mov
and
aad
lods
mov
mov
lds
jmp
xor
es
outsl
cli
lret
out
add
jo
in
and
pop
ret
mov
idivl
mov
dec
lcall
mov
mov
or
adc
aaa
sub
sub
hlt
iret
out
push
clc
dec
stos
ds
pop
daa
in
push
daa
dec
pop
in
addr16
ret
cwtl
pop
rcrl
clc
mov
cmp
mov
sbb
cmp
shlb
pop
cltd
lea
mov
push
scas
adc
lds
xchg
mov
aad
orb
mov
scas
fidivrs
adc
add
ljmp
mov
xor
sub
dec
iret
in
cwtl
mov
xchg
in
xlat
adc
out
lods
stos
sub
cli
jb
rcl
cmpsb
jmp
cs
pushf
or
insb
xchg
jno
insl
ja
cld
add
inc
cmp
xor
mov
or
cmovbe
arpl
xchg
loope
mov
mov
jmp
cmp
cmp
int
cmpsb
loop
cs
add
dec
shrl
mov
into
adc
movd
imul
faddl
mov
out
jge
imulb
inc
jbe
xor
movsl
mov
shufps
pop
push
jl
and
outsl
xor
xor
sbb
stc
bound
inc
aaa
cmpsl
sbb
and
pop
adc
lea
fucomi
ret
cwtl
scas
div
faddl
add
cmpl
sbb
xchg
cmp
push
sub
es
xor
popa
push
loope
out
push
push
or
mov
fs
cmp
test
js
and
aas
stos
enter
jb
xchg
push
int
mov
xor
lret
cli
movsb
aas
sub
pop
push
in
push
sbbl
jno
inc
mov
lret
mov
pop
inc
repz
adc
xor
mov
pop
and
push
sbb
mov
sbb
xchg
pushf
clc
into
sub
or
mov
cltd
xor
test
pop
cmc
sub
popa
repz
fsubrl
ss
fs
xchg
cmp
mov
and
cld
mov
lods
inc
cli
subb
adc
sbbb
inc
in
dec
in
ja
mov
xor
outsb
icebp
insb
loop
sbb
sti
orb
addl
arpl
fistps
push
cmpl
dec
push
xchg
leave
jge
ss
test
lahf
or
add
mov
dec
addb
or
sar
or
imull
mov
lds
loope
push
fldcw
sub
repz
stos
clc
jg
mov
pop
sub
mov
ja
mov
mov
mov
push
fdivrl
cmp
icebp
lahf
mov
lds
jge
xor
scas
cmpsb
jmp
lods
inc
add
jge
or
dec
daa
in
inc
hlt
ss
out
xor
jns
test
repnz
ss
xchg
adc
imul
mov
jmp
es
sub
xor
jecxz
fidivs
sub
test
xchg
lret
sahf
mov
movsb
gs
mov
cld
mov
xor
nop
daa
out
scas
push
mov
scas
imul
adc
lds
ja
lock
ja
mov
pop
push
jno
lret
and
loope
push
cmpsl
les
or
iret
nop
mov
xchg
or
fs
sub
inc
dec
lahf
mov
shll
jl
push
or
sbbb
push
call
and
leave
rorl
dec
in
cmp
ret
add
push
dec
push
add
push
pop
push
pusha
ret
ja
add
insl
adcb
jno
adc
jmp
adc
add
or
lds
jb
pop
das
outsl
cmp
cmpsl
ljmp
sbb
and
mov
jmp
arpl
stos
loop
jmp
out
cmpsl
add
mov
into
add
out
adc
pop
js
jge
cli
mov
lcall
inc
loop
aam
xor
fisubrl
pusha
arpl
or
adc
rcr
mov
cmp
in
fwait
rcrb
rcl
repz
inc
and
push
movsb
popfw
push
in
xchg
cld
rol
stos
mov
lcall
lcall
sub
mov
and
mov
xchg
mov
in
cmpsl
mov
loopne
or
jne
scas
inc
bound
mov
stos
xchg
mov
sbbl
mov
test
popf
gs
mov
mov
jnp
popf
push
sub
mov
lock
je
inc
xchg
xlat
lret
xchg
sarb
leave
pop
arpl
ds
test
divl
ljmp
mov
notb
rorb
lret
cli
sub
xchg
rclb
gs
xchg
leave
inc
pop
xor
int3
push
lret
stos
mov
cmp
insl
test
mov
jb
cmp
sbb
xchg
les
pop
int
pusha
mov
mov
icebp
pop
mov
jg
aaa
cmp
jp
pusha
int
popa
mov
mov
hlt
inc
shlb
sar
dec
mov
push
in
ret
mov
mov
dec
cmp
clc
dec
push
test
rorb
pop
in
int3
cmp
aaa
cmpsb
dec
jp
inc
mov
das
lock
into
xor
loope
xor
push
and
sbb
mov
mov
xor
adc
push
xchg
lock
ds
bswap
movnti
xchg
sti
testl
push
jo
xchg
test
inc
fucom
xor
pusha
call
and
lods
sbb
inc
andb
sbb
push
daa
data16
lods
psubsb
adc
scas
mov
rorl
in
push
jp
clc
lods
rcll
int
scas
xchg
xchg
shll
mov
mov
sub
mov
out
cmc
scas
out
mov
xchg
and
mov
mov
xor
jmp
mov
mov
ja,pn
push
jne
mov
jge
aas
xor
movsb
pusha
stos
mov
sarb
arpl
mov
xchg
cmp
shrl
jl
cmp
mov
outsb
cmpsb
pop
mov
scas
cmp
mov
call
gs
stos
dec
pop
xlat
decb
mov
push
and
gs
sub
mov
or
jo
iret
mov
sarl
cli
xor
es
xchg
pop
xor
mov
sbb
mov
mov
dec
dec
icebp
cmp
add
xchg
mov
in
and
push
pop
call
xchg
mov
es
stos
inc
mov
aad
or
rcll
mov
popf
ja
into
xor
mulb
fxch
fcomi
rol
imul
xor
lods
sbbl
shl
fistpl
inc
sub
dec
rclb
aas
pop
and
mov
dec
push
ret
mov
mov
dec
aad
and
rorl
out
lahf
adc
dec
mov
clc
cmpsb
jne
push
adc
gs
cmp
fbld
jge
mov
cmpsl
stc
adc
mov
or
xchg
xchg
or
call
jp
ja
cmpsl
rolb
adc
cmc
ret
push
mov
cmc
pop
mov
pop
push
lock
leave
leave
xor
lods
int3
push
daa
jae
push
cmpsb
dec
nop
mov
pop
out
add
daa
hlt
loopne
sbb
adc
aam
sbb
mov
mov
cwtl
stc
in
mov
pop
out
movsl
mov
push
in
fld
ds
mov
dec
icebp
mov
pop
aaa
jne
test
cmp
xchg
clc
inc
pop
cmp
mov
cli
add
leave
dec
ffree
mov
loope
adc
rclb
push
push
sub
aas
lahf
xchg
mov
adc
gs
lods
add
sub
fidivl
mov
add
sbbl
stc
and
loopne
jle
fwait
jg
xchg
icebp
sbb
xlat
les
xor
mov
test
shll
sahf
xor
inc
mov
shl
and
push
mov
fildl
and
pop
sti
leave
les
adc
repnz
ret
insl
sbb
sub
dec
pop
xor
push
jg
add
mov
lods
loopne
out
stc
enter
insl
out
aad
jne
cmc
sub
ljmp
in
mov
add
inc
mov
leave
and
out
and
cmp
pushf
push
or
daa
jae
daa
add
int
xchg
std
leave
fsubrs
imul
mov
or
dec
fisubrl
aad
adc
fcmovnu
add
nop
or
dec
sub
pop
stc
test
sub
xchg
xorl
pop
jae
jl
movsb
sub
mov
and
repnz
mov
mov
inc
add
inc
lock
popa
fmul
inc
jno
sbb
cwtl
dec
mov
pop
out
repnz
add
or
popa
mov
mov
arpl
rcrl
fbstp
out
shrl
push
push
in
cmc
xchg
pop
add
imul
push
pop
int3
add
les
iret
cmpsb
ljmp
push
inc
mov
mov
inc
xchg
adc
and
cltd
xor
push
scas
scas
xor
sub
lcall
mov
jns
jecxz
rol
ds
and
inc
arpl
fdivrl
jp
jg
test
test
movsb
mov
sub
fwait
test
push
lods
mov
divb
les
aad
xor
fistpll
dec
lods
andb
inc
iret
nop
pop
inc
scas
leave
je
sub
shrb
jnp
imul
leave
sub
xchg
ss
dec
outsl
add
int
in
xchg
les
repz
pushf
xchg
nop
mov
or
push
loope
cmc
jg
xchg
cmpb
es
mov
mov
add
jmp
pop
xor
addl
mov
adc
mov
mov
iret
mov
pop
incl
jnp
or
cmp
mov
push
jp
je
xchg
test
pushf
jne
mov
xchg
mov
cltd
lods
imul
data16
fisttpll
xchg
test
mov
xchg
cmp
xchg
jb
shr
inc
dec
sbb
xor
jo
sbb
or
inc
cmpsl
fwait
inc
mov
xchg
lret
push
xor
jnp
sub
and
or
pop
mov
ret
push
stos
imul
jmp
push
jo
cmpsl
inc
mov
addr16
mov
std
in
xchg
push
xor
stos
inc
jae
cmc
add
push
out
mov
lods
lds
test
and
xchg
cmp
mov
add
sub
jo
sbb
rol
jo
and
mov
test
dec
lret
lcall
pop
or
push
lods
lea
das
sbb
clc
xor
ljmp
mov
mov
xor
sub
jg
add
and
jo
mov
aaa
movsb
stc
inc
iret
addr16
push
push
xchg
mov
mov
lret
imul
negl
jp
pop
subl
mov
adc
jnp
aad
lret
scas
je
fsubr
xchg
jl
in
and
in
mov
cmp
xchg
push
add
sbb
sub
ret
push
subl
out
out
rclb
test
add
or
push
xor
push
or
jns
push
inc
aad
fcmovnb
or
dec
movsl
pop
inc
aas
cmp
inc
adc
adc
dec
mov
stc
mov
imul
cmpsb
stc
push
xchg
or
daa
je
push
add
bound
hlt
shll
lea
scas
adcl
das
lret
adc
push
gs
sbb
test
clc
inc
cmp
mov
in
xor
cmpsl
das
ljmp
mov
loopne
cmp
out
jb
sti
dec
hlt
dec
aaa
cmp
mov
icebp
sbb
out
xor
aam
sarb
repz
lods
cmp
dec
mov
inc
andl
decl
fadd
sbb
ret
ret
pop
ljmp
jl
adc
adc
or
xor
adc
mov
and
mov
lea
aam
sub
test
scas
ss
and
jno
or
ja
xchg
mov
hlt
push
push
or
iret
in
mov
loope
xchg
xor
push
adc
pandn
in
popf
add
xor
fldt
pusha
cli
fdivl
or
push
adc
push
add
mov
cs
stos
int3
mov
xor
sbb
out
or
arpl
add
adc
mov
cmp
adc
icebp
mov
mov
or
push
and
and
js
mov
inc
inc
mov
je
push
in
push
mov
movl
push
test
rorb
mov
push
fmull
xchg
icebp
mov
dec
adc
mov
jle
or
adc
dec
les
inc
add
add
nop
push
inc
pop
mov
push
outsb
jl
mov
cmp
inc
add
jg
inc
mov
movsl
push
mov
and
mov
sbb
lods
mov
push
pop
stc
jg
shrl
mov
jns
xorb
jl
push
call
pop
add
mov
loopne
jns
inc
cmp
stos
xlat
xchg
ljmp
lea
xchg
popa
inc
mov
out
xor
xchg
repz
insb
or
rcll
push
addr16
xlat
jnp
movsb
push
lcall
aam
fucomp
lahf
inc
fwait
lods
push
xchg
shrl
xor
in
inc
dec
push
mov
subl
ss
ds
data16
jmp
adc
test
push
inc
adc
movl
dec
outsl
out
andl
shll
push
data16
jno
lods
dec
ljmp
js
movsl
sub
test
out
jge
out
in
pop
xchg
lds
aaa
sbbl
xchg
dec
les
movsl
adc
insl
mov
cmpsl
leave
rolb
add
xor
movsl
dec
xor
and
pop
dec
adc
andl
mov
jae
int
adcb
inc
xchg
mov
insb
addb
out
pop
in
arpl
fwait
or
mov
push
push
sub
std
cmpsl
fs
insl
cmp
gs
fadd
sbb
gs
inc
and
rcrl
cmp
jnp
scas
pop
lods
fldenv
adc
mov
push
ret
sbb
adc
mov
in
in
push
xchg
out
push
in
scas
inc
dec
rorb
and
sub
repnz
jmp
push
mov
jno
mov
and
inc
cmpsl
push
mov
shll
ljmp
dec
and
bound
dec
mov
call
fcompl
ss
xchg
xchg
inc
dec
lods
add
adc
enter
adc
aaa
push
mov
or
push
test
scas
sbb
aam
int
add
or
xchg
pop
repnz
dec
adc
jmp
repz
or
outsl
cmp
add
adc
pop
lahf
mov
and
or
ret
loop
and
inc
sub
cmp
push
repnz
dec
cmpsl
fadds
adc
dec
inc
mov
movsb
in
repz
pop
js
jge
add
lahf
mov
mov
out
mov
lods
push
mov
lods
dec
int
push
mov
cmp
fnstcw
int3
gs
mov
or
adc
pop
jge
mov
cmp
lock
xchg
std
adc
je
push
inc
cmp
dec
xchg
jne
jg
pop
adc
std
or
xchg
popf
cltd
lods
or
xlat
mov
xchg
in
jb
movsb
xchg
in
mov
or
test
push
xchg
shrl
scas
and
addr16
out
adc
lcall
addr16
ljmp
lock
arpl
loop
pop
scas
test
sub
ret
icebp
push
nop
inc
xchg
or
gs
ret
andl
nopl
adc
cmp
scas
and
sub
loop
dec
lret
loope
out
or
jmp
add
fisttpll
ficoms
mov
repz
ja
mov
mov
lcall
jg
pop
and
cmpsl
push
js
dec
xor
xchg
cmpsb
in
jno
jne
inc
add
lret
sahf
mov
dec
in
cmc
jp
popa
enter
out
les
sub
daa
push
jns
push
icebp
pop
cmp
sbb
ficoms
xchg
insb
imul
leave
xor
xlat
push
aad
in
fisttpl
popa
test
xchg
rcr
int
or
dec
cmc
cmp
in
aam
addb
mov
shll
jl
leave
rorl
lcall
outsb
movsl
and
cmp
hlt
jnp
movsb
pusha
int3
in
mov
rcrb
in
mov
fwait
xchg
test
add
lea
inc
in
mov
test
cmp
and
pop
mov
adc
mov
rcl
out
adc
js
mov
out
mov
pop
mov
mov
adc
stos
push
mov
sbb
roll
cmpl
adc
sub
idivb
push
and
xor
add
fisttpl
insb
insl
push
push
nop
adc
fstpt
cwtl
movsb
in
jle
xlat
adcl
data16
ficompl
dec
das
inc
data16
pop
add
pop
and
xor
leave
dec
pop
xor
and
xchg
fwait
cmpsl
insb
in
and
das
inc
aas
out
mov
test
sti
into
push
popf
dec
xor
push
sub
xchg
dec
pop
or
push
out
add
sbb
xor
or
push
mov
mov
dec
cld
into
div
xor
clc
pop
cmp
mov
sarl
push
sub
imul
cmpb
hlt
les
pop
jg
pop
scas
dec
add
cmp
push
outsb
mov
dec
loope
push
sbb
testl
sbb
ss
orl
dec
rclb
outsb
adc
lret
ficomps
and
pushf
cmp
xor
dec
push
les
lods
adc
add
mov
cmpsl
inc
jns
mov
cmc
jbe
je
hlt
aas
xor
sbb
xor
sti
nop
jo
inc
lahf
xchg
cmp
pop
add
pop
into
pusha
fwait
pop
enter
cltd
xor
ret
ljmp
cmp
and
xchg
and
push
out
sub
dec
and
js
sub
jmp
jns
repz
add
movsb
mov
insb
push
sahf
lret
xchg
dec
mov
iret
icebp
and
xchg
add
and
gs
cwtl
push
adc
mov
jns
xchg
je
lods
ret
or
lret
mov
or
sti
cmp
and
lods
push
mov
lahf
lea
xchg
pop
lret
test
mov
adc
mov
aaa
sub
mov
sarb
and
mov
les
sbb
sbb
pop
and
pop
fcomp
and
leave
xchg
ds
inc
arpl
cmpsl
scas
pop
outsl
lea
cmpsb
lcall
js
jge
pop
add
stos
jmp
sub
out
fistpl
mov
jnp
lock
imul
sti
push
int3
mov
push
push
adc
mov
and
cmpsl
inc
sahf
scas
and
push
loop
iret
adc
mov
mov
outsb
push
inc
cmp
mov
cmp
das
xor
cmpsb
inc
das
push
xlat
mov
mov
dec
jl
mov
aaa
dec
or
fsubl
inc
mov
out
std
push
xor
inc
movsb
pop
mov
cwtl
filds
xor
sbb
lahf
mov
xchg
xchg
icebp
scas
movsb
in
pop
sti
push
push
dec
cltd
mov
outsl
dec
dec
push
dec
mov
pop
lret
imul
mov
push
mov
aas
pop
int3
push
mov
xor
cltd
lods
jg
lahf
and
notb
xchg
cmp
mov
mov
mov
xchg
repz
lock
jo
xchg
jle
lcall
sub
ficompl
jno
sub
adc
push
jb
xchg
jmp
jge
cmp
movsb
mov
jae
xchg
fisubs
push
xor
pop
mov
pusha
push
mov
outsb
loopne
adc
rol
cld
js
pushf
aaa
sub
fisttps
and
iret
sub
data16
sub
out
adc
mov
sub
aaa
mov
cmp
movsl
lret
sub
fs
pop
sub
pushf
lahf
stc
cmpsb
pop
mov
outsb
dec
sub
call
push
xor
add
outsb
cmp
jge
jno
or
mov
movsl
mov
sbb
push
in
sbb
test
ljmp
fldl
sahf
add
insb
xchg
lds
xor
addr16
jbe
dec
xchg
test
adc
dec
mov
jl
pmaxsw
insb
ficoml
fs
and
mov
fdivl
cli
pop
sbb
xchg
inc
or
or
xor
xchg
movsb
and
out
cmpsl
in
cmp
popf
pusha
xchg
subb
les
add
or
sub
fisttps
test
mov
push
dec
lret
adc
push
mov
xchg
testl
push
xchg
hlt
dec
out
movsl
in
gs
loop
loopne
pop
jecxz
imul
pop
mov
inc
daa
jae
jo
into
mov
out
push
aad
mov
je
adc
mov
pop
mov
sbb
push
jbe
xor
mov
testb
outsl
pmulhw
loope
push
or
jae
out
gs
popl
push
or
cmpsb
repnz
leave
sbb
mov
sub
xchg
fincstp
stc
xchg
out
fdivl
push
dec
sub
fwait
push
sbb
iret
ficoms
sub
adc
jae
inc
lcall
test
xor
inc
fs
sarb
push
xor
mov
mov
or
imul
cld
pop
sbb
inc
cltd
stos
jbe
push
das
sarl
cltd
sub
bound
fcom
xor
push
lods
push
filds
mov
mov
jo
rcll
shl
cmpsl
js
adc
xchg
dec
xchg
dec
scas
dec
addb
loopne
push
je
std
fidivl
orb
mov
repnz
cmp
cwtl
xchg
sub
hlt
sbb
jl
jb,pt
mov
sub
mov
lock
adc
hlt
jne
mov
lret
aam
out
mov
test
sub
pop
cmp
out
popf
mov
ficomps
cmp
mov
jge
aad
ss
addl
fsubs
cmp
mov
cmc
or
dec
mov
and
jmp
mov
fadd
dec
bound
xchg
loop
mov
in
ret
rcrl
dec
data16
and
push
roll
sbb
mov
incb
fsubs
lret
mov
xchg
mov
rcrb
test
xchg
popf
insl
in
add
push
pop
loopne
cmpb
or
loopne
inc
mov
push
stos
out
js
mov
aad
and
cli
add
sbb
push
push
outsl
loopne
sti
adc
jnp
pushf
pop
push
ja
out
mov
and
iret
sub
adc
push
btc
stos
sbb
and
cwtl
add
test
stc
mov
mov
cmp
xchg
das
mov
lret
pop
mov
adc
jecxz
add
addl
insb
mov
in
out
jne
ljmp
adc
pop
stos
mov
pop
ja
jl
data16
add
pusha
dec
dec
jae
mov
pushf
cltd
mov
sarl
mov
stc
dec
mov
jge
xor
fisttpll
sub
aaa
ja
sub
dec
push
test
mov
push
push
cmpsl
mov
sti
lret
mov
dec
and
dec
stos
insb
jl
cmp
mov
push
loopne
decb
fistps
daa
pop
sub
int3
sbb
add
out
push
jns
mov
nop
inc
outsl
cmp
lock
dec
mov
cmc
rol
loop
xor
fucomi
fsts
call
fstpl
nop
push
pop
int
faddp
mov
jb
shrb
lods
sahf
dec
dec
inc
push
lods
aas
jg
jmp
sarb
pop
lcall
dec
add
mov
repnz
xchg
ffree
es
lcall
cmpsl
or
ud2
push
imul
push
jno
or
gs
push
jecxz
jae
fisttpll
xor
jbe
out
push
mov
iret
jbe
lret
dec
scas
dec
inc
mov
jmp
stos
adc
mov
mov
push
loope
jmp
sub
dec
mov
mov
jne
dec
add
jb
jp
call
stos
xchg
add
test
dec
jge
je
pop
and
cmpsl
mov
dec
in
dec
nop
andb
xor
sbb
or
aas
daa
dec
pop
in
and
fisttpll
and
jge
call
cmc
cs
push
push
sub
insb
and
mov
sbb
jno
lahf
pop
repnz
sub
les
es
add
pop
fs
dec
in
pushf
negb
iret
icebp
xchg
add
xorl
std
mov
or
roll
mov
lahf
aaa
cld
neg
loopne
jp
incb
mov
dec
pop
sarl
xlat
mov
decl
cwtl
xor
inc
cmp
mov
mov
sub
mov
mov
iret
cmpsl
sbb
xlat
add
popa
outsb
out
iret
in
mov
movb
stc
addr16
add
add
dec
out
stos
push
popf
pushl
and
mov
dec
push
les
out
loope
xor
mov
xchg
fisttps
inc
fwait
and
stos
inc
inc
mov
fimull
into
lds
adc
jbe
mov
adc
dec
test
sti
mov
adc
jno
cwtl
xlat
xor
push
clc
fidivrl
mov
cmp
cmpsb
movsb
cmp
jge
inc
ljmp
jo
imul
pop
mov
jl
xchg
sbb
jecxz
xor
adc
sub
imul
adc
push
mov
or
push
adc
mov
adc
lahf
cs
xchg
bound
mov
jnp
rolb
adc
mov
ret
dec
cmpsl
hlt
sub
mov
mov
stos
xchg
data16
xor
push
xchg
push
push
faddp
rorl
popaw
sub
mov
jo
arpl
cmp
add
sbb
insl
xchg
sbb
shlb
pop
aaa
cmp
fsts
out
xchg
xchg
cmpsl
cmp
dec
jle
imul
sub
push
lret
mov
les
jge
pop
jge
lock
mov
jg
xor
test
add
lds
jle
mov
jae
add
roll
sbb
xchg
or
push
or
popa
dec
mov
pop
cmp
mov
jae
out
lea
aad
add
shlb
pop
add
cs
jae
bound
cmp
pop
das
push
mov
faddl
andb
dec
sbb
mov
shlb
sub
sub
push
inc
and
aam
jb
pushf
mov
fwait
and
pop
xchg
fwait
addl
gs
add
sti
mov
std
adc
mov
xor
push
xor
mov
push
pop
add
pushf
cwtl
mov
xchg
xor
ds
inc
sbb
xor
push
cmovo
jl
inc
push
idivl
repnz
int3
pop
adcb
jle
and
lock
enter
lcall
jne
dec
outsb
rclb
stos
sbb
pop
inc
sub
and
mov
ffreep
sub
mov
daa
outsb
out
pop
pop
pop
cltd
nop
mov
pop
orb
je
test
lret
push
sbb
imull
in
adc
insb
call
into
sub
loopnew
mov
or
xor
push
mov
sbb
push
stos
pop
jmp
pop
cmc
add
outsb
fnsave
ja
sar
mov
pop
addr16
jb
fisttps
and
inc
adc
xor
es
mov
sti
dec
xchg
jmp
mov
push
int
or
inc
dec
sub
mov
leave
pop
testb
dec
push
mov
nop
mov
icebp
jno
jp
in
aas
stos
push
jl
cld
out
xchg
loope
cwtl
and
mov
cmpsl
mov
adc
test
ret
test
pop
fsts
repz
rclb
xor
and
cmp
pop
enter
cli
imul
or
xchg
jge
adc
xor
xorl
lea
sarl
add
icebp
jmp
aam
icebp
ljmp
fcomps
xor
in
in
jo
pop
lcall
xchg
pop
lock
and
cmpsb
hlt
push
push
sbb
cs
fsubr
nop
and
jne
jne
outsl
ret
lea
scas
push
dec
rclb
mov
cmp
mov
fidivrs
std
aaa
les
cmp
mov
adc
xchg
mov
bound
aas
xchg
flds
popf
or
jecxz
ret
dec
inc
sub
stos
adc
aaa
add
inc
adc
add
in
mov
fstpl
jecxz
fs
popf
mov
adc
cmp
je
loop
pop
pop
cmp
jb
fcomps
xchg
sar
xor
sti
push
inc
push
push
es
adc
jne
lock
fwait
mov
movsb
addr16
sbb
jae
push
push
shrl
push
and
fwait
data16
rolb
mov
inc
cld
or
jmp
decl
add
test
add
sbb
or
cmp
loop
adc
add
jg
mov
xchg
sub
inc
cltd
dec
mov
jmp
mov
push
cltd
sahf
xor
cmpsb
ds
sub
imul
pushf
arpl
test
adc
mov
and
mov
out
add
fildll
inc
mov
inc
dec
mov
mov
pop
mov
std
pop
ds
dec
imul
cmpsb
das
lods
mov
movsl
repnz
aam
inc
mov
add
push
ret
mov
xchg
lahf
xor
subl
loopne
in
mov
aad
push
xchg
mov
shl
arpl
sub
test
mov
ret
inc
sbb
fistpl
imul
adc
lea
dec
test
insb
ds
pop
aas
jne
gs
xor
and
pop
push
mov
ficoms
mov
cs
es
jecxz
mov
push
sub
fs
pop
xor
scas
mov
cmp
scas
push
xchg
dec
mov
cmpsb
xchg
icebp
bound
fs
jo
mov
insl
dec
adc
and
clc
repz
push
and
jmp
mov
int3
movsb
or
sub
mov
cmc
shlb
inc
add
shl
addb
addr16
pop
jl
jp
mov
addr16
loope
lret
addl
std
pop
repnz
fcmovb
loop
or
adc
lock
out
jae
fcomip
push
sbb
or
insl
fidivs
insb
inc
add
test
out
bound
mov
test
mov
loop
adc
jae
insl
dec
jle
mov
push
inc
mov
sbb
int
movsb
xor
fidivs
or
shlb
cwtl
into
in
lret
xor
lock
xor
lock
popa
xchg
addl
fisttpll
mov
dec
add
or
fs
movsl
int3
jno
popa
cmp
rcl
cmp
sbb
flds
call
mov
adc
insb
mov
xchg
jmp
push
out
fisttps
fs
jns
in
shlb
rcrl
mov
lcall
mov
addr16
xchg
shll
xchg
mov
adc
sti
dec
lret
mov
or
pop
add
outsb
enter
cmpsl
mov
add
pop
mov
mov
mov
fistpll
jg
and
pop
mov
mov
popa
jg
popa
shll
mov
sbb
and
jmp
or
xchg
xchg
int
or
cmp
cmp
lock
adc
and
pop
xor
leave
mov
scas
xchg
mov
iret
pop
dec
and
jbe,pt
outsl
scas
pop
int
repnz
sahf
aas
in
xor
and
cmp
subb
sahf
or
test
dec
xor
mov
fcoml
imul
cmp
cwtl
pop
xchg
push
push
jo
data16
pop
dec
mov
fs
and
mov
xor
aas
xchg
mov
lds
inc
xor
das
pop
mov
sbb
andb
cmp
lret
iret
mov
in
in
leave
push
test
ficomps
pop
aam
sbbb
xor
outsl
cmp
push
pop
inc
dec
jns
ret
mov
es
pop
push
mov
int3
mov
jne
rorb
mov
mov
movsl
push
xor
in
ljmp
into
sbb
pop
fcmovnb
or
and
psadbw
mov
sub
lcall
and
jmp
push
pop
push
add
mov
mov
and
mov
js
sub
cltd
stos
jle
lcall
cmp
fld
mov
scas
pushf
mov
sub
adc
fmull
dec
mov
add
mov
push
mov
ret
mov
xchg
add
jns
js
jp
in
pop
cmc
insl
cmp
jns
and
sub
cmp
out
fs
cmp
loop
imulb
xchg
rcrl
jp
jl
or
mov
jne
mov
mov
mov
or
mov
and
or
mov
rolb
inc
repnz
test
push
icebp
xchg
iret
sti
inc
add
sbb
icebp
xor
cmpsb
and
xchg
adc
push
lahf
add
jns
mov
or
insb
mov
aad
dec
or
pop
shrb
adc
xor
fcomps
lcall
sbb
mov
adc
les
dec
lcall
fdiv
mov
imulb
inc
js
sbb
inc
test
into
dec
sub
add
mov
jnp
xchg
push
fisttpl
repz
push
lock
or
das
xchg
ds
test
es
sub
or
nop
stc
icebp
cmp
mov
out
ja
sbb
or
es
shlb
jae
movsl
xor
mov
dec
lcall
aam
mov
test
aaa
aaa
push
pop
lret
mov
rolb
add
dec
mov
inc
arpl
sbb
std
cwtl
addr16
xor
cmp
lods
cmc
dec
scas
pop
sarb
test
inc
lret
or
sbb
mov
push
pop
js
dec
push
or
pop
iret
cmc
scas
and
dec
out
hlt
mov
add
stos
inc
ret
xor
ret
es
icebp
nop
lock
xchg
mov
jns
lret
dec
sahf
inc
vrsqrtps
dec
mov
into
jae
mov
xchg
inc
nop
push
in
lock
xor
xor
lock
mov
dec
out
dec
into
test
sti
xchg
or
insb
and
xchg
ret
mov
sub
sub
std
mov
movsb
arpl
xor
adc
fldcw
rorl
popa
inc
stos
xchg
insl
mov
inc
pop
out
jns
adc
mov
and
pop
push
out
sbb
rcrl
inc
or
pop
xchg
push
xchg
loopne
out
cmc
push
addr16
rorl
pop
repz
fadds
out
xlat
nop
push
push
xchg
mov
cvttps2pi
arpl
mov
dec
mov
xor
xchg
sbb
jle
inc
pop
inc
sbb
sti
xlat
pusha
sub
and
inc
rcrl
sahf
or
add
in
add
xor
int
mov
fs
xchg
sbb
movsb
mov
mov
rcl
ficoms
xchg
add
cmovp
pop
xchg
loop
test
inc
sbb
rcrl
mov
mov
sbb
pop
into
push
test
xchg
in
mov
div
or
aaa
mov
dec
add
jp
push
je
loopne
jns
jmp
stc
cltd
add
ficompl
cmpsl
mov
mov
push
sbb
sbb
ja
test
xchg
or
std
cwtl
lea
jns
jmp
bound
imul
push
je
lea
ds
push
cld
out
jge
repnz
jae
lcall
icebp
push
jbe
int
stc
cmpsb
jp
insl
xchg
mov
adc
inc
cmc
iret
xchg
jns
negb
dec
shll
dec
xor
or
fadds
in
stos
pop
cmp
rcrl
es
push
cmp
mov
js
adc
add
jno
xor
dec
icebp
jbe
pop
inc
sbb
and
rclb
mov
arpl
les
repz
adc
or
hlt
mov
adc
sbb
cmc
cmp
mov
rcr
fwait
shll
cmp
gs
pop
inc
and
mov
into
xchg
xlat
xlat
subps
push
sbb
icebp
addl
lret
arpl
or
add
xchg
mov
mov
out
out
adc
jns
lea
and
or
sbb
jge
push
cmp
pop
repnz
cmp
stc
js
fadd
adc
rcr
and
clc
lret
adc
clc
sti
test
loop
lcall
mov
jp
cmp
out
adcl
ja
insb
xchg
es
imul
and
aas
aaa
mov
sahf
test
es
lds
cwtl
or
int
sub
jne
cmp
popf
push
mov
sbb
pop
jo
in
and
cmp
inc
pop
mov
icebp
scas
mov
loop
fidivl
jae
addr16
mov
inc
xchg
sbb
loope
xor
jae
mov
mov
cmp
xor
test
fildl
cld
in
call
or
dec
and
adc
addr16
inc
mov
xor
repnz
cmp
shll
jg
pop
imul
add
sub
and
inc
mov
call
pop
push
enter
jo
mov
add
and
rclb
shlb
xor
push
insl
roll
pop
jg
lcall
dec
insl
mov
popa
mov
inc
into
aaa
int3
clc
pop
push
out
sub
push
ret
sbb
adc
or
pop
test
pushf
xor
fidivrs
ret
inc
jmp
dec
mov
sbb
mov
movsb
jp
rolb
dec
ret
out
rorl
not
jns
mov
jnp
cwtl
push
les
and
jl
pop
xchg
rcpps
test
adc
loop
inc
shrl
xchg
mov
inc
xor
in
std
add
mov
ds
lahf
insl
inc
mov
cmp
jo
je
jg
ss
xchg
xchg
loop
in
mov
in
push
in
lret
inc
lods
popf
int
leave
xchg
cli
shrl
sbb
xor
dec
push
imul
sub
xchg
mov
cmp
sub
mov
push
xor
iret
add
sub
cli
sub
mov
xchg
les
jl
imul
into
les
daa
push
xor
jl
out
or
rcl
stos
pop
jo
sub
fstpl
cltd
inc
or
testl
inc
pop
into
adc
add
gs
into
xchg
jg
data16
jae
mov
jne
shlb
inc
int
mov
inc
mov
aas
ja
movsb
xchg
or
mov
inc
add
lcall
xchg
xorl
jnp
mov
add
push
and
mov
iret
push
or
add
gs
js
orb
movsb
icebp
mov
inc
bound
push
or
test
js
aas
mov
ja
sti
cmp
push
xchg
test
clc
cs
cmp
sub
stos
out
stos
call
shrw
xchg
dec
data16
xchg
call
mov
pushf
repnz
imul
add
and
and
xchg
lret
and
inc
sub
popf
int
aaa
mov
out
leave
cmp
xchg
out
aad
shl
fs
xchg
xchg
popa
jmp
arpl
test
push
popf
lret
mov
pop
cltd
call
or
stc
adc
pushf
sub
inc
and
dec
and
movntq
ljmp
jo
hlt
mov
mov
mov
sbb
adc
push
and
out
or
js
sbbl
add
xor
adc
imul
in
aaa
insl
cltd
divb
sahf
gs
adc
mov
mov
std
out
jb
or
jbe
adc
leave
and
dec
into
adc
das
loope
dec
dec
aaa
add
es
cmp
adc
scas
outsb
sbb
lcall
pushf
pushl
mov
xchg
and
dec
dec
loop
repz
xor
cmp
inc
loop
push
inc
mov
sbb
js
or
sub
bound
dec
fcoml
sbbl
mov
sarl
dec
mov
xchg
stos
mov
out
movsl
sti
xchg
mov
bnd
repz
add
test
leave
les
mov
scas
cmpsb
pop
add
loope
lret
xchg
les
pop
xchg
jp
aam
sbb
mov
push
icebp
in
loopne
out
jnp
dec
pop
imul
mov
es
cmpsb
adc
sub
fisubrs
jmp
out
ds
xor
mov
push
push
sbb
jae
adc
scas
aad
dec
xor
lcallw
inc
and
or
sbb
xchg
mov
mov
or
sub
fimull
sbb
inc
adc
out
data16
lds
pop
fsubl
fwait
imul
xor
pop
fisubs
push
jo
call
testl
push
jbe
out
bound
mov
decl
push
cmp
inc
push
and
rcr
test
fcompl
scas
mov
insb
mov
ret
popa
out
push
cmp
add
jae
cmc
xor
add
outsb
fisubl
sarb
and
push
lds
mov
insb
ficoms
mov
adc
pop
xor
je
or
aas
xor
mov
ss
inc
xchg
inc
ljmp
sbb
jbe
cmp
outsb
dec
ljmp
lock
mov
aaa
lcall
rorl
and
pushf
popf
nop
rcr
dec
fwait
push
jp
push
adc
xchg
cmp
adc
jp
ja
mov
stos
rclb
fisubl
mov
sub
mov
enter
fcomps
aas
dec
xor
in
ja
bound
inc
lcall
inc
loopne
pop
pop
dec
cmpsl
mov
das
sub
sarl
push
inc
xchg
push
lods
pop
outsb
das
adc
in
std
push
dec
xchg
pop
shr
sub
xor
mov
mov
aam
in
sahf
lret
lret
xchg
dec
ud1
push
maskmovq
negl
pop
xor
adc
push
mov
divb
pop
nop
fs
mov
lret
or
aaa
push
dec
pusha
inc
push
and
jnp
inc
push
mov
ljmp
dec
cmp
repnz
test
dec
jl
ljmp
jp
jg
test
es
dec
neg
jg
das
sbb
call
fisubrl
jp
jecxz
fistpll
dec
shr
fisttpll
xchg
stc
push
shll
jbe
insl
or
add
nop
and
lret
sbb
cmc
adc
pop
cwtl
sub
pop
incl
cmpsl
stos
lret
jg
mov
adc
mov
icebp
add
test
xchg
xor
xchg
xchg
push
push
test
or
rclb
sbb
adc
mov
adcb
cld
shl
aam
mov
sbb
and
mov
outsl
mov
xchg
aam
rcrl
pusha
test
or
lahf
cmpsb
sbb
addr16
addl
pop
aam
mov
pop
and
add
hlt
hlt
sub
xor
out
push
lahf
imul
and
outsl
rcrl
adc
popa
call
ja
popa
fcmovnbe
jmp
xchg
xlat
scas
ret
lods
jg
cmp
add
push
sbb
cmp
movl
pop
adc
test
xchg
jns
jmp
push
stos
ss
add
mov
mov
mov
ficompl
je
and
subb
cmp
dec
sbb
imull
and
adc
cwtl
adc
mov
add
lahf
mov
lea
andl
mov
scas
sar
jp
pop
orl
mov
xor
incb
iret
test
jbe
mov
outsl
inc
popa
sub
outsl
sbb
inc
xchg
dec
push
dec
mov
cmp
jmp
das
push
iret
outsl
mov
mov
add
sub
out
repnz
mov
fs
sbb
sbb
xchg
addb
pop
inc
or
movl
lock
nop
dec
adc
mov
xor
jb
adc
xchg
hlt
cmp
addr16
imull
mov
mov
test
and
fiaddl
mov
adc
pop
and
arpl
jb
mov
inc
or
add
xchg
int
rcrb
imul
or
adc
add
mov
andl
push
push
loop
add
pushf
int
jb
test
lret
mov
add
leave
cmp
int
notb
test
mov
rol
and
mov
dec
sahf
pop
aam
sarb
mov
out
lcall
and
pop
lods
push
xchg
in
bound
adcb
je
jne
jg
fdivrs
adcl
cmp
jae
sbb
push
pop
ret
add
lods
loop
insl
adc
inc
mov
push
icebp
adc
lcall
fcom
cltd
pop
out
mov
mov
lret
pop
in
cmp
mov
inc
sbb
fwait
data16
cmp
andb
add
or
adc
ja
sbb
cmp
mov
call
push
pop
ds
push
aad
jne
adc
xchg
vpor
dec
mov
adc
leave
movsl
mov
outsl
in
test
imul
push
pop
mov
lods
xchg
ret
xchg
add
xchg
jnp
lret
int3
stc
xor
push
fimuls
pop
jne
mov
subb
sahf
cli
rclb
xorl
xchg
adc
push
xor
aas
or
scas
gs
stos
pop
mov
cld
rorl
mov
xchg
dec
jecxz
cltd
mov
lss
gs
adc
inc
jo
mov
sbb
test
test
psubsb
xor
cmp
add
in
lret
or
xchg
adc
mov
push
or
insl
loop
and
pop
adcl
cmp
out
add
imul
stos
data16
out
mov
pop
les
sub
pop
je
shlb
shrb
jnp
jle
ljmp
int3
xor
sub
add
sahf
dec
push
or
inc
push
loope
cmp
push
std
subl
mov
mov
in
les
fsubrl
xchg
pop
push
cwtl
fidivl
pusha
pop
push
mov
cmp
outsb
push
dec
xor
lea
sti
hlt
sub
das
mov
cmp
mov
adc
xor
sarl
mov
es
imul
out
dec
pop
xor
ror
and
insb
test
sbb
sub
data16
xchg
fmulp
sbb
subl
clc
jge
xchg
dec
and
scas
aas
fadds
xlat
insl
xchg
or
rcrb
lods
fwait
cmp
inc
push
adc
pop
in
pop
cwtl
sarb
cmp
into
adc
push
mov
mov
idiv
nop
jmp
fucompp
add
mov
xlat
push
mov
out
adc
scas
aad
sti
adc
notb
cltd
and
call
cmp
gs
and
cmc
mov
pop
push
pop
push
mov
mov
pop
bound
pop
mov
mov
enter
inc
mov
mov
sub
jecxz
push
ror
imul
test
imul
jmp
in
xchg
jmp
cmp
rclb
sbb
in
mov
push
mov
icebp
lret
insb
pop
sbb
shll
in
cld
cmpl
push
inc
mov
sub
pop
xor
cmp
mov
inc
mov
push
pop
out
decl
mov
enter
push
or
or
hlt
inc
inc
leave
pushf
pop
adc
pop
push
scas
fs
xor
xchg
pusha
stc
ret
test
adc
nop
std
aam
std
jne
cltd
push
aas
xor
ja
cmpsb
push
in
insb
ret
mov
divl
inc
mov
test
nop
fwait
das
fwait
or
adc
mov
inc
les
or
and
mov
in
adc
mov
mov
popa
pop
pusha
inc
xor
ja
jae
add
sbb
push
inc
dec
jle
and
in
sub
pop
enter
sub
pop
leave
jp
mov
pusha
fwait
xor
adc
neg
inc
jmp
imul
mov
adc
xchg
insl
lock
das
rcrb
dec
lds
and
push
lret
mov
jg
xchg
cmpsb
add
mov
mov
inc
mov
and
sbbb
ja
jge
sub
xor
fucomi
fstl
push
arpl
mov
stc
movb
movsb
xchg
iret
into
add
dec
cmpsl
fdivrs
cltd
mov
lahf
jmp
jl
repz
subl
sbb
scas
sti
mov
and
cmp
cli
cwtl
push
ficomps
repnz
and
shlb
pop
adc
mov
nop
outsb
call
popf
test
in
xchg
mov
push
in
and
push
insl
mov
gs
cmpsl
gs
bound
stos
das
ret
leave
mov
xchg
test
inc
jno
sbb
fwait
mov
fimuls
xor
into
jge
or
das
scas
jmp
pop
hlt
ficompl
mov
jbe
or
fwait
xchg
int
imull
mov
or
daa
sub
mov
cld
lock
mov
jns
call
cmp
aas
sub
imull
adc
adc
pop
xchg
out
ja
xchg
movsl
push
jg
sbb
mov
or
dec
lret
call
cs
adc
daa
int3
add
or
in
ret
outsl
pop
mov
sbb
aam
dec
addr16
jo
and
hlt
sbb
sbb
push
stc
sbb
sbb
dec
xor
lock
mov
repnz
inc
cltd
pop
pop
sbb
fs
push
cltd
inc
in
ret
loopne
sub
push
push
adcl
jb
mov
in
rcll
xchg
sbb
push
fisttpl
xchg
fistps
mov
push
lret
leave
and
xor
jb
jle
stos
es
push
stos
stos
sti
xchg
roll
test
outsb
fcoms
into
je
or
mov
sar
aaa
mov
mov
dec
mov
out
dec
popa
js
dec
or
dec
adc
cs
push
bound
push
mov
ljmp
stos
lcall
mov
fidivs
push
pop
neg
xchg
sahf
rcl
lret
cld
aaa
sar
mov
xchg
pop
imul
inc
inc
pop
push
and
lahf
cltd
popa
ljmp
loopne
loop
popa
jle
push
pop
lahf
mov
push
test
insl
daa
and
cmp
xchg
mov
adc
push
test
loop
loopne
mov
gs
push
mov
nop
push
fnstsw
mov
es
pop
inc
lret
inc
xchg
jae
fdivrs
ficoms
pop
inc
stos
xchg
xchg
sub
je
xchg
adc
imul
pop
stc
sub
mov
mov
cmp
push
dec
xchg
bound
mov
icebp
mov
add
mov
je,pn
mov
sub
inc
xchg
pop
xchg
std
sbb
xor
hlt
test
jecxz
xorb
in
js
xor
push
imul
and
dec
jp
hlt
test
movsl
cld
lcall
mov
sbb
out
jmp
cmp
test
mov
sbb
fmull
xchg
pop
xchg
ljmp
cmpsb
movsl
sbb
cmc
movsb
jae
repz
orl
repz
std
les
sar
jno
aad
xchg
rcr
inc
jbe
cltd
das
popf
loop
data16
or
push
out
loopne
adc
xor
xchg
loopne
cmp
mov
mov
out
inc
push
xlat
jmp
push
les
addr16
jle
sbbb
jb
inc
sarb
in
aam
push
and
cmp
lds
popf
and
mov
gs
mov
cmpsb
pop
push
ss
subb
es
sbb
and
test
push
int3
je
push
rclb
mov
or
pop
fwait
jnp
lea
stc
test
lret
add
pop
inc
xlat
mov
or
jbe
lret
push
sub
mov
push
fidivrs
or
inc
pop
push
push
stos
mov
daa
pushf
fdecstp
or
cmp
int3
ret
push
mov
sti
jmp
push
lret
rep
imull
sbb
xchg
pop
pop
int3
addr16
leave
jno
jae
pop
push
ds
push
data16
fbstp
jo
inc
fists
lret
es
cmp
das
pop
inc
shll
fwait
dec
dec
aaa
cmp
frstor
xchg
jae
adc
daa
rcrb
cwtl
mov
stc
cltd
out
rcr
cli
int3
push
jb
sub
cmpsb
mov
imul
jle
std
test
ret
xor
test
les
ds
sbbl
mov
imul
mov
jp
mov
mov
int3
fisubrl
pop
sub
pop
xlat
push
mov
pusha
lahf
fdivrs
test
rcl
ret
mov
xor
sbb
stos
sti
xchg
insl
push
xchg
sub
push
sub
cmp
rol
mov
mov
repnz
test
std
gs
fidivl
sub
and
repnz
flds
sub
sahf
addr16
das
lea
loopne
dec
adc
mov
jecxz
rcl
iret
or
cmp
cmp
and
add
jle
lret
xor
dec
xor
rclb
jae
setp
mov
movsb
xchg
mov
aaa
cltd
lret
push
je
cmp
sbb
xor
and
addr16
jae
ja
mov
mov
leave
pushf
loopne
loop
mov
ja
shr
test
nop
sbbl
add
repz
sahf
enter
lret
jge
mov
pushf
mov
or
jmp
std
mov
gs
pop
mov
inc
xor
mov
es
sbb
xorb
loope
push
test
or
in
sbb
add
cmp
aaa
xor
or
outsb
rolb
fdivrp
mov
or
rcrl
pop
hlt
adc
stc
inc
fadds
rorb
popa
add
test
scas
fstps
dec
push
sbb
rcrb
addr16
js
and
imul
push
sbb
adc
jge
pop
sbb
jecxz
adc
push
fisubrl
lcall
xor
mov
jle
mov
stc
retw
mov
dec
movsl
sub
pop
ficomps
jns
push
aas
subb
jp
sbb
jne
loopne
xchg
jb
inc
lahf
xor
ds
push
gs
repz
and
call
fimuls
ljmp
cmpsl
test
ljmp
push
das
inc
jnp
xchg
loope
inc
insl
das
mov
xchg
mov
sbb
mov
xor
in
cmpb
into
adc
pop
fisubrl
mov
inc
inc
lahf
mov
xchg
adc
out
push
in
xor
cmp
das
push
xchg
insb
mov
mov
push
outsl
xchg
xor
or
js
in
pop
int
mov
or
cmp
lahf
ret
or
addl
pop
aaa
pop
jmp
xchg
dec
loopne
mov
push
push
aas
inc
cmp
lahf
xchg
lcall
push
lods
sahf
aad
je
test
aad
popw
inc
rol
ret
pushl
in
ja
lret
or
adc
outsl
adc
xor
mov
fldenv
jecxz
pushf
mov
div
lret
andl
je
fmul
shrb
dec
xchg
mov
xchg
sub
mov
jmp
shl
mov
push
out
mov
shrb
pop
mov
inc
out
and
or
inc
loopne
pop
aad
into
mov
out
jge
inc
test
ret
jg
sub
cli
data16
jb
xchg
dec
test
jmp
ret
pop
mov
push
pop
and
bswap
mov
xor
add
push
jae
push
push
adc
orb
popf
sbb
aad
pop
repz
and
lcall
mov
insb
ja
cmp
in
pop
insb
jbe
add
adc
push
or
dec
xlat
das
call
mov
cli
lock
fiaddl
mov
scas
mov
int3
es
pusha
icebp
add
add
scas
fidivl
mov
fistps
in
xchg
ds
push
mov
mov
push
pop
inc
jns
mov
aaa
adc
addb
popa
pop
xchg
fs
aad
loopne
pushf
aaa
xor
bound
repnz
adc
fisttpll
in
sub
sbb
mov
rcrl
sub
mov
push
cmp
lea
push
outsl
pop
add
mov
dec
aad
inc
push
inc
mov
or
jo
adc
cmpsl
adc
adc
push
xchg
in
and
frstor
pop
lcall
std
sbb
ret
or
loope
fwait
xchg
scas
add
mov
addl
mov
sbb
stos
ja
mov
sti
insl
ja
fnstenv
push
pop
xchg
das
or
dec
inc
and
lods
sub
outsl
aam
xor
stos
mov
mov
pushf
jecxz
fucom
inc
jno
mov
lds
pop
cmp
push
xchg
iret
add
inc
outsb
leave
dec
xor
and
jge
sbb
rcr
aad
or
xor
mov
mov
sub
lahf
hlt
je
fmulp
out
jnp
jnp
mov
mov
rorb
xor
dec
xchg
and
loop
ljmp
insl
pop
jg
test
clc
test
cwtl
mov
jle
or
cli
out
add
jne
mov
jo
loopne
cmp
xor
cmp
jbe
dec
repz
popl
addb
es
mov
scas
jno
mov
je
sbb
push
and
mov
sbb
cltd
mov
dec
add
nop
adc
dec
jae
adc
xchg
sbb
stos
mov
test
lret
outsb
cmp
xchg
enter
lods
mov
mov
ja
mov
inc
and
pop
out
imul
adc
cmp
inc
dec
notb
daa
pop
sub
ret
insb
mov
leave
cmpsb
outsl
push
mov
xchg
inc
loope
or
adc
mov
rcr
and
dec
call
push
dec
fimuls
stos
call
idivb
test
xchg
cmp
xchg
adc
mov
in
in
mov
adc
cmp
jno
dec
pop
mov
push
rcrb
or
xor
popf
jg
xor
or
pop
sub
push
xor
pushf
or
or
idivl
pop
and
cld
adc
ret
inc
xchg
rorl
xchg
cli
jle
jg
sub
iret
mov
sbb
jne
mov
lods
test
cli
add
pop
in
fistpll
loopne
movsl
cltd
cmp
push
and
clc
sbb
cmp
addr16
div
into
sub
mov
jle
sub
sbb
jo
push
adc
out
sub
dec
adc
call
sti
fdecstp
inc
sbb
je
lcall
iret
shll
xor
xor
add
or
subb
imul
xchg
int3
mov
xor
inc
mov
mov
jp
lret
sub
xchg
scas
or
cmp
add
bound
dec
mov
jl
scas
sti
dec
sbb
sahf
jmp
enter
jle
adc
lcall
pop
out
adc
mov
jmp
les
mov
fwait
pop
test
and
sahf
jno
mov
stc
lret
adc
mov
bound
and
imul
outsl
imul
and
stos
mov
mov
testl
jg
jne
icebp
dec
in
mov
xchg
add
ds
dec
push
adc
je
inc
sti
mov
push
and
mov
or
mov
jns
mov
rolb
aaa
and
push
mulb
or
mov
aas
loop
bound
inc
out
cmpb
test
or
adc
ds
push
dec
inc
stc
xor
inc
mov
push
imul
dec
fwait
lahf
test
lret
jmp
xchg
fbld
xor
adc
jmp
or
iret
sub
pop
and
inc
xchg
hlt
mov
jb
test
adc
fdivr
popa
out
ljmp
pop
lcall
inc
push
mov
sub
or
stc
cmc
cld
rcrl
xchg
test
push
push
push
in
and
push
mov
mov
mov
outsl
shlb
cmc
in
lret
mov
rclb
imul
add
aaa
jae
push
int3
xchg
jecxz
cmc
test
sbb
cmc
icebp
call
push
mov
push
jecxz
test
testb
xlat
int3
push
cmp
imul
into
lret
icebp
daa
xchg
stos
lea
movsl
push
jl
push
call
sbb
add
bound
je
popa
test
cmpsl
xlat
cmpsb
mov
cltd
dec
bound
sbb
ljmp
loop
scas
pushl
fcmovnbe
jl
ds
pop
inc
adc
jae
mov
out
push
adc
aas
fsts
out
mov
das
addr16
imul
fdivl
imul
pop
sub
cmpsb
pop
shll
mov
repnz
ja
pop
adc
fldl
lahf
adc
pop
inc
es
mov
push
push
cmp
xor
xchg
xlat
add
inc
in
into
enter
sbb
lods
xchg
fisttpl
and
jecxz
loope
mov
push
adc
sub
fistl
mov
orl
push
je
daa
repz
push
sbbb
mov
push
jp
std
pop
dec
xchg
cmp
cmp
sub
mov
pop
sti
popa
sbb
mov
jae
into
push
mov
add
push
test
loopne
sub
lds
inc
and
rol
push
xchg
inc
jns
imul
in
xlat
shl
mov
in
pop
in
or
dec
add
daa
inc
aam
lods
rcrl
fs
mov
test
fisubrs
adc
fldcw
add
insl
gs
xor
scas
roll
stc
aam
or
cs
sub
sbb
sbb
dec
imul
bound
cmpsl
idivb
int
pmovmskb
dec
cmc
jne
insl
movsb
iret
outsl
xor
stos
das
ss
std
pushl
or
mov
jg
add
ja
aam
and
pop
pop
push
push
mov
test
mov
mov
incl
jo
outsl
pop
dec
add
lcall
add
pop
add
cltd
sar
in
sbb
loop
in
loop
inc
dec
movsb
adc
cmpsb
movsl
mov
and
add
pop
imul
or
sub
jg
add
push
jge
pop
sub
add
sub
mov
xchg
cli
add
push
xchg
test
aad
pop
test
lcall
mov
imul
xchg
push
loopne
cmpsb
xchg
add
loope
push
data16
adc
mov
ss
inc
repz
inc
mov
add
lods
je
in
test
jge
scas
adc
pop
and
lods
call
mov
mov
push
lods
imul
push
inc
adc
mov
imul
xor
push
cmp
mov
daa
orl
mov
ja
sub
call
pop
push
xor
pop
lcall
movsb
je
lret
dec
cmp
loopne
dec
pop
popf
ds
out
or
jp
lret
xchg
jle
dec
push
xlat
xchg
testl
mov
ds
mov
cmc
jle
cmp
arpl
repz
pop
outsl
das
stos
dec
dec
inc
or
sbb
cli
dec
cmp
or
mov
fbld
std
sahf
adc
xor
divb
pushf
jne
mov
repz
sbb
pop
and
gs
shrb
push
sbb
jne
or
cmc
cmp
cmp
mov
pop
popa
popf
inc
dec
loope
cmp
nop
rcll
xor
lods
push
mov
lods
xor
pop
xlat
ljmp
jge
mov
pushf
mov
sub
dec
sbb
xchg
cld
mov
jb
mov
push
push
nop
pop
add
cli
es
ds
test
mov
mov
cmp
nop
sti
jmp
cmp
dec
and
fimull
outsl
push
adc
cmp
notl
mov
dec
lods
dec
outsb
cli
fistps
jns
lcall
insl
pop
out
arpl
xchg
sub
jl
push
mov
inc
sahf
mov
ret
int
es
xchg
cmc
test
mov
mov
ds
and
mov
inc
push
mov
fldcw
cmp
es
mov
cmp
cmp
stc
in
out
jg
push
cmp
jp
rcll
loop
mov
mov
sub
mov
fs
cmp
dec
dec
pop
and
sahf
aas
arpl
inc
xor
movsb
mov
outsb
mov
outsl
inc
test
imul
mov
hlt
mov
cmp
mov
sbb
pop
scas
pop
lcall
cmp
mov
mov
mov
shlb
jo
in
stos
out
and
addr16
mov
pop
cmp
mov
fcom
push
inc
sbb
test
xor
negb
cmpsl
mov
mov
lods
jnp
add
arpl
cltd
jge
outsl
jge
or
loopne
cmp
mov
scas
ficompl
push
ret
pusha
popf
sub
ret
lock
popf
pop
adcb
insl
jle
adc
stc
imul
pop
mov
add
shrl
fbstp
pushf
insl
mov
inc
push
pop
rcrb
cmp
shrb
addr16
lock
je
fldenv
sbb
add
mov
xchg
lcall
pusha
xchg
cmpsb
add
push
sub
test
push
ret
loop
shlb
pop
pop
and
lods
cwtl
xchg
es
mov
or
mov
scas
or
push
ljmp
pop
pop
and
mov
mov
nop
adc
mov
fadds
mov
fcomps
cmp
mov
lret
pop
cwtl
sub
inc
outsl
inc
data16
insb
mov
sub
repz
sub
hlt
jge
jo
testb
or
outsb
xchg
pop
cmpsb
push
ljmp
bound
add
and
out
and
adc
jno
and
std
shll
mov
add
inc
jle
pop
fldenv
fnsave
push
mov
mov
pop
push
fidivrs
pop
repnz
rorb
outsl
xlat
aam
bound
pop
pusha
outsl
rolb
inc
scas
xchg
fdivs
mov
outsl
mov
test
pop
aas
sbb
sub
jae
adc
mov
pop
sub
dec
jbe
iret
stos
std
loop
test
sbb
jp
std
xchg
iret
insl
sub
mov
mov
js
push
sbb
rcrl
clc
and
dec
sbb
xchg
mov
fimuls
add
outsl
data16
mov
adc
inc
mov
rcll
xchg
xor
pop
adc
mov
jnp,pn
shl
insl
xchg
cmp
mov
sub
aaa
push
mov
fisttps
insl
push
sti
mov
inc
jae
dec
and
mov
add
icebp
xor
xchg
out
sub
sbb
repnz
enter
jns
bound
movsl
gs
test
pop
jne
daa
ret
repz
gs
fnop
das
push
fisttpll
call
mov
out
xor
stos
scas
lcall
push
test
ja
imul
mov
addr16
fiaddl
ja
dec
addr16
out
inc
call
or
add
dec
cli
ficompl
jo
xlat
mov
mov
popa
cmp
imul
andl
ss
sbb
jp
inc
jmp
dec
mov
mov
sub
pop
jo
icebp
and
fwait
out
icebp
sahf
lret
outsl
sub
and
xlat
dec
add
cli
cli
jae
orl
test
jne
add
and
iret
cmp
and
sbb
test
push
cmpsl
jle
rcr
mov
pop
dec
aas
mov
adc
out
cmp
outsl
stos
bound
lahf
inc
cwtl
inc
cld
pop
hlt
ljmp
popa
jns
sub
xchg
pop
pop
or
cmp
pop
inc
mov
lcall
and
mov
xchg
mov
push
xor
dec
outsl
repz
test
mov
int
into
jg
cmp
lock
add
rcl
push
scas
mov
ret
cli
or
pop
lea
das
mov
xlat
fimuls
adc
stos
inc
xlat
mov
mov
lods
mov
add
dec
xchg
jg
or
mov
or
or
aaa
adc
dec
lods
outsl
jl
fldcw
xchg
fsubs
or
mov
cs
pop
pop
out
push
test
push
pusha
and
shrl
lods
dec
jne
jle
jp
mov
mov
sub
ror
in
aaa
in
jne
outsb
roll
lahf
add
mov
mov
cmpsb
mov
push
lods
subb
mov
sub
add
xor
loopne
sahf
adc
push
pop
psubsb
test
mov
movsb
ss
fdivs
mov
shrb
je
mov
jge
cwtl
mov
dec
lret
dec
int3
cmp
dec
test
cwtl
cmp
rorb
sub
sub
jb
shll
cmp
sbb
lret
or
dec
aad
pop
in
movsl
stos
jle
sub
mov
push
cmp
xchg
stos
push
add
jmp
pop
inc
int3
fstps
movsl
and
ljmp
andl
xchg
sub
pop
je
dec
mov
int
xchg
mov
or
fwait
scas
push
or
inc
sbb
sbb
fs
pop
repz
jae
or
in
add
loopne
imul
push
xchg
jne
loope
ljmp
add
mov
jmp
inc
aad
rcrb
jle
mov
notl
mov
int3
cmc
pop
mov
scas
mov
cmc
aaa
ficomps
xor
repz
jge
lods
test
jb
out
mov
cmpb
and
cs
sub
addr16
push
xor
mov
inc
subb
add
jnp
stos
or
inc
insb
out
fcomps
in
es
xor
imul
roll
mov
mov
push
fwait
in
xlat
and
out
mov
pop
in
jnp
shrl
sbb
and
popf
imul
sub
push
push
adc
ret
arpl
xchg
or
ss
sub
shll
sub
sbb
mov
fsts
ret
sbb
dec
fs
ret
rclb
lea
push
xchg
aad
lea
cmp
pop
je
lret
jle
aas
jle
xlat
outsl
add
in
pushf
cmc
loop
jne
add
movsb
inc
lahf
fidivrs
fstps
pop
mov
pop
push
add
lods
test
jmp
fistpll
dec
add
outsb
cmp
imul
xlat
mov
sahf
lcall
mov
dec
gs
add
insl
mov
push
sbb
test
hlt
pop
pop
xchg
mov
jmp
aaa
je
inc
adc
sbb
mov
sbb
into
jne
push
xor
mov
andb
hlt
mov
imul
mov
test
std
frstor
mov
cwtl
push
test
adc
lret
in
push
lock
dec
dec
push
sahf
arpl
call
cmp
arpl
inc
xor
movsl
outsb
sub
or
mov
out
stos
push
push
or
xor
stos
imul
fisubrs
lock
mov
dec
daa
mov
stos
ficompl
jge
pop
lock
jb
mov
dec
out
mov
sub
fwait
xorb
sub
inc
cmpb
or
xor
loopne
loop
cmpsb
icebp
bound
cld
iret
mov
adc
into
mov
sub
cmp
sbb
adc
inc
insl
dec
mov
rorl
dec
outsb
push
pop
insl
dec
mov
push
imul
fmuls
pop
inc
lods
cmp
cld
daa
xchg
fdivrl
inc
push
jae
int3
jae
and
mov
sbb
xlat
xchg
sbb
js
xor
cld
lods
lret
xor
mov
mov
sbb
out
jmp
gs
fwait
aaa
and
sti
xor
fnstsw
ja
std
rcll
addb
out
insb
sub
test
out
ds
mov
je
sahf
add
add
lods
pop
sbb
mov
or
outsl
pop
aaa
lea
int3
dec
xchg
add
jbe
fiadds
cwtl
fidivrl
sti
mov
out
mov
sbb
stc
in
push
pop
aam
xor
je
fsub
inc
leave
sub
mov
lahf
adc
dec
aam
lret
xchg
loope
sbb
mov
sahf
movsl
clc
in
jl
mov
mov
sbb
or
test
popa
adc
xchg
mov
mulb
sub
leave
into
push
cwtl
inc
push
ret
mov
out
cmpsb
test
adc
push
leave
sub
cmp
aad
addl
data16
sbb
xchg
sbb
mov
mov
mov
dec
xor
lea
mov
pop
mov
test
add
out
cwtl
scas
imul
fs
cmp
pop
inc
mov
sbb
shlb
xchg
insb
sbb
xor
pop
jle
repnz
dec
sub
cmp
push
fstl
mov
pop
mov
dec
lret
xchg
cltd
aas
loopne
ss
or
dec
repnz
movsb
shll
loope
notl
pop
pop
sbb
gs
jg
movsl
mov
rcl
lret
adc
jl
push
lea
add
add
or
dec
lret
bound
inc
loope
mov
scas
int
mov
pop
lret
test
sub
fldcw
xor
inc
pop
fbld
mov
dec
pop
arpl
inc
imul
shlb
call
ss
incb
add
jle
adc
fs
fbld
xchg
pop
mov
inc
repz
and
sub
in
daa
fisttpl
andb
daa
mov
repnz
clc
mov
rclb
lods
jp
xchg
shrl
out
mov
mov
lods
adc
icebp
cltd
aad
icebp
jecxz
cmp
addr16
or
testb
jp
mov
push
aas
mov
cli
mov
xor
xor
adc
add
cli
mov
jno
add
out
adc
leave
adc
jo
mov
add
xor
sub
iret
sub
jne
popa
xchg
jb
shll
mov
je
cmpsb
outsl
mov
fldcw
fs
lcall
test
mov
mov
inc
aad
stos
lods
adc
lret
jmp
push
cmc
loopne
mov
add
xchg
jnp
mov
loopne
lea
cmp
lahf
ljmp
scas
mov
fnstsw
mov
mov
clc
pop
cmp
mov
arpl
cmp
push
mov
clc
push
xor
stos
lods
push
test
outsl
inc
adc
cmpsb
or
pop
mov
adc
gs
test
mov
xlat
mov
fistl
out
mov
out
ds
mov
lahf
push
adc
xchg
pop
jo
outsl
addb
mov
cs
xchg
js
jne
fwait
not
mov
pop
and
mov
ss
inc
dec
repnz
mov
pop
mov
bound
mov
and
pop
mov
xchg
pop
inc
sbb
nop
cmp
jnp
scas
js
mov
xchg
push
lret
push
repz
adc
jge
mov
lea
dec
fs
scas
mov
adc
push
inc
mov
js
aaa
jo
fwait
mov
pop
jmp
jnp
and
shlb
xchg
inc
push
pop
push
loop
fnstcw
scas
out
sarb
mov
sub
add
rorl
mov
data16
pusha
mov
sub
add
jne
test
imul
sub
mov
andb
movsb
lcall
sbb
test
aad
test
pop
pop
cmp
sbb
fstpt
xor
es
outsl
and
or
mov
arpl
sub
pop
pop
lock
fidivrs
mov
inc
jl
xorl
pushf
sbb
mov
out
cmc
ret
sbb
dec
xchg
jmp
iret
or
fwait
imul
sbb
out
insb
iret
xchg
jecxz
mov
and
mov
outsl
sarb
in
xchg
cld
test
push
push
int3
mov
inc
xchg
sub
repnz
lret
or
xchg
mov
or
add
imulb
xor
insb
add
mov
sub
popa
sub
push
adc
adc
idivl
es
das
fisubrl
xchg
sahf
xchg
jb
jmp
push
mov
lret
ret
mov
cmp
daa
cmpsb
cwtl
imul
and
pop
mov
outsl
outsb
clc
cltd
mov
adc
or
xchg
or
stos
add
fiaddl
inc
mov
or
out
je
pop
cmp
sbb
jmp
iret
xlat
ffreep
push
loopne
inc
or
or
xor
popf
push
clc
mov
stc
idivl
ds
test
rcrb
out
inc
leave
or
or
out
and
int3
jne
mov
int3
mov
and
ja
push
xchg
add
xchg
and
int
mov
lahf
sti
mov
jae
xchg
cmp
push
push
mov
mov
push
into
gs
ror
push
push
adc
cmp
roll
mov
and
pusha
ret
mov
and
bound
popf
dec
and
pushf
ds
es
fistpll
add
icebp
mov
pushf
dec
mov
lahf
out
sbb
and
lret
ds
dec
lock
call
popf
int
push
push
mov
mov
incl
ds
scas
xchg
out
in
mov
orl
cmp
gs
push
dec
xchg
rcrb
mov
pushf
xchg
insl
fwait
xor
and
sbb
movl
pop
xchg
leave
mov
cs
cli
outsb
pop
addl
cmp
leave
aas
das
xor
movsb
and
mov
in
xchg
xlat
idiv
rcrl
fldt
fcom
pop
js
ds
push
in
orb
push
mov
lahf
out
lret
push
push
xor
xlat
xchg
daa
push
or
jl
push
mov
dec
clc
nop
call
adc
cmp
mov
rcrb
mov
stos
add
mov
leave
jecxz
shrl
shll
aaa
cwtl
sbb
ret
dec
dec
jae
in
inc
xchg
mov
xchg
inc
stos
cmp
adc
xchg
scas
and
xchg
push
sbb
adc
xchg
subl
scas
cli
inc
out
jo
mov
mov
xchg
mul
mov
insl
push
add
push
xchg
data16
jae
jnp
jo
mov
mov
push
mov
cltd
dec
stos
inc
xchg
outsb
mov
ss
push
fcoms
filds
xchg
mov
mov
shl
cmp
in
jmp
in
jmp
orb
mov
imul
pusha
fadds
daa
push
adc
bound
data16
add
mov
xor
sbb
enter
out
pop
add
jae
pop
insb
push
faddp
jne
mov
outsl
lcall
and
lahf
mov
outsb
and
das
inc
mov
mov
mov
in
push
push
and
jae
jno
mov
lods
jnp
dec
pop
ret
gs
pop
pusha
push
jecxz
das
gs
cld
sahf
inc
into
adc
fstpt
nop
dec
cmp
iret
aas
pop
fildl
xchg
or
call
mov
sbb
fistpl
push
or
ds
jl
aaa
sbb
fldenv
pop
add
jns
call
mov
pop
daa
sub
cmp
cld
jb
xor
cmpsl
adc
sub
sbb
ljmp
fmul
xchg
in
mov
call
xchg
cmpsl
cld
cmpsl
mulb
mov
xchg
pop
pop
repz
push
pop
dec
lret
lret
sahf
jno
iret
sbb
or
pusha
xchg
or
push
fsts
ss
stos
test
dec
daa
cmp
jns
addr16
cmp
insl
and
or
pop
mov
repz
mov
addr16
cs
test
jo
sub
cld
or
loope
packsswb
dec
lds
xchg
add
sbb
sti
inc
mov
ret
popa
xchg
aad
adc
mov
and
pop
aam
outsb
mov
popa
jnp
test
pop
jg
xchg
mov
sbb
imul
shlb
fwait
inc
insl
pop
subl
dec
rolb
stc
clc
mov
add
push
sbb
test
jo
pop
and
adc
incl
fsts
nop
jge
jge
mov
daa
loopne
pop
or
or
mov
sub
in
dec
incb
mul
push
jmp
add
sub
mov
sub
xchg
inc
in
pop
enter
adc
jmp
mov
mov
int3
push
mov
repz
in
and
sub
and
in
loop
in
gs
mov
xlat
sti
dec
into
mov
cmc
inc
jmp
inc
pop
pop
adc
add
or
pushf
mov
ret
inc
mov
lods
addr16
sub
mov
xchg
and
clc
stos
inc
dec
cmp
sti
mov
inc
adc
push
andl
call
mov
jnp
test
mov
int3
push
cs
loopne
push
lret
mov
fisubl
orl
mov
in
add
cmp
inc
hlt
popl
jne
outsl
aas
shll
inc
lds
xchg
movsl
pusha
fistpll
mov
or
fildl
rorl
dec
pushf
movsl
jmp
test
ret
adc
dec
popf
lret
leave
ja
ljmp
jmp
cmp
push
inc
jns
test
sbb
mov
out
movsl
push
push
inc
out
incl
push
or
aas
popf
jbe
xor
out
xor
xor
js
xchg
ja
stos
jge
outsl
add
popf
mul
repnz
ret
fs
and
shl
orl
jbe
mov
push
or
je
jne
mov
push
loopne
dec
dec
xlat
leave
push
xchg
xor
dec
test
data16
mov
xor
sub
xorb
sti
xor
jecxz
push
aaa
sub
xchg
int3
add
loop
xchg
xchg
xor
fdivr
lahf
fldl
clc
mov
mov
or
test
je
jne
mov
in
mov
adc
lock
bound
int
dec
or
add
xchg
movsb
mov
mov
jge
fsubl
sbb
jmp
stos
out
cld
ds
call
mov
out
xor
in
cmpsl
xchg
xchg
in
sub
xor
dec
push
cmpsl
sbb
inc
lock
out
iret
mov
jne
adc
mov
aas
and
and
pop
xor
insl
arpl
sbb
test
jne
sub
sbbb
cmp
in
out
cmp
and
jg
xor
jae
jmp
in
or
xor
xchg
mov
mov
add
xlat
test
stos
les
push
jecxz
add
mov
dec
xor
jno
xor
mov
mov
xor
dec
imulb
and
gs
mov
mov
orb
gs
mov
es
adc
push
aam
aaa
push
stos
xor
aas
fildl
inc
aaa
js
inc
dec
and
inc
mov
leave
cmp
mov
push
jae
mov
mov
outsl
in
gs
sbb
daa
sub
lahf
add
outsb
dec
mov
mov
or
into
inc
test
mov
xor
and
pop
daa
sbb
sbb
xchg
jnp
imul
xchg
je
icebp
ret
enter
xchg
mov
cmp
data16
or
and
imul
jno
and
inc
inc
adc
lcall
sbb
sbb
push
in
pop
cmp
rcrb
or
and
cmc
pop
int3
mov
adc
pop
dec
lods
mov
jmp
xchg
inc
test
js
shlb
and
mov
ljmp
les
mov
pop
bound
sbb
push
and
inc
push
sbb
sub
enter
bound
pop
scas
sbb
pop
jmp
xor
scas
and
fdivp
push
push
jl
sbb
mov
adcl
push
and
jle
xchg
sbb
std
jp
ret
movsb
imul
push
imul
mov
leave
dec
std
inc
xchg
adc
pop
or
jle
or
in
cmc
jp
pop
xchg
lret
sub
inc
in
add
aas
js
inc
test
pop
mov
mov
lcall
inc
dec
mov
cmp
movb
mov
jno
call
pop
cmp
stc
and
jbe
loope
sub
movsb
dec
add
jl
mov
or
sub
pop
jae
clc
mov
inc
adc
in
test
xchg
pop
mov
les
sahf
lds
out
push
fnstenv
pop
mov
mov
mov
jecxz
test
test
inc
std
arpl
ss
jne
in
push
pop
std
jb
ds
fists
iret
insb
mov
sbb
add
in
loop
cmp
push
fld
loope
cmp
fisttps
push
mov
das
mov
fdiv
add
pop
xchg
xchg
jge,pt
mov
pop
mov
push
fs
and
test
imul
mov
mov
xorb
push
test
pop
in
pushf
stos
loopne
mov
or
adc
mov
xor
push
repnz
cs
inc
leave
faddl
inc
leave
sub
jp
int
imul
cli
cs
cmp
xor
sahf
cli
lret
mov
ljmp
adc
jl
cmp
mov
inc
cmc
mov
clc
test
xchg
mov
push
dec
clc
dec
fnstcw
movsb
sub
xor
bnd
pop
xchg
pop
cmpsl
movb
adc
cmc
sahf
in
imul
outsl
jg
in
jbe
ss
mov
xchg
negl
push
out
ret
dec
fcomps
in
jnp
mov
mov
lret
jb
xchg
mull
push
popa
cwtl
jae
insl
in
mov
stos
sub
pop
push
pop
call
add
mov
mov
leave
fidivrs
adc
ret
xchg
pop
push
dec
xor
sbb
sbb
mov
jg
adc
sub
bound
mov
jne
pop
popf
test
out
dec
xor
nop
sar
and
out
fs
out
clc
pop
ss
mov
int3
pop
add
fadds
ret
jp
mov
nop
mov
dec
lods
xor
scas
and
je
rorl
shl
imulb
sti
icebp
out
movsb
jne
dec
mov
std
fdivs
xchg
dec
add
call
sub
bound
adcb
outsb
mov
mov
test
jmp
push
mov
rorl
aad
xchg
nop
cltd
ficoms
adc
inc
pop
push
adc
cmp
sarl
pop
scas
and
mov
mov
ja
pop
inc
add
dec
dec
gs
cwtl
jns
aad
or
ja
mov
mov
addr16
shl
pop
sub
cltd
int
mov
aaa
movsb
sbb
pop
out
js
sahf
sbb
cmp
test
cmp
xor
das
out
popa
cmp
repz
cmc
fiadds
pop
outsl
popf
mov
loopne
mov
movsb
lret
jo
out
dec
xchg
inc
jne
test
std
xor
in
xchg
sahf
xor
jno
loop
fcmovne
xchg
adc
cld
clc
sahf
daa
jle
jbe
lock
pop
sub
mov
and
scas
cmp
mov
jmp
stos
pop
cs
xchg
in
pop
lret
dec
jo
into
jns
icebp
cmp
xchg
mov
cmpsl
xchg
clc
cmp
shlb
imul
mov
push
mov
sub
or
test
adc
sbb
push
fmull
out
loop
les
fadds
jne
xchg
dec
cmp
cltd
add
lahf
lea
xor
jns
pop
in
sti
insb
ret
xchg
xlat
jbe
xchg
mov
adc
addb
pop
xchg
mov
frstor
in
mov
out
pusha
cmpb
sbb
inc
loop
xor
mov
imul
cwtl
lods
jg
cwtl
xchg
fstps
add
out
push
mov
data16
sarl
inc
js
push
sub
jp
xchg
iret
and
in
sbb
sbb
pop
aam
mov
fucom
mov
std
jbe
insb
adc
outsb
cmp
aas
pop
sbb
call
jl
inc
mov
xor
daa
sbbb
push
shrl
xchg
jnp
ds
clc
and
xor
push
dec
and
outsb
pushf
repnz
aaa
mov
sub
loopne
jge
rcrl
in
lods
add
popa
add
decl
hlt
mov
pop
fst
add
push
or
in
pop
xchg
sub
ret
push
add
pop
iret
hlt
sub
mull
in
test
inc
add
sbbb
imul
adc
fdivs
or
fmuls
sbbl
pop
jns
add
sahf
inc
inc
and
adcb
pop
push
mov
dec
scas
and
icebp
cmp
sub
xchg
punpckhwd
mov
push
cld
cli
push
and
add
adc
imul
arpl
bound
idivb
mov
push
cmpl
fstl
push
or
js
xchg
test
sub
and
mov
jmp
mov
mov
imul
dec
repnz
xchg
inc
push
mov
daa
add
add
cmp
sub
push
imul
ja
lahf
stos
sahf
sbb
push
jmp
pop
jns
cmp
mov
lret
movsl
dec
xchg
scas
rcrl
mov
inc
aam
sti
dec
pushf
xor
ret
mov
cld
sub
cmp
jns
sbb
cmp
jbe
enter
adc
push
dec
xor
daa
push
xchg
outsl
jbe
xchg
jp
add
cltd
fdivl
adc
sub
mov
jo
xchg
inc
jmp
sbb
xchg
mov
outsb
and
sbb
fstpt
and
in
mov
and
push
in
push
in
mov
test
fdivrs
adc
push
movb
cld
or
cmp
cltd
iret
mov
test
adc
mov
xor
xchg
and
add
mov
out
or
jmp
sbb
adc
mov
bound
ret
xor
dec
sub
and
cmpsb
pushf
lods
push
leave
push
jae
paddusb
cli
and
sub
jnp
jbe
adc
popf
lea
test
dec
cwtl
sahf
push
mov
push
fmulp
xor
jb
mov
in
push
ljmp
leave
xchg
jge
mov
push
sub
add
sub
mov
mov
mov
adc
rcl
sbb
insb
lcall
pusha
mov
pop
dec
xchg
fwait
imul
jg
rolb
dec
out
addl
mov
mov
or
les
stos
lcall
pop
cmp
adc
sbb
jbe
inc
jge
ficoms
sbb
test
add
cltd
out
clc
jb
fbstp
sbb
stos
ja
sbb
inc
lea
dec
test
cli
int
pop
popa
popf
mov
mov
ja
fwait
orl
aad
push
pop
mov
out
data16
add
or
imul
into
cli
shll
mov
push
imul
mov
fidivrs
inc
pusha
hlt
push
stc
fstpl
cmp
aad
out
lods
inc
clc
clc
ljmp
or
fdivs
das
xchg
scas
fildl
push
jno
dec
jno
inc
sub
mov
cmp
mov
outsl
roll
push
ret
cmpsb
sub
das
negb
sbb
int3
lods
test
add
mov
pop
mov
sbb
mov
icebp
jle
sbb
jae
in
mov
cli
push
inc
add
sub
adc
dec
ds
cmpsb
mov
mov
mov
mov
cmp
lods
sub
mov
cmp
jp
jmp
jmp
pop
or
adc
lcall
ret
and
add
cmp
out
mov
push
inc
sarb
mov
add
push
xor
mov
aam
and
mov
mov
or
and
dec
sub
sti
aad
fcoml
jl
arpl
rolb
fildl
notl
fdivrp
popa
aaa
pop
ss
sbb
mov
sarb
std
xchg
jo
cli
lock
inc
bswap
scas
out
rol
imull
aas
or
inc
cmp
in
push
push
stos
sbb
daa
out
aad
repz
push
and
cmp
cmp
sbb
popf
xchg
xor
js
cmc
stc
rclb
mov
jbe
bound
xlat
jge
loope
mov
fildl
lret
mov
mov
add
dec
cmp
test
ds
add
shrl
fnstsw
icebp
shl
mov
jae
clc
imul
fdivl
dec
insl
call
jl
fisttpll
jno
iret
shlb
test
mov
jns
test
int
xor
leave
pop
pop
lods
loopne
int
negl
ss
and
in
mov
scas
push
loope
mov
aaa
sbbb
movsl
jp
inc
dec
in
fistpl
lret
cmpsl
jno
mov
inc
push
fsubrl
popf
fadds
cmp
sar
or
test
inc
ret
push
out
loope
stos
imul
inc
std
repnz
insb
mov
dec
ret
jp
lret
inc
fwait
inc
and
add
and
int
lods
aaa
test
lock
jno
pop
inc
push
cltd
lock
cmpsl
and
int
add
pop
sahf
or
cmpxchg
xor
push
fists
sbb
mov
arpl
aam
in
movsb
lock
jecxz
mov
pop
pop
mov
xor
pop
or
mov
mov
mov
jmp
lahf
mov
mov
fildll
aaa
inc
mov
xor
xchg
or
sbb
sti
and
xchg
and
popf
mov
cmp
dec
inc
subb
popa
jmp
ss
jg
or
sbb
adc
cltd
pop
adc
cmpsb
int
xchg
das
ljmp
bswap
std
pop
and
jle
in
mov
jb
ss
stos
outsl
pop
mov
mov
jl
call
sbb
popf
sbb
pop
cmp
and
test
ds
jge
loopne
xchg
insb
xchg
xlat
xchg
push
and
imul
stos
add
mov
inc
sbb
clc
scas
xchg
addr16
push
pop
xor
jp
cmp
push
negl
inc
xor
fcmove
stos
das
or
or
adc
mov
jae
and
mov
inc
adc
push
xchg
mov
pop
ds
push
xchg
dec
adc
rcll
xchg
mov
dec
cs
push
sbb
mov
or
xor
mov
jnp
rcll
mov
mov
dec
xchg
mov
add
mov
sub
or
addr16
das
push
loop
push
outsb
fcmove
addr16
aad
mov
xor
xchg
stc
jecxz
icebp
xchg
dec
stos
sahf
cli
enter
sub
je
sub
mov
shrb
pop
pop
sbb
clc
sub
shlb
ja
daa
pop
mov
add
movsl
pop
mov
shrb
and
out
dec
out
mov
jns
dec
inc
clc
sub
mov
adc
cmp
cmp
pushl
mov
movsl
sub
sbb
sar
movsl
mov
insl
jge
push
xchg
pop
mov
scas
push
sub
ror
cmp
adc
push
es
and
lahf
xchg
xchg
sub
loope
adc
add
inc
addr16
or
mov
xorl
jo
roll
pop
adc
push
push
jo
mov
test
xchg
shl
scas
pop
xchg
and
adc
aad
fistps
mov
pusha
jge
les
int
icebp
mov
jo
sahf
in
sbb
test
mov
rcr
pop
sub
inc
rcl
xchg
adc
mov
mov
mov
das
dec
or
push
mov
push
jp
das
pop
fxch
cmp
dec
ds
inc
testb
sub
xchg
pop
outsb
mov
pop
adcl
popa
cmp
out
icebp
pushf
insb
mov
clc
test
mov
adc
lods
popf
daa
pop
aas
adc
sarb
mov
mov
sbb
jl
mov
push
inc
xchg
xor
rcrb
jge
mov
cmpsb
or
sbb
push
add
push
and
sub
mov
int
mov
int
dec
sti
faddl
fidivs
cld
pop
xlat
mov
mov
inc
rcll
frstor
xchg
mov
imull
cmp
daa
rcll
add
or
lods
stos
adc
addr16
ds
divl
push
lahf
push
jge
das
or
data16
xchg
cmp
cmp
scas
stos
dec
jmp
movsl
dec
cltd
and
jg
lret
stc
ret
cmp
sub
dec
lock
push
dec
lret
inc
dec
push
xor
fcomp
lds
or
jae
loope
mov
push
mov
popf
scas
fwait
in
cli
xor
add
jo
jg
insb
cmpsl
xchg
push
mov
fcoms
stos
xchg
stc
js
loopne
sub
mov
cmpsl
int3
sarl
sub
ss
lcall
lock
call
mov
mov
adc
or
ds
mov
out
or
push
loope
icebp
cmp
int3
gs
in
push
aad
pop
adc
into
xchg
xor
mov
imul
aad
out
loop
hlt
inc
data16
mov
mov
dec
and
sub
lcall
div
fwait
xor
loop
mov
add
pop
cmp
jnp
add
shlb
xchg
xor
aas
scas
mov
or
cmp
rorb
sbb
insl
inc
push
adc
jg
in
push
pop
pop
test
popa
lods
ret
cmp
xchg
xor
sbb
js
xorb
cmp
in
lret
repnz
push
out
mov
jbe
and
or
idivl
lods
ss
adc
das
popf
imul
lods
iret
xor
pop
and
jl
outsb
cmc
in
fnstcw
xchg
push
ja
fwait
sarl
and
stc
pop
xor
add
mov
inc
pop
pop
shll
xchg
hlt
push
shlb
lock
neg
cs
dec
mov
xorl
sbb
es
aaa
cli
xlat
daa
pop
xlat
jns
push
adc
fcmovne
xorl
insb
xchg
inc
pop
jns
jnp
out
pop
iret
xchg
xchg
call
pop
stos
out
addr16
mov
inc
inc
inc
sarl
jbe
lret
leave
sub
push
lods
bound
mov
pop
cld
lahf
cltd
scas
push
std
push
add
cwtl
push
mov
fs
ss
and
or
sbb
cmp
jae
lahf
sub
imul
repz
pop
jae
add
nop
int3
stos
cwtl
test
into
jl
pop
das
cli
push
loopne
dec
xchg
pop
cmp
mov
pop
addl
jbe
mov
mov
out
sub
andb
int3
or
fildll
cmpsl
inc
push
adc
ret
push
cmc
adc
sbb
testb
mov
ljmp
lret
pop
pop
add
push
cld
call
or
movsb
jecxz
jbe
popf
mov
outsb
lahf
dec
lds
mov
das
xchg
fmuls
inc
push
jp
mov
test
jmp
sub
and
xor
inc
mov
das
push
cmp
cmc
jl
inc
mov
mov
stos
mov
subb
sbb
pop
lds
jp
ret
enter
dec
xchg
hlt
pushf
insl
and
xchg
mov
ret
push
adc
in
adc
jns
mov
cmp
incb
sarb
or
pop
or
ljmp
xchg
stos
inc
ss
sub
sbb
cld
mov
gs
hlt
aas
js,pn
js
mov
inc
mov
mov
push
in
xor
shll
push
sarl
mov
call
in
mov
loop
mov
sbb
testl
or
enter
mov
sub
pop
mov
mov
icebp
mov
push
mov
mov
mov
loop
xor
dec
scas
xchg
movsl
lcall
cwtl
aam
incl
test
push
lods
imul
xchg
push
dec
sub
fdivrp
lods
js
je
push
mov
dec
mov
push
lea
and
lcall
stos
cli
and
ret
cmp
icebp
ja
inc
aam
lock
push
add
ljmp
lods
jl
pop
adc
add
repz
push
mov
mov
mov
inc
cmp
hlt
mov
adc
test
insl
jp
jle
jno
fildl
jmp
movb
dec
fdivrp
nop
xchg
xor
sbb
popf
ljmp
xor
inc
sub
sbb
out
nop
outsb
fadd
or
mov
mov
cmp
xchg
test
mov
arpl
outsl
inc
pop
push
fdivrl
cli
test
sbb
xchg
aad
or
inc
pop
cs
jae
jecxz
fidivs
addr16
iret
dec
inc
fiadds
add
popa
and
jp
leave
mov
inc
jle
or
insb
push
adc
mov
add
pop
ss
into
dec
xchg
lock
sbbl
jmp
and
incb
push
adc
push
aam
imulb
lcall
push
repz
loop
jae
cli
mov
push
dec
sub
mov
mov
stos
mov
adc
pop
cmp
adc
stc
sub
sub
dec
jo
cwtl
cmpsb
sub
outsl
insb
js
dec
stos
push
adc
icebp
dec
ja
inc
loopne
lret
mov
jg
add
aam
add
repnz
out
xor
pushf
imulb
lret
or
xchg
lcall
loopne
xchg
pop
or
xlat
stos
or
cltd
cmp
fmull
pop
repnz
jg
scas
inc
jnp
mov
pop
adc
cld
inc
imul
lds
or
xor
jne
test
jae
addb
sub
xor
xlat
jp
dec
dec
imul
jle
or
pop
fdivr
pop
je
pop
lret
aad
or
popa
mov
cmp
cmpsl
mov
lret
xor
inc
mov
lret
jg
add
sub
dec
aaa
stos
fdivl
push
and
add
daa
lret
pop
cmpsb
or
add
jecxz
pusha
into
inc
nop
adcl
mov
mov
mov
sub
shlb
xor
sub
cli
add
mov
push
jne
lret
mov
incl
dec
lret
call
or
je
pop
scas
jp
movsb
ret
mov
test
mov
outsb
mov
sbb
imul
popa
sbb
sub
andl
adc
aas
adc
fdivl
testb
adcb
pop
cmp
add
rolb
xor
pushf
jns
fsts
xchg
in
or
es
mov
aaa
lock
mov
xor
pop
dec
jnp
sbb
movsb
dec
pop
movb
mov
das
and
cltd
js
push
add
xchg
ret
mov
sub
dec
fnstsw
pop
mov
arpl
inc
outsl
add
xor
pusha
popa
pop
das
mov
das
loope
xchg
clc
jae
inc
ds
fs
cmp
mov
jbe
cmp
in
lods
cmp
in
adc
loop
sarb
ja
loop
add
jnp
dec
gs
add
mov
mov
mov
xchg
mov
int
ret
insb
shrl
xchg
push
repnz
rcll
ljmp
repz
subl
push
es
pop
adc
std
jns
adc
mov
xor
scas
js
mov
jge
sub
ret
xor
mov
mov
mov
movsb
out
dec
sub
idivb
jmp
lcall
mov
jno
mov
pop
adc
cmp
jo
cs
fcomp
in
inc
in
cli
ret
jl
fcmovnb
or
cmp
aam
add
and
movsb
mov
and
int
aaa
movsb
scas
mov
mov
push
pop
pop
pop
sti
rorb
sbb
xor
lret
imulb
lret
sahf
add
stos
rolb
movsl
call
test
fcomi
repz
mov
dec
jle
xor
xor
in
sub
repz
ret
pop
xchg
arpl
outsl
mov
stos
repz
fwait
xchg
sub
cmp
and
mov
sarl
insb
mov
xor
xchg
mov
ds
jl
out
mov
int
or
adc
out
dec
outsb
imulb
jno
std
mov
jp
inc
nop
jl
into
movsb
mov
scas
sub
xor
mov
stos
push
scas
std
sti
pop
data16
and
xchg
shl
jle
mov
outsl
loop,pt
mov
jle
cmp
push
and
in
cmpsb
push
and
sbb
std
sbb
jno
hlt
dec
ja
and
add
shrl
inc
arpl
sbb
push
dec
popa
fistpl
jb
add
imul
jg
mull
mov
cmp
jl
dec
pop
adc
push
jp
inc
jle
sub
xchg
jg
pop
cmpsb
ss
cmp
dec
xchg
addr16
mov
lret
adc
enter
dec
cwtl
mov
int3
push
orb
xlat
jge
test
adc
aad
dec
test
jmp
imul
mov
inc
lds
jne
or
jg
in
and
insl
int
out
pusha
pop
cwtl
and
push
xchg
dec
xor
imul
fwait
sub
xor
mov
adc
dec
insb
imul
cmp
cmc
ret
adc
lahf
fs
andb
or
xor
rcll
nop
imul
test
push
push
add
sti
add
lret
rcrb
mov
ror
fildll
mov
pop
cmpsb
mov
shlb
mov
sub
sbb
jge
mov
mov
icebp
add
cwtl
mov
js
test
add
dec
inc
dec
adc
lea
fidivrl
rcll
gs
mov
dec
pop
stos
and
xchg
nop
addr16
push
mov
pop
adc
or
aas
loope
in
repz
test
mov
nop
fdivl
xor
shr
jo
mov
cmp
scas
or
leave
cld
insl
pop
xlat
push
or
dec
lcall
add
xchg
mov
push
test
jmp
xor
jp
sarl
fs
aas
mov
sbb
mov
es
pop
int3
or
in
inc
fmuls
pusha
aad
sub
das
loope
call
jo
das
insb
jne
push
add
lods
fwait
pop
or
rcrl
sbb
pusha
sbb
pop
pop
aad
mov
in
fbld
cwtl
cli
push
pop
fnstsw
jge
dec
inc
mov
xor
bound
aaa
push
jmp
mov
cmc
cld
cmpsb
outsl
outsb
mov
push
push
xchg
sbb
daa
dec
mov
jmp
mov
rol
xor
mov
fidivrl
inc
lds
shlb
pushf
or
xor
lea
test
fnop
sub
sbb
lods
dec
xor
pop
std
nop
addr16
inc
repz
jge
xchg
scas
fnstenv
out
testl
adc
pusha
xchg
decl
cltd
xchg
adc
repnz
pop
mov
jb
add
jo
xlat
inc
jle
outsl
mov
add
sti
xor
jecxz
dec
es
and
push
adc
xor
loope
ljmp
lahf
and
adc
fisubrs
pop
sub
imul
xor
push
mov
test
stos
cli
mul
xchg
test
int
push
mov
sti
dec
xchg
test
fwait
and
fisttpll
or
sbb
pmulhw
test
ja
jmp
mov
insb
mov
adc
sahf
nop
scas
add
sti
std
cli
sub
leave
dec
mov
div
testb
or
cmp
stos
jecxz
push
int
or
mov
rcll
loopne
or
icebp
addb
or
mov
jg
mov
es
sub
hlt
or
test
and
cmp
std
test
lret
xor
pop
lods
imull
inc
dec
xchg
cmpsl
xchg
clc
rclb
fs
xlat
dec
ds
jle
push
jmp
negl
lods
fisttpl
sub
pusha
fldcw
pop
lahf
pop
push
or
repnz
mov
push
xor
lods
aaa
fwait
sub
inc
andl
mov
mov
cs
jp
sub
call
scas
decb
mov
lcall
dec
jle
xchg
add
stc
imul
jmp
popa
dec
in
subb
iret
dec
fisubrl
in
and
mov
pop
pop
in
lds
iret
xor
inc
jle
dec
dec
mov
jge
inc
js
in
push
rcrb
mov
jmp
fsubrp
aas
cmpsb
sar
or
cmp
adc
xorl
out
stos
test
adc
mov
jge
jns
inc
iret
fmul
cltd
mov
jmp
pop
rol
fsubrl
xor
or
enter
ss
loop
scas
mov
pop
lds
sbb
ret
les
fisubs
sbb
rol
mov
stc
mov
mov
scas
je
ljmp
mov
dec
lahf
inc
insb
push
cmp
ds
clc
push
pop
repz
dec
jns
mov
into
xchg
repnz
mov
pop
lcall
adc
push
dec
mov
call
ja
scas
lret
je
jo
es
mov
pop
out
xor
shr
xorl
cld
cmp
or
pop
pop
sub
xchg
mov
and
mov
scas
shl
movsb
out
xor
nop
jne
inc
or
in
xor
sahf
cmpl
pop
mov
jno
cld
test
aaa
and
push
incb
aam
ret
mov
fisttpll
mov
jg
add
push
insb
inc
cmp
mov
and
xchg
or
inc
hlt
call
pop
mov
rorl
xchg
push
dec
daa
enter
jne
nop
sbb
mov
movsb
jnp
imul
mov
cmp
int
cmp
ret
imul
repz
or
xchg
aas
pop
xor
scas
adc
pop
hlt
xchg
out
sub
dec
push
or
iret
jmp
and
cmpsb
icebp
pop
mov
dec
jns
push
mov
cwtl
jbe
sti
fwait
mul
mov
jecxz
cmp
lods
movsl
dec
mov
ja
out
mov
divl
lods
enter
nop
dec
push
dec
push
pop
adc
push
dec
sbb
jl
sbb
cs
in
in
outsl
jecxz
roll
sub
mov
cmp
ja
push
mov
lods
unpcklps
fs
inc
out
cmp
cmp
cmp
push
pop
lock
mov
mov
mov
shll
and
stc
mov
and
enter
cwtl
jno
cltd
popf
out
std
xchg
insl
and
xchg
xor
iret
std
inc
js
xor
cmc
fs
repnz
mov
push
mov
fistpll
pop
mov
sub
dec
loop
jg
xor
and
in
popa
icebp
jns
push
aam
mov
cmp
aad
je
push
jne
cwtl
pop
aam
popl
pop
mov
cmp
loopne
dec
adc
jns
icebp
add
cmpb
add
jae
out
xchg
stos
insl
in
lock
call
mov
xor
hlt
inc
pushf
in
out
mov
cmp
xchg
jo
inc
test
out
sub
rep
fsubrs
lds
add
scas
mov
push
mov
adc
add
and
jnp
adc
inc
jge
mov
sbb
andl
inc
push
and
outsb
popf
lods
mov
push
mov
cmpsl
mov
pusha
in
inc
arpl
pushf
lret
imul
leave
cmp
mov
sub
ja
cmp
xchg
nopl
xchg
std
jge
outsl
clc
jne
xorl
aas
mov
les
push
loope
lahf
mov
cmp
out
loopne
mov
arpl
call
in
mov
lods
push
lcall
jns
loop
addr16
sbb
rorl
dec
sbb
in
scas
sbb
shrl
xor
xor
jo
lcall
addr16
sub
push
jg
outsl
adc
lret
add
xor
daa
outsb
xchg
sub
and
notl
stos
movsl
clc
je
test
dec
push
je
add
and
jne
loop
pop
fcos
out
push
cmp
imul
push
mov
add
jno
jnp
pop
test
mov
ror
sbb
inc
inc
stc
cmp
mov
pop
inc
xchg
arpl
fsub
push
pop
lea
dec
xchg
daa
pop
into
dec
add
jle
repz
xor
test
fiaddl
sarb
paddd
jns
mov
sbb
cmp
popa
lret
icebp
mov
sbb
push
mov
cltd
insb
push
js
lock
movsb
dec
pusha
sbb
or
out
lret
pop
fdivs
lret
scas
push
fisubs
es
aad
repz
xchg
mov
scas
cmp
aam
imul
add
or
psubsb
dec
iret
mov
cmp
mov
out
shr
mov
jg
jecxz
inc
and
and
mov
push
jge
push
xchg
shrl
adc
addr16
insb
pusha
fs
sub
repnz
cwtl
xor
mov
cmp
add
imull
push
push
and
cwtl
pop
adc
jmp
or
arpl
imul
dec
test
pop
outsb
shll
enter
push
jmp
pop
jnp
dec
andb
test
push
or
idivb
rclb
ret
push
and
jle
mov
sub
jno
test
popa
repnz
das
push
ss
ss
jle
jo
push
mov
jl
pop
shlb
xchg
lock
sbbl
and
pushf
testl
repz
repz
in
mov
loop
je
sbbl
cmp
cmp
xchg
test
cmpsb
mov
dec
aam
inc
xchg
test
sub
cltd
fildl
push
jae
dec
mov
jb
jp
cltd
loope
pop
adc
or
and
lock
idivb
lahf
inc
jle
pop
movsl
sub
xlat
xchg
shll
cmc
je
cmp
cmp
add
jmp
pop
pop
sti
mov
shlb
lock
stc
pop
loope
or
and
adc
shll
fldenv
or
in
insb
divl
rorl
adc
inc
add
push
mov
test
jae
mov
mov
into
push
xor
xchg
pop
mov
loopne
gs
test
push
cmp
jecxz
fldl
test
inc
inc
mov
push
repz
sub
add
or
iret
fwait
cmp
data16
daa
mov
rcll
icebp
xor
push
dec
fdivrs
mov
cmp
sub
sarl
mov
sbb
mov
mov
test
mov
cmp
sub
gs
sbb
inc
fistps
cltd
jo
cmp
idivl
pop
mov
aad
in
test
mov
sbb
sar
push
jl
insl
rcrl
ret
push
xor
popf
mov
rorl
adc
dec
fs
inc
xchg
dec
movsl
or
or
jge
cli
decb
jl
cli
fdivrs
pop
jle
mov
cmc
mov
ja
add
lods
lea
into
sub
jns
push
dec
mov
scas
aam
test
addr16
dec
inc
mov
cmp
add
mov
ss
add
jmp
mov
adc
sbb
iret
outsl
sub
pop
sbb
mov
inc
jns
aas
pop
jb
lock
enter
mov
adc
lahf
loop
into
lret
aad
int
stc
dec
dec
pop
mov
lcall
loope
aad
popa
ret
xlat
lret
scas
inc
cli
pop
add
xchg
movsl
pop
mov
stc
pop
aam
dec
sub
sbb
icebp
mov
call
cwtl
idivl
xchg
pop
xchg
mov
je
out
ljmp
and
mov
mov
pop
test
push
inc
sbb
add
gs
dec
jg
in
mov
insl
cmp
popa
bound
fsub
imul
gs
and
aam
inc
in
in
repnz
std
les
jp
inc
adc
gs
mov
pop
xchg
push
xor
cvtps2pi
in
int
loope
add
adc
imul
js
mov
ljmp
lret
adc
pushf
xor
mov
ror
lret
mov
jno
mov
push
shll
push
mov
les
mov
test
ret
and
mov
addl
subb
cwtl
movsbl
dec
gs
cmp
mov
jge
add
icebp
je
fsubrl
cmpsl
sbb
movsl
stos
pop
out
xchg
fdivl
push
adc
popa
out
mov
std
ja
push
iret
enter
jnp
loope
jle
dec
jns
lods
decb
sub
std
dec
mov
test
dec
jbe
cwtl
nop
jge
ficompl
fwait
mov
imul
jmp
pop
iret
sahf
or
test
out
push
jae
popf
es
xor
sbb
mov
jb
in
gs
rorb
mov
or
gs
mov
push
shll
rcrl
lods
ret
xchg
pop
in
std
xchg
xor
es
xchg
and
xchg
mov
dec
fstpt
lods
lock
ljmp
inc
movl
into
inc
sbb
repz
pop
imul
xchg
cmp
inc
mov
inc
or
dec
dec
pop
pop
cmc
cs
xor
rorl
dec
inc
loopne
loope
add
or
into
movsb
pop
add
dec
imul
xor
push
jae
push
xor
jae
js
adc
cmp
jge
ret
mov
mov
repz
lods
bswap
mov
leave
cmp
mov
sti
test
imul
xchg
daa
aam
ja
sub
mov
mov
popa
enter
in
cmp
scas
jge
dec
pop
mov
repnz
mov
sbb
xchg
cmc
faddp
icebp
adc
das
cltd
mov
imul
fcmovne
jbe
lret
scas
scas
jns
loopne
roll
insb
push
lock
leave
push
fs
lcall
mov
cmpsb
rcrl
pop
jns
mov
add
aas
aaa
inc
imul
stc
push
rolb
mov
cvttps2pi
dec
push
daa
imul
pop
and
fcompl
cmp
mull
xor
dec
jno
xor
pop
mov
sub
mov
sbb
inc
push
or
fwait
mov
call
daa
call
movsb
popf
adc
pop
mov
inc
loop
and
lods
shr
push
stos
push
sub
insl
push
jo
cmp
fistpll
and
lahf
lahf
add
adc
push
les
cmp
mov
sbb
dec
mov
in
xor
inc
push
stos
out
jmp
mov
insb
mov
por
cmpsb
les
scas
sar
cmp
mov
lock
loopne
and
or
movsb
push
bound
jg
xor
xor
shrl
mull
xchg
imul
mov
aad
daa
popf
inc
insb
out
push
test
imulb
fcomps
mov
mov
in
outsl
lock
cld
add
sbb
jge
daa
and
int
xchg
push
push
insl
jmp
pop
pop
clc
fs
fisttpll
int
mov
es
int
arpl
imul
mov
and
pop
dec
dec
jno
mov
inc
clc
bswap
jp
or
cld
xchg
add
pop
jnp
mov
adc
sub
movsb
mov
push
adc
std
in
inc
pushf
jmp
mov
xchg
xor
fs
push
es
fsts
fstp
xchg
jmp
fs
xchg
stc
jp
push
das
call
repz
enter
lret
in
pusha
fwait
inc
in
pop
iret
outsb
sbb
or
in
mov
ljmp
lds
shl
insb
xor
adc
xor
popa
insb
imul
mov
flds
inc
cmp
test
pop
fimull
scas
cmp
xchg
or
daa
and
jecxz
stc
adc
ljmp
sub
or
jae
in
test
xlat
cmp
shr
mull
sub
dec
call
notb
loopne
ss
and
xchg
jmp
pusha
xor
xor
inc
jecxz
rep
push
fbstp
or
xor
jb
lret
push
mov
pop
mov
pop
mov
insb
inc
inc
sbb
sub
stos
pop
lea
leave
push
add
xchg
sub
cmpsb
outsb
mov
add
cmp
mov
lsl
xor
test
push
int
and
cmp
jne
mov
sar
jg
adc
fwait
in
cmp
scas
int
pop
sahf
and
mov
jae
lret
arpl
popf
imul
hlt
sahf
out
imul
sub
fsubrs
jecxz
shl
cli
dec
pushf
mov
sti
jno
je
sub
add
mov
mov
sahf
mov
loop
mov
pushf
xchg
adc
push
int3
add
adc
loope
lds
fnsave
popf
adc
xor
ret
adc
jne
lret
clc
cmp
xor
push
mov
popa
gs
push
jmp
icebp
xlat
rcr
imul
dec
add
gs
into
mov
adc
std
int3
int3
out
out
push
sbb
ja
push
mov
pop
scas
call
or
inc
femms
dec
icebp
icebp
cwtl
jmp
pop
imul
pop
cli
mov
jmp
cmp
leave
enter
or
aam
push
cs
or
mov
xchg
push
jo
out
das
popa
cmp
call
js
mov
push
push
arpl
push
ds
inc
call
scas
test
xor
popf
lock
sbb
inc
roll
das
mov
dec
in
xor
jb
cmpsb
xor
daa
aad
push
inc
cmp
std
jo
sub
inc
adc
pop
dec
mov
repz
and
push
dec
mov
jno
inc
hlt
clc
mov
sahf
xlat
dec
sbb
test
adc
inc
cld
loopne
pop
mov
cmpsb
outsl
add
in
arpl
xor
sbbb
xor
mov
jo
push
push
sahf
mov
aaa
xor
sub
cld
xchg
test
aad
xchg
mov
mov
repz
mov
xor
adcl
pop
pop
cmpsl
jae
jo
jg
ret
dec
adc
pop
inc
lds
jl
pop
nop
sar
mov
lea
out
cmp
scas
ret
ja
je
insb
adc
in
pop
test
cmpsb
sbb
mov
cld
mul
xor
or
adc
add
imul
insl
cmp
push
add
jle
mov
inc
and
and
cwtl
loopne
popa
mov
adc
lea
push
mov
in
stos
pop
add
pop
insb
push
sub
filds
mov
fsubp
adc
pop
mov
je
lret
test
add
xchg
add
shlb
adc
rolb
in
fdivs
aas
int
iret
push
mov
out
sbb
add
and
adc
add
outsb
fdiv
popf
add
push
scas
fsubl
js
mov
out
push
or
push
fs
jmp
icebp
adc
loop
out
ret
mov
popl
sub
pop
or
test
pop
and
add
orl
or
pop
jb
rcll
mov
pop
aas
jb
stc
adc
fucomi
sbb
repz
nop
inc
inc
push
cmp
pop
dec
test
push
ss
jl
out
mov
cmpsl
insl
in
js
cwtl
aas
cmp
fistpl
lcall
das
into
mov
out
mov
callw
cmp
jb
inc
repz
push
xchg
cmp
or
dec
fists
imul
mov
into
push
mov
or
test
mov
ja
xlat
mov
aam
repz
xchg
jp
cmp
subl
mov
xor
ret
cwtl
punpckldq
jo
lods
mov
lidtl
jne
aam
fs
or
imul
and
iret
ret
xor
pop
and
jge
jno
or
les
incb
sub
xchg
sahf
imul
jo
outsl
lret
mov
xchg
dec
and
call
push
sub
inc
fs
bound
mov
mov
shlb
mov
mov
add
jnp
and
and
lahf
nop
jnp
jmp
inc
sbb
jmp
add
rolb
xchg
aad
push
clc
xlat
push
dec
pop
push
lds
cmp
dec
pop
or
or
push
add
dec
mov
popf
ja
dec
inc
cmpsl
mov
stos
jns
and
jae
jge
pop
jecxz
ficoml
fisttpll
sbb
inc
flds
inc
scas
ljmp
mov
xchg
test
jne
jb
aam
sub
and
lods
imul
jmp
jg
sbb
xchg
das
arpl
iret
std
popa
mov
xchg
and
outsl
testb
add
jae
pop
lods
pop
add
pop
add
xchg
loopne
jle
sbb
mov
lcall
jp
xor
pop
pop
ss
push
cmp
add
mov
mov
bound
scas
xchg
rorl
mov
xchg
scas
ds
sub
jg
dec
cmc
fsts
push
adc
pop
out
adc
and
cmpsb
test
fcomps
jb
mov
fdivs
xchg
leave
test
ja
xor
mov
xchg
add
out
xor
repz
iret
leave
xchg
mov
clc
lds
daa
sbb
lcall
add
mov
mov
incl
sti
cmpsb
add
jo
iret
ret
inc
ret
sbb
stos
clc
cltd
mov
push
fstpl
xchg
fnsave
leave
sti
test
dec
xor
dec
fiaddl
es
scas
jns
lds
mov
loopne
scas
mov
jb
pop
sbb
sbb
jle
test
stos
sbb
scas
in
mov
daa
rclb
push
add
dec
aam
lcall
mov
jns
jns
inc
fdivp
mov
js
stc
sbb
or
lds
pop
imul
lahf
xchg
mov
or
shrl
out
xchg
insb
fwait
loop
sub
push
xchg
pop
cmpl
inc
sbb
sub
push
jbe
outsl
jge
push
jmp
subl
sbb
xor
cwtl
push
scas
arpl
or
in
dec
cmpsb
xor
adc
adc
sub
ljmp
xor
imul
or
fists
mov
popf
ret
ret
pop
add
jge
sbb
cmp
cmc
test
repz
popa
gs
fsubl
mov
push
push
movsb
incl
je
pop
aad
rcll
test
movsb
clc
mov
and
cwtl
xchg
lret
ret
adc
out
aaa
mov
cmp
gs
movsb
subl
sbb
mov
hlt
add
mov
lea
adc
lock
push
dec
les
dec
loop
je
repz
das
sub
cmp
test
or
xchg
imul
adc
aaa
pop
cmp
jne
jb
adc
out
pop
add
xchg
fs
out
enter
and
pop
out
sti
xchg
pop
fstpl
cmp
dec
dec
out
or
pop
jbe
aad
cmp
loope
pop
pop
mov
js
xor
xchg
repnz
aas
sub
enter
cmpsl
add
out
push
cmp
loop
scas
outsb
mov
add
mov
ret
xor
push
int
insl
std
mov
loope
mov
dec
lcall
daa
rcrl
xor
in
es
sti
enter
outsl
pushf
add
test
push
lret
inc
lods
jbe
mov
dec
inc
pop
in
and
add
or
jle
shl
fwait
add
pop
lods
jp
jb
stos
sbb
pop
lret
xchg
decb
mov
push
stos
arpl
out
int
into
shrl
inc
sbb
sar
pop
sbb
and
jae
mov
rcrl
pop
add
sahf
xor
adc
sub
mov
fbstp
add
fidivrl
jbe
push
mov
jne
mov
sbb
cmp
mov
insl
or
loope
dec
cwtl
les
lea
mov
mov
jl
leave
stos
std
rcll
or
and
push
mov
xor
pop
xchg
mov
shrb
dec
and
cs
ljmp
outsl
mov
bound
mov
jmp
adc
outsb
sbb
stos
jns
adc
out
fidivrs
cmpsb
jle
scas
mov
loopne
lahf
icebp
orb
dec
fdivr
cs
push
adc
in
shrb
xlat
xchg
fdivs
xor
test
sbbb
test
cmc
aam
imul
sub
sbb
pop
mov
pop
pop
cmpsb
outsb
and
dec
sub
jl
imul
decl
call
mov
ret
jne
adc
xchg
adc
out
clc
movsb
ds
sub
hlt
pop
sbbb
shll
popa
mov
sarl
cmpsb
cmp
sub
mov
in
push
jno
pop
mov
xor
xchg
push
sahf
loop
ljmp
imul
ljmp
and
push
dec
popa
rcll
or
jp
and
inc
imul
clc
xor
in
ja
lahf
ficompl
xchg
mov
fidivrl
jecxz
and
mov
jbe
pop
push
pop
mov
xor
sbb
adc
or
cmp
dec
adc
stos
loope
lods
pop
js
push
imul
mov
jmp
pop
dec
ds
jne
jmp
aas
dec
sbbb
push
fcompl
fucom
in
jne
pop
jb
and
push
dec
neg
add
add
mov
push
cmp
jmp
into
shl
inc
pop
sbb
push
pop
vmovlpd
sbb
aam
dec
sbbb
nop
mov
pop
add
arpl
std
adcb
and
fisubrs
and
sub
popf
lods
or
mov
push
push
sahf
mov
cmc
inc
xchg
mov
ret
dec
pop
sti
pop
es
or
decl
pushf
xchg
add
addr16
faddl
ret
dec
add
out
loope
out
in
pop
pop
stc
cli
pushf
scas
in
pop
jae
inc
sbb
andb
clc
mov
inc
jne
add
cmc
sahf
cmp
popa
js
mov
testl
out
or
ljmp
fadd
sbb
repz
mov
pop
decb
sbb
ljmp
cmp
mov
add
jp
mov
pop
mov
dec
scas
je
lahf
popf
lds
cmp
rcrb
mov
jnp
cmpb
and
ss
xchg
dec
mov
jmp
popf
pusha
notl
mov
and
sub
inc
xor
fmuls
inc
push
push
into
jmp
in
mov
mov
lea
jg
add
lds
fiaddl
stos
inc
xor
popf
inc
xchg
and
and
mov
dec
jl
hlt
mov
and
add
jne
fcompl
mov
dec
sbb
fisttpll
cltd
jge
rolb
inc
cmc
pop
jle
sub
rclb
push
mov
iret
out
mov
outsl
push
negb
daa
xor
push
xchg
push
test
lds
xchg
clc
popf
addb
push
sbb
enter
push
jmp
sub
mov
dec
cltd
pushf
and
mov
mov
ja
insb
shr
loop
loopne
mov
outsl
add
lret
fdivs
stos
es
and
inc
xlat
enter
sub
mov
inc
out
xor
pop
repnz
and
mov
inc
invd
lcall
cmovge
jg
subb
sub
loope
push
dec
pop
lahf
mov
inc
and
xor
test
data16
mov
xchg
push
cli
jbe
jb
das
fidivs
xor
shlb
jbe
sub
ret
inc
lret
jmp
andl
in
into
test
outsl
push
mov
dec
lods
or
adcl
mov
jae
xchg
pop
cmp
out
and
xchg
push
add
pop
inc
mov
sbb
xor
ret
xor
ja
sar
xor
dec
xlat
jb
das
out
mov
arpl
mov
rcll
pushf
dec
hlt
cmp
pop
cmp
loopne
outsl
dec
loopne
sbb
loope
movl
sub
mov
pop
mov
enter
mov
dec
jmp
mov
ja
fcoml
jge
in
pop
adc
push
push
push
jl
ds
fcmovnbe
mov
loope
ds
sbb
popf
fisubs
xchg
push
rclb
arpl
lahf
fisttps
pop
shll
sbb
add
mov
mov
lret
fstpl
adc
ficoms
iret
imul
push
mov
sub
dec
pushw
packsswb
add
icebp
push
bound
imul
into
in
repz
stc
mov
stos
xor
cmc
mov
arpl
cmc
xchg
cmpb
lret
setg
dec
adc
xchg
jmp
xchg
scas
imul
test
psrad
aam
cmpsl
cmpsl
aad
and
stos
es
test
adc
lahf
pop
sahf
and
mov
fdivs
xchg
push
add
stos
xorl
stc
dec
xchg
cmp
inc
aam
jg
cmp
mov
mov
sahf
aad
or
adc
repz
out
lds
cltd
dec
dec
inc
imul
jge
ja
mov
nop
lods
daa
das
call
jno
sbb
cmp
xchg
lea
adc
mov
incl
sbb
xchg
pop
lods
sbb
dec
into
jbe
repz
dec
xchg
xchg
inc
xor
sbb
mov
test
adc
jge
mov
cmc
arpl
sti
in
pop
fcoms
inc
add
cmp
imul
pop
pop
add
scas
jo
push
js
mov
sbb
scas
push
push
fcompl
sub
jp
jae
lods
push
xchg
loopne
sbb
ror
push
hlt
lea
jae
push
pop
xchg
adc
mov
leave
cmp
lods
cmpsl
pushf
data16
stc
js
mov
movsl
add
push
adc
inc
jbe
and
push
in
add
loopne
pop
sub
sti
mov
inc
ds
adc
arpl
add
movsl
sbbb
movsb
test
push
cli
lcall
lret
push
lahf
fidivrl
or
mov
fwait
jg
dec
sub
fnstcw
stc
shrl
ljmp
mov
mov
jmp
lret
sbb
stc
jnp
push
mov
mov
xchg
sbb
lds
jmp
and
fisubrs
arpl
push
push
das
inc
xor
aas
jge
pop
aam
push
xchg
repz
std
cmp
cmp
xor
loope
fdiv
lret
cs
test
cmp
movsb
push
xchg
rclb
lret
lret
rorl
mov
fcoml
add
popa
mov
pop
sub
popf
push
and
sbb
or
testb
in
in
lret
mov
mov
and
sub
pop
out
or
rclb
fmul
mov
aas
lcall
stos
mov
xor
sbb
jne
insb
test
pop
adc
sub
mov
mov
push
icebp
xorb
xorb
sub
ja
pusha
aad
call
push
mov
mov
in
popf
shl
xchg
sbb
sub
loope
sti
jb
push
dec
xor
xchg
add
ss
mov
lret
inc
adc
add
xchg
fs
lods
jbe
jecxz
or
mov
sub
cmp
adc
lods
stos
popl
add
xor
mov
push
mov
fwait
lock
push
sti
cli
pop
add
mov
add
push
out
pushf
pop
xor
pop
mov
fidivrl
fnstenv
notb
mov
jbe
sahf
lea
out
bound
jmp
xor
cmp
dec
inc
jae
icebp
cwtl
inc
cmpsl
pop
jnp
nop
cwtl
sub
mov
dec
push
dec
add
jo
mov
or
cmp
ss
mov
or
js
xchg
jmp
test
pop
faddl
lods
and
sbb
cmp
lret
cli
inc
outsb
sub
repz
iret
sbb
mov
aad
sub
push
inc
pop
cmp
lods
push
mov
aad
jns
or
jae
mov
jns
adcb
mov
cmp
fstps
iret
jmp
enter
sub
sub
push
lret
imul
pop
mov
xchg
outsl
cmp
cmp
aad
xchg
jns
stc
adc
mov
cli
pop
imul
push
gs
stos
adc
cmp
fwait
mov
test
inc
sub
dec
lds
in
xchg
imul
cli
jle
sbb
pop
xchg
movsl
sub
mov
imul
pusha
fcomps
in
into
mov
dec
jbe
xor
arpl
ret
mov
test
or
jmp
xor
dec
test
push
or
jp
xchg
pop
ret
inc
lahf
in
sahf
repz
mov
mov
sbb
test
movsb
lcall
fbstp
xchg
psrlw
into
pop
push
movsb
pop
imul
or
xchg
lods
jb
push
mov
lcall
es
add
adc
mov
or
mov
mov
adc
push
test
mov
out
fimull
data16
pushf
fnsave
or
loop
cmpb
nop
stos
dec
lret
cli
or
mov
jmp
nop
ljmp
push
or
sar
mov
mov
push
loop
and
xchg
mov
xor
or
lcall
pop
nop
lock
and
leave
cmpsl
ret
or
dec
cmpsb
pop
dec
push
icebp
lret
stos
sub
repnz
cmpsb
push
jecxz
inc
cmp
mov
mov
jmp
pop
repz
sbb
scas
call
nop
rol
mov
adc
and
and
pop
out
in
sub
stc
test
mov
fiaddl
mov
lock
sbb
insl
push
outsl
mov
lahf
xchg
inc
dec
jmp
inc
fisubrl
add
xchg
rorb
fisttps
jge
ljmp
push
push
adc
lods
not
inc
adc
loope
ds
dec
fcmovnb
add
faddp
outsb
sti
ficompl
lcall
out
sbb
and
push
loope
ret
daa
jecxz
cmc
clc
lock
adc
int
sub
ds
cmp
out
push
sub
testl
movsl
jae
imul
je
out
aam
bound
adc
sti
stos
sub
dec
jp
or
rcl
aad
pushf
cmpsl
push
pop
inc
pushf
push
jle
jmp
addr16
dec
out
mov
hlt
negb
xchg
or
sahf
cmp
aad
jg
addr16
mov
popf
inc
addr16
stos
mov
dec
out
add
cli
mov
loope
scas
push
popf
out
add
jl
test
stos
mov
dec
rcrl
je
inc
in
negb
cmp
xchg
stos
mov
mov
and
mov
jb
aaa
into
jno
inc
inc
iret
add
out
cld
dec
aas
pop
scas
mov
sub
add
mov
add
dec
xor
lea
lcall
pop
or
js
jl
xchg
or
push
ljmp
sub
int3
orl
fldl
cmp
fsub
push
sbb
fs
inc
je
ljmp
pop
mov
leave
xchg
fnstsw
movsb
push
push
xchg
add
roll
pop
jns
cmpsl
ja
out
mov
aad
outsb
scas
les
popf
cmp
fs
outsb
lcall
icebp
das
jno
mov
xchg
push
push
into
pop
daa
leave
or
inc
sub
rcll
pop
out
fsubrs
scas
fidivrl
and
xlat
dec
inc
dec
mov
aad
add
add
popf
test
ret
and
cs
mov
aad
rcll
push
adc
and
data16
adc
cmp
mov
mov
jb
sub
cmp
dec
test
mov
stos
insb
pop
dec
ss
and
mov
xchg
es
inc
ss
insb
mov
cmp
icebp
insl
dec
or
test
inc
pop
imul
pop
adc
pushl
xor
inc
sub
and
fnstenv
cltd
and
push
pop
xlat
call
dec
out
int3
cli
mov
sbb
dec
and
dec
adc
shlb
xchg
cwtl
sub
dec
and
fidivl
dec
ljmp
loope
jecxz
jmp
bound
aam
arpl
test
insl
sub
add
ret
jg
jo
jg
lods
xchg
mov
or
rcrl
dec
xchg
xchg
or
test
cmp
mov
gs
sub
outsl
pop
or
jns
and
int3
dec
push
cmp
imul
jg
dec
mov
jo
sarb
pop
cmp
pop
aas
loopne
loope
mov
push
movb
or
pop
cwtl
fdivl
test
xchg
adc
dec
insb
pop
lret
cmp
cmp
add
data16
dec
jo
ficoms
mov
mov
xor
vpmovmskb
or
and
sbb
adc
ret
gs
rcr
fistpll
cmp
sbb
mov
mov
push
test
and
jp
je
xchg
cld
xchg
inc
mov
dec
jmp
loope
call
outsb
jge
insl
fs
loop
enter
xor
loopne
mov
pusha
int3
nop
fisubl
insb
cmc
and
dec
data16
out
dec
add
dec
scas
repnz
sbb
nop
xchg
jle
ret
jmp
std
adc
popa
jne
in
adc
hlt
lahf
addr16
mov
cmp
mov
inc
adc
ficoms
div
cmp
xor
push
insl
inc
fistps
aas
or
out
in
mov
dec
add
xchg
sub
loop
sahf
or
add
dec
sarb
and
mov
pop
sti
mov
in
cmp
xchg
outsb
std
fdivr
divl
data16
push
and
jmp
test
push
mov
lret
xchg
rcr
xchg
push
and
xor
jnp
hlt
rcrb
in
shrb
add
mov
das
lret
test
ss
shl
or
inc
stos
mov
sti
and
fildl
sbb
int
test
popf
pop
sub
or
xchg
ret
out
hlt
cmp
es
mov
mov
negl
cmp
add
mov
aad
out
popf
xchg
rcrb
loop
lret
or
sbb
cld
mov
mov
adc
mov
negb
sub
jno
clc
lahf
loope
push
mov
cmc
xor
cmp
sub
sbb
data16
push
mov
and
inc
icebp
push
lods
pop
pop
pop
popf
xor
in
inc
mov
loop
repz
int
dec
jae
fldt
mov
leave
pop
ret
out
dec
sbb
adc
adc
mov
into
scas
mov
sub
lret
jns
or
dec
divb
rcll
ficoms
subl
sub
int
test
lahf
test
jmp
mov
jl
gs
addb
movsl
push
cmp
mov
push
or
xchg
sbb
xchg
ss
cmp
stos
scas
add
xor
movsl
cltd
mov
mov
icebp
cltd
adc
adc
popa
lods
mov
les
mov
sbb
xchg
mov
mov
stos
sub
pop
mov
fidivrl
dec
pushf
stos
inc
mov
fs
pop
dec
daa
cmp
nop
mov
and
push
push
ss
xchg
je
or
xchg
sub
ss
lret
xchg
icebp
adc
add
xchg
cmp
mov
ljmp
cwtl
cmpsl
imul
mov
mov
lds
insb
lock
mov
insb
dec
mov
bound
or
loopne
ljmp
cmp
add
inc
jmp
cld
fsts
lock
les
sbb
xor
pushf
das
movsb
cmp
ret
add
les
xchg
repz
pop
insl
sbb
jne
jno
in
fwait
pop
test
lds
int
shr
mov
mov
nop
xchg
dec
push
mov
push
adc
in
mov
xlat
stc
ret
pop
adc
or
dec
out
insl
xor
xchg
imul
js,pt
jbe
pop
jle
dec
jge
sbb
cltd
fbstp
hlt
dec
adc
push
push
aas
rcrl
mov
out
es
mov
rorl
pop
xchg
pop
hlt
stos
adc
outsl
ret
pop
sbb
inc
push
pop
loop
leave
pop
insl
pop
nop
xchg
cmp
arpl
xchg
aaa
xor
fdivrs
push
scas
inc
push
sti
idivl
push
xor
loopne,pt
xchg
mov
repz
fdiv
data16
pop
sbb
lahf
movhps
sub
xchg
xchg
dec
and
sub
mov
mov
fs
jns
jbe
xchg
decl
rorl
adc
mov
popf
xchg
mov
cmp
nop
scas
ss
dec
pop
add
into
mov
xchg
add
aad
pop
mov
fsubrs
push
fs
pusha
nop
push
sahf
into
mov
jns
sub
and
inc
clc
push
fdivrs
mov
insl
xchg
xor
stos
mov
mov
add
xchg
add
or
mov
push
push
je
shl
loop
pop
xchg
repz
ljmp
cmp
arpl
jns
ret
pop
and
daa
adc
xor
mov
add
mov
pop
inc
scas
scas
rorb
test
sub
mov
xor
out
mov
sub
hlt
jge
dec
fbstp
xchg
in
mov
and
fisubrl
push
divb
stos
mov
pop
jo
push
out
pop
and
adc
stos
sub
aaa
and
and
xor
cmpsb
sbb
adc
and
fiadds
fmuls
or
out
jl
fidivrs
cmp
mov
jns
les
lds
sbb
les
ss
or
mov
xchg
jb
fmul
sti
mov
sbb
cmp
mov
addr16
test
sbb
dec
xorl
jle
outsl
and
in
fs
adc
repnz
rcrb
add
loope
aas
incb
popa
fwait
int3
lret
js
pop
int3
call
or
gs
cmpsl
push
push
push
pushf
loop
sub
inc
xchg
shl
add
gs
push
into
mov
push
iret
sbb
sub
sub
mov
scas
mov
out
mov
sbb
inc
cmpsb
mov
push
ja
rorb
std
xchg
scas
push
popf
pop
arpl
stos
loop
pushf
adc
push
lret
mov
mov
and
and
aam
add
ds
jmp
jl
adc
dec
fisttps
mov
std
hlt
enter
dec
jne
aad
lahf
xchg
mov
cmp
and
lcall
push
xchg
mov
cwtl
pop
leave
fisttpll
pop
test
pop
mov
jb
xor
shlb
xor
rcll
and
mov
mov
add
add
cli
xor
xor
in
add
ret
arpl
enter
aaa
aas
sub
pop
dec
jbe
add
in
push
fisttpll
aam
jns
or
jbe
icebp
sub
push
out
imul
mov
test
arpl
pop
mov
popa
xor
outsl
notl
jl
dec
loop
xor
push
mov
and
mov
arpl
mov
sub
sub
push
shl
repz
jb
into
jne
adc
hlt
daa
inc
test
jnp
lods
lcall
sbb
out
xchg
push
xor
in
sbb
test
add
adc
std
je
sub
jmp
movsl
mov
mov
cmp
lods
test
nop
add
adc
adc
cmpsl
xchg
daa
lret
jmp
cmp
scas
std
out
mov
xor
arpl
cmp
jns
inc
mov
js
imul
push
in
test
fistpll
sahf
push
loope
sbb
and
stos
pop
xchg
xchg
add
movsb
or
cmc
push
hlt
push
inc
push
es
adc
scas
mov
push
pop
mov
push
je
or
xor
jnp
lcall
sbb
repz
dec
or
stos
mov
ss
loope
mov
inc
insb
mov
cltd
mov
aas
lret
pop
adc
sub
push
test
bound
mov
xor
xchg
add
nop
add
aas
movsl
sbb
lret
aas
stos
inc
mov
ds
popf
dec
fwait
data16
cwtl
mov
push
fisubrs
xchg
push
push
xor
push
gs
sub
mov
outsl
push
lock
arpl
jle
jle
lahf
dec
dec
ss
cmc
rol
mov
xor
pcmpeqw
les
ror
jge
xchg
jns
mov
dec
jl
add
scas
jnp
xchg
es
cmp
aam
ja
ret
sub
lcall
paddw
mov
and
loop
mov
inc
mov
mov
loopne
mov
int3
into
cwtl
repnz
sbb
or
fmull
ljmp
xor
add
sbb
out
movsl
sbb
popf
sbb
xchg
sub
scas
add
shlb
decb
call
movsb
les
mov
cmpsl
lret
cmp
in
mov
cmc
and
mov
scas
ds
outsb
mov
cli
inc
popa
popf
int
andb
cmp
and
insl
mov
outsb
int3
dec
out
mov
mov
iret
ja
jno
sti
ret
bound
push
pop
test
and
cmp
out
lods
add
mov
inc
loopne
rclb
test
roll
repz
mov
xchg
test
notb
dec
jae
cmpsl
push
dec
mov
mov
jbe
cmpsl
je
shlb
or
cmpsl
sub
je
loope
mov
loop
inc
ljmp
ljmp
mov
insl
popa
xchg
jae
jge
loope
imul
xor
jl
clc
push
mov
pop
jae
ljmp
mov
or
xor
orb
inc
sarl
rcr
lret
outsl
loop
pushf
sbbl
add
es
in
aaa
mov
push
inc
or
aam
inc
imul
xchg
adc
jb
push
xchg
cmp
or
xchg
movsb
cmp
mov
repz
pop
and
les
xchg
mov
mov
dec
mov
je
cltd
xchg
jae
adc
adc
sub
cltd
ret
mov
movsl
cmpsl
or
push
fs
out
fdiv
push
push
mov
and
add
mov
or
xor
nop
dec
inc
xor
push
fsubp
mov
sbb
adc
in
fimull
jl
push
inc
testb
mov
cmp
inc
sti
and
daa
test
adc
test
call
loopne,pn
adc
insb
ja
push
lcall
mov
cmpsb
testb
repz
mov
or
jns
stos
daa
repz
jae
inc
cs
fldl
cmp
imulb
in
mov
inc
lret
sbb
add
inc
shrb
sub
loopne
mov
mov
xor
cwtl
adc
pop
inc
jae
mov
fmuls
xchg
fnsave
push
insb
sbb
or
icebp
jo
pushf
insb
inc
aas
jns
adc
mov
insb
jl
jp
pop
xor
popw
scas
pop
mov
pop
loopne
xlat
inc
jne
xlat
push
mov
mov
add
test
clc
fistpll
mov
add
shl
imul
cmp
add
sub
inc
mov
xchg
pop
pop
mov
push
sub
mov
sarb
test
cmp
btr
xor
jne
sbb
add
adc
inc
fidivs
int
cmp
out
ret
in
or
in
sti
hlt
cltd
cmp
gs
xlat
inc
cmp
dec
mov
lret
pop
gs
mov
mov
inc
mov
adc
adc
movsl
mov
xor
xchg
sub
and
inc
or
scas
outsl
roll
mov
sub
shlb
outsb
gs
stos
push
shl
and
xorb
inc
rorl
cwtl
push
pop
vandnpd
data16
scas
push
pop
and
aam
cmpsl
inc
mov
cltd
jns
insl
pop
jp
xchg
xor
dec
sub
cmpsb
add
pop
and
cmc
jbe
cli
fwait
sbb
cltd
lea
dec
inc
iret
or
test
push
imul
loop
ss
dec
or
pop
sub
ficoms
xchg
adc
xchg
in
mov
out
sub
and
dec
iret
pop
sbb
mov
inc
cs
arpl
jecxz,pt
call
pop
jae
mov
jo
xor
inc
out
pop
cmp
fneni(8087
scas
int3
daa
pop
pushw
jle
mov
stc
push
push
add
or
xor
and
fildl
push
inc
repnz
push
test
jle
dec
stc
pop
or
ss
cmp
test
fs
cmpsb
das
ficomps
and
xchg
lods
inc
xor
cwtl
push
mov
notb
sbb
pop
sub
jo
mov
pop
imul
imul
jne
sub
fcmovb
sbb
mov
fldl
cld
and
mov
lock
cmp
daa
or
fidivrs
mov
cmpsl
int
fidivs
dec
pop
and
mov
jno
jb
iret
test
pop
aas
arpl
hlt
rcl
add
icebp
ljmp
push
lahf
add
rcrb
arpl
jno
mov
sbb
or
lcall
stos
ror
xchg
push
ss
push
mov
dec
push
xlat
int3
mov
ljmp
jl
mov
out
cli
fwait
ret
popf
xchg
pop
sti
insb
sahf
cwtl
aam
iret
loopne
std
fisubl
and
fwait
mov
ja
sub
fdivrp
gs
and
push
dec
ja
rcrl
push
mov
xlat
push
scas
addr16
insl
outsb
test
push
xchg
pushf
repz
xchg
pop
xchg
enter
pop
add
pushf
adc
inc
add
pop
mov
inc
nop
into
push
mov
pop
sbb
aam
imul
cs
nop
xchg
push
outsl
aaa
mulb
mov
lock
or
stc
fildl
ds
cli
jp
inc
mov
cld
mov
gs
inc
pop
pop
in
xlat
add
pop
adc
and
test
pop
xchg
sub
xchg
mov
sbb
ja
test
or
and
xchg
bnd
jo
sub
jl
and
lahf
jp
inc
or
cmp
inc
mov
inc
mov
arpl
into
and
pop
mov
add
lods
lret
out
test
jnp
add
mov
nop
cld
xor
fstps
les
mov
mov
mov
mov
shrb
jl
out
mov
mov
sub
pminub
and
in
push
sub
cmp
mov
les
add
cltd
cmp
shr
mov
cltd
cmp
iret
icebp
faddl
push
fiaddl
fsubrl
pop
mov
iret
fsubr
pop
insb
sub
out
mov
cmp
xchg
add
jg,pt
andl
rcrl
movsb
imul
xor
and
cmpsl
inc
mov
into
mov
je
sbb
cmc
mov
dec
jbe
stc
arpl
or
fimull
pop
repz
jne
daa
js
mov
insb
push
jmp
test
repnz
mov
sbb
and
pushl
push
mov
or
or
pop
xchg
test
stos
es
in
lret
stos
lsl
rclb
lret
adc
jge
adc
pop
jle
inc
loopne
outsl
sbb
jg
daa
xrelease
std
push
or
sub
std
cmp
lahf
cltd
lea
rorb
dec
xchg
sub
test
inc
fistpll
push
jp,pt
cmp
adc
mov
insb
mov
mov
out
pop
dec
dec
sbb
dec
mov
jnp
xchg
mov
lcall
popa
jo
adcl
shrl
movsb
sbb
sbb
push
jae
xor
aam
mov
inc
into
sahf
push
loope
ficomps
add
fisttps
js
inc
es
or
mov
fisubrl
rol
lock
loop
fmul
mov
adc
bound
jbe
lods
mov
loop
sbb
call
inc
and
sbb
jp
hlt
fsubrp
pop
xchg
sub
and
xor
xchg
scas
call
jge
loopne
xor
int
cwtl
popf
les
in
sti
jbe
adcb
inc
mov
add
loope
out
jae
add
lods
pop
cltd
and
jo
js
sbbl
mov
mov
mov
faddl
dec
rolb
scas
push
fdivr
mov
fimuls
mov
cmpsl
push
pop
sbb
inc
and
jg
xor
cmp
cmpsb
repz
mov
mov
dec
cmc
stos
sbb
or
push
xchg
shlb
cmpsb
mov
sub
dec
mov
mov
adc
jmp
psrlw
pop
xlat
dec
sahf
adc
pop
lods
cmpsl
cmp
dec
jmp
in
pushf
out
jno
int3
inc
jo
int
adc
xchg
dec
pop
cmp
pop
push
fnclex
in
cmpsb
aad
imul
mov
adc
outsb
pop
pop
or
and
std
pop
int3
loopne
sti
add
mov
cmp
enter
aaa
jle
or
pop
xchg
dec
iret
sbb
int
and
sbb
movsl
imul
repz
push
xchg
out
inc
cmpsb
push
cli
sbb
push
inc
xchg
and
mov
add
repz
mov
dec
add
pop
xchg
xchg
jno
into
mov
or
inc
repnz
jae
int3
cmp
xchg
subb
sbb
push
pop
add
into
pushf
sti
or
mov
mov
xlat
enter
popf
jp
mov
leave
mov
push
rcl
cmc
push
lods
int
out
cmp
std
or
es
sub
pop
sbb
psrad
insl
mov
inc
jl
inc
xlat
sub
cmc
add
ret
inc
mov
out
push
dec
outsl
or
jns
divb
pushf
jmp
xchg
jne
pushf
mov
xchg
ljmp
jnp
nop
xchg
dec
call
stos
out
lock
inc
cmp
lock
mov
das
arpl
ror
jmp
mov
jge
sub
push
push
decb
int
bound
jbe
mov
or
push
or
pop
add
and
bound
out
sub
test
mov
dec
dec
call
ds
ret
data16
xchg
sbb
out
sub
shll
dec
xlat
inc
iret
jno
loop
push
testb
inc
call
es
fidivrs
mov
imul
ds
sub
imul
push
cwtl
dec
lea
loopne
sub
or
fwait
mov
add
xorl
add
sti
icebp
jmp
adc
mov
push
inc
xlat
cmp
nop
loop
sbb
into
divb
dec
not
leave
clc
sahf
mov
adc
pop
rcrb
scas
sub
pop
insb
lahf
gs
outsb
or
adc
data16
inc
cmpsb
mov
add
lcall
scas
rcll
push
pusha
rorb
jmp
int
addr16
addr16
lods
cld
sub
mov
sub
dec
idivb
xchg
repz
rorl
xchg
mov
lret
insb
inc
xchg
fs
imul
sar
loop
jno
dec
mov
dec
mov
inc
dec
fldz
mov
ds
push
aaa
or
dec
and
pop
push
imul
jne
and
jb
push
loopne
adc
mov
cli
jge
popl
sarl
add
inc
push
or
aaa
mov
sub
pop
iret
imul
cmp
test
in
call
inc
enter
leave
sbb
mov
rclb
mov
lea
popa
lods
stc
fnstenv
je
cmp
bound
push
les
movsl
decl
sub
incb
lahf
div
sub
xchg
push
dec
sbb
out
lcall
leave
sub
pop
movsl
xor
enter
xor
sbb
test
mov
fcmove
xchg
inc
ss
sub
xchg
inc
push
or
test
xor
imul
in
enter
pop
cwtl
jae
mov
jmp
mov
test
out
xor
les
and
lret
ljmp
iret
add
jmp
sti
shlb
or
ret
pop
adc
in
and
scas
gs
adc
not
dec
cmp
mov
clc
add
or
or
or
in
mov
pop
push
mov
adc
test
jae
lods
stos
mov
push
xchg
mov
stos
cwtl
in
repz
negb
push
mov
test
pop
jge
mov
jnp
push
ja
ret
xor
dec
and
mov
aaa
jae
mov
inc
adcb
fiaddl
loopne
jecxz
adc
push
mov
pop
ja
lcall
out
cmp
test
cmpsb
cmp
out
fistpl
fistps
lods
test
mov
sub
lods
mov
aaa
mov
inc
sub
imulb
nop
js
or
ds
movsl
adc
mov
cmpsl
rorb
insb
std
gs
or
call
sarb
imul
sub
imul
sarb
dec
mov
xlat
sbb
loope
push
sbb
add
mov
xor
fdiv
and
fs
fldcw
cmp
clc
cld
lret
jp
lock
fldt
outsb
push
sbb
int
jns
mov
mov
imul
lcall
dec
stos
stc
hlt
or
adc
ret
lret
jnp
ljmp
sub
out
xorl
call
push
cli
inc
mov
xchg
es
jg
aas
fbld
dec
addr16
xor
inc
outsl
inc
int
xchg
lret
int
in
dec
or
cmp
xchg
mov
jmp
fisubl
adc
jecxz
mov
stc
scas
lods
jle
int3
out
lock
test
jmp
push
aas
sub
cmp
es
xchg
ja
dec
cli
daa
int
jo
icebp
dec
sbb
xchg
and
mov
shll
repz
loope
dec
xor
add
test
aas
push
call
daa
rcl
std
loopne
lods
imul
jnp
pusha
adc
lea
xchg
dec
mov
or
sbb
mov
sti
icebp
inc
int
push
sbb
xor
add
or
xchg
ljmp
mov
xchg
add
dec
popa
mov
mov
pop
xchg
sarb
enter
jno
sub
pop
adc
inc
sbb
xor
mov
dec
insb
push
mov
repnz
jge
push
hlt
dec
outsl
std
dec
fildl
shrb
aaa
adc
nop
or
sub
fadds
sub
fcomps
xor
dec
dec
xchg
mov
addr16
rcrl
push
aam
push
add
push
js
mov
cwtl
xchg
lahf
mov
bound
fisttps
mov
inc
lahf
dec
gs
in
or
xchg
push
or
lret
mov
in
arpl
leave
andl
mov
daa
jge
test
and
mov
je
sbb
mov
mov
fwait
ds
mov
rcll
mov
rcll
lea
popa
push
cmp
pop
adcl
adc
jecxz
mov
and
mov
stos
cs
pop
movsl
insb
xchg
ret
add
or
mov
jb
div
enter
aaa
dec
add
ret
fcompl
int3
mov
push
inc
sbb
cmp
test
mov
ja
cmp
sub
mov
sbb
jge
ds
mov
mov
shll
push
xchg
jle
lcall
lock
pop
decb
stos
xchg
add
repnz
shlb
jns
ja
negl
fnsave
cwtl
push
repz
and
pop
push
xchg
mov
insb
in
popf
les
push
mov
cmp
rclb
loopne
aad
xchg
scas
xchg
mov
mov
mov
andb
bound
cwtl
fcmovb
lds
mov
jnp
adc
mull
gs
push
sti
pop
testb
xlat
and
inc
add
push
aam
sbb
and
jno
into
mov
lret
mov
les
inc
add
addr16
sub
int3
xchg
in
arpl
movsb
addr16
xchg
sub
mov
mov
pop
mov
fcmovnbe
outsl
les
jecxz
das
fnsave
sub
loope
add
sbb
rcll
mov
xchg
and
sti
pop
js
or
fiaddl
mov
mov
xor
shrb
cmc
addb
lret
data16
outsb
ss
jae
fwait
inc
stos
and
mov
sarb
scas
adc
iret
push
mov
inc
add
js
jmp
add
add
cmp
pop
pusha
mov
sahf
insl
sub
xor
pop
fnstenv
aam
out
in
sub
aam
mov
mov
std
sbbl
pop
iret
jno
xor
sub
adc
scas
push
mov
aam
in
repnz
or
cli
ljmp
push
bound
push
insb
add
cmpsl
jne
add
fucomip
push
subl
dec
es
adc
or
sbb
daa
mov
or
popf
cli
adc
jg
cmp
fldenv
sbb
mov
jle
je
dec
pop
insl
out
movsl
inc
jg
mov
sbb
mov
sbb
and
imul
loopne
cli
inc
sub
insb
dec
jp
fnsave
jnp
test
daa
sbb
and
cmp
add
incl
cmp
or
in
cmp
add
pop
pop
push
jae
inc
inc
dec
cwtl
and
leave
mov
je
addr16
cmp
add
adc
pop
cmp
cs
and
push
frstor
xor
push
hlt
fmul
lods
lahf
inc
sub
mov
cmp
mov
ss
xchg
xchg
and
cmp
inc
pop
jmp
mov
xlat
mov
and
lea
dec
sbb
loope
and
sti
movsw
push
sub
xor
adc
xchg
mov
adc
and
scas
test
jb
jb
mov
xrelease
clc
cltd
nop
aad
in
pop
adc
aam
jne
xchg
inc
push
stos
fisttpl
je
pop
orl
nop
jecxz
and
imul
or
jl
xor
lock
cmpsl
orb
push
sti
xchg
out
pushf
test
cmp
and
mov
addb
cltd
pusha
xor
jo
add
xchg
loop
xchg
outsl
sub
frstor
aaa
xchg
jmp
adc
fwait
movd
adc
pop
cmp
xchg
add
mov
xor
push
xor
mov
mov
push
xor
test
mov
fistl
adc
mov
js
add
out
mov
icebp
ret
jp
ljmp
out
ss
push
call
iret
mov
outsl
adc
ficoml
add
inc
addl
aam
xchg
mov
push
ss
pop
pop
rol
and
pop
xchg
mov
xchg
pop
mov
insl
movsb
in
mov
push
sub
mov
movsb
xor
sub
xchg
aaa
imul
pop
xchg
mov
ret
or
out
cmp
mov
add
pop
das
cmp
mov
inc
pop
push
sub
mulb
shrl
jg
fisttpl
mov
in
arpl
decb
mov
in
sbb
mov
and
cmp
xchg
mov
int
push
lock
mov
cmp
or
push
sbb
inc
scas
stos
push
push
jnp
mov
sbb
pop
ret
cmc
dec
in
jge
mov
frstor
aam
mov
dec
xchg
inc
mov
sbb
xchg
jge
dec
pop
mov
cmp
aas
xor
sbb
sub
and
fistpll
mov
lds
or
out
mov
xlat
xchg
pusha
pop
aad
out
test
movsb
addr16
jne
add
mov
or
sbb
mov
mov
jae
mov
or
loope
ds
inc
outsb
cltd
shll
push
add
fnstenv
inc
sub
pop
addr16
fstl
divl
pop
gs
jb
xchg
outsb
xchg
inc
sbb
xchg
pop
xor
loop
in
clc
pusha
stos
or
pop
dec
insb
test
outsl
push
push
test
inc
loop
xchg
mov
jae
jns
push
jnp
or
inc
xchg
lock
adc
stc
test
aam
jae
xor
fcompl
movl
and
adc
sub
lret
add
inc
mov
out
sub
lret
test
xchg
idivl
scas
shrl
mov
sbb
cwtl
sub
lods
pop
jne
push
mov
add
loope
std
mov
lock
scas
fucomip
jb
sahf
lcall
inc
fcmove
lahf
ds
inc
and
dec
sbb
xchg
mov
out
andl
sbb
mov
sbb
mov
mov
mov
mov
sarb
pusha
sub
popf
out
mov
outsl
popa
cmc
mov
ja
test
cmp
sub
add
cs
rclb
adc
jge
shlb
pmaddwd
mov
push
mov
cld
mov
mov
std
xlat
sahf
jecxz
push
stc
clc
addr16
bound
iret
mov
cmp
mov
movsb
dec
bound
outsl
push
out
leave
icebp
pop
fdiv
push
test
dec
ljmp
aam
jb
push
js
add
xor
sti
mov
lock
aad
sbb
mov
pop
xlat
call
push
jg
jbe
in
xor
shr
push
cmpsl
aam
cmp
jp
and
add
sub
imul
sub
pop
sar
mov
fisubl
push
icebp
daa
jns
insb
adc
int
insl
cltd
shll
in
adc
fs
xlat
notb
mov
fidivs
cwtl
jge
push
xchg
push
xchg
jno
jl
cltd
cmp
iret
je
mov
out
mov
xor
sub
jnp
repnz
mov
cmc
add
cmp
cs
jmp
insl
pop
ficoms
jge
pop
add
jmp
aam
leave
movsb
js
loope
xchg
fsubp
and
lret
xor
sarb
mov
mov
xchg
inc
subb
xchg
jbe
add
jle
arpl
gs
shrb
add
fs
into
mov
outsb
pop
aaa
in
faddl
ja
filds
mov
push
adc
mov
stos
adc
xor
push
test
push
stos
gs
sbb
or
pushf
dec
int
pop
out
and
pop
fwait
lret
jnp
dec
outsl
mov
and
lret
add
cmpsb
xor
dec
inc
add
call
lock
fmull
lods
out
pop
mov
jbe
mov
or
aaa
int
loop
push
xchg
lcall
jae
out
stos
stos
arpl
mov
dec
fmull
jnp
pop
ret
movsb
cmp
cmpsl
out
popf
jo
je
mov
push
mov
jge
xchg
mov
jno
in
xchg
mov
sub
dec
clc
or
dec
test
mov
push
mov
cmp
add
sbb
icebp
cli
int
aas
ror
xchg
sar
lcall
push
insl
jp
icebp
dec
jae
xor
hlt
je
test
jmp
test
stos
pop
pop
xor
xchg
and
xchg
out
into
cmp
xchg
mov
mov
xor
push
or
adc
jbe
lret
and
jbe,pn
push
mov
fbld
repnz
fwait
add
es
pop
sbb
and
ss
cmp
mov
rol
adc
cltd
ja
xchg
or
mov
scas
clc
fwait
adc
jmp
or
scas
pop
lret
dec
pop
insb
sbb
mov
arpl
or
push
daa
mov
andl
loopne
aad
xor
pushf
clc
mov
push
and
mov
rcll
dec
push
iret
test
lret
outsb
imul
xchg
adc
imul
and
and
loop
pop
sub
imul
aas
xor
outsb
push
rorl
xchg
sub
fcos
js
push
pop
cltd
pop
lret
mov
mov
lods
into
dec
mov
lcall
mov
bound
jbe
sbb
loope,pn
repnz
pop
mov
repz
lahf
mov
std
bnd
pop
sub
pushf
and
fwait
mov
lahf
add
sub
xchg
and
mov
dec
push
cmp
shlb
pop
int
rorl
aas
xor
jecxz
or
mov
stc
push
mov
and
pop
and
pop
push
sub
lret
decb
xchg
mov
jg
cli
stc
mov
mov
mov
lret
out
enter
xchg
jns
test
outsb
fisubrs
xorl
xchg
bound
xchg
jle
das
push
outsb
or
sbb
pop
pop
cmp
mov
mov
arpl
or
data16
dec
pop
jecxz
ss
push
out
jns
sbbl
jge
cmp
cmc
sbb
jp
jnp
loopne
adc
pop
or
inc
imul
test
clc
sub
daa
cmpsb
mov
mov
fsubs
mov
or
inc
mov
aam
popa
cli
je
mov
loope
jb
rorl
out
jae
lods
adc
sub
push
shll
int3
sub
inc
pop
sub
nop
icebp
jnp
xchg
adc
imul
and
mov
fwait
jp
mov
fcoms
adc
mov
inc
mov
into
iret
pop
stc
jno
sbb
jle
xor
and
je
push
nop
cld
fldcw
scas
push
mov
jnp
xchg
dec
repnz
jmp
dec
xor
cmp
push
cmpb
jp
cmp
cli
mov
sub
imulb
scas
jns
test
test
inc
add
out
loopew
pushl
aas
inc
add
pop
xchg
pop
or
mov
out
aas
sbb
jp
hlt
loopne
add
ja
or
lahf
mov
in
loope
sub
mov
mov
mov
dec
clc
cli
push
xor
sbb
sbb
hlt
lcall
lods
fstpl
mull
mov
sbb
pop
xchg
mov
in
test
sahf
movsb
movsl
xor
push
push
addl
ja
enter
xor
mov
and
lret
ds
insb
mov
shr
jmp
fs
in
sub
jae
cmp
mov
dec
dec
arpl
cmp
push
iret
mov
mulb
jb
aaa
adc
leave
cmp
ffree
jl
ret
jo
ss
adc
inc
jbe
dec
push
inc
int3
into
or
lock
push
push
xor
movsb
scas
add
add
mov
adc
lcall
lods
gs
add
mov
sbb
adc
mov
lea
mov
xchg
pop
fdivrs
or
fbld
xor
mov
fdivrp
js
loope
or
es
fmulp
fmulp
mov
stc
pop
jae
push
sbb
jp
incl
mov
cli
jecxz
out
xchg
loopne
mov
das
test
sti
stos
sbb
mov
ljmp
jns
mov
lcall
stos
aam
les
pop
xor
rcll
cmp
sbb
fidivrs
icebp
sbb
fidivrs
sbb
xchg
jle
dec
subl
push
push
ds
movsb
js
lea
loop
adc
aaa
sti
ljmp
jmp
std
inc
repz
sub
jae
xchg
test
ljmp
insl
in
lret
loope
mov
hlt
or
pop
das
xor
inc
push
pop
sub
and
stos
mov
lret
shlb
push
bswap
sbb
or
fwait
jnp
ja
and
xor
aas
jns
pop
jno
adc
idiv
mov
push
mov
sbb
push
sbb
mov
mov
enter
jno
sub
aad
pop
fidivs
add
or
or
jne
inc
xor
enter
jbe
rcll
sbb
push
outsl
lahf
xchg
adc
cmpsl
adc
mov
add
xor
jge
fs
pop
lcall
add
sub
stc
inc
int
hlt
ret
mov
int
hlt
out
mov
xchg
push
mov
jno
dec
mov
push
jl
aad
pop
cwtl
pop
loop
ret
gs
je
cmovb
fucomip
and
mov
call
popf
mov
fists
mov
dec
xor
std
inc
xlat
pop
js
xor
dec
and
addb
sahf
aaa
adc
mov
movsb
mov
mov
cmp
push
ret
movsbl
int
pop
pusha
and
cmp
dec
mov
inc
inc
filds
ret
push
loope
scas
mov
mov
loopne
sbbb
cmc
push
into
mov
dec
inc
cwtl
push
pop
dec
movsl
mov
insb
insl
xchg
stc
mov
jecxz
add
shlb
and
clc
in
into
rcll
xchg
jb
fwait
mov
outsl
cmp
fcmovne
mov
mov
cmp
push
push
stos
jb
xor
sub
push
movsb
into
or
int
repnz
iret
xchg
dec
insl
scas
dec
add
mov
lods
push
push
jmp
pop
sti
scas
add
mov
cmp
add
sbb
lret
loopne
sub
lret
fcomps
add
mov
cli
jge
sub
and
xor
xor
pop
push
enter
ret
pop
adc
iret
xorl
cmp
mov
xlat
sbb
loopne
xchg
scas
test
mov
add
jbe
xor
push
jno
dec
ljmp
ss
mov
add
push
mov
mov
jno
sub
fdivl
xchg
cmp
sub
jne
dec
jns
xchg
out
mov
xor
lock
aad
push
dec
xchg
xlat
xor
shrb
fdivs
enter
adc
add
jo
iret
or
fdivrl
divb
xor
cs
notl
sbb
lret
xchg
fwait
loop
test
mov
into
or
sub
dec
sub
les
sub
mov
out
out
mov
sub
roll
jnp
subb
dec
cmpsb
xchg
sub
cld
push
call
das
lcall
in
adc
stos
sub
push
xchg
mov
mov
push
fstpt
arpl
push
xor
jae
sbb
lahf
mov
aad
jbe
js
pop
aam
sarl
sti
dec
adc
test
cmpb
hlt
sahf
lcall
jae
dec
mov
fnsave
add
cmp
mov
aaa
aad
repz
dec
sbb
lods
cmc
xchg
movsb
insl
stc
mov
fisubrl
push
rclb
arpl
push
adcb
lock
stc
xlat
nop
pop
sbb
or
lods
in
pop
shlb
jmp
lcall
pop
in
push
out
daa
and
imul
lahf
enter
cmp
inc
hlt
xor
in
fadds
lahf
jae
xchg
xor
sub
or
pop
mov
shlb
ret
mov
and
rclb
std
in
inc
xlat
in
jecxz
sbbb
addb
sbb
or
add
shll
aam
lahf
xchg
and
xchg
fldenv
push
lock
jne
or
inc
push
inc
dec
in
and
jmp
add
sub
xchg
sti
sti
pushf
and
xchg
mov
jge
push
mov
lods
push
testl
and
rorl
xlat
xlat
das
mov
mov
jle
xor
or
jne
xor
roll
pop
jb
lret
out
aas
jbe
jb
insl
in
adc
test
cmp
repnz
popf
xchg
push
lcall
mov
lods
sbb
or
stos
xchg
jp
std
pop
push
test
sarl
pusha
push
mov
scas
pushf
lret
repnz
mov
mov
loopne
pusha
dec
and
dec
and
sbb
fyl2x
jecxz
leave
lods
sub
sbb
pop
mov
test
loopne
and
pop
stc
mov
jns
push
aaa
and
inc
addr16
dec
popl
or
jnp
mov
rolb
pusha
mov
adc
xchg
test
dec
add
lods
pop
lret
dec
push
inc
stos
pop
pop
fneni(8087
jmp
mulb
adc
popa
loop
add
and
cltd
mov
cmp
fidivrl
and
add
inc
push
lock
cmp
dec
mov
push
jp
inc
pop
rolb
dec
push
mov
mov
sub
fisttpl
jle
ds
or
popf
mov
dec
and
jbe
mul
cli
sbbl
fistps
jmp
sahf
stos
jae
jbe
out
nop
xchg
sbb
jl
xchg
mov
mov
push
xor
pcmpgtb
arpl
aaa
imul
cmp
add
out
mov
pop
jg
pop
shrl
xchg
das
inc
dec
sub
or
inc
pop
jnp
std
xchg
js
loope
xchg
sbb
sbb
leave
pop
mov
pop
push
xchg
inc
movl
add
adc
push
lahf
jno
popf
mov
jae
pop
xor
ja
xchg
sub
es
and
mov
subl
sbb
repnz
pop
fistps
out
mov
mov
pop
mov
cmc
aas
cmpl
mov
sar
pop
cmp
xchg
testl
sub
js
mov
pop
insl
subl
outsb
call
pushf
push
mov
mov
in
xchg
mov
fucom
sub
xor
inc
pop
add
stos
outsl
jmp
dec
leave
in
rcrb
xor
pop
and
mov
mov
in
mov
inc
mov
insb
leave
clc
cmpb
clc
subb
arpl
dec
dec
and
add
jo
fiadds
lret
mov
and
jp
jp
das
xor
xchg
xor
repz
mov
test
inc
insl
xchg
roll
jbe
adc
pusha
daa
adc
cltd
push
mov
test
icebp
sbb
les
xchg
ret
xchg
inc
test
daa
sbb
add
push
and
inc
aam
cwtl
or
hlt
xor
dec
jmp
push
jle
dec
jne
push
cmpsb
inc
imul
jbe
test
shl
divb
aas
rcrl
aaa
shr
addr16
loop
sub
add
lods
fcmove
test
scas
push
push
test
cmpsl
adc
insl
in
cli
les
aas
imul
imul
les
pop
outsl
xchg
and
push
js
xchg
pop
add
iret
push
mov
sub
xor
add
int3
sub
out
in
dec
jge
lds
ljmp
addr16
add
xchg
or
mov
pop
scas
mov
dec
sbb
pop
and
mov
cmp
es
mov
leave
or
cmp
xor
jl
inc
pop
xor
shrb
add
cmp
insl
add
mov
lahf
add
inc
int
call
int
test
lods
push
orb
pop
in
mov
pop
fwait
pop
inc
nop
imulb
ja
dec
adc
mov
int
add
cmp
dec
pop
adc
ss
mov
imul
mov
mov
sub
test
mov
cld
gs
daa
add
xor
jns
sub
and
mov
fyl2x
sub
aad
js
es
jl
sbb
sahf
mov
add
loop
scas
dec
mov
shrb
sub
ss
ss
arpl
xor
ja
addr16
xchg
rcll
sub
jmp
xor
mov
mov
push
and
add
cmpsb
lods
cmpsb
je
push
repz
jmp
xchg
call
jmp
push
pop
pushf
add
nop
test
mov
push
pushf
mov
stc
mov
ja
js
dec
dec
stc
sbb
icebp
lock
pop
loop
add
push
out
add
add
push
jbe
push
mov
sbb
mov
xor
jb
insb
dec
inc
add
mov
jle
and
je
pushf
xorb
sub
testb
or
es
leave
add
mov
fidivrs
in
push
popf
leave
mov
and
call
cwtl
xor
addr16
push
sbb
mov
lock
stos
or
call
repz
in
xchg
add
xor
dec
out
cmpsl
xor
jo
or
rcr
popa
imul
adc
pop
or
sarb
push
push
cmpsl
adc
call
cmc
cmc
mov
imul
xor
sub
cmpl
jle
mov
xchg
dec
out
xlat
inc
test
fcoml
cmp
fstpl
bound
push
sbb
sub
dec
mov
mov
pop
jb
out
mov
mov
push
lock
jp
lcall
push
arpl
or
sarb
pop
jp,pn
push
sbb
lret
mov
lea
in
call
popa
push
and
popf
cmp
sti
pop
mov
or
cmc
jo
add
fwait
add
mov
add
pop
dec
mov
cmpsl
arpl
or
xchg
xchg
loopne
cltd
aam
fldt
mov
rolb
shrb
mov
hlt
jne
mov
int
ss
movsb
and
stos
ja
sub
outsb
pop
dec
cmp
or
repz
aaa
repnz
jecxz
mov
inc
push
pusha
loopne
xchg
dec
mov
pop
and
inc
dec
andl
mov
and
ret
xchg
stos
or
mov
mov
out
lods
mov
jp
out
fidivrs
sarl
jo
add
sub
xchg
xor
xlat
ds
lods
aad
add
xchg
xor
push
cli
mov
es
cmc
cmp
filds
inc
or
xchg
insl
sbb
add
ret
mov
cmpb
icebp
cmpsl
xor
lcall
setl
mov
lock
mov
subb
lods
test
inc
pop
xchg
mov
lahf
adc
cmc
adc
mov
mov
cwtl
pop
adcl
and
stos
inc
sahf
xchg
or
ret
xchg
sub
out
aaa
dec
sbb
mov
jno
xchg
xor
sbb
mov
popa
mov
cli
inc
arpl
int3
and
pop
mov
mov
inc
xchg
xor
lret
call
jns
and
xchg
andb
mov
mov
inc
clc
rolb
adc
inc
sti
push
adc
mov
cs
mov
imul
add
insb
push
movsb
fldl
mov
mov
cmp
xor
adc
outsl
pusha
adc
lcall
and
adc
pop
xor
jbe
sbb
mov
jp
or
jecxz
test
outsl
cmp
inc
enter
test
push
cli
push
cmp
repz
jb
in
adc
cli
mov
jp
or
and
mov
pop
mov
xor
std
cwtl
addr16
mov
add
fnstenv
test
xor
adc
cmp
mov
adc
mov
gs
mov
sub
ret
dec
xchg
xchg
mov
xchg
xlat
es
cmp
fsub
push
cmp
or
arpl
lcall
cmpsb
lods
adc
pop
xchg
cmpl
cmp
aam
lods
mov
idivl
dec
popf
repz
push
pop
rcl
loop
ficoml
push
mov
mov
shr
cmp
cwtl
andl
stos
mov
jp
add
mov
outsb
xchg
push
xchg
sbb
fs
and
in
mov
pop
add
jl
cmpsl
sbb
jge
sub
imul
ret
pushf
flds
je
inc
xchg
movl
lock
test
sbb
arpl
dec
mov
sub
jb
pop
mov
mov
outsb
xchg
fildll
in
pop
jmp
int
repnz
mov
daa
insb
adc
popa
sub
mov
stc
mov
cmc
enter
decb
stc
cmp
push
clc
jno
jb,pn
jge
lods
jl
stos
cmc
imulb
pop
pop
push
lds
and
sub
out
adc
sub
pop
xlat
cmp
jle
test
jnp
cmc
scas
push
stc
mov
rclb
xchg
mov
into
push
dec
jns
int3
shrl
mov
imul
jne
xor
cs
cltd
movsb
mov
arpl
adc
ror
popa
xor
jnp
std
mov
imul
push
xor
or
mov
inc
jne
pop
mov
adc
mov
cs
sbb
jae
out
aaa
sbb
fs
hlt
and
test
adc
sbbb
jg
pop
ljmp
inc
cmp
jl
dec
inc
aam
sbb
rcl
cmp
jl
vmwrite
mov
jmp
popa
cwtd
andl
inc
or
mov
dec
mov
iret
xorl
mov
ret
jle
stos
daa
test
sub
jb
fidivrs
into
mov
mov
frstor
pop
xchg
xchg
pop
or
cmp
pop
dec
pop
pop
jbe
imul
sbb
idivl
sbb
mov
inc
mov
push
xchg
outsb
cmp
das
inc
shll
test
ret
cmpsb
and
adc
dec
in
inc
add
mov
add
popf
clc
jmp
shrl
xor
or
aaa
lcall
js
clc
movsl
mov
lret
add
stc
add
cwtl
mov
ss
cltd
je
xor
inc
scas
int
xchg
mov
pop
jb
scas
and
in
pop
pop
cmp
dec
inc
adc
mov
fstl
adc
std
test
push
cmp
mov
fs
or
rorb
mov
aad
sbb
aaa
cwtl
push
mov
inc
push
mov
sahf
xor
sbb
mov
push
or
ss
les
adc
outsb
and
xchg
lds
or
hlt
pop
inc
xor
sbb
inc
sahf
lds
popf
pop
pop
xchg
out
adc
dec
lea
or
je
pop
scas
sbb
and
rcrb
lret
xor
dec
pusha
pusha
out
pusha
push
jnp
cltd
cld
fisttps
sbb
dec
dec
mov
lcall
inc
divl
adc
lods
inc
sub
fsts
pop
jmp
in
adc
push
dec
imul
push
clc
sbb
and
pushf
xor
inc
call
push
rcrl
stos
pop
pushf
rcrb
mov
mov
outsl
andb
stos
fnsave
cmp
in
fs
xchg
test
clc
sub
adc
or
les
je
pushw
imul
dec
sub
lret
jae
sub
xor
sbb
lods
adc
and
xor
leave
mov
mov
cmp
push
shlb
pop
or
pop
inc
xchg
ret
jl
out
ss
dec
adc
sbb
sub
mov
mov
pop
aam
cmpsb
push
rcrl
in
leave
in
mov
divb
add
iret
loopne
pusha
dec
mov
pop
mov
outsb
test
adc
mov
aaa
jle
insb
pushf
div
xchg
stos
lods
stc
dec
cmc
ret
or
ja
dec
xor
out
or
cmp
xor
mov
out
inc
and
int
xchg
int
adc
in
scas
pop
nop
adcl
mov
fdivr
xor
push
inc
insl
dec
in
movsl
int
xor
rolb
in
mov
dec
adc
mov
loop
jno
push
and
cmc
jmp
cmpsb
lds
jae
mov
out
mov
add
xchg
mov
jnp
faddl
enter
mov
cltd
xor
mov
push
xchg
and
loope
dec
insb
repnz
loop
mov
xor
iret
and
mov
and
mov
fsubrs
xchg
inc
arpl
inc
cmp
xchg
inc
ret
inc
pop
das
inc
ret
rclb
sub
outsl
inc
mov
std
sbb
inc
mov
fistpll
and
sub
repnz
clc
xchg
loop
insl
cmpsb
xchg
xchg
add
out
or
rclb
fcoms
push
cs
xor
leave
jmp
mov
aas
clc
sub
mov
imul
cwtl
cmp
repnz
dec
jo
xor
es
cmp
cmp
insb
pop
mov
int
test
je
inc
lcall
stc
jo
jbe
mov
sahf
sahf
data16
scas
repz
daa
in
mov
insl
loopne
xlat
stc
adc
push
dec
nop
and
cs
jp
jae
stos
div
std
test
leave
loopne
pop
mov
movsl
cmp
lcall
jmp
mov
sbb
cwtl
rcll
nop
dec
pop
push
fs
xlat
cmp
mov
lret
je
dec
pop
jne
iret
ret
divl
dec
ss
leave
arpl
sbb
adc
inc
movsl
xor
idivb
jne
or
mov
xor
sbb
mov
imul
dec
arpl
mov
test
pop
cmp
mov
aad
in
mov
pop
inc
sarl
sub
or
fstpt
xchg
push
xchg
rcll
insl
push
filds
rorl
jne
out
arpl
or
jo
mov
adc
cmp
stc
shll
mov
jne
jne
mov
sbb
icebp
mov
es
inc
pop
sub
testl
cmp
scas
cmp
jb
push
xor
or
pop
aam
adc
je
push
fidivs
inc
rcll
and
cmpsb
push
rcll
movl
xchg
ljmp
clc
inc
pop
scas
mov
fdivs
mov
pushf
mov
push
test
cli
adc
jne
xchg
hlt
pop
cmp
imul
jb
bswap
cmp
fdivs
add
jo
jno
fdivrp
imul
and
gs
mov
fnstsw
cmpl
pop
xor
mov
aas
out
addl
or
pop
popf
pop
mov
lods
popf
pop
dec
adc
dec
and
fwait
mov
cmp
sbb
cmp
jae
or
js
mov
ja
mov
jne
and
les
cmp
xorb
push
dec
xchg
xchg
xlat
in
mov
cli
or
push
lock
cmp
stos
or
rol
push
in
stos
jo
stc
dec
dec
sub
pop
roll
dec
das
xor
inc
xchg
xor
and
mov
movsl
pop
add
test
jg
out
sub
int3
xor
lahf
inc
xchg
movsl
xor
dec
jbe
out
pop
xchg
xchg
bnd
enter
scas
out
pushl
popf
adc
call
push
popf
fwait
mov
mov
dec
mov
xchg
imul
dec
or
mov
push
lock
leave
cmc
loop
adc
mov
jmp
cmc
push
sbb
cwtl
je
mov
mov
subb
inc
inc
sub
sbb
mov
sub
cs
jmp
adc
add
ja
adc
pop
dec
sub
adc
pop
mov
push
xor
jl
cli
xor
mov
push
imul
add
push
push
jge
cmc
xchg
je
outsl
cli
fnstcw
testb
xchg
sub
out
jae
xchg
cmpsb
test
aas
cmpsb
sbb
xchg
pop
push
jns
pop
ja
and
cld
or
or
outsb
add
call
jmp
pop
scas
dec
cmp
aas
or
movsl
or
lods
repz
mov
jmp
jmp
ja
xchg
out
sbb
xchg
mov
rsm
dec
and
inc
out
and
leave
sub
jno
pop
aaa
jbe
jmp
xorb
push
xor
fcomps
imul
scas
popa
inc
cs
movsb
mov
movsl
dec
cmc
stos
loopne
mov
repz
cmp
inc
jo
aam
lock
jns
fstpt
nop
xor
cld
insl
push
push
cltd
sbb
add
popa
roll
sbbl
iret
push
adc
je
inc
outsl
iret
xchg
jmp
sub
mov
fs
add
daa
fwait
dec
scas
inc
adc
fdivrs
sti
cs
addb
pop
ds
ret
sbb
aaa
pop
js
adc
lret
mov
cmp
add
sbb
push
call
cmp
negl
sub
call
jmp
sbb
popa
xchg
nop
cli
dec
dec
shrb
das
inc
jb
add
adc
out
stos
movsl
ds
cmc
xor
pop
lods
mov
loopne
stos
fisubrs
lods
pop
xor
testb
xchg
jnp
idivl
cmpsl
lods
sbb
call
push
or
adc
jbe
mov
loop
pop
es
jle
xchg
out
loope
dec
test
movsb
and
lock
mov
sub
into
jl
xchg
je
or
add
mov
daa
cmpsb
loop
fwait
aas
lret
dec
cltd
jnp
pop
jle
into
xlat
jle
adc
xchg
sbb
lods
sub
mov
or
jne
pop
inc
flds
aam
aam
cmpsb
andl
lret
xchg
mov
cmp
sbb
and
shlb
mov
xchg
jne
adc
mov
jno
stc
out
dec
aas
cmpb
iret
jg
test
dec
test
cmpsl
les
loop
adc
aad
mov
jne
movsl
adc
lods
rcrb
incl
jbe
sub
sub
pop
std
scas
les
cmpl
pop
adc
rorl
inc
jge
mov
pop
sbb
negl
mov
nop
pop
into
xchg
fisubl
inc
fwait
xchg
ret
add
daa
insb
mov
test
adc
stos
das
cld
adc
lcall
rcrl
cltd
mov
xor
lock
add
lcall
bound
inc
test
stos
lahf
jo
out
mov
test
inc
cltd
xchg
sbb
imul
negl
fs
stos
mov
outsl
xchg
test
inc
pusha
and
inc
xchg
adc
sbb
cmp
lods
inc
push
jecxz
loop
fsub
cmp
add
xchg
cmpsl
jl
out
push
sub
push
shll
movsl
sub
fsubp
enter
in
mov
fidivl
mov
ja
bound
pop
fstpl
pop
movsb
sahf
fcoml
in
les
dec
cmp
or
inc
add
idivl
jge
mov
repz
cmp
bound
loope,pt
push
stos
xchg
add
scas
ret
xchg
imul
push
jns
jne
test
jl
and
aad
lods
or
sub
fsubrp
enter
roll
xlat
repz
xchg
add
inc
adcl
rolb
cmp
adc
mov
out
or
imul
dec
fildll
sub
jge
sbb
dec
cmc
iret
dec
mov
pop
movsl
jae
rcll
ret
inc
xor
loop
sbb
or
ret
pusha
jb
aaa
and
adc
dec
push
dec
push
lea
ret
stos
mov
pop
testl
push
les
push
push
daa
jmp
imul
loop
or
jne
subb
std
push
outsl
xor
fsubs
test
test
jp
cmpsl
sbb
lods
cmp
stos
jecxz
dec
push
push
inc
lds
jmp
inc
loope
test
gs
mov
mov
jb
arpl
popa
movntq
xchg
jp
ror
js
sub
into
cmp
push
icebp
jl
addr16
popa
inc
mov
cmpsb
mov
lds
stos
stos
rorl
jno
mov
lahf
xor
mov
add
pop
bound
lahf
std
test
push
movsl
mov
xchg
es
into
movsl
xchg
outsb
sti
push
pop
mov
call
mov
cmp
add
xchg
fdiv
add
ret
shlb
ljmp
xor
aam
xor
adcl
jne
out
jnp
cmp
adc
loope
add
push
xor
mov
mov
lahf
mov
xor
outsb
clc
mov
mov
sub
sbb
data16
in
or
cmc
sub
neg
mov
dec
enter
enter
dec
insl
out
imul
push
cltd
dec
xor
test
cmp
fbstp
sahf
mov
ja
inc
xchg
mov
jb
pop
call
dec
rcll
and
inc
ret
push
stc
push
xchg
gs
cltd
pop
mov
jg
and
push
rcll
out
push
idivb
inc
add
push
daa
push
inc
mov
dec
stos
dec
test
jge
in
xor
sbb
ds
addb
sub
adc
aas
xchg
mov
stos
dec
and
jp
in
mov
xchg
ss
imul
nop
or
jl
adc
insb
adc
inc
ja
mov
sbb
pushf
cmp
mov
cmpsl
fdecstp
sub
inc
dec
fwait
mov
jle
mov
outsl
adc
roll
fwait
xor
add
loopne
lahf
mov
test
mov
or
and
stc
sbb
cmpsb
add
test
mov
xchg
cmpsb
mov
or
clc
inc
pop
cmpl
sbb
or
jmp
inc
nop
cli
in
push
hlt
decl
fwait
xchg
negl
push
or
pop
adc
hlt
je
pushf
adc
sub
adc
pop
mov
hlt
jno
sub
sub
leave
imul
push
setbe
add
push
mul
out
dec
adc
mov
sub
jno
call
bnd
cs
bound
loopne
xor
jae
inc
stc
inc
adc
mov
cmp
xchg
adc
pushf
pop
and
test
addr16
xor
and
mov
test
andb
xchg
shrb
nop
add
xchg
movsl
sahf
sub
repz
lea
loopne
mov
ffreep
lea
stos
inc
xor
push
addl
bound
fisubrs
js
mov
pop
stos
sub
cmc
pusha
ds
adc
lea
xchg
das
pop
pop
ja
sbb
push
and
push
mov
fcomip
or
int3
jb
mov
arpl
lods
outsl
sub
mov
push
add
sarl
mov
dec
in
mov
out
jp
fimuls
xor
and
add
std
daa
ss
shll
sub
mov
pusha
loopne
adc
sub
lcall
jp
cmpsb
inc
jecxz
ret
nop
pop
mov
test
loopne
sbb
xor
pop
and
adc
sbb
sbb
pop
fldt
loopne
and
gs
push
mov
iret
mov
lahf
and
pushf
in
cltd
inc
lret
decl
ljmp
insl
dec
xor
dec
in
push
ds
cmpsb
out
orl
ljmp
cmp
dec
sbbb
jl
outsl
outsl
or
stos
jl
xor
out
cmp
cli
mov
inc
scas
mov
dec
jp
xor
mov
outsl
fidivrs
iret
mov
inc
push
adcb
xor
cmp
sti
sub
icebp
stc
ret
xchg
loopne
ss
inc
ljmp
fiadds
int
pusha
fistl
jae
lret
dec
dec
gs
je
in
es
cltd
xchg
rolb
das
movsb
mov
imul
sbb
cmp
popf
jbe
adc
into
jge
mov
add
subl
push
xchg
lcall
xchg
sbb
ljmp
xchg
icebp
aad
push
sti
xchg
int3
bound
filds
jp
push
sbb
leave
daa
je
sub
repz
out
notl
popa
mov
xor
sub
xor
push
adc
cmp
inc
xor
adc
jbe
insl
pop
mov
mov
ret
mov
fcom
adc
fcomps
mov
xorb
inc
leave
xchg
xchg
fimuls
cmp
lea
xchg
scas
fsubs
cmpsl
adcl
push
xchg
rcrl
pushf
push
mov
pusha
leave
and
pop
pop
stos
or
cmp
lcall
push
arpl
pop
adcl
cmpsb
outsb
aad
jle
std
push
adc
and
jnp
ret
filds
fisubrl
popf
scas
sbbl
pop
mov
int3
pop
repnz
clc
dec
in
loop
inc
fdivrs
push
cld
popa
or
add
mov
popa
inc
sbb
cltd
test
jmp
test
or
and
or
xor
out
repz
ret
xor
xor
shr
loop
push
ljmp
in
and
sbb
jae
add
fmuls
rclb
pusha
gs
mov
pop
inc
sub
nop
xor
jl
inc
add
add
xor
jbe
mov
add
mov
bound
add
int3
mov
and
or
addb
repnz
imul
lds
dec
fldcw
dec
flds
pop
dec
shl
insb
stos
dec
fs
popa
xor
adc
cmp
inc
lret
pop
or
ljmp
dec
int
leave
rcll
in
dec
cmp
fisubrl
pop
pop
sub
xor
repnz
mov
lods
dec
je
fs
cwtl
lahf
cmp
mov
jns
mov
adc
push
lods
sub
xchg
jnp
xlat
sti
push
stc
mov
mov
outsb
movsb
pop
sub
cs
inc
pop
fnstenv
mov
push
dec
es
lds
jle
xchg
stc
cmc
test
rcr
jle
ret
jnp
and
scas
push
mov
out
aas
cmp
xchg
es
es
lret
cli
push
or
inc
push
mov
mov
xor
pop
inc
xor
inc
shll
or
je
cmp
inc
push
out
xchg
cmpsb
push
bound
sbb
jmp
add
ret
dec
sar
mov
cmp
fsubl
pop
aad
lahf
cmp
ret
cmp
xchg
xor
shlb
outsl
mov
xchg
aas
fldcw
dec
repz
sub
mov
loopne
aad
push
push
ss
mov
cmp
idivb
loopne
pusha
das
je
aam
mov
or
pop
or
cmp
xchg
adc
push
jp
add
jo
inc
pop
cmp
repz
cmc
dec
add
clc
das
dec
mov
cmpsb
das
inc
rcrb
ljmp
mov
out
fsub
jbe
andb
or
sahf
mov
xchg
jl
imul
mov
mov
cli
dec
pop
lds
push
imul
xchg
sbb
push
jl
loop
sbb
pop
cmpsb
stos
iret
ja
inc
push
dec
sub
add
inc
inc
add
cmpsb
call
outsl
dec
in
and
inc
lret
jge
sub
test
cwtl
dec
hlt
inc
cld
call
imul
in
mov
lret
xchg
mov
inc
dec
xchg
mov
and
and
or
in
call
add
or
jl
rcr
and
lcall
gs
imul
dec
cs
aam
push
cs
cmp
cmpb
aam
mov
imul
pop
test
int3
faddl
stc
stc
inc
jae
or
cli
pop
mov
sub
int3
jne
loope
or
adc
ret
loop
ja
or
int3
fisubrl
cmp
pop
sbb
orb
fsubl
mov
push
push
and
stos
or
ficompl
pop
push
push
sub
ficoml
shll
pop
and
pusha
push
test
jge
rorb
aam
jne
mov
into
cmpsl
and
ss
sbbl
adc
inc
jb
addr16
mov
fs
sub
jno
jo
je
inc
jnp
dec
daa
lods
cwtl
punpckhwd
xor
jle
inc
mov
cld
ss
outsl
rclb
inc
push
ss
mov
mov
jg
sub
call
enter
mov
shl
pusha
in
bound
outsl
outsb
xchg
pop
outsl
icebp
setno
nop
in
out
rorb
or
pop
adc
xlat
notb
cld
pop
or
add
out
adc
in
gs
push
loop
imul
xlat
mov
sti
push
xchg
adcb
add
loope
or
cmc
cmpsb
cmp
cmpl
leave
or
jp
mov
sub
call
and
mov
cmc
xchg
les
dec
xchg
movsl
mov
lock
out
out
sub
mov
jno
cmp
hlt
xchg
cwtl
adc
pop
xor
sarl
push
mov
rorl
add
lea
xchg
push
cmpsb
xor
ja
es
xchg
in
mov
xor
icebp
lds
ficoml
popf
or
cli
push
int3
pop
dec
xor
jnp
mov
adc
cmp
repnz
repz
and
jb
mov
ds
std
loope
aas
sub
add
cmp
add
dec
push
mov
sbb
into
pop
scas
lret
movsl
add
out
push
in
sub
mov
lods
rcll
in
lret
or
clc
and
shrl
loope
push
mov
into
mov
dec
inc
xchg
out
or
fs
push
sub
fwait
xchg
inc
sub
cmp
lods
inc
xor
in
xchg
outsb
fistl
pop
mov
pop
adc
inc
mov
push
cmp
jo
sbb
bound
cli
es
roll
xlat
push
sbb
xchg
es
bound
xchg
dec
mov
dec
push
mov
into
imul
loop
test
lret
lcall
pop
mov
and
int3
mov
movsl
shlb
xor
jnp
cmc
cmove
aad
pushf
dec
xor
xchg
lods
frstor
or
lahf
das
enter
xchg
dec
sbb
rcr
or
loop
aad
dec
test
inc
popa
scas
ret
ret
cmpsb
push
mov
out
jb
mov
test
mov
pop
sub
dec
leave
adc
push
fnstenv
or
push
inc
fldcw
jl
rorb
icebp
push
push
das
sbb
pop
adc
leave
jo
stos
sub
inc
out
outsb
not
jno
in
scas
jnp
lods
pushf
sbb
mov
shlb
jg
add
pop
orb
sub
popa
mov
sti
or
mov
jnp
addb
push
in
imul
lret
xchg
or
sbb
cmp
call
inc
test
and
and
daa
dec
aam
addr16
push
jg
jnp
cmp
and
dec
test
inc
xor
aad
sbb
leave
adc
scas
iret
pushw
ljmp
xchg
mov
repnz
lahf
sti
jge
pop
and
mov
or
pop
sti
scas
xchg
adc
ljmp
rcl
insb
test
adc
mov
je
pop
mov
add
sbb
in
dec
inc
push
ret
pop
mov
cmp
int
pushf
cmc
sub
pop
mov
test
mov
ljmp
adc
insl
inc
lea
xchg
and
imul
ficomps
sbb
loope,pt
xchg
bound
push
stc
shr
fstps
or
xor
and
addr16
xor
pop
adc
or
aas
sbb
sub
loopne
insb
xor
sbb
jo
push
into
adc
repz
std
fldl
lret
mov
mov
bound
push
fs
inc
mov
inc
in
sbb
movsb
jl
jg
sbb
adc
sbb
and
push
xor
pop
out
popa
fisubl
add
jns
push
inc
jmp
cld
jmp
add
fnstsw
jo
xchg
cmp
lods
stos
hlt
xor
mov
jecxz
mov
xchg
scas
sub
imul
aam
add
stos
lahf
psubq
add
sbb
push
outsl
inc
aaa
push
lods
out
nop
mov
jns
sub
xor
add
aad
sub
rcr
fisubs
push
inc
dec
xchg
xor
pop
mov
jp
testl
outsl
lock
inc
js
enter
sub
mov
jbe
in
mov
mov
cmp
dec
in
jge
add
shrb
adcb
out
test
cmpsb
aam
add
jae
inc
pop
stos
int3
cmpb
fisubs
in
movsb
scas
mov
pop
inc
and
inc
sub
bswap
scas
sbb
mov
or
mov
push
lea
mov
fdivrs
sbb
push
mov
dec
xchg
mov
push
test
cmp
push
xchg
or
jge
sahf
in
in
mov
jbe
cmpsb
dec
movsl
outsb
test
sub
inc
cs
mov
clc
mov
xchg
adc
push
das
dec
pop
dec
cmc
push
mov
ljmp
adc
insb
in
cmc
mov
fistl
in
or
inc
fidivrl
push
cwtl
jo
rol
pop
cltd
sbb
arpl
xchg
push
add
jmp
out
int3
or
inc
in
loop
bound
cmp
stos
rorb
loop
cmp
cmpsl
mov
add
sbb
rcll
mov
jnp
loop
in
ljmp
outsb
xor
test
adc
dec
dec
leave
sbb
aam
push
mov
or
andl
push
out
aam
cmp
mov
jmp
sahf
cmp
or
ficomps
out
lea
mov
scas
je
repz
inc
lds
mov
xlat
lahf
xchg
out
xchg
sub
subb
mov
dec
dec
lcall
sub
sub
sbbb
adc
xchg
fidivrl
outsb
int3
sbb
int3
add
cmpsl
adc
lret
loopne
out
mov
insl
jg
mov
stos
out
cmp
jmp
aam
dec
sahf
mov
jecxz
push
xor
cmp
aaa
popf
mov
test
ja
cmp
xchg
or
jge
add
loopne
xchg
mov
push
push
mov
cmc
pop
mov
push
outsb
aam
rcrl
or
bound
inc
xor
nop
pushf
pop
sti
jne
shrl
daa
pop
orl
lock
pop
int3
gs
movsl
in
repnz
leave
lret
xor
push
sub
jbe
jmp
pop
jmp
pop
test
xchg
ds
ljmp
sbbl
push
pop
sbb
add
loopne
lret
test
jp
fs
test
jge
outsb
push
mov
xor
pop
imul
dec
shl
movsb
das
jecxz
inc
jns
lea
xor
pop
jnp
jmp
push
add
jae
push
mov
aam
jns
xlat
jecxz
pop
icebp
and
popf
lcall
in
jae
ljmp
push
ds
ja
mov
popf
lea
hlt
mov
and
or
jno
cmp
mov
xorb
adc
jne
in
pop
jo
adc
xor
icebp
fs
mov
into
mov
lahf
push
test
int
cmpb
jbe
inc
mov
sub
push
std
std
out
inc
inc
filds
mov
xchg
push
aam
imulb
repnz
in
std
pop
jp
scas
push
hlt
fmuls
jno
dec
ds
decb
sub
xor
jnp
dec
lds
mov
sub
mov
dec
icebp
sbb
and
fs
das
jno
adc
sbb
xor
test
or
insb
mov
fisttpll
xchg
mull
xchg
lods
popf
icebp
jecxz
loopne
mov
sub
fucomi
popa
daa
jl
inc
dec
es
aas
xchg
cwtl
pop
and
sbb
pop
cmp
out
sbb
ljmp
cs
adc
addr16
enter
pop
jnp
je
out
pop
xchg
cmp
xchg
pop
scas
inc
xchg
sub
add
sub
or
inc
stos
pop
mov
sbb
inc
push
mov
fisttps
jecxz
lret
cmp
mov
outsb
add
xchg
adc
in
movsb
les
fs
inc
cmp
stos
pusha
jb
push
lret
cmp
sahf
enter
jle
push
dec
outsb
xor
fs
mov
mov
lret
aas
mov
test
pop
jb
xor
jno
iret
popf
rcr
std
jns
push
adc
std
mov
in
das
xlat
repnz
imul
xlat
cmp
test
xchg
mov
xor
lahf
aas
pop
call
dec
int
lret
fldenv
imul
xor
out
mov
xchg
mov
or
jl
jo
or
xchg
xlat
aad
pop
into
xor
out
bound
frstor
mov
scas
outsb
and
inc
stos
push
jo
icebp
mov
call
add
ds
mov
addb
vpmacssww
popf
sti
les
and
stos
ret
and
jmp
dec
cmp
xor
es
xor
ret
test
mov
cmc
fnstcw
scas
adc
repnz
stos
jo
mov
fisubrl
jb
shll
test
aam
dec
cwtl
pusha
jmp
jl
jbe
loopne
out
and
cmpsl
fwait
xor
jne
mov
mov
jmp
mov
mov
xchg
shll
addr16
fs
out
int3
push
jge
xchg
sub
int3
cmp
lahf
sahf
push
es
jmp
dec
pop
int3
dec
adcl
and
pop
sub
xchg
add
or
pop
pusha
gs
mov
mov
fs
mov
sbb
aam
mov
shl
dec
lock
mov
mov
mov
push
push
imul
pusha
inc
int
mov
mov
push
ja
inc
fwait
orb
inc
imul
or
add
clc
aad
loopne
scas
sbbl
ljmp
push
cltd
hlt
insb
test
or
aam
test
movsl
xchg
cmc
mov
ret
jo
int
negb
popa
ds
mov
or
rcll
pop
std
sbbb
mov
outsb
sub
or
cs
and
fs
fs
mov
pop
sbb
scas
lods
loopne
inc
cmp
les
and
stos
cmc
into
movsb
jbe
sbb
pushf
orl
loope
inc
jecxz
cld
shlb
jae
insb
fsubrl
adc
es
mov
repnz
test
pop
adc
mov
pop
mov
jno
cmpsl
sub
pop
dec
xchg
fisubs
inc
xorb
test
mov
pusha
xchg
sbb
or
aaa
movsl
fmull
adc
cmpsb
cli
testb
fs
jl
cmc
in
dec
out
call
xchg
repnz
enter
adc
xorb
jp
loopne
and
lcall
jge
stc
adc
dec
xchg
in
or
mov
mov
add
jle,pt
cmpsl
outsb
jo
or
pop
dec
addr16
xchg
sti
mov
jle
xor
fcoms
aad
mov
loop
cli
arpl
lods
stc
out
out
movsb
lret
les
and
dec
adc
mov
mov
push
push
adc
mov
ret
test
scas
loop
push
int3
dec
or
xchg
inc
call
cmc
xchg
push
cli
das
jp
or
mov
sbb
xor
cmp
lcall
addb
dec
and
and
dec
mov
test
cli
cmpb
or
inc
and
cmp
icebp
fwait
rcrl
mov
fsts
push
mov
cmpsl
mov
xor
inc
fcmovne
or
fisubs
es
sub
loope
jbe
jbe
fucomip
mov
sarl
sbb
mov
adcl
das
movsl
sbb
int3
dec
sub
xor
adc
inc
cmp
pop
inc
cli
and
xchg
jo
mov
sbb
xchg
xchg
fs
int3
call
lahf
lcall
pusha
pop
sbb
fstl
xor
mov
fwait
inc
jae
cld
clc
push
loop
mov
dec
fildl
and
cmp
imul
mov
add
out
pop
nop
and
dec
popf
inc
xchg
pusha
inc
mov
stc
lahf
ffree
add
lods
ja
sub
push
inc
push
mov
ficompl
mov
mov
sbb
add
fscale
push
test
jnp
mov
outsb
add
mov
out
insl
ds
xor
ds
out
addl
pop
pop
xchg
rcl
mov
xchg
lret
sub
and
push
imul
pop
mov
jne
roll
xlat
pushf
sbb
xchg
adc
cli
xor
cmp
push
xor
test
mov
push
xor
daa
je
mov
insb
andl
in
mov
nop
and
arpl
mov
inc
sbb
mov
add
and
enter
jmp
sarb
cmp
in
fiadds
jge
paddw
cmpsb
sti
or
inc
push
rcll
outsw
dec
scas
sbb
or
mov
adc
dec
add
adc
sub
pop
adc
mov
fldl
inc
rcr
xchg
or
xor
movhps
push
xor
lock
push
mov
in
clc
jns
stc
push
add
and
pop
fisubrs
fnstcw
imul
or
pop
std
aas
dec
add
dec
sub
fbstp
mov
sti
mov
cmp
cltd
inc
and
sahf
cmc
test
dec
pop
push
mov
mov
js
es
push
sub
pop
imul
adc
sub
mov
popf
sub
das
inc
adc
inc
shr
sti
pop
cld
scas
sbb
arpl
push
mov
adc
popa
sbb
rep
inc
das
or
leave
movsb
into
cld
fnsave
outsl
jmp
subl
testb
adc
inc
aaa
add
ja
int
stc
jle
push
int
repnz
lods
and
or
push
ss
sbb
pop
push
lds
sbbl
lret
jmp
mov
aam
fcmove
add
mov
cmpsl
push
mov
test
imul
inc
dec
jns
addr16
jle
inc
dec
cmpsl
jbe
dec
aas
mov
sbb
inc
jno
addr16
aaa
fcmovnbe
das
cmp
out
in
lock
push
mov
insb
sbb
mov
into
imul
es
sqrtps
fmuls
insb
mov
pusha
fisttpll
lcall
dec
dec
mov
push
xor
mov
lock
push
cli
sbb
pop
mov
adc
mov
sbb
nop
cmp
lods
insb
xor
ds
icebp
xor
push
dec
call
and
mov
push
out
mov
outsb
pushf
movl
in
jno,pt
loopne
and
xchg
xchg
lods
jecxz
sbb
jecxz
sub
add
pop
mov
imul
adc
mov
test
sub
testb
fs
mov
fadds
lcall
ja
fimull
sbb
movsb
int
out
jnp
call
es
loopne
in
mov
test
cltd
mov
mov
sbb
xchg
mov
loope
and
cs
cmp
jne
or
mov
nop
sub
ret
int
xlat
aad
loop
cmp
aad
xor
out
mov
mov
push
adc
popa
sub
sahf
sub
or
mov
push
xor
test
pop
jns
inc
cld
rolb
pop
sbb
popa
inc
adc
jge
xor
pop
popf
int3
loope
mov
sbb
shl
jbe
adc
sub
add
push
movsl
cmpsb
aad
loope
adc
jo
xlat
lret
movsb
int
sahf
dec
sbb
push
dec
jmp
mov
rolb
sbb
push
jge
popf
jmp
jle
addb
xor
pop
in
sub
lea
pop
jae
inc
mov
out
dec
cmp
leave
mov
adc
dec
push
sub
inc
repnz
inc
sti
sti
pushf
sbb
adc
fildll
jl
push
cmp
js
test
xor
cmp
ja
mov
mov
mov
repz
dec
test
out
out
lcall
sbb
mov
int3
adc
fsubp
mov
loope
ret
test
mov
push
adc
out
orb
xchg
sbb
push
rorb
adcw
pop
push
and
inc
cmp
rolb
inc
jmp
adc
fcmovbe
push
mov
jge
cmp
push
lods
pop
in
shll
mov
fmull
sar
sar
popa
push
sbbl
mov
jnp
andl
pop
jo
jbe
popf
pop
mov
pop
push
dec
or
out
das
dec
loopne
fsubs
xor
pop
js
ljmp
ss
xor
ja
cmc
test
mov
mov
mov
mov
ljmp
xor
fwait
pop
popf
inc
fnstcw
out
fiaddl
jae
fistpl
push
pusha
mov
pop
subl
mov
int3
adc
and
mov
les
xor
jbe
leave
xchg
push
fs
mov
dec
addr16
jge
popa
les
jb
push
clc
test
xor
sahf
cltd
dec
pop
ficomps
rorb
mov
in
lret
mov
flds
push
lret
or
add
je
pop
iret
push
sbb
or
mov
push
mov
fldt
loopne
sahf
add
lods
mov
in
stos
pushl
jp
aam
pop
push
xor
xchg
xor
mov
jp
or
mov
mov
add
pop
loop
pusha
popf
subb
mov
in
or
xchg
push
fildll
sar
nop
mov
mov
int
sar
jp
and
js
test
aaa
loopne
out
xchg
insl
dec
and
or
and
push
fs
je
cmc
push
popa
sub
jmp
mov
shlb
int
enter
sbb
test
sub
jp
mov
mov
and
imul
push
mov
mov
mov
std
dec
je
cmpl
sbb
cmp
mov
adc
in
clc
stc
dec
mov
inc
xchg
adc
loop
push
xchg
mov
fs
sbb
fadds
mov
sbb
insb
sbb
int3
lret
sub
push
ljmp
je
pusha
pop
xor
mov
pop
clc
push
mov
mov
shr
mov
fmuls
adc
cmp
loope
fisttpl
aas
sbb
add
lods
inc
mov
stos
add
scas
repz
outsl
cs
pop
arpl
dec
ds
push
shlb
nop
outsl
ss
xor
xchg
lods
repnz
mov
testl
push
iret
push
mov
out
cmp
scas
movsl
jne
dec
jle
push
fmull
pop
and
insl
pop
mov
loope
dec
mov
dec
and
push
pusha
jle
lea
sbb
push
jg
or
out
popf
pusha
icebp
loope
scas
shrl
mov
and
jo
pop
xchg
in
mov
or
sub
leave
js
movsl
repnz
xor
or
inc
xchg
pop
push
les
ret
addl
pop
add
jecxz
stos
sahf
clc
xlat
cli
push
mov
nop
adc
and
fcompl
movsb
stos
fmul
fwait
cmpsl
jns
jmp
addl
hlt
push
cli
daa
or
negl
arpl
imul
cmp
outsl
pop
stos
shld
xchg
pop
rclb
cmp
lods
and
jno
inc
pop
repnz
adc
sub
push
jbe
inc
outsl
idiv
xchg
cmp
dec
mull
jb
xchg
dec
test
dec
insl
shl
sbb
sub
mov
les
call
gs
dec
ret
xchg
jmp
jg
push
mov
pop
adc
lock
push
jle
jb
aaa
jne
dec
dec
movsl
add
jle
stos
nop
mov
adc
imul
and
rorl
mov
into
adc
sbbl
hlt
aas
into
push
or
imul
aaa
jecxz
adc
rclb
mov
clc
cli
and
lret
xor
in
add
clc
pop
push
mov
mov
push
fidivrs
sbbl
or
arpl
jl
loop
pusha
enter
push
mov
jecxz
cmpb
shrl
add
jnp
mov
lcall
mov
mov
sti
jne
pop
dec
push
icebp
cmp
xlat
xor
push
cmp
negb
and
pop
add
jae
xorl
in
cmp
lahf
insb
mov
int
cld
jae
xor
xor
addr16
fiaddl
jb
jno
add
rclb
in
das
out
xor
add
xchg
mov
sbbl
adc
test
lds
pop
sti
pop
stos
xchg
mov
dec
rcrl
mov
insb
xor
add
ja
mov
cld
add
add
pop
and
mov
pop
scas
mov
cmp
pop
js
and
loope
mov
jmp
push
sbb
cmpsl
daa
ficoml
inc
das
lret
inc
daa
sub
pop
mov
xchg
dec
es
test
lret
rcrl
or
mov
cld
lds
fwait
adc
pop
add
mov
fisubrl
int3
mov
jo
out
lretw
or
sbb
mov
call
and
mov
xchg
cmp
jle
cwtl
push
cld
std
push
xchg
sbb
pushf
mov
push
xor
push
add
xchg
and
dec
push
test
push
ljmp
icebp
daa
and
insl
sahf
cwtl
inc
sub
mov
stos
cli
jge
inc
push
aam
mov
loopne
movsb
lods
stos
mov
mov
out
vshufpd
jl
loopne
add
dec
adc
shlb
xor
xor
and
es
gs
mov
jno
lock
cltd
jecxz
xchg
shll
jg
pop
into
call
rolb
mov
lea
cmp
subb
cmp
push
adcl
int
fsubrl
fsubrl
xlat
sahf
int3
inc
outsl
jp
clc
clc
jge
mov
mov
jbe
stos
pop
mov
or
rcrl
jmp
lea
add
push
lods
sti
cmp
push
jecxz
shlb
lret
mov
aam
fs
or
push
int
dec
xchg
jae
aam
mov
pop
sarb
out
push
pop
xchg
mov
jmp
push
movsb
mov
cli
dec
lods
and
lds
push
xchg
std
pop
cmp
xchg
adc
mov
mov
out
ret
in
aaa
int
movsb
adc
test
aam
adc
pop
xchg
ds
push
mov
and
lds
dec
nop
jmp
loopne
jecxz
mov
ja
shr
mov
push
sub
fcoms
ret
out
lret
pop
popf
mov
mov
aas
je
xchg
test
aas
push
repz
imul
std
packssdw
mov
stos
mov
push
push
rorl
dec
in
xor
xchg
bound
dec
unpckhps
push
lock
adc
add
sub
adc
jo
inc
lahf
movsl
push
subb
add
loop
adc
inc
and
add
pop
frstor
ljmp
jb
aad
mov
test
pop
bound
gs
xor
inc
jmp
pop
and
fcmovnbe
adc
repnz
inc
mov
subb
sub
or
push
sbb
ret
jmp
push
and
mov
push
pop
cmp
into
stos
in
xor
dec
cmp
icebp
add
xlat
sbb
stos
xlat
pop
pop
es
add
pop
pop
adc
pop
push
mov
pop
mov
aas
xchg
inc
jb
or
pop
add
mov
mov
aad
hlt
push
mov
bound
test
jno
jo
dec
add
dec
sub
stos
xlat
add
xchg
andl
int3
sbb
pop
dec
mov
iret
fdiv
frstor
mov
inc
faddl
xchg
or
mov
out
cmp
sbb
sti
ss
fwait
and
js
and
insb
mov
arpl
jp
and
xchg
imul
scas
rol
sahf
pop
mov
mov
jnp
inc
out
les
add
out
repz
ds
inc
ja
or
xchg
jge
iret
xor
mov
fs
loopne
sub
das
cmpsb
cltd
movsl
movsb
lcall
add
adc
jg
stos
into
outsl
adc
add
inc
stos
incl
pop
fcoms
xor
clc
ret
std
push
fldl
insb
push
push
mov
je
mov
outsl
lret
int3
xlat
popa
adc
test
bound
dec
jb
add
das
push
xor
jns
popf
adc
ret
mov
repz
out
sbb
xlat
push
jl
adcb
lret
pop
push
xchg
in
shlb
dec
dec
push
notl
enter
sbb
cmpb
negb
ljmp
je
arpl
movsb
xlat
rcll
loope
movsl
or
std
push
mov
mov
repnz
scas
adc
jb
push
imul
or
in
mov
testl
mov
mov
jmp
push
stos
addr16
push
enter
les
pop
inc
std
repnz
mov
xor
dec
in
movsb
jo
sbb
clc
addl
push
jge
cmp
out
sahf
and
insb
inc
cmp
in
adc
and
test
ljmp
jnp
mov
cmp
pop
mov
mov
sub
xchg
mov
enter
fistpll
jae
mov
dec
lahf
mov
sub
mov
mov
shlb
cmpsl
fcmovu
scas
loope
subb
test
movsb
orl
sti
jle
pop
mov
fidivrs
and
movsl
jne
insl
push
lock
xor
popf
sub
adc
xchg
inc
sahf
jno
sahf
scas
adcb
push
dec
flds
loopne
xchg
loopne
rorb
mov
and
popf
adc
push
cltd
adc
lahf
inc
les
cmc
jbe
mov
mov
inc
cmp
mov
or
mov
adc
dec
scas
push
icebp
mov
xchg
mov
inc
lret
sub
lcall
pop
mov
cs
push
mov
call
jnp
sbb
test
aad
mov
dec
adc
dec
cmp
sub
les
cmp
mov
inc
rorl
inc
push
fadds
xor
scas
adc
inc
sub
nop
push
aad
sub
pop
cmp
xor
shll
cmp
inc
cmp
ljmp
or
jae
jp
flds
psraw
jnp
sub
sub
xchg
pop
enter
insl
iret
enter
outsl
bound
fsubr
scas
aas
inc
mov
cwtl
je
inc
or
out
xor
cwtl
pop
incb
dec
sub
popf
outsl
and
fwait
pop
fstpl
loope
lock
mov
popa
mov
clc
pop
inc
add
mov
jb
cmp
push
dec
mov
cmpb
call
ljmp
pop
lret
or
popa
jg
push
mov
fwait
inc
xor
std
lahf
mov
bound
lds
push
inc
mov
xor
jno
out
test
popf
sbb
int
shlb
cltd
xchg
or
jg
stos
outsb
xchg
xlat
stc
or
xchg
inc
mov
or
fisttps
xlat
xchg
add
xchg
test
aad
add
xor
sbb
popa
cmp
fiadds
shrl
add
mov
shll
repnz
inc
scas
or
std
cmp
mov
or
sbb
xchg
sbb
test
in
cs
into
fldenv
cmp
scas
add
add
adc
sub
fstps
enter
dec
int
jne
mov
neg
pop
inc
insl
sub
mov
pop
sub
jle
xchg
push
ds
and
inc
sub
cmp
lods
or
and
mov
test
and
cmp
out
xor
and
repz
sbb
or
mov
add
cmp
adc
mov
sbb
cmp
add
and
mov
lret
add
xor
or
xor
cld
sbb
insb
mov
fucom
xchg
into
sub
inc
cmpsb
ss
mov
inc
cmp
jns
shll
adc
mov
cmpsb
into
adc
push
sbb
pop
shll
inc
arpl
iret
fdivl
dec
roll
jno
arpl
std
sub
or
repnz
mov
sbb
loop,pn
mov
popa
inc
xchg
cwtl
fimuls
jnp
push
mov
dec
fwait
push
mov
add
or
insl
loope
movsb
pop
xchg
push
mov
mov
and
sub
mov
push
mov
stos
sub
sbb
jnp
sbb
dec
sub
fadds
lea
jno
mov
fmul
rolb
sub
bound
in
mov
data16
ret
push
enter
xchg
push
jl
out
jbe
cmpb
push
cmp
gs
bound
lock
movsl
sbb
jo
imul
mov
sbb
shll
fmull
mov
mov
pop
sbb
addr16
push
or
mov
int3
fwait
and
and
mov
jno
or
and
cli
fadd
dec
mov
cmp
je
sbb
lret
add
jns
and
jge
lret
push
jo
sbb
mov
inc
clc
aad
in
push
inc
pop
pop
cmp
stos
sbb
adc
add
mov
ds
sbb
push
fisttps
push
loop
pop
mov
sbb
sub
cmp
inc
das
add
es
cmp
mov
out
xchg
mov
in
mov
bswap
or
cwtl
lret
adc
push
xor
add
mov
test
adcl
xchg
stos
jae
out
push
dec
inc
rcll
lods
adc
icebp
mull
pushl
cmpsl
hlt
mov
sbb
rolb
push
cmpsl
add
in
flds
fildl
xchg
ds
dec
and
dec
ds
cmp
adc
pushf
lods
les
pop
sbb
push
fmuls
pop
test
jns
mov
loop
pop
mov
inc
outsb
loope
ja
out
cmpsb
mov
shl
scas
daa
loope
movsb
xor
cmp
out
dec
das
lods
dec
cli
adc
fsubr
test
push
or
iret
shll
sbb
bsf
push
enter
jecxz
std
leave
and
or
outsl
jbe
lock
mov
ret
inc
dec
scas
push
iret
fidivrl
sub
push
divb
push
xchg
leave
decl
or
mov
repnz
pop
lret
mov
and
in
je
int
push
lods
dec
lods
pop
xchg
inc
mov
data16
sub
pushf
das
pop
inc
shlb
stos
imul
fbstp
out
xor
adc
inc
mov
mov
dec
sub
cmc
jne
bound
imul
mov
jo
sub
lcall
lahf
incb
fdivrs
test
iret
lods
test
push
sahf
repnz
sub
adc
mov
mov
jg
out
popf
add
adc
xlat
sbb
push
add
push
pop
xor
mov
aad
push
and
xchg
adc
push
dec
aam
adc
mov
out
insb
hlt
popa
aas
rcrl
jmp
out
jb
pop
mov
jg
cld
xchg
dec
sbbl
add
inc
lds
lock
test
daa
cwtl
stc
xlat
jl
jo
jmp
js
pop
pop
lret
jns
cmp
sbb
dec
adc
pop
out
mov
jae
sti
mov
fdivr
leave
xlat
lods
aaa
aaa
shll
mov
inc
stos
es
in
inc
pop
jbe
mov
mov
lret
outsb
mov
mov
adc
push
loopne
nop
cmp
add
pop
push
pop
fiaddl
sti
fwait
pop
sti
outsb
sbb
arpl
xor
jbe
cmp
sub
es
aam
mov
aaa
sahf
mov
test
fs
or
inc
loope
pushf
sub
das
pop
loop
cmp
rorb
test
sbb
iret
pop
cmpsb
mov
cmp
adc
repnz
fwait
jge
mov
lock
out
mov
divps
xchg
fcoms
fs
push
or
jns
dec
movsb
cmpsl
movsb
xchg
push
cmp
mov
dec
dec
jg
scas
ret
rol
lcall
xor
mov
aas
sub
aam
add
lcall
push
fistpll
pop
pop
lret
jecxz
pop
pop
add
mov
aad
imull
test
mov
jb
push
int
out
aad
mov
insl
inc
or
mov
adc
jae
jne
mov
out
inc
sbb
aaa
ret
or
es
mov
xlat
jbe
push
jp
imul
jecxz
and
add
cmp
inc
popa
movl
arpl
and
fcmovu
cwtl
cmpsl
test
or
and
mov
sub
or
xchg
jne
sub
push
sub
mov
jmp
bound
jecxz
mov
mov
push
pop
xlat
jb
sbb
sbb
loop
pop
adc
dec
or
mov
aaa
pop
pushf
mov
loope
cmp
stc
and
jne
pushf
pop
xor
jecxz
out
scas
daa
aam
orb
push
add
addl
dec
push
rorl
std
sub
mov
sbb
adc
pop
add
arpl
int
mov
sub
jmp
aaa
and
inc
xchg
test
sarb
jnp
call
adc
in
nop
and
xchg
shlb
jo
cwtl
add
shl
add
daa
inc
mov
fstpl
inc
fidivrs
les
xchg
or
xchg
mov
movsl
stc
loope
pop
mov
shlb
ds
dec
mov
pop
lret
fs
mov
out
in
push
ret
fcom
andl
cmp
sbb
sub
filds
xor
xchg
or
mov
loop
xor
adc
jg
loope
mov
std
inc
sub
dec
or
xchg
repz
lods
add
cmpsl
sbb
sarb
mov
mov
mov
es
out
cmpsl
out
fimull
popa
mov
test
mov
popf
dec
imul
adc
add
je
fdivrl
iret
mov
jb
les
push
test
mov
mov
inc
or
sub
mov
mov
lods
pop
mov
orb
repz
jae
in
xor
and
vdivss
movsb
sti
pop
xor
xchg
adc
push
andl
inc
std
xchg
adc
add
lds
mulb
ret
mov
pop
push
and
ds
sarb
hlt
call
sub
outsb
inc
jge
push
and
ss
out
jecxz
mov
cld
mov
addl
xor
movsb
popa
adc
and
lock
mov
icebp
or
movsb
mov
or
aam
in
jl
ss
subb
or
sbbb
push
or
mov
adc
std
xor
adc
stos
inc
loop
pop
jb
jb
test
and
sbb
in
cmpsl
lods
rol
cmpsb
add
mov
push
lods
out
xorb
inc
mov
mov
jno
inc
add
push
pushf
sahf
cmp
sbb
lds
or
outsb
lods
cli
pop
repnz
fldt
lods
xor
inc
cmp
in
fisubrs
jge
pusha
cmp
sub
fucom
inc
mov
fucomp
adc
jbe
dec
int3
jb
sub
call
mov
xor
jne
aam
in
cs
lret
or
push
mov
lret
out
dec
aad
inc
dec
out
fwait
dec
aad
lret
das
repnz
xchg
jle
sub
stos
fnsave
xchg
mov
nop
pop
mov
and
xor
inc
dec
es
sti
and
push
lret
jbe
aam
dec
imul
in
aam
mov
adc
enter
sub
lock
cmp
lea
repnz
xor
sub
or
xchg
repnz
and
ret
ret
or
int3
sbb
dec
sbb
idivl
push
lahf
add
and
mov
pop
cmp
push
sub
js
sbbl
cmpb
xchg
mov
sub
add
cmp
xchg
jbe
leave
jecxz
lret
mov
push
es
jbe
lret
dec
outsl
lret
cmp
push
gs
int
rcrl
insl
add
xor
pusha
jl
movsb
pop
jg
mov
shll
ds
add
cmpsb
mov
xchg
sbb
sbb
jne
lods
mov
cli
repnz
aaa
push
jle
and
movsl
xchg
int
push
jecxz
xor
inc
xchg
sub
xchg
js
negb
sarb
icebp
mov
sarb
cmp
mov
vmovntps
xor
in
sub
out
gs
loopne
stos
xor
mov
cmpsl
sub
pop
leave
mov
scas
scas
jnp
in
adc
add
cmc
jne
jp
push
xchg
aas
mov
dec
loope
out
mov
insb
test
xchg
pop
jp
pusha
xchg
rol
dec
popf
mov
push
pop
push
sub
and
or
es
xchg
test
insl
lret
or
les
push
jl
push
pop
pop
roll
jb
inc
stc
pop
test
cmpsb
dec
or
mov
jmp
dec
cmp
adc
mov
ret
cli
pop
cmp
dec
pop
popa
mov
subb
pop
xor
dec
xchg
out
repnz
add
mov
mov
cmp
and
jnp
push
stos
test
cmp
in
movl
and
inc
loopne
orl
shrl
lods
xchg
xchg
hlt
mov
mov
cwtl
repz
lea
sbb
stc
andb
xor
push
repz
inc
pop
clc
aaa
lcall
iret
lods
insb
cmpsb
testb
jne
sub
or
in
xchg
and
or
ret
and
sbb
shll
dec
mov
movsbl
xchg
popf
push
das
inc
dec
mov
es
les
fldt
dec
or
loope
in
stos
mov
xchg
fbld
cli
leave
clc
and
rcrl
push
jecxz
mov
loopne
in
int3
and
subb
jmp
sahf
jb
cmpsl
pop
int3
xor
jmp
outsl
jl
inc
jbe
out
jnp
jns
push
das
mov
push
adcl
testb
xchg
in
rorb
xchg
std
cwtl
or
jno
call
daa
stos
mov
decl
add
fldt
insb
les
fmull
repz
mov
in
adc
lock
dec
mov
add
push
xchg
inc
lea
inc
cmovno
es
add
sub
out
mov
push
shlb
aas
sub
pop
imul
and
jecxz
aam
loopne
mov
add
inc
outsl
xor
xlat
cltd
cmp
call
cmp
adc
lret
mov
xor
pop
clc
dec
mov
lcall
xchg
mov
loopne
in
clc
sbb
arpl
enter
lds
int3
push
test
mov
cli
push
push
lea
das
jno
and
cmc
pop
icebp
inc
xchg
dec
jmp
sbb
jno
mov
scas
imul
jg
dec
imul
push
mov
int
xchg
jmp
mov
sti
push
dec
lea
and
fwait
dec
push
gs
inc
or
adc
inc
xchg
lds
les
ret
in
test
push
ja
jns
inc
out
aam
fildll
pop
push
test
fld
push
xor
adc
bound
jg
pop
mov
leave
pop
add
in
or
dec
movl
lock
sbb
jne
jl
cmp
insl
or
cwtl
dec
decb
or
sahf
daa
xchg
hlt
orb
loope
xor
mov
gs
stos
sbb
mov
mov
push
mov
pop
xchg
shlb
xchg
imul
cs
test
pop
dec
dec
imul
int
push
mov
loop
lea
mov
push
mov
jl
nop
xchg
lods
push
push
dec
or
lret
sub
push
cmp
outsb
jo
test
inc
pop
mov
and
xor
fsub
add
mov
popa
dec
gs
sahf
add
lcall
mov
ja
stos
les
xor
ss
mov
mov
sub
or
nop
xchg
push
out
dec
sub
push
jmp
add
add
mov
test
les
and
jge
pushf
popa
xor
fwait
jbe
aad
sbb
inc
dec
mov
in
ds
mov
push
or
push
push
inc
iret
lods
mov
stos
push
push
sub
lret
xchg
shlb
ret
iret
add
inc
mov
pushf
call
aaa
push
mov
mov
adc
jo
mov
xchg
or
into
xchg
out
sti
je
shlb
adc
xchg
pop
add
dec
loopne
imul
jecxz
dec
clc
sbbl
push
or
cmp
add
lds
sub
inc
xor
push
sub
jge
or
and
xchg
roll
outsl
sub
sub
push
add
shlb
lret
cmc
int3
fdiv
dec
insb
pop
sbb
out
mov
pusha
lcall
cmp
xor
push
in
xlat
sub
int3
in
dec
loop
add
movsl
pushf
fsub
pop
pop
iret
pop
lock
cltd
lea
dec
fists
pop
into
xor
mov
loopne
and
into
scas
sti
stc
imul
and
lods
mov
push
sub
sbb
loop
adc
int3
mov
mov
jnp
push
test
mov
jecxz
cmc
jo
les
inc
roll
pop
shlb
mov
lods
pop
adc
out
jo
shrb
test
mov
add
pop
stc
push
cs
dec
mov
xor
push
or
ss
sbb
fldt
or
mov
daa
xor
and
shll
xchg
repnz
xor
push
mov
jne
outsb
enter
mov
stos
in
jle
insl
push
inc
repz
enter
insl
push
dec
loopne
add
out
aaa
xchg
and
stos
mov
sbb
cs
cmpsl
add
out
push
push
jmp
pop
push
push
outsb
push
dec
dec
fwait
or
inc
repz
and
testl
xor
sub
inc
mov
mov
add
cmp
adc
push
out
outsb
or
int
out
push
xchg
decb
popa
lea
jae
cmp
or
sub
dec
fdivrl
and
add
cwtl
inc
dec
call
ljmp
out
mov
and
lods
cli
roll
jmp
and
je
mov
aad
cld
lret
pop
mov
mov
cwtl
dec
add
mov
jne
sbb
adc
cmpsl
sbb
notl
cmovno
das
movsb
imul
movsl
out
dec
mov
ss
xchg
ds
inc
jns
in
or
xlat
insl
cmpsb
cmpsb
pop
insb
cmovs
mov
cmpsb
add
repnz
cmp
pop
mov
cmc
movntq
xchg
jns
or
mov
gs
iret
rorl
out
out
imul
iret
pop
adcb
mov
outsb
inc
xorb
sbb
into
mov
sarl
adc
inc
in
sub
iret
orb
test
mov
pop
sahf
stos
test
or
addb
stc
test
sbb
les
loop
mov
jg
fnstcw
and
inc
sarb
nop
sarl
rolb
pop
xor
pop
mov
test
xor
add
mov
add
frstor
int3
sub
xchg
add
mov
out
sub
clc
lods
shlb
in
jle
in
scas
jmp
xchg
fistpl
mov
pusha
add
mov
bound
mov
push
mov
inc
mov
xchg
leave
loopne
add
orb
insb
adc
movsl
shrl
std
cmp
pop
jecxz
and
pop
cs
ret
pop
into
push
mov
or
xchg
jno
or
popf
fistps
xchg
repnz
shlb
insl
fstpt
flds
rclb
std
sub
mov
dec
fwait
jns
cmp
call
adc
insl
imul
dec
scas
xor
cmp
cmp
cli
cmp
adc
xlat
shrb
cmp
dec
xor
jnp
jecxz
inc
rorb
xchg
dec
adc
lea
stc
mov
and
ret
or
pop
mov
sub
pop
test
mov
jecxz
aam
and
subl
repnz
or
cmp
mov
mov
jb
push
lahf
test
cmpsl
sub
adc
add
fs
adc
cmp
add
imul
jge
cmp
mov
mov
inc
je
pop
mov
mov
jo
imul
lds
imul
mov
fbstp
sub
stc
test
dec
mov
ja
dec
sbb
xchg
fs
stc
and
mov
scas
por
jp
dec
mov
mov
jge
je
lock
int
push
stos
jp
add
jb
sbb
mov
adc
adc
enter
hlt
ficoms
sub
scas
adc
and
inc
mov
add
pop
or
and
jbe
dec
sub
sub
andl
mov
shl
adc
shl
enter
jae
testb
les
push
dec
enter
andl
mov
and
cmpsl
stc
mov
add
xchg
into
push
push
dec
add
lods
mov
push
icebp
leave
loop
adc
xchg
adc
lcall
imul
incb
xlat
fnstenv
rcll
iret
aam
push
je
mov
pop
push
cvtps2pi
repz
and
dec
mov
sub
and
gs
dec
ljmp
inc
sbb
jmp
mov
lds
inc
das
mov
or
lods
add
outsb
sbb
filds
mov
out
ljmp
adc
cmp
cmpsb
out
pop
dec
cwtl
xchg
push
movsl
mov
or
pusha
mov
shlb
pusha
push
ja
adc
loop
jmp
add
loop
mov
pop
sub
out
rclb
cmpsb
xchg
or
jae
sub
add
sub
shl
inc
fidivs
inc
cmp
dec
xor
mov
arpl
es
cwtl
in
into
lds
xchg
and
xor
in
and
xor
or
jb
rcll
js
jae
xchg
nop
popf
loope
mov
icebp
jge
push
and
mov
arpl
jle
push
push
xchg
push
xchg
add
jnp
fcmovnb
sarl
sbb
sub
push
mov
jecxz
xor
inc
test
dec
jo
mov
shlb
jmp
hlt
mov
cwtl
mov
xchg
daa
daa
frstor
inc
popl
jmp
mov
xor
jns
bound
add
pop
int
or
nop
add
out
mov
jbe
jge
ljmp
das
add
pop
sbb
xchg
cli
jle
mov
lcall
mov
or
lcall
pop
push
lods
pop
add
dec
xchg
inc
adc
and
orl
xchg
jg
mov
lea
xchg
push
jmp
icebp
pop
jns
andb
sbb
sub
sub
into
fidivrl
dec
and
push
cmp
mov
push
sbb
pop
fsubl
clc
jl
dec
aad
insl
imul
fs
add
ret
mov
push
outsb
xchg
push
sub
sti
jns
in
fcmovb
mov
and
jb
xchg
icebp
clc
imull
je
or
aam
je
addr16
in
inc
mov
sbb
aaa
lcall
into
xor
cmc
cwtl
adc
inc
xchg
pop
rorb
ss
jl
xchg
sahf
dec
scas
pop
icebp
sub
add
jbe
mov
leave
nop
lcall
cmp
mov
mov
imul
jae
fndisi(8087
sbb
push
jns
add
jle
inc
popa
push
adc
cmpsb
inc
decb
xchg
das
pop
cmp
mov
xor
mov
dec
inc
sahf
sbb
jb
popa
jnp
iret
and
das
das
ret
sbb
leave
cmpb
push
in
and
stos
cltd
mov
dec
insb
mov
mov
in
cmp
lds
mov
xchg
pop
jge
inc
and
dec
adc
lret
in
loopne
dec
sbb
ja
mov
aad
mov
mov
pop
inc
ficomps
sbb
and
sub
mov
xor
cmp
dec
int3
pop
in
adc
in
std
inc
sbb
xchg
jne
mov
mov
insl
jb
rcrb
pusha
int3
mov
add
cmc
mov
jb
or
mov
out
loopne
repnz
or
mov
test
pop
adc
ficomps
sbb
mov
push
push
bound
mov
mov
push
dec
arpl
into
push
add
fbstp
lahf
rcll
adc
stos
lcall
cmc
or
aad
in
mov
in
or
inc
or
outsl
xchg
or
mov
aaa
dec
iret
aad
mov
pop
push
ret
jno
inc
inc
mov
mov
je
ja
stc
adc
cmpsl
pop
push
test
xor
fcoms
push
outsl
xor
lcall
ds
hlt
pop
mov
sbb
fldt
loopne
in
cmc
jge
jge
icebp
mov
push
jo
lcall
xchg
add
push
push
es
pop
inc
loope
inc
adc
fldl
push
in
sbb
and
mov
cmp
jge
push
imull
mov
xor
lret
imul
push
inc
push
movsb
xor
loop
dec
xor
aad
push
int
and
inc
mov
lods
mov
xchg
sub
in
and
lods
inc
jns
or
cmp
sbbl
mov
inc
mov
cmp
sahf
pop
pop
lds
lret
out
rorb
dec
xchg
cmpsl
dec
mov
bound
cli
std
or
pop
fwait
out
fsubl
stos
xchg
fimull
jl
push
mov
xor
xor
dec
repnz
mov
adc
idivl
vmread
or
mov
imul
loop
pop
pop
icebp
xchg
int
scas
and
dec
iret
sbb
mov
cli
cs
or
std
mov
cmc
ret
sub
imul
xor
add
fiaddl
stos
in
inc
int
and
cmp
in
out
dec
dec
sub
arpl
imull
fists
push
fildll
xchg
inc
mov
lock
or
sti
dec
xchg
imul
xchg
xor
insl
pop
insl
lret
fs
push
mov
lea
fstpl
mov
jge
bound
mov
inc
jnp
fwait
sub
xor
cmpsl
je
and
nop
and
cmp
movsl
fwait
out
aaa
xchg
gs
loop
and
pop
pop
inc
adc
pop
mov
aas
int
fdivrl
out
push
and
stos
mov
fidivrs
cmp
add
push
sti
jb
repnz
nop
add
inc
lret
aam
sbb
mov
add
jmp
pop
aam
cmpb
movsl
out
pop
movsb
xlat
cmp
mov
jbe
pushf
fisubs
pop
ret
pop
cltd
repnz
data16
scas
loope
cwtl
sub
call
dec
cmpsl
or
mov
adc
push
sbb
mov
xchg
xchg
lods
dec
jno
xor
shrb
dec
or
test
imul
pop
aad
cmp
das
add
ficoml
mov
adc
jb
push
lea
std
pop
jb
jp
in
cmp
out
or
or
adcl
sub
adc
jno
inc
dec
lods
pop
mov
inc
jle
inc
popf
lods
cmpsb
pop
ja
dec
push
fwait
mov
adc
add
ljmp
clc
ja
sbb
xor
xor
jle
lret
xchg
dec
mov
push
rcrb
sbb
or
ljmp
lret
xchg
or
mov
mov
adc
out
jnp
imul
ss
or
pop
dec
aas
xor
ja
outsb
or
inc
mov
push
jmp
push
inc
leave
cwtl
outsl
jo
lods
rolb
fcmovnb
sub
mov
rcrb
mov
and
mov
cmp
sbb
pop
call
add
cld
test
pop
inc
sbb
rorb
push
aaa
inc
dec
in
sbb
aas
inc
imul
fdivl
nop
shrl
sub
or
push
loop
or
mov
push
xchg
mov
pop
mov
call
std
sub
out
mov
adc
xor
fdivr
popf
fdiv
inc
sub
imul
rcrb
insl
fidivl
jle
push
mov
jne
es
shll
pop
push
in
pop
outsb
aad
addl
xchg
jb
fisttpll
pop
cmc
add
mull
pop
xorl
push
fistps
or
gs
adc
pop
pop
fcompl
scas
mov
enter
sub
xor
outsl
sbb
in
sahf
push
test
dec
xchg
sahf
dec
jg
mov
xor
enter
sbb
mov
pop
jno
cmp
sub
into
insb
xor
inc
adc
repz
je
bound
xor
fcoml
jge
lcall
dec
sbb
push
mov
pop
mov
lcall
std
aaa
push
mov
jg
in
imul
outsb
pop
jb
js
sub
or
mov
cmp
push
fiaddl
adc
cmpsb
hlt
mov
and
pop
in
stos
repnz
pop
ds
mov
popa
jo
sub
add
jecxz
jnp
rcrb
pop
jge
inc
lcall
es
cli
cmp
mov
ljmp
sbb
pop
add
ss
lret
testl
decb
mov
push
cmpb
xor
jle
fimull
dec
shlb
dec
dec
sub
pop
daa
pop
int3
push
repnz
inc
int
jb
mov
and
iret
rorl
cli
pop
dec
push
mov
icebp
cli
jl
mov
dec
or
cmp
xor
bound
jnp
xorl
adc
loopne
mov
imul
or
mov
sub
sahf
or
mov
pop
and
js
mov
dec
cs
test
in
sub
push
sub
cmp
push
cs
dec
adc
dec
mov
sbb
leave
test
out
sbb
ret
mov
test
xor
dec
mov
stos
jnp
push
sbb
imul
mov
sbb
add
fucomi
sub
mov
push
cmp
or
into
mov
pop
mov
mov
lret
ret
push
lcall
pusha
mov
aad
mov
inc
jle
daa
xor
xchg
mov
push
ds
fwait
sbb
jno
je
and
andb
push
mov
imul
mov
dec
sub
sti
ss
lock
add
cmpsb
xor
iret
xor
cmp
sub
cwtl
or
jnp
fbstp
dec
jae
aad
add
movsl
xchg
inc
icebp
imull
adc
mov
shlb
push
imul
popf
mov
pop
sahf
adcb
loop
lea
cmp
roll
xor
sbb
loopne
mov
in
sbb
out
mov
loop
fbld
mov
jno
dec
repz
test
shll
inc
xorb
mov
mov
pop
xor
mov
xor
add
cltd
in
xor
lcall
popf
sub
int
lods
arpl
popa
xorb
sbb
fildll
imul
repnz
out
int3
pop
dec
adc
or
lods
jbe
dec
mov
aaa
int
cli
pop
xchg
lock
xor
mov
fimuls
popa
in
repz
add
fmuls
inc
jp
jge
xor
ret
xor
fwait
adc
repz
sub
cmpsb
insb
adc
push
add
and
xchg
fimull
mov
push
adc
jmp
cmp
mov
leave
call
stos
aaa
int3
xchg
jo
ret
out
enter
cmp
fstl
nop
loop
adc
ds
js
les
add
cld
xchg
shll
test
out
lods
leave
and
inc
xor
sbb
imul
lahf
mov
jge
cld
xor
lret
popa
fistl
test
jle
movsb
movsl
lcall
lcall
notl
test
fs
jno
lds
push
sub
jno
and
mov
adc
sbb
and
or
scas
hlt
and
mov
imul
ds
mov
cmp
mov
jne
je
std
cmp
dec
sarl
inc
cld
loope
js
into
push
jns
sbb
mov
inc
int3
ss
mov
jae
jle
lcall
cli
adc
cli
pop
push
xchg
in
push
scas
or
and
xor
in
jmp
and
lahf
inc
mov
dec
pushf
pop
adc
lcall
pop
mov
jmp
icebp
jne
mov
adc
sbb
cmp
cmpl
loop
jo
adc
outsl
sub
push
xchg
cltd
addr16
xor
or
imul
xor
ja
xchg
pop
cmpsl
popa
mov
loope
jmp
and
clc
sbb
xor
jno
mov
je
push
lcall
data16
mov
popa
lock
lret
jmp
and
push
aas
add
cmp
push
xor
lock
cmp
sbb
ds
or
popf
addr16
cwtl
jo
hlt
pop
stc
fxam
cs
into
int3
loope
sub
pop
les
xchg
and
inc
inc
mov
shll
jp
jo
clc
pop
jns
cmp
mov
rclb
cmp
in
fsubrs
sub
dec
imul
out
lds
sbb
incb
jns
mov
stc
daa
aas
xor
jo
push
pop
pop
and
mov
dec
das
insl
sub
add
cmp
and
mov
dec
out
cmp
lret
mov
scas
add
jno
call
mov
jecxz
in
pop
les
add
mov
fldt
push
sbb
mov
and
adc
fs
int
lret
xchg
pusha
stos
pop
pop
or
lret
add
fdivrp
xchg
adc
es
mov
in
imul
pop
ljmp
mov
pop
or
and
adc
and
loope
adc
in
mov
orl
or
inc
mov
add
or
fldenv
popa
adc
fistl
mov
fstpl
fimull
cmp
push
call
push
mov
bound
sbb
and
cld
pop
and
xchg
sbb
sahf
lahf
lods
push
sub
jno
mov
mov
push
dec
enter
bound
movsl
cmp
movsl
mov
pusha
scas
or
test
add
sub
cmp
sahf
jmp
ja
dec
jbe
pusha
sbb
cmc
popf
fucomip
sbb
push
jb
xor
test
inc
mov
cmp
push
add
add
rep
adc
or
movsl
scas
mov
sbb
mov
cmc
inc
ret
adc
lea
insb
int
jmp
cmc
leave
jne
mov
add
test
xchg
pop
es
cmp
data16
pop
xchg
xor
in
xchg
mov
sarb
push
outsl
add
adc
rcrb
mov
mov
sbb
lds
mov
mov
jns
stos
icebp
ret
dec
inc
lea
subb
push
int
adc
cmpsl
lret
inc
in
mov
or
stc
daa
xor
shr
cmpb
stos
mov
lret
iret
hlt
adcl
pop
pusha
out
rolb
jne
ds
popl
shlb
adcb
xchg
add
lods
xor
jl
out
pusha
shrb
pop
dec
daa
dec
inc
push
xor
loopne
fisttps
inc
fildl
fsubl
cld
pop
sbb
and
adc
into
xor
cmc
or
xorb
push
lock
mov
adc
mov
cmp
and
mov
pop
xor
mov
ss
repz
loope
pop
or
cmpsb
sub
mov
jne
mov
xchg
cmpsb
lods
test
push
popf
outsl
mov
inc
rep
ret
sbbl
ficoml
sbb
mov
mov
test
mov
fwait
pop
gs
push
jne
pop
xor
stos
adc
ret
mov
pusha
mov
mov
into
leave
inc
fcompl
repnz
sub
lret
aaa
ss
adc
xor
add
pop
mov
mov
in
stos
mov
push
dec
out
ret
xor
shrl
adc
push
push
sbb
pop
ret
ret
xchg
mov
negb
fmul
data16
jns
or
lock
in
test
pop
mov
jns
add
dec
mov
es
imul
cmpsb
push
aad
insl
or
push
and
jno
sbb
rolb
cmc
mov
inc
or
insb
mov
or
fmuls
incb
and
cmpsl
adc
jb
mov
rcrb
cmp
jne
arpl
cmp
mov
fcoml
shrb
mov
mov
pop
int
fnsave
jo
sub
mov
test
jg
xchg
mov
push
sbb
xor
push
andl
push
fisubl
or
int3
sbb
cltd
mov
popl
add
fdivp
adc
and
in
xchg
std
push
lods
pop
mov
mov
dec
lods
fwait
xor
xchg
pop
bound
out
in
lahf
into
lock
hlt
out
mov
inc
lea
stc
dec
nop
push
sub
xchg
imul
fisttps
mov
leave
mov
into
shll
mov
cltd
imul
xchg
pop
jno
adcb
hlt
pop
imul
jmp
xor
jle
adc
mov
adc
cmc
mov
imul
mov
jne
add
or
xor
cmp
mov
cmc
and
or
or
add
xlat
js
movsl
or
scas
pusha
dec
or
mov
in
pop
int
out
adc
idiv
jl
push
arpl
out
fmul
repnz
fistpl
xchg
iret
daa
stos
mov
sti
push
or
adc
leave
sbb
mov
in
jl
repnz
ret
stos
mov
sub
pop
or
lock
stc
push
and
js
lret
mov
imul
push
pop
sti
mov
push
dec
pop
adc
ljmp
popf
pusha
shll
mov
loop
sbb
imul
imul
outsb
das
xor
adc
cmpsb
mov
lret
imul
mov
xor
mov
test
mov
cld
cmp
sub
dec
insb
jnp
test
sub
sar
mov
test
xor
xor
sub
sbbl
mov
and
shll
rcl
mov
xchg
pusha
pop
push
jns
jbe
or
or
jno
add
loope
imul
push
add
jbe
test
jg
sub
mov
xchg
orl
orl
jp
pop
sbb
xchg
push
clc
jbe
mov
adc
clc
xchg
outsb
xchg
shl
leave
dec
cmp
mov
nop
insb
enter
pop
ss
mov
fcompl
scas
inc
fnstenv
clc
xchg
add
sub
insb
ret
pop
mov
cltd
ds
movsl
jb
xor
dec
loope
jbe
outsb
imul
mov
mov
pusha
insb
jecxz
xchg
gs
dec
aas
das
aad
pop
adcl
cwtl
mov
ret
test
in
cmp
mov
add
ljmp
add
mov
std
adc
xlat
push
and
pop
cld
repnz
mov
fdivrl
lret
and
clc
xchg
jecxz
push
cs
dec
lcall
inc
ret
push
sahf
push
popw
cmpsl
pop
daa
adc
loop
imull
push
jo
pand
adc
or
in
xor
fcmovb
aad
mov
push
repnz
pop
dec
cmpsb
inc
xchg
xchg
dec
push
xchg
sub
add
subl
inc
jmp
dec
mov
int3
cmp
push
pop
inc
ficoml
xor
rorl
dec
pop
pop
pusha
testl
sub
add
or
push
inc
mov
sbb
imul
shll
mov
push
cmc
cs
sti
xchg
push
lea
sbb
in
cmp
imul
pop
fdivs
dec
or
pop
decb
add
xchg
subl
iret
mov
leave
add
pop
outsl
xchg
fs
fistpl
clc
adc
dec
mov
mov
repz
mov
arpl
push
sbb
jae
dec
lcall
push
lcall
arpl
jge
cmp
or
cmp
test
cmc
or
mov
sbb
xchg
xor
dec
jo
push
sub
dec
jecxz
mov
push
push
ffreep
fmull
push
stos
dec
movsb
cld
nop
popa
mov
push
or
mov
nop
adc
cmp
movsb
push
hlt
xchg
mov
push
push
das
insl
and
stc
loopne
lahf
jbe
shrl
addr16
sub
lock
sbb
sbb
pop
out
lret
push
test
iret
push
int
push
push
cwtl
or
xor
aad
icebp
sub
ret
xlat
pop
mov
xchg
mov
jmp
adc
cld
xchg
test
add
adc
incb
xlat
adc
movsb
fucom
sahf
xchg
out
pusha
cmp
movsl
sarw
push
out
out
sub
outsl
loop
or
xchg
dec
jo
cli
movsb
xlat
into
in
mov
pop
dec
pusha
push
mov
jnp
enter
hlt
cwtl
cmpsl
test
pusha
lret
mov
push
arpl
jl
sub
les
cltd
and
dec
in
insb
out
mov
fstpt
add
mov
jno
sub
push
jmp
mov
mov
mov
pop
xor
ucomiss
add
xor
sti
sub
push
outsl
adc
or
jmp
push
shrb
out
lret
nop
push
negb
xor
mov
repz
and
mov
adc
outsb
inc
push
mov
push
sbb
sahf
push
xchg
loope
incl
cmpl
lcall
mov
ret
jle
sbb
sbb
icebp
adc
inc
mull
pop
inc
pushf
lods
out
in
adc
je
fstpt
pop
in
out
cmc
add
fistpll
mov
push
pop
stos
add
push
xor
and
xchg
repz
ffree
push
stos
xor
shrl
sub
cmp
mov
fxch
test
orb
xor
jmp
in
and
imul
jmp
stc
les
mov
ret
mov
rep
lock
loope
xor
mov
cmp
cmp
xchg
jl
mov
stos
push
jmp
rol
rcr
mov
push
mov
xor
pcmpeqd
es
popf
or
push
fcmovb
les
lahf
lcall
mov
mov
dec
popf
xchg
mov
or
in
icebp
pop
adc
xchg
xchg
in
xchg
mov
add
dec
gs
clc
sbb
dec
dec
repnz
gs
sbb
sub
xchg
adc
nop
cltd
cs
xor
mov
adc
mov
cld
inc
mull
jne
push
add
mov
test
pop
jmp
mov
outsl
insb
and
push
dec
mov
mov
dec
xor
adc
xchg
cli
pop
jl
adc
popa
push
nop
aad
add
lds
stos
mov
mov
lcall
xchg
addb
std
sbbl
xchg
insb
fstpl
ja
mov
adc
rcrl
icebp
or
loop
dec
aaa
mov
arpl
push
dec
arpl
xchg
lahf
adc
movsb
loop
loope
js
xchg
dec
sbb
xlat
out
movsb
or
fbld
mov
lret
pop
fs
push
popf
test
popa
std
xorl
jno
jbe
jb
clc
pop
inc
outsl
ds
xchg
add
cmp
pop
test
adc
stc
mov
cmpl
fwait
mov
lret
pop
lret
sub
adc
es
lods
aaa
xchg
cld
sbb
dec
add
adc
dec
mov
nop
and
js
mov
ret
rcll
sub
dec
inc
movsb
rep
jns
rol
jno
aas
adc
ds
jge
sub
xor
cmp
rorl
ret
and
and
out
enter
mov
and
mov
pop
mov
and
sub
xchg
lea
jle
insl
inc
fdivr
inc
inc
xchg
pop
movsb
adc
jmp
push
aaa
dec
aad
ret
xor
incl
xor
loopne
fcoms
mov
mov
mov
xor
pop
outsl
sbb
xchg
cmp
iret
push
dec
lods
gs
fbstp
mov
pop
add
xlat
fimuls
out
bound
ret
rcl
sub
inc
mov
lcall
sub
inc
pop
inc
adc
add
leave
setbe
test
test
jmp
mov
lret
mov
sbb
cli
movsb
push
sahf
cmpsb
fwait
rol
faddp
loopne
std
rcll
mov
lcall
ret
push
insb
cmp
mov
loop
ret
loopw
int3
int3
popa
jge
push
rcll
mov
pop
jb
imul
jbe
cmp
push
mov
cs
imul
test
jno
fsubrs
mov
push
sub
outsl
push
pop
gs
mov
scas
dec
lcall
push
xor
or
cmp
popa
insb
mov
xchg
mov
imul
sarb
testl
shr
or
mov
iret
movsl
pop
mov
inc
in
inc
sub
xchg
arpl
or
shl
pop
or
cmc
stos
add
cmovnp
out
xchg
lret
js
test
cwtl
stos
nop
ds
das
add
shll
jp
push
pusha
push
dec
pop
shll
pop
inc
mov
cmpsl
aas
ss
cwtl
arpl
mov
adc
rcll
sbb
xlat
cmp
int
loope
mov
std
dec
add
std
push
sub
or
fildl
mov
cmp
addr16
into
pop
push
sub
mov
int3
cs
mov
jecxz
xchg
imul
mov
xor
loope
sub
mov
mov
rcll
pop
cltd
lahf
sub
pop
push
fdivs
scas
inc
inc
pop
int3
sbb
mov
pop
aam
mov
adc
out
mov
push
movsl
imul
in
mov
inc
test
mov
lcall
in
loopne
pop
mov
push
xor
ret
notl
lods
fs
jg
lea
cmp
cld
adc
pop
cmpsb
sub
jno
repz
testb
jno
push
loope
scas
pop
stc
mov
add
gs
sub
mov
mov
or
push
xchg
adcl
out
xchg
or
inc
js
jo
fadds
push
loope
mov
cmp
adcl
jecxz
xchg
cmpsl
mov
test
movsl
pop
mov
mov
popf
push
out
dec
icebp
adc
movsl
dec
pop
mov
xchg
pop
adc
les
loope
jns
js
jo
inc
in
push
in
movsb
ficompl
ret
into
dec
int
scas
out
xor
cltd
aaa
icebp
inc
js
push
pop
ljmp
pop
popf
jnp
stc
and
mov
adc
rcrl
lea
lea
aaa
xchg
jae
xlat
adc
popf
cmc
jno
ljmp
push
sub
insb
fcmovnbe
jb
dec
out
sub
and
lock
fistps
data16
pop
int3
rep
cwtl
xor
mov
leave
ficompl
iret
sub
movsb
sbb
rcl
cli
inc
mov
xor
jmp
outsl
popa
aas
xchg
xor
jbe
and
push
int
jmp
ss
call
mov
adc
orl
call
inc
push
nop
lods
inc
roll
inc
out
mov
mov
mov
sbb
pop
adc
sub
test
insb
mov
mov
mov
and
sahf
push
xlat
mov
cmp
cld
sbb
sbb
adc
jns
adc
lods
repz
mov
mov
dec
mov
insl
sub
andl
ss
sub
dec
xor
bsf
cmp
mov
subl
les
sbb
mov
das
mov
xor
insl
in
jns
imul
daa
xchg
sbb
mov
or
add
lds
fistl
divb
sti
shrl
aas
mov
push
cwtl
cmp
xchg
pop
hlt
xor
jmp
sub
or
or
in
js
add
and
push
dec
or
push
mov
roll
sub
sbb
outsl
add
aas
jno
pop
fs
test
push
lds
mov
mov
lahf
outsb
sub
xchg
xchg
mov
pushf
mov
repz
repz
sub
add
mov
or
stos
pop
test
movsb
mov
pop
imul
aas
push
add
pop
adc
dec
int
pop
xlat
xchg
rcll
inc
lds
pop
cmpsl
jae
out
std
fs
fsubrl
pop
pop
loope
push
mov
mov
pop
jne
popa
mov
lods
xor
mov
pusha
and
mov
mov
jno
or
daa
sbb
loop
test
push
lods
icebp
shrl
fs
or
push
push
movsb
imulb
sbb
data16
mov
mov
inc
aad
pop
shrl
sti
data16
dec
adcb
repz
jge
fwait
and
adc
add
mov
popf
mov
test
stos
and
cmpb
movsl
orb
mov
pop
imul
pop
ljmp
div
jne
pop
and
ss
adc
test
dec
sarl
sti
xchg
sbbb
aas
jne
neg
pop
loope
pop
inc
std
std
xor
lahf
sbb
mov
jg
push
in
bound
add
aad
int
add
lds
mov
cwtl
adc
xor
inc
lds
bound
and
adc
pop
ds
xchg
jp
mov
fdivrs
pop
push
cwtl
push
cs
jne
addr16
mov
insb
or
add
mov
sahf
fwait
std
in
shrl
adc
and
cmp
or
test
mov
adc
jno
fidivrl
in
aaa
sbb
sbb
mov
fst
mov
sub
clc
lds
and
xchg
rcl
faddp
imull
aaa
out
or
cld
enter
sbb
stos
stos
int3
lcall
pop
jmp
inc
cmpsl
inc
shlb
es
mov
inc
stc
dec
aaa
xor
jge
pusha
les
cmp
xorb
ds
popf
loope
call
adc
pop
xor
or
test
in
out
out
stc
cmp
push
outsb
adc
sub
or
sub
adc
cmp
ret
dec
ljmp
push
in
js
and
inc
inc
jno
into
es
mov
cmp
push
subl
cmc
sahf
mov
imull
dec
testl
sahf
aas
aad
dec
mov
cmp
add
gs
out
jb
out
dec
enter
mov
stos
shr
das
sarl
cmp
cs
sbb
push
xor
mov
fnsave
inc
test
cmp
dec
lahf
fisttpll
xor
xchg
mov
adc
xchg
jae
repnz
ja
sbbb
pop
ret
jns
test
inc
mov
push
mov
or
lock
scas
adc
add
mov
push
dec
jge
push
pop
dec
subl
repnz
sbb
cld
cmpsb
push
int3
inc
movsl
inc
movsl
daa
xor
stos
imul
sub
add
mov
fstps
pushf
jmp
lock
inc
popa
cmc
pushl
mov
add
bound
subb
pop
in
push
out
mov
sub
xchg
es
call
das
inc
jmp
and
jmp
stos
pop
or
ret
sbb
sbb
pop
ret
pop
jbe
rclb
or
and
stos
cmc
xlat
lret
movsb
jbe
sub
jmp
mov
pop
xchg
mov
mov
hlt
pusha
cmp
lea
jp
xchg
hlt
cli
out
data16
cmp
in
popf
cs
andb
je
loopne
add
jbe
sbb
jbe
add
dec
movd
lahf
repnz
cmc
xchg
mov
jl
mov
sahf
repnz
cld
xor
nop
mov
fcoms
ljmp
ror
addr16
pop
xchg
out
jb
ret
xor
add
push
jg
xchg
negb
inc
sub
nop
jl
ret
dec
rcll
push
dec
jae
loop
imul
dec
lcall
xor
out
nop
clc
in
in
daa
jg
outsl
pop
mov
or
jb
push
aam
test
stos
push
mov
mov
aad
jp
inc
out
cs
lds
js
arpl
in
cmp
cmp
mov
jae
adc
cmp
enter
mov
in
into
ljmp
int3
scas
jbe
add
add
dec
pop
push
lcall
push
fldenv
or
out
xchg
cmp
xchg
cmp
popf
dec
movsb
ljmp
in
cs
mov
out
stos
push
jmp
mov
jl
repz
dec
loopne
inc
push
mov
in
mov
pavgb
in
sti
mov
mov
lahf
mov
jl
shl
xchg
adc
test
add
push
mov
add
int
stos
shrb
jmp
arpl
mov
push
int3
push
jecxz
enter
out
adc
aaa
pushf
jnp
adc
mov
xchg
cmp
inc
imul
cmp
dec
lahf
cmp
jne
xchg
and
or
cmp
cli
imul
mov
cwtl
jp
aas
mov
repnz
pop
cmp
mov
fdivl
pop
insb
jp
mov
mov
in
adc
and
hlt
xor
pushf
jae
mov
push
push
call
mov
jnp
push
idivb
jmp
in
cmpsb
outsl
ds
mov
xlat
outsl
rcl
and
or
cwtl
roll
xor
sub
xchg
mov
adc
bound
push
jle
push
pop
inc
bnd
loop
jmp
arpl
sbb
and
pop
loop
addr16
pop
cmp
pop
mov
add
push
in
loop
xchg
pusha
test
mov
push
aam
push
cmp
mov
jle,pt
jbe
mov
pop
lods
loop
xchg
lods
sub
lods
hlt
out
pop
sti
and
xchg
scas
pop
jle
ss
adc
sarl
mov
arpl
sbb
sub
aam
adc
and
pop
inc
cli
push
or
pop
int
mov
sub
imul
data16
xchg
sbb
outsb
pop
test
lret
mov
push
sub
push
push
inc
xor
enter
out
fs
bound
addb
cmpsl
mov
and
into
lods
inc
nop
inc
jns
test
mov
leave
xchg
movsb
jp
ds
sub
sub
mov
lahf
test
sub
loopne
dec
and
clc
or
mov
outsl
test
arpl
lahf
and
outsb
aas
sub
rcl
movsb
mov
xor
fwait
fs
mov
xchg
mov
repz
in
cmp
jns
jo
out
mov
adc
lock
mov
mov
out
sbb
pop
mov
pop
adc
mov
addr16
cli
adc
scas
dec
in
roll
xlat
fwait
lods
mov
ret
lahf
ret
movsb
xor
arpl
out
or
cltd
adc
arpl
cmp
mov
adc
and
sbb
int
jmp
lret
xor
jns
mov
dec
xchg
outsb
push
inc
xor
jl
into
jns
sbb
sub
lahf
sahf
sbb
imul
dec
or
stos
fmull
sbb
aaa
xor
cli
popf
lret
mov
push
movsb
cmc
xchg
shlb
mov
dec
jno
aam
mov
imul
gs
dec
inc
movsb
pop
pop
out
cmp
xor
scas
inc
sub
into
mov
clc
pop
jne
mov
cltd
xor
fildll
es
push
mov
cmp
jmp
pop
mov
jbe
lods
mov
pop
adc
movsl
sub
daa
packuswb
xor
mov
jge
push
lcall
inc
inc
mov
cwtl
sub
ss
loope
push
push
xchg
fcmovbe
cmpsb
aaa
xchg
adc
popf
les
pop
fsts
sbb
and
jle
and
mull
inc
pushf
stc
imul
jp
xor
xchg
dec
push
mov
add
outsb
test
pop
cwtl
xlat
sbb
inc
and
ret
sbb
clc
mov
sbb
insb
pop
add
cli
into
inc
ret
int
mov
loop
jo
mov
ficompl
scas
sub
ret
jae
loopne
adc
pop
sub
in
out
adc
out
idivl
push
ds
subb
rol
in
outsl
out
add
and
jl
or
sub
daa
or
cmp
jae
mov
mov
dec
pop
icebp
xchg
xor
rcrl
sub
mov
mull
mov
adc
dec
std
adc
mov
out
out
jo
or
test
ret
std
test
jl
sar
or
daa
call
mov
dec
in
mov
lods
rcll
sbb
xchg
sub
stos
outsl
pushf
cs
cwtl
imul
adc
push
aad
fs
daa
test
test
into
or
push
push
mov
loop
data16
popf
ljmp
fsubp
dec
or
inc
mov
loope
mov
xchg
jo
cmp
push
dec
in
mov
not
mov
repz
imull
jnp,pt
stos
in
scas
adc
jl
jae
les
fucomi
pop
ss
call
mov
lcall
pop
add
and
js
sbb
sbbb
call
outsl
mov
mov
fs
sbb
mov
scas
in
mov
rcrb
adc
pop
stc
js
fdivrp
je
jbe
in
add
mov
gs
insb
add
and
sub
dec
mov
mov
mov
jle
fsub
inc
add
imul
aaa
call
jecxz
xor
sbb
xchg
xor
dec
jo
xor
xchg
pop
lcall
xchg
mov
adcl
popa
mov
cld
pushf
xor
dec
push
dec
addb
fwait
mov
stc
je
push
and
ljmp
pop
cmp
add
sbb
push
jp
sbb
push
jge
push
or
xor
ret
imull
sub
or
fldl
push
movsb
xchg
cmp
jno
sub
sub
cltd
pop
stc
sbb
jp
sahf
jp
sbb
dec
mov
lret
andl
xor
cmp
lods
inc
aas
in
mov
in
int
jmp
pop
dec
and
push
cwtl
mov
in
lret
nop
lods
push
fldcw
xor
xchg
lea
sub
in
pop
jns
movsl
pop
mov
rcl
dec
mov
mov
sbb
mov
pop
jmp
sub
mov
out
pusha
fstpl
add
insb
mov
dec
fwait
ljmp
leave
pop
dec
pop
lods
rcrb
aad
mov
and
test
aaa
cmp
mov
mov
popa
mov
mov
cmp
pop
std
xor
and
cmp
shrb
pop
xor
xor
sub
xchg
push
cmpsb
mov
sbb
push
lods
sub
adcl
add
outsb
mov
jne
cmp
mov
push
push
cmp
jecxz
adc
ror
pushf
std
push
in
outsb
mov
aas
mov
ja
push
adc
out
or
ss
subb
push
jle
hlt
orb
inc
mov
or
out
and
push
jle
jecxz
shll
xchg
and
repnz
and
or
mov
fsubrl
les
mov
pop
int
cmc
pop
in
dec
into
daa
sti
mov
lret
adcl
jne
call
sarb
mov
xchg
adc
jns
jg
dec
sbb
es
xlat
and
mov
inc
cltd
idiv
sbbl
xchg
xor
jg
rclb
xor
fsts
or
inc
sbb
movsb
jo
inc
out
notb
push
nop
sub
imul
push
in
aad
pop
jl
pop
mov
fwait
ljmp
sub
dec
clc
inc
fiadds
dec
hlt
mov
mov
and
ret
xchg
rcr
mov
sbb
data16
mov
stos
sub
push
inc
divl
ljmp
push
lods
leave
pop
aad
pushf
lret
ds
jb
inc
mov
or
sbb
cmp
test
adc
lods
lea
adc
lcall
fcoms
mov
not
push
es
pop
lcall
scas
insl
lret
or
shl
add
inc
out
stos
inc
scas
das
sbb
dec
fistpll
stos
lret
push
mov
mov
int3
jge
mov
adc
xchg
push
into
ret
shr
addr16
ss
sti
or
dec
xchg
jb
outsb
lock
adc
push
jl
xor
dec
mov
scas
xor
adc
push
fcmovne
loope
jg
push
or
mov
mov
les
add
sub
mov
xchg
xchg
loopne
int
sbb
je
jbe
sbb
sbb
cwtl
je
stos
sbb
sub
pop
loopne
test
out
ret
cli
push
push
shl
xchg
pop
adc
fbld
mul
ja
add
ljmp
hlt
jle
pop
or
aaa
dec
mov
fldenv
ss
dec
push
inc
mov
ja
mov
xchg
mov
dec
lds
jnp
sahf
mov
fldt
push
loope
and
mov
aas
inc
loopne
mov
out
inc
cs
xor
pushl
sbb
out
idiv
dec
ficoms
inc
aaa
leave
leave
and
std
mov
inc
xor
lds
push
sti
insb
loop
leave
lods
lcall
jne
xchg
jne
dec
js
ja
ja
cmp
inc
xchg
sub
xlat
aaa
inc
xor
fsts
dec
lret
xchg
int
sbb
add
lcall
repz
ret
mov
xor
rcrl
popf
gs
in
jae
cmpsl
scas
jns
aad
nop
sub
inc
repnz
xchg
adc
jge
in
lahf
xor
lcall
mov
cmc
out
cs
gs
mov
fadds
push
add
sub
sub
jo
push
mull
pop
or
jae
push
divb
aad
test
xlat
test
dec
test
sti
mov
jl
fidivrs
mov
ss
stos
dec
sarb
mov
mov
push
gs
xlat
fcmovnbe
fildll
lret
sbb
in
popf
or
cmpsl
mov
sbb
and
pop
mov
or
mov
xchg
adcb
lods
sbb
in
mov
mov
and
dec
in
mov
aad
dec
pmaddwd
mov
lret
and
sub
fisubs
push
enter
dec
jb
inc
mov
adc
iret
pop
sbbb
inc
dec
mov
mov
push
test
lods
inc
std
push
hlt
sub
lret
sub
xor
xor
les
cli
jno
and
add
shlb
mov
out
cmp
mov
push
xor
push
xchg
xchg
sub
cwtl
imul
push
sub
in
xchg
and
jl
ljmp
adc
jecxz
outsl
pop
and
sub
xchg
fsts
pop
add
int
aam
and
dec
mov
vpcmpeqd
add
hlt
nop
add
test
cmp
ljmp
daa
jae
fsubs
aad
cmp
ja
dec
out
xor
or
jbe
ds
fistpl
scas
rorb
and
mov
push
push
stos
jmp
call
cmp
inc
icebp
cmp
es
mov
or
jne
pop
and
inc
cmp
popa
sbb
nop
pop
and
inc
push
mov
mov
inc
std
push
adcb
mov
jmp
xor
xlat
lcall
pop
cmpsl
jmp
es
sbb
push
adc
mov
ret
mov
lea
movsb
or
jg
pop
jnp
cmpsl
ret
mov
addr16
cmpsb
stc
mov
xchg
xchg
inc
outsb
or
sub
inc
push
pop
mov
dec
scas
or
sbb
xchg
decb
push
sub
pop
pop
sbb
sbb
hlt
dec
mov
dec
aam
js
stos
adc
xor
mov
iret
out
dec
into
mov
ja
add
mov
jne
arpl
xor
inc
sbb
mov
pop
in
dec
push
mov
mov
dec
dec
or
cmpsb
fucomi
sub
loop
pop
ss
sbb
jmp
roll
sahf
nop
push
es
cwtl
aas
sbb
out
and
imul
add
dec
jge
push
out
xchg
and
inc
mov
or
gs
arpl
test
pop
mov
mov
cmp
stc
xor
inc
lahf
call
data16
and
xchg
std
xchg
inc
cmpsb
shr
sub
push
lods
mov
and
mov
cmp
fisttps
or
lea
mov
xor
leave
and
lock
sub
or
aam
or
inc
sbb
jo
lcall
jle
cmp
loope
mov
mov
daa
add
xlat
inc
xor
test
mov
and
int3
sub
lods
xor
cs
xchg
sbb
stc
push
and
pop
ljmp
jns
enter
cld
pop
add
fdiv
pop
push
ljmp
add
mov
jmp
call
fstps
ds
jmp
shl
rclb
or
push
enter
popf
inc
out
int
iret
ja
and
enter
cld
jg
mov
repz
push
xchg
mov
add
pop
push
or
push
fcomps
test
les
mov
js
lret
js
inc
pop
pop
xchg
cs
pop
mov
lods
cmp
or
and
int3
insl
aaa
dec
pushf
mov
inc
jl
hlt
fistpll
or
mov
aaa
ja
mov
xor
sbb
and
aas
pop
movsb
es
and
sub
js
cwtl
push
daa
sub
xchg
loop
stc
mov
jg
xor
fwait
jl
inc
mov
call
clc
mov
daa
in
jge
ss
ret
mov
nop
cmpsb
shr
popa
cltd
xchg
and
push
mov
inc
and
and
pop
mov
sub
xchg
scas
dec
mov
inc
test
pushf
out
add
icebp
mov
adc
dec
pop
add
xchg
and
std
push
not
dec
push
mov
out
xor
push
pop
popa
push
fcomi
out
ret
lea
add
sbb
test
ja
cwtl
bound
loopne
adc
dec
and
inc
push
dec
dec
pusha
loop
sbb
jecxz
xchg
sub
rcrl
cmp
es
pop
andnps
push
rcr
aad
nop
addb
imul
rol
shlb
push
jmp
into
cmp
sbb
rclb
lock
arpl
shll
lods
movsl
stc
mov
add
add
sub
fwait
cltd
mov
pop
push
lock
cmp
pop
in
sub
lea
mov
mov
xor
fadd
xor
ja
stos
data16
and
mov
cli
fsubl
sbb
mov
push
mov
and
sub
push
mov
js
mov
adc
mov
pop
mov
jp
cs
stos
inc
cmp
cmp
inc
mov
lea
leave
mov
jecxz
and
adc
lahf
push
inc
push
push
cmovnp
lahf
sub
lret
scas
adc
fwait
jecxz
dec
xlat
xor
and
pop
rorb
stc
hlt
add
das
cwtl
insb
je
push
lods
jge
xor
mov
adc
popf
fnstcw
xchg
inc
xchg
sbb
jne
shlb
mov
inc
fcomi
cs
mov
mov
pop
arpl
xor
xor
dec
mov
pop
out
push
xor
xchg
mov
divl
push
loop
repz
mov
dec
cltd
pop
rclb
lret
clc
lcall
test
xor
lahf
pop
mov
push
cmp
movsb
stos
mov
cmp
addr16
cltd
ljmp
clc
mov
inc
push
enter
push
jl
lock
arpl
mov
and
scas
lods
sbb
std
pop
int3
adc
andb
stos
sbb
xor
js
push
out
xor
sub
lea
imul
xorb
pop
stc
dec
iret
clc
mov
xchg
mov
sbbl
xor
dec
inc
scas
loopne
pop
pop
push
roll
add
inc
add
jne
xchg
fnstenv
mov
lock
subl
test
lret
mov
pop
sbb
jno
insb
dec
test
scas
pop
stc
cwtl
out
jl
daa
aaa
sbb
add
jae
adc
icebp
dec
ss
test
clc
mov
adc
rolb
jne
loope
inc
add
and
jle
stos
inc
or
popa
pop
mov
push
test
mov
loop
push
pop
fsts
mov
ja
inc
sarb
sub
in
mov
cmp
xchg
jmp
aad
jge
mov
jno
jl
mov
fstpl
xchg
push
or
mov
lret
adc
sbb
fisubl
push
in
shrb
orb
rcrl
add
push
stos
insb
out
xor
mov
inc
pushl
in
pushf
outsb
cmp
std
adc
or
lods
jne
xchg
xor
cli
bound
xor
data16
stc
movsb
jp
and
dec
cmp
mov
aam
std
pop
and
add
pop
call
loopne
jnp
add
cmp
inc
xor
inc
test
mov
mov
cmc
cmpsl
mov
push
mov
lcall
pusha
push
imul
and
inc
xchg
inc
mov
ret
frstor
xor
xor
add
inc
dec
xor
or
test
sbb
dec
adc
pop
stos
ljmp
and
nop
pop
nop
mov
jl
movsl
adc
iret
jns
dec
lds
push
jge
sub
les
cltd
lret
and
fisttpl
jl
add
cmp
adc
mov
mov
outsl
das
mov
mov
insl
int3
xor
jbe
shlb
cwtl
pop
enter
add
xor
mov
dec
out
or
lea
test
mov
mov
movsl
inc
dec
sbb
js
or
sub
or
xchg
xlat
scas
push
scas
pop
cmp
fisttpl
mov
xor
jg
movsl
rorl
out
mov
es
mov
fsubrp
mov
adc
ljmp
cmp
xor
sbb
fisubrl
cmpl
popf
stos
popa
call
aaa
mov
in
icebp
xor
pop
sti
in
test
and
mov
or
repz
lcall
mov
cli
in
ljmp
pop
xchg
bound
loop
jge
sbb
jp
cmp
sbb
lds
pop
add
inc
pop
jmp
pop
push
push
jle
stos
lea
sarl
cmc
loope
jle
outsl
lret
aas
sarl
jle
and
xlat
mov
outsl
mov
jbe
push
mov
stos
insb
pusha
test
or
mov
and
add
jb
adc
xchg
sub
add
repnz
test
lret
divl
sbb
cwtl
shll
push
lock
rcrb
add
add
sbb
dec
jle
cmp
pop
pop
test
outsl
mov
repz
imul
mov
into
push
mov
nop
pop
xor
push
sub
add
bound
pop
incb
dec
jmp
addb
ret
mov
jnp
scas
ret
mov
cltd
add
lods
dec
into
mov
jecxz
xchg
dec
jge
add
jp
cld
stc
sub
das
scas
out
or
mov
call
lods
mov
cltd
nop
jno
dec
xorl
mov
js
lea
pop
adcl
pop
cltd
into
jb
inc
jle
cwtl
pop
loop
or
js
push
or
out
scas
pop
or
fwait
and
mov
addr16
xchg
dec
and
pop
mov
mov
push
inc
push
push
popf
mov
movsb
es
jmp
sbb
jge
and
xlat
lock
sti
sub
dec
mov
ret
pop
jae
pop
ljmp
repnz
lret
inc
or
outsb
test
fidivrl
fisttpl
xor
mov
lods
xchg
add
scas
push
das
out
push
jne
pushf
frstor
sar
mov
arpl
cmpsl
push
leave
aam
faddp
nop
clc
sbb
je
outsb
jmp
dec
xchg
stos
sub
jnp
xchg
add
add
rcll
pop
dec
mov
in
add
fsubl
dec
mov
mov
ds
push
inc
push
mov
enter
adc
xchg
or
nop
jmp
es
lret
ljmp
push
xchg
cltd
add
xchg
es
dec
loope
fisubs
sbbl
ret
lock
dec
popa
pop
test
ljmp
clc
mov
pop
pop
rorl
gs
js
pop
push
jo
in
mov
jno
bound
subb
pushf
push
fildl
inc
movsb
fstps
xor
out
jp
and
fadds
shl
or
test
mov
push
cmpsb
dec
call
pop
add
xor
xor
push
rorb
test
pop
sub
cmp
movsb
mov
jge
cmp
shll
jnp
fistl
sbb
jb
push
leave
imulb
xchg
pop
add
filds
sbb
push
int3
in
rol
in
inc
jbe
push
pop
push
inc
xchg
mov
sub
or
int3
jns
dec
sbb
add
ss
stos
dec
or
xor
pusha
mov
mov
jbe
les
mov
arpl
outsb
dec
adc
fs
hlt
stc
sbb
or
xor
scas
xchg
push
nop
pushf
inc
pop
dec
xchg
or
cmp
inc
push
aas
stc
lock
xlat
in
out
out
ljmp
pop
push
xchg
mov
sub
pushf
cli
sub
rclb
push
iret
addr16
movsl
sub
test
clc
aam
jb
aam
dec
out
xchg
push
dec
mov
mov
mov
xchg
sbb
cs
sar
jae
stos
fcoms
lret
test
add
jae
xlat
test
mov
imulb
mov
andl
adc
inc
jp
mov
dec
enter
and
xchg
xchg
mov
pushf
pop
xor
lahf
adcb
mov
stc
scas
xor
sub
shlb
lock
mov
mov
xchg
push
xor
jg
push
push
push
inc
push
lds
movsl
hlt
sub
adc
fcompl
sbb
es
loope
mov
adc
imul
cltd
iret
xor
clc
stos
lds
ucomiss
and
cld
xchg
mov
xchg
mov
popa
cmp
ret
in
pusha
ja
ja
insb
insb
xchg
or
mov
rorl
push
mov
dec
js
lods
mov
mov
fnstsw
les
and
mov
clc
cmp
inc
sbb
inc
cmp
and
mov
int3
push
add
adc
mov
fs
adc
add
xchg
sub
cmpl
repnz
push
inc
push
pop
and
cmp
lahf
adc
enter
imul
mov
fwait
sub
sub
sbb
push
push
lock
xchg
test
and
fisubrl
cmp
pop
cmpl
xlat
gs
lret
imulb
pop
or
in
cmc
xor
les
test
les
pop
call
xor
xor
out
or
mov
adc
aaa
pop
sahf
push
call
das
test
lods
roll
popa
fidivrl
jnp
seta
js
adc
mov
xchg
les
jecxz
sub
fbld
sbb
lock
and
enter
in
dec
shrb
adc
sbb
popa
inc
pop
pusha
in
scas
add
lret
cmp
mov
fucomi
jge
repz
or
jl
loop
mov
out
and
fidivl
int
sbb
pop
shl
cld
sbb
mov
sbb
mov
dec
jle
push
jno
jo
lcall
mov
pop
gs
sub
popf
insb
jns
pop
loop
iret
xor
cld
icebp
roll
fwait
cmp
lcall
cld
fildll
inc
inc
or
jbe
jno
and
mov
jp
pop
mov
sub
mov
popl
out
mov
or
mov
loop
dec
xor
inc
pushf
insb
arpl
cmp
lea
hlt
jle
inc
addr16
ds
and
stos
sbb
imul
jb
adc
test
pop
pop
mull
imul
orl
aad
sbb
sbb
push
es
push
out
in
adc
std
mov
pop
cltd
mov
pop
rorl
and
dec
call
inc
sub
fcoms
incb
mov
fucomip
and
repz
ja
mov
fisubl
js
ja
or
lret
pop
pushf
add
insb
xor
jne
pusha
push
faddp
and
and
pop
jnp
dec
cld
daa
jnp
mov
fcom
test
fmul
sbb
mov
sub
cmp
or
test
cli
lock
sti
lahf
inc
arpl
js
inc
mov
xchg
leave
clc
arpl
test
lret
lods
xor
inc
js
add
adc
sbb
xchg
inc
enter
pop
lods
dec
or
adc
push
sbb
orb
mov
daa
pop
sbb
xchg
divps
sbb
outsl
mov
in
inc
xor
imul
scas
jmp
mov
dec
pop
rclb
repz
stc
imul
addr16
orl
popf
mov
and
ja
xor
hlt
movsl
jmp
jp
cmpb
xchg
xchg
xor
mov
stos
xchg
xchg
loopne
jg
push
and
imul
pmullw
mov
movsb
mov
push
mov
stc
xchg
daa
sub
pop
add
jp
cs
lahf
lds
and
subl
dec
scas
push
mov
pop
mov
mov
adc
inc
daa
incl
repnz
jnp
ds
stos
andl
cli
sbb
loop
mov
iret
pop
mov
mov
ja
cmpsl
cmp
xor
bound
push
and
test
pusha
gs
cmp
movsb
pop
jecxz
sti
fildl
lock
push
enter
aaa
iret
lret
xchg
adc
pop
and
sbb
mov
hlt
sub
inc
adc
stos
push
mov
jmp
adc
gs
jb
in
cmp
or
or
and
jno
daa
mov
rclb
stos
in
push
mov
adc
out
hlt
mov
mov
push
pop
mov
movsl
fucomi
fldenv
enter
mov
cmp
mov
mov
jle
stos
in
ja
popl
dec
jle
int
dec
cmp
mov
pop
test
add
js
push
mov
mov
shrb
jo
test
aam
sbb
mov
sub
dec
lds
lock
fnstenv
mov
mov
pop
out
dec
lea
or
stos
or
mov
daa
inc
cwtl
pusha
push
cmp
xchg
mov
aas
pop
ss
push
test
lcall
dec
xorb
stc
or
ss
sarb
shl
aaa
jmp
gs
push
push
into
pop
lea
sbb
xor
mov
lcall
sbb
jp
jns
stos
mov
xchg
pop
sbb
lods
inc
shll
call
mov
or
out
fstl
sahf
jle
pop
or
fcompl
clc
mov
dec
add
inc
sbb
mov
testl
sbb
xor
popf
stos
dec
lcall
xchg
test
jmp
or
push
xchg
or
js
scas
push
push
test
mov
test
or
or
cmp
xor
pushl
les
sbb
xchg
mov
jecxz
dec
inc
ret
stc
out
mov
mov
push
into
jns
mov
cli
and
inc
out
xchg
push
mov
push
push
pushf
sub
sub
sub
stos
sub
xor
js
loope
rcl
loop
or
push
push
adc
mov
dec
sub
hlt
je
pusha
xchg
shr
stos
testb
push
cmp
xlat
out
dec
cmc
das
inc
cmp
icebp
and
dec
fstpt
ret
pushf
push
hlt
mov
xor
dec
sbb
pop
out
mov
cmp
sbb
or
mov
jnp
test
mov
imul
inc
es
adc
stos
scas
adc
test
mov
jns
stos
sbbb
pop
mov
insb
setns
std
add
push
dec
lea
sub
fiadds
stos
popa
stc
pop
subl
pop
ja
and
adc
fisubrl
mov
pusha
ret
pop
in
push
pop
fidivrs
pop
and
pop
cltd
push
jnp
dec
rorb
mov
out
mov
in
popa
andl
fildl
idivl
daa
repz
sbb
and
lret
sbb
aaa
cmp
mov
inc
and
insl
dec
and
jp
adc
outsb
hlt
popa
cmp
adc
and
ret
sbb
mov
movsl
nop
ficompl
mov
in
es
inc
xchg
mov
sbb
mov
xchg
cwtl
xor
sub
xchg
nop
imul
sbb
fisttps
push
rorl
cwtl
cld
mov
ret
sbb
outsl
push
sahf
inc
xor
sub
push
outsb
sbb
das
xor
sbb
xchg
js
js
mov
mov
or
pop
jbe
fidivrl
sub
adc
hlt
mov
cmp
jne
iret
xor
loop
xchg
jecxz
cmp
in
mov
fnstcw
add
scas
lahf
test
add
sub
loope
xchg
shll
movsb
jb
inc
or
sbb
jae
lods
dec
push
js
fnsave
ljmp
inc
xor
data16
out
ror
xor
push
push
repnz
sbb
push
and
jns
mov
ret
jb
cmp
insb
incl
pop
test
popf
push
inc
pop
fwait
and
cmp
clc
sub
jg
cmpb
sbb
in
xor
sub
loop
cmpsb
dec
shlb
adc
fildll
push
dec
sub
xor
in
lods
mov
mov
roll
aam
pop
fwait
sub
fstl
jge
mov
sub
std
notb
movsb
mov
loope
pop
lods
das
adc
pop
pop
or
cmp
pop
jecxz
leave
sarb
loopne
ja
arpl
xor
xchg
or
cs
cmp
mov
dec
test
jno
pop
xchg
pop
jnp
hlt
dec
movsl
sahf
incb
lcall
gs
in
into
and
jae
dec
push
pushf
fwait
lods
daa
pop
dec
cmp
or
adcl
in
std
mov
push
add
movsb
les
jbe
fcomps
and
xchg
nop
sub
pmaxsw
clc
out
out
pop
lret
sub
pusha
scas
hlt
cmp
pop
int3
add
cmpsb
and
dec
dec
mov
pop
sbb
repz
aas
in
xchg
ss
sbb
sub
xchg
mov
inc
mov
mov
and
icebp
mov
incb
jge
ds
lahf
aad
add
test
jecxz
icebp
mov
fs
jmp
mov
push
outsl
pop
adc
cmpsl
iret
sbb
xchg
xor
dec
scas
and
xor
or
fistps
jl
arpl
mov
add
xchg
adc
je
rorl
in
gs
jg
ret
cs
cmpsb
push
cld
xchg
jge
pop
xor
das
pop
call
into
jns
add
sti
cmpb
dec
mov
lock
add
add
es
mov
sbb
imul
mov
xor
cmp
dec
jge
adc
lret
movsb
add
sub
fwait
lods
cmp
fisttpll
loope
cld
enter
sub
stos
ffreep
loopne
sbb
inc
insb
push
sbb
filds
inc
cmp
cltd
pop
or
in
xor
jne
bound
sbb
adc
pop
rorl
rcrl
lret
cmp
lret
mov
push
xor
mov
mov
sahf
rcrb
push
orb
xchg
aam
mov
or
js
addb
mov
cmpsl
cwtl
lahf
adc
jns
push
aad
notl
sbb
push
sbb
sbb
in
sub
lahf
xchg
add
xor
xchg
es
test
mov
cmp
addr16
sbb
or
push
push
aad
dec
loop
lds
cli
int
pop
shr
mov
shr
pop
repz
or
add
std
mov
mov
inc
mov
or
pop
clc
ja
and
jmp
mov
inc
lods
movb
out
insb
dec
xchg
aaa
outsb
jnp
into
mov
dec
sti
mov
mov
lret
add
jae
out
shlb
int3
cwtl
push
cmpsl
or
sub
mov
leave
push
xor
pop
jns
cmpsb
stos
mov
xor
or
cmp
add
jno
mov
inc
leave
mov
int
adc
js
jne
push
lods
inc
nop
mov
adc
mov
addr16
pop
jg
call
xchg
and
sbb
jle
jmp
fstpt
mov
idivb
jl
insb
mov
leave
pop
push
and
aaa
sbb
push
ss
adc
out
and
into
enter
and
mov
pushl
cmpb
imul
inc
sbb
pop
inc
mov
inc
inc
sub
mov
out
pop
jbe
jne
dec
xchg
push
jae
xchg
shlb
mov
daa
sbb
mov
into
push
push
je
mov
xchg
add
xor
dec
xchg
and
imul
in
std
dec
dec
lcall
xchg
push
xchg
clc
mov
mulb
lahf
dec
push
pop
mov
loopne
lahf
ds
mov
inc
push
push
or
xchg
cli
ljmp
test
dec
and
hlt
pop
scas
cmp
test
jle
aam
pop
ficoms
icebp
jmp
outsb
or
orl
xchg
push
jle
sbb
and
pop
mov
gs
add
nop
bound
hlt
pop
les
xchg
mov
sub
pop
sbb
cmc
jne
sti
ss
sahf
stos
mov
ffreep
lds
push
mov
mov
leave
test
leave
out
pop
mov
add
and
in
mov
flds
into
and
inc
in
mov
insb
loop
pop
dec
jnp
push
mov
push
inc
cmpsb
loopne
pop
xchg
nop
or
adc
push
mov
mov
sbb
pusha
xor
push
push
popf
mov
out
out
out
lods
jmp
popa
mov
jnp
push
xchg
stos
add
testb
push
pop
mov
imul
lods
pop
mov
data16
aam
pop
dec
mov
mov
fcoms
or
and
in
lods
and
popf
dec
or
cwtl
in
jo
pop
fidivrl
push
add
fdivrp
pushf
inc
fbld
push
aam
push
aam
mulb
xor
mov
aad
sarb
xor
dec
cmp
lods
adc
pop
icebp
xchg
jnp
sbb
jo
pop
adc
dec
dec
movsb
dec
or
cmp
in
adc
inc
inc
out
fldenv
out
sarb
add
icebp
xchg
fucom
jbe
mov
mov
and
ret
jnp
mov
stc
pop
adc
sbb
pop
shl
dec
dec
lods
push
shlb
es
add
jge
aam
fucomi
mov
dec
cld
das
data16
xlat
lock
insb
xchg
inc
fsts
jge
ror
pop
cs
nop
dec
sbb
and
inc
pop
not
jle
mov
sti
dec
in
fsubs
inc
outsb
call
loopne
cmc
jae
sti
xchg
mov
sub
lret
fwait
popf
aad
add
sbb
es
sub
and
mov
in
push
inc
in
je
adc
push
push
sub
fisubs
out
jno
and
mov
xchg
add
adc
subl
mov
fcmovu
outsl
mov
sbb
sub
enter
dec
lods
ds
aad
jae
mov
or
inc
pop
mov
cmc
mov
push
sub
aad
push
mov
pop
xor
sbb
mov
aaa
mov
jmp
mov
push
shll
shll
scas
dec
dec
mov
frstpm(287
daa
or
fildll
subb
aaa
sub
arpl
out
movsb
mov
mov
mov
add
mov
pushf
sbb
fcoms
out
roll
jle
xchg
loope
fdivl
mov
push
daa
xor
sbb
test
imul
imull
mov
cmp
dec
adc
sub
stc
test
mov
ficoms
dec
cmp
xorl
lods
std
sarl
pop
push
pop
mov
shlb
mov
test
inc
cld
out
pop
loop
call
xor
inc
adc
outsl
or
inc
ret
fucomi
shrb
or
mov
and
pushf
push
and
test
xor
aam
popf
dec
sub
or
dec
mov
or
out
jle
mov
dec
jp
sub
xlat
leave
and
add
sub
in
cmp
pop
je
popf
mov
or
addr16
pop
mov
add
mov
add
and
xchg
dec
push
scas
icebp
ror
dec
pop
sbb
aaa
mov
mov
push
push
mov
pusha
sub
dec
andl
cmpb
loope
leave
lahf
out
mov
dec
repnz
shrl
mov
jne
sub
scas
pop
sarb
test
mov
mov
xor
and
mov
add
dec
mov
xchg
or
mov
push
push
push
enter
shrl
sub
push
xor
lahf
push
jne
outsl
bound
enter
lcall
pavgw
in
stos
adc
inc
dec
lret
mov
imul
jle
push
dec
xor
int
gs
enter
outsl
jne
push
mov
into
sbb
xor
pop
xchg
aaa
fdivs
shl
loope
xchg
pushf
loope
call
addl
jecxz
cwtl
or
iret
add
pushf
add
xchg
test
pop
mov
xchg
aaa
insl
adc
stos
daa
lds
in
out
popa
jne
imul
outsb
test
cmpsl
in
jmp
pop
pop
pop
int3
sub
sub
mov
push
adc
ja
outsb
mov
dec
add
sbb
cmp
add
jge
cli
jecxz
sbb
lea
mov
dec
test
xchg
xor
arpl
fwait
lds
mov
add
inc
cmp
push
xchg
out
incl
rcrb
nop
mov
push
out
and
xchg
jno
fldlg2
je
push
es
xchg
scas
xchg
and
xor
into
aam
dec
pop
add
enter
pop
xor
lds
push
push
cmp
insl
xchg
ss
vmwrite
xchg
sarl
push
enter
or
xor
mov
cmp
adc
jmp
adc
gs
sbb
mov
cwtl
fcmovnu
push
sbb
xchg
stc
inc
icebp
push
inc
pop
repnz
sbb
pushf
xchg
inc
arpl
sub
push
enter
pop
cs
dec
mov
or
negb
bound
mov
mov
sbb
adc
neg
enter
inc
cmc
lcall
push
aad
pop
jp
add
ficompl
aam
dec
mov
cld
popa
dec
push
int3
xchg
lods
or
mov
leave
cmp
cmp
add
test
xor
das
sub
or
loopne
xchg
mov
add
mov
test
rcrb
aam
pushf
in
xor
lahf
pop
sti
mov
outsb
aaa
cmc
push
add
popa
adc
in
iret
fistl
out
adc
stc
sbb
push
push
dec
push
scas
scas
les
adc
mov
nop
movb
fcmovnb
in
stos
adc
mov
imul
xor
mov
add
jae
mov
fucom
test
mov
mov
int
jns
pop
test
sub
mov
aam
aad
fdivs
aas
stc
fnstsw
cmp
inc
mov
or
ljmp
dec
adc
adc
leave
bswap
push
inc
mov
xor
or
roll
stos
xor
movsb
es
and
sbb
inc
xor
inc
ds
xchg
pop
jl
dec
sub
mov
inc
pop
pushf
pop
ljmp
arpl
test
or
decl
sub
fistps
mov
sbb
add
call
cmp
leave
cmc
ljmp
add
ljmp
xchg
push
add
incl
mov
xor
clc
or
cmc
mull
fadds
fwait
roll
pusha
mov
mov
shrb
outsb
mov
ret
lcall
ja
mov
pop
cmp
mov
jmp
and
fwait
push
ljmp
dec
fs
cmp
and
mov
scas
dec
ret
je
test
popa
inc
test
enter
imul
cld
loop
mov
push
clc
enter
testl
fstpl
sbb
cwtl
cmp
int3
stos
rolb
xor
add
sbb
pop
in
faddl
adc
les
je
lds
out
jns
movsb
jecxz
loopne
je
subl
cwtl
subb
fs
and
xor
pop
daa
sbb
popf
shl
ficompl
xor
inc
adc
scas
int
xchg
or
adc
cmp
inc
xchg
push
cltd
jl
sub
xchg
lahf
int
and
fisttps
cmpl
sar
sahf
dec
xchg
sbb
xchg
insl
lods
and
in
ja
sub
lret
or
push
xchg
lcall
mov
ja
jae
pusha
mov
shl
stc
cld
mov
imul
enter
or
outsl
pusha
gs
push
jmp
push
inc
clc
clc
mov
pop
test
add
das
mov
dec
icebp
arpl
lods
insl
add
dec
lret
pop
add
mov
lahf
test
dec
aad
neg
mov
shl
cs
ljmp
adc
cmp
add
mov
std
or
adcl
adc
stc
stc
repnz
pop
push
shll
notl
push
pop
lcall
xor
push
mov
mov
mov
orl
or
fimuls
mov
rolb
mov
pop
jb
leave
ret
add
into
xchg
mov
mov
pop
popa
fcompl
jg
ljmp
loopne
pop
jp
ds
xchg
fwait
hlt
mov
decb
push
pop
jb
decl
mull
dec
xchg
stos
mov
push
or
ja
mov
xchg
lret
stos
push
dec
sbb
xchg
ds
add
ret
pop
xchg
push
scas
lock
inc
xchg
jp
or
inc
mov
xchg
std
mov
sarl
and
pop
or
lods
outsb
inc
sahf
jl
sbb
sbb
nop
pop
adc
mov
lods
scas
inc
in
loop
insb
out
push
inc
test
test
cmc
dec
push
pop
js
repnz
fucomp
xor
jbe
jne
pop
addr16
insl
inc
arpl
repz
sub
out
cmc
sbb
inc
je
sbb
loope
pusha
arpl
mov
pop
sub
jmp
sbb
leave
push
or
inc
jne
xlat
clc
pop
sahf
call
inc
iret
insl
push
mov
test
xchg
out
lods
mov
lea
xorb
int
pop
call
lods
dec
xchg
pop
xchg
mov
enter
cmpb
les
imul
data16
lret
clc
movsl
xchg
inc
add
cwtl
inc
mov
mov
lods
xchg
fadds
pop
adcb
jne
cmp
jmp
xchg
or
popa
xor
ffreep
call
pop
add
xchg
jnp
adc
adc
test
data16
xchg
shlb
seto
dec
pop
cmp
dec
and
jno
shrl
leave
int
fsubl
mov
lcall
jns
sub
les
call
sub
mov
mov
cmp
lods
jne
push
jbe
ja
jne
rcl
aad
xchg
sbb
mov
in
push
adc
xchg
sbb
or
mov
and
cmp
sub
sub
jge
jo
ror
push
mov
out
addr16
outsb
xchg
test
mov
dec
add
jp
and
pop
ficompl
push
add
or
xchg
xchg
fsubp
xchg
inc
xchg
mov
mov
mov
jp
mov
pmulhuw
adc
int
imul
shll
pop
addl
mov
lock
sbb
or
dec
out
shlb
pop
dec
movsl
cmp
out
pop
cmp
test
les
xor
lret
inc
sub
andl
mov
sahf
xchg
sbb
jl
cltd
or
xchg
dec
out
sub
or
inc
pusha
jae
iret
fisubl
xchg
fwait
mov
pop
pop
lret
dec
js
mov
call
xchg
loopne
leave
rcr
xchg
ss
cwtl
xchg
jo
cmp
adc
pop
push
jl
sti
iret
cli
out
je
mov
mov
push
ss
movsl
pop
ret
int3
loopne
pushf
jg
mov
ret
push
push
es
mov
xor
jnp
mov
fucom
jns
push
cmpb
je
sbb
imul
xor
stos
insb
stc
dec
testb
or
or
inc
das
imul
int
xor
xor
adc
popa
fildl
add
shrl
fdivl
sub
push
xchg
cld
adc
mov
in
lahf
xorb
push
jbe
std
pop
dec
mov
fwait
clc
and
jl
xor
stos
jle
push
fistl
sub
test
pop
mov
adc
push
adc
sar
pop
shlb
into
hlt
ffreep
addb
imul
xor
sbb
push
rclb
xor
or
test
jns
scas
push
mov
cmp
loope
xchg
repz
in
fmulp
lods
mov
push
movsl
sbb
lods
mov
mov
ljmp
jo
cwtl
mov
rcrl
in
dec
jmp
jp
add
dec
int
xchg
test
xchg
jne
mov
outsb
test
hlt
mov
repnz
push
call
and
jo
xchg
push
out
mov
cmpl
push
pop
push
push
nop
test
fwait
pop
push
fwait
adc
sbb
jo
test
or
sub
mov
repz
aad
cmpsb
arpl
mov
pushl
xchg
faddl
add
push
push
adc
xchg
dec
mov
or
jno
cmpsb
movsl
push
lcall
sbb
sub
sbb
lea
mov
fbstp
outsl
xor
or
or
out
arpl
xchg
sbb
sub
in
adc
mov
rcrb
cmp
fwait
inc
addr16
les
inc
ret
imul
iret
dec
std
xchg
aam
insb
ds
ret
roll
and
mov
je
cmc
xchg
cmpsl
movl
sub
and
dec
mov
jp
inc
dec
sahf
or
xchg
loop
sbb
ljmp
mov
je
xor
sbb
xor
pop
sbb
mov
inc
fldpi
outsb
call
lahf
mov
mov
cmpsl
fwait
sub
adc
dec
jge
icebp
fnstsw
mov
mov
dec
rorl
adc
pop
or
lahf
pop
aaa
call
shlb
add
in
sbb
sbb
les
std
aam
push
inc
addl
cmpsl
push
mov
cmp
and
dec
mov
pusha
loopne
cmp
jecxz
pop
outsl
outsb
or
ds
movsb
jmp
mov
ljmp
in
iret
mov
xor
hlt
sub
mov
mov
and
pop
lcall
xor
pop
mov
jnp
push
daa
pop
cmp
and
inc
mov
aaa
push
mov
sub
pop
mov
call
lahf
lds
scas
sub
xchg
int3
or
mov
add
mov
or
addr16
bound
int3
ja
sahf
loop
flds
test
and
cmc
jns
mov
jno
add
push
or
ljmp
jnp
imulb
dec
cli
jb
cmp
jns
sub
add
push
ret
sbb
int3
adc
dec
loopne
test
inc
cwtl
push
aas
xor
mul
cmc
or
icebp
add
test
lods
or
fisubs
mov
adc
mov
orb
push
inc
fisubl
bswap
or
jmp
call
xor
pop
int3
pop
gs
jle
jae
shrb
sbb
arpl
ds
loope
mov
sarl
shr
push
leave
xchg
aaa
inc
popf
in
mov
cmp
movsl
int3
mov
in
inc
out
fistpl
mov
and
popa
mov
fdivrs
jg
inc
mov
mov
pushf
xor
push
ficomps
scas
lahf
mov
sbb
inc
mov
pop
sub
mov
bound
fnstsw
add
test
out
imul
call
pop
rcll
xor
mov
rorl
movsb
xor
or
shlb
fwait
lret
shlb
in
dec
rcrb
into
adc
movsl
and
pop
add
jl
rclb
dec
adc
cmpsl
std
mov
aaa
mov
scas
pusha
out
jo
adc
test
mov
cltd
imul
int
pop
or
stos
mov
ja
mov
cmp
mov
jns
or
adc
nop
mov
and
pop
data16
sub
mov
fcoms
mov
rcl
iret
jne
aad
ss
lods
ficompl
jl
add
in
sub
pop
cmp
movsl
call
pop
shl
inc
mov
mov
xchg
in
loope
stos
bound
inc
lods
and
push
shll
roll
push
stc
cmp
push
test
leave
mov
leave
pop
pop
rcrl
out
inc
cmp
xor
cmc
mov
or
dec
push
xor
jmp
in
jae
addr16
lods
add
mov
or
pusha
pushf
int3
xchg
sub
hlt
mov
push
sub
jl
or
cltd
repnz
sub
push
repnz
pop
cwtl
add
pop
or
pop
ror
nop
mov
aad
pop
adc
add
pop
loope
fbld
cmp
push
lret
cwtl
aas
stos
int3
hlt
aad
hlt
dec
push
movsl
test
aaa
add
adc
inc
xchg
sbb
jne
jmp
iret
jnp
fisubs
ja
mov
pop
fsubs
cmp
and
mov
xchg
adc
nop
and
cld
es
inc
adc
sub
bound
jno
push
ror
or
pop
not
cli
xchg
js
loopne
aad
and
sbb
mov
xchg
or
sbbl
shll
mov
out
imul
js
push
iret
dec
outsb
gs
mov
mov
fisttpl
push
outsb
inc
cmp
mov
cmp
xchg
mov
mov
jb
push
and
pop
inc
sbb
loop
push
add
xlat
jb
iret
pop
sub
cmp
fistl
add
movsl
jl
inc
test
out
outsb
and
mov
dec
ja
in
push
push
pop
rcrl
sub
cltd
pop
imul
push
add
mov
loopne
sub
ja
adc
xchg
cltd
int
fstp
xchg
mov
ficompl
sbb
int3
jae
xor
jge
ret
push
outsb
int
nop
les
xor
dec
mov
mov
rorb
mov
cmp
xchg
inc
stos
lahf
imul
inc
cmp
or
sub
enter
sahf
pop
orb
xchg
lds
mov
cmp
scas
push
repz
adc
fwait
cld
out
mov
jo
xor
lret
mov
push
jmp
je
lret
int3
adc
or
jnp
cmpsb
sbb
out
shlb
outsl
pop
dec
jle
inc
adc
jge
notb
or
inc
mov
or
daa
xchg
dec
mov
std
add
in
fisttps
cs
cli
clc
int
push
movsb
div
pop
adc
lret
in
mov
sbb
cmp
push
test
insb
or
mov
and
inc
mov
xchg
jo
mov
and
cs
dec
add
dec
bound
jg
xor
idiv
aaa
pop
add
sub
inc
cmp
imul
sub
cmp
cmp
scas
insb
xlat
leave
push
rcrl
aaa
inc
mov
call
mov
jne
lock
out
lea
adc
insb
pop
cmp
lea
int
fidivs
push
jb
orl
push
dec
out
scas
int
decl
sub
hlt
push
cld
icebp
lds
rep
sbb
xchg
lods
xor
jp
mov
in
cli
add
insb
dec
mov
pop
test
test
cmp
or
add
dec
pop
sbb
xor
shrb
frstor
outsb
adc
fists
cmp
insb
inc
mov
lahf
inc
daa
push
ret
movsl
push
add
aam
loop
push
xchg
fstl
sub
clc
lahf
cmp
or
xchg
jbe
in
aas
pop
mov
sbb
push
pop
test
into
mov
xor
pop
xchg
push
sub
fildll
adc
popl
inc
mov
fcoml
dec
push
fcmovnbe
and
add
mov
ret
jnp
aas
idivb
fnstcw
inc
data16
movsl
movsl
out
lds
mov
mov
mov
enter
sbbb
adc
cmpl
push
sti
adcb
fnstenv
pop
cmc
mov
es
in
scas
adc
sub
lods
rcl
cmpl
scas
jle
fidivrl
add
mov
ss
fdivr
cmpsl
lahf
cmp
into
je
and
lds
pop
lret
jmp
and
shrl
sarb
sub
dec
repnz
or
and
sbb
popf
cmc
xlat
ret
push
adc
aad
data16
sahf
call
xchg
jp
scas
push
inc
in
mov
inc
push
shrb
stos
popa
xor
int
inc
test
add
imul
cmp
movsl
mov
add
mov
bound
adc
push
mov
xor
sbb
fstpt
and
arpl
test
outsl
stos
fbstp
scas
cmp
inc
loop,pn
or
push
adc
xor
mov
cmc
mulb
or
lcall
sbb
aaa
loope
leave
cwtl
repnz
icebp
inc
xchg
cmp
popa
xor
out
pusha
cmpsb
mov
test
cmp
mov
push
pop
dec
ljmp
sti
repnz
negl
adc
out
cmpsl
or
shl
loope
cmp
aaa
ret
std
ret
cmpsb
mov
jle
inc
sub
sub
cltd
sbb
mov
mov
xlat
or
int3
int
xlat
adcl
pop
push
jmp
mov
out
into
jmp
sbb
sub
in
repz
daa
cmpsl
jg
daa
mov
inc
mov
out
jmp
jl
jge
pusha
inc
imul
mov
ja
sbb
mov
dec
fwait
in
inc
sbb
cmp
jo
pop
addr16
loope
insb
fisubrs
addl
push
imul
xchg
add
addr16
pop
xchg
mov
and
in
mov
mov
shrl
sbb
test
call
sbb
cmp
pop
pop
inc
arpl
jne
push
or
test
scas
push
subl
ret
pushf
dec
dec
pop
add
imul
in
popa
jne
mov
call
pop
icebp
cs
pop
ret
ja
adc
xor
add
inc
in
in
sbb
push
mov
mov
mov
and
addr16
xchg
and
out
add
sti
jg
pop
scas
pusha
and
mov
mulb
sub
subb
inc
ret
lcall
dec
xchg
clc
dec
mov
xchg
pop
push
mov
push
and
sub
mov
sahf
mov
push
popf
ja
int
test
insb
mov
mov
push
out
mov
scas
xchg
into
into
push
fnsave
adc
hlt
inc
mov
cmp
jg
mov
pop
sub
lods
lcall
insl
mov
daa
adc
mov
xorl
icebp
cmp
lods
or
hlt
shl
arpl
sbb
xchg
std
ja
out
stos
mov
insl
sub
push
or
pop
mov
test
push
les
test
into
inc
or
gs
dec
cmp
push
jl
das
hlt
add
adc
leave
orb
pop
or
dec
xorb
fcompl
fldt
mov
rcrb
and
scas
add
cmp
cmp
inc
dec
dec
leave
jp
mov
iret
mov
js
cltd
sbb
call
rcr
js
out
mov
cltd
push
ss
fcoms
aam
fsubl
xchg
push
ljmp
push
fldt
xlat
cmc
add
add
inc
std
adc
dec
sbb
shlb
dec
mov
das
dec
xchg
jne
fwait
mov
out
jne
push
imul
pop
std
aad
pop
or
push
aam
pop
int3
cld
or
inc
popf
fildll
clc
pop
aam
push
cmp
or
jnp
sbb
xlat
ja
xchg
inc
icebp
dec
in
push
pushf
daa
and
stos
mov
mov
iret
loop
ss
loop
adc
push
iret
inc
cmp
mov
sbb
inc
in
jp
lret
clc
jmp
cltd
aaa
pop
jns
and
cmpsb
cmp
or
dec
and
inc
lods
ret
rol
sub
sbb
jbe
scas
sahf
int3
inc
clc
dec
mov
into
inc
dec
adc
adc
sti
call
sub
xchg
in
xor
icebp
cmpsl
xor
mov
mov
loop
mov
fidivl
test
dec
movsl
iret
mov
sarl
jmp
aam
lret
xchg
dec
dec
into
clc
mov
inc
adc
sub
mov
pop
lea
js
dec
and
cmp
sub
les
pop
jecxz
leave
es
and
pop
les
mov
movsb
sub
fmull
int3
icebp
mov
cmp
fists
inc
out
rcll
call
push
mov
pushf
cmpsl
mov
lcall
pop
into
daa
mov
add
sbb
mov
add
sbb
std
sbb
dec
xor
ljmp
mov
sbb
iret
dec
clc
sub
pop
sbb
inc
loope
xchg
adc
push
pusha
add
scas
fs
pop
and
inc
pop
daa
addr16
je
jl
sbb
add
push
add
outsl
xorl
test
add
dec
jae
pusha
loop
shrl
faddl
mov
dec
int3
fildl
mov
add
stc
adc
pop
jae
bound
jge
add
push
or
pop
bound
push
aaa
insl
lods
lcall
subb
pop
movsb
pop
fnstcw
les
loope
mov
outsl
stos
orl
jg
fidivl
xor
data16
push
testl
sub
add
jae
push
or
mov
xchg
clc
add
mov
aam
loope
sub
les
inc
enter
mov
fiadds
loopne
adc
push
push
cltd
das
in
js
push
dec
lds
mov
add
jp
inc
adc
xchg
stos
int
jl
repnz
scas
mov
test
repz
mov
lcall
xchg
add
stc
dec
mov
xchg
inc
negb
repnz
add
mov
adc
and
mov
jge
insb
xchg
xchg
cltd
div
xchg
or
or
or
lods
dec
call
aas
xchg
aaa
dec
push
mov
push
mov
jnp
mov
xchg
sbb
jge
dec
sub
testb
or
movsb
out
push
or
push
push
fisttpll
add
dec
out
cmp
mov
adc
xchg
xchg
jae
add
mov
push
sbb
adc
lret
mov
cmp
pop
cltd
pop
icebp
idivl
lahf
cmp
fs
fsub
or
pop
and
testl
lock
jle
hlt
adc
stos
es
sub
xor
cmpsl
and
int3
hlt
push
fisubs
jecxz
cmp
into
arpl
xor
cld
adc
ror
out
cltd
and
out
xchg
aad
outsl
mov
push
or
sbb
cmpsl
xchg
loopne
shl
xchg
adcl
ret
xchg
aam
int
lret
dec
pop
cli
push
adcl
decb
xchg
inc
jge
mov
js
add
sub
popa
movsl
xchg
pop
cwtl
lods
xor
pop
mull
cltd
add
xchg
imull
cmp
inc
pop
ljmp
xchg
lahf
enter
xchg
daa
sahf
ljmp
push
std
or
sbb
jge
mov
fstl
lods
cmpsb
pop
test
dec
and
xor
jae
push
mov
adc
sub
aad
and
ret
addb
ljmp
mov
and
mov
cmp
fisttps
push
lret
sub
std
sbb
push
xor
out
popf
rorl
rolb
out
xor
nop
pusha
cmp
rcl
ss
cmp
xor
cs
cld
hlt
add
cmpsb
mov
pop
sarl
mov
sbb
fsubs
gs
mov
repz
roll
inc
stc
in
loopne
mov
add
cmp
das
mov
iret
sub
add
lahf
pop
out
cmpsl
push
and
sub
and
sub
add
and
and
daa
mov
xor
cmpsl
into
xor
mov
int
addr16
icebp
dec
mov
xchg
xchg
rcr
jb
cmpsb
shrb
adc
inc
sahf
mov
ja
leave
int
das
jne
pushf
test
das
and
push
mov
mov
xor
add
add
icebp
add
xor
mov
push
popf
cmpsl
nopl
xchg
pop
adc
fwait
scas
mov
test
fstl
into
addb
gs
push
sbb
jne
scas
inc
inc
jo
fdivrp
jae
sub
outsb
cmp
std
jecxz
inc
xchg
jae
xchg
imul
icebp
cmpsl
push
outsb
fcmovne
mov
and
cmp
dec
push
pop
or
ret
mov
push
mov
mov
sbb
add
cmp
mov
xor
repnz
in
stos
jne
cs
enter
sub
fisttpl
mov
fstl
cmpsl
lret
flds
pop
imul
cmp
jb
movsl
cmp
mov
test
jne
test
xor
inc
mov
and
xchg
dec
in
lcall
or
dec
in
mov
out
mov
lahf
scas
add
pop
xor
mov
repnz
in
and
and
fiadds
outsl
shll
cmp
ficoms
xor
push
std
jecxz
pop
add
add
inc
push
mov
mov
mov
pop
ja
and
inc
lret
push
xchg
pusha
test
gs
xchg
faddl
int
pop
cmp
jae
ss
lret
call
jp
cmp
mov
fwait
mov
pop
push
jecxz
or
adc
mov
add
ret
pop
inc
add
mov
loop
or
std
mov
or
test
sbb
mov
lds
and
xor
rcrb
je
rcll
xchg
adc
sub
jle
add
aaa
sarb
fwait
jne
add
add
and
popl
cmc
fs
mov
negl
xchg
into
pop
push
loopne
std
shll
das
fstps
or
adc
dec
cli
pop
dec
icebp
addb
cmp
cltd
cmp
inc
notl
inc
andb
cwtl
adc
nop
out
jbe,pn
lahf
push
scas
sbb
inc
sub
movsl
mov
adc
cmp
int3
dec
jae
sbb
arpl
sahf
mov
xchg
int3
out
sbb
mov
adc
pop
aaa
inc
cmpsl
mov
sub
or
xchg
pusha
sub
mov
outsl
cmpsl
xorb
cmpl
adc
rorb
pop
ja
rolb
and
or
dec
icebp
push
cmp
sub
cli
shl
aam
add
adc
not
sub
lea
and
jno
mov
out
cmpb
mov
psubsb
ret
sbb
mov
incl
jecxz
into
add
je
in
test
out
jno
mov
sbb
shr
fbstp
pop
cmpsb
subb
es
or
xchg
bnd
mov
adc
cmp
popa
adc
xlat
repnz
mov
mov
addb
mov
imul
sahf
mov
xorl
cwtl
popa
pop
adc
xchg
pop
loop
into
js
sahf
cmp
imul
imul
jns
lea
aas
mov
mov
xchg
out
ja
push
in
dec
sub
mov
imul
xor
or
dec
out
xchg
mov
les
jg
mov
sbb
repz
stos
sbb
sub
cwtl
xchg
inc
notl
imul
dec
sahf
mov
cltd
hlt
mov
movsb
daa
or
out
jno
fisttps
mov
loopne
dec
xor
xchg
ljmp
sbb
sbb
push
ja
fldenv
cmp
lret
or
in
movsb
roll
xor
data16
icebp
push
adc
nop
outsl
inc
mov
clc
cld
aaa
xor
xor
mov
fdivs
jnp
xor
or
or
jo
sbb
inc
arpl
fcomip
aas
lods
fwait
sub
sub
fisubl
std
hlt
and
test
xor
add
les
in
test
mov
in
xor
in
mov
mov
dec
ret
sbb
xor
mov
sub
stc
std
mov
rcll
mov
adc
and
clc
out
and
rcrb
adc
adc
cmc
hlt
dec
xchg
into
jnp
out
popl
cwtl
ljmp
in
cmp
inc
nop
inc
sbb
mov
or
icebp
xlat
pop
dec
aas
cmp
shlb
or
imul
mov
cltd
inc
pop
lds
loopne
mov
add
mov
arpl
lods
lcall
cmovl
pop
ret
scas
xchg
decl
mov
xor
aas
xchg
in
and
hlt
movsl
add
sub
ljmp
xchg
pusha
xchg
xlat
movsl
pop
xor
mov
add
cmc
add
rorl
mov
dec
jnp
lods
mov
or
dec
fdivl
daa
cmpsb
push
add
sub
int
add
cmp
addb
inc
push
notb
mov
push
or
pop
mov
sar
adc
mov
mov
ret
loop
sbb
jne
loop
pminub
sahf
pop
or
out
in
xor
fiadds
out
sbb
aad
adc
or
inc
subb
scas
push
xor
add
fisttpll
popa
daa
loope
or
adc
cmc
sub
push
pop
mov
push
loop
jbe
adc
add
push
sub
rcll
jae
aaa
xchg
fcom
mov
adc
jg
or
push
addr16
dec
inc
test
outsl
add
icebp
or
insl
dec
out
cld
adc
and
mov
mov
loop
xchg
das
pop
mov
xchg
sahf
scas
push
ror
movl
and
movb
xchg
out
adc
push
shll
xor
repnz
je
imul
dec
sarl
loope
fwait
pop
push
cltd
or
stc
mov
mov
scas
aas
xor
aaa
roll
shrl
cmp
ja
add
dec
daa
add
lahf
leave
jb
mov
mov
inc
xchg
pop
adc
xchg
idivb
adc
jbe
jecxz
mov
xchg
mov
jb
and
sahf
adc
test
push
cmc
sub
mov
adc
sub
push
mov
ds
mov
iret
movsb
inc
sbb
faddl
test
nop
mov
fs
or
mov
push
pop
hlt
sub
lock
stos
pop
xor
insb
add
clc
xchg
inc
and
sub
std
or
imul
out
xchg
and
pop
inc
mov
out
dec
mov
sbb
mov
xlat
inc
mov
lahf
mov
addr16
cli
repnz
push
imul
rcrb
movsb
cmpsl
adc
and
inc
and
stos
mov
mov
adc
push
fdivrl
lcall
mov
adc
jg
stos
lea
in
ss
sbb
outsb
inc
out
cmp
cltd
sahf
mov
mov
sbb
push
xchg
jmp
cmpsb
lock
dec
xchg
xor
ljmp
xor
xlat
or
vunpckhps
js
movsb
mov
in
jne
dec
jecxz
dec
sbb
out
jo
sub
dec
mov
psubsw
add
in
or
xchg
sub
xor
xchg
ret
add
cmpsl
mov
mov
cltd
scas
lea
mov
dec
xor
mov
std
hlt
push
aam
leave
andl
or
xchg
fs
xchg
or
xchg
cs
xchg
cmp
add
cwtl
jae
fdiv
dec
rclb
pop
in
loop
xlat
arpl
leave
adc
test
imul
jo
add
sub
insl
loop
cmc
aam
add
stos
int
out
dec
or
stos
sbb
dec
dec
addr16
fs
js
inc
and
and
movsl
mov
jl
mov
add
in
mov
mov
in
jbe
mov
stos
outsl
cmp
add
je
push
repnz
sbb
lret
jnp
mov
jbe
clc
int3
xor
push
jge
mov
or
movsb
shl
add
decb
cmp
push
loope
jge
push
fsubrl
jecxz
dec
xor
inc
sub
mov
mov
fidivrl
hlt
xor
roll
roll
xor
jl
je
push
movsl
out
test
jecxz
pop
mov
lret
ret
gs
repnz
addb
addb
inc
rolb
and
pop
cmp
add
cmpsb
clc
mov
sbb
push
shlb
out
bound
movsl
sbb
cld
out
pop
xor
mov
and
out
mov
repnz
adc
fistl
mov
add
sub
lea
bound
mov
pop
clc
or
jle
test
cmpl
les
dec
notb
pop
pop
mov
scas
xor
mov
mov
icebp
enter
cs
out
in
imul
movsb
jne
lcall
xor
repz
xor
and
sbb
push
inc
cmp
pop
bound
rcrb
fimuls
inc
fimuls
add
fisubl
cmp
scas
cmp
pop
shll
enter
rcrl
js
xchg
movsl
stos
movsb
fistpl
fcoms
stos
subl
notb
sub
scas
fcoml
cs
pop
jmp
mov
xchg
ja
std
into
mov
cwtd
pop
add
xor
jnp
fisubrl
pusha
call
mov
cmp
sub
cmp
push
xchg
rorb
ret
ret
lds
shr
mov
add
lcall
push
jmp
in
imul
test
dec
in
fcmovnu
lret
cmc
push
mov
lahf
ljmp
stos
inc
push
popa
test
and
mov
xchg
xchg
or
pop
cmp
outsb
pop
xchg
cmp
pop
in
subb
rorb
lock
push
or
ret
and
push
and
dec
clc
or
shll
jnp
ret
push
lret
xor
dec
stos
cmc
xchg
xor
cmp
aas
outsb
sbb
add
je
scas
test
inc
add
pop
mov
clc
roll
jbe
cmp
out
repz
dec
in
stos
es
inc
aaa
jle
mov
mov
cmp
icebp
inc
icebp
push
xchg
jbe
mov
mov
mov
popa
int
and
pop
repnz
int3
pop
icebp
ds
push
adc
sub
loopne
out
cmc
in
cmp
adc
pop
lret
xchg
lods
add
ds
inc
push
and
int3
rclb
xchg
xor
push
inc
dec
clc
cmpsl
add
in
xlat
jl
imul
mov
inc
js
idivl
push
xlat
fucomp
sbb
call
test
iret
push
bound
fwait
xor
and
imul
mov
mov
lahf
int
fldlg2
adc
mov
in
mov
xor
sahf
xlat
in
into
cmc
fiaddl
adc
aaa
add
dec
fcmovnb
js
cmp
mov
push
adc
imul
cmp
ret
ss
hlt
cltd
mov
mov
out
not
stc
pop
add
xchg
shrl
in
dec
inc
jmp
jb
jbe
xor
or
xchg
adc
push
xlat
je
jne
jp
mov
and
sbb
aad
in
lret
loopne
fisubs
inc
imul
xchg
jno
cli
enter
out
or
inc
mov
inc
scas
ljmp
pop
xchg
jg
pushf
int
insb
test
xor
popa
nop
xchg
dec
stos
repnz
mov
and
mov
push
nop
lret
or
sub
outsb
mov
leave
dec
sub
pop
jle
pop
iret
push
ljmp
inc
int
ret
xor
mov
enter
lcall
sub
sarl
fcoml
jne
call
xchg
sbb
inc
and
mov
je
jb
test
loop
incl
add
adc
cmp
add
imul
icebp
push
pusha
jns
data16
pop
scas
adc
adc
mov
xor
push
cmp
dec
mov
stos
ljmp
movsl
out
xor
int3
cmpsl
sti
sarl
aas
dec
add
bound
inc
inc
pop
repz
xchg
or
enter
lods
jne
test
cmp
out
aaa
ljmp
cltd
adc
cmp
int
and
icebp
sbb
cmpsl
and
push
mov
shrl
aaa
add
pop
pop
push
xchg
jne
clc
mov
daa
out
sbb
mov
cmp
xor
xchg
in
icebp
loop
data16
in
lock
sbb
outsb
shrb
mov
push
sbb
adcb
les
pop
addr16
insb
ljmp
add
dec
xor
jb
fcoml
pop
adc
inc
lahf
pop
cli
inc
repnz
xchg
sub
jmp
pop
jae
dec
insl
ret
lahf
divb
inc
jne
cmpsb
dec
add
shll
mov
adc
sub
loopne
pushf
inc
pop
cmp
out
pop
adc
jmp
sub
aam
ja
inc
or
add
rorl
notl
in
test
cmpsb
mov
dec
adc
xchg
je
mov
xlat
dec
clc
outsl
or
data16
dec
cmp
mov
gs
fs
adc
sbb
fildll
shrl
fsubp
inc
jb
inc
pop
fwait
popa
inc
dec
cmc
shrb
xchg
sbb
and
and
aaa
je
aad
ficomps
mov
into
mov
and
jae
xchg
push
lahf
mov
xor
ljmp
addr16
rcll
outsl
push
cmpsl
mov
test
push
sbb
out
mov
jo
cmpsb
sbb
add
fucomp
clc
call
loopne
movsb
dec
inc
es
inc
jmp
mov
fwait
mov
xor
negb
or
stc
test
daa
inc
cwtl
xor
sahf
movsb
lret
mov
jo
clc
imul
jbe
xchg
jmp
comiss
push
jbe
inc
inc
call
dec
loop
jg
pop
sub
cmpb
or
clc
ret
mov
cmp
mov
aas
lea
xor
jns
cmp
ss
cs
pop
cli
data16
jecxz
outsb
test
inc
pushf
div
pop
dec
xor
insb
inc
lods
push
mov
mov
fsubrs
cli
and
xor
popf
push
imulb
icebp
lret
outsb
pop
lock
inc
addl
jmp
mov
fmuls
lock
fwait
call
jbe
sarl
mov
inc
fldt
pop
jmp
mov
jb
adc
in
xchg
or
roll
aaa
and
pop
push
pushf
adc
lcall
xor
jne
ss
movsb
lea
sbb
jbe
inc
outsl
push
pop
cmp
mov
xchg
push
icebp
or
cmpsb
adc
lret
pop
push
lea
pop
xor
mov
test
add
xchg
jmp
lret
cmp
push
push
sarb
adc
hlt
js
std
pop
rcrl
pop
jno
testb
movsb
sub
add
mov
rol
mov
mov
mov
cmc
inc
jb
popa
imul
jg
push
cmc
cmp
rcl
push
jmp
out
test
xchg
cmp
negl
psrad
jne
sub
adc
jmp
leave
push
pop
xchg
mov
lahf
add
aas
cmp
jl
les
xchg
into
cmc
inc
mov
pop
outsl
inc
mov
jl
adc
or
ret
shll
cli
inc
pop
xchg
xor
jp
xlat
pop
fbstp
xchg
aad
pop
inc
push
sbb
add
lcall
or
imul
adc
popa
xchg
cmp
ret
sub
data16
jge
cmpsb
loopne
adc
jno
xor
cli
sbb
out
mov
ret
out
dec
insb
or
inc
cmp
scas
in
adc
lods
cmp
xchg
sbb
scas
pushf
out
inc
ja
dec
fcmovnb
stos
pop
adcb
jecxz
or
test
mov
movsl
lock
sub
lds
repnz
test
add
add
out
arpl
sbb
loopne
js
lcall
loope
ja
mov
enter
shll
in
arpl
out
stc
or
sti
into
loop
fstp
sahf
inc
xchg
sbb
inc
insb
test
xchg
sub
sub
incb
xchg
xor
out
pop
mov
and
adc
mov
mov
add
mov
out
sti
test
mov
xchg
adc
cmp
mov
jmp
ret
jae
pushl
je
lds
scas
dec
or
sbb
or
and
test
je
dec
mov
mov
dec
jmp
out
lods
push
xlat
xor
cmp
pop
sahf
sub
mov
inc
jle
out
leave
jns
and
pop
nop
xchg
or
repnz
dec
sub
push
mov
pop
xchg
fidivrs
fldl
push
inc
and
dec
xor
ficomps
xchg
andb
sub
add
lret
dec
fadds
add
fdivl
or
ja
mov
xor
out
jle
jp
lahf
sub
jle
cmp
and
lds
add
ds
jge
xor
repz
adc
pop
add
aas
cmp
ljmp
mov
ss
jb
in
xor
jmp
push
cld
jge
imul
inc
cld
stos
fidivl
stc
sbb
sbb
in
fxch
rcrl
cld
sahf
mov
aad
jmp
pop
add
mov
push
mov
sub
xor
jmp
mov
jp
jb
add
xor
add
nop
hlt
pop
test
jbe
push
bound
jns
xor
add
out
pop
jp
mov
or
icebp
pusha
lea
subb
push
loope
sar
inc
xchg
jge
jl
mov
movsl
shl
jmp
lods
adc
push
dec
xchg
lea
xchg
ret
jmp
add
fsubrs
adc
jns
sub
xor
push
mov
adc
stos
scas
hlt
and
sbb
test
add
mov
adc
jmp
mov
dec
cld
or
jno
mov
fwait
mov
xor
aam
sbb
jae
je
movsb
popf
or
ja
dec
ljmp
mov
xor
lret
shrl
cmp
inc
sbb
fsubrl
into
sub
js
mov
mov
mov
mov
sub
dec
enter
in
sub
js
jp
adc
sub
inc
sub
cmpb
pop
dec
clc
test
cmp
loopne
rclb
subl
int
push
ss
inc
iret
fisubs
lcall
dec
movsl
and
jmp
ljmp
cmpl
push
fildl
pop
lcall
aam
dec
push
lea
mov
bound
aad
aam
ss
fldcw
and
mov
iret
fwait
push
es
mov
sbb
add
xchg
lcall
dec
jnp
divb
dec
push
add
mov
les
test
pop
mov
cmp
aaa
scas
or
scas
cli
scas
leave
adc
fstpl
aaa
dec
arpl
inc
stc
psubusb
subb
mov
cmc
popa
movsb
sbb
mov
mov
popf
xor
mov
fisttps
push
and
cwtl
dec
dec
push
mov
mov
cmc
ja
dec
sub
shll
loop
mov
aas
sbb
adc
shll
lret
fcoml
push
arpl
jnp
cmp
movsb
inc
adc
fildl
and
imul
xchg
push
inc
les
enter
xchg
pop
xchg
sub
mov
xor
test
dec
add
mov
sub
mov
sbb
lods
jae
rorl
xchg
shll
lcall
clc
loopne
movsb
repz
inc
inc
jecxz
fiaddl
mov
xchg
ljmp
leave
scas
mov
lea
or
les
call
int3
pop
xchg
push
push
cwtl
cmpsb
jne
mov
mov
pusha
jnp
lcall
cmpsl
add
outsl
jae
iret
sbb
push
mov
adc
xchg
push
inc
xchg
ret
shll
repz
sbb
push
and
sub
sub
test
lods
or
cmp
ljmp
mov
scas
int
xchg
ror
xor
sbb
adc
xchg
jg
mov
mov
into
lods
add
jno
xor
mov
xchg
rcrb
lcall
cmp
mov
mov
mov
inc
pop
jmp
cltd
and
ljmp
dec
dec
cmp
les
dec
mov
mov
jp
mov
out
pop
les
les
in
and
inc
mov
inc
lock
mov
movsl
cmpsb
lea
cmc
xchg
bound
mov
pop
xor
es
lods
jae
mov
lcall
lret
cltd
lods
add
xchg
sub
adc
sti
leave
cs
into
out
fistps
cmp
fistpll
pop
je
nop
and
repz
mov
sbb
pop
mov
push
cli
arpl
xor
jae
test
in
cmp
aam
mov
mov
inc
inc
imul
mov
inc
or
inc
mov
mov
mov
xchg
roll
aam
adc
pusha
sub
cli
inc
jne
sbbb
add
jge
hlt
add
dec
mov
mov
cmp
sub
add
dec
out
fisubrl
out
pop
int3
pop
lret
outsl
icebp
dec
rcrl
add
jae
jmp
fstps
jle
push
sahf
pop
xor
sbb
or
lods
xchg
inc
insb
sub
mov
cmp
test
stos
jo
add
or
or
push
enter
sub
jecxz
inc
mov
mov
lret
test
lds
dec
mov
inc
add
daa
jg
cmp
and
div
adc
xor
inc
shrl
popa
pop
pop
lret
in
js
dec
insb
into
out
test
mov
verr
mov
inc
pslld
das
jg
adc
cmc
jle
rclb
mov
movsb
mov
int
fdivp
fcom
push
inc
vsqrtss
cld
adc
int
mov
xor
xchg
sub
pmaddwd
pop
xor
xchg
mov
xchg
xor
pushf
sbb
std
stos
sub
cwtl
shrl
inc
mov
cmp
mov
addr16
dec
xor
mov
pop
xchg
cli
mov
jnp
mov
inc
push
pop
shll
stos
arpl
enter
dec
lea
dec
repnz
mov
mov
shlb
out
lahf
push
hlt
fs
push
cmpsl
pushf
mov
dec
pusha
ja
xchg
sti
aas
cmc
inc
addr16
sub
pop
fistl
out
xor
inc
ret
mov
rorl
rcll
lahf
pop
push
fs
cs
jne
push
mov
push
sbb
loope
lods
js
cmpsb
lcall
stc
nop
shrl
pop
movsl
jno
pop
outsl
pop
mov
jmp
mov
movsb
lods
cmp
fs
adc
rcrb
sar
cmp
cltd
jae
stos
insb
dec
gs
jmp
not
je
call
jle
je
push
ficoml
mov
mov
push
cmp
add
lock
sub
hlt
cmpsl
cmp
xchg
pusha
cltd
aad
push
adc
aam
loop
fmuls
and
adc
pop
push
mov
xor
pop
sub
xor
mov
jae
mov
fisubs
mov
sbb
test
or
dec
xor
xchg
pusha
mov
je
sbb
mov
xor
push
and
and
enter
pop
rcrl
fcompp
enter
test
inc
shl
push
sahf
lock
sbbb
push
movnti
push
mov
outsb
loop
add
push
sbb
sub
sbbb
cld
dec
data16
es
or
jecxz
fcmovb
jl
hlt
fnstcw
adc
daa
mov
outsl
imul
or
movsl
out
pushf
sbb
mov
aas
sbb
sti
out
mov
xlat
scas
mov
and
rclb
jecxz
arpl
mov
out
iret
out
pop
jecxz
into
mov
mov
fists
mov
lea
push
inc
and
pop
or
sti
mov
fdivr
in
repz
dec
xchg
mov
test
dec
loop
dec
sbb
lds
mov
xor
imul
shrl
xchg
mov
sti
jbe
insl
cmpsl
push
or
cli
mov
dec
dec
out
loopne
xchg
xor
fidivrs
nop
lock
cmp
out
jbe
cmpsl
incb
xchg
mov
cltd
pushf
sub
sbbl
sub
push
mov
mov
cmpsl
test
xor
lds
rclb
pop
in
jle
adc
inc
lea
rolb
jmp
fistpll
inc
add
mov
and
aad
add
outsb
test
push
and
or
pop
stc
mov
xchg
into
in
dec
mov
fxam
iret
rolb
das
mov
jnp
pop
aas
data16
push
shrb
je
cwtl
sbb
add
xchg
lcall
mov
mov
cmp
jecxz
and
flds
inc
aaa
add
faddl
sbb
lock
inc
stos
andb
mov
push
fidivrl
sub
xchg
or
push
sub
fadd
gs
loop
daa
push
xchg
sub
lcall
and
push
gs
and
sub
fildl
std
in
inc
cwtl
add
inc
cmp
orl
dec
pop
js
jae
ja
daa
sbb
adc
adc
sbb
lds
test
mov
fldcw
dec
push
pop
lds
ja
mov
shlb
add
sarb
icebp
push
push
test
std
jbe
sbb
mov
mov
jl
push
rorl
aaa
les
mov
xchg
psubusw
cmp
push
dec
inc
mov
ficompl
jno
or
fwait
lret
pop
mov
mov
push
pusha
mov
pop
mov
scas
imul
xor
push
or
xchg
aas
out
inc
repz
popa
pop
pop
pop
outsb
push
sub
mov
push
cmp
push
int
sbb
push
lea
imul
add
decl
decb
cmpsl
outsl
cmp
ss
sahf
xor
fisubs
insb
fisttpll
sub
cs
test
push
or
mov
out
mov
dec
mov
pop
lret
stos
mov
loopne
mov
mov
fnstenv
mov
mov
add
lds
pop
cmp
xchg
sti
pop
mov
jbe
loop
cmp
and
xchg
xor
push
sbb
cmc
shrl
enter
mov
mov
push
fadds
data16
sbb
mov
mov
nop
in
push
cs
scas
dec
sub
outsb
mov
sti
pop
push
mov
mov
jnp
mov
inc
test
inc
mov
das
cwtl
outsl
sahf
scas
incl
cmp
imul
movsb
insb
and
das
imul
pushf
mov
repz
cmpsb
xor
loopne
pusha
sub
xchg
mov
ret
popf
adc
inc
ja
repz
dec
ss
clc
cltd
sub
enter
fisubl
icebp
pusha
push
icebp
lea
call
in
out
or
xchg
mov
lds
xor
popa
inc
fiadds
mov
test
inc
xor
cltd
jmp
cmpl
jns
mov
xor
aad
push
mov
jb
inc
cmp
incb
sub
inc
out
mov
xor
mov
cmp
shr
js
jno
mov
dec
mov
mov
push
jnp
rol
xchg
push
inc
idivl
push
lods
jg
pop
into
mov
test
iret
sub
insl
mov
enter
adc
stos
sahf
test
test
xchg
in
and
lods
call
arpl
inc
int3
fcomip
roll
adc
sbb
sbb
inc
xchg
outsl
popa
ud1
aad
into
mov
loopne
and
inc
mov
push
mov
cmp
out
push
lret
adc
das
movb
fisttps
sbb
xor
aas
push
xchg
imul
add
shr
dec
mov
xchg
jo
push
push
sbb
lds
inc
dec
call
pop
leave
test
cmpsb
lret
cmp
call
mov
jmp
xchg
or
lahf
sub
testb
pop
mov
mov
test
cs
out
movsb
pusha
pusha
cmp
stc
repz
std
cmp
jo
xchg
sub
xor
data16
sub
js
jmp
imul
aaa
mov
hlt
xorb
filds
mov
lahf
push
imul
mov
lea
nop
enter
imul
into
cs
sub
in
hlt
jbe
xchg
push
sub
lcall
inc
add
jecxz
fcoml
pop
push
cmp
push
dec
mov
repz
inc
leave
leave
push
js
jle
lcall
mov
dec
jae
push
std
popa
adc
jns
jb
inc
mov
lahf
dec
cmpsb
lods
pop
pop
ja
xchg
sub
cmpsb
xchg
and
push
test
lods
xor
out
push
pop
ret
iret
mov
cmp
test
adc
gs
lods
cmc
or
inc
stc
mov
fwait
push
out
mov
mov
iret
movsb
inc
aas
inc
ficompl
mov
popa
sub
in
into
jge
loope
jnp
xor
sbb
ss
cli
popa
mov
push
jmp
mov
sbb
aam
mov
mov
jle
lret
push
leave
xchg
fwait
fwait
repnz
pop
and
outsb
xchg
cs
loop
stos
and
jae
mov
ret
ds
pop
cmp
mov
cmp
xchg
and
jle,pt
jnp
aam
or
xor
mov
cmp
push
nop
or
cwtl
push
cltd
js
sti
or
insl
inc
dec
pop
mov
add
cwtl
push
cmp
out
rorl
xchg
enter
mov
mov
dec
push
test
jo
loopne
repnz
lods
jo
mov
or
adc
add
fsubrp
fucomp
fldcw
scas
inc
pop
jnp
mov
pop
xor
add
outsl
mov
mov
inc
mov
jmp
push
int
pop
or
lock
xlat
arpl
push
sub
mov
aam
cwtl
fcoms
xor
adc
loopne
add
arpl
je
sbb
imul
aas
inc
popf
imul
cmp
mov
inc
push
cmp
testb
int
mov
arpl
adc
push
cltd
lcall
pop
outsl
pop
mov
aas
in
pop
cld
pop
mov
addl
lret
xor
paddsw
insb
and
insl
inc
cmpsb
sbb
rcrl
mov
fs
add
daa
sub
push
sub
or
mov
cmp
lock
enter
or
mov
jecxz
dec
cmp
or
cmp
in
jne
cmp
stc
pop
push
cmp
sbb
adc
inc
or
ret
lea
ret
xor
arpl
pop
jne
test
movsb
pusha
retw
mov
jno
test
jp
gs
adc
cmp
loopne
inc
inc
std
jbe
xor
cs
push
popa
iret
mov
cmp
lret
pop
push
inc
cmp
sbb
int3
pop
test
mov
movsl
sbb
cltd
repz
out
jns
jbe
test
and
pop
cmp
fimuls
mov
mov
ja
pop
loop
cmc
into
inc
rcrl
mov
sub
popa
pop
xchg
leave
mov
xor
jne
and
dec
movsb
and
fisubl
into
dec
daa
mov
inc
pusha
mov
sbb
add
jno
xor
mov
dec
jne
xchg
int3
fsubs
xchg
cwtl
jp
test
loopne
ret
jle
movsb
sub
js
leave
sub
movsb
movsb
es
mov
call
lds
or
and
mov
inc
xchg
push
rcll
adc
ja
cwtl
idiv
xor
add
lcall
sti
or
xchg
inc
shlb
adc
pop
aad
lahf
cmp
push
cmp
and
push
ret
les
pop
jl
fidivl
lods
loop
orl
addr16
dec
aaa
dec
dec
popf
loop
cmp
clc
sub
pop
jnp
xchg
movsl
rol
cmp
arpl
inc
popf
mov
push
test
jbe
rcr
mov
xor
stc
iret
stos
mov
lods
stos
test
lock
pop
push
arpl
roll
add
xchg
xchg
dec
mov
rol
mov
repnz
adc
hlt
addr16
inc
push
pop
mov
inc
jge
movsb
add
in
lds
push
insl
cltd
test
or
push
ds
mov
test
ret
mov
dec
push
pusha
xlat
dec
sahf
xor
or
lahf
mov
mov
fidivrs
xorb
pusha
jae
sub
addr16
pop
ret
sbb
mov
jbe
mov
adc
daa
in
adc
xor
cmpsb
jbe
sub
pushaw
sarb
mov
sub
cmp
xor
std
inc
mul
mov
jmp
mov
insl
dec
mov
ljmp
fabs
inc
mov
sub
jns
push
mov
pop
push
fwait
cmp
js
aad
dec
mov
xchg
icebp
xchg
push
lret
inc
stos
test
add
mov
inc
dec
int
xchg
or
shll
cmp
movsl
shr
jnp
push
xchg
pusha
hlt
lret
aam
int
scas
sbb
mov
add
jb
and
lods
mov
dec
in
dec
mov
mov
loope
es
out
lods
ffreep
fisttpl
inc
pushf
pop
push
loopne
add
lods
jg
cmp
and
lahf
mov
inc
pop
into
or
xchg
cli
out
jmp
out
popa
js
icebp
and
mov
add
rcrl
adc
cwtl
jmp
arpl
dec
sub
sub
add
pusha
fstpt
in
cmp
scas
mov
and
dec
fdivrs
sub
es
adc
adc
xchg
push
ja
mov
fistps
mov
ret
sti
mov
stos
cmc
repz
aam
outsl
mov
cmpsl
cmc
rol
arpl
lock
add
and
cmp
imul
add
gs
adc
ds
in
loope
das
push
outsl
cli
shrb
and
imul
and
xchg
xchg
ss
fidivs
adc
inc
fisttps
and
adc
mov
adc
addl
aad
dec
lods
adc
js
mov
dec
test
or
sbbl
mov
fs
xchg
pop
sbb
cmpsb
dec
push
mov
sahf
es
mov
jbe
inc
scas
dec
dec
or
daa
aad
mov
cmpsl
push
test
ret
out
repnz
mov
pop
js
mov
aaa
hlt
add
pusha
test
test
inc
mov
gs
pop
and
xchg
or
push
repz
out
sahf
and
fcmovnb
cltd
cmp
lods
mov
push
dec
push
push
push
test
or
insb
icebp
push
sbb
mov
jmp
add
imul
das
repz
inc
jae
loope
or
jecxz
testl
cmpsl
fcmovu
inc
dec
push
scas
iret
push
push
jnp
inc
pushf
data16
or
dec
movsb
push
and
push
int3
xor
xchg
inc
adc
pop
and
aad
dec
cmp
movsl
jb
ds
push
xchg
jge
sub
xchg
fisubl
cmc
negb
dec
push
icebp
push
clc
cmpsl
or
cs
scas
mov
out
dec
aas
mov
lock
ljmp
push
xor
divl
hlt
sub
add
pop
or
ss
fisttpll
sub
lds
jbe
xor
stos
dec
inc
icebp
adc
add
xchg
aam
hlt
and
in
mov
insl
mov
aas
stos
xlat
cmpl
xchg
les
scas
lock
fimuls
add
and
xchg
aad
rorb
mov
mov
leave
aad
dec
mov
or
dec
lods
xor
pushf
or
pop
jnp
and
insb
aas
xor
ret
dec
outsl
add
and
dec
pop
or
xor
mov
fadds
repz
scas
push
movsl
jecxz
les
ficompl
nop
stos
fidivrl
sbb
mov
shr
inc
jecxz
push
mov
jae
adc
and
mov
mov
jno
jecxz
shll
aam
cli
pop
daa
pop
xchg
call
call
sahf
jno
mov
je
xchg
test
fstps
add
cmpb
loopne
into
popf
popf
or
or
jnp
paddusw
xchg
pop
ret
xchg
mov
sub
pop
iret
push
mov
orl
jne
add
std
add
stos
sbb
mov
and
cwtl
lock
jmp
daa
xchg
sub
cmp
dec
popa
xchg
popa
imul
jno
stc
test
outsl
cmp
xchg
pop
jb
and
sbb
xchg
repz
mov
cmpsb
daa
inc
mov
int
movsl
xchg
rclb
imul
and
jmp
and
pop
push
or
lcall
mov
mov
and
fnstcw
fsubrp
test
fisttpl
add
mov
mov
mov
iret
sub
xchg
dec
jae
ret
xor
sub
inc
mov
mov
mov
test
xor
sub
mov
jle
mov
push
and
lock
aaa
sub
ret
pmulhw
data16
shr
mov
inc
push
jg
cmp
push
jns
cmp
sahf
fxch
inc
jge
xchg
push
push
shl
dec
int
jnp
add
jne
push
adc
std
inc
or
push
hlt
aaa
loopne
idiv
leave
bound
dec
cmp
inc
sub
inc
pop
shr
push
cmc
pop
mov
mov
imul
fcompl
popf
adc
hlt
leave
repnz
dec
adc
or
in
bswap
insb
or
mov
stos
mov
mov
inc
dec
shlb
push
hlt
insb
out
idivl
lahf
outsl
xchg
iret
or
aaa
insl
sub
out
sub
pop
test
in
add
lahf
ja
mov
sbbb
mov
sub
mov
negl
push
movsl
cmp
mov
adc
cmp
repz
imul
fcmovne
add
scas
pushf
in
and
fcmovnu
loopne
ja
mov
aaa
mov
mov
inc
loop
xor
xor
pop
cmp
insb
jmp
xchg
pop
xchg
adcl
jbe
jg
dec
inc
out
les
testb
icebp
push
ss
add
cwtl
xchg
movsl
loop
cltd
adc
push
pop
ficoms
inc
imul
push
aad
out
push
cmp
cmp
push
dec
xor
decl
and
cmc
adcb
sbb
arpl
in
lret
je
cmp
inc
mov
pop
jns
and
js
fs
hlt
inc
fcomps
sbb
ret
sbbl
jb
stos
insl
lods
adc
shll
aas
ret
dec
pop
xlat
addl
fldcw
rclb
out
jmp
shll
ds
bound
inc
clc
movsl
cmpsl
jg
mov
mov
repnz
adc
orl
hlt
insl
or
cmpsl
mov
or
push
dec
add
add
adc
and
bound
outsb
xchg
jmp
icebp
mov
mov
fdivrp
pop
lret
aad
bound
or
adc
ffree
xchg
and
cltd
push
mov
adc
lock
sbb
lret
cmpsl
pop
mov
pop
aas
fwait
jp
adcl
enter
inc
movsl
pop
add
mov
imul
popa
xchg
lea
std
f2xm1
adc
fldt
enter
loopne,pt
push
push
or
dec
fldcw
sbb
jae
mov
mov
xchg
add
sub
pop
mov
inc
dec
sub
popa
xor
pusha
xchg
xchg
sub
jmp
push
sub
push
aas
cltd
sbb
fxch
mov
inc
sti
inc
aas
cmp
cltd
or
xchg
ret
pushf
mov
jmp
jmp
push
pop
insb
test
repz
dec
out
test
cmpsl
jmp
sbb
or
negb
jmp
sub
push
int
jnp
fwait
cmp
jnp
mov
ds
jl
mov
sbb
add
cmp
mov
cmp
jle
mov
xchg
dec
push
mov
and
adc
mov
addr16
jmp
cltd
orb
dec
movsb
adc
inc
lret
push
inc
or
lods
cmpsl
sarl
sbb
outsb
lds
add
pop
cmp
jecxz
or
push
xor
test
popa
sbb
xchg
pop
adc
mov
out
sbb
dec
mov
cwtl
test
and
jle
data16
mov
out
or
mov
jae
sub
shll
sbb
loopne
inc
mulb
mov
sti
jmp
mov
fadds
cltd
bound
fsubr
pop
inc
ss
cmp
dec
add
adc
mov
push
xchg
xchg
orb
and
xchg
pop
xor
jp
jg
std
movsl
imul
je
xor
shr
lea
xchg
out
loopne
or
aaa
fwait
ljmp
sbb
inc
pop
dec
cmp
lods
sbb
jns
lods
pusha
rcrl
xchg
adc
fldenv
into
mov
cmpsb
sub
sbb
mov
jl
stos
mov
push
and
aam
repnz
push
ret
dec
out
inc
sbb
shlb
je
jmp
outsl
jl
sbb
cmpsb
sbb
dec
lcall
pop
je
mov
xor
sub
aad
aam
test
sbb
arpl
lock
rcrb
dec
cmpsb
fsub
iret
fidivl
daa
sti
outsb
je
cmpsb
jmp
cmp
xchg
lock
out
mov
lahf
out
mov
mov
xchg
inc
lret
pop
enter
add
cmpsl
ds
add
fiadds
add
das
adc
les
idivb
mov
insl
js
push
fdiv
lcall
jecxz
stos
sarb
aaa
sbb
mov
stos
dec
aaa
adc
ja
cltd
adc
jno
popf
int3
push
fadds
orl
aam
xor
test
mov
loopne
jge
push
jecxz
mov
loop
or
int
ljmp
or
cmp
repz
and
nop
push
xlat
pavgw
add
pushf
add
daa
jno
loope
dec
jno
or
out
jo
lods
fcomps
stos
rorb
mov
sub
add
lret
xor
xchg
insl
adc
mov
push
or
or
sbb
mov
adc
sbb
mov
fidivl
jb
xchg
cmpsl
in
lret
sbbl
fwait
stos
adc
mov
or
rclb
mov
test
fdivp
push
sti
sub
pop
lret
in
mov
ds
sbb
and
push
xchg
lods
fnstsw
dec
popa
leave
fdivr
adc
xor
add
cwtl
inc
xchg
sarb
das
sbb
testb
pop
ss
outsl
iret
test
xor
pusha
and
adc
dec
push
je
pop
sub
gs
movsb
mov
adc
pop
sub
mov
sbb
dec
xor
call
sub
xchg
mov
cmc
neg
cwtl
sub
jle
xor
in
es
out
jp
popl
mov
push
and
fistpll
mov
dec
sahf
cld
cmc
repz
lea
jns
jmp
push
aas
aaa
out
and
xchg
movsb
test
into
pop
out
daa
pop
push
out
xorb
push
call
xchg
dec
mov
out
push
sti
pop
in
inc
and
xchg
xchg
push
mov
or
popa
or
inc
xchg
outsb
cmp
popf
sar
dec
leave
into
loope
mov
mov
movsl
cmpsl
test
lahf
inc
sbb
jge
jmp
cli
iret
adcb
mov
outsb
and
daa
aad
mov
test
mov
sub
orl
mov
popa
cmpxchg
in
xchg
gs
push
pop
jmp
and
outsl
imul
cmpsl
dec
aam
and
push
icebp
fidivs
inc
sub
adc
or
mov
mov
mov
mov
xlat
mov
in
stos
je
sub
adc
mov
js
shrb
bound
dec
fistl
push
cmpsb
and
fidivl
mov
fcomi
cld
fs
lds
icebp
mov
inc
sbb
and
loop
jmp
clc
rcl
push
xor
xor
push
lea
push
fsubl
mov
popf
test
andb
enter
fstl
out
idivl
cltd
xor
mov
aam
inc
jle
outsb
insl
lea
out
add
mov
std
pop
aaa
in
rcrb
pop
and
pop
mov
xchg
arpl
fistpl
imul
cmp
fldenv
add
jo
andl
dec
dec
in
mov
aam
jo
xor
mov
xor
pop
test
dec
cwtl
in
xorb
testl
shll
mov
adc
mov
push
xor
mov
mov
cwtl
mov
shrb
cmp
xorl
dec
test
shl
xchg
push
stos
daa
add
stc
call
jno
fstpl
or
adc
pop
or
jns
ss
mov
in
jecxz
pop
sbb
dec
push
movsb
push
jo
push
pop
pop
int3
add
mov
xchg
bound
mov
inc
pop
sub
les
cmp
mov
pushf
out
mov
and
pushl
enter
lahf
inc
pusha
lcall
in
fistl
pop
popa
push
leave
enter
dec
mov
xchg
pop
and
add
cmp
shl
fistl
dec
jp
mov
stc
cs
push
mov
or
repz
push
iret
jb
outsb
adc
sub
in
fwait
sbb
out
insl
push
ja
xchg
je
aas
addl
dec
sahf
cmp
sub
addr16
mov
rol
je
rcll
pop
stos
ffree
fdivrs
adc
into
or
aad
dec
pop
xor
xchg
mov
and
add
jae
add
push
fiadds
sbb
cmp
das
leave
mov
adc
dec
insb
push
fwait
jp
ret
mov
cs
subl
fs
or
and
cmpl
les
call
mov
push
std
repnz
mov
stos
or
mov
je
fwait
push
push
out
scas
xchg
dec
xor
cli
jp
sbb
lcall
clc
mov
xchg
pop
lcall
mov
dec
dec
ljmp
xchg
push
lds
ja
push
lahf
push
mov
pop
jb
jne
xchg
xchg
jno
scas
loop
adc
jecxz
ret
ja
add
fnstenv
in
adc
adc
push
scas
repnz
jne
jle
mov
fcomps
and
aaa
sahf
push
push
and
outsl
adc
pop
sbbb
inc
pop
sub
adc
add
adc
fcomp
je
sbb
andl
decb
and
xchg
sub
loop
jbe
sub
jnp
je
xchg
add
xor
pop
xorl
enter
repz
xchg
adc
mov
aam
dec
jmp
out
xchg
push
mov
repnz
hlt
sarb
push
inc
jae
cld
or
xchg
sub
jo
pop
jne
cmpsl
jle
movsb
and
xchg
pop
shr
hlt
lahf
dec
fnstenv
jo
int
fdivrl
std
ss
pop
xchg
dec
jb
fdivrp
mov
push
leave
mov
push
mov
adc
fisubrl
ds
js
cmp
stos
dec
ret
lods
ds
fisubrl
jp
repz
and
shll
mov
and
sub
fprem
mov
inc
or
add
movsb
shl
pop
scas
sti
cmpsl
or
imul
outsb
pop
add
imul
xor
or
movb
pop
sub
or
dec
pop
in
adc
in
pop
xchg
sbb
shrl
mov
pop
cmpsl
fcomp
ja
mov
add
test
int3
imull
dec
or
push
idivb
mov
sarb
jmp
sub
xchg
call
hlt
and
add
cmp
clc
push
mov
pop
and
push
neg
fstl
dec
add
repnz
shrb
pop
xchg
out
imul
int3
xor
int3
mov
mov
and
or
pop
cmp
add
pop
dec
xor
or
push
int3
xchg
cwtl
nop
dec
add
add
jle
jbe
sahf
pusha
xchg
lcallw
xlat
bound
inc
sub
xchg
mov
scas
push
roll
fldenv
into
jle
lret
adc
lahf
cli
and
daa
cltd
mov
sub
pusha
int3
ret
sarl
int3
push
sub
stos
in
rolb
cmp
cmpsb
xlat
sbb
ficompl
insb
sbb
cli
je
or
sbb
mov
fbstp
repnz
test
enter
mov
movsb
pop
ret
cli
xor
stos
imul
out
mov
or
push
adc
push
mov
pop
mov
fbld
gs
in
jecxz
xor
je
xor
inc
adc
test
loope
push
stc
rcll
pop
adcl
fbld
sub
inc
aaa
or
sub
cmp
xor
lcall
orb
jp
sbb
out
faddl
imul
xlat
xor
les
sbb
ljmp
jg
subb
xchg
ljmp
dec
sbb
pop
into
pop
pop
std
adc
jno
mov
xchg
in
lods
push
jns
jle
sub
push
cld
stos
mov
lahf
or
ret
add
sbb
pop
not
mov
xor
mov
cltd
idivb
mov
into
add
xor
jle
and
adc
cmp
rorb
and
cmc
das
xchg
loopne
repnz
cmp
dec
push
mov
adc
xor
enter
sub
lds
into
cmp
enter
lret
inc
or
pop
pushf
sbb
call
fld
stos
test
cltd
in
aaa
mov
clc
dec
jp
mov
or
adc
scas
push
ljmp
sbb
sub
stos
imul
push
mov
test
adc
and
pop
test
cmc
dec
adc
xor
xchg
sub
and
cmp
pop
xchg
or
stc
jmp
cmp
imul
jmp
lods
shlb
popf
outsb
imul
iret
pop
xor
cs
leave
pop
xchg
push
mov
jl
nop
dec
mov
xchg
push
pushf
add
outsb
xchg
ds
mov
jnp
mov
xchg
nop
test
lret
sahf
movups
cmp
mov
or
xchg
add
pop
or
xchg
inc
sub
mov
popa
xor
in
mov
mov
xor
dec
mov
add
mov
pop
xchg
aas
xor
cmp
negb
push
push
lods
iret
mov
push
leave
shlb
aam
ds
mov
dec
xor
loope
cltd
mov
mov
or
and
and
mov
push
jbe
popa
xchg
adc
sub
and
xor
mov
daa
xchg
pop
stc
push
cmp
push
insb
test
call
xor
lcall
pop
fsubrl
cmp
popa
mov
jle
cmpl
xor
pop
inc
fs
push
lret
scas
frstor
sbbb
loope
lea
sbb
icebp
push
xchg
pop
adc
xor
push
clc
fs
push
nop
jb
xor
nop
test
in
pop
jno
xor
push
cs
mov
sahf
clc
jae
ljmp
sbb
icebp
sbb
sbb
push
in
insb
imul
negl
jbe
in
mov
stos
fsub
mov
xor
imul
movsl
mov
push
add
lods
insb
cmp
sub
mov
lock
lahf
sti
mov
shrb
aas
pop
mov
enter
pop
mov
adc
loopne
movb
rcrb
mov
pop
push
daa
sub
mov
xor
sbb
dec
cmpsl
or
cli
testb
mov
jnp,pt
push
jge
cmpsl
push
cs
pop
js
mov
fcom
out
insl
push
push
imul
enter
lods
push
cmp
pop
paddusb
add
clc
pop
aad
fstps
mov
fwait
lock
popf
jb
pop
sub
jl
les
mov
sbb
adc
iret
cmc
and
fsubrl
xor
jbe
dec
mov
outsl
sbb
lahf
dec
jg
xor
mov
and
push
push
enter
jge
or
pop
mov
pop
sub
imul
sti
adc
stos
jmp
mov
addb
popf
cwtl
stos
push
or
mov
ret
sub
leave
outsl
add
push
or
dec
push
sub
fsubp
aam
mov
div
mov
dec
push
hlt
push
mov
out
pop
fnstcw
jg
sbb
dec
imul
xchg
ja
faddl
mov
sbb
sub
cli
add
lret
stc
inc
cli
shlb
dec
dec
mov
mov
popa
and
mov
mov
push
jnp
and
mov
fists
movsl
inc
add
ret
cmpsb
add
gs
xor
nop
mov
fstpl
and
cs
adc
outsb
int
adc
cltd
outsb
pusha
xchg
iret
jae
outsb
and
test
add
gs
daa
mov
call
arpl
test
inc
imul
mov
icebp
xor
mov
jg
stos
das
mov
mov
push
push
or
incb
cltd
mov
stc
lret
sub
es
dec
rcl
pop
jbe
repnz
shll
lret
push
pop
xchg
sub
iret
les
insl
loop
and
add
stc
xchg
and
mov
aad
sbb
stos
fs
lods
push
lea
loop
inc
aaa
jns
push
fcoms
call
fwait
or
insl
jbe
leave
jo
scas
and
lret
jmp
aam
sbbl
mov
push
jne
jge
pop
dec
lcall
mov
fidivs
pop
icebp
and
push
inc
and
cmc
cli
fbld
or
out
mov
js
ja
leave
fwait
stos
add
addr16
test
loope
or
es
aas
lahf
xor
roll
push
push
incb
cmc
mov
cmp
lods
subb
out
ss
cmp
inc
sub
ror
cmp
sub
pushaw
sub
mov
fdivs
cmpsb
out
pop
jle
repz
cwtl
xor
popf
mov
mov
mov
out
lret
cmpsl
loop
std
mov
xchg
cmpsl
adc
enter
rol
sub
pop
jo
xor
cmpsl
out
sub
xchg
scas
sbb
and
dec
mov
pop
arpl
mov
roll
pop
outsb
sbb
insl
nop
push
and
add
jnp
xor
or
hlt
cwtl
cmp
and
insb
sub
pusha
jmp
lcall
arpl
lret
pop
adc
insl
cmc
testl
call
test
pop
cmpsb
push
pushf
cmpsl
out
shr
popa
leave
and
and
add
cli
pop
inc
outsb
out
and
push
mov
popa
loope
jle
sub
repz
and
pusha
push
insb
ds
inc
xor
xchg
xchg
xor
test
loopne
movsl
imul
mov
add
in
mov
xchg
shlb
xor
xor
fcomps
jae
ja
bnd
fwait
mov
shrb
mov
test
adc
xchg
orl
loopne
push
mov
pushf
xor
push
shll
fbld
xor
cmovnp
je
jge
test
mov
mov
repz
inc
and
test
jl
and
test
mov
sub
inc
pop
jnp
aam
add
mov
loopne
push
and
mov
pop
int
fisttpll
out
mov
push
fwait
jns
in
dec
pusha
loope
pop
and
stos
push
sbb
in
int
cwtl
incl
adc
sbb
mov
les
mov
cmc
in
push
push
pop
or
fldcw
arpl
sub
fdivrl
xor
adc
andl
or
or
leave
jge
pop
add
ret
iret
in
xchg
out
xchg
mov
call
fnsave
xor
xor
stos
pop
add
arpl
dec
adc
sbb
clc
movsb
fists
into
mov
cmp
dec
repnz
pop
cli
shll
xor
inc
in
adcl
outsl
lahf
cs
in
adc
rcll
sub
push
mov
ret
and
iret
sbbb
push
inc
aad
push
lods
xor
or
sub
xorb
out
xor
addr16
cmp
cmpsb
mov
lods
les
ds
stos
dec
pop
arpl
nopl
or
jb
sub
loope
call
std
pop
mov
cli
sub
loopne
je
xchg
dec
flds
dec
add
add
mov
and
ret
and
jb
jnp
insl
imulb
scas
insb
shlb
cmp
xchg
adc
push
pop
dec
mov
and
xor
sbb
loope
cwtl
and
adc
push
lds
pop
pop
gs
mov
mov
dec
and
int
in
sub
inc
adc
push
or
xor
mov
pushf
lods
pop
adc
lret
adcb
fucomip
jp
sub
icebp
lret
test
or
cmp
xor
mov
inc
rorb
cmp
xchg
imul
aam
pop
sbb
insb
xor
sbb
mov
jo
jns
push
ds
or
xchg
shrl
sub
cmp
lret
fcompl
popf
mov
sub
fldt
test
inc
and
aaa
jb,pt
cmc
push
mov
inc
clc
mov
jmp
mov
xchg
xchg
cmpsb
cmpsl
mov
mov
sbb
fisttps
jge
mov
lods
je
push
outsl
adc
fisttpll
hlt
inc
add
test
jmp
loop
jo
lea
ljmp
jne
add
sbb
sahf
movsl
js
stos
movsb
dec
lcall
push
adc
data16
aad
mov
daa
xchg
mov
fnstenv
mov
shl
adc
in
xor
in
dec
scas
mov
adc
add
sub
or
jae
cltd
out
dec
jecxz
fadds
sub
xor
xlat
push
shrl
fisubl
roll
lods
orl
daa
int
push
into
lahf
fidivrl
dec
xchg
add
xor
xorl
push
clc
pop
mov
andl
push
addr16
lcall
cmpsl
xchg
insl
jmp
sub
mov
jo
xchg
mov
movsb
jns
shl
push
lods
jge
out
test
inc
daa
addr16
xchg
das
sbb
out
cmpb
mov
mov
mov
js
jmp
add
mov
jb
aaa
or
inc
xchg
sti
je
inc
fwait
andb
cmpsl
test
adc
xlat
sub
dec
xor
ljmp
sub
data16
inc
ja
add
arpl
fistpl
or
cli
xlat
adc
aam
daa
jno
inc
nop
cli
or
and
sub
enter
fbstp
inc
jo
inc
mov
mov
test
aas
pop
xchg
mov
in
ret
inc
xchg
cld
push
ret
out
lret
and
les
jle
js
pop
sub
pop
mov
add
adc
jmp
inc
sub
adc
jp
jno
dec
mov
jp
rol
arpl
fwait
cmp
mov
inc
fimuls
xlat
int
lcall
mov
jno
and
das
pushf
jecxz
or
pop
out
pop
sub
jne
stos
or
jg
das
mov
jg
jmp
jecxz
dec
pop
cmp
bound
daa
ret
pop
mov
sub
xor
xchg
sub
int3
stc
popf
push
lea
incl
cwtl
cmpsb
pusha
jo
nop
mov
shlb
pushf
inc
bound
push
add
std
xchg
cmp
cmp
and
xchg
imul
clc
lahf
in
push
and
lock
outsb
jae
lea
jmp
cmp
xor
pop
gs
popf
sahf
xchg
fnstsw
ljmp
test
and
cwtl
loopne
mov
mov
and
pop
aam
mov
mov
pusha
push
adc
add
lea
push
xor
loopne
cld
mov
loop
gs
icebp
stos
jge
or
adc
shlb
cmc
xchg
stc
push
mov
sar
mov
lea
int3
mov
notb
iret
adc
add
and
mov
fcmovbe
adc
mov
cmp
mov
xchg
pop
insl
xchg
stc
imul
push
repz
popa
imul
pushf
lret
sbb
mov
pushf
sbb
xchg
xor
mov
mov
xor
arpl
mov
idivl
repnz
xchg
pop
push
iret
xchg
fldl
fnsave
pushf
push
mov
shll
repnz
sub
lock
jno
stos
mov
popf
lret
mov
cmp
mov
add
iret
faddl
test
dec
jo
xchg
int3
test
mov
sub
popf
jge
fwait
loopne
dec
cmpsl
cmpb
pop
sbb
testl
jecxz
cld
mov
jle
addr16
clc
mov
sub
mov
andl
das
mov
and
add
xor
cmp
jge
xor
cli
push
jb
push
int
in
data16
xchg
in
sbb
loop
insb
out
ret
dec
stc
dec
sbb
into
and
and
sub
ds
xchg
push
std
jmp
mov
fistps
or
cltd
mov
pushf
jnp
scas
mov
cmp
inc
xor
cmp
out
fmulp
iret
lods
jl
fldenv
and
sub
pop
je
aam
cld
jb
mov
or
pop
cmp
gs
mov
cmp
push
push
cwtl
movsl
or
out
sub
pop
push
fsubs
lcall
inc
sbb
cmp
xlat
push
push
gs
or
clc
inc
fwait
ret
cmpsb
push
int
insb
movsb
in
cmp
decb
and
inc
aad
gs
xorl
push
imul
stos
mov
ret
rclb
jg
gs
push
mov
sub
ror
mov
addb
push
jno
insl
into
lds
mov
sbb
mov
xchg
or
mov
das
dec
popf
movsb
jle
lea
sarb
iret
movb
mov
push
xor
scas
fiaddl
test
gs
imul
ss
push
xchg
sti
out
mov
in
mov
mov
jne
cwtl
div
jae
adc
shlb
fnsave
repz
and
mov
dec
cs
dec
push
and
popf
push
mov
pushw
sbb
mov
cli
push
aam
lds
pop
cmp
in
mov
jnp
mov
adc
sbb
cmp
pop
push
out
pusha
jmp
xlat
aad
jmp
lock
mov
pop
add
jbe
pop
add
adc
notl
rclb
inc
xor
sbb
aas
cmp
mov
fnsave
mov
adc
addr16
pop
jmp
sbb
into
stos
leave
xlat
mov
sub
mov
dec
hlt
aas
xor
aam
xchg
ja
daa
stos
dec
call
cwtl
push
ret
mov
or
popf
ja
mov
xlat
jle
pop
adc
or
rcr
add
arpl
dec
inc
ja
inc
push
stos
sub
lds
sbbl
fs
clc
bound
mov
ljmp
push
in
loope
dec
cmpsl
xor
cmp
add
nopl
adc
mov
xchg
xchg
lods
lds
imull
sub
pop
pop
and
ffreep
mov
xchg
pushf
xor
scas
fisubl
sub
rolb
cs
push
icebp
fbstp
cmp
xor
lahf
out
ja
dec
shll
adc
fnsave
xchg
xlat
xchg
lods
data16
jo
btc
push
pop
cmp
out
addr16
push
jmp
imul
jns
xor
stc
xchg
fs
mov
clc
addr16
ljmp
les
or
jl
fadd
std
icebp
dec
ficompl
cmp
jno
out
xor
xor
daa
mov
pop
dec
pop
xchg
mov
mov
add
pop
fnsave
sub
xor
and
inc
lahf
in
int
fdiv
call
jnp
mov
mov
mov
inc
ja
sub
cwtl
scas
sbb
pop
sub
adc
mov
int
in
das
notb
mov
mov
lods
repnz
xchg
es
xchg
int3
clc
add
cmpsl
mov
fs
in
decb
add
lock
sub
int
pop
scas
arpl
leave
pop
cmp
mov
daa
inc
adc
sub
testl
addb
mov
cld
daa
scas
xchg
imul
mov
push
fsubrs
mov
cmp
sbb
inc
stos
sub
xchg
mov
xchg
xlat
push
stc
inc
cli
aam
mov
adc
js
xor
push
pushf
fldenv
or
jns
lea
adc
jbe
or
cmp
mov
pushf
aad
xchg
pop
loop
sbb
jns
ret
scas
cli
lret
and
jbe
pusha
mov
popl
mov
jp
scas
dec
sahf
jg
cmp
sub
mov
vrcpss
inc
jnp
movsl
std
not
inc
xchg
fistpl
jo
fmull
dec
lret
mov
cmpsb
jmp
imull
into
rcrb
sub
sub
mov
push
add
loope
jns
add
pop
test
loopne
adcb
pop
pop
dec
es
fyl2xp1
in
dec
pop
adc
fisttpll
mov
imul
ljmp
fwait
out
push
mov
mov
inc
loope
and
movsb
cltd
das
test
cmp
cmp
pop
adc
popa
fbstp
mov
jmp
mov
inc
vaddsubps
xchg
lret
out
dec
cltd
mov
or
cwtl
xor
nop
adc
dec
mov
test
mov
xchg
pop
sti
lahf
push
negb
fisubrs
push
adc
loop
mov
jecxz
out
xchg
xchg
in
loope
int3
mov
in
cwtl
xor
pop
loopne
lock
imul
lcall
xchg
hlt
push
addl
outsl
mov
das
fcomip
fisttpll
out
inc
and
jp
jmp
fildll
xchg
xor
pusha
in
adc
lcall
cmpsl
mov
into
repnz
push
pop
in
test
and
add
pushl
jb
cli
lods
loope
ret
add
cmpb
mov
rorl
mov
clc
shlb
pop
pop
pop
jb
xchg
sahf
test
lcall
push
imul
icebp
ficomps
in
es
addr16
das
in
pop
or
ror
sahf
popa
pop
data16
cld
ljmp
ret
enter
cli
push
lds
sub
pop
mov
push
hlt
js
mov
inc
mov
popf
rorb
pop
andb
jo
clc
lahf
pop
nop
imul
enter
cmp
movsl
imul
pop
dec
sbb
popf
insb
xor
jmp
cwtl
or
aas
inc
pop
pusha
fistps
shl
adc
xlat
sub
xor
xor
jmp
mov
ss
adc
push
xchg
mov
pop
jmp
enter
mov
jno
jg
cwtl
das
or
pop
cld
mov
mov
dec
fisttps
cmp
loopne
mov
push
adc
insl
xchg
cwtl
dec
mov
push
imul
in
push
call
or
sbb
aas
fdivs
xor
lret
out
out
mov
fwait
sub
iret
jge
inc
aam
cld
cmp
cmc
push
push
push
mov
or
lods
decb
fdivr
daa
dec
adc
push
mov
fs
jb
cmp
inc
dec
popa
lock
aad
mov
pop
outsl
push
cmp
xor
xor
jg
xchg
cmpb
movsb
mov
dec
shlb
jae
daa
lret
out
push
sub
mov
mov
add
or
mov
scas
icebp
cli
movsl
mov
fcomps
mov
adc
lahf
icebp
call
sub
jno
sar
mov
insl
jno
gs
ljmp
mov
in
fxch
add
fisubrl
cmp
jge
sbb
inc
daa
dec
jae
lcall
xchg
xchg
loope
xchg
mov
jnp
pop
inc
subl
and
cli
jbe
jecxz
lret
pop
mov
and
mov
or
ret
mov
mov
lcall
xrelease
lret
int
mov
push
mov
fidivrs
pop
es
fwait
dec
jns
je
and
adc
jl
sub
adc
mov
adc
jno
mov
mov
fnstsw
mov
cmpb
lahf
std
imul
outsl
xchg
jle
dec
inc
jmp
scas
sahf
sbb
mov
xor
loope
mov
mov
adc
cmc
mov
push
xlat
pop
je
pop
sbb
fwait
leave
imull
aad
clc
outsb
and
push
hlt
iret
int3
gs
imul
cld
push
xchg
mov
push
mov
mov
sahf
add
mov
test
stos
rep
fistpll
popa
push
add
or
aaa
and
adc
mov
cmp
arpl
mov
sbb
or
sti
mov
lods
ror
push
push
sub
sahf
fwait
jbe
popa
repz
call
push
adc
shrb
sbb
das
test
sbb
call
add
pop
xchg
and
xchg
in
jns
sti
enter
cwtl
pusha
ds
mov
js
sbb
jne
fsubs
jmp
in
nop
aas
and
int
dec
xor
cmp
push
fs
pop
mov
subl
sub
fmulp
call
dec
test
push
xor
ljmp
shlb
stos
lock
negb
fdivrs
and
push
gs
outsb
sub
and
arpl
jecxz
in
jl
xor
mov
popa
inc
cwtl
mov
ds
or
imul
cltd
cmp
cmpsb
and
arpl
add
mov
fidivrl
fsts
rcrl
cld
xchg
xchg
std
cli
cli
call
xchg
cltd
mov
icebp
fidivl
out
xchg
xor
or
add
sub
jae
je
push
jmp
dec
mov
mov
mov
jo
dec
jg
or
push
lods
pop
push
cmp
and
pop
int
cmc
insl
inc
pop
int
mov
test
push
das
jb
test
cmpsl
hlt
mov
sbb
orb
fidivl
inc
xor
mov
dec
ficoms
sub
pop
insl
loope
inc
mov
mov
sub
sub
popa
scas
and
in
sub
jecxz
add
aad
xchg
sub
mov
add
repz
jo
fxch
imull
loope
sub
inc
fistpl
ret
subl
iret
pop
aaa
pop
inc
dec
jb
mov
fisubl
or
push
dec
je
out
sti
dec
inc
sub
xchg
adc
enter
and
idivb
addl
lret
fdivs
loopne
jne
repnz
ret
lret
pop
sbbl
add
daa
scas
mov
xor
mov
xor
andl
imul
pop
insl
in
cmp
dec
adc
addr16
jp
cmp
data16
jmp
ficoms
cmp
insl
popa
std
jp
stos
xor
stos
inc
test
mov
xchg
dec
mov
nop
scas
push
cmp
mov
cmpsl
ds
cwtl
mov
jle
pop
icebp
mov
sbb
fimuls
fiaddl
and
shl
imul
cld
das
gs
aam
push
push
mov
in
jbe
xadd
xchg
xchg
sti
orb
push
lahf
sbb
in
dec
pusha
jae
cs
jmp
repnz
jno
pushl
sub
mov
mov
les
bound
mov
xlat
xor
mov
mov
mov
fimuls
sbb
icebp
pop
xor
or
cmp
stc
mov
push
mov
outsb
jb
aas
adcl
leave
cmp
mov
rcll
adc
lds
roll
sub
mov
cmpsl
pop
adc
dec
sti
jno
or
mov
add
in
jmp
daa
mov
scas
pop
in
sbb
ljmp
ja
movsl
xor
test
sub
dec
and
fists
jl
jb
push
xor
inc
mov
icebp
add
add
mov
sub
cwtl
repz
in
push
or
jle
fists
jle
push
push
xlat
jl
loop
mov
mov
inc
mov
xchg
lods
dec
stc
sub
push
sbb
and
dec
push
add
ud2
dec
and
fisttpll
js
icebp
lods
inc
add
rcr
scas
fwait
dec
pop
aaa
cmp
push
dec
sub
sub
mov
jae
ficoml
and
test
push
ljmp
mov
push
aaa
xchg
fsqrt
sbb
lcall
popa
xchg
out
xor
or
lea
and
pop
push
adc
adc
xchg
pop
add
insl
in
mov
inc
fs
fstpl
insb
fcoms
out
in
lds
iret
stos
mov
xor
fcomps
jb
mov
fdivrl
jecxz
cltd
adc
ucomiss
xchg
enter
pop
push
cmc
rorl
jnp
or
mov
icebp
outsb
jno
fildl
xorb
in
xchg
and
pop
or
mov
gs
lods
mov
repz
xchg
iret
jnp
xchg
jp
sub
fwait
mov
add
xchg
mov
jno
push
fisubs
sub
inc
push
push
mov
mov
dec
push
push
shrb
pop
inc
pop
jae
or
lret
cmpsb
add
pop
pop
in
xor
push
sub
mov
lods
cwtl
mov
iret
in
mov
mov
push
inc
pop
or
sbb
jo
std
mov
lock
cli
pop
data16
pop
sub
rorl
test
jo
rcl
mov
out
scas
movsl
push
sbbl
push
pop
orl
fldl
cmp
xor
call
xchg
xor
nop
mov
mov
fildll
scas
fldcw
cmp
shl
adcl
stc
mov
cmc
lock
enter
mov
icebp
sar
cmpsb
cmp
pop
or
mov
dec
cwtl
out
pop
in
mov
inc
pop
mov
outsl
in
sub
out
in
jnp
imul
sbb
ficoms
lret
push
ljmp
pop
popa
sub
aam
test
cld
les
add
repnz
pop
lea
mov
xor
jnp
or
aad
mov
ljmp
sbb
sarl
jnp
fsubrl
int
adc
stos
imul
out
sub
inc
sti
and
xchg
pop
jp
insb
adc
xchg
fidivrs
cmp
and
popa
loop
xchg
mov
enter
inc
jo
aam
insl
shlb
pop
lds
xor
push
sub
daa
sbb
add
mov
lea
pop
aam
mov
push
jbe
ds
add
in
mov
mov
sbb
push
icebp
dec
fisubrs
ss
sbb
mov
cli
insb
mov
pop
mov
fstps
fs
jle
add
loope
ret
mov
push
pop
inc
push
xchg
fists
ja
jl
fwait
mov
repnz
lahf
arpl
arpl
cmpsl
inc
stos
cltd
xchg
lods
into
shr
rcll
rolb
mov
adc
into
cld
scas
nop
sub
jp
xor
mov
or
jno
mov
xchg
into
inc
push
call
inc
jno
inc
outsb
leave
inc
sbb
pop
pop
dec
das
mov
mov
ss
mov
pop
push
cmp
cmp
ds
jmp
cmp
lds
nop
outsl
mov
rol
and
nop
arpl
mov
shr
dec
sti
push
lcall
leave
xchg
iret
rolb
clc
lods
pop
jg
or
and
mov
adc
mov
cmp
xchg
rcrb
dec
pop
pop
mov
mov
loop
fld
loop
inc
shl
pushf
clc
mov
call
jae
mov
mov
jle
outsl
xchg
push
dec
dec
jb
jne
shll
rorl
std
aaa
in
jbe
sbb
nop
ret
dec
add
mov
mov
jp
das
pop
mov
add
lahf
push
sub
notb
jae
jecxz
clc
stc
mov
adc
pusha
mov
dec
clc
or
hlt
xchg
dec
xchg
cwtl
jbe
sub
pop
or
lods
popa
adc
lea
push
cwtl
inc
in
jns
fs
ret
inc
subl
mov
xchg
je
jp
ret
and
xchg
iret
jno
xchg
insb
filds
push
cmp
test
imul
das
sbb
fnstenv
loope
es
aaa
pop
iret
cltd
cld
adc
sub
xchg
mov
scas
dec
cltd
xchg
dec
cmp
ja
movsb
lret
mov
ljmp
lcall
fwait
pop
jmp
out
loop
test
das
pop
xor
or
rclb
arpl
ret
jmp
fldt
call
ret
jb
mov
scas
xchg
orb
bound
sub
mov
cmp
repnz
fwait
std
jb
cmpsb
mov
test
lods
mov
fmulp
cwtl
pop
out
dec
loope
and
std
add
jbe
jb
out
cmpsb
bound
in
mov
cmp
sti
jecxz
rcrb
faddl
cmp
dec
insb
mov
pop
pop
loope
push
or
inc
std
fdivs
imulb
outsl
adc
pop
lcall
xchg
sub
adc
sbb
test
int3
insl
jle
js
lahf
push
pop
lahf
mov
sbb
repnz
pop
inc
mov
adc
iret
test
or
jbe
xchg
nop
movsb
and
cmp
insl
xchg
in
push
push
cmp
lods
xchg
xchg
jecxz
sti
lods
insl
arpl
push
jl
mov
addr16
fldt
jno
ficomps
add
mov
lds
pusha
sub
jne
lcall
push
out
add
into
push
sbb
out
push
jae
iret
mov
pop
fdivl
sbb
dec
sbb
xchg
stos
dec
pop
jle
xchg
adc
les
std
pop
lds
push
xor
inc
insb
xchg
les
int3
adc
pop
mov
lret
and
mov
jg
jne
sbb
cmp
inc
sbb
popf
cwtl
fists
adc
xchg
sbb
ss
mov
adc
inc
mov
rol
sub
sti
mov
out
in
xchg
push
test
lock
fidivrs
leave
aaa
sub
mov
ja
sarb
jno
movsl
ret
xorl
cld
stos
popl
insl
inc
cmp
mov
mov
or
push
xor
fldl
pusha
lret
jo
lock
mov
fldl
push
mov
add
les
loopne
adc
add
sahf
mov
jg
and
inc
jnp
imul
lods
loope
and
arpl
je
xchg
shrl
add
mov
test
es
mov
sbb
shll
jg
pop
jb
test
xor
lahf
mov
and
lret
cli
ret
mov
test
or
jle
stc
in
xor
add
xor
mov
jo
pop
rcl
fs
cmp
push
gs
out
test
xor
jl
inc
pop
xor
push
pop
call
dec
dec
cli
push
cmpsl
pop
cwtl
cli
arpl
push
in
jg
cmp
stc
in
cli
jb
outsb
mov
fbld
movsl
xchg
pop
or
mov
je
add
xchg
out
mov
mov
and
dec
fcmove
arpl
xor
mov
sti
xchg
fmull
lret
cmc
push
bound
push
inc
ficompl
test
popaw
add
hlt
adc
loopne
jmp
daa
mov
ret
xor
popfw
stos
insl
inc
inc
enter
mov
cli
sbb
subb
dec
mov
and
and
loop
lcall
lock
jp
inc
stos
inc
outsl
cmp
sahf
lock
cmp
rclb
mov
and
lret
testl
xchg
cltd
jmp
mov
sub
jp
mov
sbb
adc
or
js
cli
push
push
push
add
fsubrl
je
xchg
divl
stos
mov
gs
into
mov
fnstenv
push
mov
test
ds
lahf
movsl
mov
int3
push
mov
cmp
push
cmc
inc
rorl
and
xor
je
mov
adc
popa
fiaddl
outsb
or
inc
push
jns
push
popa
aad
ror
test
jbe
add
and
and
pop
mov
daa
lods
pop
js
aaa
cmc
dec
lcall
loopne
push
andb
addr16
les
out
jmp
pop
dec
stos
mov
insb
mov
sbb
xchg
push
stos
scas
dec
imul
xor
cmpsb
loopne
xor
ss
data16
cmp
push
popf
insb
jp
jmp
clc
cltd
xchg
sahf
mov
adc
jle
or
aad
or
lret
pop
roll
sub
lods
sub
jge
push
mov
shlb
loop
stc
es
loope
cmp
loope
les
cli
jecxz
xchg
jge,pt
xchg
jbe
je
lds
xchg
sar
and
lods
into
and
mov
pop
sbb
pusha
jno
in
pop
sbb
popf
lcall
icebp
cmp
into
ror
pop
dec
dec
or
and
stos
sbb
mov
test
aam
jo
movsl
add
jg
je
lds
add
mov
or
cltd
cmpsb
cmp
mov
or
cli
ret
cltd
sbbl
fdivr
sbb
or
cmp
xchg
xchg
or
mov
mov
testb
adc
jae
bound
or
cli
push
ljmp
add
push
fsub
loop
pushf
sar
pop
pop
fsubrs
popf
xchg
lret
ds
mov
xchg
retw
dec
cli
mov
lret
dec
sub
inc
dec
pop
or
test
clts
ror
loop
mov
andl
lahf
and
movsl
sbbb
hlt
ret
add
xor
sbb
fsubs
mov
mov
jp
sbb
jno
imulb
and
addr16
andb
xor
xor
and
sub
mov
dec
xor
cmp
mov
ss
les
xchg
pop
nop
out
push
cmc
sbb
sub
shlb
int3
andl
out
mov
in
aaa
pop
mov
ret
in
das
mov
adc
je
mov
movsb
xchg
push
push
mov
jl
push
std
or
loope
mov
mov
popf
add
add
cmpsb
es
repz
out
pop
jmp
sbb
daa
add
pop
pop
sti
cs
rcr
xlat
jecxz
shlb
mov
ljmp
add
mov
jge
mov
jo
out
test
lea
rolb
push
and
imul
and
adc
in
xchg
out
jp
mov
sahf
call
sub
incb
lods
mov
stos
int3
nop
mov
test
scas
pop
inc
sbb
lock
mov
inc
bound
js
adc
cmp
bound
gs
and
push
sub
imul
push
clc
xor
or
std
cmp
mov
shrl
add
mov
fs
xchg
mov
outsb
cmp
fistpl
mov
jo
iret
and
shld
mov
out
bound
push
in
pop
adc
rcll
inc
popa
fisttpl
push
cmp
cmpsb
imul
xor
lds
negb
cmpsb
insb
adc
aaa
pop
dec
jecxz
inc
mov
cmp
cmpsb
and
das
mov
addl
arpl
test
adc
jns
inc
cmp
shrl
cwtl
inc
imul
cmp
inc
outsl
iret
mov
xlat
jmp
cmpsl
ja
sub
dec
popf
scas
sub
lods
dec
movsl
imul
xor
rcll
cmp
cmpsb
add
inc
stos
scas
loop
popa
incb
cmp
imul
mov
and
add
ja
or
stos
mov
mov
xchg
movsb
pop
cmc
push
mov
or
or
push
testb
or
pop
mov
pop
xor
call
inc
jne
clc
sbb
fwait
cmpsb
stos
xor
jle
pshufw
ja
cltd
jne
pop
daa
mov
pop
jne
out
inc
sub
inc
es
pusha
mov
mov
mov
data16
int
push
lret
add
je
fcmovbe
jbe
test
psubq
lahf
jg
fsubrs
sub
cmpsb
add
adc
mov
pop
jbe
test
sub
hlt
dec
push
mov
jle
xchg
push
cs
pop
rcll
and
out
mov
mov
cli
pop
mov
mov
sub
push
in
dec
mov
test
orb
pusha
mov
add
cmc
jb
adc
pop
dec
lcall
push
out
sub
and
and
pop
push
pop
cld
cmp
fwait
dec
mov
leave
jmp
and
pop
inc
sbb
or
mov
fcomp
sbb
or
xor
in
sbb
lods
lea
pop
cmpsb
push
or
jge
jbe
std
sbb
sub
inc
add
cmp
sbb
and
test
jmp
inc
imul
xor
jmp
and
idivl
arpl
mov
adcb
push
lahf
movsb
sub
and
shrl
loop
aad
fwait
in
shlb
jg
jo
pcmpgtb
mov
mov
sub
sbb
cmp
push
mov
scas
data16
push
and
dec
sarl
mov
imul
ljmp
pop
xchg
mov
adc
jg
hlt
jo
fwait
aas
mov
jle
out
fwait
sarb
arpl
mov
mov
and
outsl
push
mov
push
xlat
mov
cmp
push
mov
icebp
addb
loopne
push
out
cmp
jne
add
pop
mov
dec
cmc
sub
add
into
js
push
lret
cmp
push
mov
mov
stos
pop
iret
mov
inc
jne
or
daa
fstp
cs
enter
sbb
roll
pop
push
or
xlat
insb
xchg
push
sti
daa
rol
adc
stos
and
inc
dec
daa
and
dec
sti
jbe
popf
sub
dec
dec
loop
fnstsw
ror
jge
push
cmp
xchg
cmpsl
xchg
pusha
lahf
fildll
pop
data16
mov
inc
clc
lret
not
fsubrp
cmp
loop
daa
jae
adc
add
xchg
sub
dec
cmp
loop
inc
dec
add
xchg
pop
jbe
aaa
out
and
cli
cli
pushf
cmp
mov
in
lcall
push
dec
inc
add
inc
fwait
and
jo
sub
mov
cmpl
mov
addr16
push
and
and
pop
aam
popl
std
test
jg
jne
mov
mov
hlt
popf
mov
xchg
in
add
aas
ja
gs
outsb
aas
jbe
sbb
insl
mov
in
push
or
inc
dec
mov
or
xor
inc
jge
and
sub
pop
ss
fistps
rcrl
mov
dec
xchg
push
idivb
sub
in
mov
std
mov
mov
mov
int
adc
or
aas
mov
loop
test
jecxz
inc
icebp
hlt
jne
arpl
das
mov
dec
adc
int
push
add
addb
push
aaa
jne
sub
add
test
sarb
cwtl
sbb
sub
add
xchg
inc
cvtps2pd
dec
lret
fsub
sub
pop
add
sbb
test
xchg
adc
mov
lods
mov
or
lods
xlat
int
cmp
mov
sahf
jno
sub
xor
lcall
sub
jns
or
mov
sti
mov
push
sub
jg
sub
and
push
and
stos
dec
or
pop
ret
inc
mov
dec
cmp
mov
push
in
xchg
test
xor
fwait
mov
imul
test
lea
loope
pop
test
into
pop
cltd
mov
scas
jb
mov
test
les
dec
cmp
sti
je
mov
jl
inc
lahf
dec
and
adc
mov
push
aam
inc
and
adc
push
cmpl
jo
cwtl
pop
xlat
add
xchg
pushf
xchg
push
push
mov
fsts
inc
push
push
and
pop
xchg
cmpsl
jb
sbb
mov
jmp
push
mov
sbb
mov
add
pushf
or
inc
mov
cmp
popa
or
xor
das
push
xchg
cmpsb
idiv
jg
loop
mov
xchg
dec
add
clc
xlat
and
filds
inc
push
outsb
imul
mov
mov
test
mov
into
testb
aaa
lret
push
sarb
jl
out
ds
inc
mov
cmpsl
cmc
insl
xorb
das
or
fisubl
cmp
pop
cs
rcr
loop
clc
jno
sar
ljmp
inc
cli
rcll
mov
fdivrl
aam
sti
dec
push
inc
lahf
mov
arpl
cltd
enter
sbb
adc
mov
stos
aas
pop
lods
orl
inc
jnp
and
push
jmp
add
aad
add
cmpsb
push
arpl
and
jmp
mov
inc
dec
in
imul
cmp
mov
ja
fcoml
cwtl
cld
mov
or
out
sub
or
aam
shl
push
mov
cwtl
mov
lock
lods
mov
stos
mov
loope
push
xor
subl
or
mov
popf
xchg
mov
fstp
push
loop
inc
loop
es
and
add
inc
pop
aas
jecxz
add
cmp
movsl
sbb
add
and
sub
mov
movsl
sub
cmc
mov
pusha
sbb
std
xor
call
jb
pop
iret
out
push
dec
push
jle
ret
and
rolb
jl
and
and
call
and
xchg
xchg
test
jo
mov
fwait
xor
adc
mov
sbb
lods
dec
out
notl
or
divl
push
sti
repz
mov
loope
xchg
add
pop
in
jne
mov
sbb
inc
sub
out
scas
lods
jp
pop
adc
or
adc
aaa
test
push
push
push
lret
arpl
mov
and
sbb
negl
pop
arpl
cs
scas
push
jnp
inc
cmpsl
add
mov
inc
push
xchg
sbb
inc
cli
jno
jb
push
mov
inc
sub
fmulp
xchg
add
insl
sub
sub
mov
jbe
inc
pop
xchg
test
shlb
daa
loop
inc
and
fbstp
mov
arpl
pop
push
lock
jg
cmpsl
lods
xchg
movl
das
insl
mov
out
lods
push
pop
xchg
inc
sub
sbb
adc
dec
and
xor
jmp
pushl
aaa
or
xchg
ja
push
sbb
dec
lods
adc
xchg
cmp
call
pop
fstl
xorb
mov
lds
push
xor
mov
or
dec
or
aaa
cmpsl
aam
cmc
sti
pusha
repz
ficomps
rorl
scas
mov
or
inc
mov
pop
inc
and
lret
call
mov
cmp
fidivrl
lahf
fs
mov
pop
sbb
or
xor
out
dec
jb
call
jne
cmpsb
fs
or
gs
push
loopne
ficompl
inc
out
cmp
test
je
out
imul
dec
lret
shlb
mov
rorl
jl
mov
movsl
sahf
cmp
jmp
mov
icebp
ja
pop
fimuls
aas
sub
orl
adc
push
inc
xor
sarl
cmp
or
inc
test
or
add
mov
sub
jns
imul
sbb
cwtl
and
jmp
stc
sbb
inc
push
or
nop
rcrb
cmp
mov
mov
adc
mov
add
orb
push
insb
pop
push
in
jbe
pop
stos
mov
xlat
ficompl
repz
insb
in
imul
pop
or
out
out
out
in
cmc
jne
mov
pop
cmp
loop
push
dec
jno
mov
aaa
mov
add
pop
clc
bound
mov
repnz
lds
bound
cmpsl
iret
and
imul
negl
push
mov
xchg
test
outsb
lea
cmc
mov
or
mov
popf
cmp
jecxz
rclb
xor
push
inc
xlat
dec
xor
xchg
push
out
cmp
movsb
xchg
shl
lds
jl
dec
sbb
or
jp
jmp
mov
sbb
xor
sbb
cmp
xor
out
xchg
mov
inc
aas
mov
xchg
dec
dec
add
ja
icebp
jb
mov
fs
sar
jmp
out
add
pop
and
shlb
sbb
mov
jne
fdivp
ja
pop
fmuls
or
sub
xor
ljmp
ficoml
add
inc
loope
in
dec
gs
jae
pop
popa
jns
fists
sbb
push
jne
inc
pushf
jl
scas
and
cmp
stc
push
push
dec
imul
cmp
fwait
cmp
lock
pop
cld
addr16
lods
push
cltd
jecxz
shll
push
cld
insl
fcomip
pop
xchg
outsl
out
ret
dec
dec
aam
jne
jl
mov
mov
jno
jp
adc
test
mov
cmp
inc
dec
pop
arpl
movsl
imul
pop
sbb
hlt
rorl
mov
test
std
je
mov
push
ficompl
pusha
imull
popa
xchg
or
push
pop
int
pop
pop
xchg
mov
out
push
pop
pop
out
or
jge
mov
pop
insl
mov
cmp
add
lahf
jb
sub
fisttpl
jle
pop
pop
mov
inc
jnp
std
add
stos
xchg
mov
lds
push
xchg
dec
mov
mov
test
arpl
xchg
mov
pop
lahf
clc
jae
inc
popf
add
push
hlt
dec
xchg
out
pop
call
inc
push
inc
sub
push
loopne
inc
sbb
fldcw
rorl
sbb
mov
jo
test
pusha
add
cltd
dec
sub
xor
lahf
les
pop
cmp
in
incb
je
movsl
lret
fcmovu
rcl
into
outsl
pop
jbe
jae
cltd
mov
subl
mov
lods
mov
jge
lahf
cmp
cmp
push
and
and
lock
das
andl
sti
mov
add
push
and
xor
mov
sahf
fistl
andb
repz
mov
cmc
mov
pushf
lock
mov
mov
insb
inc
std
cmp
imul
xchg
adc
and
xchg
xchg
negl
push
les
mov
fistps
test
in
cltd
push
add
cmpsl
call
int
jl
test
dec
push
pusha
pushf
fbld
imul
ret
or
sub
inc
lret
std
cmp
fisttpl
out
jg
adc
pop
pop
orb
pop
shrb
mov
cli
xchg
fcoms
dec
dec
movsl
sti
int
adcl
stc
fdivrl
arpl
aaa
outsb
xchg
je
hlt
testl
sbb
inc
jne
je
pop
cmpsb
popf
sub
jg
lea
and
sub
cmp
pop
xchg
mov
ret
adc
shlb
add
mov
jbe
shrl
adcb
in
mov
mov
sub
jmp
es
orb
clc
xchg
leave
fbstp
jb
sbb
shl
sti
test
fwait
int3
mov
sub
fcmovbe
mov
mov
sbb
push
mov
fwait
adc
fcoms
add
mov
or
out
or
pop
mov
les
mov
es
dec
mov
popf
stc
pop
out
pop
dec
mov
sub
xchg
pop
mov
mov
ss
pop
sar
int
es
imul
test
jg
fldt
jge
test
imul
adc
fisttps
mov
xchg
sub
dec
popa
mov
inc
js
into
lods
mov
pop
pusha
add
push
ds
ljmp
sub
cmc
frstor
dec
arpl
orb
pop
xchg
mov
jae
add
cmp
mov
in
pop
and
inc
and
sbb
adcl
pop
sbb
xor
outsl
loopne
mov
test
stc
stc
shll
shll
sbbl
mov
mov
clc
mov
lcall
bnd
data16
inc
adc
iret
inc
sub
and
adc
ret
mov
lods
mov
shll
push
adcl
cmp
je
add
and
scas
inc
xor
sqrtps
cmpsb
cmp
lret
movsb
jl
mov
xorb
xchg
push
fidivl
hlt
in
push
rcl
lcall
pop
hlt
cmc
and
add
mov
clc
push
aas
xchg
mov
and
mov
shlb
dec
inc
fcoms
out
or
mov
rcrb
lods
push
mov
push
ret
push
roll
pop
jb
mov
mov
lret
ret
push
xor
inc
stos
outsb
add
scas
pusha
xor
inc
mov
dec
ret
inc
icebp
xchg
pop
lods
lret
imul
cmp
cmp
jnp
mov
cmpsb
cli
cld
outsl
rclb
movsb
mov
push
adc
fisubl
leave
jge
mov
add
cld
aad
repz
inc
cs
movsl
movsl
ror
dec
lds
lret
es
mov
ffreep
jg
fdivs
inc
dec
or
dec
in
fcoms
rcrb
insb
mov
repz
stos
push
fwait
andl
add
insl
loope
lahf
andl
mov
adc
sub
sbb
sbb
insl
fisttpl
fists
rcr
mov
push
mov
or
fcoml
mov
and
mov
xor
outsl
push
jecxz
int
jns
adc
xchg
jno
fs
lea
ja
sbb
js
jbe
or
loope
clc
scas
fisttpl
sbb
mov
and
ret
push
add
rorl
sub
lods
frstor
xchg
xor
jne
pushf
outsb
stos
dec
cmpsb
fsubs
adc
les
int
mov
mov
xchg
jecxz
xor
repnz
pop
out
loopne
xchg
add
int3
pop
mov
inc
mov
mov
inc
movsl
movsb
dec
je
add
aam
pop
loopne
dec
fwait
pushf
shrb
imul
and
or
mov
imul
cmp
xor
stc
outsl
js
add
daa
push
lcall
jne
rorb
xchg
xchg
std
clc
and
push
mov
jmp
mov
mov
cmp
xor
mov
inc
adc
mov
jg
negb
aam
data16
data16
rorl
pop
filds
sbb
aas
subl
int3
clc
push
fnstsw
bound
mov
movsl
lds
fidivrs
insl
add
push
add
cld
and
mov
or
sbb
xchg
xchg
flds
add
adc
xchg
mov
sbb
sbb
add
jecxz
mov
outsb
test
inc
mov
xchg
dec
scas
rclb
mov
add
xchg
loopne
into
in
aaa
jno
mov
test
xor
arpl
jbe
cltd
bound
scas
cmp
cli
scas
test
sbb
cmp
sub
int3
test
sub
pop
cs
cmpsb
push
inc
adc
adc
imull
jb
ljmp
push
clc
pusha
in
je
push
lock
and
dec
xchg
inc
stos
ds
sahf
push
and
icebp
popl
mov
mov
mov
xchg
sarb
cmc
fwait
pop
je
orb
inc
sub
cmp
imul
jle
jmp
ds
es
repz
inc
mov
cli
or
loopne
sub
fdivrl
cwtl
jb
pop
mov
jae
add
mov
xor
cmp
in
sbb
mov
mov
fwait
mov
add
inc
and
push
test
shl
ss
xor
mov
jns
ret
push
aad
nop
cld
xor
mov
inc
push
imull
pop
stos
adc
popa
push
sbb
jmp
mov
iret
gs
or
jbe
push
in
add
lods
jb
jb
pop
add
mov
xlat
les
mov
pop
lds
add
loop
cli
sub
stc
mov
xchg
dec
cwtl
sbb
rclb
mov
fnstenv
je
jnp
mov
rcl
jg
push
out
insl
mov
adc
cmp
xchg
pusha
mov
inc
adc
adc
das
or
jno
xchg
jl
xlat
out
adc
dec
stc
fstpt
pop
pop
lods
xor
jne
lahf
inc
cwtl
xchg
mov
cmp
pop
push
std
xlat
aas
push
mov
sbb
xchg
dec
ret
jbe
aam
int3
lods
sub
test
pop
repnz
jl
sbb
cmpxchg
mov
push
int3
sbb
cmc
and
mov
pop
jecxz
pop
nop
sbb
std
aas
fwait
mov
push
hlt
insl
rcrb
out
inc
mov
mov
xor
pusha
sbb
ljmp
adc
xor
push
pushf
lret
test
stos
ror
mov
fists
orb
lret
fldcw
sbb
push
xorb
or
jo
mov
dec
es
or
jnp
fsubl
out
mov
xchg
jbe
hlt
or
sub
adc
cmp
and
lods
mov
in
stos
cmc
jp
adc
lea
xchg
pusha
adc
fstl
xchg
rorl
lods
xchg
test
adc
mov
xchg
popf
pop
pop
push
xchg
hlt
cmpsb
pushf
fsubr
dec
iret
jmp
dec
push
repnz
outsl
jl
test
mov
int3
jne
stc
test
mov
cs
loope
adc
mov
mov
pop
adc
sbb
cmp
hlt
lea
lcall
push
jmp
leave
adcb
push
push
in
push
lahf
ds
lahf
jle
jne
arpl
push
lcall
outsb
dec
inc
addb
jb
out
jecxz
das
stos
xor
aas
adc
jno
cld
je
pop
subl
lcall
xchg
pop
mov
pushf
jae
cmp
and
pushf
sub
and
in
pop
cmp
mov
xchg
mov
lods
or
push
dec
in
idivl
dec
mov
imulb
dec
add
ficoms
xchg
pushf
ror
sbb
jle
cmp
xchg
adc
daa
xchg
cmp
nop
mov
rorb
dec
adc
sbb
push
inc
bound
mov
or
lsl
popf
mov
loopne
xchg
in
cmp
ss
loopne
sub
lods
div
and
imul
imul
out
test
dec
push
jle,pn
leave
test
pop
fsts
daa
jo
push
mov
movsb
dec
inc
jl
inc
lret
fildl
xor
jmp
inc
popf
cmp
insb
lahf
jns
data16
imul
push
sub
fcmovnu
lds
jg
pop
push
repz
jae
push
divl
lds
int
xchg
loope
lret
xlat
jp
cmp
shlb
out
push
mov
inc
pop
in
mov
or
pop
cmp
pop
xchg
in
sub
sbb
jp
xchg
in
iret
rol
ffree
push
adc
add
mov
push
shrb
pop
out
adc
sbb
inc
xor
dec
cwtl
sarl
add
movsl
add
adc
xchg
mov
iret
xor
ss
xchg
mov
mov
repnz
movl
rorl
divl
pushf
or
xor
sbb
jle
sarb
push
mov
jecxz
xchg
andb
mov
and
xor
outsb
sbbb
mov
in
sub
or
call
and
call
andb
arpl
jg
leave
mov
loope
sub
dec
leave
xchg
and
or
cli
dec
add
popl
test
fisubl
out
pop
inc
cmp
xchg
cmp
cmpsl
test
sbb
jmp
js
imul
divl
or
pop
aas
icebp
call
dec
sbb
dec
and
jg
int3
jecxz
sti
xor
push
shlb
mov
sub
jl
std
fs
cmp
clc
jb
pop
imul
jle
pop
xor
movsl
mov
test
and
lahf
add
loope
inc
and
in
rcrb
lret
push
push
xchg
pusha
loop
clc
or
int3
es
dec
jbe
aas
push
jmp
fists
repz
or
jb
adc
shll
ja
cwtl
sub
push
fwait
adc
pop
mov
pusha
mov
mov
js
pop
adc
pop
sbb
jbe
arpl
cmp
loope
sbb
loop
dec
jle
pop
out
mov
das
cmp
pop
or
js
sub
inc
and
pop
cltd
dec
xor
mov
inc
sbb
and
fwait
add
sbb
call
mov
das
jo
lods
or
pop
pop
pop
mov
ret
aas
daa
addr16
mov
pop
or
mov
outsb
cld
pop
mov
call
mov
enter
ja
inc
test
inc
sbbb
aas
insb
mov
sahf
jp
mov
fimuls
les
jo
in
es
adc
mov
test
das
mov
lock
sub
mov
or
arpl
movsb
or
daa
stos
gs
jl
mov
jg
into
mov
mov
or
xor
mov
ficomps
add
xor
setne
fistl
ja
adc
and
fadd
and
shll
or
and
or
call
sub
insb
mov
push
inc
in
aaa
fldcw
cmp
push
pop
adc
loope
push
cmp
orb
mov
int
xchg
ja
cld
fcmovbe
sarb
or
mov
lea
rcrb
insb
cltd
dec
cmpsl
xor
sub
in
xor
pop
cmpsl
fdiv
in
ds
pop
sbb
and
cli
testb
int3
fsubrl
js
inc
pop
fiadds
xlat
test
clc
sahf
lods
imul
mov
pop
and
adc
jl
add
jmp
repnz
xor
divb
outsb
xchg
dec
das
mov
xlat
test
dec
pop
lock
mov
mov
cmp
mov
fs
inc
jge
or
ror
ljmp
mov
in
mov
or
adc
daa
sub
iret
mov
popf
fadds
inc
pop
jne
sbb
cmp
push
mov
jo
jle
push
popf
ss
mov
and
mov
push
jge
out
add
cmpsb
shll
jo
cmp
pusha
jne
in
ljmp
ja
push
xor
and
scas
add
inc
add
out
jp
dec
push
fnstsw
mov
in
sub
pop
dec
cld
jnp
imul
nop
mov
push
mov
push
jno
std
in
jo
test
fimuls
out
es
loope
loope
loop
sub
cs
popf
add
xchg
mov
jno
push
shll
push
aad
sub
icebp
or
jne
rolb
sahf
cs
mov
gs
mov
mov
fldt
data16
andl
and
and
sbb
out
and
xor
shlb
popf
sti
daa
insl
ljmp
mov
out
dec
lock
jecxz
aas
xchg
gs
and
mov
push
xchg
xchg
jle
mov
or
dec
lret
pop
retw
xchg
aad
mov
mov
adc
xor
lods
aaa
insl
in
or
adc
pop
push
mov
adc
push
cmp
mov
jge
popf
dec
test
rclb
pop
icebp
lret
cmp
fwait
xchg
sub
mov
adcl
xor
sbb
mov
cmpsb
shll
mov
fdivl
push
int3
notl
jno
add
inc
adc
ds
testb
xor
jmp
cmp
out
xchg
ds
sub
xchg
add
stc
inc
sahf
das
lret
inc
cmp
pop
add
inc
das
cli
fmulp
cs
xor
pop
jge
xlat
sbb
stos
es
push
sub
fucomip
gs
mov
test
mov
jle
mov
shlb
sub
data16
sub
sbb
cmpsl
outsl
pop
pop
push
inc
arpl
lods
sarl
fcoms
push
gs
push
pusha
lcall
daa
in
pop
xchg
or
sbb
and
and
pop
js
dec
dec
movsb
subb
xor
movsb
sub
mov
cmpsl
pop
push
mov
std
daa
xor
jl
xchg
mov
jge
pop
pop
loop
pop
mov
sub
pop
faddp
lds
cmp
repz
nop
arpl
mov
mov
dec
xchg
in
inc
popa
inc
outsl
cwtl
aaa
adc
aas
test
sbb
cwtl
sub
mov
cmp
mov
push
inc
mov
push
sahf
pcmpgtd
mov
cmpsb
xor
mov
jae
ret
or
jo
cltd
pop
mov
fcom
xchg
mov
test
xchg
lods
xchg
dec
inc
sbb
fidivrl
or
scas
repz
and
mov
lret
ja
push
sbb
push
pop
das
test
jmp
daa
ss
or
jmp
cmp
push
aad
cli
call
mov
xor
addr16
xchg
mov
adc
pop
lea
je
jo
addr16
mov
pop
jmp
jnp
les
dec
dec
fwait
stc
fbld
stc
mov
inc
inc
or
dec
dec
dec
inc
test
mov
dec
mov
jno
cld
rcll
add
or
and
xchg
push
xor
jl
push
cmpsb
add
or
push
mov
and
int3
ret
loope
and
hlt
sbb
cli
lcall
not
jb
push
movsb
jmp
arpl
cmp
jge
addl
or
and
std
pop
movsb
xchg
mov
lods
cltd
pop
mov
adc
sub
ljmp
cmp
aad
test
in
dec
mov
xor
clc
pushf
pop
inc
loope
mov
jge
sbb
xchg
mov
leave
mov
test
inc
inc
fiaddl
cmp
push
cmp
ljmp
xchg
mov
push
jle
nop
sub
lret
lcall
leave
push
adc
jae
mov
pop
jne
mov
fldenv
cltd
test
imul
sahf
pushfw
roll
lods
mov
add
push
fcompl
enter
xchg
xchg
jge
addr16
xchg
gs
lcall
cmp
mov
and
jecxz
pop
xchg
daa
xchg
popf
push
sbb
xchg
sub
fstps
stos
and
mov
insb
xchg
jno
clc
sbb
sti
mov
xor
lahf
loope
jbe
jmp
xlat
adc
fwait
inc
call
xchg
rep
mulb
mov
lock
loopne
adc
mov
js
sbb
std
addr16
stos
cld
out
aaa
adc
shl
aad
test
cmpsl
rorl
pop
xor
aad
push
popa
adc
popa
subb
mov
xchg
jmp
pop
adcb
fbstp
in
adcl
jns
rol
in
mov
enter
fwait
gs
xor
mov
cmp
std
xchg
or
int3
sti
or
mov
xor
push
cmpsb
fcoms
filds
xor
or
and
or
cwtl
loope
inc
paddusw
movsb
jb
add
xchg
adc
mov
mov
cs
push
mov
push
insb
daa
lods
aam
jae
lods
or
data16
pop
xchg
fstpl
cltd
xor
inc
in
in
add
test
dec
mov
add
dec
mov
stc
sub
push
popa
push
add
addr16
sbb
or
add
sbb
les
pop
cmp
aaa
jmp
pop
inc
mov
xchg
leave
inc
popf
mov
roll
shll
cmp
shlb
push
lea
stos
std
sbb
lock
mov
or
les
pop
fisttpl
push
cmc
jo
cltd
pop
jae
mov
sub
xor
mov
fbstp
loope
xchg
push
sub
shrb
xlat
repnz
pushf
ret
xchg
adc
loopne
cld
or
jg,pt
cli
cmpl
ror
and
outsb
mov
cli
mov
dec
divb
nop
add
jle
leave
push
mov
mov
in
ficoms
sbb
push
add
jmp
lahf
pop
inc
sarb
lret
and
push
jne
popa
sti
pop
scas
add
inc
aas
push
inc
fiaddl
push
pop
in
sbb
sub
push
out
nop
mov
xlat
ljmp
mov
fldl
sbb
loopne
xor
pop
lret
xchg
mov
dec
mov
incl
rcrl
lahf
push
shrb
das
ljmp
push
push
imul
or
push
dec
lahf
pop
fdivp
repnz
test
icebp
std
fwait
jno
jnp
xchg
aaa
cmp
out
fs
fisubrs
jle
pusha
or
pop
mov
lds
pop
mov
je
push
push
push
out
into
imulb
hlt
mov
push
arpl
cmp
outsb
movsl
inc
xorl
stos
inc
imul
cmpsb
fiadds
mov
sub
fsubrs
movsl
pop
into
stos
ret
mov
mov
inc
mov
mov
push
mov
adc
sbb
and
ret
xor
into
div
sbb
ds
aas
sub
pop
jle
fwait
and
fwait
jbe
in
clc
pop
lds
ds
mov
imul
scas
into
das
addl
fidivs
and
lods
cmpl
out
lock
int
mov
scas
stos
mov
mov
sbb
xchg
ds
cmc
pop
outsb
ss
xor
mov
add
inc
shll
daa
loopne
imul
xchg
dec
addr16
roll
add
or
ret
sbb
xchg
dec
jp
cli
sti
push
into
js
inc
sbb
mov
mov
je
mov
adc
lods
cmp
movl
inc
ljmp
inc
mov
push
mov
lock
test
push
test
sub
outsb
inc
mov
mov
scas
fidivrs
int3
push
data16
and
loopne
sbb
aam
enter
inc
jae
push
incl
cmp
pop
push
test
aaa
inc
enter
mov
adc
and
pop
aaa
ret
or
rcll
insl
lahf
jnp
lcall
xchg
cmp
xchg
or
push
fmull
pop
and
xor
in
add
push
sti
shll
out
outsl
jno
jmp
lods
push
push
movsl
sbbb
dec
and
loop
or
imul
sub
cs
mov
popa
stos
fwait
lods
es
pop
shlb
out
jmp
out
mov
xchg
lea
mov
ret
xor
cmp
in
cltd
inc
les
pop
loope
sahf
leave
lret
jg
jecxz
leave
sahf
cmp
das
andl
inc
mov
sub
emms
add
stc
push
sub
pop
in
mov
dec
pop
lea
xchg
xchg
mov
and
adc
mov
jno
inc
lcall
cmc
dec
jmp
push
stos
imulb
push
xchg
out
cmpsb
repz
jbe
push
xor
movsb
andl
jge
jns
ret
aaa
pop
sub
cmp
jg
aam
hlt
dec
lods
xchg
push
ja
dec
lock
lock
ljmp
stos
pop
xchg
out
jg
push
xchg
inc
jge
in
rolb
cs
inc
xlat
jo
pop
push
cmp
out
fsts
sbb
sub
or
jp
mov
inc
push
gs
dec
mov
ljmp
arpl
movsl
cltd
or
push
loopne
call
inc
inc
jns
ja
adc
xor
cmc
addr16
hlt
jmp
pop
daa
dec
mov
imul
xchg
and
lcall
ljmp
cmpsl
add
mov
push
repz
cmp
cld
xor
daa
stc
or
jecxz
cmp
das
repnz
in
outsb
divl
dec
dec
testl
icebp
dec
ljmp
fcmovnu
adc
imul
test
fst
push
xor
cmp
pop
pop
addr16
call
in
mov
sbb
cmp
outsl
add
push
xor
adc
sub
xchg
sbb
push
gs
jge
pop
inc
push
push
add
mov
xchg
test
and
mov
mov
and
sbb
or
mov
push
jno
imul
inc
pop
pop
mov
pop
and
test
mov
divb
push
icebp
or
sub
out
rolb
std
mov
add
cld
mov
jg
shr
add
adc
push
popf
jp
dec
lock
jl
push
aaa
xor
bound
jle
jle
dec
stc
cmpsb
mov
cmpsb
pop
scas
lock
cwtl
lcall
mov
inc
fcoml
xchg
push
mov
xchg
mov
mov
stos
lock
iret
and
jle
sub
call
daa
mov
inc
out
mov
add
pop
cmpsl
arpl
mov
aad
dec
mov
jae
out
mov
loopne
hlt
xchg
sub
inc
out
das
mull
inc
add
cmp
mov
cli
inc
jle
and
dec
and
mov
out
sbb
fdivrl
sub
es
xor
dec
cltd
dec
adc
or
lock
inc
sbb
dec
pushf
into
test
fs
pop
xchg
repnz
xchg
fdivl
lds
inc
xor
loope
mov
mov
mov
jo
and
pop
xor
sub
pop
out
mov
movsl
shlb
imul
jnp
mov
xchg
icebp
fs
test
jle
lret
mov
xor
out
jmp
jp
ficompl
pop
pushf
jmp
mov
pop
jbe
mov
and
cli
fmull
and
shr
sti
mov
in
fildll
stos
mov
sbb
or
cmpsb
in
mov
lods
xor
pop
popa
or
mov
jns
dec
jno
push
mov
and
jp
add
loope
lea
push
jo
inc
adc
movsl
cmp
mov
fs
lret
adc
bound
add
pop
enter
mov
hlt
popa
sbb
aad
mov
add
adcl
mov
fwait
and
xchg
jg
and
jno
jo
jl
dec
fld
pop
imul
jmp
or
sub
jle
sub
pop
es
cmp
jle
or
jmp
mov
lock
or
lods
add
and
nop
out
cltd
mov
xor
pushf
test
xchg
stos
jne
fildll
mov
addl
sbb
push
xchg
mov
dec
cs
pusha
mov
dec
ret
sbbb
adc
js
js
dec
or
jnp
bswap
out
pop
cmp
repnz
inc
inc
add
and
xchg
pop
imul
jnp
mov
jo
bound
dec
fstl
insl
dec
jp
in
add
or
ss
test
push
popl
mov
mov
sub
in
xor
xchg
ja
xchg
das
xor
loope
dec
loope
sbb
or
stos
push
out
loop
jg
cwtl
mov
fnsave
mov
dec
call
outsl
fildl
int
insb
or
add
mov
cltd
push
mov
in
cmp
repz
lock
mov
cltd
jl
adc
add
aam
cmp
inc
fdivrl
imul
pusha
lea
js
jecxz
ja
push
repnz
stos
push
pop
or
or
les
lock
adc
sub
sti
dec
ljmp
arpl
out
in
fcomi
scas
pop
loope
aaa
scas
push
add
adc
insl
call
and
test
unpcklps
sbb
pop
je
fsubrp
pop
mov
push
jl
xchg
xor
mov
or
sub
pushf
fwait
xchg
cmp
repnz
mov
icebp
push
dec
je
das
jp
mov
out
js
leave
mov
dec
cltd
xchg
lods
addl
dec
sahf
jp
add
out
jbe
fcmove
sbb
inc
sub
lret
pop
cs
outsb
mov
in
punpcklwd
sub
dec
adc
push
sbb
lods
icebp
jge
ds
fucom
inc
dec
fwait
dec
jl
sbb
and
in
add
outsl
aas
cmp
out
mov
imull
xor
ds
or
cwtl
cmp
jg
jno
lret
orb
roll
cld
inc
ja
out
jnp
sbbl
push
clc
js
adc
iret
or
cmp
mov
cmpsb
call
push
gs
ds
cmc
mov
loopne
jecxz
icebp
sub
adc
insb
adc
adc
pop
fisubs
mov
sbb
or
and
gs
adc
xchg
shll
or
imul
stos
iret
mov
decl
aam
xchg
sbb
mov
pusha
int
sbb
cmc
in
mov
dec
and
jne
push
fsubl
dec
dec
jnp
jge
insb
cld
pop
leave
repz
cmp
adc
xlat
in
or
mov
and
cmp
pop
je
cs
lret
cmpl
pop
negb
orb
sub
cltd
aam
push
loope
dec
clc
sub
popf
mov
xchg
aas
out
jno
jl
loope
mov
and
add
push
fidivl
loop
adcb
das
add
push
or
popf
stos
and
popf
fcoms
mov
jecxz
pop
cwtl
in
push
mov
xchg
inc
iret
add
and
in
inc
mov
jae
pushf
jp
out
mov
lret
cs
cmc
sbb
mov
and
push
add
es
mov
dec
fimull
fwait
insl
repz
arpl
mov
dec
sbb
loope
sub
into
fistpll
popa
xchg
jo,pn
shlb
into
push
ja
getsec
mov
movsb
dec
lret
popa
fsubl
cli
and
popl
sbb
int3
sub
popa
mov
or
stc
sub
pop
ror
sarl
std
enter
fcmovb
rorl
sub
rorb
cwtl
repz
loope
pop
mov
fcoms
pop
pushf
ret
push
pop
dec
add
bound
push
int3
test
push
movsl
xchg
or
pop
dec
mov
nop
test
rolb
jnp
mov
inc
cwtl
js
mov
xor
test
fcmovnbe
adc
mov
btr
icebp
lods
inc
sbb
mov
fcmovnb
jl
fldt
scas
xor
cwtl
fcmovnu
orb
mov
add
incb
xorl
push
out
lret
push
std
xchg
lcall
stc
push
addr16
dec
sbb
filds
stos
sahf
jle
rorl
adc
scas
insl
out
jp
add
push
stc
inc
pop
out
fldl
ss
hlt
adc
aaa
pushf
int3
sahf
fists
sahf
rol
jns
jb
mov
mov
mov
inc
enter
mov
mov
adc
xchg
pop
mov
rclb
mov
aaa
sub
out
add
lods
movsb
lcall
cli
aad
mov
push
mov
sbb
sti
in
clc
imul
mov
push
adc
hlt
inc
in
stos
mov
cmc
jo
arpl
clc
lods
xchg
dec
sahf
adc
push
in
popa
or
mov
nop
cmc
dec
mov
push
fisttps
pop
cmp
pop
jnp
lea
xchg
sub
ret
jo
addr16
pop
js
std
jno
adc
ret
pop
lcall
inc
dec
hlt
mov
push
fistps
cmp
mov
mov
gs
mulb
and
xchg
add
aas
pop
popf
sbb
js
pop
and
jmp
arpl
lock
mov
loopne
inc
je
popf
int
sub
push
in
arpl
nop
sub
sbb
cwtl
sub
jmp
lods
pop
inc
subb
xor
sti
repnz
ljmp
xchg
fidivrl
mov
lods
fadd
inc
loope
insb
imul
fcmovb
cmp
imul
push
out
gs
insl
sub
sub
andl
adc
and
lods
repz
or
in
pop
mov
mov
mov
imul
aad
mov
push
xchg
jl
in
fnsave
jg
mov
sub
cmc
gs
add
jle
popf
or
xchg
add
orb
lcall
cmc
mov
mov
testl
shrl
add
hlt
mov
lahf
sbb
dec
ljmp
mov
or
fstpt
sbb
in
or
nop
pop
out
push
push
xor
inc
jne
call
movl
sbb
jbe
outsb
insl
fs
in
adc
stc
daa
mov
cmp
dec
push
and
xor
push
scas
mov
and
mov
sub
scas
scas
xchg
out
pop
adc
mov
xor
mov
xchg
adc
movsl
ljmp
pop
addr16
mov
mov
fcmovnbe
jae
fs
xchg
or
das
sbb
pusha
or
pop
into
lods
inc
mov
and
lea
dec
or
ret
xlat
jno
andnps
les
xlat
sub
pop
lret
in
scas
cmp
cmp
dec
push
dec
xlat
je
test
and
jg
test
adc
in
add
repz
cmp
push
pop
xchg
es
call
stos
dec
scas
xchg
mov
dec
cld
loope
mov
xor
cli
hlt
push
sbb
jno
sbb
xchg
stos
fisubs
adc
mov
xchg
in
pop
jne
or
sub
fwait
addr16
popf
imul
leave
and
and
mov
fwait
add
and
jbe
outsb
mov
push
push
jnp
repz
adc
pushl
push
pop
push
xor
pop
pop
push
mov
gs
push
cmp
push
xchg
gs
stc
sbb
mov
push
stc
popa
int
mov
inc
push
fdivl
aas
xchg
jp
push
in
call
imul
xor
add
push
ds
push
sbb
stos
mov
xor
dec
add
mov
popf
popf
jbe
adc
and
daa
popa
lods
imul
and
dec
out
xlat
sarl
xchg
cmp
ss
ljmp
add
popf
fidivrs
and
pop
add
popf
popa
das
pop
sub
fcmovu
dec
xchg
sbb
push
fisubrl
ucomiss
sbb
mov
push
or
out
pop
fs
sbb
pop
push
in
jl
cltd
fcomps
dec
inc
fdivl
xchg
stos
out
shlb
shlb
push
sbb
adcl
pushf
adc
adc
jns
mov
iret
mov
andb
cmp
jmp
cltd
popa
das
dec
jns
lods
lret
pushf
sub
sti
fstps
pop
arpl
ljmp
and
sub
cs
aaa
xchg
aam
js
fists
scas
ja
xchg
mov
mov
testb
pop
mov
inc
fs
call
xchg
out
jmp
mov
scas
scas
push
gs
mov
das
iret
push
les
ljmp
lret
aam
dec
rorl
sbb
data16
sarb
out
test
pop
and
or
pop
adc
mov
mov
cmpsb
dec
gs
fistpl
or
std
sub
add
mov
jns
test
out
and
rorb
fs
mov
stos
dec
dec
mov
and
shr
mov
movsb
dec
push
repnz
scas
xor
dec
sbb
filds
lret
fsubs
mov
fcomi
icebp
ljmp
sarb
stos
ret
leave
int3
hlt
js
cmp
test
pop
xchg
and
adc
aad
popf
fistpl
sbb
roll
stos
sahf
mov
int
mov
mov
sti
xchg
sub
xchg
shrl
jno
mov
mov
push
insb
pop
sti
cmp
mov
mov
stos
mov
pop
push
jle
jb
ja
cmp
sub
mov
mov
int
ret
mov
fldcw
sub
lods
or
mov
insl
adc
out
out
pop
ds
cmc
cwtl
sub
std
test
inc
cli
sbb
jge
jno
das
add
imul
jbe
mov
jne
xchg
sbb
hlt
xlat
cs
loopne
or
sub
arpl
arpl
fnsave
fs
loop
pop
add
push
mov
push
out
inc
xor
in
push
mov
push
mov
cmpsb
add
sbb
orb
push
pop
enter
sbb
pop
xor
xchg
rorb
mov
sbb
mov
repnz
jne
stc
out
push
jo
loop
mul
inc
dec
inc
insl
sub
xchg
mov
jmp
dec
pop
lret
jl
inc
jnp
cmpsl
jnp
xchg
sub
out
fsubrp
xchg
pop
dec
cld
cmp
arpl
loopne
in
xchg
cmp
mov
xor
inc
lret
lods
mov
sbb
lods
aam
hlt
mov
cmp
aaa
insb
cs
repz
sarb
lods
sar
cmp
adc
cmp
xchg
adc
loop
sbb
lahf
inc
add
inc
in
ss
pop
and
sti
xorb
and
nop
ret
idivb
mov
lods
movsb
lea
int
shlb
adc
pop
adc
test
mov
xchg
fcmovnu
and
mov
scas
push
cmc
iret
or
sbb
pop
loopne
push
inc
pop
fmull
hlt
shl
and
in
cltd
add
inc
test
enter
dec
stc
sbb
mov
scas
and
mov
adc
cwtl
sub
fldt
test
mov
xor
test
or
inc
xor
xchg
mov
notb
fidivrs
and
adc
adc
pushf
mov
stos
mov
call
or
repnz
fcmovnb
cli
idivl
mov
jge
jle
test
and
repnz
xchg
imul
and
cmp
add
out
gs
hlt
outsb
adc
push
mov
gs
icebp
cmp
jmp
xchg
sbb
add
mov
xchg
xor
lods
das
das
iret
imul
jl
jne
ja
test
jle
in
rcrl
mov
in
addl
sbb
cmp
inc
fiadds
adc
or
testl
inc
and
mov
mov
jmp
dec
shlb
inc
xchg
jno
lods
push
or
mov
jbe
data16
adc
repz
or
out
popa
inc
fcmovnbe
mov
sub
or
mov
adc
jg
dec
loope
inc
pop
xorb
dec
jne
pop
popf
enter
push
jns
loope
lock
in
jae
aas
dec
imul
dec
and
fcmove
movsl
testb
testl
lods
rcll
jo
adc
outsl
cmp
add
inc
daa
xchg
push
or
sub
out
lock
mov
adc
pop
pop
xor
or
inc
bound
lret
or
into
iret
pop
mov
movsb
sysexit
sbb
rcl
repnz
mov
aaa
sbb
fistps
roll
cwtl
adc
jno
xchg
pop
xchg
scas
sub
push
dec
push
or
out
mov
xor
rorl
imul
xor
cwtl
outsl
pop
cmp
loop
mov
insl
out
movsb
inc
pop
je
fwait
gs
enter
pop
push
jo
mov
sbb
scas
ret
or
fnstenv
sti
out
pushf
mov
inc
dec
neg
lcall
daa
cmp
and
cmp
jmp
lods
clc
fs
fs
aam
add
adc
and
in
mov
jle
loop
adc
and
stc
jmp
xor
call
adc
xor
inc
ret
lret
xchg
pop
leave
push
pop
packuswb
mov
adc
rcrb
inc
mov
je
ret
mov
adc
hlt
out
in
scas
mov
xor
push
insb
insl
insl
mov
out
imul
mov
mov
fs
aaa
js
xchg
leave
jns
repz
sbb
cmp
out
rol
mov
dec
push
push
mov
jb
push
data16
scas
addr16
xor
mov
adc
push
sti
cli
cmpl
loop
daa
repnz
js
das
shll
scas
jl
insb
mov
jmp
pop
sub
mov
xlat
negb
sub
cmp
movsl
mov
popf
mov
test
loop
mov
and
cltd
sbb
int
mov
stos
adc
jns
and
std
fldcw
popf
outsb
imul
mov
aaa
sbb
mov
shr
sahf
adc
mov
mov
dec
push
push
fnsave
pop
push
not
xchg
inc
adc
or
inc
lock
lahf
dec
popf
iret
addl
add
pop
jmp
jne
sti
or
iret
and
add
popf
in
icebp
popf
sbb
inc
loope
inc
testl
sub
push
das
xchg
jo
push
rcrl
mov
lods
cmp
jp
sub
jmp
lret
inc
xor
sub
jg
xchg
xor
xchg
addl
stos
stc
and
das
scas
cs
sbb
mov
mov
rcll
mov
lret
mov
push
int
test
fnstcw
push
push
add
inc
mulb
pusha
lcall
imul
aas
stc
mov
mov
mov
sbb
xchg
fisubrl
stos
dec
fsts
xor
shl
dec
xor
push
jp
test
rcll
icebp
add
loop
leave
xor
setg
push
mov
pxor
js
mov
fcoml
mov
cwtl
lds
push
cltd
pop
pop
sbb
lret
add
cmp
loop
jl
lods
movsl
testb
cwtl
stos
mov
jae
int3
jno
pop
lret
mov
mov
je
dec
adc
mov
xlat
xchg
push
loop
xor
dec
sbb
fnsave
mov
jne
and
jns
outsb
cmp
sbb
ljmpw
in
add
pop
xchg
jecxz
mov
in
or
push
into
rorb
cmp
inc
push
sarb
cli
jo
sbb
notb
push
imul
pop
adc
rcll
sti
sub
push
xchg
mov
in
stos
mov
jl
xor
xorl
repz
mov
lea
flds
push
sahf
roll
out
inc
pop
es
inc
pop
setno
push
ds
xlat
ljmp
mov
push
cmpsl
insl
loop
lahf
mov
mov
mov
or
pop
adc
roll
jecxz
cwtl
pop
xor
and
je
adc
insl
iret
and
stos
rcrb
mov
int
mov
in
std
xlat
push
xchg
andl
sbb
jl
testl
dec
mov
bound
sub
xorb
ds
stos
sbb
mov
cli
pop
inc
test
mov
lahf
js
movsl
enter
popa
sbb
ret
gs
ret
xor
rep
lret
addr16
mull
sbb
cltd
mov
sbb
jmp
mov
xor
pop
pop
jnp
xchg
fisubs
jno
dec
or
xor
mov
jns
clc
cwtl
or
mov
jge
hlt
lock
xchg
imull
loopne
enter
dec
jno
imul
outsl
fbld
test
out
pop
lea
mov
fimuls
mov
nop
jp
jbe
stos
scas
sahf
sahf
mov
cmpsl
dec
stc
mov
movsb
adc
push
push
lcall
cmpsb
je
aad
loope
mov
loop
pop
cld
ss
pop
int
fistps
mov
xlat
pop
pop
xor
jmp
loope
mov
pop
add
and
fcomp
jbe
dec
lret
outsl
lock
xor
add
and
xor
dec
dec
out
cli
loopne
mov
add
mov
add
sub
movsb
int3
inc
out
out
out
mov
nop
out
sub
je
fidivrl
das
jne
pop
sub
sub
out
mov
das
in
fldt
ljmp
push
add
cmp
leave
sub
mov
lahf
aaa
xor
fdivr
fwait
movsl
push
rol
testl
dec
mov
sbb
mov
inc
push
stos
dec
mov
jno
inc
notl
xchg
adc
ss
pop
jg
aaa
xor
mov
rcll
leave
lcall
jne
sub
dec
lahf
in
pop
sbb
cwtl
or
mov
loope
rcrl
xor
push
lcall
pop
test
xchg
roll
inc
pop
jge
cmpsb
rcrb
cltd
xlat
jno
sub
xor
bound
pop
sahf
pop
and
jle
push
add
push
jae
pop
jb
in
sbb
push
jp
jg
dec
mov
cmp
pop
lds
in
addr16
or
pop
and
sahf
fwait
inc
loop
xchg
ja
fwait
or
loope
sahf
jle
sub
sbb
push
dec
jnp
pop
mov
arpl
jp
aaa
jbe
repz
ret
push
das
repnz
cmp
in
stc
ficompl
xor
jle
lds
mov
mov
popa
pop
clc
mov
cmp
mov
in
insl
mov
jecxz
lcall
cmp
pushf
pushf
mov
and
rorl
shll
or
movsl
lds
mov
sub
ret
xchg
push
and
loop
mov
sbb
push
sub
dec
push
and
stc
mov
insl
push
pop
push
mov
out
mov
inc
jle
or
adc
movsb
inc
es
push
pusha
pop
negl
inc
push
dec
sti
outsl
fdivl
jge
adc
mov
mov
iret
popl
jb
and
cmp
cmp
add
adc
add
jne
test
iret
das
je
in
jge
sub
dec
cmp
or
fwait
int3
cmp
and
mov
rclb
rorl
mov
loopne
sub
into
pop
fwait
pop
js
push
out
mov
inc
hlt
int
mov
test
or
mov
fcoms
push
pop
sbb
js
rcrb
cmp
ds
mov
scas
sub
call
mov
test
adc
pop
rolb
fcoml
enter
insl
or
push
ds
push
pop
dec
and
pop
fldenv
push
push
inc
jne
out
push
push
and
cmp
nop
add
sti
fdivrs
push
or
fcompl
cmp
push
push
cmp
and
cmp
and
lret
imul
int
cmp
aam
movsb
clc
add
loop
xchg
add
mov
test
push
arpl
fs
stos
test
fdiv
dec
icebp
mov
mov
jnp
rcll
jb
out
cli
add
repz
add
add
xchg
mov
adc
cld
rcrl
loope
push
push
pusha
lret
adc
add
or
and
scas
cmpsb
xor
fadds
and
outsb
sub
sub
xchg
push
js
out
cmp
mov
dec
inc
je
push
xchg
mov
call
enter
hlt
stos
out
sbb
xor
mov
rcll
in
ljmp
sub
push
mov
cmp
out
andl
iret
mov
mov
stos
mov
out
ds
push
sub
scas
jmp
or
xor
cmp
mov
scas
inc
loop
or
xor
mov
mov
sbbl
outsb
or
cmp
lds
jmp
loop
push
jae
int
icebp
dec
stos
sub
sahf
divb
in
aam
int
adc
push
inc
jne
mov
xchg
mov
ljmp
or
push
jae
mov
lds
arpl
pop
insb
and
fistps
mov
fcoml
mov
sub
or
dec
cmp
mov
out
pop
das
push
inc
arpl
ret
fbstp
pop
mov
inc
out
stc
loop
cmpsb
std
enter
dec
xchg
mov
inc
and
mov
clc
lds
and
inc
and
test
test
fbstp
xor
dec
xchg
mov
cmc
push
sahf
sub
sahf
test
cmpsl
out
arpl
sub
ret
xchg
test
aad
fs
in
cmp
hlt
xchg
leave
arpl
lret
and
sub
push
nop
fildll
sbb
or
jecxz
xchg
push
lahf
xchg
es
mov
add
push
aam
cwtl
mov
scas
jle
mov
lret
dec
adc
xchg
add
shl
adc
nop
xor
adc
mov
inc
or
lret
dec
outsl
lods
into
sti
iret
sub
stos
std
jle
jmp
cwtl
imull
ljmp
test
into
das
mov
jae
outsb
jns
ds
sbb
or
fdivrs
lret
jmp
jns
or
in
imul
or
dec
imul
mov
xchg
cmc
fisubrl
cmpl
mov
add
fnsave
mov
sbb
cmp
insb
pop
cmp
or
dec
jmp
jecxz
sbb
mull
dec
cmc
enter
mov
jo
mov
andb
cmp
mov
or
scas
in
push
mov
lcall
xchg
fs
or
xchg
sbb
repz
daa
out
mov
jnp
dec
push
xlat
pop
andb
mov
into
inc
mov
mov
ret
xchg
sbb
or
pop
daa
sub
fwait
cmp
lea
jb
adc
push
je
repz
xchg
xchg
cli
data16
sbb
xchg
xchg
les
ljmp
gs
xlat
sahf
popa
imul
cs
cwtl
test
sub
dec
adc
movsb
neg
xor
negl
shlb
mov
adc
xor
jns
add
inc
rorb
fsubrs
loopne
pop
mulb
rol
cmp
push
push
lock
bound
fwait
push
sti
mov
mulb
adc
adc
push
or
ja
aas
test
addr16
dec
jmp
popa
jno
movsl
sbb
and
cmp
dec
jg
aad
mov
pop
xor
insl
dec
xchg
ret
adc
xor
inc
xchg
cmpsl
fistl
mov
push
jb
push
bound
lods
cmpsb
outsl
int3
adc
sbb
gs
cs
mov
sti
cld
cmpsb
cmp
pop
gs
cli
and
mov
pop
pusha
in
mov
outsl
inc
in
test
in
xchg
shlb
xor
clc
mov
jbe
les
testl
xchg
dec
cs
testb
mov
xor
mov
icebp
in
sbb
scas
arpl
and
cmp
repnz
fucomp
mov
shlb
ds
mov
les
stc
and
pop
ljmp
ret
dec
jns
inc
and
fcompp
and
jbe
outsb
push
mov
int
fadds
rcll
pusha
cwtl
les
lret
jno
test
setle
cli
inc
xchg
xchg
dec
aam
push
xor
jnp
cmpsb
add
mov
cltd
mov
and
cmp
pusha
xchg
in
scas
arpl
arpl
fsub
jne
cmpsl
or
std
xlat
lods
loop
imul
sahf
pop
fisttps
pop
pop
call
ffree
cwtl
jb
nop
add
mov
test
in
les
cli
dec
sub
stc
or
out
adc
pusha
push
adcl
push
stc
push
cmpsb
adc
addr16
insl
sbbl
fisubrl
sub
das
pop
sub
cmc
ds
clc
add
inc
in
sbb
cmpsl
dec
popf
sti
push
push
xor
andb
dec
xchg
in
sub
inc
sbb
mov
faddl
ret
adc
inc
insb
ljmp
mov
enter
dec
stos
mov
dec
out
and
leave
je
xchg
adc
out
jne
std
xchg
sbb
adc
scas
dec
mov
sbb
scas
jnp
lcall
jp
dec
dec
pop
fcoml
sub
cmpsb
mov
lahf
add
cmp
and
xchg
inc
mov
aad
inc
test
mov
in
adc
mov
add
jnp
or
daa
and
sub
sbb
lock
sbb
cmc
cmp
jp
xorl
inc
push
mov
call
aas
inc
hlt
jle
dec
icebp
xchg
sbb
fisubs
gs
mov
out
or
stos
inc
pop
cmove
inc
mov
mov
scas
in
mov
mov
repnz
sbb
rcrb
int
xchg
sbb
sbb
jb
sbb
xor
mov
add
ja
repnz
ljmp
lcall
lods
into
jp
iret
fmull
xor
jg
movsl
fdiv
jns
icebp
mov
orb
xchg
shll
xchg
inc
dec
jp
and
imul
jmp
fnsave
pop
push
das
xlat
xchg
je
rclb
filds
enter
or
stos
lret
jle
sbb
test
and
sbbl
sub
ret
cmp
and
mulb
mov
mov
dec
stos
movsb
in
rclb
mov
add
aam
mov
xor
leave
outsb
xchg
dec
push
adc
dec
jge
popf
pop
insb
cmp
fidivl
out
push
testl
dec
das
les
insl
push
and
sub
adcl
and
fwait
icebp
cmp
ret
fdivs
subl
iret
push
lock
mov
sub
mov
adc
xor
cmpsb
jecxz
in
and
pop
adc
jno
add
jns
sahf
and
dec
lods
adc
sub
adc
mov
sbb
cltd
into
dec
lea
movsl
push
mov
sbb
inc
xlat
rcrb
mov
sbb
pop
ljmp
adc
add
push
jae
dec
xchg
lock
push
pop
stc
aas
out
pop
sub
jg
jecxz
pop
jmp
jle
fs
outsl
mov
inc
aas
loopne
iret
inc
add
pop
cmp
ds
inc
push
jo
cli
xchg
test
fadd
in
and
popa
mov
pop
ret
add
mov
mov
dec
lea
imul
dec
or
and
xor
ljmp
cmp
mov
shll
fdivl
jl
push
decb
mov
fs
mov
ret
stc
pushf
xor
cli
add
cltd
lret
sub
mov
and
inc
mov
movsb
popa
loop
xchg
pop
pop
sub
cmpsl
pop
or
popa
fdivr
mov
push
mov
mov
cmp
mov
andb
mov
pop
jae
cmp
popf
into
das
mov
outsb
pop
loop
add
test
add
cmp
xor
xchg
add
add
arpl
in
xchg
push
repz
andl
test
mov
fnsave
add
fninit
and
nop
inc
sub
inc
jo
inc
jno
test
cmp
ficomps
cmpsl
aas
loop
test
push
into
pop
imul
fucompp
mov
call
aaa
sub
fldenv
cmc
fisubrs
enter
out
jmp
lods
imul
pushf
sub
in
jbe
mov
fistpl
call
test
mov
inc
inc
inc
mov
cwtl
pop
push
pop
add
mov
adc
and
lods
in
out
ficompl
lret
pop
rolb
mov
and
pop
sbb
mov
ds
lds
xchg
mov
test
fcompl
outsl
popf
sbb
xor
mov
mov
dec
shlb
lahf
out
adc
movsb
sti
mov
out
jne
in
lods
pop
cld
jge
cwtl
fwait
dec
xor
inc
and
push
pushf
jge
rorb
fisubl
pop
and
dec
and
xchg
out
xor
adc
add
lret
pop
sub
pop
lds
addr16
mov
cli
outsb
subl
lret
jno
xchg
cmp
in
lret
leave
and
or
sbb
mov
jmp
mov
sub
mov
xlat
mov
dec
mov
pop
into
inc
and
cmp
gs
lret
ss
pop
dec
in
adc
in
std
ljmp
sbb
data16
push
mov
loope
add
xlat
xorb
test
hlt
add
adc
aas
cmp
lock
push
std
mov
sahf
push
xchg
mov
sbb
and
xchg
lds
xchg
jl
shrb
fists
xorl
mov
icebp
push
jb
xchg
push
into
icebp
into
sub
xor
fnsave
insl
pop
dec
push
mov
popf
push
inc
lcall
and
inc
sbb
cmpl
xchg
or
pop
mov
mov
cmp
inc
rol
mov
repz
adc
aam
insb
cli
repnz
jb
sahf
fldl
inc
mov
shl
cmc
mov
sarb
movsl
add
insb
jnp
and
dec
or
xchg
repz
hlt
sbb
and
inc
or
xchg
lods
sub
roll
mov
adc
mov
ss
ljmp
mov
push
jp
xchg
pop
mov
daa
addr16
addr16
dec
push
mov
gs
mov
js
push
popf
mov
cld
adc
mov
insl
es
loop
lret
cwtl
xchg
lods
cmc
adc
dec
jbe
mov
sbb
inc
dec
fprem1
xor
fidivl
popf
sbbb
or
in
xchg
push
movsb
or
jne
mov
ljmp
das
xchg
xchg
adcb
shl
xor
outsb
fcoms
pop
leave
repz
and
pushf
je
sub
mov
push
shlb
movsl
lods
sub
pop
bswap
ja
arpl
push
lods
xchg
sbb
fstpt
scas
sbb
cmp
inc
dec
out
and
out
adc
or
fwait
aas
fisubrs
or
sarb
or
xlat
insb
xor
pop
sub
fwait
dec
sub
divl
and
imulb
cmp
pop
xor
sub
ja
jecxz
sbb
ljmp
mov
push
gs
fst
divb
mov
movsl
cwtl
xchg
xor
pop
mov
shrb
cmp
adc
enter
or
fcoms
inc
js
push
out
outsl
test
adc
sub
pop
mov
xchg
adc
mov
push
gs
inc
popa
cmpsl
push
lock
mov
sub
lods
jecxz
pop
inc
and
jo
cwtl
jne
xlat
ds
push
sub
ret
incl
add
push
mov
jns
mov
push
pusha
sbb
or
mov
adc
repz
fwait
xor
lret
pop
xchg
lods
cmp
cmp
clc
stc
clc
adc
sub
mov
push
cmp
dec
push
sub
xlat
sarb
lods
loope
test
dec
in
test
xlat
enter
push
nop
std
or
xchg
loope
in
enter
add
fmul
out
cld
scas
pop
push
inc
jns
lahf
aas
adc
pop
pop
mov
scas
xlat
or
data16
sub
aas
lahf
nop
sahf
jl
cmpsb
arpl
aaa
cmp
insb
and
cmpsb
repz
fidivrl
andb
and
sbb
lods
xor
lret
stos
or
les
ja
xlat
bnd
pop
stos
push
mov
or
fistpl
inc
jg
pusha
mov
or
pop
cmp
fistpl
inc
add
xor
dec
mov
jmp
xchg
xchg
push
xchg
fbld
xor
lretw
nop
sbb
cmp
jbe
lock
push
cmpsb
jno
les
cltd
fistpll
shl
sub
mov
nop
call
push
xor
adc
shll
jl
test
outsb
aad
xchg
ds
mov
pop
inc
cs
sub
sti
stos
pushf
decl
jecxz
dec
lret
shlb
mov
adc
icebp
dec
mov
sbb
out
jb
mov
sub
xchg
mov
add
lret
push
popf
mov
fcomi
test
inc
jo
sahf
bound
push
std
mov
das
daa
dec
inc
stc
jmp
cmp
add
push
push
lds
jge
popf
lret
mov
sbb
xor
mov
push
or
sbb
lret
pop
and
cmpsb
clc
mov
mov
and
in
pop
subb
ffreep
lahf
les
icebp
jno
in
mov
out
daa
mov
ret
fs
push
fldl
aas
push
dec
mov
xor
push
jae
mulb
ficomps
mov
jno
into
xchg
adc
jbe
inc
and
add
cmp
enter
and
sbb
sub
xlat
mov
fs
iret
jnp
xchg
fisttpll
pop
aaa
mov
mov
cs
into
movsb
or
jnp
gs
nop
imul
sbb
mov
testl
int3
loop
xor
sbb
cwtl
fldl
ret
icebp
sbb
push
sbb
fbld
fnstsw
incb
pop
push
dec
call
stos
jmp
fldl
out
mov
fs
fcom
loope
and
js
sub
mov
jo
push
mov
jb
mov
sbb
out
or
out
ss
aas
ljmp
jg
add
cmp
lods
mov
push
test
mov
movsl
lods
outsl
adc
xchg
sbb
xor
test
pop
jmp
mov
lock
fs
fistps
leave
pop
push
idivl
mov
mov
adc
ror
xchg
inc
pop
push
sbb
mov
in
adc
pop
mov
inc
sub
ja
adc
mov
sub
rep
and
lock
daa
xor
push
sahf
mov
cmp
mov
rcrl
mov
xor
mov
and
pop
pop
test
std
rorl
pop
lcall
in
mov
jns
outsb
lods
xchg
sar
inc
pop
mov
rcl
and
ljmp
push
fdivrs
aad
mov
mov
mov
adc
jno
sbb
pop
sbb
xchg
pop
inc
cmpsl
and
jae
jno
push
or
mov
shlb
xor
gs
add
mov
push
jbe
pop
arpl
push
sahf
hlt
es
lds
adc
inc
stos
xchg
cltd
mov
xchg
outsb
push
jl
add
jae
dec
jae
mov
mov
stos
fiaddl
add
mov
sub
xor
dec
jns
mov
js
add
jne
call
push
test
pop
ret
or
in
js
mov
ror
inc
cmp
and
ss
pop
pusha
fcoms
xchg
loope
out
fbld
test
adc
jle
mov
lret
mov
pusha
push
jmp
out
push
sub
lods
testl
daa
hlt
gs
ret
mov
sub
ds
push
popa
inc
iret
in
lahf
sub
mov
addr16
dec
and
fdiv
sahf
xchg
or
pop
out
mov
mov
repz
or
pop
dec
out
and
popa
mov
mov
mov
cmc
int
push
in
push
jae
addr16
and
push
mov
mov
ret
js
pop
repz
fsubl
push
stos
sbb
pop
sti
icebp
mov
add
xlat
push
mov
sbb
xchg
in
and
scas
mov
gs
and
xor
cmp
mov
jp
jg
sarb
pop
xchg
mov
jmp
cmp
fnstenv
and
fbstp
inc
push
movsl
dec
bound
addb
pushf
mov
stc
mov
enter
jge
push
mov
push
cli
daa
das
cmp
repnz
lea
add
insl
loop
test
fnstenv
lea
das
jo
or
leave
cmpsb
pop
andb
xchg
nop
jne
adc
sbb
enter
pshufw
dec
enter
mov
pop
je
cmc
and
sarb
jae
sub
or
xchg
jge
loop
pop
ss
sbb
cmpsl
ret
adcb
push
add
ret
cli
clc
nopl
mov
lret
add
jge
iret
ret
lahf
inc
or
clc
cli
mov
sahf
and
in
or
xor
jg
add
sub
jmp
stc
cwtl
xor
jne
xrelease
jecxz
les
mov
or
decb
jp
imulb
sub
xchg
sbb
sbb
mov
push
dec
mov
je
or
shll
les
xlat
cs
add
inc
incl
cltd
hlt
in
in
pop
mul
push
jl
dec
call
js
mov
sub
jo
scas
ficoms
pop
sbb
arpl
mov
lahf
mov
ss
in
dec
pop
pusha
test
test
push
mov
xchg
outsl
movsb
jo
iret
jo
ss
sub
pop
mov
popf
cmp
int
push
mov
sti
incb
jecxz
ret
sbb
inc
dec
push
inc
xchg
pop
mov
das
xor
mov
cmp
sbb
test
mov
jo
dec
fistl
cmp
mov
andb
aam
xchg
jae
mov
dec
stc
sahf
add
mov
in
cmp
in
js
cmp
jae
stc
push
xlat
test
xor
in
mov
sbb
loope
fdivp
pop
mov
les
adc
andl
mov
repz
inc
pushl
pop
ret
sahf
xchg
movsl
inc
xchg
cmpsl
nop
xor
mov
sti
dec
push
jge
fbld
imul
adc
sbb
sbbb
or
call
mov
xchg
jle
push
jno
pop
push
ret
ja
mov
mov
addr16
data16
inc
jmp
push
call
sub
nop
nop
lret
popa
ret
push
std
or
dec
xor
aad
jl
adc
clc
mov
std
adc
icebp
sub
sub
jp,pn
pop
dec
dec
scas
sbb
repz
subl
cld
js
aad
sbb
scas
push
rol
pop
xor
ja
fcoml
cld
mov
addl
sbb
cld
pop
cmc
xor
xor
jmp
subl
nop
mov
push
pop
push
scas
dec
push
mov
xchg
mov
or
in
cmp
sbb
mov
mov
js
mov
test
or
and
mov
pushl
inc
lods
mov
add
aas
jbe
xor
in
dec
mov
inc
das
cwtl
mov
inc
cmp
jg
aaa
xchg
add
idivl
adcb
pop
mov
mov
test
sbb
lahf
dec
jns
int3
pusha
sahf
dec
xor
mov
cld
into
rorl
je
sub
and
mov
sbb
mov
fsincos
push
cli
xchg
pop
or
inc
imul
popf
push
in
dec
lretw
filds
sbb
andb
sti
jo
lods
adc
sub
frstor
cmpsl
xchg
inc
xchg
ds
xlat
sbb
or
cmp
push
orl
mov
xchg
push
push
adc
cli
push
xchg
xchg
push
cmp
in
adc
loop
xchg
inc
test
cmp
mov
stc
js
lret
out
lds
and
aam
insb
dec
push
es
out
into
xor
outsl
adc
mov
cmpsb
and
pop
xchg
cmpl
dec
lods
mov
fnstsw
popa
jae
sbb
xor
lahf
or
xchg
loope
mov
cmp
mov
pop
mov
push
stc
mov
sete
aas
int
leave
sub
mov
clc
mov
inc
fnsave
leave
pusha
loope
push
movsb
or
daa
push
lods
xlat
jns
mov
test
pop
push
jmp
imul
jp
xor
aaa
out
mov
adc
push
dec
push
into
push
mov
mov
mov
push
rcll
out
xchg
popl
fmuls
jne
mov
stos
dec
pop
shll
and
inc
and
jne
adc
xor
or
shrl
lea
pop
mov
fistl
insl
scas
jl
lods
mov
push
dec
mov
lret
pop
or
or
pop
pop
push
arpl
clc
cs
xchg
jo
out
repnz
mov
mov
jmp
in
in
fs
pop
add
inc
pop
fsubrs
push
jg
test
imul
outsb
xor
dec
xlat
fisttpll
inc
jae
lods
and
sub
mov
xorl
push
sbb
inc
cmpsb
pop
cmp
ds
fidivl
or
outsb
in
xchg
or
mov
fmull
cwtl
jmp
cmp
push
int
fidivl
loope
cltd
adc
fsubl
fdivrs
es
add
out
jmp
adc
sub
xor
stc
mov
aaa
mov
mov
and
xor
fldl
sub
ret
dec
rolb
jbe
nop
xorb
dec
sub
loope
sub
inc
xor
cli
fsub
mov
jne
jle
les
test
mov
push
and
scas
or
mov
or
out
adc
fisttpl
shrl
into
mov
xchg
jge
add
mov
leave
lret
cmp
loopne
cltd
cmp
pushf
jl
cwtl
popa
mov
and
mov
cmp
or
imulb
std
ja
adc
and
add
fs
test
xchg
push
adc
cmpsl
cmp
jmp
call
jle
les
push
repnz
rcll
shl
roll
xlat
sub
enter
movsb
movl
inc
jb
ds
pushf
pop
xchg
std
mov
fistps
mov
xlat
xchg
hlt
cld
adc
or
ljmp
or
dec
stos
mov
jmp
std
inc
xchg
sarl
cmpsb
add
push
mov
jae
movsb
cmc
lcall
shr
xchg
sub
imul
out
pop
fwait
pop
mov
das
es
dec
jno
and
mov
push
and
stos
mov
xor
mov
shlb
outsl
in
stc
jecxz
lret
xor
out
daa
adc
mov
lret
bound
rcll
pop
inc
lock
add
jl
xor
fwait
addr16
xor
imul
dec
lret
rcr
lods
jge
adc
lahf
stos
stc
jp
fimull
pushf
cmp
xchg
push
outsb
pop
daa
mov
xchg
sti
enter
push
mov
jl
adc
std
mov
push
js
pusha
ja
dec
inc
jbe
adc
xchg
and
sub
cmpsl
int
fwait
adc
push
out
lock
stos
adc
mov
bound
jns
add
jo
icebp
mov
mov
push
cmp
xchg
or
cmp
test
sub
dec
dec
or
sbb
fisttpll
test
lods
push
rcll
loop
sarb
pop
dec
jp
dec
xchg
repnz
iret
int3
adc
imul
das
test
jmp
outsb
mov
dec
insl
jne
pop
rcr
xor
adcb
jp
outsl
in
lret
subl
imul
and
lods
hlt
arpl
fiaddl
cltd
adc
ss
cltd
push
scas
nop
xchg
repz
mov
add
out
pushf
mov
xchg
fisttpll
jnp
mov
jnp
xchg
sub
addr16
lea
lods
dec
cwtl
loopne
shl
pop
loope
push
xchg
and
shlb
pop
and
es
stc
imul
imul
call
cs
push
out
sub
mov
cld
sahf
xchg
push
call
mov
mov
insl
leave
rorl
int
test
aad
push
adc
ret
jl
adc
sbb
in
es
add
movsl
rorb
insb
cmp
sub
mov
popa
mov
pushf
xchg
cmpsl
mov
add
cmp
mov
mov
pop
xor
scas
dec
rolb
loopne
and
popa
and
cld
inc
fstpt
fwait
mov
fmull
lea
int3
push
in
sub
sub
dec
cmp
leave
pop
fisubl
pop
ja
jl
mulb
rcr
pusha
repz
pusha
add
mov
leave
je
lret
cmc
repz
fists
or
pop
leave
adc
mov
fsubs
std
loope
mov
out
test
mov
mov
loopne
pusha
xor
loopne
jbe
pop
mov
sahf
jecxz
push
mov
mov
mov
pop
dec
cltd
out
int3
jmp
xchg
jg
mov
cmp
mov
xor
clc
mov
mov
int3
jo
sbb
pop
adc
pop
xor
push
xchg
inc
mov
cmp
add
call
adc
mov
fiaddl
or
loop
push
or
jnp
xchg
and
enter
push
movsl
or
dec
test
xchg
mov
mov
cmp
mov
cmpl
inc
or
adc
pop
test
mov
clc
push
ss
clc
insb
inc
xor
mov
dec
lret
mov
das
mov
push
cmpsl
xchg
div
lahf
lcall
cmp
pop
inc
xor
sbb
push
popf
and
dec
adc
mov
pop
mov
pop
and
lahf
sbb
push
fnstcw
hlt
and
call
jge
mov
cmp
cli
pop
mov
in
fsts
sarb
xchg
sub
lods
ja
std
loope
sahf
jb
emms
and
xor
mov
test
ja
nop
add
dec
test
sahf
imul
ret
subb
imul
cmpsb
and
cmp
int
es
push
fs
and
stos
adc
popa
loop
and
and
mov
das
sub
inc
sti
dec
cld
dec
push
jnp
leave
shll
inc
clc
out
mov
cwtl
xchg
xor
icebp
sbb
js
mov
sub
aad
sub
scas
jmp
addr16
ljmp
fdivs
and
mov
rcrl
jbe
and
orl
testl
xchg
int
sbb
dec
or
sbb
inc
incl
rclb
mov
inc
scas
pop
mov
xchg
cmpsb
leave
pop
sqrtps
mov
ficomps
fdivp
ret
inc
inc
cmp
jecxz
inc
push
jb
sbb
sbb
cs
lds
xchg
fdiv
outsl
jae
stos
repnz
pop
insb
pop
adc
sbb
loopne
loope
faddl
sahf
pop
aad
mov
mov
and
mov
sti
add
sahf
push
cs
insl
subb
imul
pop
or
movsb
pop
mov
jbe
xchg
cmp
enter
pop
lock
pop
add
xchg
pop
mov
mov
push
mov
push
in
cwtl
in
loopne
add
popa
xor
cmp
dec
xlat
mov
jge
mov
lcall
mov
mov
and
cmpsl
or
popl
mov
movsb
mov
push
sbb
jbe
stos
mov
stos
push
add
xchg
sub
push
repz
shlb
jmp
cmp
mov
js
adc
lock
xorl
pop
xchg
js
and
xchg
fidivrs
mov
inc
mov
mov
outsl
out
pop
lcall
jg
repnz
and
mov
or
inc
outsl
pop
gs
and
adc
adc
idivb
jne
pushf
mov
pop
push
push
daa
outsb
or
aas
cmp
cltd
cmp
int
shll
leave
insb
shr
pop
pop
add
or
or
mov
xchg
dec
cli
ss
jmp
jg
add
std
or
test
cwtl
xchg
cmp
andb
inc
xor
jle
jmp
std
mov
iret
lods
js
scas
sbb
jmp
in
add
es
gs
aam
xlat
or
ljmp
lret
add
pusha
jecxz
into
mov
in
clc
and
xchg
test
loope
shlb
lods
add
das
popa
add
push
lahf
xchg
iret
lret
push
dec
rol
add
aad
pop
into
test
or
leave
popa
push
les
xchg
sub
leave
dec
in
xchg
lock
xor
in
jmp
jmp
ds
and
ret
inc
or
stc
cs
inc
popl
fmull
lret
in
push
and
test
loope
out
idivb
jmp
and
adc
fcoml
jecxz
addr16
stos
mov
icebp
and
or
imul
push
xlat
out
mov
xchg
ljmp
lret
push
xchg
dec
jo
push
cltd
mov
sbb
push
dec
leave
jmp
leave
push
sarb
sbb
pushl
ljmp
gs
sub
or
fsubrl
dec
pop
cmp
push
mov
or
dec
pop
sub
pushf
adc
ds
dec
cwtl
mov
xor
ja
js
mov
imul
scas
add
insb
or
xchg
or
and
mov
inc
pop
pop
or
gs
insl
call
ficomps
xchg
fldenv
cmc
push
sub
mov
or
mov
adc
mov
adc
mov
xor
xor
inc
std
mov
jbe
aad
pop
lea
sub
mov
lret
cmc
cmp
sub
push
lods
daa
jbe
push
out
and
cwtl
xchg
add
out
dec
pop
imul
sbb
roll
jae
jo
pop
iret
mov
cmc
out
or
sbb
cmp
xchg
add
out
iret
jnp
sub
push
loope
adc
inc
ret
fcomps
hlt
mov
aaa
cmpsl
jbe
nop
add
repz
clc
and
in
adcb
aas
ror
mov
movsl
mov
divps
jb
loop
ds
add
lret
pop
pop
xchg
inc
mov
jecxz
icebp
test
int
inc
mov
or
adc
pop
cmp
fildll
ds
shl
ja
cmp
mov
movsb
testl
outsb
push
mov
dec
fld1
call
xor
ret
ss
gs
adc
pushl
pusha
pop
rcll
xorb
fmuls
xor
out
out
popa
cmp
testl
out
xor
test
sbb
icebp
rcll
jo
adc
sbb
jne
dec
rclb
pop
stc
mov
icebp
cli
in
jecxz
cmpsl
cmc
shll
xor
push
and
mov
ja
pop
jp
outsl
rcll
inc
push
int3
out
jmp
jns
and
lea
sbb
faddl
test
hlt
add
jns
dec
test
xchg
fmuls
sub
inc
inc
test
dec
inc
inc
inc
jg
mov
enter
xor
popf
push
jne
out
das
sbb
insb
xchg
mov
xor
arpl
fildll
aam
arpl
dec
lock
cmc
lock
mov
or
mov
xchg
adc
xlat
mov
xchg
scas
mov
push
arpl
push
ja
fisubs
fildl
lret
subb
and
idivb
imul
je
out
fldl
and
sbb
pop
dec
fxam
dec
popa
out
xor
adc
mov
dec
or
xchg
cli
inc
add
xchg
out
xor
mov
testl
addl
stc
sbb
rol
jb
dec
cmp
sbb
sub
dec
adc
mov
push
inc
jg
testl
mov
push
cmpsl
jns
or
pushf
add
ret
sub
dec
pop
mov
loop
adc
mov
sbb
mov
cmp
enter
or
in
in
int
jns
out
push
movsb
mov
ss
pop
fidivrl
jl
fimuls
mov
cld
loopne
inc
dec
or
inc
enter
aaa
xlat
cld
sbb
pop
in
jno
and
in
dec
inc
stc
jbe
xor
in
sbb
xor
adc
and
jmp
cmc
or
iret
xchg
int3
fimuls
dec
lret
jecxz
repnz
add
int
dec
mov
sbb
dec
mov
push
movsb
mov
loop
or
push
or
dec
sub
icebp
jno
dec
rclb
lcall
mov
les
and
dec
stos
mov
lds
or
mov
xchg
mov
sbb
dec
sbb
shlb
ficompl
push
mov
in
jo
lahf
aaa
push
shll
xor
and
pop
inc
xchg
shll
jg
daa
pop
mov
lcall
dec
rorl
fcomp
mov
jle
mov
lahf
pop
add
aas
clc
lods
and
cmp
divl
repz
xchg
mov
rclb
fdivrs
xor
mov
xor
push
and
mov
mov
xchg
or
mov
popa
pop
and
or
fs
testl
mov
rcr
sbb
cmp
aaa
scas
cmp
mov
or
adc
aam
loope
push
add
mov
repz
inc
jp
pop
dec
adc
leave
shl
sahf
jb
add
adc
sub
dec
mov
sti
xchg
dec
ret
out
dec
repz
and
lock
popa
jns
and
jp
mov
push
sbb
mov
or
mov
in
outsb
mov
hlt
or
mov
addr16
mov
dec
lds
dec
cmp
mov
jmp
adc
or
pop
add
xchg
xor
mov
dec
icebp
leave
and
rcrb
mov
fstpt
aas
shrl
adc
or
mov
jo
cltd
out
ds
add
add
mov
mov
enter
push
std
mov
push
addr16
sbb
mov
jnp
mov
pop
mov
jge
in
shll
aam
neg
in
stc
jbe
cmc
push
daa
mov
ljmp
sbb
int3
movsb
cmp
sbb
fptan
pop
jns
test
mov
mov
mov
iret
push
sahf
dec
or
pop
sbb
inc
cmp
fstl
test
pop
shl
add
push
das
sbb
mov
into
negb
in
addr16
insl
rolb
or
dec
lods
cli
xor
imul
mov
adc
aaa
dec
lods
or
jp
js
adc
dec
jns
std
orb
xor
sti
pop
scas
dec
inc
cmp
dec
into
cli
enter
int
mov
test
or
sbb
cwtl
adc
jns
mov
cmp
insb
aaa
scas
out
fisubrl
stos
inc
dec
enter
imul
xchg
mov
in
inc
mov
sti
sbb
mov
sahf
cmp
fstl
or
xorl
ljmp
mov
add
repz
pop
inc
mov
or
arpl
adc
push
cmp
push
jecxz
shr
dec
into
mov
imulb
ja
vpunpckhwd
fimuls
mov
or
call
leave
cld
inc
valignq
shlb
xchg
mov
cmc
ja
std
lcall
pop
cli
or
jl
sub
pop
out
inc
jbe
or
inc
ficompl
sbb
and
inc
push
mov
sbb
xor
mov
cmpsl
sarb
mov
xchg
sbb
popa
cmp
in
data16
pop
lock
call
push
mov
test
xchg
outsl
pop
int3
cmpsl
mov
push
stos
jl
leave
mov
sti
push
inc
das
in
test
rcr
incl
jne
jo
stos
xchg
jg
jo
jbe
dec
int3
call
lods
adcb
ret
inc
lea
sbb
or
and
dec
stc
jno
leave
call
ss
lret
fldcw
in
and
in
dec
mov
lock
loop
add
test
inc
jmp
and
stos
adc
pop
aam
xchg
add
cmp
sbb
mov
inc
int
in
xchg
fistpll
push
jns
jecxz
movsb
xchg
add
jmp
adc
cmpsb
fiadds
in
pop
xchg
aam
push
lcall
sub
or
pop
jp
in
sbb
jns
inc
shlb
aaa
push
sub
enter
shrb
mov
and
lcall
mov
inc
adc
xor
pusha
stos
call
imul
inc
sub
test
shl
out
jecxz
gs
sbb
push
test
mov
or
sarl
imul
enter
cmp
xchg
bound
lea
fsubl
jge
fxtract
jo
sbb
call
in
dec
and
cmp
loope
dec
mov
push
and
xor
enter
xchg
notl
sahf
xchg
in
and
inc
outsb
and
scas
test
jo
movsb
push
out
cmp
std
aaa
dec
data16
adcl
scas
or
popf
arpl
mov
dec
and
pop
cs
lahf
xchg
addb
shl
cmp
jl
xorb
repz
cmpsb
cmp
mov
movsl
mov
dec
xchg
mov
or
mov
loope
scas
add
aam
inc
dec
aam
xchg
cmpb
test
lods
add
add
in
lcall
test
mov
add
int
mov
aaa
mov
xor
js
inc
add
cmpsl
or
xchg
test
ja
mov
or
pop
lcall
call
jb
mov
fnsave
mov
daa
scas
jp
cmp
fsubl
loop
sbb
cmpsl
pop
ret
jmp
cltd
dec
mov
cs
repnz
inc
inc
and
aaa
jmp
and
fstpl
jnp
and
pushf
jmp
out
cmpsb
sahf
pop
adc
cmp
pop
scas
add
rorb
jno
xchg
jmp
push
xchg
inc
dec
clc
sub
jno
push
pop
xlat
adc
int3
loope
cmp
cmp
lds
fwait
push
xor
pop
pop
dec
mov
test
lock
add
cmp
shll
mov
cltd
sub
hlt
or
add
push
jns
out
push
sbb
add
inc
sbb
adc
push
jmp
std
add
mov
inc
stos
lock
mov
je
ret
xchg
test
outsl
std
dec
cmp
mov
dec
adc
lahf
out
out
repz
fs
imul
cmc
shll
das
add
fwait
mov
sbb
mov
pop
cmc
sbb
aas
xor
mov
cmp
mov
je
xchg
lea
into
push
pop
imul
pusha
xor
pop
and
paddsw
sti
push
mov
jnp
cltd
pop
mov
lock
xor
and
adc
cmpsl
xor
mov
stos
rclb
xchg
cld
cmp
cwtl
nop
adc
mov
incl
das
dec
lock
xor
popa
out
in
fwait
popf
repnz
pusha
fistps
sbb
mov
or
cwtl
sti
or
int3
les
fwait
out
jns
add
stos
or
ficoml
divl
mov
inc
hlt
je
mov
xchg
in
icebp
test
jmp
stos
loopne
add
adc
leave
sbb
loopne,pn
cwtl
dec
push
or
add
es
inc
stc
loope
jne
adc
stos
mov
xchg
cmpsb
dec
out
mov
adcl
imul
mov
add
mov
mov
xchg
pop
and
mov
cmpsl
lret
fldl
lea
adc
aad
jl
jns
enter
jb
or
popa
inc
or
loopne
or
sbb
or
neg
push
aas
mov
and
dec
in
jb
or
mov
out
push
push
xor
xchg
cwtl
mov
es
pop
push
leave
fucom
mov
cmp
sbb
rolb
sub
call
dec
adc
insb
movsb
imul
jmp
xchg
and
or
out
sbb
push
aaa
imul
cmp
or
and
call
dec
adc
or
xchg
mov
testb
and
pop
bound
pop
fdivrs
dec
mov
adc
inc
mov
rcrl
xchg
and
pop
repz
jl
push
pop
std
paddq
inc
adc
jmp
sahf
jo
jecxz
or
mov
jno
sbb
add
cmp
nop
pop
mov
fs
cwtl
mov
or
cltd
dec
inc
into
ffree
test
call
add
push
ss
jbe
jp
daa
inc
sub
fists
mov
jne
mov
dec
in
cli
popf
xchg
pop
js
add
jle
jb
orl
js
fsubrs
lret
push
addb
gs
xchg
int
cmp
xor
jb
xchg
mov
outsb
push
testl
push
pop
fnstenv
mov
scas
push
lock
aam
sub
cwtl
stos
pop
adc
jecxz
sbb
stos
imul
loope
mov
cmc
fldenv
sbb
xchg
inc
xchg
lret
add
arpl
xchg
aad
mov
xchg
and
fmull
cmpsb
sub
cmpsl
jmp
je
stc
push
dec
xor
and
nop
sbb
mov
jns
dec
or
fsts
loope
outsb
push
movsb
mov
mov
xor
fstpl
add
sbb
pop
xchg
hlt
loop
aaa
cmpsl
mov
dec
sub
and
push
sbb
xor
leave
push
inc
dec
scas
inc
fdivrl
mov
mov
pop
xchg
js
push
mov
mov
jbe
push
enter
lods
fstps
sbb
pop
push
mov
movsl
pop
data16
push
jb
adc
xor
lods
jg
call
lret
pop
xlat
arpl
push
rorb
stc
nop
pop
lods
xor
dec
and
mov
bound
inc
imul
js
mov
mov
jl
sbb
fisubl
cli
xor
mov
movsb
cld
sbb
jo
outsl
mov
fwait
shr
and
shll
fsubrp
orb
rcrl
jb
mov
sbbl
in
pop
dec
aaa
call
movsl
mov
icebp
lods
mov
mov
lcall
test
mov
mov
push
dec
xorb
shrb
std
add
or
sti
enter
rorl
into
das
cmpsl
test
out
jne
xchg
loop
mov
pop
sar
fmul
sub
jg
xchg
push
and
dec
xchg
idiv
or
mov
imull
outsl
sub
mov
loop
sbb
or
insb
push
mov
in
test
movsb
pushf
out
cltd
leave
dec
popf
dec
inc
push
icebp
mov
out
pushf
jb
pop
movsl
js
xor
leave
sti
in
sub
repz
dec
mov
push
inc
push
repnz
faddl
mov
add
popf
mov
adc
cmp
pop
cmp
jb
rcrl
sbb
scas
call
push
int3
xor
xlat
popw
push
test
jle
mov
enter
xchg
push
cmp
fcomp
xchg
loop
sub
into
jmp
jns
adc
pop
add
lods
rclb
addb
xor
inc
popf
imul
xchg
cmp
idivb
int3
add
mov
fstpl
dec
insb
mov
rcrb
mov
push
in
sar
lock
mov
add
adc
test
shrb
popa
and
add
dec
cmpsl
push
xchg
jmp
adc
cmp
neg
cmp
jne
daa
ror
mov
shrl
fsubp
popf
mov
cli
adc
xchg
jnp
push
pusha
sub
push
cld
push
in
leave
cmpsb
lret
add
dec
sub
in
testl
cmpsb
sbb
cmpsl
fimuls
dec
fwait
dec
bound
xor
jg
cmc
sub
imul
sbb
addr16
pop
or
jne
push
adc
adc
push
sbb
sbb
lahf
loop
xlat
push
xchg
mov
mov
sub
nop
jecxz
sub
daa
mov
repz
mov
cld
stos
adc
inc
incl
insb
jbe
xchg
xchg
mov
cmp
pop
or
jp
popa
imul
les
mov
adc
mov
add
sbb
fwait
in
xchg
cli
addr16
sub
sbb
push
popa
pop
adc
ja
pop
test
add
inc
mov
out
dec
adc
cmp
mov
inc
mov
xor
int3
popa
and
jge
in
lods
cmp
push
and
pop
xchg
mov
cmpsb
push
lea
mov
jp
mov
cltd
push
cwtl
icebp
pop
push
inc
lods
cmpsl
adc
cmpsl
pop
mov
bound
mov
cltd
adc
shlb
push
inc
inc
mov
mov
sahf
add
pusha
adc
shlb
cltd
cmpb
xor
pop
jge
push
pop
stc
out
outsl
in
cwtl
mov
cmpsb
sbb
sub
iret
hlt
clc
xchg
jbe
gs
add
divb
fsubrl
out
cmp
sub
das
lds
lahf
rcl
jge
pop
idiv
jnp
sahf
xor
jne
mov
nop
leave
cmp
xor
les
jl
popa
arpl
outsb
mov
aas
push
adc
in
pop
sbb
lods
sahf
and
pop
je
lods
and
dec
and
mov
mov
mov
adc
mov
icebp
ret
test
push
mov
fs
fwait
push
mov
pushf
jno
mov
int3
lock
xchg
ds
mov
dec
or
ret
cwtl
xor
cmp
jne
lds
mov
out
pop
pop
cmp
lea
and
cmp
cmp
pusha
insb
mov
adc
mov
cmpsl
sub
js
xchg
stc
jo
inc
mov
lcall
std
mov
aaa
repnz
jp
ja
jg
leave
and
into
xchg
and
std
int
les
popa
pop
insb
movsl
inc
cltd
pop
fcomps
test
inc
sub
pop
fdivrs
push
test
es
sub
mov
test
sub
mov
add
cwtl
inc
decl
iret
std
pop
int3
dec
and
sbb
jne
sub
inc
push
sub
jge
insb
mov
sub
jno
inc
aas
cld
in
pushf
mov
sbb
insb
loop
int
daa
movsb
pop
adc
jns
in
jecxz
shll
lret
xor
jno
pop
lock
pop
aaa
mov
jge
pop
xchg
or
pop
jp
sub
into
mov
jo
pusha
mov
xchg
or
cmp
aaa
fmull
cmp
push
test
addr16
push
loopne
mov
fistpl
fsubp
fidivl
outsb
lcall
push
sub
mov
xchg
or
dec
pop
cmp
ror
out
shl
xchg
mov
shll
repz
mov
sbb
and
pop
faddl
pop
mov
sbb
cmp
testl
je
lahf
aaa
mov
stos
xor
mov
aas
inc
in
cmpsb
sub
insl
gs
in
fdivrs
arpl
mov
push
int
movsb
hlt
xlat
mov
mov
cmp
out
mov
in
out
jle
pop
fcoms
adc
xchg
fiadds
inc
or
inc
ss
mov
and
mov
mov
push
enter
cmpsb
mov
add
xlat
rclb
pop
mov
lods
mov
add
xor
subb
and
outsb
adc
push
xchg
sbb
test
dec
es
xor
push
out
cmp
aad
pop
roll
or
ret
test
dec
mov
shr
bnd
cmc
loop
lret
roll
jae
test
cmc
add
fnstcw
cwtl
es
xrelease
mov
pop
mov
fstpt
mov
ja
mov
test
sub
clc
outsb
in
cmp
pushf
push
xchg
sbb
xchg
push
pop
push
sbb
repnz
inc
outsl
push
jnp
imul
or
adc
das
mov
enter
pushf
out
mov
jge
inc
push
pop
or
sahf
and
outsb
inc
lahf
or
mov
bound
add
sub
lds
hlt
std
loopne
push
icebp
fdivl
jge
stc
cltd
push
bound
sbb
roll
sub
sbb
mov
dec
mov
das
mov
sbb
cmpsb
inc
push
movsl
push
adc
fildl
xchg
mov
ds
test
pusha
mov
mov
jp
scas
xor
sub
aam
sub
xchg
scas
das
jg
cmp
jmp
lcall
pop
push
into
push
ja
or
out
mov
push
popa
insl
dec
or
in
sub
test
outsl
sbb
pushf
xchg
out
repnz
mov
xchg
ret
mov
add
ret
jae
sahf
cmpsl
and
mov
sahf
mov
pushf
lcall
jle
xchg
lcall
sub
pop
mov
xor
sub
adc
sar
shll
imul
sbb
cli
outsb
cld
in
mov
add
adc
push
test
sub
jne
inc
and
loopne
jae
int3
and
jl
lods
sar
jbe
call
pop
lret
repnz
in
lods
or
scas
cmp
mov
js
out
pop
dec
sahf
xor
mov
inc
lds
dec
inc
clc
cmp
aaa
mov
dec
mov
push
repnz
insl
pop
dec
imul
in
xor
cld
clc
pushf
jecxz
and
pop
inc
sbb
push
xchg
push
or
in
sub
push
xchg
shll
or
jne
imul
push
fsubl
xchg
xor
sub
andb
ret
dec
mov
xchg
and
or
dec
imulb
rorl
push
sub
mov
xor
mov
push
imul
mov
add
pop
test
scas
pop
and
cmp
leave
cmc
shrb
dec
add
dec
sbb
lods
lret
mov
loop
adc
call
lahf
cmp
aad
cld
in
xchg
jbe
rclb
sub
xor
push
stos
int3
xchg
xor
mov
push
push
sahf
adc
aad
xchg
addl
rorb
push
or
data16
jo
push
dec
orb
clc
insb
les
add
xchg
cmp
addr16
adc
xchg
scas
cmp
push
and
fsubs
ljmp
ja
push
sub
ljmp
gs
jg,pt
outsl
pop
rcrl
iret
xchg
or
das
mov
loopne
push
loop
in
fld
das
jl
dec
sbb
adc
mov
mov
push
fdivr
inc
or
in
push
in
add
push
xchg
dec
sub
and
rcll
hlt
jnp
fsubrs
mov
lea
xor
jne
xor
pop
pusha
push
add
repz
push
xor
dec
ss
lea
pop
push
pop
inc
mov
jns
sub
mov
mov
xor
insb
inc
adc
fbstp
xor
adc
pop
mov
pusha
nop
mov
in
lcall
shrl
std
cmpsb
test
fstpl
mov
xchg
dec
add
push
rclb
fcomps
add
pop
sarl
pop
int
add
or
or
push
sahf
popf
adc
xchg
xchg
cmp
cmp
outsb
arpl
xor
pop
arpl
mov
jns
adc
jne
or
xchg
xchg
push
jno
scas
icebp
lahf
ljmp
push
stos
push
lods
data16
add
dec
fistpl
jbe
js
enter
cmp
or
add
push
and
cmp
add
std
mov
lret
dec
or
cmpsl
dec
xor
dec
xchg
cs
mov
jb
pop
sbb
sub
sar
mov
fld
jns
std
pop
out
fsubrl
pop
daa
or
pop
mov
cs
das
loopne
add
sbb
or
mov
arpl
cwtl
lock
test
bound
mov
cmp
sub
repz
enter
cltd
ja
std
in
ret
loopne
push
in
lret
cmpsl
les
add
test
or
jns
and
dec
addr16
fadds
push
cmp
cmpsb
or
rolb
enter
inc
imul
call
sbb
sbb
loop
loop
lods
xchg
xchg
lods
xorb
or
aam
fucomi
jg
scas
jnp
or
and
push
mov
or
aaa
mov
mov
mov
mov
fdivrs
int3
inc
inc
in
cwtl
sbb
fisubs
jns
push
clc
pop
lret
push
pusha
lret
ss
das
idivl
lret
mov
aam
dec
ja
jns
jmp
iret
addr16
cmpsb
cli
out
repz
jns
ret
daa
add
mov
insl
pop
inc
mov
jmp
ficoml
mov
adc
push
lods
fwait
add
pop
adc
cmc
or
in
cmp
cmp
cmpsl
jo
loope
inc
xchg
pop
inc
ja
out
cmp
and
fnsave
cmp
inc
inc
out
inc
push
in
into
andb
mov
cmpb
add
pop
aam
pop
aad
pop
std
jns
pop
mov
mov
hlt
enter
lahf
xor
jl
cmpsb
pusha
or
daa
es
adc
aam
les
andl
test
lods
cmpb
loop
pop
adc
jecxz
gs
popa
ret
pop
pop
xor
leave
xor
dec
imul
ds
cmpsb
andl
inc
push
mov
sbb
cmp
xorb
inc
adc
pop
lret
mov
or
xchg
adc
sub
mull
lock
xchg
mov
xchg
outsl
jo
adc
pop
loop
mov
dec
mov
lods
push
cwtl
out
dec
push
adc
jae
in
jecxz
and
std
adc
lods
pop
dec
dec
inc
mov
stc
lods
test
jmp
sarl
das
cmp
test
lock
rclb
adc
push
ror
adc
mov
inc
pop
nop
adc
lahf
sbb
cmp
cmp
gs
call
mov
jb
mov
dec
shr
out
ds
adc
mov
xor
movsl
mov
ljmp
js
jae
add
inc
lcall
aas
ret
scas
xchg
jmp
adc
xchg
pop
in
jns
dec
insl
push
sub
adc
es
pop
inc
sub
lods
xchg
xchg
insb
out
hlt
cmp
mov
leave
je
incb
mov
js
ja
sub
cs
nop
mov
sub
mov
inc
add
fdivrl
add
in
enter
xor
shl
jp
mov
push
xchg
lea
cmp
out
inc
mov
xor
cwtl
fwait
andl
out
push
fstpt
adc
shlb
testl
xchg
shll
jne
or
imul
shlb
dec
mov
jnp
pop
clc
xor
pop
mov
das
call
jl
push
fidivrl
daa
in
xor
cmpsb
cmp
test
ja
lcall
scas
and
sbb
xor
lret
cmpsb
sbb
fistpll
shll
or
pusha
mov
jns
mov
and
xchg
sub
lret
add
dec
jns
sbb
pop
mov
adc
ljmp
shl
sbb
pop
adc
ret
daa
xor
mov
xchg
fnsave
fcoml
adc
fadds
ret
fimuls
cltd
xor
sbb
sub
out
lcall
ret
imul
and
in
dec
xorb
adc
repz
pop
ss
push
ss
aaa
push
call
aas
mov
and
into
out
ss
add
in
push
adc
outsb
mov
mov
jo
insl
add
push
push
bound
movsb
out
sbb
sti
aas
fwait
adc
insb
sub
clc
insl
dec
aam
xchg
xor
cmp
dec
push
out
and
lods
popf
push
stos
push
lret
call
ss
jno
pop
fwait
pop
aad
pop
int3
outsl
mov
sbb
bound
xorl
pop
xchg
addr16
pop
push
pop
jle
jmp
into
or
sahf
mov
sbb
push
xchg
cli
pop
clc
sbb
and
scas
js
dec
outsb
ds
or
pop
hlt
xchg
pop
outsl
icebp
sbb
push
or
aad
sti
das
int
xchg
andb
ja
in
inc
cmpsl
and
cmp
pop
pop
jnp
xor
inc
mov
je
out
pop
dec
push
movsb
push
fcompl
or
mov
push
orl
or
push
test
loopne
enter
mov
jbe
inc
fwait
sub
lods
or
xor
xchg
inc
enter
sti
cmc
outsl
adc
inc
xor
lahf
ret
dec
mov
stc
or
cmpsl
inc
shr
jecxz
out
inc
mov
lea
loop,pn
sbb
dec
int3
insb
sarl
ficoml
popf
rep
cs
sub
nop
jmp
iret
jecxz
xorl
lock
dec
into
aas
push
add
and
sub
sbb
fildll
insb
xchg
inc
jne
mov
push
clc
add
fstpl
ds
outsb
sub
dec
xor
das
incl
push
lods
arpl
xor
jecxz
sysret
in
jnp
mov
addr16
movsl
pop
pop
lea
and
mov
inc
outsb
mov
negb
or
cmp
std
mov
test
test
mov
mov
pushf
xor
negl
stos
icebp
jae
fildl
loope
push
out
jns
out
in
dec
xor
mov
pusha
cld
inc
jo
lds
jge
imul
pop
fs
cmpsl
push
nop
xor
daa
icebp
dec
clc
bound
xor
cwtl
cld
jle
pop
ja
push
mov
gs
test
nop
sub
xor
ja
lret
lahf
movsl
leave
lock
and
dec
xchg
int3
add
scas
cld
mov
fs
test
mov
lods
mov
mov
fildll
gs
setge
push
dec
iret
or
test
rol
lret
pop
cmp
icebp
inc
leave
fabs
sub
nop
mov
xor
loop
add
mov
fwait
dec
push
and
adc
outsb
adc
call
pop
pop
mov
pop
add
sub
mov
outsb
js
xor
sbb
jo
popa
pop
mov
cmp
test
or
fmul
dec
arpl
adc
xor
or
push
ret
popa
xor
test
cmp
gs
popf
nop
test
xor
pop
pop
ljmp
add
cmp
rcll
jae
andl
pushf
les
pop
xchg
pop
aas
daa
sub
icebp
popf
rclb
pop
jno
sbb
hlt
in
fidivl
addr16
inc
mov
pushw
push
popf
enter
cmp
push
mov
pop
mov
push
cmpsb
mov
das
adc
imul
je
add
aaa
xor
je
mov
stos
xor
lret
mov
adc
mov
imul
hlt
pop
imul
adc
cmp
shrl
sbb
ds
test
and
lods
les
popa
data16
or
mov
push
pop
xchg
ret
or
test
dec
imul
jb
jl
sbb
outsb
icebp
fstps
mov
fisubrl
ret
es
shlb
mov
and
jg
cmp
push
pop
dec
sub
sub
mov
xchg
pushf
jno
pop
fnsave
and
xor
push
ficompl
stos
pop
or
adc
xor
sbb
cmpsl
sub
xchg
mov
lea
pop
insl
and
iret
js
cltd
psrlw
dec
add
imul
xor
or
rep
imulb
in
shlb
fsub
dec
roll
pop
jle
and
adc
pop
sub
ja
xchg
and
jmp
ret
pop
dec
outsl
mov
dec
xor
les
push
cwtl
cmpl
inc
repnz
es
int3
js
aad
repz
dec
lods
les
xor
outsl
sbb
stos
aas
jbe
bound
mov
cwtl
rcrl
pop
pushf
shlb
mov
das
insl
hlt
jge
adc
xchg
je
stc
push
jle
inc
iret
and
aas
fstpt
cltd
out
inc
arpl
and
lea
fiaddl
and
mov
sub
dec
inc
jecxz
or
iret
das
sbb
daa
mov
adc
push
gs
pop
frndint
stc
inc
adc
outsl
pop
xchg
push
popa
int3
xor
in
loop
lcall
push
or
xchg
shrl
push
je
mov
xchg
inc
jbe
ret
dec
stc
or
sub
fisubrl
out
mov
add
in
lcall
dec
imul
lret
pop
sbb
cmp
rcr
in
roll
sbb
incl
jl
out
shrl
and
sub
add
push
pop
pop
repz
inc
inc
fistps
lea
dec
out
jne
icebp
adc
sbb
int
sbb
insb
stos
nop
add
movsb
mov
sub
push
mov
cs
sti
adc
and
adcb
and
les
vpmacsdql
cmovb
mov
mov
inc
hlt
aam
push
popf
mov
aaa
int
cmc
lret
or
mov
jmp
mov
fs
mov
stos
jecxz
or
stc
mov
or
inc
aad
pop
notb
aad
imul
sbb
cli
jb
fwait
repz
push
movaps
and
add
insb
ja
fdivrp
lea
aad
loopne
iret
fiadds
cmp
push
pop
adc
insb
push
pop
aaa
pop
lcall
jg
repz
lock
not
icebp
data16
scas
add
cmp
pop
adc
push
push
fwait
mov
sbb
sub
mov
loope
sbb
dec
dec
lcall
out
int
mov
or
pusha
xchg
mov
dec
testl
js
push
dec
ja
mulb
imull
enter
arpl
mov
aad
or
aaa
sarb
mov
in
jns
fwait
sarb
pop
adc
mov
sub
mov
lret
mov
add
and
aam
sbb
pop
negb
loop
sahf
mov
push
lret
daa
xchg
popf
outsb
jb
add
insl
pusha
xor
and
insb
dec
rolb
rcl
js
in
shr
jl
lods
sti
xor
mov
pop
fimuls
stos
or
fisttps
into
inc
lods
sarl
pop
or
cmpsb
arpl
lods
dec
jg
loopne
pushf
loopne
cmp
cmp
jl
dec
mov
adc
sbb
or
push
cld
inc
push
es
cltd
test
push
cmp
pusha
jp
popf
pop
sub
or
mov
stc
or
xchg
std
es
push
ja
js
cli
pop
push
cmp
push
jo
daa
mov
add
aad
or
jg
jmp
mov
mov
xchg
mov
sarb
sbb
pushf
imul
div
pop
mov
lret
mov
inc
add
in
fidivl
dec
cmp
out
out
outsb
sub
sub
sbb
cmp
sub
int
popa
insb
fldenv
mov
xor
dec
roll
imul
jns
repz
mov
cmp
iret
mov
xchg
xchg
inc
sarl
cmp
mov
xchg
daa
outsb
push
mov
sbb
cs
push
jp
je
or
or
js
cli
imul
ret
mov
inc
xchg
movsb
or
mov
push
mov
fs
rolb
dec
pop
pop
out
or
add
and
je
fisttpll
mov
fisubs
je
jbe
jb
mov
stos
mov
cli
xor
jne
fimuls
rclb
jo
push
push
push
xchg
out
shr
xor
bound
imul
loope
cmp
lcall
pushf
add
add
xchg
int3
and
iret
push
aad
aaa
jecxz
js
adcb
jl
sbb
or
jnp
add
lret
ret
out
mov
jmp
in
std
lea
ljmp
stos
mov
cwtl
xchg
popa
mov
fisubs
mov
fwait
pop
addl
xchg
ljmp
imul
call
mov
mov
ret
lea
push
jbe
pop
out
clc
pop
and
sbb
or
pop
out
mov
or
dec
jo
es
insb
push
test
lcall
mov
fcompl
and
loope
test
pop
mov
jo
add
clc
mov
movsb
icebp
xchg
mov
sub
fnstenv
sti
ja
mov
in
jp
fdivrs
pop
mov
jl
and
mov
scas
mov
fsubs
enter
jno
add
mov
mov
rolb
push
push
jbe
cmp
mov
out
sbb
out
ror
or
mov
dec
mov
mov
bound
jne
xchg
loop
and
sbb
cld
jb
ret
testb
fildl
push
pop
cld
inc
cmpsl
fs
fisubrs
data16
movsl
lret
xchg
daa
pop
mov
call
jmp
mov
cli
test
pop
cld
mov
pop
inc
or
jle
xchg
sub
arpl
pop
dec
outsl
inc
xchg
clc
mov
inc
dec
pop
fnstenv
mov
into
out
or
fwait
add
mov
fistl
jne
xor
add
loope
mov
rcr
xchg
in
jno
or
xchg
xchg
arpl
jmp
sub
mov
out
mov
jmp
shlb
push
or
dec
lcall
push
mov
neg
xor
jnp
mov
lret
lret
and
pop
jmp
shr
scas
inc
pop
mov
cmp
fnsave
cmpsb
int
cmpsb
and
lea
sub
pusha
jb
pop
out
pop
test
pop
adcb
les
imul
call
pushf
scas
iret
js
push
jle
imul
sbb
adc
cmp
pop
psubsw
jecxz
push
test
sub
ficoml
in
mov
icebp
ja
add
and
fisubrs
sub
in
push
cmp
clc
fcompl
sahf
push
stos
fs
mov
stc
lock
xor
nop
jne
xchg
jecxz
push
ds
or
mov
mov
mov
cmp
shlb
loopne
xchg
xor
sub
arpl
add
adcl
mov
imul
push
inc
push
out
sub
xchg
data16
fbstp
nop
pop
push
inc
outsb
mov
dec
clc
rcrb
inc
movsb
loopne
nop
sub
inc
inc
cld
add
pop
cmp
imul
out
fs
in
data16
jg
cltd
jmp
in
xlat
pop
add
iret
inc
movsb
add
int3
outsb
mov
addl
adc
sub
into
hlt
inc
add
incb
in
lods
fs
or
std
pop
sbb
lock
adc
std
dec
add
outsb
pop
jno
or
aad
out
push
icebp
mov
sbb
pop
sub
insl
dec
js
cld
sub
leave
push
cmc
dec
data16
les
test
fsts
lret
icebp
lock
mov
fistpll
iret
pop
insb
pop
mov
pop
sbb
rcrl
mov
fidivrl
call
add
xchg
mov
dec
into
mov
mov
jp
movsb
dec
sub
pop
std
je
push
xor
mov
aaa
sbbl
xor
shlb
es
and
mov
icebp
dec
aas
jno
pop
mov
adc
mov
jae
xchg
cltd
addb
pop
stc
test
testl
imul
mov
les
imul
js
roll
jo
lahf
add
shrb
rcrl
jbe
or
je
push
stc
lods
cmpsb
cmp
aas
sti
stos
pusha
movsb
push
ljmp
int3
adc
adc
mov
push
sbb
daa
mov
cld
in
shlb
push
sub
cmp
test
pusha
or
mov
mov
pusha
popa
lahf
stc
pop
add
mov
int
mov
pop
xchg
addr16
cmp
aam
das
inc
movsb
xchg
mov
test
adc
jge
pusha
mov
inc
sub
lea
xor
jb
inc
xor
jne
xorl
sbb
xchg
mov
push
xchg
lahf
not
xor
jo
popa
adc
inc
dec
pop
cld
stc
cmp
xchg
and
pop
xor
outsl
jl
inc
inc
arpl
pop
cmp
cmp
xchg
insb
jl
mov
or
jns
jge
test
add
cwtl
mov
shr
cmp
lods
xchg
inc
inc
subl
add
cltd
popf
adc
je
cs
sarl
hlt
in
nop
xchg
int3
or
test
and
std
ja
mov
add
insb
movsl
sub
add
inc
dec
sbb
sbb
cli
pusha
sub
xchg
mov
orb
data16
push
jp
dec
cltd
outsb
push
nop
jle
xor
pop
add
xchg
mov
fcoml
gs
mov
sbb
jmp
add
mov
out
add
jmp
das
sbb
mov
stos
jo
mov
js
insl
pop
sbb
mov
xor
push
or
xchg
iret
mov
sti
dec
xchg
cltd
je
inc
mov
dec
add
sbb
jge
mov
dec
dec
jbe
insl
cwtl
mov
adc
xchg
into
lret
xlat
out
aaa
enter
and
mov
mov
sub
cmc
mov
imul
xlat
push
aam
out
adc
or
jle
dec
dec
and
push
and
loop
cmpsl
push
mov
adc
mov
cld
pop
mov
es
repnz
cmp
mov
fwait
arpl
pop
rorl
movsl
pop
lea
aaa
jae
xchg
push
xchg
aad
mov
pop
and
lock
aad
mov
ds
leave
mov
xor
popf
clc
cld
mov
test
jp
mov
lret
mov
fnsave
ficomps
add
pop
imul
in
add
lods
mov
sbb
push
jecxz
mov
int
call
mov
stc
cli
inc
xchg
scas
pop
add
out
pop
stos
push
ret
int3
fsubs
mov
sbb
mov
aas
sub
outsl
xchg
jp
push
cmp
inc
scas
mov
ljmp
mov
lock
pop
push
movsl
iret
mov
sbb
inc
fwait
jecxz
in
repz
push
lahf
int
cmp
sub
inc
mov
mov
xor
mov
xchg
int3
lahf
or
je
sub
inc
dec
aaa
mov
scas
xchg
push
iret
push
sub
cmp
mov
mov
fdivrl
shl
cmp
leave
cmp
in
lcall
push
add
popf
call
or
aaa
and
adc
push
inc
mov
ficoml
loop
jns
and
inc
das
push
jo
adc
mov
xor
cmp
or
cs
fstl
jo
inc
sbbb
aam
jp
pop
and
leave
pushl
neg
cmp
test
mov
add
mov
cmp
je
fildll
out
leave
push
pop
sbb
inc
jmp
mov
das
jno
daa
adc
test
test
mov
andb
je
hlt
cmp
ja
test
test
adc
push
sub
cwtl
or
insb
fmull
gs
and
xchg
xchg
lock
mov
rcrl
shlb
std
in
jne
test
mov
sub
mov
add
sub
sub
shlb
mov
lods
inc
fcompl
push
mov
mov
cmp
mov
rorb
adc
pop
mov
and
dec
sbb
call
push
pop
jp
push
addr16
faddl
js
jne
gs
aam
popa
jmp
xchg
ret
lret
cmp
cs
cwtl
subl
push
jns
fcomps
scas
movsb
jmp
test
adc
push
and
add
dec
out
sbbl
popa
xchg
loop
aam
add
mov
aas
das
enter
dec
xor
mov
pop
sbb
dec
push
aaa
rcrl
test
xor
mov
inc
jp
mov
mov
push
imul
push
cmp
ljmp
push
mov
aas
rcrb
dec
dec
pop
jl
stc
push
outsl
shlb
or
movzwl
jnp
nop
sbb
add
decl
cli
fnsave
loopne
xchg
aas
loop
movsb
inc
inc
fcoms
gs
push
cmp
inc
and
std
mov
cmp
sti
xchg
stos
or
lcall
lds
and
mov
hlt
pop
sahf
adc
ljmp
inc
mov
xor
and
mov
imul
jae
or
inc
add
addr16
add
and
mov
out
loope
sti
test
insl
mov
arpl
gs
mov
popa
or
lods
lret
jno
repnz
cmp
mov
jns
mov
lods
adc
iret
addl
into
pop
dec
outsl
or
jnp
push
adc
cmp
loopne
scas
sub
xchg
insb
cmp
jge
nop
push
outsl
cli
mov
aad
sbb
or
shrl
mov
out
xor
push
jl
lods
dec
aaa
xchg
cld
lds
aaa
cmpsb
mull
call
push
pop
das
test
pushf
dec
cmp
add
mov
stc
push
or
ja
call
xor
mov
shrb
pop
in
jl
mov
shrl
je
mov
xchg
mov
jmp
int
jae
xchg
dec
into
int
adc
sub
sub
push
scas
das
lret
fcmovbe
mov
fildl
push
mov
inc
cmpl
xchg
int
sbbb
inc
adc
mov
shlb
push
mov
jae
cli
arpl
es
add
rol
std
mov
and
imul
jmp
xor
sti
xlat
lret
es
in
inc
in
add
nop
rcll
push
push
test
imul
jge
push
aaa
adc
loope
stos
jmp
cmpsl
mov
xor
addb
mov
vaddsd
iret
dec
lea
in
inc
or
and
mov
es
and
xchg
test
cld
or
inc
mov
mov
mov
sub
popf
add
mov
arpl
mov
sbb
insb
call
inc
or
mov
or
insl
mov
ljmp
sbb
push
ret
call
xor
test
mov
push
adc
gs
jmp
addb
mov
xchg
std
lods
cmpsb
jecxz
jns
cmpsl
mov
incl
lea
jp
jle
sbb
pop
int3
push
nop
sbbl
in
cmp
sbb
sbb
adc
or
test
sbb
mov
xor
pop
in
jnp
test
pop
mov
movsb
adc
sbb
mov
in
cmp
jge
xchg
xchg
inc
sbb
test
pop
pop
mov
dec
pop
push
hlt
mov
xchg
xchg
lcall
arpl
mov
lcall
loop
or
push
cmp
xor
int3
les
jns
cmp
lahf
lock
push
popa
rorb
aad
mov
jnp
call
out
fdivs
mov
lock
lret
cmp
mov
sbb
mov
pop
lock
ss
scas
gs
addr16
divb
shr
pushf
and
pop
pop
sbb
jp
js
cmp
inc
icebp
adc
movsl
inc
or
inc
ficompl
outsl
jg
or
cmp
les
push
inc
or
out
xor
out
xor
out
and
out
sbb
pop
movsb
mov
xchg
jg
mov
ljmp
ret
mov
in
pop
ret
adc
repnz
push
nop
dec
popf
addr16
rclb
xchg
adc
push
negl
mov
cmpsl
xchg
cmpsl
aad
mov
lahf
cwtl
mov
inc
aam
inc
cmp
imul
fstl
pusha
jns
lret
push
loopne
cmpsl
mov
ja
dec
repnz
sahf
sbb
sub
xchg
push
fs
jge
mov
ljmp
and
enter
xor
adc
push
inc
jge
mov
or
fs
out
es
push
xor
ds
fsubl
aas
call
stc
jb
stos
pusha
mov
xchg
pop
enter
arpl
xor
xor
pop
xchg
inc
push
push
mov
jne
rcrb
jae
push
inc
insl
data16
fwait
ja
movsb
sbb
in
and
inc
in
dec
mov
scas
jp
icebp
jns
add
out
dec
pop
pusha
sbb
jg
mov
push
push
xor
dec
or
shr
cmp
jne
jae
xor
push
adc
xor
and
adc
add
fucom
sbb
iret
adc
aad
pop
call
inc
mov
std
dec
dec
or
loop
insb
xchg
sbb
test
out
sbb
cwtl
sbb
jle
ret
popf
nop
aad
fstpt
xchg
das
fsubl
stos
sub
pop
addr16
cli
xchg
mov
jge
cmc
sbb
insb
inc
sub
pop
pop
popf
cs
and
ret
xchg
lret
dec
hlt
push
inc
scas
js
mov
fcoml
into
scas
push
iret
mov
jo
nop
sbb
add
cs
int
xor
bound
in
and
flds
push
add
cmpsl
clc
cmp
pop
cmc
movb
add
cmpsb
out
incb
adc
cli
cmp
call
stc
jle
xchg
cmp
jne
out
sub
in
out
add
or
out
and
repz
jg
sbb
imul
xchg
and
xchg
mov
jbe
int
mov
test
cmp
pop
leave
cmp
shlb
fsubrs
mov
push
jecxz
xchg
xchg
mov
sub
xor
xchg
sarl
adc
cmp
xchg
dec
dec
in
inc
aam
sub
ret
mov
pushf
jo
mov
or
dec
pop
les
mov
inc
xor
andb
mov
and
and
adc
rcll
ret
fcoml
sbb
xchg
cmc
int
loope
bswap
cmp
or
or
dec
and
cmpsl
lret
push
jno
js
lods
in
cli
fisttpll
pop
das
popf
sbb
xor
test
jbe
cmp
insb
imul
xorb
int3
ficomps
aas
mov
sub
dec
xchg
stc
mov
aam
inc
dec
push
rolb
dec
int
xchg
xor
dec
inc
stc
ljmp
shlb
mov
call
movsb
iret
cld
dec
popf
icebp
add
add
or
mov
mov
dec
xorb
mov
ss
xor
jmp
mov
cltd
mov
add
das
shll
popa
inc
inc
rcl
cmpsl
jecxz
arpl
push
push
cmp
pusha
jl
push
sub
xor
jbe
adc
jp
out
sub
xchg
movsb
jmp
sbb
mov
or
mov
xor
daa
out
enter
fs
fs
adc
cmc
bound
sub
pop
push
pop
push
push
outsl
ret
dec
aam
les
lea
sarb
ret
js
push
iret
mov
out
fldl
mov
jmp
arpl
aas
xchg
ljmp
xor
pop
lea
addr16
mov
sbb
and
movsl
or
push
dec
nop
xchg
xchg
adc
inc
jmp
outsb
pusha
add
mov
pop
push
mov
xchg
sti
sti
mov
test
mov
and
jmp
dec
es
lods
sbb
push
mov
and
lret
stos
imul
jecxz
sub
pop
punpcklbw
in
mov
addr16
lods
lock
movsb
inc
dec
cmp
push
daa
cmp
fsubrs
push
inc
gs
ja
rol
data16
xor
dec
cmp
pushf
scas
mov
sub
and
in
sub
cmp
shrl
dec
or
ffree
xchg
movsl
inc
xor
fnsave
xor
mov
sub
decb
dec
mov
lock
fwait
add
das
push
iret
rorb
fsubl
fmul
mov
fdivrl
call
xor
loope
fdivl
cwtl
pop
inc
stos
xor
out
les
jp
daa
cmp
pusha
xchg
adc
add
iret
pop
add
shlb
cmp
pusha
lret
push
arpl
cmp
loop
fdivr
fcompl
xchg
jmp
jae
test
ds
scas
push
xchg
arpl
xlat
sub
test
mov
pop
icebp
imul
dec
and
pop
into
jo
xor
mov
mov
xor
rol
sub
iret
int
push
cs
jmp
jge
insl
add
test
xchg
xchg
ret
inc
push
pop
jae
pop
lock
and
je
ljmp
mov
loop
mov
fcmove
or
inc
inc
nop
adc
xor
into
jno
jmp
mov
xchg
add
or
jo
pop
pop
mov
or
mov
push
push
xor
lea
movaps
adc
cltd
lods
rolb
pop
sub
jecxz
mov
push
mov
push
scas
mov
or
ror
push
clc
add
push
mov
popa
or
insb
xchg
mov
orb
fsin
in
push
pushf
xchg
scas
frstor
lock
adc
jp
sub
xchg
pop
or
imull
sub
pop
stc
xchg
frstor
fxch
outsb
sbb
push
rclb
int3
and
ss
fcompl
ret
cwtl
fnsave
movsb
xor
push
rorb
outsl
outsl
push
lret
int
pop
pop
clc
std
or
jle
cs
sbb
sub
or
lea
shl
xchg
mov
pop
sub
xor
into
mov
leave
push
aam
lds
in
das
test
std
pmaxsw
cmp
fsubs
subb
arpl
push
mov
cld
push
or
cmp
lds
cmp
push
mov
jmp
dec
sub
mov
xor
imul
int
xchg
outsl
and
es
lret
jae
icebp
mov
push
xchg
aad
add
add
lods
fistpll
xor
filds
out
clc
pop
pop
and
scas
mov
push
enter
outsl
and
push
and
jmp
stc
ficomps
cmc
sub
add
xor
inc
push
jp
add
lahf
sbb
jg
jmp
mov
stos
movsb
pop
cmp
or
incl
dec
negb
add
push
mov
fwait
mov
pusha
cmp
adc
jp
aad
fdivrl
cmp
sub
xor
std
sub
aam
pop
out
xor
or
or
testb
pop
and
jp
cltd
sar
push
sarb
cmp
or
lds
sbbb
pop
imul
mov
arpl
leave
xor
xchg
out
pop
pop
push
pop
adc
pop
jne
lret
imul
push
fwait
movsl
sub
sub
std
or
adc
mov
cmp
faddp
sub
mov
clc
pop
insb
sbb
jl
repnz
mov
lods
arpl
jecxz
inc
mov
push
xor
test
and
dec
push
test
mov
jno
daa
andl
jmp
adc
outsl
movsb
orb
in
lods
lcall
mov
xchg
aas
jecxz
imul
jno
sahf
xchg
xor
aas
cmp
loope
fimuls
daa
add
ds
mov
push
cmp
pop
mov
add
xlat
and
pop
rolb
dec
push
out
cli
lahf
push
pushf
fsts
jno
mov
pushf
movsl
lods
push
aaa
cmpsl
in
cltd
jmp
outsl
mov
lcall
push
repz
jp
adc
repnz
lds
pop
push
push
push
xchg
int
xor
js
push
add
inc
fildl
jae
adc
pop
fxch
imul
in
out
mov
inc
cltd
int
pop
pop
aam
addr16
or
mov
and
xlat
hlt
call
dec
aam
adc
in
in
pushf
xor
xchg
lods
cwtl
and
mov
clc
aad
xchg
mov
sahf
xor
loopne
flds
sub
nop
push
and
add
mov
xchg
mov
neg
dec
out
cmp
ja
push
cs
fcomi
xchg
dec
aas
test
lret
cmp
push
push
sub
xchg
and
mov
cltd
lock
out
xchg
xchg
stos
mov
adc
int3
out
dec
xorl
cli
inc
fidivs
sub
repnz
rcrl
hlt
outsl
mov
or
jmp
iret
out
jne
cmpsl
aas
repz
and
test
in
jp
icebp
inc
push
mov
out
test
ret
mov
ret
jmp
jbe
push
shlb
movsl
dec
mov
fsts
ss
or
mov
sub
dec
movl
push
jo
sbbb
mov
jmp
jl
mov
or
test
mov
and
cmp
mov
repnz
repnz
dec
iret
lods
pop
sti
movsl
loop
out
pushf
aas
loopne
xlat
ds
sub
mov
xor
xor
movsl
mov
test
jb
int3
pop
xchg
mov
jl
mov
shl
test
test
bound
mov
lds
fsubp
shlb
cltd
insl
and
orps
cmp
sub
add
dec
fldcw
xlat
add
out
sbb
pop
rcl
nop
jecxz
roll
or
mov
pop
out
and
loope
sub
mov
or
pop
hlt
cltd
mov
cmp
aaa
add
rcr
push
push
popa
enter
repz
push
mov
addr16
imul
scas
dec
gs
jmp
push
inc
dec
shlb
imul
adc
or
lock
cld
shlb
mov
insl
pop
pop
pop
and
xchg
addb
and
xchg
mov
mov
pop
out
and
call
repz
fstpt
loop
and
out
jmp
hlt
dec
adc
jne
in
push
out
pop
xchg
cld
xor
call
jp
lahf
shrl
mov
shrb
or
push
mov
stc
push
fbstp
repz
cmc
dec
add
push
dec
lds
adc
sti
cmp
mov
loopne
rolb
pop
sbb
addb
inc
dec
out
pop
xor
ret
imul
cmp
sub
fists
cmp
pop
jecxz
out
mov
or
pop
cld
cltd
pop
sbb
xlat
dec
mov
fwait
bound
icebp
mov
dec
loop
sub
addb
fs
loopne
adc
pop
xor
xor
ret
xor
popa
mov
cmp
idivb
xor
xchg
fdivs
sahf
outsb
sbb
rclb
cmpsl
in
gs
mov
adc
cmpsb
clc
cld
mov
push
adc
add
jb
dec
cmp
sub
insl
in
xor
stos
sbb
jns
in
cmp
outsb
push
cmp
lods
pmaxub
leave
adc
jle
dec
fpatan
push
test
int
xor
mov
sbb
out
sbb
insl
cwtl
paddw
or
pop
dec
sbb
jne
das
sub
xor
xlat
jnp
push
shr
leave
out
push
movsb
repnz
or
xor
add
pop
fsubrl
jns
test
rcr
fbld
xor
pop
pop
bound
pop
xorl
cli
adc
movsb
adc
xor
mov
xchg
mov
hlt
jno
cmpsb
sar
fcmovnb
add
loopne
push
or
sarb
cmc
dec
add
push
fucomp
ss
repnz
repz
je
cmp
lcall
sub
inc
inc
sti
clc
test
ja
jge,pn
addr16
jl
fs
bound
pop
jecxz
pop
inc
in
sub
mov
add
mov
mov
imul
leave
cli
rcll
adc
push
mov
adc
aam
stos
pop
pushf
js
pop
sbbb
ljmp
push
ja
ss
sbb
lea
jle
or
push
mov
adc
stos
jb
ja
mov
pop
test
inc
movsb
mov
jbe
pushf
lcall
mov
dec
fwait
xor
dec
or
test
xchg
push
in
insl
mov
inc
rorl
pop
cmp
and
mov
je
pop
mov
sub
sbb
stos
cmp
test
push
pop
pop
sub
fs
jns
mov
bound
sysenter
pop
jbe
int
jae
scas
bound
inc
xchg
shl
mov
sti
fisubrs
cmp
test
add
pusha
js
shll
cmp
mov
lods
roll
int3
push
rorb
xchg
scas
and
rorb
mov
jle
sbb
push
repz
adc
sub
mov
das
sbb
and
ret
xor
cmp
xchg
pop
ljmp
mov
jl
jo
in
rorl
jl
sub
pop
call
sub
add
push
dec
call
daa
stos
and
lea
popf
std
fistps
lret
mov
jb
mov
int3
push
loopne
ds
pop
xor
push
xor
jmp
mov
jle
sarb
xchg
or
stos
clc
mov
push
jne
pop
or
mov
sbb
mov
nop
inc
push
push
arpl
sub
mov
call
sub
filds
in
xchg
jno
lea
pop
cmp
pusha
push
stos
in
ljmp
fs
jp
insb
sub
jp
and
ja
push
inc
push
inc
mov
push
in
push
jmp
outsl
push
adc
mov
imull
xlat
in
push
mov
mov
dec
cwtl
xor
adc
push
imul
or
mov
fisttps
add
push
xor
dec
cmp
iret
pop
add
cmpsl
mov
leave
mov
inc
inc
xchg
je
sbb
add
pop
push
jno
push
and
and
pop
mov
bound
aas
inc
push
sbb
stc
cmpl
aaa
ret
clc
jne
std
repnz
call
mov
andb
in
aam
adc
or
pop
outsl
test
mov
push
push
push
loop
mov
xchg
lret
lahf
or
or
sbb
lcall
pusha
das
into
push
pusha
sub
mov
das
call
adc
dec
nop
aam
push
xchg
xchg
leave
mov
outsl
sbb
pop
jnp
push
test
cli
cld
pushl
imul
sub
push
es
mov
sub
rcll
jge
dec
lahf
in
call
sbb
cmp
sbb
pushl
mov
ret
mov
mov
mov
dec
mov
cmp
cld
imul
ss
sbb
fcomps
pop
mov
lock
test
mov
add
imulb
mov
and
fbld
mov
push
in
shlb
sub
jl
or
fldenv
adc
ljmp
je
pop
test
and
mov
or
iret
or
dec
mov
xor
ret
push
add
sahf
push
jl
cmp
xor
int
lahf
nop
dec
mov
jbe
loopne
lcall
arpl
mov
pop
stc
scas
mov
out
sbb
pushf
dec
mov
mov
loopne
push
lds
cmpsl
and
pop
aaa
pop
ret
enter
loope
add
pop
popa
inc
int
ss
mov
inc
and
pop
push
call
mov
arpl
js
mov
xchg
pop
icebp
mov
dec
lds
sbb
lret
cli
mov
je
inc
daa
jnp
shrl
cs
ja
dec
ds
pop
jl
jo
rol
enter
test
clc
push
into
fucomip
sub
mov
adc
out
mov
in
mov
jl
or
daa
cmp
xor
inc
xchg
sbb
jns
or
cwtl
insl
inc
sar
push
fsub
sub
xor
lds
in
push
divl
in
imul
mov
popf
pop
inc
mov
jl
mov
sbb
test
sbb
lcall
js
cmp
xorb
adc
xchg
cmp
sub
jle
inc
xchg
test
rcrl
out
arpl
and
test
aaa
dec
test
js
pop
and
inc
xor
mov
arpl
jae
scas
repz
jp
loopne
or
push
outsb
push
cltd
pop
pop
fwait
mov
ljmp
fcoms
nop
push
int
loopne
les
sbb
lock
pop
sti
pop
mov
and
int
mov
cmp
inc
faddl
pop
add
xor
cmpsb
adc
jl
icebp
pop
shlb
ss
rol
cmpb
cmpsb
push
int
ja
xchg
dec
outsb
or
jge
inc
out
sub
jae
sahf
fnsave
outsb
ffree
imul
ret
loope
add
mov
in
popf
cmp
das
and
std
push
push
fmul
push
mov
andb
xlat
scas
or
jle
xor
imul
lcall
or
or
sti
sub
or
rcrb
ds
pop
fidivs
adc
fcoms
push
js
test
cltd
sbb
lret
mov
jle
scas
and
mov
pop
rorb
fwait
xor
mov
es
jb
loopne
adc
or
dec
in
flds
sbb
cmp
test
xchg
stos
or
cmp
ret
xchg
or
jne
imul
getsec
enter
xchg
cmc
mov
scas
fcmovbe
sbbb
clc
shll
addb
sub
pop
aam
sbb
push
loop
cmpsb
xchg
fs
jl
fs
jbe
out
outsl
sbb
repnz
jecxz
arpl
push
xlat
cmp
mulb
fcmove
cmp
jno
pop
test
adc
das
add
mov
in
pop
push
loop
push
sbb
lret
leave
mov
bound
idivl
or
subl
sub
lret
adc
inc
push
sub
out
push
add
xchg
inc
pop
imul
das
test
inc
in
pop
stos
shlb
or
dec
loope,pt
mov
popf
sbb
mov
mov
mov
stc
inc
mov
addr16
xchg
loope
dec
cld
xchg
scas
es
xor
xchg
or
push
data16
push
add
insb
and
jmp
sarb
leave
sub
dec
xor
scas
pop
addr16
cltd
test
aas
pop
jo
rcll
aaa
inc
mov
test
adc
ret
mov
les
lods
stos
sbb
or
jmp
jns
data16
push
pop
aas
mov
gs
pop
pop
cmp
sub
pop
xor
dec
push
lret
dec
pop
push
insl
insl
pop
adc
jne
subb
stos
rcrb
mov
stos
push
xchg
fdivs
pop
movsb
jbe
clc
popf
jbe
pushf
mov
stos
or
pop
adc
shld
cmp
test
xor
xchg
push
inc
int
adc
movb
jns
mov
lock
pusha
insl
sbb
arpl
in
xor
lock
mov
sti
aam
mov
out
xchg
push
push
int
inc
add
icebp
movsb
les
sbb
movsb
mov
xchg
push
sub
pop
push
jp
adc
mov
loop
push
fcmovu
into
lods
mov
in
or
out
xor
popf
cmp
lea
dec
je
mull
lds
out
jle
fdivs
ljmp
mov
cmp
inc
xor
add
aad
fcmovnbe
in
ret
in
aad
inc
cld
push
mov
jmp
in
cli
inc
stos
es
mov
iret
nop
and
pop
jae
xchg
xor
dec
test
and
popf
adc
test
adc
mov
fstl
push
clc
shrb
pop
pop
repnz
fchs
test
outsl
xchg
stos
mov
inc
fstps
enter
iret
orb
cmp
icebp
ret
pusha
iret
stos
and
lret
and
and
mov
mov
movsl
jns
pop
stc
mov
or
test
sub
push
dec
inc
jbe
int3
xor
out
jno
jg
lea
xor
out
ljmp
call
jg
enter
ss
add
scas
lods
int
jmp
cmc
sbb
clc
add
ss
dec
mov
push
inc
hlt
lock
mov
xor
out
in
shll
pop
lcall
push
and
ljmp
cmp
xchg
mov
sbb
and
insl
xchg
imul
push
mov
out
push
push
gs
xchg
cmp
ficoml
fisubrs
xor
jl
out
sti
ljmp
jp
sarb
mov
adc
and
stos
cmp
push
dec
lahf
shl
sbb
adcb
jb
lock
jge
push
bound
sbb
sbb
aaa
outsb
loop
jecxz
sbb
ret
xor
jnp
popf
hlt
test
imul
pop
inc
pop
les
data16
test
xchg
repnz
je
mov
mov
mov
aaa
test
jg
popa
in
cmpsl
sti
sbb
insb
add
fwait
mov
xor
shl
scas
ja
dec
lds
pop
data16
scas
xchg
out
cld
shrb
push
sub
test
test
jg
roll
push
pop
in
outsb
das
and
push
cld
adc
inc
pop
pop
xchg
xor
lea
add
jo
mov
adc
cmp
repnz
or
inc
adc
lock
ret
cltd
repnz
and
out
out
mov
dec
push
out
sub
movsl
sbb
pop
das
in
out
or
jl
pop
dec
mov
fnstcw
insl
inc
xchg
mov
popa
mov
testl
ret
cmp
push
add
cmpsb
rcll
loopne
dec
xchg
aaa
addl
imul
sbb
adc
jl
aas
outsl
loop
loopne
mov
adc
pop
decb
cmp
sbb
fisubrl
cmp
mov
loop
cmp
ljmp
aaa
stc
pop
mov
pop
jnp
and
add
arpl
mov
out
int
cmc
test
idivb
testl
xor
pop
sub
cltd
or
or
mov
xchg
inc
lea
sub
dec
push
ljmp
push
push
je
in
pop
repz
lea
xor
adc
add
fstps
mov
sbb
fcoms
or
and
shll
push
xchg
and
lods
stos
lcall
movsb
sub
sub
xor
push
push
lahf
and
dec
push
push
push
testb
pop
add
add
adc
and
xchg
fldl
lock
cmpsb
push
jae
jp
adc
enter
adc
imul
test
push
jnp
les
add
xchg
push
movl
in
push
cmp
mov
mov
test
in
jle
stos
dec
pop
cmp
push
xchg
fldl
jb
cmpsb
xor
hlt
add
fiaddl
sbb
pushf
sahf
add
cmp
std
js
jge
lods
sub
xchg
mov
jae
test
inc
cmpsb
je
pop
lock
stos
push
and
lods
sbb
test
jae
dec
dec
jge
add
out
les
scas
fcmovne
push
popa
outsb
xlat
test
and
aas
xchg
or
sti
outsb
sub
fcomip
xor
int
mov
sbb
or
push
movsb
negl
mov
sahf
jmp
loope
sbb
test
rcrb
cs
lea
stos
cmpb
rcl
lret
sbb
cmp
mov
js
sbb
scas
insb
or
pop
in
andb
xchg
inc
gs
out
addr16
imul
int
push
jns,pt
dec
fsts
mov
shll
mov
add
push
int3
push
pop
xor
jne
sub
xor
push
xchg
adc
mov
mov
dec
xchg
js
movsl
insb
sub
xor
jne
sahf
sti
and
ret
out
rcrb
xchg
movsl
out
pop
and
scas
push
sbb
mov
loopne
sbb
jle
and
test
cmp
popf
ret
test
mov
dec
rcll
mov
jmp
dec
push
cmp
outsb
and
xchg
jae
dec
push
sub
fmull
imul
xchg
les
mov
imul
xchg
fldln2
ret
out
xor
xor
add
jbe
rolb
push
lock
mov
arpl
mov
dec
popf
or
xchg
push
lods
fidivrl
push
ljmp
cmp
in
sbb
cli
nop
fcmovb
and
pop
pop
push
mov
inc
adcl
xor
dec
jge
or
xchg
pop
test
jnp
cld
and
cmp
bound
xor
sub
shll
or
xchg
mov
sbb
mov
cmp
or
xchg
lds
sbb
cmp
bound
inc
mov
and
push
imul
inc
push
inc
mov
enter
lods
push
xchg
or
fisttpl
out
xor
jmp
imul
cltd
push
movsl
test
int
jp
jno
cltd
loopne
add
xchg
cld
in
dec
inc
imul
sahf
sub
pop
add
mov
mov
push
ret
pushf
jge
repnz
mov
stos
ja
push
repnz
mov
mov
fstl
ja
push
lret
lods
iret
cli
pop
ss
adc
cltd
mov
sub
pop
aam
and
mov
fucomp
das
sub
mov
cmpsl
mov
call
pushf
pop
mov
pop
inc
sahf
fsubs
lds
pushf
cmpsl
repnz
sub
mov
lahf
cmp
int
jo
ja
push
lret
aam
add
clc
mov
imulb
aaa
loop
and
inc
or
mov
push
std
and
mov
sub
je
ret
xor
lcall
pop
add
xor
sub
pop
repnz
xchg
sub
push
ror
test
push
mov
ljmp
sbbl
xchg
or
inc
enter
in
incl
test
or
cli
mov
test
and
push
add
imul
lds
mov
cs
xchg
and
rolb
adc
ds
inc
mov
cmp
pop
sbb
enter
jno
push
in
pop
inc
jle
faddl
into
insl
or
shlb
and
ds
mov
iret
sub
or
dec
mov
xchg
sbb
dec
int3
movsb
and
push
shl
mov
adc
or
push
addr16
jle
xchg
xrelease
mov
jl
lock
pop
sbb
rcrl
ror
cmp
pop
pop
mov
cmc
dec
loope
test
aas
icebp
mov
pop
inc
add
rcl
ljmp
enter
xor
sub
and
mov
loop
sbb
sarl
mov
dec
psubusw
add
jl
and
cmpsl
mov
jmp
pusha
stos
dec
js
cmp
shrl
inc
jmp
insl
repnz
cli
dec
fneni(8087
out
pop
mov
sub
lcall
xor
xor
mov
push
push
scas
sbb
imul
sarl
and
xchg
jge
popa
lret
outsl
push
fistpl
mov
shlb
hlt
cmp
daa
cmp
orl
shr
mov
mov
enter
das
lods
into
and
mov
or
int
mov
or
sbb
dec
dec
insl
int
out
out
xor
adc
mov
lds
test
pusha
subb
or
inc
aam
orps
je
dec
xchg
mov
frstor
stos
jns
or
mov
xor
test
aam
jl
imul
mov
ret
cmp
add
jmp
xor
or
cltd
popf
adc
pop
push
cmp
test
push
xor
push
gs
imul
fcomps
insl
jecxz
sub
movsl
enter
stc
and
push
or
rol
jo
fucomip
je
sahf
pushf
push
mov
aaa
ret
mov
adc
insl
clc
push
test
dec
outsl
jmp
stos
xchg
aam
fwait
gs
mov
fsubrl
pop
dec
or
push
mov
push
adc
cmp
jbe
mov
cmp
adc
push
push
mov
mov
pushf
and
fsubrs
sub
push
imul
pop
cltd
sti
sbb
jmp
in
test
push
mov
lcall
popa
inc
in
out
sub
in
cmpsl
scas
push
int
ljmp
xchg
mov
pextrw
bound
roll
sarb
fcmovb
xchg
xor
cmpsl
sub
sahf
dec
mov
jmp
push
inc
sbb
xchg
mov
js
imul
push
not
cmp
pop
cld
movsl
push
adc
sub
push
jecxz
out
scas
in
mov
pop
add
sub
xor
xchg
cmp
seto
pop
xor
xchg
and
orb
fnstenv
pop
lods
mov
decb
dec
jmp
lds
jp
je
add
mov
movl
adc
mov
add
and
in
shll
loopne
mull
aaa
inc
sahf
or
out
lods
repz
mov
sbb
dec
lahf
nop
lods
push
popf
aaa
jle
cli
mov
sub
and
fldl
pop
xor
adc
fists
mov
jecxz
or
push
cs
int3
rorb
and
mov
dec
ljmp
fisttps
inc
sarl
mov
push
pop
fiadds
push
adc
cmp
sbb
sub
pop
pusha
data16
xor
jne
pop
jns
stos
nop
and
out
scas
lret
insb
fldt
push
pop
lret
lcall
push
cmp
lds
or
frstpm(287
les
mov
decb
and
push
mov
into
xchg
xchg
mov
insl
mov
sbb
pop
outsb
xchg
test
add
int
fcoms
xor
scas
add
or
pop
lock
sbb
fiaddl
push
jge
sbb
push
pushf
or
aad
xor
xor
pop
inc
push
push
sbb
ss
pop
jge,pn
imul
cmp
ret
sbb
fwait
cli
cld
repz
popf
je
add
or
sti
jns
repz
jge
int3
hlt
movsl
es
dec
cli
mov
inc
sub
pop
and
lahf
xchg
mov
xchg
mov
cmp
arpl
cmp
je
out
lods
cmpb
add
mov
xchg
add
inc
pop
and
sti
dec
and
mov
push
lahf
add
cmc
sbb
fbstp
jae
daa
lret
xor
sarb
testb
add
or
inc
int
ljmp
sub
lret
mov
movsb
popf
mov
mov
in
pop
adc
jl
js
loop
ljmp
add
add
cld
xchg
inc
cmpsb
fwait
movsb
mov
sbb
xchg
rorb
jno
int3
push
movsl
lock
lds
mov
mov
xchg
or
dec
pop
cmp
idivb
push
iret
fmuls
sub
xorb
leave
sar
jnp
dec
adc
ret
xor
sub
ss
mov
insl
cltd
stos
jno
lret
clc
or
dec
mov
out
mov
gs
cmp
jge
int
bound
rcrb
cli
sti
lret
insl
jge
push
xchg
sbb
mov
jo
loope
lcall
push
jg
out
or
mov
out
inc
push
and
mov
sub
test
xchg
pushf
or
xchg
lcall
out
push
popf
cld
pop
sub
or
enter
push
lcall
sbb
xchg
xlat
pop
sarb
and
cmpsl
sahf
rclb
xchg
xor
sahf
jecxz
push
lcall
les
mov
inc
fbld
fcoms
xor
out
jp
add
pop
sbb
repz
mov
xchg
nop
inc
mov
aas
mov
dec
xchg
push
dec
mov
mov
data16
add
or
inc
imul
lret
pop
mov
call
test
int3
push
dec
push
ss
cmp
cmpsb
pop
xor
cwtl
nop
mov
ret
rolb
pop
dec
jecxz
sti
xor
lret
ret
mov
stc
cli
std
lods
sbb
pop
rcrb
stc
pushf
leave
adc
mov
xchg
shll
pop
xchg
xor
jae
dec
insb
lcall
fildl
add
aam
or
sarl
xorl
fstps
dec
movsl
rcrb
jnp
ret
mov
or
xor
pop
aad
imul
dec
lahf
pop
jns
add
dec
push
mov
sbb
push
or
sahf
dec
mov
mov
mov
mov
js
fsubr
mov
xchg
mov
div
js
aam
popf
mov
lds
stc
sti
inc
sarb
gs
arpl
mov
cltd
les
sbb
stos
mov
scas
fstl
jecxz
push
insl
mov
and
xchg
jo
dec
and
rcr
mov
lret
pop
les
lea
sti
xchg
mov
div
loope
in
jns
lea
add
mov
pop
or
insl
cld
fldl
lret
push
popf
mov
inc
ja
shl
outsb
add
jb
out
iret
adc
push
push
and
inc
aam
nop
mov
lahf
jecxz
orl
leave
fmuls
push
add
pop
bound
push
inc
dec
mov
roll
out
in
mov
ficomps
lcall
pop
iret
ja
or
lock
sbb
jb
push
sub
mov
xor
fadds
pushf
mov
int
ja
xor
test
dec
mov
jnp
cmp
xchg
ss
shrl
fcoml
dec
shrb
pop
mov
mov
dec
fsubs
test
int3
adc
scas
add
xchg
mov
or
adc
dec
pusha
div
mov
mov
fiaddl
jns
xor
sbb
jns
aas
lret
mov
or
sbb
pop
xor
and
mov
cmp
movsb
nop
and
push
push
adc
pusha
mov
pusha
mov
dec
mov
or
es
cmpsb
stc
out
pushf
rcl
push
fdivs
mov
xchg
aaa
and
fucomip
repnz
dec
jp
inc
leave
mov
movsb
inc
add
mov
fldcw
insb
xchg
jge
xchg
mov
or
add
mov
cmp
es
jae
jl
jbe
cmc
jno
shll
negl
cmp
bound
mov
xchg
cld
arpl
cmp
lcall
jp
mov
imul
cli
loopne
shrl
fs
fsubs
outsb
pop
dec
mov
sub
pop
scas
test
push
and
xchg
js
sub
sbb
sbb
cmpsb
sbb
cmp
nop
repnz
pop
and
mov
push
push
inc
jp
ficomps
add
pusha
mov
int3
aas
fisttpl
ja,pt
out
jl
dec
sahf
lret
loope
inc
cmp
leave
insl
outsl
loopne
aad
xchg
scas
push
jbe
cmovae
xchg
cmp
adc
cmp
dec
fisttpl
lea
add
push
mov
cli
dec
dec
or
in
xchg
data16
mov
jge
fwait
jecxz
push
hlt
add
mov
test
xorb
gs
lea
lods
pop
add
jnp
ficompl
ds
mov
mov
add
jne
rcl
xchg
rcrl
rorl
cmp
sub
dec
push
pop
data16
jmp
rorb
icebp
xchg
movsl
inc
movsb
in
sub
scas
adc
jb
rolb
jae
mov
ficompl
sahf
mov
test
pusha
add
nop
je
cmp
mov
push
sarb
push
nop
fidivl
push
mov
addr16
rorl
insb
adc
inc
xchg
jbe
push
test
xchg
or
stc
push
aaa
xchg
lock
jnp
jle
mov
push
fs
cmp
in
shll
push
dec
mov
or
out
fwait
mov
jo
jb
adc
jmp
lret
push
mov
mov
int3
pop
add
lret
xchg
or
add
lock
push
dec
stc
inc
repz
cmp
xlat
mov
jg
mov
sti
daa
jb
aas
lds
aas
ficoml
sub
ret
push
test
add
pop
adc
idivl
jne
fcmovnu
fimull
ja
out
fnstsw
in
lds
daa
shrl
xchg
pop
imul
leave
mov
push
and
push
pop
repnz
jb
scas
shrb
push
push
mov
pusha
add
inc
incl
adcl
jl
stos
lcall
cmp
filds
add
fstpl
pop
lea
xchg
gs
fstpl
insb
xchg
ss
cmp
clc
sbb
dec
and
mov
lret
inc
jnp
gs
jns
idivb
mov
imul
cs
jb
and
in
sub
out
lret
clc
loope
mov
fwait
sbb
mov
jmp
or
cmp
xorb
fdivrs
mov
fildl
push
mov
cmpsl
lret
jmp
lret
mov
add
aam
mov
arpl
lret
adc
loope
cmpsl
in
mov
fwait
sahf
sub
dec
push
scas
jne
lea
ret
in
stos
jno
add
nop
mov
mov
adc
addr16
sbb
xchg
ja
aad
or
inc
ds
cmp
insb
out
inc
mov
add
cmp
ljmp
sbb
jge
int3
fwait
add
inc
jmp
mov
sti
and
lea
mov
cmp
push
mov
xchg
push
hlt
cmp
cmpsl
shr
jo
sbb
sub
out
cld
jne
jno
sahf
mov
mul
or
dec
mov
je
in
jo
pop
stos
ds
outsb
sub
cmpl
das
loopne
adc
orl
pop
mov
movsb
dec
sub
dec
inc
mov
mov
insb
int
in
mov
lret
mov
adc
push
add
inc
es
fstp
leave
add
sbb
sahf
xor
repnz
hlt
mov
add
out
mov
dec
and
adc
int3
inc
xor
or
mov
fmul
xchg
jb
fidivrl
cmpl
cmpsb
mov
jp
push
cltd
cmp
jae
inc
fldt
dec
aad
add
cld
mov
imul
pushf
addr16
pop
stc
lret
arpl
lret
leave
inc
pop
xchg
outsl
push
clc
stc
jge
outsl
stc
sbb
out
adc
in
inc
pop
call
sub
mov
fcomps
rorb
sbb
ds
and
lret
xlat
fldt
pop
sub
push
mov
dec
inc
pop
cld
fcomi
and
inc
int
into
and
jo
xchg
lds
ss
inc
lcall
fnstcw
popa
dec
insb
lea
rcrl
imul
sbbb
vpshlq
mov
jmp
cmp
mov
xlat
js
test
mov
and
and
adc
stos
jae
xchg
mov
or
loopne
fxam
push
add
js
xor
pop
subl
and
pop
xchg
hlt
idivl
mov
xor
out
fdivrl
xchg
data16
pushf
inc
daa
push
ret
mov
add
in
sarb
mov
ljmp
mov
cmc
test
ror
fnstenv
ret
insb
and
ror
adc
adc
repz
ret
arpl
sub
iret
hlt
ds
pop
lods
and
test
adc
lock
push
cli
ds
xchg
lods
mov
xchg
sbb
and
lret
insl
sahf
push
xchg
mov
in
out
inc
sti
or
lret
push
lahf
or
xchg
movsb
imul
mov
jnp
insb
es
mov
fldenv
lea
daa
lahf
int3
push
mov
popf
loop
rcl
push
mov
cmp
jp
pop
pop
mov
test
jmp
jbe
add
jb
in
dec
pop
jmp
cmp
rorb
psubw
push
jmp
arpl
push
enter
adc
or
cmc
mov
sub
jg
faddl
adc
push
je
aas
out
xor
icebp
mov
loop
shr
xlat
in
inc
or
mov
fwait
aas
mov
and
mov
xchg
dec
jnp
sbb
inc
push
lcall
dec
adc
cwtl
int3
vminps
xchg
and
inc
dec
cmc
test
mov
dec
outsl
lret
jbe
in
push
push
cmp
popa
mov
xor
pop
js
or
xchg
sahf
repnz
inc
sub
pop
inc
inc
sub
fdivrl
flds
aaa
add
inc
test
out
scas
and
rcr
lock
dec
daa
push
fldcw
push
cmc
pop
rorb
or
stos
outsl
mov
sub
into
ficompl
sub
push
hlt
adc
pop
mov
fs
and
xchg
test
andl
shll
das
into
mov
inc
call
push
mov
mov
xor
psllw
gs
int
es
push
popf
and
mov
jae
dec
or
pop
rorb
xor
jnp
gs
les
xchg
add
pop
dec
xor
push
or
jne
push
adcb
lods
stos
mov
mov
adc
add
push
push
xchg
jnp
push
out
push
in
pop
jo
sub
int
rorb
into
xor
shlb
xor
xlat
push
scas
sub
dec
or
int
xchg
cltd
mov
inc
mov
adc
mov
push
mov
jne
aad
mov
jle
popa
inc
aam
cld
mov
andb
stos
test
insb
loopne
scas
fldl
cli
sahf
ljmp
out
das
sub
sbb
mov
faddl
cmpsl
xor
aas
sbb
inc
lock
arpl
rclb
icebp
jp
imul
movsb
fld
pop
mov
lods
xor
jb
jl
sbb
fstpt
xor
cli
mov
imul
cmc
jecxz
add
xchg
jg
mov
push
rclb
out
add
test
clc
loop
iret
scas
in
mov
scas
out
add
lock
cmp
xchg
bound
jg
cmp
push
je
cmpb
mov
fsubl
fcompl
mov
push
clc
and
xchg
dec
add
xlat
mov
mov
mov
ficoms
in
pop
sub
pop
orb
negb
dec
iret
or
inc
add
inc
lods
es
or
cmp
shl
sbb
cmp
imul
frstor
cmpsl
pop
enter
push
lock
jge
cmp
into
inc
mov
adc
mov
ret
cltd
push
pop
mov
xor
push
mov
xor
or
dec
inc
jnp
aam
call
push
dec
sahf
push
mov
mov
sub
shl
xchg
inc
insl
fiadds
jns
lret
subb
sbb
lcall
cmpsl
xor
cld
sub
repnz
adcb
mov
hlt
pop
arpl
or
scas
lods
sub
jg
stos
and
and
iret
aam
push
adc
or
mov
test
orb
popa
add
imul
ret
pop
cmp
int
out
cwtl
cs
xchg
adc
pop
mov
sub
or
lcall
fwait
in
mov
inc
outsb
inc
push
push
fstps
push
mov
repz
fsubl
int3
jne
das
mov
pop
adc
and
scas
mov
cmp
add
jns
stos
sub
jle
lea
sti
pop
jae
cli
popf
inc
bound
mov
loop
das
leave
scas
jbe
adc
aam
adc
push
mov
xchg
repz
add
push
xchg
pop
pop
dec
sbb
jl
lods
xchg
mov
jne
inc
mov
add
shl
mov
inc
daa
or
pushf
fwait
ja
and
std
ud1
xor
and
imul
pop
loopne
pop
and
sub
pop
test
rcll
jp
and
out
mov
sbb
or
sub
popf
jg
in
mov
jle
sbb
or
fdivl
jne
ja
jnp
out
xor
loop
loope
std
cmc
and
mov
adc
push
stc
pop
cmp
ljmp
mov
xor
stc
icebp
ret
insl
inc
pop
sbb
pop
flds
mov
stos
push
push
pop
cmpsb
mov
fadds
pushl
jo
add
jl
leave
xchg
push
xor
push
cltd
xchg
fldcw
fcmovu
cmp
negl
and
add
push
or
outsl
mov
cmpsl
xor
cmp
out
stos
data16
push
xchg
cltd
clc
pop
xlat
xchg
or
leave
inc
push
jne
icebp
and
sub
mov
lahf
icebp
imul
ss
movsl
jne
int
dec
fs
aaa
xchg
in
cmp
repnz
push
cmp
dec
ficomps
and
lods
lret
pop
enter
imul
je
xor
lcall
xchg
movd
dec
lret
push
jbe
ret
hlt
inc
xchg
and
idivb
das
sarl
pop
mov
sub
pusha
mov
xor
sti
inc
adc
xchg
xchg
stos
fneni(8087
lods
dec
push
imul
fmuls
movsl
mov
push
iret
dec
dec
sahf
or
div
mov
push
arpl
cs
ja
dec
pop
cmp
lea
sbb
cmp
inc
imul
fxch
cs
shr
jae
movsl
xchg
xor
mov
pop
add
and
jne
xor
frstor
cmpsl
loop
adc
or
rcrl
pop
pop
jecxz
or
mov
inc
pusha
rorl
jbe
inc
std
sbb
roll
in
andl
pop
arpl
loopne
jle
aad
xchg
mov
outsb
aam
add
fildll
lds
xchg
data16
dec
mov
jbe
xor
mov
out
ljmp
sbb
adc
xchg
repz
leave
push
rclb
push
jp
jno
inc
jbe
loopne
push
sub
cli
sbb
fnclex
pushf
add
sbb
lret
in
notl
mov
das
hlt
lods
inc
adcb
fcmovb
jbe
adc
dec
adc
cltd
push
jmp
lret
cmp
and
movsl
mov
and
mov
dec
cmp
les
cld
push
xor
mov
mov
pusha
cmovge
push
call
or
outsl
shl
in
dec
add
jmp
inc
loope
dec
bswap
in
sub
fidivrs
push
adc
mov
inc
fmul
data16
loope
notb
adc
mov
cwtl
scas
insb
xor
fdecstp
shl
cltd
mov
add
adc
inc
jmp
loope
testb
stos
fsubr
mov
std
xlat
lcall
jp
jno
and
std
dec
lret
cmp
cmpsb
xchg
jp
mov
mov
movsl
int
out
xor
in
push
sbb
or
jb
insb
cmp
fdivrs
sub
cmp
insl
xor
jge
xchg
in
daa
ret
jge
stos
sub
sbb
mov
fst
mov
sbb
mov
and
inc
js
leave
dec
cmp
push
fidivrl
imul
stos
test
repz
aaa
in
cld
mov
jecxz
fbstp
jno
ror
jge
jecxz
fisttps
fsts
mov
stc
aam
pop
cld
in
and
mov
das
mov
cmpsl
arpl
gs
lea
adc
adc
rclb
cmp
mov
in
cs
movsb
mov
pop
push
imul
cwtl
sub
outsb
or
mov
lret
xchg
ret
insb
shll
rolb
add
adc
std
arpl
iret
xlat
and
jb
lds
mov
inc
test
push
xchg
sub
mull
lock
inc
adc
xchg
xchg
ljmp
incl
add
dec
and
jb
sarl
fists
insl
jne
repz
iret
test
sbb
adc
pop
ss
into
or
cwtl
xchg
cmp
fisubrs
arpl
std
push
mov
jnp
mov
xor
or
pop
lock
mov
inc
mov
repz
and
inc
iret
push
inc
icebp
xor
cld
leave
aas
mov
pop
or
aad
push
mov
cmp
jne
cmp
inc
and
icebp
add
xchg
push
jns
sbb
ss
sbbb
popa
mov
and
gs
mov
jbe
jg
lods
inc
fildl
pop
sub
scas
jne
shl
mov
jecxz
and
push
push
in
stos
movsb
xor
jp
mov
push
or
jl
fst
enter
push
push
leave
popa
or
cld
mov
popf
test
xchg
cli
xchg
jmp
inc
int3
lods
dec
rcl
xlat
cltd
popf
insl
or
pushf
jns
frstor
push
xchg
pop
mov
jmp
in
xor
adc
mov
iret
loop
mov
cmpsl
icebp
insb
lods
sub
cmpb
and
push
inc
pop
pushf
xor
sub
sahf
cmp
xor
or
sub
and
xchg
mov
pop
insb
or
lahf
imul
ret
push
pop
pop
and
cli
sbb
outsl
push
xchg
mov
movsb
adc
outsb
adc
js
sbb
loopne
cs
mov
and
mull
push
enter
mov
sbb
xchg
mov
jp
jl
dec
icebp
lret
shrb
and
lock
adc
movsb
int
jl
fwait
pop
repnz
pop
mov
lods
inc
mov
and
cmp
xor
push
jns
xchg
fiadds
sub
out
pop
pushf
in
sbb
cld
js
fwait
pop
mov
out
lods
out
addr16
sub
xchg
mov
lahf
in
xor
sbb
in
pusha
scas
xor
or
insl
add
or
int
and
data16
stos
cmp
test
enter
lahf
lahf
push
aam
cli
cmpl
aad
xor
insl
in
shrb
xor
push
ror
xchg
cmpsb
aad
mov
mov
clc
jl
cmc
es
in
das
pop
inc
nop
sub
push
out
dec
addl
dec
cmpsl
test
cmp
fidivrs
mov
das
mov
jb
repz
lods
andps
mov
mov
and
mov
std
xor
or
pop
mov
scas
lret
pop
push
enter
ljmp
and
pop
int
lds
ss
sbb
mov
jae
loope
xor
and
pushf
or
lods
pushw
lods
nop
loope
call
xchg
jmp
leave
cmp
lea
xor
dec
and
loop
xchg
push
lret
outsb
xor
push
test
fcomps
inc
add
pop
mov
pop
dec
pop
jl
lcall
adc
dec
pop
lds
mov
xchg
aas
or
pop
xchg
xlat
inc
push
xchg
or
cmp
pop
push
jp
mov
jle
dec
sub
jp
imul
aam
and
mov
xchg
das
sub
sbb
pop
divb
movsb
loopne
jge
test
cmpsl
call
mov
lcall
ja
sub
xchg
jmp
outsl
lret
cmp
mov
sub
inc
aas
cmp
xchg
mov
or
loop
pop
add
push
sub
notb
dec
scas
xor
adc
mov
ficoml
inc
jp,pt
clc
fldlg2
jg
int
insb
lret
adcb
xchg
dec
sub
xchg
push
ja
loop
or
mov
int
xrelease
lret
sub
cld
pop
lcall
push
sbb
repz
push
repnz
mov
and
jp
push
mov
mov
fwait
ret
js
imul
mov
jae
fldl
in
sub
dec
addl
adc
scas
mov
aaa
mov
jecxz
dec
xchg
clc
hlt
and
mov
movsl
lret
add
sub
lahf
scas
pop
sti
push
cmp
loopne
rep
out
into
out
push
jl
icebp
roll
or
mov
cld
jl
mov
or
ss
into
adc
test
sbb
rcll
mov
movsl
and
cmc
jne
es
sbb
xchg
add
add
push
adc
scas
or
dec
inc
shl
jb
sbb
xchg
sbb
mov
mov
pop
mov
mov
cld
cmp
int
xor
cmp
mov
sub
lods
jnp
in
je
popf
js
or
test
std
fiaddl
add
mov
mov
mov
lods
mov
xor
leave
pop
mov
ficoml
mov
ss
sub
lock
pop
fwait
test
bound
push
aas
arpl
mov
and
mov
pop
sarl
ljmp
test
xor
lahf
pop
mov
iret
mov
mov
hlt
pop
fs
pop
rclb
jne
pop
les
mov
addr16
or
jnp
or
cmp
dec
sbb
fstps
mov
and
cmp
fdivrs
sub
in
mov
inc
ja
movsl
lcall
imul
mov
xchg
scas
lea
es
cmovle
gs
fsubrl
inc
xchg
cmpsb
pop
and
inc
cmp
enterw
mov
push
cmp
add
mov
and
in
or
loopne
sub
fcompl
fdivs
lock
je
jno
add
clc
pop
mov
nop
add
push
xchg
or
std
jmp
add
mov
xchg
lods
fsubrl
mov
mov
mov
mov
sub
lds
and
add
lods
jp
out
mov
in
jnp
imul
fwait
ret
push
stos
call
pop
sub
addr16
ret
gs
dec
cltd
sbb
jbe
cmp
mov
add
pop
xchg
push
fstps
cs
sbb
shll
add
mov
xor
cmp
imul
out
daa
pushl
jp
add
mov
frstor
jno
outsb
inc
xor
push
sbbb
insl
xchg
hlt
jl
adc
xor
pop
xlat
xor
add
push
popa
sub
xchg
lcall
stos
cmp
push
jle
adcb
int
pop
inc
lahf
xchg
je
pop
inc
push
mov
mov
pop
add
or
fwait
sbb
push
ljmp
pop
ja
lret
inc
cmc
fcoml
imul
adc
sti
js
or
mov
pusha
mov
repz
adc
sub
pop
aaa
fnop
insb
mov
cmpsl
mov
adc
xor
push
jmp
xlat
fnstsw
lds
mov
fidivrs
orb
mov
lock
imul
or
cmc
cmp
out
clc
sub
bound
mov
xchg
push
int3
cmp
insl
pop
iret
movsb
cmp
rcr
jbe
or
lret
push
dec
leave
out
scas
xchg
dec
push
movsl
add
test
lcall
and
mov
pop
cmc
pop
sbb
int3
adc
jns
lock
mull
pop
sub
mov
sbb
fldcw
inc
das
jp
cmp
aam
lea
pop
inc
jne
aaa
lret
in
xor
cmp
mov
mov
call
push
cmc
lods
sbb
add
sbb
adc
dec
test
mov
or
out
ret
adc
mov
jge
movsb
mov
je
xchg
out
cmp
push
sub
aas
jp
pop
and
push
and
rorl
adc
xchg
loope
cwtl
les
mov
push
test
mov
pop
pop
cmp
cltd
sbb
loop
int3
and
jns
xchg
pextrw
mov
mov
pop
mov
or
or
xchg
or
xchg
gs
outsl
outsl
out
sub
sbb
sbb
xchg
in
ja
out
or
jecxz
jnp
ljmp
lods
outsb
pop
fimuls
xor
ret
or
jg
into
lcall
sbb
stos
xchg
push
add
aaa
add
fdivr
outsl
loope
jp
rorb
jmp
jne
addl
and
adc
fidivl
xor
mov
push
push
pop
or
push
lods
jns
adc
jmp
out
jo
int3
dec
push
pop
xor
push
xchg
loope
pop
add
and
scas
push
cmpsl
sub
dec
mov
mov
insl
scas
call
stc
test
pop
inc
fstpt
sti
push
push
dec
outsl
jb
into
or
xchg
jmp
fdivl
cmp
xchg
test
pop
loop
push
mov
outsb
inc
outsb
dec
jl
inc
dec
test
pop
adcl
fld
inc
pusha
popf
adc
jno
addr16
cmp
test
sbb
mov
in
imul
lret
push
jecxz
popf
jo
push
ss
js
mov
push
mov
pushf
adc
push
add
and
and
push
test
add
mov
js
scas
xor
xchg
jb
mov
mov
mov
in
mov
xchg
push
sbb
in
xchg
std
push
or
mov
jge
std
inc
lret
mov
repz
int3
xor
adc
pusha
mov
out
imul
sbb
aaa
pop
push
dec
push
xlat
fld
lock
xchg
dec
mov
mov
cmp
insb
gs
mov
jno
stos
outsb
fcomp
jo
addr16
lcall
xchg
cmovb
in
xor
sbb
imul
shll
sub
push
add
cs
mov
insb
mov
and
lret
aas
mulb
fucomp
xchg
inc
adc
pop
cmp
out
xorb
aas
cmp
js
sbb
sub
jle
in
rclb
push
adc
mov
jecxz
hlt
lret
xchg
xchg
mov
xchg
int3
jnp
inc
or
jb
dec
mov
jmp
adc
or
xor
push
cld
mov
ret
fldenv
cmc
mov
mov
cmp
dec
mov
jbe
push
mov
mov
stos
pop
test
cmp
jecxz
mov
mov
push
xor
pushf
ret
mov
movsl
outsb
cmp
lock
icebp
sub
jp
icebp
ffreep
inc
lahf
outsb
ljmp
pop
jo
jmp
pop
mov
mov
aaa
add
push
nop
jecxz
in
pusha
inc
or
inc
movsb
mov
dec
ljmp
rorl
lahf
lock
or
icebp
int
movb
scas
out
jmp
jo
or
add
xor
rcrl
jmp
fs
shl
xor
mov
push
sbb
xor
scas
cmp
mov
pop
outsl
clc
int3
lods
mov
ljmp
pop
in
iret
xchg
sub
dec
lods
xor
ficompl
into
fnstcw
sbb
insb
pop
lahf
dec
shll
add
cmp
xchg
xchg
mov
stc
jne
push
sbb
cmp
and
mov
fisubrs
cmp
or
mov
divb
cmp
subb
call
lahf
fs
lahf
int3
and
mov
jge
inc
pop
sbb
jecxz
jge
sbb
xor
jl
cwtl
mov
test
fbstp
stc
out
adc
aad
push
imul
lahf
and
fmull
insl
fwait
js
cmp
xchg
dec
and
popf
cld
jb
ljmp
ss
in
lods
and
push
jecxz
aas
jecxz
mov
jle
xor
push
popf
mov
mov
test
shl
insl
push
jae
jns
mov
mov
add
jb
std
mov
xchg
loopne
or
xor
icebp
mov
leave
inc
xor
cld
js
out
xchg
jno
pop
and
fwait
cmp
cmp
dec
mov
aas
movsl
lret
mov
cli
adc
lahf
pop
push
sub
movsl
roll
xor
test
mov
xchg
adc
je
leave
xor
mov
jmp
xchg
xor
pop
xchg
jmp
lods
dec
loop
mov
sub
add
jnp
add
mov
fisttpl
pop
inc
add
outsb
inc
cltd
push
push
mov
lret
gs
decl
inc
rolb
shr
sbb
xchg
jbe
push
aad
test
mov
pushf
pop
mov
cmpsl
and
outsl
cmp
or
jbe
xor
lahf
and
js
fimull
mov
and
aas
pop
lret
jecxz
sarb
sub
jmp
lods
sub
mov
mov
xchg
dec
xchg
push
adc
push
loopne
sahf
hlt
and
insb
jae
testl
push
lret
stos
andl
js
fwait
aam
loopne
add
mov
pop
mov
div
push
mov
pushl
outsl
hlt
popa
mov
jp
mov
push
cli
mov
daa
jnp
cmpsb
lret
lea
jb
sti
test
dec
add
add
jle
pop
insl
xchg
nop
sbb
loop
mov
lcall
mov
cli
pusha
testb
iret
cmp
in
xchg
mov
xor
xlat
sbb
neg
push
xchg
xchg
push
push
scas
orl
pop
jle
xchg
enter
push
mov
cmpsb
icebp
leave
mov
dec
mov
repz
push
clc
sub
inc
mov
push
test
out
or
adc
test
int3
cmc
dec
insb
leave
loop
mov
or
jo
lcall
xor
push
mov
aam
ret
loop
adc
adc
sub
into
push
mov
repnz
test
push
and
dec
pop
das
popa
or
sub
mov
bound
cs
pop
dec
test
lcall
int
or
dec
mov
dec
jecxz
push
arpl
scas
sti
xchg
xor
repz
in
das
fldenv
fstpl
mov
cs
js
out
les
mov
or
sub
inc
pop
movsb
fs
sub
xchg
push
lds
vpunpckhbw
jno
int
dec
cmp
ret
or
lcall
push
sub
shl
leave
inc
popl
loop
pushf
dec
sub
pop
test
jecxz
out
push
jne
jae
adcl
mov
fs
sbb
mov
cmp
jp
ret
movsl
xchg
and
jae
add
adc
scas
mov
push
mov
jbe
push
dec
daa
fs
adc
fwait
mov
insb
xchg
cmp
lock
stos
fst
jnp
jmp
sarl
dec
pop
ljmp
lcall
leave
add
jb
xor
mov
add
lock
pop
sbb
incb
out
or
sarl
out
add
sbb
pop
movsb
fcomip
jb
dec
mov
rclb
dec
cvttps2pi
stos
ljmp
mov
popa
xor
sar
lea
imul
dec
in
mov
aam
adc
test
pop
lcall
out
out
and
fistpll
jp
orb
sbbb
sub
and
fcomp
sub
jmp
xchg
fwait
outsb
mov
cmpsl
mov
sbb
negl
jl
jp
lret
lea
push
push
mov
pop
ret
cmp
movsl
adc
inc
int
imul
mov
subb
xchg
test
in
movntq
xchg
cmp
lret
cmpsl
xchg
sub
adc
cmp
je
hlt
jmp
fsubrs
jp
and
sub
push
fwait
aaa
aam
lea
pusha
xorl
and
insb
push
and
mulb
jno
outsb
or
in
push
iret
inc
cmp
push
mov
jl
sub
test
movsb
mov
mov
push
gs
push
sub
stos
lret
inc
cmp
add
ds
or
mov
mov
test
mov
aad
pop
mov
cwtl
xor
inc
mov
addr16
xchg
mov
dec
lock
add
inc
into
out
xchg
inc
add
cmc
xchg
mov
push
jnp
or
lock
adc
jge
lods
lods
pop
test
stc
jg
addr16
add
sbb
xchg
push
and
mov
push
cmp
add
scas
add
mov
pop
dec
lock
sbb
inc
lcall
leave
and
inc
stos
rdmsr
dec
mov
jmp
and
push
cld
faddl
fwait
dec
and
mov
into
inc
push
jo
test
dec
and
daa
cmpsb
imul
xchg
cs
popa
sbb
insl
adc
jp
leave
and
leave
xchg
cmp
test
jge
jp
dec
push
mov
xor
or
icebp
aaa
idivl
dec
xor
and
jno
dec
xchg
sbb
add
fwait
mov
jo
aaa
mov
ljmp
cmp
lods
fdivs
insb
fstpt
hlt
or
neg
fnstsw
xchg
jae
and
f2xm1
mov
int
pop
pop
fistpll
push
inc
lcall
mov
das
inc
cs
fisubrs
sbb
mov
dec
stos
push
sbb
jge
lahf
adc
fcomip
mov
lahf
es
test
leave
xor
sub
or
lods
js
out
lods
ljmp
outsl
test
ja
and
int
popa
repnz
inc
mov
bound
in
fs
data16
not
push
cmc
inc
push
inc
jge
cmpb
cwtl
sbb
xchg
mov
pop
sub
call
loope
lea
sbb
rcr
ret
notb
adc
mov
xor
push
iret
data16
inc
fstpt
adc
inc
pop
repz
bound
adc
jne
fldcw
jbe
push
mov
sub
and
jge
cltd
mov
roll
into
bound
lret
cmp
push
test
cwtl
mov
jbe
cmpsb
and
int
cli
out
rorb
ja
push
gs
mov
hlt
daa
pop
cmp
mov
lahf
daa
das
jl
test
pop
xchg
mov
xor
xchg
outsl
inc
mov
push
js
fs
les
insb
in
lds
add
xchg
sub
rclb
andb
sbb
sbb
outsb
in
sahf
daa
fldt
test
mov
pop
arpl
mov
sbb
mov
mov
sahf
or
xchg
xchg
and
outsb
xor
jp
inc
jae
lock
scas
pop
fsubl
inc
mov
sbb
push
imul
dec
rcrl
adcl
push
ret
xchg
mov
dec
dec
repnz
push
lret
push
test
mov
dec
scas
jo
jns
rorb
mov
pusha
out
jle
inc
lret
inc
sarb
test
aam
incb
xchg
mov
in
dec
sub
jmp
sbb
pop
ds
inc
mov
mov
out
inc
xchg
aaa
mov
inc
jecxz
popa
dec
stc
lret
cmpsl
xor
mov
or
pop
test
jo
mov
adc
stc
cmp
or
lret
aad
jbe
push
negl
cmpsb
jg
mov
xchg
call
xchg
xor
movsb
leave
push
rdmsr
les
push
clc
notl
imul
lock
iret
pop
jne
pop
cmc
jg
lods
jae
mov
pop
mov
mov
pusha
sub
ds
int
xor
lea
xchg
js
mov
loopne
fiaddl
and
sahf
icebp
push
insl
or
jo
mov
pop
addr16
testl
inc
fs
dec
inc
xor
pusha
or
add
mov
adc
sbb
add
or
fwait
pop
pop
pop
inc
insl
orl
mov
pushf
cmp
xor
ret
repnz
mov
xchg
push
or
int3
lods
xor
popf
add
jge
ss
ss
jecxz
xor
rorl
ja
cmc
insb
loope,pt
xor
adc
arpl
xchg
gs
int3
mov
pop
inc
sbb
jmp
xorb
test
mov
adc
mov
mov
nop
popa
xchg
xchg
shr
dec
rolb
add
mov
push
pop
daa
dec
sbb
js
out
add
mov
loopne
dec
cwtl
adcl
cld
xchg
stos
nop
mov
push
adc
mov
insb
lcall
lods
xchg
popf
hlt
push
xor
push
jge
jl
shll
jnp
dec
push
dec
adc
out
lea
pop
cmc
cli
inc
loopne
out
or
ret
sbb
and
jl
mov
ret
xor
sub
jp
pop
adc
mov
stc
pop
and
xor
stc
cmp
xchg
inc
fstp
mov
lret
mov
mov
arpl
int
xchg
jge
push
into
fistpll
or
adc
test
push
fdiv
lods
dec
mov
test
add
xchg
dec
test
dec
fldenv
xchg
cmpb
int3
add
lcall
inc
pop
pop
mov
jo
and
jmp
faddp
jp
cmp
fs
jns
sbb
mov
adc
lcall
fildll
test
test
mov
lods
jb
add
xlat
cmpsl
push
inc
call
mull
addr16
or
ljmp
movsl
hlt
fcompl
imul
aam
bswap
adc
mov
test
push
aam
fs
int
popa
aas
xor
stc
sbb
xchg
pop
lret
add
mov
movsl
aas
jb
mov
xchg
aas
fcmovnu
push
iret
push
add
lock
or
or
cli
jmp
xor
addr16
movsb
inc
mov
push
and
sub
aam
xlat
loope
stc
pop
stos
mov
test
xchg
dec
and
pop
cmp
sbb
les
cmpsb
and
and
jp
lret
fcmovb
fdivr
sub
orb
sahf
data16
mov
dec
push
jbe
lea
cmpl
bound
ret
aam
adc
ret
fwait
sub
mov
jmp
dec
and
bound
je
pusha
mov
in
loopne
adc
insl
lods
shrb
cwtl
inc
je
test
sub
or
cs
or
int
pop
and
pop
daa
ret
xor
xchg
rcrl
aad
test
stc
lcall
lods
sub
jle
xorl
stos
dec
pop
idivl
mov
pop
dec
push
mov
cltd
iret
and
loope
lret
das
adc
dec
in
loop
dec
aaa
shr
adc
mov
rol
ljmp
xor
pop
sahf
xor
mov
xlat
or
fstps
je
and
sub
test
mov
jno
cmpsb
xchg
repz
out
pusha
dec
lret
in
dec
sub
mov
pusha
and
repz
sub
jmp
mov
outsl
adc
ret
sub
adc
ljmp
add
jecxz
xsha256
cmpsb
adc
sub
arpl
cmp
or
js
mov
pop
lea
loop,pt
cmp
push
lods
shrb
xlat
xor
pop
cmp
jle
jno
shrb
push
into
cmp
xlat
les
jbe
aad
insb
sub
xlat
adc
adc
ret
lcall
mov
add
sbb
out
sahf
add
nop
cmp
fs
sti
insb
mov
lret
jnp
pop
cmpl
cmp
fisubl
iret
mov
rolb
mov
jp
push
and
mov
xchg
sbb
test
std
fisubl
jbe
mov
roll
mov
fcmovb
mov
mov
jmp
mov
ljmp
imull
lcall
call
mov
popa
scas
lahf
and
xchg
dec
sbb
daa
add
mov
sbb
or
inc
jle
mov
out
std
and
cmp
hlt
nop
jecxz
mov
pop
rcrb
enter
push
dec
pusha
adc
mov
adcb
adc
ds
adc
push
or
jno
sbb
ror
in
pop
das
aaa
aam
out
jge
xor
hlt
js
stos
sbb
flds
and
add
out
inc
int3
xchg
cmp
into
call
sbb
rcll
xchg
sbb
push
sbb
test
lods
mov
sub
cmp
cmpsb
into
mov
loope
sahf
add
and
pop
mov
sub
repz
sub
outsl
add
sub
fwait
mov
fsub
imull
xor
lds
vphadddq
or
pop
jno
loop
and
and
in
jmp
mov
jle
movsb
data16
push
adc
jnp
add
adcb
xchg
and
fiaddl
xlat
or
shll
or
repnz
fdiv
mov
das
pop
dec
aaa
push
mov
or
andl
and
pop
outsl
lods
rcll
pop
aad
fstl
jbe
outsl
xchg
sbb
mov
shll
cmpsb
or
fwait
xlat
sahf
mov
xor
pop
ret
mov
stos
mov
add
jb
test
sar
push
jle
cmc
push
aam
cld
gs
in
inc
aas
lretw
jne
test
lahf
lock
insb
sbb
adcb
cmp
or
adc
dec
push
adc
push
out
mov
pop
sbb
push
bound
and
mov
jbe
jl
and
push
dec
in
xlat
jle
fnstcw
ss
cmp
jo
lock
sbb
stc
adc
dec
lea
lock
incb
push
rcrl
int
adc
divl
pop
add
and
fs
insl
xor
xchg
aad
imul
lret
xor
adc
iret
cmp
inc
mov
inc
lret
shr
jns
sti
cmpsb
or
adc
push
push
xchg
xchg
and
pop
sbb
sbb
push
mov
loop
mov
pop
clc
mov
xchg
movsb
and
inc
scas
mov
lret
xchg
jl
in
adc
icebp
inc
addr16
or
es
cmp
outsl
movb
xor
push
jg
outsl
shll
insl
je
mov
loop
xchg
cmp
or
imul
popa
lods
mov
mov
sbb
mov
xchg
lods
adc
aad
lahf
outsl
dec
sub
icebp
dec
mov
addb
out
adc
ds
leave
jg
fidivs
and
mov
and
pop
mov
cmp
cli
jne
fwait
test
mov
push
adc
int3
fld
xor
mov
ficomps
pop
fcoms
dec
call
cmp
mov
push
jmp
dec
xor
call
xorl
jmp
aam
cmc
das
xchg
shll
pop
pop
push
xchg
es
jecxz
pop
hlt
jne
xchg
nop
ret
pop
adc
sub
scas
stos
adc
movsb
mov
mov
mov
cltd
lret
sbb
fistpl
subl
pop
push
inc
imul
mov
inc
iret
dec
incl
das
ss
add
sub
addr16
fcomip
xor
in
lret
frstor
cmp
adc
into
mov
outsb
add
sarb
mov
jae
les
aad
repnz
cmpsl
cld
add
sti
je
inc
mov
inc
test
loop
xor
mov
xor
adc
xlat
test
aaa
inc
pusha
aaa
fdivr
pop
gs
push
call
nop
sti
push
arpl
ret
mov
fcomip
nop
push
add
insb
movsb
cmp
insb
pusha
insl
pusha
and
data16
dec
jp
or
sub
dec
or
sub
jns
pop
add
mov
mov
mov
pusha
mov
test
out
out
fidivs
jmp
xor
adc
lea
ja
fistps
and
test
rcrb
ss
pop
lods
push
push
jns
cmc
push
mov
cmp
sub
in
inc
fs
xchg
dec
ficoml
inc
xlat
fisubs
sbb
xlat
data16
mov
fmuls
or
fsubrs
add
dec
movsl
out
stc
jge
pop
ret
sbb
xor
push
xchg
rorl
or
or
cmpsb
mov
mov
mov
in
lock
sahf
stos
leave
xchg
test
jo
loope
xchg
xchg
stos
adc
fsts
das
sub
and
call
jb
jecxz
inc
imul
cmpw
adc
in
push
rcrb
push
insl
jne
shlb
les
mov
sub
ja
dec
and
jno
inc
loop
jg
jne
dec
mov
icebp
mov
int
xor
mov
push
pusha
or
pusha
mov
push
int3
mov
mov
mov
cltd
pop
dec
inc
push
cmp
xchg
out
push
les
cmovns
ss
xchg
lahf
and
xor
cmpsb
mov
pop
in
ja
fldenv
pushf
pop
lds
jge
pop
inc
mov
ficoms
fwait
addr16
sbb
popf
fwait
in
xor
ss
imul
aaa
movsl
push
addb
lret
mov
adcb
xchg
jne
test
pop
fcoms
jl
daa
lret
jnp
sub
out
jno
mov
lods
push
in
test
and
sbb
mov
jo
inc
push
dec
push
xchg
lea
push
sti
inc
int3
and
sbb
shrb
push
fidivrl
int
loope
mov
dec
nop
mov
aas
mov
out
outsb
fsubl
loop
push
repnz
or
es
or
lcall
and
test
lcall
cmc
fdivrp
enter
jo
lcall
les
fwait
cli
aaa
out
or
pushf
inc
sub
bound
ljmp
pop
fnstenv
adc
sbb
movsl
jae
ja
push
xor
ljmp
cmp
rorb
xor
adc
repz
popf
jne
add
mov
push
pop
sbb
inc
add
xor
inc
and
je
scas
push
xor
or
insb
dec
mov
add
push
inc
cmpl
loop
jne
push
inc
sahf
jle
sub
sbb
or
dec
xor
negl
mov
pop
push
sbb
pop
adc
aad
out
into
sub
sti
pop
ljmp
adc
pop
rcll
and
add
cli
xchg
out
hlt
push
repnz
jmp
or
mov
cltd
jmp
mov
icebp
pop
adc
jae
or
mov
stc
mov
in
lods
sahf
or
daa
mov
adc
or
ret
insl
push
cld
and
pop
xchg
jne
andb
push
int
xchg
aas
andl
sbb
sub
insb
lahf
jae
movsb
loop
imul
fisubrs
push
add
jo
ret
popf
push
mov
rcrb
test
sti
movl
pop
cmp
insl
sbb
movsl
push
addr16
cld
xchg
mov
xor
dec
inc
scas
mov
xor
fisttps
jle
fcmovb
push
lret
inc
les
dec
movsb
outsl
mov
push
rcrl
and
pop
xchg
fists
and
cmp
out
pop
shrl
jbe
test
notb
xor
mov
imul
test
sub
cltd
mov
lods
push
orl
dec
adc
mov
sub
or
pop
sbb
repz
mov
and
cmp
gs
dec
pop
inc
xchg
cwtl
rcr
fisttps
adc
pop
in
iret
mov
or
adc
dec
mov
xchg
fimuls
mov
lods
lcall
or
or
mov
rcrb
add
pop
cmpsl
insl
add
scas
pusha
rolb
sub
push
mov
scas
push
aad
and
mov
and
dec
nop
dec
arpl
std
lods
cmp
pop
iret
sub
fwait
std
into
sub
fnstsw
pop
shl
jne
movsl
push
cmp
arpl
mov
imul
and
aaa
cld
add
stos
cld
sbb
adc
add
sarl
fdivr
inc
aad
mov
mov
rcr
xchg
cmpsl
and
sbb
mov
ret
dec
xor
dec
mov
inc
jp
or
arpl
in
jne
pop
pop
ret
add
inc
std
pop
jl
mov
mov
jno
repnz
push
or
js
or
sbb
xchg
jb
jle
aam
dec
in
inc
push
dec
js
dec
leave
rolb
in
mov
movsb
pop
ds
jo
ss
loope
aad
scas
sbb
imul
dec
pusha
cmp
or
stos
cltd
jno
jbe
repz
add
jne
lcall
mov
outsb
divb
mov
mov
or
fimuls
testl
ret
cmp
sub
repnz
push
pop
fs
sbb
sbb
push
ljmp
mov
ror
sub
fs
js
mov
inc
scas
or
lods
fisubl
fstps
pcmpeqb
mov
int3
shl
sbb
sahf
mov
jae
xor
mov
push
sbb
mull
imul
lea
lahf
push
mov
lcall
xlat
or
jg
xor
enter
and
std
mov
out
or
outsb
add
scas
arpl
inc
hlt
mov
lcall
in
idivl
jl
les
cmp
sti
pop
pushl
pop
mov
pop
and
sbb
mov
push
add
mov
fcompl
fimuls
adc
iret
iret
xor
xchg
push
cmp
aas
scas
pop
mov
lret
repnz
and
mov
xorb
mov
scas
sti
sahf
orb
dec
cmp
mov
mov
cmpsl
repz
repz
and
sbb
test
adc
scas
shll
outsb
add
stos
popa
js
loopne
inc
fsubrp
xchg
jle
addr16
or
push
aaa
and
sub
mov
jns
cmc
push
out
sbb
jg
test
fstl
fs
ret
xchg
jecxz
adc
mov
lds
mov
jne
inc
jecxz
jbe
pop
jp
sti
outsb
pusha
sub
cwtl
mov
jge
iret
pop
out
or
arpl
out
xchg
cmpsb
das
sub
in
mov
sub
inc
push
or
cli
loope
nop
inc
ljmp
xor
push
xchg
insb
stos
inc
xchg
push
hlt
popa
cmp
add
aam
jnp
dec
jnp
push
pusha
mov
jecxz
in
out
dec
add
mov
mov
inc
xchg
sbb
in
jno
jns,pt
mov
cmp
sbb
jp
pushf
stos
and
aas
mov
jne
mov
sti
jnp
pop
mov
sar
dec
adc
adc
fwait
bound
in
push
int
gs
inc
cmp
push
push
addr16
cltd
imul
popf
or
dec
les
push
inc
jp
and
sub
stc
add
adc
xor
cmp
ret
loop
xchg
pop
xchg
jl
lret
and
rolb
or
fdivrl
lods
int
add
xchg
cwtl
jbe
adc
int
cmpsl
sub
jmp
push
lcall
mov
cltd
sub
mov
repz
je
rcll
sub
sbb
adc
fcomps
xor
cmpsl
sub
nop
xchg
leave
mov
ret
mov
stos
fwait
xor
jo
push
jno
push
push
jns
lods
dec
lret
jbe
cmpsl
int3
les
jmp
fldenv
and
push
jae
mov
or
push
mov
adc
xor
xchg
in
cmp
and
fnclex
idivb
xor
sbb
into
jecxz
jns
xlat
fs
insl
mov
arpl
fbstp
sbb
or
jne
test
sbb
cmp
cmc
cmc
mov
lret
mov
adc
inc
jo
push
jns
stc
xchg
push
xor
mov
add
xchg
cs
test
clc
mov
pop
push
out
mov
push
ret
shlb
xor
fs
sbb
ljmp
mov
jl
icebp
xor
neg
mov
dec
pop
hlt
jmp
dec
fsts
mov
inc
scas
ret
lds
add
dec
call
pop
mov
testl
sub
push
loopne
dec
adcl
loope
push
jle
push
push
sub
fbstp
xchg
imul
inc
testl
inc
xchg
divb
fstl
jbe
sub
rolb
mov
pop
not
fldt
jmp
inc
push
inc
shl
or
xchg
cmp
pop
movsb
push
nop
add
mov
push
push
sub
mov
aam
pop
jno
jecxz
jl
lds
cld
dec
mov
test
push
xchg
xchg
scas
ret
fisubs
or
and
inc
cwtl
and
dec
ss
mov
mov
pop
insl
test
es
xchg
imul
jge
aad
insb
xor
pop
mov
mov
sbb
or
scas
jnp
ja
scas
call
inc
into
das
inc
lahf
repz
cld
mov
nop
or
popf
jnp
mov
pop
sbb
xor
mov
push
mov
fstp
outsl
inc
mov
fwait
popf
jae
pop
inc
mov
push
in
push
inc
fnstcw
js
insl
fistpl
adc
add
loop
jno
push
xor
or
xchg
mov
cmp
and
shll
rcll
sar
xor
fisubs
les
push
out
pushf
pusha
das
stos
in
sbb
xchg
out
dec
cmp
in
dec
lds
fmuls
mov
adc
pop
pop
mov
jg
add
mov
mov
hlt
pop
fmuls
or
xor
mov
mov
cmpsb
sti
jns
scas
cld
lock
dec
xlat
lahf
leave
ljmp
and
push
inc
loop
fimull
ror
insl
cmp
sbb
mov
mov
dec
dec
sbbl
xchg
cwtl
jg,pt
out
fwait
jle
pop
inc
repz
xor
mov
sub
stc
aad
lods
or
lods
aad
inc
mov
fdivs
or
mov
or
lret
xor
xor
fsubrs
xchg
jp
fdivs
add
insl
push
jnp
repz
test
push
mov
mov
lea
leave
jle
loope
fs
or
out
push
lds
outsl
fsubrs
data16
jbe
int
xor
loop,pt
in
aas
mov
xchg
adcl
mov
add
xchg
in
xor
adc
cld
or
test
mov
movsb
inc
cmp
pop
in
cltd
cli
push
in
mov
mov
arpl
sbb
push
loop
es
insb
out
addr16
adc
add
add
adc
xchg
loopne
push
aam
test
out
aam
sbb
cwtl
lret
test
xor
fimuls
pop
add
mov
lahf
ljmp
adc
mov
pushf
mov
and
rol
inc
jo
pop
and
lcall
out
out
mov
and
loop
movsb
adc
popf
dec
xchg
lods
cmp
pushf
cmp
rolb
pop
js
pop
xchg
mov
gs
jnp
pop
lahf
xchg
in
faddl
add
ss
push
insb
ja
jo
mov
and
sbb
call
pusha
push
mov
lahf
add
sub
sub
push
jg
add
lea
add
fcmovne
xor
xor
or
sbb
dec
xchg
add
in
and
sbb
cltd
or
in
ss
aas
rcrl
fmull
dec
jo
sbb
outsb
aas
out
inc
sub
push
lds
into
movsb
movsl
or
lea
in
rcrb
jmp
pop
mov
shrl
mov
cmc
xor
mov
fldl
setae
sub
push
xchg
outsl
insb
insl
mov
dec
cli
fildll
lods
mov
jo
out
call
and
hlt
fidivl
xchg
repz
adc
mov
dec
popa
arpl
adc
imul
scas
mov
jg
es
and
call
stos
push
xor
push
loope
dec
enter
xor
out
push
and
js
dec
out
pop
cmpsb
loope
and
fisubl
rcrb
xchg
ds
pop
mov
roll
xchg
in
jmp
shrl
sub
inc
mov
in
clc
test
jg
mov
out
mov
outsl
rol
pop
gs
jae
aas
sbb
fiadds
sub
and
or
inc
or
aad
mov
shr
ret
pop
or
inc
mov
aaa
roll
or
mov
test
out
in
jge
sbb
sbb
popa
add
inc
mov
imul
jmp
push
or
or
je
pop
mov
or
or
ret
and
add
sub
cmp
sbbb
imul
inc
xor
movsb
mov
cwtl
rorl
mov
jge
cmpsl
cli
cmpsb
lahf
mov
es
push
shl
mov
push
clc
mov
pop
pushf
sbb
stos
xchg
lret
adc
mov
mov
push
mov
roll
mov
jnp
pop
lods
shll
mov
ds
addb
lret
insb
and
jne
int
test
insl
test
jo
inc
aad
inc
fmul
inc
pop
mulb
mov
and
mov
addr16
pop
jae
faddl
lods
sti
cmp
mov
fimuls
sub
push
movsb
mov
iret
or
loope
jnp
shl
sub
dec
sbb
mov
pop
movsl
ds
call
out
mov
cmc
dec
test
xchg
cmpsb
mov
fs
dec
addr16
jae
test
shl
xchg
xor
lods
movsb
pop
cmp
cli
pop
mov
imul
sahf
inc
ja
pop
lods
dec
lods
notrack
xor
int3
push
cwtl
sub
dec
fdivr
ret
std
inc
inc
xor
das
mov
add
push
fistps
shl
in
dec
sub
outsb
xor
push
loopne
dec
loope
jae
add
pop
dec
mov
cld
xchg
mov
mov
mov
movsb
lods
push
in
outsb
pusha
adc
dec
pop
xorb
cwtl
pop
das
lods
adcl
das
cmpb
sub
js
mov
and
imul
or
cwtl
movsl
xchg
xchg
shl
jge
xchg
mov
daa
jno
xchg
jmp
adc
pusha
clc
dec
dec
sbb
push
es
test
or
jge
test
ss
pop
out
pop
adc
repnz
arpl
out
shlb
inc
sbb
inc
loopne
sbb
push
outsl
iret
hlt
popa
push
ja
or
cli
and
mov
mov
rclb
mov
pushf
dec
in
cwtl
test
clc
mov
mov
movsb
outsb
jbe
push
lcall
adcl
sbb
jmp
movsl
jl
xor
dec
stos
and
pop
fdivs
addr16
movsl
movsl
addr16
adc
shll
mov
push
sub
out
pop
dec
cld
push
xor
in
nop
in
int
stc
lret
out
xchg
push
filds
pop
rcr
rol
nop
inc
jmp
outsl
xchg
enter
outsl
cs
inc
pop
ror
rorl
xor
sbb
popa
ds
out
cmpsl
pop
mov
add
test
pusha
mov
pmullw
sbb
pop
pop
mov
mov
dec
cmp
cmp
add
pop
jno
add
pop
ret
andl
mov
enter
shlb
test
call
fs
sub
and
xchg
push
push
mov
pop
inc
pop
sub
sbb
dec
insl
stos
cld
jnp
mov
dec
dec
mov
add
mov
in
cmp
les
cmpsb
cmpsl
hlt
or
mov
cltd
jno
int
repnz
mov
jp
enter
xchg
pop
les
pop
xchg
ret
fdivp
testl
divps
push
leave
out
cld
fimuls
mov
mov
dec
bound
pop
das
jae
loopne
lods
outsb
inc
out
push
addr16
cmc
test
cmp
clc
cmp
sub
mov
or
js
clc
out
lea
or
and
ss
cld
cmovge
mov
outsl
out
xchg
fucomp
rcrb
lret
mov
push
pop
out
shlb
call
outsl
pop
fildl
test
cmpsl
outsl
insb
setge
inc
addr16
mov
xchg
inc
movsl
cmp
add
mov
and
ja
dec
cmp
jmp
push
std
in
subl
and
std
inc
cmp
push
push
lret
mov
cmp
repnz
jae
xchg
xchg
inc
ljmp
adc
jne
ret
dec
jecxz
pop
mov
loop
and
rcrl
repz
jmp
xchg
ja
push
data16
mov
lcall
jl
xchg
pop
push
mov
adc
push
inc
xor
xor
jo
loope
push
add
dec
jle
stos
or
adc
imul
pop
repz
mov
imul
neg
cmc
iret
adc
adc
jb
dec
add
adc
inc
icebp
pop
sub
fstl
mov
mov
or
fimull
in
dec
mov
std
xchg
and
insb
pop
or
push
sub
mov
movsl
rcrl
push
xor
add
pushf
testl
push
adc
stos
das
repz
mov
cmc
les
pop
dec
jle
iret
mov
insb
adc
mov
aas
enter
fdivl
sbb
push
jmp
shl
lds
in
aas
in
sbbb
rol
or
int
movsl
test
jle
rol
hlt
insb
ljmp
xchg
stc
out
mov
scas
out
pop
bound
inc
ds
add
sbb
and
pop
mov
insb
lcall
pop
cmp
rorl
jns
notb
and
add
cmp
dec
jae
adc
mov
xor
and
xchg
push
or
xor
sahf
hlt
scas
js
mov
cld
out
jmp
sub
sub
and
lret
lea
mov
mov
mov
ret
pop
jne
ja
pop
lret
test
inc
ffreep
xchg
loop
insl
pusha
pop
jge
dec
mov
in
scas
mov
xor
pop
insb
push
inc
adc
pop
sbb
dec
mov
xchg
aam
test
nop
jo
push
fwait
nop
inc
or
in
into
mov
fidivrl
fcomp
jg
push
rol
mov
push
xchg
dec
mov
sub
fldt
inc
mov
xor
adc
and
xchg
das
outsl
sub
in
inc
pop
xchg
roll
lock
iret
mov
xchg
out
cmp
aaa
dec
jge
call
into
addb
div
sub
push
mov
aad
xchg
mov
movsb
mov
sub
jnp
mov
jb
add
adcb
xchg
push
popa
ficoms
adc
clc
fcmovb
pop
jae
clc
sti
dec
int
mov
pop
sub
xchg
dec
lahf
mov
pusha
aas
inc
or
cmp
subl
mov
jg
lods
ljmp
inc
add
cmpsl
rolb
pop
scas
cwtl
ret
push
addl
xor
enter
sbb
arpl
test
movsb
mov
out
ds
or
push
shrl
jbe
dec
fsubrl
adc
stos
inc
rcll
scas
imul
xchg
inc
xchg
mov
mov
mov
fmul
into
xor
pop
or
or
mov
gs
outsb
ds
cmp
sbb
push
dec
push
mov
jge
daa
scas
xchg
enter
xchg
int3
sub
ljmp
inc
clc
adc
fsubl
jo
out
mov
add
in
pop
or
jo
ja
jno
mov
mov
mov
fnstsw
outsl
and
xor
das
in
fs
adcb
mov
and
sub
jo
jg
addr16
sti
pop
mov
pop
mov
mov
popf
push
daa
mov
cmp
pop
scas
cs
rol
movb
shlb
movsl
sbb
imul
adc
pop
mov
cmp
mov
fwait
sbb
mov
add
mov
ret
orl
sbb
xchg
cmpsb
mov
xchg
cs
adc
mov
les
mov
fstps
adc
jae
pop
int
aas
cmp
notl
je
jno
or
and
fs
mov
adc
or
pop
sarl
xor
mov
jg
and
push
fsubrs
cmp
rcrl
shr
stos
xor
addb
sub
add
xor
sahf
iret
push
and
inc
cmc
cmp
xor
ror
mov
fisubrs
mov
repz
lods
or
cmp
xlat
xor
push
mov
ret
xchg
cltd
fwait
pop
pop
int3
dec
in
push
inc
rorb
xchg
cwtl
jp
mov
stc
mov
and
lcall
xchg
js
jge
aas
dec
mov
in
outsb
add
daa
mov
cmc
cmp
ss
mov
ja
and
xchg
int3
xchg
dec
lds
ficompl
sbb
sarb
pop
insl
cltd
sbb
jecxz
mov
sbb
push
lret
std
cmc
adc
sbb
sub
push
aad
mov
push
push
icebp
out
inc
testb
cmpsb
cmp
pop
lea
sub
mov
sub
mov
add
xchg
push
mov
aam
mov
cli
pop
sub
ljmp
push
in
outsb
dec
jns
pop
loopne
jne
lods
sbb
pop
nop
cmp
xor
jmp
or
lea
cli
movsl
pop
sbb
aaa
adc
inc
cmpsl
pop
cltd
mov
cmp
sbb
das
push
mov
inc
adcl
or
sbb
inc
mov
fnsave
popf
xchg
sbb
imul
add
jb
in
jns
jbe
sbb
out
add
pop
pop
das
movsb
xor
hlt
outsl
bound
daa
cmp
lds
mov
cld
clc
push
out
shlb
dec
inc
jmp
stos
xchg
push
ret
xor
adc
mov
mov
daa
mov
cltd
add
stos
rcll
dec
jb
and
jp
decl
jmp
pop
test
icebp
clc
pop
or
bnd
fs
test
insb
fists
lret
dec
cmp
push
ja
xor
outsl
inc
adc
push
dec
jne
pop
push
int
fwait
adc
lcall
fsubr
sbb
addr16
mov
jmp
sti
ljmp
aad
push
xor
scas
es
test
sub
mov
sbb
shrb
ret
das
mov
mov
dec
aas
leave
jle
mov
repnz
xor
push
pop
ljmp
dec
cmc
pop
movsb
add
stos
mov
pushf
into
jb
sub
xchg
outsb
rcrb
push
adc
push
dec
xor
dec
loop
sub
mov
outsl
xchg
jg
jmp
test
jb
mov
insl
or
inc
xchg
or
subl
pop
xchg
xchg
mov
sub
or
mov
pop
inc
dec
xchg
sbb
aas
jo
fsubs
xchg
test
rorl
fcoml
out
outsb
pushf
pop
imul
iret
add
mov
adc
push
int3
push
push
test
xchg
push
js
mov
push
mov
or
loopne
out
cmp
xchg
xchg
pop
andb
xchg
std
lea
mov
call
or
divl
and
fidivrl
jmp
cli
mov
jmp
sbb
xor
loope
jg
sbb
lods
jne
out
push
xor
rcrb
movsl
mov
dec
lock
outsl
imul
stos
in
push
mov
dec
sti
addr16
fidivl
mov
mov
push
inc
sbb
aaa
and
leave
adc
xchg
shlb
es
push
mov
pop
aam
test
fwait
jnp
or
cmp
sub
arpl
leave
dec
movsb
pop
lahf
add
lcall
es
clc
data16
iret
ss
xor
cmp
jae
mov
adc
xchg
mov
pop
imul
bound
add
int3
dec
sub
adc
inc
pop
je
lea
sbb
sbb
stc
push
mov
mov
add
push
aam
mov
rcrl
movsl
pop
xor
and
push
dec
push
fdivl
push
or
mov
xor
jl
push
add
cmpsb
mov
imul
fnstcw
mov
jmp
mov
in
pusha
es
inc
xchg
adcl
shr
cs
movsb
and
inc
add
aad
cmp
push
mov
out
sub
xchg
adc
in
fwait
mov
and
dec
mov
cmp
add
jge
movsb
mov
rolb
movsb
rorb
out
pop
mov
insl
jb
loope
pop
negb
pop
aaa
and
movsb
and
pop
mov
adc
pop
or
xchg
repz
push
push
shll
push
mov
xor
jnp
fbstp
pop
andb
pop
in
and
shr
mov
loope
mov
inc
out
shrb
call
mov
fcoms
mov
scas
jbe
arpl
dec
pop
push
pushf
arpl
in
push
jo
add
mov
and
lods
test
xchg
jge
stc
fstpl
mov
loope
cmpsb
addr16
mov
stos
and
mov
sbb
pushf
push
rclb
repz
into
in
mov
inc
fildl
scas
push
int
dec
adcb
dec
into
xchg
dec
out
adc
enter
or
mov
insl
pushf
mov
gs
aam
inc
sub
cli
inc
xor
pusha
and
push
push
hlt
push
ja
mov
pop
inc
cmp
or
loope
xchg
xchg
mov
cmpsb
adcl
jnp
pop
xor
pop
outsl
cld
shrb
mov
shrl
push
enter
mull
ficoms
mov
mov
repz
xchg
mov
sbb
xor
adc
in
sub
dec
push
and
mov
out
es
loope
pop
xlat
lods
inc
sbb
test
push
pushf
ret
cmpsb
ljmp
mov
and
mov
push
call
jae
xchg
rol
mov
loope
jbe
push
sbb
fsubs
rcll
pop
xchg
cltd
push
aaa
call
sbb
enter
fwait
pop
sbb
clc
pushf
jnp
pop
test
push
jp
mov
sub
loopne
loopne
movsb
lods
nop
shr
sub
ja
es
mov
aam
test
addl
scas
cmpb
out
aad
outsb
stc
add
imull
insl
pop
bound
fisubrs
pop
out
rorl
push
nop
movsb
xadd
sbb
jne
and
call
rclb
lret
jle
cmp
pop
roll
pop
cmpsl
jb
xor
sbb
add
mov
sub
out
incb
aad
hlt
dec
jmp
outsl
cmp
inc
or
pop
push
es
dec
push
insb
add
addr16
mov
call
aaa
fcompl
movsb
sub
gs
dec
mov
and
pop
adc
call
hlt
inc
loopne
mov
sbbb
mulb
push
pushf
scas
stc
xor
jl
orl
int3
lahf
xchg
dec
es
xlat
sub
push
idiv
loope
and
sub
add
push
adc
adc
lea
and
xor
jo
pop
fidivrl
sahf
jno
or
mov
inc
jnp
aam
mov
pop
loope
xor
andl
rolb
jbe
mov
mov
loope
shll
imul
jmp
xchg
neg
xor
in
lret
stos
mov
mov
adc
ja
push
loop
add
push
data16
adc
jmp
jo
ds
dec
or
and
cmpsl
lds
out
shlb
push
add
pop
jge
push
or
mov
jnp
fstps
stos
stos
mov
popa
mov
icebp
add
add
mov
lock
call
in
mov
ret
mov
fisubrl
shlb
xchg
ss
orl
mov
out
jp
xchg
push
test
cmp
int3
mov
ficomps
mov
xchg
pop
mov
dec
aaa
pop
fcoms
stc
push
jmp
mov
mov
mov
inc
cltd
and
push
aad
or
sarl
jne
das
cld
mov
into
sub
mov
add
cmp
and
hlt
mov
aaa
jp
xchg
fbld
arpl
jmp
pusha
out
icebp
mov
sub
movsl
enter
js
push
rol
mov
xchg
add
bound
fimuls
add
iret
sti
pop
jle
dec
mov
sub
mov
fisubrl
dec
sub
rclb
push
movsb
popf
push
push
popf
mov
push
fdivrs
mov
add
mov
lret
insb
imul
cmp
mov
mov
pop
mov
sub
iret
sub
fsubp
pop
or
cli
fidivs
sub
leave
lock
rcrb
dec
insb
xor
sbb
add
sbbb
lahf
xchg
inc
fnstcw
das
pop
aaa
xchg
shr
lcall
ja
dec
mov
inc
push
aad
mov
scas
adc
push
inc
mov
push
outsl
mov
js
stos
out
cltd
push
int
inc
cltd
in
or
rorl
mov
cltd
sub
nop
inc
xchg
popf
cmpsl
dec
or
lret
push
movsb
jmp
lret
push
jl
sub
mov
sbb
dec
adc
adc
jnp
jne
xchg
mov
ds
adc
pushl
or
or
rclb
ror
mov
adc
clc
mov
pop
iret
add
in
mov
and
stc
xchg
xchg
xchg
lock
add
inc
mov
and
ja
cmpsl
sbb
push
cmp
push
cmc
jle
loop
add
xor
add
jg
lahf
std
fdivr
fistl
mov
cltd
sahf
mov
sub
psrad
sub
jbe
pop
cld
xchg
jb
out
xor
add
aaa
add
adc
movsb
addl
dec
dec
rcrl
mov
or
in
xor
jns
outsl
pusha
loope
xor
sbb
xchg
and
pop
je
add
jecxz
stc
mov
sbb
hlt
nop
pop
test
fisubs
sub
ficompl
xor
sub
mov
stc
dec
pop
icebp
stos
test
loop
push
xorb
mov
mov
ficoml
pop
ja
mov
cmpsl
fnstenv
cmp
inc
ljmp
cwtl
pop
insl
cmp
or
mov
pop
pop
psubsb
idivb
stos
mov
add
hlt
push
cmp
mov
movsl
mov
cmp
aam
mov
cmp
cmp
jg
mov
cli
xor
mov
out
mull
pop
in
inc
or
adc
mov
dec
aaa
and
bound
hlt
subl
lea
nop
ret
aaa
sub
push
fnstsw
jns
outsb
sbb
pop
neg
inc
cmpsl
jle
push
jae
movsl
xchg
or
rclb
jmp
mov
gs
cmp
xchg
pusha
or
add
xchg
jb
jbe
das
dec
daa
mov
pop
or
jns
idivl
inc
fmull
test
xchg
xchg
cs
test
rcrb
inc
in
xchg
daa
je
and
and
cmp
sbb
sub
inc
call
and
in
jg
lock
repnz
push
pop
sub
sbb
xor
out
ds
mov
adc
add
push
aam
push
out
movsb
dec
cmp
mov
adc
jle
inc
ljmp
sub
sbb
rol
lea
pushf
aam
pop
or
dec
es
jmp
scas
jno
in
sarb
lock
in
add
xlat
adcl
arpl
les
cmp
inc
fwait
pusha
nop
add
aad
pop
add
test
or
jo
mov
and
xchg
xchg
sbb
inc
aad
sub
mov
inc
xor
sbb
lea
imul
adc
xchg
int3
dec
ja
mov
scas
pop
dec
lods
add
inc
inc
repnz
int3
mov
clc
cld
cs
cmp
pop
pusha
aas
jne
add
dec
pusha
aas
loopne
fistpll
clc
adc
sahf
cmp
or
into
mov
jmp
dec
cmpsb
mov
mov
add
movb
pop
insl
fmull
std
and
js
mov
js
jp
fnsave
testl
inc
call
sbb
insl
sbb
cwtl
jl
lret
or
dec
out
adc
adcb
lret
cmp
sub
cmc
repnz
fnstcw
mov
sbb
pusha
aaa
idivl
inc
jmp
push
cmc
dec
jge
push
movsb
test
xor
mov
test
jno
fcmovnu
gs
out
sub
pop
les
xchg
out
xor
xchg
scas
stc
cmp
xor
push
aam
out
fistps
hlt
test
enter
push
pop
push
or
jmp
outsb
sahf
aad
xchg
mov
dec
addl
jns
or
out
dec
jno
dec
and
cmp
into
mov
data16
cmc
push
clc
outsb
cmp
inc
xor
outsl
and
xlat
lods
jns
stc
jo
bound
dec
push
mov
sub
movsb
movsl
fldl
mov
jge
decl
stc
cmpsb
add
xchg
aas
xchg
shll
fld1
cmpsb
push
sbb
movsb
jbe
mov
stos
mov
shll
dec
and
lret
mov
pop
movsb
inc
push
aad
cmpsl
shll
imul
mov
je
dec
lods
push
xor
ja
xchg
mov
imul
cmpsl
out
push
scas
inc
sub
lods
add
inc
push
push
mov
mov
and
add
cld
mov
ja
mov
cmp
mov
lret
out
loop
jb
jmp
dec
lahf
and
sub
sbb
dec
sbb
rolb
lahf
jge
cmp
daa
and
fistl
pop
dec
jb
mov
aaa
jmp
push
cmpsl
movsl
and
dec
inc
cmp
xchg
mov
pop
jae
arpl
xchg
cmp
lods
movsl
xor
dec
push
mov
jns
lahf
in
cwtl
sarb
repz
xor
or
je
mov
mov
es
sub
sub
fldenv
jp
out
mov
js
xlat
mov
and
outsl
sbb
jbe
sub
mov
inc
xor
mov
sbb
xor
loop
sbb
mov
sti
pop
pop
jb
ret
and
push
cwtl
xchg
mov
sbb
sub
fcmovb
jmp
stc
out
xorb
loopne
dec
insb
lods
mov
push
stc
and
pop
jmp
jns
push
icebp
pop
iret
xorb
cs
jg
xor
repnz
out
dec
sbb
push
sbbb
mov
fimull
dec
lcall
xor
sub
and
xchg
insl
jne
cmp
cmpsl
clc
jns
fmull
mov
sbb
rolb
jne
mov
jge
dec
cli
bswap
xor
pop
pushf
das
xor
and
lods
push
in
sub
dec
mov
pushl
ds
sub
cmp
pop
xor
addr16
call
mov
push
xchg
lods
or
and
test
dec
stc
or
jecxz
imul
cmp
inc
xor
inc
inc
push
push
and
vmaxss
cmp
cli
adc
das
icebp
mov
add
sbb
mov
jbe
mov
stos
mov
loopne
pushf
cmc
mov
in
lock
rcrb
lods
mov
lods
loopne
daa
lds
sbb
pop
mov
pop
test
dec
lret
sbb
pop
or
xchg
ds
push
test
push
cs
inc
fldl
sub
xor
cmp
stos
adc
push
shlb
and
cmp
and
mov
xchg
out
dec
and
inc
jmp
mov
push
mov
cld
bound
dec
sbb
push
mov
adc
cmp
cmpsl
xor
sub
lret
push
or
test
aaa
mov
cmp
mov
xor
dec
sub
xor
mov
cmpl
divb
push
mov
cld
mov
dec
lret
adc
nop
mov
push
scas
stc
daa
sbb
notb
nop
popf
pop
into
mov
aaa
mov
dec
les
mov
inc
shll
or
stos
adc
sarl
sti
popf
xor
in
mov
out
or
mov
jle
orl
nop
xor
adc
mov
pop
cs
push
addr16
and
inc
pop
mov
push
lods
or
fcomip
mov
inc
or
enter
icebp
sub
adc
cmpl
mov
pop
or
dec
je
xchg
pop
dec
cmpsb
push
sbb
test
cmpsb
push
push
aam
dec
std
hlt
adc
je
adc
sbb
js
mov
jmp
gs
aam
dec
mov
pop
mov
inc
aaa
xlat
adc
mov
push
jl
leave
pop
mov
push
mov
jge
xchg
out
push
aaa
cmp
push
push
movl
adc
pop
jp
movsb
xchg
push
xchg
or
aad
and
test
mov
push
imul
cwtl
mov
push
mov
xor
jbe
push
or
mov
outsl
xchg
xchg
mov
enter
cmpsb
or
dec
cmc
xchg
jbe
mov
shlb
mov
jmp
mov
dec
cli
incl
loop
cltd
rcr
mov
cmpsb
fisubrl
aas
mov
insl
ret
push
fdivl
push
adc
mov
movsb
dec
and
mov
inc
pop
pop
rcr
lea
lahf
pop
fistps
aad
test
sbb
adc
lods
test
repz
imul
insl
test
mov
lret
test
popf
add
push
inc
in
lret
popl
mov
dec
lods
repz
cmc
sub
ljmp
loop
mov
ret
inc
daa
cmp
mov
jb
rorb
xor
pop
ljmp
int
lods
adc
popa
fsubs
mov
bound
in
loopne
in
xchg
adc
stos
cmp
and
or
fcoml
repnz
jle
lcall
jns
pop
inc
ss
imulb
popa
add
in
push
js
sbb
mov
int
and
xchg
jo
mov
ljmp
js
pop
add
hlt
es
mov
mov
in
mov
nop
outsb
negb
stos
ret
pop
mov
adc
push
pushf
xchg
imul
repnz
inc
push
insl
xor
dec
cltd
cmpsb
ljmp
js
dec
inc
outsb
loope
pop
mov
shrb
xor
mov
out
mov
fnstsw
xchg
and
jle
aad
mov
sti
mov
or
cmp
and
daa
pop
je
adc
sbb
movsb
mov
rcll
jmp
cwtl
in
add
push
fcmovu
adc
jae
xor
inc
aaa
ret
out
mov
cld
mov
ror
lock
loopne
fsts
xchg
adc
push
in
popl
pop
in
adc
int
fisubl
pop
mov
push
pop
cmc
fnsave
sub
add
inc
push
outsl
mov
sub
addr16
scas
test
lds
in
imul
add
call
mov
inc
xchg
pushf
cmp
jle
push
insl
sub
or
test
lock
aaa
daa
test
imul
aam
xchg
xor
jne
xor
push
pop
mov
imul
mov
mov
icebp
insb
lcall
movsb
rcrl
fdivr
out
jb
dec
sbb
dec
mov
popf
std
int3
addl
cmp
mull
xor
xchg
push
leave
pop
mull
sahf
push
shll
sarb
mov
or
nop
adc
daa
mov
pusha
loopne
ret
xchg
push
nop
cmpsb
xchg
xchg
cli
add
add
test
xorb
or
mov
inc
add
or
jne
xor
jg
add
lds
fisttpl
pop
aam
andb
movsl
andl
adc
sbb
xchg
lret
loopne
ljmp
mov
mov
sti
test
popa
lods
pop
cmpsb
jae
fs
test
mov
mov
int
or
xchg
dec
jp
fwait
mov
inc
stos
in
shll
shll
jb
loop
hlt
push
dec
sub
cmp
inc
jne
out
in
lea
in
outsl
arpl
push
and
repz
pop
leave
pop
add
std
ljmp
mov
das
mov
jg
dec
imul
cmp
pop
cmp
mov
cltd
dec
adc
cli
add
lods
or
test
cmp
mov
sub
int
cmp
loopne
inc
push
mov
in
xor
sbb
fs
repz
mov
mov
in
adc
ss
xor
dec
pop
imul
shlb
or
mov
rorb
das
cs
fisttps
outsb
lds
je
push
sub
repnz
sub
test
push
cmp
sarl
sub
xchg
cld
lods
pop
hlt
pop
or
add
stc
movsb
and
inc
jb
and
cmp
stc
imul
arpl
lds
addr16
dec
sub
push
jno
mov
popa
mov
xchg
inc
dec
fldl
cs
lods
mov
push
hlt
sahf
push
mov
mov
jne
cs
das
sub
mov
and
pop
sub
xchg
cmp
ret
ja
fdivp
into
dec
into
testl
cmp
jg
lea
loope
jns
mov
mov
mov
divb
clc
idiv
sbb
mov
mov
loope
mov
ljmp
mov
into
ret
int3
mov
push
adc
inc
ret
push
out
in
and
stc
mov
cwtl
fwait
jp
lods
dec
push
adc
fcompl
cmp
les
addr16
pop
loopne
or
out
loope
inc
push
shlb
lods
test
nop
std
je
adc
xor
pop
insl
mov
les
fmuls
push
mov
clc
push
dec
into
jbe
inc
imul
stc
or
mov
inc
push
adc
js
ja
stos
lock
add
xchg
lock
into
in
fldl
fimull
xor
mov
stc
stos
nop
les
xchg
pop
cld
loope
fidivs
es
test
jl
mov
pop
push
fimull
jle
aas
xchg
test
stos
fwait
adc
sub
add
xchg
mov
inc
bound
imul
lock
mov
adc
cmpl
cmp
mov
in
mov
jne
jecxz
and
in
outsb
lcall
inc
xchg
cmp
jae
test
pop
mov
movsb
bound
push
xor
sgdtl
mov
cwtl
fldenv
sub
sbb
sbbl
imul
add
sar
jg
in
sbb
mov
in
out
mov
inc
sub
sbb
dec
push
mov
or
fldl
lret
dec
out
sbb
lret
jnp
mov
add
loop
mov
inc
cmpb
iret
jp
hlt
inc
out
insl
jae
in
bound
xor
add
imul
adc
fimull
mov
pop
xor
lahf
xor
jno
or
ret
push
movsl
and
jae
faddp
into
imul
adc
cwtl
les
inc
push
pushf
cmp
push
roll
in
cmp
popf
test
mov
mov
mov
je
xor
fadd
js
aas
out
shll
pop
xchg
push
push
gs
push
and
mov
ss
dec
outsb
lahf
insl
and
out
das
xchg
lret
or
shlb
mov
loope
popa
push
sbb
sbb
popf
jp
cmp
ret
pop
lds
leave
in
es
cmc
pop
xchg
fsub
repnz
popf
in
pop
adc
dec
mov
fs
lcall
jbe
lahf
inc
or
or
xchg
mov
inc
mov
mov
dec
sbb
xchg
pop
adcb
adc
jl
hlt
adc
xchg
cld
mov
mov
mov
pop
cli
pop
movsl
bts
sub
push
ljmp
iret
cmp
xchg
xchg
jl
dec
push
inc
xchg
lret
push
adc
sub
cmpsb
imul
adc
or
mov
xchg
push
lods
popl
push
cmp
jo
je
adc
dec
push
pop
push
dec
sub
jns
xchg
test
into
les
subb
iret
sbb
leave
inc
pop
dec
mov
push
dec
jae
xor
cmp
es
xor
aad
sti
and
imul
sbb
lret
inc
xlat
xor
loope
cmp
pusha
cmpsb
aad
test
aam
mov
and
sar
loope
jne
jecxz
popf
bound
bound
mov
inc
int
nop
mov
jns
pop
outsb
jmp
sub
add
push
pop
addr16
fadd
pop
push
jmp
pop
aas
aam
rcll
xor
push
add
sbb
xchg
lret
repz
mov
int
mov
gs
inc
adc
roll
inc
and
dec
ror
sub
imul
loop
popa
cmp
and
imul
and
cwtl
push
or
frstor
mov
adc
dec
ss
dec
mov
clc
mov
pop
fcmovbe
or
iret
xor
insl
push
dec
imul
pop
cmp
rorl
inc
pop
inc
push
mov
int
jno
repnz
jecxz
neg
inc
inc
mov
lahf
dec
dec
aad
and
adc
pop
pop
stos
push
cmpb
addr16
in
and
fsubs
push
cmp
inc
adc
dec
mov
mov
fbld
push
mov
xchg
xchg
movsb
xchg
out
clc
jmp
cmp
mov
and
insb
xlat
aaa
push
and
inc
mov
call
aam
jmp
push
jno
add
out
pushf
and
pop
jmp
in
pop
pushf
aaa
jg
divb
sub
mov
int3
inc
mov
mov
hlt
push
push
stc
sub
lret
cmp
and
sub
inc
xchg
inc
push
inc
or
enter
gs
sarb
shrb
or
mov
js
push
arpl
jae
sti
or
addr16
pop
pop
ret
mov
push
jae
dec
dec
inc
and
or
jae
xchg
pop
and
scas
fstpt
pop
js
out
aad
sbb
loop
aas
mov
je
add
outsb
mov
lea
add
dec
push
mov
out
jns
mov
movb
sbb
push
les
inc
jae
pop
add
cmc
push
xor
imul
fsubr
sub
push
push
push
sti
aaa
test
add
xchg
jae
cli
jno
xlat
push
or
insl
scas
cmp
lahf
dec
setb
sti
sahf
adc
outsb
sbb
popa
and
mov
fdivs
out
popa
jle
bound
cs
sbb
add
dec
mulb
lock
lcall
sub
inc
xor
or
cltd
cmpsl
stc
or
out
faddp
mov
mov
xlat
iret
push
mov
jns
cmp
sub
sub
dec
xor
lods
bound
loopne
xchg
cmp
cmp
sbb
jg
in
xor
insl
or
sti
daa
jne
adc
dec
inc
loopne
rorl
leave
pop
pop
stos
loop
adc
dec
dec
sbb
fstl
mov
pop
pop
fisttps
iret
and
aaa
lret
push
data16
or
dec
fadds
lea
das
fnstcw
fmuls
sbb
and
aad
notb
jne
addr16
ss
mov
inc
call
mov
ja
push
xchg
cltd
adc
jg
into
add
jbe
xchg
mov
arpl
idiv
fcomip
int3
cmpsl
cwtl
das
push
insb
pop
movsb
or
or
rol
mov
mov
inc
sub
out
jmp
sbbw
cmp
cmp
daa
aad
adc
frstor
bndldx
add
inc
pop
fcoml
sarl
mov
mov
insl
mov
mov
cmp
add
or
loop
inc
ret
rcrl
test
fadds
mov
jecxz
in
data16
sar
fcoml
and
push
xchg
xchg
call
push
or
xchg
or
jle
sbb
cmpsb
popf
das
ret
fbld
jl
ss
pop
sub
sbb
js
mov
xor
movsl
jns
pop
inc
adc
das
js
adc
jo
sub
sub
cmp
sub
mov
ljmp
cmp
int3
push
gs
pop
andl
icebp
fstpt
pop
in
inc
mov
cmp
sub
out
pop
repz
push
aam
sbb
adc
mov
daa
dec
scas
aas
xchg
cmp
sbb
sahf
or
fistpll
jmp
add
lock
gs
lahf
or
push
adc
out
vmovlps
push
loope
or
pop
mov
mov
outsl
pop
or
adc
jb
jg
mov
addr16
mov
movq
loop,pn
stos
jecxz
popf
mov
mov
bound
cli
mov
gs
jae
add
and
dec
repnz
repnz
ljmp
idiv
push
outsl
add
adc
scas
push
push
xchg
pusha
outsl
lds
iret
shll
subb
icebp
orb
jl
mov
shrl
jecxz
mov
test
or
pushw
aas
xchg
pop
push
mov
insb
fwait
cli
mov
sahf
dec
jecxz
decl
pop
sub
js
sbb
xor
cmp
push
xchg
sub
or
jecxz
out
rcrl
xor
out
mov
sahf
pushl
cli
fwait
mov
push
sbb
dec
adc
dec
idivl
hlt
inc
shrw
jecxz
lret
ljmpw
in
aaa
test
inc
imul
mov
push
cmpsb
aaa
pop
test
mov
lret
int
jne
push
inc
imul
insb
scas
stos
xor
scas
clc
xchg
xor
nop
mov
add
adc
leave
in
fidivrl
xchg
xchg
out
mov
cs
in
loop
pop
ljmp
cmc
mov
xor
scas
lcall
push
adc
or
mov
std
fwait
inc
jno
insb
dec
xchg
push
stos
popa
xchg
cmpsb
xchg
test
stos
imul
inc
add
outsl
mov
pop
push
jmp
scas
dec
add
push
inc
pop
mov
pusha
fadds
jmp
pusha
add
pop
inc
dec
sub
mov
sti
and
add
jo
lea
aam
iret
and
jp
push
sbb
xchg
lods
inc
movsl
xor
or
inc
and
sarl
push
sbb
adc
repnz
int3
and
ljmp
inc
sti
cmc
adc
test
inc
ret
pop
dec
out
mov
mov
icebp
jmp
add
loopne
je
sbb
icebp
enter
sub
mov
sub
je
pop
ljmp
xlat
jecxz
or
pop
out
lds
dec
rcrb
in
lret
mov
mov
pushl
jnp
and
lret
pop
out
xchg
push
mov
dec
stos
lret
and
aaa
cmpsb
test
test
jecxz
aad
mov
pop
mov
xchg
fs
into
out
mov
inc
rclb
cmp
jp
pop
daa
inc
and
jl
or
mov
xchg
cmp
sti
push
sub
stos
test
jnp
out
mov
in
dec
add
push
jl
inc
xchg
mov
lret
mov
push
jo
xchg
sbb
fs
mov
mov
mov
outsb
pop
mov
repz
inc
js
sub
cmp
pop
popa
adc
inc
rorb
cmp
sub
repnz
stc
loop
cmc
sbb
movb
pop
ds
xchg
je
ds
out
mov
test
inc
clc
mov
or
mov
mov
mov
xchg
fmull
sub
pusha
popa
test
incb
clc
loope
push
add
sbb
loopne
aas
lret
lahf
mov
sti
push
mov
into
xor
je
aam
add
rcll
sbb
popf
mov
test
aaa
and
repz
cltd
std
mov
out
bound
in
dec
push
rorb
ret
bnd
ds
shrl
lahf
loop
inc
test
mov
dec
ljmp
mov
or
dec
insl
out
mov
sub
mov
iret
out
insl
mov
sub
mov
and
inc
sahf
push
pushf
es
les
stos
jp
jns
pusha
rcrb
imul
negb
cmp
incl
xlat
mov
popa
dec
sti
outsb
rorb
cmp
cs
into
jg
mov
pop
adcl
add
scas
test
xlat
in
push
mov
movsb
push
pop
inc
out
push
push
sub
repz
daa
fnstenv
arpl
adc
addr16
lock
stos
in
sbb
leave
lret
stos
sbb
and
dec
lock
scas
sbbl
pop
es
lcall
ret
inc
and
pushf
and
in
xchg
icebp
or
test
xor
bound
xor
push
out
mov
sahf
cmpb
jbe
and
das
jo
iret
ljmp
fmuls
addr16
test
and
stos
arpl
jmp
scas
in
xlat
movsb
add
in
dec
and
jnp
dec
dec
mov
ret
mov
xor
and
mov
dec
movsl
add
lods
ss
cltd
jbe
mov
int3
cmp
dec
out
jge
stos
scas
inc
xor
ljmp
cwtl
adc
mov
insl
pop
cmc
call
inc
and
mov
pop
cmpsl
mov
push
repnz
shlb
bound
or
jae
insl
lds
stc
mov
stos
dec
aam
subb
shrb
loope
in
test
mov
pop
inc
dec
push
setno
sub
add
mov
mov
rcr
dec
jns
stc
mov
mov
lret
cs
cs
nop
or
sbb
dec
push
add
shlb
xor
cwtl
xchg
mov
dec
pop
mov
dec
jp
dec
push
call
sti
adc
adc
pushf
lret
inc
addr16
ds
and
sub
imul
jl
xchg
inc
push
iret
jl
xor
push
dec
cs
iret
add
loopne
add
mov
dec
jg
cld
not
fldt
xlat
aad
ret
mov
jecxz
sub
js
mov
ja
pop
clc
adc
pop
cwtl
and
sub
and
bound
ja
insl
jno
push
std
xor
lock
movsl
inc
lahf
test
lret
movsl
add
mov
sahf
mov
sbb
mov
out
pop
sbb
lods
rclb
fistpl
lret
inc
dec
pop
mov
jle
les
out
xor
mov
inc
sti
mov
shll
or
pop
mov
xchg
shl
das
adc
pop
jb
push
or
clc
int
clc
cmp
js
cld
add
mov
lock
and
sbb
std
dec
sub
or
mov
arpl
movsb
xchg
movsb
jmp
pop
and
push
push
in
inc
add
outsb
enter
fs
in
in
mov
repz
xor
or
jecxz
xlat
and
mov
mov
in
fldenv
dec
or
pusha
fwait
les
out
and
inc
cmp
aas
xchg
fisubs
add
test
cltd
mov
fstps
xchg
call
add
fisubrl
sub
cmp
femms
mov
pop
jecxz
aaa
pop
jo
clc
ss
lret
fidivrs
imulb
mov
xchg
inc
pop
shrb
incb
push
inc
ljmp
sbb
and
xor
xorl
ljmp
insb
insb
pop
lods
jne
and
jae
sarb
cmp
xor
mov
iret
xchg
jbe
pushf
pop
add
jb
shl
jl
add
push
sub
adc
lret
insl
mov
cmp
pop
pushf
xor
flds
push
call
ret
leave
push
sbb
mov
fistpll
and
cmp
movsl
pop
ljmp
gs
and
iret
xor
mov
mov
dec
cli
frstor
sbbb
addr16
pop
mov
mov
iret
jg
jae
fistpll
mov
sbb
aas
test
dec
mov
std
stc
sbb
push
mov
xor
in
repnz
lret
fidivl
pop
xchg
aam
addr16
out
pop
push
mov
in
and
cmp
mov
pushf
xor
cmp
xor
xlat
push
cmp
xor
sub
popa
sbb
add
inc
into
pop
imul
mov
and
or
xchg
mov
imul
pop
lods
popf
inc
add
int3
push
xchg
sbb
pop
sahf
enter
sbb
mov
sub
xchg
push
adc
dec
hlt
add
push
test
cmp
aaa
inc
sub
mov
sbb
adc
push
mov
nop
pop
or
mov
add
cmpsb
sti
sbb
imul
rorl
push
movd
shlb
adc
mov
xor
push
fistl
out
xchg
mov
fnstcw
mov
xor
js
lock
outsl
int
jo
mov
cld
xor
jecxz
adc
push
mov
xchg
mov
clc
scas
xchg
lock
ja
inc
pop
fsubp
xchg
dec
jp
jl
mov
test
pop
mov
jmp
call
scas
push
nop
out
loop
popa
sti
faddl
pop
cld
test
or
inc
mov
leave
jmp
fwait
aam
xor
rol
popa
sbb
test
inc
mov
movb
jbe
sub
push
jecxz
push
sub
xchg
mov
push
movsl
sti
sub
loop
and
fsub
stos
jae
adc
push
add
and
and
lods
jb
dec
dec
lcall
cmp
decl
pusha
enter
dec
cmp
lds
add
out
out
or
jecxz
dec
test
mov
mov
pop
sub
xchg
insl
sub
cmp
jb
pusha
inc
stos
xor
cli
sbb
loope
rcrl
sub
fdivl
jle
call
cmp
sub
nop
ljmp
adc
daa
frstor
out
mov
sbb
pop
cld
xor
mov
scas
push
push
call
inc
pusha
add
push
xchg
test
push
loope
jnp
jo
push
addr16
push
in
push
aas
sahf
push
out
cmc
mov
aaa
ret
dec
adc
pop
sub
cmpb
xchg
or
arpl
mov
or
jl
test
sub
sub
cli
and
xor
test
mov
das
push
into
das
dec
mov
ja
out
xor
jne
cli
mov
or
cmp
or
mov
jno
and
lahf
pop
xor
adcl
call
adc
push
fbstp
mov
mov
adc
sub
cmpsb
ja
shl
sub
rorl
and
mov
mov
xchg
test
jns
test
lahf
push
mov
add
cmpsb
push
shrb
dec
cmp
cmp
push
xchg
das
fdivrs
adc
sti
pop
mov
mov
jo
inc
or
xchg
clc
ret
dec
push
push
and
or
loope
iret
sub
mov
shlb
xor
mov
test
int3
xchg
push
or
loope
inc
in
mov
dec
shll
aas
inc
jb
push
out
test
aad
pop
dec
stos
sbb
cmpsb
cltd
lock
jge
decl
jg
cwtl
je
mov
mov
enter
jne
sbb
bound
pop
jge
sub
mov
mov
mov
adc
les
popf
cld
subl
fisubl
mov
push
sbb
xchg
sub
jmp
cmpsb
rolb
jmp
mov
insb
mov
sub
xchg
xchg
xchg
push
jne
sbb
rcll
push
fstps
stc
mov
test
jae
and
cld
sti
cltd
test
xor
or
mov
jl
sbb
push
insl
rcl
fwait
repz
lds
cmpsl
enter
push
mov
pop
les
outsb
out
insl
inc
insl
inc
movsb
cli
test
int3
mov
sbb
xchg
iret
jecxz
or
nop
jg
cmpb
inc
mov
push
outsl
in
lret
into
sbb
push
pop
sbb
addb
aam
outsb
vmptrst
and
lods
in
int3
push
jp
push
ja
nop
mov
stc
fchs
add
sahf
repnz
sub
fsub
cmp
push
push
pop
xchg
add
mov
push
inc
jge
dec
mov
mov
sbb
add
ds
cltd
lcall
lock
pop
notl
xor
enter
bound
jge
mov
xchg
xchg
in
and
push
cmp
mov
jl
mov
loope
lock
out
in
mov
xchg
insl
inc
mov
aaa
and
mov
imul
loop
mov
sbb
fidivrl
rolw
xchg
outsl
out
sub
gs
leave
mov
sub
sbb
movsb
inc
sbbl
fimull
cmp
int3
lods
sarl
cmp
jmp
sarl
daa
lret
imul
push
push
inc
pop
ret
dec
popf
mov
lret
and
imul
leave
xor
adc
aam
dec
xchg
ficoml
ret
jmp
xor
add
popf
mov
jmp
lods
inc
and
fs
push
sbb
mov
add
scas
leave
xchg
push
daa
sub
dec
or
jne
int
inc
sub
mov
ds
push
cmpsb
in
inc
repz
and
out
or
daa
sbb
xchg
fs
daa
pop
out
adcb
outsl
iret
cmp
into
les
fbld
idivl
xchg
test
dec
enter
jne
dec
das
outsl
popf
ljmp
das
sub
or
sbb
dec
out
sbb
mov
mov
push
adc
xchg
out
shlb
test
cmp
mov
xor
xchg
jnp
dec
sahf
inc
shl
int3
lret
mov
push
xchg
lds
fwait
stos
xchg
fsubl
mov
popf
push
xor
mov
fisttpl
out
adc
or
imulb
xchg
and
sahf
mov
mov
add
adc
jmp
jne
test
mov
insl
pop
scas
fdivrs
fidivrl
mov
repnz
xor
mov
ficoms
aad
jle
jno
sbb
xor
in
jnp
cmp
std
in
sub
rolb
and
inc
mov
dec
mov
sub
es
add
push
or
cbtw
mov
xor
cs
cmpsl
imul
xchg
enter
repnz
push
mov
sub
and
mov
mov
dec
push
dec
push
pop
jnp
hlt
mov
inc
iret
cmp
movntps
adc
arpl
jmp
and
sbb
fwait
jp
mov
sbb
movsb
xor
mov
pop
iret
repz
xchg
scas
or
imul
shll
dec
test
xor
lds
sbb
aam
or
jge
inc
push
push
push
mov
shrb
or
and
loopne
test
add
push
aad
inc
pusha
test
popa
or
ljmp
xor
add
sub
fs
pop
cmp
iret
ljmp
bound
decb
ds
negb
andl
jl
lods
rcrl
clc
sbb
lret
repnz
sub
dec
push
out
cmovle
sub
imul
pushf
and
repz
xchg
nop
fs
mov
cmp
lcall
mov
repnz
add
cmpsb
scas
dec
mov
jmp
mov
imulb
jae
xor
or
addr16
pop
vmwrite
push
lods
loop
pop
xchg
jle
push
loopne
inc
pop
pop
sti
leave
dec
push
add
sbb
inc
je
mov
xchg
mov
pusha
jb
mov
push
sub
rorb
mov
xor
push
sbb
and
cs
jo
push
insl
mov
fnstenv
fildll
xchg
outsb
pop
sub
pusha
leave
ds
mov
jno
inc
stc
leave
aas
shll
sub
and
outsb
sbb
fisubs
cltd
movsl
aaa
out
daa
pusha
xchg
cld
inc
pop
jge
enter
adc
stos
inc
xchg
outsb
test
les
push
jle
sub
mov
addr16
lods
pushf
sbbl
and
inc
aam
icebp
jb
test
xchg
lcall
ja
sbb
lahf
int
push
xchg
pop
mov
enter
rclb
negb
cmp
dec
aad
xor
call
stos
mov
aam
pop
popf
and
stc
mov
pop
cli
mov
sub
cmpsl
stos
and
fnop
in
push
cmp
orb
or
sbbl
test
xor
fwait
int
lcall
lds
inc
xlat
jae
pop
and
mov
outsb
daa
pop
loope
pop
adc
pop
hlt
aaa
push
iret
fbld
jns
mov
cmpsl
lahf
or
xchg
aas
cli
jle
mov
cmp
test
jns
lods
je
pop
out
fsubrl
ret
aad
sub
test
add
xchg
xor
test
bound
adc
clc
jo
cmp
stc
loope
loopne
in
mov
jmp
jo
loop
shrl
jae
jg
rcl
shlb
rolb
push
jecxz
insb
cmc
xor
pop
push
shll
into
inc
dec
shrl
or
cwtl
and
test
mov
and
fsqrt
leave
or
xor
cs
jp
dec
fwait
adc
push
and
or
sahf
mov
pop
popa
call
or
clc
and
gs
jne
sbb
subb
aam
aam
imul
xlat
repnz
fisttps
cmp
rcr
ret
es
mov
jns
sbb
cmp
test
dec
mov
mov
cmp
das
adc
jns
stos
xchg
cmp
lods
add
in
cmp
xor
fbstp
push
nop
or
addb
jbe
fadd
and
ss
mov
pop
jns
dec
add
jbe
push
xchg
push
inc
add
lahf
test
fcomps
je
jecxz
enter
dec
adc
sbb
mov
add
lods
push
mov
mov
je
jno
sbb
call
pop
fadds
out
or
or
mov
mov
mov
inc
cs
pop
mov
sbb
cld
push
bound
push
int
mov
out
arpl
xor
repnz
push
dec
insb
addb
mov
rcrb
iret
jnp
or
call
shll
test
xor
xor
push
push
fidivrl
lret
cmp
sbb
sbb
sbb
pop
call
cmpsb
lea
sub
mov
add
mov
out
and
fisubrs
sub
movsl
fisubs
sbb
into
lea
dec
mulb
pop
xchg
mov
pop
jle
leave
sub
sbb
in
mov
cmp
push
and
push
adc
pop
push
decb
ljmp
mov
cwtl
xchg
divb
mov
in
lock
insb
jge
pop
jae
or
jb
jmp
jecxz
outsl
and
mov
push
sub
mov
pop
subl
sub
cmp
rcll
push
jns
xor
inc
pop
js
adc
sbb
arpl
xorl
movsl
aad
mov
popf
rcr
adc
xor
sbb
or
mov
inc
int
dec
std
loopne
mov
adc
pop
rcll
iret
inc
adc
jo
lret
or
jo
into
push
fs
fstps
cmp
jno
mov
sti
ja
out
out
cwtl
or
xchg
sti
jae
mov
and
jns
mov
aad
sarl
popf
or
stc
or
outsb
push
mov
enter
jae
mov
jg
mov
and
sbb
icebp
ja
aad
enter
fisttpll
push
jl
gs
mov
xor
dec
out
loope
cmp
daa
decb
mov
mov
jb
pop
popf
notb
and
les
cmp
in
cltd
cmp
adc
frstor
pextrw
cmp
xchg
outsl
sbbb
push
popa
out
fwait
jl
pop
fisubl
pushl
negb
push
dec
xlat
or
scas
ds
add
test
popf
sahf
mov
pop
push
xor
iret
pop
pushf
push
mov
pop
out
add
in
xlat
fists
fwait
mov
mov
repz
daa
call
mov
xchg
loopne
lret
mov
inc
jae
stc
flds
mov
sbb
fwait
shll
cmp
dec
jg
mov
xor
dec
int3
mov
or
inc
pop
int3
in
ljmp
lea
inc
lds
pop
xchg
mov
mov
jns
xor
fwait
sbb
imul
loope
imul
mov
in
mov
or
sbb
cld
sbb
rol
adc
lea
pop
es
cmp
dec
fstps
mov
dec
inc
sbb
mov
push
test
dec
jl
xchg
or
jo
outsb
mov
push
outsb
sbb
inc
fwait
cmc
inc
inc
loop
repnz
ret
xchg
push
arpl
adc
es
out
and
loope
jle
mov
movsl
imul
xchg
jle
sbb
fwait
in
addr16
pop
add
mov
andb
dec
lret
fists
fst
loope
push
mov
cli
mov
push
aam
arpl
sbb
mov
pop
sbb
dec
scas
pop
loope
addl
xchg
subl
stc
movsb
or
in
mov
inc
pop
sbb
stc
push
addr16
sub
xchg
and
lods
sti
lcall
add
jns
sub
int3
cli
out
adc
arpl
add
out
je
roll
ret
sub
pop
mov
fildl
andb
adc
jno
sub
test
loope
imul
and
outsb
push
sbb
push
xor
mov
repz
cmp
cld
lcall
pop
sub
out
jecxz
cltd
inc
xchg
stc
scas
jo
mov
xlat
cmpsb
ret
into
fisubrs
sbb
roll
pop
mov
imul
mov
pop
mov
fstl
ljmp
mov
jmp
shl
aam
xchg
inc
mov
xlat
mov
sbb
aas
gs
mov
addr16
outsb
cltd
mov
add
ja
imul
push
loopne
dec
push
jle
add
leave
clc
inc
lcall
xchg
push
or
sahf
gs
test
fidivl
add
test
pop
aaa
sbb
mov
adc
cmpsb
pop
ds
mov
dec
nop
sub
aad
out
xlat
out
mov
fisubs
mov
pop
xchg
sahf
push
xchg
fldcw
mov
fs
in
data16
sbb
jo
push
xchg
jle
test
mov
mov
push
cmc
stos
ja
popa
push
lock
inc
mov
jp
les
jne
dec
test
mov
stos
scas
test
stos
in
aad
ja
orb
mov
outsb
and
push
adc
les
nop
dec
pop
test
or
inc
aas
add
push
mov
jle
jge
addr16
pop
rorl
lret
jns
out
out
out
shl
pusha
jne
push
push
mov
mov
inc
out
pop
insl
call
or
aam
pop
mov
mov
outsl
repnz
and
pop
jecxz
lods
jne
fwait
mov
and
mov
jnp
stos
mov
push
lahf
jle
push
xor
push
dec
addr16
cmp
rcl
enter
shll
jecxz
fisttpll
jno
or
stos
stc
ljmp
out
pop
cmp
push
repz
shlb
mov
test
stc
nop
mov
inc
clc
sub
notl
inc
cmpsl
icebp
push
sarb
int
aad
sub
sub
dec
negl
dec
cli
sbb
dec
das
ja
cmp
bts
imul
ds
daa
mov
sbb
bound
add
jo
and
imul
push
sub
xor
xor
mov
addr16
orl
stc
daa
lods
push
daa
pushf
repz
leave
mov
cmp
or
dec
test
or
andb
xchg
cwtl
push
add
dec
cmp
into
test
popa
jp
mov
jbe
jne
add
and
sub
mov
adc
aaa
dec
repz
fs
mov
fsubrs
push
sbb
mov
adc
cmpsb
loope
cltd
cmc
das
icebp
adc
add
or
es
xchg
loope
imul
rcr
dec
jge
or
add
dec
imul
jle
test
mov
sub
mov
lahf
insl
fsubrl
add
sub
cmp
xchg
add
outsl
dec
jle
test
fistpl
mov
cmc
sbbb
pusha
iret
fcmovb
adc
push
or
xchg
jo
mov
into
push
es
or
repnz
push
inc
loope
cmp
pop
lahf
mov
and
and
ds
or
add
test
xor
fimuls
jge
mov
add
sbb
sbb
sbb
add
push
adc
inc
fcmovbe
sbb
out
jle
pop
mov
and
cmp
ja
adc
inc
xor
gs
mov
daa
mov
or
addr16
ret
jg
daa
xchg
test
xchg
pop
adc
fbld
fstps
cmp
mov
push
sub
fsubs
sbb
sbb
cltd
add
pushf
sbb
sahf
popa
jnp
pop
dec
je
xchg
sub
push
pmaxub
fildl
mov
or
and
mov
mov
adc
out
scas
fndisi(8087
es
ljmp
adc
jg
cld
sbb
repnz
fsubrs
andl
and
add
rsqrtps
in
shll
aas
inc
out
pop
test
fisttps
shll
adc
test
fmull
fistpll
arpl
xlat
test
popa
mov
adc
inc
mov
je
stos
add
adc
xchg
loope
pop
xchg
pop
jo
icebp
mov
out
pop
aas
push
sub
jnp
mov
sub
adc
cs
lret
js
or
jbe
jnp
xchg
cs
mov
xor
jne
divb
fwait
jb
cmpsl
adc
pop
pop
fisubl
dec
loop
cvtpi2ps
mov
mov
pop
pop
imulb
dec
daa
movsb
lea
xor
pop
or
inc
ljmp
aad
xchg
lcall
gs
dec
ret
inc
dec
mov
bound
aaa
loop
ja
daa
xor
jns
in
mov
cmp
mov
push
add
xchg
mov
inc
adc
std
sbb
or
filds
fwait
into
pop
xlat
or
cmp
mov
aad
ficoml
pop
imul
push
xchg
stos
push
mov
sbb
mov
stos
popa
in
mov
inc
push
gs
mov
dec
arpl
pop
and
xor
movb
test
test
scas
insl
xlat
lock
cmpb
add
aad
lea
cmpsl
xor
pop
scas
cmp
mov
cmpsl
push
push
aam
jg
fidivrl
rorb
or
aas
sub
adc
jno
aam
xchg
out
mov
or
inc
mov
mov
lock
xchg
sbb
cmpsl
pop
xchg
add
pop
add
xor
nop
in
jmp
sbb
testl
and
and
mov
push
dec
xor
clc
ret
negb
push
jno
and
or
dec
shr
push
aas
pop
aam
or
mov
out
cmpsb
lds
xor
in
pop
xorb
sub
mov
push
aad
arpl
sub
daa
jle
scas
cwtl
negl
mov
cmp
pop
inc
xor
sarb
push
out
dec
icebp
sub
lods
es
xchg
xchg
clc
mov
xchg
mov
jmp
inc
dec
cltd
mov
jl
or
jbe
sti
cmp
outsl
cs
add
aaa
dec
fnsave
loopne
fimuls
jnp
adc
les
fsubrl
out
cmpb
push
icebp
stc
out
mov
js
or
adc
out
fdivs
push
and
ret
cmp
lahf
mov
mov
mov
rcrl
dec
js
xor
aam
outsb
loop
popf
sub
cmp
pop
cmp
jge
movsl
mov
loop
shrb
imul
fsubrl
stc
hlt
sub
jnp
sub
push
jmp
mov
les
std
inc
jns
push
out
push
insl
outsl
test
mov
insl
testl
nop
cli
jno
cli
subl
test
adc
pop
cli
push
jb
xchg
pop
pop
and
and
lea
fists
mov
stc
fwait
movsl
mov
xor
pusha
cmp
mov
call
jl
frstor
xchg
ret
loopne
xchg
push
das
mov
sub
scas
mov
outsb
push
mov
mov
xchg
xor
andl
cmp
test
popa
cmp
out
xor
xor
xchg
add
xlat
ss
imul
decl
addb
fldt
enter
sbb
rcrl
jp
pop
test
in
idivl
mov
mov
lods
in
or
ja
push
orb
andb
hlt
in
jae
cmp
cmp
mov
outsb
ret
jp
test
mov
sbb
rorl
xchg
fwait
adcl
icebp
push
imul
test
fs
push
mov
dec
push
mov
xchg
pop
or
xor
xchg
fistl
cwtl
jmp
jno
lahf
mov
pop
mov
fs
cmpsb
adc
sub
lock
shll
xlat
add
clc
sub
pop
clc
push
xchg
test
ss
ja
repnz
in
fnstsw
sub
cmp
add
mov
stc
dec
movsb
inc
iret
adc
je
push
testb
sub
and
add
mov
add
fs
and
mov
scas
fwait
xchg
inc
inc
and
mov
sbb
je
or
ja
sbb
fwait
insb
sahf
sbb
fdiv
mov
xor
mov
pop
mov
sbb
sbb
cld
dec
mov
mov
pushf
mov
cs
cld
mul
xor
dec
into
andl
loop
sub
xchg
sub
mov
dec
adc
cmp
or
stos
add
mov
or
jg
aas
ds
arpl
sarl
rcll
pop
pushf
addr16
dec
sub
push
add
jle
ret
add
out
mov
lds
cld
aam
mov
test
xchg
roll
ljmp
dec
sbb
fldcw
push
mov
mov
mov
fldpi
notl
cmp
mov
scas
mov
rcrb
pop
xchg
cmc
lods
xchg
test
inc
outsb
add
lock
ja
xchg
pop
jge
xchg
pop
leave
sar
int3
and
fbstp
es
mov
nop
neg
xchg
insb
enter
xor
andb
hlt
jp
mov
adc
mov
cmp
rolb
inc
imul
xlat
stos
sti
loop
mov
fiadds
bound
dec
das
dec
add
jmp
scas
shrb
loope
jns
jle
inc
cli
stos
jnp
aam
cmp
call
mov
push
adc
test
mov
fcoms
scas
mov
adc
or
scas
mov
mov
outsl
jo
sub
xchg
cmpsl
mov
jns
movsb
jle
jo
ds
int3
decb
test
sub
pop
cld
gs
jmp
ret
addl
jbe
xor
xchg
pop
mov
leave
push
out
jne
pushf
inc
cmc
xor
jl
mov
std
jo
xorl
jle
jmp
hlt
add
hlt
or
push
and
hlt
insb
cmpsb
imul
mulb
sub
fnstenv
mov
fisttps
je
unpcklps
addl
lea
xchg
fcoms
pushf
daa
adc
mov
or
and
sti
cltd
lret
mov
sarl
sbb
inc
neg
das
xchg
insl
roll
arpl
dec
mov
das
insl
inc
cmc
xchg
jl
jge
icebp
mov
adc
nop
out
ss
ret
or
es
cmpb
jp
divl
mov
add
addr16
mov
pop
jge
push
rcr
xchg
je
iret
leavew
das
sahf
pop
mov
iret
fnsave
push
xchg
pop
xchg
xor
sbb
testl
adc
pop
pop
push
adc
sbb
movsl
out
fiadds
andb
pop
stc
dec
mov
or
jns
outsl
call
sbb
and
aaa
pushf
adc
jo
push
js
push
test
pop
in
mov
lcall
mov
lods
dec
movsb
push
fwait
xorb
lods
stc
movsl
pop
cmpsb
rcl
lods
loope
xchg
sbb
mov
dec
xlat
in
sbb
dec
xor
inc
int
mov
call
and
dec
jmp
pop
sbb
out
pop
push
sahf
popa
es
lea
and
lcall
jo
push
ja
mov
lahf
sar
jo
or
ss
sub
cmp
and
aaa
mov
out
scas
push
and
and
inc
mov
add
imul
mov
daa
sbb
fisubrs
ret
aam
inc
scas
mov
or
or
lea
insb
test
lcall
into
insl
mov
adc
ss
jno
repz
or
ret
mov
dec
sub
jno
dec
repnz
xor
pop
enter
ss
xchg
lock
pop
or
pop
mov
leave
jp
xchg
int3
or
out
and
jl
inc
ret
iret
cmp
jge
cmc
cmp
dec
inc
add
aaa
mov
fisttps
adc
mov
mov
in
in
rorb
fadds
or
loope
pop
add
mov
push
pop
xchg
sar
push
addr16
add
cmpsl
cli
and
jnp
pop
mov
pop
leave
adcl
lea
imul
fnsave
mov
lds
in
sarl
psubusb
xchg
rcrl
ficoml
insl
and
test
fistps
pop
adc
push
mov
pop
cmpsb
mov
pop
sarl
mov
lock
jle
mov
fists
push
daa
xlat
in
imul
jns
es
xchg
addr16
push
fs
adc
rorb
frstor
xlat
fwait
mov
mov
dec
xchg
pop
inc
shr
inc
push
sbb
add
montmul
cmpsb
xchg
hlt
push
mov
shr
xor
jnp
jmp
xchg
movsb
xlat
dec
mov
imul
dec
push
cmp
ljmp
insl
inc
or
orb
decb
and
stc
aam
sbb
xchg
jmp
dec
int3
test
pop
jg
sahf
data16
mov
pop
scas
test
pop
mov
jl
mov
lret
movsb
pop
mov
push
or
xchg
outsb
add
xor
addr16
and
hlt
dec
dec
cmc
dec
adc
pop
call
adc
pop
mov
insb
push
jnp
stos
out
inc
imul
hlt
sbb
pop
push
add
xchg
pop
fdivrs
iret
sbbb
gs
mov
testl
sti
inc
push
movsb
iret
cmpsl
xorl
jecxz
xchg
into
int
movsb
std
call
jb
int
pop
scas
adc
adc
insb
rcr
xlat
out
adc
add
xchg
insl
pop
jle
sub
out
ss
int
test
ljmp
mov
mov
sub
dec
xor
orl
mov
or
cmpb
mov
inc
pushl
mov
dec
test
xchg
inc
mov
mov
push
and
lods
ss
cmp
inc
pop
movsl
mov
aam
stos
sub
dec
pushf
push
mov
pop
cmpsb
xchg
mov
mov
rcrb
data16
test
jmp
mov
mov
cmp
mov
push
adc
in
jbe
inc
mov
jno
dec
stos
pop
out
xchg
or
push
pusha
mov
xlat
rol
xchg
scas
and
aam
fstps
mov
push
mov
insb
mov
pushf
out
ret
aaa
add
aas
pop
or
subb
sub
repz
or
push
loop
dec
std
cld
adcl
jmp
push
aas
mov
repnz
call
sbb
adc
or
mov
cmpsb
push
rcrb
cmc
cwtl
js
jae
in
and
orb
stos
outsb
mov
aad
rcrl
orl
movntq
jno
and
lea
jge
mov
lea
out
andl
mov
push
pusha
pop
loope
scas
ret
xlat
call
xchg
sbb
mov
sbb
push
cmc
xorb
xchg
out
popl
xor
int
call
out
mov
fisttpll
or
out
jnp
adc
inc
mov
fisubrl
sahf
loope
into
pop
pop
dec
fidivrl
cmp
push
inc
sbb
xchg
mov
and
push
sbb
pop
push
push
jle
jbe
pop
mov
inc
mov
sub
pop
insl
jno
mov
repz
or
sub
push
js
test
arpl
ljmp
stos
ficomps
test
push
mov
mov
call
dec
xchg
mov
cmpl
cmp
lret
cmp
sub
jo
cmp
push
cmp
jg
jb
daa
mov
orb
sbb
push
add
or
pop
mov
inc
out
push
push
push
pop
bound
mov
xor
cmpsl
fdivrs
push
jl
pop
lods
das
xchg
clc
mov
mov
sub
push
subl
jnp
lods
push
outsl
xchg
xor
inc
or
xchg
push
xchg
mov
iret
and
sub
jmp
cmc
loop
call
sub
movsb
mov
mov
scas
mov
mov
pop
dec
mov
mov
pop
arpl
push
pop
add
xor
sub
imul
test
jb
daa
je
add
daa
in
outsl
push
sub
daa
mov
dec
rorl
xor
push
ljmp
sub
lods
adc
mov
movsb
cmpb
outsb
je
movsb
mov
scas
cmpsl
pop
mov
fs
aam
fadds
into
jp
jg
mov
ds
mov
sub
sbbl
mov
aad
inc
inc
arpl
push
xchg
fmull
jo
scas
jnp
insb
stc
mov
pop
dec
das
out
out
lods
int3
mov
gs
cmp
mov
dec
jl
leave
addr16
rclb
push
loop
jns
pop
ljmp
ds
pop
stos
cli
stc
jmp
mov
or
xorb
xlat
and
out
lods
pushf
adc
jg
pushf
mov
mov
pushf
rcll
jne
or
mov
push
loop
out
jne,pt
les
leave
enter
cmpsl
mov
int
jmp
pop
scas
jb
cmp
sub
stc
sbb
lahf
ljmp
mov
push
push
or
mov
ss
push
testl
pop
jmp
repz
sbb
mov
xorb
ret
daa
and
daa
jp
fsubp
int3
pop
mov
xlat
mov
fs
push
scas
inc
cwtl
xor
inc
fildl
pop
xor
sbb
ljmp
stc
jp
inc
add
mov
popa
aam
addr16
jg
cmpsl
int3
dec
arpl
xchg
xor
mov
dec
test
pop
dec
cmc
xor
and
pusha
andb
pusha
cmpsl
testb
cmp
mov
loopne
out
in
in
ss
push
fsubs
sti
stos
xlat
mov
cmp
push
gs
xor
sbb
pop
jae
dec
ja
incl
fwait
xor
popa
clc
shrb
test
pop
dec
pop
fstps
int
call
adc
lods
mov
cmpsb
fwait
addl
xor
mov
push
cmc
xor
xchg
push
arpl
adc
push
popf
je
jg
fcomi
lret
dec
dec
ret
popa
neg
jbe
rol
sbbl
sub
and
fadd
sarl
roll
push
mov
push
jmp
ss
jp
add
adc
jmp
js
sbb
jnp
jno
stc
int
test
cmpsb
jmp
dec
and
dec
out
cmp
xchg
fistl
pop
popf
loopne
push
in
insb
mov
rorb
dec
test
cmp
rorb
js
aas
sbb
icebp
int
xor
mov
cltd
mov
sti
pop
std
jo
cmp
cmp
pop
jb
out
cmpsb
mov
repnz
es
cwtl
push
lods
icebp
inc
lds
jns
outsb
inc
mov
push
mov
movsb
gs
cmp
aam
xchg
push
push
mov
sbb
loope
adc
and
imul
pushf
ljmp
les
movsl
jle
rcrb
cmp
clc
mov
sbb
clc
push
addr16
das
or
fs
jge
xor
les
push
daa
mov
xchg
push
inc
fnstenv
mov
jbe
mov
and
scas
mov
add
lock
xorb
or
add
repz
jecxz
pop
ja
push
shll
inc
repnz
jmp
lds
add
loope
xchg
dec
sbb
push
insl
rdpmc
mov
fs
aad
ja
out
dec
pop
dec
or
insb
add
pop
dec
xchg
cmp
or
sbb
cltd
xchg
push
xor
xor
test
mov
cmpsb
dec
out
test
popa
hlt
iret
and
mov
add
lea
jb
jp
lods
rcrb
mov
rorb
pushf
or
lods
sub
xchg
aam
jo
pushf
and
stos
inc
cltd
pusha
push
inc
sbb
out
cmp
int
popa
pushf
mov
loopne
dec
mov
pop
das
icebp
nop
das
pop
pop
sbb
or
imul
jl
lcall
mov
and
inc
stos
cmp
jecxz
incl
fstl
pop
outsb
fisubs
adc
xchg
out
jb
call
insb
push
mov
test
sbb
pop
push
jae
cmp
mov
jne
cmp
pop
adc
ss
jbe
je
daa
popa
dec
mulb
xchg
arpl
jmp
jnp
cmp
push
popf
push
mov
das
mov
sbbl
adcb
dec
aad
dec
jg
test
int
rcr
mov
xchg
outsb
xchg
push
push
push
pop
cmp
pop
movzwl
or
xchg
xchg
inc
imul
ja
sti
push
cmp
push
jno
sub
inc
jge
sbb
sbb
xchg
inc
in
loopne
lea
sub
xor
mov
fsubrl
sbb
int3
out
xchg
sbb
dec
pop
ret
jno
mov
sub
adcb
testb
imul
out
call
add
mov
test
jnp
xchg
xchg
inc
stos
in
bound
and
mov
inc
or
add
outsl
xor
push
cltd
adc
leave
and
and
mov
es
adc
movsb
mov
cltd
inc
popf
ja
aas
cmc
in
sub
sub
jl
add
mov
cli
and
and
adc
sub
add
imul
aas
or
and
cmp
jl
xor
xor
popa
test
add
sub
sub
cmp
scas
add
push
mov
sti
scas
jg
sub
pop
out
outsb
rclb
push
dec
popf
push
stos
dec
push
shrb
pop
push
xchg
jno
divl
andb
sar
outsb
pop
imul
stc
in
push
test
insl
adc
lahf
dec
pushf
into
xlat
data16
sub
ljmp
xor
out
xchg
imul
sub
push
adc
test
adc
mov
outsl
inc
dec
cwtl
cmc
adc
xchg
sbb
outsb
xor
pushf
mul
aad
ss
call
inc
cmp
loopne
hlt
aaa
xlat
mov
jmp
add
sub
mov
or
pushf
pop
lret
arpl
jno
shl
mov
xchg
jb
mov
aam
sbb
in
rclb
test
dec
push
mov
movsl
inc
and
cmp
add
pusha
lahf
rorb
outsb
fmull
sbbl
out
enter
stos
adc
cmp
xor
and
jnp
sbbl
enter
mov
mov
xchg
jmp
jle
and
dec
pop
adc
outsl
fldl
les
test
loop
test
push
inc
mov
mov
int
outsb
mov
jo
shlb
mov
pop
mov
in
and
bnd
inc
mov
mov
adc
push
sbb
nop
jne
sub
out
ret
enter
roll
adc
icebp
ja
repz
pop
and
mov
xor
and
pop
push
fsubr
stos
jo
mov
cmp
outsl
clc
bound
pop
lcall
dec
dec
dec
lcall
fdivrs
repz
jbe
mov
cld
and
das
or
js
dec
or
lcall
cli
dec
fdivrl
fucomip
sub
mov
lds
push
les
adc
push
mov
in
ds
cs
cmp
in
jg
jo
sub
add
add
sub
stc
cld
pop
cld
clc
lods
fisubl
cmc
mov
inc
data16
lea
out
aas
fcmove
push
jmp
xchg
fisubs
hlt
stos
and
pop
cmp
in
sbb
xlat
test
cmp
lock
fistpl
not
imull
mov
add
jecxz
enter
push
mov
sahf
repz
and
mov
cmpsl
stos
inc
fstp
in
mov
mov
fnstcw
mov
rcr
sbb
sbb
jno
addl
mul
mov
sbb
aam
sbb
jg
add
inc
push
fs
stos
int
shl
ret
sbb
jl
into
loope
mov
pop
gs
and
cmp
fcmovbe
jecxz
push
inc
sbb
ljmp
rclb
pop
mov
push
test
andl
cmp
fwait
and
jo
sub
daa
repz
jno
fildll
xchg
das
jno
cld
add
das
out
mov
xchg
lds
or
lds
call
insb
xor
jecxz
movsl
in
movsl
pop
push
outsb
addr16
xchg
xchg
mov
inc
fstps
repz
pop
lret
icebp
andl
ds
xor
aam
lock
push
push
mov
pop
adc
ja
xchg
push
mov
xor
arpl
hlt
cmp
sub
mov
imul
test
jo
sbb
cmpsl
push
shll
cltd
fldenv
gs
mov
sbb
aad
dec
xlat
mov
dec
mov
iret
mov
mov
cmp
add
xlat
push
out
cmp
xor
into
cwtl
mov
aas
js
sub
mov
stos
test
jecxz
mov
push
dec
jno
rorb
dec
pop
sbb
stos
jbe
insb
ss
pop
sub
cmpl
gs
jmp
mov
mov
mulb
adc
add
in
ffree
or
xchg
popa
inc
push
outsl
jp
add
push
ret
sub
and
fs
fisubrs
lcall
or
dec
hlt
aad
int3
or
movsl
dec
mov
push
fldt
add
push
cmp
sub
insl
test
pop
ljmp
jns
les
psrlw
lcall
insb
jae
cmpsb
insl
and
js
jno
lahf
ljmp
clc
fs
jle
mov
sub
call
std
fucom
sbb
jl
pop
fmuls
jp
das
mov
mov
popa
test
jae
aad
aaa
lea
jmp
mov
in
fidivrl
add
fildl
sub
mov
xor
pop
ja
adc
mov
test
add
rorl
xchg
push
ja
jo
sbb
movsb
mov
xchg
in
jae
in
inc
cmp
lea
stos
fstl
dec
xchg
movsl
cmpsb
inc
push
pop
lods
dec
shll
test
aad
and
push
ret
inc
mov
pop
enter
xchg
adc
xor
jb
sti
fs
sbb
cli
int3
inc
pop
or
rcll
pop
sahf
shlb
fwait
mov
addb
pop
add
in
je
ror
das
jae
repz
jb
mov
scas
xchg
push
clc
jp
test
sbb
outsb
aam
stc
xchg
ja
in
mov
lahf
out
leave
sti
mov
xchg
or
xor
xor
ss
in
nop
adc
lret
push
es
testb
popf
fcompl
hlt
es
movsl
fcmove
jp
stos
fcmove
arpl
pop
or
jbe
jg
test
outsb
inc
out
fsubl
or
push
dec
mov
jl
pop
add
outsl
pop
ror
cs
in
mov
push
sbb
rorb
int3
addr16
sub
add
jb
jp
jle
dec
divb
daa
sbb
push
popf
data16
test
xor
out
lcall
cmpb
and
xor
cltd
ss
loope
fildl
fisttpll
or
jno
jge
and
int3
mov
or
add
addr16
mov
or
mov
pop
jns
cmp
call
repnz
adc
cmp
adc
fisttps
enter
arpl
movsb
testb
xchg
std
xchg
sub
inc
ss
imul
popf
mov
loope
jmp
cmp
leave
xchg
sarl
mov
scas
jle
clc
int
push
shrl
sahf
jae
out
scas
lret
test
repnz
mov
repnz
jb
or
insb
xchg
push
adc
jmp
sbb
arpl
mov
xchg
test
cmp
xchg
xor
inc
stos
or
mov
add
cmp
xor
enter
js
stos
adc
test
cli
lock
sub
push
ja
mov
scas
movb
xor
and
pushf
sahf
vpsadbw
packssdw
ljmp
cmc
shlb
push
hlt
inc
in
int
jnp
and
push
dec
xor
jbe
ret
sarb
mov
mov
popa
sbb
and
xor
or
call
lret
and
mov
movsl
movsb
shlb
jp
out
pop
xchg
outsb
dec
pop
push
lahf
sub
or
ljmp
setb
mov
add
jbe
jbe
pop
cmpsb
push
testl
cs
call
mov
sub
lock
push
outsb
outsb
cltd
jae
leave
mov
les
addb
or
mov
pushf
adc
jo
sbb
aaa
push
jmp
mov
mov
jbe
add
lods
cmc
push
xchg
xchg
adc
xchg
xchg
movsl
mov
dec
aam
mov
adc
adc
mov
inc
xor
clc
outsb
testb
dec
xchg
jp
dec
mov
in
and
adc
pop
imul
adc
adc
fmull
insb
mov
sub
mov
ds
and
mov
fsubrs
scas
adc
mov
aad
lret
data16
mov
popf
outsl
cwtl
stos
into
popl
cld
jg
pop
add
xchg
pop
loopne
cmp
stos
xor
or
and
not
ficoml
movsl
shrl
stos
loop
movsb
cmp
test
cld
inc
iret
ljmp
adc
cmpb
jne
pushf
pop
xor
arpl
sahf
hlt
fmull
hlt
xchg
or
out
cmp
call
fdivs
mov
pop
fiadds
movsl
lock
xor
jge
data16
cmp
jns
mov
pop
xchg
inc
mov
add
ds
fdivs
popl
lds
adc
ds
outsl
stos
add
movsl
sahf
stos
mov
dec
push
shr
jg
jae
enter
fisubl
daa
popf
incl
or
xchg
sbb
sti
rcpps
mov
mov
jg
js
xor
cmc
and
or
les
pusha
xadd
insl
dec
inc
icebp
jnp
push
and
or
cmp
xchg
cmp
mov
or
push
dec
mov
mov
adc
jne
pop
inc
pop
ret
repnz
enter
aaa
mov
jnp
xor
clc
pop
dec
lret
mov
js
jns
inc
dec
es
inc
add
sub
push
pusha
or
aad
negb
aaa
mov
lock
dec
lret
sti
test
nop
xchg
adc
bound
sarb
movsb
push
jg
and
aam
mov
aas
lods
imul
imul
mov
popa
inc
icebp
adc
aam
dec
das
fsub
mov
mov
iret
mov
mov
pop
and
sbb
jae
xchg
bound
sub
push
and
dec
stc
in
cmp
xor
xchg
fmul
ret
aad
fidivrs
cmp
sbb
mov
dec
imul
fcoml
sub
sahf
mov
sbb
jmp
push
push
jb
cmp
jl
add
sbb
xchg
pcmpgtw
and
inc
dec
je
ljmp
repnz
daa
push
hlt
mov
fadd
sub
pop
xor
rclb
std
mov
lock
push
test
ss
mov
mov
mov
jl
or
mov
mov
in
push
xchg
cld
inc
add
mov
and
push
bound
or
test
sbb
aad
sub
insb
or
jno
adc
dec
or
loop
imul
mov
lods
daa
adc
loope
dec
mov
in
aam
lret
push
je
outsb
mov
aam
dec
test
ss
adc
int
popaw
jnp
jecxz
aas
cmpsb
lods
sub
cmp
mov
inc
pop
pop
pushf
lahf
or
dec
xchg
psadbw
or
outsb
sbb
jbe
addl
outsl
mov
out
mov
jmp
loopne
inc
add
je
push
cs
les
test
inc
pop
and
sbb
shlb
and
popf
push
sahf
mov
arpl
push
dec
inc
dec
gs
mov
jle
jns
inc
inc
or
or
adc
das
repz
popf
cmc
mov
or
add
insb
hlt
aaa
or
pop
mov
or
movsl
shll
fistps
ret
in
adc
dec
mov
mov
lahf
adc
fsubr
pushf
sbb
iret
jl
xor
int3
mov
stos
mov
sub
imul
sbb
out
sbb
xchg
inc
dec
adc
leave
mov
push
jge
loope
mov
adc
pop
cwtl
rcr
jns
pop
div
pop
nop
das
filds
popf
lcall
mov
or
adc
fwait
pusha
and
inc
push
cs
push
mov
mov
jp
mov
jb
jae
sub
push
setne
pop
popa
push
push
int3
jb
dec
lods
or
pop
jl
rolb
push
repz
leave
xchg
xchg
mov
cmp
cltd
sbb
pop
mov
cmc
lods
loop
das
addr16
out
popf
lahf
frstor
lcall
cmpsb
gs
mov
jl
lret
and
cwtl
xor
repz
jbe
mov
pop
lds
idivl
sbb
lea
push
add
pop
sbb
fiaddl
iret
pop
push
adc
les
mov
pop
and
jbe
loop
xor
insl
fists
aas
push
push
and
sbbl
fcoml
lcall
or
jge
inc
in
jecxz
cld
movsl
push
jb
adc
adc
cmp
hlt
ss
xor
inc
lret
stos
cwtl
test
call
xor
or
inc
xor
lock
or
adc
inc
sbb
idivl
xchg
fcmove
enter
cmpb
jb
push
push
push
cwtl
shl
or
call
mov
mulb
sub
in
stos
push
fwait
repnz
fs
add
inc
or
loopne
bound
sub
cwtl
add
pop
scas
add
or
test
fsubs
pop
pop
cltd
outsb
imul
in
outsb
cmpsb
out
out
stc
push
add
sbb
push
or
negl
and
aad
sub
ret
mov
sarb
insl
fldl
cld
or
out
sti
test
mov
mov
add
mov
subb
push
js
sbb
xor
test
mov
sub
pusha
or
xor
sahf
popf
scas
mov
and
in
or
mov
push
adc
pop
aas
or
mov
add
lcall
addr16
and
lea
sub
or
ja
pusha
out
icebp
cmp
movsb
inc
call
in
xlat
inc
out
out
mov
rorb
push
clc
aam
push
pop
into
out
call
sbb
sub
jno
xchg
ja
cmpsb
repnz
ljmp
sbb
stos
adc
scas
fs
jmp
pop
nop
call
or
loopne
fadds
cmp
sti
ds
jo
sub
xor
gs
les
pop
push
hlt
pop
rcr
sub
sub
outsb
jle
mov
or
mov
clc
mov
iret
add
jecxz
pop
mov
jb
adc
dec
dec
popf
mov
ret
xchg
insb
xorl
fs
xchg
jge
lods
leave
and
int3
push
mov
mov
stos
test
jbe
icebp
ds
or
jne
mov
mov
push
dec
mov
inc
jl
xchg
inc
adc
addb
pusha
mov
loopne
fstl
mov
dec
inc
or
mov
inc
mov
imulb
xor
jecxz
xchg
cld
icebp
jnp
pop
imul
sbb
in
mov
data16
es
mov
cmp
xor
dec
jp
into
ret
and
mov
lds
push
push
negl
sub
shl
scas
inc
dec
fs
sub
xchg
mov
nop
xchg
aaa
std
push
jmp
mov
add
outsb
and
lcall
pusha
std
test
test
sub
mov
dec
pop
scas
shll
icebp
mov
leave
fwait
int
mov
pop
ror
scas
clc
std
cmpsl
ret
cmpsl
or
lock
sbb
push
push
dec
test
rcl
arpl
xchg
jge
outsl
inc
jae
sbb
mov
icebp
lret
mov
sbb
aam
sub
fcomps
dec
xchg
dec
pop
test
in
loop
xchg
lret
test
cltd
out
es
fimuls
cmpsl
adc
ss
jl
xlat
movsb
fwait
js
sbb
enter
dec
xchg
inc
jmp
jb
mov
sarb
pop
lcall
mov
sub
push
ss
mov
fwait
idiv
sub
or
mov
test
ret
push
lret
inc
sarl
stos
sarl
cmp
xchg
sahf
ret
mov
xchg
cmp
gs
push
jle
xchg
cltd
sub
mov
adc
pop
adc
xlat
fnstenv
jno
sti
and
cmp
jae
aam
paddsw
daa
mov
aaa
mov
jp
xchg
and
in
enter
mov
cmp
xchg
ljmp
ss
mov
loop
push
pushf
mov
nop
cs
jno
push
ficomps
sub
push
pushf
pop
pop
inc
sub
mov
xchg
fcoml
or
sub
pop
dec
shlb
cmp
dec
jb
push
cmp
jl
mov
adc
jecxz
sbb
push
lahf
outsl
fcoms
mov
lock
xor
pushf
xchg
ret
jmp
jmp
cli
jnp
inc
inc
mov
sub
push
aas
and
mov
xchg
xchg
sbb
int
xchg
movsl
sub
push
inc
xchg
lods
pushf
sbb
imull
cmp
shl
or
jnp
icebp
fmul
pop
call
jl
inc
xor
in
leave
adc
leave
dec
mov
inc
push
mov
pop
stos
ss
popf
aaa
sbb
mov
push
lods
addr16
pusha
add
mov
or
mov
jecxz
dec
push
or
aas
cli
cld
ret
cmp
push
sub
cmc
scas
cmpsb
dec
add
cmp
cmp
xchg
cmp
out
enter
adc
push
call
movsl
adc
or
hlt
mov
xor
push
sarl
sub
jl
add
aaa
push
gs
xchg
ljmp
sbb
loop
jne
loopne
or
subl
inc
adc
mov
lds
bound
bound
pop
push
test
pop
movsl
mov
jg
icebp
add
enter
mov
leave
cld
icebp
mov
mov
insl
sahf
shlb
ret
pop
dec
enter
sbb
movsl
sub
mov
sub
cmp
adcl
mov
xchg
mov
nop
aam
jg
inc
sub
xor
ss
lock
dec
mov
and
push
jle
mov
sub
add
push
inc
mov
arpl
mov
iret
fldcw
jmp
ss
jnp
pop
xchg
hlt
sbb
hlt
xchg
shlb
lret
in
mov
into
cld
mov
lods
ret
divl
stos
jg
adc
mov
rcll
mov
rorl
xor
add
dec
mov
test
int
add
jae
fwait
cmp
and
popa
enter
sahf
mov
test
or
inc
adc
dec
dec
shl
in
cli
adc
jle
dec
sub
outsb
or
jg
dec
pop
lret
outsl
faddp
sbb
sbb
jb
cmp
roll
mov
mov
xchg
cwtl
lea
inc
shlb
ret
xor
punpckldq
leave
mov
stc
or
mov
iret
cmp
cmp
jbe
loop
push
inc
jg
or
aad
cmpsb
lods
arpl
inc
sbb
out
dec
xor
pop
dec
movsl
movsb
setle
pushf
rcr
lret
xchg
jmp
outsb
in
sub
jl
pop
in
iret
dec
jmp
pop
jb
xlat
pop
mov
jle
pushf
test
and
sar
mov
shr
push
mov
movsb
popf
les
je
test
mov
lds
sbb
lock
push
inc
scas
push
out
jg,pt
enter
inc
add
inc
insb
mov
fistl
int
test
out
fwait
mov
inc
push
mov
int
cmp
std
push
das
rorl
in
lahf
cmpsb
ucomiss
orl
dec
arpl
imul
cwtl
mov
add
inc
adc
stos
ja
loope
cmp
imul
sbb
mov
out
jmp
mov
jns
lcall
loop
repnz
inc
jno
and
sbb
incl
jl
mov
lea
pop
pop
mov
cmp
ds
fbstp
orl
es
xchg
or
in
mov
or
stos
add
xor
mov
add
cmp
xchg
jecxz
dec
loop
jnp
inc
jp
push
sub
pop
loope
mov
fcmovu
pop
add
pop
dec
inc
xor
add
enter
inc
mov
mov
loop
dec
aas
pop
mov
sub
dec
outsb
fisubrs
push
push
sub
and
loopne
push
dec
inc
sub
inc
test
or
shll
adc
mov
push
and
stc
pop
mov
mov
sar
jmp
testb
pop
mov
mov
xchg
inc
hlt
clc
shrl
out
loope
xor
decb
sub
sbb
adc
mov
adc
enter
or
lock
lret
mov
adc
mov
cmp
icebp
mov
add
daa
fcom
add
sahf
adc
das
dec
mov
sub
sbb
adc
inc
mov
or
out
aaa
jg
jbe
aaa
jns
push
adc
mov
adc
daa
fstps
mov
mov
in
or
or
xor
sbb
sbb
dec
pop
loope
xchg
fisttps
lret
sbb
push
hlt
subl
in
sbb
movl
sub
xchg
and
lods
or
imul
and
aad
inc
icebp
push
fwait
and
je
sub
dec
decb
std
lahf
and
xor
mov
lcall
xor
mov
mov
cmc
pop
ljmp
add
insl
jmp
mov
lahf
xchg
xchg
dec
sarb
mov
cmp
sbb
lods
cmp
xchg
mov
xor
cltd
ret
cmp
shl
jns
jge
jp
stos
movsb
push
xlat
scas
jg
jecxz
sti
mov
stos
bound
pushf
ljmp
adc
std
ljmp
std
fadds
sub
push
sub
insb
les
cli
scas
xorl
jge
add
rcll
inc
clc
out
sub
dec
adc
test
inc
int
cwtl
or
lods
xchg
push
sahf
jmp
push
hlt
es
adcl
fimull
pop
lea
sti
adc
push
dec
imul
add
hlt
xor
lock
and
push
fcomp
lds
nop
inc
sbb
pop
mov
and
xor
and
push
loopne
mov
aas
xchg
push
pop
mov
jmp
jbe
test
notb
pop
or
xor
mov
aam
or
fisttps
andb
fdivs
xchg
repz
push
or
cmpsb
sti
int
es
gs
jmp
adc
aas
loopne
xor
outsb
fwait
out
xchg
lret
adc
iret
imul
gs
push
stc
cli
test
add
bnd
mov
pusha
dec
fstpt
fsubr
fstps
repz
and
fs
push
adc
pop
xchg
cs
adc
popf
fdivs
loope
jge
or
insb
cs
mov
or
test
aam
push
xchg
mov
fiadds
sbb
push
movsb
addr16
test
arpl
movsb
roll
nop
jecxz
imul
sub
bound
adc
xchg
jle
adc
jp
insb
cli
inc
clc
cmc
icebp
stos
mov
movsl
mov
pop
mov
jae
addr16
lds
xchg
mov
add
jg
jge
mov
sahf
add
stos
or
push
xchg
iret
aam
jbe
push
mov
incb
insb
push
aaa
lcall
std
sahf
and
int3
out
cmp
push
sahf
imull
mov
push
fisttps
outsb
push
stos
and
cmp
sub
jnp
and
ss
push
xchg
int
das
insl
mov
fisubs
sbb
lods
scas
jo
std
shll
shlb
xchg
lea
aaa
sbb
leave
sbb
sti
jbe
cmpl
ret
in
mov
test
jno
push
lcall
adc
xchg
jl
xor
mov
mov
push
jns
rorb
repz
fldl
js
nop
cmp
aam
dec
cli
push
sar
sub
or
dec
cmp
pop
jle
fiadds
add
addr16
pop
es
je
imul
mov
loopne
int3
movsl
pop
add
sub
jmp
aad
or
mov
jl
loopne
les
xchg
push
jge
sahf
lahf
subb
loope
dec
roll
mov
sti
out
scas
out
fstp
cmp
xor
sbb
push
cmp
shrl
lahf
add
xor
mov
sbb
or
adc
mov
cld
pop
jbe
pop
jmp
lods
push
lock
push
inc
fbstp
lahf
in
mov
enter
leave
or
loopne
pop
cli
jo
mov
cltd
shll
xchg
out
xchg
mov
aam
lea
xor
les
lret
fsubrp
iret
mov
xchg
push
mov
cmpb
push
lods
mov
add
dec
cmp
lcall
dec
scas
push
out
cmp
cmp
jo
mov
ror
mov
jbe
js
pop
fsubr
inc
mov
mov
jge
push
popw
mov
sti
mov
outsl
pop
dec
mov
stos
mov
or
mov
push
sub
or
mov
ret
lock
sub
push
mov
push
xor
pop
mov
std
inc
lret
les
cmpsb
test
in
jno
jns
adc
and
adcb
test
jmp
idivl
xorl
popf
scas
pop
jecxz
int
insl
sub
mov
out
mov
fwait
movb
pop
scas
mov
outsb
cli
push
cmp
lret
test
arpl
or
sub
dec
push
cmp
adc
adc
les
push
cmp
nop
clc
hlt
cmp
loope
es
in
sar
loop
or
std
loopne
push
imul
daa
rcr
imul
jecxz
pop
push
sub
dec
pop
das
xchg
imul
add
xchg
outsl
and
leave
mov
push
and
pop
fs
leave
cmp
inc
pop
lods
out
xchg
icebp
push
jb
sbb
sub
int
pusha
and
fsubrs
aaa
and
hlt
xchg
iret
fs
movsl
or
pop
lea
cmc
sub
popf
cld
lds
push
loope
call
flds
add
test
cli
sti
fcmove
inc
flds
out
sbb
mov
scas
testb
inc
jecxz
sub
inc
mov
in
call
shrl
inc
jg
cld
or
sbb
cmpsl
out
cmp
jp
jbe
mov
jne
push
ret
leave
mov
inc
xor
cmp
rcrl
xor
out
mov
cmp
xlat
jl
mov
fidivs
lea
outsl
dec
dec
aam
jns
jl
sbb
xchg
xchg
jl
mov
iret
insl
icebp
lret
imul
or
test
jb
push
out
mov
hlt
faddl
or
sub
sar
aam
mov
jmp
jle
cld
cmp
test
and
push
rcrb
lock
ja
into
fidivrs
xchg
inc
daa
in
mov
aas
adc
mov
jle
insb
pop
or
push
jns
cmp
or
jns
pop
fcomi
xchg
clc
mov
mov
push
mov
dec
mov
fstpl
imul
push
ficoml
inc
and
rcrb
in
pop
mov
xchg
xchg
test
mov
adc
cwtl
add
pop
mov
push
inc
into
adc
mov
je
lret
lcall
jge
adc
fistpll
shlb
xchg
sub
ljmp
or
imul
dec
mov
into
jl
lds
inc
xor
inc
jle
rcrb
leave
shrb
lods
lret
lods
out
dec
inc
out
mov
ss
lret
mov
sub
testb
xchg
mov
or
nop
mov
pop
popa
push
nop
into
inc
add
mov
popa
dec
test
xchg
push
std
ljmp
aas
xorb
fisubrs
flds
bound
adc
sahf
xchg
stc
test
cmpsb
or
xchg
push
faddl
sbb
out
ja
scas
arpl
popf
bound
subl
lahf
movsb
sbb
mov
out
push
fmuls
xor
scas
mov
dec
pop
xchg
imul
pop
jg
xor
adcl
mov
das
lock
mov
mov
mov
or
adc
je
call
lcall
push
std
fdivrs
sub
loope
add
or
je
aaa
shrl
sbb
add
mov
unpcklps
add
fcompl
push
pop
sbb
int3
addr16
repz
mov
inc
or
and
mov
ret
jle
cltd
or
movsl
test
add
out
lock
xchg
inc
pusha
sbb
dec
or
mov
pop
cs
ret
es
inc
sub
jno
daa
sub
xchg
mov
xchg
mov
in
lahf
stos
xor
mov
rcll
sbb
shrb
adc
mov
test
jg
in
iret
mov
ds
and
js
jmp
jnp
fadds
cmp
mov
insl
push
testl
pop
mov
mov
lcall
lret
icebp
dec
jb
xor
movsb
mov
xchg
data16
jbe
in
addb
ljmp
repz
arpl
in
jno
gs
add
mov
sbb
xchg
mov
ljmp
or
jmp
enter
push
push
ljmp
or
and
adc
pop
mov
inc
ljmp
push
xchg
or
dec
mov
mov
cmp
inc
dec
sbb
in
push
lcall
repnz
and
in
rorb
push
ss
sti
std
scas
adcb
lret
mov
and
jmp
out
fstpl
je
or
jbe
icebp
js
cmc
cli
sbb
enter
cli
jmp
mov
aam
outsl
cmc
inc
loopne
xor
and
dec
push
sbb
sbb
cld
lods
fs
xchg
pop
or
jbe
into
shlb
pushf
in
add
arpl
mov
fsubrp
push
mov
mov
cltd
push
or
sub
and
inc
and
mov
and
mov
adc
dec
xchg
push
pop
outsb
shr
sbb
mov
in
or
jge
fimull
cmpsb
push
mov
lock
insb
loope
ja
mov
dec
pop
and
jns
fldenv
inc
sub
adc
rorl
stos
clc
and
sbb
and
cld
mov
sti
mov
dec
push
push
add
sub
stc
mov
or
enter
sub
aaa
imul
int
mov
fcoml
repz
inc
push
or
adc
xchg
or
inc
test
fisttps
mov
mov
dec
mov
inc
sub
fwait
push
subb
ret
inc
and
mov
daa
mov
xchg
pop
fdivs
insb
pushf
push
mov
jb
mov
adc
push
inc
lea
test
loopne
lcall
sbb
cmpsl
mov
aaa
out
inc
iret
push
mov
mov
mov
and
sub
pop
int3
dec
cmpsl
pushf
out
and
mov
lods
and
invd
inc
xchg
cmp
adc
inc
loop
xor
call
xchg
cmp
stos
mov
push
inc
push
push
lret
push
mov
xor
das
pop
ds
jne
sbb
xchg
and
pop
lea
ret
loop
test
cmpsb
xor
cwtl
arpl
dec
adc
mov
cli
call
cli
loopne
adc
insl
mov
push
jmp
cmp
sar
xchg
mov
aad
sub
out
xlat
xor
movl
mov
and
push
xchg
adc
mov
icebp
ss
iret
mov
cmp
lahf
rorb
cwtl
and
fmuls
inc
mov
dec
cmp
dec
imul
popf
sbb
and
sti
loopne
aaa
sub
dec
popa
or
sub
jno
cmpsl
bound
dec
hlt
movntq
pop
scas
ret
ds
dec
jae
sbb
arpl
out
mov
sti
sbb
xor
das
leave
mov
mov
mov
jl
push
add
enter
inc
pop
xchg
adc
cmp
outsl
sbbb
xor
js
mov
mov
shr
mov
into
popa
push
fnstcw
out
mov
out
nop
lcall
cmpsb
sbb
inc
sbb
f2xm1
lret
out
pop
sbb
clc
dec
lret
nop
fiadds
sti
stos
xchg
xor
mov
or
pop
adc
add
sti
push
mov
pop
aam
std
push
movsb
roll
sbb
or
jle
stc
arpl
aad
mull
sahf
inc
xor
mov
xchg
pop
push
cmp
dec
insb
sahf
pop
icebp
mov
mov
icebp
and
inc
loope
icebp
xor
xor
stos
adc
mov
and
add
pop
xchg
jp
dec
enter
lds
xor
into
lods
adc
sub
add
mov
xchg
sbb
add
mov
pop
popa
lds
fistl
lock
xchg
sarl
xchg
jns
xchg
add
add
dec
sub
iret
stos
decb
pusha
imul
dec
out
or
lods
xor
xor
cmpb
sahf
or
ljmp
nop
out
das
jp
mov
lods
sbb
jnp
jp
adc
push
lods
sbb
jno
push
rolb
mov
inc
data16
add
xor
cmp
rclb
scas
mov
lret
sbb
mov
xchg
xchg
xor
mov
jnp
fwait
lock
cmp
scas
cmc
push
popl
and
jbe
outsl
sahf
movsb
or
xchg
stos
dec
add
fstl
xor
and
jne
shlb
adc
dec
nop
hlt
add
inc
push
scas
and
cmp
jmp
jg
or
xor
add
xor
xchg
aad
imul
mov
lock
int
mov
push
push
mov
dec
cmp
testl
mov
mov
jb
lods
xor
cli
jecxz
xor
mov
mov
pop
xorb
add
pop
es
jbe
mov
into
and
out
jnp
and
mov
xor
int3
or
idivb
cltd
jmp
test
lcall
popf
fwait
jbe
std
or
rcrb
aam
cmc
mov
sti
jae
scas
clc
push
js
sub
dec
stos
and
punpcklbw
pop
cli
inc
loop
mov
ljmp
xchg
pop
lods
pushl
inc
mov
repnz
popf
call
aas
jns
mov
shrb
add
push
sbb
mov
hlt
out
out
pushf
imul
and
or
lret
adcl
das
aaa
pushl
add
movsl
xchg
add
inc
int3
push
popa
arpl
pop
and
enter
loope
cmpsl
pusha
scas
add
sbb
clc
insw
cltd
bound
inc
add
subb
pop
adc
in
int3
fnstsw
push
dec
dec
sub
cltd
mov
sub
lcall
push
mov
ret
and
sub
push
stc
or
or
icebp
push
outsl
xor
loopne
out
jge
sub
rorb
push
and
ret
pushf
je
pop
fisubrl
pop
mov
or
adc
pop
mov
rcrl
sti
xchg
mov
out
ljmp
iret
sbb
pop
dec
addr16
cmp
mov
andl
dec
shl
dec
adc
sahf
adc
or
repz
pop
fsubrs
sbb
data16
addr16
push
movsb
and
cmp
ficoml
add
leave
add
inc
je
dec
mov
mov
jnp
xchg
fwait
xor
xchg
dec
jmp
dec
stos
mov
add
add
and
jge
or
mov
xor
xchg
rcll
jbe
ljmp
jbe
iret
mov
inc
dec
adc
lds
xor
es
idivl
jge
rol
add
aam
mov
mov
mov
jno
int
gs
or
popf
pop
pop
xor
sbbb
add
sahf
stos
lcall
mov
jl
enter
subb
mov
aad
sbb
mov
repnz
or
pop
int3
jne
fnstsw
add
mov
or
cmp
push
mov
sarb
mov
xchg
push
add
push
rorb
test
ljmp
mov
pop
mov
and
sahf
int
das
push
push
jns
sbb
cmp
dec
fucomp
rolb
add
dec
ds
lock
je
pop
mov
test
push
out
lea
add
inc
xchg
push
and
xchg
mov
inc
ljmp
pusha
dec
icebp
test
jle
xchg
adcl
cwtl
push
jae
enter
inc
cmp
test
daa
inc
pop
mov
dec
scas
xor
and
imul
lds
bound
jo
rorl
dec
sub
mov
test
or
enter
out
fisttps
lret
cli
sub
cmpsl
les
cmp
mov
push
xor
mov
sub
or
push
or
clc
test
and
lret
mov
cmp
insb
std
incl
addr16
pushf
into
add
rclb
add
pop
in
dec
and
xor
mov
fildl
adc
ret
pop
shrl
push
jmp
push
mov
lods
or
xchg
dec
mov
push
insl
out
jbe
ja
test
dec
mov
in
ljmp
sbb
jae
stos
add
cmp
pop
cmp
or
movsb
outsl
fs
jp
mov
or
sbb
bnd
add
adc
push
jnp
popf
fwait
xchg
fwait
daa
or
xor
aad
inc
out
cmp
mov
dec
dec
jo
inc
push
sbb
dec
repnz
xchg
nop
insl
pop
in
data16
sub
cmpsb
sbb
jb
mov
ficoms
popf
lods
pusha
decl
mov
addr16
xor
out
rorb
int
imul
popf
cmp
sub
or
cltd
or
mov
mov
test
xchg
mov
push
sbbb
rol
aaa
sub
cli
test
mov
mov
pop
fildll
stos
es
xor
and
mov
out
rcll
insl
out
je
jo
mov
stos
mov
adc
mov
and
sbb
mov
push
add
mov
mov
movsb
push
push
das
xchg
fidivs
cld
inc
push
aad
ret
xor
sbb
out
mov
sub
and
xchg
mov
pop
ss
add
and
or
sub
dec
repnz
fsts
cwtl
pop
scas
inc
into
rorb
std
out
andl
inc
mov
mov
add
pop
sbb
cmp
mov
push
daa
push
iret
cmpsb
sbb
sbb
clc
xchg
aas
sti
xchg
xchg
jns
in
push
divl
and
lret
mov
pop
sarb
xchg
aaa
nopl
jns
jae
add
ljmp
cmp
inc
push
mov
fcompl
shl
ds
mov
pop
cmp
push
imul
xor
sahf
insb
or
ljmp
sub
lcall
sub
mov
add
jmp
cltd
mov
mov
xor
mov
jge
inc
dec
adc
push
xchg
loopne
imul
xor
es
clc
pop
or
or
mov
fildll
cmpsl
ficoml
mov
and
adc
inc
push
pop
push
add
or
pop
mov
pushf
ficompl
add
out
sarb
mov
into
xor
ret
inc
mov
mov
dec
mov
xchg
addr16
cmp
dec
jl
iret
and
cmc
cmp
cmp
fstps
and
lds
mov
dec
sahf
adc
or
inc
inc
out
aad
rolb
push
fs
mov
mov
scas
and
push
pop
test
movsb
lods
pop
dec
xchg
and
jno
add
int
cmp
fiadds
test
pop
pop
scas
xchg
in
mov
aam
insl
arpl
push
cmp
cld
push
lcall
bound
mov
jae
sbb
test
jg
sahf
lret
pop
mov
roll
adc
aaa
pop
movsb
mov
into
cmpsl
or
mov
xor
or
and
push
sub
enter
ret
jae
or
stos
addb
das
loop
dec
mov
in
data16
or
hlt
pop
jne
and
imul
cmp
loope
lods
test
mov
mov
ljmp
mov
test
xor
and
push
imul
mov
or
sbb
fstpt
out
aad
sub
and
push
and
xchg
rcr
xlat
dec
cmc
mov
movsl
shl
cli
pusha
mov
fs
dec
jp
sbb
jno
js
sbb
xchg
jbe
enter
adc
cmpsb
repz
and
fdiv
xchg
mov
insb
adc
jno
xchg
push
dec
inc
ret
and
xchg
ja
pop
and
and
jp
inc
add
iret
cmp
in
push
loope
cmp
add
ljmp
xorl
cwtl
cli
dec
cmpsb
imul
in
scas
add
dec
aam
addr16
xor
cmp
jle
cltd
and
lcall
int
add
jmp
and
jecxz
push
xchg
into
dec
in
jecxz
pop
cmp
cld
es
xchg
das
push
in
fcoms
pop
push
inc
mov
add
mov
mov
and
inc
setns
mov
lcall
dec
jecxz
cs
int3
inc
insb
jns
fwait
push
js
insl
fadd
jnp
mov
inc
xor
pop
adc
fcompl
ljmp
xchg
push
jmp
lea
jecxz
adc
xchg
xor
shll
cli
hlt
inc
das
mov
in
push
ss
sub
mov
sub
fwait
xchg
or
movsb
int
add
dec
sti
cmp
mov
hlt
aaa
lock
jno
inc
xchg
jns
fstl
cmp
push
int3
xor
data16
cmp
mov
sbb
aam
jge
std
mov
dec
daa
scas
sub
test
add
lcall
jl
pop
mov
insb
sub
sub
xor
add
inc
cmp
jno
jmp
lods
fwait
pop
in
pop
and
push
cmp
mov
adc
mov
loop
pop
data16
mov
inc
and
cmpsb
ror
rolb
mov
sbb
or
mov
cli
out
jne
fmul
inc
aad
mov
push
xchg
lods
xchg
roll
push
das
ret
popa
mov
repz
cmp
stos
or
leave
ret
adc
or
test
cmp
dec
mov
stos
mov
int
xchg
andl
push
fsubl
push
ficompl
mov
ret
inc
out
in
jg
cltd
sub
pop
movsl
jbe
cmp
leave
adc
push
pop
bound
pop
push
and
sub
add
pop
jbe
jg
sbb
insb
add
push
das
mov
fwait
pushf
mov
dec
inc
cmp
bound
dec
xor
push
hlt
out
int
xchg
fidivl
mov
sti
xchg
cmp
add
in
out
adc
xchg
lret
and
and
icebp
xorps
mov
push
mov
mov
aad
push
xchg
xlat
add
and
xor
adc
pop
loopne
mov
push
fists
in
jb
outsb
xor
push
mov
add
add
sbb
xchg
ss
push
lret
call
ret
add
js
pop
jbe
es
and
or
sbb
bound
adc
pop
add
mov
cmp
scas
outsl
call
insl
jecxz
inc
sub
pop
pushf
or
sbb
mov
jns
outsb
cmp
repnz
psrad
pop
pop
lods
lret
das
inc
in
or
sbb
adc
xchg
mov
test
fcmovnbe
lea
jnp
and
adc
adc
xchg
mov
sbb
mov
cmp
inc
cmp
xor
push
lds
sub
scas
je
data16
dec
outsl
lds
jbe,pn
pop
aas
jmp
daa
cmp
addr16
andl
pop
push
daa
addl
mov
pop
cmc
jge
aaa
fadds
lock
xchg
add
outsl
inc
xorb
movl
ja
pushf
cli
adc
in
xor
or
movsb
stc
ss
subl
cmp
or
jae
mov
or
sbb
mov
ss
ja
repnz
sub
mov
ss
xchg
dec
testl
pop
sbb
push
jnp
mov
xor
mov
and
insl
inc
call
mov
jo
fucomip
pop
push
sbb
stos
mov
inc
xlat
cli
dec
mov
pop
mov
dec
pop
fcmovnbe
stos
inc
jmp
movsb
test
movd
loopne
cmc
push
xchg
inc
mov
xchg
push
fadd
stc
and
dec
or
stos
inc
adc
mov
dec
xchg
das
stc
repnz
ret
js
in
lods
xor
xchg
pop
mov
shll
pop
dec
in
leave
adc
sbb
aam
jmp
aas
js
or
adc
xchg
ret
stos
jecxz
outsb
xchg
mov
cli
mov
push
aaa
add
lds
mov
push
xchg
pop
leave
xor
pop
cmp
sbb
and
push
aam
pop
mov
adc
mov
mov
mov
xchg
ja
lds
sub
cmp
fcomp
jb
fistps
and
fidivrs
in
cmpsb
mov
add
popa
cli
sbb
inc
dec
push
dec
pushf
shl
scas
xchg
sarl
or
xor
fistpl
or
mov
lock
xlat
out
pop
addb
cltd
sub
je
popf
mov
push
push
push
xchg
enter
pop
out
jb
sbb
and
sub
outsb
iret
mov
dec
mov
stc
and
fwait
mov
data16
sub
popf
add
jb
pop
mov
aad
jb
sub
sub
xor
pusha
sbb
lahf
dec
lcall
movsb
and
xchg
mov
push
cs
jmp
scas
jp
aas
pop
rcl
ror
std
sti
ja
nop
sarb
push
pop
xchg
daa
pusha
call
jb
mov
stos
fs
stc
sbb
shr
or
roll
cltd
cs
repnz
lahf
out
notb
mov
test
test
mov
les
mov
imul
fbstp
pop
je
or
lcall
pushw
mov
loopne
clc
out
inc
mov
testl
jl
loope
pop
jbe
test
and
imul
pop
sbb
mov
push
data16
or
lret
xor
in
jecxz
insb
ss
loope
pop
xchg
push
and
insb
loope
sub
mov
leave
xor
mov
xchg
sti
movsb
movsl
pusha
pop
xor
push
daa
add
mov
lahf
outsl
and
lret
popf
pushf
mov
test
xchg
fsubl
sub
pop
repnz
xchg
in
push
and
cmovo
clc
ds
cmpsb
xchg
push
aam
push
mov
ds
scas
pop
push
inc
push
sub
js
mov
jo
fstpt
push
or
dec
push
xchg
je
fnstenv
in
leave
out
lds
dec
in
mov
test
pop
test
test
dec
iret
adcl
test
push
jns
cmpsb
push
mov
mov
pop
sub
fnstenv
aad
push
mov
popa
push
mov
xor
es
add
insl
hlt
sti
push
pop
inc
clc
adc
add
repz
jmp
fwait
daa
test
sahf
xor
sub
shll
inc
xchg
jge
fcmovne
xchg
dec
mov
shlb
subb
adc
inc
pop
sub
mov
in
ret
adc
imul
pop
in
jno
fisttps
and
xor
push
in
jbe
xor
xchg
cmp
xor
into
pop
mov
cmpsb
mov
jno
mov
iret
aas
call
imul
xor
addl
or
adc
sub
addr16
cmp
jbe
mov
call
fldt
dec
sub
out
insl
pop
add
mov
imul
lea
cmpsb
mov
jl
call
pop
sbb
xor
jmp
jne
lods
dec
sub
arpl
lea
addl
insb
pop
xchg
cmp
mov
repz
adc
jno
pop
and
repz
scas
mov
xchg
das
mov
faddp
pop
mov
sub
cmpsl
scas
roll
bound
adc
push
or
idiv
out
dec
repnz
push
xchg
int
adc
push
fnstcw
in
std
ss
sbb
xchg
add
cmp
icebp
rorb
fs
add
sbb
sbb
mov
cmp
testb
fbld
xchg
fs
das
jnp
add
and
add
aam
jae
loop
cmp
push
sbb
xor
or
inc
or
ficoms
push
leave
scas
pop
xor
in
sti
add
xchg
cs
jle
aad
jge
mov
fucomip
pushf
dec
jge
mov
push
sahf
mov
mov
cltd
or
mov
push
push
inc
or
daa
inc
jne
cmp
lock
test
ja
sub
mov
rcl
push
or
or
pop
pusha
int3
fwait
outsl
je
cld
pop
xchg
movl
dec
push
aam
jecxz
loopne
dec
xor
fucom
jge
push
out
jle
xor
sbb
fistl
xchg
getsec
fnstsw
add
loopne
xor
stos
sbb
add
dec
push
or
js
mov
rclb
cmp
xorb
dec
jmp
xor
das
test
cmpsl
pop
aam
pop
dec
subb
xchg
push
ret
jbe
test
insl
cmp
fistl
and
sbb
inc
call
inc
andl
movsb
dec
mov
bound
addr16
aaa
push
mov
aam
cli
loope
xor
cs
mov
scas
sbb
movsl
jo
push
xchg
out
push
dec
cmp
push
xlat
std
mov
mov
cld
fisttpl
jbe
sbbl
and
sub
test
jmp
pop
xchg
mov
mov
inc
sar
dec
clc
rorl
mov
insl
cwtl
inc
push
into
push
addr16
adc
popf
in
inc
mov
aad
rorb
bound
jae
shr
mov
jns
loop
adc
fcoms
insb
xor
cmp
sbb
dec
mov
call
adc
push
in
sahf
pop
dec
push
mov
push
test
cld
aad
aam
sbb
sub
enter
jmp
pushf
mov
xor
shll
jo
sub
sub
nop
push
pop
orb
sub
movsb
fstps
xchg
scas
fwait
ja
jmp
fs
push
pushf
sbbb
wrmsr
xchg
mov
jl
jl
inc
cmp
jae
sahf
jmp
xchg
jne
stos
lock
or
or
dec
aas
mov
xor
mov
or
sahf
out
inc
fwait
mov
shr
push
cli
sbb
sub
rcl
mov
xorl
cli
int3
cltd
loopne
and
rcrb
xor
cmpsl
lock
sub
xchg
mov
pop
jp
fisttpll
fisubrl
decl
out
dec
jae
std
int3
ja
hlt
inc
es
jg
js
adc
push
or
std
inc
fmuls
jl
pop
mov
adc
movd
push
mov
in
repnz
xchg
mov
xchg
xchg
mov
add
jnp
adc
fsubl
push
ds
mov
insb
sub
pop
mov
jno
bound
fimull
dec
or
and
fcoml
popa
push
pop
dec
popa
scas
inc
lret
repz
mov
add
cmc
jno
addr16
dec
add
mov
sub
sub
adc
mov
aaa
fmul
out
or
mov
adc
aas
pop
jne
push
mov
sub
jl
xor
leave
push
push
dec
stc
stos
ret
movsb
mov
pop
push
sub
ja
inc
xchg
jge
loop
out
dec
xlat
xor
sbb
push
jb
testl
xor
mov
and
jns
into
push
aaa
fsubrs
xor
xchg
cli
popa
mov
mov
repnz
mov
cli
mov
ret
aas
mov
mov
mov
loopne
cli
sbb
je
add
pushf
shrd
xor
shl
stc
shl
scas
cmp
out
es
sbb
sbb
mov
fldcw
sub
and
out
loope
xor
xchg
xchg
or
stc
sub
push
in
aas
jae
aam
call
cld
imul
dec
daa
arpl
push
xlat
cmp
mov
adc
pop
repz
cmp
cmp
pop
sub
insb
xor
pop
mov
adc
pop
ss
xor
ljmp
rorl
adc
and
fisttpl
ret
imul
repz
pusha
mov
ss
stc
dec
rcl
mov
into
dec
stc
mov
je
mov
or
sbb
add
rolb
or
out
add
ret
cmp
test
aas
out
and
pusha
adc
ret
lods
and
stos
and
fs
aad
sbb
jl
cld
mov
push
xchg
dec
cmpsb
fistpll
cmp
xchg
sub
mov
adc
mov
dec
lods
sbb
clc
insb
scas
push
jno
cmp
shll
js
js
dec
or
nop
cli
jo
xchg
icebp
out
rolb
xor
fwait
sub
mov
xchg
xchg
cmp
and
icebp
cwtl
enter
fs
jmp
arpl
out
popf
sub
push
add
sub
mov
fsubs
repnz
iret
aam
je
std
fxch
sub
mov
or
mov
in
ds
push
xchg
xchg
xchg
mov
push
mov
cmp
out
stos
dec
iret
cmc
xchg
and
sub
mov
xchg
mov
jns
sahf
cld
jae
mov
ret
nop
repnz
jno
cli
loopne
cli
inc
mov
dec
test
push
rcrl
sub
push
and
pop
pop
pop
das
lock
and
add
cld
mov
sub
mov
into
xorl
cmp
sub
mov
or
or
ret
int
and
and
jae
inc
lret
jae
fisubrs
test
mov
lcall
mov
nop
test
mov
cli
shll
mov
inc
ds
mov
fdivrs
jge
es
xchg
loop
xchg
sub
lock
pop
sbb
mov
sti
pop
fadds
adc
fdivr
xchg
dec
es
test
jmp
test
andb
mov
mov
mov
lcall
mov
stos
and
cwtl
inc
es
push
pop
lods
lahf
dec
mov
mov
loopne
cwtl
push
and
dec
std
jecxz
or
push
out
daa
pop
adc
xchg
shll
jge
insb
sbb
pop
sahf
in
divps
test
mov
leave
loope
add
mov
add
pop
cmp
cmpb
sub
shlb
jecxz
mov
pop
xchg
sti
aaa
insl
pop
ljmp
loope
rorl
xor
imul
rcll
jg
fdivl
cltd
mov
stos
cmp
out
test
aad
or
lods
roll
cmp
jp
dec
out
in
cmp
add
in
movsb
aam
mov
pop
inc
or
cli
xchg
cmpsb
test
add
jmp
cmp
sbb
add
ljmp
xor
into
cmp
stos
or
adc
push
add
cwtl
mov
icebp
imul
in
cwtl
cmp
rolb
xor
ror
in
rolb
adc
cs
add
loop
fisttps
gs
add
ja
jno
cmpl
dec
pop
pop
jno
push
or
sub
pusha
cltd
jo
out
pop
and
mov
xchg
sub
movsb
pop
imul
fimull
sti
icebp
lcall
cli
movsb
daa
cmp
push
xor
imul
xor
fdivrl
and
cwtl
lret
pop
mov
dec
lret
mov
mov
lock
cld
sbb
cmp
add
dec
mov
mov
sub
cltd
shlb
jle
lcall
hlt
inc
hlt
mov
xlat
les
cmpsb
aaa
jg
pop
dec
mov
xor
std
aas
pop
jmp
cmpsl
push
pusha
sbb
and
clc
es
adc
test
xor
sbb
sbb
js
push
mov
pop
int3
cs
jbe
jecxz
mov
sbb
filds
push
add
dec
hlt
xchg
sbb
cmp
stos
aas
push
scas
sbb
pop
and
mov
pop
inc
js
mov
mov
fcomps
fwait
jns
movsl
adc
or
mov
test
inc
in
push
cmp
xor
enter
mov
negl
mov
adc
sub
pushf
imul
addr16
jne
dec
cmp
bound
and
fisttps
jne
or
dec
mov
ljmp
sbb
test
das
xchg
mov
sub
lahf
jmp
jae
leave
insb
add
insb
xchg
and
pusha
sarl
je
mov
add
xorb
cld
and
fwait
inc
out
xor
imull
cwtl
mov
sub
icebp
repnz
lret
fcom
mov
adc
push
xlat
xchg
fcompl
xor
lahf
xchg
loopnew
shrb
test
lds
pop
pop
inc
inc
imul
outsl
dec
xor
lds
and
bound
int
cld
push
in
jg
or
cli
pop
ja
sub
jle
add
ret
xor
jge
sbb
xorb
into
xlat
dec
xchg
jno
lods
or
aaa
in
xchg
sti
test
insb
add
sbb
and
cmpsl
leave
gs
mov
cmp
dec
stos
xor
dec
xchg
test
sahf
or
scas
sub
mov
xor
xor
cmc
push
sbb
push
jg
or
lock
push
outsb
sahf
dec
sbb
xlat
arpl
xchg
fldt
adc
pop
push
lret
aad
hlt
int
xchg
fldl
insb
jge
aas
icebp
sarb
sbb
push
cmp
and
sbb
pop
clc
xchg
xor
repz
cmp
xor
out
jp
arpl
popf
xchg
sarb
outsl
push
add
enter
aas
sarb
cmp
xlat
filds
fildll
in
mov
int3
mov
orb
sti
or
adcb
out
enter
sub
js
fcom
mov
out
mov
sbb
jle
clc
rcrb
fbld
xchg
inc
push
dec
xor
cld
test
inc
push
dec
xchg
push
sub
jae
sub
xchg
movsl
icebp
jbe
jle
inc
es
lock
xchg
inc
pop
inc
adc
insb
into
mov
xchg
jae
xor
mov
sub
outsl
inc
scas
in
in
repz
xchg
dec
pop
ja
in
fiadds
aaa
mov
cld
sbb
mov
mov
outsl
adcl
or
xchg
pop
out
push
fcmovnb
xchg
out
pusha
cmpsb
loop
mov
cmpsl
cmp
mov
insb
xchg
ja
stos
ljmp
push
sbb
adc
or
inc
out
icebp
pop
dec
repz
xor
orb
in
call
pop
jns
lock
push
xor
jmp
rcll
mov
andl
popa
scas
sbb
push
mov
movsb
xlat
sbb
inc
xchg
dec
add
jae
lcall
out
push
mov
popf
lods
push
xor
jecxz
pushl
outsl
xor
pop
js
inc
aad
add
into
aaa
cmp
out
js
jo
xor
out
push
add
pop
sbb
ss
mov
pop
sar
ljmp
xor
pop
lcall
movsb
mov
inc
jae
xor
or
mov
jl
xchg
cwtl
in
shlb
pushf
cmpsl
mov
fcmovb
arpl
addr16
lea
adc
aaa
ja
mov
mov
xorb
mov
test
jae
aas
dec
dec
cmp
aad
mov
in
pop
sbb
xchg
xor
sub
push
test
pop
popf
mov
loop
leave
push
int3
mov
xor
sbb
movsb
testl
sbb
loop
lret
pushf
xchg
not
icebp
pop
fsubrp
testb
mov
cmpsl
negb
call
add
xor
cmp
faddl
push
add
jb
popa
mov
pushf
fidivs
xor
sarb
inc
fildll
ds
cmp
rol
pop
and
pop
cwtl
pop
popa
and
push
adc
pop
movsb
adc
in
scas
loopne
xor
dec
lahf
imul
push
ret
sti
iret
push
lock
loop
sbb
jb
outsl
test
test
leave
testb
nop
popf
jl
cwtl
mov
cld
pop
int3
aam
dec
stc
mov
and
add
hlt
js
rolb
mov
inc
sarl
sub
and
add
xor
pop
xorl
lock
dec
testl
outsb
and
nop
xor
push
insb
adc
js
inc
sbb
mov
add
lock
sub
sbb
sbb
adc
cmp
or
lods
push
cmp
addr16
push
jge
sub
sbb
outsb
js
xlat
hlt
icebp
and
dec
ret
scas
lret
lods
ljmp
sbb
addr16
or
sahf
popa
arpl
subl
pop
mov
pop
mov
scas
dec
jbe
xchg
lahf
shl
jne
stos
jns
dec
outsb
mov
xchg
xor
enter
mov
jle
int3
dec
add
in
push
addr16
sub
fisubrs
pop
cmpsl
leave
fst
mov
std
inc
push
out
shl
test
xor
sbb
stos
push
dec
lret
mov
popf
push
scas
nop
in
out
movsb
mov
and
xlat
imul
mov
cwtl
int
pushf
add
fcoml
mov
mov
shrl
popa
aas
cmp
mov
sub
push
faddl
jnp
and
adc
sbb
mov
fdivrs
imulb
push
pop
mov
shll
dec
loop
push
and
mov
mov
mov
clc
ja
sub
mov
and
cmp
test
lds
in
test
insl
pop
pop
aam
add
and
jg
jp
dec
sub
pop
cmpsl
adc
ljmp
aam
hlt
xchg
lods
jbe
movl
ds
cld
xchg
jp
xchg
test
fistpll
dec
push
jecxz
mov
ds
mov
mov
in
jecxz
mov
lods
in
inc
sub
push
xchg
movsl
lahf
add
sub
xchg
loope
ds
mov
enter
mov
rcl
cmp
stos
std
iret
xor
pop
lahf
loope
rorb
ja
mov
cwtl
add
cmp
jo
jle
xlat
cmpsl
pop
insb
lahf
xchg
jl
mov
mov
fstpt
cld
and
ret
out
cmpb
rol
mov
loop
dec
cli
mov
das
adc
adc
lock
mov
rcl
add
data16
xor
add
andl
movsb
push
pop
cmp
sbb
sti
dec
and
orb
and
es
inc
in
or
xor
hlt
rcl
loope
mov
or
lods
mov
mov
pop
and
inc
test
jnp
jmp
adc
pop
ja
add
andb
add
sub
xor
push
and
ljmp
loop
sahf
out
jo
pop
xor
mov
out
into
mulb
cltd
addr16
adc
sbb
push
and
cli
pop
addr16
aad
adc
lcall
lahf
adc
into
iret
mov
ret
cs
xchg
push
mov
test
sub
cmp
ficoms
pop
adc
popl
stc
mov
test
mov
pusha
inc
mov
jge
fs
push
daa
mov
roll
lods
lods
shr
cmovl
cmp
inc
subb
imul
and
cmpsb
mov
ret
leave
adc
iret
adc
out
test
and
mov
mov
xchg
mov
mov
in
jae
add
cmpsl
mov
cmp
mov
lahf
pop
lods
fisubrs
sub
pop
xor
pop
iret
shll
add
dec
fwait
mov
aaa
movsb
cwtl
mov
lock
and
dec
dec
cwtl
adc
pop
cmp
inc
lea
mov
shll
loop
or
addb
mov
pop
mov
es
mov
xor
cmp
out
fdiv
scas
movsb
test
lret
ffreep
inc
pusha
mov
xchg
out
jmp
sub
xchg
movsb
push
nop
push
dec
outsb
or
leave
lock
mov
mov
mov
mov
mov
pop
xchg
ret
loop
push
sub
mov
scas
mov
test
mov
gs
xor
test
xchg
loop
mov
std
mov
inc
xor
pusha
sub
cld
sbb
or
aam
or
out
gs
imul
jmp
sahf
addr16
push
mov
mov
pushf
je
lret
or
repz
lock
inc
or
mov
jle
xor
idivl
loopne
sub
pop
or
pop
add
mov
xor
loopne
inc
lock
adc
insb
stos
cmp
popa
ficompl
fcompl
in
repz
fdivrl
movsl
test
lea
sub
sar
pop
or
xchg
and
mov
lea
jo
and
mov
out
std
xor
jne
fs
pushf
and
mov
or
mov
movsl
sbb
bound
jne
and
fldl
cmp
or
std
add
cli
pushf
mov
cltd
or
or
xor
sbb
inc
into
inc
or
jl
mov
dec
mov
aaa
xor
loope
pop
je
mov
outsb
push
cli
sub
ja
lods
jns
scas
push
divb
mov
add
inc
cmp
popa
sti
jl
test
into
stos
dec
test
dec
pop
std
mov
xchg
mov
pushf
mov
sahf
xchg
adc
push
scas
mov
cld
pop
mov
imul
jp
mov
insl
inc
bound
xor
je
aaa
ret
stc
fwait
mov
inc
cmp
jns
pop
mov
sub
imul
push
insb
int
xchg
jbe
sub
push
xor
mov
xchg
ret
push
rorb
stc
cmpsb
jo
stos
je
loop,pn
into
sbb
push
inc
mov
dec
stos
roll
and
outsl
scas
mov
idivl
mov
fwait
adc
or
and
and
fistpl
test
inc
call
push
jmp
dec
adc
subl
mov
shrl
lock
mov
jle
jg
or
fnsave
sub
aad
cmp
and
push
or
je
test
mov
sbb
popf
scas
fs
fcompl
mov
mov
push
jecxz
repz
sub
negl
lahf
ret
sub
repz
jg
mov
pop
push
adc
sbb
popf
fnstcw
mov
inc
and
repz
stos
fcoms
flds
les
rcll
pop
xchg
and
sbb
int
jno
cld
pushf
sahf
xor
pusha
mov
movsl
jp
gs
iret
fisttps
rol
loopne
cltd
adc
pop
inc
ret
push
sbbl
adc
mov
sahf
jae
mov
fcmovbe
lret
cwtl
pop
mov
jno
aas
clc
cmc
dec
scas
lcall
and
and
daa
in
enter
adc
and
sub
inc
push
in
shrl
xchg
sub
cld
cmp
xchg
add
mov
fwait
sahf
mov
jno
push
adc
enter
adc
lcall
pop
fists
dec
add
int3
subl
dec
mov
mov
push
scas
push
int
dec
std
xor
ljmp
mov
aad
data16
fisubrl
imul
stc
das
dec
push
ljmp
lods
push
lcall
cmp
mov
pop
xchg
movsl
repz
mov
push
mov
cld
pop
movsb
dec
mov
sbb
mov
pop
mov
lret
sti
mov
insb
mov
arpl
lret
cmc
adc
fmull
ret
sbb
jge
or
cmpsb
stos
push
xchg
add
pop
sbb
shr
xchg
adc
jnp
leave
inc
imul
xchg
xorl
lcall
xchg
rol
push
addr16
clc
and
jecxz
sub
push
cltd
loopne
lahf
mov
clc
imul
in
cmp
in
lahf
out
sbb
add
ds
cmp
enter
sahf
imul
mov
inc
xchg
mov
and
pop
nop
cli
sti
sahf
test
lea
sbb
inc
push
pop
and
xor
lcall
adc
cltd
into
into
pop
sub
add
jge
cmp
shll
add
lds
lret
aam
addr16
ja
sbb
xor
mov
jb
jle
dec
adc
cld
cli
mov
cmpsb
sub
cld
push
cmp
jnp
cmp
xchg
adc
push
das
shll
test
inc
push
jp
jge
xchg
in
mov
sarl
inc
test
jp
stos
scas
adc
jnp
mov
outsb
lahf
clc
andb
aam
cmp
cltd
cmp
sti
dec
xchg
mov
cwtl
fwait
negb
pop
mov
push
cmp
or
cmp
in
xor
test
nop
stos
ffreep
mov
xchg
lcall
sub
mov
adc
and
dec
mov
shrl
ss
in
jbe
mov
cmpsb
or
push
add
rol
jbe
rclb
mov
jecxz
dec
loope
out
jno
in
mov
mov
scas
ret
shrb
mov
nop
mov
adc
std
and
enter
das
aam
mov
mov
enter
inc
push
das
inc
sub
cmpsl
dec
jo
ficompl
mov
flds
stos
inc
shlb
cmp
pop
pushf
jno
xor
in
in
mov
lahf
mov
jle
test
rorl
movsl
sub
arpl
add
jae
fcompl
and
cmc
mov
data16
ret
and
shrl
push
je
jg
pop
inc
aad
push
mov
or
mov
sti
test
mov
jbe
pop
jo
sbb
push
sbb
push
test
push
sub
mov
cmp
mov
js
jmp
roll
lret
pop
jo
icebp
in
inc
test
gs
mov
pushf
popa
test
adc
aam
je
mov
inc
jns
dec
test
lret
push
insb
mov
inc
loopne
dec
stos
loop
jle
mov
push
jle
stc
mov
inc
jne
cli
sub
fptan
xchg
std
sub
loopne
pop
inc
push
fcmovnu
add
cmp
test
in
lea
fs
data16
aaa
pop
std
data16
hlt
mov
sti
dec
xchg
sub
mov
dec
movsl
sbb
iret
mov
push
cmp
jecxz
in
popf
repz
xchg
lret
cli
push
out
lods
mov
adc
bound
pop
jmp
pop
sub
mov
xchg
aas
movb
cmc
sahf
dec
lock
out
xor
dec
jae
jb
add
ret
inc
dec
clc
scas
or
lret
sub
lods
repnz
jb
jcxz
js
jge
mov
mov
sbb
aas
int
mov
jnp
sub
xchg
push
jbe
lds
in
inc
pop
jp
push
xor
je
cmc
out
cld
mov
cld
out
mov
cwtl
fwait
jbe
stos
das
sub
in
outsl
imul
inc
lcall
sarl
push
test
fs
lret
add
cltd
ret
ret
call
and
daa
arpl
lods
out
test
add
mov
out
xor
test
adcl
jmp
fsubp
mov
fisttps
std
lods
imul
jo
clc
in
sbb
jbe
cmc
jle
mov
sahf
popf
mov
sub
fsubl
sbb
pushf
mov
scas
sbb
pushw
jnp
fdivrl
jmp
dec
mov
mov
pop
cld
daa
and
xchg
fistps
xor
insl
or
xchg
shl
sti
push
fldenv
and
adc
lahf
std
fstpt
cli
popa
inc
and
scas
xor
mov
mov
and
inc
xchg
getsec
or
fwait
pop
xchg
or
and
sbb
stos
dec
es
add
sbb
pop
sbb
dec
pushw
xchg
out
push
and
neg
pop
cmp
insb
fcoml
fstl
jp
dec
mov
sub
cs
xor
test
lods
and
pop
arpl
push
adc
movsb
bound
xor
dec
fdiv
popf
inc
inc
mov
ficoml
sub
pop
pop
pop
fldz
cmp
xor
sbb
xchg
xor
mov
cmpsb
fdivr
fadds
mov
mov
push
sub
or
hlt
cli
dec
imul
jb
push
push
out
mov
mov
mov
in
pop
movsl
arpl
cmp
inc
dec
mov
test
test
fldl
into
mov
inc
mull
dec
sub
mov
jns
jle
sbbb
lcall
xchg
int
push
xchg
jae
mov
mov
xchg
enter
pop
adcl
negl
jmp
out
adc
jns
push
in
lea
inc
sub
fldcw
je
lret
mov
lods
cld
sbb
push
pop
xor
outsb
iret
popa
sbb
stc
or
lahf
cltd
mov
fs
call
addl
mov
cld
xor
xor
arpl
xchg
stos
mov
mov
sti
xor
sbb
and
mov
mov
dec
leave
mov
imul
jl
stc
or
dec
jp
mov
cmc
inc
imul
ds
es
jbe
imul
aas
shll
call
hlt
mov
shll
ret
fs
je
sub
les
ja
pop
out
fs
shll
pusha
imul
push
pop
jmp
mov
xor
ret
in
popa
bswap
fistpll
mov
jo
dec
out
sbb
stc
lock
push
negb
gs
enter
push
jmp
movsb
push
jmp
push
out
mov
push
jb
dec
movsb
mov
gs
jbe
cs
push
lcall
jns
shrb
push
push
int3
addr16
fwait
mov
shll
jge
mov
cmp
sbb
aas
pop
sub
jle
cmpsl
sbb
dec
xor
sbb
or
sahf
imul
dec
mov
and
movsl
aas
sub
jge
es
jnp,pn
adc
push
repz
and
adc
std
loop
ret
xchg
movsb
push
sbb
testl
mov
cmc
sbb
fdivr
loope
cmp
cwtl
mov
mov
mov
repz
and
stos
lret
in
nop
in
mov
sbb
mov
repnz
mov
iret
inc
sub
sar
xchg
cmp
aaa
into
sbb
mov
adc
push
pop
pop
test
cwtl
testl
aaa
mov
dec
fwait
adc
cmp
add
push
xchg
cmp
sub
xor
xchg
mov
mov
add
daa
sbb
int3
xor
lds
lods
cmp
or
rcll
ja
mov
push
iret
push
push
xchg
sahf
aaa
inc
sbb
mov
sbb
xchg
jbe
nop
cmp
lahf
loop
dec
int3
sub
fsubrp
adc
mov
sar
repnz
mov
cwtl
es
adc
ljmp
push
xor
push
xor
clc
enter
lods
or
jo
clc
aad
sub
inc
mov
in
cmp
push
insb
adc
ret
aaa
push
lods
push
daa
push
xor
mov
je
jo
es
fs
or
iret
pop
add
fadd
or
out
daa
xchg
shlb
hlt
mov
sbb
or
stos
pop
pop
xchg
adc
and
jo
or
mov
lcall
inc
movsb
sub
data16
push
mov
es
push
cmpsb
mov
scas
mov
sbb
stc
and
push
outsl
cmp
imul
pop
xor
inc
xchg
out
imul
imul
stos
sub
bound
lods
fcmovnu
xor
inc
mov
subb
test
icebp
inc
pop
aam
es
movsl
push
cmc
inc
jno
jbe
xchg
sbb
jne
pop
ret
rcr
notb
mov
sub
xchg
int
push
xor
cli
push
lock
sub
ret
out
mov
xlat
enter
mov
iret
mov
in
shll
scas
cmp
add
sub
adc
test
mov
sbbb
or
xorb
in
scas
movsl
shlb
inc
inc
shlb
xchg
xchg
xchg
cmpsb
mov
mov
imul
mov
push
and
adc
or
pop
mov
test
test
mov
iret
or
and
pop
test
iret
mov
out
dec
es
andl
mov
test
in
sub
pop
inc
cmp
leave
mov
and
xchg
lods
adc
or
cli
imul
fidivs
test
adc
call
inc
cld
stos
xor
mov
jecxz
inc
cmp
fwait
dec
mov
lahf
and
out
jl
mov
fdivs
insb
test
mov
xlat
negl
mov
daa
iret
jbe
adc
sbb
mov
xchg
jmp
push
push
dec
pop
push
cwtl
inc
aad
call
in
push
add
es
xchg
and
mov
repz
mov
push
inc
xchg
xor
and
cli
add
je
pop
repnz
add
adc
mov
xchg
jmp
bound
arpl
pushf
fdivs
dec
cmpsl
jecxz
cwtl
in
mov
shl
cmpsb
jl
stc
add
jge
push
mov
push
or
scas
sub
test
stos
mov
nop
mov
out
out
pop
jno
les
adc
mov
push
scas
mov
test
xor
pop
or
mov
push
mov
loope
leave
add
lret
imul
mov
xchg
cltd
ret
cmp
fldenv
aam
jns
pop
seta
or
jmp
inc
es
xchg
or
jo
add
aaa
cmp
xor
cmpsl
ficomps
push
xor
lods
xor
ja
inc
in
js
addr16
ret
jmp
adc
and
shl
test
xor
mov
addr16
xorb
adc
hlt
push
sbb
out
add
inc
int
xchg
ljmp
fs
cmp
cmp
insl
xchg
imul
lods
sub
inc
jl
cmpsb
dec
mov
xor
mov
loopne
adc
cmpsl
mov
mov
adc
jmp
icebp
mov
push
xor
int
jle
xchg
push
mov
jo
push
sbb
cmp
fists
jne
cmp
sahf
jnp
cld
repnz
xchg
sbb
sbb
sbb
jle
lahf
inc
pop
loopne
fs
and
mov
adc
fmul
enter
and
jb
pop
lret
mov
adc
dec
sub
outsb
push
push
jl
lret
mov
scas
or
sub
jb
xchg
int
xor
insl
push
jno
mov
jecxz
adc
and
mov
roll
dec
mov
mov
lahf
fisubl
or
xor
mov
stc
add
pop
adc
std
mov
mov
or
outsb
shlb
rcrl
out
sub
push
push
adc
adcb
mov
jb
cmpxchg
dec
shlb
mov
inc
cmpsb
mov
mov
ret
sub
fcompl
scas
jns
les
mov
and
add
inc
mov
ljmp
icebp
in
pusha
ds
loop
arpl
mov
push
std
jle
sbb
or
andb
dec
lahf
add
das
leave
add
fwait
inc
insb
inc
insb
push
mov
fs
insl
mov
mov
ljmp
jmp
or
test
into
pavgw
call
lcall
mov
push
insl
pop
push
or
pop
and
dec
push
stc
mov
mov
sahf
loope
leave
mov
mov
add
xchg
xchg
fstps
mov
daa
rorb
adc
das
mov
mov
es
mov
xlat
sbb
xor
ds
add
mov
orl
sub
and
dec
cmp
xor
pusha
es
sbbl
gs
mov
loop
popa
adc
push
loopew
andb
mov
cwtl
jo
adc
xor
es
mov
dec
cmp
mov
imul
call
adc
push
xchg
dec
inc
cs
pop
push
or
jae
xor
mov
jae
enter
cmp
push
add
je
rorb
mov
aad
ds
or
xchg
call
jl
dec
scas
mov
popf
lock
mov
testl
leave
and
inc
iret
inc
sar
jns
xchg
mov
sub
out
test
xor
jle
push
dec
popa
add
mov
or
mov
aad
push
sbb
js
sbb
ret
adc
in
shl
push
or
cmpsb
aaa
xchg
mov
cli
xor
xchg
add
ror
rcl
rolb
dec
repz
sub
cmp
sub
pushf
push
stos
or
dec
jbe
sub
sbb
mov
mov
decb
stos
test
test
shl
mov
enter
fcoms
in
bound
push
inc
test
jno
adc
push
pop
cmpsb
xlat
scas
fwait
or
xlat
dec
mov
push
fldcw
inc
daa
int
fisttpl
jmp
imul
icebp
jno
popa
lods
lret
and
bound
mov
and
lods
xchg
inc
xorl
or
push
pop
push
lret
push
cs
jle
popl
ret
or
pop
pop
mov
push
les
lea
out
adc
or
sbb
add
ss
jbe
dec
push
cmp
mov
rclb
ret
test
xlat
fldcw
push
pop
and
inc
arpl
in
sbb
mov
loope
jmp
js
cmp
aas
mov
cmpsl
push
into
shlb
dec
mov
push
or
ss
adc
mov
mov
push
outsl
push
clc
add
adc
mov
ja
insb
xor
and
adc
add
fstpl
mov
dec
je
subl
jmp
xchg
leave
and
dec
pop
pop
in
sti
jne
scas
push
mov
fucom
lock
das
fildll
sbb
pop
cmpsl
ret
out
mov
aas
cwtl
xchg
push
imul
mov
push
xchg
notl
mov
adc
lods
sub
or
les
subps
xor
out
inc
jne
iret
jne
call
cmpsb
lock
ficoml
dec
js
shl
jmp
les
mov
cs
cmc
inc
adc
dec
dec
cli
jecxz
in
push
jmp
sbb
rclb
out
jge
mov
scas
cmpsb
and
lods
xor
mov
mov
arpl
push
lcall
mov
push
aaa
addr16
out
mov
daa
push
push
xor
xor
push
ror
push
pop
cmc
lods
cmp
adcl
dec
cmc
mov
push
pushf
loopne
mov
push
pop
cmp
mov
cmp
rcl
push
lods
jne
push
xchg
loopne
pop
shrb
mov
adc
add
mov
mov
cmp
mov
iret
cltd
pop
jp
adc
icebp
push
icebp
pop
inc
cmp
in
in
test
add
cs
mov
push
pop
jmp
shl
pushf
cmpsb
mov
insl
sbb
movl
faddl
cmp
adc
cli
insl
sarb
daa
rcll
sbb
fstpl
mov
pop
sbb
cmpsl
sbb
call
aaa
inc
sbb
stos
ljmp
pop
negl
or
jl
push
push
ss
jns
loopne
fstpl
int
insb
inc
aam
dec
mov
xor
cmp
shl
jge,pt
pop
int3
je
sahf
sti
hlt
addr16
popf
sarb
mov
push
mov
out
nop
mov
fistl
fstpl
js
xlat
dec
pusha
bound
stos
repz
push
push
push
sbb
shll
push
ja
mov
das
xlat
inc
ss
jp
fidivl
sbb
mov
call
xchg
jmp
mov
xorb
add
jb
inc
movsl
inc
imul
mov
push
xchg
dec
jmp
sub
addr16
in
inc
cli
mov
xor
push
dec
outsl
lea
popf
movsb
ds
and
das
inc
mov
push
rol
xor
mov
sub
adc
and
sub
pop
cmp
lods
outsl
sbb
fisttpl
icebp
jge
aad
add
test
mov
dec
pop
cmp
fidivrs
popf
cmp
mov
loope
sbb
int
sahf
pusha
call
jns
adc
mov
cmp
pushf
and
or
pop
xchg
sub
mov
dec
add
sub
mov
jmp
jo
sahf
in
pop
sarb
xlat
jnp
std
lcall
rcrl
pop
stos
pop
mov
cmp
enter
lret
daa
mov
out
jno
orl
add
lret
movsl
std
aaa
mov
jo
daa
nop
aaa
icebp
mov
lods
cmp
xchg
xor
or
repz
test
test
mov
push
fdivl
sub
iret
inc
sub
pop
sub
js
lret
in
pop
subl
mov
xchg
or
and
pop
iret
cmpsl
adc
or
cwtl
repz
cwtl
sbb
call
add
leave
fisubrl
test
nop
ds
iret
add
add
mov
aaa
xor
push
cltd
adc
inc
cmp
std
sbb
push
nop
enter
insl
enter
fnstenv
sbb
sarb
pop
sbb
adc
hlt
fdivs
arpl
jbe
fwait
and
lcall
rcr
cmp
sub
xor
xchg
out
dec
in
les
movsl
outsb
je,pn
inc
jecxz
mov
pop
ret
add
es
es
sbb
pop
jae
mov
dec
pop
fistl
or
inc
loop
jbe
test
and
xchg
mov
subb
or
sbb
aad
cwtl
xor
outsl
flds
inc
or
mov
push
mov
or
jno
sbb
adc
fwait
sub
std
test
mov
fiadds
sub
xchg
mov
cmpsb
cmp
int3
sub
imul
cs
stos
int
push
sbb
pop
sahf
pop
sti
int3
fldenv
jb
or
xchg
mov
adc
subb
gs
and
mov
sarl
inc
and
les
mov
imul
pop
adc
lahf
loope
xchg
adc
push
jnp
daa
push
lds
push
sub
inc
cmp
into
std
push
out
call
mov
lret
mov
mov
shlb
je
addl
outsl
inc
add
adc
in
hlt
push
loope
cmp
push
cmp
pop
inc
fiaddl
mov
flds
mov
loopne
or
in
mov
pop
jg
jb
ja
xlat
dec
mov
push
adc
xchg
rcr
pop
jnp
mov
pop
sub
mov
add
xorl
jnp
jb
rcl
jle
xor
fcmovbe
or
push
fwait
pop
adc
popa
push
into
ficoml
clc
mov
jo
pop
mov
es
movb
test
mov
dec
call
test
scas
jmp
out
mov
xor
cmp
outsl
sahf
mov
inc
mov
sti
imul
xchg
add
sub
jl
xchg
sub
outsl
pusha
nop
cmp
xchg
jns
xchg
jne
imul
add
ucomiss
dec
arpl
dec
dec
test
or
mov
mov
stos
sti
idiv
dec
dec
dec
jecxz
and
jle
xor
xor
repz
dec
out
add
jnp
mov
or
cmp
adc
lock
out
int3
xchg
repz
repnz
in
je
and
inc
in
push
push
loopne
scas
out
push
rorb
sub
les
movsl
loopne
loope
sbb
mov
test
lock
adcb
jle
xor
in
lret
sub
fbstp
hlt
imull
cmpb
cmpsl
xlat
fs
lcall
loopne
idivl
or
and
push
cld
test
das
mov
ret
subl
adc
aas
mov
notb
inc
xchg
xor
pushf
clc
add
std
sar
cmpsl
dec
imul
xchg
adc
insl
jecxz
testb
or
cmp
shll
shlb
insb
mov
repz
jae
je
imul
aaa
xchg
mov
pushf
dec
sbb
inc
sbb
and
mov
cs
jb
xor
rclb
inc
test
scas
fsubrs
ficoml
cmp
adc
mov
sub
mov
pop
fsubp
in
stos
pop
imul
dec
repz
and
sbb
pop
cmc
loope
cmc
js
cmp
rorb
or
add
in
add
dec
into
sbb
aad
mov
xchg
dec
pop
aam
icebp
jge
mov
jmp
mov
xor
mov
dec
test
xor
jns
mov
call
mov
lock
inc
lret
int3
jne
popf
std
push
mov
lret
bound
roll
rorl
inc
inc
jns
cli
xchg
adc
cmpsl
lds
mov
sub
cli
in
dec
mov
mov
push
mov
insl
enter
xchg
pop
jmp
lahf
imul
sub
mov
mov
push
movl
jbe
jns
in
xchg
adc
mov
pop
sub
mov
inc
dec
stos
add
dec
dec
int
adc
jle
sub
sti
push
dec
pop
rolb
xor
pinsrw
jp
push
push
add
lahf
jae
cmp
dec
jbe
push
hlt
in
add
and
lahf
add
mov
orb
shl
loope
hlt
aad
out
insl
inc
in
push
dec
sbb
push
push
movzwl
or
sbb
xchg
ljmp
mov
sti
roll
cmpsl
aas
add
nop
es
fistl
imul
push
hlt
addl
mov
cld
mov
in
pushf
push
pop
fsts
push
outsb
push
push
jo
lods
fs
call
inc
push
mov
pop
and
sub
cmpsb
mov
jo
cld
lret
mov
jae
fimuls
mov
repz
push
insb
inc
js
mov
mov
fcmovu
repz
jmp
aas
pop
push
das
aaa
pop
or
cltd
jno
push
fnsave
jmp
jmp
loope
cld
addl
sbb
fucomp
dec
jecxz
jnp
insb
push
xchg
xchg
push
loopne
nop
adc
test
scas
fcomi
aaa
add
cmpsb
gs
xor
imul
pop
xor
dec
nopl
xor
out
repz
aas
and
int3
cli
std
dec
sbb
jmp
leave
scas
clc
xlat
push
jge
xchg
rorl
push
dec
pop
push
and
loope
inc
iret
popa
fs
icebp
jp
xchg
icebp
enter
pusha
in
sbb
xor
add
push
ret
xchg
shlb
inc
push
inc
and
xchg
sub
jmp
fs
ret
dec
mov
lock
out
push
std
adc
pop
inc
popw
std
jp
push
mov
fsubrp
inc
cmp
sub
jmp
test
ljmp
pop
mov
outsb
aas
push
rol
xor
xchg
fidivs
xchg
inc
xorl
cwtl
sahf
test
jmp
incl
sub
lret
mov
add
sahf
xchg
mov
sbb
ds
sahf
mov
das
es
insb
testb
xor
dec
insl
adc
int
nop
cs
or
pop
mov
cmp
enter
and
xchg
repnz
sbb
cltd
mov
sbb
jl
xchg
sub
sub
jnp
out
sahf
lock
jg
int
cmpb
and
andb
xchg
mov
mov
sti
mov
sbb
pop
jb
sub
stc
jnp
pushf
sub
mov
iret
xchg
push
pop
xor
paddw
cmp
sti
mov
das
fldcw
inc
ljmp
sub
in
sbbl
jae
fnstenv
xchg
out
sub
movsb
jno
mov
add
xor
mulb
mov
sbb
jno
outsl
in
es
popf
or
lret
or
mov
cld
loop
cmp
sub
gs
mov
mov
test
nop
gs
daa
idivb
pop
push
es
add
push
xchg
mov
mov
das
outsb
inc
in
cwtl
rclb
enter
sub
and
std
ds
pop
lcall
fwait
mov
mov
popf
mov
inc
push
fsubl
mov
fs
scas
push
stos
enter
sahf
fdivs
das
cmp
sub
jg
sahf
push
addr16
mov
mov
in
test
dec
lock
cmpl
shlb
lds
mov
inc
dec
and
sub
push
js
xchg
int3
mov
aad
xlat
repnz
xchg
fcomps
sar
sub
inc
push
and
mov
pop
orb
lods
sti
mov
ret
scas
hlt
inc
stc
daa
add
jle
sarl
mov
sub
and
fmuls
in
jg
movsb
cmpsb
fisubl
pop
xchg
or
pop
mov
adc
lock
xchg
daa
xchg
rolb
sarl
bound
js
popf
push
push
in
xchg
xchg
test
lcall
lock
adc
icebp
sbb
push
into
outsb
and
aas
jno
add
push
repz
fs
icebp
sbb
out
test
icebp
and
int3
pushf
pop
mov
out
push
mov
push
fstps
div
roll
mov
dec
fistps
or
popa
out
fstl
not
lfs
shl
test
fsub
jb
pop
pop
jnp
lea
aas
mov
or
in
push
into
dec
inc
sbb
jge
daa
out
push
imul
inc
lea
xchg
lods
jle
in
test
jp
push
aam
push
sarl
jge
cmp
adc
test
les
sub
jge
hlt
xor
pop
cs
sub
mov
xor
mov
xor
aad
cmpsl
or
mov
and
xor
mov
stos
mov
div
sub
xchg
test
in
out
imul
movb
inc
lds
call
jl
inc
mov
or
mov
xchg
insl
sbb
push
xlat
andl
or
mov
pop
test
ret
sub
idivb
insl
sbb
pop
jo
gs
fnstcw
push
pop
ffree
cli
jo
lea
movsb
daa
movsl
shrl
add
add
iret
and
pusha
mov
push
jge
mov
jb
pop
cli
dec
mov
into
mov
inc
aam
jg
cli
test
dec
inc
dec
jns
movsb
push
lea
ljmp
push
out
inc
out
out
xlat
xor
test
add
in
jae
push
adc
mov
test
sti
repz
sub
add
jne
cs
add
cmpsl
or
std
adc
cmp
les
xchg
pop
inc
add
cmpsb
or
add
fists
stos
mov
inc
aam
mov
mov
cmp
xor
jb
clc
jge
push
jmp
xchg
out
ds
call
scas
or
lods
push
rcrl
lea
test
sub
enter
pop
into
xchg
scas
or
adc
xchg
movsl
cmp
adc
scas
lret
lds
rcrb
add
mov
rcrl
movsl
fcmovnb
scas
mov
adc
out
sub
imul
add
leave
inc
imul
mov
popf
cmp
lcall
add
jge
push
enter
lods
xchg
rcll
pop
xor
scas
pop
xor
movsl
xchg
add
lock
rcr
inc
mov
shrl
fdivp
add
push
sbb
icebp
and
lahf
subl
aam
xor
push
jb
mov
ss
icebp
loop
push
pop
xor
insl
sbb
out
es
pop
inc
xchg
scas
push
mov
inc
jg
jnp
push
add
mov
xchg
mov
cmpsb
shrb
das
xchg
cmp
cmp
dec
orb
xchg
out
nop
ljmp
fisubrs
cmp
xor
aam
xor
sbb
jg
mov
aad
add
or
pusha
pop
pop
add
es
cld
jno
fildll
lahf
adc
mov
dec
mov
rorl
repnz
ja
fwait
aam
mov
das
jl
push
sub
in
insb
fsubrl
dec
lock
jnp
mov
mov
adc
push
std
insb
cmc
test
mov
push
fbstp
jl
push
mulb
das
rclb
jne
cltd
lret
in
fcompp
fwait
in
pop
cmpsb
xchg
cmp
xor
pop
sbb
stos
add
xor
cmp
jnp
jne
in
popf
jbe
insb
ret
add
roll
xchg
sbbb
mov
stos
add
or
adc
mov
dec
xor
sti
loope
daa
push
int3
pop
mov
pusha
pop
decb
sub
js
jae
xchg
inc
popf
pop
and
xchg
jnp
add
cmp
mov
or
loop
adc
divl
cld
hlt
cmp
or
xchg
cmp
inc
sub
shrb
nop
mov
jp
pushl
daa
mov
fbld
sub
jns
inc
aam
lret
daa
cmc
push
xor
mov
fnstsw
push
fstpt
lret
mov
out
imul
dec
nop
pop
inc
mov
adc
dec
inc
int
xchg
jmp
out
filds
daa
inc
cmpxchg
into
mov
dec
jle
sbb
stos
and
scas
in
pop
bound
push
das
ror
adc
pusha
mov
dec
pushf
in
mov
dec
mov
fs
scas
xor
cmp
xchg
and
loopne
shlb
mov
adc
test
cmp
cmp
sbbl
sub
ja
xchg
je
sti
jns
rorl
push
dec
mov
ss
in
cmp
fnstenv
in
hlt
mov
test
xor
addb
push
inc
sub
ret
out
jb
mov
push
loopne
dec
jae
xor
inc
mov
jle
cmp
jg
sar
xchg
loop
xchg
xchg
push
add
ret
xchg
jbe
and
cmp
inc
mov
pop
andb
lcall
fadd
mov
xor
jns
cltd
fadd
push
mov
or
pusha
add
cmp
push
inc
and
das
fcoml
adc
xchg
outsb
je
push
push
out
int3
mov
pop
mov
sbb
outsl
loop
in
adc
loope
in
fiadds
jecxz
sub
add
mov
sub
xchg
dec
push
mov
imul
mov
into
ja
jnp
enter
shlb
dec
inc
in
mov
ds
cld
int3
movsl
push
cmp
cltd
test
aam
andps
mov
push
insl
outsl
sub
adc
xchg
insb
imul
cmp
push
inc
jae
dec
pop
fwait
sbb
mov
sbbl
pop
dec
adc
inc
sbb
loop
add
lea
or
inc
dec
pop
inc
scas
add
sahf
push
das
loope
adc
cmpb
sbb
shll
dec
inc
int3
stc
aam
iret
in
stos
vhsubps
sub
jno
stos
sub
mov
fcompl
adcb
imul
scas
arpl
jnp
cmpsl
test
add
sub
pop
imulb
mov
notl
stos
mov
aas
adc
push
add
test
out
or
push
mov
pusha
and
pop
pop
out
shrl
sbb
xchg
mov
mov
mov
repnz
lahf
movsl
test
jb
xor
adcb
daa
imul
mulb
iret
or
mov
dec
inc
dec
nop
sub
or
pop
addr16
mov
mov
in
dec
or
mov
inc
divl
or
ds
sti
pop
stos
movsb
cs
data16
jnp
je
pop
xchg
sahf
insb
loope
mov
dec
stos
push
repnz
adc
jns
lret
pusha
in
scas
push
xchg
arpl
sarl
jns
pop
aaa
mov
pop
pop
dec
enter
cld
cmp
sub
in
xchg
push
in
and
fwait
test
stc
mov
inc
inc
fiaddl
fwait
sub
cmp
rcrb
pop
mov
fdivs
inc
cmp
xlat
repnz
ljmp
dec
callw
dec
dec
gs
inc
xor
jb
sub
pop
call
nop
add
jge
cltd
int
add
sub
mov
mov
push
jns
and
sbb
cs
push
sarb
bound
xchg
mov
push
into
or
and
mov
xchg
jb
fildll
scas
iret
bnd
out
fdiv
je
loopne
stos
out
jno
pop
out
cli
dec
ss
push
insl
dec
in
adc
and
pop
ret
lods
jmp
call
shll
dec
xchg
push
daa
sub
add
mov
sub
jg
repnz
xchg
sbb
jbe
push
pop
andb
movsl
lahf
jo
popa
xchg
loope
cmpb
aad
inc
adcb
aas
mov
scas
xlat
lock
dec
ja
mov
enter
and
push
std
cli
jno
jge
int
sub
movsl
daa
mov
cs
data16
dec
adc
mov
jecxz
sbb
in
mov
pop
jnp
mov
lods
int3
or
lock
inc
cli
fdivrs
xor
pop
clc
xor
pop
jo
sub
fsubrl
repnz
sbb
jmp
push
mov
mov
out
pop
add
inc
addr16
sti
ljmp
xor
call
push
or
test
push
add
repz
sbb
dec
push
cmpsl
inc
in
sbb
gs
inc
pushf
cltd
jo
imull
das
cld
aam
mov
xchg
sub
mov
mov
loop
and
or
push
lret
cmp
jl
jns
stos
mov
xchg
pop
adc
leave
dec
data16
dec
in
in
sbb
jb
jb
cltd
pop
fcoml
pop
push
imul
add
mov
out
jb
fisttps
es
and
lahf
push
stos
mov
jbe
cmp
mov
insl
or
insl
imul
jge
popf
adc
fstpt
fsub
mov
jno
inc
mov
test
jae
add
sub
jge
hlt
movsl
cld
ret
push
cwtl
sahf
pop
test
xchg
dec
sarb
dec
inc
sarl
andl
data16
sbb
test
outsb
insb
inc
stos
pop
xchg
movb
cmpsl
les
inc
xchg
cmpsl
jp
mov
jg
fdivl
jl
aam
cli
mov
sub
mov
fiadds
pop
push
movsb
lret
out
adc
mov
cmp
cmp
push
cmp
mov
xor
loope
add
xchg
dec
xor
add
pop
sub
inc
or
in
popf
xlat
imul
cwtl
jge
ljmp
push
rolb
iret
xchg
in
pop
dec
mov
data16
bound
pop
decl
xchg
mov
shlb
jbe
xor
mov
and
insl
push
push
cltd
out
cld
dec
add
es
cmp
push
pop
pop
jmp
pop
sub
dec
mov
and
pop
push
dec
mov
into
ljmp
jae
xchg
or
mov
xor
inc
sbb
lret
dec
out
int3
ds
lea
or
mov
inc
and
jbe
push
scas
shl
sbb
sahf
sbb
test
cmc
pop
clc
sub
loopne
adc
imul
mov
addr16
or
shrd
xchg
mov
jp
and
fsubs
cmp
xchg
bound
xchg
cmpl
jno
push
push
xchg
fnstcw
push
inc
stos
lret
sahf
dec
jmp
fbstp
push
popf
les
notl
jge
fcmovu
dec
in
mov
xchg
and
cmpsb
lods
mov
das
rol
jp
sbb
add
lods
in
pop
dec
jmp
xchg
inc
xchg
cli
sub
lea
push
leave
jge
mov
jb
add
and
into
and
subb
inc
scas
aad
mov
sbb
gs
or
push
mov
movsb
scas
and
inc
xor
popa
adc
cmp
pop
loopne
inc
add
jmp
and
aaa
ja
call
adc
sbbl
sub
and
loop
imul
adc
sub
or
mov
fists
subl
cld
xchg
pusha
mov
cmp
imul
icebp
mov
cmp
dec
xchg
jg
pop
push
jno
popf
push
pop
dec
inc
xlat
imull
pop
imul
pop
pop
xor
insb
filds
and
jmp
popf
jno
rolb
mov
addr16
dec
and
roll
popa
ficoml
mov
pusha
loop
fldl
inc
in
jno
xor
cwtl
push
push
bound
jnp
jmp
add
adc
dec
xchg
lret
mov
sarl
orb
jmp
imul
in
repnz
push
and
stos
cli
ljmp
sub
mov
push
rorl
pop
movsb
negl
jle
ret
dec
add
mov
inc
popf
sbb
sar
stos
lret
dec
ja
xchg
in
cmpsb
addb
daa
sahf
or
mov
pop
mov
inc
ss
xchg
hlt
cmp
gs
pusha
aam
adcb
xchg
rol
inc
int3
xchg
cmpsl
imul
insb
nop
mov
push
mov
ss
push
mov
jmp
pop
enter
inc
test
lods
gs
imulb
sub
rolb
dec
cli
xor
adc
mov
mov
cmp
in
push
test
mov
adc
scas
rcrl
aas
mov
push
movsl
jl
xlat
repnz
pusha
mov
iret
push
xor
push
mov
neg
jmp
fiaddl
inc
hlt
pop
dec
add
dec
mov
test
mov
cmp
sbb
hlt
shr
dec
sub
sub
idivl
inc
loop
cmpsb
mov
out
arpl
test
or
push
pop
imul
mov
mov
pop
pop
xor
aaa
mov
fdivrl
mov
mov
fwait
iret
push
mov
mov
jg
lret
cmp
sbb
or
mov
pop
lods
aaa
push
test
sbb
popf
adc
lret
fcmovu
lods
adc
mov
call
clc
lds
out
mov
out
inc
in
in
xor
mov
fnstsw
add
mov
pop
adc
outsw
adc
push
nop
pop
imul
cs
mov
inc
imulb
repnz
aaa
mov
jnp
dec
pop
mov
les
shll
fcmove
inc
outsl
movsl
mov
jecxz
xchg
sub
mov
in
cmp
adc
bnd
addl
and
and
aad
iret
or
inc
pushf
push
shrl
in
cmp
pop
fwait
xor
pop
dec
outsl
or
jle
loop
mov
adc
rol
push
add
or
into
or
pop
cmc
insl
lods
mov
cmp
in
add
stos
jno
jl
xchg
cmp
ss
lods
loopne
jne
rcll
loop
pop
int
fsubs
xor
repz
lahf
push
sub
cmp
and
es
xlat
popf
pop
data16
add
mov
sbb
mov
pop
fnsave
xchg
roll
add
push
dec
lea
inc
mov
and
push
pusha
out
loopne
mov
mov
mov
cltd
subb
cmp
sub
outsb
imul
aam
cmpsb
daa
aad
pop
in
sub
mov
push
test
mov
les
xchg
cmp
fstpl
cltd
inc
fdivrl
nop
pop
bswap
xchg
sbb
stos
mov
jno
aam
xchg
daa
jecxz
fildl
lret
push
fwait
into
pushf
rolb
call
into
jmp
loop
fcomi
popf
fisttpll
dec
scas
stos
lods
popf
sbb
scas
dec
out
mov
ret
push
xchg
jb
loopne
jno
inc
idivb
in
add
lods
unpckhps
mov
ds
test
insb
decb
movsb
xlat
aas
add
inc
pop
ds
pop
lds
cmp
ljmp
nop
faddl
mov
inc
je
outsb
sti
inc
in
cmp
cmpb
dec
rolb
push
outsl
mov
clc
fstpl
leave
in
mov
shll
cmp
bound
mov
xchg
xorb
jg
arpl
mov
xchg
test
clc
and
dec
mov
sbb
sub
mov
sti
dec
mov
js
cmp
pop
add
xor
mov
fnstsw
adc
aas
mov
xchg
jne
pop
push
ss
push
push
aad
nop
addr16
icebp
in
push
xchg
pop
js
sbb
xchg
ficomps
out
rcl
sbbb
pusha
dec
push
cmovge
and
inc
xchg
xchg
loopne
mov
dec
xchg
mov
and
cmp
push
int
mov
cltd
mov
stos
sbb
jp
popa
nop
add
or
fdivrs
fnstcw
shll
sbb
mov
jg
outsl
test
pop
mov
cmp
xchg
push
push
aaa
mov
fmuls
push
mov
lahf
dec
push
jae
clc
mov
push
cs
and
push
rcl
lock
sarl
xchg
aas
repz
cmp
out
push
out
aam
pop
or
inc
mov
out
mov
pop
xchg
stos
clc
jle
rep
ret
imul
cmp
in
call
cmpsb
lods
stc
push
sbb
push
sub
push
popl
jmp
and
sbb
jno
mov
cmp
cltd
mov
subl
daa
mov
add
lret
fwait
mulw
cmpsb
ss
and
outsb
xchg
movsl
in
adc
jp
or
xor
ds
rcrb
loope
cmc
push
in
les
fs
pushf
inc
popa
push
inc
in
push
stc
push
mov
aam
push
dec
fimull
jecxz
add
mov
pop
sbb
mov
iret
and
js
mov
cld
push
mov
cmp
push
out
cwtl
dec
fildl
les
adc
aaa
frstor
pop
repnz
mov
insb
or
imull
cmp
insb
push
add
mov
sbb
push
test
inc
fmulp
adc
decb
lds
jg
push
pop
cld
sbbl
push
dec
and
cwtl
in
or
lahf
mov
xor
ljmp
dec
daa
dec
imul
pop
mov
ret
hlt
mov
stos
fbstp
mov
pusha
xchg
test
pop
cwtl
and
movsl
loopne
jbe
dec
and
pop
adc
shrb
sub
in
mov
shll
push
pop
imul
ja
sub
cmp
ret
xor
and
cli
dec
addr16
hlt
repz
jl
sbb
mull
ja
xchg
sahf
inc
fists
lods
xchg
iret
sti
and
inc
mov
out
sub
inc
rolb
xchg
xor
mov
mov
add
sub
inc
and
popa
pop
mov
mov
test
ja
sbb
pushf
lcall
mov
insl
mov
pop
xor
xchg
dec
mov
data16
lods
dec
icebp
repz
jae
cld
add
push
mov
jmp
or
dec
cmp
lcall
lret
mov
sbb
cs
xor
popf
jp
pop
jecxz
ja
dec
mov
lods
cwtl
jmp
add
rcll
outsl
pop
xchg
sbb
xor
dec
in
insl
mov
mov
bnd
test
leave
leave
mov
cli
outsl
add
lcall
xor
adc
jo
fidivrl
jp
ds
incl
fstl
pop
inc
adcb
xchg
mov
clc
test
sarl
adc
jae
inc
mov
lahf
mov
add
and
adc
int3
xor
jg
shr
xor
cltd
sub
or
in
stos
mov
dec
push
fbld
jb
push
rcl
test
push
dec
arpl
aam
sub
jmp
repz
add
shll
aas
and
and
push
inc
push
decl
mov
dec
mov
xchg
sub
nop
mov
cmp
sub
and
imul
cmc
pop
test
adc
rcr
rcrb
mov
popa
bound
pop
cmc
cmp
sbbb
mov
test
mov
inc
filds
movsb
cwtl
add
call
notl
mov
out
jbe
mov
in
jb
aaa
or
cmc
dec
repz
sbb
xchg
pop
movsb
jb
and
push
xor
xchg
inc
jo
cmpsl
fstl
fbld
xchg
cmp
int
ljmp
pop
or
inc
in
jbe
imul
push
fmuls
sbb
sub
filds
mov
pop
sahf
in
jge
jle
fistl
sub
outsl
ja
subb
push
push
test
shrl
js
lock
sti
fisttpll
in
fiaddl
mov
sub
in
mov
xor
adc
add
xor
lret
and
pop
hlt
adc
pop
and
push
adc
lahf
movsb
fnstenv
lock
sbb
fdivs
xchg
faddp
and
jo
negb
lahf
pop
adc
fidivrl
lcall
xchg
test
loope
pusha
mov
leave
dec
pushf
cmpsl
loop
je
sbb
and
and
jg
loop,pn
mov
adc
lock
inc
divb
cmp
ret
sub
mov
mov
mov
cmp
ljmp
mul
js
lcall
jp
mov
pop
pop
rclb
or
inc
inc
pop
adc
cmpsl
aas
mov
inc
lea
adc
xor
test
insl
mov
std
rcrb
test
or
inc
pop
fisttpl
out
mov
pmaxsw
cmp
mov
je
popl
mov
fildl
mov
inc
fadd
jnp
test
xor
fbstp
add
push
clc
push
push
data16
or
adc
push
xor
xchg
xchg
lods
mov
bound
add
movb
test
fstpt
inc
jno,pt
mov
stc
xor
dec
not
or
aas
mov
jle
add
js
dec
inc
mov
fmuls
sub
push
loop
pop
test
inc
jo
fiaddl
ret
cwtl
imul
cmc
scas
nop
gs
aaa
push
jmp
cmp
daa
dec
ret
jnp
adc
fnstcw
mov
pushf
gs
fstps
pop
in
mov
dec
mov
lcall
popa
call
pop
nop
dec
jl
into
and
adc
mov
test
rcrb
pop
je
xchg
mov
sub
add
jne
mov
jg
fisubrl
sbb
ss
push
icebp
enter
out
stc
push
adc
imul
sti
pop
xor
xlat
push
cmp
push
mov
mov
inc
dec
notl
sub
add
roll
ljmp
dec
lret
lods
jno
dec
loopne
mov
shll
xchg
fldl
mov
mov
gs
dec
rolb
mov
test
mov
jbe
out
es
jns
mov
xchg
add
inc
and
enter
inc
add
test
movsb
push
jl
adcl
in
jecxz
shrb
xchg
sbb
push
jle
or
stc
sbb
or
filds
mov
sub
pop
xchg
add
pop
pusha
das
mov
jp
std
xor
or
mov
mov
push
cmc
cmpb
lds
pop
bswap
add
lcall
xor
outsl
push
lea
adc
and
mov
negb
mov
daa
lret
icebp
repnz
dec
in
adc
rorb
movb
xchg
sbb
ret
jge
aad
and
icebp
pop
shlb
sub
repnz
mov
jae
shll
imul
adc
mov
mov
lods
jno
das
or
in
dec
xchg
pop
jl
xchg
cmp
lock
scas
lods
and
test
jecxz
es
push
sub
stos
test
into
dec
sub
cmp
or
rcrb
fstl
mov
aam
mov
dec
lds
sub
ss
cmp
jl
into
pop
push
pushw
dec
test
insl
insl
fisttpll
jge
icebp
aam
aad
inc
sarb
pop
pusha
jns
jb
pop
sar
popa
loope
mov
icebp
jne
in
in
cmp
adc
movsb
xlat
jmp
jbe
imulb
frndint
push
lds
cli
jae
inc
push
or
scas
inc
adc
popa
add
and
fwait
mov
push
add
sbb
mov
pop
negl
aad
aaa
andb
in
andl
cmp
adc
test
scas
xor
enter
xchg
sbb
jmp
add
test
and
mov
fs
dec
das
scas
mov
sbb
push
or
add
mov
sbb
mov
mov
fiaddl
adc
mov
mov
inc
cli
lcall
movsl
or
cmp
pop
cmp
add
cmp
cltd
mov
mov
xor
int3
add
pop
sub
test
int
fsubr
add
hlt
fistpl
push
call
mov
movsl
dec
jne
ror
lock
gs
movsl
pop
mov
or
dec
mov
xchg
insl
mov
pop
incb
mov
mov
xchg
jno
cmpsb
test
test
repz
js
push
push
in
mov
rolb
movsb
in
lods
arpl
push
lahf
jo
pusha
jl
mov
jg
mov
adc
mov
gs
hlt
or
push
dec
cmc
mov
nop
lret
mov
adc
fdivs
jp
mov
cs
mov
lods
pusha
fildll
mov
adc
lcall
or
sub
add
adc
push
pop
inc
push
ljmp
mov
push
lret
cmc
pop
insb
inc
out
das
rcl
sbb
shlb
scas
mov
xor
cmp
int
dec
mov
andb
and
dec
stos
mov
jge
xor
movsb
cmc
rcrb
push
pop
xor
and
leave
xchg
cwtl
pop
icebp
jge
mov
pop
push
cmp
ds
jl
aad
add
fildll
cmp
dec
fsubs
xchg
mov
dec
mov
prefetcht1
mov
insl
movsb
in
loop
ja
mov
jno
mov
aad
bound
mov
pop
xchg
test
dec
mov
aad
jne
pushf
lret
fcmovnu
mov
stos
xor
cli
inc
jne
adc
in
push
xor
rdpmc
int
call
add
adc
orb
xor
cmp
addb
mov
repz
pushf
adc
pop
loop
push
out
and
lods
pop
les
addr16
cmp
push
stos
outsb
xchg
hlt
jbe
xlat
jecxz
adc
xor
and
stos
test
push
sub
loopne
push
cmpsl
mov
pop
xor
xor
ds
out
mov
orl
addr16
push
or
dec
mov
out
and
out
in
mov
adc
dec
lods
out
popf
jle
push
adc
ds
mov
fnstenv
push
jne
shll
movsl
or
and
pop
mov
rep
jmp
sub
int3
mov
jg
div
add
adc
ror
cmp
out
pop
jne
shll
lock
mov
jecxz
sbb
push
andl
sarl
xor
sub
pop
or
jne
dec
add
mov
sbb
loope
cld
aaa
push
syscall
lret
cli
cmp
loope
pop
or
jl
in
out
jg
cmp
dec
mov
int3
fnstsw
add
add
adc
sub
xchg
push
push
sub
inc
cmp
xlat
outsl
pop
aas
or
in
mov
xor
xchg
fs
aam
int3
repz
xchg
stos
nop
sub
mov
subps
lock
dec
dec
xchg
pop
pop
mov
xchg
mov
xchg
adc
sbb
in
fwait
in
cltd
add
repz
pop
lret
pop
push
adc
shlb
pop
out
stos
lods
pushf
xchg
jge
insl
adc
lods
xchg
jge
icebp
dec
imull
test
leave
cwtl
shr
pushf
stos
inc
mov
sbb
popl
inc
jno
incb
loop
push
arpl
cli
jmp
xor
push
mov
sub
das
fwait
push
push
outsb
ret
cs
jae
lret
rcrl
or
outsb
es
cwtl
jmp
sub
dec
lock
subl
push
dec
adc
stos
sbb
outsl
testb
pop
adc
inc
fwait
xor
adc
pop
inc
lret
sub
cmp
jl
sti
pop
cmpsl
pop
xor
jge
sbb
mov
xorl
pop
cltd
fucomi
xor
and
jno
mov
jbe
mov
and
mov
xacquire
cmp
inc
jno,pn
inc
fwait
pop
lods
outsl
push
pop
out
mov
fwait
ret
mov
jp
rcll
nop
mov
in
dec
or
call
mov
and
push
pop
dec
into
and
loope
orb
lds
inc
push
and
cmp
test
cmp
and
xchg
adc
and
pop
pop
cmp
nop
fwait
scas
insb
popa
sub
test
mov
outsl
das
testl
test
or
hlt
mov
sub
sub
imul
jmp
sub
out
mov
or
xor
int
aad
push
stos
stc
jmp
mov
add
cli
pop
stos
pop
aas
data16
test
push
inc
ljmp
add
jge
push
jecxz
test
shlb
pminsw
cmp
scas
imul
or
cmpsl
ja
icebp
xchg
sub
adcl
or
jl
xchg
pusha
jmp
push
ret
in
push
bound
stos
loope
mov
mov
es
ret
pop
repnz
push
mov
and
jns
mov
cmc
das
inc
push
fidivs
add
mov
ficoml
mov
rcr
repnz
cmp
fbstp
jb
in
push
add
ret
or
xchg
xchg
in
mov
int3
je
scas
ja
sbb
iret
pop
add
mov
stos
scas
out
lods
in
or
testb
jae
add
sub
pop
lds
mov
stos
sub
mov
daa
and
aas
out
loope
fstpl
insb
inc
add
xchg
loopne
mov
sbb
mov
lret
mov
inc
inc
sbb
pop
sbb
ds
jmp
hlt
es
xor
or
cwtl
mov
or
inc
ret
and
jno
sbb
and
gs
jecxz
ror
xor
cmp
shll
mov
fbld
std
rcrl
mov
or
ds
ja
and
pop
test
add
shll
js
lret
rolb
cmp
or
in
ror
aad
inc
cmpsl
cld
cld
pop
xchg
push
fnstenv
nop
aam
inc
sbb
iret
cld
sarl
cmp
cld
pop
sub
std
adc
lcall
jmp
push
int3
jnp
sub
mov
dec
adc
or
lock
pop
repz
push
mov
loope
mov
cmpsl
cmp
mov
mov
lods
pop
loop
sbb
lea
jo
pop
test
imul
sbb
rcrl
adc
cld
pop
jnp
or
outsb
aad
or
inc
mov
aas
stc
ucomiss
ds
neg
sti
inc
nop
sub
das
arpl
push
or
xchg
push
loopne
adc
int
sbb
lds
and
pushf
jmp
pop
lcall
mull
xchg
loopne
dec
add
jle
sub
mov
jecxz
sbbb
leave
mov
test
rorb
scas
push
stc
insb
aaa
xchg
loop
mov
ds
mov
mov
jmp
lcall
stc
fwait
lahf
jmp
cltd
mov
sbb
fisubs
mov
inc
ljmp
xchg
xor
ss
outsl
js
in
imul
add
mov
add
and
in
push
dec
je
dec
push
shrb
cs
jnp
mov
inc
leave
and
cmc
testb
jb
ret
xchg
in
clc
dec
push
jmp
add
cs
clc
lods
xlat
aad
daa
and
xor
ficomps
jne
adc
xchg
xchg
lea
ds
jae
sbb
add
jge
shl
add
xor
test
mov
inc
rcr
nop
gs
pop
push
and
dec
adc
mov
icebp
jg
mov
imul
in
hlt
out
sub
jno
sbb
mov
dec
out
or
mov
xor
enter
rcll
push
fnstsw
loop
mov
adc
mov
ss
push
sbb
sub
or
push
sub
and
aaa
iret
sbb
out
cs
rolb
sbb
sbb
jns
aaa
cwtl
mov
rorb
jl
ds
push
enter
mov
cmp
or
mov
mov
adc
fisubl
ficoms
pushf
cli
ja
imul
xchg
push
mov
add
mov
nop
hlt
out
dec
mov
push
in
in
add
jp
stos
in
jne
cld
and
push
or
stos
sbb
inc
mov
push
divl
or
pop
mov
orl
mov
outsl
outsl
push
mov
lret
push
sub
ss
lret
orl
jns
push
stos
sbb
nop
adcb
inc
popa
test
aam
mov
movsb
fwait
or
jns
fdivr
pop
sub
mov
repnz
out
pushf
les
dec
sub
stc
xor
loop
call
push
movsb
cmpsl
xchg
sbb
xor
mov
popf
lds
jnp
lcall
js
je
mov
aas
lret
fs
or
in
adc
sub
test
jecxz
cmpsl
sarl
je
ss
dec
dec
adc
inc
or
sub
ja
cmp
inc
imul
cmpsl
mov
push
loop
cwtl
sub
insl
test
xor
mov
xchg
adc
int3
mov
test
aas
inc
movups
leave
pop
mov
pop
insl
div
dec
sarl
cmp
jp
pop
repnz
int3
pop
push
jbe
movsl
mov
movsl
in
popf
daa
pop
xchg
rcll
add
js
test
sti
mov
divl
or
inc
aaa
daa
pop
enter
sub
cmp
mov
scas
push
into
fbld
pop
enter
icebp
sbb
in
inc
mov
mov
addb
adc
inc
xchg
inc
inc
mov
stc
ds
cmp
push
iret
push
aas
stos
ss
popf
pop
mov
inc
mov
mov
sbbb
filds
jbe
or
mov
pop
outsb
into
ljmp
decb
and
mov
sub
inc
mov
xchg
fisubl
das
cmpsb
xchg
sub
mov
mov
in
fisttps
and
dec
decb
ret
pushl
stc
iret
scas
fisubl
sbb
adc
pop
push
xchg
paddq
dec
sub
loopne
adc
mov
ja
fadd
sbb
movsb
or
xchg
push
xor
pop
xchg
test
jb
out
mov
pop
sbb
fidivl
ficoms
pop
bound
sbb
add
jecxz
mov
sub
fisubs
rcrb
mov
xchg
inc
cmc
inc
jmp
pop
movsl
xor
popa
aas
pop
js
mov
aas
cmp
pop
jg
lret
mov
xchg
sub
popa
and
iret
mov
mov
adc
mov
pop
cmp
lods
xchg
sub
adc
cmp
repnz
sbb
int3
int
xor
and
add
arpl
mov
arpl
into
mov
int
mov
sbb
leave
in
or
sub
lret
mov
loop
int
add
inc
fildl
add
int
pop
cmp
daa
xor
or
aam
cmc
test
or
mov
fisttpll
mov
loope
test
jne
aam
pop
lods
sub
sbb
movsl
inc
cld
cmpsb
aad
jg
outsl
call
movsl
inc
movsl
push
pop
mov
and
sarb
fildll
mov
mov
int3
cmp
mov
fs
mov
das
gs
push
xlat
repnz
inc
add
fcompl
inc
and
repz
sub
and
scas
or
in
and
imul
add
or
mov
cs
mov
xchg
push
in
ja
shll
jecxz
fwait
cld
mov
adc
pop
hlt
enter
mov
repnz
xchg
loope
dec
cmp
sbb
xor
mov
or
jle
bound
movsb
sbb
or
or
cld
mov
mov
ds
adc
mov
insb
sub
dec
data16
insb
mov
faddl
pop
push
jge
data16
iret
lods
inc
ljmp
jecxz
and
xchg
pushf
test
outsb
push
pop
dec
cltd
or
sbb
jb
xor
sbb
cs
adc
mov
leave
jnp
data16
inc
arpl
sti
loope
out
sbb
test
and
ja
clc
xchg
sbb
pop
ss
pop
xlat
mov
and
pop
fs
imul
mov
rcr
mov
ret
xchg
repz
imul
popf
mov
cmpsb
mov
movsb
adc
rclb
cltd
inc
insl
jno
test
sbb
push
xor
gs
push
dec
outsb
loop
icebp
mov
add
push
dec
jbe
lret
cmp
sub
cltd
mov
mov
rclb
jbe
pop
lods
mov
popa
popf
push
lahf
push
jo
aas
xlat
stc
pop
jle
mov
and
cmpsl
mov
lea
xchg
daa
add
outsl
jns
divl
xchg
mov
mov
in
sahf
xor
sbb
repz
add
clc
ljmp
es
pop
jno
stos
xor
xor
cmpl
repnz
jne
je
xchg
cmp
dec
lods
cmp
hlt
push
push
pop
pop
and
loop
das
push
jl
enter
dec
xchg
cmp
stos
mov
cmp
mov
push
cld
jae
mov
cld
jecxz
pop
insb
int
add
insl
fwait
or
in
mov
leave
cli
push
push
or
xchg
sub
ret
scas
outsb
jo
mov
mov
xchg
xchg
fisttps
xchg
std
mov
shr
add
enter
hlt
and
es
outsb
xchg
sarl
cmp
std
cmpsb
mov
jg
aaa
cmp
cmpsb
push
cmp
sub
sarl
sbb
negb
in
outsb
xor
arpl
arpl
inc
test
mov
mov
jp
lahf
lods
mov
pop
fadds
stos
lahf
adc
xor
loopne
fidivrl
hlt
int3
add
cmpsl
pop
cmpsl
xor
xlat
sbb
loop
aas
cltd
adc
fs
fwait
js
sub
push
ret
lock
adc
cmp
sbb
test
gs
and
add
push
mov
dec
pop
sbb
out
jle
lock
js
dec
xor
sbbl
out
sbb
inc
push
xor
cmp
and
icebp
cld
sbb
fldl
sbb
mov
addb
jmp
aam
out
mov
icebp
or
sti
and
data16
cmp
sub
mov
push
pop
lds
repz
inc
mov
mov
icebp
pop
add
dec
jg
outsb
scas
inc
push
ret
mov
arpl
jl
pop
and
mov
mov
pop
push
cmp
push
mov
push
mov
lds
push
outsb
in
icebp
bound
repz
lret
fcomip
in
ss
movsb
enter
jb
mov
filds
rcr
or
ljmp
mov
and
pop
gs
ja
sahf
push
dec
mov
sub
dec
ss
stc
add
add
int3
jmp
pop
enter
sub
shl
push
ja
pop
scas
push
lods
sahf
mov
push
out
push
sbb
lds
enter
xchg
bound
sahf
insb
jge
and
enter
sub
in
push
or
sbb
push
dec
test
lret
sub
dec
scas
stos
cmp
add
call
in
pop
lahf
outsb
mov
leave
sub
repz
jl
out
test
lock
sub
cmp
in
popf
lret
popa
dec
orw
ret
idiv
and
xchg
bnd
push
sbb
adc
dec
push
ss
sti
dec
iret
push
cmp
cltd
std
fldenv
pop
loop
xlat
adc
mov
fldl
sbb
ret
sbb
std
dec
dec
imul
sarb
mov
ja
pop
sub
mov
clc
lret
enter
sub
adc
outsl
dec
cmc
icebp
mov
enter
or
sbb
rcrl
ss
out
dec
pop
stc
cmp
icebp
push
out
jmp
repz
cmp
popa
sub
out
cmp
fidivrl
aam
dec
jl
enter
mov
repz
xor
xchg
lcall
xchg
push
js
sahf
test
jecxz
xor
dec
mov
xchg
out
filds
sbb
and
pushf
fwait
cmp
loop
mov
xor
and
insl
fsts
jmp
fcomps
jmp
imul
or
adc
mov
mov
daa
sub
loop
lcall
mov
cmpsl
in
push
jbe
inc
cmpsl
test
pop
pop
in
pushf
sbb
dec
ss
sbb
adc
and
mov
add
sarl
add
leave
nop
mov
insb
testl
lods
cmpsb
or
xor
out
xor
fcomps
lods
ja
repz
stos
pop
sbbb
inc
push
pop
int
mov
inc
imul
dec
adc
sbb
adc
and
cmp
into
or
sbb
push
mov
push
xorb
ret
test
scas
xor
cmp
ss
aaa
push
movsb
push
xlat
inc
cmp
ror
jns
lahf
fstl
out
loop
std
or
mov
and
repnz
sbb
in
stc
jg
jg
add
xchg
lret
push
pop
ja
push
sub
cmp
shl
icebp
in
jno
mov
aas
push
and
subl
xor
daa
pop
jne
loopne
dec
dec
jmp
xchg
xchg
or
pop
nop
test
sahf
call
jo
mov
bound
dec
divb
cmp
jne
lds
mov
sub
testl
cli
dec
push
pop
and
sbb
pop
insl
sub
inc
es
loop
js
sub
jno
nop
mov
movsb
mov
test
sahf
and
imul
divl
jb
mov
adc
insl
fs
and
sbb
pusha
add
int
scas
sbb
stc
mov
enter
sbb
sub
jne
push
scas
jecxz
out
fwait
mov
fwait
mov
or
icebp
ret
fcoml
xor
or
in
pop
mov
pop
push
lcall
repz
mov
lods
jle
mov
push
test
and
xor
adcb
sbb
or
or
int
dec
xor
jp
dec
fnsave
data16
adc
nop
xor
pop
adc
idivl
inc
inc
stc
or
push
lock
jb
and
push
lods
aad
cmpb
sub
xchg
pop
add
js
test
mov
jnp
int3
adc
mov
hlt
dec
je
mov
xchg
roll
fmuls
jge
jmp
or
in
xchg
movsb
inc
push
lods
inc
jb
sub
pusha
jle
stc
rorb
xor
dec
cmc
jmp
xchg
push
xchg
jl
push
cmp
xor
pop
jne
lods
sbb
jp
sub
lods
jge
or
ror
dec
daa
mov
dec
dec
cmp
cmp
insl
aaa
xor
cli
dec
insl
cwtl
insl
mov
mov
mov
or
or
mov
inc
xor
lods
out
push
movsl
jge
jbe
jns
lar
pop
loope
movsl
dec
ret
cmc
xor
dec
inc
aad
insl
ljmp
and
inc
pusha
jmp
das
jge
cltd
jb
lcall
push
push
insl
dec
out
mov
popa
leave
cld
test
gs
ds
stos
mov
jno
cmp
out
out
and
pushf
or
or
xor
enter
push
mov
inc
xchg
addr16
icebp
test
pop
sbb
xchg
gs
inc
mov
out
jae
lds
jne
and
dec
adc
jmp
rolb
popa
inc
mov
or
xor
sub
ljmp
dec
imul
test
loope
mov
cmpsb
clc
inc
cli
add
mov
jecxz
xchg
mov
cmpsb
outsl
aam
push
bnd
mov
sbb
in
cmovl
fucom
scas
push
fstps
mov
or
sbb
scas
jo
pop
inc
stc
stc
loopne
inc
loope
sub
mov
and
jns
mov
push
xchg
in
divb
xchg
push
mov
ficompl
sub
mov
or
mov
imul
push
xor
mov
jno
mov
pop
jg
movsb
pop
fldl
add
add
dec
or
movsl
xor
ljmp
fisubrl
fs
mov
fwait
mov
dec
test
push
push
xor
pop
es
shll
jno
ret
jge
cwtl
mov
xor
jmp
add
inc
loopne
sbbl
cmp
iret
push
bound
rcl
pop
inc
aas
ret
lcall
fnstsw
scas
adc
pop
lret
pop
jno
and
pushf
shl
mov
loop
mov
lcall
lahf
frstor
cmp
jle
cltd
mov
int
pop
movsb
dec
add
in
aaa
js
fmulp
sarl
sbb
jmp
pop
mov
mov
je
andl
popf
push
pop
outsb
inc
cmp
pop
push
cwtl
jns
and
shll
lods
aaa
fcoms
dec
in
mov
hlt
stos
pop
pop
pop
popf
data16
cwtl
xchg
cmp
xchg
mov
shll
into
out
xor
dec
xchg
sbb
mov
adcb
xchg
cli
inc
xor
rorb
mov
cmp
imul
mov
cmp
mov
pop
sarl
jno
repnz
xchg
cmp
xchg
sbb
mov
fsubrs
in
fwait
loop
inc
cmpsb
mov
lret
bound
cwtl
push
es
pop
iret
ljmp
jns
popf
js
xor
or
ss
fcos
scas
outsl
stos
push
pop
sub
xchg
push
sbb
mov
mulb
xchg
jmp
cmc
mov
sbb
adcb
ret
pop
jo
cmpsl
and
ds
mov
int3
dec
xor
ja
mov
pop
rorb
or
and
mov
xor
outsl
in
outsl
xcrypt-ofb
cmpsl
ljmp
mov
add
std
rclb
dec
mov
cmp
and
imul
push
sub
sbb
push
cmp
lods
lds
cmpsb
icebp
jle
outsb
add
lea
and
sbb
lods
mov
mov
xchg
or
xor
shll
jb
xor
aad
cmp
pop
mov
pop
xchg
bound
adc
loopne
sbb
cld
fistpll
and
nop
jl
pop
popa
test
and
mov
scas
loopne
mov
movsl
adc
inc
adc
les
into
adc
lret
pop
arpl
adc
not
cli
sub
xchg
stos
mov
jne
xorb
stos
sbb
bound
xchg
mov
jg
lret
loopne
frstor
rclb
mov
jbe
push
movsb
pop
xchg
or
mov
movhps
xchg
movsb
out
or
leave
dec
add
std
push
mov
jno
std
sbbb
jae
inc
or
pop
cs
inc
push
push
and
adc
leave
mov
fs
jmp
lods
xchg
add
jge
add
addr16
movsb
dec
cmp
test
out
mov
lcall
sahf
or
mov
add
iret
out
xchg
pop
out
inc
lcall
aaa
insl
mov
imul
pop
xor
dec
out
adc
jecxz
sbb
adc
leave
pop
push
and
dec
cmp
push
dec
lods
xor
dec
mov
xchg
add
push
roll
into
push
adc
add
rorb
mov
xchg
insb
insb
adc
xchg
lcall
in
stos
cmp
insl
xchg
push
cmp
push
pop
sub
sbb
and
push
push
pop
push
inc
and
mov
jmp
sbb
sub
repz
lods
divl
jno
mov
mov
jmp
mov
scas
pop
sbb
pop
fidivs
test
insb
inc
test
inc
test
pop
push
sbb
lret
out
xor
dec
nop
lret
add
jno
inc
mov
les
inc
mov
add
imul
movsb
in
enter
mov
pop
je
jp
push
aam
insb
sub
push
into
xor
inc
cmp
lds
jo
fisttps
sahf
and
xchg
lcall
pop
mov
fsubl
andl
pop
mov
cmp
mov
mov
pop
insl
shrb
daa
cwtl
cltd
dec
mov
xchg
sub
mov
addr16
xchg
data16
mov
out
clc
mov
sub
add
cld
fnstenv
xchg
sbb
lock
sbb
mov
sbb
pop
iret
inc
cmp
loopne
mov
rcl
pusha
fsubs
cmp
mov
insb
add
pop
push
dec
push
out
pop
push
push
fisttpl
push
adc
fxch
xchg
lret
loope
pop
add
popa
xchg
lret
stos
ds
inc
nopl
pop
jmp
inc
lods
ss
pop
sub
dec
cmc
push
lock
mov
pop
out
lret
mov
addr16
xchg
mov
push
lods
xchg
loopne
inc
or
lcall
adc
xor
sub
aaa
mov
mov
test
push
js
adc
cmpl
sbb
imul
and
mov
ficomps
cwtl
pop
mov
cmp
mov
imul
lock
sub
jge
lcall
adc
xor
xchg
xor
addb
sub
and
xchg
mov
inc
push
mov
mov
or
push
xchg
add
scas
push
adc
mov
push
aas
sti
mov
movsl
mov
add
test
jl
fcomi
inc
or
push
mov
mov
or
lahf
sub
cmp
in
mov
lock
addr16
dec
dec
push
test
mov
dec
stos
xchg
dec
in
enter
mov
xor
mov
sub
mov
sbb
inc
cmp
in
stos
push
xchg
jmp
hlt
sahf
sbb
xchg
inc
loopne
test
push
in
enter
sbb
ret
sub
enter
and
aaa
push
xor
dec
jmp
shll
gs
push
prefetch
lods
jne
jbe
dec
out
cmpsl
mov
cmp
pop
add
test
lock
repnz
pop
je
push
movl
xor
sarb
push
sbb
jne
dec
fldt
faddp
xchg
out
dec
jne
jbe
xor
inc
stos
test
addb
cmp
inc
mov
dec
mov
mov
scas
mov
add
jne
aas
jg
xchg
popf
movsb
xchg
inc
cmp
data16
jecxz
sbbb
inc
jl
lods
lret
pop
jns
enter
cli
push
sub
inc
inc
jae
aad
cmp
aas
shld
mov
and
cmc
insb
mov
pop
push
scas
fdivr
xchg
rorl
dec
push
inc
popa
fstps
mov
int3
mov
jae
push
mov
das
mov
adc
adc
ret
sahf
lds
out
ja
sbb
xchg
mov
test
std
out
xchg
cmp
aaa
loopne
prefetch
mov
imul
cmpsl
lds
xchg
mov
jmp
adc
fsubl
iret
in
push
sub
lret
mov
cli
push
es
mov
aaa
jp
add
ret
jbe
je
jmp
out
repnz
cmp
jmp
and
lds
xchg
in
std
mov
dec
xchg
js
in
gs
lahf
sub
cmpl
fmull
xchg
addl
cmp
mov
es
xchg
mov
jno
jno
out
and
inc
cmp
push
fdivr
pop
divl
jo
pop
mov
iret
xchg
or
or
into
lahf
movsb
out
jae
movsb
jnp
jns
add
cmpsl
addr16
xor
sbb
insb
pusha
jl
xor
adc
add
push
jmp
jp
pop
sbb
decb
push
imul
dec
hlt
jne
test
sub
sub
enter
popf
lcall
mov
and
movsb
cli
lret
dec
outsb
insb
add
and
sub
xchg
pop
arpl
and
ljmp
test
jg
jb
push
and
adc
cmp
lea
adc
scas
and
jp
add
jne
pop
dec
sbb
sbb
ljmp
push
push
hlt
xor
sahf
and
test
xchg
xchg
scas
xor
stc
push
push
mov
mov
cmp
les
add
mov
nop
xlat
xchg
cmpsb
or
pop
aam
call
scas
lock
lahf
aad
cmc
sbb
hlt
pop
mov
xchg
test
fmuls
xchg
or
sub
mov
cmpsb
addr16
dec
xlat
movsb
mov
stc
lcall
insb
ficomps
fidivl
inc
movsl
jg
aad
cmp
inc
xchg
ss
insl
in
in
cmp
adc
mov
mov
test
int3
and
mov
push
cwtl
out
addr16
push
imul
mov
xor
icebp
addr16
cmp
pop
lods
and
shlb
sbb
dec
push
jl
cmpsl
es
dec
and
andl
loopne
pop
dec
clc
sub
push
ret
adc
cmp
sbb
cld
and
cli
dec
push
fcmovnb
fwait
inc
xchg
fdiv
out
icebp
fcoms
xor
inc
hlt
imul
xor
test
pop
lods
dec
xchg
lsl
or
adc
cmp
lahf
jecxz
arpl
push
popa
inc
rorb
push
mov
lret
test
les
ds
inc
mov
mov
in
xchg
pop
je
aad
movl
pop
pusha
inc
rcl
fnsave
jecxz
pop
mov
push
fsubrl
and
data16
or
in
test
out
pop
dec
out
mov
popa
sub
mov
arpl
aad
mov
sbb
pop
pop
add
cwtl
repnz
imul
cs
pop
mov
decb
cmp
and
jl
add
arpl
push
xor
cmp
push
xor
fidivrs
push
cmpsl
sbb
js
das
into
stos
shrl
fidivs
out
sbb
xor
mov
xor
leave
push
or
pop
cld
dec
outsb
push
pop
incl
jge
in
insb
cwtl
iret
scas
aaa
repz
mov
outsb
sub
or
pop
cmpsl
ret
mov
mov
faddl
insb
push
xorl
out
inc
jno
outsb
fdiv
fsubl
imul
scas
cs
pop
pop
xor
pop
aaa
test
dec
ret
stc
aam
stos
jbe
ror
jmp
lret
out
call
mov
mov
pop
sub
fsubrp
incb
jmp
mov
scas
test
jg
dec
out
bound
jbe
mov
push
mov
popa
pop
movsb
jnp
mov
out
mov
mov
add
test
clc
pop
adc
add
jno
jecxz
int3
hlt
add
mov
rolb
out
inc
lock
xchg
mov
test
mov
dec
sti
sub
push
cltd
popa
jns
sahf
aad
iret
inc
sub
imul
mov
inc
scas
in
push
pusha
jnp
mov
add
cmc
cmp
sbb
mov
xchg
adc
xchg
sub
daa
mov
out
xor
aaa
mov
mov
in
add
inc
sbb
push
ja
xchg
in
movsb
les
clc
add
jnp
add
mov
xchg
jge
out
fdivrs
or
fwait
or
cmp
mov
mov
repz
insl
aas
sub
xor
out
pushf
push
mov
lods
aaa
add
into
mov
push
dec
mov
cli
xchg
mov
push
rcrl
imul
or
mov
mov
inc
push
stos
popf
sub
test
ljmp
daa
xchg
adcl
das
mov
test
mov
sarb
dec
leave
into
sbbb
mov
imul
sub
dec
mov
cmp
dec
jg
mov
fwait
or
mov
jp
cltd
xorb
pop
sub
pop
push
sti
int3
xchg
mov
jne
mov
insb
cld
arpl
popf
scas
sbb
jae
out
push
push
or
lcall
aad
inc
loop
insb
jmp
cwtl
mov
cltd
cmc
out
or
in
sbb
test
and
add
mov
out
cmpsb
stc
mov
xchg
adc
push
push
outsb
in
mov
fmul
test
jne
rorb
mov
lds
xchg
xchg
in
push
pop
jo
mov
pop
in
mov
jns
mov
notb
cmpsl
fwait
cltd
pop
ja
xor
mov
out
aad
loopne
xor
or
das
pop
test
fistl
ret
sbb
aad
in
or
sub
fcomip
jo
xor
decl
fabs
fldl
ljmp
adc
pop
pop
aas
jae
pop
sub
dec
mov
aas
add
movsl
call
push
mov
std
xlat
repz
scas
aad
xlat
jns
into
pop
ret
add
dec
fisttpll
push
roll
mov
mov
cmpsl
xor
sub
sbb
jno
insl
bound
fucomip
pop
cmpsb
adc
sub
mov
ret
pushf
ljmp
jp
jbe
in
fimuls
daa
jae
das
jle
sbb
adc
fcom
xchg
adc
xor
xor
mov
rcrl
dec
les
aaa
stc
xor
int3
ss
sub
push
push
imul
jae
xchg
and
add
mov
clc
aas
or
cmp
lea
push
or
jle
les
cwtl
arpl
mov
ljmp
push
fisttps
push
mov
push
xchg
or
dec
lods
into
sub
fmul
sbb
dec
mov
gs
subb
fst
in
loope
jb
dec
adc
lcall
por
test
pop
or
mov
mov
test
adc
loopne
pushf
or
inc
push
aam
jg
sbb
cwtl
aas
or
push
xlat
das
sbb
and
bound
shll
mov
jge
adc
loopne
test
imul
jmp
xlat
mull
mov
dec
xchg
subb
mov
push
pushf
je
xlat
popa
shl
dec
ljmp
test
fidivl
cmp
cmp
jbe
jecxz
sbb
int
add
frstor
push
pop
rorl
mov
xor
push
lods
popf
sbb
test
subl
outsb
xor
or
sub
out
iret
bound
pop
iret
sub
ss
bound
ds
movsb
in
gs
jl
in
daa
xchg
xchg
sarb
dec
into
dec
data16
leave
jge
mov
notl
xchg
mov
pop
push
pop
cltd
subb
cld
adc
in
fucomp
subl
outsb
mov
repz
popa
out
and
push
scas
scas
jmp
call
mov
inc
std
js
jmp
sbb
mov
mov
inc
std
xchg
mov
add
jecxz
sarb
lret
lods
mov
adc
cld
jbe
dec
jb
stos
cmp
xchg
cmp
add
rclb
aas
push
movsb
or
ficomps
pop
mov
gs
sub
rcll
cwtl
mov
push
jmp
rorl
sbb
lods
mov
cmp
aad
pop
cmp
xor
dec
inc
das
lods
rcl
cmc
ret
add
faddl
jge
adc
pop
sub
jp
sti
clc
lods
mov
sti
orb
outsl
lcall
aaa
xchg
loop
adc
jl
icebp
jns
outsb
mov
or
mov
pop
shrl
popl
popa
into
sub
ret
mov
inc
mov
rcrl
mov
cmp
or
in
jne
lods
loopne
aas
lahf
cs
dec
stc
out
lcall
xchg
jae
lret
lds
shl
popf
sub
adc
cs
test
pop
cmp
jp
cmp
cmpsl
es
cltd
repnz
sub
jecxz
sub
pop
lcall
pop
mov
mov
cli
mov
jl
add
shl
mov
sub
nop
dec
clc
pop
cli
push
cs
adc
jp
call
enter
aam
cmpsl
xchg
leave
jno
or
clc
mov
ljmp
mov
int3
fs
lret
add
out
ss
mov
cmp
xor
cwtl
sahf
jno
pop
in
xor
jle
faddp
pushl
rorb
mov
cmp
xchg
gs
aas
cli
aas
and
mov
cmp
ret
pop
cwtl
xchg
ja
arpl
stc
mov
push
add
add
mov
push
aas
repz
dec
cmp
or
repz
lods
cmp
xchg
pop
cmp
fsts
or
rep
cld
sbb
mov
cltd
jo
mov
les
sti
xchg
jg
cmp
stos
or
push
sub
cmpsl
in
inc
clc
sub
or
lret
leave
push
inc
popa
cmp
nop
dec
arpl
push
mov
mov
mov
or
push
pop
and
out
push
adc
ret
ljmp
mov
add
cli
cmp
cltd
movsb
jo
scas
lods
dec
dec
jge
jmp
xchg
adc
pop
in
adc
jb
add
icebp
dec
insl
mov
les
cmpl
xor
sahf
cmp
xchg
es
fdivs
fnstenv
les
int
xchg
int
loopne
mov
push
mov
fcomps
shll
cs
cmp
hlt
jle
xor
jb
andl
xchg
xchg
jne
sub
mov
shrl
mov
push
mov
and
jb
lret
push
adc
testl
lahf
roll
lock
push
mov
outsb
push
cltd
filds
shl
mov
mov
sahf
fsubrl
push
sbb
test
sub
leave
nop
les
sbb
imul
pusha
out
shlb
lods
in
movsl
sbb
arpl
xchg
mov
rclb
ficompl
sahf
hlt
jp
push
adc
jmp
xchg
popa
sbb
cli
adc
xorb
leave
repz
push
add
out
jp
mov
or
sbb
add
incl
cld
jne
and
lret
adc
mov
es
aam
and
sub
je
inc
xor
fbstp
dec
inc
jae
test
cmp
lds
xor
test
hlt
repz
fs
enter
aaa
xor
pop
clflush
leave
daa
insb
std
mov
lods
lcall
ss
xchg
std
jecxz
shl
test
icebp
ljmp
and
mov
push
mov
fisttpll
push
or
repnz
das
mov
push
xlat
into
scas
jbe
dec
test
add
jp
div
outsl
aas
ficoms
mov
aam
sahf
sbb
inc
jmp
pop
aas
xor
ja
pop
leave
cli
and
push
adc
pop
leave
mov
je
xlat
out
jbe
imul
adc
jae
iret
xor
push
mull
sbbb
pop
or
or
sub
lock
cmp
lret
call
aaa
sahf
in
dec
pop
stos
shlb
inc
in
push
dec
js
push
mov
sbb
xor
or
mov
mov
cli
orl
adc
mov
xorl
pop
pop
fidivs
add
jne
lock
in
adc
mov
push
aam
dec
fmull
cmp
cmpsl
sub
mov
loop
mov
loope
fnstsw
xchg
fnsave
iret
sti
mov
inc
push
dec
cli
pop
adc
pop
in
mov
icebp
mov
and
fmull
call
mov
add
rcrb
jl
pop
add
push
push
mov
bound
dec
jbe
inc
cwtl
mov
sbb
not
dec
pop
pop
mov
push
icebp
push
adc
in
movsb
int
insl
repnz
arpl
mov
mov
repnz
xor
js
xchg
adc
outsb
mov
lea
or
inc
lret
xor
jno
jle
adc
stos
lods
mov
es
jae
dec
mov
dec
ds
xchg
xorl
lret
movq
and
cmp
inc
fiadds
push
fdivrs
fcomp
pextrw
xor
add
in
ret
and
mov
sbb
hlt
aad
mov
or
push
mov
scas
mov
lret
xchg
in
mov
or
nop
mov
lods
xchg
imul
mov
cmp
inc
out
sahf
push
xor
ja
inc
mov
add
fsubrs
adc
cmc
cs
mov
repnz
push
add
inc
cmp
dec
pushf
mov
add
jge
pop
pop
pop
ffree
add
add
les
mov
add
aad
popf
cmpsl
jp
jne,pt
mov
dec
push
and
ljmp
jge
mov
fiaddl
stos
out
repz
xor
movntq
out
loopne
dec
leave
pusha
sahf
iret
lea
push
cmpb
mov
mov
xchg
aaa
push
inc
bound
iret
mov
add
fistl
cmp
aas
push
jbe
or
cs
cmp
xor
shlb
sbb
inc
mov
daa
jns
add
rcrl
movsb
inc
jns
adc
in
rorl
ret
inc
dec
xor
popl
pusha
dec
shll
sarl
insb
jnp
orl
ret
jp
sub
sbb
cmp
inc
scas
cmpsb
push
es
fisubl
popf
cli
adc
in
xorb
cmp
xchg
pop
dec
iret
es
nop
push
roll
and
mov
cs
call
inc
in
inc
fdivl
call
enter
outsl
rorb
lea
fimuls
dec
pop
imul
and
nop
iret
jae
cmp
jno
js
je
clc
mov
sbb
adc
push
aaa
rorl
and
call
insl
mov
gs
dec
subb
pop
lock
mov
das
adc
add
mov
and
sbb
je
xor
fidivrl
gs
sbb
xor
dec
xchg
pop
cs
stos
push
cld
repnz
std
mov
rcr
jp
cmp
dec
xor
jl
jns
xchg
dec
adc
inc
movsl
inc
or
xchg
xor
xor
xchg
cmp
adc
dec
cmp
out
jg
fstpl
pop
inc
lds
insb
dec
mov
jl
pop
pop
scas
outsl
adc
push
jg
into
popf
cmp
jns
jbe
lods
das
orb
gs
inc
xchg
mov
sbb
xchg
aaa
mov
stos
jge
cmp
rcll
sarl
scas
cmp
push
dec
push
imul
push
jge
pushw
popf
je
mov
clc
dec
cmp
shll
test
push
rcrl
mov
inc
lock
mov
xchg
test
scas
cmp
in
outsb
mov
rcrb
mov
cwtl
adcl
je
mov
add
push
mov
mov
xchg
push
push
lcall
mov
sbb
into
and
push
mov
in
repz
push
adc
push
addr16
dec
insl
lahf
lret
inc
mov
xor
fs
xchg
ja
xchg
into
or
sub
je
add
in
inc
mov
adc
pop
cmp
inc
add
out
outsl
sbb
xor
aad
xor
xchg
and
jno
xlat
sbb
aad
in
jge
insb
jge
subb
mov
mov
or
call
lods
sub
cmc
sti
das
push
cwtl
push
adc
adc
cmp
pop
ds
mov
lds
jae
xor
mov
mov
mov
outsl
inc
sar
aaa
clc
mov
inc
or
jmp
lcall
or
std
mov
pop
pop
sub
push
xchg
andb
push
jecxz,pn
jae
dec
pop
pop
ret
cmpsl
add
push
test
pusha
in
mov
pop
dec
lret
int
scas
xchg
pop
push
aad
push
pop
mov
std
or
add
mov
sub
jns
xchg
pop
shlb
mov
popa
and
mov
adc
jge
fidivs
loopne
add
xor
push
aaa
mov
jb
or
lods
push
cmp
mov
enter
imul
push
cmc
xlat
adc
ja
scas
push
mov
add
aaa
rorl
xor
and
mov
out
mov
dec
fildll
stos
aam
pop
bound
icebp
add
into
adc
add
loope
mulb
repnz
dec
lret
push
mov
mov
adc
ljmp
aaa
cs
inc
outsl
ss
pop
scas
pop
xor
push
sub
data16
xchg
adc
xchg
pop
jecxz
dec
sub
lahf
mov
cmpsl
inc
dec
pand
lahf
sub
test
and
subl
testb
shll
mov
pushf
push
mov
push
mov
jmp
fs
popf
cltd
push
int
scas
or
cli
sub
scas
aad
mov
xchg
pop
and
adc
sub
rcll
cmc
bound
mov
enter
add
int3
xlat
cwtl
out
xor
add
je
daa
outsb
mov
div
rcll
sbb
mov
push
bound
mov
pusha
jmp
xchg
pop
adc
jb
fdivrs
xor
roll
cwtl
xchg
pushf
stos
stc
jle
push
mov
hlt
lods
inc
xor
mov
es
mov
fbld
adc
test
leave
inc
lea
adc
pop
push
add
mov
xchg
mov
outsb
loopne
negl
fs
cltd
movsb
out
lea
test
sbbb
sub
scas
into
xchg
fidivrs
pop
aad
pop
insl
shlb
push
push
inc
dec
xchg
mov
mov
outsl
cwtl
nop
mov
pop
push
gs
mov
lret
pop
jb
adc
sbb
xchg
sub
push
popa
nopl
mov
sarb
adc
aas
lea
cmpsl
in
dec
xchg
jnp
aam
push
mov
inc
jmp
icebp
xchg
shll
int
fstps
xorb
mov
mov
xor
adc
adc
rorl
je
inc
xchg
adc
dec
in
daa
adc
scas
dec
rclb
lret
xchg
push
or
in
cmp
scas
fs
into
pop
loopne
cmpsl
mov
sub
stos
int
int3
xchg
push
sbb
sbb
adc
iret
stos
sub
adcl
push
mov
mov
jb
or
jl
dec
ss
movsl
cmp
pop
sbb
cs
daa
adc
jl
push
cmp
cld
rcll
dec
pop
rcrl
cmpsb
mov
add
cmp
into
cmp
adc
sbb
aaa
stos
push
rcl
pop
jl
push
dec
inc
sbb
fcoms
fadd
iret
rorl
stos
push
test
xchg
mov
flds
add
enter
mov
or
and
loope
clc
or
or
pop
repz
jnp
out
sbbb
mov
xchg
ret
push
mov
xchg
repz
add
cmpl
lcall
cmpsb
xchg
hlt
fs
fwait
repnz
test
jle
fst
mov
adc
es
in
pop
shlb
pop
sbb
dec
es
inc
push
fabs
lcall
ret
mov
popa
test
cmp
loop
pop
cli
add
pop
lock
mov
stos
in
fdivrl
fdivrs
add
jbe
cmp
in
cmp
sub
loop
clc
outsl
cmp
js
fwait
push
xchg
in
daa
call
std
or
xor
cmp
push
daa
adc
pop
inc
je
and
mov
jnp
cmp
pop
pop
xchg
xchg
cmp
xchg
mov
arpl
push
fmulp
or
mov
dec
outsl
adc
out
repnz
pop
aam
iret
xor
gs
or
mov
popf
jle
sub
imul
xor
lret
jnp
mov
rorb
mov
sub
popf
mov
repz
mov
popa
xor
mov
xchg
inc
mulb
iret
jne
in
lods
adc
mov
push
fld
fimuls
xchg
fwait
inc
pusha
std
lea
cmc
shrl
cmp
jnp
in
xlat
lahf
xor
scas
add
aaa
notb
jmp
addr16
shrl
stos
push
jl
cmpsb
sub
call
fsubrl
stos
int
xchg
cmp
dec
popa
stos
ljmp
xchg
or
add
dec
inc
clc
sbb
adc
lds
mov
or
push
pop
pop
fimull
pop
std
mov
ljmp
fstl
fcomps
mov
or
xchg
inc
mov
sbb
sub
pop
mov
scas
sbb
jo
cmpb
xor
pop
mov
adc
jnp
lcall
dec
lcall
es
cmpsb
stc
push
jmp
and
jmp
popa
jnp
inc
xor
sbb
ja
push
pop
cwtl
imul
icebp
add
leave
mov
out
xchg
xor
lahf
pop
sbb
repnz
inc
movsb
cmc
dec
incb
jmp
sbb
xchg
pop
cmp
jo
push
in
adc
sub
add
pop
gs
cltd
mov
jns
stc
jecxz
xchg
insl
mov
lods
adc
and
js
xorl
dec
add
rcr
lds
cmp
cwtl
inc
daa
xchg
scas
in
xlat
ret
xor
jle
inc
jae
arpl
push
inc
jb
mov
mov
rclb
dec
and
pop
pop
imul
xchg
incb
dec
ds
push
jl,pt
and
pop
insb
push
and
xor
mov
in
jge
clc
int3
aaa
or
dec
movsl
jp
mov
rcrb
lods
push
mov
and
and
out
xor
mov
jge
js
or
add
mov
xchg
adc
mov
sub
dec
fldt
or
divl
sti
push
pop
dec
mov
imul
lret
mov
push
negb
jp
rcrb
mov
mov
sub
int3
icebp
and
adc
add
and
cli
xor
fldt
jb
mov
pop
ss
sub
xlat
xlat
ret
jnp
xor
enter
and
jg
cmp
std
mov
push
sbb
or
and
add
insb
arpl
lods
das
leave
jae
hlt
add
adc
scas
adc
adc
sbb
mov
les
gs
add
cli
sub
pop
mov
xor
and
std
mov
inc
mov
mov
mov
inc
xor
add
aas
into
mov
pop
dec
imul
push
lock
aaa
push
test
mov
imul
sbb
fmull
cmp
dec
pop
int3
jno
into
testl
in
shrb
test
jo
add
push
fwait
pop
ds
add
lock
adcb
add
aaa
pop
ja
shrb
out
fidivrl
push
push
pop
pushf
mov
ficomps
ljmp
jecxz
sahf
sub
or
movsb
cmp
adc
pop
ss
out
pop
jp
jg
and
mov
lcall
and
std
jmp
lcall
data16
mov
divl
mov
jmp
cltd
lret
xor
pop
pop
push
add
mov
jg
cmp
cld
mov
sahf
mov
sbbb
aas
jo
in
mov
mov
test
sti
cs
sar
cmp
pop
push
and
dec
add
adc
sbb
test
mov
mov
ss
out
enter
xor
lods
mov
sub
ret
insb
cmp
decl
cli
loop
cltd
stos
fisubs
mov
sbb
lret
cmpl
adc
add
stc
sbb
in
mov
stos
dec
jno
cmp
sahf
ja
insl
push
lret
lock
adc
and
stos
push
ja
fsubr
les
adc
out
mov
or
call
stos
pop
int
movsl
dec
arpl
cmp
cmp
imul
push
popf
sub
fwait
pop
imulb
sbb
daa
out
rcrb
cmpsl
nop
rcrl
int3
gs
xchg
insl
push
test
and
arpl
pushf
inc
and
sub
sub
fnstsw
test
xchg
lahf
popf
sub
jge
cmpsb
ljmp
in
icebp
push
pop
adc
pushf
lahf
sti
cmp
push
cmpsl
mov
jl
mov
mov
inc
gs
rcl
movsl
aam
sbb
aad
ljmp
xchg
inc
aas
jg
cmp
in
mov
mov
fcomps
push
loop
dec
test
sbb
in
pop
jb
jnp
in
mov
mov
sti
arpl
pushf
shlb
jp
gs
enter
cmp
daa
je
icebp
ss
pop
push
pop
pop
pop
gs
sbb
out
add
sub
xorb
and
add
lret
out
inc
jb
int3
lcall
cmp
fsubrp
xchg
lret
sub
lahf
mov
jnp
lods
add
and
adc
and
pusha
add
adc
lods
cmp
xchg
sbb
imul
mov
nop
cld
fstps
scas
cmp
pop
lods
iret
lock
mov
fists
out
in
inc
mov
inc
jb
jge
in
roll
push
lock
jo
pop
mov
pop
mov
mov
cmpl
std
sbb
pop
cmp
int
pop
movsb
pop
adc
mov
mov
ror
pop
sarb
cs
pop
jg
xchg
scas
lret
xlat
mov
mov
mov
adc
push
stos
sbb
aas
push
fistpll
sarb
inc
mov
shll
mov
add
dec
int3
jae
pop
aam
addr16
ret
ja
inc
pop
push
mov
and
adc
adc
or
jns
je
sbb
hlt
dec
loope
mov
sar
repz
pop
add
mov
dec
sbb
rorl
sub
push
adc
je
outsl
push
mov
lea
push
push
ljmp
outsl
cli
add
dec
mov
pop
shrl
pop
inc
fcmove
inc
data16
jnp
jae
sti
mov
or
push
pushf
push
pop
xor
dec
or
or
add
out
fidivrl
jp
jno
lahf
xchg
mov
and
popa
xchg
sbb
mov
pop
mov
insb
inc
icebp
push
bound
cmp
pop
fistps
jecxz
mov
jnp
loopne
cli
fiaddl
mov
xorb
mov
push
in
xchg
call
push
fisttps
jl
lret
cmp
daa
adc
ret
sete
mov
lahf
mov
push
and
adc
push
stos
test
pusha
mov
insb
addr16
loopne
xchg
mov
ret
inc
adc
dec
push
push
mov
mov
inc
push
aaa
fstp
leave
nop
test
inc
out
mov
mov
orb
jp
push
mov
lret
lea
and
imul
inc
sub
mov
fnclex
cmpb
or
lcall
popa
mov
jecxz
lods
cmp
sbb
inc
cmpsb
xlat
dec
and
sarw
jnp
mov
es
jecxz
outsb
add
or
mov
bound
lods
popf
xlat
mov
mov
lcall
sti
int
xorl
sahf
mov
sbb
pop
test
sbb
push
add
aam
loopne
insb
popf
jbe
repnz
ret
in
sbb
mov
loope
add
pop
std
inc
stos
rep
cli
pushl
leave
and
addb
cmc
pop
stos
fidivrs
gs
jg
sub
dec
or
inc
mov
imul
adc
cmp
xchg
divl
lods
sub
xchg
cmp
cmp
aam
sub
mov
cmp
mov
add
pop
loop
xchg
sbb
xchg
getsec
divl
imul
inc
in
mov
push
sub
enter
lds
scas
cmpsb
cmpl
ret
popf
xchg
push
mov
sub
xor
outsb
mov
das
mov
cmpsb
test
cs
jo
and
xlat
fdivrl
lods
das
push
jle
push
mov
jge
rol
sbb
stos
popf
jecxz
in
sub
cwtl
test
xchg
js
sub
ss
push
jo
mov
jno
leave
sub
fbld
fidivrl
dec
mov
xor
aam
out
mov
push
test
xchg
jno
test
stos
push
imul
pop
test
imul
sahf
xor
pop
loop
ret
dec
add
pop
cmp
add
and
cmp
mov
mov
pop
xchg
dec
mov
sub
pop
xchg
inc
push
xor
mov
pop
stos
out
adc
das
pop
xor
pusha
iret
das
popa
lcall
sti
fsts
test
test
pop
and
push
mov
push
pushf
xchg
mov
dec
mov
aaa
int3
inc
mov
sbb
push
sub
lds
stc
icebp
xor
mov
or
push
xor
mov
sub
aaa
sbb
cld
jae
mov
out
cmovnp
jecxz
mov
ror
lea
cmc
test
out
sbb
sub
pop
sub
addb
pop
add
or
sahf
cltd
in
mov
adc
adc
push
ret
je
xchg
cmp
xor
or
jp
repz
add
in
cmp
mov
and
jmp
sub
and
mov
ret
lods
lcall
scas
decb
into
jo
xchg
xor
ljmp
pop
test
stc
insl
and
je
scas
cld
cli
add
inc
testb
cmp
mov
mov
adc
aaa
add
ret
rcrl
imul
std
cmp
mov
adc
inc
mov
add
or
test
scas
out
leave
std
and
and
into
sbb
lods
pop
adc
bound
int3
call
fcmovu
jle
pop
push
jne
inc
adc
stc
fidivl
jbe
inc
pushl
mov
mov
movsb
and
xchg
lea
sbb
and
xchg
jmp
in
cwtl
adc
and
mov
movb
mov
cmpsl
gs
clc
push
cs
mov
fildl
pushf
adc
cmp
ret
cmc
jo
sub
or
xor
dec
or
push
xchg
pop
inc
aam
pusha
push
jp
push
xor
loope
clc
sub
or
ja,pt
insb
xlat
dec
dec
cmp
xchg
cmp
lret
in
fs
ljmp
xlat
std
xchg
add
out
es
mov
pop
out
loop
sbb
icebp
arpl
adc
popf
or
jns
rol
jle
xchg
sub
cmpsl
lock
push
popa
lds
insl
cmpsl
leave
std
xchg
icebp
hlt
inc
pop
jnp
dec
push
jbe
ja
mov
std
sbb
pop
nop
xchg
or
mov
jne
mov
mov
inc
mov
test
xchg
push
not
or
push
push
mov
stc
pop
aam
push
fidivrs
jae
aam
jne
jbe
xor
xor
adc
xchg
pushf
push
adc
xor
pop
scas
rorl
in
aad
divb
jne
leave
push
mov
jecxz
arpl
dec
push
shrb
jmp
icebp
insl
push
mov
mull
push
mov
inc
xor
cs
mov
add
loop
jbe
rclb
mov
rcl
and
jp
pop
pop
sub
lret
adc
push
fwait
dec
cmp
mov
mov
bound
push
fld
push
dec
repnz
push
sarl
loop
add
dec
add
cmp
movsb
divl
xchg
ret
jg
movsb
jb
cmpsl
into
xor
cli
aam
jns
add
xor
inc
fwait
jge
jp
sub
cld
jne
inc
mov
xchg
das
pop
or
push
cmp
shlb
push
mov
dec
jns
xchg
ret
test
call
pop
mov
test
icebp
ret
inc
fcoms
adc
cltd
aas
xchg
jb
and
xchg
mov
filds
iret
push
addr16
aas
mov
sub
adc
subl
clc
sub
cmpsb
dec
mov
repz
loope,pn
out
inc
lahf
push
cltd
mov
jmp
add
jne
fidivrs
lods
mov
inc
sbb
xor
inc
dec
movsb
arpl
adc
std
cmp
dec
mov
mov
xor
mov
add
dec
aam
shrb
mov
pop
stos
or
jo
ja
movsl
mov
xlat
shlb
mov
inc
stc
sub
adc
inc
nop
sbb
mov
sar
adc
inc
xchg
inc
inc
jecxz
mov
jno
jo
aas
outsb
push
out
imul
fidivs
jnp
out
fs
jnp
adc
orl
push
adc
ja
sahf
fprem
inc
and
push
xchg
test
pusha
cmc
lods
insl
xchg
loope
jg
jp
dec
or
imul
aam
dec
imul
nop
notb
sub
inc
es
jbe
xchg
and
mov
push
xor
or
insb
mov
mov
gs
pusha
bound
adc
call
jns
hlt
mov
push
ficoms
push
mov
jbe
xchg
xor
push
in
std
mov
inc
push
mov
aaa
shr
mov
es
mov
scas
inc
jl
push
cli
xchg
imul
arpl
in
mov
mov
mulb
mov
stos
or
scas
shlb
push
idivw
fwait
pop
mul
int
push
je
daa
mov
test
pop
fcmove
mov
cltd
cmp
daa
cmp
jp
mov
add
pop
adc
jno
jno
fs
cld
pop
xlat
push
mov
pusha
ret
and
sti
push
fsub
dec
jnp
loopne
roll
or
call
out
push
xchg
lods
shr
inc
and
iret
and
and
xchg
or
push
push
lret
out
std
and
lock
xor
xorb
sbb
in
int3
sbb
inc
in
mov
imul
fidivrl
out
fxch
cmp
aad
cs
arpl
pusha
adc
jge
sub
push
enter
out
xor
scas
stos
jl
outsl
cmp
test
popa
and
inc
mov
mov
nop
add
push
or
and
in
in
out
movsb
push
mov
or
sbb
xor
call
int
cli
iret
jle
movsl
mov
lret
movsb
aaa
rol
aam
push
xor
mov
ret
sub
je
js
dec
cwtl
rorl
and
test
or
lahf
cs
inc
mov
pusha
jge
xchg
mov
aam
xor
and
jns
loope
out
pop
sub
xchg
mov
or
dec
dec
pop
into
push
nop
push
mov
fimull
aam
adc
lcall
dec
xor
xchg
mov
jmp
pop
in
sub
xor
xchg
js
cmp
adc
cmp
sahf
fnstsw
into
add
std
push
cmp
xor
mov
sub
mov
add
inc
mov
xchg
jecxz
push
lods
sub
testb
cmc
lods
sub
adc
mov
add
sbb
je
pop
rorl
in
dec
fists
int
add
xor
sbb
stc
fisubrl
sub
xchg
leave
jp,pn
stc
inc
xor
mov
sub
or
jns
and
out
dec
roll
sahf
rolb
push
jnp
pop
aam
sbb
push
loopne
jae
sbb
fs
sbb
mov
jnp
int3
mov
push
cltd
xor
mov
cwtl
rcl
lret
das
push
lret
iret
add
sti
xor
rclb
adc
scas
xor
push
mov
mov
repnz
cmp
repz
aad
jle
mov
sbb
loopne
jg
arpl
and
and
jp
cld
mov
push
icebp
xchg
cmc
pop
push
dec
cltd
push
scas
sar
out
jmp
pop
cmp
leave
sbb
jg
in
pop
xor
fs
push
jecxz
mov
add
jmp
jo
cltd
adc
loope
dec
ficompl
xchg
xor
dec
mov
pop
int3
mov
loop
mov
sti
cld
daa
push
pop
inc
dec
sbb
jle
popa
test
sub
je
pop
or
les
outsb
push
xchg
pop
dec
mov
test
mov
pop
pop
cmp
std
pop
cs
shufps
inc
repnz
sub
fs
fnsave
retw
mov
sti
sbb
test
aas
push
pushf
adc
cmp
movsb
dec
and
push
add
popa
outsb
or
repnz
mov
pop
dec
mov
ljmp
fistpll
push
test
jb
add
outsb
negb
sbb
push
cld
lret
hlt
mov
mov
sbbl
out
scas
arpl
push
sub
andb
pop
mov
push
clc
in
xchg
into
in
push
push
clc
mov
dec
xor
mov
inc
dec
sbb
out
notb
mov
cmc
or
mov
mov
mov
std
jns
or
inc
in
mov
dec
clc
lods
mov
leave
cmp
pop
mov
repz
push
orl
push
sub
push
or
pop
cmp
jp
adc
stos
out
addr16
adc
dec
dec
insb
jno
lret
jl
pusha
lcall
cs
sub
push
or
incl
push
xchg
cmc
and
fwait
mov
xchg
into
or
leave
shlb
pop
dec
sub
pop
outsl
and
in
xchg
and
push
jg
dec
push
je
and
ret
testl
or
dec
sarl
adc
mov
jns
sbb
mov
fwait
mov
add
je
fwait
leave
cld
push
outsb
scas
adc
or
pop
rcrb
jg
pop
adc
iret
mov
mov
les
mov
incl
jp
xchg
pop
push
ds
shr
insb
pop
add
push
sbb
outsl
lahf
repnz
or
xchg
stos
push
leave
fisttpll
xchg
scas
out
jp
pop
xchg
inc
inc
jne
jmp
jg
push
scas
sahf
sbb
adc
and
notl
sub
mov
xor
mov
cmp
stc
mov
pop
jnp
xchg
repz
adc
sahf
aas
mov
scas
mov
xor
mov
scas
or
out
leave
lods
bound
popa
jo
dec
push
sbb
pop
in
in
adcl
mov
jns
inc
or
inc
mov
dec
dec
jg
inc
cmc
filds
clc
js
push
mov
mov
cmp
adc
sti
mov
cmp
jbe
cwtl
out
adc
push
push
sub
jns
add
mov
cmp
cwtl
mov
outsl
loop
push
push
sahf
cltd
popa
xor
repz
repnz
test
or
dec
sbb
hlt
hlt
je
dec
aad
dec
mov
or
sar
xchg
dec
and
cltd
cmp
cli
nop
xor
cmp
mov
sub
cmpb
out
stos
popa
pop
mov
test
out
add
insb
push
xchg
fcoml
cmp
or
cmpsb
adc
or
adc
mov
shl
and
pop
or
mov
imul
mov
stos
xchg
push
test
cmpl
outsb
insb
popf
lock
mov
stc
sarb
movsl
mov
sub
sbb
ret
int3
nop
mov
sbb
enter
aam
add
clc
repnz
js
pop
xor
ds
adcb
push
in
jge
push
ja
xor
enter
lock
test
sub
pop
fldt
jbe
sarl
jle
in
fiadds
add
insb
movsl
stc
mov
ds
scas
shlb
hlt
popa
add
xchg
inc
mov
out
push
scas
xchg
scas
sub
cmp
lds
out
mov
ss
outsb
mov
inc
lea
stos
jmp
cmc
jo
ret
xchg
cmp
add
xor
push
push
mov
leave
addr16
movl
aad
pop
outsb
and
mov
mov
data16
fisubs
add
lcall
jnp
hlt
das
or
jne
xchg
test
push
jl
ljmp
xchg
out
cmp
and
mov
enter
xchg
aaa
xor
mov
xor
insl
int3
mov
mov
shlb
ljmp
mov
sahf
push
std
fs
movsl
out
cmp
imul
movsl
push
push
cld
lret
ja
stos
cmp
mov
mov
sbb
sub
jb
sub
xchg
fs
pop
mov
pop
dec
xor
pop
hlt
mov
sbb
mov
mov
mov
rcrl
dec
aaa
mov
out
pushf
lret
sub
lret
mov
outsb
cmp
or
and
cs
lods
pop
fnstenv
xchg
mov
adc
adc
pop
insl
jl
fcmovnu
in
or
call
mov
mov
mov
sti
stc
in
xor
shll
jo
push
lock
enter
mov
jle
ja
hlt
test
inc
jge
add
jb
cli
xor
pop
sbb
dec
lods
add
dec
mov
dec
mov
xor
pop
test
nop
mov
push
mov
cmpsl
cmp
lret
mov
inc
test
mov
repnz
stc
sbb
icebp
gs
sbb
test
and
arpl
repnz
sar
stc
pop
movsl
mull
sub
jl
jg
idivb
ficomps
xor
int
inc
cli
pop
xchg
inc
and
and
into
subl
fists
ja
in
adc
xor
push
pop
and
sub
popf
xchg
dec
popw
sbb
xlat
dec
ret
sub
lret
xchg
andb
push
mov
xchg
mov
fmulp
jns
cmp
xchg
pop
pop
add
mov
out
sarb
mov
fildll
mov
dec
ret
jl
repnz
lcall
cwtl
jb
lods
das
daa
jb
jns
inc
jae
jmp
cmc
pop
andb
push
mov
in
adc
adc
cs
mov
cli
pop
insl
pop
mov
movsb
rorl
push
mov
ljmp
addr16
jns
mov
mov
push
fstpl
add
or
push
cmp
jns
cmp
nop
aas
inc
sahf
add
shlb
bound
inc
mov
icebp
cmp
cmp
push
mov
jb
jge
adc
pop
inc
insl
hlt
mov
pop
pop
push
mov
repz
xchg
jge
test
mov
mov
jae
push
test
aam
lods
dec
jmp
and
addl
adc
cld
lahf
addr16
and
xor
mov
push
cmp
out
int
pusha
mov
jo
dec
sub
sti
popa
push
fidivs
mov
mov
push
and
push
inc
add
sbb
sub
subl
inc
gs
xor
scas
es
push
or
fldenv
subb
mov
sub
or
add
mov
dec
shlb
test
inc
dec
cmpsl
notl
jecxz
jo
fldcw
pop
mov
mov
and
sub
clc
jmp
lods
add
or
lods
popf
imul
cmp
ret
xchg
xchg
mov
push
and
mov
jno
mov
xchg
cli
xchg
rolb
roll
pop
std
incb
push
out
out
or
jae
inc
or
pop
ret
or
or
cmpsb
mov
sub
insb
sarb
in
insl
sbb
es
outsb
scas
dec
jle
dec
fsts
std
lret
into
mov
daa
aam
adc
cs
repz
mov
gs
int
sbb
aam
imul
andl
clc
in
mov
add
adc
test
jp
aam
pusha
inc
arpl
loop
loope
call
pop
pop
addb
pop
lret
jae
push
ljmp
scas
adc
cmp
adc
aaa
dec
push
cmp
xchg
loope
movsl
sub
ljmp
test
sub
adc
xor
call
sub
fwait
out
sbb
insw
filds
sub
jmp
ret
mov
cli
inc
cs
test
pusha
xor
inc
fcoml
sub
jecxz
add
sub
rcrl
sub
inc
mov
or
pop
mov
divb
mov
xchg
ljmp
sbb
ja
dec
or
sbb
int3
adc
imul
sbb
mov
push
addb
fisttpll
loop
xchg
mov
dec
mov
aas
sahf
rolb
xchg
mov
xlat
lahf
or
cwtl
and
and
aaa
inc
insl
add
dec
out
push
push
mov
push
mov
mov
jb
sahf
test
cmc
xor
sbb
mov
sbb
frstor
int3
popf
nop
jbe
inc
mov
jmp
out
jns
sub
add
pop
sub
mov
mov
das
adc
push
xor
dec
outsb
cld
cwtl
pop
mov
movb
adc
sub
add
in
lock
out
mov
out
mov
sbb
adc
pop
mov
shll
add
inc
sub
fwait
inc
test
out
addr16
adc
repnz
jl
cmp
push
lds
mov
ret
pop
mov
das
icebp
popf
out
bound
stos
add
mov
jl
jbe
fbld
xor
jo
cmpsb
mov
in
iret
mov
popf
rcll
loopne
rol
jle
sub
mov
push
jg
call
push
jp
and
loope
aad
inc
iret
pop
ret
pop
push
xor
fisubl
add
inc
xchg
shlb
push
jb
sti
or
je
addr16
stos
adc
bound
ja
aas
push
mov
aas
cltd
mov
popa
inc
stc
or
push
cld
jns
adc
mov
movsl
imul
jno
pop
cmp
push
bound
jp
push
or
xchg
jb
ljmp
adc
xchg
xchg
adc
ret
xor
pop
cmp
adc
insl
sbb
sbb
jg
icebp
loop
add
or
jge
cmp
push
out
lret
in
les
and
sti
call
adc
in
or
or
test
movsb
clc
int3
lahf
lds
inc
adc
push
pop
testl
loop
es
xchg
push
std
mov
push
daa
adc
dec
loope
xchg
mov
pop
psadbw
insl
sub
xor
sub
and
imul
or
mov
xor
mov
push
pop
pop
fidivs
test
push
sti
shrl
ja
mov
inc
stc
into
call
lods
pushf
inc
lcall
dec
mov
cld
or
mov
adc
mov
mov
cli
mov
out
cld
sbb
dec
xchg
fcmovb
cli
cmp
fstpl
and
pop
mov
push
nop
roll
jne
mov
testb
cltd
mov
enter
aad
sub
push
test
insl
sbb
jns
mov
std
movsb
pop
cld
cvtps2pi
jp
sub
mov
in
arpl
leave
les
je
dec
es
loop
mov
mov
stc
fs
stos
imul
add
std
sarb
addl
or
push
jo
test
pusha
out
loope
jb
sbbl
mov
or
jp
pop
or
movsl
sbb
out
in
mov
lea
lcall
pop
lea
pop
jecxz
xor
push
jb
imul
xor
jo
push
in
fcoml
popa
mov
leave
jbe
incl
adc
aam
insb
jno
jecxz
stos
icebp
in
ja
cmp
xor
fsubr
aaa
jecxz
popa
pop
mov
mov
jmp
pop
arpl
dec
outsb
cmp
or
das
lds
mov
pop
insb
stos
enter
cmp
push
and
and
add
jmp
mov
shlb
push
cmpsb
sbbb
out
add
push
dec
sub
mov
movsl
push
insb
imul
pop
popf
ss
lock
fadds
imul
jno
jmp
jg
nop
push
ret
cltd
mov
sbb
cli
add
xor
fwait
in
push
ja
sub
push
pop
pushf
jmp
sarl
fwait
jp
mov
test
push
outsb
popf
or
mov
cmp
cld
movsb
jno
jb
mov
arpl
pop
xor
sbb
mov
xchg
nop
repnz
mov
adcb
add
clc
repnz
stos
mov
lds
push
pusha
xchg
or
sub
movsb
adc
in
jl
jp
jge
jg
and
add
and
push
inc
mov
rcll
notl
mov
pop
mov
mov
cwtl
sub
pop
scas
fistpl
out
xchg
xchg
lds
scas
jmp
mov
dec
xchg
jo
jo
inc
stc
cltd
mov
cmp
inc
jns
jl
adc
xor
jle
adc
or
xor
outsb
adcl
push
xchg
add
cli
jg
jecxz
sbb
sub
loopne
bound
or
mov
cld
ja
mov
dec
add
loopne
dec
int3
cmpb
xor
jnp
jns
adc
rcrl
mov
mov
pop
xor
repz
mov
ret
sahf
lcall
in
adc
lret
ljmp
enter
imul
mov
adc
rcll
adc
or
std
cmc
cmpsl
pop
lahf
mov
cmp
cmpsb
sahf
sbbl
inc
addr16
xlat
leave
sbb
insl
outsl
sub
out
pop
stos
lcall
xor
test
mov
das
fs
popa
dec
jne
sub
mov
push
pop
test
ficomps
cmp
inc
enter
popa
pop
add
cmp
int
decb
and
sub
dec
add
out
lods
in
mov
stos
cwtl
dec
ss
ljmp
mov
inc
loopne
jl
and
adc
mov
lods
dec
push
insb
das
mov
jg
push
iret
dec
xor
sub
insb
shrl
jg
clc
xchg
mov
add
js
mov
cmp
popa
push
je
imul
aaa
mov
std
cmp
jae
sbb
cmc
mov
jns
and
jp
pop
in
mov
xor
sarl
movsb
pop
mov
and
mov
inc
lock
stos
cvtps2pi
and
pop
adcb
ljmp
enter
iret
test
adc
mov
and
fidivrs
sub
cmpsl
adc
cwtl
push
mov
add
bound
pop
xlat
insl
popa
jge
call
inc
pop
mov
xlat
ljmp
pop
aam
sbb
mov
iret
xchg
pushf
jl
jne
popa
mov
xchg
int
xchg
jp
lock
cmp
mov
jbe
repnz
push
cmp
fistl
push
ret
arpl
loopne
sbb
jmp
addr16
mov
adc
xchg
and
rcll
push
xchg
das
cmp
sub
lret
add
test
mov
dec
std
lea
aam
cmpsl
cmp
mov
mov
outsl
repnz
cmp
adc
push
std
ja
test
and
cmp
pop
or
jg
cmp
push
loop
xor
aad
mov
lds
jae
mov
fbld
test
cltd
mov
push
ljmp
or
imul
fcmovnbe
je
and
add
daa
scas
adc
and
imul
scas
cmpsl
enter
sahf
mov
cmp
test
sub
repnz
sbb
clc
fsts
lea
outsb
and
popa
fsubr
icebp
js
call
mov
out
cmp
pusha
clc
dec
dec
lods
je
inc
ds
mov
mov
sbb
je
lock
pop
clc
outsb
pop
pop
faddl
in
mov
arpl
lock
sti
push
aam
cltd
fisubs
mov
lahf
daa
add
inc
les
xor
mov
adc
insl
mov
mov
sahf
es
mov
mov
test
inc
jge
inc
mov
aad
xchg
jp
inc
pop
fstps
or
scas
cmpsl
loop
sub
lret
fcompl
mov
dec
lea
dec
je
shlb
int
int3
ja
nop
adc
stos
aas
sar
movsb
xlat
push
jp
mov
cmp
and
mov
cmc
add
insl
cli
adc
mul
mov
cmpsb
mov
push
push
fiadds
out
leave
lret
ficoml
cs
xor
mov
popf
jge
popf
iret
in
jne
mov
dec
aam
cmp
inc
jecxz
jg
cmp
cmpsb
lods
xor
enter
cmp
stos
ja
lahf
fistl
xchg
jmp
xor
xlat
lods
icebp
ds
jmp
lea
pop
jmp
mov
xchg
std
icebp
push
fdivr
dec
sbb
mov
mov
push
iret
xor
dec
pusha
add
addr16
inc
ljmp
dec
rorb
je
mov
sahf
loopne
and
out
or
jb
cli
ficomps
mov
out
adc
sbb
fsts
mov
add
add
sub
jne
sub
es
and
mov
fs
adc
push
ds
mov
jle
xor
mov
clc
jecxz
inc
and
xchg
mov
adc
xchg
negb
add
push
jnp
cmp
sub
fs
cld
and
lods
xor
pop
fdivrl
pushf
ss
ret
aam
dec
inc
stc
mov
mov
or
popa
mov
adc
in
in
mov
jmp
jbe
sbb
push
cmp
adc
sahf
cld
pop
and
out
add
aaa
pop
pop
push
lods
fimuls
fnstenv
adc
jns
push
cmp
insb
imul
inc
aad
mov
push
pop
and
sub
movsl
imul
sub
into
push
jecxz
inc
scas
adc
or
xor
into
sub
popf
int
dec
neg
cmpsb
pop
inc
addr16
sub
ss
xor
popa
imul
push
into
push
dec
fstpl
addb
jl
addr16
iret
add
cmp
addl
movsl
jp
push
pop
mov
test
into
xchg
pop
cwtl
dec
call
aad
mov
stc
or
fdivs
inc
push
iret
jmp
call
rorb
xor
in
pusha
inc
xchg
xor
arpl
negl
jns
dec
xchg
dec
xor
clc
push
xlat
imul
jg
xchg
and
dec
add
imul
jns
arpl
jge
mov
fs
xor
sahf
xchg
fistpll
mov
and
fcoml
rorl
add
ficoms
xor
lret
add
adcl
and
cli
in
and
arpl
xor
hlt
sub
dec
mov
popf
cwtl
test
mov
outsb
test
add
inc
mov
pop
sbb
push
mov
inc
inc
call
sub
sbb
jae
or
sub
nop
push
or
cld
cs
mov
jge
add
dec
hlt
inc
shrb
jle
inc
lods
stc
dec
arpl
loopne
andl
pusha
js
dec
jno
and
xor
dec
ficompl
loop
ljmp
push
sub
aam
ja
xor
repnz
fists
sahf
repz
push
xchg
es
inc
inc
cmp
jl
lret
adc
mov
std
fdivrs
xchg
inc
cmc
jno
fwait
mov
sbb
test
sbb
cmc
cmpsb
push
cltd
adc
js
cld
dec
fmul
inc
xor
jns
gs
jbe
cmp
inc
xchg
mov
out
inc
pop
icebp
push
test
ret
inc
in
dec
jns
test
jl
sub
arpl
cmpl
sub
dec
lret
out
dec
lock
xchg
pop
in
movsl
mov
mov
pop
cmpsl
dec
shl
mov
fwait
in
sbb
cwtl
out
xor
out
out
loopne
out
shl
push
pop
or
xchg
pop
or
mov
jmp
ja
jle
push
pop
dec
push
loopne
xchg
in
push
jecxz
xlat
shrb
jmp
cli
lcall
and
lcall
adc
pop
ljmp
lea
lret
lret
inc
jns
imul
shl
sub
or
rorb
mov
push
inc
int3
sbb
outsb
adc
mov
ja
enter
std
cwtl
aad
ja
popf
ror
cmp
jo
mov
push
push
in
int3
pop
xchg
sarl
pop
or
and
mov
adc
scas
xor
lea
cmpsl
lea
rolb
xchg
mov
mov
lods
sbb
dec
xor
in
cmp
sti
dec
sub
push
pop
jecxz,pn
inc
dec
mov
xchg
and
sub
comiss
stos
inc
adc
stos
sbb
mov
xchg
ret
sub
pop
adc
loop
into
mov
add
push
add
push
fistpl
jg
xlat
cmp
lds
fdivrl
call
imul
mov
ljmp
mov
sti
mov
das
jmp
sbb
jb
pop
lods
sti
mov
mov
imul
or
arpl
and
cmp
inc
pop
or
in
mov
sbb
inc
mov
cmpsl
stc
aas
cmp
lds
jmp
sbb
pop
jp
mov
jmp
in
lock
sti
cmp
insb
inc
lock
mov
xchg
das
lods
cld
notl
jge
mov
dec
nop
pop
cmc
dec
mov
sbb
in
cmpsl
pop
or
mov
in
cmp
adc
iret
aam
fucom
lods
and
int
inc
add
js
xchg
shl
sbb
push
cmc
dec
daa
mov
or
test
adc
outsl
sub
jae
add
mov
aas
and
in
shll
btr
movsb
add
jno
scas
and
xor
call
pop
pop
les
and
xchg
and
dec
out
mov
push
and
popa
inc
mov
jle
dec
cs
lds
out
push
aas
pop
adc
pop
out
xchg
test
pop
inc
sbb
jecxz
sbb
jg
cmpsl
movsl
lcall
pusha
push
xchg
cmp
inc
outsl
push
sub
pop
pop
pop
fsubs
mov
xlat
sti
dec
das
cmp
aaa
data16
insb
dec
add
roll
xchg
scas
ss
cli
jge
imul
daa
mov
and
dec
mov
mov
or
into
aad
or
shlb
popa
push
mov
mov
push
jo
cmp
or
dec
push
inc
push
test
or
jae
mov
mov
push
push
sub
test
push
int
push
test
pop
aaa
dec
fldt
lret
cmp
enter
les
ret
enter
lahf
imul
outsl
in
jnp
cmpsb
fs
enter
iret
lods
xchg
jg
js
ret
mov
jmp
popa
sbb
jb,pt
inc
push
lods
into
or
dec
xchg
rcrb
inc
xor
das
fsubrl
nop
jno
orl
push
popf
adc
std
and
insb
or
in
out
insb
cmc
push
and
call
sbb
pop
lahf
int3
mov
jo
xchg
pop
ss
fdivp
push
push
pop
mov
daa
lcall
in
stos
mov
stos
adc
popa
in
repnz
xor
movsb
mov
das
mov
xchg
test
pop
fistpl
and
push
push
rcrl
dec
sbb
lods
or
sbb
dec
lret
mov
cli
stc
mov
adc
sub
ds
adc
sub
out
cmp
mov
mov
jmp
lds
or
sub
pop
mov
fisttpll
mov
sahf
mov
ljmp
mov
pop
add
mov
stos
inc
xor
add
jp
roll
adc
out
cwtl
mov
xchg
cmp
dec
add
iret
pop
cmpsb
dec
mov
leave
pop
pop
mov
or
fildl
mov
jne
sub
dec
fcoml
add
aam
mov
int
adc
out
dec
imulb
push
or
aam
arpl
pop
mov
popl
dec
loop
rclb
stc
cvtps2pi
loopne
or
dec
xchg
out
mov
aad
xor
pop
pop
cs
es
jae
call
ret
pop
enter
jecxz
notl
insb
shlb
gs
pop
pushf
add
pusha
pop
dec
sbb
shrl
xor
push
cmpsl
imul
cmp
xor
inc
pop
cwtl
loopne
pop
pop
icebp
sub
jne
or
cmpsl
xor
sbb
xor
mov
push
cmp
xchg
xchg
jae
jmp
mov
jns
or
add
das
mov
mov
cwtl
icebp
mov
scas
shrl
rolb
xlat
rolb
loopne
bound
cld
std
jge
dec
addl
mov
in
and
sbb
sti
cmpsl
mov
rcl
push
jnp
jae
addl
adc
mov
inc
or
add
test
shlb
hlt
jbe
scas
adc
or
inc
pop
mov
leave
mov
das
jbe
add
or
call
inc
testb
xchg
dec
aas
lcall
jmp
jmp
xchg
scas
adc
gs
adc
or
in
pushf
and
mov
loop
std
lret
mov
pop
push
mov
fs
dec
pop
mov
js
jl
jns
cli
jecxz
fcos
jno
fs
mov
icebp
push
pop
xchg
xchg
mov
xchg
imul
jle
ds
jno
pop
fptan
pop
repnz
mov
jmp
aas
push
outsl
stos
push
rorl
cmp
adcb
pop
xor
out
shlb
jo
mov
push
out
pop
pusha
sub
in
std
js
xor
sarb
sbb
pop
movsl
or
mov
jnp
fcompl
adc
fsubl
in
xor
pop
dec
fiadds
icebp
hlt
xor
mov
std
in
shlb
jno
repz
in
sbb
call
jo
iret
pop
mov
fucompp
mov
cmp
ljmp
push
jle
push
jmp
pop
clc
pop
xlat
adc
xor
adc
cltd
xchg
clc
lock
pop
loop
sub
xchg
xor
push
pop
sbb
inc
mov
out
xchg
mov
dec
stc
cmpsb
loopne
jge
mov
dec
cmp
pop
mov
and
rcrl
imul
nop
aam
fsts
rcrb
and
cmp
pop
sbb
jns
and
mov
sbb
jb
mov
mov
xor
je
aaa
push
std
or
es
adc
adc
ljmp
aas
addr16
adc
push
sub
arpl
add
and
into
frstor
pop
xchg
dec
repz
insl
es
lret
or
adc
add
sub
xchg
scas
enter
stos
lock
lahf
mov
mov
jl
or
leave
std
lret
fisubs
fcomps
cmpb
push
es
add
push
cli
fs
add
in
ret
aas
xchg
and
les
test
sbb
pop
xchg
aas
into
mov
movsl
stos
and
push
aaa
cmp
mov
popa
push
mov
out
pop
lods
mov
daa
dec
pop
lods
adc
mov
adc
cltd
ja
push
das
dec
mov
xor
pop
xchg
sub
enter
int
lret
addr16
mov
fstl
mov
xchg
test
xor
jo
pop
pop
jnp
sub
repz
or
sub
jns
je
mov
adc
cmp
bound
lock
mov
push
cmpb
and
push
pop
jbe
push
dec
or
in
mov
ror
dec
fldt
mov
pop
add
fwait
cmp
pushf
xchg
xlat
xor
out
aaa
aaa
add
sub
sub
sbb
int3
and
cmp
or
push
stos
cmpsl
dec
sub
out
lock
outsb
pop
inc
cmc
fcoml
xchg
and
adc
dec
sub
push
mov
data16
and
jle
sub
cli
fwait
sbbb
push
mov
pop
xor
cmpsb
stc
test
scas
mov
jbe
cmc
repnz
pop
data16
bound
lcall
and
add
or
call
std
stos
xchg
xchg
sub
and
std
faddl
mov
cmp
push
lods
xor
mov
adc
fsubrs
mov
cmp
imul
in
lahf
arpl
sbb
sahf
sti
popa
cli
dec
xchg
orw
mov
in
inc
push
adc
mov
sbb
ret
sarb
lea
mov
mov
scas
or
jae
cli
add
mov
movsb
pop
and
subl
data16
out
dec
aam
sbb
movzwl
leave
loope
movsl
lock
inc
iret
call
lds
fstpt
out
mov
jle
mov
push
pusha
insl
xchg
test
fldt
loope
addr16
xchg
xchg
jnp
loope
jl
and
jns
xlat
mov
sbb
mov
repz
lods
inc
hlt
pop
mov
mov
or
cwtl
mov
xor
push
rcll
cmp
lods
sub
xorl
cli
jecxz
aaa
inc
fildl
push
jno
jecxz
push
lea
or
mov
or
mov
jl
test
rol
and
xorb
das
mov
cmc
nop
addr16
out
xchg
jl
out
jnp
mov
mov
mov
cmp
ja
lock
push
sahf
test
adc
cmp
js
inc
xchg
push
movsb
rcrl
mov
subb
pop
adc
adc
repnz
xchg
loopne
lock
js
pusha
out
add
push
adc
in
cmpsb
shll
fdiv
stos
in
lods
outsl
out
scas
dec
jno
ret
loope
jne
loope
and
cmp
sti
mov
repnz
xchg
mov
fstl
mov
stos
xchg
xor
sub
fdivrs
inc
push
mov
rcrb
xor
mov
es
mov
sbb
out
and
pushf
in
arpl
mov
ja
cld
xchg
inc
and
shll
in
negb
in
sub
or
cmp
inc
inc
jle
dec
push
in
clc
jecxz
push
inc
sahf
inc
mov
jg
ds
jle
lods
mov
fstpl
sub
mov
push
inc
mov
lahf
adc
add
adc
notb
cltd
pushl
pop
mov
mov
adc
xor
testl
sbb
push
popa
or
dec
push
sarl
mov
inc
hlt
dec
mov
lods
add
gs
dec
scas
sub
cmp
inc
xchg
outsl
add
es
xor
rcr
dec
dec
lods
mov
in
push
cmp
cld
mov
je
mov
sbb
push
sbb
movl
dec
add
push
xor
in
scas
outsb
ds
cmp
push
stos
or
cmp
subl
mov
clc
dec
cmc
mov
push
xlat
mov
pop
cltd
or
mov
add
test
jb
push
divb
imul
jns
in
cltd
and
into
dec
das
xchg
mov
shl
mov
scas
out
xchg
test
mov
std
dec
push
data16
xchg
stos
test
inc
call
xchg
popf
loopne
call
sbb
push
arpl
insb
sub
cmp
stos
mov
fistl
dec
fwait
jne
adc
mov
pushf
test
inc
push
xchg
test
icebp
loopne
popa
cwtl
daa
mov
pop
insl
pop
leave
test
ljmp
cmc
cwtl
mov
ret
sbb
ret
ljmp
rcl
xor
lret
out
mov
out
sti
mov
push
dec
dec
jp
rcrb
addr16
aam
imul
dec
cli
sbbl
jp
cmpsl
pushf
js
push
sbb
stos
sti
xor
add
cmp
or
push
jno
push
adc
cmc
fsts
test
iret
mov
pop
adc
loope
movsl
ljmp
mov
xor
outsb
mov
cmp
sub
push
xor
adc
pusha
iret
test
arpl
ret
movsl
sbb
mov
enter
daa
add
mov
pop
and
movsl
mov
dec
and
sbb
push
rcrl
in
jmp
jecxz
mov
aad
and
cli
loope
rorl
sbb
fs
inc
mov
inc
addr16
imul
in
lahf
mov
pop
mov
mov
sub
dec
in
stos
mov
inc
sub
mov
imul
pop
mov
xor
and
or
jl
sbb
mov
cmp
dec
gs
sub
sub
outsl
das
push
jns
das
sbb
mov
mov
fs
ljmp
xchg
in
cmp
pop
mov
ljmp
add
lret
inc
mov
pop
mov
xchg
mov
mov
mov
push
loope
aaa
mov
call
sub
lcall
push
inc
push
pop
xchg
fstpt
pop
mov
hlt
xchg
jns
xchg
xchg
or
mov
in
cwtl
pop
cmp
pop
mov
les
adc
or
std
push
push
adc
or
rcl
sbbb
in
mov
pop
jne
andl
jb
cmp
or
dec
mov
xor
mov
int3
push
sahf
addr16
fcoms
ljmp
in
dec
nop
ds
cmp
call
bound
inc
mov
das
pop
dec
xchg
lods
mov
mov
xchg
dec
sbb
pop
in
xchg
inc
xchg
dec
adc
outsl
dec
das
push
cltd
cld
mov
mov
add
pop
mov
push
sbb
push
mov
jmp
sahf
std
hlt
adc
mull
mov
int3
cltd
push
shlb
scas
adc
mov
les
mov
adc
movsl
pop
push
enter
jne
popa
sub
jb
imul
shlb
sub
xchg
in
inc
cmpsb
clc
loope
sbb
bound
mov
adc
pop
andb
sub
and
or
cmp
gs
jae
xchg
xor
std
fcmovnb
mov
sbb
fnstcw
add
sbb
adc
decb
imul
lods
test
and
lcall
add
adc
pop
stos
dec
or
aaa
sub
mov
fwait
and
add
lahf
out
mov
ja
rorb
mov
js
add
xor
mov
mov
pop
jno
mov
aas
jno
xor
andl
daa
xlat
cmp
or
cld
xchg
fistpll
call
ret
xor
std
cwtl
incl
fstl
dec
xchg
xchg
iret
mov
mov
aam
clc
stos
push
xchg
shrl
sub
stc
jg
shlb
data16
inc
xlat
inc
xbegin
sub
scas
insl
push
cmp
das
andl
xchg
mov
or
fcom
mov
iret
ja
xchg
rcrl
pop
jo
icebp
repz
pop
jl
pop
ret
dec
adc
lods
mov
les
push
stc
fwait
arpl
enter
icebp
dec
pop
into
test
mov
lcall
push
je
xrelease
pop
sub
jp
popa
imul
xchg
addr16
hlt
xor
icebp
sbb
out
cs
fistl
push
in
push
test
stc
imul
jmp
dec
inc
lods
movsb
inc
jg
push
push
pop
dec
imul
jno
pushf
mul
xchg
cmp
mov
mov
xchg
in
rcrb
pushf
mov
repnz
push
je
and
shll
xchg
jge
pop
cmp
in
sti
push
loope
mov
dec
pop
dec
pop
sar
add
and
mov
in
fwait
cwtl
repz
gs
stos
sti
mov
lods
shr
in
xorl
clc
cmp
push
jb
jbe
add
dec
xor
xlat
sub
adc
mov
mov
popf
andl
jnp
and
repnz
test
data16
pusha
jo
jno
ds
cli
scas
push
fldenvs
sub
inc
call
cld
lds
jne
push
mov
xchg
out
roll
test
cmp
mov
push
adc
push
out
fdivr
sti
xor
out
pop
je
andl
pop
xchg
js
cs
dec
xchg
stos
xchg
imul
dec
pop
jae
ffree
mov
xor
nop
std
adc
aad
mov
gs
outsb
cmp
push
jo
das
rcl
jg
hlt
mov
outsl
jl
mov
pop
inc
cli
fldcw
out
or
xlat
test
cmp
fmull
out
add
aam
push
mov
mov
stos
xlat
clc
pop
push
cld
test
mov
or
ds
cmp
sahf
loope
cli
pushf
mov
enter
push
sar
push
mov
sbb
loop
dec
mov
push
mov
arpl
jle
fbld
sarl
add
mov
sub
shrl
aad
repz
cmp
popa
sti
in
ja
pop
xchg
std
mov
fsubrs
xlat
aad
ret
fbld
jae
add
push
jmp
fdivrp
pop
aam
add
std
popa
mov
flds
pop
fs
insb
testb
sub
xor
fldl
inc
movb
test
addl
decl
sarb
test
mov
test
test
shrb
xchg
repz
sbb
mov
out
int
push
ss
inc
movsl
fs
push
cmpsl
mov
outsl
test
inc
push
sub
pop
mov
in
lret
lcall
rcrb
dec
pop
and
sbb
mov
lcall
add
idiv
and
mov
or
cmp
xchg
std
mov
jmp
lcall
mov
and
sbb
sub
add
and
pop
ret
xlat
jmp
sub
pop
pop
pop
insb
loop
lods
les
insb
jo
xor
lahf
push
mov
push
xlat
ljmp
mov
int3
xor
jne
loopne
int3
mov
into
cmpsl
cld
in
outsb
pushf
pop
add
mov
hlt
dec
in
fsubrp
into
adc
mov
jmp
xor
xlat
fdivrs
fists
inc
or
and
sub
into
push
int3
incb
outsb
adcl
sbb
in
or
les
inc
add
test
mov
sbb
in
mov
aaa
test
cmp
adc
mov
inc
push
iret
lods
xchg
cmp
andb
sub
insl
or
jmp
pop
aas
out
mov
adc
cwtl
xchg
sub
test
and
xchg
inc
or
sub
xor
inc
clc
sahf
cpuid
sahf
lds
sub
pop
sysenter
inc
pop
xchg
mov
pushf
in
repz
rorl
pop
stos
int3
xor
test
aam
and
in
idiv
jns
addr16
fs
mov
xor
jae
xor
rcl
push
ret
pop
or
cmpsb
cmp
jbe
push
xchg
test
inc
xchg
roll
test
mov
fucomp
push
inc
dec
and
sti
pop
pushl
xchg
xchg
mov
test
cld
jno
xlat
addl
pop
xor
add
fcoms
insl
fwait
packssdw
sbb
addr16
lcall
fmuls
xor
xchg
lret
cld
jg
andl
mov
into
adc
lock
mov
sbb
push
xor
shlb
or
dec
or
enter
adc
mov
pop
frstor
outsl
jl
test
aam
sbb
xor
adc
or
das
movsl
mov
dec
dec
nop
test
mov
and
xor
lret
outsl
stos
and
ja
and
dec
sub
js
out
stos
pop
clc
or
adcl
shlb
cld
dec
sbb
icebp
imul
sbb
mov
cmp
sbb
mov
cwtl
dec
imul
lods
pop
xchg
sar
push
xchg
testl
jne
xchg
push
lret
decl
aam
insb
dec
or
call
fwait
mov
fsubp
mov
je
jb
pop
xchg
out
pusha
sbbl
cmp
and
in
mov
je
xchg
addb
sub
ret
and
cld
sub
cltd
cmp
int
adc
stos
dec
or
mov
sbb
cli
push
xor
cmp
loop
sbbl
cwtl
or
aas
inc
jne
cmpsb
and
les
inc
push
xor
jno
adc
lret
mov
cmpsb
fdivl
lock
adc
out
lods
bound
imul
dec
xchg
xchg
cld
xor
lods
sahf
roll
jns
xor
cltd
push
ja
lods
js
sar
cmpsl
adc
rorb
jmp
repz
sub
div
aad
xor
adc
mov
adcb
int
andl
dec
in
out
sbb
pusha
pop
int
xor
mov
mov
xor
push
inc
lahf
lds
scas
push
push
sbb
clc
je
shll
jmp
cmpsl
inc
es
fidivs
out
mov
sub
mov
scas
shll
xchg
push
adc
jle
jne
loop
sbb
sub
fcmovnbe
mov
xor
and
loopne
xchg
sbb
dec
jo
inc
in
mov
loope
xchg
fnstsw
mov
daa
push
xchg
cltd
sbb
sti
xor
mov
sub
outsl
or
mov
xchg
push
and
mov
cli
int
jnp
scas
mov
inc
bound
js
mov
cmp
adc
jns
pop
enter
stos
ljmp
jmp
mov
cltd
jmp
jb
inc
fidivs
loopne
daa
sbb
cmpsl
mov
aam
inc
adc
and
or
daa
mov
in
jne
nop
sbb
dec
add
sbb
adc
mov
sbb
rclb
push
enter
or
out
push
xchg
mov
shr
mov
inc
ljmp
xor
lret
and
arpl
iret
es
push
repz
mov
std
pop
mov
push
push
inc
insb
push
dec
inc
cld
sti
cmpsl
xor
jecxz
or
jbe
xor
pop
lret
push
sbb
test
jno
stos
fcomps
or
push
popa
fidivl
out
push
jp
ss
xchg
sbb
push
sbb
ds
pusha
push
sbb
mov
mov
mov
pop
inc
or
lahf
es
mov
sub
mov
pop
and
out
jne
mov
mov
loope
lret
jecxz
mov
push
push
mov
mov
in
pop
iret
movsl
inc
pop
inc
setns
or
mov
insl
stos
inc
xchg
fwait
jo
lods
and
and
jne
dec
inc
mov
cli
adc
pop
sub
fs
pop
fcoml
jo
push
jnp
je
xchg
popa
testl
xor
add
arpl
loopne
outsl
cs
lds
sub
repz
call
cmc
dec
pop
stos
sub
fcomip
sub
sub
leave
mov
cmp
enter
mov
inc
dec
xor
mov
inc
mov
hlt
sub
push
pop
mov
cs
add
aaa
cmp
movsl
insb
scas
lock
lret
xchg
sbb
in
or
sub
inc
mov
rcrb
das
add
mov
int3
mov
stc
inc
sub
movsl
add
stc
lret
or
scas
mov
ficoms
rclb
stos
inc
push
add
adc
push
xchg
jmp
iret
mov
jmp
jle
push
sub
mov
stc
addr16
push
inc
arpl
add
test
lea
in
outsl
sar
adc
jmp
shl
mov
mov
mov
repnz
cmp
cvtps2pi
int
fildll
faddp
pop
mov
add
mov
rol
aaa
sbb
call
and
scas
scas
stc
lods
sub
nop
sub
jecxz
inc
adcl
js
or
hlt
sarl
stos
xor
nop
psadbw
nopl
mov
int
cmp
mov
and
push
bound
jns
das
cs
mov
gs
ljmp
adc
mov
jge
cwtl
out
fstl
imul
leave
stc
and
int3
push
test
scas
fbstp
repnz
aas
pop
lret
sbb
outsl
insb
imul
dec
mov
int3
hlt
gs
add
xor
stc
cwtl
outsl
xchg
fiadds
ret
mov
pop
or
in
mov
aad
xchg
mov
add
mov
pop
push
xor
stos
hlt
sbb
adcb
imulb
movsl
xchg
sub
imull
out
ds
jno
sbb
mov
jmp
sbb
mov
xor
rclb
arpl
pop
xchg
xorb
stos
shll
xorl
push
mov
push
dec
es
sbb
jl
out
in
repnz
inc
sub
out
cmpsl
sbb
mov
inc
push
push
and
jae
add
and
mov
mov
xchg
pop
aas
add
pusha
pop
pusha
sbb
test
imul
ret
test
pop
mul
adc
pop
push
data16
mov
jecxz
lock
stc
or
movsb
lahf
mov
int3
push
hlt
mov
jns
addr16
xor
testl
xor
pop
loopne
test
push
outsb
ficomps
cmp
shl
rcrl
jg,pn
cs
incb
adc
add
xor
or
and
mov
out
mov
aad
pop
pop
push
notl
movsb
xor
push
jmp
fisubl
inc
mov
lret
scas
jae
pop
aad
int
xlat
mov
fmull
mov
out
lahf
sbb
sbb
inc
pop
mov
xchg
pop
aaa
faddp
js
test
dec
call
inc
call
push
jae
divl
int
test
push
leave
and
int3
outsl
cld
stos
sub
dec
pop
test
leave
lea
nop
adc
movsb
xchg
mov
stos
movsl
xor
rcll
enter
insb
test
sbb
jns
rorl
fstps
hlt
pop
decl
mov
mov
cmp
test
jbe
es
rorb
and
xchg
clc
xor
mov
fcmovnbe
and
dec
xor
jp
xorb
xchg
fdivrp
xchg
cltd
aas
lahf
xor
fnstenv
xchg
insb
push
popa
ljmp
mov
and
sbb
and
mov
push
test
andb
jae
pop
and
clc
movsb
inc
movsl
push
pop
add
divb
subb
in
pop
sbb
inc
xor
adc
jmp
adcl
mov
jmp
aas
cmc
adc
in
inc
gs
adc
mov
pop
lahf
and
pop
cmp
mov
imul
xchg
mov
outsb
imul
mov
pop
iret
hlt
into
aam
sub
lea
mov
add
arpl
and
cmp
shlb
jmp
adc
pop
adc
pop
mov
adc
negl
mov
mov
sub
ss
mov
cmp
jb
insb
sarl
pop
adc
mov
addb
adc
push
mul
mov
sub
inc
mov
cmc
shr
push
mov
xor
bound
pop
xchg
fstl
dec
or
in
out
inc
mov
fcomps
in
dec
ret
push
daa
mov
xchg
loope
sub
stos
bound
xor
pop
jno
xor
sub
sbb
pop
enter
ja
add
sub
hlt
fnsave
out
push
test
jno
les
mov
imul
rol
or
or
jae
aaa
mov
stc
call
pusha
enter
mov
fidivl
in
jle,pn
lret
push
ret
push
stos
mov
jb
loope
lds
mov
pop
cmpsb
add
jae
lahf
test
sub
pop
sti
sahf
mov
or
adc
clc
jge
enter
sbb
pop
loop,pt
imull
das
mov
dec
pop
jns
sbb
xchg
out
adc
out
icebp
mov
out
sti
mov
dec
cmp
and
mov
loop
push
das
mov
and
loope
mov
insl
fucomip
fdivrl
push
lods
lock
jne
pusha
push
push
sarl
aaa
ds
add
pop
rcll
outsl
inc
mov
std
xor
jnp
lahf
sub
cli
pop
jo
imul
lods
ja
jne
or
popa
in
enter
es
pop
dec
mov
mov
ret
js
xchg
xor
cmp
mov
cmpl
mov
lds
sbb
mov
sbb
jb
mov
jle
adc
pop
repnz
mov
dec
push
test
cmpb
lods
or
mov
mov
pop
hlt
and
punpckldq
mov
sbb
push
adc
int3
filds
xchg
stc
cmovo
dec
shl
dec
add
dec
push
fs
xor
inc
pop
fcmovu
and
mov
pop
insl
or
or
inc
nop
add
stos
dec
xchg
cmpsl
ja
push
push
decl
sbb
js
adc
imul
fnstenv
cld
push
xchg
cmp
add
loope
ret
aam
je
jecxz
es
mov
cwtl
xor
stos
sub
push
mov
int3
loop
or
pop
xchg
cmc
dec
or
and
ds
pushf
outsl
and
xlat
or
out
fldt
negl
inc
sbb
xchg
es
mov
adc
test
xlat
outsb
cmp
inc
jmp
inc
pop
cld
sub
notl
and
and
lods
and
out
xor
sbb
add
aam
stos
add
enter
ja
sub
dec
loopne
adc
inc
ret
lock
sbb
push
inc
mov
ja
pop
cmp
pop
push
addl
rolb
daa
int
mov
jle
pop
inc
xchg
loop
jae
jbe
sub
out
mov
adc
add
sbb
pop
enter
shlb
xchg
mov
aad
je
ja
jp
inc
inc
push
xchg
insl
adc
enter
aad
xchg
push
dec
ret
cmpsl
in
mov
jbe
ret
mov
xchg
jle
pushf
dec
add
in
ret
cmp
push
into
mov
dec
xor
orl
adc
xlat
aaa
push
cmpl
bound
cmp
fnsave
cmp
xchg
dec
or
leave
es
mov
xchg
test
cmp
cld
fwait
rcr
pushf
sbb
xchg
les
aas
fsubl
je
mov
pop
dec
sti
and
xor
lock
cmp
mov
add
mov
cs
dec
add
push
popf
fstps
add
push
sub
test
xlat
lea
sbb
inc
data16
push
or
xchg
and
lods
cmp
mov
sub
fwait
xchg
and
mov
jno
adc
xorl
leave
xchg
addb
jge
fs
inc
mov
mov
sbb
mov
lods
ljmp
cmc
pop
xchg
push
jecxz
pop
inc
xchg
mov
movsb
shl
mov
xor
das
mov
adc
jge
fwait
jbe
mov
mov
mov
orb
mov
add
jmp
fcoms
mov
ja
testl
sti
repz
mov
adc
adc
aas
es
stos
xchg
sbb
push
cld
scas
cltd
mov
jecxz
mov
push
lods
pop
dec
js
dec
xchg
jae
iret
push
mov
insl
mov
sbb
loope
lahf
scas
outsb
pop
icebp
pop
or
jae
cld
mov
mov
jmp
faddl
aad
and
fidivrs
aaa
sarl
inc
lret
inc
pop
lcall
mov
pop
inc
or
mov
jge
or
push
inc
sbb
add
pop
out
test
mov
xor
out
mov
stos
sub
or
cmp
and
ja
and
add
out
test
fisubrl
jle
xchg
inc
xor
cmp
mov
in
mov
sub
insb
sbb
into
lea
jo
gs
cmp
jb
cmp
fmul
push
cmp
mov
out
mov
pop
icebp
inc
mov
icebp
pusha
xor
stos
adc
pushf
cltd
and
cmp
dec
cwtl
orl
adc
outsl
xor
xchg
iret
cs
notb
or
data16
xorl
movsb
sarb
imul
adc
clc
add
scas
call
lea
sbb
iret
lcall
jns
pop
sbb
in
mov
and
jne
jecxz
push
mov
fwait
icebp
js
push
mov
xlat
repnz
int
sub
and
dec
lods
mov
push
mov
cmp
outsl
popf
mov
xor
xor
shll
jns
and
das
and
cmp
stos
hlt
nop
push
das
pop
mov
cld
in
jl
popf
jne
insb
frstor
inc
xchg
adc
in
into
jo
ljmp
pop
es
push
pop
xor
popa
pop
arpl
fadds
xchg
sub
ret
adc
addr16
aad
popa
jmp
clc
sbb
dec
add
sub
push
mov
xchg
cmp
sub
sbb
rclb
lret
mov
xchg
sahf
sbbb
xlat
mov
pusha
out
fldt
push
ret
shl
pusha
stc
insb
cmp
mov
xor
call
jo
pop
fsub
int3
pop
inc
jmp
ret
sub
pop
pop
mov
inc
mov
imul
imull
xchg
stos
lods
int3
mov
cmp
fcmovnbe
mov
xor
imul
pop
lods
pop
or
repz
mov
xlat
dec
lcall
shl
mov
cmp
arpl
cs
mov
or
sub
inc
or
cltd
push
rol
sub
shrl
inc
sbb
pop
push
rol
sahf
cltd
cli
in
cmp
add
cwtl
pop
aas
mov
call
bound
jnp
sbb
mov
sti
ja
add
cltd
mov
cmp
lahf
or
outsl
or
mov
fsubrs
or
sub
in
jno
scas
mov
test
xor
int
mov
and
sbb
dec
jl
push
hlt
push
cmp
dec
movsl
pop
loop
xorb
pop
lcall
inc
push
xor
sarb
shlb
and
inc
push
clc
das
in
mov
cmp
pop
ljmp
fs
mov
daa
inc
mov
jge
add
pop
push
or
adcb
xor
pusha
mov
mov
xor
lahf
sub
inc
push
pop
push
push
pop
mov
aam
mov
enter
xchg
leave
sub
daa
mov
dec
jo
dec
iret
sub
cmc
mov
ss
jb
lods
jae
jo
popf
jae
xchg
shl
xchg
inc
cmpsb
adc
out
movsb
add
pop
jb
scas
dec
mov
aad
lods
daa
and
pop
adc
push
sub
pop
fcmove
mov
sbb
mov
es
aam
popa
dec
pop
push
and
mov
rcrb
jg
repz
add
inc
inc
pop
or
les
popa
idivl
enter
test
mov
dec
test
in
sbb
add
jl
adc
add
mov
add
push
arpl
rcrl
xor
mov
mov
cmp
addl
sub
cmp
mov
nop
dec
pushf
addl
lods
xor
leave
dec
jmp
xchg
imul
test
movsl
std
jb
fdivs
int
mov
cs
fisttps
cmp
lea
fmull
sahf
arpl
fnstcw
lods
and
jge
lock
jae
popa
add
arpl
or
sub
js
shrb
int
sbb
pusha
fs
jle
and
test
ss
sub
std
xor
push
pop
inc
mov
fidivs
fiadds
aaa
fucomi
cld
or
pop
add
pop
test
fidivrs
sbb
das
push
loopne
adc
movl
icebp
imul
adcl
xchg
out
daa
adc
fnstcw
push
jmp
dec
sbb
xor
xchg
stos
ljmp
ds
andb
mov
out
mov
in
inc
pop
scas
push
xchg
cli
ret
mov
fidivl
out
in
add
out
data16
push
push
mov
addb
ret
popf
mov
pop
hlt
out
inc
mov
out
cmpsb
lods
xchg
inc
push
in
push
mov
cmp
or
iret
mov
rcrl
mov
inc
pop
ds
add
out
ficomps
sarb
lock
xor
sbb
inc
pushf
orb
pop
addl
outsl
sahf
js
stos
mov
stc
rol
enter
out
mov
sub
mov
fildl
and
ret
std
sub
popf
jno
sub
add
idiv
pop
bound
aas
or
cmpsb
jmp
mov
ds
and
out
jmp
into
pop
cld
dec
xchg
addr16
add
jbe
outsb
jb
sbbb
popf
pop
mov
and
mov
mov
pop
push
jae
pop
aad
outsl
ret
lods
xchg
or
and
in
mov
pop
pop
stos
xor
decl
xor
stos
fldt
cs
pushf
jle
movsb
push
mov
out
cli
and
popa
mov
push
dec
loopne
jo
mov
mov
xchg
shrb
xchg
pop
pusha
int
into
arpl
xor
dec
cmpb
cli
loope
inc
mov
xchg
inc
jp,pn
adc
out
nop
mov
inc
in
push
add
dec
aas
sub
ds
jo
adc
cwtl
xor
js
mov
cwtl
sbbl
and
andl
pop
or
imul
sub
pop
pushf
and
movsb
adc
jge
mov
aas
jbe
jno
adc
lahf
addb
jno
bound
loope
adc
pop
push
jmp
outsl
push
push
and
testb
pop
mov
cs
movsl
mov
jmp
into
sub
mov
shll
test
lcall
loop
sub
popf
mov
push
lahf
pop
repnz
ret
out
mov
cmp
or
or
adc
mov
pop
ss
orl
stos
pusha
add
mov
pop
roll
insb
cmp
leave
jg
xlat
or
pop
sub
pop
xchg
inc
stos
test
adc
inc
mov
pushf
daa
or
out
adc
out
pop
sub
xor
inc
imul
pop
subb
dec
shll
ds
and
sub
adcb
mov
inc
sbb
inc
outsb
or
call
test
add
mov
lahf
and
inc
mov
test
lret
ret
fcom
bound
push
inc
sub
test
mov
sbb
cmpsl
push
outsl
inc
or
xchg
push
xor
rcrl
cwtl
xorb
clc
pop
cmp
outsb
outsb
or
pushf
dec
fcmovnu
ret
jmp
jmp
adc
sbb
rclb
xor
and
aas
mov
imul
push
mov
jl
outsl
mov
scas
or
out
mov
insb
mov
push
loopne
push
mov
mov
pop
and
pop
icebp
in
mov
popf
sub
pop
dec
inc
or
hlt
loop
pop
cmp
xchg
lods
push
xor
xor
je
pop
add
xor
jl
inc
xchg
or
inc
push
fmuls
cli
mov
cmp
adc
xchg
xor
insb
inc
pop
hlt
rorb
ja
xchg
sub
aad
inc
and
mov
add
nop
cmc
test
rolb
rcrb
cwtl
jle
faddl
dec
xchg
jns
xor
sbb
inc
adcl
cs
pop
jae
xor
daa
rcrl
je
andl
out
fists
or
push
xchg
aad
shll
mov
pop
adc
cmp
mov
les
push
lock
fidivs
imul
add
dec
mov
inc
in
mov
test
pop
dec
repnz
push
mov
mov
ss
mov
cwtl
dec
inc
push
jno
lds
fdivrl
stos
adc
shlb
cmp
out
aaa
dec
insb
cmpsl
cmp
xchg
cmp
sbb
or
xchg
clc
xchg
stc
fsubp
xchg
and
ljmp
iret
pop
lock
repnz
out
push
dec
cmp
adc
fsubs
or
movl
call
add
dec
xchg
pop
sarb
arpl
lods
sbb
cwtl
mov
loop
and
push
dec
pop
sbb
fadds
add
out
cmp
repnz
xor
ret
or
dec
mov
fwait
stos
bound
mov
xchg
jle
mov
add
nop
xor
add
div
loope
mov
or
iret
jle
xor
adc
adc
push
loop
pushf
repnz
push
shrb
add
lret
push
pop
adc
sub
or
ds
xchg
fidivrs
cmpsb
imul
mov
rorb
mov
cmp
int3
orb
aam
push
push
adc
cli
lahf
test
add
int3
mov
mov
push
push
call
pop
xor
fildll
jne,pn
and
pop
iret
adc
test
pusha
inc
pop
xchg
jg
xor
adc
pop
repnz
aaa
cwtl
std
imulb
push
ds
int
stc
cli
js
cmp
stos
mov
bound
adc
sahf
stos
mov
mov
add
in
cmp
repz
jne
mov
mov
jae
xchg
test
push
and
mov
add
out
fadds
xchg
inc
jecxz
out
call
mov
scas
sbb
add
pushf
jp
rol
fistl
fsubrp
sti
cmpsl
and
pop
inc
cltd
mov
adc
hlt
cmp
inc
dec
pop
adc
sub
shr
das
outsb
xor
stos
push
pop
dec
xchg
sub
xchg
aad
push
insl
inc
subb
sbb
int
divl
or
push
xor
cmc
repnz
test
sub
sub
cmc
orb
add
adc
pop
mov
lock
test
mov
outsl
add
test
dec
pop
les
cmp
std
ss
lahf
pop
subb
mov
test
cli
rcll
cmp
mov
icebp
cmp
fildl
push
enter
xlat
data16
jno
rcll
ja
cmpsb
dec
push
xlat
push
and
cwtl
cli
es
xchg
xor
sbb
and
popf
jecxz
push
push
xchg
lods
test
ljmp
mov
subl
in
mov
lret
movsb
pop
stos
dec
int3
cmpsb
adc
adc
mov
test
push
jae
out
mov
scas
pop
iret
jnp
dec
push
xor
insb
loope
pop
mov
into
mov
pop
sbb
inc
mov
mov
ljmp
or
xorl
adc
test
ja
push
mov
pop
adc
sub
sub
rcll
out
push
insl
enter
cmp
mov
fs
loop
cmpsl
subl
test
sbb
cs
push
and
or
fldl
dec
rcll
cmc
cmpl
pop
out
push
in
cmp
or
fbld
lock
pop
xor
cmovae
adc
stos
ret
pushf
in
js
xchg
cltd
out
jae
add
stos
out
aas
jecxz
mov
iret
cwtl
mov
test
jge
movsl
scas
adc
mov
mov
jmp
xor
mov
or
and
or
das
push
xchg
pop
ds
incb
testl
or
int
and
cmpsb
test
mov
push
add
push
lea
inc
cmc
insl
pop
in
and
xor
sbb
js
xchg
or
dec
mov
insl
imul
add
cltd
shr
add
lods
xor
fmull
xchg
cmp
mov
push
dec
pop
ret
inc
add
stc
imull
xchg
xchg
shlb
lret
ss
imul
subl
pushf
addr16
adc
and
mov
pop
push
sbb
clc
or
sub
shrb
aaa
push
jae
sbb
mov
inc
xor
inc
test
and
add
cli
and
xchg
xchg
mov
cmpsb
sbb
xorb
inc
push
push
dec
jmp
lods
and
adc
mov
xor
mov
gs
stos
sbb
in
push
js
jne
cmpb
push
push
inc
push
loop
sti
bound
mov
sub
jae
and
jl
xlat
dec
mov
adc
negb
mov
mov
add
mov
push
aas
cmp
xor
sub
repnz
insl
push
mov
je
std
jbe
and
xor
or
mov
pop
shlb
out
fiaddl
jp
in
xor
scas
mov
mov
push
inc
sub
into
testl
mov
inc
icebp
lahf
in
pop
lods
push
and
xor
cmp
in
add
cmc
push
mov
pop
nop
dec
repz
pop
hlt
adc
ds
lods
jl
lahf
jecxz
mov
xchg
dec
loopne
mov
or
stc
std
jb
cmp
out
outsb
push
adc
daa
lods
test
aas
cmp
sub
mov
dec
xchg
xchg
xor
outsb
mov
mov
mov
loope
sub
mov
pop
ret
repnz
lahf
sbb
lods
xor
add
adc
ljmp
cli
jp
sbb
push
mov
cli
lock
in
enter
aaa
les
out
pushw
xchg
cld
push
jl
sahf
mov
add
mov
mov
ss
imul
xchg
imul
xchg
sbbl
sub
stos
push
mov
aam
push
sbb
mov
push
repnz
lods
lock
cmp
or
in
xchg
negb
push
cmc
jns
xor
test
mov
test
outsb
and
xchg
mov
jecxz
loope
mov
push
stos
call
jp
lcall
les
inc
lock
aas
outsl
repz
mov
ret
mov
in
iret
mov
call
subb
fdivr
adc
xor
cltd
add
adc
jge
rcll
xor
or
sti
das
pushf
mov
in
insb
jnp
or
aaa
mov
lods
out
or
pop
jg
leave
mov
inc
inc
inc
je
mov
xchg
mov
js
call
mov
jae
dec
push
pop
add
cmp
int3
cmp
ljmp
dec
xchg
jne
mov
outsl
push
cmpsb
mov
imul
out
dec
jmp
xchg
insb
ficoml
fdivs
pop
fstpl
cmpb
fbstp
push
jle
adcb
pop
xchg
lahf
popa
push
fstl
mov
xor
fcmovne
mov
fld
decl
dec
xchg
popf
das
loop
and
inc
bound
mov
pop
in
sub
out
lret
cltd
sbb
mov
loop
push
out
push
imul
aas
in
mov
mov
adc
out
xchg
mov
cld
push
push
ret
data16
push
pop
sub
test
add
mov
inc
into
or
ds
cmp
pop
mov
arpl
arpl
test
inc
loop
jae
insb
mov
push
mov
loop
mov
dec
int
inc
jnp
ja
mov
sub
loop
mov
test
xchg
mov
pusha
mov
adc
push
mov
push
push
xchg
inc
mov
cli
fbld
fldcw
xchg
cmpsb
mov
mov
in
and
arpl
stc
aas
xchg
aam
pop
cltd
sar
fucomip
dec
ret
lret
jbe
cmp
fwait
sbb
out
popf
rcr
cmp
xchg
sahf
push
cs
icebp
mov
jle
sbbl
rcrb
cli
fists
mov
loopne
outsb
xorb
stc
sub
inc
jmp
shr
loopne
decb
and
hlt
adc
test
mov
jb
cmp
mov
aad
xor
ret
adc
insl
xor
pusha
arpl
enter
or
or
push
inc
mov
dec
push
jmp
push
sarb
fidivs
mov
fstps
addr16
mov
loopne
loopne
xchg
bswap
arpl
xchg
gs
pop
ret
pop
jl
mov
or
add
pop
jae
fisttpll
pop
notb
add
subb
cmp
std
arpl
aas
outsb
repnz
and
add
in
jae
and
mov
sbb
xor
ret
incb
pop
xchg
iret
lods
out
add
xchg
or
mov
dec
lret
hlt
cltd
sbb
lretw
jl
std
cmp
and
adc
nop
jno
shr
movsl
es
inc
mov
inc
rorl
dec
movsl
and
pop
inc
outsl
imul
sbb
adc
adc
js
and
out
int3
pop
fcmovbe
pop
icebp
pop
sti
or
or
sbb
idivl
leave
and
push
dec
ss
dec
mov
mov
std
xlat
stos
insb
dec
outsl
cmpsb
jmp
adc
push
test
jp
and
dec
fsubs
xorb
rcr
mov
arpl
gs
gs
imul
xor
adc
mov
lea
or
mov
add
pop
iret
pop
add
jno
in
lret
and
iret
cs
shll
lock
rolb
cmp
ljmp
xor
popf
pusha
pop
xchg
pop
pop
push
jg
jne
adc
cmc
rcrl
and
lahf
fisubrl
mov
mov
adcb
cmp
add
stc
cmp
xor
push
xorb
xchg
sbb
cmp
les
lods
insb
mov
fs
les
fldenv
pusha
pop
jge
cld
clc
push
inc
inc
daa
clc
test
mov
and
daa
or
cmp
mov
or
mov
jb
addr16
ret
in
mov
sbb
sub
mov
mov
jl
jmp
sbb
mov
inc
mov
jmp
push
dec
testb
push
mov
push
lods
les
sbbb
adc
bound
mov
sbb
or
xor
mov
pop
sbb
enter
mov
out
xchg
lret
jp
mov
addr16
es
out
sbb
fwait
orb
jae
mov
aas
subl
pop
add
inc
mov
das
jb
inc
mov
xchg
fmull
pop
pop
mov
movsb
adc
cmp
imul
fs
roll
in
loopne
in
lock
ret
andb
adc
aaa
mov
xchg
std
jb
mov
inc
sub
test
add
xchg
mov
incl
sub
fstl
push
push
mov
lods
adc
shll
cmpb
int
int
sbb
iret
sbbb
xchg
clc
aam
push
icebp
sub
movsl
xor
inc
xor
xchg
jp
fwait
xchg
mov
sbb
pop
rorl
lods
jp
sbb
cltd
xor
int
rcrl
pop
dec
pop
jg
mov
shlb
mov
in
push
inc
dec
mov
cmp
lcall
jb
push
in
add
pop
and
jl
jle
lcall
jbe
add
popf
aaa
sbb
arpl
and
lret
mov
test
adc
sbb
fisttps
jl
int3
stos
mov
ds
sar
paddusw
ret
adc
jbe
jne
sub
xchg
lea
inc
arpl
movsb
aaa
dec
and
cmp
mov
fldenv
sbbb
pop
jns
ja
pop
pop
dec
out
push
in
push
hlt
stos
fdivrl
pop
data16
pusha
sbb
mov
adc
popa
mov
pop
lods
or
sbb
mov
mov
rorb
loopne
mov
cltd
lds
and
outsb
aaa
xchg
cmp
shrl
cmpsb
xor
mov
cmpsb
imul
inc
fistpll
imul
push
dec
mov
test
adcb
mov
addl
scas
cs
lea
fisttpll
fildl
dec
add
icebp
ja
xchg
pop
dec
insb
sbb
inc
cld
adc
lea
jp
mov
mov
adc
das
pop
cld
imul
out
out
inc
dec
inc
inc
fs
sbb
repz
mov
mov
mov
dec
or
fwait
stos
std
mov
in
outsb
mov
cmp
ds
sbb
in
and
xchg
call
xor
and
das
psubw
sub
loopne
ljmp
jl
xchg
adc
push
movsl
pop
dec
aam
xor
out
shl
imul
mov
push
loopne
add
test
mov
daa
jecxz
add
mov
shll
gs
je
xchg
lcall
pop
popa
inc
bound
add
jg
pop
data16
cmp
adc
inc
pop
mov
nop
cmp
loop
push
leave
fstpl
jne
notb
jnp
pop
mov
sbb
jbe
dec
jb
add
test
andb
xor
jne
or
sub
das
sarl
push
push
pop
fistl
scas
xor
xchg
in
jne
mov
dec
pop
sbb
dec
cmpsb
mov
rorl
pop
sub
cmp
inc
pushf
fwait
std
or
mov
arpl
lret
addb
test
push
int3
dec
ret
push
sarl
inc
fucomp
iret
imul
cmp
movsb
popf
or
mov
cmp
add
test
push
jae
lock
jmp
xor
sbb
dec
ljmp
jl
ds
pop
or
jge
add
bound
mov
sub
pusha
push
add
test
movsl
arpl
mov
outsl
mov
mov
in
das
stos
xchg
outsl
adc
mov
pop
fwait
dec
icebp
inc
mov
dec
adc
pop
cmp
mov
pop
inc
in
call
jne
sub
test
push
iret
sub
jne
lahf
pop
sub
iret
invd
xchg
add
inc
jle
mov
jno
jmp
in
dec
pop
fidivrl
inc
jnp
push
mov
cmp
pop
mov
outsl
dec
int
adc
sub
fbld
inc
add
dec
push
pop
lock
in
out
jmp
in
fiaddl
mov
out
imul
or
sub
push
dec
daa
sbb
paddusb
inc
stos
jmp
inc
dec
mov
xchg
jge
addl
repnz
mov
divb
pop
push
jl
fs
test
imul
mov
outsl
mov
lods
pop
in
dec
mov
cmpsb
and
mov
subl
or
leave
xchg
push
mov
xchg
mov
les
movsl
call
loop
mov
xchg
mov
pushf
call
pop
pop
and
cltd
mov
popa
jmp
jo
rclb
rolb
push
push
ja
add
xchg
call
popa
addb
mov
xor
les
call
pop
mov
test
repz
imul
jnp
imul
inc
outsl
lret
mov
mov
movsb
stos
sbb
shrb
fdivrs
inc
or
xchg
cmp
jb
fimull
jnp
mov
mov
adc
es
xchg
sti
mov
jmp
mov
adc
scas
cs
lret
test
sub
push
stos
fisttpl
ds
std
nop
or
rcrb
inc
lea
adc
sbb
das
mov
outsb
shlb
cmp
cld
lds
stc
int3
mov
inc
add
mov
lret
xchg
int3
fcomps
clc
repnz
mov
inc
insb
imul
cmp
mov
in
cmp
rclb
call
cld
mov
ret
mov
jecxz
in
cltd
rcll
adcl
loop
and
mov
test
inc
aas
mov
dec
pop
or
fimuls
cmpsl
shlb
ds
or
cltd
pop
jae
arpl
inc
out
in
adc
sub
sub
imul
sti
mov
mov
aas
push
dec
sbb
fadds
and
lock
xor
add
aaa
pop
cmp
loop
in
aaa
inc
mov
out
out
mov
add
out
xchg
sub
mov
fsubs
aad
imul
mov
adc
push
lods
scas
in
in
add
fwait
jb
jge
or
cwtl
or
lcall
cmc
xchg
movsl
test
or
or
addr16
leave
adcb
insl
cmc
jbe
xchg
addl
sub
sbb
mov
or
jecxz
test
fistpll
outsb
insl
lret
dec
int
inc
cmc
aam
popa
xchg
push
cmp
mov
pushf
fisubl
fstl
sti
adc
inc
jecxz
adc
cmpb
enter
mov
test
sahf
faddl
lods
js
push
push
and
mov
push
int
mov
jo
push
test
sub
sbb
out
mov
sbb
lds
arpl
and
push
jl
jmp
cli
push
sbb
inc
pop
or
mov
lods
into
jmp
push
pop
push
movsb
jge
ror
ds
jbe
leave
ret
lods
jnp
mov
into
add
jg
push
cmp
stos
xor
fadds
and
or
and
aaa
movsl
pusha
out
loop
xor
adc
imulb
jmp
mov
stos
int3
add
cld
cmp
je
sub
jle
cmpsb
sbb
sar
lahf
cltd
adc
jae
pop
jnp
or
dec
ds
popf
adc
sarl
cmpsb
into
cmp
add
call
mov
sarl
jecxz
lret
cmp
add
stc
mov
and
and
xchg
mov
mov
aas
mov
or
sbb
pop
sti
outsb
imul
jae
mov
mov
sub
mov
ret
inc
fwait
xchg
or
xchg
fcmovb
and
push
aad
xlat
and
repz
pop
fcomi
lea
mov
jo
aam
lret
xor
fdivs
sub
fistpll
fmull
xor
pop
test
mov
out
jmp
jae
mov
sbb
pop
fisttpll
xchg
in
cmp
test
or
aaa
mov
cmp
jnp
push
dec
icebp
movsl
push
inc
movnti
or
je
mov
movsb
rcll
ss
mov
paddsw
lcall
mov
jecxz
lods
xchg
push
add
jne
hlt
je
mov
mov
lds
sub
push
shlb
or
aas
add
mov
mov
test
mov
add
pop
test
inc
sub
jo
push
cld
mov
dec
fs
pop
mov
mov
adc
loope
xchg
sub
cmc
mov
jge
hlt
add
ja
ror
outsl
mov
push
push
dec
test
cmp
cmp
cwtl
jb
sbb
icebp
push
outsb
xchg
sti
pop
pop
sbb
xor
cwtl
sbbl
cmpsl
test
sbb
daa
jno
lahf
adc
sub
aad
push
push
jnp
xorb
aaa
cld
push
popf
pop
sub
xor
inc
mov
push
mov
cmp
imul
jmp
int
cmp
rcll
push
mov
mov
andl
out
dec
mov
aas
and
mov
out
adc
mov
cmp
dec
dec
mov
jns
inc
repz
testb
out
mov
jnp
jbe
add
push
bound
loopne
lahf
or
mov
jo
movsb
imul
addb
jp
add
dec
cmp
data16
xor
inc
push
lret
push
in
mov
pop
xchg
mov
dec
sarl
icebp
sahf
or
and
mov
xchg
stos
out
out
fs
push
cmp
adc
dec
out
addr16
pushf
xor
out
xchg
jae
ljmp
ja
insl
xchg
jle
pop
mov
mov
cs
ja
dec
int
sbb
adc
xchg
or
mov
push
hlt
jp
ret
in
or
shrl
stos
mov
mov
daa
mov
mov
pop
aas
fdiv
cmc
jmp
push
sub
loopne
mov
sbb
push
mov
test
imul
dec
xlat
xchg
pushl
sub
dec
jp
or
push
push
mov
jae
cmp
inc
test
std
mov
in
popaw
repnz
adc
pop
js
cmp
fwait
xorl
mov
mov
add
mov
jl
ret
sub
add
hlt
test
mov
cltd
or
push
rolb
pop
aaa
pop
sbb
xchg
cmp
out
jp
cmpsl
mov
das
mov
cmp
ficomps
cmpsb
adc
sub
push
lock
xchg
or
scas
inc
loop
sub
repnz
int3
jo
mov
cli
test
xchg
int
andb
jmp
xor
outsl
push
jae
mov
fstpl
iret
push
or
push
mov
into
adc
xchg
imull
pop
or
or
int3
fcompl
cs
test
inc
mov
out
imul
cmc
call
add
loop
std
xchg
sarl
push
xor
add
outsb
mov
push
inc
xor
sub
inc
loopne
aam
out
loop
xchg
or
aam
dec
mov
push
mov
ret
sub
mov
cmp
fsubs
adc
jo
das
int3
test
mulb
mov
jle
xor
inc
fnstenv
mov
mov
cmp
decl
xchg
fdiv
scas
push
mov
in
xchg
shlb
and
lds
lret
in
and
push
enter
adc
stos
stos
add
lret
lods
test
xchg
lahf
scas
adc
sbb
and
mov
cld
add
mov
xchg
leave
and
in
pushf
movsb
and
pop
xchg
sub
bound
dec
arpl
push
adc
mov
scas
fmull
js
mov
rorb
in
push
popa
push
push
push
incb
jle
movsw
xor
ret
dec
xchg
sbb
push
je
jl
lea
pop
loope
out
mov
cmpsb
or
sbb
cmpsb
lods
incb
mov
scas
push
test
repz
push
xchg
pop
sbb
dec
jp
mov
mov
pop
pop
dec
or
mov
pop
roll
sahf
mov
xlat
xor
and
jbe
test
insl
xchg
cmp
push
add
cltd
cmp
xchg
shlw
pop
push
xchg
idiv
jno
mov
popa
insl
and
mov
fisttpl
movsl
inc
mov
test
push
or
aad
leave
std
xchg
add
addr16
ret
dec
pop
jle
stos
lret
pushf
out
push
lahf
lahf
cmp
push
and
imul
jo
mov
ret
outsl
and
pop
xchg
jbe
xchg
dec
and
call
jle
lods
in
pop
sbb
pop
or
lcall
jp
dec
enter
dec
adc
cmp
and
ss
pop
push
sub
xchg
inc
mov
mov
jno
stc
or
test
fsubrp
add
sti
cwtl
in
fs
stos
cwtl
adc
in
push
int3
iret
mov
mov
adcb
mov
push
xchg
mov
adc
push
or
test
mov
add
dec
cli
notb
adc
in
push
popa
jmp
and
pop
or
out
ds
mov
inc
aaa
jne
cld
push
call
sub
pop
es
jno
fisttps
hlt
dec
mov
adcl
mov
jle
js
push
xor
scas
jns
sbb
sub
fcoms
fsubl
fwait
lcall
inc
jb
int3
enter
mov
adc
adc
insb
aam
out
nop
mov
or
jbe
adc
mov
test
notrack
jg
fisubs
ja
sbb
and
stc
aad
inc
jmp
test
test
dec
dec
push
xchg
into
jbe
aam
and
add
sbb
pop
loope
cltd
inc
jns
test
aad
or
or
je
fiadds
loopne
subb
js
xor
mov
or
sbbl
cli
sub
je
or
adc
dec
push
dec
push
dec
sahf
sbb
icebp
imul
test
aaa
mov
push
mov
in
jno
daa
sbb
aad
ret
daa
dec
test
fdivl
cld
mov
jae
xchg
dec
or
cs
sti
ret
cltd
inc
arpl
in
fcompl
push
sbb
push
movsb
icebp
out
lock
xor
cmpsb
insb
clc
adc
fsub
jnp
and
sahf
jo
int3
mov
push
push
xor
stos
cld
imul
or
or
cli
dec
sub
test
adc
add
adc
pop
add
movsb
ja
cmp
push
aam
cltd
aas
cmp
jle
inc
sbb
xor
inc
xor
cmpsl
cmp
ret
fisttpl
push
cltd
lea
jle
or
mov
xor
add
pop
ret
fucomi
pop
mov
xchg
mov
pop
adc
jl
inc
in
js
pushf
insl
push
sbb
xchg
jns
jno
repnz
scas
xor
sub
push
xor
mov
bswap
pop
enter
in
outsb
loop
pop
ds
cmp
jb
iret
les
lods
enter
call
cmovge
test
xchg
cmp
repnz
cmp
test
bound
push
xor
or
add
clc
bound
vpmulhuw
push
jb
sar
arpl
icebp
je
addr16
loopne
add
sbb
push
add
incb
jg
pop
xchg
cltd
arpl
adc
adc
mov
xor
cmpsl
in
scas
test
push
pushf
ret
push
lcall
arpl
shlb
pop
add
nop
jg
sub
subb
outsb
mov
imull
fsubs
loopne
test
xchg
test
incl
rclb
insb
insb
insb
or
cwtl
push
loopne
and
test
dec
lds
jl
mov
push
gs
aas
test
sub
adc
in
fwait
leave
jmp
in
ret
mov
and
cmc
loopne
mov
fsubrl
cwtl
jmp
lret
push
loop
pop
adc
cmp
out
fistpl
nop
loopne
idivl
adc
pop
loopne
sahf
nop
inc
lds
cltd
inc
pop
les
and
xchg
mov
ds
cs
cli
dec
and
sub
push
repnz
das
jle
out
lahf
orl
imul
repz
out
and
xor
insl
ds
xor
ret
cld
data16
loop
in
mov
jb
sbb
test
addr16
xchg
lds
push
movl
mov
mov
ja
mov
mov
ljmp
adc
roll
jle
mov
cld
cld
xchg
pop
xor
outsb
inc
push
lods
add
mov
in
inc
test
shl
addl
loop
or
sub
jo
not
aas
jecxz
cmp
cmp
sub
jo
xor
ds
push
jl
add
js
add
leave
cmp
adc
cld
inc
ret
adc
repz
movhps
ret
sar
pusha
or
frstor
cmp
mov
ljmp
ss
js
std
cmp
and
movsb
testb
xchg
jge
xchg
and
sbb
sbb
sahf
push
decb
inc
clc
das
lods
out
sbb
pop
mov
jecxz
mov
arpl
pop
or
shrb
jbe
mov
mov
xchg
xchg
push
lea
adc
or
in
push
mov
popa
aas
mov
cltd
jecxz
imul
and
jno
cwtl
mov
pop
push
pop
testl
mov
insb
jg
adc
into
dec
lcall
test
mov
jno
mull
jae
in
sti
sub
test
stos
inc
stos
pop
and
and
loopne
cmpsl
aaa
in
pop
xor
add
and
aaa
icebp
pop
imul
fwait
mov
jno
xchg
dec
xchg
mov
push
insb
jle
push
sub
sub
jecxz
jne
sahf
pop
out
outsl
sar
lods
jmp
ljmp
outsb
lahf
sub
sub
rorl
xchg
mov
jae
lret
and
dec
sub
inc
sbb
dec
mov
xlat
mulb
xchg
adc
aaa
inc
mov
add
lcall
movsb
test
cmp
ficomps
inc
shll
stos
test
ljmp
cmp
jmp
aad
mov
push
lcall
inc
js
pusha
pop
cmp
inc
jle
or
ret
pop
adc
fidivs
shr
into
xchg
adc
mov
and
enter
mov
cmp
cmp
or
negb
movsb
mov
in
xchg
imul
in
test
mov
scas
inc
orb
cmpsb
jmp
mov
pop
adc
mov
mov
std
in
xor
jb
sbb
mov
ds
jmp
jmp
stc
jp
fs
lret
xor
icebp
mov
rorb
or
inc
add
scas
rol
xor
add
cmpsl
sbb
inc
xor
mov
cmpsb
bound
add
mov
pusha
mov
xorl
cmpb
gs
dec
into
cmp
int
stc
sarl
rcll
pop
out
movsb
insb
scas
inc
jp
bound
jg
std
adc
pop
ds
loopne
int3
lods
lds
sti
jp
and
push
dec
mov
js
insl
shlb
sbb
adc
ss
push
je
stos
push
sbb
test
mov
jno
pop
movsb
sbb
sti
stc
jmp
mov
es
push
jl
push
in
xor
mov
or
jbe
cli
push
dec
mov
push
push
data16
ja
test
sbb
inc
ffree
jle
and
inc
cltd
setg
jne
dec
jbe
adc
pop
cmp
sub
orl
stos
push
mov
out
and
mov
repnz
cwtl
mov
lods
dec
addps
in
cmc
scas
jb
xchg
add
push
or
je
mov
das
pop
out
sbb
popf
pop
xor
test
mov
adc
stc
mov
nop
jle
enter
xlat
lcall
js
js
dec
xchg
jae
pusha
inc
pop
adc
int
and
push
fisttpll
mov
daa
cmc
pop
in
dec
push
aas
mov
pop
mov
xlat
and
xchg
jecxz
push
pop
xchg
add
mov
or
dec
imul
jne
and
mov
xchg
push
lret
sarb
jo
sbb
cmp
outsb
push
daa
sbb
xor
dec
mov
inc
push
ret
sub
mov
mov
dec
jnp
lret
stos
or
call
hlt
aam
sub
jno
or
in
mov
xor
adc
bound
mov
clc
aas
nop
mov
xchg
mov
ficoml
push
sti
loop
dec
icebp
incb
mov
dec
cmp
repnz
daa
xchg
movb
testl
or
mov
or
ds
push
xchg
fildll
fdivs
mov
addr16
push
adc
add
int3
push
mov
jmp
sbb
mov
push
les
jnp
stos
dec
push
sub
mov
xor
xchg
inc
dec
lock
sbb
rorl
gs
mov
push
push
mov
push
push
bound
cmpl
hlt
mov
loop
inc
push
pop
loopne
xchg
sub
rcrb
push
clc
jmp
jmp
pop
lea
int3
popf
test
bound
out
inc
shrl
sbb
cld
ljmp
mov
xchg
adc
orb
sub
ja
cmp
adc
xchg
rcll
cli
ret
imul
push
push
iret
and
pusha
mov
repz
and
in
sub
jbe
xor
stos
sbb
aaa
test
cmpsl
sbb
jp
xor
leave
shlb
std
mov
bound
sub
scas
mov
mov
xor
cltd
or
add
jnp
in
add
inc
sahf
jno
mov
fstps
inc
mov
xchg
adc
pop
insb
add
das
in
and
mov
cmpsb
loopne
clc
ret
aas
pushf
insb
mov
sub
test
subb
xchg
cmp
out
lds
int3
jmp
cld
fildll
nop
add
push
jl
jl
repz
pop
adcb
and
ss
jmp
and
scas
fs
loop
inc
add
loope
push
fcoml
xchg
mov
add
arpl
pop
cmpsb
jl
movb
jnp
mov
jp
push
xchg
xchg
mov
repnz
clc
dec
mov
push
fistps
shll
push
stc
sub
jae
adc
jecxz
pusha
test
shlb
cmp
lret
and
jecxz
push
xchg
mov
es
pop
xchg
lea
sbb
cmpsb
adc
lock
cmpsl
dec
inc
lahf
sub
push
inc
pop
mov
fisttpl
or
or
mov
ja
or
mov
data16
push
pop
push
xor
mov
adc
jp
cwtl
mov
jecxz
jmp
int3
fidivrl
jo
ds
inc
sbb
cli
std
out
adc
loop
jae
cmp
pop
scas
in
xchg
aaa
add
in
loope
stos
repz
xchg
jle
nop
pusha
mov
pop
hlt
mov
add
daa
push
adc
outsl
xlat
xor
nop
xchg
inc
pusha
xchg
jne
and
div
ret
push
ret
lret
inc
loopne
mov
mov
mov
jle
xlat
mov
push
lods
jge
xchg
call
into
mov
aaa
ds
dec
aas
dec
div
or
and
push
xchg
arpl
mov
es
iret
jle
xchg
lea
test
insl
mov
add
fldln2
push
imul
and
pop
pusha
jl
int3
lods
test
and
mov
mov
sub
mov
icebp
mov
cmp
push
add
pop
add
xchg
dec
dec
addb
cmp
fs
mov
mov
movsb
sbb
push
dec
dec
stos
cmpsb
pusha
pusha
inc
xorl
jae
loopne
shlb
rorb
cwtl
mov
pop
fnstcw
pop
add
out
push
adc
pavgw
mov
nop
pop
inc
or
dec
adc
ja
jnp
fistpll
pop
addb
pop
dec
cmp
daa
jb
mov
mov
js
inc
sub
stos
or
daa
divps
inc
or
pop
push
repnz
leave
adc
outsb
cwtl
pop
hlt
inc
lret
mov
iret
das
mov
xlat
jmp
add
leave
outsb
loop
fs
xorb
dec
loope
xchg
int
lock
or
lret
mov
test
push
push
push
adc
imul
jg
aas
cmp
das
add
decb
mov
and
mov
int3
pop
icebp
cmpb
push
aas
sbb
movsl
js
sub
cs
orb
into
mov
insl
andb
mov
and
shlb
insl
fs
xchg
fnstsw
jl
xor
pop
mov
inc
mov
jo
int
lods
scas
jecxz
stc
xchg
push
fs
xchg
fstps
orl
mov
jns
xchg
mov
add
scas
pop
xor
mov
xor
imul
xchg
pop
jae
sbb
lods
popf
dec
inc
insb
sar
jo
xor
stos
jecxz
test
jnp
sbb
into
ljmp
fisubrs
jo
jno
pop
push
aas
cld
xor
lods
mov
xor
pop
sub
int
rorl
and
mov
push
repz
lea
cmc
xchg
fcomps
sbb
subl
adc
mov
mov
inc
and
inc
repnz
xor
jns
cmpsl
mov
add
inc
dec
out
jle
cltd
dec
and
in
mov
nop
inc
mov
cmp
mov
out
mov
inc
mov
test
mov
scas
push
test
pushf
pop
cwtl
mov
adc
icebp
pop
sub
fildll
test
xchg
xchg
xlat
mov
pop
push
std
aaa
cmc
fildl
push
loop
out
mov
push
xor
jns
sub
scas
mov
and
push
outsl
mov
gs
push
dec
ret
push
leave
stos
push
shrb
out
pop
stc
inc
out
ffreep
pop
mov
xor
or
inc
sbb
and
jne
into
jno
jns
iret
stc
mov
dec
dec
bound
xchg
arpl
pop
rorb
fadds
mov
pop
dec
push
jg
adc
arpl
xchg
push
dec
loop
xchg
pop
cmpb
xchg
and
mov
or
cltd
cli
test
jns
push
ds
roll
pop
mov
jle
pop
lds
mov
rcl
pop
jno,pt
cltd
dec
ss
into
fildl
pop
sub
lahf
xor
es
push
cmp
call
push
mov
sbb
xchg
xchg
add
fldt
loope
and
pop
mov
cmp
mov
push
push
cmpsl
cmc
mov
mov
or
xchg
xor
jnp
jmp
mov
fidivrl
imul
scas
fmuls
inc
repnz
mov
imul
push
and
and
inc
push
jecxz
cmpb
mov
push
loopne
adc
cli
addr16
in
push
insb
jge
fwait
sub
pop
mov
insl
dec
xor
movsl
xor
shrb
pop
mov
adc
push
les
fimuls
dec
push
mov
stos
jg
pop
sub
push
xor
imull
out
fcomps
adc
lcall
add
outsl
sbb
xchg
cmpsl
xor
mov
mov
data16
push
stos
pushf
mov
ds
mov
dec
imul
ja
rcrb
data16
sbb
int3
mov
popa
cwtl
outsb
add
stos
inc
lcall
movsl
ret
mov
daa
sub
push
sbb
push
clc
dec
repnz
jo
sbbb
inc
aaa
push
rcrb
xor
mov
jno
cmpl
pop
negl
fidivrs
dec
test
ret
in
fimuls
push
adc
cmp
in
rcrb
test
loopne
xlat
inc
jle
xchg
adc
lret
cmpsb
sbb
insl
xor
aaa
outsb
scas
inc
mov
inc
sbb
xor
and
xor
xchg
icebp
sbb
daa
lahf
sub
popa
push
fcoml
add
inc
std
cmp
jge
dec
pushf
insb
and
add
ss
call
gs
fdivr
dec
clc
xchg
cmpsb
pop
cmp
inc
fidivl
jae
stos
push
insl
or
fs
gs
xor
bound
outsb
lds
mov
test
mov
mov
ss
int
jl
and
pop
enter
push
movsl
sub
add
es
adc
mov
loope
ror
push
outsl
xchg
lahf
adc
cmp
loop
pop
push
adc
xor
mov
add
cmp
fadd
push
bound
pop
fdivrs
add
pop
into
fmull
mov
clc
xor
je
fildll
jns
bswap
fsubrs
fstpl
and
insb
mov
pushf
mov
outsb
testb
jae
test
mov
mov
adcl
ljmp
or
sbb
pop
stos
inc
jge
mov
xchg
sbb
xor
and
xchg
cmp
cmp
xor
fadds
mov
out
jb
sub
subl
sub
sbb
pop
jge
jnp
mov
inc
testb
outsb
pop
push
fcoml
mov
imulb
mov
loopne
movups
cli
movsb
or
or
add
jbe
adc
mov
mov
and
pop
lcall
repz
dec
jp
add
clc
xchg
gs
in
aas
lds
lcall
dec
push
cmpsb
push
dec
mov
call
mov
dec
shl
inc
sbb
shrl
sti
es
jg
mov
ds
je
out
scas
outsl
cli
test
and
mov
into
data16
in
inc
out
int3
sbb
icebp
aas
adc
loop
and
pop
das
push
lea
mov
addl
frstor
ja
push
sahf
into
shrb
nop
repnz
hlt
mov
sbb
push
out
and
lods
es
add
jl
jno
jecxz
cmp
cmp
push
mov
sub
sub
out
inc
cwtl
in
stos
lcall
insb
enter
inc
push
mov
lcall
and
mov
sbb
xchg
ret
sti
sub
ret
dec
push
inc
js
adc
dec
pop
or
repnz
cmpsl
andb
je
xor
and
mov
cmpsl
int3
repnz
add
orb
and
mov
sbb
sub
ds
dec
call
in
push
pop
adc
dec
xor
in
movd
aas
push
xchg
je
stos
cmpsb
shrb
jecxz
bound
mov
mov
fidivrl
test
out
sbb
cmp
scas
xlat
push
pop
ret
fldl
mov
mov
cwtl
fcomi
cmp
and
fimuls
dec
daa
cwtl
testl
mull
call
or
mov
push
fwait
mov
je
push
ds
adc
addr16
mov
adc
xor
mov
fimull
cltd
dec
mov
enter
adc
jns
mov
insl
je,pn
incb
repnz
pushf
adc
mov
jne
sbb
sub
jl
jmp
add
xchg
test
rcll
adc
push
mov
push
test
scas
xchg
rorl
fistpl
add
sbb
aas
cld
cmp
jno
and
sti
nop
mov
cmp
push
lea
lret
dec
push
data16
add
mov
in
push
repnz
dec
dec
outsb
sbb
cmp
adc
lret
push
fs
mov
loop
pop
adc
movsb
unpckhps
jno
int
movsb
arpl
out
mov
cwtl
sub
loop
jmp
jmp
pop
cld
mov
sbb
mov
int
xlat
or
arpl
push
imul
cmp
pop
jmp
mov
push
add
andb
ffree
push
add
imul
daa
or
push
mov
insb
in
xchg
pop
jo
push
dec
pop
dec
xorb
mov
mov
cmp
call
mov
fnstsw
data16
into
arpl
cltd
mov
and
mov
aaa
xchg
out
cmp
or
or
dec
enter
sbb
add
sbb
shrb
add
xlat
aaa
mov
push
or
cmpsb
add
cmp
xlat
inc
and
daa
jp
mov
and
and
pop
stos
inc
gs
imul
enter
pop
and
pop
cmp
xor
mov
mov
mov
out
dec
addr16
cs
sbb
pop
xchg
ret
xor
test
jns
aam
in
pop
cmp
sub
in
les
mov
mov
inc
pminub
leave
lret
xchg
pop
pop
cs
out
cwtl
mov
movsl
sub
popl
sbb
mov
test
sbb
sub
adc
jmp
xchg
cmc
mov
outsb
pop
das
roll
sub
sub
pop
sub
aam
sub
movsb
stc
movaps
movsb
insl
xchg
aaa
pop
jl
cli
es
fdiv
loopne
sti
xlat
or
andl
dec
adc
sub
mov
mov
mov
cmp
dec
andb
clc
pusha
cmp
int3
nop
push
sti
rcl
insb
loopne
outsl
sbb
leave
sbbl
sarl
sar
ficomps
pop
ds
pop
xchg
pop
bndstx
sub
in
jns
cmp
xchg
xchg
ret
out
and
adc
rep
dec
ss
sbb
inc
test
cmp
sub
aaa
lcall
add
xchg
jo
out
imul
push
adc
cwtl
push
lret
stos
loopne
out
push
mov
mov
add
or
imul
call
test
lock
xchg
les
js
inc
leave
dec
daa
ret
inc
sub
sti
pop
cwtl
xchg
push
mov
xchg
dec
lods
xchg
jno
test
rcr
jae
gs
mov
inc
into
std
adc
pop
mov
sahf
xor
and
mov
in
int
rorb
push
addb
gs
das
xchg
out
outsb
bnd
enter
in
mov
sbb
inc
dec
imul
or
mov
scas
daa
xchg
nop
mov
dec
and
jl
insb
pop
stos
fidivrs
div
lret
push
lcall
mov
in
sahf
jno
jl
pop
inc
insb
pop
add
fwait
adc
jne
push
xchg
aad
mov
and
push
pop
add
push
int3
pushf
loop
popf
loope
sub
fwait
imul
mov
popa
xlat
lods
sub
fldl
shrb
shrl
ja
scas
pop
mov
cwtl
dec
jmp
test
ficoms
fcoml
lock
mov
mov
stos
je,pn
test
cmc
cmp
out
cli
dec
or
imul
ds
les
dec
in
mov
aas
sbb
xchg
and
cmpb
decl
jmp
xchg
sbb
push
gs
xor
xchg
call
push
jo
and
inc
sbb
rcll
xor
sub
rep
in
pop
and
daa
xor
pop
mov
inc
inc
and
fists
clc
outsb
fildl
lahf
fcmovnu
jo
mov
mov
cmc
pop
pop
mov
mov
aaa
js
sub
das
mov
pop
mov
aad
sub
jmp
fadd
dec
lock
mov
fsub
lock
stos
lock
push
orps
adc
mov
and
loop
sub
ja
pop
mov
xor
stos
inc
cmp
mov
lret
pop
out
cmp
push
jns
outsb
test
inc
orl
jne
mov
jo
lret
adc
mov
cmpsl
lcall
and
xor
inc
aad
test
ja
add
cltd
cmp
inc
push
sti
rclb
xlat
loop
popa
sbb
fiaddl
jge
mov
lods
lock
addr16
mov
jb
imulb
push
loopne
and
repz
and
out
sub
icebp
and
ret
or
xchg
or
fiadds
lds
mov
in
xor
xchg
addr16
pop
xchg
xor
or
add
mov
mov
fcomps
adc
roll
xchg
sub
bound
mov
xchg
fbld
pushf
fsubrl
xor
dec
xor
mov
test
aaa
pop
jecxz
fsts
aaa
leave
test
pop
pushf
push
jb
popf
mov
jmp
lea
fcmove
cwtl
or
mov
mov
movsl
push
shlb
imul
pusha
xchg
pop
pop
sbbl
xor
jo
inc
movb
push
loop
mov
movsl
icebp
out
mov
xchg
repnz
scas
icebp
and
dec
int
jp
lahf
mov
incb
shrb
std
sub
push
stos
cmp
and
inc
xchg
or
dec
shlb
fwait
jg
out
xchg
pusha
pop
pop
js
sbb
dec
fmull
out
xlat
add
pop
pop
repz
pushf
cmp
pop
push
das
pop
mov
outsb
and
movsb
or
inc
movsl
mov
leave
jo
ror
pop
sahf
fucomp
cmp
lret
aas
xor
jge
mov
jle
leave
test
pop
add
mov
fidivrs
ss
aas
xchg
sbb
jne
sub
bound
and
call
dec
dec
loopne
jno
or
and
push
mov
mov
push
ret
sub
ss
xchg
movsl
mov
ja
xchg
je
enter
dec
int
xor
sbb
ret
hlt
mov
fwait
inc
cmp
roll
frstor
and
cwtl
pop
fcomps
cmp
sub
fs
and
sub
bound
mov
ret
push
jp
or
jbe
add
pusha
mov
mov
stos
sub
mov
or
and
call
shrb
jb
decb
cmp
rolb
into
mov
ficompl
mov
jns
push
xor
sarl
fisttpl
sbb
pop
cmc
dec
jmp
dec
pop
sub
mov
ret
incl
push
mov
cld
addb
es
flds
jo
cmpsb
cmp
push
sahf
mov
add
bound
mov
push
repnz
cmp
add
sub
pushf
aaa
sbb
cmpsl
aam
sub
jg
add
mov
sub
sbb
mov
movsb
int3
jle
je
dec
aad
subl
adc
sub
dec
xchg
xchg
jbe
fsts
push
cmp
stc
sbb
loop
xorb
mov
cmpsl
dec
out
pop
sbb
dec
insb
aam
sub
push
xchg
push
insb
js
int3
lea
js
inc
xor
xor
int
rorb
mov
cmpsb
jp
ret
dec
imul
jae
out
imul
popf
sbb
lahf
pop
push
cmp
xor
or
xor
jp
jecxz
sub
jbe
addl
sbb
mov
popa
rorl
pop
cmp
jne
repnz
cli
xchg
inc
ja
aam
loope
inc
sbb
mov
clc
push
or
xor
jle
jno
mov
jne
adc
dec
mov
mov
xor
cmp
cmp
addb
push
jb
jmp
and
dec
push
ret
stos
fiadds
daa
sbb
ja
ja
cltd
jl
fldt
clc
lret
negb
mov
jle
ja
xchg
idiv
dec
sbb
xchg
imul
xor
mov
orb
scas
pop
sub
inc
sub
mov
push
js
mov
std
add
dec
sub
dec
fdivp
leave
mov
pop
data16
and
mov
sub
inc
into
out
in
fcompl
icebp
xlat
mov
into
mov
mov
out
cmp
fbld
int
xor
xchg
mov
pop
mov
and
fbstp
mov
fwait
testl
sbb
xor
inc
jno
loop
mov
or
inc
push
cmpsl
or
ss
cmp
cmc
enter
das
gs
xor
es
add
jne
push
jbe
or
xchg
xor
cltd
jmp
andl
xor
mov
int3
repnz
jle
and
out
mov
loop
scas
add
pop
adc
data16
subb
xchg
in
enter
pusha
clc
in
push
in
cli
xor
dec
xchg
xchg
cmp
and
mov
pushf
daa
inc
and
cmc
arpl
sbb
test
pop
jno
and
int3
mov
pusha
mov
insl
xorb
push
adc
subb
xor
lods
xchg
cmp
inc
mov
in
adc
roll
jp
mov
push
inc
jl
pop
adc
aad
in
pop
or
push
in
adc
xor
push
xorl
adc
lret
sbb
call
ret
vphadduwd
jmp
in
mov
dec
mov
push
std
frstor
cs
in
adc
or
outsl
cmp
mov
pop
sub
ss
das
mov
mov
shlb
and
in
cwtl
insb
ss
inc
punpckhwd
stc
daa
pop
fisttpll
pop
and
in
or
xchg
not
mov
or
mov
sbb
roll
sbb
imul
mov
pop
mov
insl
mov
loop
je
adc
jmp
test
and
and
adc
mov
push
leave
dec
cmpsl
aaa
testb
mov
lods
ret
inc
pop
pop
fidivrs
lret
inc
nop
jg
jmp
lret
lcall
push
fwait
xor
movb
push
outsl
adc
xchg
jp
mov
mov
aam
push
or
xor
push
cmp
mov
jl
jl
or
es
add
test
fs
clc
out
loop
stc
mov
xchg
fcomps
les
in
sub
cld
clc
jle
sbb
outsb
lods
push
dec
mov
mov
setg
push
dec
gs
cld
cli
cld
add
int3
sbb
insl
scas
cmp
mov
arpl
sbb
call
inc
call
out
mov
dec
adc
jnp
movsb
adc
pop
xchg
pop
inc
mov
cmp
push
popa
imul
lods
ss
sbb
icebp
add
push
les
sahf
dec
pushf
sahf
mov
jns
fwait
pop
fs
xchg
ja
scas
mov
in
mov
lock
incb
inc
scas
es
repnz
mov
aaa
mov
sbb
or
dec
mov
pause
inc
jno
jg
fcmovnb
lret
lds
dec
nop
and
arpl
leave
ja
stc
pop
jbe
dec
bound
leave
rclb
mov
sub
dec
fcompl
xchg
add
inc
aas
xor
imul
stc
xchg
data16
push
scas
push
push
xor
jle
js
nop
pop
int3
inc
push
les
dec
lret
loopne
push
jbe
xchg
inc
std
ret
xchg
adc
xlat
add
outsl
inc
js
pop
pop
inc
push
call
dec
dec
insb
cs
fadd
bound
sti
aaa
leave
insl
xchg
mov
icebp
xchg
leave
xchg
xchg
scas
shr
bound
outsb
or
shrb
jns
es
mov
mov
test
in
shrb
add
jmp
gs
fsub
cs
nop
mov
and
ret
shrl
and
jge
mov
mov
push
and
mov
pop
bound
pop
int3
xchg
jns
mov
aas
dec
and
imul
fidivl
out
xchg
inc
fcoml
imul
mov
loop
in
mov
mov
xchg
sbb
shrb
and
insb
mov
ret
pop
imul
push
or
adc
mov
mov
das
les
or
xor
mov
movsl
lret
in
xor
sti
stc
add
pushl
out
in
adc
dec
out
testb
vmwrite
mov
push
arpl
cli
adc
arpl
jo
jae
mov
and
cmp
or
repz
arpl
xchg
insb
inc
stc
inc
inc
mov
pop
mov
sub
or
fnstenv
in
push
fs
or
out
cmp
inc
cmp
push
movsl
or
adc
ficoms
or
dec
mov
imul
decl
push
jnp
repz
mov
stos
push
mov
dec
sub
and
lret
add
pop
sbb
int
sbb
xchg
mov
xlat
xchg
scas
xor
cmp
add
xchg
xor
cmp
test
and
or
push
shrl
mov
xor
stos
mov
aam
call
aas
jnp
addr16
pop
jge
out
aad
outsl
les
aaa
jo
mov
mov
sbb
sbb
cmp
ffree
rorl
fsubrl
out
pop
xor
pushf
mov
jo,pt
xchg
cmp
mov
add
xor
mov
jns
mov
push
mov
sub
ljmp
icebp
bound
fmuls
icebp
push
dec
cmp
dec
adc
xor
inc
arpl
cmpsl
pop
jg
ja
je
and
shll
xchg
mov
pusha
fwait
and
iret
inc
mov
testl
mov
xchg
fistpl
pusha
pop
stc
shufpd
scas
mov
jo
xor
cmpsl
and
xor
subb
xchg
in
jb
std
loopne
int
insb
sub
mov
leave
fcompl
imul
adc
pop
sub
mov
popa
in
clc
add
push
sub
jae
pusha
dec
sbb
sub
pop
xchg
mov
add
test
mov
rolb
push
stos
sbb
movsb
mov
cli
lea
mov
adc
stos
cli
adc
push
fucomp
pop
sub
mov
iret
lods
add
xor
jo
in
pop
xor
xor
jp
mov
or
or
mull
mov
les
aas
mov
add
lock
cmp
and
adcb
push
pusha
scas
adc
rorl
xchg
filds
inc
dec
jmp
scas
out
fcmove
insl
push
test
hlt
mov
add
leave
pop
leave
icebp
je
in
push
ret
mov
fidivrl
rorl
mov
add
xchg
fwait
rcrb
popa
fcom
push
repnz
jo
inc
dec
test
xor
jmp
jne
jns
imul
test
lcall
xchg
addr16
mov
push
add
jmp
jl
cmpsl
mov
mov
ret
es
icebp
test
mov
mov
data16
lret
mov
pusha
pushf
and
ret
jp
dec
ja
pop
or
pushl
mov
les
ds
test
or
mov
sub
daa
ror
adc
push
cmp
mov
inc
in
jle
push
nop
adc
adc
push
dec
pop
push
loope
mov
and
rorb
jae
movsb
pop
inc
mov
mov
sbb
xchg
mov
scas
enter
scas
lods
mov
mulb
sar
cltd
out
push
mov
arpl
outsl
cmp
push
gs
mov
jg
cmc
mov
out
xlat
adc
cmpsb
movsb
ret
sar
or
ds
xchg
cld
jbe
push
in
sub
es
jp
insb
push
push
xacquire
push
pop
push
jo
jnp
je
loop
mov
ss
lock
xchg
jns
add
mov
addr16
outsb
rolb
pop
adc
jno
xchg
dec
into
jno
ljmp
aas
movsl
mov
sahf
sbb
adc
cmpb
fdivrs
aaa
cmp
lods
aam
popf
pushf
fiaddl
stos
daa
and
dec
push
xchg
jmp
lret
add
inc
push
dec
fidivrl
mov
outsl
shlb
dec
aam
loop
movsl
mov
sbb
std
jl
test
push
fildl
add
lahf
aaa
sti
add
dec
popf
in
xlat
mov
enter
inc
pop
fwait
aaa
insl
jge
pusha
sub
pop
in
sbb
jb
dec
stos
je
movsl
clc
xchg
xor
and
or
pusha
popl
arpl
pop
xor
jns
mov
mov
les
shl
popf
cs
dec
sti
xchg
ret
enter
mov
sbb
out
mov
jg
add
lret
cmp
add
iret
cmpsb
push
shl
add
icebp
cltd
cwtl
cmp
aam
lock
mov
mov
mov
bound
imull
cmpsl
scas
or
add
cmp
sub
fs
mov
push
xor
or
mov
fbld
pop
inc
int
test
in
icebp
lret
mov
sbb
sub
repz
pop
mov
orb
movsb
and
loopne
data16
lods
jbe
jp
out
mov
sbb
pop
faddp
or
or
sub
xchg
fucomip
add
xchg
lcall
or
push
mov
out
in
sub
outsb
pop
shll
sbb
mov
jne
sbb
clc
and
or
xor
or
enter
pop
sub
inc
mov
lret
add
sub
insb
subl
sbb
out
insl
jne
xchg
ljmp
fdivl
faddl
imul
imull
aas
xchg
inc
jne
ja
out
imul
cmpsb
jle
adc
and
cmpsb
insb
pop
je
and
lret
fidivrl
add
aam
scas
shr
cs
into
push
je
and
sti
add
or
rolb
xchg
pop
mov
fidivl
in
mov
loopne
dec
sbb
xchg
fildll
bound
xchg
mov
sbb
lret
iret
mov
sti
mov
out
adc
stc
mov
mov
in
xchg
mov
jno
sbb
adc
popf
pop
sbb
es
xor
sbb
pop
daa
xchg
rcrb
dec
cld
stc
dec
call
adc
std
call
lods
negl
clc
fsubrs
or
cmc
loopne
jae
scas
lock
rcrb
or
ja
fsubs
mov
ljmp
adc
ja
shrl
pop
push
add
jae
push
pop
movups
jp
test
jnp
lock
dec
outsl
lods
adc
movsl
jb
pop
into
sahf
fildl
jl
lahf
jo
dec
push
cmpsb
jb
sahf
cmp
sub
stos
popf
dec
gs
gs
repz
lret
arpl
les
std
sbb
cmpsb
fisubrs
lahf
mov
clc
jae
xchg
add
ds
popf
add
aam
out
add
das
mov
outsb
popa
leave
pop
jmp
mov
sbb
cmp
loop
xor
shll
scas
cmp
testl
fdivrp
movsb
pop
in
lahf
gs
filds
in
dec
cltd
dec
and
jmp
jbe
xlat
sub
push
imull
loopne
dec
mov
push
mov
subb
addr16
pop
adc
cs
sbb
pop
and
push
sbb
nop
jl
xor
pop
cmc
jae
das
push
lea
and
mov
addr16
ljmp
push
inc
subb
or
in
mov
xor
mov
mov
jge
jg
insb
and
enter
movsl
sbb
jmp
cmp
ja
outsb
mov
arpl
loop
int
jge
jb
add
pop
shl
cmpsl
aas
mov
jns
or
cmpsl
out
mov
pop
cmp
jns
dec
xor
mov
mov
or
jp
in
shll
inc
les
sbb
xchg
cld
fisubs
mov
fnstcw
out
jl
jg
fisttps
pop
and
lods
jno
js
adc
sti
fs
cltd
cmpsl
pop
push
xlat
lret
scas
sbbl
cmp
jle
xchg
ds
dec
xor
mov
imul
subb
push
mov
cld
pop
jb
repnz
add
pop
rcll
cmp
sbb
xchg
mov
adc
pushf
cmpsl
outsb
adcl
cmp
pushf
mov
mov
and
add
dec
push
xchg
out
and
shlb
stos
dec
jle
lcall
adcl
add
ffreep
push
adc
mov
inc
xchg
rcll
mov
hlt
je
shlb
cltd
cltd
xchg
cld
movsl
cmp
add
lods
stos
cltd
outsl
or
aad
pop
popa
push
scas
aam
push
jl
fldt
lret
jae
divb
mov
arpl
out
push
out
sub
and
mov
je
cmp
ficoml
mov
or
adc
nop
and
sbb
imul
push
sbb
add
add
in
sub
mov
or
fldenv
mov
jmp
pop
push
pop
pop
mov
pop
and
aas
add
out
add
xchg
pop
fbld
jge
dec
xchg
pop
cld
pop
xchg
leave
xlat
jno
add
adc
jb
leave
xchg
jle
lods
aaa
adc
out
in
adc
mov
adc
dec
lahf
mov
cmp
pop
add
adc
hlt
bound
or
enter
mov
add
xor
dec
mov
iret
into
decb
push
pushf
xor
fwait
pop
cmpsb
mov
inc
movsl
jp
xor
cmp
xchg
lods
push
mov
outsb
insb
cltd
ds
mov
cmpsl
push
cmp
loope
mov
in
dec
sub
movsl
ljmp
push
pop
xchg
lods
stos
scas
or
inc
inc
sbb
inc
pop
sbb
adc
movsl
icebp
jge
sahf
jb
insl
jmp
lods
jae
pop
mov
inc
loopne
jle
pop
je
or
lret
into
cmc
lret
sbb
or
insb
enter
ret
aaa
xchg
jns
add
fsubrl
sbbb
fcmove
in
jp
jecxz
jno
jl
xchg
gs
pop
imul
testl
arpl
inc
jmp
jmp
and
aam
insl
lret
sbb
and
mov
stc
mov
inc
movsb
or
cld
aas
out
push
lahf
cwtl
shl
int3
push
andb
jno
xor
push
enter
add
inc
outsl
inc
outsl
std
dec
push
imul
and
inc
and
push
stos
cmp
mov
in
jno
imul
movntq
and
xchg
cltd
xchg
cmp
add
and
add
pop
rclb
xchg
dec
cmpb
div
lds
lahf
pushf
mov
xor
pop
push
fsubrs
sahf
arpl
or
cmp
xchg
cmp
mov
inc
adc
mov
push
pop
xor
out
jl
add
pop
cmpsb
mov
add
std
lahf
sahf
call
xorl
sub
push
mov
subl
xor
aam
pop
xor
dec
xlat
cmp
jmp
sbb
cmp
mov
in
or
dec
sub
repnz
mov
std
adc
bound
sub
pop
push
mov
sahf
inc
int3
dec
stc
fistps
stos
mov
fistl
mov
jae
push
mov
xor
sbb
xchg
push
adc
lods
dec
mov
mov
addb
pop
push
aaa
jae
or
mov
dec
addr16
test
xchg
xor
in
das
push
cs
mov
icebp
mov
and
nop
inc
or
icebp
lods
imul
aas
dec
xchg
dec
push
lods
je
dec
add
ds
mov
cltd
mov
jge
jecxz
jl
js
adc
loop
cmc
repnz
cmp
push
lahf
mov
rol
ds
lods
dec
push
loop
aam
cld
cmp
shlb
xchg
addr16
fwait
xchg
into
aaa
dec
sahf
sbb
pop
xor
mov
ljmp
sti
jmp
push
xchg
hlt
inc
cmp
shrb
mov
divb
xlat
fisubrl
sub
loope
xor
imul
push
push
repz
xor
push
sar
cmp
test
int
fstpl
xchg
mov
shrb
jmp
mov
mov
cmpsl
in
in
inc
mov
and
aas
xor
stos
pop
inc
push
mov
push
lods
in
xor
stc
mov
enter
icebp
mov
cmp
sub
cmp
jge
or
jmp
stos
outsb
push
jae
pop
das
push
push
xor
push
daa
popa
cmp
mov
fs
xor
dec
lcall
sub
mov
fisttps
imull
aam
push
aas
add
out
mov
jle
mov
inc
rcrb
mov
call
arpl
call
lret
mov
adc
or
popf
pop
test
cltd
push
fisttps
lods
xlat
mov
rclb
sbb
dec
fidivs
sbb
daa
fcoml
jno
rorb
addb
and
outsb
in
es
mov
enter
stos
and
dec
cmpsb
jp
cmp
jnp
lahf
jno
xchg
add
lahf
cmpsl
mov
loop
xchg
push
scas
mov
xor
fistpl
aas
int3
xchg
loope
cmpsl
cmc
fnstcw
cmpsb
repnz
pop
sbb
stos
mov
push
mov
pop
cmpsl
dec
xchg
iret
push
test
rclb
repz
pop
inc
repnz
cltd
jg
inc
sub
sti
subb
mov
inc
ja
mov
or
out
cmpsl
cmpsb
dec
mov
repnz
imulb
or
in
ja
enter
or
hlt
dec
rorb
dec
test
imul
jno
jecxz
sbb
add
push
mov
out
aad
xchg
add
dec
dec
dec
add
out
xchg
ss
les
scas
sbb
adc
adc
jns
xchg
and
cwtl
jge
pop
lahf
rol
sbb
xchg
adc
dec
movsl
push
dec
in
sub
mov
adc
or
sbb
arpl
idivl
std
cmp
mov
scas
jl
add
pop
cmp
aam
popf
push
cwtl
test
mov
ljmp
loopne
and
sub
xor
pop
add
iret
mov
jns
stc
notl
iret
fisubs
loop
adc
div
aas
pop
rcrl
dec
int3
xchg
inc
or
leave
sbb
jp
dec
scas
push
out
or
xor
pop
pushf
inc
cmpsb
das
cmp
add
mov
fwait
sahf
cli
or
scas
ljmp
push
push
into
add
push
dec
mov
jmp
data16
mov
xor
aam
fdivrl
mov
leave
lock
outsb
insb
mov
in
movsl
lds
mulb
sub
out
sbb
test
enter
mov
and
dec
cmpsl
push
insl
or
fwait
push
scas
movsl
pop
cmp
or
aad
and
or
lock
jp
gs
rorb
or
out
mov
std
dec
lea
cli
iret
jb
shlb
fptan
lods
out
sub
lods
cwtl
sahf
xor
cmpsb
inc
daa
adc
aad
jp
jg
xlat
add
mov
lret
adc
outsb
pop
add
call
aaa
outsl
shr
addr16
out
iret
les
notl
pop
jmp
js
int
or
scas
xor
jnp
pop
in
ss
lret
or
lahf
in
cld
or
int3
iret
pop
rolb
rclb
adc
add
ret
cwtl
and
outsl
out
mov
cmpsl
loop
mov
sub
pop
jl
sbbl
aam
inc
inc
cmpsl
ds
mov
lock
jle
addr16
push
ds
push
sarb
aaa
imul
mov
mov
xchg
insb
adc
dec
fidivrs
or
cmp
cmpsb
jo
and
data16
out
add
and
inc
js
mov
bound
jnp
sbb
jb
fisubrs
mov
scas
xor
fstps
lock
push
in
xor
jne
in
push
lcall
mov
push
pop
sbb
shrl
lods
or
or
data16
dec
jecxz
cmpsb
push
pushf
hlt
dec
push
jg
xchg
loopne
xorl
arpl
mov
add
push
jnp
rcr
mov
mov
imul
jge
mov
jns
or
inc
ljmp
and
lock
lods
push
out
pop
adc
jae
and
or
sti
insb
add
repnz
jns
dec
stos
jl
fs
repz
sbb
inc
sbb
pop
fwait
das
std
xchg
xchg
fucom
push
lret
lea
sbb
iret
and
int
xor
mov
lock
ljmp
xchg
shrb
sub
sbb
xchg
push
out
dec
out
sub
xor
out
loope
dec
dec
sub
xchg
je
xchg
xchg
jge
fisubrs
stc
xchg
cmp
jecxz
pushf
mov
cmpsb
popf
sbb
cmp
popa
mov
jae
pushf
sbb
mov
jb
push
cmp
sbb
mov
push
sbb
jns
arpl
ss
lea
sbb
cmp
popa
mov
inc
push
rcl
popf
push
adc
or
add
push
sbb
fistpll
xchg
cmp
mov
or
and
cmc
imul
cmp
scas
or
int3
icebp
or
out
popf
xor
xor
inc
repz
in
pop
dec
es
or
dec
out
insl
fildll
and
in
mov
call
and
out
insb
pop
fsubrs
lods
pusha
lods
cmp
pop
sbb
fisttps
test
data16
loopne
mov
push
add
popf
int
jp
loopne
add
jbe
push
cmp
mov
leave
loopne
lds
cmpsl
cld
test
sbb
mov
jecxz
jp
into
aaa
inc
cs
lea
aas
xorl
pop
sbb
pop
divl
lea
fwait
fwait
push
mov
xchg
outsb
jo
sub
xchg
leave
sub
stos
in
dec
call
jns
jne
mov
test
lds
leave
xor
sbb
js
mov
pop
lret
mov
fisubs
loopne
sub
pusha
mov
ret
pushf
test
adc
jns
inc
adc
dec
sbb
out
add
mov
push
scas
lods
add
in
push
pavgw
in
sub
aad
mov
ss
cwtl
fiaddl
sub
shlb
rclb
xor
adc
add
repz
leave
or
lods
scas
xchg
test
scas
inc
mov
ja
push
or
sub
xchg
rorb
addr16
adc
std
mov
fstp
add
movsl
sbb
stos
sarl
mov
inc
pop
lds
sbb
cmpsl
std
imul
mov
inc
lds
fisttpl
push
dec
xor
add
jno
rcrb
nop
adc
xor
xlat
aas
inc
movsl
lds
movsl
cmp
mov
lret
aam
imul
lea
decl
test
xor
lret
jnp
sahf
jecxz
jno
cwtl
scas
pop
adc
sbb
outsl
cmp
mov
cld
dec
sub
jecxz
xchg
adc
das
mov
je
sub
mov
das
mov
adc
loop
sbb
lahf
sub
hlt
mov
dec
idiv
jecxz
add
mov
std
cmp
sub
pop
shlb
jo
sub
jne
movsl
andl
push
repz
xor
inc
sahf
das
dec
mov
repnz
xchg
cmpsb
ss
testb
inc
adc
divl
popf
pop
xchg
sahf
mov
cld
cltd
push
mov
push
decl
mov
movsl
lods
push
mov
fisubrl
adc
insl
lea
test
test
inc
dec
or
into
adc
in
push
out
jne
sti
loop
adc
insb
lcall
loope
in
push
inc
sbb
bound
and
fcomps
push
mov
mov
lret
aam
dec
icebp
insl
cmp
clc
push
inc
jp
jl
cmp
inc
sub
push
inc
iret
fimull
jns
push
test
pop
or
or
jecxz
dec
push
lea
ljmp
jg
insb
mov
dec
dec
pop
nop
call
dec
je
cwtl
mov
jg
aam
scas
xchg
pushf
sarb
mov
bound
sti
adcl
lock
lods
loope
pop
xor
jecxz
das
sub
les
dec
ret
xchg
cltd
pop
mov
sub
adc
xor
mov
insl
push
xor
pop
inc
fcomip
arpl
repz
std
mov
push
int
or
and
jle
pcmpgtw
dec
in
rorl
scas
les
mov
cmp
mov
icebp
ret
imul
and
push
jnp
mov
xchg
mov
jo
lods
adc
insb
add
jmp
pop
push
and
sbb
clc
mov
xor
push
add
daa
pusha
sti
jno
pop
cli
and
imulb
nop
pop
mov
fsubl
paddusw
jle
test
popf
cmp
sub
ljmp
into
outsl
iret
sarl
xchg
clc
faddl
pop
test
scas
out
sti
dec
data16
pop
scas
sbb
test
mov
cwtl
mov
jl
mov
das
lods
ds
test
pop
sbb
out
push
xchg
fmul
negb
test
imul
hlt
mov
mov
sub
les
lock
cli
repnz
pop
test
dec
xor
loope
daa
mov
pop
xor
and
imul
lds
push
icebp
orl
mov
lret
sti
movsb
mov
and
clc
mov
repz
sti
pop
pushl
rcll
xchg
push
pop
cwtl
mov
push
stos
inc
loope
dec
fcomp
mov
push
arpl
push
mov
mov
and
fcompl
data16
adc
or
sti
aaa
dec
push
enter
cs
rolb
inc
cmp
push
cmp
and
daa
jmp
fmull
push
fildl
push
mov
add
shrb
mov
add
test
push
mov
hlt
inc
sub
cmp
inc
les
in
add
fnstsw
sbb
add
mov
xor
fwait
insl
fmuls
push
out
adc
jae
in
in
repnz
scas
fldl
cmpsb
or
push
cli
xor
cmp
mov
out
sub
push
jl
sbb
shll
stc
sbbl
imul
popf
pop
out
movsb
and
jl
je
nop
iret
nop
mov
aas
sub
scas
cltd
mov
punpcklwd
vprotw
ss
add
in
fld1
outsl
rolb
adc
pop
dec
mov
cs
xor
cmp
adc
pop
cmpsb
jo
es
out
clc
cmp
pop
xlat
and
mov
inc
aam
loopne
jge
loopne
add
fnstcw
daa
add
and
pop
test
aas
and
cmp
and
adc
or
inc
push
pop
mov
inc
enter
int3
jp
aad
aas
icebp
and
pop
mov
outsb
adc
fisubl
pusha
xchg
push
dec
loope
clc
sub
out
into
adc
push
int
test
imul
andb
aas
lret
xchg
scas
add
cmp
dec
test
sub
mov
jb
sub
enter
test
pop
mov
mov
movsb
imul
arpl
scas
mov
xchg
lock
inc
shr
fimuls
pusha
pop
inc
test
xor
mov
stos
ljmp
xchg
sbb
iret
dec
dec
mov
cmp
or
pop
pop
mov
pop
push
sahf
jns
or
or
push
dec
push
inc
subb
pop
lods
cli
dec
popa
xchg
pusha
fucomp
ljmp
jne
push
scas
jecxz
fiadds
sbb
out
cmp
jno
out
iret
ja
push
mov
dec
out
fs
js
pop
loope
lea
sar
negb
mov
adc
das
das
add
add
sub
test
jle
stos
mov
adc
mov
adc
push
inc
mov
xchg
subl
mov
hlt
add
iret
push
cmpsl
sbb
add
push
inc
xchg
cmp
or
pop
pop
adc
jbe
mov
stc
mov
ja
es
ss
jne
inc
mov
lea
ljmp
push
dec
mov
mov
mov
jns
ffree
push
add
stos
and
dec
lret
pop
pop
push
sbb
mov
testl
inc
std
mov
mov
and
adc
or
in
out
shr
push
lods
sbb
movsb
mov
xor
mov
std
inc
mov
xchg
xor
lcall
fidivrl
cmp
lea
or
js
fstpt
movsb
adc
sub
xor
cld
jge
jg
int3
inc
xchg
fcom
adc
mov
mov
fs
inc
and
test
pop
sub
test
and
es
outsb
mov
jecxz
mov
bound
fnstenv
hlt
sbb
inc
nop
fs
lret
jnp
sbb
imul
popa
mov
xchg
gs
scas
cmpsb
scas
cltd
xchg
jns
shl
jbe
insb
gs
dec
outsl
lret
in
push
lods
scas
jbe
daa
xor
push
pushf
stos
inc
xchg
aaa
mov
cltd
lds
call
pop
or
pop
push
and
sti
pop
inc
xor
dec
mov
cmp
shrl
mov
rclb
ds
loop
jbe
mov
xor
test
mov
dec
jecxz
cld
mov
add
inc
sbb
ds
out
push
int3
das
mov
jnp
xchg
aam
push
jo
or
sbb
pop
cmp
and
in
lcall
jge
mov
aad
in
adc
ret
push
test
xchg
and
lods
mov
add
test
cmp
arpl
movsl
mov
and
sbb
sti
mov
stc
lret
inc
jg
fs
sarl
cwtl
and
xorl
shll
jp
cli
mov
sub
lods
ret
push
pop
xor
jg
xchg
inc
cmpsl
into
rorl
test
shrb
loopne
loop
icebp
daa
int3
call
push
mov
test
push
mov
hlt
fsubl
jnp
xchg
ds
xchg
rcr
inc
mov
xor
xchg
in
lea
call
cld
and
cmpsb
outsb
call
sub
inc
xchg
cmp
lea
xchg
movsb
add
xchg
push
mov
inc
cmp
jb
adc
inc
rcl
insb
pop
leave
mov
sub
or
pop
pop
shr
xor
sbb
arpl
or
outsb
pop
pop
cmp
mov
xchg
cwtl
test
mov
in
mov
nop
mov
lcall
sub
fisttpll
mov
sub
test
mov
or
sub
std
sub
inc
push
fs
movsl
cmpsl
test
shl
fwait
arpl
loopne
testb
xor
int3
pop
subl
icebp
push
and
fmuls
mov
or
push
adc
pop
xor
int
add
cs
xor
ror
les
sbb
stc
or
jg
pop
mov
sbb
je
inc
fwait
ss
movsb
fcmovbe
sbb
subb
clc
shl
ret
repnz
pop
pusha
stos
mov
fs
divb
add
and
fcomip
fcomp
push
mov
mov
lods
push
ret
stos
in
imull
lret
ret
hlt
cmp
lds
je
lea
pop
fisttpll
pop
mov
mov
xchg
jl
or
jns
mov
outsb
mov
stos
lret
add
mov
inc
sarl
sarb
fs
in
xor
loop
scas
dec
lret
jno
jne
cmp
dec
xor
ljmp
jns
dec
out
test
mov
sub
mov
leave
sahf
test
mov
insb
push
xor
pushl
adc
arpl
jecxz
jg
test
enter
push
aas
pop
cld
cmpsl
push
test
rcl
mov
inc
imull
fldenv
adc
add
into
mov
jnp
push
imul
lods
fsubrl
adc
push
push
jge
fsubrl
push
mov
sub
sbb
jmp
mov
push
mov
fwait
adc
loope
fimull
mov
pop
mov
scas
mov
lret
scas
xor
or
xchg
xlat
rclb
daa
stos
mov
jno
popa
leave
dec
pusha
cli
jle
mov
cmc
push
pop
add
movsb
inc
sub
std
adc
or
pop
xor
jmp
cltd
lgs
andl
push
sahf
xor
or
xor
xchg
jo
xchg
adc
cmpsl
fisttpll
mov
sbb
add
scas
xor
cli
repnz
jp
fisubs
stos
mov
mov
jge
stos
pushf
jbe
in
inc
pop
cmp
lods
sub
sbb
outsb
add
mov
add
jo
pop
popa
scas
adc
xchg
in
repz
jmp
mov
cwtl
test
jbe
pop
pop
popf
mov
push
iret
cld
cmpsl
or
and
mov
call
push
es
fistpl
outsl
mov
loop
xor
jae
es
or
inc
outsl
cmp
jbe
shrl
lret
xchg
dec
jp
jmp
push
in
and
inc
fiadds
push
push
sub
cs
sbb
lods
push
outsb
cmc
mov
leave
mov
sbb
stos
adc
loop
mov
lret
movl
test
mov
leave
daa
or
mov
mov
fsubrl
outsb
and
cs
adc
aad
js
sbb
jbe
xor
adc
adc
shrl
xor
aaa
mov
push
push
dec
mov
add
negl
insb
ljmp
loop
out
or
fcmovnu
push
push
add
xchg
push
xor
ss
mov
and
lret
fnstcw
daa
mov
inc
mov
in
push
notb
rorl
push
and
fidivrl
push
cltd
popa
pop
adc
adc
jp
cmp
out
sbb
insb
add
sub
stos
mov
and
pop
ret
pop
in
fidivs
sbb
ja
inc
jbe
or
int
pop
push
xlat
cld
sti
ret
inc
jnp
or
mov
dec
aam
int
mov
pop
clc
test
ficoms
sbb
mov
lahf
data16
popa
dec
sahf
fcomps
xor
cmc
nop
sub
pop
inc
imul
inc
sti
mov
jae
arpl
lea
jbe
cmpsl
pop
inc
out
xor
xlat
sbbb
enter
cmp
pusha
cmpsl
add
pop
scas
fcoml
mov
aaa
jmp
pop
push
mov
fbstp
adc
push
daa
iret
dec
mov
xor
add
outsb
inc
inc
testl
popf
test
ret
push
push
push
sbb
lods
movsb
cmp
add
out
les
pop
mov
cwtl
fs
sbb
or
stc
out
fs
loope
fs
scas
xchg
addr16
push
mov
pop
scas
mov
lock
movsb
mov
sbb
loope
inc
bound
jno
out
loope
ret
stos
adc
iret
mov
xchg
paddsb
adc
mov
addl
lret
jp
pop
and
mov
and
sbb
cwtl
xchg
mov
leave
daa
ret
imul
xlat
push
call
cmp
stos
cmpsb
inc
imul
les
lea
and
lods
outsl
push
outsb
addr16
push
mulb
pusha
bound
in
icebp
xor
add
into
movsl
mov
clc
imul
js
adc
or
push
pop
mov
sti
mov
divl
cmovb
sub
adc
movsl
add
imul
pop
icebp
mov
mov
out
lret
sahf
call
jl
sarl
pop
bound
cmp
inc
pusha
pop
out
stc
out
inc
push
mov
push
int
xchg
loop
stos
push
popw
mov
xor
insb
sub
inc
fwait
sub
nop
inc
shld
test
push
les
sub
xchg
cmp
mov
rclb
nop
xlat
mov
fisubrl
dec
fistpll
mov
or
jg
cmp
rcl
pop
sahf
push
ja
lret
hlt
ret
test
jo
hlt
sub
hlt
ret
pop
addl
or
cwtl
mov
mov
push
arpl
fstl
and
lds
aaa
mov
mov
jne
inc
mov
cmp
fsubp
xor
loopne
je
sahf
outsl
daa
and
je
add
repnz
xor
int
xchg
add
lds
sar
cmp
push
add
sbb
xor
pushf
ds
or
iret
outsb
pop
loopne
xor
call
aaa
test
pop
and
or
or
and
mov
adc
aam
negl
jp
les
xor
jno
ret
add
push
xor
cli
rcrb
arpl
into
push
fwait
mov
dec
leave
mov
stc
xchg
push
push
daa
fcompl
jo
and
rorl
pushl
imul
leave
les
jecxz
test
aad
sbb
loopne
insl
sub
xchg
adc
jg
fadd
mov
mov
jecxz
push
add
sbb
decb
outsb
or
daa
mov
mov
mov
and
sub
test
loop
lods
les
push
out
popa
jge
dec
enter
es
cld
lds
imul
xchg
popa
push
ja
aam
pusha
add
and
mov
xchg
jmp
mov
popl
insl
inc
into
mov
inc
cmp
lea
and
in
in
je
inc
roll
nop
cmovae
pop
adc
push
pop
fidivl
cltd
add
cmp
xchg
xchg
in
sbb
loope
mov
push
pop
fsubp
dec
rcrb
ficoms
mov
sub
or
aam
scas
and
adc
daa
add
mov
lahf
jle
adc
jb
test
or
pushf
push
test
pop
pop
add
dec
lds
pushf
das
fbstp
or
es
fisttps
mov
lods
call
bound
ljmp
or
pop
cmc
lret
dec
je
out
xchg
inc
ljmp
shll
mov
adc
xlat
xchg
nop
fildll
in
xlat
xor
push
rclw
jmp
mov
sbb
lahf
cli
icebp
ss
add
subb
faddl
pop
push
dec
mov
stc
cld
inc
cltd
cld
jle
icebp
ss
pop
arpl
ret
sbb
inc
das
cmp
movsl
gs
jle
add
jp
scas
jp
push
push
dec
lret
test
int3
imul
sub
xchg
push
cmp
fdivr
xor
or
into
lea
std
std
xchg
fidivs
xor
or
jns
aas
mov
push
les
inc
sub
les
push
adc
test
sub
adc
movsb
test
mov
popa
cs
add
out
cmc
cmc
push
int3
popf
inc
movsb
lret
ret
jecxz
imul
bound
mov
xchg
adc
jg
rcl
and
jnp
jo
lock
dec
std
inc
out
aam
shll
mov
lret
or
push
addb
out
and
fcompl
push
ret
xor
outsl
test
pop
and
sub
and
dec
fld
rcr
dec
pop
ds
repz
pop
jp
ljmp
in
jae
mov
pop
mov
shrb
jle
fwait
xor
mov
popa
mov
out
inc
xchg
sub
icebp
test
mov
sub
cld
sub
ror
fistps
arpl
xchg
mov
inc
data16
sub
sbb
mov
pop
mov
in
inc
int
out
pop
test
decl
scas
mov
daa
pop
enter
add
pop
lret
jge
scas
sub
pslld
cltd
orl
stos
cmp
movsl
adc
hlt
push
mov
pushf
jnp
daa
cltd
imul
dec
mov
push
movsb
lahf
je
cmp
dec
sbb
sub
dec
insb
push
das
in
cmpsl
out
or
popl
mov
leave
add
inc
outsl
pop
std
push
stos
mov
mov
gs
or
je
mov
jo
ret
jl
punpckhbw
xchg
ss
hlt
hlt
fucomp
js
inc
push
pop
sarl
testb
xchg
clc
stos
or
pop
jecxz
push
sbb
sarb
sub
dec
por
dec
mov
rorb
add
xchg
mov
lea
outsb
aad
std
inc
inc
daa
xor
test
mov
mov
pop
aam
jns
xchg
adc
aas
adc
dec
ljmp
jl
jg
lea
arpl
out
ljmp
push
jns
inc
gs
xchg
mov
xor
out
fs
or
cmpl
inc
jp
add
inc
jl
dec
or
in
or
clc
mov
ljmp
mov
xchg
ja
cs
mov
pop
jecxz
loop
movsb
adc
cwtl
jae
add
iret
xchg
inc
cmp
into
mov
inc
in
sub
push
test
pushf
add
inc
cli
in
ret
loope
lret
cmp
divb
inc
adc
mov
xchg
int3
xor
int3
cld
or
scas
fstps
sahf
ret
jge
sbb
pop
xchg
sub
or
mov
cmp
in
dec
and
jbe
mov
inc
cwtl
lods
jns
xchg
jecxz
mov
outsl
loope
push
mov
cmp
mov
nop
ss
and
xchg
dec
pop
sbb
add
jl
sarl
dec
dec
and
inc
ja
sub
jp
adc
adc
xor
cltd
add
rcr
repz
test
or
dec
or
xchg
add
mov
sahf
das
inc
das
cwtl
xor
gs
int
test
push
stc
out
scas
dec
hlt
imull
or
hlt
andb
stc
rorl
push
arpl
or
rcrb
dec
jmp
lock
pop
push
mov
push
and
add
jae
xor
inc
inc
rcll
mov
inc
es
in
mov
enter
imul
setae
popl
adc
jecxz
push
int
cwtl
imul
scas
xchg
pop
fcmove
or
loope
mov
test
imul
repnz
lods
sub
ljmp
stos
and
imul
mov
xchg
int
mov
cmc
jge
sub
cltd
sti
les
enter
lret
mov
mov
sbb
fdivrl
cmp
xor
lods
cmp
fld
insb
inc
mov
outsb
xor
lret
add
repz
mov
sbb
xchg
mov
ud0
and
sub
push
pop
pop
and
cltd
jo
in
push
dec
dec
mov
jbe
in
mov
inc
daa
rcll
mov
aaa
bound
loope
add
and
out
aaa
les
inc
sahf
out
rcrb
imul
jl
in
xchg
lods
adc
jle
repz
int3
mov
loopne
mov
mov
and
adc
sub
aaa
adc
cwtl
sbb
mov
push
mov
jge
or
pop
pop
loope
hlt
in
ret
sahf
sbb
mov
mul
lcall
pop
or
mov
cltd
and
mul
cltd
aad
sub
xchg
int
xchg
icebp
push
outsb
pusha
inc
fiadds
fdivs
or
test
popa
cmpsb
cmp
scas
mov
stc
and
jg
push
push
add
lock
arpl
movsl
mov
and
outsb
fnstenv
jge
outsl
lods
les
cmpsl
aad
popa
pop
lods
je
test
test
hlt
movsl
test
dec
inc
fs
fcoms
mov
daa
call
mov
cwtl
inc
pop
sbb
pop
pop
mov
out
cmp
jle
testb
mov
and
cmpsl
jg
ds
sub
ja
or
sbb
mov
faddp
dec
fstl
mov
mov
or
xor
repnz
xor
daa
inc
sbb
stc
add
mov
push
ljmp
or
pusha
std
arpl
cmp
adc
mov
lret
movsl
je
xor
xchg
xchg
pop
mov
scas
addr16
std
push
xchg
cmp
xorl
cwtl
mov
cli
mov
mov
iret
xor
mov
jns
push
lret
das
out
data16
jns
cmpsb
lods
mov
in
sahf
jne
enter
cmp
jmp
scas
xchg
sub
mov
repz
enter
rorl
dec
stc
sbb
fisttpll
into
sarb
xchg
inc
jbe
iret
rorl
stc
cmp
lods
or
mov
mov
sub
faddl
dec
ja
push
rolb
repz
out
push
sub
aad
cmp
negb
jle
mov
nop
movsb
jl
ret
ror
jmp
or
or
movsb
push
adc
cltd
sbb
scas
inc
cwtl
sub
pop
pop
scas
ss
dec
sbb
pop
xor
adc
pop
inc
inc
xchg
adc
lret
in
xor
and
ss
or
xchg
mov
rorl
sub
mov
inc
jp
les
mov
imul
es
adc
push
mov
pop
leave
inc
cmp
pop
out
pop
adc
mov
inc
pop
outsb
lock
loope
dec
or
cmp
lcall
push
cs
rep
cmpsl
adc
arpl
push
repnz
fiadds
push
push
fldl2e
insl
and
jmp
adc
push
mov
push
clc
push
or
adc
cmpsb
cmp
push
std
push
in
test
cmp
jp
bound
insb
adc
imul
pop
xchg
mov
je
divb
aad
jo
and
xchg
push
es
test
lret
rcrb
push
jbe
inc
push
jae
lods
cmpsb
or
insb
sub
mov
mov
xchg
out
push
push
ret
xchg
stc
mov
fmulp
push
repz
jae
mov
jns
push
jge,pt
mov
and
inc
ja
aas
lods
xor
bound
vmovdqa
adc
mov
pop
sub
jb
jb
jp
pop
outsl
dec
sbb
lea
cs
imul
negl
icebp
clc
sbb
repz
xor
jecxz
lods
aam
clc
jb
pop
jo
pop
pop
adc
lds
call
adc
adc
insb
pop
pop
cltd
xchg
jmp
int
adc
test
and
and
dec
shrl
add
sahf
mov
mov
xchg
or
pop
sub
or
pushf
insb
mov
aas
lea
or
xor
imul
inc
loopne
loopne
or
mov
aas
cmpsb
sbb
bound
jbe
add
and
sub
push
repz
xchg
mov
and
adc
sti
push
dec
fcoml
xor
shlb
lret
mov
sub
add
dec
lods
jg
adc
lds
add
cltd
pop
mov
rep
dec
pushf
jge
jmp
jne
adc
pop
out
cs
jmp
dec
mov
int3
pop
popa
jb
adc
pop
cwtl
scas
cltd
mov
or
or
xor
call
pop
push
in
adc
jae
pop
mov
pop
shlb
inc
das
mov
xchg
scas
xchg
cmp
push
jae
mov
jbe
bound
jl
mov
cmp
test
fildll
loop
dec
arpl
add
push
mov
jle
outsl
dec
ret
push
fmuls
sub
out
stos
int
stos
jne
movsl
in
xchg
xchg
xchg
mov
xor
lods
in
ja
pop
shrl
shl
lahf
arpl
dec
pop
push
pop
cmp
and
lods
jg
inc
push
lods
lret
push
cmpb
cmp
adc
lods
cli
push
mov
sbbl
and
jg
inc
cmpsl
push
xor
cmpsl
or
hlt
inc
popf
lret
das
jae
sub
and
adc
leave
jecxz
jb
repz
movsb
inc
and
repnz
mov
cmp
fmul
test
repnz
mov
ja
aas
sub
ljmp
fdivrl
mov
push
gs
fs
dec
int3
int
es
je
test
or
cmpsl
fs
lods
stc
daa
and
rcrl
popf
movsl
inc
fwait
pop
mov
cs
mov
cwtl
jns
bnd
mov
nop
mov
mov
daa
inc
push
inc
popa
xor
jmp
sbb
cltd
mov
mov
and
adc
jg
andl
arpl
pop
lods
mov
sbb
pop
sbb
jno
jbe
push
xchg
pop
jno
sbb
popf
push
cli
aad
scas
insb
lcall
fmulp
jns
cld
push
fwait
int3
aam
leave
insb
cltd
mov
rcrb
inc
jns
lret
jp
jg
aam
ljmp
cmp
inc
in
pop
in
or
mov
push
mov
fucom
mov
js
lods
xchg
inc
data16
mov
push
out
sbb
hlt
lock
jge
or
adc
pop
mov
mov
inc
xor
mov
pop
xor
shlb
cmpl
xchg
inc
orb
test
cli
inc
xchg
sub
inc
pop
mov
and
hlt
stos
cmc
int
xor
xor
push
dec
in
jae
insb
sbb
sahf
mov
inc
int
aas
out
cmpb
dec
dec
xchg
out
out
and
ljmp
insb
lock
fadds
jecxz
mov
inc
andl
push
jnp
daa
in
ficomps
inc
ljmp
stc
cmc
vmread
mov
dec
ds
and
std
jmp
xchg
mov
nop
iret
sbbb
out
cs
xchg
jnp
mov
xor
loope
into
jo
pop
into
mov
ror
xchg
out
dec
push
xchg
cmc
push
xchg
push
icebp
ss
jle
mov
out
jns
xchg
jns
mov
icebp
push
inc
je
xchg
fsubrl
mov
or
sbb
insl
mull
mov
lret
in
adcl
mov
stc
mov
cmp
mov
pop
and
cli
mov
cmp
mov
in
mov
insl
dec
jbe
ds
inc
jo
setnp
add
leave
popf
test
mov
jb
scas
iret
fisttpl
popa
cmpl
nop
hlt
jnp
sub
daa
mov
mov
cltd
aad
xchg
lret
test
or
or
push
inc
adc
cld
sbb
imul
bound
out
xlat
scas
insb
jno
scas
loop
ja
jle
repnz
icebp
rcll
mov
add
and
pushf
dec
xchg
inc
cli
mov
fcoms
adc
xchg
inc
sbb
les
ds
out
lods
insl
data16
mov
fwait
push
dec
outsb
mov
jp
lret
push
xchg
popf
stos
orb
inc
inc
and
xchg
push
shlb
insl
mov
decb
fidivs
divb
xor
pop
mov
sbb
lret
mov
cmp
mov
push
mov
inc
dec
arpl
push
mov
repz
faddl
push
xchg
pop
imul
xchg
cmp
or
lock
outsb
and
push
adc
sbb
sbb
imul
or
aad
scas
mov
xchg
popf
bound
fucom
lahf
pop
rcll
jmp
push
push
clc
jns
sbb
test
mov
in
jp
push
cmp
int3
popf
dec
fbstp
jmp
ret
movsl
mov
push
mov
sbbl
aam
stc
mov
jmp
repz
cltd
xchg
cmp
ret
xchg
mov
pop
and
pop
jmp
stos
inc
out
in
add
xor
inc
mov
or
dec
mov
jg
mov
jle
sahf
sti
mov
clc
dec
out
mov
repnz
rep
jg
ffree
push
sbb
inc
cmp
cmpsl
lea
pushl
jecxz
mov
pop
dec
scas
je
jo
jp
hlt
pushf
popf
int3
sub
pop
cwtl
into
ss
xor
cltd
out
fidivrs
lret
orl
xchg
imul
inc
sbb
nop
in
push
inc
push
dec
or
inc
cwtl
push
pusha
xlat
jge
mov
cmpsl
sbb
xchg
jns
mov
lock
mov
and
mov
aad
cmp
mov
fadd
pop
mov
mov
pop
movsl
mov
or
push
jb
pusha
mov
sti
leave
mov
sub
lret
andb
xor
stc
inc
andl
insb
mov
xor
mov
adcl
mov
lahf
adc
or
jmp
aad
adc
mov
and
jb
inc
push
jle
xchg
mov
xor
addr16
fwait
adc
mov
cld
mov
daa
mov
addr16
adc
cmp
sub
xchg
add
lret
lahf
and
outsl
pop
or
adc
mov
pop
lret
scas
adc
xor
and
sub
xor
add
xchg
mov
addr16
inc
test
dec
sub
adcl
test
sbb
inc
mull
and
add
adc
mov
mov
pop
daa
add
nop
inc
xchg
testb
aaa
xchg
mov
cmpsl
xor
data16
neg
jmp
lods
aaa
and
push
sti
scas
test
addr16
testl
icebp
jp
aam
icebp
mov
jno
push
or
in
int
add
movsl
ret
sbbl
jmp
roll
sti
pusha
in
adc
out
jle
stc
jg
popa
adc
std
out
pop
lcall
stc
add
xchg
pop
aad
scas
inc
mov
sbb
mov
pop
jmp
xor
imul
idivl
adc
mov
aad
inc
mov
cmp
das
push
sbb
pop
xor
mov
std
test
mov
xchg
fnstcw
cmp
dec
push
dec
in
push
mov
andl
xchg
inc
andb
pop
imul
jb
cmc
daa
dec
jne
mov
mov
sarl
arpl
push
sbb
mov
dec
push
enter
adc
dec
xor
aam
xchg
xchg
jbe
cld
add
cmp
xchg
fsubr
shrd
mov
dec
sub
test
mov
add
lret
cmp
mov
and
adc
pop
pop
adc
sahf
ret
iret
add
mov
or
push
mov
push
mov
jno
sti
subb
mov
dec
xchg
movsl
nop
sbb
ret
jo
popa
imul
mov
pushf
xor
test
inc
cltd
jo
cmp
mov
inc
jecxz
dec
mov
rorb
push
lods
fcmovbe
inc
lahf
cmp
stos
leave
adc
mov
mov
jb
hlt
imul
or
loopne
sub
dec
xchg
sub
out
pop
adc
popa
sti
adc
hlt
in
add
call
lahf
mov
add
xchg
popa
xor
ret
inc
cmp
popf
xor
into
inc
mov
mov
test
stos
push
rclb
orl
pop
insl
pop
imul
cmpsl
mov
inc
test
jnp
insl
pop
xchg
jne
test
into
lret
inc
movsl
lret
xor
sbb
fldcw
ljmp
jbe
or
in
pusha
nop
int3
subl
cmp
rcrl
aam
inc
int
lds
jle
xorb
movsb
mov
push
mov
jns
dec
push
dec
dec
das
mov
mov
cmpsb
shl
inc
mov
add
push
bound
and
scas
mov
ret
mov
xor
xchg
fwait
cmp
xor
je
mov
dec
xor
or
pop
loope
lods
pop
mov
sar
icebp
cmc
xchg
jb
and
aad
pop
ja
mov
roll
jl
call
inc
mov
in
lock
and
gs
in
push
ljmp
cmpsb
cld
adc
xchg
stos
mov
or
into
push
mov
xor
cmp
aas
cmc
scas
fcmovnu
adc
jo
ds
dec
inc
mov
int
je
in
dec
sub
jno
rorb
rcl
add
loopne
add
sub
mov
xchg
jbe
push
adc
sbb
out
into
sbb
adc
inc
ljmp
rol
mov
test
pop
cmp
pop
inc
arpl
rol
stos
shll
inc
mov
mov
andl
mov
push
loopne
test
sub
loopne
push
gs
inc
lahf
int
mov
lcall
subl
push
jnp
addr16
cli
or
mov
aaa
clc
f2xm1
cmpsb
ret
pusha
or
je
pop
push
push
xchg
es
xor
dec
cmp
out
sub
pop
jo
sub
test
push
cli
and
movsb
jae
lods
push
jmp
push
lret
push
xchg
xor
sub
out
sub
xchg
cmp
cmpsb
and
movsl
cmpsb
push
div
movhps
ret
add
sbb
adc
insb
xchg
mov
inc
loope
jmp
adc
xor
jmp
mov
xchg
mov
lds
cwtl
mov
mov
cmpsb
repnz
xor
cwtl
cmp
pop
dec
imul
pop
test
jle
push
mov
dec
or
pop
add
leave
ds
push
and
push
dec
add
int3
imul
dec
adc
mov
jg
call
movsl
int
faddp
jns
fcmovb
cwtl
ljmp
fsts
sub
push
xlat
rcrb
fdivr
inc
mov
pop
pop
mov
sbb
mov
mov
jae
mov
inc
xlat
data16
inc
inc
stos
std
xchg
mov
sub
cld
push
inc
imul
cmp
divb
pop
sub
push
ret
or
mov
jbe
mov
lds
inc
mov
cmpsb
clc
mov
scas
push
push
add
mov
ds
fadds
jecxz
pop
out
or
push
sbb
lret
fs
jno
pop
pop
dec
push
lods
imul
pop
pop
xor
mov
inc
outsb
in
or
push
out
mov
nop
pop
es
add
jns
pushf
lds
mov
mov
push
mov
shrl
out
push
sbb
addr16
sub
mov
lock
add
pusha
inc
leave
ja
lock
call
jmp
jae
jno
mov
push
mov
ja
pop
repz
mov
in
inc
inc
sub
sub
mov
outsb
int3
dec
mov
pop
imul
imul
mov
rcrb
xor
movsl
repz
xlat
push
sbb
or
addr16
push
out
adc
pop
xchg
dec
mov
xchg
imull
cmp
enter
add
push
outsb
scas
movsl
mov
jb
cmp
cmp
mov
mov
xchg
js
insb
pusha
incb
js
xchg
mov
sub
xchg
push
pop
xchg
stos
in
pop
xor
xor
sub
lods
or
adc
cmp
and
faddp
in
jge
inc
xor
shll
jl
and
out
pop
lret
fprem1
jno
jnp
in
mov
sahf
fimuls
hlt
sub
or
stos
in
inc
jge
pop
repnz
pop
stc
das
sub
roll
sbb
mov
divl
jl
or
jmp
leave
sbb
cmc
icebp
or
sub
sub
std
ss
pop
out
mov
inc
push
mov
sarb
sub
outsb
sub
xchg
mov
je
mov
lahf
lcallw
out
adc
loope
lods
ljmp
dec
pop
dec
dec
lcall
sub
in
stos
pushf
cli
xchg
push
mov
xchg
cmp
aad
and
outsb
inc
out
cmp
outsb
jno
fisubl
and
cs
iret
or
jl
int
mov
in
enter
ret
testl
adc
mov
mov
jp
je
sarb
mov
add
rol
xchg
ret
test
hlt
adc
push
sub
int
ret
mov
and
add
push
clc
aas
ret
adc
ds
sbb
sbbl
es
das
jae
jl
add
std
dec
cwtl
add
xlat
sbb
mov
clc
mov
out
mov
xchg
dec
cmp
push
fdivp
adc
daa
jo
lret
lcall
sahf
test
insl
dec
jns
or
xchg
mov
mov
leave
cmp
mov
xor
and
stos
insb
cmp
call
dec
xor
movsb
push
imul
inc
movsb
sbb
xchg
push
mov
fistps
rcl
cmp
cmp
sbb
and
fcom
pop
push
sahf
adc
aaa
cld
loop
mov
sbb
outsl
lock
lods
leave
dec
std
stc
jae
cmpsb
lret
mov
lods
rol
fcompl
sbb
sbb
add
xchg
data16
movsb
gs
xor
enter
mov
fdivrl
pusha
xchg
xor
cmp
imull
jae
je
decl
popl
scas
cmpsb
mov
aaa
and
imull
pusha
xchg
and
sub
aaa
push
ss
ds
sarb
out
cmp
je
in
adc
fbstp
ljmp
scas
call
scas
jge
scas
out
fisubrl
jo
and
sbb
xchg
lds
fwait
stos
arpl
sbb
stos
bound
stos
fcmovbe
sub
pop
cli
adc
add
nop
and
jecxz
dec
mov
pusha
jne
insb
repnz
xchg
les
icebp
and
pop
test
getsec
adc
lds
icebp
into
out
xor
adc
inc
sahf
test
int3
sub
pusha
mov
rcrl
shrd
push
insl
stos
scas
xchg
sub
fs
adc
pop
sarb
or
out
femms
adc
sub
xlat
mov
lods
je
sub
push
push
push
push
mov
mov
push
adc
call
divb
leave
xchg
loopne
and
negl
ret
add
mov
sub
pop
xchg
mov
mov
inc
jo
jl
cmp
cltd
pop
stos
inc
sbbl
cld
int
loope
ret
imul
flds
mov
mov
outsl
inc
in
mov
sub
icebp
mov
sub
leave
or
pop
nop
mov
or
pop
mov
pop
test
xchg
mov
test
push
fs
scas
push
lcall
popa
test
jae
or
out
xchg
dec
cmpb
shrb
jno
in
cmp
xlat
xor
js
hlt
cmp
inc
jns
shl
rcrb
push
test
xor
aam
cmp
loope
out
lret
int
loope
xorl
pusha
aas
stc
pop
in
cmp
gs
shll
cmp
popa
xchg
mov
fisubs
in
cwtl
jmp
sub
mov
or
xchg
xchg
outsb
push
mov
adc
sub
lahf
cmp
fs
popa
in
push
insb
mov
mov
loope
ds
inc
jmp
dec
mov
pop
mov
sbb
adc
pushf
sub
mov
dec
sbb
mov
adc
ret
movsb
inc
mov
loopne
xlat
xchg
notb
scas
cmc
sub
sbb
jg
jecxz
rcll
stos
movsb
ficoms
cmp
mov
push
inc
outsl
jge
cmp
in
pop
jnp
outsb
mov
dec
jns
mov
aam
mov
ljmp
repz
dec
loopne
mov
push
jmp
pop
das
insl
in
rcrb
adcl
xor
mov
andb
push
and
inc
xor
xchg
mov
xor
pop
shlb
fs
mov
das
xor
adc
lret
adc
mov
add
push
test
inc
mov
dec
push
icebp
cli
and
xchg
adc
repz
and
cmc
push
cmp
jns
push
mov
pop
xor
cld
fdivr
or
and
fs
xchg
add
outsb
stc
js
pop
lahf
cltd
add
cmp
iret
mov
sub
mov
mov
push
jno
jecxz
push
xchg
ja
cmp
pushf
fimull
stos
mov
cmpl
fistpll
sub
dec
xor
or
xchg
jl
dec
in
push
and
xor
je
nop
adc
addb
inc
mov
lcall
sub
sbb
jo
sbb
mov
pop
inc
mov
test
jo
sbb
dec
mov
data16
ds
adcb
in
movsb
daa
jbe
xchg
pop
fwait
test
pushf
fs
push
push
mov
dec
subl
pop
stc
mov
popf
rcll
mov
ret
sbb
push
pop
incb
imul
sbb
aam
cmpsl
push
jae
xchg
mov
test
mov
insb
sub
cmpsb
das
add
sub
sub
pop
out
dec
cwtl
shlb
jne
adc
push
popf
incl
insl
sbb
call
adc
xor
iret
fdivs
es
and
cmp
out
ficoml
sub
xchg
xor
push
cwtl
fwait
adc
fsubl
arpl
imul
clc
scas
add
ret
in
outsl
pop
push
xchg
add
dec
repz
aaa
rol
divl
jmp
xchg
dec
movsb
sub
cli
xorb
push
mov
call
idivl
mov
mov
sbb
xchg
aaa
es
and
mov
inc
or
mov
push
test
push
rclb
xchg
repnz
xchg
insl
lcall
call
push
dec
out
or
pop
cld
inc
cmp
scas
inc
fdivrl
push
leave
rorb
divl
imul
or
fldcw
pop
pop
aad
cmp
cli
inc
into
jno
push
rcll
push
xchg
lret
mov
push
aas
sub
negl
dec
ja
jb
xchg
jp
int3
outsl
movsb
es
fidivrl
jb
jbe
js
sbb
lret
jmp
dec
mov
dec
pop
stos
dec
lock
imul
dec
sub
push
adc
aam
fildll
filds
add
adc
push
int
pop
aaa
fwait
cmp
fidivrl
sub
pop
leave
push
mov
stc
push
andb
jno
pop
lds
in
adc
xor
xchg
insb
pop
sub
jo
repz
hlt
dec
mov
mov
stc
push
jb
in
pop
jno
enter
adc
sub
rcrb
sbb
sar
inc
in
mov
pusha
fisubs
mov
out
shlb
mov
xor
and
add
call
sub
inc
stc
jnp
or
pop
adc
push
rcl
lea
xorl
sbb
xor
cmp
inc
into
insl
sbb
push
mov
pushf
shrb
push
clc
leave
cmp
les
push
icebp
sbb
cmc
loope
jno
das
push
pushf
pusha
enter
push
lods
test
lahf
xchg
les
addr16
loopne
and
lods
rcll
mov
xchg
movsb
test
enter
push
and
xchg
jnp
add
xchg
sbb
jg
cmpl
dec
cs
in
mov
negb
into
cltd
insl
out
loope
fmull
xorb
jge
bound
into
movsb
insl
adc
mov
and
adc
inc
rcr
sahf
pop
out
das
lret
push
test
mov
fimuls
xor
mov
cmp
pop
sbb
sbb
push
test
stos
mov
es
fwait
cltd
lods
cmp
je
inc
adc
lock
mov
dec
fdivl
or
or
in
mov
xlat
adc
cmp
inc
pop
dec
xor
mov
push
gs
movsl
inc
repnz
and
outsl
cmp
jge
or
in
addr16
frstors
hlt
xchg
fsubl
mov
in
jns
mov
dec
jnp
outsb
movsl
and
sahf
ds
lea
xchg
inc
cli
imul
clc
sub
and
mov
pop
cwtl
xor
lods
mov
mov
jae
mov
mov
sahf
jno
fstps
leave
xchg
inc
and
lret
lcall
int3
add
int3
addl
xor
shlb
fsub
add
sub
mov
mov
cmp
push
sbb
jge
outsb
cmc
pop
push
jb
sbb
xchg
push
into
ds
xchg
nop
repz
jge
repz
iret
xchg
int
sahf
adc
mov
push
int3
xchg
fucomp
mov
xchg
sbb
push
insb
scas
ret
pop
jb
movsb
and
adc
rorb
dec
add
out
fbld
inc
out
xor
div
daa
push
cmpsl
pop
lea
sub
xchg
enter
cld
push
mov
inc
pop
repz
pop
xchg
sbb
cmp
mov
aas
loopne
mov
lods
leave
push
out
mov
ret
scas
add
sub
out
xlat
ja
mov
dec
lahf
imul
movsb
add
xor
mov
fsubrs
xchg
repz
pop
faddl
push
mov
xor
push
mov
loopne
xchg
inc
ds
imul
cld
jae
cmp
insl
pushf
in
leave
inc
out
sbb
lahf
push
out
pop
ljmp
and
mov
mov
mov
mov
xchg
popa
push
rcrl
lcall
inc
movsl
fcmovnbe
mov
xor
sub
pop
jnp
arpl
pop
lea
pmaddwd
leave
call
aad
test
les
int3
ja
ds
pop
ja
in
and
inc
mov
out
ret
xchg
mov
inc
pop
mov
pop
popa
pop
pop
lock
inc
or
sbb
sbb
mov
nop
ja
out
iret
sti
popa
loop
jmp
sbb
loope
test
or
xchg
aam
inc
daa
loop
or
setl
or
jle
xchg
mov
out
stc
adc
mov
fbstp
movsb
stos
dec
pop
addl
loop
lret
scas
push
add
sbb
pop
sbb
in
lods
sub
mov
push
or
sarl
add
shlb
cmp
addr16
stos
lcall
pop
cmp
mov
movsl
xor
mov
cmp
xor
dec
es
fwait
test
xor
rcll
imul
fisttpl
mov
rorb
das
mov
aaa
lea
cld
call
scas
dec
out
jmp
jae
xchg
jg
adc
out
cltd
sub
fdivrs
sbb
and
clc
sbbl
push
les
cmpsl
test
scas
sub
data16
out
xor
add
sub
inc
arpl
cld
lds
inc
rcrb
inc
ficoml
icebp
mov
mov
and
insl
xchg
psraw
shrb
sbbb
addr16
xchg
rcl
mov
out
lods
or
xor
sub
jnp
inc
sub
mov
jle
js
rcrb
or
xchg
mov
xor
in
mov
push
inc
sbb
daa
andb
xchg
pushf
dec
and
add
jl
hlt
repz
mov
sub
nop
rorb
insl
jne
notrack
lcall
inc
jl
clc
jmp
cmp
add
fimuls
mov
icebp
imull
sub
mov
pop
aam
pusha
and
iret
out
sub
sbb
lods
or
nop
hlt
sub
imul
flds
out
mov
inc
mov
mov
adc
mov
xor
pop
mov
sub
cmc
xchg
cli
sub
pusha
mov
push
push
mov
adc
int3
das
enter
les
push
fstp
test
sbb
rcll
out
inc
into
jne
pushf
lds
mov
pop
jg
and
mov
daa
inc
negb
outsb
xchg
outsb
mov
add
aad
push
jne
call
idivb
mov
pop
inc
rorl
out
test
mov
pop
fwait
inc
add
mov
pop
scas
jne
stos
sbb
pop
inc
scas
fstpt
imul
and
adc
loopne
jno
xor
jmp
pmullw
jp
cmp
xchg
leave
mov
xor
pushf
mov
aam
jle
cltd
aad
jl
lea
jnp
test
rorb
stos
sbb
jmp
jnp
adc
movsb
ret
xchg
sbb
xlat
rcll
add
xor
in
xor
xchg
mov
inc
ss
xchg
icebp
int
xor
icebp
pop
loop
xlat
test
stos
adc
sub
aaa
cmpsl
xchg
pop
lcall
pushf
push
push
xor
cmp
sub
or
push
loopne
mov
sub
out
adc
scas
push
sub
add
xor
fimuls
jge
mov
mov
test
fimull
xor
jmp
add
cmp
mov
aam
into
icebp
mov
imul
adc
mov
in
lea
jne
mov
jnp
hlt
and
pop
cmp
mov
dec
fildl
mov
btr
cltd
es
inc
jne
imul
lds
imul
in
adcb
jle
xor
push
and
shrl
ret
inc
mov
call
daa
fwait
add
mov
nop
fisubs
sbb
imul
sar
adc
data16
icebp
or
xchg
xlat
mov
xchg
in
gs
in
push
popf
add
insl
dec
dec
lock
mov
aam
scas
fmul
cmp
cli
outsl
mov
mov
ljmp
sub
and
testb
add
xor
dec
mov
mov
inc
inc
dec
push
rorl
inc
jle
push
lea
cwtl
ret
sbb
stc
jle
repz
fcomi
scas
push
jge
addr16
mov
adc
jl
inc
icebp
das
mov
add
add
pop
sbb
sbb
pop
pop
out
pop
pop
test
xchg
xchg
fsubl
mov
cwtl
int
cmp
mov
ja
inc
fisubl
arpl
cltd
push
mov
das
sub
out
add
ret
test
fstps
xchg
mov
ljmp
add
xchg
iret
dec
out
out
inc
mov
movsl
mov
add
imul
sub
add
stos
mov
jge
push
sarb
push
jp
dec
xchg
loopne
popa
mov
movsb
or
xchg
mov
ljmp
xchg
mov
dec
sub
enter
fdivrl
dec
subl
lock
mov
xchg
cmp
jo
xchg
outsl
mov
lods
dec
push
adc
ret
sub
pop
sarl
push
dec
jmp
out
lahf
pop
xor
aad
in
sub
xchg
lods
and
imul
dec
and
fsubrs
or
xor
out
mov
iret
stc
jb
jae
mov
xchg
fimuls
add
sar
mov
arpl
mov
mov
in
mov
test
leave
lock
mov
dec
inc
and
sub
push
add
adc
push
data16
xor
scas
fmull
das
rolb
xor
xchg
insl
test
leave
adc
popa
ds
ror
stc
pusha
sbb
cwtl
sarl
mov
gs
scas
subl
sbb
out
test
cmpsl
jg
ficomps
mov
sub
jl
xchg
mov
sbb
dec
outsb
loopne
push
pop
xlat
xlat
fstps
mov
fisubrl
std
icebp
mov
or
dec
fdiv
test
jle
bound
test
insb
jecxz
cmp
out
adc
jg
cmpsw
out
loope
pop
popa
xchg
sub
jbe
sbb
sub
ss
push
mov
cmp
mov
gs
mov
pop
xor
dec
xor
xor
es
jge
mov
fdivrl
clc
lcall
xchg
sahf
int3
aam
xor
cli
fwait
mov
push
sub
stos
stc
insl
test
pop
out
inc
sbb
out
jno
aam
fnstenv
stos
ss
mov
mov
pop
es
and
imul
fwait
mov
or
clc
imul
adc
cmp
xor
and
xchg
and
sub
fildl
xor
dec
xchg
data16
fistps
popa
jnp
in
cmp
rcrl
icebp
xorl
or
mov
mov
inc
mov
sub
inc
xchg
repz
pop
rcll
ret
adc
pop
push
jl
out
jns
repz
xchg
or
pop
or
xlat
aad
mov
or
es
jge
jns
and
rorl
add
jge
and
mov
adc
mov
fcmovne
stos
xchg
sbb
in
mov
pop
pop
pop
push
push
rolb
sbb
and
popf
jecxz
sbb
mov
jg
mov
les
fsubs
add
xor
push
xchg
xor
rcr
out
ja
icebp
mov
dec
sub
mov
adc
mov
jb
pop
dec
mov
inc
jo
ja
pop
jno
cmpl
shll
push
and
mov
pop
sbb
xchg
cld
and
stos
lret
pushf
inc
cmpsl
mov
stc
in
dec
add
push
mov
jg
push
push
ficompl
xor
xchg
pop
push
scas
or
lds
rolb
lret
vmwrite
push
push
mov
push
loop
pop
xchg
in
daa
push
js
mov
dec
repnz
push
or
dec
cmpsl
adc
ss
sbb
lods
and
addr16
mov
xchg
mov
xchg
sbb
cmp
sub
fnsave
jle
inc
hlt
test
test
pop
shll
lahf
cs
mov
sub
jge
cli
add
sbbb
fs
mov
or
push
jae
and
push
mov
push
leave
and
xchg
dec
push
orb
adc
mov
pop
repnz
iret
push
mov
jp
mov
and
fmulp
xchg
movsl
dec
inc
sub
ds
mov
xor
sbb
mov
xchg
pop
jp
mov
jmp
std
add
mov
lock
jle
mov
pop
std
js
sub
repnz
out
ret
jecxz
push
jecxz
inc
jge
aas
roll
cmp
mov
push
mov
jp
cwtl
mov
lock
mov
inc
hlt
mov
lock
clc
pop
andl
shll
xor
enter
cpuid
sbb
sbb
dec
and
ret
in
xchg
inc
dec
push
cmp
jmp
xor
mov
nop
jl
stos
clc
mov
ret
popa
jns
std
pop
dec
shlb
mov
xchg
xor
xor
js
cli
insl
mov
lret
leave
dec
mov
divb
adc
aad
adc
fucomi
pop
dec
test
add
stos
lret
pop
shll
iret
mov
repz
push
and
mov
add
and
sti
stos
ret
jno
xchg
mov
sbb
and
xchg
adc
mov
jmp
cmpb
sub
outsl
xchg
xchg
xor
add
dec
fiaddl
decb
jne
or
push
adc
lods
cs
aaa
cmp
mov
xor
xchg
shrb
out
hlt
or
sbb
inc
xchg
rcl
daa
out
pop
dec
ret
scas
mov
hlt
push
mov
xorl
shl
mov
xchg
mov
stc
xorl
scas
ret
outsl
in
sub
inc
inc
lds
jle
nop
xor
jge
or
jo
scas
xor
jl
push
pop
jbe
pop
test
push
imul
sti
jl
mov
mov
in
or
cli
gs
dec
pop
pop
and
lock
pop
loope
pop
mov
cmp
cmp
in
xorl
gs
ljmp
in
mov
cmp
loope
add
pop
movsb
in
sub
frstor
dec
sbb
dec
stos
sti
jno
sub
and
fcomi
lock
inc
xlat
pop
jecxz
push
ja
clc
imul
ds
push
ret
in
loopne
sub
jae
push
jns
lock
or
dec
push
in
dec
popa
dec
jge
int
push
les
and
add
js
dec
lods
mov
test
sbb
roll
ror
xchg
adc
mov
jl
in
aad
jbe
into
fstl
xchg
into
test
mov
shll
fwait
adc
ret
les
mov
cmc
cmp
outsb
pop
sbb
add
fists
push
mov
lahf
outsl
jge
icebp
push
into
pop
mov
out
cmpsl
daa
mov
mov
add
or
xor
inc
daa
sbb
adc
xor
xor
data16
push
dec
lock
xchg
sub
push
cmp
fwait
outsl
mov
push
or
mov
fucomip
mov
and
adc
or
pop
pop
mov
roll
add
push
imul
mov
ret
xor
insl
push
add
ja
repz
ret
aad
notl
icebp
adc
jnp
jns
push
enter
ret
push
cmp
out
push
pusha
xlat
fimuls
push
sub
sub
mov
daa
mov
sub
adc
push
mov
mov
mov
mov
jecxz
sub
or
xor
jg
adc
lds
int
lock
and
adc
fadds
mov
inc
sbb
inc
and
sti
pop
adc
cmpsb
je
pushf
xor
xlat
mov
pop
xchg
jg
xor
outsl
xchg
cld
enter
cld
pushf
loop
stc
movsb
mov
sahf
lds
pop
vmwrite
dec
xchg
xchg
cmp
mull
cmp
mov
je
cli
ljmp
sbb
stos
xchg
in
xchg
flds
stc
jg
jne
jnp
or
mov
lahf
test
or
imul
loopne
cmpl
dec
cltd
pop
shll
pop
xchg
pop
fcoml
xchg
fisttps
sub
xor
and
ror
xchg
and
pop
es
or
sbb
bound
and
xchg
jae
adc
push
or
mov
jecxz
addl
jecxz
dec
lea
add
cmp
test
into
test
or
imul
lods
add
sahf
cmp
call
mov
lret
jno
orb
std
xchg
inc
insl
daa
loope
jle
lcall
mov
add
adc
or
push
or
lods
insb
std
icebp
push
aas
jle
cld
push
sub
xchg
sbb
pop
xchg
mov
cmpsb
or
jmp
sarb
adc
or
jb
cmc
popf
out
ret
xor
dec
cmp
addb
hlt
outsl
into
stos
inc
adc
or
cmc
in
mov
in
mov
cmp
movsl
push
xchg
sahf
jo
xor
xchg
test
je
sti
cld
fs
aaa
imul
cmp
or
lret
and
add
mov
js
mov
sahf
out
outsb
movsl
dec
ds
add
fisttpll
cmpb
jmp
das
push
jo
sub
jg
pop
lret
and
data16
scas
jge
xchg
or
lods
pop
scas
out
lahf
mov
xchg
jns
rcll
xchg
xchg
fstpl
outsl
xchg
loop
mov
mov
dec
lock
stos
push
push
or
inc
sti
enter
shlb
mov
outsb
lock
outsl
xchg
mov
push
xchg
adc
insl
cmp
cmpsl
sub
mov
jp
push
mov
rclb
movsb
sbb
mov
sub
lods
in
xchg
sahf
mov
clc
lret
mov
cwtl
jp
cmp
pop
js
cmp
jmp
adc
rorb
or
xor
cmpsb
inc
pusha
pop
add
loope
or
dec
cli
mov
push
fwait
mov
push
andl
lods
mov
daa
lods
fcomi
ss
cmp
xor
pusha
test
jmp
lods
jns
lret
inc
dec
sub
push
adc
pushf
out
dec
in
cwtl
iret
dec
loopne
test
mov
inc
sub
repnz
outsb
sti
popf
mov
cmp
aaa
sbb
or
imul
xlat
jl
lods
rolb
lret
mov
sahf
inc
ret
sti
outsl
mov
fcmovb
adc
cmpsl
int3
loopne
ret
xchg
cmp
cmp
movsb
stos
mov
data16
in
sar
movsb
jecxz
in
fcoml
ljmp
fwait
xor
push
sahf
xor
sub
ss
xor
nop
push
pop
out
std
mov
incb
gs
pop
xchg
stc
push
mov
xchg
mov
fidivrl
cltd
pop
mov
xchg
fdivrs
push
adc
dec
mov
and
fcmovu
pop
jb
mov
jp
jnp
out
pop
aaa
imul
sbb
jp
mov
mov
repz
out
add
mov
push
and
sub
pop
sub
out
fsubrl
int3
xchg
fstpl
push
popf
push
mov
mov
in
push
icebp
jge
jb
pop
sarl
shll
mov
xlat
loop
pop
stc
testb
stos
and
int
repnz
cwtl
test
add
cmp
inc
in
xor
dec
cmpb
xchg
xchg
jb
adc
or
fs
or
je
pop
popf
movsb
dec
enter
int3
xchg
je
mov
sbb
add
jge
add
mov
pop
addr16
cltd
sti
push
adc
adc
and
sbb
decb
aam
sbb
out
sub
int3
mov
cmp
xor
inc
xchg
jo
dec
gs
rcll
loop
xor
fwait
jl
ret
pop
push
sub
or
and
cmp
or
mov
pop
test
jecxz
leave
and
sbb
testl
es
xchg
sbb
cmpsl
push
movl
imul
das
addr16
mov
ljmp
in
in
jno
mov
and
out
mov
pop
movb
or
mov
add
xchg
loope
mov
jg
out
fstl
sbbl
xlat
fcmovnu
jge
js
or
xor
or
stos
rclb
loopne
cmpsl
inc
xchg
xchg
cmp
mov
nop
inc
jmp
pop
dec
pushw
xchg
jl
add
cmpsl
sub
mov
add
jbe
push
add
cmp
push
daa
or
add
cltd
adc
sti
mov
cmpsb
cmpsb
adc
les
push
or
sbb
inc
aad
push
push
xor
dec
stos
rcr
push
fimull
loopne
mov
xor
in
ds
xor
push
xor
mov
out
pop
add
sub
movsl
push
sbb
adc
mov
test
and
xor
inc
iret
cmpsl
push
daa
mov
xor
and
lds
lock
out
xlat
add
dec
scas
jae
rcrl
cmpb
inc
fidivl
push
xlat
or
repz
and
lods
pop
dec
leave
fstcw
sbb
stc
dec
dec
cmp
aaa
inc
mov
das
cwtl
jg
pop
dec
pop
je
xchg
pop
subl
mov
es
scas
push
sbb
mov
cmpsb
shlb
lock
std
les
push
sub
jbe
mov
movsl
sahf
insl
je
mov
call
sbb
divl
gs
hlt
or
inc
pop
fld
cmpsb
dec
lea
pop
dec
or
repz
sti
jge
dec
push
imul
das
xor
cld
dec
pop
or
lret
lcall
call
js
mov
xor
jne
mov
mov
ret
push
adc
cltd
divb
out
sbb
jno
imul
pop
mov
jl
int
les
jo
inc
and
and
test
cld
lds
stos
pop
inc
cld
pop
shll
xchg
aam
aad
popa
pop
and
orl
aam
movsl
pushf
pop
mov
aas
rorl
push
sbb
ret
fs
cmp
add
dec
mov
testb
cmp
movl
jb
cmpsl
cmpsb
in
cltd
cld
mov
jne
cmp
ret
scas
mov
push
jb
jnp
scas
and
dec
movsb
lea
push
push
test
sub
lods
pop
xor
gs
dec
adc
pop
out
mov
dec
std
test
sub
lods
pushw
xor
bnd
dec
adc
stos
dec
push
xchg
xlat
dec
sbb
lret
movsl
in
sbbl
xchg
add
imul
xchg
push
movsl
jns
inc
lahf
loope
inc
ret
sub
adc
cmp
mov
out
imul
sbb
inc
push
inc
sbb
popf
mov
out
xchg
mov
or
test
mov
shl
jnp
inc
addb
test
push
out
testl
mov
pushf
popa
popf
sbb
inc
mov
and
fldenv
mov
xchg
in
cmp
jo
mov
jle
mov
fistps
mov
push
pop
xchg
pop
push
mov
mov
cld
cld
push
sbbl
iret
mov
inc
mov
decb
and
enter
sbb
lret
shld
data16
push
push
decb
jb
popa
mov
stc
mov
movsl
and
rorb
push
mov
or
pop
cmp
dec
xchg
mov
jo
fistps
sub
int
jmp
push
aam
xor
mov
mov
dec
popf
ja
int3
jno
negb
dec
pop
cmpb
nop
adc
nop
repnz
sbb
outsb
mov
stc
jp
inc
ljmp
mov
ret
dec
loopne
lcall
dec
rol
jg
push
rclb
mov
ror
hlt
in
xchg
sbb
sub
loope
mov
sub
jecxz
iret
jae
loopne
cmpb
scas
adc
cmp
add
incl
ja
pop
add
dec
fists
ret
roll
cwtl
testl
das
add
and
inc
pop
jo
mov
mov
repz
addr16
add
xchg
jns
les
sub
xchg
inc
test
aaa
sub
fdivs
test
inc
cmc
jns
xchg
adc
stos
mov
lahf
inc
and
cli
fisubs
cltd
xor
divl
cmp
cs
shrl
int3
adc
scas
sub
mov
cmp
mov
and
mov
loope
das
call
shl
dec
mov
sarb
pop
jmp
xlat
lahf
int
arpl
ficoms
adc
push
aad
xchg
aas
pushf
mov
clc
mov
inc
pop
jle
inc
jbe
rol
mov
adc
in
leave
mov
mov
stc
xor
in
jmp
mov
lods
hlt
push
cmc
jnp
jg
outsb
push
repnz
sub
das
scas
lcall
mov
xchg
test
jmp
push
add
or
pop
out
sbb
subb
sbbl
pushf
cmp
lods
pop
inc
mov
mov
mov
jmp
mov
dec
stos
push
mov
test
vpmovmskb
ds
mov
add
loop
cmp
ds
in
xor
pop
push
js
cli
cwtl
lcall
ret
jae
push
jmp
leave
stos
out
cmc
lds
out
dec
adc
mov
orl
lds
into
cmp
aaa
push
pop
int
mov
popa
int3
test
or
arpl
mov
daa
outsb
xlat
inc
movsl
inc
outsb
sub
xor
xchg
lret
adc
adc
adc
xchg
pop
xlat
movsb
leave
imul
xor
mov
sub
sahf
je
xchg
out
in
jb
xlat
rorb
cmc
dec
push
and
pop
mov
cmovns
sahf
repz
loope
inc
fwait
mov
adc
add
xchg
aam
divl
mov
daa
scas
int3
sbb
les
cmpsl
pop
mov
fstl
test
fnstcw
jmp
outsb
inc
stc
icebp
ret
int
jae
xchg
js
jle
test
xchg
mov
out
jmp
mov
mov
incl
pusha
lods
mov
adc
mov
or
aad
sbb
dec
lods
and
repz
mov
ja
lea
roll
sbb
out
bound
es
lret
leave
pusha
popf
test
mov
or
sub
sbb
shl
xor
inc
jge
mov
popf
lcall
nop
aaa
insb
nop
je
iret
cltd
mov
pushf
subl
sub
outsl
inc
cs
jg
push
pop
mov
jbe
push
in
sub
cmp
pop
adcl
jbe
lret
mov
add
hlt
rclb
mov
or
aad
dec
es
or
jo
loop
mov
cmpsl
cmc
adcl
mov
inc
and
pop
or
mov
int3
test
sti
outsb
arpl
push
add
jge
nop
les
jnp
push
cli
mov
or
mov
cltd
and
sub
ljmp
pop
mov
xchg
pop
pop
dec
mov
clc
inc
mov
mov
xor
stos
dec
mov
sbb
ss
xchg
popf
ja
xchg
orl
lcall
js
xor
cmc
shl
mov
sub
pop
popl
sti
mov
addr16
add
mov
cmp
rcr
pop
es
or
mov
xchg
mov
pop
or
inc
mov
push
shrb
jne
inc
into
scas
fisubrs
jb
or
mov
fnsave
cmp
cmpsb
push
and
test
insl
lods
push
sub
mov
dec
xor
add
and
add
sbb
jne
dec
sarl
cli
sbb
fiadds
movsb
mov
fnstenv
mov
mov
outsb
mov
in
lcallw
andl
mov
insb
jo
add
out
add
or
lds
xchg
sbb
lcall
pop
jbe
dec
push
and
lea
xchg
mov
clc
pusha
mov
mov
std
testb
add
xor
mov
xor
fisubs
or
and
cmpsb
inc
dec
xchg
and
cmpsl
das
test
call
cmp
mov
or
cmp
inc
or
jne
dec
test
push
mov
movzwl
fs
ljmp
push
pop
incb
cmp
pop
push
orl
xchg
dec
iret
outsb
inc
sub
testb
dec
adc
data16
jle
in
sahf
jno
lds
push
pop
lret
cmpsl
mov
leave
adc
xchg
add
enter
out
jle
push
pandn
aas
pop
mov
and
and
je
ret
dec
mov
xor
jg
movsl
repz
sub
jmp
push
xor
or
addr16
outsb
out
lahf
stc
stos
push
stos
aas
sbb
aaa
cmp
jge
push
out
and
sub
icebp
and
jne
data16
shlb
mov
iret
sti
sarl
xor
dec
les
ficompl
mov
jp
shr
in
jecxz
adc
mov
fstp
xor
inc
aad
loop
jo
add
dec
xchg
popf
adc
adc
insb
lods
pop
cmpsl
xor
bound
clc
lcall
pusha
test
fwait
sarl
push
pop
sbbl
push
push
imul
sbb
xor
mov
xor
into
dec
dec
out
adc
add
shll
dec
lahf
or
mov
push
push
stos
in
mov
pop
inc
test
sarb
sbb
xchg
mov
mov
test
push
push
sbb
mov
mulb
inc
cmp
sub
incb
add
fldcw
jp
mov
cmp
ret
inc
xor
inc
or
sub
add
mov
insl
sub
dec
adc
in
xchg
leave
dec
sbb
sub
mov
adc
jb
ja
insl
aad
dec
mov
xor
movb
in
shll
mov
ds
add
pop
cmpl
add
jne
lock
mov
pop
insl
fadd
xchg
dec
or
push
lret
mov
test
add
mov
jnp
cld
sbb
test
pop
jmp
sahf
mov
int
push
addr16
xorb
dec
outsb
xlat
test
jo,pn
pop
push
push
pushf
notb
jno
xchg
xor
fiaddl
jbe
inc
push
xchg
push
sbb
lds
adc
sarb
imul
into
sti
adc
lock
cmp
mov
repnz
xor
sub
mov
lods
inc
addr16
push
pushf
sbb
push
sub
jmp
testb
arpl
mov
xchg
sbb
pusha
mov
pop
inc
out
aad
adc
hlt
out
std
xchg
jle
hlt
jle
cmp
mov
loop
call
jmp
xchg
lret
or
jae
lods
sbb
push
pop
xorl
arpl
gs
rclb
dec
insb
push
daa
mov
fs
mov
push
sahf
ja
jo
stos
ret
loop
add
dec
jmp
dec
mov
insl
mov
sub
cmp
pop
pop
fnstcw
inc
imul
lea
xor
inc
jbe
pop
mov
es
mov
mov
xchg
adc
xchg
mov
mov
iret
push
xor
inc
pop
leave
push
enter
cs
inc
and
cli
push
and
dec
sbb
jle
test
add
je
cmp
icebp
mov
push
xchg
pop
and
rorl
mov
dec
adc
push
cmp
jo
adc
mov
xchg
xchg
push
sahf
add
mov
cmp
mov
push
test
cs
nop
aaa
ja
xchg
loope
add
mov
insb
loopne
adc
daa
inc
mov
add
xlat
inc
jbe
stos
add
jp
mov
jnp
insb
dec
add
out
out
mov
nop
fistl
ja
pop
iret
insb
inc
dec
mov
sbb
and
daa
popf
mov
inc
pop
and
lret
mov
xchg
pusha
mov
scas
mov
stos
jns
push
aaa
xchg
cld
pushf
pop
fs
and
and
aad
or
je
pop
leave
in
insl
or
cli
sub
push
mov
out
jno
mov
dec
les
loope
or
test
andb
jo
in
cmp
fcoml
push
inc
rcrb
add
ja
pop
sub
mov
cmp
inc
sub
jecxz
cmc
ss
sbb
loop
incb
push
in
xchg
aaa
mov
inc
push
xchg
rcrb
ret
xchg
jno
pusha
xor
loope
lock
and
out
pop
and
sbbl
jg
xchg
lock
aas
sti
dec
lea
mov
lret
add
adc
mov
cltd
pop
dec
in
xor
adc
or
cltd
xchg
testl
or
aam
add
insb
std
mov
cmp
cmpsl
mov
popa
push
add
stc
add
in
sbb
and
nop
push
and
je
aas
pop
popf
xchg
mov
inc
rorl
inc
adc
xor
and
pushf
cmp
or
add
mov
fbstp
sub
xchg
and
pop
xchg
loop
add
idivb
ror
xchg
dec
sub
mov
dec
cmp
jno
cmpsl
add
sarb
sub
add
jl
lret
outsl
into
fisubl
pop
std
inc
add
nop
mov
inc
push
test
push
mov
add
or
cld
roll
cmpl
xor
loopne
cmp
push
cwtl
sbb
std
jge
in
outsb
jge
jbe
sbb
xchg
ret
pop
mov
and
and
jo
push
jecxz
sbb
add
mov
mov
ret
xchg
sar
call
test
pop
jbe
imul
aam
popf
xor
mov
sbb
mov
dec
dec
repnz
cmp
es
mov
cmp
sbb
sbb
fcmovnu
add
push
sahf
sbbl
mov
shll
fidivl
fdivl
push
pop
inc
in
xor
ds
dec
mov
in
repnz
inc
in
pop
push
push
ja
test
ret
push
sub
or
push
lret
les
fists
pop
mov
mov
mov
fsubs
xchg
imul
push
out
rcrl
xchg
popa
and
je
adc
push
out
xchg
aas
les
xchg
sub
mov
or
ficomps
push
xchg
outsb
push
xchg
icebp
push
pushf
repnz
mov
mov
sbb
out
adc
inc
mov
cmp
rolb
mov
js
int3
leave
test
jl
icebp
les
clc
iret
push
fwait
rep
push
push
clc
das
pop
into
jo
xor
cmp
int3
stc
aad
imull
fidivl
pop
das
jae
jl
mov
es
loop
mov
daa
jo
mov
mov
testl
addr16
pop
push
mov
test
xchg
xchg
cmpl
sbb
fxtract
dec
orl
sahf
or
gs
jmp
in
mov
sarb
pop
ret
out
fstpl
cmp
pop
and
imul
jge
xchg
mov
fdivrs
cwtl
pop
std
mov
imul
adc
and
inc
mov
gs
movsb
adc
and
mov
xchg
jl
sbb
lock
and
and
sbb
lock
push
das
gs
cmp
sbb
and
push
sub
imull
mov
aam
dec
pop
push
and
adc
cld
sub
sbb
and
aas
xlat
xchg
sub
adc
repz
cmp
adc
ret
dec
jnp
push
add
mov
sub
ret
dec
fmulp
test
fsubs
nop
pushf
dec
call
enter
rcll
shrb
cwtl
js
or
hlt
push
or
iret
xlat
or
jle
jnp
mov
or
adc
push
xchg
pop
enter
in
mov
adcb
lret
sbb
nop
mov
mov
jmp
inc
roll
cltd
jp
push
mov
pop
push
mov
daa
outsl
xor
fidivrs
cwtl
mul
repz
std
fmull
adc
pushw
insb
cld
pop
lods
jecxz
xlat
cs
and
add
outsb
xchg
pop
pushf
ret
movsl
rcrl
or
mov
movsl
adc
jle
loope
adc
flds
cmpsl
adc
stc
clc
lcall
stos
xchg
mov
jno
pop
dec
cmp
fistpl
ja
cmp
inc
enter
push
iret
jp
cmc
ljmp
cmpsb
cld
mov
mov
in
ss
std
xchg
cwtl
rorb
sti
lahf
fmull
fnstsw
sub
push
inc
mov
nop
mov
or
pop
mov
add
movsb
mov
aad
inc
xchg
add
test
pop
loopne
out
movsb
mov
stc
xor
mov
das
dec
dec
or
lock
loop
mov
pop
inc
aas
push
popa
mov
or
test
add
xlat
inc
mov
dec
lock
subb
mov
pop
jns
sub
pop
mov
sub
loop
adc
enter
cltd
insb
sti
repz
sbb
gs
xchg
es
iret
inc
jno
iret
lcall
mov
test
push
add
dec
pushf
pop
out
pop
test
jno
cmp
mov
sar
rorl
sbb
sbb
cmp
aaa
andl
add
adc
pop
dec
dec
testl
sub
mov
push
inc
fmul
test
mov
mov
or
sub
loopne
dec
fwait
pop
xor
dec
int3
lds
lahf
mov
jne
stos
shll
pop
loopne
ret
pop
add
out
jg
mov
cmpsb
mov
outsl
fdivrp
jecxz
aam
jge
or
pop
fs
adc
dec
imul
jle
inc
test
or
or
mov
mov
mov
jg
lret
or
bound
xchg
push
push
xor
cmp
scas
jns
inc
inc
mov
rol
jae
mov
adc
jmp
enter
push
xlat
aam
add
sbb
scas
icebp
mov
cwtl
fistl
sahf
or
xchg
cmc
sbb
add
cmp
jb
popa
je
fwait
lcall
mov
insl
or
movsl
cmp
mov
xor
es
mov
fidivs
aad
movb
in
add
icebp
les
add
cmpsl
or
jmp
mov
movsb
sub
adc
adc
push
out
fsin
xor
xchg
imul
jnp
add
js
sub
xchg
lods
mov
loope
mov
and
add
mov
or
scas
ret
fdivl
sbb
hlt
fbld
pop
insb
lahf
cmp
fbstp
ja
xchg
inc
rorb
mov
stc
xchg
pop
pop
imul
ficoms
mov
imul
fdivrl
mov
divb
inc
push
mov
je
xchg
dec
lret
testb
mov
pop
sbb
mov
lcall
insb
mov
push
mov
mov
mov
or
pop
push
mov
mov
cmpsb
leave
dec
mov
cmc
pop
adc
jg
and
int3
mov
sub
mov
inc
inc
adc
mov
fwait
sbb
rcl
cmp
movsb
push
add
or
movsb
aas
sti
dec
push
cli
sub
add
cmp
pushf
jbe
int3
pop
jne
push
mov
xchg
les
xchg
call
inc
pop
ja
mov
stos
add
js
adc
aam
aas
push
data16
mov
sub
pop
cmpsb
fidivrl
mov
and
cld
xor
fisubrs
imul
push
and
sbb
mov
loopne
sbb
cmc
xor
sbb
jbe
gs
push
xchg
push
or
dec
js
cmp
sbb
cmp
and
fmull
jnp
push
sbb
pop
xchg
pop
repnz
cmpsl
hlt
sbb
inc
pop
imul
shrl
xor
mov
in
jmp
pop
rcll
addr16
lret
jne
cmc
cmp
push
stos
scas
sahf
ljmp
pop
sbbl
xor
cld
les
jge
xchg
fmuls
or
ret
push
jno
mov
pop
test
xbegin
jb
jmp
loop
xor
imul
add
insb
add
and
adc
sub
lret
mov
mov
lods
repz
lea
enter
add
repnz
jne
mov
sub
ret
stos
movsl
fucomi
pop
xchg
jg
or
dec
and
jne
mov
lea
pop
pop
push
cmp
jb
push
cmp
movsl
imul
sbb
mov
ficomps
and
sub
jge
test
adc
adc
pop
mov
movsl
out
cli
popa
js
and
jb
sahf
dec
adc
mov
cmp
mov
sbb
lea
jecxz
cmc
add
sbb
xor
shlb
fildl
add
outsl
aad
jne
insb
sbb
push
sbb
and
or
pusha
out
mov
mov
test
in
cltd
ret
cmp
pop
insb
imul
and
add
pop
mov
inc
insb
sbbl
or
mov
test
int3
and
sub
mov
mov
bound
or
sbb
imul
pop
data16
add
shlw
sub
pop
push
mov
sti
push
fistpl
dec
pop
jle
rolb
mov
xor
cmp
push
fcoms
aad
lahf
scas
adc
aaa
in
ljmp
pop
hlt
xchg
pop
aad
dec
lea
sbb
or
ror
ret
aas
scas
adc
movsl
and
fstpl
mov
sbb
out
dec
mov
fwait
ds
push
cmc
mov
mov
lret
inc
pop
mov
push
stc
pop
sti
lods
inc
repnz
pop
popf
sbbl
mov
repz
mov
pop
aaa
jo
repnz
sbb
pop
sub
into
jbe
scas
jae
xchg
mulb
push
push
xchg
fists
mov
stos
cmp
add
jo
cmpsl
arpl
xchg
fdivl
shrl
lcall
mov
and
adcl
mov
pop
aaa
cmp
xor
lea
mov
aaa
xchg
ret
in
nop
mov
mov
push
jo
xchg
jge
push
inc
sub
pop
incb
push
sbb
xor
inc
xchg
push
sub
xor
push
arpl
and
and
pop
int3
jno
mov
adc
stos
in
mov
dec
cmpsl
lcall
ss
jo
xor
in
or
clc
popa
adc
adc
and
mov
scas
jo
push
or
xchg
nop
pop
and
notb
shrb
shr
dec
mov
xor
inc
sarl
mov
sub
sbb
lods
jo
jmp
add
lds
inc
cltd
arpl
pop
jmp
cmpsb
arpl
pop
push
sbb
insl
inc
xor
cmp
int3
xchg
mov
xchg
lods
cs
jmp
inc
sub
mov
pop
int3
pop
xor
mov
inc
inc
fucomi
sahf
mov
adc
enter
bound
xchg
push
push
loop
jb
push
adc
jl
hlt
enter
xlat
mov
sbb
cmpsb
cmpsb
cmc
icebp
stos
inc
adc
add
xor
pop
xor
push
xor
daa
xchg
lds
je
lods
xchg
cli
cmpsb
cwtl
push
cmp
mov
lock
sahf
xlat
mov
adc
inc
and
mov
scas
push
sbb
push
mov
lret
sbb
mov
jmp
dec
ret
nop
sbb
mov
add
add
xchg
inc
shld
cmp
xchg
movsl
mov
insb
stos
repnz
clc
shrl
xchg
insl
rcrl
mov
bound
inc
push
push
addr16
stos
jp
dec
in
sbb
gs
test
stos
dec
imul
push
inc
push
int
dec
pushf
cmp
fildll
cmovae
cmp
xchg
and
mov
cmp
ret
ret
in
pop
cmp
fcompl
mov
jns
cmp
loope
dec
stc
mov
ret
mov
lds
mov
pop
arpl
fs
sub
shll
jae
xor
rolb
push
xchg
test
sti
and
scas
mov
push
outsb
lcall
and
jmp
jge
leave
or
cmp
add
ja,pn
stos
pushf
icebp
pop
ficomps
andl
sbb
or
je
aas
pop
daa
iret
hlt
jns
incl
loop
test
cmp
fadds
push
shrl
ja
jecxz
jae
insl
mov
dec
push
sub
cs
cmp
cmp
popl
fdivr
cmpsb
sti
inc
pop
xor
jecxz
cmp
jle
sarl
ja
pop
lods
fwait
mov
sub
lds
add
add
dec
js
and
in
and
pop
jno
xor
jle
sub
pop
sahf
shlb
fcoml
mov
and
mov
popa
fldl
orl
aaa
imul
add
addr16
pop
inc
insl
pop
mov
fsubrs
pop
icebp
push
push
gs
xchg
adc
jg
clc
mov
dec
mov
xor
pop
xor
and
and
add
sub
loop
dec
cs
es
shrb
jae
andl
int
stos
in
hlt
fistl
pop
lock
cmp
ljmp
aad
sahf
in
loopne,pn
stos
int3
sbb
cmpsb
dec
xchg
icebp
mov
and
sbb
jp
jl
imul
cmpsb
cmp
sub
and
jg
fisubrs
cmp
sarb
stc
sub
jg
inc
test
test
mov
mov
dec
lods
add
jns
and
add
mov
lcall
aas
int
aad
loopne
or
or
adc
xchg
adc
xchg
jo
imul
xchg
shrl
dec
nop
mov
inc
jg
fwait
rcrb
out
dec
out
pusha
sahf
aas
outsb
mov
insl
mov
in
push
or
sbb
add
test
push
add
pushf
lods
push
push
jp
arpl
arpl
in
jae,pn
fldl
cltd
out
add
sub
and
jbe
mov
pop
adc
add
stos
dec
cmp
sub
lods
push
pop
jae
inc
loope
and
lcall
cltd
inc
cmp
mov
sub
push
cmp
dec
aam
jmp
lcall
cmp
push
out
push
pop
mov
pop
fmul
adc
pop
push
cmpsb
sbb
aad
jg
mov
inc
cli
gs
stos
iret
shll
mov
es
dec
inc
jns
pop
mov
imul
pop
fildl
sbb
sub
nop
les
mov
pop
ficoms
lret
lret
cli
repz
js
loop
mov
hlt
dec
loope
mov
push
jb
or
test
inc
imul
fisubs
iret
test
imul
adc
push
imul
hlt
iret
in
test
add
out
cwtl
rol
and
imul
bound
outsb
cmc
sahf
dec
mov
pusha
add
shr
jbe
mov
push
and
sti
or
movsb
out
in
mov
mov
pop
sbbl
cmp
outsb
cs
out
inc
inc
imul
gs
clc
cmp
push
mov
push
mov
sbb
in
js
orb
pop
les
sbb
or
mov
xchg
mov
or
adc
lods
add
into
pop
jns
xlat
xchg
dec
into
les
ljmp
fwait
sub
and
and
xchg
xchg
jp
ret
mov
mov
sbb
mov
fisttps
pop
jmp
mov
mov
xchg
loop
jbe
xor
xor
mov
xor
pushf
add
scas
int3
insb
ljmp
dec
mov
push
and
jle
iret
add
adc
clc
add
out
mov
cmp
std
sbb
bndstx
sbb
xchg
rolb
leave
lahf
mov
cmp
push
ds
pop
mov
mov
mov
push
out
out
cld
repz
data16
scas
cmpsb
and
test
pop
mov
or
xchg
jbe
cmp
js
push
ret
ret
xchg
sub
push
cmp
push
cwtl
sub
add
loopne
iret
imul
jo
into
mov
outsb
aaa
int
dec
in
sbb
xor
aaa
push
popf
mov
ljmp
dec
in
fsubs
mov
or
mov
js
daa
mov
mov
cwtl
bound
lods
leave
pop
mov
cwtl
mov
ret
xor
jmp
out
xor
fnstenv
mov
add
dec
repnz
mov
jmp
aaa
pusha
std
pop
and
push
cmc
push
sub
mov
mov
push
cmc
mov
dec
and
adc
pop
scas
and
stc
and
outsl
fcmovbe
xlat
xchg
loope
jecxz
and
pop
hlt
ja
xchg
push
mov
jecxz
dec
lret
notl
xlat
jne
mov
test
sbb
ljmp
sbb
mov
inc
out
and
add
sub
inc
sti
in
adc
push
aam
adc
mov
pop
jnp
sti
sub
nop
xchg
fs
dec
push
ret
rolb
cmp
aad
lods
les
repnz
in
sarl
mov
push
mov
or
jnp
mov
pop
pop
sub
jge
ljmp
cld
les
lds
es
arpl
fcmovbe
xchg
aas
jle
insl
inc
dec
popa
in
sub
icebp
mov
hlt
dec
scas
adc
push
sarb
xor
jge
mov
pop
out
sbb
enter
sbb
jno
add
or
sbb
pusha
test
jmp
out
mov
stos
mov
ja
mov
rcrl
jmp
add
movsb
negl
fistpl
pop
sub
jp
lods
insl
sbb
sarl
inc
mov
movsl
pusha
daa
mov
adc
cmp
sub
xchg
pop
dec
xor
jo
push
mov
or
mov
add
xor
inc
sub
add
mov
adc
mov
xchg
or
sub
and
cmpsl
out
dec
pop
fwait
dec
inc
cmpl
lods
ja
cmp
or
push
dec
xchg
enter
fisubrs
lds
cmc
add
iret
in
in
test
aaa
fidivrs
lods
pushf
mov
push
js
xor
sbb
adc
adc
cwtl
in
ljmp
js
xor
gs
lret
inc
and
and
and
in
mov
aaa
jae
test
xchg
mov
nop
pusha
sub
cltd
testl
fldl
pop
ret
andl
insl
repnz
mov
pop
in
mov
sbb
xchg
dec
jle
leave
shlb
out
mov
inc
cmp
rclb
test
in
imul
mov
pop
ljmp
clc
jg
push
sbb
mov
ja
xor
or
or
jg
cmpl
pop
loopne
jnp
mov
mov
subl
insl
pop
aas
idivb
stos
pusha
cli
pop
daa
loopne
cltd
mov
cwtl
xor
movsl
dec
sub
mov
lret
inc
stos
aaa
adc
push
push
int3
aaa
les
ret
clc
xor
idivb
jae
push
out
les
cmp
fstps
out
js
cld
outsl
jge
data16
or
xchg
out
sbb
pop
mov
jnp
xchg
mov
push
lahf
dec
cld
xlat
loop
sahf
xor
ficompl
rolb
movsl
mov
pop
aas
loope
cmp
sub
cmc
sbb
gs
jmp
iret
mov
pop
shlb
jg
ds
cmp
enter
jae
aaa
hlt
mov
pop
hlt
stc
aam
or
and
xchg
mov
ljmp
bound
mov
inc
fmull
fnstsw
push
aad
ds
frstor
sub
stos
bnd
add
insb
pusha
jbe
jle
imul
add
sbb
clc
adc
mov
pop
outsb
int3
adc
in
insb
mov
pop
aad
sub
inc
mov
pop
xchg
adc
mov
sub
lods
dec
sti
loopne
push
out
lods
jge
sbb
loopne
jecxz
scas
sti
iret
sbb
push
adc
lock
je
loopne
clc
aad
fildl
push
add
bound
and
jecxz
jne
xchg
push
adc
push
and
cpuid
test
in
push
icebp
pop
adc
jne
andb
addr16
aam
js
int
mov
add
negb
lahf
addr16
dec
pop
sub
push
nop
mov
xchg
xor
cmc
sbb
sub
sub
hlt
jnp
int3
js
imul
mov
adc
test
sti
dec
cmpsb
inc
xchg
icebp
cmp
aad
enter
inc
inc
sub
lret
xor
mov
int
add
clc
rcrl
pop
sti
adc
or
repnz
sbb
mov
xchg
xchg
or
fists
push
add
bswap
into
push
pop
sbb
dec
cs
sbb
pushf
rdmsr
fdivs
inc
test
test
cmp
jge
nop
jecxz
inc
hlt
sbb
inc
xchg
xlat
test
cltd
push
mov
decb
sarl
xor
insl
and
insl
and
std
xor
cmp
cmp
sbb
pop
fwait
in
fstl
push
mov
push
cmpsl
sbb
mov
das
notb
aad
jmp
mov
clc
test
jae
sub
inc
popf
jno
dec
xchg
call
jmp
lea
sub
pop
xchg
shlb
dec
es
mov
jmp
sti
sbb
sarl
inc
pop
jle
ds
jb
into
into
or
xorl
rorb
orps
or
ja
pop
insl
lods
mov
gs
or
arpl
vpminub
mov
rol
lret
enter
jnp
fisttpl
dec
jno
popf
xchg
or
aas
test
in
call
ljmp
dec
ret
clc
jbe
add
mov
jge
mov
push
jo
add
imul
jnp
mov
jmp
lahf
fmuls
ret
int3
push
cld
lods
lcall
adc
outsl
repnz
out
jno
dec
and
sar
xchg
inc
push
ret
sub
push
mov
xor
mov
lock
sbb
jbe
jb
jle
or
fwait
ret
push
mov
stos
push
icebp
cmp
pop
pop
or
pop
inc
mov
xchg
int
bound
lahf
cmpsl
jmp
fldlg2
test
es
pop
movsb
lods
mov
xlat
sbb
stc
xor
shl
dec
scas
mov
imul
sbb
add
daa
jae
inc
andb
nop
movsb
xor
push
cmc
movsl
inc
insl
daa
inc
jb
add
stos
xchg
dec
mov
bound
addr16
leave
mov
xchg
dec
xlat
lahf
andps
test
add
clc
test
mov
nop
cmp
lahf
pop
popl
xor
pusha
ljmp
lods
mov
fnstsw
jb
xorl
lock
jg
mulb
push
lea
fidivrs
std
enter
movsb
xor
outsb
mov
and
mov
pop
dec
repz
outsb
imul
and
sub
cwtl
popf
and
jbe
add
scas
or
sbb
iret
ss
add
xchg
fistl
push
in
rcr
pop
mov
sbb
push
or
fmull
sbb
fisubs
sahf
dec
or
enter
xlat
in
sub
bound
add
lcall
xchg
test
imull
scas
inc
push
xchg
insl
scas
cwtl
mov
add
push
sub
mov
and
sub
and
sub
jne
outsl
movsb
ds
bound
mov
lret
test
ds
mov
xor
pop
jmp
push
repnz
addr16
idivl
jae
inc
lcall
push
mov
lea
mov
test
or
adc
sbb
popa
pop
lcall
sbb
lea
jae
xchg
and
xchg
imul
js
outsl
pop
int
cwtl
add
push
jnp
call
mov
ret
int
or
mov
outsl
fwait
aaa
adc
lock
and
sbb
cmp
jno
arpl
mov
hlt
mov
pop
sti
or
jmp
mov
into
rclb
lea
int3
imulb
stos
inc
imul
xor
dec
push
sbb
addr16
stc
pusha
loopne
sti
loop
xlat
sub
jecxz
push
cs
leave
push
inc
inc
ret
jae
or
push
inc
jbe
inc
pop
fs
call
arpl
jo
cmp
lret
mov
sub
dec
sahf
stos
fwait
lahf
loope
in
push
shlb
or
std
xchg
enter
jecxz
rolb
cmc
pop
mov
jbe
les
push
dec
add
int3
shlb
pop
fnsave
adc
in
mov
pop
mov
inc
loopne
rcll
lods
mov
nop
fdecstp
jge
andl
mov
inc
stos
lock
aad
clc
push
fwait
das
jg
testb
loop
addb
imul
rolb
repz
repz
and
icebp
and
aam
int3
add
add
xchg
test
popf
jo
mov
lcall
ja
in
adc
popf
lods
out
rolb
int3
xchg
clc
cmp
or
xchg
movsl
adc
cmp
pop
mov
adc
jecxz
adc
mov
popa
es
arpl
adc
out
sbb
in
fisubrs
sahf
cltd
jnp
mov
or
mov
cmp
jnp
xor
push
insl
mov
sti
or
mov
imul
mov
ja
jecxz
outsl
mov
andb
pop
repnz
sbb
fmull
mov
addl
sbb
and
xchg
pop
cwtl
pop
cmp
mov
mov
xchg
inc
iret
inc
ret
mov
aaa
into
jmp
mov
cmpl
xor
in
fsts
add
les
fwait
lcall
addr16
sbb
add
ljmp
xlat
movsl
arpl
or
lret
movsl
das
out
xor
test
test
and
jns
out
push
outsl
sahf
push
add
mov
cwtl
sbb
dec
jmp
jp
pop
pop
cmp
in
test
or
jne
mov
aad
pop
sub
mov
or
jge
sub
outsl
jp
sbb
data16
cmp
push
sahf
movsl
mov
xchg
dec
popf
aaa
inc
fxam
sub
lret
mov
test
xchg
push
add
inc
mov
xchg
sub
icebp
sub
arpl
fiaddl
lock
add
imul
inc
int3
rorl
outsb
and
jno
dec
mov
pop
ret
mov
cmpsl
or
rcr
push
popf
incb
enter
fwait
sbb
aad
mov
mov
mov
cmovge
js
lret
xorl
gs
jle
xor
xchg
cmp
leave
loope
lcall
nop
push
sti
pop
pop
mov
jbe
jmp
mov
daa
popa
aas
mov
fdiv
add
ds
into
ljmp
ret
jns
sub
mov
sbb
mov
cmp
push
or
cmp
test
enter
fnstsw
bound
icebp
inc
and
shlb
and
lahf
mov
or
lcall
fwait
jno
push
iret
adc
iret
inc
das
inc
xlat
rolb
jmp
fwait
data16
adc
inc
sub
stos
cmp
popa
lock
push
adc
jl
lods
mov
mov
lods
lods
fisttpl
lods
aaa
xor
push
or
call
roll
aaa
pop
adc
icebp
pop
sub
mov
sbb
in
jmp
and
jbe
lods
adc
and
xchg
xchg
in
cmc
fsubl
mov
pop
in
mov
pop
pop
scas
or
pusha
sub
inc
jmp
push
aam
pusha
xchg
xor
pop
xchg
popa
movsl
adc
or
dec
fdivs
pushf
or
adc
mov
xor
dec
movsb
pop
mov
inc
arpl
push
push
pushf
push
sub
pop
mov
xchg
xchg
inc
pop
orb
and
mov
imul
arpl
imul
inc
je
add
mov
mov
icebp
jne
insb
les
jle
insb
push
mov
lret
mov
sub
jne
fwait
out
bound
jg
adc
imul
xor
cmp
in
dec
jns
adc
into
inc
xor
or
pop
sub
mov
das
sbb
inc
lods
push
push
cmp
ss
xchg
mov
and
outsl
shlb
jno
push
xchg
jmp
dec
xor
loopne
sub
lahf
xchg
xlat
inc
mov
cmpsb
andb
cs
pusha
fnstsw
imul
add
bound
add
inc
ss
mov
ret
fmuls
filds
add
push
scas
jmp
fidivrl
dec
or
mov
fsubr
movsb
stos
jns
mov
jl
dec
repnz
aaa
lods
jb
mov
or
push
lods
push
in
pushf
mov
sbb
xor
xor
aas
cmp
xchg
mov
mov
movsl
and
mov
les
push
test
in
icebp
cli
movsb
jo
movsl
add
bound
test
adc
mov
in
inc
jg
pop
sahf
mov
push
cmp
cld
mov
adc
loopne
add
jns
pop
insb
pop
inc
test
aas
lcall
hlt
sub
ud0
inc
inc
mov
xchg
pop
pop
mov
cltd
in
test
fisubl
fucomip
mov
fstpl
mov
outsl
dec
jo
popf
clc
mov
icebp
mov
call
aas
or
cs
cmp
xor
cmp
int3
xchg
sti
mov
scas
add
xchg
adc
sbb
xor
cli
mov
jne
xor
adc
sub
pop
xchg
sarl
adc
mov
je
lock
in
enter
inc
dec
insb
cmp
jae
xorb
cwtl
popa
daa
jge
pop
adc
push
fsubrl
or
es
cltd
daa
in
fsubrl
aas
inc
stos
aaa
mov
roll
test
mov
sbb
push
fidivrs
xor
test
into
je
in
or
pop
pop
ret
adc
ficoml
sahf
dec
xchg
out
mov
int3
add
mov
xor
lret
push
mov
insb
insl
cwtl
jo
out
cmc
jp
das
pop
int
ret
mov
and
jmp
add
mov
lret
in
jno
jg
dec
ljmp
inc
lcall
or
or
div
or
push
mov
xor
cltd
jmp
faddp
scas
push
sub
mov
js
push
and
mov
adc
loope
mov
mov
stc
pop
sbb
cmp
aaa
sbb
neg
mov
push
jl
test
xlat
mov
rcrl
cmp
and
fdivs
mov
dec
gs
dec
mov
dec
aam
jmp
imul
movsl
xlat
and
fdivrs
add
inc
lret
into
shl
out
loopne
xor
into
push
mov
add
pushl
push
inc
insl
jmp
out
popf
push
push
das
xchg
mov
test
dec
xchg
xor
sbb
add
lret
sbb
or
mov
push
jmp
or
sub
add
fs
sub
iret
pop
jecxz
scas
loopne
movsb
sbb
xor
xchg
sub
or
jg
cwtl
out
push
rcrb
cmpsl
mov
xor
sti
sub
or
push
push
sub
mov
mov
adc
addl
repz
dec
inc
fcomps
out
aas
dec
jae
out
add
sub
into
stos
movsb
sub
mov
cs
cltd
push
test
sub
jns
ret
mov
cmpsb
loope
mov
or
stos
divl
xchg
cmp
xor
or
cltd
stc
imul
leave
jle
mov
adc
ss
xor
dec
fbld
bound
or
inc
lret
xchg
adcb
shrl
pop
icebp
arpl
xchg
mov
out
lock
sub
adc
js
mov
cmp
movsb
std
jp
mov
push
pop
enter
jle
mov
and
stos
movsb
out
jmpw
xchg
cltd
mov
mov
loop
mov
out
push
jno
xor
std
and
movsb
xor
adc
sub
inc
iret
mov
lret
push
into
mov
mov
out
add
push
dec
icebp
pop
mov
jnp
xor
cmp
mov
daa
jns
fwait
pop
fdivrp
sahf
jns
cmpsl
aas
fs
mov
jbe
mov
repz
test
jno
push
mov
cmp
icebp
and
cld
and
dec
in
adc
out
clc
imul
in
mov
in
stc
push
dec
dec
push
mov
in
ja
mov
mov
jno
stos
cmp
add
pop
ljmp
push
scas
mov
mov
pop
lds
cmp
cmp
fbld
xchg
sbb
inc
addr16
in
aaa
mov
dec
fwait
push
xor
or
movsl
outsl
mov
dec
sbb
push
ljmp
adcb
mov
xor
sub
mov
mov
and
into
push
pushf
dec
mov
fisubs
pop
pop
sti
pushf
push
mov
push
ljmp
scas
loope
popf
in
mov
test
inc
jmp
xchg
mov
ret
insb
jp
in
or
xor
cmp
pop
gs
movsb
mov
cmp
cmc
mov
or
pop
jmp
xchg
jle
jnp
fidivs
fwait
dec
or
lea
repz
inc
push
mov
mov
ljmp
and
fcoms
insl
repnz
pop
jl
push
repnz
sahf
pop
leave
stos
lods
and
jg
mov
sti
jae
int3
and
mov
dec
andl
mov
movsl
xchg
xlat
mov
in
jg
mov
add
and
icebp
test
or
xor
inc
sar
mov
mov
inc
pushf
mov
jmp
fildl
inc
adc
outsb
test
add
fstps
mov
arpl
sti
inc
jmp
push
icebp
inc
mov
xor
arpl
into
jnp
mov
aad
fsubr
movsl
cwtl
stos
mov
cwtl
stc
xor
inc
loop
repnz
cmp
in
xor
insl
sbb
orb
or
xchg
arpl
push
xchg
adc
out
popf
pop
push
xchg
sti
dec
scas
fstl
call
pop
add
mov
movsl
test
sahf
mov
xor
or
loopne
je
in
jno
stc
mov
mov
push
int
movd
mov
or
int3
push
adc
adc
test
sbb
lds
jge
icebp
inc
in
int3
aas
mov
jbe
xchg
adc
sbb
cmp
cs
imul
cwtl
push
fbstp
in
aas
cmpb
xchg
push
movsb
cmp
jecxz
jbe
jo
fs
ss
pushf
aam
and
xchg
push
int
xchg
adc
xor
outsl
xor
out
arpl
div
xor
mov
fwait
adc
inc
lock
fcmovnu
lahf
lea
pop
out
jno
imul
leave
xchg
xchg
shld
pushf
loope
mov
jns
das
mov
shlb
xor
push
adc
jl
addr16
adc
rcll
stos
fcmovbe
or
fistps
in
sbb
cwtl
stos
or
pop
stc
cmp
mov
push
imul
pop
dec
and
pop
out
mov
sbb
gs
inc
insl
gs
add
insb
xchg
loopne
lret
addr16
test
push
cmp
roll
outsb
xchg
mov
xor
cmpsl
sbb
sbb
xor
pop
push
daa
and
cmp
mov
test
push
adc
jge
lcall
push
fmuls
mov
fbld
mov
sbb
in
shll
or
cmc
or
idivl
icebp
mov
pop
sub
fistl
sbb
sarl
push
xorb
add
lock
nop
aad
jnp
dec
test
push
xor
jns
les
int3
ds
sbb
outsl
fsubl
mov
sub
adc
frstpm(287
sahf
stos
sbb
shl
ret
xchg
push
pop
jne
shrb
jp
mov
pop
sahf
insl
mov
loope
fcompl
sub
cmp
mov
add
into
insl
xchg
mov
mov
outsb
incl
ss
dec
aaa
or
inc
adcb
cmpsb
shlb
outsb
scas
or
xor
sbb
push
cld
and
push
movsb
push
test
jo
mov
fsts
mov
in
and
test
jo
xor
jp
push
or
loope
into
fbld
xor
testb
push
lret
int3
or
notl
sub
int
sahf
xchg
jnp
dec
mov
cld
xor
pop
jo
mov
leave
adc
scas
and
push
lahf
jo
mov
inc
jno
push
ja
rclb
fsub
aas
and
pop
sbb
insb
fcom
mov
jb
enter
jns
jle
push
loopne
cs
imul
movsb
xchg
dec
inc
jnp
popf
push
adc
mov
pushf
push
lock
cld
fdivr
push
fwait
xchg
mov
jo
aad
int
sbb
loop
sbb
inc
adcb
filds
or
xchg
cltd
adc
mov
lock
sbb
movsl
cmp
pop
das
push
inc
jnp
cmp
jle
lret
push
aam
xchg
mov
jb
pop
sub
jle
jp
mov
add
push
mov
lahf
mov
push
sar
add
dec
fldl
mov
cmp
int
jnp
jle
repz
mov
sub
insb
jecxz
inc
push
popa
stc
ja
int
push
mov
iret
push
xor
pusha
add
push
mov
std
stc
sbb
aaa
bound
hlt
push
mov
jp
add
jmp
pop
js
pop
xchg
mov
and
cmp
cmp
into
push
jbe
es
mov
clc
imul
push
cs
sti
mov
movsl
out
out
push
nop
lock
add
in
scas
mov
dec
hlt
mov
pop
jecxz
out
push
loopne
test
sti
mov
inc
or
pop
mov
push
and
nop
cli
shr
jmp
xchg
loope
inc
add
dec
call
fnsave
xor
mov
fwait
xor
sbb
inc
adc
cli
mov
pop
incb
push
push
and
dec
push
outsl
push
fldcw
data16
lcall
aas
mov
jb
aad
mov
ret
jns
cs
xlat
lea
pop
inc
hlt
push
push
push
test
add
jmp
or
cwtl
jno
push
jle
je
bound
jl
push
or
or
adc
pushf
xchg
dec
imul
js
jg
lods
mov
jb
cmpsb
dec
mov
cltd
ficompl
sbb
dec
in
stos
jns
adc
mov
push
shl
dec
mov
aaa
jnp
mov
mov
push
std
dec
push
cmp
and
dec
mov
out
pop
inc
outsl
fistpl
sub
dec
repz
add
mov
add
lods
stos
ss
mov
sub
out
add
sbb
xchg
dec
cmp
mov
xchg
mov
shlb
aad
sbb
jbe
adc
jecxz
test
dec
lods
add
outsb
bswap
inc
fadds
mov
inc
sbb
test
pop
push
or
pop
in
inc
ss
ret
add
xchg
sbb
lea
in
scas
jns
sbb
xchg
loopne
mov
or
sbb
insb
push
dec
in
inc
pusha
mov
mov
jnp
jle
aad
in
push
jnp
add
sbb
inc
sahf
add
mov
add
sbb
jnp
xor
jge
pop
lret
mov
std
js
shll
in
xchg
and
lahf
mov
jmp
xchg
sbb
sub
mov
fcmovb
mov
lret
or
inc
push
add
repz
scas
dec
pop
push
cmp
scas
xchg
sub
dec
jns
pop
or
ljmp
icebp
outsl
fstpl
or
addr16
mulb
sub
enter
mov
add
mov
or
mov
pop
push
add
ljmp
ret
mov
inc
jmp
ror
add
mov
pop
inc
jo
mov
ss
fldt
stc
test
xchg
mov
adc
cs
out
dec
mov
jno
das
adc
shrb
push
negl
xchg
lcall
test
add
or
stos
push
sbb
push
test
xchg
mov
cmp
jns
notl
xor
or
pop
dec
test
sub
push
adc
mov
fcompl
aas
movsb
add
bnd
sahf
jge
push
inc
das
mull
push
daa
lods
andb
lret
lock
out
ficompl
cltd
lods
int3
xchg
push
js
jo
sub
insb
and
or
cmp
gs
sub
test
movsb
jae
loopne
popa
mov
popa
pushf
dec
xor
and
add
ljmp
aad
cli
int3
jle
fiaddl
lret
mov
dec
xor
sti
dec
xchg
sbb
mov
fistps
pop
movsl
mov
dec
js
scas
mov
xor
daa
shll
xchg
shr
cmp
xor
test
jle
sbb
pop
out
outsb
loopne
ljmp
mov
xor
add
lea
imul
leave
sub
cmp
loop
mov
pop
pop
jmp
mov
push
mov
out
repz
dec
pop
clc
icebp
out
push
fnstenv
les
wbinvd
mov
sbb
mov
int
test
xrelease
inc
js
mov
jns
inc
mov
mov
arpl
jbe
dec
sbb
or
stos
pop
push
lods
add
sub
fisubrs
adc
jae
ds
icebp
clc
loope
add
sub
jle
mov
add
add
or
lock
lret
int3
scas
and
push
xchg
int
mov
mov
jge
jmp
clc
sub
cmp
xor
into
mov
stos
dec
mov
mov
jno
pop
dec
jae
out
xchg
mov
and
mov
or
ds
mov
mov
icebp
incl
push
dec
aas
xlat
pop
imul
and
dec
ja
std
xchg
lcall
das
out
jo
mov
pop
clc
jmp
xchg
loop
xchg
adc
lret
inc
rorb
pop
add
inc
jae
nop
in
dec
rcrl
lods
out
jns
sub
loop
ret
popa
push
loopne
and
mov
dec
push
mov
xor
test
stos
pop
aam
and
mov
mov
mov
loope
stc
sahf
or
shlb
icebp
jmp
xor
lcall
lock
and
enter
daa
dec
and
in
rolb
xchg
insb
cwtl
push
mov
movsl
fisubrs
or
scas
faddl
loopne
int
ja
aam
test
inc
scas
cltd
inc
in
mov
xchg
sti
arpl
cmc
and
loopne
repnz
sahf
inc
inc
cs
hlt
fmuls
cmpsb
mov
mov
imul
data16
jl
fisttpll
xor
gs
sti
mov
nop
sub
lock
pop
test
sbb
xchg
pop
sbb
add
repz
add
in
icebp
inc
pop
aas
popa
call
pop
scas
rcrb
lcall
sarb
inc
leave
push
daa
push
inc
sub
test
ret
xor
addr16
inc
stc
dec
in
jge
sbb
ret
int
lea
pop
jge
mov
xchg
jae
insb
dec
sub
into
mov
mov
xor
loopne
inc
xlat
pop
cwtl
xchg
xor
out
es
out
adc
shrl
add
or
insl
fsubr
sbb
adc
loope
push
popf
mov
nop
out
push
je
mov
push
xor
lcall
movsb
sub
dec
filds
mov
cld
jns
push
cmp
cld
xchg
xchg
call
pusha
jmp
sbb
out
adc
pushf
jb
xor
sbb
dec
push
int
clc
fdiv
cmpb
or
dec
push
push
sub
in
loopne
xchg
cmp
call
sbb
add
dec
jo
sub
jnp
repz
mov
mov
iret
dec
in
lret
push
xor
loope
mov
test
imul
pop
aad
inc
in
inc
movsl
jecxz
pop
xor
repnz
in
arpl
sbb
sbb
cwtl
pop
les
lcall
mov
andb
sbb
int
leave
inc
loopne
gs
lods
jae
mov
out
lcall
test
fidivs
sti
inc
jle
xchg
pusha
imul
cmp
fidivs
mov
lods
mov
test
cmp
inc
cmp
jbe
mov
push
les
ja
xchg
xrelease
or
icebp
jbe
add
xor
clc
loop
sbb
inc
lds
push
dec
lods
out
sbb
adc
xchg
adc
fwait
nop
rcrl
stos
or
aaa
sbb
daa
enter
pop
or
icebp
jne
ds
cld
jno
sub
or
mov
mov
mov
lret
and
std
jmp
mov
sub
jbe
insl
mov
insb
aad
dec
fstpl
push
pop
cs
and
xchg
insl
xchg
test
movsb
adc
mov
pop
stos
pop
inc
push
fists
jae
test
adc
add
cwtl
xchg
mov
fmull
pop
pop
mov
dec
pop
push
ds
mov
add
mov
sub
add
pop
sub
sahf
fnsave
ja
and
jmp
dec
jl
push
pop
sysret
cmp
cmpsl
cmpsb
data16
cli
dec
jp
into
insl
clc
push
les
jle
adc
sarl
adc
mov
sti
mov
lcall
mov
nop
mov
cmp
mull
aad
rcll
ss
mov
lea
mov
push
gs
push
xchg
loop
mov
outsl
dec
mov
mov
add
mov
jno
pop
xchg
je
aad
dec
cmp
jae
loopne
repz
int
xchg
out
lret
pop
xchg
test
or
shl
nop
les
and
imul
or
mov
mov
rcrb
outsb
mov
cltd
sbb
add
mov
sub
outsb
in
xchg
pop
jno
xchg
push
pop
lea
dec
repz
int
shll
adc
test
cltd
or
fisttpl
jne
pushl
push
in
adcl
mov
rcl
mov
add
jns
xlat
xchg
xchg
mov
mov
out
jns
or
gs
ret
or
mov
adc
aam
mov
push
mov
adc
shlb
mov
xchg
js
mov
push
iret
xor
pop
cmp
loope
mov
ds
push
add
das
int3
cltd
fistps
jae
add
bswap
jle
add
sarl
xor
xlat
cmpsl
por
cmp
xor
jmp
cmp
jae
pop
es
sbb
lock
push
subb
push
cmp
stc
mov
add
or
adc
mov
add
cmp
mov
pushf
movsl
dec
xor
xlat
jae
call
mov
push
pop
add
xchg
fnsave
int3
and
mov
adc
mov
push
or
into
test
pop
lds
scas
repz
adc
and
jmp
jecxz
inc
dec
aas
dec
or
xor
cmpb
add
jnp
mov
jae
or
je
jne
lret
clc
cmp
pop
sbb
xchg
adc
sub
loopne
pop
test
adc
pop
jp
adc
sub
jmp
in
and
inc
mov
mov
push
loopne
in
adc
pop
xor
sbb
xchg
clc
xchg
cwtl
addr16
xor
push
pop
or
inc
nop
test
add
mov
mov
mov
push
inc
ss
leave
and
pop
add
addr16
mov
mov
sbb
inc
jecxz
imul
repnz
arpl
add
dec
out
and
les
fisttpll
adc
imul
sar
pop
mov
ja
popf
pop
icebp
sub
jmp
or
std
cltd
popa
push
dec
or
pop
pop
sarb
inc
aam
movsb
sub
inc
vcomisd
mov
test
pop
mov
mov
pop
and
out
imul
insb
mul
sbb
inc
xor
pop
dec
jle
cmp
leave
lret
cmp
adc
out
ss
and
repz
jp
movsl
aaa
cltd
shlb
xlat
pusha
jl
sbb
cmpsb
adc
rcrl
lahf
xchg
loope
xor
inc
imul
sbb
adc
ss
jle
pusha
and
cli
clc
mov
pushf
cs
jbe
arpl
rorl
jo
sub
fisttpll
in
push
add
mov
mov
push
fstl
fs
mov
mov
push
mov
in
fnsave
jo
mov
push
div
stc
add
cmp
push
rcll
out
fwait
insl
ljmp
inc
dec
push
jecxz
add
repnz
shll
jle
and
pmulhuw
mov
fsubrp
dec
btl
sbb
mov
fnsave
push
inc
mov
inc
dec
xchg
scas
aas
loope
int
int3
aam
inc
testl
ret
mov
cld
in
lret
stc
movsl
sbb
repz
adc
int
pop
inc
sub
sbb
adc
sbb
lock
pop
idivl
popf
inc
shlb
testb
imulb
jg
stos
sub
inc
xchg
dec
sbb
inc
adc
mov
stc
insb
sbb
add
nopl
ss
cmpsl
loop
ret
iret
sub
mov
sbb
mov
scas
scas
aam
icebp
adc
sahf
mov
cmp
dec
and
sbb
jmp
nop
jg
xor
mov
loope
test
add
sub
dec
sbb
mov
sbb
cmp
data16
call
adc
add
int3
sub
lcall
dec
dec
gs
repnz
jno
adc
inc
call
repz
sbb
in
out
or
xor
sarb
mov
test
or
and
cmp
dec
pop
arpl
pslld
push
jb
out
inc
in
and
pop
and
jmp
and
mov
hlt
hlt
mov
mov
pop
jle
ljmp
inc
pop
or
mov
movb
shrb
mov
fwait
int
fiadds
xor
push
sbb
mov
cmp
pmaxub
push
cmpsl
push
pop
pop
add
in
xchg
mov
in
sub
and
mov
std
adc
dec
inc
pop
mov
cli
stos
int
xor
xchg
movsb
popl
mov
adc
sub
adc
daa
flds
mov
xchg
add
pop
repz
test
push
mov
loop
sti
adc
addr16
loope
add
fidivl
int
das
leave
cmp
xor
aam
or
lock
or
and
xor
jae
push
addr16
cmc
dec
add
aas
je
and
jb
cmp
push
loopne
aad
mov
fsubr
mov
jp
dec
mov
ret
mov
je
imul
push
imul
aaa
jb
fcmovbe
js
dec
fcomps
ret
jno
mov
add
ljmp
lods
sub
out
jge
push
cmp
xchg
sub
xchg
sbb
pop
add
xlat
mull
scas
stc
fistps
adc
pop
and
xor
leave
test
mov
cld
test
cmp
mov
cmp
and
arpl
adc
in
mov
insl
andb
lock
out
imul
out
repnz
mov
inc
mov
ss
or
insl
das
nop
push
stos
push
mov
jns
inc
mov
movsb
test
shr
pop
cmova
pop
out
ficoms
fidivrs
or
push
int3
test
imull
test
fistpll
jp
neg
sub
push
mov
or
jl
lret
inc
and
sub
sti
rclb
dec
dec
fcompp
rcrl
mov
jp
xchg
sbbb
ljmp
cmp
rorb
gs
adc
call
bnd
cmp
iret
out
mov
out
scas
es
lock
punpckhdq
adc
jo
cmp
xacquire
in
or
or
std
pushl
in
lds
push
push
out
out
imul
mov
xchg
cld
sub
pop
inc
movsb
cli
dec
cltd
xchg
xchg
faddl
jne
and
mov
ds
add
in
iret
pop
xchg
js
orb
bound
mov
inc
xchg
push
jle
ss
pop
fs
sbb
dec
call
call
cmp
mov
jns
adc
daa
and
mov
push
sbb
pop
ja
setns
fucomip
repnz
ret
jge
xchg
mov
sbb
pop
add
jle
fs
or
mov
mov
lret
jmp
adc
scas
lahf
lds
shll
nop
int
rol
xchg
aaa
adc
inc
push
inc
cltd
test
mov
push
inc
add
sbb
mov
lock
std
sbb
arpl
mov
or
lret
xlat
loope
jmp
jecxz
push
movsl
iret
fdivr
faddl
inc
mov
mov
push
jecxz
mov
cs
mov
dec
cmp
push
jge
out
sub
out
lcall
mov
mov
mov
jno
mov
push
inc
divb
cmp
cmp
and
cli
aas
adc
cltd
pushf
loopne
in
mov
mov
mov
movsl
push
xor
mov
in
bound
mov
cmpsl
test
out
ljmp
sbb
aam
adc
xchg
dec
xor
pushf
pop
mov
je
lret
adc
outsl
aaa
sti
lahf
push
dec
jbe
test
ret
jb
punpckhwd
imull
lcall
inc
clc
inc
dec
jno
push
imul
pusha
push
xor
enter
sub
push
cwtl
dec
outsb
jns
por
xlat
fmul
mov
lea
mov
sub
xchg
lods
inc
sub
dec
hlt
outsb
dec
mov
jae
push
cmp
sbb
ret
imul
push
ja
mov
push
lret
xor
sar
add
inc
add
movsb
leave
lea
cli
sbb
jmp
adc
in
mov
add
xor
lcall
lock
cmp
pop
sub
cmpsb
jae
push
das
imul
xor
ja
mov
sbb
ds
mov
dec
or
test
ret
cwtl
xchg
sar
into
xchg
cld
lcall
daa
jecxz
mov
icebp
xchg
fists
mov
and
gs
outsl
lods
xchg
inc
test
fcmove
jp
push
aad
push
popa
and
add
pop
testl
lcall
data16
xchg
mov
xchg
call
sub
mov
fdivrl
mov
add
push
jl
lret
fs
lods
cmc
sti
push
xchg
cmpsb
mov
mov
push
adc
gs
mov
iret
nop
test
repz
aam
call
pushf
pop
fstpl
jp
and
outsb
or
pusha
inc
je
push
cmp
xchg
dec
dec
aad
push
adc
clc
jmp
nop
mov
add
popf
popa
aad
add
out
xchg
jae
ret
idiv
xor
xlat
gs
movsb
or
dec
bound
sahf
movsb
pop
repz
push
sub
cmpsb
jno,pt
push
dec
cs
mov
xchg
and
or
lahf
push
mov
xchg
jne
repz
adc
ret
adcb
outsb
flds
jmp
push
xor
add
jne
jns
dec
pop
imul
cli
or
jp
movsb
mov
fmulp
sub
pop
cmpsl
ss
cmp
inc
jge
stos
or
sub
sbb
imul
data16
or
lret
insb
jae
cmp
sahf
sub
lcall
xchg
and
xlat
or
fldl
xchg
xlat
inc
mov
sahf
inc
push
stos
sti
mov
popf
mov
and
inc
arpl
lds
stos
xchg
popf
data16
cmp
xor
iret
stc
sub
pop
xor
shll
push
add
fimuls
pop
and
fists
pop
shlb
mov
push
pop
inc
arpl
push
inc
call
pop
shll
rcll
call
idiv
dec
stos
adc
cltd
dec
push
mov
lret
fdivl
cwtl
or
push
xchg
add
inc
cs
mov
into
mov
sti
inc
ja
in
push
mov
inc
test
pop
in
cmp
cmpsl
push
out
in
inc
add
pop
xor
popf
into
xchg
scas
inc
cmp
cmpb
int3
add
pushf
push
xor
in
jge
fildll
pushf
cltd
add
dec
pop
sbb
adc
mov
inc
dec
test
sub
iret
andb
xchg
or
jp
mov
jbe
push
pcmpgtw
adc
loopew
sbb
pop
pop
and
dec
pop
cltd
std
mov
adc
sub
adc
insb
fnstenv
sahf
cltd
aam
leave
cmpsl
adc
out
add
and
push
and
mov
out
repz
cmp
pusha
mov
adc
or
and
dec
inc
dec
loopne
push
mov
repz
pop
jecxz
jb
dec
fs
cli
cmc
repz
dec
jnp
nop
sub
mov
cmp
rcrl
sbb
xor
mov
xor
adc
jo
xlat
nop
inc
xchg
push
mov
insb
adc
in
sub
or
push
push
js
mov
dec
inc
rol
adc
fiaddl
mov
loop
daa
push
leave
imull
mov
call
adc
sub
sti
repz
inc
out
daa
mov
es
and
enter
fucomip
lds
xor
pop
repz
int3
push
add
sub
jg
jne
dec
out
mov
lds
pop
imul
stos
sbb
inc
mov
dec
pop
inc
push
cmpb
dec
fwait
xor
out
or
mov
fisttpll
inc
repz
jle
push
inc
and
dec
movsb
cs
mov
mov
jbe
test
std
jmp
push
jno
cwtl
jae
mov
cmp
sub
jle
rcll
add
lods
mov
fbstp
outsb
or
daa
add
stos
cmpsl
add
push
xor
js
dec
cltd
sbb
cmp
mov
test
pop
ds
sbb
clc
jns
jae
add
test
sti
or
cmp
arpl
shlb
hlt
jp
test
test
xor
xchg
add
test
gs
stos
leave
add
out
cmp
mov
gs
call
dec
pop
sbb
lret
jmp
add
jle
push
int3
xor
cmpsb
dec
mov
scas
sbb
xor
cmpsl
mov
jle
xor
cwtl
jl
shll
sbb
int
adc
cmpsb
inc
pop
mov
add
hlt
pop
fs
jo
mov
int3
jo
and
pop
int3
xlat
mov
sub
frstor
ret
cmpsl
test
sub
pop
ds
pop
xchg
sub
cltd
stos
pop
jl
aad
pusha
and
inc
bound
inc
movsb
dec
mov
mov
xchg
pop
shl
lods
ficompl
push
in
mov
test
loop
or
push
jb
sar
fldenv
xor
push
jp
pop
push
lea
popa
hlt
jo
inc
push
repnz
mov
daa
test
xchg
in
pop
and
into
sbb
je
add
lret
inc
cmc
mov
nop
andb
in
test
mov
pop
out
and
popf
jecxz
fmuls
mov
jne
inc
cmc
gs
sub
xchg
sar
fwait
lea
dec
stos
mov
mov
push
fisubl
mov
ret
insb
mov
loopne
sub
inc
outsb
out
popl
cli
out
inc
in
lock
out
inc
ror
aam
push
cmpsb
push
test
scas
pop
bound
std
lods
jecxz
inc
jb
idiv
mov
pusha
loope
dec
pop
out
andl
ret
clc
gs
inc
cmp
ss
aas
outsb
repnz
add
inc
sub
test
mov
dec
xor
inc
xlat
inc
in
ja
xor
jg
arpl
cli
xchg
inc
inc
dec
fisubl
lcall
or
fcmovnbe
add
ss
jmp
or
push
lcall
rcl
or
jne
cmpsb
fadd
rorb
fdivp
nop
shlb
cs
add
cs
inc
xchg
cmp
cmp
stos
sbb
stos
pop
fmuls
sbb
fists
je
mov
pop
movsb
fldenv
inc
mov
add
add
out
rcl
bound
push
ret
arpl
repz
lret
pop
les
cmpsl
jns
and
je
std
pop
push
cmp
xchg
dec
push
inc
pop
fstpl
xor
or
mov
inc
in
cli
movsl
sti
lret
pop
inc
cmp
pop
fcoms
sbb
push
xor
cwtl
cmp
jbe
sbb
into
cmp
dec
adc
sbb
mov
or
pop
incl
pushf
sub
xor
push
test
fnstsw
gs
sar
xor
aas
or
lock
adc
bnd
inc
cld
leave
leave
pop
cmp
add
jb
bound
fcoms
lea
sbbb
stos
adc
mov
cs
dec
push
in
out
inc
mov
jo
fs
testl
lds
mov
sbb
imul
and
lea
inc
adc
sbb
popf
mov
es
mov
push
add
sub
adc
pusha
int3
push
xchg
mov
and
movsb
into
jbe
mov
inc
mov
adcl
sub
cmp
dec
pushf
add
into
mov
adc
pop
ret
cld
xchg
jnp
fdivrs
sbb
xchg
int
sbb
mov
repnz
fcoms
jmp
sahf
pushl
movsb
int3
mov
mov
bound
mov
repnz
pusha
repz
mov
sub
cli
cltd
push
xor
adc
or
scas
jp
mov
scas
lea
insb
jbe
jae
insl
push
inc
enter
test
inc
fwait
mov
popa
ret
mov
lret
loop
fiaddl
call
pop
mov
mov
jl
movsl
mov
fidivrl
sub
add
iret
cmp
cmpsb
daa
xor
aad
inc
sub
dec
cli
jle
push
mov
test
inc
imul
rcrb
imul
adc
dec
in
fidivrl
push
or
ret
daa
movsl
aad
mov
sub
cltd
cmc
pop
outsb
or
add
in
dec
xor
jo
xchg
movsb
sbb
and
push
pushf
iret
jle
sub
sbb
test
add
pop
pop
xor
bound
mov
mov
daa
mov
mov
roll
mov
popa
scas
fsubrl
bnd
arpl
int3
fimuls
ret
mov
inc
lods
scas
sbb
or
popf
fldl2t
and
mov
int
inc
sbbb
cmpl
cmpsl
or
adc
ret
sub
test
bound
mov
pop
movnti
and
fldenv
cmp
lcall
popf
mov
and
out
jle
or
in
mov
add
iret
inc
adc
sbb
leave
shrl
xchg
sbb
scas
fwait
push
xor
test
push
loopne
into
mov
mov
lock
jbe
xchg
movsb
cwtl
addr16
inc
out
in
outsl
or
lea
mov
pop
pusha
movsb
mov
and
cli
insb
mov
rcrl
andl
cmp
loope
lods
push
cmpsb
in
int3
ja
outsl
pop
push
leave
jne
out
std
adc
xor
cmpl
scas
pop
sub
jo
xchg
sbb
sub
aas
bound
cmp
outsb
xchg
mov
jne
out
and
xchg
push
add
mov
add
cmp
aad
mov
fldl
loopne,pn
std
shlb
pop
xlat
gs
insb
or
stos
in
cmp
xchg
inc
dec
jmp
imul
enter
push
xchg
lods
ret
sbb
test
lcall
mov
std
test
in
sbb
mov
addr16
inc
icebp
inc
push
lods
mov
stc
push
dec
adc
mov
out
sub
es
mov
icebp
jmp
lahf
inc
sahf
push
cmc
iret
mov
or
rcrb
dec
call
pop
or
inc
add
inc
out
cmp
mov
int
dec
out
mov
data16
adc
je
push
pushf
cmpsb
out
dec
cmc
negb
jnp
sbb
cmp
xchg
xchg
aam
sbb
push
bound
pop
xchg
push
adc
push
mov
mov
xchg
push
adc
inc
lret
mul
loop
mov
sub
lret
push
aam
cmp
add
push
cmp
sub
dec
inc
clc
aam
fiadds
mov
iret
push
jecxz
sbb
sti
scas
push
xlat
popf
adc
xchg
mov
xchg
cld
sub
outsb
dec
xchg
jge
aaa
cltd
cli
jb
mov
dec
mov
loop
in
jne
or
and
icebp
icebp
mov
pop
int
dec
dec
mov
jae
lods
mov
mov
std
inc
and
adcb
fbld
dec
imul
shrb
ret
jl
loopne
aad
outsl
sbb
loope
sbb
add
mov
and
dec
xchg
mov
mov
call
shll
loop
imul
pop
stos
outsb
pop
and
xor
mov
dec
aad
test
popa
loope
mov
cs
pop
push
jns
das
stos
jle
jl
popf
cltd
jecxz
lcall
fwait
rclb
ret
iret
adc
sub
stos
fiaddl
loopne
movb
or
inc
fisubl
call
scas
lods
dec
cli
cld
push
in
test
pusha
dec
cwtl
rorb
orb
stc
lret
js
push
repz
cs
push
cmpsb
repz
inc
dec
movsb
int
cmp
loope
xor
in
les
and
dec
dec
sub
cltd
shlb
cmc
or
jae
pop
jnp
insl
rolb
jae
test
aaa
mov
adc
loop
lcall
pop
mov
xor
subl
inc
outsb
jbe
xor
pop
lds
out
push
pop
out
sbb
push
mov
or
fdivrl
call
xchg
repz
es
push
push
repnz
mov
mov
insb
mov
call
ss
int3
pop
in
xor
stc
mov
pop
dec
repnz
or
xor
pop
mov
dec
jmp
or
add
sub
pop
xchg
cmp
sti
clc
xor
adc
sub
ror
sbb
or
andl
mov
outsb
and
imul
or
xor
adc
mov
sbb
cmpsb
sbb
sbb
jge
cltd
xor
xor
dec
inc
mov
sbb
fsubrp
or
into
into
adc
bound
adc
test
add
cs
andl
in
mov
int
lahf
ss
lret
outsb
inc
les
rclb
mov
es
add
xchg
or
das
mov
mov
mov
and
push
push
adc
push
sti
imul
insb
ret
mov
mov
enter
sbb
pop
movsl
dec
inc
hlt
mov
mov
in
aaa
icebp
fsubl
clc
test
push
xlat
into
xchg
and
lret
mov
int3
mov
adc
sbb
pusha
xor
pop
dec
jecxz
or
ds
adc
and
add
ret
mov
adc
push
negl
into
and
aad
jecxz
xchg
xchg
scas
mov
xor
dec
xor
jbe
sub
insl
sub
ljmp
or
sub
xor
push
sbb
mov
clc
add
mov
inc
test
sbb
je
mov
mov
jecxz
lret
push
mov
sarl
hlt
mov
sub
jmp
or
cmp
jns
sahf
les
adc
xchg
loop
aas
in
outsb
pop
das
leave
push
or
cmc
pop
sub
test
mov
stc
mov
lds
mov
or
test
js
adc
sub
adc
in
dec
or
cmp
outsb
mov
xor
cmp
xchg
rcll
cmp
xchg
jnp
xchg
cmpsb
aam
jl
xchg
ja
clc
xchg
daa
jmp
and
int
cs
inc
in
les
push
fsubl
orb
mov
xchg
aas
xlat
call
mov
loopne
xchg
mov
push
insb
cmpl
out
inc
xchg
pop
sbb
jecxz
in
jb
fiadds
jb
stos
jmp
jb
js
fdivl
das
iret
cmpsl
xor
jecxz
jl
dec
xchg
inc
fdivs
mov
mov
mov
js
push
data16
jp
or
pop
xor
mov
inc
nop
ds
out
pop
jo
pop
test
gs
test
pop
pop
xor
cld
xchg
pop
in
in
jns
push
cmc
sbb
dec
or
cltd
sub
pop
hlt
dec
sbb
adc
sbb
out
in
pop
xor
and
mov
dec
sub
jbe
xlat
stc
mov
out
dec
das
pop
gs
std
jb
shll
or
push
xor
stos
fdiv
and
push
and
icebp
mov
mov
adc
add
mov
jmp
adc
inc
sbb
mov
add
push
push
push
pop
inc
iret
adc
xchg
mov
add
lret
test
xor
or
pop
pop
adc
ror
inc
push
test
fstpt
xchg
xor
jle
and
jecxz
or
or
cmp
or
fbstp
xor
shll
adc
mov
outsl
addr16
inc
dec
pop
movsb
std
sbb
cwtl
mov
jnp
jb
push
xchg
lcall
push
and
mov
lret
mov
data16
push
add
and
mov
sahf
adc
ja
insb
cs
and
dec
add
sub
out
scas
loope
and
jmp
dec
xlat
jae
cwtl
xchg
jmp
cs
pop
imulb
lods
fstpl
jae
in
dec
push
adc
pop
adc
dec
inc
cmp
popl
fistl
lret
jnp
clc
mov
decb
mov
mov
lcall
enter
js
and
lods
testl
je
scas
aam
lods
movsl
test
sub
dec
xor
nop
adc
ja
scas
les
mov
dec
stc
fsubs
ljmp
push
mov
push
scas
nop
fldenv
push
inc
jne
sbb
aam
out
mov
adc
xor
cmp
pop
xchg
aaa
pop
ds
rorl
ret
inc
pop
mov
cmp
push
rclb
xor
sbb
mov
pushf
stos
imull
ret
push
shrb
movsb
xor
jne
fldenv
mov
out
test
fnstenv
mov
xor
lock
jmp
and
sbb
loop
clc
xchg
cltd
daa
add
shl
push
loopne
sbb
sub
sti
or
or
mov
filds
xor
loopne
cltd
xchg
mov
mov
push
xlat
add
mov
scas
mov
cmp
mov
cmp
dec
cmp
loope
call
scas
imul
arpl
jnp
pop
mov
jge
nop
addr16
inc
out
jge
adc
cmp
mov
xchg
bnd
pop
enter
push
rcr
stos
pop
add
mov
pop
push
mov
push
mov
jne
scas
xor
enter
jmp
mov
call
outsl
add
sbb
adc
shlb
rolb
mov
loop
pop
mov
mov
std
jmp
gs
lahf
push
ss
mov
mov
ret
aas
push
and
loope
pushf
les
rcrb
sahf
addr16
jno
andl
and
adc
fidivs
arpl
jae
in
sub
sbb
les
dec
repz
or
pop
dec
mov
push
mov
lea
mov
mov
mov
cld
or
aas
xlat
pop
push
jae
and
mov
jno
shll
add
pop
sub
test
inc
jp
out
pop
cmp
test
cpuid
jge
mov
fistps
bswap
push
add
sub
ret
mov
insl
push
mov
cltd
dec
adc
in
mov
cwtl
loopne
call
lods
cmp
ss
ljmp
mov
clc
mov
pop
fwait
insl
lret
cmp
jbe
cli
lds
dec
lods
addr16
out
cmc
sub
sub
shrl
push
pop
push
mov
rolb
jecxz
cs
pop
sbb
and
push
pop
pop
xchg
js
and
pop
bound
mov
sbb
out
jbe
fistpl
lock
cmpsl
fmull
mov
sub
pop
dec
arpl
lods
rorl
adc
dec
in
xor
or
f2xm1
fsubrp
push
adc
ror
mov
mov
ror
push
aas
dec
pusha
pop
frstor
cmovns
xor
imull
mov
jle
es
mov
inc
mov
std
push
loope
sbb
jb
mov
cmp
sbb
dec
push
mov
lcall
or
rorb
loopne
lods
leave
jle
cmpb
lahf
insb
sti
scas
jp
and
imul
into
nop
call
push
xchg
dec
fists
adc
pop
sub
mov
cmp
repnz
out
jp
inc
sbb
xlat
mov
bound
add
ret
enter
aad
sub
int
shlb
mov
push
and
fcmovnbe
mov
inc
cs
or
loopne
and
mov
cmp
test
ja
and
mov
movsb
xor
dec
add
ret
dec
lods
lret
andb
pop
push
and
orl
ret
fst
int
ss
adc
ljmp
or
xchg
mov
mov
mov
sbb
push
xor
or
cvtpi2ps
cmpsb
repnz
es
cmp
xor
jp
jo
pushf
or
ret
enter
mov
in
adc
dec
mov
mov
call
int
dec
or
mov
mov
ss
repz
inc
mov
push
or
js
sub
rcrb
xchg
cmp
xlat
adc
jb
or
lea
mov
or
out
mov
sbb
dec
or
dec
dec
xchg
mov
and
mov
lret
pushf
int
pop
leave
invlpg
ja
mov
xlat
dec
lods
mov
mov
vaddps
sub
add
cmpl
lret
pop
aam
cmp
pop
leave
sub
inc
cmp
xor
jg
arpl
mov
xchg
ret
sub
aam
xchg
pusha
popf
popa
dec
xchg
push
add
mov
jnp
sahf
cmc
push
pusha
sub
test
xor
xor
mov
cmpb
pop
hlt
jp
push
jno
lods
and
push
sbb
adcb
sbb
and
movsb
pop
cwtl
rclb
jge
pop
int3
pushf
arpl
rorb
inc
jne
enter
stos
cmp
adc
push
popl
mov
in
lea
cld
mov
sbb
aad
and
mov
xchg
icebp
inc
adc
cs
pusha
iret
popa
ljmp
jnp
inc
lods
neg
outsl
sub
cmpsb
jle
xlat
int
shlb
pop
cld
push
in
inc
mov
sub
leave
cmp
bound
popf
popf
add
stc
out
jp
add
jmp
or
mov
adc
out
sub
inc
pop
jp
nop
bound
mov
stos
faddl
inc
xor
push
lods
push
dec
cmp
repnz
dec
orl
lret
aaa
stc
xchg
cmpsb
loop
xor
mov
pandn
push
push
inc
mov
out
and
int3
rcll
scas
lds
bsf
adc
mov
inc
sub
fwait
mov
push
push
lds
xchg
adc
test
jae
insb
mov
les
cmp
out
xchg
inc
popf
xchg
test
cld
adc
cli
rcr
popl
sbb
cmpsb
jmp
sub
and
aaa
xlat
addr16
mov
bound
mov
fcmovne
mov
push
inc
jae
inc
leave
jns
mov
sahf
jp
or
xchg
outsb
shll
sbb
ss
xor
sub
xchg
daa
mov
mov
jecxz
testl
aas
and
xchg
and
pop
mov
push
insl
aas
lcall
dec
pop
xorl
mov
lret
pop
fisubl
sbb
mov
clc
inc
xor
mov
adc
sahf
inc
pop
pop
and
inc
neg
push
aad
fwait
outsb
xchg
insb
xor
rolb
add
push
xor
or
inc
or
pop
lcall
imul
push
pop
shrl
fs
rcrb
leave
inc
mov
xchg
pop
outsb
push
mov
sub
add
and
sbb
xchg
add
jb
orl
mov
cmpsl
shlb
adc
in
xor
shrb
out
lahf
xchg
push
sarl
jp
subl
ljmp
out
inc
add
adc
loope
pushf
fldenv
stos
and
pushf
pop
push
jo
aaa
add
add
aad
data16
sub
pop
inc
jge
cwtl
push
and
shlb
and
cwtl
out
sub
and
outsb
in
mov
scas
ljmp
jns
repz
test
push
nop
scas
in
imul
push
in
pop
shrb
pop
mov
loopne
les
es
stos
push
pusha
js
mov
cltd
inc
adc
xlat
jge
test
in
mov
mov
cmc
dec
aam
mov
sbb
add
or
xor
and
nop
stos
jge
std
or
and
adc
shrl
je
test
jbe
xchg
jb
gs
xchg
xchg
fcmovnu
mov
insl
loopne
or
mov
push
mov
cmpsl
push
dec
out
imul
jb
and
and
push
hlt
jns
cmpsl
push
clc
mov
pop
inc
int3
jae
or
cs
dec
jl
xor
mov
add
out
dec
fbld
fsubrl
inc
aad
gs
outsl
cli
decl
sbb
clc
adc
dec
test
xlat
ja,pn
pop
xorb
icebp
ja
pop
mov
push
arpl
mov
xor
aas
add
fwait
xchg
sbb
mov
push
mov
or
iret
jo
xchg
sub
cmp
jbe
or
clc
cmc
jo
adc
add
jno
push
je
cmc
in
sub
mov
out
mov
imul
cli
cmpsb
sbb
repnz
lcall
jns
inc
add
ja
sbb
imul
add
pop
test
cmp
jno
mov
pusha
jecxz
mov
cld
xchg
out
cmpsb
test
add
pop
push
and
sbb
je
sahf
movsb
lcall
test
xor
pushl
mov
pop
inc
shlb
inc
push
lret
fsubrs
mov
shrl
test
jne
pop
pop
addr16
and
jp
rorl
jne
rcrb
add
sbb
subl
stc
jle
lret
ss
push
jne
lret
and
dec
sbbb
ljmp
mull
adc
xor
pop
fiaddl
xchg
push
into
mov
xchg
std
ja
sbb
add
imul
bnd
aaa
push
xchg
out
sub
lahf
popl
int
enter
jb
push
add
shlb
int3
jns
or
gs
leave
lods
addb
dec
cltd
imul
in
xchg
push
push
mov
and
adc
jae
in
iret
jae
cwtl
repnz
cmp
imul
and
les
orb
test
sbb
sbb
jecxz
nop
gs
xchg
xor
pop
cmc
xorb
sarl
in
push
iret
mov
mov
les
and
mov
icebp
sbb
jl
pop
fildl
jae
sub
inc
fists
sub
push
pop
jb
xor
jnp
cltd
jle
xchg
dec
mov
xorl
xor
xor
sbbb
not
stc
pusha
int3
pop
xor
push
test
jle
inc
pusha
pop
xchg
in
xor
enter
ret
add
mov
mov
rorl
lods
jno
aam
mov
push
iret
leave
push
aaa
mov
push
mov
data16
cmpsb
sub
in
xor
leave
int3
nop
mov
mov
push
push
or
cltd
clc
sbb
std
jecxz
rolb
push
out
movsl
jle
rcrl
sbb
test
rcl
xchg
mov
or
jnp
addr16
ret
mov
lret
sti
xor
cltd
jecxz
insb
push
hlt
jnp
inc
sahf
fmuls
adc
cmp
jnp
and
sti
sbb
lahf
mov
mov
negb
add
xchg
and
push
test
xor
fldl
popf
or
mov
mov
xor
scas
dec
mov
sti
in
and
loope
xor
cmpsb
mov
sbb
inc
xor
fisttpl
mov
movsl
xchg
sti
mov
lret
lock
popa
mov
mov
push
test
push
mov
into
inc
clc
sbb
xchg
push
data16
adc
ror
push
sbb
mov
and
out
sub
mov
sahf
jg
mov
and
or
xchg
sbb
fdivrl
pop
or
in
lock
push
xor
cmpsl
jne
push
pop
mov
push
cmp
push
and
mov
cmp
daa
push
cmp
cwtl
mov
out
js
lods
jecxz
sarl
sbb
test
inc
pop
xchg
shrl
lods
lods
test
sbb
aad
push
jmp
and
fistps
outsl
mov
mov
and
inc
outsl
int3
fdivs
sbb
mov
cs
stos
xlat
testb
sbb
ja
xor
adc
xlat
add
enter
mov
add
mov
scas
sub
mov
jb
fs
loope
andl
vmovdqa
fwait
clc
subl
inc
ds
out
sub
scas
in
or
mov
adc
pusha
lea
call
lea
inc
data16
jbe
jmp
jmp
test
mov
push
xor
jl
jecxz
insl
push
cmpb
xchg
cmp
sbb
je
pop
adc
mov
fdiv
fidivrl
cmpsl
add
mov
repz
cmp
test
xor
fdivl
leave
insl
xchg
xor
cmp
lret
add
jnp
fnstcw
sub
dec
add
pop
imul
test
push
jne
sarl
repnz
or
and
cli
sub
imul
test
mov
movsb
inc
fs
inc
test
cmp
aad
fisubl
push
insl
jmp
pop
or
loope
push
mov
sbb
adc
in
outsl
mov
xor
push
adc
int
fistps
cltd
popf
int3
push
sbb
sbb
pop
cmp
jo
das
arpl
pop
testb
mov
repnz
mov
add
push
xor
cli
xlat
mov
pop
movsl
adc
ss
and
jl
mov
cmp
imulb
insb
dec
dec
idivl
js
xlat
pushf
and
lcall
test
stos
pop
into
jne
inc
inc
les
and
bound
test
aas
mov
xchg
push
sti
sub
push
loope
cld
and
aaa
cmp
inc
aad
jbe
cmp
pop
inc
inc
mov
pop
adc
sbb
shl
add
inc
sub
lds
fsubl
mov
in
pusha
mov
or
mov
xchg
mov
xchg
or
jnp
inc
fldt
pop
mov
jns,pt
mov
negl
mov
cmp
and
ss
push
fmull
jmp
shl
xor
subl
or
lret
sub
icebp
fwait
sub
addr16
jb
jne
xlat
push
jne
pop
sub
sbb
stos
in
lods
int3
filds
scas
cmc
pop
icebp
inc
aas
pop
fildl
data16
dec
pop
arpl
sbb
aam
adc
sub
adc
popa
add
pop
push
jle
sbb
xchg
jnp
dec
inc
inc
or
adc
mov
mov
xor
xor
dec
ss
jnp
les
cmp
test
enter
pop
fcmovnbe
push
in
and
or
and
stc
movsb
xchg
sub
inc
and
push
sub
lea
adc
pop
fistpll
mov
inc
pusha
pop
jle
leave
movl
jmp
daa
add
jmp
cmp
push
xor
loop
aaa
dec
loope
cmpsl
push
sbb
push
xchg
js
xor
test
in
push
push
push
scas
ja
es
xor
fucomip
cld
push
rol
iret
and
dec
sub
and
call
xor
leave
lret
movsb
mov
popf
mov
dec
fcomps
xchg
and
xor
cmp
je
stc
mull
out
mov
mov
mov
cmc
aad
fstpt
repnz
clc
or
in
xor
xor
and
dec
enter
inc
bound
dec
lods
fadd
inc
mov
fnstsw
ja
mov
sub
out
cltd
addb
xchg
rorl
std
mov
rolb
inc
test
xchg
int
cs
push
or
mov
add
xchg
je
jns
ror
push
scas
xchg
insb
cltd
xchg
add
push
in
dec
add
mov
push
ljmp
xlat
or
sbb
jg
mulb
adc
gs
pop
in
roll
mov
out
sbb
nop
aam
jg
xchg
bound
sub
mov
fnstsw
lret
push
aam
xchg
repz
xchg
xchg
data16
das
loop
js
adc
test
mov
ret
xchg
daa
pusha
xor
dec
xchg
rcrb
ljmp
pop
adc
mov
icebp
xor
outsb
pushf
adc
lds
popf
xchg
nop
cmp
std
popf
fsubrs
imul
fcmovnbe
mov
jne
inc
into
mov
mov
mov
arpl
icebp
scas
push
pop
lcall
cmp
icebp
add
inc
push
outsb
and
js
mov
jecxz
loop
int
mov
sbb
leave
std
xlat
popf
adc
mov
lcall
shll
mov
sub
mov
rcr
push
aaa
or
pusha
sbb
mov
and
dec
xor
xor
mov
jo
lds
in
mov
aam
aam
test
leave
jmp
xor
inc
insb
call
or
mov
push
mov
fs
int
inc
add
and
out
jbe
popa
subl
mov
sub
inc
outsl
jge
mov
dec
mov
push
int3
cwtl
inc
mov
xchg
test
cli
out
and
xchg
incb
icebp
adc
push
imul
les
rcrb
xor
xchg
into
repz
and
push
pop
inc
hlt
lea
jge
mov
push
and
mov
ret
mov
cwtl
xchg
jbe
and
pushf
and
sbb
insb
inc
push
adc
xchg
lret
stos
xor
ds
scas
sbbl
mov
and
add
push
add
xor
xor
fldl
ret
fbld
inc
and
bound
mov
cli
dec
add
loopne
jl
sbb
xor
test
aad
test
sti
and
sbb
rcrb
mov
int
nop
out
cmp
orl
xrelease
mov
lahf
test
mov
sub
lret
cmp
dec
int
sub
movsb
iret
out
xchg
inc
and
test
dec
ror
adcb
in
cmp
mov
aaa
sahf
in
pop
and
fidivl
in
shl
pop
mov
jecxz
xor
dec
sub
inc
xchg
and
in
add
adc
enter
cmp
loop
repz
ret
mov
out
stos
js
jb
pop
cmc
aas
or
cmpsl
dec
shlb
outsb
push
test
or
or
inc
insl
int
subl
or
pop
sahf
add
movsl
xchg
andps
enter
fstpt
loope
push
and
sbb
inc
lret
jg
inc
adc
in
jb
add
ficoms
int3
das
adc
repnz
hlt
sbb
fmuls
cmp
ss
jge
adc
mov
push
stos
testl
jbe
jae
adc
dec
mov
xor
hlt
enter
push
mov
mov
and
pop
ds
es
mov
popa
int3
mov
aaa
jns
push
pop
wbinvd
int
sarl
mov
and
dec
cmp
cs
push
aad
shll
push
mov
add
dec
inc
rorl
or
pop
lods
xor
xchg
shl
sub
leave
add
push
rclb
icebp
pop
rol
stos
loope
or
pop
sbb
out
xchg
cmp
je
outsb
dec
hlt
inc
mov
in
jbe
inc
pop
push
shlb
mov
daa
or
pop
adc
int
movsl
or
insb
and
test
xchg
xor
and
or
dec
pop
pop
xchg
arpl
sbb
test
sbb
fistpll
add
sbb
jnp
in
jbe
int
decl
inc
leave
cmpsb
xor
sub
sub
sti
jae
loop
lea
das
bound
or
pusha
cmp
in
sub
adc
enter
imul
rorb
jns
aam
xchg
nop
xchg
sub
sahf
xchg
nop
xor
scas
mov
mov
xor
xor
cmp
pop
add
pop
dec
fsubrp
fidivrs
fwait
leave
shl
imul
int3
loope
jp
add
sub
std
cld
imul
pop
mov
daa
lock
mov
pop
add
or
iret
or
fwait
jmp
dec
aam
int3
rorl
xor
cmp
dec
xchg
shl
pop
inc
push
sbb
cmp
dec
adc
add
test
scas
and
inc
cmp
jne
jnp
ss
xor
cmp
add
js
pop
or
outsb
test
cmpsb
jg
aam
push
sub
das
ret
jnp
cwtl
fwait
loopne
aad
inc
cmpsl
xor
enter
test
sub
dec
cmpsb
or
in
iret
xchg
mov
ss
daa
int3
out
or
xchg
xor
lock
lcall
dec
pop
js
addr16
pop
adc
mov
in
inc
stos
cld
dec
loopne
mov
lcall
fisubl
pop
and
outsl
xor
es
and
shrl
shll
mov
fimull
popa
push
inc
mov
xchg
addb
mov
xchg
xchg
jle
pop
jecxz
xchg
dec
ret
xor
lahf
xchg
imul
testl
adc
add
testl
push
inc
in
sbb
inc
adc
inc
and
dec
xlat
es
xchg
mov
repz
pop
fs
jecxz
cmp
popf
call
dec
cmc
xchg
cmp
in
test
lock
cmp
push
stos
pop
cmpsb
cmp
enter
cwtl
stos
adc
ljmp
mov
outsl
popf
fcomp
shr
bound
hlt
mov
push
xlat
pop
inc
jecxz
push
mov
popa
xorb
shlb
bound
mov
sub
xor
pushf
stc
jno
or
fdivs
leave
mov
call
cmpsw
or
jle
inc
cmp
scas
mov
jg
loope
mov
xor
lret
add
stos
dec
hlt
xlat
inc
scas
xchg
pop
add
test
js
addr16
daa
mov
mov
mov
mov
mov
cmp
stc
mov
fcoms
popf
fadd
adc
and
rol
imul
fcoml
lds
scas
es
pop
pop
repz
add
out
je
subb
addr16
mov
mov
mov
or
dec
jns
xorl
push
lahf
ficoml
test
imull
and
popl
pusha
ret
cmp
dec
xor
mov
loope
xlat
sub
test
out
lahf
add
loope
loopne
bnd
mov
adc
imul
xchg
mov
mov
push
in
iret
xchg
scas
jb
rcrl
ret
aas
arpl
pushf
or
xor
movsl
cs
cmp
subb
add
clc
loope
ja
daa
adc
jecxz
ret
in
push
lds
push
and
je
stos
and
or
mov
cmp
out
sub
xor
cmp
dec
and
and
add
jle
movsb
dec
decb
aad
dec
jmp
ss
mov
jb
mov
addb
es
add
add
dec
dec
dec
bswap
push
xor
fsubrl
shlb
testb
cmp
mov
idivb
push
mov
xor
test
outsb
mov
mov
and
xor
mov
and
rolb
inc
sbb
mov
rolb
jb
stos
xor
repz
dec
adc
cmp
rclb
cltd
pop
popf
add
fstps
mov
sub
inc
fiaddl
xchg
cmp
jp
testb
fs
in
imulb
fadd
pop
inc
or
dec
sub
xchg
lret
imull
popf
xor
ficoms
mov
jae
pop
push
loopne
lret
pop
dec
push
xchg
addr16
xor
dec
imul
xchg
inc
xchg
jns
push
dec
and
mulb
vmovhps
xchg
mov
mov
and
leave
push
cmp
popa
cmp
inc
xchg
pop
jne
push
insl
sub
xor
push
adc
sbb
and
cmp
imul
xchg
inc
shl
push
dec
push
adc
in
inc
arpl
imul
or
test
inc
inc
in
jecxz
stos
cmp
test
hlt
add
icebp
daa
inc
repnz
int3
or
ret
cwtl
add
and
stc
mov
dec
push
notl
push
test
lock
mov
mov
loope
or
xchg
lahf
aas
jo
adc
pop
cmp
or
fs
sbb
aad
inc
daa
pop
xchg
outsl
mov
add
and
sub
mov
push
fiaddl
sbb
aam
jge
ja,pn
in
jle
jbe
jp
lods
pop
ds
stc
or
clc
and
pushf
xor
je
in
adc
mov
inc
push
sub
ja
in
pop
fildll
sub
and
xlat
dec
mov
str
xor
or
lock
jnp
cli
adc
shl
out
lret
mov
cld
xlat
bnd
push
jno
loope
jmp
pop
mov
jg
mov
dec
mov
cltd
cmp
pop
inc
in
std
lock
enter
push
test
inc
insl
xor
push
emms
sti
xchg
push
stc
sub
dec
cmc
test
lock
popf
outsb
flds
hlt
rorb
cmpsb
or
insl
jge
subb
push
shr
arpl
sbb
dec
mov
in
add
js
inc
pop
jae
mov
test
ljmp
scas
mov
push
lds
movsl
and
les
jae
icebp
push
jnp
push
or
lods
in
or
add
das
shlb
icebp
ja
cmp
aaa
dec
push
push
jnp
xchg
ret
push
xchg
push
int
push
pusha
xchg
loopne
sub
repnz
adc
subl
les
int3
sub
push
dec
jl
pop
mov
addr16
sarl
jecxz
mov
out
dec
lahf
sti
out
add
xchg
sub
addr16
xchg
sbb
sub
xor
aas
aas
pop
fisubrl
add
cwtl
sub
xchg
loop
leave
imul
pop
xor
cld
cmp
sbb
popf
dec
out
xor
leave
stos
pop
arpl
jl
inc
push
inc
push
xor
cmp
int3
jne
fwait
insb
mov
inc
xor
repz
mov
insb
rorb
adc
inc
adc
push
jbe
ret
fwait
adc
and
scas
add
fbstp
jl
notl
mov
sbb
into
faddp
push
fsubs
fisttpll
call
lcall
sti
sub
cmp
sub
jno
or
fiadds
inc
push
in
adc
mov
rolb
int3
call
adc
ds
mov
sub
es
xor
lds
inc
pop
scas
repnz
mov
hlt
adc
into
mov
clc
cmc
cwtl
mov
fcompl
jbe
cmp
out
ret
jno
test
fisubl
arpl
xchg
test
sbb
jmp
call
sub
in
cmp
sub
jl
mov
pushf
loop,pt
ss
ss
sarb
sbb
cwtl
xor
mov
sub
in
fistps
bound
push
xchg
std
mov
adc
gs
shr
sbb
aad
push
cltd
jge
into
out
cmp
insb
ljmp
lods
ljmp
rcll
aad
out
jno
sahf
dec
lods
mov
fidivrl
mov
das
push
cmp
std
and
mov
push
adc
lret
xchg
sub
clc
cld
push
shl
or
fnsave
jp
and
insl
push
sbb
aam
mov
jno
js
mov
cmp
and
or
incl
repz
cmp
rorl
mov
sub
repnz
push
rcrl
leave
pop
mov
rcr
pop
inc
iret
sti
daa
inc
shlb
push
add
jg
push
sbb
and
sbbb
and
xor
repnz
adc
and
bnd
push
cs
fldt
xor
xlat
js
push
shrb
mov
pop
mov
cltd
and
rcrl
out
stos
inc
mov
aas
lret
dec
dec
add
cld
mov
aas
xchg
xchg
mov
push
jae
call
loope
fstps
mov
push
shrb
pop
shr
call
and
push
movsl
xor
mov
mov
mov
popf
shrl
dec
leave
ret
inc
xchg
and
test
lods
test
lods
inc
mov
xchg
pushl
clc
mov
adc
fnsave
pop
lds
mov
cmp
arpl
jge
mov
xchg
in
fstpl
shl
push
xchg
test
mov
push
hlt
cmp
test
xlat
add
mov
lock
aas
mov
or
or
outsl
fcoms
sbb
popf
cmpsl
pusha
or
dec
call
ffree
and
xchg
xor
mov
hlt
shll
jle
sub
push
pop
icebp
xor
sbb
or
push
pop
sahf
mov
sarb
js
push
ret
jns
lods
adc
int3
idivl
lock
pop
hlt
xor
xorl
mov
cmpl
xchg
das
cmpsb
jb
pop
inc
adc
cwtl
push
dec
es
or
jge
pop
cmp
sbbb
sub
inc
dec
push
out
push
xchg
jmp
call
mov
and
inc
daa
je
xchg
or
add
jle
mov
pop
mov
stc
inc
xorb
adc
pop
sub
fcoml
test
and
dec
pop
dec
leave
dec
pop
jb
or
data16
push
xadd
dec
mov
cltd
loope
dec
aam
jmp
push
test
adc
daa
lret
leave
aas
jge
lods
xlat
fsts
arpl
xchg
mov
into
int3
pop
or
movsb
xor
pop
mov
mov
das
pop
scas
sbb
inc
outsb
cmp
and
sbb
push
incb
je
out
js
push
stos
add
mov
inc
lea
and
rolb
outsb
sub
cmc
xchg
cmc
insb
and
icebp
imul
iret
out
outsl
shlb
test
aam
rorb
fincstp
push
lahf
aaa
divb
out
xor
fists
mov
adc
and
push
rep
in
sarb
and
jp
stos
or
jmp
adc
jmp
sarb
adc
sbb
dec
mov
hlt
popf
insb
je
cmpsb
xchg
pop
or
inc
orl
dec
dec
sub
cmp
push
xor
jp
cmp
in
je
clc
and
mov
fwait
insl
orb
bound
cmp
pop
add
fwait
mov
aas
lds
pusha
int
divl
dec
jmp
out
cs
cmp
or
lea
inc
cmp
clc
idivb
lret
jne
ja
lahf
mov
mov
dec
dec
fwait
bound
data16
add
sbb
insb
icebp
or
push
jbe
sti
sub
mov
es
adc
inc
mov
rcrl
dec
sbb
xor
jae
and
rorb
push
rcrl
mov
adc
push
cwtl
loop
xchg
aas
dec
scas
aad
in
test
mov
push
insb
imul
push
sub
pop
push
pop
in
pop
and
or
sbb
push
test
ret
loopne
jnp
cmc
push
fwait
imul
sub
nop
push
dec
jle
xlat
icebp
fwait
ret
adcb
orb
cmp
adc
sti
mov
popa
dec
push
lds
push
mov
iret
jg
in
xchg
test
rcrl
rclb
call
int3
iret
iret
rcrl
lret
mov
lods
dec
movsb
pusha
jl
fbstp
add
mov
xor
lret
std
je
adcl
xor
or
sti
lahf
mov
mov
inc
jne
xchg
push
and
das
mov
cs
cld
fwait
ss
cld
push
add
lods
xchg
imul
test
into
lock
mov
inc
mov
call
inc
push
mov
inc
lea
out
rcrl
repz
add
mov
add
xchg
les
push
test
sbb
mov
insb
sbb
cmp
jbe
insl
mov
mov
xor
pop
fs
fmul
xor
cs
aaa
adc
jns
adc
push
das
lods
ss
push
jae
jge
and
sbb
jmp
mov
pop
imul
lret
ret
loope
mov
inc
jmp
sbb
fildl
mov
fldcw
pop
mov
in
out
lcall
cmp
pop
or
mov
sbb
movsl
xor
in
sbb
scas
push
push
enter
xchg
inc
scas
bound
xor
and
mov
test
push
and
inc
and
jno
rcll
arpl
mov
add
movsl
ljmp
repnz
aaa
pop
dec
mov
mov
jg
sub
lea
lret
sub
adc
and
lcall
hlt
mov
jmp
adc
mov
push
fisubl
xor
cmp
sbb
and
cs
pushf
add
and
xchg
mov
jp
jge
dec
and
cli
int3
sub
rcll
mov
inc
push
out
dec
fwait
mov
push
rol
decl
into
lock
inc
jb
jle
and
lret
adc
dec
add
and
addl
push
jno
jbe
add
jmp
jno
iret
lods
orb
adc
mov
and
jp
lret
sbb
push
fistpll
into
push
dec
call
add
cmc
scas
sub
dec
pop
stc
lods
fs
or
pop
mov
ljmp
popf
nop
clc
sub
fidivrl
xchg
sub
es
sub
in
xor
mov
sbb
push
scas
lods
fldl
sbb
sbb
push
xchg
sti
jns
xchg
pop
cmpsl
in
ret
adc
cs
dec
jns
mov
mov
jno
dec
sarl
and
and
loop
test
repnz
ss
sub
das
push
pop
sub
mov
cwtl
xor
mov
and
insl
jnp
dec
dec
in
insb
inc
aam
mov
scas
test
arpl
adc
clc
mov
mov
inc
dec
push
and
jl
adc
sbb
dec
sbb
or
clc
mov
es
test
dec
or
pusha
or
lods
inc
loope
adc
mov
insl
inc
inc
ds
mov
inc
dec
mov
pop
dec
push
stos
push
mov
cmp
xchg
rcll
pop
xchg
shl
mov
cmp
cmc
loopne
mov
outsb
insb
clc
jecxz
cmp
insl
fadd
and
cmpsl
push
jo
sub
mov
add
ret
dec
pusha
add
nop
std
mov
mov
cs
cmp
int
mov
sbb
mov
inc
lahf
sub
pop
or
mov
fistpl
bound
mov
mov
and
repnz
dec
mov
test
subl
mov
mov
les
cmp
add
addr16
dec
movsb
test
cltd
pop
xor
mov
ljmp
fcmovne
mov
adc
movsl
out
das
decb
xor
lret
sbb
add
push
jge
adc
mov
fisubl
sbb
push
mov
orb
fdivs
mov
jns
cmp
mov
mov
leave
out
jne
inc
test
push
into
inc
cmp
push
mov
xlat
xor
pop
and
dec
or
xchg
ss
stos
inc
in
ret
outsb
scas
scas
in
dec
subb
push
sub
leave
fistpll
and
sahf
test
ljmp
xchg
int3
bound
pusha
in
leave
jl
jmp
or
push
adc
sub
sti
icebp
inc
inc
lret
test
push
fsubs
lods
data16
jbe
jle
adc
cs
lods
clc
pop
or
push
outsl
push
lods
xor
xor
mov
andb
inc
pop
nop
lret
push
clc
pop
cmp
test
or
mov
sub
inc
jp
shrb
addb
ss
inc
shrl
insl
andl
shl
jp
sbb
pop
jg
xchg
mov
inc
dec
aas
sbb
xchg
sub
cmp
int
mov
enter
sub
sub
jns
cli
xchg
jmp
jb
stos
out
xor
inc
mov
and
cltd
cmpsl
mov
and
leave
subb
mov
or
outsb
push
adc
lcall
ds
sub
inc
jg
inc
xchg
sub
subb
lret
jae
jbe
scas
lock
inc
test
xchg
fdivrl
in
push
sub
dec
xchg
loope
addr16
les
add
xchg
mov
jns
adc
popa
adc
sar
shrl
sbb
shll
cmpsb
or
addr16
or
cld
in
pop
not
aas
enter
call
xchg
xchg
xchg
int
andb
movsb
shl
fidivl
mov
scas
outsl
cmpsb
fistl
popa
out
xchg
pusha
fsubs
enter
fsubrl
popa
push
pop
dec
push
outsl
pop
shr
lret
and
push
pop
lahf
jmp
inc
outsl
adc
adc
icebp
and
push
mov
jg
lock
les
sub
cmpsb
mov
sbb
dec
cmp
cmc
sahf
das
test
ss
enter
xchg
mov
pop
roll
add
sub
fs
mov
mov
xor
jnp
pushf
inc
cli
ljmp
andb
andb
mov
int3
pop
into
cmp
das
xchg
in
inc
push
call
fdivrl
cmpsb
adc
call
iret
stc
outsb
push
repz
sub
pop
mov
cmp
sub
jb
in
setne
mov
scas
imul
sbb
jb
pop
jns
cmp
xchg
inc
dec
mov
and
scas
pop
push
rcll
cmpb
push
cmp
jo
lock
outsb
arpl
sahf
mov
add
cmpsb
dec
mov
ljmp
cmpb
or
jnp
out
sbb
call
inc
cwtl
jl
dec
cmp
xor
mov
fucom
call
mov
pop
decb
add
push
jge
adc
lock
lret
iret
cmp
std
jmp
add
dec
aam
ret
xlat
daa
dec
sbb
xchg
sbb
out
out
lcall
push
cmp
in
leave
mov
loop
pop
sub
and
vphsubdq
add
jnp
test
adc
push
cmpsl
xor
repz
cmc
xor
or
inc
aad
unpckhps
xor
dec
stc
loopne
subl
inc
pop
adc
lret
leave
iret
insl
jno
adc
jl
jmp
mov
sahf
sub
mov
lea
adc
inc
pop
fs
or
jno
imul
inc
test
call
jmp
ds
push
cltd
mov
add
mov
push
jge
jg
mov
bound
ja
mov
das
or
add
xchg
lods
push
mov
push
insb
xor
sub
mov
dec
mov
mov
push
jno
jns
and
push
inc
jmp
xchg
inc
sub
push
adc
movsb
jl
punpcklwd
dec
aaa
jg
mov
in
popa
test
dec
aaa
cmpl
movsl
mov
mov
movsl
sub
push
fcmovb
sbb
pop
fs
xor
ja
stos
sub
sti
cs
or
sub
mov
cwtl
cmp
mov
test
push
cmpsl
daa
jmp
push
addb
xor
out
cmp
stos
jmp
pop
pop
push
push
movsb
jo
xor
adc
push
jae
push
mov
add
push
out
jns
mov
inc
sbb
mov
enter
push
imul
dec
adc
xchg
push
mov
push
clc
or
test
sub
cwtl
mov
xchg
fstpt
jecxz
cmp
testl
lods
cmp
push
aad
dec
or
cmp
add
dec
pushf
mov
mov
or
mov
stos
fmuls
fcmovu
fadd
sub
loop
mov
rorl
jle
movsb
sub
inc
xorl
cwtl
and
and
sar
push
outsb
stos
shll
mov
subl
cmp
es
lcall
and
sarb
ret
mov
sbb
mov
dec
dec
mov
mov
mov
dec
shrl
ja
lcall
sti
lcall
pop
or
jae
sub
cwtl
fldcw
enter
lods
sti
sub
js
xchg
jnp
push
xchg
sub
hlt
and
sbb
lret
mov
repz
sub
lahf
mulb
inc
adc
xor
xchg
fidivrl
jne
mov
mov
fistps
lret
std
sub
mov
sbb
dec
mov
jge
jecxz
ljmp
cmp
fistpl
push
cmp
subl
sbb
rolb
dec
je
loope
les
fcoms
fsts
or
cmp
push
mov
dec
sbb
adc
movswl
and
xchg
mov
pop
roll
sub
mov
stc
test
scas
test
inc
loope
ljmp
int
jg
dec
lret
add
cld
rolb
sarl
cmpl
xor
jae
arpl
aad
and
pop
mov
xchg
inc
leave
mov
push
or
imul
stc
or
lret
xlat
mov
xor
push
pusha
pop
lret
or
lret
enter
fs
sbb
pushf
stc
xor
pop
ret
out
testb
push
sahf
xor
xchg
dec
mov
inc
jne
xchg
mov
push
mov
dec
cmpsl
mov
fsubrp
pop
xor
pop
nop
cwtl
cmp
jmp
push
or
je
jnp
ja
mov
daa
jb
inc
loope
push
sub
mov
repnz
xchg
out
lret
in
repnz
imul
pop
push
cwtl
inc
outsb
out
rolb
pop
inc
xchg
icebp
or
dec
out
mov
gs
aaa
gs
push
adc
popf
xor
cld
cmp
xchg
or
mov
cmp
push
fxch
and
fwait
cwtl
daa
sub
jle
outsb
mov
mov
fisubs
popa
insb
or
xlat
lret
popa
or
das
push
xchg
out
jg
mov
mov
popa
test
fcomps
pop
inc
cmp
inc
mov
repnz
hlt
push
test
sub
jns
mov
inc
lcall
hlt
sub
jge
and
jns
andb
or
push
jge
stos
mov
sub
adc
jg
out
jmp
sbb
arpl
aaa
sub
ja
je
push
mov
repnz
cmp
stc
pop
test
cmc
fs
push
dec
push
popa
sub
jno
mov
insl
testl
movsb
insb
fucom
jecxz
dec
ror
pop
scas
jns
or
push
mov
pop
mov
jl
ficoms
movsl
cmp
popa
sub
cmpsl
mov
hlt
xchg
mov
ret
xchg
in
sub
movsl
out
repz
sub
cmp
fisubrl
shll
int3
out
inc
lcall
xchg
jne
aad
int
mov
sub
sub
iret
jle
or
mov
and
adc
push
jne
cmp
andb
jb
orb
pop
into
push
mov
call
sarb
iret
inc
mov
sbb
lret
jge
sub
xchg
rolb
incl
mov
mov
sti
mov
pop
xchg
jle
and
xor
mov
adc
fsubl
fdivr
mov
pop
jbe
dec
nop
ja
pop
mov
es
mov
sub
loope
cmpl
fadd
sub
jecxz
xor
in
call
adc
jne
or
in
scas
xchg
repnz
sbb
mov
clc
mov
sub
das
leave
cli
aaa
gs
int
dec
ret
call
cmp
sbbb
mov
fsts
sbb
inc
popa
test
cmp
popf
lcall
mov
xor
aad
sbb
lods
mov
xchg
mov
xchg
inc
std
out
test
repnz
mov
pop
inc
dec
jmp
paddd
sbb
or
mov
cli
bound
pop
adc
out
ja
scas
into
push
sbb
cmp
enter
cld
cs
xchg
or
jbe
and
push
adc
xor
sub
cmpsl
out
xchg
fiaddl
and
lock
int3
sbb
push
imul
or
sub
dec
jl,pn
sar
les
jb
lea
fstpt
and
cld
sbbb
cmp
pop
enter
adc
sub
lods
shll
iret
pop
adc
jmp
dec
test
xorb
sbb
pop
mov
push
arpl
adc
lahf
leave
imul
pop
pop
sbb
dec
arpl
imul
aaa
flds
jle
jne
adc
scas
int
add
xor
rorb
stos
out
inc
mov
push
sub
outsl
xor
aaa
mov
cli
sbb
int
mov
cld
dec
lcall
sti
sub
xchg
jo
test
test
xchg
adc
cmpsl
sti
dec
xchg
or
and
cltd
popf
sbbb
adc
bswap
mov
add
es
mov
adc
xchg
popa
adc
cmp
xchg
mov
lods
fdivrp
pushf
cmpsl
loop
jbe
xor
lret
int3
jo
rcl
sub
xchg
shlb
xchg
xchg
into
lahf
push
mov
ss
xchg
fistl
inc
test
jno
in
pop
add
dec
ret
pop
push
push
jge
jo
mov
fldcw
mov
jne
imul
mov
fiaddl
and
jle
inc
scas
bound
stos
sub
insl
or
pop
jg
aas
cmp
insl
mulb
mov
mov
jmp
call
mov
mov
pop
lds
ret
rclb
sbb
mov
rolb
mov
test
adc
ja
xor
cs
push
or
push
cmp
pop
inc
ret
jge
fs
jg
jo
int
subl
and
mov
cwtl
scas
clc
js
inc
rcl
aad
repnz
fidivs
shlb
dec
fisubl
int
sbb
lods
or
jg
jp
inc
loop
in
loopne
lahf
inc
es
and
idivl
mov
lahf
adcb
sub
add
in
mov
fists
cmc
mov
dec
cmpsb
jmp
pop
jl
jae
js
orl
or
pushf
add
repnz
lock
mov
pop
movsl
das
leave
scas
scas
cmpsb
or
stos
mov
mov
in
dec
icebp
mov
in
mov
not
sbb
and
loopne
loope
lock
xchg
in
cmp
pop
ja
adc
shlb
fisubs
arpl
mov
fs
sbb
data16
ficoml
es
sub
xor
mov
xlat
out
insl
out
sub
dec
jbe
jl
and
add
adc
pusha
in
pop
nop
mov
adc
fbld
loopne
bound
clc
inc
inc
add
mov
and
cmp
cltd
inc
es
jp
sub
cli
aas
push
pop
pop
cltd
pushf
mov
add
dec
pushf
addr16
movsl
push
popa
pop
sub
daa
gs
and
mov
cld
dec
mov
shlb
pop
push
mov
pushf
jnp
or
insl
int3
xor
mov
adc
lock
loope
mov
add
push
add
mov
xchg
jg
negl
pop
xchg
test
mov
test
sbb
push
scas
insl
mov
sbb
pop
sbb
mov
js
mov
or
decl
popf
xchg
jmp
mov
pop
imul
int
or
xchg
lret
sub
mov
aad
loop
rol
movsb
xchg
jecxz
mov
outsb
inc
or
daa
sub
xlat
pop
sbb
mov
mov
or
push
mulb
adc
ljmp
inc
imul
push
cld
das
int
out
xor
lcall
push
rorb
loope
xlat
popf
xor
jns
jl
mov
je
js
push
scas
mov
xlat
or
and
and
mov
cmp
loop
dec
pop
xor
dec
shll
inc
push
fs
cmp
imul
pushf
push
jb
adcl
jbe
pop
adc
cs
mov
inc
jp
fdivrs
mov
mov
xor
or
mov
lahf
jecxz
adc
add
or
popa
add
movsl
inc
inc
push
push
nop
shrl
adcl
dec
repz
push
ja
jmp
sbb
sub
sahf
ja
shlb
jmp
fstps
mov
dec
or
andb
repnz
inc
rol
inc
push
hlt
push
dec
out
mov
xchg
cmp
adc
out
leave
fsubl
mov
dec
inc
sub
lcall
aad
xchg
xor
push
ret
and
stos
cld
call
lea
push
adc
or
roll
dec
scas
lea
gs
movsl
inc
xor
pop
mov
insb
pop
adc
jmp
pop
test
shrl
ror
add
pusha
inc
xchg
or
pushf
dec
xor
add
sub
mov
int
pop
icebp
icebp
xor
aaa
jl
pop
mov
divl
repz
lret
jbe
xchg
decb
inc
add
lcall
cld
jo
rep
mov
sbb
mov
jbe
lcall
push
xchg
cmp
or
mov
xor
and
gs
andb
repz
iret
xor
jl
cmpsb
loopne
xchg
xchg
in
mov
ja
orl
daa
jle
out
mov
mov
push
jbe
and
rolb
adc
mov
jp
imul
adcl
test
jg
stos
stos
pop
or
fmuls
and
cmp
aas
xor
xor
stc
ljmp
inc
adc
ret
insb
ds
mov
sbb
mov
mov
incb
pop
fst
addl
pop
mov
out
sub
pusha
mov
icebp
jg
push
outsl
in
lahf
subb
shl
cmpsb
pop
push
push
stos
cmc
fdivrl
int3
adc
mov
out
sahf
punpckhwd
clc
aaa
aad
sub
cmp
add
movsl
je
js
pusha
mov
lods
or
xor
sub
push
bnd
sbb
pop
scas
rol
jnp
dec
insl
hlt
sub
mov
xor
sub
popa
in
daa
xor
enter
dec
add
test
push
ss
add
out
xor
mov
pop
movsb
lret
jl
mov
lock
mov
push
scas
icebp
sbb
clc
lds
notb
pop
mov
decb
inc
addr16
adc
in
shlb
rclb
leave
push
mov
out
insb
lcall
std
mov
test
jo
lret
mov
fsubr
enter
stc
pushf
lock
sbb
adc
cmc
mov
imul
rorl
xor
mov
xchg
pop
mov
jb
xor
loope
insl
dec
push
sbb
push
mov
arpl
loop
out
xchg
hlt
cmp
dec
inc
or
clc
push
ret
push
aaa
or
dec
jb
inc
addr16
xchg
jmp
aas
cmpsl
lret
enter
or
das
mov
add
stc
fsubrl
shlb
nop
xchg
ret
movsl
mov
negl
aaa
inc
js
pop
subb
add
es
aas
inc
pop
aad
stos
jp
dec
cwtl
xchg
loopne
cmp
aad
and
cli
stos
testb
rcl
pop
hlt
xor
adc
mov
add
mov
rcrb
mov
mov
pop
arpl
out
sub
js
fmul
in
or
dec
insb
inc
mov
dec
roll
mov
cmpb
jo
push
movsb
clc
fwait
or
in
sub
add
shrb
pushf
inc
inc
add
mov
test
inc
mov
sbb
lcall
inc
aam
dec
xchg
adc
jl
movsl
lods
adc
push
dec
lods
repnz
stos
jno
dec
js
jb
lock
test
xchg
insb
xlat
shrl
mov
insl
mov
pop
jae
push
std
movsl
cmp
mov
jo
enter
push
fldenv
push
sbb
notl
mov
in
mov
jbe
jns
jb
clc
jb
inc
jmp
xchg
roll
mov
fstp
or
sub
stc
mov
das
and
das
rcr
dec
inc
movsb
mov
push
orl
mov
je
jle
lret
in
leave
jge
jp
adc
adc
in
cltd
popf
sbb
or
pop
and
or
mov
mov
insl
ret
cmpsb
jb
out
add
fld
pop
push
xor
stos
das
pusha
pop
jle
sub
mov
sbb
in
pop
out
ds
xchg
cmp
ss
repnz
xlat
and
lds
pop
cmp
jno
cmp
test
mov
roll
fcompl
adc
push
jecxz
cltd
out
xchg
movsl
loopne
cmp
and
sub
inc
dec
repnz
fidivrs
cltd
mov
gs
pop
jb
lock
out
ret
in
jb
add
dec
rcl
jg
dec
lahf
pusha
pop
repz
enter
fbstp
movsb
jnp
xor
out
cmp
cmp
pusha
and
inc
in
sahf
pop
rcr
adc
fs
pop
mov
in
jnp
roll
fadd
jo
mov
sbb
push
mov
les
je
mov
lret
clc
or
or
rolb
adc
rcl
dec
jae
out
push
jmp
add
clc
es
das
cwtl
xor
gs
inc
cmpsl
dec
loopne
xchg
stos
mov
sahf
mov
addr16
push
add
sub
add
stos
xchg
ds
daa
mov
sbb
bound
js
cmpb
iret
pushf
jo
rcll
xor
loop
call
xchg
das
lods
inc
dec
scas
pop
nop
sub
or
and
leave
call
jecxz
testb
dec
inc
inc
lahf
sub
movsl
adc
clc
roll
scas
xor
jmp
mov
jo
in
jnp
jge
rcl
iret
jb
insb
sub
inc
adcb
mov
sub
dec
js
inc
testl
add
push
test
cmp
sbb
lcall
mov
and
sti
je
outsl
mov
sahf
scas
subb
jbe
insb
and
mov
inc
push
in
popa
repz
int3
stos
pop
int
fnsave
jge
mov
gs
fcmovne
stc
push
out
mov
jl
jl
sub
ror
jmp
add
out
rcrl
test
iret
xchg
fwait
push
pushl
in
cmp
inc
mov
or
fisttpll
bound
ret
jno
dec
fwait
subl
lcall
jge
aas
pusha
fldt
test
out
movsb
aas
insb
sti
filds
push
adc
popa
pop
sbb
loopnew
sete
sub
sbb
out
push
movsl
push
jecxz
push
inc
jnp
dec
enter
hlt
out
push
xchg
mov
and
pop
xchg
in
jnp
fisubl
mov
mov
dec
mov
pop
pop
xor
cmc
mov
sub
addl
lret
dec
pop
jno
in
xchg
dec
cmp
fmuls
xor
mov
les
sub
insb
xor
jbe
dec
les
dec
ja
jbe
jmp
mov
sbb
insl
cmp
ljmp
mov
cltd
mov
lret
sub
add
out
dec
dec
sub
mov
je
xor
jb
adc
xchg
daa
out
adc
xor
cmp
xor
lret
sub
movsl
jge
jge
jl
in
es
lret
inc
mov
roll
pop
mov
xlat
test
bswap
js
vcmpps
lea
adc
sbb
sarb
les
aas
pop
jbe
imul
sbb
and
in
cmc
lods
rolb
and
orb
iret
subl
sbb
fldcw
jnp
pop
mov
cmpsl
cltd
lods
add
orl
hlt
lods
dec
dec
mov
lret
push
test
xchg
pusha
xchg
or
fwait
dec
gs
shr
adcl
or
out
in
iret
and
lret
cli
push
dec
sbb
and
xchg
not
xor
inc
nop
adc
js
and
in
mov
jg
dec
xchg
fimull
cwtl
movsl
adc
cmp
nop
push
ljmp
in
push
lea
xlat
shl
mov
xchg
ljmp
cmp
mov
stos
xorb
xor
pop
daa
cmp
mov
lods
pushf
xor
fnstcw
lcall
jg
pop
inc
loopne
pop
pusha
add
das
arpl
mov
or
cmp
xor
mov
gs
in
dec
dec
jnp
mov
push
ljmp
pop
jecxz
scas
or
or
jbe
fsts
imul
cltd
or
test
push
or
sub
shll
daa
add
mov
fnstenv
push
les
dec
dec
jbe
es
and
stos
mov
sti
iret
sub
mov
cmpsl
shll
imul
movsl
jecxz
adc
les
and
repz
dec
and
outsl
sbb
movsl
sbb
mov
cmp
xlat
je
pop
jge
loop
fnstenv
jo
xchg
data16
xor
out
stc
and
rcr
cmc
xorb
arpl
mov
pop
in
cmpsb
mov
jecxz
add
lock
insb
call
add
test
mov
mov
lret
jmp
sbb
push
pushf
mov
dec
inc
sub
mov
cli
test
pop
add
cmp
add
xlat
sti
inc
cmp
int3
and
cmp
and
lock
cli
mov
test
scas
or
iret
mov
pop
in
in
iret
jne
int3
mov
pushl
xchg
inc
jecxz
sub
inc
mov
pushf
xchg
and
push
adc
xor
sbb
mov
je
lret
inc
or
mov
xchg
adc
hlt
mov
mov
idivb
mov
mov
ss
and
pop
data16
sbb
or
jno
inc
test
rol
xchg
cmc
xor
inc
stos
jg
sub
mov
mov
in
push
xchg
jno
add
inc
or
dec
bound
mov
xor
and
sbb
dec
mov
into
cmc
pusha
aas
dec
and
jae
push
lods
adc
out
mov
jae
push
inc
vpmaxuw
or
shlb
add
leave
sub
jg
adc
or
dec
lods
lock
fs
lds
add
sub
lods
outsb
jbe
sub
in
insb
ret
sub
scas
mov
push
sbb
cmpsb
pop
or
dec
cwtl
mov
test
test
divb
mov
pop
lret
pusha
ss
lret
ds
cmp
bswap
bound
test
or
sub
sbb
mov
dec
dec
xchg
movsb
ljmp
imull
sahf
dec
rcl
sti
push
jl
cmpsb
in
sbb
lds
cmp
add
push
rcr
out
mov
les
or
pushf
cltd
imul
pop
pop
jno
scas
jle
es
push
out
push
andb
sub
mov
aaa
daa
pusha
sub
in
mov
dec
sbb
insl
adc
sub
in
adc
jne
setge
sbb
xor
movsb
int
pushf
out
loope
jp
xchg
inc
sbb
outsl
mov
push
xor
add
sub
outsb
adc
push
push
and
sub
lahf
push
dec
cmpsb
in
ret
fisttpl
pop
arpl
into
sub
mov
dec
fisubs
rorb
fdivrs
fistl
out
ljmp
jo
stos
daa
in
dec
adc
mov
mov
cmp
leave
adc
dec
or
xorl
sub
sub
cmp
rcll
movsb
imul
sbb
sub
scas
mov
mov
adc
fcomps
sub
sbb
mov
adc
mov
and
sbb
jmp
sub
jp
cmpsl
out
sti
pop
in
mov
inc
adc
hlt
std
jp
cmp
outsb
dec
hlt
aad
int3
jbe
and
lret
js
lock
gs
mov
outsb
mov
xchg
cmpsl
lds
in
pop
cmp
les
std
dec
outsb
mov
stc
jnp
pop
sarb
mov
cmp
arpl
ljmp
shl
in
pop
lods
cmc
xor
adc
jmp
mov
push
sbb
pop
push
mov
xchg
mov
daa
lret
add
js
mov
mov
or
jnp
jo
mov
add
loop
push
outsb
push
mov
adc
sub
jecxz
adc
dec
pushf
jno
mov
clc
jae
je
push
jl
cltd
pop
fsubs
mov
scas
dec
adc
call
xor
mov
xor
andl
fsubrl
stos
mov
adc
or
ret
movsl
dec
ja
inc
push
stos
fs
pop
jo
mov
mov
sub
push
mov
loop
sahf
fmuls
loopne
xchg
pop
push
in
mov
lcall
sub
icebp
out
cmpsb
loop
in
lret
scas
push
adc
sbb
push
shlb
or
fidivrl
arpl
push
adc
in
jne
sub
pop
iret
leave
sbb
data16
lods
and
lcall
sbb
cmc
dec
in
adc
add
jb
push
xor
iret
jns
or
sahf
xchg
rcrb
into
inc
bound
push
jns
aad
stos
and
std
ja
and
in
mov
addb
mov
adc
pop
imul
sub
cli
push
jmp
roll
xchg
jo
and
outsb
pop
std
imul
ljmp
enter
dec
push
pop
fisttpl
frstor
sub
sub
in
scas
pop
out
movd
mov
test
inc
imul
enter
hlt
pop
sub
push
aad
push
sbb
cmp
icebp
in
shl
sbb
or
xchg
pop
cmp
mov
jge
mov
mov
gs
sbb
inc
lahf
repz
aaa
cmp
mov
bound
inc
cmp
popf
cmp
or
adc
cmc
gs
inc
adc
insl
loop
addr16
rorb
add
sarl
add
inc
icebp
aas
jg
outsb
addb
xchg
xor
xlat
xchg
pop
jg
xor
cmp
addr16
xchg
mov
adc
inc
movsl
imul
cli
addr16
pop
movsl
mov
popa
jp
mov
jnp
inc
movsb
push
adc
or
mov
xchg
cli
stos
shrb
mov
data16
sbb
mov
scas
lods
sbb
cmp
imul
in
push
inc
or
xchg
fwait
lods
cmp
nop
lods
dec
jnp
sbb
bound
sub
mov
in
dec
sahf
push
or
je
je
js
sbbb
mov
adc
xchg
mov
xlat
add
xchg
adc
xchg
mov
aas
dec
cmp
rolb
xor
mov
adc
cmc
jge
cmp
sbb
jl
pop
and
daa
or
xchg
adc
or
pop
inc
lret
loop
jno
cs
inc
sbb
in
clc
adc
dec
xchg
mov
dec
hlt
sub
jecxz
in
add
jl
inc
or
daa
fucompp
mov
test
loopne
pop
sti
xchg
pop
push
mov
jecxz
test
gs
add
pop
jb
adc
mov
dec
adc
fsubrl
fidivrl
jmp
adc
jnp
mov
nop
or
mov
inc
cmpsl
test
mov
rcl
fistl
mov
sti
cmp
and
or
pop
push
add
push
dec
cmpb
jnp
imul
fwait
pop
or
adc
adc
cmp
mov
mov
ds
jle
call
mov
fistps
xor
fidivrl
xchg
xor
mov
les
jae
mov
lods
cld
xacquire
jle
xchg
out
cmp
push
shl
push
negl
test
lcall
lods
inc
lock
jb
jnp
adc
mov
cmp
in
leave
outsl
sbb
into
inc
inc
jno
and
test
mov
cs
adc
mov
jo
mov
scas
scas
inc
out
inc
sub
stc
add
mov
int3
or
rcrb
comiss
stos
add
cwtl
xorb
ret
ss
dec
fcompl
xor
jnp
aaa
fidivs
lret
xchg
icebp
jne
mov
inc
add
adc
pushf
pop
cmp
faddl
or
stos
or
jmp
cmpsl
jnp
imul
mov
lret
out
rorb
mov
cs
dec
stc
xor
cmp
xorl
xchg
rolb
or
sbb
in
pop
flds
mov
inc
pushf
out
fiadds
jle
pop
inc
jo
fmul
sbb
xchg
pop
cwtl
mov
pop
or
inc
dec
les
mov
dec
into
lds
mov
jb
mul
xorb
push
and
inc
dec
or
mov
negb
cmc
faddl
inc
out
loopne
inc
xchg
int
adc
loop
dec
adc
and
ja
pop
dec
and
dec
stos
mov
lods
mov
pop
sub
xor
aas
xorl
cmp
xor
dec
cmp
sub
mov
repnz
hlt
xor
adc
jg
jo
in
jb
popa
adc
mov
pop
in
mov
sub
aas
mov
or
fadd
in
dec
jg
mov
inc
jo
mov
inc
testl
loopne
push
hlt
je
ds
repnz
sbb
cmp
sbb
jg
sbb
shlb
leave
adc
sbb
jge
icebp
sub
pop
int3
shrb
in
mov
out
mov
shrl
pop
nop
nop
cmp
adc
or
call
filds
jecxz
or
cmp
jo
sub
cmpsb
inc
loopne
sti
sub
xor
out
sti
js
mov
call
jp
xchg
push
add
aas
in
movsb
leave
xchg
flds
push
pop
xor
pop
fcmovb
add
ret
cmp
cmp
scas
mov
add
mov
or
sbb
sbbl
enter
and
in
xor
cmp
cmp
sub
scas
ret
push
xor
xchg
jmp
cmc
addb
nop
or
in
sub
jbe
outsl
cs
pop
xchg
inc
mov
test
testl
sbb
pop
out
cmp
outsb
mov
dec
out
out
push
add
mov
andb
sub
imul
add
sarb
ret
in
insb
push
adc
push
fcoms
icebp
mov
scas
es
xchg
out
push
push
lret
pop
mov
out
mov
sub
int3
xchg
xor
adc
pop
lahf
xchg
jo
loope
push
test
adc
repnz
test
clc
ss
jmp
xor
or
jno
std
lock
lods
loope
jae
sbb
push
stos
xchg
inc
cli
popf
pop
adc
loop
xchg
rorb
pop
aam
shrl
je
push
xchg
je
mov
sbb
cltd
mov
cwtl
add
hlt
mov
fs
dec
sbb
mov
jge
or
sbb
mov
xchg
jle
mov
jnp
sbb
pusha
sbb
out
add
orl
push
and
or
mov
repnz
lds
jecxz
cmp
rcl
sub
pop
jl
mov
mov
ss
scas
fnstsw
cli
xchg
sti
cmp
sub
xchg
sbb
out
dec
out
out
sbb
bnd
idivb
pop
insb
xchg
jg
sti
pusha
xchg
popf
sahf
sahf
pop
xchg
jle
jmp
dec
movb
xchg
movsl
mov
add
or
ljmp
push
cld
lock
dec
add
scas
into
mov
sti
scas
pop
xchg
loopne
aad
pop
jnp
add
aaa
adc
pusha
cmc
sbb
add
mov
arpl
xor
test
imul
push
into
imul
sbb
dec
outsb
add
daa
mov
adc
jmp
xor
lock
repz
xchg
pop
mov
sub
push
push
rclb
jg
jle
pop
ja
jecxz
jp
xlat
movsl
adc
sub
inc
jns
and
mov
adc
add
pxor
mov
sbb
or
dec
xchg
ret
stos
cmp
leave
sti
sarb
addr16
daa
cmpsb
pusha
movsb
adc
fstps
and
leave
ds
ret
mov
xor
jle
mov
lcall
in
inc
loopne
lret
dec
aas
add
cmpsl
adc
mov
dec
fdivl
jo
sbb
mov
addr16
mov
dec
loope
roll
dec
xlat
rcrb
xchg
es
cmp
daa
sar
add
in
stos
fists
mov
xchg
aam
pop
leave
js
std
or
fsubs
leave
andnps
lahf
push
fwait
mov
jnp
into
mov
add
adc
hlt
sti
mov
jge
scas
add
sbb
sbb
mov
in
fnstenv
mov
jle,pn
and
out
loopne
mov
xchg
jp
fwait
mov
pop
mov
pop
outsl
sbb
adc
pop
loope
jne
repz
pop
sbb
std
popf
ret
leave
idiv
and
cmpsl
push
sbb
mov
nop
insl
add
jge
pop
repnz
or
loope
call
lods
daa
fisubrs
jb
imulb
mov
adc
sub
lcall
mov
inc
xor
rolb
dec
nop
test
arpl
sbb
aam
inc
xor
lcall
jnp
xor
daa
clc
fcomp
and
sbb
jp
fisttpll
mov
loopne
cmp
daa
pop
and
cmpsl
sarl
iret
inc
xchg
mov
in
popf
mov
push
add
scas
out
adc
loope
iret
inc
sub
push
xor
dec
fiadds
dec
mov
ljmp
fisttps
mov
add
push
negl
jmp
pop
adc
inc
test
sbb
loop
inc
adc
jbe
clc
cmpsl
clc
sbb
scas
jo
daa
adc
rcll
aaa
mov
add
inc
add
pusha
orl
test
push
and
sbb
mov
cmp
or
ret
sti
subb
cwtl
jg
daa
mov
int
fs
dec
mov
fldcw
fsub
pusha
cwtl
inc
popa
dec
adc
pop
fidivrs
repnz
and
hlt
cmpsl
nop
ds
adc
jns
rcl
aam
in
lcall
mov
mov
add
cmp
push
xor
mov
mov
add
and
int
insl
cltd
dec
mov
inc
pop
int3
jmp
lret
and
ss
orl
int3
jnp
loop
inc
sbb
add
ss
xor
sarb
aad
fwait
popa
daa
mov
ss
mov
xor
rcl
mov
insb
add
push
fidivl
adcl
dec
pop
mov
js
arpl
xchg
push
sahf
push
enter
sub
data16
out
mov
inc
mov
fs
or
dec
add
push
outsl
xor
pushf
xchg
pop
pop
dec
dec
or
pop
imul
push
xor
adc
xchg
pop
test
add
ljmp
fisttps
xor
or
fisubl
fsubs
cmp
jnp
jnp
std
xchg
push
enter
or
mov
rorl
dec
sbb
pop
pop
dec
sti
inc
mov
xchg
jno
dec
repnz
mov
shrl
loop
fwait
mov
cltd
int3
jl
js
ja
sbb
push
or
cmp
sbb
cmp
stos
adc
mov
xor
in
xchg
jl
lock
fidivs
stos
daa
out
push
clc
cltd
enter
fsts
xchg
or
call
cwtl
das
xchg
sar
arpl
add
adc
std
xchg
lea
mov
fdivrp
addb
xor
fisttps
lds
sbb
lock
cld
or
ds
adc
mulb
mov
jg
js
push
movsb
scas
push
repnz
adc
and
cmp
xchg
jle
in
mov
cmp
push
imul
mov
xchg
jne
inc
into
loope
xor
test
js
adc
test
mov
xchg
and
sub
jmp
mov
rorb
mov
add
hlt
addr16
jmp
cmp
aaa
and
jle
xchg
aad
enter
bound
mov
loope
adc
dec
call
xor
enter
mov
fiaddl
mov
cwtl
sbbl
jne
pop
out
xor
mov
cmpsl
int3
ret
testb
into
pop
insl
nop
xchg
addr16
xchg
fisttpll
jge
xor
or
jns
push
jnp
ret
dec
aam
ja
and
jns
mov
into
out
pop
jecxz
add
rol
outsb
call
js
push
fwait
jecxz
ret
daa
cltd
xlat
repnz
lods
sub
shll
inc
push
jge
call
orb
mov
insl
inc
hlt
xchg
xor
popa
or
out
aad
mov
mov
cmpsl
aad
std
fildl
xor
jg
jg
sti
pushf
pop
pushf
mov
js
mov
dec
ret
cmpsb
data16
xchg
pop
mov
mov
enter
mov
lret
mov
pop
push
or
jg
xchg
ret
mov
jg
out
mov
cli
repnz
xchg
push
push
arpl
mov
xchg
mov
mov
jae
xlat
rorl
jmp
xor
jo
xchg
shlb
sbb
pop
and
rcrl
incl
inc
inc
inc
mov
cmp
outsb
aad
add
xchg
fisubrl
and
cmpsb
fucomi
mov
or
and
out
stos
loop
testb
mov
ss
push
adc
xor
mov
ret
insb
or
or
cmp
lret
inc
sub
ficomps
gs
movsb
mov
push
cmp
incb
mov
shll
xor
enter
pop
mov
int
sbb
movsl
hlt
jnp
in
dec
imul
jbe
imul
aaa
mov
cmpsl
iret
subb
stos
cmp
mov
push
jne
adc
int
lock
dec
arpl
lods
pop
aaa
push
das
mov
iret
popf
push
cmp
insb
imul
popf
cmpb
mov
pop
mov
popa
lcall
mov
sbbl
mov
add
adc
lods
fwait
sub
ret
je
orb
adc
dec
lahf
inc
mov
std
sub
sbb
cwtl
das
xchg
jb
stos
cli
into
xchg
sbb
cmpsl
add
jae
and
push
loop
js
outsl
dec
jnp
popf
xor
dec
movsb
sub
aas
push
cmpsl
and
test
clc
jbe
test
ss
xor
loope
pop
mov
push
in
inc
fs
stos
push
pop
popf
fs
mov
dec
cmc
mov
jp
cmp
in
mov
pushf
sbb
sub
bound
inc
bound
mov
mov
cmpsb
jle
sbb
test
xor
out
fwait
xor
iret
and
les
mov
add
data16
jne
repnz
dec
jne
adc
pusha
int
push
pop
fisubl
cmp
lea
outsl
xchg
js
pushf
and
hlt
sub
fidivl
aam
leave
xchg
test
push
pop
insb
adc
repz
mov
mov
ret
or
out
sbb
add
inc
dec
inc
stos
sbb
shrl
dec
arpl
cmp
mov
jbe
cmp
mov
cmc
jg
inc
out
dec
mov
cwtl
cmp
jae
ds
push
out
push
xor
cli
xchg
push
mov
fiadds
mov
dec
and
xlat
dec
lock
in
mov
data16
lods
mov
sqrtps
fwait
aaa
pop
arpl
cmp
mov
cmp
xlat
call
lahf
insb
or
jle
add
lods
iret
jo
inc
mov
sbb
pusha
nop
pop
jl
pop
mov
iret
inc
pop
sub
or
mov
xchg
mov
nop
ds
or
popf
xor
pop
imul
sub
push
and
inc
xor
and
int
call
js
inc
popa
mov
test
std
add
push
in
popf
popa
pop
bound
pop
cmp
imul
pop
inc
add
loope
stos
and
icebp
je
shll
or
dec
sub
loope
and
or
dec
jno
mov
push
jg
push
xchg
call
xchg
lret
inc
insl
fdivs
jne
xlat
mov
add
in
adc
inc
inc
dec
sbb
mov
jne
or
test
leave
inc
dec
add
jns
shrb
push
lods
test
in
dec
int3
push
in
and
xor
shr
std
cmp
ja
mov
lods
adc
jle
inc
insl
adc
les
out
shrl
or
xchg
out
test
jb
xorl
cli
loope
ret
push
dec
lods
int
push
data16
fwait
dec
fdivr
loopne
out
outsl
and
lock
pop
imul
mov
cmp
jae
in
add
test
lea
push
jbe
in
push
ljmp
sti
push
mov
insb
fcom
fs
and
nop
and
pop
mov
add
xchg
and
adc
cmc
or
dec
and
xor
shlb
faddl
lods
push
mov
mov
jecxz
xor
cmp
loopne
inc
int
pop
aad
sti
dec
out
shr
push
imul
dec
jae
xchg
xchg
add
xchg
xchg
mov
mov
mov
insb
and
pusha
test
jl
push
das
jp
je
hlt
push
int
pop
pop
fcmovnb
jne
mov
loop
scas
cmp
mov
jl
dec
int
jmp
push
push
bound
fcmovu
insl
pop
ljmp
jae
stos
lret
popf
mov
in
jge
xor
jns
lds
std
cmc
mov
or
jmp
pop
sbb
pop
add
fldcw
fbld
inc
ficoms
mov
pop
add
add
loope
sbb
aam
clc
mov
mov
loopne
aaa
imul
xor
enter
add
jle
sub
sub
dec
mov
dec
inc
adc
cs
dec
adc
pusha
in
xor
lcall
int
fmul
and
sbb
lret
pop
mov
mov
add
mov
sub
sti
mov
scas
jl
jmp
lods
lret
pop
jge
clc
in
inc
lods
addr16
test
jns
and
outsb
icebp
mov
push
mov
mull
test
inc
int
outsl
test
mov
scas
std
rol
jg
daa
dec
sti
jl
lea
cmpsb
lret
inc
xchg
jno
fwait
or
add
cltd
cs
clc
dec
cld
pop
pop
adc
sub
jbe
mov
in
ds
pop
or
dec
inc
push
jmp
sbb
jb
add
cmc
mov
cmp
mov
rol
loopne
scas
mov
xlat
cli
iret
insb
xor
test
push
jns
dec
push
cmp
in
inc
push
or
in
ret
test
add
cli
sti
or
repz
mov
aam
repnz
inc
mov
dec
push
imul
das
enter
pop
pusha
gs
insb
aad
sahf
cmpl
jmp
dec
das
cmp
data16
inc
aas
hlt
xchg
enter
lea
aaa
sbb
sbb
pop
jecxz
iret
sar
push
dec
arpl
pop
icebp
lcall
ret
in
and
mov
shlb
hlt
cmpsl
fwait
cmp
idiv
mov
outsb
daa
mov
xor
scas
jno
insl
and
adcl
dec
or
das
mov
pop
and
push
imul
inc
inc
adc
aam
iret
xchg
adc
jne
mov
inc
adcb
pop
imul
sub
out
in
mov
xchg
mov
inc
scas
and
testl
shrl
jb
pop
sub
dec
jae
push
pop
jle
mov
divb
imul
pushf
pop
mov
cmp
addr16
repnz
xchg
inc
lods
mov
fnstcw
sub
test
add
mov
outsl
pop
les
popf
aas
pop
mov
js
inc
mov
push
jnp
mov
je
imul
mov
mov
cmp
cltd
sub
mov
sub
sub
dec
addr16
mov
jno
in
xchg
icebp
cmpsb
mov
aaa
push
dec
aam
gs
sub
sub
repnz
outsb
sarb
pop
sbb
insl
ficoms
daa
or
and
movsl
popf
in
popf
mov
outsl
sbb
leave
pop
js
mulb
mov
fimuls
mov
cltd
jbe
mov
pop
push
mov
adc
aam
cmp
cmp
inc
in
pmuludq
daa
stos
data16
add
lcall
xchg
in
sahf
mov
cmp
cmpsl
push
fistpl
jo
jae
clc
inc
sub
fwait
sbb
mov
mov
decl
or
jns
xchg
jbe
loope
mov
std
nop
and
ficoms
xchg
sti
dec
mov
push
push
stos
push
pop
push
mov
mov
push
jecxz
and
jmp
ret
ss
fcmove
shlb
or
jae
leave
outsb
pop
xor
out
pop
inc
mov
xor
jns
icebp
pusha
sahf
outsl
shrb
jle
pusha
lea
inc
mov
push
gs
loope
mov
movsb
sbb
mov
push
cmp
xchg
lods
inc
fsub
mov
aam
lret
mov
dec
stc
and
call
mov
pop
cmpsl
cwtl
mov
leave
scas
das
sub
cld
jbe
pop
or
and
sbb
hlt
lret
inc
scas
cltd
pushf
push
sti
mov
inc
dec
lock
movsl
popa
lahf
scas
pop
insb
sti
inc
pop
jns
addr16
pop
insl
xchg
pop
push
fisubrs
or
add
push
test
jmp
shl
pop
inc
repz
and
lods
test
xchg
push
jno
int
cltd
sahf
inc
xchg
adc
pop
call
js
mov
push
out
test
dec
dec
loopne
mov
jae
lds
cld
xor
js
cmovge
out
sbb
popf
inc
fdivrl
ss
add
inc
stos
scas
push
pop
mov
pop
mov
movsl
insb
imul
stos
js
push
ljmp
addl
push
or
lcall
sbb
pop
cmc
or
cmp
push
xor
jmp
sbb
xchg
sbb
popa
jmp
pop
data16
pop
adc
mov
inc
leave
out
and
outsl
add
inc
xchg
testl
push
lods
mov
adc
push
test
sbb
push
std
xchg
inc
lock
adcb
jbe
mov
mov
sub
mov
hlt
jge
fwait
jl
fsubrl
mov
jnp
mov
xchg
push
jns
sar
jecxz
or
and
scas
sti
fwait
clc
pop
cwtl
and
push
or
pop
imul
and
jbe
xorb
push
xchg
idivl
inc
data16
cwtl
dec
push
jns
xchg
les
cmp
or
lds
push
ds
loop
mov
cmp
mov
xchg
daa
push
mov
les
or
sub
xchg
mov
sbb
adc
cmc
xchg
xor
cld
inc
flds
nop
xchg
pop
test
push
aas
dec
sbbl
call
mov
icebp
sub
popa
push
std
out
div
test
shlb
and
xchg
adc
das
and
mov
arpl
sbb
sti
dec
sahf
cmp
cmp
ret
and
sub
push
sub
xor
cmp
dec
repnz
rclb
xchg
dec
pop
jns
mov
mov
xor
jno
or
sahf
imul
loop
jae
adc
scas
add
imul
adc
mov
lret
fsubl
leave
jmp
adc
testl
jnp
cli
rolb
cs
sbb
mov
sub
fildll
mov
jge
inc
insl
lock
or
push
shl
sbbl
mov
cmc
int3
xchg
ljmp
fldcw
dec
xor
call
lds
nop
pop
scas
mov
and
cmp
sbb
pop
pop
mov
mov
jnp
mov
jmp
cmp
cld
ljmp
cli
dec
fmuls
popa
sarl
push
dec
adc
push
out
cmc
xor
into
shll
jge
push
aam
data16
pop
add
jns
scas
iret
jge
idiv
dec
mov
inc
or
xor
push
mov
push
shll
fs
lret
xchg
lret
sub
jp
loop
and
inc
mov
xchg
add
sub
or
xchg
div
push
adc
mov
ja
mov
xor
pop
sti
or
mov
inc
scas
enter
inc
and
mov
xchg
cwtl
mov
mov
dec
push
fsubrs
inc
mov
mov
add
pusha
mov
mov
rol
pushf
lods
sub
popl
sub
jmp
jecxz
sbb
sahf
jo
outsb
mov
push
sbb
push
shlb
sub
lods
ljmp
nop
shrl
adc
cmovae
mov
jmp
and
and
add
xchg
inc
test
pushl
jl
movq
shrl
dec
cmp
cli
mov
movsl
rcll
cli
data16
lret
jo
rclb
aad
pusha
sub
adc
pop
mov
push
mov
jae
inc
push
leave
pop
jb
mov
outsl
addr16
fwait
sub
icebp
fs
js
repnz
add
push
adc
mov
xchg
enter
jno
sbb
mov
scas
xor
sbb
pop
dec
pushf
subl
fwait
mov
push
cmp
ja
iret
add
pop
call
push
mov
adcl
roll
cmpsl
sub
icebp
divb
int3
fldt
push
dec
inc
imul
or
cwtl
fdivl
movsl
inc
sbb
sbb
mov
gs
into
mov
jo
adc
mov
in
jecxz
pop
aas
dec
push
and
mov
mov
jl
dec
or
mov
xchg
lret
pop
es
sub
sub
popf
mov
or
lcall
or
push
daa
inc
cmpsb
ss
in
popf
sti
stos
sti
sahf
dec
mov
aaa
jne
call
add
cs
arpl
pop
adc
xchg
add
popf
pop
fidivs
mov
sub
mov
sbb
stos
dec
jb
movsb
repz
arpl
dec
out
addr16
add
repnz
adc
rcrl
or
or
push
fildll
fldt
rolb
int
cmp
cwtl
push
das
push
fdivl
addr16
ss
fidivl
add
sbbl
pop
in
ror
fldenv
imul
inc
sbb
add
jns
add
pop
shr
aas
or
ss
push
push
jmp
inc
mov
clc
add
jbe
pop
xchg
fisttpl
fs
cli
rclb
ret
jae
leave
jge
gs
int3
and
mov
sbb
xchg
out
xor
and
add
mov
push
cmp
pop
cmp
arpl
pop
sub
pop
push
gs
sbb
push
mov
inc
aas
adc
push
and
pop
jecxz
mov
mov
dec
pop
loopne
xor
cmp
aas
iret
ljmp
sbb
out
or
or
xchg
sbb
aad
aaa
xchg
xchg
in
cmp
sarb
or
in
adc
xchg
cs
pop
dec
in
dec
mov
add
movsb
fisttpll
lds
sub
adc
inc
leave
aas
testb
std
add
call
pop
jmp
fdiv
fsubp
dec
dec
out
pop
outsb
ficomps
sbb
xor
loop
inc
dec
or
push
xor
fsts
iret
shlb
repnz
fldl
fcoms
test
or
ljmp
jg
pop
into
push
pop
dec
in
inc
pop
xchg
sbb
leave
clc
mov
lea
shll
notb
outsl
adc
inc
in
and
cld
lret
or
call
test
push
cmp
inc
dec
jl
cli
xchg
jae
sub
xchg
ret
popa
stos
inc
imul
xchg
lret
pop
inc
pusha
adc
sbb
inc
sbb
jmp
pushf
lahf
jno
pop
test
mov
out
xchg
loop
push
xchg
mov
and
movsl
xor
data16
lahf
mov
cmpsl
test
and
hlt
sub
inc
push
pop
adc
xor
push
xchg
mov
out
dec
test
xor
xchg
mov
ds
mov
xor
or
jp
dec
sub
pop
aaa
mov
mov
call
add
lret
jp
aas
push
popf
mov
movsl
mov
jge
int3
jl
mov
sub
das
jl
or
adc
pusha
cmp
pop
rol
into
call
nop
pusha
and
mov
stos
movsl
jmp
mov
rcrb
in
fs
mov
jg
fnsave
imul
fsubrp
add
fwait
pop
loope
push
repnz
mov
inc
sbb
or
pop
imul
pop
repnz
sarb
cmpsb
fsts
cmp
xchg
ljmp
sbbb
mov
sbb
cmc
push
sbb
xor
adc
dec
shr
rclb
imul
push
leave
imul
out
mov
movsb
xorl
stc
and
mov
cmp
mov
sub
cld
pop
fwait
inc
fucomi
out
push
icebp
or
mov
push
cmp
nop
mov
push
gs
mov
ficompl
pusha
or
jbe
or
xsaveopt
xor
xor
scas
adc
or
jle
pop
gs
loope
lahf
push
je
int3
push
es
mov
jns
mov
hlt
pop
adc
push
inc
xor
outsb
pop
jne
shrl
outsb
lcall
pop
adc
in
inc
jo
scas
xlat
scas
jl
mov
mov
fsubrl
pop
and
adc
into
xchg
fldcw
push
mov
fisttps
roll
cmc
test
jb
xchg
pop
push
sbb
mov
leave
outsl
mov
test
inc
pop
cli
les
scas
fnstsw
xor
mov
xlat
notl
sub
dec
jmp
mov
dec
filds
inc
push
jle
add
call
xor
adc
les
mov
dec
xchg
mov
jnp
js
fs
fwait
jno
mov
jbe
pop
jnp
loop
enter
addr16
pop
cmp
adc
push
push
pop
xchg
and
sbb
jg
inc
stos
pop
aam
adc
cmpsb
shrb
lahf
mov
mov
aad
les
push
and
cltd
pushf
inc
shll
or
clc
mov
les
push
inc
pop
scas
lea
cmp
xchg
fstpl
fsubs
stos
test
out
ljmp
adc
bound
idivl
mov
mov
or
sub
loop
xchg
cmp
lea
jnp
nop
mov
mov
ret
mov
data16
out
hlt
fstpt
mov
jecxz
mov
scas
and
pop
xchg
out
clc
test
call
jnp
push
xchg
insb
push
cs
add
fldl
jmp
lahf
test
icebp
cmpsb
xchg
stc
push
lahf
scas
lds
xchg
adc
xchg
sahf
mov
xor
in
out
outsl
push
and
mov
xchg
push
mov
jne
hlt
push
testl
sub
negb
push
jg
lods
lods
pop
push
sub
test
mov
cmc
pop
cmp
cmpsl
je
movsl
dec
fcomi
inc
js
ret
popf
jbe
sbb
cmp
imul
sahf
xor
push
dec
aaa
dec
lock
dec
jae
dec
or
dec
push
cli
pushf
fucomp
filds
push
mov
sbb
scas
push
jne
roll
loopne
popw
jb
test
lods
insl
popa
mov
dec
notb
sub
xchg
jl
repnz
sub
call
sub
aad
rclb
pslld
fadd
cmp
adc
aam
adc
into
pop
aaa
pop
pop
fidivs
mov
dec
mov
xchg
ss
mov
mov
movl
xchg
push
in
adcl
repnz
mov
and
pop
pop
fdivrp
and
adc
lock
pusha
push
mov
xchg
adc
mov
repz
xor
orb
add
ljmp
push
sarl
xor
and
inc
push
in
or
dec
add
add
push
jnp
leave
cmpsb
pushf
shrl
sub
enter
xchg
nop
jne
pop
sbb
fs
in
dec
das
rcr
push
faddl
sub
push
pop
sbb
and
push
sahf
push
xlat
dec
xchg
mov
lock
push
mov
mov
xor
jecxz
scas
fwait
dec
sbb
xor
ljmp
test
sbb
mov
mov
mov
lret
insl
cmp
imul
lret
or
inc
push
or
adc
mov
mov
mov
pop
ja
mov
mov
arpl
les
iret
mov
enter
stos
cmp
nop
sti
mov
cmp
sbbl
adc
push
xchg
cmpsl
adc
mov
imul
loopne
mov
andb
popf
in
popf
dec
stos
push
jg
inc
mov
loop
jbe
inc
gs
test
aas
xchg
insb
mov
adc
xor
out
mov
popa
xchg
xor
jbe
jg
xor
pop
jl
outsl
cmp
dec
or
fisubs
lods
sub
fmuls
orl
push
mov
imul
mov
lods
adc
adcb
incb
push
mov
and
aas
mov
movsl
lock
loope
xchg
lcall
or
test
dec
stc
fs
lret
add
push
pop
push
addr16
xchg
push
jecxz
mov
xor
mov
enter
jno
outsb
nop
add
xchg
gs
pushl
or
sub
push
push
in
popa
add
leave
orl
js
fsubl
scas
ss
xor
je
out
enter
sbb
jae
fidivrl
mov
and
negb
sbb
insl
push
dec
lods
cltd
inc
dec
sub
hlt
jecxz
daa
stc
sbb
cwtl
jecxz
dec
cld
jo
cmpsb
mov
and
sahf
lods
movsb
mov
or
dec
imul
xchg
movl
rcrl
leave
mov
mov
jae
xchg
dec
dec
out
shlb
xor
jecxz
adc
out
pop
add
pusha
mov
inc
pop
or
cmpsb
mov
xor
sbb
das
mov
pop
test
clc
mov
mov
das
mov
or
test
push
gs
js
sub
jmp
out
icebp
sarb
pop
inc
cmp
add
mov
testb
pop
xchg
lahf
xorb
lahf
ss
or
inc
repz
sub
rcl
data16
xchg
jg
jnp
popf
sub
mov
mov
dec
jl
lea
sarl
mov
cmpsb
add
xchg
lods
mov
dec
int
push
out
add
fiadds
cmp
mov
test
leave
jae
inc
cld
sbb
push
xor
pop
repz
add
or
push
jnp
and
aad
adc
mov
jp
movsl
adc
sti
xlat
inc
inc
xchg
clc
xchg
cmc
adc
mov
jl
out
adc
jl
mov
pop
int3
repz
pop
mov
add
mov
lahf
aad
inc
ret
push
xchg
mov
insl
push
fwait
add
add
mov
jae
lret
adc
jmp
jns
adc
xchg
lods
mov
inc
insl
mov
arpl
sub
pop
adc
insl
sarl
outsb
inc
loopne
mov
xchg
cmp
dec
pop
lock
out
push
sub
adc
sti
inc
cltd
pop
iret
dec
pop
pushf
pop
loope
lar
pop
pop
test
out
push
fs
fldt
push
xchg
fsubs
cmc
popa
outsb
repnz
hlt
mov
pop
or
popa
stos
nop
out
lock
or
int3
dec
stos
dec
cmp
jge
fsts
fsubr
sub
aad
addr16
ret
ficoml
jne
mov
mov
and
dec
shrl
mov
inc
jb
sbb
loop
mov
jae
mov
push
lret
ja
pop
ja
dec
and
mov
adc
mov
in
dec
mov
cmp
mov
icebp
test
sub
je
insl
out
rcrl
movlps
gs
js
push
test
mov
lret
push
jmp
push
add
iret
cs
ret
xchg
sub
or
lds
in
dec
jae
adc
xchg
fisubl
pop
jne
cltd
out
adc
lea
or
sub
push
cmpsl
in
clc
xchg
pop
mov
and
iret
mov
cmp
mov
push
inc
xchg
iret
jb
lock
lret
xchg
adc
shrl
pop
rcrb
xor
stc
mov
xchg
jae
cli
cwtl
mov
push
mov
or
sarb
mov
stc
out
push
loop
jbe
loop
loope
pop
cmp
gs
and
adc
sub
or
ret
ljmp
sbb
mov
in
addr16
cmpsl
xchg
ds
dec
ds
mull
ss
pop
mov
imul
mov
int
add
mov
xchg
push
add
cs
lods
ret
sub
or
es
xchg
mov
mov
addb
fisttps
stc
imul
divb
dec
ficomps
add
fisubs
mov
rorl
faddp
mov
mov
gs
add
pop
rclb
mov
inc
aam
test
cmp
pop
into
es
dec
inc
adc
xlat
cmp
test
inc
cmp
icebp
pop
int3
or
sub
out
inc
push
sub
xor
adc
inc
lret
movsb
jp
mov
mulb
loopne,pn
jmp
mov
loop
or
lret
cmp
cmp
mov
inc
in
gs
icebp
insb
rcrb
pop
add
push
in
sarl
insl
test
inc
fs
aad
cmp
cwtl
mov
leave
xchg
adc
mov
dec
in
std
aas
imul
fcompl
xor
sbb
sub
cmp
pop
test
dec
sub
dec
out
mov
fsub
mov
enter
aad
jle
jb
fidivrl
or
sbb
dec
addb
aas
stc
or
call
icebp
xchg
and
roll
and
mov
loopne
bound
jg
cmp
inc
fs
xor
aam
inc
movsb
out
rcr
addb
adc
test
and
fimuls
fsubrs
leave
xchg
stos
or
jmp
mov
hlt
pop
in
mov
push
imul
cmp
jo
xchg
sub
movsl
fsts
adc
aas
lock
arpl
or
in
inc
push
push
dec
cmp
ret
and
addr16
mov
fs
aam
or
insb
scas
lahf
add
sub
cld
add
int
mov
dec
xor
pmullw
xlat
sbb
mov
sbb
movsl
and
nop
out
repz
mov
jae
inc
mov
aam
jl
cmpsb
xchg
sub
arpl
cmp
outsl
aam
inc
leave
sbb
pushf
jnp
mov
sbb
fldl
ret
ljmp
aaa
sbb
jns
mov
inc
dec
dec
popa
xor
clc
adc
inc
das
push
jns
mov
cmp
cltd
ret
outsl
jl
bound
ss
push
subl
clc
dec
arpl
sahf
xchg
adc
subb
cmpsb
fbstp
jbe
test
pop
aaa
or
gs
fadds
stc
lahf
shll
or
shl
out
clc
xchg
add
loope
mov
add
shrl
xchg
mov
dec
lock
cmp
push
orb
xchg
sbb
aas
push
cmp
or
ljmp
push
int
je
adc
sar
lea
push
and
lods
mov
test
jbe
adc
rorl
xchg
scas
or
lret
mov
or
dec
cmp
movsb
xor
lcall
popf
or
adc
mov
jo
mov
and
jge
xorb
xchg
pushf
mov
dec
popa
loope
imul
ljmp
sbbb
push
cmp
mov
es
rorl
sub
jne
sbb
sbb
movsl
mov
push
or
shll
je
imul
cmpsl
data16
jb
sbb
fsubp
cwtl
insb
gs
jle
mov
sbb
mov
nop
arpl
adc
mov
rcrb
dec
aas
lret
fistps
addr16
xchg
xchg
insb
out
lock
sub
mov
ss
cmp
mov
jb
fmuls
cmp
std
mov
jle
repz
repnz
add
adc
or
mov
adc
mov
fdivr
add
and
jg
popa
xchg
notb
pushf
movsl
inc
int
test
jmp
add
pushf
aam
ds
icebp
and
mov
imul
jb
loope
daa
int
push
and
add
fildl
sbb
sub
enter
push
outsb
push
repz
aad
lock
cmovs
jle
inc
lods
or
jno
xchg
push
xor
push
addr16
xor
sahf
add
pop
sbb
test
ljmp
mov
mov
xchg
jmp
leave
mov
xor
sbb
mov
mov
mov
push
pop
sub
inc
rcrb
xchg
xchg
push
lea
aas
push
jge
xor
push
adc
sbb
in
fnstenv
dec
outsb
ret
fmuls
aaa
push
inc
pop
xor
lods
add
mov
cmp
inc
mov
das
int3
mov
inc
mov
cmp
mov
popf
insl
fwait
pop
push
add
mov
inc
jbe
mov
outsb
mov
addr16
push
lods
fdivr
loope
in
es
shld
and
xchg
and
sbb
add
mov
adc
lret
push
popf
fstpl
fbstp
js
mov
in
xchg
xor
sbb
jle
adc
or
sahf
lods
fwait
xchg
and
mov
shl
int3
outsb
icebp
xchg
push
jo
add
mov
lea
push
int
mov
fadds
push
push
scas
enter
jecxz
push
xchg
leave
inc
inc
jg
movsl
jge
jb
movsb
dec
es
orb
call
ss
xchg
xchg
push
mov
sub
push
or
xor
pop
fistps
daa
jno
test
or
rclb
mov
ret
and
loopne
dec
adc
mov
lahf
pop
aad
out
int3
or
mov
sbb
out
inc
mov
mov
lret
inc
mov
push
push
sub
mov
dec
leave
jnp
lock
mov
push
insb
pop
aam
and
test
adc
sub
xchg
lds
inc
and
pushf
shll
das
cli
cmpl
bound
test
es
add
xchg
stc
cmp
mov
decb
mov
xor
jg
mov
jg
and
pop
test
pop
mov
ss
mov
mov
adc
cltd
sub
rclb
rcll
stc
add
jp
push
sahf
in
pop
fnstenv
cmpsl
lahf
mov
push
and
and
negb
cltd
aad
shll
fstpt
mov
cli
test
aad
stos
and
or
adc
je
stc
or
ja
adc
jmp
leave
adc
push
add
popa
out
sub
shlb
insl
jge
pop
loopne
jp
adc
rclb
cmpsl
mov
shll
sbb
ret
jno
es
outsl
scas
lret
xchg
ja
xchg
int3
and
sarl
cwtl
or
push
daa
fucomp
push
xchg
push
jp
scas
mov
lret
sub
inc
adc
jecxz
pop
popf
sub
imul
lods
jg
and
outsb
adc
push
adc
cld
xlat
out
add
mov
data16
jb
or
mov
push
push
in
clc
push
imul
not
pop
jns
stos
inc
xor
cwtl
mov
xchg
and
out
pop
notl
dec
dec
mov
jne
xor
adc
insb
cmp
push
fs
out
mov
mov
push
movsb
mov
stos
shll
cwtl
sub
in
push
mov
scas
pop
fstl
ret
mov
mov
bound
daa
mov
xchg
je
aas
mov
je
xchg
pop
into
xchg
xchg
xchg
and
mov
aam
leave
push
xchg
or
jle
je
sbb
and
mov
mov
orb
mov
adc
cmp
scas
jecxz
mov
clc
and
dec
call
ljmp
push
jg
xchg
mov
sub
push
stos
inc
mov
cmc
ficoml
mov
mov
jne
out
rorb
scas
insl
cmp
adc
adc
mov
push
dec
xorl
je
jl
push
daa
pop
lcall
xor
jne
xor
mov
lods
cs
gs
push
dec
jne
cmpsl
and
jbe
sbb
and
ret
aad
cmpsb
sub
push
push
xor
mov
inc
dec
and
cld
mov
sub
decl
or
add
mov
xchg
stc
inc
fnstcw
call
sbb
pop
popa
fiadds
lret
adc
or
mov
mov
add
scas
les
call
loope
inc
mov
mov
or
add
inc
stos
loopne
lret
inc
push
cmpsb
and
pop
and
pop
xor
sbb
xchg
daa
lahf
cld
sti
jecxz
into
sbb
fsub
jno
or
mov
xor
cmp
xchg
orb
and
cld
into
js
add
fstps
mov
xchg
push
fcomi
aam
or
add
and
ljmp
sbb
sub
xlat
mov
insb
add
sub
inc
xchg
cmpsl
outsb
cld
push
jle
test
pushf
mov
cmp
sbb
mov
adc
ss
push
sbb
jp
popa
cli
enter
sarb
and
dec
mov
xchg
or
jmp
push
sbb
add
aad
xchg
push
cmc
pop
icebp
jmp
xor
call
cltd
xor
aaa
sbb
or
daa
pop
decb
or
int
movsbl
cmpsl
xchg
cld
adc
leave
lock
daa
jmp
clc
ficompl
xor
pop
vpor
xchg
fcmovnbe
cmp
fwait
cmp
fisttps
idivl
stos
ja
xchg
sbb
js
fwait
adc
adc
xlat
popa
outsl
xor
ja
pusha
jp
lret
inc
sbb
dec
jns
or
cmpsl
cmp
mov
testl
data16
push
adc
in
mov
push
shll
cmp
pop
ss
outsl
mov
inc
ja
fwait
xor
movsl
mov
out
dec
cmp
imul
movsb
jno
jmp
das
cli
cld
pop
inc
js
imul
xor
pushf
mov
enter
int3
sti
mov
addr16
xchg
push
sbb
test
movsl
push
aad
sbb
popa
ds
das
js
pop
cs
adc
or
notb
imul
cmp
pop
or
roll
sbb
loopne
pusha
imul
stos
xchg
push
incl
jno
loopne
dec
jmp
jns
xlat
push
ret
lahf
aas
dec
ja
shl
sarb
sbb
pop
mov
mov
push
cmpsl
js
clc
pop
stos
fnstsw
rcrb
dec
repz
sbb
sbb
inc
adc
push
pop
ljmp
aaa
inc
sub
pop
jp
cmc
scas
xchg
es
inc
shlb
and
add
cld
mov
fs
mov
dec
lods
and
or
sbb
scas
mov
dec
xchg
test
mov
pusha
jae
aas
stc
out
xor
pusha
cltd
dec
pop
dec
dec
test
or
test
notl
xchg
dec
cmp
push
lret
test
leave
sub
test
push
scas
js
sub
insl
xor
sbb
push
outsl
push
ljmp
aaa
push
mov
addb
push
call
pop
aam
orl
jbe
or
sub
aaa
sub
sar
mov
sbb
jge
rcrb
iret
scas
cmpsb
outsb
xor
add
cmp
in
push
inc
adcb
aaa
movb
sub
inc
jae
loope
popf
aam
sbbb
sub
xchg
and
xorl
fwait
push
mov
sbb
fldl
insl
dec
dec
loop
dec
lahf
cmc
adc
paddq
push
mov
insl
int3
js
sbb
inc
mov
mov
jle
ljmp
fsubrs
loope
daa
push
xlat
mov
pop
jge
js
pop
mov
mov
cwtl
pop
adc
fwait
adc
jb
lods
je
roll
sbb
and
icebp
outsb
std
js
ror
repz
fisttpll
lds
subl
add
jo
sbb
out
icebp
inc
sub
mov
adc
out
sti
adc
jo
ljmp
loopne
out
add
loope
push
add
lret
sub
int3
mov
pusha
inc
imul
add
outsb
adc
and
int3
pop
imul
inc
inc
mov
les
mov
into
andb
cmp
pop
jns
lea
test
fcoms
sbbl
jbe
data16
jle
xchg
jbe
lret
subl
and
int3
repnz
bound
int
aaa
idivl
push
repnz
and
faddp
sub
mov
adc
jno
pop
mov
cwtl
mov
inc
xor
add
lret
mov
sarb
shlb
js
ds
out
aas
push
mov
cmp
scas
insl
call
xor
int
imul
xor
adc
xor
push
aad
or
add
or
cs
filds
adc
or
adc
xchg
sub
mov
push
push
jnp
pop
aaa
push
sub
mov
mov
addl
push
ret
xor
lea
cmpl
iret
fsubs
add
dec
mov
sbb
cmpl
adc
ss
push
dec
lods
dec
mov
jae
enter
cltd
jae
fsubrl
mov
stos
xchg
adc
mov
insl
cli
mov
pop
das
add
xchg
adc
jb
xor
cmp
test
push
inc
fsubrl
or
mov
jge
push
lret
xchg
or
imul
or
daa
jp
out
jnp
sbb
dec
fst
cltd
dec
lret
inc
push
sti
mov
inc
xor
test
mov
dec
pop
arpl
cmp
cmp
movb
push
movsl
add
ljmp
and
xor
and
mov
mov
sahf
pop
lods
jno
mov
loope
mov
enter
jle
xor
pop
cli
inc
out
and
add
jge
jle
in
pop
lahf
mov
or
roll
pop
js
sbb
cmpsb
inc
add
cli
and
pop
mov
adc
xor
mov
xchg
in
or
push
testl
les
sbb
jl
test
out
mov
mov
mov
imul
dec
pop
mov
icebp
xor
xor
das
cmpsl
in
rcrb
jb
push
pop
mov
icebp
pop
fimull
inc
or
dec
fsubrs
pop
scas
add
or
scas
or
std
cmc
cmc
stos
lds
pop
xor
lock
subl
xlat
clc
cmpb
push
je
pop
shll
jbe
testb
mov
dec
mov
stos
gs
in
lods
jge
lahf
pop
mov
or
js
negb
cmp
pop
xchg
sub
fcmovnbe
jno
jmp
dec
push
or
loopne
dec
push
std
cmp
sahf
shrb
mov
jle
or
add
xchg
in
pop
pop
scas
and
and
cmp
addr16
mov
and
jp
add
and
push
in
pop
xor
sub
pop
mov
pop
fnstenv
sbb
lcall
stos
add
repz
mov
and
dec
pushf
inc
outsb
pop
div
iret
or
stos
xor
loop
pop
pop
hlt
push
add
imul
fdivs
jp
inc
ffreep
cmp
lcall
hlt
mov
push
pushf
pop
and
outsl
mov
mov
push
and
aam
xchg
dec
xchg
jp
lods
cmp
js
mov
js
pop
mov
jp
inc
xlat
andl
sub
rcrl
pop
fcmovb
sarb
cmc
mov
aas
adc
out
inc
leave
out
push
mov
push
shl
out
arpl
sahf
cld
out
mov
or
in
fcmovbe
pop
dec
setle
enter
iret
dec
rorb
loopne
cli
and
mov
sbb
je
fcmovnbe
aad
xchg
adc
sub
push
pop
mov
aas
xchg
jno
dec
and
pop
movsb
push
mov
in
call
inc
movsl
jle
insb
lock
xchg
mov
cmpsb
outsb
into
cmp
xor
jg
out
pop
mov
push
out
cld
add
repnz
push
daa
sbb
int3
imul
lahf
jns
cmp
out
ret
mov
daa
xor
imul
addr16
and
ret
ja,pn
cmp
mov
push
les
push
mov
xor
mov
adc
pop
mov
inc
stos
pusha
or
movsb
sahf
dec
scas
push
cmpsb
popa
sti
cmc
cmp
pushl
fbld
mov
icebp
cmp
inc
test
mov
data16
mov
add
push
inc
sub
repz
pop
js
loop
pushf
movswl
pop
xlat
sub
xchg
sarb
hlt
inc
push
jg
adc
dec
stos
adc
js
incb
mov
repnz
movq
js
dec
aad
call
mov
pop
ljmp
in
and
es
ja
jmp
mov
dec
sub
hlt
ja
cmpb
push
inc
hlt
inc
mov
jmp
sti
cmpsl
mov
mov
dec
mov
pop
add
xor
movsb
adc
ja
xor
clc
push
jecxz
pusha
mov
enter
mov
vunpcklps
subb
repz
insl
dec
stos
xchg
sahf
xor
clc
inc
sahf
bound
fimuls
std
pop
daa
add
and
dec
andl
lret
fsub
movsl
test
push
mov
cltd
test
adc
add
jg
cmpsb
xorb
xlat
std
outsb
in
lods
mov
jno
sbb
jnp
icebp
sub
arpl
pop
aaa
std
das
adc
inc
mov
push
loopne
shlb
push
inc
adc
xchg
pusha
js
mov
push
test
xchg
frstor
dec
add
pop
cmp
repnz
inc
ja
test
mov
jbe
add
cmp
nop
or
jg
jb
or
push
xchg
les
aad
lret
out
daa
inc
adc
dec
sbb
xchg
loope
jg
aas
mov
cmp
mov
inc
xlat
jl
mov
mov
mov
cmp
jb
mov
xchg
jecxz
fcoms
movsw
cmp
enter
adc
add
aaa
jae
mov
mov
adc
jmp
int3
jae
dec
in
jo
mov
and
cmp
cltd
sbb
fildl
imul
sub
insl
pop
rorl
pop
mov
in
sub
mov
imul
pop
out
pop
push
movsb
mov
dec
dec
push
cmc
idivl
add
add
js
je
and
adc
roll
outsl
jle
jne
cltd
shll
shll
cli
cs
movsb
xlat
psrlq
push
or
jle
xlat
rcr
sub
aas
repz
shlb
shr
jmp
cmovno
mov
fnstcw
mov
and
int3
call
test
jae
add
out
mov
out
movsb
cmp
jp
push
iret
jb
xchg
mov
test
pop
sar
jno
cmc
mov
pop
out
sbb
cltd
adc
jge
repnz
scas
enter
jg
or
clc
add
and
test
sahf
ret
rorb
cs
lds
jecxz
mov
jb
ljmp
xor
imul
pop
and
rcll
out
mov
cltd
cmp
fidivrs
and
mov
outsb
shr
xchg
push
cs
add
push
sbb
addb
inc
adc
cmp
fnstcw
testl
lcall
lcall
dec
xorl
std
sti
pop
xor
sbbb
lahf
jns
leave
xlat
test
inc
add
cmpxchg
push
push
and
dec
sbb
addl
test
pop
hlt
sti
mov
push
negl
pusha
hlt
jnp
out
xor
and
xor
insb
lods
or
xchg
and
mov
mov
aas
pop
mov
cmp
dec
cmp
mov
push
cli
loopne
push
pop
and
test
enter
cmc
jne
adc
xchg
xlat
pop
or
cwtl
xor
lret
test
mov
xor
jne
jbe
outsb
mov
mov
xor
cmp
cmp
cwtl
nop
add
stos
pop
dec
xor
adc
mov
mov
lcall
rclb
sub
and
gs
jp
imul
jecxz
jno
lods
out
ror
jnp
mov
jecxz
inc
adc
jl
lahf
mov
mov
mov
push
scas
push
movsb
dec
sbb
icebp
call
or
test
lret
xor
sbb
cld
ret
push
dec
mov
inc
outsb
sub
lock
call
jne
hlt
push
test
pop
out
mov
out
in
adc
cld
aam
sbb
into
stos
fidivl
in
push
mov
iret
in
cmp
lret
or
insb
mov
sub
mov
adc
and
push
sbb
cmp
test
mov
cmpsl
or
lcall
push
mov
push
js
rorl
or
es
movsl
lds
movsb
or
ret
imul
fsubr
int3
inc
hlt
arpl
cmpsl
dec
inc
rorb
xor
leave
lods
aam
xchg
movsb
mov
inc
pop
add
fisubrs
aad
mov
fcompl
adc
sti
lods
xor
or
jmp
mov
fwait
push
fwait
push
fldl
lret
int
lcall
stos
sbb
pop
xchg
mov
ss
add
sahf
in
dec
loop
test
mov
mov
idivl
xor
adc
cmpsl
mov
loopne
dec
mov
enter
add
xchg
mov
shll
rorb
and
sysexit
pop
adc
sub
sbb
push
dec
out
pop
push
lock
scas
inc
dec
add
pop
mov
cltd
push
push
push
rorl
xchg
fisubrl
fsub
imul
push
sbb
bound
addb
jmp
movsl
mov
push
das
dec
pop
sub
xchg
add
pop
cs
and
out
xchg
pop
adc
cmc
sbb
enter
pop
pop
pop
pop
jp
cmp
cmp
mov
in
dec
cmp
xchg
aas
das
mov
dec
addr16
jl
pop
mov
rsqrtps
mov
add
imul
lds
sbb
pushw
andb
shrl
rol
and
pop
movsl
sbb
xor
fs
ret
push
out
rcrb
pop
xor
pusha
mov
lcall
sub
out
les
call
lcall
movsl
sbb
popf
repz
mov
jno
movsl
xor
mov
inc
jb
rclb
adc
lret
xlat
sub
test
cmp
pop
add
mov
mov
pop
dec
popa
ds
daa
xchg
jecxz
mov
sub
pop
pop
push
mov
push
xchg
ds
mov
xchg
dec
jbe
call
dec
mov
sbb
sbbl
insb
setle
or
adc
dec
sti
inc
push
in
jle
lahf
ret
adc
xor
dec
imul
push
pop
push
vpsubsw
cs
mov
arpl
push
or
and
jecxz
jl,pt
jecxz
adc
push
aad
add
mov
or
push
xchg
inc
xlat
clc
mov
movsl
ja
inc
das
out
or
std
push
xchg
xchg
fsubrp
and
rcrl
stos
xlat
or
lods
stos
shll
dec
mov
dec
xor
rorb
addr16
sbb
lea
aam
sbb
jb
add
inc
mov
aaa
add
jg
lret
pop
jecxz
push
mov
push
mov
pop
push
movsb
stc
jmp
cmp
sub
rorb
push
adc
jecxz
xor
mov
dec
jnp
mov
or
adc
bound
mov
addr16
inc
xchg
or
jg
mov
arpl
jno
outsb
pushf
cmp
rcll
sbb
xchg
in
pop
add
out
pop
push
lock
lahf
jne
pusha
fisubs
jnp
pushf
adc
outsl
cmc
imul
rcl
test
push
xchg
test
popa
pop
xor
adc
mov
and
and
push
push
sahf
mov
das
pushf
fnstenv
cmp
push
add
fcoml
stc
sar
adc
movsl
mov
inc
sub
lods
imul
sti
xor
and
dec
xchg
jbe
iret
pop
int
fsubrl
mov
arpl
sub
push
div
push
mov
js
inc
aad
nop
xor
dec
push
pushl
leave
je
mov
in
inc
popf
or
cmp
sbb
aad
arpl
stc
sbb
cs
sbb
mov
jae
shlb
and
cltd
mov
bound
leave
testl
mov
repz
cmp
mov
gs
xor
xor
int
jae,pn
fwait
gs
inc
out
arpl
ret
cmp
in
scas
push
jecxz
pop
mov
dec
movsb
mov
mov
pop
arpl
cli
and
enter
dec
or
shrl
mov
mov
loope
cmc
jb
push
inc
and
js
pop
fistps
jle
neg
sbb
push
push
mov
push
cltd
inc
jle
shl
adc
cwtl
sub
incb
add
push
or
pop
add
cmp
mov
imul
mov
xchg
ja
and
faddp
roll
stos
dec
pop
sub
add
or
sub
mov
dec
popf
xchg
fwait
out
sbb
sbb
aaa
test
pushf
add
scas
dec
sbb
testb
sbb
dec
adc
fdivrl
push
or
test
ss
push
push
gs
sti
popf
clc
xchg
adc
imul
sub
in
dec
arpl
or
xchg
mov
mov
dec
and
cmp
rolb
xchg
les
lods
pop
mov
int
sbb
bound
fldl
insl
mov
jp
lods
and
das
pop
hlt
inc
pop
inc
or
out
popa
jecxz
pop
jmp
or
lock
push
xchg
in
sarb
imul
mov
cs
fwait
fs
outsb
rclb
rorl
clc
and
cmp
mov
mov
mov
lret
loopne
or
jmpw
icebp
shll
insl
outsl
adc
mov
sbb
test
je
cmpsb
out
repz
cmp
jnp
hlt
cmp
out
mov
xchg
scas
test
iret
test
les
rcrl
push
lock
cmp
xchg
mov
mov
and
movsl
or
add
sbb
pop
mov
adc
sahf
int
push
orw
lea
mov
mov
cmp
pop
pop
cmpsl
lds
leave
mov
push
mul
loopne
rcrb
xchg
icebp
push
es
std
mov
pop
xor
mov
outsl
cmpsb
mov
push
je
cli
sbb
out
push
hlt
ljmp
cmpsb
scas
xor
jno
dec
push
mov
jns
mov
jecxz
pop
sub
stc
xlat
lret
pop
mov
nop
mov
sti
mov
aas
daa
or
sub
cmp
stc
fsubr
cmp
push
push
shl
jge
add
dec
inc
mov
scas
xor
es
insl
rorb
cmc
imul
fildl
mov
imul
sbb
mov
xchg
loope
jae
mov
inc
in
cmp
inc
inc
shll
xor
inc
imull
or
jae
insb
sbb
cltd
nop
xchg
xchg
les
cmp
lods
jae
mov
lock
cmpsl
mov
mulb
jbe
decl
std
mov
pop
fwait
xchg
and
movsl
xchg
test
push
shr
inc
mov
sbb
jg
pop
mov
int3
imul
adc
dec
adc
movsb
mov
fnstenv
fs
fdiv
movsb
inc
sbb
xchg
cli
lahf
xor
rol
pop
jnp
inc
lret
fs
push
shrl
sbb
sbb
or
push
mov
and
loope
repz
push
rcrl
pop
cwtl
add
and
xchg
je
out
test
and
or
imulb
fbld
push
jno
enter
and
dec
xchg
cmp
xor
call
ja
in
lods
xlat
shl
xorb
rorl
loop
imul
pop
jg
mov
adc
sbb
cli
jle
and
fwait
xor
ret
jne
out
inc
push
sub
inc
movsl
sarl
movsb
mov
jg
xor
aad
test
push
sub
andb
sub
or
sbb
dec
insl
mov
jo
inc
jo
jbe
xchg
mov
addl
faddl
rcrb
aad
inc
sbb
add
inc
mov
lret
int
leave
fdivr
fisubs
addr16
xlat
das
lret
and
mov
ret
cli
lods
fdivs
shrb
fwait
ret
in
lods
adc
shr
fcomps
mov
jecxz
test
in
push
les
bnd
xchg
stc
out
push
cmpsb
outsl
xchg
pop
xor
inc
pop
testl
jmp
pop
xchg
cli
adc
je
lahf
fimull
jecxz
lcall
mov
adc
push
adc
xchg
ficoml
lret
outsl
jae
xlat
jge
dec
fdiv
jp
in
nop
inc
popf
cmc
dec
xor
xor
xor
filds
fwait
sbb
mov
jp
mov
ret
stos
inc
adc
sbb
cmp
stc
push
pop
cmpsb
pop
fcompl
scas
push
add
hlt
pop
int
fs
push
mov
inc
iret
xchg
dec
fsubs
add
imul
mov
push
ja
jge
xchg
enter
loopne
imul
stos
bound
adc
mov
fwait
dec
dec
add
pop
adc
cs
mov
shl
in
push
xchg
mov
repnz
inc
ja
outsl
inc
rcll
or
sub
in
inc
push
cmp
adc
and
dec
in
inc
sbb
sti
sbb
std
test
adc
test
lock
fldt
or
jno
das
or
add
push
pop
dec
xchg
jmp
add
test
mov
jp
imul
popa
rorl
pop
pop
fisttpl
pop
mov
fcmovnbe
push
push
test
dec
stos
aas
imul
lds
push
sub
pop
lea
je
imul
push
sbb
inc
sub
lahf
popa
clc
adc
cmp
sbb
push
daa
addr16
pop
dec
out
sarb
sub
ljmp
sbb
push
or
mov
ss
test
das
sbb
adc
xchg
mov
repnz
shll
push
test
sbb
cs
outsl
adc
jb
jg
out
mov
cmpsb
cmp
inc
jmp
pop
mulb
cmc
stos
mov
loope
nop
cmp
add
push
outsb
iret
cs
outsb
jmp
push
push
orb
addb
stc
outsl
gs
pop
mov
jg
shlb
pusha
pop
mov
pop
jge
jmp
faddl
sub
jecxz
gs
mov
pop
mov
fistl
iret
aas
ljmp
loop
add
std
divl
fdivrs
shll
push
cmp
xchg
jae
xchg
imull
pop
and
inc
push
addr16
lock
shr
and
inc
push
shrb
cs
pusha
adc
imul
cmc
xchg
and
divl
add
cmp
cmp
loopne
sbb
out
xchg
sub
pop
mov
mov
loope,pt
sub
xchg
xor
add
adc
outsl
cmpsl
jns
pop
pop
and
lock
xchg
and
push
stc
add
jae
cmp
inc
mov
movsb
scas
xor
fwait
inc
jno
cmp
pushf
sub
loop
adc
or
push
shrb
insb
xchg
rol
enter
jns
fidivs
mov
cwtl
popa
mov
mov
clc
inc
jo
mov
scas
mov
push
inc
xor
mov
mov
cs
mov
lods
push
sub
mov
int
sub
stos
repnz
mov
sbb
call
pop
adcb
add
push
mov
mov
popa
ror
adc
add
mov
fidivl
xor
lea
mov
sub
pop
pop
fcoml
inc
pusha
movsl
sbb
ret
scas
xchg
xchg
notb
sub
sbb
sbb
bound
add
int
adc
aaa
add
and
loope
add
mov
iret
xchg
sbb
mov
jl
gs
adc
enter
or
cmp
nop
shrb
dec
adc
setge
dec
adc
inc
mov
icebp
adcb
mov
or
sbb
cmpsb
xchg
push
adc
or
adc
cmp
adc
mov
call
jl
rclb
jmp
notl
xor
mov
ja
fistpll
add
mull
cmc
mov
push
scas
movsb
out
and
scas
test
pusha
xor
hlt
fisubl
stos
shl
mov
jb
xor
rorl
loope
movsb
mov
jge
mov
int
out
mov
fnstcw
fldt
pop
mov
movsb
jle
cmp
jp
cmp
pop
mov
das
stc
push
xchg
mov
outsb
cmp
stos
mov
cmc
push
sub
sub
xor
lea
and
scas
mov
jle
mov
stos
imulb
mov
or
rcll
inc
or
inc
sub
mov
jecxz
movsb
sub
push
rcl
cmpsb
lds
lahf
ljmp
xlat
xor
lds
xchg
stos
jb
push
mov
fwait
mov
inc
testb
mov
cmc
lds
daa
mov
fsubs
lret
mov
ror
pop
into
jae
jnp
lds
stc
out
jae
dec
dec
mov
cmc
mov
dec
dec
fsts
ss
xchg
sbb
mov
jbe
mov
fisubrs
stc
paddw
loope
mov
jg
negl
mov
jbe
mov
or
dec
into
sbb
clc
pop
mov
pop
repnz
adc
sbb
push
jo
cmp
enter
adc
icebp
scas
xor
movsb
mov
std
aam
sbb
mov
aas
cmp
cs
pop
stos
inc
xor
adc
leave
or
lahf
leave
mov
shll
jne
or
int3
cmp
jge
hlt
insb
jge
jb
mov
stos
jbe
add
xchg
repnz
cmp
repnz
inc
jo
iret
das
cs
push
pop
outsl
hlt
jbe
lock
cmp
bsf
push
sbb
adc
ret
ret
popa
cmpsl
pop
push
mov
add
sbbb
js
dec
or
jmp
mov
fistl
push
addr16
scas
mov
into
push
outsb
xlat
scas
cmp
into
aas
xchg
xchg
add
jo
ficoms
add
jl
addr16
mov
or
es
leave
jb
pushf
pop
ljmp
clc
movsl
inc
call
xor
pusha
add
mov
rcr
cmp
adc
inc
enter
dec
ds
stos
dec
popf
je
xor
shlb
lret
cmpsl
jae
inc
sarb
xor
sub
jae
pop
push
iret
jp
jne
jecxz
lahf
nop
push
pop
mov
mov
call
mov
aad
fisttpl
sub
mov
push
mov
mov
dec
mov
dec
aad
xchg
daa
repnz
test
cmp
iret
andl
rcrb
push
iretw
test
cmpsb
cmpsl
pushf
mov
lds
dec
shll
push
push
add
xor
mov
jb
sahf
sarb
mov
add
js
adc
jle
ja
jg
in
xor
aas
xor
push
pxor
ja
lea
xor
inc
or
mov
rcll
xchg
into
add
cmc
push
faddl
cmp
xchg
les
nopl
sbb
jp
xchg
xchg
or
cli
pop
mov
inc
sbb
inc
jecxz
es
mov
jae
pop
imulb
add
cli
xchg
in
stc
mov
xchg
mov
add
jne
fptan
lds
xchg
in
nop
mov
sbb
or
pushl
jo
push
add
jb
aas
adc
jmp
jne
lods
dec
aam
inc
pop
ret
mov
lea
mov
aam
call
adc
bnd
pop
addr16
dec
mov
and
jle
push
mov
adc
cmp
subb
or
mov
mov
mov
lret
xor
and
hlt
testb
arpl
push
rorb
fcoms
out
xor
sbb
pushf
jp
mov
aas
jns
xor
inc
dec
jmp
xchg
pop
xchg
cmc
mov
mov
into
rorl
cmp
imul
or
adc
std
push
cmpsl
push
and
in
xor
std
inc
fildl
xchg
inc
scas
das
cwtl
add
out
dec
jmp
bound
jae
jge
pop
cmpl
push
in
stos
outsb
mov
mov
xchg
mov
dec
lea
test
sbb
cwtl
jnp
mov
cld
loopne
je
mov
cltd
aaa
sti
xchg
xor
add
push
shl
xchg
sub
addr16
imul
pop
sub
in
xchg
pop
mov
rolb
iret
pop
mov
push
and
fisubrs
cmp
xor
push
and
js
inc
xchg
mov
out
aas
add
add
movsb
in
adc
dec
push
inc
adc
inc
js
xchg
and
out
iret
push
or
sbb
rclb
pop
inc
repz
dec
inc
call
mov
adc
and
push
popa
inc
fnstcw
mov
or
iret
adc
repz
movsb
mov
inc
neg
pop
sbb
push
bts
loope
shll
push
cli
dec
push
sub
andl
jecxz
andl
mov
sub
xchg
insl
mov
jle
sbb
imul
negb
cmpl
imul
mov
push
sbb
inc
xor
add
jne
cmpsl
jecxz
jp
imull
or
pop
cld
pop
pushf
jns
fs
lock
cmp
sub
push
repz
pop
inc
loop
xchg
add
lcall
cmpsl
pushf
fldl
popa
push
pop
cld
sub
sbb
fcoml
adc
imul
sti
or
inc
xor
inc
inc
mov
add
movsb
or
jp
mov
aas
cs
mov
cmp
jge
fsubrp
std
rcr
push
push
push
cwtl
mov
or
pop
stc
mov
mov
sbb
mov
decb
ret
inc
sbb
out
or
inc
subb
lods
and
add
xchg
adc
mov
mov
and
stos
dec
out
xchg
push
aas
sbb
dec
cmova
push
imull
mov
gs
dec
sbb
inc
or
test
js
jl
arpl
dec
and
jno
push
aam
xchg
hlt
add
cmp
rdtsc
dec
mov
rol
mov
imul
stos
mov
cmp
inc
mov
inc
outsl
cli
enter
sbb
jno
push
pop
mov
add
mov
addr16
incb
adc
aad
clc
push
fcomps
xor
shl
mov
enter
xchg
orb
fld1
pop
pop
in
sub
test
lods
lea
xchg
sbb
aaa
fimull
lea
cmp
into
imul
xor
outsb
mov
aam
adc
and
stc
out
xchg
mov
push
leave
pop
pusha
js
add
adc
dec
hlt
adc
arpl
or
pop
xor
xchg
jne
fbstp
dec
testb
cmp
add
jp
xlat
cmpsb
popf
mov
orl
adc
adc
xlat
lret
std
fdivs
nopl
test
daa
cmovnp
xchg
scas
andl
jle
popf
inc
sub
and
pushf
pop
dec
xorb
repnz
fld
insl
cmc
mov
jb
xchg
dec
or
and
or
cmp
stos
mov
push
cmpsl
lcall
addr16
jo
out
fucomip
mov
pop
dec
ljmp
shlb
call
xchg
mov
aas
inc
pop
popf
fld
xchg
xor
out
sbb
ret
push
lock
fldl
sbb
faddl
mov
adc
cmpsb
pop
lods
flds
sub
add
out
jnp
filds
mov
repnz
test
or
stc
hlt
jne
adc
jo
js
xor
sbb
mov
mov
sub
jns
das
cltd
inc
sbb
jle
or
sub
cmpsl
xchg
gs
jbe
inc
fisubl
add
mov
test
xor
clc
xorb
jge
push
xchg
pushf
mul
adc
jno
dec
jp
repz
mov
mov
jmp
cli
scas
pop
xchg
ret
iret
lock
and
and
ljmp
mov
and
lcall
xor
andb
cmp
sbb
xlat
cltd
ss
jge
cmp
int3
jno
mov
jo
sub
rclb
xor
xchg
xchg
push
jno
test
ss
mov
imul
add
and
ret
fbld
adc
xlat
sbb
hlt
adc
mov
ljmp
dec
inc
fs
dec
test
xor
pop
sbb
les
popf
xor
aaa
adc
pop
xor
xchg
mov
mov
pop
mov
loopne
popf
dec
jge
mov
sar
sub
inc
aad
ret
pusha
ret
add
pop
mov
les
mov
cld
mov
jmp
xchg
repz
insl
mov
movsl
add
sbb
loope
rclb
rcll
and
mov
mov
push
enter
mov
pusha
mov
stc
mov
ja
out
js
arpl
in
pusha
pop
mov
rcr
or
imul
cli
push
iret
dec
jg
lahf
xor
xor
jl
in
das
scas
inc
add
sbbb
mov
and
adc
cmp
ficomps
push
cmp
sarb
imul
lods
xchg
cltd
pushf
or
arpl
scas
adc
add
sbb
sub
ficoms
mov
lea
mov
les
cmpsb
jne
iret
push
data16
mov
je
pop
test
lret
je
xchg
std
insl
jno
subb
pop
pop
xchg
loop
sbb
shlb
and
out
mov
pmaddwd
inc
push
gs
and
call
pusha
js
ret
outsb
scas
jle
or
ss
insb
sbb
add
sarl
pop
loop
jb
call
adc
ss
cmp
leave
add
xchg
push
cld
xor
fisubl
test
lcall
mov
aad
loop
or
outsb
stos
fbld
subl
xor
cmp
mov
pop
test
xor
push
gs
popa
and
ror
xor
inc
idivl
mov
sbb
mov
imul
je
jno
add
sbb
mov
inc
cmp
aad
dec
fdiv
add
push
mov
mov
ret
xlat
push
mov
inc
jb
push
cmpsb
xor
mov
mov
andl
mov
lea
push
out
lods
fsubs
mov
in
mov
jmp
add
gs
sbb
mov
pop
repnz
rol
mov
push
js
or
and
jbe
movsb
leave
mov
jl
negl
loope
clc
cmpb
mov
jns
fwait
je
and
ret
xchg
add
adc
rcrl
popl
pop
ret
add
sbb
dec
mov
fbld
mov
jno
rolb
fwait
pop
push
cli
dec
fistpl
movsb
inc
lret
xchg
mov
insb
xor
gs
dec
inc
xchg
cltd
sbb
adc
scas
in
push
dec
outsl
out
jo
sarl
push
mov
xchg
add
shll
in
xor
sbb
sbb
jle
jo
mov
add
jmp
cmp
aam
sub
inc
jp
test
or
les
sub
mov
call
add
pop
data16
mov
mov
fidivrs
and
pop
stos
mov
cwtl
pop
cmpsl
or
and
scas
mov
scas
cmc
movsb
jg
inc
aaa
mov
test
add
jp
inc
jns
jnp
sbb
imul
push
imul
clc
mov
cltd
mov
aas
cmpsl
mov
js
mov
jbe
ljmp
call
repz
xor
nop
xchg
int
gs
dec
ss
out
and
mov
or
inc
jecxz
nop
sarb
pop
lea
movsb
xchg
or
cld
mov
sbb
ret
and
dec
mov
std
sub
addr16
adcl
pop
mov
pop
jno
mov
lds
sti
cmp
dec
cmp
push
jge
mov
int3
xor
out
sub
cmpsb
iret
lea
fs
fwait
xchg
xchg
push
mov
fldenv
xchg
scas
stos
repz
fidivs
xor
adc
dec
mov
cmp
xorl
mov
jg
xchg
xchg
jg
rcll
aas
repz
shrb
or
pop
or
or
push
sbb
mov
fbld
mov
push
gs
stos
mov
cmp
mov
pop
sahf
repnz
call
in
dec
outsl
mov
ret
rcrb
mov
mov
cmp
mov
push
sub
ja
push
pusha
pop
mov
negl
xor
pop
stos
cld
xor
lods
daa
mov
fsub
and
xor
xchg
push
fstpt
xchg
into
mov
arpl
dec
adc
sbb
fwait
cmp
pop
cmpsl
xor
movsb
inc
test
adc
mov
and
test
mov
pop
inc
xchg
fwait
bound
xchg
outsb
pop
mov
sub
testb
sbb
loope
cmpsl
imul
sub
xchg
xor
jge
cmp
repz
movsb
adc
fstps
fsubrs
push
punpckhwd
add
cwtl
out
aad
sbb
jnp
pop
fidivl
les
mov
push
xor
push
mov
mov
or
lret
pop
xchg
int3
clc
inc
jecxz
push
pop
lods
cltd
jns
popf
add
call
sub
scas
sbb
insb
sub
pop
outsl
je
sahf
jge
and
push
in
insb
mov
xchg
xchg
hlt
cmp
sbb
movb
testb
add
cmp
ljmp
xor
loopne
mov
and
sub
mov
pop
pop
loope
and
inc
lret
test
jno
rcrl
in
sub
or
lahf
lcall
or
lret
dec
xchg
dec
shrb
pop
mov
les
mov
push
sub
mov
dec
fdivl
out
int
inc
mov
les
cltd
cmp
cmp
or
in
mov
jns
push
xchg
arpl
dec
enter
rorb
sub
repz
popf
loopne
outsl
pop
push
fisubrs
pop
pop
or
outsb
dec
pop
in
lea
mov
mov
jb
outsl
add
ljmp
and
cs
fdivrl
jle
loope
dec
pop
inc
out
add
pusha
int3
mov
enter
les
enter
inc
aam
lds
sbbl
pop
pop
js
out
pcmpgtb
xchg
sahf
das
or
push
cs
mov
push
pop
out
mov
dec
mov
add
arpl
hlt
push
movsb
lret
sbb
pop
std
in
xchg
js
push
cmpsb
adc
jne
fs
int
mov
and
rclb
jns
shrl
pop
idivb
shr
xchg
xor
adc
insl
inc
cwtl
in
out
push
es
inc
arpl
test
mov
mov
sbb
stos
aad
sbb
pushl
out
in
xor
je
xchg
arpl
lods
dec
popw
popa
mov
inc
dec
aad
cwtl
push
aad
outsb
mov
neg
pop
add
push
lock
imul
icebp
lods
sub
and
ss
inc
cmp
push
rclb
push
call
popf
xchg
jmp
push
inc
and
add
jae
adc
sub
mov
dec
or
addr16
ss
cli
cmp
movsb
sarl
mov
lcall
xlat
adc
jp
pop
xchg
das
push
out
popfw
push
lahf
mov
jmp
mov
dec
mov
cli
adc
adc
cmp
es
inc
pop
leave
jns
outsb
cmp
xor
dec
xchg
or
fsqrt
popf
jmp
aad
cli
or
or
ret
xchg
ret
inc
lcall
jb
adc
cld
mov
jb
push
mov
cwtl
jb
xor
lock
dec
stos
data16
add
push
mov
cmp
cmc
jmp
lea
clc
and
add
jp
jge
mov
mov
insb
jl
sarb
lods
or
sbb
out
cmp
faddl
add
push
fs
repnz
lahf
incb
jg
xchg
pop
dec
pop
push
out
sahf
mov
sbb
negl
fs
rol
outsb
shlb
xor
and
lock
inc
jae
xorb
imulb
popa
mov
cld
inc
dec
mov
dec
leave
inc
adc
cmp
or
or
xchg
loopne
dec
gs
jo
mov
dec
xchg
sti
inc
push
cmpsl
loope
mov
jb
cmp
daa
loopne
mov
das
pushf
add
xor
jp
mov
lds
pop
and
ror
cli
jns
addr16
push
push
sbb
mov
sub
xchg
cmpsb
inc
fnstcw
jp
ss
push
and
stc
lods
xchg
fdivr
xchg
and
decl
pop
nop
push
fldcw
pop
out
mov
ljmp
std
js
pushf
lods
pop
push
cmc
out
ds
adcb
push
jg
inc
out
aas
adc
pop
adc
pusha
sar
xor
mov
and
dec
inc
lods
mov
mov
int
sbb
ljmp
dec
jno
aam
lds
inc
sbb
call
es
sub
dec
xor
mov
mov
fiadds
je
stos
inc
fnstsw
loop
inc
xor
pop
adc
dec
jb
loopne
cmp
pop
inc
and
stos
xor
fwait
mov
mov
loope
addr16
jb
or
imul
ret
and
ror
inc
adc
lods
cli
inc
xchg
pop
xor
insb
push
shrl
cmp
lock
pop
mov
dec
jb
ja
jmp
arpl
pop
movsb
lret
jnp
and
cwtl
ret
fisttpll
incb
cli
testl
in
xchg
add
mov
sbb
and
popa
mov
cmp
dec
aas
cmpsl
imul
dec
inc
xor
pop
sub
sub
es
cmpsb
mov
push
inc
sbb
xorl
cmp
sahf
push
pop
pop
call
not
jne
repnz
and
sti
mov
pop
xchg
cmc
jns
mov
cs
ja
push
lds
js
lret
bound
pop
pop
cmp
loop
out
movsb
call
xor
test
lods
cmpsb
negl
insb
cmp
ficoms
mov
daa
xchg
in
mov
scas
mov
pop
jb
or
xchg
repnz
in
dec
sub
testb
dec
jo
mov
cwtl
movsb
outsl
mov
int3
data16
and
inc
lods
stos
push
xor
xchg
jns
adc
insl
dec
lret
leave
clc
stos
pop
movsl
ss
sub
insl
scas
pop
scas
pop
pop
ss
dec
adc
stc
subb
lret
leave
out
mov
out
xlat
push
xchg
push
je
movsb
push
or
outsb
inc
call
inc
dec
jg
int
stos
fisubl
movsl
mov
adc
pushf
push
loope
out
les
add
loope
cmpsb
push
insb
cmp
jg
idivl
bound
sbb
or
sbb
movsl
inc
popf
outsb
mov
dec
jb
dec
js
cmp
fisttpll
and
nop
push
insb
cmp
push
jno
add
int3
cli
addb
loopne
outsb
xlat
rep
xor
std
xor
scas
push
xchg
lods
mov
pop
cmp
cwtl
sub
push
arpl
dec
push
jge
das
insb
cli
pop
add
clc
add
pop
scas
push
or
out
lock
sbb
aam
jae
and
js
mov
pop
cmpsl
mov
and
inc
subl
inc
xor
cmp
divb
push
mov
add
jno
pop
mov
jmp
sti
jo
ds
push
lret
inc
imul
je
js
cmp
aaa
push
sbb
movsl
sub
test
jae
and
jg
lret
xor
pop
dec
xor
out
addr16
jg
and
or
out
sub
mov
shlb
xchg
imul
mov
cmp
pop
xor
mov
add
aas
add
fiaddl
jg
adc
and
inc
bound
cs
lods
test
in
jg
or
inc
mov
fildl
mov
mov
shlb
mov
adc
and
jle
cmpsb
sbb
push
cwtl
fildl
test
je
std
mov
mov
jl
or
adc
pop
push
jnp
loope
xor
je
lods
mov
es
outsb
vpcmpgtb
mov
or
or
imul
dec
jbe
cmpsb
xor
orb
mov
ret
test
pop
pop
push
xor
xor
cmc
fwait
movsl
lds
emms
mov
fcomps
test
sbb
scas
inc
cmp
add
fiadds
xchg
sbb
pop
mov
test
xchg
sub
mov
jmp
cwtl
cmp
fidivrl
mov
lea
bound
call
lods
pop
mov
adcb
popa
mov
aaa
daa
mov
test
loopne
repnz
lock
jge
push
inc
mov
mov
jns
aaa
xor
daa
jp
cmp
mov
es
lea
cmp
mov
or
das
dec
push
andb
int
std
xor
shlb
inc
push
xor
shll
inc
jo
add
and
lcall
cwtl
daa
xchg
jo
jmp
and
lahf
xor
fstps
pop
int
popf
ds
je
imul
mov
xchg
out
mov
inc
insb
ret
mov
daa
repz
movsb
sub
imull
sbb
leave
fcomip
mov
xchg
or
push
movl
mov
subb
jnp
dec
js
arpl
xor
imul
imul
in
xchg
xor
test
push
push
les
and
xor
jns
mov
scas
mov
sub
add
cltd
jne
push
mov
aam
gs
fwait
aas
jecxz
mov
add
popa
je
dec
push
mov
pop
lret
jnp
cs
das
dec
aam
lods
and
pop
xchg
ljmp
pop
sub
adc
cltd
push
xor
int
or
das
mov
sbb
mov
inc
sub
data16
pop
xchg
fmulp
jbe
push
inc
mov
add
jno
mov
sub
sbb
shrl
jg
cltd
sub
nop
cld
dec
lahf
jmp
jb
adc
movsb
push
mov
dec
inc
cmp
scas
inc
rcrl
nopl
xor
add
std
cmp
mov
pushf
insl
stos
push
cmpsl
pop
iret
mov
or
lock
add
out
das
cmp
xorb
enter
movsb
repnz
insl
loop
sub
ja
pop
enter
mov
pop
xor
sbb
imul
ror
mov
loope
jae
addr16
aam
std
jg
add
jl
ret
outsb
aas
add
jmp
cmp
andb
mov
cmpsb
pop
xchg
dec
lods
mov
enter
std
lods
xchg
cmp
loope
jno
notl
sbbb
mov
dec
out
mov
pop
jns
mov
mov
movl
dec
lods
adc
fsubs
add
repnz
movsl
pushf
pop
ret
push
repnz
fdivrl
lock
in
das
sbb
lret
movsb
adc
addr16
jg
lds
loop
imul
mov
sub
fcoml
cmpsb
mov
test
xchg
scas
shl
mov
sub
mov
jnp
push
icebp
and
jmp
daa
adc
add
nop
pop
rcl
pop
mov
bound
testl
cld
mov
push
insb
fisttpl
dec
cmpsl
mov
xchg
pmullw
and
sub
imul
xchg
add
stc
je
sahf
outsl
or
mov
in
mov
ljmp
int3
mov
xchg
sub
jne
mov
sbb
fimull
sub
loopne
mov
clc
and
jae
add
fdivl
push
es
lds
popf
lock
sbb
jmp
and
add
xchg
jb
clc
jge
cli
cmc
sbb
nop
mov
pushf
fwait
shrl
mov
dec
fs
push
jge
gs
fs
call
jmp
adc
test
ret
addr16
lcall
inc
lods
ds
ficompl
stos
mov
and
mov
sub
fildl
mov
pop
sbb
dec
dec
pop
roll
mov
or
mov
jb
mov
in
imul
fnsave
fistl
cltd
pop
mov
ss
ss
leave
pop
push
jmp
outsb
testb
pop
movsl
pushf
jne
add
lret
cmp
lea
lea
xor
insl
sub
inc
add
test
mov
jle
clc
mov
mov
negb
push
mov
leave
cmp
cmpl
and
jge
xor
inc
fldt
sbbl
pusha
sub
in
loope
enter
adc
dec
insl
mov
sub
or
jne
mov
popf
mov
lods
mov
xorl
outsl
loopne
cmp
inc
leave
dec
dec
jg
mov
cwtl
mov
loop
pop
and
shl
leave
pop
lahf
dec
or
inc
xchg
or
or
pop
fisubl
scas
mov
pop
push
or
dec
icebp
sbbl
incb
push
int3
enter
mov
repnz
pop
sub
pop
lods
fdiv
sarb
mov
push
lea
dec
mov
fisttpl
pop
leave
add
mov
in
cmpsl
jno
fs
xor
cmpsb
sbb
pop
cmp
adc
das
mul
cmpsl
lods
mov
dec
fwait
addr16
or
jno
mov
push
pop
ss
andb
test
cld
adc
frstor
adc
call
scas
cmc
fidivs
rorl
je
ret
jp
xchg
sbb
fistps
sub
mov
and
addl
dec
sbb
add
sahf
push
or
sub
cmp
cmp
hlt
xor
or
push
cmp
mov
cltd
mov
pop
adc
daa
fs
pop
push
lds
cmp
jmp
mov
and
lock
mov
cwtl
and
mov
jmp
xor
add
adc
mulb
jno
xor
inc
mov
mov
jae
jns
xchg
inc
pop
ljmp
push
in
call
pop
sbb
rorb
add
jbe
lds
es
xchg
inc
test
scas
lret
mov
movsb
add
ficoml
inc
pusha
adc
dec
enter
jae
sub
dec
mov
aam
fidivrs
dec
jbe
nop
fisttpll
scas
loopne
xchg
scas
dec
dec
cmp
lahf
lea
call
test
push
sti
fistpl
subl
mov
insb
inc
pop
scas
movsb
fildll
int
std
icebp
sub
cli
imul
jns
loopne
push
cmp
lods
ret
in
mov
mov
add
loope
push
lods
test
sti
or
or
lret
dec
ret
in
pop
inc
sbb
sar
cmp
gs
xchg
xchg
add
es
testb
jecxz
js
int3
pop
jecxz
sub
outsl
add
stos
xchg
pop
outsl
or
rorl
leave
mov
mov
lcall
cmp
lahf
jno
testl
mov
sbb
push
adc
sar
fiaddl
dec
mov
stc
inc
cs
ret
inc
pop
push
mov
xor
push
mov
mov
jb
std
pop
adc
imul
loopne
push
xchg
aaa
push
inc
push
sbb
push
cmp
xor
lods
add
sub
sub
push
dec
out
repz
jne
addr16
outsb
cmc
mov
xchg
outsl
dec
pop
out
mov
test
test
stos
or
fidivrl
out
hlt
adc
add
sahf
movsl
subl
and
inc
jbe
cmp
ja
stos
push
inc
cmp
pusha
inc
lods
xchg
aas
lods
jecxz
jmp
mov
and
jmp
jmp
and
jne
test
mov
data16
mov
out
pop
xchg
jo
loopne
sub
stos
cld
mov
jl
dec
loope
sub
sbb
outsb
lds
mov
fs
das
fldt
inc
lds
leave
jecxz
into
in
ds
xor
xor
dec
test
insl
xor
mov
pushw
cltd
ret
adc
mov
arpl
sub
fbld
xchg
sbbb
cmpsb
or
sub
lret
push
icebp
push
test
loopne
jns
mov
sbb
jge
jns
test
je
or
adc
xor
push
push
stos
test
repz
jno
jb
cli
jp
push
sarb
out
loop
jp
aam
movsl
dec
repz
mov
mov
sbb
cmp
fildl
push
dec
out
in
cmp
inc
add
test
jge
mov
mov
cld
jg
pop
sub
leave
out
in
push
ja
cld
pop
loop,pn
jp
pop
mov
out
sbb
sbb
pop
dec
out
popa
aad
stc
aas
and
cmp
scas
sbb
orb
inc
sub
xlat
xchg
imul
inc
insb
or
mov
adc
notl
mov
mov
out
mov
decl
adc
xor
sub
inc
js
stos
sbb
in
rorl
sahf
inc
mov
add
mov
inc
and
in
inc
pinsrw
outsb
popl
rcrb
cmp
sub
mov
aaa
cltd
mov
jo
jne
sahf
loopne
mov
js
pop
icebp
dec
cmp
shlb
adc
lds
flds
pop
adc
inc
stos
js
add
ret
gs
shll
imul
jmp
dec
enter
hlt
xchg
mov
mov
mov
dec
scas
or
push
push
xsavec
mov
fsubrs
push
mov
mov
and
insl
es
xor
jmp
push
inc
xorl
andb
ret
pop
scas
xchg
fdivrl
mov
sub
ss
xor
roll
jg
xchg
add
dec
ds
add
cmpsl
sbb
enter
cmp
xchg
sub
pop
insl
fnstcw
sub
cmp
xchg
test
inc
out
sbb
movswl
das
lret
mov
xchg
xchg
pop
gs
xor
sbbb
cmp
stc
push
enter
sahf
sub
mov
je,pn
repnz
mov
mov
cmp
jae
rol
ja
sti
mov
xchg
mov
push
pop
stos
jle
pop
outsl
inc
sub
dec
xor
negb
xchg
push
jne
mov
je
jecxz
and
and
sbb
or
test
cmc
sti
scas
in
xchg
jbe
adc
cwtl
or
pop
and
addr16
aam
and
and
lret
popf
xchg
cmpsl
mov
add
movl
adc
xchg
inc
mov
test
adc
or
xchg
mov
cmp
push
xor
push
loop
incb
push
in
sub
mov
cmc
jle
xor
push
jne
mov
nop
mov
push
rclb
fwait
or
out
adc
xorl
xchg
and
dec
push
int
movsb
aad
lock
pop
pop
outsl
dec
shlb
rolb
dec
loope
dec
jge
jecxz
add
sub
fcompl
inc
dec
xor
fcomps
js
cmpb
js
aam
divb
lcall
js
test
or
mov
hlt
insb
pop
pop
xor
mov
pop
dec
lods
mov
push
btr
sbbl
mov
jmp
inc
mov
xchg
loope
cmpsb
adc
or
mov
out
mov
pop
mov
sub
fwait
aas
pusha
ja
repnz
adc
push
hlt
mov
neg
mov
adc
js
inc
decb
dec
mulb
cmpsl
mov
add
mov
fwait
jb
pop
std
js
lock
out
cmp
mov
or
pop
pop
sarl
adc
nop
outsl
jg
ret
mov
outsb
sbb
xchg
sbb
mov
jl
xor
bswap
sti
mov
xor
repz
mov
gs
xor
fs
int
xchg
push
enter
pop
adc
mov
ret
mov
push
int
or
mov
or
jne
push
pop
outsl
xor
out
bound
rorl
jns
in
mov
aad
and
cmp
jg
push
out
mov
sub
lahf
ret
mov
fmul
cmc
imul
add
pop
scas
fisubl
stc
dec
sub
or
jb
lret
sbb
arpl
push
cmp
mov
ds
icebp
mov
jg
push
mov
fs
clc
mov
xor
pop
xchg
les
xor
jg
xor
adc
push
cmp
cmp
mov
test
je
call
xchg
push
je
dec
pop
xchg
and
ret
daa
lods
jl,pt
or
call
inc
jmp
mov
movsl
jnp
cli
xor
out
cli
lcall
pop
pop
inc
pop
test
enter
pop
or
or
or
clc
and
daa
cmp
or
add
jle
mov
cs
rcr
mov
into
mov
xor
mov
pop
add
ds
jo
dec
cmp
leave
pusha
xchg
sbb
mov
pop
jge
jns
clc
std
inc
mov
push
or
repnz
xchg
fdiv
mov
std
xor
xchg
xor
inc
jns
jmp
push
push
xchg
add
pop
js
cmpsb
pop
shlb
fisubl
xchg
pop
cs
jo
loop
pop
enter
into
xchg
jno
test
push
add
add
lret
cli
fists
dec
adc
iret
lret
incb
outsb
cltd
lds
pop
mov
insb
stos
mov
movsb
fs
imul
push
mov
leave
pop
sbb
and
push
subl
xchg
inc
jge
xor
gs
es
adc
lfs
pop
jns
cmp
loop
scas
xor
jnp
nop
loop
push
xor
add
testl
push
dec
and
mov
xchg
in
stos
lahf
dec
iret
mov
test
xor
popa
andb
mov
dec
pop
out
jo
jae
jecxz
jmp
movsl
mov
dec
push
lahf
xor
aam
cmp
push
call
cmp
xor
adcb
jae
cmpl
push
popf
xchg
hlt
bnd
ror
call
mov
cmp
psubsb
jp
stc
inc
shlb
inc
daa
cltd
mov
fildl
js
lar
cmp
lea
jp
into
mov
push
sahf
jl
sarl
jge
mov
jmp
das
fimull
or
xor
test
mov
cs
and
jge
fstl
shll
jb
fiaddl
loopne
shll
inc
incb
movsl
mov
push
inc
shlw
in
or
enter
inc
jnp
popa
push
es
inc
out
sub
xor
loop
or
sub
mov
push
sub
sub
sti
loope
rcll
inc
and
lret
mov
xor
jecxz
into
lods
mov
scas
xchg
rorb
jo
mov
xor
ljmp
repz
dec
mov
sub
jge
and
adc
push
shrb
sbb
mov
xchg
arpl
cmpsb
shrl
sbb
stos
cwtl
and
sti
cmp
push
andb
shll
fildll
add
jl
add
sub
cs
jno
jo
aaa
push
jbe
xchg
or
or
pusha
dec
push
rcrl
xlat
xchg
dec
mov
push
pop
stc
clc
fwait
sarb
jb
cmpb
scas
and
rorl
popf
lds
out
mov
dec
push
cmp
loopne
in
mov
pop
les
mov
mov
in
std
les
jle
mov
shr
xchg
mov
pop
test
jno
push
mov
xchg
push
out
xor
push
test
pop
loopne
xlat
or
xchg
push
loopne
pop
mov
jb
adc
add
fwait
xor
and
scas
jmp
fpatan
jge
arpl
pop
cmp
jmp
push
jg
mov
or
sbb
sub
fiadds
mov
or
adc
jl
push
ss
push
xchg
ret
pop
push
pop
sbb
ret
xchg
cmpsl
out
and
and
data16
pop
push
shll
sti
imul
lods
sbb
push
leave
xor
xchg
rcrl
test
mov
cli
push
push
test
data16
in
mov
sbb
fbstp
and
lcall
cltd
mov
inc
mov
add
pop
pop
or
int3
pop
pop
push
arpl
cmp
scas
out
popa
fwait
adc
adcb
int3
xor
jl
int
popf
lahf
fldcw
addb
loop
movsl
test
pop
ljmp
xor
push
dec
jno
gs
add
outsl
sahf
xchg
inc
imul
sbb
std
fnstsw
fildll
jge
int3
jb
and
out
add
jecxz
lods
cmpsl
or
jbe
or
aas
pminsw
cmpsb
dec
pop
inc
and
jecxz
mov
imul
stc
xchg
and
push
jo
xor
les
adc
scas
pop
stc
mov
daa
mov
movsb
adc
push
fcomip
das
push
xor
js
adc
mov
ljmp
inc
inc
aaa
dec
icebp
mov
test
jmp
cmp
out
lret
call
push
sub
jle
adc
icebp
jle
mov
jnp
mov
xor
push
xchg
int3
lea
adc
lock
sub
xlat
jne
push
jg
xchg
mov
pop
mov
add
dec
or
adc
inc
decl
enter
fistps
arpl
cli
xchg
loopne
mov
xchg
inc
lock
cmpsb
inc
stos
loop
insl
push
aas
jp
sub
fmull
fbld
xchg
cli
imulb
jmp
push
popf
jle
in
xchg
rclb
gs
rolb
push
inc
and
sbb
inc
inc
and
cmpsl
jns
test
pop
insb
out
sbb
out
sub
stos
jle
pop
dec
movsb
repz
mov
popa
push
ss
add
outsb
bts
ret
inc
subb
clc
pop
je
mov
pop
mov
mov
in
dec
cli
pop
xchg
out
pop
cmpsl
jne
aaa
int
mov
lock
push
pop
addb
push
jmp
gs
cli
es
cmp
xchg
jnp
sub
ret
lds
xchg
pushf
pop
data16
push
sbb
in
mov
shlb
push
lds
jns
das
mov
cltd
adc
pushf
addr16
ret
leave
mov
jg
sahf
fsubrs
push
jg
sar
mov
push
pop
inc
sbb
fs
in
mov
leave
cmpsl
enter
js
movb
inc
xchg
icebp
push
shll
stos
and
push
sahf
inc
sbb
dec
inc
xchg
push
shlb
sti
inc
jns
pop
cwtl
repnz
aam
adc
mov
lahf
jno
and
in
aaa
cltd
push
in
jns
dec
lods
adc
xor
dec
and
push
dec
xor
and
add
cmp
xor
aas
mov
cmpsl
mov
imul
jecxz
mov
xor
les
enter
and
imul
out
jmp
dec
pop
pop
ljmp
fwait
decl
sbb
pop
rep
idivb
js
sub
push
inc
mov
xor
cmpsl
or
jl
add
or
out
pushf
add
inc
jmp
arpl
mov
sub
jl
mov
sti
mov
dec
or
repnz
push
inc
movsl
jl
lock
shll
xchg
inc
idivb
pop
es
or
ss
lds
jmp
adc
dec
cmp
cmp
cli
mov
mov
mov
loop
pop
negl
xor
sbb
mov
das
out
pop
fs
pushf
out
ljmp
jge
lea
in
mov
stc
sti
jmp
sub
mov
add
sub
imul
ret
push
push
mov
ss
dec
and
add
outsl
adc
fmull
cltd
orb
push
lods
adc
xchg
js
mov
loope
sbb
std
sub
test
mov
and
adc
repz
sbb
add
mov
xchg
inc
jle
pushf
cmp
adc
add
shll
sub
cltd
inc
lock
loop
je
cmp
out
push
lds
pop
in
add
mov
dec
fadds
mov
lods
mov
loop
add
cmpsl
lock
cmp
dec
idivb
cmpsb
or
dec
ljmp
es
add
out
add
leave
lock
icebp
add
push
xorb
rol
adc
jmp
xlat
pop
push
cltd
int
lret
jl
sbb
jmp
sarb
loop
adc
pop
and
fsubr
mov
jne
xchg
sub
add
push
lret
jno
in
inc
pop
cmp
addr16
add
cmc
inc
clc
jbe
pushf
mov
dec
sub
dec
and
hlt
clc
ss
add
outsl
jo
sti
or
subb
and
push
scas
fdivrs
and
fwait
std
jne
xor
iret
adc
xchg
mov
xor
sub
rcl
xor
mov
pushf
testl
cld
data16
subb
inc
add
test
push
das
out
cwtl
sub
mov
pop
push
scas
and
sub
ret
sbb
and
adc
fwait
pop
push
pop
scas
nop
push
mov
loopne
cli
out
sbb
stc
ljmp
out
pop
push
into
gs
imul
clc
into
incb
xchg
xchg
stos
pop
andb
add
push
call
les
mov
mov
adc
pop
fnstcw
lret
test
mov
jo
cmpsl
das
mov
lcall
leave
subl
cmp
mov
stc
fwait
dec
inc
mov
outsb
xchg
mov
repnz
test
sbb
push
or
mov
and
pop
adc
xchg
sbb
mov
and
int
ljmp
fs
mov
inc
push
sub
jb
push
insl
push
mov
fldl
insb
fisttps
test
mov
inc
add
js
push
popf
pop
pop
cwtl
filds
dec
cmp
call
movsb
jmp
jbe
je
call
out
cmpsb
pop
fwait
add
mov
decb
pop
mov
xlat
jl
mov
cmp
mov
ret
mov
or
jo
insb
inc
decb
pop
gs
std
mov
pop
xor
mov
mov
mov
cmp
mov
xlat
xchg
inc
shll
jecxz
outsl
and
lods
arpl
mov
mov
push
roll
mov
pop
xor
push
mov
ljmp
cmpl
push
jae
push
call
aaa
loop
scas
movsl
lcall
dec
out
xchg
dec
jle
aas
out
jo
xlat
mov
mov
adc
dec
mov
test
hlt
fwait
add
movsl
sbb
pop
popf
jle
add
mov
mov
mov
ss
aaa
push
mov
popa
xchg
xchg
mov
pop
pop
jne
sbb
or
jbe
fidivrs
aad
in
jecxz
xor
adcl
add
fcoms
mov
ds
mov
test
cmpsl
call
popa
cltd
ss
stos
and
and
fldt
xchg
sub
and
lahf
test
sub
nop
and
stc
cmp
sub
sub
dec
scas
je
lds
xor
shrl
in
add
cwtl
push
out
sbbl
sub
nop
xor
ljmp
fs
or
fbstp
xchg
testb
add
scas
loop
movsl
mov
movsl
push
add
cmp
stos
mov
push
dec
cmc
xchg
leave
imul
popf
icebp
jecxz
mov
repnz
fcomp
inc
pop
or
sbb
pusha
in
push
dec
mov
xor
ljmp
sbb
xorl
int3
ja
xchg
inc
jge
aas
xchg
or
sbb
sbb
or
xchg
push
clc
mov
ss
popl
out
icebp
lahf
lar
sti
push
clc
icebp
mov
out
test
mov
jge
mov
mov
test
cwtl
scas
enter
shll
addr16
xchg
out
xchg
int3
sti
jae
adc
cld
mov
loope
iret
pop
pop
xchg
stc
shll
lcall
js
inc
lahf
cmp
jecxz
repz
or
cmpl
fwait
test
les
lret
fidivl
and
inc
dec
leave
adc
sbbb
iret
test
mov
popa
je
push
jge
cmp
gs
add
jbe
inc
or
mov
pop
pop
sbb
pop
mov
sbb
pop
add
jmp
pop
and
test
mov
inc
ljmp
mov
dec
lret
sbb
xchg
clc
pop
adc
cli
decb
popf
sub
mov
inc
inc
fsubrl
xchg
push
pop
jmp
or
mov
adc
mov
or
js
fs
out
cld
xor
jl
dec
sti
or
pop
add
test
repz
adc
dec
push
cmp
mov
dec
and
push
fstpt
loop
inc
adc
sbb
mov
scas
mov
out
int3
test
and
jge
jecxz
hlt
pop
mov
es
movlps
mov
jb
aaa
lcall
cmpsb
into
shl
cmpsb
push
subb
sub
xor
cli
lret
adc
mov
push
test
mov
mov
sahf
loope
pop
dec
pushf
sub
sbb
es
imul
jp
notl
arpl
mov
mov
push
cmpb
xchg
loopne
cld
adc
xor
mov
sbb
cmpsl
sub
lods
add
leave
imul
xchg
out
out
js
push
mov
into
and
jnp
inc
sbb
inc
push
out
cmc
mov
and
mov
mov
int
mov
jno
inc
push
add
icebp
lcall
jnp
psrld
in
lea
repz
rol
xchg
test
jmp
sahf
push
fsubrs
pop
outsl
dec
jp
sub
mov
cmpsb
addr16
push
addr16
push
push
scas
cmc
andb
rcll
sub
jp
icebp
mov
jecxz
push
inc
addr16
addr16
xor
jb
popl
jp
fs
xor
add
fidivl
sbbl
ljmp
fisttpl
lea
lahf
inc
jo
mov
jne
call
sub
or
jbe
lea
pop
out
jnp
xchg
gs
lds
clc
sti
mov
ljmp
enter
add
sub
fsubrp
sbb
xor
pop
sub
jnp
mov
aas
stc
js
in
xchg
cmpsl
imul
fistpll
or
xchg
push
popf
clc
addr16
mov
or
in
fwait
pop
enter
jns
lcall
icebp
fdivs
ja
push
in
mov
push
sbb
ror
lcall
daa
add
xor
and
rclw
xor
or
and
mov
mov
sti
nop
cmp
mov
mov
xchg
sub
notb
jne
insb
jecxz
or
test
jnp
inc
inc
xchg
jnp
sti
stos
and
push
push
sbb
lret
insb
pop
inc
and
inc
stos
mov
adcl
mov
cld
or
int3
add
cli
ds
mov
pop
mov
sbb
xchg
ficoml
cwtl
mulb
inc
loope
stos
je
pop
xor
shr
movl
sbb
pop
mov
fwait
mov
sti
ret
push
loope
sub
mov
add
movsl
lods
nop
jmp
test
xchg
shr
les
mov
insl
add
mov
add
add
pop
jnp
lds
in
add
stc
cmc
pop
orps
add
aaa
lock
lods
aas
ret
jb
mov
cmc
fdiv
sub
aam
aad
stos
movups
mov
rcll
sbb
jmp
adc
insb
pop
popa
pop
out
xor
push
mov
loopne
xchg
sbb
aas
adc
and
fcoml
lret
addr16
movsl
sub
hlt
jns
and
inc
mov
ret
adc
sbb
adc
icebp
fimuls
and
jmp
cmp
inc
and
add
jle
test
push
fistpl
nop
fcomp
inc
inc
cmpsl
test
fistl
aam
add
stos
or
js
dec
insl
outsb
cs
cmp
push
pushf
jmp
lahf
fisttpll
test
xor
jbe
psubsb
cld
les
into
aad
push
mov
hlt
lds
adc
aad
push
gs
xor
and
jbe
or
sub
les
xor
pop
jb
repz
decb
int3
das
jno
les
cltd
mov
out
adc
jo
pop
aaa
xorl
in
jne
or
test
repz
mov
cmpl
fldt
and
popf
fldl2e
mov
mov
iret
jnp
mov
hlt
loop
int3
lcall
addr16
push
push
jae
jno
dec
loope
ds
cmp
cwtl
outsl
jg
or
xchg
scas
xlat
je
adc
rol
fildl
xor
jle
das
pop
push
push
sahf
push
mov
push
jbe
inc
xlat
sar
mov
sub
and
adc
lock
aaa
push
pop
imul
or
int3
in
aam
xchg
fwait
je
cmp
ss
mov
jge
lods
cmp
and
xchg
cmp
imul
cld
mov
pop
test
mov
pop
pop
push
mov
into
jo
out
jb
mov
xchg
cmp
or
mov
pop
mov
mov
jne
pusha
cmp
lret
popa
push
cmpsl
sti
jnp
es
pop
lock
mov
push
jo
stos
into
push
repz
add
jo
popf
mov
movsb
xchg
inc
jns
test
ja
dec
out
rcrb
rcl
inc
mov
mov
push
fcomip
inc
push
pop
adc
mov
outsl
int
outsl
mov
jns
inc
push
xchg
sti
cs
fistpl
sbb
and
imul
les
cwtl
push
cwtl
mov
jmp
clc
mov
cmp
jns
ret
sub
adc
dec
jae
shll
mov
mov
lret
mov
jno
cmc
aam
sub
mov
lea
push
dec
dec
add
ljmp
shlb
scas
cltd
and
scas
fldt
push
les
lret
and
jecxz
and
lcall
sub
mov
stc
rcrb
jno
inc
xchg
test
scas
pusha
movsl
cmc
in
sbb
or
jmp
hlt
hlt
xchg
inc
jno
rclb
out
or
pop
mov
xor
fildl
nop
cmp
andl
inc
jp
jge
test
mov
stc
loop
std
push
cmp
push
push
lods
adc
lods
arpl
test
sbb
int
and
rcrb
mov
mov
and
aam
sub
aaa
cmp
xor
into
call
xorl
inc
insb
fistpll
jno
sbb
inc
das
aas
outsb
les
loopne
or
or
jno
and
inc
cmp
dec
dec
shrb
andl
xchg
insl
sti
andl
fisubrs
dec
mov
addr16
dec
mov
pop
movsl
and
icebp
mov
shrb
pusha
int
and
dec
mov
push
mov
mov
mov
mov
pop
sub
lods
jo
pop
lds
in
icebp
adc
pusha
mov
xor
mov
sbb
lahf
test
mov
scas
push
dec
push
outsb
or
jbe
push
aas
push
jg
aaa
sahf
aad
xchg
mov
sub
push
push
lods
test
lock
loope
iret
mov
and
mov
mov
mov
test
push
daa
bound
xor
xchg
mov
xor
pop
or
mov
imul
data16
push
out
iret
aam
aas
loopne
mov
jg
and
pop
ljmp
or
fsts
jne
loope
sub
xor
aaa
outsl
pushf
ss
je
mov
stos
dec
pushf
iret
lds
adc
lock
inc
cmp
mov
fbld
push
iret
out
pop
fcomps
sub
aad
mov
cmovne
mov
pop
add
or
push
xor
pop
out
inc
ret
mov
mov
lds
push
lock
rcrb
subb
imul
mov
add
mov
xchg
inc
adc
mov
jecxz
js
hlt
test
fsubrl
push
xor
pop
movsl
jge
enter
outsb
iret
shlb
fwait
stos
jnp
push
scas
add
lahf
mov
movsl
mov
jbe
sbb
call
or
inc
fwait
jae
mov
sub
inc
arpl
jbe
outsb
jns
mov
xor
ljmp
shll
scas
cmc
pushf
mov
cmp
inc
jp
fsubr
dec
pop
jl
shll
cmp
lcall
imul
int3
adc
popl
popa
mov
lret
rcrb
dec
int3
xor
push
mov
mov
inc
dec
movsl
push
fs
jo
es
push
lods
and
fdivl
stos
call
inc
mov
xchg
sub
js
mov
movsb
xchg
cmp
mov
leave
jne
jbe
imul
push
int3
pop
in
push
mov
or
lods
mov
enter
adc
add
leave
test
fmul
xor
pop
mov
cld
xchg
push
lock
xchg
xchg
test
cs
push
xor
push
das
cmp
iret
mov
jb
inc
out
dec
test
movsl
movb
rcll
in
idivl
fbstp
xchg
push
negl
ljmp
mov
mov
fistpll
mov
cmp
sub
mov
aas
mov
sbb
sbb
pusha
mov
int3
leave
ret
out
inc
and
insb
popa
inc
sbb
in
repnz
bound
rclb
pop
and
sbb
inc
xor
ds
fistl
ficompl
jmp
cmpsl
stc
inc
aas
add
pop
inc
mov
lcall
stos
cwtl
fcmovb
pop
dec
or
lods
iret
ljmp
jmp
cwtl
dec
imul
mov
sub
je
xor
mov
pop
pop
lea
xchg
mov
cmp
push
int
push
mov
add
jns
mov
repz
fstpl
lcall
adc
mov
push
jle
lock
jecxz
rclb
cmp
imul
in
adc
xchg
ljmp
cld
mov
fisubrs
or
add
scas
jno
test
and
subb
call
addr16
sub
fs
gs
arpl
jecxz
and
leave
stos
push
xchg
add
push
scas
inc
mov
add
dec
cld
jmp
adc
into
inc
push
in
sbb
push
pop
packuswb
mov
stos
sub
call
pop
fidivl
dec
cs
enter
mov
fcompl
sahf
push
ljmp
fsub
xor
sub
addb
lcall
pop
ljmp
outsl
pop
cmp
jp
lods
jle
sbb
jmp
cmp
add
lea
and
mov
and
ror
xor
movsl
sbb
decl
loope
mov
mov
aas
icebp
sub
cmp
mov
fdivrs
push
loope
shll
mov
test
clc
jnp
push
pop
xchg
fmull
mov
push
aas
pop
adc
in
inc
fldenv
jne
pop
cmpsb
or
mov
in
inc
xchg
sbb
dec
repnz
adc
popa
nop
addr16
dec
aas
daa
arpl
sub
jmp
sarl
mov
leave
sub
and
arpl
mov
sbb
mov
mov
add
and
bound
stc
jne
push
pop
sub
inc
fwait
mov
mov
xlat
nop
vcvtsi2sdl
pop
pop
dec
ljmp
mov
jae
push
cmp
adc
mov
in
insb
rolb
pop
shll
das
inc
sar
sub
or
pop
dec
aaa
cwtl
and
adc
push
fbstp
cmp
sub
cmc
adc
ds
mov
ljmp
loop
inc
aas
test
jmp
sbb
push
fadds
pop
loope
mov
jecxz
mov
movsb
fs
xor
in
cmp
dec
addr16
cmp
push
push
inc
mov
dec
xchg
mov
stc
sbb
stc
loope
enter
sub
out
nop
out
out
xor
pop
cs
xchg
adc
xor
mov
add
pop
mov
fs
stos
mov
push
jae
pop
dec
adc
inc
rcrb
loop,pt
xchg
lret
mov
inc
cmp
test
mov
cmp
and
sbb
cmp
xchg
imul
mov
and
pop
stc
jg
fildl
arpl
add
xor
jp
push
xor
lods
lods
xchg
and
or
sub
add
jge
popf
and
or
data16
and
and
insl
imulb
insl
pop
les
scas
pop
xchg
popf
xchg
cld
and
and
xchg
mov
pop
js
jl
push
das
pop
ja
mov
addr16
daa
pop
in
jo
or
mov
xchg
fisubrl
test
add
cmpsl
mov
pop
in
dec
pusha
and
adc
rorb
mov
jbe
shl
inc
sarb
lret
sti
sub
in
sbb
jle
fwait
mov
in
dec
out
insb
inc
stc
sti
jle
dec
add
pop
and
jns
dec
ret
fnstcw
push
adc
sub
xlat
push
cmpsl
sbbl
movsb
cmpsb
push
bound
xchg
cmp
es
imul
xor
push
xchg
arpl
sbb
xor
dec
arpl
clc
ljmp
mov
pop
mov
jno
cmp
insl
jne
stos
jp
pop
inc
xchg
mov
push
icebp
in
jns
into
ret
pushf
adc
inc
sbb
int
loopne
mov
jp
dec
aam
bound
movsl
js
add
pop
jo
stos
out
ret
addr16
pop
ss
cmp
imul
setp
cmp
int
lods
sub
ja
out
test
mov
inc
fs
lea
push
stos
mov
add
mov
cmp
xor
daa
sahf
inc
jecxz
push
aam
pop
add
popa
les
sub
pop
in
fdivrs
aaa
test
insl
xchg
pop
dec
pandn
pop
cmp
jge
push
out
les
pushf
or
popf
or
fwait
dec
in
jge
jl
pop
xchg
shlb
fistl
sub
dec
enter
or
outsl
arpl
push
jmp
into
mov
add
jmp
subl
movsb
inc
fwait
das
and
lods
sti
pop
lcall
jmp
or
test
xchg
dec
add
insl
xor
xor
inc
and
xor
sub
push
lret
popf
mov
dec
mov
cmpsl
jno
and
mov
mov
popa
imul
jmp
repnz
nop
lret
lds
sti
std
cmp
cmpsb
stos
dec
cmp
fidivrs
sbb
fucomip
push
mov
arpl
mov
dec
imul
cmpsb
sahf
jnp
nop
push
sbb
clc
out
pop
wrmsr
pop
jl
add
iret
pop
and
adc
in
nop
sub
jbe
fcoms
jae
ljmp
and
popa
sub
fnstcw
jp
cs
cmpsb
mov
push
lds
sti
ljmp
jge
adcb
pop
lods
push
and
dec
rorl
dec
cwtl
enter
loop
dec
pop
jo
mov
or
sti
adc
gs
push
dec
jl
sub
or
mov
subb
push
xchg
shlb
or
jg
data16
mov
popa
popa
into
inc
sti
jp
push
mov
cmpl
add
add
adc
dec
ja
mov
adc
sbb
sub
push
out
jne
lcall
xchg
cmp
add
adc
mov
sbb
xor
popf
rcr
pop
pop
rcll
inc
daa
sbb
lock
inc
sub
andl
les
sti
cmp
mov
cmpb
sbb
mov
aam
sub
daa
mov
and
xchg
or
imul
cmp
dec
inc
mov
and
adc
loop
pop
cmp
pop
fcompl
cmp
push
mov
dec
add
ss
mov
dec
add
inc
ret
stos
arpl
imul
loop
shl
cli
mov
pop
fstl
push
test
outsl
aas
sbb
fwait
mov
les
cmp
test
adc
cmp
aaa
pop
inc
mov
cld
jl
mov
xchg
xchg
mov
cmp
lret
lods
and
add
and
mov
cwtl
into
idivb
cwtl
or
cmpsb
mov
mov
add
inc
out
push
insb
js
cmp
and
roll
dec
mov
mov
lahf
push
add
or
push
icebp
xchg
rolb
ljmp
pushf
mov
jns
sbb
test
inc
lret
fsubrp
xlat
gs
fmull
mov
mov
movsb
jl
dec
mov
mov
into
fwait
enter
imul
push
push
hlt
pushf
leave
lret
daa
in
cmp
lods
pop
int
lock
mov
imulb
lods
fdivrl
stos
cmp
lods
fwait
or
movsb
outsb
sbb
mov
pop
mov
rcll
movsl
inc
andb
jp
push
and
xlat
push
sbb
clc
xchg
mov
dec
and
xchg
push
shl
pop
divb
push
fwait
ret
add
cmp
push
xchg
jmp
popf
shrl
cmp
in
cmp
bound
stos
shr
dec
mov
fsubs
les
movl
lods
sti
push
int
aas
lds
aas
and
pusha
aam
mov
mov
call
push
imul
das
sub
jmp
clc
pop
enter
xor
scas
mov
ds
dec
adc
clc
mov
fdivr
js
sub
addl
test
call
pop
push
dec
test
test
push
cmp
adc
sbb
pop
scas
hlt
outsl
fiaddl
repz
mov
and
hlt
notb
or
cli
sti
adc
imul
scas
fadds
adc
push
jo
addb
fcoms
mov
dec
fwait
mov
mov
aad
mov
lods
enter
movsb
cmpsb
int
sti
pop
sti
loopne
subb
jmp
dec
movsb
dec
mov
mov
popa
mov
and
inc
ret
cmp
outsb
or
fwait
lret
mov
pop
inc
nop
push
inc
dec
mov
aad
jns
dec
fnstcw
sub
fsubrs
push
out
lods
cmpsb
aam
or
jmp
mov
adc
push
fbld
test
sti
es
push
nop
mov
push
orb
enter
movsb
xchg
pushf
mov
mov
pop
jge
mov
decb
in
arpl
stos
push
pop
xlat
pushf
and
test
shr
mov
push
jp
in
sarl
clc
jns
xor
adc
mov
pushf
pop
mov
popf
jnp
sbb
fstpt
cmp
in
mov
sub
bound
mov
jb
pop
mov
add
scas
jg
das
mov
or
jo
dec
lret
sti
fstps
xor
push
fstpl
jle
mov
push
out
cs
push
fs
add
cld
or
adc
inc
jo
add
push
pusha
pop
cmpsb
mov
movsl
in
mov
jmp
sbb
xchg
push
out
cmp
aas
rorl
in
jbe
imul
out
pusha
xchg
andl
lret
and
pop
aam
pop
xchg
push
and
dec
test
mov
adc
mov
cmp
dec
cmc
or
mov
adc
sbb
push
mov
adc
cli
xchg
inc
inc
xchg
data16
adc
nop
lods
loop
mov
jbe
pop
into
cmp
push
mov
adc
movsl
in
mov
jnp
sbb
aas
lods
xchg
fcmovnb
outsl
ret
movsl
xlat
mov
mov
cmp
aad
lret
std
popf
stos
and
push
lods
frstpm(287
ljmp
addr16
mov
inc
lret
cmp
jmp
xchg
add
les
cmpsl
stos
cmp
or
jp
in
outsb
add
xchg
outsl
mov
cld
jae
xchg
mov
xchg
pop
mov
jl
imulb
mov
mov
and
in
sbb
push
sbb
les
cmpsl
hlt
sarl
add
lods
mov
sbb
inc
mov
sbb
rcrb
fadd
push
loope
mov
mov
dec
xor
jge
mov
mov
xor
lds
xor
cmp
jne
jb,pt
pop
int
scas
loope
dec
out
adc
aad
mov
es
test
les
push
sbb
sub
mov
aaa
dec
cmc
and
loop
inc
pop
cmp
aad
faddl
or
jne
sbb
mov
out
popf
pop
push
add
push
or
jmp
dec
aad
jmp
inc
xchg
mov
adc
pop
mov
insl
sbb
movsb
ret
mov
lcall
xchg
addb
or
imul
inc
aas
not
jo
xchg
pop
lret
aaa
fiaddl
cltd
push
inc
fbld
nop
mov
lods
dec
and
or
lods
sti
cli
loope
dec
fdivrl
jno
adc
jp
out
pop
fcmovnbe
mov
int
add
jl
jne
inc
jo
sub
cli
loop
push
insl
ret
ds
mov
sub
pop
pushf
cmp
subb
mov
icebp
xchg
call
dec
cmp
pop
jl
in
lds
insl
je
cmp
faddl
cmp
rorb
js
fildl
lods
xchg
repz
sti
arpl
jecxz
test
lcall
ss
inc
dec
rcr
fdivr
hlt
xor
mov
xor
shll
push
mov
jns
frstor
test
or
pop
add
aas
and
inc
push
xchg
int3
push
push
mov
cmp
rolb
cmp
push
aas
lcall
or
sbbb
test
jecxz
mov
jl
test
xchg
dec
adc
add
add
cmp
insb
adc
pusha
cmpb
fucomip
and
in
and
sbb
lret
pop
mov
inc
pop
and
or
clc
movsl
out
jge
jne
xchg
pushf
mov
pop
mov
sbb
pop
mov
dec
popa
jae
jns
push
xlat
xlat
push
cmp
int
test
lcall
pop
popf
adc
inc
push
mov
test
pop
cmpl
arpl
mov
sarb
jo
bound
mov
pop
andb
out
mov
mov
dec
add
scas
repnz
xchg
sub
rcl
xchg
mov
enter
aad
lret
inc
adc
fcomi
dec
movsb
mov
mov
lret
xor
test
xor
dec
dec
aas
mov
mov
loopne
inc
inc
dec
lret
xor
lcall
dec
xor
fistps
scas
fisttpl
lret
pop
jge
sub
fidivrs
xor
rorl
in
ss
push
outsl
data16
xlat
pop
testb
push
pop
flds
cmpb
sbb
ret
hlt
sub
imul
inc
in
movsl
pop
in
dec
mov
shl
mov
addr16
lret
lret
repnz
aam
and
in
jae
and
or
pop
cmpsl
cmc
imul
iret
sbb
sbb
mov
adc
or
jns
pop
push
mov
fistps
dec
aas
adc
mov
add
repz
sbb
inc
pop
xchg
push
mov
out
insb
jns
inc
repnz
add
lea
bound
in
jge
out
lret
sub
fs
fs
dec
lahf
mov
sbb
pop
or
imul
xchg
bt
inc
or
call
pop
lcall
pop
lock
roll
pop
ret
test
inc
mov
xorl
mov
subl
ds
popf
dec
loopne
addb
or
sub
sbb
pop
cld
xchg
mov
push
ds
leave
imulb
xchg
xchg
fisubrs
push
rcll
fnstcw
ja
test
in
sbb
xor
arpl
jge
sbb
add
adc
xor
lea
enter
push
xchg
pop
insb
cmp
popf
nop
mov
es
pop
stc
pop
inc
cmp
nop
jb
xor
xor
ror
fwait
sbb
jmp
push
mov
add
outsb
inc
dec
cwtl
mov
aaa
lods
adc
jle
test
or
scas
sub
adc
icebp
and
in
pop
dec
jge
insb
movsl
in
mov
inc
xchg
xor
clc
fistl
subb
mov
sbb
push
in
test
sub
repnz
jg
xchg
push
mov
xor
mov
xlat
jge
pushf
inc
pop
cmp
int3
mov
cwtd
stos
popa
cmpsb
insl
fdivrp
add
jp
mov
or
mov
or
mov
fsubs
gs
bswap
adc
cli
iret
xor
scas
les
mov
shrb
subl
mov
pop
jp
sub
push
xor
xchg
jb
inc
sbb
stos
adc
stos
das
jns
pushf
adc
rcrl
inc
mov
ret
cmp
mov
outsb
mov
and
loope
inc
hlt
fsts
xchg
jo
mull
popa
mov
xor
push
es
mov
imulb
or
mov
insb
lea
outsl
inc
aas
popl
pop
pop
pop
cmp
out
cmp
inc
add
adc
orl
shl
ror
mov
leave
dec
mov
or
jge
mov
inc
movb
in
enter
mov
in
icebp
fdiv
movsl
sbb
push
ja
mov
and
mov
ja
adc
sub
push
out
mov
mov
mov
imul
or
sub
sahf
push
jg
or
sub
pusha
mov
jne
xor
mov
push
subps
test
jo
fwait
jbe
std
sarb
xor
sbb
dec
stos
mov
add
mov
sub
mov
mov
pop
push
andb
push
mov
out
jno
ljmp
repnz
pop
cmp
outsl
and
push
sub
xchg
jb
std
lds
inc
push
ja
add
aam
pop
iret
jecxz
and
push
mov
mov
out
or
fs
sub
sahf
xor
or
add
int3
aad
mov
cmpb
jge
mov
outsb
js
lock
scas
mov
into
imul
mov
dec
insb
push
faddl
mov
and
shrb
adc
ret
enter
pop
in
pushf
push
mov
cmp
shlb
cmpsb
jbe
jecxz
rorl
ljmp
push
mov
inc
sbb
jo
xlat
push
lds
adc
xor
xor
dec
mov
jecxz
inc
dec
sub
sarl
jecxz
rcrb
pop
sbb
and
ficoms
mov
sbb
popa
jp
adc
mov
out
out
ljmp
add
xlat
jg
push
in
or
add
dec
daa
jbe
lea
rorl
mov
stos
lahf
cwtl
test
mov
ror
mul
adc
rol
or
dec
jl
inc
jmp
add
jb
repnz
cmp
sbb
ja
int
jle
push
addr16
sbb
nop
cmp
es
outsl
mov
dec
sarl
pop
mov
jp
mov
pop
movsl
mov
out
iret
xchg
dec
ss
jmp
pop
fldt
imul
stc
ljmp
shll
xchg
ret
or
gs
sbb
sti
jb
rol
fistpll
and
enter
out
and
pop
adc
faddp
dec
pop
mov
jle
shll
mov
mov
and
rorl
push
sub
jl
pop
movsb
scas
mov
stos
inc
test
xchg
movsb
lret
inc
movb
ljmp
dec
mov
and
mov
xor
ret
jge
dec
pop
fistpll
lahf
mov
lods
push
cmp
and
pop
cmp
xor
pushf
push
decb
sbb
push
lahf
aam
sahf
mov
sub
pop
xor
pop
xor
xor
push
inc
fbld
scas
clc
bndldx
shl
lret
aaa
mov
mov
inc
dec
push
fldl
lahf
in
test
inc
movsb
xchg
sub
cmp
xor
sbb
jp
inc
or
fimuls
cs
incb
pop
jbe
ret
outsl
test
fadds
adc
addr16
cmp
cmp
scas
push
xchg
gs
es
xchg
arpl
aam
pop
repnz
lss
iret
cltd
lcall
or
addr16
push
xor
xor
pusha
fcoml
add
xor
movsl
scas
jb
sti
jmp
or
insl
movsb
in
xchg
or
test
cmpsb
pop
les
add
and
sbbl
sub
jnp
loope
xor
cltd
mov
std
out
xor
and
dec
mov
aas
scas
add
pop
xchg
scas
push
iret
pop
pop
data16
mov
cmp
adc
popf
bound
inc
sub
sbb
outsb
jnp
rorl
ja
push
and
dec
add
mov
sbb
adc
adc
mov
jns
es
int
bound
mov
cmpsl
rep
sub
lea
jnp
pop
stc
js
ss
sub
jl
mov
inc
hlt
jbe
sar
fs
clc
xchg
test
jne
adc
stc
in
daa
call
inc
sub
movsb
js
movsb
and
add
stos
add
arpl
mov
dec
cmpsb
je
dec
mov
push
xchg
xchg
mov
sub
fmull
jae
mov
dec
divl
hlt
les
imul
mov
negl
or
mov
mov
pop
aam
push
jg
inc
lcall
pop
add
ljmp
jmp
xchg
or
pop
adc
mov
sbb
es
mov
sbb
std
mov
aad
or
pop
push
mov
mov
sub
out
int
cmp
cld
sti
push
mov
int
test
push
ljmp
fmul
in
fsubl
decb
mov
shll
add
push
push
inc
inc
ret
dec
enter
dec
push
int
xor
xchg
mov
push
ret
push
cli
xor
xchg
addr16
xchg
inc
ret
cmp
bound
dec
lds
mov
cmp
imul
pop
cltd
stc
stc
adc
pop
and
inc
shlb
push
and
sub
in
cmp
gs
xchg
or
xor
repz
sti
sahf
push
test
dec
je
mov
repz
lea
mov
add
cltd
shlb
leave
inc
lahf
cmpl
inc
mov
add
fcoml
rorl
lcall
push
mov
mov
pop
in
fstps
pop
push
div
sar
pop
cmp
dec
jbe
push
xor
sti
mov
push
stos
push
inc
cmp
inc
repnz
jg
outsb
in
xlat
and
pop
push
stos
dec
scas
imul
nop
jo
aas
setl
arpl
cmp
and
add
fucomip
mov
add
test
lock
call
imul
movsl
sub
xchg
call
sbb
xchg
scas
inc
adc
add
pop
adc
mov
daa
sub
pop
dec
aam
pop
pop
in
test
test
mov
dec
adcb
cmpsl
data16
ss
push
mov
repz
dec
pop
in
outsb
pop
dec
cli
popa
mov
jnp
lods
jae
imul
outsb
and
test
cmp
dec
jo
mov
dec
mov
jo
and
inc
cmp
lods
xchg
cmpb
sahf
cmc
stos
aam
shlb
or
add
fisubrs
mov
test
push
sub
movsb
jns
hlt
xchg
ss
sbb
mov
and
out
dec
pop
rcl
jle
cwtl
rcrb
mov
mov
sbb
xchg
mov
sub
lods
and
int3
pusha
rcrb
or
inc
mov
inc
jp
xchg
dec
push
in
xor
xchg
add
in
pop
ffree
pop
and
mull
sub
mov
in
loop
aad
adc
test
out
xchg
push
call
scas
in
ljmp
inc
push
push
lods
out
hlt
ljmp
push
scas
sbb
ret
movsb
mov
cmovnp
in
sbb
push
dec
arpl
cmpsb
push
testb
pop
fcomps
mov
xlat
mov
fsubrs
push
push
loop
mov
mulb
xchg
mov
push
pop
stos
enter
mov
mov
cld
loope
test
dec
dec
inc
mov
divps
sub
pop
or
loopne
push
insb
adc
jp
inc
xchg
and
enter
push
xor
inc
xor
aas
xor
lods
stos
andb
loope
xchg
add
fildl
cld
jb
inc
pop
rcrl
aaa
mov
pop
dec
mov
ds
out
scas
dec
sar
mov
inc
sbb
add
imull
cmpsl
movsl
test
sbb
mov
imulb
xchg
cmc
ret
add
pop
mov
sbb
cmp
mov
mov
push
xchg
adc
shll
dec
pop
dec
mov
cmp
dec
and
idivl
lahf
loop
mov
xchg
aam
fmulp
inc
xchg
push
xor
jl
jp
mov
daa
jae
lcall
or
mov
inc
es
push
sbb
fildl
sub
and
and
lahf
pop
call
lret
sbb
idivb
shlb
push
jb
fistl
lret
push
cmp
sti
push
xor
pop
rcrb
mov
loop
test
jmp
mov
fmul
mov
hlt
ja
cmpsb
sub
mov
mov
adc
stc
out
jbe
int
jecxz
lods
cmpsb
adc
ja
out
jns
lret
cmp
jmp
lds
rolb
lcall
xchg
mov
outsl
mov
stc
cmp
adc
outsb
es
push
call
xlat
add
pop
ss
out
sbb
mov
repnz
jp
cmp
neg
std
hlt
or
jl
jp
and
cmp
leave
insl
sbb
inc
aam
xlat
cwtl
jae
ja
dec
cs
pop
fsub
pop
cmpsl
nop
cmp
loop
aam
mov
xor
push
lcall
jno
outsb
adc
mov
loopne
rolb
lods
test
outsl
popf
dec
mov
jmp
push
add
cmp
rcrb
jno
imul
inc
in
lret
mov
scas
and
shlb
mov
sub
jno
sub
jbe
mov
lret
sti
and
ret
dec
xchg
adc
inc
jge
jno
mov
outsb
push
imul
mov
ret
xchg
aad
xchg
mov
repnz
movsl
or
dec
cmp
mov
imul
xor
pop
adc
sbb
mov
jl
fidivs
mov
push
push
imul
adc
adc
sahf
ss
adc
push
or
popf
ret
xor
inc
and
and
out
lret
xor
xchg
test
xchg
outsb
and
into
cmc
iret
ret
aad
mov
push
repz
mov
dec
xchg
ficompl
test
mov
cmp
pop
mov
arpl
lret
test
into
sahf
nop
fidivrs
inc
jle
test
int
sub
add
jb
push
push
push
jb
and
fbld
cmp
stos
jle
pop
xor
jecxz
or
es
std
mov
aaa
inc
mov
sub
aas
adc
adcb
jle
in
push
jne
icebp
out
leave
lcall
push
xor
mov
loop
inc
sub
push
imul
pop
sub
fdivs
fiadds
data16
jg
inc
jl
outsb
mov
test
les
mov
cli
rcl
mov
stc
push
int3
sbb
xor
push
pop
jl
lods
addb
bnd
scas
inc
inc
test
test
imul
xchg
push
add
repz
xor
js
mov
nop
int3
hlt
test
cmpsl
add
sub
in
and
mov
jmp
sub
hlt
push
ret
daa
stc
daa
cmpsb
jecxz
adc
out
imul
jae
testl
insl
stos
in
addr16
in
inc
js
dec
sub
inc
testl
jb
add
xchg
sbb
pop
pop
add
mov
lock
xor
jmp
mov
sub
sahf
jbe
jns
mov
push
mov
mov
negl
mov
sbb
mov
pop
cs
xor
fisttpl
leave
mov
xor
jbe
mov
mov
inc
xor
lret
xor
lock
loope
mov
sbb
xorl
iret
xchg
dec
lret
rclb
push
faddl
out
xor
and
negl
inc
icebp
jno
inc
push
test
pop
cmpsl
aaa
or
retw
cmp
je
inc
cmp
mov
jns
in
jl
ss
aas
flds
pop
sub
mov
fbstp
jmp
repnz
andb
sbbl
stc
enter
dec
negb
mov
cmpb
jb
jg
rcrb
cmp
pop
sub
pop
pop
fcoms
int3
inc
and
jbe
ficompl
aas
add
jb
std
push
lret
dec
mov
shrl
adc
lcall
outsl
cmpl
mov
push
imul
jb
fwait
jle
dec
subb
clc
sti
pop
lahf
sbb
adc
mov
jno
adc
movsl
xchg
mov
adc
dec
push
scas
lcall
pop
lods
sti
dec
add
test
xchg
add
xor
sar
int
ret
aad
sbb
outsb
lods
cmpsl
add
mov
sbb
fnclex
pop
loop
fidivl
call
dec
pop
sbb
pop
push
adc
jg
sar
dec
out
lcall
repnz
int
loop
dec
test
xchg
loope
sarb
sbb
push
pop
lahf
inc
dec
clc
dec
daa
popa
adc
jae
dec
xor
add
gs
dec
dec
inc
inc
dec
cmp
adc
lret
aam
push
cmp
data16
or
fwait
jl
jns
sbb
mov
sbb
loopew
mov
aas
mov
xor
inc
mov
jp
aam
mul
fdivs
in
mov
xchg
mov
add
push
push
aas
adc
ret
dec
ljmp
pop
fisttpl
sub
push
push
mov
ret
fcmovnu
ljmp
xor
and
inc
mov
cmpsl
sub
mov
insb
es
mov
mov
sub
addr16
mov
call
inc
xor
push
int
sub
cmp
jmp
mov
fisubl
and
ja
insl
or
lcall
add
cwtl
fcom
or
cld
ljmp
lock
xchg
pop
cmp
scas
xor
icebp
jb
insb
xchg
xchg
rorl
xchg
sbb
call
inc
mov
dec
mov
pop
inc
and
push
daa
xor
icebp
cmp
jae
das
jp
cmp
es
sti
xor
out
push
lahf
int
add
push
js
adc
subl
bound
xchg
xor
dec
sbb
xchg
into
push
mov
aaa
shr
ret
leave
mov
sbb
ja
lahf
sub
inc
bound
aaa
aaa
inc
xorb
rorl
mov
xchg
add
pop
mov
in
or
xor
cwtl
dec
popa
icebp
mov
xchg
pop
sub
jns
sub
stc
push
in
lret
inc
xchg
fimuls
jns
fiaddl
insb
jo
test
leave
add
xchg
xchg
xor
fmull
out
fs
je
fistps
repnz
xchg
push
negl
inc
add
and
test
dec
out
xor
ja
xchg
lods
andl
ret
add
sarl
dec
add
pop
dec
into
loope
nop
test
in
mov
adc
mov
fdivr
icebp
std
stos
jns
fcomps
adc
inc
arpl
add
push
xlat
add
pop
mov
ret
mov
push
shll
arpl
insl
test
daa
adc
add
jle
or
ffree
add
lea
sub
mov
lea
and
jecxz
pop
xchg
call
arpl
orl
pop
pop
out
ds
inc
sti
loopne
rolb
popf
mov
push
cmp
and
xchg
in
int3
mov
ds
push
stc
repz
pop
gs
aaa
push
adc
jl
adc
lret
addr16
mov
jmp
das
inc
and
adcl
in
incl
ljmp
out
mov
mov
sbb
mov
in
or
lret
add
pop
lods
leave
call
push
pop
cwtl
ret
fs
lock
std
hlt
add
lods
mov
fidivrl
mov
aaa
cmpsl
popl
cli
xorl
fists
xor
pop
icebp
popa
fcoml
add
sub
ja
int
scas
mov
xchg
stos
in
mov
mov
inc
ret
test
mov
cmp
sub
adc
out
push
nop
cmp
mov
ja
loop
push
dec
ds
movsl
fs
pop
cmp
mov
stos
sub
jo
xor
jno
or
mov
and
aaa
add
mov
xchg
aas
daa
insl
add
xchg
cli
lret
jne
popf
xor
pop
scas
popa
insl
mov
sbb
ss
out
inc
movsl
pop
add
psllq
test
sbbb
sbb
loop
dec
cld
cmp
fwait
movsb
rorb
mov
add
jmp
inc
loop
xor
aaa
test
mov
mov
mov
sub
filds
push
adc
hlt
cmp
adc
add
cmp
push
jo
fwait
outsl
inc
mov
sub
daa
sbb
add
or
cmc
gs
adc
xor
divl
cmpsb
cmp
in
mov
xchg
xchg
rol
jmp
cld
push
call
insl
enter
lahf
bnd
inc
adc
jnp
insb
pushf
xchg
outsb
stos
add
sub
enter
inc
sti
mov
decb
inc
in
dec
sahf
dec
mov
enter
mov
fcmove
scas
das
sbbb
out
and
outsl
cmp
sbb
jo
or
xchg
push
push
inc
insl
fldenv
mov
mov
test
popa
jb
int
movsb
xchg
imul
jno
xchg
and
ds
sbb
sub
mov
pop
or
sub
or
iret
vpandq
or
fidivl
roll
outsb
sbb
mov
jecxz
shr
lock
adc
hlt
cmp
push
mov
pop
nop
loopne
int
cmp
inc
push
sub
mov
mov
xor
movsl
add
add
daa
sbb
ret
xchg
ficoms
jae
mov
ss
ror
add
fimuls
xchg
and
jne
mulb
push
jle
dec
addr16
aaa
ljmp
cmpsl
ss
pop
flds
add
es
out
mov
add
movsl
sub
sbb
fsubl
push
dec
jmp
cmp
adc
mov
pop
cmp
test
and
fs
mov
and
push
imul
fxch
lret
mov
adc
sbb
mov
out
test
sub
fldl
xchg
fidivs
pop
adc
pop
sub
mov
cs
push
adc
mov
cmp
rcrl
cmp
add
cmpsl
xor
imul
mov
mov
stos
xchg
xor
cmpsb
mov
gs
or
cmpb
bnd
mov
cwtl
lcall
rcrl
and
jo
or
shr
fwait
lock
push
sub
pusha
das
sub
ror
cltd
test
insl
test
out
ds
mov
xor
add
stc
les
pop
pop
xchg
jge
xchg
sub
loop
daa
sub
in
outsb
stos
dec
and
outsl
xchg
scas
jae
inc
out
mov
rcl
or
and
push
fidivrl
stos
rcrb
roll
sbb
mov
cltd
inc
pop
fisubl
outsb
dec
hlt
sub
pushl
adc
push
andl
jecxz
mov
push
insl
nop
push
push
outsl
or
and
lahf
int
js
nop
lcall
jecxz
jmp
mov
pop
in
ffree
gs
ret
orl
or
inc
adc
pushl
mov
mov
or
je
fwait
data16
or
mov
out
mov
pop
mov
dec
imul
sbb
insb
fndisi(8087
push
clc
cmp
inc
add
scas
mov
push
or
lds
sbb
mov
cltd
xchg
lcall
push
test
xchg
adc
push
and
adc
and
cmpsl
es
test
es
out
jbe
cmp
sbb
nop
jle
dec
fisttpl
cmp
lret
push
pop
scas
loopne
cmp
mov
fnstsw
push
pop
gs
icebp
inc
loop
or
add
cmpsl
jno
xchg
cmc
popa
mov
jns
test
add
inc
fiadds
pushl
nop
cmp
xchg
push
test
cmp
loop
pusha
out
mov
mov
pop
mull
cli
jl
jmp
jg
mov
and
fwait
int
out
xor
mov
and
cmp
outsl
ret
sahf
lret
mov
in
ja
lcall
push
jg
out
jbe
or
js
outsb
jp
ret
dec
xor
mov
test
xlat
and
out
jecxz
jns
xchg
xor
mov
imul
cmp
push
cmc
outsl
jmp
jle
out
cld
hlt
shrb
dec
outsb
cmp
and
out
popf
add
xor
adc
mov
pop
pushf
push
das
add
cmpsb
fisubrl
push
add
sarb
outsl
and
je
lock
pop
repnz
aam
mov
cmp
js
test
jmp
or
scas
in
and
icebp
adcb
jb
mov
clc
test
mov
hlt
xor
jmp
and
jmp
cld
sbb
mov
jns
dec
pop
xchg
mov
fsubrp
mov
stc
jl
shll
lahf
and
jle
daa
inc
mov
mov
cmp
xchg
cmp
mov
mov
cmc
adc
aaa
mov
mov
mov
rorl
pop
lea
sbb
scas
cwtl
jp
cmp
sub
add
xor
xchg
xor
push
popa
imull
or
loop
lock
mov
or
vpackuswb
daa
lret
pop
repnz
cmp
rcrb
mov
loop
jo
lahf
ss
in
xchg
adc
mov
mov
lcall
sar
sbb
rcrb
loopne
popf
inc
std
mov
lcall
sbb
jae
aas
xchg
jae
mov
scas
cltd
into
push
lds
shlb
pop
push
aad
push
inc
repnz
xor
cmp
xor
call
pop
mov
jge
and
movsl
into
ds
addr16
sti
scas
shl
insl
inc
adc
sarb
sub
xchg
insb
sub
leave
mov
or
jmp
insl
jae
and
mov
cmc
dec
fnstcw
xchg
pop
jge
sub
mov
or
xchg
sub
aaa
fldlg2
xchg
mov
cwtl
jle
mov
enter
pop
xor
lds
test
sahf
scas
xchg
pop
jecxz
cmp
movsb
cmp
lock
fistps
dec
dec
aad
jl
add
pop
adc
cmp
rcll
cltd
jge
rcll
jo
sub
dec
lahf
mov
inc
xor
loop
inc
add
lods
mov
inc
mov
adc
and
ret
test
in
add
mov
mov
lods
cmpsb
cmp
mov
hlt
cli
dec
in
dec
das
repnz
pop
mov
jmp
test
push
add
or
outsb
pushf
clc
das
sbb
outsl
call
mov
insb
push
filds
lock
shrb
push
fimuls
rclb
pop
lret
dec
push
pushl
les
jge
fs
cmp
repz
mov
leave
add
push
and
ret
sub
stos
int
push
xchg
les
rorb
pop
dec
fs
popa
or
ds
sub
mov
imul
in
mov
rcrb
ret
cltd
pop
icebp
xchg
jbe
addr16
and
inc
inc
fmuls
into
fildll
jnp
inc
into
fistl
clc
jno
std
mov
sub
mov
sub
inc
movsb
push
inc
mov
mov
and
lss
test
popa
mov
lods
xchg
xchg
loopne
clc
std
sub
xchg
push
dec
mov
mov
outsb
jmp
addr16
add
pop
sub
cwtl
xchg
mov
aam
popf
popl
ret
push
inc
mov
cs
cmpsl
or
shr
test
mov
xor
dec
mov
mov
sahf
fcmovu
stos
push
daa
in
lahf
repnz
aam
imul
imul
or
cmc
loope
daa
mov
sbb
mov
imulb
push
pop
adc
idivb
and
jmp
int
sub
jne
rorb
ja
xchg
fldenv
cmc
int3
iretw
adc
push
js
movsb
and
fwait
jp
or
nop
scas
mov
sub
push
jl
dec
repz
and
out
fimuls
jae
xor
sub
jb
insl
mov
xchg
jno
call
sub
jg
and
gs
rorl
pop
mov
mov
fs
stc
daa
xlat
sub
sbb
outsb
dec
push
shr
in
test
mov
cmp
fcoml
add
sti
idiv
scas
test
filds
je
jmp
inc
cmp
sti
call
xchg
nop
jle
loop
out
inc
xchg
push
test
cmpsl
push
jae
popf
jl
lahf
shlb
enter
mov
mov
cmpsb
xchg
mov
mov
inc
dec
fcmovbe
ja
jbe
outsb
xor
rclb
sti
mov
gs
repnz
add
sub
insb
inc
pop
mov
out
outsl
aam
lods
bswap
sbb
sbb
push
pop
jae
out
fnstsw
adc
and
ss
or
ret
in
andl
repnz
popa
hlt
std
loop
mov
sbb
xor
mov
sbb
mov
xchg
loope
and
pop
xchg
fdivr
outsb
mov
or
and
or
sti
adc
inc
or
pop
sbb
int
cmc
ret
lods
mov
inc
loope
cmpsl
mov
lret
scas
add
xchg
sahf
call
xor
and
loopne
lea
pop
js
aas
addr16
out
mov
jno
subb
in
add
fildl
cld
shll
iret
imul
cmpl
mov
mov
pop
rcrl
push
popa
lock
push
mov
push
notb
stos
sub
sti
pop
outsl
add
addr16
dec
ficoms
pop
sarl
jae
fsubrl
dec
aad
cli
pop
xor
push
loopne
fs
cld
cmpsl
gs
cmpb
popf
mov
les
shrb
gs
adc
xchg
dec
push
xchg
cmp
pop
cmp
scas
mov
std
mov
icebp
ret
or
mov
adc
cli
jns
jnp
xor
push
int3
cmpsl
mov
xor
test
test
repz
add
mov
push
mov
and
pop
and
xchg
cmp
clc
stos
frstor
mov
js
dec
push
dec
or
push
mov
hlt
push
cmp
ljmp
mov
jmp
movsb
mov
andl
xchg
dec
out
into
pop
ljmp
pop
adc
iret
fidivs
pop
sub
jmp
shlb
lcall
push
adc
mov
inc
mov
mov
into
cwtl
jmp
insb
shlb
mov
pop
mov
insb
jb
xchg
pop
shr
push
jb
lea
sub
nop
icebp
sbb
jb
inc
loop
rolb
dec
shrb
sub
pop
out
jnp
aas
sub
enter
test
in
or
imul
dec
fisttps
sbb
testl
jg
out
mov
sub
xor
ljmp
pop
sub
das
or
push
pop
mov
cmp
gs
repnz
mov
adc
jecxz
or
cmp
gs
pop
jo
xor
xchg
mov
fldcw
outsb
sahf
orl
aam
add
in
mov
sub
pop
iret
jg
mov
and
sub
jg
mov
addb
adc
out
push
pop
and
fbld
and
loopne
fwait
jmp
mov
andl
xor
pop
cmp
insl
xor
es
and
mov
clc
push
shrl
insl
add
fidivrl
pop
and
les
jl
adc
xor
sarl
mov
xorl
mov
mov
js
ja
adc
icebp
pop
or
push
sbb
push
xchg
pop
movsl
mov
pop
les
add
pop
push
fdivs
repz
adc
mov
loop
gs
jno
jle
push
inc
add
pusha
add
cli
mov
sub
scas
cmp
iret
leave
mov
xchg
xor
push
and
punpckhdq
dec
mov
pushf
int3
jae
cmpsl
sbb
mov
xor
xchg
mov
push
nop
repz
clc
sbb
loope
scas
xchg
adc
ljmp
jmp
push
push
into
das
adc
sar
fistl
cmp
bound
pop
push
popf
icebp
xchg
fwait
mov
loop
lods
add
int3
ficoms
or
and
xor
mov
push
mov
enter
loopne
push
mov
insl
lret
jae
stos
aaa
dec
mov
negb
test
jo
mov
push
add
popa
outsb
adc
sub
ljmp
imul
sahf
push
push
xchg
aaa
xor
out
mov
pop
push
lret
jbe
jne
insb
xor
adc
in
insl
and
outsl
add
push
into
notb
fst
pop
cmc
popa
cmpsb
mov
sbb
out
push
rorb
fwait
shll
sbb
pop
ss
lods
insb
push
add
lods
rcrl
call
lret
cltd
subb
mov
push
out
sbb
and
sub
daa
popf
shr
mov
or
test
addl
xor
mov
and
mov
sbb
pop
sub
pop
std
adc
mov
mov
inc
and
fsubrs
test
push
pop
jb
bound
jp
mov
sub
cmp
adcb
adc
and
jge
push
mov
and
sbb
inc
frstor
fsubrl
jns
cmp
mov
mov
mov
pop
sbb
and
sahf
dec
iret
lds
and
outsl
jmp
fcmovu
mulb
inc
pop
adc
or
sub
ss
adc
dec
pusha
and
add
xchg
adc
sbb
pushw
pop
cmp
sarl
stos
mov
pop
int3
leave
sub
arpl
pop
mov
pop
or
mov
shlb
mov
cmp
faddl
hlt
stos
xchg
dec
adc
add
inc
sub
or
int3
inc
cmp
dec
movsl
adc
add
fs
in
gs
cmp
jno
sbb
cmpsl
inc
inc
aas
jmp
add
loopne
adc
leave
inc
aaa
and
mov
sub
je
jns
ds
loop
cmp
loopne
loope
stos
and
fstpl
lds
mov
mov
jl
jo
mov
or
ss
xchg
outsl
cmp
loop
popa
jge
movsl
and
fcoml
addr16
test
sbb
call
push
movsl
cmpsl
and
pop
push
out
in
repnz
sbb
mov
call
cs
movsl
stos
out
cmp
and
fdivl
lds
inc
lock
adc
lods
test
mov
out
push
cltd
dec
movsb
into
stos
push
fucom
mov
mov
hlt
inc
mov
dec
xchg
cmpb
mov
pushf
ret
idivb
dec
testl
push
xor
cld
fsubr
sub
cli
push
orb
mov
mov
insl
test
xchg
mov
les
xchg
in
hlt
push
arpl
jb
lret
aaa
mov
decb
xchg
xchg
pop
cld
int3
movsb
add
add
or
into
pop
ret
unpckhps
mov
lahf
lahf
xchg
mov
xor
pop
mov
add
addr16
aam
je
jecxz
push
xchg
xchg
and
and
sbb
lods
and
cli
mov
cwtl
cs
pop
mov
push
loopne
je
and
or
shll
enter
push
mov
adc
arpl
pop
push
and
push
jbe
inc
insl
push
pop
fdivs
mov
mov
outsb
pop
pushf
ss
leave
push
mull
loopne
jecxz
jns
inc
or
xchg
dec
ret
fistl
push
pop
lret
aaa
lcall
shrl
test
mov
outsl
jmp
jl
and
in
xchg
insl
adc
push
jg
lea
xchg
jmp
jge
sub
addr16
xor
cmp
popa
mov
test
and
dec
movsb
mov
push
hlt
push
jl
std
fists
and
mov
imul
inc
pusha
push
add
ret
fisttpll
lock
repnz
pop
push
jmp
in
aad
fmull
xchg
jl,pt
mov
cmpsb
aam
mov
aad
xchg
jno
push
loop
insb
idivb
mov
pop
leave
inc
mov
push
ljmp
adc
lahf
cs
test
xor
xchg
cltd
adc
fisubrl
pop
imul
ds
adc
je
cmp
daa
cwtl
jns
push
bound
arpl
pop
cli
mov
test
jmp
push
sub
inc
cmp
js
loopne
push
fisttpl
cmpsb
sbb
aas
nop
inc
fstl
sub
cmpsb
sti
dec
dec
inc
lcall
xlat
popa
or
xchg
adc
aaa
sahf
add
xor
cmpsl
add
xchg
les
jge
aam
dec
test
xchg
push
xor
icebp
pop
push
push
cmp
push
or
cli
mov
cmp
dec
rolb
inc
cmp
shr
clc
ret
xchg
aam
push
push
fists
pop
fwait
dec
sub
dec
sbb
fldenv
enter
mov
pop
cmp
popl
out
sbb
pop
lahf
xchg
mov
dec
orb
mov
mov
dec
mov
ljmp
pop
adc
into
jb
cld
js
sbb
sahf
cmpsl
mov
mov
inc
cmp
pop
iret
addl
jne
pop
xor
or
bnd
sti
test
test
insb
inc
cwtl
mov
cld
repz
ss
mov
and
sub
adc
ret
cmc
xor
add
repnz
mov
or
adc
jno
jns
inc
mov
cli
pop
push
mov
add
fbstp
jge
stos
dec
push
push
mov
ljmp
fwait
scas
jbe
in
adc
mov
fwait
hlt
mov
leave
into
rorl
push
xor
and
out
mov
mov
ret
cmp
push
pop
inc
icebp
test
test
or
fs
test
inc
out
cwtl
in
pop
lret
fidivl
xor
in
test
daa
push
test
pushf
push
loopne
loopne
std
and
sbb
cmp
das
inc
add
test
push
pop
mov
fwait
outsl
cmp
dec
lods
ljmp
cmpsl
cmp
push
mov
xchg
add
sub
mov
mov
inc
pushf
push
xor
mov
pusha
jo
push
sbb
pop
in
js
xlat
add
movsl
sub
cmp
jns
sti
mov
and
xchg
aam
ss
lret
pop
jo
cmp
mov
repz
dec
and
subb
lret
idiv
pop
imul
pop
pop
fistps
mov
lock
not
les
mov
test
sbbl
sti
test
mov
fstpt
repz
sbb
sbb
and
xor
cli
sbb
pop
lock
data16
and
mov
xlat
xor
xchg
lods
xchg
or
insl
add
arpl
push
std
addr16
xchg
inc
sbb
mov
movsl
cmp
xor
dec
dec
dec
fs
sub
cs
sub
sbb
arpl
xchg
lahf
jecxz
pop
das
inc
cmpsb
xchg
push
int
jo
ret
and
arpl
popf
push
xchg
dec
sub
sbb
mov
dec
cmp
pop
fs
push
fdiv
inc
mov
jge
daa
sbb
lods
sbb
insb
xchg
push
mov
fcomps
xchg
sub
inc
xchg
add
pop
shll
outsl
push
sti
xchg
fdivrs
fldl
jp
pop
mov
inc
in
int3
sbb
push
or
dec
mov
sub
lds
test
idivb
ja
mov
out
movsb
jge
adc
adc
pushf
mov
scas
sti
dec
or
pop
scas
sti
dec
rol
out
loope
sbb
push
div
dec
cmc
cltd
lea
pop
std
cmp
jge
inc
jge
add
idivb
aas
jb
adc
mov
shrb
test
repnz
outsb
cmp
ss
ret
push
mov
xor
bound
fs
jne
fiadds
xlat
out
mov
std
push
sub
fildl
inc
loop
push
aam
popf
sbb
pcmpgtw
pop
cltd
xchg
shll
xchg
cmp
pop
fnsave
sub
cmp
mov
xchg
fbld
cs
es
sub
lcall
sbb
cmp
adc
xor
test
push
dec
push
icebp
xor
movsl
add
sbb
lock
data16
sub
dec
fstps
jecxz
dec
push
xor
push
mul
sub
inc
test
dec
repnz
adc
push
out
popf
stos
pop
push
dec
outsl
fstpl
xlat
jmp
xchg
jg
jae
jmp
popa
jg
inc
ja
lods
fstps
inc
mov
lds
sbb
imul
xabort
mov
fistl
rep
inc
jmp
or
fsts
jo
ss
cmp
pop
sbb
daa
jge
stos
aad
inc
in
inc
inc
xchg
cmp
pop
cld
pop
divps
mov
add
dec
and
add
jecxz
xchg
push
int
test
stc
jle
push
mov
inc
jg
jno
lahf
outsb
cs
mov
cld
lods
in
pop
cs
jns
and
mov
mov
das
pop
arpl
pop
sbb
dec
pop
sbb
xchg
jmp
push
and
xchg
push
scas
dec
cmp
mov
je
inc
loope
push
add
mov
outsb
lds
and
lods
pop
decl
push
dec
test
or
sarl
mov
push
inc
pop
test
dec
stos
imul
pop
out
movsl
push
cmp
xchg
hlt
arpl
dec
out
push
ds
leave
cmp
dec
jns
les
mov
and
push
add
and
outsl
xchg
inc
adc
xchg
gs
imulb
sbb
inc
movb
dec
dec
loop
test
sub
push
ret
jne
or
imul
lret
neg
and
mov
rorb
sahf
fwait
adc
out
pop
lcall
sbbb
insb
cli
sbb
jno
mov
fsts
pop
pop
stos
push
push
js
mulb
in
or
ret
ljmp
sub
ljmp
jg
stos
push
dec
xchg
imul
xchg
enter
pop
mov
imul
je
std
popa
xchg
jl
imul
adc
rclb
cmp
scas
outsl
xor
or
enter
sbb
push
mov
and
push
pop
lcall
mov
lock
leave
mov
inc
insb
dec
into
lret
dec
or
mov
sub
pop
in
dec
cwtl
mov
mov
pop
mov
push
ret
lret
xlat
mov
jbe
inc
pop
out
fs
cmpsl
imul
mov
dec
cli
xlat
and
add
fistl
lods
push
outsl
dec
sbb
pop
mov
dec
pusha
push
cltd
sub
inc
setnp
data16
mov
dec
stos
sbb
mov
xor
into
mov
pushl
push
inc
inc
xchg
test
popa
inc
mov
test
mov
push
movsl
sub
popa
stos
fmuls
cmpl
fisubs
push
pop
xchg
mov
lods
notl
test
jb
rcll
add
add
dec
xor
les
pop
mov
fistpl
inc
push
scas
and
cmp
mov
repz
hlt
xchg
fidivrl
popf
clc
shl
lock
jecxz
aad
test
add
or
and
mov
inc
cmpb
cld
lds
scas
mov
jp
dec
dec
add
jbe
jbe
ret
mov
ret
je
je
jns
mov
cmp
cld
nop
pop
xor
sar
or
pop
lret
fadds
ds
in
and
int3
xchg
sub
dec
adc
mov
cltd
scas
or
fisttpll
pop
mov
inc
imulb
aam
and
mov
sub
lcall
mov
inc
imul
mov
dec
or
test
fistl
aaa
xchg
jbe
insl
pop
pop
cli
ja
lds
int3
cmpsb
and
into
push
dec
mov
call
add
sub
cmp
adc
mov
pop
or
jmp
cltd
out
movsb
stos
push
leave
cltd
mov
sub
aam
ss
jbe
dec
insb
cmc
xchg
in
cmpl
or
dec
pop
adc
pusha
pop
icebp
xor
sbb
mov
repz
fnstsw
lods
adc
ds
imul
out
out
pop
and
lcall
sbb
stc
popa
cmp
fwait
dec
mov
int3
les
pop
sti
mov
dec
das
inc
icebp
inc
pop
cmp
and
dec
inc
mov
xchg
les
or
out
and
cmp
dec
push
in
mov
jg
loopne
mov
push
data16
sub
sub
fistps
lods
leave
fists
or
std
in
mov
push
daa
ret
pop
mov
inc
cmpsb
push
int
repz
jnp
mov
enter
add
push
cmp
hlt
mov
jns
leave
stc
sub
ljmp
add
and
jo
loope
mov
adc
call
dec
flds
lods
push
lods
inc
loope
jge
and
test
and
out
sahf
sub
lods
insl
into
or
cltd
test
fdivrl
jbe
lcall
fs
jmp
ret
lds
fmull
sarl
mov
mov
filds
push
xor
fadds
mov
mov
shll
mov
sub
shlb
enter
scas
out
adc
and
or
dec
dec
mov
mov
cmpb
add
dec
pop
mov
or
or
dec
ret
arpl
jl
fiadds
push
test
icebp
dec
jl
xor
or
insl
xchg
add
rclb
mov
gs
jmp
mov
xor
sti
sbb
mov
sub
mov
or
jno
stc
xor
shll
mov
push
popa
stc
jae
adc
lahf
push
cmp
or
jnp
or
push
mov
sub
lds
hlt
sbb
orl
test
out
adc
add
notl
push
mov
icebp
mov
addr16
into
enter
in
adc
sub
pop
pop
add
js
jbe
push
push
mov
in
mov
dec
in
adc
mov
cmpsl
inc
pushf
pushf
sbb
adc
push
in
scas
jb
pop
rcll
aaa
mov
aaa
ss
enter
aas
outsb
add
xor
xor
push
fs
inc
stos
fisubrl
jmp
jle
in
jmp
ss
mov
and
mov
and
test
iret
pop
mov
lock
cmp
jmp
scas
lahf
mov
mov
mov
pop
pusha
ljmp
sbb
idivb
mov
pushf
ja
mulb
inc
mov
cmpsb
repz
sbb
pop
aad
aas
xchg
or
xor
sbbl
imul
lret
adcb
decl
mov
cmp
hlt
jle
pop
adc
and
and
popf
dec
xchg
shrb
in
xchg
add
ljmp
mov
andl
sub
bound
ljmp
jbe
sub
sbb
mov
orl
sbb
sub
mov
repnz
add
cltd
cmp
jmp
bound
in
popf
ja
das
xchg
push
repz
push
push
jb
or
gs
adc
stos
stc
pop
es
mov
jbe
dec
push
push
sarb
pushf
in
in
xlat
add
cmpsb
mov
xor
inc
bound
mov
inc
stos
adc
cltd
fidivrs
fwait
push
add
mov
mov
out
xor
hlt
leave
int
outsb
xchg
fst
sub
or
loope
sub
ljmp
sahf
std
mov
xor
in
in
mov
adc
lcall
inc
xor
das
clc
jne
dec
xchg
fists
sbb
js
adc
push
add
lea
or
sahf
sbb
addr16
mov
dec
jle
outsl
out
jmp
push
pop
pop
jb
jge
or
sbb
jbe
movsl
cwtl
mov
mov
and
inc
xor
fstp
sbb
nop
sub
enter
mov
xlat
fsubs
int3
lret
fwait
cmc
enter
shlb
xorb
fistpl
mov
rclb
out
inc
push
loopne
jnp
mov
cltd
fisubs
in
imul
decb
cmp
cwtl
xor
dec
xchg
test
out
addr16
mov
xchg
adc
bswap
and
imul
mov
ja
aam
inc
mov
pop
mov
mov
lahf
andb
int3
mov
cmp
sub
repnz
mov
mov
mov
in
repnz
fs
insl
ret
or
int3
out
lock
int
mov
push
or
mov
mov
jp
sub
jge
imulb
popl
push
jmp
stc
dec
mov
xchg
test
and
aam
faddl
sarb
sti
ud0
xchg
pop
ljmp
les
loop
xor
ffree
pop
mov
cmp
sbb
or
in
pop
xchg
sub
sub
push
xor
mov
sub
icebp
stos
add
aad
pop
inc
loopne
dec
ss
call
mov
xchg
out
xchg
rclb
mov
insb
jle
pop
cmpsl
cmp
fdivrl
xchg
fidivrl
inc
andb
push
iret
add
xchg
jb
add
outsb
dec
in
insb
jp
or
outsb
test
pop
jp
rcll
stos
jno
adc
std
jg
movsl
in
aad
cmpsb
cli
popa
pop
ljmp
inc
pop
dec
leave
add
xor
pop
in
or
cmp
dec
dec
sbb
xlat
and
pop
xchg
fwait
imul
pop
mov
fyl2xp1
xchg
push
and
sahf
mov
vcvttps2dq
mov
jae
rorb
repz
test
mov
add
mov
cmp
sbb
lods
nop
xor
cmp
mov
lret
lods
sub
pop
icebp
pop
sbb
mov
fdivrl
cmp
ljmp
repz
sbb
cmpsb
pushf
and
mov
shll
pop
fbstp
push
sbb
movsb
add
imul
adc
xlat
or
lods
daa
js
sub
xorl
loopne
cs
pop
aaa
sub
mov
fidivrl
pcmpgtb
leave
xchg
and
test
pushf
ljmp
inc
test
sub
jmp
and
mov
lods
ficoml
int
mov
stos
xchg
add
push
adcb
or
pop
adc
add
inc
lret
jo
sarb
aad
and
aaa
jbe
pop
les
loope
lret
testb
and
in
clc
in
or
xor
inc
dec
clc
cmc
adc
int
gs
cwtl
or
xor
stos
jge
mov
jecxz
aaa
push
ljmp
lods
cwtl
mov
cmp
jae
ja
les
clc
inc
or
jbe
loope
jmp
fdivrl
sbb
mov
mov
pusha
xor
out
aaa
jns
mov
jno
add
adc
cmp
sbb
sbb
clc
mov
loope
or
cmp
adc
lock
notb
test
sub
mov
mov
fcoml
pop
cmp
ljmp
inc
dec
inc
push
cli
pop
fidivl
sub
mov
adc
jle
lods
jl
int
mov
adc
dec
ret
xchg
cmp
cmp
mov
pop
sahf
sbb
jecxz
mov
xchg
in
movsb
jmp
fstps
outsb
es
out
or
inc
fnsave
in
and
les
inc
lret
mov
test
ds
mov
sbb
push
jne
fisubrs
sbb
jo
adc
das
dec
sbb
or
jbe
or
mov
aaa
dec
jb
jbe
push
imul
repz
fs
loopne
mov
and
mov
shrb
and
pop
cmp
test
out
xor
outsb
into
push
and
adc
and
mov
push
xor
sub
in
add
sub
xchg
pop
pop
addr16
pop
adc
and
xchg
test
mov
inc
xchg
andl
mov
xor
and
test
sbb
xchg
fsts
mov
into
inc
pop
push
cmp
cwtl
sti
mov
outsl
mov
addb
push
loop
add
push
xor
cmpsl
pop
fcomip
mov
les
jno
fldl2e
out
loopne
pushf
pop
or
inc
popf
inc
outsb
dec
cmp
xchg
or
push
insb
xchg
mov
fdivrs
mov
or
mov
inc
mov
hlt
or
aas
int3
call
inc
sub
add
and
sub
sbb
pop
lds
dec
jmp
add
push
es
cld
lea
adc
or
ret
int
inc
push
mov
push
adc
xchg
mov
xchg
sub
jmp
pop
pop
fisubrs
fiadds
insb
xchg
pop
addr16
lods
adc
push
fiaddl
cmp
cltd
and
fs
fs
sub
stos
and
xchg
cmpsl
inc
cmpsl
sub
fstl
in
lds
aaa
incl
sbb
pop
lods
push
mov
xor
jno
movsl
sub
jne
int
jge
xchg
xchg
cmp
popf
ret
ret
lds
xlat
dec
in
pop
mov
jmp
jbe
xchg
jle
inc
fidivs
es
sub
loop
rcll
iret
dec
movhps
pop
jnp
in
roll
jl
sbb
pop
cwtl
or
xchg
push
dec
ficompl
dec
pop
cs
sub
mov
popf
popa
inc
std
cmp
ret
in
enter
lds
xchg
loope
xchg
xor
inc
pop
lds
je
adc
mov
mov
vmwrite
pop
inc
arpl
dec
shl
push
ljmp
fidivrl
xor
add
adc
inc
pop
push
inc
inc
xchg
mov
cmpsb
mov
pop
addr16
inc
shld
dec
jmp
inc
shrl
enter
ljmp
xchg
ljmp
repz
pop
fwait
dec
aam
add
arpl
xchg
add
pop
and
jno
add
pop
cmp
stos
xchg
fcmove
loop
jge
cwtl
sarl
jecxz
mov
adc
xchg
mov
inc
or
sarl
add
and
sbb
xor
push
jle
cmp
dec
call
arpl
mov
jns
scas
jo
repz
jno
ja
mov
push
push
dec
lahf
out
sarl
push
mov
in
pushf
imul
mov
dec
aam
and
repnz
mov
mov
xchg
outsl
bound
aam
outsl
or
mov
push
into
inc
mov
data16
mov
sbb
adc
ljmp
fcomi
jbe
mov
push
lods
loope
imul
test
shlb
cmp
out
les
cmp
test
cltd
popa
ret
int
test
and
sub
lods
push
dec
dec
xor
sub
aaa
adc
adc
das
enter
inc
sbb
push
cmp
arpl
push
jno
cmp
test
xchg
adc
sub
mov
adc
or
cmpsl
pop
mov
dec
popa
outsb
mov
cli
fcoms
pop
lret
jnp
xchg
mov
add
loop
mov
mov
es
mov
or
pop
in
pop
in
jns
outsb
dec
fs
iret
push
iret
dec
jle
test
push
sbb
mov
dec
je
cmpsl
aam
xor
gs
dec
pop
clc
loop
fdivr
nop
pop
ja
pop
cmc
sbb
ret
push
mov
sbb
dec
or
popa
mov
sti
ret
mov
cmpsb
sub
pushf
pop
cmp
ds
cmpsb
jb
jl
mov
sahf
and
enter
sub
adc
jle
jne
jno
adc
in
ds
inc
enter
nop
loopne
push
test
andl
pop
test
pop
dec
and
pop
out
out
add
into
cwtl
loop
jge
pop
push
sub
icebp
fidivrs
scas
push
rcll
sub
add
in
daa
sbb
mov
pop
jmp
push
cwtl
leave
movsb
daa
mov
out
or
xchg
sar
shlb
test
sbb
daa
add
in
add
in
xchg
dec
add
aad
sub
jl
adc
xchg
push
cli
inc
orb
jg
mov
imul
mov
out
daa
xchg
frstor
stos
jmp
aas
data16
inc
inc
sbb
lcall
loopne
pop
insl
std
cmp
cltd
repz
push
adc
stc
mov
pop
jmp
dec
inc
sub
adc
or
mov
sub
jl
out
adc
hlt
and
shll
push
and
loopne
leave
sbb
outsb
fnstcw
popa
filds
fwait
int3
das
and
push
mov
sarb
sahf
dec
cld
mov
sub
inc
push
cld
add
xor
clc
cmc
adc
ret
ss
fiadds
mov
add
xor
out
jge
inc
movsl
cmp
imul
fwait
xchg
shll
popa
daa
push
orl
and
add
aam
cmpsl
pop
sbb
push
cld
mov
mov
inc
cmp
lock
xchg
xchg
scas
xchg
test
add
xor
mov
mov
push
nop
movsb
mov
and
cmpsb
pop
mov
pop
pop
sub
lods
shlb
mov
daa
jo
or
add
mov
iret
push
rorl
inc
ja
outsb
dec
lcall
xorl
adc
pop
lcall
sbb
rcrl
hlt
jbe
pop
fs
sbb
loop
shl
sub
mov
pop
jg
jb
xchg
jne
inc
loope
cmp
loopne
sti
inc
lods
insl
imul
xlat
outsl
int
enter
out
in
dec
repz
push
fildl
addr16
push
xor
xorb
fsubr
bound
inc
fwait
pop
out
cmp
xchg
sbb
pushf
test
das
pop
mov
outsb
cli
aad
outsl
add
gs
fsubs
repz
lea
fistpll
mov
adc
lods
xor
xchg
xchg
jg
loope
cltd
push
push
roll
jnp
and
pop
cmp
xchg
daa
lods
jne
mov
jg
repnz
imul
xor
in
lock
pop
jbe
std
nop
mov
pop
and
inc
pushf
mov
adc
call
scas
inc
xor
pop
sarl
dec
add
pop
bound
push
xchg
call
inc
dec
lret
scas
add
xor
push
pop
pushf
xchg
sbb
dec
mov
sbb
or
fadds
cmp
mov
dec
push
mov
pushf
pop
xchg
je
test
incl
adc
repz
inc
in
pop
sarl
sbb
sub
mov
xchg
outsl
mov
pop
jne
dec
hlt
pop
inc
pusha
jnp
inc
push
int
sub
jecxz
repz
dec
sub
sbb
out
push
dec
lods
int3
loopne
push
scas
xor
pop
jb
repnz
jl
pop
pop
sub
outsb
repnz
adc
int3
and
jno
xor
pushf
adc
jle
pop
fbld
xor
loop
dec
gs
popa
cli
mov
mov
xchg
scas
daa
push
push
mov
pop
filds
jle
int3
jne
stos
push
sbb
mov
arpl
lock
inc
xchg
cmp
filds
imul
xchg
xchg
aaa
xor
ret
sbb
test
mov
int
scas
mov
xchg
sbb
jb
inc
push
pusha
loop
into
cwtl
call
inc
xor
adc
xchg
lock
fpatan
ds
sub
lcall
cld
push
and
and
js
or
sti
mov
hlt
test
cmc
imulb
lods
mov
cmp
mov
out
or
mov
mov
icebp
scas
stos
sbb
mov
arpl
imul
mov
adc
mov
dec
sub
jecxz
aam
cltd
mov
pop
dec
or
aad
leave
imul
jle
xor
mov
out
jg
mov
mov
shl
aam
pop
cmc
pop
test
repnz
fs
jo,pn
dec
push
sbb
xchg
add
inc
mov
mov
mov
test
dec
popa
sub
sbb
push
push
sub
xchg
fldenv
dec
xchg
popf
les
testl
or
test
dec
mov
xchg
push
dec
mov
push
pop
shlb
push
add
outsl
adc
cmp
jge
xchg
adc
aam
mov
popa
dec
pop
xor
or
mov
mov
sub
sub
cmp
fdivrs
push
mov
mov
rolb
inc
mov
pushl
es
cltd
pop
arpl
cmp
ljmp
mov
dec
xchg
clc
mov
or
or
fidivs
out
test
adc
sub
notl
or
aas
xchg
rep
adc
mov
jecxz
into
repz
ljmp
lods
cmpsl
ja
ficompl
lods
loope
pop
add
cli
popa
fcmovbe
popa
les
xchg
cmp
jge
test
iret
out
nop
jo
out
xchg
sahf
or
ret
push
dec
jge
push
cmp
sub
cld
ror
jle
cld
in
jo
push
iret
lock
cmp
push
inc
ja
sarb
adc
pop
xchg
mov
movsl
mov
fisubrs
dec
push
cli
xor
mov
fidivrs
jb
outsb
out
adc
jns
outsl
or
sbb
sub
push
jno
imul
orl
jo
and
rol
adc
push
iret
or
sarb
fistpll
insl
xor
movsb
mov
or
xlat
and
or
cmp
mov
inc
aas
shrl
add
roll
std
mov
divb
adc
or
jnp
inc
pop
xchg
inc
ja
mov
push
dec
insl
push
sbb
or
sbb
jg
pop
pop
push
xor
lea
mov
test
push
ret
mov
arpl
div
mov
pop
jge
les
pop
inc
jno
insb
fsubrs
call
movsb
test
mov
jle
adc
pop
das
xchg
movsl
pop
xchg
outsl
add
test
insl
pop
push
loop
dec
pop
gs
aas
daa
xor
sbb
dec
fldenv
mov
outsb
inc
das
jl
or
pop
mov
xchg
mov
adcl
ret
adc
je
mov
jmp
xchg
sbb
adc
xchg
add
cmp
pop
jae
out
jne
xchg
or
push
fxch
mov
ret
push
jle
in
shll
ret
inc
in
push
mov
add
xchg
push
daa
icebp
filds
push
and
fadds
arpl
and
cmc
cmpl
cmp
ja
xor
push
or
push
mov
push
outsb
or
test
lock
jle
cmpsb
test
js
jnp
sbb
scas
stc
jle
sbb
adc
lret
xlat
cltd
cmc
vmaxps
lods
sbb
mov
insb
imul
decl
sbb
sbb
aam
adc
inc
push
repnz
adc
jb
fs
push
push
scas
lret
or
xor
imul
out
dec
cltd
sub
sti
enter
pop
and
aaa
xor
adc
sub
adc
cmpsb
jae
push
jb
xchg
or
pop
or
push
movsl
sbb
cmp
ret
dec
lods
imul
mov
fidivs
test
inc
aad
cmc
xor
or
push
inc
or
add
sub
push
seta
add
imul
adc
cvttps2pi
inc
fldl
mov
cwtl
mov
inc
mov
or
les
jecxz
in
insb
lds
jl
sub
adcl
ljmp
push
mov
jmp
pop
xchg
loop
lock
adc
mov
inc
shlb
push
mov
xchg
dec
sub
loopne
rcll
jb
jmp
mov
sub
cmpsl
pop
cmpsl
loopne
sub
cli
fstps
aaa
fildll
aam
jle
sti
or
ds
sub
or
outsl
ljmp
add
cwtl
xchg
mov
inc
sbb
push
cmp
xchg
jp
ret
dec
out
dec
xchg
aas
inc
inc
mov
adc
imul
fldcw
jg
and
icebp
hlt
push
stos
fdivr
in
add
jmp
lret
dec
mov
arpl
mov
mov
stos
aas
dec
scas
cmc
cld
or
popf
rcll
mov
pop
mov
jns
push
mov
jne
test
les
push
cwtl
and
cmp
fwait
shlb
mov
fistpl
pop
rcrb
in
mov
cmp
jl
dec
add
shll
lret
setae
mov
into
or
rcrl
shll
aaa
mov
jb
inc
scas
dec
cs
mov
lret
aam
ret
stc
gs
pushf
push
push
sub
cmpsb
pop
mov
inc
ja
int3
sub
mov
in
lcall
jle
aas
stc
adc
add
pop
cmp
sub
mov
xor
shrl
lret
popa
popa
shrl
mov
out
push
cmp
cmp
movsl
add
int
dec
and
dec
jo
lea
rcr
movsl
pop
dec
mov
sub
push
or
sbb
cli
sti
push
sbb
xor
xchg
inc
call
lret
and
in
dec
xor
push
loope
sahf
sub
out
cld
add
movsb
mov
ret
sub
insb
dec
mov
rorl
ds
sub
and
stos
sbb
lods
addr16
ret
dec
jb
jg
push
mov
lret
shrl
sti
jmp
mov
xchg
jns
cmp
pop
pusha
push
les
roll
mov
int3
outsb
insl
jle
or
xchg
mov
sub
popa
repz
sub
and
sahf
adcb
sti
inc
push
add
jnp
lds
add
or
xchg
fidivl
dec
push
aam
jecxz
mov
sub
and
dec
repz
sub
and
cmp
inc
popf
mov
enter
pop
dec
xor
cmpsb
popa
mov
fmull
mov
shl
cmp
hlt
adc
shll
repnz
mov
mov
out
dec
push
xor
xchg
frstor
int3
int3
cmp
jg
push
movsl
push
mov
enter
popa
cmp
xchg
dec
mov
xor
and
and
rorb
jle
push
adcl
push
push
pop
jl
xor
movsb
cli
loope
push
lret
fnsave
mov
jge
cmp
inc
mov
push
popf
pushf
stc
dec
xorl
lahf
mov
movsb
std
cmp
mov
dec
out
jge
adc
lret
jnp
mov
jg
xor
inc
in
jae
sarb
out
ret
add
fwait
dec
xchg
rorl
pop
icebp
mov
push
leave
mov
lods
xchg
cltd
in
outsb
jp
imul
or
sbb
xor
cltd
or
int3
enter
pop
and
dec
sub
sub
in
push
jmp
aas
or
xor
dec
fdivs
mov
out
cmp
pop
add
cmp
imul
dec
aas
imul
pop
mov
aas
sarb
jg
cwtl
sub
push
out
push
cld
mov
insl
dec
xchg
iret
dec
cs
push
sub
frstor
imul
push
je
in
jb
push
arpl
lods
mov
pop
mov
inc
int3
addr16
add
push
jecxz
add
add
inc
js
jno
and
push
lods
imul
fiadds
gs
sbb
jl
insb
insl
inc
call
fisttpll
mov
adc
sbb
insb
shll
jns
pop
stos
pop
add
lea
fwait
jp
in
sbb
mov
pop
sub
stos
lret
mov
shlb
fs
or
xor
test
xor
dec
sbb
sbb
lcall
lods
shll
lret
jge
adcb
or
adc
negb
enter
or
test
cmp
mov
sar
or
pop
ret
aas
xor
aam
cmpsl
cmp
pop
mov
arpl
lret
sub
out
scas
mov
cmpb
xchg
adc
xchg
ja
test
jp
mov
cwtl
and
cmp
rcr
loopne
jbe
jb
or
push
int3
jmp
jbe
push
jge
in
icebp
in
inc
push
or
inc
leave
ficompl
mov
pop
cmp
mov
lock
push
jae
mov
mov
fdecstp
and
jno
lods
mov
inc
fucomp
mov
mov
mov
in
loope
fstpl
cmp
or
pop
or
bound
das
mov
and
jg
por
das
nop
jb
fsubrs
adc
insb
sbb
mov
sbb
enter
or
adc
gs
or
shrl
jnp
in
mov
ljmp
mov
add
adc
sbb
pop
mov
xor
test
frstor
sahf
cwtl
fcmovb
dec
pop
mov
test
push
mov
fldl
into
scas
repz
push
jmp
xchg
movsb
mov
lock
lea
lock
pop
test
das
dec
imul
icebp
inc
xchg
out
hlt
pop
mov
enter
pop
inc
pushf
adc
xor
aas
std
fmuls
pusha
jns
and
add
icebp
popf
xlat
repz
insb
sahf
inc
hlt
out
xor
xor
fs
pop
adc
jecxz
and
xor
fisttps
lods
sahf
xchg
rcr
xchg
sbb
fdivrl
loopne
in
mov
sbb
jp
enter
shll
mov
jg
mov
push
xchg
sub
in
mov
mov
stos
mov
out
sbb
xchg
enter
lret
out
xlat
loope
push
cs
loopne
add
mov
jmp
daa
adc
sbb
jbe
mov
push
aad
xor
shll
sti
inc
cmp
in
pop
push
sbb
push
push
fimuls
adc
repnz
mov
jbe
jmp
mov
cmpb
es
sbb
hlt
jecxz
stos
test
sub
aas
add
aaa
enter
cltd
xlat
and
xchg
call
iret
and
cmc
cld
mov
popf
inc
add
bound
add
das
pop
and
ja
es
mov
mov
rcr
daa
push
imul
and
inc
not
andb
xorb
dec
mov
inc
stc
push
lock
mov
push
jl
jl
andb
iret
bnd
add
cmp
mov
xor
pop
mov
in
cmpsl
cli
negb
das
iret
jmp
add
and
fsubs
mov
mov
rolb
cmp
out
or
mov
call
mov
mov
mov
sarb
jg
mov
cmc
iret
popa
das
and
mov
and
push
pop
sarb
mov
aaa
movsb
hlt
fwait
lea
ja
fwait
aas
lret
lds
xchg
adc
push
in
int
lret
test
adc
jp
pusha
push
cwtl
or
cmp
push
iret
cld
push
fdivrl
xor
jmp
in
std
popl
cmpb
xchg
push
cs
or
push
push
divb
jle
fstps
das
push
dec
add
ficomps
test
fcoml
into
xlat
mov
lock
pop
lock
das
in
movsl
cs
iret
gs
jg
mov
mov
adc
pop
mov
jne
pop
cs
aaa
in
pusha
push
movsb
fcomip
stos
jae
call
sub
test
pop
jns
xchg
mov
insb
add
xchg
mov
mov
xchg
popf
and
jnp
ss
mov
inc
mov
mov
stos
and
add
or
lods
in
movsb
sbb
shlb
loopne
das
mov
add
stos
popf
mov
das
mov
or
cli
push
pop
pop
int
fbstp
or
push
pop
adc
xchg
xchg
scas
or
inc
outsb
mov
jp
xor
arpl
pop
lcall
es
stc
addr16
mov
inc
fstpt
pop
adc
or
sbbb
ss
out
mov
rclb
lahf
nop
mov
adc
js
adc
jg
push
in
sub
sub
push
or
sbb
inc
hlt
dec
ret
test
mov
subl
mov
arpl
shlb
repz
scas
or
adc
mov
push
cld
mov
and
xor
cli
clc
movsb
cmp
xor
jg
push
cmp
cmc
in
pop
out
fmuls
lds
cmpsb
scas
lret
and
push
inc
dec
mov
push
bound
push
pop
sub
xchg
or
cld
jmp
mov
cmpsb
bound
or
mov
xchg
vmovsd
adc
lcall
push
mov
inc
mov
xor
and
into
push
arpl
iret
dec
sbb
into
je
je
nop
addr16
test
jmp
out
das
mov
ss
mov
lcall
ret
iret
mov
pop
mov
gs
clc
shr
test
fistl
out
test
mov
pop
pop
mov
sti
loop
dec
dec
lock
xrelease
pop
mov
gs
fwait
mov
jmp
sub
add
int
divl
repz
ret
cmp
int3
jle
cmc
repz
stos
inc
idivl
mov
add
scas
push
sbb
mov
push
idivb
pop
sbb
mov
test
out
addr16
insb
stos
and
pop
or
out
xor
jae
xor
add
adc
sub
and
push
fwait
pop
cwtl
lds
scas
lods
pop
xchg
call
push
push
adc
mov
push
nop
or
dec
test
sbb
sbb
cmp
sub
lret
dec
cmpsb
js
mov
add
xchg
shr
push
sub
xchg
in
sub
mull
call
mov
outsb
jbe
bound
push
pop
xor
mov
adc
pop
in
adc
or
xchg
mov
rcl
adc
xorb
ja
xchg
xor
dec
mov
mov
insl
loop
dec
rorb
push
pushf
aad
pop
rol
jae
aad
shll
nop
inc
lods
xor
xchg
adc
mov
rcr
sbb
insb
out
jnp
xor
xchg
mov
dec
pop
mov
adc
xlat
repz
inc
xchg
sbb
test
push
mov
mov
aaa
push
popa
out
leave
mov
lods
in
in
cmp
sbb
push
inc
cmpsb
pop
stc
insb
adc
sbb
jo
xor
pushf
adc
inc
mov
negl
xchg
stos
pop
add
cmc
jg
inc
pop
lret
pop
add
ja
xlat
fwait
insb
dec
inc
rcrb
xor
test
cmp
loop
lahf
in
mov
insl
pop
mov
gs
mov
pop
add
pop
leave
mov
sbb
and
hlt
out
sar
scas
inc
enter
jnp
fsubrl
mov
popa
push
jmp
call
or
dec
repz
jae
ss
or
fcmovnu
jg
sub
or
xchg
inc
je
push
cld
push
cmc
imull
movsl
adcl
push
mov
xchg
and
sbb
gs
jnp
xor
daa
sub
movl
add
test
and
std
sbb
daa
in
cmpsb
xchg
push
test
repnz
out
stc
xor
dec
jns
fimuls
sbb
jmp
xchg
inc
and
std
fidivs
adc
push
popa
mov
adc
shlb
out
loop
cmpsb
orb
xor
xorb
aaa
mov
inc
lock
fisubs
sbb
push
stc
aas
nopl
sub
and
out
mov
jl
pop
sub
sbb
mov
call
mov
test
dec
wbinvd
orb
adc
dec
and
jns
xchg
aam
sbb
es
leave
add
fwait
cmp
mov
inc
in
jmp
aas
aam
mov
outsl
fcoml
push
jg
cmp
int3
test
mov
mov
cltd
in
jl
repz
aaa
es
add
mov
sub
ja
inc
repnz
xchg
fwait
sbbb
mov
ficomps
mov
or
mov
adc
popf
dec
cmpl
stos
test
jmp
movsl
divb
into
dec
cltd
inc
mov
sub
sub
ss
stc
xchg
jo
aas
test
sub
dec
sub
xchg
cmpsl
xchg
or
imul
test
ret
out
ret
shrb
pop
clc
adc
or
movhlps
cld
in
sbb
jb
popa
aaa
fldt
mov
sti
and
or
loop
mov
add
xchg
xchg
test
adcb
scas
insl
xor
fidivrs
cmp
arpl
xor
js
test
lock
add
pop
roll
and
or
cmpsb
push
xor
lret
sub
cs
xor
xor
mov
loope
hlt
sarl
adc
push
xor
mov
and
sub
jge
hlt
push
stos
mov
sub
rol
icebp
mov
add
jg
sub
aaa
push
pop
insb
push
adc
inc
aaa
jae
adc
fisttpll
and
or
sub
cmp
shrl
sub
movsl
mov
es
lods
daa
jbe
adc
rcr
add
pop
add
add
mov
jecxz
ret
pop
ss
cmp
jle
pop
pusha
insb
repnz
je
dec
imul
sub
xor
addr16
jge
iret
arpl
pusha
fldcw
das
jp
dec
xchg
lahf
loopne
ret
loope
lcall
xorb
das
jg
mov
in
sub
shrb
cwtl
out
repnz
loopne
aas
test
mov
mov
or
adc
pop
adc
add
rcrb
mov
cmp
sbb
sbb
push
jb
test
add
xor
pop
cli
sub
cmp
lock
idivb
lret
fwait
jmp
xor
mov
sub
xchg
test
popf
leave
pusha
and
sahf
andb
rcrb
outsl
cs
sbb
xlat
adc
jg
pop
mov
loopne
movsb
daa
mov
xor
repnz
ja
sbb
sbb
mov
inc
cmpsl
xor
out
bound
outsl
into
ret
xchg
les
pop
sub
cmp
mov
leave
loopne
and
aas
xchg
or
jle
inc
push
fisttps
fdivrs
mov
cs
fsubs
inc
add
mov
pop
xchg
jmp
mov
sbbb
dec
push
test
push
mov
in
dec
clc
add
cmp
in
sbb
inc
ret
sti
and
xchg
ds
and
stos
add
cmovle
jmp
enter
xor
or
or
sub
dec
pop
loop
mov
xor
mov
adc
out
dec
sbb
push
xchg
adc
xor
inc
outsb
jne
cltd
mov
xor
xchg
outsl
sub
ja
jno
int3
adc
gs
cwtl
stos
cmpsl
data16
fbstp
cmc
push
adc
ljmp
jle
cmp
mov
mov
mov
push
imul
jp
div
popa
push
inc
fsubs
mov
mov
loopne
pop
fstpt
stos
sub
and
dec
icebp
cmpsb
xor
push
mov
sbb
bound
mov
pop
jp
orb
movsl
ret
ljmp
pusha
fidivrl
inc
movsl
rclb
cmp
mov
adc
lret
lock
xchg
adc
xchg
aad
fisubrl
inc
and
addr16
pop
mov
int3
out
pop
pop
mov
int
xor
loop
sub
rcll
cvtdq2ps
lea
sarb
xchg
cld
dec
xchg
ret
in
lods
pop
dec
pop
jno
testl
mov
xorl
or
pop
dec
je
fcoml
stc
xchg
push
cwtl
push
ja
push
sarl
jle
push
push
push
jbe
pusha
adc
mov
dec
dec
ret
push
add
dec
lock
imul
aaa
stos
decl
movsb
popf
and
mov
int3
subb
push
push
fistps
xor
jne
cmp
jp
test
dec
xor
add
loopne
pop
movsl
mov
ds
ror
pop
add
push
lods
push
cmp
and
or
sti
jge
add
in
repnz
jg
jg
mov
xorl
jne
mov
int
fildl
addr16
in
pop
jno
leave
or
fimull
sbb
mov
sub
movsb
sub
testb
inc
out
push
jne
pop
or
jne
js
out
bound
mov
scas
mov
shl
sbb
ja
xor
add
test
push
gs
or
aaa
out
das
andl
inc
jmp
test
cltd
pop
cld
pop
imul
pop
push
and
pop
insl
loope
cltd
xor
mov
test
lret
test
inc
dec
and
popf
mov
out
pop
in
lcall
decb
xor
out
xlat
dec
sub
push
aad
outsb
lcall
mov
xchg
cmp
mov
add
scas
in
dec
add
sahf
push
pop
test
inc
rcrl
inc
nop
xchg
out
jp
jne
xchg
lret
nop
repz
inc
add
int
sub
sub
xchg
cmp
loope
inc
xchg
inc
iret
enter
call
aad
pop
inc
andl
xchg
add
je
pop
push
les
xor
into
pushf
or
add
movsb
cmp
les
mov
int3
or
mov
dec
adc
shrb
mov
xchg
hlt
int3
fs
xchg
jmp
xchg
adc
dec
in
jbe
jnp
sahf
jmp
jno
lds
pop
sub
loope
xchg
push
and
cs
sbb
xlat
inc
shll
add
push
dec
dec
mov
lret
mov
inc
sbb
inc
mov
bound
xchg
and
pusha
outsb
mov
inc
fbld
arpl
or
adc
insb
inc
or
mov
push
orb
push
fmulp
mov
imul
or
push
jae
test
imul
fidivrl
and
mov
dec
adc
ja
int3
jg
xchg
popf
outsb
imul
xchg
andl
or
mov
inc
lret
pushf
aam
ret
js
mov
lods
pop
cmp
jo
mov
bound
xor
or
pop
insl
leave
sarb
test
lds
std
push
jbe
inc
in
xchg
jle
dec
adc
mov
and
inc
mov
or
push
add
sti
inc
jecxz
ret
cmp
mov
insb
sbb
movsl
inc
lret
jmp
fstps
lea
xor
mov
in
push
call
add
mov
call
mov
jmp
ss
cmp
fwait
push
lret
aas
pop
xchg
sub
sub
enter
mov
shl
aam
add
cmp
aad
cmc
pop
fnstsw
shll
cwtl
inc
pusha
out
icebp
scas
ds
xchg
cmp
aam
loopne
sub
in
sarl
pop
add
out
or
cmp
push
cmp
xchg
push
or
dec
mov
rclb
hlt
test
mov
mov
loop
mov
stos
insb
mov
aad
xor
dec
adcl
xchg
fiaddl
cmp
pop
les
mov
mov
insl
das
arpl
sub
ret
adc
stos
in
cmp
add
jnp
or
xchg
push
in
adc
cmp
sahf
sub
cmpsl
mov
out
add
test
lret
cmp
sbb
test
mov
xchg
and
push
inc
shrb
push
icebp
jb
ja
lret
mov
push
push
mov
push
pop
xchg
jne
mov
aas
xor
cwtl
stc
lcall
sti
mov
in
popa
daa
cmpsl
cwtl
shll
bound
ja
scas
jmp
scas
sbb
cwtl
popa
mov
sbb
sbb
mov
aas
add
inc
cmc
xchg
push
es
shrb
dec
jge
cmp
inc
mov
int
xor
pop
dec
mov
sbb
mov
std
push
dec
int
arpl
je
arpl
sbb
inc
sub
xor
sar
mov
aad
push
cmp
jnp
inc
stos
mov
loopne
xlat
enter
nop
repz
mov
jmp
je
aaa
iret
std
cmc
add
outsb
pop
in
lahf
sbb
xor
push
cld
shr
inc
mull
push
jnp
xor
jns
cmp
dec
out
in
dec
gs
xor
push
push
insb
xlat
jne
add
pushaw
data16
jmp
push
add
mov
sub
xchg
leave
inc
and
mov
frstor
popl
or
stos
and
divb
fwait
daa
push
outsb
jb
loopne
gs
aad
add
stos
mov
sub
mov
pop
test
xchg
es
cmc
movsl
cmp
push
dec
xchg
cmp
mov
cmpb
repz
dec
xor
outsl
dec
mov
xchg
jns
adc
gs
mov
add
mov
and
movl
inc
sbb
fwait
hlt
mov
jmp
mov
out
xor
dec
or
add
sbb
aaa
fidivrl
push
cli
push
int3
jg
outsl
jg
sub
pop
sbb
cmp
mov
and
mov
fsubr
and
sarl
loopne
mov
mov
repnz
push
adcb
and
dec
scas
ds
sarl
sarb
outsl
xchg
push
lahf
pop
leave
sub
jge
and
icebp
mov
mov
xlat
jge
loope
jno
sbb
jns
and
and
int3
movsb
pop
jle
xchg
mov
loope
and
push
out
lahf
stos
stc
mov
insb
test
shrb
popf
faddp
and
sbb
mov
dec
push
adc
cli
int
outsl
sub
fwait
xor
add
inc
divb
repz
subb
lcall
xchg
inc
mul
aaa
mov
movsb
test
add
cmp
push
cld
adc
leave
aam
test
and
gs
nop
and
test
mov
jb
cmp
xchg
adc
xchg
out
push
sub
add
popa
mov
add
std
popa
in
daa
and
inc
sbb
pop
cmp
jle
mov
daa
dec
or
sbbb
pop
dec
mov
pop
cmc
jle
push
xchg
mov
bound
in
in
jns
sbb
rdtsc
daa
lret
ds
pop
inc
or
inc
inc
sub
and
lock
add
aad
xchg
notb
int
mov
jbe
lcall
pusha
mov
dec
fimull
cmp
pusha
xor
pop
mov
inc
fldcw
stc
mov
inc
adc
xor
push
xchg
lock
jl
lret
inc
jge
adc
xor
ret
neg
adc
sti
push
and
jo
dec
add
jo
out
int3
shrb
aad
in
ja
mov
data16
jle
add
push
iret
in
add
xchg
jbe
sub
inc
movsb
jl
jo
dec
jl
ret
imul
pop
sub
in
stc
mov
je
shll
push
or
inc
imul
aaa
loop
add
int
dec
cld
in
addr16
pushf
cmp
push
lds
sbb
fnstsw
cli
scas
xchg
jae
cli
ljmp
mov
jmp
dec
out
xchg
bound
pop
jecxz
pop
add
mov
testb
xor
jne
pop
mov
loopne
xchg
test
loopne
or
fldenv
mov
xchg
and
xchg
jmp
pop
jecxz
inc
adc
rorb
addb
xor
mov
je
loop
adc
ss
xchg
lods
pop
add
lods
out
mov
add
xchg
in
data16
xor
xchg
xchg
mov
lods
xchg
pop
mov
daa
mov
inc
dec
jp
jg
dec
cmpsl
loop
mov
mov
cmp
mov
cs
fsubrl
jae
inc
in
mov
or
out
fisubrl
cs
xor
rol
pusha
sub
sub
test
jbe
imul
mov
in
rolb
test
cmpsb
sahf
mov
sub
dec
mov
in
sub
gs
push
jle
sub
jns
popl
imul
cmp
stos
mov
pop
js
fcomp
stos
cmp
add
std
push
fadds
movsb
xchg
fisubrl
adc
or
and
mov
xchg
jle
addl
cld
pop
in
mov
repnz
push
sahf
fs
out
insb
adc
mov
xchg
cmp
std
and
or
mov
inc
loop
test
jns
mov
and
addb
xor
and
mov
mov
push
mov
mov
sarb
cmp
arpl
fcmovnbe
jp
orl
ss
mov
jg
in
imul
fs
cltd
js
push
stos
clc
les
out
rcrb
lahf
sbb
dec
and
cmp
dec
add
pop
pop
fisttpl
dec
adc
insb
hlt
into
inc
ljmp
imul
sbb
out
fs
cmp
mov
std
inc
sahf
ret
lcall
mov
mov
add
xchg
inc
mov
lret
out
sub
adc
mov
lret
cwtl
mov
iret
pop
inc
inc
repz
dec
shll
xor
insb
addb
daa
jno
mov
xchg
mov
es
add
jno
fdivr
and
push
mov
cmp
movsl
mov
mov
add
dec
notl
bound
jecxz
fnstcw
sub
adc
xchg
and
cmp
xor
sahf
jno
jle
dec
jge
or
add
jo
cmp
stos
lcall
cltd
fst
dec
cld
add
mov
cwtl
test
mov
jne
sub
pop
jmp
cwtl
dec
mov
cmp
shll
xchg
pop
and
cmp
xchg
out
out
ret
mov
test
mov
mov
nop
or
rorb
pop
and
enter
jns
sub
ja
in
xor
repz
mov
ret
fdivrs
xchg
pop
lock
mov
scas
outsl
jb
rcl
es
and
popf
sahf
cmp
dec
or
iret
sti
adc
jle
in
fmul
lret
fnstsw
in
dec
sub
jecxz
ljmp
sub
adc
mov
sub
std
addl
lret
imul
xlat
repnz
cli
adcb
gs
jo
pop
xchg
cmp
aas
mov
scas
pop
pop
clc
mov
push
rcr
dec
mov
aas
popa
out
out
fxch
sub
mov
dec
int
hlt
mov
xchg
xchg
ret
sub
dec
cmp
and
pop
ss
push
cmp
movsb
outsb
xchg
cwtl
es
push
pop
or
jle
dec
fnstcw
adc
mov
pop
fiaddl
sbb
cmc
push
mov
mov
pop
xchg
push
mov
lods
nop
scas
stc
inc
dec
inc
xor
sbbb
mov
cmp
mov
fsts
lods
mov
cltd
hlt
and
push
rol
xor
adc
mov
sbb
test
adc
bound
jae
pop
call
cs
popa
adc
sahf
mov
loopne
jecxz
lea
jle
cpuid
mov
xor
stc
jo
inc
adc
jns
add
cmp
shl
xorb
mov
cwtl
shl
dec
inc
dec
fwait
xor
xlat
bound
mov
mov
repnz
jno
cmp
rclb
aas
aad
jae
rep
pop
and
cmpsl
jl
repnz
and
xlat
and
mov
pushf
loope
dec
fwait
jb
and
mov
lret
xchg
sahf
repz
jo
sub
cmp
sub
mov
mov
xchg
shr
mov
mov
ljmp
jmp
pop
or
out
in
popa
ds
lret
jp
test
popa
shll
adc
fisttpll
inc
adc
fdivl
add
dec
jo
cmp
jg
fucomi
loop
fldl
inc
and
movsb
cltd
sbbb
lock
pop
mov
jno,pn
dec
es
imul
out
add
dec
lcall
mov
loope
fiaddl
in
nop
xlat
sub
and
pusha
or
nop
ss
sub
or
aam
lods
push
pop
inc
je
mov
ljmp
cmp
adcl
sub
test
cld
xor
mov
fwait
int3
sub
xchg
inc
inc
mov
push
or
push
nop
mov
push
push
insb
xchg
jmp
mov
sbb
sub
int
mov
push
pcmpgtw
pop
xchg
lock
mov
or
imul
inc
sub
loopne
in
and
jbe
stc
cmpsb
fstpt
cmpl
dec
xchg
sub
inc
or
sub
cmp
fbstp
mov
xor
sbb
inc
add
mov
mov
in
push
push
sub
in
push
adc
pop
mov
xchg
mov
push
orb
push
mov
not
cmpl
xchg
mov
push
aas
xlat
mov
mov
testl
sub
jecxz
dec
mov
mov
jmp
daa
pop
jnp
xchg
cmp
pop
repnz
lahf
lea
shl
and
inc
add
fmulp
sub
std
pop
add
iret
popf
pop
aas
xchg
adc
add
movsl
loope
and
pop
and
lea
sub
sbb
lods
outsb
sbb
int3
pop
scas
lods
push
out
pushf
or
jnp
add
pop
add
movl
rcll
dec
xor
mov
mov
test
xor
pop
mov
sub
add
sub
xor
es
adc
mov
loop
inc
push
push
jmp
movsl
push
imul
sahf
jl
mov
mov
mov
sbb
cmp
add
bound
cmp
fnstsw
dec
mov
leave
mov
adc
jle
or
or
adcl
push
in
fdiv
stos
les
push
add
fsts
adc
scas
xor
inc
test
adc
movsl
cmc
call
cmp
mov
shlb
sbb
push
es
inc
shl
inc
fildll
xchg
iret
push
je
xchg
cmp
pop
inc
xor
dec
cli
jb
mov
popf
jge
je
mov
inc
loopne
mov
stc
mov
cli
lahf
insl
frstor
add
xor
push
and
inc
popa
and
sbb
mov
fisttpl
pop
cmpsl
mov
push
lcall
hlt
jecxz
and
inc
and
cmp
aad
testl
inc
aad
mov
shl
cmpsl
in
dec
pop
pop
adc
arpl
jmp
lahf
inc
pop
notb
cltd
cmp
mov
cmpsl
fisubs
sub
jmp
and
popf
dec
xchg
lds
int3
xchg
xor
sbb
popf
imul
out
and
and
xchg
and
sbb
adc
repnz
dec
aam
add
mov
lock
sarb
jae
push
xor
fsubs
ret
fwait
mov
cmp
cld
mov
pop
xor
pop
xor
iret
adc
faddl
popa
sbb
inc
xchg
lds
inc
std
ljmp
mov
xchg
push
sub
pushf
jge
sbb
mov
fistl
mov
lcall
adc
clc
pop
and
aas
shlb
gs
add
add
adc
es
daa
jae
jmp
jbe
cmp
mov
pop
daa
and
das
and
jne
jle
ljmpw
iret
lods
jae
es
leave
sub
mov
rcl
lods
fstpl
cmp
add
inc
sub
xchg
shr
cmp
test
mov
mov
outsb
add
xchg
jmp
mov
add
out
shrb
loopne
jae
divl
xor
hlt
add
imul
cmp
dec
pop
out
sbb
jns
mov
inc
xor
push
xchg
cmc
xchg
pop
fnstcw
jno
xlat
sbb
flds
sub
int3
enter
rorb
fucompp
shrl
iret
push
gs
sbb
mov
call
cwtl
cs
sub
jnp
fimuls
xor
aas
out
cltd
lds
inc
mov
lahf
mov
mov
sub
mov
rcll
and
sahf
das
es
xchg
insb
adc
xor
lret
in
rcll
mov
ljmp
test
sub
push
push
sbb
mov
ss
ffree
cmp
fists
daa
sub
insl
mov
sub
cli
aas
imul
add
xlat
hlt
lods
pop
aam
jge
lret
add
cmpsl
mov
sbb
pop
cltd
addr16
lcall
and
mov
dec
and
rorb
js
repz
push
ja
and
xor
cmp
sbb
cli
hlt
pop
pop
imul
imul
insb
loope
sbb
test
fwait
sub
sub
sbb
jmp
push
cmp
sbb
popf
or
incl
push
xchg
sub
cmp
int3
leave
adc
in
insb
push
mov
shll
cmp
movsb
cli
xor
pop
mov
pop
lock
ret
rcl
lock
jg,pt
ret
mov
cmp
scas
inc
mov
pop
nop
xchg
sbb
loopne
aaa
xchg
adc
jecxz
out
les
or
xchg
xchg
mov
fs
out
mov
pop
sub
sbb
bound
mov
pushf
call
into
mov
cmp
sti
mov
pop
pop
sbb
jo
jne
subl
jno
leave
lods
imul
out
imul
stos
inc
cmp
or
aaa
out
hlt
sbb
adc
int
pushf
xor
xchg
mov
mov
mov
jmp
test
or
mov
outsb
movsb
fwait
pop
ret
mov
jbe
sbb
stc
dec
add
jle
push
es
rcr
pop
mov
push
sbb
neg
xchg
pusha
inc
pop
int3
inc
and
jne
insl
add
adc
fwait
xor
shr
sub
ret
stos
jae
ljmp
in
and
es
mov
iret
push
inc
sbbw
adc
cmp
ljmp
or
push
dec
lea
xor
das
jg
pushf
or
loopne
inc
sbb
cli
cld
addr16
inc
inc
in
shrb
push
repnz
jg
adc
mov
cmp
jge
ret
mov
int3
lahf
stos
xchg
aad
mov
mov
mov
ret
ret
cmpb
and
dec
in
in
lcall
add
fsubrs
cld
aaa
xchg
and
cli
sti
rorb
sbb
push
test
push
push
cmp
jmp
movsb
adc
push
sti
jne
mov
dec
push
xor
mov
fidivl
sbb
test
push
fisubrs
aas
shrb
leave
mov
cmc
fadd
pop
jl
and
sub
jae
pop
pop
in
fs
loopne
xor
mov
loope
sbb
dec
popf
clc
inc
out
or
jmp
pop
xchg
push
mov
add
std
pop
xor
lahf
and
in
lahf
mov
xor
add
add
pop
and
test
mov
mov
std
jmp
shl
jns
and
xchg
pusha
jmp
es
dec
jg
roll
push
lods
mov
lahf
push
mov
inc
lods
adc
xchg
mov
les
push
mov
lcall
ja
pop
cmpsl
mov
bound
mov
lock
or
cs
repz
movsb
sbb
addl
test
jns
dec
in
xchg
icebp
or
dec
push
mov
out
ja
addl
dec
pushf
or
nop
mulb
inc
xor
xchg
fcompl
fisttps
inc
ret
pop
lahf
sub
xchg
inc
sub
push
xchg
cmp
xor
fnstcw
aaa
sub
mov
test
pop
lret
adcb
mov
add
cmp
adc
pop
pop
aam
mov
mov
sbb
clc
sahf
xor
in
sbb
mov
mov
dec
push
mov
outsl
xchg
mov
xor
ds
cmp
mov
and
push
dec
mov
mov
jo
xor
push
dec
jbe
mov
add
xchg
adc
mov
shrl
dec
cmpl
push
mov
fmull
sub
jb
pop
mov
jecxz
pushf
pop
xchg
mov
sub
and
sbb
mov
mov
cli
mov
in
roll
in
call
lret
push
or
clc
jae
pop
test
pop
leave
es
lds
push
sahf
imul
mov
inc
dec
lahf
pop
sahf
push
int
into
cmpsl
mov
roll
fisubl
in
push
bound
cltd
push
fwait
and
test
shll
bound
cmpsb
and
mov
fistl
push
mov
cli
mov
shl
push
stos
xor
xchg
fistpl
inc
push
or
jo
ljmp
ficomps
cmp
sahf
sbb
mov
jbe
sub
addb
cmp
test
loop
push
mov
int
sbb
mov
in
inc
dec
aam
popf
sahf
scas
fiadds
inc
arpl
dec
mov
jo
enter
sbb
fnstsw
addr16
repz
jle
xchg
mov
mov
movsb
xchg
xchg
xchg
mov
les
mov
xlat
cmpsb
lods
cmpsb
rcll
and
xorl
and
iret
cmpsl
out
jge
ret
js
xor
lock
push
jo
jo
xor
movsl
sbb
jle
sti
and
bound
test
xchg
lahf
arpl
in
push
and
pop
pop
repnz
mov
xchg
arpl
cmc
out
mov
xchg
pop
aas
add
popa
cli
in
cmpl
mov
add
dec
xchg
cmp
push
inc
add
sbb
fnsave
cmp
mov
dec
aad
jecxz
lds
jmp
and
cltd
adc
push
aaa
xor
addr16
xchg
adc
push
cmp
stos
xor
fdivrs
mov
and
mov
add
aaa
call
es
cli
fs
insl
test
inc
xchg
ret
dec
jo
add
cmp
xchg
insl
adc
push
ljmp
lahf
lock
stc
int
jl
insb
cmp
addr16
cmp
or
xchg
int
test
jge
cmp
mov
popl
pushf
push
sub
shll
cmp
int
repz
iret
sbb
jno
jnp
dec
stos
xchg
adcb
pop
je
jge
pusha
push
fwait
cmp
movsl
rol
in
insl
mov
mov
mov
lods
add
cmp
adc
aad
dec
mov
xchg
bound
cmp
xchg
scas
push
cmp
ja
nop
mov
in
dec
push
mov
pop
and
push
fisubrl
lret
stos
idivl
pop
decl
and
xchg
je
dec
test
into
adc
popa
aaa
mov
push
jmp
sbb
pop
jmp
xor
das
xor
ss
repz
mov
jnp
jmp
sub
int3
daa
shlb
sub
adc
fs
test
push
cli
movsl
pop
jg
shr
add
mov
out
jp
rcrb
adc
fistpll
jmp
cmp
nop
stos
cmp
mulb
ss
xchg
xlat
cmp
popa
js
emms
addb
ret
jle
fimull
adc
xchg
add
stc
or
add
dec
add
icebp
sub
mov
dec
adc
jl
jo
adc
sarl
adc
mov
mov
into
push
mov
mov
inc
shrl
hlt
lds
xor
aad
adc
push
aam
or
and
xor
xchg
mov
adc
inc
or
fcmove
push
flds
jnp
lret
test
scas
push
push
arpl
pusha
lea
mov
pop
out
inc
push
and
push
paddw
dec
inc
loope
bound
and
sub
sbb
mov
popf
cs
sub
int
dec
xchg
popa
mov
jl
lds
jmp
gs
mov
lock
stc
sub
dec
push
lcall
inc
xchg
or
adc
out
shr
dec
js
sub
mov
push
mov
mov
inc
sbb
ds
sbb
xchg
pop
jg
jo
loop
lods
mov
addr16
div
or
sub
inc
mov
adc
mov
mov
push
movsb
dec
xor
jmp
adc
imul
cmp
sbb
jbe
jp
fsub
repz
pop
iret
sbb
jge
flds
add
into
sbb
xchg
xor
inc
sbb
fsubrl
jae
fdiv
outsl
sub
sahf
in
xlat
enter
ds
daa
jae
in
stos
cld
sar
and
mov
std
icebp
push
inc
adc
mov
fs
test
daa
fnstenv
mov
push
xor
fsin
test
nop
cmp
jmp
mov
xchg
pop
ljmp
clc
out
dec
ja
faddl
les
sub
rorl
push
sub
popf
fwait
iret
outsl
push
inc
sbb
sbb
lahf
aaa
sbb
aaa
aam
add
jge
cmpsb
icebp
sub
sub
in
push
mov
jae
scas
sub
or
pusha
aam
scas
lahf
push
and
xchg
fsin
adc
addr16
leave
or
ss
cli
bnd
or
ljmp
xor
xor
adcb
and
sub
icebp
or
sbb
mov
xchg
and
add
lret
fsubs
push
dec
adc
and
nop
mov
mov
jb
mov
dec
fidivrl
jmp
insl
cld
rcl
adcl
adc
iret
loope
stos
mov
imul
xor
leave
out
and
mov
cmpsb
lock
inc
fwait
inc
cli
jmp
aas
lods
ljmp
adc
pop
inc
adc
addr16
imul
inc
add
icebp
loopne
fnstenv
sahf
add
jp
dec
ss
fdiv
jb
or
mov
arpl
test
cmp
hlt
cmc
stos
cwtl
mov
push
sub
mov
outsl
std
cmpsb
xor
orl
sbb
lods
cmpsl
push
das
shrb
fwait
neg
add
xor
out
sub
in
lret
dec
mov
jo
jg
and
adcb
xor
sbb
adc
dec
dec
rorb
dec
ja
pushf
mov
out
icebp
aam
xor
jb
sbb
cmp
out
fcoms
sbb
pop
clc
inc
cmp
cmp
out
cmp
in
sub
xchg
test
cltd
add
pop
out
into
push
sub
ja
mov
xchg
and
aam
mov
aas
mul
and
pushf
repnz
xchg
or
dec
cmp
push
ljmp
pop
or
frstor
or
jp
push
xchg
adc
or
and
test
jae
test
stos
shrl
bound
lock
lret
fstps
std
iret
add
xor
out
inc
es
smsw
cmp
lahf
mov
inc
lock
or
jno
sbb
inc
je
ret
cmp
adc
jne
nop
lret
out
pushf
cmpb
in
fs
leave
aaa
addr16
je
xchg
int
negb
sbbl
add
andl
or
enter
int3
bound
jl
iret
ljmp
inc
fidivl
orl
mov
enter
push
mov
jmp
in
fcomps
subb
imul
sbb
sbb
scas
lret
mov
push
add
stc
push
or
mov
push
inc
mov
mov
mov
orb
loopne
leave
fld
mov
jge
mov
mov
daa
adc
popa
fwait
push
dec
je
pop
or
or
pop
fildll
call
pop
loop
add
push
adc
mov
hlt
test
xorl
ja
rep
sub
lea
inc
jle
ja
adc
sub
mov
push
pop
push
test
jne
mov
mov
pop
loop
sub
pop
pop
mov
es
sbb
mov
lods
leave
outsb
testb
daa
icebp
pop
mov
jecxz
mov
fimuls
je
lret
cmovno
imul
add
push
ljmp
pop
adc
cs
xchg
pop
movsl
fisubrs
rcrb
loop
xor
adc
mov
ret
dec
lret
cmc
idivb
lcall
dec
nop
scas
inc
or
fadd
xor
daa
inc
jmp
test
xchg
mov
mov
jecxz
push
pop
lods
sbb
add
pop
mov
jae
push
test
xor
or
xchg
add
add
jno
ret
and
pop
cmp
stos
xor
push
in
inc
cmp
and
in
pop
sti
mov
hlt
addr16
push
pop
dec
ret
push
push
and
dec
enter
lret
icebp
push
dec
pop
inc
fdivl
cmp
out
es
lcall
mov
mov
sub
cmpsl
filds
enter
pop
dec
les
xor
cs
inc
add
push
pop
push
push
lret
in
sub
jns
or
xor
push
inc
and
add
clc
sub
bound
sbb
je
in
filds
insb
in
dec
loopne
movsb
jl
mov
fidivl
inc
je
cltd
mov
sahf
mov
cmp
cmp
fisttpll
push
sti
jne
sahf
mov
ficomps
cmp
mov
fadds
cmpsb
pop
stc
clc
inc
mov
imul
repnz
xchg
aam
jecxz
xor
adc
dec
lret
fnsave
int
mov
out
outsl
sbb
pop
aaa
fdivrs
adc
cmc
cli
xor
daa
sbb
test
add
lahf
mov
mov
mulb
and
out
mov
shlb
int
pop
sbbb
fwait
sbb
jp
jg
int
lods
cltd
mov
call
incb
mov
jmp
xor
xor
sbb
mov
xor
xchg
lahf
cmp
push
xchg
jle
jp
addr16
mov
in
jp
push
test
pop
add
mov
cmp
mov
adc
pop
and
arpl
shrb
xor
sarb
outsl
pop
xor
jbe
fscale
test
das
fldt
out
dec
mov
aas
xor
jl
adc
clc
divl
xchg
cmp
inc
out
or
and
cmc
mov
pop
out
lea
out
push
pop
fst
mov
arpl
imul
adc
cld
fstp
mov
or
mov
out
pushf
iret
mov
std
movsl
frstor
pop
stos
inc
add
movsb
shrl
and
call
cmpsb
sti
aaa
adc
bound
clc
jns
rcl
mov
pop
lcall
test
sbb
dec
pop
mov
mov
add
push
inc
xlat
stos
dec
test
std
inc
jbe
mov
fmull
sub
mov
dec
cmp
jb
imul
push
or
shl
fstps
add
pop
mov
movsb
xor
mov
pop
lahf
les
adc
fsubl
out
and
pop
inc
fwait
je
cmpsl
fs
paddq
cmpsb
xacquire
iret
cmp
loope
daa
add
leave
iret
mov
cmp
inc
je
popa
xchg
jmp
insl
inc
xchg
add
enter
flds
mov
stc
and
std
icebp
dec
fldenv
xchg
mov
lods
sbb
and
mov
gs
mov
mov
lea
insl
xor
sub
test
enter
jmp
mov
enter
stc
xchg
add
pop
push
or
inc
jl
out
dec
adc
adcl
arpl
sub
iret
shl
loopne
cmc
shr
lcall
or
mov
popf
cmp
cmp
bound
sbb
pop
lcall
mov
aad
cli
popf
mov
jae
sub
jge
mov
sub
mov
xor
pop
addb
in
sbb
sbb
inc
shll
adc
mov
std
sub
and
xchg
inc
ljmp
jnp
xor
dec
adc
xchg
roll
pop
pop
mov
sbb
mov
push
xchg
jo
mov
adc
jge
je
cmp
pusha
sbb
xor
icebp
out
frstor
ljmp
repnz
xor
sbb
xor
jp
xchg
test
test
mov
mov
stc
push
cmp
jecxz
in
cmp
out
cmp
repz
dec
or
orl
lcall
scas
xchg
int
fmul
repz
cmp
imul
scas
inc
out
jl
add
shll
mov
in
popf
push
roll
in
mov
or
jp
orb
xorl
andb
fdivs
push
jne
mov
into
imul
je
pop
add
test
int
mov
xor
ljmp
or
fmulp
inc
pop
pop
adc
jnp
daa
ljmp
fimull
push
pop
pop
enter
imul
lods
sbb
mov
aaa
inc
mov
lods
adc
imul
lea
loopne
mov
inc
movsb
mov
adc
push
mov
sub
pop
mov
ds
adc
cmp
inc
lcall
jmp
mov
into
mov
pop
mov
lds
cmpsl
inc
es
push
pop
shll
push
jne
movsl
xchg
cmp
fistpl
sbb
movsl
outsl
pop
fcmovnbe
push
mov
imul
add
rcll
inc
mov
or
mov
sbb
push
and
sbb
cmpsb
sub
or
sbb
jne
xchg
add
or
rcrb
dec
pushf
fiadds
jae
or
enter
enter
cli
mov
xlat
push
daa
mov
data16
adc
mov
push
and
pop
cwtl
pushw
test
mov
movsb
add
push
push
lock
lods
in
leave
sbb
adc
cmp
jae
leave
cwtl
jge
mov
jg
mov
sub
pop
mov
mov
xor
daa
hlt
fmull
loope
ljmp
and
gs
lods
out
jo
aam
cs
loope
clc
or
insl
and
cmc
pop
std
mov
das
and
in
add
mov
mov
sub
push
or
sbb
pop
repnz
mov
mov
push
inc
mov
xlat
insl
mov
push
mov
lock
jle
jmp
pop
add
inc
into
lods
mov
sub
xor
dec
sti
aaa
and
and
push
repz
popf
data16
adc
ficompl
not
add
inc
xchg
jae
lods
dec
xchg
cld
xor
sub
sub
mov
pop
imul
cmc
mov
cmpsl
es
mov
les
dec
or
jae
push
xlat
mov
adc
push
hlt
dec
xlat
mov
and
mov
mov
xchg
or
mov
inc
outsl
cli
fbstp
add
pop
jne
inc
dec
xchg
out
fldenv
ficomps
ret
inc
cli
mov
out
roll
sub
cmp
cld
push
jb
arpl
xchg
jp
loope
daa
insb
adc
mov
bound
aam
mov
loope
or
lea
out
adc
shrb
jns
repnz
les
ret
test
loopne
les
xchg
es
inc
mov
pop
jns
xor
enter
mov
out
cmp
xchg
dec
and
mov
sub
test
push
jbe
jno
jle
and
sahf
out
jp
rol
pop
sub
lds
sub
jns
jnp
xchg
popf
test
mov
outsb
mov
into
sbb
enter
add
insb
cmp
aad
jl
dec
pushf
and
cmp
or
popf
pusha
mov
loope
adc
lret
mov
out
sub
mov
xchg
inc
roll
inc
push
sub
popa
popa
shrb
aad
shr
add
push
add
sti
add
in
loope
sub
mov
iret
push
lods
pop
fildll
or
int
dec
mov
pop
xchg
and
cwtl
inc
pushf
jecxz
sub
iret
lds
add
pop
push
or
and
mov
sub
test
pop
ret
movsb
cmpb
ret
xchg
xchg
jg
inc
outsl
sub
jecxz
jne
int3
jne
ds
cmp
xchg
pusha
sub
push
nop
mov
and
out
mov
sbb
das
cmpl
jmp
mov
pop
icebp
adc
mov
and
les
scas
lret
sahf
push
xor
outsb
in
mov
repnz
inc
fbld
in
ret
add
lds
push
lock
test
insb
inc
ret
cmpb
xchg
rolb
and
sub
xlat
fldcw
push
fcmovne
or
or
hlt
mulb
mov
sbb
xor
addb
inc
ret
add
pop
dec
push
pop
push
or
xchg
pop
add
jg
pop
ss
sti
xchg
push
cmp
popf
xchg
push
repnz
push
mov
ds
icebp
lds
cmp
xor
sub
insb
mov
pop
sbb
out
out
out
insb
loope
cmp
out
lods
repnz
xchg
pop
shlb
cmp
mov
cmp
sarb
bound
aad
mov
imul
movsl
cli
aam
rcrb
dec
push
mov
mov
daa
push
pop
arpl
cmpsb
lock
jno
mov
pop
roll
loop
adc
mulb
inc
in
movsl
mov
dec
out
cmp
ret
push
or
aad
fbstp
and
dec
pop
in
js
inc
dec
fnstcw
mov
loop
test
jp
shl
mov
pushf
push
jg
push
pop
jb
arpl
popf
sarb
sbb
push
adc
outsl
adc
arpl
push
negb
movb
movsl
cmpsl
sub
out
scas
xchg
sbb
insl
fistps
or
mov
dec
dec
mov
shrb
jne
jns
mov
pop
pop
ret
lods
xchg
dec
js
sub
cmpb
mov
jno
sbb
mov
push
or
es
je
lahf
pop
jle
test
pop
jle
fimuls
mov
imul
adc
mov
dec
fidivrs
xchg
stos
push
add
push
lods
inc
jbe
mov
rorl
xor
push
ficoml
cld
fs
mov
adc
test
outsl
pop
jb
call
sub
jle
fcompl
data16
mov
cli
mov
jmp
push
loopne
stos
pop
xchg
push
jbe
adc
push
push
sub
push
fmull
pusha
jns
pop
cmpl
jp
js
out
xchg
inc
rolb
mov
xchg
and
imull
out
addr16
ffreep
xchg
mov
mov
stos
inc
push
dec
jno
stc
or
jl
imul
or
inc
adcl
sarl
pop
arpl
out
or
inc
sub
xlat
scas
dec
cmp
call
fidivl
test
enter
sahf
adc
cmc
sti
rorb
xor
movsb
push
es
cli
sub
jmp
insb
jle
les
or
test
pop
lret
pop
and
js
sbb
cld
sbb
movl
cwtl
sbb
movsb
jp
push
loope
inc
and
int3
push
stc
and
inc
sub
icebp
xchg
es
test
and
jno
out
std
mov
out
cwtl
loop
das
xchg
sbb
add
mov
inc
push
adc
or
adc
xor
xchg
mov
add
je
jge
jg
dec
xor
out
adc
xchg
jmp
pop
sbb
psadbw
pop
jae
fwait
cmpsb
std
or
cld
pop
in
clc
mov
fstpt
push
in
std
test
jne
jg
decb
mov
inc
push
or
and
clc
dec
lahf
mov
jg
adc
lret
fsubrl
js
push
dec
inc
ljmp
jge
pop
sarl
stos
pop
imul
lcall
loopne
les
movsl
out
mov
ljmp
sub
pop
scas
xor
orb
loop
mov
xchg
xor
xchg
xchg
dec
jl
arpl
cmp
mov
pop
pop
inc
fwait
and
addr16
mov
push
stos
jg
pop
pop
ss
push
adc
lods
push
stos
pop
adc
sub
fbstp
loop
dec
push
pop
xor
std
in
popa
cmp
push
pop
sbb
cld
dec
mov
mov
xchg
adc
and
fwait
rclb
mov
sub
xlat
aas
and
or
js
cmp
xchg
sbb
ret
aam
fs
sub
and
jb
xchg
sub
addb
imul
imul
hlt
loopne
js
add
insb
jno
mov
or
push
and
scas
stos
xlat
mov
scas
push
cld
mov
xchg
mov
jo
ja
xchg
lock
test
enter
push
mov
test
fwait
loopne
pop
or
loope
cmp
cld
fisubrl
mov
mov
adc
out
cwtl
and
xorl
into
dec
mov
adcl
mov
jp
inc
mov
pop
jle
lret
mov
scas
pop
lea
sbb
fwait
and
xchg
clc
lcall
adc
mov
cs
pop
inc
pop
sti
sub
jo
lock
in
xchg
xchg
in
movsl
jmp
mov
jns
push
popa
sub
leave
pop
rorl
ds
sbb
movsb
popa
jbe
xor
or
mov
sti
adcl
mov
movsb
fsubs
int
das
out
mov
sbb
pusha
pop
ror
in
xor
imul
fidivrs
mov
je
push
mov
and
movsw
rcll
jle
movsl
inc
xor
push
and
dec
je
fwait
xchg
cmp
xchg
ljmp
push
cmc
push
add
add
scas
inc
es
fs
adc
adc
cmpl
mov
in
test
or
adc
icebp
push
iret
jge
lret
dec
add
in
repnz
in
xchg
cs
cmpsb
push
sub
mov
and
add
cmpsl
jmp
mov
or
mov
dec
and
mov
mov
stos
inc
sub
imul
dec
push
push
jno
daa
into
fildll
icebp
jo
xchg
scas
mov
sub
or
jge
test
shl
ja
mov
ss
mov
into
sub
lock
stos
movsb
scas
add
sbb
cmp
out
fnstsw
dec
cltd
adc
xchg
mov
imul
or
pop
cmpsl
fldl
add
or
cmp
xchg
pop
mulb
rolb
cmc
xchg
sti
pop
adc
pop
hlt
push
push
xchg
jo
adc
jns
sbb
rolb
jle
insl
sub
data16
in
adc
mov
lea
fs
dec
je
mov
xor
push
fisttps
addr16
fildl
jl
movl
xor
adc
sbb
sbb
outsl
and
test
xchg
dec
inc
push
ficoml
fsub
xor
in
fucomp
mov
stc
sub
push
in
push
iret
mov
fcmove
or
adc
jns
push
pop
pop
daa
sub
movsb
das
push
mov
es
pop
add
xor
arpl
aaa
mov
mov
clc
enter
stc
pop
sub
aad
or
mov
outsl
rorb
pop
mov
rorb
out
jp
inc
fdivs
xor
ret
in
push
mov
scas
pushf
mov
divl
lahf
scas
add
fistps
out
add
add
push
push
fucomi
and
xlat
xor
pop
pop
inc
and
mov
test
add
push
xor
cmpsb
nop
adc
daa
add
in
adc
push
adc
inc
pop
adc
ljmp
fcoms
daa
sbb
jmp
inc
xlat
or
cmp
fistps
lock
inc
or
jmp
cli
aaa
outsb
sub
mov
scas
roll
fsts
jl
in
loope
dec
push
jle
in
lds
xchg
push
add
fldl
mov
sub
lods
adc
xlat
sarb
xchg
sub
cmp
xchg
mov
pop
orl
inc
xor
jb
push
cld
lea
xchg
mov
jge
inc
mov
push
cli
pop
mov
xor
xor
xchg
inc
pop
add
xchg
inc
pop
fistpl
mov
les
nop
push
scas
push
cmp
lahf
xor
push
imul
dec
sub
sbb
movl
sub
jbe
mov
xchg
out
jns
lods
push
fdivr
cmp
sbb
into
xor
pop
xor
mov
sbb
push
imul
lds
lret
imull
dec
xchg
cwtl
adc
popa
test
aam
jae
test
shrb
dec
inc
lret
es
push
shrb
cltd
cmpsl
dec
lock
cs
sub
incb
lods
pop
inc
fistpll
cmp
push
adc
icebp
xchg
into
in
loope
lret
dec
and
mov
mov
push
mov
outsl
push
xchg
or
jg
cbtw
fsub
mov
push
insl
mov
add
adc
mov
fcmovbe
cmpsb
mov
hlt
inc
testb
mov
push
push
lock
and
idiv
lcall
pop
movsb
xor
cmp
dec
ret
out
xor
sbb
push
xchg
mov
cmp
and
mov
mov
sbb
aad
adc
int3
mov
sti
clc
pop
jno
inc
mov
mov
lcall
push
cwtl
test
addb
cmp
jnp
or
push
popf
push
cmpsb
mov
out
sahf
inc
mov
add
test
pop
mov
frstor
js
insb
out
rcll
sbb
xchg
imul
adc
push
push
pop
out
cmp
dec
pop
mov
cmc
test
push
pop
les
cmc
add
pusha
mov
mov
insb
push
mov
test
and
lahf
outsl
or
movsb
push
add
sahf
jae
loope
or
iret
pop
scas
pop
cmc
test
leave
cmp
xchg
mov
pop
mov
inc
mov
lret
push
rcl
cmp
cmc
mov
mov
fisubrs
jp
xchg
xchg
mov
cwtl
ljmp
lcall
mov
add
clc
mov
test
pop
push
insb
push
add
pop
mov
ror
subl
and
push
cld
inc
pop
adc
adc
inc
stos
movsb
dec
test
ds
loopne
leave
jo
xchg
sbb
pop
adc
sbb
jb
or
fistl
jne
mov
shrl
or
adc
adc
aam
xor
rcrl
out
movsl
lahf
fisubs
mov
and
mov
cwtl
idivb
xchg
sub
jg
mov
sbb
out
push
outsl
test
js
jp
and
or
dec
movsl
sahf
sbb
insb
and
fldenv
fwait
mov
sbb
jecxz
scas
sub
mov
test
test
icebp
aaa
add
movsl
adc
cmp
or
fnstenv
aad
jb
inc
ret
mov
mov
push
ljmp
push
sbb
dec
push
cmpb
mov
iret
and
popf
pop
xchg
data16
xchg
mov
pushl
cmp
neg
sub
nop
or
shl
cmp
lcall
or
loopne
mov
insb
cltd
mov
mov
adc
inc
cmpsb
test
pop
pop
or
aaa
inc
gs
jne
push
ret
loopne
cmp
imul
lds
leave
xor
add
dec
leave
xor
movsl
int3
in
pop
sarb
mov
mov
mov
in
inc
imul
pop
add
int3
jno
loope
pop
add
cmc
adc
cld
push
fdivrs
cmp
fdivs
mov
ret
repnz
shlb
test
push
xchg
icebp
sbb
aaa
add
xor
jo
mov
dec
push
ljmp
xor
jl
movsl
xchg
aas
add
mov
inc
adc
sahf
iret
or
jg
push
xchg
sbb
inc
cmp
icebp
inc
inc
iret
mov
jns
jp
sbb
pushf
sbb
mov
imul
push
fimull
andb
mov
sub
xchg
jp
sti
pop
and
cmp
or
inc
sub
pop
arpl
jecxz
sbb
mov
pop
push
pushf
loopne
adc
and
xchg
mov
loope
push
cmc
inc
push
iret
sub
shll
dec
lahf
pop
mov
mov
pop
ret
and
dec
lret
popf
adc
fisttpll
shrl
cmp
mov
sahf
sbb
xchg
pop
jge
insb
inc
add
mov
sbb
dec
dec
lods
fwait
adc
inc
sub
or
jecxz
mov
das
les
scas
cmp
pop
xor
mov
push
gs
ja
fs
xor
xlat
jecxz
add
test
cmpsb
cmpsb
fbld
cmpb
push
ret
pop
mov
dec
jne
push
sbb
and
jmp
push
in
imul
fwait
mov
push
or
jns
or
out
xchg
scas
fidivl
jge
pop
scas
jle
outsb
jns
lea
or
xchg
mov
fsubrs
push
iret
mov
loope
outsb
mov
jp
loope
jne
out
insb
sub
dec
inc
js
call
hlt
push
mov
jae
mov
lods
push
ret
roll
ljmp
arpl
or
xchg
mov
xchg
xchg
adc
and
mov
mov
std
fucomp
rcrb
mov
sbb
push
jns
add
loope
cmp
pushf
aad
push
out
jae
sub
lcall
or
mov
fwait
call
cmp
jae
inc
mov
fiadds
ljmp
ficoml
add
call
jle
in
mov
jecxz
cmpsl
lods
in
jmp
cmp
xor
and
hlt
sub
xor
add
xchg
sbb
dec
jecxz
pop
sub
fisttps
sub
cmp
lahf
es
andl
das
push
jns
inc
std
adc
lcall
inc
pop
mov
jbe
jmp
adc
mov
movsl
int
xchg
cmp
pop
dec
jg
cli
jmp
or
cmpsb
and
cmpsl
sbb
sub
pop
out
jnp
push
inc
addr16
adc
out
xchg
cltd
in
mov
and
shrb
lahf
xor
mov
adc
dec
cltd
xchg
outsb
mov
mov
or
adc
fists
sub
push
lret
pop
cli
push
shrd
lcall
pop
hlt
gs
arpl
out
add
jns
cs
mov
xor
movsl
cltd
or
outsb
push
pop
xchg
sar
notl
xorl
sbb
repnz
lret
dec
sub
sub
mov
mov
addl
sahf
jb
out
dec
repnz
dec
aam
push
les
int3
add
mov
xor
push
bound
aaa
mov
mov
sbb
out
mov
dec
mov
mov
ret
sbb
stc
add
inc
in
nop
jo
inc
jecxz
xchg
fsubr
fdivl
imul
cmc
add
orl
mov
sti
movl
js
inc
lret
out
insb
and
adc
mov
mov
push
cmpsb
aaa
out
clc
je
imul
mov
inc
add
es
pusha
das
sbb
ds
mov
dec
int
mov
push
movsl
jmp
fwait
sbb
mov
cmp
sahf
addb
dec
adc
pushf
sbb
dec
out
xchg
xchg
mov
xchg
sbb
sbb
sarb
jl
mov
jp
or
adc
insb
and
mov
int
pop
mov
dec
ljmp
mov
xchg
push
aas
xchg
ss
dec
cmp
xlat
push
pop
mov
in
rcll
sub
dec
jmp
inc
popf
add
in
inc
sbb
xchg
shrl
nop
aas
icebp
add
cmpsb
pop
mov
pop
je
test
push
push
add
xor
add
js
movsb
xor
mov
jl
loop
xchg
and
and
jns
dec
fnstcw
repnz
jnp
nop
cmpsl
lcall
adc
dec
push
xlat
fstpl
outsl
or
cmpsl
pushf
dec
mov
sbb
pop
lods
int
cmp
mov
imul
test
sub
dec
xor
sbb
pushf
lock
int
sbb
add
sbb
or
popa
jbe
dec
sti
popa
scas
aaa
scas
jmp
jnp
shrl
xchg
sti
push
push
imul
mov
stc
jmp
jae
cmp
cmpsl
adc
push
loopne
lahf
jp
cltd
loopne
push
inc
stos
xchg
movsb
or
mov
sbb
mov
xchg
xchg
xor
aad
inc
xlat
clc
inc
push
xchg
mov
xchg
fildll
divb
or
addb
and
jmp
sahf
cwtl
lods
lret
fdivl
cmp
xor
lods
dec
fwait
rcrb
es
add
dec
stc
pop
jne
xchg
addr16
loop
cltd
scas
sub
mov
arpl
loopne
dec
inc
mov
adc
jge
inc
push
push
inc
and
outsb
xchg
in
fmuls
rcrl
push
mov
loope
fstps
xchg
and
sbb
movsl
fsubl
mov
out
sub
arpl
pop
push
sub
ret
cmpsl
data16
div
xchg
iret
xor
loop
shlb
pop
adc
outsl
fisubrl
pop
pop
add
mov
cwtl
inc
sahf
imul
pop
in
push
cmp
repnz
int3
adc
adc
inc
jae
lea
mov
shrl
mov
mov
sub
into
stos
pop
call
sbb
xor
pop
or
mov
test
and
pop
sbb
loopne
mov
lods
mov
or
xchg
sbb
cmp
iret
mov
mov
fnstcw
testb
jne
loop
cmp
pusha
insb
pusha
sub
pop
dec
mov
mov
ret
aad
and
add
les
rolb
cmp
jle
lods
idiv
mov
jecxz
pop
cmp
or
jp
lret
mov
jne
call
fstpl
cmp
inc
daa
mov
decl
and
movsl
loope
lret
jg
add
rcll
enter
push
push
imul
je
pop
scas
push
cmp
xlat
lods
mov
hlt
cltd
mov
icebp
pop
xchg
xchg
xchg
adc
adc
dec
out
or
sarl
mov
mov
mov
outsl
adc
push
xchg
or
pop
in
std
sbb
shrl
jns
es
movsl
mov
pushf
sub
icebp
pushf
dec
cmc
or
lods
sub
shrb
adc
and
das
pop
jp
jl
outsl
mov
xor
jb
push
out
sbb
inc
into
orl
nop
jnp
adc
fcomip
jmp
jecxz
pop
lcall
in
cmp
pop
pop
jecxz
xchg
pusha
hlt
cmp
mov
repz
aad
int
mov
xor
push
testl
cmp
add
cmp
and
xchg
lahf
es
sub
loop
jo
or
pusha
fists
outsl
push
hlt
add
outsl
and
daa
sbb
jle
jmp
rcll
movl
aad
loope
cmp
xor
jo
pop
mov
lock
push
in
xor
sbb
rclb
enter
xor
add
sarb
mov
xor
nop
out
fadds
lea
enter
sbb
repz
daa
stc
iret
fidivrl
je
mov
into
mov
shll
lea
sbb
add
lock
rcrl
rclb
in
or
sti
xor
pop
mov
lret
jmp
mov
scas
mov
and
pop
sub
mov
sbb
test
imul
sub
jbe
lahf
or
or
cld
in
and
in
negb
das
pop
sub
dec
mov
mov
add
fstpt
fwait
addr16
sti
aaa
sti
xchg
es
and
xchg
pop
mov
fbld
jo
out
stos
add
mov
sub
dec
fdivs
cmpsb
add
mov
iret
xchg
clc
sub
fistpll
jmp
mov
les
sub
fcmovnb
gs
add
sub
jne
and
movsl
xor
cmp
outsb
hlt
mov
gs
int
enter
sbb
jp
inc
cltd
jp
xchg
repnz
sbb
out
dec
je
imul
mov
stos
mov
lods
dec
pop
and
xor
mov
mov
mov
inc
fsubr
mov
push
sub
cmp
scas
mov
fidivs
sti
test
lods
bnd
add
mov
insb
cmp
cwtl
stos
imul
pop
sti
cmc
xchg
sub
sbb
repz
cmpsl
loope
jno
inc
rolb
jae
inc
fdivl
bound
fcmovb
ss
add
cmp
into
int
aaa
aaa
fidivs
cltd
sbb
loope
xchg
out
iret
push
xchg
sbb
add
outsl
jle
outsb
dec
jg
lds
lock
xchg
mov
xor
pushf
mov
pop
sbb
cwtl
sub
or
lea
rclb
jno
into
mov
adc
stos
mov
mov
xchg
push
cmc
movsb
pushf
fldl
leave
cmpsb
rcll
addr16
jne
jb
paddq
adc
int
sub
aas
mov
push
aas
jge
push
and
sbb
repnz
mov
fwait
push
dec
push
add
add
pushw
call
leave
jne
inc
aaa
mov
mov
fbld
add
adc
stos
jae
xchg
xchg
test
mov
cmp
popf
jge
cltd
and
mov
insb
cld
jg
dec
popa
xor
inc
out
lret
add
std
push
mov
js
pop
pop
int
js
pop
test
fadds
pushf
dec
mov
call
cli
jno
pop
push
sbb
stos
stos
jnp
mov
xchg
aad
ret
mov
lea
push
mov
test
mov
adc
jae
movsb
jnp
cs
movsl
or
mov
xchg
lret
lock
aad
jle
or
loop
xor
mov
adc
dec
or
push
mov
cs
sub
xchg
inc
add
loopne
aad
push
aam
cld
xchg
mov
sub
dec
sbb
mov
clc
push
sbb
js
dec
adc
filds
loope
jmp
shl
mov
or
xchg
movsl
ljmp
inc
ffree
sub
sbb
loopne
rcr
in
es
add
jbe
mov
fnsave
jge
mov
mov
sub
sbb
in
sbb
dec
jg
sbb
push
testb
and
cmc
push
or
shll
jl
fnstcw
dec
sub
test
ss
out
leave
cwtl
arpl
add
mov
cmp
aaa
pop
mov
mov
inc
leave
gs
movsb
mov
insl
add
cli
xor
arpl
add
popl
sub
stos
sub
sbb
and
insb
or
int
scas
mov
test
cmpsl
lea
loope
pushf
add
icebp
les
sub
out
push
popl
sub
in
jl
inc
and
scas
iret
dec
xchg
cltd
and
aaa
sbb
mov
xorb
inc
call
sarl
ret
adc
sbb
xchg
xadd
lcall
movsb
scas
add
outsl
xorb
sub
scas
xchg
pop
pop
jg
addr16
sbb
mov
mov
aas
or
inc
mov
xlat
mov
pop
mov
in
das
inc
sub
test
dec
arpl
lds
mov
push
aad
jne
and
lods
jp
xor
ffree
repnz
fcom
notb
fistps
push
mov
sbb
popf
imul
xor
sub
dec
inc
int3
in
push
loop
pop
mov
xchg
sbb
or
push
push
lods
int
adc
dec
pop
mov
or
jne
aam
in
call
loop
aas
inc
lea
orb
andb
hlt
add
lods
mov
and
enter
jmp
xorl
mov
jnp
orl
ret
xchg
out
add
hlt
or
cmp
fbld
mov
push
mov
pop
iret
mov
mov
sti
fs
sbb
jno
mov
mov
std
lea
mov
in
test
sbb
sarb
mov
adcl
xor
bound
pop
out
rclb
pop
cmpl
xchg
test
mov
ret
out
pop
xlat
inc
mov
xchg
popa
stos
outsb
xor
repz
or
push
and
fmuls
sahf
repz
dec
mov
jle
ss
mov
jle
dec
pop
push
fwait
jbe
adc
test
and
add
lds
je
xchg
lods
repz
repnz
test
push
mov
mov
ret
sub
sbb
jg
int
mov
adc
movsl
mov
mov
cs
adc
xor
dec
xchg
mov
lods
pop
rcrl
cld
je
pop
xor
push
inc
hlt
dec
fidivs
cld
setns
icebp
xchg
mov
clc
xor
mov
ss
jle
out
loope
popa
insl
push
push
arpl
fisttps
and
cmp
cmp
push
pop
sbb
out
mov
mov
mov
scas
mov
push
aaa
xlat
cs
pop
add
sarl
adc
ds
aas
or
clc
add
jo
pop
mov
ficoms
add
jb
xchg
mov
stc
lcall
repnz
fwait
out
imul
orl
int
testl
xchg
cli
dec
xor
lret
pop
ds
add
int3
inc
mov
ljmp
and
sub
fcomps
jno
push
int3
xchg
stos
in
shrb
cmp
mov
shrl
xor
dec
jmp
inc
jae
push
leave
stos
and
aas
dec
push
mov
gs
and
mov
outsl
xor
push
insl
pop
test
test
dec
call
fists
pop
cmp
jo
lret
ffreep
lock
cmp
fsub
imul
aad
flds
dec
jns
and
inc
repz
and
pop
add
imul
cs
out
inc
orb
lods
outsl
or
cmp
adc
sbb
ret
sbb
ljmp
xchg
data16
push
add
sbb
pop
out
aas
testl
mov
dec
fmul
mov
mov
fdiv
aas
lea
scas
add
inc
out
xchg
jno
lahf
add
test
das
sub
adc
mov
sub
test
dec
xor
push
in
aad
les
imul
mov
fucomip
cmpsb
clc
pop
test
push
jne
lea
inc
addr16
jb
push
bound
sub
mov
mov
in
sar
addr16
lods
sub
ja
cmp
lods
mov
bound
mov
xchg
mov
mov
jo
adc
ficoms
ja
iret
out
lods
loop
in
dec
pop
add
jbe
mov
pop
insb
int3
dec
jae
int
and
inc
inc
add
or
lret
pop
sub
cmc
add
int
nop
pop
sub
mov
cwtl
push
xor
cmp
pop
fidivrl
dec
dec
mov
dec
mov
xchg
popf
cmp
cmpsb
sti
mov
mov
ret
mov
fdivs
xor
jge
or
aam
adc
loopne
cmp
lret
ja
aas
inc
and
bound
scas
outsb
sbb
out
mov
cmp
mov
ficoml
in
xchg
mov
in
jno
call
mov
xor
push
jle
cltd
mov
push
cmc
xchg
pusha
out
xchg
dec
xor
xchg
test
jmp
mov
stc
fisubl
sub
movsl
sbb
clc
sub
mov
aas
mov
pusha
subb
cmpl
mov
outsl
les
int
ljmp
js
push
add
fcmovu
pop
daa
in
inc
shlb
jbe
adc
test
stos
xchg
cmp
add
and
pop
aaa
adc
jl
push
xor
cltd
push
sub
divb
and
jl
inc
nop
xchg
ret
pop
aaa
femms
pop
xor
cmp
pop
sbb
xor
rcrl
adc
imul
xchg
imul
inc
mov
jp
addr16
mov
hlt
insb
cmpsb
mov
add
loope
cmc
xlat
lods
mov
ss
jge
push
and
dec
shll
mov
mov
decb
jns
movsb
cmpsl
inc
imul
add
jmp
inc
jg
out
cmpsl
mov
in
lods
push
loope
xchg
mov
mov
mov
sbb
jne
push
fwait
mov
mov
jmp
push
jns
test
or
into
xor
arpl
jne
push
gs
or
push
aad
add
jno
or
repnz
cmp
push
pop
bound
jns
mov
movsl
push
adc
arpl
sahf
xlat
dec
das
aam
sbb
cmp
pusha
adcl
cmc
fmul
cmp
inc
js
sub
mov
arpl
outsb
pop
fbstp
aaa
nop
inc
lret
popl
jbe
or
lret
mov
mov
jmp
or
cltd
cmpsb
ljmp
adc
mov
inc
sbb
mov
jle
rcll
fldenv
pop
sbb
and
mov
jecxz
and
out
pop
push
mov
jmp
ss
inc
and
js
mov
ja
mov
mov
negl
inc
dec
xchg
les
test
cmpsb
mov
sti
in
les
andb
lods
xor
cmc
iret
enterw
jbe
xor
sbb
pop
adc
test
push
adc
test
loope
mov
mov
and
test
cmp
mov
mov
dec
in
push
ret
pop
fiaddl
xchg
pop
daa
xchg
icebp
gs
ds
stos
jbe
int3
in
xlat
int3
dec
dec
mov
test
cltd
sti
in
data16
call
ljmp
mov
mov
in
xorl
lds
divb
jp
mov
or
inc
jg
adc
mov
test
lcall
dec
nop
pop
push
mov
ljmp
loop
sbb
aas
mov
fstps
mov
xchg
mov
push
repnz
test
call
dec
cmp
cmp
sub
and
sbb
lods
cmp
data16
fcomps
fdivl
test
cmp
lcall
ja
testl
mov
and
scas
in
lcall
or
add
in
ss
sarl
jns
mov
out
ret
lahf
stos
pop
add
addb
ss
pop
addl
jbe
push
push
in
inc
xchg
xor
das
sbb
adc
or
xor
cmpsb
inc
jge
xchg
jl
pop
cltd
or
stos
cs
cmc
mov
jbe
sti
inc
cld
imul
sub
xor
adc
inc
mov
int3
fldt
ljmp
push
add
mov
mul
inc
pop
mov
aaa
adc
mov
enter
push
dec
and
adc
sbb
fisttpl
lock
data16
fcmovnu
mov
mov
mov
fcmovne
call
out
dec
and
sbb
orb
bnd
je
addr16
and
ds
inc
adc
les
sbb
ljmp
mov
push
pop
fidivrl
movsl
mov
ds
dec
jnp
push
xchg
aam
mov
mov
jle
and
push
xor
and
das
mov
out
ret
or
ret
dec
mov
int3
push
xor
sub
adc
fcomps
cmp
hlt
subl
cwtl
add
loope
leave
jle
cmp
es
sbb
outsb
cmpsb
or
icebp
sbb
scas
fsubrs
fcmovnb
or
push
inc
rcrl
and
or
mov
cli
jb
add
in
movsb
pop
cmp
fcmovne
xchg
mov
fs
dec
loope
sub
jns
push
push
xor
mov
mov
adc
loop
push
pop
aaa
dec
js
push
rep
push
lret
add
or
test
test
popa
sbb
push
add
adc
dec
sbb
dec
aad
add
jnp
sbb
xor
repnz
jecxz
mov
mov
or
cmp
jp
lcall
into
sbb
cltd
lds
sti
cmp
shrl
sub
fsts
repnz
jecxz
imul
frstpm(287
jae
xchg
and
cld
dec
and
into
leave
insl
sbb
popf
and
rcrb
gs
sub
mov
lret
test
pushf
loopne
shll
add
push
xchg
cmc
aaa
iret
cmp
add
jl
pop
je
add
sbb
cmc
in
subb
pop
aaa
aaa
xor
bound
cmpsl
fidivs
push
shll
arpl
pop
dec
mov
ja
mov
iret
adc
fsts
mov
or
push
mov
and
in
out
int3
push
fistpll
arpl
lret
inc
xor
jge
rol
adc
push
adc
jo
xchg
mov
push
lods
ja
inc
aas
or
lock
pop
cmp
push
add
inc
mov
xlat
add
and
lock
inc
mov
imul
sbb
popa
sarb
lods
push
dec
pop
push
or
push
ja
xor
shl
repnz
add
dec
jb
in
dec
fs
and
jl
xor
dec
mov
cmpsl
not
mov
adc
or
sarl
and
xchg
jo
addr16
cmpsb
mov
repnz
inc
shr
add
aas
xor
fstl
sbb
xor
pushf
mov
ja
inc
jno
sub
or
or
mov
enter
jb
xchg
into
out
lods
xchg
xchg
jbe
xlat
ljmp
addr16
fisttpl
lcall
movsb
sbb
mov
ja
mov
shlb
mov
aad
mov
add
xlat
scas
popa
hlt
push
xchg
adc
mov
jns
jl
lcall
dec
pusha
xor
mov
fs
push
pusha
cmc
jbe
mov
ljmp
inc
shll
sub
xor
adc
cmpsl
xlat
push
pushf
shrb
jb
cwtl
fistps
inc
fs
add
leave
mov
rorw
add
mov
aaa
mov
inc
pop
or
push
cmp
mov
jnp
xchg
sti
repz
out
pusha
adc
mov
mov
hlt
sbb
xor
pop
and
jecxz
call
dec
jne
out
popf
sarb
in
cmpsb
cs
rorb
ja
lock
lret
mov
test
dec
jecxz
mov
mov
push
pop
xor
jp
xchg
loope
mov
stc
or
sub
nop
xchg
mov
bound
mov
neg
cmp
and
jns
lds
bound
inc
cltd
aad
aaa
adc
pop
xchg
scas
ret
stos
push
adc
adc
xchg
push
sahf
inc
insl
mov
push
push
dec
cmovge
mov
fmulp
cld
mov
add
pop
std
je
popa
pop
clc
leave
jne
cmp
adc
fwait
jl
sbb
movsl
mov
jg
ja
sbb
fisttps
lea
lahf
mov
sbb
ss
mov
mov
pop
jns
lcall
or
rorb
lahf
pusha
push
loopne
rcll
aaa
jecxz
aas
or
enter
cmpsb
cmp
mov
sarl
mov
les
aas
sub
jecxz
inc
repz
mov
sbb
or
nop
cmp
je
mov
std
std
daa
adc
pop
rorb
xor
mov
in
mov
add
aad
pop
js
out
rclb
inc
in
shl
pop
jb
mov
pop
mov
sbb
xor
add
ret
mov
or
jmp
js
xchg
stos
rolb
andb
mov
push
testl
mov
mov
add
mov
sbbb
push
sti
cmp
mov
dec
adc
pop
stos
in
flds
xchg
daa
mov
mov
add
cltd
mov
test
push
push
mov
daa
fistl
cmp
xchg
pop
cld
rcr
and
repz
in
mov
push
test
test
add
cmp
pop
out
icebp
mov
je
mov
xor
add
pop
cmp
inc
add
scas
mov
fbld
jb
test
in
mov
std
adc
pop
mov
cmp
xor
adc
adc
lret
jb
das
test
pusha
fnop
cmpsb
or
insb
out
pop
fwait
gs
in
ret
add
xor
jno
or
out
jnp
and
lock
loope
insl
mov
jl
inc
lret
sti
cs
sbb
jbe
sarb
pop
mov
push
mov
inc
js
ja
aam
jg
sub
insl
in
int3
mov
int3
push
pop
mov
insb
gs
pop
and
cmp
test
fbld
shrl
mov
and
movsl
fimuls
sbb
mov
and
inc
sbb
neg
bound
test
dec
cmpsl
cmp
push
hlt
loop
adc
mov
pusha
aaa
inc
pusha
addl
fs
inc
jns
or
mov
push
sub
inc
flds
mov
adc
rclb
pop
add
bound
lds
mov
cmp
out
inc
sbb
sub
imul
jg
mov
push
or
out
stos
xor
test
xor
inc
add
pop
mov
pmaddwd
push
and
loope
out
mov
mov
jae
mov
pop
icebp
fdivs
pop
cmp
xor
pop
sbb
arpl
xchg
jge
xor
mov
or
mov
mov
dec
mov
loopne
ds
jmp
xchg
imul
fwait
sbb
sbb
cltd
or
aam
sbb
dec
mov
and
out
insb
enter
sbb
and
fdivrs
pop
sbb
aas
in
cmpb
arpl
adc
sti
dec
ffree
addl
and
pop
nop
sbb
push
xchg
js
loopne
shlb
mov
aam
mov
xor
jge
xorb
dec
out
dec
mov
add
loope
fnsetpm(287
cld
push
scas
inc
dec
cmp
testl
sbb
fstps
add
lds
push
rorl
jmp
dec
jle
jg
and
ret
aad
xchg
cmp
out
test
icebp
cmp
sbb
xchg
loop
and
fmull
cltd
cli
test
daa
out
pop
out
mov
rcrb
mov
fisttps
add
lods
lret
jmp
mov
mov
je
pop
mov
clc
ficompl
in
inc
pop
mov
or
xchg
pop
pop
or
fldcw
xor
icebp
cmp
jno
push
or
lcall
call
xchg
add
int
hlt
lret
sub
sub
fstpl
andl
xor
hlt
lods
pop
lret
outsb
inc
or
test
and
cmp
xchg
and
adc
dec
adc
xchg
adc
jb
out
mov
or
adc
xchg
pop
push
lret
pop
stos
pop
pop
imul
push
lods
pop
lock
jmp
out
jae
add
xchg
fbstp
push
inc
orb
in
ficoms
in
pusha
lods
cli
out
fwait
jmp
out
mov
popa
sbb
loop
int3
and
xchg
pop
cmp
xchg
xchg
mov
into
imul
sbb
xchg
aas
addr16
sbb
out
out
sbb
ljmp
xchg
push
push
cltd
ds
aad
fsubl
cmp
or
not
jmp
test
enter
repz
xcrypt-ofb
cmpsl
stos
inc
cmp
sahf
popf
mov
cmc
cld
mov
incl
jp
jns
repz
rorl
stc
xor
add
lods
popf
pop
rorb
out
aas
call
lret
xchg
jmp
cmp
arpl
push
and
mov
and
sbb
fisttps
test
pop
fucomi
xchg
mov
lcall
scas
xlat
out
bound
sbb
daa
sbb
out
or
adc
call
aam
push
inc
mov
mov
outsb
lods
pop
bound
xlat
stos
test
aaa
test
mov
jg
out
pop
mov
les
loopne
testl
inc
cmp
dec
nop
ds
cmc
int3
imul
pop
clc
cli
mov
mov
sbb
pop
mov
pop
inc
pop
or
arpl
push
pop
pop
and
clc
dec
mov
cli
pop
add
repz
push
xorps
test
pop
imul
mov
mov
mov
stc
shl
mov
aam
subb
pop
call
rcrl
lahf
pushw
sub
rcr
lods
test
andb
std
addr16
negl
adc
jno
push
mov
cmp
sbb
inc
sub
divl
and
sbb
cmovge
out
mov
cltd
adc
mov
pop
push
idivl
lcall
lahf
sbb
js
hlt
xor
xor
adc
rcrl
jae
fldcw
loop
cmp
push
pop
popf
aam
into
xor
push
repnz
js
cmp
lea
xor
aas
test
rolb
hlt
lods
xor
push
dec
ljmp
clc
add
ds
ds
or
mov
xchg
enter
mov
imul
mov
add
xor
nop
pop
inc
pop
scas
popf
lret
mov
hlt
jp
cmp
mov
push
push
sbb
xchg
ljmp
push
lods
xchg
rcrl
pushf
cmc
push
mov
stos
outsb
xchg
sbb
add
dec
scas
arpl
mov
test
dec
inc
aam
ret
aaa
inc
adc
mov
sub
adc
mov
and
fisubl
sub
or
into
mov
fcomps
inc
add
pop
sub
add
jp
int3
xchg
sti
sahf
mov
inc
outsl
sbb
bound
lods
popa
clc
enter
jne
mov
scas
scas
stc
mov
pop
sahf
sbb
mov
push
ret
xor
xchg
sub
pushf
sbb
cmc
xchg
push
mov
outsb
sti
pop
sahf
cmc
test
sub
xchg
data16
cltd
fisttpll
mov
or
mov
mov
jns
lods
mov
outsb
sub
xor
xchg
and
mov
arpl
add
dec
add
jge
dec
inc
xchg
mov
popf
rcrb
pushl
add
pop
mul
sbb
and
clc
mov
mov
icebp
adc
clc
test
sub
dec
mov
insl
fldcw
xlat
dec
jo
fsubrs
sbb
jns
repnz
mov
cmpsl
ljmp
mov
out
sbb
xchg
cmp
xor
mov
xor
dec
test
and
icebp
dec
mov
test
cmp
or
or
or
ja
sahf
mov
inc
xor
jne
pop
out
pushf
cmp
int3
adc
mov
jb
stos
fists
fisttpl
clc
inc
dec
imul
push
shll
push
popf
repnz
push
lret
lock
mov
mov
lea
inc
cmp
imul
cld
push
out
xor
aas
movsl
jecxz
out
movsl
and
inc
mov
ret
jnp
add
or
addr16
js
mov
ret
test
fiadds
stos
mov
iret
inc
loop
sarl
fcmovnb
js
mov
jg
adcl
lods
and
adc
dec
rorl
adc
push
add
add
cmp
and
cld
or
push
lods
int3
jb
test
bt
cmp
movl
dec
push
mov
iret
in
pop
cmpsb
loopne
ret
idivb
mov
fimuls
cmp
lahf
stos
pusha
xor
aad
das
sub
cmp
push
mov
add
push
mov
aas
call
dec
stc
adc
mov
aad
pop
pop
fildl
xchg
xchg
test
stos
jecxz
insl
and
dec
pop
inc
and
xchg
mov
cmp
mov
push
aad
xchg
pop
xchg
xor
lods
ja
aas
aaa
loopne
lcall
push
stos
outsb
pusha
rcr
aam
lret
and
cli
fstl
cltd
dec
jecxz
mov
jno
xor
and
negl
push
fsubs
ljmp
pop
jge
leave
scas
and
jp
add
and
xchg
jmp
sti
cmp
aaa
cli
sub
iret
subb
rcll
andl
sub
aaa
scas
fistpll
dec
jnp
scas
mov
in
adc
xchg
jmp
clc
test
mov
xor
stos
aaa
and
push
aaa
stos
jnp
adc
add
sbb
test
mov
fistps
pusha
cmp
sahf
mov
push
pop
lret
fstps
mov
xor
mov
and
cmpsl
incb
or
jmp
fildl
pop
addr16
sbb
push
mov
dec
fst
xor
iret
ljmp
fmull
inc
xchg
arpl
ss
or
stos
jns
cmp
loope
pop
push
rcrl
cmpl
xchg
out
add
inc
sub
sbb
sub
std
sub
imul
cli
mov
in
test
out
lods
and
sub
cmpl
mov
outsb
scas
fs
aam
aam
les
roll
daa
imulb
adc
lods
in
shr
sbb
fsubs
test
push
push
rcl
mov
js
in
rcrb
cli
mov
dec
add
iret
lret
stos
enter
sbb
lods
std
lods
mov
test
sahf
clc
mov
pop
xchg
dec
call
cmp
pusha
addl
mov
push
fbld
lahf
enter
push
cmpsl
inc
and
xor
push
imul
sub
xchg
xchg
into
xchg
or
les
dec
jae
mov
fs
lcall
clc
pop
andl
daa
das
push
inc
mov
inc
fisttpll
jo
aad
shlb
mov
iret
movl
add
rorb
addr16
lds
std
sub
jle
sarl
jae
mov
inc
inc
cli
cmp
jne
mov
mov
outsb
stos
mov
outsb
or
lcall
dec
lods
push
and
dec
adc
mov
mov
cwtl
rcl
dec
mov
dec
lea
push
in
push
add
sub
dec
inc
xor
mov
or
push
add
pop
mov
push
lea
repnz
pop
stos
cs
enter
repz
add
cmpsb
dec
cmpsl
cmp
lahf
lcall
int3
daa
add
out
xchg
dec
add
and
test
mov
lods
xor
pushf
xchg
mov
jmp
push
sub
lea
cmc
addr16
fwait
sbb
bound
sub
rcrl
loopne
in
and
cmpsl
insl
sti
dec
jp
sti
sahf
mov
cmp
mov
mov
dec
dec
incb
or
mov
mov
test
and
cltd
sahf
inc
adc
popa
fildll
xchg
xor
mov
lcall
call
add
and
add
jne
ss
pop
xor
xor
je
xor
inc
jno
mov
bound
pop
cltd
jb
mov
xchg
scas
cmp
add
mov
mov
inc
hlt
jae
push
pop
cwtl
in
dec
jbe
stc
std
mov
sbb
pop
out
mov
lcall
xor
add
inc
clc
jns
mov
fptan
cmp
sbb
ret
in
inc
int3
sub
popf
dec
mov
mov
dec
lds
jle
add
push
xchg
add
iret
sbb
call
mov
add
loope
scas
mov
lods
js
inc
sti
bnd
hlt
pop
pop
icebp
add
sbb
cmp
jl
movsl
cmp
push
bound
fcomps
insl
gs
dec
jno
sbb
jp,pn
test
inc
sbb
pushf
aad
pop
jmp
gs
sbb
and
iret
jns
push
mov
fwait
fwait
mov
pop
sahf
iret
inc
push
fs
adc
jecxz
xchg
add
movsl
ret
xchg
sub
fcompl
add
jbe
pop
out
lret
jb
outsl
incb
or
jg
fmull
inc
push
flds
jae
lcall
sti
xor
fs
stos
dec
movsb
xchg
sbb
push
inc
fs
mov
pop
inc
cmp
fmull
mov
pop
aad
call
nop
out
sbb
dec
jne
mov
imul
test
adc
or
lret
mov
push
mov
pop
xor
test
fisubl
mov
fldt
adc
mov
lahf
lock
mov
inc
fisubrs
icebp
fs
adcl
lea
mov
push
mull
je
jmp
call
xlat
ret
stc
fidivrs
mov
push
lods
pop
push
xchg
test
and
xor
mulb
mov
mov
into
ja
add
mov
pop
gs
mov
cmp
fstps
dec
mov
dec
mov
mov
sbb
mov
std
sti
mov
inc
push
pop
sub
pop
inc
stos
pop
shlb
bound
daa
sub
sahf
xor
mov
aam
inc
inc
or
rcll
test
je
in
leave
lcall
add
data16
cmp
pop
ror
dec
mov
out
outsb
lea
data16
in
aas
mov
mov
in
fs
pop
repz
shlb
ss
aaa
dec
mov
pop
lods
fstps
jecxz
xchg
rcll
inc
ficoms
enter
push
in
aam
lret
push
pusha
mov
std
jnp
add
insb
fstl
push
fwait
xor
add
adc
rolb
or
mov
imul
lds
sti
sahf
faddl
or
insb
cmc
mulb
jns
popf
mov
stos
aam
push
cmpsb
loope
daa
test
xchg
cmp
daa
mov
test
pop
addr16
je
out
fcomps
std
out
push
pop
mov
or
and
dec
add
das
inc
push
test
iret
jne
std
xchg
add
loopne
stos
out
out
xchg
cli
mov
pop
jns
mov
pop
and
in
outsl
xor
aad
mov
mov
pop
sub
insb
xchg
pop
jl
add
into
jno
fdiv
popa
jl
push
mov
aaa
sub
mov
fwait
sbb
cmpsb
mov
aad
test
lea
loop
in
pop
stc
pop
xor
dec
push
sti
inc
push
and
cwtl
mov
dec
test
push
dec
cmp
jae
dec
popf
mov
cmp
and
cmp
int3
pushf
add
jo
fs
jl
out
cmp
pop
sub
mov
lahf
bound
je
inc
xlat
int
pop
cmpsl
lahf
jb
out
ds
cmp
stos
xor
dec
nop
jne
lret
fstp
mov
mov
mov
in
add
fdivs
and
jb
idivb
out
popl
jp
lods
negl
lds
add
or
subb
clc
mov
xchg
pop
inc
add
xor
mov
orb
fs
pop
cmp
cwtl
mov
mov
dec
call
mov
in
fcmovnbe
inc
loope
push
xor
bnd
lock
repz
cmp
sahf
mov
out
sub
xor
and
push
add
stos
loopne
fs
std
mov
push
mov
fimuls
dec
mov
dec
loopne
shlb
cmpsl
daa
lods
das
das
lret
mov
jl
fdivs
sbb
sarb
lds
aam
inc
jmp
lret
lods
mov
sbb
lret
fsubrl
jge
ret
push
and
ds
scas
mov
test
cltd
scas
shr
dec
subl
mov
adc
push
lea
sbb
loope
into
test
lahf
ja
das
leave
add
les
sbb
push
push
dec
xchg
pop
hlt
add
lods
fidivrl
shlb
dec
pop
xlat
pop
jl
push
dec
xchg
push
mov
and
rcrb
jmp
loopne
fbld
aam
loop
stc
fwait
mov
mov
popa
out
sub
nop
fwait
push
loope
daa
or
adcl
inc
fbld
adc
mov
adc
xchg
pop
mov
imul
lds
mov
notb
pop
adc
adc
sbb
cmp
aad
xchg
and
bound
or
mov
int3
xor
mov
mov
std
cmp
aas
and
movsb
dec
addps
mov
cmp
scas
cmp
jae
pop
and
cmp
out
inc
xor
in
fwait
xchg
ds
dec
into
into
push
mov
lock
nop
pusha
and
movb
jecxz
sub
sbb
ljmp
in
and
push
sub
mov
rcll
adc
xor
arpl
mov
lcall
mov
mov
insb
push
clc
test
xchg
test
or
adc
lock
and
cmp
adc
inc
cmpsl
push
mov
xchg
lea
rclb
lret
inc
jp
in
stos
push
mov
sbb
cmpsl
sahf
pop
dec
xor
mov
scas
addb
arpl
aam
cli
dec
hlt
enter
lods
cmpsl
push
shll
int3
xchg
sbb
imul
fcompl
adc
mov
into
push
and
mov
comiss
mov
push
sahf
ss
pusha
sub
sbb
fisubl
dec
icebp
call
lret
outsb
sub
aaa
xchg
ret
in
fs
xor
push
sub
sub
addr16
push
xchg
jns
pop
mov
or
loop
loope
sahf
push
and
adc
aas
lods
pop
loop
outsl
cmpsl
fdiv
icebp
fnstenv
xor
insb
push
mov
loop
out
push
xchg
add
fisubs
popf
mov
xchg
dec
rclb
sbb
jno
add
mov
push
mov
pusha
hlt
inc
adc
xchg
push
or
cmp
jle
xor
std
loope
or
mov
or
and
les
outsl
pop
mov
gs
mov
std
je
cmpsl
fmuls
fwait
mov
sbb
jle
js
push
pop
inc
mov
aas
mov
aaa
rclb
popf
jmp
push
push
cmp
stos
rcrl
addr16
inc
xor
mov
movsl
sbb
icebp
lea
add
data16
movb
mov
dec
dec
pop
pop
roll
cmp
add
xchg
ljmp
mov
sahf
mov
rolb
lods
pushf
sbb
xlat
imul
cmp
sti
sarb
add
cmpsb
pop
cmc
mov
jb
xlat
std
jbe
cmpsl
and
mov
testb
dec
cmp
fsubp
jmp
lcall
pop
xchg
push
in
out
pop
dec
daa
int3
aas
js
mov
lods
test
dec
xchg
sub
test
and
ja
xor
repnz
jo
div
out
int
in
push
jnp
mov
and
call
mov
and
cmpsl
les
add
or
js
jbe
add
or
dec
fisubs
xor
mov
lds
test
jno
sub
ja
repz
repz
sbb
jge
sbb
xor
addl
push
dec
xchg
leave
mov
fcoms
popf
iret
pop
dec
push
scas
jo
inc
cmpsb
adc
push
push
je
rcrb
mov
les
jg
shll
jle
clc
add
xchg
or
pop
fdivrp
div
jmp
jg
jb
sbb
and
int
mov
adc
and
cwtl
int
inc
stos
cmc
dec
in
clc
cmpsl
into
adcb
and
dec
call
rorb
xchg
dec
add
sbb
mov
bound
enter
mov
test
decl
cli
mov
pushw
push
mov
pop
repnz
inc
adc
test
jbe
in
xchg
inc
out
test
sub
adc
mov
jns
inc
or
adc
mov
insb
cmp
enter
mov
outsb
rorb
mov
movsb
iret
in
xchg
xor
xchg
rcrl
push
jb
jmp
fwait
pop
cmp
mov
pop
dec
adc
mov
mov
aam
dec
pop
mov
push
jo
test
mov
stc
mulb
xchg
cmpsb
in
cmpsb
inc
pop
loop
jne
sbb
adc
ficompl
xchg
xchg
sub
sbb
test
mov
loopne
xchg
andb
xorl
and
mov
mov
push
jno
cmp
gs
mov
inc
inc
fstl
lret
les
aas
adcb
xchg
leave
fwait
ja
pop
loop
jecxz
jbe
xchg
or
lret
testb
dec
mov
and
scas
sar
pop
mov
pop
cmp
cld
xchg
aas
outsb
xor
int
mov
inc
bnd
addl
lahf
adc
dec
and
arpl
test
fsts
jle
int
cs
inc
cli
divb
xor
ret
xchg
les
or
outsl
push
movsb
movsb
xor
ret
popa
add
mov
pop
mov
fs
lahf
popf
or
or
lock
sub
lods
addr16
les
test
inc
cmp
or
xor
or
lock
xchg
out
popa
mov
jae
adc
mov
outsb
into
test
sbb
imul
push
lahf
mulb
cwtl
push
xchg
push
aad
pop
insl
xchg
ret
pop
dec
jle
shlb
leave
inc
jmp
xor
xchg
lock
test
adc
mov
loop
and
jne
enter
push
scas
inc
inc
sbb
mov
sbb
xor
aas
mov
stc
fdivrl
ljmp
out
das
jp
xor
push
add
add
or
dec
adc
cmc
subl
scas
lock
out
or
insb
mov
pop
lret
bound
pop
cmp
dec
xor
jge
nop
icebp
jae,pn
xchg
or
mov
or
hlt
dec
sub
dec
fsubs
ljmp
rorl
stc
ljmp
sub
arpl
mov
movsb
or
push
jnp
sbb
es
test
sbb
mov
jle
icebp
inc
stos
ja
fwait
lock
aas
aaa
int3
jbe
js
insb
adc
mov
mov
sbb
sub
and
fnstcw
and
or
shll
sbb
mov
sub
dec
fidivrs
js
pop
cwtl
jae
das
and
pushf
lret
xor
add
mov
shll
insl
mov
dec
dec
lahf
inc
lea
push
or
or
xor
gs
stc
push
inc
adc
mov
cltd
test
fidivs
jmp
pop
or
mov
push
loop
xor
mov
stc
or
mov
in
loope
fldl
adc
lods
adc
dec
fcom
cmpsl
push
jb
dec
ss
push
aaa
and
jns
and
xchg
gs
pushf
imulb
dec
cwtl
ret
xchg
ja
or
sbb
push
mov
push
sub
jae
dec
iret
adc
cmp
inc
xlat
push
jo
pop
pop
mov
inc
mov
push
jge
into
jmp
push
add
mov
or
nop
cmp
mov
dec
mov
call
cmp
imul
lret
aam
pop
pop
xor
orl
and
lds
flds
in
jbe
mov
arpl
sarl
call
xchg
dec
dec
mov
lods
inc
sti
push
int
mov
or
push
jmp
inc
in
and
and
pop
push
and
jb
jne
cwtl
jle
jmp
jo
adc
stos
ljmp
insl
mov
mov
ud0
push
ss
inc
dec
popa
or
out
xor
mov
into
sbb
cltd
dec
xor
enter
xchg
int
mov
add
test
ljmp
xor
jp
pop
orl
pop
outsb
jmp
imul
fsubrs
mov
arpl
test
insl
idivb
pop
add
mov
in
dec
jecxz
and
js
aaa
leave
in
cmp
lods
sbb
std
mov
into
fptan
jmp
imul
xchg
mov
pop
cmp
mov
out
imul
les
xor
or
jno
mov
into
aad
popf
sub
pushf
loop
or
divb
lea
hlt
mov
xchg
inc
xor
iret
dec
imul
pop
cmpsl
push
into
adc
mov
pop
xchg
lods
enter
je
bound
test
loop
jecxz
out
jmp
bound
xchg
mov
ljmp
cmp
dec
insb
dec
andb
lahf
mov
pushfw
ret
adc
jo
add
repz
or
xchg
mov
mov
or
fincstp
xchg
sti
jae
xlat
mov
pop
out
pop
inc
push
fstl
cmp
push
subl
cmp
aas
inc
mulb
cmp
clc
pop
fidivrs
rolb
xchg
pop
lahf
outsb
sub
repz
mov
and
and
sub
adc
rsm
ds
cltd
jl
pop
cmp
sub
push
rcrl
repz
jne
gs
lods
lea
stos
lahf
das
lods
add
adcl
inc
jmp
or
mov
or
bound
mov
xor
vmovhpd
inc
popa
mov
or
fwait
ja
add
sahf
push
sub
fisubl
dec
jae
jo
pop
dec
dec
xor
mov
pop
mov
xor
sbb
add
push
dec
ret
imul
xor
repz
xor
fdivp
mov
push
arpl
fwait
int
in
adc
into
cltd
push
roll
jmp
push
add
icebp
push
jbe
sbb
dec
testl
mov
xorl
push
jle
mov
xor
fs
mov
iret
ds
adc
mov
ljmp
jb
jg
and
mov
jle
fcomps
out
lock
inc
mov
das
mov
in
cmpsb
stos
idiv
jle
pop
nop
push
adc
lock
sub
aad
ficoml
cmp
repz
add
xchg
clc
mov
filds
push
cmc
fs
xor
jmp
xor
lods
push
push
dec
mov
fucom
and
cmp
mov
imul
fisubrs
lret
sub
mov
mov
lods
adc
pop
xchg
add
jge
icebp
jne
pop
js
jbe
negb
std
inc
push
sbb
push
jl
push
rorb
inc
sbb
dec
xor
fs
fwait
ja
call
mov
push
repnz
mov
mov
addr16
xchg
callw
xchg
testb
xchg
lahf
outsl
psubw
out
and
push
fmul
mov
stos
adc
and
fildl
sub
mov
mov
xor
lock
ror
ljmp
push
xchg
mov
sub
ret
fdivl
dec
cmpsb
push
mov
push
xchg
lods
fcoms
mov
test
cmp
je
aaa
inc
rorb
dec
push
add
cs
xor
sbb
bound
inc
jnp
aad
repnz
cli
adc
mov
mov
adc
insl
xor
xchg
mov
sbb
xchg
jmp
add
shlb
or
fdivs
out
test
pop
add
push
in
lods
adc
or
cltd
test
js
insl
pop
ss
insb
dec
push
sub
ficoms
lods
das
ds
in
sahf
jns
outsl
pop
jg
inc
dec
lahf
mov
test
pop
jge
jnp
add
dec
sub
out
xchg
test
pop
insb
fisttpl
scas
sub
sub
push
es
push
sbb
push
mov
jmp
pushl
mov
sahf
xor
sbb
sbb
bound
arpl
add
insl
xor
mov
adc
adc
jbe
enter
nop
and
out
in
stos
jecxz
mov
or
cltd
inc
add
push
lret
sub
lahf
mov
hlt
mov
cs
std
iret
dec
and
mov
cmc
xchg
ljmp
sub
mov
mov
xchg
add
xchg
repz
dec
adc
mov
shrb
add
jle
fimull
mov
test
insb
jbe
sub
in
adc
jp
add
inc
mov
inc
and
stc
dec
pop
testb
push
jl
xor
aam
in
xlat
cmp
push
addb
stc
outsl
adc
daa
xchg
divl
test
inc
sub
mov
xor
cwtl
jnp
fstps
adc
add
hlt
jle
call
xchg
popf
cmp
jb
imul
or
aam
pop
addl
test
lods
sbb
loop
push
push
into
cmp
leave
jl
std
mov
jo
pushf
xor
or
pop
ret
jb
leave
and
and
lret
and
dec
lock
dec
js
adc
pop
cmpsl
jp
cmc
and
adc
xchg
mov
dec
nop
shrb
push
sbb
adc
imul
pop
rclb
pop
and
adc
and
jno
pop
lods
cmp
leave
sub
loopne
adc
mov
jbe
insl
subb
out
int3
movsl
inc
aad
aas
clc
aaa
scas
gs
lock
add
mov
jl
inc
ss
xchg
cmp
mov
xor
aad
dec
lret
sub
bound
jne
add
adc
icebp
stos
lret
dec
cmp
jo
das
stos
dec
cmp
orb
in
outsb
jl
aaa
xchg
out
and
sbb
mov
mov
cmp
rclb
in
fcmovu
adc
xor
pushf
jl
jae
lods
adc
sub
pusha
subps
adc
gs
sub
je
sahf
scas
xor
xchg
lret
imul
call
mov
dec
frstor
movsb
les
js
sahf
ret
push
push
mov
add
xor
pop
lds
and
nop
aaa
lret
jmp
push
push
sub
inc
pop
inc
cltd
fnstenv
mov
dec
ss
ljmp
jns
mov
jnp
xor
jecxz
add
popf
sub
scas
xor
sub
negl
and
cmp
mov
cli
jbe
stc
push
ljmp
pop
dec
andb
cmp
fwait
mov
add
inc
pop
push
stos
cmpl
aam
in
lcall
cmp
cmp
mov
cmpb
dec
adc
jnp
leave
cwtl
and
das
adc
and
ja
adc
or
adc
and
outsb
jle
xchg
cmpsb
push
or
xchg
ja
dec
xorb
sbb
lea
push
arpl
mov
insb
cmp
xchg
bound
push
mov
cmpsb
iret
int
xchg
test
fmul
cmp
cmp
adc
les
cmpsl
push
adc
addps
cmc
fsubrp
sbb
in
in
popf
xchg
sub
mov
mov
jnp
mov
ss
rorb
imul
sub
fabs
jns
movsl
aam
mov
mov
pop
mov
data16
leave
out
xor
jmp
mov
stos
fdivs
push
xchg
pusha
inc
imull
ret
leave
dec
addr16
cmpb
dec
ret
sbb
xchg
call
xchg
cld
ret
add
stos
push
mov
mov
in
andb
push
add
push
out
subl
push
adc
ret
in
xchg
cld
push
sbb
inc
pop
or
mov
in
adc
push
ffreep
fbld
dec
mov
add
das
sub
xlat
push
rcr
pop
mov
jmp
xchg
fmul
call
cmpsl
rcr
cli
inc
mov
hlt
jne
lds
cmp
pop
xchg
cmp
andl
lock
sub
push
and
imul
insl
cli
ret
dec
add
mov
mov
mov
ss
lock
jle
movsl
call
mov
jb
mov
pushf
iret
roll
dec
mov
decl
xchg
and
xor
pop
cmpsb
xchg
pop
dec
push
add
test
jo
roll
fstpt
out
loopne
mov
push
or
xor
cmp
adc
xlat
push
fwait
mov
arpl
ja
cmp
lds
mov
stos
xlat
mov
fadds
sti
push
fistpll
jecxz
xorb
cmp
dec
inc
mov
or
cld
jae
add
dec
mov
mov
jg
ds
mov
mov
stos
nop
mov
clc
lahf
sbb
mov
mov
mov
push
add
std
movsb
dec
dec
dec
andb
jp
stos
lahf
in
jbe
sbb
fsubl
push
repnz
lods
lods
mov
cmpl
or
loope
hlt
mov
enter
ljmp
sub
sub
xchg
jb
push
js
sbb
leave
xor
or
xchg
inc
js
push
cmp
mov
mov
inc
out
xor
aas
sbb
jb
loop
out
xchg
lcall
xor
dec
cltd
fwait
xchg
sti
cs
lock
add
sbb
lods
pop
test
mov
pop
leave
jb
add
loope
out
rorl
jle
cmpb
in
gs
lds
adcl
mov
and
jno
xchg
push
rorl
push
std
inc
shlb
nop
stc
les
xchg
into
sub
mov
add
in
xlat
jns
imul
leave
add
clc
sub
nop
mov
mov
add
cltd
mull
outsl
out
or
ljmp
mov
outsl
stos
pop
sub
movsl
in
outsb
cltd
aam
arpl
nop
pop
js
lock
push
stc
out
cmpsb
cli
mov
std
aas
js
pop
add
xchg
push
add
push
cvtdq2ps
inc
in
cmp
cmpsb
adc
out
jbe
xchg
sbb
je
push
pop
jo
pop
mov
jle
mov
sbb
pushf
les
popa
push
addr16
mov
loopne
pop
sub
adc
out
ljmp
adc
stos
int3
sub
mov
adc
lret
pop
adc
inc
dec
cmc
push
pop
xchg
add
jbe
and
stc
enter
xor
out
cmp
in
hlt
popa
fyl2xp1
cmp
fs
and
shlb
mov
test
in
pop
dec
push
adc
movsl
dec
adc
adc
int3
and
mov
jo
dec
mov
aaa
jge
leave
scas
aaa
cmpsl
out
jmp
cltd
and
push
aam
and
sbb
into
inc
mov
sbb
jno
inc
rcrl
cmpb
imul
add
cmp
adc
ja
push
and
pop
inc
sarl
jns
adc
xor
jmp
daa
sbb
add
movsl
xor
push
addr16
es
lret
inc
and
daa
fcmovnb
ret
or
dec
mov
ja
roll
add
jns
xor
jg
mov
jne
andb
inc
mov
sub
cmp
sbb
adc
cmp
inc
lcall
pusha
and
xor
rcl
js
test
mov
outsb
or
repnz
push
fnstsw
roll
fs
mov
lods
data16
rclb
lods
aas
sub
push
mov
adc
pop
jp
shlb
push
push
scas
jne
mov
das
xchg
jbe
jp
dec
adc
shr
xor
lcall
gs
loopne
push
pop
inc
adc
cmpsl
imul
icebp
aas
fwait
jne
lcall
jge
xchg
int
sbb
sub
jne
lahf
add
ja
dec
cmp
adc
xchg
aam
dec
cmp
mov
sbb
pop
jbe
lret
mulb
mov
aam
push
jb
test
lds
aam
out
mov
push
or
sub
push
push
sbb
xchg
shlb
mov
fildl
hlt
push
pop
bound
pop
xchg
xor
mov
and
into
pop
sub
adc
call
test
sbb
xor
pop
insb
js
fdivrp
add
mov
leave
arpl
cwtl
test
fs
or
sub
lret
ljmp
and
push
jecxz
pop
aam
dec
xchg
pop
pop
icebp
sbb
and
push
test
imul
mov
loopne
mov
popa
xorb
ret
sbb
lret
push
adc
dec
outsl
mov
sar
cmp
or
icebp
push
xor
pusha
gs
mov
stos
outsb
scas
leave
sub
jp
inc
jge
mov
scas
adc
out
and
lret
add
cld
jne
jmp
push
cmp
mov
test
cmp
clc
xor
ret
mov
inc
mov
add
repz
push
dec
mulb
jne
push
mov
mov
jb
test
scas
cld
jg
xor
lock
jno
pop
sub
arpl
bound
fisttps
sub
in
inc
dec
and
mov
rcr
movntps
pop
jb
nop
fs
sub
lahf
mov
and
out
sbb
pusha
pushl
es
mov
add
js
ljmp
sti
sbb
lcall
stos
aas
loop
out
mov
in
mov
add
out
aam
ret
aad
sbb
cmc
cmpsb
mov
add
mov
fistpl
jae
inc
shlb
jle
negl
in
das
in
add
and
jbe
or
clc
mov
xchg
mov
ficoml
dec
mov
push
adc
mov
lock
mov
daa
push
out
scas
cmp
outsb
repnz
gs
cmp
lods
data16
mov
push
or
inc
push
je
cmpsl
rol
xor
lds
pop
popf
pop
mov
sbb
mov
popf
movsl
cli
ror
daa
addr16
inc
mov
sub
clc
pop
jnp
xlat
aad
incb
in
mov
add
test
loope
jno
xchg
xchg
clc
inc
mov
cwtl
scas
push
pop
mov
sbb
inc
xor
cli
add
pop
cmp
push
ret
mov
jg
push
add
jmp
xchg
std
dec
cmp
pop
in
pop
ficoml
repz
mov
dec
pop
jl
cwtl
out
push
push
mov
mov
insb
lret
xor
out
test
ja
pusha
dec
arpl
dec
in
test
mov
dec
or
pop
mov
notl
xor
push
fisubl
in
test
and
sub
mov
into
mov
cwtl
cmp
inc
addr16
push
jo
rol
or
sub
scas
push
hlt
test
in
pop
popa
movups
xorb
push
or
jg
stos
xchg
adc
nop
xor
addr16
lods
les
jno
fldl
mov
stc
dec
sbb
insb
out
or
cmp
sub
in
mov
icebp
pop
pop
xor
xor
xchg
outsb
sub
mov
rcl
push
test
outsl
aam
addr16
sbb
lahf
adc
in
imul
cld
fucom
xchg
incl
add
push
jns
repz
or
cmp
dec
add
dec
hlt
imul
lods
adc
pop
popa
sub
addr16
mov
lea
roll
cwtl
cli
xor
mov
cld
stos
mov
jb
loope
xor
cmpsb
ds
bound
dec
int3
jl
mov
cmpsl
loope
or
or
repnz
syscall
inc
inc
dec
adc
shrl
jns
mov
and
pop
inc
mov
popl
push
icebp
xor
cmp
adc
push
add
movsb
aam
cmp
ret
push
or
cmp
sub
adc
mov
fdivrs
mov
xor
push
mov
int3
jne
ss
inc
dec
out
xchg
pop
inc
and
push
jns
or
imul
lcall
pop
loope
scas
lea
inc
xor
mov
xchg
pusha
cld
lods
cmc
test
ljmp
repz
xor
pop
popf
rclb
lret
pop
aas
push
jne
mov
fsts
stos
adc
xchg
fimull
jnp
dec
scas
jns
rcr
xchg
inc
pop
push
inc
sbb
outsb
inc
adc
subl
dec
leave
ss
sahf
lea
xchg
scas
movl
xor
add
lret
enter
mov
std
adcl
and
in
jns
xchg
cmc
xchg
mov
mov
ds
cmp
in
test
cld
iret
xchg
xchg
inc
mov
cmpsl
dec
ss
inc
push
mov
nopl
call
dec
in
cmpsb
cwtl
mov
ss
add
inc
xchg
bound
je
rclb
xchg
cltd
inc
mov
xor
xchg
scas
ror
fistl
jecxz
jbe
ja
loopne
rolb
mov
call
add
push
add
push
mov
in
sub
cld
ja
add
das
add
adc
ret
call
es
cmp
lret
cmp
ret
imul
push
inc
int3
outsb
xchg
sub
aam
sbb
mov
int
movsl
cwtl
sbb
movsb
lods
inc
or
push
aam
inc
push
insl
mov
jp
add
outsb
jae
arpl
in
push
daa
mov
and
sub
sbbl
fiaddl
or
aam
lds
hlt
jbe
lahf
sarb
mov
pop
xchg
fwait
fs
mov
dec
cmpsl
pop
lods
push
ds
imul
adc
insl
mov
cmc
pop
bound
repnz
iret
out
into
push
es
cmp
dec
push
cmp
jg
ljmp
int3
lds
out
inc
add
jg
leave
cli
je
inc
adc
jae
flds
sub
or
add
fdivs
adc
mov
mov
mov
push
and
mov
mov
subl
mov
cmp
xor
lcall
jecxz
add
xchg
andl
outsl
fs
inc
adc
inc
push
aaa
aaa
mov
mov
mov
dec
jae
popa
jle
mov
loop
cmpsb
test
inc
cmp
icebp
ja
loopne
or
mov
dec
loope
enter
or
dec
call
add
push
int
ds
aas
orb
rorl
sbb
into
scas
adc
dec
mov
mov
xor
pop
std
sbb
or
fwait
jg
lret
dec
jmp
xchg
sbb
xchg
fs
sub
push
pop
cmpsb
xorb
jge
jecxz
mov
mov
aad
add
mov
aad
mov
icebp
mov
test
dec
adc
and
jne
mov
add
and
sub
pop
test
mov
xor
pop
insb
popf
xlat
loopne
cmp
in
arpl
dec
or
jmp
xchg
cmp
dec
test
mov
mov
add
and
fstps
jnp
or
adc
or
outsl
out
hlt
xor
xor
es
cmp
and
xor
fwait
sahf
and
faddp
call
std
shlb
notl
adc
xchg
push
xor
int
test
inc
frstor
sarl
mov
pop
adc
cmc
xlat
lock
lods
adc
push
shrb
fmull
mov
push
or
xchg
xlat
lahf
inc
pusha
cmp
sub
andb
mov
fmull
sbb
fstps
push
mov
into
bound
pop
mov
adc
push
or
dec
xlat
pushf
testb
les
jno
cli
ror
mull
cmp
subl
outsl
lcall
dec
sbb
mov
adc
insl
cmpsb
adc
pop
shr
push
xlat
adc
arpl
jecxz
cli
pushf
aaa
inc
lock
xchg
dec
push
adc
aam
enter
push
mov
lret
push
fsubl
xchg
test
dec
mov
int
or
cmp
pop
cmp
push
mov
lret
push
mov
xor
and
xor
sub
mov
cmp
sub
sub
add
js
inc
pop
ja
mov
repz
loopne
int3
add
iret
mov
test
or
jo
fidivrl
movhps
aam
int
push
add
pop
inc
pop
add
mov
xchg
adc
cmp
xchg
push
jg
enter
adcl
dec
cli
mov
sbb
pushf
xor
stc
call
and
ret
dec
push
push
adcb
push
cltd
pop
mov
jle
pop
aaa
sbb
stc
sub
out
rolb
outsb
shll
divl
push
pop
test
stos
jb
leave
cmp
jnp
pop
int3
sub
adc
into
shl
popa
movsl
xor
push
sub
aad
xchg
mov
arpl
aad
inc
push
hlt
les
sbb
jmp
mov
xor
ds
jbe
iret
and
out
mov
into
fcoml
pop
jne
loop
sub
adc
xlat
jns
mov
out
xor
pop
or
xor
push
jbe
mov
jp
lods
daa
push
gs
data16
stc
insl
jne
sbb
scas
cmpsb
mov
clc
shll
xchg
xlat
cmp
or
in
jae
les
and
fnstcw
xor
mov
out
and
sub
outsb
jl
mov
rcrl
jge
aad
imul
cli
iret
xor
sub
add
sub
push
push
mov
mov
lds
in
enter
test
adc
and
add
jb
mov
out
or
hlt
lret
adc
or
mov
push
pop
icebp
in
mov
lods
or
pop
data16
inc
jae
insl
in
testl
xorb
xlat
inc
pop
lods
cmpsb
test
popf
inc
scas
lret
xor
cmc
jnp
mov
imull
sbb
lret
dec
test
push
imul
xchg
mov
xchg
outsb
adc
mov
loope
in
lods
cltd
mov
adc
pop
int
cld
push
in
sbb
rclb
leave
dec
cwtd
cwtl
push
loope
int
jge
dec
mov
adc
ja
shlb
fsub
lea
les
lret
push
insl
stos
sbbb
xchg
mov
pop
int
mov
mov
sbb
xor
sbb
pop
mov
jne
je
js
pop
iret
or
mov
leave
inc
enter
andl
mov
xchg
push
push
adc
xor
pop
xchg
sub
sar
push
dec
push
enter
lods
push
cmp
lahf
loopne
push
cmc
in
lcall
fs
cld
xor
mov
xchg
xor
int3
aas
push
ss
pushf
inc
inc
pop
je
mov
xchg
pop
rolb
scas
mov
lahf
pop
fsts
in
jbe
adc
sub
lret
aad
sub
sbb
and
daa
ja
pop
jle
movsb
inc
std
shlb
aas
sbb
lret
xor
fmuls
imul
stos
jnp
dec
int3
cmp
add
repnz
pop
mov
dec
fsubrl
arpl
mov
aaa
test
jnp
cmp
mov
jne
sbb
adc
jge
push
rcll
inc
mov
jo
jno
inc
aaa
call
mov
jge
mov
or
jne
sbb
fdivrp
lret
fnstcw
dec
pop
out
jb
filds
scas
mov
movsl
rep
test
iret
lret
test
outsl
xchg
push
sahf
mov
xchg
pop
lods
fcmovnu
outsl
push
into
pop
cmp
inc
loop
out
mov
and
xlat
xor
sbb
pop
into
daa
sub
adc
insb
or
insb
pop
xchg
out
push
das
clc
jl
inc
lods
jmp
or
loope
daa
jnp
cmp
inc
fisttpll
lds
or
jge
pop
mov
ds
dec
lock
aaa
or
inc
xchg
cmpl
fwait
and
xor
mov
sarl
pop
cmp
call
add
push
vpshlb
dec
xor
mov
dec
repnz
push
push
mov
shll
add
aas
xchg
iret
cld
loop
cmp
int3
pop
cld
jmp
fisubs
cwtl
mov
xor
test
add
dec
dec
pushf
dec
imul
or
jo
fsubs
mov
test
scas
jno
inc
mov
pop
xor
dec
into
mov
add
fiadds
mov
aad
cmp
enter
aaa
mov
sahf
inc
sub
repz
sbb
mov
sbb
movsl
enter
jp
mov
mov
adc
dec
out
push
mov
divb
cmp
sub
mov
divl
loopne
imul
stos
inc
cmp
sarl
int3
push
cli
add
shrl
adc
sub
lcall
aas
imul
lcall
inc
cmpsl
dec
aas
and
mov
jg
mov
andb
in
mov
sub
add
cli
xor
pop
cmp
out
push
xchg
mov
xor
xor
jl
or
xor
cmp
and
xorb
rclb
xchg
ret
pop
aaa
sub
fdivs
iret
pop
push
insb
pop
scas
jbe
pop
dec
jmp
aas
adc
jecxz
inc
shlb
mov
nop
dec
test
nop
and
mov
imul
cmp
pusha
adc
or
cmp
adc
mov
inc
pop
xchg
mov
xchg
xor
repnz
pop
xlat
fbstp
mov
inc
mov
jle
fldenv
jl
cmp
inc
sub
sub
stos
subb
pop
mov
cmpsl
insb
mov
pop
lods
jnp
ds
mov
lahf
dec
dec
or
jbe
adc
mov
inc
mov
dec
clc
popa
es
xor
fxch
adc
adc
inc
mov
cld
sub
test
sbb
pop
repz
popa
dec
xor
dec
jge
mov
cmp
xchg
push
push
inc
shlb
mov
sbb
insb
push
inc
sbb
cmc
lcall
cmp
sti
xchg
inc
out
aad
fldenv
mov
jne
lds
in
mov
icebp
dec
mov
jmp
xchg
fisubrs
icebp
sbb
mov
aam
dec
clc
popa
lcall
xchg
mov
adc
xchg
clc
adc
dec
and
test
jae
outsl
xchg
stos
decl
cmp
stc
pop
hlt
xchg
xor
scas
xchg
jmp
test
lds
dec
iret
bound
sub
and
pop
jne
addl
push
and
xchg
repnz
xorl
push
addr16
repz
fsub
sbb
mov
call
lods
xchg
aad
ret
testb
pop
je
aas
dec
push
ljmp
out
sbb
lret
fsubl
bound
into
mov
push
cmc
cmp
out
xor
cmp
mov
add
or
or
nop
adc
into
lods
cltd
andl
and
shl
movsb
sahf
fs
outsb
jns
pop
std
ds
jae
cli
sbb
cmpsb
dec
mov
scas
push
cmp
sbb
cmpsb
xchg
xchg
inc
repz
fldt
mov
gs
lcall
mov
jge
dec
aad
sub
xchg
dec
cld
cld
stc
fbstp
daa
cmpsl
movsl
xchg
pop
push
push
ret
loop
xchg
jb
fs
sbb
pop
popf
or
cli
and
push
pop
mov
les
jmp
jnp
gs
sub
mov
cmp
mov
mov
lret
int3
test
jge
cltd
push
push
jns
add
ret
repz
sub
and
jmp
test
sub
lahf
push
pop
mov
loopne
jb
jmp
cli
fldcw
jl
and
ret
push
xchg
ja
sbb
popa
add
dec
cmp
das
lods
cmp
mov
xor
in
sbb
cld
sahf
lds
sbb
pop
jae
int3
or
pop
xchg
fidivrs
and
loop
add
pop
rorl
dec
test
and
imul
fs
inc
rclb
ss
push
xchg
imul
fs
mov
mov
dec
push
sub
movq
cmp
adc
xor
scas
mov
jl
movsb
mov
push
and
enter
insb
mov
pusha
mov
adc
aam
mov
push
cmp
fnstcw
mov
add
or
rolb
cwtl
xchg
pop
inc
in
and
xorl
sub
lods
mov
js
jo
inc
sahf
or
shrb
and
movsl
jge
cli
mov
adc
cmpsb
arpl
leave
jnp
inc
jmp
arpl
add
jmp
pop
add
call
in
lds
sbb
pop
add
pop
pop
inc
into
lock
sbb
lret
cmp
xchg
dec
jno
jg
mov
mov
loopne
and
jmp
ja
lret
cmp
inc
and
push
mov
orl
pop
sub
ror
movsl
test
gs
xor
lahf
fisubl
inc
nop
aas
pop
int3
repz
mov
xchg
inc
andl
call
clc
orl
xchg
mov
mov
pop
inc
mov
adc
pop
popf
push
in
xor
mov
outsl
aam
jge
inc
das
aad
arpl
push
leave
and
or
pop
xchg
xchg
push
add
test
pushf
push
and
xchg
push
or
icebp
lret
pop
cmp
jle
push
push
fwait
pop
cmpl
jo
mov
or
dec
mov
mov
or
dec
inc
jne
xor
mov
cmp
stos
ljmp
jge
inc
cmp
sub
in
shr
jne
add
mov
pop
loopew
jb
sub
out
mov
cmp
cltd
xchg
ret
mov
icebp
pusha
push
popa
push
popf
stc
fidivl
mov
sbb
subb
jae
ret
insl
stos
inc
xchg
pop
add
fisubrl
imul
cmp
mov
ja
fneni(8087
movsb
incl
cld
push
inc
sbb
push
dec
std
rclb
rorl
xchg
ljmp
mov
xor
sbb
dec
mov
inc
dec
sbb
xchg
test
inc
cmpsl
xchg
std
rcl
in
mov
jge
icebp
mov
idivb
mov
jbe
mov
pop
dec
add
scas
and
pop
pop
leave
loope
into
mov
xor
shll
inc
adc
in
int3
leave
mov
aam
dec
push
xor
mov
in
mov
sub
dec
div
jmp
pop
mov
test
add
int3
inc
test
pop
pusha
pop
jne
mov
dec
mov
cltd
and
mov
stos
pop
cmp
mov
or
leave
sahf
int
fisubrl
inc
or
jnp
ret
mov
pushl
mov
es
sub
test
jbe
inc
xchg
push
fxch
xchg
add
xchg
xor
xor
gs
jl
jg
inc
pop
dec
int3
add
dec
mov
xlat
jb
test
xchg
fistl
int3
in
fstl
aad
insl
movl
push
and
lcall
cmpsb
push
fsubrl
test
push
iret
rcrl
push
dec
lret
mov
fstps
or
mov
mov
fs
sbb
into
xchg
test
mov
test
das
dec
inc
imul
mov
fwait
xor
add
enter
xchg
mov
pop
je
imul
inc
leave
add
rol
xchg
sbb
cmp
jne
jae
mov
repnz
ror
popf
es
js
leave
inc
pop
ja
notl
xchg
cs
pop
ret
ss
mov
testb
lds
roll
jg
aam
imul
rcr
aaa
jae
imul
push
sbbb
outsb
mov
ret
fwait
inc
lcall
inc
sub
out
nop
aad
inc
and
insb
mov
setl
test
and
fiadds
nop
dec
or
jbe
clc
scas
sub
mov
mov
andb
pop
mov
cmp
xor
mov
pop
sub
in
lock
pop
ret
enter
xchg
scas
jne
or
jp
test
shll
push
sub
push
pusha
fyl2x
std
test
cltd
and
imul
xor
fdivs
jnp
pop
data16
push
sub
and
pop
sar
add
lds
jno
mov
imul
mov
jns
mov
xchg
push
roll
movsb
or
sub
lock
xor
xor
cmp
inc
pusha
es
pusha
cmc
adc
xor
outsl
mov
jp
pop
popf
mov
in
add
push
push
jecxz
xlat
and
jmp
dec
xchg
js
cmc
scas
insb
cmp
stc
lods
jb
nop
data16
mov
push
adc
xchg
js
nop
shl
pop
out
mov
xchg
mov
test
fsubrs
scas
mov
std
adc
dec
ja
pushf
test
mov
push
add
adc
sahf
or
arpl
gs
jb
cmp
sbb
adc
sti
jne
insl
dec
push
ret
jg
xor
add
clc
dec
or
rcrl
leave
mov
ss
leave
and
jle
jg
jo
dec
xchg
inc
popf
mov
ret
repnz
clc
cmpsb
lock
pop
push
in
jne
imul
or
sbb
jg
inc
clc
cmp
test
rcl
xor
inc
xor
jge
mov
xor
and
mov
rclb
fwait
push
push
ret
lcall
dec
pop
divb
imul
rcrl
fs
cwtl
push
pop
push
or
xlat
and
cli
ret
ret
inc
jo
arpl
divl
cltd
xor
out
daa
or
jg
mov
hlt
dec
inc
sbb
jns
cld
and
pop
xchg
lret
pop
out
enter
imul
jo
addr16
aaa
push
cmp
ja
test
adc
int3
shll
jbe
lcall
sub
mov
cwtl
sahf
repz
leave
push
mov
bound
movsl
push
imul
xor
dec
and
add
ss
lods
sub
or
cmp
lahf
and
pushf
xor
arpl
xchg
addb
adcb
or
pop
aaa
and
pop
fimuls
pop
xorb
xor
mov
int3
sbb
pop
ds
xchg
pushf
int3
hlt
inc
jb
push
push
mov
mov
or
cli
or
adc
paddsb
push
sub
pusha
cmc
pusha
fstps
popa
test
ret
push
mov
rorl
sub
jno
pop
out
je
xchg
fnstsw
sub
inc
xor
push
or
mov
mov
push
lahf
mov
jg
insb
or
rorl
and
jl
pop
push
sbb
inc
mov
loopne
mov
xchg
adc
push
xor
daa
scas
insb
cwtl
pop
stc
and
inc
lahf
scas
and
cmp
lahf
dec
out
jle
out
dec
pop
leave
hlt
sbb
lock
aaa
pop
cmp
adc
sub
fstpl
lods
mov
jg
mov
or
xchg
pop
inc
mov
test
sbb
xor
mul
push
or
call
cltd
and
rclb
stc
adc
mov
shlb
in
sub
cmp
mov
outsb
sbb
int
push
rcrb
aad
push
sub
out
sub
mov
or
addr16
jg
mov
cltd
daa
dec
cwtl
mov
popa
pop
jp
xor
jmp
and
inc
xlat
cmp
mov
add
push
adc
mov
leave
jbe
idivb
test
enter
sub
inc
sti
cwtl
call
push
add
xchg
sahf
push
imulb
pop
dec
daa
mov
lds
into
out
stos
and
pop
xor
lock
cmovno
adc
mov
lods
xor
adcl
repnz
dec
lds
adc
xor
and
pop
hlt
push
jae
daa
jecxz
test
jne
xchg
jl
hlt
pop
lret
push
repnz
ret
mov
stos
xor
pop
out
mov
insb
loop
clc
sub
mov
xor
jmp
aad
mov
jb
jbe
sbbb
in
mov
cmp
insl
aas
push
test
mov
and
icebp
fistpll
into
mov
push
or
inc
fisubrs
ret
lret
inc
dec
aas
fdivrl
inc
mov
mov
and
cmp
test
fucomp
aas
popa
loope
and
outsb
mov
andb
mov
test
faddl
out
rcl
adc
or
xchg
pushf
push
or
shrl
dec
in
fsubp
mov
movsb
adcl
xchg
call
jmp
push
mov
fnstsw
int3
xchg
pop
add
or
sub
lahf
jle
jbe
cli
cmp
xorl
rorl
es
mov
jo
mov
or
mov
sar
popf
shrb
pop
xor
imul
jb
adcl
insb
inc
ljmp
adc
fwait
push
mov
xor
jns
xor
std
and
mov
pushf
in
mov
mov
cs
shl
or
and
xchg
jecxz
movsb
imul
jp
dec
popf
test
ds
popa
stos
into
int3
icebp
lods
and
xchg
push
mov
xchg
jne
inc
faddp
test
out
lret
in
ljmp
xor
sbb
adc
aas
cmp
int3
loopne
inc
pusha
rolb
arpl
sub
aas
add
pop
or
xchg
loope
mov
iret
out
xor
test
in
in
pop
lods
pop
jns
xchg
clc
in
dec
test
cmpsl
out
les
mov
aad
push
aad
push
test
int3
in
jno
ficomps
or
lcall
cmp
popa
or
icebp
inc
fndisi(8087
mov
add
xor
xchg
cmp
lds
adc
inc
push
xchg
push
cmp
sub
cwtl
push
jnp
push
adc
pop
and
jbe
mov
loop
dec
in
jle
daa
dec
fs
repnz
insl
mov
cmc
arpl
mov
imul
cmp
push
xor
or
dec
aas
xor
jns
movsb
mov
imulb
adcb
and
pop
in
je
pop
mov
push
ja
add
sbb
je
pop
ret
dec
fisttps
das
movsb
movsl
fcoml
mov
pushaw
out
cmc
cmp
cmpsb
sbb
insb
jns
ficoml
mov
cltd
mov
cmp
aaa
fsub
xor
xchg
hlt
ror
adc
or
push
test
cmpsl
cmp
mov
xor
cmpb
xor
lahf
jp
cmpsl
repnz
stc
rcll
int3
mov
cmp
xchg
jae,pt
inc
repnz
inc
mov
dec
dec
rcl
push
jecxz
jbe
filds
inc
mov
frstor
fildll
roll
pop
sub
stc
mov
sti
lahf
aad
pop
sub
or
xchg
xor
pop
dec
xchg
in
adc
aaa
daa
xor
inc
lock
xchg
pop
mov
push
sbbb
jmp
divl
cmp
int
jno
in
mov
cmp
inc
inc
ficoml
int
or
shrl
jmp
adc
ret
leave
sahf
push
setle
xchg
push
push
or
pop
inc
sbb
cmpsb
pop
pop
adc
in
repz
hlt
add
xor
pushf
push
fldl
sub
repnz
mov
inc
sahf
mov
std
call
testb
in
bound
inc
inc
pop
cmpsb
dec
cwtl
cmp
addl
inc
cmp
cwtl
fmull
push
in
and
and
sbb
mov
fcompl
pop
sti
aad
incb
sbb
mov
int3
ret
fs
add
enter
cmpsl
dec
mov
faddp
insb
orl
or
push
ja
push
push
fistps
dec
adc
stos
subl
add
add
insl
xor
lds
mov
add
mov
push
aad
mov
pop
adc
mov
test
xchg
adc
std
xchg
xchg
test
cld
nop
mulb
hlt
int
fdivs
jecxz
adc
es
adc
mov
sbb
xor
rorb
cli
test
lret
icebp
loop
out
adc
xchg
mov
jl
jo
mov
ret
mov
push
cmp
loope
je
xchg
sbb
cmp
sub
jecxz
scas
cmpsl
sbb
cmp
sti
aad
adc
int
pop
xor
outsb
lret
inc
stos
jp
ficomps
adc
push
push
pop
mov
add
and
je
pop
pushl
and
test
xor
ss
rolb
jnp
out
sub
arpl
mov
add
mov
fdiv
mov
adc
xchg
or
mov
xchg
or
inc
push
and
cmp
xor
std
adc
adc
mov
mov
adc
push
leave
cltd
rcrl
sbb
or
call
jp
adc
add
lods
roll
int
inc
sahf
push
hlt
xchg
fidivs
dec
cmpsb
ret
mov
or
subl
add
pop
sub
dec
dec
out
sbb
mov
push
imul
das
mov
clc
jg
pusha
das
insb
or
mov
fcmove
jno
jecxz
cmp
pop
mov
addr16
lcall
pop
jo
and
mov
cltd
push
push
xchg
mov
push
movsb
jp
mov
movsl
lea
mov
insb
scas
mov
in
mov
adc
notl
add
dec
sbb
pop
cmp
fistpll
or
loop
adc
adc
dec
add
inc
les
loope
sbb
fwait
and
or
inc
popa
mov
sub
js
mov
das
jmp
fnstcw
sub
clc
insl
mov
mov
add
ja
xchg
cmp
mov
push
pop
jbe
and
lcall
insl
shl
and
icebp
pop
mov
out
pop
xor
pop
aad
icebp
mov
repnz
fisubrl
lods
test
pop
mov
mov
jb
xchg
rcrb
cmp
cmpl
fimull
inc
sti
xchg
je
lahf
push
insb
es
inc
and
sub
dec
icebp
xor
xor
inc
dec
adc
pop
loope
imul
cmc
lahf
jno
sub
mov
xchg
or
pop
pop
lcall
adc
popf
jg
jno
loopne
and
push
inc
loope
fstps
jne
mov
rcrb
adc
and
xchg
cmp
sbb
jmp
cmp
adc
cli
out
in
pop
leave
sub
push
inc
adc
fistps
jecxz
aam
jl
lods
cmpsl
loop
movsb
mov
faddl
pop
into
jno
js
mov
xchg
xchg
xchg
sbb
iret
sbb
test
xlat
push
fidivrl
lea
dec
add
stc
cld
dec
sbb
pop
jno
fists
idivl
nop
push
ljmp
xor
ljmp
add
jbe
xor
push
xor
jg
adc
outsb
or
push
inc
push
mov
aaa
dec
stos
sbb
js
push
xchg
in
pop
or
test
lahf
xchg
sbb
into
xchg
jno
sub
xchg
xchg
aaa
neg
rcll
xchg
sub
ja
push
mov
pop
or
adc
es
push
mov
jl
jno
fs
fcmovnb
imulb
jmp
xchg
pop
call
cltd
mov
mov
jae
mov
shll
cmp
mov
rcrl
sbb
xor
dec
sub
xchg
sub
nop
stc
sti
mov
jbe
pusha
or
mov
fstl
adc
stos
test
inc
sbb
push
jl
aam
ljmp
fldt
push
pop
xchg
and
int3
sub
push
dec
push
hlt
in
push
and
push
daa
cmp
das
jge
repz
or
lods
out
adc
enter
push
loop
xor
xchg
shlb
test
ss
xor
fadd
add
in
and
adc
imul
cld
inc
iret
xor
out
sbb
cmp
xlat
cmp
xor
hlt
imul
dec
inc
cmc
data16
pop
arpl
les
jae
xchg
push
jno
mov
aaa
xchg
lds
daa
leave
or
sar
bound
xchg
add
lret
movsb
inc
push
mov
lods
and
adc
leave
jl
stos
mov
test
sbb
js
nop
sbb
pop
jle
fistps
in
sub
jnp
and
outsl
xchg
mov
addl
dec
sub
mov
mov
xchg
push
jno
arpl
lds
add
adc
and
jno
adc
dec
push
jp
and
fstpl
lcall
xor
xor
movsb
sbb
pushf
decl
aaa
jae
xchg
xchg
mov
add
movsb
js
push
ret
loopne
insb
movsl
fildll
sub
test
loope
cmp
jns
pop
ds
loop
stc
mov
inc
repz
mov
xor
mov
xor
jbe
in
inc
int
inc
mov
inc
xlat
push
std
mov
add
dec
call
jo
dec
into
imul
sub
sti
decl
rcll
shr
sub
jecxz
dec
cwtl
pop
jo
fsubrl
pop
jno
mov
jo
dec
sub
je
mov
cmp
cmp
adc
mov
inc
add
stos
adc
pop
mov
movsb
sbb
cmc
iret
mov
sbbb
popa
in
xor
popa
cmp
ret
incb
std
fistl
jp
adc
pusha
cmpsl
push
out
es
outsl
cmp
idivl
je
out
jae
xchg
ja
icebp
lds
jno
stos
iret
aam
xor
mov
mov
sub
mov
mov
in
lods
lahf
cli
push
mov
popf
imul
mov
aam
xor
pusha
fmul
or
and
dec
popa
jmp
or
ds
pop
mulb
frstor
mov
jb
enter
fwait
in
jle
mov
mov
jmp
xchg
shlb
cld
cmpsl
cwtl
push
andb
xor
adc
dec
outsb
xor
and
xorl
push
cmp
and
lods
mov
mov
push
mov
add
ljmp
sub
or
dec
mov
sub
ss
pusha
xlat
rolb
jne
jl
js
sarl
movsb
in
jb
inc
ljmp
inc
xor
mov
jp
stos
insl
dec
jge
and
dec
repz
shrb
jle
and
in
mov
mov
fsubl
cmp
and
jmp
dec
in
xchg
imul
add
lahf
test
fiaddl
lods
mov
sbb
jne
test
mov
lcall
ds
stc
dec
sub
hlt
jp
insl
lods
repz
mov
fmulp
push
out
cmp
insb
shll
aad
insl
lods
dec
add
or
cmp
dec
mov
mov
iret
xchg
fisubrs
ss
pop
subl
fldcw
gs
ljmp
mov
data16
or
sub
ja
fdivrp
andb
or
jmp
loopne
sub
mov
fnsave
and
jmp
xor
dec
push
ret
mov
mov
and
jle
pop
mov
mov
insl
and
sbb
std
mov
nop
inc
sbb
in
and
imul
dec
mov
lret
imul
xchg
push
fisubs
aas
sub
pop
mov
mov
push
sub
mov
fsubrl
push
inc
adc
sbb
push
fpatan
movzbl
lret
repnz
fidivrs
loopne
mov
and
mov
leave
dec
jno
cmp
pop
sbb
add
test
lds
pop
pop
adc
fldcw
inc
mov
jmp
fnstenv
and
pop
xchg
ljmp
lcall
ret
xor
andl
mov
jbe
xchg
pushf
aaa
shlb
ja
pop
xchg
in
mov
pop
dec
cmp
dec
mov
dec
shlb
mov
shrb
mov
push
ret
xor
lret
adc
addr16
cmpsl
cmp
push
xlat
jmp
push
sbb
rcll
loope
stc
jns
and
out
das
mov
fisubrs
xor
nop
iret
push
int3
rolb
dec
pop
add
flds
bound
jg
xchg
movsb
pop
push
hlt
jne
je
push
ret
and
stos
sub
pusha
jmp
sub
das
push
ja
mov
lret
push
call
ljmp
sub
fcomps
fsubrs
fiaddl
sub
cmp
mov
stos
popf
arpl
pop
movsl
scas
outsb
and
mov
js
mov
jp
jg
loopne
adc
jmp
lahf
jne
inc
add
nop
sub
and
cli
push
and
roll
jle
dec
sti
pop
pop
mov
xchg
mov
hlt
jp
lret
aaa
and
mov
rcll
sub
dec
xor
xor
pop
jp
addw
stos
cwtl
xchg
inc
mov
test
idivl
or
loopne
mov
shl
push
jmp
test
sub
arpl
push
or
mov
push
mov
push
mov
and
jg
or
mov
cmpsb
sbb
shll
dec
outsb
dec
cli
push
jle
out
dec
into
jle
pop
out
sarb
push
cmp
cvtdq2ps
nop
cmc
mov
repnz
sbb
cmp
int
push
sahf
dec
adc
addr16
cmpsb
mov
pop
int3
cltd
mov
icebp
int
jae
pop
test
rcll
pop
shrb
xor
sbb
rolb
xor
cmp
shlb
or
xor
inc
mov
push
push
fdivl
js
dec
iret
pop
mov
imul
out
mov
dec
and
enter
clc
out
std
and
movsb
sahf
fdivl
jg
arpl
sbb
pushf
je
ret
xchg
test
sub
push
ret
and
fnstenv
lock
sahf
lds
xchg
push
aas
sub
xor
mov
jp
pop
xor
mov
loopne
xchg
lret
mov
in
icebp
dec
stos
or
out
dec
in
mov
dec
cli
pop
roll
gs
je
imul
mov
xlat
xor
fadds
jne
push
mov
jmp
insb
dec
pop
daa
sub
xor
xchg
loop
icebp
and
sbb
mov
orl
stc
loope
fmuls
jmp
xchg
aaa
mov
mov
mov
jo
incb
cmp
cmpsb
ljmp
pop
push
jp
jns
sarb
ret
and
sbb
add
or
and
cli
int
lahf
mov
in
inc
aas
bound
in
mov
test
jg
insl
jecxz
fldt
xor
sub
sub
ret
mov
iret
enter
in
in
fidivrs
xorb
mulb
in
or
test
sub
mov
dec
lds
xor
mov
cwtl
int
dec
popf
clc
jl
pushl
jp
sub
loop
subb
pop
mov
gs
jns
mov
aam
cmp
push
xlat
movsb
mov
insb
pop
xlat
movsb
cmp
cltd
pop
xor
sub
pop
cwtl
xchg
insl
mov
mov
xor
mov
test
pop
scas
test
cltd
sbb
addl
sbb
xchg
mov
scas
add
xchg
jb
cld
shl
xchg
jle
pop
lcall
fwait
and
ljmp
out
repnz
sarl
adc
inc
cwtl
outsl
into
lock
outsb
ret
stc
push
cltd
sarl
push
inc
sub
sbb
or
add
test
add
cmp
push
jae
push
stos
xor
jo
cmp
js
ds
pushf
outsb
sbbl
adc
cmpsl
ficomps
xchg
inc
lods
nop
adc
dec
sbb
mov
mov
out
addb
xchg
jo
jno
jl
into
jle
cld
imul
mov
add
in
pop
adcl
fiaddl
xor
xor
loope
mov
fnsave
fimuls
fwait
push
sbb
fs
mov
push
add
pop
loop
mov
in
mov
fsubrs
in
jmp
ja
pusha
or
cld
add
ffreep
clc
addr16
stos
les
push
mov
push
adc
pop
jmp
es
inc
mov
cld
in
inc
sub
std
int3
iret
jl
mov
push
test
stos
data16
add
ret
mov
scas
or
pop
mov
sbb
push
ret
mov
xchg
push
dec
shl
sbb
cld
cmp
xor
inc
mov
jbe
adc
arpl
sbb
or
pop
fnsave
dec
inc
mov
insb
enter
mov
or
jecxz
cmp
int3
dec
outsl
jg
test
pushf
pushf
outsl
call
lret
add
or
cs
movsl
mov
test
aas
iret
inc
loop
dec
dec
xchg
and
sbbl
sti
sub
xchg
dec
cmp
fcmovu
xlat
mov
adc
and
inc
add
or
add
dec
sub
mov
mov
pusha
adc
push
icebp
les
insb
ret
jb
stos
mov
ss
dec
rclb
xor
mov
insl
dec
jle
jmp
cld
dec
fistps
movsl
movlps
inc
mov
bound
sbb
shll
and
mov
in
xor
lcall
shrl
js
aam
xchg
bound
int
xchg
in
dec
in
xchg
dec
jle
pop
movsl
jecxz
ljmp
or
xchg
and
sub
mov
mov
gs
in
fdivl
mov
nop
sarl
or
test
cmc
bound
add
loopne
jle
int
arpl
sub
lret
cli
xchg
sub
sahf
movsl
dec
or
lret
inc
cmpsl
or
add
fs
and
or
fmuls
clc
stos
pop
les
lret
and
lods
mov
pop
insb
or
ja
and
in
push
data16
mov
xor
and
cltd
mov
adc
ja
pop
jge
mov
icebp
shlb
sbb
pop
mov
mov
mov
jle
fistpl
rcll
sbb
jmp
push
or
gs
dec
jl
sub
xchg
adc
jnp
int
mov
cwtl
inc
xchg
mov
inc
push
notl
mov
sub
mov
mov
push
imul
js
mov
adc
stos
mov
enter
call
push
aas
cld
jo
xchg
ret
xchg
mov
lcall
add
sahf
push
mov
push
and
bound
fs
add
mov
outsb
xchg
and
repnz
mov
shlb
arpl
pop
pop
int
icebp
mull
pop
sub
mov
je
pop
cmp
and
fsubrs
mov
mov
pop
or
sbb
push
cs
daa
jbe
fwait
xor
mov
jbe
std
ficompl
ljmp
add
loop
fisubs
ret
dec
add
test
imul
data16
jo
dec
and
popf
lcall
add
mov
jo
out
jle
xchg
lret
jbe
adc
int
mov
mov
adc
push
fbld
add
mov
cmc
aas
jno
ficompl
out
dec
dec
jns
inc
repnz
xchg
add
out
test
xor
mov
and
lods
arpl
xor
inc
jmp
and
in
repnz
aas
in
das
and
idivb
xor
test
lock
call
sbb
xorb
pop
jnp
mov
fs
bswap
imul
lea
xor
into
add
pushf
mov
out
and
mov
cli
jmp
push
ffreep
push
ss
xlat
jmp
sbb
mov
lds
adc
mov
data16
fdivs
pop
cltd
jle
jno
dec
xchg
adc
inc
ret
or
and
int3
push
repnz
dec
pop
pusha
xor
and
and
test
ds
push
test
ja
jne
push
out
pop
and
or
mov
call
pop
shlb
adc
hlt
lods
dec
pop
pop
mov
push
mov
inc
mov
cmp
stos
push
xchg
lret
pop
fbld
addb
pop
mov
in
mov
fistl
int
sbb
push
loop
add
cwtl
mov
cmpsl
outsl
adc
stos
imul
or
cmp
mov
xchg
push
or
addb
jbe
mov
mov
pop
jmp
repz
out
scas
pop
das
dec
dec
mov
out
jo
sar
insl
add
jp
pusha
push
cmp
push
fsubl
fdivl
ss
dec
add
popl
nop
mov
in
jle
mov
rcrl
push
adc
test
cmp
pop
stos
popa
ss
cs
mov
das
push
inc
sub
push
xor
clc
shrb
push
jmp
daa
movsb
and
sub
push
or
fisttpl
mov
stos
out
push
ljmp
loope
data16
add
mov
xchg
cmp
inc
jbe
jnp
push
sub
fadds
jns
inc
lea
scas
or
shll
mov
push
mov
stos
dec
jnp
pop
mov
daa
mov
mov
cld
and
xor
or
test
shrb
mov
enter
imulb
sub
out
std
xchg
call
out
insb
ret
and
outsb
sbb
pop
inc
mov
cmp
cmp
mov
xchg
maskmovq
testl
mov
imulb
sbb
xchg
sub
mov
mov
movsl
fsubrs
mov
movups
xchg
movsb
leave
pusha
int
mov
xor
rol
in
insl
lods
jnp
dec
movsl
pop
icebp
pop
jle
mov
dec
insl
out
mov
push
inc
scas
dec
push
pop
pop
dec
push
or
movsl
subl
fdiv
or
das
mov
xchg
xchg
fcmovnu
mov
or
cmp
push
hlt
jg
and
test
repnz
mov
vmovaps
add
sbb
fcompl
jge
sahf
push
or
jae
adc
jmp
mov
loop
iret
jge
not
lods
rol
test
xchg
add
mov
sbb
cmp
pop
fucomp
xchg
inc
adc
cmpsb
lock
sub
bound
jmp
mov
shl
dec
cmp
lods
out
mov
push
lds
sub
ficompl
inc
int
cmc
loop
not
and
cltd
shrb
push
xchg
adc
jmp
pop
and
mov
lret
inc
inc
leave
mov
sub
sahf
rcrl
sub
lods
je
ljmp
lret
divb
inc
les
stos
je
aam
mov
es
xchg
mov
pop
sub
and
xchg
and
or
jle
push
fisubrs
adc
loopne
inc
and
push
fstpt
jnp
pop
or
rcr
bound
cld
mov
scas
mov
mov
mov
leave
lods
jle
ljmp
lcall
jne
jmp
xchg
cmp
fimull
add
mov
lock
mov
dec
negb
sub
mov
aam
pop
inc
rcll
dec
cld
fstl
test
out
cwtl
pop
data16
aam
inc
cmpsl
cmc
fsubl
pop
xor
ret
jb
cltd
sbb
rcr
mov
mov
cbtw
add
adc
test
sbb
or
stos
fiadds
jl
push
xor
lock
add
daa
clc
lahf
cld
fistpl
mov
repz
jmp
sbb
xsavec
push
iret
aas
xchg
dec
int3
sub
dec
inc
cltd
fsubs
ja
cltd
add
and
shrl
add
fnstenv
fisttpl
shll
sbb
xor
notb
add
cmpb
sub
stos
rolb
jge
aaa
pop
sub
orl
clc
adc
cmp
cmc
rcrl
sub
xchg
pop
push
es
fdivl
and
jp
hlt
test
mov
jle
xchg
pop
mov
push
out
xchg
repnz
lock
and
pusha
mov
xor
mov
ja
adc
loope
push
mov
mov
ret
sub
pushf
xchg
xor
imul
sarl
call
jno
cmpl
jge
out
pop
cld
sub
ret
pushf
and
add
adc
jp
int
test
or
inc
and
jnp
add
cltd
xchg
jmp
adc
addl
mov
dec
cmp
xchg
cmpsb
inc
xor
xor
add
bound
ja
loop
addr16
inc
test
xchg
popf
lcall
leave
sbb
cmpsl
add
in
mov
inc
lea
arpl
int3
mov
and
enter
sub
cmp
fdivrl
addl
insl
adc
cli
in
mov
mov
pop
push
inc
or
pop
fnstsw
mov
dec
mov
bound
hlt
dec
daa
inc
lret
sbb
adc
jge
dec
jle
adc
and
add
imul
popl
pop
ja
mov
xor
outsl
sbb
sbb
jns
fsubr
adc
xor
nop
loopne
fidivs
fsts
ret
addr16
push
fisttpll
test
das
xor
xor
inc
xchg
mov
mov
mov
or
xor
xlat
aaa
repnz
lea
cmpsl
mov
out
push
xor
mov
inc
fldl
enter
pop
mov
fdivl
pop
push
mov
clc
icebp
dec
aaa
sub
js
filds
ret
mov
mul
je
int3
mov
mov
jb
aam
int
int3
add
xchg
adc
push
inc
gs
insl
cltd
push
scas
icebp
cmc
push
out
pop
inc
xor
ljmp
push
sub
cwtl
sub
dec
in
xchg
std
jge
lret
call
jp
xchg
ud0
cld
or
push
fstps
cmp
sbb
mov
add
popf
mov
adc
pop
sahf
fsubrs
inc
or
pop
cs
pop
out
push
adc
inc
pop
lods
xchg
push
jae
imul
shr
fadd
out
add
sbb
and
aaa
add
xchg
movsb
or
xor
sbb
into
cs
xchg
cmp
or
mov
dec
add
loopne
mov
mov
hlt
imul
pop
cld
pop
cmp
outsl
jg
inc
sarl
stc
or
in
mov
out
xchg
enter
and
mov
jmp
jnp
inc
xchg
test
cld
int3
pusha
sahf
xor
daa
sbb
mov
fiaddl
ljmp
sub
adc
push
hlt
in
je
inc
sahf
fsubrs
and
xrelease
aaa
popa
mov
mov
inc
ljmp
aad
jb
movsl
stos
adc
adc
xchg
aad
and
jl
mov
aad
lds
cmp
xor
sub
jle
push
jmp
jne
push
sti
ds
cwtl
add
xchg
leave
in
leave
lods
xchg
cmpsl
aad
sub
xchg
adc
sub
ret
xchg
stos
xchg
rorl
dec
aaa
loopne
sbb
cld
pop
into
xlat
not
jns
aam
xor
jae
pop
mov
pusha
out
into
mov
xor
icebp
leave
cmp
add
sub
jae
aam
xor
dec
and
mov
cmp
xchg
pop
push
cwtl
shlb
faddl
scas
aam
and
sar
int3
xchg
cmpb
pop
jae
adc
aad
idiv
xchg
sar
sbb
das
cmp
loop
inc
into
or
loope
mov
repnz
cwtl
sarb
xchg
sub
jbe
xor
in
addr16
std
dec
or
or
add
ret
nop
test
dec
rclb
mov
mov
test
pop
sbb
ljmp
xchg
cmp
iret
scas
fsubr
in
lods
jnp
and
mov
test
mov
dec
mov
cmp
out
sbb
xchg
loop
dec
inc
jno
xchg
pop
in
xchg
and
fsubl
and
sti
sar
mov
cmp
add
inc
push
dec
inc
jle
cmpsl
dec
xor
dec
das
inc
sbb
mov
std
arpl
mov
adc
out
in
and
jno
shl
lods
xchg
shlb
mov
pusha
mov
add
sbb
shr
xor
arpl
adc
and
dec
shrl
jno
stos
add
xchg
data16
test
push
jb
enter
mov
and
std
adc
je
sbb
aas
loope
sbb
pop
adc
inc
push
mov
and
sbb
dec
mov
mov
sbb
mov
fildll
jp
xchg
jecxz
cmc
and
stos
aad
lcall
jg
mov
xchg
stc
push
ja
xchg
inc
outsl
jl
xchg
push
ret
xchg
mov
cmpsl
out
movsl
and
aas
ds
xorl
xor
loopne
js
ljmp
sti
and
inc
dec
mov
out
jecxz
lea
inc
mov
xchg
or
mov
sub
jno
cwtl
mov
sbb
movsb
mov
into
aam
adc
pop
pop
stos
in
mov
subb
into
sub
cmc
adc
daa
outsb
movl
decl
hlt
dec
dec
add
gs
add
cmc
movsl
jns
sar
pop
cli
sbb
sbbb
test
and
je
inc
outsl
stos
gs
xchg
test
ss
cmp
clc
inc
mov
cwtl
add
add
and
xor
sbb
enter
fmuls
bound
pop
mov
bound
jne
inc
rcrl
insl
int
mov
mov
push
fildl
ret
leave
push
cs
pushl
cli
xchg
es
cltd
aad
js
mov
xchg
imul
inc
fstpt
jmp
test
mov
mov
sub
out
or
or
mov
cli
jl
add
shll
xor
stos
lahf
sub
and
dec
xchg
jae
cmp
xor
sbb
sbb
notl
in
jns
stos
roll
mov
pop
in
aad
fs
out
enter
fs
inc
jbe
pop
inc
xor
gs
mov
xchg
inc
and
cld
adc
cmc
pop
xor
nop
push
or
and
bound
cmpl
ljmp
adc
cwtl
cwtl
cmpl
sbb
jns
fs
inc
inc
dec
mov
push
inc
xor
int3
or
cmc
dec
jbe
sbb
adc
mov
dec
adc
xor
ljmp
jmp
adc
mov
cmpsl
icebp
jo
pushf
adc
push
xor
sub
sti
mov
adc
bound
andl
jge
cli
jmp
mov
mov
or
push
int3
insb
es
in
test
mov
pusha
dec
lret
add
push
scas
dec
pop
nop
dec
pusha
leave
outsb
adc
repz
sahf
inc
hlt
add
and
loope
sbb
cmp
xchg
test
repz
out
push
rcrb
stos
push
in
mov
xchg
int
mov
add
fsubl
stos
aam
fisubl
sub
push
mov
in
lea
cli
stc
inc
gs
cmp
xchg
es
jnp
dec
lahf
fcomps
sub
clc
cmp
das
and
and
lods
mov
xchg
fdivs
pop
push
rcrl
and
xchg
jnp
dec
xchg
flds
lret
mov
es
lds
xchg
xor
into
sub
jle
add
stc
sub
fisubrs
pop
and
mov
enter
sub
cwtl
cmp
mov
xor
icebp
inc
pop
test
daa
xor
loope
jecxz
push
imul
adc
jnp
stos
enter
adc
lds
out
adc
add
adc
pop
cltd
es
je
int
mov
or
rorb
scas
out
adc
adcb
inc
fwait
jg
sbb
out
fdivrs
cmpsl
sbb
movsl
bound
repz
outsl
arpl
icebp
movsb
pop
les
push
stos
jae
lods
outsb
mov
push
xchg
xlat
push
jecxz
jnp
sub
pusha
jnp
fbstp
int
xchg
mov
repz
jle
outsb
xchg
adc
out
inc
mov
mov
xchg
xor
mov
dec
addr16
xor
sub
int
cwtl
jecxz
movsb
les
sub
mov
push
push
push
and
movsl
cltd
sbb
push
or
push
pop
dec
add
sbb
jl
aad
jae
push
mov
adc
jo
and
icebp
lcall
dec
push
lcall
or
push
pop
les
bound
jecxz
push
push
sahf
lahf
rcrb
or
out
inc
cmpsb
xor
xchg
mov
xchg
cmp
add
push
add
fimull
push
mov
pop
stos
cwtl
sbb
push
jbe
mov
pop
and
iret
stos
add
out
lahf
xchg
adc
arpl
cli
pusha
adc
pop
sysexit
dec
and
pop
jno
movsl
fistpl
pop
in
pop
fld
leave
sbb
xor
cmp
inc
shlb
outsl
lret
xor
inc
int3
sbb
or
xorl
andb
or
cmpl
orl
adc
or
inc
and
xlat
and
xchg
dec
sub
mov
fcmovu
orl
mov
fs
es
push
daa
inc
pop
fldl
stos
cltd
loope
push
ja
and
add
test
scas
pop
mov
fistpl
daa
cmp
mov
fisubs
insl
in
lret
cmp
loopne
aaa
mov
and
or
or
jne
push
xchg
scas
stos
cld
xor
mov
and
popf
xor
addb
adc
push
cmp
jne
adc
sub
lds
lcall
mov
adc
push
adc
push
and
sti
je
scas
call
loopne
mov
popf
dec
jmp
jo
xchg
scas
cltd
mov
jge
ficompl
sarb
dec
xor
sub
mov
mov
and
std
stos
outsl
ss
jecxz
adc
pop
mov
imul
popf
pop
push
inc
mov
sub
xchg
sahf
fildll
movsb
dec
in
popf
das
inc
mov
inc
icebp
and
push
sub
push
shrl
fnstcw
call
call
shlb
leave
cs
inc
push
cmp
mov
sbb
jl
or
outsb
dec
ds
push
bound
and
xchg
jno
das
jne
xlat
fstps
mov
jg
mov
movsb
ret
or
arpl
popa
jb
adc
fdivrs
pop
mov
fcomps
insl
sti
pop
stc
xor
out
ret
sarl
test
dec
pop
loope
test
dec
inc
xchg
cmp
clc
lret
int
jg
pop
ror
cmp
mov
and
or
pop
fwait
lods
js
scas
cmp
call
mov
outsl
pop
jecxz
mov
loop
mov
dec
fistl
xchg
fdivs
scas
mov
xor
xchg
call
push
neg
xchg
popf
lret
int
lret
mov
sarl
push
mov
lcall
add
clc
inc
sbb
lret
lret
adc
sbb
aad
mov
arpl
fabs
lds
xchg
pop
mov
psubusb
out
xchg
add
xchg
push
mov
sub
hlt
aad
sbbb
or
jl
add
cmp
lock
jae
xor
lret
and
push
rolb
orl
hlt
mov
mov
leave
and
movsl
notb
cmp
xorl
dec
inc
sbb
icebp
adc
std
adc
jmp
add
xor
imulb
aas
hlt
fstp
inc
mov
ds
xchg
or
mov
mov
jmp
rol
test
push
xlat
scas
adc
lahf
xor
gs
jg
sti
inc
pop
push
std
fisubrl
ds
cmp
sbb
sbb
inc
lcall
xchg
aas
push
or
mov
cltd
xchg
sti
mov
std
lahf
push
lods
or
rclb
in
ror
pop
xchg
in
or
adc
orb
mov
cmpb
push
mov
loop
int3
aad
cmp
adc
data16
add
dec
jo
out
pop
nop
xchg
mov
jge
test
jne
lock
cmp
pop
cs
mov
rolb
movsb
sub
pop
fucomip
push
pop
fwait
lods
aas
jge
cltd
or
push
and
pop
pop
push
movsb
xchg
fcomp
xchg
and
and
push
xchg
cwtl
jmp
subl
pop
das
insl
pmullw
out
out
xchg
adc
aas
aam
dec
inc
adc
jmp
jecxz
dec
xorb
jl
pop
repnz
getsec
lods
bound
rcl
mov
outsl
push
pop
aaa
mov
xor
xchg
sahf
hlt
cmc
aad
mov
mov
jae
dec
xor
cmc
dec
sub
cltd
in
nop
mov
push
pop
orb
cmp
xchg
repz
fs
dec
sbb
xchg
xchg
shlb
lret
es
scas
icebp
outsl
and
xor
gs
test
das
mov
popf
mov
outsl
ret
pop
xchg
and
insb
sbb
sub
push
jo
adc
add
inc
jno
cmp
xchg
ss
lds
dec
test
scas
cltd
adc
ffreep
cmp
rcrb
sub
mov
push
pop
mov
push
adc
shl
inc
decl
pop
mov
into
xor
mov
dec
pop
fisttpll
jg
xor
insl
pop
inc
roll
xchg
pop
shrb
jns
call
mov
bound
stos
test
dec
dec
lret
cs
or
or
stc
jmp
repnz
fidivl
les
mov
int
es
fsubrs
sub
push
mov
cmp
push
jmp
pop
add
ror
mov
lret
je
fs
mov
adc
fs
dec
jo
adc
adc
sub
push
mov
add
insl
sub
popf
notl
push
push
pop
mov
dec
mov
fmul
and
leave
sbb
add
sub
push
call
mov
push
sub
cld
jg
push
xor
fnstsw
in
mov
xor
or
clc
or
test
jns
movl
inc
call
xchg
lahf
jl
repz
clc
iret
nop
imul
fwait
mov
mov
jns
cli
inc
pop
jmp
xchg
mov
pop
insb
movsl
insl
cmpsl
push
icebp
sbbb
adcb
pop
sub
pop
js
dec
adcb
sub
adc
std
call
addr16
lock
insl
inc
leave
adc
rep
mov
loop
movsl
in
push
push
mov
and
or
inc
xor
pop
jnp
jno
cmc
lcall
fildl
or
ljmp
shr
cld
aaa
mov
dec
out
pushf
add
mov
cmp
or
cmp
push
cli
test
test
xchg
std
sbb
and
xor
sub
cs
andb
shrl
jne
test
xchg
cmpsb
push
mov
add
adc
adc
mov
sbb
xchg
aad
adc
movl
inc
xor
add
call
fxch
add
sub
aas
jecxz
pop
adc
fdivrs
sbb
les
aam
ja
xchg
dec
test
enter
lret
jns
mov
daa
mov
add
push
inc
outsl
fs
sbb
mov
adc
dec
mov
sub
aad
out
andl
mov
jg
les
xor
push
aas
rcll
sahf
sbbb
sar
imul
cltd
sub
in
test
test
movsl
arpl
lret
mov
dec
adc
daa
faddp
sub
mov
sahf
jmp
inc
mov
aad
push
scas
push
gs
xlat
mov
fdivrs
outsl
ja
add
push
or
xchg
mov
std
mov
imul
push
xchg
dec
sbb
xchg
dec
rcrb
xchg
cwtl
leave
loopne
cmpsb
fidivs
nop
dec
fs
and
ja
ja
fistl
adc
stc
or
loop
add
outsl
fldl
push
daa
fbstp
aas
dec
cmp
mov
push
lods
adc
adc
test
les
outsb
or
pop
jnp
imul
push
adc
or
and
cs
es
jmp
or
stc
movsl
movsl
stos
push
cwtl
in
adc
lea
cmp
cmp
stos
xchg
sbb
ds
mov
jbe
rcll
jmp
rol
jbe
in
jge
xchg
jmp
xchg
loop
add
repz
int
adc
lea
jmp
or
push
test
mov
repnz
mov
jbe
adc
pop
mov
scas
pop
xchg
call
dec
mov
push
sbb
jg
jge
adc
jb
xor
pop
ja
jb
mov
lret
je
pushf
xlat
addr16
test
inc
sub
xor
sub
and
push
and
pop
mov
and
dec
shrl
dec
pop
pop
mov
lret
jns
mov
jge
and
cmp
in
xchg
mov
jo
pop
and
mov
cmc
fidivrl
xchg
cmp
lahf
nop
or
or
mov
push
inc
push
add
je
orl
inc
add
stos
cmc
call
shll
scas
cmpsl
sub
jno
mov
xor
sub
add
fdivp
and
add
insl
outsb
dec
fwait
outsb
sub
out
sti
mov
push
mov
mov
xchg
faddl
xchg
mov
or
xor
outsl
cltd
ljmp
lret
test
xor
xor
mov
inc
pop
jae
jg
lret
inc
scas
adc
lcall
mov
fs
addb
es
mov
add
arpl
aad
lret
out
inc
push
fsubrp
loopne
in
add
daa
les
mov
js
sub
ljmp
js
xor
push
lahf
mov
xchg
ret
pop
and
test
rcrl
xchg
inc
sub
ret
dec
rep
test
in
insl
xchg
out
pop
call
popf
dec
test
rcrl
lahf
out
insl
lret
dec
sbb
scas
mov
push
popf
sub
xchg
and
mov
loope
iret
sbb
int
sarl
cmp
cmp
int
testb
jp,pn
mov
mov
dec
lock
pop
mov
mov
decb
add
mov
mov
lahf
test
jb
xchg
gs
loop
sbb
es
lock
and
mov
pop
dec
cmp
mov
into
sbb
ret
sub
aas
adc
add
pushf
push
pushaw
js
add
push
setl
add
in
add
mov
fisubrl
mov
lods
out
aas
sar
pop
lods
inc
inc
cmc
inc
push
push
mov
jl
int3
push
cmp
pop
das
push
rcl
in
and
cmp
dec
sbb
adc
xor
mov
lock
lea
das
and
fs
dec
jno
xor
cmp
ja
and
ja
push
andb
scas
cmp
insb
sub
les
inc
xor
stos
in
test
out
ljmp
sti
sub
aaa
filds
push
fxch
lods
cmp
jl
repz
test
jno
mov
jp
lock
imul
insl
sub
lods
jae
xchg
test
add
clc
movsb
add
pop
xchg
pop
cwtl
stc
shl
mov
pop
andl
divb
je
sbb
lds
cmp
inc
jp
aad
lret
fstl
fidivs
lret
ret
addl
xchg
jge
sub
dec
or
test
mov
or
fwait
or
dec
xor
insl
xchg
push
mov
std
out
stc
mov
fld
mov
cs
cmp
call
outsl
mov
xchg
push
mov
sub
into
sti
aad
es
movsl
cmp
jnp
nop
cmp
mov
mov
repnz
xlat
pop
pop
aaa
dec
push
ljmp
mov
orl
je
jg
mov
mov
pop
fcomps
test
dec
push
cmpl
push
sbb
push
shlb
dec
pusha
leave
loopne
sbb
jmp
fs
xor
or
mov
inc
jae
aad
ds
mov
orl
dec
mov
les
bound
fidivl
int
pop
add
xchg
lret
adc
sarl
popf
cmp
jle
cs
xchg
imul
push
or
xor
push
sahf
or
mov
add
push
sub
jmp
cs
lods
sub
adc
push
fs
dec
cmp
in
or
mov
lock
sub
lds
vmovdqu
mov
mov
cwtl
mov
inc
sub
imul
repnz
xor
aas
dec
mov
shl
fisttpll
mov
fistps
aaa
pop
add
inc
dec
add
lds
and
icebp
xor
or
jnp
pop
insb
mov
js
ret
test
iret
mov
or
adc
mov
xchg
andb
mov
or
jae
movl
cmp
lock
loope
lret
sub
out
jmp
aad
cmc
stos
jne
add
adc
in
das
xchg
jg
shlb
xchg
push
cmpsl
pop
and
cmp
and
xchg
addr16
lret
adc
je
push
jns
mov
mov
les
mov
mov
xor
sub
loopne
adc
mov
adc
jb
pushw
sarb
mov
cmp
jne
or
mul
lahf
sbb
pusha
add
outsl
int
inc
inc
inc
shl
cltd
xor
mov
xor
jnp
push
int3
sbb
sbb
sbb
decl
bound
call
mov
and
adc
lahf
and
sub
add
mov
xor
test
imul
ficoms
rorl
jp
inc
jmp
fiadds
dec
or
rcrl
outsl
mov
inc
in
and
adc
jecxz
and
ficoml
and
inc
rorl
movsb
inc
orl
pop
mov
ret
xchg
jnp
xchg
aas
outsl
inc
cmc
mov
aas
movsb
mov
lea
cwtl
lock
ljmp
and
jecxz
cmp
lea
pop
inc
cs
sub
pop
pusha
and
imul
and
xor
dec
pop
xorb
es
test
mov
insl
and
fstl
push
sub
cmpsl
jne
imul
sahf
fists
push
cltd
mov
mov
lods
pop
xlat
jmp
mov
jo
sub
int3
adc
shlb
rcrb
std
push
and
hlt
imulb
inc
outsb
loop
xchg
or
jnp
xchg
push
and
in
adc
jo
ljmp
adc
nop
mov
outsb
pop
jmp
in
pop
aad
lcall
add
add
mov
xlat
clc
pushf
iret
cmp
mov
shl
test
push
clc
sub
int
mov
and
mov
pop
or
cmp
inc
ret
es
pop
scas
mov
daa
sahf
test
jg
pop
cmpsl
aam
test
inc
stos
xor
mov
cmp
mov
out
mov
push
sbb
inc
adc
and
adcb
and
pop
xlat
sub
jb
pop
xor
testb
lahf
mov
mov
shrl
cmp
sub
dec
fimull
sbb
mov
cmc
mov
xchg
mov
and
or
and
shl
mov
jl
fisubl
adc
jl
dec
adc
std
jae
push
cmp
movsl
addr16
pop
stos
add
mov
mov
aas
or
out
dec
mov
outsl
cmp
dec
loopne
pop
test
or
stc
pop
ret
cmpb
shrl
aam
fiaddl
repz
inc
icebp
jbe
inc
gs
mov
jle
pop
jb
jl
push
mov
aam
repz
das
scas
daa
test
ss
add
filds
int
mov
sbb
mov
xchg
fistpll
sub
popa
jno
pop
or
loop
mov
pop
das
adc
dec
out
movl
cmp
sbb
pop
cmpsb
divb
cmc
sbb
pop
call
xor
imul
loopne
das
mov
mov
std
xor
inc
pop
mov
movsl
fdivr
mov
mov
sub
push
lock
inc
lret
jl
test
or
ljmp
enter
jge
loopne
sti
popa
data16
test
mov
iret
notl
ljmp
jo
test
inc
or
ret
sbb
lock
inc
lods
xlat
xorb
or
add
jp
adc
lds
inc
jle
cs
aas
aas
sub
push
and
xchg
jo
push
dec
aas
mov
xor
out
in
xchg
scas
xchg
pop
shll
stc
or
push
ds
mov
cmp
popf
jne
push
movl
insb
mov
outsl
mov
arpl
es
ret
xor
sbb
and
or
cmp
inc
add
sbb
adc
adc
loope
mov
shlb
daa
pop
movsb
mov
adc
ffreep
mov
fldl
cmc
test
xchg
xchg
adc
and
add
jae
adc
fnstcw
fwait
pop
pushf
jae
and
out
icebp
mov
or
add
dec
adc
stos
call
popa
dec
pop
push
sub
shll
mov
xor
insb
and
sbb
sub
sbb
and
nop
pusha
es
stc
xor
fisubs
cmp
fldl
mov
pop
enter
mov
add
outsl
es
adc
xchg
xor
roll
enter
jmp
pop
shr
sbb
inc
push
loope
aaa
xor
pop
fstpl
xchg
add
mov
insb
stos
lcall
or
mov
mov
sub
rcrl
sub
leave
sahf
aas
pop
test
and
incb
inc
lock
and
jo
mov
mov
add
dec
leave
mov
inc
push
inc
push
aas
adc
mov
inc
dec
xchg
sub
imul
dec
push
push
jl
lock
stc
sub
and
pop
ret
push
bnd
or
aas
not
inc
dec
pusha
jns
js
jno
push
cli
loop
jle
mov
scas
lea
imull
fwait
test
adc
dec
xchg
cwtl
add
dec
mov
cmp
scas
mov
loopne
pop
lcall
push
lret
rcrl
lcall
imul
insl
push
mov
mov
inc
jge
imul
xor
pusha
dec
repnz
out
scas
adc
movsb
pop
cld
push
push
daa
adc
test
lret
mov
js
cmp
add
add
dec
fsubrs
inc
rol
mov
mov
mov
vpshuflw
sbb
adc
mov
pusha
sub
or
stos
and
pop
push
push
pop
push
sbb
leave
mov
lcall
push
jmp
or
mov
addr16
push
and
jg
adc
loop
or
mov
push
mov
insl
inc
test
dec
cld
pop
mul
cmp
mov
cli
jnp
lock
mov
lahf
ret
xlat
sub
popa
adc
pushf
add
xchg
pusha
andb
push
and
add
mov
into
sar
sbb
adc
inc
cmpb
push
xor
sub
lods
mov
pop
mov
cmp
dec
mov
xchg
call
jnp
push
mov
hlt
lods
jno
mov
mov
adc
xchg
push
dec
cwtl
push
and
mov
aas
ljmp
adcl
push
aam
xchg
lcall
cmovns
das
lret
xchg
mov
mov
cmpsb
and
cmp
sbbl
pushl
fs
adc
popf
mov
or
test
es
jp
jg
mov
add
loope
sub
xor
test
xchg
sbb
adc
sub
mov
xchg
sub
or
aad
ljmp
xor
pop
inc
js
push
and
cmc
leave
sbb
add
pop
faddl
pusha
pop
int
into
mov
pop
pop
push
jl
cmp
sub
cwtl
stos
or
ss
cli
push
adc
jae
dec
cwtl
dec
jmp
push
aam
jnp
in
out
negb
sub
push
nop
mov
jp
add
cmpsb
inc
sbb
je
icebp
jl
into
leave
hlt
or
lds
lret
shlb
jnp
daa
dec
mov
mov
out
in
adc
ja
out
dec
clc
gs
mov
fistpll
imul
imul
int
jae
out
sub
adc
stc
lds
insl
inc
xor
or
je
shl
loopne
jns
fsubrl
stos
flds
mov
xlat
movsb
into
xchg
sub
loopne
jne
ljmp
incl
inc
inc
movsl
fwait
mov
mov
scas
lea
push
or
sarl
mov
mov
sub
es
into
pop
xchg
sti
push
aad
movsb
sbb
fsubrs
andl
push
adc
outsl
out
cmpsb
stos
push
sti
std
cli
stos
push
and
or
ljmp
dec
std
jae
leave
test
pusha
negb
sar
cmp
or
loope
cld
repnz
inc
inc
pop
out
pusha
lret
stos
mov
push
cmp
pop
mov
cmp
cmp
xchg
stc
mov
cld
mov
xchg
dec
jb
cmp
lahf
shrb
and
aad
nop
xor
lds
inc
out
or
cmc
sub
cmp
and
or
sbb
sub
clc
lret
adc
jae
jl
pop
push
sti
mov
fbstp
enter
adc
xor
xor
das
or
xor
jbe
xchg
push
sti
das
sub
shll
inc
movsb
repnz
cmp
shll
popf
ss
out
fisttpll
mov
lods
repnz
loopne
dec
arpl
outsl
add
sbb
sub
popa
or
arpl
aas
mov
idivl
jg
inc
jns
scas
pop
aad
or
push
dec
lods
loop
in
pop
fistpll
shl
lds
and
jae
adc
lods
cmc
xor
cmp
movsl
stc
add
out
mov
movsb
mov
lahf
push
rorb
in
push
leave
add
fnsave
dec
xchg
lea
xor
pop
xchg
sub
mov
and
and
push
int3
cltd
sbb
jbe
xchg
jo
pop
insb
shrl
ficompl
xchg
andb
adc
mov
fcomi
and
sub
cmc
lea
ret
jno
das
adc
loop
cmp
mov
icebp
shrl
cmp
mov
repz
mov
push
xchg
push
cmp
lea
testb
cmp
rclb
insb
xor
xor
and
sub
sub
inc
or
nop
xchg
movsl
das
adc
jmp
mov
popf
pop
xchg
dec
bound
jne
shl
inc
push
dec
cmpsb
popf
fdivr
aad
jle
lods
sub
cli
inc
lret
cltd
pop
into
shl
test
cmp
shlb
xor
test
lea
repnz
das
push
stc
ljmp
pusha
sub
sub
fmull
ret
rclb
pop
lea
dec
enter
push
sarb
sbb
adc
cmpl
outsl
lret
lret
imul
cmc
mov
subb
ficoms
lcall
xchg
push
jecxz
push
push
mov
cli
aaa
mov
out
dec
jl
in
push
data16
cmp
push
cmpsb
add
or
lcall
gs
mov
sar
fists
adc
inc
sbb
dec
sbb
les
and
inc
test
xchg
stos
jl
sub
sub
ret
sarl
mov
push
repz
loop
rcl
or
or
sub
pop
mov
xchg
shll
mov
insl
and
inc
xor
mov
movsl
mov
dec
std
dec
dec
popa
data16
int
les
adc
insl
pusha
xchg
out
mov
ret
jmp
add
mov
pusha
fsubl
and
sbb
int
cmc
mov
orl
mov
jmp
ljmp
push
and
and
mov
aam
cmpsl
testb
push
and
sbb
enter
cmp
lret
push
xor
lds
insb
popa
dec
dec
mov
push
sbb
pop
mov
jp
je
aas
or
adc
xchg
fmull
sub
push
aad
insb
push
push
xchg
inc
xchg
aas
mov
fsub
leave
push
xchg
ljmp
push
ss
imul
testb
rcrl
fcmove
arpl
push
mov
or
dec
sbb
xor
add
or
mov
fdivr
iret
mov
sbb
cld
in
mov
lret
jbe
daa
int3
ret
sarb
fstps
stc
loope
lods
aam
rcpps
stos
sbb
inc
or
movsb
fs
xchg
fsts
ret
xor
pop
jbe
popa
imul
jg
inc
push
outsl
mull
fbstp
jmp
rorl
adc
fnstenv
mov
mov
fidivl
push
inc
fs
enter
xor
jle
cmp
dec
dec
in
pushf
add
addb
push
push
pusha
pop
mov
xor
test
test
inc
push
inc
inc
mov
dec
cmp
in
mov
jge
pop
out
rcll
int3
pop
add
hlt
stc
push
pop
orl
popa
push
repnz
cwtl
ja
cs
xor
dec
andb
outsl
lret
pop
mov
pop
dec
jno
fidivl
or
mov
scas
lahf
and
sbb
mov
cmp
or
sbb
push
nop
outsl
xlat
out
imul
push
add
push
imul
dec
dec
push
call
jno
push
loop
and
push
xor
js
push
add
mull
adc
sub
scas
cmp
xchg
ffreep
inc
cli
mull
out
lahf
mov
nop
gs
scas
mov
push
stos
lods
rorl
pop
cld
and
jmp
xchg
jecxz,pn
mov
cmpsb
inc
xchg
xchg
movsb
add
je
cmp
popf
fldl
in
aam
inc
shr
jp
outsb
or
iret
or
cli
dec
cmpsb
mov
xor
mov
cmp
divl
out
add
mov
and
cs
jp
insl
mov
mov
test
adc
sarb
and
scas
fnstenv
xchg
xor
adc
mov
pop
push
push
or
data16
dec
push
jle
addr16
test
add
push
mov
pop
mov
std
out
dec
pop
sub
stos
dec
out
push
ret
ljmp
dec
fwait
movsl
pop
in
pop
out
fs
jmp
sub
lds
imul
insb
jp
lret
pop
imull
popa
fisubrl
inc
sbb
pop
insb
test
popa
sbb
in
test
js
sbb
adc
fwait
push
call
orb
mov
sub
sub
ss
aaa
iret
je
test
jno
icebp
sub
lahf
cmp
cmp
data16
out
in
lahf
idivl
mov
adc
cmp
jecxz
in
lock
roll
adc
js
jmp
cltd
fmul
xchg
lea
sub
push
or
rclb
mov
mov
sarl
iret
xchg
sub
or
test
lret
xchg
leave
sbb
jmp
ja
adc
pop
loop
cltd
out
daa
inc
push
mov
mov
push
test
insl
mov
in
push
leave
xor
xor
and
out
dec
inc
jg
aad
mov
testb
inc
cmp
or
dec
or
sbb
ret
aaa
jae
test
ret
cmp
jns
push
xchg
xchg
mov
xor
enter
mov
shlb
jae
xor
aad
into
cmpsb
xlat
sbbb
push
mov
popf
or
jge,pn
out
fwait
test
jg
daa
loop
ja
and
sti
jne
lds
pop
ja
iret
or
hlt
mov
and
mov
in
adc
fisubs
aad
push
sbb
in
sub
pop
lods
je
mov
mov
aam
or
mov
push
jne
push
jno
push
icebp
push
jo
loopne
imul
mov
push
pushf
mov
daa
mov
daa
stos
mov
push
sbb
cmp
aad
xor
mov
push
addr16
sarb
inc
and
out
jno
mov
stc
inc
pop
psllq
in
cmpsl
mov
repnz
movb
mov
iret
ljmp
dec
adc
or
mov
xchg
push
push
jp
dec
pushf
and
fcmovnbe
sarb
mov
stos
jbe
call
jbe
xchg
lds
push
shll
scas
push
lahf
sbb
adc
rcl
cmpsb
dec
mov
mov
rcll
mov
xlat
daa
push
pop
out
adc
in
sub
dec
xchg
pop
ds
lods
add
jl
aad
fs
dec
xchg
xor
adc
mov
loop
popf
loop
mov
pop
xlat
xor
shll
mov
stos
xchg
div
mov
xchg
nop
lahf
pop
pop
xchg
mov
outsl
xchg
and
inc
or
out
pop
xlat
adc
ljmp
loope
inc
pop
dec
jecxz
inc
into
push
xor
out
pop
sbb
stc
jbe
stos
push
jno
pop
sbb
loopne
xor
hlt
dec
movzbl
jno
cmp
icebp
cmpsb
negb
cli
add
cmp
adcl
cltd
leave
or
push
imul
pop
adc
push
inc
xchg
xchg
inc
mov
loop
inc
fucomi
adc
cltd
fwait
pop
fstps
out
ret
bound
inc
ss
add
loope
pop
push
loope
push
adc
or
repnz
cltd
clc
js
cmp
loope
push
loopne
add
pop
fdivrl
icebp
mov
inc
les
cmp
cmp
rcll
dec
adc
lsl
inc
orb
call
inc
inc
stos
pop
push
pop
int
push
fcoml
testl
mov
pop
cltd
adc
sti
sub
filds
dec
cmp
push
add
ret
repz
cmpb
push
sbb
dec
decl
and
aam
mov
scas
ret
repz
xlat
dec
inc
bound
aaa
int
repnz
test
or
imul
popa
sbb
andl
xor
out
movsl
adcb
or
ja
stos
sub
loop
negl
pop
xorl
in
or
and
and
jno
lea
ja
inc
in
lock
imul
xchg
movsb
ja
xchg
sub
jns
icebp
fs
gs
fistpll
xor
adc
pop
jp
sbb
addr16
mov
pop
imul
xor
or
addr16
push
push
imul
dec
imull
mov
mov
mov
cld
add
xchg
jnp
dec
pop
jb
push
dec
shlb
jmp
ds
mov
lds
mov
test
rcr
or
inc
jb
mov
cmpsl
sbb
cmpsl
jns
adc
cmp
nop
xchg
pop
or
xor
cld
pop
xchg
mov
xchg
repz
fdivs
mov
roll
out
or
sbb
and
sub
movsb
cmp
xchg
inc
in
mov
push
xchg
sub
enter
in
sbb
ja
xchg
lahf
mov
pop
xlat
dec
inc
out
sbb
test
test
pop
bnd
dec
lds
sbb
movsl
adc
orl
mov
mov
insb
stos
dec
movsb
aad
aam
cmp
sub
lcall
paddusw
movb
sahf
pop
idivl
stc
mov
sbb
lcall
or
mov
push
cmp
add
pop
rorb
es
nop
mov
dec
add
xchg
test
sbb
sbb
mov
or
adc
mov
xor
jnp
ja
mov
cltd
mov
shll
push
xor
ret
jmp
pop
dec
cmpsl
pop
jg,pt
leave
popa
mov
push
in
into
xor
lods
popa
inc
sahf
imul
ds
arpl
test
jg
movsl
jb
inc
std
inc
add
pusha
fcompl
pop
aas
xchg
and
dec
stos
popa
scas
push
dec
out
data16
adc
sbb
lea
jecxz
xchg
iret
mov
out
jbe
xor
cltd
jne
daa
shrl
sbb
loope
xor
into
xchg
add
aas
test
stc
xor
pushf
cs
jns
mov
dec
xchg
lods
adc
cmc
add
daa
paddusb
sbb
iret
jle
inc
or
rorb
outsb
icebp
nop
mov
je
leave
push
cmpsl
call
xor
dec
sbb
and
or
sbb
lods
push
mov
push
mov
jg
xchg
xor
xor
ror
sub
sub
dec
out
sub
add
xor
xor
xor
outsl
sbb
imul
mov
jns
cwtl
mov
sbb
lods
dec
sub
jne
ret
fistpl
mov
stc
mov
addb
cmp
or
loope
movsl
dec
lret
popf
cmpsl
inc
push
push
loope
mov
adc
or
add
mov
pusha
clc
push
stos
lea
and
cmpl
xor
js
sbb
push
adc
lret
pop
inc
pop
push
stos
pop
lret
gs
mov
je
and
out
nop
adc
andb
adc
imul
stos
cltd
ficomps
jecxz
lahf
pop
sarb
out
push
test
add
cmpsb
cs
mov
adc
adc
rolb
inc
int
mov
inc
push
in
dec
nop
inc
dec
in
mov
cmp
push
xor
in
push
mov
aas
lea
mov
xor
fistpll
ljmp
les
lret
dec
nop
mov
in
mov
lret
aaa
outsl
adc
sub
outsl
data16
in
adc
out
xor
xlat
fstp
sub
mov
adc
or
lds
lds
jle
cs
dec
jecxz
xor
adc
jge
push
icebp
out
dec
mov
mov
fsubrs
xchg
push
jae
pop
xchg
pop
out
jb
add
jne
ljmp
mov
mov
sub
iret
cmpsl
mov
divl
dec
xor
out
mov
jnp
xchg
mull
cmpsb
sahf
lods
mov
pop
and
lcall
sar
mov
mov
in
in
iret
jb
outsl
adc
out
inc
xchg
jb
pushf
inc
cmpsb
adc
addb
decl
pop
dec
rcll
leave
mov
xor
dec
test
ljmp
stc
mov
cli
sbb
jae
sub
gs
pop
xchg
xchg
testb
inc
inc
aam
push
lcall
es
inc
mov
arpl
xlat
in
jo
loopne
sub
inc
adc
push
lcall
js
sbb
popa
inc
out
add
push
repnz
lods
imul
leave
add
sti
sahf
xor
orl
sahf
push
mov
fwait
cmp
aad
push
jb
icebp
pop
cmpsb
sub
xor
rol
sbb
repz
inc
sub
cmp
or
or
std
pop
dec
in
cwtl
adcl
pop
xchg
mov
pop
fldl
rorb
in
mov
jp
les
fwait
test
and
push
orb
dec
lds
jae
loope
js
sub
mov
xchg
pusha
into
jbe
mov
out
adc
jp
cmpl
rcll
push
enter
sub
dec
inc
mov
vmovhps
movsb
fadds
test
outsb
jae
mov
pop
adc
inc
pop
add
or
mov
mov
daa
out
bound
std
int
cmp
std
mov
dec
roll
or
add
mov
vpunpckldq
and
adc
mov
xchg
lcall
push
pop
pusha
mov
inc
dec
xchg
bound
adc
pushf
lods
xchg
sub
test
scas
pop
xor
dec
gs
shll
sbb
adc
xchg
mov
and
add
scas
cmpsb
push
mov
and
sbb
or
fisttpl
inc
shrb
stos
cmpsl
mov
lods
into
cmpsb
pop
gs
cmp
xchg
ds
pop
loopne
arpl
fildll
imul
push
movsl
fwait
dec
sub
pop
mov
add
add
movsb
stos
cmp
xor
int3
and
shr
pop
cmp
test
xchg
scas
dec
cli
int
cmpsb
mov
insl
loope
pop
repz
imul
adc
popa
pop
out
push
and
fs
sub
pop
xchg
sbb
fisubrl
popa
xchg
sbb
push
pop
mov
loopne
out
int3
xchg
jo
mov
dec
fs
lcall
ds
push
push
incl
sbb
mov
xor
add
icebp
adc
test
or
adc
cmp
es
cmpsb
jle
roll
loope
cli
sahf
push
add
push
adc
cmp
jle
in
loope
fiadds
push
adc
pusha
xor
test
out
fstl
in
cs
cwtl
push
sub
into
fnstcw
and
jnp
aas
push
iret
rcrb
push
mull
dec
js
xchg
mov
fs
xchg
fcoms
out
sub
cmp
call
cmp
decb
imull
jmp
pop
sub
es
lret
cwtl
adc
sahf
outsb
call
xchg
cmp
mov
mov
fistpl
and
sub
sti
mov
cmp
aam
push
int3
sti
loope
ret
cwtl
mov
sbb
ret
ljmp
push
mov
add
cmpb
gs
test
fcoms
mov
imul
dec
jl
push
rcll
lock
test
gs
inc
and
mov
jns
stos
stos
jnp
mov
ja
mov
add
pop
aad
test
nop
sub
xchg
jns
loope
push
dec
sbb
mov
ret
cmp
mov
jg
cmp
popa
sti
shrl
popa
inc
leave
jle
xchg
fwait
sbb
popa
test
aam
sbb
test
test
clc
out
rcrl
cwtl
ret
mov
jbe
jge
mov
push
sub
in
int
lods
ljmp
pop
out
lds
sub
out
pop
daa
or
fcoms
out
xchg
lock
inc
mov
pusha
fsqrt
add
xchg
dec
mov
hlt
and
adc
testb
sti
iret
inc
jge
mov
pushf
daa
xchg
popa
cmpsb
sahf
and
dec
pop
cmc
pop
test
xor
sbbl
and
xchg
jle
xchg
mov
fpatan
xor
cmc
jb
mov
leave
sarb
cmp
lods
adc
sbb
mov
mov
aad
pop
icebp
jne
ja
mov
inc
stos
inc
lahf
popf
fsts
jbe
jb
push
incb
fwait
lds
out
and
mov
sbb
pushf
lds
push
imul
fcmovnbe
cmp
mov
xchg
jo
pushf
mov
push
scas
sub
insl
add
test
fidivrs
fiaddl
and
scas
mov
xchg
cmpsb
jecxz
scas
add
xchg
sub
cmp
add
mov
adc
push
pop
mov
add
dec
out
cmp
lea
bound
mov
pop
cli
mov
lret
push
sahf
or
cmp
sti
addr16
pop
out
insl
shl
sahf
addr16
pop
ret
push
lea
add
push
ja
fidivrs
int
xor
add
stos
or
xchg
cmp
sbb
in
push
cmp
popa
das
or
rcll
jno
popa
mov
sub
and
cmpsl
repnz
xor
ds
inc
call
bound
loope
or
pop
out
iret
out
push
jns
movsl
and
mov
andb
cmpsb
cltd
push
xchg
aaa
popf
das
cmp
rclb
mov
adcl
push
push
jnp
xchg
inc
pop
xor
mov
jb
push
vmwrite
das
ficompl
stc
xchg
decl
int3
fiaddl
jmp
test
aam
sbb
mov
push
cltd
adc
dec
jmp
rcll
push
add
mov
add
cli
lret
mov
gs
push
fmul
dec
or
sub
xor
inc
nop
cmpsl
lahf
or
enter
cmp
gs
mov
outsl
rcl
cmp
pop
hlt
sahf
mov
lods
jns
ss
mov
jecxz
cs
push
fs
dec
and
sbb
pop
pop
xchg
dec
and
pushf
adc
push
arpl
mov
ja
lods
jb
in
dec
mov
add
jae
mov
jbe
cli
inc
pop
jge
mov
mov
cltd
repz
cmp
sbb
inc
loop
hlt
mov
repz
inc
lea
xor
rcl
popf
cs
push
cmp
xor
in
adc
mov
rcr
cmp
xor
mov
xchg
sub
and
data16
push
lret
jnp
cltd
or
xchg
inc
iret
push
sbb
xchg
pop
test
mov
push
ljmp
outsb
jb
inc
es
xchg
push
push
es
ret
sub
jb
add
lcall
mov
cli
dec
stc
shrl
inc
mov
es
add
into
dec
loope
or
cmc
lds
lods
adc
sbbb
adc
push
and
fsts
cwtl
lcall
nop
jns
movl
xchg
dec
inc
add
push
pop
imul
mov
scas
lea
in
xchg
or
stc
mov
std
adc
xchg
xchg
xchg
ret
cmp
lock
test
push
into
sub
je
addr16
sahf
mov
idivl
push
dec
jp
xchg
fwait
shll
pushf
pop
nop
adc
or
insb
in
push
jl
stos
sbbl
fs
mov
mov
mov
jge
insl
xchg
sub
inc
ljmp
inc
loopne
out
mov
mov
scas
inc
pop
fcompl
jp
jg
xor
or
inc
outsl
aam
ss
push
sub
rorb
xchg
xchg
add
lret
fidivrs
dec
xchg
push
or
fdivrs
lods
jp
rclb
fsubrl
fstps
lods
cmpl
repz
sbb
dec
jl
mov
les
push
test
mov
jnp
rcrl
or
popa
aad
jp
dec
add
cltd
add
mov
mov
cmp
push
popf
pop
int
pop
das
leave
jl
mov
fcomps
xor
data16
into
nop
icebp
cmp
sbb
in
cmp
mov
out
push
cmp
inc
add
and
inc
and
and
in
xlat
ret
cli
add
lds
in
push
push
add
cli
adc
lods
xor
or
sbb
jns
es
js
fbstp
fwait
sbbb
jge
mov
xor
fwait
clc
xchg
xchg
es
dec
and
out
sub
cmp
xlat
pop
in
testl
jecxz
push
repnz
insb
add
xor
sbb
ss
insb
mov
lcall
pop
mov
cmp
jae
mov
pop
xlat
xchg
repnz
scas
jecxz
test
lcall
aas
adc
cmp
or
fistps
pop
jl
jne
loopne
push
pushf
ja
int
pop
imul
cli
sbb
xchg
aad
sbb
bound
dec
mov
insl
sbb
and
push
leave
jmp
push
inc
xor
mov
fwait
popa
jmp
or
repz
xchg
call
add
jae
popf
adc
or
nop
dec
push
xor
add
decl
pmullw
movsb
inc
dec
mov
cld
cltd
shlb
pop
mov
out
pop
mov
sub
in
ja
pushf
jmp
loopne
insb
sub
add
gs
js
aas
sti
jecxz
into
test
push
icebp
cs
lret
in
scas
fs
push
xchg
mov
rorl
inc
mov
mov
mov
jp
shrb
xchg
xor
cmp
data16
stos
lds
ss
and
cmpsb
repnz
loopne
push
cmp
aad
xor
xchg
pushf
ljmp
mov
mov
cmp
and
pop
leave
stos
or
sub
push
lcall
insb
push
cmpsb
pop
fbstp
test
jle
cmp
test
in
les
fistpll
inc
sbb
mov
dec
imul
into
mov
dec
bound
sarb
pushf
or
enter
mov
es
sbb
testb
mov
int
sbb
push
fisubl
pop
sti
cmpsl
popf
or
into
push
stos
loopne
jg
mov
sbb
sub
in
sbb
push
inc
dec
mov
xor
lcall
ljmp
xor
fsubl
mov
mov
lret
jae
out
shl
mov
shlb
stos
shll
sub
lea
inc
cld
mov
fistps
sbb
mov
cli
rdmsr
fsubrl
testb
mov
repnz
lret
rolb
push
popf
pop
mov
test
and
sub
jo
icebp
jb
push
cmc
movsb
inc
popf
mov
push
adc
mov
mov
stos
xchg
inc
jp
mov
jno
xchg
push
push
and
dec
dec
test
adc
jmp
ja
and
xchg
mov
mov
mov
or
push
icebp
mov
add
push
push
sbb
push
jp
testb
pushf
cmp
cli
test
movsl
sbb
lods
jp
dec
cli
mov
movsl
mov
jl
mov
fsub
lods
pop
mov
xchg
repz
popl
sub
inc
push
mov
inc
pop
jae
rorl
mov
repnz
ss
fs
sbb
movsb
mov
mov
push
mov
mov
sub
scas
push
outsl
inc
mov
andl
cld
push
cmc
jmp
fdivl
addb
push
repnz
in
nop
icebp
rolb
pop
andb
xor
je
inc
xor
jge
pop
mov
rorl
adc
stos
stos
jnp
jae
jg
aas
sbb
hlt
mov
out
mov
or
and
pop
cli
loopne
ds
cld
sti
xchg
mov
movsl
push
lods
adc
mov
std
jmp
xchg
mov
lea
mov
mov
cmp
pop
push
add
shrb
adc
das
push
cmp
mov
jge
fimull
sbb
inc
jb
fldt
or
inc
cmpsl
and
pop
subb
cmpb
loope
sub
and
aad
punpcklbw
xchg
in
in
xor
nop
sahf
addr16
xchg
cmp
andl
sub
or
jl
mov
movsl
jo
call
mov
mov
and
adc
orb
push
sti
cmpb
jge
and
xor
add
and
mov
dec
popf
dec
dec
cmpsb
imul
sbb
ja
sahf
pop
pop
cmp
and
or
pop
push
jo
lea
enter
cltd
ret
icebp
in
mov
imul
inc
fimuls
cmp
cmp
and
shl
sub
iret
adc
nop
pop
push
mov
push
rcll
adc
add
sub
xor
fldenv
out
sbb
pop
in
xchg
mov
xor
dec
incl
je
and
fisubrl
out
andb
je
in
xchg
fsubr
nop
mov
cli
mov
jg
ds
call
pop
lock
xchg
clc
add
fdivrs
adc
cmp
ja
pop
clc
mov
sbb
divb
pop
iret
jp,pn
sbb
jecxz
aad
xlat
fsubrl
scas
mov
out
dec
push
add
fwait
jmp
xchg
sbb
mov
pop
ljmp
sahf
push
mov
fdivrl
sbb
add
sbb
push
out
sbb
dec
test
lock
sbb
mov
orb
push
mov
imul
js
push
sbb
outsl
ja
test
push
das
cmpsb
lcall
push
xchg
xor
in
xor
out
mov
inc
push
pop
arpl
jae
xchg
in
enter
lcall
xor
or
lahf
imull
fs
std
nop
stos
pop
mov
idivb
jbe
cmp
or
dec
mov
ds
mov
mov
in
mov
in
sti
mov
dec
push
adc
mov
sbb
sub
sbb
aam
jb
clc
cmp
mov
in
xchg
fistpl
sub
cmp
enter
cmp
inc
pop
xor
dec
jo
sbb
shlb
jo
clc
xorb
fs
push
mov
popf
sbb
subl
jo
ds
cs
scas
data16
add
imul
je
sbb
and
pop
cld
xchg
shll
inc
mov
rcr
clc
mov
cmp
shlb
pop
add
ds
in
xchg
not
adc
jg
int3
xor
mov
js
jno
push
push
fxtract
scas
cld
mov
loop
jbe
jl
adc
mov
int3
sub
mov
push
scas
xchg
adc
adc
lock
jbe
xchg
pop
push
xor
mov
lret
loope
add
jb
dec
pusha
mov
mov
dec
mov
int3
aaa
jne
sub
sub
xor
mov
int3
mov
mov
cld
sbb
arpl
sti
or
pushf
enter
inc
mov
das
test
pop
dec
mov
shl
ja
add
xor
rcl
leave
out
les
xchg
imull
mov
je
dec
cmp
outsl
das
jmp
sub
movb
stos
std
ljmp
mov
ror
loop
and
hlt
dec
jbe
pop
scas
bsr
xor
fists
repz
mov
in
js
and
imul
rcll
repnz
movsb
cmp
lcall
jbe
mov
jno
sbb
inc
cmpsb
cmc
mov
jl
in
sbb
movsb
cmp
rcrb
jo
pusha
in
pop
in
push
mov
cltd
ja
xchg
add
push
fucomip
in
xlat
addr16
push
push
popa
mov
test
mov
push
std
mov
sbb
add
cwtl
jmp
lret
imul
jp
repnz
jge
push
sbb
ror
ja
testl
or
adc
push
shrb
pushf
mov
addr16
sub
lret
xorb
sbb
sub
cwtl
jnp
mov
xchg
imul
aaa
sbb
sbb
icebp
add
mov
bound
jbe
pushf
test
mov
test
es
mov
cmpps
scas
inc
fnstsw
out
stos
or
push
xchg
pop
or
xlat
scas
cwtl
and
loopne
add
mov
push
das
mov
dec
clc
and
mov
out
jae
xchg
les
sbb
ret
mov
test
test
sub
cmp
cmc
stos
hlt
and
xchg
mov
inc
mov
int
sub
insl
fidivrl
add
filds
xor
inc
aad
xchg
clc
insb
aas
add
ljmp
out
xchg
mov
js
jl
xor
gs
call
pop
add
cmpb
push
pushf
push
jbe
or
mov
mov
lea
sbb
mov
stos
ja
lea
in
mov
push
aas
rolb
sub
fldl
sbb
in
icebp
ljmp
lret
loop
ror
or
add
cmp
and
or
fcoms
pcmpgtd
or
push
push
push
mov
insb
cmp
popf
loope
jns
mov
inc
jl
std
jmp
push
aas
sub
fnstsw
xchg
fisubrs
ror
ja
outsb
imul
cmpsl
xchg
in
popf
ds
leave
or
das
jg
jb
dec
dec
inc
ret
adc
push
jb
pop
pusha
sarl
das
out
les
push
pop
jne
ret
cli
addb
out
mov
daa
lock
push
sub
mov
lret
mov
int
inc
gs
xchg
jmp
pop
jbe
leave
ror
inc
mov
xchg
scas
les
jbe
imul
adc
insl
movsb
bound
aas
lds
loop
sbb
stos
mov
mov
out
test
xchg
lret
or
lock
sub
sbb
enter
aaa
pop
and
cli
popf
xchg
xchg
mov
je
in
jmp
outsb
or
lcall
push
int
adc
inc
lods
popf
adc
or
inc
in
push
es
sub
sub
inc
pop
dec
lahf
int3
loop
fldenv
stc
jge
dec
cmp
aad
mov
push
lcall
pop
mov
mov
aad
inc
roll
cmp
add
sarb
fdivl
mov
fwait
imul
pop
xor
inc
in
pop
mov
cltd
dec
mov
mov
jbe
dec
mov
jle
jne
mov
sbb
or
shll
add
dec
ds
outsb
ja
add
cmp
xchg
repnz
popa
out
popf
cmp
xchg
out
ret
jg
mov
jle
sbb
shll
or
or
negb
fisubrs
in
pushf
lret
es
adc
movl
cs
cmp
daa
and
repz
out
xor
fidivl
lds
or
mov
or
push
sub
js
je
insl
jo
imul
pop
fwait
xlat
pop
or
repnz
xlat
cmp
mov
es
das
fcomp
xchg
jae
sarl
mov
mov
lcall
and
add
cmp
xchg
inc
jmp
test
inc
sbb
outsb
mov
dec
xchg
xlat
adcl
or
lcall
pop
add
jae
mov
jb
mov
mov
mov
pop
cmp
push
xor
mov
adc
xchg
aam
rclb
das
jae
push
jb
cli
jne
adc
push
or
xchg
jp
mov
mov
mov
add
xor
jge
xor
mov
inc
aam
pop
orl
sbb
andb
and
mov
loop
loop
mov
test
or
mov
imul
adc
nop
mov
aam
ret
adc
cli
and
rorb
xlat
daa
lock
adc
push
fnsetpm(287
dec
in
jnp
cmp
cmc
ds
cwtl
lods
popf
cmpsb
cmpsl
mov
mov
cmpsl
stos
sub
lods
fimull
popf
jl
mov
sbb
lahf
inc
call
xchg
mov
lcall
sub
sub
adc
jge
mov
sbb
jne
pop
bound
sbb
fst
test
sub
lcall
mov
xorb
data16
xor
div
xor
push
cld
stc
popa
sbbb
or
jb
aad
lds
xchg
pop
arpl
fsubrl
inc
adc
das
xchg
add
sub
ljmp
fsubl
andnps
in
pushf
mov
sarb
cltd
sub
and
rolb
mov
ljmp
arpl
cmpl
js
xchg
aaa
jae
mov
jb
insl
sbb
in
push
clc
push
outsb
pop
mov
cmp
dec
fimull
in
cltd
mov
popf
sub
in
clc
mov
mov
cld
inc
xchg
push
lds
mov
dec
out
xor
data16
mov
add
cmpsl
fidivl
mov
test
push
icebp
sbb
xchg
insl
jmp
xchg
adc
fisubrl
xchg
scas
pop
jl
mov
add
fadds
inc
or
or
mov
jns
sub
fists
int
mov
and
inc
rcll
rcrl
loope
xchg
xchg
hlt
daa
push
sbb
push
jae
call
je
xor
int
pop
inc
jne
test
hlt
enter
push
add
ret
fmuls
or
mov
shll
rcrb
dec
adc
out
dec
lds
mov
xor
arpl
lcall
dec
adc
xchg
insl
xor
push
jbe
mov
sti
push
cmpsl
aas
or
cwtl
mov
sub
jl
jg
dec
call
aaa
xchg
stos
jae
xchg
mov
cmpsl
xor
in
push
add
rorb
cmpsl
je
xchg
in
push
and
push
mov
or
pop
cld
loopne
or
jbe
idivl
loop
sbb
mov
mov
add
aaa
dec
xor
fldcw
and
jbe
mov
adc
cmp
aam
lea
cmp
imul
je
jmp
imul
cmp
mov
lret
jbe
push
jl
loopne
test
lret
ret
dec
mov
fwait
sbb
stos
mov
pop
stc
jle
xchg
xor
dec
arpl
or
pop
lret
add
aad
test
dec
leave
sbb
mov
inc
jge
pop
inc
inc
lret
cmpsb
sarb
xor
std
or
jmp
test
pop
testb
hlt
mov
or
mov
sbb
dec
push
xchg
je
dec
rcll
outsb
loop
or
sarb
gs
rcll
stc
xchg
push
jnp
arpl
cmp
out
jnp
dec
sbb
popa
push
xor
xchg
mov
or
test
aaa
sub
push
dec
mov
and
jo
scas
pop
aad
aas
jno
jmp
adcb
mov
cmp
call
lea
jbe
testl
inc
shll
push
test
or
aam
dec
repnz
popa
loopne
pushf
mov
jb
out
outsb
je
push
add
lods
push
mov
call
fsubrl
shl
jns
push
outsl
mov
push
jo
push
dec
cli
sub
aas
jp
sub
pop
mov
xchg
jbe
out
jno
fmuls
fcoms
cmpsb
clc
dec
test
inc
fimuls
stc
lcall
dec
sub
and
and
fbstp
inc
push
jno
repnz
ss
xor
sahf
jno
ret
iret
xor
cmp
lea
push
jmp
sbb
out
rorb
insb
das
sbb
hlt
jb
xor
mov
gs
test
jge
test
sbb
or
data16
add
pop
push
jl
in
dec
imul
pop
das
fbld
xor
jae
or
inc
test
arpl
mov
and
lods
imul
xlat
gs
shll
insl
loopne
fistps
sbb
popf
popf
mov
psrlw
jbe
sbb
mov
mov
pop
adc
mov
inc
nop
and
sub
ror
inc
imul
cmp
mov
mov
in
fdivrl
pusha
adc
and
pushf
imul
popa
gs
lcall
mov
mov
or
data16
push
xchg
xchg
push
mov
pusha
loop
out
shrl
mov
cmp
inc
divl
mov
mov
out
add
insl
jns
push
imul
pop
pop
ljmp
xchg
jle
jg
out
adc
adc
ret
cmc
fstpl
mov
addr16
loopne
push
stos
jg
add
loope
scas
push
stos
nop
jae
mov
xchg
cli
clc
int3
imul
stos
loop
int3
mov
daa
mov
add
pavgb
xorb
aad
mov
add
xchg
inc
mov
sub
sub
daa
data16
jp
mov
mov
jbe
data16
cmp
test
pop
and
sub
dec
and
lret
or
mov
in
iret
ret
push
xor
int
int3
jmp
out
lods
inc
lds
mov
lret
nop
scas
mov
jno
inc
movsb
test
pop
movsb
popf
mov
aas
mov
gs
mov
test
or
aam
mov
dec
pop
jae
fmuls
push
addr16
xchg
inc
push
mov
cmpsb
es
jb
jl
and
out
push
xchg
ja
push
insb
dec
cltd
pop
icebp
lods
test
lods
mov
gs
adc
lods
cmp
xchg
push
jno
pop
stos
bound
mov
loope
sub
add
insb
push
xchg
xchg
inc
add
lcall
push
mov
or
pop
cmc
and
repnz
push
push
lds
xchg
mov
xlat
mov
pusha
fisttps
and
dec
push
jae
sub
xor
sahf
push
es
ja
dec
lret
dec
fstpt
sbb
push
or
jp
les
outsl
inc
mov
mov
aad
add
mov
push
add
stos
mov
out
sarb
inc
and
adc
movsl
aaa
xchg
cmp
mov
repz
xchg
movb
hlt
pop
sbb
sti
lahf
push
dec
push
mov
adc
cmpsb
mov
movsb
xchg
fldl
ret
xchg
dec
mov
sbb
jp
enter
cli
dec
addr16
inc
pop
fsubs
insl
xchg
enter
and
xor
dec
mov
je
add
mov
xor
lret
shrl
mov
inc
and
pop
lds
jle
sbb
inc
nop
jmp
mov
mov
push
jg
shr
adc
add
add
and
lret
pop
fisubs
pop
outsb
dec
sub
mov
loope
cmpsb
movsb
add
inc
pop
add
sub
sti
aam
fstpl
lds
pop
and
test
jns
aas
add
push
push
jne
sub
inc
lea
fldenv
xor
mov
repnz
cltd
mov
call
push
mov
adc
adc
out
clc
cmpsb
scas
das
pusha
mov
stos
shll
sbb
jnp
mov
test
test
pop
mov
mov
lods
call
inc
mov
sub
jnp
sbb
hlt
mov
lahf
or
push
and
push
lods
repnz
inc
sub
or
fldt
cmp
pop
movsl
pop
adc
mov
mov
inc
adc
enter
cmp
js
inc
out
mov
xchg
inc
ds
adc
sub
sarl
aaa
mov
icebp
mov
fstp
pop
pusha
in
das
add
scas
mov
inc
xchg
movsl
sbb
ret
or
out
lods
test
clc
aam
scas
in
stos
mov
in
inc
xchg
or
xchg
test
subb
int
ret
pop
jmp
arpl
ds
dec
inc
jo
call
and
cmp
mov
test
jns
xchg
xor
cmpsl
int3
aam
enter
shl
or
push
shll
adc
mov
xor
popf
jnp
inc
pop
push
jmp
push
mov
test
cmp
ja
ret
addr16
sahf
ret
xor
rcrl
add
aaa
sarb
mov
and
jl
shl
sbb
sub
jo
arpl
inc
mov
nop
cld
fiaddl
sti
push
hlt
inc
lret
cmpsl
adc
push
sbb
das
lahf
and
stos
fistl
push
jecxz
push
dec
sub
jbe
nop
adc
xchg
push
dec
push
imul
pop
push
mov
pop
mov
js
rorb
add
push
mov
lods
push
scas
sub
jecxz
lahf
jg
cld
adc
inc
add
sti
or
ja
incb
adc
mov
mov
dec
jns
inc
pop
cmp
ret
popa
inc
popa
pusha
scas
or
ret
add
fcoml
clc
dec
movsb
add
clc
push
push
aaa
xor
pusha
mov
popf
imul
push
mov
mov
jp
es
les
xchg
mov
inc
mov
test
movsb
cltd
cltd
test
jg
jb
jge
insb
xchg
mov
push
inc
xor
aaa
ljmp
and
sbb
pop
fisubrl
rorl
pop
sub
cmp
lret
pushf
inc
addr16
test
iret
call
std
out
ja
mov
jns
mov
jno
jmp
jae
adc
loopne
stos
pop
mov
mov
insb
das
or
es
cs
and
and
dec
xchg
cltd
mov
xchg
scas
mov
popa
jmp
mov
inc
jo
mov
jne
mov
std
lret
add
scas
imull
dec
in
shl
or
and
test
sbb
rcrb
or
mov
imul
xor
scas
mov
xor
imul
add
jl
jo
adc
xchg
mov
repnz
stos
fistpl
ss
inc
out
or
dec
xor
mov
popf
lds
dec
jge
dec
hlt
int3
mov
mov
repnz
jle
cmpsl
inc
cmpsl
xor
lods
hlt
sub
lret
mov
jns
dec
dec
cmp
sti
repnz
jg
xchg
iret
push
jbe
pop
daa
sbb
cmpsb
scas
popa
jl
sbb
jmp
in
inc
jecxz
fsubrp
pusha
mov
sub
jp
jns
in
mov
mov
ret
stc
mov
mov
jne
jmp
jne,pt
pusha
xor
inc
repnz
cmp
sub
daa
js
insl
push
xchg
fbstp
inc
sub
xlat
pop
ret
cmc
ss
or
push
std
push
inc
or
nop
in
mov
sbb
pushf
xor
jb
xor
fbstp
stos
push
and
into
loop
cld
movsb
in
cmp
xor
shlb
fdivrs
scas
dec
mov
xchg
ja
imulb
cmc
daa
fcoms
int3
xorl
push
test
jmp
lods
or
daa
nop
jp
add
imul
mov
ds
jb
mov
lds
lods
call
xor
mov
pop
sub
or
aas
xchg
jns
xchg
dec
push
add
out
xchg
add
sarl
ret
jno
mov
xor
pop
pop
hlt
call
hlt
adc
mov
jo
pop
inc
pop
pop
out
dec
xor
xor
sbb
in
fistl
cmp
imul
xchg
xor
sbb
jae
and
repz
jno
fldcw
outsb
xor
mov
push
sub
int3
test
or
bound
jp
arpl
dec
roll
dec
xor
add
and
inc
xchg
div
sbb
pop
xor
sub
push
adc
xor
mov
fmuls
mov
lcall
enter
sub
push
test
cltd
loopne
jno
jno
mov
xchg
call
lahf
stos
sahf
adc
mov
les
iret
mov
fnstenv
repnz
pushf
jle
sbb
std
mov
insl
xor
daa
movlhps
repnz
mov
mov
sub
flds
xor
enter
xor
cwtl
cmp
sbb
es
dec
dec
cmp
jecxz
pusha
cwtl
push
insl
or
xor
and
xchg
testl
ffreep
cmpsb
mov
js
inc
push
and
insl
addl
lds
imul
fwait
inc
adc
int
adc
push
mov
stos
mov
icebp
add
xor
jmp
nop
mov
test
out
rorb
rorl
push
mov
mov
stc
popa
pop
call
pop
fstpt
push
jmp
scas
mov
or
out
jb
es
movsl
jo
cmpsb
ret
mov
sbb
mov
in
xchg
out
dec
lock
fwait
adc
int3
inc
out
add
sub
jo
aad
out
lods
cli
pushf
xchg
cmp
popa
fnstenv
rclb
addr16
ljmp
cmp
dec
xchg
pop
movsb
orl
push
insb
mov
jo
inc
dec
add
inc
hlt
xor
push
jp
loop
jecxz
mov
subb
jp
js
scas
dec
jl
push
jb
scas
or
out
popf
or
mul
scas
xchg
gs
test
pop
out
mov
adc
div
cs
and
rol
pop
cs
lcall
jbe
in
add
cmp
mov
push
inc
add
sub
loopne
inc
in
int
js
dec
dec
sbb
xchg
and
pop
std
pop
stc
jnp
adc
xchg
cmp
xchg
pop
mov
xor
das
lock
mov
ds
ret
xchg
jge
fimull
lods
jne
jl
test
jns
pop
outsb
cld
cmp
adc
outsb
dec
jae
jbe
push
out
movsb
mov
mov
dec
nop
mov
rcrl
dec
out
sub
aam
in
adcl
call
aam
mov
mov
add
lcall
cmp
sti
and
push
repz
jle
jb
dec
xor
aad
loop
mov
imul
dec
push
adc
repz
rcl
sub
mov
and
hlt
sbb
push
add
ss
lods
test
and
aam
add
inc
pop
mov
and
xor
orl
or
ficoms
fs
mov
push
mov
pop
push
sti
popa
je
dec
mov
dec
stos
jb
shlb
cmp
not
cwtl
dec
mov
xchg
es
inc
ss
out
lcall
rcll
xorb
nop
adc
gs
push
sub
xchg
jmp
incb
test
lods
imul
jb
xor
mov
enter
mov
or
pop
mul
cwtl
addr16
ret
pop
mov
sti
jp
ja
dec
subb
leave
xor
xlat
jne
mov
mov
mov
and
popa
mull
pop
popa
mov
cwtl
push
add
out
sub
inc
stos
lods
xor
pop
jecxz
cmp
test
pop
dec
and
jecxz
je
push
iret
push
push
mov
fcoml
notb
shrd
dec
dec
icebp
cmp
dec
dec
pusha
adc
cmova
fildl
or
or
clc
ja
sub
arpl
cmc
std
add
sbb
or
shlb
aam
pop
push
ss
clc
jne
add
adc
nop
icebp
cmp
sbb
sub
call
insl
jg
addr16
mov
adc
pop
lahf
mov
nop
inc
in
addl
jae
sbb
mov
idivl
and
jnp
xlat
arpl
cmp
sub
int3
leave
mov
je
mov
adc
or
loopne
push
jnp
arpl
sbb
cltd
sahf
pop
inc
gs
jg
movl
inc
mov
lcall
jge
stc
push
leave
fmull
or
mov
dec
inc
loopne
add
adc
sbb
push
cmp
scas
ret
xor
syscall
icebp
mov
fwait
fs
cmp
lods
sti
fisubrl
dec
cmp
gs
push
scas
arpl
sti
pop
sbb
jnp
stos
out
rolb
inc
sub
lock
xchg
fbld
push
aaa
scas
xor
mov
push
sub
push
bnd
add
jge
rcrl
jnp,pn
adc
cmpsb
out
repz
lret
push
mov
outsl
dec
sub
xchg
imul
push
fistps
jl
into
rcrl
sub
lods
cmp
sub
test
or
das
popf
cmp
jae
fmuls
dec
sarb
adc
add
mov
push
test
inc
lods
dec
push
jl
out
ja
jae
or
xor
xor
cmp
inc
outsb
push
daa
mov
lds
push
ss
cmp
xor
icebp
jns
mov
push
out
cmc
sub
sub
cli
in
jg
push
or
scas
faddl
mov
cltd
ds
daa
call
mov
adcb
aam
popa
das
fdivl
imul
mov
addr16
ret
filds
in
pop
cmc
pop
cmp
lret
dec
or
mov
cli
add
inc
ret
scas
aaa
cmpsb
sbb
push
mov
sbb
push
pop
xchg
test
sbb
add
jnp
mov
fwait
sub
in
or
inc
and
out
sub
mov
adc
nop
cmp
mov
push
call
xor
mov
jle
fstpt
sub
cmp
add
or
jmp
push
cli
dec
lds
dec
sub
lret
sar
gs
xor
mov
mov
ret
xchg
xchg
ret
sub
xlat
adc
jb
jl
jo
push
xchg
cmp
adc
test
adc
add
aas
push
aam
jl
test
jne
dec
sub
out
cmp
bound
push
pop
mov
data16
into
lods
adc
movsl
sub
push
andl
fsubrl
outsb
bound
lret
shrb
mov
aam
gs
or
sub
jge
dec
data16
pop
orb
sbb
xchg
xor
xor
test
int
dec
loop
mov
ljmp
dec
fisubrl
cltd
inc
add
pop
pop
push
hlt
sub
shlb
xor
das
cwtl
gs
and
push
push
fnstsw
inc
sti
std
adc
xlat
mov
xor
loop
add
icebp
add
or
roll
xlat
imul
push
xchg
sub
jmp
out
jbe
push
outsb
andl
add
sbb
imul
xlat
inc
lcall
or
cli
push
dec
in
in
jbe
mov
pop
lock
mov
push
pop
mov
or
loop
adc
insl
sub
decl
mov
fsubl
mov
jo
ljmp
jmp
imul
pop
pop
leave
mov
xchg
xor
dec
sahf
xor
pushf
add
mov
cmp
lods
lds
xor
in
flds
mov
test
lds
out
std
hlt
dec
inc
inc
adc
scas
mov
stc
mov
pop
fstl
bound
iret
gs
jmp
cmp
aam
or
mov
stos
out
outsl
repz
es
add
mov
push
adc
add
pmuludq
lods
mov
loop
or
popa
xor
scas
ds
mov
fistl
inc
mov
and
and
sbb
nop
dec
inc
sarb
inc
lahf
cmp
cmp
cmp
out
std
xchg
cwtl
in
movsl
ja
subl
or
cmp
sbb
jno
test
mov
adc
pop
jecxz
jl
aaa
or
push
mov
adcl
int
out
dec
enter
xchg
pop
and
adc
cmp
sbb
rcl
mov
sub
mov
leave
addr16
sarb
lea
into
outsb
movsb
cmp
push
lea
repz
andb
mov
test
push
xlat
ljmp
mov
inc
fimull
inc
xor
enter
jno
add
inc
adc
mov
int3
jo
jmp
addr16
push
adc
xchg
fs
adc
pop
pop
repz
pushf
subl
fsubl
imul
lock
out
in
jg
sahf
sbb
and
inc
adc
jl
xor
xchg
lea
inc
xorb
sbb
lods
icebp
xor
pusha
jmp
add
out
mov
out
pushf
fadds
mov
jmp
pop
push
test
xchg
push
fidivrl
in
adc
sub
push
mov
jae
movsl
sti
jmp
loope
fldcw
call
pop
mov
daa
fldt
fcmovnu
lods
mov
xchg
and
insl
mov
in
into
push
mov
lods
push
sbb
mov
jnp
mov
mov
fcomi
jno
sub
cmp
mov
push
mov
mov
mov
xor
sbbb
push
int
and
imul
adc
cmp
fmul
clc
out
and
cli
aad
cmp
push
jg
pop
pop
jge
adc
pop
jnp
ds
inc
push
xor
dec
lcall
and
rcrl
mov
sbb
add
cltd
jle
icebp
or
stos
or
pop
das
or
stc
sub
dec
pop
jle
addl
mov
fsubl
inc
sub
jae
pop
or
pop
adc
mov
mov
cs
cld
or
leave
mov
inc
jle
mov
mov
je
adcb
or
jns
je
cmpsb
adc
lcall
call
mov
shll
mov
inc
insl
loope
add
movsl
push
push
fldenv
add
mov
sbb
stos
dec
dec
gs
repz
push
dec
lret
loope
mov
push
incl
loope
xchg
lock
adc
push
pushl
pop
adc
in
mov
fsubrp
jp
mov
dec
jns
sbb
pop
jle
pop
scas
mov
gs
cmpsb
ds
lahf
dec
mov
pushf
cld
ja
pop
fldcw
mov
push
pop
icebp
movsl
shrb
pushf
xchg
dec
cs
or
xchg
int3
shll
jecxz
jmp
or
or
pop
adc
xlat
inc
leave
push
and
cmp
xor
dec
sub
cmp
sahf
rclb
test
add
push
pushf
xor
fcoml
in
lea
loopne
dec
iret
std
pusha
mov
sbb
lds
pop
inc
fsubl
aas
adc
pop
mov
mov
xor
lods
xor
inc
adc
sub
cmp
push
maxps
ret
xchg
inc
jo
call
add
dec
pushf
rorb
xor
cmpl
out
hlt
repz
scas
test
add
pushf
inc
shlb
xchg
cltd
jbe
movl
nop
in
adcb
add
fsubrl
aam
xor
jp
daa
mov
or
loopne
jb
xchg
xchg
push
mov
mov
repnz
dec
ds
xchg
pusha
rcl
and
ret
ja
mov
mov
xchg
cmp
into
sbb
int
mov
or
jmp
dec
pop
jg
mov
push
lcall
lret
fidivrl
loope
xor
pushf
xlat
or
mov
out
mov
jnp
in
jecxz
mov
aaa
aaa
gs
inc
sbbl
cwtl
jno
mov
arpl
dec
mov
fbld
mov
mov
mov
rorb
mov
jo
or
sahf
mov
insl
sti
and
lock
push
add
mov
cli
add
jge
jbe
out
shrb
jne
mov
xor
lahf
mov
inc
adc
ss
cmp
add
cmp
sub
loopne
stc
jp,pt
mov
movsl
inc
adc
scas
lock
sbb
test
sub
push
xor
subl
push
sti
xor
mov
std
imul
sbb
mov
adc
lock
sub
sbb
jl
xchg
mov
jecxz
pop
mov
cmp
movsb
jb
add
stos
movsl
pop
xor
icebp
and
scas
test
jo
popf
es
and
sub
iret
sahf
adc
and
dec
std
aaa
ss
jns
aad
lea
adc
test
or
pop
sub
fwait
xlat
xchg
pop
test
push
jecxz
cmp
mov
roll
sub
cmp
mov
aas
mov
adc
lea
or
shl
mov
imul
popf
sbb
pop
ljmp
mov
mov
sarl
xchg
push
inc
sub
das
aaa
dec
pop
lahf
mov
test
mov
call
mov
jbe
add
aam
rolb
mov
push
cs
mov
lahf
pop
xchg
sub
adc
aam
add
mov
sbb
lods
xchg
nop
mov
mov
adc
pop
jge
cmp
sbb
movsl
aaa
sbb
lahf
pusha
cmp
loope
inc
scas
lcall
loop
dec
xor
xor
pop
repz
js
stos
xchg
pop
lret
mov
mov
xor
adc
idivl
pop
daa
sub
and
in
sarb
fs
mov
sub
ret
add
dec
cwtl
cmpsl
ss
mov
insl
cmp
inc
jle
push
ljmp
push
pop
jmp
scas
dec
xchg
popf
mov
and
and
jmp
imul
adc
jmp
scas
cmp
sbb
addb
mov
jecxz
xchg
push
pop
jne
cwtl
ret
xchg
lea
cltd
cmp
push
mov
xlat
pop
cmpsl
fcoms
add
mov
repnz
das
insl
xor
xchg
sarb
orl
lcall
cmc
and
roll
imul
mov
aaa
push
mov
pop
mov
xchg
in
stos
pop
mov
adc
mov
dec
repnz
bound
test
mov
cmp
imul
movsb
dec
push
mov
xor
test
repnz
in
sbb
ds
add
mov
push
fiadds
pushf
loope
push
xchg
mov
or
out
inc
cwtl
popa
dec
stos
sbb
scas
mov
std
lret
add
sub
inc
das
push
push
mov
jmp
xor
ds
in
adc
cmp
jp
and
cmp
js
imul
iret
clc
stos
dec
jo
loopne
pop
leave
mov
push
nop
lods
xchg
out
faddl
loop
shrw
shrb
jp
sbb
mov
cmpb
jb
lods
pop
lret
mov
jns
les
lret
mov
mov
pop
mov
fucomip
cltd
push
leave
out
aas
cli
mov
jbe
sbb
or
aad
sub
add
test
or
stc
pop
movsb
mov
mov
sub
cmp
fdivrl
out
sbb
pop
adc
aaa
jge
push
cltd
jnp
and
pop
movsb
pop
cltd
stc
jle
pop
fdivr
sub
jecxz
fcoml
test
add
daa
fwait
mov
popf
mov
xchg
clc
cmpsl
daa
idivb
push
sub
jns
mov
push
adcb
xor
sbb
in
mov
xor
adc
mov
test
mov
inc
push
lcall
sbb
shr
insb
or
xchg
lret
cmp
cmp
cmp
dec
cmp
pop
adc
push
xor
mov
imul
mov
jbe
lea
push
sub
imul
mov
jo
enter
cmp
mull
and
dec
arpl
jo
mov
int3
int
jb
fsubl
mov
fcoms
cs
push
mov
inc
xor
xor
xchg
aad
ds
iret
mov
repz
rcll
xor
pop
outsl
sbb
pop
mov
pusha
and
cmp
pop
adc
subb
sbb
or
or
xchg
sub
mov
fcomps
ljmp
xchg
jnp
insb
pop
ret
iret
sbb
lds
cmc
pusha
movsl
jmp
pop
movsb
sbb
fcoml
adc
cwtl
sbb
ljmp
leave
das
sbb
popa
add
mov
and
inc
js
mov
test
nop
jb
in
push
out
jnp
inc
pop
push
insl
cwtl
xchg
ljmp
imul
inc
paddsb
stos
xorb
and
mov
out
mov
pop
ret
ret
dec
ds
sub
repnz
pop
pop
lret
stos
shrb
add
fs
mov
in
scas
flds
shrb
sub
loopne
push
push
fsubrs
dec
dec
lret
shrb
outsl
sub
mov
aad
ret
cwtl
inc
ss
cltd
mov
and
jne
imul
dec
fwait
jmp
and
dec
mov
iret
shl
pop
aaa
aaa
jo
mov
jno
xchg
mov
lahf
insb
enter
xchg
fwait
gs
inc
and
lods
jnp
icebp
lahf
sbb
fadds
lret
mov
push
dec
add
push
test
xor
dec
push
fld
icebp
jl
xchg
and
cli
aas
and
movsl
rcl
pop
faddp
aam
pop
nop
dec
lret
push
or
xchg
sahf
daa
lods
das
push
xor
jge
sarb
pusha
xor
jo
dec
xchg
mov
je
icebp
mov
je
pop
pop
shll
xor
les
inc
xchg
mov
jg
sub
add
loopne
leave
pop
mov
jecxz
test
mov
jmp
cmc
ret
leave
lods
or
mov
pushaw
sub
xchg
sbb
lahf
shlb
arpl
mov
xor
xlat
sbb
pop
sub
fcoms
pusha
mov
jo
push
std
pusha
mov
cmpsb
jno
ret
cmp
jmp
sti
cmp
xor
mov
jge
ds
adc
fdivrp
adc
add
jecxz
lahf
xor
bnd
insl
xor
aas
xor
mov
pop
or
daa
lea
adc
mov
xor
andb
sti
in
insl
cmp
mov
jmp
adc
ljmp
pop
jmp
movsl
inc
loope
ret
stc
rclb
imul
lret
sbb
fwait
jno
notb
inc
push
mov
cmc
jne
sbbb
xchg
cmp
arpl
shl
aas
enter
dec
pop
orl
fwait
push
shll
add
dec
sub
pop
int3
mov
arpl
dec
xor
fsubs
dec
xchg
or
ljmp
mov
push
xorb
or
outsb
sub
push
arpl
or
out
push
fdivs
ret
flds
sub
xchg
inc
fisubl
cmp
cli
mov
mov
ret
pop
or
or
xchg
dec
mov
scas
or
pop
popa
inc
inc
and
icebp
outsl
mov
stos
and
push
push
fsts
push
cmpsl
aad
testb
sbb
xor
lods
mov
fidivs
fisubrs
jbe
push
xchg
ljmp
aam
dec
push
es
sub
dec
iret
xchg
repnz
or
icebp
inc
and
ds
dec
lock
push
jns
iret
cmp
out
inc
pusha
xchg
mov
jmp
xchg
lods
add
jnp
push
icebp
and
pushf
sahf
in
xchg
sbb
addr16
xor
mov
cld
mov
and
insb
hlt
sti
inc
fistpl
jmp
cmpsb
mov
push
stos
icebp
or
loop
push
dec
roll
adc
ret
xor
lock
add
xchg
pusha
push
andl
aaa
out
bound
and
aam
adc
jb
and
mov
cmp
lea
insl
jbe
enter
addr16
mov
cmp
popa
dec
shl
and
mov
and
test
mov
sarb
cld
fimuls
lahf
outsb
mov
shr
dec
sbb
pop
jnp
mov
in
inc
push
clc
pop
xchg
dec
xor
out
cs
loop
cmp
imul
stc
jge
inc
je
out
and
scas
out
movsl
sub
push
popf
mov
iret
add
dec
jmp
xchg
or
or
pop
jbe
cld
fdivrl
aad
and
test
dec
mov
ret
aas
adcl
or
rcll
sti
jnp
sub
fldt
out
and
mov
movsb
jns
ljmp
add
or
inc
sub
gs
dec
dec
mov
xchg
test
cmpsb
stc
lret
call
xchg
ljmp
bound
pop
inc
dec
sub
aad
movsb
pop
jbe
stc
dec
test
xchg
xchg
push
jne
mov
in
cmpsl
divl
ss
pusha
jns
lret
xchg
jmp
inc
mov
aaa
aaa
mov
sub
mov
and
and
xchg
movsb
pop
dec
insl
mov
sub
adc
cmp
adc
out
pop
test
mov
addr16
nop
aad
fimuls
repnz
push
int
fildl
insl
sti
dec
sarb
lret
mov
pop
inc
jle
sub
mov
fwait
test
out
jmp
aaa
sub
je
inc
cs
pusha
push
sbb
das
stos
jnp
test
push
arpl
sbb
adc
sub
push
clc
pusha
aad
enter
dec
js
cmpsb
int
cmp
mov
aad
sbb
orl
lods
out
xor
mov
add
sbb
jnp
xchg
pop
imul
push
or
lods
mov
je
adc
xchg
lods
outsl
mov
jae
pop
enter
mov
dec
aam
or
cltd
repz
in
ret
add
les
push
bound
cwtl
cmp
and
dec
dec
or
imul
stc
imul
fnstcw
rcrb
or
addb
aad
push
aam
mov
imul
int3
daa
jne
push
jns
adc
ja
in
push
icebp
and
stc
xchg
leave
push
cli
mov
cmc
das
fwait
imull
and
ljmp
mov
aad
out
sub
and
pop
popf
out
nop
lcall
insl
cmpsb
insl
cld
rorl
shlb
xchg
test
mov
xchg
inc
mov
and
ror
cs
mov
and
movsl
dec
jmp
xchg
in
in
loop
mov
or
push
and
cmpsl
stc
mov
and
xchg
dec
and
imul
loope
fimull
mov
jmp
xchg
std
cwtl
sahf
clc
insb
rcl
push
mov
das
mov
rorb
lahf
xchg
inc
aaa
leave
stos
cmpsb
mov
ds
mov
imul
aaa
sub
push
mov
or
and
pushl
movsl
mov
insb
mov
ret
shll
fidivrl
and
out
fnstsw
lock
mov
stos
popa
les
inc
pop
mov
xor
jg
cmpsb
in
xor
popa
sti
and
out
test
xor
mov
test
movsl
push
cmp
mov
aaa
or
cmp
scas
and
cmpsb
mov
and
xchg
clc
outsb
std
scas
cmp
fidivs
and
jae
lock
fwait
mov
mov
mov
shlb
in
mov
pop
rcrl
mov
sbb
cmp
test
mov
mov
insb
mov
test
ret
cwtl
mov
daa
mov
sub
sub
and
jg
data16
add
and
lcall
adc
js
arpl
rcl
subb
sub
es
mov
jp
jae
fwait
sbb
mov
push
out
lods
inc
notb
or
scas
dec
int
mov
les
xlat
xchg
arpl
add
cmp
lods
adc
iret
repnz
loope
insb
stc
arpl
inc
lock
mov
stos
sub
xchg
daa
out
xlat
push
pop
inc
dec
inc
lods
movsb
test
daa
loopne
test
sbbl
in
push
sbb
fisttpll
hlt
aad
cmp
aam
cli
outsl
in
jae
cmp
push
out
data16
push
jb
lds
push
xchg
push
popf
cltd
mov
les
push
and
add
inc
dec
fucom
roll
dec
or
pop
lcall
loop
dec
pop
lea
fisttpll
and
ds
sbb
cwtl
out
addl
cmpl
adc
aas
mov
mov
dec
xor
mov
pop
jne
hlt
sbb
dec
inc
xchg
enter
mov
and
add
test
repz
decb
jl
or
fcoms
jne
in
fisubl
mov
sub
bound
fnstsw
inc
jp
xorb
sbb
iret
test
inc
or
dec
jno
dec
fdivr
pop
xchg
mov
cmp
js
push
repz
shl
fcmovnb
ss
pop
dec
xchg
stc
add
cmp
inc
insl
jbe
rclb
les
mov
movsb
ret
shll
adc
bound
iret
xlat
dec
mov
push
pop
or
xchg
sub
sub
jns
in
mov
dec
dec
pop
das
es
sub
arpl
add
sarb
enter
push
scas
pop
dec
push
call
jge
mov
add
cli
dec
or
mov
ja
testl
aaa
pop
xor
faddl
sub
push
arpl
loop
mov
push
cmp
imul
es
bound
ret
nop
ljmp
push
inc
testb
test
adcl
dec
jne
shlb
subl
sar
stc
jae
xchg
and
or
out
add
xlat
jbe
out
movsb
int
adc
out
into
xchg
movsl
pop
inc
push
test
das
inc
push
xor
gs
jmp
mov
push
jecxz
int
xchg
inc
pop
push
loopne
add
ljmp
xorb
orl
popa
bound
cs
sbb
cmp
push
cmp
mov
cmc
xor
test
xor
hlt
add
sub
and
fisubrl
sub
jp
shll
mov
mov
aad
jle
pusha
jl
cmp
sbbb
mov
sbb
mov
popf
mov
movlps
daa
mov
cli
mov
stos
mov
lods
adc
and
inc
fdivr
mov
pop
pop
xchg
mov
mov
pusha
sub
pop
in
rorb
xchg
mov
pop
call
cmc
jl
das
daa
and
and
ja
fbld
in
lret
daa
pusha
lods
cmp
cs
jbe
add
shlb
cmpsb
insl
mov
xchg
mov
pop
sub
sub
inc
fiadds
xchg
add
push
test
add
mov
sub
jge
sbb
hlt
sub
or
cmpsb
aam
icebp
ljmp
sub
xchg
inc
imul
bound
stos
nop
mov
mulb
lcall
jns
inc
movsb
cli
inc
ret
or
add
xchg
push
outsb
out
or
xchg
fiadds
cmp
xor
inc
ret
dec
inc
in
xor
in
daa
ljmp
nop
sbb
mov
sbb
inc
mov
pop
or
int
outsl
mov
or
xlat
jbe
js
xor
jbe
mov
xor
push
jno
insl
pop
negl
in
jle
sub
sub
pop
nop
dec
gs
jne
out
fcomp
aad
adc
jnp
test
cmpsb
push
insl
add
inc
mov
js
pop
inc
lea
add
outsb
imul
in
mov
daa
cmp
jg
mov
loopne
fildll
and
xor
lret
sbb
test
test
xor
mov
call
repz
sub
push
loopne
outsb
xchg
jns
inc
sbb
inc
cmpsl
and
pop
add
mov
mov
adc
dec
lods
xor
inc
imull
aas
jmp
in
enter
push
sub
stos
test
pop
jl
xchg
inc
call
sub
sbb
repz
dec
xchg
push
lret
mov
mov
push
pop
sbb
test
test
adc
sub
cld
pusha
mov
shr
mov
or
loop
sbb
and
out
push
cmc
das
lahf
add
cmp
xor
mov
jo
decl
inc
out
add
push
mov
push
cld
mov
out
in
xchg
mov
pushf
movsl
add
fbstp
loope
xor
cmp
popf
mov
enter
sbb
dec
lahf
in
scas
mov
and
iret
ss
fidivrl
add
cwtl
shrb
add
jl
lods
push
in
xor
les
fdivrs
sub
and
ret
add
xorl
es
cmp
jno
adc
or
mov
xor
pop
pop
adc
dec
pop
mov
dec
cli
test
and
aad
mov
lret
shll
sbb
cmc
pop
loop
addr16
cmc
ljmp
dec
cmc
jae
mov
sarb
fisttpll
mov
aas
lds
call
daa
aaa
and
icebp
adc
enter
rol
into
int
push
push
iret
in
and
inc
pop
push
std
lahf
cwtl
adc
fldt
push
pop
insl
inc
in
roll
stc
xchg
mov
mov
push
and
imul
pop
rclb
inc
adc
in
jle
push
xor
and
test
adc
mov
xchg
insl
pushf
mov
mov
fsub
push
fwait
repz
mov
dec
push
cmpsb
jne
push
xchg
xchg
mov
jne
mov
cmp
pop
sub
add
sub
inc
pop
cld
push
cmc
and
fnstcw
mov
int3
jmp
fidivs
aaa
fsubrs
sti
mov
inc
adc
jmp
addr16
xor
mov
inc
mov
jns
fucomi
inc
int3
mov
cmp
or
scas
repz
and
and
inc
mov
adc
dec
mov
movb
es
std
loope
and
adc
incb
push
xor
push
out
xchg
or
add
mov
pop
loope
xchg
jns
decb
shl
repz
mov
xchg
dec
popa
or
mov
mov
inc
pushf
jbe
movsb
and
cmp
sarl
sbb
pop
ljmp
cmpsb
rcrb
aaa
push
sarl
and
sbbl
ret
dec
dec
jl
pop
add
enter
mov
sub
push
stos
bound
ljmp
jl
push
sti
ds
add
xchg
in
jecxz
inc
ja
push
icebp
loope
sbb
mov
shl
adc
mov
push
xor
xchg
les
add
fs
outsl
aam
mov
into
sar
fsubl
jne
push
adc
add
cmc
xor
add
dec
jo
sahf
fs
lret
inc
orb
sub
adc
mov
dec
outsl
xchg
dec
sub
shr
pop
jae
cmp
sahf
lcall
scas
pop
mov
pop
push
jo
jno
incl
push
dec
or
stos
int3
ds
push
jl
hlt
cmc
int
je
shl
push
jb
rorl
pushf
iret
sub
les
or
aam
push
es
xor
lcall
pusha
outsl
push
pop
or
mov
cmp
sub
inc
loope
xchg
dec
std
popa
movsb
mov
loopne
mov
fistpll
out
ja
sbb
inc
ret
pop
xchg
addr16
add
mov
sub
repz
sbb
aam
push
mov
aas
push
mov
or
mov
insb
jmp
pop
lods
jns
icebp
mov
mov
hlt
push
lock
dec
sub
adc
fsubs
jl
mov
sbb
dec
mov
cltd
insl
mov
mov
jl
mov
adc
out
pop
and
test
mov
sbb
mov
push
arpl
and
call
mov
adc
arpl
lret
cld
add
out
pusha
pop
sub
fdivrl
mov
add
inc
pusha
dec
or
mov
insb
fisttpll
lea
lods
pop
push
stc
push
jecxz
mov
or
inc
lret
mov
adc
jle
dec
and
pop
add
cltd
jbe
outsl
sbb
inc
or
xor
lcall
insb
ror
mov
push
sub
xor
popf
jno
push
pushf
in
cmp
mov
or
cli
scas
push
push
ss
repnz
jl
or
mov
addb
adc
xchg
adc
vaddsd
es
inc
or
sbb
add
mov
mov
test
gs
xchg
add
adc
cmp
into
cmc
and
pop
mov
and
mov
dec
and
push
stos
mov
mov
dec
shll
lods
nop
ds
pop
xor
fmull
dec
imul
xlat
xor
pusha
in
xor
shlb
enter
rorb
or
and
lds
cmp
cmp
adc
jae
cmp
mov
push
jns
jg
out
ljmp
test
xchg
jmp
loop
loope
jno
cs
adc
scas
jmp
cmpsb
pop
roll
cmp
push
pop
sub
jo
push
fildll
inc
fcmovne
stos
sbb
cld
movsl
popa
sti
mov
aam
ljmp
inc
push
dec
jecxz
jno
push
mov
aaa
fmuls
dec
divb
in
mov
roll
arpl
leave
jp
xchg
mov
data16
iret
mov
popa
pop
popa
xchg
sub
outsl
imul
xlat
test
pop
aas
int
in
enter
inc
push
das
push
test
fildll
repnz
pop
fstps
cmc
jmp
stos
and
xchg
in
xchg
aam
inc
ficoml
in
cmp
insb
mov
fwait
into
pop
or
push
push
out
inc
pop
push
xor
lds
and
cmpsb
incl
cld
int3
mov
insl
in
je
scas
cmc
fidivs
pop
and
scas
flds
cmp
outsb
inc
sub
mov
sub
insl
adc
aam
lret
add
sub
mull
push
jo
gs
adc
sbb
dec
sub
mov
xor
fnstenv
testb
in
cmpb
xchg
sti
sbbb
pop
aad
aas
mov
push
and
outsl
int3
enter
cmp
mov
xchg
xorl
insb
div
and
sahf
cmp
inc
out
arpl
test
sbb
inc
addb
ds
inc
loop
inc
out
or
lods
loop
mov
popa
fistpl
div
cmp
lods
lods
rorb
outsb
int3
mov
lret
sub
xlat
int3
xchg
mov
out
aaa
adc
fwait
xorl
push
adc
dec
mov
dec
and
add
jmp
dec
icebp
push
pusha
pop
jno
shrb
cltd
fdivr
rol
and
in
mov
add
in
notb
lea
jmp
mov
popf
out
cli
mov
imul
and
arpl
sub
and
notl
xor
sub
roll
lea
mov
scas
inc
sbb
inc
push
cmp
call
sbb
lods
fistl
mov
icebp
loop
adc
negb
xor
mov
sar
inc
test
sahf
jnp
aas
imull
lahf
dec
mov
lds
out
orb
sub
shll
fisttpll
loope
pushf
fucomi
call
add
push
adc
repnz
pop
sub
out
jns
push
js
rcrb
sub
iret
mov
lds
or
sbb
fdiv
xchg
out
mov
sbb
mov
lcall
les
sti
lock
and
mov
stc
cmp
fcompl
xchg
aad
fbld
jecxz
imul
les
xchg
xchg
out
inc
sbb
xor
dec
jg
push
out
das
iret
aaa
sub
sahf
add
and
mov
popa
sub
or
dec
daa
pop
cmp
js
sahf
sarl
mov
sbb
dec
popa
fadds
sbb
cmp
jmp
and
inc
jp
fisubl
cld
sbb
aad
inc
pop
aas
dec
loopne
imul
outsb
int
stos
jbe
sbb
or
push
push
mov
seta
mov
imul
lock
test
pop
incb
es
push
addl
and
xor
pop
sbb
sub
mov
nopl
rcr
inc
add
fmuls
pop
out
lahf
andb
dec
fdiv
fistpl
loop
xlat
ja
jb
jb
int
inc
sub
hlt
dec
fmul
pop
cmp
xchg
cmpsb
movsl
inc
js
dec
fwait
test
insl
mov
xchg
cld
imul
push
sbbb
mov
cli
jmp
push
inc
jecxz
cmp
pushf
xchg
mov
movsl
mov
int
fcoms
mov
nop
insb
xor
pop
test
mov
or
das
fnsave
out
mov
push
xchg
js
inc
xchg
pop
mov
jae
fidivrs
fstps
or
sbb
and
stc
inc
mov
adc
mov
dec
xchg
leave
inc
stc
aad
mov
rorb
lods
pop
sbb
jle
xchg
les
pop
mov
mov
jne
cmp
ss
jo
out
sub
xchg
jp
lods
inc
clc
and
fs
int
out
clc
mov
or
adc
jb
shr
out
jecxz
bound
pop
mov
andl
inc
neg
in
fcmovb
ss
repnz
imull
jnp
fdivrs
adc
movsb
fcos
xchg
or
adc
imul
int3
xchg
insl
push
ja
cs
cltd
pop
fiadds
xchg
xor
or
mull
rorb
fs
jo
xchg
movsb
jns
bound
xor
xchg
mov
cmp
cs
iret
ds
and
pop
mov
aaa
pop
and
inc
lcall
mov
sbb
popf
subb
sbb
inc
or
sub
out
or
fistl
add
rcrl
mov
mov
cs
xor
jno
xor
dec
jg
clc
scas
mov
mov
add
jg
xor
fcoms
pop
pop
out
xor
mov
shlb
lret
or
faddp
and
sub
adc
scas
movsl
test
mov
test
std
pop
imul
adc
stc
iret
repz
mov
mov
and
sub
pop
clc
movl
inc
adc
cmpsb
stos
lds
lret
cmp
sahf
sbb
dec
stos
pop
nop
push
push
out
sbb
and
dec
or
lds
dec
std
jge
sbb
sbb
test
enter
repnz
push
add
mov
xor
jl
imul
iret
mov
pushf
jecxz
jl
xor
xchg
cmp
mov
lret
jb
daa
mov
dec
and
or
jae
xlat
aam
mov
les
jns
dec
jmp
or
fwait
add
pop
pop
sti
fcompl
xor
daa
in
enter
xor
addr16
push
filds
jbe
test
xchg
mov
push
lcall
jle
sbb
push
mov
pop
pop
out
rcrl
iret
shl
cmpsb
pop
repz
pushf
jb
or
fst
push
cli
cmpsl
mov
fistpl
add
xor
mov
fnstsw
pop
fwait
or
mov
mov
sub
sarb
mov
ficoms
in
popf
cmc
jo
fdiv
jo
xchg
pusha
pop
xchg
in
sub
mov
dec
lret
mov
jecxz
addr16
or
and
cltd
rcll
es
jns
out
fldl
scas
out
loope
and
mov
loop
fwait
subb
gs
ds
xchg
or
dec
mov
cmc
or
mov
and
cmp
out
xchg
enter
xchg
or
das
sub
xor
mov
inc
sbb
lock
add
aad
mov
jecxz
ljmp
movsl
int3
fidivrs
ret
fcoml
lahf
lods
sub
inc
xchg
fwait
das
sub
sbb
dec
icebp
aad
mov
loope
push
int
lds
inc
jnp
inc
mov
fld
mov
push
ss
xchg
xchg
inc
repz
negl
test
out
ret
pop
out
lods
inc
dec
ljmp
lret
jns
arpl
and
cmpsb
stc
add
nop
push
pop
adc
testb
popa
cltd
fsubs
paddsb
ds
mov
xlat
out
fistpl
stc
aad
xor
cld
or
pop
insl
and
ljmp
or
push
mov
push
dec
jge
jno
pop
cmpsb
pushf
mov
mov
inc
aam
test
push
loopne
sbb
pcmpeqw
mov
push
add
outsl
xchg
inc
xchg
in
cmp
cmpsb
sub
mov
jne
jp
aaa
roll
adc
mov
nop
mov
lea
push
xchg
dec
cmp
mov
or
shrb
aaa
xor
sub
popa
fmul
push
pop
and
add
jne
xor
in
cmp
out
lock
mov
cmp
insl
cltd
test
dec
cmpsb
rcrb
out
push
or
shrb
arpl
mov
cs
adc
jno
xchg
sbb
push
adc
xchg
sbb
ret
dec
dec
adc
xor
andb
lahf
adc
out
jb
or
dec
mov
je
push
fcompl
cmp
dec
aaa
mov
lods
loopne
loope
rcl
mov
mov
or
mov
add
jg
insb
ds
push
jp
fildl
sbb
fwait
pop
fadds
add
pop
sub
testb
sbb
xor
popf
xchg
sub
push
movsb
push
sub
nop
xchg
bound
sbbl
das
xchg
ljmp
xchg
ja
aas
addr16
jb
mov
push
fxch
adc
mov
cmpsl
and
into
mov
das
dec
fisttpl
push
push
in
add
leave
pop
idivl
cmp
inc
or
les
adc
in
in
pop
fmull
mov
insl
xchg
pop
nop
loop
ret
fwait
pop
dec
pop
jbe
and
inc
lock
jmp
mov
xchg
cmpsb
mov
and
push
adc
sbb
xchg
inc
mov
in
scas
into
sub
mov
arpl
imul
addr16
adc
jns
sbb
mov
mov
xchg
pushf
shrl
les
dec
push
es
jg
push
das
sub
pop
push
xor
or
iret
fmul
push
mov
test
pop
cli
xchg
popa
lock
mov
or
adc
fiaddl
push
push
mov
add
out
shlb
test
sub
adcb
aad
hlt
pusha
xor
push
int
sub
sub
inc
inc
andb
xchg
es
xor
cmp
outsb
mov
movsl
insl
shrb
rcll
stos
jae
mov
pop
jo
hlt
sub
outsl
rorb
sub
in
fdivr
xor
les
fwait
mov
and
imul
outsl
adc
xchg
xor
lahf
push
push
mov
jg
jp
aam
dec
daa
insl
and
pop
popf
mov
cmp
xor
aam
popa
adc
les
ss
mov
jb
mov
les
inc
dec
dec
sub
fdivl
nop
push
scas
rcrl
dec
lock
andl
and
mov
hlt
rclb
cmp
add
xor
jecxz
fcoml
xor
cmpsl
jo
xor
ficompl
cmp
cmp
orl
xor
fdivrp
sub
jmp
loope
jo
cmp
and
movsb
incl
insl
leave
sahf
jno
inc
in
enter
lock
ss
sub
les
jmp
mov
aas
mov
test
mov
xchg
sbb
popf
xchg
xor
and
inc
gs
test
mov
dec
divl
std
rcrb
insb
push
add
push
scas
mov
insl
sbb
jp
pushf
and
and
out
jl
test
pushf
xor
hlt
inc
mov
das
add
dec
pop
xchg
dec
movsl
inc
mov
int
mov
jo
add
loope
sbb
jo
cmc
pop
int3
in
mov
push
loopne
add
xor
xor
daa
mov
and
pop
jle
mov
dec
mov
repnz
adc
mov
daa
push
insb
xchg
mov
loop
fcomps
pusha
push
inc
cmp
and
es
repz
dec
pop
add
rcr
dec
mov
xor
push
dec
pop
xchg
jecxz
dec
mov
sbb
jae
pop
mov
mov
dec
lret
jbe
ud1
clc
bound
sbb
sbb
adc
pushf
mov
mov
dec
aaa
das
dec
notb
xor
sarb
add
sub
inc
mov
lret
mov
cli
cwtl
jno
inc
mov
sub
inc
pop
mov
shl
mov
icebp
iret
subl
and
add
and
and
add
ficoms
fimuls
fidivl
xchg
adc
inc
jle
pop
sub
jnp
rcll
adc
cs
pop
ljmp
jg
inc
nop
pushl
fstpt
test
inc
mov
cmp
js
dec
std
addl
cmp
jbe
sbb
pop
mov
adc
ficoms
in
mov
jecxz
mov
aam
pop
dec
jno
xchg
sbb
sbb
gs
out
cmpsb
lds
xor
adc
inc
push
lcall
inc
jns
cmp
cmp
xor
sarl
and
sarb
or
sub
pop
and
push
or
adc
bound
mov
adc
fldcw
test
push
mov
imul
xchg
int3
popa
lahf
or
dec
movsb
jp
dec
scas
push
mov
subl
inc
push
pop
mov
dec
jge
mov
push
jmp
mov
dec
aam
in
and
int
mov
push
adc
dec
push
push
ss
jb
jnp
dec
sarl
add
xor
jmp
testb
sahf
mov
movsl
sbb
jecxz
mov
pop
loope
adc
jnp
rol
jae
cmp
mov
inc
repnz
pop
inc
cmp
jb
pop
mov
mov
dec
cs
test
ret
insl
push
lods
or
jp
mov
mov
mov
ror
mov
lahf
insl
add
cli
and
mov
movsb
popf
inc
pop
fnstsw
mov
pop
gs
lods
in
jae
out
mov
aas
inc
mov
addr16
pop
mov
xchg
or
push
loop
aam
or
hlt
out
adc
mov
jb
stc
mov
jns
nop
sahf
in
rclb
fwait
add
inc
xchg
jnp
xchg
or
or
cltd
mov
mov
in
gs
mov
mov
mov
xor
roll
into
pop
pop
mov
dec
inc
hlt
aaa
mov
cmp
adc
push
mov
int
push
ret
in
ljmp
leave
push
fiadds
iret
inc
jb
sbb
add
cltd
xor
jg
pop
xchg
rolb
mov
pop
cli
rcrb
imul
adc
xchg
loop
cmp
lcall
inc
sbb
repnz
dec
adcl
adc
mov
dec
ret
pop
sub
stos
out
in
xor
sahf
xor
adcb
and
popf
lret
std
in
shl
inc
jmp
aad
sub
adc
add
lret
out
cmp
inc
daa
in
inc
les
test
jmp
std
hlt
jl
lods
pushf
mov
rolb
inc
pop
and
or
add
jb
push
mov
cmp
mov
into
sub
popf
sub
fists
mov
mov
xchg
adc
or
adc
dec
xor
jg
sub
enter
cmc
pop
pushf
rcll
fsubrl
mov
sahf
mov
mov
int3
pop
push
gs
orl
ret
pushf
xor
es
filds
insb
push
cmp
outsl
mov
cld
lods
jnp
and
in
sbb
lds
or
xchg
sub
test
xchg
cmp
xlat
popa
mov
sbb
and
mov
out
dec
sbb
mov
cmp
sbb
lret
inc
mov
pop
pop
ss
loopne
jnp
jmp
leave
repnz
jae,pn
sbb
ret
mov
pop
xor
test
ss
pop
add
ficoms
iret
pushf
aaa
stc
push
test
leave
adc
fucomi
int3
rclb
push
xlat
or
aas
lret
xchg
movsb
mov
outsb
push
add
lcall
jae
jns
pushf
inc
push
pop
mov
ret
addb
insl
loop
rcll
lock
push
pop
lret
orw
push
fwait
aas
outsb
pop
xchg
pop
dec
mov
in
outsb
mov
add
jno
jmp
inc
xchg
loop
out
roll
sbb
jne
pop
stos
or
jge
mov
add
bound
jnp
push
out
icebp
loop
repnz
and
sti
pop
jl
cmc
out
inc
inc
xor
mov
mov
les
cs
call
dec
cwtl
jns
inc
xchg
dec
cmp
int3
ret
sbbb
mov
pop
pop
inc
lret
xchg
jno
mov
pop
repz
mov
mov
add
jge
inc
popf
dec
dec
gs
loope
inc
out
jg
sub
jne
mov
pushf
mov
xchg
sbb
sub
mov
insb
arpl
push
and
cmc
xchg
inc
mov
rcr
sti
pop
lods
xchg
or
sbb
add
sti
pop
cmpsl
xchg
sbb
mov
in
das
add
nop
jmp
mov
push
cli
sub
cmpsb
jl
mov
mov
jl
jbe
or
or
cmpsb
or
mov
fstpt
dec
mov
jne
add
xchg
int
xchg
inc
or
fcomps
into
test
push
cmp
jnp
ficoms
jmp
test
mov
es
loope
jo
mov
ficoml
dec
std
pop
add
popf
insb
mov
sbb
jp
push
inc
jnp
stos
das
add
neg
test
mov
sub
dec
mov
mov
mov
pop
ret
js
jmp
or
in
mov
push
mov
cmp
mov
call
data16
leave
jmp
fidivs
pop
inc
push
mov
mov
cs
mov
or
and
dec
daa
adcb
ret
shll
and
and
jecxz
pop
popa
jmp
loope
sbb
test
dec
imul
jl
mov
cli
xor
mov
sub
mov
test
rcl
xor
sbb
push
mov
jp
cmp
push
push
cmpsb
sti
jbe
inc
xor
lods
or
sub
xchg
and
mov
out
jp
and
pushf
bound
mov
das
mov
scas
mov
fidivrl
fs
mov
cmp
addr16
sbb
and
loop
movsb
js
in
mov
mov
mov
leave
xor
push
xchg
cmp
adc
push
fisubrs
mov
shlb
daa
stos
stos
fidivl
inc
data16
int
iret
mov
add
adc
lds
int
inc
out
fadd
repnz
ret
jmp
lahf
xchg
cwtl
out
push
fisubl
lea
shr
stc
xor
nop
lcall
sahf
out
dec
ret
out
mov
sbb
sbb
movsb
push
jecxz
out
add
imul
iret
sarb
xor
mov
and
mov
out
lret
insl
mov
pop
imul
call
mov
shll
mov
and
mov
fstps
pop
lods
and
in
leave
pop
and
imul
adc
xchg
mov
stc
pop
xchg
adc
inc
ja
xchg
pop
pop
jle
ss
rcrb
cwtl
xchg
mov
mov
push
lcall
rorl
cmp
popl
aad
arpl
stos
push
mov
cmp
push
dec
in
and
xchg
push
or
mov
aam
rcr
arpl
test
jg
xchg
movsl
push
scas
cmpsb
mov
imull
rolb
test
mov
pop
fs
sti
out
dec
add
pop
inc
std
cmp
mov
enter
mov
xchg
xor
mov
sbb
scas
jecxz
in
sbb
insb
cmpsl
or
outsb
repz
pop
repz
shl
sub
push
stc
lret
frstor
fcmovnb
flds
pushf
mov
outsl
lock
or
mov
out
push
jbe
cmpsl
xchg
push
xor
cmpsl
add
fidivs
pop
fstpl
inc
out
mov
int
test
jo
lahf
neg
jns
fists
inc
pop
pop
mov
mov
adc
sub
xchg
in
adc
cli
sub
testl
cmc
ljmp
sub
jne
inc
ficompl
jo
lahf
addps
call
sub
in
ss
add
jp
inc
and
test
adc
in
call
paddusw
frstor
mov
xlat
sub
sbb
orl
dec
push
sti
mov
dec
sbb
dec
in
jg
jbe
popa
jne
jne
fidivs
movzbl
xchg
dec
lods
mov
test
les
inc
xchg
call
sbb
mov
push
push
push
mov
or
cli
cld
test
aas
imul
in
mov
dec
mov
xlat
or
and
loopne
add
out
dec
add
push
mov
pushf
ss
fs
mov
push
xor
std
movsb
dec
shll
rorl
add
das
mov
sbb
adc
push
or
mov
dec
jmp
cmp
xor
push
push
imul
dec
insl
lret
das
ss
sti
hlt
outsb
sbb
xchg
dec
mov
lock
and
test
outsl
cmpb
add
inc
loop
pusha
mov
inc
dec
or
addl
pop
cmc
in
adc
pop
int3
fdivrp
sbb
push
not
xor
cmp
je
fcmovnbe
push
enter
inc
add
sti
mov
xchg
dec
adc
aam
and
jne
cwtl
jne
cwtl
scas
mov
pop
sbb
or
imul
xor
outsb
into
sbb
mov
push
pop
add
pusha
push
nop
pop
cli
les
shrb
divb
mov
jo
or
and
ficoms
cmp
fiadds
pop
std
inc
shrd
xchg
pop
inc
mov
stos
clc
push
xlat
out
test
cltd
jge
popa
mov
addr16
inc
sub
xchg
sub
jne
cltd
mov
mov
out
out
xchg
repz
push
sub
ljmp
fistpll
jnp
and
out
cld
sub
cmpl
aaa
mov
popf
outsb
insb
data16
cs
jbe
int3
stos
stc
xor
mov
cmp
lods
cld
cmpb
insl
xor
jno
scas
out
insl
lcall
xor
repnz
push
clc
jbe
aas
test
aas
scas
pop
lods
notb
jb
xor
and
das
push
cmpl
jne
fmuls
adc
notb
mov
and
cmc
mov
jmp
xchg
mov
movsl
push
and
jbe
pop
jle
clc
loop
xchg
loope
cld
dec
aas
in
gs
mov
sub
enter
sub
int3
jnp
adc
xor
loope
sarl
mov
sub
and
jecxz
jmp
dec
xor
int3
mov
test
js
sub
shll
test
test
inc
adc
cs
mov
push
dec
cmp
jl
sub
dec
cmpb
dec
lcall
sbb
pop
mov
fcomps
jge
ljmp
loop
sbb
dec
aam
mov
scas
sahf
cmp
mov
lods
rol
adc
mov
mov
icebp
add
lods
cs
out
add
mov
ljmp
xchg
mov
das
out
mov
ret
lods
pushf
in
mov
lahf
fadds
dec
enter
sub
or
pop
and
and
sbb
xor
addb
mov
xchg
cmp
les
cmpb
adc
push
dec
mov
out
push
adc
cmpsl
insb
shll
repz
ror
sti
aad
loope
mov
sub
push
adc
push
xchg
aad
jmp
pop
inc
xlat
fcmovbe
or
adc
fimull
nop
movsl
or
jns
pop
xor
pop
add
dec
icebp
shlb
add
adc
ret
sub
xchg
add
out
popf
dec
fistpl
test
fnstenv
push
mov
xlat
jbe
fcompl
mov
lods
call
or
push
pop
dec
push
mov
repnz
in
or
movsl
cli
mov
mov
xor
mov
pop
les
or
pop
adc
movsl
clc
in
out
dec
hlt
add
bound
imul
xor
mov
pop
je
pop
aam
aam
or
shll
sub
daa
mov
imul
mov
ret
fstps
dec
mov
in
cmpsb
loopne
sbb
jl
mov
xor
xchg
lahf
cwtl
sub
pop
fstl
addb
xchg
subl
push
sbb
fstpt
jno
fisttps
mov
lods
jmp
xchg
jno
loope
in
dec
mov
scas
das
push
adc
add
neg
mov
fdivrs
scas
mov
gs
arpl
btc
mov
fnstenv
stc
lret
adc
pusha
push
movsl
or
lods
rcll
xchg
adc
cmp
test
dec
mov
dec
xchg
test
mov
shll
ljmp
mov
jne
sbb
jbe
pop
adc
icebp
sti
sub
xchg
mov
cmp
push
sbb
sbb
addr16
push
sub
repz
xchg
sbb
mov
mov
jnp
popl
pushf
out
loopne
push
cmp
hlt
sub
jo
pusha
jb
andb
repz
mov
or
sahf
test
std
aam
xlat
movsl
push
cmp
add
jle
push
or
and
pop
rol
inc
sub
pop
mov
mov
daa
pop
es
idiv
dec
aaa
ret
jge
imulb
sahf
and
fidivrl
sub
add
push
dec
mov
cltd
mov
jae
ss
and
aad
jle
mov
outsl
nop
cs
sbb
iret
xor
rclb
xor
icebp
mov
sahf
int3
clc
pop
leave
jg
dec
movb
mov
add
push
xlat
leave
mov
enter
adc
jg
loop
add
das
adc
or
mov
js
test
gs
dec
std
sub
and
stc
xchg
rcll
cmpsl
cmp
jmp
scas
jp
aas
add
int
xor
dec
out
movl
dec
dec
dec
inc
mov
jno
and
test
insl
je
push
cmc
pop
adc
or
sbb
lcall
mov
xor
inc
mov
fidivrl
pop
push
das
popf
bnd
subl
mov
push
mov
mov
outsl
out
inc
sbb
dec
je
idivl
sub
mov
and
clc
insl
jp
push
add
pushf
gs
aam
mov
dec
cmp
xchg
in
push
xor
add
push
mov
push
sub
ret
mov
push
cmc
pop
mov
aam
adc
jnp
or
out
fs
push
xchg
mov
test
or
inc
mov
ret
rorl
in
pop
test
mov
xchg
ret
cmp
jns
sub
push
testl
add
outsl
mov
inc
add
cmp
inc
push
xchg
cmp
dec
or
xor
call
push
out
loope
mov
fadds
pop
pushf
aas
sub
mov
test
sbb
cmpsl
mov
pop
pushf
push
negb
mov
popa
or
ds
scas
or
jge
push
mov
pop
pop
jl
ja
lret
mov
push
jno
out
dec
jmp
popf
insb
xchg
dec
int
aad
je
lret
fildll
ds
xor
sub
mov
jg
cwtl
sub
cmp
cmc
mov
xchg
repz
xor
push
out
pop
cld
repnz
rcll
hlt
cmp
lods
cltd
sub
cld
out
and
mov
jae
jecxz
in
dec
sub
stos
lock
sbb
jbe
cmp
flds
xor
adc
ja
mov
cwtl
cmp
out
out
inc
mov
iret
imul
cmp
pop
gs
dec
adc
lahf
mov
fisttpl
pop
adc
rcll
int
out
xchg
adc
rcrb
cmc
jecxz
sub
or
nop
in
mov
adc
rcrl
arpl
loope
push
sbbb
xorl
imul
pushf
and
pop
or
daa
lock
imul
cmp
cmp
shrl
sbb
pop
cmpsl
mov
stos
push
cmp
addb
shll
pop
shl
loopne
push
adc
cmp
icebp
mov
divl
pop
add
or
add
sti
test
jbe
dec
ljmp
arpl
push
jnp
sub
mov
je
dec
orb
xchg
fldl
bound
adc
jns
in
lds
jae
dec
scas
jne
xor
aam
mov
pop
sbb
add
inc
add
mov
nop
pop
fwait
or
mulb
sub
push
cmpsl
ja
fcoms
mov
mov
xchg
push
and
push
jnp
fstpl
pushf
pop
jmp
roll
jg
outsb
jae
icebp
jo
lcall
and
push
sar
fisubl
mov
das
mov
arpl
or
sbb
mov
test
adc
ljmp
sbb
call
subl
pop
pop
int3
lea
mov
inc
daa
sbb
cmpsl
jb
sbbl
leave
xchg
xlat
lods
cmp
sub
sub
push
mov
in
push
ljmp
xchg
mov
mov
xlat
and
push
roll
inc
lods
enter
mov
aaa
outsb
mov
adc
add
mov
jno
sub
cwtl
loope
rcrl
arpl
pop
push
fnstcw
scas
es
xchg
test
cmp
add
adc
xchg
sub
add
xchg
fs
in
imul
daa
mov
inc
enter
rorb
pop
pop
outsl
test
inc
push
fisttpl
js
inc
xchg
cs
cmp
testb
add
fwait
push
data16
adc
lds
jo
mov
xchg
bnd
int
sub
mov
lahf
repnz
int3
sub
mov
shl
movsl
pop
insb
mov
std
nop
add
adc
add
js
imul
js
movsb
xor
test
push
pop
push
out
xor
mov
jmp
out
shll
mov
and
xchg
je
repz
pop
lret
out
push
call
enter
add
dec
xchg
arpl
outsb
enter
jbe
dec
div
sbb
xchg
xrelease
out
test
movsb
mov
jmp
jns
or
sub
pushf
add
scas
push
sub
sahf
dec
popa
jle
inc
or
mov
push
icebp
pop
or
loopne
sahf
adc
mov
hlt
sbb
xchg
mov
mov
cwtl
repz
adc
mov
repnz
stc
mov
adc
xchg
leave
std
sti
push
subl
inc
into
jmp
test
mov
jp
jge
pop
or
pop
and
xor
ds
icebp
loop
sub
push
mov
frstor
sarl
loopne
add
adc
sbb
push
insb
andl
inc
and
adc
das
stos
ret
jns
sub
cli
lret
push
and
aad
or
xchg
aam
lods
add
xchg
add
test
adc
imul
xor
dec
jecxz
adc
xchg
push
add
imul
add
shrl
pop
cmp
insl
mov
into
sub
mov
adc
xor
dec
lea
inc
cmp
add
pop
adc
dec
outsl
sahf
ret
mov
sub
bound
fsubs
imul
repnz
imul
lods
cwtl
add
sarl
test
pop
lods
jne
cmpsl
jb
call
pop
movsl
testl
test
test
mov
inc
popa
frstor
cld
sub
fstpl
movsl
call
sub
pop
pop
mov
add
inc
xchg
test
call
cmp
ret
loope
insl
cmc
pop
inc
cmp
pop
push
ljmp
sub
push
pusha
test
sub
mov
mov
cmc
scas
lret
loope
adc
lods
aaa
inc
mov
les
sub
stos
int3
push
popf
lahf
pop
sbb
jno
pop
mov
arpl
cmp
mov
cmp
mov
pop
rclb
sub
mov
cltd
dec
mov
outsb
out
loope
jnp
std
scas
fidivrl
xchg
mov
mov
xor
sbb
sub
mull
mov
cmp
pop
mov
shld
and
push
sbb
aam
sbb
adc
jmp
cld
and
mov
cs
mov
call
mov
mov
imul
stos
push
loopne
mov
int
adc
sub
mov
test
sbb
pop
or
pop
in
rcpps
push
cli
inc
xchg
xchg
jg
mov
test
gs
stos
std
dec
xchg
fmul
mov
or
out
fsubrl
push
enter
stos
xchg
mov
pop
andb
push
fwait
adc
loop
movsb
xor
jl
pop
mov
in
mov
and
adc
and
push
adc
pop
popa
cwtl
mov
or
jno
or
push
orl
scas
stos
movsl
subb
sar
jo
mov
aad
cmp
inc
mov
sub
dec
pusha
jae
loope
hlt
jmp
push
jae
addr16
xchg
sbb
cli
pop
jb
mov
dec
pop
lahf
sahf
ret
xor
ja
cltd
in
enter
into
adc
xor
jae
sub
sub
mov
pop
xlat
sub
sti
xchg
shrl
xchg
add
lcall
mov
ljmp
test
out
jp
or
ljmp
insl
jae
fisubs
mov
stos
scas
cmc
xchg
dec
fnstcw
xchg
mov
int3
pmaxsw
cmp
adc
jp
adc
sahf
imul
adc
xchg
xlat
fdivl
sahf
fisubs
and
pop
imul
dec
rcl
jmp
decl
movsb
ficompl
mov
repnz
stos
repnz
mov
repz
fwait
scas
push
dec
repnz
ret
push
stos
int3
addr16
mov
nop
cwtl
fcompl
inc
fnstenv
fwait
sbbl
outsb
gs
sti
xor
mulb
mov
jecxz
movsb
aam
mov
test
test
fs
and
push
mov
int3
cld
cmp
jp
outsl
mov
out
push
inc
xor
xchg
movsl
adc
xor
mov
icebp
mov
fnsave
std
idiv
xchg
es
dec
es
sahf
jge
ret
sahf
push
cwtl
ss
inc
iret
add
or
lcall
mov
ds
sbb
push
mov
rcrl
ret
adc
sbb
mov
xchg
dec
xor
jnp
movsb
xchg
jp
push
dec
sbb
in
pop
inc
jns
ss
inc
lea
loope
cmp
bound
add
jge
js
lods
jmp
fwait
clc
jae
aam
loopne
dec
push
mov
shl
mov
mov
sbb
adc
xchg
fisubrl
stos
sti
out
adcl
aaa
jle
popa
lock
sub
jb
cmp
popf
dec
or
mov
add
lahf
inc
jle
aad
outsl
cmp
stos
dec
xchg
adc
lret
push
test
jns
push
lods
ficoml
in
pop
andb
adc
arpl
rcll
cltd
fistps
and
loope
hlt
jp
or
ret
hlt
into
sub
jge
inc
push
add
gs
out
cld
test
and
addr16
push
xchg
lret
into
test
jecxz
or
test
das
jne
ret
arpl
loope
insl
sarl
add
sbb
and
jg
enter
pop
call
add
leave
lea
sub
pushf
sbb
js
aaa
push
xor
clc
xor
cwtl
stc
pop
pop
shl
cli
loope
sbb
mov
stc
mov
clc
push
push
sbb
call
inc
subb
jmp
sbb
push
dec
xchg
daa
xchg
shll
aas
ret
stos
inc
jp
dec
cld
push
xchg
inc
int
jle
addb
shll
shrl
jg
add
lock
or
mov
sub
loopne
add
push
sub
mov
cmp
cmp
stos
mov
mov
sub
dec
js
mov
insl
jle
das
into
add
or
dec
cmp
mov
mov
imul
js
mov
dec
test
std
enter
mov
imul
push
bound
xor
stos
sub
cmp
sub
xor
inc
dec
insl
dec
mov
mov
test
rolb
pop
pop
movb
in
lds
cmpsl
lock
incl
call
jns
shll
dec
dec
ja
cli
xor
mov
icebp
dec
dec
push
dec
adc
push
sub
push
adc
jle
fcompl
fsubs
sti
cli
mov
jo
in
cmp
dec
xchg
loop
stos
adc
pop
adc
adc
fisubrl
js
mov
xchg
mov
inc
das
sbb
lock
jl
lcall
pop
insl
cmp
cmc
testl
xchg
mov
and
shll
jl
cmp
insl
inc
ljmp
sbb
push
sbb
movsl
xchg
notb
jle
jns
test
ret
push
repz
mov
fsubr
stos
jg
scas
outsb
int
jns
sarb
add
imul
stos
fcompl
pop
scas
push
testl
xor
int
mov
mov
outsb
xor
xor
into
loop
insl
inc
mov
xor
xchg
daa
shl
sub
imul
fldt
lret
rolb
xor
fs
xchg
mov
notl
iret
bound
pusha
std
add
bound
mov
mov
jns
ljmp
arpl
sub
mov
sub
sbb
and
imul
shl
shll
nop
adc
sub
push
out
mov
lret
mov
lods
call
sbb
fmull
mov
jp
lea
adc
imul
ret
fiadds
pushf
shrl
cli
addb
add
cmc
push
jbe
add
aas
or
jae
shll
xor
leave
rorl
xor
into
sti
cltd
je
sub
add
adc
leave
fs
je
and
clc
insb
adc
add
lea
jl
popa
pop
xor
sub
add
fsts
and
inc
jnp
dec
test
lsl
mov
mov
mov
aad
jbe
iret
out
add
es
and
rcrl
mov
subl
mov
jae
mov
xor
push
subl
arpl
popa
dec
popa
cmpl
call
js
sub
bound
push
xchg
sahf
add
mov
lret
xchg
inc
les
std
test
clc
or
mov
dec
outsl
lret
xchg
imul
inc
test
mov
xor
je
loop
shlb
mov
test
add
sbb
shlb
mov
popa
pop
andl
cmpsl
adc
frstor
push
xchg
mov
aaa
call
bound
test
mov
pushf
sub
scas
xor
sub
or
outsl
add
and
lret
cmp
xchg
add
pop
mov
or
and
cmc
pop
cmp
sbb
loopne
inc
xor
ror
fcmovne
inc
out
mov
xor
dec
sbb
xor
mov
imul
mov
popf
dec
out
loop
movsl
fcmovnb
aas
jb
xchg
ret
loopne
test
jno
mov
repz
push
sbb
lods
mov
sbb
fdivl
sub
mov
sub
rcr
rcl
data16
push
adcb
leave
aam
push
jo
jge
push
push
and
lea
aam
add
sub
mov
jle
aas
pop
insl
mov
or
add
fmull
sbb
addr16
push
mov
pop
mov
pop
xchg
xchg
fidivrl
jbe
sub
pusha
xor
ljmp
inc
xor
fsubl
in
cmpsl
sbb
sbb
mov
or
divl
mov
loope
add
mov
outsl
pop
jne
repnz
stos
pusha
faddl
js
leave
sub
pop
jg
sub
add
out
sub
mov
adc
icebp
mov
ja
stos
decl
jo
daa
xor
mov
pushf
sub
push
fldenv
daa
mov
xchg
lods
xchg
lock
lret
les
jnp
xchg
imul
push
xor
xor
out
push
mov
movsb
in
mov
lods
in
mov
in
faddl
adc
jo
inc
jge
out
adc
dec
cmp
sub
imul
dec
popa
scas
mov
mov
sti
dec
in
stos
mov
jge
and
dec
test
mov
inc
xor
mov
lret
or
fimull
sbb
pop
fisttps
insb
mov
imul
dec
add
push
push
ds
insl
pop
sub
addl
test
in
aad
or
mov
fidivrs
jns
push
or
rorb
pop
sub
sbb
mov
pop
push
fldt
add
imul
fcomip
xchg
dec
push
and
jnp
xchg
mov
push
inc
repnz
pop
pop
and
lds
ret
aas
sub
sub
mov
pushf
pop
xor
or
ret
lods
jmp
ss
adc
ljmp
stc
or
xchg
out
rorl
dec
divb
shlb
mov
call
adc
push
call
or
jecxz
mov
out
js,pt
gs
lret
mov
xor
inc
dec
sub
mov
add
imul
cmp
sub
cmp
aad
fistpll
xchg
faddl
into
mov
out
or
inc
movb
sarl
inc
ja
dec
adc
gs
xchg
rcl
adc
inc
daa
xor
sbbl
dec
adc
xchg
aas
mov
sbb
cmp
xor
push
add
int3
shrl
inc
sub
and
out
fnstenv
in
and
push
repz
mov
mov
rcll
test
or
cld
sbb
xor
enter
jge
jecxz
xor
add
dec
push
loopne
clc
mov
lea
sub
dec
cmp
pop
imul
adc
jo
mov
sbb
pop
dec
jg
jno
inc
add
out
std
enter
jae
pop
andb
and
add
add
mov
or
sbb
ret
push
ljmp
clc
pop
jl
out
mov
das
push
fwait
push
stos
jns
xor
scas
daa
shll
push
js
negb
rorb
sbb
or
mov
dec
mov
fld
dec
or
stos
adc
pop
into
inc
in
jmp
repz
xor
pop
jp
push
xchg
xor
popa
adc
jp
sub
test
inc
mov
call
out
sbb
adc
dec
jno
cmp
lcall
fisubrs
pop
and
push
sahf
sbbb
inc
inc
sarb
mov
push
push
cld
push
pop
loope
mov
jp
mov
arpl
negb
dec
jge
hlt
daa
leave
xchg
xchg
jns
mov
ja
mov
call
imul
test
mov
xchg
call
mov
in
aam
cmp
jle
mov
cmp
loop
and
in
lret
and
sbb
stos
das
clc
arpl
insb
lret
jl
xchg
cltd
inc
dec
or
inc
je
sbb
or
cmp
ds
adc
mov
fbld
inc
pop
sub
outsb
scas
pop
add
sub
push
push
sub
mov
lcall
push
xor
inc
dec
test
push
lret
and
int
mov
or
push
in
push
sbb
xor
fsts
or
cmpsl
xor
cmp
inc
and
data16
mov
pusha
push
clc
sti
sahf
mov
push
aas
testl
dec
pop
inc
test
outsb
xchg
and
nop
mov
sub
fwait
loopne
jae
add
sub
fmul
divps
js
cltd
add
pop
scas
mov
sbb
test
mov
int3
ret
add
in
cmp
mov
push
add
xchg
jle
bound
xchg
mov
ja
push
cld
push
sbb
xchg
and
fildl
adc
fisubl
pushl
aaa
cmp
es
fwait
ja
das
leave
outsb
mov
push
push
cmpsl
inc
ret
mov
rorb
ficompl
shrl
repnz
in
dec
xchg
dec
push
fdivr
imul
push
pcmpgtd
out
sbb
jl
dec
shrl
push
push
mov
orl
insb
mov
push
cmp
gs
inc
xor
adc
fs
xchg
xor
or
sbbl
or
int3
jmp
jg
adc
mov
rorb
lods
lods
sahf
xchg
fs
mov
loopne
xchg
loop
lods
or
call
loope
xor
xchg
popa
and
xchg
incb
das
mov
mov
test
clc
ret
daa
dec
lret
mov
push
jbe
fisttpl
pop
shlb
std
jb
mov
sub
mov
repz
and
insl
dec
cltd
rcr
fwait
push
dec
sbb
pop
arpl
scas
xor
xchg
xlat
mov
cmp
in
jb
dec
fnstcw
std
jle
push
ss
scas
and
sbb
mov
jno
mov
call
push
cmpsb
add
xchg
xor
mov
lock
inc
push
ja
jbe
or
and
mov
push
mov
xlat
mov
fwait
mov
jge
add
xor
adc
repz
aam
jo
int
push
enter
sbb
lock
xor
shlb
fs
faddp
xchg
pop
fdivl
int
cmpsl
sub
push
xchg
sbb
or
xchg
add
ret
fs
pop
cmp
sub
pop
and
sub
lds
mov
xchg
xor
shlb
fwait
stc
mov
mov
push
push
fs
int
clc
inc
icebp
repnz
and
nop
pop
les
mov
sti
dec
movsb
lock
outsl
mov
fwait
mov
jo
pop
or
ret
or
ret
loop
xchg
std
mov
es
xchg
test
lret
adcb
lock
adc
sbb
testl
ficompl
xor
cwtl
loopne
xchg
add
test
sbb
jmp
push
sbb
dec
cld
pop
sahf
out
fsubrs
lods
ds
jmp
addr16
and
stc
pusha
lea
jmp
sbb
mov
adc
out
jb
imul
lea
mov
loop
ja
test
sarl
adc
dec
mov
dec
into
push
out
cmp
jbe
mov
outsl
add
dec
clc
stos
mov
xor
pop
mov
outsl
cmp
int
or
sbb
into
data16
dec
sbb
adc
pop
dec
sub
out
adc
pop
in
mov
call
mov
xchg
cwtl
mov
or
push
xlat
addl
loopne
pop
and
or
jb
in
stos
push
cwtl
push
or
sbb
xor
sbb
lret
dec
and
jl
repz
dec
insb
pop
jp
addr16
fistps
popf
inc
sti
fs
or
pop
or
and
cmp
test
pop
cmc
out
inc
in
xchg
push
inc
enter
int
jge
pcmpeqb
mov
pop
and
xlat
addr16
lds
aas
push
or
sub
dec
jle
outsl
into
pop
les
mov
mov
subb
rcr
pop
clc
push
push
lods
jle
and
sub
out
xchg
add
icebp
xor
mov
mov
cli
fbld
andb
and
xstore-rng
cmpsl
adcb
sbb
xchg
rcrl
jmp
add
pop
frstor
shrl
data16
mov
jnp
and
loop
xchg
ja
popf
sub
mov
xchg
js
xchg
pop
mov
mov
jle
mov
jp
inc
icebp
mov
dec
fwait
adc
lods
gs
add
jb
imul
iret
mov
jo
mov
cmc
lret
jnp
loop
add
ficoms
sbb
outsl
shrb
js
and
in
je
sub
bound
pop
pushf
lods
out
push
cwtl
add
or
jl
xor
xor
data16
push
sbb
sbb
fsubrs
stos
das
pop
pop
pop
push
idivb
push
xor
je
ja
mov
sahf
testb
aad
ret
mov
in
cld
adc
dec
xchg
pop
into
ljmp
fcoml
ficompl
enter
fsubp
ret
sahf
inc
ret
lahf
movb
shl
pop
mov
add
dec
repz
add
repz
mov
subl
cld
outsb
test
mov
xchg
dec
jb
pop
and
cli
push
int
cli
xor
shll
and
loopne
out
mov
jne
jo
inc
push
pop
fcomps
test
movsl
sar
fwait
in
into
push
xchg
inc
jne
cmp
sbb
insb
sub
xor
xor
push
fisubl
pop
mul
mov
cltd
shrl
push
ja
aam
cmp
mov
xlat
ss
xchg
jnp
cmp
les
aam
test
test
push
pause
ret
push
je
cmpsb
das
std
mov
inc
test
inc
outsl
or
and
int
fld1
add
mov
add
fdivr
test
cltd
inc
push
movsb
mov
aaa
dec
xor
add
and
add
lahf
inc
rorl
adc
pop
pop
addr16
inc
out
cmpsb
bound
mov
adc
or
in
test
rcll
dec
mov
adc
outsl
int3
addl
push
push
nop
jne
aas
sbb
jo
fstpl
sbb
stc
jp
subb
mov
ss
out
add
lods
sbb
into
fistl
and
jecxz
lds
rorl
mov
ficompl
push
arpl
pop
hlt
fs
add
or
scas
cmp
icebp
sub
push
sbbb
jae
lock
cltd
out
testl
mov
ss
in
int3
fisubl
push
pop
negl
mov
outsb
out
test
xchg
mov
fidivl
xlat
lea
pop
arpl
out
or
orb
sahf
mov
stos
lods
shlb
pop
adc
aaa
dec
mov
mov
cmpsl
xlat
inc
cmp
pop
lret
jge
ds
popa
adc
dec
out
test
outsl
shrb
das
xchg
sub
in
pop
add
xchg
and
sbb
insb
dec
inc
call
mov
lods
movsb
andb
inc
adc
jge
hlt
cmp
int3
sbb
inc
mov
mov
pop
lahf
pop
cmp
in
sbb
repnz
jp
popf
and
mov
sub
push
out
push
jbe
aad
mov
push
aad
xchg
push
pop
xor
mov
loope
adc
mov
js
push
pusha
mov
mov
into
sub
cwtl
das
hlt
sub
and
sti
mov
lcall
sti
cltd
mov
cmp
xchg
push
mov
sbb
push
movsb
jmp
jge
mov
test
fnsave
adc
popa
mov
subb
jecxz
sti
mov
xor
xlat
xchg
test
mov
push
xor
mov
mov
pop
and
and
lods
dec
sbb
out
mov
mov
gs
mov
in
sub
fsubr
int
fs
push
push
loope
fs
fs
pop
push
xchg
xchg
std
sbb
adc
pop
mov
inc
push
mov
sarl
xchg
and
imul
ret
sahf
mov
in
mov
out
cmpsl
pop
cld
std
push
repz
mov
fcmove
jecxz
movsl
loop
adc
jg
mov
out
movsl
fidivrl
mov
lea
inc
inc
cmc
xchg
popa
sub
inc
cld
into
or
or
icebp
filds
push
inc
jecxz
repnz
stos
xchg
add
add
fbld
cmp
dec
sub
dec
cmp
pop
add
ficompl
das
xchg
cmp
frstor
pop
sbb
jnp
ds
loop
icebp
sub
nop
xchg
rcll
mov
inc
pop
in
cmpsb
add
xchg
iret
xor
clc
scas
mov
cmp
data16
inc
xor
dec
dec
xor
insl
iret
mov
cltd
out
lods
and
dec
lock
mov
push
mov
mov
add
jns
add
push
ja
lret
lods
jb
adc
push
mov
movsb
das
in
out
and
sub
subb
addr16
sbb
sub
push
adc
stc
cs
xchg
jae
test
fs
sbb
imul
cmp
or
cmpsl
out
xlat
inc
push
pop
jg
add
mov
or
loope
jl
stos
dec
inc
daa
mov
out
cmp
into
sbb
int
push
aam
daa
inc
addr16
rorb
or
mov
mov
sbb
xlat
das
aam
mov
fcomps
sarl
jg
cmc
in
mov
cmp
xchg
jp
aas
mov
xor
jecxz
adc
jge
add
dec
popa
movb
dec
ret
hlt
jge
hlt
pusha
or
test
or
cli
push
mov
push
popl
dec
push
lods
and
cmp
pop
out
test
ljmp
outsb
into
xchg
add
lahf
push
inc
in
mov
and
jmp
scas
loope
out
loope
cmp
js
out
and
xchg
jb
sar
cmp
ret
int3
jbe
or
mov
aad
or
push
or
fstl
mov
stos
push
add
iret
in
and
test
lret
lds
mov
xor
add
xchg
mov
fstpt
test
mov
pop
enter
inc
cmp
push
nop
cmpsl
xchg
pop
sub
loope
xor
lret
call
cmp
pop
jl
or
ss
xor
push
lahf
je
sbb
shlb
mov
call
jbe
fimull
adc
cmp
arpl
mov
icebp
insl
int
xchg
cli
scas
sub
inc
movsb
adc
cmp
pop
int
add
and
and
push
sbb
test
or
stos
add
pop
and
hlt
iret
popf
jmp
imul
mov
push
mov
push
mov
idivl
and
push
push
mov
sub
in
mov
inc
and
jge
adc
clc
ss
jnp
arpl
sub
push
das
inc
fcoml
ret
into
dec
les
mov
mov
push
sahf
dec
pop
leave
daa
shr
shrl
push
inc
ljmp
test
dec
test
inc
daa
add
xlat
shll
and
xor
lods
aaa
cltd
imul
jp
mov
xchg
lret
sub
popa
xlat
ds
mov
or
test
inc
out
jl
sub
ds
jne
xchg
sub
inc
sbb
cltd
cmp
sbb
test
add
cmp
dec
lods
dec
std
rcl
xchg
push
outsl
popf
data16
add
gs
and
sbb
ljmp
test
insb
lock
add
mov
cmp
cmp
andl
inc
inc
ret
or
or
jge
xlat
inc
sbb
daa
push
pop
cmovb
imul
add
andb
push
movsl
mov
mov
aad
cmp
sbb
ret
out
out
pop
repz
and
cmc
and
push
fmull
mov
add
roll
and
loop
cmp
fisttpl
lods
or
rcl
cmp
arpl
cmpsl
mov
or
cmp
adc
and
sti
outsb
jg
mull
fs
cmp
jl
jns
sbb
mov
adc
js
mov
pop
pop
xor
add
jecxz
sub
dec
pop
cmp
sti
add
aas
add
push
sahf
mov
push
popf
mov
mov
ret
sbb
repnz
std
movsb
and
lret
mov
notl
sub
dec
into
pop
repz
mov
add
mov
add
sub
cmpsb
outsl
scas
mov
mov
addr16
loopne
push
pop
pop
pop
adc
clc
aam
frstor
loope
add
sti
loop
sbb
xchg
sahf
dec
sbb
inc
iret
adc
cmp
mov
gs
shrb
xchg
xor
lock
iret
cmpsl
push
cs
dec
aad
inc
adc
nop
sahf
sub
scas
int
jmp
stos
fisttps
and
mov
xchg
push
jmp
and
bound
pop
mov
cmp
sub
clc
cmp
jbe
stos
std
mov
loopne
cmp
cld
lret
xor
jns
lcall
jnp
pop
int
sahf
jo
xchg
jbe
mov
dec
dec
test
adc
test
xchg
scas
leave
mov
insb
push
sbb
xorl
ficomps
inc
aad
je
lret
add
loope
xchg
ja
mov
dec
fimuls
jb
push
jne
adc
inc
mov
add
sub
fs
cmc
and
jg
add
mov
jle
xor
pop
aaa
mov
sub
pop
ret
pop
test
mov
or
test
mov
mov
dec
jge
andb
cmpsb
inc
clc
cmovge
movsl
fmul
inc
loopne
mov
push
jbe
cltd
int
jo
jle
cmp
mov
jnp
outsl
push
jbe
addl
mov
inc
call
cmp
xor
pushw
ds
aam
sub
leave
add
push
pop
jae
mov
daa
cld
ficoms
rcrl
mov
ret
lret
movsl
xor
adc
push
sub
cmp
xlat
subl
imul
in
in
pop
xor
jo
pop
fidivl
and
inc
bound
shrb
icebp
mulb
scas
clc
fs
dec
aaa
repz
pop
out
loope
jle
pop
sub
and
or
add
aaa
test
daa
fdivl
adc
nop
push
dec
pop
jmp
les
mov
adc
shl
divb
lea
stos
mov
bound
outsb
imull
push
jmp
outsb
pop
sub
es
and
cmp
lcall
sub
scas
hlt
stos
scas
shrb
mov
inc
jns
push
icebp
cmp
xchg
out
mov
hlt
iret
adc
push
das
mov
and
rolb
stc
fldl
popa
push
movsl
sbb
cld
ret
inc
out
lret
dec
cmc
rcl
rclb
roll
daa
ljmp
jae
sub
pop
and
jge
insl
pop
xchg
test
ficoms
push
popf
and
call
pop
test
bound
or
inc
flds
enter
ss
dec
orb
xchg
stos
lock
jno
sbb
jecxz
fbld
sbb
shlb
pop
sub
aas
daa
in
jmp
mov
adc
hlt
addr16
test
xor
rorl
push
ss
mov
xor
mov
push
xchg
xchg
and
sbb
ret
mov
out
or
cmp
dec
aad
stos
test
aaa
stos
pop
jno
sbb
and
fsts
xor
xor
icebp
cmp
test
jbe
adc
mov
add
mov
mov
nop
fisttpll
sar
stc
pop
dec
lahf
nop
xor
js
js
xlat
aad
out
or
mov
mov
sub
mov
mov
sti
xlat
and
popa
cmp
out
lock
cs
dec
xor
dec
lret
adc
mov
and
aaa
cwtl
pop
mov
xor
push
test
jnp
xchg
sbb
lods
fs
negb
rclb
pop
leave
add
mov
loopne
mov
or
cli
sti
jp
sbb
scas
mov
jp
xchg
jno
lcall
xchg
loopne
sub
add
adc
mov
int
sub
aaa
sbbb
sahf
out
sahf
xchg
mov
or
in
pop
cmc
dec
les
lret
mov
sub
arpl
dec
sbb
rol
jg
stos
xchg
sti
arpl
sbb
out
stos
mov
pushf
cmp
mov
fidivrl
push
push
bound
in
pop
push
ret
push
sub
cmp
sbb
stc
into
dec
stos
lea
pop
or
lea
std
mov
inc
stc
ret
add
mov
mov
dec
stos
jmp
push
or
fs
js
addr16
sbb
scas
or
iret
adc
and
in
call
and
cmp
xlat
inc
sbb
mov
dec
jns
les
inc
js
add
lods
mov
inc
sarl
fisubl
and
loopne
ret
enter
xor
fs
sbb
rcrl
mov
in
lea
xchg
inc
inc
mov
inc
inc
ret
aam
arpl
mov
leave
jge
loopne
inc
mov
mov
bound
fdivl
adc
iret
aam
les
cmp
lods
push
push
or
mov
popf
add
dec
push
jns
mov
fmul
mov
xor
push
out
xlat
jb
and
fimuls
lahf
shlb
sahf
adc
jg
push
aam
or
ficoms
xchg
rolb
ljmp
jae
gs
gs
mov
adc
cmpsl
push
add
mov
out
test
dec
push
mov
dec
inc
clc
loop
pop
jnp
sbb
pop
add
sub
xchg
enter
or
add
out
and
repz
sub
and
jmp
shr
mov
mov
add
jg
fs
in
jo
jge
stc
pusha
or
out
popf
sbb
lret
test
enter
daa
adc
lea
add
mov
das
mov
shlb
and
rclb
adc
ljmp
or
jmp
lahf
mov
fmull
push
mov
or
jmp
out
loopne
repnz
rol
lcall
lahf
aaa
movl
jns
fwait
pop
fsubs
cwtl
pop
repnz
sub
mov
ss
jb
pop
push
enter
aam
push
out
outsl
xorl
or
cwtl
mov
enter
mov
loope
cmp
adc
jb
jmp
jmp
adc
popa
notl
cmc
jmp
outsb
mulb
add
inc
cmp
push
add
mov
mov
push
ret
push
inc
in
lahf
call
dec
into
mov
push
pop
into
mov
pop
enter
jno
jp
mov
or
call
mov
push
cmp
in
mov
sti
lock
sti
sti
stos
mov
loop
push
jns
or
mov
xor
std
jle
mov
lahf
fst
xchg
cld
adc
push
and
mov
cmp
aaa
pop
jns
ficoml
sub
mov
pop
xor
call
popf
sub
subl
pop
stos
rorl
jmp
push
insl
xchg
ss
iret
test
int
enter
out
outsl
adc
mov
pushf
sub
jb
cmp
pop
dec
adc
addr16
adc
lods
pushf
adc
pop
jo
xor
cmp
mov
mov
movsb
or
mov
inc
sub
shlb
popa
mov
out
dec
popa
nop
and
push
shll
sub
popa
mov
jle
xchg
int3
mov
adc
rcr
fnstcw
mov
test
mov
cmp
mov
stos
cld
mov
aaa
sub
outsb
scas
push
sbb
pusha
sarb
ljmp
popa
mov
mov
dec
insl
scas
enter
in
jp
shrl
adc
sti
jp
mov
xchg
or
pushf
sub
loopne
pop
cwtl
add
inc
sbb
sub
iret
inc
adc
or
dec
mov
push
pop
in
mov
mov
push
mov
inc
or
cmp
int3
add
sbb
xchg
stos
je
in
xor
or
int
add
inc
mov
fcomip
fisubl
in
addr16
nop
mov
pop
jg,pn
cmp
out
sub
inc
push
sub
rcll
loopne
mov
push
scas
or
mov
insl
xor
xchg
std
xor
cmp
inc
roll
adc
and
dec
insl
roll
out
cmp
in
or
fistpll
sub
and
mov
mov
popa
mov
xchg
aam
stos
xor
mov
mov
std
xchg
in
rorb
push
sub
ss
dec
pusha
mov
jmp
mov
mov
sub
test
jp
stos
mov
adc
lret
fs
mov
mov
jae
fsts
in
pop
out
add
iret
aas
test
in
aas
xor
xchg
insb
push
jp
test
mov
mov
adc
sbb
loop
movsl
ds
bound
addb
dec
jl
rcrl
iret
cmc
enter
cmpb
mov
add
mov
mov
mov
mov
adc
stc
jno
dec
out
inc
movsb
add
movsl
loop,pt
js
das
scas
clc
jns
sahf
es
mov
mov
loop
xor
dec
lds
sub
div
ds
jl
sbb
mov
jo
mov
jo
inc
fimuls
xchg
inc
lret
popf
stos
xchg
insb
bound
pop
out
iret
lods
and
xchg
sbb
cmpsb
and
dec
pop
xchg
andb
lret
add
mov
loop
mov
inc
shll
outsb
rcrb
mov
movsl
stos
push
jl
scas
test
sbb
adc
dec
add
test
js
mov
and
pop
add
jo
loope
lahf
leave
xchg
mov
pop
and
mov
popa
fimull
fldenv
cwtl
test
or
xor
jne
xor
stos
shll
nop
pop
dec
test
pop
int
mov
cld
cs
in
orl
lea
adc
inc
jb,pt
jmp
test
jne
mov
fstpl
add
outsl
fcompl
lret
fwait
lret
fldcw
lods
inc
pop
pop
dec
lods
and
test
mov
scas
jge
cmp
or
and
es
insl
jge
je
popf
in
inc
jl
int3
push
pushf
bound
outsb
sbb
xor
push
lahf
mov
iret
xorb
int
jno
and
fnstsw
jp
fbstp
pop
std
test
es
fwait
inc
mov
test
cmpsb
xor
lds
jne
dec
jbe
cmp
hlt
shlb
ss
std
adc
sarl
inc
push
cld
lahf
negb
addr16
std
movb
out
xchg
mov
popa
aas
imulb
lds
jmp
push
lock
ljmp
jle
xor
mov
xor
cwtl
mov
leave
fcmovbe
jp
jl
inc
dec
dec
nop
adc
mov
xor
dec
shl
pop
aaa
and
clc
in
shl
jbe
mov
or
out
hlt
or
arpl
aam
mov
cmp
into
dec
push
jnp
adc
xor
insb
ds
xor
imul
jo
fwait
pop
adc
dec
sub
or
inc
imul
xor
pop
cmp
iret
ja
jne
xor
mov
fistpl
rcrl
add
repz
data16
mov
push
push
es
mov
mov
ficompl
nop
sub
jmp
and
push
pop
test
mov
imul
movsl
and
out
or
je
repnz
jnp
adc
in
cmc
jo
decl
daa
adc
stos
test
jp
mov
sbb
push
or
mov
xlat
outsb
or
mov
push
outsl
das
sahf
out
mov
int
lcall
imul
inc
dec
movsl
call
inc
mov
xor
xor
repnz
repz
mov
dec
mov
int3
fstpl
jge
adc
aas
push
insl
ljmp
xchg
mov
iret
fidivs
js
divb
lcall
shrl
add
pop
das
dec
clc
xor
jbe
or
ficompl
pop
frstor
mov
lods
fs
jnp
dec
mov
dec
cmp
out
imul
imul
outsb
fs
cld
inc
nop
mov
cld
xchg
enter
push
test
mov
mov
loopne
sub
mov
hlt
mov
xchg
addr16
call
xchg
jge
daa
in
sub
rol
imul
inc
pop
hlt
addb
adc
jbe
jecxz
sbb
mov
jns
xchg
repz
mov
popa
add
sbb
add
sub
lret
jnp
cmp
mov
sbb
xor
mov
int
sbb
pop
outsl
cwtl
aad
push
fists
sbb
movb
adc
mov
pop
fsts
fwait
cltd
cltd
sbb
sbb
lahf
mov
jns
dec
inc
cmp
sbb
das
pop
popa
leave
jle
xor
mov
stos
call
mov
stos
add
xlat
xor
into
das
or
cmpsb
lcall
push
out
adc
dec
push
ss
out
aam
enter
jnp
mov
imul
or
xor
mov
fistl
loopne
popa
in
push
mov
aad
jbe
and
xlat
pop
push
fwait
dec
push
fbld
nop
mov
lea
ja
sbb
push
mov
les
out
mov
ror
lock
inc
mov
add
ss
fucomi
ds
jbe
adc
fiaddl
js
adc
sub
ret
mov
adc
dec
stos
sub
mov
mov
movl
push
adc
jecxz
jae
scas
testl
push
jge
cmova
ret
rclb
mov
add
cmp
cmp
iret
in
push
add
push
push
scas
sub
enter
pop
arpl
test
jmp
pusha
lea
ret
repnz
mov
pop
lret
add
ss
imul
mov
mov
xlat
inc
pop
cltd
xchg
pop
mov
jne
icebp
dec
cmc
jge
cmp
add
mov
cwtl
dec
push
adc
or
fs
cli
xlat
out
dec
sub
push
push
in
lods
mov
int
mov
sbb
jne,pn
imul
mov
arpl
jno
cmp
popf
outsl
test
lret
inc
mov
imul
clc
clc
dec
mov
xorb
dec
inc
cli
lret
add
pop
xor
and
sbb
cmpsl
jmp
arpl
jp
push
stos
cmp
imul
ror
lods
mov
hlt
sbb
shrb
mov
push
inc
clc
fcmovb
jp
xor
ss
das
pop
mov
rcrl
cmp
sar
xchg
xchg
push
xchg
dec
add
cwtl
mov
or
lods
jge
addr16
mov
les
pop
int
dec
cmp
xchg
outsl
cmp
push
aad
outsb
adcl
test
xchg
add
pop
orb
or
hlt
popf
adc
nop
inc
dec
loop
pop
pop
fistpll
cwtl
inc
sahf
imul
mov
cld
push
cmpl
lods
pop
aas
cmp
fsubrs
mov
add
cmp
les
or
xor
repnz
loope
mov
pop
mov
cmp
jne
data16
xchg
dec
dec
hlt
xchg
sbb
sarb
cmp
fistpl
cmc
xchg
call
inc
adc
add
gs
imul
ret
push
or
stc
dec
xchg
mov
inc
mov
adc
xchg
xchg
lods
daa
xor
fsubrl
stos
mov
mov
notb
and
sbb
push
out
ret
into
push
jne
lcall
fisubs
pushw
jecxz
loopne
ja
pop
push
scas
pop
ja
pop
adc
mov
jne
mov
out
push
aam
int3
push
or
aad
cwtl
adc
shll
loope
dec
pop
mull
add
rep
jmp
xor
sub
loope
mov
loopne
scas
scas
in
std
and
les
mov
out
sahf
dec
pop
or
icebp
adc
push
cmpsb
pop
sbb
add
adc
jnp
ja
mov
mov
push
repnz
push
sbbb
mov
or
incl
or
xchg
jecxz
cmpb
add
cmp
mov
ret
stc
sbb
lods
pop
fs
jae
inc
mov
stos
push
inc
out
cmp
push
dec
icebp
pop
xchg
outsb
rcr
leave
or
sbb
mov
mov
std
xor
sbb
sbb
loop
sbb
sub
pop
dec
mov
test
flds
pop
sbb
es
popa
addr16
ret
addr16
or
outsl
push
fidivs
inc
inc
les
xor
and
jbe
mov
scas
pop
sub
mov
xor
in
cmc
push
out
filds
and
es
rcr
aad
xorb
popf
or
adc
std
icebp
cld
push
pushf
sub
in
outsl
xchg
jbe
lods
jb
testl
loop
cltd
test
andl
jo
insb
test
cwtl
jg
adc
ja
xor
dec
push
negb
xchg
cmp
pop
dec
test
adc
mov
repz
mov
pop
bound
ja
cmpsb
cmp
mov
lods
loope
in
xchg
mov
icebp
xchg
inc
jg
jmp
mov
sbb
sbb
iret
insl
outsl
or
mov
inc
js
lret
cwtl
push
mov
ss
mov
lret
mov
push
fs
or
mov
xor
shll
adcb
xchg
pop
or
add
sahf
mov
aad
shlb
mov
xor
mov
xor
aaa
or
jmp
add
mov
xchg
lcall
int3
mov
adc
inc
or
adc
fmul
std
push
mov
dec
xor
mov
scas
jnp
popf
movsb
xchg
repz
sbb
xchg
inc
sub
adc
jmp
and
cmpsl
dec
std
cld
pop
sbb
lods
std
fldl
mov
add
pushf
jae
movsl
mov
jo
dec
xor
js
rolb
mov
or
xor
andb
cltd
adcl
out
push
ss
sub
es
mov
xchg
fiadds
mov
mov
imul
sbb
sub
mov
xchg
mov
mov
mov
lds
add
pop
adc
dec
sbb
mov
loope
aaa
cmp
sbb
test
dec
mov
loope
cli
mov
push
outsb
call
sub
pop
mov
xchg
pop
or
ja
add
adc
cwtl
aad
jo
fwait
pop
push
dec
mov
mov
lcall
jnp
sub
psubusw
jle
enter
loopne
in
xchg
sarl
and
movsb
cmpsl
test
stos
daa
jo
cmp
test
je
pop
aad
pop
ret
mov
subb
pop
inc
push
insb
pop
sub
cmp
mov
cmp
mov
ss
addr16
xchg
xor
jb
xor
subl
or
das
xchg
inc
mov
add
jbe
or
js
cs
lea
fs
xchg
add
xchg
lods
inc
or
pop
dec
and
dec
adc
sbb
sbb
cmp
loopne
popa
adc
xor
mov
inc
add
jae
xchg
cltd
imul
lods
fdivrs
push
sbb
xchg
mov
lea
repz
notb
call
repnz
pop
add
pop
xor
adc
pop
fidivl
scas
rclb
add
movsb
push
mov
mov
inc
pop
and
out
fwait
leave
testb
pop
pop
sub
mov
shlb
and
xorl
outsl
fisttps
xor
sti
and
pop
mov
adcb
hlt
popa
mov
jmp
cmp
in
in
sbb
xchg
leave
sub
jns
cmp
push
or
sti
jne
cli
pop
push
adc
sbb
dec
mov
mov
insl
cmp
push
push
sub
xchg
mov
into
negb
mov
aas
add
lods
in
mov
mov
sub
xchg
cmp
out
and
add
pop
sahf
jge
out
into
insl
cs
lcall
xor
rcll
inc
and
add
xorb
nop
aad
sub
in
sbb
xchg
xor
cmp
enter
orb
pushl
sbb
aas
cld
and
insl
pop
mov
scas
ljmp
fsubrp
shlb
lret
stos
popa
pop
pushf
popa
pop
and
sub
outsb
xchg
inc
sub
adcb
mov
push
jle
dec
into
cmpb
inc
ss
movsb
push
sahf
mov
into
ljmp
div
pop
dec
bound
fidivs
pushf
adc
popf
push
aad
sub
aaa
mov
dec
mov
pop
or
call
rcrb
fistl
push
push
xchg
addr16
int3
stos
push
sbb
add
lds
or
xlat
push
ja
std
jae
jecxz
pop
add
cmp
or
add
int
jo
sbb
adc
push
out
ss
or
adc
lods
mov
cmpsl
imul
lds
add
adc
mov
add
fwait
movsl
xor
xor
adc
xor
stos
jecxz
addl
es
bound
shll
dec
call
ret
rol
in
adc
ret
inc
dec
mov
mov
cmp
cs
mov
cmp
aad
dec
sub
ja
lock
mov
jo
cmp
lret
inc
fwait
xor
cmp
adc
es
mov
pushf
das
std
push
test
insb
mov
es
hlt
cli
fs
or
outsl
dec
mov
test
iret
fidivs
mov
adc
enter
aas
push
sahf
mov
lea
sar
push
push
sbb
jb
push
adc
push
mov
in
lods
lods
mov
mov
daa
adc
shlb
xchg
je
testl
lcall
push
push
jo,pn
xor
sbb
repnz
inc
das
mov
ljmp
into
sub
aam
push
jnp
imul
ja
push
imul
outsl
fmull
sbb
in
adc
push
dec
and
fbld
fcomps
adc
test
jl
cmp
out
inc
xchg
and
jmp
shrb
pop
adc
pop
pop
insl
mov
hlt
mov
insb
jl
sti
jg
mov
cmpl
cmp
je
cmp
out
adc
inc
or
bnd
mov
push
aam
lahf
lret
push
mov
sub
jne
mov
or
and
jo
out
xchg
aad
sbb
leave
nop
xor
adc
out
les
ret
imul
clc
adc
aas
cwtl
jl
push
push
stc
shrl
jl
xor
inc
loope
xchg
fists
data16
xchg
mov
imul
push
fidivl
mov
sub
and
in
ja
imul
xlat
inc
push
nop
notl
dec
adc
sbb
or
cli
cltd
add
push
aad
and
push
xor
in
jo
andw
inc
mov
pop
aam
in
push
mulb
mov
sub
les
adc
aam
pop
daa
out
inc
inc
mov
mov
sub
shlb
aaa
sub
mov
repnz
ljmp
add
arpl
les
adc
cwtl
push
lds
repnz
cmp
mov
xchg
mulb
mov
int
in
rolb
cmp
inc
xlat
mov
pop
push
inc
in
jbe
mov
pushf
mov
stc
mov
andl
mov
adc
dec
nop
negb
cld
dec
push
pop
mov
add
mov
mov
add
out
sub
jnp
shll
test
xchg
into
divps
ror
shll
xor
jne
xor
mov
sub
adc
sbb
pop
cmp
dec
push
cmp
push
dec
lret
notb
roll
rcrb
stos
push
dec
jecxz
aas
pavgb
lds
fistl
add
xor
out
lahf
cmp
mov
pop
lea
out
jmp
insb
daa
or
xchg
xchg
xor
loope
sbb
notb
cmc
mull
test
mov
mov
lahf
clc
rcrl
cmp
sti
andl
loop
inc
lods
inc
scas
les
andb
xchg
ja
or
sub
cmp
out
pop
jo
lea
adc
fnstenv
and
dec
rorb
pop
mov
pop
cmpsb
and
ja
or
das
jo
lcall
stos
std
fsubrp
xchg
mov
jmp
add
andb
dec
jmp
std
inc
jp
mov
add
mov
adc
sbb
test
or
nop
repz
push
lea
mov
lcall
rclb
inc
clc
xchg
mov
push
shll
xchg
or
xor
iret
inc
sar
stc
xor
mov
mov
mov
test
add
fdivrl
or
mov
es
mov
and
pop
jnp
pop
nop
cmpsl
in
inc
mov
divl
pop
inc
push
mov
ja
cltd
std
cmpsb
cs
stos
or
iret
out
dec
mov
shll
cmpsl
xor
mov
xchg
lretw
dec
mov
js
js
imul
test
mov
push
mov
or
test
inc
aad
test
arpl
mov
cwtl
lea
ljmp
stc
xchg
aaa
je
sub
mov
lea
pop
add
rcrl
mov
xchg
jl
push
ja
push
adc
mov
mov
push
adc
clc
mov
xchg
jnp
es
mov
push
push
daa
into
xchg
mov
in
scas
mov
stos
or
hlt
shll
inc
mov
xchg
lock
ljmp
shr
mov
movsb
flds
mov
mov
jno
roll
addl
int3
loop
or
jae
pushf
dec
lods
sahf
push
movl
push
sbb
jle
out
inc
sti
pusha
nop
xor
subb
mov
mov
ds
fbld
pop
fsts
and
popa
mov
std
xchg
fneni(8087
add
mov
sub
test
loopne
or
mov
ja
loop
loopne
adc
imul
fiaddl
push
push
hlt
sbb
adc
cmpsl
sbb
clc
xchg
aad
push
mov
jmp
and
or
testl
adc
inc
adc
pop
int
cmp
xchg
shll
test
leave
cli
subl
add
notl
cltd
lock
ss
imul
xchg
push
hlt
dec
jmp
mov
inc
aad
push
outsl
xchg
dec
call
sub
cmc
adc
sbb
aaa
leave
shl
int
out
pop
mov
pusha
pop
or
or
cli
push
aad
aad
dec
sub
inc
stc
movsl
movsl
cld
pop
push
and
mov
jecxz
dec
pop
and
andl
loope
repnz
scas
js
xor
mov
xchg
das
sub
iret
fucom
mov
call
mov
push
enter
mov
ljmp
push
adc
adc
test
jbe
push
mov
out
sbbl
mov
sbb
and
imull
adc
or
pop
out
lds
pop
mov
mov
or
jle
mov
xor
call
aas
inc
fisubrl
dec
cmc
jl
cli
rcl
testb
pop
out
gs
inc
pop
sub
mov
add
pop
shll
repz
xchg
test
ret
cmp
or
rcll
test
mov
or
mov
in
pop
fstl
jmp
ljmp
sbb
je
lahf
cmp
stos
lret
repnz
lret
aad
inc
lods
xchg
sbb
es
and
int3
push
nop
data16
xchg
call
lock
push
nop
sbb
mov
pop
fists
mov
lock
push
sbb
nop
mov
jecxz
push
cmp
shll
shll
jmp
inc
int
mov
loopne
or
insl
lret
mov
inc
jnp
cvtpi2ps
ja
pushf
add
jp
imull
orb
add
aad
add
jl
lds
mov
cmp
jl,pn
int
jne
insb
pop
ret
mov
lds
push
test
imul
add
sub
das
pushf
or
pop
inc
int
push
add
dec
into
rcrb
mov
clc
cltd
dec
daa
leave
ljmp
int3
jp
xor
inc
pop
lret
pop
lock
jns
cmp
imul
mov
inc
and
testl
sub
mov
daa
inc
ds
pusha
add
inc
mov
push
push
push
mov
cmpsb
lahf
push
scas
movsl
or
stos
xchg
jg
jns
push
add
lock
fnstsw
push
pop
xor
jle
adc
repz
push
adc
xchg
or
xor
and
mov
cld
sbb
aaa
pop
stos
mov
out
repz
jp
jnp
ds
pop
pop
inc
dec
test
notl
fisubs
push
dec
ds
nop
xchg
insl
mov
bound
fisubrl
lret
leave
xchg
mov
xchg
mov
add
adc
jmp
lods
inc
push
jbe
fldcw
cmp
mov
aaa
jbe
adc
fcomps
inc
dec
mov
and
sub
inc
sti
lods
pop
mov
inc
les
add
stos
movsb
mov
shrl
inc
cli
jnp
or
stos
lods
aam
push
jge
and
dec
push
out
or
inc
cmpsb
stos
loop
out
push
popf
mov
cmp
int3
sub
adc
dec
cmp
jae
push
push
sahf
sbb
dec
xlat
rorl
lods
cmp
popf
dec
mov
mov
pop
aam
adc
sbb
lods
sbb
dec
dec
mov
push
pop
rorl
and
in
cmp
xchg
inc
lret
or
imul
out
pop
std
mov
push
out
jg
xchg
add
mov
push
ds
mov
outsl
xor
mov
stc
ss
hlt
pusha
in
mov
lret
test
jo
fimull
out
adc
std
sahf
enter
aaa
mov
mov
mov
sub
dec
rolb
lods
fwait
jo
cli
push
int
ret
jle
sbb
pop
cmp
pop
dec
popf
mov
and
outsl
cli
fwait
mov
jge
cmc
ja
and
popa
mov
xor
enter
lret
popf
pop
inc
iret
adc
data16
or
popa
je
inc
lods
cld
pop
add
cmc
mov
jl
and
xorl
sub
shl
cmp
jecxz
psrld
xchg
xor
jg
push
dec
or
dec
movsl
mov
hlt
jno
push
mov
adc
dec
out
sbb
jl
push
scas
xchg
dec
int
mov
cmp
insl
int3
div
adc
mov
js
cmpsl
jbe
test
mov
inc
fdivl
jge
daa
xchg
das
outsb
pop
addr16
xlat
les
lea
sbb
cmp
lret
push
push
shrb
stc
pop
jecxz
aaa
das
pop
arpl
pop
sbb
and
enter
xlat
cmpsb
and
mov
sub
jno
cmp
jle
daa
push
pusha
and
sub
xorl
add
lcall
clc
addl
hlt
imulb
fisttps
ja
push
sbbb
sbb
movsb
cld
pop
push
or
mov
sar
stos
das
arpl
out
fcmovnbe
ss
mov
xchg
sbb
fildll
cmp
clc
leave
lds
push
xchg
jg
out
mov
sub
stos
ljmp
cli
mov
in
adc
mov
mov
cltd
lret
adc
jecxz
movsb
arpl
dec
ds
ljmp
cmp
inc
push
sub
xor
pop
test
mov
aaa
push
mov
in
push
sbb
push
push
cmpsb
out
hlt
mov
add
pop
scas
incb
xor
mov
mov
fs
sub
add
lock
stos
test
push
inc
imul
enter
mov
xchg
lcall
stos
fldl
test
pop
jae
sbb
xchg
pop
fistl
pop
jo
fbld
and
jmp
stos
sarb
gs
pop
mov
xor
jmp
mov
lahf
js
pop
int3
sub
fstps
adc
dec
notb
out
jmp
jg
mov
sbb
pop
pop
xchg
mov
cmp
or
enter
mov
scas
dec
lods
pop
mov
pop
fs
pop
loope
xorb
in
inc
in
xchg
jnp
cmp
jns
mov
sbb
sti
fsub
pushf
iret
in
sbb
int
inc
or
xchg
mov
shrb
stos
sub
out
jnp
bnd
sbb
sbb
push
adc
or
add
nop
add
adc
cmp
out
cmpsl
shl
mov
jp
sub
das
sbb
cmpsl
push
mov
popf
stc
test
lock
cwtl
outsb
mov
fisubl
jmp
cwtl
push
cmp
and
stos
js
in
xchg
outsl
call
inc
fidivrs
jne
sarl
repz
paddsw
pop
mov
mov
sbb
mov
cltd
push
xchg
cmp
cmp
jb
das
shrl
pushf
int3
dec
cmpsl
leave
inc
sbb
mov
mov
inc
dec
pushf
sub
cs
nop
pushf
inc
sahf
scas
and
fsubrp
ret
mov
add
stos
shl
push
mov
inc
mov
fisubrs
inc
ret
add
inc
push
sbb
mov
addb
cmp
mov
test
mov
mov
xor
or
and
in
sahf
outsl
push
arpl
hlt
setg
popf
pop
lret
gs
mov
cmp
bound
push
mov
sub
aas
lret
or
adc
in
test
jns
sbb
jg,pn
lcall
cmp
jle
mov
sti
fmuls
push
test
pop
arpl
mov
inc
or
aad
loopne
rorl
mov
adc
inc
sti
lcall
push
add
adc
rcll
or
mov
cld
sub
mov
push
sbb
mov
ret
das
xor
ret
jne
roll
shl
stos
sub
js
jmp
fcmovnbe
js
jg
cmp
or
pop
xchg
inc
fcmovb
jno
sub
aas
adc
les
xchg
adc
loopne
call
dec
movsl
shll
mov
push
xchg
outsl
inc
sbb
inc
sbb
aas
pushf
pop
sub
popf
inc
xorb
mov
xor
mov
pushf
mov
lahf
mov
push
mov
inc
cmp
bound
jl
mov
inc
or
out
stos
xchg
jb
xchg
fnstcw
nop
in
cmp
pop
out
xchg
mov
or
shr
jge
das
cmpsl
jae
leavew
mov
fidivl
lods
std
jle
xor
add
nop
add
into
stos
or
add
mov
xchg
rorb
nop
add
stos
sbb
add
push
cmp
enter
add
mov
shl
mov
xlat
lock
scas
ljmp
ja
mov
insl
xor
scas
pop
mov
pop
ja
lods
lret
clc
inc
jge
pushf
hlt
inc
xchg
pop
xor
cltd
and
adc
out
hlt
pushf
pop
in
ds
test
pop
movsl
dec
sub
mov
cwtl
mov
test
jnp
aam
jmp
inc
shl
push
fs
out
lahf
sti
test
and
rorb
jne
aam
mov
stos
add
js
popf
je
mov
lahf
gs
addr16
movsb
mov
or
in
in
and
jecxz
mov
stos
cs
popa
adc
add
fwait
push
inc
sub
jno
mov
and
gs
test
jbe
jecxz
jb
mov
mov
repz
lods
cli
xor
and
sbbl
cmp
push
std
xor
pop
xlat
ret
inc
out
test
xorb
or
jmp
adc
popa
xchg
mov
sbb
jecxz
dec
fwait
iret
cmpb
stc
and
aas
fsubr
sbb
or
and
in
dec
and
cltd
and
das
pop
xchg
push
pop
sbb
lcall
data16
pop
mov
flds
cmpb
into
inc
lahf
or
sbb
push
lods
lcall
xchg
mov
inc
lahf
or
mov
enter
cmp
jae
call
lods
popa
pop
ja
fisubrl
push
repnz
mov
test
mov
jbe
mov
jo
inc
lods
jge
mov
sub
cltd
sub
out
repnz
ds
sub
mov
lahf
push
xchg
mov
mov
lds
fisttpl
sti
clc
testb
repz
and
and
aaa
lods
sahf
ret
sub
or
pop
popa
mov
mov
mov
mov
fildll
scas
mov
data16
add
js
out
cmp
data16
pop
dec
insb
fcoml
xchg
push
arpl
push
push
ffreep
or
fs
movsb
or
fsubs
shlb
fst
push
das
stos
sbbl
and
gs
pop
jbe
data16
rcrb
scas
lret
jge
inc
push
or
into
sub
pop
adc
adc
xchg
dec
in
imul
fistpll
std
je
test
stc
in
call
push
popl
sub
adc
mov
push
sub
icebp
jge
cmc
test
pop
push
inc
mov
and
lahf
jmp
cmpsl
and
adc
sub
add
sub
cmp
xchg
hlt
sysexit
mov
inc
mov
addr16
out
cmp
xor
sbb
mov
jp
iret
cmp
outsl
mov
and
sbb
inc
ret
scas
cmc
lahf
cmp
nop
bound
aaa
mov
sub
cli
sub
dec
ds
testl
pop
outsl
push
mov
imul
xor
xchg
push
cwtl
add
into
inc
xor
and
faddl
inc
or
xchg
push
inc
aas
inc
and
outsl
iret
jl
and
nop
adc
dec
lahf
mov
test
mov
push
repnz
or
xchg
and
xor
mov
pop
push
inc
ljmp
cs
rorl
mov
cmp
sbb
add
cmpsl
lret
or
push
outsl
andb
lods
lcall
push
ret
int
outsl
xchg
mov
loopne
xor
ja
cmp
sub
jnp
sub
jo
mov
jae
fwait
jne
stos
das
jge
mov
xor
iret
out
loopne
repz
out
add
or
push
bound
xchg
cmpb
fcmovu
call
push
icebp
mov
mov
repnz
gs
or
xchg
pop
push
and
pop
sub
xor
adc
cmp
mov
sarb
aaa
mov
push
mov
dec
mov
xor
pop
xchg
mov
mov
hlt
stc
scas
es
xor
stc
cmp
lret
jo
sub
xor
js
lods
jo
ficoms
add
pop
push
mov
and
xor
sub
bound
xchg
mov
mov
sub
cmpsb
inc
iret
and
loop
sub
imul
jo
movl
in
test
xchg
pusha
pop
stc
ss
pusha
cmp
pushf
sbb
xchg
pusha
push
push
hlt
inc
dec
push
lret
jne
xrelease
add
sahf
jmp
push
adc
sbb
int
jb
adcl
fnsave
insb
arpl
mov
mov
dec
xchg
push
xchg
std
mov
sbb
in
lock
cmp
and
inc
bts
inc
les
inc
mov
leave
aas
push
outsl
call
nop
sarb
cmpsb
xor
inc
test
pop
arpl
jae
xor
test
fdivrp
jge
cmpl
imul
push
pop
jne
out
cmp
shrl
sbb
dec
scas
inc
adc
jnp
mov
dec
aas
in
aas
sub
push
inc
mov
sbb
push
cmovp
cmp
pop
jmp
jns
cmp
bound
mov
rorl
lods
adc
andb
imull
mov
arpl
sub
or
and
mov
dec
js
in
stc
mov
rcrb
iret
jecxz
sub
and
repz
push
sbb
jno
and
stos
mov
xchg
fcompl
mov
data16
insl
std
rcrb
mov
adc
and
xchg
and
testb
xchg
sbb
sbb
aas
fistpll
dec
lret
enter
in
mov
aad
divb
clc
pop
bswap
and
subb
scas
pop
push
cmp
mov
mov
outsb
push
jnp
notb
fwait
std
sub
jo
and
jnp
jbe
and
clc
xor
adc
addl
aam
xor
adc
push
lods
int3
sbb
out
adc
pop
inc
cwtl
in
out
inc
xchg
cmpsl
es
movsb
dec
and
pusha
inc
ret
jmp
scas
aaa
sbb
ds
popa
push
std
inc
and
xor
jae
mov
into
in
outsb
lcall
push
mov
cmp
xchg
movsb
push
adc
sub
int3
iret
lds
rorl
inc
cmp
cltd
jmp
push
mov
adc
test
std
es
lods
cmp
iret
adcl
addr16
xor
or
xor
sbb
mov
inc
xlat
ljmp
jno
sub
adc
mov
sbb
pop
popa
sbb
cmp
or
cmp
jb
rcr
push
arpl
cmp
push
mov
addr16
push
imul
mov
jno
repz
dec
ret
jl
imul
inc
push
movsl
and
mov
and
push
or
jne
aaa
sub
ds
or
dec
mov
lock
out
mov
shll
and
scas
in
mov
jnp
add
lcall
pop
out
inc
mov
in
icebp
adc
or
mov
mov
sub
daa
push
fstpt
mov
mov
rcl
roll
jecxz
cmp
and
push
cmp
jbe
pop
jge
sub
mov
sub
mov
xchg
adc
loope
xor
cmpsb
out
xor
cld
fldt
mov
mov
inc
xchg
or
negb
leave
jg
jae
push
dec
mov
mov
iret
adc
ret
adc
sysenter
pop
and
xor
inc
insl
add
and
leave
jne
jge
fs
mov
cmpsl
js
push
inc
lahf
icebp
incb
xchg
cmp
rcrb
insb
pop
and
mov
rcrb
into
rsqrtps
dec
pop
mov
test
or
push
add
mov
into
add
xchg
or
stos
inc
and
mov
loope
mov
stc
xor
or
and
xor
icebp
fcmovnu
rolb
push
loope
mov
sub
inc
cmc
fldl
push
stos
in
outsb
xchg
ds
popa
icebp
mov
xor
syscall
ror
cwtl
pop
mov
stc
ficomps
fwait
mov
es
rorb
push
adc
stc
sbb
fidivl
xor
stos
xor
sub
ljmp
mov
jge
inc
mov
xor
mov
and
imul
dec
int3
jmp
xor
mov
test
cmp
shlb
shl
mov
cmp
pop
ret
inc
cmc
cltd
iret
xor
xor
leave
cmp
adc
in
jb
jb
xchg
mov
push
insl
icebp
xor
fisubl
int
xor
dec
cmpsb
add
or
sbb
sub
mov
arpl
cltd
out
shll
push
pop
pop
dec
jmp
add
cltd
sbb
notw
mov
cmp
sbb
push
and
mov
and
xor
mov
mov
adc
lds
mov
inc
cmp
imul
sub
mov
add
mov
sub
jmp
xchg
xchg
jl
fcmovnb
push
or
adc
push
lsl
dec
ret
aam
pop
push
stc
jge
push
into
ss
into
inc
cld
add
lods
hlt
ss
inc
aaa
adc
mov
mov
inc
cmp
cmp
push
lock
jne
ret
adc
or
jnp
xor
insb
lcall
aam
cmp
cmp
pusha
jne
scas
fsubrl
daa
jl
dec
ss
sub
inc
addr16
fs
js
or
adc
incb
movsb
push
rcll
outsb
and
xchg
orb
dec
je
or
xor
fldcw
data16
cmpsb
ret
mov
adc
mov
imul
iret
mov
cmpb
and
hlt
inc
fs
xchg
sub
cld
mov
test
cmp
aad
add
sti
pop
jmp
and
dec
loopne
pusha
sbb
cmp
push
mov
or
xchg
in
push
movsb
adc
movsl
xchg
and
out
push
dec
ljmp
ret
sub
cmc
dec
shrd
add
push
lea
sub
fsubs
ljmp
fstps
jns
aas
sti
mov
jno
dec
scas
idiv
jns
inc
or
sub
jb
push
adc
inc
pop
mov
jp
cltd
sub
es
ficoml
or
xor
scas
push
mov
add
fcoml
lods
jno
insl
int
sbb
mov
pop
adc
cwtl
aad
pop
cmp
dec
jmp
pop
es
jmp
push
cmp
gs
stos
or
inc
and
adc
fcmovbe
inc
mov
jg
or
in
loopne
sbb
or
cmp
icebp
lock
imul
dec
push
xchg
pusha
test
cmpsl
ds
pop
mov
and
push
jl
bts
lods
lock
dec
jl
add
mov
adc
xchg
fsts
dec
adc
aas
lcall
cld
call
pushf
pop
or
ficoms
push
jg
dec
hlt
add
fidivrl
in
not
push
mov
and
nop
lods
icebp
aad
rorb
arpl
loop
das
int
pop
ja
divb
mov
inc
mov
movntq
jmp
push
lock
movsl
xor
pop
imul
movsb
push
inc
mov
ljmp
insb
xor
sub
in
nop
and
push
mov
fildll
mov
jecxz
inc
daa
xor
fwait
xchg
pop
cltd
mov
sbb
inc
gs
lock
mov
aas
add
mov
je
outsl
jmp
cs
ljmp
sub
clc
xor
dec
inc
jp
and
popa
cmp
fstps
and
and
xor
imul
adc
add
rorl
mov
flds
push
mov
sbb
mov
inc
mov
xchg
push
jb
mov
jg
xor
in
into
inc
cs
sub
je
fsubl
arpl
push
fistl
ds
push
mov
ret
sti
test
mov
aaa
roll
sub
pop
push
push
jns
loope
cs
dec
pop
xor
incl
mov
icebp
das
and
inc
xchg
mov
arpl
or
mov
and
fsubr
imul
outsl
pop
adc
aaa
jae
lock
lods
gs
push
mov
inc
adc
out
dec
lret
and
lret
sbb
icebp
mov
ds
in
xchg
int
pop
mov
cld
int3
inc
sti
aad
push
in
cmc
mov
xchg
fcompl
jle
cmp
inc
mov
xor
mov
xchg
lahf
cmp
decl
mov
jb
jns
xorl
test
push
cld
adc
call
xchg
xchg
sbb
sub
sub
fwait
mov
mov
aas
scas
daa
pushf
sbb
xchg
pop
add
cmp
push
div
fisubrs
ret
es
clc
push
add
mov
mov
mov
jl
push
js
jne
lods
popa
pop
mov
in
or
scas
cmp
arpl
repnz
mov
cmp
pusha
cld
rcl
inc
call
idiv
fmull
fidivl
sarb
inc
and
ljmp
xor
insl
xor
inc
fidivrl
lcall
negl
xchg
xor
inc
mov
jb
test
mov
jne
lods
push
icebp
sti
test
sbb
rorb
mov
add
cmp
rcll
pop
add
push
movsl
mov
mov
arpl
xchg
lods
rcr
push
mov
int3
out
fists
cmp
pop
es
xchg
push
sub
or
rcl
inc
pop
scas
sarb
sub
mov
lds
dec
ret
mov
dec
cltd
repz
lea
dec
in
push
int
adc
bound
xor
jle
jg
sti
add
push
or
or
rorl
mov
stc
mov
mov
out
lock
test
shlb
out
mov
push
pusha
cs
sub
pop
outsl
xor
mov
data16
add
add
cmp
sbb
pushf
outsl
dec
int3
xor
xor
popf
mov
pop
mov
jecxz
and
push
xchg
lods
xor
xlat
out
test
outsb
cmp
sub
sbbb
add
repnz
lods
dec
xor
xchg
or
lods
xchg
or
mov
mov
sub
movsb
push
call
and
pushf
adc
mov
push
inc
loop
sbb
adc
inc
data16
insl
loope
mov
pop
sub
movsl
movq
cmpsb
add
das
cmp
shlb
flds
call
dec
mov
nop
and
in
imul
outsb
push
sbb
mov
dec
pop
movsl
sub
sbbb
daa
jb
nop
sub
xchg
lret
adc
xor
cwtl
mov
imul
popa
loop
iret
fs
mov
sbb
sbb
out
mov
rclb
push
movsl
and
jg
cmpsb
in
into
loop
outsb
aas
int
xor
stc
push
cmp
dec
xchg
jg
popa
adc
inc
test
jmp
pop
jo
pop
xor
daa
mov
aas
mov
sti
mov
inc
mov
jl
loope
cmp
mov
sahf
out
lret
xchg
dec
arpl
mov
insl
icebp
in
mov
lods
xchg
test
lods
cmp
jbe
or
fiadds
adc
cmp
repz
adc
test
xlat
je
jp
jle
push
in
add
push
mov
mov
push
repnz
xchg
xor
inc
sub
mov
cmp
outsl
and
jbe
xor
mov
xor
ljmp
shll
lret
push
pop
sbb
call
fildl
in
flds
lahf
repnz
movsb
in
cmp
shrl
dec
rcrl
xchg
shl
pop
fldcw
jns
mov
addr16
pop
mov
stos
jl
xor
xor
xchg
pop
mov
cmp
arpl
lods
leave
and
cmp
xor
fwait
pop
xor
test
xchg
and
push
mov
clc
jno
mov
adc
pop
and
jg
mov
loopne
ret
xor
mov
mov
adc
sub
mov
jmp
and
dec
dec
inc
scas
add
arpl
jecxz
sub
jno
dec
xchg
fdiv
stos
mov
test
inc
lret
sbb
xchg
mov
repz
scas
stc
pop
add
iret
sti
jno
enter
or
mov
pop
cmp
inc
and
sub
andb
imul
pop
mov
in
daa
out
imul
push
pop
pop
adc
loop
sub
aas
dec
push
or
jnp
mov
pushf
cld
mov
cwtl
repnz
xchg
push
fsub
shrb
mov
adc
adc
std
int3
idivb
dec
and
in
cmpsl
mov
push
test
pop
das
pop
nop
lock
mov
sub
cs
outsb
dec
add
scas
loop
mov
nop
stos
mov
or
in
adc
pop
sub
adc
cmpsb
cmp
inc
sbb
mov
les
sub
mov
int3
call
not
cmp
fstps
sub
in
popf
inc
icebp
inc
lahf
and
sub
sbb
or
rcll
in
xor
loop
push
fdivs
xor
lods
pop
movd
xchg
fcom
jbe
es
xor
sarb
cmp
jle
dec
mov
mov
sub
mov
leave
and
cmc
or
das
xor
jmp
add
scas
subb
loop
popa
lcall
jle
mov
ds
xor
fidivrs
pusha
add
dec
out
pop
mov
cmp
lahf
mov
repnz
xchg
andl
pop
iret
push
jmp
inc
cltd
sub
or
popf
fidivrs
jmp
inc
test
mov
into
fmull
push
adc
int
pop
inc
push
clc
mov
loop
dec
aad
andl
push
stos
push
ffreep
bound
test
out
or
sbbl
lock
sbb
sarb
adc
mov
add
lret
push
push
out
xor
icebp
outsl
push
into
in
cmp
scas
fstpt
dec
enter
rclb
jp
mov
jmp
repnz
push
mov
ret
loopne
jecxz
fmuls
stc
xorb
lret
xchg
dec
jecxz
insl
lahf
loope
jno
and
das
imul
in
rcll
rclb
fcmove
stc
fisubrs
loopne
lock
push
sub
inc
jns
push
push
mov
push
outsl
xor
lds
enter
js
sub
jbe
outsl
sbb
aas
mov
loopne
adc
jmp
add
mov
inc
outsb
lods
jge
push
aam
add
pop
mov
inc
cli
or
outsl
lock
imul
cli
fdivl
pop
xor
dec
iret
cmpsl
inc
inc
leave
and
cmpb
repnz
mov
mov
outsl
sbb
dec
jbe
mov
dec
mov
lods
pushf
cmp
mov
icebp
stos
arpl
push
sti
jg
mov
scas
rol
scas
inc
insb
jp
aad
push
push
fisttps
jno
scas
add
cmp
xchg
aas
aaa
sbb
and
mov
sbb
sub
inc
fsubrs
mov
cli
rorb
lds
xlat
adc
cltd
inc
jge
inc
sub
dec
cmp
icebp
cmp
dec
and
mov
test
fstl
stos
stc
in
and
sti
jno
mov
adc
cmc
pushf
aas
jle
jno
xchg
outsb
pop
xor
sub
stos
pop
lahf
sub
add
cwtl
xlat
mov
mov
mov
fbld
dec
xor
cs
bnd
in
pop
ficoms
nop
xchg
push
sarl
int
mov
pop
fcompl
ret
push
dec
push
and
nop
out
mov
repz
cmp
filds
les
or
jmp
pop
std
sti
dec
add
lock
adc
test
mov
adc
or
push
mov
sub
fsubs
mov
xchg
ss
loope
cltd
in
rep
fisubrl
loopne
inc
push
adc
rcrl
es
dec
mov
repnz
add
out
adc
enter
loope
or
sub
fdivrs
pop
mov
inc
in
jge
repnz
jbe
add
push
cmp
subl
lds
add
xchg
cmp
pop
cltd
hlt
pop
sahf
bnd
cmp
xchg
scas
aaa
cwtl
xor
add
loopne
inc
mov
push
hlt
in
or
outsl
ss
sub
dec
addr16
or
push
jp
mov
sub
push
mov
adc
mov
cmpps
aas
push
mov
jns
and
mov
push
sub
popa
icebp
xchg
push
cmp
test
aas
add
loope
inc
or
les
or
cmp
fimull
jle
or
pop
inc
mul
mov
push
lea
mov
insb
xorl
std
mov
decb
xchg
pop
bound
adc
fsubl
cmpsb
cwtl
ja
aas
pop
popf
dec
stos
push
add
imul
pop
ficompl
loopne
lods
mov
and
out
inc
lods
or
sbb
adc
or
popf
rorl
xorb
xor
mov
rorl
gs
cmp
aam
or
je
dec
xorb
pop
cwtl
cmp
xchg
push
pop
jg
stos
mov
jns
jge
test
movsb
rcl
cwtl
jo
jae
and
push
int
mov
push
movsb
xor
ds
xchg
mov
aam
xchg
sbb
call
pop
mov
loope
mov
mov
fnstenv
push
xor
popa
popf
repz
and
arpl
push
cmpb
inc
cmp
iret
ret
in
es
sbbb
jle
call
cmp
and
adc
repnz
movsl
sar
pop
movsl
shlb
inc
dec
aad
jp
ja
int
ja
ret
jne
ljmp
lods
jecxz
push
jne
cmc
xchg
cwtl
subb
mov
outsb
inc
out
fstpl
lds
sarl
lret
push
lahf
fildl
in
push
je
mov
enter
sub
push
inc
imul
and
mov
scas
push
mov
dec
repz
dec
push
lret
subl
mov
scas
mov
xchg
pop
xor
adcl
cmp
sub
popa
stos
pop
push
outsl
pushf
cmp
sbb
fmuls
xchg
sbb
sbb
or
lahf
xor
push
lods
je
gs
push
jbe
orb
ljmp
dec
push
enter
cmpb
mov
nop
lea
cli
loope
or
xor
in
or
andb
mov
fnsave
mov
icebp
subb
mov
pop
push
add
int3
push
mov
ja
clc
sub
sbb
lods
into
sbb
cli
or
cwtl
shr
cmc
sbb
leave
pop
lcall
pop
es
pop
out
das
mov
push
sub
xor
pop
pop
scas
mov
pop
outsl
jmp
push
xchg
lds
fidivl
pop
pop
sub
int3
test
or
std
jmp
jge
ret
pop
idivb
jecxz
jbe
mov
cmp
cmp
gs
sub
movsb
jmp
dec
test
mov
cmp
adc
test
xor
or
aad
es
cmpsl
push
and
rclb
sub
rolb
mov
jmp
mov
inc
inc
jp
test
inc
pop
cmpsb
jmp
in
and
or
xchg
pushf
std
push
shrl
add
faddp
mov
push
jae
lods
out
jmp
ds
cld
popa
lcall
push
aas
jle
cmpsb
pop
das
or
push
push
push
outsl
fwait
jae
ljmp
std
je
ret
lret
xor
and
ds
mov
jae
or
mov
jecxz
outsl
or
mov
lcall
test
or
inc
pop
clc
add
pushf
adc
arpl
dec
stc
pop
enter
test
data16
push
push
and
mov
movsb
mov
data16
pop
mov
popf
sbb
test
xchg
push
adc
test
inc
sub
jecxz
push
dec
sbb
dec
nop
pop
addr16
inc
mov
sti
xchg
pop
and
outsb
aam
lea
pop
add
and
ror
fs
or
adc
cmp
mov
pop
xchg
and
loop
sbb
jns
xor
lret
mov
xor
xchg
adcl
cmp
sub
dec
mov
jo
cmp
pusha
pop
xor
xor
cmp
mov
ss
sbb
aaa
clc
push
rcr
cmc
or
fstl
push
les
shl
sti
jge
lcall
push
andl
sbb
cmp
adc
pop
cmc
enter
dec
xor
jmp
mov
cltd
sbb
push
pop
inc
pusha
into
sub
xor
sub
pop
in
jl
lret
xchg
adc
mov
dec
sbb
call
scas
push
xchg
std
cld
rcll
dec
jae
insb
dec
inc
into
push
imul
ret
xchg
icebp
test
fisttps
jns
movsl
ds
out
lods
sub
call
aam
xlat
or
inc
loope
test
mov
xlat
stos
out
fistl
mov
icebp
dec
jbe
mov
xor
or
outsl
scas
xchg
ljmp
paddb
mov
dec
mov
aad
aas
adc
icebp
jmp
in
iret
and
lea
push
das
adc
iret
mov
mov
sub
dec
cmpsb
or
insb
call
or
repz
jge
push
xlat
aaa
cli
dec
xor
mov
pop
icebp
sbb
das
in
sub
out
pop
xchg
ja
ret
push
out
push
gs
lods
test
imul
mov
mov
sbb
or
sbb
in
cmp
fisubs
ss
adc
icebp
sarl
push
jp
mov
sbb
push
sbb
dec
cmc
jle
or
inc
arpl
aad
in
lret
into
iret
out
pop
jnp
imul
scas
leave
lds
stos
dec
leave
pop
addr16
mov
jle
test
cld
or
testl
subl
push
aam
sbb
test
jg
mov
paddd
lock
mov
jge
sti
loop
xchg
shll
and
adc
cmp
aas
testl
movsl
and
fbld
push
adc
or
cmpsl
clc
rcrb
stc
out
hlt
sub
das
sbb
push
test
fs
xchg
push
add
ds
nop
int
mov
or
lods
test
or
sub
add
jecxz
xchg
pop
jle
out
jae
jge
fucomip
daa
inc
nop
jnp
mov
mov
push
fyl2xp1
mov
ja
sbb
shll
adc
ficomps
adc
sbb
xor
fcmovbe
imull
xchg
add
sti
inc
insb
mov
insb
shll
cmp
bound
cmp
fbld
xor
pop
arpl
push
scas
cmp
or
mov
hlt
test
sbb
fsubs
cmpl
fisttps
and
in
shlb
nop
cltd
mov
mov
inc
sbb
or
sti
pop
push
insb
xlat
stc
add
int
cmp
or
lock
mov
into
dec
sub
adc
adc
or
mov
fstpl
pop
aas
fs
jno
push
jp
lock
hlt
jbe
push
inc
jo
push
jmp
jne
jno
ljmp
mov
rcrb
out
xor
clc
adc
mov
pop
bound
insb
sarb
cmpsl
cmpsb
pop
jb
sbb
push
orb
mov
aaa
jne
popa
sub
int
in
fs
stos
ret
push
into
push
fdivrl
or
stos
mov
dec
addr16
or
and
insb
stos
cmp
or
jnp
frndint
pop
pop
dec
notl
aad
ljmp
je
pusha
int
adc
mov
aaa
lods
fists
rorl
push
ss
cltd
inc
xor
sahf
or
push
push
fstpt
sahf
push
jge
xor
aas
outsb
sar
pop
mov
mov
xchg
pop
icebp
mov
incb
andb
daa
jle
dec
leave
pop
in
cmp
adc
jo
fistl
push
jbe
push
cmpsl
add
std
jo
mov
and
iret
pop
ss
into
push
pop
daa
gs
pop
cltd
adc
adc
lock
and
or
out
movb
fbstp
push
fs
out
dec
subl
or
dec
and
push
cmp
or
aas
mov
int3
jp
jne
jp
push
call
pop
and
mov
mov
sub
clc
mov
cmp
in
sub
out
add
orb
adc
mov
mov
out
movsl
aaa
enter
inc
loop
fldt
adc
ret
fnstenv
cmp
aam
call
xchg
sub
sub
out
js
cmpsl
xor
xor
shl
in
inc
pop
scas
dec
in
xchg
imul
in
xchg
jae
insb
xchg
cwtl
xlat
add
dec
jmp
xorl
lods
cmp
test
icebp
cmpb
ret
outsb
dec
xor
xlat
mov
test
mov
inc
pop
jecxz
inc
mov
jnp
out
adc
mov
cmpb
inc
adc
pop
mov
xor
and
adc
mov
pushf
inc
mov
pusha
out
clc
out
daa
push
lea
cld
sub
jo
ret
arpl
out
cmp
or
inc
jl
and
bound
mov
or
sub
mov
mov
mov
mov
xor
jbe
into
jb
mov
inc
aad
arpl
mov
cmp
xchg
dec
pop
call
sbb
fcoml
cmp
out
or
push
test
leave
jns
or
mov
jns
std
jne
jmp
aad
mov
sbb
lds
lods
dec
dec
jne
jecxz
mov
add
aas
pusha
in
stc
inc
fistpl
and
in
test
in
sbb
sub
cmp
stc
bound
daa
xchg
pop
adc
xor
in
push
and
lret
ss
cmp
xor
shrb
pusha
out
ljmp
cmp
gs
fcmovbe
pop
xor
pop
mov
es
pop
or
insb
sbb
xchg
insl
int3
dec
push
shll
mov
push
sub
leave
xchg
xor
pop
and
add
outsb
and
in
mov
cld
popa
fs
add
stc
pop
out
jne
mov
mov
clc
stos
lock
pusha
xorb
in
ljmp
push
pop
mov
int
sub
mov
roll
aas
and
sub
lret
mov
xor
push
sbb
aam
mov
pop
ret
stos
xchg
fimuls
inc
push
push
mov
fst
pop
pop
shlb
add
mov
jp
mov
adc
call
out
in
fidivrs
inc
dec
lret
lods
ljmp
dec
jp
jb
stos
test
fsubl
xchg
add
xchg
xor
mov
lds
sub
push
lods
push
cmp
push
mov
sub
out
jo
iret
inc
rcl
jge
add
jbe
jbe,pt
jmp
stc
js
xchg
dec
orl
cltd
xor
push
popaw
test
sbb
mov
int3
aam
push
lret
push
insl
cmp
fdivl
cmpsb
mov
lahf
jl
pop
loopne
pop
dec
sbb
push
ret
pop
dec
mov
adc
scas
add
xor
leave
les
mov
xchg
shrb
adcl
push
xchg
addr16
pop
or
das
dec
adc
pop
mov
stos
mov
pusha
sub
fimuls
aaa
rcrl
pop
stos
dec
mov
in
ds
lret
inc
call
in
mov
jne
push
sub
test
cltd
movsb
ret
ljmp
mov
loopne
fldl
xor
pushf
shlb
daa
std
gs
push
xor
repz
or
clc
xor
cmp
js
rorl
test
fucompp
adc
dec
jae
cmpsb
shrb
in
sahf
sub
push
sub
or
cli
sbb
ljmp
adc
jnp
sahf
setp
mov
subl
testb
dec
inc
lds
xor
cmc
jle
sbb
or
sbb
xor
movsb
popa
push
sbb
xchg
jmp
out
lods
enter
shr
mov
pop
jns
dec
adc
jns
cmc
pop
dec
dec
daa
lds
dec
int
dec
xor
test
xchg
mov
mov
stc
sbb
aad
testb
ret
mov
movsb
imul
xor
xchg
add
pop
xchg
leave
js
idivb
push
sbb
inc
sub
ret
test
sbb
and
loop
xchg
ja
ds
mov
mov
das
fxch
test
xchg
jnp
adc
shll
in
ja
cmp
fsubrs
pop
push
add
imul
in
sub
jecxz
fwait
adc
mov
mov
push
mov
out
mov
repnz
shlb
dec
pop
pop
aam
cli
int3
mov
cs
les
inc
mov
addr16
jnp
cmpsl
inc
inc
lds
std
imul
ds
adc
les
inc
nop
xor
fwait
xchg
nop
jge
enter
adc
es
iret
mov
ret
repnz
leave
int
fmull
scas
mov
xchg
mov
push
psubb
shrl
mov
pop
dec
fadd
arpl
aad
jno
je
cmp
loopne
jae
cmpsb
rcll
mov
inc
rorb
xchg
inc
pop
lods
aaa
imul
push
rcll
out
aas
lret
and
daa
gs
push
jns
loop
outsl
mov
loop
es
clc
sahf
inc
add
stos
sti
mov
outsb
ss
es
lahf
loope
sbbl
sbb
inc
add
sub
je
dec
clc
mov
xor
pop
pop
pop
push
iret
pop
fwait
push
les
add
cwtl
mov
cmp
dec
shl
imul
sbb
or
pop
jmp
int3
dec
lret
stos
shll
mov
xchg
cmp
xabort
adc
add
int
and
sbb
aam
lcall
push
ja
dec
pop
mov
js
mov
clc
pop
xor
imul
orb
push
addr16
in
jne
rcrl
dec
rcl
in
sahf
test
mov
lret
cld
mov
jle
idivb
sub
jmp
xchg
arpl
inc
loope
mov
cld
xor
add
aaa
sub
or
pop
jb
and
test
adc
inc
in
add
push
dec
test
orb
add
sub
enter
clc
insb
adc
dec
ja
popa
mov
mov
cmp
cmp
aas
aad
test
xchg
addr16
flds
sub
xchg
lock
mov
shlb
jg
leave
mov
scas
stos
jmp
fmuls
or
and
sub
out
vmwrite
call
mov
ja
scas
mov
test
popf
and
sbb
out
inc
push
sbb
ficomps
out
mov
stos
pop
stos
in
or
fsubl
mov
or
add
aaa
or
mov
je
cmp
vphsubwd
out
fistl
sbb
inc
adc
mov
inc
fldt
psllq
dec
repnz
imull
add
push
and
jle
loop
cltd
cli
cmp
mov
adc
mov
or
stos
mov
jnp
inc
xchg
gs
xchg
cltd
dec
insb
or
and
jns
movsl
xor
lahf
and
insl
in
ss
les
mov
enter
mov
ss
dec
push
dec
mov
mov
lock
hlt
cli
inc
inc
jecxz
lea
add
jge
in
and
mov
iret
push
lods
data16
dec
cs
in
sub
cmpsb
mov
hlt
mov
mov
dec
xchg
push
fcmovu
xchg
test
incl
into
scas
ret
cmp
jo
out
in
icebp
sub
lcall
daa
ret
test
aaa
pop
lahf
push
sub
sub
insb
lret
mov
insb
imul
and
adc
aaa
fildll
cltd
in
shl
sbb
test
mov
xor
pop
outsl
and
sub
fs
and
faddl
int3
jecxz
subb
pop
jle
inc
xchg
add
test
mulps
mov
fs
std
push
xchg
negl
dec
es
fiaddl
ret
mov
pop
inc
cmp
sti
mov
int3
cmp
xor
repnz
mov
xchg
xchg
adc
in
xchg
out
aam
test
sub
movsl
leave
mov
push
inc
push
repnz
cmp
arpl
stos
ds
pop
inc
cmpb
adc
jno
testl
inc
sub
and
fnstcw
sti
loope
nop
mov
or
xchg
fcoml
dec
pop
dec
cmp
mov
in
inc
mov
lahf
leave
push
jae
adc
cmp
inc
popf
xchg
inc
pusha
lock
mov
mov
ret
pop
jl
cs
ss
jg
xchg
adc
push
mov
jno
and
push
addb
adcl
pop
mov
jne
cmp
test
xlat
push
pop
popa
scas
jae
xchg
rcrl
pop
mov
repz
test
sbb
mov
js
or
test
dec
xor
pop
and
sub
mov
sbb
mov
fcmovne
inc
bound
pop
jecxz
aaa
adc
test
pop
push
xchg
repz
fs
mov
jne
ficoms
pop
divl
repz
aad
cmpsl
dec
sbb
es
repz
push
outsl
push
out
shrl
nop
cmp
in
mov
xchg
fs
aam
ljmp
mov
adc
fdiv
mov
mov
pop
and
sub
aaa
xorl
std
push
inc
in
xor
inc
xlat
xchg
pop
imul
push
xchg
xor
stos
mov
sub
std
push
xchg
jnp
rolb
pop
cli
cmp
mov
hlt
cli
rcll
fiaddl
int
pop
or
dec
inc
daa
mov
add
add
out
ja
push
cmpsl
or
pop
and
out
test
pop
outsb
imulb
adc
out
rcll
mov
leave
push
fidivrs
or
iret
movsb
orps
and
stc
sbb
cmpsl
push
pop
bound
fcoms
xor
enter
or
mov
cld
test
aam
into
loopne
scas
shlb
inc
test
pop
clc
sub
xchg
push
dec
clc
cmpsl
dec
clc
insl
popf
jbe
repz
xchg
cmp
push
ds
sbb
sbb
pop
xor
push
cld
data16
cmp
add
call
lock
pop
or
push
scas
xchg
mov
pop
mov
dec
adc
aad
inc
es
std
imul
out
cs
xchg
xlat
inc
negb
push
lret
pop
lcall
movsl
idivl
xor
adc
call
sbb
xor
rorl
fsub
popf
push
test
jg
fdivl
cmp
rcl
jmp
push
and
decb
add
mov
scas
push
push
pushf
dec
mulb
out
sar
jne
sti
test
addr16
mov
repnz
mov
and
aaa
xor
leave
sbb
pop
lods
imul
lods
inc
outsl
lret
out
jp
cmp
jmp
hlt
dec
mov
jle
mov
lods
lcall
jae
mov
mov
mov
cmp
test
inc
bound
adc
fs
xor
popa
sbb
push
inc
push
clc
ficomps
out
js
data16
inc
sbb
shll
sti
mov
inc
mov
sbb
adc
mov
and
mov
jle
sub
gs
in
lret
sub
and
int3
pop
pop
jo
lahf
into
movsl
jnp
psubsw
test
popa
push
cmp
sub
inc
sbbb
shrb
push
fsubl
push
mov
mov
push
mov
aaa
aam
push
mov
outsl
scas
and
cmp
add
js
jb
mov
adc
sbb
xor
or
bound
sqrtps
jb
mov
in
cli
xchg
stos
xchg
sahf
push
je
pop
xchg
stc
and
sbb
pushf
pop
hlt
xor
out
test
pop
repz
cmp
rcll
fidivrs
jl
js
inc
mov
sub
lcall
add
lcall
cmp
jmp
pop
cmc
inc
cwtl
fimuls
out
and
lods
sbb
ficoml
out
mov
outsb
sub
ffree
in
xchg
jle
test
lock
jl
mov
les
fnstsw
add
cld
fnstsw
loopne
and
pop
ljmp
push
bound
cmpsb
pop
jno
out
push
js
or
mov
push
xor
sarl
xor
sbb
push
xor
test
push
daa
repnz
mov
xchg
jne
lods
iret
mov
imul
inc
les
push
mov
dec
adc
dec
shrl
addr16
lods
repnz
nopl
inc
lret
call
jnp
mov
sbb
mov
mov
aad
hlt
shll
cs
jle
div
xor
int3
sub
cmp
ja
xchg
jnp
inc
inc
dec
in
das
nop
bound
rcrb
clc
jbe
mov
imul
xor
mov
neg
mov
lea
or
xchg
mov
mov
push
loope
js
addr16
dec
mov
popa
addr16
mov
sub
add
scas
mov
outsl
push
mov
mov
inc
mov
push
call
jns
dec
jle
rclw
fwait
adc
in
mov
sbb
xchg
xor
lahf
imul
mov
fidivs
push
or
fnstsw
psadbw
aas
cwtl
xor
push
jae
cmp
dec
pop
in
jo
stos
sbb
outsb
clc
jno
fcomps
xor
jecxz
jmp
inc
repnz
cmp
sbbb
jno
sub
mov
cmc
aam
adc
mulb
inc
dec
es
fsin
imul
or
xor
push
xor
jge
out
pop
push
mov
push
dec
repnz
sahf
sahf
loop
arpl
ja
inc
pop
scas
jnp
repz
sub
and
lds
sub
adc
mov
lock
xchg
in
das
mov
mov
lds
mov
ret
ja
and
stos
adc
aaa
sti
daa
test
in
fwait
leave
mov
les
xchg
xchg
rorb
rol
inc
and
cmpsb
test
ljmp
cli
mov
pusha
mov
fistps
into
stos
scas
out
aad
inc
lret
cmp
push
sbbb
dec
inc
ljmp
push
adc
test
sbb
jle
mov
aam
sub
repz
dec
dec
mov
jo
mov
sbb
xchg
movsb
mov
dec
cmp
ja
hlt
enter
xor
xchg
sub
adc
push
mulb
mov
scas
clc
xchg
packssdw
mov
jecxz
loope
xchg
filds
and
call
push
xchg
add
xor
adc
cmpsb
cmp
sbb
add
test
and
lods
fnsave
cltd
inc
lret
mov
fwait
testb
xor
add
adc
add
mov
mov
leave
std
aaa
out
and
andb
mov
xor
xor
and
fwait
divl
mov
push
ret
sti
add
mov
lret
test
xorl
call
push
mov
mov
cmc
jae
lock
lods
cmc
arpl
xchg
or
jmp
cwtl
mov
mov
rolb
sbb
pop
daa
gs
cmp
xchg
faddl
test
sbb
mulps
mov
es
mov
lea
and
cmp
out
ss
rcl
imul
push
in
mov
dec
clc
in
xchg
imul
xor
xchg
push
imul
fbstp
push
jecxz
daa
cmp
and
sub
xchg
addr16
dec
pop
divb
cmpsb
rcrb
sbb
cmp
jo
ds
cmp
mov
shl
mov
into
jns
mov
jmp
cmp
popa
gs
fstpl
jmp
sbb
loopne
ret
jmp
cmp
sbb
cmp
mov
push
sbb
lcall
rclb
insl
ret
lahf
lret
out
xchg
and
add
mov
sbb
leave
fwait
and
cmp
push
xor
outsb
xchg
xor
das
sahf
pusha
inc
std
mov
pop
daa
sbbb
rcr
dec
push
fiaddl
mov
pop
stos
std
nop
pop
shr
test
push
into
lods
js
fsubs
sub
mov
sbb
popa
xor
fcmovnu
push
xchg
les
pop
stos
jno
mov
icebp
fisttpl
lahf
jno
adc
or
shlb
icebp
in
ss
out
shl
dec
inc
pusha
lahf
xchg
xor
mov
push
cmp
lds
mov
adc
mov
sbb
pop
inc
or
xchg
sub
orl
jo
int
inc
jecxz
ret
add
inc
push
mov
adc
push
cmpsb
sub
jo
mov
lret
mov
mov
leave
cmp
or
add
jb
push
leave
shlb
insb
dec
inc
flds
cmpsl
rorb
pop
push
cmpsb
mov
ds
xchg
or
int
cmp
std
mov
sbb
pop
aaa
lea
loop
and
fs
out
jb
stc
jmp
outsl
mov
jp
leave
jae
cmp
pop
lods
lret
es
ss
loopne
shll
and
sbb
pop
lcall
mov
xchg
jmp
sbb
inc
cmpsb
mov
loop
or
test
out
adc
push
into
add
insb
sahf
cwtl
adc
mov
jbe
loop
pop
inc
les
hlt
dec
mov
and
mov
xchg
xorb
cmpsb
fsubrs
ret
mov
mov
sub
adc
add
test
hlt
add
insb
int
pop
mov
inc
xchg
cwtl
add
push
xchg
mov
lods
imul
sub
mov
sub
mov
addr16
loope
stos
clc
push
addr16
jmp
mov
push
fwait
insl
mov
or
xlat
mov
shrb
xor
sti
orl
outsb
push
add
pop
loope
popf
and
xchg
xlat
aad
mov
ss
mov
push
fwait
cli
mov
mov
adc
lea
negb
sub
jno
adc
out
mov
leave
enter
sbb
lahf
insb
cwtl
dec
fwait
sbb
or
vshufps
icebp
jne
je
xchg
gs
popf
pop
mov
dec
mov
hlt
mov
jge
jecxz
movl
inc
testl
push
or
mov
xchg
xor
repnz
call
cltd
data16
cmp
imul
ret
mov
and
js
data16
add
mov
jl
mov
sti
add
lods
mov
rorl
and
popa
mov
adc
push
xor
dec
adc
jnp
shll
and
pop
mov
mov
ret
addl
adc
or
jo
mov
hlt
cmp
add
fwait
sahf
sub
mov
cltd
xor
cmp
mov
test
lods
cld
mov
mov
les
int3
and
pop
push
notl
dec
xchg
add
xchg
inc
inc
sbb
fidivs
adc
shrb
mov
ljmp
pop
loope
adc
jno
mov
jge
stos
and
enter
sub
xchg
jp
cwtl
mov
xchg
insl
inc
pop
jle
gs
mov
mov
daa
sbb
stc
cmp
test
jae
cmp
pushf
fnstenv
xchg
mov
test
jne
cmp
aaa
mov
mov
jmp
inc
adc
xor
or
fs
sbb
mov
scas
cmp
cld
aas
addb
in
enter
stc
xchg
lahf
mov
aam
add
jbe
cmp
jp
jg
loop
push
or
jmp
shll
and
fwait
test
jmp
xchg
mov
mov
mov
xchg
or
xchg
jno
sub
cmpsl
div
push
dec
jmp
inc
mov
jae
je
mov
rsqrtps
add
xor
mov
jno
outsl
add
fdivl
out
xor
mov
xchg
divl
jge
adc
pop
les
popf
rolb
xchg
or
rclb
adc
mov
pop
mov
ljmp
pop
test
xor
stc
enter
mov
stc
movsl
cmp
cmp
in
into
mov
dec
jne
cmp
sti
shr
mov
pop
push
xlat
cmpsb
pop
inc
sub
jne
rorl
xchg
xor
jmp
hlt
movsb
adc
aaa
jp
lock
stc
popf
mov
sti
scas
add
or
sub
mov
sbb
pushf
pop
pop
push
cmp
and
cmpsl
dec
ficoms
xchg
nop
ret
subl
cmpsl
fidivs
mov
pop
fldenv
insb
cmp
cmp
pop
mov
adc
push
daa
icebp
jns
push
add
test
insb
lret
adc
fucomi
mov
out
testl
fdivrs
and
mov
mov
dec
or
xor
mov
cmp
jns
in
mov
and
pushf
sbbb
push
or
icebp
cltd
test
mov
ret
push
xchg
or
test
sti
sar
mov
and
addr16
cmp
ljmp
inc
aad
mul
adc
lret
xchg
sbb
xor
mov
pusha
push
pop
orl
pop
inc
mov
addb
dec
xor
imul
mov
clc
cmp
repnz
bound
mov
out
cs
inc
leave
adc
loope
call
ja
lods
or
lea
mov
mov
mov
push
repz
mov
mov
and
xchg
mov
out
xchg
mov
enter
pop
outsb
push
mov
and
imul
adcl
je
xor
mov
cld
aas
xchg
movsl
call
add
out
mov
aas
stc
outsl
jp
jbe
enter
sbb
lcall
cmp
test
in
cld
xor
addl
lods
jecxz
hlt
inc
out
mov
shrl
lcall
mov
push
int3
addr16
jne
mov
xor
call
adc
clc
lds
dec
mov
jb
jnp
push
or
sub
ja
jecxz
xlat
xor
stos
js
jns
mov
or
mov
out
fmul
into
and
lret
les
xchg
xor
or
add
scas
fldl
sbb
pusha
sbb
sbb
bound
jno
xchg
lods
adc
mov
insl
sub
fcomps
xor
ret
rol
in
aad
sbb
int3
dec
filds
jg
dec
addb
fistl
jo
jmp
frstor
bound
jl
add
mov
es
scas
pop
jmp
mov
jns
jp
in
aas
test
cmp
sarl
insl
out
adc
mov
rcrl
mov
jge
dec
popa
in
enter
ret
stos
scas
cmpsb
int3
ret
jnp
fprem1
pop
int3
loopne
dec
js
filds
gs
inc
mov
aad
add
test
enter
xbegin
in
push
jl
xor
data16
out
cld
pop
test
mov
mov
orl
movaps
pop
out
dec
add
scas
mov
dec
cmp
mov
jbe
cltd
xor
jns
xchg
lahf
std
adc
ljmp
ret
adc
ja
inc
inc
mov
dec
sub
out
inc
sti
decb
adc
lret
push
dec
sub
or
call
lods
fistpll
push
sub
pop
mov
push
mov
pop
push
xchg
xor
mov
mov
adc
adc
test
dec
lods
and
xor
cs
rcll
inc
lret
jbe
xor
les
push
test
inc
dec
jne
fnstenv
nop
push
and
push
iret
cmp
movsb
sbb
pushf
push
push
mov
out
add
aad
mov
push
in
leave
pop
xchg
dec
mov
cwtl
xchg
mov
subb
lahf
jnp
sub
push
mov
dec
outsl
lahf
mov
add
popf
sub
mov
movsb
add
jbe
ficomps
mov
test
hlt
js
in
push
stos
jle
cmpsl
xchg
push
pop
call
mov
bound
out
imul
jp
sub
jne
cmp
xor
test
ja
loop
mov
cmp
cmp
cmp
jne
mov
mov
mov
stos
cmpsl
int3
pop
mov
iret
push
push
rolb
jne
data16
or
leave
pop
xor
roll
xlat
aaa
pop
enter
xchg
xchg
rcrb
jns
popa
and
sbb
xchg
das
sub
fld
mov
js
in
jecxz
daa
test
rcrb
pushf
filds
test
inc
and
in
xchg
movsb
push
dec
sbb
sti
and
sub
push
imul
sbb
xchg
pop
cs
jmp
push
js
sub
jno
imul
arpl
sub
dec
or
mov
out
mov
cmp
imul
mov
mov
lret
add
out
in
lds
xchg
insl
or
hlt
stos
in
sub
outsl
mov
xor
sub
ret
aas
stos
in
fwait
xchg
xor
push
in
add
pop
cwtl
sbb
in
adcb
lods
stos
push
imul
lret
lret
and
ss
xchg
sbb
push
xchg
push
movsl
and
lea
sbb
sub
sbb
xchg
add
insl
pop
sub
mov
lahf
mov
les
mov
add
pop
fsub
lcall
jo
ds
sub
outsb
addb
scas
popa
sbb
sarl
and
mov
mov
adc
int
and
sbb
out
sahf
or
sahf
movsl
push
lock
movsl
in
jbe
inc
ret
insl
fwait
into
push
sbb
imul
sbb
int3
inc
mov
les
test
insl
adc
xchg
push
xor
aaa
aam
or
xlat
insl
xchg
xchg
imul
fwait
nop
dec
stos
clc
pop
lds
rcrl
or
inc
ds
sub
push
stc
pushfw
jns
xor
ret
jo
fdiv
js
jecxz
mov
fwait
repnz
in
sbb
ds
xchg
and
xchg
jno
lock
sub
dec
test
popa
fdivs
gs
ss
imull
sub
sbb
mov
bnd
fidivrs
mov
imul
jmp
out
hlt
out
cmp
jb
and
xchg
or
fidivrs
xor
movsl
jae
push
test
mov
or
cwtl
cwtl
adc
loopne
push
push
into
clc
in
and
jno
lcall
jns
fldcw
pop
xchg
cmpsb
scas
rcrb
cltd
or
xchg
rorl
mov
xor
insb
inc
aam
inc
ficoms
pop
inc
mov
and
and
arpl
xor
psrlw
insb
cltd
mov
not
frstor
add
add
xchg
lods
bound
loop
or
and
aas
mov
pop
jg
xchg
out
xor
and
or
fstp
lret
decl
rcr
mov
xlat
add
adc
mov
add
scas
xorl
cli
int
inc
sahf
jg
aam
out
dec
loop
out
jmp
adc
xor
out
xor
pop
xchg
push
fmull
pop
out
lods
psllw
pop
mov
xchg
push
push
push
push
or
pop
sbb
pop
rcll
fbstp
mov
xchg
out
or
cmp
test
cmp
in
std
ja
push
dec
pop
dec
out
filds
hlt
cmp
cmc
mov
jnp
lahf
mov
or
andb
notl
int
fcoms
fwait
push
hlt
pop
inc
push
pop
incl
loop
shl
aaa
xorl
cmpsb
cmp
addr16
sbb
int3
jne
pop
xchg
inc
push
cmp
mov
mov
mov
xchg
mov
push
mov
mull
xchg
insl
jnp
mov
pop
addl
sub
repnz
in
mov
movsl
popl
stc
push
jbe
jl
or
insl
dec
push
pop
xchg
cs
ficoml
adc
pop
iret
lods
lret
inc
lds
call
adc
dec
mov
stos
fbstp
es
iret
mov
repz
into
cwtl
and
mov
divps
sbb
push
dec
jle
ret
shl
loope
out
jg
inc
popf
sti
mov
loop
popf
pop
push
fistps
outsb
mov
mov
mov
lods
adc
loope
pop
repnz
mov
fcomp
push
xor
push
loopne
mov
stos
mov
inc
dec
test
in
xor
ss
xchg
jge
mov
shll
or
hlt
lcall
shll
aas
call
shrl
adcb
adc
adc
dec
mov
shrl
xchg
pop
pushf
pop
rcll
imul
out
rcl
in
fimuls
or
mov
pop
adc
cmp
xor
push
faddl
mov
sbb
mov
aaa
sub
adc
push
insb
and
and
sti
icebp
leave
push
out
and
cmp
sub
pusha
cltd
out
or
stc
jnp
frstor
cmp
cmc
xchg
pop
or
and
xor
jle
push
andl
jmp
jge
cld
push
inc
call
cmpsb
xchg
xchg
loop
leave
addr16
lock
mov
test
jl
int
lret
and
enter
dec
lods
into
jg
and
ds
pop
sub
xor
xor
mov
mov
call
or
ljmp
and
ds
mov
mov
pop
inc
dec
js
push
fcoml
or
icebp
das
xchg
mov
clc
or
mov
in
lods
and
and
mov
jbe
test
pop
or
insb
sti
inc
fidivl
fucom
push
adcb
xchg
out
add
bound
or
jns
popa
test
repnz
lods
jmp
mov
mov
xchg
sahf
cmp
mov
lods
fmuls
inc
or
rcrl
mov
add
xchg
sub
aaa
test
in
cltd
jle
lock
arpl
pop
mov
int3
aas
or
cmp
nop
daa
sbb
std
sub
pop
arpl
and
and
nop
icebp
imul
dec
cmpl
enter
inc
imul
mov
clc
rcrl
push
movsb
jne
and
icebp
or
fsubrl
in
pop
rorl
jo
iret
mov
add
inc
mov
or
dec
jo
mov
dec
call
stos
mov
jl
dec
cmp
inc
xor
dec
inc
push
rorl
dec
pop
ja
sbb
inc
mov
ja
pop
push
cmp
fcomp
popf
aam
sar
push
shlb
push
out
rorl
xchg
mov
jecxz
orl
shll
cltd
mov
mov
clc
mov
imulb
sbb
out
inc
xchg
xor
inc
outsl
mov
or
xorb
insl
push
std
adc
dec
cld
scas
cmp
daa
mov
test
mov
jp
jge
pop
stos
pop
mov
shl
inc
jg
insb
xlat
xor
xor
inc
icebp
jmp
jns
insl
cld
sbb
pop
cmp
mov
or
xchg
add
mov
hlt
scas
inc
pop
fsubrs
push
jae
icebp
lods
mov
popa
lock
data16
mov
std
dec
popf
xchg
jg
xchg
clc
adcl
adc
mov
mov
lret
add
push
push
stos
inc
clc
xchg
pop
inc
xchg
sbb
add
add
movsl
fisubrs
jmp
cmpb
xor
in
jg
loopw
or
loopne
and
xor
mov
mov
and
test
test
andl
mov
fwait
test
jnp
or
and
xlat
loopne
or
shrb
push
jge
mov
lods
jge
push
cmpsl
mov
repz
dec
pop
dec
pop
sbb
xchg
sbb
movsl
pop
fadds
mov
in
lret
scas
pop
pop
push
or
cmpsb
cltd
dec
dec
test
insb
inc
sub
cmp
cmp
mov
jae
leave
shlb
iret
dec
inc
cwtl
push
xchg
xchg
stos
popf
les
sub
sbb
cmpsl
mov
or
movsb
push
scas
jae
dec
aam
outsb
repnz
xor
pop
lahf
in
rorb
std
jge
pop
jg
jl
jno
pushf
loope
inc
int3
lods
js
ret
aad
and
dec
lods
add
push
mov
in
mov
adc
int3
mov
hlt
lea
and
or
clc
sbbl
stc
out
lock
push
add
loope
inc
test
pusha
pop
popf
mov
pop
mov
dec
out
outsb
sub
xor
push
mov
fiadds
ret
push
adc
incl
sub
mov
stc
imul
push
jmp
outsl
int3
add
cmp
push
insb
cltd
push
daa
cmpsb
jg
cli
pop
loop
push
js
dec
fdivs
cld
mov
pop
jg
lret
push
cmovg
popf
mov
les
aaa
add
test
xchg
sub
mov
mov
sbb
scas
arpl
outsl
outsb
cmp
fsubr
lret
les
add
cmc
repz
push
jecxz
addr16
pop
add
mov
out
out
lods
dec
add
cwtl
add
gs
sbb
out
mov
or
bound
xchg
push
pop
and
pushf
push
and
repz
sti
cmp
stc
jmp
push
pop
mov
int
aas
mov
jle
push
stos
icebp
in
inc
inc
xor
aad
and
pop
mov
and
adc
adc
icebp
add
pop
sub
mov
and
ljmp
out
pop
test
jbe
fidivrs
mov
push
adc
mov
fiaddl
xchg
mov
cli
orb
dec
and
idiv
xor
ss
outsb
shll
nop
lea
int3
cmp
inc
adc
ds
adc
xor
push
loopne
mov
and
mov
lcall
adc
xor
jecxz
lret
adcl
sbb
mov
popa
lods
test
jno
pop
mov
or
fucomip
loope
ja
fucomip
dec
lret
add
scas
pop
aad
in
es
loopne
push
lahf
gs
subl
sqrtps
repnz
imul
xorb
sbb
push
push
sub
daa
sbb
leave
in
scas
roll
and
dec
inc
mov
in
pop
ret
dec
lock
scas
inc
aad
jg
cmp
shrl
fildll
pop
out
and
jg
pop
sbb
popf
or
dec
push
mov
xor
pop
leave
iret
sbb
cmp
and
bound
cmp
sub
and
jbe
add
movsb
add
repnz
xor
std
dec
mov
cmp
jnp
or
rolb
loope
xchg
loopne
mov
jne
xchg
ffreep
ret
lods
popa
pop
or
shlb
test
push
mov
or
and
lret
out
lret
push
test
lret
mov
repnz
das
idiv
fyl2x
lahf
orl
iret
insl
xchg
mov
out
jge
lahf
in
mov
xor
in
mov
dec
aas
and
cmc
call
cmpsl
sbb
mov
add
mov
jb
mov
scas
je
xor
pop
std
lret
leave
sub
flds
or
movsl
jle
push
add
cmp
in
add
jl
fiaddl
sub
push
mov
push
xor
sbb
or
ja,pn
lcall
js
lret
aas
pop
or
and
jae
int
pop
push
into
xor
dec
inc
mov
lahf
ljmp
in
test
cmpl
movsb
mov
call
add
jp
sub
and
fwait
mov
ret
ret
jo
rolb
jg
icebp
push
hlt
push
cmpsl
mov
push
xor
pushf
push
aad
add
stos
ljmp
int3
jge
std
sub
sub
jnp
fldl
xchg
loopne
movsb
dec
repz
cmp
roll
imul
mov
cmp
jbe
sbb
cwtl
and
das
loope
jg
xor
inc
inc
pop
ret
movsl
pop
inc
mov
sbb
imulb
sub
sub
xchg
fs
mov
adc
imul
or
dec
sbb
lret
test
leave
xor
push
cmp
sti
mov
xchg
pop
les
popf
fxch
xor
das
std
in
pop
ljmp
pop
fstps
lret
add
ffreep
mov
movl
popf
adc
shll
inc
mov
inc
xor
mov
adc
jb
imull
fistpl
outsl
xchg
push
xchg
dec
inc
adc
test
mov
xor
jno
sbb
test
incb
pop
xor
inc
jnp
jbe
lds
repz
cmp
add
fldt
jae
mov
ret
xor
add
sti
push
sbbl
test
adc
jle
pushf
mov
std
inc
push
and
and
xchg
mov
outsb
pop
fcomps
jecxz
stos
jg
fwait
and
scas
inc
or
mov
cmp
or
aas
mov
mov
push
shll
pop
adc
sub
xchg
xor
pushf
insl
cld
xor
int
lods
mov
in
xchg
jl
mov
or
pop
outsb
int3
adc
icebp
mul
lods
pop
dec
and
loopne
dec
dec
loop
ss
pushf
mov
mov
xor
call
jnp
inc
cwtl
test
movsb
in
data16
bound
dec
stos
cmpsb
insb
jnp
xor
gs
ja
lahf
test
lock
lahf
xchg
mov
jg
jg
cltd
push
repnz
add
sub
ret
sar
mov
add
into
inc
mov
andl
jp
fucom
inc
mov
popf
popf
mov
push
mov
outsl
jne
gs
clc
scas
in
fidivl
mov
dec
ret
es
cmc
pop
lods
cmp
gs
mov
adc
and
push
sub
and
outsb
xor
mov
push
adc
ss
cltd
popf
lret
mov
sbb
push
cmp
imull
or
in
adc
inc
mov
xchg
xor
sbb
pushl
sub
xchg
or
xchg
push
das
daa
outsb
test
dec
sub
imul
sub
adc
ffreep
bound
pop
int3
and
adc
and
fucomi
mov
fcomps
mov
cmp
pusha
inc
sbb
aad
aaa
mov
cmpsl
ljmp
ljmp
xchg
in
daa
xor
lock
lcall
mov
jmp
dec
fisttpl
insb
fldt
inc
jge
lods
push
xchg
and
dec
push
inc
pop
cmp
push
sub
rolb
aas
inc
mov
and
mov
and
pop
sbb
xchg
xlat
push
mov
out
or
pop
add
imul
pop
mov
xchg
dec
es
sbb
push
scas
sub
cmp
or
dec
xor
std
mov
pop
mov
mov
stc
in
nop
xlat
dec
jo
imul
aad
xchg
enter
xchg
push
mov
sub
fstl
in
jmp
add
cmp
call
sub
dec
shrb
jmp
repnz
xchg
leave
movsl
notl
testb
out
sarb
jecxz
sbb
setbe
sahf
add
cmc
and
push
sahf
outsb
nop
jne
push
jmp
mov
pop
dec
je
iret
into
fnstsw
pusha
jbe
cmp
movntps
mov
cmpsl
repnz
xor
cmp
pop
rclb
inc
cmp
stos
mov
lahf
and
in
fs
mov
push
mov
pop
pop
or
ret
or
mov
xchg
into
jge
inc
js
and
test
sbb
enter
fstpt
jb
cltd
sub
push
out
add
xor
cmpsb
andl
dec
outsb
jne
inc
sbb
es
sarb
adc
fwait
and
push
push
adc
inc
loope
add
jo
push
xchg
jp
into
mov
xor
adc
and
clc
sbb
outsl
push
sahf
cmp
fs
loop
test
daa
nop
push
push
test
cli
sbb
mov
out
xchg
mov
xchg
ds
adc
push
sub
mov
cmp
cmp
outsb
mov
cwtl
xchg
out
dec
ss
sub
ja
or
add
push
imul
out
sub
loopne
add
add
fisubs
and
mov
mov
mov
ret
fsubs
je
imul
int
outsb
jno
in
scas
jae
cld
rcrb
out
cltd
in
sub
aam
mov
test
add
ds
dec
push
pop
jg
adc
cmp
mov
push
xor
data16
adc
gs
cld
out
cltd
cmpsl
xchg
das
inc
jo
or
je
pop
dec
stos
fbld
loop
sahf
out
pop
ss
out
mov
in
aas
jae
addr16
pushf
cmp
sub
push
add
neg
sbb
decl
in
add
xor
insb
loopne
ljmp
push
ret
test
and
aad
and
push
test
mov
xrelease
sbb
shlb
mov
lahf
or
dec
out
jmp
jne
pop
mov
mov
mov
jb
push
pop
mov
fildl
mov
adc
inc
js
subl
pop
sub
push
or
aas
shll
add
mov
dec
fcompl
fisubl
and
and
pop
js
push
dec
xor
scas
jmp
fsubr
sahf
inc
subb
inc
dec
adc
adc
adc
mov
fistpl
jecxz
cwtl
push
sub
cmpsb
pop
enter
sbb
sub
jmp
inc
push
dec
jecxz
lcall
pop
pop
push
aad
jnp
es
push
add
jge
add
mov
cmp
fwait
ja
sub
jg
mov
mov
jmp
sub
cmp
xlat
cmpsl
test
and
fnstsw
aad
jb
das
xor
pusha
xchg
sub
sbb
xchg
stos
cmp
jbe
mov
inc
lret
cmp
jnp
sbb
aad
push
inc
rcrl
loopne
into
jbe
sbb
and
negb
inc
cmp
inc
fdivrs
mov
inc
incb
xor
xchg
nop
xor
dec
lods
pop
test
popa
push
sbb
jle
pop
das
ja
out
push
mov
mov
or
rclb
std
mov
in
cwtl
lcall
mov
out
in
sub
add
sti
inc
push
and
xlat
imul
into
xchg
jg
lds
mov
add
add
mov
mov
scas
adc
ret
hlt
imul
mov
jne
dec
int
mov
int
jp
fmuls
clc
inc
movsb
jo
mov
scas
ret
test
nop
push
jne
int
insl
int3
mov
cmpsb
cmc
mov
je
enter
jge
push
mov
and
jo
js
lods
jge
push
repnz
xchg
mov
fnstenv
les
cmc
dec
test
repnz
stc
cwtl
aam
addr16
imul
adc
and
rcrb
jns
xor
lods
dec
popa
popf
insb
mov
cmpsl
cmc
jmp
add
in
movsb
push
mov
or
sub
insl
push
cmc
les
push
xchg
test
push
mov
mov
arpl
xor
lahf
jne
arpl
or
fists
jecxz
neg
xchg
mov
loopne
jl
in
sti
adc
pop
dec
xchg
call
push
cli
mov
scas
xchg
addb
arpl
jo
jnp
cltd
jne
jecxz
sahf
imul
test
push
inc
aad
jb
lods
push
push
dec
add
addl
aad
xor
and
lret
ss
flds
mov
test
push
mov
add
inc
add
es
cld
adc
adcl
shll
fnsave
mov
dec
xchg
in
lock
je
movsb
insl
jge
ja
jne
dec
ljmp
mov
int3
mov
mov
mov
out
popw
cmp
mov
neg
mov
repnz
dec
dec
es
push
shlb
icebp
andl
popf
mov
test
push
arpl
cli
cli
xchg
in
es
mov
xchg
push
cmp
imul
test
loope
dec
stos
int
lods
mov
xchg
or
imul
imul
pop
stos
inc
xchg
cmp
xchg
mov
push
or
sbb
sbb
shlb
jnp
lret
fwait
dec
mov
sarl
dec
pop
mov
shl
fcoms
mov
pop
lret
xchg
adcb
iret
sti
sbb
roll
mov
jbe
mov
add
xchg
inc
enter
fidivrl
fs
xchg
pop
dec
and
xor
add
cmpsb
xor
jmp
aas
mov
aad
lret
sub
pop
sub
test
dec
or
stc
rolb
dec
and
es
sub
rolb
in
jl
jbe
dec
xchg
push
mov
jno
mov
cmp
repz
arpl
cs
imul
test
insb
jo
mov
loop
lahf
out
aad
add
or
cmpsl
fsubp
pop
test
add
sub
popa
lcall
fnstsw
call
inc
pop
xor
jle
sub
xchg
lahf
sahf
dec
cmp
sbb
adc
and
pop
xchg
pop
pop
mov
loop,pt
pop
jb
jecxz
add
in
test
jmp
jp
cmp
fmull
or
xor
add
mov
push
hlt
add
stos
jb
stos
jne
dec
or
push
mov
in
mov
xchg
mov
sbb
mov
inc
cld
mov
imul
push
add
shll
push
xchg
mov
nopl
xor
fadd
cmc
pop
jne
int
sbb
or
xor
mov
xor
mov
pusha
jae
lods
loopne
aaa
out
pop
xor
bound
imul
in
jns
mov
cmp
enter
pop
or
mov
xor
xchg
popa
clc
out
mov
shlb
negl
xchg
mov
dec
sbbb
xor
nop
cltd
jne
aas
cmpsb
mov
cmpsl
inc
cltd
inc
js
inc
mov
ja
fcompl
pop
loop
roll
add
pushf
out
pop
jbe
push
mov
into
repz
je
aas
push
push
sub
pop
popa
adc
dec
mov
pop
mov
adc
inc
in
and
mov
stos
ficoms
in
roll
sbb
loop
ror
push
or
mov
adc
stos
push
mov
shlb
pop
mov
fdivr
aaa
mov
sti
mov
stc
lods
pop
mov
or
add
popa
ljmp
mov
mov
addr16
inc
cwtl
mov
mov
dec
addr16
jno
loope
ja
mov
pusha
insb
cmovs
mov
les
push
dec
int3
push
inc
jae
jb
or
jb
cld
lds
pusha
sub
push
mov
or
add
test
popa
repz
loope
dec
xor
push
inc
mov
pop
mov
xlat
dec
imul
sub
jg
loop
mov
sub
pop
dec
stos
inc
add
fs
test
test
ljmp
mov
xchg
movsb
fistps
push
and
jbe
bound
add
aad
aad
cmp
mov
call
pusha
cmc
dec
sbb
sbb
jbe
lahf
cmp
jle,pn
in
fwait
jns
ljmp
and
dec
jecxz
ss
lea
xchg
in
mov
push
cmp
xchg
fidivrs
mov
shlb
jmp
fidivrl
inc
adc
cmc
sbb
ret
xchg
sub
adc
pop
out
pop
inc
cmp
xchg
dec
ss
fcmovne
or
aaa
je
fnstsw
fcmovne
sbb
push
sbb
sub
mov
xchg
pop
negl
mov
jge
mov
scas
push
ret
imul
pop
and
xchg
push
adcb
cmpsl
dec
fildll
loop
flds
lock
sub
sub
shll
mov
jmp
es
xchg
out
in
sahf
ret
shl
std
cli
fcompp
cmp
faddp
ljmp
dec
pop
fcoml
xchg
add
je
rorl
cmp
lock
data16
xlat
subb
xchg
adc
push
sqrtps
test
leave
repnz
in
loope
mov
mov
nop
cmp
push
inc
mov
push
mov
stos
scas
xor
add
arpl
add
cwtl
inc
out
js
imul
sub
shll
data16
lahf
inc
imul
sbb
loopne
std
sbbb
and
fcomi
jbe
in
xor
stos
adc
or
push
scas
cwtl
lcall
push
adc
add
push
pop
gs
shrl
jae
or
inc
faddl
add
inc
subb
clc
insl
cmp
icebp
scas
xchg
mov
in
mov
jge
in
lods
fucomi
or
es
sub
orl
pop
jmp
push
pop
pop
mov
mov
das
pusha
jecxz
bound
ja
xchg
stc
cld
pop
xchg
dec
rcrl
sub
lahf
mov
int
adc
push
or
movsb
and
addr16
ret
and
sub
mov
xlat
push
mov
test
dec
jnp
sbb
sub
mov
loope
xchg
push
mov
lret
clc
push
jbe
xchg
push
pusha
movb
add
cltd
jl
addr16
nop
xchg
mov
in
rol
push
xor
arpl
xchg
imul
fcoms
fildl
xchg
clc
in
cwtl
call
push
addr16
jl
sbb
es
inc
push
push
push
mov
or
adc
test
mov
out
and
int3
jnp
push
imul
sbb
in
xchg
mov
mov
and
lahf
pop
shlb
lret
out
push
inc
pop
add
inc
inc
pop
jl
fisubs
les
imul
or
repz
stos
mov
int3
lret
mov
push
dec
xchg
out
repz
enter
nop
push
dec
xchg
xlat
in
push
leave
pop
ds
in
or
lcall
leave
aam
orb
mov
pusha
sub
int3
nop
mov
das
movsl
xchg
cmpsb
jle
out
sub
xchg
outsb
xchg
cmpsb
adc
sub
pop
jmp
pop
sub
pusha
xor
lock
or
jae
clc
in
dec
mov
push
and
jge
sahf
loop
mov
das
pusha
jp
jnp
lods
mov
jecxz
repz
cli
add
addr16
mov
add
fwait
les
sub
sbb
xlat
outsl
mov
mov
fimull
fnstenv
aaa
or
cs
lcall
mov
test
fcomip
loopne
jmp
rcrl
sub
or
rorb
shlb
repz
pminsw
imul
loop
lahf
mov
xor
inc
or
arpl
xor
lock
cwtl
and
insl
jne
shll
test
add
sbb
or
fdivr
mov
loope
pop
movsb
xchg
mov
idivl
imul
xchg
daa
test
or
cmp
and
ja
xor
inc
mov
jecxz
sub
call
sub
push
addl
jg
push
clc
dec
ss
inc
inc
frstor
mov
stos
dec
adc
xor
pop
push
out
jl
or
shlb
rcl
outsl
push
ljmp
inc
mov
and
jmp
lods
dec
mov
aas
je
das
repz
daa
push
dec
pusha
stos
push
xchg
ss
loopne
sub
leave
sub
pop
cltd
jo
jns
int3
or
sub
adc
dec
xchg
xor
or
movb
jne
mov
std
fistpl
xor
push
adc
notb
mov
push
cmp
and
pushl
jne
pop
adc
and
add
and
cmp
sub
stc
or
and
push
pop
cmp
loop
dec
and
sti
mov
mov
ds
sub
cmp
cmp
sbb
stos
sub
jnp
cmc
test
lcall
dec
shlb
testb
mov
repz
mov
into
call
cs
fwait
inc
shl
cli
xchg
testb
or
mov
cmp
lret
cmp
enter
mov
pop
int
jp
out
lahf
sub
adc
inc
xchg
or
or
hlt
test
mov
pop
cmp
ss
aad
mov
inc
jmp
xchg
dec
cmp
in
popa
pop
and
fistl
pop
mov
loope
fs
out
mov
sbbb
sub
fxch
lcall
ljmp
out
mov
mov
and
dec
clc
pusha
flds
icebp
out
pop
sbb
dec
pop
mov
bound
jb
pop
test
cwtl
cmp
xchg
test
mov
scas
dec
shl
jns
mov
pop
insb
fimull
dec
gs
testb
mov
stos
sub
movsb
popf
and
mov
sahf
imul
or
jno
out
and
or
jns
lea
mov
fdivp
mov
xor
adc
pop
jns
xchg
sbbb
and
mov
jecxz
leave
lcall
inc
cmp
dec
addl
adc
repnz
adcb
mov
mov
cmp
inc
test
lea
pop
sub
and
lea
cmc
adc
pop
adc
sbb
stos
aas
xor
mov
out
stos
dec
adc
jle
mov
xchg
or
iret
pop
rcrb
loop
sub
add
adc
adc
jb
out
sub
push
ljmp
inc
push
dec
test
pop
lock
es
sub
fwait
pop
leave
adc
mov
out
jmp
rep
and
jle
mov
xor
pop
pop
leave
sub
mov
addr16
add
dec
xchg
jmp
mov
cwtl
cs
xlat
enter
mov
aas
xor
je
in
mov
or
lahf
ror
xor
cmp
xor
xchg
testl
daa
push
mov
xor
ds
dec
jne
mov
jnp
in
pop
aaa
xor
lea
repz
cli
jbe
push
cmp
mov
cld
out
push
imul
xchg
in
add
ja
mov
dec
dec
cmp
hlt
std
dec
sbb
lock
and
jnp
pop
bound
fdivs
mov
push
adc
cmpl
jmp
xchg
xlat
mov
hlt
xor
insl
fsubl
sub
cmp
into
push
call
mov
outsb
inc
and
add
call
add
jp
pop
fs
add
lods
insb
sbb
xchg
dec
push
sbb
add
fadd
mov
in
xchg
or
cmc
pop
js
mov
leave
in
xor
les
loopne
notb
add
cmp
mov
iret
pop
cmp
xor
lahf
mov
push
mov
push
int
in
insb
push
jae
mov
nop
lahf
xchg
das
pop
ds
jnp
leave
add
rcrl
leave
xchg
insb
pop
cmpb
loope
or
testl
fisttpll
pop
mov
pop
push
leave
fbstp
sub
push
andb
fnstcw
xor
mov
outsl
xchg
das
dec
cmp
fwait
jg
mov
lea
dec
rol
dec
or
dec
inc
out
addb
lcall
cmpsb
adc
icebp
loope
or
pusha
stos
cli
sub
stc
in
cltd
out
sbb
cmp
adc
jg
mov
and
sub
mov
jae
sti
mov
scas
repnz
jl
test
xchg
dec
stos
insl
hlt
pop
xor
insb
sbb
sbb
pop
push
stos
loope
rol
popf
aam
xchg
sbb
add
mov
pop
adc
sar
jae
das
add
imul
push
jge
jle
mov
and
push
fldenv
fmul
aad
fs
or
or
out
repz
shrl
clc
dec
push
fiadds
mov
icebp
mov
add
testb
pop
fnstenv
pop
sbb
cltd
xor
test
sahf
icebp
test
imul
ret
cmpsl
idivl
or
jno
outsl
mov
push
adc
dec
cs
and
ljmp
cmp
add
lret
push
sub
cmp
dec
jmp
inc
jno
adc
ds
insb
scas
out
dec
sbb
jo
lds
push
or
stos
jne
pop
aas
cmp
test
and
cmpb
mov
mov
or
das
outsl
push
cmp
xchg
ljmp
push
out
dec
mov
mov
cmc
mov
repz
add
xchg
add
addl
dec
lods
or
ljmp
movb
pop
jns
loopne
inc
xchg
push
nop
mov
pop
inc
adc
lret
rol
sbb
mov
and
sbb
dec
dec
cwtl
mov
xor
dec
inc
fdivl
sub
mov
icebp
sbb
ficompl
je
cmc
mov
sub
xor
rcll
aaa
or
push
and
sub
pop
std
lahf
jge
jb
and
pop
outsb
gs
cs
push
cmpsl
mov
decb
inc
or
mov
pushf
iret
shrl
push
lahf
testb
loopne
cmp
jns
in
sub
rolb
or
push
and
fs
pop
jle
push
aad
sbb
cmp
ds
cld
pop
popf
push
shlb
mov
and
push
or
sbb
cmc
add
sub
out
cmp
popa
pop
dec
push
pusha
lret
jge
or
adc
cmc
mov
pop
xchg
mov
add
push
adc
or
inc
test
inc
test
and
mov
mov
in
das
xchg
sbb
or
xor
notl
lea
xchg
or
jle
insl
int
add
sbb
lahf
sahf
mov
outsl
jnp
xchg
add
lcall
ss
and
mov
jmp
mov
inc
push
imul
or
cmpsl
mov
fcomps
adcl
pusha
xchg
in
lret
dec
sahf
cwtl
jo
out
sbb
mov
test
es
fs
call
push
arpl
sahf
ret
jl
xlat
cltd
mov
cmp
fisttpl
cmpsl
ret
cld
jmp
sbb
nop
xchg
shl
cmpsb
mov
cmp
mov
push
pop
in
mov
lcall
lods
jo
imul
push
jns
or
test
push
and
push
cwtl
mov
fcomp
ret
push
int
shrb
ss
mov
fiadds
daa
mov
aas
jbe
ljmp
neg
pop
fldenv
sub
pop
sbb
sub
ljmp
mov
repnz
movsl
dec
inc
mov
jne
pop
js
insb
rol
mov
int
cmp
sti
xor
adc
pop
mov
jg
mov
mov
mov
ret
mov
dec
push
pop
adc
aas
xor
xchg
pop
sbb
lret
fimuls
xor
inc
and
popa
arpl
mov
ljmp
insb
out
lret
and
ljmp
sar
nop
cmp
inc
cmp
adc
ret
insl
in
int
test
les
xchg
leave
cmp
or
and
jns
repz
lock
repz
lcall
fst
cmp
and
push
loope
ds
mov
xor
aad
cmc
push
shll
lahf
nop
cmpsl
mov
mov
jbe
jae
add
fildl
movb
fneni(8087
sbb
xchg
mov
inc
faddl
inc
mov
push
std
stos
inc
int3
daa
sbb
test
inc
or
pusha
scas
or
or
xor
inc
push
cld
add
movl
xchg
dec
lea
push
push
adc
mov
mov
inc
and
jo
test
cmp
add
scas
lds
dec
les
inc
fistpll
sbb
gs
or
scas
push
mov
addr16
rcr
aas
add
xchg
mov
adc
mov
adc
ffree
es
in
xorl
icebp
or
pop
pop
shlb
jg
popa
das
jge
arpl
mov
inc
out
xor
out
fcomi
inc
dec
pop
dec
jmp
mov
data16
and
out
fcoml
mov
mov
or
insl
mov
pop
repnz
xchg
mov
pop
sub
push
mov
int
adc
pop
andb
lret
mov
jo
xor
adcl
mov
cmpl
cmpsl
jp
jns
or
push
xor
loop
insl
xchg
and
lods
jne
mov
roll
loopew
xchg
ljmp
in
or
cltd
fs
cld
and
pushf
test
jae
in
test
sbb
dec
push
xchg
fidivl
repz
inc
int
push
gs
lods
xchg
into
cmp
icebp
xchg
aad
pop
sbb
loopne
loope
nop
adc
jle
iret
in
shlb
rclb
xchg
dec
hlt
and
add
adc
pushf
subb
aas
jbe
xchg
scas
pop
pop
push
mov
lahf
fs
pusha
or
add
aaa
jno
mov
rorl
cmpsb
sbbb
bound
aas
cli
fiaddl
xor
fwait
sbb
mov
aaa
in
leave
cmp
repz
mov
sarb
mov
cmc
cmp
popa
data16
roll
fdivr
stos
loopne
fstpt
jo
nop
les
sarl
pop
movsl
ficoms
dec
fwait
test
xor
mov
sbb
and
push
vmulsd
jnp
outsl
xchg
pop
adc
dec
sbb
les
imul
cmc
es
loopne
dec
adc
jo
stc
mov
mov
ds
mov
movsb
fbld
inc
pop
out
shl
sbb
lret
stos
mov
mov
pusha
pop
dec
fdivs
push
jae
dec
sub
dec
outsl
call
add
xchg
enter
sub
ret
in
rdtsc
add
pushf
rorb
and
lret
fs
ja
into
in
inc
add
ret
loope
nop
out
inc
pop
add
testl
aam
xchg
aad
cmp
mov
idiv
push
xor
ja
test
mov
pushf
mov
mov
idivl
outsb
pop
mov
inc
test
sti
or
nop
xchg
out
push
jb
pop
dec
jno
mov
mov
subb
push
adc
mov
xor
loope
or
fstpl
mov
mov
inc
insb
jns
fsubl
test
or
cltd
icebp
arpl
jge
mov
imul
in
jmp
adc
add
sbb
mov
cmp
scas
stos
and
imul
add
mov
ja
jne
out
cmp
or
mov
test
jns
or
ret
mov
loope
icebp
mov
xor
jnp
es
xor
paddusw
call
int
mov
mov
push
or
adc
insl
int
jo
dec
loope
dec
popa
aas
in
test
pop
xor
les
or
sbb
mov
cs
inc
int3
hlt
and
jbe
mov
arpl
ret
addr16
movsl
cmpsb
push
xchg
lea
push
sbb
cmp
push
or
sahf
addr16
je
add
mov
inc
imul
fdivs
lods
mov
jecxz
roll
mov
sbb
jge
fmuls
je
jecxz
jae
mov
in
pusha
pop
adc
xchg
sbb
decl
xchg
bound
adc
xor
xchg
inc
arpl
outsl
sbb
ja
movsb
fwait
int
subl
pop
xor
jbe
and
js
and
cmp
sbb
ds
mov
add
jle
lea
lret
and
add
std
test
mov
xor
sbb
cmpsb
pusha
mov
xlat
cmp
inc
or
sbb
jge
mov
cltd
push
mov
xchg
adc
adcl
movsl
outsl
out
dec
cld
lods
adc
cli
arpl
es
push
lret
push
cmp
mov
and
sub
mov
jg
xchg
pop
or
mov
mov
mov
stos
loopne
xchg
jne
push
sub
repnz
and
fcoml
pop
jno
test
idivl
in
sarl
shlb
ret
lods
cmp
dec
inc
pop
jns
ljmp
xchg
in
pop
pop
lahf
clc
mov
or
je
aaa
loop
popl
mov
in
outsb
adc
arpl
xor
pop
fwait
push
inc
lahf
out
incl
mov
int
mov
idiv
lock
jae
xchg
or
rolb
adc
popf
add
pop
inc
mov
scas
pop
cltd
sahf
mov
stc
inc
mov
lret
into
cmpsb
negb
sub
into
inc
std
xlat
int
aam
jno
xchg
mov
pop
lds
mov
outsl
test
sub
jg
inc
iret
test
xlat
or
divb
lahf
and
ds
push
inc
es
hlt
mov
cmc
out
sbb
sahf
xchg
xchg
enter
jns
rorb
lcall
pop
lcall
add
jl
sub
aam
push
jae
mov
adc
into
loope
imul
adc
cltd
leave
xor
sub
mov
xchg
dec
shrb
and
stos
lea
cld
shll
insb
cmpsl
je
ret
stos
fiaddl
mov
daa
jp
mov
ret
fnstsw
push
cmp
repz
inc
mov
mov
mov
rcll
popf
jbe
fyl2xp1
addr16
enter
pop
std
mov
sbb
lcall
sbb
lods
enter
pop
push
mov
jecxz
cmp
and
fildll
cli
inc
pushw
sbb
mov
sbb
in
dec
dec
sti
or
ss
sub
out
aad
fcoml
adc
push
imul
fwait
mov
into
in
mov
lret
adc
aas
lret
xor
in
lods
push
mov
dec
or
sub
xchg
sub
add
and
mov
push
rcrl
out
lds
cmpsb
adcb
mov
and
aas
aam
out
dec
inc
jo,pn
xor
cmp
mov
xchg
js
pop
aaa
int3
mov
pop
aam
mov
or
ja
push
push
stos
inc
jo
xchg
push
inc
mov
xchg
push
jno
rolb
dec
xchg
stc
movsb
or
mov
push
fucomip
adc
imul
dec
in
xor
xor
aam
mov
inc
dec
xchg
push
inc
shr
aad
lret
lret
movaps
jnp
xlat
data16
bnd
inc
sub
add
xor
dec
out
xchg
les
inc
adc
pop
arpl
xchg
shrb
push
push
rclb
call
jne
or
ja
push
or
shrb
mov
mov
cmp
rorl
mov
push
sbb
sarl
and
push
mov
inc
out
pop
retw
loopne
and
imul
repz
push
cli
pop
es
jge
add
cwtl
call
daa
loop
xor
cld
mov
jns
insb
lea
xchg
dec
ret
outsb
iret
jp
jns
nop
bound
ret
pcmpeqd
mov
test
imul
sbb
cmpsl
out
cs
fisubrs
aam
pop
ljmp
ss
inc
or
push
mov
lcall
addl
mov
lcall
mov
sbbb
in
jmp
cmp
add
add
pop
aas
sub
jne
test
mov
push
jecxz
inc
cmp
mov
mov
addr16
jns
add
cmpsl
pop
jmp
push
pusha
shl
cmp
es
data16
fstpl
loopne
mov
pop
xchg
jbe
into
cmp
fs
adc
leave
xchg
mov
addr16
ss
xchg
fwait
in
out
push
and
rorb
outsl
out
xchg
push
mov
or
inc
jge
dec
ror
cld
mov
sub
xchg
inc
movsl
xchg
dec
push
push
adc
nop
cld
mov
stos
popa
popf
xor
sub
pusha
iret
icebp
and
xchg
cmp
mov
imull
add
outsb
pushf
mov
jb
ss
mov
mov
add
fsts
adc
inc
push
fstp
outsb
mov
ret
in
xchg
jbe
or
xchg
pusha
test
sbb
push
push
xor
sbb
adc
push
lea
jb
lcall
or
rcll
inc
outsl
jnp
pop
xlat
push
cmp
push
dec
sbbb
fnsave
ss
inc
cli
jns
mov
jo
push
mov
outsb
inc
push
or
orb
sub
shl
xor
jmp
xchg
mov
adc
popa
movsb
xor
out
inc
xchg
cmp
not
les
sbb
ret
add
lcall
test
adc
andb
mov
fsub
pop
js
mov
pop
hlt
push
dec
adc
insl
mov
cmc
or
popa
push
cmp
add
pop
jno
inc
add
shlb
loop
rcl
lods
add
add
or
ror
repnz
xor
ror
push
test
mov
in
push
inc
mov
loop
leave
push
std
mov
out
sub
or
inc
push
mov
jecxz
pop
inc
mov
hlt
fcmovb
addr16
xchg
inc
dec
cld
inc
mov
leave
push
lret
lods
les
pusha
fiaddl
mov
lret
push
inc
sbb
sub
xor
push
ds
out
sbb
jle
dec
push
lret
sbb
mov
or
xor
hlt
mov
addr16
test
dec
dec
dec
pop
test
sti
fdivs
jb
or
sahf
mov
mov
add
and
push
fbld
lcall
mov
sub
bound
fcomps
es
push
fildll
jnp
mov
movsl
shlb
cli
adc
clc
jp
out
mov
push
aaa
and
in
or
add
js
xchg
fwait
bound
push
mov
inc
dec
vsqrtpd
leave
psraw
scas
subb
xor
aaa
rorl
imul
or
sbb
xchg
arpl
int3
mov
popf
aad
xor
jae
and
inc
bound
loope
scas
xchg
mov
dec
push
xchg
push
dec
call
out
jae
icebp
add
push
jl
cmp
fisttpl
shrl
repz
fidivs
adc
shlb
test
out
fnsave
mov
jg
sub
faddl
push
out
pop
and
jbe
cmp
mov
fs
or
mov
in
and
popa
sub
lcall
pop
xchg
sbb
inc
jl
gs
mov
push
add
es
mov
lock
lahf
cmp
lcall
sarb
inc
popa
and
pushf
movsl
sbb
mov
jmp
cwtl
jg
sub
push
jns
call
sub
sbb
mov
rorl
cmp
sbb
sbb
ds
aaa
aam
pop
fistl
js
clc
lcall
mov
sbb
cmpl
mov
pusha
xchg
loop
lret
and
scas
mov
lock
imul
mov
add
fxch
add
hlt
cmp
jbe
jne
mov
shrl
call
xor
aad
dec
fiaddl
and
lret
mov
xchg
mov
push
and
add
adc
mov
test
push
lea
adc
pop
daa
stos
mov
mov
stos
pop
js
es
adc
pop
test
in
and
cs
push
in
push
jecxz,pt
lds
ror
push
cli
insb
push
sbb
adc
aad
mov
inc
sbb
arpl
mov
fdivs
test
loop
out
leave
scas
out
enter
iret
or
stos
lahf
xor
pop
sbb
aad
mov
in
stc
lcall
stos
push
fnclex
aam
outsb
inc
and
mov
and
addr16
inc
sub
dec
inc
lcall
test
push
popf
pop
sub
js
cmpb
test
je
leave
insb
bound
push
inc
cs
mov
scas
test
sbb
or
icebp
pop
xchg
ss
in
cmp
mov
out
sbb
mov
int
or
and
xchg
sbb
ss
inc
xchg
fcmovbe
cwtl
mov
lahf
inc
mov
pushf
mov
test
mov
sbb
jns
lock
out
shr
sbb
and
cli
xor
lock
sbb
jecxz
and
mov
mov
mov
xor
dec
test
jns
repnz
xchg
pop
ljmp
fmull
icebp
jnp
decb
das
pop
jbe
sub
imul
xchg
ss
in
xor
inc
pop
and
push
lcall
fnsave
hlt
inc
xchg
aam
ss
push
ret
mov
push
sahf
push
testb
subb
inc
in
fsubs
xchg
ror
fs
mov
or
mov
push
ret
inc
stc
bound
dec
call
aaa
loope
and
xchg
dec
inc
jnp
stos
mov
cld
jge
sbb
aaa
enter
test
xor
fcmove
rclb
push
jne
xor
into
inc
sub
imul
ss
jmp
outsl
sub
sbb
add
sbb
loop
cmpsb
lea
push
aad
sti
data16
fmul
mov
pop
sbb
cmp
and
jmp
jns
popa
out
mov
sarb
pop
pop
jo
in
clc
push
pop
les
xchg
repz
mov
mov
push
inc
xor
stc
lea
or
into
sbb
ror
icebp
subl
adcb
repz
or
push
pusha
mov
jo
dec
adc
lock
mov
mov
jge
cmp
movl
dec
in
gs
outsl
cmp
out
inc
mov
stos
mov
lahf
cmp
mov
lock
cmpsb
stos
mov
xor
shr
fisubs
test
mov
nop
popaw
jb
sub
mov
mov
push
sarb
shll
or
pusha
clc
adc
sub
xchg
imul
sub
loope
xchg
xchg
mov
ret
and
mov
aas
jl
in
cmc
add
pop
stos
mov
dec
dec
xchg
test
dec
adc
stc
loopne
jb
dec
incb
les
jnp
cmpsl
test
icebp
xlat
jnp
clc
xor
mov
js
pop
pusha
xor
fcmovne
setbe
cmpsb
fdivs
sbb
jp
adc
cmpsl
enter
or
dec
jns
data16
mov
std
cmp
std
popa
dec
loope
andl
loope
into
scas
aaa
xor
mov
add
pop
mov
add
pop
inc
aam
test
aas
sub
sub
popf
adc
les
incb
outsl
daa
popa
pextrw
mov
loopne
cmp
rcl
addb
adcb
dec
sarb
dec
imul
jno
mov
test
push
or
lods
mov
sbb
adc
cmpb
push
pop
mov
push
std
adc
fiadds
pushf
rcll
pushf
inc
test
mov
inc
xor
mov
sbb
and
aaa
pop
shll
stos
pusha
mov
aaa
testl
push
lock
loopne
stc
and
shlb
imul
sbb
aam
cmpsl
mov
or
movl
lods
mov
ja
bound
xchg
insb
ds
fistl
into
pop
mov
push
ret
inc
add
mov
andb
jecxz
dec
movsl
repz
rorb
inc
mov
dec
mov
mov
idivb
mov
add
ds
loop
es
pop
lods
call
lds
sbb
outsl
sbb
mov
jmp
gs
call
into
cmp
in
clc
adc
mov
sbb
sub
mov
aam
mov
test
mov
sbb
adc
push
and
cmc
movsb
inc
xchg
loopne
mov
insb
mov
aad
enter
push
shrb
push
fisubs
test
sbb
and
jge
mov
in
mov
mov
mov
mov
adc
inc
test
sbb
dec
divb
fisubrs
mov
mov
pop
fs
in
mov
mov
jo
inc
or
mov
mov
cmc
mov
dec
sbb
in
rolb
inc
mov
push
cmp
outsb
dec
dec
lea
jo,pt
lds
jne
aad
mov
sub
mov
aaa
and
mov
xlat
test
lea
inc
mov
hlt
lds
inc
mov
sarb
ss
aam
fcoms
xor
pop
aad
cltd
cmpsb
imul
ss
test
inc
or
shrb
jg
or
cmc
rcr
jae,pn
lods
inc
xchg
xor
add
add
loop
scas
int3
cmp
push
cmpsl
jg
je
pusha
fbstp
daa
mov
movsl
mov
mov
mov
and
mov
or
jg
jno
sti
sub
mov
shll
ljmp
movsb
inc
inc
jge
push
mov
and
mov
push
in
inc
mov
je
fs
jge
and
xchg
fwait
jbe
xor
adc
mov
mov
add
adc
inc
in
cmp
mov
cmp
les
add
and
add
adc
jge
in
mov
jmp
in
dec
leave
pop
test
lcall
loop
xchg
shll
in
stos
lock
ficomps
rolb
sbbl
jb
dec
scas
xchg
mov
add
xor
jge
aad
popf
or
jge
mov
shll
jl
sbb
dec
arpl
cmpb
push
js
arpl
inc
aas
dec
movsb
inc
cmp
xor
sbb
lret
jp
pusha
mov
jae
ljmp
fnstenv
jge
out
pop
sbbl
lret
icebp
push
xlat
std
js
gs
push
aas
mov
popf
dec
xor
repz
into
fcompl
in
inc
push
pop
inc
xchg
or
dec
mov
xchg
mov
and
mov
adc
pop
rorb
pop
stc
sbb
lret
sbb
pop
les
dec
lret
push
and
in
sti
mov
jl
lret
je
fcoms
stc
in
out
pop
mov
mov
and
daa
js
mov
cmc
mov
and
mov
add
test
sbb
std
mov
pop
pusha
idivb
dec
sbb
sti
xchg
push
pop
in
scas
ljmp
loopne
andb
mov
lret
out
imul
inc
sbb
dec
mov
mov
mov
mov
daa
loope
pop
out
sarb
scas
fwait
pop
cmp
cmp
mov
sbb
fidivl
mov
sbb
pop
dec
insb
cmc
adc
sbb
shl
cs
mov
cmp
sbb
andb
xchg
lret
fld
sub
and
adc
mov
lret
push
sbb
add
decl
cmp
std
repz
sbb
and
fldenv
std
subl
iret
xchg
sub
insb
adc
sbb
and
mov
adc
inc
sahf
xor
adc
and
dec
cs
stos
shll
enter
pop
out
test
sbb
fcmovu
mov
push
add
adc
sbb
insb
sub
clc
cmp
jae
jb
adc
add
xchg
mov
xor
clc
sar
sahf
testb
fldcw
dec
cwtl
xor
mov
mov
inc
js
mov
aaa
adc
and
sub
inc
shr
repnz
xchg
cmp
jns
imul
push
fdivr
mov
js
cmc
not
add
xor
fimuls
cwtl
ljmp
repnz
xor
fcompl
sbb
add
inc
daa
xchg
jae
int3
hlt
push
xchg
mov
outsl
movsb
xchg
xchg
jge
mov
dec
aas
sub
mov
mov
mov
call
dec
loopne
sbb
jp
cmp
adc
or
adc
sub
nop
xorb
lods
testl
dec
sub
iret
xor
pop
stos
xor
pop
aam
loop
scas
pop
in
mov
roll
mov
dec
fcoms
imul
xchg
hlt
pop
mov
xor
jmp
hlt
push
popf
decb
mov
test
popa
pop
aam
dec
jmp
imul
lea
xor
xchg
lock
stc
jg
lcall
loopne
cwtl
cmpsl
iret
sbb
adc
popf
jb
mov
into
loop
test
lret
jne
fcoms
mov
mov
mov
push
insb
mov
cli
and
insl
cmp
rcrl
push
imul
jne
xor
ret
xor
xchg
lea
ja
mov
jle
jb
clc
out
adc
xlat
cmp
icebp
mov
pop
xchg
jge
shlb
test
sub
cltd
jne
add
and
mov
ss
pop
cmpsb
inc
mov
push
cmp
lahf
mov
cwtl
inc
xor
inc
mov
iret
jnp
repnz
mov
scas
in
scas
lds
arpl
loop
sahf
pop
cwtl
xlat
lret
int
push
pop
sarl
flds
jge
mov
pop
and
out
and
jmp
orb
jbe
mov
mov
bound
repz
mov
xchg
mov
push
dec
mov
bound
insb
rclb
xor
mov
inc
arpl
xor
pop
mov
mov
inc
pushf
or
inc
addl
or
xchg
fsts
mov
arpl
test
push
sbb
clc
sbb
dec
shll
insb
add
push
push
adc
adc
sti
je
add
xchg
ret
insb
in
lcall
inc
addr16
cwtl
jl
or
outsl
outsb
je
repnz
jl
addl
adc
les
or
setbe
xchg
pop
ret
lret
daa
dec
pop
push
std
dec
adc
push
mov
xor
push
out
cmp
pop
jecxz
pushw
movsb
mov
ret
and
mov
mov
lahf
mov
les
jo
leave
out
adc
aam
jne
cmp
jle
js
cmpsb
add
push
std
and
loopne
sbb
mov
sub
mov
jne
in
lea
push
push
mov
xor
popf
push
repnz
fstps
loop
and
in
pop
lock
dec
int3
nop
xor
mov
addr16
call
adc
pand
lock
inc
pop
push
sbb
inc
adc
lret
inc
pop
repnz
sub
insb
push
loopne
xor
add
cs
cs
mov
in
pop
cmpsb
out
arpl
and
in
xchg
stc
loop
cmp
or
addb
add
mov
pop
into
shlb
lock
in
je
mov
cltd
jge
jo
test
gs
jmp
pop
loope
mov
mov
dec
scas
dec
push
shlb
cmp
leave
imul
jne
ja
rorl
imul
fcoms
jp
loop
push
pop
xchg
cmp
mov
jnp
lds
or
xchg
sbb
arpl
push
cltd
in
lahf
gs
push
push
xchg
xchg
dec
insl
sarl
cmc
es
lea
into
cmp
adc
mov
aad
repnz
in
repz
xchg
jne
add
pop
movl
addl
inc
subb
or
pop
push
adcb
pop
aam
push
mov
cli
cmp
adc
das
cs
jb
fmul
fs
lods
mov
pop
test
dec
adc
data16
out
popf
int3
push
pop
add
iret
outsl
mov
shl
enter
jge
mov
or
mov
mov
xchg
jbe
xchg
jle
aad
xchg
hlt
lods
shlb
mov
movsb
ret
pop
pop
and
stos
inc
mov
aas
sbb
les
push
test
sti
inc
jge
adc
mov
mov
xchg
mov
jo
imul
in
cmpsl
inc
cld
inc
fisubs
sbb
jmp
lahf
xor
cmp
xchg
dec
sbb
and
or
lcall
xchg
sub
cmc
mov
jmp
iret
rol
popa
mov
adc
xchg
sbb
jl,pn
sbb
mov
xchg
and
mov
sub
cld
ljmp
clc
bound
dec
push
int
mov
sub
push
inc
ljmp
ret
xchg
add
outsb
test
push
mov
neg
cltd
dec
insl
push
jmp
cmc
cmp
cwtl
jnp
int3
add
mov
repnz
mov
insl
inc
and
je
mov
jb
push
lock
lods
and
and
sub
pop
pushf
and
jmp
pushf
xor
leave
mov
fldcw
rcl
jg
dec
test
cmp
xchg
sbb
pop
shlb
int3
fcoms
xor
stos
les
add
jl
inc
roll
or
test
int
arpl
sti
into
ds
aaa
sbb
xchg
sti
xor
jns
lock
xor
enter
mov
in
in
pop
xchg
xchg
mov
xor
cwtl
mov
mov
fcompl
jnp,pt
call
xchg
call
adc
out
dec
push
pop
repz
fs
aad
jo
mov
mov
push
lahf
cmp
add
cwtl
xlat
push
dec
lea
daa
addr16
pop
stos
arpl
jns
mov
shrb
pop
mov
cpuid
cmpsl
arpl
fwait
jg
and
mov
call
scas
js
adc
or
cmpsl
mov
dec
hlt
cld
idivb
leave
mov
movsb
sub
ret
test
jmp
xor
mov
test
stos
fstps
movsl
dec
jnp
mov
subb
mov
stos
dec
fimuls
sub
fwait
inc
or
adc
inc
and
sbb
jno
jns
bound
divl
sbb
and
pop
xor
dec
fcmovne
imul
mov
cmpsl
pop
je
iret
and
inc
jo
fsubrl
xchg
mov
in
cmp
xor
fsubrs
mov
repnz
mov
or
jne
stos
sbb
int3
int3
sbb
stc
mov
dec
adc
movsl
push
std
int3
dec
mov
shl
add
cmc
push
fwait
ljmp
inc
xchg
rorb
xchg
mov
int
adc
xlat
popf
xchg
je
pop
scas
fildl
adc
jns
int
jae
test
xor
xchg
jmp
push
pop
pop
xchg
dec
lret
iret
adc
call
lret
jne
xchg
cmc
shll
cld
out
shl
sub
lret
popl
lods
je
mov
cmp
je
icebp
fs
in
sahf
add
in
repnz
and
outsb
pusha
push
loop
xor
std
out
cmp
data16
xor
pop
repz
sub
and
cmc
icebp
psrad
pop
ret
push
inc
xor
addb
stos
rcl
in
shll
dec
leave
in
sbb
push
mov
ret
outsb
xor
pop
or
push
das
mov
xchg
jmp
addr16
adc
dec
xor
mov
jno
cmc
jns
pop
filds
sti
xchg
sahf
test
shll
out
shll
xor
fistps
dec
fld
mov
pushl
xchg
jmp
mov
cmpsb
sbb
aaa
adc
nop
fisubl
xchg
cld
mov
inc
sbb
loopne
push
mov
xchg
lods
xor
bound
stos
jb,pt
xchg
rolb
je
and
mov
pop
mov
stos
mov
ja
xor
mov
ficompl
cmp
shll
addr16
xor
mov
outsl
mov
mov
mov
cmp
xor
test
mov
fsubl
inc
arpl
stc
mov
data16
jle
cs
ffree
enter
aaa
add
cli
ja
inc
dec
std
or
jge
cmp
stos
mov
ja
gs
inc
fxch
jge
push
out
mov
lds
jl
cmpb
dec
dec
nop
insb
data16
push
mov
scas
jg
insb
mul
rcrl
shlb
icebp
out
dec
push
push
movsb
repz
mov
jp
or
or
jmp
sub
sub
push
sbb
out
loopne
std
js
add
jno
adc
aam
mov
cmp
testb
fwait
test
dec
leave
mov
or
mov
add
cmpsb
lcall
into
mov
cwtl
add
mov
or
xor
fmuls
mov
sub
mov
sub
ja
lahf
hlt
cmp
movsl
inc
rclb
push
pop
test
daa
insb
movsb
cmc
inc
or
test
jns
jb
mov
jno
jno
rcll
add
mov
int
mov
push
or
mov
and
clc
sub
or
sbb
xchg
test
pop
sbb
xor
jle
mov
cmpsl
cld
movsb
pop
mov
and
sub
pop
sbb
mov
das
cs
ret
ret
inc
rdmsr
mov
ret
lods
hlt
mov
jae
nop
enter
mov
stos
mov
std
es
dec
movsl
jne
xor
cld
jmp
ja
arpl
in
lds
or
ja
sub
and
shlb
in
js
mov
sub
arpl
pop
pop
mov
dec
sbb
or
insb
pop
adc
push
jbe
mov
dec
sbb
lret
leave
mov
inc
jns
test
jnp
mov
je
out
int3
pop
aas
xchg
mov
push
fsubs
sbb
imul
push
and
addr16
mov
and
movsl
mov
mov
or
pop
xchg
inc
cmp
cmp
cmpl
cwtl
ds
movsb
fwait
dec
jl
fs
lods
xlat
cmp
or
push
test
xor
pop
or
dec
fisubl
stos
test
ja
gs
jo
and
imul
xlat
add
mov
sbb
pushf
imul
stc
dec
jbe
pop
inc
leave
adc
cmp
cmp
sar
shl
add
xchg
mov
sub
hlt
rep
insb
cmp
xchg
andl
jo
sahf
or
jb
or
int3
or
push
jmp
mov
test
lds
add
mov
adc
out
sub
pop
jge
aam
pushf
mov
mov
sub
cwtl
rcrl
pop
ret
mov
sub
shl
jbe
xchg
xor
mov
mov
pop
push
into
std
xor
xchg
add
ret
add
adc
sub
dec
es
cmpsl
inc
xchg
pop
jbe
adc
xor
cmp
cli
ror
out
cmp
add
mov
enter
dec
inc
mov
std
mov
lds
jle
sbb
sub
mov
and
jae
je
mov
add
and
or
arpl
push
push
push
cmp
cmp
out
addb
out
in
cmpsl
outsb
mov
mov
mov
mov
testb
movsl
loope
lds
imul
push
fldcw
xor
ja
mov
push
lods
pop
loopne
jle
mov
sbb
mov
push
mov
in
xlat
cwtl
daa
repnz
inc
sbb
daa
mov
mov
ljmp
call
aaa
pop
xor
pop
arpl
mov
std
fisubrl
fdivrp
rcrb
cli
push
jne
dec
sarb
sub
add
or
jge
les
mov
pushf
cmp
and
pop
jg
jae
jg
dec
xchg
iret
cmp
pop
pop
in
push
clc
xor
rol
pop
sub
insl
leave
imul
adcl
push
jns
shl
xchg
cltd
stos
ljmp
push
jg
mov
ja
cmp
adc
mov
add
shrl
mov
shr
enter
div
subb
dec
inc
out
xchg
fsubrl
pop
ds
fistpl
adc
mov
xchg
inc
xor
out
push
mov
mov
mov
push
or
cltd
push
repz
mov
pop
pop
sbb
adc
into
bound
fstps
fisttpll
jecxz
imul
xor
popa
xor
mov
xlat
ss
addl
in
push
popa
stc
rorl
mov
jno
lcall
jo
dec
fs
xchg
mov
jnp
and
dec
mov
dec
mov
imull
outsl
and
repz
add
mov
and
sub
or
repnz
dec
rclb
push
sub
cs
adc
iret
pop
jecxz
mov
ret
arpl
xor
sub
int
scas
xchg
push
lcall
cltd
jmp
cmpsl
cwtl
xor
xlat
mov
or
sub
mov
sti
sbb
aas
lds
in
psrlw
adc
inc
mov
jns
xchg
push
inc
cmp
inc
in
sbb
lods
inc
and
and
or
sbb
jnp
and
or
loope
mov
enter
mov
into
movsl
addl
int3
mov
jo
inc
popa
inc
cld
je
orl
mov
mov
ret
inc
pop
cmc
fildll
xchg
cmp
cmpl
adc
pop
insb
push
insl
push
rolb
ds
or
ret
fcompl
movsl
out
jo
jmp
nop
clc
xchg
fbld
sub
pop
jo
mov
clc
xor
inc
push
lds
mov
inc
or
arpl
pusha
dec
and
repnz
mov
pop
mov
fcomps
cwtl
xor
push
sbb
jnp,pn
mul
dec
popa
or
ret
mov
insl
or
adc
std
icebp
ljmp
push
arpl
aam
push
sbb
fwait
jg
cmp
push
arpl
mov
mov
cmpsb
idivl
shlb
mov
lods
das
icebp
sahf
and
fldt
push
jbe
fldl
cmp
and
outsb
mov
pop
mov
pop
test
dec
mov
sub
pop
push
adc
mov
sbb
push
pop
fdivrp
cmp
adc
lcall
fadd
dec
or
add
subb
sub
adc
out
sbb
cmpsl
mov
daa
addr16
mov
outsl
or
scas
pushf
nop
or
leave
ret
mov
or
dec
adc
cltd
fcoml
push
pop
sbb
outsl
or
sbb
jae
jmp
dec
mov
je
pop
xorl
scas
inc
add
and
dec
pop
push
mov
mov
or
test
pop
stos
pop
or
loope
adc
ljmp
test
jno
popf
int
iret
push
jnp
ds
lea
inc
arpl
cmp
sub
and
call
inc
mov
push
adc
arpl
enter
les
sbb
or
call
rcll
pop
mov
gs
cmp
or
pop
push
add
or
notl
dec
setae
loop
xchg
push
stos
add
daa
push
mov
ds
mov
sbb
gs
out
cmp
mov
jmp
fidivl
adc
and
xlat
dec
add
mov
add
push
mov
jnp
mov
inc
shr
out
jb
sub
lcall
fistpll
rclb
sub
pop
push
movsl
jo
inc
inc
or
es
cmp
incb
insl
push
pop
adc
popf
int
sbb
and
jmp
sub
cmp
push
test
and
in
jo
add
cmp
repnz
nop
adc
dec
or
add
fisttpl
push
sub
cmp
jae
cmp
xor
cltd
dec
andl
fs
xor
xor
and
sub
sub
dec
sti
inc
push
std
cmp
jmp
dec
scas
pushf
cmp
adc
sbb
mov
int3
sbb
xor
lea
adc
hlt
test
xchg
aad
mov
outsb
jb
call
movsb
leave
leave
fldl
sub
jne
mov
dec
addr16
lods
jns
mov
sbb
sub
mov
test
or
ret
fmuls
daa
jae
xor
push
add
mov
push
and
fs
inc
leave
add
mov
lea
jp
shlb
dec
es
js
mov
inc
jg
sti
add
or
notl
roll
push
test
mov
shll
xchg
pop
popa
dec
jp
addl
arpl
push
jmp
test
mov
sub
nop
cmp
aas
into
cwtl
mov
mov
add
adc
addl
adc
aas
pop
mov
mov
pop
pop
sbb
sbb
jecxz
popf
xor
sbb
js
mov
rorl
and
cmc
fcmovnbe
fs
imul
pop
inc
mov
lahf
cmp
jecxz
int
or
dec
ss
jmp
inc
lret
ret
inc
cmp
das
loope
or
cmc
insb
popa
cmp
test
sbb
jp
xor
mov
or
xor
lock
push
outsl
testb
push
data16
mov
mov
adc
inc
bound
mov
sub
push
addb
cltd
popf
rcrl
pushf
sub
and
and
cmc
dec
push
inc
push
jno
movsl
and
mov
xchg
enter
add
in
pop
inc
xor
repz
mov
nop
cmp
shrb
iret
fdivs
sbb
adc
push
pop
int3
stc
sub
xor
sahf
xchg
mov
aaa
rcrl
in
pop
dec
repz
pushf
dec
ret
mov
or
jg
out
xorl
inc
dec
mov
and
or
jo
dec
and
addb
xor
jb
addl
popf
addr16
mov
cmp
mov
xchg
arpl
or
push
icebp
in
adc
dec
repnz
int3
add
inc
cmp
in
test
cwtl
scas
pop
dec
mov
pop
jno
xor
stos
and
inc
subb
add
aaa
xor
sub
dec
imul
icebp
loop
cmc
shl
ds
pop
xor
cmp
xor
rol
sahf
xor
mov
in
test
fwait
add
lea
inc
cmpl
adc
repz
imul
cs
in
inc
inc
bound
or
imul
les
sbb
pusha
lds
add
je
popf
sarb
fiadds
movsb
stc
mov
pop
and
dec
jp
or
call
jl
cmpsl
and
dec
mov
jmp
into
cmp
fcomp
insb
enter
cld
and
xlat
adc
mov
and
pop
shrl
cmp
xor
cmc
sarl
mulb
adc
movl
jmp
sub
test
add
mov
test
dec
adc
pop
int
mov
adc
ja
in
iret
ret
stos
inc
frstor
mov
xor
jmp
dec
cwtl
dec
adc
out
push
jp
lcall
push
adc
icebp
aam
lock
pop
jl
pop
lds
xor
adcb
inc
cmp
roll
and
stc
sub
pop
mov
clc
into
xchg
loopne
xchg
data16
iret
xchg
ret
jbe
imul
add
sbb
xchg
xlat
fimuls
rcll
jno
jae
and
ljmp
fmuls
das
gs
int3
jns
add
push
test
adcl
push
fists
aam
sbb
sub
addl
sbb
xchg
cmp
cmp
mov
adc
jne
nop
mov
pop
cs
hlt
mov
jmp
fnstenv
lret
out
sbb
stos
inc
imul
pop
stos
adcl
fdivl
mov
jp
dec
pop
xchg
jb
stos
filds
dec
les
sub
push
ret
xor
xor
ljmp
fdivrp
inc
lahf
rolb
push
pop
cmp
push
fidivl
and
mov
pop
pop
xchg
ljmp
push
sbb
pop
ds
stos
out
ficomps
or
push
rclb
sub
scas
add
test
push
mov
mov
mov
inc
pop
xor
jae
in
pop
mov
and
in
mov
daa
jo
jge
mov
adcl
imulb
das
push
sbb
aas
push
out
popa
cmp
repz
fisubrl
insl
js
lods
xchg
adc
ja
xor
in
push
fwait
add
sub
jge
lcall
int3
push
push
pop
ret
lret
ret
sub
xchg
ret
adc
sahf
das
shlb
and
add
mov
jae
inc
mov
js
inc
in
pushl
xchg
out
popf
cmp
aas
jnp
int3
andb
iret
xor
cmpsl
ljmp
jno
sbb
test
js
lods
in
enter
push
pushf
cld
lret
mull
xchg
inc
cmp
outsl
dec
sahf
and
aas
sub
sbb
mov
mov
xchg
call
ja
sbb
mov
inc
pop
xor
jl
mov
push
rol
loope
js
jne
inc
jecxz
pop
loopne
loope
push
inc
subl
adc
mov
and
aam
aam
lret
inc
adc
and
fcmovbe
add
pop
cli
pop
cltd
enter
push
ljmp
sti
xchg
sub
cmpsl
jae
ret
loopne
cmpsl
or
call
ds
stos
add
adc
dec
js
adc
sbb
sbb
or
shll
mov
loopne
and
adc
xor
addl
or
pushf
jnp
addr16
ja
cmp
mov
enter
lea
xchg
jnp
or
test
cld
jp
or
xor
push
ja
xlat
adc
mov
pop
packuswb
rcr
lock
aam
pop
ret
jmp
sub
pop
mov
push
jg
fwait
pop
xchg
adc
arpl
sbb
cmp
push
dec
or
add
xchg
sbb
push
inc
cmpsb
mov
inc
sub
inc
pop
sbb
aad
mov
inc
sbb
outsb
mov
popf
stos
dec
lods
push
loop
mov
mov
pop
jns
cli
in
psubsb
xor
push
push
filds
outsb
adc
inc
addr16
mov
or
mov
call
sbb
adc
jo
cmp
jge
inc
adc
stos
push
rcll
mov
push
std
loope
imul
adc
dec
shrb
testl
scas
push
mov
stc
lods
mov
ja
push
rolb
out
mov
or
xchg
sbb
mov
and
lret
mov
mov
int3
dec
cs
bound
jae
xchg
movl
in
mov
push
xchg
je
inc
sbb
push
cmp
repnz
aaa
repnz
dec
add
and
pop
lahf
loopne
inc
dec
in
add
leave
sbb
and
es
xlat
aaa
sbb
testb
mov
mov
cmc
test
adc
fnstcw
out
cltd
mov
out
push
jb
call
and
imul
lahf
push
push
popf
adc
pop
call
shlb
and
push
cmp
imul
inc
inc
pop
sbb
adc
xlat
jmp
push
inc
int
sbb
pop
push
leave
in
jnp
mov
insb
mov
jns
data16
jbe
lea
sbb
and
call
add
inc
xorl
hlt
mov
xchg
jnp
mov
jmp
fisubrl
and
jo
mov
lds
xor
jo
mov
lods
divb
pop
addl
sub
mov
les
outsb
jmp
iret
push
movsb
sub
pop
sbb
cs
sub
int3
add
mov
pop
adc
push
sahf
fidivl
jle
notl
ret
push
faddp
bound
cli
rcll
jno
cmovne
inc
mov
int3
sub
mov
and
insl
aaa
xor
cmp
ja
cmp
mov
jg
es
mov
sub
push
repnz
scas
incl
pop
mov
ss
ficomps
sub
addl
pusha
mov
rorl
clc
xchg
ljmp
arpl
jle
mov
push
pusha
filds
andb
mov
xlat
ror
add
cmp
and
mov
out
mov
ljmp
xchg
and
stos
lods
frstor
in
pop
sbb
dec
pop
cs
pop
sar
shrb
sub
push
add
xchg
gs
xor
jp
inc
bound
es
push
cmp
or
jno
pop
inc
add
sub
ljmp
add
inc
loopne
jbe
sub
divb
add
and
xchg
cwtl
jbe
in
out
lahf
adc
stc
pop
addr16
mov
imul
adc
cmpsb
stc
in
mov
jbe
cmc
jns
mov
or
loope
mov
ss
inc
addb
add
lea
fcmove
loop
lds
flds
ss
cli
xlat
repz
dec
dec
cmp
inc
setb
shlb
popa
mov
cmp
jmp
mov
and
mov
repz
cmpsb
ret
sub
jno
stc
data16
std
and
mov
popf
cmc
jmp
add
das
jne
mov
mov
inc
xor
dec
push
mov
int3
fnstsw
and
je
dec
inc
add
repnz
stos
stc
ss
cmp
xchg
jne
push
mov
jmp
ljmp
inc
push
sbb
enter
sbb
addb
sub
aad
stos
lahf
push
cmp
mov
dec
aas
push
ss
xor
bound
fidivrl
cvtpi2ps
lret
in
dec
push
adc
movsb
jno
add
sbb
dec
nop
xchg
aas
test
mul
ror
and
dec
dec
xchg
inc
mov
push
push
add
test
loopne
loop
jbe
push
or
cmp
push
je
loop
jg
decl
pop
pop
xor
mov
orl
mov
pop
push
pop
and
insl
int3
stc
fstps
add
lds
pop
loope
cmp
ja
jg
fcoml
outsb
jnp
out
test
push
cs
push
lahf
fidivs
les
and
ss
push
nop
repnz
ja
or
sub
fxam
es
add
and
subb
mov
repz
sub
sahf
pop
cmp
or
les
popf
leavew
pop
fdivrl
ljmp
push
mov
out
stos
data16
repz
or
sub
aad
lahf
ret
xlat
and
fistl
shlb
fisttpl
xchg
aaa
inc
mov
fs
mov
mull
add
andl
jmp
sbb
xchg
fcomps
arpl
dec
dec
mov
ss
popf
sub
cwtl
add
jnp
inc
add
and
lret
out
mov
xor
mov
enter
dec
idiv
loope
mov
and
cmp
lahf
jae
rep
xchg
jl
fildll
fstpl
cmp
sbb
icebp
add
fisttps
add
add
aaa
push
cmpsw
loope
repz
fsts
es
xchg
sub
sub
enter
mov
nop
xor
inc
cmpsb
adc
pushf
pop
lock
int3
xchg
add
test
inc
aas
out
jp
notb
mov
cmp
or
cltd
stos
dec
pop
push
jmp
sbb
scas
es
push
in
imul
mov
nop
dec
out
push
mov
add
scas
fiadds
cmp
inc
pop
jg
xchg
in
in
cli
cmp
fdivs
mov
enter
pop
insl
test
aaa
add
popa
stos
sub
and
cmp
and
ja
mov
adc
xor
ja
adc
pusha
and
jg
mov
cld
sub
dec
xchg
xchg
pop
jae
cmpsl
mov
or
jno
lahf
cmp
cmpsl
in
movsl
pop
jb
lret
adc
stos
roll
cmp
addr16
sub
sub
loope
mov
pop
cld
lods
sarb
mov
xchg
push
dec
lds
sti
mov
sahf
ljmp
dec
fwait
sbb
adc
xor
jg
je
arpl
jne
fwait
xchg
cmpsl
call
and
jg
xchg
and
jl
pop
jge
pusha
add
or
out
push
add
jnp
outsl
rdtsc
cmp
es
mov
xor
mov
pop
push
sbb
leave
dec
xchg
pop
push
lea
fs
gs
xchg
hlt
ja
scas
dec
ret
sarb
das
sbb
lds
dec
loop
sbb
scas
cli
push
movsl
sbb
inc
movb
sub
dec
or
lcall
jb
add
and
xor
pushl
xor
mov
jmp
mov
mull
insb
sahf
cmpsb
jmp
and
mov
cli
and
xchg
jp
sbb
cmp
push
pop
ret
movsb
in
loopne
dec
lret
fcomps
pop
popa
lret
dec
out
jae
push
inc
mov
js
int3
loop
icebp
sbb
inc
jnp
cmc
jae
pop
fimull
dec
mov
mov
mov
nop
cmc
xchg
cmp
push
daa
ret
int3
mov
or
es
sbb
xor
mov
movl
std
dec
fstl
dec
and
dec
popf
mov
push
or
push
jg
fcomps
adc
inc
inc
add
and
into
and
sub
cmp
pop
push
push
sub
adc
push
push
stc
push
std
xor
jl
jne
dec
dec
xor
outsb
or
pop
lods
insl
push
or
bound
lods
xchg
fwait
cmp
jecxz
jne
sub
fs
cwtl
lret
mov
mov
push
ljmp
inc
dec
es
adc
mov
and
mov
cmpsl
jge
mov
adc
pop
or
adc
or
ja
int
xchg
fildl
arpl
xor
sahf
dec
cmpb
popa
imul
lret
in
decb
leave
sub
out
inc
stos
lret
xchg
cld
cmp
xor
mov
bound
mov
push
xchg
mov
pusha
mov
and
sbb
dec
inc
dec
sbb
jo
fcoms
or
or
scas
mov
mov
mov
ljmp
push
fldl
ja
cmp
aaa
pop
jl
addr16
out
ret
mov
inc
imull
pusha
es
add
lds
adc
pusha
add
fcom
mov
rorb
cmp
mov
mov
out
jns
mov
insl
lea
fcompl
cmpl
dec
rorl
jb
cwtl
cmpsl
dec
xor
pop
mov
mov
out
cmpsl
and
pop
enter
jmp
movsl
sub
jmp
jbe
sbb
test
sti
push
cmp
add
lret
mov
dec
ficoml
lods
shlb
add
aas
mov
pop
adcl
pop
mov
out
xor
mov
arpl
push
push
mov
jle
es
lret
lods
incb
cli
aad
mov
out
push
jg
push
and
shl
pop
scas
sub
sbb
lods
xor
inc
ret
push
xor
aas
decb
scas
test
mov
enter
int
xor
cmpsb
jne
popa
adc
xchg
icebp
sub
push
insl
dec
enter
aas
scas
push
push
mov
enter
mov
pop
push
shl
repz
push
add
add
xor
loope
sub
inc
int
and
shll
insb
js
mov
sub
rorl
push
mov
movsl
call
mov
shrb
mov
push
jg
cmc
xchg
outsb
ficompl
dec
addr16
dec
arpl
es
lret
pop
shrb
fnstenv
mov
add
jo
mov
mov
fisubrl
call
js
or
sbb
jne
push
cmp
inc
outsb
mov
pusha
and
inc
and
or
lds
mov
aad
js
aam
negb
push
sbb
mov
ja
cmp
popf
ret
jo
push
mov
mov
sbb
outsl
push
lods
jecxz
mov
clc
int3
pop
dec
xchg
jae
dec
movsl
mov
push
lods
aam
arpl
fldt
scas
movb
cmp
sub
mov
into
pop
rol
scas
sti
lods
dec
cmp
loopne
lods
testb
out
sahf
vcmpss
xor
out
dec
or
xor
out
inc
push
sub
inc
dec
cwtl
aam
daa
pop
and
pusha
ret
arpl
insl
push
dec
xor
jne
or
popa
cmpsl
pushf
fbstp
scas
xor
stos
push
sub
mov
pop
sbb
mov
or
cltd
sbb
add
scas
mov
and
inc
es
int
popa
push
push
leave
js
mov
push
mov
mov
mov
inc
xchg
dec
cltd
pop
xchg
insl
scas
dec
insl
push
aad
iret
ss
lods
jp
movsl
jns
ret
jg
and
or
xchg
xor
adc
adc
addr16
xchg
lea
and
es
cmp
in
sbb
jecxz
pop
repnz
jo
xor
dec
adc
pop
rcrl
sub
int3
mov
sbb
jbe
inc
mov
bound
je
xor
js
cli
leave
into
mov
cli
xor
cld
mov
clc
insl
ret
dec
adc
mov
fstpt
sar
int
jnp
pop
pop
jo
cmp
jns
bound
sub
sahf
js
fwait
aaa
pop
popf
imul
mov
lea
mov
test
call
jb
movsb
pop
negl
mov
push
push
cmp
and
or
lret
addl
xchg
out
out
fldl
hlt
mov
iret
mov
sahf
aam
das
push
cltd
movsl
sbb
ret
mov
or
sbb
sbb
dec
fwait
push
cmp
cmp
mov
es
dec
pushf
jno
pop
cli
aaa
dec
shrl
lock
shlb
fwait
int
repnz
lods
out
les
adc
aam
pop
xlat
mov
push
adc
nop
xchg
inc
lret
loop
xchg
fmul
lds
dec
adc
cmp
jns
cmpsl
or
add
jbe
cli
xchg
pop
imul
in
cmp
or
mov
fdivp
ret
imul
mov
jl
enterw
xchg
gs
push
lea
mov
cltd
sub
outsl
push
aas
dec
adc
adc
aam
repz
stc
ljmp
sbb
xchg
iret
jge
jo
aad
testb
insb
pop
ss
mov
mov
pusha
mov
mov
fdivl
xchg
xchg
incl
dec
fwait
jo
leave
jnp
stos
add
cmp
xor
inc
mov
mov
fxch
out
xor
aam
adc
fdivl
jns
arpl
icebp
lret
aas
cmp
push
mov
in
mov
sub
std
mov
ljmp
cmpsb
push
ja
ljmp
push
inc
pop
out
cmp
and
ret
test
addb
andb
or
out
cmc
filds
pop
dec
push
scas
or
std
je
outsb
pop
mov
call
and
movsb
leave
inc
and
pop
xlat
popa
xlat
aad
lcall
aam
adc
and
inc
push
imul
inc
notl
por
xor
xchg
jmp
jecxz
adc
fsubs
imul
leave
xchg
int
dec
sub
loope
lods
jno
outsb
xchg
dec
bound
adc
hlt
fstpl
ja
mov
clc
mov
and
shr
mov
sub
int3
shll
rclb
imul
xor
test
inc
xchg
out
xchg
pop
inc
push
push
aaa
pop
nop
xchg
adc
out
insb
jns
cld
loope,pn
stc
xor
or
cmp
out
sbbl
or
inc
lcall
xor
cmp
test
sub
push
push
mov
call
aad
loopne
cli
data16
or
and
push
cmc
in
outsb
fstl
shll
xchg
inc
dec
loop
mov
test
mov
pusha
pop
cmp
xchg
enter
lret
xchg
push
loopne
inc
cmp
mov
loop
or
lock
cwtl
or
lds
cmp
xchg
or
dec
loope
mov
stos
xchg
jnp
insl
mov
cmp
jmp
cmp
push
jne
dec
movsl
pop
cmp
xchg
and
xor
shrb
sbb
push
inc
mov
cmp
cmp
mov
not
fs
push
cli
dec
inc
mov
and
icebp
or
int3
adc
or
pusha
mov
xor
pop
les
loop
mov
int
and
negb
xchg
xchg
pop
cmpsl
loopne
arpl
sbb
shl
ja
popa
push
inc
sub
imul
push
lret
mov
xchg
imul
inc
out
xor
add
leave
fsubr
add
lock
test
or
daa
mov
jp
insl
sti
xchg
lret
xor
cmpsl
mov
push
sbbl
or
cmp
sbb
cmpsb
stos
sbb
repnz
xchg
in
jecxz
test
ljmp
pop
gs
mov
push
add
cmc
sub
and
xchg
cmp
mov
jbe
movsl
ds
xchg
mov
add
orb
ret
stc
dec
xchg
xor
shrl
jge
nop
repz
pop
mov
mov
movl
jbe
xor
je
inc
pushf
or
out
in
sub
jmp
xchg
cmpsb
and
rcrl
adc
inc
mov
xchg
cli
sbb
adc
adc
fwait
mov
lock
lret
sub
xor
das
hlt
push
pop
ret
icebp
xchg
push
out
cmp
jb
push
sti
popa
shlb
std
cmp
cli
sarb
cmp
push
mov
jbe
into
loope
insb
sbb
and
insb
inc
sub
sbb
in
dec
fs
mov
das
flds
add
test
pop
pop
and
push
adc
shlb
movsb
mov
xor
popa
jecxz
and
sbb
cli
jnp
subb
arpl
enter
dec
shrb
test
jne
repz
cmp
add
bound
jecxz
gs
mov
into
mov
out
sub
aam
std
rorl
mov
jmp
cmp
add
push
icebp
or
add
dec
addr16
repz
mov
roll
push
inc
lahf
lods
adc
push
fcmove
cld
shrb
adc
popf
scas
decb
loopne
inc
dec
int3
adc
cmpsb
push
xchg
out
lods
jns
xor
ret
mov
fistpll
push
dec
cmp
push
pop
ljmp
pop
call
adc
aam
or
push
jl
stos
testb
adc
add
push
pop
ss
testl
jl
in
xor
inc
stos
mov
fs
dec
int
ret
jmp
movsb
push
mov
xchg
out
lea
mov
in
stos
dec
mov
adc
mov
xor
test
test
xchg
aas
push
mov
and
add
adc
enter
aam
or
pop
sbb
jb
out
out
sbb
add
icebp
arpl
xchg
or
out
mov
xchg
repnz
cmp
mov
fisubrs
adc
pop
dec
mov
bswap
push
jge
imul
add
fidivs
sbb
cmpsb
ds
mov
sub
lret
mov
adcl
mov
inc
sbb
movsb
cmp
cmpsl
mov
sub
icebp
fs
nop
outsb
adc
jbe
nop
jmp
and
test
jbe
xor
inc
js
dec
sub
xlat
dec
cmp
adc
loope
adc
push
scas
mov
ljmp
repz
jnp
fimuls
stos
lret
add
push
xor
lret
gs
gs
es
and
mov
cmpb
roll
ljmp
and
test
dec
jb
leave
push
cld
cmc
dec
enter
push
out
lret
data16
jl
je
inc
mov
inc
shrl
sbb
imul
sub
stos
fucomip
add
or
leave
out
mov
or
xchg
imul
int
add
ret
mov
fsubrl
xor
outsl
xchg
xchg
jno
sub
and
adc
mov
pusha
out
jecxz
pop
push
movl
cmc
pop
inc
push
sub
inc
lahf
mov
mov
lea
pop
das
jno
push
sarl
insb
mov
rcrl
xchg
in
sbb
scas
jns
dec
jge
sbb
lret
push
sub
hlt
bswap
lret
mov
pop
insl
sahf
movsl
pop
push
cmp
loope
loope
fstl
sub
ds
xchg
roll
fiaddl
lods
sbb
cmp
lods
pop
test
mov
or
inc
out
cltd
test
adcl
or
repz
inc
inc
inc
sbbl
inc
lret
aam
push
jb
jbe
loope
hlt
mov
arpl
fs
lret
push
dec
mov
aas
add
sti
dec
sub
leave
ror
mov
xor
mov
in
pusha
lea
sbb
xor
sbb
pop
inc
test
lock
xor
add
or
stos
jecxz
add
xor
cmpsl
mov
jo
sub
mov
xor
js
push
cltd
xor
push
scas
es
jno
popf
jge
fsub
ljmp
js
adc
sub
mov
adc
cwtl
pop
cwtl
jbe
mov
xchg
jle
mov
cmpsb
mov
ljmp
sub
adc
stc
mov
sti
lods
jnp
push
cmc
scas
outsb
stc
fiadds
mov
pop
inc
dec
and
push
je
int
push
fimuls
or
outsb
inc
cs
cmp
scas
in
mov
or
mov
jo
mov
sbb
imul
loopne
pop
add
sub
inc
xlat
jae
push
mov
mov
and
mov
xor
sbb
fbld
cmpsl
add
fsubs
sbb
sub
sahf
mov
inc
mov
xor
mov
and
mov
outsl
pop
dec
adc
lds
and
into
stc
pop
repz
movsl
sub
jno
call
xor
rcrb
sar
mov
adc
stos
dec
cmpsl
push
inc
shr
fcomps
and
sbb
sbb
out
push
mov
mov
gs
and
pop
xchg
jmp
stc
test
push
xchg
push
inc
cmp
and
testl
cmpb
mov
gs
leave
inc
sub
xor
or
sbb
cmp
pop
cli
sbb
out
adc
mov
jnp
ss
stos
mov
jns
cli
fmull
lret
or
int3
adc
inc
push
sub
iret
ret
outsl
pop
ljmp
fcoms
cs
push
repz
add
push
cs
sahf
jae
int
idivb
pop
pop
adc
out
mov
sbb
inc
cmpsl
aad
mov
ds
push
cmpb
es
dec
rorl
in
fldcw
cmp
clc
sti
adc
ret
xchg
lods
ret
jg
jmp
enterw
out
jle
jnp
pop
add
push
sysret
scas
sub
aam
xchg
sub
fimull
sbb
inc
push
ret
mov
shrl
fs
dec
cmp
in
lock
inc
mov
push
ja
xchg
and
imul
lret
cmp
xchg
and
xchg
aas
bound
cli
pop
cmp
mov
inc
out
mov
cmp
push
ds
push
sbb
pop
fwait
pop
test
inc
jno
adc
jp
dec
adcb
test
hlt
lahf
iret
adc
adc
sub
mov
pushf
add
jg
xchg
and
jns
pop
inc
sbb
test
push
fidivl
aad
or
stc
cli
mov
xchg
nop
into
aam
sub
pop
mov
fdivl
or
rcrl
xor
mov
lcall
add
inc
cmc
lods
mov
loopne
pushf
pusha
sub
sti
ror
xchg
repnz
stos
pusha
icebp
setle
aas
das
xor
clc
arpl
push
jb
dec
sbb
add
jne
mov
test
test
jbe
xor
or
inc
jp
outsl
pop
jb
or
mov
pop
icebp
loope
repz
jb
into
incl
cmpsl
lret
pop
xorl
push
pop
ja
add
fs
cmp
cwtl
hlt
stos
mov
mov
lcall
add
pop
stc
dec
rclb
mov
mov
jbe
lcall
pop
mov
add
ljmp
rcr
flds
fcmovnbe
xchg
repz
test
das
jbe
push
jg
lcall
sub
ss
sub
xlat
repz
in
dec
xor
fs
inc
mov
dec
jl
xchg
in
cmp
psadbw
mov
sbb
push
nop
lret
add
jne
xchg
dec
loope
adc
call
lods
push
and
pusha
js
inc
outsl
sub
movsl
leave
cmp
mov
xor
mov
xor
mov
mov
repz
shr
gs
ja
push
xchg
sbbb
inc
inc
inc
cmp
cmc
dec
adc
sbb
cwtl
xchg
movl
fsubrs
mov
daa
mov
inc
mov
stos
sbb
xor
lea
cmp
sbb
mov
add
ror
push
repz
lods
in
mov
popl
repnz
mov
pop
sub
sub
sar
adc
jge
out
movsb
fisubl
aas
mov
cmp
dec
aas
pusha
je,pn
pop
fst
stos
out
inc
jns
es
lcall
psrlw
gs
pop
sti
xchg
push
imul
fs
inc
shl
icebp
mov
inc
lods
fstps
nop
and
mov
mov
cmc
lret
rorl
adc
cmc
aaa
mov
push
lahf
dec
jnp
or
sbb
int3
xchg
int
pop
pop
cs
mov
lock
xchg
fildl
push
shrb
jl
jbe
jns
cmp
es
daa
jae
sub
iret
dec
xor
xchg
xor
push
ss
add
shlb
xchg
xor
fcomp
rcrl
ret
pop
in
add
icebp
or
mov
fsubr
and
ja
pusha
inc
movswl
sahf
xchg
popf
inc
fcmovbe
pop
outsl
push
sbb
push
push
push
pop
sub
in
out
lahf
out
add
adc
daa
or
mov
loopne
inc
insb
xchg
scas
lahf
cmp
repz
lcall
push
sbb
adc
push
outsl
aad
jno
sahf
leave
mov
inc
pop
push
mov
jmp
mov
hlt
sbb
popa
pop
leave
jne
jecxz
add
scas
lds
add
mov
cld
push
ljmp
fcmovb
pop
sbb
pushf
arpl
aad
dec
inc
fidivrl
mov
dec
shrl
jo
push
andl
and
loope
icebp
pop
mov
ds
test
dec
imul
aas
adc
test
test
add
cld
dec
fadds
leave
popf
xchg
out
testl
stc
mov
enter
mov
xchg
sbb
sbb
leave
jbe
pop
insb
jbe
negl
insl
xlat
inc
pushf
test
mov
xchg
shll
scas
bound
mov
cltd
dec
sub
pop
shr
enter
test
cmp
cmpsl
sub
inc
stc
lcall
fcoms
loopne
mov
call
mov
dec
outsb
push
xlat
mov
imul
lods
addl
popa
test
sub
clc
dec
jg
iret
mov
movsl
xchg
push
xor
fdivs
mov
test
pop
jl
call
jp
pop
cwtl
sub
outsb
in
xor
mov
inc
outsb
pop
ljmp
outsb
decl
and
cmc
nop
mov
sbb
mov
xor
je
cmp
dec
std
dec
sub
mov
and
mov
popa
dec
das
inc
icebp
mov
inc
mov
adc
in
lret
cmp
jb
xchg
adcl
outsb
jb
or
mov
icebp
std
scas
adc
es
xchg
add
xchg
xchg
test
pop
fsubrl
jnp
fwait
lahf
add
jge
cmp
jb
pop
mull
jnp
icebp
pop
dec
push
pop
pop
xchg
sti
cmp
je
sub
push
adc
lcall
cmpsl
roll
clc
cmc
add
in
repnz
xor
shll
call
pusha
clc
popf
loope
mov
in
push
lea
xor
xchg
mov
stc
cs
mov
xor
dec
lods
xlat
ds
xchg
adc
dec
outsb
dec
int
pop
sub
in
dec
push
fdivl
and
scas
pusha
mov
and
xor
dec
inc
pusha
adc
mov
cmp
sbb
ret
fyl2x
xchg
xchg
push
out
dec
inc
aas
mov
out
aad
mov
mov
inc
jbe
bnd
sub
and
xchg
push
lock
inc
mov
daa
out
jp
mov
lods
add
mov
jne
lcall
test
iret
pop
in
mov
jmp
arpl
fdivrs
push
mov
imul
mov
ss
loope
inc
addr16
cs
fldl2t
mov
imul
push
cmp
pop
push
mov
add
push
or
jmp
adc
adc
ja
pop
inc
adc
arpl
pop
test
negb
aam
out
lods
sbb
das
rcr
cmp
cmp
pop
push
insb
sbb
mov
xor
mov
sub
sub
cmpsb
imul
jg
and
sbb
sarb
scas
cmpsb
stc
mov
jb
movsb
mov
rorl
sub
aad
iret
insb
popa
mov
aad
add
in
loop
fdivrl
jecxz
sti
popf
or
cmp
push
pop
fbstp
clc
mov
sbbb
sahf
outsb
push
shlb
xlat
adcb
rolb
mov
sarl
orb
mov
mov
inc
lahf
mov
jmp
roll
int3
gs
dec
fistps
les
adc
les
and
adc
into
stos
sbb
jne
mov
scas
pop
inc
cmp
dec
mov
stos
adc
jle
mov
leave
rcrb
and
leave
int
ret
imulb
andl
rol
inc
out
imul
divl
cli
inc
sub
lods
ret
xor
mov
out
popf
jb
fidivrs
sbb
or
cmovne
pop
cmp
enter
ja
stos
pop
ds
push
addr16
jno
mov
test
xor
add
adc
push
push
ljmp
push
mov
push
push
xlat
mov
cli
leave
loop
push
sub
fsubrs
arpl
ja
movsb
cmc
fs
scas
lcall
stc
jge
sub
sbb
mov
movsl
push
cmp
loop
jno
data16
pop
mov
mov
adc
lret
push
mov
pop
pusha
in
das
lret
loop
inc
icebp
pop
xor
inc
mov
dec
xchg
mov
lods
xchg
orb
aaa
cmp
scas
iret
xchg
mov
push
cwtl
or
sub
scas
jnp
insl
nop
dec
xchg
mov
sub
icebp
jno
movsl
fsubrp
roll
lock
aam
fwait
mov
popa
jg
aad
inc
movsb
add
or
xor
sbb
mov
ljmp
int3
fucomp
jbe
or
dec
fstp
cs
iret
xor
cmp
pop
pop
arpl
jno
gs
out
jb
cmp
insl
mov
lret
push
pop
sbb
mov
sarb
stos
lcall
jae
popa
cmp
into
sbb
aaa
daa
in
pop
sbb
sub
cli
std
addr16
push
jns
hlt
or
sahf
ja
mov
lds
shrb
adc
shrl
test
dec
sub
imul
fistpl
push
jg
clc
mov
dec
inc
scas
pop
cmp
push
pop
adc
mov
fwait
jb
mov
mov
add
pop
out
call
jle
lret
xchg
sbb
jl
bound
outsl
fimull
mov
lea
cld
mov
push
stos
inc
push
popf
and
adc
popa
sub
jmp
jg
lahf
fwait
dec
mov
outsl
jmp
cmp
arpl
loop
add
and
push
mov
sbb
jecxz
popa
dec
xchg
aas
scas
pushf
test
out
adc
mov
adc
fldcw
aaa
mov
bound
repz
loopne
inc
cs
add
cli
cld
mov
mov
mov
inc
outsb
clc
xchg
push
in
mov
pop
rorl
cwtl
in
inc
scas
jp
loope
mov
pop
int3
ret
and
repnz
gs
pop
or
push
lock
fucomip
pop
mov
sbb
mov
in
lods
repz
scas
imull
lret
aas
or
movsl
sub
and
adc
add
stos
lcall
push
cmp
sbb
jnp
cmp
mov
mov
jg
popa
ret
gs
dec
in
mov
loopne
sub
orb
pop
xor
nop
ja
fwait
add
sub
sub
xchg
setge
leave
cld
mov
es
pop
sub
mov
mov
or
jmp
popf
leave
xor
aas
jecxz
jne
pop
lods
push
sub
sti
push
daa
aaa
adc
mov
fs
dec
jg
mov
xor
negl
sbb
dec
inc
sub
notl
dec
ret
sub
test
scas
mov
fstps
jns
js
movsb
out
sub
fs
mov
or
xchg
jne
insb
mov
loop
add
add
loopne
cmp
popf
and
xlat
dec
xor
xchg
mov
mov
xor
inc
cmp
adc
popa
dec
cltd
or
and
push
push
sub
jb
sub
mov
pop
pop
fnstcw
cmp
mov
lret
jp
pusha
loope
xor
jns
adcb
jmp
shll
pushf
push
xor
or
les
sub
scas
stos
mov
jno
mov
repz
inc
ffreep
mov
mov
ret
lret
gs
ret
sbb
push
cwtl
negl
data16
push
dec
jns
sub
fcmovb
cld
mov
mov
imul
stc
pop
mov
pushf
stos
mov
jns
push
dec
mov
dec
mov
dec
sub
incl
ss
add
push
ss
add
dec
cmpsl
lret
idivl
or
cmpsb
pop
ret
popf
mov
pop
xor
pushf
mov
mov
xor
stos
and
cmpsb
xor
popf
xchg
bound
idivl
adc
jge
andb
mov
pop
jmp
sahf
mov
leave
dec
inc
loope
jne
clc
mov
int
push
lods
add
stc
call
fldenv
sub
sub
data16
sbb
jmp
int
ss
pop
adc
popf
repnz
idiv
jmp
mov
mov
lods
stos
push
cmpsb
inc
es
push
mov
ficomps
repz
add
adc
mov
mov
fadd
jbe
out
xchg
rcll
push
and
out
mov
cli
cld
pop
cltd
in
mov
dec
xchg
gs
cmp
add
rorb
mov
mov
pop
test
xchg
sub
add
int
jge
cltd
jecxz
mov
mov
sub
in
adc
cmpsl
lret
mov
cmp
in
clc
jo
repz
cld
sub
push
cmc
jl
cli
add
cmc
insb
dec
mov
inc
sar
fdivs
mov
push
jg
lods
xchg
movsb
or
cltd
stc
je
hlt
pop
mov
sbb
xorb
shrl
arpl
jne
inc
lea
imul
xor
clc
sub
pop
iret
or
movsl
pusha
dec
cmp
sti
jecxz
cmp
jecxz
ret
mov
pop
mov
insb
int
xchg
sub
mov
addr16
jns,pn
ret
das
adc
push
mov
mov
mov
inc
adc
xchg
mov
adc
mov
mov
add
decb
mov
cwtl
push
xlat
mov
cmp
out
or
mov
cli
mov
fisttpl
push
xchg
sub
mov
xor
movsb
imulb
orl
repnz
lret
mov
dec
mov
in
inc
adc
cmpsb
sahf
insl
jmp
scas
lods
insl
push
lcall
sbb
jl
lock
fsubr
rorb
or
push
and
jmp
gs
push
mov
mov
jbe
push
push
scas
and
mov
push
and
loopne
sbb
xor
mov
jae
outsb
addr16
imul
sti
xor
js
mov
dec
inc
fcomi
inc
and
xchg
mov
push
jg
mov
in
mov
aad
lret
dec
icebp
dec
jge
rcll
fcmovb
test
lds
cmpb
jae
mov
jb
push
cmp
nop
mov
aas
xchg
push
push
insl
popa
xchg
jno
cmp
ror
mov
loopne
push
pusha
and
pop
push
or
in
xchg
inc
and
fwait
xchg
aam
mov
mov
lock
ja
pop
jmp
fstp
test
mov
enter
mov
or
in
adc
or
push
ds
inc
aam
xchg
out
das
xlat
insl
repz
ret
jle
add
fimuls
jae
mov
sahf
out
sub
aam
into
mov
sub
adc
mov
fmuls
outsl
outsb
mov
leave
iret
loope,pt
aam
cwtl
sub
adc
jge
mov
out
sbb
ffreep
sub
mov
jbe
dec
lea
push
sbb
cld
lods
xchg
cltd
cmp
pop
adc
leave
mov
ss
xchg
cmp
mov
inc
test
jl
outsb
insb
in
js
out
das
aas
mov
mov
xchg
cmpsb
pusha
xchg
cmp
xor
fmulp
scas
test
ret
ds
mov
les
mov
xchg
and
xchg
loopne
push
test
inc
ret
dec
andb
rclb
aas
xchg
push
jno
fldcw
or
pop
pusha
xchg
mov
sub
negl
push
inc
test
test
cs
rclb
and
jbe
xlat
inc
ja
xchg
outsl
lcall
inc
cli
js
pop
adc
xchg
clc
outsl
repz
mov
mov
sub
or
sub
pop
mov
xchg
jno
jno
jge
mov
and
sbb
ljmp
mov
aas
cmp
ljmp
push
inc
sub
popa
pushf
xor
inc
mov
nop
and
jmp
repz
sbb
fisubl
push
data16
shll
jl
sub
add
js
adc
jl
push
pusha
shl
dec
arpl
xor
or
cmp
stos
pushf
cmp
popf
inc
cmpb
fwait
sbb
mov
test
jno
cmp
enter
lods
add
outsl
push
mov
cmpl
jp
pushf
rcrl
push
xchg
add
jmp
xchg
xchg
lret
int
push
sub
jnp
push
pop
xchg
xor
add
and
adc
scas
call
scas
xor
aam
subb
js
lea
hlt
dec
dec
jmp
arpl
jp
add
ss
adc
sub
pop
or
cmp
and
cmovnp
pop
adc
jae
mov
push
sub
jle
pop
out
add
and
push
add
add
in
jne
inc
cmpl
icebp
pushl
sub
testb
xchg
and
loop
nop
lret
jb
loop
pop
xlat
sar
ret
mov
out
mov
sarb
stc
inc
add
xchg
adc
lds
divl
push
xor
out
sub
sarb
sbb
repnz
mov
loope
sub
dec
mov
mov
add
xchg
mov
xchg
popf
xor
jne
or
stos
jae
xlat
int
mov
xchg
ds
scas
or
jo
nop
cli
adc
pop
add
outsl
mov
jnp
insl
inc
xorb
dec
xchg
mov
stos
into
adc
bnd
add
pop
mov
adc
out
push
mov
mov
addr16
test
fldcw
jmp
popa
mov
push
lock
push
cld
movsl
jge
pushf
orb
pop
popf
ja
inc
jne
pop
shrl
push
dec
fnstenv
xchg
fdiv
jne
testl
fcomip
xor
push
jne
cmpsb
incb
shll
data16
icebp
push
pop
ja
into
into
mov
sub
sub
fistpll
jmp
adc
stc
mov
or
ds
imul
mov
mov
lret
cmp
jo
loopne
jecxz
cltd
mov
add
aaa
andl
push
adc
dec
lea
add
bound
add
jo
add
add
fs
inc
stos
jg
push
push
mov
rclb
fdivrs
repnz
mov
andl
jle
mov
out
xor
sub
and
test
mov
pusha
and
fiaddl
sbb
or
int3
push
mov
pop
js
jle
das
jmp
and
inc
sbb
testl
hlt
shr
shrl
cmp
push
call
test
mov
xor
sbb
sub
insl
test
pushf
adc
popf
adc
mov
add
sbb
dec
jg
out
data16
icebp
inc
enter
call
shlb
pop
mov
lahf
gs
pop
cmp
aas
rolb
or
hlt
lret
jp
cmpb
pop
jnp
rorl
push
add
into
mov
push
jno
arpl
in
inc
out
test
das
xor
imul
and
inc
sbb
add
sub
mov
lcall
and
imul
popa
scas
adc
dec
aam
cmpsb
or
lret
ja
mulb
arpl
stc
mov
mov
jmp
fmull
sub
push
inc
cltd
adc
pop
xchg
jge
fnstcw
push
jnp
adc
jae
mov
shlb
pop
leave
sar
xchg
pop
adc
push
mov
jl
lods
mov
icebp
and
dec
mov
push
mov
push
dec
into
negb
comiss
adc
xchg
fdivs
sbb
xchg
pop
mov
and
mov
out
pop
iret
fsubl
subl
pop
pop
jbe
cmp
cmp
jle
les
xchg
stc
ret
xchg
std
jae
inc
jbe
jnp
push
mov
sbb
add
add
adcl
push
hlt
pop
fwait
imul
int3
loop
movsb
lea
popf
test
movhps
mov
mov
dec
hlt
cltd
icebp
rorl
lahf
hlt
xor
jo
push
push
int
pop
sbb
mov
xorl
sbb
pop
mov
mov
daa
push
and
mov
cwtl
sbb
mov
jno
fcoml
imul
push
jns
jp
inc
pusha
fstpt
xchg
out
imul
out
cmp
inc
hlt
cmp
ret
jge
mov
cwtl
dec
std
pop
sbb
or
addl
push
negb
xchg
jns
mov
and
push
ds
xor
xchg
cmp
test
push
adc
sbb
xor
fwait
cli
or
cmp
rolb
pop
lcall
mov
sub
inc
mov
sub
pop
fs
mov
stos
dec
insb
jmp
pop
xchg
mov
in
lahf
mov
fstp
inc
mov
dec
jl
fdivs
mov
mov
inc
jns
cmp
jnp
push
leave
inc
fldt
push
xor
mov
cmp
dec
lret
in
push
jp
mov
outsb
dec
jnp
scas
push
stos
lds
pop
jmp
jnp
inc
fiadds
cmp
call
push
and
inc
pop
js
imul
imul
or
rolb
pop
and
cmp
mov
enter
enter
rclb
sub
pop
lds
pusha
and
pop
sbb
cmp
gs
aaa
ljmp
scas
inc
cmp
movsl
fistpl
jle
cmp
inc
aas
addr16
hlt
out
mov
in
mov
pusha
jge
push
and
xorl
adc
test
out
nop
sub
mov
adc
popa
sub
insb
daa
in
mov
cld
xchg
outsb
xchg
je
je
out
insl
aad
or
mov
jp
pop
fcomps
arpl
es
push
dec
adc
lret
outsl
add
push
das
push
cmc
sub
xchg
out
sub
push
enter
sahf
test
iret
or
movsb
in
inc
enter
adc
gs
xchg
loope
lds
mov
sahf
loopne
inc
mov
cmpsl
negl
in
or
les
jo
mov
jb
aaa
pop
andl
scas
popa
sub
mov
or
mov
rcrl
mov
ljmp
ja
inc
adc
cmpsl
pop
or
lods
test
cmpsb
int3
pop
pusha
push
lcall
sub
or
sub
and
jnp
cwtl
jmp
or
inc
pop
cmc
mov
sti
xor
insb
dec
mov
leave
dec
or
dec
in
fimuls
pop
pusha
pop
cmpsb
stos
push
pushf
inc
fsub
push
clc
dec
repz
idivl
dec
sbb
mov
inc
jge
scas
sbbb
iret
push
nop
sti
andl
cmp
add
mov
scas
cli
fneni(8087
inc
sbb
ss
lcall
jecxz
lret
pop
repnz
lmsw
lret
bound
mov
aam
jge
arpl
ja
xor
mov
mulb
or
or
and
xchg
adc
stos
repnz
lret
and
les
push
arpl
cs
clc
shll
push
xlat
es
cli
jecxz
adc
mov
movsl
mov
mov
rcl
test
push
push
adcb
adc
mov
inc
pop
dec
fstpl
mov
lock
dec
jb
ret
cmp
pushf
popl
xor
pop
mov
fdivrs
pop
test
cwtl
outsb
movsl
jbe
jg
or
stc
mov
in
xchg
jns
outsb
sti
test
cmp
cmp
les
cmp
xchg
pop
ds
fisubs
jne
cld
push
xor
mov
xor
or
ret
movl
xor
cmp
shrl
xchg
mov
xor
movsb
mov
clc
sub
in
dec
and
dec
fstpl
push
mov
inc
mov
lret
mov
inc
repnz
lods
aam
sbb
shll
std
jae
push
mov
mov
and
repz
insb
imul
pop
test
push
mov
stos
or
xor
sti
movsb
or
sbb
jmp
pop
or
cmp
mov
dec
cmp
cli
sub
sub
or
out
mov
les
nop
mov
lock
inc
les
adc
ds
stos
in
movsl
movsb
jae
aas
cmpsl
pusha
ds
aaa
std
inc
mov
mov
enter
xor
lret
arpl
push
test
push
out
fistpll
mov
aam
mov
fisttps
loop
ds
pop
loop
aas
test
jo
push
rorb
and
cltd
xchg
icebp
xor
fstps
adc
and
add
mov
push
adc
pop
sahf
fcomps
outsb
sub
ljmp
mov
mov
push
mov
scas
call
popa
dec
sbb
in
xor
cmp
jno
mov
mov
xchg
lret
sub
aam
jne
xchg
gs
leave
or
sarb
out
les
out
repz
aam
pop
push
lea
xor
dec
sub
es
pop
mov
add
dec
int
cli
enter
adc
fwait
stos
mov
insb
mov
xchg
or
pushf
outsl
fnsave
dec
lods
jnp
xchg
test
aam
outsb
dec
les
loope
sub
add
dec
adc
test
xor
fs
decb
adc
imul
rorb
aam
lcall
jae
mov
pop
int3
cmpsb
in
test
fldt
xchg
mov
add
int3
outsb
and
pop
sub
add
aam
imul
mov
pushf
imul
pusha
and
ljmp
sub
incb
bswap
xor
repz
mov
orb
cmp
push
push
and
ds
sbb
loope
add
jno
cmp
sub
fs
push
xchg
popf
lea
cmp
movsl
add
fwait
adc
testb
hlt
pop
sbb
cmp
dec
dec
clc
inc
sti
add
jl
pop
out
bound
pop
cmc
lods
cltd
popf
sub
popa
sbb
mov
cld
cs
jle
add
push
dec
or
pop
cmpb
fwait
push
pop
in
inc
or
sbb
in
mov
in
and
test
and
jge
xor
pop
clc
jg
cli
aas
gs
out
lds
popl
jle
icebp
inc
inc
and
std
mov
mov
dec
jbe
lds
sbb
cmp
out
das
jp
mull
cmp
xor
push
mov
adc
cmp
mov
jge
and
int
iret
add
stos
jbe
ficompl
testl
push
lret
iret
or
sahf
mov
out
push
xchg
pop
ljmp
add
scas
xchg
dec
xor
push
adc
insl
repnz
sub
lcall
sbb
aad
mov
adc
enter
das
pop
fiaddl
das
sbb
mov
cmp
sbb
dec
xchg
fidivrs
pop
mov
xchg
loop
sub
adc
xor
add
xchg
lock
inc
insb
sbb
ret
clc
mov
dec
call
mov
mov
xor
fmulp
fdivp
inc
movsb
sub
pop
sbb
mov
sub
push
adc
bnd
das
cmp
pop
sub
je
fiadds
ret
ror
pop
cmp
xor
xchg
aad
int
test
xchg
xchg
fcom
cmc
out
pop
mov
insl
pmaddwd
mov
inc
dec
data16
mov
iret
push
add
add
xchg
out
pop
sbb
subb
or
xor
mov
adc
stos
mov
jg
cmp
mov
popf
pop
inc
pop
cmp
xor
add
popf
push
pop
addr16
sahf
fisttps
cli
pop
sbb
outsl
call
shr
push
jmp
insl
push
test
dec
push
ss
cld
jg
pop
pop
mov
sbb
loopne
rcrl
movsl
jb
jmp
sahf
or
outsb
lods
push
popf
cmp
push
add
std
or
cltd
and
sub
push
call
lea
jns
fsts
popa
addr16
or
and
aad
flds
push
push
cmp
stos
shrl
in
adc
subl
sbb
xchg
cli
push
cmp
jns
lds
addr16
add
test
addb
inc
dec
rol
pushl
ret
xlat
clc
cmp
cmp
sbb
xchg
sbb
sbb
fdivrs
or
jmp
jno
sti
test
xorl
mov
or
push
hlt
push
cs
es
pop
sahf
in
jg
orl
push
in
adc
cmc
fcoms
xor
jae
cmc
outsb
sbb
cld
test
inc
adc
int3
mov
hlt
and
insb
aam
add
fwait
pop
sub
mov
adc
mov
cmp
test
dec
jb
jo,pt
push
sbb
aas
test
aam
adc
mov
xlat
cld
and
sarb
push
xchg
out
cmpsb
cltd
xchg
in
std
adc
mov
addps
jbe
loope
push
pusha
pusha
adcl
adc
xchg
cmp
rorb
andb
or
push
mov
mov
or
and
xchg
test
fst
inc
int
in
fdivrl
clc
nop
js
mov
xchg
mov
xchg
mov
cmpsl
inc
push
stos
add
cli
mov
scas
fs
popf
inc
xor
aam
inc
mov
das
and
sub
mov
add
mov
add
js
jne
aas
pop
add
mov
popf
inc
pop
cltd
sti
sub
nop
dec
loop
sbb
call
pusha
ljmp
cmp
lret
addr16
sti
lods
mov
seta
adc
mov
ret
sub
mov
repnz
sub
mov
scas
mov
push
sahf
repz
xlat
pop
pushf
mov
into
lods
test
adc
stos
jo
xor
in
ficomps
ss
neg
adc
push
fildl
nop
je
sub
adc
mov
xchg
test
les
mov
add
xchg
or
jp
xchg
pop
jp
fdivs
data16
xchg
stos
mov
mov
cmc
repnz
adc
mov
xor
das
outsb
jno
fidivrs
jge
lds
cmp
lods
adc
ja
cmp
adc
nop
cmp
and
bound
mulb
sbb
sahf
cmp
mov
lds
add
pushf
cld
test
pop
and
ret
push
outsl
shrb
aam
pop
in
mov
adc
lods
add
push
addl
pop
lahf
in
sbb
in
lret
jne
xor
jle
add
pop
ret
hlt
fs
out
imul
sub
cmc
cmc
scas
outsl
std
in
jle
hlt
mov
pop
in
stc
or
ljmp
mov
ja
sbb
mov
and
and
and
icebp
std
pop
movsb
push
addr16
push
jb
adc
inc
sbb
add
lock
jg
jbe
test
pop
xor
ret
xchg
jns
mov
out
dec
out
shll
cmp
dec
lds
mov
mov
adc
add
ja
sbb
fs
loop
mov
inc
pushf
add
inc
add
cmp
mov
push
jne
insl
movsb
stos
std
loopne
cmpsb
sub
arpl
or
dec
loopne
sub
mov
arpl
pusha
test
aad
xor
or
mov
ljmp
xchg
inc
aad
cs
push
mov
pop
pop
cmp
sbb
mov
call
repnz
push
sbb
imul
pop
add
mov
xchg
push
iret
repnz
xchg
cmp
scas
lock
cmp
or
sbb
mov
shr
xchg
push
and
fmul
mov
or
cld
out
jno
push
repnz
pop
cli
xor
lcall
sub
orb
icebp
dec
stos
and
mov
sbb
inc
jne
rcr
cld
loopne
xchg
cwtl
shlb
push
cmpsb
mov
or
mov
jnp
sub
push
imul
orb
and
fcmovbe
aaa
dec
pushf
cld
out
and
testb
fdivrs
daa
cmc
or
fstpl
cmp
gs
cs
sub
inc
repz
xchg
jb
scas
pushf
rcrb
and
push
mov
cmp
inc
or
and
aam
leave
sbb
push
testb
daa
subb
push
adc
adc
gs
out
adc
jmp
loopne
and
aas
mov
xchg
ficoml
lds
enter
rcrb
daa
inc
mov
sbb
xlat
test
xor
jle
xchg
movl
pop
jnp
mov
leave
jmp
in
sub
inc
stc
sub
movsl
cmpsl
mov
lahf
cld
aad
arpl
mov
pop
fldenv
addr16
pop
inc
jb
popf
sub
aas
xor
push
stos
or
mov
mov
dec
jno
call
mov
ss
or
xlat
jb
sbb
insb
inc
addr16
cmp
add
cs
jmp
mov
mov
and
aaa
mov
xchg
jge
add
lahf
in
add
leave
dec
lret
cmp
add
fwait
lret
ror
inc
cmp
rcrb
lods
dec
cmp
outsl
adc
pop
aad
push
inc
xor
les
arpl
dec
cltd
addr16
cmp
and
dec
dec
cmp
in
pop
xor
pop
cld
fisttpll
add
ljmp
pop
dec
adc
jp
xchg
leave
and
mov
dec
daa
test
loopne
adc
mov
mov
ja
or
inc
int3
sahf
inc
xchg
or
iret
mov
and
adc
enter
ficompl
mov
add
adc
loopne
lret
loop
ret
jmp
xchg
sahf
mov
or
push
jnp
loopne
push
mov
loope
clc
hlt
sub
add
xor
and
rorl
push
or
hlt
xchg
fnstsw
jno
push
pop
sbb
mov
pop
sub
xor
dec
addl
adc
enter
jmp
cs
cmp
mov
fistps
in
andl
xor
ret
fcomps
mov
xchg
shlb
pop
in
cmp
push
sub
or
imul
dec
test
jbe
lret
push
das
hlt
cmpsl
lret
dec
cmpl
xchg
bndstx
mov
inc
cmp
jnp
shlb
mov
mov
mov
and
mov
jge
das
repz
jl
mov
je
jnp
mov
dec
pop
or
sbb
clc
mov
inc
inc
sbb
xor
adc
mov
orb
rcrb
pop
test
push
jg
stos
cmpl
sarl
aad
cli
lret
test
and
and
cmp
sub
sbb
movsb
xchg
adc
mov
mov
int3
sub
jnp
xchg
mov
bound
test
loopne
add
xor
xor
and
mov
test
pop
lods
iret
les
repz
sub
mov
jo
push
mov
mov
and
sub
pop
pop
iret
shlb
mov
cltd
andb
push
jb
push
and
repz
push
in
adc
xchg
stos
cmp
push
inc
adc
lss
add
push
shrl
mov
pop
mov
fdivl
loopne
mov
loope
leave
stos
jge
sbb
add
insb
je
aaa
rcl
icebp
in
mov
pop
adc
jo
jns
jp
nop
insl
movsl
pop
outsb
sti
and
ficoms
push
insb
aam
scas
jb
adc
loop
push
enter
shll
popf
inc
sbb
inc
cs
jb
inc
inc
sbb
lret
push
ficomps
aaa
pop
out
dec
int
test
and
idivb
clc
std
xchg
mov
xor
out
jo
pop
mov
jnp
pop
cmpsl
mov
aam
mov
in
mov
add
xor
neg
shrl
loop
in
adc
stos
cmp
enter
push
movsb
add
push
jo
stos
insb
mov
icebp
fstpt
mov
fcomi
repnz
push
fwait
sbb
ret
mov
das
out
dec
out
cmp
add
popf
inc
xchg
imul
in
xor
mov
aad
sub
out
les
bound
xorb
jnp
test
push
mov
leave
pop
inc
push
xchg
test
push
rolb
gs
pusha
xchg
stos
inc
push
in
in
adcl
mov
scas
mov
outsb
jo
and
xor
adc
pop
xchg
pop
psrad
xchg
pushf
icebp
pop
or
cmpb
xchg
aaa
pop
jg
cmp
lods
jle
dec
scas
shr
pop
sub
mov
xchg
sarl
mov
ret
ljmp
insl
dec
cmp
lcall
fisttps
ss
jmp
lock
ret
nop
mov
fisubl
adc
std
sbb
push
pop
iret
imul
inc
in
cmp
sbb
adc
icebp
stos
mov
sub
loop
fstps
jge
mov
dec
add
dec
sahf
and
pop
in
scas
les
xchg
mov
cld
dec
adc
mov
cld
mov
jb
fisubl
out
mov
test
not
ljmp
xchg
gs
or
sub
shlb
sub
es
xor
mov
sub
jle
shl
pusha
cmpl
pop
jmp
dec
ljmp
scas
das
daa
into
sub
stos
fnsave
fildl
scas
cmpsb
jg
call
mov
sub
mov
dec
pop
push
sbb
push
fs
jg
mov
ret
imul
add
pop
testb
aam
out
pop
add
mov
mov
pop
jp
repz
jbe
lea
and
imul
faddl
pop
cmp
xor
mov
ds
mov
cmpb
pop
mov
inc
shll
jl
addr16
mov
imul
sbb
ret
adc
stos
inc
cmpsl
push
rorb
pop
mov
push
lcall
add
push
sbb
daa
cmp
int3
mov
sti
push
lods
mov
mov
pop
cltd
lret
int
call
imul
fidivrs
bound
sub
mov
push
lret
out
cmp
enter
jge
dec
or
je
or
jp
dec
push
call
mov
pop
rcrl
mov
aaa
add
rcrl
out
sbb
das
cli
fcmovb
mov
int3
push
mov
adc
sub
dec
jmp
mov
rorb
jns
cmpsb
xchg
insl
ljmp
stos
maskmovq
idivl
and
repz
adc
ja
lret
shr
pop
mov
jge
and
dec
in
scas
lds
inc
adc
sub
push
pop
rcrl
sahf
mov
lahf
repz
sub
ret
push
push
sub
pop
mov
into
fwait
inc
repnz
inc
push
and
jne
inc
or
fdiv
rcrb
mov
call
addl
mov
mov
int
in
mov
adc
rorb
andl
decl
inc
or
xchg
out
sbb
jne
and
dec
ja
lcall
repz
sub
subps
sbb
insb
mov
clc
add
sbb
jle
pop
std
sar
jle
inc
mov
xor
cmp
cmpsb
push
cmpsl
dec
stos
inc
lret
int3
xchg
xchg
mov
lret
xor
sarl
mov
mov
mov
stos
xchg
add
rorb
inc
jne
xchg
sarl
int
xor
scas
adc
jmp
ret
mov
jle
rcl
sbb
shlb
xchg
inc
or
lods
xchg
jbe
shrl
shll
loopne
and
push
pop
ret
in
pop
mov
cmp
or
call
arpl
jmp
mov
enter
outsb
inc
negb
sahf
sbb
inc
rcr
xchg
or
ret
push
popa
pop
inc
inc
lcall
mov
xchg
mov
inc
xor
pop
nop
add
or
mov
lods
js
imul
daa
popf
hlt
enter
push
les
xor
stc
inc
mov
jge
aas
sbb
ret
xor
repnz
addr16
cli
out
fimuls
test
pusha
iret
dec
mov
mov
sub
faddl
mov
testb
mov
push
test
inc
sahf
xchg
add
out
insl
mov
xor
dec
push
push
cwtl
jge
mov
lcall
outsl
inc
sbb
aam
xor
stos
xor
mov
je
int
cmp
mov
and
xchg
lods
mov
push
xorb
rolb
pop
cmc
sub
inc
mov
es
ror
out
pop
pusha
jo
sbb
sbb
lea
in
inc
sbb
pop
mov
and
sbb
jg
dec
ja
inc
int
out
lds
xor
xchg
mov
cmpsl
mov
dec
daa
fnstcw
test
sub
sqrtps
lock
dec
mov
insb
jmp
test
xor
repz
aam
sub
mov
add
push
xor
jb
int3
push
popa
mov
pop
imul
jno
shr
nop
cmp
pushf
push
cmpsb
add
push
cmp
xchg
dec
bnd
test
jno
mov
mov
push
jo
outsl
test
xor
aaa
stc
int3
push
push
in
aaa
push
jo
das
popf
jge
and
and
add
adc
je
leave
adc
pop
inc
mov
imul
pushf
pop
mov
and
xor
inc
loopne
adc
sub
cli
sbb
loop
aaa
jae
adc
test
test
inc
xor
inc
shll
pop
cmp
aad
xchg
sub
push
ss
hlt
lcall
push
jb
sub
aaa
jne
jle
add
mov
xor
fcmovnu
ss
mov
sti
dec
pop
adc
sub
scas
mov
lcall
dec
int3
lret
test
data16
lretw
pop
xor
xor
ds
xor
loop
das
bound
in
stos
cld
shrb
jb
daa
popa
out
cmp
rcrl
movsl
dec
repz
sbb
stos
repz
rcll
test
xchg
std
test
jge
pop
in
pop
out
jmp
negl
aam
inc
or
dec
cwtl
aad
loope
or
or
sub
push
ret
xchg
outsl
mov
sbb
fcompl
sahf
mov
lods
stos
xchg
fimuls
pop
ja
push
ret
in
inc
add
cmpsb
btr
pop
mov
inc
cmp
mov
add
sbb
les
jge
mov
fmull
in
out
fs
adc
push
loop
je
inc
xchg
scas
mov
mulb
adc
add
mov
scas
cmpsl
mov
sahf
lea
mov
sub
mov
sbb
xchg
ret
repz
test
subl
pop
jae
test
pusha
and
inc
mov
movsl
sbb
xchg
in
pop
jbe
pop
cmp
mov
fdivrl
cmp
js
icebp
mov
xor
insb
lcall
sbb
sti
imul
mov
movsb
ficoms
xchg
mov
jno
jge
in
arpl
pop
cld
cmpsl
fst
imull
dec
mov
fsubs
cmp
not
push
or
mov
and
dec
mov
lods
or
and
clc
xor
inc
jmp
xchg
xchg
adc
daa
sbb
push
movsl
sahf
mov
inc
push
xlat
pushf
dec
out
cwtl
cmp
sbb
mov
shl
pop
pop
jge
lahf
push
sti
add
insb
xor
push
xchg
mov
stc
and
cmpsl
cmpsb
inc
gs
clc
pop
pop
push
data16
mov
xchg
int
pop
popf
rorl
fsub
or
test
push
lods
and
cmp
add
iret
cmp
inc
push
push
mov
sbb
fimull
stc
cli
and
popf
and
pushf
push
loop
push
into
inc
into
adc
xor
sbb
cmp
mov
fcompl
add
clc
sub
jbe
fxch
push
pop
xchg
rcrb
dec
cltd
inc
cmc
mov
pushf
xor
into
sbb
test
mov
outsb
jne
mov
and
mov
shrl
add
xchg
mov
jge
add
mov
stc
dec
out
fdivl
xchg
lock
mov
divb
jmp
inc
loopne
ret
push
adc
ljmp
jbe
sti
adc
jb
rol
daa
pop
xchg
push
psllq
mov
es
sbb
movsb
jae
push
and
pop
mov
cmp
imul
pushw
jle
jmp
mov
ror
adc
dec
dec
les
dec
test
pop
push
in
xchg
cmpsb
bsr
sub
rcl
mov
dec
cmp
push
pop
daa
push
dec
mov
xor
loopne
cmp
push
push
cmp
loope
shrb
nop
jmp
adc
roll
pop
pop
sub
sbb
outsb
clc
lods
call
mov
xchg
in
inc
scas
jle
addr16
daa
push
add
call
pop
add
mov
push
and
jo
icebp
cltd
adc
cmpsb
sbb
sub
cltd
add
and
pop
dec
test
mov
push
or
test
mov
pop
sbb
mov
jecxz
lods
mov
adc
cld
enter
int3
sbb
sti
popf
leave
mov
sub
clc
es
lock
sub
push
out
push
and
fmull
mov
pushf
test
or
mov
sub
test
inc
je
loopne
enter
push
inc
adc
lock
movsb
mov
mov
xchg
jmp
mov
cmpsb
ficoml
ret
xchg
xchg
bound
mov
pop
jnp
out
and
dec
repz
jmp
test
jae
sbb
dec
mov
loope
pop
sbb
pusha
xchg
inc
xor
add
iret
addr16
mov
pop
xor
jne
das
test
pop
ss
rcr
pusha
xchg
imul
pop
xlat
negb
jno
sti
mov
jl
aaa
xor
xchg
inc
xor
push
xchg
jae
sbb
jbe
jg
loop
cmc
fsubs
sbb
jle
xchg
enter
out
testb
add
aam
pop
jle
lahf
les
nop
inc
or
pop
addl
int
out
outsl
inc
inc
mov
ror
jb
shl
mov
icebp
rorb
shll
cli
inc
adc
jb
or
test
mov
cmp
sbb
cwtl
mov
add
inc
bound
scas
sti
mulb
ds
nop
or
jno
sbb
in
adc
push
out
pop
xchg
and
mov
pop
xor
ljmp
xor
dec
cmp
push
mov
sub
and
pop
hlt
cmp
sub
jo
xchg
mov
dec
sbb
pop
fcmovu
jg
inc
mov
adc
and
adc
inc
fs
mov
adc
inc
mov
in
mov
loop
mov
adc
lea
inc
jge
fwait
push
sub
and
loopne
lods
les
ffree
pop
pop
ss
insb
subb
rcrl
incb
and
mov
fs
dec
js
icebp
xor
mov
nop
cli
pop
ds
std
lea
mov
jle
cmpsl
sbb
out
call
mov
sbb
inc
sbb
and
mov
jmp
mov
aam
fsubrp
add
lret
movsl
xchg
jns
or
ret
dec
cmpb
loopne
cmp
out
and
mov
sbb
push
cli
scas
aas
mov
dec
lahf
inc
das
arpl
stc
mov
scas
shl
xlat
cld
adc
shrl
pminub
imull
hlt
and
outsb
jbe
xchg
mov
out
stc
test
mov
fstpt
imul
repz
shrl
neg
sub
jge
and
sbb
pop
mov
pop
mov
pop
ljmp
jae
push
push
test
repnz
jns
jmp
inc
inc
fidivrs
fwait
mov
push
addl
sbb
pop
in
popa
xchg
add
gs
or
lods
add
xchg
mov
lods
mov
push
mov
xor
cmp
jp
popa
cmp
jb
jne
pop
adc
add
stos
out
test
out
cmpsl
rcr
es
jne
lahf
mov
dec
call
ss
shrb
xchg
filds
adc
mov
insl
lcall
sbb
push
aad
sub
repz
jmp
fs
xchg
adc
mov
int
cltd
jno
cmp
sub
cwtl
pop
loope
andb
xchg
aaa
out
mov
mov
pop
std
in
cld
mov
add
adc
sbb
dec
aaa
lahf
jmp
shlb
sbb
push
insb
cmp
pushf
dec
pop
xor
mov
dec
sbb
mov
outsb
sahf
cmc
mov
add
xchg
scas
sbb
aas
sahf
jl
in
cmpb
cli
imul
cmp
gs
emms
out
mov
or
dec
ror
sbb
dec
dec
xlat
stc
jbe
imul
mov
push
jmp
fmull
add
push
mov
cmpb
jns
xchg
cli
push
fs
push
hlt
push
push
dec
push
mov
mov
addr16
xorb
and
jecxz
cmpsl
test
mov
xchg
push
test
xchg
add
sub
xchg
scas
out
dec
outsl
sbb
sub
xlat
movsb
roll
push
adc
es
fcmovu
jecxz
pop
into
add
mov
xor
js
leave
mov
popf
and
mov
ss
fists
or
mov
pop
push
pop
scas
push
cmp
xchg
flds
inc
std
mov
es
dec
fxch
aaa
sub
dec
cmp
push
lcall
pop
ja
jae
jmp
mov
popf
pop
fcoms
xchg
or
jne
add
pushl
cmp
pop
jb
daa
sahf
in
sarl
sub
sub
cmc
cmpsl
jo
pop
mov
push
push
push
int3
movsb
mov
inc
cli
pop
unpcklps
sub
mov
push
push
or
scas
inc
lea
loop
sub
jnp
pop
and
stos
popa
mov
pop
mov
dec
dec
pop
bound
mov
es
fcoms
fs
push
lds
hlt
loopne
pop
pop
push
adc
xorl
jne
int
sbb
cmp
inc
cmp
es
push
jno
add
sub
lahf
cmp
mov
idivl
setle
inc
pop
xor
loop
push
push
das
loopne
imul
adc
add
int3
std
push
xchg
into
mov
sbb
pop
cmp
xchg
mov
mov
or
daa
pop
xchg
dec
movsb
call
inc
ficomps
in
xchg
les
sbb
sti
xchg
fsubrs
mov
adc
xor
or
xlat
incb
arpl
adc
lcall
mov
cmp
test
jne
or
arpl
mov
inc
sub
out
jmp
sub
cmp
mov
lahf
pop
mov
xchg
inc
or
pop
int3
je
ds
cltd
daa
sbbl
pop
jg
shlb
lea
jg
enter
inc
mov
pop
adc
mov
aad
dec
bound
std
push
cmpsb
inc
push
fcmovnbe
cmp
scas
dec
cmp
cwtl
leave
scas
in
jb
dec
inc
pop
out
out
repz
insb
cltd
fisttpll
xchg
test
out
popf
movl
out
fs
xor
push
arpl
dec
push
lods
add
arpl
aad
outsl
mov
mov
cmp
in
push
scas
es
mov
test
mov
in
jle
sbb
rcrl
cwtl
cmp
icebp
xchg
mov
pop
mov
mov
cmpsb
pop
mov
std
mov
lods
cmc
cs
aad
and
shr
ret
stos
xor
je
push
shll
lea
lds
mov
clc
pop
cmc
xor
mov
leave
lods
mov
lcall
dec
sbb
adc
xor
frndint
mov
inc
pop
lret
mov
fimuls
mov
subb
jb
xchg
dec
popf
push
popf
mov
lds
mov
mov
xor
inc
rcrb
fcomp
clc
ret
xchg
mov
stos
mov
and
add
cs
push
sbb
aaa
cmp
ljmp
add
mov
dec
je
xor
cmpsl
inc
enter
push
repz
mov
sub
cmpl
xchg
mov
mov
inc
xchg
dec
adc
or
lods
xchg
in
jmp
push
int3
mov
jp
daa
lahf
jnp
cmp
lods
pop
adc
adc
iret
add
fidivrl
in
pop
loop
add
sub
push
addl
out
in
popf
xor
mov
xchg
mov
sbb
lret
lds
outsl
pop
dec
divb
aad
lods
adc
aas
xor
icebp
pop
mov
setge
int
rorb
inc
mov
pusha
subl
push
push
test
cmp
dec
dec
ja
inc
push
cltd
jno
pop
mov
ja
dec
mov
xchg
add
movsl
popf
les
int3
mov
add
mov
jns
push
adc
mov
cmp
daa
bound
dec
inc
ficomps
lahf
mov
rcll
mov
cmp
int
js,pn
xchg
iret
cli
fidivs
test
test
outsb
xchg
mov
add
dec
pop
pop
and
push
xchg
mov
nop
jne
and
lods
sub
adc
xchg
rcrb
push
xchg
xchg
js
jno
es
adc
pushf
or
cmpsl
std
int
mov
add
fcompl
lahf
dec
xor
fiadds
adc
out
inc
push
das
mov
into
adc
ljmp
sub
pop
sbb
dec
sbbl
ret
xchg
pop
push
stc
data16
js
mov
rcll
push
inc
into
cmpl
mov
das
test
pop
mov
cmp
inc
mov
inc
jg
jnp
lret
cmp
fcomip
push
add
or
leave
mov
add
xchg
add
in
xor
pusha
lcall
lret
pop
xchg
fstl
and
push
or
mov
cmpsb
xchg
jmp
push
sub
mov
pop
out
imul
or
push
cmp
int
aad
outsb
cwtl
jns
dec
stos
out
push
sbbl
adc
es
into
or
pushf
xchg
pop
push
or
data16
cs
out
pop
out
or
dec
movsl
xor
xchg
mov
cmp
arpl
or
test
and
push
enter
sub
jge
cld
jno
dec
push
lock
dec
pusha
insl
cmp
pop
jbe
hlt
mov
or
pusha
fstp
pop
inc
adc
mov
jne
fbstp
lds
shll
mov
push
int3
movl
movsb
or
rorb
mov
mov
ret
int
and
add
pop
cmp
add
mov
sbbl
lea
mov
std
ret
push
add
mov
sbb
add
lods
ds
mov
int3
and
sub
pop
push
jns
mov
lret
cld
sahf
fs
mov
mov
std
xchg
sub
popa
sub
pop
stos
jae
shll
mov
js
push
jne
mov
test
pop
int
adc
adc
add
add
sub
call
stos
adc
leave
dec
cmc
push
in
inc
xor
gs
xchg
push
inc
orl
push
dec
popf
pop
xchg
jns
test
mov
jmp
ljmp
push
mov
sarb
adc
lcall
add
pop
mov
fwait
sub
mov
leave
and
insb
sahf
push
xchg
pop
pop
movsl
dec
sub
hlt
mov
inc
std
movsl
pop
jae
sub
pop
imul
dec
dec
xchg
and
pop
xchg
jne
add
pop
cmp
mov
and
xchg
lods
pop
push
pushf
or
mov
push
jl
test
into
ret
cmp
cld
xchg
xor
sbb
mov
push
movsl
pop
sbb
int3
jnp
jg
test
pop
mov
inc
add
cltd
lcall
movb
stc
insl
push
lahf
lret
pop
jg
cmp
sbb
outsl
iret
jno
gs
sub
aam
repz
mov
xchg
jle
sbb
sub
dec
stc
pop
mov
xchg
das
pop
pop
mulb
mov
lods
cld
xchg
and
mov
pop
fs
and
fdivr
pop
mov
bound
sbbb
fsubrl
jle
jecxz
out
fcomps
popf
sub
or
imul
mov
pop
mov
stos
mov
mov
cmp
fidivl
mov
fucomp
mov
dec
and
aas
xor
jmp
nop
shrl
lahf
js
cmp
cs
sti
add
sahf
stos
dec
mov
fmuls
insb
out
dec
js
scas
pop
dec
inc
data16
or
sub
xchg
das
fildll
mov
clc
test
add
sarl
ret
fwait
test
lahf
bound
fcompl
icebp
inc
inc
xchg
adc
adc
arpl
sbb
aaa
roll
insl
sub
or
xor
pop
pop
lock
jo
push
es
xor
mov
jae
pop
jo
lock
shl
cmp
mov
xor
cmp
call
adc
cmp
sub
ret
call
pop
pop
lds
mov
mov
cmc
sub
lds
ja
pop
js
jp
movntps
ja
enter
jecxz
add
pop
mov
fwait
sbb
ss
pop
test
ja
mov
repz
push
lds
add
stos
push
popf
add
xchg
sub
stos
pop
orb
loopne
dec
lcall
mov
push
cvtps2pi
sbb
sti
jb
hlt
cmpsl
fisttpll
mov
push
cmp
xor
cli
lahf
xor
mov
scas
xchg
sbb
dec
pop
or
xor
or
xor
mov
adc
jbe
push
xlat
or
nop
loop
jl
and
das
pop
inc
dec
push
mov
fnstsw
pop
xchg
imul
loope
int
pop
mov
push
lahf
mov
mov
andl
or
xchg
sbb
aam
ja
adc
jmp
sub
pop
ljmp
fisubrs
dec
aam
lock
pop
add
jo
adc
mov
lret
lock
fwait
cmpsl
xor
and
ja
push
and
cmp
push
and
mov
inc
aas
jle
pop
cmpsb
ret
movsb
bound
mov
cli
lods
lock
aas
out
inc
cli
push
jge
sbb
pop
xchg
data16
shrb
inc
pop
rcll
sub
push
dec
pop
loope
cmp
mov
fcomps
cmpsl
xchg
jb
lock
hlt
cld
out
movsb
push
dec
or
sub
jo
icebp
dec
cmp
xor
mov
es
sub
or
dec
mov
xor
test
or
push
iret
add
xlat
push
sub
push
xor
aam
mov
gs
dec
dec
cmp
pop
loope
cmc
iret
inc
mov
fldt
lock
fsubrs
push
inc
cmp
pusha
xor
push
fldcw
out
mov
push
mov
inc
inc
xchg
lock
xchg
inc
jmp
xor
dec
push
mov
lods
sub
pop
mov
pop
cmc
stos
sub
cli
dec
fs
cmp
rorl
dec
daa
pop
jnp
jl
popf
sahf
leave
out
fcmovnu
sbb
fcmovu
pop
mov
pusha
push
das
mov
aad
push
xor
or
add
iret
je
mull
push
mov
lahf
mov
xchg
cmpsb
add
loopne
or
mov
outsl
test
mov
add
cmpsb
sbb
pop
cmc
daa
bound
cwtl
les
sahf
add
or
adc
jle
or
in
jns
jmp
add
mov
out
mov
mov
dec
push
push
adc
fwait
sbb
scas
push
jle
push
inc
andl
pop
xor
add
inc
aas
xchg
ficoms
pop
lret
mov
cmp
push
jecxz
cmp
mov
mov
add
aaa
mov
push
pusha
cs
push
inc
test
adc
repz
xchg
test
sbb
std
jns
push
add
jmp
stc
mov
dec
mov
call
xchg
xor
adc
add
add
xor
out
notl
lret
addr16
mov
pop
pusha
and
ljmp
popf
mov
mov
cltd
lds
mov
nop
loopne
aaa
push
leave
sub
fstl
mov
mov
sbb
inc
adcl
jl
lret
imul
jnp
push
pop
das
cmpsb
sti
push
push
loop
fcmovnb
add
push
lds
jns
add
jae
cmc
shll
mov
add
adc
fisubrs
ret
dec
lret
clc
clc
mov
dec
stc
sbb
push
rcll
testl
or
addb
les
pushf
xchg
push
jp
cmp
xchg
std
stos
shrl
popa
jne
cmpsl
dec
pop
popf
sub
insl
pop
insb
aad
mov
adc
fstpl
mov
test
ja
xor
push
push
ficompl
imul
or
data16
incb
loop
aad
ja
push
loope
mov
int3
cmc
rcll
lods
xchg
dec
add
stos
sub
mov
adc
mov
pop
pop
xchg
bound
jp
adcb
dec
cmpsb
add
idivb
pop
jae
mov
pop
fcoml
js
add
daa
mov
push
js
das
lds
mov
shll
push
cmc
mov
dec
add
dec
fwait
pop
adcl
lods
mov
or
xchg
xchg
int3
les
pop
mov
cmpl
lock
cmc
mov
adc
shlb
mov
mov
fistpl
jae
pop
sub
jbe
add
mov
movsl
insb
mov
ds
bound
insl
nop
xchg
mov
dec
fimull
repz
mov
mov
inc
cmpsb
xchg
fnstcw
dec
push
xchg
mov
sarl
lods
jbe
mov
xor
mov
inc
leave
hlt
jne
jmp
inc
or
fistpll
lds
imul
cld
sbbb
cmpsl
sub
jo
subl
clc
aas
ss
inc
loopne
mov
pop
pop
fsts
movsl
xlat
insb
std
pop
push
cmpsl
mov
cmp
loopne
iret
add
dec
mov
call
lcall
dec
lret
xchg
in
iret
lcall
gs
xlat
jnp
mov
ret
fisubl
dec
test
fiaddl
adc
add
addr16
mov
add
das
mov
les
ret
jae
int3
mov
mov
leave
inc
sub
adc
std
cmp
pop
gs
lea
shrl
cmp
sub
rclb
sub
stc
repz
mov
test
mov
fistpl
push
inc
sub
pop
push
popa
loop
jmp
int3
inc
out
mov
mov
dec
add
ss
test
xlat
mov
jns
leave
lods
inc
jle
rcrb
adc
xchg
mov
js
adc
fsubrp
out
lods
xorb
push
or
or
dec
inc
call
test
cld
lds
inc
stc
sbb
les
xchg
jp
repnz
scas
or
out
pop
mov
fwait
mov
jae
push
test
jb
jne
push
es
rorl
fldt
jns
clc
and
and
cmp
sub
ds
xor
mov
ss
xor
aaa
packsswb
pop
jo
add
jne
out
cltd
sub
xchg
jno
jle
aam
inc
movl
cmc
lcall
lods
mov
adc
testb
ss
lret
fwait
iret
dec
clc
fsubl
jb
add
pop
cmp
pop
movsb
and
aad
mov
push
mov
loopne
in
push
repnz
xchg
xchg
scas
and
sarl
add
and
cwtl
mov
dec
add
push
dec
mov
rcll
aad
out
push
lret
lds
cmp
push
outsl
leave
push
fsub
jno
push
mov
outsl
mov
mov
ret
xchg
xchg
pop
ds
xchg
popl
and
adc
rcpps
adc
inc
out
stos
out
inc
arpl
pop
rorl
repnz
push
dec
testl
add
ja
adc
insb
es
data16
je
fidivrl
outsl
cmc
cmpsl
outsl
mov
ljmp
xchg
dec
bound
adcl
and
mov
cltd
scas
or
mov
pop
and
stos
clc
add
cmpsl
sbb
mov
sub
dec
cmpsl
fmuls
aad
cmp
sub
cld
adc
xlat
jno
sbb
stos
sti
mov
fcoml
and
add
inc
movsl
das
xchg
mov
fistpl
lods
jne
jge
fsubr
mov
jmp
xchg
mov
shll
inc
add
xchg
sub
jle
inc
lds
les
or
lret
sbb
insb
cld
aam
and
pop
inc
scas
jle
in
adc
inc
fiaddl
mov
aas
mov
push
cli
adc
cmc
cmp
sub
xor
mov
push
mov
ljmp
fwait
cli
dec
push
mov
pop
pop
adc
xor
aaa
in
add
sub
add
add
and
sti
pop
push
outsb
in
stc
clc
jnp
scas
pusha
int
xchg
mov
pop
fcmovnb
in
movsl
cmp
bnd
mov
inc
xchg
int
repz
xor
pop
rcl
lret
mov
or
lahf
dec
jnp
jb
es
and
lea
cmp
cli
rclb
int3
jl
mov
imul
gs
repz
adc
push
insb
sub
push
inc
daa
les
inc
mov
adc
mov
mov
out
xor
mov
test
jmp
and
jae
push
addr16
gs
popa
mov
incl
andb
jmp
daa
xchg
hlt
jmp
int3
dec
xor
or
pop
fdivr
push
add
mov
xchg
mov
add
mov
push
leave
lods
imul
xchg
add
clc
xor
xor
inc
mov
push
lret
mov
imul
dec
adc
cmp
leave
loop
and
xchg
mov
aaa
jae
test
xor
push
fwait
push
and
orb
fwait
add
cmp
mov
mov
das
xchg
idivb
inc
dec
cmp
xorl
lret
mov
jecxz
mov
fcomps
mov
out
lcall
push
ds
inc
ss
insb
adc
imul
out
repnz
dec
push
or
cmp
sbb
std
push
aad
or
je
orl
daa
sbb
imul
leave
mov
pop
aam
out
add
js
sub
movzwl
cmp
gs
pop
cltd
jg
sbb
roll
iret
adc
mov
fcoml
mov
push
sub
mov
mov
ret
mov
test
stos
movb
and
lea
jp
push
adc
ss
lahf
sub
shlb
pop
mov
shr
mov
ss
out
test
sbb
pop
jle
and
out
or
xchg
push
xchg
movsb
cwtl
fs
mov
mov
les
sub
sbb
dec
dec
arpl
fxtract
roll
popa
xor
sub
in
es
or
and
andb
ja
xchg
sbb
or
test
pop
add
mov
adc
mov
xchg
popf
inc
imul
popf
xor
lret
adc
movb
cld
and
inc
scas
sbb
into
inc
push
pushf
mul
mov
xchg
shl
pushf
xor
or
out
cmp
xchg
test
push
mov
ret
shr
fdivs
pop
into
jle
sbb
pop
hlt
cmp
cmp
int
mull
sub
adc
mov
mov
sbb
inc
pop
sub
stos
push
jnp
xor
push
sub
mov
or
je
cs
cmpsl
fisttpl
xchg
test
lock
sti
pop
and
adcl
jecxz
fs
in
xchg
jmp
daa
adc
push
test
push
push
inc
or
mov
int3
pop
jecxz
lahf
rcll
jmp
je
cmp
pop
pushl
cmp
lods
xchg
mov
out
jmp
and
push
ss
xchg
addr16
arpl
sbb
sub
xor
rcrl
cwtl
jae
adc
sbb
sbb
in
push
dec
xor
pop
in
into
adc
push
es
fidivl
iret
mov
sub
in
inc
repnz
xchg
sti
lock
sti
fisttpll
in
cmpsb
push
out
ds
xlat
mov
fsubrl
sti
inc
pop
cmp
and
cld
sahf
add
js
xor
xchg
xchg
imul
add
dec
shlb
test
and
jo
rolb
enter
fcomps
push
and
lods
xor
and
lds
add
push
xor
xor
mov
mov
ljmp
add
jmp
popf
mul
jns
in
test
movsb
pop
mov
ficoml
imul
pop
dec
das
rcll
ror
sbb
xchg
int3
daa
pop
mov
dec
lret
push
sarb
enter
hlt
sub
lcall
mov
push
xor
into
xchg
mov
push
mov
mov
or
inc
std
inc
jl
xchg
movsl
cmp
lret
stos
inc
mov
cs
dec
xor
flds
sub
ss
punpcklwd
pop
sarl
js
popa
sti
sbb
push
dec
jmp
mov
fadds
push
ror
ljmp
insl
xchg
addb
push
loop
icebp
test
xor
imull
inc
cmp
mov
xchg
xor
push
hlt
cmpsl
push
or
fbld
pop
mov
push
test
pop
inc
in
push
or
jle
arpl
sub
inc
xchg
inc
adc
and
call
sbb
sub
adc
cmp
dec
inc
mov
xchg
push
js
dec
fdivrp
sub
pop
std
and
hlt
lret
mov
inc
add
or
cmp
dec
popa
pop
lahf
push
adc
stos
mov
fistl
outsl
xor
cld
ret
je
and
popa
xor
mov
mov
and
lods
test
fdiv
xchg
inc
dec
outsb
mov
sub
out
imul
pop
mov
in
pop
jne
mov
and
out
mov
shl
pop
mov
cli
pop
cwtl
sbb
ljmp
hlt
out
or
push
mov
repnz
adc
mov
xor
sbb
push
testb
pop
or
or
addr16
imulb
cmp
mov
out
std
mov
test
call
bound
mov
and
push
mov
xor
pop
outsl
or
or
in
scas
mov
ljmp
mov
shll
mov
add
and
test
mov
in
sbb
push
jb
in
inc
xchg
imul
pop
xchg
inc
test
iret
or
mov
sbb
dec
adcl
jl
dec
imul
stc
add
jnp
cwtl
fs
dec
fstpl
inc
add
pop
xlat
mov
es
insl
pushf
aad
pop
cmp
push
movsb
pusha
test
push
dec
lahf
daa
push
fistps
sub
clc
stos
fiaddl
fdivrl
add
xor
sub
outsb
popa
dec
and
push
pop
xor
fstpt
lock
dec
add
adc
es
cmpsb
in
mov
mov
xor
fldenv
mov
mov
sbb
mov
and
mov
lds
or
scas
jecxz
mov
cmp
cmp
push
rcr
cs
sbb
jns
pop
adc
jne
pop
adc
aam
cmp
push
ds
jecxz
lds
cltd
push
pop
int
or
or
mov
loop
sub
jne
jb
js
mov
mov
stc
inc
xor
insb
inc
lods
mov
mov
mov
sub
aaa
repnz
divb
sbb
cs
mov
sbb
cmp
pop
dec
out
cmp
push
ss
push
sbb
push
mov
mov
rcrl
and
sub
out
pop
test
inc
pop
inc
inc
sub
or
jno
ja
pop
cmc
jl
pop
test
dec
sbb
push
inc
fnstsw
mov
sub
push
jo
xlat
mov
data16
push
test
idivl
outsl
lods
cmpsb
outsb
lcall
iret
sbb
mov
sbb
pop
push
dec
push
aad
inc
sahf
push
mov
sbb
sbb
ret
popa
test
inc
xor
test
loopne
mov
rorb
stos
push
sbb
bound
xchg
jns
sub
and
mov
jl
out
lret
fwait
lret
jb
and
pop
xlat
mov
inc
nop
ficoml
out
ds
cmpsl
test
cs
dec
iret
loopne
mov
ds
test
loope
jmp
mov
jge
test
icebp
inc
inc
stos
xchg
lahf
push
or
xchg
adc
test
mov
sbb
dec
test
xchg
fwait
mov
cmp
movsb
shl
add
add
jge
dec
sbb
in
repz
sbb
frstor
jp,pn
jge
ret
add
jp
jp
mov
or
mov
lock
xor
fwait
arpl
mov
loope
inc
push
adc
sub
cmpsl
mov
lods
ret
push
mov
mov
jb
clc
mov
fnsave
shr
lret
push
xchg
in
or
adc
hlt
xchg
pop
push
leave
cmp
xchg
jb
std
cmp
repnz
das
jle
icebp
dec
stos
sbb
subl
jbe
loopne
xlat
out
arpl
xor
mov
pop
mov
sbb
jg
ss
stos
add
sti
lret
mov
in
pop
insb
cltd
lret
mov
sub
js
insb
and
mov
jp
inc
mov
imul
xchg
fs
mov
mov
int3
jmp
je
aaa
fdivl
mov
movsl
mov
cmc
fidivrs
ja
push
frstor
sub
imul
mov
inc
out
sahf
cmp
mov
adc
negb
add
jne
xor
sbbb
xchg
mov
push
stc
stc
sbb
ds
lds
sbb
adc
pushf
lds
aaa
mov
jl
xor
iret
xchg
rorl
fidivrl
sub
jb
push
stos
dec
imul
xchg
sub
add
leave
in
add
adc
mov
cmpsl
xor
xchg
dec
sbb
cld
pushf
insl
ljmp
or
idivb
mov
jecxz
sub
sti
mov
push
pop
dec
cmpsl
xor
fmul
lods
mov
or
fisttpl
cmc
pushl
fwait
sub
cmp
out
fbstp
jne
mov
mov
jo
cmpsb
xchg
stos
inc
jle
mov
push
call
pop
cmpsl
pop
mov
jp
lret
test
cmp
fists
lahf
cmp
push
xchg
lds
ffreep
loope
leave
push
inc
or
or
cmpsl
addb
icebp
jb
xchg
or
aas
dec
sub
mov
popa
push
shr
addr16
push
lret
ret
arpl
dec
push
pop
repz
testb
addl
sti
jnp
and
inc
lods
mov
sti
pop
sbb
addr16
mov
xor
jge
push
cmp
out
imulb
lret
sub
jbe
jge
mov
stos
aaa
and
lea
jae
mov
mov
jmp
cltd
pop
mov
sub
sti
je
insb
insb
sub
pop
mov
sub
js
pop
jb
xchg
adc
lcall
aad
rorb
cmp
cmpsb
mov
mov
inc
popa
add
in
daa
push
das
mov
push
sbb
xor
mov
inc
scas
adc
sub
es
jge
outsb
mov
mov
lods
fsubrp
loopne
dec
mov
xchg
faddl
incl
cmc
sbb
ss
xchg
mov
scas
stc
adc
cld
dec
mov
or
and
mov
mov
or
cmpsl
popl
jecxz,pt
pop
icebp
cs
cmpsb
dec
adc
mov
add
movsl
cmc
pop
fists
jg
ret
rcl
xor
and
ret
in
mov
sarl
fucom
or
std
fstcw
sub
mov
subb
imul
dec
pop
iret
sub
push
icebp
pop
int
in
sbb
add
push
push
jp
dec
rolb
lds
sub
sbb
jg
jl
mov
add
cwtl
add
jmp
mov
and
pop
iret
out
xchg
mov
pop
mov
mov
outsl
cmp
lock
mov
sar
add
mov
aam
mov
in
push
cmp
js
mov
sub
mov
pusha
mov
mov
lock
pop
cld
pop
lcall
ret
and
int3
dec
and
in
and
sbb
ljmp
rcr
mov
dec
enter
dec
mov
jge
xchg
mov
cli
cmp
jp
leave
xlat
inc
outsb
fdivr
mov
xchg
loop
sub
mov
pushf
cltd
mov
mov
mov
jmp
mov
push
pop
jg
mov
lcall
push
xor
jl
stos
cmp
pop
into
jo
dec
mov
pusha
fabs
cmp
adc
and
mov
cmpsl
es
mov
xchg
jp
lret
popf
dec
and
int
mov
xor
sbb
fwait
stos
outsl
xchg
push
and
cld
notb
stos
stos
mov
dec
dec
push
mov
push
mov
sub
sub
xchg
pop
mov
sub
inc
pop
fmull
mov
adcl
inc
aam
fs
sub
je
xor
push
sub
popa
mov
ljmp
je
loop
push
dec
adc
push
jle
fs
push
sahf
outsl
mov
lret
cltd
or
sbb
aam
dec
repnz
add
cmp
pop
sbb
insb
cs
xchg
sar
inc
jo
cmc
xchg
xchg
inc
fwait
imul
in
and
jmp
data16
int
mov
pop
or
mov
aam
xchg
movsl
cmc
mov
out
cmp
scas
jae
outsl
push
rcrl
cmp
stos
test
jge
inc
shlb
fwait
mov
or
jnp
fistl
pop
and
dec
dec
mov
mov
arpl
mov
inc
dec
leave
xchg
pop
fldcw
add
jge
stos
or
push
repnz
pop
aas
enter
and
addb
mov
jl
movsl
sbb
cmc
stos
cwtl
sbbb
add
xor
xchg
das
cli
insl
loop
mov
sub
push
pop
je
idivl
divl
leave
jmp
cmpsl
mov
xchg
hlt
aam
in
mov
repnz
mulb
mov
fildll
orb
sub
ljmp
inc
rcrb
sarl
mov
aaa
push
imul
scas
xchg
mov
jge
ret
movsl
stc
fsubs
inc
or
cmp
xchg
loopne
dec
jns
sbb
inc
mov
pop
adc
sbb
dec
cmpsb
dec
mov
sbb
cli
or
push
test
add
popf
push
enter
inc
add
or
in
jne
lea
loope
jne
pop
mov
jecxz
std
pop
pop
xor
pop
fidivrl
insl
push
rcrb
stos
xlat
imul
lret
and
mov
add
jo
stc
jo
cld
popa
and
add
sub
bound
std
pop
lock
push
sbb
out
call
jle
dec
jmp
jl
or
push
or
pop
popf
sub
ja
out
xchg
das
mov
jo
push
mov
mov
sub
nop
insb
pushf
enter
push
pop
lock
iret
scas
inc
lock
dec
addb
in
pop
jo
sub
jecxz
scas
mov
sbb
sbb
mov
out
pushf
or
add
push
jb
add
add
int3
addl
push
jle
jb
sub
mov
push
arpl
gs
sub
mov
cmp
icebp
inc
lret
or
das
gs
or
or
sti
pop
test
inc
dec
sub
out
cs
xchg
or
mov
pop
sbb
std
loopne
mov
cli
cmp
lcall
cltd
inc
push
gs
js
popa
jmp
sbb
sub
or
push
pop
or
and
rorl
xchg
dec
push
add
es
cmpsl
in
sbb
cmp
aad
shl
dec
and
xchg
aaa
fsubl
sub
mov
aas
stos
jne
xor
add
testl
int
subl
and
pop
pop
aam
or
lahf
lods
mov
out
mov
mov
add
mov
xchg
cmpsb
add
cld
adc
insl
aad
jnp
subl
sub
aad
sbb
scas
pop
pop
aaa
sti
push
cld
repnz
ret
repz
orb
jne
ret
lcall
mov
shrb
mov
mov
popa
jns
adc
scas
popa
stc
push
ficoml
andb
fldlg2
push
lcall
sarb
jb
mov
in
loope
loope
push
mov
aam
jbe
rcl
jbe
add
aaa
push
test
inc
into
out
xchg
loop
mov
or
or
mov
inc
sub
subb
pop
or
xor
ja
jge
adc
cmp
fcoms
cmp
push
ret
inc
cmp
pop
je
push
jbe
sub
fdivrl
jp
rorl
je
mov
pop
out
sbb
sbb
dec
insb
aaa
cs
lret
sti
push
xchg
stos
and
lret
sub
popf
mov
xchg
andps
fdivrs
jo
roll
jl
jns
scas
xor
mov
mov
or
lods
std
xor
imul
mov
popf
lret
int3
sbb
outsl
out
test
sub
jecxz
popa
lret
mov
dec
jnp
lcall
pusha
out
fidivl
test
inc
rorb
cmp
jge
outsb
xorb
cmp
push
lahf
sbb
cmp
xorb
jnp
adc
xchg
dec
sub
and
cmp
mov
mov
cli
mov
lods
push
jecxz
push
adc
icebp
mov
fs
in
movsb
adc
pop
sarl
cmove
sub
in
inc
inc
xor
inc
fwait
es
stos
or
insl
or
adc
push
cltd
sub
popf
mov
cmp
jbe
pop
push
mov
lahf
scas
inc
sahf
mov
shlb
in
in
outsl
push
mov
dec
dec
es
das
mov
nop
pop
jecxz
aad
enter
adc
push
fcomp
hlt
hlt
sbb
adc
push
inc
jb
cmp
loopne
cmp
add
enter
inc
pop
fdiv
sbbb
adc
clc
mov
or
mov
adc
adc
push
hlt
jo
jbe
sub
or
dec
in
dec
pop
clc
mov
and
data16
fs
adc
jecxz
lds
aam
inc
scas
mov
xchg
nop
loope
jae
sbb
ds
jbe
dec
dec
sub
mov
pop
or
sbb
mov
hlt
psraw
sahf
stc
push
out
iret
ss
mov
scas
imul
lahf
shrl
out
pop
shll
sbb
xor
ja
cmp
jmp
cmp
jb
je
xor
add
hlt
jmp
clc
and
inc
in
daa
add
adc
mov
mov
and
mov
cmp
cmp
fucomi
cmc
sub
outsl
sub
sbb
fbld
enter
push
stos
mov
clc
jne
cmp
xchg
xor
sbb
cmp
dec
xchg
mov
add
lds
or
rorl
xchg
xlat
cmp
mov
and
scas
xchg
call
jae
out
sbb
add
cmp
jge
xchg
enter
sub
jne
inc
inc
mov
jno
sub
in
mov
sbb
vpmacssdql
stos
popa
addr16
iret
mov
cmp
shr
mov
cmp
inc
sbb
incb
in
sub
sahf
pop
push
dec
mov
adc
mov
rcrl
pusha
inc
daa
gs
xor
adc
push
xor
addl
push
in
sub
add
iret
mov
inc
xchg
add
mov
mov
cmp
fwait
add
icebp
mov
cmp
and
cmpsb
cmpb
imul
leave
js
addr16
daa
inc
out
repz
shll
fsubrs
leave
ret
lret
popa
outsb
aaa
xorl
mov
mov
or
out
insl
mov
inc
fistps
cmpsl
fmull
or
jo
pop
ja
cs
cli
xor
repnz
mov
jle
imulb
mov
dec
mov
inc
leave
mov
stos
sbb
push
pop
insl
ds
sbb
out
cmp
or
fisubrs
cld
lcall
mov
adc
xor
cli
into
repz
xchg
insl
je
aam
hlt
pushf
cmp
in
and
shrb
pop
dec
push
mov
testl
dec
xchg
fldt
aam
aad
ja
add
sbb
in
cmp
jns
mov
xlat
jo
out
fsubr
xor
mov
push
cmp
sbb
jb,pn
dec
imul
xchg
ja
or
ret
es
imul
jnp
mov
jp
push
cmp
outsb
cli
and
mov
cs
mov
push
sub
dec
std
jg
movsl
popf
hlt
rorb
cmpsl
pop
lcall
popf
test
pop
inc
lcall
in
subb
mov
cltd
js
shll
lock
stos
push
sub
test
push
xchg
jge
leave
lods
push
dec
fs
int3
or
cs
outsl
out
mov
imul
arpl
movsl
mov
cmp
mov
cmpl
or
pop
cld
inc
add
lahf
jle
pop
jecxz
or
add
es
out
test
leave
or
fwait
pop
adc
imul
pop
loop
shrb
divb
push
arpl
and
lahf
lods
in
js
repnz
cmp
out
call
jae
sub
cwtl
mov
repz
inc
sbb
mov
or
xchg
test
and
ljmp
out
rcrl
fdiv
sbbb
lods
pop
xor
and
dec
xor
pusha
and
lcall
jl
daa
mov
aam
das
push
sti
jle
jae
mov
jb
push
fs
cmp
lret
xchg
sub
in
subl
into
xchg
cmc
faddl
lds
xor
push
imul
or
dec
mov
inc
addr16
loop
call
insl
test
adc
movsl
fisttpl
lcall
jl
cmp
push
das
enter
xchg
movsb
pop
mov
adc
bound
fcmovb
int3
jno
stos
mov
aad
lret
adc
dec
bound
add
adc
in
shlb
sbb
inc
jge
add
lds
jg
pusha
sbb
cmpsl
pop
jge
sub
or
jns
aaa
add
adc
push
test
mov
mov
xchg
cwtl
in
mov
sbb
inc
fwait
xor
bnd
shlb
mov
sbb
outsb
xor
in
mov
popf
ja
sbb
sub
lret
enter
loopne
ds
int3
push
dec
and
mov
movsb
rorl
mov
adc
xor
out
cmp
mov
cwtl
je
and
repz
dec
xor
jl
sarl
stos
iret
nop
imul
push
notb
outsb
cmp
mov
dec
push
jb
add
cmp
ja
sub
mov
imul
dec
pushf
repnz
and
shll
cli
loopne
pushf
mov
stc
and
jnp
jne
scas
adc
mov
sbbb
push
jb
and
xlat
pop
sar
mov
gs
sub
test
and
lahf
addr16
repz
lea
cmpsb
fwait
mov
movsl
std
ror
gs
jnp
inc
mov
sub
jl
hlt
cmc
mov
popf
lock
push
sub
arpl
adc
inc
fadd
into
jmp
xchg
test
fwait
rcr
push
pop
pop
pop
sub
mov
adc
mov
adc
sbb
fwait
mov
js
test
aam
in
xor
hlt
cmpsb
rcr
pusha
cld
push
xor
sarb
sbb
loope
jp
sub
scas
push
dec
xchg
sub
aam
push
stos
pop
and
mov
push
jbe
popf
jg
sbb
mov
setge
outsl
dec
or
test
inc
lea
ret
push
mov
mov
fs
adc
js
push
fidivs
rorb
pusha
push
andb
pop
dec
stc
cmpsl
sub
lea
and
push
mov
push
ja
push
inc
in
std
loopne
inc
rorb
dec
mov
pop
and
rcr
out
dec
and
mov
dec
rclb
iret
xor
and
mov
rcrl
hlt
sub
rcrb
test
cld
scas
and
jge
push
pop
inc
cmp
fisttpll
je
xor
dec
stc
cltd
xor
inc
ret
and
out
add
pop
mov
jecxz
repnz
mov
mov
fwait
pop
cltd
inc
cmpsl
fdivp
jp
mov
xchg
push
out
xor
aas
adc
insl
or
push
mov
divl
sub
insl
inc
stc
push
push
mov
dec
mov
jge
mov
jb
jl
lret
push
std
leave
lds
push
sbb
xchg
dec
mulb
mov
movsb
dec
dec
and
mov
jno
push
cmp
ret
shrb
cltd
adc
mov
mov
mov
push
rolb
pop
lret
lock
add
xchg
ret
gs
xchg
aaa
aad
test
ds
shll
into
jo
adc
dec
lea
out
jns
js
xlat
gs
push
dec
or
push
push
sbb
mov
inc
inc
fmul
adc
inc
lahf
rcrb
enter
pop
fwait
in
mov
xchg
dec
popf
mov
add
inc
mov
xchg
leave
mov
mov
stc
test
pop
jae
pop
dec
push
popa
insl
xor
imul
and
out
mov
repnz
sbb
sub
mov
stc
pop
mov
fidivrl
dec
xor
push
push
xor
popf
cmpsl
jecxz
jle
daa
rorl
jnp
outsl
dec
pop
daa
sahf
test
cmp
gs
repnz
mov
addr16
push
fwait
push
mov
insl
int
xor
or
jp
jmp
inc
sub
andb
and
pop
enter
or
rcrl
mov
push
mov
or
xchg
cli
and
in
pushf
lret
rcll
fs
adc
sub
je
scas
cld
rcrl
leave
cli
inc
jg
push
roll
mov
and
stos
and
cmc
ret
rcrb
pusha
mov
aas
insb
imul
scas
andl
mov
mov
or
or
loope
cmpsb
lock
adc
jecxz
push
leave
mov
rol
pop
aas
int3
repz
mov
mov
xlat
lock
xor
mov
les
sbb
xor
push
push
sbb
gs
out
sahf
adc
gs
and
adc
clc
add
xor
lret
test
fsub
xchg
cmp
lods
jo
and
insl
mov
mov
loop
ljmp
mov
mov
sbb
les
mov
jmp
adc
cmp
loop
or
and
pushl
xor
sbb
mov
jp
out
rclb
enter
jecxz
ds
repz
inc
push
mov
mov
inc
or
aas
push
cmc
subl
sbb
movsb
sti
les
gs
icebp
pop
fst
stc
sbb
xchg
cwtl
filds
adc
pop
jp
insl
es
ja
arpl
mov
iret
inc
lods
or
jno
movsb
push
push
lahf
dec
mov
lret
lret
sub
jnp
clc
mov
or
imul
ret
das
jb
pop
lock
mov
cld
mov
or
cli
ret
sbb
push
or
mov
int
pop
out
cmp
cmc
xor
insl
fildl
add
push
xchg
cmpsb
sub
mov
lea
daa
fidivs
ret
scas
frstor
push
adc
pop
dec
xchg
xchg
mov
xorb
xor
jnp
xor
mov
add
imul
subl
sbb
jae
insl
fldt
pop
push
cwtl
add
lret
jae
mov
cli
or
mov
sbb
cmp
pop
les
cmp
inc
mov
lea
subb
decb
rcrl
aam
lret
xor
loopne
mov
push
dec
inc
cmp
adc
fisttpll
dec
inc
pop
repnz
and
or
pop
cmp
inc
ret
cmpsb
xchg
push
notb
popa
dec
scas
les
mov
repz
mov
arpl
hlt
nop
data16
add
test
adc
jb
cmp
jno
sub
sarb
decl
setle
lods
ret
mov
xchg
outsb
push
lods
xor
push
fsubp
mov
out
jl
lahf
mov
adc
cmp
lret
add
sub
addb
mov
pusha
fcompl
gs
push
iret
cmp
adc
outsb
xchg
test
ret
popa
xor
push
cmp
jmp
hlt
xor
cld
into
sahf
test
adc
mov
and
adc
mov
fs
pop
add
pop
push
ret
ljmp
xor
scas
mov
sahf
or
mov
lods
loopne
add
or
dec
jns
mov
hlt
sbb
jbe
add
stc
add
add
popa
outsl
pushf
xor
outsl
popf
and
inc
xorb
push
mov
cmpsb
daa
je
xorb
or
dec
cli
or
addr16
popf
mov
fcomp
or
cmp
cmp
lock
clc
loop
popf
cmp
xchg
push
jge
loop
cld
pop
sub
jbe
iret
lret
sbb
pushf
inc
pop
shll
arpl
bound
jmp
fistpl
sbb
arpl
or
pop
jne
xchg
add
lret
hlt
shlb
outsb
arpl
mov
ret
adc
cltd
mov
add
sbb
jle
arpl
int3
lods
push
rcll
xchg
vpsrld
mov
xor
adcl
and
sub
adc
inc
adc
test
dec
lret
and
cmp
cmp
mov
cwtl
hlt
in
xlat
mov
call
sahf
push
scas
add
jnp
jae
inc
and
dec
idivb
sub
mov
mov
test
stos
inc
sahf
insl
lock
insl
mov
inc
add
or
fwait
push
aas
mov
mov
repnz
add
popa
sub
xchg
xorl
stos
ja
mov
mov
pop
scas
push
test
enter
or
or
jnp
dec
push
or
push
or
int
push
mov
das
cmpsb
push
incl
ljmp
ret
roll
mov
iret
and
js
push
clc
push
clc
mov
xchg
sbbb
call
mov
mov
lret
sub
into
leave
cld
add
jge
lret
outsb
inc
mov
xchg
lret
out
test
xchg
pop
in
or
movsl
jmp
aas
adc
mov
sub
stc
mov
lock
clc
aam
leave
stos
std
pop
lcall
xchg
push
or
dec
std
cmp
xor
xchg
dec
cmp
in
add
inc
out
dec
test
xchg
push
mov
sub
sbb
pusha
ja
dec
mov
repnz
or
jo
or
mov
adc
test
rclb
rorl
pop
sbb
pop
repnz
mov
aaa
enter
scas
outsb
in
fcmovnbe
push
jne
test
ret
cmpsl
in
xchg
inc
mov
movsl
xchg
lock
loope
sbb
xchg
cli
bound
lret
cld
adc
popa
mov
loopne
mov
adc
or
mov
ja
or
stos
cmp
clc
jmp
cmp
dec
pop
sahf
out
stc
ds
jb
and
test
pop
popf
or
into
addr16
inc
add
pop
bound
push
test
cmpsl
jmp
arpl
and
pop
xor
cmp
xor
test
stos
fs
or
ja
andl
dec
xor
add
andb
push
aam
mov
fsubs
int3
pushf
pop
push
adc
repnz
xchg
ret
pop
jl
aad
push
xor
and
pop
int
sbb
sub
and
dec
mov
sub
out
mov
add
fwait
ds
jp
pop
ss
and
jp
sub
mov
jbe
icebp
sub
lahf
ja
jg
jmp
hlt
xor
push
jbe
sub
mov
outsb
shl
pop
fdivs
push
fiadds
ss
mov
pop
mov
fwait
pop
mov
lea
lods
addr16
popa
inc
jl
push
ja
inc
and
shll
pop
inc
sarl
mov
cmp
iret
mov
les
fisubrs
dec
mov
imull
cmp
js
mov
pop
and
loopne
mov
inc
sbb
std
rorl
in
mov
dec
or
or
lcall
sbb
ss
popf
or
or
jle
xor
add
fcomip
in
sub
push
ret
mov
rorb
int
pop
inc
cmp
and
and
cmp
inc
or
adc
in
fwait
sahf
insl
scas
xlat
int
shlb
data16
push
add
add
inc
js
xorb
and
push
sbb
fsub
lods
cltd
or
mov
inc
jmp
icebp
xor
and
ret
jne
pushf
pop
jmp
loop
or
mov
data16
icebp
mov
xchg
rclb
dec
add
jge
ret
sahf
cmpsb
stos
lock
stos
sbb
or
js
fdivrs
adc
fwait
popa
icebp
or
push
popa
ljmp
movsl
bound
outsl
sbb
push
jnp
clc
test
fs
xor
faddp
fistps
lcall
jmp
or
subb
and
xchg
sub
dec
push
adc
xor
sub
lds
jne
movsl
xor
cmp
jo
ja
mov
fdiv
xchg
dec
mov
or
add
mov
add
arpl
xchg
lods
push
aas
jp
adc
lret
adc
push
jmpw
add
add
pop
push
movsl
add
adc
sbb
clc
repnz
mov
adc
mov
cs
cmpsl
push
xchg
pop
fwait
inc
mov
inc
mov
sub
sub
stos
sub
jmp
pop
sbb
cld
mov
ja
sbb
out
sbb
fisubrs
test
xlat
xchg
pop
mov
pop
in
dec
lret
jp
gs
dec
dec
cmc
clc
fisubs
mov
or
xchg
jo
jmp
cmc
sub
jb
mov
jnp
mov
loop
das
mov
sub
inc
pusha
jno
jmp
jns
sahf
lock
gs
jno
aam
cld
jns
jae
inc
cld
mov
stc
xchg
jg
inc
nop
push
stos
stos
orl
xor
xorl
jns
inc
sub
addr16
and
push
jl
adc
push
loopne
outsl
repz
jo
pusha
hlt
les
daa
stc
mov
in
ficompl
sbb
mov
test
adc
sub
cli
push
movsb
push
shlb
mov
lods
jecxz
in
cwtl
call
insb
cs
jge
fidivrs
inc
xor
dec
inc
out
pop
push
adc
jl
or
test
mov
dec
inc
and
cltd
ret
in
adc
jmp
jp
out
sahf
out
xchg
and
or
mov
out
or
aas
clc
add
sbbl
in
add
pop
popf
mov
jno
stos
jge
pushf
es
test
push
mov
and
fnstcw
hlt
cmp
dec
scas
popf
test
mov
cmp
jg
aam
sub
adc
jl
test
xchg
fidivs
lret
and
jle
dec
pop
loopne
mov
test
xor
jne
shl
pop
addr16
movsb
inc
lcall
xchg
or
test
fmul
negl
mov
into
ljmp
or
shlb
bnd
xchg
inc
add
jecxz
inc
mov
jne
add
add
or
sbb
call
jecxz
sbb
ja
cmp
fwait
mov
adc
or
pop
mov
pop
rolb
push
repnz
pop
add
imul
imul
sbb
movsl
fidivs
sub
fsubs
add
into
lret
mov
loopne
lock
cmp
lock
mov
xchg
and
dec
cmp
xor
adc
ret
pop
mov
rol
lea
rol
clc
jp
xchg
subb
inc
xor
push
mov
sub
fisubrs
insl
not
adc
jmp
movsl
das
inc
outsl
sub
into
cmp
cmpsb
inc
mov
adc
fistps
in
pop
xchg
or
out
in
inc
mov
adc
cmpl
cld
call
add
pop
push
sbb
push
mov
call
popa
mov
sbb
orb
out
cmp
lea
fcoms
or
lcall
adc
lret
pushf
lds
sbb
xchg
aaa
test
xor
mov
test
repnz
xor
in
add
jne
ja
out
test
mov
shl
out
jnp
arpl
dec
nop
insb
inc
call
in
stos
loopne
adc
pop
sbb
push
pavgw
and
lea
repz
dec
addb
loope
push
sub
dec
call
adc
popl
push
xchg
xlat
iret
icebp
rcrb
insb
lds
push
push
aaa
mov
cmc
xor
insb
or
scas
in
and
jae
or
adc
jle
cmp
in
inc
aaa
sub
add
repz
lods
dec
dec
xchg
xchg
out
pop
push
loope
jns
pop
aad
mov
push
idivl
inc
mov
lods
mov
sub
ss
dec
dec
shlb
sbb
movsb
out
cmp
cli
push
rcll
mov
inc
rcl
mov
pop
aad
f2xm1
sti
movsl
ja
xchg
out
adc
pusha
xchg
push
aad
fneni(8087
push
jno
sub
aam
mov
test
rclb
jns
xchg
jo
cs
inc
add
add
mov
stos
push
xchg
dec
cli
ja
mov
iret
test
push
les
daa
stc
pop
dec
cmp
rcr
scas
mov
mov
push
mov
xor
lea
dec
cmpsl
fisubrl
ret
xchg
cld
add
adc
andl
and
jge
pop
std
cmp
or
loopne
sbb
ret
inc
dec
jge
and
pop
mov
jl
dec
imul
aas
xchg
cmpsb
sbb
fiadds
mov
dec
ds
mov
jecxz
imul
dec
insb
data16
lret
mov
movsb
inc
arpl
in
bound
dec
push
mov
adc
rolb
push
jne
bound
adc
xor
in
pusha
push
sub
and
adc
lret
dec
loope
xor
sub
jno
dec
subb
jne
nop
fadds
sbb
jecxz
popf
pop
jno
lcall
dec
jle
inc
xchg
inc
xchg
cmp
and
and
leave
ficomps
push
lods
push
cmp
push
imul
jo
flds
jno
mov
cs
xor
lea
xchg
out
xchg
jno
sbb
and
sbb
loopne
int3
xchg
popa
mov
and
cwtl
push
sbb
outsb
movb
pop
inc
cmc
icebp
mov
subb
xor
lods
add
add
inc
cmp
scas
xlat
pop
inc
xlat
sahf
or
testl
jne
and
adc
mov
add
cmp
jbe
or
xlat
shrl
mov
js
push
daa
into
int3
icebp
sub
xchg
and
outsl
imul
aad
push
ljmp
pusha
popa
push
or
xor
sub
imul
leave
pop
into
xor
mov
mov
daa
mov
mov
lds
in
sbb
in
xorb
mov
xchg
out
sub
mov
lock
or
gs
jne
add
sbb
mov
into
sub
mov
xchg
cmpl
sub
dec
pop
cmp
add
sarl
ret
dec
push
shr
in
fs
pop
mov
loope
dec
cmpsl
cmp
mov
and
mov
pop
cmc
sub
cmp
or
in
and
pop
xchg
xor
sahf
add
in
jbe
movsb
xchg
push
or
sub
cmc
mov
dec
imul
aaa
jae
cltd
xchg
orl
mov
and
adc
ret
mov
in
fisttps
xchg
daa
sub
mov
js
jbe
xchg
gs
in
mov
inc
lret
outsl
push
mov
or
sub
sub
out
mov
or
fsubr
notl
mov
gs
adcl
scas
cmp
popa
popa
sti
rol
sbb
lea
sbb
push
jae
imul
ss
lea
mov
mov
mov
leave
mov
popa
adc
mov
rcl
inc
in
lret
sarb
nop
jecxz
and
push
aaa
sbbl
mov
push
sbb
xchg
aam
cli
loope
cmpsb
std
sbb
add
inc
or
in
push
xchg
in
dec
or
arpl
adc
cwtl
add
cmp
xchg
gs
test
cmpsb
fwait
in
mov
fiadds
into
mov
sub
add
dec
adc
xor
mov
pop
inc
xchg
stos
jnp
insb
sub
dec
mov
rcl
pop
or
xor
lods
cmpsb
inc
add
inc
sbb
jp
insb
int3
push
es
fs
ret
push
dec
sbb
add
sbb
jae
sbb
ss
push
lahf
adc
insb
jbe
je
cmp
rclb
stos
adc
loopne
jbe
sbb
lret
stos
cs
mov
and
fbstp
das
insb
sub
les
loope
ficoms
pusha
daa
push
lcall
sbb
mov
add
aad
sbbl
push
insb
fdivrl
ss
insl
mov
fadds
adc
mov
cmp
cmpsl
sbb
rorb
clc
add
dec
mov
and
pop
imull
addl
pop
push
lock
xchg
mov
pop
xor
xlat
mov
and
add
in
push
xor
mov
je
push
pop
aas
adc
cmovl
cltd
jno
dec
jnp
iret
push
mov
das
dec
push
scas
push
xor
sub
lea
negb
ss
fdivl
pop
xchg
jmp
sbbl
pop
subl
sbb
mov
cmpb
int3
sti
fiadds
pop
lcall
loopne
stc
movsl
das
push
and
inc
sub
shlb
add
xchg
push
sub
arpl
cmp
lods
push
xchg
jno
fcmovnbe
and
adc
push
pop
lods
dec
int3
or
sbb
stos
sub
jbe
mov
xor
incb
xchg
jnp
push
cmp
push
lods
xchg
pop
jmp
fstpt
or
and
testb
jae
lahf
movsb
jbe
jnp
adcb
add
test
sub
scas
iret
ret
jg
dec
mov
add
pusha
shll
push
xchg
mov
repz
aad
loope
jmp
les
sbb
movsb
cmp
mov
xor
push
pop
out
bswap
mov
sbb
cltd
fidivl
mov
testb
cmp
icebp
cld
mov
aad
jne
lahf
pop
sub
mov
mov
cmp
pop
aam
adc
out
ds
inc
sahf
sbb
mov
mov
lret
push
imul
test
sub
sarl
imul
cmp
lret
cmp
fildl
adc
hlt
jmp
xor
sahf
and
xor
cwtl
pusha
add
pop
pop
mov
clc
and
push
arpl
pop
and
lods
out
gs
mov
jmp
ja
pushf
ret
into
fwait
xchg
mov
ljmp
out
push
push
loop
cld
addr16
adc
and
mov
xor
sbb
xchg
outsb
push
push
jb
mov
pusha
outsl
adc
test
movsl
cltd
and
jg
lahf
push
repnz
cmp
and
cmpsl
inc
getsec
and
into
xchg
loop
mov
scas
popa
fstpt
daa
pop
cld
xchg
lods
sti
rcr
xchg
pop
cmp
shl
pop
in
es
inc
scas
jecxz
inc
dec
pop
jo
jns
push
sbb
fs
leave
push
mov
loopne
mov
and
std
inc
ficompl
cld
mov
add
loopne
cmp
dec
jb
es
pop
in
xchg
cmpsl
mov
cmp
out
nop
faddl
jne
cmpsl
fimull
mov
xor
idiv
sbb
clc
pop
sub
add
dec
out
xor
cltd
popa
fdivs
jecxz
mov
lret
imull
xorl
inc
add
loope
imul
cli
add
pop
xchg
add
out
test
cmp
inc
jnp
out
and
sbb
xor
inc
adc
das
outsl
cmp
add
iret
rcrl
sahf
cmpsl
or
pop
cmpsl
add
mov
xchg
and
cmp
mov
xor
pop
in
mov
fcomi
push
sbb
cmpsl
cltd
ja
addr16
adc
push
scas
lahf
pop
push
jb
pavgw
adc
js
shrb
mov
pop
pop
xor
push
mov
dec
mov
inc
pop
cwtl
adc
data16
or
jb
popa
push
sbb
push
pop
mov
loop
sub
fsub
outsl
lds
or
xor
in
sbb
insl
add
jmp
xor
adc
outsl
aad
jb
popa
mov
pop
daa
inc
js
gs
adc
sbb
inc
xchg
push
jbe
es
repz
mov
push
mov
pop
loop
and
cmp
xchg
jbe
xor
icebp
inc
inc
imul
loop
fidivs
aaa
inc
mov
pop
bnd
pop
es
lds
call
mov
push
or
inc
jmp
jne
jno
dec
mov
push
and
adc
mov
fdiv
jne
dec
mov
and
push
push
sub
lcall
orl
repnz
jg
cmp
jmp
push
mov
mov
dec
push
lret
fwait
xlat
arpl
dec
and
mov
enter
inc
pop
pushf
lret
cwtl
js
cli
stc
push
dec
cmp
push
dec
adc
fildl
mov
jnp
lods
push
mov
xor
mov
pushf
or
outsb
lret
jo
adc
inc
or
fistpl
mov
les
xchg
cmpsb
cmp
add
sbb
push
sahf
mov
mov
mov
xchg
jno
cmp
xor
sub
movsl
mov
or
mov
inc
out
into
rcl
and
push
les
mov
sub
adc
push
lods
test
adc
into
ret
sbb
mov
xchg
jnp
and
dec
xor
push
fsubs
pop
jo
dec
mov
pop
mov
push
mov
shr
add
into
push
adc
mov
jo
in
imul
ljmp
push
lods
sbb
jg
mov
adc
clc
jns
dec
aad
repz
arpl
jecxz
punpckhbw
testw
push
xchg
std
sbb
jns
pop
jle
add
fs
js
in
pop
or
cmp
shrb
push
ljmp
in
xchg
ret
and
or
xchg
mov
add
mov
inc
jmp
pop
lcall
xchg
sbb
call
add
jae
inc
cmpl
sarb
pushf
cmp
jg
ds
fcoml
and
dec
aam
adc
sub
fnstenv
addr16
rcrb
aas
mov
cmpsl
lock
clc
inc
sub
sbbb
mov
ja
cmp
dec
mov
cltd
fdivl
arpl
cmp
sbb
add
cltd
imul
or
xchg
dec
sahf
mov
mov
xchg
sub
xor
inc
dec
adc
pop
cmp
cld
sbb
out
adc
mov
cltd
gs
mov
sbb
lahf
sarw
or
push
or
jns
pop
in
cmp
cmovbe
popa
pusha
lcall
xlat
setp
andl
icebp
fcompl
jb
mov
xlat
or
sahf
inc
aaa
das
push
mov
dec
inc
and
hlt
sub
pop
jp
fcomip
sbb
popa
enter
int
arpl
mov
popf
jp
in
dec
fwait
mov
popf
movsb
test
loopne
jo
sub
jo
xorb
out
mov
mov
mov
or
and
sub
lahf
cmpsl
shrl
push
fisttpll
ja
int3
lock
and
sbb
or
pushf
insl
cltd
arpl
jb
aas
lahf
xchg
das
testl
sbb
and
mov
rorb
loopne
or
cmpsl
jns
nop
or
pop
or
push
in
lret
insb
movsl
and
xchg
pop
push
outsl
popf
in
mov
fcompl
inc
fs
fists
or
pusha
jns
jbe
and
mov
dec
clc
andl
sub
or
std
add
adc
mov
das
dec
ror
mov
lret
push
push
cmc
xchg
imul
or
call
cmp
and
hlt
and
lcall
sbb
add
and
pop
ljmp
and
dec
adc
mov
or
sarl
push
and
xchg
out
mov
dec
push
stc
adc
xor
insl
inc
sbb
push
aad
xor
sbb
xor
std
sub
pop
dec
add
dec
dec
pop
cwtl
movsl
push
xor
jecxz
cmp
jnp
pop
pop
mov
or
jb
stos
mov
lcall
add
lds
test
dec
cli
adc
mov
sub
mov
out
mov
cmc
pop
inc
xchg
lods
testl
ds
arpl
clc
cmc
adc
imul
jb
gs
jp
push
inc
int
insb
out
sbb
gs
sahf
sbb
mov
push
or
lret
cwtl
movsl
xor
inc
stc
fimull
fdivl
sub
testb
push
shrl
ja
mov
lods
adc
push
icebp
enter
popf
jmp
rclb
in
mov
gs
jnp
ljmp
adc
shll
jge
xchg
in
ja
int3
repz
into
push
shlb
pop
js
mov
jg
cld
cmp
aaa
cmpsl
add
push
jo
sbb
lahf
cmp
scas
aam
rcrb
fidivrs
push
dec
out
dec
xchg
call
xor
sub
mov
mov
jnp
lcall
jmp
push
mov
sbb
addr16
idivb
in
sbb
jae
loop
dec
lods
out
dec
fdivrs
fldcw
fwait
dec
adc
push
rcrb
xchg
cmpsl
aad
int3
int3
mov
mov
shll
scas
icebp
insl
xchg
loop
lock
les
lahf
jae
lock
sub
xchg
rorl
sub
rcrb
sarl
sbb
fists
je
cs
or
ret
sbb
call
jecxz
xchg
popa
jno
hlt
ljmp
repnz
je
imul
mov
add
push
pop
popf
gs
push
aam
mov
cmpsl
lods
push
iret
dec
leave
push
adc
inc
jge
mov
cli
jle
int
and
arpl
jmp
les
faddp
stos
push
fldt
aaa
mov
rorb
mov
inc
ljmp
incb
xlat
xchg
push
mov
mov
sbb
cmp
cmp
lods
add
testb
out
push
xchg
push
jl
ljmp
hlt
prefetcht0
cltd
pop
int
mov
int
je
mov
xor
push
pusha
dec
pop
out
lods
push
out
dec
jl
mov
dec
pop
mov
js
xchg
inc
push
inc
mov
rcrb
addr16
jbe
mov
and
in
adc
mov
ficomps
mov
mov
aad
rcr
shrb
aad
movl
xchg
out
adc
loopne
mov
out
test
pop
arpl
repz
aad
or
add
ret
outsl
push
cmp
pop
add
and
dec
std
into
push
loop
cwtl
sbb
lcall
jmp
es
in
push
insl
xchg
cmc
inc
ljmp
adc
test
or
std
dec
repnz
xchg
in
and
lods
sbb
mov
ret
or
fisubrl
mov
push
in
movsl
mov
or
mov
das
push
das
mov
jle
fcompp
cs
pop
imul
enter
sbb
pop
push
jnp
les
xchg
out
sahf
jne
test
popf
repnz
jae
sub
push
cmpl
icebp
orb
js
fcmovbe
mov
and
ss
mov
repnz
cld
or
dec
mov
out
lret
jmp
xchg
orb
jecxz
div
cld
mov
and
inc
js
popf
lret
test
in
jne
inc
xchg
sub
aaa
out
scas
idivb
pusha
je
or
push
ss
popa
dec
enter
inc
outsl
addr16
mov
sbb
ljmp
sub
and
pop
ret
lock
testl
test
out
or
or
loope
push
ret
xor
sbb
xchg
mov
call
pop
mov
sbb
jne
inc
push
ds
pusha
es
xor
cmpsb
leave
inc
std
adc
xchg
cmp
sbb
adc
mov
cmp
shll
shrb
popa
or
in
ret
test
int
push
or
jmp
xchg
fpatan
mov
in
aad
push
mov
inc
xor
or
pop
xchg
cmp
mov
sub
jecxz
push
jmp
in
mov
or
insb
sbb
mov
add
flds
ds
ja
xchg
imul
push
stc
pop
jl
divb
loop
add
mov
ljmp
mov
mov
inc
push
lcall
out
pop
xchg
jb
pop
mov
jl
stos
sbb
shl
lods
dec
call
jo
fucomip
in
lret
inc
andl
es
out
cs
push
call
or
xchg
sub
iret
mov
fisttpll
jge
jmp
mov
fcomps
mov
xchg
arpl
xor
jae
pop
es
cmp
fptan
pushf
sti
adc
dec
push
ss
xor
call
jae
and
mov
jp,pt
lcall
lock
aaa
and
mov
mov
ss
mov
cwtl
hlt
cmpsb
xchg
dec
mov
mov
mov
xlat
and
sub
dec
mov
xor
rolb
inc
iret
nop
or
xor
cmp
int
aas
jge
or
addps
scas
int3
xchg
dec
xor
repz
inc
idivl
cmp
adc
daa
jg
mov
xchg
jge
jae
adc
mov
mov
in
sub
xlat
jg
stos
dec
sub
push
jbe
add
jno
repz
bsr
and
cmpsl
mov
ja
repz
repz
jecxz
int3
pop
hlt
ret
bound
popf
and
notl
add
sub
xchg
sbb
popf
jb
push
dec
sbb
sbb
pop
or
cmp
push
loop
icebp
xor
mov
mov
inc
mov
pop
rorl
cmpsb
xchg
fcmovb
adc
mov
je
decb
dec
cwtl
cmovbe
pop
jmp
daa
mov
sub
cmp
ret
test
inc
fdivs
fcompl
inc
mov
cltd
mov
daa
xchg
sub
mov
inc
mov
pop
das
xor
pop
insl
mov
lods
test
adc
sub
push
dec
popa
ret
rep
cmc
push
mov
cmp
rcll
call
mov
test
mov
les
mov
adc
ja
shrl
dec
push
rorl
lret
xchg
mov
jae
xor
dec
sbb
stos
push
push
pusha
in
aas
cli
cltd
or
xlat
data16
push
repz
fildl
adc
idivl
stos
cmp
push
scas
dec
jnp
and
jne
push
add
scas
movsb
dec
stos
stos
mov
clc
lock
outsl
pop
add
repnz
orl
loope
stos
inc
loop
sti
jg
stos
mov
sbb
xor
adc
je
jns
arpl
out
and
adc
ret
jecxz
jbe
sahf
cmp
aas
loopne
sub
enter
xor
dec
mov
inc
repnz
mov
fnstcw
bound
lret
push
push
arpl
cli
andl
pop
aaa
fstps
jmp
cmp
lds
mov
fsub
notb
rcr
test
ret
mov
lea
inc
sub
dec
stc
ds
push
mull
mov
inc
pusha
lods
ss
test
nop
ljmp
mov
neg
mov
out
sti
sbb
jle
sbb
stc
repz
out
xchg
ja
insb
ds
enter
aaa
je
mov
push
ss
and
iret
call
push
sub
xor
mov
in
mov
lcall
mov
or
sti
xor
mov
mov
inc
cmp
arpl
adc
jae
and
aam
fwait
push
lcall
subb
scas
mov
ss
frstor
adc
lods
adc
cmp
sub
push
mov
imul
cmp
ret
aad
or
shr
adc
add
js
mov
jo
cmp
pop
ret
push
sbb
negl
adc
cld
ret
sti
push
mov
push
add
test
adc
mov
and
nop
inc
pop
fisubl
ss
jp
sbb
push
fldenv
dec
lahf
or
jo
xchg
mov
popf
dec
loope
inc
lods
and
jo
xchg
les
pop
adc
lds
pushf
repz
xchg
push
cs
mov
cmp
or
and
mov
pop
fisubrs
push
push
int3
es
xchg
mov
inc
aaa
xlat
test
jmp
movups
or
jg
aam
push
cmp
mov
jmp
pushl
pop
aam
inc
jle
lock
cmp
or
jmp
push
push
outsl
cli
mov
cmc
out
fwait
lret
ds
lret
mov
cltd
in
xchg
sub
and
scas
fstl
icebp
push
sub
lock
int3
sbb
xchg
cmp
loop
pusha
arpl
cmp
stos
sti
dec
jne
fnstcw
mov
mov
es
mov
shrb
mov
pop
cmc
das
aaa
ja
jge
lods
test
adc
sbb
add
and
adc
mov
hlt
into
push
xor
outsl
pop
xchg
dec
xchg
fidivs
lods
jle
mov
test
or
mov
sub
cli
cmp
in
testl
cmp
add
adc
data16
xchg
js
shr
xor
bound
mov
lods
test
mov
xchg
xorl
or
mov
shlb
xor
push
fisubl
test
push
mov
mov
std
adc
sbb
adc
in
fnsave
push
es
and
adc
add
not
loopne
ja
sti
mov
mov
repz
mov
scas
imul
and
je
movsb
and
push
and
and
mov
jle
or
les
lods
xchg
in
das
outsb
or
imul
mov
xor
imul
ficompl
dec
in
divb
push
or
inc
mov
xor
dec
in
or
dec
bound
gs
jne
or
mov
test
dec
inc
jge
pop
sahf
xorb
insb
loopne
imul
sbb
hlt
mov
mov
or
daa
aas
pop
loopne
xor
movsl
xchg
xchg
lock
dec
fidivrl
movsl
jge
add
push
sub
pushl
lock
jne
jge
dec
mov
push
int
js
or
shr
in
dec
lods
jae
sahf
ficoms
push
call
push
cli
lds
push
jnp
adcl
jmp
std
fistpll
lods
adc
fadd
pop
jmp
sub
xchg
xor
sub
adc
sbb
adc
aaa
xchg
ss
adc
sti
leave
or
mov
jns
push
hlt
xor
sbb
enter
inc
fcmove
mov
add
and
dec
push
xor
fisttpll
jnp
int
add
rcrb
mov
and
xchg
andb
sar
sbb
cwtl
jbe
test
adc
xchg
push
xor
pop
or
mov
pop
jp
sbb
push
push
sub
scas
pop
rolb
push
imul
ja
cld
inc
out
bound
xchg
lcall
vunpckhps
das
dec
dec
loope
insl
inc
pop
xor
test
push
and
aaa
ffreep
push
sub
arpl
cltd
xchg
adc
int
and
cld
sbb
jg
push
jl
fs
cs
sub
jns
inc
popa
pop
sti
lret
into
jnp
mov
lcall
jecxz
sub
test
mov
mov
stc
xor
xchg
mov
sbb
fcmovbe
pop
movq
iret
mov
lock
jns
stc
decl
mov
cltd
and
or
xchg
sub
scas
mov
aaa
jmp
xchg
push
test
lods
repnz
pushf
lret
dec
adc
es
movsl
sbb
adc
dec
cwtl
in
push
add
mov
dec
xor
add
cli
cmp
fmuls
int3
daa
mov
mov
in
lock
push
je
sbb
xchg
movd
call
iret
pusha
dec
dec
dec
push
or
xlat
dec
dec
inc
mov
in
test
repz
iret
add
testb
call
mov
outsb
push
xchg
pop
notl
imul
mov
inc
fistpl
cmc
inc
popf
xor
int3
and
addl
xchg
jecxz
cs
pushf
loopne
arpl
cmp
xchg
popa
adc
dec
cmp
pop
jo
insl
add
mov
cmp
popa
std
cmpsb
andl
push
mov
add
xor
xchg
and
jnp
aaa
inc
sarb
jnp
cltd
scas
push
inc
adc
pop
push
xor
insb
cltd
cmp
push
pop
scas
sub
sub
inc
mov
hlt
std
iret
mov
and
outsb
roll
xorb
jno
dec
mov
mov
and
jns
pop
cmp
sub
cmpsl
inc
out
mov
jg
lea
jae
ss
repz
in
std
mov
mov
mov
fs
add
mov
jl
jae
icebp
dec
addr16
sub
xor
js
or
mov
shlb
shl
rolb
xor
fucomp
push
push
mov
ja
mov
insl
xchg
mov
int
aad
insl
xchg
add
aam
adc
stc
add
test
jb
and
out
push
frstor
data16
in
cld
push
or
mov
sar
lahf
aam
xchg
inc
adc
adc
push
fiadds
push
lret
lock
dec
shr
pop
clc
aaa
mov
xor
xor
adc
lods
shrl
fnstenv
cmp
lea
pop
imul
in
fs
dec
mov
popa
fldcw
dec
or
cmp
sbb
lahf
imul
mov
ret
mov
pop
or
loopne
es
sub
or
imul
mov
pop
mov
xor
loopne
jo
dec
push
push
xor
scas
dec
cmp
inc
mov
ss
addb
arpl
add
repz
push
ficompl
xor
pop
add
cmp
dec
jae
fs
orb
cmpsl
pop
ljmp
mul
adc
jo
outsl
mov
gs
adc
xor
jno
mov
dec
and
in
gs
mov
into
fadd
pop
out
sahf
cmp
loope
int3
xchg
mov
shlb
fbld
pop
jge
or
xchg
ja
out
fldenv
mov
fs
xchg
cmp
adc
cld
sahf
loop
jb
jp
fidivs
inc
nop
ret
xlat
test
inc
add
je
cmpsl
cs
mov
xor
add
lea
lds
or
lock
ss
loope
enter
adc
cmp
sbb
adc
sbb
mov
jp
cmpl
cltd
clc
addr16
add
sbb
xchg
and
push
cmpsb
pushf
imul
dec
pop
repnz
jns
mov
cmp
jne
fidivrl
imul
out
test
jp
sub
pop
sbb
out
loope
jmp
iret
sbb
or
icebp
adc
in
lea
ds
repnz
mov
movsl
imul
mov
sti
xchg
aam
js
rol
sbb
or
addr16
out
lea
push
fldt
scas
es
and
lret
subb
test
sbb
les
mov
inc
jmp
xor
dec
out
mov
cs
subb
sub
push
mov
in
int3
xor
testl
loope
jp
push
into
jbe
loopne
shrb
inc
push
lea
lret
push
mov
or
jns
mov
xchg
sub
ret
add
adc
add
hlt
dec
sbb
movsl
cmpsb
movsb
repnz
adc
hlt
out
sub
or
cmp
addr16
shr
jg
inc
enter
test
imul
fisttpl
cld
dec
add
dec
es
fdivl
fdivrs
push
imul
in
fstl
push
jle
inc
or
jmp
adc
jo
mov
and
sub
ja
sbb
sub
adc
xchg
pop
lcall
sbb
mov
adc
sbb
mov
shll
lcall
jno
and
mov
pop
rcll
lret
inc
aaa
xchg
int
and
jge
inc
outsl
sub
outsb
push
stos
mov
pop
pop
sub
pop
cmp
rcrl
rclb
mov
fs
sub
mov
scas
imul
fiadds
ja
pop
ljmp
cwtl
nop
mov
shrb
scas
push
push
jecxz
sbb
cmp
dec
jg
or
jp
fcoms
and
sbb
call
enter
addl
mov
divb
add
mov
enter
jl
int3
add
xchg
mov
pusha
sahf
xor
lret
shrl
repz
aam
add
jle
lods
rol
inc
or
push
lret
jecxz
fdivrp
ljmp
cmpsb
pop
out
imul
mov
cmp
or
xor
pop
mov
pop
mov
aas
cs
in
insb
sub
xor
fldl
xchg
daa
inc
push
data16
xchg
cmpsb
aaa
mov
xor
es
add
out
lahf
gs
popf
or
insb
jmp
mov
mov
pop
in
xor
outsb
inc
loop
cmp
pop
jecxz
jns
adc
dec
inc
jl
lea
adc
or
inc
add
fcompl
and
mov
mov
jl
cs
lds
in
xor
js
lods
es
daa
jp
in
int3
or
xor
push
ja
imul
sub
leave
repz
pop
fwait
lret
out
inc
mov
repz
hlt
jmp
or
fistps
notb
in
mov
or
ret
xchg
rol
out
cmpsl
xchg
js
movl
loope
aam
xor
je
lock
mov
inc
dec
loop
in
inc
mov
movsb
push
jle,pt
imul
cmp
xchg
lock
mov
pop
jl
xor
fidivrs
mov
scas
xchg
insb
js
cmp
aaa
sub
pop
push
cmc
jmp
push
lock
cltd
int
jb
repz
or
or
add
inc
xor
or
imul
psrad
cmp
rep
scas
fwait
ljmp
cmp
lods
fldl
nop
inc
sbb
mov
xchg
adc
jge
push
xchg
sbb
in
inc
scas
mov
mov
fs
int
add
ficoml
mov
inc
insl
mov
push
xor
popa
xor
jne
insb
cli
inc
jge
repz
and
mov
mov
lods
popa
cmp
cmp
lahf
cmp
clc
pop
or
sbb
pop
sub
cli
ja
mov
and
adc
push
mov
mov
je
cmpsl
xchg
push
fwait
jg
mov
imul
sahf
lahf
sub
into
mov
test
out
jbe
add
mov
push
push
fstl
vandpd
sarl
pop
or
jns
mov
in
or
add
aaa
sahf
xlat
sub
out
inc
push
push
out
mov
mov
mov
xor
loop
sub
test
test
mov
mov
loope
sub
xor
iret
xor
fdivrl
fidivl
xchg
mov
push
fistpll
mov
fsub
repnz
adc
in
cli
jnp
outsl
mov
push
sahf
dec
imul
jbe
in
inc
ret
mov
inc
pop
xchg
push
push
sub
ret
jmp
mov
lea
rol
loopne
sbb
mov
inc
adc
dec
pushf
lret
jo
pop
jnp
fidivrl
ret
aam
dec
xor
inc
xor
jp
sbb
sbb
mov
orl
push
pop
mov
fs
xlat
sbb
push
addr16
xchg
imul
jp
data16
push
pop
fnsave
cwtl
add
bound
andb
mov
add
out
stos
insl
loope
inc
push
rorb
es
mov
or
fistpl
inc
je
sbb
pop
add
pop
sub
idivb
push
cmp
pop
aas
mov
jle
mov
or
push
fs
pop
sub
sysexit
add
scas
adc
push
mov
adc
add
out
sub
xchg
dec
and
out
arpl
push
pusha
xchg
push
movsb
sub
pop
das
add
shlb
jb
cli
icebp
and
addl
adc
dec
in
clc
icebp
inc
pop
mov
lret
cmpsb
ret
and
and
sub
rorl
nop
les
subl
test
test
insl
ret
push
push
push
sub
dec
shlb
sub
adc
dec
jmp
cmp
adc
mov
nop
loop
inc
dec
jl
mov
sbb
adc
ds
xorb
in
ret
dec
dec
cmp
das
aaa
mov
hlt
leave
xchg
fdivrs
sbb
mov
cmc
das
sbb
test
or
cltd
loope
test
cmpsl
mov
ret
xor
in
bound
sbb
jae
stos
rorb
movsb
scas
test
sub
add
test
mov
cltd
repz
xchg
inc
imul
xchg
xchg
or
sbb
xor
rcrl
sub
movsl
fdivrs
jb
xchg
stc
leave
or
and
adc
sbb
call
add
jnp
shld
sbb
pop
out
fdiv
add
into
into
lods
invd
jbe
flds
adc
push
sub
jae
sarl
mov
mov
sub
jl
fs
push
jl
pop
push
jle
mov
mov
in
test
scas
xchg
mov
sbb
inc
das
and
std
sub
stc
xchg
aas
jae
push
xchg
cmp
mov
cmp
mov
popl
and
aaa
adc
data16
ljmp
adc
mov
and
pop
cltd
das
les
sarl
mov
pop
adc
and
clc
stc
xor
adc
jo
out
lcall
stc
mov
pop
ss
xchg
xor
inc
push
jg
jo
jno
xor
pushf
xor
hlt
std
int3
mov
pusha
mov
pop
sbb
push
or
cmp
and
add
sbb
xlat
mov
out
in
mov
dec
out
mov
dec
pop
pop
xchg
in
adc
mov
ret
sbb
mov
out
loope
popa
aam
icebp
ret
xchg
shrd
and
and
mov
mov
adc
je
mov
mov
mov
addr16
adc
clc
xchg
xchg
mov
xchg
jmp
mov
movsl
or
jnp
dec
aad
adc
iret
sub
sub
negb
roll
jne
lret
outsb
mov
inc
out
dec
or
xchg
imul
push
aam
repz
push
and
fsub
je
cli
and
filds
lds
dec
dec
testb
pop
mov
mov
sub
push
pop
xchg
xchg
pop
dec
jns
arpl
push
and
mov
dec
jns
or
adc
ret
shl
sub
xchg
roll
adc
fdivr
mov
xchg
idiv
pop
and
outsl
pop
mov
lds
mov
shrl
scas
xchg
dec
xchg
mov
repz
imul
jg
lds
inc
push
sbb
movsl
popa
sub
xchg
dec
ds
xchg
lock
rdmsr
adc
mov
std
mov
and
in
xchg
iret
mov
sti
push
pop
repz
outsb
adc
mov
shll
jmp
fwait
iret
adc
lcall
movsb
jge
cld
int3
iret
jns
push
divb
ja
js
mov
rolb
ret
test
cmp
hlt
or
push
repnz
leave
lods
je
add
dec
cltd
add
aam
lock
in
jbe
and
and
pslld
popa
cmp
add
sub
icebp
bswap
jbe
rolb
xor
cmp
xchg
addr16
dec
cmp
and
xchg
fs
je
sub
push
xor
repz
adc
sub
insl
cli
pop
stc
lock
addr16
dec
mov
adcb
xor
adc
mov
adc
pop
and
jno
flds
shlb
cmp
push
in
fsub
fiaddl
js
int3
scas
adc
fcoms
push
or
pop
leave
flds
cwtl
negb
pop
inc
loop
jmp
jne
shrb
and
add
dec
stos
stos
adc
inc
xlat
repnz
xlat
test
mov
daa
adc
dec
and
cli
arpl
mov
cmp
pop
jge
jmp
mov
mov
add
push
pop
faddl
dec
outsl
sub
cs
psubsb
fcoms
lods
leave
sbb
cmp
sbb
pop
lret
arpl
add
in
jge
mov
popa
push
fisttpl
xchg
enter
sti
push
sbb
out
pop
cmpxchg
jne
in
test
jecxz
iret
mov
lods
adc
xchg
sbb
pop
pop
sbb
inc
je
stos
cmp
les
mov
aam
xor
decb
inc
and
call
dec
ja
xlat
movsb
in
fptan
inc
cmc
mov
decb
iret
adc
push
movsl
in
loope
cmc
mov
lahf
adc
add
and
and
pop
inc
lock
das
lods
push
jl
dec
inc
fcompl
cmpsb
cltd
repz
movsl
aad
pop
jl
jle
or
sub
int
push
cmpsl
arpl
jb
inc
sbb
fiadds
les
mov
and
mov
aaa
pusha
test
inc
pop
int
cwtl
add
xor
sub
lods
mov
std
js
add
xor
loop
pop
lcall
les
adc
sti
mov
xchg
pop
mov
jns
xor
js
or
mov
xor
lret
jmp
outsl
or
pop
push
adc
xchg
cmp
mov
xor
stc
adc
stos
push
inc
xorl
les
dec
clc
push
xchg
flds
pop
sbb
mov
ds
jge
in
call
adc
push
jge
sti
and
mov
inc
jns
aas
push
mov
ret
or
subl
stc
adc
pusha
mov
xor
inc
aaa
adc
inc
bound
ror
jecxz
andb
and
sub
and
adc
fmul
jns
xchg
push
jae
popf
mov
hlt
sbb
rorb
mov
test
xchg
push
imul
out
jno
push
out
movsl
ljmp
jo
push
stos
mov
ror
out
and
pop
xor
loopne
pop
cmpsl
mov
call
loope
mov
or
stos
imull
add
or
sbb
mov
imul
cli
pop
and
imul
xchg
push
mov
aas
lods
push
xchg
and
icebp
sbb
sbb
loope
out
add
lcall
sub
and
xchg
test
cli
inc
sbb
add
mov
add
fnsave
xor
jns
aas
les
push
sub
xor
je
fwait
dec
scas
mov
pop
out
daa
cwtl
nop
and
jne
add
jg
test
and
sub
xchg
cwtl
bound
inc
inc
pop
push
fisubrl
lret
jg
mov
sbb
jg
gs
iret
cmp
xchg
add
insb
fidivl
ljmp
imul
adc
arpl
pop
addb
jbe
jbe
mov
enter
daa
cmp
jns
cmp
mov
adc
sbb
xchg
mov
fmuls
jae
test
int
imul
aam
inc
and
fcomps
ss
cld
sub
push
push
adc
xchg
mov
sarb
adc
iret
cmpsl
mov
test
pusha
inc
int3
jp
cltd
movsb
nop
pop
fdivl
adc
mov
xchg
cmc
mov
ds
into
cmpsb
mov
adc
mov
leave
fnstcw
adc
cmp
loopne
call
push
inc
mov
movsb
das
and
dec
daa
xchg
es
adc
push
and
jnp
insl
sti
adc
or
xor
push
push
andb
cmc
push
das
pop
movsl
xor
jo
push
std
adc
or
movsl
arpl
fisubl
inc
adc
pusha
mov
adc
jae
out
mov
fdivrl
stc
adc
stos
mov
add
pop
pop
jo
dec
dec
and
pop
adc
ret
dec
jge
cmpsb
lahf
pop
mov
pop
ljmp
xlat
mov
movsl
std
fdivs
in
mov
xchg
loope
pushf
dec
jl
gs
loop
lret
adc
pop
jecxz
insb
imul
mov
lret
mov
dec
mov
jecxz
push
push
aad
lock
out
xor
push
mov
adc
in
mov
lcall
scas
es
push
ret
inc
sbb
pop
arpl
xchg
mov
jp
lods
jg
adc
mov
xlat
add
js
aas
sub
dec
dec
call
sub
adc
add
repnz
xchg
or
jl
mov
imul
outsb
flds
jl
and
mov
fsubs
push
cld
push
test
push
fldcw
cltd
and
out
iret
xor
dec
pop
rcrb
pop
mov
push
mov
iret
and
mov
mov
mov
fnstsw
cmp
mov
test
or
push
fcmove
cld
call
bound
outsb
adcl
add
push
jns
clc
je
jne
xchg
adc
xchg
adc
dec
or
jbe
repnz
shlb
daa
inc
cmp
adc
adc
xor
fnstsw
push
jbe
cmpsl
ja
addr16
mov
pop
and
mov
xchg
jo
mov
cwtl
xchg
enter
inc
push
clc
sbb
add
pop
daa
pop
rcll
jae
sbb
cmp
shll
pop
add
mov
lahf
iret
sbbl
pop
clc
outsl
lcall
push
aam
cmovb
in
push
in
in
cmp
adc
add
adc
push
imul
fdivp
and
fstps
sub
leave
or
mov
mov
rolb
jecxz
pop
sub
fstl
or
cmpsl
add
nop
jae
mov
lret
mov
addr16
jle
icebp
imul
mov
loope
test
fdivrl
inc
and
push
inc
jb
sub
add
push
dec
sahf
lea
or
test
ret
repz
push
and
mov
jns
sbb
jne
out
xchg
int
mov
or
jb
sub
xchg
in
sbbb
inc
sub
movl
push
dec
sub
std
test
xor
mov
cwtl
mov
lcall
mov
shll
jl
or
jb
xchg
mov
dec
es
jnp
movsl
jecxz
ljmp
out
cmp
shr
xchg
sub
sbb
orb
xchg
add
mov
push
pop
in
int
mov
fistpl
push
lds
repz
in
ja
mov
into
gs
movsb
or
push
stc
fidivrs
inc
in
push
or
pop
pop
mov
test
mov
jae
and
jo,pt
xor
cmpsb
or
push
pop
roll
lcall
jmp
mov
jg
rorl
and
popa
mov
xchg
mov
test
out
sub
jg
icebp
psrlq
mov
out
icebp
push
sbb
jg
inc
xor
adc
daa
cwtl
loope
aam
mov
imul
mov
push
xor
mov
les
adc
loopne
jge
or
jnp
add
stos
sbb
repz
jo
out
and
adc
mov
aad
not
xor
cs
push
cwtl
adc
jno
pushf
in
mov
mov
jl
fnstcw
mull
aad
mov
xor
xor
push
push
rolb
add
xchg
sbb
shl
cmpsl
mov
cmp
dec
mov
mov
dec
leave
inc
in
dec
arpl
scas
mov
in
cmp
iret
push
inc
xor
out
sbb
or
pop
movsb
add
jb
mov
inc
adc
ss
cmp
pusha
int
add
sub
xor
jle
fwait
imul
mov
mov
mov
and
lahf
adc
loopne
or
xor
sbb
repnz
adc
stos
push
cmp
add
or
or
cmp
push
jne
jp
dec
push
cmp
pop
xor
ss
fsubrp
mov
pop
sub
outsl
xchg
les
cmpb
scas
jmp
mov
sub
scas
mov
mov
call
std
adc
add
pop
xchg
mov
int
test
xchg
xchg
fcom
push
and
in
mov
xlat
fidivl
sbb
inc
xchg
and
into
mov
push
mov
push
and
inc
iret
mov
in
pushf
cmc
mov
sahf
cmp
jl
aad
daa
sub
jg
shlb
inc
pop
or
inc
mov
outsb
add
lods
mov
shr
shll
shlb
fiaddl
out
add
test
gs
or
xchg
sub
imul
jp
das
sub
push
es
or
mov
jp
mov
rcll
std
sarl
xchg
lcall
mov
adc
addb
sbb
and
push
pop
or
jo
dec
cmp
mov
jne
push
fsubp
adc
imulb
cmp
insl
xchg
dec
test
sub
std
mov
jb
stos
jne
push
sub
mov
shll
popa
loopne
ljmp
push
rclb
add
ret
jne
mov
aam
cmpsl
aam
jno
ror
js
rcrl
int3
pcmpeqw
ja
jg
popf
dec
jno
ss
pop
popf
pop
mov
xchg
in
call
call
xchg
pop
mov
ficompl
inc
add
aam
subl
fwait
cmp
popf
mov
negb
loope
aad
inc
in
xor
mov
js
inc
xlat
mov
sub
push
cs
push
fnstcw
cwtl
addr16
push
into
outsl
mov
fstp
dec
in
lret
mov
jnp
enter
lds
call
adc
sbb
dec
xchg
push
stos
lea
loope
shlb
outsl
mov
dec
jne
mov
daa
and
sbb
lock
sub
mov
inc
movsl
int3
pop
stos
mov
mov
pop
dec
scas
les
xchg
repnz
stos
push
push
iret
add
cltd
clc
fxch
in
ja
cmp
iret
add
lods
hlt
test
cmp
and
fnsave
pop
xor
insb
xor
jo
adc
inc
imul
sahf
aaa
and
push
dec
into
js
xchg
int
cld
push
cmp
sub
jp
addl
ret
xor
sbb
and
and
movsl
std
pop
pusha
fcompl
setg
lret
sbb
and
adcb
ret
movb
mov
stos
mov
push
push
add
call
daa
sbb
xor
adc
insb
or
aad
outsb
xchg
sub
cmp
cwtl
add
aas
fidivl
ljmp
cmp
push
lods
push
xchg
mov
xchg
jge
lock
adc
fbld
jl
icebp
stos
xor
mov
jle
or
mov
jge
pop
lahf
test
fstpl
jnp
mov
push
sbb
rcr
lahf
mov
repz
sbb
mov
or
orb
xchg
out
add
push
cmp
push
es
cs
xor
xchg
cmp
loopne
jns
jo
dec
hlt
inc
sbb
jecxz
push
loopne
fsubrs
inc
fmuls
push
xor
dec
ret
push
addr16
andb
mov
dec
bound
ret
das
mov
and
dec
insl
fbstp
lret
fisttpl
push
insl
call
leave
scas
adc
sahf
ja
push
das
inc
pop
movsb
dec
cld
sub
andb
jne
push
rolb
sub
into
sub
push
dec
in
movsl
imul
mov
out
sub
cmp
mov
ficompl
fists
fsubl
cmp
loop
andb
cwtl
or
dec
jp
push
in
ja
loope
push
test
call
jae
jnp
xchg
cmp
adc
mov
and
imul
mov
aaa
dec
stc
add
ss
cli
jge
stc
sarl
mov
jl
cmpsb
xor
mov
cmc
xor
fsubrl
pop
mov
jae
mov
and
add
xchg
sbb
mov
int3
push
xor
js
lock
adc
dec
xor
xchg
pop
sbb
inc
sbb
dec
push
inc
add
sub
sti
or
jle
xchg
push
jl
and
hlt
cmc
fildl
ljmp
jmp
fs
and
imul
xchg
jp
outsl
cli
pop
cmp
jne
add
sbb
pop
in
mov
testl
cld
fwait
jb
test
dec
imul
jbe
decb
sbb
cltd
inc
fwait
insl
aam
mov
xchg
roll
jg
lods
dec
in
jmp
jecxz
jge
pop
jle
mov
mov
pop
fs
iret
add
je
loopne
xchg
clc
push
mov
inc
imul
shll
and
lret
test
sbb
jl
jns
rcl
mov
sarb
fst
sbb
inc
sub
dec
push
pop
mov
fstps
xor
mov
std
jo
jecxz
cwtl
jbe,pn
movsb
ficoml
jmp
push
xor
and
jb
shrb
dec
std
jns
add
lods
cmp
ds
sbb
sbb
test
mov
xchg
enter
cmp
push
jno
stos
cmovnp
push
xor
outsb
lea
jl
lret
inc
cmpsl
dec
imulb
mull
fwait
stos
jbe
aad
jns
inc
sub
popa
cmp
popf
add
cmp
xor
lcall
cld
into
fcompl
std
shrl
lods
out
lcall
clc
scas
sbb
inc
adc
in
popa
and
mov
fsubs
cmc
pop
xchg
mov
cmp
insl
dec
dec
cltd
mov
lret
daa
out
fs
jmp
mov
jge
cmpsb
test
mov
std
arpl
jmp
xchg
inc
push
outsl
test
push
sahf
pop
repz
or
fcmovnu
add
dec
sti
sarb
mov
xchg
inc
jnp
sbb
lcall
leave
mov
jns
push
mov
pushf
stos
and
lcall
xchg
rolb
push
or
push
dec
pop
leave
cli
in
scas
or
cmp
aam
pop
mov
mov
ljmp
pop
aaa
xchg
fiadds
pop
or
dec
ja
loop
xchg
mov
test
movq
and
and
xor
shrl
lds
daa
mov
sbbl
xchg
jecxz
xchg
rclb
jg
icebp
sub
mov
lea
add
sbb
jns
adc
or
pop
mov
sahf
setp
sub
shrl
ret
mov
jne
sub
stc
xorl
in
xchg
std
stos
mov
out
fildl
int
dec
scas
cmp
sub
cld
sbb
loope
xor
cmc
mov
or
aaa
out
je
iret
test
push
pop
insl
gs
in
and
or
aam
or
cmp
mov
pop
and
xor
clc
loopne
daa
shrb
fwait
and
xchg
push
clc
mov
in
pop
and
in
stos
enter
fnstsw
das
push
shrl
dec
bound
jns
inc
iret
dec
popf
mov
add
in
mov
sbb
mov
jb
psllw
xchg
fstl
aad
xchg
adc
cmp
sub
bound
push
inc
jg
pop
iret
jns
out
hlt
inc
icebp
fnop
mov
inc
int
mov
out
inc
dec
dec
jno
dec
xor
es
les
rcrb
inc
call
fistpll
shlb
int3
jp
push
lret
inc
mov
mov
das
xor
aad
shrl
scas
jno
mov
sub
ss
cli
pop
jecxz
sub
mov
clc
xchg
lahf
sbb
insl
push
dec
sbb
int3
fwait
sbb
sarb
mov
fwait
add
or
inc
lock
dec
imul
es
les
push
imul
lods
and
mov
xor
fdivrs
adc
mov
movsb
xchg
aas
in
push
call
sub
sti
repnz
add
aam
les
mov
mov
xchg
in
or
dec
xchg
pop
lods
movsl
fisubl
cwtl
outsl
cwtl
jl
pop
out
add
add
adc
and
popf
sahf
push
fld
cmp
lret
filds
mov
shll
hlt
cmp
pop
cmp
push
insb
cld
or
jae
and
mov
jmp
vpacksswb
sbb
cmp
cmpsl
dec
xchg
out
cwtl
sti
add
in
popl
roll
lahf
pop
icebp
cwtl
and
loop
mov
test
cltd
push
hlt
sar
test
dec
mov
clc
xor
cmp
push
pusha
jae
and
sahf
nop
adc
les
add
fdivrl
lret
mov
add
pusha
and
mov
sub
push
add
sub
iret
cwtl
cmp
mov
inc
jno
enter
divl
xlat
mov
dec
je
add
enter
rolb
sub
outsl
xlat
lock
lock
andl
jg
lock
ljmp
movsb
cld
movsl
test
push
mov
lods
jae
push
lahf
inc
mov
xor
notl
mov
adc
mov
ret
enter
lcall
loopne
dec
add
mov
addl
inc
loope
inc
cld
popa
divb
stos
cmc
out
stos
out
dec
lock
pop
enter
mov
hlt
pop
aaa
adc
adc
in
inc
fs
out
xor
repz
add
and
xlat
call
push
andb
inc
mov
mov
inc
mov
xor
fmul
or
add
dec
mov
div
pop
shlb
mov
test
push
inc
adc
and
scas
shrb
adc
movb
push
fnstcw
xor
addr16
rorb
xchg
icebp
test
sub
in
pop
mov
movsl
imul
mov
xor
andl
sti
mov
xor
cmp
xchg
enter
icebp
mov
dec
jp
push
add
dec
pop
les
je
testb
xchg
daa
lods
mov
enter
fbstp
adc
imull
cltd
icebp
push
daa
icebp
push
cmpsb
frstor
addr16
jbe
frstor
push
enter
rcrb
mov
dec
ss
xchg
into
jg
cmp
push
adc
push
testb
aaa
lods
sbb
or
inc
pop
dec
mov
mov
xchg
cs
cmc
lret
mov
rcr
mov
sahf
loop
pop
xchg
mov
sub
jb
add
nop
jae
mov
shrl
loope
mov
sbb
aam
rcrb
test
xor
inc
arpl
jne
xchg
sahf
mov
push
std
loop
sahf
push
cwtl
dec
mov
clc
jnp
or
cld
sarb
das
daa
mov
jo
inc
repnz
lds
sarl
lods
gs
testb
push
cltd
and
adc
ret
jmp
pop
sub
movsb
repnz
in
daa
test
stc
pop
push
out
cmp
daa
add
in
mov
rep
mov
mov
lret
mov
pop
or
sbb
mov
rcr
cmpsb
lea
push
jne
out
cld
dec
repz
xchg
sbb
push
lock
dec
pop
dec
or
jb
sub
adc
fiaddl
dec
pop
int3
lret
pop
pop
xor
sti
imull
mov
or
sbb
lea
out
xchg
push
xchg
cmpsl
cs
in
push
bnd
mov
dec
adc
pop
cmp
outsl
jl
mov
jns
orl
cmpsl
outsl
push
insb
add
dec
push
adc
mov
or
lcall
imul
inc
jbe
icebp
cmc
loope
andl
enter
mov
stos
popa
outsl
pop
lss
scas
lcall
pop
dec
and
mov
cmpsl
cli
in
jnp
cs
cmpsl
inc
shl
mov
test
scas
call
pushf
jbe
xor
add
popa
xor
test
aaa
call
xchg
sub
test
cmp
mov
push
test
cmp
test
lds
cmp
ficompl
inc
mov
ficompl
lret
inc
push
mov
imul
inc
jle
out
test
xchg
jo
and
in
addb
insl
mov
dec
xor
push
pushl
dec
movl
jne
sbb
dec
cltd
sub
lds
mov
adc
pop
fimull
in
sub
jne
stos
cwtl
add
jge
js
and
mov
decb
notb
push
cli
dec
psadbw
jnp
sbb
pop
arpl
pop
es
push
mov
cmpsl
rclb
lcall
addr16
mov
sbb
es
out
mov
jae
fwait
hlt
sbb
shrl
sahf
outsl
mov
adc
inc
movl
mov
in
pop
push
cld
test
jle
cmc
outsb
pop
pop
jb
in
stc
movsb
ljmp
add
push
out
int3
lahf
add
ficoml
fcmovnbe
inc
lods
test
rolb
mov
outsl
das
push
pop
mov
cmp
sbb
push
mov
adc
push
outsl
call
or
jge
sbb
jmp
aas
mov
jne
andb
push
imul
popa
dec
popa
test
in
stos
cmc
lea
or
test
ds
jo
insb
pop
iret
rolb
add
adcb
adc
sti
mov
test
shl
jle
ljmp
lods
pop
out
or
mov
sub
sub
jno
iret
cltd
mov
sub
cmp
jns
fldt
sub
cmp
rorb
add
sahf
cmp
mov
cmpsl
inc
notl
pop
icebp
dec
ja
add
dec
fsubrl
dec
and
repnz
sub
adc
hlt
inc
xorb
xor
and
stc
outsl
dec
dec
sarb
popa
xchg
hlt
xchg
pusha
adc
scas
dec
fs
sbb
scas
dec
mov
dec
dec
adc
dec
xor
mov
xchg
cmp
aam
or
dec
aas
jbe
test
shlb
bound
xor
inc
xchg
mov
jg
pushf
lods
mov
sbb
dec
or
test
adc
push
inc
push
jp
mov
rolb
jecxz
shll
sub
pop
add
data16
iret
nop
pushl
jp
mov
sahf
push
sbb
fidivs
add
fisttpll
inc
sbb
sbb
fwait
les
insl
adc
dec
jecxz
out
xchg
xchg
js
add
std
adc
mov
arpl
fldt
sti
dec
xchg
pop
cmp
pushf
xchg
iret
pop
js
add
stc
mov
adc
mov
adc
dec
in
pop
fdivs
jbe
pop
xor
push
bound
fbld
push
les
and
mov
jmp
or
leave
ror
fildl
mov
fwait
test
jae
pop
repnz
sbb
lret
int
mov
cmp
dec
js
adc
insl
ret
popf
movsb
xor
test
ds
or
in
xchg
xchg
outsb
inc
pop
mov
fbld
add
dec
fwait
xchg
fcmove
in
fistl
addl
add
cmp
ficoml
fldenv
xchg
into
cmp
push
or
jecxz
outsb
pop
push
es
mov
xchg
or
mov
push
push
push
je
mov
cmp
gs
out
aas
loope
aam
negl
mov
out
movsl
pop
mov
add
mov
ds
lcall
xchg
aam
notl
pop
lock
cwtl
mov
xor
cmp
pop
cmc
push
scas
setae
push
aad
pop
nop
sbb
sti
jnp
lcall
mov
fmuls
add
aad
int3
jp
pop
nop
xchg
addr16
ss
fbstp
mov
fimull
rolb
mov
sbb
push
xor
mov
jo
mov
push
inc
push
scas
xchg
shrl
dec
in
call
push
popf
xchg
adc
and
cli
lods
jnp
insl
jge
mov
jne
add
sahf
sub
push
gs
insl
sbb
dec
lods
les
rol
push
les
inc
xchg
jne
lods
sub
mov
xchg
xlat
sub
adc
adc
add
fistps
stos
jmp
sbb
fcos
and
cmp
push
fwait
pushf
das
lahf
sbb
xchg
test
jns
into
insl
xor
dec
sbb
stos
mov
int
jecxz
and
xchg
aad
xchg
push
into
mov
or
mov
imul
lcall
cmpsl
dec
fcomps
enter
out
jmp
xorb
ret
and
lahf
lock
and
test
push
loop
xor
sbb
cmpsl
mov
icebp
mov
jge
movsl
je
mov
mov
cmpsb
sub
enter
andl
jo
leave
mov
mov
das
pop
enter
cmpsb
mov
cmp
mov
cmp
xchg
dec
sub
and
xchg
sbb
gs
push
jg
jae
test
push
mov
sub
cmc
and
lcall
and
dec
xlat
dec
jo
addr16
lret
xlat
dec
jno
lcall
or
adc
cmp
in
xorl
sti
lcall
adc
daa
dec
aad
mov
scas
sub
jmp
dec
adc
xchg
jp
adc
outsl
jmp
dec
push
loope
leave
or
mov
shr
sahf
ret
sbb
or
add
push
leave
or
jae
in
inc
lahf
ja
movd
mov
mov
dec
test
or
fcmovnb
data16
push
fwait
sub
or
leave
push
pop
cltd
mov
mov
popa
aaa
cmp
shr
rorl
test
insl
into
xchg
les
shll
xor
xchg
jmp
add
mov
stos
insb
mov
push
dec
adc
add
arpl
cwtl
stc
sub
dec
xor
or
jle
sbb
movsb
movl
popf
sarb
sub
cmpsb
cmp
xor
dec
mov
lret
pop
xchg
push
jo
gs
aam
lds
insb
ss
fisubrl
notl
pop
adc
in
or
inc
fildl
cmp
cmpb
jns
pop
scas
shll
xor
mov
ja
sbb
imul
push
push
pop
mov
cs
enter
aad
shlb
out
sbb
xchg
xor
loope
inc
or
jle
in
mov
add
lret
cmp
push
and
xor
in
adc
dec
pop
in
xchg
mov
test
cltd
notb
and
cmp
call
pop
dec
call
mov
je
mov
push
jl
insb
sti
fildl
adc
and
mov
cmpsb
rcrb
nop
cli
das
popf
ret
movsl
jmp
add
out
push
adc
mov
cmc
mov
lea
mulps
fdivl
insl
push
dec
bnd
and
shll
aas
inc
cmp
mov
test
int
xchg
xchg
xchg
xlat
or
lods
push
and
or
fstl
ss
xchg
ja
daa
insb
imul
sahf
xchg
and
cli
shlb
add
cmc
fs
lret
mov
mov
jbe
push
jmp
cwtl
xor
jl
xor
dec
push
mov
mov
in
mov
outsl
cmp
loop
pop
lret
xor
inc
roll
cli
sub
sub
sbb
mov
sbb
fisubs
andl
fucomi
xor
hlt
xchg
cmpsb
cmp
cmp
ja
mov
loope
rcrl
pop
push
dec
loope
adc
xor
push
xor
mov
adcb
mov
test
ljmp
cmc
cmpsb
adc
sub
lock
jne
push
xor
ret
jo
iret
add
or
mov
vphaddubd
or
test
bound
lods
das
adc
xor
xchg
and
les
pop
fs
jge
mov
mov
rcr
push
inc
xor
mov
aaa
inc
pop
cwtl
andl
arpl
jno
sbb
xchg
hlt
push
mov
ss
lods
jb
jo
cld
push
adc
push
enter
loope
pop
movsl
hlt
and
or
or
or
dec
xlat
jecxz
scas
push
std
fcoms
sti
inc
ss
fstpt
out
lret
lods
rorb
xchg
fcmovne
div
sbb
dec
enter
pop
adc
jl
mov
xchg
cmp
sub
jge
cmc
mov
jge
xchg
jo
inc
inc
mov
scas
sbb
add
fiaddl
dec
add
je
xchg
out
je
push
ja
xchg
mov
or
inc
or
mov
test
sbb
xchg
mov
mov
loopne
pop
jno
fwait
out
push
xor
cmc
sbb
fildl
cwtl
in
push
mov
arpl
xchg
jecxz
insb
mov
jle
adc
adcl
ret
add
jmp
adc
jbe
cltd
xor
jle
jge
mov
cmc
mov
test
idivl
or
mov
jo
xchg
xor
mov
cmp
mov
fld
int
dec
mov
mov
add
test
xor
push
sbb
jbe
jnp
jp
arpl
xchg
clc
js
in
insb
imul
shlb
dec
decl
mov
adc
xchg
mov
daa
dec
repz
scas
xor
gs
xor
lret
shrb
push
inc
sbb
mov
leave
xor
ljmp
sub
imul
cmp
mov
fbld
sub
and
hlt
nop
mov
cmp
sbb
fimull
jne
dec
xor
mov
es
aas
pop
cld
xchg
out
jge
stc
mov
dec
inc
jmp
scas
xchg
imull
push
jno
or
mov
adc
scas
mov
cli
mov
lods
adc
dec
sub
in
lret
inc
test
adc
dec
sarl
sub
mov
add
mov
stos
jp
mov
enter
lods
dec
pop
sub
lret
xchg
es
fnsave
pop
gs
sub
fs
pop
rcrb
pop
lock
mov
lods
ret
cmc
les
cmp
cmpsl
jo
mov
and
fldcw
shl
sub
daa
or
xor
adc
dec
push
arpl
call
fwait
clc
sub
sti
icebp
out
sub
push
cmpsb
pop
rclb
dec
sbb
sbb
imul
adc
mov
cmp
call
pop
or
dec
push
cli
mov
xchg
mov
in
mov
cmp
dec
push
scas
ret
lock
js
adc
sub
scas
std
mov
loopne
adc
xchg
mov
out
hlt
lret
or
jns
adc
pop
rorb
mov
repz
int
movsl
inc
out
add
mov
pop
test
jecxz
pop
retw
xlat
push
mov
or
push
stos
loopne
lods
mov
xor
pop
jns
pop
psadbw
cli
and
test
in
add
cmpsb
in
inc
adcl
outsl
pop
sub
jge
adc
pop
mov
leave
mov
rcll
push
jo
xchg
push
mov
mov
leave
shrb
sti
clc
inc
mov
std
mov
test
jo
push
xor
in
sahf
sbb
call
add
xchg
rcl
push
pop
loop
mov
mov
cmp
shll
imulb
push
adc
outsb
lods
icebp
test
cmp
and
inc
incb
adc
add
inc
xchg
hlt
pop
jns
pop
xlat
cmpsl
xchg
and
inc
mov
in
sub
test
cwtl
and
mov
pop
xor
and
into
push
imul
jno
jae
cmp
dec
clc
mov
aas
xor
rep
jae
mov
push
mov
out
test
pop
xlat
dec
rol
fcompl
mov
fldenv
negl
sbb
and
jmp
push
outsl
cmp
xchg
dec
addl
outsb
jne
sub
out
jb
orb
adc
pop
fdivl
sbb
sub
dec
add
ljmp
push
movsl
daa
aam
les
mov
nop
xchg
sub
xchg
sbb
mulb
mov
lods
add
enter
std
iret
push
lcall
lds
xchg
mov
lret
adc
cmp
pushf
inc
mov
mov
hlt
jns
jge
xor
push
fnstenv
in
mov
pop
icebp
jnp
cmp
pop
fcom
xor
vcvttss2si
add
stos
stos
int
test
jg
and
mov
adc
jg
stos
add
sub
sub
fisttps
dec
mov
dec
xchg
cmp
cwtl
lods
faddl
loopne
push
icebp
das
or
aaa
ret
icebp
rcrb
jo
in
les
inc
xchg
xor
inc
push
pop
push
push
push
dec
rclb
mov
pusha
jns
repnz
imul
jo
stos
stos
push
stos
and
inc
lahf
outsl
repnz
pushf
xor
in
jg
pop
rolb
nop
sbb
cmp
rclb
mov
mov
insl
push
jecxz
je
dec
clc
pop
mov
dec
gs
fisubrl
push
pop
cmpsb
cmp
jnp
scas
dec
pop
lret
hlt
aam
negl
or
cmp
jmp
es
pushf
rclb
sbb
dec
adc
pop
daa
jl
stc
inc
xchg
scas
clc
mov
hlt
lock
fsubl
rolb
inc
rcrb
sub
cs
add
insl
adc
xor
lgs
mov
mov
inc
and
sub
clc
or
sub
adc
push
mov
icebp
ljmp
mov
cltd
fisttpll
or
aas
cltd
dec
and
and
in
int
sbb
dec
mov
je
xchg
fdivp
or
aas
pushf
ror
popa
push
mov
leave
ret
ret
lret
popf
outsl
je
cmc
shlb
call
xor
or
ja
mov
sbb
pusha
add
jge
je
aam
sub
or
inc
sub
and
out
cmp
loop
test
lock
sbb
pop
mov
dec
pop
sbb
mov
xor
test
shlb
or
jge
jne
add
adc
out
subl
cltd
jbe
mov
dec
mov
mov
idivl
sub
sarl
jns
pop
sub
and
push
jecxz
xchg
push
mov
loopne
xor
jbe
les
jo
cmp
pop
data16
adc
xchg
xchg
mov
push
jb
dec
pop
scas
test
inc
pop
cwtl
mov
push
imul
icebp
add
ret
aad
shrl
outsl
xor
and
sbb
repnz
nop
fwait
mov
xchg
adc
mov
and
notb
shll
aaa
adc
imul
imul
sbb
movaps
mov
jmp
into
test
arpl
push
fldenv
or
add
roll
arpl
dec
or
jbe
dec
into
xchg
add
dec
add
popf
cmp
mov
dec
sti
adc
push
mov
fs
mov
or
lods
hlt
push
test
nop
cld
pop
ds
add
into
rep
jne
mov
xchg
adc
sub
push
repz
daa
test
ficoml
dec
jg
dec
fs
xor
add
cmp
pop
out
in
adc
pop
mov
mov
cs
mov
inc
shll
cmp
dec
ds
jge
sub
std
mov
and
adc
cmp
repz
fdivl
movsb
loope
jo
and
cmpsl
cmpsb
add
lret
into
mov
and
and
lret
mov
push
or
push
das
mov
add
imul
lea
fwait
add
lret
mov
sub
sbb
jle
adc
mov
add
sti
outsl
sbb
jb
mov
cmp
in
popa
pop
add
js
arpl
sub
sub
add
mov
hlt
mov
dec
adc
lds
in
dec
sti
cmp
mov
jge
push
jns
inc
jo
xor
mov
xor
bound
gs
test
lret
outsl
and
rcrl
ds
cmpl
mov
or
pusha
jle
addr16
call
mov
pop
jmp
mov
mov
mov
xchg
insl
stos
lea
cmp
mov
lret
mov
or
mov
ljmp
xchg
stc
jecxz
pop
movsb
mov
mov
cmp
cmp
sti
ficoms
pavgb
testb
pushf
mov
fwait
jae
and
out
push
xorb
sub
jmp
call
pop
inc
pushf
js
push
adc
sbb
mov
movsl
mov
sahf
jb
and
popf
imul
repnz
push
jb
or
and
leave
notb
dec
and
fstpl
sbb
sbb
jns
cmp
inc
jnp
movsl
mov
fistpl
andl
mov
in
pop
cmpsl
fistpll
or
or
inc
adc
cld
xchg
repnz
movsl
test
popf
sub
xchg
push
test
sub
arpl
out
rorb
leave
outsl
lahf
out
int
sbb
push
js
repz
outsb
mov
add
xor
pop
inc
ja
out
daa
lcall
cmc
cmp
xchg
sahf
or
add
xchg
jnp
jno
mov
add
mov
push
cmp
push
cmp
test
aas
scas
push
jg
xor
aam
inc
icebp
sbbb
in
fs
inc
notb
jnp
imul
sbb
into
dec
pop
cltd
inc
in
cmc
jne
mov
jle
sub
bound
aad
mov
jne
push
lret
push
lret
roll
jp
adc
dec
sub
xchg
gs
int
stos
xchg
cmp
push
lea
adc
push
and
cmp
fcomi
loopne
testl
push
sbb
add
filds
addr16
and
push
scas
inc
mov
mov
inc
shl
fists
xor
cmpsl
or
clc
cmp
mov
ret
dec
add
xor
cld
push
lock
push
add
pop
add
pop
sbb
lods
pushf
pop
mov
aaa
iret
cmc
mov
test
push
js
mov
mov
nop
cmp
xor
movsb
nop
push
dec
shr
mov
push
jno
fisubrl
aad
xor
scas
lods
mov
movsb
sbb
mov
xchg
or
jb
sbb
cli
loopne
dec
ja
cltd
ffreep
xor
xchg
add
mov
adc
or
lods
xchg
ds
and
add
ljmp
fnsave
aam
ljmp
nop
sahf
dec
hlt
mov
lock
push
imul
outsb
adc
int3
dec
inc
adc
and
mov
imul
jg
adc
leave
rol
mov
sbb
out
lret
sbb
fstpl
les
test
adc
shlb
mov
pop
lods
cwtl
mov
lret
enter
cmp
cmp
jg
jae
push
loope
dec
insl
push
mov
jge
mov
sub
or
push
pop
aam
int3
sahf
and
aas
jp
jb
jbe
inc
fnsave
xor
daa
aaa
inc
je
push
repnz
mov
push
sbb
call
or
dec
outsb
and
loop
or
shrb
hlt
lret
leave
mov
lcall
lods
jns
mov
xchg
insb
sub
ja
stc
enter
aad
rcrl
dec
jmp
adcb
mov
ja
mov
in
arpl
insl
rol
call
mov
cmp
or
jle
xor
sub
bound
sub
popf
push
mov
inc
imul
pop
cld
into
push
lds
cmp
pop
dec
adcl
mov
mov
pusha
pop
jp
leave
mov
sbb
xor
lret
push
icebp
cmp
jb
sbb
inc
hlt
mov
mov
sub
xchg
data16
fsubrl
loop
cmpsl
lods
mov
push
test
subl
add
push
jns
push
cmp
pop
jne
xchg
jmp
xor
lock
addr16
mov
cmp
lods
mov
jecxz,pn
sub
addb
and
mov
aas
sub
adc
cmp
or
xchg
adc
mov
enter
push
adc
fnstsw
adc
lods
lea
mov
mov
fwait
pop
lea
cli
add
cltd
mov
inc
fidivs
mov
ja
cmp
andl
jns
aas
cmp
pop
call
and
insl
aad
xorl
lret
mov
cmpsb
icebp
flds
mov
mov
sub
mov
jb
xor
fsubrl
es
mov
jnp
or
cltd
iret
inc
dec
or
aad
and
lret
pop
out
sbb
xchg
push
imul
push
xchg
inc
or
or
lret
stos
outsl
push
icebp
push
add
std
std
sbb
fstps
xor
and
jbe
cmp
cli
addr16
push
mov
enter
mov
xchg
test
xor
xchg
xor
dec
push
inc
sbb
fwait
sbb
mov
cmpsl
mov
repz
fsubs
rorl
adcb
aam
testl
popf
hlt
push
imul
mov
inc
js
push
fmul
push
push
les
xor
add
cmc
cmp
xor
je
or
xorb
jecxz
pop
out
roll
and
imul
enter
adc
sub
mov
mov
sub
les
clc
fadds
push
xchg
add
mov
inc
hlt
sahf
in
scas
out
addr16
xchg
iret
lock
mov
and
repz
jne
xor
sarl
inc
popa
jle
lock
mov
mov
jns
cwtl
push
aas
pushf
dec
pop
fnstenv
push
sbb
aam
adc
movsl
pop
xlat
ret
jno
inc
insl
inc
inc
adc
mov
sbb
xchg
add
or
mov
xlat
dec
or
xchg
push
ds
outsl
loope
sub
sarl
stc
popf
sarb
push
xchg
or
mov
es
dec
pop
loopne
mov
and
mov
adc
jb
bound
mov
vmread
jno
and
cmc
adc
add
into
xchg
loopne
pop
mov
ret
ret
fnsave
and
popf
mov
mov
mov
aaa
sub
jnp
dec
cmp
ljmp
or
jle
lahf
mov
xor
mov
sbb
bswap
sbb
sbb
shl
push
cmp
pop
test
push
mov
rorb
mov
clc
cmp
fwait
ror
and
gs
cmc
xor
cmp
loopne
fwait
add
scas
sti
lahf
in
inc
nop
push
div
cltd
push
sub
mov
aam
or
and
push
es
mov
movsb
lahf
shlb
pop
adc
adc
mov
rcr
jne
mov
out
xchg
shrb
adc
out
adc
and
push
loopne
mov
cmp
call
out
insb
aad
adc
mov
divl
jmp
inc
jnp
flds
cmp
push
jo
cwtl
push
cmpsb
cmp
mov
sub
xchg
or
imull
pop
mov
xchg
lahf
scas
adc
adc
nop
daa
sub
mov
ret
dec
cmpb
test
mov
pusha
xchg
testb
mov
fisubrl
pusha
mov
xchg
mov
mov
push
mov
mov
sbb
xchg
movsl
out
dec
dec
idivl
jp
les
add
dec
or
pusha
xchg
xchg
es
add
push
mov
xchg
les
dec
das
adc
adc
ficompl
or
or
pop
push
mov
dec
adc
cmpsb
add
jb
mov
mov
int
cmpsb
push
les
loopne
inc
push
push
mull
inc
fimull
out
js
mov
movsl
cli
repz
leave
sbb
inc
jg
cmp
outsl
sub
mov
pop
loop
push
ja
and
and
inc
xchg
jne
sbb
dec
lcall
sbb
push
jg
aaa
cmp
inc
stc
scas
out
mov
push
cmp
rcl
lods
pop
sub
cmp
and
adc
pop
xor
sbb
outsb
mov
sarb
sub
mov
lea
and
fs
je
ds
jo
andb
clc
push
or
clc
dec
cld
sub
fimuls
repz
lcall
push
push
inc
push
fcomps
dec
iret
cwtl
repnz
test
push
in
test
xchg
aad
outsl
xor
sbb
gs
mov
dec
ja
in
sbb
ret
push
push
stos
sbb
test
js
inc
arpl
fwait
loope
jb
sbb
imul
cmp
fistps
xor
fistpll
xor
test
adc
sti
sahf
pop
imul
imul
in
dec
callw
jmp
dec
mov
cmp
sbb
mov
jle
dec
jne
xor
cmp
pusha
pop
or
enter
sub
scas
mov
sub
lock
push
fs
and
pop
sub
xor
mov
dec
add
fimull
mov
sahf
pusha
adc
movsl
xchg
xor
sub
int
jl
jne
jbe
daa
ds
pop
dec
cmp
fidivrs
js
out
mov
pop
or
clc
mov
inc
mov
sbb
cmpb
cmp
ret
in
xor
in
xchg
aad
je
lods
loopne
sub
sbb
inc
sbb
test
sub
addl
mov
xor
dec
and
push
out
inc
stos
jnp
mov
push
dec
into
xor
cmpsb
adc
and
push
cmovs
rolb
cld
mov
jb
mov
lds
jg
fs
and
fldl
add
sbb
mov
add
lods
mov
nop
cmp
and
sub
mov
sub
sbb
lea
sub
jno
adc
outsb
jns
push
int
jno
inc
cmc
out
push
hlt
xchg
cmp
adc
rcrb
cmp
pop
pop
shll
add
pop
sbb
fucomip
sub
js
jbe
pop
mov
dec
sub
adc
loopne
xor
rorl
mov
dec
pop
fsubs
mov
adc
mov
pop
out
cli
dec
pop
and
pop
outsl
fwait
out
test
scas
mov
pop
jnp
jg
ret
subl
sub
pop
lcall
divb
rorl
sahf
push
ficomps
bound
bound
lret
xchg
add
repnz
pop
or
xchg
call
pop
or
sbb
adc
xchg
pop
into
mov
mov
xor
pop
or
lods
aam
mov
inc
insl
dec
xlat
sbbl
fiaddl
int3
push
pmulhuw
mov
ret
add
pop
adc
aad
repnz
dec
or
pop
je
movsl
sahf
jge
jnp
mov
jecxz
leave
xchg
push
popa
dec
iret
mov
mov
mov
pushf
shrb
mov
pop
xchg
orl
inc
int3
enter
test
mov
rorb
fbld
fnstcw
dec
mov
jae
jl
cmpsb
and
mov
and
cmpsl
xchg
call
jmp
adc
les
sbb
inc
or
lds
sbb
arpl
mov
xor
sub
pusha
mov
jo
rcr
out
jecxz
movsl
lea
sti
dec
pop
adc
mov
add
or
rolb
mov
xchg
lock
push
adc
cld
cltd
mov
pop
outsl
adc
jle
sbb
xor
lock
clc
xor
dec
jne
fcmovnu
sub
js
pushf
test
cmpsb
xchg
ret
repz
sbb
mov
and
pop
add
pusha
lods
inc
movsb
xchg
into
dec
add
cmp
dec
and
int3
mov
cli
sbbl
lret
lods
insl
or
lea
jp
shlb
jbe
push
inc
ja
dec
pop
aaa
clc
dec
fmuls
push
movsb
stos
movsl
ret
sub
adc
sub
push
loopne
cmp
sbb
jne
or
xor
in
adc
xor
inc
arpl
mov
sti
add
iret
push
cmp
pop
test
and
loop
addl
cmp
clc
jo
dec
dec
cmp
or
fsubrs
stos
sub
cld
jge
popa
mov
mov
cmp
or
pop
pop
idivl
adc
fstpl
icebp
stos
in
jge
add
in
jp
lods
dec
pop
loope
and
xchg
jnp
sbb
push
cmp
out
call
inc
push
scas
mov
push
ss
aam
je
out
push
pop
aam
daa
jge
cmp
stos
pop
cmp
jmp
sbb
jns
jns
dec
push
inc
dec
es
and
cmp
iret
mov
fstpt
icebp
or
mov
or
inc
pop
pop
movsl
jg
bound
pop
mov
std
cmp
cld
fidivrl
clc
xchg
jle
movsl
or
ss
xor
mov
cmp
xchg
add
jns
push
jmp
std
inc
mov
xchg
pop
shlb
push
ret
stc
test
nop
jl
jns
scas
adc
andb
jne
xor
lahf
in
mov
js
aaa
push
test
aad
test
cli
jg
fsubrp
xchg
mov
popl
mov
fmul
jmp
rorl
xor
cmp
data16
push
clc
jb
adc
sbb
daa
aad
pop
mov
pop
loope
sub
idivb
sbb
insb
lahf
inc
and
cmpl
cmp
cld
jecxz
aas
test
cmp
jl
xor
in
popf
mov
and
jg
pushf
push
add
outsb
or
push
imul
mov
insl
inc
sbb
fldt
mov
fnsave
push
jnp
ljmp
outsb
cmp
dec
sti
les
popf
sub
rorl
popa
pop
push
outsb
push
mov
push
jle
aas
into
sub
or
inc
stos
pusha
fsub
cmp
add
in
out
push
stc
mov
mov
dec
movsl
adc
mov
pop
out
xor
lahf
in
xchg
fwait
adc
outsl
sbbl
popf
daa
popa
pop
mov
add
cmc
cmp
dec
lods
aam
cmp
or
aaa
insl
mov
jecxz
adc
test
movsl
mov
pop
out
sbbb
xlat
push
lods
negl
popf
pop
xor
fcomps
cmp
inc
sbb
cmp
in
xchg
lock
sbb
lea
jl
arpl
and
xor
rclb
lods
or
negb
dec
decb
movsl
pusha
enter
xchg
add
jge
or
pop
ret
ljmp
ret
mov
in
aaa
adc
xchg
cs
or
adc
int3
idivb
adc
xchg
lea
cmp
incl
cmp
sarb
push
scas
sub
test
into
dec
dec
xchg
cmp
mov
frstor
icebp
jmp
xorb
xchg
arpl
mov
nop
call
test
gs
jbe
push
mov
scas
mov
pop
call
or
movsb
pop
outsl
insl
xchg
sbb
in
add
in
je
mov
jp
ds
push
rolb
aad
or
add
xor
adc
cmpsb
int3
adc
adc
sub
cmp
mov
sbb
push
js
add
inc
inc
jl
mov
ss
in
or
xchg
les
aad
fwait
mov
mov
cmp
js
mov
jmp
add
push
inc
aaa
mov
jle
pop
and
and
jbe
imul
or
xchg
inc
sbb
dec
adc
iret
and
mov
inc
jge
outsl
outsl
int3
adc
loope
xor
ret
dec
cmc
popl
adc
fsubrl
sbb
rorl
cmp
cld
push
xchg
pop
or
add
in
cmp
or
dec
mov
cmpsl
sti
xor
push
xor
mov
imul
out
or
ljmp
lds
cmp
jne
sbb
adc
jecxz
adc
es
jp
fidivs
icebp
pushf
jl
insb
loop
hlt
sbb
insl
mov
xchg
std
mov
mov
test
clc
pop
xor
jne
rclb
into
dec
lock
pop
push
xchg
enter
add
fcmove
pop
in
add
in
mov
out
pusha
and
xor
jne
out
push
mov
inc
popf
or
jg
xor
mov
cmp
lahf
icebp
xchg
fisubrs
ret
insl
scas
dec
add
xor
jl
stos
mov
je
inc
dec
adc
rcl
rsqrtps
inc
aam
rorl
mov
xchg
or
cmpsl
arpl
or
dec
inc
test
stos
orb
inc
or
mov
mov
and
jle
outsl
ret
idiv
jp
in
jmp
int
bound
pop
scas
jg
ljmp
pop
movsl
xchg
mov
inc
push
std
mov
push
or
fimuls
sbbl
jmp
sub
add
fwait
cmc
pop
mov
icebp
sub
push
outsb
fiaddl
or
fmulp
dec
push
sbb
mov
mov
mov
pop
sbb
dec
cli
stos
and
dec
add
xor
lret
adc
dec
dec
xchg
cli
popf
in
push
xchg
sub
mov
lds
pop
scas
mov
push
add
xor
cmp
dec
es
pop
int
cwtl
cmpsl
jg
push
push
test
pop
mov
mov
cld
data16
push
and
popa
sub
mov
adc
xor
gs
xchg
stos
test
xor
ja
cmp
mov
pushf
mov
les
lahf
cs
sar
push
imul
movsb
fsubs
stc
or
mov
adc
pop
loope
cmp
mov
out
in
icebp
sub
inc
or
pop
xchg
fildl
push
add
lahf
mov
mov
cmp
push
daa
mov
jo
test
std
sbb
stos
or
gs
std
inc
xchg
add
mov
inc
jb
push
fstpl
xchg
rep
or
lds
adc
mov
mov
sub
fimuls
dec
inc
enter
addl
sub
divb
incb
and
ja
out
ss
sbb
adc
mov
ror
jnp
push
enter
push
add
stc
cltd
xlat
jns
shlb
rol
mov
pop
imul
sub
loop
cmc
cmpsl
pop
testb
jns
dec
jp
in
xchg
inc
cmp
jl
xor
loope
lret
sub
mov
je
jmp
ret
rol
sbb
mov
neg
lahf
push
xor
inc
and
stos
jbe
out
sarb
lgdtl
lcall
testb
xor
cmp
arpl
std
xchg
xlat
sub
mov
dec
adc
cld
jno
pop
mov
sahf
jp
and
nop
xchg
test
clc
add
fldl
push
fcomps
jne
stc
add
sub
inc
movsl
sub
shl
dec
jae
dec
out
inc
int3
mov
pushf
adc
jne
xor
daa
dec
sbbl
cltd
dec
cld
sbb
into
mov
subb
push
jge
xchg
pop
and
mov
mov
ficomps
cltd
xor
mov
mov
fldl
inc
and
in
call
inc
mov
pop
xchg
loopne
push
sbb
jae
sub
scas
jle
xchg
imul
repnz
stos
sbb
call
fwait
jo
adc
inc
and
xchg
fwait
loope
test
jle
add
arpl
arpl
bound
pop
fldcw
out
add
pop
insl
cmp
out
ret
stc
cltd
popl
mov
add
mov
adc
fldcw
lods
cmp
adc
out
movl
sub
adc
inc
je,pn
jno
cmp
xchg
or
fcmovnb
dec
dec
mov
inc
mov
push
stc
insl
outsl
push
pop
test
insb
inc
cli
rcrl
or
data16
cmp
repz
jnp
push
mov
push
mov
es
hlt
xor
mov
xchg
int
pop
sti
inc
insb
or
outsl
fcoms
sbb
aaa
popa
sbb
cmpsb
push
nop
adc
ret
insb
addb
insb
jb
cmc
jge
or
mov
sbb
in
xlat
pop
or
and
in
dec
inc
and
gs
or
inc
push
loop
pop
adc
mov
dec
inc
jbe
es
adc
pop
inc
shll
mov
or
cmp
pop
push
xor
adc
popl
mov
cmp
clc
aaa
add
rcl
repnz
mov
dec
insb
rorb
leave
xchg
loopne
cmp
ret
dec
cmp
enter
lods
repz
leave
insl
add
xchg
adc
sub
jae
in
and
push
loop
mov
jecxz
fmuls
inc
enter
shrl
cmp
mov
testl
sbb
pop
popa
inc
jb
jne
loop
sub
cs
sbb
test
pop
je
or
dec
test
movsl
mov
pop
mov
inc
dec
mov
push
bound
ret
out
insb
sarb
jb
mov
jecxz
inc
fcom
pop
fdivrs
or
or
fnstsw
inc
xchg
dec
add
out
idivl
stc
es
nop
in
xchg
negb
shrl
mov
scas
cmp
lcall
adc
out
pop
add
add
fs
fs
and
es
jnp
and
cld
sbb
mov
push
jl
movsb
or
aad
push
dec
mov
repnz
sub
adc
lea
je
mov
or
sbb
or
jp,pt
sbb
dec
lea
ret
push
jl
dec
daa
ds
in
ret
lods
dec
xor
push
jns
in
cld
sbb
push
les
push
ja
cmc
loope
mov
movsb
bound
mov
sti
test
insl
add
and
shll
or
or
inc
fdivl
loope
mov
in
gs
or
mov
je
iret
mov
and
out
add
cld
gs
roll
std
jbe
jae
nop
scas
cs
push
loopne
jo
clc
lcall
pop
mov
cmp
or
pop
sbb
mov
inc
mov
int
sub
cmc
inc
mov
or
jnp
or
mov
cs
nop
lds
pop
pop
stos
or
test
push
sub
fs
das
std
into
and
xor
test
add
and
dec
jl
fsts
pop
mov
bound
aaa
xor
cmpsl
pop
cmp
push
ja
xor
les
mov
leave
loop
fstpl
jno
push
insl
add
jnp
out
sbb
enter
sti
mov
or
shl
push
push
fisttpll
mov
and
mov
push
mov
mov
cmp
push
xchg
jns
add
call
mov
add
mov
negl
test
sbb
sti
dec
jmp
in
test
out
loopne
nop
push
incl
mov
inc
in
mov
sarb
inc
sub
sub
mov
imul
or
lret
repnz
stc
mov
ljmp
leave
xor
ret
sub
paddusw
pop
in
xchg
inc
sub
jle
scas
aad
xor
subb
inc
loope
xor
ja
xchg
sub
xchg
jmp
cld
pop
mov
out
xor
lds
inc
popa
mov
pusha
lret
ljmp
test
adc
cwtl
mov
mov
sub
push
sbb
int
jge
sub
xor
and
xchg
hlt
aam
dec
pop
xchg
cmpsb
lcall
fdivrl
xchg
aam
and
mov
sbb
xchg
jge
cmp
push
fwait
sti
jle
mov
xchg
mov
adc
enter
push
sub
mov
cmova
jle
jne
aaa
sub
cwtl
push
fcmovnu
test
mov
hlt
pop
push
imul
jne
stos
andb
in
xchg
cltd
testb
cmc
sbb
inc
inc
or
mov
enter
xlat
out
aaa
fcomps
mov
adc
sahf
in
popf
pop
rorl
mov
rclb
cli
add
xchg
xchg
loop
sub
cmp
adc
in
stos
inc
push
out
aas
rorl
popa
mov
lods
cld
mov
xchg
mov
in
in
xchg
jp
jne
aam
dec
jns
movsb
loop
mov
in
adc
mov
out
mov
sub
rcrb
cmp
jb
daa
push
xchg
ret
cmp
lock
cli
push
or
push
cmp
jo
jnp
inc
int
push
cmpsb
vpackssdw
xchg
dec
mov
and
add
add
andb
add
pop
push
pop
fwait
xchg
mov
jne
stos
lods
mov
lret
jo
in
dec
ficoms
xor
pop
jge
cwtl
int
mov
pop
loope
lods
incl
outsl
stos
pop
je
dec
fst
sub
inc
cwtl
cmp
sbb
dec
adc
adcl
mov
in
dec
push
pop
dec
mov
adc
repnz
fnstsw
jns
lods
dec
cli
pop
sub
jb
push
jmp
xor
rorb
mov
add
pop
adc
sub
cmp
orb
std
sbbl
pushf
ds
mov
flds
pop
pushf
in
jmp
jb
cmp
push
and
pop
gs
pop
jl
mov
xchg
test
nop
mov
push
xchg
jnp
dec
dec
adc
scas
jnp
test
scas
mov
pop
movsb
lret
cmpsl
mov
xchg
mov
push
xorb
repnz
jp
mov
xchg
xchg
andl
outsb
pop
mov
cmpsb
pop
mov
mov
cld
mov
jb
or
push
mov
or
push
test
ss
test
adc
fdivs
pop
jae
xchg
lds
inc
cmp
lods
mov
xor
cmp
insb
movsb
jae
aaa
cld
add
mov
sarb
test
ja
jmp
xchg
cmp
push
fucomi
mov
fs
xor
or
mov
cmc
insl
mov
mov
es
ds
lods
repz
push
push
retw
cmp
push
add
adc
enter
and
jae
jmp
xchg
xchg
shr
pop
xchg
sub
mov
sbb
and
das
xchg
aad
sti
sbb
test
mov
in
ror
push
arpl
cmpsl
mov
mov
adc
cmpsb
adc
pop
mov
movsl
sub
gs
fadd
inc
arpl
cli
add
sub
lcall
dec
sub
mov
xor
xchg
fwait
xchg
jle
lcall
inc
jnp
mov
jb
pop
in
sub
or
adc
sub
popa
out
jno
out
add
sbb
insb
xchg
mov
or
and
and
and
cmpsl
data16
dec
adc
inc
ljmp
mov
sbb
jl
inc
cs
and
ret
les
sub
rep
lahf
xor
mov
and
mov
fstps
or
fwait
int
fcmove
insb
popf
or
mov
pop
scas
lea
mov
pop
add
dec
xchg
pop
roll
cmp
ljmp
in
rcrl
dec
test
mov
or
sbb
bound
jbe
setae
loop
dec
ja
and
ljmp
pushw
or
imul
imul
cmpsl
push
sbbl
and
mov
pop
in
stos
mov
sbb
lahf
je
xchg
and
test
sbb
inc
xchg
pusha
or
out
xor
dec
lea
gs
push
aam
mov
dec
push
mov
lds
mov
cli
aad
stos
mov
outsb
jmp
vmovd
pop
scas
dec
out
xchg
cld
lahf
ss
setp
test
adc
xor
mov
jae
sbb
mov
jae
push
xchg
cmp
fadd
xchg
int3
adc
cmp
adc
dec
lods
jbe
xor
sub
inc
fdivr
ljmp
sub
push
les
mov
sbb
lret
hlt
jge
mov
lahf
testb
rorb
sbb
or
push
ret
push
cld
sahf
std
es
push
mov
inc
test
xor
fwait
dec
loope
or
cmc
shll
push
in
inc
int
inc
sbb
mov
xor
sbb
lods
movsl
sbb
cmp
outsl
loopne
sti
dec
pusha
out
fimull
sbb
dec
lret
dec
mov
imul
insl
jle
lcall
inc
xchg
rclb
clc
mov
ret
dec
hlt
adc
aad
rorb
jmp
mov
data16
inc
test
stc
inc
add
out
cmp
pop
dec
mov
addl
push
das
jle
and
ljmp
sub
mov
and
lahf
or
pop
dec
pop
and
pushf
sarl
mov
popa
lret
stos
or
fisttps
jb
ret
xchg
sti
jmp
mov
dec
addl
inc
jmp
jle
mov
cld
and
addr16
pop
xor
mov
mov
jmp
or
sub
nop
xchg
xchg
lods
pop
mov
pop
jo
scas
cmpsb
sub
aam
or
mov
xchg
ljmp
cmp
lret
out
out
lock
push
mov
or
in
xchg
jmp
or
or
sbb
cmp
andb
jle
lret
dec
adc
dec
lods
jb
xor
mov
push
inc
cld
lret
mov
divl
add
fisubs
mov
dec
pop
lea
stos
or
mov
outsb
jge
and
mov
lret
add
cltd
cmp
pop
mov
aas
mov
cli
mov
add
test
sub
popa
ss
repnz
push
out
fstpl
in
and
jp
cmpsb
xor
out
dec
jbe
xchg
mov
push
sbb
sub
pop
fdivrs
aaa
rcrb
push
les
out
ret
shlb
add
cld
add
jge
mov
and
dec
imul
lea
call
sub
shrb
push
jge
xor
jge
push
add
add
testb
inc
daa
jo
and
shl
and
icebp
or
mov
pop
pop
stc
mov
inc
adc
push
addr16
mov
std
push
jmp
mov
bound
outsl
ja
xchg
xchg
jmp
cmc
xchg
lret
in
xor
gs
inc
or
sub
push
pop
add
push
or
jg
fmulp
cmpsb
sub
faddp
test
jo
sbb
repz
dec
adc
pop
adc
inc
loop
jg
lds
sub
loope
mov
test
push
adc
lcallw
ret
lods
dec
sbb
push
lcall
push
frstor
ret
pop
aaa
jge
mov
out
out
cmp
ja
mov
pushf
imul
pop
jae
repz
dec
test
in
mov
in
lcall
jae
out
sbb
call
push
in
and
lods
scas
jbe
push
push
mov
push
leave
sub
mov
rolb
out
into
fisubrs
sub
add
mov
or
das
inc
inc
adc
and
inc
sub
repnz
lret
stc
pop
cld
and
push
dec
cmpsl
lods
rcl
adc
test
jmp
outsl
jecxz
pop
or
js
lahf
inc
push
repz
icebp
cmp
cmp
and
mov
or
inc
push
fcomps
lret
scas
popf
sbb
cwtl
stos
pop
and
inc
stos
fstp
sti
shr
mov
imul
sbb
jb
iret
frstor
insl
insb
and
in
addr16
cmp
int3
es
mov
mov
mov
mov
xor
or
ret
pop
add
lret
in
jp
mov
shrl
inc
jp
test
in
xchg
mov
dec
xor
fwait
orl
pop
icebp
ret
pop
adc
xchg
or
push
not
xchg
icebp
call
xor
or
movsl
mov
lods
insb
icebp
cmp
flds
adcl
sub
mov
dec
negb
push
shlb
xor
sbbl
or
pop
loopne
sbb
test
inc
xchg
pop
cmp
mov
sub
inc
in
je
mov
adc
cmpsl
je
dec
in
cli
aaa
push
loop
push
sub
cmp
mov
movsl
mov
adc
cmp
lds
push
mov
flds
xchg
arpl
dec
div
mov
add
pop
dec
dec
aaa
mov
xchg
mov
push
stos
cmp
sbb
lcall
xchg
or
jmp
leave
fldl
and
shll
or
pop
mov
in
in
cmpsb
pusha
popf
sahf
mov
scas
jno
and
mov
cmp
je
and
repz
xchg
xor
inc
fwait
cltd
stos
push
popl
sub
enter
scas
push
lds
cmp
xlat
pop
scas
test
add
mov
xlat
mov
xchg
popf
lods
ljmp
out
adc
cmp
daa
cwtl
dec
and
ja
cmp
stos
add
cmp
push
mov
mov
xor
and
sbb
aaa
jns
xchg
fcompl
xchg
xchg
call
sbb
and
sub
lcall
pushf
mov
mov
jle
lock
xor
push
in
lahf
adc
outsl
xchg
add
cli
xchg
stc
shrl
or
push
pop
adc
push
iret
loope
movsb
es
stos
lea
mov
jp
xchg
mov
jbe
popf
mov
lahf
sub
es
cmpsl
jo
hlt
movsb
incb
loopne
sub
outsb
fwait
out
mov
inc
jnp
enter
pop
lahf
lock
dec
lret
out
rcrb
test
push
ds
push
dec
adcl
push
sahf
mov
pop
and
insb
mov
lret
push
pop
out
pusha
in
xchg
cs
fimull
pop
test
cmp
add
ja
repnz
arpl
sub
push
mov
lcall
test
rorb
rclb
push
stos
add
ja
mov
add
adc
add
lea
sbb
sahf
cmpb
lods
leave
adcb
out
jbe
inc
jae
jle
repnz
mov
cmp
lods
outsl
mov
push
ss
ds
pop
mov
inc
mov
mov
fwait
jmp
jl
cmp
ret
adc
mov
test
inc
jae
mov
pushw
cmpsb
mov
cld
push
decb
mov
in
int
adc
cmpsb
call
pop
popf
push
add
sbb
xchg
lea
pop
cmp
cmpsl
ret
mov
arpl
arpl
mov
add
cwtl
dec
aas
xlat
ljmp
xor
cltd
insb
test
rcll
mov
inc
or
jae
cwtl
pop
test
cmp
inc
sub
lret
loopne
push
mov
adc
xor
and
xlat
jbe
and
ljmp
or
repnz
js
mov
jno
add
scas
mov
jmp
inc
aam
icebp
and
cmp
mov
cmp
mov
mov
icebp
adc
mov
jg
inc
aas
les
loop
icebp
xor
xchg
pop
hlt
mov
scas
adc
push
xlat
adcl
neg
sub
push
adc
and
mov
lcall
repnz
ds
imul
adc
dec
ja
jb
mov
push
and
fs
loopne
sbb
jbe
loop
push
jl
test
js
cltd
and
sbb
xchg
repnz
loopne
es
add
mov
fiadds
ljmp
ss
sbb
popf
xor
lahf
ds
push
sub
inc
ret
mov
cli
add
dec
rclb
xorl
cmp
fdivp
fwait
xchg
test
xlat
lea
jecxz
xchg
addl
lret
mov
lea
jb
scas
cld
imul
shlb
inc
push
or
push
and
jnp
jl
dec
and
jecxz
jne
cmp
cmc
rcrb
add
stos
rol
jg
mov
inc
push
or
push
inc
enter
dec
sahf
lds
in
lahf
lahf
loope
rorb
mov
xchg
mov
iret
adc
xchg
sbb
dec
sub
mov
icebp
cmp
or
or
cmp
push
mov
repz
out
sub
movd
mov
loop
pop
movsl
sub
mov
push
fwait
cmp
mov
rcr
pop
pop
test
sub
or
bnd
mov
adc
mov
nop
sbb
push
jecxz
das
das
sub
cmp
adc
cmpsb
lods
stos
pop
xor
xchg
shr
xchg
dec
std
sbb
ss
jmp
sahf
adc
adc
test
lret
lret
adc
lock
ja
outsb
pop
pusha
cmp
dec
pop
ss
adc
in
insl
imul
fsubl
ljmp
mov
xlat
testl
mov
pusha
in
jb
cmp
es
sbb
insl
mov
in
sbb
ljmp
dec
pop
xchg
inc
cmp
pop
js
mov
shrd
or
add
cld
inc
pop
pop
and
dec
out
mov
sbb
pop
iret
jge
push
pop
jecxz
xchg
dec
fwait
fs
mov
add
clc
mov
pop
rol
hlt
fs
insl
ret
pop
aas
add
int3
sbb
mov
call
push
leave
lretw
orb
loope
mov
dec
push
into
jl
inc
fucom
imul
adc
orb
mulb
in
nop
mov
pushf
jmp
mov
aad
cld
adc
and
out
adc
cmpsb
and
mov
mov
aad
pushf
cmp
or
sahf
xor
lahf
push
or
mov
inc
cld
or
push
nop
mov
inc
add
xor
sbb
ljmp
mov
je
add
lcall
test
pop
and
mov
adc
inc
fisttpll
fsts
mov
pop
aam
jp
pop
test
fadds
cmpsl
test
ja
or
aad
sub
nop
jle
sbb
and
jnp
movsb
dec
cmp
xchg
lock
aas
cld
jbe
mov
mov
shl
lcall
movsb
aaa
sbb
ss
stos
push
out
fisubs
pop
maxps
jnp
xchg
mov
and
push
add
adc
xchg
lock
roll
dec
sbb
cld
outsl
xor
mov
int
inc
adc
cmp
xor
xchg
push
int
mov
shl
mov
pop
rclb
sarb
in
jnp
mov
int
mov
cmp
movb
mov
leave
cmp
cwtl
inc
inc
dec
in
mov
pop
sbb
mov
mov
push
aaa
imul
inc
test
loopne
xor
fwait
sub
dec
sub
ljmp
mulb
scas
adc
dec
mov
adc
inc
movsb
in
mov
push
mov
negl
xchg
imul
test
js
in
pop
xor
jp
pop
sub
mov
out
loope
sub
fdivs
dec
cmpsb
push
mov
jnp
jbe
rolb
fdiv
jns
add
dec
push
out
aad
ja
mov
cmp
and
clc
lret
icebp
lret
ja
mov
sti
mov
jp
pop
and
negl
push
add
repnz
cmp
inc
in
xchg
shll
pusha
enter
or
add
out
mov
cld
fnsave
mov
test
dec
jg
lea
gs
mov
subb
jne
and
pop
mov
jp
stc
adcl
je
sub
rorl
in
mov
negl
loope
pop
ds
inc
push
add
fisubrl
rcr
jecxz
inc
inc
movl
enter
push
sub
aad
adc
pop
lock
xchg
aas
mov
jne
push
mov
push
into
nop
in
fs
adc
cwtl
repnz
adc
dec
mov
test
pop
xchg
repz
imul
jnp
xchg
and
fstps
daa
roll
add
aad
or
mov
add
stos
and
xlat
lret
or
dec
out
lahf
jl
lcall
in
add
xor
mov
in
inc
fsubs
pop
mov
inc
add
cmpsl
cwtl
mov
mov
inc
pop
sub
xor
adc
dec
mov
iret
adc
xor
sahf
out
in
push
jae
lods
xchg
aas
test
jne
cltd
aam
dec
dec
jo
xchg
push
xor
jecxz
outsl
push
sbb
ret
and
fs
push
jns
add
cwtl
sti
pop
aaa
jns
mov
ror
xchg
sub
pop
cld
or
mov
sbb
repz
and
adc
ds
sti
popf
and
scas
push
dec
out
insl
je
sbb
push
add
repnz
stc
insb
mov
jp
insb
sub
ret
nop
pop
dec
shll
stos
cld
lahf
xchg
xor
mov
addr16
adc
cmpsb
popa
mov
xchg
outsb
lret
repz
add
push
aas
mov
lock
out
inc
pop
pop
xchg
adc
popa
push
daa
je
push
in
mov
jb
es
pop
lock
xor
nop
sub
jecxz
mov
pop
sbb
test
ljmp
and
jo
xchg
test
ds
cmpsb
clc
sbb
and
shll
jno
loop
mov
lods
push
mov
pop
dec
gs
pop
sub
push
lds
push
add
into
and
shr
addb
les
mov
repz
mov
mov
inc
sub
nop
sbb
pop
sbb
orl
jle
sbb
cmp
inc
jo
push
cld
lds
fs
mov
jo
inc
sbb
in
testb
mov
mov
iret
mov
cmc
movsl
push
mov
in
xchg
ret
mov
sbb
test
popf
test
jle
jnp
xor
and
dec
pop
pushf
inc
int
or
iret
loope
scas
insb
fiaddl
sar
int
fsubs
sub
mov
mov
lds
ficomps
cmc
push
aad
dec
movsl
in
jnp
xor
push
data16
ljmp
push
adc
ret
sbb
sub
jge
inc
xchg
daa
jge
mov
out
mov
rcll
loop
pop
enter
fdivrs
les
xor
sbb
out
pop
imul
cwtl
fcompl
and
or
cmp
gs
loopne
cltd
cmp
jbe
xor
sbb
pusha
movsb
movsb
mov
lock
jbe
mov
and
pop
jmp
aam
out
or
pushl
mov
mov
ja
je
test
out
aam
inc
call
out
sub
mov
rclb
adc
call
mov
mov
div
sub
push
fcomps
popf
sbb
stos
push
dec
int3
mov
or
fwait
jnp
loop
sub
mov
mov
add
xor
or
jns
mov
pop
cmp
jbe
push
mov
fidivrs
cmp
mov
cld
les
repz
mov
outsl
or
or
ret
stos
and
mov
cmp
xchg
fisttpll
mov
inc
outsb
xchg
and
mov
mov
inc
adc
cmc
inc
push
xchg
mov
pop
fidivs
test
out
ja
cmp
push
imul
cmp
dec
cmp
gs
push
pop
inc
xchg
loop
stos
cmp
mov
xchg
mov
mov
out
push
push
sub
xor
mov
sbb
xlat
pop
pop
mov
mov
repz
lds
adc
lods
push
fwait
jecxz
andb
jae
fcmovne
out
dec
in
ficoml
cmp
jl
lods
dec
mov
outsl
push
pop
sub
xchg
dec
xorl
sub
jl
jle
aaa
clc
sbb
sub
cltd
or
clc
movsl
adc
sbb
mov
imul
pushf
or
pop
jp
out
in
or
cmp
pop
pop
adc
cmpb
mov
sub
mov
and
mov
movsb
or
popf
decl
push
aad
addl
ja
and
rolb
or
outsl
jnp
push
jne
add
addr16
mov
push
push
in
adc
repnz
call
jmp
add
mov
cmpsl
jns
popa
ret
fistps
lock
or
not
out
shrl
loope
xchg
fwait
add
push
andb
jo
adc
and
pop
or
push
adc
insb
and
mov
mov
push
pop
leave
pushf
mov
repz
ljmp
imul
push
es
mov
mov
scas
cld
xchg
jge
pop
test
data16
ljmp
movsl
shlb
mov
dec
push
jo
dec
or
in
mov
lods
sub
call
mov
adc
lods
pop
fwait
adc
insl
aaa
fildll
cwtl
stos
push
mov
fadd
shrl
inc
data16
fdivrs
and
or
jae
cmp
sarb
repz
in
dec
shlb
or
ds
dec
sbb
mov
adc
or
stos
int3
push
pop
dec
pop
adc
sti
data16
cmp
or
jb
fst
hlt
pop
imulb
and
sbb
imul
movq
jns
cmp
inc
sub
imulb
clc
mov
xor
test
xor
insl
mov
stc
mov
inc
lret
xlat
xor
test
xchg
dec
stos
dec
mov
cltd
xlat
xor
jns
add
out
push
call
cltd
lds
stos
enter
inc
out
ror
cld
mov
aaa
xor
xchg
dec
pusha
xchg
pop
or
andb
push
inc
push
sti
gs
push
dec
mov
push
icebp
and
cmc
aam
popf
aaa
nop
scas
lds
ja
fdiv
adc
idivb
out
leave
test
test
jae
jae
push
aaa
stos
scas
add
xor
dec
adc
sahf
pop
int
popl
in
mov
sub
jecxz
sti
sub
sub
dec
jnp
sbb
mov
in
call
mov
mov
push
adc
pop
cmc
jns
adc
cwtl
cmp
dec
daa
into
inc
inc
or
mov
inc
xor
lock
fsub
mov
call
add
xor
push
or
aaa
test
out
cmpsb
pop
fisubs
mov
sub
daa
subb
push
sbb
adc
jo
test
pop
cmpsl
add
data16
pushl
and
dec
mov
inc
dec
dec
xchg
mov
mov
inc
out
push
jge
cltd
jmp
jl
sub
in
aam
inc
jp
push
push
dec
jb
jl
insl
cmp
notl
inc
pusha
popf
fs
xor
mov
pop
mov
sti
sub
xchg
or
rcrl
push
lret
mov
lods
xchg
ret
popa
cmp
pop
or
mov
inc
mov
test
add
jae
fldenv
jae
cmp
or
and
add
shl
fnstenv
das
xor
mov
jle
pop
push
ljmp
mov
mov
sub
in
cmp
lret
cmp
jge
mov
push
lods
pop
jecxz
push
adc
test
sub
adc
xchg
iret
or
pop
test
clc
hlt
mov
in
mov
loop
imul
adc
cmpsb
xor
fwait
popf
or
js
jne
inc
sbb
sbb
lret
dec
dec
addb
ret
add
mov
xchg
lods
jge
sub
jno
xlat
ljmp
aad
and
adc
aas
outsb
mov
inc
cwtl
inc
adc
cmp
aad
jno
push
xchg
mov
adc
push
sbb
mov
jns
cmp
adc
addb
inc
into
or
pop
mov
sti
pop
jns
inc
add
mov
insl
popa
push
sbb
gs
and
fwait
add
jl
fisubrs
mov
or
ja
push
in
data16
jns
addr16
cs
push
loopne
cmp
ret
scas
jb
cmp
dec
jp
or
sub
jmp
xchg
jge
mov
jle
std
repz
push
inc
cltd
std
xor
jge
jae
add
loope
je
outsb
inc
idivb
jmp
aaa
cltd
scas
les
cmpsl
dec
cmp
pop
bswap
stc
push
add
pmaxub
mov
sahf
pop
xchg
fcmovnb
jbe
xlat
inc
jg
mov
mov
push
fld
test
xchg
int3
stos
inc
adc
push
sti
out
rcrb
in
inc
adc
xor
pop
aam
jg
and
mov
dec
frstor
fs
jp
and
pushf
xor
test
shl
xor
aam
inc
xor
mov
pop
mov
mov
in
mov
mov
test
xlat
idivl
cld
sbb
ficomps
out
add
out
call
jecxz
icebp
ret
mov
xorl
mov
clc
adc
push
lcall
xchg
sbb
loopne
int3
arpl
sbb
sub
pusha
pusha
cmp
adc
pushl
pop
movsl
mov
ljmp
pop
movsb
das
mov
sub
arpl
mov
sbb
lock
mov
xor
daa
xchg
das
add
cmp
push
xchg
xchg
mov
mov
push
ljmp
in
rcl
jbe
stos
jnp
rol
mov
stos
mov
out
ret
push
add
loope
cs
mov
cmp
movsl
out
pop
lret
mov
sbb
mov
or
fwait
adc
stos
jecxz
xchg
popf
dec
dec
mov
lret
xor
xchg
xchg
iret
in
push
pop
js
lret
adc
pop
mov
dec
push
dec
ficoml
xchg
loop
pop
jmp
out
cmp
nop
addr16
pop
mov
xchg
gs
and
push
insl
xchg
mov
les
mov
cmp
cmpsl
lea
dec
je
xlat
sub
out
lret
mov
push
lcall
in
sub
out
pop
ljmp
outsl
inc
push
out
je
imul
xor
adcl
xchg
inc
fimull
adc
add
js
enter
std
cmc
les
xchg
call
mov
stos
mov
out
sbb
mov
add
fstpt
arpl
sarl
hlt
addr16
cltd
add
out
mov
nop
fdivrs
mov
fs
push
mov
popf
cli
lret
xor
jmp
jne
push
lods
push
adc
outsl
test
iret
xlat
mov
pop
nop
inc
imul
pop
cmpsl
adc
inc
or
sbb
cmpl
ja
lods
repnz
jae
adc
daa
inc
jl
mov
xchg
mov
sbb
mov
adc
add
adc
sbb
jg
mov
jg
pop
xor
or
pop
out
sti
sub
ds
cmp
jo
adcl
iret
repz
imul
lods
pop
ljmp
push
jg
mov
hlt
iret
xor
ljmp
dec
fistpll
and
inc
out
outsl
sbb
xor
rolb
or
mov
inc
in
cmp
mov
stos
subb
fildll
into
jle
dec
pop
cmp
xor
jle
test
test
out
inc
int3
jmp
add
stos
lea
fs
push
xchg
jbe
hlt
pop
dec
dec
daa
pop
imul
imul
add
jmp
mov
outsb
mov
xchg
popf
xlat
es
lock
push
repnz
sbb
mov
jle
js
or
and
push
or
addr16
jge
cmp
lods
cltd
jns
fdivs
enter
xchg
leave
mov
cltd
out
adc
add
pop
push
addb
mov
test
jb
aad
roll
scas
in
and
fistl
repnz
addr16
fidivl
xchg
loopne
std
aad
popl
cld
enter
add
jmp
or
dec
mov
adc
inc
or
xchg
mov
fildl
xlat
int
out
aaa
inc
jmp
orb
lock
ret
jl
test
inc
icebp
fsubs
int
sbb
pusha
sti
xor
xchg
les
fldt
ds
insl
mov
loop
pop
sbb
add
test
out
mov
mov
adc
mov
jne
or
pop
rorl
inc
pop
push
pop
add
inc
das
add
xor
cmc
mov
mov
pop
add
aaa
cmp
mov
pop
mov
inc
ljmp
mov
mulb
mov
push
cltd
inc
dec
sti
imul
dec
je
les
or
jle
dec
ret
pop
lock
push
push
stc
add
or
cmpsb
fisttps
pop
xchg
or
fptan
inc
mov
sahf
adc
ljmp
jno
xchg
jnp
sahf
push
lret
ret
lret
mov
xchg
fmul
in
mov
cmp
pop
jns
mov
loopne
faddl
mov
push
cmpsl
xlat
jno
cmpb
shl
xchg
jae
jp
mov
popf
loope
sub
and
mov
mov
or
xchg
aaa
xorps
dec
cwtl
xchg
mov
pop
lds
jne
inc
mov
push
mov
ror
sbb
xor
xchg
pop
ds
sub
clc
mov
jb
rorb
fwait
mov
je
cmp
div
outsl
push
adc
xchg
push
rorb
jle
mov
rorb
mov
push
movsl
scas
lods
mov
dec
imul
sub
xor
nop
jo
insl
cwtl
popf
test
mov
mov
je
stos
xor
push
cltd
mov
movsb
inc
call
adc
aam
jnp
ja
lret
dec
je
and
pop
or
sbb
jle
stos
mov
push
aam
xor
jno
aaa
imul
ret
jge
jle
das
lret
cwtl
pop
cmp
or
enter
movsb
push
aas
repz
sub
xchg
jg
lock
stos
data16
jge
movsb
inc
bound
jl
jns
cwtl
mov
xchg
mov
addr16
vcmpps
testl
mov
dec
jb
jmp
xor
lret
xchg
loopne
out
int
mov
xlat
rorb
inc
bound
mov
push
push
pop
sub
paddd
jmp
or
push
pushf
dec
mov
cmp
out
fnstsw
adc
pop
xor
xchg
sub
adc
or
cmp
or
dec
add
sbb
int3
cld
xchg
mov
sbb
dec
inc
stos
call
repz
pop
cld
xchg
add
rcrb
lock
add
adc
or
dec
ja
imul
dec
std
ret
cwtl
pushf
jp
mov
push
adc
movsl
inc
loopne
xor
mov
pusha
test
or
jmp
daa
je
shll
frstor
in
dec
lcall
and
inc
mov
sub
aaa
push
pop
pop
dec
pop
cmpsl
mov
imul
shrb
dec
jmp
addr16
ja
cmp
add
stos
ret
movsl
pop
clc
push
add
test
jecxz
or
and
das
fwait
xchg
xchg
ret
xor
and
push
fldenv
adc
cmp
and
pop
and
adc
jl
inc
in
insl
ja
popl
out
hlt
stc
jns
addr16
sbb
js
daa
dec
push
popf
push
addr16
notb
inc
outsl
shlb
mov
and
cmp
into
fistpll
divl
mov
pop
cltd
outsl
lcall
pop
roll
mov
and
mov
adc
push
out
and
inc
jbe
xor
ds
dec
cld
nop
pusha
adc
adc
dec
fstpt
push
push
mov
dec
mov
pop
mov
mov
in
pop
pop
cs
pop
sbb
loop
pop
add
jl
inc
sbb
or
xor
call
call
sub
add
or
cmp
sub
mov
fs
jge
mov
sbb
pop
in
mov
mov
mov
sbb
int3
push
stos
ffreep
and
dec
sub
in
out
mov
cs
dec
into
pop
mov
mov
loop
inc
adc
andb
push
mov
dec
loopne
fcmovb
aaa
mov
cmpsl
cmp
out
cmp
add
sbb
leave
cmp
push
push
mov
or
loopne
out
lret
in
orb
or
xor
jmp
aam
int3
dec
dec
dec
xchg
pop
jmp
mov
or
and
andl
or
fdiv
sbbb
cs
out
outsb
xor
dec
out
jmp
cmp
pop
std
pop
nop
adc
callw
adc
sbb
divl
mov
mov
lods
inc
fsubl
lahf
pusha
pop
insb
sbb
jnp
cmp
aad
andb
test
mov
outsb
mov
xor
aaa
dec
sub
xor
in
stos
mov
fidivs
bound
dec
jbe
sub
pop
dec
cmpsl
sub
xor
sti
daa
inc
pop
bound
inc
addl
aad
in
int3
rcrl
mov
pop
xor
call
divb
or
xchg
mov
pop
lods
pop
mov
mov
jae
in
dec
loop
push
pusha
adc
fistl
mov
ffreep
push
test
fiaddl
or
mov
push
mov
mov
in
bound
incl
jl
stos
xchg
psllw
pushf
jo
and
int3
mov
je
cmpl
inc
mov
push
scas
pop
mulb
cmpl
dec
fildll
sbb
mov
mov
jge
and
notl
pop
loopne
insb
imul
imul
or
outsl
xor
in
xor
lcall
je
insb
test
lods
and
enter
cld
sub
sti
bound
movd
add
mov
fnstenv
pop
xor
inc
push
mov
es
add
mov
test
inc
das
mov
dec
inc
lods
cmp
adc
sbb
mov
mov
movd
push
ja,pt
das
loopne
mov
xchg
movsl
xlat
push
xchg
arpl
adc
sti
mov
jo
push
jle
outsb
dec
pop
or
sti
lret
cmpl
jp
mov
movsl
into
add
sbb
lds
jnp
push
mov
in
popf
mov
inc
pop
jecxz
je
mov
jae
push
pop
push
cmp
sub
pop
jns
clc
push
daa
lcall
insl
imul
stc
aas
dec
mov
outsl
cmpsl
lock
push
leave
test
sbb
popf
cltd
cmp
lcall
mov
test
hlt
ret
push
test
push
or
in
or
and
ljmp
in
mov
pop
outsb
xchg
pop
pop
sbb
inc
out
sub
jp
ljmp
mov
ret
push
dec
push
dec
or
psubsw
jnp
das
cli
aam
dec
xchg
xor
loop
pop
cmp
mov
mov
das
aam
ret
mov
ror
ficoml
sahf
jl
js
imul
sub
out
test
mov
jbe
popf
inc
cmpsb
pop
xlat
das
cmc
or
lcall
push
jg
jp
push
sbb
popf
pushf
pop
outsl
mov
fildl
mov
aaa
sub
cmp
loope
iret
pop
aad
test
mov
lock
inc
sbb
mov
iret
add
cmp
push
jge
inc
or
pop
fwait
mov
sub
stos
inc
popf
insb
arpl
cmp
imul
repz
push
fisttps
lods
or
xor
flds
nop
cmp
lock
loop
repz
mov
icebp
out
cmp
cmc
enter
outsl
loopne
xchg
aas
pop
xor
pop
aas
and
les
xchg
xor
test
adc
push
pop
imul
mov
jmp
xor
push
lods
inc
ljmp
imul
call
mov
xor
subl
ja
test
int3
push
lea
sub
fmuls
add
lock
cwtl
and
jne
lcall
enter
pop
push
fidivs
ficoms
out
mov
fmull
mov
ret
mov
mov
imul
call
aaa
mov
icebp
and
sub
lods
fisttpll
or
pop
xorb
push
je
xchg
test
cld
test
out
jg
aad
fadds
pop
inc
jne
outsb
pop
pop
mov
mov
push
jbe
xor
jmp
xchg
les
or
nop
sbb
mov
clc
fisubs
mov
push
insb
loop
cmp
lret
test
jns
xlat
jno,pn
ss
in
dec
pop
push
fs
xor
xchg
cltd
into
dec
ljmp
add
pop
sti
insb
or
jle
outsl
lods
fldcw
bound
adcl
aam
mov
mov
int
sub
xchg
std
or
push
insb
sub
lods
add
psraw
mov
sub
fnstcw
loope
dec
in
cwtl
jecxz
test
das
aad
fwait
test
in
pop
sarb
lds
imulb
cmp
pop
pop
shl
adc
adc
push
inc
outsl
fdivl
stos
cmp
mov
rorl
cmp
mov
dec
or
inc
ss
pop
mov
sbb
and
push
dec
mov
and
xchg
loopne
push
cwtl
js
cmp
sti
ret
mov
cmp
sbbb
arpl
sbbb
movsl
add
pop
push
add
scas
rclb
clc
jns
scas
repz
daa
lcall
popa
or
cs
mov
pop
inc
adc
dec
sbb
or
insl
and
stc
inc
ja
push
inc
xor
sahf
xchg
sbb
fsubs
dec
xchg
ret
xchg
jnp
dec
cltd
sub
nop
jl
lods
push
sbb
adc
mov
mov
scas
and
popa
sarl
push
xor
out
ret
sbb
sbb
sbb
sub
adc
daa
imul
dec
pop
cmc
cmpsl
or
push
cmp
pop
rcr
jns
pop
pop
sahf
decb
clc
pop
icebp
fiadds
out
pop
inc
dec
sub
cwtl
ljmp
lgdtl
test
subl
xchg
pop
addr16
lret
popf
mov
dec
rcl
cmp
lret
insb
xor
lcall
push
mov
movsb
xchg
adc
cmp
lds
push
inc
inc
mov
and
je
fldenv
inc
lods
push
push
pop
push
out
pop
mov
mov
xchg
sub
and
out
test
or
push
cmp
mov
sbb
lea
outsl
aas
dec
push
xor
outsb
aas
push
sub
ror
insb
pop
adc
dec
lcall
pop
cmp
and
mov
jp
sbb
roll
xorb
jnp
add
stc
imulb
xor
xor
stos
das
ss
es
adc
lods
mov
mov
std
lea
cmpsb
cmp
jecxz
pop
and
cmp
das
or
fs
fisubrl
bound
mov
fs
cmp
adc
lods
inc
sub
scas
inc
aaa
push
push
lods
addr16
cmp
mov
cmpsb
fmulp
sarl
and
addr16
and
test
mov
andl
lret
ret
and
adc
shrl
inc
add
cmc
inc
jns
xchg
cmp
sbb
push
inc
aaa
and
jae
aaa
cmpsb
cmp
mov
loope
insb
ljmp
aam
jnp
cmp
adc
scas
push
jmp
lcall
mov
nop
add
push
pop
xchg
push
adc
add
or
dec
mov
ja
sti
fsubrp
inc
addb
mov
mov
fadds
arpl
dec
cmpsl
daa
aam
aam
cli
sub
jbe
mov
in
pop
fbld
push
pop
mov
and
jo
adc
fildl
xor
add
movsb
xchg
and
xor
shlb
fcompl
sub
adc
inc
pop
sub
icebp
rcr
call
mov
fmull
fimuls
ret
add
inc
push
push
scas
ror
jl
push
rol
cmp
adc
xchg
scas
xor
xchg
mov
adc
dec
fidivl
mov
in
mov
pop
enter
inc
sbb
cmpl
dec
ret
mov
jnp
mov
xlat
pusha
mov
outsb
lods
sahf
ds
push
xchg
js
dec
test
dec
push
jmp
add
mov
push
adc
sti
mov
cmp
push
mov
sub
in
pop
repnz
mov
ljmp
sub
out
ror
insb
int
data16
cld
add
push
rorb
lea
mov
pop
enter
adc
vunpckhps
add
shrl
test
arpl
stos
decb
divl
gs
repz
and
mov
repz
pop
jbe
faddl
loope
sub
fldcw
testb
inc
cmpsb
cmc
pop
arpl
fwait
mov
adc
mov
mov
pop
call
push
js
testl
addr16
mov
hlt
lret
pop
insl
insb
mov
enter
sbb
gs
xor
in
ja
jge
leave
xor
mov
sbb
aaa
add
add
rcr
jne
jp
mov
pop
and
ret
sbb
cmpsb
dec
push
movsl
iret
iret
xchg
loop
in
lea
std
js
loop
jge
pop
mov
pushf
and
dec
and
rorl
push
dec
loope
out
pushf
mov
mov
les
xlat
inc
lahf
sub
bound
js
mov
test
xor
call
push
xchg
rorl
js
frstor
hlt
popa
mov
jge
sbb
icebp
inc
push
xor
sbb
scas
xor
js
cmp
lods
dec
fst
and
sbb
sub
roll
inc
addr16
test
jp
int3
aas
mov
mov
popa
repnz
rol
mov
stc
pop
int3
lret
imul
inc
or
scas
arpl
xor
xchg
cli
push
jae
sahf
pop
pop
loop
pushl
pushf
rolb
in
lret
push
dec
jecxz
outsb
lret
fnop
pop
rclb
push
jg
out
pop
add
rcrb
sub
pop
das
mov
std
test
push
fdivl
call
test
outsl
or
mov
xchg
fs
mov
cmp
push
das
xchg
call
or
mov
enter
jo
and
add
lahf
push
cmp
dec
loopne
push
ds
push
outsb
inc
pop
pop
enter
shll
mov
in
adc
xchg
dec
cld
ret
fadd
sar
pusha
jp
adc
into
shlb
sbb
add
adc
cli
fmulp
xor
in
pushf
push
pushf
shr
leave
push
lea
pop
push
pop
push
call
or
std
add
arpl
xor
add
mov
sbbl
xchg
cmpsb
xchg
inc
mov
clc
jae
and
bound
add
popa
add
sbb
lock
popf
add
outsb
aad
xor
andb
adc
sahf
shl
inc
mov
cmp
add
or
hlt
xchg
jo
icebp
hlt
filds
rcrb
es
mov
stc
gs
inc
rorb
mov
arpl
stos
outsl
roll
sahf
add
je
mov
pop
out
mov
popf
push
fdivr
aaa
mov
rolw
mov
cmc
xchg
mov
push
or
pop
and
cltd
je
xor
jae
shl
or
lahf
std
and
pop
test
popf
ror
jne
pop
cmc
dec
xchg
xchg
fidivrl
push
sub
add
jg
mov
lcall
adc
cmpsb
fcompl
arpl
sbb
cmpsl
pop
out
lahf
fxch
sub
ljmp
jbe,pn
lret
xchg
dec
into
popf
sarb
push
dec
jge
out
cltd
mov
sub
aas
pop
call
out
popa
aaa
test
sbb
pop
shl
popa
mov
push
mov
js
adc
push
dec
inc
mov
call
mov
addl
addb
push
andl
clc
xchg
jle
fdivl
aas
int
sti
ret
or
cmp
cmpsl
in
sbb
test
xor
hlt
mov
stc
inc
sbb
das
cmp
or
outsl
push
in
cmp
pop
dec
mov
cltd
sbb
mov
out
int3
popf
xchg
mov
xlat
mov
push
mov
push
xorb
fisubrl
outsb
and
ja
lahf
dec
insl
stos
xor
dec
cld
pop
es
push
add
mov
aas
pop
aas
cld
lret
repz
xor
inc
inc
add
dec
data16
push
stc
dec
mov
dec
adc
adc
cs
sbb
adc
mov
jo
xlat
adcb
sbb
addr16
sbb
or
cmp
pop
ffreep
inc
inc
xlat
movaps
shll
and
jbe
lock
aad
lcall
sub
leave
repnz
mov
popf
out
cmc
ds
add
adc
ljmp
lock
inc
in
sbb
std
in
pusha
jmp
pop
popf
cmc
inc
dec
mov
xchg
dec
mov
div
dec
mov
popa
aad
aam
xchg
add
leave
inc
test
or
nop
inc
sub
xchg
es
cli
xor
sbb
xchg
mov
fimull
sbbl
loope
arpl
outsl
mov
jge
jmp
pop
cmp
or
sub
imul
cli
mov
inc
dec
stc
jle
loop
jl
lret
jbe
sub
jle
div
mov
out
das
pushf
and
std
test
out
jnp
push
push
dec
sub
xchg
fldt
repnz
push
clc
aam
push
test
add
dec
fiaddl
xor
pop
lods
clc
loope
sbb
into
sbb
sub
push
sub
iret
cli
enter
in
and
das
shr
xor
aas
sbb
loope
ja
push
dec
dec
jb
lds
scas
pop
pop
jns,pt
in
mov
pop
mov
push
dec
mov
ret
inc
popa
ret
lds
or
push
cmp
shl
xchg
inc
pusha
push
orb
cmpsb
repz
btc
es
enter
fs
add
xchg
movsl
xchg
jl
sub
lret
pusha
xchg
cmp
mov
sbb
sbb
mov
bound
jno
ja
lds
nop
stos
pop
or
sub
mov
test
sbb
das
sbb
shlb
sahf
test
fldcw
imul
jle
fsts
rcrb
notl
fcmovnb
lods
dec
outsb
int
cmc
test
imul
push
cmp
mov
ror
std
or
cmpsb
addr16
or
nop
xchg
pop
lcall
aam
stos
adcb
lock
mov
adc
xor
mov
jno
pop
sub
add
lods
pop
mov
nop
inc
push
shrb
in
xchg
shll
xorl
xchg
pop
ret
cmp
or
sub
push
xchg
and
imul
shrl
stos
sbb
lods
pop
xor
xorl
mov
jg
sub
mov
aad
and
mov
cmc
out
jae
lea
jl
lcall
test
push
add
cmp
sbb
xchg
sub
aam
js
pop
fwait
imul
xchg
jnp
pop
pusha
sub
mov
adcb
push
fcompl
test
cltd
sbb
lret
sbb
clc
inc
xor
call
in
stos
cmp
shlb
add
mov
xchg
sbb
pushf
dec
jmp
shll
jle
test
vcvttps2dq
lret
gs
fisubl
into
mov
inc
imul
fisubl
in
jmp
bound
orb
mov
jecxz
dec
sti
cld
and
ljmp
sub
shll
lcall
push
and
push
sbb
shl
call
push
rcrb
subb
pop
pop
xor
xor
cltd
mov
repz
or
xchg
les
add
lods
out
and
xchg
dec
push
xchg
fcmovbe
sbb
adc
xor
mov
jae
cmc
adc
inc
or
mov
jp
jmp
mov
in
dec
test
push
das
fmul
jo
mov
lahf
popl
lahf
or
pop
jecxz
cmpsl
popf
shll
aam
imul
jbe
jnp
mov
pop
pop
mov
fdivrs
sbb
sarb
lods
loope
popa
sub
jb
sbb
cli
xchg
addr16
push
fst
lahf
lea
inc
hlt
jne
sub
push
and
cmp
out
sbb
inc
inc
scas
notb
out
xchg
or
in
pop
mov
cli
xchg
sub
gs
insl
fcmovb
mov
mov
mov
pop
adc
mov
inc
icebp
sub
mov
mov
mov
test
mov
push
insl
gs
cmpb
insb
idivb
pop
subb
das
push
sti
daa
adc
dec
bound
jge
shr
outsl
pop
mov
mov
jne
jns
lock
and
stos
in
ss
std
repnz
ja
repz
dec
mov
lods
jbe,pt
fisubl
cmpsb
popf
mov
inc
cmpsb
or
mov
js
divb
iret
sub
jno
pop
mov
push
add
cwtl
sbb
fwait
mov
push
ja
mov
jno
test
imul
cmp
jl
sbb
push
sub
lods
mov
lea
inc
das
insb
push
cs
jmp
inc
pushf
cmp
sub
push
xchg
out
adc
fcoms
int3
mov
rclb
iret
sub
push
xchg
push
dec
or
imul
ljmp
cmpsl
dec
das
pop
xor
jnp
push
iret
fbld
arpl
imul
iret
dec
mov
sub
orl
das
sbb
mov
je
add
adc
mov
jge
jl
sarl
cwtl
and
add
cmp
inc
mov
sub
sub
bswap
std
cmp
loop
in
adc
add
push
popw
mov
xchg
add
imul
nop
adc
sahf
cmp
fnstenv
das
hlt
xchg
mov
sbb
dec
ljmp
xchg
and
cmp
or
cmp
pop
mov
les
test
fdivrs
outsl
sahf
lret
cmp
jecxz
cmp
sub
sbb
std
add
push
add
inc
sub
mov
notl
sbb
inc
rorb
in
or
rcr
je
adc
pop
add
movsl
xor
js
mov
fs
sahf
push
repz
ljmp
mov
cs
js
in
dec
xchg
dec
sahf
out
mov
int
add
popf
movsl
data16
loopne
fdivrs
inc
push
push
and
pop
aas
negl
mov
mov
xor
rol
dec
mov
xor
int3
jg
lahf
movsb
xor
or
cwtl
fldcw
dec
pushf
hlt
mov
jnp
lahf
cmp
fsubrs
push
dec
sub
out
out
mov
and
mov
sahf
inc
pop
xor
test
jne
frstor
xor
ds
lcall
sti
jle
imul
aam
pop
lods
movntq
out
lods
xchg
xchg
push
inc
push
in
out
xor
push
xchg
inc
add
mov
push
stos
test
pop
xorl
or
stc
lds
gs
mov
repnz
in
push
scas
lock
mov
mov
ja
jne
adc
push
in
aaa
push
mov
mov
pop
outsl
jge
ja
hlt
ret
outsb
mov
mov
fimuls
rcll
sbb
cli
sbb
dec
mov
adc
arpl
hlt
aas
fisubs
cmp
aaa
lock
aad
xchg
imul
xorb
xchg
or
es
sti
loop
mov
jge
pop
mov
into
or
cmp
inc
testl
xor
int3
xchg
scas
sub
mov
fcmovnu
jg
xchg
push
sub
add
cmpsl
iret
test
fiadds
mov
insl
xchg
fsubrl
inc
sahf
das
incl
or
ffree
loop
lret
pushf
fdivl
movsl
out
mov
lods
test
lret
push
pop
sub
sub
lret
imul
lock
mov
mov
cltd
lahf
lods
push
mov
pop
imul
mov
sbb
out
inc
movsl
sbb
cli
std
inc
repnz
push
mov
sarb
push
loopne
shll
dec
jae
and
fdivrl
fisubs
loop
decb
fsub
or
ficompl
or
xor
aam
test
ss
cmp
push
sbb
add
orb
dec
and
aas
and
xorb
push
cld
lods
test
movsb
stc
shll
and
and
icebp
add
mov
mov
jg
jmp
sub
xor
leave
das
xchg
and
jbe
mov
arpl
xor
outsb
rcrl
arpl
jp
inc
icebp
fwait
rolb
mov
adc
cld
faddl
out
mov
mov
scas
mov
inc
mov
push
mov
mov
stos
dec
dec
in
popa
lea
jl
lret
inc
or
fldl
sbb
xchg
lahf
insl
aas
ror
aad
leave
lods
pop
mov
loope
push
cli
adc
add
int3
xchg
push
in
enterw
lcall
jnp
ja
ja
cs
and
out
xlat
push
or
out
pop
fistl
adc
add
mov
xor
xor
push
pop
lret
jge
jp
call
subl
decl
cwtl
shll
adc
or
es
int
jle
xor
test
xlat
loop
sub
ljmp
out
clc
sub
imul
cmp
insl
repnz
mov
mov
insb
nop
ja
icebp
hlt
and
lods
xor
xchg
je
mov
ret
fcoml
xor
and
in
into
addr16
shlb
pop
xchg
mov
lcall
fnstenv
push
jmp
sbb
xor
aad
ret
and
addl
out
popf
lcall
inc
sub
xlat
gs
mov
sbb
add
xor
push
pop
and
shrl
jns
dec
and
jp
faddl
iret
push
cmp
ss
lock
fidivrl
cmpsb
enter
loope
std
xlat
xlat
sub
nop
aad
mov
xor
std
stos
test
insl
test
in
out
push
cwtl
movsb
or
test
shl
imul
repz
adc
dec
push
mov
lahf
rcrb
adc
xchg
cli
sub
sub
pop
pop
icebp
xor
in
xchg
aam
xchg
iret
dec
ljmp
and
and
dec
dec
sbb
xchg
mov
ret
pop
xchg
aas
lahf
lock
inc
fcomps
xchg
mov
nop
adc
repz
icebp
aad
lret
mov
mov
or
cmp
fmulp
dec
xchg
sbb
in
mov
popf
inc
sub
push
lods
shrl
aas
xchg
push
lret
dec
sub
sarb
repnz
mov
fistps
sub
cmp
pop
outsb
shrl
add
mov
push
out
adc
orb
jmp
push
or
mov
fsts
jb
sub
nop
mov
movsl
lea
test
xchg
sbb
lods
xchg
js
sbb
lcall
dec
and
lahf
in
fistl
out
into
push
or
repnz
and
into
xor
pop
aas
jecxz
pop
rol
mov
orb
sti
pop
xchg
mov
add
adcb
js
or
ret
adc
in
out
popf
fidivs
subl
fidivrs
xor
addr16
push
cmpsb
sub
gs
push
mov
sbb
mov
repz
std
scas
test
xchg
movsb
loope
adc
sub
int
push
pop
mov
cmp
mov
adc
pop
sbb
push
push
pop
aam
sbb
dec
std
pop
mov
imul
popa
adc
dec
mov
pop
xadd
and
test
arpl
sbb
mov
xor
adc
jg
mov
xchg
leave
adc
sti
lods
push
add
cmp
flds
mov
sub
pop
insl
stos
test
dec
sbb
mov
cs
out
pop
mov
sub
inc
outsb
lret
mov
pop
push
popf
cmpsb
jmp
dec
in
pop
scas
jl
cmp
test
ljmp
ljmp
jle
sti
mov
leave
popf
mov
popa
push
add
call
outsl
or
or
hlt
loope
enter
lods
jle
inc
push
aam
jne
dec
sbb
mov
js
xchg
push
stos
loope
aaa
add
icebp
rcl
jno
jnp
mov
in
xchg
in
dec
sbb
push
dec
les
or
mov
rcll
dec
or
imul
mov
jo
lods
push
into
out
cwtl
testl
ss
mov
popa
sub
movb
test
mov
loop
lea
lock
mov
aam
dec
imul
dec
ret
imul
sub
inc
xchg
mov
fisttpl
rorl
jb
dec
aas
insl
hlt
ret
jbe
mov
popa
mov
cmp
daa
mov
and
leave
mov
cld
int
mov
ljmp
lahf
call
ret
or
xchg
adc
add
sub
jns
js
cwtl
popa
lcall
outsl
leave
mov
push
adc
cmp
jl
cmp
jns
repz
lock
in
fisubrl
inc
add
shll
sbb
test
mov
dec
inc
rcll
sub
dec
pusha
push
hlt
jno
mov
loopne
insl
xor
stos
into
loop
mov
cmp
lods
push
push
shlb
aaa
adc
daa
je
jmp
icebp
ret
mov
and
or
aaa
dec
mov
and
jge
cli
pushf
or
jge
scas
push
shrl
in
scas
mov
mov
cltd
cli
lock
dec
mov
aam
aad
popa
cmpsl
addr16
push
lods
inc
mov
mov
dec
sar
mov
jo
gs
cmp
les
sbb
sub
test
dec
imul
inc
insb
sbb
imul
dec
pop
sbb
pop
xor
lods
pop
rcll
cmp
js
jns
fs
aad
xor
sbb
imulb
int3
and
mov
and
sub
mov
xchg
stc
and
mov
sub
lahf
cmp
and
mov
pop
mov
mov
rorl
jg
ret
sarl
jno
fdivr
jno
sbb
mov
push
push
jmp
or
adc
mov
jnp
ja
popa
out
repnz
lret
xchg
aas
push
in
stc
lock
arpl
pop
hlt
xchg
fisubs
mov
in
cmpl
sub
fidivrs
add
mov
in
and
lods
jae
int3
in
rcrl
cmp
inc
pop
roll
imul
into
mov
call
lcall
lods
xchg
push
inc
inc
inc
jmp
mov
inc
rolb
test
addr16
ret
sbb
int3
jl
outsl
insl
inc
jno
inc
and
fildll
push
das
repnz
cli
out
mov
mov
cltd
sbb
push
out
xchg
mov
xor
mov
test
push
inc
adc
fildl
loopne
loopne
stos
aaa
mov
jb
loop
loop
lock
cmp
sbb
and
orl
push
in
push
pop
mov
or
mov
inc
jge
mov
sar
std
inc
cltd
scas
cli
mov
inc
add
jge
fmull
cmp
ret
xor
jb
and
and
js
mov
adc
sarb
out
and
insl
rcrb
sbb
or
cmc
imul
mov
hlt
pop
fisubrs
sub
inc
or
sub
add
enter
xor
push
mov
and
aaa
add
bound
mov
outsb
jo
jne
mov
or
je
push
pop
jg
push
inc
lahf
inc
or
inc
push
sbb
dec
std
loop
rolb
cmp
cmc
xchg
fimull
and
pop
leave
cmp
or
das
pop
mov
jb
jo
xchg
std
loope
mov
pop
fwait
pop
mov
sbb
xchg
iret
shl
cmc
sbb
lea
push
mov
addb
cltd
out
or
mov
out
dec
clc
pusha
push
pop
lret
xchg
fsts
pop
push
loop
and
fsubs
mov
sbb
sbb
cli
sub
pushf
ds
push
jecxz
dec
mov
test
add
sub
push
dec
inc
shlb
cmp
rclb
cmpl
push
sbb
dec
loope
xchg
fcmovnb
and
cmp
cmp
out
pop
xchg
sbb
dec
mov
sub
ret
stos
das
dec
es
lret
clc
rcll
xor
jae
lcall
jne
or
or
xchg
ds
stc
lcall
xchg
loopne
pushf
push
mov
fimull
mov
inc
loop
inc
xor
arpl
ds
push
ds
jne
add
xlat
loopw
lahf
add
or
xor
mov
inc
sar
sbb
mov
int
fidivrs
clc
daa
or
xor
sbb
test
int3
cmpsb
jne
out
cmp
ret
dec
cmp
dec
lock
mov
mov
daa
sbbl
out
sub
loope
cld
mov
sub
bound
roll
das
dec
leave
inc
xor
scas
xchg
int
stos
ljmp
mov
sbb
push
aas
xlat
dec
mov
fildl
push
cmp
mov
dec
cmp
out
std
pusha
ret
fisubrl
add
rclb
cwtl
ljmp
cmp
stos
imul
cmpsl
adc
pop
jmp
rcll
jns
mov
negb
push
pop
jle
jmp
mov
int
icebp
jl
fildl
mov
enter
cmc
xor
xor
pushf
sarb
xor
sub
rclb
aad
and
nop
imul
mov
icebp
jnp
ja
adc
sahf
fsubr
mov
mov
mov
xor
push
add
shl
add
mov
xchg
divl
ja
sub
xchg
popa
lcall
lahf
mov
ss
rorb
ds
mov
cmovns
popa
jnp
in
in
loope
pop
icebp
scas
cltd
mov
cli
xchg
cwtl
lea
out
in
repnz
inc
roll
xor
sbb
mov
inc
cmp
add
mov
arpl
addb
jno
add
xchg
leave
insl
add
jae
stc
mov
cmp
mov
inc
add
popa
cltd
mov
inc
arpl
cwtl
and
ret
adc
cmp
shll
in
enter
dec
iret
mov
insb
and
ficoml
decl
adc
push
adc
sahf
fdivrs
xchg
jle
sarb
mov
fsubs
mov
into
jmp
mov
out
push
xorb
cmp
shl
mov
inc
push
repnz
adc
adc
xchg
int3
out
daa
movsl
inc
or
jge
jnp
std
in
xchg
lcall
in
xchg
test
inc
xor
add
and
mov
adc
push
jno
push
sbbl
or
in
jo
xor
repnz
xchg
das
lret
lahf
rolb
dec
out
push
in
out
sub
mov
decl
jle
out
movsb
mov
inc
pop
xchg
adc
or
test
shrl
cli
and
leave
aaa
iret
mov
and
push
out
xchg
jecxz
out
stos
push
xor
and
psubw
out
pop
jmp
lret
mov
dec
mov
mov
stos
cli
xor
adcl
pop
push
pop
or
in
lds
pop
mov
and
push
bound
sub
arpl
sahf
movsl
movsb
cmpl
push
daa
sbb
jge
std
or
jbe
mov
jge
fstps
push
mov
rorl
pop
and
test
adc
stos
fdivrp
fsubrs
mov
into
ds
inc
ret
pop
dec
lea
call
dec
adc
xchg
dec
mov
les
cmc
push
bound
lret
nop
mov
push
outsb
mov
jae
mov
in
inc
mov
push
push
ljmp
mov
lret
fnstcw
js
arpl
out
xchg
or
cmp
in
cmp
adc
or
jo
jge
inc
mov
push
call
push
out
bound
push
test
arpl
dec
ss
jnp
sub
ja
dec
loop
xor
cmpsb
daa
pop
loop
and
outsb
and
add
std
bnd
or
lods
xchg
leave
mov
scas
lret
xor
sbb
xlat
pop
andl
in
inc
addl
jbe
popa
jno
xchg
jns
inc
clc
jl
cmp
or
inc
push
int3
pusha
enter
fcmovbe
ja
inc
leave
fwait
daa
xchg
pop
fdivrp
arpl
fcompl
inc
enter
fdivrp
test
ficompl
jnp
les
sub
mov
sub
mulb
inc
xor
xchg
jle
hlt
sbb
lret
jae
cmp
neg
cmp
js
mov
cmp
and
insl
fwait
in
pop
lret
and
int3
pop
lods
xor
mov
push
sub
scas
inc
ja
fiaddl
movsb
cmp
in
pop
xor
test
es
shr
jnp
mov
aad
popa
cmpsl
push
or
cmc
dec
mov
je
cltd
xchg
negb
mov
arpl
aas
push
xchg
mov
adc
adc
lods
mov
daa
fldt
stos
test
or
sbb
adc
pop
cmp
jp
iret
pop
stos
lods
jne
jns
inc
shll
push
mov
in
cmpsb
lahf
sti
insl
ds
adc
repz
push
and
xchg
stos
out
adc
xlat
and
jmp
fnstcw
int3
sub
sub
jle
and
push
and
cmpl
and
lods
mov
sahf
shrb
sub
out
or
jp
push
pop
push
lds
stos
push
imul
dec
or
in
lret
jae
loop
lret
mov
dec
or
dec
inc
int
popl
mov
xchg
repnz
subl
sbb
movsl
pop
dec
jl
jp
jae
jne
add
aas
jl
xchg
in
daa
jmp
frstor
scas
xchg
lods
sub
xchg
mov
into
fdivrl
xchg
fstpl
rcrl
jne
mov
mov
adc
push
adc
fisubrl
lahf
pop
repnz
cmpl
cwtl
jns
pop
in
pop
sbb
rcr
or
fldl
inc
pop
das
push
ret
sbb
and
xchg
adc
loope
imul
cmp
push
andl
scas
test
dec
lods
sub
mov
ret
push
mov
add
xor
test
sub
mov
out
mov
or
pop
or
testl
call
add
js
in
sub
testb
push
pop
int3
pop
pop
sbb
loope
inc
inc
fstpl
jl
mov
aad
stos
aas
rorb
loope
lods
xchg
jmp
jae
add
and
mov
daa
mov
or
pop
add
lods
in
rolb
stc
shll
xchg
xchg
scas
outsb
mov
add
cld
xchg
adc
outsb
pop
mov
repz
mov
sbb
and
mov
inc
sbb
sbb
xor
das
iret
cwtl
dec
ja
inc
add
push
shrl
stos
inc
hlt
push
sbb
pop
rclb
mov
ss
add
or
and
imul
outsb
nop
mov
insb
enter
dec
pop
sahf
mov
aaa
bound
sbb
stc
xchg
stc
add
inc
inc
loope
repnz
iret
imul
test
sbbl
mov
pop
jecxz
sbb
xchg
mov
mov
sbb
jbe
mov
jb
es
ss
das
mov
mov
adc
adc
out
inc
jne
out
jb
fwait
mov
out
xchg
es
or
push
and
int
mov
testb
lahf
jp
aam
int
sbb
mov
arpl
insb
cmc
inc
mov
add
ret
pushf
out
cmp
cmpsb
cmp
add
pop
push
jno
sub
test
bound
mov
adc
push
aas
fstpt
jns
je
dec
sar
ljmp
push
mov
imul
mov
pop
repz
loopne
pop
icebp
loop
xor
stc
imul
lock
in
mov
inc
mov
mov
jbe
ret
mov
xchg
fcmovbe
outsl
jmp
add
xor
cmp
xchg
insl
cmp
ja,pn
push
cmp
stos
sbb
mov
and
lret
mov
adc
push
cmp
jae
cmp
sahf
push
lods
pop
sub
std
movsb
push
imulb
aam
int3
or
pop
fstl
subl
add
mov
mov
xchg
lds
pushf
jnp
inc
mov
sbbl
mov
and
mov
ds
jg
xlat
andl
pop
jle
push
movsb
sbbl
cmp
push
incb
int3
faddl
add
adc
mov
lret
xor
addb
imul
addr16
xchg
xchg
mov
ret
movsb
stc
stos
cmp
push
clc
repnz
sub
cmp
xchg
pop
sub
or
sbb
mov
mov
push
inc
test
dec
inc
push
aas
and
lahf
scas
xorb
inc
jmp
stos
and
inc
int3
inc
mov
xchg
enter
xor
jno
nopl
sbb
jecxz
dec
ficompl
xor
push
pop
xor
cmp
int3
xor
xor
pushl
je
movsl
or
mov
xor
sub
test
lods
fnstsw
in
dec
xlat
mov
adc
insl
pop
cmp
iret
sahf
jecxz
mov
int3
and
mov
fldt
and
pop
pop
aam
xchg
cmp
push
mov
pop
cmp
out
shl
mov
popf
lret
and
les
mov
fadd
mov
or
je
sbb
push
test
push
fldt
outsl
inc
mov
out
cmp
pop
inc
xor
ret
adc
xorb
inc
xchg
sti
out
jp
loope
and
mov
inc
push
int3
jmp
js
addb
jbe
cld
pop
adc
xchg
je
xchg
mov
sbb
dec
test
rcrb
data16
xchg
or
mov
and
icebp
pop
es
cmp
loope
pop
pop
js
push
mov
sbb
adc
sbb
dec
push
movsb
lock
dec
xor
xor
hlt
pop
pop
fucom
mov
sbb
dec
lds
scas
jbe
enter
sub
cmp
or
addb
scas
push
es
rcll
push
mov
sbb
sbbb
jl
int
mov
xor
jo
out
icebp
iret
imul
test
pop
icebp
lahf
rclb
cwtl
inc
sbb
sbb
leave
mov
xor
sbb
lret
or
and
icebp
addb
dec
lahf
pop
pop
cmp
mov
dec
inc
mov
outsl
push
sarb
jb
int3
into
sub
js
jae
bound
inc
iret
fbld
sub
in
xor
push
repnz
push
in
dec
xor
pop
jo
mov
sub
std
in
inc
aas
rcrl
scas
insl
add
aas
push
push
dec
adc
mov
out
mov
pop
lret
rolb
andl
sub
clc
jo
fiadds
or
ljmp
push
sub
and
cmpsl
pushf
adc
dec
adc
arpl
les
rcrl
dec
daa
test
mov
rorb
out
pop
clc
mov
dec
movsl
xchg
mov
sbb
addr16
jmp
insl
sub
cmp
les
xchg
inc
loope
fdivrl
aas
hlt
cmpsl
ljmp
jae
movsl
cmp
add
xchg
std
add
pop
cwtl
stc
fstps
dec
and
fucom
movsl
sub
adc
aad
fnstenv
leave
shrl
lcall
adc
adc
outsb
aad
test
aam
mov
ss
pushw
mov
mov
and
aad
movsb
mov
out
call
ror
pop
mov
mov
std
adc
data16
jo
pushl
loop
lcall
cld
cli
inc
sbb
stos
or
addr16
dec
mov
mulb
fcoms
out
mov
and
cmpb
pop
xchg
cltd
pop
add
in
push
orl
xchg
lcall
adc
xor
cmpsb
nop
xlat
push
xchg
xchg
pop
ret
pushf
idivb
jmp
ss
pop
and
add
insb
or
jg
jp
outsl
sub
mov
ss
xchg
out
int3
fldenv
data16
call
sub
js
outsb
repnz
out
jmp
pop
and
cmpsb
repnz
push
mov
push
sahf
mov
push
mov
add
out
push
xor
pop
xchg
xor
fstpt
and
push
mov
stos
cmc
mov
xor
filds
mov
in
pop
fwait
or
and
clc
sbb
pop
or
adc
fwait
lds
xchg
gs
lds
addr16
scas
fwait
push
stos
dec
stos
out
pop
and
inc
pmulhuw
or
and
push
add
xor
cmp
mov
adc
mov
addb
mov
inc
loopne
inc
adc
and
aad
and
das
pop
sti
lcall
or
ret
in
sar
jnp
aaa
jmp
hlt
dec
outsb
jbe
adc
pop
sahf
je
mov
das
orl
mov
aaa
stos
dec
scas
ss
scas
inc
push
mov
call
hlt
sarl
inc
inc
fdivr
mov
out
pop
mov
rorb
rcl
cmp
loop
cli
test
and
aam
in
xor
jl
cltd
icebp
xor
mov
or
jl
rolb
xchg
mov
xchg
call
je
cld
pop
popa
mov
push
sbb
jg
cmp
pop
divl
push
sbb
in
sbb
jge
push
icebp
lea
imul
movsb
mov
out
or
jne
mov
imulb
inc
insb
int3
pop
jmp
adc
jno
mov
inc
push
nop
ret
lret
stos
ret
or
add
js
lods
xor
pop
stc
iret
sub
mov
dec
add
push
cmp
push
mov
cli
jo
les
test
jg
fistpll
imul
popf
mov
dec
add
lock
push
push
sbb
fs
xchg
push
sub
inc
lods
mov
scas
fnsetpm(287
mov
mov
add
addr16
push
aad
push
xor
mov
and
into
xchg
mov
push
pop
sub
cwtl
dec
popf
jae
push
fmul
jnp
inc
adc
in
imul
outsl
adc
out
ljmp
mov
xchg
scas
cmc
je
imul
inc
rorl
out
std
lods
fs
repnz
xor
nop
das
ret
jecxz
into
dec
xor
test
mov
pop
sbb
sahf
popa
fisttps
cmc
adc
mov
sbb
in
aad
adc
shlb
sbb
mov
adc
cmp
bound
dec
lea
mov
fs
loope
mov
lods
aaa
stc
js
push
or
enter
or
fisubrs
arpl
ficomps
and
dec
ret
xor
int
insl
and
xor
xchg
lock
pop
jno
xlat
and
ret
xor
mov
mov
inc
xchg
lahf
or
into
add
pop
cltd
fs
popa
jg
push
xchg
ret
test
filds
jp
inc
inc
cmp
xor
dec
ja
fsubrl
pop
cs
pop
popf
lahf
dec
movsl
mov
xlat
add
pop
cld
mov
inc
leave
pop
iret
aad
mov
idivb
xchg
cmc
sti
add
add
adc
fwait
mov
orb
pop
mov
mov
mov
mov
hlt
in
cmc
and
push
hlt
test
test
ret
popf
lret
rcrl
or
pop
repz
dec
xchg
out
test
adc
mov
into
sbbl
xlat
xchg
hlt
lahf
fisttpll
mov
aaa
fwait
push
mov
fwait
add
mov
lock
jno
xchg
test
cmp
nop
aad
dec
mov
cmp
lret
dec
push
jle
xor
inc
daa
adc
fucomi
je
push
rorl
fists
lods
jne
sti
lret
xlat
scas
pop
sbb
ja
cwtl
push
pop
clc
xor
mov
in
psllw
hlt
and
outsl
ss
cmp
es
or
mov
or
les
sbb
andl
shrb
cs
dec
test
aas
icebp
and
adc
daa
in
sarb
fiadds
pop
mov
movsb
test
mov
jne
cwtl
cmp
mov
ret
pop
push
sbb
dec
nop
xchg
add
jae
mov
and
in
sti
push
push
dec
movsb
fucomp
hlt
les
pushf
repz
cli
fidivl
xchg
insl
testl
push
ds
loop
push
ret
out
xchg
cli
xsha256
cmpsb
xchg
xor
lahf
ljmp
fdivl
and
and
stos
xchg
leave
aaa
mov
in
push
or
fwait
cs
fcomp
mov
aas
adc
sbb
sub
pop
repz
aaa
lret
xor
inc
fs
push
jle
outsb
pop
mov
cwtl
loope
mov
inc
in
daa
test
cli
rol
popa
xchg
roll
stc
mov
dec
aam
insb
pop
daa
fs
dec
dec
inc
or
int3
push
sbb
jns
int3
js
or
push
pop
aam
ficoms
setge
idiv
mov
xchg
loope
rcll
add
iret
popf
cs
negb
in
sub
lods
xchg
aas
push
add
or
mov
in
adc
xchg
sbb
cmp
xchg
loop
dec
bound
test
inc
push
out
out
stc
jge
adc
push
mov
imul
jbe
jg
stc
sarb
out
rcrb
repnz
fucomip
sbb
sub
and
sahf
jnp
xchg
mov
cld
jge
push
sbb
popf
loope
js
sub
stc
dec
jmp
call
sub
cmp
jb
outsb
xchg
cmp
sub
jp
mov
cmp
add
aas
shlb
or
mov
mov
inc
cmp
jl
add
loopne
pop
push
cltd
pushf
or
testb
cmp
mov
jp
cmp
mov
out
pop
pop
lods
xor
ja
movsl
clc
and
mov
btcl
mov
call
jp
nop
or
ja
clc
addr16
dec
in
fsubrs
aad
shl
sahf
jge
and
lcall
leave
pusha
push
mov
jg
pusha
mov
insb
jg
mov
rorb
sahf
add
mov
mov
sbb
test
fcmovbe
lret
xor
pop
dec
outsl
xchg
inc
das
mov
and
or
cmp
pushf
pop
adc
jnp
pop
push
ds
sarl
cmp
popf
loopne
adc
cmp
jl
rcrb
xchg
and
popa
loopne
push
out
mov
mov
ja
fisttpll
lods
lods
icebp
test
xor
imul
xchg
out
mov
addr16
mov
cmc
inc
out
mov
sub
ja
or
mov
xchg
clc
xchg
and
dec
test
je
mov
out
icebp
divl
mov
pop
rolb
scas
jo
xorb
aam
jg
lahf
stc
out
or
jle
jmp
jecxz
sbb
dec
mov
int
int3
rep
adc
dec
test
mov
and
mov
movsb
es
xchg
or
xchg
sub
or
push
inc
adcl
mov
adc
dec
dec
mul
jmp
push
and
in
aad
push
rolb
adc
pushf
mov
push
add
add
sub
jnp
cmpsb
movsb
jbe
inc
mov
and
and
jp
adc
mov
fwait
shll
adc
js
cmpsb
fildl
push
add
out
outsl
sbb
mov
cmpl
punpckhdq
xchg
sub
rclb
loop
daa
xchg
push
mov
add
jb
stos
scas
hlt
sbb
out
scas
andb
mov
out
jbe
mov
je
jecxz
lret
addr16
inc
aam
movsb
inc
sub
or
pop
lock
sahf
test
movb
hlt
adc
lahf
sub
push
scas
add
add
push
repnz
jns
iret
jp
mov
insb
andl
popf
loopne
rolb
sbb
cmc
xor
les
ss
dec
test
jbe
aas
cmp
mov
mov
xor
push
push
dec
orl
xchg
test
hlt
pop
shrl
pusha
push
sub
call
mov
lods
xchg
icebp
negl
cmpsb
mov
push
mov
out
adc
ja
lcall
jnp
imul
popa
cmp
dec
mov
cmp
sbb
sbb
push
jns
mov
sahf
xor
fxch
std
arpl
cltd
mov
xchg
jns
xchg
stos
shll
xor
mov
pop
in
mov
cmp
and
add
pop
loop
mov
outsl
mov
push
or
fisubrs
jecxz
cmp
jle
sub
push
addr16
sahf
dec
addr16
jg
sub
jne
or
add
and
mov
and
mov
pop
cmp
xor
adc
popf
cli
add
dec
pop
pushf
rcr
ret
pop
fisttps
shl
inc
mov
call
mov
xchg
xchg
aad
xchg
mov
cli
rolb
xor
repnz
jb
xor
inc
cmpw
nop
cmp
fistps
xchg
cmp
cld
mov
imul
enter
and
iret
jo
in
es
das
jnp
daa
mov
mov
adc
out
cmp
pop
in
pop
mov
loop
pusha
and
sbb
out
xor
jnp
pop
mov
jb
bound
ja
and
sub
mov
push
jp
pop
push
mov
and
mov
out
pop
mov
cmp
mov
scas
stc
mov
sub
add
lret
gs
add
add
std
popf
subl
lcall
aam
ljmp
idivl
test
mov
cmpsb
cmp
ret
cli
sti
std
jne
mov
out
inc
popf
in
mov
and
mov
fldl
subb
add
inc
sbb
popf
mov
les
adc
ss
xlat
scas
scas
mov
mov
adc
mov
mov
fwait
cmpsl
fildll
mov
fbstp
pusha
inc
sub
lds
adc
cmpsb
pop
sahf
addl
cmp
jno
and
ret
sbb
xor
aas
test
add
xchg
sub
cli
mov
mov
adc
jge
gs
pop
jns
dec
imul
push
xor
or
aad
insl
mov
unpckhps
in
insl
xchg
add
jg
sub
jne
or
lcall
daa
cld
arpl
xor
in
out
cmova
loopne
xchg
xchg
andl
call
shlb
je
xchg
mov
outsb
popf
das
adc
das
outsl
bsr
hlt
aaa
cmpsl
adc
cmp
jb
outsl
movb
mov
inc
mov
int3
movl
xchg
fcmovnbe
inc
test
inc
aam
test
push
or
adc
nop
dec
imul
mov
lock
push
incl
xchg
clc
pop
jg
inc
inc
mov
mov
hlt
negb
push
dec
pminub
and
add
stos
dec
and
xor
add
addr16
ljmp
xchg
je
add
xchg
clc
adc
cmp
leave
inc
cmp
cmc
pop
mov
and
lock
cmp
outsl
insb
mov
push
xchg
repz
daa
loopne
push
aaa
jmp
sbb
mov
xor
adc
cltd
cli
mov
mov
ljmp
xor
mov
ficompl
fmuls
xchg
xor
cvttps2pi
je
xchg
and
adcb
and
fwait
cli
inc
xor
loope
ror
inc
pop
scas
add
or
sbb
lea
sbb
je
jl
xor
jne
insl
xchg
xor
jge
adc
das
enter
jb
pop
sub
add
jg
je
sar
sub
xlat
aas
sub
cmp
mov
movsb
mov
pop
cwtl
js
out
pop
mov
lds
stc
fcmovu
jne
xchg
cs
lock
push
jmp
or
dec
addl
roll
ljmp
mov
pop
orb
sarl
pop
nop
pop
test
mov
insl
ret
adc
shl
xor
sbb
and
jp
push
or
adc
rclb
shl
jns
jnp
mov
packssdw
and
inc
hlt
stos
add
pop
mov
pop
xor
pop
pop
aam
push
jbe
mov
inc
xor
ficomps
mov
es
insl
xchg
jle
push
mov
xchg
xchg
fcomps
out
icebp
test
lods
add
or
and
lea
and
cmc
adc
movsb
call
push
sub
add
push
nop
lcall
iret
enter
call
adc
add
and
and
dec
rol
sub
sub
repz
aad
inc
out
pop
pop
and
icebp
jno
push
popf
les
xchg
sub
jno
xor
out
sbb
jnp
pop
adc
jle
inc
jmp
neg
cli
sahf
dec
std
sub
in
jb
sub
sub
aas
xor
xchg
jo
loope
sub
addr16
cld
push
cmp
out
push
ljmp
push
scas
push
adc
out
push
pop
fcmovb
int3
in
mov
push
cmp
jae
test
ret
sbb
push
jnp
add
imul
jae
pop
mov
mov
stc
and
fstpl
scas
or
inc
imul
push
xchg
mov
aam
push
jmp
lahf
cs
lods
dec
test
fisttps
jmp
inc
inc
and
xor
add
dec
xor
lret
jl
push
mul
stos
test
nop
and
ljmp
mov
jp
sarl
nop
jle,pt
int
sub
xchg
cmpsl
and
hlt
int
stos
sub
add
mov
imul
lods
sub
in
jecxz
sbb
push
push
jl
into
sub
outsl
lahf
or
out
dec
mov
mov
cltd
les
repnz
mov
pusha
cwtl
movsb
fisttpll
mov
or
xchg
push
mov
das
or
and
jecxz
cmp
dec
dec
add
add
leave
mov
push
jecxz
cmc
ss
rcll
repnz
pop
add
adc
mov
pushf
lret
push
xor
add
and
cmp
mov
add
add
cltd
push
add
popf
mov
jb
pop
add
loope
lret
cwtl
addr16
mov
push
xchg
dec
notrack
shrb
sti
test
sahf
jae
jnp
push
jmp
adc
pop
cmpb
adc
aas
cmp
jmp
xor
xchg
stc
scas
lahf
jle
aaa
push
inc
pop
xor
or
add
dec
xchg
mov
iret
lahf
fwait
fwait
shlb
adc
pop
daa
repz
and
sbb
jae
gs
mov
or
jbe
pushf
push
cli
dec
mov
in
cmp
rcl
dec
or
sub
xor
dec
fidivl
xlat
inc
mov
imul
jne
nop
xor
ljmp
pop
bound
mov
sub
push
xchg
loopne
cmpsl
jns
adc
push
sbb
sti
call
cmp
sahf
aam
shlb
pop
lret
jle
push
aam
sbbb
nop
and
inc
push
inc
loop
testl
test
rol
mov
jl
fs
shrl
adc
and
sbb
mov
mov
adc
jae
daa
push
in
lods
pop
xchg
stc
fst
pop
fcompl
fcmove
push
jnp
iret
loopne
jmp
pop
jge
jmp
dec
jecxz
lret
xchg
inc
lcall
aad
cmp
mov
scas
imul
stc
into
out
aam
movb
lods
leave
xchg
test
fs
jmp
mov
stc
or
lea
in
in
jecxz
dec
pop
inc
or
jbe
enter
and
inc
xor
lds
sub
mov
repz
push
or
imul
shlb
aas
jle
js
pop
sbb
or
xchg
jmp
rcrb
rcr
cmpsb
fcoml
pop
dec
rclb
int
jno
shrb
mov
in
pop
mov
or
and
addb
xchg
dec
sbb
xchg
insl
scas
pop
dec
mov
enter
icebp
movsl
aad
popf
outsb
and
push
mov
mov
lea
aas
leave
inc
sbb
or
loope
inc
cltd
mov
add
dec
ret
outsb
push
ds
ja
jbe
xlat
ss
mov
ret
jnp
and
ljmp
fistpl
int
xor
lds
stos
addb
insb
cmp
jbe
lods
out
loopne
test
mov
push
fnsave
bswap
lahf
adc
mov
dec
and
sub
jmp
mov
mov
push
cmp
call
adc
dec
mov
popa
ds
jecxz
mov
addr16
dec
sub
cld
or
cmp
jns
in
add
mov
mov
and
cmpsb
das
jo
inc
subl
xchg
testb
enter
popf
nop
ja
mov
rorl
call
dec
xchg
jno
in
mov
sub
dec
dec
lock
fwait
pop
inc
sbb
inc
out
cmc
pop
ljmp
mov
xor
adc
xor
mov
cwtl
hlt
pop
insl
repz
dec
cmp
getsec
fistps
ficoml
mov
out
or
or
mov
fsubp
cltd
add
imul
sbb
les
or
jnp
leave
scas
cmpsl
cs
mov
inc
lea
push
es
popf
sbb
out
xor
or
iret
jmp
add
mov
inc
stc
cmp
and
test
cmp
std
add
sub
dec
push
scas
movsl
nopl
jb
mov
push
aas
pop
adc
add
adc
stc
jg
push
mov
pop
inc
mov
mov
pop
outsl
sub
in
rcll
dec
jne
jns
and
test
fistpll
sbb
mov
dec
mov
jle
int
mul
cmpsl
cmp
sahf
xor
cmpsb
incb
ss
pop
cli
mov
fmulp
xchg
xchg
out
outsb
ds
sbb
xor
mov
jno
movsl
pop
das
data16
xchg
in
jecxz
inc
jl
rcrb
into
sub
pop
scas
ret
dec
mov
jmp
in
test
jno
ja
xchg
mov
pop
cli
pop
sarl
sbb
test
movsb
xor
subb
cmc
fidivl
imul
pop
cmc
push
aaa
insl
popf
popl
dec
lahf
imul
inc
insb
test
push
int
mov
sbb
fisubrl
mov
test
aad
daa
aas
sub
stos
mov
mov
mov
ljmp
inc
or
cmp
fnsave
inc
xor
mov
push
out
rcrl
sbbl
scas
mov
addr16
or
testl
je
jnp
push
adc
mov
jmp
dec
iret
cmpb
in
ret
mov
and
mov
in
stc
push
jge
clc
loope
sbb
sub
fwait
inc
ret
jbe
stos
loopne
sub
push
sub
or
loop
lods
sarb
xchg
ja
arpl
nop
sarb
popf
inc
sub
out
in
mov
das
lahf
cmp
inc
int
inc
outsb
cltd
aas
repz
inc
lea
call
sbb
and
xor
add
pop
pushf
mov
sbb
pop
out
gs
mov
jp
mov
dec
mov
dec
cmp
loop
aas
movsb
mov
outsw
ss
es
xchg
inc
sbb
xchg
mov
fxch
imul
jge
movsl
mov
loopne
in
jns
mov
add
lods
xchg
rcrl
pop
sub
dec
fiadds
mov
stos
adc
cmp
int3
ja
xor
loopne
sub
and
fisubrs
into
subl
inc
sub
stc
inc
and
jbe
test
jg
pop
pop
and
ljmp
loop
mov
push
add
jbe
leave
sti
lcall
in
sbb
inc
push
xor
insl
fdivrp
nop
les
shll
mov
insl
imul
les
mov
ss
mov
jbe
mov
inc
or
int
and
jmp
pushf
mov
jle
xchg
xchg
sbb
das
test
jne
adc
lahf
and
loope
push
int3
sbb
shll
inc
daa
lds
pop
test
xchg
cmp
sub
icebp
fs
push
xchg
gs
addr16
mov
or
xor
adc
shll
push
xchg
divl
lods
inc
sub
inc
push
xlat
insb
adc
stc
cmp
sub
push
adc
jge
lock
sbb
in
fmulp
mov
xchg
xchg
sub
leave
jp
jmp
scas
div
movsl
mov
xchg
lret
and
std
mov
push
push
ljmp
inc
movsb
mov
xor
testl
movsb
and
mov
out
push
mov
pop
movsb
pop
add
inc
xorb
inc
loopne
mov
mov
in
iret
push
cli
inc
inc
inc
jp
cli
es
imul
add
inc
mov
ja
dec
dec
enter
sbb
ficomps
xor
in
not
sub
or
in
dec
lock
repz
jnp
pushf
push
mov
cmp
bound
divl
cmp
sbb
inc
stos
aaa
negl
in
inc
into
cli
add
fmul
into
push
clc
stos
roll
repz
inc
cmp
sub
xchg
mov
push
scas
pop
mov
push
cmp
jg
mov
jle
call
lcall
push
push
push
addr16
and
mov
dec
dec
insl
sti
out
dec
test
and
fmull
and
cltd
mov
pop
push
xchg
inc
cmp
sbb
or
cmpsb
fdivr
mov
inc
pop
xorl
dec
fucom
push
adc
fimull
iret
mov
out
pop
cmpl
idivl
sbb
inc
jp
mov
sbb
ret
iret
pop
xchg
mov
sbb
mov
push
xchg
xchg
jmp
pop
lods
mov
pop
adc
mov
jae
mov
mov
pusha
mov
insb
ja
outsl
cmp
jns
pusha
mov
jg
int3
push
push
in
xlat
jl
mov
test
pop
mov
imul
outsb
jp
fbld
cli
pop
push
fstps
out
pop
sarl
rcll
cmp
and
arpl
jecxz
push
jne
dec
push
notb
out
icebp
sub
dec
jmp
push
scas
pop
mov
adc
ret
ja
push
push
mov
movsl
dec
call
popf
push
cltd
lret
sbb
int
dec
das
inc
xor
loopne
je
pop
mov
xor
je
push
data16
data16
cmpsl
jbe
xchg
xlat
sub
jne
stos
out
xchg
popa
xor
pop
loop
ds
out
daa
pop
out
loope
xchg
mov
mov
call
stos
or
subb
sub
xchg
xor
stc
mov
jecxz
inc
imul
aas
jg
mov
je
xor
and
fldl
lahf
lods
jno
scas
xor
scas
pop
pop
fadds
adc
jmp
sbb
shlb
nop
mov
xchg
popf
cmc
fmuls
out
xchg
jmp
lea
mov
testb
mov
fisttpl
call
ds
es
lea
pop
mov
cltd
lock
sub
ret
shr
add
stos
popa
mov
pop
cmp
stos
fimull
dec
je,pt
xor
out
or
adc
addr16
in
add
out
nop
pushf
out
sub
out
jbe
bound
jns
push
out
xor
out
jae
fmulp
mov
sti
push
nop
mov
xor
ljmp
mov
pop
cmc
shlb
inc
push
leave
addb
cmpsb
xor
int3
dec
push
loopne
shrl
sbb
jne
jl
test
dec
xor
xchg
pop
ret
adc
arpl
jns
or
xlat
notl
sub
mov
xlat
lds
xor
jmp
jbe
je
cmp
add
mov
add
or
xlat
inc
adc
ret
scas
fstps
inc
ss
mov
loopne
mov
push
pop
jg
int
push
lahf
xor
mov
in
subb
mov
into
mov
bound
dec
pop
mov
aas
push
pop
pushl
clc
push
outsl
xlat
sbb
xchg
mov
and
fistl
xchg
aad
sbb
out
pop
repnz
or
jmp
test
push
dec
lret
ror
imul
lret
jo
xchg
push
adc
cmp
mov
mov
push
arpl
mov
inc
cmp
xchg
decb
mov
jecxz
js
add
inc
imul
sub
mov
xchg
sbb
pop
xchg
xchg
mov
xchg
lock
xor
xchg
cmp
daa
push
mov
icebp
pop
out
subl
in
js
push
sahf
adc
sahf
cwtl
outsl
inc
rcrb
in
add
ljmp
jmp
xor
mov
adc
dec
data16
scas
pop
pop
add
jge
das
xor
movsl
mov
fists
sub
xor
rcll
sub
or
pusha
setae
xchg
into
add
inc
lret
test
ss
int
test
mov
les
mov
inc
shrb
daa
jmp
out
cmpsb
xchg
sbb
and
dec
push
cli
jb
pop
or
movsb
fptan
sub
int
xchg
rolb
icebp
mov
pop
rol
sbb
add
nop
shrl
aaa
mov
cld
and
scas
mov
push
dec
mov
leave
xchg
jg
pusha
ret
mov
jl
jae
dec
movsb
fadds
test
cmove
sbb
and
stc
iret
or
jae
loope
loop
push
push
int3
sbb
cltd
jecxz
xchg
popa
jo
aam
adc
dec
pop
das
fstl
fcom
in
cmp
dec
jg
into
pop
or
or
mov
push
mov
scas
mov
sub
int
adc
aam
mov
sbb
out
inc
cmp
push
rcr
dec
fisubs
mov
loopne
pop
mov
fnstsw
mov
inc
insl
mov
dec
dec
bound
cli
es
xor
and
lcall
test
pop
sarl
lcall
sub
sbb
or
lret
mov
dec
sub
inc
sbb
repz
jae
push
cmp
out
outsb
mov
call
add
jnp
cmp
mov
inc
pop
js
fs
in
cmp
insl
sarl
fldl
test
sub
xchg
xor
mov
xchg
jle
add
addl
add
mov
pop
mov
pusha
cmp
and
imul
fcomp
adc
sub
nop
and
xor
in
jp
jmp
dec
idivl
cmp
fcmovnu
cmpsb
inc
out
sub
ljmp
xor
push
and
int
int3
push
aam
add
sahf
aad
in
push
xor
mov
jmp
add
daa
stos
popf
mov
jg
push
repz
fsubl
dec
add
frstor
sbb
mov
push
loopne
add
or
push
mov
mov
movsl
mov
in
fsubl
mov
js
outsb
addr16
push
adc
test
sub
push
arpl
adc
add
rcrl
lock
xor
aad
std
lods
jbe
mov
xorb
jo
xchg
mov
lods
jbe
inc
add
fsubs
inc
adc
sub
call
stos
addr16
lret
data16
imul
in
ret
std
cmc
mov
inc
xor
dec
sbb
jo
shll
lock
mov
std
adc
in
jno
hlt
movsb
dec
pop
aam
xor
push
mov
cwtl
jns
sbb
bound
pop
xchg
stc
jnp
subl
cltd
mov
pop
cmpsl
or
jp
push
bound
pushf
pop
pop
mov
loope
adc
outsb
inc
cmp
mov
pushf
sbbb
lret
push
imull
xchg
jp
adc
mov
cmpsb
nop
push
cmp
jmp
out
stos
fwait
stc
out
leave
imul
into
add
movsl
jb
aam
sub
movsb
and
or
and
mov
mov
fcmovb
popf
js
pusha
shll
es
dec
stos
pop
mov
pushl
and
in
ljmp
mov
lock
mov
pop
out
stos
xor
or
fcomps
pop
push
pop
lcall
cld
add
push
stos
popf
popf
push
mov
lret
xchg
aad
out
fisubrl
or
cmovbe
push
fistpll
fists
xor
add
push
push
mov
fwait
jmp
xor
adcb
mov
hlt
mov
andl
push
loopne
mov
xchg
cmp
jb
gs
outsl
xchg
out
add
testb
pushf
xchg
clc
push
arpl
inc
sbbl
mov
xor
sbb
in
mov
sbb
jae
popf
push
into
fbstp
shll
int
fadd
aad
mov
and
bound
adcb
inc
push
gs
es
push
xchg
pop
xor
inc
cmp
jecxz
stc
shlb
inc
dec
fmull
add
pop
cmpsb
sbb
jae
ret
cmpsb
adc
push
stos
xor
dec
lea
jp
ja
mov
pop
sub
jge
sub
or
jmp
dec
xchg
clc
sbb
shlb
dec
sub
popa
cltd
aam
or
jle
in
xchg
mov
js
xchg
cs
insb
inc
mov
sub
out
mov
out
adc
sbb
push
bound
jno
daa
xor
fstp
cmp
ret
ret
sarb
or
xor
scas
test
dec
jo
js
loopne
adc
mov
cmp
xor
ret
xor
mov
fidivs
movb
pop
push
rcll
and
pop
lea
hlt
addr16
sbb
mov
je
int3
imul
stos
mov
sbb
mov
inc
add
sub
adc
call
inc
push
imul
loop
stos
sub
cmp
test
aas
fnstsw
sub
pop
xor
test
pusha
movsl
sub
fiadds
es
xchg
jg
lahf
test
push
cld
dec
fwait
cmp
push
test
int
imul
dec
adc
stos
ljmp
dec
lret
and
jecxz
gs
addr16
mov
repnz
rcrb
leave
mov
cmp
mov
dec
shll
add
mov
jmp
xchg
or
in
mov
jp
mov
xchg
dec
sti
push
mov
mov
xor
inc
insb
fwait
sub
ds
lock
mov
dec
stc
insb
jns
xchg
dec
push
dec
ficomps
cmpsl
in
test
call
nop
mov
lret
imul
cmp
fldt
inc
popa
pop
loop
pop
or
fs
dec
les
mov
add
and
mov
pop
ss
dec
fstpt
mov
xor
mov
add
jb
mov
cmp
push
and
stc
mov
out
inc
imul
adc
pmulhuw
push
inc
mov
xor
shll
push
pop
scas
push
stos
and
movsl
dec
dec
mov
int3
push
mov
jp
je
and
es
push
repz
imul
cmp
stc
ss
in
and
orl
mov
adc
mov
inc
xor
fs
test
jno
lock
xchg
lock
xor
pop
pop
es
fistpl
add
insb
adc
lock
inc
jl
roll
add
pop
rol
cmpl
fnstsw
or
into
jne
dec
or
xchg
or
mov
enter
xchg
xchg
mov
insb
aam
ds
clc
xor
scas
fcoml
dec
imul
fmull
dec
cmp
cmp
xor
dec
mov
ja
in
pop
sub
cmp
mov
xchg
fwait
jle
scas
pop
jb
sub
outsb
xlat
repz
mov
and
leave
push
ja
mov
lahf
into
lods
gs
mov
stos
mov
push
sub
mov
xlat
fbstp
sbb
xchg
add
or
adc
xchg
add
sub
adcb
xchg
and
mov
loopne
rcrl
sti
loop
aad
xchg
testb
test
or
mov
xchg
mov
sbb
in
inc
adc
aad
daa
push
mov
fildll
mov
pop
push
stos
xchg
ljmp
xchg
out
xor
idiv
push
xor
rorl
stc
push
lret
dec
jne
sbb
mov
pop
loope
xor
dec
adc
popa
rorl
shrb
repz
shlb
jle
push
adc
push
pop
stos
xchg
jmp
xor
pop
int3
or
cs
cmpsb
arpl
test
mov
sti
sbb
add
xor
ljmp
jecxz
inc
pop
mov
jg
sbb
outsl
fdivrp
mov
pop
jmp
scas
bound
mov
xlat
xor
mov
xchg
add
add
sub
popf
inc
sbb
jg
lahf
xchg
mov
push
jle
and
stc
decb
ficoms
call
hlt
jno
daa
mov
outsb
outsl
rorb
sub
cmp
pop
test
mov
sbb
push
icebp
ret
imul
lods
fldlg2
lret
fsubrl
or
adc
xchg
stc
push
sub
push
mov
sub
xchg
lret
iret
xchg
add
lock
dec
dec
lea
mull
or
cs
add
or
sahf
in
dec
xlat
cmp
mov
imul
mov
add
adc
mov
test
in
xchg
sub
mov
repz
add
xor
testl
test
inc
cmp
aam
dec
bound
pop
cld
pusha
mov
in
or
mov
shlb
adc
in
popa
lock
xchg
mov
rcrl
push
call
add
sbb
mov
rolb
inc
mov
jns
add
cmpsl
testl
sub
fadds
roll
mov
mov
sti
outsb
arpl
sbb
jmp
fsubr
imul
adc
outsl
call
lock
mov
stc
popf
aaa
sbb
add
in
divb
lret
es
in
mov
add
mov
cmp
icebp
mov
add
sub
jge
jae
movsb
mov
stc
pop
sti
ret
test
mov
sarb
lret
adc
lret
negb
mov
dec
shll
mov
mov
add
bound
jp
sbb
invd
cmc
push
repnz
clc
lods
fimull
jnp
mov
std
dec
sahf
xchg
test
loope
add
fmull
mov
add
jo
lret
rsqrtps
addb
test
jne
scas
scas
jb
pop
and
fidivl
jno
inc
cmpsb
lock
jno
sbbl
sub
jns
lock
sbbl
xchg
xorl
outsb
sarb
mov
cmp
scas
and
js
cmp
cmpsl
jbe
jmp
sub
sub
out
dec
loope
mov
test
mov
add
out
mov
std
add
dec
and
dec
repnz
sub
mov
shrb
jnp
pusha
flds
sub
xor
pop
iret
cmc
js
adc
les
ja
in
push
push
inc
push
insb
dec
lods
inc
and
pop
ljmp
mov
mov
rorl
rcrl
jle
cli
adc
mov
push
mov
adc
call
addb
ljmp
push
xchg
jp
negb
out
pusha
imul
out
sub
ret
imul
adc
xchg
cwtl
dec
icebp
inc
xchg
std
push
scas
jo
pop
sti
lret
in
out
cwtl
pusha
pop
and
adcb
and
repnz
mov
inc
push
pop
test
push
push
push
es
pushf
push
adcb
out
pushf
push
dec
jl
lahf
or
imul
sti
mov
out
xor
hlt
cmp
jnp
iret
lahf
aad
aaa
push
jne
inc
pause
mov
add
and
lcall
add
hlt
jmp
pusha
jl
out
lods
or
scas
dec
inc
aas
jecxz
push
adc
sub
popa
or
or
sti
cmp
xchg
xor
dec
pop
lds
addr16
mov
mov
rcrb
test
jne
cmp
mov
lds
add
ret
in
dec
mov
cltd
xchg
xor
in
icebp
stos
rolb
jg
frstor
lcall
std
push
dec
int3
out
pop
and
and
ret
pop
insl
mov
mov
pop
std
hlt
xchg
sbb
jle
sub
mov
jnp
lock
mov
jg
dec
test
push
xchg
aaa
sbb
bound
add
dec
les
add
add
mov
cmc
movsb
push
mov
sub
xchg
pop
fimuls
sahf
enter
addb
push
lock
out
xchg
dec
jg
adc
mov
fs
mov
sbb
adc
mov
imulb
dec
out
push
hlt
push
rcr
inc
imul
add
jbe
inc
mov
ret
mov
stos
fwait
js
test
pop
push
push
enter
fstpt
sbb
enter
andb
lock
roll
ror
notl
sti
xor
fs
cli
dec
jo
or
lret
in
jo
jmp
sahf
dec
sub
lock
push
and
jge
cltd
rclb
daa
lret
cmp
sahf
or
mov
add
jbe
push
inc
mov
mov
shlb
push
mov
jne
shlb
ror
xchg
push
push
sarb
lcall
cmp
push
sub
mov
jbe
jbe
iret
or
dec
push
adcb
xchg
test
test
hlt
loopne
testl
and
cmp
call
sbb
lds
mov
pop
inc
insb
sub
sbbb
fdivl
mov
pusha
mov
sbb
inc
cltd
sahf
les
jnp
add
inc
sbb
lahf
sub
jbe
cmp
add
outsl
push
pushf
out
adc
aas
cmp
int3
xchg
sub
dec
dec
mov
sbb
xor
mov
outsl
insb
subl
pop
add
pop
mov
mov
mov
inc
mov
push
sahf
and
xor
jae
cli
cld
test
lcall
fadds
pop
aas
neg
dec
inc
cmp
std
xchg
add
fdivr
inc
or
pop
stos
cltd
dec
pop
sbb
icebp
inc
das
iret
shlb
add
jecxz
aad
sbb
lea
mov
cmp
sub
cwtl
out
shlb
pop
push
add
xchg
lea
push
jne
cmp
imul
loopne
sbb
jecxz
or
adc
mov
neg
imul
ja
mov
iret
xchg
addl
bound
stc
add
push
bound
inc
cmp
loope
imul
rol
sub
jge
push
decl
mov
add
mov
adc
mov
mov
loope
sbb
push
sbb
jmp
push
mov
and
xchg
jne
mov
dec
sbb
add
mov
pusha
inc
pop
mov
sbb
or
adc
xchg
mov
clc
sub
shlb
stc
and
add
push
cltd
add
inc
cmp
shll
mov
out
scas
sub
dec
loopne
idiv
stc
das
pop
es
adc
fsubrl
mov
imul
in
in
or
or
xchg
dec
movsb
adc
cli
push
lahf
pop
jge
aad
insl
and
pop
shl
sub
jle
xor
and
test
clc
sbb
push
lea
push
clc
push
cmpsl
das
push
push
xchg
enter
jl
jns
scas
loopne
xchg
sahf
fstpt
mov
stc
jle
jge
jp
or
stos
pop
and
mov
sbb
sbb
xor
out
mov
aam
outsl
xchg
sub
movsb
mov
mov
repz
std
in
push
mov
clc
adc
cli
sti
mov
fisttps
ret
js
popf
mov
cltd
loope
jb
mov
cmp
bound
dec
loopne
mov
pop
pop
cmpsb
stc
inc
fldl
push
lahf
adc
jbe
je
in
and
aad
mov
mov
inc
out
cmpsl
xor
fdivrp
loope
cmp
ja
jmp
movsl
push
jp
imul
xor
push
push
inc
sub
adc
ss
sub
inc
xchg
and
jns
mov
icebp
test
sbbl
adc
in
loopne
push
enter
mov
ret
stos
xadd
push
xor
xor
test
mov
movzbl
push
pop
xor
jb
pop
inc
popf
or
cmpb
mov
add
or
add
push
mov
xchg
xor
adc
in
aaa
mov
aaa
and
cmp
sti
ret
rcll
push
mov
dec
mov
mov
adc
stos
dec
test
fwait
adcl
in
fcmovu
inc
xor
jl
in
and
mov
mov
jmp
lock
in
mov
fs
push
cmc
hlt
jecxz
sub
fidivs
fistl
cmp
in
bound
adc
sbb
fwait
jb
dec
test
and
pop
xor
mov
cs
fstpt
mov
xchg
fucom
jg
and
xchg
push
iret
jns
jge
push
push
xchg
loop
in
insl
sub
add
adc
jp
in
aad
roll
inc
pushl
cmc
xor
sub
push
jl
xchg
enter
rorb
bound
int
xchg
sub
adc
pop
fbld
ljmp
dec
and
ffree
adc
mov
and
outsl
fcompl
test
rcrb
lret
popf
scas
divl
xchg
cwtl
xchg
sbb
and
popl
cmpsb
mov
pusha
pushl
or
aaa
push
in
aas
shr
add
popa
jl
fsubrl
and
xor
inc
test
pop
jno
enter
dec
cmpl
mov
jle
adc
jl
das
aaa
cmc
stos
movsl
outsb
lods
pop
or
cwtl
mov
call
ret
dec
ficoms
sbb
ljmp
bound
cltd
push
adc
scas
mov
pop
jle
sub
arpl
outsb
inc
repz
pop
or
pop
in
mov
dec
mov
pop
pop
jp
fsubl
rol
lds
push
int
daa
mov
fs
sahf
aam
popf
repnz
sbb
and
leave
dec
pop
dec
xchg
sub
xor
ja
ljmp
cmpsb
cmp
add
cs
in
sub
push
push
lods
adc
adc
mov
lea
mov
inc
push
add
or
push
mov
out
fs
dec
test
cmp
xor
insl
lds
xchg
aad
dec
add
icebp
adc
loope
mov
ds
pop
xchg
xchg
lret
cmp
das
cmpsb
mov
xchg
jae
scas
jecxz
cmp
hlt
push
insb
jl
das
pop
xchg
mov
push
jp
cmp
mov
cld
cmp
mov
ret
jp
push
push
jp
push
pop
fimull
fidivl
stc
cmc
pop
push
xor
push
fidivrs
xchg
push
or
stos
mov
popa
test
push
cwtl
mov
aad
xchg
pop
inc
daa
inc
mov
lock
sub
das
cmpsb
sbb
adc
mov
mov
dec
push
test
lret
in
iret
add
jae
mov
movsb
push
xor
lahf
pop
xor
mov
fsubs
fldt
or
lods
dec
push
rcrb
insb
dec
and
sbb
xchg
in
push
cmc
push
jo
push
xor
dec
dec
add
mov
arpl
xor
cmp
out
xchg
cmp
push
adc
loop
std
fidivrs
jp
adc
xlat
inc
and
insl
cltd
mov
out
data16
movsl
cmp
sti
shlb
or
leave
or
jl
lahf
mov
xorl
jmp
mov
pushf
push
and
pop
mov
jno
lea
pop
loopne
pop
push
nop
xor
sub
jmp
add
pop
imul
push
lahf
jns
mov
add
add
lods
sbb
push
movsl
fldl
xchg
mov
call
data16
sbb
fwait
push
enter
inc
movsb
notb
mov
push
enter
imull
test
idivb
popf
xchg
and
inc
fdivrs
push
out
pushf
jo
test
sub
push
jecxz
xchg
bound
sub
subl
cmpsl
dec
cmp
bound
clc
outsb
out
pop
dec
shll
shr
cmp
sub
shr
jp
xor
jne
into
xor
cmp
pop
sbb
popf
add
outsl
bound
jmp
rorl
push
scas
pusha
imul
loop
rolb
cmp
xchg
inc
and
jp
mov
mov
loop
pushf
loop
or
int3
push
pushf
insl
cld
add
cmp
lret
aam
adc
mov
pop
lock
jne
loop
fdivs
aaa
mov
push
mov
inc
cltd
xchg
loopne
aaa
sub
out
sahf
jle
mov
test
aas
xchg
test
cld
push
insb
sbb
lret
xor
ja
xchg
push
or
mov
in
push
adc
add
xor
fistl
lods
sub
arpl
std
fdivrs
int3
lret
stc
incb
mov
sub
int3
in
dec
out
mov
scas
dec
addl
xor
mov
sbb
aaa
lret
subl
jne
repz
inc
push
ret
call
out
add
sbb
jo
jp
aaa
mov
sbb
inc
and
mov
dec
aam
scas
push
jnp
mov
cwtl
loopne
cmp
sub
jo
jnp
cs
lret
xchg
ds
sub
xlat
faddl
adc
pop
inc
stos
adc
push
sub
aas
or
mov
xchg
test
ds
lds
pushf
or
je
repnz
lret
pop
mov
mov
std
xchg
mov
xchg
jp
dec
pop
lods
mov
jle
xchg
mov
jbe
test
adc
into
cs
insl
inc
dec
jne
ret
cmpsb
repnz
stc
pop
mov
mov
adc
xchg
gs
cmc
and
insb
fists
lret
sahf
jbe
scas
jge
outsl
out
inc
jbe
adc
jo
nop
cli
sbb
mov
out
aam
mov
cmp
aam
mov
notl
mov
imul
mov
sub
xchg
and
pop
mov
jns
mov
sub
xchg
sbb
je
sbb
shrl
fisttps
or
out
inc
jg
mov
add
sub
bound
fdivl
dec
andb
adc
bnd
and
dec
test
fwait
inc
sub
push
out
mov
pop
mov
inc
div
test
testb
mov
pop
sub
mov
pop
jl
mov
aaa
ret
stos
repnz
inc
xor
shll
dec
jno
jae
or
clc
mov
cmp
xlat
loop
cli
test
paddsw
das
test
inc
lret
divl
push
pop
push
mov
fisubrl
mov
mov
out
stos
adc
pop
dec
dec
icebp
push
fdivl
pop
xchg
testb
jmp
sbb
sbb
call
shlb
pop
or
dec
adc
shrl
pop
test
pop
fbstp
pop
add
sub
je
mov
push
pop
dec
ret
fmuls
mov
or
or
in
pop
mov
pop
pop
add
xor
fs
test
fisttpll
dec
cli
dec
mov
dec
popa
xor
ss
fiadds
pushf
insb
ret
sbbb
sbb
jbe
add
xchg
jno
loope
loope
lods
push
hlt
movsl
test
lcall
bound
bound
sub
add
jns
js
call
sub
pop
sbb
pushw
imul
fnsave
sbb
inc
enter
cwtl
mov
dec
xchg
inc
push
loop
or
inc
mov
mov
jb
rcrl
int3
push
inc
cs
leave
int
leave
pop
inc
fmull
add
sarb
popf
lock
add
fbld
jo
movb
aad
popf
pop
fs
xlat
xchg
mov
into
mov
inc
sub
and
or
adc
stos
rcrl
cmp
test
push
mov
mov
je
and
add
inc
aam
out
in
out
xlat
mov
out
xchg
xchg
dec
cmp
fcom
cld
dec
dec
dec
mov
popa
xchg
hlt
xchg
dec
push
mov
lods
outsl
outsb
xor
pushl
jg
jb
add
push
cmp
shl
or
sbb
add
mov
and
inc
mov
inc
fcmove
push
je
mov
pop
mov
sub
das
add
in
jp
cld
clc
jo
and
push
inc
loopne
xchg
push
jmp
cmpsl
loop
jecxz
jo
ja
jle
roll
mov
cs
scas
adc
pop
push
hlt
sahf
cmp
daa
mov
and
dec
popa
ds
xchg
icebp
in
inc
and
outsl
xchg
mov
xor
pop
lods
fmulp
ss
pop
ds
add
test
test
dec
int
addb
test
dec
cwtl
mov
mov
addr16
xchg
outsb
or
xchg
sub
pop
gs
inc
adc
dec
js
into
jp
pop
inc
add
mov
add
pop
mov
or
and
icebp
stos
jmp
adc
test
xor
sub
pop
jno
sbb
repz
sti
popa
in
cmp
ljmp
inc
pusha
fdivrs
into
add
xor
xchg
fldl
loopne
je
test
outsb
dec
xchg
fnstsw
jl
and
test
push
mov
ret
test
insl
xchg
lock
leave
mov
stos
mov
pop
scas
loopne
pop
divb
pop
dec
rorl
cs
xchg
pop
ds
pushf
lods
xor
pusha
out
lock
push
les
rolb
inc
adc
lret
cwtl
jo
lahf
imul
arpl
fistpl
inc
in
fs
repz
mov
add
sbb
sub
and
mov
fiaddl
lcall
push
sub
push
xor
fwait
test
imul
jle
inc
ja
push
lds
mov
das
nop
inc
imul
jg
test
dec
test
in
mov
out
fucomi
int3
dec
add
xor
push
sub
push
xor
mov
and
pop
cmp
xor
ds
push
cmp
icebp
and
lret
or
mov
cmc
rorb
lea
adc
iret
and
leave
xor
sbb
addr16
fisttps
sbb
imul
pushfw
aas
bound
sub
movsl
push
lret
repnz
push
dec
or
xor
add
call
or
jg
sbb
add
jnp
or
loope
xchg
pop
inc
mov
mov
adc
cmp
jne
xor
in
data16
addr16
sub
xor
imulb
pop
mov
add
scas
pop
testb
lods
iret
rorl
divb
or
sub
jmp
add
inc
push
or
add
loopne
decb
sbb
loopne
add
cmp
cmp
and
jnp
sbb
add
js
xchg
push
inc
ret
mov
addr16
les
jae
sbb
insl
push
ss
or
cld
pop
addb
loope
xchg
sub
mov
cmp
loop
insb
push
outsl
in
sti
jmp
in
cmpsb
push
sbb
pusha
les
shl
pop
movb
scas
add
cmp
imul
adc
pop
mov
fwait
cli
add
and
mov
in
pop
add
out
mov
pop
int3
xor
inc
xchg
mov
jge
cld
dec
fisubl
inc
xor
xchg
cmc
lea
ret
fsts
cs
nop
sub
daa
or
ret
cmp
fidivrl
or
jecxz
or
inc
je
arpl
mov
mov
call
insb
sbb
add
xchg
aaa
shl
or
dec
cmp
in
add
addr16
fisubrs
insb
mov
inc
mov
mov
sbb
xchg
jmp
stos
adc
fxch
mov
xchg
imul
and
gs
mov
mov
and
je
mov
cltd
sar
mov
mov
mov
lcall
inc
mov
or
fs
cmpsl
mov
mov
les
xchg
into
push
mov
das
icebp
jle
push
into
mov
adc
rcll
adc
add
cmp
dec
inc
fcomps
adc
push
inc
packuswb
pop
cmp
dec
xchg
add
sbb
insl
nop
or
stos
rcl
fisttps
lcall
outsl
mov
fistpl
stc
mov
in
jle
inc
mov
pop
repz
iret
adc
aaa
inc
and
mov
sub
cmp
pop
bound
repz
mov
lret
lret
jmp
sub
sahf
fwait
rcl
sub
sub
sbb
shrl
cmpsl
out
mov
pop
daa
lods
adcb
insb
push
insl
cmp
pop
and
lock
ljmp
insb
push
sbb
test
pop
jg
fwait
jecxz
adc
xchg
add
mov
add
sub
inc
ds
mov
sbb
das
push
push
add
leave
xor
add
add
sbb
xchg
mov
aad
jae
stc
push
mov
inc
idivb
pop
outsl
pop
cltd
jbe
pop
xor
popa
and
sub
jbe
pop
outsl
je
in
andb
inc
in
rclb
icebp
lcall
call
push
lret
cmp
out
inc
pop
push
shl
jne
imulb
les
je
cwtl
pop
xor
je
lea
fstpt
subl
sbb
xchg
cmp
js
fdivr
or
mov
push
mov
adc
popf
cwtl
mov
mov
stos
adc
or
or
js
pop
out
jmp
mov
pop
js
mov
outsl
mov
xchg
lds
inc
and
loope
mov
inc
sub
xchg
sub
sbb
es
sarl
and
mov
add
inc
fldcw
mov
inc
push
pop
js
aaa
pop
fisubrl
iret
push
fcmovnbe
jmp
sahf
xorl
leavew
imul
pop
sub
aam
out
xchg
rcl
pop
sub
cmp
enter
jnp
insb
fadds
jge
push
js
je
inc
xchg
lock
xor
jl
orb
cli
add
aam
and
or
adc
popa
lcall
mov
repz
pop
sub
loope
mov
ret
mov
sarb
arpl
or
dec
insl
scas
int3
pop
daa
jge
sub
jbe
loop
mov
int3
jnp
and
xchg
lods
int3
pop
jb
and
or
out
fwait
inc
shl
mulb
mov
sbb
and
adc
inc
adc
cltd
pop
sub
negb
and
jns
and
inc
popf
pushf
push
popa
jae
lods
cmp
xor
cmp
ret
cs
dec
cltd
mov
repnz
adc
repnz
subl
xor
xor
jbe
fidivl
adc
or
and
pop
mov
xor
pushl
xchg
ds
dec
std
stos
movsl
push
outsb
fisubs
out
cmpb
dec
fnstcw
pop
xchg
les
jl
sub
inc
sub
ficoms
jp
cs
xchg
cltd
rclb
pop
mov
sub
jmp
cmp
xchg
mov
mov
fdivl
jmp
ds
mov
jb
xlat
pushf
enter
push
sub
xchg
mov
xor
adc
push
scas
stos
inc
jmp
mov
ljmp
xchg
gs
scas
ficoml
sbb
arpl
cmp
add
jmp
dec
sysenter
sub
leave
or
mov
or
ja
dec
xchg
cs
adc
push
mov
gs
cmp
mov
arpl
roll
or
cltd
xchg
jb
dec
add
insb
inc
xchg
inc
std
icebp
ret
outsb
aam
cwtl
in
insl
insl
jl
sarl
out
orb
sub
sbb
cld
rorb
cmpsl
jecxz
mov
test
xor
out
add
xor
enter
sbb
xor
mov
adc
mov
sbb
push
and
lds
sub
mov
jb
hlt
cmp
popa
test
fdivrs
and
xchg
repnz
out
mov
enter
loope
rcrb
cmp
add
cli
test
rcll
jbe
ficomps
push
xchg
mov
and
or
push
pop
mov
cmp
out
sbb
mov
out
testl
push
pop
jl
xchg
icebp
rcll
fnstenv
or
xchg
push
and
std
mov
inc
jb
mov
xchg
pusha
or
pop
adc
mov
jb
dec
out
inc
add
sbb
pop
out
fwait
mov
movaps
out
xlat
xchg
rolb
xchg
fisttpll
mov
mov
pop
loopne
push
sub
out
mov
pop
mov
lods
cmc
addr16
je
scas
and
cmp
add
cmp
push
sbb
popa
mov
pop
out
dec
pop
mov
mov
cmp
mov
sbb
cmpsl
pop
sub
outsb
das
frstor
lods
outsb
sbb
sbb
cmc
mov
lret
test
push
std
cltd
cli
movsl
fists
push
mov
roll
lods
pop
fstpl
lds
mov
push
ljmp
and
dec
popf
mov
in
or
xor
dec
icebp
mov
sub
enter
xchg
mov
mov
mov
in
cmp
test
mov
jmp
push
mov
and
cmp
adc
push
xchg
or
adc
ret
dec
leave
sbbl
push
movsb
pop
cmp
dec
jno
clc
sbb
cmp
popa
fstpl
ljmp
sub
mov
es
repnz
lds
dec
jmp
jns
cwtl
inc
xor
adc
push
dec
mov
push
aas
cmpb
ret
lcall
xchg
or
daa
mov
in
popa
pushl
xor
xor
fdivs
adc
les
fstpt
jl
enter
inc
clc
enter
add
mov
jp
rorl
push
mov
push
andl
je
fcom
mov
push
push
lods
jo
testl
mov
sbb
sub
cmp
and
jo
outsl
pop
std
in
fisttpll
testl
cmc
es
fwait
movsl
fiaddl
jp
adc
daa
inc
xchg
lds
add
fucomp
xchg
xorb
mov
mov
rorl
fs
sti
scas
lcall
jae
or
insb
cli
lret
push
ret
mov
inc
dec
mov
or
pushf
mov
xor
dec
mov
pop
push
mov
lahf
fadds
lahf
mov
push
das
inc
sub
push
data16
test
insl
out
std
adc
pop
fwait
cmp
outsb
inc
sbb
loop
in
mov
mov
xrelease
hlt
xchg
mov
xchg
test
fsts
les
mov
xor
mov
dec
scas
insl
popf
lahf
add
pop
into
fistps
outsl
popf
push
push
xchg
dec
mov
add
dec
jle
lret
fstpt
mov
dec
pop
cmp
inc
inc
jo
add
inc
xchg
jae
push
lods
repz
int3
xor
jmp
mov
dec
lea
xchg
test
loope
arpl
xchg
mov
ret
call
mov
jae
mov
and
je
jo
gs
out
pop
movsb
dec
pop
pop
sbb
lret
jbe
pop
aaa
jp
fucomp
aad
imul
fisttpll
dec
jge
pop
or
push
int
and
xchg
push
out
xorl
popf
mov
pop
xchg
xchg
jmp
or
rorl
mov
jo
xchg
cld
push
inc
repnz
out
pop
or
xor
ljmp
or
and
cld
jle
push
mov
les
push
das
adc
cmp
lea
iret
popf
les
push
test
arpl
inc
cmp
ds
sub
or
push
and
push
shll
inc
fdivrs
pop
push
xchg
dec
cmpsb
xor
cmp
add
inc
into
push
mov
nop
push
jge
inc
fmul
fwait
push
fs
insl
xchg
arpl
jge
xchg
mov
mov
aaa
dec
fsubp
pop
push
adc
add
pop
leave
pop
adc
add
jp
out
lods
fidivrs
and
lahf
or
nop
xchg
inc
enter
pop
pop
je
dec
or
mov
and
fisubrl
xor
movsl
mov
cwtl
mov
xor
lret
push
push
push
adc
mov
lods
jecxz
mov
and
movsb
les
aam
dec
scas
jne
jno
shr
xchg
xor
sbb
inc
cltd
out
and
je
pop
and
mov
cs
pop
xor
outsl
bound
add
and
pop
nop
jno
sub
mov
in
leave
scas
repnz
lret
outsl
call
jno
insl
xchg
xor
ror
push
je
rorl
call
xor
std
xor
lcall
cli
pop
fs
cmpsl
xor
ljmp
aad
addb
dec
inc
jecxz
jo
dec
jno
out
cli
fucomip
push
mov
inc
dec
test
fmull
pop
pop
fnsave
popf
jnp
das
icebp
fmuls
pop
rcr
or
bound
jmp
cli
pusha
dec
fs
mov
dec
fisubs
and
mov
cmp
test
push
fmull
jns
in
fadd
xchg
xorl
lea
cmp
arpl
cmc
stos
sar
lods
enter
mov
imul
or
pushl
and
rcll
mov
cs
xor
adc
xor
add
in
fs
xchg
push
jnp
lds
sti
in
enter
movsl
out
cmpsl
sub
pop
loopne
push
mov
xor
jp
lahf
scas
and
mov
lods
sti
sub
cwtl
out
mov
call
dec
sbb
aaa
clc
xchg
mov
lea
outsl
lcall
pop
mov
adc
mov
pop
clc
and
dec
push
inc
and
pop
cmp
push
aad
mov
push
or
cwtl
push
push
xchg
push
lret
sti
add
dec
mov
or
ficomps
pop
repz
out
bound
push
into
mov
scas
inc
mov
pop
pop
fwait
adc
or
sbb
sub
inc
sub
sbb
xchg
sub
mov
mov
test
mov
dec
mov
out
push
adc
fiadds
popa
fwait
adc
pop
or
lods
sahf
mov
or
xchg
push
call
pop
xchg
fdivl
test
mov
daa
ljmp
sarl
ja
push
xor
fildll
imul
shr
faddl
andb
xor
jg
or
out
mov
scas
add
mov
and
sahf
mov
lea
je
mov
push
adc
repz
negl
or
lods
icebp
das
shl
jae
add
cmp
pop
pop
xchg
notl
test
sub
lahf
clc
fcom
daa
pop
push
and
jmp
push
arpl
cwtl
int3
shrl
rcrl
movsb
jae
stos
cld
xor
fwait
push
push
data16
inc
nop
out
mul
lds
call
mov
js
popa
outsl
add
adc
aas
xchg
ljmp
sbb
adc
movsb
and
pop
inc
jge
ss
aaa
and
lcall
xor
jae
inc
or
or
insl
clc
fs
adc
add
mov
push
mov
cmp
add
adc
jb
add
adc
aad
mov
pop
ficompl
adc
and
dec
or
jbe
mov
push
adc
int3
dec
push
xor
or
std
mov
cmp
xor
mov
test
xlat
push
insb
pushf
vdivsd
mov
adc
aas
stos
outsb
jns
mov
push
loop
dec
lret
lea
js
sbb
cmpsb
push
jmp
idivl
push
pop
inc
push
outsl
arpl
cmp
push
lock
cmp
push
ds
cmp
xchg
xchg
xchg
jecxz
mov
stc
adc
dec
push
xor
and
or
push
push
lcall
pop
push
out
inc
ss
xor
out
adc
xchg
es
test
outsl
mov
pop
idivl
inc
pop
push
jnp
fsts
add
mov
dec
and
inc
scas
neg
lods
xor
pop
aas
pop
pop
gs
mov
push
cmc
lea
dec
sahf
pop
dec
dec
xor
mov
adc
outsl
stc
push
or
cmp
mov
mov
inc
or
mov
xchg
aaa
in
icebp
xor
test
jle
icebp
leave
aam
mov
sbb
fcomip
push
adc
out
jno
jecxz
clc
sub
mov
loope
je
das
int3
inc
cwtl
movsb
cmpsb
fstpl
and
jecxz
mov
je
out
lds
xchg
lods
adc
pop
fcomps
mov
mov
and
ror
sbb
cmp
push
cli
out
insb
jle
repnz
xchg
push
aad
cltd
inc
and
sar
adc
jge
popf
mov
jno
xchg
add
xlat
out
push
push
imul
mov
lret
push
addl
pop
mov
sbb
js
mov
cltd
das
dec
push
js
add
lods
ds
les
lods
cli
test
sahf
outsb
lcall
popa
cli
leave
push
test
xchg
enter
shrb
mov
aam
imull
ss
push
cmp
inc
mov
xchg
dec
or
out
dec
incb
push
add
rcrl
loop
cmpsb
das
sub
dec
pop
mov
pop
jbe
cmp
pushf
jmp
hlt
and
jne
mov
sub
lods
add
jnp
add
lahf
sub
dec
call
or
cltd
sub
cli
fiaddl
xor
mov
les
pop
sbb
add
xchg
jmp
daa
jge
pushf
inc
shrb
xchg
adc
or
popf
push
daa
iret
sub
leave
or
or
test
dec
xor
fimuls
pop
xor
adc
and
lds
sarb
adc
ret
repnz
bound
rorb
xchg
and
mov
stos
stos
xorl
sbb
call
push
mov
mov
jns
adc
lcall
pop
lods
xchg
roll
clc
insb
rolb
mov
insl
dec
mov
mov
enter
cmpl
ret
daa
test
jno
pop
test
outsl
pop
inc
frstor
pop
stc
pop
mul
dec
clc
xor
push
lcall
das
cmp
ret
pusha
and
push
das
push
in
mov
xor
cli
enter
out
xchg
mov
mov
jo
repz
test
xchg
aas
hlt
jnp
push
fdiv
pusha
lods
add
rcll
mov
test
mov
lret
or
mull
and
pop
xor
pop
mov
enter
mov
sbb
sti
jmp
jnp
push
or
lea
adc
leave
out
cmc
and
cmp
cmp
pushf
movsl
ljmp
nop
cmp
fldcw
sbb
movsl
push
pop
roll
jge
fstps
insl
push
sbb
mov
idivb
test
movsb
leave
jb
dec
xor
dec
xor
jmp
roll
xor
sti
dec
lods
rorl
sub
jmp
dec
sarb
popf
fsubrl
inc
fucom
push
mov
rcrb
lods
scas
dec
jp,pt
lods
push
in
jl
test
fcoml
icebp
xor
in
movsl
jno
add
stos
lret
xorb
sahf
push
push
xchg
mov
pop
jecxz
ja
insl
stos
or
and
popf
js
gs
mov
push
mov
xchg
scas
jmp
jo
xchg
fwait
arpl
xor
cmp
inc
aaa
add
stc
lahf
pop
aam
fimull
mov
jle
lret
pop
sbb
cmp
push
les
mov
sbb
mov
mov
cs
pop
jo
inc
mov
xorl
mov
in
test
bound
jb
stos
cmpsl
lcall
and
push
cmpl
and
pop
jnp
mov
jnp
in
bound
test
cltd
or
mov
mov
adc
aas
mov
imul
cmp
sbb
add
xor
xor
mov
addl
hlt
jecxz
sbb
xor
fnstenv
and
stc
sbb
mov
out
or
rorb
xchg
add
pop
fbld
xor
add
sbb
fcompl
xchg
lret
mov
xlat
sahf
jbe
cmp
cwtl
rcl
xchg
sub
das
jge
push
mov
pop
int3
pop
jbe
idivl
sbb
add
jge
loop
and
inc
adc
scas
mov
test
bound
sarb
dec
lds
adc
repz
aas
push
loope
out
cmp
jp
mov
jo
dec
mov
sbb
adc
add
pop
pop
cmp
add
xlat
sbb
mov
pusha
pop
push
pop
inc
fwait
stc
loopne
jns
cmp
fldenv
fcompl
lret
lret
jno
rcl
inc
mov
testb
sahf
ja
pop
rorb
jno
sahf
inc
fsubrs
dec
adc
cld
shrb
testb
in
jp
ficoms
das
or
cmp
push
add
add
and
jns
outsb
aam
out
push
subl
mov
inc
aas
and
out
hlt
fs
sti
or
sti
sub
mov
repz
mov
or
out
push
sbb
inc
loopne
sub
cmp
aam
sub
roll
mov
pop
and
out
out
mov
mov
jnp
inc
scas
fdivrs
inc
dec
jae
and
jns
or
dec
or
movsl
in
push
mov
xchg
cmpsl
or
inc
ficoml
mov
orb
xor
xchg
mov
mov
push
in
pop
lret
adc
or
cmp
adc
clc
inc
das
test
lock
xchg
cmpsl
repnz
adc
int
outsb
sub
das
pop
in
mov
and
movsb
cltd
pop
xchg
in
je
and
out
xor
les
push
rcr
add
inc
mov
push
jbe
mov
adc
sub
dec
mov
xor
lea
xchg
or
shrl
test
and
mov
add
cmp
lods
outsb
adc
cld
jb
cmp
sbb
cmp
adc
pop
loop
lods
push
adc
sub
add
fnstcw
xchg
adc
mov
cmpsb
push
mov
mov
aaa
jo
dec
dec
call
ss
mov
pop
adc
cmp
idivb
imul
testl
add
xchg
lret
xlat
ljmp
in
xchg
jae
je
push
pop
fisubrl
hlt
or
or
push
mov
cltd
sub
xchg
mov
and
xor
icebp
pop
or
mov
cmc
aaa
leave
and
scas
and
mov
sbb
or
shll
call
lret
xchg
xor
insb
std
popf
push
jmp
fnsave
daa
rclb
fidivrs
enter
xor
adc
cld
mov
sub
and
stc
or
pop
mov
fistpll
insb
xor
mov
and
lret
mov
pop
mov
adc
dec
pop
inc
adc
nop
pusha
das
add
mov
leave
mov
adc
push
loop
lcall
jbe
fnsave
add
in
addr16
mov
ja
push
sbb
popa
add
addr16
aam
ss
push
bound
pusha
mov
inc
mov
and
jecxz
jmp
sbb
sbb
insb
in
loopne
daa
jl
jno
cmc
movsb
pop
ret
dec
imul
cmp
or
les
nop
cmp
enter
nop
mov
pop
enter
in
sarl
cmp
jmp
xor
inc
mov
fs
into
cli
dec
ret
push
add
lcall
mov
inc
test
int3
cli
dec
push
jg
jecxz
mov
sub
ret
pop
pusha
mov
stos
cld
test
push
dec
sub
inc
xlat
mov
je
in
sub
out
pop
call
imul
jge
or
test
fmull
ljmp
mov
add
cmp
and
lcall
pop
mov
repz
mov
push
imul
mov
gs
test
jno
sub
pop
repz
dec
loop
mov
jo
inc
ds
mov
shrl
push
fs
mov
mov
xor
outsb
lods
not
sub
pop
jb
xor
xor
sbb
stos
scas
in
mov
repnz
or
sbb
xlat
jno
je
and
mov
ja
sub
adc
jbe
or
lcall
and
push
mov
mov
andl
aam
sub
ror
adc
dec
call
cmc
dec
cmp
nop
pushf
test
lcall
leave
mov
fistpl
dec
rol
repnz
test
cmpsb
push
rcl
push
decl
pop
scas
fsubrl
out
jae
jg
inc
sti
out
jbe
cmp
or
cmpb
fisubrl
mov
jmp
out
jecxz
popa
sub
out
pop
nop
mov
xchg
inc
cmpsl
pop
add
adc
mov
xchg
pop
pop
outsl
cmp
cmp
push
rcll
fucomp
push
dec
pushf
insl
jnp
sbb
lret
repz
mov
mov
or
mov
sbb
dec
iret
clc
push
mov
jmp
push
mov
add
cmp
ss
mov
cld
bound
pop
mov
lock
or
mov
ljmp
and
xadd
mov
in
shlb
insb
push
jb
das
gs
lret
push
lahf
sti
jp
jg
mov
or
daa
xchg
pop
jecxz
pop
dec
subl
add
push
xlat
daa
ret
xchg
inc
loope
mov
sbb
and
in
mov
mulb
in
mov
loope
xlat
loop
sahf
outsb
das
jl
lret
inc
clc
cmpb
movsl
popa
js
pop
jbe
add
or
movsb
lahf
mov
test
xchg
or
ss
fldl
pop
cwtl
je
popf
aam
or
imul
pop
or
jge
cmp
into
mov
loope
add
dec
ljmp
cmc
pop
mov
lret
pop
in
mov
mov
outsb
ret
push
ret
pop
std
stos
cmp
icebp
clc
cmp
jnp
jo
dec
mov
sbb
fwait
bound
fnstsw
int
add
daa
out
in
andl
sub
cld
xchg
jne
fidivrs
movsl
or
jne
adc
or
xorl
dec
mov
jl
mov
loopne
in
cmp
cmp
idivl
add
pop
loopne
sbb
pushf
add
stc
adc
mov
arpl
and
mov
add
push
mov
sbb
imul
out
in
xchg
adc
xchg
adc
pop
icebp
insl
and
repz
ror
lea
nop
movsl
ss
repz
mov
and
mov
bound
pop
mov
mov
nop
sbb
and
push
pop
and
lock
scas
ds
insl
or
xchg
jmp
adc
ja
dec
mov
adc
insb
mov
fstl
xchg
sbb
sub
or
test
push
adc
rclb
adc
inc
dec
push
jmp
stos
movsl
lock
aam
js
cmp
or
add
into
lret
cmc
cmp
jmp
jp
add
outsb
cmpl
fwait
jns
gs
fisubl
mov
pop
adc
test
push
loopne
push
cltd
fs
push
cmpl
mov
incl
lock
sti
and
mov
push
inc
cmpb
sbb
fmull
push
pop
je
fisubrs
in
cmpsl
imul
push
scas
xor
dec
in
or
imul
pop
dec
jo
sbb
add
mov
test
push
stos
int3
in
adc
ja
pop
in
pop
lcall
or
and
cmp
jmp
pop
and
cmc
imul
outsl
push
sub
dec
fisttps
mov
xor
repz
xor
jge
inc
xchg
lcall
fmulp
scas
insl
call
fiaddl
outsb
push
in
and
mov
test
push
mov
jp
push
xchg
adc
jbe
mov
add
jno
push
les
je
andl
cli
push
icebp
into
jge
in
pop
int
stos
sub
dec
push
pushf
inc
out
adc
cmp
pop
les
sbb
fistps
aam
pushf
rcr
push
jge
fucomip
sub
test
or
imull
sub
frstor
or
add
push
popf
xor
fisubs
call
mov
sub
mov
cmc
cs
fiaddl
subl
stos
dec
pop
cli
dec
movntq
mov
push
mov
mov
mov
push
ret
or
mov
pushf
push
das
xchg
or
adc
mov
mov
xchg
pushl
mov
in
xor
mov
dec
mov
add
jns
cmc
or
dec
popf
add
jecxz
popa
shll
push
popf
shrb
inc
cmp
or
insl
inc
lret
dec
push
mov
je
popa
nop
xchg
cwtl
mov
sub
iret
dec
xchg
cmp
add
addr16
xchg
test
int
outsb
lods
ret
and
fstpt
and
lods
jns
fcoms
xchg
push
mov
loope
lods
pop
inc
gs
shl
mov
jp
dec
sbb
inc
ja
jmp
cwtl
pop
jp
inc
dec
add
cs
stos
adc
cwtl
adc
xchg
xor
cmp
ss
imul
sbb
es
lea
fsts
or
mov
or
push
jle,pt
mov
inc
ss
dec
mov
cmovns
repnz
jo
test
in
jbe
jg
mov
loop
dec
inc
mov
loopne
push
push
loopne
frstor
xlat
out
cmp
lods
rcl
rolb
xchg
jns
ret
jae
outsb
leave
stos
and
icebp
xor
cmp
cmpsb
mov
jnp
and
cwtl
pop
loop
jnp
lds
sahf
lods
mov
fnstenv
repz
nop
aas
cmp
cmc
sub
gs
inc
mov
jmp
mov
pop
stc
sbb
xor
gs
insb
inc
ret
push
loop
loopne
mov
adc
add
pop
mov
xchg
and
aad
arpl
popf
sub
cli
mov
dec
scas
push
pop
push
sti
pop
std
lods
pop
js
inc
lods
jns
ds
jae
cmc
jl
andnps
sahf
sbb
push
icebp
cmp
mov
mov
add
addr16
sub
mov
ja
out
cli
dec
dec
mov
dec
push
ja
mov
mov
notl
sahf
xlat
mov
mov
addr16
push
add
inc
cli
roll
or
or
fdivr
imull
pop
fiaddl
ja
inc
test
test
or
ret
jl
lret
sub
call
pop
ficomps
ja
sub
je
out
ljmp
dec
ss
pop
cmp
push
adc
cmp
inc
stos
in
inc
iret
flds
pop
addb
inc
loopew
push
jmp
sub
pop
adc
mov
dec
push
mov
mov
xor
pop
hlt
and
xchg
ret
push
sbbb
jle
sub
cs
jbe
jbe
mov
repnz
stos
scas
arpl
push
into
out
mov
lods
mov
es
cmp
addl
aad
cwtl
shlb
dec
pop
ljmp
and
cltd
ljmp
clc
int3
iret
lahf
pop
push
out
xor
popf
imul
mov
xchg
cltd
jne
push
and
stc
enter
movsl
jo
fwait
popl
xchg
je
mov
gs
test
cmpsl
fbld
adc
mov
sub
out
shrl
cmp
cmc
sbb
mov
test
stos
nop
insb
mov
cmp
sbb
test
fists
shl
sub
mov
rorl
loopne
jo
pop
xchg
and
pop
mov
inc
stos
sub
xchg
mov
or
mov
pop
or
and
jl
pop
push
mov
addl
pop
mov
pop
push
std
cs
push
imul
cmp
test
xchg
in
outsl
inc
les
test
sti
add
xor
jo
pop
or
cmpsb
addl
shll
test
into
faddl
shrb
imul
xor
cmc
inc
out
sbb
movsl
stos
push
jbe
lods
ja
out
jb
mov
pop
pop
idivb
xor
ss
push
fadds
fists
fbld
add
shrb
incb
pop
outsb
pop
iret
lahf
icebp
inc
inc
dec
or
sbbl
rcll
les
imul
push
cmp
test
or
mov
orb
popa
jb
lahf
out
push
xlat
mov
lods
mov
ljmp
cmpl
pop
jno
je
lock
ds
imul
mov
scas
pop
fsubs
xor
sahf
das
push
test
pop
pop
or
push
xchg
out
iret
xor
cld
ja
ljmp
cmp
pusha
cs
push
lea
adc
and
mov
incl
mov
mov
pop
frstor
mov
inc
or
testl
insb
fdivrs
jle
jae
xchg
cmp
mov
ja
in
imul
dec
in
fwait
aad
sub
push
sahf
pushf
fdivrs
mov
xchg
sub
std
rorb
push
adc
adc
int
sbb
and
cltd
nop
mov
xchg
mov
test
outsl
mov
pusha
add
loopne
xor
dec
push
subl
mov
inc
jg
mov
in
push
aaa
push
fsubp
cmp
sub
or
scas
mov
jb
fwait
xor
call
adc
pop
sub
jb
rcl
sahf
xor
lods
jnp
sbb
mov
out
lods
pop
jnp
stos
adc
and
fidivl
xor
les
hlt
add
add
fcomps
mov
jg
push
mov
nop
mov
ss
and
lods
and
jge
push
xor
xchg
adc
call
rcl
mov
xor
sbb
or
mov
add
stc
out
mov
mov
int3
in
mov
call
cmpsl
mov
push
sub
and
jnp
add
and
fmul
ljmp
jp
bnd
push
xor
mul
xchg
in
sbb
inc
jne
ss
add
hlt
dec
enter
jg
fistpll
mov
add
dec
js
sub
dec
inc
inc
pop
jg
fwait
jbe
jge
int
pop
gs
lods
mov
jo
ja
push
mov
xor
sbb
fisubrl
xor
cltd
or
sbb
xor
xchg
add
push
xlat
mov
aam
pop
jp
sbb
outsl
arpl
mov
outsb
loopne
ret
popf
sub
add
dec
mov
jo
push
daa
sbb
push
xorl
pop
xchg
insl
mov
aam
stc
das
fcoms
mov
es
push
xor
push
mov
jo
adc
jnp
add
adc
push
ljmp
mov
inc
cmp
inc
ss
pop
out
pop
push
test
rorl
dec
xchg
inc
pop
adc
adc
shlb
mov
imul
std
lock
or
cmp
mov
lahf
and
insl
cmpl
repnz
ja
popa
xor
inc
or
sar
in
cmp
lock
mov
mov
arpl
movsl
mov
sti
iret
ja
and
popf
imul
lods
mov
mov
addl
jo
lods
fiadds
mov
lds
rclb
mov
pop
aam
dec
aaa
push
cwtl
cltd
insb
cmc
addr16
repnz
push
cld
pop
arpl
push
mov
stc
lahf
pop
aad
sahf
movl
in
rol
sub
xor
and
cmp
pop
int3
loope
out
addr16
push
sbb
lds
mov
sar
adc
xchg
in
mov
das
sub
jecxz
adc
add
xor
inc
sbb
fwait
out
popa
cmp
push
stos
test
adc
jmp
pop
mov
icebp
inc
jo
pop
and
cld
jae
ss
mov
xchg
adc
leave
addl
sarb
pusha
cmpsl
das
cmp
test
mov
mov
rclb
aas
jae
rcrl
rep
rep
sbb
pop
xchg
add
repnz
fisttpl
sub
jne
xor
push
ljmp
pop
add
clc
stos
fs
cmp
xlat
adc
cwtl
movsl
pusha
in
adc
jl
gs
xor
lock
shll
mov
lcall
leave
push
fstps
mov
lock
cwtl
out
or
in
inc
jle
xchg
popa
in
xchg
sarb
shl
xchg
in
ror
stc
add
mov
xor
daa
popf
push
das
dec
lea
mov
dec
fcoms
das
movsl
fs
in
lock
push
push
enter
mov
mov
iret
dec
jg
lret
push
cmp
xchg
push
mov
inc
scas
fidivrs
rcl
fnsave
sub
or
movsb
out
js
push
test
rorl
fisubs
cmp
push
mov
push
mov
inc
vorps
fcomps
nop
repnz
lock
jbe,pt
dec
xlat
inc
inc
mov
dec
jl
fisubl
push
or
sub
mov
xor
lcall
sarb
je
pop
das
push
outsl
lret
and
fildl
mulb
cmc
cmp
jle,pt
lock
dec
aas
aas
fadds
pop
cmc
mov
cmpb
jle
inc
push
mov
lods
or
mov
sub
inc
xor
cmp
push
mov
sbb
sbb
ja
orb
fdivp
cmp
stc
incb
add
sbb
sub
popf
mov
xor
mov
imul
bound
sub
jne
in
xor
insb
call
fsubs
xlat
out
mov
cmp
scas
xlat
push
sbb
pop
sub
push
and
push
clc
and
movsb
dec
ja
xchg
push
mov
sti
dec
mov
data16
mov
decb
cli
jae
out
dec
loopne
push
mov
imul
pop
outsl
movb
in
roll
insb
iret
jg
mov
int3
data16
cld
bound
rcrl
push
inc
mov
sub
jae
lea
adcl
and
jmp
in
xor
xorb
jge
fldl
adc
or
test
sub
pop
push
cmp
pop
pop
mov
mov
adc
cmp
mov
jmp
sbb
jp
xor
mov
xchg
push
jg
mov
aaa
xchg
fnstsw
inc
or
dec
out
mov
dec
or
mov
dec
xor
mov
arpl
push
insb
mov
or
shrl
loop
popa
ljmp
bnd
xchg
add
push
loopne
inc
lea
fists
adc
gs
push
and
and
ja
jne
xor
xor
adc
cli
imul
and
das
pop
adc
jno
and
test
push
lahf
xchg
test
jae
cltd
xchg
mov
aam
dec
lret
cltd
xor
popa
inc
dec
push
pop
mov
and
fadds
test
adc
sub
mov
scas
lret
out
xchg
add
xchg
fistpll
hlt
adc
xor
imul
lods
fst
mov
xor
mov
and
in
mov
lret
xchg
inc
test
add
adc
pop
or
pop
lahf
lcall
fidivrs
into
mov
outsb
ret
dec
cmp
push
fcomp
lret
push
or
dec
addr16
add
and
int3
rcrb
je
cmp
jmp
jno
ret
cmp
out
jo
fcoms
cltd
ffree
lcall
sbb
repnz
push
loop
outsb
add
sub
jg
add
pop
lods
cltd
mov
or
add
dec
pusha
int3
xchg
mov
out
les
aad
lock
out
test
ljmp
xor
out
nop
cld
push
enter
jne
and
lret
out
imul
jbe
cmp
sbb
pop
sti
inc
fld
out
fildll
xlat
pop
int
movsl
jg
pop
std
arpl
jb
outsb
mov
cmp
pop
and
mov
cmp
subl
popf
notl
mov
and
test
push
dec
mov
pop
push
adc
mov
scas
sub
adc
xchg
nop
cmp
loope
inc
jecxz
jmp
sub
out
cmp
add
add
inc
xor
jae
loopne
test
xchg
cli
pop
dec
adc
push
jmp
jmp
push
rolb
mov
pop
in
subb
cmc
jg
xchg
sbb
add
aam
popf
lods
xchg
fcomps
dec
adc
mov
arpl
lods
hlt
outsl
sbb
dec
int3
mov
cmp
add
pop
or
cmp
js
jecxz
cltd
inc
dec
mov
test
or
fbstp
xchg
bnd
sbb
in
outsb
popl
jp
inc
jb
mov
sbb
jmp
stos
test
mov
in
jge
or
pop
and
xchg
jecxz
fmuls
adcb
mov
adc
fs
push
mov
je
sbb
push
hlt
popf
or
fstpl
or
add
adc
jge
add
shlb
xor
push
mov
push
or
xor
ljmp
inc
jbe
cwtl
mov
cmp
fcoml
push
cmp
sub
cmp
cmp
or
sbb
sub
shlb
gs
mov
int
ljmp
mov
cwtl
std
jb
pop
cmp
inc
test
loope
or
in
in
cmp
lods
mov
loop
test
xchg
js
das
cmpsb
out
mov
or
gs
fadd
xchg
mov
aas
test
lea
sahf
mov
int3
sbb
inc
fbstp
addr16
lods
xorps
cltd
gs
mull
addr16
mov
and
sub
push
push
sti
pop
into
and
sbb
adc
cs
arpl
xor
dec
sbb
cmp
xchg
clc
loopne
sub
imul
mov
pop
sbb
aam
pop
mov
mov
push
push
push
mov
and
mov
sbb
testl
dec
inc
repnz
mov
inc
mov
repz
movsl
jge
test
jno
push
out
int
test
into
sub
outsl
test
lret
mov
xor
mov
repz
xor
insb
add
pop
push
push
cmpl
loope
mov
fcoms
les
push
negb
jge
xlat
xchg
xchg
and
faddl
jnp,pn
nop
gs
mov
shrl
add
jg
mov
and
setge
xor
dec
das
pop
or
scas
push
xlat
push
fs
push
test
cs
mov
ret
fnstcw
xor
or
repnz
cs
inc
lods
ret
xor
mov
mov
repz
jae
push
lret
inc
push
loope
test
jnp
mov
mov
lods
paddq
cmp
movsl
xchg
dec
addb
adc
and
in
mov
pop
movb
sbb
leave
mov
fstl
shrb
pop
std
xchg
inc
inc
imul
and
popl
lods
fildl
xor
dec
lods
mov
repnz
in
lret
dec
lret
movsb
mov
les
xchg
fwait
cmc
pop
sbb
jno
sbb
adc
shr
dec
jg
mov
dec
dec
call
cwtl
dec
lret
sahf
loope
daa
pop
outsl
stos
mov
imul
and
stc
rcl
gs
push
decl
jns,pt
jp
adc
inc
test
outsl
aaa
lods
in
in
jl
lret
aaa
sbb
mov
mov
jno
mov
jmp
pop
rorb
cmpsl
jmp
push
mov
dec
in
clc
cmp
ds
jge
push
push
iret
pushf
bound
sahf
push
inc
loopne
adc
push
ds
inc
push
out
js
les
call
sti
and
aas
or
ret
jno
mov
xchg
push
sbb
push
or
sbb
pop
leave
jge
xor
arpl
xor
xorl
ds
lods
mov
xlat
iret
fnclex
adc
pop
mov
pusha
leave
add
jo
or
mov
ljmp
push
or
cs
sysexit
loopne
cmp
push
push
jno
jl
pop
roll
mov
add
pop
cs
inc
mov
mov
mov
rcl
cmp
pop
test
sahf
mov
push
pop
ret
push
fwait
stos
out
or
xor
xor
adc
cmpsl
jbe
ret
jbe
push
cld
mov
or
imul
fstps
lea
jb
lahf
sbb
fwait
mov
mov
sbb
inc
sbb
sub
popf
movsl
cmp
push
lret
mov
mov
jecxz
nop
push
mov
mov
das
sbbb
mov
xchg
clc
jbe
inc
out
sbb
jg
sub
pop
movsl
push
mov
or
lods
pop
xor
pop
cmc
sub
mov
mov
pop
fcoml
enter
clc
sahf
aam
add
pop
xchg
ret
mov
inc
pusha
push
aas
mov
in
in
push
data16
push
popf
into
jne
push
pop
sub
pop
test
fs
mov
sub
enter
and
push
jp
outsl
sbb
xchg
mov
fdiv
in
jb
shll
cli
lods
aam
or
or
inc
aam
pushl
inc
push
pop
mov
pop
cmc
ljmp
or
rorb
clc
pusha
aaa
xchg
mov
jb
hlt
xor
push
movups
sahf
data16
add
orl
sarl
mov
xorb
iret
idivb
out
adc
mov
cld
jge
sbb
push
or
dec
inc
lds
mov
sbb
mov
xchg
xchg
mov
adc
sub
adc
inc
xchg
mov
push
jo
fistpl
imul
pop
push
mov
mov
lods
inc
and
xchg
sbb
sbb
testl
lret
jg
or
and
aad
fdivrl
js
cs
bound
add
in
into
aaa
adc
xor
add
sub
mov
call
xor
mov
gs
lods
nop
xchg
push
rcll
mov
mov
popa
mov
cld
addr16
lret
xchg
sub
icebp
or
mov
popf
into
cmp
fnstenv
scas
dec
js
call
dec
mov
add
popf
mov
cmp
out
les
push
mov
cld
std
mov
or
std
add
mov
hlt
in
cmc
jnp
adc
shll
mull
insl
sbb
mov
fdivp
push
mov
je
enter
jns
rcll
js
ja
fcom
mov
loope
shll
or
inc
push
pop
jne
mov
mulps
or
lret
push
sub
lea
or
sbb
clc
jbe
outsl
js
out
jae
jl
inc
jae
pop
mov
xor
push
mov
test
cmp
xor
fcom
jns
cli
mov
leave
in
push
inc
inc
jb
jns
idivl
int3
rcrb
mov
xor
sub
outsl
enter
sbb
push
push
mov
test
mov
jbe
and
xor
mov
mov
inc
cltd
gs
aam
es
add
icebp
sbb
push
jno
mov
jle
cmp
pop
cmpsl
mov
fs
or
cltd
add
mov
add
arpl
insb
divb
jo
xchg
push
cmp
pop
mov
sbb
pop
inc
lods
mov
adc
fdivs
rclb
add
sbb
lret
or
cld
push
jmp
jp
xor
movsl
adc
in
in
dec
lea
int3
arpl
mov
int
adc
add
xor
adc
fisttpll
cs
sti
lahf
stc
mov
mov
jbe
sbb
adc
mov
adc
outsb
xor
int3
inc
sbb
and
xchg
fistpl
jmp
lds
les
cltd
dec
stos
scas
inc
or
and
push
dec
xchg
cwtl
fmull
jo
mov
orl
in
dec
adc
std
jbe,pt
or
push
mov
ja
lods
sahf
push
cli
in
jo
popf
jne
adc
fsubl
cmp
inc
loope
xor
push
adc
xchg
addr16
pusha
icebp
ljmp
pop
cmp
in
addr16
mov
out
xchg
xor
sahf
scas
mov
out
popf
jp
sbb
rorb
sub
lods
lret
inc
push
mov
fldt
and
repnz
jns
pop
outsb
adc
and
push
jne
iret
outsb
das
xor
out
std
test
rcrl
mov
push
cmp
dec
fwait
ret
fdivrl
cmpsb
mov
jno
stos
insl
clc
and
push
call
enter
mov
bound
jno
clc
and
xchg
and
sbb
in
std
jmp
repz
add
insl
dec
ret
jle
mov
xchg
lret
sbb
lcall
pop
sbb
dec
fwait
mov
inc
push
mov
mov
pushl
push
xchg
pop
imulb
lsl
aaa
mov
pop
ds
ret
stos
mov
lret
ds
es
insb
pop
mov
repz
sbb
push
push
xlat
push
mov
test
loop
jge
and
repz
adc
or
sub
jl
stc
push
mov
mov
adc
int3
adc
and
mov
lock
das
ja
imul
js
push
cli
ljmp
loope
jp
mov
scas
push
push
movsl
rol
loopne
cltd
add
xchg
leave
out
push
movsb
inc
in
das
jb
lcall
inc
insl
es
adc
bnd
mov
addr16
push
xor
loope
xor
pop
xchg
pop
shrb
fs
mov
into
push
sub
sbb
dec
fldt
jge
jg
in
xchg
lcall
and
jp
fistpll
outsb
lea
sub
inc
divb
outsb
cmp
scas
jmp
mov
push
jbe
mov
iret
cmp
outsl
movsl
add
scas
ficoml
pop
test
mov
mov
lods
pop
aaa
adc
pop
cwtl
xchg
fstl
insb
xchg
and
cmp
lea
stc
jae
xor
xchg
sbb
aad
sbb
add
push
aad
inc
and
repnz
dec
aaa
jae
mov
xchg
out
ds
or
or
fildll
jo
sbb
shlb
or
jns
or
scas
inc
and
std
fmul
lock
cltd
xchg
or
gs
test
das
push
mov
and
pushf
subb
ja
cmp
imul
and
sub
mov
mov
jae
mov
jecxz
push
xchg
cmp
xor
xchg
mov
jmp
loopne
xlat
pop
jle
xchg
cwtl
mulb
add
or
bound
inc
inc
cli
into
and
repz
lods
push
mov
xchg
mov
dec
sbb
addr16
jne
lea
jp
adc
or
mov
ss
ds
out
jne
mov
inc
adc
push
jp
and
jl
mov
sbb
lahf
xor
xchg
add
xchg
mov
out
or
pushf
pop
mov
pop
add
xchg
xchg
sub
subb
add
repz
sar
gs
sbb
xchg
ror
inc
add
call
in
clc
sub
repnz
pop
mov
sar
jle
clc
cmp
and
in
xor
xorb
jns
lahf
aaa
popa
data16
clc
jg
xchg
push
arpl
mov
js
or
rcl
xor
inc
adc
arpl
bound
xchg
and
lds
out
lods
cld
hlt
cmovs
ds
mov
mov
iret
stos
imul
push
insb
and
or
or
loope
and
aaa
or
orl
ret
test
lcall
sub
loop
rorl
shlw
ret
mov
xor
push
jle
jne
jp
in
jo
imulb
jg
pop
cwtl
test
arpl
cmc
mov
test
jne
pop
pop
lret
xchg
fstps
dec
inc
sbb
out
fcmovu
sub
lret
xlat
mov
inc
lods
insb
cmp
jae
sarb
push
push
repz
xlat
out
mov
imul
jg
enter
mov
and
loop
aam
int
std
fwait
insl
push
hlt
xor
pop
pusha
roll
cmpsb
sub
punpckhdq
and
mov
shrb
popf
push
call
leave
cltd
imul
in
gs
mov
jnp
in
jo
dec
push
loop
mov
adc
pop
insl
stos
daa
push
ja
dec
xor
cmpb
inc
js
inc
shrb
sbb
testb
dec
xor
movsl
rorb
fmuls
enter
ret
stos
and
das
lods
sub
out
mov
pop
jno
jge
mov
xor
out
test
sbb
lahf
mov
sbb
xchg
outsb
xchg
add
mov
xor
je
dec
or
ret
mov
loop
adc
mov
or
sbb
adc
stos
push
pushf
inc
push
mov
xchg
xchg
bound
repz
pop
test
xor
push
adc
cltd
test
mov
sub
push
out
inc
pop
fsubl
daa
loopne
subb
test
pop
mov
sbb
outsb
cmc
and
jne
adc
lret
in
loop
cmp
and
shrb
sub
cwtl
ds
sub
jno
out
mov
adc
mov
divl
lods
test
xchg
sub
stos
mov
xor
lret
adc
cli
xor
shll
daa
rcrb
addr16
sbb
nop
add
sbb
jns
test
mov
xchg
inc
pop
scas
xchg
lods
mov
cmp
stc
ss
jae
imul
out
dec
imul
jbe
add
xor
lret
cmp
add
or
jb
ja
iret
jo
sub
test
ds
imul
xchg
inc
imul
mov
jmp
imul
jmp
imul
fs
dec
ret
jbe
pop
jo
sub
push
les
lret
mov
imul
dec
outsb
push
ja
rorb
mov
push
pop
loopne
test
loope
jl
inc
dec
movsb
push
mov
outsl
rcl
fisubs
mov
mov
xchg
pushf
insl
cld
rclb
in
sbb
cmpsb
or
out
jl
scas
repnz
jns
push
repz
xlat
xchg
icebp
dec
dec
cmp
orl
mul
push
enter
outsl
popa
jecxz
stos
jge
test
arpl
xchg
rcrb
or
in
jecxz
jmp
fists
mov
jb
popf
lods
int
mov
cli
fcoms
mov
dec
pop
pushf
test
and
adc
repnz
lahf
dec
add
mov
mov
lods
jg
mov
out
xchg
xchg
pop
iret
rcl
dec
add
mov
xbegin
xchg
adc
jno
clc
add
out
push
jae
das
cwtl
repnz
and
inc
roll
pop
mov
xchg
jns
in
cmp
andl
push
jbe
nop
stos
push
dec
mov
xor
mov
push
mov
arpl
mov
in
mov
cmp
mov
scas
fstps
fistpl
xchg
in
loope
dec
pop
call
inc
lret
dec
and
mov
insl
mov
pop
cmp
pop
scas
andl
mov
dec
lahf
leave
mov
push
arpl
test
test
ror
xor
loop
ffreep
sbb
adc
js
leave
inc
mov
push
dec
and
mov
push
loopne
rcrb
and
iret
lea
adc
mov
adc
leave
mov
adc
jmp
test
or
pop
int
outsb
imul
rcr
dec
stos
stos
push
leave
sbb
xor
mov
inc
lret
jmp
jae
test
push
pop
imul
cmp
fucomi
test
pop
rcrb
or
imul
push
or
int
adc
data16
mov
dec
mov
mov
bound
push
inc
test
jle
push
push
jmp
mov
jle
ret
xchg
push
les
xor
cmpsb
rcrb
fildll
icebp
push
cmp
add
xlat
xor
es
jae
int
sbbl
sbb
xor
pop
dec
js
in
jbe
fists
sub
dec
mov
mov
push
jbe
jle
sbbb
andl
ljmp
mov
xchg
jbe
in
in
inc
outsl
lahf
push
and
or
out
in
aad
cmp
arpl
iret
push
xlat
lret
roll
ss
bound
les
mov
mov
fdivs
aas
scas
sbb
mov
scas
xchg
push
or
and
xor
inc
aad
sbb
pop
cmpsl
pop
clc
outsl
popa
pop
or
inc
lods
mov
int
repz
rol
pop
mov
jmp
insl
jl
loopne
lcall
dec
mov
or
or
pop
enter
bound
jo
adc
int
and
sbb
mov
and
repnz
and
lret
dec
xchg
adc
mov
pushf
xchg
dec
adc
ret
pusha
sub
pushf
mov
sub
mov
shlb
adc
in
jmp
sbb
mov
insb
push
pop
adc
jno
sbb
mov
push
int3
jge
or
jnp
sarl
daa
ret
or
push
push
leave
dec
aas
push
movl
push
iret
loop
add
push
mov
mov
aaa
mov
sbb
mov
pop
fcompl
jp
xor
in
mov
movsl
loopne
dec
gs
ljmp
sbb
das
fdivrs
adc
lret
bound
pop
ret
pushf
dec
jle
add
stos
push
pop
loopne
jge
xchg
mov
movb
xchg
outsl
in
mov
xchg
sub
stos
jmp
sub
adc
and
inc
aam
add
roll
pusha
popf
sub
jmp
sub
inc
push
rclb
dec
mov
insb
lret
aam
or
and
ss
fstl
sub
dec
sbb
fwait
pop
in
push
neg
movsb
mov
and
xchg
or
mov
in
mov
fwait
rcr
ljmp
pop
in
sbb
xchg
mov
test
sub
lret
xor
xchg
jmp
jno
mov
aad
xchg
ds
movsl
push
faddl
and
xchg
int
enter
int
jbe
mov
xor
fldln2
incb
hlt
lcall
stc
out
imul
mov
daa
rcrl
sbb
testb
sub
sub
data16
cmp
xchg
les
mov
and
adc
outsb
xchg
dec
in
pop
pusha
stos
xchg
sahf
fsts
cwtl
test
or
push
xchg
test
lock
push
add
test
in
andb
test
insl
xchg
mov
xlat
mov
dec
les
in
mov
mov
js
popf
mov
pop
push
mov
push
adc
mov
add
xlat
int
ret
xor
sub
gs
lods
test
imul
jae
lds
arpl
or
mov
outsl
out
sbb
ret
push
mov
mov
icebp
fisttps
pop
pop
push
data16
lds
out
hlt
or
mov
xor
popf
loop
loope
inc
popf
fdivp
add
cld
push
les
sub
or
aaa
rcrl
jmp
test
xor
sbb
cmp
lea
cmp
int3
les
jb
fnstcw
sarl
js
subb
dec
insb
repnz
std
addr16
xchg
xor
mov
dec
lock
stos
fcoms
repz
mov
std
pop
cmc
stc
xor
sbb
mov
mov
jo
inc
push
push
dec
xor
sbb
icebp
or
xchg
fiadds
pop
dec
and
cmpb
cmpsb
inc
repnz
xor
int
ja
sbb
and
push
leave
rolb
scas
sbb
imul
mov
cmp
mov
xor
sbb
popf
lock
movb
out
mov
ds
in
out
scas
pusha
loopne
daa
clc
cmpsl
push
shl
int3
cmpsb
adc
sub
push
pusha
sarl
mov
xor
enter
jg
jnp
xchg
aaa
popa
push
cmp
pop
imul
or
inc
cltd
push
test
sub
dec
mov
adc
test
imul
and
push
out
test
jge
xchg
pop
and
or
inc
js
outsb
pop
sbb
push
pop
or
push
das
jno
lahf
pop
push
or
repz
fcoml
lods
insl
pop
and
out
lret
inc
mov
dec
mov
jb
and
rclb
dec
std
inc
jp
inc
mov
push
aaa
inc
xor
sbb
dec
inc
cltd
test
test
adc
into
pop
lods
push
dec
add
gs
test
sbb
sbb
mov
int
sub
mov
aad
xchg
mov
stos
clc
les
adc
mov
cmpsb
add
das
fwait
xor
sbb
es
imul
jle
mov
popa
adc
mov
btc
ja
jb
mov
push
les
call
nop
arpl
jo
add
pop
mov
xchg
xchg
inc
into
push
mov
jle
jle
push
sahf
fbstp
jae
dec
mov
or
push
adc
outsl
dec
or
aas
out
shl
sti
push
jg
mov
mov
pop
pop
inc
xchg
arpl
das
je
and
scas
movsb
lods
and
test
mov
adc
outsb
ret
sub
jge
loope
jl
jg
lods
stos
lret
je
pop
gs
jg
or
sahf
mov
fwait
aas
mov
pop
ret
dec
insb
inc
dec
je
inc
fidivl
pop
pop
daa
pop
jg
sub
push
push
sub
adc
add
add
mov
fisttpl
sar
add
push
cmp
std
and
sub
push
mov
imul
and
push
std
pop
in
sahf
lock
scas
test
and
adc
push
sub
leave
not
shrl
imul
mov
xor
adc
je
sub
cmp
ja
xchg
mov
jb
push
and
mov
adc
and
fnsave
mov
les
iret
idivl
in
std
sahf
sub
sbb
lahf
push
in
mov
mov
call
jecxz
ret
ret
cli
movsl
jle
in
leave
lcall
rolb
push
mov
push
outsb
jne
cmp
aas
js
les
push
ret
gs
dec
lods
xor
shl
loopne
orl
mov
imul
jmp
shlb
stos
xchg
rcr
pop
cmp
mov
cli
fcompl
dec
and
xor
mov
mov
cltd
push
push
test
es
dec
jbe
les
pop
icebp
jbe
int
pushf
lret
movsb
nop
rclb
jns
cmpsl
xor
add
xchg
push
nop
mov
mov
fisubrl
lcall
ja
scas
sti
test
les
hlt
xchg
mov
sbb
xor
dec
xor
push
adc
jne
or
pop
pop
pop
xlat
ss
dec
xlat
sti
outsl
jmp
idivl
pop
jge
fildl
aad
movzwl
in
sbb
jle
xor
leave
push
outsb
sub
dec
inc
jp
jne
mov
scas
mov
loop
cmpsl
sbb
xor
stos
rorl
sbb
rclb
dec
adc
add
mov
inc
pop
sub
outsl
pop
cmp
mov
or
out
jo
mov
popa
mov
and
jo
fucomp
bound
inc
das
push
mov
inc
push
xor
addr16
pushf
cmp
rolb
popf
xchg
loop
fs
stos
test
cmp
hlt
test
or
iret
xchg
mov
or
cmp
addr16
pushf
cmc
inc
and
pop
pop
xchg
xor
ret
repz
mov
jne
xchg
clc
and
jmp
call
xchg
hlt
notl
cs
sbb
and
pop
stos
scas
aam
cwtl
rcrb
rolb
adc
xchg
mov
pop
lods
bound
loope
mov
xchg
mov
adc
jmp
fildll
outsb
or
imulb
les
sub
daa
add
jno
jecxz
or
push
pop
popf
push
adc
push
aad
mov
pop
mov
or
lods
pop
insl
pop
push
je
inc
daa
adc
mov
sbb
mov
movsl
pop
push
ret
mov
mov
pusha
cmp
xor
imul
add
adc
add
orl
dec
imul
ret
loopne
aad
inc
push
mov
dec
jge
pop
add
clc
arpl
lods
pop
xor
loope
outsl
in
jno
std
mov
mov
data16
jg
add
fwait
pushf
test
jnp
cli
sub
inc
arpl
inc
ljmp
cmc
xchg
mov
mov
sbb
fdivl
pop
dec
in
xor
cmpsb
mov
mov
push
test
mov
push
incb
movsb
pop
push
jbe
push
repnz
dec
and
xchg
lods
xlat
push
mov
mov
cmp
rcrl
mov
jo
test
add
xchg
push
mov
jmp
fldenv
movsb
fs
pushf
sbb
lds
xor
shlb
lods
enter
subb
outsb
and
mov
dec
roll
lret
lods
mov
je
test
mov
sub
insl
pop
xchg
fidivrs
shll
out
stos
repz
push
push
jne
nop
and
dec
cmp
pusha
xor
ret
daa
dec
mov
push
ret
push
imul
sub
jp
loope
icebp
out
fcompl
xchg
jne
dec
add
jmp
ss
call
push
imul
bsr
stos
add
rcrb
pop
mov
or
xor
popf
push
lods
shll
and
test
outsl
lods
aad
and
jae
push
pop
xchg
lock
or
lods
arpl
das
or
call
inc
push
push
cwtl
cmp
xor
cltd
loopne
xlat
push
inc
insl
sti
int
mov
outsb
iret
test
adc
addl
aam
es
push
addr16
lock
pfrsqit1
jnp
inc
scas
loopne
pop
imul
call
sub
sbb
xchg
punpcklwd
pop
pop
adc
or
jp
jmp
aas
movb
inc
push
aas
and
mov
out
push
dec
push
fsubrl
cmp
in
sahf
test
lret
pop
fstl
or
cmpsl
jne
sbb
push
outsb
xor
or
push
sahf
xor
imul
daa
mov
inc
pop
scas
call
cli
push
testl
enter
subb
subb
add
xor
shlb
jl,pt
cmpsb
push
pusha
inc
loope
jecxz
sbb
xchg
cmp
xchg
mull
jo
push
andb
push
inc
xor
and
test
pop
daa
or
pop
dec
pop
or
ret
adc
pushf
inc
mov
movb
and
imul
sub
fsubrs
movsl
iret
cmp
test
je
pushf
nop
mov
in
scas
sbb
imul
add
popa
fs
adc
hlt
dec
fnsave
lods
scas
xchg
dec
in
xor
fsubl
int
mov
and
cli
filds
pushf
leave
loope
repnz
push
xchg
sarb
xlat
xchg
cmp
jns
movsb
jnp
add
cmp
cmp
ret
cmc
mov
lods
inc
push
mov
push
ss
mov
pop
fidivs
jle
arpl
dec
mov
in
add
adc
outsl
icebp
cli
and
fiaddl
jno
stos
repnz
xchg
shl
in
sbb
mov
mov
mov
mov
fmulp
data16
jnp
jle
dec
mov
in
mov
sub
inc
enter
sbb
out
in
push
dec
addr16
cmpsl
mov
push
test
xchg
in
mov
stos
and
aaa
xchg
in
sahf
jne
add
bound
jns
pop
jp
sbb
sub
cmp
pop
lret
scas
scas
sub
ja
call
xchg
push
push
hlt
rcrb
divb
inc
jecxz
sub
hlt
and
xchg
out
fwait
dec
and
insl
xchg
scas
inc
xor
mov
inc
add
pop
mov
mov
in
rcl
insl
push
pusha
cmpsl
inc
sub
push
call
xchg
test
loopne
orl
sarl
xor
mov
adc
out
mov
pushf
pop
jecxz
popa
push
xchg
pop
sbb
les
push
movq
iret
mov
add
fsubrs
lret
fsubrs
mov
sub
movb
aad
adc
cwtl
cmc
xchg
imul
nop
ja
stc
adc
pushf
nop
mov
xchg
sub
mov
dec
or
fstl
inc
jne
outsb
inc
aas
fwait
repnz
out
inc
test
and
mov
lock
and
lods
cmpsb
test
jns
push
mov
inc
lea
fbstp
xchg
cmpsb
dec
dec
pop
xchg
xor
push
std
xchg
or
movsb
into
push
in
jg
fstpl
stos
popa
xchg
jne
inc
and
pop
movsl
mov
sbb
sbb
cmp
sahf
inc
mov
loopne
push
filds
mov
nop
xor
das
mov
je
insl
int3
iret
shll
mov
scas
and
fldcw
add
mov
pop
les
push
xchg
dec
cltd
xor
add
test
jl
scas
pop
bnd
mov
jmp
fisubrs
mov
sub
aad
test
ds
cmpsb
push
jb
push
pop
dec
cmp
jno
fcompl
mov
and
add
dec
and
jne
xchg
pop
add
clc
sbb
mov
add
movsl
mov
sbb
enter
dec
imul
out
mov
ss
add
or
cmp
cmpsb
lahf
rcll
fsubr
stc
xchg
sar
cld
lret
imul
sub
pushw
add
arpl
seta
pop
pop
rcll
mov
stos
mov
pushf
cmc
xchg
push
push
sub
fistpl
dec
test
mov
or
shl
lcall
imul
daa
clc
cld
lcall
iret
jp
jo
mov
pop
in
push
xor
mov
test
or
mov
or
mov
dec
call
dec
fdivl
scas
pop
and
sbb
push
sbb
push
mov
aas
mov
mov
mov
xor
cmp
faddl
stos
insb
add
cmp
mov
jno
lret
xor
ret
lods
mov
inc
and
cmp
xor
mov
rcrb
repz
jbe
cmc
inc
dec
xor
pop
movsl
mov
cli
lea
insl
push
cmp
mov
jb
pop
mov
sbb
jp
mov
push
sub
pushf
scas
add
or
fbld
lea
pop
cld
jo
sub
mov
lods
xchg
inc
aad
in
xchg
mov
adc
call
inc
shrb
clc
inc
daa
pop
or
stos
push
outsb
cli
cmp
ss
sub
mov
cmp
or
pop
repz
subl
in
jg
dec
and
pop
cmpsl
inc
addr16
pop
repz
xor
daa
in
inc
mov
and
and
push
jge
sbb
cld
cmp
pop
pop
imul
push
shll
loop
idivb
mov
outsb
xor
xor
int
lahf
inc
pop
jns
jne
sbb
mov
stos
or
rclb
xor
faddl
ret
fnsave
je
aas
mov
adc
lods
test
push
ljmp
cmpsb
loop
insb
pop
mov
scas
lret
jmp
push
lret
cmc
stos
xchg
cltd
daa
adc
cmp
mov
frstor
enter
and
fcmovbe
in
aam
fisttpl
dec
fs
inc
movsl
xchg
lcall
cs
pop
lea
mov
sub
std
pop
inc
rclb
test
add
mov
rcrl
les
stc
jmp
lds
test
xchg
rcrb
popa
push
outsb
icebp
in
lds
movsl
add
xchg
lds
or
add
test
mov
cmp
outsl
fs
lret
scas
or
sub
mov
adc
pop
cmpsb
sti
test
mov
cld
and
pop
pop
mov
push
mov
and
in
mov
addl
shrl
jae
lock
aaa
icebp
cltd
int
push
sub
repnz
out
cwtl
xchg
mov
lds
sarl
xchg
cmp
jecxz
jnp
mov
popw
je
push
push
inc
add
sarl
sub
dec
cmp
mov
fidivrl
shlb
inc
mov
inc
xchg
mov
and
or
cmp
or
test
call
xlat
adc
lds
les
fldenv
movsl
adc
cld
cmp
xor
inc
adc
dec
pop
rcrb
sahf
and
jns
popa
imul
outsl
cltd
or
out
lock
scas
and
push
mov
mov
inc
mov
inc
pusha
mov
inc
push
mov
jns
add
fdivs
inc
rorb
stos
scas
pop
stc
dec
mov
add
xchg
sbb
clc
and
jmp
inc
out
xchg
push
gs
test
jno
pop
inc
adc
ss
sub
gs
mov
out
push
lret
stc
movb
fnsave
xchg
sbb
shrl
movb
cmpsb
mov
pop
shll
movsb
cmc
or
mov
jg
cmp
xlat
or
jo
push
sbb
pop
dec
dec
outsl
mov
mov
in
sub
push
sbb
outsl
push
ficoml
addl
pop
add
pop
and
and
lret
in
xor
movsb
add
lcall
icebp
xchg
clc
sbb
push
xchg
xor
movsl
add
cmp
sarl
or
aaa
fwait
insb
adc
sbb
test
lods
in
movsl
fldcw
mov
loop
xchg
or
leave
mov
jmp
rcrb
pushf
lret
sbb
sbb
mov
lock
adc
int
fldl
push
and
loopne
flds
sbb
and
xlat
loop
inc
xor
push
mov
xor
inc
xor
add
and
into
outsl
sarb
cmp
fadds
sbb
adcl
jb
push
fildl
jno
sbbl
or
fldl
xchg
lret
or
adc
xlat
jnp
and
shl
mov
hlt
pushl
push
or
std
mov
xor
or
das
mov
mov
sub
dec
mov
mov
pop
pop
jo
imul
repz
rcl
repnz
push
jmp
jae
mov
inc
add
pop
out
add
add
push
mov
jl
movsl
and
add
int3
sbb
push
out
pop
sbbb
mov
pop
outsl
ljmp
xorl
xchg
jecxz
pop
inc
mov
test
jb
add
dec
jne
stos
leave
mov
mov
mov
cmp
xchg
mov
xchg
mov
icebp
xchg
in
stc
pop
mov
fmul
push
test
or
mov
sti
out
inc
sbb
push
mov
movsb
dec
jb
sub
data16
add
cmp
pop
fwait
xchg
in
xchg
mov
cmpsl
sahf
outsl
mov
dec
push
fs
jge
sub
cli
shll
outsl
pop
stc
fsubs
out
jne
add
push
add
dec
stos
adcb
jecxz
cmp
fsubrs
push
inc
es
dec
ljmp
sub
lret
in
mov
shrl
jo
das
and
lock
mov
mov
lahf
or
pop
stos
es
xchg
mov
les
cmp
icebp
cwtl
call
mov
out
xchg
pop
lods
std
clc
push
inc
and
add
add
insb
inc
mov
popf
ss
mov
xor
in
out
mov
inc
hlt
movsb
mov
sbb
in
inc
les
cmp
inc
aad
ret
clc
cltd
fdivr
int3
and
dec
repz
mov
push
mov
movsl
or
mov
cwtl
sub
push
out
lock
lahf
dec
shlb
mov
sbb
sti
xor
ss
sub
lret
sub
xchg
push
lret
imul
rorl
repz
inc
out
aad
and
movsl
fisubl
mov
cmp
mov
in
mov
cwtl
mov
mov
insb
mov
xchg
cmp
stos
and
xchg
add
dec
lods
or
xchg
test
test
cmc
xchg
sti
push
test
dec
fsub
sub
out
jg
jo
xor
push
xchg
cltd
inc
fildl
cmc
dec
add
aaa
xchg
mov
push
pop
push
jbe
aaa
aam
pop
test
xor
adc
push
mov
xor
push
sub
cli
sbb
xor
sub
pop
cmpsl
cld
mov
pop
out
add
jp
insb
or
or
cld
subb
lret
push
imul
push
lea
movsb
cmp
cmc
inc
xchg
orb
mov
outsb
mov
loopne
push
push
frstor
xor
inc
outsb
push
outsb
icebp
pop
mov
mov
sub
fcomp
cmp
mov
xorb
pop
in
cmpb
test
ljmp
stc
jns
add
in
cmp
jo,pt
or
and
jne
hlt
movsb
jmp
aad
lret
fsubrs
dec
dec
adc
stc
jns
pop
js
sub
inc
xor
mov
jne
pop
jae
cmp
aaa
pop
cltd
mov
cmc
push
repz
scas
aad
mov
subb
es
xchg
hlt
mov
jl
imul
add
stos
mov
inc
cmp
pop
loop
pop
idiv
es
in
arpl
sbb
lods
push
cld
movsl
cs
pop
dec
cli
and
and
pop
jne
andb
xor
in
sub
cmpsb
sbbl
mov
inc
js
fildll
mov
and
adc
dec
xchg
movsb
rcrl
mov
cmp
inc
cmp
adc
xchg
push
mov
fimull
mov
add
jo
ret
push
rclb
dec
das
xor
and
mov
push
push
sbb
xchg
mov
sarl
scas
jp
shlb
add
adc
js
add
pop
adc
pop
aad
cmp
decl
dec
cli
xor
das
fcmovbe
jno
fcompl
lret
or
inc
fwait
out
mov
clc
inc
imulb
mov
push
sti
mov
sbb
rdpmc
mov
rorb
mov
xchg
jae
addr16
inc
xlat
enter
inc
andb
arpl
popa
cmp
cmp
xchg
jnp
add
xor
push
jl
hlt
pop
xchg
cmp
loopne
push
push
mov
jl
jns
and
cmp
or
cmp
sub
fmull
pop
pop
adc
adcb
sar
js
pop
ss
xor
fmuls
sahf
sbb
pop
and
lods
es
insb
adc
add
gs
popl
in
ret
xchg
pop
add
sbb
imul
daa
test
or
stos
aad
xchg
hlt
or
mov
cltd
pop
sarb
pop
push
push
mov
leave
or
push
or
ds
sbb
sbb
adc
xor
inc
stos
adcl
jns
je
and
insb
cld
and
enter
sub
push
adc
adc
push
out
push
in
xchg
add
ja
int
scas
mov
push
jge
dec
mov
mov
std
add
inc
aam
adc
add
adc
popa
adc
ja
xor
cmp
and
out
jl
jge
jecxz
imul
dec
scas
lds
jge
jle
mov
lcall
rep
aam
mov
mov
mov
sarl
arpl
push
lock
fisubrs
fisubrl
sub
test
mov
insl
loopne
inc
aas
cmc
hlt
lret
rclb
mov
xchg
fwait
mov
test
jno
ss
imul
mov
push
shrb
mov
out
popf
jge
mov
pop
adc
scas
mov
jns
jae
pop
insl
inc
push
ljmp
mov
pop
cmp
test
fstpl
orl
into
sub
lahf
shl
rorb
pop
aad
ds
cmpsb
int
leave
push
jp
jnp
or
cmc
dec
leave
and
pop
cmp
cmc
repz
lret
movsb
stc
push
mov
gs
enter
jge
test
test
pop
repnz
test
inc
adc
adc
int
sub
movsl
xchg
imul
add
mov
outsb
pop
out
aam
xchg
mov
sbb
xchg
loopne
daa
inc
sub
sti
in
ret
push
xchg
stos
sbb
cmp
das
imulb
push
mov
add
pop
or
mov
cltd
popf
xlat
mov
out
je
xchg
dec
repnz
repnz
mov
in
dec
mov
xor
pop
pop
leave
jp
sbb
xchg
mov
lahf
push
cltd
or
and
int3
xchg
jnp
sbb
inc
popf
fsts
adc
fdivs
loop
js
cmp
xlat
sub
xor
xor
scas
add
pop
mov
sbb
mov
negb
jbe
lahf
lods
jns
pop
push
inc
jbe
sub
jnp
jecxz
sahf
add
lock
sbb
jp
lahf
add
nop
insl
lahf
pop
or
or
movsb
mov
adc
inc
gs
cli
nop
jl
pop
cmpsb
xchg
jle
dec
enter
jmp
arpl
push
sub
ret
add
aam
cli
out
arpl
xchg
cmp
lcall
icebp
aam
popa
cwtl
mov
mov
cmpsl
mov
mov
push
or
jmp
scas
pop
cmp
shll
shrb
mov
jge
push
jge
cmpl
push
cltd
out
xor
or
jb
test
iret
sbb
mov
mov
dec
fstl
clc
les
and
jb
jb
dec
rcl
je
xor
mov
adc
add
jne
insb
pop
ret
je
int3
cmp
mov
loop
cmp
pop
jmp
or
movsl
dec
stos
inc
mov
sub
add
add
sub
loopne
sbb
dec
xchg
es
and
push
in
out
ret
loope
inc
and
aas
or
cmp
add
mov
cmc
fcompl
arpl
sub
adc
and
inc
out
push
int
aas
push
loope
insb
setp
or
add
push
mov
push
aaa
test
cmp
imul
pop
inc
jle
push
aas
fisttps
mov
or
and
aad
lcall
cltd
cmpsl
js
push
in
lret
jecxz
std
add
sub
ret
cmp
dec
add
fisubrs
mov
in
mov
cmc
enter
mov
sbb
jmp
cmp
sub
push
ss
lret
mov
stc
sub
sbb
stos
jl
push
int
ret
popf
out
cmpsb
or
fwait
sub
pushf
js
in
movsb
xor
mov
push
jne
and
testb
in
push
ss
in
pusha
rorb
push
sbb
mov
sbb
jg
addl
adc
mov
out
sarl
and
jmp
jns
add
add
jmp
cld
sbb
cmp
loope
push
or
pop
add
xchg
rorb
adc
aam
xacquire
xor
fiadds
or
jge
mov
div
push
cmp
sub
lea
sub
mov
inc
add
xchg
jo
fcomip
mov
addl
fcmovnbe
inc
inc
imul
sub
mov
push
sbb
cltd
and
xchg
call
sbb
cmp
enter
jne
cmpsl
mov
hlt
sbb
dec
ja
add
push
and
sbb
insb
inc
ret
push
mov
gs
pop
sbb
pop
scas
add
push
and
xchg
xor
xchg
xchg
ficoms
jle
les
subl
xor
pop
and
push
mov
dec
pop
lret
xor
inc
in
test
mov
mov
push
adc
in
mov
and
cmp
mov
pop
jmp
adc
stos
jbe
xor
sbb
mov
push
add
leave
mov
cltd
in
cmp
fdivrl
gs
mov
rolb
pop
repnz
cwtl
outsb
dec
sti
fisttps
mov
push
push
gs
shrl
bound
ss
call
or
icebp
outsl
out
xor
mov
push
add
repz
or
jbe
pop
enter
in
sbb
fidivrl
lods
mov
push
ret
jmp
xchg
lcall
test
mov
cwtl
mov
scas
push
jl
inc
loope
in
push
jno
leave
jmp
js
inc
adc
and
dec
and
mov
cli
inc
out
pop
mov
aad
push
lea
out
leave
lods
sbbb
addr16
mov
loope
das
xchg
cmp
test
jge
mov
das
mov
xor
push
dec
bound
push
loop
pop
or
pop
mov
je
xchg
or
shl
sbb
xor
lds
cmpb
xchg
lds
mov
movsl
shrl
fisubs
jmp
dec
mov
out
mov
sbb
and
mov
lods
xor
mov
inc
mov
fistps
mov
push
sbb
fisubrl
lret
mov
inc
mov
mov
dec
jge
mov
pop
jbe
jle
imul
xchg
inc
push
and
xor
test
cmp
push
pop
outsb
data16
into
or
sarl
iret
push
push
jecxz
or
pop
mov
cmp
pop
ds
xchg
mov
pusha
repz
push
test
adc
add
jae
shll
repnz
jbe
sub
pop
xchg
shrl
or
aaa
cs
mov
jmp
inc
pop
mov
ljmp
lahf
push
inc
nop
addr16
mov
push
insl
jno
cmp
scas
ret
push
cmp
pextrw
push
popf
push
into
xchg
cld
rolb
rcrb
popf
inc
cmpsb
mov
ffree
lcall
push
dec
clc
pop
pop
add
or
xchg
push
sub
mov
sub
pusha
bound
lods
or
jnp
ss
cmpb
leave
push
and
mov
ds
subb
lods
scas
inc
cmpl
into
dec
pop
outsb
mov
push
ss
test
mov
mov
imul
imul
inc
aad
mov
je
imul
test
mov
shl
int
jnp
inc
stos
xchg
aam
push
cli
mov
lds
cmp
cmp
cld
pop
sbb
mov
movb
ficoml
and
sbb
sbb
xchg
add
or
pushf
lds
jmp
pop
xchg
inc
lods
mov
dec
fs
add
out
imul
jae
push
inc
or
inc
xor
data16
sbb
scas
sub
in
lds
popa
gs
and
mov
inc
repnz
sti
pop
fidivl
add
pushf
inc
xchg
inc
dec
stos
sub
pop
and
jg
mov
mov
test
pop
divb
jmp
jae
jae
xchg
xchg
shr
outsl
or
xor
pop
mov
mov
pushf
cmc
xchg
xor
in
and
cwtl
and
xchg
rcrl
inc
sbb
sti
repz
xchg
in
iret
addr16
and
xor
loopne
xchg
xchg
sub
xorb
sar
sbb
jle
loopne
test
mov
jmpw
pop
fsubrs
stc
clc
mov
lcall
adc
inc
and
ret
in
int3
ret
and
jo
lea
std
test
insl
mov
lods
mov
bound
lds
arpl
shlb
in
test
cmp
xchg
xchg
hlt
scas
outsl
aad
pop
dec
cltd
mov
loope
mov
lea
adc
xchg
lahf
rorb
xchg
mov
sbb
lea
gs
bound
lcall
jns
sahf
ds
js
jb
cmp
adc
lret
sbb
adc
popf
push
pop
data16
adc
rcr
lods
xchg
into
shll
pop
fmul
xor
movsl
pop
cmpsb
push
jg
and
pop
sub
xchg
mov
mov
push
xchg
cmp
sub
inc
inc
test
adc
test
xor
jno
in
inc
aas
xchg
inc
jg
popf
xchg
insb
out
cmp
fistl
insl
outsb
xor
mov
dec
adc
lock
cmp
enter
dec
mov
lret
cmp
fistpl
adc
mov
cld
sbb
cmc
iret
fwait
adc
shll
sbb
lcall
lret
cmp
sar
adc
sub
fwait
scas
push
push
hlt
mov
sti
and
mov
pop
int3
and
pushf
stos
jmp
pop
jl
shl
mov
movsb
aad
jle
or
outsb
mov
and
dec
add
loope
jns
push
fucomp
dec
loopne
loope
ljmp
pushf
addb
sub
xchg
mov
out
jg
inc
lret
xchg
dec
test
cmp
mov
mov
sub
sub
call
push
insl
jb
mov
sub
ret
inc
mov
shlb
inc
gs
add
clc
shrb
mov
mov
and
xor
bound
sub
addl
ret
mov
addr16
fs
mov
data16
lea
cltd
stos
cmpl
cwtl
rcll
sub
ja
scas
xchg
cs
aas
pop
pop
dec
adc
leave
push
pusha
insl
cmp
in
jmp
aaa
ja
xchg
lcall
arpl
mov
pcmpeqd
xchg
mov
jp
inc
insb
clc
ljmp
cmp
cmp
push
dec
push
mov
enter
insl
insl
int
jp
mov
mov
mov
fstps
cli
divl
fcmovb
js
xor
mov
imul
iret
fists
ljmp
pusha
aas
bound
mov
das
or
lret
jb
out
imull
popf
aaa
pop
fdivs
mov
sub
mov
dec
int
xor
jno
fildl
cmp
inc
iret
or
sub
arpl
cmp
push
and
in
js
iret
insl
xchg
pop
je
icebp
jb
gs
test
cltd
sub
adc
xor
and
ss
push
int3
mov
dec
xchg
hlt
dec
adc
jl
fs
loope
aas
adc
push
pusha
mov
jb
loope
jmp
ljmp
mov
pop
push
add
sub
movsb
mov
jb
enter
lods
pop
imulb
jns
push
cmpsb
inc
stos
jb
sti
rolb
lahf
push
or
aam
jg
bound
xchg
lret
fstpl
into
mov
inc
xor
mov
lahf
hlt
sbb
pop
cmp
sbb
or
ret
mov
daa
inc
xchg
out
ret
or
cmp
jecxz
std
xchg
mov
aad
ljmp
mov
int3
rcr
mov
das
adc
jo
in
ljmp
jbe
mov
mov
ds
sub
inc
xchg
rorl
out
ret
sbb
ret
jp
sub
mov
cmp
pusha
stc
mov
pop
push
mov
movb
pop
lea
mov
leave
and
bound
mov
add
push
or
js
int3
cmp
leave
insl
pop
jmp
lds
add
pop
inc
adc
or
sub
sbb
push
adc
jnp
addr16
clc
subl
loop
dec
push
rcrb
and
in
cmp
paddsb
inc
jo
dec
pop
jb
iret
sub
orl
enter
addr16
jns
or
cltd
pushf
loop
das
and
int
pop
lret
pop
fcompl
jecxz
and
dec
sub
mov
dec
push
mov
mov
subb
mov
add
mov
js
aam
mov
movb
sbb
xor
add
es
pop
xchg
ds
sahf
inc
adc
cli
adc
dec
insl
sahf
add
cwtl
fldt
inc
ljmp
fbld
or
and
xchg
lock
mov
imul
loop
mov
pop
cmp
inc
xchg
imul
dec
or
shrl
aad
mov
out
sti
data16
and
mov
xchg
pushf
cmp
mov
cmp
inc
call
cmp
pop
lds
push
push
sahf
cmpb
hlt
aam
pop
lcall
jne
jb
sbb
jns
inc
lcall
mov
xlat
push
std
cmc
dec
dec
outsb
push
bound
fsts
addr16
mov
loopne
sub
test
je
xor
push
dec
mov
in
jnp
negb
push
dec
popa
sub
xchg
insb
cmpsb
data16
pop
movl
adc
xchg
pop
and
sbb
mov
add
xor
cltd
cmp
jbe
jns
test
shrd
hlt
mov
rorl
repnz
sub
cwtl
loopne
xor
and
loopne
or
mov
dec
mov
dec
sub
xor
cmp
sub
sbb
adc
fildll
jbe
push
test
mov
pop
sahf
popfw
je
aaa
out
and
xchg
hlt
xchg
mov
adc
out
daa
bound
adc
fldl
mov
out
xor
inc
scas
sub
mov
xchg
and
inc
mov
scas
push
shl
int
pop
lahf
es
xchg
lahf
push
xlat
jbe
push
jmp
test
xchg
mov
dec
xor
add
in
pop
rcll
mov
push
mov
sarb
sbb
dec
mov
shll
jp,pn
adc
addl
sub
outsb
shl
aad
mov
add
add
xor
mov
ret
scas
roll
icebp
xchg
inc
mov
or
mov
lcall
add
dec
inc
jle
push
daa
insb
fcmovnbe
sub
jecxz
pushf
jo
insl
and
outsl
stc
jmp
incb
push
xor
mov
fnstenv
in
cltd
stc
fimull
jne
mov
jns
xchg
call
mov
mov
rolb
jp
movsl
test
aas
pop
punpcklwd
lock
loop
mov
jnp
sti
xor
outsl
mov
flds
inc
jno
sahf
xlat
inc
scas
fcomps
add
mov
inc
scas
mov
popf
lock
sbb
arpl
and
sti
ljmp
xchg
shll
shrl
xor
es
bound
lock
rcr
pop
ljmp
dec
jns
dec
mov
xor
inc
xlat
adc
mov
stos
dec
push
add
or
and
data16
pushf
mov
xor
sbb
popa
movsb
and
and
cmp
push
inc
out
mov
push
popa
xorb
pop
pop
int
xor
sbbl
pop
cmp
shrl
test
aad
add
sbb
jbe
sub
in
pop
movsb
por
cmp
or
shll
cli
and
popf
ret
xor
push
xchg
cltd
jne
inc
inc
jmp
add
shrb
sbb
lahf
mov
push
xchg
out
lds
or
pop
inc
jmp
mov
movsl
pop
sub
lods
sti
add
mov
or
fadd
pushf
inc
mulb
and
stos
xor
lock
insb
insb
inc
scas
mov
in
inc
test
dec
ja
and
mov
or
test
pop
aaa
dec
out
rcll
js
inc
popa
test
dec
xchg
push
enter
sahf
jnp
ret
imul
in
pop
into
stc
inc
pop
in
xchg
fs
xor
int3
jbe
stos
mov
cltd
inc
out
adc
outsb
je
repz
out
and
mov
xchg
aad
test
xchg
fistpl
int
jp
xor
into
daa
imul
psubw
stos
into
iret
jb
mov
mov
pop
in
dec
or
sub
cltd
add
outsl
fisubs
or
add
outsb
hlt
xchg
dec
mov
cs
jnp
and
sbb
test
int3
movsl
push
lock
xor
insb
cmp
dec
fdivl
jb
scas
mov
mov
lods
fwait
mov
push
push
hlt
addr16
xchg
mov
addr16
dec
xor
fiadds
roll
sub
and
int
fildl
push
mov
fstpl
pop
and
and
test
inc
data16
cmpsl
pop
xor
addr16
cmpsb
daa
lds
jb
jb
data16
lds
fsts
mov
fcomps
addr16
fisubs
roll
jmp
loopne
dec
adc
lods
test
clc
pop
scas
cmp
push
xor
mov
and
cmpsb
scas
pop
in
fistl
pusha
pop
in
mov
pop
jb
cmp
add
movsl
pop
data16
jne
aad
rcrb
in
mov
xor
popf
mov
push
mov
shll
pusha
mov
mov
jl
mov
inc
xchg
lock
outsl
cwtl
shll
jo
cltd
sub
and
jae
sbb
lods
aam
mov
mov
insb
sbb
nop
pop
dec
dec
jle
lds
sbb
das
lock
mov
or
mov
pop
aaa
mov
xchg
popa
xor
int
mov
cmp
or
popf
inc
inc
push
dec
add
clc
mov
and
lea
xor
push
jp
pop
leave
jns
or
mov
adc
popl
popf
pushf
ja
stc
pop
cmp
cmp
shl
lret
and
sbb
daa
lret
pop
mov
jnp
loopne
pop
loopne
ret
xchg
xchg
or
and
ljmp
pop
lea
in
stos
adc
into
pop
test
xor
add
mov
push
sbb
mov
xchg
popf
cli
adc
negb
mov
lods
xchg
xchg
pusha
call
cmc
cmc
cmc
out
jno
cwtl
push
popa
inc
jne
jg
pop
vxorpd
pushf
jns
cld
and
fsubl
mov
pusha
sbb
sete
in
imul
iret
insb
mov
push
dec
dec
stos
xor
lock
icebp
xchg
enter
mov
out
in
xor
add
dec
mov
mov
adc
stc
nop
test
out
lods
mov
js
fidivs
insl
and
dec
scas
je
mov
mov
jbe
jno
ror
in
pop
push
popa
les
cmp
push
cli
pop
or
pop
dec
and
xchg
xorl
mov
fimull
clc
pop
test
add
lods
adc
push
xchg
push
inc
jmp
mov
mov
outsl
mov
sbbb
mov
mov
cmp
xor
sarl
cmp
push
shlb
cmp
cld
movsb
jmp
push
test
loope
mov
jno
mov
mov
movsl
mov
ja
mov
in
jmp
cmp
and
dec
xchg
mov
adc
add
dec
icebp
dec
std
push
dec
mov
mov
mov
out
push
shr
ret
push
jecxz,pt
xor
rcrl
or
cltd
pusha
pop
xlat
jnp
into
adc
pop
mov
jb
xorb
mov
mov
sub
jnp
mov
clc
lret
adc
rol
adc
xor
out
xchg
adc
cld
push
mov
xor
mov
jl
add
rolb
imul
adc
push
xchg
dec
ret
dec
flds
cmp
push
mov
movsl
cmp
scas
mov
inc
push
shr
push
iret
add
les
xor
nop
sbb
ja
sbb
cmpsl
push
mov
iret
mov
sahf
ret
pop
xor
xor
stos
push
sarb
enter
cmp
inc
xchg
dec
addr16
xchg
fimull
popf
mov
pop
or
jns
lods
popa
ljmp
xchg
mov
jecxz
xor
mov
mov
jmp
inc
outsb
adc
cmp
cmpsb
inc
mov
xor
push
outsb
push
stc
dec
adc
mov
push
cli
cmp
repz
xchg
out
push
cld
add
cmc
neg
push
notl
gs
cwtl
push
jno
movsl
out
jns
leave
mov
xlat
xor
and
push
push
sub
push
test
aam
fdivrs
in
outsb
lea
sarl
mov
aad
ds
inc
sub
mov
test
add
pushf
lods
adc
jg
rol
in
xchg
pop
add
lea
das
insb
shlb
dec
sbb
push
xlat
push
insb
inc
in
adc
sub
inc
add
or
xorb
ds
jne
jns
outsl
xchg
sbb
testl
mov
xor
pop
je
cmp
xchg
je
hlt
imul
jecxz
xchg
shrl
dec
sub
jecxz
test
push
xor
push
addl
mov
imul
leave
and
fdivrs
notb
mov
popa
mov
inc
lret
xor
fwait
sbb
outsl
mov
rcrb
sub
add
xor
add
out
fcompl
mov
fiadds
in
sub
out
lods
lret
pop
nop
aaa
xchg
mov
mov
jnp
fisubrs
inc
inc
ds
mov
cmp
mov
nop
ds
adc
adc
in
lods
pusha
adc
fcom
adc
cmc
add
add
mov
dec
xor
add
shlb
sahf
pop
mov
push
adc
shrb
int3
mov
jmp
in
repnz
push
stos
test
inc
lret
push
jnp
or
icebp
mov
inc
fcomip
and
add
aas
loop
sbb
in
jae
sbb
push
pop
adc
lea
mov
push
jg
mov
in
xor
mov
cmp
mov
lea
sub
aaa
test
fdivrl
movsb
sbbb
enter
adc
test
jl
mov
das
push
ret
shrl
daa
lret
xchg
lahf
rcrb
push
outsl
adc
sub
or
cmpsl
stc
pop
shrb
mul
aam
pop
xchg
inc
movsb
sbb
sbb
data16
push
and
sub
icebp
lds
jmp
test
adc
push
fbstp
xchg
mov
fstps
xorl
push
pop
sti
pop
cld
pusha
ret
mov
stos
lcall
and
fnstenv
outsb
std
xchg
cld
les
scas
xchg
mov
cmp
push
notl
imul
addr16
add
xchg
lea
ret
push
repz
mov
cmp
mov
mov
mov
dec
mov
andl
data16
iret
lret
xchg
std
jl
adc
pop
test
sbb
adc
and
dec
jae
xor
int
mov
xchg
xor
std
xchg
push
into
arpl
stos
sti
xchg
push
sbb
inc
jnp
arpl
cmp
mov
xchg
mov
xor
pop
cmp
xor
push
or
insb
xor
aas
adc
xor
and
mov
ret
cmp
add
dec
inc
adc
popf
xor
xchg
movsb
jle
js
or
inc
lock
mov
std
test
jp
pusha
faddl
hlt
jge
gs
clc
je
xchg
adc
imul
loopne
fidivrl
das
and
xor
iret
test
push
sub
adc
and
sbb
push
add
jns
xor
mov
lds
adc
mov
sahf
mov
xchg
or
outsl
jp
adc
enter
outsl
add
inc
or
push
stos
rolb
pop
mov
das
insl
xchg
adc
out
pop
add
lea
add
add
stos
cld
dec
mov
or
push
dec
sbb
pop
mov
push
sbb
and
sub
fwait
hlt
pop
mov
iret
and
jns
gs
daa
pop
push
add
sbb
aas
mov
movsb
orb
sbbb
or
jecxz
pop
cmp
xor
sahf
mov
add
lret
scas
loopne
add
and
or
das
and
jb
lret
test
stc
pop
sbb
xor
mov
jbe
stc
call
dec
and
std
mov
pop
xchg
push
arpl
xchg
repz
xchg
addr16
add
push
pop
xchg
inc
mov
cli
insb
fwait
jecxz
mov
in
push
addr16
xchg
mov
cltd
loop
mov
daa
insl
adc
aas
stos
incl
mov
or
imul
das
xlat
leave
into
fcomps
sbb
leave
xchg
popf
lds
gs
adc
mov
fsubs
sub
dec
nop
shl
out
inc
xchg
dec
add
pop
mov
cmp
push
cwtl
dec
fsubs
mov
sarl
outsl
popf
pop
sub
addr16
mov
fs
paddusw
xlat
adc
cmp
fnstcw
mov
in
sbb
xchg
inc
push
invd
jb
imul
icebp
adc
or
xor
adc
push
clc
xchg
icebp
sahf
cwtl
sbb
inc
mov
sti
mov
sbb
mov
das
fsub
push
cmp
cli
insl
sub
push
sbb
fwait
and
cmpsl
rep
mov
cmpsb
xor
sub
xchg
jo
mov
push
jge
stc
fdivrs
clc
cmp
sub
xor
or
das
push
add
push
testl
add
popf
push
stos
repz
xchg
dec
je
ds
adc
lods
int3
jns
and
aas
cmp
aad
rcrl
addr16
sbb
adc
in
add
mov
imul
mov
pop
clc
inc
cmp
dec
xor
mov
dec
adc
shrl
push
dec
das
or
unpckhps
inc
mov
icebp
repnz
lods
int3
popa
lret
jbe
dec
xchg
jnp
dec
sahf
imulb
iret
aaa
mov
cmp
jne
gs
xchg
mov
xor
and
out
push
mov
popa
lret
adcl
inc
inc
pop
and
pop
std
aas
push
sub
xchg
je,pt
mov
out
adc
negl
imul
xor
imul
jne
in
mov
or
mov
je
mov
or
xchg
insl
xlat
popa
inc
push
push
das
cmovnp
cmp
jo
mov
test
in
fadds
test
test
in
and
mov
pop
adc
pop
push
fidivs
lret
adc
xlat
xchg
hlt
inc
lret
ret
xor
push
dec
repz
lahf
in
icebp
push
lods
roll
call
mov
mov
xchg
arpl
xor
adc
jb
cmpsb
sbb
adc
or
clc
inc
and
or
inc
outsl
call
jg
xchg
push
lret
add
mov
mov
sti
inc
in
in
testl
jnp
mulb
loope
shlb
mov
sub
adc
pop
cmpb
adc
jl
xor
mov
test
and
pushf
out
or
add
roll
inc
aaa
xor
mov
jns
pop
sahf
add
ret
sub
dec
aad
lock
mov
jne
push
dec
clc
scas
or
jnp
add
mov
mov
scas
xchg
bound
aam
cmpsl
adc
inc
out
jg
jne
mov
jmp
dec
sub
mov
mov
push
repnz
fstpl
shl
push
rcll
mov
lcall
sbb
subb
add
jns
mov
add
xchg
loope
idivb
jge
pop
imul
push
imul
in
ljmp
mov
pop
push
mov
jo
sarb
loope
or
fisttps
cmp
xchg
and
add
call
insb
mov
scas
add
ja
jg
ss
pop
inc
repnz
or
jp
int3
xor
ret
pop
les
enter
push
ja
sub
aam
dec
daa
sbb
xchg
shl
enter
loopne
lcall
icebp
in
pop
adc
fcompl
test
xor
test
cmpsb
stos
lcall
scas
inc
add
pop
or
pop
fisubl
in
in
sti
sbb
movsb
mov
cmp
lahf
jbe
out
push
out
iret
push
out
push
cmp
outsb
clc
inc
sarb
sbb
mov
push
sub
popf
xchg
enter
mov
in
test
pop
test
mov
pop
dec
mov
test
inc
ljmp
out
out
push
or
arpl
pop
mov
out
loope
push
jae
sarb
lds
xchg
fistps
aam
pop
outsl
out
arpl
jns
cmp
mov
xchg
and
inc
xchg
scas
xor
mov
roll
xchg
les
aad
loope
xchg
fucomp
das
push
pop
lret
stos
dec
mov
bound
leave
mov
pushl
scas
movzwl
push
scas
incb
cmc
cmp
push
cmpsl
jecxz
cmp
and
cmp
bound
enter
inc
enter
xchg
test
leave
push
push
std
popa
in
sub
dec
test
lahf
xor
cmc
movb
sub
pop
ficomps
xlat
pop
mov
pop
cmpsb
pusha
cwtl
clc
scas
push
mov
push
jbe
in
cmp
int
add
fiadds
lret
sti
je
mov
call
hlt
in
or
imul
andl
scas
inc
out
loop
push
sub
adc
sub
pop
sub
push
add
insb
push
loop
push
lcall
dec
sub
pushf
out
or
popa
enter
dec
mov
repnz
lret
dec
and
adc
mov
repz
arpl
mov
mov
inc
mov
pop
dec
jne
sub
mov
jmp
or
pop
and
mov
enter
jae
xchg
sahf
stos
add
mov
mov
icebp
push
cmp
int
addr16
daa
lret
test
cmpsl
jecxz
push
test
jb
addr16
jle
cmp
pop
cmp
push
fdivrl
xlat
xor
addb
ret
inc
scas
xchg
push
mov
push
inc
mov
xor
xor
sub
jg
out
pop
and
into
in
sbb
mov
jns
pop
popf
mov
ds
movsl
add
loop
or
mov
shlb
daa
arpl
clc
cmp
jle
mov
ficoml
into
sub
push
mov
data16
in
add
push
push
cmp
mov
cmpsw
jnp
xor
sub
mov
xlat
mov
lret
pop
xchg
ret
test
mov
imul
addr16
inc
test
in
jnp
lods
dec
rcl
cmpl
movsl
rol
insl
out
push
pop
loop
or
add
fcoms
loope
in
rorb
into
cli
jne
mov
xor
icebp
lock
ret
popf
loope
cmp
jne
call
jo
xorl
mov
cmp
in
lcall
add
movsl
leave
or
push
cmp
mov
pop
in
sub
jl
xchg
scas
mov
or
movsb
lods
mov
nop
scas
je
je
testb
movsl
inc
pop
fidivl
sub
xchg
cmp
jl
xchg
mov
fcomp
outsb
sbb
jp
mov
sub
adc
push
data16
add
mov
inc
dec
sbb
jp
daa
sbb
sbb
add
jp
xor
push
mov
shr
jae
cli
roll
mov
jg
or
sbb
pop
hlt
iret
pop
inc
mov
fcomp
or
insl
sub
pop
les
mov
lock
mov
inc
fbstp
in
popa
mov
sarb
jg
and
or
aad
aam
dec
cmpsl
aaa
ss
mov
fisubs
mov
repnz
jb
rolb
mov
das
push
lahf
mov
sub
push
mov
cltd
push
sbb
jg
jecxz
sti
sar
aad
das
jbe
sub
adc
jne
adc
int
out
shl
inc
push
push
push
jl
mov
int
push
add
aad
mov
push
dec
xchg
jno
cwtl
pop
sbb
adc
mov
es
repz
nop
dec
cld
inc
ret
cmp
or
hlt
jbe
pop
cmpsl
pop
arpl
xlat
fimull
sbb
cmpsl
insb
jg
lods
test
xlat
cmp
loop
lock
mov
mov
xchg
cmp
mov
mov
sahf
push
mov
xlat
jo
adc
jnp
xchg
xchg
enter
pop
jb
movsl
adc
push
sub
jl
dec
in
movsb
cmpsb
int
js
push
and
mov
ret
js
rdtsc
in
and
jo
pop
mov
inc
xor
mov
cli
push
fidivrs
xchg
loope
popa
jmp
jns
adc
cmc
shl
xor
and
test
ds
push
dec
push
xor
ljmp
test
mov
sub
adc
xor
out
sbb
sbb
nop
lret
mov
test
sub
push
mov
test
cmp
xchg
pusha
jbe
sti
xor
mov
mov
push
aas
pop
cltd
faddp
testb
sbb
outsb
cli
cs
mov
cmp
sbb
jne
fstpt
and
nop
repnz
xchg
shlb
lods
idivl
repz
xchg
out
in
fcomps
push
cmpsb
sub
test
push
clc
dec
jbe
sub
dec
mov
orb
pusha
cmp
dec
pop
or
outsl
aad
add
div
mov
inc
mov
and
add
cmpsl
fiaddl
jg
scas
mov
das
cmpb
cmp
xorl
in
nop
add
stc
push
insb
jmp
lds
es
out
jbe
sub
sbb
fidivl
loope
cmc
repnz
lret
mov
push
xchg
pop
int
adc
mov
mov
push
xchg
adc
ljmp
cmp
push
mov
mov
cmp
test
test
jb
mov
lock
mov
push
push
mov
mov
inc
sbbl
out
adc
jl
or
inc
jmp
cmp
or
pop
aas
aaa
rorb
xchg
les
sti
lods
hlt
mov
jae
jecxz
add
xor
mov
into
xor
int3
add
cmp
pop
test
outsb
mov
call
xchg
addl
xorb
cwtl
mov
sub
or
pop
jo
mov
pop
and
mov
dec
dec
sub
test
sbb
movsl
lea
in
sub
pop
inc
bound
xor
movsb
mov
jb
imul
popf
add
xorl
cmpsb
dec
push
or
dec
mov
and
addr16
dec
addr16
lock
xchg
int3
mov
jecxz
into
xchg
push
cmp
int3
adc
dec
rolb
repnz
shrl
sbb
test
ds
ja
pop
subl
jns
lds
inc
adc
pop
push
jp
popf
jne
inc
or
lock
or
movsl
add
aaa
cmc
test
jns
and
push
lds
sbb
decl
fldl
and
lds
movsl
or
cmpsl
mov
sti
mov
xor
pushf
fstpt
call
movsl
jnp
lea
add
inc
xor
mov
pop
int
mov
xor
mov
jo
mov
jne
dec
push
push
rclb
roll
idiv
mov
loop
aad
shll
pop
dec
pop
int3
dec
sbb
insb
clc
aad
je
sub
jmp
push
sub
jne
sub
xor
xchg
rolb
cmp
sub
mov
lock
popl
rcll
adc
int
or
into
cmp
add
mov
mov
jle
jb
push
test
cs
loopne
push
mov
aas
scas
dec
ret
xlat
sbb
jp
out
sti
jmp
xchg
push
jnp
inc
push
xor
inc
mov
mov
jb
test
aam
shlb
xor
stos
inc
es
or
xchg
mov
data16
and
rcrb
pop
pop
cwtl
je
daa
xor
jecxz
sahf
mov
sub
mov
jl
push
pop
jle
add
pop
lds
push
mov
inc
mov
xchg
loope
out
xor
jne
mov
add
std
dec
jl
sub
lods
out
das
cmp
jno
push
andl
shl
adcb
cmpsl
xchg
jno
ja,pn
xor
dec
sub
push
out
leave
ljmp
push
and
sbb
add
shrl
lock
imul
cltd
fistpll
jo
in
pop
lahf
imul
mov
add
dec
stc
cltd
sti
push
cld
xchg
cmp
inc
xlat
fidivrs
repz
xchg
push
jno
call
aam
dec
fimull
in
mov
inc
sub
mov
push
xchg
repnz
xchg
cmc
mov
notb
xor
cwtl
popf
cmp
xchg
xchg
pop
sub
into
stos
sub
inc
push
or
xchg
std
les
push
sbbl
decl
mov
sbb
or
add
mov
or
fstps
aam
xor
mov
jle
in
sbb
or
ret
sti
repz
dec
push
mov
imul
inc
int
jbe
leave
dec
push
lods
cli
sbb
fwait
add
fs
jmp
aaa
jecxz
inc
out
jnp
cmp
jge
pop
call
xchg
cmp
adc
stos
jecxz
push
jo
inc
fidivl
jae
outsb
mov
rcrb
js
xlat
nop
int3
imul
mov
outsb
xchg
lahf
sahf
mov
mov
adc
mov
mov
lret
aam
mov
add
aas
dec
mov
dec
jl
ds
addl
mov
popf
xor
in
out
les
add
pop
insl
mov
outsb
cmp
adc
loop
cltd
mov
inc
inc
adc
loop
mov
xlat
call
sub
adcb
mov
cmp
mov
jns
dec
jle
xor
mov
aad
jbe,pt
or
or
cmp
orb
in
lret
pop
aaa
xor
xor
lods
sbb
adc
shlb
xor
mov
and
call
push
punpcklwd
stc
jo
nop
jle
rcll
dec
jno
int
xchg
jge
mov
lods
fsqrt
and
fs
sub
xchg
cmp
mov
pop
lods
adc
aas
adc
sbb
psubq
mov
inc
mov
ljmp
add
testb
mov
js
xchg
mov
cmp
push
jns
push
sub
inc
loope
fimuls
push
push
xchg
xchg
loope
and
xor
popa
nop
arpl
sub
mov
mov
adc
loop
imul
mov
mov
and
push
cltd
dec
dec
mov
sub
push
push
stos
xor
ret
xchg
mov
mov
jns
popa
cwtl
incl
mov
leave
inc
jge
div
movsb
inc
outsl
jmp
clc
and
popa
movsl
mov
mov
fcoms
dec
xor
js
sub
sub
loopne
adc
lret
jae
inc
cltd
inc
mov
dec
pop
or
xorb
clc
add
sbb
cld
xor
lds
lret
es
ja
fdiv
popf
popf
mov
out
xor
test
neg
push
mov
fisubs
aas
ss
sbbb
adc
insl
jl
movsl
jae
mov
cmpsl
in
lods
inc
mov
inc
pop
pmullw
inc
ljmp
icebp
out
data16
dec
xor
push
push
cmpsl
imul
icebp
push
and
mov
js
mov
fildl
push
mov
popf
aam
jbe
sarb
or
jge
adc
sti
lea
mov
inc
dec
pop
arpl
int
cmp
lret
or
xchg
add
sub
lods
or
jge
testb
mov
jl
dec
imul
aad
add
aas
cmp
cmp
push
or
jbe
paddw
sub
pop
jbe
imul
addl
sbb
fiaddl
call
flds
cwtl
in
mov
push
add
movsl
and
jp
xor
stos
mov
mov
ja
or
lock
xchg
out
gs
pop
repz
cld
mov
push
cmp
push
imul
out
xor
adc
add
pop
shufps
rclb
jne
stos
shrb
xchg
bound
negb
mov
inc
and
add
jle
sbb
jae
mov
in
sub
in
push
jbe
inc
push
sub
ljmp
inc
bound
sub
mov
and
xchg
mov
bound
lock
sub
adc
jae
add
outsb
push
and
nop
lods
push
mov
dec
pop
in
imul
stos
outsb
dec
pop
stos
int
sbbl
fwait
jmp
and
movsl
fcoml
out
dec
mov
push
call
ja
cltd
cmc
pop
pop
sbb
or
dec
inc
addb
inc
aam
lods
sbbb
or
inc
aam
and
popf
shll
scas
mov
call
adc
loopne
add
dec
inc
adc
stos
sbb
sti
add
mov
sub
inc
fmull
pop
test
xor
lcall
outsl
pop
ret
mov
and
or
daa
xchg
mov
cmc
push
ret
outsl
mov
lret
and
mov
xor
cmc
jge
and
pop
pop
and
into
mov
sbb
push
push
sbb
mov
loope
not
cmpsb
shll
stos
gs
xchg
xchg
jbe
insl
mov
sbb
and
cmpsb
incl
mov
int
rcll
add
repz
inc
adc
and
fsub
sub
xchg
and
icebp
add
push
faddl
dec
cmpsb
push
in
pop
inc
mov
pop
mov
dec
mov
js
mov
dec
mov
inc
in
pop
push
in
xchg
add
andb
mov
pop
icebp
arpl
arpl
rep
aam
cmpsl
and
push
dec
movsb
call
or
cltd
cli
loope
pop
mov
fsubrl
test
and
in
xor
stos
je
or
adc
insl
notl
jae
dec
popl
imul
mov
pop
ljmp
inc
ret
mov
movb
mov
pop
xlat
jnp
push
lods
pop
stos
sbb
inc
enter
ret
xchg
xchg
rorb
pop
add
sbb
adc
mov
in
dec
pop
sbb
fsubs
jne
loop
rcl
es
leave
adc
sub
cltd
mov
xor
inc
mov
push
ds
hlt
ja
or
loop
sbb
xchg
mov
sahf
dec
js
push
xchg
xlat
xlat
addr16
xor
add
xlat
in
test
pop
out
out
in
fistl
push
in
push
fs
lods
mov
out
data16
or
rcr
pop
sub
sbb
aaa
daa
sub
lret
dec
xlat
cwtl
lret
sub
addr16
fcmovu
sti
icebp
leave
ret
dec
adc
push
dec
arpl
lret
push
cwtl
pop
xor
mov
popf
mov
cmp
lods
xor
xor
push
lock
outsl
and
xor
inc
jnp
or
cmp
les
mov
push
lret
mov
push
movhps
sbb
xor
add
push
inc
hlt
jbe
push
cmp
inc
ljmp
aam
mov
jb
lret
adc
dec
cmpsl
mov
arpl
mov
push
push
push
addr16
cmp
fcoml
das
fucomi
xor
pop
and
icebp
int3
push
push
sarl
adc
cmpsb
push
pop
jcxz
push
jb
lcall
pop
push
cmp
fidivrl
mov
gs
insl
or
fsts
ds
test
scas
push
lcall
je
stos
push
or
dec
int3
jo
push
inc
adc
add
sub
pop
or
pop
push
aaa
stos
in
xchg
push
insl
loop
cmpsb
or
mov
xor
stos
inc
popf
sbb
sahf
ss
sti
or
out
add
sbb
mov
dec
sub
xor
add
dec
stc
mov
mov
out
push
xchg
repz
cmp
das
inc
mov
xchg
fcoml
cmpsl
add
and
xchg
imul
xlat
mov
mov
ja
fs
inc
and
fcmovu
in
jae
ss
mov
lds
mov
xchg
ss
outsl
lea
icebp
xchg
insl
lret
sub
sub
xchg
fidivrs
pop
call
mov
sbb
pop
xchg
jnp
clc
jbe
call
cmc
iret
mov
in
aaa
enter
popa
jmp
xchg
nop
cmp
fidivl
add
ljmp
xchg
inc
shrl
dec
jl
outsl
jl
cld
mov
ljmp
xchg
popa
repnz
mov
pop
movsb
mov
mov
js
dec
rolb
test
mov
add
in
sub
cmpl
je
call
fcoml
notb
sahf
add
popa
or
add
lock
fists
cltd
sub
pop
icebp
jecxz
fmuls
fstpt
or
mov
dec
jl
xchg
inc
lock
xor
cs
mov
add
movsb
jnp
popa
stos
fimull
dec
in
sahf
cltd
nop
outsb
mov
shlb
push
adc
sti
popf
repnz
aad
mov
mov
jecxz
popa
fwait
es
lret
sub
lahf
jmp
xlat
incl
imul
cmp
aaa
push
push
insb
sahf
icebp
push
ret
cmc
outsl
imul
push
or
lret
xchg
jge
and
push
call
nop
or
jo
mov
or
int3
shll
repz
cmp
cmpsl
mov
mov
push
xchg
fidivs
jg
bnd
jae
repz
mov
jo
inc
push
mov
insb
xlat
bound
scas
repnz
rorb
dec
out
or
inc
xor
add
cmp
cmp
mov
in
inc
js
repz
lahf
push
andb
push
sbb
clc
ja
cli
daa
add
add
stos
mov
fwait
test
xor
pop
add
ljmp
jb
xor
xchg
mov
icebp
std
in
add
inc
fldenv
and
inc
hlt
popa
ret
outsb
movsb
jmp
mov
and
push
cmp
ja
or
fcmovne
mov
rcr
sub
or
mov
mulb
scas
inc
sar
sahf
hlt
scas
or
mov
fdivl
add
outsb
rorb
outsb
movsb
mov
outsb
rcll
push
add
push
mov
ret
orb
lcall
roll
iret
movsb
gs
ss
js
cltd
daa
or
mov
jle
and
jp
jnp
jle
cmp
push
shl
outsb
jp
push
xchg
xor
mov
mov
sar
add
imul
mov
jg
imul
jmp
add
scas
and
test
mov
addr16
xchg
popa
lcall
shl
xchg
sarl
shrb
cmp
xlat
mov
fiadds
sub
fstps
ljmp
pop
mov
jge
lods
test
dec
jge
fnsave
push
lret
lcall
out
xchg
ret
push
mov
adc
popf
repnz
pop
sbb
xchg
loope
cld
dec
sti
iret
out
mov
scas
mov
adc
cmp
jg
pop
je
jg
adcb
push
jae
loopne
sbb
ret
mov
sbb
mov
push
or
cs
cmp
jno
mov
les
stos
data16
add
out
icebp
mov
lea
inc
dec
insl
dec
div
and
test
ss
lahf
data16
sahf
jbe
jnp
xchg
pop
iret
cs
pop
in
rcrb
in
cwtl
fs
add
ljmp
fisttpl
testb
dec
mov
dec
sub
insl
loop
cmp
js
ret
rcr
mov
and
sbb
ss
or
iret
and
add
mov
sub
daa
or
fiadds
cmp
or
incl
cmp
std
bnd
sbb
or
out
xchg
pop
adc
pop
sub
shl
mov
sub
insb
and
adc
daa
sub
sbb
jno
pop
sub
inc
adc
xchg
adc
mov
push
push
add
movsl
rcll
dec
pop
dec
ret
pop
and
add
ror
push
pusha
mov
call
movsl
add
lret
xchg
push
aam
cmp
addr16
out
push
clc
cwtl
and
sub
ds
outsb
je
cmp
nop
adc
mov
mov
popf
jo
movb
xor
xlat
je
mov
addr16
lcall
cmp
cmp
dec
lods
add
jmp
test
or
ret
inc
cli
loope
inc
ja
xchg
xchg
fs
xor
and
and
lret
fwait
data16
inc
cmp
jns
subl
iret
sbb
cmp
add
and
cmpsb
mov
inc
sbb
push
ss
mov
fwait
dec
and
stos
jle
cwtl
cltd
and
xchg
daa
mov
or
sarl
movsb
vcmpss
fsubrl
push
lret
lds
loope
xor
aaa
and
clc
rorb
mov
movl
in
scas
gs
mov
fnstenv
loope
icebp
mov
cwtl
inc
sahf
test
fmul
mov
xchg
jl
xchg
ljmp
xchg
mov
call
mov
std
dec
jns
xor
mov
pop
mov
jle
jecxz
dec
test
pop
pop
adc
add
mov
aam
mov
lret
iret
or
fisttpll
mov
fldl
pop
hlt
test
mov
int
jae
rolb
cmp
sub
sub
lahf
ret
push
cli
cmc
call
lcall
push
shrl
xchg
inc
pop
bound
fsubl
aad
lods
inc
mov
xor
pop
xchg
loopne
and
addr16
ja
push
or
xchg
mov
sub
adc
jbe
cmc
sub
mov
iret
dec
xor
sub
movsb
adc
cmp
out
push
or
fdivp
fildll
xor
sbb
scas
mov
arpl
jbe
bound
mov
stc
mov
xchg
xor
push
xor
jno
pusha
test
inc
inc
mov
inc
into
dec
jg
repnz
dec
xor
dec
jne
daa
lcall
mov
adc
shrd
sarl
mov
das
mov
push
cmc
dec
xor
jle
xor
push
jns
cltd
sbb
sbb
mov
mov
xchg
jo
cmp
lahf
in
pop
stos
repz
sub
ds
mov
add
add
sub
repnz
mov
shrl
xchg
dec
in
mov
add
xor
and
inc
lea
mov
cmp
adc
sub
fwait
out
leave
xor
inc
xchg
nop
pop
mov
in
mov
dec
js
outsl
push
arpl
popf
mov
repz
and
addr16
jmp
shrl
cs
mov
insl
mov
rorb
in
add
sub
jns
movsl
pop
dec
push
push
mov
jle
call
sarl
or
aad
sbb
sbb
jns
adc
dec
adc
push
ficompl
or
push
mov
mov
lret
inc
mov
gs
mov
sbb
cmp
push
shll
mov
mov
dec
sub
push
aas
add
pop
std
loop
dec
pushf
mov
lods
mov
js
sub
push
push
mov
lds
pop
fwait
mov
jmp
fnsave
jle
cmp
push
mov
mov
add
push
out
adcb
call
push
cmp
std
in
stc
lahf
sub
fadds
xor
mov
jbe
test
mov
popf
jge
adc
dec
jns
lsl
cmpsb
mov
mov
out
addl
dec
push
xchg
sbb
daa
xchg
mov
push
idivb
xchg
ret
add
push
jb
mov
push
jmp
mov
xchg
es
mov
cwtl
into
cmpsb
and
clc
mov
add
adc
test
push
aam
aad
pop
in
mov
xor
or
xchg
cmp
mov
out
push
and
or
add
fdivs
lods
adc
sub
jo
lahf
sti
xchg
or
inc
icebp
clc
sti
sub
loop
ret
pop
call
popa
out
fstp
dec
in
adc
lret
push
jne
sti
leave
xchg
or
mov
mov
clc
addr16
fistpll
mov
insl
mov
sbb
sbb
sub
mov
test
add
fdivrl
enter
jp
jp
adc
rolb
div
mov
scas
mov
daa
push
addr16
call
or
mov
push
xchg
mov
dec
js
mov
cmp
sub
jno
jg
pop
roll
inc
sub
shlb
mov
call
idivb
pop
lock
sub
jmp
dec
or
mov
enter
xchg
ja
mov
insb
repz
mov
aas
pushf
scas
and
pop
pop
xor
xchg
out
or
xor
jle
aam
enter
inc
adc
bound
lcall
ss
jge
mov
mov
enter
repnz
xchg
mov
pushf
xchg
sbb
ja
dec
lahf
in
bswap
lret
imull
mov
or
xlat
mov
les
imul
adc
imul
or
pop
push
mov
or
xchg
insb
pusha
call
into
jp
fcom
and
add
sbb
inc
dec
outsb
lock
fmuls
sysret
aas
xchg
mov
or
jl
sub
dec
push
push
cmp
jnp
push
loopne
pop
int3
std
pop
push
mov
mov
in
add
dec
sar
jbe
lret
push
push
cmp
or
repnz
jle
mov
ret
jbe
dec
loope
mov
cmpsl
mov
jp
adc
nop
pop
popa
xor
xor
jo
inc
ds
cmpsl
call
mov
sti
or
add
divb
bound
and
pushf
mov
fildl
add
jmp
sahf
loope
adcl
mov
or
decb
push
adc
jns
pop
lcall
ljmp
inc
fiadds
dec
lods
lea
fimuls
inc
and
pop
sbb
mov
adc
xorl
pusha
add
out
mov
adc
mov
push
mov
test
sub
jp
push
mov
jg
xor
aam
cmp
cli
cli
jo
cmp
and
adc
sbb
jle
lea
scas
mov
dec
jns
inc
ss
mov
xor
push
adc
popa
in
pop
inc
shrl
sbb
or
sbb
int3
in
lahf
ret
xor
adc
fidivs
inc
dec
ja
inc
mov
dec
mov
push
dec
adc
dec
xor
inc
mov
add
data16
sub
das
sbb
dec
push
adc
cmp
lods
push
mov
cmp
mov
stos
ret
inc
xor
mov
xchg
adc
dec
cmpl
xor
pop
cmp
loope
in
xchg
inc
icebp
xchg
ljmp
mov
ret
sub
cmpsl
sub
cmpsb
mov
cmp
insb
add
out
push
or
mov
cs
fldl
test
outsl
aaa
out
sti
dec
idivl
jae,pt
movsb
sbb
lds
cmp
and
js
mov
xor
outsb
icebp
cli
test
ss
sub
aas
push
xor
imul
inc
mov
pop
or
sbb
inc
mov
fnstenv
or
pop
push
dec
push
orl
sub
mov
aad
gs
arpl
ret
push
push
into
rcrl
es
pushf
xlat
adc
xor
add
push
jno
scas
push
dec
mov
xchg
and
sbb
add
roll
test
inc
outsl
xchg
inc
or
xchg
or
and
or
rorl
push
es
out
xor
cs
mov
addr16
push
out
es
hlt
or
lcall
cmc
idiv
sahf
dec
adc
push
dec
les
divl
xrelease
sarb
sbb
popf
cltd
fs
mov
xor
push
xchg
ret
mov
mov
mov
pop
jecxz
mov
jnp
pop
lahf
mov
jno
mov
shrl
repz
sub
lcall
or
cwtl
push
fmul
je
pop
ljmp
mov
dec
and
push
or
data16
cmp
lock
add
adc
or
rcrb
inc
ror
push
ror
into
popa
test
lods
push
push
mov
outsl
mov
push
loop
xchg
repz
sub
lret
jg
shrb
or
mov
loope
loop
loop
fsubl
aad
adc
test
cmp
xchg
ja
pop
dec
jge
sbb
imul
out
mov
into
pop
testb
jp
hlt
add
sbb
fisttpl
cmpsb
mov
rorb
pop
push
iret
sub
xchg
loope
data16
aas
loopne
mov
sbb
mov
scas
sub
je
adc
dec
fidivrl
fimull
out
out
es
jmp
push
push
das
lret
pop
cli
inc
sbb
in
cwtl
xor
push
push
pop
xor
cmpsl
mov
lret
pop
fists
imul
and
shll
insb
data16
loopne
mov
mov
jae
pop
lea
add
repnz
loopne
sbbb
pop
imul
xchg
loopne
jo
xchg
adc
jb
sahf
inc
gs
sti
cmpb
mov
xor
mov
nop
call
pop
imul
ds
test
in
sahf
cmpsl
fsubrl
and
call
scas
adc
push
ret
rorb
cmp
sbb
mov
lock
pop
mov
push
push
leave
xchg
imul
cli
push
pop
scas
iret
sbb
loope
fsubrs
hlt
push
xchg
in
cmp
jg
adc
inc
in
ja
sub
fdiv
add
in
or
pusha
sbb
dec
sub
jle
xor
jb
cwtl
out
mov
lret
aas
test
inc
add
add
inc
cmpsb
bound
addb
jo
andb
sbb
out
ret
xor
adc
test
jl
lea
inc
add
adc
xor
movsl
jne
lahf
xchg
imul
fldt
popl
push
dec
mov
into
repnz
xor
out
les
push
and
lock
push
sub
sbb
inc
adc
xchg
cmp
into
or
stos
push
stc
xlat
mov
dec
jbe
lds
xor
mov
inc
scas
repnz
sarl
xor
mov
shlb
and
mov
lret
jg
adc
mov
clc
add
pushf
xchg
sbb
mov
int3
xor
mov
pop
jmp
adc
inc
int3
mov
dec
mov
pop
push
ret
add
cmpsl
out
adc
js
shll
rorb
sub
cli
jl
stos
in
and
leave
jmp
fisttpl
adc
daa
mov
jecxz
or
sbb
test
pusha
mov
outsl
in
andb
in
mov
lret
cmp
pushf
sbb
subl
icebp
lret
lret
or
push
pop
cwtl
lahf
popf
insb
movsb
hlt
mov
xchg
lret
push
iret
adc
inc
mov
mov
lahf
popf
out
sarb
jecxz
addr16
sar
daa
pop
in
shrl
mov
aas
jge
je
insb
nop
sub
push
ds
fs
sbb
cwtl
lock
aam
andl
pop
dec
push
jns
jbe
jno
push
push
jmp
fwait
ljmp
test
mov
adcb
shll
pop
xor
cltd
or
inc
push
and
cmc
gs
mov
repnz
loope
push
cmp
sub
xchg
lcall
xchg
icebp
cmp
dec
pop
hlt
xchg
mov
sbbb
lahf
cmp
push
mov
leave
sub
dec
xchg
pop
dec
mov
addb
and
push
or
gs
insl
mov
xor
fadds
int
mov
lret
mov
lock
pop
in
sub
fstpl
cmpsl
scas
loope
dec
inc
add
mov
cs
xor
cs
rorb
fs
sbb
test
movsl
out
mov
lret
fisttpl
mov
pop
mov
jno
add
or
add
push
lcall
int3
ret
sub
mov
aas
mov
push
iret
into
mov
push
ficompl
xchg
dec
xchg
pop
pop
sub
mov
fldcw
insb
push
xor
outsl
repnz
fmul
or
pop
mov
mov
dec
fst
mull
dec
add
ss
les
xor
xor
push
add
or
scas
cmp
lret
jo
jecxz
push
pushf
pop
cmp
notb
mov
popf
test
into
mov
orb
dec
outsb
pop
stc
jp
cmpsb
cmp
mov
jge
lock
dec
fwait
hlt
stc
pop
je
in
daa
cwtl
aas
and
mov
mov
cmp
test
mov
stos
fldl
jns,pn
jbe
adcb
pop
and
es
in
cmc
test
stos
popa
pusha
mov
arpl
fdivs
push
out
sbb
fwait
aas
arpl
pop
scas
jg
rorl
mov
xor
add
in
cmp
inc
insb
call
push
lahf
lahf
mov
and
nop
jb
dec
subl
lock
push
pop
pop
sub
js
jmp
or
test
or
vpaddq
cmc
mov
cltd
call
mov
test
icebp
xor
out
into
push
jecxz
es
repnz
cmp
bound
hlt
stc
or
insl
push
inc
pop
xchg
ja
ja
mov
push
lods
sbb
sub
aad
mov
clc
es
or
mov
lahf
adc
test
add
mov
add
xchg
and
sbb
or
loopne
mov
imul
bound
mov
sbb
push
jbe
mov
jge
lds
push
and
xchg
xchg
dec
lret
and
mov
addb
and
mov
mov
or
jno
ds
jne
or
dec
lcall
daa
jp
dec
jne
data16
fmull
je
and
and
pop
mov
cmp
sub
jns
sub
int3
pop
out
cltd
push
stc
cmp
inc
fwait
lahf
pop
aam
addl
mov
popa
jns
add
lcall
xchg
jecxz
cmpsb
shrb
add
sbb
jne
clc
jmp
stos
andl
mov
jns
icebp
fmul
aad
scas
ret
cmp
es
loop
pushf
lock
insb
push
jecxz
mov
or
outsl
dec
ret
arpl
mov
add
repnz
fwait
rcrl
rorb
sub
cmp
xchg
or
xchg
cbtw
in
push
jne
add
mov
outsl
pushf
sbb
cwtl
mov
std
jbe
clc
jp
jmp
cmpsb
lds
daa
inc
mov
push
and
pop
subl
in
enter
pop
push
cmp
or
cs
arpl
insl
and
sbb
inc
insb
cld
add
repz
aas
xor
test
aam
jno
scas
or
cmpl
arpl
call
xor
jo
jo
lods
adc
cwtl
jae
movsb
decb
jno
mov
or
inc
ss
xchg
sub
cmp
add
insb
cs
lea
xor
mov
sub
bound
push
push
daa
inc
mov
sub
adc
cmc
mov
stc
dec
movsl
mov
push
inc
cmp
lret
ljmp
or
sbb
and
push
sub
mov
mov
mov
xchg
and
add
cmpb
test
or
xchg
cwtl
int3
addr16
enter
int
jle
jmp
test
and
enter
push
daa
adc
add
cld
rcl
mov
aaa
xchg
or
inc
sarl
cmpsb
sbb
xchg
pop
mov
in
pusha
mov
lock
dec
call
test
xor
push
ret
int
loop
rorl
into
adc
sub
movsb
ret
mov
jnp
cltd
mov
add
stos
ds
cmpsb
scas
jmp
test
pop
popf
sub
mov
std
sbb
jb
in
imul
incb
clc
cmc
js
sti
jmp
sub
lods
jb
xchg
imul
lahf
cmovbe
mov
fsubrs
imul
mov
xor
sahf
ljmp
inc
jmp
mov
cmp
mov
data16
mov
pop
push
inc
loopne
aad
jnp
ss
push
or
xlat
jns
mov
lock
popf
icebp
sub
dec
jge
rclb
rclb
cwtl
pop
test
lea
cmp
sbb
int3
jl
jle
jp
mov
xchg
btr
imul
dec
dec
fdiv
daa
rolb
cmp
aad
mov
inc
movsb
push
cltd
or
jno
rclb
fs
fsubrl
loop
mov
add
and
clc
popf
orl
and
hlt
mov
int3
mov
movsl
fs
dec
and
fwait
enter
jl
aaa
ret
aam
xor
xor
pushf
icebp
mov
push
fcmovnu
fstpl
jbe,pt
push
cmp
lock
push
stos
mov
mov
fsubrl
in
and
pcmpgtb
sbb
dec
insb
xor
rcrb
outsl
pop
jl
and
flds
orb
mov
loop
jne
mov
sub
nop
push
jns
pop
adc
js
or
push
xchg
push
pop
enter
jg
js
inc
xchg
cmp
hlt
adc
fistpll
loope
xchg
mov
lret
jno
pop
mov
sbb
bound
cmc
sbb
dec
repz
jmp
sti
fs
call
pop
out
mov
mov
or
inc
mov
mov
mov
xor
je
cmp
pslld
pop
cmp
cmc
daa
aaa
out
push
pop
shld
dec
push
addb
xchg
mov
jo
popa
pop
sbb
bound
rcll
outsb
lods
add
loopne
xchg
std
sbb
xchg
or
mov
rorl
jp
sbb
mov
pop
xor
xchg
cmp
fisttpll
sbb
lods
std
rcrb
jl
outsb
aad
dec
lret
arpl
jmp
sbb
mov
xchg
cmpb
dec
popf
mov
push
js
cwtl
outsb
fsubrl
pop
xchg
adc
out
push
out
lahf
cs
cmp
std
in
outsb
sbb
js
fimull
xor
outsb
in
and
jne
stc
jmp
cmp
mov
mov
cmp
push
sub
inc
pop
mov
push
or
fisubrs
sbbb
pop
pop
fsubl
jecxz
test
pop
div
jne
inc
movsl
or
out
mov
xchg
mov
cmp
sbb
fnstcw
xorb
test
mov
mov
adc
jl
inc
imul
aam
push
mov
mov
popf
imul
xlat
jne
scas
push
dec
insb
push
push
xlat
and
mov
pop
fcomps
lods
in
repnz
adc
sbb
add
in
dec
nop
mull
ja
and
scas
add
dec
or
aam
adc
cli
xor
shll
adc
jnp
mov
hlt
pop
in
jg
inc
and
cli
lahf
imul
xor
mov
adc
call
pop
cmp
push
cld
cmp
push
repnz
cmp
mov
in
xor
or
mov
mov
push
or
pop
movsb
add
clc
dec
daa
gs
lret
xor
fwait
hlt
sub
pop
pop
cmp
in
ljmp
in
jp
dec
in
shll
into
xchg
xchg
movsl
test
in
dec
cmpsb
xchg
repnz
call
xchg
mov
dec
lret
pop
repz
inc
sbb
dec
dec
or
jmp
rcrb
lret
adc
or
push
jle
mov
xchg
ret
inc
mov
fidivs
mov
jmp
js
inc
mov
xchg
push
pop
inc
mov
mov
aam
mov
fimuls
ret
fldenv
arpl
scas
pop
xchg
out
adc
icebp
pop
jbe
int
and
pushf
mov
rcll
xchg
mov
sub
sub
and
fisubs
mov
add
push
arpl
jnp
iret
mov
std
jno
xchg
inc
xor
push
lds
and
push
push
adc
jb
mov
mov
stos
xchg
repz
dec
jne
pop
and
pop
cmpsl
sarb
sbb
adc
int3
and
pop
repz
jmp
xchg
or
jns
fisubl
push
lret
add
or
jp
push
hlt
cmc
sub
push
and
sub
out
push
movsl
ficompl
insl
mov
cmc
push
aad
enter
cmpsl
cmpsl
sti
loope
scas
int3
setno
xchg
xor
lds
outsl
ss
add
mov
lods
fisttps
xor
xor
das
negl
mov
xchg
cmpsl
mov
mov
pop
popf
pop
divb
iret
out
mov
mov
lret
pop
inc
lcall
out
mov
xor
adc
xchg
or
and
mov
loope
pop
add
dec
popa
inc
pop
sub
out
xchg
popa
adc
mov
nop
js
rorb
mulb
mov
mov
fildll
stc
xchg
arpl
outsb
aad
mov
push
sti
push
inc
or
jno
sahf
xchg
push
sbb
int3
cltd
in
gs
xor
add
repnz
pop
cmp
dec
and
sub
lret
outsb
jb
jns
addr16
add
pop
sbb
inc
call
icebp
rolb
addr16
and
ljmp
iret
dec
jns
cmp
rclb
push
push
out
repnz
lods
add
ret
gs
or
xlat
push
dec
sbb
and
add
mov
push
scas
mov
movsb
xlat
fsubs
fwait
push
aam
aas
cmp
pop
mov
sub
test
dec
mov
lret
lea
or
lahf
nopl
in
loope
cmp
out
fabs
enter
std
nop
popa
ficompl
lds
xor
push
cmp
pop
lret
cmp
inc
sub
push
in
mov
and
out
jo
lahf
pop
cmp
rorb
inc
test
pushl
fldcw
add
add
dec
sub
stos
repnz
fwait
push
in
aas
push
lods
jmp
mov
notb
addr16
mov
mov
push
dec
pop
popa
arpl
push
inc
fld1
pop
sarl
pop
xor
push
jns
xchg
pop
ss
out
into
xchg
imul
xchg
jne
pop
inc
orl
aam
dec
push
jecxz
pop
fmuls
cmp
iret
movsb
or
je
insb
jo
mov
rcrl
fs
pop
xchg
jne
fmuls
inc
sbb
iret
adc
es
clc
add
int
ds
cmp
mov
or
xlat
loopne
movsb
out
out
stc
cmc
icebp
sub
ss
push
addr16
fadds
cs
insb
and
ret
ja
cld
cmpsb
outsl
or
inc
mov
mov
inc
popf
adc
je
mov
cmc
and
nop
fwait
xchg
iret
jo
push
aam
add
fdivrl
and
inc
loop
mov
sti
clc
and
sti
fstp
into
mov
dec
jne
mul
pop
jg
sub
push
push
or
xchg
pop
or
lahf
insb
rolb
cmc
sub
add
fs
ss
dec
insl
cld
das
cli
sbb
nop
cmp
in
pop
push
adc
mov
outsl
xchg
outsb
shr
adc
std
pushf
movsl
stc
pop
pop
loope
and
fildll
das
test
aad
pop
mov
call
sbb
jg
jecxz
neg
insb
out
stc
jo
xchg
xchg
xor
adcb
fidivrs
xorb
lret
xchg
daa
push
daa
add
cmp
dec
cmc
jne
adc
inc
inc
sbb
xor
push
fisubs
andb
inc
inc
inc
jno
lea
stc
adc
mov
nop
pop
shll
fwait
jae
notb
iret
out
jae
push
add
dec
imul
imul
jle
jecxz
or
adc
dec
mov
test
rcl
add
add
imul
outsb
mov
sbb
or
xor
inc
sub
push
ret
es
arpl
add
mov
in
out
aam
xor
push
lods
or
loop
jne
cmp
xlat
imul
repz
cmc
xchg
inc
loopne
or
pusha
dec
jo
mov
and
enter
jb
mov
shll
mov
in
in
dec
je
daa
int3
sbb
shll
test
mov
pop
jle
test
dec
lret
xchg
daa
test
cli
bound
daa
incb
lahf
leave
inc
dec
loop
fs
mov
daa
dec
repnz
dec
ficompl
test
jmp
jmp
imul
push
sbb
sub
dec
inc
adc
lret
sub
cmc
inc
int
mov
xlat
jmp
mov
fcomps
sub
fcomp
insb
mov
pop
inc
xor
or
ljmp
mov
jo
test
sbb
or
and
and
decl
push
pop
aas
jns
movl
inc
movsl
mov
scas
and
and
or
pop
imul
stos
jmp
jp
jns
pop
scas
les
xlat
mov
mov
adc
xor
in
shll
or
insl
sub
xchg
push
cmp
scas
je
int3
inc
xchg
push
imul
push
fsts
jae
xchg
pop
jecxz
leave
out
pushf
adc
in
mov
out
ljmp
inc
pop
pop
push
std
jbe
std
sti
movl
xchg
xchg
lahf
inc
and
cmp
roll
addb
gs
andl
pop
push
mov
jp
in
hlt
or
xchg
out
scas
js
lock
fisttps
std
je
data16
out
cmp
into
pop
outsb
test
xchg
jg
inc
dec
mov
nop
cmpsb
ret
cmp
jb
push
sbb
push
sbb
push
mov
in
mov
test
xchg
das
mov
repnz
mov
mov
xchg
adc
cmpsb
icebp
dec
adc
loopne
mov
push
call
cmpsb
fnstsw
push
dec
cmpsl
mov
push
cltd
push
push
lret
aad
dec
adc
fmull
jns
gs
cmp
out
or
push
lcall
faddl
pop
lods
add
jne
mov
jno
int3
push
add
mov
notb
test
stc
out
push
rorb
mov
push
pop
mov
adc
lock
mov
inc
and
mov
pushl
scas
push
push
les
pop
dec
sub
mov
sar
mov
pop
ljmp
xor
and
and
imul
lret
and
sbb
pop
mov
outsl
xchg
scas
xor
adcb
mov
cli
out
xchg
outsb
ret
movsb
lods
stc
push
inc
movsl
mov
rcll
jecxz
sarl
mov
pop
aaa
mov
pop
cmpsl
leave
xchg
lods
and
pop
mov
sbb
inc
fiaddl
fs
outsb
and
push
mov
jmp
test
jp
push
push
cmpb
mov
jp
dec
orb
add
inc
mov
in
inc
xchg
adc
sbb
mov
cli
js
and
and
sahf
lea
xchg
mov
inc
aaa
xor
int3
scas
dec
mov
sub
pop
call
mov
sbb
nop
jmp
sub
jp
sbb
cmp
and
xchg
cmp
ret
popf
popa
negl
js
stos
push
xor
mov
and
popf
cli
jno
pop
shrb
xchg
orb
iret
push
inc
pop
shlb
mov
aaa
int3
bound
mov
mov
sti
jmp
push
loopne
jmp
leave
mov
sub
cmp
loopne
mov
fbld
mov
jecxz
jnp
cmp
xor
mov
hlt
ret
inc
jae
and
test
insb
cmp
aas
jge
fnsave
mov
mov
add
pop
aad
subb
lods
das
inc
shl
cltd
xchg
push
pop
dec
rolb
sbb
or
outsl
push
js
aad
repz
jb
push
das
dec
mov
mov
cmc
lods
and
in
inc
test
mov
push
add
js
mov
mov
cmp
xor
inc
imul
les
std
add
ja
mov
xor
cmp
pop
iret
lret
imul
adc
ja
xchg
outsl
sub
iret
jns
cwtl
xor
or
out
mov
ljmp
addr16
rolb
cmp
ss
mov
xlat
push
adc
pop
cmpsb
sbb
inc
mov
cmpsl
leave
push
das
jp
sbb
jl
pop
sub
int3
fsubs
mov
mov
popa
pop
add
xor
lret
roll
scas
and
shr
nop
std
std
insl
in
sub
inc
or
fidivs
sbb
cwtl
addr16
mov
inc
push
mov
mov
xchg
inc
jmp
shll
leave
mulb
lret
and
cmp
jle
ret
or
int3
cld
in
cmc
mov
loope
push
jae
xchg
mov
push
and
pop
ds
ljmp
inc
jp
inc
add
enter
cmpl
cmpsl
jnp
pop
mov
mov
jecxz
sub
dec
mov
pop
in
and
in
push
insb
lock
sub
std
xor
dec
jg
xor
ret
lods
cwtl
aaa
xor
scas
lcall
pop
inc
sbb
pop
push
mov
sahf
movsl
int3
cld
cwtl
sarb
aaa
lcall
and
sti
outsl
xchg
enter
mov
shlb
stos
enter
mov
add
test
lods
xchg
clc
xchg
pop
jmp
dec
rorl
in
shr
and
int
sahf
cmp
add
sbb
xchg
mov
inc
or
out
jp
dec
dec
leave
dec
sahf
push
enter
daa
lret
inc
xchg
js
out
mov
mov
rclb
ficoml
stos
aam
hlt
stc
and
mov
in
or
js
lds
dec
lcall
lods
jb
push
xchg
cmpsl
mov
jo
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
and
sub
iret
push
das
loope
stc
sti
ds
out
mov
and
xor
jo
adc
mov
fbld
ret
mov
les
pusha
sbb
jae
mov
test
dec
or
xchg
mov
out
jo
add
ret
ret
jne
bt
js
stos
dec
ja
xchg
bound
mov
dec
xlat
cmpsl
dec
test
ret
jmp
enter
adc
or
call
jmp
pusha
add
sbb
push
ret
or
mov
jl
dec
adc
add
push
inc
cwtl
dec
das
rcrl
add
lds
ds
fsubrs
std
and
mov
push
jp
mov
mov
jnp
mov
lock
xchg
outsb
sbb
iret
inc
mov
into
xchg
mov
add
xchg
fisubs
in
out
loop
movsl
xchg
sub
cmp
and
cmp
repnz
loop
dec
fs
adc
nop
mov
add
enter
sub
dec
jle
out
cmpsb
or
adc
xchg
aaa
popf
cs
adc
cmp
mov
arpl
mov
sub
dec
mov
or
push
jg
popf
in
mov
adc
push
sbb
push
add
mov
div
mov
pop
sbb
ffree
xor
cwtl
fisttpll
loopne
xchg
adc
mov
cmp
sbb
cltd
cmp
sahf
pop
ljmp
inc
push
shr
lds
xchg
repz
pop
clc
das
sbb
xor
lret
testl
and
pop
inc
in
in
pop
pushf
jne
pop
lods
push
xchg
repnz
pusha
xchg
push
mov
push
mov
push
xor
xor
push
aam
ljmp
icebp
notb
stos
cmp
rolb
mov
sub
and
fistps
and
dec
and
call
test
mov
mov
pop
xchg
sub
mov
repz
and
jbe
sub
xchg
add
sbbb
std
pop
repz
dec
or
mov
fistpl
inc
aam
sub
fistl
mov
or
orl
faddl
movsb
in
ret
daa
out
pop
dec
or
scas
lods
les
lea
cmp
add
insl
ret
cmc
int
pusha
out
inc
adc
lods
aad
stos
aad
push
or
cli
push
dec
mov
das
aam
pop
scas
cmp
scas
sbb
sub
xchg
aas
cltd
sbb
inc
gs
inc
test
lods
repz
addb
push
mov
mov
mov
push
pop
movsb
lods
lea
imull
fst
test
mov
inc
mov
sub
xchg
sbb
jo
mov
lods
jb
sub
and
or
xor
inc
ret
in
lea
cld
aas
adc
cmc
jb
mov
inc
repnz
sbb
pop
popf
nop
ljmp
push
mov
out
mov
adc
out
ja
fnstsw
mov
push
inc
insb
jl
nop
lock
pop
sbb
das
add
je
push
in
sub
push
push
pusha
rolb
and
aam
insb
in
push
pop
rorb
fidivl
jae
pusha
push
and
ret
pop
xor
je
push
mov
insb
xchg
lea
xor
jne
or
pushw
sub
add
lret
mov
nop
loopne
adc
out
lcall
sbb
out
es
stc
repz
xor
jnp
mov
adcl
sbb
shrb
icebp
push
pop
push
or
inc
ss
add
xlat
in
imul
dec
repz
int
cmovl
mov
call
stos
jbe
loope
imul
adc
mov
orps
loopne
sbb
dec
aas
comiss
jge
mov
sbb
lcall
stc
and
jg
ljmp
or
jg
or
push
cmp
adc
insb
mov
cmpsb
in
or
sahf
jno
add
cld
sbbl
mov
daa
loopne
aam
jbe
orb
std
fsubrs
inc
xchg
clc
jmp
xchg
call
insb
xor
ret
mov
cmp
adcl
or
jns
mov
out
cli
or
fldl
popa
pop
add
cli
lods
push
scas
icebp
in
pop
adc
ljmp
int
sbb
cli
les
sub
bound
xchg
sbb
jmp
xchg
jae
std
lret
adc
mov
pop
and
popf
mov
int
pushf
rcl
add
sub
rolb
xchg
fs
lods
mov
adc
das
mov
insl
divb
addb
fcmovnb
pop
mov
inc
mov
cltd
push
lahf
pusha
lret
pop
int
clc
inc
mov
movsb
xor
add
inc
xor
jae
lea
push
mov
je
leave
adc
sub
and
stc
sub
stos
js
movb
in
mov
lret
sub
jns
mov
mov
or
inc
imul
jp
dec
lock
jae
sbb
in
jb
xchg
aas
pop
jecxz
cld
pop
pusha
or
bswap
or
popf
cmp
and
or
adc
sarb
in
iret
lret
adc
jge
subl
shll
repnz
cmp
out
pusha
mov
insb
subb
lret
push
fildl
mov
xchg
dec
out
jb
and
cmpsl
into
mov
pop
or
negb
and
fdivrs
mov
dec
cld
mov
stc
cmp
mov
pop
vxorpd
xor
adc
xchg
pusha
pushf
mov
fs
mov
std
mov
test
dec
scas
out
push
bnd
mov
add
sbb
rcrb
scas
sbb
lea
add
xchg
or
and
pop
sub
and
sbb
subl
stc
mov
ss
and
inc
add
jmp
jp
aam
xchg
iret
mov
ljmp
inc
mov
outsl
test
adc
mov
dec
push
add
loopne
push
aad
les
push
ret
xchg
sub
mov
xchg
insb
mov
rorb
fdivl
sub
lods
mov
mov
mov
loopne
pop
push
xchg
jae
adc
and
mov
dec
fmuls
mov
xchg
subb
push
cld
stos
mov
popa
sbb
and
pop
push
les
out
lods
mov
pop
dec
push
sbbl
cld
mov
xchg
out
xchg
jg
mov
ficoms
movsl
fwait
and
and
sbb
enter
fucomi
mov
add
xor
mov
fstps
pop
mov
sub
loopne
pop
das
hlt
lahf
xchg
adc
fldl
pop
jb
jne
hlt
mov
loop
in
test
test
cs
mov
mov
cli
sti
xor
pushf
int3
pop
out
clc
ret
cli
sbb
aad
imul
push
call
pop
cld
push
add
mov
in
mov
call
repnz
lds
adc
out
pop
jns
mov
pop
mov
fs
movsl
adc
push
cmpsb
add
aaa
ret
mov
sbb
inc
dec
testl
out
cmp
sub
sbb
insb
cwtl
mov
pusha
fnsave
sub
jecxz
aaa
scas
daa
mov
adc
orl
and
outsb
inc
rolb
pop
bound
pusha
rcrb
add
lods
cmc
adc
adc
or
in
inc
in
add
adc
mov
and
fiaddl
mov
call
dec
pop
adc
or
out
pushf
mull
and
nop
into
das
mov
push
stos
adcb
rcl
fimuls
or
pop
test
add
sbb
adcb
rep
outsl
and
arpl
outsl
ja
and
dec
jo
xchg
mov
xor
cld
sub
or
jns
lret
loop
push
cmp
xor
xchg
call
iret
daa
cmp
insb
mov
bound
fldl
inc
adc
out
gs
repz
ret
dec
lcall
cmp
cmpsl
cli
ret
pusha
or
imul
add
daa
imul
mov
mov
rorb
mov
enter
and
addb
out
imul
and
aam
dec
push
sub
andl
and
movsb
repnz
lret
mov
sti
clc
decl
pop
mov
xor
and
mov
mov
scas
or
pop
rcrb
dec
mov
jns
jmp
cmpsb
bound
sbb
fcomi
cwtl
push
enter
ret
push
scas
out
lds
outsb
sbb
mov
inc
xchg
ljmp
mov
xchg
je
inc
sbbl
adc
daa
jle
pusha
push
push
lea
aad
andl
mov
xor
aas
cld
jns
jbe
sbb
xchg
ljmp
push
inc
adc
sahf
pop
jl
jno
add
repz
mov
pop
mov
out
dec
scas
dec
movq
mov
jl
jno
in
mov
and
insl
jmp
sbb
call
mov
jno
adc
stos
fisubs
cmpsb
cwtl
adc
in
test
xor
jae
push
stos
mul
outsl
push
sahf
insb
fwait
adcb
mov
scas
repz
and
icebp
mov
inc
mov
insb
sub
mov
jne
sahf
cmc
bound
aaa
cmpsl
daa
movb
ljmp
pop
hlt
inc
sub
push
push
mov
lods
outsl
orl
mov
andl
lods
add
pop
je
lock
mov
imul
xchg
and
stos
mov
xchg
ljmp
mov
and
xor
test
jp
popa
fucom
cmpsl
das
pop
pusha
fmuls
aas
ds
dec
jmp
ret
push
shlb
addr16
leave
xchg
pop
repz
lods
pop
dec
lcall
sbb
test
inc
push
xchg
xchg
push
xor
xor
jb
ja
jp
je
popl
or
fidivrl
dec
mov
test
add
aad
movsl
jmp
inc
mov
arpl
hlt
loope
repnz
mov
fnstenv
xchg
adc
or
push
pop
push
xor
or
scas
sub
rorb
test
mov
pop
mov
mov
adcl
aaa
jae
or
std
mov
push
push
lea
mov
dec
bound
cmp
bound
in
inc
inc
aad
push
jle
lock
inc
dec
in
lds
nop
mov
jle
dec
in
xor
pop
sbb
mov
xchg
or
loope
insl
push
ret
pop
data16
mov
testl
lcall
push
inc
xchg
sbb
fdivrs
lods
iret
in
xor
ds
mov
aad
insb
lock
xchg
xchg
in
xchg
rclb
sub
rcr
mov
data16
test
and
xlat
mov
repz
sbb
dec
jg
mov
lcall
dec
push
xchg
rcrl
mov
xchg
insb
cmp
test
popf
aad
das
jp
rcrb
inc
pop
ljmp
sarl
rcl
lret
mov
shlb
in
lcall
cli
icebp
mov
orl
and
daa
mov
aaa
fsubr
sub
cmp
jecxz
cmpsl
lcall
adc
cmpl
cmp
sbb
inc
stos
in
aas
sub
scas
fiaddl
ss
push
into
popa
les
ret
pop
pop
inc
pop
test
add
inc
inc
pusha
ja
mov
std
data16
shl
shl
xchg
shl
xor
and
cltd
fisttpl
xor
dec
je
out
inc
int
mov
lock
pop
cmpsl
xchg
mov
aam
xor
std
ret
lret
cmpsl
test
fldcw
outsb
mov
loopne
aam
imul
and
stos
push
cmp
fwait
pop
ret
ljmp
aam
lret
test
ret
cld
push
aaa
pusha
jge
mov
push
aas
in
gs
addb
and
subl
xchg
cmp
out
sbb
popf
inc
sarb
lods
push
hlt
inc
es
scas
mov
pop
mov
jns
or
push
sbb
inc
mov
jle
sti
push
pop
lcall
adc
pusha
mov
lea
movl
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
or
jne
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
mov
add
lahf
