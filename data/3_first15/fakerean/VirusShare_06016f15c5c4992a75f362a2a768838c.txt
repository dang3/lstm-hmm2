pop
cmpsb
in
xor
pop
fiadds
jl
clc
pop
cmpl
jne
mov
add
ljmp
xor
push
push
fwait
mov
cli
out
xor
leave
pop
subl
in
inc
test
push
cld
sub
stos
jne
sbb
lods
sbb
jmp
test
fisttps
mov
repz
pop
cs
jmp
mov
repz
mov
mov
mov
cmpsb
movsl
dec
stos
cmp
mov
push
notb
test
jmp
jmp
cltd
out
push
movsb
xor
das
ja
pop
xor
loope
cmpsb
or
jg
stos
movsl
sbb
pop
movsl
adc
cmc
in
enter
fsubl
dec
imul
shr
aad
fs
fnstenv
out
fdivs
or
jae
outsl
mov
enter
shrl
stos
pop
sub
mov
sbb
pop
into
sbb
orb
xor
mov
mov
adc
adc
mov
push
mov
xlat
imul
test
cwtl
push
rcrl
iret
sub
push
sub
leave
stos
repnz
dec
pop
stos
mov
add
jle
scas
push
mov
jbe
mov
leave
pop
pop
jb
repnz
lods
or
imul
out
jmp
stos
or
iret
and
imul
jmp
out
add
mov
jecxz
ss
icebp
sbb
addr16
mov
mov
ljmp
pop
push
jp
loop
test
inc
sub
mov
jo
jns
cs
xor
mov
cmc
mov
aam
sub
push
aaa
ror
sarl
test
enter
arpl
mov
jno
sub
dec
xchg
cli
xchg
push
in
rep
and
int
pop
in
mov
aam
dec
xchg
xlat
call
pop
pop
dec
addb
fildll
pop
push
xchg
test
xchg
jmp
mov
test
push
xor
or
cmp
inc
adc
insl
imul
fcmovu
leave
fnstsw
dec
pop
lock
cmp
sub
ret
inc
jp
into
pop
hlt
ljmp
fisubrs
xor
jno
mov
stos
dec
daa
pushf
mov
dec
cmp
ffree
cmpsl
sbb
call
inc
sub
or
xchg
sbbl
lea
pop
ljmp
fldl
stc
ret
mov
push
pop
xchg
test
add
and
mov
mov
push
sub
and
xor
fs
mov
in
pop
push
rcrb
sub
pop
in
mov
inc
pop
add
orb
mov
popa
outsl
xor
ljmp
movsb
sub
fwait
xor
jge
xchg
popf
or
jmp
scas
std
inc
sub
jnp
push
push
sti
add
in
xchg
sbb
dec
movsl
jmp
lret
rcll
das
push
notb
pusha
repz
adc
int
stos
imul
sbb
mov
xchg
insb
cs
cwtl
inc
leave
sub
jnp
cwtl
and
cmpsb
stos
stc
rcrl
or
cmp
sub
stos
pop
adc
cmp
adc
dec
hlt
xor
xchg
lds
xchg
insb
in
and
xor
lret
xor
cmp
stos
add
dec
hlt
dec
in
push
push
mov
xor
jle
faddl
push
and
or
adc
dec
jge
and
jne
into
xchg
push
push
das
xchg
dec
or
push
clc
stos
stc
cmp
pusha
hlt
arpl
push
mov
add
stos
sub
xor
inc
imul
dec
mov
push
sbb
inc
add
mov
pop
iret
stos
cmpsb
mov
pop
scas
xchg
popa
xor
mov
shlb
lret
cmp
push
xor
push
inc
push
xor
push
cmp
repnz
mov
inc
cmp
scas
cmp
fidivl
push
int
into
push
mov
sbb
repnz
mov
scas
mov
sahf
cmp
mov
icebp
adc
in
cwtl
shl
rorl
shrl
push
xchg
cmpsl
cmc
imul
pop
pushf
outsb
repz
or
pop
inc
mov
call
cld
and
xchg
stos
rcl
mov
or
dec
jne
adc
cmc
mov
adc
dec
pop
loopne
inc
mov
sbb
inc
popa
push
xchg
pop
mov
mov
arpl
jl
loope
out
cmp
ret
stc
add
xor
lds
ljmp
outsb
and
ljmp
adc
popa
and
push
andl
xor
call
push
fists
xor
pop
pop
outsb
inc
xlat
xlat
movsl
mov
push
cwtl
nop
xchg
add
stos
mov
xor
and
enter
daa
or
in
pop
movsb
std
ret
imul
repz
sbb
fs
push
sbb
push
sbb
aas
in
shr
aas
dec
jb
leave
mov
imul
push
jmp
popa
push
cmpsl
sbb
gs
inc
popf
stc
push
or
jl
adc
cmp
mov
sub
jnp
pushf
bound
mov
push
cmp
dec
mov
test
rol
fistpl
out
dec
repz
mov
out
stc
mov
or
inc
mov
add
arpl
test
xchg
pop
inc
jo
dec
in
push
mov
cmp
cmc
out
leave
imulb
push
repz
dec
js
mov
ljmp
jmp
mov
in
dec
andb
push
or
push
and
stos
and
lds
out
fsubs
xchg
push
in
leave
fnstsw
aaa
push
mov
dec
jo
ja
adc
and
push
mov
mov
fs
cmpsb
lods
je
xchg
and
push
fsubl
ret
cli
stos
addr16
insb
add
pusha
adc
std
lock
inc
scas
fsubs
es
inc
roll
call
scas
xor
movsb
add
xchg
aad
xor
addr16
repnz
dec
movsl
push
test
repnz
push
scas
xor
clc
shlb
daa
fcoml
jp
jmp
stos
popa
xor
mov
icebp
cmpsl
push
stos
and
xchg
lods
jns
sbb
fildll
stos
pop
jno
adc
pop
into
add
mov
shl
cltd
mov
popf
sub
pop
stos
sbb
fstps
in
call
sbb
loop
idivb
cld
or
xchg
shll
addr16
cmp
push
stos
add
and
dec
mov
inc
adc
add
inc
sub
xchg
xor
xchg
loopne
xchg
or
cmp
ljmp
mov
in
inc
xor
or
inc
xchg
jle
imul
add
test
pop
nop
jmp
and
daa
lock
sub
bound
loope
push
dec
mov
push
lock
fstl
dec
jo
mov
cmp
addl
inc
xchg
movsl
mov
xor
dec
shll
xor
mov
push
jns
add
fcoml
or
aad
xlat
movsb
cmc
pop
push
jg
push
pop
aaa
ret
jp
out
inc
loop
cmp
minps
daa
sub
push
into
mov
xchg
inc
and
adc
fwait
mov
mov
rcrb
push
cmp
pop
mov
mov
xor
loop
jne
insl
pop
add
dec
in
into
imul
insl
nop
movsb
mov
lret
pop
in
mov
js
mov
es
push
dec
lock
out
inc
adc
mov
testb
out
mov
pop
xor
xchg
inc
test
mov
shlb
xchg
pop
lret
mov
xchg
clc
mov
dec
pop
pusha
pop
sub
in
push
adcl
test
xchg
and
lea
lods
sbb
jmp
xor
xor
push
xor
xchg
dec
in
outsl
outsl
stos
test
jns
pop
ret
jnp
and
daa
subb
sbb
pushf
jle
xchg
mov
xchg
cli
fs
push
dec
pop
fstl
mov
jmp
and
adc
inc
nop
movsl
nop
stos
cli
lods
sub
and
shlb
scas
stos
inc
fistpl
inc
lea
add
cmp
push
sahf
je
and
stos
mov
lahf
xchg
lods
outsl
insb
jmp
sbb
pop
jno
mov
or
mov
mov
divb
push
mov
leave
pushf
sub
dec
aad
outsb
jl
ja
sub
out
mov
sti
pop
es
cmp
shlb
lea
stos
cmp
xchg
out
je
and
jmp
inc
xor
fistps
mov
mov
dec
loop
fstpl
xor
jnp
test
das
push
add
in
loop
pop
cmp
mov
pop
sub
fnstenv
mov
or
popf
stos
das
jo
xorb
and
add
push
ja
cmp
push
std
call
in
xlat
addr16
adc
out
mov
jp
jns
lods
mov
jmp
jno
into
out
sti
or
mov
xor
dec
push
dec
repnz
stos
inc
ss
out
xchg
cltd
loop
jmp
adc
sub
mov
push
mov
push
xor
fdivrp
or
rclb
xchg
jmp
call
sbb
cwtl
xor
cmp
sub
shll
jmp
pop
daa
ljmp
ja
mov
mov
les
push
insl
dec
push
out
adc
jmp
stos
mov
movsl
xchg
mov
shll
stos
nop
out
mov
mov
adc
push
push
lahf
push
es
sub
jns
dec
fidivs
and
sbb
imul
xor
push
das
push
cmp
jg
aas
xor
jbe
insl
inc
dec
rcll
mov
stos
dec
inc
lahf
repnz
pop
cwtl
add
jno
jecxz
add
xor
cmp
jge,pt
je
lods
pop
cwtl
or
xlat
jno
mov
push
xor
inc
insb
pop
sarb
mov
push
fadds
out
jbe
sub
out
mov
push
push
dec
fidivrs
repz
repnz
jnp
rorl
xchg
sub
pop
jg
push
push
adc
push
inc
je
push
ds
cwtl
or
mov
lcall
imul
lock
cmpb
pop
dec
lods
and
sbb
mov
pop
jne
cltd
dec
cmp
pop
aam
push
ret
push
or
jnp
add
sbb
push
lahf
cmpsl
and
inc
dec
addr16
psubw
stos
push
fwait
pop
push
call
jnp
mov
leave
test
test
xchg
xchg
xor
pop
xchg
mov
push
jno
jmp
mov
inc
push
sbb
lahf
sahf
mov
cmp
sbb
push
mov
xor
sub
xchg
stc
rorb
and
icebp
fldt
xor
jl
lret
add
mov
inc
xlat
jmp
pand
xchg
sub
and
subb
mov
clc
lods
pop
mov
lret
dec
fisttpl
xchg
pop
add
notl
outsb
imul
cwtl
mov
cmpsb
inc
jb
ss
adc
push
mov
inc
cmc
cmp
out
mov
test
xor
inc
aad
adc
stos
lods
add
xchg
es
not
cmpsl
sub
sti
mov
jnp
mov
push
roll
sbb
aas
xchg
cltd
jmp
idivl
popf
gs
adc
adc
adc
cmc
rorb
sub
lods
jle
xchg
in
jno
cmp
pop
sub
mov
xor
pop
pop
jle
or
mov
hlt
mov
xstore-rng
cmpsl
add
sti
stos
mov
mov
mov
hlt
mov
jne
mov
inc
jne
or
jb
outsb
xchg
in
add
ja
mov
mov
sub
mov
push
mov
push
xchg
lock
sub
xchg
and
mov
stc
xor
xchg
inc
je
lock
les
mov
mov
xor
icebp
mov
cld
or
xor
cli
mov
iret
pop
cli
cmpsl
xorl
dec
pushf
cmpsb
xchg
mov
mov
loope
pop
movsl
sub
jmp
push
sbb
ja
pop
jo
pop
repz
stos
pop
pop
in
xor
cmp
sbb
push
lods
inc
stos
add
es
ljmp
push
in
cmp
cltd
xor
int3
nop
lods
stos
rcrl
jle
cmp
mov
dec
stos
ljmp
stos
stos
test
cmp
fildll
jmp
ja
mov
or
sbb
jo
mov
xchg
xor
jno
stos
dec
addr16
dec
lret
adc
mov
sbb
iret
mov
stos
xlat
mov
aam
ds
jb
inc
lods
sub
xchg
dec
stos
push
stos
xchg
lcall
adc
rcr
je
call
xor
shlb
push
push
adc
and
xchg
jno
fnstcw
mov
test
cmpsl
faddl
sbb
xchg
icebp
sahf
and
in
fnsave
xorl
cli
stos
push
xchg
push
mov
jmp
ss
int3
push
int3
and
mov
and
rolb
movsl
sbb
add
xor
jnp
xor
xor
stos
nop
pusha
mov
or
divb
test
mov
out
or
fists
scas
std
mov
add
xchg
xchg
push
ret
aas
xor
test
add
push
fucomp
jno
data16
xchg
xor
loop
mov
rcrb
xor
sub
movsl
lock
fcomps
test
fucom
mov
sbbl
daa
adc
sti
fwait
xor
dec
call
adc
gs
pop
stos
stos
cmp
mov
sub
rcll
fisttpl
stos
mov
or
and
mov
ss
jl
jmp
push
pop
test
adc
jmp
int3
subb
roll
mov
ds
dec
sub
fdivrs
lret
cmp
andl
shrl
insb
xor
dec
add
jecxz
enter
xor
aam
in
repz
sub
in
dec
mov
sbb
js
cmc
push
mov
jl
push
insb
movsl
mov
pop
adc
hlt
xchg
inc
push
ss
xlat
fwait
and
and
mov
call
mov
rorb
xor
dec
jmp
lahf
incb
push
lret
pop
mov
push
jbe
addb
mov
xchg
jmp
mov
jecxz
loopne
pop
fsubs
lret
inc
ss
dec
xor
pop
pusha
imul
stos
shll
sub
stc
imul
sti
or
imul
cmp
sarb
adc
adc
int3
jle
call
mov
push
push
pop
shr
xchg
jge
fcomip
in
push
xchg
xchg
xor
loopne
and
mov
dec
jnp
and
sub
sbb
push
inc
stos
adc
jbe,pt
scas
scas
stos
mov
lock
xor
aad
xchg
jl
insl
sub
lahf
arpl
jbe
insl
mov
pop
inc
outsb
stos
dec
adc
test
jmp
sbb
dec
lock
ss
sbb
fildl
jmp
cld
sub
sbb
jne
lret
loope
adc
xor
data16
shlb
xor
xchg
adc
add
stos
mov
aam
out
jmp
imul
out
pusha
out
cmp
sbb
insl
mov
cmp
js
add
sub
adcb
or
iret
xchg
call
cmp
push
lea
out
loop
mov
imul
or
fimuls
stos
inc
inc
insb
int
jmp
adc
movsl
pop
lret
jne
jg
pop
adc
scas
lods
xor
jb
stos
mov
inc
jmp
push
outsl
std
movsb
push
movsl
and
push
cmp
xchg
push
in
push
mov
call
gs
dec
mov
ffreep
mov
cmpsb
inc
stos
xor
push
jl
sbb
lahf
test
aas
lahf
mov
cmpsl
shll
repz
jns
cmp
xchg
dec
pop
sub
aam
push
jmp
out
xchg
mov
sub
push
dec
sub
idiv
jle
jns
jne
mov
fldenv
xor
loop
inc
push
xor
out
sbb
filds
xor
xor
ret
or
and
repnz
es
push
sub
push
mov
xchg
sbb
test
popf
mov
mov
les
cmpsl
scas
stc
iret
mov
jle
rorl
lds
andl
add
jmp
test
in
aaa
clc
je
pop
sub
test
dec
and
clc
scas
pop
pop
aad
push
pop
add
xchg
outsb
pushf
mov
or
xchg
and
mov
xchg
outsb
sub
stos
inc
adc
push
jmp
or
mov
sub
jo
jmp
int3
fistpll
sbb
stos
xor
xchg
push
cmp
rorb
rcl
adc
cmp
inc
and
inc
sar
pop
movsb
in
jl
sub
jmp
mov
lods
pop
push
push
pop
dec
cmp
jmp
lahf
add
sysenter
scas
pop
adc
or
pop
inc
lcall
adc
shll
mov
popf
push
xor
dec
mov
loop
xorl
outsb
cmp
pop
jmp
mov
mov
stos
or
xor
clc
cmp
hlt
cli
mov
lea
js
in
je
scas
push
sbb
stos
mov
mov
popf
cmc
jmp
push
mov
pop
movsb
cmpsb
popf
imul
or
lahf
leave
int
or
xchg
push
aas
mov
jb
push
xor
outsb
out
pusha
jmp
stos
je
shll
sti
arpl
rcrb
stos
pop
pop
fdivrs
push
push
pop
ficoml
dec
aam
jmp
mov
cmp
rolb
push
cmp
mov
xor
ss
in
lods
cltd
jmp
mov
test
jns
sbb
shr
xor
movsb
aas
push
xlat
and
sti
xor
lea
jecxz
mov
cwtl
mov
icebp
cmpsb
sbb
dec
mov
aad
cmc
stos
aas
iret
out
test
and
stc
cmp
and
xor
lock
data16
sbb
into
lret
dec
out
jmp
enter
fstpt
push
push
movsb
sbb
mov
outsb
adc
push
fs
sbb
push
fidivl
inc
inc
jne
push
xchg
or
push
cmp
adc
stc
arpl
fbld
repnz
mov
mov
out
shlb
jb
pop
inc
push
lcall
divl
pop
les
test
fmull
xchg
ret
mov
push
mov
jo
xchg
push
ja
sbb
xchg
lcall
bound
inc
and
sub
mov
mov
fmul
js
stos
xchg
in
cmp
adc
pop
notb
mov
mov
inc
test
jae
sahf
cmp
fwait
mov
pop
jbe
iret
push
inc
or
ss
xchg
fnstcw
xchg
das
lahf
xchg
push
xchg
mov
and
push
mov
mov
movsl
cmpsl
pop
scas
pop
aas
icebp
adc
jle
pop
pop
icebp
cmp
inc
sub
dec
fstps
jg
push
rorl
mov
gs
add
data16
fadds
lcall
jg
bound
inc
aas
repz
xor
mov
push
dec
push
and
aad
cmp
push
insl
xor
stos
cmp
pushf
test
add
sbb
push
fwait
xchg
jg
mov
shl
xor
rorb
int
adc
push
roll
sub
fdivl
jl
pop
rcrw
mov
int3
pop
jns
inc
movsl
ja
cmp
rolb
fstpt
cmp
call
cmp
dec
mov
mov
lret
daa
xor
mov
stos
xchg
mov
lea
xor
cltd
jne
loope
jno
push
cli
push
daa
mov
imul
fsubl
fs
pop
inc
jmp
aad
xlat
xchg
jl
and
or
jmp
loope
iret
out
testl
adc
lock
pop
mov
xchg
and
mov
inc
orl
aas
jge
stos
push
mov
xchg
mov
fcoml
inc
ret
push
add
lods
pop
jb
mov
scas
xor
cmpsb
pop
repnz
arpl
sti
dec
subl
fwait
aas
mov
ja
xor
mov
xchg
subb
jno
push
push
test
push
push
js
pop
mov
dec
dec
pushl
sub
cwtl
sti
fmul
mov
sub
cmp
xor
imul
loope
outsb
mov
popa
icebp
jecxz
dec
mov
ljmp
jo
mov
sub
pop
push
stos
cli
shrl
fmulp
icebp
outsb
xchg
xor
fsts
enter
hlt
dec
clc
fisubrs
mov
xor
mov
jge
lods
loopne
stos
enter
fisubs
shrl
cmp
aas
jmp
leave
ljmp
mov
sbb
sbb
jmp
push
js
jno
mov
xchg
cmp
cmpsb
je
cmp
xor
mov
jns
out
ljmp
push
add
mov
mov
mov
bound
inc
xor
pop
repnz
sbb
mov
mov
cli
push
lock
pop
inc
out
mov
fucomp
dec
jmp
clc
int
gs
pop
fsubrs
imul
inc
jmp
cmp
mov
jbe
inc
xor
sbb
sbb
xlat
int3
add
nop
inc
insb
sub
test
inc
lret
pop
lea
mov
int3
ds
mov
ljmp
xor
add
push
xor
or
push
add
push
ds
cmp
addr16
and
in
adc
mov
in
push
aas
and
xor
sbb
dec
add
sbb
lahf
testb
jg
and
fs
pop
push
les
dec
jmp
stc
add
lods
imul
push
in
xor
insb
mov
imul
lcall
stos
sarb
mov
ljmp
mov
orl
xor
lds
pop
xor
add
ljmp
out
sbb
ret
sahf
xchg
les
or
mov
mov
xor
daa
mov
lds
enter
jns
leave
pop
or
mov
jmp
inc
fs
inc
shll
mov
fildl
pop
jmp
xor
or
stc
cs
push
adc
or
insl
cmpl
adc
xchg
aam
inc
pushf
and
repnz
call
push
imul
dec
dec
add
leave
and
sub
ret
scas
daa
in
iret
and
dec
push
rcll
push
scas
dec
stos
cmpb
inc
jge
xchg
mov
or
shlb
shll
jmp
jns
or
push
jl
push
dec
int3
std
fidivrs
add
push
mov
mov
lock
orl
sbb
icebp
bound
xor
xchg
inc
adc
sbb
shl
in
push
and
leave
mov
or
push
outsl
add
sbb
dec
andl
cld
jmp
fidivl
or
rcrl
pop
cmpsl
test
aaa
push
push
mov
cmp
mov
adc
lcall
cmc
lds
mov
in
lret
stos
out
dec
push
jmp
mov
test
push
jg
in
mov
push
add
cwtl
cmp
cmp
stos
fwait
xor
ret
jns
xlat
loop
test
mov
movsb
scas
jg
stos
push
fst
shrl
push
xor
pop
test
stos
sbb
lret
es
call
pop
pusha
loope
xor
push
mov
adc
jmp
ret
mov
cmpsb
adc
mov
push
test
jmp
adc
cmp
test
adc
in
push
mov
xor
sub
insl
add
jo
in
sbb
fadds
mov
js
in
jae
movsl
std
dec
jg
dec
fwait
push
das
mov
jmp
hlt
jbe
mov
adcb
mov
mov
loopne
mov
pop
sub
cmp
push
push
push
jle
pop
adc
push
outsb
and
dec
jae
jmp
inc
cmpsl
sub
outsb
addr16
das
push
scas
fildll
aaa
arpl
fwait
xchg
or
scas
scas
clc
enter
popf
xchg
std
sahf
bound
arpl
scas
lcall
cltd
mov
lcall
and
and
pop
lods
sub
mov
clc
xor
pop
std
in
loop
mov
in
and
xor
scas
dec
mov
ret
mov
test
fisttpll
and
lahf
outsl
ja
fwait
stos
shlb
mov
lea
imul
and
jbe
dec
jns
adc
xor
iret
pop
subb
std
test
jmp
xchg
add
pop
les
mov
mov
xor
sbb
idiv
pop
into
push
sbb
push
push
xchg
hlt
push
out
mov
pop
xor
in
xor
orl
insl
jmp
cmp
sub
cmc
call
daa
adcl
sahf
xor
mov
divl
xor
inc
jl
jne
stos
pop
lods
cmp
gs
jg
mov
mov
xchg
loopne
or
mov
add
imul
push
movsb
lret
jns
test
in
and
cwtl
xor
xor
out
sbb
jg
faddl
push
rcrl
push
mov
pop
repnz
movsb
sub
pop
push
stos
enter
jno
push
mov
in
daa
mov
push
test
push
lea
cmp
cmp
jns
lret
xor
mov
mov
dec
dec
das
jmp
xchg
fdivrp
mul
push
gs
movsl
sub
and
jo
fadd
sub
leave
and
clc
dec
xchg
daa
popf
fisttps
test
inc
jmp
jns
mov
inc
aas
jbe
pop
mov
movsl
imul
mov
cmp
jl
pop
pop
dec
and
adc
inc
lds
and
ret
cmp
jne
sbb
inc
ljmp
rcl
arpl
inc
dec
lods
xchg
mov
adc
stc
add
jmp
aad
dec
insl
sbb
sbbb
push
sub
ret
xor
xor
mov
aas
imul
rcl
leave
stos
daa
iret
or
xor
test
add
stos
adc
and
xchg
fs
jecxz
nop
dec
fldenv
xchg
out
sbb
aad
movsl
xchg
xchg
push
test
ss
jge
ret
out
mov
sti
inc
cmc
cmc
je
sub
leave
jns
dec
imulb
adc
fcom
push
adc
xor
mov
stos
xor
cmc
sbb
mov
cmp
int
push
test
aam
pop
imul
and
sub
stos
add
fiadds
jnp
pushf
mov
pop
movsb
movsl
adc
imul
jo
sub
iret
fnstcw
xor
mov
dec
icebp
pusha
and
jb
pop
dec
pop
or
shr
mov
cwtl
outsl
inc
xchg
jmp
cwtl
pop
out
pop
add
xchg
shr
mov
stos
jnp
dec
or
imulb
inc
inc
dec
xor
mov
and
fwait
xchg
lahf
push
cmp
inc
push
mov
mov
jle
pop
or
mov
inc
push
mov
sub
push
fiaddl
mov
xor
cs
lcall
lods
lds
cmp
movsl
inc
and
push
push
push
scas
lods
dec
int
cmp
ss
jp
scas
dec
mov
adc
xchg
sub
ljmp
ret
cmp
scas
aaa
je
es
mov
cmp
sbb
mov
mov
test
xor
cs
daa
xlat
or
push
data16
sub
cltd
sahf
stos
fimuls
push
stos
xchg
or
subl
inc
push
lahf
xor
aas
mov
stos
lods
pop
cmp
jmp
cmpb
push
imul
popa
stos
push
pop
outsb
movsb
jbe
movsb
dec
ljmp
mov
cmp
jl
cs
mov
stc
mov
fisttpll
sub
xchg
adc
pop
pop
or
or
inc
test
xor
aas
loop
push
pop
mov
jmp
int
repnz
rolb
xor
movsb
sub
lret
sub
addb
jp
insl
pop
push
and
es
fcmovne
mov
jecxz
xchg
in
jns
test
xchg
dec
or
sbb
push
enter
inc
push
ss
shll
cmp
clc
outsl
gs
hlt
bnd
mov
aaa
imul
and
fdivs
cmp
jp
mov
pusha
enter
aam
jne
ljmp
stos
loope
jb
xor
je
mov
xorl
mov
cs
in
out
pop
push
push
xor
sub
mov
adc
adc
xor
jbe
in
and
add
xchg
movsl
out
mov
mov
xor
xor
addr16
shrb
dec
or
in
push
cmp
scas
adc
insb
cltd
lret
or
lret
xor
int
pop
mov
stc
les
lret
fbstp
cmp
shll
xchg
mov
mov
jo
pop
insl
fwait
xlat
dec
fdivr
dec
xor
xchg
push
sub
pop
mov
add
sub
xor
repz
xchg
mov
push
mov
out
pop
mov
in
mov
int3
fs
mov
fistpll
cld
mov
inc
inc
repnz
scas
movsl
leave
and
adc
pop
out
inc
rcll
xor
hlt
sub
adc
adc
stos
push
shl
add
stos
stos
shrl
out
xchg
xchg
push
hlt
mov
rolb
xchg
push
ja
and
add
aas
fs
nop
ljmp
into
or
jns
or
imul
sti
jns
es
or
cmp
push
ret
cmovns
fdivrs
sti
test
adc
xor
cmp
xchg
push
call
pop
shlb
sbb
cli
or
mov
aad
loopne
adc
imul
popa
xor
ror
or
sub
popa
cs
movsb
pop
cwtl
out
lea
and
xor
insb
test
mov
push
aaa
push
ja
xor
and
mov
jnp
in
cmp
movsl
aas
outsl
jmp
jno
out
jne
cwtl
and
aad
dec
stc
or
call
lea
ljmp
cmp
repz
mov
jge
jns
xlat
pop
int3
mov
cli
fucomi
jo
out
jns
xchg
and
stos
sbb
xor
out
outsl
jns
xor
sbb
stos
add
stc
dec
sub
inc
scas
call
jmp
repnz
call
xlat
hlt
jb
sahf
push
xor
sti
in
jno
mov
rolb
and
inc
jmp
push
mov
aaa
mov
pop
lcall
fidivl
jp
fldt
xchg
fidivrl
jmp
scas
arpl
jo
stos
push
mov
fcmovnbe
ds
push
stos
push
pusha
mov
mov
and
pop
and
stos
cwtl
ljmp
lds
jp
aas
shufps
insb
in
out
popa
ret
shlb
jae
in
mov
fstl
lock
dec
cwtl
push
jb
mov
cmpsl
aam
stos
mov
sub
addr16
cmpsl
mov
das
xor
mov
push
scas
in
fsubrl
hlt
cmp
rclb
hlt
push
stos
cmp
leave
clc
or
divl
or
fmuls
mov
cli
aam
push
hlt
ret
das
dec
lock
das
cmp
push
pop
xchg
inc
pop
js
xchg
int
addb
pop
enter
stos
add
dec
out
or
test
and
enter
in
xor
mov
lret
xor
xor
out
in
fdivrl
and
sub
imul
cmc
stos
aas
inc
cmp
mov
mov
jecxz
stos
dec
aaa
pop
push
bound
inc
jae
pop
out
xchg
or
sub
stos
dec
les
add
adc
adc
jo
push
dec
call
popl
cmc
push
mov
dec
lods
or
scas
sub
xchg
movsb
mov
xor
mov
stos
fs
mov
adc
mov
rorl
xchg
pushf
in
push
dec
inc
sti
stos
sub
movsl
das
push
mov
sub
icebp
push
jo
pusha
and
mov
incl
mov
add
stos
ljmp
pushf
jmp
stos
mull
cmp
jbe
lea
mov
cli
jno
leave
daa
mov
jp
dec
hlt
clc
jge
jnp
bound
jg
negb
cmpsl
xchg
cmp
xor
mov
xor
int
mov
xor
ret
jg
push
jmp
or
lret
xor
mov
and
mov
fdivrl
sbb
add
lods
nop
stos
pop
lds
dec
sub
shlb
and
xchg
adc
xor
stos
fcoms
pop
dec
xor
inc
xchg
jge
and
and
xlat
cmc
aad
pusha
sub
and
dec
aas
pop
lods
cmp
movsl
mov
xor
adc
loop
aad
jbe
xor
mov
in
inc
lea
sub
sub
das
push
orl
xor
and
adc
mov
fs
mov
push
pusha
mov
out
and
push
das
dec
call
shll
push
dec
jl
fmull
sub
mov
in
mov
xchg
ret
ficompl
dec
xchg
xor
xchg
cs
jmp
mov
and
fidivrs
shll
mov
testl
lock
pop
stos
xchg
lret
fs
mov
mov
stos
rcrb
loop
stos
outsb
adc
hlt
subl
dec
add
scas
adc
or
into
iret
insl
mov
adc
mov
push
ja
stos
adc
pop
leave
int3
imul
cwtl
xor
xor
lods
dec
lret
out
cmp
add
mov
sub
lret
pop
pop
cli
rcrl
xchg
pushf
adc
push
insl
jmp
pop
icebp
xor
cmpb
jmp
push
mov
lods
aam
stos
mov
inc
push
mov
pop
mov
adc
xor
out
xor
jnp
jne
test
sarl
mov
adc
ljmp
lock
mov
pop
sbb
jo
inc
icebp
mov
dec
cmp
inc
addb
andl
movsl
and
negl
rcrl
div
fsubs
stc
mov
xchg
pop
jo
xor
cmp
mov
push
inc
in
push
mov
insb
stos
fdivs
dec
mov
bound
mov
xor
jb
mov
stos
shll
push
and
xchg
scas
and
mov
xor
ljmp
dec
test
jnp
fstpt
mov
push
stos
xchg
jns
jo
dec
mov
ds
shr
add
inc
jle
out
popa
test
dec
xor
push
ljmp
jb
jno
shll
and
adcl
dec
sbb
jae
loop
dec
lds
les
jge
ja
leave
xor
mov
inc
xor
roll
and
int
movsl
mov
adc
jb
inc
sub
push
popf
mov
mov
sub
mov
stc
stos
mov
mov
or
sbb
iret
je
loopne
dec
fidivl
test
popf
pop
leave
or
add
outsb
dec
sub
adc
cmp
adc
sub
bound
fnstenvs
or
ret
and
jno
cmp
shll
mov
push
stos
lock
in
xchg
lret
lods
pop
or
mov
xchg
out
rcr
dec
jmp
cmc
push
or
dec
cmp
dec
xor
out
cli
lcall
scas
insl
jg
mov
xchg
xor
sbb
out
add
xor
jge
sbb
cmp
fwait
gs
sbb
pop
out
data16
dec
push
mov
inc
push
push
xchg
sub
sbb
adc
push
imul
dec
shrb
cmp
rclb
push
insl
inc
pop
fcmovu
int3
push
ret
stos
cmp
push
scas
inc
mov
cmp
js
in
xchg
mov
mov
stos
push
fwait
and
rdtsc
fildll
jle
adc
add
push
push
add
pop
cltd
pop
rcrl
and
xor
andl
adc
sbb
shll
arpl
stos
mov
rolb
xor
cltd
in
lahf
cmp
pop
sti
xor
push
cs
pusha
jle
clc
aad
daa
adc
jge
adc
cmp
repz
dec
xor
aam
sbbb
push
pushf
push
out
jmp
mov
divb
sti
jmp
mov
sub
fstpl
push
sbb
add
loope
out
xor
std
xor
movsl
ds
jne
popf
sbb
push
sub
push
sbb
push
movsl
and
aaa
ret
test
mov
sub
adc
adc
push
in
push
dec
push
mov
ja
mov
inc
lods
add
cli
push
push
cmp
dec
js
sub
pop
inc
push
in
jnp
xchg
ss
cmp
int
outsb
insl
stos
sbb
mov
mov
int
push
push
inc
xor
gs
fscale
orl
jp
and
pop
jmp
fcoml
add
mov
mov
xchg
movsb
jmp
mov
cli
mov
mov
mov
sbb
jns
sti
sbb
push
stos
jmp
jne
pop
das
int3
cmp
mov
mov
jmp
push
call
push
jg
xor
movsb
sbb
sbb
pushf
test
in
push
loope
push
xor
mov
mov
push
daa
pusha
mov
int
xor
std
fiaddl
cs
cwtl
sbb
lods
mov
xor
into
fisttpl
and
push
fdivrs
inc
or
lods
test
fstps
imul
test
adc
and
pop
adc
inc
jmp
sub
jmp
push
cmp
xor
cmp
arpl
clc
mov
sbb
in
sahf
ja
cmp
flds
int
stos
out
in
sti
inc
mov
out
cmp
sub
sub
xchg
dec
loopne
stos
jle
outsb
jmp
dec
xor
push
cld
es
sub
insl
cmc
xor
sarb
scas
push
mov
outsb
mov
sbb
repnz
loopne
add
mov
andb
mov
lds
mov
adc
jmp
add
dec
xor
push
mov
imul
pushf
lock
sub
xor
jge
and
lds
fsts
and
ljmp
jne
xor
dec
push
insl
jno
and
es
adc
cmp
mov
jno
inc
dec
cmp
loop
push
push
jmp
fmul
rolb
and
shlb
cmp
shlb
ret
xor
stos
mov
jp
jb
clc
xor
arpl
push
addr16
add
push
adc
aam
or
sbb
ljmp
adc
jmp
and
popf
loop
popf
loopne
jne
cld
scas
add
pop
outsl
stos
inc
jmp
sub
leave
mov
jl
push
and
roll
inc
loopne
xor
lock
stos
mov
aad
xor
inc
push
aaa
and
sbb
les
cmpsl
mov
jmp
int3
xlat
popa
sahf
jmp
es
push
inc
add
mov
cmp
inc
push
mov
lds
sbb
icebp
sbb
push
mov
pop
xor
push
xor
test
inc
push
ds
rol
inc
xor
imul
addl
movsl
sub
cmp
fisubrs
push
and
out
cli
pop
cltd
aad
mov
jg
dec
pop
dec
lret
jp,pn
add
into
repnz
out
xor
into
mov
inc
pop
lret
push
stos
test
and
cs
cmp
popa
push
in
push
or
lret
xor
sbb
xchg
stos
jbe
out
shl
daa
shr
divl
pop
sbb
push
and
nop
in
cmpsl
lods
xor
add
dec
stos
sub
dec
push
mov
ds
sub
mov
scas
adc
xor
xor
and
sub
lods
lret
je
jmp
fs
insl
enter
aam
and
test
dec
test
push
loop
push
mov
and
sub
ljmp
sar
push
int3
add
das
xor
jg
ret
iret
rcl
scas
notl
mov
mov
sti
cld
int
pop
cmp
push
and
mov
shlb
aam
inc
inc
popf
dec
icebp
cmp
clc
push
ljmp
pushf
xor
push
in
xchg
and
lods
rorb
or
add
icebp
push
jl
push
mov
in
inc
ss
xchg
adc
push
sub
mov
xchg
mov
stos
xor
repnz
push
sub
aad
mov
push
cmpsb
cld
and
mov
add
aas
xor
fdivl
stos
jne
push
leave
mov
pop
mov
jo
cmpsl
cltd
add
pop
and
lahf
cmc
or
mov
repz
icebp
mov
loope
stos
ds
xor
lcall
push
cwtl
xchg
mov
mov
mov
pop
sub
iret
pop
lock
and
inc
add
in
jmp
mov
stos
mov
stos
cmpl
xor
or
int
fbstp
fcoml
mov
loope
pop
jnp
sbb
xor
sub
sub
add
mov
inc
dec
lret
cmp
lods
stc
jge
push
or
shrb
cmp
sbb
mov
and
sbbl
into
cmp
js
dec
mov
or
js
imul
fidivrl
jg
ljmp
mov
stos
icebp
sub
mov
pop
jp
shll
mov
jo
inc
mov
jmp
xchg
jns
mov
pop
push
cmp
fwait
xor
insl
jl
stos
fstps
jmp
push
ljmp
out
adcb
xchg
inc
mov
sti
jge
or
mov
fcomps
push
cmp
aam
and
add
punpckhbw
test
pushf
jmp
jecxz
daa
imul
mov
add
xchg
sahf
sub
mov
sub
les
inc
mov
xchg
push
or
cwtl
xchg
popa
lock
xor
sbb
sbb
push
xchg
shlb
pop
repz
sub
jp
xor
aad
or
add
jle
cmp
jmp
xchg
clc
movsl
cmc
push
je
fnsave
insl
mov
and
int3
pop
push
sbb
lahf
sub
mov
stos
jg
mov
mov
ljmp
jno
cwtl
stos
push
into
enter
ret
ss
imul
mov
add
stos
pusha
push
xlat
shr
lret
in
loop
and
push
push
stos
sub
inc
lret
xor
dec
push
fstps
nop
cwtl
sti
int3
mov
mov
pop
aam
xchg
dec
or
inc
pop
jo
stos
xorb
sub
sbb
addl
pop
sbb
mov
pop
sbb
pop
outsb
insl
push
popf
sub
lods
jg
inc
shlb
push
lret
fcomps
mov
or
jne
sub
mov
mov
cmp
cmp
add
or
das
push
jle
test
imul
enter
lods
in
sbb
test
jae
xchg
lret
push
fnop
jge
push
nop
mov
adc
sti
adc
lds
xor
or
pop
ficoml
sub
shll
inc
xor
add
adc
insb
or
cmp
xchg
push
pop
pop
or
mov
mov
push
in
pop
mov
sub
cwtl
sahf
mov
sub
add
xor
stos
or
cld
and
leave
into
cwtl
shl
leave
push
aad
cmp
sahf
cmp
hlt
pusha
xor
lods
add
int3
adc
xor
dec
push
rcr
xchg
push
dec
clc
jle
data16
jp
dec
jmp
inc
inc
inc
inc
adc
ret
cmp
out
rcrl
dec
mov
push
call
loopne
xchg
sarb
pop
adc
ss
jmp
dec
cmc
stos
int3
lods
mov
mov
jne
or
lds
call
sub
sub
xor
mov
fsubr
fwait
add
cmpsl
xchg
add
sbb
sub
test
cmp
xchg
push
lods
jmp
cmpsl
rcl
add
ret
int
add
add
clc
push
loopne
push
xchg
pop
shrb
mov
xorb
mov
push
adc
scas
push
subb
adc
xchg
sub
inc
out
adcb
xchg
mov
gs
inc
fldpi
inc
fs
les
mov
and
pusha
xchg
scas
or
out
add
stos
push
pop
test
shrb
cli
dec
and
xor
or
xor
les
movsl
faddl
pushf
call
xor
and
data16
stos
inc
out
dec
outsb
sbb
es
repz
imul
popf
rclb
mov
ficompl
in
stos
adc
or
rcll
aad
shlb
xor
daa
outsl
jbe
adc
xor
xchg
jae
mov
test
adc
ret
xor
arpl
sub
mov
pop
and
insl
push
arpl
push
fcmovu
xor
sbb
mov
call
inc
push
sub
subb
mov
ljmp
aas
add
fnstenv
push
pop
stos
mov
les
jnp
stos
or
xor
push
imul
mov
push
cmpsl
das
cmpb
xor
mov
push
cmp
decl
rcll
push
mov
int3
outsb
sarb
xor
icebp
xchg
int
stos
test
mov
data16
movsl
cmpsl
mov
mov
push
idiv
sbb
jns
ret
lock
loop
or
es
xor
cs
pop
sahf
nop
sbb
jmp
jl
and
mov
mov
subl
sahf
xor
xchg
adc
xor
sbb
std
push
les
or
testl
dec
cli
xor
mov
pop
xchg
xlat
jg
mov
in
xor
push
jns
jmp
inc
dec
xchg
in
mov
jo
dec
cmc
pop
dec
lds
fidivrl
xor
add
push
rcll
int
test
movl
das
mov
push
and
std
imul
jp
lods
mov
add
xor
xor
xchg
cmp
jg
cmpsb
div
add
dec
in
pop
xchg
xor
enter
dec
push
mov
cmp
aaa
das
lds
mov
out
repz
jae
sbb
mov
and
ss
stos
movsb
daa
je
push
mov
outsb
cltd
mov
loop
iret
pop
call
push
lahf
add
lahf
jae
shlb
mov
fidivs
xchg
and
dec
push
pop
sub
add
jl
jecxz
repz
loopne
or
mov
cmp
fcmovnb
pop
inc
or
xor
jne
jne
test
inc
mov
sbb
add
mov
xor
pusha
push
inc
pop
add
adc
adc
pop
inc
call
fdivs
jg
sub
mov
adc
mov
xor
fstpt
mov
shrb
push
cmpb
push
dec
rcrl
sbb
push
mov
addr16
sub
sbb
push
mov
pop
das
insb
imul
mov
or
test
mov
cmp
aaa
bound
lret
jge
jmp
mov
pop
xchg
cvtps2pd
mov
and
or
xor
mov
or
test
data16
addl
stos
xchg
cmp
repnz
push
fsts
into
xchg
mov
fidivrl
jmp
adc
mov
fbld
inc
scas
mov
pushf
xchg
cmpsl
sub
stos
adc
js
sarb
pop
mov
daa
mov
inc
push
cmpsb
lret
sbb
push
jp
call
mov
sqrtps
mov
lret
dec
xor
xchg
bound
pcmpeqb
subl
xorl
lret
roll
lock
inc
mov
mov
fdivl
lds
ss
jno
stos
pop
ja
dec
scas
push
insl
xchg
push
mov
stos
adc
js
pop
in
cmpsl
lods
popf
shr
adc
movl
loop
jge
jmp
loopne
jno
inc
push
cmc
imul
shlb
frstor
stos
pop
pop
xchg
cmp
cmp
divb
add
pop
sarb
mov
xor
les
xchg
mov
imul
inc
mov
cmp
adc
xor
adc
xchg
out
and
mov
ss
add
jo
and
jno
icebp
pusha
in
push
push
in
lret
mov
sub
popf
out
out
dec
inc
movsl
lahf
add
lds
pop
mov
lods
dec
sub
pop
add
cwtl
repnz
aad
jo
bswap
int
mov
loope
mov
mov
mov
fdivl
mov
lahf
pop
xchg
faddp
bound
cwtl
adc
xchg
lret
stos
mov
addr16
xor
xlat
pop
fld
or
js
sub
int
and
aas
pushf
dec
add
jno
mov
ja
or
adc
pop
pop
mov
push
imul
jmp
mov
js
or
push
outsb
xor
cmp
out
push
pcmpeqd
mov
and
xlat
or
dec
shr
enter
push
test
pop
push
scas
lock
sub
enter
repz
pusha
test
xchg
adc
stc
mov
adc
adcb
cld
pop
cmp
xor
pop
movsl
pop
mov
pop
movsl
test
imul
insl
pusha
out
push
pop
mov
adc
dec
jnp
dec
push
and
xchg
lea
inc
push
bound
movsb
or
jae
xor
or
mov
out
push
cmp
mov
xor
jle
jne
cmc
inc
popf
lret
mov
repnz
inc
pop
cmpsl
pop
stos
sub
jge
popf
pop
sbb
sarl
addr16
and
aam
out
mov
and
stos
and
mov
inc
aas
testb
mov
test
sub
mov
fidivs
movsb
sbb
inc
push
inc
addr16
popa
loope
mov
push
repz
cltd
mov
in
adc
shrl
imull
jno
dec
add
mov
jmp
inc
hlt
cmp
into
or
xchg
aaa
les
sub
out
in
lds
cmpsl
data16
lods
adc
je
fcompp
pop
cmp
ja
stos
ret
add
pop
jl
jmp
push
mulb
sub
jne
mov
xor
int
in
sbb
push
pop
clc
sarb
and
sub
fcompl
jmp
les
iret
mov
push
or
cmc
psubusb
mov
pushf
sti
xor
jecxz
pushf
stc
and
cmp
mov
frstor
ljmp
int3
add
bnd
xor
pop
add
xor
jb
outsb
mov
inc
pop
js
adc
xchg
dec
jmp
adcb
jmp
jp
cmp
icebp
outsl
and
testb
arpl
mov
stos
int3
pop
ja
mov
mov
jmp
cmp
hlt
pop
push
aas
stos
test
test
arpl
push
push
mov
xchg
push
popf
les
xor
or
fbld
and
mov
push
inc
in
jecxz
adc
adc
and
cs
mov
xchg
rol
mov
xchg
adc
outsl
dec
jg
xchg
sub
inc
mov
movsb
mov
in
jle
stos
push
fiaddl
loopne
push
out
mov
adc
add
stos
mov
js
je
sub
pushw
or
imul
aaa
xor
xchg
pop
push
ret
imul
adc
insl
push
sahf
cmpsb
xor
jo
fs
sub
sbb
xchg
jns
das
ja
mov
enter
sbb
add
adc
in
mov
cli
and
add
fwait
sbb
xchg
dec
sub
sbb
imul
stos
scas
inc
sbb
mov
mov
cmpsl
daa
mov
iret
sbb
insl
fisttps
test
imul
lock
xor
xchg
sbb
mov
into
cmp
pop
adc
xor
aas
pop
sbb
and
stos
dec
dec
test
inc
dec
dec
xchg
ljmp
adc
jo
mov
in
mov
cmp
mov
adc
repz
cwtl
out
jmp
mov
les
fmull
fdivrl
sbb
lds
jno
sub
pop
or
repnz
dec
or
addl
and
sub
lock
stos
xchg
mov
popf
mov
push
sbb
das
pop
mov
or
mov
mov
xor
int
mov
xchg
xchg
push
push
fldcw
sbb
fstl
mov
sbb
stos
add
in
dec
hlt
popa
int
daa
or
mov
scas
and
in
call
cmpsb
and
push
push
jmp
les
adcb
add
dec
test
imul
push
mov
cmp
xchg
stos
jp
xchg
lret
add
pushf
in
push
out
sub
addb
xchg
cmpl
adc
mov
stos
dec
add
xor
in
lret
add
or
xor
or
sahf
es
mov
sub
stos
inc
shrb
out
fiadds
jmp
daa
push
fnstenv
xchg
fdivs
mov
sub
movsb
sub
sub
jo
int
xor
shrb
rcl
pop
jmp
popf
rorb
and
cmp
fs
push
cltd
inc
push
xor
or
sub
nop
adc
stos
inc
inc
out
cld
push
test
popf
in
push
mov
data16
inc
stos
imul
lods
mov
aaa
jmp
rclb
xchg
fcompl
jg
adc
push
gs
xlat
cmpsb
xchg
jmp
adc
scas
add
lods
daa
les
aas
xchg
xor
leave
sub
addr16
test
mov
lahf
push
inc
push
ret
andl
addr16
xor
xchg
jp
int3
adc
ret
add
sbb
inc
jmp
pop
cmpsb
and
push
pusha
push
sbb
shrl
cmp
push
mov
add
fdiv
push
insl
mov
mov
jnp
outsl
mov
push
dec
decl
andl
vpxor
push
mov
incl
inc
and
xchg
js
xchg
xchg
and
sub
sub
push
sub
mov
fwait
mov
fwait
lods
mov
xchg
ret
call
movsl
push
ficoml
add
stos
aad
lea
stos
pop
mov
fs
dec
rorl
mov
xchg
dec
or
into
popa
out
repz
aaa
xor
rcl
push
sub
movl
dec
cmpsb
cmp
test
cmp
dec
adc
mov
dec
jmp
xchg
test
xchg
test
mov
arpl
add
mov
loop
lock
push
push
stos
pop
jne
test
test
push
push
leave
mov
push
pop
xlat
gs
mov
pushf
sbb
sub
xchg
test
cmp
in
stos
xchg
jb
movsl
push
pop
inc
jge
mov
test
push
dec
sub
es
scas
popf
xor
xor
pand
inc
mov
pop
adc
and
cltd
hlt
mov
int3
add
jne
cld
stc
fwait
push
pop
push
sbb
aam
decb
in
out
pop
in
xchg
es
data16
repz
cmpl
std
sub
jne,pn
mov
push
jns
or
sbb
out
test
cltd
xor
jecxz
push
mov
aam
nop
test
rcrb
sbb
test
test
or
frstor
hlt
mov
mov
jle
cmp
push
sub
out
sbb
or
xchg
shlb
cmpsl
mov
cmp
xlat
loope
inc
loope
jmp
aaa
pusha
std
addb
adc
test
mov
push
xchg
loop
aaa
roll
imull
pop
xchg
cmc
sbb
mov
outsl
or
adc
repz
arpl
int
mov
shlb
pop
mov
sbb
fstp
call
loopne
mov
dec
xor
sbb
xchg
popa
fdivl
mov
mov
mov
ret
fs
lea
xor
mov
add
fs
test
ret
rcll
cmc
or
sarl
jae
jle
and
cli
adc
fbstp
testb
jmp
push
icebp
lret
fildll
bound
adc
cmp
cmc
xorb
push
iret
dec
data16
push
cltd
sbb
lds
je
jne
insl
push
fsubrs
shlb
mov
mov
and
addb
mov
je
ds
mov
mov
es
mov
hlt
jp
fwait
or
xlat
adc
hlt
insl
jg
dec
into
jb
jne
add
jle
insb
shrl
and
out
mov
ja
pop
jne
cltd
or
mov
mov
orb
iret
mov
adc
xor
ljmp
stos
call
sbb
mov
mov
pop
sub
pop
pop
sub
sub
stos
sub
xlat
mov
jmp
insl
lods
aad
test
sbb
adc
push
sbb
jbe
mov
jb
push
mov
sahf
push
fwait
shl
cld
int3
jg
jmp
lahf
jns
in
pop
daa
fs
popf
xchg
xchg
gs
jae
cwtl
aaa
xor
adc
inc
call
jmp
bound
xor
adc
cmpsl
adc
mov
sub
movb
xor
jae
pusha
push
in
aad
clc
add
inc
ret
lea
movsb
movq
dec
cmp
add
popa
lea
push
loope
repz
gs
dec
xor
xor
xchg
enter
loop
pusha
mov
jmp
jge
fstpl
and
fcoml
mov
stos
pop
aaa
out
dec
adc
mov
lret
enter
scas
addr16
jmp
mov
insl
test
rorb
shrb
cmpsb
scas
pop
in
jmp
das
xchg
jl
dec
subl
sbb
xor
dec
mov
cmp
fsubrs
out
jo
fwait
mov
dec
scas
rclb
lods
push
lock
cmp
mov
jmp
shrl
push
push
jmp
fstl
int
lods
add
push
lock
jecxz
scas
fistpl
xor
and
inc
ficoml
dec
aas
ja
je
stos
ret
in
and
inc
inc
pop
hlt
in
shll
mov
fcoml
outsb
stos
outsl
cmpsb
imul
aam
imul
inc
and
pushf
stos
ret
sbb
push
cmp
hlt
add
jmp
push
push
ds
pop
or
fldcw
mov
ljmp
dec
or
insb
subb
mov
imul
jne
push
push
ds
in
fucomp
aas
mov
push
test
xchg
ret
movl
adc
stos
outsb
ds
ds
push
in
js
add
repz
ret
cmpsl
fucomip
mov
inc
imul
xor
mov
push
leave
ret
jle
xor
pop
out
or
aaa
xchg
jae
add
stos
pop
mov
xor
xor
es
loope
dec
stos
dec
arpl
fs
cmp
daa
push
addr16
lret
and
xlat
or
shlb
dec
push
rcl
pushf
test
shll
xor
mov
repnz
testl
roll
lcall
pop
leave
push
loop
insl
fwait
push
xor
jl
mov
out
mov
mov
mov
dec
fisttpll
cmc
fidivl
push
jl
dec
es
shl
ljmp
dec
cli
cmp
dec
xor
cmp
ds
fdivr
jg
lods
or
or
sub
adc
sbb
or
mov
imul
xor
mov
pop
inc
fwait
sbb
stos
fucomi
jnp
xor
and
mov
rclb
movsb
es
push
or
loope
xchg
cmp
push
aam
insb
popa
rorl
mov
mov
xor
jo
stos
mov
stos
dec
or
ja
test
push
in
inc
sbb
je
cmp
cmpsl
pop
push
outsl
pop
hlt
sub
jnp
xor
xor
lea
push
mov
test
outsb
mov
bnd
add
ljmp
arpl
and
cmp
xchg
repz
pushf
std
xor
jge
push
sbb
cmc
hlt
int
adc
daa
cli
xor
pop
or
adc
arpl
test
jmp
adc
xchg
fisttpl
mov
andb
pop
cmp
cmp
xor
stos
cmpsl
cmp
shr
dec
pusha
mov
sahf
iret
sbb
dec
test
insl
cmp
sbb
sbb
adc
add
test
mov
enter
lahf
mov
add
rclb
xchg
outsl
xor
adc
mov
jg
add
push
cwtl
adc
dec
push
out
inc
sbb
jne
aaa
jp
jl
jno
stos
loope
push
in
pop
xlat
cmpsb
testl
rorb
or
inc
jb
andb
jecxz
jo
xor
aam
mov
sub
ds
lods
add
out
or
in
xor
or
scas
roll
sti
fwait
mov
test
mov
jns
jge
mov
jecxz
lea
cs
ret
pusha
push
mov
in
jecxz
fwait
inc
pop
cld
lahf
xor
push
and
arpl
jmp
mov
ds
lret
outsb
mov
test
cmpsb
or
dec
rorl
mov
push
dec
xchg
shr
push
mov
movsl
hlt
push
fucomi
in
mov
adc
jmp
push
lds
int
jmp
xor
subb
adc
je
xor
shr
and
jnp
leave
fcmovnb
sub
cwtl
and
inc
pop
xor
sub
cmp
push
dec
in
add
test
shrl
jnp
cli
push
mov
enter
mov
in
lods
daa
cmp
or
mov
mov
in
movb
pop
mov
pop
mov
test
xor
cmp
mov
lods
imul
arpl
jb
dec
jge
icebp
fsubs
cmp
xor
dec
ficoml
push
inc
add
stc
jmp
dec
push
and
mov
fwait
hlt
inc
in
cmpsl
fwait
or
jae
xor
dec
es
lcall
or
and
push
or
inc
xchg
lret
aas
fsubrs
mov
sub
or
push
jnp
adc
or
fldt
mov
dec
stos
mov
inc
and
add
inc
push
enter
aas
cltd
test
jmp
add
popf
mov
mov
and
cld
jmp
cmp
mov
push
dec
sub
shl
xor
arpl
clc
cld
jo
test
movb
sub
adc
sub
out
gs
sub
add
mov
rcll
adc
negb
cwtl
jp
inc
xor
and
sub
in
push
mov
mov
xor
xchg
sub
jg
popf
stos
popa
or
dec
push
mov
imul
mov
lahf
dec
add
out
loope
outsb
stos
jmp
xor
insl
test
arpl
sbb
icebp
sahf
cmp
inc
js
sub
aas
jge
dec
sub
xchg
incb
test
adc
aam
mov
movb
inc
pop
bound
in
jmp
je
imul
jmp
push
xor
pushf
dec
sub
pop
add
lret
mov
sub
or
add
pop
xchg
and
rdpmc
mov
out
jns
out
icebp
push
stos
push
mov
aad
adc
push
push
mov
outsl
xchg
push
in
or
inc
mov
fs
int
push
les
outsl
out
adc
fs
mov
loopne
fnstsw
jmp
push
negl
push
dec
cmp
mov
xor
lcall
lcall
mov
icebp
es
insl
push
stc
stos
mov
stos
hlt
dec
loopne
aam
shlb
es
leave
jnp
xchg
roll
jmp
dec
sbb
sub
out
sub
jmp
mov
xor
loopne
out
xor
cltd
cmp
push
aaa
jp
fwait
dec
dec
sbb
and
sbbb
arpl
scas
cld
jmp
leave
stc
leave
sbb
sbb
loope
dec
mov
cmpsb
fdivr
cmp
imul
adc
push
xchg
mov
or
cmpb
mov
stos
mov
popl
adc
adc
out
out
sti
imul
pop
or
adc
ds
add
push
dec
icebp
pop
sub
lcall
aas
stos
cmp
push
inc
push
addr16
or
adc
pop
je
adc
mov
outsl
loopne
xchg
jmp
dec
cmp
mov
les
aaa
or
jmp
lods
push
pop
iret
leave
mov
mov
fsubrs
inc
jne
lcall
fsubr
inc
xor
movsl
push
pop
add
imul
ja
xor
xchg
dec
xorl
and
ret
imul
popf
push
js
dec
pop
xor
cltd
adc
jg
push
in
add
jne
mov
jae
sbb
mov
dec
sbb
push
enter
add
js
xor
faddl
dec
insl
push
pop
fcompl
pop
sbb
icebp
xor
cli
adc
push
outsl
pop
mov
stos
dec
imul
jmp
mov
push
and
xchg
or
jmp
xor
cmp
push
jae
sbb
push
pop
push
or
push
sbb
inc
lods
xchg
mov
push
std
pop
insb
int
addr16
add
ss
or
das
sub
test
push
ret
outsl
xchg
imul
pusha
fwait
fadd
dec
adc
push
xchg
add
jle
jmp
xchg
push
leave
push
sub
mov
bound
xchg
mov
dec
inc
popf
add
cmp
jmp
push
outsb
stc
push
andnps
pop
mov
xchg
fidivrs
rcrl
push
jp
neg
mov
and
inc
mov
lahf
popf
stos
and
jmp
xchg
out
loope
loopne
fsubrs
and
mov
sbb
push
jge
sub
or
dec
stos
aaa
in
push
mov
pop
mov
and
mov
in
orb
int
hlt
loope
mov
push
pop
out
xchg
jl
cltd
and
cmc
loop
mov
xor
inc
daa
push
or
cmp
push
push
adc
push
xor
jbe
data16
pop
xor
stos
jle
mov
push
loope
outsb
inc
mov
mov
push
das
mov
adc
lock
mov
sbb
pop
jns
jno
push
jmp
pop
lods
push
cmp
outsl
outsl
xor
or
push
inc
push
jmp
sub
mov
push
xor
hlt
inc
pop
jns
xchg
movsl
add
mov
xor
pop
mov
adc
xchg
push
mov
xor
pop
push
and
or
add
js
push
clc
jg
push
inc
aam
imul
jmp
movsl
sbb
adc
hlt
push
sbb
jg
push
and
inc
sub
stos
fistps
or
xor
in
int3
jb
xor
and
mov
cmpsb
or
push
stos
lret
ljmp
pop
pushf
dec
xor
scas
push
sub
jmp
es
push
imul
mov
mov
daa
fdiv
lods
loopne
cmpsb
outsb
mov
add
cmp
stc
les
dec
pushf
inc
fiadds
stos
push
outsl
inc
and
adcl
insb
jge
pop
push
pop
adc
xchg
or
arpl
dec
jmp
je
jmp
xor
div
mov
sub
shll
dec
stos
dec
dec
imul
inc
jle
into
sbb
jmp
jbe
ficomps
sbb
les
jne,pt
test
cmp
daa
imul
mov
add
push
lods
mov
dec
mov
fwait
xchg
lahf
fidivl
xchg
shl
fsubs
and
bound
rolb
dec
ret
and
inc
shll
scas
sbb
dec
push
cmpsb
jbe
lock
gs
adc
and
jo
test
ret
aad
sarb
inc
test
push
push
and
fisubs
rdmsr
mov
jmp
aas
sub
dec
cwtl
mov
movsb
adc
and
testl
cld
in
add
jg
push
cltd
ljmp
pop
aam
cmpsl
aas
push
mov
bnd
xor
pop
ret
adc
shll
add
icebp
push
push
adc
push
dec
add
push
push
cld
xor
inc
mov
inc
jg
xlat
sbb
jno
push
push
sub
push
add
je
mov
dec
bound
lahf
xlat
mov
push
inc
add
subb
pop
xchg
cmp
scas
sbb
dec
cltd
and
sti
inc
mov
or
xchg
xchg
add
loope
imul
push
xor
cmpsl
and
mov
mov
stos
fwait
xchg
inc
leave
mov
add
sub
dec
dec
in
xor
in
rcl
out
loope
jb
push
xchg
jl
ret
scas
sbb
or
cmpsb
jo
pop
lods
lods
ret
dec
dec
push
dec
lods
jg
xor
ja
inc
lods
in
mov
adc
dec
pop
cld
hlt
out
push
jg
xchg
pop
mov
fildl
sbb
cmp
jle
test
enter
loop
je
dec
in
dec
push
and
lods
fwait
int3
ficoml
add
mov
and
cwtl
add
mov
mov
gs
jl
push
cmp
and
and
in
dec
mov
in
aad
xchg
lcall
ret
loopne
mulb
leave
jo
lret
mov
fistps
push
xchg
stc
lods
ds
cmp
insl
xor
xchg
in
test
mov
xchg
jle
out
push
icebp
xchg
push
sub
pop
adc
dec
mov
xchg
imulb
pusha
out
stos
sbb
stos
push
pusha
and
mov
hlt
jbe
lcall
mov
pop
push
sti
mov
sahf
inc
movsb
pop
lods
stos
jmp
test
pop
pop
popa
fwait
fwait
ljmp
xor
test
lods
loope
jb
mov
sub
cmc
cmpsl
mov
hlt
push
es
mov
mov
adc
dec
push
aaa
push
sub
xlat
dec
jmp
test
sbb
sub
cld
push
shr
adc
mov
mov
fcomps
jmp
lock
xor
int
cmp
loop
mov
fildll
outsb
dec
test
xchg
mov
and
stc
jg
xor
pop
sti
mov
scas
sub
lods
sbbb
mov
ja
fimuls
fbld
or
adc
pop
aaa
sub
sbb
push
mov
xor
xchg
mov
sub
xor
stos
adc
jae
pause
lds
xor
and
cmpsl
push
std
popf
push
sarb
fiadds
xor
cmpsl
das
hlt
fsubrp
inc
scas
imul
jge
andb
idivl
push
add
hlt
sbb
inc
icebp
insl
shr
xchg
mov
cs
popf
inc
or
adc
sbb
jae
jmp
push
lods
fidivl
repnz
daa
mov
push
lods
jns
jmp
in
shll
jno
push
or
aaa
into
sbb
sahf
inc
imul
xchg
mov
repnz
lods
dec
aam
stc
stos
push
mov
orl
fs
mov
nop
push
ljmp
add
cmc
movb
adc
sub
jmp
jle
pop
lahf
adc
cmc
mov
imul
add
scas
popa
mov
aas
outsl
pushf
mov
mov
leave
push
pop
popa
cltd
leave
rcr
sbb
xor
cmpb
mov
imul
jp
sub
sbbl
pop
xor
lods
inc
xor
fistl
aad
inc
lcall
dec
mov
arpl
cld
push
xchg
sti
or
and
vpshufhw
repnz
sub
stos
enter
pop
subb
lds
mov
or
xor
ljmp
xchg
or
xor
push
xor
call
push
les
inc
shrl
in
loop
sar
icebp
jecxz
test
lret
push
add
jb
dec
repnz
cmp
div
iret
scas
cmc
xchg
or
push
outsb
and
es
das
fbld
add
pop
sbb
fwait
stos
mov
stos
mov
lret
pop
sub
adc
imul
push
repz
repz
arpl
fsubr
cmpsl
sbb
push
jne
mov
or
xor
add
xor
jge
cmp
or
popa
in
jmp
adc
xor
jecxz
imul
iret
fchs
out
mov
call
push
sarl
xchg
shrb
dec
gs
test
imul
out
sbb
mov
ficompl
jb
xorb
stos
cs
mov
rorb
pop
ja
dec
mov
stos
sarb
xor
xor
nop
add
jo
inc
mov
sbb
pusha
das
adc
in
sbb
jae
push
inc
mov
cmp
nop
adc
ffree
sub
xor
outsl
push
test
push
out
mov
push
iret
and
fsubp
xor
js
out
fcmovne
inc
stos
repz
adc
ljmp
loopne
xchg
push
stos
mov
jl
jecxz
adc
js
ret
inc
rcll
push
shll
rolb
arpl
and
aas
stos
imul
clc
jnp
negl
aad
add
nop
enter
std
mov
push
pop
mov
sub
shlb
xchg
sub
mov
pop
push
test
jo
pushl
cmpsl
or
push
lods
popa
pop
int
cs
subb
mov
inc
inc
push
fs
iret
cmp
test
pop
jmp
xor
dec
xchg
fidivrl
jmp
clc
mov
xor
aaa
lret
mov
push
jae
imul
pushf
xor
pop
mov
sub
sbb
sbb
adc
jb
negb
mov
jecxz
push
aam
mov
in
arpl
push
mov
pop
sub
push
fcoms
addr16
sahf
mov
or
std
in
pop
dec
cwtl
or
push
stos
in
fdivrl
jmp
shl
push
outsb
mov
ret
and
ss
pop
insb
jge
jb
shll
mov
cmp
repz
adcl
cld
stos
andl
stos
push
sbb
jmp
jne
std
fstpt
test
inc
mov
pop
mov
push
in
cmpsl
shl
cmp
ja
push
sub
stos
sbb
testb
inc
sbbl
push
js,pt
cmc
or
outsl
sahf
jns
lock
mov
leave
sti
popa
cwtl
in
popa
icebp
imul
shll
lock
inc
push
mov
rolb
xor
fnstcw
stos
mull
mov
lock
mov
push
imul
repnz
in
stc
mov
pop
jne
xchg
stos
push
roll
bound
mov
cmpl
xchg
mov
dec
notb
sub
fs
leave
in
jp
add
lcall
sub
jecxz
add
int3
push
adc
sbb
mov
jge
in
dec
orb
cmp
xchg
inc
std
outsb
push
inc
ret
outsb
pop
sub
inc
in
ja
add
mov
sub
lods
cmp
lcall
xor
jmp
fs
stos
mov
dec
mov
jmp
pop
cmpsl
mov
push
pop
shll
xor
es
jae
test
push
stos
hlt
mov
pushf
or
cmpsb
cmc
mov
or
sub
xor
jmp
cmp
mov
pop
into
push
pusha
outsl
shrl
call
add
dec
inc
pop
out
js
cmpsb
and
repnz
scas
out
mov
stos
jle
xchg
std
shl
enter
sub
shll
mov
cs
xor
pop
sub
stos
stos
cmp
and
out
jne
ljmp
and
outsl
xchg
in
or
dec
push
frstor
in
jg
sti
stos
and
jne
shl
ds
jge
stos
jnp
mov
mov
push
iret
mov
dec
leave
or
in
jno
xchg
mov
mov
stos
repnz
push
mulb
mov
push
sub
test
psrlw
xchg
cltd
sbb
jp
xchg
fwait
inc
insl
xchg
jno
cmp
out
stc
adc
mov
push
push
hlt
sbb
xor
test
fisubrs
push
test
out
rolb
jge
or
jae
jmp
scas
dec
ljmp
xchg
pop
movsl
dec
push
jl
mov
daa
xchg
sahf
jl
sub
cmpb
arpl
add
inc
in
std
jmp
stos
inc
dec
int3
jns
xchg
pop
xor
das
js
shlb
mov
push
and
repz
jle
adcb
push
aad
lcall
xchg
inc
fcoms
cmpsb
lods
repz
cli
jno
in
dec
inc
out
mov
incb
pop
xor
pop
pop
mov
xor
add
fwait
lret
aaa
or
xchg
xchg
scas
mov
jl
xbegin
jp
sti
xchg
lret
cmp
xor
and
jns
js
and
lcall
or
in
roll
movl
imul
pushf
and
and
mov
stos
or
gs
xor
push
fnsave
pusha
cmc
or
jecxz
sti
adc
jbe
rclb
or
adc
lret
rolb
jp
andb
pusha
fcoml
movb
xor
rolb
stos
shll
sbb
mov
xor
ss
js
das
ds
adc
mov
add
pop
ja
sub
icebp
jo
cltd
pushf
sahf
or
shrl
and
ficoms
adc
pop
stos
aam
mov
xchg
cwtl
cmp
jmp
sub
jl
fstpt
add
rolb
inc
rcll
dec
push
dec
cwtl
inc
popf
scas
insl
or
gs
mov
push
dec
xor
les
mov
push
fists
stos
pop
rclb
pushf
loopne
push
in
adc
daa
fwait
sub
fisubrl
xchg
xor
inc
xchg
push
rclb
rorb
std
push
loope
and
xor
cmp
int3
hlt
dec
hlt
sbb
std
jmp
cld
push
sub
inc
jbe
sbb
or
push
rcr
daa
mov
xor
jge
lods
pop
cwtl
inc
idivl
xchg
sub
stos
out
add
push
inc
cmp
call
push
lret
fst
sti
rolb
lahf
shlb
mov
cmp
insl
notb
mov
mov
sbb
xchg
mov
mov
cwtl
and
jmp
mov
das
loop
fidivl
adc
pop
pop
sbb
mov
fisubrs
loop
and
sub
inc
xchg
or
and
outsl
fs
dec
pop
enter
imul
or
clc
cwtl
push
mov
fs
xor
push
dec
loope
ljmp
sub
sbb
repnz
and
outsb
cmpl
sub
int
xor
flds
lret
inc
stos
loope
push
xchg
push
adc
jbe
loop
or
in
push
pop
mov
outsb
mov
ljmp
add
push
in
and
push
pop
outsb
mov
dec
sbb
test
je
push
xchg
dec
add
or
into
push
dec
aas
cld
jmp
mov
lcall
icebp
and
movsl
lea
jbe
fwait
aam
js
cmp
subl
loope
lret
inc
mov
inc
dec
gs
inc
sbb
xchg
push
daa
push
das
dec
mov
addr16
push
fcoms
mov
lret
cmp
mul
add
mov
lds
xchg
ljmp
fmul
arpl
cli
cwtl
call
pop
cld
push
std
push
xor
orps
mov
dec
push
sbb
jb
xchg
mov
sub
jle
scas
xor
mov
mov
lock
mov
xor
inc
shlb
push
popl
sub
rolb
ljmp
fidivrs
mov
stos
mov
adc
xor
fwait
jnp
xor
dec
push
es
xchg
inc
push
aad
dec
xor
std
pop
push
pop
lcall
andl
stos
mov
or
scas
pushf
mov
push
lods
jp
and
or
dec
adc
or
xchg
add
mov
cmp
pushf
ljmp
mov
and
hlt
imul
roll
add
sub
push
enter
out
cmpsl
cmpsb
ja
addr16
inc
push
cmc
jmp
push
lcall
arpl
and
or
mov
pop
adc
shrl
loop
imul
dec
mov
jge
cs
lods
adc
pop
push
jmp
sub
mov
sub
mov
in
lea
mov
dec
stos
adc
inc
dec
pop
push
outsb
dec
push
and
shrl
jmp
jmp
call
movsl
loopne
or
test
push
cwtl
xlat
xor
cld
fcomi
mov
mov
mov
fcmovbe
stc
iret
pop
push
ss
sbb
inc
stos
ja
push
shufps
ds
mov
mov
sub
ds
xor
add
push
xchg
hlt
sbb
xchg
fldt
sub
pop
jl
shlb
pop
push
or
ret
arpl
out
push
in
or
xchg
xor
jl
insl
jl
adc
fildl
add
sub
je
test
mov
notl
lahf
andb
jns
pop
stos
andl
push
mov
add
repz
popa
out
out
add
pop
aaa
xor
dec
loope
stos
shlb
test
jmp
rorb
les
mov
and
sub
mov
andb
sub
or
or
aaa
push
and
inc
fndisi(8087
scas
jle
pop
bound
stos
mov
xor
cmc
daa
int
xchg
shrb
lds
jmp
iret
into
or
adc
push
jmp
int
xor
xchg
xor
push
cbtw
mov
lea
stos
pop
mulb
and
mov
mov
inc
mov
pop
cmp
bound
shr
ret
sarb
xor
jg
loop
dec
or
nop
into
pop
out
data16
jae
cmp
cmpsb
iret
jmp
xor
cmpsl
add
ud0
jmp
mov
out
mov
cmp
loop
cmp
mov
cs
shrb
mov
push
xor
sub
icebp
sub
stos
push
or
jmp
pop
or
push
shll
cmp
pop
push
mov
or
xor
test
sbbl
loope
lods
push
dec
iret
imull
pop
gs
pop
mov
dec
insl
dec
mov
mov
sub
add
mov
or
ja
add
mov
xor
iret
ljmp
das
adc
xchg
sti
xor
fistpll
popa
push
jecxz
adc
sbb
jge
xor
xchg
dec
push
pop
and
adc
push
xchg
pop
movb
jge
mov
outsb
and
stos
mov
xor
aam
push
sub
jge
movsb
pop
add
rcll
mov
push
mov
fxtract
mov
jmp
pop
aas
xchg
inc
clc
sub
add
repz
stc
bound
xor
in
adc
dec
push
push
shr
mov
negb
mov
stos
and
sub
test
stos
push
mov
push
and
shrl
lods
mov
jmp
jae
subb
inc
xor
loopne
stc
add
scas
fwait
push
inc
popa
inc
adcl
mov
push
push
or
movsl
lods
fstps
loope
stos
loope
in
out
in
cltd
sub
pop
push
adc
je
pop
fdivs
push
cmp
lods
insl
addl
and
inc
inc
mov
dec
jmp
xor
scas
pushf
stos
pop
xchg
mov
mov
call
cs
mov
cmp
lds
jb
aaa
push
inc
pushw
aas
nop
fimuls
adc
cmp
jmp
scas
std
cmc
xchg
or
pop
cld
sub
xchg
fidivl
push
mov
out
aas
scas
stos
sub
dec
mov
xchg
mov
movsb
sub
inc
imul
cmp
or
pop
loope
and
cmp
pushf
stos
pop
stc
push
mov
clc
loop
lea
inc
mov
rcll
xchg
jl
xor
jge
pop
cltd
loopne
xchg
push
lcall
cltd
jmp
cwtl
sub
push
mov
hlt
push
cmpsl
add
jle
out
dec
xor
stos
ret
push
push
in
sub
jl
and
adc
ljmp
fsubrl
hlt
push
xor
ja
ret
testl
or
test
aad
iret
push
rcrb
add
xor
lahf
pop
cmc
es
sbb
or
jl
inc
xor
pop
lahf
sbb
dec
movsb
dec
push
add
dec
repnz
jmp
gs
out
rcll
cmp
cmp
shlb
mov
stos
pop
xchg
jecxz
imulb
inc
push
sarl
sub
sbb
loop
xor
jb
fisttps
mov
aaa
push
in
cmc
mov
or
jle
jmp
xor
mov
push
push
pushf
push
pop
adc
adc
std
stc
ficoml
movsl
andl
cmp
xor
xchg
push
cmp
cltd
or
and
shlb
ljmp
push
mov
sub
sbbb
ret
jns
add
addr16
test
into
test
mov
sbb
and
sbb
js
jge
jmp
and
fwait
decb
adc
gs
loopne
aas
mov
rep
ficomps
mov
fildl
subl
es
inc
repnz
fwait
mov
and
pop
xchg
xor
jns
xchg
add
mov
and
aam
jnp
dec
jbe
inc
push
out
inc
push
or
stos
data16
cwtl
inc
lods
cmp
arpl
mov
cmp
in
pop
sbb
into
mov
mov
jo
mov
xchg
lock
sti
push
cltd
movsl
clc
xor
jmp
cmc
xchg
or
cmp
outsb
sahf
in
in
cmpsl
add
xchg
imul
div
pushf
push
xor
loopne
or
jae
imul
push
mov
cmp
dec
aad
sbb
repnz
mov
or
ret
fldt
jg
arpl
cmp
xor
out
push
sbb
insl
js
jg
out
das
cmp
das
lods
add
xor
loopne
punpckhdq
dec
lret
aaa
iret
stos
inc
jbe
mov
shlb
jnp
cld
lock
lea
push
orl
dec
jb
sub
insb
roll
lds
icebp
xor
stc
pop
hlt
lret
lret
fmulp
push
add
pop
push
cmpsl
adc
fbstp
in
shll
loopne
pushf
xor
out
les
test
subl
adc
xchg
mov
mov
mov
fcoms
xchg
xor
adc
icebp
fisttpll
jae
in
in
sbb
idivb
sbb
ret
push
ss
mov
rolb
xor
shrl
cld
stos
rolb
pop
out
rol
jmp
jb
xchg
inc
aas
fwait
and
sub
or
jl
xor
movsl
repnz
mov
sbb
lock
mov
pop
xor
jmp
lret
push
or
jno
into
pop
jmp
inc
loope
push
jmp
jmp
cmp
jno
push
ds
or
fst
mov
push
xor
hlt
ss
push
adc
push
sub
cld
cwtl
sarl
leave
insb
jnp
push
stos
int
xchg
and
iret
lahf
pop
test
mov
ljmp
push
xlat
mov
add
lret
call
jmp
inc
inc
lds
jae
lods
and
inc
sbb
push
stos
inc
out
add
mov
jg
lds
lea
lea
test
icebp
sub
fwait
jns,pn
jae
insl
ja
mov
rorl
cmp
xchg
xchg
mov
adc
mov
jmp
out
sbb
aad
loop
add
xchg
xor
popf
xchg
adc
imul
mov
pop
leave
push
leave
test
int
xor
mov
sbb
std
stos
inc
jbe
lods
push
push
mov
in
call
sub
xor
ss
gs
outsb
stos
add
jmp
out
inc
daa
pop
out
cltd
mov
in
mov
cmc
lea
xor
pop
dec
mov
stos
push
push
test
testb
iret
sbb
sbb
in
adc
les
adcb
xchg
das
mov
sub
lcall
sbb
mov
fimull
cmc
xlat
dec
movsl
jnp
sub
imul
lahf
loope
ret
dec
imul
jns
scas
pop
dec
adc
mov
mov
adc
push
xor
repz
in
pusha
pop
xchg
xor
daa
insl
add
je
imulb
add
fisubl
xor
xor
mov
push
mov
mov
sbb
popf
call
stos
movsb
jle
and
push
andl
imul
xor
aad
sub
push
add
mov
dec
out
mov
add
int
hlt
imul
dec
and
or
pop
mov
jbe
adc
lock
rcll
pop
iret
push
pop
mov
mov
or
arpl
negl
mov
iret
hlt
pop
sub
jb
jae
shrl
std
xor
test
les
ljmp
mov
imul
loope
push
ljmp
clc
xchg
sub
inc
dec
fists
ja
sub
ds
imul
and
mov
cmp
inc
popa
xor
xchg
imul
jmp
sub
imul
xor
out
fsubrl
xchg
outsl
cmpsb
movsb
jmp
or
inc
negl
imul
imul
movsb
jecxz
dec
orb
inc
ja
cmc
sub
push
jnp
push
loopne
fcmovbe
fcomps
jmp
loope
adc
lock
sub
xor
and
loopne
add
fidivrs
arpl
cmp
xchg
es
lds
pop
mov
dec
xor
xchg
call
aas
stos
xor
push
in
imull
jg
jno
and
iret
adc
mov
jmp
or
mov
into
out
xor
gs
aam
sub
sti
call
xchg
in
inc
aaa
neg
fwait
lods
or
roll
stos
mov
xchg
push
es
popl
das
lds
cmp
mov
bound
loopne
push
mov
xchg
mov
cs
cwtl
cmp
lods
pop
add
pop
lock
inc
mov
pushf
fnsave
fsts
inc
pop
inc
les
add
ds
mov
cmp
mov
in
cli
ljmp
xor
repz
and
mov
xchg
push
and
out
inc
mov
xlat
lds
push
pop
and
lds
dec
add
fsubrs
ret
stc
sub
cmp
pop
or
pushf
push
cmp
xchg
xor
jbe
mov
jmp
repnz
jmp
fstps
sbb
loopne
outsl
push
adc
lock
cmc
jp
ret
jmp
clc
les
in
jl
push
and
out
xor
cmp
out
xor
dec
pop
lret
divb
pop
cli
pop
dec
mov
push
cmc
lcall
push
mov
mov
mov
and
push
outsb
addr16
dec
mov
jle
aad
and
push
pushf
xor
sbb
sub
pop
dec
xor
rorb
xchg
ja
dec
add
xor
arpl
push
test
mov
pushf
sti
and
jbe
and
sub
stos
dec
add
lret
xor
movsb
pop
jle
push
cmp
adc
dec
jmp
mov
cmp
jne
in
push
push
inc
push
cmpb
and
imul
aam
adc
enter
dec
leave
stos
arpl
fwait
inc
call
inc
add
mov
lea
sbb
push
xorl
movsl
cmp
lods
and
out
mov
xlat
ljmp
xchg
sbb
add
cmp
inc
pop
push
add
stc
dec
sahf
int3
sbb
ljmp
mov
and
and
in
stos
fistpl
test
out
cld
movsb
cmp
and
loopne
icebp
push
and
push
inc
xor
sub
fsubs
adc
stos
add
dec
xor
mov
dec
movsl
push
pop
sti
dec
or
movsl
cmpsb
fdivs
sub
dec
mov
pop
lea
mov
pop
jb
in
adc
mov
and
jmp
jo
xlat
mov
shr
sbb
xor
push
push
ffreep
and
jmp
repz
imul
lahf
jmp
jno
push
pop
or
stos
popa
or
xchg
testl
cmp
jbe
pop
neg
jno
les
js
sub
jecxz
jmp
add
push
daa
aad
pop
sbbl
fldt
push
sub
inc
subl
mov
stc
push
inc
gs
pop
inc
adc
push
adc
and
cmp
addl
jmp
int3
cmp
dec
sub
jl
fsubrs
pop
lret
ds
sub
add
lcall
push
and
pop
into
ss
or
imul
mov
scas
aam
jmp
int
jmp
and
stos
and
lea
mov
jne
test
dec
mov
aaa
pop
loopne
arpl
xchg
aas
shlb
pop
inc
dec
and
xor
icebp
cmpsl
push
sbb
pop
push
add
out
sbb
push
sbb
test
sahf
popa
stos
jle
shll
pmaddwd
push
or
sub
das
mov
aas
push
in
stos
cmp
mov
pop
fidivl
test
cs
rcrl
mov
mov
xor
mov
sbb
pop
mov
and
fisubl
enter
shr
xchg
mov
imull
dec
jmp
cmp
insl
xchg
cmp
push
gs
insl
sub
inc
mov
mov
push
push
pop
pop
test
imul
mov
cwtl
pop
test
xchg
loope
xor
repz
mov
mov
adc
sub
jo
mov
stos
or
inc
cmp
jge
adc
push
lret
outsb
and
iret
mov
xchg
fisttps
ljmp
lods
jmp
hlt
leave
pop
add
into
push
jb
loop
stos
jnp
lds
mov
push
pop
pop
push
dec
lret
sub
cwtl
popf
sbbl
jl
aas
stos
lds
dec
jns
sbbb
jbe
jae
test
push
test
pop
out
pop
adc
nop
sahf
xor
mov
mov
xor
mov
into
dec
ljmp
sub
insl
and
loopne
xchg
jae
mov
loopne
fnsave
fcoml
ja
xchg
dec
xor
sbb
enter
or
mov
xor
jg
lods
ret
scas
xchg
push
mov
fsubr
xchg
cmp
and
inc
popa
sti
pop
jmp
mov
mov
aaa
and
int
jnp
and
outsl
push
pusha
jmp
in
push
jg
pop
jmp
ffreep
ljmp
int3
lods
out
mov
lret
jae
clc
push
sahf
xor
cmp
outsb
xchg
add
push
mov
dec
cwtl
xor
mov
mov
jno
out
and
mov
push
inc
lcall
cs
lret
add
xchg
xor
repnz
xchg
popa
mov
cmpsl
shlb
cmp
pop
and
stos
das
pop
cmp
sbb
xlat
pop
stos
sub
sub
cltd
stos
sub
adc
ss
add
testb
mov
outsb
fldcw
test
sbb
test
or
stos
scas
xlat
pop
iret
ljmp
adc
mov
fcmovnbe
dec
loop
push
mov
inc
cs
jge
in
loop
adc
sbb
mov
lock
push
outsl
jp
pmulhw
lock
das
sbb
and
sub
xor
xor
sbbb
xchg
mov
jmp
jae
xor
and
inc
shlb
sbb
fwait
or
cvtpi2ps
push
push
dec
push
or
iret
mov
pop
inc
jmp
sub
xlat
mov
xchg
ret
adc
sti
lahf
xor
out
cmpsl
push
xor
lock
inc
add
adc
inc
pop
das
jmp
ret
insl
out
loope
push
mov
movsb
das
pop
push
ror
xor
imul
loop
sub
cmp
dec
push
cltd
dec
and
jno
and
xor
stos
mul
xlat
or
subb
out
lret
adc
lea
jnp
out
add
outsl
sbb
dec
stos
aas
xor
stc
jmp
push
inc
orb
and
sbb
dec
in
mov
mov
lea
scas
sbb
not
rcrb
push
aas
cmc
fists
mov
xor
scas
mov
inc
add
enter
fucom
adc
mov
call
les
arpl
mov
pop
insb
cmp
sbb
mov
stos
push
ret
jno
insb
pop
loopne
mov
add
inc
mov
pop
aas
sar
lods
jmp
outsb
outsl
xlat
xchg
test
ljmp
popf
dec
lret
mov
mov
popa
xor
pop
leave
xchg
mov
xor
in
rorb
scas
enter
loope,pn
add
xor
pop
shll
inc
out
xchg
outsl
inc
je
test
push
sub
korw
mov
dec
xchg
add
decl
xchg
or
out
stos
add
pop
out
push
imull
sub
popf
or
xor
sahf
mov
mov
pop
pop
pop
in
xor
jge
stos
xchg
sub
sbb
decb
outsb
ljmp
in
mov
lret
pop
adc
add
push
jge
xchg
pop
nop
ficoml
stos
mov
mov
subb
mov
and
cmpsb
push
dec
inc
dec
push
in
jl
inc
lret
push
inc
mov
adc
pop
scas
mov
iret
stos
fisttps
call
stos
add
mov
enter
mov
pop
add
stos
sbb
or
xor
cmp
sti
in
jmp
push
loope
scas
inc
or
jmp
add
gs
push
jae
out
push
push
jp
mov
dec
outsl
sbb
push
or
imul
sub
icebp
dec
rorl
ljmp
mov
dec
push
data16
jmp
insb
scas
mov
push
divl
leave
rorl
pop
mov
mov
inc
cmp
sbb
repz
sub
in
movsb
out
arpl
xchg
lds
ds
cmp
orb
sub
push
pop
mov
pushf
inc
mov
iret
subl
cld
push
xor
mov
cmp
stos
push
lret
dec
into
loopne
sahf
and
stos
rorb
adc
xor
mov
pop
mov
xor
jmp
push
and
pop
test
flds
or
fmuls
sbb
cld
xorb
aad
and
xor
jnp
pop
dec
loop
xor
and
fistpll
inc
lock
mov
sub
and
aad
xchg
sub
xchg
test
push
lret
jmp
loope
push
fidivs
push
adc
fcompl
pop
mov
sub
lret
push
out
sar
daa
aas
push
xor
fucomp
inc
mov
adc
jb
gs
inc
jmp
bound
std
test
pop
pop
jge
push
xchg
push
and
in
sbb
inc
cld
orl
inc
xor
sbb
inc
mov
jmp
mov
idiv
outsb
mov
stos
daa
mov
dec
fndisi(8087
jnp
push
add
testb
push
cmp
jmp
xor
cld
icebp
sub
dec
lea
imul
popf
fwait
icebp
test
decl
mov
subl
ret
xchg
pop
adc
daa
push
movsb
movb
dec
adcl
loopne
shld
movsl
pushf
stos
dec
shlb
jmp
nop
add
lock
xor
mov
sti
gs
inc
jl
cmp
xchg
out
and
popl
outsb
fcomps
xchg
aaa
cld
mov
xor
iret
out
inc
fsubl
xor
mov
pop
inc
inc
lods
mov
sub
popf
stos
xor
jns
lcall
sub
mov
lea
push
icebp
or
nop
dec
mov
adc
dec
fwait
loopne
inc
mov
mov
add
lret
xor
add
mov
stos
xchg
loop
jb
cwtl
jmp
sahf
loope
push
aas
dec
inc
push
pop
in
fs
movsl
jne
xor
push
mov
xchg
stos
dec
ja
das
es
or
cs
sub
out
mov
sbb
cmc
push
rcl
dec
outsl
and
aam
bound
int3
int3
pop
jge
jmp
mov
mov
test
sub
or
jmp
and
push
cmc
push
repnz
mov
pop
xor
dec
sbb
xchg
call
xor
push
xor
add
jns
pop
inc
cmp
pop
push
jge
dec
sbb
or
jo
mov
xchg
sbb
mov
cli
stos
xor
push
stos
stos
aas
cld
xor
loop
addr16
aam
shl
push
push
xchg
lcall
frstor
mov
push
inc
jmp
inc
sbb
xor
inc
pop
jmp
lret
rcll
out
xchg
push
push
push
jb
sar
mov
inc
in
rorw
xchg
clc
stc
imul
divl
jge
jo
addr16
rolb
xor
adc
mov
mov
jae
inc
stos
push
jns
xor
data16
call
testl
pop
mov
scas
data16
pop
fs
xor
jns
pop
push
popa
jmp
frstor
sub
push
or
lock
mov
fcoml
xchg
bound
stc
outsl
aam
ret
and
sub
imul
in
daa
add
stos
sbb
adc
imul
inc
mov
es
movl
cmp
sub
jmp
jl
vandps
mov
inc
repz
jmp
addr16
xor
mov
inc
inc
sub
cwtl
xor
gs
adc
jg
cwtl
outsb
pop
cmp
or
imul
ja
jae
xchg
lds
xor
mov
in
pop
cmpb
icebp
push
outsl
push
fwait
add
loope
push
sub
cli
scas
and
sbb
sbb
mov
inc
divl
icebp
inc
adc
jno
bound
inc
pop
test
into
outsl
sub
add
jb
xchg
sbb
push
stos
sub
aad
ja
fimuls
lods
sub
mov
das
xchg
adcb
ss
adc
aas
dec
mov
sub
adc
cld
fyl2xp1
stos
inc
in
sub
aad
pop
push
dec
push
push
xchg
jg
hlt
fidivs
add
and
fsts
dec
mov
dec
push
test
sbb
jmp
mov
addr16
cmp
pop
es
divl
and
cmp
jp
rcll
push
cld
lds
cwtl
dec
jmp
aas
sub
mov
addr16
mov
mov
mov
lcall
fucomi
test
xor
jno
xchg
push
cmpsb
mov
stos
call
inc
jecxz
call
xlat
or
xchg
add
mov
adc
test
jns
jmp
stos
fs
pop
leave
out
cli
lods
xor
gs
orl
mov
push
push
sub
mov
xor
dec
mov
movsb
or
xor
movl
je
sub
mov
mov
jne
lahf
notb
jl
sub
add
cmp
dec
cmp
mov
cwtl
pushf
into
jg
jmp
dec
leave
xor
push
jns
stos
aas
mov
int3
loopne
dec
push
mov
clc
mov
add
imul
jmp
mov
pop
pop
push
repz
gs
sbb
inc
dec
popa
lea
stos
cwtl
jae
dec
filds
jae
xor
pop
cli
loopne
cmp
insl
shrl
popa
out
dec
es
push
sarb
mov
xchg
pop
mov
jbe
push
scas
sub
test
pop
mov
adc
nop
arpl
test
adc
push
push
daa
jbe
xor
pop
je
mov
jnp
enter
loope
test
insl
adc
cmp
ds
and
xor
mov
cmp
sub
orb
xchg
sbb
out
lret
jmp
and
jmp
clc
mov
sbb
bound
ret
cmc
xchg
xor
stos
and
sub
test
mov
push
aad
addr16
ljmp
xor
sarl
mov
leave
fidivrl
arpl
jmp
cmpsl
stc
push
inc
push
stos
imul
jb
ss
orb
dec
loop
jmp
and
aam
adc
sbb
mov
out
dec
ret
cmp
pand
jne
mov
stc
jmp
pop
jae
adc
notb
sub
and
mov
push
push
pop
hlt
lcall
mov
stos
push
repz
xlat
or
sarl
pop
xchg
add
xor
addr16
and
loopne
shll
enter
sbb
mov
inc
cmp
mov
cmp
aam
mov
cli
jo
xor
xor
je
push
xchg
out
inc
sub
pop
out
sub
dec
mov
cmp
jo
inc
enter
ret
cmpsb
and
int3
cs
cmp
pusha
sbb
cwtl
lds
mov
pop
gs
mov
int3
leave
mov
out
sub
xor
lods
adc
xor
andb
call
jae
xchg
in
jp
push
mov
cmp
xor
dec
push
cli
dec
xor
scas
sub
jmp
fcmovu
cmpsl
repz
dec
nop
inc
hlt
xor
insb
repz
adc
and
xchg
repnz
ret
push
sbb
push
mov
mov
nop
lret
xorb
cmp
and
xor
fwait
imul
inc
push
jp
jb
or
adc
in
hlt
mov
push
push
adc
mov
stos
and
ret
sahf
outsb
cmp
aas
fldcw
aad
xor
cmp
stos
rolb
pop
ljmp
add
addr16
stos
xchg
movsb
inc
cmp
jl
pop
and
insb
mov
or
rcr
mov
adc
test
scas
push
mov
faddl
stos
push
sbb
add
fmull
lahf
sbb
adc
and
loopne
mov
cmpsl
xor
lds
jecxz
stos
cwtl
dec
cmp
or
xor
add
ret
movsl
xorb
mov
and
xor
jnp
popa
lock
lock
rcrb
push
std
and
movq
xor
xchg
push
inc
das
nop
lret
dec
mov
cmpsl
in
xor
ror
outsl
mov
hlt
fildll
push
jl
test
or
test
sub
jecxz
and
push
adc
mov
stos
mov
cli
jmp
stos
lcall
xor
aaa
mov
push
in
cld
pop
jmp
dec
xchg
push
adcb
add
dec
pop
inc
push
jmp
sbb
xchg
rcll
js
sbb
sahf
loop
out
mov
push
test
mov
push
fildl
cmp
fsubrp
dec
xor
mov
jg
pop
jmp
fwait
movsb
loope
jmp
lods
test
xor
mov
xchg
test
test
daa
jp
fistl
inc
cmp
enter
or
ljmp
jne
jo
stos
sub
mov
movsl
js
cmp
jl
and
movsb
pop
mov
jae
push
movsb
mov
jmp
fdivl
das
lock
lock
adc
test
adc
jmp
or
sub
lret
push
int3
dec
jg
xor
mov
les
and
movsl
xor
adc
ret
lret
scas
ljmp
push
jl
cmc
xor
push
ds
fildl
stos
loop
fsub
shrl
push
int
or
or
insl
jmp
xor
test
mov
mov
mov
stos
add
lods
jb
pop
jbe
and
mov
js
or
mov
inc
call
pop
push
add
xchg
pop
sbb
push
jne
push
sbb
loope
ss
mov
pop
mov
shl
std
mov
loopne
je
push
cltd
dec
pop
insb
mov
ljmp
jo
call
aaa
out
lock
dec
nop
mov
xchg
pop
popf
jne
xor
out
mov
sbb
in
das
js
in
icebp
cltd
imul
xorl
sub
int
jmp
dec
cmc
out
ja
mov
mov
dec
xor
fistpl
mov
idivb
leave
out
scas
sub
imul
push
jnp
xor
xor
test
mov
imul
mov
popf
pusha
stos
xchg
subl
and
pop
adc
mov
outsl
leave
lret
xchg
std
jl
mov
xchg
xchg
lea
sub
adc
dec
enter
push
mov
cs
jmp
push
push
pandn
jb
pop
lahf
lret
jbe
mov
sub
test
test
in
fldt
push
or
bound
push
cld
cmp
cld
mov
dec
in
or
call
pop
fsubrl
call
repz
popw
fistps
add
and
lds
xor
xor
xor
pop
les
lods
xchg
dec
sub
push
push
mov
xor
sti
mov
enter
xchg
mov
mov
cmp
mov
sub
push
mulb
stc
push
dec
loope
arpl
sub
hlt
jecxz
add
jge
jecxz
push
loop
mov
call
push
xor
inc
stos
nop
repnz
push
ds
aaa
jmp
sti
out
jo
addr16
jp
and
inc
inc
add
cwtl
inc
xlat
addr16
adcb
and
jns
and
mov
jge
sub
push
sbb
mov
xor
sbb
cwtl
inc
lods
cmpsl
mov
addb
inc
add
lret
jne
pop
cmp
pop
idivb
ja
addb
popa
stos
xor
push
mov
pop
fldpi
test
sub
sbb
add
push
leave
mov
outsb
xchg
inc
and
lahf
cmp
mov
jmp
gs
mov
xchg
sub
add
popa
insb
andl
and
push
push
jmp
mov
jbe
pop
into
in
xchg
inc
mov
push
repnz
aas
jmp
mov
pop
movsb
push
and
and
stos
jns
cmc
rcrb
dec
fcmovne
enter
mov
stos
dec
jg
lea
ljmp
mov
ljmp
pop
inc
xor
push
inc
jo
mov
push
and
xor
cmp
inc
repz
test
pop
int3
stos
aam
lods
xor
adc
popf
pop
loop
mov
sti
in
push
imul
xor
leave
pop
mov
jae
add
out
or
mov
lahf
imul
pop
pop
in
in
stos
push
scas
push
inc
push
push
add
inc
idivl
outsb
jno
xchg
jecxz
ret
pop
and
lods
add
push
nop
into
movsl
jne
jmp
sbb
ds
pop
dec
jns
es
dec
int
push
mov
sbb
mov
sti
xchg
icebp
stos
rcll
and
jmp
insl
loopne
pop
mov
or
pop
jg
in
xor
pusha
fists
test
rorl
dec
call
sbb
inc
lds
jg
out
shll
das
pop
cmp
popf
in
push
les
xchg
dec
xchg
xor
mov
xor
xor
fnstcw
repz
mov
outsl
out
xor
in
js
add
mov
enter
dec
ficoms
jmp
in
incl
cmp
cmpsb
push
repnz
mov
dec
pop
stos
sbb
dec
loop
xor
ds
scas
xchg
or
pop
movsb
fstl
lret
xchg
adc
add
rorl
stos
push
xor
loopne
scas
pop
pop
push
scas
stos
sbb
daa
fld
frndint
popa
loop
mov
inc
ror
push
into
push
dec
sbb
jmp
lods
adc
dec
mov
xlat
imul
aad
jle
inc
mov
call
divb
inc
push
mov
xor
jl
in
adc
push
shrl
pop
mov
or
fnstenv
enter
les
call
xor
inc
inc
lds
loopne
stos
cmc
mulb
lods
fdivl
jmp
cmp
adc
sub
and
xlat
sahf
cmp
jmp
xchg
fisubrs
dec
push
cmc
ffree
dec
push
adc
xor
xchg
stos
and
inc
aam
jns
mov
adc
out
aaa
in
fdivrl
pop
xor
jge
add
hlt
pop
mov
jbe
xchg
mov
in
aaa
outsl
xor
mov
int
loope
jmp
sub
rcll
jge
jl
pushf
enter
xlat
adc
scas
inc
pop
in
gs
sbb
xchg
inc
cmp
ffreep
jmp
mov
testl
and
push
xchg
divl
jmp
pushf
popa
clc
sbb
mov
je
je
jmp
pop
testb
incl
lods
iret
jg
push
arpl
mov
fsts
push
ss
sub
and
stos
pop
fptan
inc
xchg
xor
mov
repnz
xadd
lret
jb
or
loopne
outsb
xor
mov
in
mov
mov
int3
shlb
movsb
outsl
jg
mov
jecxz
incb
ds
xor
lods
jmp
pop
insb
inc
call
out
cli
fcomp
sahf
jmp
xlat
mov
jle
sub
or
and
xchg
nop
enter
nop
cld
enter
xlat
jns
adc
mov
loope
jne
inc
in
xchg
pop
sahf
fs
cmp
add
xchg
cld
shrl
in
fbld
cltd
push
and
in
lcall
push
sbb
xchg
lods
push
stos
pop
lcall
or
pop
mov
lock
mov
aas
pop
aaa
ljmp
fisubl
clc
test
inc
sti
jge
aaa
mov
xchg
cmpsl
mov
in
lcall
mov
mov
insb
mov
xchg
lahf
push
cli
dec
cld
in
mov
int3
xor
jnp
and
mov
js
jno
jmp
xor
jnp,pt
dec
mov
xor
or
cmp
and
sbb
bound
rorl
push
bsr
leave
xchg
xor
in
bound
rol
jns
inc
jo
js
repnz
or
cmp
sub
sti
or
push
push
imulb
aas
push
dec
adc
sbb
push
mov
and
orb
div
les
sub
lahf
xchg
mov
pop
addr16
arpl
add
sbb
xor
nop
cmp
lods
dec
push
dec
cwtl
mov
das
xor
jb
enter
cmp
sbb
movsl
xchg
data16
inc
mov
dec
jg
jle
adc
loope
add
inc
scas
sbb
fstps
insb
jmp
cld
and
mov
ficompl
push
sbb
js
xor
les
push
inc
inc
push
dec
xor
arpl
or
add
stos
xchg
stc
arpl
js
sbb
jmp
adc
mov
call
stos
fdivrl
pop
pop
dec
add
push
ss
addb
sti
push
incl
movsb
adc
sbb
enter
mov
mov
push
and
icebp
jae
mov
cmpsl
sub
stos
pushf
frstor
pop
pop
adc
sbb
loop
ljmp
pusha
aaa
das
sti
stos
and
jae
jbe
lret
inc
or
mov
push
xchg
mov
rcrb
jmp
xchg
sbb
les
sub
mov
std
mov
test
jg
inc
or
xor
add
lcall
mov
dec
ljmp
push
in
sbb
pop
inc
jp
pop
out
pop
jbe
jle
dec
stos
adc
inc
scas
lret
ljmp
push
add
sbbl
mov
dec
popf
stos
dec
push
inc
ljmp
repz
fdivl
mov
cmp
and
and
shl
cltd
int3
testl
adc
movsb
lods
mov
xor
aas
push
cld
xchg
xchg
cmpsl
mov
push
insl
sub
fidivrs
xor
adc
stos
test
movsl
nop
jmp
jnp
push
sub
xor
imul
in
mov
test
and
push
sahf
xor
mov
push
clc
jmp
add
jge
ret
push
rcr
repnz
jecxz
aas
xor
dec
inc
mov
fdivs
std
pop
sti
int3
add
rolb
out
jno
ret
adc
in
ret
stc
aas
xchg
jmp
pop
pusha
xchg
and
xor
scas
jge
xor
mov
scas
stos
jb
or
movsb
cmp
rolb
jb
cmp
cmp
cs
add
stos
add
pop
xlat
inc
daa
inc
mov
push
arpl
mov
pop
dec
xor
lods
xor
push
cmp
aam
hlt
jp
push
test
sub
scas
imul
dec
mov
xor
rorb
jmp
cmp
sub
mov
in
cmp
out
inc
dec
push
cmp
inc
jns
sub
movsl
push
jo
mov
ss
shlb
sbb
xchg
daa
xlat
nopl
mov
adcb
sub
ja
jmp
jae
push
adc
insb
push
insl
cmpsl
dec
or
in
add
inc
not
xchg
adc
lods
cmpsb
mov
mov
in
cmp
rcr
cli
pop
xor
insl
fsubs
test
push
add
jnp
jnp
push
lods
stos
adc
cltd
jp
out
scas
mov
push
lret
cmp
sbb
out
xor
pop
test
jno
xchg
mov
call
sub
sbb
in
cmpsb
xchg
pop
out
dec
popa
into
cmp
or
data16
ss
lret
or
add
subb
xlat
mov
jns
out
inc
aas
jge
push
pop
mov
lea
outsb
or
push
stos
arpl
jne
and
lock
lock
xor
jo
add
add
mov
and
add
mov
bound
jb
pop
jo
mov
xor
mov
mov
jb
xchg
stos
xorb
and
leave
es
into
push
out
loopne
clc
mov
xchg
cmc
out
aad
mov
fwait
ds
adc
xor
sub
popa
les
pop
push
sbb
push
push
inc
jge
fucomip
cmp
ds
imul
imul
pop
pop
pusha
mov
outsb
sbb
adc
sahf
fsts
cli
dec
mov
pushf
cmpsl
mov
inc
cmc
sub
or
dec
sub
mov
mov
inc
pop
in
adc
mov
push
inc
addr16
push
mov
xor
mov
xchg
push
lods
or
add
inc
add
push
jns
mov
jbe
xor
pop
mov
jp
xchg
cltd
jmp
jl
mov
jne,pn
push
jb
push
jle
dec
in
scas
shll
add
push
xchg
mov
lds
inc
inc
inc
xchg
add
push
adc
push
mov
cli
shl
push
bound
dec
out
xchg
lock
xor
shrb
imul
mov
mov
jle
pop
in
xchg
rcll
in
mov
mov
mov
mov
mov
jns
push
jp
cmp
cld
sub
mov
mov
pop
and
nop
icebp
mov
sbb
jle
lcall
ret
or
outsb
push
push
pop
sub
mov
loope
call
icebp
push
jp
add
repnz
rclb
jecxz
test
jg
div
mov
rcrl
adc
push
movd
mov
rclb
add
cs
xchg
negb
xchg
mov
sbb
or
push
int3
fisubs
cwtl
daa
dec
lds
dec
xchg
mov
pop
mov
lret
mov
jns
push
xlat
loop
sbb
popa
xor
dec
lret
push
xchg
je
mov
aad
jmp
outsl
xchg
push
addr16
adc
pop
xor
push
pop
fdivl
mov
gs
outsb
mov
mov
rorb
loope
repz
add
inc
or
addr16
shll
out
decb
push
push
jns
dec
hlt
cwtl
cmp
and
out
cmc
popf
or
sub
dec
test
test
fimull
xchg
cmpsb
pop
test
mov
sub
test
stos
loope
add
pop
repz
jmp
jge
or
mov
stos
push
imul
adc
xor
arpl
dec
sbb
popa
cmp
sbb
adc
cwtl
call
cmp
mov
push
sbb
and
fisttpll
add
mov
scas
stos
or
test
nop
add
jg
add
push
scas
ds
sbb
adc
sbb
mov
push
add
pop
mov
and
jmp
stos
addr16
movsl
cmp
and
cwtd
xchg
add
subl
xor
jmp
inc
sbb
sub
divb
push
test
cld
xor
mov
cmpl
xchg
cltd
outsb
sti
push
jmp
mov
in
adc
aam
mov
out
push
test
or
xorb
push
pop
mov
mov
notb
and
cmp
ljmp
jg
sbb
push
push
pop
dec
ja
fwait
xor
mov
gs
stc
cltd
imul
or
or
je
sub
xor
mov
mov
je
or
icebp
hlt
les
test
jnp
pop
jg
sub
push
lock
mov
jmp
add
mul
sbb
test
fcoml
icebp
pop
cmp
lret
mov
and
in
push
add
cmp
xchg
and
orps
jae
sub
int
test
cs
imul
icebp
std
pop
shlb
mov
fisubrl
xor
jmp
ljmp
push
popa
loope
cmp
sbb
xchg
xor
or
fistpl
xor
mov
subb
jge
pop
or
in
pop
push
je
aas
aas
daa
ja
mov
add
pop
sub
pop
mov
sub
adc
imul
js
cmpl
or
sub
fstpt
mov
cli
xchg
call
push
ret
push
fisubl
lds
shlb
inc
fmull
push
loopne
not
rorl
movups
pop
dec
cmc
or
sub
mov
and
fs
dec
ficoml
fsts
data16
jae
pop
xor
addr16
xor
pop
xor
stos
in
fs
shrl
cs
dec
jmp
jae
idivb
in
adc
cmpl
loope
ljmp
dec
pop
gs
push
lds
test
int3
stos
xchg
les
stos
addr16
push
add
mov
faddl
ficomps
movb
add
sub
xchg
bnd
jle
push
pop
daa
push
cmp
mul
xor
sbb
adc
insl
sub
lret
das
sbb
jbe
in
inc
lods
orl
scas
out
cli
cld
cmp
in
xor
rorb
jle
loope
daa
inc
cmc
jp
test
mov
sti
jne
out
pop
repz
fcomps
xchg
mov
mov
ss
pop
adc
push
push
ret
jae
add
pop
xor
stos
xchg
cld
stos
inc
insb
pop
dec
aaa
in
imul
xchg
movl
pop
push
jp
push
xchg
or
es
dec
adc
aam
test
outsl
and
mov
mov
jmp
loope
scas
ret
imulb
push
pop
xchg
xor
jae
inc
movsl
fidivrs
je
sbb
sarb
lret
cltd
push
push
mov
push
das
imul
lock
cmpsb
cmp
xchg
pop
shrl
add
fldl
jmp
aas
mov
pushf
pop
lods
push
mov
sbb
push
repz
and
and
xchg
or
and
xor
push
jno
lret
rcll
fnstcw
sti
pop
cmp
sbb
test
sub
jp
mov
out
fwait
mov
pop
lds
inc
add
push
xchg
cs
stos
stos
stos
in
mov
mov
or
pop
xor
loope
push
add
push
xlat
in
loop
movsl
jo
jnp
rcll
lds
mov
stc
pop
cltd
fildl
dec
ret
push
std
mov
mov
push
outsb
and
sarl
sub
push
enter
add
push
mov
nop
push
mov
push
mov
push
lods
in
mov
out
and
add
push
add
push
icebp
call
pop
sahf
outsl
popf
or
xorb
lock
ljmp
sti
nop
orl
es
addb
adc
arpl
movsl
hlt
and
iret
xchg
mov
mov
or
inc
mov
pop
stos
roll
mov
mov
and
jmp
jmp
loopne
lods
pop
inc
add
xor
into
daa
or
ja
stos
fdivl
bound
in
cs
jo
jecxz
pop
sub
stos
int
into
mov
jmp
xchg
lds
inc
push
push
sub
and
pusha
aas
mov
add
jno
or
push
and
lock
xor
jae
add
or
sbb
push
fisttpll
dec
xchg
xchg
xchg
dec
dec
aam
mov
pop
cmp
jg
or
dec
or
data16
ss
xchg
aaa
insb
adc
jmp
mov
sbb
leave
push
push
int
out
or
ljmp
cmp
inc
push
lods
or
xchg
or
or
xor
lods
and
inc
imul
pop
mov
sbb
pushf
mov
in
inc
jae
out
out
jmp
inc
sub
dec
pushf
jno
push
arpl
movsl
into
mov
fwait
push
xor
jl
adc
sub
jmp
xor
jle
test
sub
mov
push
mov
repz
js
or
or
mov
push
into
xor
pop
test
out
cli
stos
pop
call
out
mov
pop
mov
lea
rol
mov
adc
mov
setl
push
test
cwtl
sbb
hlt
dec
adc
gs
sub
mov
div
mov
mov
mov
push
subl
fidivs
mov
test
in
xor
sub
sbb
popf
dec
add
repnz
sbb
xor
push
loope
jns
jl
stos
push
gs
cmp
testl
mov
mov
jmp
sub
mov
sbb
outsb
mov
jg
fcomps
xor
lock
popf
mov
ja
out
ret
sti
jnp
in
pop
dec
jg
sbb
pushl
cs
pop
add
imul
inc
jne
iret
or
fucomp
shl
imul
in
dec
jle
shr
das
jle
out
fstl
mov
add
xor
push
shr
xor
push
push
pop
aas
cwtl
pop
mov
dec
lret
jl
adc
add
pop
cmp
add
xor
cwtl
leave
pushf
imul
mov
push
jecxz
mov
rolb
mov
aas
push
and
cmpsb
or
xor
into
sar
insl
movsb
adc
jae
dec
jo
xor
pop
outsl
stos
das
in
pop
arpl
icebp
and
clc
cld
and
xchg
push
daa
ds
sbb
mov
mov
jmp
fs
es
inc
out
mov
nop
lods
sub
xchg
mov
push
xchg
sub
mov
sbb
adc
push
sbb
out
xor
sarb
push
fisttpll
sub
call
pop
add
mov
cmp
int3
mov
xchg
inc
jmp
sub
fwait
mov
jnp
mov
adc
xor
rorl
stos
mov
and
jmp
sub
test
push
in
jge
mov
and
testl
jecxz
leave
fisttps
inc
ljmp
xor
imulb
test
repz
mov
aaa
lods
imul
mov
jmp
js
push
addr16
cmp
mov
xor
out
testb
rorl
fwait
adc
stos
fnsave
jge
jmp
inc
int
sbb
ljmp
ss
in
xor
fildl
lods
dec
xchg
mov
push
xor
dec
jl
inc
mov
mov
add
pop
idivl
mov
jg
push
jle
xor
sub
stos
arpl
jns
mov
mov
xchg
push
aas
test
lds
outsl
jl
mov
call
dec
js
push
jecxz
andb
cmp
out
mov
xchg
arpl
adcb
stos
loope
lcall
scas
dec
cwtl
pop
or
adc
out
mov
cmp
test
adc
ret
loop
add
mov
xchg
arpl
ds
ds
or
cld
in
cs
in
hlt
stos
cmp
mov
dec
pop
dec
sub
fldl
ds
lods
add
ljmp
scas
xor
and
aad
push
aad
xchg
fwait
xchg
sub
xor
dec
leave
jo
push
mov
fimull
inc
frstor
sbb
jbe
stos
cld
push
jae
adc
jmp
ds
push
sbb
and
leave
in
mov
jmp
pop
jne
add
sahf
dec
ret
mov
rcl
in
push
sbb
and
jne
cwtl
dec
or
notb
out
mov
stos
outsb
mov
arpl
ljmp
inc
lret
and
scas
int3
mov
sarb
fld1
flds
jmp
adc
sbb
imul
popf
or
inc
dec
xchg
push
movsb
stc
popa
lret
mov
mov
pushf
ss
andl
lds
xor
cld
adcl
mov
or
jmp
ficoml
fidivrl
stos
mov
jg
dec
aas
scas
xor
mov
loope
dec
rcl
ljmp
stc
push
xchg
fsubs
inc
test
test
jo
loop
icebp
data16
subb
arpl
loop
mov
inc
stos
sahf
xor
dec
shrl
in
inc
mov
lahf
adc
mov
in
add
mov
mov
mov
push
dec
xor
mov
repnz
stos
xchg
mov
xor
jns
and
les
xchg
xor
push
in
ss
imul
cltd
inc
push
pop
add
cld
mov
or
adc
enter
cmp
lds
jo
dec
mov
outsb
lea
jle
fildl
loope
push
ror
push
and
xchg
repnz
xchg
adc
call
stos
xor
push
xchg
jl
adc
int3
mov
ja
ficoms
xchg
addr16
xchg
sti
xor
mov
xor
cli
stos
inc
jmp
cs
std
jbe
pop
pusha
popf
rcrb
adc
sbb
mov
movsb
mov
repnz
inc
lret
into
inc
pop
jbe
stos
xor
aaa
inc
pop
push
xor
push
outsb
xchg
adc
mov
out
sbb
xor
add
mov
sahf
inc
push
rcrb
out
cmp
push
xchg
js
iret
dec
lods
lahf
mov
xor
clc
int
testb
bound
insl
pop
cld
mov
repnz
xor
imul
jge
xor
stc
lods
mov
stos
pop
lret
ret
in
cli
je
xchg
clc
push
stos
std
fisttpll
jnp
lret
or
jne
jge
mov
out
stc
lret
jmp
jmp
cmp
jmp
fsts
mov
imul
rcll
stos
lahf
dec
pop
sub
xchg
lea
stc
sti
mov
xor
push
xchg
stos
rcl
std
cmp
jecxz
inc
mov
ret
leave
ja
jl
out
inc
pop
fwait
roll
pop
pop
mov
xor
fs
fsubs
call
xor
cmc
insl
mov
stos
fildl
mov
ds
loopne
mov
jns
or
and
jo
shl
divl
adc
loope
stos
mov
hlt
mov
push
push
ret
jge
xchg
cmp
mov
lock
subl
cli
stos
daa
and
jnp
jmp
jge
mov
xchg
mov
push
inc
cs
divl
or
inc
cmp
xchg
sub
adc
cmp
push
notl
lock
fidivrl
mov
movsl
cli
cmp
jmp
mov
jne
jno
addr16
in
sub
notb
fidivs
inc
jnp
cmpsb
push
out
out
insl
xor
add
js
rcll
fidivrs
jecxz
pop
mov
pop
or
in
or
push
jmp
cs
xor
xchg
inc
mov
cmp
sbb
adc
outsl
jge
jmp
mov
sub
push
push
test
icebp
add
sbb
adc
and
stos
dec
xchg
cltd
push
mov
cltd
jmp
jae
je
shlb
push
js
aaa
push
xchg
pop
mov
lahf
jecxz
adc
sub
test
push
leave
adc
insl
out
cltd
jae
int3
mov
arpl
fstl
sbb
xor
je
inc
fdiv
or
in
jo
adc
sbb
push
ret
or
imul
imul
and
push
mov
rorb
ficoms
movhlps
stos
xchg
insl
xchg
call
jp
cmp
push
testb
push
cmp
mov
push
adc
iret
lcall
inc
subl
push
jp
lods
es
xor
jle
pop
cmp
jae
push
enter
mov
fcom
xor
xor
jp
shr
pop
pop
add
lock
sub
or
aad
push
cmp
ret
int
xorb
push
movsb
jo
cmp
lret
pusha
adc
data16
push
mov
jae
xor
enter
sbb
stc
mov
js
jmp
ljmp
push
ja
enter
or
pop
sbb
sahf
stos
std
sti
aad
mov
dec
es
in
daa
sub
aad
icebp
pop
cmp
mov
js
fucomi
pop
push
pop
test
aaa
cli
sub
sub
outsb
add
push
stos
imulb
pop
push
jmp
xor
aaa
mov
call
inc
cld
std
les
xor
mov
dec
int3
mov
mov
dec
xchg
in
jl
xor
leave
jle
jmp
stos
je
pop
push
inc
lahf
hlt
mov
inc
imul
mov
enter
fisttpl
ja
mov
adc
pop
push
inc
decl
dec
pop
cmova
adc
and
mov
add
mov
and
push
stos
add
aam
pop
inc
push
push
jmp
inc
int3
cmc
jecxz
pop
cmpsb
icebp
in
xchg
push
xchg
in
cmp
gs
sete
and
out
sub
mov
mov
push
jmp
addr16
fwait
add
mov
ss
push
gs
rclb
decl
fstps
jne
aas
mov
push
pop
dec
bound
mov
jae
dec
mov
and
stos
push
pop
cmp
xchg
jmp
jmp
xor
pop
mov
stos
xchg
push
ror
outsl
in
movsl
dec
mov
sbb
or
andl
adc
jmp
test
test
cs
xchg
mov
dec
rcr
jmp
mov
ja
in
push
gs
or
je
cmp
xor
mov
pop
push
insl
test
in
cwtl
mov
stos
inc
lods
aas
or
stos
sbbb
out
pop
repz
call
lret
and
popf
cwtl
push
xchg
hlt
dec
jmp
aam
mov
push
fnstsw
mov
sahf
xor
inc
mov
cmp
sub
fisubrl
imul
push
sbb
stos
lods
add
sbb
sub
xchg
mov
test
dec
adc
sbb
fdivp
add
testl
mov
push
int
clc
pusha
rcrb
push
xchg
cmp
sub
xchg
test
jb
imul
rcrb
cmp
neg
mov
lret
jl
push
pop
adcb
orl
nop
cltd
stos
aas
movsb
dec
stos
mov
adc
jmp
fsubrs
mov
outsl
icebp
test
jmp
jmp
fcmovbe
movsb
pop
loopne
xchg
fwait
push
jb
push
sti
xchg
xor
pushf
xchg
pop
cwtl
cs
mov
popa
mov
xchg
mov
push
pop
lods
sbb
dec
lret
xor
out
adc
test
popf
fsubrl
lods
push
xor
popa
or
sarb
emms
jmp
lret
jl
adc
subb
ret
dec
or
and
fbld
adc
mov
movsb
lahf
mov
cmp
pop
pop
mov
mov
jmp
add
and
adc
jmp
out
dec
lds
jmp
test
out
mov
notb
mov
xchg
push
jmp
imul
push
push
jl
xchg
xchg
fistl
jg
inc
cmp
or
push
add
call
xchg
jecxz
lret
inc
xchg
int3
mov
sbb
add
xor
or
inc
pop
mov
sahf
push
jp
inc
dec
fdivrs
jl
pop
in
xor
xchg
in
iret
fnsave
jnp
dec
jp
test
push
test
sahf
call
fcompl
stos
adc
xchg
or
xor
and
ljmp
sbb
inc
mov
sub
dec
or
cmp
push
cld
xorl
inc
dec
or
cmp
lods
dec
and
popa
adc
pop
imul
ja
stos
mov
or
sti
sahf
or
jmp
fcoms
sub
mov
cmp
rorl
mov
scas
sti
loope
mov
out
popf
add
ret
divl
jle
insb
ret
pop
cmpsb
lods
xchg
dec
push
mov
repnz
sub
clc
add
inc
push
or
xchg
sub
in
in
lcall
in
jne
sbb
sub
inc
in
sub
sub
jle
lret
and
cmc
test
or
mov
mov
out
push
push
mov
push
in
xchg
jnp
dec
shr
sub
dec
scas
push
and
jnp
mov
dec
add
jae
dec
mov
icebp
jmp
pop
mov
mov
stos
dec
test
xor
inc
xor
jmp
mov
call
shrb
lahf
stos
leave
rol
mov
leave
jmp
sarl
push
call
mov
in
out
xchg
ss
sbb
xor
ret
xor
dec
lret
popl
jne
pop
lret
or
idivb
stos
xchg
out
stos
push
pop
movsl
pop
pop
jmp
je
push
stos
ss
test
mov
idivl
push
sbb
dec
repz
mov
mov
xor
push
imul
add
out
xchg
or
push
push
dec
jo
jp
movsl
push
inc
dec
pushf
xchg
xor
lods
lods
rorb
rcrl
ja
mov
dec
int3
mov
cld
cmc
sbb
dec
rorb
cmp
dec
lods
fisttpl
adc
pop
lods
fimuls
cmp
gs
push
push
pusha
sub
aad
pushf
sbb
enter
inc
mov
orl
pusha
stos
xor
sub
xchg
mov
sbb
pop
sbb
mov
fldl
movsb
ljmp
jbe
pop
cld
xlat
cmp
je
mov
mov
push
aad
cmpsl
sbb
push
shll
mov
rcrb
insb
pop
fldt
imul
stos
pop
fwait
sbb
or
ret
leave
jmp
sub
mov
mov
adc
inc
in
pop
pop
xor
fsubrl
addl
test
xchg
sbb
jmp
inc
sbb
lahf
fisubrs
push
ja
lock
and
mov
xor
dec
out
xchg
jle
xor
dec
clc
mov
cs
fucomp
push
adc
xor
lret
pop
pushf
cmp
sbb
fwait
daa
movsl
fwait
sub
and
inc
mov
mov
arpl
jp
fsts
and
movsb
testb
cmpsl
xor
jmp
xchg
sbb
fisubrs
out
sbb
shlb
push
and
push
es
pop
xor
aaa
adc
dec
sub
scas
push
or
mov
loopne
adc
fwait
pop
add
or
mov
lds
pop
mov
push
or
lret
fsub
jne
dec
jns
lahf
cs
lods
jmp
push
es
xor
sahf
xor
hlt
cmp
dec
or
aam
stos
push
call
push
ret
jmp
clc
movsl
xor
push
lods
sub
pop
mov
test
xor
insb
out
xor
stc
push
bound
add
das
ret
dec
js
dec
cmpsl
mov
lea
and
inc
or
push
stc
icebp
lods
stos
fs
sub
xorl
xor
ror
and
stos
push
and
pop
mov
hlt
ljmp
out
xor
shrb
popl
and
test
cli
rcrb
int3
icebp
sub
jmp
jmp
dec
cmpsl
movswl
stos
add
sbb
ds
jle
mov
jo
xor
cmp
adcb
mov
mov
shll
pop
mov
jnp
int
icebp
xor
ljmp
add
mov
std
mov
in
pop
pop
shll
out
in
scas
fisubl
cmp
or
dec
scas
test
adc
mov
xchg
xor
lock
lods
pop
sub
hlt
imul
mov
cmp
cmp
push
xor
lock
add
push
mov
cmp
mov
and
fiadds
fwait
mov
dec
xor
orb
jp
leave
sub
inc
pop
lret
xchg
stos
mov
test
adc
xor
loope
mov
mov
aaa
adc
rsqrtps
jmp
push
test
ret
repz
jmp
lods
lcall
mov
fnop
mov
popf
cmp
cmpb
pop
cmp
sbb
mov
and
insb
int
xor
or
ret
sbb
ret
loop
push
in
out
pop
cmpl
xchg
xor
mov
jge
mov
jl
stos
push
cmc
mov
xor
jae
cmpb
jle
movsb
cmp
scas
int
sbb
xor
call
aas
stos
xchg
fstps
lock
stos
xchg
ljmp
arpl
inc
jmp
test
sti
sub
dec
jle
sub
mov
stos
gs
or
push
add
loope
mov
jmp
pop
and
and
xchg
push
fmuls
popf
jmp
cmp
rcll
jmp
into
stos
mov
mov
cmp
sub
add
jne
push
lret
xor
and
sub
insl
dec
shll
lret
decb
clc
loop
or
sbb
fidivl
in
nop
out
jge,pt
frstor
mov
das
jg
ret
stos
and
sub
dec
cmp
call
mov
jnp
out
xchg
add
mov
add
sub
call
add
scas
or
push
shll
in
in
sahf
stos
scas
jne
pop
andl
and
push
adc
out
pop
into
lock
sbb
es
cld
adc
jb
idivb
daa
jno
or
xchg
jbe
mov
push
inc
mov
push
shrb
mov
aaa
mov
or
push
jb
dec
push
dec
xor
xor
push
out
jnp
push
adc
std
shld
lock
dec
push
inc
test
sub
jecxz
pop
and
aaa
pop
sbb
call
add
sub
pop
out
repz
and
and
mov
xchg
xchg
mov
jge
push
or
or
push
xor
inc
mov
stos
out
mov
insl
xor
pop
test
xor
adc
stos
and
lcall
cmp
push
ret
decl
mov
repz
mov
mov
ret
add
lret
sbb
cltd
mov
cs
aad
popf
mov
popf
sbb
stc
fisubl
mov
xor
push
pop
std
fcoml
xor
dec
iret
or
sub
xor
mov
inc
push
adc
frstor
jne
or
sbb
dec
mov
mov
out
repnz
xor
and
and
mov
push
sub
cmc
dec
sarl
outsb
jmp
cmp
in
les
lea
or
push
stos
in
dec
sub
add
subl
stos
cli
stos
mov
xorb
xchg
cmp
lret
out
stos
in
sub
in
lds
sarl
mov
push
pop
or
adc
insb
loope
jmp
stc
pop
push
xchg
shll
out
jmp
or
lock
ficoms
xchg
aad
mov
xor
cwtl
and
pushf
fldz
into
adc
icebp
pop
inc
add
outsb
cmpsb
xchg
cs
inc
in
add
push
or
and
push
push
cmpl
jmp
lods
jecxz
xchg
sub
jecxz
notl
ret
or
adc
mov
stos
mov
mov
jns
jne
jmp
mov
jnp
push
jle
mov
jmp
and
mov
jmp
imulb
pop
clc
dec
add
movsb
aad
lds
lods
in
jmp
mov
fcomps
push
fcmovnu
cld
pop
repz
pop
xor
push
pop
xchg
aas
cmp
adcb
fnstenv
test
push
push
stos
loope
or
call
ss
int
xchg
mov
int3
xlat
mov
inc
push
repz
sub
roll
sbbb
stos
sub
and
ffree
and
ljmp
pop
repnz
dec
movsl
test
sbb
xor
bound
mov
ds
stos
mov
jnp
push
jg
out
jge
xor
pop
xchg
add
inc
adc
xlat
mov
mov
sub
adc
mov
ds
sahf
dec
xor
fstl
stos
addb
pop
rclb
dec
cltd
push
jb
nop
mov
imul
add
sub
out
push
mov
shr
scas
push
mov
lret
into
push
xor
repz
popa
fidivs
scas
test
stos
inc
rclb
test
hlt
lods
mov
je
xor
js
bound
inc
xchg
adc
xchg
cmc
stc
inc
xchg
data16
jge
xor
outsl
mov
xor
inc
add
pop
cmp
ljmp
movsb
pop
xor
sbb
ljmp
mov
enter
test
xor
hlt
inc
push
scas
fwait
pop
xor
or
rorl
xchg
sub
xor
inc
mov
ljmp
sti
sub
je
lcall
and
repnz
daa
in
cli
or
in
movsb
xchg
add
into
test
ret
stos
ss
movsb
adc
jbe
jmp
cmpsb
mov
std
scas
dec
adcb
imul
pop
xor
jb
jmp
cwtl
jp
mov
push
pop
jmp
jle
mov
cmp
mov
call
stos
enter
fcmovne
pop
inc
jmp
xchg
mov
stos
xchg
out
sub
imul
scas
or
jo
push
adc
add
inc
cwtl
mov
xor
mov
loop
scas
sub
movsb
adc
jb
insl
enter
cmp
scas
fcmovnbe
add
je
ret
sub
pop
mov
cli
cmp
push
or
shrl
cmpsl
lea
aad
or
daa
mov
or
xchg
insb
leave
icebp
or
push
push
mov
inc
sbb
das
rorb
sub
push
xchg
ds
scas
sti
cmp
inc
call
sbb
cmp
rep
and
dec
mov
jmp
sbb
and
pop
data16
cmp
or
inc
stos
lds
hlt
pop
std
push
lahf
add
mov
jge
loopne
stos
cwtl
cmc
adc
mov
push
cmc
xor
pop
sbb
rorb
jns
jno
ds
test
dec
mov
and
out
xchg
mov
mov
int
popa
mov
mov
push
or
mov
push
xchg
pop
ja
pop
int3
push
aas
xor
or
loope
inc
xor
testb
jmp
lea
push
lahf
lds
das
inc
push
cmp
jo
outsb
push
loop
push
dec
pop
mov
adc
cmc
mov
jnp
stos
insb
mov
pop
push
mov
mov
mov
cmc
push
bound
mov
mov
xor
arpl
cmp
dec
jg
into
push
dec
mov
iret
sub
popf
jp
outsb
xchg
stos
ret
mov
mov
gs
or
pop
add
or
adc
enter
dec
stos
das
dec
jp
push
mov
dec
pop
pop
mov
sub
and
or
into
clc
in
add
negb
test
gs
push
inc
jmp
pop
sahf
jne
ret
push
scas
push
push
daa
xor
in
sub
lea
stos
inc
into
cld
sahf
cmp
dec
mov
jb
adc
test
mov
xchg
cmp
cmove
mov
inc
pop
ret
stos
dec
push
daa
dec
add
mov
ss
stos
adc
jg
sbb
andb
cmc
out
jecxz
test
mov
jg
mov
sub
pop
incl
add
arpl
mov
fmulp
movsb
sbb
out
add
ret
xchg
ret
test
xchg
add
xchg
in
or
xor
ror
sbb
lods
jb
xchg
pop
add
mov
inc
or
jmp
cmp
push
lods
mov
cmp
stos
dec
das
test
pop
jb
fcomp
push
push
xor
inc
lcall
aaa
mov
xor
push
pop
loope
sub
stos
cwtl
fiadds
pop
int3
out
xor
ss
stos
or
cmp
mov
mov
out
push
ret
mov
adc
xor
adc
fnstenv
mov
shr
mov
out
mov
push
mov
cmp
push
stos
stc
xchg
inc
call
mov
mov
mov
in
stos
jp
mov
add
mov
test
inc
pop
icebp
jmp
mov
cmp
sbb
or
inc
shrb
std
push
ljmp
sbb
or
push
insb
push
cmp
add
fbstp
test
rcrb
mov
test
icebp
jno
movsb
jmp
dec
push
sbb
and
loop
pop
sub
gs
adc
dec
lahf
hlt
int
dec
fbld
into
xor
bound
xor
movsl
or
sub
inc
mov
xor
xchg
xchg
xor
jmp
pop
test
lods
xchg
bound
idivl
fisubrs
jmp
cmp
int
push
adc
icebp
and
mov
jmp
in
sub
int
enter
in
int
cli
jmp
lcall
push
cli
xchg
lods
cld
fmuls
fildll
sbb
dec
ja
xlat
fsubrl
popa
scas
das
pop
jmp
enter
xor
shrb
dec
jmp
out
lds
pop
fstpl
jmp
std
inc
pop
mov
js
push
stos
imul
stos
cltd
out
les
gs
mov
out
fistl
in
mov
inc
push
jecxz
sub
push
rcll
cmpsl
cmp
sub
mov
and
pop
es
push
push
cs
xor
mov
lret
xlat
dec
push
inc
sarb
add
xchg
or
stos
mov
and
mov
push
jmp
or
jns
sub
add
inc
dec
jbe
xor
popf
pop
jle
lea
jae
dec
out
mov
jae
inc
or
push
mov
popf
fs
cmp
or
rep
inc
addb
sbb
test
push
push
jb
add
xor
push
add
outsl
loop
imul
sub
mov
push
jo
push
jae
sbb
push
mov
out
jl
push
adc
mov
xchg
repnz
loopne
mov
scas
sahf
sub
shl
ja
push
scas
dec
jge
and
dec
xor
mov
cli
xor
in
sti
jg
xchg
mov
lret
and
das
jmp
cli
xlat
pop
jmp
ja
mov
or
stc
cwtl
cmp
lods
pushf
adc
xor
lods
xor
ja
aas
dec
jl
mov
mov
xchg
xor
cmc
jmp
loopne
scas
jge
xchg
dec
push
push
cmp
cmpsb
scas
xor
fcomp
inc
sub
push
jmp
call
push
xchg
push
sub
inc
and
add
mov
sbb
lock
adc
outsb
xchg
and
mov
xor
xchg
push
or
cmp
out
and
jo
cmp
xchg
addsubpd
pop
int
fprem
fcoms
mov
add
fadd
adc
or
bound
clc
movsb
mov
jmp
movsl
inc
pusha
sub
stos
cmp
xor
xchg
xchg
dec
jmp
call
push
fdiv
pop
mov
jns
add
jmp
cmpsb
daa
movsl
daa
sub
pop
mov
xchg
test
xorl
xor
sbb
mov
movsb
aad
std
pop
test
orb
shll
int
adc
push
and
mov
addr16
movsb
jmp
push
hlt
aam
bound
pop
push
push
repz
adc
idiv
sbb
enter
sub
mov
mov
gs
mov
ljmp
inc
outsb
movsl
push
push
xor
fcoms
sub
pop
xchg
stos
repz
inc
jmp
and
inc
rcll
adc
pop
cmp
in
clc
push
mov
adc
aam
sbb
xchg
stos
and
lock
dec
dec
mov
jmp
mov
sub
xchg
jge
daa
in
movsb
mov
or
fdivrl
push
out
or
sbb
scas
or
adc
xor
cmp
fidivl
sbb
stos
add
pop
cmc
in
sar
sahf
cmc
or
cltd
test
mov
mov
repz
pusha
push
xor
out
int
pop
into
movsl
repz
stos
icebp
arpl
jmp
js
shlb
lods
pop
leave
jecxz
xor
cmp
add
ret
and
pop
jne
int3
shll
and
cmp
jns
imul
adc
aam
imul
jmp
xchg
sbbl
sbb
push
push
inc
dec
stos
push
jg
cwtl
xor
pop
or
in
jecxz
outsb
out
ret
cmp
sti
sub
dec
adcl
imul
lock
loopne
sti
lods
mov
push
pushf
lock
fadd
mov
negb
xor
cmp
std
inc
xor
data16
hlt
in
sub
pop
adc
lods
add
popf
fisttpl
out
push
pop
inc
cmpsl
cli
sub
and
push
subb
popf
fmull
mov
push
fildll
mov
dec
pop
mov
test
mulb
sbb
mov
inc
inc
in
inc
sbb
icebp
addl
stos
lcall
in
sbb
hlt
cmc
inc
stos
sbb
sbb
pop
in
xchg
inc
imul
inc
push
cltd
pop
mov
xor
inc
rcl
adc
call
cli
outsb
stos
and
out
adc
icebp
pop
jmp
xor
push
pop
push
arpl
cmp
xor
mov
xchg
aas
xor
mov
stos
test
jge
aad
ret
mov
stos
scas
lret
push
sbb
mov
sub
mov
les
shrl
xlat
mov
inc
mov
mov
pcmpgtb
add
jmp
lods
data16
fldcw
push
movsb
cs
inc
aam
dec
jmp
into
adcb
pop
mov
les
and
dec
adc
mov
shll
pop
mov
push
out
jmp
pop
cmpsb
cltd
dec
das
ror
push
ficomps
fidivs
imul
xor
dec
icebp
pusha
dec
js
inc
lods
mov
fimull
mov
inc
and
out
and
mov
in
inc
and
enter
jmp
insb
insl
into
shl
xlat
out
mov
cmc
cmp
mov
rolb
push
jbe
and
stos
cmp
mov
lahf
dec
leave
push
xchg
popa
js
mov
std
mov
pushf
xchg
sbb
dec
push
xchg
adc
push
xor
pop
push
dec
dec
rcll
lahf
mov
cmp
jne
mov
add
sbb
imul
ljmp
in
fdivp
stos
inc
cmp
imul
inc
push
rcl
inc
inc
pop
mov
scas
cmp
out
rcl
or
nop
sti
push
dec
push
jno
and
sbb
xor
sahf
test
push
subl
inc
mov
popa
ljmp
sbb
fsts
sahf
ja
ja
mov
scas
mov
mov
stos
xchg
mov
ret
lods
or
dec
cwtl
xor
adc
sbb
std
sar
push
insb
adc
sbb
sub
daa
das
jmp
or
cmc
push
jb
sub
inc
test
inc
jnp
loop
sub
adc
stos
cmpsb
mov
movsb
in
jmp
push
pop
popa
push
sub
dec
push
mov
rorb
pop
mov
push
mov
loopne
fstl
xor
lds
ljmp
jno
xchg
movsl
ja
adc
cmpsl
xor
cmp
xchg
push
mov
sti
inc
sbbb
testl
lods
shlb
cmp
and
flds
add
in
stos
mov
into
cli
fwait
xchg
mov
jmp
stos
icebp
dec
orb
add
stos
fimuls
cmc
adc
testb
mov
pop
add
loope
fsubrs
out
xor
push
sbb
xlat
push
or
xchg
jns
inc
push
add
inc
out
in
hlt
push
aad
test
sar
shlb
sbb
lcall
imul
int3
mov
fwait
sub
pop
faddl
stos
mov
sti
je
cmc
adc
jmp
jmp
insl
arpl
sbb
stc
in
enter
cltd
inc
inc
cmp
ja
xchg
shl
jns
ljmp
inc
and
ret
daa
sahf
pop
in
xchg
aad
cmp
or
idiv
mov
test
sub
xchg
je
fimull
push
aas
and
adc
xor
iret
fidivrl
dec
push
test
cli
cmc
insl
rcrb
jae
jp
sbb
lret
mov
aam
loop
std
xchg
mov
cmpl
in
sarb
mov
push
test
rol
movsb
lods
nop
push
or
leave
icebp
stos
iret
jmp
cmp
mov
sub
gs
jge
xor
mov
out
sbb
je
std
scas
sub
mov
add
aam
mov
add
jmp
cltd
js
mov
push
push
jb
out
fs
mov
hlt
int3
imul
adc
out
jmp
jmp
xchg
push
push
fistl
jp
sbb
sub
fwait
enter
fdivl
push
mov
dec
es
push
pusha
ss
js
stos
add
xor
loopne
inc
push
adc
push
js
pop
inc
hlt
push
push
xor
jge
mov
stos
loopne
sbbl
sub
out
aad
push
ljmp
jne
jmp
jp
sub
mov
int3
xchg
stos
jo
inc
mov
in
push
stos
adc
xor
add
je
mov
insb
dec
xchg
pop
ss
mov
cmpsb
and
xchg
add
test
sbb
mov
decl
jle
repz
and
nop
mov
outsb
mov
inc
and
cmpsb
fcompl
fsubrl
mov
pop
out
imul
stos
sub
arpl
lods
pop
ljmp
lcall
loopne
icebp
inc
jae
dec
jge
and
xor
sbb
cmpsb
imul
outsb
fsubr
xor
push
mov
out
dec
adc
call
pop
mov
rorb
mull
jb
in
jo
xchg
sub
mov
pop
mov
loopne
mov
jnp
loopne
imul
push
cmp
or
stos
popa
xor
cmp
pop
aam
jbe
stos
xchg
pop
dec
mov
push
jge
mov
pushf
jmp
mov
shrb
je
stos
cmp
gs
inc
clc
lea
stc
out
cs
stos
into
dec
lods
mov
sahf
dec
mov
and
xchg
or
loopne
mov
clc
mov
shr
xchg
jo
shll
ljmp
jbe
push
aam
lahf
setno
lcall
sbb
fldcw
out
in
testb
xchg
insl
inc
stos
stos
mov
addr16
mov
scas
in
cmc
xor
aad
pop
xchg
repnz
in
out
movsb
test
jmp
iret
push
movl
scas
push
jno
adc
xor
sbb
mov
push
or
movsl
mov
and
sbb
jle
iret
loop
xchg
adc
dec
aaa
pop
inc
stos
imul
ja
cli
mov
inc
out
lods
shll
pop
jne
imul
xchg
sbb
or
out
xor
insb
outsb
sub
xor
icebp
in
jns
add
stos
cwtl
xlat
mov
and
push
pop
call
push
jl
mov
scas
xor
or
push
inc
enter
lea
loope
sarb
jge
pop
jns
jns
cmc
fwait
pop
pop
fwait
dec
pop
jmp
stos
and
mov
jg
push
cmp
xor
jl
pop
stos
sub
fcomps
jmp
mov
mov
xor
xchg
pop
inc
jnp
cli
jmp
jnp
adc
push
lcall
sub
orb
addl
pop
gs
and
scas
cld
rorb
je
aas
test
dec
stos
push
aaa
shlb
inc
lahf
push
dec
call
xchg
mov
stos
jg
test
sti
sbb
xchg
jmp
xor
sbb
push
inc
repz
imul
mov
subl
fimuls
xor
dec
dec
sub
in
xor
xor
sti
ljmp
ds
inc
loope
test
mov
popa
sbb
or
sub
popf
outsl
xor
lock
lret
aad
dec
jg
stos
das
stos
mov
std
sub
ds
push
and
mov
xlat
cmpsb
push
dec
xor
mov
lret
shlb
xor
cmp
mov
jmp
daa
ljmp
repnz
inc
sbb
sbbl
in
js
js
int
inc
inc
mov
aas
jno
cs
int3
and
jmp
inc
in
push
in
aad
mov
cli
pop
xchg
lea
stc
push
int3
lds
leave
xchg
push
scas
xor
push
std
mov
orl
xor
jb
cmp
and
in
inc
scas
push
sbb
pop
or
sbb
adc
or
in
fisttpll
aas
push
subb
mov
sbb
and
adc
jno
in
mov
jg
push
fisubl
sub
pop
add
outsl
jp
stos
arpl
lds
sub
push
adc
or
add
inc
cmc
fs
out
stc
mov
mov
add
stos
xchg
pop
jno
aas
int3
mov
pop
movsl
mov
xchg
aad
scas
shll
push
mov
sub
add
test
push
movsb
insb
loop
bound
pusha
xor
mov
lahf
nop
cli
pop
pop
stos
xchg
insl
cmp
push
lock
lahf
or
push
or
cmp
xchg
sub
stos
bound
xchg
push
xor
mov
mov
call
fistps
int
cmc
cmp
std
cmp
popa
aam
mov
pop
xor
jg
aad
push
cli
xchg
cmp
es
aad
icebp
enter
add
arpl
je
jp
jno
sbb
stos
cmpsl
push
jp
xor
enter
ficoms
push
cmpb
mov
and
pop
es
orl
lcall
aad
jmp
add
xor
push
sub
pop
ds
fwait
shll
jmp
mov
mov
cmp
enter
je
imul
push
gs
dec
xchg
sbb
inc
sbb
xchg
xlat
orb
cs
dec
aaa
add
or
lret
add
shrl
push
push
fmuls
call
jns
movsb
lret
mov
xor
jns
dec
xchg
loopne
mov
and
imul
inc
orb
add
push
popf
es
xor
cmpsl
stos
jb
sbb
clc
mov
xrelease
dec
int3
gs
xchg
in
jl
xorl
jmp
sub
sbbb
push
push
fldt
jno
mov
pushf
mov
mov
psubd
mov
xchg
std
mov
push
jmp
cmp
add
or
push
mov
push
jne
pop
xlat
leave
adc
xlat
or
or
rclb
leave
rclb
pop
sbb
jecxz
push
sub
ss
adc
push
icebp
pop
dec
pop
pop
or
jb
push
ret
cmp
cmp
das
push
and
jge
and
xchg
push
sbbl
sbb
adc
xchg
cwtl
xor
icebp
add
sbb
jmp
mov
add
lret
mov
stc
xchg
repnz
shl
adc
jno
cmp
negb
push
out
jae
pushf
and
add
in
add
cmp
enter
stc
jns
in
lcall
hlt
fcomi
sti
jl
ljmp
inc
or
inc
cwtl
shl
push
mov
call
mov
stc
mov
mov
lods
imul
outsb
mov
fcomps
xor
pop
mov
xor
xor
inc
jmp
jecxz
jb
jmp
push
mov
clc
jl
shll
ficoml
icebp
push
insb
hlt
push
xlat
xor
aad
jmp
out
push
push
cmp
sbb
mov
xlat
rdpmc
mov
jno
out
mov
arpl
lods
dec
sbb
xor
lock
lods
jno
stos
xor
mov
ja
insb
mov
int
xor
outsb
push
pop
pop
sub
lret
xor
dec
orb
xor
pop
pop
dec
push
jmp
adc
adc
push
pusha
push
jecxz
es
aas
cmp
xor
sub
in
dec
addr16
xchg
stc
xor
stos
cmp
shrb
push
movsl
mov
das
push
mov
movsl
fucomi
fidivl
mov
lock
scas
mov
bound
jmp
mov
adc
inc
nop
cmp
push
or
xchg
mov
xlat
lret
aam
push
jmp
mov
push
icebp
pop
cmc
jo
or
and
out
push
mov
and
or
or
add
push
shrb
sub
mov
aaa
loop
mov
xor
pop
adc
dec
mov
push
xchg
loope
outsl
add
sub
xor
pop
cmp
movb
xchg
xor
ss
jns
pop
shl
frstor
test
jle
pop
daa
push
pop
xor
cmp
mov
nop
xchg
aaa
stos
arpl
sub
iret
xor
jmp
pop
add
mov
imul
insl
leave
cmc
xchg
in
imul
pop
adc
or
leave
and
mov
adcb
or
jg
fdivrl
dec
std
jmp
xchg
mov
enter
mov
adc
xor
gs
setne
test
jecxz
xor
fisubrl
sub
push
xorb
dec
cmp
js
mov
pop
push
xchg
mov
xchg
fdivrl
rcrl
mov
mov
shll
in
cld
int
mov
ret
stos
and
jne
cmp
jle
inc
inc
xor
cs
add
and
jmp
aaa
lret
lds
sub
je
pop
sarl
pop
fwait
inc
jo
mov
inc
mov
aad
orl
jg
inc
daa
mov
js
fwait
xchg
mov
jo
cmp
jecxz
sarl
bound
push
sub
cmp
mov
jnp
and
mov
cmp
rol
xchg
xor
xor
xchg
in
push
gs
lcall
jmp
loope
imull
lret
loopne
in
rolb
and
test
sub
int3
jnp
fs
lcall
insb
cmp
pop
adc
fidivrs
push
pop
sub
jp
jmp
aam
push
cmp
clc
pop
in
mov
xchg
adc
and
xchg
loope
xor
adc
push
scas
es
lods
dec
out
fldt
rcrl
mov
orl
adc
aaa
or
mov
xor
mov
pop
js
sarb
xchg
inc
addr16
push
mov
xor
fadds
dec
loop
lods
lret
stos
inc
dec
mov
cmp
rcl
dec
inc
push
mov
test
mov
cwtd
pop
or
in
dec
push
nop
dec
dec
xchg
ret
push
xor
xor
inc
jp
cmpsl
cmp
mov
dec
fidivs
and
dec
lea
test
stc
push
test
adc
sub
out
pop
mov
pop
shrb
mov
push
mov
add
dec
rcrb
dec
stos
mov
loope
hlt
mov
lods
stc
mov
scas
adc
or
mov
jecxz
lret
outsb
and
or
lret
inc
test
out
cmp
mov
ror
add
and
cmpsl
mov
jge
mov
jmp
ret
ds
push
stc
xchg
add
stos
cmp
xor
popl
notb
imul
pop
jmp
mov
mov
rcll
test
jecxz
popa
jmp
xchg
mov
sbb
or
sub
stos
dec
fcmovnu
xchg
lcall
in
cltd
stc
out
scas
shlb
push
ljmp
jnp
push
jne
xor
jo
pop
sti
xchg
stc
loop
xor
cs
push
pop
in
xchg
lock
mov
mov
xor
jg
aaa
out
dec
mov
push
sbb
dec
lea
mov
in
adc
and
movsb
je
scas
loope
ja
xor
call
pop
inc
shrl
mov
xor
fsubrs
xchg
jge
stos
fistl
call
xor
mov
popa
daa
xchg
shrl
add
inc
jno
mov
js
test
lock
in
and
push
in
jns
jbe
sub
repz
enter
cli
push
fistpl
jmp
dec
fstps
mov
loopne
aas
scas
xchg
test
mov
xrelease
push
mov
hlt
add
scas
mov
add
leave
and
adc
pop
fisttpl
jne
xchg
nop
in
icebp
out
out
jnp
cmp
lods
fimull
mov
xor
outsl
and
mov
fstl
mov
sbb
addr16
or
lcall
fsubr
jne
stos
sub
jge
jmp
jbe
mov
dec
cli
inc
push
mov
notl
mov
sub
lret
pop
mov
mov
push
mov
stos
inc
mov
sub
aad
sbb
pop
sub
lods
gs
lret
fmul
add
pop
inc
sub
or
sub
outsl
mov
and
jmp
rorb
sbb
cmc
clc
dec
out
cmc
push
mov
xlat
fnstcw
sub
pop
mov
inc
pusha
jnp
and
cmp
stos
mov
lods
jg
jmp
rorb
jle
mov
mov
ljmp
inc
xchg
xchg
xchg
jno
les
sbbl
push
shlb
xor
loope
cmp
test
addr16
jbe
push
rcrb
les
jnp
sub
and
sub
das
push
fwait
icebp
mov
xor
faddp
cs
fs
push
push
jecxz
cli
inc
clc
xor
push
mov
andb
repz
adc
xor
xchg
sbb
push
gs
and
sbb
dec
dec
sbb
dec
insb
imul
stos
dec
sub
mov
push
sub
mov
xchg
xor
das
xchg
xorb
jg
xchg
sub
add
adc
fcoml
mov
leave
jl
sbb
into
xor
cmp
stos
call
jg
cmp
popf
xor
cmp
mov
test
mov
mov
add
pushf
icebp
pop
mov
jnp
loop
jl
or
add
and
jns
xor
xchg
mov
stos
add
inc
lret
xor
fbstp
sbb
stos
mov
adc
in
inc
jp
inc
ljmp
mov
mov
test
mov
ret
leave
pusha
inc
shrl
jne
mov
mov
aad
cli
stos
jnp
fidivs
jmp
dec
mov
push
int3
stc
fwait
mov
push
inc
cmp
lds
stos
sub
shl
jnp
sbb
add
add
lods
in
mov
loope
xor
loope
mov
wrmsr
cltd
jg
xchg
mov
loop
sbb
call
push
aam
sub
cmc
out
xor
mov
pop
xor
leave
stos
test
push
aad
inc
popa
insl
fmuls
lods
test
pop
mov
cmp
cli
jmp
jmp
push
dec
inc
dec
or
push
xchg
pop
push
nop
adc
fidivl
push
mov
mov
into
push
cmp
push
dec
xchg
sub
cmp
xchg
ds
inc
xlat
dec
push
insb
push
fwait
ja
add
es
mov
mov
out
lea
sti
pop
jmp
adc
in
add
xor
pop
xchg
std
push
cld
repnz
jle
inc
xor
stos
in
movsb
loopne
cltd
jecxz
mov
adc
jecxz
rcll
ret
aas
xchg
cmp
pop
mov
jmp
in
pop
shrb
shrl
xchg
inc
sbb
push
sub
xor
sbb
imul
mov
cmp
iret
adc
stos
psubb
mov
mov
add
adcb
imul
in
xor
ret
aad
mov
stos
mov
mov
mov
mov
cld
cmp
and
xchg
sub
inc
in
mov
pop
and
xor
pop
lea
fnstcw
adc
xor
dec
fcompl
popa
rcrb
in
scas
imul
xor
out
imul
add
xchg
movhps
loopne
pushf
insb
xor
sub
push
stos
aad
cmpsl
sub
pushf
lea
xchg
cmp
push
les
or
lret
loopne
test
fbld
hlt
cmp
xor
cwtl
andb
mov
xchg
mov
sbb
out
adc
lret
fadd
push
pop
xor
cmp
push
xor
stos
mov
ret
repnz
movsl
cld
push
jae
js
and
cltd
inc
or
cmpsl
jne
jbe
mov
inc
dec
or
mov
push
icebp
push
push
iret
cmpl
jb
outsl
xor
xchg
inc
lcall
or
jp
and
push
jg
pop
jmp
mov
pop
push
push
mov
std
inc
mov
leave
js
aam
jmp
repnz
jns
shll
and
in
orl
push
clc
dec
jnp
push
push
push
mov
sti
xor
cmc
and
test
mov
jae
loopne
aaa
sub
xchg
int
xchg
push
test
xchg
add
mov
aas
in
xchg
mov
outsl
mov
push
pop
out
insb
out
stos
xor
stc
adcl
xor
inc
test
rcrl
and
aam
push
jno
jns
push
filds
jne
int3
cmpsb
pop
xchg
inc
setns
lock
or
gs
mov
stos
test
jle
xchg
icebp
cwtl
imul
insl
push
mov
dec
addr16
push
pop
push
sbb
cmpsl
jmp
add
fsts
cmp
dec
das
adc
addl
inc
loope
fdivl
lahf
mov
ret
sbb
stos
addr16
and
dec
mov
outsb
inc
or
dec
dec
jg
sbb
idivl
xlat
and
rcll
mov
addr16
lock
jno
push
stos
push
jns
fsubrp
mov
xor
cmp
fildll
lret
pop
mov
inc
bnd
ss
movsb
int3
push
jae
mov
dec
xor
lods
sub
stos
shlb
mov
int3
in
pop
js
push
lmsw
ret
mov
out
cmpl
jge
add
and
add
mov
pop
sub
xor
imul
stos
sbb
xchg
xor
mov
loop
push
inc
les
sub
iret
shlb
fstp
jecxz,pn
and
lods
leave
divl
rcll
les
lock
js
inc
lret
or
dec
in
cltd
push
lea
sub
ud2
xchg
xchg
jp
jmp
call
mov
push
pop
mov
sahf
pushl
arpl
cli
jo
xlat
aad
lds
and
jecxz
push
and
imul
dec
lock
jmp
in
in
or
int
jae
stc
add
jb
xor
xchg
dec
test
add
andb
dec
imul
loop
mov
shrb
sbb
or
pop
or
mov
mov
xchg
inc
lods
aam
xchg
sub
xchg
sahf
movsb
rol
roll
jmp
mov
push
mov
outsl
stos
cmp
jle
sub
clc
imul
xchg
adcb
jp
mov
cmp
mov
push
in
and
xor
stos
mov
inc
insl
sarl
mov
jb
push
pop
lret
cwtl
cmp
xchg
xor
mov
mov
das
adc
inc
loope
and
lcall
mov
aad
mov
pop
pop
adc
repnz
dec
push
adc
ja
shrl
ss
pop
sbb
jno
sbb
pop
jae
ja
push
jle
ljmp
jb
sbb
mov
dec
movsb
xor
xchg
aam
stos
sbb
dec
fucomi
jecxz
je
movsb
xor
loope
test
dec
outsb
imul
scas
sbb
mov
shll
pop
lea
cs
push
bound
je
push
cmpsb
sbb
loop
cmp
pop
mov
ss
inc
push
adc
mov
adc
popa
int3
movb
lret
ljmp
out
push
stos
pop
sbb
pop
jg
inc
jae
xorb
frstor
add
sbb
and
sbbl
ja
push
mov
std
nop
mov
loopne
sub
add
stos
fsts
popa
mov
sub
divl
xor
push
jb
and
jno
scas
xor
sub
or
push
pop
push
push
jg
js
lret
pop
ret
movsl
loop
jp
xchg
dec
xchg
push
cmp
sub
xchg
pop
push
shlb
xlat
aaa
or
jecxz
jl
clc
adc
movsb
cmpl
jg
push
in
loopne
push
mov
jp
pop
mov
mov
imul
push
push
outsb
pop
push
mov
inc
pop
and
ljmp
sub
popa
pop
les
mov
jbe
loopne
mov
js
push
mov
dec
xor
mov
jecxz
pop
cltd
push
push
loop
pop
into
jle
outsb
fldenv
aad
cmp
lock
mov
xchg
lret
push
mov
stos
and
addr16
xchg
fcmovnbe
pop
xchg
stos
adc
pop
ret
movsl
and
dec
sub
clc
add
inc
or
push
push
dec
add
movsb
lock
in
sbb
or
cmp
add
pop
jmp
sbb
out
mov
arpl
sub
push
mov
das
lret
ret
lret
xor
cmp
insl
mov
xchg
push
rcrb
push
xor
adc
lret
and
and
ficoml
add
sahf
xchg
push
aam
fwait
pop
dec
xchg
fldl
jmp
push
push
fwait
push
mov
mov
lret
insb
push
popf
fbstp
mov
loope
stos
hlt
cmp
mulb
mov
lock
sbb
sbb
test
dec
jl
stos
add
mov
inc
dec
dec
push
pop
test
add
mov
fistl
cmp
cmc
cmpsl
mov
cmp
xchg
jl
push
pop
daa
dec
lret
hlt
xor
aad
cli
in
cmp
xchg
sahf
dec
fcom
loop
mov
bnd
inc
or
mov
les
dec
inc
les
push
xor
xchg
fcompl
mov
mov
xlat
adc
int3
test
jge
dec
outsl
das
pop
push
mov
rcr
push
push
xchg
sbb
or
mov
ljmp
loope
leave
xor
aaa
pop
adc
icebp
repz
jmp
pop
pop
sbb
ja
dec
mov
shr
repz
scas
push
rcl
sub
xor
ret
push
test
mull
loopne
inc
stos
lods
xor
xlat
sub
stos
nop
loop
outsb
pop
jmp
adc
cltd
rcl
jp
in
or
insb
xor
add
pop
cmp
push
xchg
rorb
cltd
subl
xchg
cwtl
xchg
dec
xor
push
mov
mov
fimull
sub
sbb
std
adc
pusha
jmp
cs
dec
popf
out
adc
test
dec
shlb
xor
cs
push
aad
mov
jmp
std
push
sbb
popa
sti
push
test
cmpsl
mov
and
xor
push
sbb
mov
stos
add
mov
jne
sbb
push
les
int
sub
iret
jmp
inc
int
jmp
sahf
inc
cli
std
mov
jo
in
sbb
subl
and
or
movsb
inc
mov
xchg
xor
inc
dec
out
jecxz
adc
cmp
xor
xor
xor
xchg
in
cwtl
mov
js
mov
push
add
cltd
mov
xchg
push
cmp
sahf
pop
jb
jg
imulb
sbb
lret
xor
fdivs
fnstsw
imul
cmp
xlat
in
vpshufhw
inc
leave
mov
call
or
mov
xchg
stos
inc
add
cs
cmp
pop
xchg
sub
movsb
jmp
in
ret
mov
call
scas
xor
ss
or
dec
sub
push
stos
jg
cmp
xchg
mov
idivb
cmc
aas
cli
mov
add
and
xchg
lret
std
or
xchg
popa
sbb
sti
sub
sbb
jg
ds
xchg
cld
fisttpl
or
dec
add
sarl
xor
push
out
push
shrb
lret
xchg
stc
xor
push
xchg
cmp
mov
push
cs
add
add
sub
cltd
sub
pop
dec
pop
scas
cmp
push
mov
fisttpll
and
popa
outsl
lods
mov
jp
out
cmc
jg
insl
inc
push
jl
jle
cltd
ljmp
adc
shrb
mov
and
push
das
jmp
aad
cwtl
ret
sub
jmp
in
xor
leave
call
jb
xor
cmp
lcall
sbb
cli
in
outsb
pushf
arpl
push
mov
cmpsb
mov
shlb
addr16
xor
out
outsl
mov
int
ljmp
inc
loop
lahf
call
mov
cmp
xchg
xor
out
imul
inc
mov
jnp
cmpsl
test
mov
dec
dec
imull
pop
orl
cmp
clc
repz
mov
jg
mov
push
out
mov
lock
or
pusha
imul
int
loopne
js
jno
sub
mov
push
jns
add
add
mov
imul
mov
mov
rcrl
andb
mov
sub
pop
add
repz
pop
dec
sbb
arpl
pop
inc
dec
rcrl
dec
sti
xor
xor
push
je
popa
dec
test
ljmp
sub
out
jbe
and
jnp
mov
sbb
xchg
pop
dec
cwtl
push
xchg
mov
and
xorb
sbb
push
push
jns
xchg
stos
dec
loopne
imul
lea
sbb
int
decl
add
mov
push
push
push
insl
mov
push
jmp
cmp
in
fsubr
pop
cltd
mov
mov
add
into
scas
call
xchg
pop
push
fidivrl
fsubrl
xor
test
stc
and
push
jl
shrl
mov
mov
fdivs
inc
or
inc
ljmp
xlat
jmp
jae
dec
mov
xchg
push
jg
out
add
push
inc
jnp
jmp
out
cmp
scas
stc
push
and
adcb
xor
ret
or
stos
mov
aam
call
add
push
xor
movsb
xchg
push
lret
push
sub
out
lret
jg
mov
or
enter
or
pop
sub
scas
push
adc
mov
das
stos
mov
sbb
jmp
mov
xor
hlt
pop
cmp
pop
test
inc
adc
xor
xor
push
pop
xor
pusha
push
sar
adc
fldcw
pop
dec
jmp
xchg
fwait
insb
inc
or
add
or
or
push
fnstenv
idivb
das
push
fimuls
pop
out
jns
jmp
push
mov
mov
cwtl
ret
cltd
pop
pop
xor
and
sbb
ss
cmpsb
xor
dec
cmp
loopne,pn
push
push
cmpsl
cmpsb
mov
stos
and
xor
adc
lods
mov
and
cmp
mov
imul
in
fcomip
addr16
pusha
rcrl
rcrb
lret
xor
dec
ds
popf
push
jb
adc
xchg
dec
xchg
loopne
movsb
lods
dec
cmp
test
imul
fisubrs
push
xorl
or
sbb
rclb
lcall
in
in
mov
or
vmread
dec
mov
movsl
shrb
pop
xchg
pop
popa
add
ret
adc
xor
stos
sub
clc
sahf
mov
adc
fsub
and
aam
mov
jg
ret
in
cs
nop
dec
push
push
lcall
xor
idivl
xchg
stos
fucom
movsb
add
pop
xchg
in
pop
push
lock
test
or
mov
call
sbbl
inc
jbe
or
fwait
leave
jle
fdivrs
inc
mov
rol
xor
mov
pop
xlat
stos
and
sub
and
decl
das
lods
push
mov
xlat
mov
xor
stos
rclb
sub
icebp
popf
push
cmpsl
cmp
mov
cld
int
cltd
and
cmp
mov
sarl
in
fildll
subb
or
rolb
mov
lods
into
sub
popa
jbe
cld
adc
lea
xlat
cmc
mov
pop
and
jno
jg
aam
nop
and
xor
mov
jg
pop
jmp
aam
das
jecxz
movsb
sbb
bound
in
cld
or
push
dec
out
out
lods
push
mov
or
fbstp
loope
pop
sbb
and
stos
sub
pop
jno
call
loop
jnp
xchg
jmp
pop
dec
sub
mov
lods
mov
sbb
xchg
inc
adc
in
xor
fwait
cmp
mov
xchg
stos
push
push
int
mov
sub
jp
sub
dec
shlb
and
mov
jmp
push
sub
lods
rcl
dec
mov
inc
inc
fstl
cmp
mov
or
adc
mov
ljmp
mov
pop
test
ds
jmp
push
dec
vmulsd
xchg
pop
mov
push
adcb
jmp
add
push
sbb
stos
cld
movsl
ret
add
notb
outsb
stos
sti
or
sbb
fildll
jmp
lods
sbb
push
dec
add
pop
xor
or
int
rolb
sub
stos
jmp
in
les
mov
mov
mov
ja
pop
je
jl
add
pop
mov
ret
or
stos
xchg
imul
js
cmp
fists
scas
push
sub
les
mov
push
xor
movsl
adcl
push
or
xor
rcrb
mov
aaa
scas
stos
loopne
cmp
inc
jg
aam
pop
and
scas
lds
leave
push
repnz
int3
mov
xor
mov
mov
fldcw
mov
cmpsb
stos
add
rorb
xorb
adc
test
push
adc
add
lcall
repnz
imul
sahf
jg
jns
jae
inc
ja
mov
push
xchg
ret
xorl
data16
aaa
push
int3
mov
xor
or
jmp
aad
in
fmul
push
lods
add
es
aad
fwait
bound
aas
cmp
pusha
xor
lods
mov
jmp
test
insl
mov
fisttpll
push
jbe
add
push
or
sub
loope
ljmp
mov
pop
fmull
xor
or
or
xchg
sbb
inc
stos
arpl
cmpsb
mov
xchg
fs
lret
and
in
jp
xchg
xchg
int3
cmp
rcrl
sbb
or
das
loope
sub
sbb
cmp
or
add
push
sahf
in
cmpsb
adc
shlb
and
ret
hlt
push
pop
cmp
jo
push
test
cmp
stos
dec
movsl
fdivrs
lods
jo
into
leave
and
sub
pop
leave
lret
jmp
pop
add
data16
mov
and
cltd
sahf
lahf
xor
stos
inc
cmp
xchg
jmp
daa
cmpsl
movsb
mov
jmp
test
add
dec
clc
insl
sub
mov
loope
or
and
loope
hlt
pop
xchg
rorl
sbb
xor
leave
mov
test
rolb
xor
lahf
aad
je
hlt
cmp
loopne
jecxz
push
fiaddl
push
push
jne
xchg
sbb
cmp
add
xor
dec
sub
or
xchg
leave
push
lock
cmp
rcl
xchg
dec
add
cmp
dec
xchg
cmc
xchg
scas
pop
add
push
stos
in
cmp
xchg
loopne
pop
mov
insl
mov
and
call
pop
test
add
ret
repz
xor
arpl
insb
and
negl
xor
int
shll
xchg
fsubrs
rorb
sti
xor
xchg
push
negl
stos
lds
fs
cmpsl
arpl
inc
lods
les
sub
jmp
mov
mov
pop
sbb
dec
lock
cmp
add
outsb
mov
out
mov
add
xor
cwtl
sbb
cld
stos
xchg
xchg
leave
lods
ja
loope
mov
xor
jmp
int3
scas
push
psubsw
push
or
test
testl
cld
sub
or
rcrb
mov
rcl
stos
mov
loopne
nop
xor
cmp
stos
fsubrl
bound
mov
cmp
stc
ret
sub
cmpsl
lea
outsb
insl
sbb
addl
xchg
ret
stos
lock
push
xor
movsl
or
or
sub
das
in
loop
xchg
insb
cmpsl
xor
xor
stos
pop
xor
lahf
decb
ret
mov
lea
pop
push
in
ja
mov
stos
mov
mov
push
fstl
mov
adc
inc
popa
sbb
pop
push
xor
lret
test
out
iret
pop
stos
bound
sub
int3
out
faddl
loop
xor
push
roll
add
xor
adc
lea
nop
xor
pop
aad
inc
sbb
push
push
jns
out
iret
mov
ficomps
insb
lret
mov
push
dec
hlt
and
out
scas
jmp
es
pop
push
xchg
jg
outsb
sbb
push
mov
pusha
cs
sub
stos
sbb
add
fadds
adc
jle
insl
pusha
insl
es
mov
inc
popf
sub
insb
push
jb
xor
int
xlat
stos
xbegin
adc
jmp
enter
jns
pop
push
jb
and
xchg
negl
or
cmp
mov
mov
pop
push
incb
scas
xor
ds
mov
movsb
push
cli
dec
inc
std
jbe
jp
mov
push
jae
inc
push
xlat
addr16
xor
sahf
sbb
stos
mov
nop
inc
pop
aas
lods
mov
mov
cmp
xchg
imul
loop
or
fcmovb
push
imul
repz
nop
xor
sub
mov
push
and
xchg
pop
mov
rclb
sub
push
inc
mov
or
loopne
gs
in
inc
repz
push
fdiv
stc
repz
jnp
in
iret
lcall
inc
outsl
into
add
insb
dec
fidivs
xchg
xchg
mov
ret
dec
mov
mov
xchg
pop
dec
and
jp
push
jl
xchg
push
and
jle
xor
sub
out
jmp
or
sbb
or
or
lahf
mov
xlat
into
and
and
popa
or
gs
int3
xchg
pop
dec
stc
pop
mov
inc
lds
dec
ret
imul
in
sub
mov
sahf
sbb
repz
pop
inc
stc
clc
cmp
and
and
or
xor
dec
jge
enter
xor
and
arpl
call
adc
out
cltd
pop
sbb
scas
in
in
xlat
sub
pop
push
push
imul
iret
mov
aas
xor
ror
mov
pop
roll
dec
fsts
adc
cmc
cmc
iret
cld
add
mov
mov
dec
adc
mov
push
andb
stos
xor
jmp
ss
jne
sub
ret
jmp
xchg
add
pusha
mov
dec
or
sti
and
sub
stos
jecxz
and
jno
ficompl
sbb
jne
movsl
stos
sub
or
out
jmp
adc
adc
adc
test
les
out
push
push
lea
mov
dec
jnp
xor
cmp
inc
xchg
lahf
lods
jne
xchg
inc
sti
adc
dec
ljmp
ret
stos
xor
sub
dec
pop
pop
sbb
xchg
add
xchg
lcall
mov
pushf
call
inc
lret
jmp
scas
int3
outsl
movsb
push
fwait
push
gs
jecxz
std
pop
pushf
pop
jle
adc
incb
gs
aaa
sub
push
xor
pop
xchg
inc
movsl
insb
pop
dec
stos
stc
and
and
in
aas
inc
pop
sarl
test
and
jmp
lahf
sbb
jmp
cmpsl
pop
mov
push
mov
in
cmp
pop
cwtl
aas
adc
cmp
lea
sub
fsubp
push
subb
arpl
xor
mov
and
dec
stos
jge
aam
lea
mov
xor
push
call
xchg
test
cmp
mov
xchg
ret
dec
repnz
mov
xor
sub
loope
jg
jle
stos
test
bound
xchg
mov
pop
push
lea
out
inc
jl
push
mov
into
ljmp
pop
xorb
add
loopne
dec
stos
lea
std
fsubrl
mov
lds
mov
dec
repz
outsb
rcrb
clc
xor
roll
out
scas
das
adc
fmull
movsl
xor
icebp
dec
mov
out
fsub
or
arpl
mov
test
mov
push
mov
and
hlt
pop
mov
inc
inc
movsl
lds
dec
cmp
pop
int3
cs
mov
mov
std
mov
daa
addr16
pop
pop
insl
add
mov
shrl
xor
dec
movsl
mov
stos
sbb
xor
push
das
push
xlat
jno
xchg
xor
in
pop
mov
in
sbb
aad
jnp
ljmp
pop
outsl
in
fmull
xor
stc
push
pop
cmp
popa
rcrl
mov
xchg
push
jmp
mov
xor
test
xchg
push
stos
scas
popa
repz
leave
jmp
inc
into
icebp
xchg
sahf
and
ficoms
ficompl
jno
mov
xor
xor
pushf
fstps
fiadds
push
xchg
push
or
mov
mov
xor
inc
mov
xor
jnp
mov
gs
out
sarb
xchg
jb
outsb
ret
xorl
xchg
pushf
push
mov
imull
push
pushf
add
mov
pop
enter
inc
mov
xor
rcrl
lds
xchg
dec
jo
cmpsb
stos
dec
dec
and
sbb
sbb
mov
mov
xchg
push
mov
cld
xchg
xchg
out
fnstenv
in
pop
push
ljmp
stos
pop
lea
bound
ja
cmp
addl
cltd
stos
test
mov
ret
xchg
aad
xchg
or
cs
stos
sub
sbb
icebp
pop
ljmp
add
je
scas
stos
aad
adc
sub
push
mov
das
cmp
sub
adc
push
xchg
jo
jmp
aaa
push
add
fbld
push
xchg
shll
adc
in
out
cmc
jmp
push
call
dec
int
xor
popf
enter
shrb
pop
push
add
mov
xor
jge
arpl
jns
and
outsl
xor
adc
mov
add
sbb
cmc
mov
fsubs
jmp
push
shrl
sbb
insb
outsl
xor
push
pop
pop
xchg
cltd
fsub
push
and
cmp
push
arpl
lods
fcomps
xchg
jl
scas
enter
xor
dec
pop
jae
cmpsl
dec
stos
pusha
and
inc
adc
jmp
mov
xchg
push
cmp
fisttpll
push
mov
fwait
mov
lahf
inc
lea
mov
xor
lock
cmp
jno
push
inc
mov
inc
sbb
dec
sbb
push
fdivrs
mov
out
and
add
cli
sub
das
je
fs
idivb
xor
xchg
lock
rorb
icebp
dec
mov
jmp
popa
inc
xor
xor
stos
push
cmp
push
fdivl
nop
mov
xor
lcall
lret
add
sbb
lcall
mov
mov
lods
mov
xor
mov
iret
mov
rcrb
cmp
push
gs
lea
sbb
test
xchg
xchg
loopne
pop
stos
nop
mov
popf
push
push
xchg
inc
jmp
jmp
pop
add
and
bound
xchg
pop
xor
push
rol
fnsave
lret
arpl
jmp
inc
mov
aaa
mov
inc
xchg
pop
je
xor
fstl
stos
xor
xor
sbb
add
xor
movsb
xor
imul
xor
add
gs
stos
push
sbb
aaa
addl
fists
mov
pusha
jmp
xchg
xchg
dec
out
pop
xor
dec
scas
push
pop
scas
add
inc
popf
pop
data16
mov
add
xor
mov
jae
and
sub
mov
into
xor
adc
insb
out
stos
lcall
jp
mov
xchg
add
cmpsl
dec
xchg
adc
mov
sub
das
mov
lds
xchg
pop
insl
pushf
mov
jmp
pop
test
xchg
cmp
hlt
stos
faddl
and
test
mov
pop
outsl
into
lods
add
stos
mov
push
sub
loop
jmp
adc
mov
stos
les
pop
sbb
push
in
xchg
fimull
popf
leave
stos
jmp
pop
push
pop
hlt
mov
add
call
mov
push
xchg
xchg
mov
xor
stos
push
in
mov
aas
jp
lcall
lods
jmp
or
out
outsb
push
enter
xorb
cmp
sub
sbbl
cli
sahf
xor
and
mov
cmpsb
or
and
mov
pop
lods
jp
sbb
cmp
mov
lcall
and
scas
pop
rcll
pop
xor
loope
stos
jmp
jb
in
or
xor
mov
or
or
sub
lret
jb
ds
xor
inc
pushf
push
pop
pop
scas
lock
mov
dec
mov
fists
jno
test
addr16
xlat
dec
pushf
movsb
xchg
adc
or
jmp
mov
mov
aad
dec
std
mov
incb
stc
out
cmpsl
popa
sbb
cltd
imul
mov
fucomip
ja
pop
mov
popa
mov
add
pusha
xor
sbb
mov
cmpsb
pop
push
jg
cwtl
ss
out
fdivs
rorb
inc
push
insb
dec
fs
mov
push
xor
and
ret
lock
movsb
jno
jo
les
or
push
daa
inc
sbb
shrl
jnp
shlb
repnz
xor
test
sbb
push
adc
int
jl
arpl
jae
pop
lret
sub
mov
push
enter
cmp
aad
adc
push
loope
push
mov
rolb
pop
push
int
lods
enter
xor
stos
xor
jmp
dec
repnz
push
jp
jp
sahf
int3
cmp
xor
in
mov
dec
adc
and
pusha
int
jo
mov
cli
push
lea
mov
or
xchg
in
xchg
loop
pop
arpl
fldt
call
pop
inc
por
or
push
pop
shl
pop
jno
in
xor
xchg
dec
pop
add
imul
pusha
lret
jae
xor
jp
ss
dec
dec
stos
aad
mov
adc
or
call
aam
insb
jmp
stos
dec
movsb
ljmp
adc
orl
xorb
and
or
cmpsb
mov
jle
sbb
test
into
xor
fstp
and
pop
push
push
inc
jge
lds
mov
test
iret
iret
lret
cwtl
test
icebp
cmp
scas
push
add
int
adc
jecxz
out
jl
jmp
idivb
jmp
pop
insl
ret
in
repz
outsl
or
pop
sub
sub
sub
sub
push
stos
dec
lea
mov
aam
cmpsb
stc
mov
xchg
shr
xchg
push
ljmp
add
jbe
sbb
testl
arpl
inc
and
cmp
jle
mov
sub
dec
xchg
rorl
gs
stos
stc
sarl
repnz
into
xor
jge
fstps
push
inc
dec
rorl
fldenv
or
insl
push
add
imul
xor
popa
addr16
xlat
inc
mov
repnz
data16
sti
fnstenv
in
jo
js
out
mov
das
es
and
or
sub
sti
movsb
dec
push
jns
jmp
pusha
adc
rcrb
loope
insb
cmp
push
xor
push
stc
add
jnp
stos
or
imul
mov
adc
je
stos
pop
cmp
bnd
sbb
data16
outsl
and
or
and
xchg
xor
stos
sub
rcl
mov
shl
daa
mov
pop
sbb
ja
push
mov
loop
jno
push
ss
movsl
mov
lods
and
add
testl
ljmp
xor
mov
mov
int3
jmp
jmp
pop
fwait
xchg
mov
movsl
rcll
in
testl
add
jb
imul
or
sahf
jmp
sbb
loop
adcl
pusha
mov
je
leave
mov
mov
mov
test
xor
xor
fstpl
int3
aad
mov
jecxz
mov
into
cli
dec
mov
std
ja
rcrl
mov
xor
pop
cs
icebp
test
aaa
test
dec
ja
push
jae
scas
cmp
xchg
das
shr
je
sub
jge
xchg
xor
pop
xchg
rcr
cmpsl
popf
mov
data16
hlt
xor
fnstenv
mov
pop
dec
push
add
movsb
and
cmc
insb
cltd
sbb
sbb
std
mov
push
add
shll
iret
rcrl
add
add
jmp
ja
cmp
pushf
push
push
fistpll
shlb
mov
subl
jmp
in
fldenv
icebp
push
sbb
dec
outsb
mov
mov
leave
test
push
les
insb
data16
sub
xor
push
xor
inc
in
int3
popa
sbb
dec
mov
fstps
and
ljmp
or
mov
xchg
addl
jp
push
dec
or
dec
mov
in
mov
adc
pop
inc
dec
sbb
hlt
add
sub
mov
sahf
pop
lods
lcall
fwait
pop
and
aaa
add
outsl
xchg
dec
mov
cmp
xor
xor
iret
stos
mov
xchg
mov
cmp
data16
sahf
pop
in
dec
outsb
decb
shll
stos
shrb
xorb
sub
std
xor
push
es
cli
push
arpl
and
mov
in
mov
dec
mov
stos
rcl
or
pop
movb
loope
jp
notb
push
adc
fldl
dec
sbb
stos
inc
or
iret
mov
loope
xor
outsb
push
cmp
push
pop
xor
sbb
push
cmp
add
loope
xchg
dec
push
sub
loopne
sub
enter
bound
xlat
divb
scas
dec
mov
les
cmp
and
jge
jo
mov
daa
mov
das
loope
repz
imul
push
rolb
shrb
arpl
mov
dec
aam
push
aam
ja
sub
movsl
test
in
jl
xor
daa
xchg
pop
int3
mov
xchg
mov
or
or
inc
pop
int
ret
ficompl
xchg
xor
xchg
jne
pushf
bnd
xchg
pop
mov
daa
push
sub
fs
cmp
jmp
dec
hlt
pop
cmc
in
push
and
push
pusha
xor
pop
jne
push
and
adc
xchg
adc
xor
mov
or
fstl
jmp
pusha
sbb
jmp
jmp
sub
int3
xor
dec
call
add
sub
fwait
mov
push
in
cmp
and
jmp
ret
iret
in
and
push
sub
cmc
jne
xchg
or
les
negl
jo
add
dec
jno
mov
in
mov
lcall
js
add
mov
push
std
xchg
incb
xchg
aaa
cmp
jbe
mov
repnz
add
push
push
pop
lods
cmovge
or
pop
in
add
rcrl
jg
push
and
iret
jno
mov
imul
xor
sub
mov
push
loope
push
xchg
fsubrl
mov
xor
lods
sbbb
cmc
stos
outsl
dec
inc
or
popf
jo
mov
pop
dec
ret
adc
cmpsl
pop
lods
push
mov
push
adc
add
iret
rcrl
add
loopne
sub
add
mov
xor
decb
xchg
mov
daa
movsl
adc
pop
sti
cmc
jmp
scas
mov
mov
cmp
sbb
in
out
mov
repz
mov
cltd
bound
mov
in
jbe
enter
push
int3
push
sbb
xchg
int
pop
add
fs
hlt
jo
mov
stc
cld
icebp
jmp
or
sub
push
rolb
sbb
pop
psadbw
xchg
test
push
fistl
daa
or
ret
xchg
fildll
xor
mov
movsl
mov
add
xor
and
orb
adc
mov
sub
jmp
test
fwait
sub
hlt
andb
in
lahf
sub
xchg
mov
mov
add
test
call
and
adc
xchg
jmp
xchg
cmp
cmp
popa
mov
repz
add
out
jmp
lea
rcll
out
mov
xor
in
incl
pop
mov
loope
dec
or
mov
or
jno
mov
aaa
and
push
mov
xor
pop
test
stos
out
jmp
add
fwait
sub
scas
sbb
mov
xor
sbb
push
pop
push
sarb
xrelease
lret
or
lea
orl
std
cltd
and
leave
loop
fwait
hlt
je
movsb
cs
jno
imul
xor
adc
mov
aaa
pop
cmpsb
fidivl
lret
add
arpl
in
dec
or
loope
sbb
push
mov
hlt
push
dec
xlat
jmp
sub
stos
stos
aaa
jle
push
fcomi
movsl
cmc
mov
push
lahf
xor
cli
and
dec
ret
jle
mov
test
jmp
shld
jnp
push
cmpsl
xor
add
add
xor
push
and
data16
hlt
cmc
pop
sbb
mov
imul
bndldx
or
cmc
loopne
xor
scas
dec
sbb
repz
sti
movsl
lret
call
pop
sub
les
stos
shlb
daa
jmp
mov
xor
repz
xlat
outsb
mov
or
dec
gs
loop
ret
daa
lret
add
mov
dec
lea
stos
shll
aad
fs
add
lods
xor
pop
xchg
mov
leave
data16
push
xlat
inc
rorb
push
in
fwait
loopne
xchg
inc
adc
sbb
add
pop
xor
dec
add
mov
pop
sbb
sbb
mov
pop
fwait
lret
cmp
jae
mov
in
and
pop
push
xchg
mov
xor
mov
lea
jmp
in
jle
notl
movsb
popf
lret
cmp
cmp
scas
or
hlt
stos
and
mov
ret
dec
xor
adc
cmp
addr16
out
pusha
imul
inc
push
and
and
shr
repnz
push
cwtl
dec
imulb
adc
sbb
dec
stos
sub
xchg
mov
adc
pushf
jmp
stc
mov
pop
in
xchg
outsb
movsl
std
pop
xchg
mov
cmp
mov
push
das
xchg
ficomps
adc
mov
mov
in
repnz
stos
fdiv
and
lcall
cmpb
test
jae
aam
out
addr16
jmp
cs
clc
pop
cmp
xchg
aas
and
cmp
jle
repz
gs
xchg
push
out
imul
es
xchg
outsl
stos
xchg
fs
mov
ja
jle
lods
cwtl
outsl
and
inc
mov
cmpl
subl
mov
inc
jmp
jge
adc
test
pop
xchg
mov
mov
mov
loopne
cmc
je
sbb
test
enter
cld
sub
inc
sbb
pop
aad
and
and
imul
mov
push
adc
cs
or
lcall
inc
and
push
stos
fs
aaa
push
push
jge
out
jmp
loopne
inc
pop
insb
dec
or
cmp
rcr
insl
xor
jnp
inc
xchg
hlt
sti
jns
test
inc
in
dec
cli
cmp
adc
test
xchg
mov
xchg
imul
mov
mov
imul
mov
jg
add
cmp
add
jb
sub
adc
adc
or
stos
xchg
and
call
and
jnp
out
mov
lods
jno
xchg
arpl
jb
es
push
push
fisubrl
mov
cmp
aad
lods
stos
repnz
or
jne
fnsave
adc
pop
push
insl
sub
mov
sbb
into
cltd
roll
push
push
dec
stos
and
jecxz
aaa
pop
stos
sub
ret
xor
push
push
and
xor
enter
inc
or
in
ja
fcmovb
sub
cmpsb
in
scas
das
pop
jns
mov
stos
inc
in
cmp
or
shll
stos
mov
mov
and
dec
andl
stos
daa
jle
in
out
gs
pop
jmp
jns
sbb
push
xor
sub
sbb
push
data16
xchg
inc
cmpsl
cmp
and
ret
push
xchg
test
pop
mov
in
adc
sbb
mov
bound
outsb
hlt
pop
dec
ficompl
push
xchg
lcall
xor
cmpsl
adc
cs
dec
sub
dec
jl
aaa
cld
sahf
in
sbb
rorl
stos
mov
jmp
test
and
jne
pop
push
fstl
pop
push
sub
rorb
btr
out
dec
imulb
test
jmp
sub
leave
mov
push
cmpsb
dec
adc
pop
aas
lcall
gs
xchg
andnps
nop
js
sub
mov
inc
cltd
adc
add
jmp
xchg
xor
pop
fs
push
fcoml
std
sub
popa
or
ja
and
sub
lods
cld
push
xlat
iret
add
in
out
test
jl
xor
add
mov
mov
into
lea
ret
jmp
push
aad
push
push
fcoml
scas
call
adc
clc
push
movb
bnd
test
outsb
fld
clc
sub
xor
mov
dec
inc
cmp
pushfw
cmp
lahf
pop
jecxz
inc
lods
mov
jle
adc
pop
fdivl
stos
cmp
std
inc
and
je
xchg
pushf
inc
jmp
xor
jp
mov
lods
notb
std
jle
sbb
fimuls
out
dec
lock
test
push
les
in
sub
sub
xor
add
mov
movsb
add
sbb
sbbl
adc
lret
sub
sbb
fcomip
push
in
jae
repz
adc
in
rorl
lret
scas
lds
sub
lret
mov
inc
rcpps
adcl
jmp
or
lods
sbb
sub
push
pusha
jns
incl
cmp
ljmp
dec
add
mov
imul
pop
xchg
xor
mov
notb
push
pop
test
xor
das
stc
pop
xor
xchg
out
push
cld
in
outsl
jmp
pop
push
int
fsts
mov
mov
push
not
stc
cltd
and
mov
add
cmp
cltd
mov
aam
xor
arpl
enter
movsb
pop
shll
rol
mov
loope
fcomps
jb
and
xchg
stos
out
and
xchg
fcmovnb
aaa
outsl
in
sub
mov
stos
pusha
movsl
inc
push
adc
jmp
mov
adc
xor
aas
xor
popa
cmp
lods
push
cmp
lea
mull
pop
inc
ds
cmp
sbb
mov
js
inc
lcall
cmp
outsb
rcl
jmp
sbb
subb
adc
and
mov
mov
imul
cmp
cmpsl
mov
call
rcr
jns
push
push
scas
ret
pop
jmp
int3
outsl
sbb
iret
inc
adc
mov
dec
cmp
pushf
in
xor
or
sar
repnz
insl
sub
mov
add
iret
test
push
inc
mov
inc
hlt
xchg
les
mov
shlb
popw
xor
cwtl
cmpl
insb
cs
sub
jecxz
popa
ljmp
xor
mov
ja
mov
shll
dec
vandnps
xor
outsl
jne
aas
push
inc
stos
jmp
call
jp
and
push
adcl
cmp
cmp
jge
jmp
aad
fcompl
ds
pop
cmp
movl
and
mov
lret
stc
cmpsb
xchg
xchg
xchg
dec
or
inc
and
arpl
xchg
stos
movsb
sub
pushf
push
jmp
xor
adc
outsl
dec
sub
mov
repnz
mov
arpl
push
leave
mov
xor
sti
jp
push
out
adc
push
call
jae
xchg
xor
xor
or
test
stos
add
dec
xor
sub
push
cwtl
sub
mov
inc
out
test
jle
ret
or
push
adc
push
insl
rcll
jl
sahf
cmp
push
mov
movsl
pop
sub
pusha
xor
test
push
inc
add
out
iret
cmp
aas
push
inc
add
bound
mov
jg
jo
jmp
sub
mov
jle
bound
xchg
clc
adc
pop
aas
xchg
inc
and
imull
je
stos
inc
jmp
lret
loop
js
xchg
daa
aam
fcmovu
xor
cmp
push
xor
hlt
push
rcll
lods
pop
push
sub
imul
scas
sub
sub
sub
addr16
in
stos
mov
add
jg
pop
fwait
jmp
sbb
mov
dec
mov
push
sub
out
repz
lock
inc
mov
popa
mov
adc
jmp
cwtl
push
cmp
mov
jne
mov
add
mov
adc
sub
sbb
add
or
sti
pusha
inc
xchg
mov
call
push
loopne
or
mov
fnstsw
xor
into
cmpsl
mov
pop
stos
adc
test
loop
in
jmp
inc
inc
dec
fwait
and
push
adc
add
jp
pop
cmpsb
mov
jl
push
subb
rcrl
call
mov
lret
fstpl
push
cltd
scas
insl
gs
cmc
xor
push
push
lods
push
test
loopne
dec
xor
inc
sbb
push
mov
jae
xchg
roll
int
xor
nop
mov
stos
add
arpl
jmp
push
push
out
mov
jg
ret
jns
aaa
dec
xor
sub
pop
pop
jmp
sub
test
sbb
mov
mov
shlb
inc
rcl
sub
push
sti
push
cmp
jne
push
jnp
dec
push
ss
push
ficoml
out
js
xor
loopne
or
test
jmp
mov
pop
rorl
dec
icebp
push
pop
fcomps
popl
jle
push
jmp
xchg
pop
jae
inc
pop
sbb
inc
adc
and
mov
sub
rorl
dec
or
out
les
sahf
outsl
adc
xchg
add
scas
xor
dec
xchg
or
xchg
mov
xor
and
cmpsb
cld
xchg
push
inc
ljmp
xor
mov
xchg
xchg
ss
mov
negb
or
jb
neg
xor
stos
aas
jne
add
adc
sub
adc
ret
stos
xchg
xor
mov
scas
jne
bound
aam
sub
ja
gs
or
mov
das
or
data16
sub
cmp
adc
xor
dec
dec
adc
sbb
rsm
out
xor
scas
cmp
add
and
xchg
pop
sbb
mov
scas
and
fwait
mov
hlt
daa
stos
sbb
and
xor
cs
sbbb
dec
out
pop
mov
xorl
push
jae
xor
jmp
push
leave
dec
bound
sahf
dec
sbb
jmp
adc
add
mov
daa
push
into
std
lahf
dec
mov
shll
xchg
lds
or
mov
jge
lods
pushf
loop
cmovnp
xor
popf
int3
sub
jb
test
adc
aam
scas
stos
mov
dec
stos
add
push
add
call
mov
jae
mov
jecxz
sbb
stos
push
mov
or
jge
cltd
jmp
pop
pop
mov
mov
leave
xor
xor
xchg
fimull
jl
rclb
or
adc
fisubrs
int
and
mov
cli
insl
movsb
rcr
pop
xor
jge
gs
loopne
and
inc
cwtl
pop
push
movsb
jmp
loop
jecxz
fisttps
push
loope
push
xchg
jecxz
pusha
les
cmp
fsts
stos
sub
mov
lock
inc
sub
adc
ds
rcrb
xor
cli
pop
mov
fidivrl
rolb
les
jmp
int
pop
xorb
mov
cltd
mov
xor
arpl
bound
por
fdivs
dec
mov
push
push
pop
inc
bound
xor
cwtl
xor
dec
je
aad
adc
jb
test
pop
js
and
lock
repz
push
dec
pop
inc
sbb
or
enter
mov
and
xlat
jmp
push
jb
hlt
inc
popa
xchg
push
hlt
daa
push
dec
clc
mov
addr16
sub
stos
fmulp
jns
mov
call
push
push
cli
push
inc
pop
push
mov
out
mov
add
rorl
and
in
dec
inc
iret
dec
mov
pop
xchg
int
into
jmp
xchg
lret
insl
test
sti
in
out
xchg
out
add
xorb
mov
jl
xor
jbe
push
mov
inc
adcl
jb
and
jle
sub
mov
gs
jnp
push
sub
or
rcll
in
enter
mov
dec
jge
sarl
jnp
aam
push
xor
and
in
push
jmp
cmpsb
into
xor
mov
repnz
outsb
stos
js
fidivl
jl
out
insl
pop
adc
push
inc
aad
es
dec
adc
lret
add
hlt
daa
xchg
push
push
cmpsb
ljmp
mov
popf
fidivl
stos
sahf
loop
adc
jns
ja
mov
stos
mov
fs
jmp
scas
xchg
fsubrl
pop
lcall
lret
cmp
cmpsl
add
rol
push
inc
lock
int
pushl
stc
adc
jno
or
ss
mov
andl
aaa
frstpm(287
mov
lods
mov
xchg
rcl
push
movsb
jle
mov
or
call
and
xor
in
inc
mov
mov
and
ret
hlt
icebp
mov
push
adc
mov
sti
popa
add
mov
dec
or
cs
lods
int
jl
xchg
test
adc
add
addb
cmpsl
je
std
pop
out
popa
mov
subl
popa
dec
nop
cmc
fdivrp
pop
stos
lea
add
iret
lahf
pop
xchg
imul
mov
mov
cmpl
push
popa
push
push
and
fdivr
cmp
cmp
pushf
hlt
and
or
cmp
inc
bound
mov
inc
xchg
imull
ljmp
repz
and
pop
stos
mov
clc
mov
fidivrl
imul
push
push
negb
or
mov
repnz
sub
cmp
mov
loopne
ror
xor
dec
xchg
pop
inc
fbld
das
rcll
sub
pop
jmp
push
loopne
push
les
inc
out
xchg
mov
cmp
cwtl
mov
gs
dec
push
je
repnz
pop
push
cmpsl
xor
in
dec
into
pop
jmp
cld
mov
push
aam
insl
adc
cmc
sbb
or
arpl
dec
mov
mov
fwait
add
mov
aad
stos
sbb
stos
mov
movsl
jmp
jns
fidivl
xor
xadd
pushf
aas
jg
cmpsb
xor
lcall
movsb
jnp
or
mov
ljmp
push
rorl
stos
push
dec
adc
pusha
push
and
inc
dec
hlt
imul
enter
js
xor
push
imul
rorb
sbb
sub
jmp
pop
or
repz
jae
push
cmpsb
stos
and
in
fnstenv
sbb
mov
sbb
int3
pop
push
dec
loopne
xor
or
test
xchg
mov
xlat
mov
ljmp
mov
pop
inc
mov
push
jo
das
push
fiaddl
jg
xor
pop
push
mov
push
lds
inc
subb
out
ret
bound
ss
aam
adc
pop
inc
fldcw
adc
jo
and
adc
rclb
xchg
sti
mov
xchg
je
mov
or
mov
xlat
mov
stos
enter
or
lods
adcb
push
jno
sub
xchg
mov
lods
mov
std
jbe
xor
outsl
push
fs
push
fisttpl
dec
arpl
into
mov
or
decb
shll
js
xor
jle
lock
xchg
fisubrl
jb
jl
scas
or
cmp
jns
faddl
jp
in
fidivs
lcall
jno
mov
data16
iret
sbb
cmc
mov
call
mov
sub
faddl
mov
xchg
outsb
out
push
stos
movsb
ds
dec
sbb
fidivrs
pop
mov
jl
arpl
push
into
pop
movsl
dec
lds
cld
mov
cmpsl
movsb
stos
sahf
mov
mov
add
mov
xor
push
push
xchg
popa
fildl
jmp
adc
or
test
cli
popl
xor
mov
das
jne
test
xlat
dec
pop
push
sti
sub
loopne
xor
jmp
and
test
ficoms
push
mov
and
pop
jmp
gs
popf
ds
sub
dec
outsl
inc
insl
jmp
daa
dec
cltd
fdivs
dec
jg
lods
sti
dec
xor
inc
popf
cmpsb
out
outsl
jmp
fildl
fdivrl
or
and
jb
dec
pushf
ss
sahf
pop
or
inc
xchg
or
dec
shll
jg
xchg
dec
or
jnp
adc
push
jmp
cltd
jp
lret
dec
movsl
je
call
int
daa
and
add
dec
int
out
jns
push
or
add
shll
pop
sarb
lock
mov
xor
and
out
push
insb
lret
jbe
push
or
js
rorl
popf
in
dec
lret
sbb
mov
lcall
and
sahf
lea
mov
shrb
mov
nop
adc
lret
xor
xchg
adc
add
add
js
test
cmp
fistpl
sub
or
fisubs
call
lock
and
das
push
test
sbb
xchg
and
stos
sub
mov
and
mov
ret
pusha
addb
movb
mov
lret
mov
xchg
jmp
add
or
xchg
pop
es
adc
mov
rclb
popa
push
and
push
sbb
fcmovne
inc
les
jo
add
push
xchg
sub
inc
mov
mov
adc
inc
imul
xchg
sub
inc
cmp
iret
sbb
fwait
cld
clc
pop
or
add
push
mov
inc
lret
in
insb
stos
dec
xchg
xor
int3
mov
ds
xchg
out
jmp
fwait
loop
mov
mov
data16
jnp
xchg
lret
mov
pusha
inc
jge
nop
sets
pop
popf
or
mov
xor
sti
daa
jg
rclb
ljmp
sahf
pushf
lock
scas
imul
or
cmpb
mov
sub
insb
sbb
in
adc
mov
shll
daa
dec
push
leave
add
pushf
je
pop
jnp
push
dec
push
out
jle
cmp
xchg
stos
adc
dec
inc
mov
cltd
stos
sub
sub
mov
lcall
push
loopne
loop
iret
popa
sbb
mov
pusha
sub
fwait
lret
mov
stos
jecxz
arpl
xor
std
fsubr
dec
cmp
push
sbb
xor
dec
aad
stos
fwait
aam
xor
loopne
adc
push
mov
leave
cmp
jb
xor
test
cltd
jle
inc
aad
inc
and
and
pushf
push
in
inc
sbb
mov
sub
daa
imul
mov
dec
mov
cmp
test
icebp
xor
jae
incb
inc
cli
ja
in
stos
lds
mov
push
and
xor
cmp
mov
popf
dec
jle
pop
nop
test
stos
push
dec
pop
mov
and
fwait
xchg
in
inc
outsl
xor
lods
add
mov
mov
dec
mov
dec
push
fcmovne
sbb
stos
movsb
adc
add
mov
sub
enter
cli
jle
rclb
loope
lods
jno
xor
in
aaa
jnp
sahf
xchg
push
decb
xchg
ficomps
rol
xchg
and
cmp
xor
jg
es
orb
lret
loopne
aam
int
inc
adcb
gs
fcoms
bound
cli
std
dec
xchg
add
lods
pusha
push
mov
adc
test
popf
aam
repz
adc
pop
ja
ret
and
xchg
mov
jmp
out
or
jne
icebp
iret
mulb
divb
sbb
es
stos
imul
mov
shlb
add
vdivps
xlat
mov
sbb
sbb
out
loopne
sahf
xor
pop
and
sti
int3
iret
lret
inc
leave
dec
xor
popa
jno
into
cmpsb
test
frstor
stos
sbb
rol
dec
bts
push
sub
push
push
stos
xor
ss
inc
call
jnp
ds
into
loopne
jbe
inc
xor
jns
and
and
movsl
mov
es
stos
pop
mov
push
add
loope
pop
cmp
pop
in
jle
nop
push
lret
xchg
inc
jg
leave
cmp
push
jmp
adc
clc
jb
loop
in
xor
js
and
inc
sbb
hlt
push
jmp
mov
xor
sub
stos
add
movsb
cmp
mov
sub
add
ss
ds
cwtl
mov
lcall
pop
mov
in
adc
adc
loopne
xchg
movsb
call
push
jo
fldt
sbb
sub
cmp
aas
test
or
sbb
inc
dec
arpl
pop
ret
hlt
mov
cs
push
mov
xor
repz
cmp
test
adc
lods
add
sub
sbb
imul
jmp
jnp
popa
aad
add
pop
cmp
mov
sbb
outsb
push
insb
call
adc
inc
or
dec
pop
pushf
xchg
xchg
jb
cmp
popf
xchg
mov
cmp
mov
cmp
das
gs
xor
adc
jns
mov
sbb
add
loopne
mov
imul
call
xchg
lret
cmp
aas
dec
push
sbb
mov
cmp
xchg
cli
push
mov
lret
out
imul
enter
aas
ss
push
or
cmp
das
shrl
jle
sbb
mov
ljmp
pushf
pop
pop
xchg
xchg
push
mov
push
jb
insl
inc
pop
in
lahf
ret
push
xchg
test
inc
lcall
pop
sarb
call
add
jb
mov
lods
push
les
dec
out
bound
xlat
cltd
mov
push
push
lods
jae
mov
xor
mov
in
mov
scas
inc
out
xchg
lods
add
js
xor
stos
cltd
pop
ss
xlat
mov
jmp
xchg
fldl
cmp
stos
mov
push
cld
xor
fistps
dec
leave
pop
addr16
push
add
stc
xchg
iret
das
mov
test
ret
xlat
mov
push
pop
jecxz
ljmp
popa
mov
aas
stos
out
jne
ret
fnstsw
lds
adc
stos
cmpb
sti
es
movsb
lret
pop
arpl
xchg
fs
out
mov
mov
jmp
add
pop
imul
mov
idivl
and
stos
dec
jmp
lock
rcll
sub
adc
push
movsl
sub
rclb
xchg
ss
scas
loop
jmp
stos
sub
dec
push
xor
ljmp
jge
fldcw
mov
xchg
jne
xchg
cmp
sbb
xchg
xchg
mov
mov
lahf
cmpsl
inc
jns
pop
jmp
xchg
outsb
test
cld
cwtl
push
push
and
pop
jb
dec
xchg
pop
int3
jmp
mov
jb
pushf
mov
adc
repz
movsl
sub
pop
push
push
sbb
add
xor
icebp
aad
imulb
shlb
adc
add
sbb
loopne
jge
inc
daa
imul
sbb
or
outsb
mull
mov
push
inc
mov
jbe
maskmovq
testl
imul
in
lcall
add
adc
dec
and
dec
jg
stos
outsl
ficoml
pop
pop
aaa
xor
cltd
pushf
imul
xor
cmpb
xchg
mov
pop
outsb
push
sub
xchg
mul
sub
inc
fwait
cmc
mov
push
mov
push
adc
dec
lods
test
popf
lds
jmp
mov
sub
push
adc
add
xor
outsb
imul
mov
xchg
sub
pop
pop
mov
push
jmp
out
sbbl
stos
or
xor
jg
ror
jmp
pop
aad
or
fdivrs
insb
aas
jl
test
fwait
dec
fs
mov
fldt
in
push
loop
scas
fs
mov
jmp
lea
xor
lds
fildll
inc
or
mov
subb
cmpl
outsb
cmp
idivb
push
mov
mov
sbb
fdivl
mov
or
add
dec
xor
jp
jp
movsb
mov
mov
imul
lock
inc
sbb
add
stos
fs
inc
mov
mov
mov
movsb
pop
test
xchg
cs
add
or
loop
lea
jno
es
out
push
xor
fidivs
cmp
or
jnp
add
push
lahf
mov
cmp
and
pop
pop
aaa
rcr
push
std
or
cmc
mov
xchg
add
push
inc
and
or
in
mov
in
jge
mov
pop
pop
or
jbe
dec
mov
decl
mov
push
jmp
sar
inc
mov
jl
pop
ret
lahf
push
xor
int
and
jo
cli
stos
pop
lock
adc
cmp
mov
shrb
xchg
fwait
mov
stos
test
sub
mov
sub
lock
mov
jge
ja
dec
or
xchg
cltd
test
add
sub
and
in
cli
add
cli
jmp
cmpb
lret
iret
repnz
push
pop
js
shll
fcompl
out
in
fnstenv
mov
cwtl
or
xor
mov
ret
stos
mov
xor
outsl
adc
pop
cmpsl
push
mov
in
add
dec
stos
jbe
addr16
jmp
or
cmc
callw
push
imul
clc
xor
jle
jbe
adc
das
dec
jmp
xor
shl
mov
sbb
stos
jo
fst
fistl
lret
and
popa
jnp
cmp
jmp
mov
push
sub
mov
xor
mov
mov
xor
dec
adc
cmp
xchg
fiaddl
mov
sbb
rorb
and
mov
sub
push
cmp
jecxz
cmp
fsubrl
jne
xor
or
stos
or
push
mov
in
je
dec
rclb
neg
fwait
repz
sti
push
insb
andl
jl
rcrl
fidivrl
stos
jge
dec
jb
mov
xor
andb
popf
shll
sub
fldenv
or
dec
hlt
stos
test
sbb
mov
push
push
inc
xor
push
fsubrs
xor
insb
incb
aam
push
aam
fbld
int
push
jo
mov
mov
jecxz
mov
pushf
ret
fmul
fucomip
rcrl
push
push
cs
in
mov
jb
aad
lahf
sti
pop
sub
pop
out
cmp
jns
xor
in
stos
pop
ljmp
jle
aam
jmp
or
in
push
or
ja
xor
push
out
xchg
sub
imul
adc
cmp
xor
in
out
sti
xchg
jge
mov
data16
arpl
mov
into
mov
cld
jmp
pop
loop
repnz
mov
xor
inc
jmp
in
movsb
data16
push
aaa
jle
stos
daa
xchg
dec
jo
adc
mov
adc
push
daa
rolb
xor
pusha
xor
and
cmp
stos
and
outsb
and
xor
inc
jmp
cmp
push
xchg
fbstp
push
add
lods
ds
ljmp
xor
mov
lods
movsl
stc
xor
mov
mov
fdivs
sti
push
test
push
sbb
xor
xchg
inc
sbb
push
je
out
push
in
cmp
loop
pop
adc
and
ja
mov
push
xchg
or
mov
les
lret
xor
ret
loope
nop
or
sub
xchg
fldcw
call
mov
cmpsb
gs
xchg
add
addr16
inc
push
jp
jmp
inc
adc
push
outsl
dec
es
sub
and
push
jmp
aad
cmpsb
sbb
ret
scas
jo
add
mov
repz
xchg
lods
mov
mov
jne
pusha
loop
idivb
sbb
fsub
push
jno
fwait
imul
aad
xchg
jmp
shrb
mov
fucompp
sub
test
dec
inc
sbb
in
mov
add
out
imul
cs
mov
dec
xlat
mov
shlb
push
cwtl
and
and
daa
rcrl
pop
ret
cs
sub
adc
sub
jp
fbstp
lock
sti
jo
out
fadds
jmp
xchg
leave
xor
dec
xlat
into
loop
cltd
test
jno
fdivl
aad
add
xor
cmpsl
cltd
shr
call
fistl
nop
addl
xchg
jmp
lods
dec
ljmp
je
xchg
adc
in
arpl
sub
dec
push
repz
insb
xchg
push
or
inc
out
jae
dec
inc
pusha
aaa
inc
pop
test
sub
dec
popf
xlat
jae
jb
xor
xor
pop
or
mov
popa
rcrl
stos
loop
add
into
push
sbb
fsubrp
add
int
icebp
sub
or
in
in
cmp
jle
mov
mov
xor
cvttps2pi
adc
inc
jmp
add
out
and
fisttps
and
push
lock
ret
daa
outsb
push
stos
orb
sarb
xor
cmpsb
jnp
shll
iret
jge
mov
stc
or
cmpsl
pop
insb
stos
bound
inc
mov
sahf
add
les
lret
jmp
adcl
push
mov
movsb
dec
popf
mov
jmp
arpl
addr16
sbb
pop
ret
adc
adc
mov
jp
push
jb
ficomps
sbb
and
aaa
add
stos
dec
add
in
dec
jmp
cwtl
push
filds
mov
xor
jmp
ss
cwtl
push
adc
dec
js
dec
mov
sub
mov
lea
fiaddl
ds
push
cmpsb
addr16
adc
fsts
pop
xor
inc
and
xchg
leave
xchg
and
mov
sbb
mov
lods
jmp
pop
jns
xchg
ss
push
mov
mov
sti
xor
sub
xchg
lods
jnp
mov
jp
adc
nop
in
testl
das
xor
and
test
loope
pop
xor
sbb
lret
push
ds
mov
loop
test
aas
movsb
cmp
pop
push
pop
ret
insl
in
test
pop
lret
fisttpl
clc
aad
cwtl
jmp
repz
jecxz
cs
sub
xor
or
push
loop
cmpsb
inc
pop
and
std
stos
xchg
inc
iret
cmp
jecxz
sbb
and
add
fmull
xor
scas
xor
mov
sbb
mov
loope
mov
in
mov
xchg
cmc
xchg
sbb
loope
push
int3
pop
xor
mov
fbld
jns
mov
inc
aam
push
enter
les
and
fnsave
fistl
mov
xchg
xchg
push
rcl
and
push
jmp
ror
cmp
subl
jns
mov
iret
jecxz
and
cmpl
rclw
fisubrl
jle
fsubrs
dec
fstl
or
arpl
jmp
fs
or
mov
mov
cli
cmc
mov
mov
sub
mov
push
ja
das
jmp
arpl
push
push
mov
mov
rdpmc
in
pop
imul
mov
daa
jnp
or
daa
std
cld
inc
inc
dec
inc
pop
cli
push
or
in
shll
scas
mov
jmp
mov
or
adc
scas
inc
or
jmp
sub
xchg
mov
fcmovnbe
push
cmp
and
cmp
push
stos
xor
xchg
or
rclb
jle
mov
adc
stos
out
pusha
fs
aas
xor
insl
and
rorl
call
cmp
dec
sub
cmc
fstl
dec
jae
mov
inc
ljmp
loopne
or
aad
jae
inc
call
mov
lods
stos
lea
mov
cmp
fistps
rcrl
icebp
pop
mov
fwait
xor
jle
out
lcall
xor
push
xor
test
add
insb
shrl
mov
adc
cmp
fdiv
mov
insl
shr
out
add
fwait
popf
stos
out
aas
ret
dec
das
cmp
push
push
sub
xor
test
jno
adcb
inc
mov
int3
es
enter
lret
test
imul
xor
test
dec
arpl
ljmp
or
out
js
push
pop
shrb
adc
xlat
cmp
fst
sahf
push
lods
cli
or
pop
inc
fidivl
adc
sub
je
sbb
cmpsb
sbbb
fimuls
aaa
push
pop
push
inc
out
mov
xor
or
cmp
push
fldcw
lods
ljmp
sti
sbb
sti
loope
cli
insb
sbb
mov
out
in
pop
xchg
xor
sbb
push
jb
cmp
and
jb
push
jae
imul
or
outsl
pop
shll
or
adc
int3
jne
imul
xchg
mov
es
push
into
enter
das
jne
std
xor
jmp
or
sub
ret
sbb
dec
outsl
xchg
test
pop
mov
cs
push
sub
xchg
add
mov
jnp
dec
call
bnd
pop
push
push
leave
sbb
pop
fistpl
xor
add
imul
cltd
loop
call
and
clc
mov
xor
jbe
mov
scas
sbb
jae
hlt
cli
insl
stos
outsl
fbstp
movsl
into
xor
std
adc
movsb
adc
sub
lret
mov
mov
mov
mov
test
pop
nop
add
jmp
mov
fneni(8087
push
xchg
adc
and
cld
or
mov
rcll
imul
and
sub
in
aaa
cmp
add
shll
push
and
leave
mov
jp
dec
push
pop
push
js
lret
mov
dec
sbb
lret
insb
xor
imul
pusha
pusha
call
mov
pop
aam
xchg
repnz
xor
mov
loop
je
and
cs
xor
movsl
cmp
jae
test
pmaxsw
movsl
mov
mov
mov
mov
fisubrl
cmp
jmp
daa
push
add
mov
push
test
inc
mov
int3
stos
dec
popa
adc
mov
push
inc
out
and
dec
dec
pushf
outsb
mov
notl
cmp
or
push
divl
mov
sbb
jo
lock
and
mov
inc
out
or
ss
or
aaa
pop
push
dec
lods
dec
enter
or
inc
popf
lcall
and
stos
xchg
push
loopne
mov
push
stc
cld
push
fcoml
inc
call
scas
and
js
and
je
inc
dec
aad
adc
sarl
imul
hlt
addr16
stos
test
jp
mov
jmp
jp
cmp
xor
adc
shlb
ds
inc
adc
mov
mov
movd
subb
stos
mov
rcr
jmp
insb
inc
movl
adc
or
push
add
mov
cmpsb
bound
push
stos
daa
add
jns
mov
stos
mul
xlat
push
dec
fldt
jb
sbb
inc
xor
rcrb
inc
mov
cmp
repz
dec
fbstp
sub
setg
push
add
add
fsubl
mov
add
dec
call
insb
add
lahf
xor
xor
in
adc
es
jecxz
xor
hlt
cld
pusha
in
adc
out
scas
ret
stc
fisttpl
pop
push
fimull
mov
sbb
xchg
push
popf
xchg
ror
xchg
sbb
fs
jmp
imul
xchg
cmp
repz
fildll
pusha
adc
jecxz
and
pushf
xor
and
fldt
hlt
ljmp
test
jo
add
or
cmpsl
and
add
in
movsl
rorb
pop
xor
imull
hlt
mov
jl
lock
stos
xchg
adc
cmc
inc
pop
sbb
stos
loope
scas
enter
stc
popf
jo
push
mov
mov
jle
mov
iret
stos
cmp
add
inc
not
sbbl
das
clc
or
and
xor
rcrl
push
lcall
and
clc
ret
movsb
push
push
dec
out
jo
jg
inc
mov
mov
and
movsl
add
outsb
sub
rorb
xor
jl
jmp
lods
stos
pop
mov
pop
inc
push
insl
xchg
xor
adc
pop
stos
cmp
mov
add
pop
ja
mov
stos
shlb
test
adcb
inc
aad
xchg
and
pop
cmp
int
das
dec
in
push
push
push
sbb
repnz
mov
or
xor
lcall
xchg
mov
mov
push
mov
in
add
xor
or
jne
fwait
aam
mov
and
imul
sbb
mov
jbe
and
fcom
popa
ljmp
movups
mov
and
sti
in
outsb
or
test
daa
cmpsl
dec
loopne
pushf
fwait
push
pop
mov
ljmp
fcmovnb
cmp
je
stos
cmp
pop
inc
push
stos
ljmp
xchg
xor
repnz
lock
jmp
gs
inc
stc
push
and
push
cli
mov
push
mov
xchg
addr16
push
cltd
mov
insb
stos
mov
jne
aam
cmp
jb
cld
xor
mov
mov
jne
push
dec
dec
jae
lds
fstpl
cld
popa
push
bound
icebp
mov
aad
jmp
roll
pusha
or
push
hlt
pop
pop
shrb
xchg
xor
fmul
mov
dec
mov
mov
dec
das
or
fdivrp
mov
stos
jno
xlat
lcall
xchg
mov
sbb
stos
pop
ret
ret
loop
mov
or
cmp
xchg
stos
or
or
mov
lcall
fiadds
adcl
pop
pusha
bound
in
data16
push
jns
push
inc
aas
stos
cmp
faddl
call
and
sub
push
jno
adc
popf
xchg
test
pop
fdivp
mov
push
mov
lods
xor
nop
sti
lret
mov
idiv
scas
sbb
hlt
lret
cld
cli
mov
call
xor
pushf
jb
pop
lods
lahf
repz
dec
fsts
push
outsl
shrl
dec
popa
imul
cmp
gs
or
mov
sub
lret
pop
fs
cmp
je
in
xor
xor
cmpsb
inc
call
sub
pop
cmp
sub
mov
ss
in
fimull
fneni(8087
adc
xor
xor
cmp
rcll
mov
adc
mov
mov
fildll
jp
mov
cmc
sbb
add
jecxz
jno
xor
insb
xor
pop
fsubl
jnp
push
jl
xor
mov
push
cld
fldenv
pop
jo
insl
push
cwtl
push
xchg
mov
scas
fcomip
jecxz
lea
sar
test
out
inc
mov
dec
int
js
mov
and
or
cmp
xchg
lret
lock
addb
or
lods
and
xchg
fists
repz
mov
leave
mov
adc
push
fisttpll
jg
xor
fisubl
xchg
out
lret
push
andl
out
std
pop
xchg
xor
ret
xchg
push
inc
int
mov
loopne
dec
xchg
stos
dec
dec
xor
sbb
rol
sub
push
imul
lret
loop
es
xor
ljmp
xor
daa
decl
nop
in
sub
pop
nop
push
xor
fsubrs
stos
jp
xor
push
jnp
sub
mov
aas
push
inc
jp
inc
pop
cmpsb
out
xor
mov
movsb
xchg
mov
mov
iret
outsb
sub
cltd
push
mov
pop
xchg
nop
sbb
lds
mov
cli
test
out
stos
mov
je
sub
add
cmpsl
imul
ss
xchg
lods
fsubl
lahf
mov
push
loop
sbb
add
dec
repz
ss
push
add
pusha
mov
pushf
sub
or
in
push
das
dec
push
es
pop
pushf
sbb
xor
xor
es
dec
ljmp
pop
adc
out
lcall
int
push
fucomi
std
or
dec
adc
xor
sbb
rcrb
mov
shll
or
adc
lret
push
stc
jl
sub
mov
pop
dec
mov
das
xor
subl
jmp
push
testl
fisttpl
push
dec
ret
or
shr
sbb
std
test
cltd
andw
cli
xor
add
mov
cmc
mov
gs
divl
rcll
hlt
fistps
shll
bound
mov
ror
test
fldenv
stos
enter
inc
fadds
rcrl
push
pop
add
xor
or
cmpb
insb
xchg
or
mov
cwtl
int
xchg
mov
aaa
loopne
aam
sbb
mov
arpl
cmp
clc
xor
pop
xchg
xor
dec
ja
sbb
adc
divb
mov
std
mov
das
xchg
mov
imul
cmp
jle
dec
ljmp
lahf
sub
imul
dec
xor
push
mov
lods
sbb
sbb
test
xor
xor
imul
cwtl
je
pop
adc
sbb
cmp
stos
or
mov
ljmp
jns
add
fnstcw
and
dec
inc
jmp
and
leave
mov
pop
push
cmpsb
adc
clc
in
dec
jnp
ja
or
push
insl
xchg
flds
xchg
adc
xor
and
mov
push
xchg
mov
jmp
sbb
pop
push
xlat
push
push
enter
out
sbbl
andl
xchg
cvtdq2ps
pop
shrl
dec
pop
loope
xorl
mov
hlt
imul
cmp
data16
fsub
pop
xor
jno
shrl
adc
es
mov
loope
roll
ja
xor
adc
push
mov
cmp
jge
repnz
movsl
jnp
aas
mov
mulb
push
jmp
and
mov
xor
sub
lods
add
pop
mov
ja
cmpsb
jecxz
push
clc
sub
push
adcl
adc
movsl
enter
nop
or
imul
aaa
jmp
pop
cmp
mov
repz
ss
insb
test
xor
imul
mov
bound
fwait
lods
or
pop
jmp
dec
jl
mov
pop
rcll
xchg
inc
lods
jmp
or
daa
dec
lret
pop
push
jecxz
stc
xor
pop
sub
stc
dec
cltd
mov
or
popa
jmp
cmp
mov
or
mov
sti
xchg
sbb
rolb
push
stos
jge
sub
pusha
loopne
mov
enter
mov
enter
pusha
and
xchg
and
push
pusha
pop
fxch
shl
sbb
add
jmp
test
outsb
xor
test
dec
stos
push
pop
fimull
dec
insb
pusha
or
sbbl
imul
ds
lods
adc
jge
repnz
add
loopne
fucomip
push
jns
fwait
stos
and
out
sub
outsl
dec
fsubr
jbe
push
fdivrl
aas
xchg
pop
xchg
movsb
stc
push
jecxz
xor
jne
jecxz
push
push
mull
out
mov
sahf
xor
subb
mov
cmpsb
jg
or
mov
jmp
fs
jns
and
sub
fcompl
ljmp
xor
sub
es
pop
xchg
fistpl
xchg
xchg
jmp
push
stos
mov
jge
xor
cmpsl
add
xor
imul
test
in
imul
or
jb
lds
mov
push
mov
xor
xlat
test
pop
rcrl
jae
or
xor
xor
jge
sbb
mov
ficompl
inc
push
int3
daa
out
mov
inc
mov
into
mov
dec
stos
push
data16
leave
sbb
push
orl
push
jmp
in
push
imul
out
jo
test
xor
mov
test
jae
or
sahf
push
push
sub
movsb
pushl
addl
ja
add
fbld
sub
stc
jecxz
mov
mov
push
movsb
loop
call
cmp
xor
pop
sbb
stos
cmp
rcrb
jmp
cwtl
sbb
add
adc
insb
dec
std
push
jmp
gs
inc
mov
push
and
lahf
dec
les
pop
imul
mov
mov
outsb
stos
dec
mov
stos
or
pushf
add
ljmp
mov
pop
roll
xorl
sti
push
push
cwtl
inc
dec
popa
and
mov
pop
dec
add
adc
xchg
enter
push
pushaw
adc
cmpsb
dec
sub
outsl
cmp
push
pop
loope
int3
mov
negl
add
add
decb
fsubrs
sub
xchg
xchg
cmp
nop
inc
mov
loope
loope
push
in
dec
add
movsl
push
ftst
out
cmp
and
mov
xchg
and
pop
ljmp
adc
pop
mov
leave
xchg
loop
and
mov
bound
es
stos
test
test
jmp
cmp
xchg
push
add
mov
sbb
jbe
sub
lahf
xchg
mov
jg
test
add
or
push
ds
addr16
jmp
xchg
inc
stos
sti
cwtl
xor
dec
mov
setle
out
mov
mov
and
and
inc
es
popa
inc
xchg
push
mov
mov
in
push
fstps
xor
mov
out
ja
scas
jmp
rcr
mov
dec
mov
movsb
mov
aaa
mov
push
popa
lahf
fstl
stos
addb
sbb
xchg
imull
pop
sbb
push
push
mov
push
aad
ret
and
ds
mov
movsl
out
out
test
movsl
mov
pushf
push
inc
xor
fsubs
pop
mov
xor
dec
dec
shrl
cmp
insb
sbb
adcl
inc
lret
enter
jbe
mov
jno
ss
add
ljmp
mov
dec
stos
cmp
inc
sbb
xor
enter
out
inc
xchg
cli
lock
int3
jmp
pop
roll
jae
popa
push
pop
xor
daa
xor
mov
inc
jecxz
out
std
dec
mov
xor
fmull
fs
xchg
addr16
out
dec
xor
dec
push
inc
push
jmp
ljmp
push
imul
mov
and
add
xor
int
xchg
movsl
push
clc
mov
inc
adc
and
loopne
jne
cmpsl
mov
xor
ret
add
repz
jp
jecxz
in
nop
fiadds
mov
cmc
pop
jmp
data16
mov
push
xor
popa
jge
fcoml
in
and
test
fcmovne
sti
mov
insl
cmpsl
jno
out
popf
inc
xor
mov
jmp
out
cltd
setb
dec
jp
or
jmp
xchg
adc
inc
jle
adc
xchg
imul
lcall
adc
cmpsl
push
and
xchg
dec
cmc
jmp
push
out
jno
call
push
pusha
mov
nop
push
inc
scas
or
sub
lods
jl
aas
pop
pop
int
pop
enter
mov
jmp
ja,pt
push
dec
sbb
push
lcall
push
add
ds
pop
fisttpl
aad
push
pop
sbb
ljmp
popf
fwait
test
mov
int3
pop
lea
lods
or
aas
mov
rorl
jecxz
jbe
cmc
jle
into
lods
jbe
mov
out
cmp
insl
cwtl
and
push
sahf
and
fildll
in
push
xlat
pop
ljmp
push
mov
mov
sbb
sbb
jae
cmp
lods
xchg
and
xor
lcall
jmp
stos
mov
rcll
je
dec
cmpsb
or
xor
ret
pop
lret
pop
mov
add
push
jmp
dec
sub
push
xchg
mov
sub
stos
fs
loope
jecxz
jae
stos
icebp
mov
idivl
mov
add
push
lea
xchg
cmpb
aam
mov
js
lds
iret
push
aaa
loopne
xchg
pop
cli
and
fisttpll
dec
rcl
das
mov
loopne
daa
repz
addr16
ss
lea
out
pusha
push
dec
orb
xor
dec
fld
stos
jo
imul
fwait
addb
fnstsw
and
sub
fldl2t
out
lods
scas
pop
xchg
int3
loope
push
cmc
and
scas
xor
fs
jle
lret
push
popa
stos
or
fdivl
fcoml
mov
cli
fldenv
mov
dec
mov
mov
jns
push
mov
jle
int
pop
pusha
dec
jbe
jno
lret
push
jle
mov
fnstenv
fs
enter
push
out
bound
shlb
jbe
sub
cs
push
test
push
pushf
movsl
test
in
aam
in
xlat
push
data16
mov
jmp
cmpl
jg
and
xor
outsl
xor
xchg
lds
cmc
data16
jmp
cmp
cld
xchg
loopne
int
ret
repnz
xor
push
addr16
loop
pop
mov
pusha
aam
inc
mov
fstps
lds
adc
movsb
mov
add
pusha
cmp
xor
inc
hlt
dec
stos
into
xchg
bnd
mov
loopne
outsl
and
push
into
stos
push
aam
mov
and
movsl
xor
out
mov
adc
lahf
inc
pusha
jne
popf
leave
push
jbe
jns
data16
fstl
ret
add
jg
lret
mov
jbe
lcall
int3
stos
mov
notb
xchg
lret
push
sbb
imul
jp
sbb
push
hlt
push
rcl
mov
sbb
enter
add
insb
sub
cmp
or
lret
ljmp
jo
or
inc
xor
clc
cwtl
movsb
jns
dec
ss
mov
mov
cli
cmp
sub
daa
pop
das
push
xorl
psubusb
xor
mov
mov
jns
adc
inc
xchg
pop
xor
test
ss
cld
mov
hlt
pop
sbb
add
lock
aaa
jmp
cmpsl
xchg
lcall
xor
cmp
lret
rcll
dec
push
dec
mov
push
lcall
sub
mov
dec
lcall
mov
pop
cmp
mov
cmc
in
cmp
push
sub
dec
fwait
mov
jp
stos
dec
or
out
jmp
movsl
mov
mov
jbe
lret
sub
dec
mov
popf
jecxz
cli
mov
xor
lret
push
pop
dec
shl
push
push
dec
hlt
imul
cwtl
push
pcmpeqw
unpckhps
shrl
mov
jp
push
or
xor
packsswb
push
lds
clc
mov
pop
or
stos
ja
cmp
dec
adc
bswap
cltd
and
sbb
lahf
lock
rcl
inc
mov
jmp
pop
mov
movsl
gs
jmp
imul
js
mov
das
add
stos
xchg
ret
stos
test
or
push
pop
cmpsb
aam
inc
jae
subl
jo
add
sub
add
jmp
fdivs
hlt
test
in
sub
iret
int3
or
cmp
ja
jmp
or
fmuls
jmp
jns
inc
add
lcall
insb
mov
nop
sbb
xor
jo
ljmp
pop
paddw
stos
stos
cs
rcrb
inc
pushf
jmp
xor
pop
imul
stos
cld
mov
out
outsb
out
xchg
shr
xor
int3
dec
dec
mov
mov
outsb
xor
pop
ds
jge
sti
outsl
test
push
outsb
sbb
stos
lret
imul
fs
push
sub
push
aas
jge
fstpt
addr16
stos
aam
sbb
add
push
sub
sub
rorl
add
ficoms
xchg
or
jns
inc
jecxz
xchg
pop
sbb
xchg
jmp
xor
add
pop
clc
and
or
pushf
mov
jns
fcomi
insb
xchg
mov
and
inc
sub
xor
xchg
jnp
pop
int3
and
mov
xchg
xor
jb
test
stc
adc
sub
pop
in
sub
adc
fildll
repnz
cmp
push
inc
mov
inc
push
mov
jmp
lret
shlb
dec
xchg
imul
imul
mov
outsb
testl
sahf
jmp
push
push
dec
adcb
ret
das
inc
sub
aam
and
pop
push
lods
addl
pop
aaa
daa
add
mov
subl
mov
sub
in
outsl
sbb
add
cltd
or
jb
inc
out
dec
jl,pt
adc
shl
lret
fcompl
aaa
jnp
lds
push
and
arpl
sbb
xor
int
clc
ficomps
imul
arpl
fucom
imul
mov
clc
xorb
ret
and
mov
stc
lock
in
sub
jb
stos
mov
out
ret
inc
add
push
in
pushl
call
adc
lret
push
fsubr
in
xor
or
lahf
stos
xchg
test
inc
mov
sub
shlb
repz
jo
jmp
lret
sub
dec
fstpt
loopne
pop
pop
add
jns
cwtl
outsl
in
xor
mov
rolb
pop
dec
dec
add
dec
sahf
push
fdivr
cmp
sub
bound
jbe
or
in
and
in
push
in
cli
xchg
cmp
xor
dec
in
or
iret
setle
push
jns
insb
data16
insl
fsubr
in
lds
outsl
push
sar
mov
ficomps
enter
cmp
lock
or
jecxz
scas
push
das
subb
xor
gs
stos
cmpsl
adc
aas
in
out
add
jecxz
stos
mov
stos
jno
mov
daa
sbb
inc
sub
aas
fildl
or
rcrl
mov
mov
mov
xor
mov
js
pop
push
test
xor
push
xor
ret
cwtl
push
stos
popa
mov
fcoml
lds
dec
sub
lea
xor
xor
cmp
inc
xchg
mul
in
popa
call
mov
inc
lret
rcll
and
loopne
add
xor
repnz
loop
and
mov
out
xchg
or
push
jecxz
inc
jmp
mov
jecxz
pushw
cmc
outsb
mov
call
pop
call
pop
pop
shll
rorb
je
loopne
fisubrl
push
jns
test
inc
fidivl
rcll
jmp
bsf
xchg
jmp
push
data16
imul
fwait
xchg
add
sbb
stos
sbb
mov
sub
push
sbb
das
mov
leave
push
fwait
xchg
xchg
dec
hlt
pusha
push
leave
cs
ds
jnp
ja
das
test
insl
inc
mov
sub
sub
movsl
add
in
xor
push
add
pop
or
ss
int3
cmp
lods
das
loopne
cmp
stos
mov
or
addr16
and
adc
clc
ret
sub
sbb
scas
daa
xor
loop
sub
loopne
lods
and
xchg
push
push
icebp
jne
sbb
insb
sti
sti
lret
jb
in
xor
and
fpatan
loopne
mov
sub
aas
adc
jb
xor
dec
mov
cmc
xchg
push
cmp
cmp
insl
fidivl
movsb
mov
push
stos
sub
clc
movsl
jmp
xlat
fwait
xor
push
add
loop
das
les
movsl
fcoms
notl
jle
sbb
cltd
arpl
out
es
stos
shld
xor
lcall
lea
int
mov
or
daa
mov
jnp
xor
stos
arpl
popf
les
jns
sub
out
sarb
mov
push
inc
sbb
inc
or
popf
rolb
ljmp
mov
lock
or
cltd
jb
ret
das
xchg
push
jbe
adc
shlb
or
fwait
jmp
inc
pop
mov
fisttps
sub
push
loopne
ja
jbe
dec
jns
cs
and
loope
fwait
mov
inc
mov
sbb
stos
lcall
out
cmpsl
xor
mov
dec
inc
push
pop
jae
decl
das
xchg
cwtl
mov
pusha
sti
add
xor
sub
ljmp
or
ret
cmp
in
xchg
loopne
and
les
jae
adc
push
dec
dec
xor
ret
xor
insl
xchg
jle
fcmovnbe
imul
mov
pop
jns
xor
sub
clc
icebp
add
mov
mov
xor
mov
xchg
es
sbb
mov
xchg
movsb
fiaddl
movl
dec
fisubrs
shlb
lea
add
xchg
mov
jmp
lods
pop
movsb
bound
aas
mov
xor
scas
es
stos
hlt
push
outsl
push
rcrb
gs
in
xor
pop
call
push
jno
gs
push
sub
sarl
shlb
frstpm(287
xor
movsb
xor
test
cmpsl
pop
mov
stos
push
fisubrs
subl
out
jnp
iret
mov
shrb
div
sti
adc
or
sbb
and
adc
pop
imul
aas
arpl
add
movsb
mov
add
xor
or
std
test
xchg
imul
ds
stos
lock
daa
inc
pop
shrl
mov
jmp
or
xchg
mov
xor
push
sbb
out
pop
jmp
pop
aad
push
sub
dec
push
inc
hlt
cmp
testl
push
mov
cmc
sar
outsl
stos
xchg
lcall
jecxz
mov
xchg
fisttpll
ljmp
cmpsb
xchg
xchg
push
mov
add
stos
inc
xor
add
and
xor
mov
in
rcl
imul
test
mov
mov
mov
xor
out
mov
push
pop
cli
lcall
popa
fwait
mov
xor
hlt
adc
or
rcrb
divb
insl
and
icebp
push
lahf
sub
mov
arpl
out
and
stos
jb
cmpsb
cmp
leave
inc
jmp
mov
jge
in
push
dec
mov
test
lret
ret
hlt
in
or
inc
stc
fstl
sub
shlb
inc
stos
repnz
xchg
pop
xor
or
mov
dec
dec
pushf
fidivrl
adc
sub
rcrb
and
mov
or
icebp
scas
fistps
stos
jbe
mov
dec
popf
cld
xor
jae
xchg
mov
xor
mov
aad
jmp
call
cld
pop
push
and
inc
orl
test
adc
insb
xchg
aas
in
stc
xor
pusha
and
push
mov
adc
xorl
popa
pop
cmpl
outsl
adc
pop
lret
mov
jmp
cmpsb
in
push
xor
ds
push
rcr
dec
mov
push
inc
sub
pop
fbld
rorl
stos
xchg
inc
mov
adcl
add
out
mov
enter
xchg
jmp
mov
or
xor
sti
add
xor
add
add
mov
sub
and
jbe
ret
jno
fimull
pop
push
dec
ss
push
imul
dec
dec
jmp
shlb
mov
mov
cmp
push
outsb
mov
and
mov
cmp
mov
ret
ret
leave
sbb
sub
and
lods
and
lret
and
cmp
mov
addr16
ljmp
xor
and
adc
in
test
mov
ja
pcmpeqd
out
adc
jmp
mov
pop
xor
or
push
shlb
div
xor
out
push
lods
test
jns
inc
repz
pusha
or
gs
arpl
xor
mov
imulb
fcomi
addr16
push
sub
dec
pop
cltd
repz
fdivp
outsl
in
in
xor
add
test
mov
jg
push
ja
imul
nop
mov
pop
or
aam
xchg
fildll
cmc
dec
push
std
ret
cmp
xor
cmp
jae
mov
adc
mov
push
dec
cmp
ret
or
pop
xchg
inc
mov
sarl
das
pop
mov
pop
ret
imul
push
fldt
popf
mov
add
sbb
mov
push
sbb
lret
addr16
in
pop
mov
arpl
dec
or
and
xchg
stos
jmp
lahf
std
lods
bound
loope
xchg
mov
push
mov
aam
ss
aad
push
cld
jecxz
test
inc
xor
cmp
mov
dec
jge
out
push
pop
xchg
int
pop
or
push
pop
pop
mov
ds
pop
out
pop
mov
stos
push
test
lea
out
jmp
xor
xchg
xchg
cwtl
push
notl
dec
xorl
fs
xor
popf
int
leave
push
xchg
stos
repz
push
iret
loope
ljmp
loopne
push
fwait
lea
leave
push
pop
ja
scas
sbb
lds
or
xchg
movsb
rolb
or
cmp
pop
xor
and
imul
cli
scas
std
out
out
sbb
enter
xchg
rcrl
aam
xchg
fisttps
negb
mov
pop
fisubrl
into
mov
xor
lret
test
xor
outsl
mov
cli
lret
icebp
or
cs
xchg
jns
mov
push
and
cmpsb
out
sar
scas
cmpsb
sbb
pop
loopne
sub
in
je
mov
sub
bound
push
xor
in
push
stos
or
ds
int3
idivl
xor
rcl
aas
pop
rorb
jg
test
in
cs
mov
cmpb
inc
test
clc
ret
jmp
dec
push
mov
push
jne,pn
pop
mov
mov
xor
loopne
adc
pushf
mov
out
jmp
or
jl
aas
push
add
loope
movsb
ljmp
jmp
adc
stos
rclb
jmp
push
xor
push
cmp
test
and
fwait
ljmp
xorl
mov
jo
mov
sub
xor
add
fisubrl
aad
popf
cmp
push
dec
jp
insb
inc
sbb
sbb
xor
lods
push
cmovns
mov
jmp
stc
mov
pop
adc
cs
push
in
insl
dec
sub
cli
xchg
add
pusha
test
lcall
jnp
cmp
push
lcall
sub
cmp
popa
aas
jmp
push
push
mov
jnp
push
mov
jg
jmp
sub
sub
dec
popa
imul
jmp
xor
push
in
xchg
or
xor
adc
add
fs
mov
inc
xor
pop
xchg
loope
sbb
mov
mov
xor
fnstenv
sbb
lock
icebp
std
jge
ds
sbb
shlb
mov
push
test
out
lret
or
push
fstl
jmp
data16
lret
fdivl
push
push
sbb
push
sbb
rcl
jmp
or
stos
inc
lcall
mov
lret
xor
cmpsb
mov
movsb
stos
mov
test
and
cmpsl
sbb
xchg
out
cmc
lods
outsl
and
scas
inc
jle
xor
movsl
daa
sarl
ljmp
sub
enter
inc
out
jl
mov
ljmp
push
fildll
or
inc
in
xor
xchg
inc
and
push
clc
push
sbb
aam
hlt
cltd
and
setb
mov
sbb
pop
pop
int
test
testb
xchg
jecxz
push
rcrl
aad
lea
xor
push
jbe
jne
xor
mov
or
sbb
lea
movsb
mov
dec
in
pop
pop
stos
inc
in
mov
vorps
out
push
and
push
xor
movsl
stos
mov
cmp
imul
pop
ja
repz
mov
in
push
pop
push
cs
add
jno
add
mov
sbb
mov
cmpsb
iretw
ffreep
stos
dec
or
add
rcll
dec
out
mov
in
mov
xor
jb
test
icebp
mov
xchg
call
mull
and
xchg
into
mov
imul
push
adc
add
test
aam
jmp
repz
icebp
mov
imul
and
or
pop
loopne
mov
mov
je
imul
lahf
test
call
or
jno
xor
and
xor
cld
xchg
sarl
mov
mov
lock
mov
mov
lahf
pop
in
mov
sub
cltd
cmp
mov
mov
add
push
lret
fwait
idivl
rorb
jne
mov
stos
pop
mov
roll
shrb
inc
xor
call
push
add
aas
sub
divb
popf
jmp
mov
shrb
jae
cld
stos
into
repz
jmp
out
call
mov
mov
test
lea
xor
enter
cld
in
pop
push
repz
test
repnz
and
dec
mov
popf
stos
inc
outsb
pop
shlb
out
inc
sbb
pop
push
imul
sbb
pop
mov
push
sbb
shl
loop
pop
or
jmp
push
popf
push
lahf
fcoms
mov
xchg
sti
and
pop
mov
mov
movsl
lods
mov
xorl
add
je
clc
jo
icebp
test
sti
test
xor
mov
sahf
lcall
xor
movsl
xchg
mov
ss
jmp
inc
lods
daa
cmp
xor
rol
push
cwtl
add
aad
lds
ljmp
test
dec
pop
mov
ds
dec
jno
jge
mov
out
cmp
cltd
aam
jmp
aas
mov
xor
popa
mov
test
or
inc
mov
xchg
push
imul
in
shrb
in
mov
sti
cmpsb
decl
bound
jmp
dec
leave
outsb
std
cmp
push
into
jnp
cs
mov
xchg
int3
xor
mov
mov
mov
fildl
pop
or
jecxz
je
push
push
push
adc
mov
xor
xchg
cltd
add
stos
lods
les
sahf
jmp
cmpsl
push
fdivl
ljmp
xor
shr
inc
and
adc
cmp
mov
sub
inc
aas
repz
inc
les
jo
mov
loopne
adc
or
xchg
push
enter
add
mov
mov
lds
out
cmc
shl
or
into
addr16
and
xchg
stos
xor
pop
cs
lods
scas
pop
dec
push
out
push
test
or
xchg
push
repz
xor
fldt
jmp
inc
out
mov
push
dec
lret
ja
mov
xchg
push
in
xor
test
or
push
inc
cmp
ja
ja
push
adc
and
sbb
push
add
pop
mov
daa
jb
mov
xchg
fdiv
in
cmpsb
int3
sbb
jae
and
and
ss
jmp
and
test
ss
inc
and
adc
sbb
std
lods
rorb
pop
into
lret
sub
add
adc
jno
dec
jo
inc
xchg
rclb
pop
stc
mov
dec
imul
cmp
lock
test
in
sub
sub
insb
je
int
inc
sbb
cmp
out
pop
xor
inc
out
push
mov
inc
sub
mov
cmpsb
xor
aas
test
sti
fnstenv
push
lods
pop
pop
test
and
data16
or
push
push
dec
jae
or
xor
pop
push
mov
adc
or
ljmp
adc
mov
sbb
cmp
add
jmp
es
adc
sbb
in
xchg
clc
xchg
fs
rcr
cmp
pop
mov
out
fndisi(8087
jno
shl
push
sub
ret
scas
jno
mov
ljmp
xor
lea
pop
stos
jb
jno
fsubr
push
fcomi
cmpb
ficomps
jecxz
add
clc
xor
inc
in
mov
jecxz
leave
imul
cmpsb
push
leave
push
jmp
into
insb
std
push
push
lcall
imul
into
int
cmp
jns
cli
sub
pop
add
inc
lods
push
pusha
inc
xchg
ret
xor
lds
ljmp
xlat
xor
enter
std
or
movsl
pusha
out
lock
aas
and
push
adc
cmp
xor
lods
xchg
or
outsl
sub
or
pop
pop
jmp
fidivl
lahf
clc
push
push
insl
pop
arpl
hlt
jge
xor
jns
dec
movsl
lret
call
xchg
and
mov
xchg
jle
into
leave
cmpsb
xchg
push
push
mov
or
lret
mov
or
add
orl
stos
or
loope
call
xor
dec
popa
mov
jb
adc
xchg
sbb
lcall
call
jno
cltd
add
aaa
push
sbbb
popf
inc
sub
imul
or
pop
notb
mull
pop
js
outsb
xor
inc
je
pop
and
cmp
mov
pop
push
es
out
adc
xor
call
mov
xor
stos
add
and
jae
sub
push
stos
push
in
imul
sbb
pop
add
xchg
pop
and
or
fwait
xor
cmpsl
sbb
stos
mov
adc
dec
jp
add
add
xchg
aam
sub
inc
imul
arpl
jl
stos
mov
pop
sbb
jmp
lods
sub
call
mov
fs
movsl
movsb
mov
xchg
lret
cmp
inc
mov
mov
inc
lods
dec
mov
sbb
cld
xchg
or
xchg
push
adc
fcoml
xor
jns
jno
mov
imul
or
cmp
cmp
repz
push
lahf
and
stc
mov
pusha
mov
mov
inc
ret
cld
or
xor
add
popa
lock
shr
sbb
xchg
jmp
and
mov
push
dec
repnz
pop
xor
add
xor
jb
xchg
mov
mov
clc
lret
repz
cmpsb
jl
add
fmull
pop
loop
jl
movsl
fdivs
inc
xchg
rorl
addr16
sti
add
lds
repz
and
dec
jmp
sbb
dec
movsl
movsl
push
jmp
ret
jmp
ret
popa
pop
xor
stc
test
sub
ds
dec
scas
push
fcoms
mov
fnsave
and
jnp
aad
push
xor
cmpsl
enter
test
les
cmp
dec
shlb
push
pop
jne
stos
inc
in
inc
inc
test
addr16
aaa
sub
jmp
out
add
pop
xchg
jg
jmp
jne
insl
inc
push
cwtl
fstpt
js
lock
lock
jp
nop
fldcw
mov
lahf
add
cmp
jl
and
ljmp
jge
test
sbb
inc
mov
lock
push
xchg
inc
adc
testl
cmpsb
cmpsb
call
cmpsb
xchg
or
xchg
inc
jmp
call
or
mov
divb
sub
jg
movsb
jp
xor
fwait
mov
xchg
aad
add
mov
and
xchg
insb
xor
lret
inc
cmp
mov
xor
sbb
ds
fisubrl
lock
mov
bound
imul
cmp
push
sbb
mov
add
mov
inc
mov
shr
mov
or
adc
pushf
and
xchg
daa
dec
lods
pop
inc
push
or
sub
ja
dec
mov
jecxz
pop
lea
lock
cmp
mov
inc
mov
push
jmp
xor
push
pop
shrl
aad
stc
pop
movsl
inc
imul
inc
adc
jl
dec
arpl
popf
test
xchg
pop
decl
pushf
bnd
es
pop
adc
movsb
stc
mov
pop
xchg
dec
fisubs
mov
dec
mov
jae
inc
shlb
js
push
and
xor
jns
mov
lods
sub
jae
bound
std
jmp
repz
push
xchg
inc
push
sbb
call
adc
aaa
add
mov
sub
jmp
xor
int3
push
adc
or
adc
xor
enter
cmp
mov
xchg
dec
mov
mov
movsb
je
dec
rclb
xchg
es
or
loopne
data16
lret
push
mov
fcoms
repz
ds
sub
sub
add
stos
hlt
sbb
add
pop
negl
pushf
xchg
pop
adc
dec
push
popf
ret
mov
pop
aam
std
mov
adc
xor
or
xor
adc
das
cmpsl
repz
xchg
daa
mov
sub
xor
sahf
lahf
push
int3
rcl
nop
clc
shlb
rcrb
inc
or
inc
fistl
cli
jnp
in
pop
add
mov
mov
mov
rorl
xor
cltd
mov
pop
dec
mov
push
and
adc
scas
cmp
dec
xchg
sbb
pop
stos
inc
and
subl
push
insb
sub
mov
xor
dec
aam
aas
mov
stos
xchg
insb
jg
ljmp
scas
sbb
into
mov
fs
sub
mov
bound
rclb
inc
mov
adc
jmp
xchg
pop
pop
cmp
andb
sub
push
aam
lea
loope
mov
jns
pop
push
push
xor
jo
lods
lcall
mov
adc
mov
mov
push
xlat
or
nop
mov
sub
xor
out
lock
pop
mov
in
mov
and
push
sub
xchg
icebp
jb
fdivrp
and
daa
mov
add
push
movsb
mov
mov
xor
std
std
sbb
fstps
stos
mov
shl
lock
jmp
outsb
jmp
inc
push
or
jle
fldt
ljmp
xchg
add
adc
cli
mov
dec
mov
inc
js
sbb
icebp
push
push
shlb
and
nop
out
xor
pop
push
cmc
stos
jecxz
pusha
mov
or
fs
xlat
xchg
cld
shll
into
aam
outsl
aam
cld
movsb
adc
cli
dec
jno
inc
mov
outsb
cwtl
dec
push
and
dec
in
inc
inc
inc
xor
aaa
cmp
bound
and
mov
dec
or
pop
sub
add
out
jl
inc
mov
ss
add
or
rolb
sub
sub
stos
aaa
cmpsl
subb
mov
outsb
jb
sbb
mov
add
int
clc
dec
les
fs
mov
nop
scas
push
popa
dec
rclb
mov
sub
cltd
adc
sub
mov
jle
insl
daa
push
pop
je
mov
icebp
stos
xor
scas
mov
push
add
jg
popa
in
pop
mov
or
pushf
insl
mov
push
loope
mov
jp
dec
and
add
pop
stos
jg
mov
leave
sahf
in
lret
or
cmp
test
push
fs
cltd
fstps
inc
jmp
fildl
insb
mov
xor
out
xor
xchg
adc
jmp
gs
mov
jae
mov
dec
dec
imul
cmc
mov
push
fsubrl
mov
jo
ljmp
mov
lds
jecxz
jnp
pop
shr
fwait
dec
nop
daa
sarl
inc
adc
iret
addl
arpl
pop
mov
sub
loopne
iret
sbb
xor
or
mov
mov
xchg
lea
sahf
fldt
mov
in
dec
lods
fstps
rclb
or
sbb
stos
or
xor
popa
cmp
outsb
into
sbbb
mov
mov
ret
push
mov
mov
sbb
stos
pop
push
or
xor
mov
lcall
cmp
xor
or
push
xchg
jbe
mov
xor
jg
cmp
adc
inc
push
mov
stos
xor
adc
inc
jg
or
adc
pop
push
mov
jmp
call
pcmpeqw
xchg
mov
lds
sarb
push
mov
mov
mov
fistpl
bnd
pop
cli
lcall
mov
push
jmp
jecxz
push
popf
mov
stos
lock
movsl
mov
aam
in
je
jle
int3
mov
dec
hlt
es
fmulp
push
decb
stos
hlt
fidivs
cmp
xor
cmp
mov
dec
xchg
push
cli
fs
scas
lahf
iret
push
cmp
lret
shrb
xchg
push
sub
jnp
out
rcll
arpl
out
cmp
jmp
loopne
bound
pop
ud1
or
xchg
es
aaa
cmp
cltd
mov
mov
loop
mov
nop
fmul
xor
stc
or
push
jecxz
push
mov
push
fisubrl
xchg
xor
imul
xchg
ljmp
adc
mov
mov
fdivrl
push
cld
mov
mov
shll
loope
lods
bound
push
xor
out
jmp
cmp
mov
mov
adc
sub
xor
testb
mov
or
add
insl
push
or
fucom
mov
leave
outsb
xchg
popf
sbb
jb
cmp
addl
stos
test
mov
es
pop
mov
nop
push
in
inc
jnp
xor
loopne
mulb
ljmp
test
sbb
repz
cld
inc
out
pusha
out
jnp
xor
fisubs
jle
cmp
lret
jns
and
popa
fdivrs
loope
mov
test
add
xor
add
add
loope
stos
es
or
cmp
js
rcrb
mov
adc
xchg
enter
dec
mov
inc
addl
pop
pop
mov
cwtl
out
xor
rcrl
mov
mov
stos
mov
in
add
lret
xchg
adc
push
rcll
cli
xchg
jne
cmp
cltd
xor
loopne
push
add
in
adcb
cwtl
aam
lret
cmpsl
add
mov
insb
insb
mov
sbb
sub
rolb
lret
jae
xchg
insl
mov
xor
mov
outsl
cmp
sub
stos
jns
lret
xor
add
cmpsb
mov
test
rol
xchg
mov
aad
js
fists
fwait
mov
fsubrp
or
xchg
outsl
adc
or
jmp
ljmp
push
dec
fstpt
mov
adc
call
test
sub
pop
jp
or
sbb
addb
lcall
icebp
scas
add
xor
sbb
mov
pop
pop
sub
cmp
jmp
or
rcrl
daa
nop
nop
mov
data16
cmp
imul
push
jns
jae
push
rclb
or
hlt
mov
daa
adc
cmp
cmpsl
cmp
xchg
dec
fwait
pop
into
or
mov
mov
scas
add
and
rcrb
mov
dec
sub
lock
ljmp
adc
add
push
std
mov
mov
sbb
lahf
shll
lods
negl
jne
or
cld
sub
test
jmp
or
cmpsb
pushf
mov
shrl
dec
mov
fstps
push
cltd
fldt
push
in
inc
inc
repz
mov
xor
jecxz
stos
fsts
cmp
mov
jb
dec
sub
xchg
rorb
pop
nop
int
stc
dec
das
push
dec
js
test
pusha
xor
or
cli
ja
shll
stos
mov
call
cmp
or
ljmp
pop
and
es
xor
sub
leave
outsb
jp
push
fists
or
cmp
dec
push
push
sub
scas
cmpsb
xor
mov
mov
xor
dec
push
iret
std
daa
test
or
adc
jecxz
testb
mov
push
xchg
mov
imul
test
push
cli
xor
and
stos
aam
test
int3
dec
jo
loope
cmp
mov
sub
je
pushf
cmp
test
push
sub
lret
dec
push
jbe
sub
mov
outsb
insl
and
jecxz
outsl
xor
and
inc
mov
arpl
lods
stos
mov
push
sub
pop
pop
cmp
dec
lods
popa
inc
rcl
mov
movsl
popf
xlat
xor
push
xchg
fidivs
ret
in
pop
pop
test
lock
adc
pop
push
cmc
jbe
rorb
xor
jecxz
mov
daa
stos
dec
mov
sbb
mov
pop
stc
xor
subb
jnp
add
mov
push
gs
xchg
xchg
jno
out
ret
push
ds
ljmp
mov
paddw
pop
out
out
test
push
jae
jmp
ret
fsubrl
fimull
and
int
sbb
xor
push
fwait
mov
int
pop
pop
jmp
push
fisttpll
imul
mov
inc
jg
cmp
adc
data16
push
aas
mov
in
xor
je
xchg
pop
stos
cmp
ds
iret
inc
iret
test
mov
stos
cli
fidivl
mov
stc
es
jmp
dec
jp
call
shlb
aam
sub
mov
mov
pushf
pushl
push
popf
lea
jb
push
mov
cltd
push
imul
fdivrp
in
mov
adc
dec
and
gs
adc
pop
imul
pop
xchg
aas
aam
xor
bnd
aaa
pop
or
shll
cmpsb
pop
xlat
das
clc
mov
mov
pop
push
ja
subb
push
cmpsl
inc
adc
cmp
sbb
pop
push
sbbl
mov
call
mov
inc
cmp
out
push
pushf
cmc
dec
pop
aas
adc
push
cli
sub
negb
stc
test
xlat
rorb
jmp
fldl2t
dec
or
fyl2xp1
push
outsl
mov
jl
push
jge
lds
xor
pushf
mov
xchg
sbb
lods
xor
sub
sub
lods
push
mov
lea
adc
jmp
iret
pop
data16
mov
jecxz
movsl
mov
mov
gs
xchg
subl
sub
sub
jmp
andl
or
mov
mov
das
jge
xor
or
lret
out
mov
adc
sarl
addr16
fucomip
in
pop
sbb
mov
or
lret
cmp
sbb
xor
xchg
popa
cmc
jbe
dec
xor
aad
pop
ja
andb
int
pusha
cmpsb
inc
out
push
or
lretw
xor
mov
cmp
insb
imul
andl
jmp
es
lret
stos
ret
xor
insb
fisubs
stos
mov
inc
aas
push
inc
jnp
jmp
pushf
ja
repnz
lods
push
dec
popa
pop
inc
ret
cmpsb
or
push
addr16
leave
sarb
xchg
lods
push
stos
js
pop
fs
imul
sub
inc
ret
mov
mov
add
cmpsl
inc
gs
xchg
dec
loope
stos
or
adc
mov
and
push
mov
inc
adc
xchg
add
xor
xchg
adc
roll
push
dec
stos
imul
xor
mov
dec
int3
push
int
sbb
mov
xor
cltd
jae
out
fwait
iret
sbb
ret
xchg
mov
das
xor
test
xchg
xchg
je
xor
pop
popf
sbb
outsb
sbb
jmp
inc
popa
imul
movsl
and
mov
xor
and
sbb
arpl
dec
or
sub
sahf
xchg
out
dec
xor
mov
sub
pop
jnp
repz
dec
cmp
mov
sbb
or
xchg
xor
shlb
repnz
mov
jo
adc
push
cmp
pop
leave
in
neg
int
sub
mov
mov
test
insb
loopne
sub
and
jne
mov
push
push
mov
cmp
or
cmp
or
adcb
jns
cmp
jae
test
loop
daa
xor
stos
inc
jmp
xchg
push
rcl
ss
fdivr
dec
cmc
dec
imul
clc
je
mov
enter
jmp
das
mov
insl
push
sahf
lods
sub
out
fcoml
icebp
xchg
ja
push
cltd
sub
aaa
repnz
sbbb
add
movnti
push
mov
sub
clc
in
push
hlt
arpl
loopne
lods
add
xor
ficompl
repz
add
adc
pop
jno
lods
mov
add
xor
mov
dec
sub
xchg
adc
inc
lock
mov
jmp
loopne
pop
mov
stos
and
mov
nop
xchg
cmp
cmp
popf
xor
divb
repz
pop
inc
dec
hlt
or
pop
add
xchg
push
xchg
arpl
jecxz
xor
ljmp
pmulhw
inc
jmp
adc
sarb
jbe
xchg
test
pushf
int
fs
cmpl
jo
xor
pop
jmp
cmpsb
pushf
inc
push
cmp
push
call
and
ss
lods
sbb
fwait
pop
ret
out
adc
call
popf
je
mov
test
cmpsb
push
inc
rcrb
adc
jmp
out
repnz
pop
push
push
movsb
mov
push
xor
xor
inc
test
mov
push
xor
repnz
movsb
sbb
fiaddl
lcall
gs
rorb
cltd
sub
out
push
int
loop
insl
out
jns
jnp
sbb
aad
xchg
jno
imul
fistpll
pusha
or
enter
xchg
movsb
xor
lret
push
push
adc
xor
nop
adc
mov
and
stos
les
mov
cltd
cmovnp
add
mov
and
sbb
xlat
out
sbb
roll
cs
out
dec
xor
cmpsb
mov
jbe
push
sbb
mov
shll
and
xchg
lcall
stos
inc
push
pop
repz
cmc
cltd
mov
icebp
xor
daa
mov
scas
mov
push
jg
xor
sbb
call
into
test
mov
lret
and
add
pop
mov
rorl
stos
es
lret
push
stc
stc
pop
xor
lcall
stos
add
lret
jne
test
cmpsb
xor
hlt
mov
stos
or
leave
shr
pusha
pop
cltd
lahf
mov
insl
hlt
pushf
push
jle
xor
pop
push
aam
sbb
mov
mov
sbb
xor
jbe
fmuls
add
in
and
into
mulb
jne
loopne
adc
out
xchg
inc
mov
pop
das
mov
jecxz
fdiv
sub
pop
add
int
mov
sbb
inc
notl
adc
mov
xor
xor
sbb
xchg
mov
pop
xchg
pop
push
xchg
add
shlb
hlt
xlat
rcr
in
scas
inc
scas
sbb
enter
jg
dec
test
test
test
mov
inc
adc
stos
jae
fcmovne
lcall
hlt
sub
dec
mov
mov
push
jmp
fstl
dec
jp
mov
jae
inc
in
push
fmull
loop
jne
jmp
cmp
test
test
loop
pop
xchg
int
movsb
repz
dec
push
cmpsb
outsl
push
jno
adc
push
mov
fs
jge
ljmp
pop
aam
stos
mov
es
jmp
mov
out
push
mov
std
int3
jae
lods
adc
jmp
mov
and
mov
sub
pop
lds
jg
push
inc
add
mov
dec
cwtl
push
xchg
xchg
push
adc
mov
jae
xor
stos
mov
mov
xlat
ret
push
xor
pop
adc
ret
loopne
frstor
and
stos
addr16
add
or
insb
out
pop
ljmp
out
jnp
mov
pop
pop
dec
push
push
lret
lock
cmpsb
popa
shrl
sub
push
inc
test
je
xor
push
mov
cli
push
ret
shr
in
add
in
scas
push
test
xor
dec
lcall
sub
push
dec
cmp
dec
add
dec
pop
and
cmp
xchg
loopne
mov
inc
fcompl
dec
xor
pusha
push
movsb
shl
clc
mov
je
ud2
cmp
sub
xor
mov
fistl
mov
mov
dec
aas
push
jne
sbb
test
adc
xor
arpl
xor
aam
jb
call
std
stos
and
inc
sti
ret
jo
jle
xor
lea
push
lods
jae
jecxz
adc
leave
adc
scas
xchg
sbb
inc
ja
fldcw
cmp
mov
gs
fisubrs
push
test
mov
add
movsl
mov
mov
dec
add
inc
movsb
nop
and
cmc
mov
pop
adc
push
int
sub
stc
leave
or
inc
cmp
push
mov
mov
mov
xlat
and
loopne
push
in
sbb
imul
loope
int
lock
xor
leave
in
pop
cmp
jae
and
xor
aad
inc
xlat
mov
es
aam
mov
dec
in
sti
movsb
fcmovnb
jmp
dec
idivl
loop
sub
subb
out
pop
mov
mov
mov
mov
pop
pop
xchg
test
dec
jmp
loop
lcall
stos
call
adc
lods
popf
pop
xor
mov
mov
and
imul
push
clc
lret
inc
hlt
fsts
sbb
inc
ljmp
xor
dec
mov
pop
stos
in
enter
popa
shr
push
in
mov
fists
add
and
arpl
and
xchg
rcrl
mov
jmp
inc
icebp
xchg
pop
push
push
push
fsubrl
inc
xor
xor
push
add
in
pop
outsl
sarl
lcall
lcall
mov
adcl
mov
inc
push
adc
mov
movsl
push
stos
int3
mul
sub
jecxz
cmp
cmpsb
orl
push
push
fidivl
cld
add
xor
scas
cs
dec
sahf
xlat
and
lock
jmp
sbb
adc
inc
pop
xor
cmpsb
cld
push
fs
xor
outsl
out
mov
popf
mov
out
ret
sbb
inc
es
aad
inc
dec
mov
xor
shrb
pop
mov
mov
loope
call
insl
jmp
xchg
sti
lea
stos
mov
jge
or
aaa
in
push
pop
pop
mov
jp
inc
jns
sbb
adc
enter
test
push
sti
inc
stos
pop
or
mov
das
xor
test
mov
sar
sub
mov
sub
pop
or
je
push
sbb
push
and
rcl
jno
shll
xchg
pop
sub
xor
pop
dec
mov
xor
popf
lea
or
jno
pop
ds
pop
cmp
xor
jo
dec
movsl
enter
dec
nop
movsb
fisubrs
push
jne
push
out
mov
ret
jmp
jmp
dec
repz
dec
adc
push
das
mov
xor
mov
xchg
xchg
fs
mov
jecxz
jns
pusha
push
gs
xor
push
or
xchg
jmp
add
jmp
xchg
adc
add
mov
lret
push
jmp
jnp
push
mov
lods
cli
push
dec
cmp
lods
popa
fsts
nop
cli
xlat
bnd
cli
stc
adc
and
inc
imul
push
inc
lods
mov
pushf
stos
test
push
jmp
pop
jge
test
mov
mov
test
lcall
cmpsl
cmp
add
stos
enter
or
jmp
adc
xchg
push
aad
addr16
xorl
pop
add
out
in
jmp
ret
mov
adc
mov
lret
fldt
jl
lret
pop
push
mov
loopne
jbe
cli
pop
pop
cmp
sub
push
push
mov
inc
insl
call
popa
sahf
imul
stos
popa
lods
adc
mov
dec
jae
pusha
clc
adc
test
sub
jl
sbb
call
aad
adc
subl
push
aad
jmp
ljmp
popa
insb
push
in
aam
into
push
scas
push
mov
xchg
out
das
xlat
pop
daa
stos
mov
jb
notb
lods
sbb
push
or
xchg
dec
fwait
popa
xchg
fld1
dec
push
jae
sahf
add
sbbl
imul
xor
xchg
mov
mov
mov
stos
enter
repz
not
lods
test
dec
push
or
mov
push
xchg
xchg
frstor
xor
jl
mov
and
loop
mov
imul
add
xchg
push
mov
push
lods
popa
mov
mov
shr
loope
popf
data16
sub
lret
daa
xchg
add
sbb
pop
js
xor
cmp
sbb
dec
jae
inc
xchg
fdivl
dec
fwait
in
xchg
cwtl
je
imul
dec
aad
dec
aaa
mov
stos
test
movsb
aad
mov
test
rcll
sub
lds
push
or
xrelease
cmpsl
enter
stc
cltd
dec
jp
jmp
clc
sahf
mov
push
aas
fstpl
pushf
sti
call
imul
iret
je
push
pop
pop
pop
mov
and
push
inc
fisubrl
add
es
stos
sbb
ss
lock
jmp
test
arpl
cmp
rorb
dec
gs
dec
aam
mov
xor
scas
iret
add
rcrl
mov
aaa
das
jae
cmp
jmp
incl
xor
sub
push
jno
ret
arpl
inc
lcall
test
mov
sub
jmp
push
add
mov
jp
or
aaa
mov
sub
rorb
fcomps
sub
rcl
jns
push
cmp
cmpsl
ret
cltd
push
enter
ud0
popa
mov
cmp
mov
int3
insl
dec
loop
push
ds
mov
inc
jno
push
cmp
sub
shlb
adcl
xor
ja
and
repz
inc
xor
xchg
ficoms
fiaddl
mov
popf
or
and
sahf
cmpsl
pop
test
mov
popa
out
add
dec
shrl
or
mov
push
in
adc
dec
push
xchg
lret
pop
cmpsb
dec
pop
push
popf
xor
lods
inc
mov
test
push
push
sbb
xchg
mov
stos
inc
pop
in
out
push
jg
imul
inc
xchg
or
add
pop
mov
fsts
xor
sbb
adc
arpl
sbb
or
or
dec
sbb
inc
roll
pop
stc
xchg
ret
jmp
andl
dec
adc
adc
out
mov
dec
inc
insb
jle
push
xchg
test
pop
nop
or
xor
sub
mov
cli
jno
sbb
xchg
stos
lods
out
out
cltd
fwait
adc
mov
dec
mov
bound
clc
inc
lcall
lret
jno
cltd
je
adc
jmp
sub
push
inc
add
mov
inc
std
arpl
push
sbb
imul
add
add
mov
mov
xor
xlat
pop
sub
out
or
cmp
enter
mov
stos
and
jecxz
scas
filds
xchg
jmp
insl
inc
daa
pop
je
repz
mov
shlb
stc
cmc
jmp
clc
sub
add
pusha
inc
xor
sarb
loope
pop
mov
jmp
jp
mov
in
push
fmull
stos
scas
notl
xor
movsl
push
cmp
stos
xchg
vandpd
push
popf
jns
stos
or
or
arpl
jmp
sub
lret
mov
daa
out
fisttps
imul
or
es
inc
xor
push
das
insb
mov
sbb
es
dec
les
ds
addr16
stos
pushf
sub
mov
and
xor
fs
pop
pop
mov
aaa
mov
stos
cmp
loopne
adc
xor
popa
test
push
push
cmpsl
icebp
xor
xchg
insl
out
lcall
jbe
fs
pop
mov
jmp
std
es
jmp
push
mov
push
jge
mov
inc
jno
pop
das
or
push
bnd
inc
insb
outsb
aaa
stos
mov
and
addr16
xchg
xor
dec
decb
test
shlb
test
jp
jle
mov
and
cmp
pop
decb
mov
shll
xchg
jne
mov
rol
das
inc
iret
cmp
stos
shrb
int
clc
xor
dec
shr
or
les
push
and
movsl
add
fwait
cmp
inc
std
cmpsl
cmp
enter
lret
ss
push
pop
pushf
shll
test
sbb
mov
cmp
ret
and
stos
xor
das
sub
xchg
dec
ja
xlat
mov
push
lahf
mov
xor
cmp
test
idiv
push
repz
add
pop
jg
out
mov
xor
sahf
loop
cmp
cmp
stos
sub
fs
jno
cmpsb
jp
push
cmc
sub
rorb
push
mov
orb
xor
push
mov
mov
pop
push
pop
add
xor
or
cmp
xchg
push
std
lahf
inc
testl
mov
iret
inc
cmp
jmp
xor
xor
and
mov
mov
popf
mov
stos
outsb
js
inc
adc
jb
push
leave
sbb
into
call
push
fisttpll
outsb
pop
xor
push
mov
out
fdivs
jg
jne
mov
popf
mov
aas
sbb
mov
jmp
xchg
jmp
movsl
xorb
outsl
bnd
inc
fcomps
and
push
ret
rclb
and
sub
xor
dec
rclb
push
ret
or
pop
pop
test
aam
add
in
sbb
xchg
fcoms
xor
xlat
fcoms
push
fcmovu
cmpsl
jl
xchg
mov
mov
sbbb
cmp
das
inc
mov
stos
cwtl
rorb
xchg
cmpsb
jle
sub
or
test
pop
push
mov
push
test
adc
ljmp
jne
repz
xor
mov
shlb
inc
mov
jne
leave
je
test
mov
ret
and
sbb
and
jmp
xor
add
push
sahf
fisttpll
filds
inc
fcoml
aas
adcb
insb
rclb
cmpsl
int3
push
and
add
add
cmp
push
fistpll
inc
out
loope
xor
mov
push
xor
sub
inc
in
inc
sub
in
sbb
cli
push
pusha
jae
popf
dec
xchg
mov
repz
inc
mov
pop
rorl
sbb
xor
scas
xor
data16
ss
sbbl
sar
imul
dec
mov
mov
cmp
mov
sahf
aad
jmp
push
fnstenv
mov
push
movsl
rcll
mov
jmp
sbb
adc
mov
mov
mov
dec
lods
lret
dec
scas
push
stos
inc
shll
out
sub
icebp
out
adc
stos
lds
jecxz
shlb
mov
repz
pop
loop
cmp
mov
inc
dec
jmp
mov
mov
scas
jbe
pop
inc
insl
repnz
stos
cmp
xchg
mov
andb
lods
and
shll
arpl
xor
adc
in
mov
add
outsb
jle
pop
cs
orl
or
push
jge
rol
cmpb
jmp
push
loop
ss
shlb
popf
stos
ds
in
movsb
mov
fs
and
pop
jae
push
ja
jae
out
int3
ret
xor
pop
repnz
jbe
insl
lds
inc
les
push
or
enter
cli
out
lahf
sub
sbb
insb
rorb
popf
push
sbb
repz
or
sbb
icebp
repz
outsb
in
mov
or
xor
aam
addr16
ss
roll
mov
xchg
jmp
arpl
push
dec
les
inc
xor
icebp
movsl
and
xchg
xchg
inc
pop
xchg
dec
xor
testb
xchg
cmc
add
mov
addr16
and
shrl
xchg
int
mov
stc
je
xor
jne
add
adc
sbbl
out
out
adc
cli
repz
or
in
aas
inc
dec
rol
sub
adcl
out
repnz
pop
jl
push
scas
or
pop
repnz
mov
mov
xchg
cmp
das
call
ds
ja
movsl
xor
sub
mov
stos
xchg
add
or
loop
cmp
je
push
mov
adc
sar
rsqrtps
pop
cmp
push
sahf
sbb
sahf
push
adc
std
loop
les
rorl
dec
or
cld
in
adc
cmp
dec
push
jb
cmp
push
mov
pop
mov
in
mov
les
stos
roll
adc
jnp
and
xor
imul
dec
test
cli
repnz
call
inc
jg
xchg
push
pop
ds
jo
aam
jp
push
rcll
sub
cmc
jno
iret
cmp
cwtl
add
sub
leave
pushf
bnd
lods
push
push
inc
prefetcht1
sub
imul
mov
cmpsb
xor
xor
es
push
pusha
xor
adc
sbb
push
xchg
iret
jb
dec
jae
dec
das
jmp
pop
cmp
shrd
mov
fwait
into
mov
xlat
inc
sub
and
cmp
imul
mov
sub
lret
mov
mov
testb
sbb
push
dec
and
sti
dec
xchg
jnp
repz
stos
cmp
or
pop
jns
stos
test
mov
fisttpl
sub
test
adc
sub
push
jmp
xor
int
pop
movsl
cmpsb
inc
mov
cmp
insb
xor
push
adc
lret
leave
rorb
jmp
cmpsb
inc
imulb
repnz
jmp
mov
fwait
dec
sub
sahf
imul
pop
xchg
incl
push
mov
movsb
int
cltd
pop
mov
sub
daa
insl
cmp
das
dec
adc
mov
dec
movsl
mov
mulb
jmp
inc
xchg
sbb
sbb
and
out
pop
test
ss
push
nop
jae
lcall
or
shl
dec
push
fcmove
jg
push
add
sbb
push
je
xchg
movsb
cmp
add
or
dec
sub
dec
jo
push
inc
xlat
scas
and
stos
xchg
adc
cmpsl
jmp
andb
mov
mov
pop
push
push
add
push
cmp
daa
jb
sbb
push
cmp
gs
pop
mov
sub
push
push
fistpl
pop
ja
scas
aad
addr16
or
rcll
int3
mov
cwtl
push
ret
out
popf
inc
push
fcoms
je
jp
fsubrl
sub
aaa
mov
dec
or
jae
xor
aas
push
mov
sbb
dec
ja
popf
mov
or
xlat
jns
and
shll
popa
inc
add
xor
push
jmp
out
cld
xor
mov
stos
jp
addr16
mov
test
xchg
ret
lcall
xor
push
dec
or
arpl
flds
push
xchg
sub
cmpsb
mov
sti
fiaddl
leave
adc
add
shll
mov
xchg
xchg
pop
push
cwtl
push
dec
mov
test
repz
mov
nop
cmp
dec
jae
dec
mov
aaa
daa
cltd
adc
sub
pop
and
dec
xchg
sbb
test
mov
inc
xchg
xlat
rorl
push
leave
cmp
popa
pop
leave
mov
adc
in
rcl
adc
pop
scas
xchg
loope
xchg
pushf
pop
mov
test
pop
iret
stos
loop
sub
mov
push
xchg
std
call
adc
sbb
jne
ds
push
fstl
scas
in
ja
sbb
jmp
mov
dec
dec
pop
dec
mov
dec
rorb
mov
ja
orl
ss
jno
push
jmp
add
js
js
push
pushf
mov
insl
mov
push
or
jle
stos
jge
xor
jmp
jmp
cmp
push
dec
jmp
add
mov
jl
mov
shlb
cmpsb
stos
inc
clc
mov
mov
jp
ljmp
popa
mov
xor
xchg
cmpsb
cmp
test
pop
or
xor
adc
das
dec
in
stos
xchg
push
mov
fsubs
cmp
call
or
aad
jne
add
call
les
mov
or
jmp
loopne
add
popf
aas
in
lret
pop
pop
xor
in
inc
and
cmp
fsubr
outsb
enter
mov
and
inc
push
test
repz
movsl
iret
push
leave
push
jg
push
aad
or
adc
pop
cmp
sub
xchg
jb
dec
push
dec
repz
xchg
stc
test
test
pop
shrb
sarb
mov
mov
in
pushf
jl
bound
sysenter
das
insb
mov
xor
shlb
push
pushf
push
dec
inc
lods
inc
jnp
cs
mov
shl
adc
push
sub
enter
ja
fdiv
sub
ja
cmp
sbb
mov
repz
mov
popa
adc
sub
push
aas
loop
mov
dec
stos
add
adc
sbb
out
xor
pop
adc
xor
mov
adc
cs
jmp
xrelease
stos
dec
add
xchg
dec
jo
addr16
loopne
gs
xchg
or
sub
jne
pop
mov
mov
dec
cmpsl
jmp
out
bound
add
pop
push
add
jle
out
jne
adc
lock
add
mov
into
sbb
dec
insb
mov
lcall
mov
cmpsl
dec
and
loope
jmp
mov
push
mov
jmp
bound
push
lret
pushf
jle
mov
jmp
jmp
fucomip
push
or
mov
or
pop
push
push
jnp
loope
loop
lea
imulb
mov
xchg
shll
jp
fisttpll
cmp
repnz
mov
test
xchg
pop
pop
and
sbb
push
push
and
cmp
sub
xchg
scas
xchg
push
dec
loope
pop
ja
cld
dec
inc
cmpsl
add
add
push
notb
xor
sub
ret
andl
std
icebp
arpl
mov
inc
in
dec
lods
cld
mov
scas
sbb
or
pop
into
mov
lock
sahf
pusha
sbb
arpl
loopne
in
shl
int3
lcall
xor
aam
and
xor
fldcw
adc
mov
stos
jp
lock
cmp
jg
insl
out
push
mov
fnsave
and
jg
jne
fwait
imull
pop
sbb
pop
mov
int
fs
adc
lcall
or
int
shrb
mov
xor
push
orl
mov
sub
imul
jecxz
pusha
pop
int3
les
mov
imul
push
jmp
sbb
test
fdivrs
addb
pop
sub
out
pop
scas
insl
clc
fldcw
mov
shl
lcall
push
roll
push
push
add
push
es
dec
xor
xchg
jle
cmp
shl
loop
xchg
test
arpl
sub
outsl
sub
pop
mov
ja
js
pop
cmpsb
sbb
cli
push
sub
jae
data16
xchg
adc
in
jle
cmc
push
jg
pop
dec
ret
rorl
bound
jmp
mov
insb
vorps
scas
imul
icebp
pop
mov
jbe
dec
daa
arpl
cmpb
adc
jae
and
leave
dec
push
adc
mov
ljmp
jp
xor
xchg
pop
addb
sarl
jmp
adc
idivl
out
daa
push
dec
movb
or
add
fldl2t
test
lcall
xchg
iret
jmp
out
pop
inc
inc
inc
shll
mov
jo
sub
jmp
push
out
push
mov
aad
adc
sub
lret
pop
add
xchg
repnz
clc
clc
cltd
inc
xor
cmp
cli
stos
push
cmp
cmp
sbb
xor
js
ss
popa
jbe
std
and
sub
aad
jbe
fwait
inc
adc
adc
sbb
es
clc
xor
cmp
add
xor
fwait
scas
xor
xchg
test
jbe
or
ror
add
lret
inc
inc
mov
mov
push
xor
xor
in
cmp
xchg
fisubrs
cltd
cmp
cmp
add
or
adcl
xlat
notb
cwtl
and
xor
push
ds
mov
push
test
sbb
in
xor
mov
ret
dec
gs
ds
push
lods
aam
xor
xor
add
outsl
stos
cmpsl
test
sub
scas
mov
mov
stos
rcr
dec
cli
loop
jp
dec
add
and
sub
mov
xor
jbe
in
out
fs
push
xchg
sub
lahf
fsubrp
enter
sub
mov
jmp
push
es
shrl
call
insb
push
mov
lret
pusha
inc
enter
iret
stc
xchg
xor
cmp
push
sbb
imul
or
imul
es
test
inc
mov
int
sub
mov
mov
pop
stos
data16
inc
dec
jmp
jne
and
push
sbb
scas
fistl
sbb
outsl
jl
add
aas
xor
in
pushf
loope
add
sbb
lcall
movsl
sahf
ljmp
insb
sub
xor
pop
mov
push
mov
mov
xchg
jmp
lret
add
xor
inc
ret
push
and
enter
divl
int3
cmc
mov
out
push
rorb
mov
cwtl
inc
jae
adc
cltd
sahf
cmpb
mov
and
adc
sti
rclb
pushf
fcoms
sbb
xor
ret
sarl
xchg
int3
push
mov
outsb
pop
push
dec
cmp
xchg
xchg
ljmp
lret
movsb
fdivrl
jg
aam
daa
int
sti
xchg
push
inc
or
jge
xchg
dec
lods
jmp
jmp
lds
jecxz
xlat
or
stc
sbb
dec
push
pop
std
jmp
les
pop
inc
shlb
push
fwait
rolb
xchg
and
icebp
fs
lret
xor
mov
jecxz
stos
sahf
mov
nop
ljmp
add
lret
pop
lods
aad
roll
xor
push
subl
xor
or
pusha
mov
dec
adc
lahf
pop
adc
push
das
pop
mov
jb
add
mov
jb
hlt
xor
inc
out
or
jnp
or
cwtl
push
xchg
lahf
mov
leave
iret
cltd
call
push
inc
jp
test
stos
pop
mov
add
mulb
aam
outsl
and
push
cmp
dec
bnd
mov
jl
dec
xor
pop
xchg
inc
sub
dec
cli
mov
stos
or
sub
push
jno
mov
stos
andl
mov
cmpsl
cmp
pop
mov
fcmovb
xor
jmp
adc
xchg
stc
test
inc
push
dec
mov
icebp
fwait
or
fstps
out
stos
pop
xorl
test
sub
bnd
jb
rcrl
sub
push
stos
cmc
int3
xor
mov
dec
jmp
call
lcall
push
aam
xor
ljmp
pop
aas
shrl
pop
imul
out
jmp
lret
insb
xchg
cltd
cmp
or
stos
cmc
sbb
data16
mov
mov
cmpsl
inc
ljmp
mov
rcll
imul
push
xor
jno
lods
xchg
loop
jmp
popf
jecxz
and
ficomps
push
pop
inc
repz
mov
and
ret
icebp
pop
cwtl
insb
adc
test
cmp
movsb
or
push
push
jmp
ret
push
add
fisubrl
push
mov
lret
sub
inc
std
mov
lret
ja
add
mov
inc
ss
cmpsb
stos
sub
mov
xchg
xchg
add
jp
nop
mov
sub
inc
out
lahf
adc
jmp
enter
cltd
sbb
pop
or
cmp
mov
mov
push
int
aad
cmp
pop
xchg
xor
mov
popa
mov
push
inc
lcall
outsl
call
push
ret
jecxz
ret
push
lahf
cltd
jne
xchg
cmp
dec
fwait
in
and
shll
sub
jl
hlt
iret
dec
or
popl
or
push
rol
hlt
jmp
sbb
sti
sub
jnp
or
jb
jge
cli
fsubr
mov
sbb
sbb
mov
and
push
push
push
inc
cs
sub
das
adc
mov
and
xchg
xor
pop
pop
jg
aaa
dec
out
ror
shrl
jns
dec
icebp
xchg
add
movsl
shl
cmc
jl
and
je
mulb
lcall
and
imul
popf
adc
pusha
stos
cmp
fs
loopne
and
sbb
cltd
shlb
and
xor
stos
rorl
xor
scas
xor
push
pop
mov
iret
add
push
jmp
xchg
int
jmp
rcrb
xlat
notl
push
cmc
add
sub
inc
ror
mov
or
rep
mov
mov
mov
cmovns
jg
push
push
rolb
push
movsb
lahf
xor
lods
rep
sub
cmp
jne
scas
packsswb
lret
cld
jg
pop
data16
addr16
shll
mov
jmp
lds
rcrb
push
mov
popf
outsb
in
sub
sub
das
xor
cmp
jg
push
fwait
mov
lock
jno
outsl
jmp
loope
xor
cltd
sbb
imul
jo
pop
cltd
shl
iret
mov
mov
dec
sub
cmpsl
out
dec
jmp
mov
push
cmp
movsb
sahf
push
jae
leave
imul
push
rcrl
add
fwait
push
lock
or
adc
ljmp
jo
pop
add
daa
inc
jp
sti
and
inc
xor
cli
pop
roll
xorl
test
fildll
mov
loope
int
jecxz
jne
aad
cmpl
loope
mov
out
push
cs
shl
jae
pushf
mov
inc
mov
in
enter
leave
jg
xor
cmp
mov
daa
mov
popa
stos
es
sbb
xor
xchg
aad
push
mov
loop
cmp
sub
mov
fisttpll
and
rcr
mov
fimuls
fdivs
pop
push
lahf
dec
stos
push
scas
cmp
sub
inc
and
stos
dec
call
testb
or
divl
mov
mov
and
mov
mov
pushf
jbe
push
inc
dec
and
xor
sub
gs
push
stos
xor
inc
add
xchg
nop
xchg
stos
sti
outsb
push
flds
xor
push
insb
xor
test
sbb
xor
cmp
xor
push
jl
inc
lret
mov
sbb
and
sbb
push
mov
jmp
dec
lds
not
cmp
cmc
mov
addb
cwtl
aas
jp
out
jmp
into
mov
inc
push
xlat
jmp
ret
mov
jg
sub
mov
and
pop
lahf
jmp
movsb
xchg
dec
out
scas
adc
and
cmp
xor
mov
xchg
stos
jnp
das
addr16
jns
ljmp
cmpb
mov
push
cmc
mov
push
mov
mov
inc
push
data16
xchg
out
xor
lds
push
sahf
push
stos
jne
sbb
mov
mov
cltd
loope
inc
outsb
cwtl
xchg
mov
add
or
out
inc
sub
in
and
sub
and
jg
das
das
insl
jae
aam
xor
adc
outsl
imul
xchg
mov
xor
xlat
hlt
push
lea
sbb
push
dec
jg
cwtl
je
adc
movsb
mov
sub
or
adc
xor
fcmovne
movsb
adc
stos
add
add
mov
movsb
mov
loope
stos
pop
call
jae
jmp
mov
sub
jns
adc
pop
and
dec
idiv
mov
cmpsb
lret
mov
xlat
scas
pop
push
mov
mov
jmp
fs
movsl
repnz
adc
mov
add
push
sbb
jmp
lcall
or
xor
push
call
jl
je
push
shl
push
and
sub
dec
test
xchg
shrl
xor
pop
jl
pop
push
stos
push
jle
dec
testb
jmp
dec
add
push
repnz
and
scas
push
gs
popa
jmp
push
cld
adc
push
leave
lret
mov
lahf
jmp
in
lds
sahf
dec
out
pop
xchg
xchg
nop
xlat
into
dec
clc
xor
or
mov
scas
adc
sahf
loop
outsl
dec
xchg
rep
inc
int3
out
cmp
incl
sub
fnsave
inc
hlt
ret
stos
and
xor
sub
pop
ljmp
fwait
daa
jle
stos
pusha
xchg
ret
call
cli
loopne
rcrl
movsl
inc
pop
je
sub
xlat
xchg
sahf
lea
aas
cmp
orl
xorb
sbb
jl
jmp
sbb
push
xor
shr
or
loop
stc
jl
mov
mov
out
pushf
dec
mov
dec
ficoms
lods
xor
stc
mov
inc
dec
pusha
jne
xchg
sbb
sub
pop
cmp
mov
lcall
mov
mov
pusha
jle
orb
add
lock
dec
mov
les
adc
xchg
sub
stc
fistpll
jp
adc
pop
mov
ret
jmp
test
jo
push
loope
xchg
mov
push
mov
arpl
divb
stos
xchg
movb
xor
bound
dec
push
stos
push
inc
and
imull
jmp
stos
xchg
push
iret
sub
or
push
lret
fwait
adc
enter
push
shll
fcomi
addl
xor
cmc
cmp
fwait
scas
sub
addr16
lods
xchg
dec
out
and
jg
sti
and
jmp
inc
lods
lods
in
push
repnz
xchg
out
and
cmpsl
in
test
push
hlt
xor
sbb
mov
jmp
and
cmpsl
push
insl
int
imul
imul
lahf
hlt
lret
jmp
mov
leave
cmp
xor
cmp
or
iret
mov
and
lret
push
dec
fucomp
fcmovbe
adc
fwait
dec
sbb
push
call
insb
fisubl
test
js
jmp
jg
push
stos
jb
mov
popf
jmp
push
imul
jmp
fisubl
popf
xor
jno
cld
lock
adc
push
and
mov
mov
movsb
sbb
mov
mov
shl
mov
add
xor
or
mov
cmc
mov
pop
and
sub
jno
dec
fisubrl
add
push
shll
arpl
cmp
xchg
mov
mov
aaa
inc
mov
repz
mov
dec
xchg
push
clc
xchg
push
je
push
dec
cmp
bound
in
fnstenv
dec
daa
mov
lcall
stos
shll
stos
xlat
aad
inc
and
lcall
xor
cwtl
stos
rclb
shl
push
pop
sub
aaa
sbb
jg
push
jmp
popa
leave
cld
lahf
loope
mov
xchg
and
jmp
mov
xor
push
mov
arpl
inc
jmp
jb
dec
cmp
fsubrs
call
clc
sub
jmp
jae
push
test
mov
adc
fildl
adc
jo
push
xorl
xchg
push
add
pop
imul
fwait
push
decb
mov
enter
pop
cli
stos
mov
adc
jmp
mov
movsb
ret
daa
inc
sub
sub
repz
test
xchg
divl
inc
jmp
push
mov
push
and
bound
dec
push
jmp
mov
inc
pop
es
pop
jecxz
dec
in
les
push
dec
ret
push
jno
stos
scas
xchg
add
andb
movsb
mov
dec
push
outsl
adc
stos
mov
movsl
aad
inc
dec
push
enter
adc
rclb
movsl
js
movzwl
lcall
add
cli
xor
in
push
cmpsl
shr
jg
mov
pushf
adc
rol
test
inc
jl
add
xchg
mov
jmp
int
mov
stos
and
mov
jp
lods
mov
ja
push
jl
je
xor
jnp
hlt
ret
out
adc
push
mov
stos
cmp
jl,pt
jg
sbb
push
push
push
call
hlt
imul
ja
adc
mov
aas
andl
jmp
cmp
popa
sbb
inc
xor
aaa
call
add
js
push
and
out
mov
repz
mov
xor
mov
test
addr16
mov
lods
inc
test
xor
shl
mov
xor
dec
pop
loopne
fdivs
daa
and
mov
mov
xchg
pop
jecxz
mov
jmp
mov
add
xor
shll
dec
mov
movsl
pop
inc
pop
or
movsl
notb
push
stos
loop
cmc
jle
cmpsl
cld
or
rcrl
dec
cwtl
inc
insb
lret
or
loop
stos
lar
insl
xor
pop
adc
lock
rep
lods
insl
jns
xchg
sbb
mov
mov
enter
mov
cwtl
loopne
cs
icebp
ja
lds
je
xchg
into
test
xor
xor
cmpsl
adc
mov
jl
test
shll
xorl
or
cmp
les
dec
mov
ds
ljmp
inc
sbb
mov
pop
jmp
inc
fsubrl
mov
popf
dec
adc
push
xor
add
fdivr
hlt
in
xor
jnp
fs
fwait
aaa
and
inc
aaa
jne
mov
loopew
xlat
je
lret
add
das
movsb
daa
pushaw
push
jmp
clc
scas
sar
das
int
pop
repz
mov
addr16
js
test
cmpsl
clc
call
pop
ds
rcrb
fdivs
lea
push
scas
fstpl
mov
inc
jb
out
pop
stos
mov
push
dec
ss
xor
mov
cmp
xchg
inc
mov
xor
gs
mov
int3
cmp
loope
jnp
repz
scas
xchg
xor
jns
xor
push
fimull
cmp
mov
insl
xor
adc
mov
ja
ljmp
push
aaa
out
pop
negb
inc
ret
pop
sbb
add
jle
xor
jg
lea
jne
push
bound
jle
inc
outsl
push
sti
pop
sbb
sbb
push
mov
xor
xchg
push
clc
jbe
push
mov
sahf
pop
cltd
iret
leave
xchg
ja
xor
lds
shr
inc
cmp
xor
ds
les
push
xchg
mov
and
push
xchg
insb
or
jmp
mov
iret
lods
std
mov
scas
rolb
sub
xor
inc
jne
push
sub
push
xchg
pop
aaa
pop
pop
test
cmpsb
imul
movsb
mov
lret
sbb
adc
iret
xchg
jg
stos
jmp
push
sub
rcl
add
sub
lock
xchg
sbb
xor
fstps
jmp
adc
gs
repnz
jmp
push
mov
mov
inc
sahf
out
push
xor
fwait
daa
sub
jp
aad
jmp
into
cmpb
dec
xchg
mov
pop
add
imul
adc
sub
pop
dec
lret
in
stos
mov
push
insl
jge
int
xchg
or
jne
dec
imul
inc
push
push
pop
sbb
fdivrl
xor
dec
out
sbb
jns
pushf
call
xor
pop
xor
stos
push
cld
and
aad
jmp
movsb
stc
hlt
dec
nop
adcb
stos
clc
out
pop
stos
dec
or
in
sub
and
bound
stos
mov
push
addr16
cmpsb
pop
mov
mov
cmp
cmp
mov
roll
xor
aam
insl
stos
fisubl
push
adc
cmp
mov
dec
jmp
fstl
cwtl
xchg
sbb
xor
lods
inc
sub
stc
sub
push
scas
inc
push
or
dec
dec
push
ficomps
outsb
cmp
jmp
repz
std
xchg
repnz
mov
mov
sub
testl
mov
addl
aad
lods
jne
cmp
mov
pop
cltd
xor
mov
xlat
mov
cmpsl
rcr
lcall
dec
sub
and
mov
mov
lret
insl
pop
stos
out
lcall
into
mov
mov
sub
jo
push
cmp
adc
ficoms
mov
data16
movsl
jp
insb
adc
mov
mov
mov
dec
rolb
xor
and
lds
and
pop
imul
inc
mov
fcmovnbe
dec
mov
loope
stos
aam
mov
jnp
aad
call
sub
pop
mov
lret
sbb
ljmp
ret
pusha
nop
stos
inc
test
call
mov
das
jmp
jae
lods
repz
push
push
movsb
and
pop
sahf
bound
in
cmp
sbb
mov
fistpll
mov
push
inc
lea
cltd
xchg
jnp
mov
sbb
repnz
test
jp
scas
xor
cwtl
js
cmpsb
es
mov
mov
add
ja
in
adc
lods
stos
cmp
das
jg
sahf
sarl
div
mov
inc
in
lret
arpl
movsl
data16
sub
jl
les
pop
xlat
or
mov
hlt
mov
insb
enter
popa
mov
idivb
enter
inc
stos
dec
cltd
jns
and
xor
jno
mov
mov
push
adc
push
cwtl
fisubrs
and
xor
jnp
cmp
or
jl
fucomp
mov
stos
cs
aas
les
cmp
imul
daa
adcl
int3
icebp
shll
add
std
adc
loop
stos
nop
and
xor
fcom
cmp
mov
fucomp
mov
aam
jge
sbb
xchg
adc
fstps
push
cmp
jno
cmp
push
into
movsb
stos
sti
int3
std
xchg
push
dec
ficomps
in
adc
add
sbb
pop
sti
adc
xlat
jmp
outsb
pop
cltd
icebp
pop
sahf
nop
push
add
inc
in
mov
mov
lods
pop
mov
out
sub
xchg
sahf
mov
out
inc
call
leave
push
xchg
insb
fs
jno
mov
sub
nop
imulb
and
hlt
xlat
in
xlat
push
jb
adc
ret
repz
sti
stos
sbb
lcall
dec
xor
inc
insb
lods
xchg
xchg
shrb
es
push
adc
jmp
in
ret
iret
cli
lret
bound
adc
xor
pop
dec
push
test
push
int
xor
nop
mov
test
push
inc
push
cmp
xor
fwait
stos
mov
data16
sbb
shll
push
mov
xchg
enter
xchg
and
push
loope
jbe
mov
fdivs
mov
jae
push
mov
xorb
sbb
in
or
xchg
add
dec
push
stos
sbb
ljmp
jp
pop
scas
mov
add
and
icebp
sahf
xchg
ret
in
jp
dec
xor
mov
test
inc
mov
jne
or
lahf
inc
push
nop
cld
stos
lret
mov
mov
addr16
xchg
aaa
cmp
mov
xor
mov
adc
push
add
adc
mov
imulb
inc
sahf
sub
aam
and
repnz
xchg
fildl
in
xlat
jmp
test
mov
push
xor
cmp
aam
push
xor
inc
insb
in
dec
js
in
sbb
jmp
lock
mov
pop
adc
push
in
into
scas
inc
push
test
xor
add
cmp
dec
push
mov
xor
movsl
gs
fists
mov
clc
sub
or
sbb
test
add
bound
add
adc
inc
iret
inc
mov
inc
in
jmp
jle
scas
in
sbb
lods
add
ficoms
in
pop
ret
pop
sti
iret
xor
push
jmp
subb
test
ds
xor
cmp
dec
cmp
jmp
pop
int3
adcb
sub
mov
out
inc
imul
leave
jmp
stos
out
mov
outsl
adc
cmc
push
xchg
dec
jle
cmp
or
or
sti
in
aad
push
or
inc
cltd
mov
pop
xor
add
iret
or
adc
adc
arpl
xor
lret
cld
mov
jne
pop
xor
xor
data16
sub
push
cmp
lea
push
adcl
inc
arpl
lahf
out
xor
test
add
rclb
ja
and
ljmp
leave
imul
fcomps
add
sub
int3
mov
mov
lods
jbe
jae
lods
mov
mov
repnz
mov
add
jmp
mov
pushf
gs
test
add
mov
popa
sbb
in
adc
inc
mov
enter
pop
cmp
push
dec
push
sbb
xchg
std
in
jnp
cld
sub
xchg
mov
into
outsb
stos
insl
cmpsb
icebp
ret
mov
call
call
xlat
outsb
out
and
add
test
call
and
mov
test
dec
mulb
roll
or
mov
test
push
in
inc
das
push
xchg
cmpsl
xchg
xchg
iret
rol
dec
lods
mov
jbe
mov
outsl
stos
lea
sub
test
jmp
dec
adc
insb
cmpl
mov
clc
stos
push
lock
je
mov
cli
xchg
push
pop
ret
leave
lahf
loop
xor
test
and
in
or
jno
or
cmp
and
push
insb
pop
sub
jmp
outsl
roll
xchg
mov
ret
popf
adc
cmp
pop
dec
mov
cli
xchg
inc
loopne
shlb
mov
lret
jae
xor
lock
jge
adc
test
test
pop
int
pop
pop
outsb
mov
int3
inc
jl
sbbb
rcll
pop
adc
push
push
inc
mov
add
gs
sub
sub
sub
jb
mov
cltd
or
jbe
or
lahf
pop
out
fisubrs
add
dec
popa
jecxz
sahf
popl
jle
mov
cmp
xchg
xor
lea
push
fwait
push
fsubl
jnp
and
mov
adc
and
daa
notb
fcmovbe
les
adc
test
adc
insb
jnp
pop
pop
mov
xor
cmp
stos
mov
bound
sub
sub
int3
call
test
popa
jle
xor
cmp
xor
or
fistps
sbb
sbb
in
sti
test
mov
lcall
mov
mov
in
sbbl
fistps
shr
dec
or
xchg
add
dec
jmp
pushl
xor
cld
push
or
pop
adc
xchg
stc
mov
dec
fwait
loop
push
sub
shlb
scas
in
or
sbb
push
and
and
push
xchg
xorl
cmp
and
fsubr
add
dec
mov
adc
cwtl
adcl
xor
mov
std
or
je
push
call
mov
pop
inc
mov
outsb
pop
add
mov
adc
sub
sbb
jmp
lods
repz
les
dec
cmp
push
ds
insb
jmp
in
push
mov
sub
movsb
mov
out
adcb
rcll
pop
ljmp
fsub
roll
xchg
dec
push
adc
idivl
es
sbb
adc
mov
xor
in
aaa
out
shlb
imul
xor
add
cmp
mov
lods
js
dec
cmpsl
or
cs
stos
dec
jmp
in
jbe
lds
mov
nop
jl
push
dec
testb
jno
jle
push
jbe
jg
fabs
mov
gs
out
or
and
enter
xor
stos
jg
daa
pop
xlat
ret
jmp
aam
add
mov
popf
mov
push
ss
fldl
repz
leave
popa
in
xor
xor
push
scas
testw
mov
dec
popf
bound
test
pop
leave
ss
hlt
inc
adcb
nop
sbb
js
stos
adc
je
popf
xor
rcll
xchg
ror
xor
test
jge
jnp
inc
mov
divb
outsl
mov
cld
cli
stos
sbb
mov
clc
inc
xor
loopne
stos
push
push
test
mov
movsb
adc
adc
push
pop
shll
mov
jg
mov
mov
incb
imul
aas
push
andb
push
push
mov
cmp
cmp
add
jae
bound
gs
pop
lods
jnp
jmp
mov
repnz
push
dec
sbbb
stos
inc
push
ja
add
push
push
push
jp
popa
xchg
dec
mov
mov
add
hlt
mov
pop
add
mov
jbe
cmp
push
pop
iret
scas
cmp
pusha
dec
sbb
and
jecxz
mov
in
pusha
nop
dec
aas
mov
sahf
cmpsl
iret
clc
inc
cmp
pop
and
add
xor
ficomps
into
loope
and
mov
and
or
jbe
cmc
jbe
dec
and
out
jge
mov
rorl
xor
sar
add
jge
stos
pushf
in
jb
hlt
inc
jp
jmp
lds
mov
cmp
cwtl
stc
xchg
cli
xor
stc
pop
stc
and
enter
dec
dec
jmp
ljmp
push
fstpl
das
in
and
or
sbb
or
inc
scas
jmp
xor
in
push
push
xchg
sarl
xor
insl
jbe
mov
popa
sarl
add
scas
jge
mov
add
or
out
repz
fbstp
push
fs
fdivr
sbb
je
jo
jmp
stos
fsubrs
sub
xchg
xor
lret
ja
outsl
and
jge
xchg
lretw
dec
popa
sbb
int3
jae
xor
or
sub
insb
xchg
xchg
jo
or
pop
insl
mov
sub
jno
js
dec
add
jns
xor
cltd
push
and
clc
scas
imul
jmp
xchg
or
mov
sub
mov
cmp
jb
lods
push
rcl
lea
pop
sbb
push
cmpl
test
xchg
stos
in
or
inc
fiaddl
movsl
jmp
add
mov
pop
popf
dec
push
jp
adc
insb
test
lock
push
sbb
adc
ljmp
xchg
dec
or
cmp
call
xchg
pop
dec
fwait
xchg
pop
or
xor
mov
and
xor
sarl
cli
adc
lods
call
imul
jae
stos
out
pop
add
inc
jbe
inc
inc
or
push
inc
fwait
jns
jne
and
mov
out
adc
lahf
rclb
loope
sbb
jb
test
dec
daa
push
test
inc
xor
lea
or
xor
stos
push
das
jne
test
std
jmp
lods
insb
or
int
or
jmp
xor
mov
inc
inc
or
xchg
fmuls
cmp
sahf
icebp
ja
stos
xchg
adc
jge
mov
stos
jae
sub
lods
dec
jp
pop
pop
jle
in
stos
and
push
bound
popf
cs
out
pop
inc
ret
xor
mov
rcrl
out
repnz
in
scas
icebp
testl
adc
mov
in
mov
lret
pusha
fldenv
jp
iret
movsb
or
dec
sbb
aam
push
pop
push
sti
lahf
add
add
iret
addr16
jmp
push
sbb
push
clc
das
mov
loopne
and
out
les
ffreep
int3
repz
push
and
or
jo
xlat
insl
jmp
add
in
push
rorl
out
inc
lcall
dec
outsb
inc
stos
imul
lds
jmp
cmpl
jmp
int
imul
and
sub
push
aas
sub
imul
push
lods
xor
int3
push
pop
mov
cs
movsb
pop
mov
or
pop
pop
dec
es
push
movsb
stos
arpl
push
inc
mov
lods
push
jmp
dec
or
aaa
jg
fstl
leave
rclb
jne
jae
call
lahf
pop
adc
inc
cmp
push
leave
adc
pop
adc
loopne
std
pop
xchg
sbb
mov
xor
scas
insl
lods
loope
int3
bound
scas
mov
dec
xor
loope
inc
mov
loop
push
insb
xchg
inc
ret
hlt
jne
cmc
stos
push
mov
jne
arpl
in
pop
enter
mov
or
pop
pop
stos
insl
test
pop
mov
fiadds
stos
cmp
ja
das
fistps
pop
mov
xor
cs
lret
cmovo
cmp
jmp
pop
add
jb
push
sub
insb
mov
sahf
out
xor
adcb
shll
call
fistl
mov
pop
dec
stos
imul
scas
lcall
aaa
es
push
stos
mov
lds
jae
rcll
stos
arpl
js
mov
movb
push
push
sarb
loopne
xchg
es
popf
adc
jp
xchg
push
and
dec
test
pop
imul
fwait
push
fistps
add
out
xor
in
xchg
mov
xor
dec
ljmp
incl
pop
jg
adc
mov
mov
xor
push
mov
mov
ljmp
jb
mov
stos
sbb
insl
lods
lahf
add
in
mov
xor
xchg
xchg
popf
fidivs
push
ljmp
sbb
gs
out
sbb
jns
xchg
cwtl
loop
mov
test
mov
gs
repz
jecxz
adc
pusha
mov
cmp
jnp
aam
jns
jecxz
pop
and
xor
stos
call
jnp
xchg
pop
das
fisubrs
loope
test
and
into
add
jmp
out
lret
lods
pusha
insl
and
stos
inc
popf
push
movsl
imul
in
imul
inc
pop
push
pop
stos
push
int3
jmp
jmp
imul
dec
mov
inc
popf
push
or
jb
xor
mov
repz
lods
sub
xchg
stos
xchg
leave
mov
in
dec
rcrl
sbb
sub
sub
mov
xor
add
jecxz
pop
push
mov
test
xor
mov
rcrl
fcoml
xlat
out
fsubrl
daa
lds
jl
push
lcall
and
es
shrb
and
int3
leave
stos
mov
dec
adc
hlt
mov
es
je
xor
dec
xchg
js
pop
scas
mov
xchg
addr16
pop
fwait
lds
jmp
repnz
cmp
sbb
enter
rcrb
sbb
daa
aaa
jae
xchg
push
aas
out
xor
mov
pop
or
sbb
std
hlt
fistpl
jb
shl
ds
ljmp
aam
std
dec
arpl
jmp
mov
cmp
inc
sub
jo
xor
pop
das
cmpb
addb
and
jmp
xor
mov
jbe
lahf
aaa
shl
fmull
cmp
jno
mov
inc
setne
aam
daa
ja
rcll
das
mov
pop
sub
push
and
iret
repz
scas
push
dec
lods
dec
or
push
push
push
mov
add
ds
push
adc
iret
icebp
shlb
movsb
or
push
inc
orl
ss
dec
test
pop
push
mov
arpl
sbb
cmp
pusha
and
cltd
stos
ret
cmp
adc
cmp
sub
les
int3
cmp
push
push
addr16
gs
aam
inc
mov
push
cmp
es
xor
dec
mov
mov
mov
mov
std
sbb
lods
mov
movsb
fldt
mov
push
xchg
xor
inc
imul
mov
stc
or
shrb
jl
xchg
pop
pop
and
and
rcrl
push
jg
jmp
sahf
movsb
imul
and
and
cld
out
push
mov
pop
lahf
xchg
mov
push
icebp
pop
mov
loope
andl
lcall
sbb
xchg
and
lock
inc
enter
test
mov
or
subl
nop
sub
pop
clc
orl
sarb
add
subl
cmp
add
clc
mov
jmp
pop
aas
dec
jnp
int
add
call
xchg
mov
xor
push
xor
xchg
push
adc
add
xor
mov
subl
jge
xchg
pop
xor
push
jmp
pop
xchg
jno
jmp
sub
mov
outsl
movsb
pop
xlat
xor
dec
dec
lods
xchg
cmpsl
mov
pop
enter
xor
stos
xchg
mov
xlat
xchg
jnp
mov
rcrl
and
in
shl
cmp
xor
pop
ja
cmpb
movsb
stos
test
cmp
loope
jmp
rcr
jmp
jle
or
test
out
mov
lods
push
xchg
test
lock
xchg
or
fidivl
cmpsb
notb
ror
in
jne
and
out
push
ljmp
mov
push
sbb
gs
cmp
outsb
testb
cs
lods
jno
lds
pop
and
sub
vaddsubpd
jae
inc
movsb
mov
lret
sbb
push
inc
daa
leave
jg
cwtl
or
int3
nop
dec
leave
mov
test
dec
subb
test
mov
icebp
cmp
adc
or
cld
repnz
loop
xchg
pushl
ret
int
ljmp
gs
insl
inc
pop
jmp
jo
push
add
jne
mov
push
dec
lret
adc
add
adc
push
sti
mov
push
fidivs
loop
cmp
cmc
mov
or
push
push
pop
in
and
dec
pop
mov
push
jne
neg
popf
stos
out
int
mov
push
out
sub
jp
icebp
es
pop
call
sub
leave
jle
jmp
imul
call
out
xor
cmovb
insb
leave
mov
mov
xor
add
cltd
cmpsl
and
shlb
repz
cmp
nop
lds
repnz
pop
das
stc
push
xchg
xchg
leave
adc
push
or
adc
mov
subb
dec
aad
mov
test
in
cmc
frstor
aas
test
repnz
jb
loopne
es
pop
notb
jmp
lret
sahf
xchg
jg
mov
jbe
sub
mull
pop
lahf
cmp
jp
jmp
shlb
xchg
mov
xor
rcrl
xchg
dec
mov
xchg
cmp
and
push
jmp
test
or
or
pop
sbb
jmp
xor
mov
pushf
pusha
sbb
es
inc
nop
lcall
cmp
jle
pop
enter
daa
mov
stos
repnz
movsb
inc
push
aaa
sub
push
inc
lods
and
xlat
xchg
adc
xchg
mov
cs
mov
sbb
cmpsl
dec
xchg
push
xor
cmpsb
sbb
adc
into
push
movsl
scas
ret
out
jmp
add
jle
sbb
lcall
stos
ja
cld
negb
loopne
jb
pop
push
pushf
jae
dec
mov
mov
stos
es
jmp
mov
sub
fsubs
data16
cmpsl
inc
cmpsb
aam
shlb
or
jmp
fnstsw
imul
mov
push
jmp
cmpsb
mov
push
pop
js,pn
push
cmp
xlat
cwtl
xor
rcr
das
fnstenv
pop
into
shr
outsl
push
std
add
aad
cld
or
sub
dec
push
and
mov
sbb
arpl
mov
or
mov
in
loopne
pop
sti
scas
jmp
sub
int
mov
in
mov
idivb
pop
data16
jnp
inc
dec
cmpsb
xchg
or
push
out
mov
xor
pop
dec
xchg
stos
aaa
add
ljmp
sbb
and
pop
jmp
enter
cmpsb
mov
dec
jmp
call
imul
push
daa
sbb
xor
stos
cmpsb
testb
pop
les
push
mov
or
sti
sahf
pop
loope
scas
leave
stos
pop
or
adc
mov
ret
mov
push
push
or
xchg
xor
mov
imul
inc
je
mov
and
xor
gs
and
adc
aam
add
ljmp
ds
lods
xor
scas
subl
lcall
ret
std
pop
mov
shll
mov
add
sbb
mov
sbb
mov
out
xchg
adc
adc
adc
stos
cwtl
data16
movsb
push
clc
mov
jmp
fcoml
call
add
adcl
or
ds
cs
push
xchg
jmp
push
fmul
pop
fs
adc
imul
push
mov
jmp
lret
add
pop
jo
mov
add
out
and
add
dec
dec
push
dec
leave
sbb
into
mov
jle
xor
pop
test
rolb
push
jl
xor
mov
dec
arpl
jmp
pop
clc
inc
repnz
jp
cmc
dec
mov
ds
js
cmc
jecxz
mov
insb
fsubr
adc
xor
loop
repz
out
and
stos
inc
inc
xchg
int3
lret
arpl
dec
rcl
fwait
jmp
pop
jle
mov
movntq
mov
push
inc
push
push
xchg
push
mov
ffree
xchg
mov
mov
add
xor
loope
int
jae
sub
out
jmp
lods
mov
jmp
pop
test
sbb
or
repnz
std
add
icebp
stos
mov
adc
mov
push
add
push
dec
mov
push
inc
push
jmp
pushf
call
cmp
stos
sub
jl
push
call
xor
loope
loopne
fcmove
pop
push
jp
es
jno
jns
pop
push
je
xor
repz
adc
enter
and
lock
sbb
repnz
jne
sbb
adc
cld
add
std
inc
stos
and
push
scas
jne
popa
mov
mov
lret
dec
roll
stos
pop
push
jno
movsb
pop
mov
pop
pop
rcll
dec
ljmp
pop
shlb
stc
cltd
not
jmp
cmp
or
cmp
sbb
sbb
in
repz
lock
cwtl
and
jp
insb
adc
xor
push
stos
mov
shrb
jp
stos
sbb
jl
jecxz
push
mov
cmp
jg
xchg
clc
xchg
insb
inc
mov
inc
loope
outsl
mov
outsb
dec
repz
data16
dec
andb
ljmp
aad
loope
in
pop
push
jno
adc
and
adc
add
jmp
dec
sub
or
insl
ret
leave
sbb
jl
jp,pt
aam
and
dec
xor
xchg
es
shrl
test
data16
in
dec
stos
add
out
mov
fisubl
xchg
mov
js
cld
movsl
je
ds
xlat
movsl
dec
sbb
jne
fimull
mov
xor
cmpsb
ljmp
pop
jbe
add
lea
push
movsl
int
jo
popf
inc
mov
xchg
xchg
jae
jnp
cli
pop
mov
jp
test
bound
adc
sbb
sub
arpl
inc
pop
bound
je
nop
test
idivb
nop
int3
add
xor
cmpsb
enter
dec
dec
in
xor
xchg
movsb
scas
xor
pop
adc
outsb
inc
jae
xchg
and
je
mov
aaa
push
repz
and
xchg
out
shr
cwtl
pushf
adc
jge
sub
adc
sub
cmp
cmp
cld
adc
adc
test
lods
push
sub
test
xor
rcl
inc
push
xchg
jmp
push
repz
pop
shll
iret
loope
fbstp
and
fnstenv
stos
loop
repz
shlb
pop
in
jbe
shlb
popa
add
pop
stos
pop
sbb
adc
jmp
jecxz
mov
and
cmpb
rorb
adc
aam
cmpb
rcl
pop
push
add
fst
cmp
xor
xor
stos
xlat
xchg
sti
dec
cmp
enter
or
out
mov
push
jmp
mov
sbb
dec
adc
pop
and
pop
gs
sub
js
jno
xchg
push
fadds
inc
adc
and
mov
push
rorb
nop
mov
imul
mov
jbe
lods
jae
test
xchg
add
mov
pusha
push
stos
clc
jecxz
rcl
fistpll
les
sbb
fcomp
int3
pop
push
scas
stc
gs
jecxz
test
xor
in
fstpl
mov
shrl
pushf
xor
popa
scas
cmp
mov
push
sbbb
into
inc
pop
xor
xchg
pop
sar
xchg
stos
mov
mov
pop
jmp
cmp
fnsave
fisttps
push
cltd
pop
cmpsl
mov
dec
jns
fs
cmpsl
or
mov
push
fs
sbb
adc
mov
inc
sub
stos
sub
lahf
push
decl
scas
jmp
and
pushf
add
cs
lret
jg
lahf
pushf
adc
mov
xor
shrl
and
movsb
push
shll
lock
push
pop
xor
and
stos
add
lcall
nop
pop
mov
and
dec
cltd
mov
xor
cmpsl
inc
pop
stos
fmul
pop
mov
iret
ret
mov
dec
and
sbb
in
repz
jmp
jnp,pt
dec
out
push
push
push
std
xchg
mov
add
dec
int
test
add
push
and
mov
mov
and
sahf
xchg
lock
insl
ljmp
sbb
or
stos
arpl
adcl
aam
call
push
mov
or
add
nop
adc
sub
out
shrl
movsl
sete
imul
dec
movsl
mov
stos
push
out
lds
mov
xchg
in
in
xchg
or
jb
shll
stos
les
xchg
jno
xor
ror
sub
xor
and
xor
xor
dec
push
push
and
lods
cltd
dec
rcr
popa
or
mov
outsl
adc
inc
cmp
mov
iret
pop
stos
adc
push
stos
adc
and
lret
mov
inc
pushf
push
jle
ficomps
xor
stos
or
dec
or
fisubrs
rorb
mov
add
jb
mov
jnp
xor
flds
aaa
sub
loop
stos
loop
or
nop
xchg
mov
sub
lods
stos
and
and
adc
inc
mov
and
lock
arpl
nop
mov
or
mov
call
jmp
push
out
mov
jnp
jp
dec
jl
test
mov
sbb
in
fimuls
stos
push
adc
aad
ljmp
test
shl
jnp
push
aam
mov
xor
outsl
iret
cmpb
xchg
mov
jle
inc
xchg
jmp
push
dec
pop
rep
nop
jmp
pop
adc
pop
dec
dec
pop
xor
sub
negb
mov
pushf
in
jb
test
jbe
rolb
in
stos
jne
hlt
stc
cs
out
jne
xor
test
pop
push
and
fisubrs
mov
lods
xor
dec
push
rorb
sub
mov
jmp
or
js
dec
push
mov
dec
lds
mov
fstpl
mov
shrb
push
lods
jo
mov
sub
xchg
adc
cltd
call
xchg
mov
jo
sub
lds
or
xor
inc
fcmovnu
pushf
fcoms
push
loop
out
sbb
sahf
inc
xor
push
push
stos
int
movb
pop
insl
leave
mov
mov
xchg
test
fs
xor
or
leave
dec
inc
cwtl
in
repnz
sbb
lea
data16
inc
xor
jmp
dec
mov
stos
pop
xchg
mov
xchg
mov
sub
push
xchg
push
adc
sub
sub
jp
popf
xor
jge
push
out
mov
mov
or
jnp
xchg
adc
inc
sbb
pop
sub
loop
out
dec
dec
jmp
pusha
in
or
out
mov
popa
lods
out
cltd
add
pop
mov
or
in
stos
je
mov
in
jp
jae
rcr
xchg
stos
lods
in
add
jle
push
xor
pop
cwtl
subb
jmp
add
jmp
xchg
inc
bound
push
mov
fstpt
jmp
cwtl
sub
data16
aaa
push
xor
inc
pop
nop
test
cmp
xor
subl
dec
pop
jo
cld
push
adc
hlt
xor
jmp
out
and
or
mov
mov
cmp
dec
das
mov
daa
imul
xor
mov
mov
scas
inc
cmp
stos
push
mov
mov
aaa
std
jns
and
sbb
loop
jmp
mov
push
or
repz
fldcw
adcl
lret
add
jmp
pusha
xor
pushl
adc
push
arpl
xchg
ljmp
test
inc
js
jmp
xorl
ss
repz
cltd
mov
inc
adc
add
mov
sbb
sbb
pusha
cmp
push
dec
add
push
cmp
jae
pop
or
ja
outsl
inc
xlat
imul
xchg
out
lahf
mov
fsubs
push
or
insb
test
sub
add
fcoml
inc
imulb
or
xor
aad
fiadds
lods
pop
push
mov
out
mov
jle
lret
sbb
daa
jb
cmp
stos
sahf
enter
shrl
sarl
stc
les
stc
ljmp
insb
sub
inc
mov
jmp
sti
jmp
jmp
jbe
mov
sub
stos
jl
jle
adc
jo
add
mov
in
mov
pop
cmp
insb
sub
or
or
push
jnp
mov
fildll
in
cld
mov
mov
leave
mov
sbb
xchg
add
adc
xor
jne
sbb
xchg
outsl
lret
mov
xor
mov
gs
xchg
or
lcall
jmp
mov
sub
cmp
lret
mov
ret
repnz
jmp
mov
pop
mov
daa
cmp
jae
inc
stc
sub
test
rcr
mov
cli
push
mov
inc
push
lcall
cmp
push
push
xchg
mov
push
mov
ljmp
int3
pop
lods
sbb
imul
lods
jmp
jl
ret
and
stc
pop
push
lock
pop
mov
xor
or
rcr
pushf
pop
jno
flds
add
or
mov
lret
cmp
shl
aas
faddp
loopne
xor
pmaddwd
lods
rclb
mov
clc
sbb
jno
out
mov
fldt
xchg
xor
xor
push
idiv
stos
jmp
or
je
mov
and
cmp
inc
dec
insl
mov
mov
outsb
stc
fildl
push
mov
repnz
imul
shlb
repnz
jbe
iret
and
mov
xchg
mov
jmp
jnp
lret
test
sub
xor
subl
mov
or
xchg
push
jg
popa
and
xor
inc
add
cs
jmp
jge
clc
lcall
cmc
mov
bound
sahf
test
js
mov
add
inc
add
push
push
pop
cli
xor
test
push
or
and
cmp
xor
pop
jecxz
stos
pop
pop
outsl
jno
dec
or
inc
adc
cmp
mov
add
push
sub
xor
xor
fidivrl
pop
rclb
xchg
jle
or
push
push
loope
sbb
nop
push
adc
mov
xor
enter
cltd
xchg
addb
popl
push
lret
int
dec
call
add
pusha
aad
aad
stos
jmp
push
pop
cmp
shrl
jo
pop
mov
mov
xor
xchg
jmp
stos
jle
clc
stos
ret
icebp
pop
mov
jmp
jmp
pushf
gs
pop
lcall
mov
xchg
pop
jmp
jp
cld
push
out
rcll
or
xchg
out
mov
insb
ss
pop
sti
mov
xchg
xchg
int3
cli
ret
nop
movsl
jae
pusha
fstps
sbb
stos
mov
lock
inc
jmp
cmp
push
mov
push
loop
loopne
out
nop
inc
mov
pop
sahf
pop
loop
inc
into
stos
test
stos
cmpb
out
cs
repz
mov
push
jbe
ret
xchg
hlt
aad
ds
lock
push
test
lods
sti
sbb
push
lcall
sub
xchg
loop
xchg
lahf
sub
and
sbb
pop
xchg
pop
cmp
mulb
dec
adc
lahf
add
sbb
das
mov
push
fwait
cmc
xor
je
push
inc
sub
out
adc
jnp
xor
lods
inc
sub
ljmp
jae
mov
inc
jmp
shl
out
ret
dec
into
jnp
das
xor
in
inc
ffreep
pop
cmpsb
xor
test
mov
mov
sub
ljmp
push
add
mov
sbb
pop
jecxz
insl
ds
jecxz
andb
push
es
clc
mov
in
je
les
fwait
insl
and
and
decb
fisttpl
inc
or
mov
mov
sti
stc
mov
orl
dec
dec
fldt
adc
dec
inc
sbb
xor
xchg
mov
push
sar
xchg
add
xor
cld
adc
mov
lds
push
xor
out
push
add
mov
jp
arpl
cli
cmp
jns
mov
mov
call
inc
and
stos
xor
in
mov
lea
adc
adc
stc
lcall
dec
insb
imul
push
std
pop
pop
cld
or
or
repz
jbe
mov
cwtl
push
fbstp
stos
add
jae
out
in
xlat
stos
mov
and
push
mov
sub
and
push
xor
xchg
mov
ret
push
das
sbbl
clc
shlb
loop
add
pop
sub
jb
pop
pop
jp
dec
or
pop
test
mov
mov
xor
push
cs
xlat
sub
pop
or
jnp
shlb
push
push
push
push
lea
jae
sub
je
stos
and
mov
ljmp
addl
lea
sbb
stos
or
lahf
push
enter
mov
jmp
sub
push
pop
jo
add
cwtl
cmp
push
push
sbbb
jae
roll
nop
aam
scas
jmp
loope
shll
dec
mov
ret
in
in
cmp
subb
xchg
test
loope
mov
ret
sub
xchg
or
inc
adc
movsl
aad
xchg
mov
int
mov
mov
xor
ret
rclb
in
jl
shll
mov
sarb
push
sbb
push
xchg
repnz
lcall
mov
sti
xor
jmp
out
ret
mov
mov
stos
mov
mov
mov
pop
dec
ds
cmpsb
lods
dec
inc
xor
or
pop
test
jns
mov
adc
jmp
mov
xorb
xchg
lahf
addr16
dec
loopne
lret
push
out
xlat
fwait
popa
push
dec
imul
scas
sti
stos
xchg
addb
dec
sbbl
jmp
fildll
ret
loope
bound
sub
stos
jp
jp
out
cld
ds
sub
push
mov
sbb
es
push
push
sbb
push
scas
jae
sbb
dec
sub
dec
sbb
dec
xor
sbb
pop
xchg
pop
stos
das
adc
pop
sbb
repnz
ja
add
sbb
cmp
xor
stos
jo
mov
fdivs
std
dec
jle
mov
push
xchg
gs
and
mov
dec
cwtl
aas
and
or
jg
xor
in
cmp
push
icebp
test
daa
shrl
and
jmp
lahf
clc
fistl
mov
das
push
out
out
mov
daa
add
xor
add
aad
xor
nop
dec
pop
mov
popf
mov
rorb
shll
hlt
pop
popf
xor
fs
jge
dec
dec
xlat
stos
lds
or
test
xchg
push
loope
adc
outsb
cmp
inc
arpl
dec
xor
mov
arpl
or
sahf
jmp
test
or
out
mov
push
iret
lret
mov
pushf
mov
fdivl
push
aaa
or
mov
adc
sub
hlt
mov
mov
adc
xor
xchg
test
stos
fldcw
inc
mov
jmp
test
xchg
es
pop
jne
pop
cmp
dec
push
ss
mov
mov
jg
xchg
hlt
inc
jno
jmp
pop
stos
push
push
sub
dec
push
mov
addr16
xor
mov
aad
stos
xor
xor
mov
cli
add
testl
imul
xor
pushf
push
add
sahf
pop
fs
js
not
adc
out
push
shll
orb
xchg
dec
mov
push
push
push
movsb
xor
add
imul
sub
in
cmp
lods
int
inc
pusha
dec
sbb
jmp
mov
push
sub
lea
xor
cli
mov
pop
pop
adc
into
or
mov
fldcw
ss
test
repz
fdivrp
push
filds
lods
adc
jmp
cs
and
xchg
sti
inc
push
and
das
stos
push
inc
sbbl
jmp
test
les
mov
push
sahf
mov
xchg
mov
pop
adc
rcrl
mov
in
popf
xchg
xchg
xlat
push
stos
push
inc
lcall
jne
movsb
jne
or
mov
addr16
xor
lods
bnd
push
and
pop
xlat
dec
hlt
xor
mov
subb
cmp
add
jp
mov
aas
jmp
loope
lds
adc
pop
mov
jl
and
iret
xor
test
xchg
fdiv
andb
cld
lods
dec
out
xor
inc
rorl
jg
shr
call
ja
gs
imul
and
sbb
in
mov
orl
push
xchg
hlt
sub
adcb
pusha
mov
int3
dec
xchg
jmp
mov
xchg
enter
sbb
mov
stos
add
pop
push
fcmovbe
stc
call
dec
rolb
xchg
mov
mov
in
jmp
or
aas
mov
xchg
outsl
in
daa
adc
jle
push
sbbl
cmp
scas
xlat
shr
inc
sbb
outsb
xor
addr16
mov
jmp
cmp
or
dec
inc
jmp
mov
filds
loop
push
out
shlb
cmp
cmp
es
jecxz
or
xchg
lods
dec
xchg
inc
iret
stos
aam
stos
dec
push
sub
lds
add
stos
sbb
sahf
sbb
and
test
dec
mov
adc
sbb
dec
sub
pop
rcrl
arpl
mov
jmp
adc
faddp
lea
push
inc
pop
cmp
insl
adc
jo
lret
test
cmc
jecxz
jmp
rcrl
js
out
or
addr16
add
icebp
jmp
cmp
out
lcall
mov
rolb
and
jmp
mov
add
jmp
stos
pop
add
cmp
out
stc
mov
cmc
stos
cs
ja
loope
out
or
enter
pop
sub
mov
pop
pop
add
dec
push
das
add
push
sbb
fldl
shl
mov
push
mov
cwtl
mov
pop
push
mov
sahf
sbbl
lahf
loope
mov
fmuls
jmp
clc
test
cmp
daa
jns
mov
xor
sub
mov
stos
mov
arpl
mov
aam
rorl
int
out
mov
js
mov
add
imul
les
fwait
xchg
std
xor
js
out
jmp
mov
mov
outsl
movsb
in
insb
repnz
mov
dec
xchg
push
jmp
loope
and
popf
in
ljmp
push
xor
movsl
lret
js
sti
imul
in
shl
dec
push
jge
pop
sub
pop
mov
fnstcw
xchg
test
dec
popa
inc
xor
pop
subb
xor
pop
lods
push
out
idiv
push
lcall
cmp
sub
push
pop
js
cmp
sbb
sbb
or
xor
insb
pop
insb
stos
pushf
dec
xlat
mov
jns
mov
adc
es
or
aad
sub
repz
stos
xlat
fisttpl
lock
test
adcl
addr16
pop
and
jmp
inc
popf
iret
bound
xchg
imul
xchg
jecxz
mov
pop
pop
xor
jp
jb
imul
mov
iret
rcrb
rcr
ljmp
xchg
cmp
pop
jecxz
lret
jmp
mov
stos
loop
nop
fstpt
mov
push
les
nop
clc
sbb
adc
stos
inc
push
dec
inc
jmp
adc
out
push
pop
xor
pushw
loop
sbb
leave
mov
out
xor
jne
push
sbb
mov
lcall
mov
dec
mov
mov
shl
mov
xchg
repnz
icebp
jmp
insb
xchg
sbb
pop
jne
mov
imul
jno
lcall
lods
xlat
ret
lods
outsb
std
xchg
mov
push
popf
jl
inc
insb
stos
pusha
insb
das
enter
outsb
stos
jl
gs
int3
stos
lock
xchg
jo
jmp
cs
scas
push
xlat
int3
sub
dec
mov
addr16
stos
and
lods
jns
mov
xor
mov
mov
hlt
jns
loop
jae
stos
xchg
xor
scas
add
and
jmp
mov
xchg
pop
xor
aas
mov
pop
jl
out
add
add
jbe
pop
mov
roll
sub
jmp
aas
jo
pop
loope
jno
cmp
scas
cmp
adcl
xlat
and
leave
les
cmc
incl
push
cmpsl
out
mov
push
jecxz
ficoms
cmp
sub
cmp
push
stos
scas
or
scas
push
jmp
cmp
out
imul
mov
xchg
xor
jmp
cmp
pop
push
cmpsl
jbe
shl
cli
out
pop
repz
xor
sub
sarl
je
addr16
into
int
or
test
loope
lahf
xor
ja
ds
fiaddl
scas
rclb
inc
dec
mov
xor
xor
adc
ljmp
pop
clc
xor
sbb
inc
shrl
sar
lock
add
das
out
push
jmp
leave
sarl
push
test
push
aad
dec
or
xorb
lret
lcall
mov
xor
mov
cmpsb
fnstenv
mov
cltd
push
in
dec
cmp
in
shl
sbb
push
shrl
xchg
popf
lock
and
sub
and
mov
popa
xchg
popa
or
inc
jecxz
mov
inc
push
aam
xor
cld
cmp
popa
xchg
dec
sub
mov
icebp
sub
mov
push
shr
je
sbb
sbb
or
adc
jp
xchg
jmp
mov
pop
pop
and
jne
repnz
push
cmp
icebp
roll
inc
add
xor
fists
bound
outsl
jno
test
je
outsb
jns
nop
push
fs
add
jae
sub
inc
sbb
or
jnp
stos
jo
mov
in
add
iret
lcall
xor
push
pop
inc
xor
test
stos
loope
or
push
jns
jmp
mov
push
cs
inc
ja
enter
into
cmpsb
sub
pop
jmp
mov
sbb
lret
push
inc
mov
add
push
mov
mov
dec
ret
push
pop
repnz
test
pop
xor
cmp
adc
jne
daa
dec
jp
lea
insl
adc
and
sub
jmp
adc
cmp
push
sbb
insl
sub
test
xor
adc
test
jg
stos
jg
lods
pop
pop
ljmp
and
sbb
sbb
push
jb
push
mov
xor
test
jle
cmp
stc
in
out
pop
mov
sarl
sbb
push
and
and
jmp
jmp
fildll
push
loope
mov
mov
out
sbb
sub
scas
adc
dec
add
sbb
cmc
and
cmp
xchg
jnp
out
jl
xchg
dec
push
rolb
repz
sbb
sub
outsb
dec
in
sub
or
adc
jl
xor
pop
subb
inc
push
stos
xor
shll
xchg
stos
pop
cmp
xor
fadds
mov
popf
int
adc
loop
sbb
pop
imul
popa
pusha
jbe
fisttpll
sub
iret
push
rcrb
stc
scas
mov
jmp
cmc
stc
mov
xchg
or
cli
sub
ret
jne
push
fcmovb
pop
addr16
push
mov
aam
sub
xor
fcmovne
xchg
aam
push
bound
out
stos
and
leave
ds
sub
jno
loope
push
or
fildl
and
ljmp
stos
ss
call
push
jle
add
fidivrs
insl
into
aam
mov
sbb
aad
inc
ljmp
push
div
pop
out
push
pusha
xor
pop
decl
cld
test
mov
sbb
arpl
push
xor
sti
popf
jl
movsb
pop
ja
repz
adc
cmp
mov
cld
in
loope
mov
jge
stos
inc
ret
fwait
cmpb
jmp
shlb
push
rolb
push
pop
sti
mov
loopne
sub
addr16
mov
in
lahf
rorb
jae
jg
pop
stos
xor
inc
push
xchg
xchg
ss
pop
in
stos
jp,pt
aam
inc
movsb
inc
sbb
and
dec
xchg
loopne
test
or
ret
or
xor
nop
mov
inc
mov
push
out
mov
in
xor
inc
out
mov
sti
sub
inc
xor
adc
xor
pushf
push
mov
sti
fstpl
xchg
ja
adc
and
mov
hlt
or
push
pop
inc
inc
dec
int
cmp
xorl
pop
jle
jo
stos
push
xlat
sti
test
imul
outsl
xchg
push
in
cwtl
dec
push
add
int3
clc
sti
sbb
cmpsb
repnz
push
xchg
lock
les
mov
sub
dec
stos
sbb
nop
adc
sbb
cmp
mov
xchg
sbb
jmp
hlt
push
aam
incb
jae
mov
ss
stos
and
xor
in
ljmp
and
pop
push
cmpsl
xlat
stos
jp
xor
sbb
lods
divb
testl
push
stos
xor
imul
ret
aam
stos
lods
push
test
dec
insl
gs
jne
cld
mov
push
test
xor
fwait
pop
orl
dec
or
pop
rorl
pop
jmp
loop
jae
jae
xchg
push
iret
jae
xor
sub
aaa
xor
stos
loop
daa
cmp
stos
push
adc
xor
ret
pop
xchg
ljmp
jae
das
add
sbb
sbb
mov
push
pop
imul
jp
xchg
push
loop
pop
cmp
ret
movl
xor
mov
mov
stos
insb
xor
jl
jae
stos
in
cs
mov
test
cmpsl
xor
das
bound
mov
push
faddl
shll
xchg
rol
mov
imul
lret
push
int
shlb
add
xchg
xorl
into
loope
xor
out
mov
cli
test
sbb
xchg
std
scas
push
mov
adc
jge
dec
das
sbb
cmpb
fists
ljmp
xor
into
xchg
cli
into
mov
inc
dec
sbb
fidivrl
mov
add
mov
mov
lods
sub
andl
push
cmpsl
cmp
jmp
pop
inc
adc
fwait
syscall
rol
dec
arpl
bound
fwait
sbb
mov
cmpsl
mov
test
daa
sbb
enter
imul
mov
test
mov
jl
roll
fistps
insb
cmp
test
push
shlb
popa
adc
xchg
xor
cmpb
mov
sub
sbb
sti
xor
mov
fdivs
mov
or
sbb
xor
js
test
stc
pop
push
or
xor
pop
jne
mov
cmpsb
pop
jo
or
jb
in
or
insl
adc
xor
mov
icebp
std
stos
stos
sub
lret
jmp
cli
dec
rcll
xchg
pop
cmp
or
mov
jmp
pop
xor
scas
shll
xchg
inc
test
xor
mov
xor
push
cmpsl
cmp
addb
popa
inc
pop
lds
movsl
sbb
push
cvtpi2ps
jmp
add
lret
xor
out
jl
stos
pop
jp
inc
in
bound
ss
push
inc
add
inc
dec
mov
stos
pushf
lret
adc
cmp
nop
inc
aad
inc
aam
gs
jns
cmp
and
dec
arpl
lret
das
push
mov
inc
and
ret
jge
shr
mov
sub
das
push
ja
cmp
inc
lea
jmp
mov
scas
mov
xor
pop
cmp
pop
adc
push
or
or
or
imul
adc
jge
jg
push
add
dec
mov
insl
xor
cli
roll
out
jp
repz
das
sarl
into
lods
pop
adc
push
lret
out
dec
jmp
jmp
mov
push
xchg
push
push
ja
sbb
or
shll
addr16
pop
out
sbb
jae
cmp
iret
js
xor
repz
and
shll
mov
inc
ret
loope
push
add
pop
pusha
push
stos
xchg
data16
inc
cld
adc
pop
call
mov
push
daa
loopne
ljmp
dec
lret
sti
jp
and
clc
jg
pop
xchg
jmp
or
jns
push
mov
push
sbb
outsl
add
mov
inc
jge
lock
out
clc
jmp
push
lds
or
jecxz
push
loopne
adc
jmp
sbb
xchg
dec
sub
sti
push
mov
adc
sbb
das
xor
push
push
ret
push
mov
dec
mul
imul
out
sbb
push
xchg
mov
and
aam
daa
pushf
cmp
push
pop
in
add
cltd
loop
jo
or
frstor
sub
mov
cld
inc
jmp
xorl
sahf
aaa
dec
loope
in
push
test
clc
rcrl
jns
ja
cmp
stos
xlat
or
dec
add
xor
push
cmpsl
lret
roll
popf
and
mov
xchg
negl
xor
loop
data16
xchg
int
xor
fs
inc
inc
xchg
jle
pop
and
adc
mov
pop
add
and
inc
lods
jmp
push
loope
xor
enter
jns
mov
shlb
adc
lret
loop
aad
sub
cli
mov
bound
call
and
push
adc
shr
mov
mov
jae
mov
push
stos
sbb
xchg
xor
xchg
dec
mov
stos
out
adc
js
bound
jbe
dec
jmp
popa
push
aas
add
xor
in
js
aad
scas
inc
mov
inc
or
xor
mov
enter
insb
mov
movsb
push
pop
or
xor
cmpsl
mov
insl
xchg
imul
pop
jecxz
fs
jmp
pop
add
jns
pop
dec
jecxz
stos
adc
cmpsb
shrl
adc
lods
ljmp
xorb
outsl
mov
movsb
sub
out
sub
xor
push
inc
mov
push
test
pop
pop
hlt
dec
push
loopne
jge
jns
stos
out
mov
xlat
add
mov
inc
push
addl
test
mov
loop
cmpsl
iret
fnsave
jg
mov
mov
adc
stos
push
ret
xchg
rol
xor
add
mov
xchg
outsb
and
adc
push
cmp
subb
jg
andl
ss
ss
insl
out
jno
roll
jl
pop
push
pushl
movsl
cli
push
imul
lahf
shl
xor
imul
insb
inc
clc
js
lcall
add
lret
outsl
in
cmp
and
cltd
ret
sahf
push
rorb
adc
sub
mov
cmc
push
pop
loope
lahf
jnp
pop
icebp
xor
mov
push
push
push
mov
mov
pop
xor
cs
and
insb
test
sub
push
aaa
arpl
mov
and
dec
nop
dec
insb
mov
push
movsl
mov
rorb
sbbb
cmp
cmp
sbb
pop
out
imul
scas
out
lret
cmp
movsl
xor
sbb
dec
icebp
out
lods
adcl
pop
inc
push
sub
cltd
inc
imul
loop
mov
out
sbb
mov
mov
sub
sbb
sbb
popa
idivb
mov
pop
sub
inc
jmp
push
stc
std
add
add
das
sub
xor
loopne
jp
test
cmpb
xor
xor
test
mov
and
clc
mov
xchg
cmp
lret
jl
xchg
push
movsl
xchg
cmp
sub
mov
repnz
insb
jnp
mov
ljmp
push
add
fldl
cli
shll
adc
jns
dec
ja
cli
xchg
call
or
xor
ja
adc
mov
mov
inc
mov
js
xor
push
rol
mov
test
into
sbb
xor
inc
imul
stos
xor
push
xchg
cmp
add
in
loop
mov
adc
fcoml
cmc
out
push
jno
and
pop
dec
outsb
xor
adc
push
orl
dec
xchg
adc
xchg
mulb
xor
ror
pop
lcall
test
xchg
imul
xchg
push
pop
in
aaa
inc
loope
and
jge
movsl
jle
js
xor
add
jne
fistl
in
repnz
add
jecxz
popa
sti
or
lret
adc
ljmp
dec
adc
es
mov
push
and
pop
jl
sti
mov
gs
leave
in
sub
push
out
pusha
xor
xchg
xchg
dec
sarl
clc
cmp
mov
pop
xor
xor
pop
cld
popf
xor
mov
out
gs
mov
dec
pop
push
jecxz
cmpsl
cmp
out
sbb
xor
stos
or
rorl
ljmp
jb
xchg
andb
dec
cmp
xchg
loop
or
jge
sub
lods
stos
and
mov
xchg
mov
subb
push
sbb
aaa
adc
cltd
jne
icebp
ficoml
jmp
les
xor
jae
xchg
pop
jb
push
dec
sahf
mov
sbb
push
push
jo
push
jl
insb
cltd
and
cmp
and
negl
xor
mov
out
stos
xor
adc
adc
cld
fbld
mov
mov
or
loope
in
xchg
mov
jge
mov
xchg
pop
sub
mov
call
sub
jne
and
mov
ja
ds
es
shr
roll
int
mov
insb
repz
jmp
and
bnd
shlb
aam
push
and
mov
adc
movsb
sbb
or
dec
and
jmp
push
jl
testb
outsb
push
pusha
push
inc
sbb
pop
inc
lahf
sub
sub
lcall
inc
mov
cmpsb
loopne
adc
mov
fcomps
mov
xor
in
test
call
jecxz
sub
and
jg
mov
mov
mov
push
mov
movsl
add
inc
jmp
lret
scas
mov
sahf
sub
sbb
push
inc
push
mov
add
cmp
push
mov
dec
push
and
fnsave
insl
mov
aam
push
fsts
jmp
or
or
mov
and
mov
movsb
js
pop
in
dec
in
fmull
jmp
push
sub
xchg
cmp
pop
in
push
out
mov
dec
and
movsb
mov
fmulp
ret
inc
lret
xor
fisubrl
inc
xchg
xchg
fildll
mov
cmp
and
cwtl
mov
mov
or
cwtl
add
fidivl
xor
lahf
push
sub
sahf
and
iret
xorb
jg
repz
loop
stos
cld
xchg
dec
pop
dec
pop
arpl
xorl
lds
or
sbb
xor
imul
xor
jmp
jno
cmp
arpl
jmp
or
lds
cmp
imul
sub
jp
les
push
pop
xor
push
sbb
gs
jp
push
mov
scas
repz
inc
cltd
in
mov
push
mulb
mov
into
ss
iret
pop
push
xchg
push
pusha
js
sahf
adc
jae
mov
inc
adc
stos
fwait
add
push
xor
clc
mov
ljmp
pop
pop
push
stos
divb
dec
xor
inc
xchg
xchg
push
cli
mov
pop
dec
lret
fsub
xchg
outsb
outsl
mov
cmc
iret
jb
sbb
mov
mov
xchg
pushf
rorb
mov
push
push
push
outsl
dec
jb
roll
sahf
cmpsl
stos
sub
lock
lods
push
jbe
nop
mov
pop
push
fnstsw
data16
ljmp
call
fldlg2
xor
push
aas
mov
jno
jbe
mov
dec
pop
xchg
int
add
mov
mov
aad
dec
inc
dec
jmp
xor
test
clc
addr16
fimuls
pop
add
inc
push
rclb
mov
push
xchg
mov
outsb
xlat
popf
mov
lcall
xlat
pop
sub
or
dec
sbb
in
icebp
xor
cmc
and
xor
aam
ds
test
movsl
lret
cmp
sub
add
and
lcall
repz
jmp
arpl
sub
push
das
mov
xor
or
cmpsb
sbb
xchg
sub
push
cmc
ds
dec
sbb
stos
fimuls
out
lret
arpl
jg
imul
arpl
pop
and
inc
push
jno
add
lock
mov
dec
mov
mov
fnop
nop
mov
iret
and
dec
xchg
pop
sub
push
lret
lock
and
push
bound
pusha
add
sbb
push
mov
xchg
mov
out
dec
sub
into
cltd
mov
sbb
xchg
jle
adcb
mov
pushw
push
nop
xor
or
pop
and
loop
call
pop
or
daa
test
xchg
js
stos
pop
xchg
jae
rcrl
push
and
jle
cmpsl
stos
push
mov
inc
mov
rclb
jmp
pop
in
movsb
pop
out
shrl
and
enter
hlt
or
aaa
ja
fistps
push
insl
enter
pop
cltd
stos
mov
sub
sbb
or
aam
fwait
mov
ljmp
jmp
cmp
push
rorb
rorl
ljmp
stos
test
cmp
idivb
adc
insb
inc
addr16
ror
insb
lods
sub
aaa
adc
push
lret
sbb
jge
hlt
push
scas
sti
in
addl
repnz
add
push
cmp
aad
xchg
and
lea
lret
scas
push
add
cs
xchg
inc
xor
dec
es
stos
adc
sbb
popa
or
jmp
dec
mov
inc
stos
add
ret
enter
jns
cmpsb
fsubrl
inc
in
add
push
xor
call
jb
push
mov
mov
lret
pop
inc
imul
pop
mov
je
mov
movsb
inc
cmp
stos
and
add
adcb
adc
aad
jmp
mov
jle
push
outsb
int3
mov
pop
xor
into
sbb
loop
call
fnstcw
scas
ret
or
cmp
inc
mov
gs
jmp
push
out
pop
cmp
lret
push
dec
mov
loop
outsl
jae
ret
jbe
or
xorl
xchg
push
rcl
in
mov
push
xchg
jmp
xor
sbb
out
pcmpgtw
or
test
stos
pop
lcall
and
mov
xchg
sub
sub
push
fs
or
add
pop
subb
and
jmp
repnz
jo
cmpsl
and
ret
jo
ja
push
lods
les
les
out
dec
xor
neg
or
add
dec
jne
mov
jnp
mov
push
es
jp
subl
lods
addr16
in
fwait
pop
mov
out
ljmp
popa
aaa
pop
push
aaa
xor
dec
push
daa
jb
insl
aam
jnp
xor
test
aad
out
cmpsb
sub
movsl
js
sbb
pop
das
movsb
ss
mov
in
add
call
mov
dec
push
ficoml
lds
dec
jmp
jmp
hlt
push
push
jmp
mov
inc
js
xor
cmp
scas
stos
out
jbe
sub
repz
mov
ficoml
test
xor
sbb
lock
mov
repnz
cmpsl
jmp
jle
jle
movsl
orb
push
test
rcl
data16
enter
and
jne
add
cmpsl
pop
insl
mov
pop
fstps
mov
rcr
mov
xor
xor
out
stc
pop
sbb
inc
fsubrl
mov
mov
dec
leave
outsb
jp
clc
lods
pop
xor
shl
xor
pusha
and
lahf
iret
inc
push
nop
lock
lods
jnp
clc
je
out
fwait
stos
sti
data16
rol
iret
mov
adc
repnz
idivb
mov
cs
fsts
mov
int
pop
sti
sbb
xchg
inc
xor
ja
stos
and
pop
lcall
out
cli
fistps
in
pop
push
add
out
dec
inc
and
shr
into
and
das
adc
mov
loopne
cwtl
mov
adc
fwait
sub
mov
dec
into
push
imul
jmp
sti
mov
loope
sub
pop
mov
ret
pop
jno
pushf
cmp
es
push
push
adc
cmpl
sub
nop
in
xor
mov
addl
or
dec
jl
andb
mov
es
lahf
sub
adc
mov
sbb
mov
jno
dec
mov
lcall
int
mov
push
cmc
xchg
xor
mov
jno
add
stc
sbb
js
xchg
test
test
and
rol
fsubr
cmp
inc
sbb
dec
inc
push
arpl
shl
sub
nop
jnp
cmpsl
lcall
or
sti
mov
fucomp
lods
xor
mov
mov
sbb
les
mov
data16
cmp
lret
ret
leave
push
clc
jnp
pushf
sub
cmp
xchg
icebp
aas
mov
or
pop
push
mov
inc
test
roll
push
adc
xor
pop
add
mov
mov
jae
dec
ss
add
pop
inc
push
and
test
mov
jmp
out
jle
shlb
divb
lods
shl
lcall
fxsave
push
mov
stc
jmp
xor
in
push
jp
push
push
jae
add
fstl
testl
repz
stos
sbb
imul
scas
lret
leave
mov
xor
lock
lea
xor
pop
lds
mov
ljmp
stc
das
icebp
mov
add
pop
xor
adc
aam
stos
sub
inc
xor
jmp
jno
arpl
xchg
lret
loopne
xchg
xchg
cmp
or
mov
push
push
popa
pop
inc
popf
dec
call
dec
cmp
insb
push
sub
and
das
insl
cmp
stos
lcall
mov
sub
test
dec
loope
fstl
call
je
in
adc
or
rclb
jae
mov
pop
popa
pop
aaa
cltd
xor
and
jmp
mov
jo
ret
insb
jmp
add
xor
fwait
inc
push
xor
adc
mov
dec
or
inc
xchg
insb
inc
gs
lods
cmp
mov
xor
sbb
icebp
cs
pop
leave
sub
mov
xor
and
push
stos
nop
sub
sbb
mov
or
pop
pop
sub
mov
pop
dec
pop
mov
push
mov
data16
sub
jmp
cmp
andb
jmp
andnps
add
jle
sub
adc
dec
je
movsb
pop
insl
jmp
leave
mov
inc
fistpl
repz
or
lods
push
pop
pop
xchg
xor
dec
push
outsb
mov
mov
push
xor
push
mov
stos
mov
in
sub
jmp
sbb
jl
jne
inc
xchg
push
xor
iret
jmp
xchg
push
test
and
rorl
add
xchg
xor
stos
mov
sbb
mov
or
push
rol
mov
mov
mov
lods
cs
sbb
mov
mov
ret
push
dec
hlt
dec
repz
pop
test
adc
mov
mov
fmuls
xor
jle
mov
push
jbe
into
mov
push
or
mov
ja
loope
hlt
pop
jae
xor
dec
mulb
fs
mov
mov
mov
or
xchg
js
lods
push
push
inc
push
mov
xchg
rcll
jmp
fwait
lds
mov
stos
rclb
mov
in
push
lcall
mov
int
fcoml
xchg
pop
aaa
sbb
lods
push
sar
mov
adc
push
dec
es
out
jbe
int3
popf
addr16
mov
jmp
cld
jae
mov
movsb
out
test
and
lret
jmp
in
out
je
int3
cmp
int
xchg
insb
cmp
cmp
jns
dec
sti
jmp
jge
jb
and
push
pushfw
jno
or
jmp
mov
vandps
push
daa
push
xor
push
fucompp
xchg
lock
push
test
jb
xor
xrelease
pop
gs
lcall
jae
lret
xor
jp
scas
add
push
fwait
sbbb
and
push
mov
repz
popa
cld
mov
or
push
push
adc
mov
mov
inc
lods
xchg
pandn
push
cltd
int
cmpb
xor
std
data16
fldt
std
pop
out
ret
imul
ljmp
bound
ljmp
jmp
idivl
stos
pusha
in
cmp
dec
xor
cmp
daa
test
lds
mov
or
jg
jno
out
or
in
sub
jo
pop
cmp
test
add
nop
hlt
out
fidivl
std
lods
dec
daa
xor
aad
stos
incb
pop
imul
adc
jmp
pop
insb
mov
push
cmp
lods
js
add
imul
add
stos
jl
ss
es
jne
mov
sub
cmp
push
mov
and
push
xor
jg
fildll
loope
jbe
sarl
pop
ljmp
stos
test
push
int3
lds
push
in
cmp
out
dec
imul
sbb
xor
mov
pop
xor
cld
xchg
dec
xchg
arpl
xor
lock
out
or
aam
lret
pop
fisubrl
test
loope
sarb
mov
pop
lods
jnp
push
rol
popa
repnz
notb
xor
mov
push
gs
adc
jg
jno
imul
mov
imul
inc
or
mov
jmp
mov
xchg
mov
ja
imul
std
sub
stos
pushf
std
mov
xchg
dec
jl
data16
cmp
push
sbb
stc
cli
jg
mov
repnz
adc
adc
test
stos
arpl
stos
popa
push
dec
test
pop
icebp
and
out
add
insl
mov
enter
sub
leave
cltd
out
push
inc
xor
cli
movsl
mov
cwtl
or
daa
lahf
stos
movsb
pop
mov
cmpsl
jne
dec
cmp
int
pop
xchg
leave
xchg
aas
stos
std
or
fwait
insb
push
xor
stc
outsb
les
pushf
inc
mov
pop
fcompl
ljmp
movl
push
arpl
js
add
sbb
out
rcrl
sbb
mov
pop
mov
xor
cld
out
scas
push
dec
stos
add
out
xor
das
sar
jg
das
mov
or
mov
cld
and
push
add
xor
mov
pop
pop
jmp
in
inc
sbb
fwait
push
subl
popf
pop
in
add
push
sub
push
js
dec
leave
repz
cli
rorb
repz
jbe
add
mov
dec
pop
rcr
js
push
jb
add
xor
divb
movsb
dec
mov
mov
outsb
adc
test
and
mov
cmp
arpl
jne
fwait
xor
fbstp
cltd
cmpb
movsl
lods
adc
call
cmp
sti
cmp
fmull
stos
sbb
add
and
movsb
mov
xchg
out
dec
fdivrl
push
push
mov
pop
jns
out
loope
out
fidivrs
mov
fmul
jns
push
or
jmp
fisttpll
sti
stos
mov
mov
mov
adc
xor
mov
arpl
dec
mov
data16
lahf
cmp
loopne
inc
lods
and
adcb
mov
test
or
stos
dec
jb
push
test
cmc
jb
add
adc
add
sub
lods
pop
sbb
xchg
jno
mov
out
mov
in
cmc
mov
mov
push
hlt
rcl
cmp
push
mov
aam
fcom
sbb
mov
stos
jb
lods
pop
inc
ljmp
lock
inc
enter
mov
cltd
aad
movmskps
adc
push
sbb
mov
je
ret
mov
cmc
testl
add
mov
push
sarb
into
aam
mov
adcl
mov
jl
jmp
js
adc
mov
sub
fisubs
mov
jne
dec
xor
push
mov
push
jmp
push
sbb
je
leave
mov
jmp
xor
inc
arpl
mov
iret
sbb
xchg
xor
push
call
push
pop
adc
vmovsd
and
jmp
cmc
fisubs
cli
outsl
out
fistl
xor
lea
das
mov
inc
cs
xor
iret
pop
insb
adcl
sub
cmp
sbb
mov
xchg
outsl
push
loop
adc
enter
in
mov
push
stos
cs
loope
insl
test
fdivrp
popf
inc
pusha
jmp
ss
movsl
into
stos
push
test
and
jmp
loope
fcomps
mov
jnp
mov
adc
mov
adc
lcall
mov
pop
push
pop
enter
adcb
sbb
frstor
clc
push
and
mov
rol
add
aas
out
sub
stc
stos
cmpsl
sar
lds
mov
jmp
fldl
adc
scas
push
pop
into
sbb
jo
je
xor
sbb
scas
stos
mov
test
rorl
xor
push
out
xchg
ja
mov
jmp
pop
adc
push
ficompl
daa
sub
adc
out
lahf
xchg
stos
fdiv
xchg
mov
mull
or
jbe
enter
sub
inc
xchg
adc
aaa
inc
cld
shrl
out
jmp
nop
push
sahf
fmul
stos
pop
es
js
call
lock
or
call
inc
pop
xchg
adcl
jmp
mov
icebp
push
outsl
stc
jecxz
xlat
in
hlt
das
dec
mov
mov
mov
mov
pushf
movsl
adc
or
sub
xor
pop
push
lret
jae
jecxz
stos
movsb
jno
ret
push
inc
iret
jmp
add
out
jbe
mov
faddl
mov
cmp
jmp
ja
pop
repz
and
add
adcb
scas
dec
xor
lret
fnstsw
mov
mov
fldenv
jecxz
fdivrs
dec
mull
popa
lds
push
push
mov
dec
xchg
mov
repz
stos
mov
out
imul
pop
and
push
sbb
in
mov
xor
out
push
scas
jmp
push
dec
fdivrl
cmp
dec
xchg
fisubrs
jmp
add
fistl
mov
popa
js
lret
mov
fnsave
nop
add
push
xchg
aad
cmp
cltd
stos
fisubl
inc
cwtl
adc
cmpsb
sahf
and
rsqrtps
arpl
dec
adc
cmpsb
adc
mov
sub
in
push
out
mov
or
fnstsw
sahf
jbe
ds
mov
pushf
aam
fisttpl
fldenv
pop
pushf
daa
dec
push
sub
dec
jge
loope
pop
xor
lea
sti
push
movsl
push
std
out
xchg
aaa
jae
jp
xchg
pop
lret
jbe
idivb
and
jnp
jnp
jmp
movhps
push
icebp
jbe
push
or
xchg
add
lea
xor
xor
fcom
outsb
add
pushf
addr16
or
imul
xor
movsb
icebp
into
in
dec
lods
xchg
call
pop
cmp
mov
sbb
pop
jae
stos
mov
jno
mov
iret
cmp
pop
adc
inc
xor
cmpsl
rdpmc
push
stos
cmp
jl
pop
test
imul
arpl
mov
fwait
adc
jmp
shll
stos
mov
in
jmp
xor
xchg
push
inc
mov
adc
aad
mov
mov
jmp
mov
sahf
add
lahf
lret
je
and
sbb
sub
in
add
adc
adc
push
jne
push
xchg
pop
mov
add
std
sub
xor
imul
sub
mov
jo
stos
call
shll
cwtl
sti
xchg
movsb
into
outsl
dec
mov
jecxz
jge
jmp
into
mov
add
sub
lods
shlb
loopne
cli
push
adc
push
stos
daa
cs
rolb
jmp
mov
fdivr
push
mov
cltd
sarl
cmp
xor
frstor
jae
jb
pop
stos
sbb
loop
push
mov
pop
xchg
roll
push
mov
xchg
mov
inc
mov
shll
stos
xor
addr16
ljmp
mov
sarb
mov
adc
xor
mov
imull
jge
cmp
jmp
and
inc
inc
inc
xor
jp
in
stc
dec
call
stc
sti
cmp
mov
movhps
lret
mov
shlb
sbb
add
rcll
xchg
push
xchg
mov
cmc
out
and
sti
jae
in
jp
sub
inc
movsb
mov
xor
nop
xor
xlat
dec
loop
inc
fsubrl
mov
or
mov
jp
jmp
andb
jns
ss
pop
sbb
movsl
enter
jmp
and
jnp
dec
inc
jmp
lea
stos
jo
divb
xchg
shll
lcall
cmpsl
lahf
mov
popf
enter
cwtl
loop
jle
xor
mov
stos
cmovs
sub
cld
cmp
adc
sbb
aaa
push
or
sub
push
cmp
pop
dec
gs
cmp
pop
test
inc
insl
push
jge
xor
jg
xor
xor
cmp
xlat
stos
aad
pop
das
cmpsl
mov
and
cmc
leave
dec
push
daa
sahf
ficompl
or
js
xor
jns
fistpl
fldcw
cld
loop
push
mov
add
ds
stos
and
mov
imul
aad
xor
ret
jle
sarl
jmp
movb
push
loopne
jecxz
mov
lahf
imul
mov
cmp
cmp
and
addr16
cltd
ret
rcr
shll
adc
pop
jnp
add
out
pop
mov
ret
les
jmp
in
push
lahf
pop
mov
cmp
lret
push
xchg
stos
lret
enter
or
mov
mov
jmp
ds
mov
mov
addr16
mov
jmp
test
jns
dec
xchg
mov
mov
sub
push
pop
arpl
mov
and
je
xchg
aaa
insl
push
mov
aam
xor
add
mov
and
dec
bound
jne
fucomi
and
out
adc
fstps
push
aas
jo
and
jmp
rcrl
push
fsubs
sbb
mov
cmp
sub
mov
pop
cld
fcmovnu
xchg
and
ja
pop
shll
movswl
sub
loope
jae
push
add
mov
enter
xor
and
lds
push
stos
adc
cmc
sbb
lock
jmp
rcl
pusha
in
lret
adc
daa
daa
in
testl
stos
pop
jns
xchg
mov
sub
and
jnp
movsl
stos
pop
mov
push
add
push
push
jecxz
lahf
jecxz
aaa
or
pop
dec
movsl
icebp
aam
mov
xor
xor
jg
btr
inc
repnz
sbb
pop
jbe
and
testb
es
test
pop
pop
lods
mov
push
insb
jns
test
adc
cmp
cmp
in
push
int
leave
mov
das
lds
idivb
inc
mov
es
lret
enter
insb
adc
stos
add
cli
fsubs
push
sub
or
in
or
test
jno
insb
pop
jbe
lods
test
cltd
imul
inc
or
popa
inc
cwtl
jmp
dec
inc
push
push
cwtl
adc
dec
clc
dec
loope
ficomps
aad
jmp
pop
pop
push
ja
ljmp
dec
popa
jl
xor
lret
jnp
mov
cltd
push
in
sub
xchg
adc
push
in
xor
idivl
mov
push
jmp
insl
popf
dec
sub
dec
lret
mov
inc
lret
mov
addr16
mov
push
leave
jl
sub
xchg
stos
imul
nop
dec
xor
inc
enter
and
mov
or
push
stc
or
or
cmp
push
xchg
imul
jp
inc
rcrl
shr
xor
add
push
pop
dec
jecxz
mov
sbb
inc
push
repz
xchg
out
pop
cmpsb
stos
icebp
pusha
xor
in
xchg
jae
xchg
imul
jg
lcall
pop
xchg
inc
push
shl
lods
mov
xor
dec
repnz
mov
push
outsb
lret
jbe
mov
call
movsl
dec
lcall
out
repz
and
sbb
aam
fistps
lret
popf
ret
sti
dec
dec
pop
add
sub
adc
jmp
fidivrs
andl
and
push
lods
dec
lods
movsb
lods
jge
aad
mov
roll
push
mov
loope
es
jmp
das
repnz
mov
mov
dec
dec
jge
xor
aad
inc
ret
repz
outsl
mov
cmp
daa
adc
in
cmpsl
es
mov
outsl
stos
mov
movsl
jmp
in
jae
add
jecxz
push
lret
out
movsl
mov
push
xchg
arpl
inc
and
mov
push
ss
push
je
xchg
xor
cli
push
xchg
stos
inc
dec
dec
dec
repz
jmp
push
adc
add
ljmp
push
mov
xor
scas
cwtl
pop
mov
mov
ljmp
cmp
cmp
sub
icebp
mov
jle
lock
mov
mov
arpl
push
lret
pop
mov
mov
sub
fs
sub
jmp
call
pop
push
aam
int3
lods
out
or
test
cmc
sub
xchg
xorl
push
pushf
stos
adc
popf
cmpsl
pop
stos
enter
mov
incl
mov
adc
aam
mov
or
in
mov
cmp
std
cwtl
xor
js
or
pop
outsl
test
fildl
push
les
mov
nop
xchg
xor
icebp
push
sbb
mov
leave
hlt
xchg
push
lret
inc
xor
rolb
mov
cmp
orb
mov
hlt
and
xchg
mov
arpl
sub
jge
shlb
in
mov
sbb
jnp
jbe
je
or
lret
push
push
inc
sbb
or
inc
or
push
jne
outsb
push
stos
pop
push
cltd
repnz
imul
adc
dec
xchg
movsl
or
xorl
dec
lahf
add
shr
push
fdivrl
pop
stos
shr
pop
mov
scas
in
or
icebp
pop
lods
sbb
jecxz
mov
adc
leave
inc
stos
call
xchg
and
mov
adc
loopne
stos
repz
lea
jge
lds
imul
pop
jg
and
pushf
stos
cmp
pmulhw
lcall
xchg
roll
enter
fmuls
sbb
dec
sbb
mov
dec
xchg
sahf
out
push
jge
cmpsb
add
xchg
repnz
add
inc
sarb
jnp
xor
pop
int
mov
out
push
sub
xor
jo
jmp
lret
fsubl
imul
insb
mov
pop
jmp
xor
les
mov
sbb
jbe
call
daa
mov
stos
push
push
and
xor
fwait
icebp
jmp
push
stos
push
push
inc
lret
push
imul
push
loop
insb
shll
sub
insl
and
sub
stos
add
scas
inc
sub
cld
in
fstpl
pop
aaa
stos
popf
jns
adc
lea
jecxz
loopne
test
mov
int
jmp
add
mov
das
pop
push
mov
pushl
pop
xor
shll
dec
rcrb
lcall
add
inc
jmp
int3
xchg
stos
jle
jle
sbb
fsubr
jge
int3
in
pushf
and
imul
add
stos
inc
aad
xchg
cmp
sub
mov
push
movsl
jnp
jb
cmpsl
js
xor
or
stos
loopne
mov
jnp
xor
fsubr
stos
pop
lock
jl
sbb
test
mov
fstpl
and
xchg
xchg
push
jge
out
lods
xlat
les
fmul
aam
stos
inc
xor
mov
jmp
or
or
jle
sub
add
je
lods
lea
mov
sahf
or
adc
or
dec
cmp
out
mov
je
fucomp
mov
adc
xchg
jmpw
mov
lret
and
stc
cmp
pop
dec
xor
imul
mov
fildll
fnstenv
push
dec
xchg
lods
cmp
xchg
ja
adc
xchg
push
push
push
xchg
and
inc
bound
xchg
xor
lret
lcall
cli
arpl
test
rclb
shlb
sub
cmp
ret
pop
fistps
cmp
out
pop
hlt
fst
xchg
or
int
inc
leave
xor
ficoml
xlat
lret
inc
scas
stos
iret
jnp
loop
mov
jmp
inc
lret
pop
mov
add
fiadds
xchg
mov
mov
push
push
sub
dec
pop
cmp
mov
dec
xlat
mov
and
pop
stos
cmpsl
and
jmp
hlt
dec
xor
cli
das
int3
sub
in
jno
sub
movsb
push
stos
clc
dec
out
push
xchg
je
fisttps
xor
clc
jnp
jecxz
cmp
loop
pop
sbb
mov
sub
and
aas
lret
stos
hlt
inc
cmp
insb
sub
jmp
scas
cmp
mov
adcl
lods
mov
jmp
repnz
adcl
cld
stos
dec
and
mov
and
push
push
push
rcr
fwait
push
xor
pop
mov
mov
and
lahf
jmp
mov
add
scas
je
pop
xor
adc
jnp
xor
push
repz
test
and
mov
and
xorl
aas
insb
lock
pushf
insb
mov
jmp
push
mov
shlb
jmp
xor
inc
mov
out
xor
xchg
test
mov
push
push
int
mov
cmp
jne
adc
push
cld
popf
stos
dec
xchg
lods
insl
stc
or
or
cld
dec
xchg
mov
ficompl
andb
movsl
decl
cmpsl
cmp
push
fistps
jne
sbb
or
das
jmp
mov
fsubr
jp
push
xor
sbb
clc
mov
shlb
clc
mov
xlat
pop
dec
js
ret
inc
inc
push
enter
xchg
test
push
cltd
shll
mov
push
pop
clc
mov
jae
xor
test
push
stos
test
jg
jae
in
mov
jno
xchg
test
jbe
xchg
sub
ja
lods
and
pop
aad
jge
add
jns
fildl
es
in
pop
mov
cwtl
add
fnsave
jg
or
jp
lahf
popa
lods
test
push
movsbl
xor
lods
mov
stos
imul
mov
dec
jmp
rcrl
data16
stos
lahf
push
sub
xor
jmp
leave
insl
aam
jb
jne
daa
add
and
repz
loope
das
int3
push
jg
shlb
aas
dec
mov
xchg
cmp
fisttpll
cmpsl
xor
test
test
jb
mov
sub
in
lret
pop
clc
scas
ficompl
lods
fistpll
daa
xor
sub
mov
add
xor
out
xor
push
loopne
dec
lods
push
std
or
ljmp
arpl
repnz
out
jnp
mov
lock
fdivrs
xor
mov
in
and
mov
stos
test
xchg
jae
fsub
mov
xor
fucomip
push
dec
iret
sub
in
pop
cmpsb
rcrl
xor
lahf
lock
lahf
pop
jge
dec
add
lds
push
and
push
scas
xlat
mov
add
jns
xorl
sub
pop
pop
mov
cmp
sbb
testl
jmp
scas
ljmp
cmp
repnz
adc
ficomps
ret
push
xchg
insl
pop
pusha
cmp
or
subl
pop
mov
clc
or
and
dec
jb
int
outsb
imul
cltd
cmp
hlt
push
call
lea
ljmp
jecxz
enter
xor
shlb
lret
cmc
cli
xchg
mov
dec
push
xchg
pop
jl
push
std
dec
jecxz
push
lods
frstor
xor
mov
adc
in
pop
push
sub
stos
xchg
or
xchg
arpl
jge
pop
push
push
fwait
loopne
mov
ret
call
shll
mov
pop
push
negb
inc
mov
int3
into
lret
leave
stos
jnp
sbb
rclb
sub
xor
aaa
stc
push
pop
cld
aas
push
cwtl
lcall
test
sbb
inc
jae
xorb
sub
mov
cmp
cmc
das
xor
aad
outsb
mov
je,pn
adc
xchg
jo
stos
repnz
push
lcall
sub
inc
mov
adc
aad
mov
mov
sbb
mov
mov
xor
int3
xlat
xchg
dec
push
xchg
das
xor
mov
or
push
jg
push
scas
push
inc
test
enter
js
push
out
aad
pop
adc
mov
jnp
cmc
add
test
shrb
add
fsubrp
aas
push
pusha
out
gs
push
and
xor
xchg
out
movsb
stos
jmp
and
push
xchg
rclb
adc
fisttpl
sub
ds
lea
in
sbb
pop
jl
shll
pop
mov
aaa
call
jg
gs
mov
add
js
pop
jmp
inc
jle
imul
jb
pop
push
mov
mov
mov
push
ljmp
nop
adc
adcl
push
dec
jl
fistpll
inc
sbb
sub
cmp
fnstenv
imul
in
sahf
loope
daa
out
popa
or
push
mov
adc
adc
push
or
cmp
std
push
jns
icebp
sub
dec
push
adc
mov
jg
movsl
mov
sub
nop
pop
xor
adc
adc
mov
and
in
mov
xor
je
rcrl
loop
test
xlat
in
sahf
mov
dec
and
into
cmp
arpl
and
clc
imul
cmp
mov
pop
lods
aam
aad
push
mov
insb
movsb
inc
cltd
bound
jecxz
xor
std
push
and
and
fists
decl
das
xor
fcomip
adc
mov
mov
inc
js
andb
jmp
mov
add
in
mov
add
xchg
lea
xchg
sahf
xchg
adc
fsts
xor
mov
xor
pop
imulb
sbb
lcall
es
jb
int3
ret
pop
movsb
test
add
pop
lretw
lods
pop
push
dec
push
jnp
xchg
xchg
pop
pop
sbb
nop
jmp
pop
in
out
cmc
mov
stos
shrb
mov
in
cmp
out
into
xor
adc
fistpll
pop
cmpsb
jecxz
push
xor
mov
mov
int3
popf
insl
repz
lcall
push
mov
and
mov
jns
pop
fs
sub
cmc
nop
pop
jp
dec
out
push
mov
jmp
pop
inc
push
cwtl
cmp
mov
icebp
xchg
daa
mov
xchg
shl
mov
mov
cwtl
shll
pop
mov
fildll
lret
adc
loope
add
data16
xchg
ficoms
cmp
nop
adcb
or
pop
sub
and
sbb
push
and
out
xchg
sar
subb
mov
mov
fidivrs
mov
xchg
push
cmc
arpl
xor
mov
and
jmp
mov
jno
nop
shlb
push
xchg
add
loopne
sbbl
cmp
or
jns
mov
cmc
in
xor
push
jae
adc
or
dec
sbb
loopne
sahf
addl
mov
icebp
bound
in
shrd
out
mov
iret
shll
iret
jg
arpl
mov
sub
pop
dec
movsb
mov
icebp
sbb
inc
mov
aad
xlat
xchg
xchg
scas
inc
loope
jmp
scas
imul
and
loop
xlat
call
and
sbbb
mov
imul
insl
popf
jmp
notb
xor
adc
inc
mov
push
xchg
lret
sub
mov
inc
in
inc
mov
mov
xor
orb
out
jmp
adc
into
call
xchg
fprem1
aas
sub
push
stos
mov
pop
cld
jb
push
scas
fildl
xor
pop
push
stos
adc
mov
or
push
shl
cli
stos
jns
fidivs
sbb
fisubs
pop
sbb
jg
push
pop
dec
mov
fs
dec
stc
ret
xor
aam
xor
add
dec
aas
add
push
push
sbb
or
out
add
or
jl
adc
test
xchg
insb
or
adc
dec
mov
stos
cmpsb
movsl
test
out
aad
push
ret
lret
cwtl
push
adc
shlb
inc
hlt
pushf
push
cmpsl
jecxz
push
lods
push
imul
arpl
dec
xor
or
add
stos
sub
xor
jmp
or
and
push
ror
scas
sub
psubd
xchg
jb
repz
jno
mov
push
push
fs
popa
or
xchg
add
mov
ret
and
jle
push
fwait
lahf
ja
pusha
lods
sti
out
xor
pushf
xchg
cmp
add
xor
fs
jl
jnp
stos
stc
push
imull
lret
sbb
lret
inc
shlb
jge
push
ret
adc
pop
jmp
xor
cmc
pop
push
mov
test
cmp
mov
aad
cld
xchg
sub
pushf
xor
jmp
and
pop
sbb
gs
inc
repnz
repz
mov
bound
jp
popa
jnp
mov
and
add
mov
insl
or
xchg
inc
flds
jae
test
push
in
push
xor
adc
add
adc
lahf
xor
into
es
dec
jns
adc
xlat
stos
test
dec
cmp
sub
fistps
cmp
ret
and
pop
je
aaa
inc
pop
jnp
or
leave
pop
sbb
sahf
test
push
rol
and
adc
lcall
ret
mov
mov
jge
shlb
test
lahf
adc
pop
jmp
in
ret
and
mov
dec
mov
aas
inc
cmpsb
les
repnz
and
fdivrs
popf
les
xor
testb
stos
mov
or
jo
clc
div
popa
out
xlat
sbb
rcrl
jo
cmp
fs
adc
stos
fwait
and
cli
or
push
shl
add
or
fbld
xor
popl
cmp
jb
insb
nop
push
cmp
pop
pop
mov
sub
mov
mov
cwtl
int3
and
adc
jae
and
loope
and
imul
call
add
add
add
add
push
push
push
call
mov
cmp
jne
push
call
push
push
push
push
push
push
push
call
mov
cmp
jne
call
mov
call
call
mov
xor
add
jmp
call
call
nop
call
pushl
push
push
call
mov
call
call
pushl
call
lea
push
call
push
call
call
push
call
push
call
call
call
push
push
push
push
push
push
push
call
mov
leave
call
pushl
call
jmp
leave
ret
add
aaa
rol
inc
call
xchg
nop
sbb
shl
lock
xchg
or
add
mov
shr
mov
xor
addl
subl
addl
xor
negl
sub
addl
roll
add
dec
jne
leave
ret
rorb
jb
.byte
