sbb
add
adc
fcoms
popf
js
ss
or
sub
out
lret
lds
addr16
mov
push
std
sbb
push
xor
out
push
inc
ss
fsubrl
out
cld
je
and
data16
jmp
mov
pop
xchg
inc
xor
inc
adc
stos
je
cltd
fcoms
ds
pop
loop
clc
loop
fldenv
jge
mov
mov
pushf
test
jp
addl
mov
push
adc
movsb
ja
mov
sbb
cmpsl
push
sub
inc
scas
fsubl
ret
in
loopne
stos
push
cmc
leave
xchg
pop
or
jge
outsl
mov
pop
mov
xor
mov
push
adc
ret
out
outsb
enter
jp
xchg
subl
xchg
sub
inc
pop
add
jg
popa
inc
dec
js
pop
sub
and
adc
jnp
lods
mov
dec
adc
xor
jg
or
push
loopne
js
lods
xor
mov
mov
movsl
movsb
jge
scas
xchg
test
fsubrs
xor
xchg
dec
mov
pushf
jmp
mov
inc
test
iret
mov
jns
mov
jp
ficomps
and
cmp
fdivs
shlb
icebp
aad
sti
add
mov
subl
stos
je
int
loope
adc
into
int
sub
jp
xlat
int3
shlb
data16
or
xor
loopne
inc
js
and
bound
dec
and
fcomps
xchg
in
ss
adc
xor
ss
fmull
lcall
daa
xchg
test
mov
or
mov
hlt
loope
ja
loope
insb
push
push
inc
aaa
dec
push
or
sub
lea
lret
or
fs
jae
lock
outsl
cmpsl
push
cmp
ret
imul
mov
cmpsb
mov
mov
nop
cmp
adc
out
push
data16
test
sub
mov
jbe
mov
xchg
mov
arpl
outsl
dec
adc
incl
push
daa
adc
in
xor
sbb
daa
mov
iret
lds
daa
jl
jp
push
add
js
subb
mov
sbb
xchg
fcomps
pop
push
push
or
lods
dec
insb
sbb
dec
movsb
push
jbe
lods
mov
inc
mov
adc
mov
pop
hlt
add
mov
push
je
push
gs
add
jmp
test
push
sub
mov
fmull
rolb
xchg
mov
repz
mov
test
xor
std
inc
sbb
cmpsb
movsb
add
jmp
test
xor
or
or
push
mov
shr
add
and
leave
in
cmp
xchg
adc
lret
pop
jnp
int
out
cmp
cmp
mov
ljmp
xchg
in
lods
cmp
ffree
sbb
mov
sbb
adc
inc
mov
cltd
push
sbb
aam
pop
mov
mov
pop
pushf
mov
and
imul
jmp
or
movsl
int
mov
aaa
loopne
cwtl
mov
push
mov
mov
sti
jle
jnp
cltd
lcall
add
lds
mov
pop
jp
int
jno
add
fisttpl
je
jbe
pop
mov
loop
fsubp
mov
push
aaa
inc
fisttpll
push
push
jg
out
std
aas
ret
in
into
mov
clc
dec
cli
mov
ds
sub
aam
orl
add
xor
into
push
movsl
add
push
and
xor
sub
xchg
cs
inc
js
push
out
push
nop
test
sub
xor
jo
dec
out
adc
lret
es
adc
mov
pop
dec
and
jmp
in
test
xor
push
addl
inc
shrl
sub
inc
adc
jp
ret
lahf
das
clc
fcmovnu
ret
mov
jl
xchg
bound
add
fcoml
xchg
sub
test
cmp
outsb
dec
jns
push
enter
xor
jecxz
inc
lahf
push
cmp
ret
mov
leave
or
sub
add
and
mov
call
sbb
lock
imul
xlat
push
cmp
mov
push
mov
loopne
nop
cmp
inc
mov
mov
add
inc
push
xor
xchg
aas
mov
lds
jo
cmc
mov
lcall
sti
out
popa
pop
arpl
mov
lea
adc
mov
add
movsl
ret
push
mov
mov
outsb
mov
sub
xchg
adc
cwtl
xchg
push
push
or
pusha
jb
mov
ja
cmpsl
test
pop
jne
push
mov
movsl
stos
cwtl
add
xchg
push
inc
dec
nop
call
jbe
xor
mov
fisubs
aas
hlt
push
iret
mov
lret
cmc
sarb
lods
repnz
or
fwait
xor
hlt
out
les
fisubrs
xchg
repnz
push
xchg
pop
jecxz
push
movb
int3
sbb
mov
or
push
jecxz
data16
push
inc
sub
mov
movsb
xchg
sub
sub
test
int
testb
or
stc
xchg
push
lock
shll
xchg
mov
test
push
and
jmp
fwait
sbb
xor
sub
dec
out
sub
sti
inc
es
fstpl
push
push
xchg
xchg
or
negl
push
movsl
call
into
mov
mov
cmp
mov
jnp
cmp
xchg
pop
cmp
or
push
inc
hlt
jo
arpl
inc
mov
cmpsl
mov
inc
loope
pushf
or
jg
mov
ljmp
or
popa
mov
test
sbb
shll
jl
inc
sbb
je
outsl
push
inc
push
pop
test
stos
adc
and
add
inc
cltd
in
mov
sbb
rcr
xchg
ljmp
daa
int3
and
jo
mov
std
jg
divl
push
sub
and
lods
cmp
test
fisttpl
jno
roll
lahf
push
mov
ror
pop
nop
fisubrl
movsl
or
jnp
daa
enter
maxps
scas
loopne
fcoms
push
fcompl
out
inc
sarl
andb
jge
sbb
jns
jmp
in
or
cltd
ja
ret
push
inc
adc
sbb
sbb
xchg
push
pushf
inc
jmp
fisubl
cmp
sbb
repz
lret
adc
dec
das
xchg
push
mov
clc
jo
movsb
xchg
scas
lock
inc
mov
push
loopne
xchg
and
sbb
aam
ljmp
sbb
xor
pop
mov
outsb
jecxz
or
outsl
adc
loop
pop
or
insl
xchg
xchg
shr
mov
pop
sub
mov
hlt
sbb
dec
mov
mov
divb
pushf
pop
jne
in
sbbb
pop
scas
adc
daa
add
aam
pop
jecxz
push
and
mov
decb
jl
cmp
les
out
xor
aad
popa
push
sarb
push
aas
dec
jle
xchg
out
in
aas
call
rcrb
daa
faddl
inc
divb
psubusw
mov
xchg
mov
mov
jbe
and
cwtl
stc
cmpl
xor
inc
adc
addr16
push
scas
fdivl
mov
and
mov
sub
fldl
das
mov
dec
sbb
jnp
js
cmpsb
std
fwait
scas
or
sub
cmp
mov
xor
mov
cmpsl
jnp
inc
cwtl
loopne
out
cmpsl
imul
shrb
or
test
sub
xor
mov
mov
fistpll
ficompl
hlt
rcrb
and
xchg
rolb
pop
ds
arpl
into
outsb
adc
lret
mov
ficomps
data16
faddl
pusha
ret
inc
test
imul
aas
lea
push
fcompl
mov
push
xrelease
push
xor
inc
cli
les
mov
pop
mov
call
inc
lock
add
mov
dec
xchg
jmp
js
testb
pusha
lret
mov
inc
sub
sub
xlat
jae
out
mov
fcoms
xchg
stos
add
das
push
sbb
js
pop
movsb
dec
pop
xor
jle
dec
mov
sub
push
pop
add
cmp
and
inc
inc
mov
lock
popa
out
fildl
cmp
cmp
pop
dec
or
mov
add
mov
lock
jg
sbb
leave
push
push
xor
popa
out
adc
cltd
adc
add
push
or
jo
mov
xor
and
outsl
xor
lahf
mov
iret
rclb
mov
jnp
stc
and
fstpt
jns
pop
mov
cmpb
inc
lahf
push
cli
orb
xlat
mov
sub
ret
stos
and
cli
das
test
pop
push
jns
adc
pop
push
outsb
subb
popa
sbb
lods
pop
xchg
hlt
frstor
lret
sub
lods
dec
cmp
mov
imul
xor
xor
dec
in
sti
bnd
push
icebp
or
pop
mov
mov
mov
mov
testl
pop
lods
push
inc
lods
pop
or
sbb
push
repnz
xlat
mov
jnp
add
jbe
pop
sbb
or
add
fisubrl
ret
insb
testb
xchg
dec
mov
int3
popa
ret
push
imul
jmp
mov
mov
aad
pop
xor
test
aas
push
cmpsb
popa
push
pop
push
jmp
mov
inc
adc
add
dec
stc
cwtl
mov
mov
cmp
adc
jecxz
stos
push
sub
pop
repnz
push
mov
scas
int3
mov
outsl
mov
leave
mov
inc
sbbb
mov
push
sbb
imul
inc
xlat
or
xor
in
adc
je
push
outsl
mov
xchg
ret
dec
cmpsl
push
lds
and
test
cmpsb
and
inc
and
and
dec
lods
sti
mov
mov
pop
fisttpl
ss
loop
xchg
cmp
jmp
mov
or
and
jns
xor
mov
fwait
xor
insb
popa
scas
cmp
mov
or
adc
dec
les
fisttps
pop
fldl
push
mov
inc
js
cld
cmp
sbb
xchg
loop
out
in
jnp
dec
repnz
fsub
sbb
push
imul
xchg
outsl
xchg
fsubs
repz
inc
paddsb
adc
xor
stos
pop
xor
and
in
push
roll
out
gs
fs
dec
lcall
push
call
orl
sahf
add
lea
and
loope
inc
cwtl
test
xchg
mov
xor
add
add
jmp
roll
xor
xchg
jne
or
adc
clc
pushf
imul
lret
cmpsl
mov
pop
cmpsb
imul
and
subl
and
loop
pop
cmp
dec
jmp
aaa
push
xor
adc
inc
mov
aam
addr16
ds
mov
sub
xchg
imul
pop
xor
js
inc
jns
movsl
test
mov
pop
add
pop
sahf
scas
aas
mov
daa
pusha
jno
outsl
testl
xor
aaa
bound
mov
daa
xor
std
push
test
enter
scas
dec
jmp
push
pusha
lods
mov
lock
fdivrs
sbb
je
adc
es
cld
add
cwtl
mov
xchg
xlat
ss
scas
xchg
das
sbb
push
loop
xor
sub
insl
xorb
test
lds
adc
std
push
cmp
mov
sbb
pop
sti
in
push
cmpsl
stos
mov
movsb
sbb
ljmp
in
je
sub
cli
lea
sub
dec
mov
mov
dec
push
dec
scas
or
jge
sbb
shlb
mov
jp
adc
push
inc
or
inc
mov
mov
mov
test
add
dec
fcmove
paddusw
jnp,pn
call
sub
pop
mov
pop
or
dec
mov
stos
xor
cmp
pop
fsubs
or
xor
sub
push
call
jae
pop
jbe
or
jo
arpl
out
sub
dec
pop
xchg
popf
les
imul
cld
cmpsb
push
jecxz
jb
mov
mov
dec
cmp
add
andl
ret
in
into
gs
sbbl
mov
call
insb
pop
cmpsb
fistps
es
sbb
lock
sarb
cmp
add
or
mov
pop
ficomps
mov
call
mov
mov
push
inc
arpl
cli
pop
ljmp
fs
or
ret
lock
cwtl
sbb
pop
adc
cltd
in
mov
fwait
jmp
pusha
add
jae
inc
popa
lret
or
sbb
xchg
and
cs
imul
fadds
or
addr16
gs
arpl
ficomps
rcl
or
and
mov
add
or
ss
cmc
jge
js
mov
mov
pop
test
sub
or
add
ret
push
rorl
das
ja
rclb
jno
cs
mov
mov
test
mov
mov
fs
lahf
push
xchg
mov
ret
inc
rcl
roll
lods
jbe
das
inc
xchg
daa
std
inc
pop
ss
dec
hlt
stos
into
and
xchg
or
jnp
push
xor
sub
dec
mov
cmpsb
adc
pop
fcoml
mov
lahf
add
negl
add
bound
push
loope
xor
subl
imul
pop
xor
mov
push
leave
xor
in
ret
pop
call
rcrb
mov
xor
out
mov
xchg
ja
mov
sub
cli
out
jb
xchg
jb
mov
outsb
dec
mov
adc
inc
mov
fidivl
xor
cmpsl
inc
and
mov
int3
mov
jbe
arpl
fiadds
fildll
cwtl
ror
jbe
inc
mov
jle
mov
add
add
xor
mov
int3
push
addr16
scas
aaa
paddsb
into
int
dec
lock
jecxz
push
mov
andb
fistpll
push
xchg
fsubs
xchg
cmp
add
mov
mov
and
mov
out
push
sub
inc
mov
dec
pop
xor
pop
ret
lret
mov
adc
xchg
sub
dec
sub
add
cmc
out
js
dec
dec
inc
dec
pop
inc
dec
lea
xchg
inc
push
xchg
pop
cmpsl
js
test
pop
dec
pop
push
push
repz
sbb
sbb
pop
outsb
fwait
sub
xchg
sub
shrl
pop
sub
pop
jb
cld
jle
into
mov
jecxz
arpl
mov
sbb
inc
insb
mov
clc
test
xchg
mov
xchg
or
adc
pop
sbb
das
stos
call
cld
push
add
in
subps
inc
adc
sbb
cmp
hlt
shrl
sti
mov
adcb
lods
sub
adc
fucomp
mov
cmp
sub
cmpsb
bound
sbb
rorl
inc
cmp
xlat
mov
sbb
mov
sbb
cwtl
pop
bound
mov
movsl
pop
pop
or
js
subl
pop
mov
imul
es
test
icebp
add
xchg
out
iret
push
or
xchg
faddl
push
test
insb
iret
and
xor
lahf
lahf
add
cmp
aaa
cmp
jg
arpl
fs
mov
mov
pop
movl
nop
or
loop
jl
dec
sahf
mov
sub
pop
sti
fcoms
mov
dec
mov
cs
sbb
hlt
popa
jge
add
jb
std
cmp
into
jp
mov
push
lds
mov
cmp
xlat
incb
sar
push
mov
scas
sbb
test
arpl
pop
mov
pop
adc
std
cltd
loope
daa
popa
mov
add
adc
fs
jbe
call
ret
lret
sbb
sub
and
inc
fisttpl
lret
jle
shrl
mov
jle
and
and
push
ljmp
xchg
jbe
jae
mov
adc
sub
mov
sti
cltd
movb
or
cli
jnp
in
outsl
cs
jns
test
ja
inc
and
cmp
sti
sub
aas
mov
sbb
movsb
sbb
xchg
xor
and
mov
pop
insb
fisubrs
dec
adc
insl
js
adc
mov
mov
pop
pop
mov
adc
inc
es
insb
jb
jl
xor
lods
cmp
or
mov
js
sub
repz
gs
shll
add
pop
inc
mov
jb
sbb
mov
push
sbb
pop
out
adc
arpl
adc
stc
mov
add
or
fsubrs
paddsb
loopne
sub
sbb
test
push
sbb
jns
addl
rorb
pop
fucomp
popf
or
pop
mov
push
dec
hlt
mov
aaa
orl
pop
mov
test
add
jne
adc
sahf
shlb
js
inc
xor
mov
lcall
shl
pop
sub
mov
xor
iret
jp
sbb
out
and
pop
cmp
je
iret
in
repnz
inc
push
jae
cmp
push
xchg
fdivrs
std
push
xchg
xor
scas
std
fildll
sbb
add
scas
xchg
fdivl
xor
int
pop
test
xchg
push
mov
je
aam
stos
ss
jo
cmp
mov
rolw
imulb
cmp
lcall
fisubs
aam
lahf
mov
lods
xor
cmpsb
lea
or
xor
push
filds
fsubrs
xchg
lods
shlb
repnz
repnz
sub
insb
mul
pop
jbe
in
or
ss
inc
mov
bound
addb
mov
sti
and
ds
movsl
movb
pop
xchg
lods
mov
push
fsubl
sbb
loope
xchg
pop
add
ficoms
jle
mov
testb
add
pop
xchg
sub
movsb
cmp
je
insl
cld
pop
dec
imul
imul
sbb
inc
enter
nop
shll
sbb
ret
gs
jmp
mov
and
shrl
sub
jge
mov
in
jbe
arpl
inc
cmpsl
loopne
push
in
jp
test
push
mov
inc
mov
and
sub
and
fs
and
xchg
cmp
das
out
jp
bound
pop
or
push
push
mov
in
jge
push
shrb
mov
icebp
in
mov
movsl
dec
and
mov
sub
incl
xchg
push
mov
xchg
test
ljmp
pusha
adc
mov
cmp
or
shll
jbe
mov
aas
mov
aas
sub
insb
cmc
ret
lods
jo
pop
dec
bound
or
fdivs
and
add
xchg
rcrl
mov
lret
sbb
cmp
or
cwtl
push
loopne
sbb
dec
enter
in
movsb
and
jne
and
push
movsb
jne
jne
std
fstl
ds
lahf
movsb
lods
push
pop
adc
dec
fldt
adc
cmp
mov
mov
sub
jo
xlat
outsl
data16
mov
movzbl
sbb
sbb
and
fistps
icebp
cli
inc
xor
mov
and
bound
sub
fucom
ljmp
xchg
js
arpl
dec
mov
sub
notl
xchg
dec
jmp
pop
add
or
jp
imul
sub
mov
orb
jecxz
sahf
xor
lea
jecxz
or
xchg
fldt
and
adc
dec
lds
pop
sbb
lret
in
mov
and
mov
daa
cmpl
xchg
xchg
icebp
aam
bnd
in
mov
bound
lock
xchg
cmp
sbb
jecxz
dec
push
xlat
out
sbb
mov
xor
push
mov
daa
in
pop
mov
add
popf
data16
inc
repnz
hlt
sub
cmc
xor
in
dec
inc
sub
fimull
jo
sbb
and
cltd
xor
into
int
push
negl
adc
push
sbb
xlat
mov
cld
fistps
js
jl
mov
mov
pop
inc
mov
int
loop
lahf
jle
xor
ficoml
or
repnz
icebp
imul
and
cmp
adc
mov
jmp
in
cmp
aas
or
cmp
add
xchg
pushf
cmp
mov
mov
jmp
pop
int
insb
ds
inc
imul
dec
cmp
push
and
push
mov
mov
xor
in
rcr
cmp
add
movsb
mov
pushf
mov
push
pop
fadds
sti
sbb
push
icebp
dec
test
daa
push
out
xchg
adc
inc
mov
lds
add
xor
dec
pop
cmpsb
mov
add
sbb
arpl
mov
or
mov
sub
adc
mov
xor
pop
or
xlat
adc
stos
ss
add
push
or
mov
adc
shlb
fldl
cmpsl
or
adc
enter
xchg
cmp
faddp
pop
in
insl
xor
sahf
mov
push
push
pop
decl
out
lea
mov
xchg
dec
jno
jae
mul
cmc
std
pop
cmc
js
lahf
pop
add
pop
jle
mov
adc
mov
mov
push
movsb
mov
leave
lds
dec
adcb
out
push
pop
aaa
adc
mov
and
outsb
leave
shll
adc
mov
sbb
add
mov
sub
push
sub
divb
sahf
pop
jp
push
adc
pop
jecxz
call
lcall
mov
sahf
sahf
jns
jmp
dec
rclb
push
cld
jp
std
xchg
push
jbe
sub
jno
stos
aas
outsl
pop
jo
leave
scas
pop
and
nop
and
fwait
mov
xchg
out
xchg
comiss
sub
sub
pushf
fdivrs
or
xchg
jmp
sbb
mov
push
fwait
jmp
sbb
out
dec
dec
jae
aaa
cwtl
stc
xlat
dec
inc
jg
lcall
stos
mov
add
adc
adc
sbb
sub
scas
fsubrl
sub
stc
or
or
or
out
lahf
sub
lret
xchg
xchg
dec
dec
imul
inc
pslld
xchg
testl
inc
mov
andb
rolb
bound
clc
and
mov
outsb
ret
loope
pop
adc
test
insb
out
mov
lods
aad
mov
sbb
scas
mov
imul
into
dec
cld
daa
popf
pop
or
pop
sahf
fucomi
mov
ror
rcll
aaa
cmpsb
or
xor
jo
or
xlat
inc
test
decb
cmp
cld
or
jmp
xchg
jo
push
cmp
fsubrs
xor
pusha
cmp
cli
jo
int3
pop
fmuls
and
mov
sti
mov
xchg
ret
shrb
gs
scas
mov
sub
pop
push
push
push
fld
or
pusha
imul
or
movsb
pop
pop
sub
jl
xchg
jne
xchg
xchg
jmp
lea
lcall
lea
je
adc
fists
jle
mov
push
int
ficomps
inc
out
fnstenv
int
push
sbb
test
xchg
mov
stmxcsr
ja
rclb
xor
dec
mov
pop
sbb
test
xchg
mov
cmp
roll
and
inc
cmp
and
in
std
out
add
mov
jp
cs
cmc
push
adc
inc
cltd
movsb
xor
pushf
pushf
iret
rorl
hlt
inc
fwait
inc
mov
enter
mov
add
push
dec
xchg
push
adc
pusha
loop
sbb
add
outsb
cmpsl
mov
inc
mov
mov
and
and
sbb
mov
lret
sub
mov
or
std
shlb
pop
xor
outsl
cmp
sbb
jns
mov
negb
push
push
mov
cmp
test
jmp
xchg
sahf
clc
push
fidivs
sbb
mov
mov
clc
xlat
test
outsl
shrb
testl
push
enter
or
jb
add
cmp
xchg
jmp
cs
jne
xchg
jo
rclb
push
rcrb
mov
jl
adc
jae
mov
outsw
sarb
sbb
popf
xor
loopne
nop
sbb
xchg
push
and
mov
negl
ljmp
out
mov
mov
jg
push
cltd
xchg
cmovp
cli
fiaddl
jno
jmp
and
fstl
sbb
jbe
sahf
arpl
out
and
sub
arpl
nop
jge
mov
xsavec
add
rolb
mov
fwait
sti
popa
fdivr
sbb
mov
or
sbb
data16
dec
mov
bound
xor
fidivrl
rorl
xor
aaa
into
sbb
into
sbb
in
cmp
adc
ret
imul
les
jl
dec
xor
cmp
ja
clc
mov
add
mov
xchg
aad
bnd
push
data16
sub
or
cmp
ret
repnz
mov
aaa
andb
loopne
xchg
mov
cld
cmc
lods
jo
mov
mov
sub
aad
jecxz
loope
repnz
insl
in
or
aaa
shl
mov
test
lock
shlb
or
insl
adc
loop
test
enter
inc
out
cs
jae
aas
sub
in
mov
icebp
cmpsb
jp
aam
pop
mov
push
mov
dec
push
xorb
dec
fs
shrl
js
fdivrs
xchg
gs
std
rcl
mov
scas
nop
ja
jp
insb
push
mov
xlat
das
mov
out
int
mov
or
jl
mov
loope
mov
into
ret
cs
adc
setle
repz
popf
in
out
mov
jne
cmp
fcmovu
imul
xchg
dec
in
repnz
ficoms
stos
fldenv
and
out
aad
mov
rorl
mov
inc
push
jbe
mov
jl
movb
cmp
shrl
mov
imul
add
fwait
js
into
pop
fisttps
lcall
mov
push
ret
mov
pusha
jmp
mov
call
xchg
mov
cmp
adc
pop
jl
clc
and
dec
cs
inc
jb
repz
xchg
shld
xchg
jnp
mov
push
lods
inc
xchg
jp
sbb
inc
jmp
mov
js
and
lret
xchg
pop
and
mov
mov
andb
out
in
push
xchg
rcrl
sti
sbb
out
mov
pmuludq
les
add
push
xlat
sahf
lock
adc
push
hlt
lahf
sbb
lret
push
mov
xor
test
push
pop
or
inc
clc
and
jmp
sbb
and
imul
loopne
outsb
fisttps
push
rorb
bound
loop
pop
adcb
cs
sarb
sbb
divb
inc
aas
aas
out
fisttps
dec
push
fisttpl
jnp
call
loopne
nop
jno
mov
add
stos
aas
test
jg
sub
ret
sub
dec
imul
out
lea
loop
clc
jecxz
adc
lea
shll
fcmovb
mov
roll
outsl
inc
and
push
xchg
int3
out
adc
lods
insl
mov
in
mov
out
xor
mov
mov
dec
cltd
fs
rcll
in
mov
jb
xchg
xor
int
lock
sti
pop
es
pop
push
loop
imul
sarl
mov
cmp
call
adc
sbb
jnp
test
lds
fisubs
mov
jnp
repnz
test
mov
add
in
xorl
add
mov
jb
shr
mov
sub
fs
in
hlt
add
sbb
sub
sub
fisttpl
lds
imul
insb
mov
ljmp
inc
imul
fwait
subb
pop
lods
outsl
mov
loope
sbb
push
stos
movaps
iret
gs
hlt
lret
mov
mov
mov
cmp
mov
pop
inc
inc
popf
xor
lahf
pop
pusha
mov
dec
aam
cltd
in
mov
ljmp
jle
imul
jp
pop
cltd
sub
lods
fcmovb
jbe
add
fidivrl
pop
jne
add
jnp
xchg
mov
mov
pop
or
negl
mov
subb
jb
cmp
adc
dec
imul
cmpsl
or
xchg
jns
cmp
cmpsb
insl
mov
add
dec
xor
inc
fsubrl
out
jo
mov
fcmovnb
clc
hlt
push
test
cmp
adc
cmp
cld
cmp
pop
jmp
int3
xor
call
or
dec
addr16
mov
mov
cs
ret
xor
cmpsb
mov
inc
imul
cmp
xchg
das
add
pop
sar
fimuls
dec
pushf
dec
sbb
cltd
movsl
xor
rclb
add
mov
sub
rolb
jae
into
cltd
popf
jnp
sub
popf
and
inc
jl
ds
pop
add
xlat
pop
das
inc
arpl
push
data16
leave
xor
icebp
sahf
ficomps
cmp
hlt
orb
lret
mov
stos
mov
jle
sub
dec
jns
call
les
int3
addb
rolb
fimull
push
mov
test
push
mov
push
in
loopne
jno
jae
pop
sbb
cmp
sbb
push
sahf
sbb
ret
mov
cmp
xorl
lods
push
push
cmpsl
jo
mov
pusha
mov
xor
xchg
cwtl
jo
aas
lahf
lods
movsb
add
sar
or
iret
lret
adc
dec
loopne
and
ret
inc
insw
fnsave
sbb
int3
or
and
push
lds
iret
jle
clc
sub
icebp
adc
scas
mov
repnz
sbb
mov
jp
outsl
xor
mov
inc
out
popf
in
inc
inc
and
mov
inc
pop
lds
inc
jmp
push
pop
hlt
enter
incl
adc
ljmp
inc
xor
dec
push
xchg
jmp
xchg
sahf
adc
sbb
xchg
push
sahf
sub
cmp
fiaddl
xlat
mov
add
test
loop
clc
cmp
int3
mov
int
adc
pushf
or
lcall
cmp
cltd
clc
or
in
sub
adc
xchg
add
xor
imul
inc
push
dec
cmpsl
rorb
ss
cmp
xor
cmc
push
push
arpl
outsl
sarl
loopne
sub
lock
inc
lods
in
rcll
lock
cmp
push
lds
mov
dec
cltd
cmp
and
sbb
inc
adc
loopne
pop
out
pop
ficompl
xchg
xlat
movsb
xor
fs
loopne
pop
xchg
addr16
sbb
cmpsb
fldt
test
daa
xchg
fcompl
jnp
inc
add
sbb
sub
pop
cmp
es
std
adc
and
xchg
sub
ficoms
push
mov
pop
mov
or
loop
sbb
lahf
in
incb
cli
fistl
aas
fsubrs
into
inc
and
dec
or
jnp
xchg
cmc
les
cmp
hlt
cs
push
adc
pop
cmp
out
aaa
lret
inc
sub
sub
mov
movhps
adc
and
ret
rclb
fs
push
sub
mov
out
lods
inc
mov
pop
sub
rorl
or
jecxz
arpl
stc
imul
jp
fdivrl
shlb
xor
cmc
and
js
test
leave
push
push
adc
loope
adc
in
jne
out
aam
decl
in
in
jmp
xchg
add
jns
ljmp
jne
mov
adc
dec
out
jbe
mov
xor
adc
mov
sub
stos
mov
push
popa
int3
mov
popa
testl
test
mov
and
stos
cmpsl
out
jnp
out
scas
test
mov
cli
jmp
cwtl
rorb
mov
daa
into
xor
std
addr16
aam
mov
xchg
adc
loopne
push
aaa
stc
pop
outsl
dec
std
inc
or
pop
aas
in
pslld
bound
cmp
cmp
pop
adc
cltd
loope
test
aas
or
jmp
push
outsb
lahf
sub
mov
insb
pushf
mov
outsb
mov
or
fs
icebp
mov
aam
jne
mov
movsl
divl
iret
push
sub
mov
stos
pop
test
push
inc
xor
add
jns
and
or
jl
ret
push
into
sbb
shl
mov
rorb
push
sbb
sar
test
push
xor
and
lret
mov
cmp
pop
data16
inc
cmp
adc
jnp
rcr
inc
xchg
inc
jle
test
movsl
inc
and
cmp
stc
jae
test
data16
out
dec
inc
je
es
xchg
fadds
test
daa
xchg
xchg
sub
jecxz
lock
ret
pop
xchg
and
mov
xlat
dec
test
ljmp
ljmp
inc
sub
ljmp
stos
push
outsl
mov
lret
mov
mov
gs
stc
and
bound
idiv
out
cmpsb
push
dec
and
mov
stos
and
mov
ljmp
pop
xor
aaa
jmp
jo
pop
adc
mov
and
dec
scas
inc
xchg
jl
xchg
jo
pop
sbb
and
out
adc
push
cmp
aas
add
adc
xchg
mov
sahf
sti
cltd
jne
sbb
fildl
fwait
insb
fildl
test
in
mov
ds
sbb
lcall
add
pop
push
inc
mov
movsl
adc
xchg
pushf
sub
dec
pop
les
js
mov
daa
mov
dec
add
xor
cmp
stc
notl
xchg
sub
xchg
and
inc
les
sbb
insb
roll
xchg
fldl
aaa
hlt
dec
mov
das
rcr
shl
sahf
pop
arpl
jmp
mov
sbbl
adc
jle
jle
jnp
bound
orl
xchg
or
jb
push
stc
xchg
sub
dec
sbb
mov
jbe
inc
jb
in
mov
mov
push
inc
push
push
addl
or
mov
test
lret
dec
pop
mov
and
das
xchg
out
daa
jnp
and
sbb
or
pop
mov
inc
adc
aas
lahf
iret
sub
enter
call
lret
cld
sbb
sbb
pop
lods
test
scas
mov
mov
and
jmp
fdiv
std
inc
std
aam
lahf
push
push
mov
outsb
mov
mov
xlat
scas
insl
bound
xchg
dec
and
leave
pop
int
iret
out
sbb
push
push
enter
jl
sub
rolb
jmp
fbld
mov
rcll
push
adc
mov
and
sbb
lret
inc
sbb
jns
decb
sti
jp
outsl
sti
jbe
roll
fsubl
cltd
pop
cli
xchg
mov
mov
ja,pn
jne
enter
sarl
mov
push
dec
dec
pop
aam
int
in
pop
popf
lods
cmp
aam
xor
imulb
add
cmpsl
pop
sub
imul
movsb
or
jo
lahf
call
inc
jo
insb
out
leave
aas
mov
add
mov
sahf
aaa
idivl
test
add
lds
cmp
enter
mov
movsl
push
nop
shlb
and
and
sti
dec
jle
out
roll
movsb
ljmp
inc
xchg
stos
lods
loopne
test
jnp,pn
out
push
test
adc
inc
mov
push
testl
xchg
shr
adc
cmp
and
das
mov
adc
sub
mov
arpl
adcl
mov
jmp
mov
das
loopne
test
push
mov
pushf
xchg
push
xchg
inc
rcrb
pop
cmp
fidivrs
lahf
inc
pop
xchg
hlt
imulb
push
and
clc
pop
jb
cwtl
in
into
test
lcall
jnp
cmp
or
je
cli
cmpsb
mov
dec
insb
mov
idiv
or
aad
inc
xchg
ljmp
or
aaa
cli
pop
inc
pop
ficomps
cmpsb
out
inc
lods
mov
out
out
das
divl
xchg
fildl
fstpl
sbb
addr16
test
test
or
out
adc
ja
xchg
jle
adc
cmp
fwait
hlt
sub
adc
sub
mov
mov
aam
outsl
int3
adc
call
mov
jnp
das
shll
cvtdq2ps
pusha
jae
ss
sub
jne
outsl
sub
cmpsb
aad
out
pop
jnp
stos
jbe
mov
mov
lcall
xchg
insb
push
sbb
pop
and
mov
pop
cmpsl
int3
sbb
jg
and
xchg
inc
stos
xchg
movsb
call
push
lods
fnstenv
movsl
loope
dec
in
int
jb
testl
nop
mov
aam
dec
les
in
dec
dec
xchg
insl
pop
popa
test
add
and
xor
pop
das
out
push
pusha
das
stos
repz
inc
lret
push
xor
mov
xor
or
nop
dec
lcall
outsl
or
mov
xchg
jns
sub
mov
mov
inc
pop
push
shrl
cmp
rcl
inc
fdiv
js
xchg
movb
test
cld
dec
aam
jmp
xchg
add
pop
fldenv
mov
xchg
xchg
mov
sahf
xchg
lods
dec
sbb
push
dec
icebp
lcall
xlat
iret
aas
decb
push
push
jae
psrlw
aam
dec
out
cmp
int
jle
cmp
movl
jno
ss
push
mov
sub
enter
fwait
sub
ja
dec
hlt
jecxz
inc
cmp
pop
xchg
or
stos
imul
call
inc
in
fmuls
into
cltd
sub
push
push
mov
call
mov
movsl
jmp
orl
dec
push
mov
or
aad
pop
ja
stos
jbe
mov
dec
mov
sbb
nop
mov
pop
add
dec
daa
jo
clc
ja
mov
push
loopne
imul
das
dec
push
les
arpl
shlb
or
or
jge
es
mov
loopne
cs
nop
push
pushf
gs
incb
shrl
inc
mov
addb
test
dec
in
clc
cmp
je
rolb
add
lahf
jno
jmp
dec
or
adc
push
fiadds
pop
or
scas
or
mov
sub
or
dec
arpl
mov
popa
inc
arpl
and
loope
pop
std
fs
mov
fcompl
cmp
fisubl
lds
sbb
outsb
mov
stos
dec
inc
inc
jmp
push
fdivrl
mov
lds
fnstenv
lds
fistpll
js
imul
adcl
mov
rorl
push
dec
cmp
push
iret
add
bound
sti
pop
pop
pop
daa
jecxz
push
fistpll
ljmp
mov
shrl
sti
xor
popf
lahf
jecxz
imul
adc
pop
and
ds
xchg
mov
mov
jge
or
jo
xchg
mov
dec
sbb
jns
xor
sbb
xor
xchg
and
sti
mov
out
lods
popf
int3
js
jb
out
add
mov
dec
push
sbb
push
fcomps
mov
mov
cltd
das
sbb
stos
xor
add
sub
jp
fidivrl
lret
scas
repnz
shlb
outsl
add
cmp
test
jge
das
cmpsb
pushf
out
inc
xlat
sbb
push
xchg
push
cmpsb
inc
test
cli
testl
scas
mov
rol
out
cmp
push
std
repnz
ja
jmp
das
hlt
mov
movsb
push
mov
dec
dec
out
inc
jbe
movsb
arpl
popf
iret
dec
cmp
lds
or
mov
imul
pop
imul
sbb
lods
sbb
pop
les
ljmp
dec
das
adc
pop
push
mov
into
rclb
xor
adcl
lods
int
loopne
lds
loop
push
push
mov
mov
out
or
leave
sub
es
aam
cmp
aam
arpl
push
sub
add
mov
aam
adc
sub
cmp
adc
jns
fldcw
sub
dec
sub
fsubl
push
add
test
xchg
in
xor
arpl
and
pop
dec
ss
imul
xchg
loop
xchg
xchg
movsw
and
mov
sub
xchg
icebp
pop
gs
imul
bound
mov
push
and
xchg
cmp
push
mov
push
aad
decb
or
ds
adc
adc
sbb
inc
mov
out
jmp
jns
xor
jo
mov
sbb
sub
cs
mov
jno
popa
aas
sbb
cmc
adc
jo
test
fimuls
mov
cld
in
or
repz
fwait
adc
idivl
mov
and
dec
push
out
cmp
adc
and
scas
dec
mov
pop
lret
ljmp
negb
jb
dec
xlat
shlb
xchg
loope
enter
pop
push
push
and
sbb
cmp
xor
ss
add
push
xor
adc
mov
adc
imul
lret
xor
popa
sbb
leave
push
fisubl
ret
mov
cmp
dec
mov
mov
aam
xchg
lods
aam
lret
add
jl
jbe
or
mov
mov
mov
data16
xchg
and
xchg
mov
faddl
outsb
sbb
shlb
push
dec
jecxz
cmp
sub
mov
inc
mov
cmp
mov
sarb
cmpsb
and
sarb
lods
int3
pop
mov
sti
cmpsl
pop
push
test
push
mov
or
mov
dec
add
add
jge
dec
mov
xchg
sub
pusha
pushf
insb
aaa
data16
insb
cmp
adc
dec
xchg
mov
pushf
mov
lret
aaa
sbb
add
out
pop
cwtl
cmpsb
dec
repz
xchg
cmpsb
popa
cwtl
ret
push
mov
and
shll
push
das
stc
mov
in
mov
mov
int
punpckhwd
stos
mov
mov
insb
inc
int
mov
leave
shl
cmp
cmp
xor
or
mov
mov
xor
inc
iret
in
rcrb
push
jnp
pop
scas
lcall
pop
push
or
mov
push
iret
and
pop
rorl
jp
add
into
enter
push
inc
xor
mov
adc
xor
and
pop
addl
inc
dec
lcall
rcrb
xor
hlt
and
into
adc
push
int3
loopne
sbb
fcom
fcompl
mov
xchg
pop
xor
mov
and
sti
or
or
inc
fcoml
xchg
xchg
sbb
iret
fisubrl
mov
fisubs
add
popf
mov
repnz
fidivl
jecxz
pop
add
xchg
jl
repz
push
movsb
xlat
ds
movb
aad
pop
sbb
das
in
xor
jp
bound
ficoml
push
rolb
sbb
mov
shll
test
aam
jle
cmp
inc
aad
popf
add
adcb
fbstp
addr16
fcompl
mov
out
or
mov
insb
stos
les
mov
fidivrs
sbb
in
xchg
lods
pop
scas
in
cmp
cmp
data16
mov
pop
or
lret
rorl
pop
scas
mov
fsubl
fisttpl
popf
push
adc
xchg
pushf
cmp
mov
mov
pop
or
sti
push
inc
cli
movsl
xchg
adc
loopne
es
les
cmp
rclb
pop
add
mov
mov
mov
sbb
mov
xchg
fimuls
lea
dec
cmp
mov
iret
inc
test
ja
fsubs
jno
mov
dec
mov
add
cltd
pop
iret
add
xchg
lret
cltd
sbb
cmp
and
ljmp
filds
push
fst
data16
fistpll
jmp
inc
sub
mov
shll
inc
push
mov
orb
pop
mov
jg
dec
dec
addr16
jne
cmp
push
dec
imul
sbb
dec
in
sbb
lret
icebp
push
out
cld
bnd
pop
or
cmpsl
cmp
fistps
sub
pop
lahf
clc
and
jne
mov
loop
adc
xchg
add
shlb
pop
fldl
sub
adc
and
adc
mov
adc
pop
push
or
out
repnz
mov
dec
jecxz
scas
in
orl
cld
insb
sbb
scas
pusha
or
lahf
adc
pop
rcl
xchg
xchg
cmp
add
mov
cmp
lods
jmp
pop
mov
xchg
mov
jl
cmp
test
jo
inc
xchg
mov
in
test
sbb
mov
mov
push
repnz
add
mov
js
adc
pop
sbb
lcall
inc
add
cs
and
out
jns
jmp
bound
loopne
sbb
add
xor
mov
and
loopne
pop
test
lret
pop
mov
cmpsb
ret
inc
mov
test
cmp
or
fbld
insb
scas
lods
pop
nop
pop
dec
lea
cmp
in
fisttpll
hlt
xchg
mov
lcall
inc
aas
and
test
fsubr
stc
sbb
shlb
cmpsl
lret
jns
inc
jp
mov
lahf
mov
daa
ds
mov
shlb
xchg
fidivrs
stos
insb
xchg
mov
sbb
stos
mov
ss
dec
xlat
popf
lods
inc
stos
or
pop
add
push
hlt
pop
sbb
add
mov
cwtl
pop
push
ret
mov
push
test
ret
sbb
in
shlb
mov
call
hlt
sbb
mov
daa
repz
push
jp
pop
xchg
mov
xchg
stos
clc
clc
sahf
cmpsb
out
stos
pop
clc
cld
xchg
enter
dec
lds
popa
mov
xchg
or
out
mov
mov
popa
adc
outsb
js
inc
imul
jno
negb
mov
or
dec
aaa
out
and
xchg
push
nop
scas
cmp
jne
xchg
pop
cmpsl
insb
and
push
das
adc
ds
call
cmpb
jmp
inc
add
and
int
rcr
inc
xchg
jge
das
push
or
dec
mov
ljmp
ret
and
lods
adc
ss
mul
dec
aam
pop
xchg
aam
inc
ja
test
jl
jp
sub
push
popa
lock
mov
fwait
ret
pop
inc
out
addr16
out
in
jl
lods
orl
fstl
out
xor
mov
movsb
loope
ss
gs
or
loop
xor
cmc
mov
in
xor
test
int3
sbb
test
inc
inc
pop
push
das
addl
xor
cmp
loop
dec
sub
das
jbe
push
rcrb
cmp
mov
lods
outsl
pop
idiv
dec
mov
imul
jne
es
push
sub
mov
fisttpll
and
lea
pop
push
push
add
mov
les
inc
xchg
jge
in
pop
pop
xchg
mov
out
mov
nop
push
sbb
aam
cmp
push
sub
scas
repz
fdivrs
lcall
and
xrstors
push
aaa
sub
rcrb
insb
adc
mov
jecxz
jo
shr
push
movsl
cmp
sub
jae
or
jbe
mov
sub
cld
adc
jne
cmp
sbb
test
ljmp
into
ljmp
sub
lahf
lds
jb
and
and
pushf
push
and
in
mov
xchg
test
cltd
repz
pop
push
or
das
pop
mov
and
cmp
mov
std
shlb
add
cmpsb
icebp
aas
inc
stos
addb
mov
lret
cmpsl
pop
mov
jp
add
sbb
mov
cmp
shrb
push
cs
push
jl
push
mov
loope
pop
decb
sub
fstl
xor
iret
pop
ljmp
xchg
repnz
dec
mov
sbb
push
xchg
cmpsb
mov
imul
mov
adc
fimuls
mov
fisubrl
test
cmp
pop
xchg
loopne
in
and
test
jmp
mov
sahf
aas
xchg
push
push
aam
rcr
lods
jns
xchg
mov
pop
cmc
pop
cmp
test
cmpsb
rcl
stos
and
lock
lds
fsts
xor
and
cld
push
dec
and
or
ss
dec
mov
jns
push
jbe
leave
in
xor
les
sbb
aad
gs
outsb
into
testl
aaa
adc
fmul
push
mov
rol
test
lret
sahf
idivl
xlat
outsl
shlb
movsb
cmc
dec
sbb
mov
call
dec
stos
xchg
pop
sub
repz
inc
push
cmp
cld
jnp
imul
add
xchg
orl
xchg
scas
test
sub
mov
or
pop
lock
repnz
jmp
addr16
xchg
sbb
mov
inc
mov
sti
mov
ret
jle
cmc
inc
push
ljmp
popa
mov
cwtl
mov
dec
xor
mov
scas
mov
sub
cmp
cli
xor
mov
repz
jnp
sbb
imul
movsb
rolb
mov
sub
iret
iret
jp
dec
icebp
lea
mov
mov
cmpsl
push
inc
jne
daa
pop
inc
in
stos
addb
popf
fstp
mov
jecxz
sbb
sbb
popa
jmp
inc
lock
push
arpl
pop
inc
rclb
add
add
in
js
loop
inc
lcall
pop
or
lret
xor
xor
test
std
sbb
imul
popf
push
sti
pop
sti
mov
add
mov
dec
test
ja
call
inc
and
das
leave
lret
push
inc
cmpsb
push
sub
and
push
aas
dec
out
adc
decl
mov
pop
mov
cmpsb
mov
mov
cltd
out
pusha
mov
mov
dec
pop
iret
jmp
cmc
adc
dec
addr16
xchg
in
push
pop
add
inc
and
out
or
js
jp
and
lcall
lcall
xor
ss
or
out
sub
jo
out
cld
pop
pushf
ljmp
add
fwait
lock
mov
repnz
cmp
adcl
ja
and
ret
das
shr
xchg
lods
movsb
fdivrl
inc
lds
adc
jg
push
movsl
mov
and
movsl
scas
and
fldpi
mov
pop
jp
add
outsl
mov
mov
std
or
lcall
pop
rclb
out
xor
leave
pop
xchg
fstps
xchg
jmp
dec
inc
ficomps
shll
fdivr
push
jp
adc
mov
xchg
imul
sbb
xchg
gs
adc
pop
out
adc
rcrl
aas
sar
iret
dec
in
push
mov
aam
repz
push
xchg
psubsb
repnz
sub
gs
push
int3
movntq
mov
xchg
push
lret
push
jne
in
testl
subl
dec
insb
push
test
cmpsb
les
or
add
sbb
mov
push
and
or
mov
dec
call
and
leave
in
mov
push
lahf
sti
xorl
mov
ret
stos
cmp
sub
lret
leave
js
mov
daa
mov
mov
rcrl
jg
jmp
call
pop
sbb
mov
jno
mov
mov
push
adc
mov
dec
xchg
jne
jge
or
or
pop
adc
lock
les
stc
mov
repz
into
jb
dec
je
stc
push
repz
pop
cmpl
neg
sbb
sbb
cmpb
divb
xor
insb
xchg
cmp
lock
mov
daa
xlat
xchg
mov
jns
push
mov
adc
into
aas
jmp
jle
jo
sub
out
sbb
sub
push
aam
push
cmpsl
repnz
loop
iret
sbb
cs
or
dec
push
jg
xchg
mov
mov
or
add
pushf
sbb
mov
dec
test
and
xchg
popf
or
cmpsb
and
lods
in
les
arpl
mov
xlat
daa
mov
lock
test
mov
test
fs
lcall
cwtl
push
jbe
nop
jnp
xor
sbb
test
lods
adc
mov
mov
jge
shrb
icebp
test
dec
loopne
add
lret
in
out
cmp
xlat
dec
shll
mulb
test
orb
adc
daa
sbb
adc
jno
pop
lret
xor
je
add
inc
xchg
xchg
ja
cmpsl
adc
push
mov
cwtl
inc
jmp
add
adc
dec
enter
jg
cli
lock
push
loope
adc
xchg
fs
popa
jns
lcall
sbb
sbb
dec
clc
fsts
add
dec
jb
aad
add
in
out
xor
push
cmc
sbbl
aad
into
popf
into
fiadds
sub
jl
mov
and
xor
aas
jno
cmp
mov
in
sub
adc
test
push
adc
or
addl
loopne
cmpsl
stc
fnstsw
jns
imull
lret
inc
fisubrl
sub
and
bound
sub
leave
sahf
xlat
pop
ret
jmp
push
repz
stos
jno
mov
pop
cli
cmpsb
sti
mov
popa
mov
add
and
sub
mov
test
jno
push
xchg
sub
push
push
stos
add
lds
nop
mov
inc
inc
lret
fsubr
loope
add
xor
gs
lods
cmp
into
mov
in
in
cmp
sti
fsubs
dec
mov
imul
scas
addr16
ret
jae
push
lret
jecxz
fs
test
jno
xchg
stc
and
movb
int3
cmp
imul
mov
out
xchg
add
ljmp
adc
jg
inc
or
lea
dec
cli
xchg
xlat
fldt
fmull
outsb
push
jb
int
dec
stos
incb
mov
pusha
dec
sub
inc
cmp
lods
dec
and
cmpsl
ds
jns
lcall
fcomip
mov
je
ja
cmp
cs
icebp
ljmp
das
cs
pop
mov
lods
cmpb
mov
xlat
push
adc
pop
jns
xor
std
lahf
push
repz
lock
cmpsb
mov
lcall
arpl
xor
sbb
leave
pop
cmp
mov
daa
inc
fnstsw
daa
shrl
jbe
dec
loopne
fimull
mov
mov
jb
out
and
mov
xchg
xor
aaa
add
sbb
adc
cltd
into
fimull
and
adc
dec
ret
push
lds
push
dec
into
bound
loope
outsl
mov
in
mov
push
or
push
scas
lods
xor
push
lock
dec
mov
add
stc
mov
lea
add
mov
pushf
in
ret
pop
in
pop
leave
jmp
hlt
in
xchg
icebp
jecxz
in
cmp
std
sarl
dec
mov
jmp
rcr
sub
leave
movsl
stos
pop
enter
roll
adc
xchg
loope
lds
loopne
icebp
mov
mov
sahf
lea
scas
sub
popf
stc
add
cmpsb
mov
ljmp
pop
dec
pushf
lds
sub
push
cwtl
adc
mov
aas
out
and
out
mov
data16
pusha
and
or
push
ss
cltd
mov
nop
cmp
pop
cmpsl
mov
popa
insl
mov
pusha
ret
mov
int
ret
dec
in
mov
scas
push
lock
std
xchg
lret
test
aas
mov
xchg
xchg
dec
pop
sahf
daa
js
push
pop
mov
mov
jge
cld
out
test
sahf
and
mov
sub
clc
xor
jb
nop
lahf
pop
ljmp
mov
jns
add
mov
cmpb
je
shll
xchg
cmp
sub
push
leave
pop
enter
mov
adc
adc
pop
xchg
fiadds
cmp
xchg
dec
inc
sub
jl
xor
fadds
jo
orl
mov
inc
adc
mov
cmpsl
cmp
fs
sbb
xchg
test
xchg
lcall
mov
ret
push
inc
sbb
out
cmp
sub
xor
addr16
loope
repz
dec
insl
jb
push
cmpsb
out
std
adc
add
ss
jae
or
mov
cli
inc
cmp
xor
xchg
mov
and
and
movsb
rep
mov
fstpl
lds
pop
pop
push
xor
pop
push
sarl
fs
movsl
outsl
fistpl
xchg
dec
add
push
ret
sti
cmpsb
cmc
push
jl
adc
adc
std
inc
xchg
cmpsl
shrb
shl
jo
stos
movsb
add
stc
nop
or
dec
das
outsl
push
popl
sbbl
popf
mov
jae
and
xchg
int
inc
dec
mov
jno
cmc
push
mov
icebp
jnp
dec
test
and
notb
or
lea
addb
and
filds
ficomps
pop
jae
sbb
push
into
fisubl
or
add
lcall
jns
or
pop
push
sbb
jmp
fwait
inc
lods
shll
xor
aas
adc
lock
movsb
jbe
lret
loop
cmp
lret
sti
sub
jne
mov
nop
and
sbb
adc
xor
inc
ljmp
mull
cmpsb
shll
sbb
sub
sahf
push
lods
jmp
fidivs
adc
stc
inc
jbe
lds
pushf
mov
aas
insl
jge
pop
or
push
int3
sub
mov
adc
mov
or
pushf
inc
cmpsb
push
pop
loope
in
loop
lods
xor
out
hlt
andl
sub
mov
dec
xchg
in
adc
ljmp
jmp
inc
aam
aad
adcl
dec
xor
dec
and
pop
divb
add
les
bound
push
stc
adc
jp
push
aad
push
inc
iret
in
inc
sub
ficomps
add
adc
push
mov
pop
loope
xchg
adc
aaa
icebp
stc
movsl
rcr
mov
xlat
lret
lock
iret
or
aam
inc
xchg
es
icebp
inc
xchg
mov
cmp
std
xchg
das
aaa
mov
mov
xlat
mov
mov
fidivl
and
xchg
pop
jge
or
inc
push
pusha
shll
inc
xacquire
or
xlat
jg
int3
lret
cmp
bound
pushf
call
sub
pop
gs
std
sub
loopne
cmp
lahf
push
pop
fwait
pushf
or
dec
mov
fcmovu
out
sub
pop
add
xor
push
out
dec
pop
stos
cld
add
and
inc
jg
pop
std
sub
push
shl
or
sub
jg
or
add
xor
repz
cmp
in
stos
pop
mov
and
and
cld
test
fidivl
lods
push
mov
dec
inc
jne
dec
ss
sbb
outsl
call
jecxz
add
add
add
rcrl
adc
xor
rcl
cmp
sbb
shlb
ffree
sub
mov
fmull
lea
add
sbb
out
ds
mov
mov
pop
pop
aas
lods
addl
pop
in
loope
jb
add
cwtl
cmpsl
loopne
add
fcomps
mov
std
mov
or
sub
insb
sbb
adc
lds
xchg
jne
loopne
insb
rcrl
mov
xor
loop
push
cld
popfw
aas
stos
mov
stc
push
dec
lret
xor
add
jge
enter
push
and
repnz
jns
imul
xchg
mov
nop
cld
jno
mov
sub
fldt
and
lret
adc
and
or
xor
add
dec
test
push
jle
jge
adc
mov
es
fmuls
mov
sbb
addl
adc
jmp
in
cwtl
pop
mov
imul
out
mov
lcall
jns
jno
adcb
push
cmp
sub
ficomps
mov
adc
push
or
mov
movsl
bound
xlat
or
adc
mull
add
mov
cmp
jb
outsl
xor
xor
cmp
in
adc
loopne
and
pop
dec
inc
movsb
mov
adc
and
fiadds
mov
mov
aam
aas
pop
pop
add
sbb
imul
rclb
push
or
hlt
int
sub
inc
and
dec
cmp
mov
add
adc
xchg
hlt
push
mov
jp
adc
daa
inc
xchg
insl
mov
test
das
int
loop
ljmp
fsubrs
enter
in
cltd
sbb
rcrl
js
and
and
outsb
jmp
pusha
ret
mov
cmp
fldt
mov
add
push
mov
push
sbb
in
inc
mov
mov
bound
into
fs
adc
mov
dec
xor
aaa
mov
movsl
xchg
in
inc
jecxz
out
scas
xchg
mov
lea
repz
test
push
lret
das
stos
out
dec
shrb
cli
dec
dec
xchg
subb
xor
sbb
loop
arpl
stos
jo
sub
or
inc
aad
popa
mov
pop
push
xor
fisubrs
sub
lock
lret
dec
mov
pop
test
and
add
gs
pop
or
xchg
icebp
xor
or
loop
and
add
pop
xchg
idivb
inc
lcall
lret
movsl
loop
lds
or
xchg
jp
and
or
int
fsubrl
faddl
jg
adc
ds
dec
insb
and
dec
enter
inc
cli
mov
sub
cmp
mov
inc
insl
inc
xchg
inc
adc
jae
ds
pop
repz
pop
fidivs
adc
and
out
jmp
mov
push
pusha
jle
adc
fisubrs
outsl
or
mov
call
bound
repnz
push
out
lahf
cmp
aaa
outsb
push
jp
pop
or
and
test
shl
cs
cli
sbb
clc
sbb
jno
out
push
cmp
fisttps
cs
dec
inc
hlt
cmp
lea
jns
cmp
or
sbb
mov
loop
xchg
sbb
mov
dec
sarl
or
fcmovne
mov
mov
out
mov
aam
or
cli
add
sbb
sbb
int
out
cs
xor
sub
ficomps
test
add
nop
inc
and
cmpsb
pop
das
popl
fmuls
jbe
test
jmp
movsl
mov
mov
add
stc
outsb
xor
inc
push
sbb
rcll
cmp
fcompl
fsubr
or
xchg
jnp
xchg
mov
sbb
icebp
outsl
pop
inc
add
sub
dec
pop
in
aam
scas
test
fldt
or
xor
pop
jmp
sub
leave
xchg
imul
sub
dec
mov
xchg
jle
xchg
mov
push
jnp
xchg
je
flds
and
sti
lret
popaw
cli
or
pop
sbb
pop
mov
loop
inc
cmp
sahf
fidivl
mov
jb
add
mov
jp
fdivl
xor
lret
mov
or
movsl
into
mov
leave
or
mov
cmpsl
popf
cli
arpl
push
fld
xor
push
mov
test
rorb
out
test
mov
lods
rorl
jb
aad
mov
sub
sbb
or
gs
leave
lods
and
dec
mov
mov
dec
dec
jae
push
mov
or
outsl
and
cmpsb
ja
inc
aam
sub
iret
pop
popa
pop
jg
adc
loope
loop
add
dec
mov
cmp
enter
push
xchg
jbe
jmp
stos
inc
lret
xor
ret
ds
push
cmp
rorb
pop
cmp
push
lret
hlt
or
mov
xlat
mov
insb
cmpl
lods
je
outsl
loopne
mov
mov
xchg
cmp
or
push
outsl
rcl
push
or
jo
ss
pop
dec
jb
shlb
mov
imul
movsl
sub
and
loopne
in
ljmp
psrld
push
insb
lcall
adc
jecxz
jns
inc
push
adc
mov
test
xorb
push
inc
mov
lret
dec
pop
dec
jb
fdivs
imul
adc
mov
inc
imul
std
inc
inc
and
push
loopne
xchg
movsb
sub
repnz
fistpll
dec
rcll
adc
loop
and
jns
push
lods
xchg
mov
inc
xchg
push
mov
stos
xlat
mov
mov
pop
pop
xchg
orl
gs
dec
push
adc
xor
mov
fcoms
ret
insb
add
arpl
icebp
jge
loop
fistpll
aam
mov
or
ds
aaa
mov
punpckhwd
jmp
inc
adc
and
icebp
lds
jbe
mov
out
hlt
add
gs
sbb
jle
inc
outsb
loope
cmpl
lods
ss
ljmp
pop
mov
xor
xchg
imul
jl
hlt
insl
insb
mov
and
and
jp
jp
ret
dec
jbe
in
bound
inc
fadds
adc
push
insl
out
push
dec
adc
push
mov
vcvttss2si
out
es
mov
add
push
jne
mov
cmp
pop
add
lods
fildl
mov
mov
adc
les
addr16
andb
or
stc
push
sahf
int3
xor
lods
add
test
out
jp
xchg
movsl
int
and
pop
cmp
pop
leave
cmp
pop
movsl
stc
sti
or
iret
cli
jl
stos
inc
xchg
ret
lods
jg
sqrtps
inc
sbb
jecxz
pop
xor
jg
xor
inc
cltd
imul
sbb
xchg
dec
jbe
jnp
push
aad
mov
push
stos
ds
mov
rcrl
dec
jne
mov
jno
mov
or
mov
outsb
cld
lods
data16
fcomp
jnp
xchg
sbb
divl
shll
jmp
push
jmp
scas
jl
push
addl
pop
mov
int3
aaa
sbb
daa
inc
sbb
add
nop
add
xchg
out
inc
mov
es
cmp
cmpsb
nop
lcall
ror
stos
clc
or
or
rcrl
jmp
mov
popf
xorl
and
add
pop
bound
push
out
pop
loope
inc
gs
mov
cmc
cmpsl
dec
jp
outsb
in
shlb
push
xor
enter
das
push
jmp
sbb
aaa
imul
pop
cmp
inc
jmp
lds
sub
ljmp
pop
and
mov
cmp
xor
addr16
xor
pop
lods
jno
lcall
mov
adc
daa
imul
lahf
pop
lret
sub
inc
fstpt
adc
or
xchg
push
dec
dec
and
fwait
int
rorl
fsubrs
and
xor
jne
jno
xchg
mov
inc
popa
xor
xor
fiadds
mov
cmc
imulb
xor
aad
mov
into
jns
jmp
xor
sub
out
add
xorb
xchg
sub
pop
ficoml
fidivl
ljmp
adc
gs
rcl
push
cmpsb
in
lret
sbb
adc
std
dec
insl
lods
in
icebp
xchg
mov
cmc
fstl
and
hlt
xchg
or
iret
xor
fnsave
fcompl
cli
insb
inc
jae
shll
int
pop
pop
test
aam
sub
sub
out
lods
xchg
inc
or
push
mov
cld
loope
push
dec
in
shlb
jg
pop
push
das
out
add
xchg
cmp
lods
repnz
test
or
das
cwtl
mov
lahf
out
outsb
jg
lahf
mov
inc
push
in
mov
jnp
lret
xchg
push
fcmovu
movsb
fisttps
cmp
popl
leave
in
push
add
and
repz
push
int3
mov
mov
mov
lret
in
or
dec
pop
mov
jecxz
mov
and
jae
cmp
out
sub
lea
dec
ss
mov
pop
loopne
dec
adc
int3
push
cmc
sbb
in
aas
std
sbb
movb
pop
movsb
xchg
aaa
es
xor
std
and
mov
jl
sub
xor
sbb
jge
mov
add
and
ret
fcoml
mov
mov
pop
mov
jmp
fiaddl
fildl
dec
out
loop
pop
pop
lret
or
push
jl
and
fistl
cmp
repnz
sbb
mov
adc
mov
ret
stos
inc
pop
test
fdivs
sbb
scas
addr16
adc
cmp
das
inc
cld
adc
jle
loopne
test
out
das
mov
rcl
inc
in
rclb
fists
pop
lcall
into
dec
jge
dec
scas
sbb
out
bound
pop
and
fs
adc
push
fdivrp
js
sbb
mov
mov
sub
mov
push
mov
xorb
jne
int3
and
mov
clc
dec
mov
iret
enter
inc
push
jmp
in
push
mov
xchg
sub
mov
decl
and
jg
fwait
xchg
mov
jnp
aam
sti
jge
dec
xchg
xor
loop
jae
push
fcoml
lods
sbb
add
les
mov
adc
divps
mov
xchg
cmp
sub
fwait
pusha
int
add
fcomp
lcall
sbbb
bound
push
xchg
mov
stos
jnp
mov
std
pop
mov
int3
jge
into
jmp
adc
and
jo
mov
lret
outsb
sbb
ret
les
xor
lds
add
in
hlt
sbb
out
push
std
cmp
push
cli
xchg
cmp
push
xor
sbb
or
das
bound
pop
int3
mov
cmp
out
aaa
sbb
sahf
and
test
mov
xor
pop
out
or
push
popa
xor
bound
lods
movsl
cmp
xor
aas
mov
pop
ret
fsubrp
je
shl
cwtl
lret
cs
pusha
movb
xchg
test
dec
sbb
out
les
jecxz
cmp
push
cmp
dec
push
rcl
sub
roll
xchg
xor
dec
push
les
mov
or
mov
loop
push
ja
and
inc
cmp
adcl
cwtl
dec
push
rolb
loope
or
adc
sbb
jle
sub
stos
bound
shlb
mov
mov
dec
in
insb
dec
jl
and
and
sbb
mov
scas
in
push
cli
jecxz
stos
movl
repz
faddp
jns
loop
mov
adc
fdivr
mov
or
mov
loope
mov
dec
bound
push
mov
mov
jecxz
jns
or
je
lcall
xchg
cwtl
dec
or
push
mov
imul
insb
outsl
inc
daa
pop
out
mov
inc
insl
das
cltd
dec
add
or
cld
fwait
inc
mov
mov
sbb
sub
xchg
mov
fisttpl
mov
dec
cmp
insb
aam
mov
aam
test
pop
ret
out
sahf
pop
xor
mov
int
das
pop
jbe
bound
insl
ret
lods
push
cltd
inc
sbb
mov
scas
mov
int
mov
mov
dec
insl
das
and
lods
icebp
hlt
xchg
sbb
dec
daa
enter
push
push
aad
daa
insb
test
mov
cmp
push
sbb
dec
or
cwtl
cmp
popf
aad
aas
pop
mov
xorl
jecxz
pop
in
test
test
rol
mov
jl
jmp
inc
test
out
in
xor
push
incl
cwtl
mov
loop
push
inc
fisttps
xlat
and
mov
es
clc
cmpl
icebp
and
xchg
out
lret
lahf
stos
ss
lret
adc
pop
cmp
fdivs
aaa
mov
lcall
fnstcw
pop
mov
inc
dec
leave
sub
lods
dec
lret
jns
sub
aaa
mov
push
pop
mov
xchg
inc
push
xor
aam
icebp
mov
jno
testl
not
jo
sbb
mov
lods
jl
push
jl
fcmovnu
movsb
xchg
pop
push
imul
or
pop
iret
xchg
add
lds
fadds
xor
jp
jmp
inc
aam
mov
movsb
bound
dec
inc
cs
sbb
cld
clc
add
sbb
jp
sahf
in
pop
pop
std
dec
sbb
rcrl
testb
inc
add
xchg
and
mov
loope
test
inc
sbb
push
xchg
add
movsl
fdivrs
call
mov
ret
xchg
sub
push
movsb
jg
aad
pop
pop
jns
repz
aas
and
push
ret
mov
andl
lods
loopne
dec
jle
fdivs
adc
popf
push
dec
fdivp
mov
sub
fs
roll
or
lods
out
pcmpeqw
cmpsl
adc
inc
jnp
jo
orl
imul
sub
xchg
jecxz
loopne
aam
fisubl
or
lods
addr16
in
lods
roll
scas
repnz
dec
pop
rclb
jp
ret
fs
sub
pop
fsubl
arpl
jae
loop
pop
cmp
and
mov
fs
in
jge
jo
mov
add
outsb
aaa
jmp
mov
lret
iret
mov
dec
dec
dec
rclb
and
jnp
repnz
mov
frstor
adc
push
push
iret
sub
cltd
lret
or
or
xchg
aad
inc
rolb
sub
jno
shufps
fwait
mov
mov
xor
adc
loope
push
mov
cmp
mov
add
push
aaa
int3
xchg
jb
or
add
xchg
lcall
insl
add
xchg
adc
xchg
fildl
mov
out
sub
out
leave
xchg
daa
sahf
sbb
xor
insb
push
inc
ljmp
test
mov
cmc
cmp
daa
pop
sub
es
mov
jns
or
ss
and
sub
je
cmpsl
js
push
or
adc
fxch
hlt
sub
es
test
jl
jg
mov
xchg
sbb
es
repnz
dec
pushf
push
push
nop
pop
int3
push
xchg
popf
ret
dec
sub
imull
scas
push
lock
js
jp
clc
xchg
inc
mov
popl
rorl
into
popf
in
mov
cmp
inc
mov
fldcw
fdiv
add
out
cmp
mov
popf
jg
inc
xor
mov
arpl
shll
int
lods
mov
popa
xchg
xor
pop
mov
xor
xchg
or
mov
leave
movsb
jg
and
loope
dec
rcr
cmp
sbb
andb
sub
push
mov
frstor
sub
cmp
mov
rorl
lret
call
daa
and
jp
pop
test
bound
popf
out
lods
lea
and
jecxz
sti
lret
ja
ret
pop
sbb
xchg
out
aad
fcmovb
out
je
inc
daa
push
in
or
xchg
jle
xchg
mov
adc
dec
and
lods
xchg
xchg
mov
add
vpaddusb
push
int
xchg
ljmp
dec
sbb
in
out
mov
xchg
add
repnz
outsb
fisubs
fldcw
mov
push
mov
leave
dec
js
test
fwait
insl
bswap
sbb
xor
popf
push
sbb
mov
or
xor
xor
add
lcall
push
mov
mov
dec
push
inc
sbb
adc
cmc
sar
loopne
jnp
iret
int3
loopne
mov
hlt
jmp
mov
or
inc
xor
jle
loopne
xchg
jle
scas
add
sbb
adc
lahf
sub
add
mov
cmpsb
push
mov
mov
dec
inc
dec
imul
mov
adc
bound
cltd
jg
sbb
sub
push
pop
mov
xchg
pop
jns
fcoml
inc
int
and
inc
xor
jp
iret
ds
lcall
xor
or
mov
jne
xchg
jno
minps
mov
pop
add
sub
push
mov
mov
ret
pop
cmp
xchg
push
lds
add
gs
testl
push
loopne
add
jecxz
mov
add
int
test
mov
aam
xchg
ljmp
mov
dec
cmp
sbb
adc
push
data16
cmc
movsb
fistpl
xor
clc
pop
fnstsw
test
fwait
fcomp
fstpt
movsl
push
mov
in
pop
mov
shll
icebp
enter
jl
sub
dec
cmpsb
lods
push
stos
xchg
into
mov
add
lea
or
pop
inc
pop
add
cld
and
in
mov
pop
shlb
adc
or
mov
cli
inc
pop
sbb
movsb
sbb
sub
cmp
lods
in
pop
and
inc
ljmp
ret
push
addl
xor
mov
mov
push
jecxz
add
mov
push
in
addl
or
mov
pop
mov
jle
push
lods
in
lea
iret
mov
xchg
xor
pop
int
mov
mov
aam
lods
sti
xchg
jp
pop
imul
in
fcoml
fdiv
cmpsb
mov
mul
cld
sub
or
mov
ret
jno
scas
add
cmp
je
pop
hlt
add
stc
adc
lods
pop
jnp
pop
sbbb
cmp
das
cmc
mov
outsl
pop
mov
or
add
mov
clc
test
adc
adc
imul
mov
test
leave
rcrl
sub
lds
push
rcrl
popf
mov
sbbl
jge
mov
sub
push
inc
lods
mov
and
shll
repz
call
shll
push
jl
fdiv
pop
stos
mov
adc
into
jl
jle
mov
cmp
rcll
xchg
mov
and
stc
in
mov
aad
fidivrs
fdivl
out
mov
outsb
in
ljmp
cwtl
push
and
or
mov
xor
loope
jle
or
fldcw
es
stos
and
add
int3
mov
ficomps
bound
mov
fnstcw
mov
imul
mov
push
movsl
jg
mov
invd
jge
xchg
or
cld
adc
push
jecxz
add
push
sub
cmp
adcl
fldl
inc
sbb
dec
mov
cwtl
sub
iret
mov
dec
stos
pusha
xchg
sbb
xor
dec
sahf
sub
push
push
mov
jne
movmskps
jo
popa
sub
sarl
sbb
ret
jp
daa
in
jb
mov
mov
mov
sbb
inc
cmpsb
je
push
add
mov
or
cmpsb
adc
pop
adc
js
cmpsb
mov
leave
mov
nop
sbb
dec
push
dec
cmp
sarl
repnz
adc
je
xchg
xchg
pop
jb
push
into
in
test
add
xchg
or
and
mov
cli
jo
out
push
insl
aas
pop
xor
inc
subl
add
sub
in
call
arpl
xchg
inc
xchg
loop
sbb
leave
push
pop
mov
mov
aad
shrl
fnstcw
pop
sub
dec
pop
cmp
int
into
cmpsb
cmpsb
stos
les
mov
jle
sub
aaa
xchg
enter
dec
movsl
adc
sub
pop
xchg
aam
jno
inc
dec
push
xchg
repnz
xchg
dec
xchg
xchg
lahf
mov
adc
nop
jnp
jns
adc
xchg
mov
addr16
test
adc
scas
cmpsl
xchg
test
push
mov
dec
inc
testl
test
lea
aaa
sbb
push
cwtl
jp
fwait
aas
imul
pop
div
ret
dec
cmc
mov
sub
in
out
add
add
movsb
mov
cld
xor
adc
inc
loop
mov
subl
jl
dec
adc
gs
cmp
xchg
aam
rcl
inc
mov
popf
jb
inc
xchg
arpl
sub
aas
sbb
xchg
jne
nop/reserved
jecxz
jnp
dec
mov
outsb
mov
pusha
push
xorl
inc
mov
mov
ss
push
out
xor
in
xor
jl
jle
dec
dec
or
cmc
xchg
ja
pop
fnstsw
cmpsb
or
xchg
mov
js
mov
test
orb
cmpsl
iret
sbb
jg
pop
mov
mov
sahf
and
mov
mov
pop
nop
sbb
in
or
jmp
xchg
jne
insb
imul
mov
xchg
push
dec
jecxz
nop
xchg
lock
mov
pop
mov
dec
insl
lcall
dec
iret
jb
push
negl
add
pop
into
dec
sar
mov
xor
inc
sub
fnstsw
mov
test
xchg
ds
pop
daa
mov
dec
mov
adc
ret
jno
mov
pmaxsw
inc
jb
rcrl
push
out
lods
out
jb
dec
cmp
out
fiadds
mov
cmpsl
jecxz
add
addr16
pop
dec
loopne
mov
jno
lcall
add
add
fwait
pop
fcomps
ljmp
movsb
imul
cmp
lret
hlt
shlb
stc
fwait
aaa
popf
pop
add
add
mov
add
cmp
fdiv
xlat
ds
lods
sbb
xor
sbb
enter
loop
jg
sbb
cmp
ud1
pop
arpl
push
fwait
push
lahf
add
ficompl
dec
add
xchg
sub
xchg
mov
clc
cmp
sbb
aaa
fs
xor
nop
shlb
pushf
stc
add
ds
in
jmp
inc
mov
mov
push
sub
mov
push
push
mov
test
mov
pop
fldl2t
pushf
stos
scas
xchg
or
enter
shl
dec
sbb
jno
push
arpl
fucom
sti
je
pop
stos
jns
mov
outsl
flds
outsl
or
add
jne
outsb
repnz
out
loope
xor
jg
cmpsb
adc
add
cmp
inc
and
add
sbb
xor
cwtl
int
clc
add
movsl
jge
cmp
and
in
pop
or
jg
push
test
das
lods
call
sub
loope
repnz
or
pop
xchg
cld
cmpsl
pop
inc
cld
lcall
adc
out
mov
mov
xchg
or
cld
fmuls
out
and
xchg
fcomip
sbb
and
push
movsb
jge
xor
test
cmp
into
sub
mov
cwtl
andl
jns
clc
mov
outsl
rcrl
in
icebp
fldt
push
int3
inc
lea
sub
aad
mov
aam
push
jns
inc
fildl
test
xchg
or
xchg
dec
call
mull
add
mov
je
adc
inc
ret
das
push
adc
or
loopne
and
lahf
add
sub
xchg
pop
pop
loope
dec
dec
es
loopne
cmpsl
lret
mov
roll
mov
or
scas
adc
dec
sub
repz
int
scas
sub
jge
es
nop
jns
int3
loopne
xchg
popa
dec
ds
mov
std
sarb
push
lret
rorb
outsl
jp
dec
mov
movsb
adc
in
push
orl
fcomip
mov
lods
stos
in
insb
adc
mov
lods
xor
and
jmp
sbb
or
ror
xorl
imul
xor
mov
push
mov
xchg
mov
mov
xor
cs
xor
mov
cmc
sub
mov
rorl
xchg
pop
fldcw
cmc
arpl
or
jae
shll
setl
jl
out
sbbl
pop
rolb
mov
jnp
cmp
mov
rorb
jg
add
xor
mov
scas
xchg
xchg
xchg
frstor
fs
loope
scas
sbb
call
jp
and
sbb
xchg
pop
and
loope
jbe
lods
inc
jnp
adc
sub
imul
pushf
int
lret
es
dec
xchg
icebp
mov
dec
mov
push
ret
ja
sub
stos
sbb
cmpsb
pop
popw
push
jbe
inc
push
sbb
pop
repnz
mov
repnz
xor
inc
sbb
ret
das
cli
inc
aas
pop
into
outsl
jecxz
lods
jp
jecxz
outsl
jmp
sub
imul
aam
sub
cmc
fldln2
loope
push
and
divb
push
in
xchg
xchg
push
mov
shll
movsb
gs
pop
shrl
dec
pop
shrb
sub
xchg
and
jecxz
and
pop
xchg
out
dec
rcrl
jg
je
pop
into
mov
mov
adc
test
push
jecxz
jno
mov
loop
and
sbb
sbb
lods
addb
push
adc
push
neg
icebp
cmp
dec
jne
lds
mov
andnps
sbb
or
mov
dec
pusha
shr
mov
ljmp
mov
mov
xor
mov
pusha
pop
rorb
enter
fildll
lahf
roll
add
call
xor
xchg
push
mov
and
cld
mov
outsl
push
sub
mov
es
pop
lret
enter
loopne
outsl
std
mov
pop
mov
jp
repnz
xchg
xor
enter
push
mov
mov
ret
les
adc
pop
cmp
icebp
xor
ret
inc
pop
ror
pop
int3
fnstcw
mov
roll
pushf
fs
lcall
lret
call
insb
andl
das
clc
and
je
daa
jecxz
sti
mov
push
adc
pusha
mov
jbe
jbe
mov
adc
jg
fcomi
dec
ss
or
addl
mov
cli
je
imul
iret
jecxz
fsts
xor
push
std
pop
fnsave
mov
xchg
test
xchg
cs
inc
mov
pop
out
sub
aas
sbb
stc
jl
cli
push
and
gs
pop
test
out
lods
hlt
mov
xchg
pop
mov
lea
mov
inc
mov
xchg
scas
pop
dec
push
test
mov
cmpsl
cmp
hlt
cs
fsts
popf
mov
sbbl
jge
inc
mov
addr16
imul
adcl
mov
inc
pop
or
lods
cmp
push
cmp
jge
mov
mov
or
daa
jecxz
dec
shrb
loop
mov
bound
sbb
or
sbb
push
lret
and
cmp
mov
je
cmp
jg
sub
mov
dec
pop
or
xor
das
into
ret
sbb
push
dec
jl
sub
dec
fwait
mov
ljmp
xchg
add
shlb
mov
lcall
ret
and
call
sarl
lret
jno
mov
mov
icebp
data16
dec
push
mov
lods
add
dec
dec
mov
sbb
loopne
jo
mov
imul
lret
fsin
in
insb
ja
cld
and
into
insb
xor
xor
jb
out
addr16
adc
jns
pusha
dec
inc
leave
xlat
inc
push
ljmp
mov
mov
dec
adc
popa
xor
inc
cltd
push
call
sub
rcl
xchg
and
mov
test
xchg
stos
iret
aad
mov
imul
adc
in
iret
gs
les
lret
in
arpl
pop
sbb
pop
insb
mov
sub
repz
sarb
inc
pop
cltd
pop
push
push
pop
sub
rcll
or
lret
jb
or
mov
into
testb
mov
shlb
xchg
mov
in
mov
cmp
dec
test
mov
movsbl
adc
pop
xchg
add
aad
scas
xchg
dec
pop
xchg
mov
lret
sahf
xchg
cmpl
xchg
test
bound
push
pusha
fisubs
xchg
fstps
scas
icebp
mov
mov
int
cwtl
or
cs
daa
nop
mov
xor
cmp
mov
jb
lds
sub
mov
inc
cmc
mov
mov
jg
jne
int
popf
adc
stos
gs
in
inc
in
fidivrs
fadd
sub
sbb
cmp
jae
or
mov
pop
fiaddl
repz
inc
mov
in
fwait
mov
clc
dec
or
push
sbb
lds
inc
ret
jae
insb
mov
adc
mul
dec
jns
pusha
push
pcmpgtw
inc
cmp
psrlq
int3
add
jnp
or
add
adc
mov
or
xchg
loope
fs
mov
jl
pop
jne
stos
pushf
pop
xor
lret
icebp
mov
rol
push
imul
cmc
lods
mov
jne
push
inc
pop
jb
jb
xchg
scas
outsl
das
aad
shr
les
out
mov
ficoms
add
ss
jge
into
data16
pop
xor
mov
cmpsb
lods
repnz
and
arpl
fsubrs
push
cmp
mov
int
mov
ja
pop
in
mov
sbb
leave
mov
addr16
pusha
fstpt
cmpsl
adc
mov
fs
add
dec
mov
or
test
aam
push
sahf
inc
xor
arpl
xlat
loopne
jecxz
pop
je
xor
push
mov
push
dec
pop
ret
mov
js
and
ret
movsb
jle
imul
xor
fidivrs
adc
stos
mov
and
pop
dec
cmpsb
pop
sahf
stc
dec
fcmovnb
jg
xor
arpl
mov
jae
push
mov
jp
in
mov
pop
or
cmpsb
les
inc
enter
pop
cmp
out
or
nop
pop
xchg
inc
movsb
orl
or
shrl
xchg
dec
cmp
enter
sub
mov
test
cld
repz
xor
lret
in
add
xchg
das
popa
pusha
xor
sub
xor
je
mov
stos
or
daa
pop
add
in
lds
mov
call
mov
std
cmp
mov
cmp
or
inc
sarl
pop
lds
pop
test
loopne
icebp
dec
scas
xor
icebp
add
out
inc
jmp
mov
mov
mov
outsl
xor
leave
ljmp
push
incb
jg
shrb
cmp
jl
je
mov
dec
adc
sbb
inc
mov
add
and
adc
fiaddl
aam
fistpll
out
mov
ja
mov
in
xor
or
xchg
imul
mov
icebp
call
jge
mov
sub
adc
push
push
roll
aam
xchg
mov
adc
pop
jbe
mov
jmp
ljmp
push
push
xchg
nop
push
cmp
scas
lcall
push
jbe
or
cmp
ds
gs
or
aaa
xor
lcall
cli
out
xchg
popa
mov
lock
insl
adc
mov
inc
test
sbb
mov
sbbl
test
or
mov
orb
sti
fucomp
mov
xchg
pop
ds
xor
shlb
aas
inc
xchg
adc
dec
shl
icebp
pop
int3
xchg
popa
hlt
jl
sahf
lcall
inc
out
push
mov
popa
jge
inc
lods
mov
cltd
mov
push
xchg
add
stos
cmp
xor
or
test
fwait
inc
sti
mov
sbb
xchg
int3
test
jl
pop
call
fstl
mov
ds
out
or
aaa
dec
or
scas
loopne
xchg
cmpsl
fsubrs
imull
scas
in
xor
xlat
inc
cli
popa
scas
sti
or
adc
or
push
xor
out
push
cs
pop
xchg
inc
add
jge
cmp
inc
mov
in
push
out
jl
xlat
fxtract
and
testl
xor
jno
sub
mov
inc
push
mov
xlat
loopne
add
cltd
shrl
fxch
les
sub
cmp
jne
mov
loopne
sahf
cli
mov
loope
scas
int
pop
ss
sub
shlb
xchg
in
std
andl
mov
jne
xchg
cmp
xor
gs
and
lea
iret
sbb
out
idivl
adc
pop
push
out
into
mov
inc
iret
aaa
sub
adc
jle
jecxz
jmp
cli
fmull
ret
adc
mov
inc
adc
out
mov
jp
xchg
cmp
loop
push
lds
mov
in
daa
shl
mov
sti
test
add
mov
jge
test
jecxz
jecxz
add
in
jb
dec
outsb
xchg
fistps
in
jl
adc
cmp
pop
jl
pop
lods
stos
out
push
jno
or
push
and
pop
cmp
test
and
mov
push
inc
aam
mov
test
and
shll
cmpsl
dec
push
insl
xor
out
inc
mov
fs
enter
mov
leave
xor
pop
xor
das
pop
movsb
mov
jecxz
push
loopne
mov
bound
popa
xchg
sti
out
inc
inc
mov
outsl
lds
mov
mov
push
cmc
lahf
mov
jle
out
mov
mov
cmp
or
and
xchg
lock
add
sub
sti
add
jae
and
mov
in
mov
sub
dec
push
mov
jae
dec
adc
jne
adc
pop
ljmp
add
sub
in
mov
add
push
lods
push
xor
cld
xor
dec
std
mov
mov
jp
cmp
add
sub
scas
inc
aad
cmp
into
xor
stc
leave
mov
loope
leave
mov
cmpsl
leave
ficoml
jae
std
aaa
or
testl
xor
iret
movsl
xor
movsb
decl
cmp
neg
or
xchg
cli
cmpsb
aad
mov
push
or
mov
mov
lds
cmp
pop
xchg
ret
les
sub
push
inc
subl
xor
xor
cmpsl
cmp
sti
cmp
xlat
scas
pop
push
aaa
outsl
xor
inc
sahf
mov
out
out
sarl
jmp
call
dec
fstps
jno
orl
test
xor
cli
xor
test
scas
dec
jnp
fstpl
popf
dec
jmp
lea
int3
pop
adc
insb
or
adcl
out
sbb
dec
xchg
mov
mov
incl
fsubl
dec
ss
mov
ret
mov
pop
adc
mov
or
mov
inc
repnz
push
aas
add
leave
outsb
into
mov
jbe
lcall
nop
push
lret
mov
sub
in
mov
mov
dec
pushf
cmpsl
cmpsb
mov
test
mov
or
sbb
cmpsb
roll
add
lret
xor
push
pop
xor
daa
outsl
sbb
aas
test
add
cmp
out
inc
dec
jae
fimull
pop
leave
lret
adc
add
lret
pop
dec
int3
xchg
lcall
sahf
pop
adc
imull
sarb
or
sub
cmp
test
xchg
bound
cmpsl
and
jo
les
pop
lcall
jle
inc
mull
adc
xor
mov
xor
or
or
add
popf
push
aam
add
in
xchg
jle
jle
mov
in
cwtl
mov
push
cmpsb
adc
sti
mov
push
adc
fwait
pop
rol
xor
xor
mov
div
js
sbb
enter
pop
test
jmp
mov
adc
pop
fisttpl
mov
rcrb
mov
dec
cmp
pop
popa
cmp
sub
inc
loopne
mov
or
ja
pushl
mov
inc
pusha
mov
mov
adcb
iret
adc
fldcw
cli
push
movsl
adc
add
xor
cmp
out
or
mov
lods
or
mov
fisttps
sbb
cmp
packsswb
sbb
arpl
fdivs
subl
mov
insl
sub
in
aam
adc
lahf
mov
mov
xor
rcrl
js
cli
out
fwait
sbb
repnz
or
ffree
mov
outsb
dec
mov
mov
repz
popf
and
sar
test
orl
mov
sbb
pushf
pop
movsl
dec
cs
push
das
dec
push
xchg
les
test
push
jne
addr16
xchg
adc
cmpb
push
pusha
mov
scas
and
push
scas
dec
inc
adc
fsubs
push
test
sub
fistpll
in
movl
outsl
and
mov
cmc
xchg
data16
mov
dec
or
cs
cmp
out
dec
push
dec
dec
rclb
push
dec
sub
jp
mov
int3
add
inc
cmpsb
imul
fimuls
adc
cmp
jge
stos
in
jbe
cmp
xlat
dec
int
loope
mov
rol
stos
lret
aad
add
cmp
mov
fisttps
ret
ds
xchg
cmp
push
dec
aam
in
xchg
js
jl
in
mov
call
cmpsb
fwait
adc
jg
xchg
arpl
test
and
dec
adc
add
xchg
cmp
and
jecxz
xchg
jle
push
pop
jp
sub
fldenv
out
daa
rclb
xor
daa
dec
xchg
inc
dec
pusha
or
out
and
lcall
push
enter
shll
adc
aas
out
std
mov
cwtl
scas
mov
out
mov
pop
fmul
jns
fmull
fidivrl
and
iret
fwait
push
andl
xor
lock
test
loope
aaa
or
outsl
lret
adc
mov
and
mov
pop
jecxz
or
jne
nop
sarb
jmp
pushf
js
int3
xor
lcall
leave
fnstenv
out
mov
sub
cmp
or
dec
icebp
xor
jmp
push
cmp
dec
rclb
fldcw
pushf
sub
in
mov
cmp
fstl
and
xor
push
lret
and
xchg
sbb
addr16
jae
inc
adc
in
popf
mov
ds
jg
xchg
aam
clc
push
dec
lock
arpl
push
scas
mov
fsubl
ds
cmp
lcall
aad
xchg
rcrl
adc
cmc
testl
jae
fldenv
inc
ds
pop
iret
jp
or
dec
lds
xlat
cltd
int
push
mov
xchg
ret
bound
setl
out
mov
or
fistpl
adc
push
add
jne
push
cmp
addb
mov
out
jle
in
mov
dec
ja
mov
push
mov
adc
add
add
lds
push
repz
scas
push
cli
cmc
mov
aas
dec
xchg
scas
pop
mov
test
push
nop
ljmp
cmp
dec
data16
jae
dec
jno
cmpsl
add
aaa
fisttpll
enter
movsb
addl
movb
or
pusha
xor
mov
cmp
cltd
es
aam
loop
mov
outsl
mov
inc
data16
dec
xchg
inc
cmp
jecxz
sbb
dec
aam
pop
mov
jb
pop
sub
ret
lock
add
jecxz
sub
push
ljmp
adc
mov
jnp
in
insl
inc
sub
test
push
and
inc
call
cmp
stc
jp
pop
mov
add
das
pop
lods
and
push
lahf
ret
or
fadds
push
xor
rolb
xor
ret
movsl
mov
xlat
dec
ffree
mov
push
pop
movsb
xchg
arpl
aam
or
mov
daa
in
cmp
xchg
in
mov
rclb
add
cmpsl
rcl
sbb
outsl
daa
jo
incl
xor
and
or
cltd
push
aad
push
push
inc
adc
or
pop
mulb
jns
mov
aaa
mov
mov
inc
mov
cmp
mov
push
sub
cmpsb
lods
push
jb
xor
ljmp
movsb
cld
mul
pushf
jno
xchg
sbb
mov
and
sub
add
inc
std
and
and
mov
inc
mov
test
mov
and
mov
push
jecxz
popa
mov
sbb
test
pop
pop
xchg
xchg
xchg
push
mov
xchg
in
inc
repnz
lret
jns
in
ret
sbb
ud1
sahf
mov
mov
inc
mov
es
iret
mov
lea
int
in
pop
adc
inc
xchg
fidivrs
push
sti
jae
pop
jbe
scas
push
repnz
test
xchg
ja
aam
aas
loopne
cmp
stos
cmp
xchg
dec
inc
popf
adc
adc
lods
mov
jbe
xor
sub
rclb
call
rcr
push
lret
mov
jmp
movb
notl
rcrl
lock
hlt
mov
subl
ljmp
jmp
and
push
cltd
xor
lahf
mov
cmp
push
ret
out
pop
fadd
stos
aas
sti
testl
je
sbb
jp
push
fsubr
data16
cmc
pop
cmp
fcmovnbe
jae
imul
jl
sbb
push
mull
cmp
sub
xor
jns
lods
out
pop
and
pop
ret
push
mov
hlt
lret
or
call
les
mov
sub
xor
cmp
stc
sti
adc
push
pop
fldcw
in
dec
inc
xchg
pop
test
push
mov
pop
test
or
repnz
inc
les
xchg
dec
push
movb
sub
sahf
movsl
fwait
pop
push
mov
pop
outsl
sub
aaa
dec
inc
dec
clc
leave
sub
cs
jae
rcrl
jb
repz
lods
cmp
loop
cmp
adc
push
nop
andl
fidivrs
and
add
push
push
mov
outsl
enter
mov
and
xchg
mov
xor
xorb
test
fwait
mov
lock
push
xchg
leave
fisubrs
lcall
std
xor
mov
data16
cmp
das
les
clc
dec
push
in
test
stc
sarl
fwait
into
mov
dec
into
pusha
xchg
and
repz
inc
jg
adc
jb
popf
push
loopne
sub
or
movsb
dec
add
insl
aas
stos
add
push
jmp
jno
inc
xor
mov
or
or
cmpsb
push
push
js
cmc
cli
das
lock
outsl
sub
sbb
scas
jle
cmpsb
shll
sub
mov
fisubrs
jg
ror
pop
clc
je
sub
stos
sub
cmc
divl
mov
or
insl
jmp
movsl
mov
jnp
or
pop
in
pop
repnz
and
xchg
mov
popa
push
xchg
mov
mov
ljmp
sbb
add
sub
xchg
andb
add
inc
dec
pop
or
jbe
dec
push
nop
dec
pop
or
mov
lods
pop
stos
into
rorb
aam
js
push
xchg
push
sub
lds
xchg
iret
mov
rcll
xlat
jo
ret
push
and
cmp
aad
dec
leave
cmpsl
bound
inc
push
cmpsl
out
and
mov
mov
cmp
jno
mov
mov
sbb
dec
xchg
daa
outsl
xchg
adc
mov
jl
int3
add
pop
rsm
std
mov
jecxz
bound
pusha
sbb
rcr
lret
xor
add
in
xchg
je
push
mov
cmc
inc
or
pop
lods
mov
pop
aas
inc
arpl
mov
bound
les
mov
ja
adc
inc
and
and
insb
dec
and
inc
int3
popa
add
push
xchg
push
shrb
sbb
les
mov
int3
insb
outsl
xchg
dec
sub
lds
jge
bswap
das
sbb
or
ds
add
daa
ljmp
ficompl
adc
mov
outsb
lret
fcomip
pop
in
or
mov
psubsw
mov
jb
popa
scas
aam
cmp
inc
sub
loopne
jne
mov
cmpsl
and
sbb
and
push
loop
or
sti
rcrb
push
in
adc
fucomp
ret
lcall
mov
in
jae
mov
cmp
pop
test
dec
shlb
xor
and
mov
jg
xchg
sti
iret
pop
popa
jecxz
iret
test
fistpl
pusha
adc
stc
and
push
arpl
inc
orl
xor
cld
fmuls
dec
inc
xchg
nop
sahf
out
add
push
dec
outsl
fimull
mov
subb
push
popf
inc
and
mov
shr
and
hlt
cld
pushf
inc
xchg
mov
lret
imul
and
out
cmp
pop
mov
xor
outsb
les
ss
pusha
cmp
shl
xor
daa
pop
mov
or
mov
cmp
repnz
mov
push
push
and
push
dec
push
inc
fisubl
sti
adc
jb
cmpsl
pop
push
mov
push
mov
cmp
sbb
andl
xchg
adc
imul
xor
mov
lods
stc
or
mov
pop
push
aaa
test
pop
stc
insl
jnp
bound
aaa
xchg
out
out
mov
and
pop
cmpsb
clc
cmp
icebp
mov
and
fstl
popf
sub
push
stos
mov
aad
out
xor
ja
dec
dec
jge
dec
push
push
pushf
jg
std
mov
or
sbb
insb
or
out
push
icebp
rcll
xor
lea
mov
add
mov
je
xor
incl
inc
xor
mov
sahf
test
mov
jo
icebp
push
xchg
pusha
inc
pop
je
lea
or
loop
xor
sbb
in
push
mov
add
scas
mov
xchg
cmp
cmp
pop
test
insb
sar
cmp
push
not
aas
into
mov
xlat
addr16
fiadds
aam
cmpl
sub
push
sbb
call
imull
mov
jge
icebp
xor
inc
sahf
lret
sahf
dec
or
scas
scas
scas
mov
mov
jge
inc
mov
lds
sub
stc
testb
xchg
negb
bound
sbb
dec
fcoms
lods
or
in
sub
dec
insl
lahf
cmp
lahf
stc
jae
dec
jnp
mov
xor
dec
add
fidivrl
iret
pushf
das
mov
xor
inc
and
lret
fwait
mov
jecxz
sbb
test
test
pop
repz
add
lret
inc
fldt
push
shlb
xchg
adcb
sbb
push
pop
adc
ret
in
mov
lods
jb
cmp
out
xor
scas
jae
pop
add
lods
nop
aam
test
popa
mov
xlat
in
xchg
fsts
pop
push
xchg
stos
stos
lods
movsl
mov
das
xchg
sub
stos
and
dec
and
xorb
daa
scas
movsb
mov
lret
jns
lods
movsl
adc
mov
cmp
mov
fadd
xor
dec
les
xor
or
mov
sbb
mov
pusha
jnp
sbb
in
dec
and
cltd
xor
sbb
test
lret
xor
xchg
faddl
mov
xchg
push
dec
int3
js
out
adc
outsl
pusha
loop
iret
ds
xor
jbe
dec
add
stos
call
pop
adc
sub
xor
jle
xor
adc
notb
js
enter
outsb
lods
fistl
fstp
enter
adc
mov
ja
sbb
into
xchg
incl
sub
pop
lret
aaa
sub
in
movsb
icebp
iret
lcall
push
fldcw
aaa
hlt
movsb
cli
xchg
mov
jns
mov
dec
inc
aam
data16
in
or
or
inc
std
xchg
push
pop
subl
dec
loopne
adc
stos
pushl
mov
inc
push
inc
sub
sub
loopne
adc
sub
lcall
daa
push
push
fwait
mov
pusha
call
sub
clc
rcl
cmp
cltd
mov
insb
push
jl
shlb
arpl
int
iret
test
loop
addb
insb
jbe
push
jl
mov
fs
jle
mov
lcall
testb
mov
sbb
cld
sub
stos
testl
outsb
loop
fsubl
pop
divb
movsb
lcall
stc
or
enter
jns
imul
mov
jnp
mov
adc
pop
jno
nop
adc
fistpl
int
mov
add
add
mov
int
rorl
mov
push
stc
ss
push
cmpsb
jecxz
pop
xor
outsl
jae
adc
pushf
mov
cs
mov
out
cmpsl
jg
pop
nop
xor
cmp
imul
notb
arpl
adc
push
xchg
inc
das
loope
call
jne
or
mov
lds
xchg
sub
sbb
dec
mov
sub
sti
cmp
xchg
in
inc
cmp
aaa
fxch
das
nop
jmp
cwtl
aaa
lods
ja
mov
inc
push
or
and
or
std
fldenv
xor
hlt
mov
jg
mov
xchg
cmp
jecxz
dec
cwtl
call
mov
outsb
pop
adc
repnz
es
jne
clc
jle
test
mov
jg
test
das
clc
movb
dec
cmp
cmpw
test
xchg
mov
pop
add
test
xchg
mov
cltd
or
mov
jns
push
xor
jecxz
mov
pop
cmc
mov
push
and
pop
cwtl
add
inc
bound
popa
sub
push
sbb
cwtl
cli
test
jae
mov
mov
clc
xor
mov
sti
stc
mov
iret
sub
mov
icebp
adc
xchg
sub
jle
pop
mov
dec
adc
lock
cmp
pop
add
mov
aam
mov
mov
decb
mov
inc
in
mov
cs
jmp
cmpsl
ret
cltd
lock
lcall
xor
test
data16
ret
rorb
lods
std
sti
push
sbb
in
sub
cmp
aas
xor
inc
rcrl
sub
imul
outsl
je
cmp
repz
pop
les
jge
mov
or
xchg
mov
cmp
push
jmp
sbb
xor
rcrl
xchg
sbb
ja
clc
inc
aas
or
sub
jg
enter
daa
push
jne
push
xor
mov
mov
mov
sbb
ss
pop
mov
test
xchg
dec
shrl
cmc
mov
pop
stos
orb
pop
mov
xchg
sbb
bound
jle
aad
and
push
mov
and
push
xchg
sbb
aad
lods
jl
frstor
pop
test
out
outsb
scas
cmp
push
push
outsb
or
inc
adc
pop
or
jl
shll
aas
sub
mov
and
out
imull
mov
sub
pop
gs
jae
jg
enter
and
jge
cmp
dec
cmp
push
pop
lock
std
ret
and
shll
push
inc
cwtl
xor
arpl
cltd
subb
mov
lret
inc
mov
jbe
mov
sarl
xlat
pop
sar
clc
and
jne
mov
jno
lock
pop
sbb
jmp
ficompl
adc
cmp
dec
fnstsw
dec
pop
lret
jne
into
icebp
aaa
mov
pop
sbb
loope
lds
dec
jle
sbbl
dec
inc
mov
jo
stos
repnz
ret
jae
adc
orl
mov
and
cmp
jmp
pop
lock
and
push
insb
dec
sbb
lods
les
lret
xlat
fidivl
mov
and
jnp
lods
nop
loop
fmul
and
pop
in
cmpsb
into
out
fs
push
adc
aaa
or
out
dec
jns
push
xchg
xchg
dec
push
xor
shrl
mov
js
rcll
int
clc
jbe
scas
mov
mov
mov
movsb
jge
push
add
scas
icebp
daa
cmp
push
addr16
outsb
fadds
sti
push
mov
xorb
lods
scas
and
and
mov
iret
std
rorl
inc
lahf
pop
leave
in
mov
mov
pop
daa
in
sti
scas
push
ret
sub
push
push
int3
out
imul
add
sbb
test
adc
scas
pavgb
std
popa
movsl
adc
mov
adc
sbb
lock
loope
pop
jg
jmp
into
sahf
lea
faddl
xor
mov
sbb
xchg
push
jbe
outsb
jmp
lods
cmp
cmp
cmpb
pop
lods
xchg
dec
xchg
sub
fcoml
xchg
pop
les
pop
jmp
adc
push
stc
sub
aad
mov
jbe
push
hlt
sbb
int
push
sbb
divl
lret
push
cmp
push
fdivl
aad
subb
test
mov
fs
cmp
std
int
jo
aaa
sub
xor
adc
and
stc
rclb
daa
add
test
mov
into
fnstenv
mov
into
in
shll
mov
test
fildll
or
add
es
push
xchg
jae
out
sbb
test
xchg
test
dec
add
scas
cmp
ljmp
aaa
pop
add
aad
dec
jo
sub
shlb
mov
push
push
mov
push
mov
pop
aaa
or
inc
test
dec
notb
out
idivb
je
jae
jb
sub
popa
lcall
fdivl
and
xchg
xchg
fldl
les
dec
fstp
fs
lret
xchg
xchg
pop
and
sub
mov
int3
sub
xchg
sbbl
fstpl
sti
inc
outsl
es
inc
inc
daa
inc
clc
xlat
ret
xor
jmp
stos
test
fcmovb
jp
mov
cmp
xor
rcll
insl
dec
pop
jle
jae
push
repnz
lock
stos
mov
mov
dec
sbb
lahf
push
sbb
clc
dec
push
shl
loopne
mov
arpl
loope
xlat
mov
mov
call
mov
out
scas
icebp
or
test
scas
sahf
loopne
dec
adc
dec
sub
jle
mov
mov
xchg
inc
add
pushf
test
pop
sub
out
fidivs
push
in
repnz
mov
jne
aam
cmc
or
sar
std
sub
ret
mov
mov
dec
inc
arpl
xor
loope
mov
aad
pop
sbb
mov
xchg
mov
jle
xor
rclb
jo
leave
scas
sbb
xor
add
sub
jae
mov
add
call
inc
push
mov
in
nop
fsubrp
xchg
aam
sbbb
pusha
dec
xor
fsubp
cmp
and
out
lret
insb
mov
push
adc
jecxz
repnz
push
rcll
popf
fwait
scas
inc
repz
ljmp
call
or
jne
push
jmp
xchg
cli
push
lea
xorl
out
or
outsb
xlat
sub
icebp
movl
test
cmc
xchg
mov
ud1
mov
andps
in
mov
dec
adc
sub
fnstsw
dec
inc
inc
xchg
jl
mov
sarb
add
push
sbb
xor
pop
push
adc
and
jge
push
call
ret
and
xchg
bound
xor
outsl
repnz
sub
mov
adc
dec
sbb
lds
pop
mov
or
add
jg
cmp
add
aad
inc
jle
ljmp
dec
data16
test
add
pop
pop
push
ret
cmpsb
adcl
out
inc
mov
fnstenv
cmp
loope
push
out
pop
pop
adc
js
je,pn
pusha
mov
or
arpl
leave
dec
push
shll
je
loop
push
loop
pushf
mov
xchg
sub
xchg
xchg
cmp
adc
dec
mov
shll
in
mov
ret
sub
mov
adc
sbb
fcompl
xchg
sbb
mov
or
imul
inc
mov
scas
pop
mov
or
mov
icebp
mov
shll
dec
daa
popa
jne
fisubl
lahf
pop
jns
jns
push
pop
cs
fwait
xor
pop
mov
test
repz
lock
and
insb
shr
cmp
es
icebp
jge
es
cld
loope
test
pop
xor
cli
push
cmp
repnz
xchg
xlat
lds
pop
xorl
mov
xor
jge
pop
mov
pusha
cli
je
scas
push
jp
adc
movsb
pop
dec
mov
int
mov
mov
repnz
jmp
aad
jle
sub
jmp
loopne
loop
jnp
call
xchg
mov
and
fstpt
push
int
sbb
pop
popa
jne
adc
imull
lcall
rclb
push
cwtl
leave
repnz
lods
jo
xor
mov
cmp
jmp
pop
mov
rcr
push
mov
pop
aam
sbbb
inc
mov
xor
jl
das
or
shlb
xor
mov
js
cwtl
scas
in
test
xor
das
ja
add
sub
loope
add
inc
mov
sub
inc
outsb
add
movl
mov
loope
fwait
mov
jl
cmp
or
push
mov
jl
jnp
insl
test
and
inc
cli
jp
and
push
adc
push
clc
aaa
mov
scas
je
aas
rcrb
dec
jns
mov
jno
loope
push
pop
call
sub
xchg
stos
xchg
inc
inc
sti
pop
imul
outsl
mov
jnp
pop
xchg
repnz
push
mov
into
fiadds
in
mov
cmp
jmp
lods
jnp
push
lea
insb
sbb
pushl
out
loope
ja
lahf
mov
dec
pop
movsl
in
movsb
inc
pop
test
roll
and
lods
mov
mov
mov
adc
push
sti
aaa
mov
shlb
push
imul
jp
jae
sti
leave
notl
jae
lods
rorb
ljmp
jo
or
clc
and
in
fstl
adc
xadd
pop
mov
jp
xor
daa
add
push
fmull
sarb
icebp
outsl
rcll
outsl
leave
leave
jb,pt
adc
jmp
dec
loope
daa
xor
pop
and
mov
jb
daa
fdivp
dec
call
mov
ret
inc
ja
or
mov
les
aam
adc
enter
shrb
and
pop
jl
cmp
out
stos
or
hlt
les
mov
loop
and
and
mov
push
mov
pop
int3
cmp
in
cmpsl
in
div
aad
mov
jno
int
or
mov
xor
outsl
fisttps
gs
adc
stos
dec
test
jp
jge
xor
pop
mov
sarb
mov
int
or
sbb
adc
lock
pop
mov
sub
adc
pop
push
jg
xor
and
xchg
and
jp
fadd
shlb
lock
mov
mov
add
movb
add
test
xor
lods
pushaw
and
cmp
pop
pop
push
ljmp
jo
mov
insl
cli
mov
xor
callw
inc
testl
std
ficomps
jb
mov
test
loope
pop
es
xor
stc
divl
ds
sbb
repz
iret
cmp
es
pop
or
push
cmp
mov
into
push
push
push
aaa
mov
insb
aam
outsb
jno
pop
icebp
push
lcall
ret
sarb
loop
pop
jbe
jp
adc
mov
lahf
add
das
lds
pop
or
fisttpll
rcrl
rorb
push
or
jecxz
push
xchg
cmp
sbb
addr16
sbb
sub
pop
add
add
fistpll
imul
mov
fildl
mov
aas
xchg
lods
lds
in
sub
enter
fstl
imul
xchg
enter
xorb
sahf
shll
xor
into
pop
and
jle
jae
addb
or
mov
sbb
xacquire
inc
enter
pop
sbb
sbb
hlt
into
inc
xchg
or
scas
jg
movsb
in
xchg
cmp
sbb
pop
fwait
mov
gs
sbb
xlat
pop
lds
decb
xchg
stc
je
fbld
adc
jmp
out
ret
gs
repz
data16
in
pop
call
push
push
test
ret
pusha
pop
enter
fsubs
dec
mov
inc
mov
cmp
jb
in
in
push
daa
mov
test
or
ret
mov
jmp
xlat
inc
xchg
ja
incb
mov
popa
stc
cmp
dec
add
sbb
fiaddl
dec
gs
and
imul
push
sub
sbb
mov
jo
fcoms
lock
push
jns
mov
mov
inc
xchg
fnstenv
sub
in
add
loop
push
dec
xchg
inc
iret
push
add
stc
popf
or
mov
into
test
in
dec
or
xor
mov
addr16
imul
test
popf
and
lds
std
sub
sbb
stos
gs
std
jns
lret
inc
xor
into
daa
pop
dec
movsb
jmp
out
mov
dec
pop
jbe
dec
in
sti
test
dec
push
lea
ffree
addr16
sub
pop
pop
sti
ficomps
add
push
mov
cli
in
test
and
js
cmp
jne
adcl
sub
dec
jns
movsl
fsts
sti
sub
sahf
aas
mov
cmp
loop
dec
ror
lcall
lock
add
jmp
das
inc
lock
aad
jg
call
mov
jge
push
xchg
movsl
mov
dec
cmpsl
jge
pop
enter
sub
daa
jmp
mov
orb
aaa
ds
pop
cwtl
push
xorl
stc
pop
adc
jecxz
mov
jo
jo
gs
imul
push
fwait
shll
sub
out
sbb
ss
cmp
pop
lcall
dec
lcall
lahf
std
js
out
insb
push
sub
xchg
mov
imulb
sbb
fidivl
xor
sub
iret
mov
pop
movsb
insl
xchg
cli
push
fsubrp
adcb
cli
das
or
popa
sub
lods
jo
ds
lock
add
inc
pop
sub
ret
je
dec
jmp
in
xchg
mov
pop
hlt
pop
and
xor
stos
into
arpl
repz
and
scas
cmpsb
mov
jmp
cmp
pop
fidivl
loope
xor
mov
das
add
pop
or
mov
and
pop
mov
fiaddl
dec
xchg
arpl
sub
add
icebp
icebp
xchg
call
imul
dec
xchg
adc
xchg
push
mov
pop
jle
shlb
adc
iret
inc
in
bound
cmp
xchg
insb
xor
bound
ja
and
mov
fcomip
idivl
jae
xor
jne
jns
fs
jl
pop
leave
xor
test
adc
leave
nop
stos
lahf
and
mov
in
push
in
gs
mov
xchg
mov
jle,pt
and
mov
sbb
mov
cmp
jmp
inc
pop
dec
fdivr
inc
pop
and
pop
xor
fs
and
scas
jp
lds
pop
jge
and
iret
sub
mov
lret
mov
cmp
lea
push
add
pop
xchg
pop
and
out
mov
inc
pop
sub
lahf
sarb
and
mov
repz
xlat
cmp
sub
dec
icebp
mov
ret
jo
push
add
jp
cmp
push
out
rcll
insl
mov
cmpl
lcall
jne
push
xor
jg
imul
rorb
je
pop
outsl
jp
sub
mov
lds
out
js
in
dec
cmpsl
mov
lahf
aam
testl
sahf
outsb
pusha
sbb
dec
adcb
loope
cmp
iret
and
cmp
inc
cs
in
jae
mov
xor
dec
mov
and
ss
movsb
pop
loopne
cltd
ret
xor
loopne
adc
arpl
jge
sub
sahf
test
cwtl
imul
add
fiadds
es
out
adc
cmpsb
fidivrs
stc
divb
or
jle
pop
lahf
pop
in
mov
cld
inc
push
jne
inc
push
dec
shrb
mov
jo
int3
rol
adc
in
popa
dec
ret
es
inc
mov
sbb
jp
sub
nop
mov
sub
pop
xor
fsts
cmpsl
xor
dec
mov
movsb
push
pop
rorl
mov
scas
sbb
mov
lods
ljmp
into
in
jp
push
cmp
dec
push
jno
movsl
pop
dec
mov
stos
xor
scas
sub
loope
adc
mov
movsb
mov
iret
ror
cmp
pop
movsl
cltd
loope
push
push
insl
cmc
mov
clc
icebp
pop
fs
nop
xchg
mov
xchg
jl
cmp
fmull
out
add
sarb
decb
movsl
jp
push
cmp
push
mov
sub
add
inc
dec
add
push
sub
mov
adc
aad
scas
sub
and
pushf
jb
pop
cs
push
inc
sbb
sbb
cmp
jne
loopne
jmp
jnp
mov
inc
cmp
add
add
add
ret
outsb
jno
inc
cmc
movsl
rcrb
xchg
scas
push
pop
hlt
cmp
aaa
adc
cmp
call
scas
jp
test
cmpsb
outsb
pop
sub
xchg
push
aad
std
and
mov
roll
mov
cs
xchg
out
jp
xchg
mov
test
push
sub
cmpsl
push
ret
jo
xor
insl
pop
add
cmp
pushl
dec
das
ret
mov
xor
cmp
dec
mov
cmp
daa
sbb
adc
adc
sbb
push
test
inc
pop
pop
or
neg
xlat
xor
and
gs
pop
add
in
ret
cld
cmc
mov
cmpl
in
sbb
sub
aaa
push
aas
and
xchg
inc
sub
loopne
pusha
jmp
pop
test
add
mov
pushfw
sub
adc
xchg
lods
out
cmp
xchg
sbb
xor
js
push
mov
jecxz
in
adc
jge
addr16
jp
or
les
lcall
and
in
imul
add
push
push
fs
cmc
sbb
test
pop
into
gs
loop
pop
inc
rorb
mov
pop
shl
or
pop
repz
jne
shl
movsl
lret
mov
add
sub
clc
pop
sbb
mov
xchg
mov
and
imul
popl
mov
and
mov
pusha
inc
inc
sub
pushf
dec
inc
push
inc
rcrb
lret
xor
push
fiaddl
sahf
cld
ja
mov
xor
xchg
jge
mov
or
arpl
outsb
les
in
dec
out
shrb
xlat
add
push
sub
movzbl
adc
loope
ja
or
test
lret
and
add
ret
xor
out
jecxz
mov
insb
jns
cmpsb
mov
je
dec
inc
pushl
in
stc
push
inc
adc
jne
aam
clc
dec
jnp
and
mov
hlt
add
hlt
test
and
es
jmp
call
mov
lods
repnz
in
add
int
movlps
sbb
pop
and
popa
cmp
arpl
popf
mov
stos
dec
cmp
mov
test
pusha
clc
adc
outsl
bound
out
mov
inc
mov
fidivl
inc
mov
popa
dec
push
mov
cmpsb
iret
pop
test
pop
pop
leave
xchg
inc
ja
mov
jmp
rep
ffree
inc
or
jecxz
lcall
xchg
rorl
imull
jbe
jg
sub
sti
mov
fwait
mov
add
stos
sub
aad
scas
addl
and
fidivrl
jl
repz
jbe
fsubl
mov
les
out
and
mov
xor
fisubrs
les
xchg
cmp
cltd
lds
ror
mov
pop
mov
cmpsb
shr
fcmovnbe
pop
dec
or
push
repnz
jb
roll
pusha
xchg
psrlw
pop
test
arpl
dec
and
outsb
or
sub
dec
mov
and
int3
in
mov
int3
xchg
mov
adc
popf
pmulhw
clc
loopne
pusha
push
int3
icebp
test
and
stos
dec
cmp
mov
sbbb
ret
dec
leave
imull
test
dec
push
aad
pushf
movsl
cmp
stos
fldl
jle
int3
sbb
dec
add
inc
das
ffreep
push
pop
mov
in
jecxz
imul
in
in
loop
ret
ret
lret
add
jmp
push
add
loope
ds
mov
fisubs
inc
xchg
xchg
outsb
lods
inc
push
scas
cmp
jle
mov
mov
fsubrl
push
push
aaa
push
test
sub
fldl
out
mov
fdivr
jecxz
stc
sti
pop
ja
push
rcrb
mov
test
rorb
jg
rcrl
push
aaa
outsb
pop
into
cmp
or
xchg
pop
mov
ret
lea
ds
push
or
or
addr16
push
add
out
or
ret
cwtl
add
aam
popf
and
and
xor
mov
in
fldl
add
mov
mov
inc
pusha
clc
dec
push
mov
pop
xchg
dec
push
pushf
xor
cwtl
pop
mov
pop
sbb
daa
arpl
cmp
cmp
mov
pop
iret
rcr
sub
imul
jl
movsl
add
js
push
sti
and
push
cmp
mov
test
lea
xchg
jae
xchg
dec
xlat
fwait
xor
jecxz
mov
hlt
pop
push
stc
sti
and
dec
into
jb
xchg
jno
jbe
dec
jl
jne
pop
pusha
lahf
mov
out
xorl
int
lock
jg
adc
insb
push
lahf
jge
std
ss
pop
test
xchg
call
lahf
jno
inc
sub
aas
inc
in
ret
stos
push
mov
push
fwait
push
call
cmp
cwtl
pop
ljmp
fsubr
mov
cmpsl
lea
ljmp
mov
and
loope
popf
fistpll
mov
push
int
jl
sahf
mov
mov
push
adc
and
or
test
inc
mov
xorl
cmp
pmaddwd
lahf
aam
pop
adc
cmp
mov
jg
push
jge
jns
push
mov
test
sbb
jns
sbb
pop
pop
mov
pop
iret
add
adc
fiadds
and
fs
cs
dec
xor
xchg
pushf
push
aam
leave
xchg
sbbb
push
jne
test
adc
lds
or
push
push
daa
in
mov
int
add
inc
adc
jb
cs
dec
lock
lea
sbbl
and
pop
and
mov
mull
pop
out
pop
loopne
int
cmp
push
pop
lods
lcall
mov
popf
jno
shll
xchg
sbb
dec
sbb
mov
mov
dec
clc
movsb
inc
ret
or
cmpsl
stos
pop
sub
cmp
xchg
xchg
lcall
popa
cmp
jnp
out
in
icebp
and
leave
nop
or
cwtl
movsb
xchg
push
push
or
jmp
xchg
xchg
hlt
popa
stos
and
inc
jb
xchg
sub
mov
je
push
repnz
dec
or
cmp
sbb
jmp
inc
out
mov
addr16
fld
stos
dec
fidivl
inc
mov
adc
cld
adc
pusha
xchg
dec
inc
pop
arpl
pop
and
mov
jge
out
mov
mov
and
mov
or
cwtl
leave
lret
pop
cltd
xor
jno
dec
rep
sbb
sub
add
add
lods
cmpsb
cwtl
xor
xor
push
lea
jns
dec
jbe
aas
sbb
dec
push
push
aas
xchg
aad
push
icebp
std
mov
xor
mov
imul
mov
jmp
mov
mov
push
divl
bound
shlb
xor
test
nop
mov
repz
negb
shlb
aaa
jbe
lahf
jb
jne
adc
cmp
aad
sbb
fsubs
dec
insl
bound
xchg
sbbb
xchg
lods
pop
fimuls
jne
sbb
and
mov
or
sub
add
mov
jbe
fsubl
mov
repnz
cli
ljmp
xor
sbb
add
jg
inc
push
jle
divl
cwtl
xor
xchg
dec
sub
out
loop
add
je
fdivrs
jle
xchg
hlt
mov
mov
jnp
daa
sti
aad
mov
ret
mov
xchg
lret
mov
sarl
ds
call
loope
pop
xor
or
mov
in
inc
jge
adc
mov
faddl
mov
add
rcrb
stos
xchg
inc
mov
sub
jge
lea
sbb
fwait
sub
mov
stos
divl
mov
add
fsubl
dec
add
in
loope
sub
push
jge
mov
in
xlat
ror
lretw
mov
xchg
ljmp
je
xchg
mov
mov
dec
cld
scas
call
sahf
lock
negb
sub
mov
insb
loope
mov
repnz
mov
ljmp
xchg
adc
mov
add
pusha
adc
bnd
mov
cmp
mov
movb
cmpsl
repz
push
rcrl
mov
popa
and
incl
lock
cmpsl
out
sbb
arpl
xor
iret
xchg
add
xchg
sbb
mov
cmp
pusha
inc
push
mov
insb
shlb
add
push
add
xchg
mov
ja
and
jmp
mov
pop
adc
out
xchg
xlat
insl
add
add
adc
popf
add
sarb
xor
mov
in
outsl
pusha
roll
jb
lods
enter
inc
cmp
add
mov
push
sbb
pop
in
push
pop
fidivs
ret
shr
scas
shlb
adc
fwait
out
mov
sbb
push
push
cmpsb
push
jmp
jge
sub
or
scas
add
loope
pushf
xchg
scas
js
cmp
ja
inc
and
jbe
mov
pusha
sbb
xorb
sub
jp
into
insl
mov
sbb
sbbb
mov
mov
es
jmp
call
aas
cmp
xchg
inc
adc
clc
dec
cwtl
shlb
inc
mov
mov
and
fcmovbe
jns
push
iret
cmpsb
xchg
push
ret
lahf
lds
in
daa
pushl
lea
scas
pop
mov
mov
adc
push
inc
push
add
xchg
dec
push
pop
adc
jmp
cmpb
inc
add
in
popa
mov
jp
cltd
out
rorb
sub
and
stos
inc
aaa
inc
mov
push
decl
mov
push
add
jno
pop
pop
push
pop
cld
rcrl
jle
lcall
fstl
dec
pop
loope
mov
and
xor
clc
add
jg
aas
sahf
push
dec
nop
and
inc
addr16
outsb
jecxz
mov
push
stos
add
add
fidivrs
and
std
adc
cmp
mov
ss
push
sub
jp
into
lods
fnsave
mov
inc
fs
mov
mov
xor
scas
and
xor
jge
lock
cmpsb
xor
sub
adc
sbb
mov
jae
xchg
jbe
mov
mov
loope
add
cmp
push
pop
mov
data16
add
xchg
pop
jnp
xor
push
cld
out
addr16
mov
xor
int
sbb
mov
add
jbe
push
inc
lahf
aad
add
cs
scas
lret
pop
popa
jno
notl
sbb
syscall
scas
les
dec
out
rol
jae
and
cmc
nop
push
stos
mov
pop
popf
jle
mov
dec
jo
dec
in
movsb
pop
es
ret
in
jle
fidivrs
scas
mov
or
pop
lret
lds
xchg
sbb
sahf
out
arpl
ljmp
inc
mov
inc
xchg
outsb
cmp
lret
sbb
aad
xchg
les
jae
ljmp
in
shrb
testl
outsl
inc
mov
jb
add
int
jl
shlb
sub
jns
mov
lea
jp
leave
push
pop
inc
std
nop
mov
xchg
lahf
in
push
inc
and
fadds
repz
enter
dec
fucomi
arpl
lea
pop
dec
and
roll
int
fstp
insl
cs
mov
mov
sbb
idiv
jge
cld
loop
xchg
je
call
cwtl
pushw
sti
ds
sub
ficoms
iret
push
pop
in
sub
dec
mov
sub
ja
adc
dec
inc
ret
fnstsw
pop
or
jp,pn
hlt
push
mov
adc
pop
cmp
pop
sbb
std
xchg
aad
inc
mov
pop
je
les
js
mov
fsubrl
push
in
daa
cmc
inc
mov
stos
je
adcl
xor
in
pop
push
outsb
jo
fwait
xchg
xor
xchg
sub
data16
or
mov
xlat
loope
or
sbbl
add
mov
push
dec
icebp
xchg
mov
pop
je
xchg
xor
push
xchg
imul
adc
xchg
enter
xchg
mov
sub
inc
mov
jg
mov
jp
jnp
cld
in
inc
int
jp
sbb
iret
ljmp
aas
add
mov
inc
cmp
pop
test
bnd
dec
outsb
stos
jmp
pushf
mov
outsb
sahf
xchg
pop
ss
or
pop
sbb
inc
loope
mov
inc
cmpsb
imul
xchg
cmp
cltd
push
pop
pop
data16
mov
mov
mov
sbb
or
movsl
enter
xor
mov
cmpsl
test
pop
push
das
and
push
popa
lret
mov
push
cmp
hlt
pusha
push
sbb
aad
outsb
fnstenv
cmp
das
test
add
add
jb
sub
add
addr16
xor
call
or
cli
fldenv
jp
add
hlt
loopne
imul
sbb
out
xchg
or
aaa
or
cmpsb
fsubs
fstps
enter
push
imul
xchg
mov
adc
iret
sbb
cmp
std
mov
cmpl
out
dec
insb
xor
pop
in
mov
loopne
or
xchg
sti
filds
lret
mov
pop
add
sub
je,pt
loopne
or
xchg
clc
loopne
sub
mov
daa
sub
push
inc
insl
shl
cmp
stos
inc
mov
mov
pop
cmpsl
out
ror
pop
cmp
mov
orb
mov
cmpsl
add
pusha
loopne
fs
fcmovbe
mov
fs
push
fcoml
xor
jmp
xchg
movsb
call
jae
nop
mov
xor
ljmp
mov
cmp
mov
insb
xor
push
sahf
cmp
ret
xchg
filds
fbstp
adc
sbb
ljmp
xchg
dec
adc
sub
xchg
in
fmuls
push
push
or
pop
cmp
xchg
mov
fsubrl
push
or
mov
sub
jae
sub
inc
cmp
mov
fiadds
push
push
lods
ja
jmp
clc
dec
aam
mov
into
or
ljmp
sub
sbb
dec
das
xchg
add
sub
push
insb
scas
cmpsl
jo
and
mov
dec
or
inc
daa
and
repz
rclb
push
divps
jmp
std
or
xor
push
bound
imul
bnd
cmp
sub
fstl
jmp
push
mov
sub
repz
imul
push
jnp
cmp
sbbl
push
fbld
dec
insl
pop
jns
cmp
cltd
data16
sbb
aaa
adc
add
cwtl
and
mov
mov
jmp
das
xlat
push
loopne
mov
rolb
xor
das
mov
aad
xor
mov
iret
jno
out
scas
lcall
insb
daa
int
mov
push
out
shll
mov
sub
dec
jge
test
mov
cs
ds
test
orb
push
xchg
mov
dec
es
lea
xchg
imul
and
sbb
pop
out
push
cmp
test
sbb
pop
inc
aam
cli
shlb
pop
add
in
loopne
fwait
mov
xchg
bound
or
sbb
mov
and
inc
sub
shlb
js
ret
jp
in
ljmp
and
aam
in
pop
pop
adc
cli
insl
mov
inc
xor
xchg
push
pop
scas
test
sub
insb
daa
sub
mov
sub
ffree
push
outsb
into
gs
callw
pop
cmp
mov
xchg
ret
cmp
and
pop
mov
insb
inc
push
pop
ljmp
pop
inc
aam
cmp
sub
mov
jp
jns
into
test
fisubrs
mov
sar
aam
add
xor
inc
addr16
cltd
mov
pop
clc
sub
mov
dec
nop
mov
sub
pop
adc
les
insb
addr16
inc
cli
mov
mov
xor
int
mov
adc
push
aas
and
push
inc
ja
dec
das
add
xchg
ljmp
test
add
inc
das
insb
je
jnp
mov
mov
int
loopne
lods
inc
inc
mov
xor
inc
out
xor
clc
pop
ss
dec
adc
test
fldenv
add
pop
adc
pop
aas
push
lods
negb
out
jl
insb
cmpsb
sub
imul
stc
pusha
js
push
fucomi
mov
icebp
sbb
cmc
sbb
sub
ds
mov
mov
addl
or
push
cmpsl
sti
pop
shrb
lods
pop
push
repnz
pop
mov
mov
push
and
scas
push
xor
dec
pushf
and
pop
inc
mul
dec
into
jp
out
add
jb
fsts
lock
jmp
stos
stos
pop
dec
movsb
aad
inc
outsb
sbb
repz
nop
sub
int3
push
adc
aam
jp
pop
xor
cli
cmp
jnp
bound
mov
mov
mov
mov
loope
mov
sbb
or
test
pop
in
mov
int3
adc
add
nop
dec
push
imul
sbb
in
es
test
movsb
sub
fwait
sub
pop
in
sysenter
sub
subb
mov
sbbb
mov
mov
das
popa
and
adc
cmp
roll
adc
lcall
xor
cmp
sbb
lock
icebp
iret
sub
or
sarb
clc
into
rol
mov
mov
ret
fisubrl
jg
test
idivb
hlt
mov
add
sub
fimuls
and
mov
rsqrtps
inc
dec
xchg
inc
out
push
fwait
xlat
mov
adcb
sub
push
or
shll
out
cmpsl
xor
adc
push
pop
cmpb
adc
mov
push
aam
mov
and
andb
in
cld
sbb
adcb
add
sub
mov
mov
dec
sbb
xor
pop
ja
es
lds
push
fnstenv
jno
inc
outsl
das
adc
mov
adc
lds
js
aaa
gs
scas
scas
cmp
xchg
pop
insl
stos
push
sbb
cmp
dec
jle
fisubs
and
push
pop
jne
das
or
imul
adc
lahf
stos
push
add
es
xor
mov
movsb
adc
pop
addr16
mov
and
fcompl
inc
adc
push
ljmp
pushf
and
pusha
add
pop
push
push
fimuls
add
dec
xchg
inc
mov
aam
xor
pop
cmp
add
ficoml
mov
icebp
loopne
dec
stos
push
fwait
call
add
arpl
in
lods
shll
lock
xor
push
and
in
gs
stos
sub
adc
addr16
dec
shlb
jo
push
mov
mov
test
xchg
pop
clc
ds
bound
pop
push
jecxz
fwait
or
xchg
mov
test
lret
xor
jg
or
je
imul
jl
insl
pop
ljmp
mov
mov
adc
jmp
add
xor
sbb
xchg
outsb
test
xor
push
shl
or
jbe
or
jmp
mov
cmp
sub
cmp
test
push
sbb
add
vaddss
stos
mov
cmp
cmc
and
xor
mov
inc
adc
dec
jo
inc
mov
inc
mov
pusha
sub
in
scas
push
xor
ud0
andb
into
push
leave
inc
stos
dec
scas
es
mov
push
ss
out
decl
jp
int3
clc
cld
jae
sahf
cmpsl
je
jge
push
or
mov
icebp
xor
jbe
ret
mov
mov
fdivrs
subl
je
cli
sbb
push
jp
xchg
jmp
insl
pop
xchg
cs
adc
or
aas
bound
shll
push
add
and
lahf
mov
pop
mov
xchg
mov
andb
std
stc
mov
fcmovne
or
dec
push
mov
ret
insl
sub
mov
xchg
movsb
sbb
or
cld
push
arpl
bound
cwtl
cvtps2pi
jns
ljmp
fnstsw
addl
push
rclb
divb
dec
jbe
sbb
push
sbb
movsb
mov
int
mov
es
push
push
pop
pop
dec
xchg
rcrb
and
dec
sub
and
shll
fs
xchg
adc
clc
and
scas
fucomip
mov
pusha
sbb
mov
xor
cmp
neg
pop
lods
xor
and
std
xchg
out
mov
aad
fisttpl
lret
cltd
add
pop
pushl
cmp
hlt
test
push
dec
cmp
rorb
and
and
inc
ja
xchg
xor
mov
sbb
ljmp
jle
not
loope
sti
pop
les
lock
pop
insb
jb
mov
inc
sbb
iret
sbb
push
mov
add
std
fsub
mov
dec
int3
xor
xor
push
pop
lea
pop
dec
xor
mov
fisttpl
jge,pt
sbb
and
mov
jg
lods
shll
mov
pop
cs
fldcw
sbb
cmp
or
and
clc
xchg
push
xor
mov
ja
jmp
push
nop
push
xor
pop
pop
sub
out
test
inc
rorb
scas
sub
or
pop
xor
daa
xor
sbb
inc
lods
push
divb
jns
or
mov
cmp
pop
push
cmp
pop
adc
xchg
fmuls
sub
xchg
pop
mov
orl
orl
repz
out
or
mov
adcb
mov
pop
sbb
sbb
in
or
xchg
xchg
mov
jl
jmp
cltd
test
add
mov
in
stos
push
in
xchg
cmp
inc
inc
xor
pop
jp
push
xchg
cltd
jne
push
add
dec
imul
sub
mov
pop
jmp
shll
or
push
mov
ffree
repz
dec
mov
rcrb
xchg
push
int3
ret
mov
cmpl
jp
lock
loop
scas
movsb
mov
fmuls
stos
outsb
or
xor
pop
mov
lcall
or
jecxz
lods
sub
mov
mov
jg
dec
xor
pop
mov
sbb
orl
xchg
add
pop
jne
repz
push
mov
ljmp
je
mov
cmp
cmp
jge
jo
dec
test
mov
das
mov
lret
movsb
mov
clc
rcrb
insl
loop
dec
lret
inc
fildl
add
jno
pop
jne
xchg
inc
aas
push
or
cmp
add
jo
adc
fisttpll
loope
mov
pop
mov
arpl
fdivs
sahf
test
aam
add
repz
in
scas
push
sub
lods
fistpll
add
adc
pop
pop
mov
lock
insl
clc
outsb
movsb
fwait
iret
ret
jno
xor
inc
sbb
enter
and
lcall
daa
xorb
loopne
add
mov
pop
scas
bound
stc
xor
ljmp
mov
aaa
in
mov
rcrl
xor
add
pop
push
outsb
push
arpl
push
stos
negl
loope
cmpsb
leave
push
in
jne
inc
xchg
jmp
mov
and
lds
aas
mov
pushf
les
inc
lods
xchg
jb
jne
sbb
rcr
bound
imul
push
pop
mov
divb
xorl
sbb
rcrb
mov
scas
rcrl
adc
lods
push
test
fs
add
push
mov
lods
gs
add
imul
in
fmull
jg
ret
and
rcll
dec
rol
pop
loop
arpl
or
cmp
cmp
xchg
dec
rorl
arpl
jp
sub
int3
sbb
cwtl
imul
rorl
es
push
lret
add
mov
cmc
add
fisubl
pop
aaa
ss
xchg
sub
addb
shll
lds
cmpsl
jmp
sarb
sbb
insb
mov
mov
dec
pop
cltd
sub
push
loop
xor
push
stos
mov
lret
or
mov
rcrb
cmpsb
xor
cmpsb
aaa
aad
out
loop
pop
pop
or
outsl
lods
sbbb
aad
fldcw
sbb
lods
mov
xor
pop
enter
ljmp
pop
fcomp
aaa
sahf
popa
cs
jp
sahf
fidivl
or
jns
cli
sub
pop
dec
aaa
pop
in
jo
push
xchg
mov
shlb
pop
icebp
add
dec
outsb
mov
add
pushf
rorl
mov
mov
into
mov
enter
negl
mov
ljmp
mov
xorl
mov
pop
mov
ret
loope
dec
cltd
cmp
outsb
dec
xchg
outsb
jb
scas
lock
jb
iret
mov
add
pop
cmp
mov
cli
cmpb
mov
je
repz
lcall
inc
xchg
pop
dec
aad
dec
outsb
adcb
aas
pop
xchg
inc
mov
sbbb
mov
pusha
je
xchg
rol
push
mov
shlb
loope
adc
out
jmp
decb
cmp
pop
jp
xor
pop
aad
test
aad
push
loopne
outsl
sbb
sbb
repnz
pop
scas
mov
dec
jne
pop
mov
pop
pop
js
push
cmp
and
pop
shrl
lods
lret
sub
mov
mov
ret
int
or
fdivl
fsubrp
xchg
push
adc
roll
push
insb
call
scas
sub
test
sti
ljmp
fdivrs
scas
xchg
xchg
cmp
icebp
push
add
sbb
fdivs
repz
adcb
push
xchg
mov
mov
mov
cmp
add
imul
inc
mov
cmpsb
and
jb
ret
xor
adc
inc
jno
aaa
fisubrs
cmpl
xchg
mov
out
cs
das
outsb
mov
fsubrp
ret
mov
repz
icebp
rcrl
xorb
push
mov
xchg
imul
mov
iret
fnstcw
cltd
xor
jmp
or
inc
popl
mov
lods
rorl
adc
movsb
sbb
outsb
dec
mov
jnp
xchg
and
inc
dec
enter
ret
dec
jg
mov
xor
aad
std
dec
push
mov
pop
inc
js
daa
out
mov
push
bound
icebp
rolb
shlb
sbb
test
cmpl
adc
or
popa
rolb
push
xchg
cmpsl
dec
push
inc
les
std
int
adc
xchg
pop
fstl
inc
clc
sahf
lods
ret
mov
push
in
mov
out
cmp
and
adc
push
lea
pusha
imul
mov
loopne
sti
aam
xor
mov
ret
pop
xor
mov
test
mov
sti
jmp
out
sbb
push
loopne
jecxz
jecxz
arpl
mov
or
scas
xchg
aaa
ds
mov
mov
push
push
xor
pop
adc
dec
dec
jo
cmpsl
xchg
sti
stc
add
sbb
out
cmp
movsl
xchg
jns
adc
imulb
out
xor
repnz
add
xor
data16
pushf
mov
jge
mov
lods
fsubrs
or
imul
pop
mov
fimull
shlb
pop
imul
pushf
stos
pop
jle
push
dec
ja
mov
faddp
inc
stos
push
addr16
xchg
stos
push
push
pushf
dec
fisubrl
mov
jge
shll
stos
xor
lods
lods
aad
jg
test
jb
das
in
inc
mov
sbb
scas
in
loope
daa
js
add
data16
iret
les
sub
jns
pop
sub
les
jnp
cmp
sub
sub
xchg
dec
cmp
out
leave
or
mov
or
pushf
test
in
push
hlt
gs
xchg
inc
test
sub
orl
inc
jg
shl
cmp
and
push
inc
sub
sub
test
shlb
sarl
ss
jl
outsl
push
inc
cmp
pop
sub
mov
fbld
cmp
jp
flds
dec
lret
cmpsl
adc
mov
sub
dec
mov
cmp
sub
cmpsb
xor
or
je
movsb
in
inc
clc
mov
pop
sub
xchg
lret
ljmp
test
das
lret
aas
test
mov
sbb
stc
or
mov
xchg
sub
xor
cld
in
mov
cmc
mov
mov
iret
in
mov
shrb
les
lea
push
jo
adc
shlb
clc
or
es
jg
lcall
mov
dec
and
add
add
cld
jns
aam
jae
fcmovbe
leave
inc
ja
cmp
mov
cmpsl
push
cmpl
xchg
dec
fisttpll
pusha
arpl
adc
shlb
adc
mov
out
rorb
int3
or
movsl
cli
mov
dec
dec
pop
mov
xor
mov
jns
clc
lea
xchg
push
int
sbb
pusha
mov
mov
mov
popa
inc
lds
test
dec
testb
mov
add
scas
sub
dec
inc
sbb
xchg
jno
lds
inc
jle
dec
fwait
lret
pop
or
dec
inc
iret
cs
add
loope
sbb
or
fdivl
mov
test
xor
inc
adc
inc
adc
cmpsl
xchg
jp
xor
add
sub
inc
cld
jo
scas
aaa
dec
mov
les
cld
ja
in
in
and
push
xchg
xchg
loope
push
fdivr
sub
and
lods
pop
sub
repz
lds
mov
jp
mov
sti
mov
dec
fcomps
call
fsubl
loope
cmp
scas
push
leave
push
pop
mov
les
add
bound
mov
inc
lahf
xor
imul
xchg
stc
pop
and
adc
xor
inc
addr16
rclb
and
mull
out
inc
test
ret
xchg
call
shlb
mov
clc
je
pop
add
dec
ss
dec
pop
jnp
fs
popf
sub
fs
and
shlb
call
inc
into
cld
push
fdivs
loopne
adc
sbb
cmp
xor
fcmovne
mull
mov
dec
sbb
stos
cmp
orb
cmp
jge
mov
add
add
clc
or
sbb
cmp
popa
cmp
fcom
cmc
popa
jne
mov
and
sbb
mov
inc
or
daa
sub
xor
imul
push
out
jno
sub
mov
sub
sub
xchg
cmp
and
adc
movsb
mov
jle
dec
sbb
lods
inc
add
add
orl
outsl
cmp
movb
cs
or
pop
jb
jle
stc
arpl
into
std
lcall
cwtl
outsl
flds
push
loope
test
out
cs
movb
cmp
fisttpll
pop
mov
push
jmp
ds
or
inc
dec
ds
shrd
dec
pushf
js
pushf
add
pop
cmp
test
and
xor
xlat
popa
cli
insb
xchg
mov
xor
lea
ret
daa
hlt
pop
sub
adcb
je
sets
mov
lods
outsb
or
popa
jae
push
in
mov
xchg
adc
repnz
out
into
pop
imull
pusha
add
dec
jge
ficoms
inc
xor
rolb
jne
out
pop
adc
sub
mov
cld
push
dec
jp
fcmovu
imul
ret
inc
sti
sbb
sub
push
rol
scas
aas
stos
ss
or
dec
cld
jbe
pop
pop
inc
jns
sbb
push
xchg
out
push
mov
jns
dec
lret
xchg
mov
cld
xchg
push
mov
pop
das
sbb
out
add
idivb
mov
push
cmp
dec
cwtl
std
lret
fcmovb
subl
bound
mov
inc
in
fldcw
push
dec
arpl
inc
cmc
xchg
cmp
adc
xchg
jo
and
adc
fnsave
rorl
inc
cmp
mov
sbb
mov
jno
ficoms
das
mov
int
pop
sub
jl
lds
aam
clc
ret
mov
mov
fcoms
mov
rorl
inc
cwtl
rorb
clc
addr16
xlat
xchg
sub
shlb
xor
out
sub
stos
pop
pop
jns
leave
push
aas
mov
ljmp
and
jecxz
hlt
ljmp
adc
sar
shll
inc
mov
test
adc
mov
iret
stos
mov
push
cmp
lret
mov
or
pop
dec
sub
sbb
js
shll
les
adc
push
in
test
mov
dec
addr16
inc
and
mov
sbb
mov
jl
or
rcr
mov
xchg
mov
shrb
arpl
add
std
push
xor
movsl
test
ja
jne
insl
sub
test
shl
mov
or
mov
scas
out
lcall
add
pop
lock
mov
insl
push
fs
ds
out
mov
jl
mov
mov
or
jp
aas
ljmp
mov
cmp
idivl
sub
and
nop
push
fisubl
sarb
arpl
push
cmpb
aad
dec
dec
mov
cltd
scas
cli
cltd
inc
int3
lcall
inc
mov
adc
xchg
mov
mov
jmp
mov
insl
mov
pop
dec
pop
jecxz
mov
stos
scas
or
insl
jmp
movsl
xor
call
dec
jg
in
sub
pushf
ret
xchg
jb
mov
leave
sti
cwtl
inc
xchg
das
xchg
sub
pop
imul
clc
mov
pop
cmp
xor
mov
jecxz
cmpsl
adc
idivl
mov
xchg
push
sub
stc
dec
cmpsb
adc
mov
cmp
push
outsl
out
outsl
sbb
add
aam
mov
sbb
mov
and
ja
add
lret
cli
mov
cmp
jge
inc
cwtl
xchg
pop
lods
sbb
ljmp
adc
jbe
jb
pop
pushf
pop
ja
cmp
popa
out
cmp
push
and
sbb
fisttps
clc
call
adc
outsb
sub
inc
popa
jle
repnz
lods
aam
les
lret
insl
cmp
jp
cmpsl
decl
repnz
pop
rcl
lods
pop
decl
mov
fldt
sbb
outsb
add
cs
outsl
bound
push
lret
inc
push
xorl
test
adc
lret
jb
jge
ret
xchg
jne
or
mov
mov
push
pop
sahf
add
cs
enter
testb
fidivrl
and
push
test
sub
inc
xchg
decl
push
push
cld
cltd
fsubr
mov
fcompl
pop
xchg
clc
pop
cmp
ja
in
xchg
leave
sbb
pushf
ja
xchg
daa
fsubrs
mov
push
je
mov
cmpsb
mov
mov
inc
and
add
pop
xchg
out
das
cli
jne
inc
dec
xchg
loopne
cmp
sub
ror
call
jecxz
pop
addr16
mov
mov
push
sbb
test
outsl
ret
cmp
je
jbe
std
xor
mov
jmp
push
or
sub
jle
mov
cld
jge
or
lods
jmp
jns
lahf
mov
imul
lret
imul
outsl
hlt
out
mov
and
jno
repnz
sub
sti
loop
dec
pop
out
loope
pop
pop
xor
pop
das
int3
faddp
dec
dec
mov
push
add
pop
ja
push
fstpl
xor
adc
jne
call
icebp
inc
push
out
lcall
sbb
fcom
push
outsb
stc
js
testl
mov
aaa
shlb
mov
cltd
or
sub
pop
mov
fists
movsl
jl
add
jne
out
adc
out
cs
imul
dec
jl
jo
popf
stos
andb
ss
cmp
jge
arpl
mov
mov
leave
pop
call
pop
cmp
rclb
inc
pop
lcall
mov
dec
mov
dec
rcrb
aam
nop
jb
cmp
std
add
aad
arpl
pushl
sbb
les
xchg
mov
add
mov
icebp
lret
enter
mov
adc
sarl
out
repnz
sub
out
scas
fcoml
pop
pop
and
sahf
test
mov
and
fcoms
out
sbb
mov
popf
sub
movsl
pop
push
loopne
bnd
lret
scas
and
fcmovnu
xchg
xor
mov
mov
loope
outsl
gs
mov
mov
pusha
add
mov
push
dec
rclb
add
push
sbb
xor
jecxz
lcall
mov
jecxz
in
lods
push
inc
mov
js
aam
add
cwtl
inc
pop
outsl
adc
sub
jle
fcoms
mov
adc
dec
sbb
inc
nop
sbb
jne
dec
jp
leave
add
rcrb
cs
rep
jne
into
sbb
vmovsd
adc
das
pop
icebp
inc
lret
enter
mov
sbb
push
inc
imul
aad
cmp
test
fidivs
xlat
stos
jle
jmp
les
mov
xor
and
sti
add
cwtl
imul
push
mov
and
out
dec
movsb
daa
or
mov
mov
in
jbe
das
sub
mov
cmp
xchg
cltd
aas
inc
push
push
mov
inc
sbb
inc
out
sbb
push
shlb
xchg
movsb
ds
jb
push
mov
sub
mov
es
xchg
push
shll
adc
pop
addl
inc
js
in
cli
and
outsb
int
inc
add
es
sub
pop
pop
mov
dec
fildll
lahf
jg
ret
lahf
inc
cmovle
push
inc
rclb
fwait
and
repz
jb
mov
jl
push
add
dec
mov
xor
nop
jbe
stos
js
mov
jmp
lods
enter
adc
sbb
cmpsl
rolb
xor
jmp
test
cmpsb
roll
and
add
insl
scas
pop
lods
ljmp
cmp
enter
push
lret
fdivr
dec
sti
aam
rolb
repnz
imul
ja
and
sub
xchg
pavgb
mov
js
or
mov
dec
pop
mov
xchg
lods
add
cwtl
adc
add
movsb
sar
push
sub
pop
out
fsts
and
pusha
add
push
out
shlb
lock
rorl
cltd
pop
jp
ftst
jae
stos
nop
ljmp
xchg
aam
jne
lret
lahf
mov
or
in
movsb
xchg
lds
pop
inc
sahf
sbb
cmp
test
leave
loopne
popf
dec
sub
inc
push
gs
inc
jge
push
add
fcoml
dec
fisubrl
hlt
cmpsl
jno
mov
jo
adc
iret
inc
adc
jae
pop
in
roll
add
dec
xchg
xchg
add
sub
addl
adc
jmp
lock
jnp
pop
js
loope
inc
leave
repnz
lcall
pop
push
xor
mov
daa
je
mov
dec
mov
lods
xlat
push
pop
out
dec
and
aam
jecxz
push
mov
fs
adc
add
inc
stc
push
mov
mov
movsl
lods
leave
sahf
mov
sub
enter
mov
lcall
in
scas
sub
mov
je
in
aam
dec
in
xchg
pop
mov
mov
icebp
sub
or
mov
add
pushf
in
out
mov
mov
and
lahf
sub
xchg
mov
push
xchg
mov
out
fildl
add
cld
or
dec
xchg
in
mov
in
lret
orb
push
js
sarb
in
ud2
inc
cs
shlb
jae
sub
addl
popa
insb
sbb
cmpsl
mov
mov
test
cmp
mov
mov
das
jp
call
pop
lret
push
inc
mov
pop
inc
mov
mov
pop
stc
cs
mov
xchg
pop
lret
dec
hlt
outsl
out
sub
mov
jns
scas
sbb
movsb
clc
or
xchg
jnp
sub
xlat
sbb
enter
ds
mov
jmp
sbb
rorb
popa
insb
cmp
mov
in
jne
scas
cmp
movsb
mov
pop
mov
outsb
out
mov
movsb
scas
cs
std
cmp
cmp
inc
fisttpl
cmp
lods
mov
insb
movsl
adc
mov
dec
dec
adc
in
pop
aam
xor
insl
std
xchg
cld
sbb
fildl
inc
loop
loope
pop
add
js
xchg
cmp
fcoms
into
addb
lcall
in
mov
aas
mov
stos
lds
inc
icebp
mov
lea
xchg
inc
cmpsb
rcl
ret
push
dec
or
jnp
ljmp
jns
add
dec
pushf
push
mov
repz
jmp
sub
aam
outsl
pop
fmull
jmp
inc
insl
addr16
popa
cmpsb
cmp
mov
mov
testb
cmpsb
cmp
adc
jle
mov
mov
icebp
jmpw
popf
mov
repz
dec
lahf
into
jne
mov
jo
stc
xor
bound
mov
add
in
ss
or
cmp
or
outsl
shrb
dec
rorl
in
dec
cs
xor
fdivrs
orl
mov
push
in
in
lock
pop
xor
and
data16
scas
jne
xor
test
add
dec
pop
sbb
cmp
and
test
scas
xchg
sti
es
sub
movsl
add
and
test
fxch
inc
pusha
cmpsb
aas
sbb
imul
cli
mov
pop
pop
and
mov
and
test
xlat
lret
daa
add
mov
data16
sub
add
pop
aas
adc
je
jnp
mov
inc
ficoms
jl
test
pop
pushf
inc
movsl
push
dec
fadds
jno
jmp
push
outsl
and
ljmp
stos
es
notl
imulb
outsb
dec
jae
sub
inc
push
inc
loope
in
dec
out
adc
pop
xchg
out
lds
ss
rorl
rcrl
mov
data16
sbb
test
xchg
jge
jno
loopne
dec
mov
insb
push
sbb
fcmovb
push
pop
jnp
jne
int
adc
cmpsl
and
rclb
mov
andb
icebp
jg
outsl
jbe
js
out
adc
and
movsl
push
arpl
jnp
incb
stos
fdivrl
sub
adc
pop
mov
rcrl
fcompl
jne
mov
in
xchg
adc
adc
cld
js
subb
adc
addl
sarl
mov
mov
fbstp
std
loopne
cmp
adc
je
rorb
push
les
or
fwait
inc
pop
mov
jns
pop
arpl
fistpll
js
clc
dec
insb
push
cmpsl
inc
pusha
lret
jl
push
fstps
jnp
das
scas
add
jne
pop
shll
or
jb
leave
int3
mov
pusha
mov
pop
cmp
mov
xchg
jp
cmpsb
pop
mov
ret
push
cmp
jb
mov
push
sub
leave
nop
mov
sbb
in
cmp
ja
inc
fs
cmpb
insb
mov
dec
loope
rcrb
lret
mov
dec
ffree
loop
inc
repnz
std
adc
rcll
scas
sbb
nop
sbb
clc
fisttpll
mov
adc
movsl
mov
leave
inc
pop
popa
adc
jle
xor
dec
push
lods
mov
or
mov
lods
fistl
rcll
inc
inc
fsubl
push
je
cmc
xor
aas
notl
add
das
leave
test
add
xlat
in
push
shrl
icebp
mov
cmp
add
test
mov
int3
into
adc
jo
mov
fiadds
aaa
xor
add
cld
push
adc
ror
push
es
lahf
and
sti
leave
rorl
ljmp
cli
shlb
push
jmp
mov
movsl
sub
add
jns
and
mov
jne
pop
sub
mov
mov
dec
mov
sub
imulb
jbe
and
js
inc
pop
in
cmp
out
mov
inc
fwait
int
sub
sti
mov
mov
sahf
dec
call
test
lret
mov
leave
fnstcw
or
and
dec
adc
lds
jno
mov
or
xor
jg
and
enter
clc
sub
out
and
roll
lahf
testl
ss
adc
shlb
test
pop
and
sbb
lcall
xchg
lcall
xchg
in
into
fisubs
aaa
sbb
jmp
mov
lds
repnz
test
repz
adc
dec
or
xchg
mov
push
scas
icebp
icebp
rdmsr
sub
mov
aaa
add
outsb
movsb
jae
es
mov
icebp
sub
cmc
pop
xor
jmp
idivb
jbe
or
push
sahf
cmp
rcrb
jl
aad
outsl
xor
ret
mov
repz
dec
ret
js
nop
es
insb
les
push
fstpl
out
jb
mov
out
shlb
lea
mov
mov
cld
cmp
add
add
mov
mov
and
inc
and
movsl
decb
pop
jae
sub
xchg
mov
inc
sub
flds
mov
int3
xchg
loop
inc
sbb
gs
pop
mov
dec
cmp
mov
xchg
lds
xor
cmp
lods
pushf
nopl
dec
xchg
jb
mov
stos
into
mov
xor
mov
sbb
out
xlat
sub
ret
jno
mov
and
cmp
aas
cmp
mov
sbb
icebp
arpl
fistl
add
imul
icebp
icebp
sbb
pop
repz
js
mov
mov
sahf
insb
fisttpl
inc
xchg
lods
pop
jmp
lds
mov
jbe
xor
add
imul
fisubrs
jecxz
xchg
mov
nop
aaa
inc
aam
pop
je
stc
cltd
out
add
ret
repnz
sbb
lods
outsb
scas
fdivrl
push
mov
adc
enter
lea
cmp
in
push
stos
jp
daa
es
dec
push
shl
lea
addl
add
mov
adc
int
sub
jbe
adcl
push
sarb
lcall
and
ds
rolb
outsl
xchg
int3
pop
xchg
push
outsl
adc
les
leave
adc
lahf
ret
xorl
call
test
lea
imul
insl
pop
mov
int
mov
xchg
inc
iret
add
jae
mov
loopne
aam
rorl
ret
rorb
cmc
test
push
xchg
xor
movsl
outsl
int
repz
lods
repz
mov
cmp
mov
push
es
sbb
pusha
ror
cmp
inc
cmp
mov
cmp
push
mov
jp
add
mov
rcll
ds
pop
jg
notb
arpl
sbb
mov
xor
neg
js
rorb
rcr
cs
pop
pop
mov
les
into
xor
dec
outsb
mov
enter
and
out
push
dec
push
mov
cltd
sub
inc
jecxz
or
nop
adc
jne
in
pop
rolb
adc
xor
mov
mov
sub
pop
outsb
xchg
and
add
sub
mov
cmpsb
scas
add
lret
hlt
pop
test
hlt
and
hlt
lahf
cmpl
or
cltd
mov
mov
sarl
imul
mov
or
cs
xor
cmp
int
cld
mov
sbb
mov
adc
inc
dec
fwait
add
dec
and
iret
out
aas
sahf
test
into
xchg
lret
cmp
mov
mov
cmp
lret
dec
ret
pop
repnz
mov
push
jp
adcb
inc
jo
cmpsl
mov
cli
repnz
incb
xchg
inc
sahf
push
mov
and
test
sbbb
call
mov
cltd
lret
sub
or
xchg
into
dec
fmuls
leave
mov
outsb
and
add
add
test
into
scas
add
cltd
fists
xor
rcl
int3
es
jp
bound
dec
insl
fst
in
mov
adc
fwait
xor
or
dec
shl
sbb
xchg
pushf
jg
dec
mov
dec
mov
cs
mov
sub
sbb
ja,pn
push
dec
jne
in
and
cld
adc
push
and
pusha
repz
adc
outsl
cmp
push
mov
xor
jle
inc
cmp
cld
pop
push
mov
and
sbb
je
push
xor
ret
mov
push
jno
dec
jp
or
mov
jno
sub
mov
cmp
xor
ja
mov
les
sub
test
aaa
sub
ja
subl
mov
cmpsl
mov
push
inc
and
and
jne
pop
hlt
ret
xor
sbb
xor
test
xor
ret
test
or
mov
in
ds
ja
sbb
mov
rcll
orb
popf
popa
jbe
and
xor
mov
adc
jmp
fidivl
movsl
push
cltd
aam
out
sbb
inc
jge
rclb
push
mov
xchg
xchg
cmpsb
outsl
arpl
mov
test
inc
aaa
aaa
icebp
cmp
push
lock
mov
and
imul
fnstsw
std
cltd
xor
mov
movsb
push
sub
jno
pop
pushf
jmp
jbe
loop
inc
ret
rclb
int
and
push
daa
and
scas
jnp
dec
and
les
das
mov
cmp
or
data16
inc
xor
mov
mov
xchg
jmp
xchg
and
push
insb
cmp
into
or
jno
daa
scas
xchg
cmp
int
scas
clc
ficomps
flds
mov
out
xor
adc
out
sbb
push
test
aas
jno
loopne
outsl
leave
shlb
add
cmp
leave
dec
and
mov
lods
xor
dec
jecxz
pop
sub
int
rep
adc
mov
add
adc
push
in
arpl
jns
repz
cmp
pusha
push
mov
insl
fiadds
cmc
pop
cmp
loopne
sub
imull
ret
stc
fwait
mov
cwtl
or
jnp
dec
xchg
push
dec
les
xlat
xor
sub
repnz
addl
scas
scas
jp
out
dec
push
test
mov
dec
mov
repz
adc
push
push
ss
inc
mov
pop
pop
in
sbb
test
imull
and
and
pop
pop
out
lret
xlat
arpl
inc
in
test
andb
push
mov
sbb
sbb
jbe
sbb
hlt
psrad
dec
adc
es
sub
sub
popf
and
insb
mov
insb
lret
aaa
and
jnp
test
add
mov
arpl
stos
push
cmp
outsb
xlat
je
in
ret
push
pop
adc
adc
pusha
mov
shlb
inc
movsb
inc
aam
push
jl
cmpsb
lret
inc
daa
sub
cmc
sbb
test
add
inc
fisubrs
ja
dec
add
adc
adc
or
add
xor
sub
and
mov
arpl
idivb
aad
sbb
dec
dec
loop
in
mov
jno
lods
cmp
cs
out
popa
roll
mov
sbb
fwait
mov
mov
cmpsl
shrb
iret
sub
or
inc
pusha
sbb
inc
adcb
addl
enter
push
stos
pushf
rcl
scas
sub
pop
js
int
jae
sti
ret
cmp
inc
mov
inc
ror
push
sbb
ret
imul
cmp
push
or
enter
push
inc
rolb
inc
hlt
fnstenv
or
push
int
xor
rolb
push
shrb
leave
sub
pop
loope
sbb
mov
and
ret
imul
cmp
xchg
xchg
pop
stos
daa
cmc
cli
adc
sub
cmp
cmp
stos
mov
repnz
push
int3
ffreep
fwait
lret
sbbb
bound
xchg
inc
in
xor
xchg
dec
aam
add
loop
sarb
lds
insb
xchg
daa
jns
iret
mov
lahf
xchg
or
rol
nop
call
mov
xchg
test
movsbl
xlat
cld
mov
sbb
and
fsin
mov
cli
bound
jns
loope
mov
daa
inc
notb
jbe
enter
scas
lcall
int3
push
lahf
out
add
inc
js
fs
out
mov
insl
pop
jbe
aaa
sbb
xlat
fnclex
loop
ds
and
es
xlat
in
pop
pop
inc
sbbl
in
negb
cmp
jmp
jae
pop
lods
popf
jb
sub
aam
pop
add
inc
ja
scas
dec
mov
test
jg
repz
adc
addb
addr16
mov
jb
ror
push
sahf
daa
cmc
fcompl
push
repnz
bswap
mov
xchg
in
push
test
xchg
jbe
out
pop
push
sbb
fldenvs
and
scas
repz
push
pop
addr16
jnp
pusha
mov
jp
and
adc
cwtl
mov
loop
jbe
cli
jp
das
stc
cwtl
fwait
ljmp
xor
xor
push
aam
jne
lahf
xor
inc
insb
sub
and
aam
in
in
daa
mov
ret
nop
lods
jne
xchg
rorb
rorb
scas
mov
loope
lahf
clc
idivl
sub
sub
clc
push
jb
pop
mov
and
mov
out
addr16
jae
stos
jbe
mov
xor
nop
enter
icebp
mov
mov
imul
inc
and
rcrb
in
std
inc
xor
ljmp
iret
cmp
fs
in
lea
mov
pop
fidivl
ret
adc
xchg
call
push
loope
hlt
cmpsl
scas
or
adc
imul
xorl
hlt
jg
add
ret
out
jge
fldenv
and
or
js,pt
jbe
jno
xlat
ds
mov
sbb
lcall
rorb
mov
mov
xchg
les
and
adc
push
int
lods
jle
pop
inc
sub
and
scas
mov
filds
test
sbb
mov
push
out
bswap
mov
insl
xchg
pop
pusha
into
and
ds
hlt
sbb
xchg
or
out
pop
sub
mov
mov
clc
stc
sub
adc
and
jno
aas
arpl
imul
addr16
cli
jnp
mov
lcall
fidivrl
jp
adc
aaa
in
iret
inc
std
testb
data16
stc
imul
push
or
outsb
fs
xor
inc
push
dec
jp
in
xchg
dec
fwait
pop
dec
jbe
lock
leave
adc
ret
sahf
adc
inc
ret
in
and
xor
and
and
mov
jno
test
lock
mov
push
or
mov
sub
jno
cs
out
roll
test
or
fistpll
or
pop
cld
icebp
dec
jne
mov
repnz
sub
stos
dec
call
mov
and
and
xor
mov
mov
data16
in
or
idivl
out
adc
sub
mov
cld
cmc
fstpl
subb
ds
dec
in
movsl
sub
push
mov
std
lret
cmpb
xchg
outsb
setb
jbe
pop
or
pop
xor
insb
fwait
clc
push
fwait
adc
mov
rolb
mov
pop
ds
icebp
stos
mov
xchg
push
stos
sbb
cltd
ja
cwtl
jb
xchg
imul
ret
inc
hlt
pop
mov
pop
std
push
ficomps
pop
inc
je
fdivs
add
push
outsl
push
dec
loopne
stos
xchg
mov
popa
sub
mov
ja
xchg
aas
icebp
sbb
mov
adc
dec
and
int
cmp
bound
js
xchg
inc
insb
pop
in
or
out
xchg
loopne
mov
repnz
daa
dec
popa
imul
and
mov
sub
xor
aad
scas
and
push
jle
subl
sahf
pcmpgtd
aas
and
lahf
or
pop
ficoml
jno
pop
pushf
repz
pop
pop
cmp
add
stos
out
aaa
ja
pushf
cmp
nop
popa
mov
xchg
inc
sub
jl
mov
imul
movsb
and
xor
and
rcl
jns
push
mov
mov
dec
mov
clc
cmc
push
int
scas
dec
test
incl
inc
adc
jge
adc
cmp
lcall
jo
dec
decb
daa
jbe
inc
stc
jp
out
test
xor
jnp
in
sbb
and
inc
std
in
js
push
ja
sarl
lock
xor
in
cmp
sbb
dec
test
outsb
aam
sub
pop
cmp
cmp
dec
out
aad
cmpl
pop
shr
dec
inc
insb
pop
pusha
cli
push
daa
outsb
aas
stos
int
out
jle
stc
cltd
and
pop
add
mov
call
jno
adc
sbb
cmc
mov
lret
sbb
mov
mov
add
fstps
jl
bound
or
jge
in
fnsave
aad
add
or
xor
in
je
cmp
xor
xchg
int3
jecxz
pop
add
mov
cwtl
aas
lcall
mov
sbb
mov
adc
and
cmp
xor
add
push
add
jnp
cmc
aad
ljmp
mov
rol
loope
aam
clc
add
pop
sbb
loope
in
lods
cltd
xorb
stos
and
push
stos
es
sbb
ds
je
pop
sub
dec
push
ja
cmpl
xor
fnstsw
lret
mov
lea
pop
shl
or
add
mov
push
fnsave
test
jmp
and
xor
lods
inc
fwait
xchg
mov
icebp
inc
fiadds
sub
xor
mov
popa
or
mov
add
ss
in
jbe
insl
xlat
fwait
dec
outsl
mov
clc
into
cmpsb
je,pt
or
cld
into
cmc
cmp
mov
das
sahf
in
ret
cli
xor
jns
sbb
out
mov
int
sub
bound
push
dec
jge
sahf
in
popa
cmpsl
sbb
fcoml
or
mov
cwtl
rorl
pushf
in
je
jae
out
mov
ficompl
std
loope
es
repz
sar
je,pn
push
push
aaa
pop
jae
sbb
mov
rorb
js
push
sbb
sbb
and
int3
xor
and
stos
xchg
sub
pop
and
or
je
daa
push
sbb
jge
push
mov
push
inc
jg
sahf
push
test
testb
fdivl
in
rcr
insb
inc
addl
and
push
xchg
inc
lret
dec
mov
pop
xchg
inc
xchg
mov
mov
pop
mov
cmp
mov
or
shl
cmp
andb
dec
ss
jl
lods
xchg
mov
pop
jbe
cmp
jle
and
push
push
inc
inc
dec
sub
push
cmp
sub
sub
pop
mov
invd
jg
int
enter
lahf
shlb
mov
sub
test
cmp
sbb
xor
sub
ss
and
sbb
push
fistl
lcall
inc
imul
outsl
or
dec
dec
cmpb
lea
sbb
andl
xchg
aad
mov
lcall
cmp
inc
out
cmp
dec
cmp
jl
scas
int3
mov
outsl
add
xlat
mov
cmp
xor
fcompl
xchg
sub
mov
xchg
pop
ja
pop
dec
cwtl
ret
mul
push
cmp
jge
adcl
sarb
cld
out
or
adc
int
mov
shlb
xor
xor
sbb
fisubrs
outsl
pop
sbb
popa
bound
xlat
jmp
je
push
inc
add
inc
lret
mov
inc
dec
decl
adc
call
pop
call
arpl
pop
lahf
dec
ret
adc
fcmove
jmp
cmp
in
pop
scas
shll
mov
mov
inc
push
js
clc
xor
loopne
lods
fimuls
ljmp
sahf
nop
dec
dec
push
aad
dec
push
movsb
inc
repz
lret
es
stos
dec
mov
gs
loope
mov
std
xchg
mov
cmp
inc
pop
mov
mov
mov
add
lea
in
push
inc
cmp
or
inc
inc
insl
daa
das
in
push
adc
pop
inc
pop
mov
adc
add
mov
ret
cmp
fucomp
scas
test
xchg
inc
repnz
scas
push
ja
add
lods
int
lret
sarl
push
imulb
xor
xor
and
xor
mov
xorl
dec
fs
add
call
in
ja
xchg
out
push
inc
or
inc
inc
mov
xchg
nop
cmp
jle
or
jns
sub
jno
mov
leave
loope
sub
cld
sbb
jle
mov
inc
mov
stos
xchg
push
and
lahf
ret
in
dec
sbb
xchg
aad
xchg
push
loop
pop
je
mov
test
pop
pop
pop
int
push
cmp
aad
dec
arpl
mov
xor
push
push
mov
mov
inc
mov
dec
xchg
out
inc
je
pop
or
inc
out
cmc
cs
test
hlt
icebp
mov
cmc
sub
xor
int
push
andl
dec
push
int
imul
lock
daa
jb
or
cmp
mov
aad
cmp
fistps
subl
icebp
dec
cmp
xor
ljmp
addr16
decl
leave
test
pop
mov
and
cmp
adc
mov
mov
orb
xchg
jne
or
sbb
xchg
mov
sub
leave
gs
inc
push
scas
sub
jle
in
adc
mov
subl
jnp
popf
adc
mov
pop
pop
xchg
cltd
dec
xchg
imul
pop
mov
pop
daa
fdivrs
jmp
add
jp
xchg
jnp
es
sub
push
daa
es
xor
mov
mov
mov
xchg
icebp
push
out
ss
mov
add
mov
mov
or
mov
pop
xchg
out
js
imul
lods
cmpsb
int3
std
add
pop
shrl
repz
adc
outsb
and
xchg
pop
mov
inc
jle
into
inc
test
insl
js
jl
shlb
sahf
adc
sti
adcl
dec
pop
cmp
hlt
ljmp
xor
mov
inc
xchg
sarl
es
dec
mov
sbb
dec
ficompl
fs
push
xor
adc
test
cwtl
popf
enter
cmp
mov
movsl
inc
cli
jmp
push
pop
sub
or
mov
jb
jo
cmp
cld
sbb
test
out
adc
xchg
or
mov
leave
fs
push
cmpsb
push
aaa
xor
sarb
gs
mov
jp
nop
jle
test
jnp
bound
sets
shll
pop
adc
xchg
fmull
push
bnd
iret
add
pop
mov
jns
jns
and
xor
or
lret
or
mov
out
cmpsb
sbb
push
aad
bound
add
mov
mov
insl
pop
pop
mov
jmp
sub
pop
pop
aad
add
loope
push
sti
pop
popa
popf
pusha
loopne
or
fisubrl
mov
xchg
mov
cmp
jp
in
orb
sbb
cmp
add
aad
adc
or
scas
pop
jle
notb
enter
aas
je
lret
xchg
in
mov
fisubrs
xor
xlat
adc
adc
jle
dec
xor
inc
aad
arpl
int3
incl
cmp
jmp
and
movsb
pop
lock
addr16
xchg
popa
cltd
or
addr16
loope
cld
cmp
popa
ret
inc
enter
push
pop
cmp
std
dec
stos
decl
mov
pop
push
mov
in
cmp
fs
out
adc
int3
fwait
scas
adc
test
sti
out
pop
push
out
sti
mov
xchg
xlat
fisubrs
mov
negl
add
sbb
fidivrs
dec
add
add
fsub
scas
jne
pop
mov
mov
mov
jg
icebp
jge
cld
movsl
out
mov
dec
aam
cmp
and
mov
imul
shll
sbb
dec
ret
cmpsl
xchg
push
mov
sbb
sbb
xchg
xchg
ja
adc
push
xchg
xchg
cld
loopne
out
push
mov
push
xchg
push
jge
jmp
lret
sub
out
mov
std
lock
stos
sub
test
std
inc
mov
nop
sbb
mov
sub
sbb
clc
cmp
cmp
or
cmpsl
inc
jge
inc
pop
xchg
ljmp
and
inc
mov
sbb
movsb
pop
mov
inc
movsb
js
xor
pop
lds
jecxz
mov
aaa
sbb
out
inc
dec
xchg
out
jle
pop
fidivl
inc
test
xorb
push
mov
and
out
sbb
push
inc
jae
xor
dec
cs
push
arpl
lods
pop
and
push
sti
icebp
dec
aad
jae
in
sbb
cmpsl
xchg
push
cmp
lock
pushf
lret
pop
stc
cltd
or
loope
sub
fwait
jl
divb
adc
sub
fldcw
outsb
gs
repnz
in
push
in
lret
imul
arpl
insb
adc
dec
mov
outsb
mov
push
jmp
push
dec
enter
das
sti
lds
push
jnp
sub
lds
jae
shlb
xchg
fld
adc
rep
pop
add
xor
arpl
cwtl
and
pop
sub
and
icebp
dec
das
scas
test
pushf
pop
nop
cmc
lret
ja
cmp
mov
adc
mov
pop
pop
push
cwtl
mov
mov
int3
ficoms
mov
pop
scas
or
sbb
popf
mov
inc
cmpsb
dec
adc
xchg
aam
or
inc
stos
or
add
and
icebp
imul
xor
or
idiv
and
aas
hlt
adc
mov
push
mov
loope
sarb
fbstp
mov
add
xchg
xchg
sub
cli
adc
mov
push
fidivs
es
push
or
or
or
rcr
pop
mov
test
mov
pop
addr16
xlat
popa
call
dec
push
pop
xchg
mul
insb
sbb
ret
adc
jno
dec
jne
fiaddl
jmp
mov
xchg
sbb
pop
jp
test
and
push
iret
pop
cmpsb
or
xlat
dec
aam
xlat
les
js
and
and
out
insl
cld
inc
xor
fucomi
test
mov
fndisi(8087
xor
cmp
in
push
lds
aaa
enter
jl
xor
adc
cs
sub
jmp
mov
test
incl
mov
js
inc
ret
notl
jbe
push
mov
ficoml
adc
loopne
add
imul
dec
sahf
iret
aas
xor
or
aam
fbstp
lods
push
repnz
lods
adc
sbb
xchg
nop
pop
in
fistl
xchg
adcb
xchg
adc
xchg
scas
lock
or
or
into
mov
cmp
push
shrb
adc
test
fsub
divb
imulb
ljmp
gs
jae
add
mov
mov
int3
fiadds
mov
and
push
loope
das
adcb
mov
pop
fists
adc
popf
push
fidivs
mov
inc
adc
jge
cmpsl
add
mov
arpl
shr
push
aad
and
pop
jbe
dec
mov
icebp
jp
sbb
xchg
jge
repz
repnz
imul
cmp
lret
insl
or
ja
dec
fiaddl
in
dec
cmc
or
pushf
in
mov
inc
clc
lret
pop
add
in
lahf
inc
test
fcmovbe
mov
fldt
imul
mov
dec
and
dec
cmc
push
xchg
out
and
addr16
rclb
mov
mov
push
ja
lret
popa
xor
add
addb
sbb
bound
dec
dec
faddp
repnz
pushf
and
outsl
inc
sarl
mov
lock
add
xor
mov
xchg
and
mov
movsb
test
pop
adc
pop
pop
bound
imul
add
aas
inc
into
imul
cli
cmp
mov
std
test
dec
testb
pop
mov
add
or
xor
mov
sbbb
push
or
pavgw
mov
push
push
push
loope
int3
out
mov
and
adcl
loopne
pop
jbe
test
push
adcb
cmp
adc
xchg
sarb
adc
insl
or
sub
mov
sbb
pop
loope
ds
call
and
jp
dec
aaa
inc
ljmp
add
dec
adc
jg
jmp
cwtl
push
jl
fisubrs
sarb
jne
inc
sbb
sbb
sbb
jle
sbb
mov
ja
jg
in
pop
push
das
mov
ja
dec
sbb
add
mov
jo
loope
pushf
repz
jg
mov
and
mov
popa
out
rorl
xor
fmul
ss
fabs
rcll
lahf
ja
fs
cwtl
adc
mov
jno
mov
cmpsb
movsb
dec
pushf
mov
jbe
cmp
pushf
or
jp
cmp
lea
dec
pushf
movsb
mov
jno
mov
test
xchg
lods
in
mov
pop
js
sbb
mov
xchg
dec
ss
clc
and
sub
call
xor
fs
mov
aas
jp
imul
sub
adc
jecxz
push
xchg
shlb
pop
fnsave
lret
leave
pop
andb
push
sti
rcll
cwtl
push
fisttps
xchg
in
jp
add
call
gs
lcall
mov
lods
push
cld
out
and
aad
lret
imul
cmc
in
lret
into
or
adc
loop
fucom
data16
fistpl
inc
dec
lcall
mov
aad
adc
cmp
push
insl
ficoml
sbb
cmc
sub
jmp
adc
mov
rcrb
push
push
push
mov
push
leave
xchg
cld
xor
mov
mov
pop
cmp
mov
sarl
jmp
sbb
enter
push
mov
in
pop
pop
sbb
popa
push
xlat
sub
shlb
xor
xor
shrl
cs
mov
jle
mov
ljmp
jecxz
sbb
xlat
scas
ja
dec
mov
mov
out
xchg
or
cmpsb
testl
bound
pop
and
jecxz
sub
test
cli
add
dec
or
cmc
xor
fmuls
jmp
push
adc
bound
fidivrs
popf
sub
dec
sub
fwait
pop
test
arpl
xor
xchg
jp
movsb
ret
rorb
lods
and
loopne
or
loopne
pop
not
lahf
jno
inc
cwtl
dec
aad
scas
mov
add
mov
sub
iret
or
jmp
xlat
cmp
push
mov
int
push
push
xlat
push
push
ds
cltd
xor
fstl
fwait
sbb
movsl
mov
shll
push
dec
iret
ss
add
pop
jo
push
adc
and
push
shrl
lock
pop
test
pop
repz
loope
cli
filds
add
mov
inc
lock
daa
jbe
cltd
arpl
cmp
cmpsb
mov
mov
loop
fsts
and
xor
test
lea
adc
pop
lret
out
xchg
sbb
cwtl
mov
jecxz
push
xor
pop
xchg
push
jmp
fisubrs
test
mov
push
stc
cmp
shl
or
xchg
push
or
cmc
or
in
jmp
sbb
cmp
adc
xchg
mov
jmp
xorb
repz
nop
add
jecxz
pushf
dec
jb
mov
lods
xor
fcmovnu
inc
or
lds
add
push
lahf
xor
xchg
hlt
dec
dec
test
dec
mov
jbe
shlb
int3
xor
sub
stc
add
ficoms
mov
mov
test
sbb
cmp
jno
push
sbb
cld
jecxz
pop
pop
and
push
sub
jo
roll
pop
pop
std
repz
leave
sbb
data16
das
aad
sub
inc
ret
and
rcll
xchg
gs
lret
mov
mov
jnp
jl
pop
sbb
cmpl
cltd
lods
add
jnp
and
fmuls
jnp
test
mov
iret
push
fs
rcll
les
sbb
pcmpeqw
mov
xor
jo
std
jae
je
or
adc
or
sar
insb
ds
and
call
fidivrs
cmc
mov
ret
dec
or
add
sahf
sub
das
mov
xor
sub
out
ss
adc
test
xor
mov
adc
jo
adc
int3
mov
in
xor
cmp
shlb
test
cmp
or
repz
mov
es
pusha
outsl
jae
lret
xchg
push
jle
mov
leave
push
adc
repz
imul
push
sub
cltd
mov
inc
mov
es
loope
sti
and
cmp
mov
pop
sbb
mov
enter
enter
gs
call
cmpsl
inc
or
lea
jmp
jae
and
mov
and
stc
stc
into
or
ficoms
dec
jae
sti
push
dec
adc
xchg
iret
add
shlb
sahf
stc
add
pop
in
push
repnz
inc
pop
scas
icebp
dec
bound
movb
aas
test
mov
js
loope
and
mov
push
mov
mov
mov
popa
lods
cmc
cmp
mov
leave
jno
push
aaa
icebp
scas
mov
hlt
movsb
fcmovbe
mov
pop
pop
adc
mov
scas
data16
mov
mov
movsl
shlb
or
ljmp
dec
fdivrs
leave
mov
xor
ja
std
aas
inc
push
arpl
or
ds
outsb
js
lahf
push
add
cmpl
add
dec
ds
pop
ret
jmp
test
icebp
arpl
mov
lret
ljmp
mov
inc
lods
cmp
cs
push
dec
adc
fdivrp
inc
and
and
loopne
insl
mov
jmp
inc
mov
sbb
jmp
jle
sahf
rorb
sbb
xchg
jle
cmp
into
dec
into
out
shr
mov
sbb
jge
hlt
jns
in
insb
lods
xchg
or
add
paddb
dec
stc
shlb
test
in
adc
pop
add
nop
hlt
or
sbb
shrl
pop
sbb
dec
sub
jecxz
imul
sub
cwtl
dec
adc
js
sub
jbe
aas
adc
icebp
test
jge
push
in
shrl
call
xchg
jge
xor
flds
popf
lods
push
cmpsl
add
inc
xchg
stos
lods
jns
je
dec
push
data16
popf
jg
les
ret
mov
push
xchg
xor
outsb
mov
aaa
test
lds
cmp
cmp
out
or
aaa
movsl
sbbl
aam
cmpsb
xor
ja
lods
sbb
mov
nop
outsb
inc
xor
pop
repz
dec
fnstenv
add
out
es
sti
xchg
lcall
jne
xor
stc
add
sbb
sub
insb
add
sub
insb
ljmp
call
mov
and
das
std
mov
clc
les
adc
out
scas
push
aaa
push
mov
push
test
adc
push
lret
pop
insb
add
jae
cmp
shl
popf
or
ficomps
sahf
iret
adc
mov
fwait
pusha
push
mov
lcall
dec
out
lods
mov
mov
popa
sbb
push
fstpl
cmpsb
sub
das
dec
out
or
push
adc
cmp
pop
test
loop
xorl
stos
outsb
lock
ficoml
ret
cmpsl
movsb
xor
push
xchg
xchg
fdivs
orl
lods
pop
jecxz
test
cmp
inc
loope
fisttpl
test
imul
mov
xchg
cmc
adc
sbb
mov
sub
jbe
and
jge
inc
jl
push
enter
jge
lds
call
fistps
pop
xchg
inc
les
imull
out
jmp
lret
and
int
inc
pushf
jb
mov
xchg
insb
cli
mov
sti
rclb
mov
xchg
jmp
xchg
mov
stos
imul
ret
test
int
lock
pop
mov
es
sub
repnz
orb
cs
rep
pop
jb
fcoms
inc
xchg
fdivr
pushf
cmp
hlt
aaa
addr16
inc
inc
pushf
gs
cwtl
sbb
mov
out
push
add
fists
incb
daa
pop
mov
int
push
jb
mov
mov
jg
push
ljmp
inc
cld
cmp
sbb
pop
sub
ja
add
sbb
repnz
pop
ror
push
jg
shll
and
cmp
inc
or
jg
scas
push
cwtl
push
dec
xchg
lret
push
sbb
inc
jne
ds
xor
jg
mov
pop
cmp
push
add
shrb
shll
mov
dec
jmp
push
inc
pushl
mov
aad
ret
sbb
fwait
repz
jp
and
stos
les
push
push
pop
dec
or
out
rorb
scas
mov
outsb
arpl
in
lds
or
and
jnp
adc
ss
or
lds
pusha
adc
mov
sarl
cmc
jns
adc
xor
xlat
imul
je
push
jno
pop
stos
inc
leave
jne
mov
xor
xchg
fwait
cmp
leave
pop
scas
add
les
pop
sbb
mov
xor
push
and
cmp
cmp
push
sarl
addr16
push
adc
scas
loop
enter
fwait
jnp
dec
mov
mov
je
in
sahf
mov
mov
push
aad
cs
inc
out
ret
jnp
jnp
sub
pushf
pop
fwait
xor
in
xchg
outsb
or
push
stos
sbb
js
fidivs
test
mov
jg
pop
jle
push
push
push
sbb
fsts
test
rol
or
aad
pop
lret
in
pop
ffreep
addr16
cmc
in
test
jns
adc
fs
sbb
and
jecxz
in
mov
sub
jns
sub
repz
or
lret
sub
inc
into
fidivrs
mov
pop
adc
jbe
xchg
sahf
gs
jg
mov
adc
pop
scas
imul
cmp
adc
int
sbb
insl
fwait
ljmp
cmp
nop
adc
js
jge
cmp
mov
sbb
pop
xchg
das
sbb
test
dec
enter
adc
mov
mov
mov
arpl
clc
loop
fisttps
scas
das
push
sub
inc
push
cld
dec
mov
in
dec
sbb
jl
scas
out
iret
mov
add
cmpl
sub
test
mov
xchg
mov
imul
inc
into
sbb
adc
js
and
fsubl
repnz
jae
call
fcmove
mov
jge
mov
das
mov
mov
testl
iret
jle
aaa
mov
mov
add
and
ja
test
adc
jmp
in
out
lcall
pusha
mov
mov
fisttpll
nop
mov
xor
add
cwtl
xchg
pop
and
into
mov
into
sub
xchg
loope
std
stos
fidivl
push
inc
cmp
out
mov
add
popf
jno
gs
and
mov
hlt
shl
sbb
mov
pop
fistpl
dec
das
daa
xor
dec
or
sub
lcall
cmp
push
jno
lcall
fdivl
jne
add
dec
dec
mov
jge
cwtl
pop
lock
mov
mov
stc
jg
ret
stc
add
mov
dec
test
xlat
leave
xlat
xchg
iret
mov
xchg
mov
or
fs
cwtl
push
insl
or
sub
js
daa
mov
test
mov
movl
add
leave
push
jbe
inc
pushf
imul
insb
inc
repz
out
sti
mov
cmp
sub
stos
pop
out
xlat
out
das
dec
imul
push
out
cmp
sti
xlat
test
push
aam
pushf
xchg
scas
out
push
test
stos
int
push
xor
mov
stos
lret
mov
dec
cli
inc
cmpsb
sbb
inc
xchg
xor
jnp
fstps
sbb
loopne
enter
cli
int
xchg
test
xchg
lea
adc
xor
inc
cmp
xchg
je
popf
pop
cmc
adc
jmp
out
ds
daa
addr16
clc
mov
inc
jo
cs
adc
sbb
int
mov
add
xlat
ljmp
repnz
add
inc
fildll
aas
sbb
mov
mov
mov
fldt
pop
jae
stos
add
out
push
sub
inc
cmp
ds
jae
cmp
sub
jb
push
lret
xchg
ds
xchg
pop
inc
push
out
cmc
setp
pop
lret
adc
inc
ja
mov
or
pop
test
addr16
sub
outsl
les
pop
out
push
leave
pop
in
xchg
pop
mov
scas
cmp
inc
xor
add
mov
nop
incb
ds
mov
push
cltd
int
xchg
sub
push
rcll
push
ds
jae
push
outsl
pop
xor
push
lock
in
cmp
fisubs
push
int3
test
cmp
sarb
cmpsb
outsl
pop
lea
pop
dec
jo
out
xor
mov
pop
movsb
xchg
mov
or
call
sbb
addr16
icebp
fimuls
loop
ret
push
mov
lahf
push
out
andl
addl
cmp
cs
sbb
mov
sahf
lcall
das
adc
jmp
fdivs
shrb
rolb
pop
fwait
jge
sub
xor
adc
mov
or
icebp
fnsave
dec
xor
jns,pn
sbb
popf
shrb
loopne
lahf
cmp
sbb
mov
daa
repz
gs
js
mov
sub
jbe
xchg
dec
jb
xchg
leave
das
xlat
mov
daa
movsb
ret
jae
add
xchg
rol
icebp
sbb
loope
lods
lret
int
adc
test
mov
aad
ret
cmp
fildl
aas
test
sub
xorl
or
int
repnz
xor
call
fildl
sub
das
jns
rcr
stos
and
sbbl
shl
pop
mov
xchg
lods
popf
or
and
sbb
and
gs
jns
into
scas
lock
inc
sbbl
jp
xchg
pop
push
cmpsl
push
pop
test
sub
aaa
lock
ljmp
mov
les
xor
into
pushf
leave
loopne
loop
mov
jno
mov
mov
jns
stos
sub
add
mov
leave
stos
pop
dec
pop
or
idivb
sbb
out
or
add
push
imul
addr16
jno
sbb
jne
aas
mov
and
push
rcrb
add
addb
and
ret
xor
lock
pop
jge
cli
fs
scas
jo
cmp
adc
cmpsl
je
test
sbb
mov
xchg
sub
adc
dec
nop
test
mov
test
fildl
cli
out
mov
push
cmp
test
out
push
xchg
sbb
loop
rcl
aad
mov
adc
pop
mov
int3
sub
and
mov
pushf
mov
inc
adc
or
xor
stc
and
clc
sahf
push
pop
sbb
push
lcall
fnstsw
dec
aas
popl
std
pop
lds
popa
ret
mov
ljmp
adc
stos
adc
mov
push
inc
cmpsl
cltd
or
daa
inc
pop
out
and
out
daa
outsl
mov
push
adc
jecxz
sub
xor
imul
mov
mov
les
and
scas
pop
loopne
mov
mov
cmp
add
push
jnp
jmp
repz
fidivs
jg
ret
or
push
sbb
mov
insb
mov
pop
ss
ljmp
loopne
repz
aas
and
fld
cmpsl
repnz
xchg
or
dec
jne
fisubrs
fisubrl
mov
ret
in
shll
dec
aam
push
pop
rol
xchg
in
jno
test
test
cmp
mov
jge
cwtl
or
test
out
addr16
aam
ljmp
pop
jp
stos
mov
push
push
jno
jae
fwait
adc
or
minps
pop
xor
jo
mov
ja
xchg
ret
push
mov
sti
mov
pop
cmpsl
jmp
stos
sbbl
lods
mov
clc
or
pop
or
and
adc
mov
shll
jge
add
xor
sub
shrw
push
and
stos
mov
in
xchg
pop
rcrl
outsb
ret
dec
jo
cld
std
mov
fstps
push
scas
loop
fistps
out
arpl
cmp
fldenv
out
popa
push
int
sbb
popf
std
mov
sti
xlat
jb
jns
scas
icebp
pop
mov
decb
xor
xorb
push
in
cs
add
dec
divb
outsl
jno
cwtl
xchg
lret
pop
and
ret
out
push
dec
rdpmc
ljmp
dec
movsl
dec
popa
roll
pop
xchg
xchg
cmc
mov
shll
mov
test
cmp
js
jnp
add
out
mov
push
es
xlat
push
inc
add
fsubrs
subl
addr16
xchg
shll
xlat
mov
pushf
int3
adc
movsl
cwtl
ret
inc
in
jmp
xchg
cmovl
sbb
push
scas
dec
xor
ds
fucomp
push
mov
cmc
fs
ret
add
or
sbb
jmp
xor
cmp
adc
xlat
testb
clc
pop
jp
sub
xor
dec
xor
sub
mov
add
and
xchg
or
fmul
ret
es
pop
mov
xor
jl
jnp
cmp
mov
pop
adc
fldenv
int3
ds
mov
loope
fisubl
out
popf
jae
mov
inc
jae
shll
cmpsb
fsubrl
ljmp
push
in
nop
jb
div
int
arpl
clc
lahf
loopne
pop
push
adcb
xlat
scas
mov
push
hlt
negb
and
lahf
cmp
and
mov
cli
std
lds
out
inc
mov
sub
insl
and
lods
bound
into
cmp
ljmp
or
aas
sub
out
popf
sbb
outsl
stc
add
inc
mov
fnstsw
dec
jl
mov
jmp
mov
icebp
jmp
pop
pop
adc
jae
std
out
sub
sbb
mov
outsb
mov
leave
and
cwtl
jge
cmp
inc
or
sub
insl
in
lods
push
shrl
pop
jge
outsb
inc
scas
out
pop
xchg
lds
jns
fs
in
insb
shl
stos
lcall
ja
es
pusha
insl
loope
sbb
jge
or
push
es
push
lods
lcall
outsb
outsl
push
and
das
sub
adc
xchg
ret
gs
add
popf
test
dec
rcr
push
subl
jg
and
sub
repnz
lret
js
and
cmpsb
notl
pop
mov
arpl
sti
popa
popa
inc
jno
fucomp
out
icebp
cmp
xchg
adcb
push
dec
or
loopne
out
dec
aam
nop
sbb
mov
jns
arpl
sub
add
dec
dec
scas
push
pop
sbb
or
mov
cmp
mov
nop
cmc
fcmovne
mov
test
outsb
mov
mov
or
popa
mov
xchg
and
imul
jmp
neg
jo
cmc
into
hlt
push
mov
hlt
push
mov
mov
bound
enter
sub
lret
pop
dec
loop
jnp
sbb
pop
cs
dec
popa
fs
ja
inc
mov
pop
sbb
ss
xor
hlt
mov
in
xchg
pop
cmp
call
dec
enter
dec
cld
jnp
mov
in
sub
icebp
mov
or
cli
lret
inc
mov
push
add
call
mov
mov
fidivrl
sub
subl
jecxz
xor
loope
sbb
icebp
imul
leave
mov
sub
enter
ficompl
xchg
mov
jbe
jle
cld
aad
sahf
or
dec
adc
lods
push
sub
shl
popf
cmp
pop
and
repnz
insl
stos
lds
hlt
mulb
pop
cmp
scas
insb
movsl
rclb
mov
adc
mov
aas
daa
push
mov
cmpsl
sbb
inc
adcl
sbb
mov
xchg
adc
insl
sub
ja
dec
mov
js
lods
push
sbb
xor
pushf
insl
push
fwait
cmp
in
adc
jne
mov
testl
xchg
iret
iret
out
xchg
fcom
jns
cs
pop
lock
pusha
inc
lock
in
add
jne
or
sbb
out
into
js
out
or
mov
pop
jl
lods
pop
test
mov
mov
or
inc
mov
inc
fldcw
add
xchg
mov
xchg
scas
xchg
dec
and
lret
repnz
mov
scas
and
fldt
ret
dec
adc
iret
pop
lock
cmp
mov
pop
outsl
dec
leave
insl
loope
add
loop
popf
cwtl
mov
aad
xchg
pop
ds
dec
je
sbb
cmpsl
data16
inc
fnstcw
xchg
pop
ficoms
inc
sub
mov
insb
stos
xchg
inc
loopne
subb
mov
and
addb
pop
sbb
jge
dec
jp
dec
push
cmp
mov
into
push
xor
insl
dec
xorb
rclb
mov
adc
in
push
repnz
inc
das
mov
in
mov
daa
xchg
push
ret
loope
mov
xchg
stos
dec
mov
inc
dec
jne
xor
pop
push
xchg
xchg
push
mov
push
insl
mov
xlat
mov
les
xchg
rcrl
dec
out
mov
dec
xchg
mov
shl
jb
test
pop
and
pop
inc
push
dec
andl
or
popf
loope
into
or
cmp
add
mov
in
sbb
mov
and
cmp
lret
fstpl
and
das
sbb
imul
ss
xchg
xchg
ret
rcrb
mov
lret
pop
cld
adc
sub
scas
cmp
mov
jle
jne
rcl
les
gs
mov
std
loope
cli
repnz
inc
pop
xor
push
cmc
mov
xchg
div
mov
inc
stos
inc
xorl
pop
mov
pop
jo
adc
jmp
mov
fucomp
mov
shl
scas
inc
rol
mov
jp
mov
stos
pop
mov
add
mov
or
add
jne
mov
jp
push
aas
pop
mov
jb
repz
push
add
mov
aad
mov
sub
and
in
fnstenv
xlat
dec
xor
pop
mov
jp
pop
or
arpl
dec
cmpl
inc
arpl
ljmp
test
push
mov
add
xchg
aas
mov
xchg
int
or
ret
dec
xchg
imulb
ss
fs
inc
inc
and
stos
data16
mov
inc
test
adc
pop
mov
push
sub
aam
jle
sub
bound
popf
rclb
or
cmp
lods
jae
insb
adc
imul
lds
cmpsl
test
jg
inc
add
or
sahf
insl
pop
int
sar
in
dec
mov
dec
in
and
cmp
adc
inc
daa
pop
out
popf
pop
push
xor
loope
or
ljmp
add
pop
pop
ljmp
mov
cmp
aas
in
xchg
fistps
fmuls
and
pop
pop
aad
inc
xchg
inc
jo
xor
xchg
fdivrs
add
xor
pop
push
push
fmuls
dec
inc
push
sub
inc
add
add
sbb
mov
xchg
push
add
mov
sub
jns
scas
and
mov
mov
mov
outsl
dec
test
inc
push
mov
shlb
scas
dec
lods
adc
lods
push
addl
insb
vcvtss2si
js
push
nop
jmp
in
and
aas
shrb
jae
sti
push
in
stc
xchg
pop
inc
jp
scas
adc
mov
pop
pop
xchg
or
and
or
xor
and
pushl
ds
cmp
jo
xor
mov
push
dec
dec
sbbl
inc
popf
in
sti
add
std
mov
adc
shl
test
mov
jmp
cmpsb
ljmp
pop
pusha
insl
int
filds
lock
aam
stos
xchg
jnp
pop
aas
aam
mov
mov
mov
fcomip
fdiv
imul
mov
lahf
sti
aas
pusha
fnstsw
mov
xchg
das
push
mov
outsb
ret
push
cs
enter
stc
mov
rclb
negl
adc
nop
xchg
jp
cltd
add
jne
cmpsb
sub
in
lock
jne
xchg
xchg
out
mov
and
fidivs
mov
inc
sub
inc
push
sbbl
jnp
xchg
ret
dec
stos
insb
sarl
mov
dec
pop
daa
xchg
add
sbb
xchg
cmpsb
and
out
out
mov
sub
mov
inc
movsb
sarb
xlat
test
pop
xor
icebp
jns
xchg
je
push
cs
xchg
xchg
out
cwtl
inc
jo
add
or
inc
pop
clc
outsb
js
insl
push
sub
push
inc
xchg
add
in
jle
xchg
cltd
mov
jecxz
inc
cmpsl
sub
jl
sub
imul
shlb
call
dec
mov
inc
and
dec
aaa
inc
push
jbe
and
push
es
xchg
xchg
and
mov
ret
jne
push
mulb
and
sub
jmp
mov
xchg
jne
inc
movsb
insl
loopne
in
scas
popf
jns
lock
add
adc
jg
and
mov
push
inc
and
cmpsb
adc
cmpsb
loopne
pop
jno
cltd
adc
or
sbb
enter
in
loopne
add
popf
ret
ljmp
test
add
test
movsl
fidivs
mov
xchg
out
pop
sbb
pop
jnp
call
ret
pop
xchg
and
dec
sarl
bound
mov
out
mov
sbb
mov
fstpl
int3
movl
imul
xchg
lret
mov
fiadds
and
jnp
cmp
mov
jo
iret
rorl
adc
dec
mov
cmp
iret
xorb
imul
data16
insb
mov
je
rcrb
lods
repz
aam
insb
mov
ds
ds
fs
dec
pop
inc
add
xchg
push
cwtl
jae
pop
mov
lret
jle
mov
stc
test
in
mov
push
mov
sti
rolb
push
scas
call
ret
and
mov
aam
mov
xlat
pop
dec
or
outsl
mov
inc
or
shlb
cmpsb
pop
clc
repz
inc
pop
loope
das
xor
cli
dec
jp
cs
xorb
call
imul
cmc
scas
pusha
push
fiaddl
adc
mov
mov
mov
lods
iret
sti
jae
push
mov
das
loopne
fwait
out
inc
leave
andl
out
cs
mov
into
sub
movsl
lcall
scas
cmp
mov
jnp
fidivs
adc
sar
imul
popa
dec
bound
mov
add
inc
and
inc
fwait
ljmp
mov
es
ret
mov
ds
into
lds
cli
outsl
test
sbb
mov
aam
imul
pop
orl
push
movsb
add
lock
lret
xor
dec
mov
mov
mov
fsubp
adc
adc
popa
fs
test
add
pop
shlb
push
and
mov
xlat
repnz
or
outsb
ja
add
lods
das
cwtl
pushf
in
pop
adc
xor
aad
sbb
jmp
dec
dec
xchg
and
lock
out
push
dec
ret
rorb
dec
je
inc
add
lret
push
or
mov
dec
jae
push
cld
sub
movsb
dec
mov
loope
sub
xor
pop
mov
insb
jmp
clc
divb
sbb
inc
inc
mov
es
push
xchg
insl
pop
add
test
ret
dec
sub
inc
icebp
lret
pop
fbld
mov
push
or
ja
test
or
or
test
sub
lret
sti
es
std
mov
push
or
repz
lret
rolb
add
add
push
lods
mov
jns
loop
push
adc
movsl
clc
orb
in
jl
add
inc
ja
jo
mov
stc
inc
fs
cltd
imul
mov
aaa
test
imul
mov
mov
mov
pop
jl
mov
cmpl
adc
test
cmp
mov
inc
scas
jle
pop
popf
ljmp
adc
pop
add
repz
and
lahf
or
je
push
sub
sti
or
pop
mov
dec
cmp
or
xor
arpl
sub
mov
jno
fisttpll
sub
jne
lcall
in
out
dec
enter
aaa
inc
inc
imul
in
sub
inc
repz
popa
pop
shrb
rol
or
cmp
imul
pop
mov
rcrb
add
out
fstl
loopne
mov
mov
std
xchg
repnz
push
mul
dec
fs
outsl
mov
cli
inc
test
cmpsl
cmp
add
pop
rorb
movsl
or
jge
loopne
mov
mov
cmpsb
into
es
adc
push
sub
mov
jl
pop
ret
push
adc
nop
or
mov
in
jb
fcom
jmp
push
popf
push
gs
insl
std
rcll
mov
push
lods
pop
xchg
rcrb
jne
jne
popf
mov
ljmp
cmpb
adc
das
rcrl
popf
jecxz
cmc
cmpsb
out
pushf
stc
lods
or
sub
inc
enter
cwtl
cli
pop
xchg
sbb
or
mov
jno
and
push
push
and
sbb
imul
mov
add
add
push
cmpsl
add
fidivs
jae
pop
inc
add
xor
cmp
add
mov
pop
xchg
mov
icebp
repnz
and
int3
cmp
push
and
pop
lcall
add
mov
xor
inc
rcr
ljmp
mov
xor
out
cli
push
dec
xor
pop
movb
pushf
divl
cmp
ja
or
xchg
scas
outsb
sarb
jns
push
sub
xchg
nop
outsw
dec
push
int
fxam
mov
push
cmp
insb
cld
mov
push
shll
mov
ljmp
pop
push
inc
jae
jge
stos
add
sbb
sbb
pop
push
in
call
je
lret
or
or
aad
cmc
mov
mov
in
adc
loope
push
sbb
subl
jmp
xor
or
lcall
sub
inc
test
mov
push
mov
pop
pop
or
xchg
jnp
push
xchg
xor
cltd
mov
popf
fmull
or
add
ja
mov
mov
and
add
fistl
test
fcmovne
jl
xor
mov
insb
iret
mov
loope
mov
data16
dec
push
pop
push
fildll
test
or
add
sub
ja
dec
sahf
sub
inc
js
dec
data16
sub
mov
add
inc
pop
jbe
push
mov
adcb
inc
imul
nop
cmp
std
out
inc
xchg
out
mov
aam
push
sub
stos
jne
xchg
movsb
movl
dec
adc
roll
pop
sub
mov
shr
lods
pop
adc
nop
inc
dec
lea
or
and
mov
sbb
cmp
pop
xchg
fisttps
sbb
sub
push
dec
or
and
out
mov
jmp
aad
mov
cltd
shr
lret
rolb
or
dec
pop
lock
sub
out
xchg
aaa
lret
dec
out
test
mov
loopne
xor
rcll
cmpsl
in
dec
test
sbb
scas
add
sub
inc
jecxz
inc
mov
das
push
xlat
mov
mov
dec
mov
cltd
sub
xor
cmpsb
add
or
sbb
jmp
jno
push
cmp
adc
sub
clc
or
sbb
fistl
xor
adc
sbb
xor
inc
push
jecxz
xor
outsl
mov
ja
pop
and
out
adc
mov
jge
jg
mov
mov
daa
cld
xor
xor
dec
jp
outsl
test
cltd
mov
add
in
stc
add
cmpsl
cmp
pusha
pop
xchg
mov
shll
jecxz
sbb
jns
scas
loop
pop
outsb
pushf
xor
jecxz
jno
out
push
stos
fs
or
rcrl
xor
adc
adc
enter
sub
enter
mov
cmp
xchg
add
or
mov
mov
mull
or
xchg
lock
into
pop
sub
js
dec
fsubl
adc
outsl
imul
dec
adc
pop
pop
mov
mov
dec
shll
out
daa
bound
sub
fisubrl
push
dec
jo
and
sti
int
cmp
xchg
mov
pusha
mov
sbb
push
inc
push
push
pop
jl
ds
mov
ds
in
xchg
adc
mov
sbb
mov
mov
aam
cs
movsl
outsb
push
jno
test
loope
jge
inc
in
sub
xchg
sbb
scas
add
sub
leave
sub
je
adcb
xor
imul
bound
jbe
mov
je
lret
fsts
sub
lcall
daa
pop
jbe
inc
jne
aaa
or
pop
cs
inc
fldt
xor
pop
negb
inc
test
jne
stos
inc
jno
jae
into
imul
addr16
bound
fdivrl
pushf
pop
lcall
jmp
hlt
mov
in
sti
sbb
lods
fwait
or
mov
fxch
dec
sarb
inc
into
or
push
subb
mov
sbb
cmp
jg
xlat
test
and
rcll
movb
pop
inc
push
dec
scas
test
cmc
mov
in
inc
sbb
jge
sti
mov
rolb
inc
fmull
insb
mov
scas
cli
movsl
testl
adc
sbb
xchg
sbb
js
mov
add
mull
or
cmpsl
or
and
ljmpw
popa
ret
rorl
loop
and
mov
ret
add
adc
mov
sub
xchg
lret
pusha
or
test
push
xchg
mov
add
into
jae
xchg
repz
ret
pop
adc
mov
adc
mov
inc
cmc
mov
dec
cmp
xchg
fildll
pop
xchg
pop
in
mov
lcall
js
pop
icebp
cmp
inc
shll
jg
xchg
test
adc
fsub
inc
push
in
cmp
or
sbb
or
mov
decl
mov
jnp
sahf
lahf
sbb
xchg
out
xor
lret
outsl
cmp
jae
dec
cmpsl
in
loope
nop
sahf
hlt
pop
jle
and
mov
cmp
mov
lahf
fdivrl
sbb
pop
jbe
adc
dec
cmp
aam
clc
push
adc
lret
jg
lret
dec
aam
mov
rorl
dec
imul
lods
mov
adcb
aas
fmul
aam
inc
lods
mov
das
loope
cmpsl
push
outsb
xor
stos
loope
orl
arpl
inc
sbb
rcll
aam
sbb
fdivrl
adc
int
fmul
enter
or
cmp
mov
sub
sahf
adc
and
xchg
nop
jae
and
popf
mov
es
cmp
xchg
fldenv
ret
xchg
cs
shrb
xor
push
mov
sti
in
fsubr
and
dec
lods
nop
stos
ljmp
test
fcompl
or
push
dec
add
pop
outsb
and
jmp
jo
mov
sbb
clc
push
adc
jb
rol
mov
test
adc
inc
loope
in
dec
cmpl
imul
cmpsb
xchg
inc
add
leave
inc
shl
cmpsl
push
or
insl
jmp
pop
xor
or
push
jb
bound
xor
ds
cmpsb
mov
cs
xor
and
add
mov
mov
xor
push
mov
inc
jb
insb
lock
pop
adcl
adc
test
xlat
xor
ds
mov
loop
cmp
lcall
xchg
hlt
push
sbb
cmp
aas
or
cmpsb
out
fstpt
icebp
xchg
iret
loopne
icebp
cmp
or
adc
adc
adc
xor
out
fisubs
hlt
lahf
and
insl
cld
jmp
out
dec
fyl2xp1
test
mov
cmp
fistpl
xor
jmp
lcall
mov
sub
aaa
sub
stos
ffreep
dec
jns
jmp
orl
in
je
sahf
imul
cmp
and
adc
push
lock
ss
es
adcl
xchg
mov
std
or
movsb
and
loop
inc
jp
jnp
add
add
mov
int
sub
out
lock
mov
mov
push
sub
or
xchg
shrb
lcall
rorb
fistps
popf
sbb
call
jmp
andl
aam
sub
ss
mov
pop
dec
inc
push
or
fnstenv
jo
cld
stos
std
add
sub
les
inc
stc
and
dec
pop
xchg
adc
cmp
aam
outsb
mov
mov
insb
jmp
and
mov
in
ja
mov
or
pop
jne
hlt
xor
add
mov
pop
je
imul
or
and
xor
mov
pop
loop
testb
xchg
xchg
dec
ret
cmp
push
decl
push
data16
arpl
inc
inc
and
cmpsb
ss
lods
clc
decb
incl
xchg
enter
dec
mov
mov
loopne
cmp
jge
stos
out
xor
in
dec
leave
mov
out
push
cwtl
xor
lahf
cmp
xchg
ljmp
cmp
out
jecxz
cmp
movsl
stc
aaa
jns
sub
xchg
out
inc
rorl
cmp
icebp
mov
aam
and
out
stc
cmp
pop
in
jno
pop
inc
cmpsb
jmp
test
bound
or
cltd
jb
xchg
mov
mov
xor
mov
mov
ret
mov
xchg
jle
scas
mov
sub
out
adc
xchg
add
dec
jae
daa
push
dec
mov
push
add
jae
mov
incl
repz
lret
mov
les
insl
jmp
jmp
imul
sbb
xor
fmuls
mov
js
push
mov
push
sbb
adc
jl
mov
ficomps
lar
push
out
push
gs
mov
sbb
or
in
add
jnp
inc
mov
sub
push
les
jae
adc
cli
mov
loop
or
lods
xchg
repz
fbld
mov
pop
mov
jmp
fildl
sahf
out
mov
ret
pop
fimuls
ss
sbb
out
cmp
jg
mov
dec
and
call
insb
daa
daa
aas
lcall
pop
int
and
cmpb
push
jno
movsl
aad
push
frstor
cmc
inc
stc
out
inc
sbb
or
pop
cmp
xchg
inc
inc
cmp
inc
pop
jbe
add
jne
or
adc
xor
and
push
dec
insl
addl
loope
aas
mov
fwait
jo
add
repnz
inc
cmp
ljmp
mov
mov
push
xchg
mov
pop
call
adc
mov
push
nop
mov
xchg
imul
pop
cmpsl
pushf
mov
xor
adc
jbe
jle
lahf
notl
rorb
jnp
ljmp
push
stos
jge
xchg
mov
sbb
orl
mov
cmc
add
pop
les
in
icebp
fcoms
adc
jae
dec
sbb
add
inc
enter
lret
fsubrs
or
pop
mov
jae
pusha
sbb
rcl
xor
adc
cmpsl
push
mov
pop
movsl
movsb
mov
inc
aas
xor
stos
cmpsb
fildll
ret
out
push
and
scas
pop
push
sub
out
add
js
sbb
mov
frstor
mov
push
mov
test
xor
mov
pop
xchg
faddl
adc
enter
cmp
xchg
jl
mov
inc
xor
xor
mov
and
or
cmp
pop
lods
arpl
pushf
cltd
scas
pop
push
inc
and
push
out
or
lock
mov
mov
mov
inc
icebp
xchg
adcl
rorb
imul
dec
subl
int3
int3
sbb
and
mov
pop
clc
shl
fmuls
ss
imul
xchg
loop
mov
es
push
mov
xor
mov
call
and
pop
mov
xlat
mov
pusha
sub
clc
sti
cs
xor
xor
clc
mov
mov
add
ljmp
mov
inc
sub
aam
xchg
lods
imul
cmp
push
hlt
cs
je
and
stos
cld
int
ljmp
push
mov
aas
and
test
xchg
dec
sub
mov
xchg
push
push
stos
or
movsl
sbb
js
xchg
sti
ds
push
orb
push
adc
inc
ficoms
rol
ret
jb
jnp
shrb
leave
push
mov
xor
icebp
jae
loope
jb
pop
sbb
xor
pop
or
stos
jae
xchg
and
sub
jmp
out
int3
loope
test
mov
pop
inc
jae
fnstenv
inc
adc
pop
fldl2t
stos
mov
xlat
mov
loope
mov
and
aaa
mov
or
xchg
adc
repnz
pop
dec
aaa
add
je
imul
in
in
loope
inc
or
movsb
out
pop
popf
sbb
loopne
jno
out
and
xchg
jne
cmpsb
sub
mov
adc
test
je
push
loope
add
xor
or
xchg
adc
add
fdivl
repnz
pop
movsl
repz
cmp
xchg
and
rcll
jb
test
xor
xor
hlt
imul
fsubrp
addb
or
mov
inc
inc
fcomp
rclb
and
leave
jo
inc
mov
mov
jmp
jl
pop
cmp
das
inc
push
testl
out
jecxz
scas
stos
cli
adc
sub
inc
movsb
fadds
push
xorl
shll
test
mov
mov
and
pop
and
cmpsb
hlt
push
insl
in
adcl
jl
or
sub
or
mov
sub
lods
movsl
aam
imul
mov
divb
xchg
xlat
popa
rcll
add
shlw
test
jg
aaa
jecxz
call
jo
cmc
xchg
mov
repnz
push
push
repnz
jge
fnstenv
cli
leave
add
aad
int
or
aad
push
add
add
push
adc
or
mov
stos
add
out
sub
scas
data16
dec
cmp
lret
and
gs
jg
add
je
dec
ljmp
push
repnz
push
add
xchg
test
cmp
ds
leave
out
push
add
cld
stc
aaa
dec
repz
pop
inc
es
movsb
fwait
lahf
andb
negl
mov
xchg
push
add
fisttpl
inc
loopne
mov
sbb
fadd
jb
pusha
arpl
and
inc
stos
dec
jno
inc
xchg
inc
aam
cmp
mov
fldt
js
iret
sbb
dec
and
mov
or
adc
and
sbbb
js
in
mov
test
or
ljmp
cmpl
lret
dec
testb
pusha
stc
mov
mov
push
inc
outsl
or
push
divb
push
cmc
mov
mov
loopne
repnz
cmp
lods
in
addb
popa
sbb
je
movsl
dec
shll
aad
push
rcll
mov
repz
sbb
ja
and
add
add
push
xor
dec
sub
pop
repz
xor
mov
sub
mov
fucom
hlt
lahf
mov
pop
mulb
hlt
mov
je
scas
stc
scas
rcll
mov
imul
and
nop
pop
xor
lahf
mov
nop
mov
xchg
cs
test
std
jnp
xchg
cmpl
call
mov
inc
insl
insb
cs
jp
cmp
mov
stos
dec
mov
dec
jp
fwait
pop
inc
jg
roll
xor
jg
ljmp
pusha
cwtl
cmp
mov
mov
pop
xchg
xor
sbb
sti
out
mov
cld
outsl
test
adc
sbb
sub
les
test
push
and
stos
dec
xchg
inc
push
cmp
adc
mov
outsl
scas
inc
sub
mov
mov
shl
fcoms
mov
jle
mov
lret
dec
or
int
adc
mov
pop
pushf
test
pop
push
cmc
mov
arpl
andl
btr
dec
jbe
add
sbb
lods
stos
dec
outsb
loop
push
insl
inc
sbb
sbb
or
adc
jno
clc
and
sub
mov
outsl
fdivl
icebp
fcompl
int3
jge
mov
mov
inc
addr16
ljmp
out
sub
push
mov
scas
movsl
cld
xor
lret
sbb
push
lods
pop
adc
in
cmc
fnstenv
aas
lahf
scas
cmpsb
ss
cmp
test
mov
inc
aad
mov
notl
mov
adc
sti
mov
fcmovne
sbb
or
movsb
or
add
sbb
push
pop
pop
pop
pop
xor
fcoms
mov
jl
jl
sbb
mov
sub
jno
pop
push
mov
gs
sbb
pusha
int
pop
push
push
mov
loop
das
push
cmpl
out
in
cmpsl
add
lret
movsl
jns
ret
mov
and
enter
call
lea
mov
sub
lret
mov
mov
outsl
andl
push
aad
ret
lea
mov
jge
mov
jbe
jmp
arpl
std
inc
shll
dec
inc
jmp
iret
std
inc
mov
loop
out
arpl
pop
scas
arpl
mov
add
ret
je
je
inc
clc
scas
xor
mov
arpl
loop
inc
outsb
dec
les
div
ss
out
push
stos
mov
cmpl
loopne
or
cli
sbb
shll
arpl
cmc
inc
mov
dec
clc
int
sti
xor
ret
lods
add
dec
xor
test
aaa
lcall
sub
push
cmp
jnp
add
mov
lahf
lods
pop
sbb
ss
add
lcall
and
fnstsw
or
push
aas
xor
fcomip
push
testl
bswap
std
jle
inc
data16
btsl
adc
sbb
or
js
fisubl
sbb
xor
hlt
adc
insb
inc
jno
movsb
or
mov
leave
inc
aaa
fwait
mov
int3
xchg
sbb
adc
xor
mull
push
adcb
jbe
int3
adc
jle
add
or
cli
int3
mov
cld
into
inc
sub
fmuls
xor
in
lahf
pop
pop
add
setg
xchg
xchg
push
mov
pop
inc
fadds
jnp
repz
lcall
lret
popa
sub
push
lret
jg
movb
jne
pop
sub
out
sarl
xor
fs
repz
nop
pop
das
inc
outsl
scas
xlat
ret
cmp
sbb
sahf
inc
pop
rcrl
imulb
mov
xchg
add
inc
jb
xor
sahf
mov
insl
aas
dec
inc
out
push
sbb
dec
test
jb
mov
rcrl
add
scas
mov
fistpll
xchg
outsl
stos
fsubs
adcb
fistpll
idivl
dec
test
and
lods
adc
mov
pandn
ss
fiadds
insb
sub
in
xlat
mov
xchg
loopne
mov
jecxz
bound
loopne
ds
ficoms
adc
int3
mov
ja
stos
cli
mov
nop
push
adc
popa
xorb
enter
jnp
sbb
sbb
pop
fs
mov
in
sarb
lods
mov
jmp
shlb
xor
scas
cs
out
xchg
popf
ret
lcall
fst
push
dec
pop
mov
insb
inc
in
push
cmc
fbld
popf
not
movsb
jmp
pop
xor
jecxz
in
xor
nop
or
popf
dec
mov
xor
and
aaa
mov
pushf
fcoml
rcr
add
adc
xchg
add
int
sub
popf
in
mov
and
iret
jne
dec
popf
fsubrs
xchg
mov
movsb
mov
ss
mov
or
dec
add
data16
fadds
sahf
inc
cmp
pop
dec
push
push
jns
ss
dec
dec
jecxz
mov
mov
hlt
int3
and
mov
dec
xchg
and
jb
and
lods
lcall
test
scas
fldcw
lcall
int3
lds
adc
pop
stos
pop
jmp
xchg
leave
test
inc
insl
mov
lcall
in
scas
mov
dec
push
icebp
repz
xchg
fimuls
xchg
fiadds
sbb
sub
fwait
jb
hlt
cmp
ljmp
sarb
add
sub
repnz
test
aaa
xchg
add
inc
stc
lods
fdivl
sub
int
pop
and
jnp
mov
sub
dec
imul
das
out
fnstcw
dec
sbb
cld
jbe
lret
test
xchg
pop
sbb
popf
repz
xchg
push
popa
repz
int3
sub
mov
bound
xchg
cmp
jae
ror
repz
insb
ds
bound
adcl
cmpsl
xchg
ljmp
iret
sbb
mov
xor
sbbb
mov
aam
push
and
imul
into
aad
or
mov
mov
jge
push
adc
cmp
jns
scas
pop
sub
insl
enter
push
shrl
lea
icebp
call
mov
imul
sbb
loope
std
or
loope
mov
push
mov
push
jae
aam
add
jg
aam
and
inc
fwait
std
mov
xor
inc
ds
sbb
mov
gs
jo
in
and
out
xchg
or
jno
call
aam
cmp
sbb
int3
aaa
out
icebp
sti
jge
dec
lahf
arpl
call
hlt
xor
andb
xchg
icebp
scas
or
or
imul
push
sub
cmc
cmp
adc
out
daa
rep
ljmp
pop
xchg
pop
gs
pop
jmp
ret
sub
js
or
jns
int
mov
push
cmpsb
cmp
lea
or
or
xor
push
mov
and
cli
div
ja
das
fsub
xchg
aam
pop
ficompl
out
inc
scas
imul
cli
repnz
out
in
pop
loopne
and
ficoml
arpl
test
out
iret
out
or
adc
xchg
sbb
inc
mov
outsl
aas
jns
pop
fwait
jmp
inc
in
out
add
jl
fidivl
lock
sbb
mov
movsb
adc
push
xchg
inc
and
cmp
test
mov
jbe
mov
mov
mov
jle
push
lea
fimull
pop
ja
outsb
sahf
pop
sub
dec
adc
repnz
addl
pop
xor
stos
add
adc
sarl
push
ss
insb
push
cmpsl
dec
hlt
cmp
addr16
mov
cmpsb
fstpl
data16
add
movsl
idivl
movsl
lcall
pusha
push
pop
or
roll
in
cltd
dec
xchg
sbb
xor
sbbl
fs
jbe
and
inc
je
js
aam
mov
or
movsl
xchg
jno
int
daa
ret
stc
enter
in
loop
jae
sub
mov
faddl
mov
das
cmp
and
test
loope
roll
frstor
or
ja
lock
mov
dec
hlt
xchg
in
xchg
imul
pop
sbb
js
das
mov
inc
push
out
ffree
fisubrl
lcall
jae
cli
inc
mov
movsl
xchg
out
pop
cmpl
int
daa
out
mov
fcmovnbe
and
push
das
and
movsb
cmp
daa
mov
push
inc
imul
or
shll
sbb
mov
jb
pusha
imulb
pop
adc
xor
mov
mov
dec
aaa
xor
aad
outsl
xchg
ficoms
xor
and
sbb
sbbl
mov
sbb
addl
fistpll
xor
push
movsl
sub
push
xchg
sbbl
fisubs
or
movsl
and
xchg
adc
movsl
pop
std
push
enter
loope
jle
fmul
push
test
pushf
movl
jae
imull
movsl
std
fdivs
or
int3
daa
mov
xchg
mov
inc
mov
das
cld
mov
pop
es
shrl
cmp
in
lea
es
fwait
popa
imul
popf
and
ds
sbb
add
mov
cmp
jg
out
sbb
test
push
ret
xor
testb
dec
or
xorb
int
and
mov
orb
xor
das
mov
jbe
xchg
std
dec
out
push
clc
orb
mov
sub
aam
cmp
rcrl
sub
sbbl
or
or
sahf
lock
mov
scas
lock
push
int
data16
cltd
lock
test
cs
or
cwtl
sar
shlb
mov
leave
ljmp
outsb
test
mull
push
add
lds
and
xchg
jmp
push
ss
mov
mov
test
in
inc
dec
insb
and
inc
sbb
jmp
jg
test
rclb
clc
inc
dec
sub
movsl
mov
out
sub
dec
mov
sbb
pushf
jbe
iret
push
bound
jmp
cmp
rcrl
lods
inc
dec
sub
mov
add
xchg
adc
ljmp
sbb
lret
ret
sub
add
lea
mov
lret
xchg
in
cs
cmp
xor
xor
sub
or
out
mov
lods
xor
xlat
rclb
into
popa
sub
or
push
out
jo
ret
int
loope
mov
and
push
dec
mov
sbb
inc
sub
mov
movsb
das
pop
pop
shlb
pop
mov
pop
jl
sbb
pusha
loop
in
jns
or
outsb
rorl
push
je
lock
loope
mov
sub
cmc
pop
das
sbb
cmp
xor
daa
decb
popa
pop
jmp
jno
pop
jae
sbb
sti
and
adc
or
jbe
orb
jp
insl
pusha
mov
xchg
push
jp
lcall
sub
ret
pop
repnz
dec
dec
inc
adc
ja
push
testl
hlt
inc
fs
mov
icebp
adcl
mov
cmp
imul
xor
xchg
xor
frstor
and
daa
jl
repz
xchg
jl
adc
ficoms
jle
lods
xor
outsb
loop
scas
das
push
pop
xchg
in
jmp
inc
dec
ror
icebp
jb
pop
and
jnp
shlb
adc
push
inc
inc
pusha
jmp
mov
mov
js
clc
xchg
sbb
xor
jecxz
in
lcall
pop
push
stos
xchg
cmp
or
or
inc
test
out
adc
push
push
sub
fcmovne
fs
shlb
or
ja
das
nop
test
fdivrs
lcall
mov
fs
fisttpll
out
add
add
push
mov
mov
and
xor
add
xchg
push
lcall
gs
cmpl
xchg
and
add
test
or
xchg
shrl
xor
movsb
out
mov
mov
cld
pop
xor
sti
les
in
fistpll
fistpl
fwait
test
adc
xorl
cmp
popa
xor
sub
and
movsl
lock
lcall
cld
out
add
jo
enter
cld
pop
mov
aad
mov
add
ljmp
dec
fistpll
mov
and
hlt
repnz
adc
inc
and
ljmp
in
int
daa
enter
out
xor
sbb
xchg
xchg
add
mov
xor
rolb
jae
outsl
iret
pusha
adcl
mov
sbb
popa
mov
sar
ret
clc
and
gs
cmp
cmp
bound
imul
push
sbb
jg
movsb
and
cli
pop
hlt
enter
fldl
pop
pushf
sbb
mov
pop
movsb
lret
mov
pop
jmp
xchg
imul
addb
pop
cltd
mov
div
dec
clc
in
xor
cmpsl
repnz
xor
push
rcrl
mov
sbb
push
xorb
cmc
xor
or
movsb
les
cmp
jecxz
inc
cmp
cmp
lea
push
cli
xchg
ss
push
cmpsl
neg
lods
xchg
cltd
pushw
mov
loopne
jmp
xchg
addl
push
sub
cmp
and
test
adc
mov
mov
jns
xor
mov
inc
fiaddl
in
test
dec
pop
pop
and
xchg
jne
out
in
mov
push
and
fsubr
inc
lret
sti
bound
call
andb
mov
push
movsb
mov
fcoml
and
dec
int
sarb
in
mov
mov
sub
ret
cld
aad
clc
and
cmp
cmpsl
jecxz
test
int
push
pop
xchg
insb
add
nop
and
xor
daa
int
mov
dec
imul
mov
dec
bound
xchg
add
sub
and
mov
movsl
outsl
cli
push
xchg
inc
dec
xor
sub
daa
inc
js
sarb
out
xchg
lret
inc
sar
enter
cmp
cmp
je
fucomi
cmp
push
sbb
shlb
popa
adc
and
xchg
jg
xchg
aad
adc
jmp
fcmovb
inc
ss
lret
clc
mov
insl
sub
ret
dec
popf
scas
jne
inc
mov
imul
nop
xchg
mov
incl
sbb
aas
es
arpl
sbb
dec
lods
bound
xor
or
push
adc
clc
test
test
shll
xor
imul
je
lahf
add
add
imul
mov
dec
xchg
dec
jnp
jl
fs
fsubrs
inc
iret
push
cld
test
andl
dec
xchg
cld
xor
pop
jg
xor
fmul
cmp
inc
addr16
out
test
mov
ljmp
outsb
enter
push
sub
jae
out
adc
dec
sub
jb
fninit
mov
rep
mov
cmpsl
dec
adc
icebp
xchg
adc
jno
mov
cmp
icebp
nop
imul
mov
jnp
xchg
rcrl
icebp
xor
pushl
sub
push
or
aas
jg
adc
sti
repz
into
jnp
cwtl
push
fisubl
mov
loopne
dec
push
mov
jge
sub
fcompl
dec
call
fdivl
in
mov
stc
mov
ss
cmpsb
xchg
and
pop
sarb
popf
mov
cwtl
inc
xchg
jns
sub
xchg
mov
dec
sbb
outsb
testl
or
xchg
out
pop
pop
xor
xchg
mov
shll
push
pusha
pop
sbb
mov
sub
push
aas
inc
xchg
sub
or
fsts
mov
ds
add
or
xor
or
outsl
xor
stos
sar
iret
hlt
nop
or
clc
xchg
pop
sti
sub
or
and
add
jns
sbb
out
pop
mov
push
stos
dec
gs
repnz
int3
icebp
push
ds
add
or
mov
sub
jno
loop
xor
and
lahf
lret
mov
xchg
enter
xchg
sub
imul
loope
imul
push
imulb
mov
outsl
sbb
das
imull
and
data16
dec
mov
ss
cmp
popa
shrl
sti
stos
dec
dec
and
jo
sub
stos
jbe
cmpsl
outsb
aas
dec
in
and
sbb
fs
or
adc
int
aaa
ret
addr16
jle
mov
sbb
imul
adc
lods
push
popf
adc
sbb
leave
ret
mov
mov
test
dec
sahf
xlat
mov
es
cli
sbbb
sub
int3
push
push
repnz
rorb
and
add
inc
aad
daa
jl
outsb
sarb
or
cli
iret
mov
lret
subl
iret
mov
push
jle
ss
add
cmp
adc
push
js
add
and
sub
push
or
jns
stc
pop
push
call
pop
mov
scas
push
push
mov
addr16
ret
fbstp
bound
sbb
cmpsb
ficoml
sbb
pop
cmp
aaa
lea
mov
jp
sbb
sbb
daa
gs
fwait
pop
mov
in
repz
adc
xchg
das
push
inc
xor
push
rol
fcompl
iret
push
pop
daa
out
je
fcmovu
ljmp
push
or
ja
xchg
fidivs
sbb
out
out
adcl
add
lods
mov
out
fildll
out
cltd
add
insb
mov
jnp
enter
pop
int
adc
es
xchg
xor
push
aad
or
cmpsb
mov
pop
mov
dec
adc
push
pop
pop
add
mov
sub
mov
repz
daa
loopne
cmp
pop
call
mov
inc
sarl
sbb
or
lret
shrl
sub
cmp
or
xor
shll
ret
icebp
mov
sarb
call
sbb
pop
dec
cmp
jno
mov
add
movb
lret
orb
movd
cwtl
xchg
jo
ret
inc
push
mov
aaa
jnp
das
sbb
xor
inc
imul
xchg
popf
or
lret
xchg
sub
adc
aam
xchg
or
xor
loope
pop
add
sbb
adc
cmpsb
nop
xchg
fisttpll
fbld
inc
icebp
jge
xchg
test
pusha
ret
lret
mul
mov
pusha
mov
mov
rclb
and
aad
lret
divb
sar
mov
bound
shrb
cwtl
aad
nop
aas
decb
fists
jo
add
xchg
mov
fwait
add
test
jo
pop
arpl
gs
jae
jmp
inc
arpl
jmp
jecxz
clc
adc
adc
pop
fucomip
add
cltd
decl
lret
mov
push
push
xor
dec
mov
jb
aad
jmp
adc
push
sub
fbld
or
in
adc
fsubrl
or
jmp
fmul
mov
jno
cmp
pop
add
jnp
sub
les
cmp
inc
dec
add
in
inc
xchg
push
pop
aam
jo
cmp
sbb
out
dec
jae
gs
mov
jmp
loopne
les
je
inc
sbb
and
push
test
ss
fnstenv
sbb
inc
sahf
xchg
jecxz
mulb
cld
rep
sbb
pop
loopne
xchg
aad
cmp
in
push
or
or
in
dec
in
jo
hlt
movsb
pop
emms
or
div
pop
jbe
into
or
jne
shl
lret
scas
pop
sbb
add
in
movsb
pushf
outsl
shl
js
jno
flds
pusha
cmp
push
mov
mov
rorb
pop
mov
lods
cmpsb
lret
ret
pushl
ret
cmp
subl
lea
sarb
int
mov
xchg
out
xchg
xchg
sahf
fsubl
sarb
push
mov
std
in
or
xor
or
iret
fdivl
stos
inc
or
mov
idivb
lock
cmp
negl
push
in
push
shll
test
clc
jns
push
in
add
adc
jle
fildll
xor
push
sub
xchg
mov
sub
adc
cmp
jg
push
sub
mov
or
imul
loope
divl
lea
mov
and
adc
fstps
sub
repnz
sbbl
lods
xchg
data16
sbb
andl
cwtl
jae
sbb
cmp
push
add
movsl
pop
ljmp
dec
dec
mov
xchg
lea
data16
fstl
add
fcomps
inc
sub
das
mov
inc
sub
jl
daa
and
mov
cli
cmc
xchg
pop
movsl
test
into
rcr
in
xchg
xchg
pop
sbb
push
dec
into
push
insl
push
xor
into
and
and
jb
ljmp
xchg
insl
idivb
adc
xchg
xlat
jno
sub
movl
sbb
and
js
sti
push
je
clc
mov
dec
or
sbb
sarl
add
add
xchg
movsl
and
and
dec
lgs
adc
mov
popf
inc
mov
mov
jg
mov
xor
adc
nop
stos
gs
aad
pusha
or
sahf
lahf
pop
loopne
dec
fdivl
sbb
rcrb
loope
mov
cmpsb
inc
loope
pop
fwait
mov
fdiv
and
and
push
movsb
dec
imul
mov
xchg
and
mov
into
xlat
jecxz
out
jp
sub
ja
fwait
mov
xchg
sbb
les
pusha
aad
inc
adc
jmp
ret
push
int
fadd
mov
sar
sbb
mov
sbb
ficompl
mov
scas
mov
cmp
outsb
jne
fdivl
std
cli
daa
adc
inc
int
cmp
pop
push
sub
or
mov
addb
cmpsb
pushf
push
mov
cmpsb
push
iret
dec
pop
hlt
cmp
jp
into
push
pop
mov
lods
lret
insb
cmp
divl
int
mov
pop
test
stc
inc
lret
sbb
push
lods
cli
xchg
inc
imul
cld
lret
xchg
lods
mov
insb
mov
cmp
lods
adc
test
lahf
adc
or
stc
cli
mov
push
cmp
mov
sbb
mov
xor
xchg
add
call
test
push
int
popa
mov
adcb
stc
sub
and
push
scas
adc
pop
pop
fstp
cltd
add
push
push
in
loopne
ds
jne
mov
test
sbb
sahf
sub
sahf
mov
cmp
lea
xor
mov
pop
mov
arpl
arpl
jbe
add
or
movsb
push
fs
add
mov
push
lods
pop
jp
mov
add
mov
or
sub
movsb
lods
push
mov
xor
stos
cmpsb
shl
jecxz
and
adc
cmp
sub
loop
int
mov
jbe
scas
es
jl
xor
xor
leave
dec
addl
push
jo
push
pop
clc
xor
into
dec
test
icebp
rep
dec
xor
and
adc
inc
adc
cmpsl
call
iret
outsb
mov
pop
lahf
js
cwtl
mov
popf
ret
iret
imul
je
fs
in
adc
sbb
pop
out
das
shrl
js
cld
pop
mov
es
push
jbe
icebp
rcll
lods
fdivrp
adc
push
aam
loop
out
dec
imul
adc
lret
mov
fsubrl
or
sbb
dec
jmp
jo
xor
cmpsl
cmp
stc
testb
sub
cmp
enter
inc
xor
ja
int3
lret
pop
dec
movsl
mov
pop
push
pop
aaa
xrelease
mov
iret
xchg
lock
shll
inc
frstor
or
mov
push
test
push
bound
pop
push
in
repz
inc
test
aas
sti
inc
popa
stos
int3
lret
mov
xor
lret
pop
mov
sbb
sbb
inc
stos
pop
scas
push
and
mov
xchg
bound
filds
jbe
xlat
std
aas
inc
pop
rcrl
stos
std
fstps
xchg
lret
and
push
test
or
repnz
or
fbstp
sbb
int3
out
mov
sub
sub
shll
pop
lods
mov
in
push
lea
enter
les
imul
jo
movsb
dec
add
popf
mov
lahf
mov
lods
dec
jnp
inc
sbb
mov
push
dec
in
stc
pop
pusha
les
insl
into
cmp
pop
int
xchg
jns
mov
fidivs
mov
lds
sbb
mov
pop
mov
shll
sbb
sub
sub
sbb
push
test
sub
sysexit
lahf
ret
mov
adc
das
add
into
sbb
add
xor
mov
pop
test
dec
leave
cmp
dec
fistpll
lods
sbb
add
dec
jo
jnp
or
testb
jbe
popa
lds
push
cmp
xor
or
and
pop
inc
mov
jbe
push
mov
test
mov
dec
cmp
leave
sub
and
jle
scas
mov
jb
dec
jns
lods
or
data16
repnz
into
xchg
xchg
stos
insl
aad
clc
les
or
nop
xor
popa
mov
scas
pushf
push
or
xchg
addr16
adc
push
mov
outsl
push
dec
sbb
inc
popf
mov
js
push
lds
fcomps
sbb
xchg
inc
jnp
or
sbb
loopne
sbb
xor
sub
outsb
xor
lcall
jne
pusha
mov
test
gs
enter
lea
stos
popf
mov
cltd
sub
pop
popa
rol
pushl
xchg
mov
xor
or
mov
inc
in
dec
shll
mov
xchg
dec
aaa
fbld
sarb
jle
cmp
mov
mov
and
aad
js
mov
jmp
imul
mov
dec
adcl
sahf
cs
pusha
idivl
fistpl
pushf
fs
pop
shll
pop
adc
and
test
ja
pop
pop
jge
aad
hlt
es
adc
dec
nop
test
enter
or
iret
imul
cld
repz
add
lea
loope
pusha
push
lret
aad
ds
adc
in
mov
push
sub
or
rorb
fmull
mov
loopne
out
fs
lock
mov
sarl
icebp
fildll
test
dec
cwtl
dec
jb
arpl
jne
sbb
cmp
stos
adc
mov
scas
dec
mov
push
fbld
ja
cs
movsb
shlb
icebp
and
dec
testb
mov
cmp
push
or
out
sbb
xchg
popf
pushf
int3
flds
and
ret
dec
lods
loope
and
das
jo
xchg
push
pusha
call
lods
std
mov
dec
mov
xor
bound
cmpsb
ljmp
xlat
adc
mov
bound
jge
bound
out
repz
popa
dec
jne
lock
xchg
jne
mov
pop
fldl
fucomi
cmp
add
and
movsb
cli
testl
fidivrl
iret
lcall
int
dec
fiadds
cmp
sbb
ja
jne
into
pop
in
pop
js
les
jne
mov
xlat
add
adc
and
xchg
mov
rclb
insl
jae
mov
imul
sti
bound
inc
mov
xchg
cltd
ds
push
gs
inc
shr
cmp
jo
xchg
lock
enter
loope
call
inc
add
rorl
cmpl
pop
pop
mov
add
mov
push
in
mov
sub
in
cli
and
and
or
xor
std
mov
js
add
dec
inc
pop
inc
inc
inc
cmpb
js
and
fisubrs
mov
adc
je
jns
mov
jp
xor
pop
push
jg
lds
push
out
dec
mov
lods
pushf
xlat
cmp
insb
enter
and
iret
jle
jno
movsl
ss
lcall
cmp
jg
and
sbb
int3
inc
dec
popfw
cmc
sbb
subb
jl
or
das
mov
jp
mov
sbb
add
das
dec
mov
add
jmp
cmpsl
or
inc
fwait
dec
lea
jb
dec
sti
in
aam
sub
xchg
mov
ss
mov
fcoml
aad
cmp
out
push
lods
aam
ja
and
addr16
push
pop
xor
push
push
jo
mov
sub
dec
cld
mov
int3
xchg
aaa
jae
dec
repz
ret
cmp
mov
outsl
pop
cmp
stos
popf
mov
aam
pop
jmp
fldl
fisttps
sbb
xchg
insb
or
out
lahf
mov
outsb
push
test
clc
arpl
push
leave
add
shll
mov
jb
dec
sbb
push
add
inc
xchg
jno
mov
cltd
test
add
pop
cmpl
push
jae
test
test
jecxz
and
inc
and
mov
cmp
test
jg
inc
mov
rolb
lds
dec
sbb
push
lock
dec
test
adc
test
std
sar
and
sub
sbb
jg
jnp
std
and
loop
pusha
add
dec
push
into
jbe
pop
mov
cli
test
ja
sbb
cli
cwtl
mov
jmp
and
sub
xchg
daa
xor
movsl
lds
test
jecxz
data16
mov
xchg
sti
movl
push
mov
mov
test
popl
dec
lcall
cli
adc
into
iret
jge
mov
icebp
cltd
push
mov
aad
insb
pop
stos
nop
int3
or
iret
iret
divb
loop
bnd
in
xchg
pop
or
mov
dec
sbb
push
imul
inc
cmp
insb
or
loope
in
loopne
add
arpl
xor
lock
shl
aad
aas
xchg
repnz
pop
mov
mov
mov
cmp
push
sub
ss
call
cli
movsl
lods
stc
stos
call
ds
cmp
in
push
and
fs
mov
or
jbe
xchg
repz
popf
mov
cltd
xchg
xchg
mov
ret
imul
xchg
and
mov
fs
adc
xchg
mov
negb
jge
dec
mov
add
jbe
xor
loopne
fwait
pusha
inc
or
iret
xchg
mov
jns
out
jnp
pop
xlat
and
push
pop
fnstenv
push
dec
es
daa
fidivrs
cli
push
aam
mov
add
xchg
jno
repnz
enter
xchg
or
addr16
mov
mov
out
fstl
or
xor
and
mov
mov
push
test
xor
sub
push
pop
mov
repnz
push
inc
inc
cmp
xchg
pop
dec
jmp
jns
arpl
imul
sarb
push
dec
into
out
insl
es
push
sbb
into
dec
inc
test
jge
and
push
sub
mov
rolb
and
pop
imul
lret
divl
mov
enter
std
data16
cmp
icebp
or
out
push
fldt
andl
imul
pushf
mov
pop
adc
outsb
mov
addr16
inc
es
scas
rorb
adcb
frstor
xchg
sub
ljmp
cmp
rcll
xchg
lret
cs
mov
mov
mov
jmp
mov
fisubs
and
icebp
js
data16
in
jne
or
rclb
sub
xchg
xchg
mov
int
push
push
arpl
pop
jne
cli
cmc
out
mov
leave
jge
iret
sbb
lods
mov
jg
sbb
mov
mov
sub
sti
push
rorl
mov
or
pop
xchg
cltd
push
fldenv
jmp
push
pop
in
jb
dec
jno
lods
loopne
pop
or
xor
push
jg
mov
mov
arpl
adc
cmp
sti
jmp
xor
mov
push
inc
test
les
mov
or
out
rcl
push
inc
cmp
mov
cltd
shlb
jle
shll
lea
sbb
mov
jnp
mov
lods
das
mov
adcb
mov
aas
xor
fmuls
call
fmuls
dec
dec
int3
mov
mov
int3
test
aaa
stos
das
rcr
ljmp
ret
es
sub
push
dec
sbb
cld
es
xor
lahf
enter
mov
sub
lock
lds
sub
sbb
pop
jp
xor
add
dec
dec
fidivrl
xchg
dec
or
jb
test
mov
mov
sub
mov
shlb
add
lods
sub
inc
add
inc
cmpsb
jae
xchg
xor
rorb
ja
in
mov
cmp
in
jl
cmp
ss
lcall
gs
push
stos
jl
mov
jle
mov
lods
mov
insb
sbb
xor
arpl
adc
dec
insb
loope
add
leave
sbb
pop
lret
mov
ficompl
jge
sti
mov
popa
jae
sub
mov
daa
in
in
mov
nop
adc
pop
adc
sub
mov
dec
roll
jne
stos
mov
data16
mov
imul
pop
in
xor
les
jns
movsb
cli
jge
subl
fidivrs
xlat
shl
shll
mov
add
ds
shl
mov
adc
icebp
dec
and
pop
sarb
les
imul
pop
push
push
inc
mov
or
jnp
mov
adc
fimull
pop
mov
pushf
sbb
and
and
repnz
or
les
out
imul
mov
cmp
pop
loop
test
sbb
cmp
scas
enter
pop
mov
fstpt
ret
add
or
rolb
pop
pop
lods
xorl
mov
xlat
mov
jae
stc
pop
push
inc
and
xchg
data16
mov
ljmp
pop
jne
mov
xor
adc
jns
insb
repnz
sbb
dec
mov
test
pop
pop
repnz
pop
jno
add
arpl
roll
out
stos
push
rol
cli
mov
popf
mov
loope
in
fmuls
sub
cmp
push
xchg
aas
and
imul
stos
sub
or
jecxz
mov
pop
shll
add
insl
lret
mov
add
repz
movsl
insl
push
stos
movb
ljmp
inc
inc
fldcw
aad
xchg
pop
inc
adc
xor
jge
fwait
mov
sub
or
lods
push
scas
les
add
push
or
gs
scas
test
inc
out
cmp
roll
je
addr16
cmc
sub
out
in
subl
fimull
cltd
dec
cld
push
mov
leave
add
cwtl
pusha
dec
repnz
inc
dec
fs
adc
xchg
dec
push
push
call
inc
add
dec
cs
xchg
addr16
pop
jnp
mov
sub
xor
mov
gs
dec
mov
cmc
or
dec
ret
jge
and
daa
mov
inc
aas
lods
jg
ja
addr16
rol
or
sub
ljmp
std
dec
pop
xchg
sub
add
fsub
or
pop
testb
stos
mov
add
xor
daa
rcr
add
andl
add
and
adc
and
dec
call
in
aam
out
test
sti
clc
jmp
cmpsl
scas
jg
pop
addr16
xchg
hlt
test
loop
fmull
jmp
mov
add
mov
testb
inc
mov
push
sub
and
nop
pushf
lods
lods
jp
pcmpeqb
sub
into
shrb
enter
in
lahf
jmp
xchg
pop
ljmp
mov
xor
loope
add
dec
jp
xchg
cmc
aad
dec
pushf
inc
leave
adc
dec
std
mov
adc
mov
test
add
and
push
sti
mov
out
andb
xor
loopne
cltd
cltd
sahf
xchg
sti
repz
lahf
inc
xor
lret
clc
sti
rcrl
and
inc
mov
pop
xchg
dec
bound
sub
ds
and
add
push
xor
and
out
flds
fistpl
mov
iret
jl
int
lret
popf
inc
fistps
sarb
lret
repz
aad
gs
and
and
dec
cltd
mov
cmc
cmp
sbb
aaa
sbb
push
push
das
mov
pop
stos
adc
pop
mov
icebp
jno
dec
incl
movsb
rcr
insl
xlat
xor
inc
call
adc
adc
pop
in
mov
rcl
fmull
fildll
out
jbe
jnp
enter
fs
sbb
jnp
mov
mov
dec
out
xor
xor
mov
adc
push
xchg
fldcw
pop
xchg
add
leave
in
sbb
mov
mov
cltd
cmp
fcmovb
inc
or
mov
xchg
dec
jns
call
in
out
fldcw
jl
stos
test
stc
add
jno
iret
jbe
push
mov
cltd
xchg
test
and
jge
push
scas
daa
cli
test
xchg
pop
sub
out
cmp
ret
pushl
lret
jne
or
pop
and
imul
mov
jl
test
xchg
or
push
ret
into
scas
add
mov
mov
mov
outsb
aas
lret
dec
shlb
arpl
sbb
and
dec
pop
dec
dec
daa
std
sarl
adc
jp
sti
or
cmpsl
test
sub
xchg
shrl
fildl
push
enter
xchg
and
or
xor
jne
cmp
imul
imul
in
xor
pop
mov
add
sub
sub
xchg
pop
repz
inc
push
lock
mov
mov
lds
dec
lods
insb
mov
and
push
iret
mov
addr16
fs
sti
loopne
ss
aad
sbb
jb
lahf
adc
lds
test
add
xchg
imulb
mov
mov
mov
inc
enter
xor
pop
xchg
mov
shlb
push
mov
gs
outsl
in
cmpsb
imul
mov
mov
xchg
rclb
js
dec
jne
xchg
cli
pop
bound
imul
loope
jle
add
imul
rorb
gs
mov
insb
and
int
xor
mov
jns
xor
int3
out
inc
and
push
pop
xor
hlt
jmp
and
addr16
dec
mov
aam
mov
xchg
add
or
push
cltd
mov
adc
and
ret
call
lds
jg
cmp
adc
stos
shl
push
adc
dec
push
sbb
mov
push
jno
adc
fs
jge
cltd
xor
scas
fcmovnb
jmp
lret
inc
mov
jle
jmp
fbstp
mov
js
andps
cwtl
jg
ret
mov
and
lret
rol
or
inc
mov
shr
adc
fists
fldt
repnz
xchg
mov
pushf
sbb
sbb
push
inc
sub
xchg
popf
push
inc
jnp
stc
dec
in
leave
movq
sbb
jb
mov
cmp
or
mov
mov
mov
or
or
arpl
fwait
and
in
mov
inc
lock
xchg
cld
scas
daa
sub
jnp
xor
pushf
testl
xchg
mov
pop
fsubs
fldcw
push
in
ret
cmpsl
fimuls
fldcw
or
mov
in
iret
lods
mov
inc
cmc
movzbl
int3
mov
in
fldcw
and
loop
or
divl
fsubr
aam
out
cmp
inc
outsl
mov
sbb
sub
push
cmp
mov
aad
ret
lea
and
inc
jae
or
push
not
and
data16
rclb
mov
sbb
out
ss
lea
dec
lahf
sub
rorl
stc
pop
pop
sbb
popf
pusha
xchg
aad
pop
pop
lds
js
test
enter
inc
fildl
adc
and
jo
es
sbb
xchg
in
aam
sti
jg
jnp
push
sub
ja
scas
ret
inc
or
mov
shrb
cmp
dec
push
in
repnz
mov
arpl
jg
lahf
lods
gs
test
fdivrl
add
and
add
and
lock
mov
test
adc
cwtl
cwtl
push
fwait
iret
les
jg
pusha
out
out
adc
adc
testb
cwtl
test
enter
ds
cwtl
add
lods
cld
inc
adc
adc
pop
addr16
addr16
inc
in
loope
xor
adc
cli
add
in
adc
push
repz
mov
mov
outsb
inc
mov
inc
pop
in
mov
pop
stos
jg
fs
xchg
out
test
inc
std
push
cmp
inc
or
into
movsb
jne
mov
or
inc
rolb
rcr
outsl
movsl
pop
lea
push
test
pop
cmp
imul
cmp
aaa
xchg
fsubrl
xchg
and
pop
hlt
xchg
mov
mov
scas
in
xchg
sbb
les
fmul
xor
cltd
or
cmp
and
sahf
cmp
cli
loop
mov
stos
mov
lods
jb
pusha
sub
popa
leave
xchg
jnp
das
xchg
dec
mov
lea
outsb
mov
push
cmpsb
lods
mov
inc
test
imul
outsb
fnsave
adc
xor
lcall
pop
jne
fs
lret
adc
aad
sbb
jp
hlt
sub
push
loopne
hlt
xchg
stos
xchg
xchg
fmul
cmp
das
add
jb
jb
adc
xor
rol
cmp
lahf
inc
cmp
push
mov
pop
in
subb
or
fists
stos
sub
jge
jae
jne
outsl
popf
das
jb
mov
mov
sbb
lds
sbb
loopne
mov
sbb
mov
sbb
or
cmp
add
es
int3
lods
push
arpl
xchg
cs
jmp
outsb
or
int
movsl
sub
inc
sti
push
mov
jbe
xorl
jo
gs
shrb
adc
jge
call
shrb
lock
push
dec
jecxz
leave
add
std
repnz
inc
sbb
fdivrs
or
shr
mov
aaa
rorb
je
inc
and
xor
xchg
cltd
popf
movsb
cld
push
cltd
dec
add
nop
out
fisttpll
pop
dec
movl
sub
imull
xor
mov
ficomps
pop
jbe
test
sub
mov
sub
sbbb
adc
outsb
test
mov
cmp
test
ss
lcall
scas
aaa
adc
test
mov
nop
mov
out
push
arpl
push
mov
mov
xor
dec
jp
add
jle
jge
fmulp
or
sub
ds
hlt
mov
cmp
js
out
out
mov
sbb
clc
test
jecxz
bound
sahf
jb
pop
lea
adc
or
les
push
scas
decb
adc
imul
and
mov
adc
ffreep
dec
fcom
cmp
xor
pusha
ret
mov
std
pushw
popf
xor
sub
xchg
pop
scas
test
xchg
jb
push
lock
pop
or
mov
movsl
xlat
sbb
cmp
push
es
jno
push
lock
jecxz
mov
push
ret
and
adc
jge
cmp
loope
test
sbb
mov
add
jle
call
mov
sbb
ljmp
sbb
mov
testb
jecxz
ficoml
mov
pop
das
sbb
pop
jbe
xor
rcrl
sar
cmp
jecxz
mov
ds
mov
aam
mov
jmp
out
mov
xchg
add
into
out
icebp
out
pop
out
sub
mov
pop
inc
mov
fdivp
sbb
xchg
mov
mov
mov
sahf
jp
mov
into
sub
xchg
pushl
push
xchg
cmp
scas
ljmp
sarl
insl
pop
xchg
icebp
jne
mov
stos
lods
add
and
sub
xor
push
mov
mov
popf
stos
scas
xchg
stc
inc
push
lods
fwait
mov
inc
rcrl
popf
mov
into
in
sbb
negl
imul
adc
ss
push
mov
bound
mov
add
pop
pushf
pop
dec
xchg
lods
jno
test
setbe
add
xchg
pushl
out
mov
test
repz
or
inc
sub
scas
sbb
repz
mov
push
xchg
push
add
in
lds
popf
xchg
push
int
cmp
into
jecxz
adc
outsb
nop
jp
imul
in
test
gs
das
fldcw
mov
test
inc
mov
cmp
sbb
in
inc
push
mov
or
call
jbe
cmpsl
ds
aas
int
dec
shrb
out
sbb
mov
mov
cmp
icebp
cmp
shlb
cltd
into
cmpsb
mov
scas
iret
mov
outsl
add
jp
mov
outsl
sar
test
jnp
sbb
sub
cmp
or
mov
xchg
movsb
xor
movsb
cli
sub
dec
adc
add
ljmp
fwait
idiv
repnz
mov
dec
jae
jno
xor
pop
push
add
pop
jo
ret
dec
sbb
mov
cmp
lods
push
pop
pop
stc
xor
pop
add
jnp
xchg
or
or
xchg
lret
mov
fsubl
mov
lock
adc
push
lea
cmp
inc
pusha
inc
pusha
xor
pop
push
adc
js
mov
add
push
inc
pushl
pop
add
adc
push
push
out
fisubl
push
lahf
and
pop
fcmove
push
cltd
fisttps
les
push
xchg
std
push
cmc
iret
add
nop
adc
stos
std
cmovae
daa
imul
fwait
cmp
xchg
cmpsl
sbbb
add
int
lds
push
lahf
imul
es
mov
pop
inc
xchg
mov
cmp
cwtl
out
imul
sti
dec
rorl
pop
lea
or
push
decb
dec
insb
and
loope
fnsave
adc
or
out
mov
push
loopne
shrl
lea
xchg
or
testl
ljmp
mov
cmp
mov
loope
rcl
idiv
mov
add
jl
fstpt
popa
jp
cmp
sbb
push
popf
dec
mov
cmc
xor
jg
cmp
rcrb
std
xlat
push
stos
icebp
movl
repz
aas
or
inc
mov
adc
jnp
loop
fistl
adc
mov
cmc
mov
scas
add
jecxz
mov
jecxz
mov
addr16
jle
loopne
mov
mov
cmp
imul
sub
subl
popf
adc
addl
xchg
sbb
pop
aas
enter
clc
or
enter
ja
push
pop
push
icebp
imul
pushf
or
mov
mov
mov
clc
jg
mov
xchg
xchg
notb
push
std
xor
stos
pop
sub
cmp
adc
repz
jecxz
test
loopne
pop
jecxz
mov
outsb
fildll
data16
xchg
test
pop
insl
add
stos
mov
and
out
ds
icebp
das
add
outsl
es
ja
test
pushf
mov
mov
or
ret
mov
ficomps
cwtl
jne
mov
sbb
jp
popf
getsec
dec
addr16
mov
in
jmp
imul
scas
xor
sbb
lods
jle
daa
mov
outsl
xchg
and
and
or
mov
mov
xchg
sbb
scas
mov
jno
and
xlat
es
mov
in
push
add
gs
in
jne
jp
sbb
call
pushf
sti
xchg
mov
jmp
cmp
cwtl
out
sbb
push
jg
pop
mov
xchg
mov
aad
fmulp
xor
jns
cmp
hlt
lods
int3
inc
sub
pop
lock
add
push
mov
mov
outsb
add
xchg
insb
xlat
incb
xchg
icebp
mov
jno
jmp
adc
lock
cmp
nop
adc
popf
in
adc
test
pop
stos
cmp
fwait
pop
adc
aam
jae
pop
jmp
push
dec
mov
jge
push
lahf
xchg
jmp
movsb
jle
fwait
dec
xor
in
sbb
mov
movsb
mov
inc
pop
into
adc
cs
mov
jbe
jmp
xchg
fsubl
pusha
and
outsl
add
dec
lcall
xchg
nop
and
jnp
xchg
in
subl
push
pop
add
stc
andb
nop
imul
nop
mov
js
mov
mov
insl
sti
sbb
sub
jmp
sahf
mov
cmp
cli
lods
and
mov
pop
in
cmp
push
cmpsl
add
ds
dec
jns
push
js
dec
or
mov
rclb
dec
sub
dec
test
pop
or
adc
sub
or
dec
dec
inc
nop
push
in
in
pusha
jo
pusha
or
shrb
enter
fcomip
mov
test
dec
fiadds
data16
lods
push
xchg
push
mov
sahf
mov
sbb
ficoml
rclb
xor
in
in
cmp
mov
xchg
gs
insl
mov
fistpll
xor
pop
push
cmp
cmp
and
sub
fcoml
xchg
loopne
jmp
fwait
aas
jo
lahf
jbe
and
sub
adc
ljmp
xlat
fwait
cmp
fcmovnbe
fmuls
cmp
cmpsb
mov
pushf
insl
push
test
push
adc
popa
and
xchg
mov
repz
mov
inc
cmp
test
inc
cmp
push
cltd
inc
xorl
sub
cmpl
rcll
rorl
sub
pusha
mov
adc
xchg
cltd
cs
dec
cmp
out
insb
movsl
je
pop
sub
pop
js
mov
js
enter
cmp
cmp
sbb
push
bnd
inc
aam
lret
sub
or
sub
mov
mov
jmp
jmp
cld
mov
cmp
push
mov
jp
xor
mov
dec
push
pop
push
daa
pushf
and
aaa
and
scas
and
sub
cwtl
movsl
pop
inc
cltd
adc
pop
mov
clc
xor
outsl
push
call
sub
movsb
frstor
out
xchg
push
jno
sahf
pop
sbb
je
sbb
das
mov
jno
mov
insl
sbb
cmp
xchg
int
sub
dec
inc
lea
mov
rol
jle
xor
mov
das
add
sbb
enter
sarb
push
or
and
and
ss
jg
ret
movsl
outsb
mov
mov
ret
ss
xchg
cwtl
mov
cmp
xor
jmp
outsl
ljmp
fwait
out
or
push
inc
or
fwait
pushf
lcall
nop
popa
and
jg
pop
arpl
arpl
or
add
ret
mov
aad
sti
inc
lds
nop
test
xor
add
mov
insb
jne
push
mov
push
add
imul
inc
xor
test
lods
es
stos
dec
add
mov
ljmp
pop
jne
pop
push
mov
sub
es
mov
scas
or
arpl
aas
xchg
push
xor
insl
push
test
lods
imul
dec
ret
sub
mov
ja
aaa
jb
aam
test
pop
imul
fnstenv
test
sub
inc
lcall
fwait
jmp
pop
rol
imulb
xorl
je
sbb
popa
mov
dec
ret
ljmp
mov
inc
imul
cmp
ret
repz
jo
aaa
jno
clc
out
mov
inc
push
adcl
loope
mov
cmp
dec
pop
xchg
mov
cmp
fisttps
orl
sub
jge
jp
subb
out
or
pop
mov
mov
jb
loopw
jns
sub
ss
fld
jecxz
fmuls
in
ret
imul
dec
dec
add
mov
mov
add
aam
cwtl
mov
push
inc
xor
out
cmc
sti
pop
push
adc
ja
test
lret
adc
sub
or
jns
aas
clc
jge
pop
sbbl
aam
and
pop
xor
or
orb
arpl
ljmp
aad
mov
sub
les
sub
push
jbe
nop
mov
out
test
dec
push
aaa
mov
aaa
xchg
fistl
and
and
in
mov
mov
adc
adc
clc
fwait
movsb
gs
popf
lds
pop
pop
xchg
sbb
sbb
sbb
pop
xor
pop
push
dec
dec
and
mov
rolb
stc
hlt
inc
or
push
andl
dec
shrb
pop
cmp
pop
xchg
jnp
xor
rol
orl
push
mov
add
push
pop
pop
mov
xchg
stos
mov
pop
cltd
out
adc
adc
push
and
mov
or
xchg
sahf
sti
push
outsb
mov
into
xor
inc
or
dec
push
ds
shrb
adc
jl
cmc
pop
or
outsl
mov
lret
dec
add
mov
mov
push
subb
std
add
push
xor
insb
jecxz
cmpsb
imul
add
and
pop
addr16
scas
xchg
mov
rcl
xchg
mov
mov
imull
xchg
add
loope
inc
rorb
lahf
mov
in
orl
xor
movsb
xchg
pop
mov
jne
cwtl
fwait
pop
cwtl
adcb
call
ss
sbb
rcll
sub
lcall
adc
xchg
in
das
pop
mov
in
in
mov
mov
cld
or
pop
mov
pop
mov
subl
add
pop
jge
cmp
inc
mov
stos
movsl
sub
daa
inc
dec
push
dec
lods
je
xchg
imul
sti
pop
pushf
push
rolb
test
pop
pop
jns
or
push
dec
movsl
mov
add
loop
cli
xchg
daa
pop
jne
vpavgw
movsl
inc
lods
fwait
shlb
loop
jmp
jbe
push
in
das
movsl
cmp
repnz
iret
loope
sub
mov
pop
dec
nop
jle
inc
dec
divb
pop
jge
shl
inc
into
or
pop
les
xchg
xlat
ljmp
lahf
test
xor
cmpl
cmp
test
in
shr
mov
cmp
ljmp
fwait
cpuid
jnp
mov
mov
ss
dec
xchg
test
rorb
sub
notl
xor
mov
les
push
cltd
les
add
xchg
mov
stos
lds
or
or
rolb
adc
pop
rcrb
push
jge
mov
iret
push
in
mov
dec
jecxz
es
add
xchg
fcomi
loope
mov
aam
cmp
and
jp
shl
ja
mov
shll
aas
sub
xchg
jne
fistpl
shlb
xchg
add
cmp
insl
push
clc
scas
xchg
dec
popf
jmp
sbb
and
jg
jg
lods
int
jmp
push
adc
adc
int3
arpl
movsb
jge
mov
mov
lret
xor
cmpsl
cmc
xchg
cld
dec
sub
adc
stos
jmp
xchg
dec
daa
jno
paddw
pop
pop
xchg
jne
xor
push
sbb
xor
dec
adc
push
mov
inc
cmp
aad
out
push
cmp
aam
gs
cs
mov
add
pop
pop
inc
push
shlb
cmp
sub
cs
fwait
repz
add
push
xor
cld
in
lock
sarb
cmc
mov
aaa
dec
mov
stc
mov
popf
jns
jmp
push
pop
popf
inc
addr16
gs
jmp
jno
mov
ret
fiaddl
shlb
push
mov
sarb
dec
por
mov
mov
sbbb
push
xchg
loopne
movsb
jle
pushf
pop
and
pusha
icebp
xlat
cmc
ffree
cld
popf
push
inc
xor
jbe
push
lahf
ja
jmp
and
dec
inc
sbb
inc
pop
sbb
xchg
fsub
fstpl
mov
mov
xchg
rorl
ret
sub
sar
jns
jns
decb
sarb
adc
jo
fs
lret
mov
sbb
stc
inc
xor
sub
mov
jge
out
shl
lret
pop
dec
das
add
and
dec
xchg
jb
ret
cwtl
out
xlat
jbe
mov
pop
testb
mov
idiv
or
jbe
imul
aaa
xchg
adc
ja
pop
dec
je
mov
rolb
xor
mov
das
sub
addb
and
lds
aaa
inc
loope
inc
cwtl
add
cmp
cmpsl
fisubs
dec
std
mov
jmp
mov
mov
testb
out
add
xchg
lods
jne
mull
push
jmp
inc
mov
push
es
sarb
xor
mov
jno
add
mov
mov
push
ret
jge
pusha
pushf
icebp
ds
sti
rolb
je
cltd
stos
aad
jp
or
dec
ljmp
add
cmpb
sbb
sbb
sub
sar
aas
fcom
mov
stc
jbe
sbb
push
outsb
push
xor
test
pop
mov
andb
fisttpl
out
int3
fisttpl
in
shll
mulb
or
ret
in
mov
push
push
sbb
mov
dec
cmp
push
jle
fstl
push
test
xchg
ss
xchg
xor
sbb
lods
orl
stc
negb
pop
popf
loope
test
jecxz
pop
jmp
and
push
stos
dec
lea
into
shl
in
xor
bts
push
and
pop
sub
in
pop
mov
xor
jo
ds
std
add
jge
lods
fadds
jle
xor
jp
fisubrs
aaa
mov
ror
cmpsl
mov
mov
outsl
hlt
lea
and
dec
arpl
inc
mov
push
lret
inc
aaa
jo
int
jge
or
loope
not
dec
int
add
push
je
xchg
mov
ljmp
mov
dec
sarb
cwtl
pop
hlt
fcomps
jecxz
inc
and
xchg
mov
stc
ljmp
cmpsb
cmp
loope
jle
push
and
jb
repnz
iret
call
aam
pushf
ret
mov
pop
mov
xor
xor
sub
mov
jp
or
stos
add
jo
lods
dec
and
fcmovnb
gs
test
js
inc
xchg
mov
rcrl
push
and
movsl
notl
in
mov
pop
rolb
aas
jg
lds
mov
loope
les
daa
sbb
mov
scas
les
sub
inc
jns
xchg
je
dec
gs
cmp
jge
sub
jo
push
sub
shlb
stos
cwtl
dec
outsl
dec
xchg
shll
push
add
ja
sar
jmp
or
pop
movsl
jnp
inc
movb
fldenv
into
aam
pop
repz
xchg
out
outsb
movsl
push
xlat
xor
xchg
adc
inc
push
mov
xchg
and
cltd
inc
rcrb
inc
adc
xor
dec
lods
test
movsl
imulb
mov
mov
pop
iret
cwtl
dec
mov
xchg
mov
mov
ror
mov
dec
mov
push
sub
test
pop
ret
ret
repnz
sbb
sbb
stc
repz
adc
mov
inc
xor
cli
sbb
sti
or
and
jnp
hlt
jp
fdivl
inc
mov
sub
cmp
sub
es
mov
xor
daa
dec
mov
pop
and
aad
ret
adc
shll
scas
xchg
mov
dec
std
popl
add
sbb
push
pop
fdivrs
sub
mov
cmp
cld
out
xchg
or
add
icebp
lods
dec
scas
xor
imul
dec
sbb
out
inc
jo
pop
fldcw
mov
jge
xchg
push
std
xor
jge
cmp
je
je,pt
mov
mov
jmp
xor
cmp
push
or
stc
jns
mov
scas
adc
out
cmpsl
fs
inc
ds
call
aas
add
je
fcoms
adc
xchg
ror
push
or
inc
arpl
mov
adc
cmp
push
rorl
or
push
jbe
test
lret
in
lret
data16
lret
test
adc
push
ret
xchg
ljmp
xchg
and
dec
enter
mov
pop
push
js
js
inc
mov
sahf
and
je
xchg
xchg
sbb
in
sbb
fldt
xchg
clc
ror
mov
push
mov
insl
das
fwait
ret
mov
repz
jbe
decl
mov
pusha
roll
pusha
inc
out
dec
cmp
dec
fisttpl
sbb
enter
aas
or
shll
cmpb
xchg
inc
data16
popf
out
add
pop
xchg
ss
fcomps
rcrl
fwait
push
inc
lret
push
lahf
fmuls
repz
push
xchg
shrb
jmp
inc
push
inc
pop
movsl
out
push
aaa
xor
movsl
jnp
xor
and
add
pusha
outsb
xor
and
lcall
faddl
lock
popa
movsl
lock
pop
ret
mov
add
push
and
xchg
jmp
fs
cli
mov
push
xchg
mov
jg
pop
jne
mov
adc
add
in
mov
mov
sarb
in
and
dec
jnp
lahf
pop
dec
loop
ret
cmp
js
and
jne
inc
jns
inc
push
add
jnp
ror
inc
jg
jns
int
adc
pop
ficoml
lret
mov
sti
sbb
loop
push
xchg
shrb
or
and
sub
mov
arpl
rol
adc
ret
jge
dec
mov
pushf
push
pop
icebp
ret
sbbb
daa
push
enter
js
mov
cmpsb
andb
out
fs
add
pop
fsubs
and
imulb
pop
add
sub
call
add
sahf
or
or
out
add
jp
xor
sarl
pop
sub
inc
sub
stos
sub
or
jg
repz
push
add
push
xchg
fcomip
bound
sub
sti
fmuls
xor
xchg
push
ljmp
nop
push
fcomp
pushf
testl
js
ja
lods
rorb
push
out
shrb
xor
xchg
pop
pop
orl
ja
cmp
dec
inc
outsl
dec
lock
push
sub
cli
idiv
scas
fcomps
sbb
adc
popf
int3
into
es
ret
div
stos
mov
pop
sbb
cmpsb
insb
cmc
push
test
or
clc
fsubs
cmp
mov
arpl
data16
xor
jg
xchg
or
cld
imul
mov
mov
pop
movsl
xor
inc
xchg
imul
cmpsb
loop
jae
daa
call
mov
into
mov
mov
xor
lods
mov
iret
ds
aad
jae
je
xchg
or
fildll
sub
xor
aad
add
outsl
in
cwtl
imul
cltd
lret
pop
paddusw
andl
sbb
push
stos
pop
repz
adc
pop
divl
push
or
cmp
stos
gs
and
fs
jle
xchg
sbb
loopne
cs
test
pop
sbb
stc
imul
data16
out
adc
dec
lret
mov
mov
out
push
insl
and
mov
sahf
imul
or
pop
movsl
push
jg
xchg
test
mov
jo
or
xchg
mov
test
xchg
or
hlt
adc
xor
add
jmp
sbb
push
test
mov
cmpsb
mov
int3
out
pop
dec
rcl
jg
ret
dec
dec
dec
xor
fwait
leave
data16
inc
jge
jo
loop
cmc
ror
or
aas
add
clc
test
dec
xchg
jp
mov
jmp
pop
fstpt
hlt
sub
dec
icebp
cld
xchg
int3
inc
addb
in
pop
push
cwtl
pusha
mov
loopne
lds
lea
in
pop
into
push
add
imul
fisubl
xchg
hlt
adc
dec
bound
scas
push
lods
loop
jge
pushf
jns
adc
std
stc
adc
je
sub
inc
call
popf
jg
add
mov
cltd
enter
jb
jg
sbb
sahf
insb
or
inc
cmp
mov
cmp
lret
mov
inc
in
jle
and
enter
mov
sbbb
inc
imul
sbb
xchg
fbstp
andb
jnp
std
mov
cmp
jl
enter
fwait
cmp
fsts
mov
lea
xchg
mov
inc
sti
loop
mulb
loop
lds
aad
add
testl
pop
inc
mov
xorb
rolb
pop
ja
mov
ret
std
dec
jae
mov
inc
sarl
loope
push
xchg
jmp
xchg
jnp
mov
loop
inc
xchg
mov
mov
imul
inc
enter
pushf
in
and
sbbb
xor
xlat
inc
aaa
out
rcr
add
inc
rcrl
and
or
and
sbb
call
push
push
insl
psraw
mov
adc
inc
inc
mov
insl
mov
call
leave
rol
push
sbb
pop
mov
push
out
loope
pop
inc
cmp
push
inc
out
cmpsb
push
sbb
pusha
les
rcrl
mov
pop
mov
pop
dec
aaa
xchg
and
cmc
fisttpll
in
mov
decb
shlb
sbb
push
out
les
sbb
lcall
mov
mov
adc
adc
sub
xchg
fisttpll
xor
fucomi
sbb
cs
repz
inc
scas
out
fbld
mov
ljmp
in
mov
fst
sbb
fistps
xchg
mov
pop
shr
mov
jl
insl
cwtl
sbb
rcrl
dec
mov
leave
mov
mov
clc
gs
add
cwtl
imul
push
imul
ss
mov
arpl
pop
shl
movsl
shll
and
inc
idivl
pop
mov
rorb
test
test
movsl
inc
sahf
ficoms
xchg
daa
mov
out
sbb
sub
icebp
lock
mov
clc
fcmovbe
ficompl
stos
and
cwtl
sub
orb
sahf
cmpsb
cmpsb
mov
push
lock
pop
clc
push
scas
data16
andb
jle
cwtl
inc
inc
popf
and
lea
mov
dec
outsb
pop
pushf
push
dec
xor
add
mov
mov
stos
pop
stc
ret
mov
cmp
and
cmp
push
and
mov
cltd
stos
jmp
cs
sub
inc
scas
xchg
test
jecxz
xchg
aad
inc
jbe
call
stos
xor
adc
gs
pop
adc
sub
jmp
das
pop
jp
pop
push
mov
fdivrl
pushf
and
movl
fildll
pop
sub
jl
scas
and
hlt
fld
fsubp
fwait
das
fisttps
loop
popf
mov
push
mov
sub
pop
fistps
cs
into
out
int
rorl
popf
sub
das
pop
jo
inc
ja
fldcw
daa
push
add
lods
sbb
out
cwtl
mov
fs
sbbl
mov
jne
addr16
push
push
dec
sbb
mov
cltd
stos
xor
call
mov
lret
and
rol
call
push
mov
les
add
mov
xor
push
aad
mov
hlt
xchg
xor
jno
idiv
popf
add
mov
rcr
xchg
add
cs
pop
cmp
hlt
xchg
das
movaps
int
movsl
and
jmp
cmp
mov
push
ficoml
dec
rolb
pop
cmp
xor
mov
dec
es
cmp
lret
xchg
mov
in
or
mov
insl
ret
jae
pop
fisubrl
sti
jecxz
or
or
xor
sarb
mov
jo
fcom
ficomps
test
es
adc
mov
inc
mov
xchg
xchg
push
shlb
into
xor
xchg
mov
ret
push
lcall
and
add
cmp
add
jecxz
xchg
aaa
stc
ja
push
pop
ja
in
mov
lock
and
mov
xchg
mov
adc
andl
jmp
push
xchg
mov
inc
inc
pop
push
into
mov
mov
ret
dec
fwait
jg
data16
scas
cmp
loope
lds
add
push
out
xchg
xchg
adc
test
sbb
sahf
shll
iret
movsl
push
ficoms
sahf
in
cmp
xor
insb
or
aam
dec
scas
sub
ror
xor
or
loopne
jae
cmc
add
lcall
sahf
pcmpgtb
in
inc
push
or
addr16
mov
pop
mov
in
jno
or
inc
pop
jns
in
xchg
and
popa
rorb
stos
xchg
movsl
xchg
decl
cli
pop
jge
add
and
mov
push
in
in
cmp
inc
xchg
ljmp
push
fidivrl
sahf
and
push
lock
aad
cmp
popf
les
pop
iret
jmp
pop
jne
sbb
ret
shl
mov
rclb
loope
sub
adc
jae
std
into
push
and
mov
hlt
xorb
bound
out
push
pop
dec
mov
loopne
push
dec
lods
hlt
jg
insl
xchg
mov
pop
and
ds
inc
xchg
prefetchwt1
or
xlat
add
xchg
mov
cltd
clc
movsl
or
pop
adc
imul
cmp
lods
jecxz
push
in
sbb
adc
movsb
cmp
pusha
mov
fisubrl
out
pop
mov
into
push
nop
pushf
or
and
lret
dec
push
add
sbb
xor
jmp
scas
and
fsubrs
cmp
fdivp
lret
leave
xor
inc
xchg
mov
xchg
inc
pop
and
imul
jae
aaa
lds
mov
insl
mov
movl
mov
in
jb
es
inc
cs
std
xchg
data16
shrl
or
movsl
mov
mov
ja
daa
jp
mov
sub
subb
cmp
mov
mov
adc
jge
sbb
push
mov
mov
in
cmpsb
fs
adc
jne
jp
pop
and
in
mov
xchg
mov
movsl
jle
lret
pop
gs
int
repnz
or
add
mov
add
jb
addr16
mov
adc
jns
sub
adcb
je
ds
push
or
lret
je
fs
or
cmpsl
mov
or
inc
and
ret
aad
xchg
mov
or
xor
jo
mov
lahf
movsl
bound
nop
aad
and
fcmove
cmp
test
jbe
sti
dec
decb
scas
call
inc
out
dec
xchg
mov
mov
out
mov
daa
mov
addl
mov
fsubrl
and
push
push
sub
addr16
popa
hlt
jo,pn
aad
xorl
dec
add
cmp
jae
push
cmp
sub
xor
in
mov
lea
mov
jmp
push
in
xchg
xchg
mov
lock
mov
push
fs
outsb
sub
xor
xchg
jae
les
pop
stos
mov
stos
jb
ret
jg
jnp
ret
es
sahf
sahf
sbb
pop
cs
pusha
xchg
mov
add
int3
push
mov
mov
push
sub
cld
ret
inc
pop
out
in
jge
mov
outsb
cmpsl
sub
mov
adc
adc
inc
push
jno
mov
cmpsb
pusha
pop
punpcklwd
adcb
cs
and
mov
fwait
scas
pop
addr16
gs
push
pop
in
sti
lods
dec
or
insb
sub
adc
and
popf
mov
jb
arpl
push
inc
push
mov
movsl
bnd
push
clc
cltd
sbb
mov
sub
mov
push
repnz
insb
movsb
lahf
mov
test
inc
mov
push
adc
sub
outsb
arpl
jecxz
mov
repz
jbe
mov
scas
xor
mov
in
mov
cmp
cmp
jp
aad
and
jl
in
xor
divl
inc
jb
sbb
mov
or
insb
hlt
in
mov
or
mov
mov
xor
adc
icebp
cmp
in
dec
test
push
fildll
xorb
test
push
rcrl
fs
mov
mov
xor
test
add
aad
inc
daa
mov
jp
xchg
and
inc
pop
xorl
dec
mov
and
roll
dec
mov
in
jnp
mov
mov
lret
aad
sub
in
fstps
or
in
xchg
dec
dec
hlt
cmp
repnz
gs
fscale
push
mov
rorb
pop
mov
sahf
push
dec
shlb
hlt
inc
fisubl
xor
add
jno
cltd
lcall
mov
cmpsl
cwtl
or
pop
loopne,pn
adc
inc
outsb
pop
and
andl
out
mov
jb
out
adc
int
jo
loop
in
mov
test
fdivl
lods
sti
mov
mov
data16
ss
pop
mov
test
dec
push
xchg
in
cs
cmp
add
push
inc
mov
pusha
adc
lahf
mov
test
push
sbb
jbe
repnz
pushf
and
retw
lret
pop
scas
clc
mov
push
mov
pop
not
push
pushf
xchg
repnz
rorl
and
pop
xor
mov
loopne
inc
or
lahf
gs
lds
pop
testb
or
mov
add
push
xor
or
xchg
dec
jo
add
adc
add
adc
aaa
pop
repz
scas
cmovno
adc
repnz
fcompl
xlat
adc
out
inc
mov
test
outsb
xor
pop
sub
lret
dec
cwtl
inc
sbb
fimull
int3
aad
add
mov
mov
mov
lods
push
in
jl
xor
lods
repnz
dec
sahf
mov
lock
adc
test
xchg
and
loopne
jg
fiaddl
insb
out
pushf
pop
push
rcrb
pop
stos
pop
and
sbb
fbstp
sti
imul
mov
pop
cmp
sbb
faddl
add
xchg
loope
cmp
dec
pop
pushf
sbb
ficomps
pop
or
test
mov
pop
out
out
sbb
fs
adc
push
push
mov
lock
mov
pusha
mov
lret
loope
jnp
xchg
push
push
lock
daa
dec
add
pop
int
stos
cld
rcll
das
push
fsts
sbb
and
add
imul
jl
ja
js
push
loop
push
xor
sub
lret
fnsave
pop
inc
cmp
ja,pt
sub
mov
lret
insl
xchg
scas
incl
cli
orb
and
cwtl
enter
fstp
push
filds
and
cld
mov
jl
mov
pop
mov
add
aas
adc
cmpsl
pop
aam
popf
mov
jmp
adc
scas
cli
cmpsb
jmp
fndisi(8087
jnp
shll
dec
or
dec
sbb
mov
sbb
arpl
pushf
pop
sti
stos
out
loop
shlb
sub
mov
out
aad
or
mov
xor
cmp
mov
into
sub
dec
je
sbb
cmp
fucomip
lods
push
xchg
adc
popf
push
sub
mov
jne
cmc
filds
xor
xor
ficompl
xchg
clc
mov
mov
xor
mov
mov
xchg
out
mov
jo
lahf
insb
pop
dec
add
outsb
leave
xchg
repnz
fcmovu
cmp
cltd
jno
xchg
jb
add
mov
mov
adc
iret
pop
pop
fstpt
dec
out
loope
popa
scas
imul
outsl
adc
push
and
inc
std
movsb
cmp
ja
cld
mov
push
sub
adc
stc
popa
add
ficoms
xor
xor
pop
jne
cld
out
xchg
jo
js
mov
cmp
popa
and
les
sub
lcall
mov
push
mov
adc
dec
push
jo
and
mov
xor
push
movsb
push
or
arpl
ljmp
imul
scas
dec
cmpl
jp
cmp
dec
pop
mov
xor
mov
xchg
push
popf
xchg
mov
gs
push
dec
out
lea
sarl
ret
push
sub
jnp
daa
sbb
jge
jbe
push
inc
pop
cmp
loopne
mov
clc
sahf
pusha
mov
jo
out
push
push
gs
mov
loopne
push
cld
dec
dec
mov
clc
rclb
aad
fwait
pop
push
repnz
push
idiv
mov
dec
xor
sub
cmp
notb
lds
mov
fldz
xchg
jl
pop
daa
add
stc
sub
jae
mov
add
movsl
xor
mov
dec
push
push
test
int
add
in
pop
xchg
mov
loopne
dec
daa
cmp
pop
shr
xorl
push
add
mov
fwait
xor
push
cmp
lcall
adc
ja
adc
push
sahf
bound
xchg
loop
pop
dec
pop
sbb
test
enter
into
cmp
inc
std
dec
rcl
inc
int3
inc
out
test
inc
and
add
aas
aaa
arpl
push
mov
pop
jle
out
mov
or
sbb
in
inc
push
mov
adc
out
out
push
push
test
repnz
enter
dec
lds
repnz
aas
sub
mov
es
icebp
add
dec
jno
mov
jbe
jle
pusha
out
xor
mov
fwait
push
ja
pop
inc
les
xchg
arpl
call
rol
lea
dec
leave
add
push
cmp
and
fs
icebp
or
out
pcmpgtw
pop
cs
ljmp
jnp
xor
sbb
dec
and
dec
pop
push
push
rep
xor
add
mov
push
jl
cwtl
and
mov
fld
iret
jge
iret
ret
xor
push
mov
sub
aam
push
adc
sbb
push
dec
jae
push
movsb
loopne
lea
movsb
mov
mov
pushf
cmp
icebp
fdivs
into
mov
outsl
mov
xchg
xor
imul
inc
testb
je
mov
jge
dec
xchg
jne
mov
es
pop
lods
test
ljmp
push
jle
mov
adc
test
sub
clc
mov
iret
ds
pop
es
dec
push
jo
int3
fstps
or
stc
pop
rol
repz
inc
ffreep
mov
xchg
sbb
test
out
ret
jg
lea
stos
aam
lock
mov
ret
aas
xchg
add
cmp
sub
inc
lock
cmp
jecxz
dec
addl
mov
dec
cmp
sbb
lret
push
int
push
rolb
flds
shl
popl
js
test
mov
sbb
out
pop
in
xor
adc
cmp
jmp
push
xor
inc
jmp
stc
or
pop
fsubs
jne
andl
sbb
sahf
jae
mov
loopne
push
adc
pop
popa
inc
jne
in
add
dec
push
fstpl
fcomps
aam
jg
push
xchg
movsb
sub
lea
daa
add
stc
inc
test
mov
dec
xchg
xchg
icebp
pushf
es
adc
scas
cmpsl
scas
mov
inc
insb
in
sarl
mov
das
icebp
xor
mov
push
fnstsw
add
dec
jle
mov
push
mov
push
int
xor
jae
mov
xor
push
mov
sub
addb
and
jo
xor
scas
adc
scas
das
mov
push
jp
sbb
test
fwait
call
pop
mov
or
cmpsl
pop
add
stc
popf
lods
mov
or
push
cmpsb
sub
lds
and
pop
xlat
jp
mov
mov
cmp
xorb
nop
insl
or
push
lret
add
into
and
push
or
scas
mov
mov
cmp
movsb
jae
call
test
jno
pop
ret
and
add
mov
fistl
lds
push
xchg
lds
xor
pop
jne
mov
insl
movsb
in
xor
dec
ffreep
push
jns
adc
dec
sbb
out
push
pop
mov
inc
or
fs
cmp
xchg
popa
in
mov
movsl
clc
mov
adc
jb
dec
push
icebp
pushf
mov
adcl
push
stc
pop
pop
pushf
push
incb
fsubp
or
xor
rolb
fucomip
inc
mov
push
fst
jecxz
aas
mov
add
pusha
pop
mov
sub
and
sbb
push
movsb
mov
loop
gs
fsubrs
push
and
xor
xchg
mov
mov
push
fildll
fadds
dec
fcoms
and
shl
stc
add
dec
mov
jp
repz
jle
imul
lods
movsl
xchg
cmpsl
adc
jb
fisubrl
lea
xor
dec
lahf
jl
das
idivl
pop
hlt
cmpsb
sbb
inc
aas
fistpll
mov
fisubl
cmp
mov
movsb
lods
rcl
scas
sbb
repnz
dec
hlt
pop
push
dec
pop
and
leave
mov
mov
xor
jns
or
jecxz
mov
fwait
cs
add
imul
mov
hlt
and
push
xchg
xor
test
fdivrp
jmp
lcall
jbe
sub
loopne
test
fcompp
sbb
scas
les
sbb
test
and
mov
ficoms
cmp
cwtl
stos
jge
ds
test
outsb
mov
cmp
mov
pop
inc
inc
movsl
shll
addr16
dec
adc
outsl
pop
stos
hlt
shll
out
xor
mov
pusha
mov
stos
leave
hlt
repz
imul
jns
scas
lcall
inc
jle
mov
push
pop
inc
dec
pop
inc
jmp
repz
sbb
cmp
clc
push
xor
sbb
shlb
ljmp
popa
les
mov
jnp
insb
jecxz
std
lods
adcb
dec
cld
adc
outsl
loop
out
xor
xchg
les
pop
pop
daa
rclb
ljmp
fcmovbe
bound
sar
jbe
lds
xlat
call
ss
xchg
les
jnp
cwtl
adc
loop
aaa
pop
push
pop
cli
cmp
lret
sbb
cmp
das
jge
aad
cwtl
xchg
loopne
gs
pop
pop
sbbb
dec
and
adc
js
pop
ret
addl
mov
rol
jmp
sarb
xchg
xchg
cld
daa
arpl
sub
adc
jns
orb
cmp
sub
stos
scas
fs
sub
mov
outsb
jo
xor
lods
loop
mov
inc
sbb
push
stos
mov
test
lea
push
fldcw
fisubrl
fdivs
ss
ljmp
aam
jg
les
aad
mov
xchg
pop
xchg
cmp
pop
and
test
jo
mov
push
das
mov
enter
pop
sub
xchg
lods
adc
sub
sti
insl
jo
push
and
inc
arpl
mov
shl
sbb
std
xor
lods
scas
add
or
jns
insl
pop
push
inc
into
aaa
popa
cmpsb
mov
pop
xchg
pop
in
out
push
orl
jmp
sbbl
jno
scas
jge
mov
sub
rolb
notl
pop
mov
and
push
add
insl
adcl
push
push
lods
or
mov
das
dec
ret
push
movsb
push
rcrl
cmp
aaa
aad
jl
push
out
insl
insb
fdivl
adc
pop
gs
mov
aad
loope
cmp
adc
mov
pusha
cmp
jmp
dec
sbb
xor
push
aad
dec
gs
jge
mov
out
xchg
mov
in
xchg
in
int
stc
pop
xor
mov
adc
mov
adc
jno
mov
push
pushf
jg
mov
inc
shrb
pop
xor
adc
pop
adc
mov
xchg
dec
movsb
adc
in
icebp
cmp
mov
xor
js
sbb
aad
adc
fdivrl
sbb
or
xchg
test
or
std
cmpsl
or
xlat
pop
xchg
insb
in
pushf
addb
int3
adc
adc
xor
arpl
dec
jb
pop
sub
aad
and
idivl
ret
imul
ja
add
mov
je
aam
inc
cwtl
fistl
mov
out
or
jae
sbb
xorb
call
adc
mov
imulb
cwtl
jg
and
mov
dec
stc
push
daa
lods
das
mov
clc
pop
inc
out
jp
jae
fstpt
std
dec
sub
xchg
xor
sti
shlb
into
ja
push
subl
int3
push
in
lods
push
mov
sbb
cmp
and
sub
mov
call
cmp
inc
sub
std
cmp
test
out
addb
cmc
add
add
xor
into
popa
std
inc
dec
js
test
mov
in
xchg
jns
mov
or
loopne
fwait
pop
mull
jge
sub
xlat
add
icebp
aam
rorl
adc
inc
mov
fnsetpm(287
push
les
imul
mov
in
leave
rol
and
push
test
mov
pop
inc
or
xlat
pop
cmp
iret
out
mov
jno
pop
dec
loope
sub
push
mov
das
shrl
scas
push
icebp
fisttpll
bound
pop
iret
xchg
adc
xchg
adc
mov
rclb
fstpt
mov
dec
je
scas
mov
mov
iret
stc
lods
call
add
test
js
out
daa
pushf
lahf
add
xchg
pop
xorl
mov
fs
in
call
lea
sti
pushf
dec
jp
pop
cld
cmp
in
testl
out
lea
imul
imul
push
repnz
inc
jecxz
xchg
cmp
mov
clc
ret
pop
loopne
inc
imul
jb
es
xor
or
into
adc
pop
mov
mov
and
gs
xor
ja
jnp
inc
dec
dec
lods
aam
push
das
jnp
repz
in
pop
mov
jmp
xchg
je
rcrb
xor
int
fwait
or
or
mov
fbld
cmc
cmpsb
mov
and
add
mov
ja
insb
jnp
lds
push
stc
pop
jae
ret
mov
pop
mov
shrl
gs
sarl
pop
jg
in
jnp
cmp
xchg
lret
sub
scas
xor
stc
jp
fcoms
popl
repz
mov
lret
ja
and
notl
dec
cmpsb
shll
add
xor
movsb
and
adc
aam
inc
adc
popf
jmp
add
data16
push
push
sub
pop
ret
iret
mov
mov
aam
push
jg
movsb
adcb
xchg
and
push
add
pop
push
mov
adc
pop
mov
int
adc
cmp
and
les
shrl
cmp
leave
jmp
mov
daa
fisttpl
lods
or
mov
and
nop
pushf
sub
sub
xlat
scas
sub
add
cmp
dec
insl
push
dec
cs
ljmp
ret
push
adc
ljmp
mov
or
sbb
mov
xor
jo
add
sub
stos
imul
or
mov
mov
cltd
pop
and
push
mov
fsubp
fsubrl
cwtl
sbb
mov
into
dec
pop
sbb
xor
mov
andl
inc
or
shrl
lods
jg
iret
adc
subb
pop
lods
push
jns
rep
testl
aaa
outsb
xchg
mov
xchg
hlt
mov
fistl
cmp
jecxz
scas
movsb
add
les
je
loop
mov
mov
pop
lea
cmp
cmp
inc
jns
test
mov
aam
adc
int3
jb
cmp
sub
mov
pop
imul
ss
std
jo
aaa
shlb
int3
outsb
mov
shrb
mov
mov
jl
icebp
sbb
nop
jns
test
das
sbb
outsb
mov
inc
dec
push
es
push
test
jb
xor
or
aas
mov
xchg
or
ud2
mov
pop
je
jne
dec
mul
lcall
in
jge
and
xor
mov
out
and
imul
jnp
push
dec
cwtl
xchg
mov
inc
bnd
inc
lods
mov
mov
and
sub
or
add
add
adc
hlt
mov
rolb
xor
mov
inc
push
cld
sbb
enter
pop
cmpsl
xchg
ja
or
sub
sub
aam
and
aam
in
inc
stos
sbb
lahf
and
repz
fdivrl
jbe
movsl
in
bound
lock
icebp
add
ret
aaa
orb
and
pop
add
rcll
outsl
shlb
adc
test
scas
mov
cmpsb
outsl
sbb
arpl
das
bound
jae
jle
push
dec
mov
push
push
adc
xor
push
sahf
pop
fidivrl
mov
jb
mov
cwtl
adc
loopne
sub
loopne
shl
adc
jns
repnz
ja
test
adc
imul
rorl
in
movsl
push
mov
or
and
stos
stos
xor
xchg
adc
dec
stc
sbb
aad
pop
xor
popf
cmpsb
sub
mov
or
adc
mov
out
les
lret
jg
ds
mov
aaa
ds
jecxz
ds
test
imul
out
mov
popf
mov
push
pusha
scas
in
xchg
fs
xor
adc
imul
lea
cs
jb
sbb
insl
addr16
pop
dec
jp
ljmp
or
push
jmp
and
pop
lods
xchg
sub
mov
jge
mov
cmp
pop
push
mov
cltd
cmc
idivl
inc
ds
sbb
or
push
test
sbb
vshufps
fldenv
lea
je
pusha
mov
stos
mov
xor
pop
jle
or
xchg
sub
cmp
mov
pushf
and
addl
mov
add
add
stos
in
shrl
add
and
insl
out
sbb
into
ljmp
mov
jl
sbb
fdivp
and
sbb
push
cwtl
inc
mov
xchg
sub
lcall
mov
adc
mov
lret
ja
mov
pushl
mov
aad
sbbb
out
xlat
lahf
xchg
adc
dec
in
movsl
mov
sbb
adc
mov
outsl
jne
insb
push
in
xchg
lods
add
paddd
add
pop
jmp
std
loop
pop
and
jg
fildll
clc
es
lock
jnp
outsl
ljmp
fidivrs
cmp
lahf
adc
notl
jg
lds
mov
dec
stc
or
or
jbe
aaa
movsl
into
pop
and
push
ret
sbb
inc
mov
sub
pop
inc
jno
pop
xchg
cld
cltd
mov
jbe
outsb
dec
faddl
dec
std
into
mov
aam
cmp
ljmp
jnp
int
or
dec
fisttpl
cwtl
inc
in
mov
lret
pop
sbb
popa
and
shl
mov
fcoms
out
sti
mov
xlat
mov
repnz
inc
adc
insb
arpl
stos
subb
mov
dec
jo
mov
inc
jb
mov
mov
push
lahf
inc
jnp
push
cmp
inc
cmp
pop
jbe
into
loop
bound
push
cmp
aam
arpl
mov
mov
hlt
popa
ljmp
inc
cmp
stos
dec
adc
stos
out
add
xchg
popf
cmp
mov
jmp
dec
and
test
push
cltd
test
jge
lahf
sbb
dec
loope
jnp
pop
loopne
sub
cmp
jbe
inc
shlb
mov
and
xlat
cltd
dec
xchg
test
subb
cs
xor
ds
push
cmp
out
je
sarb
clc
jle
lahf
jle
nop
cmp
jmp
decl
mov
push
dec
pop
pop
xor
jno
adcb
mov
push
pextrw
insb
mov
jmp
andb
dec
lret
adc
inc
push
pop
sti
xor
nopl
adc
mov
pop
test
fwait
cmp
test
jae
insl
fdivl
xchg
mov
add
mov
test
sub
add
rcr
addr16
je
jnp
adc
xchg
xchg
out
and
ja
mov
clc
sbb
mov
lcall
jg
inc
mov
lods
jle
imul
adc
les
xchg
jb
push
mov
dec
dec
push
cmpsl
mov
lret
sub
sbb
inc
xor
and
cltd
or
movsb
movsb
push
out
loope
pop
fbstp
pop
bound
cmp
sbb
ficoms
fdiv
sub
jmp
cmpsb
jmp
pop
mov
in
pop
addb
or
mov
data16
pop
and
jbe
rcrb
xlat
cmp
xor
inc
aad
xchg
or
xchg
pop
push
ficoml
stos
dec
xor
lret
and
js
lods
js
imul
insb
push
xchg
dec
enter
pop
cs
out
push
sbbl
or
push
cmc
fcmovu
jno
mov
jo
or
add
mov
mov
clc
inc
int
in
push
cmp
mov
movb
xor
jb
js
pusha
sub
mov
test
orl
adc
aaa
addr16
sbbb
sti
fidivrl
pop
mov
inc
out
lcall
jmp
call
testl
pop
mov
enter
or
pop
outsl
inc
mov
pushf
xchg
sbb
xor
pop
les
mov
decl
push
jno
cmp
scas
shl
mov
fldt
xchg
or
xchg
sets
pop
cmp
inc
or
sub
sbbl
cltd
cmp
mov
fistpll
shufps
add
aam
out
sarb
cmp
mov
fs
mov
mov
or
jo
sbb
dec
mov
leave
adc
pusha
pusha
or
add
add
adc
mov
aam
jge
cmp
fistpl
inc
insb
rcr
or
push
imul
or
dec
cmp
sbb
push
stc
inc
xchg
jmp
xchg
stc
xchg
adc
cltd
jo
pop
push
hlt
dec
in
pop
das
or
sub
out
add
test
pop
jle
mov
ficomps
mov
cld
push
cmc
jmp
stc
jno
jmp
pop
add
jo
and
imull
ljmp
rorl
inc
dec
xor
scas
cmp
loopne
mov
cmp
movb
ljmp
mov
fwait
and
fld
fwait
mov
push
icebp
sub
pop
inc
ror
adc
jnp
and
cld
sti
cmpsl
sbb
stos
add
pop
ljmp
dec
add
mov
xor
and
mov
cmpsl
cmpsb
cmp
pop
clc
es
push
lahf
add
out
je,pt
sub
add
xchg
xor
pop
shr
mov
cmp
out
mov
scas
lock
push
ja
pop
int3
mov
lods
jns
js
lret
ficompl
lea
mov
fdivs
push
mov
xchg
mov
jl
push
lods
insl
mov
stc
jmp
inc
jp
push
dec
out
lret
inc
mov
lds
jnp
pop
sub
jb
sbb
std
and
test
inc
push
cli
mov
xchg
mov
dec
and
xorl
mov
xchg
xchg
out
mov
std
js
mov
push
dec
pop
divb
lahf
repnz
movsb
aad
sbb
movlps
push
xchg
xchg
gs
mov
sti
mov
push
xor
in
push
and
aaa
loope
std
dec
es
aam
and
out
call
mov
push
popa
push
inc
mov
ret
jo
dec
sbb
mov
mov
xchg
mov
add
jb
jge
or
pop
inc
stos
lret
les
and
add
sbbl
xchg
lods
lret
pushf
xchg
enter
fstps
adc
push
jmp
out
mov
je
cmp
jne
add
add
bound
sub
pop
ret
xchg
add
pop
lcall
mov
and
fistpl
aad
jge
test
xchg
xchg
ja
aam
xchg
stos
repz
xchg
add
ljmp
pop
int3
fidivl
roll
loop
sarl
push
popa
stos
push
sub
sbb
out
test
mov
mov
adc
push
stos
insl
add
aaa
and
push
and
mov
repz
lret
outsb
icebp
pop
sub
enter
lods
mov
into
jo
jo
cmpsl
decl
and
fistpll
sbb
add
sti
cmpsl
jno
out
mov
xchg
inc
jnp
cmc
es
cld
or
xchg
loopne
add
mov
cli
xchg
adc
loopne
pusha
loop
xor
cs
add
xor
pop
or
ret
xorl
test
icebp
add
les
jbe
sub
sbb
push
xor
inc
fsubrs
jbe
pop
scas
sbb
cmp
xor
xchg
add
loopne
mov
sbb
lods
into
or
test
repz
adc
push
sbb
shll
insb
popa
cmpsb
std
fisttpl
dec
int
shll
in
sub
and
mov
sub
mov
adc
js
ret
fstpt
add
js
sub
ret
adc
dec
iret
adc
mov
pop
out
jl
inc
lock
movsb
and
rcll
ja
sub
adc
aaa
dec
ljmp
in
xchg
xchg
adc
and
add
push
test
repnz
mov
pop
rcrb
es
mov
jbe
add
adc
and
inc
cld
lock
pop
sbb
outsb
push
push
sarl
out
mov
repz
xor
xchg
and
ja
jne
or
ds
jle
xchg
dec
push
ja
pop
pop
pop
andl
ret
xlat
pop
xor
out
psubusw
popf
std
aam
push
xchg
int3
mov
hlt
dec
cmp
xor
leave
dec
inc
in
pop
std
shlb
xor
xchg
push
mov
outsl
movsl
cmp
sahf
je
jmp
icebp
nop
xor
mov
pop
pop
pop
mov
rolb
adc
pop
mov
cmp
pop
lds
sub
ss
ss
jl
xor
fadds
jnp
fwait
es
notl
test
loope
sub
out
push
or
bound
mov
mov
lret
mov
mov
push
test
mov
push
mov
shlb
jmp
sub
push
pop
jmp
out
outsb
aam
push
ret
lea
xchg
mov
cmp
loopne
mov
jle
adc
or
flds
and
std
push
mov
insl
push
jno
or
daa
out
mov
stc
adc
cmp
sti
jmp
mov
xchg
xchg
fnstcw
push
fwait
cld
xor
mov
ds
into
shlb
aas
mov
pop
jle
daa
idivb
enter
repnz
movsb
clc
or
inc
loope
xchg
jl
cmp
call
jb
jmp
pop
add
pop
adc
jl
fstpt
loope
leave
add
jno
dec
xchg
adc
fmulp
pop
mov
xchg
xor
xchg
adc
mov
pause
fists
jnp
mov
dec
push
lea
mov
fistpll
test
mov
xor
dec
into
fisubrs
out
xchg
mov
pusha
jne
jns
push
stos
stos
jno
mov
fisttpll
mov
xchg
fwait
cltd
xchg
cmp
hlt
inc
cmp
inc
jecxz
cmp
mov
loopne
jbe
xor
add
movl
in
lods
cwtl
fwait
pop
sarl
das
mov
xor
push
lods
ret
scas
ljmp
stc
inc
leave
mov
jle
mov
dec
mov
ljmp
shrb
test
mov
lds
xlat
movsb
mov
xchg
in
imul
fisttpl
movsl
pushf
pop
sbb
ss
test
sahf
das
push
sbb
repnz
imul
arpl
test
hlt
iret
jno
sub
iret
or
adc
add
fnsave
cmp
cmp
js
mov
and
push
out
cmpsb
mov
divb
sub
sbb
je
dec
adc
sub
pop
sbb
pop
ss
data16
xor
and
push
int
iret
sbb
test
pop
insb
js
es
dec
pop
lods
cmp
rcrl
push
stos
gs
filds
ss
sub
nop
adc
pop
repz
rcrl
test
or
lahf
dec
bound
adc
data16
xlat
gs
rcr
inc
out
mov
mov
inc
ret
inc
lret
dec
fcomps
scas
add
subl
mov
fcmovu
xchg
pusha
mov
jae
dec
mov
xor
fisubl
adc
cmp
int
dec
mov
es
dec
xchg
xchg
test
fsts
mov
insb
fmulp
addr16
xor
cmp
adc
xor
push
les
push
clc
dec
mov
iret
lds
push
daa
cmc
icebp
popl
divb
sbb
nop
push
sbb
adc
lock
addr16
push
and
or
inc
inc
icebp
sbb
add
add
pop
mov
mov
loopne
inc
mov
into
cltd
jecxz
jp
push
movsl
xlat
arpl
ret
aaa
xchg
add
push
xchg
out
push
mov
adc
jb
shlb
daa
nop
sub
jne
jge
or
inc
sub
cmp
les
fs
jge
out
ds
sbb
or
mov
mov
shlb
enter
aad
pushf
jns
test
inc
mov
mov
sbb
inc
cmp
jge
pushf
sbb
push
cwtl
mov
scas
cli
bound
xchg
out
stos
aam
push
xchg
and
sub
sahf
fildl
aad
mull
cli
cmpsb
enter
movsl
sbb
lret
or
sarb
shll
and
call
out
cmp
shll
pop
jns
es
xor
cmp
mov
mov
jnp
dec
addr16
cmp
in
cmp
mov
push
add
loope
cltd
fimull
test
fiadds
and
cmpsb
int3
adc
mov
mov
sbbb
push
ljmp
loope
mov
inc
unpcklps
pop
cmp
xchg
mov
cmp
add
mov
or
scas
xchg
add
sbb
pop
nop
sub
fld
enter
loop
fiaddl
scas
mov
das
testl
xchg
sbb
pop
and
lret
dec
dec
push
cs
push
dec
jnp
push
xchg
xchg
ja
cmp
xchg
mov
jno
lods
cltd
push
jmp
fnstcw
stc
aas
insb
add
in
push
aam
je
pop
ja
push
inc
lret
mov
dec
inc
pop
xor
adc
sub
mov
adc
or
test
push
in
shrb
nop
popf
or
daa
inc
hlt
js
cmpb
adc
imul
movaps
fisubs
jae
fmuls
mov
sub
ljmp
mov
jl
jge
lcall
cltd
ret
pop
aas
rcrb
or
cmp
add
push
daa
mov
cmpsb
jnp
adc
jmp
mov
ja
mov
add
loop
xchg
xchg
leave
outsl
fwait
sarb
out
in
push
xchg
cmp
mov
pop
sbb
pop
fbstp
loop
stos
orb
out
int3
pop
mov
ret
dec
jp
inc
cmpb
or
add
and
fxch
or
je
cmpsl
mov
rclb
pop
or
xchg
jns
mov
add
pop
jno
pop
push
std
gs
addb
jae
sti
pop
pop
pop
loop
mov
repz
push
insl
mov
or
popf
arpl
outsb
jecxz
jns
inc
jecxz
pushf
xchg
jns
dec
inc
nop
fistpl
hlt
sub
xchg
mov
repz
popl
or
lret
sti
out
inc
or
inc
loop
inc
push
fcompl
rol
out
sbb
jnp
and
xchg
ljmp
pop
xchg
cmp
mov
xor
lahf
ret
imul
jg
movsb
enter
div
out
xabort
jo
std
xlat
cli
pop
insb
cltd
inc
iret
lret
mov
hlt
pop
cli
cmp
out
pop
out
push
sub
dec
das
rorl
mov
or
rorb
mov
adc
int3
ret
cmpsb
leave
pop
iret
out
mov
ror
mov
bound
xor
fwait
pop
aas
loop
loop
or
mov
xchg
shrb
cmpb
fs
cmp
les
out
insb
sbb
jmp
and
pop
push
in
sub
jo
cltd
jg
ds
fstpl
xor
arpl
jae
in
cmpps
cmpsb
jno
inc
pop
inc
lea
fildll
lds
repz
jge
movsb
or
aad
jmp
inc
jg
add
loope
cmpsb
ja
in
aas
and
xchg
jecxz
test
sub
push
mov
outsb
lds
cmp
mov
lea
lret
add
lcall
popa
add
xchg
or
rorl
call
xor
scas
inc
sub
push
fdivr
aaa
mov
rorb
mov
popa
cmc
pop
xor
push
negb
mov
shr
cmpsb
xchg
adc
nop
movsl
lods
insb
lock
lods
ret
xchg
rcll
sbb
mov
mov
pop
adc
pop
mov
ret
jmp
mov
jne
cli
sarb
adc
sbb
and
pop
mov
jmp
loope
adc
add
sub
dec
dec
lret
hlt
sbb
mov
jae
in
cmp
scas
icebp
mov
loop
push
pop
sbb
ror
mov
inc
cmp
cmp
sbbb
sbb
or
xchg
jnp
cmp
into
insl
cmp
cmpsb
cmp
push
int3
xor
cs
mov
fsub
sbb
outsl
ret
fs
sub
sub
insb
jae
pushf
test
aaa
mov
mov
and
lock
inc
es
loopne
call
add
hlt
lahf
popf
icebp
push
arpl
lahf
push
jg
loop
out
cwtl
shlb
pop
andb
gs
sub
rcll
test
dec
ret
or
addb
das
or
aas
sbb
loope
lcall
mov
ds
or
imul
jno
imul
cmp
clc
cltd
jmp
imul
ss
cli
push
and
outsb
movsl
repnz
lods
movsl
pop
or
insl
push
dec
sahf
lock
jmp
cmp
imul
inc
add
push
decb
adc
sar
pop
roll
adc
sub
inc
lret
movl
cmpsl
jle
inc
movsl
je
cmp
jg
pop
cmp
and
jo
ljmp
mov
pushf
in
sahf
mov
push
ss
imul
pop
mov
shl
lret
and
push
repz
sahf
pushf
dec
dec
dec
rep
mov
mov
sbb
aam
xchg
out
sbb
lods
mov
inc
sub
lods
stos
or
push
lret
lcall
roll
inc
add
int3
cltd
stc
ljmp
ds
adc
mov
xor
fmull
or
cmp
sbb
rcll
inc
mov
loop
cld
xor
mov
xor
scas
dec
adc
outsb
xchg
jne
sbb
xchg
mov
popa
sahf
les
mov
int
mov
push
jmp
xor
sbb
jo
fwait
andb
roll
mov
shrb
notb
stos
xor
adc
sub
hlt
stos
jnp
sbb
push
sti
pusha
inc
add
push
mov
jno
scas
pop
jmp
jno
mov
mov
movsb
push
xor
mov
and
loop
popf
fcmovbe
int3
dec
pop
outsl
pop
fimuls
inc
add
fadds
repz
gs
cld
and
or
int
testb
pushf
xchg
pop
dec
and
sbb
lahf
pop
add
push
sar
dec
mov
fildl
adc
add
jp
push
pop
mov
push
or
call
gs
scas
push
stc
mov
into
add
push
mov
cmp
sahf
mov
push
bndstx
dec
js
dec
pop
not
test
and
scas
test
mov
sar
dec
adc
lahf
mov
loop
decb
mov
les
stc
jne
adc
jle
loopne
push
mov
cmp
jno
imul
jg
dec
push
movsb
adc
int
pusha
aas
sub
sbb
add
cmp
pushf
inc
arpl
and
lcall
lret
and
add
or
xor
mov
push
movsb
mov
xchg
imul
xchg
mov
push
mov
ljmp
cmc
idivb
imul
mov
lock
push
stos
sbb
and
jg
pop
fmuls
in
loop
pop
push
mov
ljmp
add
sub
and
pop
push
mov
sub
xchg
popa
divl
and
loope
inc
ja
adc
mov
sbb
jb
bound
push
and
pop
push
in
xchg
push
mov
push
xchg
out
push
cmpsl
lock
xchg
les
lret
rcrw
lock
dec
lahf
iret
in
aam
aam
and
icebp
loopne
cmp
mov
aam
cli
dec
mov
into
mov
bound
aad
loopne
xchg
fwait
pop
outsl
data16
lret
inc
into
push
call
mov
fisubs
in
cmp
adcl
popf
imul
arpl
les
subb
pop
or
adc
aad
ret
xor
or
push
scas
test
push
out
add
popf
cwtl
es
push
imul
inc
rcll
inc
out
rcrl
clc
or
popf
and
mov
aas
xor
ret
mov
push
cld
icebp
push
xchg
xchg
and
mov
xor
add
mov
cwtl
xor
mov
push
xor
xchg
adc
jge
out
sub
loopne
pop
shll
pop
pop
jmp
mov
cld
ljmp
and
push
fisttps
mov
pop
iret
clc
loop
inc
or
mov
outsb
and
or
jnp
jnp
or
es
ds
pushf
lahf
push
jecxz
sti
loope
cmp
fsubr
add
xchg
out
lcall
cmpsb
jle
jnp
xchg
add
daa
or
cmpsb
pop
push
ret
adc
push
imul
mov
jne
jno
jg,pn
rcrl
add
shr
mov
out
out
mov
ljmp
mov
aad
inc
in
lock
mov
enter
aad
adc
push
or
pop
out
pop
into
sar
xchg
icebp
cmp
push
dec
mov
ret
inc
xor
add
arpl
scas
push
fidivrl
enter
push
mov
lret
insl
add
jno
sbb
sbb
aaa
std
add
mov
in
int
scas
inc
mov
scas
sbb
std
negb
loope
out
push
pusha
mov
ret
mov
jge
mov
xor
add
insb
sbb
cmp
fcoms
jne
jmp
cmp
dec
hlt
xor
adc
mov
adc
xlat
cmpsb
aam
xchg
ss
addr16
pusha
sarl
adc
mov
cli
cmp
call
adc
fadd
mov
sbbb
incl
rorl
in
scas
and
jo
cli
dec
dec
fisubrl
mov
cwtl
inc
sub
xor
fdiv
movsl
loopne
cmp
mov
sbb
gs
and
orb
add
vfrczpd
jns
pop
mov
hlt
push
xlat
jle
mov
add
out
add
cmp
xchg
mov
out
mov
adc
mov
cmp
and
adcl
pop
fbstp
dec
jo
sub
sub
sub
je
stos
inc
ljmp
xchg
call
out
pop
mov
loop
adc
lahf
push
insb
sub
jo
jge
rcrl
out
loopne
mov
lcall
jp
dec
sub
int3
mov
xor
in
push
lahf
xchg
addr16
lock
lahf
adc
ljmp
push
xchg
mov
movsl
sub
lods
mov
or
and
jo
es
lcall
jmp
cwtl
xchg
int
and
mov
mov
stc
iret
out
nop
js
mov
lds
pop
xchg
aas
js
mov
dec
lock
sbb
fsubrp
sbb
mov
icebp
jmp
lds
or
mov
test
es
fidivrs
inc
cli
dec
pop
out
cmp
aad
js
adc
mov
ss
rcrb
jae
or
push
and
mov
adc
cmc
lret
arpl
and
iret
cltd
mov
sbb
repz
out
in
js
pop
setp
xchg
lds
sbb
test
xchg
dec
sbbb
push
adc
lret
xchg
adc
pop
adc
pop
xchg
mov
test
fidivs
xor
pop
movsl
add
sbb
xchg
and
pop
cmp
jne
jno
push
cmp
jecxz
clc
fiaddl
cmp
dec
fimuls
pop
lahf
int
lock
pop
rcrl
and
out
sbb
ret
jno
jmp
loopne
cmp
jne
shll
cmp
jns
jge
mov
push
dec
mov
and
arpl
testb
mov
jp
addr16
mov
jne
push
add
add
inc
fwait
mov
js
pushf
aaa
lods
fwait
push
mov
adc
arpl
popf
pop
push
movsl
lret
negl
add
out
inc
sbb
inc
mov
push
push
nop
pop
mov
scas
icebp
imul
add
test
push
es
sub
testl
movsl
mov
out
inc
pop
and
shll
mov
sub
adc
int
sbb
pop
lock
inc
jo
pop
jbe
mov
mov
and
adc
imul
mov
mov
xorb
cmp
push
rclb
mov
out
inc
lret
jp
mov
pusha
xchg
xchg
iret
xor
jmp
adc
imulb
andb
add
cmp
xchg
ret
lcall
fcoms
lcall
or
mov
cmpsl
mov
mov
arpl
push
loopne
les
arpl
insb
stos
mov
jp
sub
sar
enter
arpl
add
mov
pop
inc
inc
xor
mov
jbe
sahf
js
aad
push
mov
cmc
dec
cmp
sbb
xchg
inc
pop
stos
imul
pop
sub
sbb
std
and
insl
popa
mov
cmp
dec
jne
or
push
xlat
fbld
int
int3
push
mov
stos
icebp
bound
xor
aas
cmp
sbb
adc
jmp
imul
into
ficoms
jae
dec
push
out
adc
into
inc
jge
repz
mov
mov
pushf
mov
lods
or
push
negb
mov
loop
fiaddl
hlt
loopne
js
jno
mov
xchg
int
rclb
cmpsl
mov
dec
push
sub
out
jmp
pop
jg
aas
cs
dec
dec
cmp
xchg
xorl
push
notl
lahf
lret
xor
adcb
or
mov
mov
sti
loop
xor
cltd
test
jnp
pop
xchg
es
mov
lret
sbb
in
mul
gs
inc
xor
cli
fcmovbe
sbb
ljmp
cmpb
int3
adc
int3
fstps
cmpb
sbb
push
or
repz
pushf
movl
push
ss
pop
cmp
js
jb
pop
cltd
cmp
adc
cmp
cmc
ds
sub
cli
pushf
cli
arpl
add
push
pop
cmp
pop
ss
inc
imul
fbstp
pusha
inc
dec
add
push
sbb
imul
jge
jp
fs
in
insb
nopl
sbb
imul
push
icebp
inc
add
xor
dec
loopne
push
arpl
and
xchg
mov
sbb
je
or
scas
femms
add
fcoms
adc
cmpsb
and
iret
jmp
and
loopne
out
pop
mov
dec
push
jle
mov
dec
or
push
ds
and
sbb
pop
andl
jno
cwtl
out
sahf
add
roll
fnstenv
das
sbbb
mov
xor
bound
pop
stos
dec
sub
int
pop
ret
negb
pop
cmp
leave
stos
xor
gs
sub
lret
out
out
inc
repnz
pusha
sbb
lret
push
sub
xchg
cmp
mov
cmc
ljmp
lock
shll
cmp
push
icebp
lret
enter
xorl
sahf
ret
in
or
adc
push
sub
pusha
add
jb
jae
mov
mov
mov
xor
xor
xor
dec
jmp
cmpsb
add
lods
ficompl
ja
divb
cmp
inc
mov
test
fldenv
and
dec
push
inc
and
mov
stos
daa
pop
inc
and
nop
sub
movsb
popa
cmp
jg
test
or
adc
cli
pcmpeqb
mov
sub
adc
mov
and
rcr
test
mov
pusha
test
cwtl
insb
lds
mov
ret
rclb
add
cmpsl
sbb
cmpsb
or
mov
cmc
ss
pushf
stos
xchg
cmp
mov
cltd
pop
es
mov
mov
jp
jns
pop
and
cmp
inc
inc
inc
negb
jge
push
and
imul
mov
mov
fstps
out
std
mov
push
jmp
lret
push
lds
push
insl
pmaxsw
rcl
mov
pop
hlt
scas
rcrl
outsl
nop
orl
mov
push
mov
cmp
out
test
insb
dec
cwtl
pop
pop
sub
mov
jne
mov
lods
jecxz
shll
mov
push
imul
and
in
xor
sbb
pop
je
ss
xor
cltd
sub
outsl
leave
mov
leave
mov
popf
out
pop
add
test
pop
cmpsl
ficomps
mov
rorl
es
pop
sub
or
insb
daa
cmp
xor
mov
js
mov
add
push
push
mov
scas
or
mov
mov
into
adc
es
xor
inc
push
inc
mov
mov
into
lret
test
cld
jle
lea
push
push
jnp
cmp
aad
cmpsl
mov
icebp
pushf
pop
lcall
ret
test
sbb
arpl
cld
mov
fiadds
mov
cmp
pop
sub
jne
dec
xchg
push
jecxz
push
ljmp
inc
cmp
nop
pushf
mov
sub
outsb
ljmp
jbe
sub
in
xchg
std
sbb
aas
jns
lret
sbb
ss
xchg
filds
repz
out
cmp
js
inc
mov
repnz
sbb
mov
adc
dec
jl
mov
scas
push
xor
lock
adc
mov
fldcw
orb
xlat
pusha
orl
inc
cmp
pusha
stos
clc
push
pop
jne
ret
subl
test
ss
push
les
test
jb
repz
mov
insb
jecxz
xchg
push
out
jbe
sub
jnp
movsb
outsl
pop
adc
fidivrs
jl
stos
fsubs
xorb
hlt
out
push
lock
sub
gs
fnstsw
add
and
pop
dec
in
sahf
nop
in
das
dec
insl
pushf
nop
lea
pop
arpl
cli
mov
and
cltd
sti
test
adc
inc
lea
call
mov
and
es
leave
call
cmp
shll
out
dec
scas
icebp
or
or
jbe
push
jno
fs
adc
cmp
imul
mov
inc
xchg
fwait
push
jle
cmc
adc
gs
cmp
push
jns
rolb
or
scas
int
push
aas
jle
cmp
push
jmp
or
lods
enter
notl
pop
repz
mov
inc
aas
pop
cmpsb
mov
pop
jns
mov
and
imulb
dec
in
dec
push
es
bound
mov
fstl
das
lret
pushf
xchg
ficoms
xor
out
roll
in
sub
loop
jno
test
std
lods
repnz
and
xor
xor
gs
xchg
inc
xchg
or
jmp
int
mov
andl
cmp
js
and
xchg
outsl
cmp
cmp
and
xchg
repz
push
orb
dec
push
push
push
mov
fldt
lock
shll
and
mov
sbb
lock
sub
repnz
mov
or
retw
add
mov
fstpl
jb
test
jp
insb
xchg
lahf
pop
sub
jg
dec
cmpsb
mov
int3
sbb
xchg
sub
pop
push
and
xchg
push
jbe
jbe
pop
das
xchg
in
xchg
lods
or
xchg
sbb
mov
test
inc
sarl
shlb
nop
das
lods
lods
adc
sbb
sbb
dec
dec
dec
and
mov
decb
cltd
push
jbe,pn
jae
fwait
enter
ds
hlt
nop
arpl
mov
cmp
aaa
jnp
pminsw
movsl
xlat
xor
sbb
pushf
cld
mov
sub
lods
fsubl
test
ret
cwtl
mov
cld
dec
mov
je
cmpsl
cltd
add
ret
and
lcall
xor
push
arpl
and
jne
insl
and
fbstp
loopne
loop
repz
je
mov
xor
push
bound
push
mov
je
popa
loopne
mov
insl
lret
add
xor
push
or
cmp
in
lahf
xchg
sub
insb
int
xchg
cli
out
xchg
dec
cmpb
mov
in
cld
push
stc
inc
mov
and
jg
push
je
insl
xchg
popf
jo
fiadds
sub
xlat
and
push
pop
xor
movsb
cmp
dec
aam
addl
hlt
iret
dec
dec
in
dec
pop
jne
fists
add
mov
cmp
push
push
lods
lds
shrl
repnz
push
rcrl
int3
cltd
roll
xor
pop
orl
dec
lods
ljmp
adc
nop
dec
xor
fwait
es
dec
dec
aad
aaa
or
jo
aaa
jge
loope
push
jbe
fdivl
and
mov
cli
aas
jg
push
ljmp
dec
inc
outsb
jmp
les
xor
shlb
js
movsl
sub
das
popa
cmp
push
popf
out
sahf
cmp
loope
mov
push
or
jg,pt
jmp
dec
push
push
out
mov
enter
xchg
test
dec
jo
ljmp
mov
xor
jmp
xchg
mov
mov
cs
aam
cmp
mov
ret
pop
imulb
les
dec
xchg
sub
lods
inc
adc
push
shl
jmp
pop
or
test
loope
pop
mov
es
xor
push
movsl
fbstp
call
pop
inc
mov
mov
icebp
mov
call
push
jge
aaa
das
pop
xchg
test
stos
test
jnp
mov
mov
or
xchg
sti
pop
and
cmp
mov
mov
clc
cs
repnz
add
dec
sbb
mov
pop
int3
add
lahf
pop
push
les
inc
scas
not
pop
mov
aas
outsl
stos
arpl
ljmp
cmc
movsl
fiaddl
pop
loope
js
daa
and
or
jno
scas
out
and
cli
add
gs
sbb
stc
movl
and
ret
xor
int3
shrl
les
das
mov
aad
out
add
shll
shl
xchg
pop
dec
sub
sub
adc
in
mov
sti
add
inc
leave
fsubl
mov
lds
daa
push
xor
push
xchg
and
pop
cmp
mov
mov
das
sbb
push
sbb
sbb
jnp
cmp
cs
and
dec
cltd
in
stos
or
insb
xor
pop
mov
cmp
loope
jg
xor
push
mov
ffreep
fdivl
nop
lods
popa
insl
xchg
fidivl
call
cld
adc
jmp
dec
or
scas
push
lcall
nop
cmp
dec
pop
inc
fwait
nop
pusha
lcall
dec
xor
mov
movsb
int3
test
and
xor
cmpsl
popf
or
push
and
int
cmp
sub
jp
leave
ror
jb
cmpsl
sub
leave
into
jge
mov
fcmove
sbb
pop
add
lret
inc
leave
lods
stc
les
and
sub
mov
dec
push
shlb
bound
iret
jae
mov
out
pop
pop
ja
or
jns
sub
js
lret
inc
fs
dec
cmpsb
add
fbld
or
ja,pn
fdivrl
in
mov
mov
sbb
jecxz
jle
call
dec
xchg
sahf
add
pop
inc
jns
dec
pop
xchg
cwtl
subl
mov
ljmp
leave
addr16
mov
mov
fcompl
outsl
call
les
jge
sub
icebp
and
loopne
push
inc
push
mov
dec
xor
out
jp
testl
sbb
cld
fnstcw
fldcw
push
mov
in
jge
push
pop
in
or
sub
rclb
sub
xor
adc
add
ret
movsb
jbe
loope
jg
mov
lret
or
and
mov
pop
vmaxss
mov
je
jne
add
popa
and
adc
adc
sub
jne
inc
push
inc
loopne
call
mov
cld
and
push
push
xchg
cltd
add
adcl
std
dec
jne
in
xchg
jp
in
push
jns
pop
sbb
test
sahf
icebp
mov
cmp
in
lods
adc
inc
in
mov
ja
jmp
and
or
shlb
ret
sbbl
cmc
fsubrs
push
sub
sti
mov
and
outsl
mov
jmp
xchg
repnz
mov
adc
mov
fadds
hlt
mov
xor
cmp
mov
ror
sbb
pop
stos
aad
add
sahf
mov
mov
fs
iret
sbb
mov
cmp
push
lea
dec
lods
pop
adc
popa
fwait
cwtl
mov
lcall
xchg
push
sbb
scas
imul
pop
adc
int3
mov
ror
jns
xchg
xchg
insb
xchg
mov
stc
test
cld
jb
cmp
mov
std
cltd
scas
sub
outsb
nop
sbb
inc
sti
xchg
cmp
lahf
pop
das
daa
push
mov
arpl
cli
arpl
mov
push
pop
push
hlt
mov
pop
adc
inc
xchg
fisubrl
fs
dec
lea
aaa
jl
ja
inc
mov
stos
lods
pushf
jnp
not
and
mov
sub
jge
popa
push
ret
imul
inc
mov
jmp
gs
pop
xor
mov
inc
adc
xchg
xor
jmp
dec
aam
stos
jp
adcb
xchg
dec
outsb
fwait
mov
mov
mov
ret
cwtl
insl
dec
and
sbb
stos
dec
clc
sti
sub
cmp
subl
cmp
push
lods
adc
or
leave
std
cmp
xchg
xor
push
cmp
clc
ret
in
add
jle
leave
push
jns
or
fcomp
pop
inc
cltd
push
out
jnp
or
mov
mov
and
sbb
cmpsl
fdivrl
mov
jl
mov
or
cmp
cmpsb
leave
mov
mov
cmp
push
and
push
cli
sbb
add
ja
daa
sarl
mov
mov
mov
xor
or
mov
mov
and
dec
jmp
negl
scas
jno
popf
aaa
pop
inc
sbb
sbb
test
push
cli
mov
dec
fsubr
adc
dec
jae
pop
or
movsb
xchg
imul
push
outsl
addr16
mov
lahf
mov
mov
cmc
fs
inc
mov
mov
ret
mov
jp,pn
cltd
idiv
iret
lcall
push
and
mov
loopne
sbb
outsl
mov
mov
and
jns
xchg
loop
push
shlb
outsl
aam
cmp
lea
fisubrl
mov
ss
movsb
cmp
test
cmpb
xchg
in
and
mov
loop
fwait
mov
push
cwtl
out
cld
mov
or
ss
dec
clc
pop
sbb
sub
sub
fistps
mov
daa
mov
xor
mov
mov
pop
mov
sbb
roll
add
leave
icebp
jmp
pushw
adc
or
std
jnp
mov
adc
fsubs
negb
js
cli
xchg
push
aam
int3
sbb
in
xlat
fmul
out
jp
dec
mov
and
scas
inc
mov
jg
xchg
xchg
stos
add
pushf
imul
jge
stos
lret
rorb
lahf
outsl
in
cld
lahf
add
and
imul
push
arpl
xor
aad
and
ret
popf
lock
popf
cwtl
pop
icebp
mov
in
cwtl
mov
aaa
or
cld
push
adcb
loope
rorl
cmp
lcall
and
sbb
and
out
mov
sbbl
popa
arpl
xor
test
push
pop
je
out
and
pushf
std
imul
add
enter
or
xor
hlt
in
jae
in
lods
push
or
adc
fcompl
jno
das
sbb
xchg
cmpsl
les
push
and
mov
dec
adc
movsl
call
in
cli
cmp
push
divb
jl
daa
mov
mov
rep
and
sar
add
daa
pusha
dec
sub
ljmp
test
inc
les
or
insb
call
pop
dec
sbb
sbb
shl
roll
scas
adc
clc
jle
sub
cmp
int
push
inc
pushf
add
lods
decb
cmp
ljmp
lea
pushf
push
sbb
mov
pusha
jno
js
je
push
lea
cmc
pop
outsl
dec
cmp
sub
mov
cld
mov
int3
lods
enter
jo
loop
movsbl
dec
aam
jb
mov
sbb
xchg
jl
je
in
xchg
pop
jo
sbb
jge
xchg
pop
bnd
aad
nop
jg
pop
sbb
sub
dec
std
hlt
outsl
mov
jmp
mov
xchg
pop
inc
jge
sub
in
iret
cmp
pop
fstpt
pushf
fidivs
inc
fsubr
ja
mov
mov
rol
adc
outsb
mov
test
cmp
das
mov
inc
add
aaa
and
mov
fxch
add
sub
jg
and
or
mov
sbb
les
inc
ds
outsl
xchg
inc
inc
lcall
test
add
lock
mov
dec
and
pusha
adc
pop
dec
insb
mov
out
push
add
cld
push
push
sub
xchg
idivb
xchg
out
inc
add
mov
mov
jge
mov
mov
int3
xchg
mov
test
pop
ja
push
cmc
inc
jne
pop
cltd
fildll
call
push
cmp
pop
jno
outsb
aad
lret
push
or
aad
lea
jmp
cwtl
movsl
sub
incb
push
aad
mov
aaa
pop
ss
push
int
dec
fistpll
push
test
icebp
ret
cmp
adc
xchg
jmp
mov
hlt
pop
mov
sbb
enter
loopne
roll
cltd
fs
andl
add
or
jno
cmpsb
sub
inc
lods
or
jle
or
repnz
sub
stc
lahf
jbe
push
sub
inc
mov
test
and
sti
dec
mov
repnz
inc
and
test
add
sub
arpl
jno
push
inc
jns
pop
cld
scas
lods
jge
and
or
in
sub
xchg
in
test
imul
add
or
or
and
into
arpl
adcl
mov
rorl
mov
cmp
shrl
mov
push
inc
push
aam
push
adc
push
sahf
cmpl
rcr
cmp
push
inc
cmp
mov
jno
push
add
test
cmp
js
stos
sar
out
dec
mov
add
daa
icebp
push
adc
sub
jecxz
ja
sub
sub
pop
xor
scas
mov
mov
fidivs
pop
clc
inc
mov
mov
jne
mov
shll
xchg
cmpsl
xor
mov
inc
xchg
jecxz
push
xor
cmp
xor
xchg
push
pop
repz
cwtl
std
xlat
or
int
cwtl
add
xchg
push
icebp
inc
cmp
test
pop
aam
dec
xor
mov
jb
rorl
test
push
cmp
int
mov
lcall
xchg
cmp
ljmp
cmp
inc
imul
sub
and
xchg
sahf
or
inc
and
jo
or
mov
iret
mov
add
addr16
test
sbb
mov
dec
and
sub
dec
in
pop
or
dec
add
shll
iret
xlat
aaa
repnz
test
push
dec
sub
ja
push
lahf
mov
pop
mov
arpl
sub
in
push
fs
mul
pop
push
jg
sub
jmp
mov
push
sub
sub
cwtl
cmc
fstl
jecxz
repnz
mov
jno
sbb
xchg
ss
sahf
xor
pop
ret
out
fcompl
xchg
shlb
xor
aaa
mov
push
and
out
in
push
pop
xchg
pop
or
das
push
pop
jbe
xor
popf
xchg
lret
sub
imul
mov
pushf
stos
imul
mov
fst
adc
into
cmpsl
rcr
pop
shlb
inc
jp
cmp
push
mov
or
orb
or
stos
mov
add
add
scas
xor
add
js
mov
icebp
imul
mov
adc
testl
xlat
jmp
lock
lea
insb
sbb
or
jl
fprem
faddl
sbb
jmp
add
sahf
mov
sbb
sub
xchg
lret
push
sahf
push
cwtl
mov
iret
sbb
iret
xor
stos
sbb
mov
lds
mov
int3
test
insl
imul
dec
fstps
sub
sbb
scas
enter
dec
pushl
adc
outsb
sub
mov
inc
rorl
or
cmc
xor
loopne
ficoms
aaa
loopne
inc
lock
jnp
test
sti
add
loopne
test
clc
jecxz
push
pop
fs
sbb
xchg
pushf
push
lcall
cmp
cmpb
jb
mov
arpl
mov
aas
and
arpl
dec
pushf
call
shlb
aad
sub
add
les
xchg
mov
scas
scas
inc
xor
cmpsb
jno
inc
out
mov
mov
pop
and
xchg
sub
movsl
jmp
and
push
lcall
mov
xchg
cmp
enter
je
ret
sahf
sub
mov
bound
lret
shlb
mov
movsb
push
inc
mov
nop
ds
hlt
test
aas
pop
xor
inc
sahf
push
sti
push
inc
cmp
mov
rolb
pop
iret
jecxz
lret
fildll
cmpb
cmp
sbb
jle
jbe
js
pop
ds
add
xchg
push
mov
lahf
mov
lods
lret
sbb
inc
imul
or
sarb
mov
and
cli
repz
movsb
jns
int
pop
sbb
das
add
xchg
fwait
jmp
mov
sti
lcall
cmp
or
push
sub
hlt
pop
popf
pop
jb
adc
out
inc
mov
mov
mov
int
sti
imul
outsb
test
scas
mov
popf
pop
leave
mov
lea
xor
arpl
out
mov
dec
sbb
jl
cmc
sub
xor
push
sahf
call
js
mov
push
jnp
sbb
xor
xchg
dec
inc
and
aaa
ret
mov
pushf
mov
mov
int3
int3
in
cli
inc
andb
cltd
inc
out
mov
lcall
insb
lods
loopne
xor
pop
cmpsb
inc
jp
cld
adc
loop
or
mov
pop
push
das
stos
andl
sub
jo
adc
nop
jb
xchg
loop
pushf
push
xor
into
cmp
das
mov
in
rorl
je
cmp
xchg
pop
push
mov
cli
mov
fadd
ja
xacquire
shl
stos
arpl
and
adc
mov
scas
ds
jo
add
fcompl
fdivr
je
lret
jnp
dec
push
or
inc
fs
ret
fisubs
int3
xorl
inc
inc
cmc
mov
cmp
cmp
xchg
adc
addr16
inc
lahf
test
cmpsb
inc
cmp
adc
mov
stos
cmp
jne
and
sub
insb
in
andb
xchg
popf
mov
out
sub
mov
or
push
in
pop
mov
cmpsl
mov
sbb
cld
or
push
lods
jge
lods
dec
mov
or
mov
or
cwtl
in
push
lret
lds
pop
test
dec
jg
sbb
stos
incl
mov
pushf
movups
std
mov
and
sub
lahf
and
pushf
dec
out
xor
les
pushf
test
in
es
xchg
mov
call
mov
enter
adc
lret
rolb
cltd
adc
daa
mov
push
adc
fisubs
cwtl
aad
mov
or
jnp
mov
dec
int3
gs
mov
rcrl
push
out
sti
notl
int
iret
add
mov
sbb
jae
sbb
add
add
inc
stos
int
mov
adc
adc
std
sub
mov
xlat
cmp
clc
mov
les
mov
jb
add
filds
sti
xchg
ret
add
mov
sti
enter
lret
fs
inc
tzcnt
xchg
nop
orl
xchg
les
mov
jae
out
jl
out
push
mov
aad
cmpsb
mov
outsb
data16
icebp
sbb
cmp
push
fistpl
js
cmpsb
pop
sbb
fdivp
into
in
sahf
jb
pop
mov
jge
data16
outsb
negl
sub
out
jle
subb
xchg
sbbl
cmp
ficompl
jle
xchg
mov
iret
in
dec
js
cmp
xchg
aas
test
inc
aas
sub
cld
pop
cs
and
and
inc
adc
add
sti
cmp
push
push
xor
rol
xor
addl
or
sub
in
shrl
mov
and
subl
add
and
not
aad
mov
inc
add
sti
or
sti
adc
arpl
cmp
fldt
jle
xor
push
lods
sub
inc
fs
mov
or
mov
add
mov
pop
lret
push
dec
mov
loop
mov
pop
repnz
fs
insb
adc
addl
mov
sbb
insb
cwtl
mov
xor
sbb
sbb
loope
ss
and
and
mov
cs
pop
jae,pt
loopne
fdivr
outsb
pop
mov
sub
std
fstpl
aam
enter
sub
addb
pusha
adc
sbb
mov
mov
fmul
push
orb
scas
inc
dec
insb
add
pavgb
add
clc
pop
push
sbb
cmpsb
add
sub
and
data16
pop
dec
jb
dec
jg
xor
in
dec
xor
inc
xor
inc
mov
inc
mov
cmc
pop
push
loopne
sub
mov
xor
push
push
dec
out
cmp
inc
testl
sbb
loop
add
scas
out
push
inc
pop
cmpsl
xchg
movsb
sbbb
jnp
sarb
xor
xchg
lcall
outsl
add
dec
pop
inc
add
mov
aam
push
movsb
add
fbstp
inc
xchg
loope
pop
inc
jae
dec
sbb
sub
imul
add
movsl
daa
stos
pushf
xchg
icebp
jns
fsubrl
and
hlt
aad
fdivs
add
push
std
jle
cli
mov
movl
shrl
das
inc
nop
pop
inc
insb
js
ficoms
popa
icebp
mov
js
mov
dec
pop
cmpsb
shrb
adc
out
adc
mov
movsl
in
sub
xchg
adcl
inc
and
pop
dec
pop
popl
pop
movl
outsb
out
xchg
and
adc
pop
mov
mov
sbb
cmc
rorb
jmp
mov
xchg
sbbl
in
push
stc
add
pop
mov
nop
jmp
mov
inc
bswap
hlt
mov
jo
mov
jae
inc
pop
movsb
jbe
out
insl
xor
push
test
mov
fisttpll
push
lret
hlt
lret
int3
stos
fstl
lods
imul
int
dec
dec
pushf
mov
mov
iret
mov
daa
shrb
loop
push
or
aam
aad
xchg
dec
lock
cmc
fimull
in
fidivrl
push
mov
pop
subb
pop
add
outsb
adc
mov
cmp
cld
mov
lahf
stc
jge
cli
xor
cld
icebp
mov
les
adc
es
lods
fnop
push
insb
pop
nop
nop
scas
xor
dec
in
subl
aaa
add
pop
push
inc
xor
jl
mov
pop
mov
daa
xlat
repz
movsl
mov
ja
adc
into
dec
push
ds
xchg
xchg
aaa
fsubrp
mov
xlat
xchg
xlat
lcall
test
cmpsb
mov
push
mov
mov
sub
insl
aam
bound
jecxz
repnz
xchg
insb
insb
imul
adc
mov
xchg
inc
cmpsl
pushf
cmc
pop
outsb
mov
popf
push
jno
and
stos
add
int3
ficomps
mov
mov
shrl
mov
mov
insb
cmp
and
dec
into
int3
push
fadds
mov
mov
in
adc
cmpsl
into
dec
nop
mov
inc
stos
cmp
les
fcmove
insl
cmp
xorl
jg
fiadds
xchg
ja
dec
stos
int3
adc
sub
ja
loopne
push
pusha
mov
stos
dec
sub
insl
stc
lcall
pop
or
mov
jl
ljmp
mov
adc
dec
aad
xchg
sub
inc
mov
jl
insb
icebp
imul
ja
sub
mov
test
sbb
icebp
jnp
xor
je
sub
outsl
adc
pop
inc
repnz
jnp
stos
cmp
cltd
mov
movsb
cmp
inc
stc
lods
sbb
loop
ret
mov
xor
sub
out
inc
jbe
push
or
pop
add
mov
and
push
addps
je
mov
jb
hlt
xchg
stos
mov
lret
addl
lds
addr16
xor
inc
and
mov
clc
out
scas
ss
and
rcr
dec
dec
mov
xor
daa
jae
nop
push
frstor
test
call
stos
mov
sti
and
push
and
cltd
add
sbb
xor
lret
outsb
cmp
testb
xchg
lahf
clc
dec
and
adc
add
pushf
pop
imul
mov
loop
jbe
lds
mov
mov
out
and
ds
in
push
les
mov
cmp
loope
dec
pop
jno
add
or
fcomip
fstl
push
mov
mov
test
hlt
cmp
icebp
jmp
test
into
sub
lcall
push
pop
inc
xchg
inc
add
pop
jb
mov
std
pop
mov
cltd
les
aaa
adc
sarb
cmp
mov
shlb
into
in
scas
sub
out
inc
nop
insb
test
ljmp
into
or
jmp
inc
ret
aaa
mov
aaa
mov
push
cld
vpunpckhqdq
loop
jmp
mov
jbe
rcll
shll
icebp
sbb
in
xchg
jno
out
dec
sahf
testl
fldl
fdivrs
mov
xor
popf
gs
imul
inc
mov
lea
in
pop
inc
push
jne
in
add
scas
xchg
rorb
xchg
aad
mov
fdecstp
jno
push
cmp
pop
je
or
test
out
aaa
mov
or
movsb
jne
mov
xor
jmp
mov
loope
or
mov
xchg
scas
sti
inc
jmp
add
cmp
int3
mov
push
iret
cli
call
enter
mov
fs
ret
icebp
xchg
in
lea
dec
mulb
inc
js
adcb
or
sub
stc
xchg
ljmp
mov
xor
jo
enter
out
add
sahf
dec
push
xor
mov
sub
lahf
cmc
std
in
sbb
fsts
push
mov
xor
aad
out
and
sahf
and
lcall
mov
jl
cmpsb
or
push
dec
pop
outsl
arpl
test
and
repz
pop
push
xchg
iret
mov
sti
popl
sbb
cmp
std
sbb
mov
mov
jne
mov
jmp
sbb
imul
pop
and
jle
cwtl
cmp
adc
mov
jge
inc
into
imul
mov
xor
lret
imul
mov
mov
jge
pop
sbb
pop
repz
mov
sbbb
movsl
cmp
push
repnz
repz
shll
ret
pushf
cs
imul
imul
push
jno
ret
pop
ja
icebp
imul
invd
jbe
xchg
cs
push
add
mov
loop
xchg
mov
outsb
into
jb
cltd
out
or
loope
aaa
testl
sbb
test
inc
sti
mov
push
mov
add
xor
mov
je
je
push
add
cmp
dec
mov
add
xor
push
push
lds
outsl
add
mov
cmp
sub
cmp
in
xor
dec
inc
xchg
js
aam
addl
mov
subb
mov
push
into
addb
dec
jnp
adc
mov
stos
push
push
int3
pop
push
jle
jns
inc
repnz
in
imul
adc
out
jo
cmpsl
sub
fs
or
or
add
push
das
lret
shrl
xchg
or
popa
imul
out
mov
lcall
pop
jo
shrl
or
in
jmp
addr16
sub
sub
popa
aam
push
and
test
mov
inc
lods
mov
js
or
pop
int3
popa
adc
mov
xor
push
lahf
xor
out
sarb
and
lods
in
cmp
bound
sub
xor
xchg
leave
int3
mov
int
dec
sti
xor
or
lock
jge
int3
xorb
cmpsb
sub
lods
cltd
adcb
lahf
aaa
arpl
inc
and
jb
mov
add
cmp
sbb
xchg
push
xchg
push
ret
cmp
hlt
pusha
scas
mov
pushl
movsl
fstps
stc
shll
mov
dec
div
mov
push
dec
testb
push
enter
dec
push
movsb
aad
aad
icebp
shlb
mov
insb
dec
jbe
stc
decl
mov
jne
fmull
pop
ja
stc
jb
in
popf
dec
push
fildl
sub
push
mov
jecxz
cli
not
pop
mov
lret
mov
mov
call
add
sahf
outsb
adc
pop
mov
ret
test
mov
test
pop
cld
pop
mov
dec
outsl
mov
or
jecxz
roll
testl
pop
repz
mov
push
mov
addr16
sti
call
sbbb
jp
inc
outsl
mov
push
mov
lahf
inc
push
gs
bound
add
push
jnp
stos
sbb
jne
repnz
cltd
cmpsl
sbb
mov
inc
dec
dec
nop
mov
push
adc
inc
les
out
push
js
push
gs
aad
xlat
les
movsb
nop
mull
lcall
icebp
adc
movsb
aas
dec
es
dec
pop
and
rorb
shrb
adc
stos
or
mov
dec
into
xor
into
xchg
negl
aas
xchg
and
add
fadds
aam
jmp
sub
popf
add
testb
mov
add
and
or
sub
pushl
inc
xlat
adc
ljmp
mov
jno
cmp
dec
fadd
and
ret
fld
mov
jo
in
repnz
mov
leave
daa
xchg
std
xchg
bound
xor
cmp
xor
cwtl
addr16
cmp
mov
in
call
mov
shrl
testl
jl
fildll
loope
adc
xor
push
xor
dec
pop
leave
mov
cmp
hlt
in
lods
dec
jo
mov
push
lea
mov
lock
pushf
mov
xorb
mov
stos
mov
fmuls
sub
push
jnp
cmp
mov
aas
shll
xor
mov
jne
push
xor
sub
loop
xchg
adc
push
mul
inc
iret
pop
cmpsb
arpl
ja
pop
adc
xor
jle
xchg
pop
mov
movsl
cmp
mov
dec
pop
fwait
rcr
jg
jne
xor
adc
stc
dec
js
mov
xlat
insl
push
shlb
sahf
jmp
shl
push
lcall
data16
imul
mov
in
outsb
mov
mov
and
fwait
xchg
aad
xor
negl
ljmp
xchg
sub
fs
out
out
adc
xor
std
and
dec
out
ret
cmp
and
das
jno
xchg
cmpsl
push
out
add
lcall
xor
push
pop
mov
imul
insl
mov
mov
ror
test
bound
jge
sbb
adc
movsb
cli
mov
pushf
xchg
sbb
xchg
sbb
add
pop
xlat
cmc
mov
mov
mov
sub
inc
sbb
inc
aas
aam
xchg
inc
ret
fsubl
jae
adc
or
mov
loopne
out
add
and
xchg
cmp
or
repz
sub
ret
into
mov
inc
repz
pop
iret
adc
scas
pop
scas
ret
scas
jg
sub
ret
out
pop
cmpsl
int3
rcrb
sub
add
sub
ss
dec
imul
jb
lahf
cld
mov
stos
mov
mov
xor
call
mov
faddl
daa
fisttpll
fisttpll
rorl
mov
imulb
test
cmpsb
ljmp
addl
cmp
add
mov
push
mov
add
pop
pushf
int3
inc
or
jmp
into
scas
les
inc
push
out
jo
lock
add
gs
mov
push
push
out
lret
push
cld
and
lcall
mov
push
stos
cmc
jno
push
mov
add
shrl
faddl
jge
sbb
imul
shrl
cmpsl
adc
rorb
push
or
xor
cmp
imul
pop
aad
movsb
cmp
xchg
mov
or
xchg
jb
dec
push
xor
cli
into
adc
xor
jecxz
ret
push
hlt
xchg
loop
aam
mov
mov
fidivs
cmp
fs
popf
dec
push
and
xchg
xchg
es
stos
cmp
outsl
fpatan
add
jne
fisubrs
andb
scas
mov
xchg
mov
movsb
das
cmpsb
mov
into
xor
cmpsb
sub
scas
and
outsb
mov
adc
push
mov
xor
or
addr16
mov
mov
and
pop
sbb
push
xchg
pop
cmp
out
gs
mov
push
sub
pop
sub
push
dec
stos
inc
push
out
daa
testl
rolb
clc
mov
jl
fsubrs
pop
nop
cmp
sbb
in
xor
in
pop
dec
dec
xor
push
popf
lea
stos
and
mov
loope
adc
jp
out
testb
in
jmp
pop
iret
ss
testl
mov
sub
jns
jbe
sbb
mov
dec
scas
xchg
ss
cmp
insl
sub
inc
rclb
mov
das
xchg
clc
sti
push
scas
sub
mov
insl
and
xchg
test
add
sbb
out
popa
nop
sti
mov
push
and
in
call
sti
push
or
inc
jbe
xchg
call
cmp
mov
pushf
xchg
popf
mov
xchg
add
jl
mov
add
outsb
outsl
jno
lret
pop
jns
fsqrt
xchg
sbb
mov
mov
sub
sti
cmp
mov
xchg
mov
pop
lret
int3
ss
nop
sub
cmpsl
mov
sub
cltd
and
stos
xor
nop
inc
out
stc
in
sub
inc
pusha
mov
xor
imul
push
subl
mov
test
cltd
out
rorb
push
aam
xchg
outsl
xchg
into
push
cmp
inc
scas
lods
loopne
cmp
dec
push
or
fistpl
inc
sub
mov
lret
ljmp
ret
shlb
push
lock
dec
mov
mov
xchg
mov
dec
or
or
ljmp
in
xchg
xor
push
mov
xor
stc
ror
mov
xor
pop
js
push
ss
pop
shl
dec
hlt
jns
dec
xor
das
jo
inc
mov
sbb
or
sahf
lahf
das
and
pop
outsl
cmp
ja
pop
or
rclb
seto
add
out
cli
in
jbe
mov
add
lcall
cs
test
push
adc
fcoms
pusha
mov
dec
cmpsl
fnsave
in
test
mov
leave
mov
push
push
jmp
je
xchg
or
test
fmuls
mov
push
fstpt
mov
pop
mov
in
xor
adc
sbbb
loopne
dec
imul
sub
jne
js
test
push
pop
xchg
dec
xor
les
repnz
ljmp
mov
jne
sbb
mov
xor
cmp
inc
mov
in
lods
fstps
cmc
insl
mov
negl
inc
loope
jne
das
pop
mov
xchg
bound
adc
dec
cmp
mov
js
jae
adc
in
stc
mov
imul
mov
js
pop
mov
cmp
sbb
testb
ss
divb
pop
dec
leave
jge
xchg
mov
and
sbb
inc
jbe
test
xor
iret
lcall
sahf
fists
daa
mov
push
sub
dec
add
pop
xor
out
and
ficomps
or
or
mov
cwtl
mov
jmp
aad
cmp
adc
xor
jmp
sbb
pop
push
call
test
imul
push
into
jge
pop
pop
into
lods
mov
sti
and
pusha
pop
mov
add
insb
xchg
stos
pop
sbb
movb
fdivr
roll
stos
mov
fidivs
inc
cmc
repz
add
inc
pop
popa
mov
outsb
dec
push
jmp
mov
mov
jg
icebp
pop
out
out
test
jbe
mov
leave
in
xchg
shlb
sbb
pop
sub
pop
push
loopne
cwtl
fcomps
mov
aas
adc
mov
jp
fsubr
cmp
ljmp
punpcklwd
loope
sbb
push
insl
std
mov
movsb
sbb
pop
ret
or
insb
bnd
lock
divb
sub
incl
es
mov
mov
pop
cmp
sbb
sub
cmp
es
jl
cmpsl
add
rolb
jnp
mov
mov
dec
sbb
inc
push
flds
xor
push
lahf
add
cmp
rorl
or
dec
push
jge
lea
lret
and
xchg
or
inc
cmp
or
xor
xor
arpl
in
je
aas
loope
sti
xlat
and
aam
les
and
push
cmp
aas
lret
inc
mov
lret
cmp
push
sub
out
push
pop
and
and
mov
push
fwait
stos
lods
sbb
gs
pop
enter
ja
push
shll
pop
dec
adc
pop
mov
aam
daa
testl
in
mov
add
daa
mov
push
daa
adc
lret
jae
and
mov
inc
sahf
imul
xor
jp
movsb
aas
push
sahf
imul
data16
bound
jns
sub
addr16
mov
in
sub
xor
stc
cltd
and
stos
xchg
dec
push
sti
nop
push
addr16
fsubrs
imul
add
daa
mov
and
sbb
cmp
imul
ret
jnp
repnz
mov
loop
test
jge
inc
lret
adc
in
pop
xchg
inc
add
and
fimull
push
int3
push
xlat
fs
and
nop
rcll
dec
xchg
dec
xchg
loope
xchg
and
negb
outsb
xor
pop
test
aas
test
and
jne
ret
mov
pop
repz
xchg
xchg
ja
rol
xchg
push
popf
fnop
gs
popf
mov
es
pop
cmpsl
je
sbb
cwtl
dec
push
lods
jle
call
subl
shufps
sbb
fsubr
xchg
movsl
sbb
xlat
sub
shlb
mov
hlt
xchg
jl
sbb
xor
ja
push
mov
xchg
sub
call
notb
jno
xor
sahf
pop
push
or
int3
roll
sub
xor
jmp
out
stos
popf
daa
pop
push
xchg
sbb
push
in
and
push
popa
xchg
mov
imul
js
outsb
push
xlat
imul
in
and
popa
mov
cs
jp
repnz
lock
pop
dec
or
nop
das
loope
cld
ds
les
aam
cmp
decl
cwtl
mov
mov
xchg
pop
mov
ret
stos
dec
in
ja
push
and
jg
or
jne
int3
push
mov
lret
int3
pop
es
xchg
mov
in
jb
icebp
or
aad
movb
jle
repz
push
ret
lods
sub
outsb
mov
jle
out
shll
fwait
adcl
cmpsb
loope
lahf
inc
jbe
inc
ljmp
adc
movsb
xlat
ljmp
pop
popf
ljmp
jmp
int
repnz
inc
stc
pop
sub
mov
xchg
sbb
and
xchg
arpl
leave
std
push
inc
xchg
lea
addr16
cwtl
dec
add
inc
out
mov
inc
xchg
mov
iret
les
sub
or
in
cmpsl
sbb
ficomps
aaa
or
xor
in
iret
sub
sub
mov
pop
add
incb
popa
mov
or
push
or
cltd
inc
sub
add
in
notb
rolb
and
mov
dec
push
add
mov
cmpl
comiss
lods
in
clc
addr16
mov
jne
popf
ss
mov
jg
inc
rolb
ret
scas
stos
fildl
jle
mov
aaa
lea
test
mov
jle
addr16
adc
xor
test
xor
ljmp
fisubrs
scas
inc
dec
mov
or
adcl
roll
sub
es
inc
mov
pusha
mov
stos
dec
push
repz
insl
xchg
aas
xlat
adc
mov
insb
pop
lock
adc
sub
lahf
xlat
push
mov
sbb
test
push
pop
sub
dec
mov
jg
dec
jg
xor
sub
jmp
insb
pop
lret
push
int
std
inc
popf
dec
xor
or
jne
pop
shrl
aas
std
popf
push
jno
mov
pushw
inc
loop
ret
popf
pop
xor
xchg
pop
rcrb
xlat
mov
outsl
cmc
xchg
pop
pop
xor
xchg
jbe
adc
push
mov
inc
mov
xor
repz
aad
rcrb
mov
xor
repnz
xor
sbb
scas
sti
push
xor
enter
mov
add
cmpsl
and
inc
cmp
fcoml
sub
insb
jns
xchg
shr
jmp
ds
imul
add
sbb
rcrb
add
pusha
daa
sbb
xchg
movsl
setno
inc
or
push
cmp
sub
out
mov
enter
mov
repz
push
pop
sbb
jl
xor
enter
cmp
push
mov
push
xor
xor
mov
lahf
mov
cmp
mov
into
fidivl
insl
cltd
push
out
sub
jno
shr
pop
pop
iret
div
mov
mov
sahf
pop
out
pop
js
sbb
jbe
mov
mov
or
lock
cmp
movsl
jns
inc
sub
push
pop
repz
adcb
pop
dec
pushf
dec
cwtl
jmp
bound
pop
pop
jb
leave
add
sub
out
leave
and
bsf
add
and
arpl
cmpsb
mov
aam
mov
lea
jae
cmpsl
into
sti
movsl
popa
repz
xchg
sub
dec
call
rcrl
mov
inc
icebp
arpl
jb
in
push
aas
xor
loop
push
ficoml
cmp
push
jmp
fimuls
jp
jmp
mov
test
xchg
pop
adc
ds
addb
loop
shlb
fucom
out
xlat
iret
inc
leave
xor
in
pop
or
xchg
mov
add
sub
xchg
pop
dec
arpl
push
fdiv
cmp
int3
push
out
cltd
add
aam
sub
pop
cmp
push
fdivr
fs
stc
pop
shrb
mov
popf
movsl
or
mov
sbb
and
popf
or
in
fdivrl
xlat
dec
push
insl
cmp
and
ret
out
mov
mov
pop
jae
sub
mov
inc
xchg
lods
mov
jp
dec
adc
xor
bound
pop
sub
jecxz
add
jo
mov
mov
pop
pop
icebp
out
cmp
cwtl
fisubrs
mov
mov
push
jg
lods
rorl
jecxz
data16
and
pop
dec
add
in
mov
rcrl
in
mov
loopne
imul
mov
inc
mov
cld
scas
xchg
dec
jmp
push
pop
inc
cmp
fcmovb
orb
pop
dec
es
push
dec
std
mov
jl
je
gs
aas
cmp
or
lds
mov
test
pop
sti
ljmp
mov
adc
movsb
icebp
lods
xchg
cmp
insb
dec
js
push
xor
mov
sub
add
scas
and
sub
aam
fnstenv
mov
nop
or
rorl
dec
lcall
add
pop
push
xchg
pop
sub
frstor
scas
js
int3
enter
jb
inc
push
jg
mov
std
sbb
out
mov
nop
cmpsl
sub
pop
cltd
inc
mulb
shl
mov
jmp
pop
xchg
out
fnsave
push
jno
push
jno
mov
int3
inc
test
dec
dec
jp
mov
mov
add
out
aam
or
or
lea
into
sub
push
test
fimull
push
aas
inc
lods
dec
jne
cs
pop
rcll
adc
sbb
sbb
mov
fxch
sub
dec
dec
aas
and
add
inc
xchg
sbb
fists
repz
or
jecxz
sti
lds
icebp
sub
int3
cmpsl
pop
cmp
in
mov
add
push
add
sti
add
ret
insl
les
jbe
mov
push
mov
cmp
fst
mov
jl
push
loope
jb
lahf
repz
push
mov
sbb
dec
dec
jae
rcl
fnstenv
repz
xlat
mov
xlat
cmp
xlat
jle
inc
or
xchg
lods
loopne
pop
aas
mov
sbb
and
adc
xor
pushf
or
mov
jbe
aas
add
fwait
lret
mov
add
and
xchg
popa
sbb
popf
popa
femms
push
adc
mov
cmc
sub
ljmp
mov
xchg
sbb
jl
mov
push
jmp
sbbb
push
mov
fldenv
dec
inc
cmp
xchg
ds
inc
mov
inc
imul
idivl
jno
imul
pop
aam
lods
mov
clc
aaa
aad
fisubs
sbb
xorb
or
inc
popf
push
cmpsl
or
mov
mov
fldt
faddp
and
jle
push
lea
mov
mov
jnp,pt
popa
add
inc
stc
sub
dec
imul
mov
xchg
aam
xchg
sub
rolb
fistpl
das
pushf
inc
push
sbb
mov
inc
std
push
ja
out
in
stc
lret
ret
stos
inc
frstor
xor
decl
inc
pushf
lahf
dec
icebp
add
call
mov
les
xchg
adc
inc
sub
inc
and
popf
jns
inc
push
xor
rcrb
mov
test
xlat
sti
out
xorl
lahf
adc
js
sahf
cmp
aaa
jnp
sbb
fs
and
test
fcomps
mov
push
popf
into
lea
sub
stc
xor
ss
push
subb
jl,pn
push
adc
fwait
jae
push
scas
iret
push
sub
aaa
popa
iret
jnp
scas
fldcw
push
jno
jbe
outsb
sbb
push
fisubrl
lods
inc
sbb
stos
dec
scas
mov
mov
cli
repnz
fdivl
addr16
jo
mov
in
stos
ds
pop
inc
lcall
dec
push
mov
add
fldcw
popf
push
leave
inc
pop
aam
enter
enter
mov
mov
stos
push
pop
cli
insl
push
cmp
xlat
call
repz
in
adc
add
lret
jmp
orb
adc
mov
hlt
imulb
insl
cmp
mov
mov
adc
inc
mov
cmp
xlat
mov
cltd
test
mov
mov
inc
in
sub
cmp
xchg
repz
and
cmc
cmp
cmc
mov
hlt
push
fcoml
or
jns
loope
aad
mov
ror
mov
fcompl
inc
pop
ret
xor
and
mov
push
insb
jge
js
shrl
push
sbb
cwtl
xor
or
dec
jo
mov
sbb
mov
add
sub
or
inc
out
out
jle
jo
mov
imul
sbb
nop
enter
pop
popf
cmp
je
test
mov
aas
movsb
mov
nop
sarb
jmp
jl
jp
mov
divl
jno
mov
enter
cmpsb
pop
mov
pushf
push
mov
fsubl
or
notb
imul
and
or
cmpsl
fists
jns
or
inc
shll
adcl
repnz
xchg
push
adc
fstpl
lods
sbb
faddl
mov
gs
imul
rorl
mov
xchg
dec
repnz
inc
inc
push
imul
push
push
push
push
push
ret
push
in
xor
jae
jg
cmp
out
idivl
notl
mov
lods
xor
sub
nop
rclb
dec
stos
fs
push
cltd
dec
mov
dec
jb
and
mov
shrb
cmpsl
cmpsb
push
lahf
loop
xchg
sti
add
orl
sahf
daa
and
jge
lods
lock
popa
mov
mov
jp
push
pushf
push
mov
lcall
lock
inc
push
rorb
lret
arpl
cmp
jb
daa
sbb
mov
and
pop
loop
ficomps
push
inc
jecxz
nop
adc
ret
ret
add
jb
dec
add
loopne
xlat
push
lcall
mov
inc
sub
mov
xor
aam
movsb
dec
fnstenv
aas
pop
ja
movsb
call
sbb
nop
push
mov
push
adc
lods
addb
adcb
stos
sub
push
mov
cli
fs
mov
mov
sbb
sub
outsl
les
movl
arpl
jne
loope
jae
hlt
gs
pop
mov
fwait
jle
dec
sbb
lret
roll
call
in
in
int
ret
movsb
jg
mov
jmp
sbb
xor
std
push
or
in
mov
adc
pop
cmp
cmpsb
add
lea
orb
fmuls
jnp
xchg
adc
inc
lahf
call
rorb
testb
cmc
lods
or
fwait
iret
fsubp
dec
jb
push
jecxz
sbb
mov
scas
fisubl
cwtl
data16
cmp
inc
sbb
orb
sub
mov
jb
les
test
loopne
and
adcl
aaa
adc
pop
bound
repnz
pop
sbb
xchg
imul
in
in
jbe
xchg
decl
stos
pop
mov
and
mov
push
add
inc
hlt
mov
repz
call
xor
into
pop
inc
andl
lret
and
push
cmp
int
sbb
mov
fistl
es
mov
mov
loope
mov
imul
insb
xchg
push
pop
push
push
test
cmp
aad
fcomps
xchg
clc
loop
push
out
mov
clc
call
cmp
xchg
mov
push
sub
int
arpl
lods
pop
push
mov
stc
jp
in
movsb
and
cmc
popf
hlt
dec
push
mov
das
jns
scas
xor
inc
inc
mov
in
jle
pop
sub
adc
arpl
fisubrl
lea
cmp
xchg
mov
or
jmp
or
pop
cmpsl
sti
xchg
int3
sti
xchg
jg
pop
add
sub
jmp
adc
xor
pop
test
xor
mov
jmp
test
push
xchg
fdivl
or
pop
xorl
lds
sbb
fcmovbe
lret
mov
cmp
adc
enter
scas
pop
adc
add
jp
or
jecxz
xchg
xor
sub
mov
cwtl
jecxz
and
test
cmp
mov
adc
xchg
jae
rclb
inc
gs
pop
jcxz
call
aam
psrlq
push
gs
enter
sub
addb
mov
das
cli
xchg
sahf
dec
in
pusha
pop
lcall
mov
adc
shl
lds
xor
fnstenv
sbb
popa
addb
inc
hlt
mov
jae
cmovae
mov
xchg
enter
push
mov
test
mov
aaa
push
jp
jo
mov
nop
jl
cmp
loope
inc
inc
ja
dec
inc
inc
andl
ret
jns
xchg
out
jae
push
dec
je
mov
mov
mov
loop
mov
add
jno
cmpb
push
add
mov
cld
mov
out
fld
mov
dec
push
enter
cs
aas
mov
stos
mov
xor
push
cmpsl
xchg
mov
subl
lods
test
cltd
incb
in
dec
pop
ss
add
dec
idiv
das
inc
and
dec
cmc
xchg
ja
xchg
dec
ss
sbb
loop
add
notb
or
and
cld
out
xchg
mov
push
stos
add
mov
popf
pop
jnp
cltd
push
stos
or
incl
test
jmp
scas
stos
push
adc
dec
sub
mov
dec
xchg
mov
adc
mov
cltd
mul
xchg
push
aad
lds
imul
jl
popa
cmp
sub
test
dec
stc
call
xchg
cmpsl
ds
and
pop
push
sbb
xchg
jbe
mov
mov
and
aaa
shr
push
gs
pop
loope
dec
lods
cmp
test
cli
cltd
or
bound
mov
and
mov
mov
lods
dec
cmp
dec
mov
jno,pn
popl
outsb
mov
jnp
add
lret
sbb
dec
adc
mov
push
pushf
push
adc
pop
and
jg
call
pop
push
cmp
or
je
mov
clc
out
pop
lret
test
in
cmp
stos
enter
push
inc
jae
pop
je
jno
out
add
ret
xor
fnstenv
or
add
push
test
imul
popf
sbb
cmp
sqrtps
cmp
sbb
pop
sbb
popf
adc
lret
movsb
xor
inc
aaa
sti
mov
subps
xor
pop
aam
sub
lahf
push
push
flds
and
pop
addb
cli
jno
and
dec
cmc
sub
sahf
cmp
out
ss
dec
pop
lock
lahf
lock
xor
nop
ja
movsl
cli
lods
adc
adc
xchg
xor
repz
jle
ret
xchg
cli
cmp
mov
inc
out
pushf
push
sbb
repnz
jb
mov
in
mov
xchg
iret
sub
push
push
lcall
push
icebp
loop
fidivl
push
mov
jmp
and
xchg
mov
pop
push
mov
jl
xchg
fbld
inc
and
jp
enter
ss
mov
loopne
mov
test
push
iret
pusha
push
lahf
and
xchg
and
sbb
out
cld
sub
jnp
or
je
jmp
xchg
aam
clc
cmp
test
stos
daa
sub
out
dec
call
dec
sub
je
mov
gs
or
call
out
lahf
into
popa
shrb
sbb
roll
add
xchg
lods
push
pop
lock
push
aas
jne
int3
cmp
mov
mov
test
push
jp
imul
adc
sub
cltd
cld
rclb
dec
enter
lds
test
xor
pushf
push
and
bound
out
adc
jne
xchg
outsl
in
je
cmpsl
or
jmp
and
sbb
scas
push
pop
jecxz
loop
or
leave
out
lods
subb
mov
stos
repz
mov
cmp
push
inc
push
ret
add
movsb
icebp
out
push
test
call
mov
rolb
pushf
jp
fs
cmc
mul
es
jb
add
inc
inc
dec
xor
jecxz
js
mov
jle
lods
adc
mov
clc
add
out
mov
cs
push
sub
push
test
sbb
cmp
sbb
push
fstl
and
adc
negl
or
test
negb
push
jmp
fcmovb
imul
jns
mov
lcall
push
or
cs
out
adc
fld
sbb
dec
lcall
add
loope
movsb
mov
ljmp
sbb
int3
jge
sbb
ljmp
daa
mov
push
out
into
loope
enter
and
sub
xor
loope
pushl
mov
cmp
mov
js
repz
sub
lock
xchg
gs
stc
das
mov
fsub
push
out
shl
pop
jl
add
inc
popa
in
push
daa
scas
popf
xor
bswap
test
xchg
sub
xor
add
in
adc
and
ret
jmp
jp
or
into
fistl
add
add
pusha
adc
dec
mov
insl
sbb
mov
adc
dec
popf
movsl
xor
cmp
sahf
das
dec
int3
repnz
mov
pop
ret
mov
scas
inc
cmp
push
outsl
jae
insl
xchg
jns
fistpll
mov
ficoms
mov
push
push
jno
xchg
pusha
test
insb
loop
insl
out
sub
rclb
stc
inc
or
add
in
add
or
inc
lods
mov
ror
xchg
call
sbb
jp
cmp
fwait
mov
insb
cmp
and
inc
and
test
ret
adc
movl
xor
out
fwait
mov
arpl
and
out
fidivs
inc
mov
testl
inc
jno
sub
mov
ljmp
je
pop
or
adc
imul
jle
setns
ds
push
lret
xchg
xor
sbb
pop
fwait
inc
cmp
xor
or
stc
pop
mov
or
push
and
mov
dec
xchg
std
fstl
inc
dec
dec
js
push
xor
mov
fnsave
push
repz
cmpsb
jmp
jbe
sbb
ja
mov
fcomps
ret
sahf
mov
in
shll
mov
push
cmp
les
outsl
pushf
add
sub
mov
xor
shll
jp
dec
daa
leave
pusha
rorb
xchg
cmpsl
jnp
imul
call
pop
add
mov
or
shl
xor
mov
in
iret
mov
jns
xlat
pop
enterw
notl
sbb
clc
aam
testl
jmp
push
adc
imul
stos
jge
cmp
xchg
adc
and
mov
push
rcr
push
push
es
int
push
inc
fsts
insl
cwtl
dec
dec
adc
inc
dec
xchg
in
adc
fwait
cld
jecxz
or
jnp
loope
lods
dec
xor
loope
testb
cltd
lret
mov
mov
push
cmpsb
adc
mov
std
add
fisubrs
cli
cmp
xchg
lret
jbe
mov
jo
sbb
lahf
ficomps
and
enter
xchg
insl
pusha
sub
lahf
pop
inc
mov
adc
jns
add
in
jmp
sub
push
std
xor
aas
mov
pop
add
cltd
xchg
adc
imul
lock
shrb
stos
push
and
mov
dec
pop
sbb
sbb
jg
cmp
pusha
std
lods
mov
jle
jae
inc
outsb
push
sbb
dec
inc
add
repz
loope
popa
jo
jno
insl
fld
or
mov
in
sub
into
stos
add
xchg
lret
cmp
lahf
outsb
adc
inc
test
adc
loope
es
lds
xor
inc
cmpsl
cld
cmpsb
leave
ja
bound
pusha
mov
scas
aas
pop
sarb
mov
rcr
outsb
pop
push
cmpsl
stos
int
fmuls
pusha
sbb
jb
inc
stc
jns
outsb
popl
sbb
add
out
inc
cmc
rorb
fs
aam
pop
test
mov
dec
add
sbb
jae
pop
jmp
jecxz
mov
add
popf
insl
aas
push
dec
outsb
ljmp
int3
dec
shll
pusha
push
notb
mov
cmc
pushf
mov
jo
add
stos
mov
dec
and
sbb
adc
jmp
cmp
mov
idivb
sbb
test
xor
icebp
sub
xchg
sarb
add
mov
fsub
lock
push
in
inc
and
and
add
pop
add
add
les
jb
lea
bound
dec
ds
xchg
sub
sti
in
insb
clc
cmp
mov
test
in
or
and
jbe
mov
inc
cmpb
xchg
mov
push
out
flds
push
jg
xor
mov
push
lods
push
lods
cli
mov
pop
pop
arpl
shlb
dec
sub
adc
xor
gs
daa
mov
lock
or
or
xchg
add
scas
gs
mulb
pop
push
or
sbb
xchg
pop
aad
pop
jmp
or
mov
jbe
and
xchg
pop
leave
dec
rcr
out
aad
xor
mov
push
pop
das
jp
push
pop
fiaddl
mov
add
fldcw
fldl
xchg
mov
sub
fldcw
stos
lcall
mov
pop
pop
loopne
frstor
lahf
das
insb
adc
icebp
shll
inc
or
jle
insb
int
mov
mov
lds
xchg
in
and
sub
fimull
and
imul
fs
movsl
push
lcall
lods
jb
out
into
mov
mulb
cli
mov
repz
filds
icebp
mov
sbb
and
jle
popf
and
xor
add
dec
push
int3
cmp
cli
rcrl
cld
mov
sub
pop
inc
jl
popa
shr
in
jo
jg
pop
sub
xchg
dec
mov
pop
popa
and
mov
cmp
mov
jecxz
lods
aaa
outsb
movsl
js
sub
jbe
aad
xchg
jge
ret
cmpsl
outsb
insb
int
movsl
stc
mov
dec
pop
pop
mov
and
aas
ja
icebp
mov
insb
push
xchg
mov
or
pop
mov
adc
repnz
js
lods
pop
mov
or
mov
mov
and
sti
push
jmp
insb
movsb
std
inc
sub
mov
cs
sbb
mov
jbe
shrb
mov
out
jge
xchg
cld
pop
mov
jg
push
idiv
pop
flds
cld
xchg
in
arpl
cmp
int
scas
or
nop
ret
nop
rclb
add
or
clc
and
xchg
test
sub
push
dec
jp
push
lea
push
xchg
inc
mov
mov
stos
or
or
fwait
lea
repnz
jns
cmp
sbb
sbb
test
test
xchg
mov
cmpb
sahf
add
adc
dec
jecxz
dec
ret
xchg
rcrl
adc
popa
mov
subb
xchg
push
sub
or
dec
jge
jmp
pop
inc
mov
js
jno
cmp
lret
dec
add
add
ret
cmc
fcoml
aaa
cmp
pop
push
mov
shll
sbb
or
sub
jmp
cmp
scas
adc
arpl
inc
daa
cmp
add
idiv
mov
scas
cmpsb
lods
push
xchg
mov
testb
pop
xchg
mov
enter
xlat
and
fidivrs
inc
inc
mov
div
and
test
push
fucomp
out
outsb
jecxz
cmp
sub
adc
and
or
or
popa
popf
lods
add
cmp
pop
sub
xchg
adc
insl
fdivrs
idivl
mov
dec
dec
pop
loope
push
shrl
lcall
xor
iret
fbstp
out
test
lock
sub
ror
dec
out
aas
and
inc
jnp
mov
hlt
mov
or
movaps
ljmp
lret
ljmp
out
pop
mov
jb
xchg
jg
adc
ss
ret
inc
int3
xchg
nop
adc
aaa
inc
in
xor
repz
dec
mul
jb
cmp
dec
int3
adc
test
jnp
and
adc
jg
lds
test
cmp
mov
outsl
mov
bound
fmuls
outsb
jmp
in
lds
insl
daa
movsl
cmc
lds
test
dec
lock
in
push
inc
push
pop
enter
xor
leave
out
std
int3
xchg
and
fldenv
jae
out
adc
shll
push
mov
mov
or
xchg
aam
xchg
add
xor
insb
addr16
sub
aaa
out
imul
fidivl
sub
enter
and
dec
xchg
fidivrs
stos
dec
out
add
adc
int3
adc
sahf
iret
out
mov
xor
push
cwtl
cmp
aad
rolb
xor
mov
outsb
ja
xchg
adc
iret
call
enter
add
filds
test
mov
scas
call
scas
xchg
out
ret
testl
pop
push
fdivr
data16
pop
imul
dec
arpl
mov
pop
in
fisubs
cmpsb
dec
test
cmp
jne
movsl
mov
push
cltd
int
inc
dec
jnp
clc
inc
in
cmp
jb
loopne
dec
data16
add
push
mov
adc
mov
movsl
xor
jmp
mov
and
adc
or
dec
cmc
test
out
dec
pop
insb
mov
and
pop
cmpsb
pop
xor
adc
adc
pop
aad
fidivs
and
lock
decl
insb
out
aaa
lcall
xor
out
jcxz
imul
xchg
pop
fildl
daa
jmp
loope
clc
mov
sub
cli
mov
lea
icebp
xor
enter
std
cmp
in
inc
jno
sub
lahf
jbe
sub
add
pop
mov
fadd
int3
mov
es
in
push
scas
shlb
jecxz
movsb
add
popa
push
add
icebp
rcrl
arpl
lcall
jp
jns
test
pop
push
sub
jle
inc
xchg
ljmp
or
jne
aad
push
xchg
lahf
mov
lret
test
and
xchg
lret
sub
pop
mov
sub
dec
cmc
xchg
sub
aad
pushf
sbb
sbb
fs
or
inc
mov
mull
and
cmc
test
rclb
jno
push
lock
jmp
ja
aas
bnd
dec
sub
jl
insl
jo
insl
js
push
lods
xor
repnz
inc
or
mov
mov
lea
pop
ret
xchg
dec
mov
push
xor
mov
repz
dec
push
push
add
mov
mov
cs
popa
dec
lret
pop
insl
sbb
add
fldenv
dec
sarl
jecxz
pushf
lcall
jmp
ljmp
adc
xchg
adc
cmp
enter
js
mov
mov
popa
fadds
inc
repnz
mov
and
cli
hlt
dec
lret
lods
push
rol
mov
movsb
jp
call
in
mov
cmc
into
dec
movsl
repz
loopne
mov
cmpsl
xchg
add
sbb
addr16
stos
mov
mov
andb
jb
data16
cmp
jnp
pop
adc
cmp
push
xchg
or
and
js
push
or
out
cmpsl
xor
rolb
and
cmpsb
sbb
mov
adc
dec
adc
mov
inc
jbe
mov
inc
je
adc
divl
fdivl
xor
repnz
mov
adc
fisttps
aas
add
jno
shrb
push
lea
add
and
ljmp
sahf
cs
or
dec
cld
jp
push
arpl
gs
add
lods
jo
or
add
stos
sbb
ja
call
mov
lret
jp
jne
xor
or
mov
test
not
inc
inc
or
lods
sub
push
jecxz
insl
cltd
std
jmp
sbb
xor
mov
push
or
daa
inc
ja
sub
add
aas
push
cmpsb
test
aaa
and
outsl
sbbl
decl
jmp
fidivs
test
push
js
xchg
xchg
and
xchg
scas
xrelease
es
in
mov
fistpll
pop
fdivrs
cmpsl
sub
pop
xor
inc
movsb
sahf
cmp
out
in
fistpll
xorl
shrb
pop
jnp
push
lods
insb
out
mov
inc
rolb
pop
cmp
inc
jp
jg
fimull
push
scas
pop
adc
lds
ret
call
out
ljmp
lret
add
dec
mov
cli
inc
das
out
je
xchg
lds
es
mov
iret
mov
or
lret
xor
jo
aas
ret
into
push
dec
cmp
xchg
mov
jecxz
rclb
call
cmpsb
pop
push
push
lret
pop
xchg
out
xor
mov
call
pop
fs
jb
cmp
mov
test
cld
cmp
sub
lods
pop
add
xor
pushf
clc
inc
enter
xchg
popa
push
out
inc
lret
sbb
pop
fistpll
incl
aam
rcl
cmp
insl
sbb
daa
fnstsw
xchg
jmp
xor
scas
js
ss
xor
push
stos
into
or
cs
movsb
hlt
enter
ljmp
mov
jne
mov
icebp
pop
xchg
mov
xor
mov
mov
push
scas
lcall
lea
add
in
dec
js
cmpsb
int
adc
data16
pop
dec
pusha
push
jns
out
bound
jp
xchg
lret
sub
lret
gs
insb
scas
call
test
sub
aam
xchg
gs
fists
jbe
loop
mov
iret
cmp
and
adc
and
fucomi
popf
rcr
and
xchg
shlb
loope
or
xor
mov
sbb
or
push
push
enter
fst
lret
fsts
loope
ss
inc
xchg
fwait
adcl
fs
std
xchg
movsl
or
xchg
stos
push
add
nop
sub
cmp
cmp
cld
fisubrl
mov
addr16
mov
or
jecxz
ficoms
jp
sbb
in
sahf
out
xor
sub
jo
cs
repz
in
mov
inc
xchg
pop
mov
mov
xchg
inc
pop
loop
mov
or
mov
jg
aam
rcrl
jg
xchg
rorb
lret
mov
xchg
aaa
lret
sub
push
mov
sub
cwtl
push
add
ss
push
mov
sub
mov
mov
test
pop
popf
adc
add
cmpb
daa
mov
push
enter
add
push
loopne
sbb
in
jp
in
add
xor
hlt
sbb
cld
push
pop
loop
pop
add
js
xchg
incb
cli
xlat
das
xchg
mov
in
jne
int
das
mov
dec
xor
lds
test
daa
xchg
fmuls
scas
dec
les
xor
mov
sti
orb
ret
lods
icebp
push
and
or
loop
lcall
shll
fwait
adc
out
jg
mov
adc
push
mov
movsw
outsl
push
arpl
adc
inc
dec
push
add
ljmp
dec
ret
sub
imul
push
inc
je
mov
xchg
dec
cmp
lods
ljmp
stos
pop
orps
out
push
jo
push
mov
cmpsl
xchg
decl
shrl
mov
aam
xor
imul
test
cmp
bound
fstpt
sbbl
mov
adcb
fsubr
cmp
inc
ror
xchg
sbb
mov
addr16
fnstsw
mov
sahf
outsb
cmp
rol
inc
push
cmp
mov
mov
ret
inc
and
sbb
aaa
inc
cmp
xor
jle
jge
nop
inc
mov
scas
add
mov
jae
test
call
xchg
repnz
pop
ss
mov
jno
js
jne
add
mov
into
cmc
lds
int3
push
pop
mov
xor
in
incb
sub
add
cmp
adc
in
mov
fwait
movsb
lods
add
mov
inc
addr16
jns
pop
xchg
mov
fldcw
jae
test
fidivs
stc
push
pop
stos
mov
outsb
movsl
adc
mov
cwtl
xchg
das
dec
dec
cmp
je
loope
inc
dec
lock
mov
hlt
and
out
mov
enter
mov
stos
jnp
push
cmp
mov
dec
imul
stos
popa
outsl
cld
pop
sub
imul
test
sarl
call
enter
dec
jbe
int3
mov
jmp
mul
and
es
or
sbb
in
bound
jo
xchg
leave
pushf
gs
out
push
xchg
test
jge
mov
push
inc
lret
push
ja
out
pop
xchg
fstpl
or
ds
sbb
sbb
inc
adc
shlb
or
cmp
lods
fcmovbe
in
and
icebp
enter
cs
jmp
in
cld
test
jle
mov
mov
sub
adc
push
xor
fcom
mov
mov
in
stos
jp
xor
xor
push
pop
or
and
mov
and
add
cmp
in
fcmovb
xor
addr16
push
rcll
sbb
adc
push
pop
sbb
out
jns
call
idivl
test
insl
push
repnz
shll
sub
xor
sbb
lds
leave
or
inc
inc
mov
push
mov
aas
test
iret
add
and
int
push
add
mov
shll
mov
rcrb
xor
push
inc
out
xchg
scas
cmpb
inc
vmovhps
fistps
into
jmp
fistl
mov
imul
ljmp
andl
push
push
dec
xchg
mov
add
hlt
jae
das
cltd
cmp
mov
mov
jge
push
jp
jb
repz
sbb
imul
test
and
sub
int
add
pop
es
imulb
filds
jl
stos
xor
iret
rorb
xchg
insb
jae
add
outsb
mov
out
rcl
lret
push
mov
xor
cmpsb
cmp
pop
into
mov
std
push
mov
xor
add
dec
pop
ficomps
push
outsb
ret
jne
push
push
sub
aas
stos
jae
xchg
out
sarb
fs
cmc
mov
pop
rcl
mov
lock
popf
nop
cli
push
xchg
ljmp
xor
aaa
sbb
adc
push
sahf
popa
push
push
divb
imul
push
push
mov
mov
mov
sbb
outsb
and
lock
mov
jb
xlat
aad
pop
shlb
sti
lds
aam
mov
popa
aas
add
cmp
mov
pop
orl
repz
lods
pop
cmpsl
shl
fs
inc
lods
jno
mov
outsl
cmc
popa
inc
pop
xlat
add
cli
pop
pusha
sbb
inc
lret
decl
cmp
xlat
dec
pop
mov
test
mov
shll
ret
and
cwtl
pxor
adcb
pop
jge
add
cmp
popf
dec
scas
mov
jmp
out
jb
outsb
mov
loop
stc
shl
cltd
mov
mov
add
jecxz
cmpsl
cmp
pop
lret
out
ljmp
test
pop
pusha
mov
mov
dec
mov
push
insl
cld
imul
in
int3
dec
outsb
loop
clc
das
das
lods
pop
insb
mov
outsl
pop
and
lret
mov
push
sub
sbb
mov
add
xor
roll
dec
mov
das
fucom
pop
xor
xor
pop
imull
ret
vphaddwd
lods
bound
inc
das
ss
adc
mov
xorb
sub
loop
jns
test
imul
ja
pop
repnz
outsb
mov
xlat
rcll
dec
push
pop
mov
jg
cs
dec
stos
aam
sub
sti
es
ja
aam
push
in
adc
ret
inc
negb
push
loope
push
sbb
xorl
sbb
sub
stos
ficoml
adc
jle
hlt
mov
push
cltd
jl
push
pop
xor
in
jne
xor
insl
fs
and
daa
add
popa
outsl
ret
fwait
inc
ljmp
or
movsb
ds
xchg
sbb
pop
test
lods
incb
repz
les
xchg
sahf
iret
adc
dec
inc
sbb
jge
or
and
xchg
aam
bound
test
lock
divb
pop
movsl
lret
push
mov
ret
lds
movsl
popl
adc
cwtl
mov
popa
or
push
out
inc
xor
lods
xor
cmp
adc
negl
cmpsl
add
lcall
test
jb
in
jl
inc
pop
shrb
pop
push
pop
subb
imull
repz
xor
mov
sete
repnz
lcall
xor
stos
sbb
std
addr16
aad
scas
outsb
xlat
dec
lods
sbb
mov
les
mov
mov
jnp
int
dec
cmp
push
mov
and
ds
je
mov
and
jle
scas
inc
mov
shl
popa
and
cmp
inc
faddl
mov
fstl
scas
ljmp
push
fsubl
xchg
cmc
or
imul
inc
rclb
inc
add
test
mov
fistps
push
and
adc
es
lret
jo
outsl
xchg
js
testb
inc
fistl
daa
add
loope
cwtl
mov
add
fwait
adcb
dec
jp
sub
and
test
in
bound
ss
cmc
sub
sbb
inc
xchg
testl
subl
loop
adc
push
or
sbb
xchg
add
int
cmp
loop
xchg
call
jmp
ja
out
mov
jp
sarb
gs
cmpsl
stc
lahf
jmp
in
in
lret
test
sbb
stc
mov
scas
out
out
out
inc
add
jb
dec
adc
adc
mov
jbe
loopne
cmp
stos
out
cmpl
or
xor
xchg
orb
dec
mov
push
movsl
int3
clc
cld
or
cmc
cs
stos
rorb
dec
inc
push
or
push
sahf
iret
adc
mov
mov
filds
inc
stos
adc
decl
lcall
int
aas
mov
inc
mov
mov
jl
pop
gs
sub
sbb
pop
cmp
mov
push
inc
ss
mov
scas
loope
out
call
fnstsw
stc
xchg
xchg
or
aas
in
pop
mov
xorb
pop
loop
pop
cmp
xchg
lea
xchg
addr16
cmp
xchg
dec
jae
bswap
adc
loope
fstps
mov
jle
push
dec
mov
cmp
addr16
fildll
mov
sub
cwtl
add
xchg
sub
or
xchg
in
xchg
adc
cltd
enter
je
mov
sub
stos
sub
lret
inc
sbb
xlat
inc
daa
lret
test
jmp
fldenv
xchg
jns
and
arpl
mov
cmp
ds
pop
daa
and
cmp
xor
cltd
repnz
push
jecxz
aas
xor
inc
add
jb
mov
lret
lds
add
test
cmp
scas
adcb
lret
and
jg
sub
les
lods
shll
out
mov
stc
push
adc
movsb
xchg
sbb
jge
out
pop
sti
mov
mov
add
pop
push
ljmp
imulb
popf
adc
les
aas
test
fisubl
sub
xchg
sub
push
push
sbb
mov
cmpsb
icebp
sbbb
shl
push
xchg
and
xchg
push
push
shl
addl
pop
cmp
cli
mov
dec
test
fmull
insl
jb
scas
mov
cmp
aad
pop
mov
lret
mov
sarl
and
cld
and
pop
adc
popa
pop
mov
jb
mov
mov
cmc
lods
ljmp
add
popl
inc
sbb
pop
and
adc
pop
inc
xor
lock
mov
test
or
imull
pushf
int3
fbstp
jmp
test
dec
out
push
mov
xlat
adc
push
mov
aas
leave
rcrl
test
outsb
ds
lods
orl
and
int3
inc
add
das
mov
cmp
mov
jns
jecxz
iret
sbb
or
xor
call
inc
pop
xor
inc
xchg
mov
pop
xchg
xor
mov
push
pop
mov
scas
test
pop
and
test
jmp
hlt
rcl
pusha
movsb
mov
jb
lods
cltd
repz
dec
sti
inc
mov
mov
test
xchg
les
adc
ftst
inc
push
lcall
adc
incl
in
mov
std
and
cmp
mov
les
pusha
vsubsd
jp
jmp
pushf
lea
xchg
insl
cmc
stos
out
xchg
lcall
outsl
loope
dec
inc
mov
cmp
pop
addl
fldcw
jp
mov
daa
bnd
test
push
push
icebp
inc
fldt
add
adc
push
enter
loope
push
test
scas
jmp
pushf
js
push
mov
ja
push
jb
pop
jno
ret
push
sti
sbb
pusha
into
flds
push
or
bnd
mov
add
mov
int3
ror
clc
sahf
jae
pop
test
mov
mov
xor
popf
add
mov
pop
fs
add
cmp
fdivl
adc
xor
add
pop
sub
cmpsl
dec
push
pushf
call
call
in
pushf
loopne
inc
popf
sub
test
mov
or
stos
lahf
sub
xorl
mov
push
testb
lret
dec
es
push
push
jb
orb
hlt
or
mov
ficompl
and
adc
into
cmpsl
mov
mov
sbb
or
aas
dec
pop
das
mov
and
mov
stos
jo
test
add
add
aaa
rcl
and
ds
cmp
lods
mov
js
or
jae
cltd
xchg
fs
adc
jnp
pop
dec
movsl
test
push
repnz
dec
outsl
push
stc
lcall
icebp
xor
xchg
and
jo
cmpsl
fnstcw
test
or
jae
daa
lods
mov
sub
add
fsubr
fldcw
jno
loopne
out
lret
fs
sahf
jecxz
lcall
scas
pop
cs
jb
or
loope
aam
adc
and
cli
mov
adc
in
cmpl
out
aad
xchg
clc
iret
ret
xchg
ss
test
movsl
inc
mov
cmpsb
bound
lret
int
popa
leave
aad
data16
cmc
pop
cmp
or
iret
add
std
mov
insb
jne
pop
pusha
mov
shl
sub
sub
mov
jb
jae
mov
fnstenv
cmpsl
aas
icebp
add
xchg
mov
mov
mov
jno
sti
push
and
rcrb
lahf
jge
xor
push
sub
cwtl
daa
jnp
pusha
fcoml
data16
ficompl
mov
adc
sti
adc
sub
and
sub
rorb
psubsw
cmp
sbb
push
dec
sub
icebp
aas
push
mov
sbb
aas
mov
lret
aaa
lods
push
call
fdivrl
gs
cli
xchg
fdivrp
adc
int
pushf
inc
jbe
mov
or
pop
dec
add
daa
pop
push
sub
ds
cmp
clc
dec
gs
movsb
sub
fists
adc
loope
out
adc
jg
sub
roll
mov
mov
pop
pop
adc
pushf
and
sub
rcl
adc
xchg
ret
adc
ljmp
rcr
sbb
roll
iret
test
sar
clc
push
scas
push
push
sbb
mov
mov
aad
pop
pushf
dec
sub
lods
sub
xlat
or
push
cmp
imulb
test
jbe
xor
mov
cmp
inc
fs
and
lret
jge
add
pop
cmp
xchg
or
test
gs
adc
aaa
repz
lahf
cmpsb
add
lock
jno
mov
ret
cltd
mov
adc
jge
push
stc
popa
in
mov
push
jl,pn
addr16
cli
in
fidivrs
mov
into
fs
push
addl
sahf
mov
sbb
lea
push
dec
nop
sbb
icebp
popa
adc
movsb
adc
out
pop
out
jae
orb
jb
push
adc
dec
pop
sbb
cmp
inc
xor
nop
insb
out
cltd
xor
nop
mov
rcrl
loop
push
fidivl
jnp
popa
add
push
adcb
mov
lds
xlat
pop
pop
push
pop
mov
cmpsb
xorb
bnd
lods
push
push
scas
or
jl
xor
sub
nop
mov
rol
cmp
scas
sbb
lea
ja
pop
lds
out
or
jle
mov
xchg
cmp
data16
cltd
pop
lret
lea
into
adc
cmp
xor
jl
outsl
popa
mov
roll
or
mov
push
sbb
fldt
or
es
sbb
push
sub
jle
jnp
ljmp
mov
dec
add
cwtl
scas
adc
push
lahf
push
sub
inc
ja
orl
add
imul
stc
adc
lcall
lret
fsubrl
hlt
add
lcall
mov
dec
and
adc
std
add
sbb
pop
mov
sahf
jne
stc
lods
jae
lret
lret
test
lret
pop
jmp
call
mov
out
adc
mov
lahf
test
gs
out
hlt
mov
call
xchg
out
aas
mov
daa
dec
adc
jl
add
cmp
xor
xor
pop
fdivp
fiadds
pop
sub
leave
ret
sbb
sbb
cltd
xor
mov
mov
shl
dec
dec
pop
mov
dec
mov
fs
aam
inc
jg
pushf
incl
data16
mov
lret
and
lock
cmpb
ret
ss
xor
idivl
inc
pop
outsb
rcl
jno
xchg
fcmove
or
cmp
call
lret
mov
gs
jecxz
cli
test
inc
xorl
inc
mov
push
mov
dec
fwait
inc
push
in
vmaskmovdqu
fincstp
pop
in
sub
push
xchg
add
cwtl
xchg
pop
jbe
and
ljmp
sub
and
shrb
filds
ret
pop
rcrl
mov
add
in
jo
les
adc
shrb
lock
mov
das
add
lret
movsl
cmpsb
adcl
jle
ljmp
xor
nopl
andl
jge
arpl
push
scas
lret
lods
movsl
cmp
push
paddq
and
xchg
pop
add
in
insl
pop
stc
xor
fisubs
jnp
or
divl
scas
sbb
ljmp
sbb
jmp
or
test
inc
popf
xchg
test
jl
in
mov
cmc
dec
bound
outsl
out
sbb
pop
sub
std
lret
push
or
cmp
or
enter
inc
pop
inc
inc
inc
rcrb
xor
sub
dec
pushf
mov
mov
mov
mov
movsl
les
xchg
pop
mov
test
push
cmp
jns
dec
cmp
clc
jo
or
and
dec
jo
sub
rcrb
sahf
iret
mov
mov
jl
sbb
pusha
orb
mull
push
ljmp
mov
into
add
and
add
sbb
loop
fiadds
pop
cmp
out
sub
inc
clc
adc
add
gs
in
in
push
cld
or
nop
int3
adc
inc
sbb
jmp
xchg
cmp
lods
push
iret
xchg
lods
push
dec
jbe
sbb
dec
push
repnz
je
ds
in
mov
and
mov
mov
xor
push
test
push
dec
dec
lahf
ds
int
add
orl
mov
and
cmc
popf
cmp
lret
push
add
adc
cmpsb
popa
sarb
lods
pusha
test
sbb
test
mov
push
lcall
fucom
clc
cmp
adc
rol
dec
cmp
scas
mov
inc
xor
push
dec
mov
sub
adc
ja
dec
cwtl
push
inc
or
insl
sahf
fldcw
in
add
cmp
ror
xor
nop
aas
and
pop
push
mov
mov
mov
mov
push
jp
pop
bound
pop
or
jno
mov
and
and
xchg
js
ljmp
or
mov
out
loop
lahf
cmpb
jnp
inc
mov
push
jl
jnp
or
sub
xchg
stos
adc
push
je
jmp
sbb
je
adc
cmp
and
fsubrs
and
and
das
cli
xor
jmp
mov
mov
push
adc
js
lret
push
rcll
xlat
sbb
dec
test
ret
sbb
or
sbb
cmc
das
adc
mov
pop
xchg
xor
mov
mov
std
mov
adc
jmp
es
cmp
leave
dec
cwtl
add
mov
add
lretw
push
pop
mov
add
inc
outsl
or
inc
fcmovnu
add
pop
jp
adc
enter
fnstenv
arpl
push
loop
stc
sbb
out
adc
out
push
pop
int3
fsub
aad
dec
jle
mov
pusha
jnp
stos
jp
sub
jmp
pop
leave
mov
push
out
jl
mov
cld
add
pop
jl
cmp
out
push
jmp
jle
imul
aad
dec
add
das
jbe
insb
xchg
xchg
add
jbe
and
xor
sub
sub
mov
test
les
push
inc
rorb
js
ret
jns
ret
test
push
pusha
ds
add
shl
div
fsub
xchg
loopne
insb
subl
test
sub
fisttps
cld
cmp
test
xor
add
ret
dec
hlt
aad
mov
sbb
ret
pushf
call
div
fistpl
cld
imul
and
insl
mov
sbb
mov
mov
pop
sbb
aad
inc
cmc
sbb
cltd
adc
outsb
and
and
mov
inc
addr16
mov
mov
add
jnp
or
adc
xchg
inc
daa
data16
leave
dec
push
loope
pop
mov
aad
loope
cs
jnp
movsl
add
add
fdivrl
push
add
cmp
in
inc
mov
xor
ret
daa
bound
out
icebp
xchg
xchg
lcall
or
push
push
rol
mov
jb
pop
jb
xchg
pop
inc
jns
test
je
push
arpl
push
int3
mov
lods
loopne
mov
mov
adc
roll
adc
lods
out
fbld
lret
ljmp
lods
jmp
loope
sub
es
mov
push
sbb
inc
imul
fwait
std
fidivrs
xorl
out
addr16
adc
ret
or
ss
mov
xchg
fdivrl
std
mov
les
xor
test
lret
xor
inc
outsb
out
ljmp
lods
sub
inc
sbb
push
fnsave
inc
sbb
xor
loope
stos
xor
lea
mov
pop
push
mov
jp
sub
sti
shlb
pusha
pop
mov
lds
cld
imul
or
pop
into
in
mov
sbb
shr
repz
mov
lock
sbb
push
jg
and
mov
jo
mov
inc
aad
dec
sbb
aaa
out
out
in
inc
dec
push
adc
dec
add
or
dec
popa
cli
cmc
sbb
adc
lcall
ss
scas
or
sbb
or
ss
hlt
mov
sub
dec
sbb
jno
lock
jmp
cmc
jecxz
ds
inc
imul
sti
insb
clc
inc
les
leave
aaa
adc
gs
xchg
test
leave
xchg
mov
dec
ja
dec
cmp
adc
push
test
push
scas
sub
mov
adc
adc
outsl
xchg
inc
insl
adc
repnz
inc
add
loop
repz
jae
push
push
mov
xor
fiadds
cmp
iret
outsl
popa
insl
inc
loopne
in
jo
xchg
mov
stos
jp
cmpsl
push
fs
jp
cmpsb
hlt
push
fwait
xor
inc
icebp
movsl
arpl
cmp
mov
lods
ljmp
or
sti
in
xchg
cmpsb
mov
test
into
adc
jge
test
in
xor
mov
call
mov
pop
xchg
dec
mov
lret
cmp
ficompl
adc
pop
imul
mov
lds
cmp
in
in
bound
push
mov
sub
cmp
fbld
in
mov
addb
stos
call
jge
cmc
inc
inc
cwtl
inc
sbb
fisttpl
insl
in
mov
or
push
dec
xchg
mov
mov
std
inc
lcall
cltd
jmp
sub
iret
gs
jae
cmp
xchg
push
scas
test
arpl
cmp
sbb
mov
repz
lea
jg
shr
sbbb
pop
fcoms
xchg
pop
add
push
mov
dec
ret
out
in
mov
lods
movsb
shlb
inc
pop
xchg
sub
pop
push
mov
daa
mov
cmp
mov
out
pop
push
shrb
aas
cli
mov
jp
mov
lds
subl
push
in
push
lret
cmp
or
jb
pop
mov
das
scas
lea
and
jo
jno
adc
push
pusha
mov
add
pop
das
fs
xchg
or
ret
scas
sbb
jecxz
inc
mov
inc
mov
jbe
pusha
in
daa
push
fs
inc
mov
cli
xchg
or
add
mov
test
stos
mov
cmpsl
loope
outsb
ret
sbb
addb
dec
sub
lahf
cs
adc
dec
add
xchg
push
sub
mov
pop
mov
inc
pop
out
dec
loopne
sti
lock
cli
adcl
in
ret
outsl
mov
xchg
cmp
ret
pop
js
fstl
sub
pop
jae
pop
imul
int
jbe
dec
data16
push
jb
adc
xorb
jae
popf
pop
dec
test
mull
rol
ficomps
ljmp
mov
in
jmp
popa
sub
mov
jge
xchg
xchg
xor
out
lret
inc
cmp
outsl
push
out
jmp
xor
hlt
xlat
icebp
mov
out
pop
jg
lret
and
mov
mov
and
aas
push
sbb
repnz
rorl
jo
std
shlb
dec
dec
jmp
test
aaa
test
repnz
sub
cwtl
adc
or
outsl
jg
mov
and
cltd
mov
into
pop
fstps
push
negl
inc
stc
lcall
or
xchg
subb
lds
mov
add
or
or
xor
int
push
mov
inc
popf
jbe
inc
andb
pop
cwtl
and
inc
mov
les
xchg
sti
test
jo
adc
lcall
iret
xchg
shll
mov
fsubl
mov
loopne
push
shl
and
pusha
stos
fs
mov
xchg
aas
stos
pop
jmp
mov
js
mov
sarb
notl
data16
sub
shlb
loopne
fcmovnb
add
js
pop
lods
lret
ljmp
and
mov
mov
sub
in
fsubp
int3
cmp
sbb
imul
movsl
jno
push
adc
dec
push
inc
pop
inc
mov
push
sub
push
lret
xchg
repz
lds
fstpl
les
repz
ja
repnz
and
cmp
inc
dec
sti
in
mull
mov
call
je
push
add
add
mov
jb
and
pop
xor
dec
xchg
lock
sub
std
or
mov
inc
push
in
aad
gs
mov
jbe
xchg
push
inc
es
aas
movsl
xorl
idivl
jl
mov
xor
mov
push
push
pmullw
adc
dec
pop
pusha
fildll
dec
imul
jge
xchg
test
xor
in
mov
ljmp
push
aam
das
insb
daa
addr16
aas
sbb
add
push
adc
xor
jg
or
and
sub
push
inc
inc
push
jg
ds
lcall
in
fstp
xor
xchg
lods
imul
testb
jne
or
ficoml
xlat
aam
negl
add
inc
dec
in
addl
out
test
loopne
sub
push
or
mov
test
mov
cmpsb
aad
inc
in
lods
in
sbb
addr16
cmp
mov
mov
mov
cmc
out
xor
test
inc
lret
sub
jecxz
stc
lock
add
dec
arpl
cmp
jmp
jle
repz
jmp
mov
mov
pop
test
sub
test
in
shlb
adc
mov
jbe
push
add
push
sub
or
andb
dec
arpl
pop
mov
icebp
mov
out
adc
cmp
xchg
orb
pushf
es
or
mov
and
dec
dec
pop
xchg
add
ret
cmp
std
stos
test
js
inc
sbbl
mov
in
pop
xor
jle
jecxz
lock
inc
push
ja
cwtl
int
fistpl
sbb
addr16
shl
jb
inc
xor
insb
sub
cmp
jg
pop
inc
outsb
in
mov
test
jge
and
repz
movb
adc
jge
jecxz
aad
out
mov
cld
jae
xchg
mov
xchg
aas
leave
out
cmp
movsb
cmp
or
jne
add
xchg
icebp
dec
ja
shrb
out
mov
adc
out
xchg
pop
cltd
adc
push
jge
test
xor
rorl
imul
or
stos
bound
mov
outsl
xor
mov
jnp
adc
sbb
inc
stos
ss
int3
andb
lods
shlb
push
repz
stc
or
jno
fidivs
sub
lret
xchg
or
fldl
dec
out
pop
xchg
add
arpl
stos
out
in
sahf
xchg
roll
jb
add
dec
cmpsl
nop
shlb
inc
mov
test
call
dec
sti
push
les
sbb
push
imul
inc
mov
mov
push
inc
push
into
sub
popf
add
fisttps
jl
outsl
or
cmp
cmp
adc
ret
js
sub
bound
mov
xchg
enter
jmp
or
lea
cli
in
sbb
ret
andb
pushf
out
ficoms
ficomps
xor
cmpsb
xor
bound
pop
lds
outsl
pop
into
loopne
inc
aad
adc
fldln2
adc
adc
ret
and
mov
daa
xchg
xchg
and
nop
jno
idiv
in
push
adc
sub
sub
push
ss
lods
pop
call
mov
enter
in
rolb
cmp
jecxz
sbb
jl
dec
adc
cmp
adc
push
push
sub
push
rolb
and
movsb
out
inc
push
enter
iret
jecxz
xchg
and
rcrl
fs
sbb
lret
shr
inc
sub
fnsave
lret
sub
jne
jge
mov
mov
or
gs
aas
adc
xchg
and
js
test
push
daa
xor
lods
mov
call
sbb
clc
mov
dec
ds
lods
bound
dec
sbb
add
xchg
sub
sub
jecxz
ds
sbb
mov
dec
sub
dec
dec
push
icebp
in
cmp
mov
test
or
inc
loop
lods
js
imul
xchg
cmp
repz
mov
or
mov
cmp
pop
aam
push
xor
jecxz
pusha
aam
enter
addr16
data16
push
mov
mov
xor
inc
movsb
aam
je
xchg
xor
sub
pusha
sbb
adc
out
dec
mov
adc
mov
push
mov
push
fnstenv
pushf
push
or
pop
repz
pop
adc
mov
and
mov
push
lahf
js
stc
lret
or
pop
push
pop
jle
cs
enter
mov
aam
add
jle
cld
jo
std
push
fldcw
ret
outsl
lea
or
leave
in
jo
imul
add
notb
jmp
fwait
cmp
lods
aam
int
hlt
in
adc
cld
cmp
lea
test
lds
lds
rcrb
divb
fsub
and
sub
xchg
leave
xchg
in
adc
adc
mov
cmp
repz
les
push
enter
mov
sbb
or
loop
jmp
jle
fcompl
jo
sub
adc
push
data16
rorl
pop
aam
mov
dec
jnp
and
sub
add
int
sub
mov
outsl
enter
shlb
cld
ljmp
or
mov
pop
jae
pop
cmpl
fldenv
push
inc
movd
mov
push
sbb
jne
imul
lahf
and
mov
scas
out
jbe
cwtl
or
sarb
mov
lods
popf
push
idivb
mov
loope
rcl
mov
shlb
cmpsl
adc
pop
bound
gs
jne
sub
xchg
sub
cmp
pop
notl
jb
movsb
mov
jmp
push
mov
jbe
pushf
jne
adc
lcall
jns
repnz
cmpl
lock
out
inc
popa
ss
imul
mov
adc
in
enter
mov
push
insb
pop
aaa
mov
sbb
push
mov
push
pop
mov
xor
xchg
mul
sbb
imul
call
fwait
push
xchg
mov
pop
xor
es
and
xchg
and
xor
sub
cmpsb
add
insb
sti
inc
mov
fildl
js
jae
xchg
mov
jg
addb
mov
xchg
and
dec
jmp
imul
cmp
inc
outsb
jp
add
test
xchg
mov
mov
clc
push
mov
mov
pop
push
test
sbb
popl
pop
test
xchg
ret
aaa
out
stos
mov
mov
sub
and
addr16
dec
xchg
jecxz
inc
shlb
dec
imul
aaa
and
fwait
pop
sbbl
or
clc
addr16
es
mov
xorl
insl
popa
or
jecxz
cwtl
fstps
pop
xor
ret
add
cmpsl
xlat
cmpsb
addr16
add
fdivrs
add
lock
scas
sti
xchg
stos
push
je
mov
lds
cmp
loopne
mov
mov
dec
sbb
gs
cs
into
inc
out
push
lods
sbb
pop
int
xchg
mov
popa
mov
mov
add
cmpl
inc
and
sub
lret
lock
and
and
jne
fs
xchg
subb
mov
or
stc
pop
push
jl
push
movsb
mov
in
es
icebp
jmp
jmp
inc
lcall
mov
jl
rcll
or
xchg
mov
sub
ret
push
mov
push
push
jno
and
jno
jl
cmpsb
mov
sbb
dec
mov
in
aam
pop
mov
lret
push
rolb
cmp
cmp
and
inc
sub
inc
outsl
adc
fwait
test
mov
jae
idiv
int3
or
mov
mov
inc
and
xchg
push
cmp
test
int3
mov
add
cmpsb
mov
jecxz
nop
add
push
cmc
cmpsl
sti
insb
jbe
cmp
das
in
mov
fs
out
test
enter
or
popf
call
jmp
mov
movl
mov
movsl
dec
xchg
in
pop
sbb
fisubs
sub
inc
cs
mov
add
jl
lret
std
adc
pusha
xor
jg
fcompl
sbb
fnstcw
xchg
sbb
pop
mov
test
cmpsl
imul
js
cmpsb
xchg
fimull
adc
pusha
dec
leave
cwtl
incl
mov
xchg
pop
xor
pop
xchg
push
in
jns
js
pop
push
pop
lret
xchg
xchg
inc
insl
fistl
scas
das
mov
fbld
and
subb
jb
mov
mov
subb
fisubs
push
leave
sbb
mov
jl
jno
xchg
push
jmp
sbb
inc
dec
lock
subl
xchg
hlt
mov
push
or
imul
mov
cmp
mov
movsl
push
and
or
into
mov
std
push
arpl
pop
lds
mov
sahf
mov
ret
mov
sbb
in
push
dec
xchg
push
push
nop
inc
xchg
or
stos
cmove
scas
or
cmp
bound
sub
mov
push
addr16
arpl
lods
xchg
into
xorb
jle
test
cmpsb
imul
push
daa
mov
adc
hlt
pop
rcll
ja
dec
push
aaa
imul
push
out
imul
jno
mov
loopne
mov
mov
scas
int3
xor
inc
xor
cld
jnp
jp
mov
inc
inc
jg
jbe
push
mov
in
push
push
ret
popf
les
cvttps2dq
jecxz
xlat
push
out
lods
inc
imul
add
xor
jle
mov
andb
push
test
cmp
mov
int3
pop
call
test
pop
xlat
mov
call
jecxz
xchg
lea
and
ret
leave
pop
add
sub
in
shrb
cmp
inc
je
push
fstpt
xlat
sahf
xchg
loop
into
xchg
leave
adc
pop
insl
jp
jo
cmp
push
test
loope
adc
addr16
push
xchg
xor
push
or
out
sahf
bound
add
jo
cmp
lds
mov
xorb
and
jle
pusha
inc
sbb
into
jno
aam
xor
sahf
jmp
push
adc
cmp
aas
cmp
sbb
shrl
int
cmp
call
incl
add
rclb
jmp
cwtl
mov
push
push
or
lret
imul
adc
mov
lahf
mov
cmp
test
fisubrl
cltd
xorb
mov
pop
sub
or
pusha
xorb
movsl
scas
ds
loope
add
cmp
mov
cmpsb
fcomi
sbb
xor
aas
mov
aam
pop
je
pushf
pop
adc
xor
xlat
jecxz
jecxz
add
jnp
xchg
addr16
jg
jg
adc
dec
add
and
lahf
loope
into
mov
test
or
pop
mov
add
addb
fbstp
aad
or
outsb
add
and
xchg
shlb
test
mov
pop
scas
mov
int3
mov
scas
xchg
adc
jne
inc
rclb
push
js
jb
jo
fwait
cmp
pusha
jl
cltd
stc
adc
push
imul
stc
sti
daa
or
jns
jmp
bnd
mov
mov
push
insb
adc
ljmp
jle
push
inc
sahf
je
or
xchg
in
and
xor
movsl
out
adc
jne
inc
pop
jle
push
int3
fcomi
pushf
sub
push
jp
fldt
lods
sbb
or
pop
mov
mov
into
or
enter
xor
into
add
test
xorb
loopne
mov
pop
pop
mov
ds
sub
fimuls
jecxz
aad
out
or
add
and
movb
test
les
cmp
add
xor
hlt
jo
cmc
dec
cwtl
push
sub
movsb
mov
lcall
inc
sbb
ja
jle
aam
lods
movsb
push
mov
das
mov
xor
incb
fs
inc
sbb
loop
stos
nop
aaa
imul
fsubs
mov
xorl
mov
sahf
fwait
push
xor
mov
mov
inc
and
mov
js
repnz
in
pop
and
stos
inc
icebp
bound
je
sub
mov
and
je
cmp
sbbb
inc
shlb
add
cmp
cs
icebp
jmp
mov
cli
stc
cmp
add
push
mov
mov
add
out
adc
cmp
in
stos
add
dec
adc
inc
xor
pop
jo
cmp
and
push
jge
push
in
and
in
out
test
and
mov
lea
sbb
out
sub
test
xchg
fdivl
mov
mov
jae
push
add
cli
mov
push
iret
or
call
lret
out
call
arpl
int3
mov
sub
dec
mov
movsb
xchg
mov
into
jecxz
loope
jmp
push
pop
xorl
aas
sub
pop
xor
es
mov
inc
je,pt
and
stos
adc
mov
jecxz
inc
ss
and
loope
jb
or
in
mov
leave
dec
mov
pop
bndldx
sub
test
lahf
sahf
lods
dec
and
add
cmp
das
jp
jge
and
loop
cli
imul
js
and
push
mov
loope
xor
sbb
clc
lret
push
add
outsl
inc
adc
scas
lret
push
cwtl
inc
les
outsl
adc
xor
ficomps
lret
loopne
repz
inc
fs
pop
or
push
jg
mov
nop
lea
cmpsl
fadd
mov
jne
cmc
outsl
jno
and
cmpsb
xor
inc
data16
scas
lock
xchg
mov
jnp
jmp
xchg
jmp
or
jnp
cmp
inc
mov
fildll
or
push
jg
mov
lds
fsubl
stos
add
fwait
dec
push
outsl
addl
jae
fstpl
imul
jnp
fs
scas
adc
xchg
dec
dec
cmp
scas
adc
leave
dec
jge
sub
cli
clc
dec
inc
jp
test
dec
dec
flds
mov
xor
es
outsl
outsl
push
jp
test
mov
xor
jge
xor
jl
aad
jae
ret
aas
jae
sahf
inc
xchg
loope
push
xor
add
adc
in
test
and
movsb
jae
push
cmp
fwait
inc
scas
dec
jecxz
scas
xchg
xchg
call
jns
divl
inc
inc
pop
loop
push
adc
sub
mov
cmpsb
jbe
jns
and
fwait
mov
push
stc
ljmp
test
mov
repnz
cmpsb
jmp
rcr
dec
inc
imul
xor
dec
xchg
inc
or
sarb
dec
stc
pop
mov
jbe,pn
les
sbb
xchg
inc
add
sbb
push
sub
inc
ret
std
and
mov
or
jne
mov
xorb
mov
cmpsb
js
enter
cmpl
adc
pop
push
cld
pop
cmc
popa
jge
and
mov
enter
out
fwait
ja
mov
jge
ss
ja
xchg
adc
out
adc
jle
add
mov
push
shll
cmp
in
pop
cmpsl
push
out
sbb
or
les
nopl
insb
add
cltd
loopne
adc
ljmp
xchg
adc
jl
std
jecxz
imul
cli
xor
xchg
enter
leave
push
std
mov
pop
int3
inc
push
adc
in
jno
ret
xchg
xor
dec
in
or
rcll
and
cmpsl
mov
add
adc
xor
sub
movhps
or
push
les
jp
xor
inc
aam
sub
lock
sub
mov
pop
fcmovnb
cltd
cwtl
adc
lea
fs
cmp
xchg
fcom
push
pop
nop
xor
call
jno
or
add
mov
test
mov
jnp
ljmp
test
pop
jbe
pop
xchg
cs
cmp
gs
and
insl
push
sub
fcompl
xchg
and
push
inc
das
or
and
sub
in
fldl
mov
mov
daa
sbb
daa
pop
fwait
mov
lock
mov
ret
idivl
fwait
rcrb
in
mov
push
out
dec
loope
jno
movsb
in
adc
mov
ret
adcl
push
and
xor
xor
mov
mov
push
decl
pop
sbb
fnsave
notb
push
cwtl
dec
jmp
xor
cwtl
fcomps
rol
cltd
fdivl
push
lret
test
xchg
add
outsb
testb
mov
sbb
jmp
dec
pop
fldcw
lods
nop
loopne
mov
out
jno
add
dec
sbb
push
push
cmp
mov
mov
mov
adc
shl
int
scas
inc
sub
mov
shlb
sub
dec
cmpsl
xchg
or
add
dec
scas
adc
and
repz
frstor
add
adc
mov
mov
push
sbb
sbb
mov
push
out
out
mov
cli
push
leave
aad
sub
mov
test
sbb
xchg
pop
or
js
stos
jmp
aam
or
pop
sbb
mov
xor
and
outsl
addr16
pop
jae
dec
cmpsb
adc
adc
pop
mov
xor
call
push
mov
movsb
leave
nop
lods
pop
loopne
loope
jmp
inc
add
sahf
loope
or
das
testl
or
mov
xorl
sbb
fsubs
cltd
and
pop
and
push
cmp
xor
sbb
mov
pop
mov
and
sub
push
pop
adc
mov
cmpsl
mov
xchg
movsb
and
in
aad
push
dec
lcall
mov
pop
iret
stos
daa
inc
or
mov
mov
mov
cmp
add
cmp
push
and
mov
mov
sub
pop
push
and
sub
push
ss
aaa
cmp
mov
mov
repz
loopw
inc
icebp
push
std
jnp
push
ds
or
mov
sbb
cmc
aas
cmp
inc
aaa
sbb
fiadds
pop
or
mov
adc
jl
sarb
jnp
mov
ss
test
arpl
in
je
sub
push
jl
inc
cltd
lock
scas
jmp
xor
mov
clc
pop
in
and
xchg
push
es
scas
mov
add
int3
lcall
and
push
out
fbld
jns
enter
xchg
cmp
in
stos
jmp
push
xchg
mov
bound
mov
loope
sti
ret
xor
idiv
inc
xlat
pop
jle
jns
mov
inc
dec
xor
ret
inc
cwtl
and
enter
or
arpl
dec
popf
adc
pop
int
movsl
fnstcw
xlat
popa
scas
lods
nop
mov
leave
iret
mov
int
cltd
rolb
mov
cs
xlat
out
xchg
jmp
test
mov
jle
xchg
imul
push
xor
sub
shl
icebp
cmp
je
cmpsb
test
repz
mov
pop
inc
aaa
jne
inc
repnz
dec
push
cmc
outsb
popf
insb
adc
xchg
add
lret
push
ljmp
fcmove
jge
ret
sub
popa
cli
pop
mov
rol
sbb
lcall
xor
push
lods
adc
push
and
xchg
mov
lret
out
orb
ret
aad
test
insb
inc
add
ds
add
push
mov
inc
xchg
or
pushf
icebp
cmp
mov
cmp
fs
xor
cs
insl
dec
mov
and
add
ja
arpl
push
lret
dec
popf
push
or
enter
adc
cmp
mov
jl
lea
adc
rcl
sbb
push
cmc
dec
jo
dec
xorl
addr16
adc
jae
jmp
adc
js
adc
sbb
fdiv
imul
jl
cltd
jae
add
adc
lret
fdivrs
push
daa
mov
push
jge
add
mov
js
fwait
ret
shlb
mov
push
out
out
cmpsb
sbb
inc
loopne
inc
push
xor
add
push
dec
xor
sub
fstps
sbb
divb
sub
dec
rcrb
pop
das
jne
movsb
lret
push
std
movsl
cmp
test
mov
push
cmp
inc
fldlg2
sbb
std
cmp
lret
aaa
push
insl
jns
out
into
xor
cmp
fbstp
jge
adc
cs
in
insb
js
dec
xchg
pop
push
mov
cmpsl
std
jg
lcall
and
popf
aas
jb
pop
push
repnz
lods
stos
rolb
cwtl
sbb
mov
dec
out
rcl
dec
fnstcw
xor
call
int3
cltd
inc
jl
insb
add
mov
mov
cmpsb
pop
js
jl
mov
cmp
adc
inc
inc
lds
rol
out
mov
js
pop
mov
fs
lahf
jo
outsb
pop
cmp
dec
ret
cmp
mov
sub
pop
fmul
sbb
or
test
jns
data16
and
lcall
and
cltd
pop
xor
lcall
es
cld
fdivr
mov
cmp
dec
int
jno
pop
out
movsb
insb
out
or
cmp
mov
popa
fildl
pop
arpl
jmp
enter
xchg
xchg
dec
clc
jp
lds
mov
xchg
stc
sti
xor
push
adc
ljmp
inc
pop
mov
mov
cmc
cs
inc
mov
cs
negl
and
jns
xor
sbb
sub
adc
dec
add
add
xchg
sahf
popa
pop
jge
pop
dec
inc
sbb
xor
mov
xchg
sbbb
jae
mov
and
insb
jmp
jecxz
int
pop
jnp
lcall
loope
sbb
xor
bound
int
adc
mov
in
inc
loopne
loop
jecxz
pusha
aas
sub
or
add
adc
movsb
fiadds
stos
jbe
not
sub
jmp
jb
sahf
lahf
push
leave
sub
mov
xor
dec
out
lcall
and
pop
notl
mov
ss
sbb
aad
aaa
or
xor
and
pop
push
aaa
push
mov
inc
jmp
stc
imul
stos
inc
push
or
xchg
outsl
xchg
pusha
jmp
dec
loopne
xor
dec
cmp
sarb
xchg
mov
arpl
add
ss
sub
outsb
jge
xor
fidivl
push
xchg
lcall
pop
fcoml
jmp
sub
negl
js
push
inc
popa
imul
jnp
mov
outsb
repz
nop
ret
pop
pop
test
mov
pop
push
test
jo
jns
cmpsb
pusha
mov
out
sbb
inc
int
or
in
shl
sbb
pop
sbb
lods
mov
sarb
into
xchg
sarb
cmp
pop
lds
and
mov
std
inc
cmp
xlat
arpl
dec
dec
clc
pushf
lcall
leave
mov
or
mov
xorps
int3
and
mov
cmp
hlt
cmp
push
popa
pusha
cmp
out
mov
mov
cmp
lea
mov
pop
repnz
sbb
test
xor
ds
das
hlt
jmp
addr16
aas
inc
ljmp
push
out
add
pop
or
cmpsb
adc
or
adc
mov
movsl
jne
add
lea
cmp
sbb
fwait
test
pop
iret
test
and
cmpsl
add
mov
sbb
sbb
mov
sub
mov
add
cs
andb
icebp
fisttpl
outsb
cmpsl
out
call
or
cwtl
subb
loope
insb
pop
aam
out
fmul
shl
xchg
mov
nop
push
push
push
dec
pop
jne
sbb
outsl
sbb
into
push
lea
jp
xlat
repz
or
push
push
push
mov
or
mov
xchg
addr16
mov
fmull
inc
rclb
cltd
and
pop
sbb
sbb
push
daa
xchg
cmpl
cmp
xor
in
int3
sbb
int
pop
clc
flds
lods
pop
icebp
fildll
or
dec
mov
data16
sbb
jb
icebp
push
pop
sti
xor
push
data16
push
shll
rclb
cwtl
xchg
movsl
cmpsl
xor
data16
jg
out
jg
ret
push
icebp
add
fstps
loop
sbb
jp
aaa
out
inc
les
or
push
inc
outsb
cltd
jecxz
sub
pop
sti
data16
mov
pop
lcall
adc
dec
adcl
subl
xor
into
xor
mov
or
call
loop
pop
in
inc
aad
imul
test
stc
scas
fnsave
jp
icebp
sbb
jl
sahf
mov
cld
lret
aas
mov
mov
call
fistl
shlb
enter
jmp
push
cwtl
into
and
add
cwtl
xchg
sub
inc
mov
inc
pop
lea
aaa
test
mov
notb
into
add
sti
mov
gs
sbb
aam
and
and
jge
and
inc
push
push
out
ds
gs
jl
push
lds
jl
dec
xor
aam
xor
xor
sar
test
aas
add
mov
inc
sti
pop
pusha
in
xchg
mov
ja
sub
stos
fisubrs
repnz
mov
sub
je
rcrb
daa
inc
out
je
jg
imul
stos
mov
xor
mov
fldt
push
adc
xor
pusha
pop
sub
xlat
imul
pop
loopne
addb
sbb
std
jne
rorl
push
out
jnp
and
or
fcoml
push
mov
sub
and
xor
sti
sbb
pop
jg
sbb
and
xor
lret
inc
add
sub
lret
mov
inc
mov
push
cmc
adc
sub
loop
out
ret
add
mov
fmull
loop
lea
xchg
and
shrl
aas
mov
int3
mov
sahf
and
mov
jle
mov
pinsrw
fstpt
xor
mov
fwait
or
mov
out
sub
pop
or
add
pop
pop
and
dec
add
push
lahf
pop
sub
das
pop
mul
or
jbe
repnz
out
and
mov
js
cmp
aaa
or
imul
les
xlat
cmp
mov
stos
or
lret
outsl
mov
fdivp
imul
leave
push
mov
je
or
adcb
int
mov
inc
movsb
lcall
out
fs
xor
fdivl
lods
je
arpl
aaa
ljmp
out
dec
lock
cmpl
rcll
mov
outsl
lret
stos
jae
jg
loope
inc
cmp
ds
leave
xchg
aad
add
insl
fistl
pop
add
xchg
cmp
mov
inc
aam
push
loopne
cmp
push
or
sub
imul
ss
test
pop
mov
push
pop
sub
and
and
jb
cmp
cltd
push
push
and
loopne
xlat
mov
scas
and
adc
pop
inc
jmp
jmp
mov
push
dec
push
xchg
inc
ret
loopne
sbb
or
inc
sahf
inc
jle
pop
jne
sub
jns
inc
mov
clc
or
mov
movsbl
cmp
xor
ret
sub
jge
push
das
sbb
stos
dec
inc
sub
adc
out
sub
fsubrl
pop
cmp
xchg
in
roll
ss
mov
adc
test
cmp
mov
out
and
sahf
lods
mov
divl
hlt
mov
fisttps
dec
mov
movsb
mov
fcoml
cmp
lds
decl
shrb
push
shrl
int
xor
jns
test
pop
pusha
push
cli
push
inc
mov
dec
cmp
imul
int
or
xchg
push
call
mov
sub
push
inc
scas
jmp
mov
lret
mov
push
nop
mov
sahf
jg
and
decb
cs
gs
xchg
scas
int
mov
adcb
mov
mov
jns
adc
sti
fdivrl
mov
leave
sub
xchg
mov
test
out
shrl
inc
shl
and
jl
add
je
xor
arpl
cmpsb
mov
hlt
dec
popf
cmpsb
fisubrl
pop
sbb
adc
loope
inc
push
scas
fsubrl
xlat
out
and
rcl
jmp
jecxz
test
mov
lret
jnp
je
out
or
negb
popa
out
adc
xchg
idivl
mov
xchg
call
jecxz
or
xchg
and
inc
push
inc
insl
xchg
sbb
dec
cs
into
inc
mov
sub
mov
xchg
push
dec
push
mov
jp
pusha
cmp
xor
cmpsb
test
mov
movsl
loop
mov
loop
xchg
xchg
out
cmp
cmc
cwtl
addr16
mov
leave
rcll
cmp
shll
loop
imul
pop
leave
adcb
das
in
aam
mov
into
pop
lock
sbb
add
icebp
lahf
push
mov
push
lahf
rclb
out
dec
pop
shl
xchg
sub
sbb
rolb
dec
mov
push
in
fildl
lock
cmp
stc
sub
jmp
jmp
jle
notl
and
or
loope
dec
cmp
cli
arpl
add
and
mov
push
stc
push
hlt
jg
push
xor
ror
ljmp
mov
cmp
jnp
stos
xchg
xor
push
and
pop
or
push
inc
xchg
cmp
jp
int
imul
xchg
inc
fists
mov
pushl
icebp
insl
mov
mov
fistpll
ss
int3
mov
iret
push
xlat
sbbb
popf
subl
sahf
add
sub
gs
imul
mov
and
pop
xor
push
mov
movl
subl
adc
cmp
movntq
out
loop
cld
dec
fisttpl
push
push
push
mov
xchg
push
mov
insl
or
cmp
out
xchg
mov
push
sbb
cli
sar
cmp
sub
sub
sub
or
jbe
xchg
push
or
insb
fidivrl
fcomps
push
xor
adc
test
adc
stc
jns,pn
in
mov
shlb
xchg
push
or
dec
aaa
add
adc
xchg
or
fistl
scas
js
stos
ja
adc
adc
fstl
fldl
push
xchg
test
cmp
les
mov
adc
std
std
repz
xor
lret
fisubrs
or
scas
call
loopne
mov
inc
mov
inc
dec
xorl
add
out
push
out
xchg
mov
dec
push
dec
fnstcw
dec
mov
and
scas
xchg
add
dec
push
ja
push
stos
sub
or
dec
jmp
mov
mov
push
pop
xor
cli
sub
pop
push
bnd
cmp
mov
dec
out
lret
incb
mov
loopne
repnz
xchg
pop
adc
dec
scas
bound
jl
cmp
sub
pop
jmp
mov
jp
fistps
movsb
call
lahf
in
sub
loopne
and
dec
sub
sbb
xchg
in
jle
cmp
fimuls
jnp
sbb
movl
push
outsb
cwtl
sbb
fistpll
repz
cmpsb
sub
jb
daa
in
cmc
test
inc
pop
lcall
sub
insl
mov
int
jnp
jmp
mov
mov
push
inc
jns
testl
cltd
rol
je
mov
pop
arpl
add
lds
push
push
jno
pushf
cli
lods
popa
pop
or
sysret
gs
xor
pushf
cmp
adc
sub
add
add
cmp
insb
js
sub
mov
jns
pushf
rclb
scas
inc
les
xchg
out
insl
clc
inc
int3
mov
xchg
out
pop
mov
pop
jo
dec
sbb
sub
pusha
cmp
in
xorl
lret
mov
xchg
sbb
mov
clc
loopne
jmp
scas
pop
cmc
lds
scas
cmp
mov
pop
adc
adc
inc
std
push
cvtpi2ps
into
icebp
pushf
lods
cmc
aam
mov
cli
lods
mov
fidivrl
cli
mov
pop
cmp
and
pop
ret
cwtl
xor
rorb
or
pusha
and
mov
cmp
bound
mov
mov
int
pop
in
and
mov
push
inc
out
or
les
pop
pop
cltd
sbb
dec
out
xor
jb
and
xor
sub
jl
test
mov
in
lods
mov
push
inc
mov
movsl
call
mov
arpl
inc
in
add
mov
inc
sbb
rclb
aaa
dec
cmp
pusha
ret
push
leave
jnp
lods
mov
jmp
jge
jae
mov
fs
ds
scas
mov
xchg
mov
mov
gs
int
fcoml
popa
in
pop
sub
jmp
adc
clc
inc
sbb
cmc
jae
in
sub
sarb
add
jge
loop
push
data16
lcall
ret
cmp
clc
xchg
ss
stos
shll
popf
add
sarb
fsts
mov
stos
push
subl
inc
test
sub
aas
jo
adc
popf
and
and
push
pop
imul
mov
rcrb
xor
adc
xchg
loop
sbb
mov
stos
xor
mov
dec
xor
sbb
js
jp
pop
test
push
adc
dec
inc
sbb
dec
cmp
iret
nop
push
add
nop
mov
lea
xor
gs
mov
inc
add
movsb
mov
repnz
jl
pop
lret
fistpl
lret
adc
movsl
mov
popf
pusha
push
xor
mov
xchg
pop
mov
mov
jecxz
inc
int
fistl
xor
into
sbb
or
pop
and
sub
repnz
ret
mov
pop
pop
dec
test
xor
mov
mov
pop
loop
xchg
std
fs
add
lods
pop
and
mov
jae
mov
test
lret
jg
jl
or
nop
sbb
inc
ss
adc
xor
cmp
mov
mov
inc
aam
std
mov
cmp
int3
cmp
and
cmc
lock
nop
or
test
jl
add
cmp
or
insb
cmp
and
in
sti
jnp
std
and
aaa
fimuls
adc
daa
outsb
dec
cmpsb
lea
test
push
lret
sahf
adcb
inc
lcall
cmpsb
mov
mov
scas
push
inc
jmp
fisubs
sti
jle
push
jbe
rol
orl
mov
dec
cmpsl
mov
das
jle
fstl
fwait
addr16
jns
arpl
arpl
out
pop
cmp
xor
inc
xchg
out
and
or
aad
shll
or
jno
sbb
dec
rorl
push
push
std
addb
cmp
outsb
out
push
ja
sti
mov
cld
or
sar
xlat
lret
push
push
xchg
dec
scas
insb
jle
jl
jae
xor
xchg
mov
push
popa
inc
adc
inc
outsb
mov
pop
inc
pop
rclb
lret
and
jle
popa
push
xor
xchg
insb
pushf
clc
and
mov
nop
sub
les
cmc
mov
andb
pop
lcall
pushf
sti
xchg
iret
jg
jmp
iret
das
sub
cmc
pushf
test
dec
loopne
push
or
mov
sbb
insl
xor
mov
mov
fstpl
or
add
mov
cwtl
pop
test
and
lahf
rcrb
fnstcw
inc
adc
mov
das
add
shrl
pushf
scas
mov
jae
push
push
pop
adc
cld
lods
jg
xor
push
xchg
add
aas
mov
mov
push
fnstenv
and
jb
xchg
loope
fsubrl
xchg
subb
mov
or
test
fs
adc
adc
xchg
dec
inc
lock
lds
pop
in
mov
sub
push
xor
inc
pop
pop
les
pushf
ret
ja
pop
in
inc
or
fcmovnb
roll
sub
sub
outsl
mov
in
inc
xor
shl
imul
std
sbb
and
push
jg
rcr
mov
inc
adc
push
pop
add
mov
push
pop
and
lahf
mov
pop
and
pop
cmp
cmp
movsl
xor
stos
push
mov
mov
mov
and
sbb
mov
into
lret
gs
bound
xor
inc
out
out
jmp
cmpsl
xor
icebp
xchg
xor
mov
cwtl
add
decl
fmull
add
adc
test
daa
hlt
xor
push
bound
xchg
add
inc
fucomi
and
sbb
lds
mov
rcrl
fisubl
fst
push
loope
mov
add
pop
xchg
lods
testl
pop
clc
popa
orb
inc
inc
repz
inc
cmp
or
mov
lcall
pop
push
stos
sub
dec
stc
dec
aad
inc
bswap
repnz
dec
pop
jmp
add
mov
sbb
ljmp
daa
mov
ljmp
add
lods
jle
icebp
mov
hlt
pop
cmpsb
ja
inc
lret
inc
inc
stos
mov
movsl
xor
inc
adc
paddd
mov
mov
rclb
testb
and
dec
sub
in
subl
movsl
dec
pop
add
xchg
and
stc
pop
cmp
mov
imul
test
ret
ja
and
ja
adc
ss
push
std
leave
pop
jle
pop
add
lret
jne
cmp
cli
cld
insb
mov
push
add
adc
outsl
inc
jle
shlb
icebp
push
aam
xchg
cli
lods
inc
add
adc
ret
pusha
xor
xchg
andb
xor
xchg
jo
jmp
pop
push
push
dec
sbb
lods
out
inc
imul
loop
jbe
pop
lods
in
aad
sarb
mov
aas
adc
mov
aaa
dec
xor
shrb
mov
pop
arpl
mov
dec
and
push
sbb
or
out
adc
xchg
pusha
rorl
je
push
rcr
cmpsb
gs
stc
fcoms
int
push
adc
andl
dec
movsb
aad
aad
fsubl
xchg
xor
into
cmp
stos
inc
xor
sbb
mov
ret
cmp
mov
jle
stos
sti
leave
movsl
and
xchg
das
mov
dec
adc
shl
cmp
xchg
adcl
sub
and
jno
mov
imul
enter
sub
daa
lea
jae
pop
mov
adcl
mov
imul
out
loopne
xchg
dec
lea
in
lahf
sbb
xlat
sbb
jae
lea
mov
push
imul
xor
xlat
loopne
mov
je
cld
mov
push
in
std
rcr
pushl
das
loope
je
inc
dec
cmpsw
sbb
xor
mov
adc
jl
lret
sbb
outsl
add
fildll
mov
std
push
arpl
dec
divb
jae
hlt
in
sub
mov
out
jg
pop
cltd
in
test
loop
xor
inc
pushf
insb
add
icebp
pop
dec
insl
aaa
sahf
icebp
imul
adc
cmc
push
int
push
sub
push
insl
leave
cmp
cld
imul
add
insb
mov
cmp
scas
jp
jb
mov
sub
dec
and
aas
nop
fwait
js
jae
bound
sub
fnstenv
xchg
test
outsb
cmp
std
lcall
jo
xchg
shll
push
cmc
mov
pop
std
testl
cmp
ret
mov
add
push
daa
cwtl
popa
adc
jle
or
pop
sarb
mov
inc
add
mov
dec
int3
enter
jl
fldl
and
inc
outsb
inc
mov
mov
out
push
stc
neg
xor
cwtl
into
dec
fdivr
xchg
adc
sub
adc
insl
mov
inc
stc
push
xchg
icebp
mov
sti
loop
movsb
clc
xor
pop
loopne
cmp
popa
scas
call
mov
adc
lcall
jl
andb
dec
mov
nop
rol
sub
addl
outsl
mov
fs
cltd
sbb
int3
idiv
fistps
and
pop
ja
out
dec
push
push
push
lea
or
or
mov
pmaxub
shrb
jle
scas
stos
mov
test
je
jl
jmp
push
sub
aam
cmpsl
or
les
xchg
mov
push
leave
mov
mov
cli
loopne
outsl
call
pop
cmpsb
pusha
mov
and
xor
add
dec
and
outsb
mov
push
pop
add
fs
shrb
or
aam
push
hlt
shrl
xor
mov
pushf
test
cli
sahf
imul
pop
push
shlb
push
repz
cltd
xchg
jo
mov
jp
sub
cmovo
mov
jbe
lcall
sbb
cmc
inc
mov
mov
mov
cmpsb
lahf
pop
jg
or
cmc
sbb
pop
dec
gs
fwait
sub
es
jnp
pushf
sub
lock
daa
out
into
sub
mov
push
pop
sti
jnp
mov
dec
pop
jnp
and
push
or
imul
add
cmp
inc
mov
daa
lock
ficoml
cmp
shr
adc
pop
clc
cmp
push
mov
clts
inc
lods
js
movsb
pop
xchg
pop
xchg
jnp
divl
aam
mov
test
xchg
sbb
insl
ds
int
fs
das
inc
aam
pop
imul
lods
push
data16
sbb
sti
adc
fs
jmp
and
and
fnsave
gs
div
loope
xchg
xchg
sub
std
fsubrl
pop
or
push
scas
mov
inc
lcall
fs
or
and
xor
mov
or
xchg
test
in
xor
add
xor
mov
xchg
pushf
or
lods
xchg
and
add
fs
dec
xchg
pop
xor
ss
insb
jp
jle
mov
out
dec
adc
mov
test
xchg
ljmp
fildl
fcomip
cli
je,pt
push
add
mov
inc
mov
push
jbe
jne
ret
je
fwait
in
scas
fwait
scas
cwtl
lock
lods
cli
ds
or
test
or
into
sub
inc
add
lfs
add
subl
xchg
mul
mov
arpl
negl
in
andl
popl
inc
aas
add
inc
push
sahf
adc
stos
lret
jns
mov
hlt
imul
cmp
dec
and
dec
fstps
jg
jmp
dec
jp
enter
arpl
add
and
xchg
addr16
outsl
push
sub
sti
ret
sbb
loope
cli
sbb
xchg
jmp
setno
icebp
int3
dec
aam
ret
fstpl
jbe
jb
lods
bswap
xor
int3
scas
cmp
xchg
ror
scas
inc
stos
int3
hlt
bound
fdivrs
pop
dec
adc
das
mov
cmc
or
pop
nop
pop
or
iret
inc
add
pusha
push
sub
add
pop
mov
inc
inc
imul
int3
inc
aam
add
fsubr
scas
repz
dec
loopne
xor
xchg
inc
lcall
cli
test
add
imul
inc
adc
mov
int3
sub
ret
orb
sahf
imul
mov
aad
mov
jnp
jmp
dec
sub
push
mov
je
sbb
pop
or
pusha
stos
mov
push
jns
lds
sub
cmp
stos
decb
mov
push
jbe
pop
fbstp
xchg
cmpsl
cmp
mov
jne
fwait
test
jno
mov
adc
stc
mov
push
cli
sub
imul
add
sti
pusha
test
push
mov
mov
pop
pushaw
mov
xchg
sub
cmp
sbb
or
add
cwtl
jnp
mov
pop
cmp
hlt
arpl
or
loop
popa
sub
out
inc
insl
mov
stos
jle,pn
cmp
mov
or
mov
jge
leave
push
xor
push
mov
das
and
pop
popa
push
mov
push
adc
push
fdivrp
adc
inc
inc
ja
shll
push
xchg
xchg
out
loope
mov
sbb
xlat
xchg
lret
sub
add
sub
imul
sub
cmp
mov
and
sub
inc
adc
mov
call
les
sub
dec
sub
adc
and
stos
cmp
mov
sbb
or
xchg
jl
cmc
mov
mov
mov
out
lock
seta
lods
push
pop
ds
push
sarl
push
or
sub
adc
and
sub
sarl
orb
mov
jmp
shll
nop
aaa
cwtl
xlat
mov
jno
or
incb
into
pop
arpl
testb
sbb
xchg
sub
xchg
inc
outsb
push
mov
insb
pusha
jb
mov
xchg
inc
int
fisubl
adc
mov
dec
in
cld
sahf
insl
mov
sub
loopne
dec
cmpsb
into
xor
push
pop
les
jne
push
out
sbb
add
push
push
inc
push
xor
jle
pop
cltd
ljmp
xor
insb
sub
enter
int
jmp
leave
sub
dec
mov
pop
out
lahf
adc
test
jg
jmp
jb
fbstp
xchg
sbb
imul
stc
push
lds
rcrb
pop
arpl
jo
jg
mov
sbb
roll
or
ja
xchg
rolb
loope
mov
push
or
push
sbb
out
inc
sti
xchg
xor
mov
cmc
inc
aaa
lock
addr16
sbb
rcrb
mov
cmp
xor
ficompl
inc
mov
pusha
sbb
inc
stos
or
int3
cmp
jbe
clc
mov
jb
xor
outsb
dec
sub
and
cmp
outsl
sbb
cmp
push
mov
mulb
cmpsl
sub
es
and
adc
pop
xchg
movsb
je
mov
inc
rcrb
inc
cmp
outsb
movsl
rcll
lcall
push
fistpl
mov
fs
dec
mov
push
inc
fisubl
cmp
repnz
and
sti
rolb
lock
stc
movsb
lea
repnz
pop
test
xchg
movsb
mov
lahf
xchg
add
dec
add
jmp
mov
cmp
loopne
shll
push
cltd
or
xor
add
push
mov
in
sbb
test
repnz
stos
mov
xlat
xchg
sub
add
pop
pop
xchg
push
cltd
mov
add
fistps
cltd
mov
sbbb
and
ficoms
in
inc
enter
mov
mov
pushf
xor
or
adc
mulb
icebp
inc
push
in
jmp
xor
loope
pop
jmp
mov
pusha
icebp
dec
pop
dec
rcll
out
dec
jle
and
fmull
dec
test
and
stos
lock
andb
mov
add
movl
loop
outsb
retw
pop
fisubl
xor
aam
or
mov
inc
jnp
sub
push
jle
les
mov
rol
in
push
scas
stos
mov
xchg
ja
enter
or
jmp
dec
push
jle
pop
lods
lods
cltd
lock
fcmovnu
push
jae
fmull
mov
faddp
ss
pop
adc
arpl
adcl
pop
inc
mov
push
movsl
mov
push
inc
dec
xchg
sarb
ljmp
imul
dec
pop
fistpl
jp
iret
subl
sbb
fistpl
imul
push
lods
call
push
test
aad
jnp
add
mov
enter
scas
jns
cmpsl
dec
dec
add
outsl
stos
mov
dec
push
test
nop
dec
mov
sbb
sub
add
mov
mov
sbb
out
lds
sbb
rclb
clc
push
jp
add
flds
jl
jg
cmpsb
out
xchg
aam
in
lcall
sti
das
leave
xchg
ret
push
fucomip
add
jb
jecxz
in
leave
push
icebp
daa
xchg
in
sbb
es
xor
out
pop
leave
inc
push
sbb
test
cwtl
pop
or
or
mov
lret
iret
ljmp
sbb
xchg
stc
aad
leave
xlat
clc
lods
adc
test
push
sub
test
xor
lcall
pushf
xchg
lea
mov
cmp
lret
movsl
aaa
out
jg
xchg
pop
mov
fwait
arpl
std
cmpl
gs
pop
xchg
int
push
dec
lahf
rcll
dec
jo
jae
es
push
push
push
gs
pop
pop
idivl
jo
cld
shll
cwtl
mov
xor
cmpsl
pop
inc
mov
fiaddl
shrl
dec
push
jb
mov
movsl
stos
jo
in
adc
subl
add
or
mov
lea
push
push
add
add
pop
stos
int
mov
jo
std
jecxz
push
test
mov
cmp
mul
outsl
mov
dec
xor
xchg
aas
jo
test
sbb
mov
mov
pop
pop
out
imul
mov
jae
orb
push
push
xchg
in
cmp
sbb
pop
cld
shrl
cmp
push
out
jp
lea
imul
fwait
mov
nop
flds
inc
pop
pop
push
or
adc
dec
paddq
add
mov
leave
adc
push
xchg
outsl
cmp
add
adc
ja
dec
scas
nop
aam
mov
cmp
shll
sub
icebp
push
in
imul
gs
cmp
pusha
fstpl
pusha
jle
dec
add
sbbl
test
mov
pop
inc
mov
add
mov
push
loop
iret
mov
cltd
and
inc
stos
data16
sub
push
inc
add
sti
lret
ss
mov
xor
loop
int
xchg
lods
negb
subl
dec
and
js,pn
pop
mov
xchg
jmp
adc
jnp
mov
lds
adc
sarb
mov
push
cmp
imul
push
mov
xchg
push
mov
mov
loop
push
xor
cmp
shll
aam
xchg
pop
pop
push
fstl
fwait
popa
jo
or
fisttpl
loopne
movsl
gs
cmp
fs
pop
inc
add
sahf
orl
jo
or
xchg
jno
ud1
push
test
mov
std
icebp
mov
data16
ret
cmp
outsl
ret
mov
push
pushl
dec
sub
fisubrs
pop
arpl
lret
into
cmp
loopne
or
inc
imul
bound
mov
sbb
dec
popf
mov
adc
lods
pusha
cs
negb
es
mov
jg
orl
movsb
loope
gs
icebp
xor
sub
idiv
mov
aad
inc
add
fisubrl
pop
loop
mov
ja
lahf
add
cmp
aad
mov
jmp
or
int3
jno
inc
repz
ss
sti
pop
xchg
mov
icebp
dec
push
jmp
int
xchg
push
and
dec
jne
mov
jl
mov
lahf
ss
aad
aas
xchg
out
sub
mov
mov
adc
push
iret
ds
add
mov
arpl
sub
cmpsl
push
mov
push
sub
imul
sub
leave
pop
test
pop
filds
sbb
ja
mov
sarl
cs
mov
out
and
movb
xlat
xor
push
imul
jns
das
fstpl
out
clc
mov
push
iret
add
adc
into
cmp
or
lds
sbb
sub
fdivs
popf
pushl
mov
pop
xlat
test
stc
dec
or
stos
adc
mov
jae
dec
and
rcll
enter
movsb
pushf
lcall
mov
pop
test
and
dec
jbe
decb
mov
inc
jne
add
xlat
push
insb
and
icebp
movsl
mov
sub
dec
mov
mov
pop
jae
mov
in
add
jl
xchg
add
aaa
jo
mov
inc
cwtl
or
fcomip
and
jmp
in
sbb
decb
repz
pop
aaa
pop
adc
loopne
pop
mov
inc
iret
dec
popa
cmp
jae
je
ret
cs
jno
dec
pop
jge
cmpb
test
jp
adc
repz
cmc
dec
test
push
cwtl
push
fldl
ds
testb
icebp
xor
filds
mov
xor
pop
subl
ret
rolb
adc
and
mov
adc
jg
and
ficompl
fadd
ret
pop
add
insb
pop
sub
scas
fdivr
sub
enter
sbb
outsl
repnz
pop
or
mov
xchg
sbb
jle
aas
jo
sub
mov
in
pop
mov
xor
cmp
jg
inc
lods
jne
pop
push
xlat
mov
push
aad
cltd
xlat
add
jle
aam
sub
xor
or
outsl
icebp
cmp
pusha
imul
shl
push
repz
dec
scas
xchg
mov
fcoms
mov
std
jmp
inc
repnz
test
push
lretw
mov
aad
and
push
shr
stos
imul
pushf
in
add
iret
mov
out
mov
jns
cmp
pop
ficoml
pop
mov
loope
testb
jge
pop
js
cltd
bound
mov
xor
js
ror
sbb
adc
sbb
dec
push
xor
dec
cmp
test
mov
pop
sub
push
in
push
into
mov
std
push
inc
iret
shl
and
push
es
lcall
in
in
jnp
xchg
push
xchg
sbb
sbb
fcoms
inc
add
add
lods
dec
mov
stc
cmc
or
mov
jl
and
loope
lds
jns
ljmp
adc
stos
nop
ret
sub
add
add
or
out
inc
clc
pop
sar
inc
outsb
push
pusha
dec
loope
imul
bound
out
dec
out
les
mov
sbb
push
pop
push
in
jo
mov
pop
push
shlb
in
sub
mov
jmp
in
hlt
daa
test
and
jmp
clc
mov
imul
cld
xor
jecxz
ret
xor
jae
addr16
push
mov
xchg
test
push
lcall
movsl
sbb
dec
mov
pop
imul
pop
insl
inc
xchg
sarl
test
rcll
test
xchg
shlb
mov
mov
testb
and
pusha
insb
push
call
jp
sub
sub
push
sbb
lret
clc
pop
loop
jnp
cwtl
inc
jnp
jmp
sub
insl
lahf
mov
sbb
dec
mov
xchg
pop
push
mov
dec
ds
std
cmp
and
pusha
pop
roll
add
mov
leave
inc
call
repnz
xchg
cmp
jbe
xor
mov
sbb
sbb
je
sbb
push
mov
inc
or
ss
inc
adc
pop
sbb
lcall
int3
mov
xchg
ret
mov
and
testl
imul
out
fldcw
pop
push
sbb
add
popa
adc
sahf
rorl
mov
push
pop
cwtl
imul
mov
sub
mov
jo
adc
and
xor
mov
pop
jns
das
xchg
push
or
pop
xor
test
stos
xchg
or
js
adc
rorl
mov
pop
orl
pop
fsin
jmp
lret
xor
adc
rolb
arpl
sub
test
insb
gs
jle
daa
repnz
decl
int3
arpl
pop
sub
sahf
cmp
fimuls
sub
or
mov
jb
pop
and
fistl
adc
adc
sbb
xchg
mov
cmc
mov
xchg
stc
mov
mov
mov
data16
fs
mov
lds
stos
or
stos
out
std
add
shrl
mov
mov
pusha
jecxz
sbb
jns
jnp
mov
iret
and
aam
dec
inc
test
into
and
test
adc
loope
fadds
push
psrad
stos
xchg
and
jle
ficoms
lahf
in
mov
mov
gs
and
or
xor
push
xor
out
sbb
or
inc
outsb
cmp
in
push
add
fistps
inc
dec
pop
xlat
cmpsl
mov
outsl
js
and
mov
imul
ja
stos
test
je
fnstcw
into
pop
pop
js
cmp
aad
rolb
push
iret
orb
and
andb
jo
mov
push
shl
test
sbb
in
mov
ret
pop
cwtl
sub
xchg
cmp
mov
mov
sbb
inc
mov
arpl
xchg
aad
into
jge
dec
xlat
sub
and
mov
xor
cmp
in
shll
mov
push
orb
push
push
push
jmp
jo
jge
fs
pusha
out
jecxz
ss
cmp
data16
sbb
mov
adc
leave
mov
xchg
add
lods
hlt
jg
mov
rcll
and
mov
sub
sarb
stos
in
adc
out
mov
pusha
in
in
inc
xchg
or
inc
das
fstps
adc
and
push
dec
xor
xchg
jl
adc
jnp
or
arpl
jns
lahf
daa
adc
push
mov
dec
xchg
cmc
inc
test
movsl
ret
and
and
add
stos
nop
subb
xor
mov
dec
sarb
or
in
movsb
orl
fstpl
cmpsl
mov
mov
call
in
xlat
xchg
in
add
cmp
add
mov
xor
fwait
leave
push
cs
mov
pop
out
insl
iret
mov
mov
ror
cmc
and
faddl
movsl
jns
mov
and
enter
lahf
xchg
sbb
push
push
mov
adc
ret
mov
cmc
aaa
push
adc
sbb
dec
add
mov
jb
inc
test
xchg
sbb
sbb
jo
lods
cmp
jmp
lret
xchg
mov
inc
fdivrs
push
cmpsl
mul
jmp
or
or
sbb
jp
roll
dec
and
mov
mov
xor
dec
shrb
daa
xchg
in
push
test
popa
jns
and
xor
lea
mov
pushf
and
in
loop
loope
pushf
imul
in
cs
int
data16
out
mov
sbb
mov
pop
testb
nop
cmp
push
pop
testl
push
outsl
add
mov
mov
cmp
pop
imul
enter
and
imul
imulb
sbb
mov
sti
fcomps
sub
lods
movsl
sbb
sti
mov
jnp
inc
cld
cmpsb
sbb
or
xor
jne
mov
inc
sub
adc
cli
adc
or
cmpl
xor
inc
cli
pusha
mov
lea
out
adc
dec
adc
lds
push
push
out
fwait
sub
loopne
dec
pop
mov
sbb
xchg
mov
mov
int
and
scas
sub
daa
loopne
xchg
mov
pop
mov
cli
or
pop
mov
fistl
out
cmp
shl
andb
lret
mov
sbb
sub
push
out
xchg
push
cmp
mov
mov
das
push
pop
aaa
and
jns
mov
sbb
jo
int3
out
leave
std
clc
sahf
cmp
addr16
out
lock
adc
cmp
das
loope
jns
out
ss
cmpsl
adc
cmpsl
in
push
je
std
jle
adc
jns
adc
xchg
and
push
sub
lret
loop
dec
test
xor
enter
mov
mov
jb
gs
mov
add
inc
adc
lcall
ds
pop
or
pushf
mov
lahf
and
addr16
repnz
int3
in
nop
lock
outsb
jp
mov
jns
dec
xchg
inc
pop
scas
movsl
xor
insb
fincstp
mov
movl
ja
mov
push
sar
cmp
int3
and
adc
and
psrlq
mov
lret
cmc
dec
sub
aam
stos
test
jb
rorb
mov
ja
in
lret
mov
mov
shlb
add
xchg
outsb
xchg
aam
std
aad
fsubr
mov
ljmp
sub
jge
pop
ret
scas
pop
sbb
mov
inc
loope
test
insl
arpl
xchg
orb
pop
jne
cltd
dec
outsl
pop
add
jbe
subb
sbb
dec
aas
inc
pop
pop
cmp
adc
aad
sti
ds
fisttpll
add
loop
imul
fwait
push
fsubl
ljmp
push
std
icebp
inc
adc
push
sbb
es
jb
out
fimull
lock
sub
leave
cmp
test
mov
xor
jne
jo
iret
inc
cwtl
sub
pop
sub
mov
mov
fisubs
inc
mov
aas
jnp
daa
mov
rolb
adc
bound
jno
or
adc
test
mov
cld
loope
push
fs
push
jae
je
or
sbb
mov
in
not
subb
or
inc
rcrb
dec
hlt
inc
xchg
or
mov
dec
dec
xchg
lret
pop
lock
rcl
scas
jb
cmp
xchg
iret
aad
dec
enter
into
mov
fnstenv
aaa
ljmp
in
fcom
test
sub
xchg
lahf
jmp
out
add
mov
stos
std
lock
mov
shlb
jb
push
xor
cmpsl
sti
in
xchg
dec
movsb
testl
push
insb
mov
pop
mov
bound
jns
movsl
testl
inc
lds
xor
and
mov
xor
mov
add
nop
aad
lea
aas
or
push
jmp
xchg
das
and
inc
lret
dec
dec
popa
frstor
add
shrb
pop
imul
enter
adcl
inc
inc
mov
inc
cmc
sub
xorb
fisubrs
mov
inc
dec
movsb
lcall
clc
fsubrl
xor
pop
popf
outsl
loop
cmp
dec
mov
ficoms
push
dec
inc
jecxz
add
push
jae
mov
pop
std
gs
jle
adc
sbb
enter
dec
pop
jo
xor
sbb
jo
xchg
jmp
pop
dec
mov
pushf
mov
repnz
xchg
loope
addl
mov
mov
mov
insb
gs
imul
push
sub
loop
push
icebp
negl
scas
lret
in
out
ja
and
aam
insl
pop
leave
stc
iret
push
repz
jae
or
cmp
add
ja
add
push
xchg
mov
lea
mov
push
aam
and
es
push
jecxz
imul
aad
arpl
or
negl
addr16
fs
in
les
inc
movb
sbb
xchg
repz
or
daa
into
aas
jecxz
test
xor
jbe
lods
mov
lods
xchg
ss
pop
dec
sbb
clc
test
scas
divb
les
cli
xchg
popa
mov
mov
cli
cld
sbb
ret
sbb
movb
enter
push
addr16
mov
or
jb
inc
sbb
sbb
cmpsl
mulb
xchg
ljmp
sahf
stc
adc
adc
add
shr
mov
jae
pop
pop
inc
push
mov
ljmp
stos
pop
adc
cmp
lods
shl
lahf
call
mov
stc
dec
pop
xor
xchg
in
test
pop
shl
repnz
repz
pusha
or
lret
push
push
add
ficoms
inc
jle
mov
mov
ds
stos
imul
adc
and
int3
mov
push
adc
pop
ficomps
int3
imul
mov
mov
and
push
in
xchg
dec
sub
ss
pushf
inc
jge
xchg
loope
sub
inc
in
xchg
xchg
dec
in
xchg
xor
xor
clc
xchg
leave
cmc
cli
mov
aam
inc
aas
adc
xchg
push
ds
jb
jns
mov
jae
repnz
lahf
push
push
jo
hlt
jle
lds
adc
leave
movsl
mov
pop
or
pop
ret
mull
negb
mov
aam
lods
je
shl
and
aas
push
int
jnp
jp
popa
inc
sbb
stc
xchg
xchg
or
stc
ds
out
push
int
inc
pusha
clc
mov
inc
pop
xor
jp
shl
mov
pop
jb
add
jb
sub
add
sbb
gs
sub
push
add
shr
hlt
lock
pop
in
aas
int
dec
cmp
fsubs
stos
cltd
mov
xor
lcall
scas
add
je
out
fnstsw
mov
pop
cmp
arpl
pop
movsb
jp
dec
movsb
inc
or
neg
pop
push
sub
clc
rcl
pop
mov
rolb
insl
add
dec
testl
push
call
or
jmp
ror
push
jecxz
ja
pusha
data16
ja
in
scas
cmc
dec
loope
mov
or
mov
popf
mov
cmp
cmp
pop
rcrb
jo
xchg
mov
jp
and
add
arpl
das
and
sub
xor
out
sub
lock
push
xor
cwtl
scas
mov
data16
push
mov
and
cmp
xchg
lret
mov
jb
ja
xchg
lods
aaa
call
and
fsubs
xchg
jbe
jg
dec
push
ljmp
jecxz
cmc
inc
aas
cmp
jns,pt
dec
out
pop
sbb
es
mov
pusha
or
pop
xchg
aad
jge
push
xchg
fdivl
jno
rclb
mov
ss
dec
ds
div
fdivr
xchg
push
sbb
cmp
dec
xor
test
cmp
test
jne
mov
in
sub
pop
pop
je
int
xchg
cs
repnz
jmp
adc
enter
loope
call
stos
push
xor
imul
jge
sbb
fidivrl
cmpsb
pop
and
xor
stos
jne
push
jne
daa
sub
out
hlt
pop
mov
add
addr16
mov
or
or
sbb
imul
dec
mov
enter
xor
lods
in
imul
cmp
je
pop
sub
rcr
mov
jg
mov
mov
jbe
fstpl
insl
xor
dec
xchg
hlt
sbb
fsts
cmp
fwait
mov
or
sbb
dec
push
jmp
out
jno
add
mov
call
add
das
in
jp
or
cmpsb
mov
bound
dec
xor
xchg
lds
sub
psubusb
sub
dec
mov
pop
addr16
add
mov
sti
cmp
test
leave
ficoms
xorb
sbb
mov
pop
dec
jg
cmpl
jae
cmp
push
imul
jge
adc
fldenv
das
ficoml
pop
sub
mov
sbb
rcrb
test
test
fcmovne
xchg
sarl
cmp
repz
mov
or
jmp
adc
aaa
imul
nop
loop
sarb
jbe
jecxz
add
mov
fs
insb
adc
or
lods
xor
loopne
lock
je
push
sub
call
cli
clc
xchg
mov
rcrl
cmpsb
cmpsb
push
pop
push
push
push
ja
cmp
cwtl
sub
xchg
movsb
and
cmp
into
fmuls
pop
mov
cwtd
mov
cmpsb
xchg
pop
xor
jnp
lcall
xorl
daa
ret
fistps
cmpsl
xchg
adc
sbb
inc
ss
call
ja
cmp
xchg
dec
out
aas
dec
dec
xchg
movsb
and
add
pushf
jecxz
adcb
ds
bound
jg
fdivrl
ds
je
fcomps
lret
aad
sbb
out
mov
xor
arpl
mov
dec
and
enter
xor
ljmp
mov
pop
loop
xchg
push
push
or
xor
dec
mov
xchg
cmpsl
mov
sub
and
sub
dec
sub
iret
mov
loop
inc
cwtl
xor
out
mov
inc
in
js
pusha
fwait
dec
loop
push
push
loope
jbe
xchg
gs
lds
aaa
push
fstps
call
mov
dec
shlb
inc
cmpsb
pop
ffreep
insl
call
insb
xchg
inc
ljmp
push
jmp
imul
adc
mov
cmp
in
rcrb
out
or
jmp
mov
sti
imul
add
xor
add
dec
xor
cmp
inc
jp
aas
and
pop
test
lea
or
into
sbb
cmp
cmp
addps
xchg
loop
adc
fildl
fimuls
and
dec
xchg
das
pop
dec
cmp
pop
cmp
jne
sub
mov
sarb
and
xchg
dec
out
jmp
jp
cmpsb
dec
or
fsubrs
push
jp
pop
push
movsb
mov
movl
dec
fstpt
cmpsl
push
add
cmpsb
in
pop
addr16
stos
ret
das
mov
cmp
cmp
mov
inc
inc
pop
push
shrl
js
and
sbb
or
or
rolb
and
cli
hlt
mov
sub
jno
add
out
ljmp
fdivl
movsl
fbstp
movsl
push
jne
cmp
lahf
xchg
ret
lock
mov
push
push
sbb
rcr
int3
dec
cmp
sbb
xchg
jns
add
sub
sub
mov
mov
aad
add
pop
jmp
sub
xor
adc
cmp
push
push
insl
insl
fidivrl
ret
pop
popa
mov
xor
notl
cmp
mov
push
aam
or
out
fs
jle
push
into
loop
mov
js
movsb
in
jle
out
lods
cld
dec
jb
das
fstl
lock
or
pop
jecxz
dec
arpl
xchg
shl
popf
test
adc
add
mov
xor
hlt
cmp
mov
sarb
test
jmp
lods
pop
aad
inc
cmpsl
mov
test
icebp
lea
sbb
add
dec
pop
int3
test
cmp
mov
sbb
out
stos
and
aad
pop
adc
xchg
out
in
notl
iret
sbbb
outsb
xchg
cltd
lock
cltd
popa
test
cmp
pushf
cmp
jne
mov
ret
mov
dec
dec
into
pop
int3
loop
and
movsb
xchg
fcom
mov
jae
inc
fidivl
ror
lret
neg
js
ret
push
lods
out
adc
mov
enter
mov
js
jge
cmpsb
add
gs
mov
sbb
stos
pop
inc
xchg
fs
movb
lea
popf
push
call
add
xchg
mov
fs
push
pop
xchg
sbb
mov
inc
xor
sub
jne
fs
cmp
fsubs
call
mov
stos
and
inc
lahf
xchg
sbbl
jg
imul
mov
pusha
push
shll
push
mov
test
fs
sub
scas
cmpl
outsb
jbe
test
push
in
jmp
sahf
loope
stos
scas
ds
shlb
adc
out
sub
dec
adcb
adc
imul
and
xchg
push
mov
jmp
sub
lock
mov
dec
jle
xchg
push
jp
add
jb
data16
fcoml
je
xchg
sub
clc
shlb
adc
in
insb
mov
cmc
and
mov
mov
sub
pusha
lea
and
ret
testl
shlb
in
or
ret
aam
jge
shll
cli
xor
dec
sub
std
pop
fwait
or
rolb
ret
sbb
fwait
ds
push
or
jg
std
and
aam
push
inc
push
push
pop
jae
push
push
movsb
imul
in
adc
lock
andl
dec
inc
adc
and
adc
pop
lds
dec
pushf
fimuls
dec
mov
mov
push
jle
sbb
xchg
aam
mov
ret
cmpsl
icebp
addr16
out
mov
inc
dec
sar
mov
shl
mov
rorb
sub
mov
mov
xor
add
shlb
and
jae
mov
xor
mov
and
dec
add
dec
dec
sahf
xor
ljmp
repz
inc
movsb
lahf
and
cmp
test
sar
out
fadds
addr16
adc
mov
fidivrl
xchg
jl
pop
dec
xor
mov
inc
lahf
cmpsb
hlt
je
add
sub
xor
pop
rcrb
mov
into
test
fiaddl
cmp
mov
in
pushf
pusha
mov
pop
and
push
das
mov
add
in
inc
sbb
outsl
push
dec
loopne
rcrl
adc
gs
leave
stc
push
fprem
sub
aam
js
xchg
and
fstps
arpl
aam
inc
scas
mov
cmpsb
mov
push
pusha
lods
xchg
push
cmp
xor
das
test
cmovno
jecxz
cmp
mov
pop
sahf
cmp
bound
dec
jns
int3
cltd
pop
cli
lods
mov
mov
stos
popf
jns
mov
lods
insl
bound
mov
sbb
popa
dec
outsb
push
inc
xor
test
out
sbb
jmp
addl
inc
sti
push
sbb
aas
xor
add
mov
push
jns
mov
and
mov
shlb
repnz
xchg
orb
stos
xchg
add
in
pop
into
rcll
push
bound
cld
push
aas
les
or
cmc
fdivrp
or
pushf
add
jbe
mov
pop
popf
mov
enter
dec
xchg
fidivrl
or
sbb
mov
daa
call
push
or
sbb
cs
ds
cmpsb
pusha
mov
repnz
sti
dec
sub
insl
jae
stos
rcr
popf
imul
xchg
xor
pop
sub
push
iret
hlt
and
into
adc
sbb
ret
inc
cmpl
sbb
xor
popa
jno
aas
push
jb
loope
aas
jno
ss
xlat
inc
cmp
insl
and
push
filds
jmp
pop
aam
nop
adc
shll
adc
loop
sarl
sub
dec
and
pop
jl
mov
xor
rorb
mov
in
cli
lea
rorl
dec
mov
xor
jl
cmc
sbb
les
and
pop
mov
dec
mov
out
push
push
sbb
mov
adc
popf
push
in
out
pop
xor
inc
cmpsl
jbe
fidivrs
lret
insl
fsubrs
icebp
and
jbe
negl
pop
daa
inc
push
mov
lcall
lahf
mov
mov
xchg
xchg
inc
loop
or
int
push
jnp
test
ret
fwait
lea
scas
jns
scas
pop
icebp
enter
ret
cmp
or
and
mov
loopne
movsb
pop
mov
cmp
mov
mov
aad
mov
push
mov
stc
iret
insl
jnp
dec
test
cmp
shrl
sub
imul
shrl
mov
stos
lahf
dec
nop
push
insl
sti
iret
jns
xchg
xor
fwait
daa
bound
sbb
sub
adc
addr16
cs
cmc
jge
mov
jge
add
stc
shll
add
dec
aam
cmp
test
lock
testb
xchg
adcl
stos
inc
mov
aam
stos
push
add
nop
mov
mov
sub
fisttps
es
shll
aad
pop
sub
popa
mov
adc
sbb
mov
adc
mov
popl
in
jecxz
cmp
inc
xor
lock
fidivrl
mov
inc
mov
repnz
cmp
loop
jle
sbb
clc
push
cmc
gs
cmpsl
mov
cld
pop
mov
xor
stos
pop
cmpsb
fdivr
or
or
insl
lock
cmp
sti
pop
daa
xchg
imul
orl
mov
xor
sub
sbb
and
fwait
lea
or
jmp
mov
stos
es
das
or
and
movsb
jmp
mov
xchg
mov
jecxz
pop
pop
out
fstpl
ja
sbb
out
rolb
and
sbb
pusha
int3
dec
movsl
test
xchg
mov
out
cmc
orb
pop
aam
shlb
dec
test
pop
aaa
pop
lods
or
hlt
cli
xor
pop
lods
cmpsb
cli
ja
scas
lret
xchg
sub
mov
jae,pt
mov
pop
mov
mov
dec
imul
fidivs
xchg
movsb
imul
pop
call
mov
inc
test
lret
jno
mov
inc
idivb
test
mov
ss
add
aas
jg
sbb
fdivrs
xor
in
cmc
push
dec
test
scas
push
das
popf
jp
jb
mov
inc
sahf
push
ljmp
and
popf
mov
fisubrs
rcl
and
pop
sarb
xchg
lock
arpl
mov
stos
out
mov
mov
fsubrp
and
pop
cmpsb
call
cltd
mov
push
cmpsl
cs
xor
imul
out
xor
cmp
lods
rorl
cmp
popf
outsb
lret
lahf
mov
arpl
fcmovnb
sti
jb
sbb
xchg
mov
ljmp
jle
rcrl
mov
jmp
pop
add
xchg
in
add
cmp
lahf
std
push
cmpb
test
adc
cmc
dec
xchg
sbb
out
rcll
adc
lahf
jno
fs
insl
xor
mov
sbb
xor
mov
xchg
and
mov
div
in
fstpl
xchg
arpl
loopne
in
test
sbb
mov
rolb
xorb
dec
sbb
ss
popa
scas
outsl
jg
pushf
mov
sbb
cltd
lods
stos
test
or
xchg
in
push
and
and
aad
cli
mov
jo
movsl
mov
inc
sbb
adc
sbb
leave
or
mov
cmpsl
inc
dec
adc
cmp
leave
jae
and
sub
add
cmp
jb
xor
dec
sbb
loope
std
rorb
int3
outsl
ret
push
jo
xchg
sbb
and
call
pop
scas
jnp
aas
lea
jecxz
stos
icebp
scas
sbb
xchg
xchg
ljmp
xor
fildll
lcall
jmp
and
mov
in
or
inc
loopne
clc
iret
int
sub
push
les
push
mov
loop
int3
aad
sub
mov
xor
stos
mov
mov
mov
mov
leave
loope
jge
ljmp
ss
mov
leave
xchg
adc
sbb
sbb
gs
xor
out
jl
outsl
loopne
ror
popa
jmp
dec
mov
jp
inc
roll
ret
cmp
dec
fmuls
lret
xchg
mov
xchg
pusha
nop
mov
mov
inc
stos
movsl
sbb
xor
pop
call
mov
cmp
fmul
ja
cmp
cmp
jbe
mov
cmp
pusha
cmp
jnp
or
sbb
sbb
packsswb
data16
mov
jp
mov
pop
jecxz
leave
mov
or
int
adc
or
adc
jge
loop
and
push
push
pushf
sti
icebp
push
mov
lock
push
or
add
les
adc
xchg
sub
adc
cmp
and
and
lds
arpl
mov
fdivrl
aas
insb
std
fadds
jmp
jecxz
fildl
lret
push
adc
fisubs
adc
enter
mov
fdivrs
dec
dec
mov
add
cmp
stc
and
hlt
jae
xor
or
lcall
in
leave
fidivrl
push
mov
cmpsb
fwait
test
out
sub
or
xchg
add
dec
imul
je
cwtl
dec
icebp
lods
sbb
pop
imul
daa
adc
jl
test
pop
inc
and
mov
jbe
mov
cmp
fwait
testb
sbb
dec
ret
adc
scas
sub
sub
enter
cltd
hlt
outsl
das
jns
ret
xchg
inc
mov
rolb
push
mov
out
mov
cmp
inc
xchg
std
stos
data16
scas
mov
dec
cmpsb
jbe
add
xchg
pop
les
jne
icebp
dec
insb
out
sbb
xchg
ret
cwtl
jp
cltd
jns
pushf
fs
mov
fwait
adc
mov
mov
or
dec
mov
shrl
test
push
mov
cs
js
or
or
imul
and
bound
fwait
push
and
cmp
mov
mov
dec
xchg
fdivrl
push
stos
inc
jno
cltd
xor
test
push
mov
mov
fildl
test
push
pop
mov
test
dec
cmp
dec
ret
shlb
mov
xchg
cmp
adc
aaa
andb
mov
pop
jmp
lock
ljmp
mov
mov
out
add
mov
cli
sub
test
sbb
dec
mov
rcr
or
ret
into
mov
xor
cmp
scas
add
loopne
dec
mov
push
xor
imul
and
popf
jae
or
cmpsl
xchg
jmp
mov
fdivl
lea
or
push
cmpsl
adc
adc
add
xchg
icebp
xchg
and
pop
test
ss
jl
fstpl
jl
outsb
ficoml
jb
pop
push
add
movsb
imul
mov
mov
les
add
enter
sub
mov
fs
repz
stos
iret
aas
adc
push
clc
out
mov
add
in
imul
cmp
jne
test
iret
jb
aas
mov
mov
repnz
es
and
dec
fwait
mov
pop
ret
lret
fwait
pusha
pop
enter
mov
xchg
mov
inc
or
add
jo
test
aad
mov
cmpsl
aam
mov
sti
sub
clc
xlat
fisttpll
std
ret
out
cmp
jl
sub
dec
mov
jge
cmpsl
je
push
xor
cmp
and
mov
addr16
push
stos
pop
imull
mov
jge
lahf
into
dec
or
iret
pop
mov
mov
into
xor
das
xor
test
jb
sbb
test
bnd
push
add
sub
push
rclb
sbb
aaa
sub
negb
fs
mov
imul
ret
insl
testb
push
dec
popf
jecxz
or
inc
int3
mov
and
push
inc
pushl
mov
shlb
std
and
bound
add
xor
xchg
push
or
out
xchg
add
lods
adc
push
repz
movsb
fsubl
push
jno
cmp
mov
mov
ljmp
ds
dec
ffree
adc
lds
rorl
jge
jle,pt
xchg
xchg
push
push
shlb
cmpsl
and
rolb
inc
adc
out
jns
test
cmpsb
add
seta
dec
push
cmpsl
subl
sub
xchg
push
stc
call
addb
dec
dec
ret
sar
pand
jno
push
xchg
inc
rorb
cld
aam
pop
xchg
daa
mov
fnsave
xor
addl
sti
mov
sub
pop
push
mov
push
lea
push
xchg
push
and
sub
fdivrs
sbb
cmpsl
sarb
out
mov
gs
push
mov
shlb
dec
ljmp
shlb
sahf
pop
out
mov
out
ret
mov
jmp
adc
sub
cld
xor
pop
ret
sbb
push
sub
sbb
stc
dec
adc
fcompl
js
cmp
lcall
cmc
pxor
jb
scas
popf
pop
lea
popa
sti
je
mov
xchg
fcmovb
cmc
xchg
xor
inc
jbe
pop
xor
ds
pop
repz
leave
sbb
fidivrl
call
adc
fimull
or
loop
pop
stc
popw
fs
dec
lcall
mov
int
mov
xchg
loopne
jae
test
popf
and
pop
cld
out
bswap
insl
daa
adc
imul
adc
inc
out
inc
add
jns
mov
xchg
xlat
enter
jg
cmp
jecxz
inc
sub
adc
ret
pxor
push
sbb
jle
mov
jg
je
leave
sti
aad
clc
lahf
xchg
inc
into
int3
sub
mov
repz
pop
aam
push
les
mov
xor
cmp
xor
jo
sub
jmp
lahf
dec
sbb
dec
pop
mov
iret
dec
das
fisttpl
or
and
mov
jl
add
lcall
or
lods
xchg
jge
stc
mov
pop
jp
xchg
cwtl
pop
in
sbb
push
fsqrt
lock
stos
cli
push
sbb
imul
sbbl
mov
xchg
dec
in
jmp
daa
add
jae
fldl
loop
cs
int
jne
inc
sub
stos
pop
xchg
ret
repnz
fbstp
inc
daa
sahf
daa
fmull
das
add
les
call
pushf
aaa
decb
sbb
xor
fsub
dec
mov
inc
aaa
movsl
inc
push
mov
and
or
das
in
outsb
pop
xor
in
into
add
arpl
rorb
jb
adc
outsb
ret
lea
inc
xor
xchg
mov
movsb
dec
xor
lret
mov
pop
fldcw
and
cli
sbb
jo
xchg
das
inc
dec
mov
das
scas
bound
rcr
movsl
popf
cmp
inc
cwtl
jmp
cmc
data16
push
xchg
push
addr16
fnstsw
push
add
add
fisubrl
fs
cmp
test
inc
aam
insl
incb
dec
mov
pushf
cltd
fs
mov
divb
sub
push
xlat
and
imull
inc
loopne
pop
mov
imul
jno
push
fs
outsb
fisubrl
xchg
loope
data16
mov
push
mov
cltd
test
push
mov
jb
or
mov
mov
rorb
lcall
mov
inc
sbb
adc
xor
mov
and
mov
js
mov
mov
dec
mov
pop
xchg
or
sub
out
int
jno
push
cli
in
and
enter
loopne
rorb
js
push
ja
or
jne
pop
mov
mov
jno
mov
testl
mov
dec
inc
out
cs
push
jmp
imul
dec
jmp
mov
mov
or
mov
pushf
xor
inc
jg
sbb
xor
mov
or
dec
rcll
sbb
out
cmp
or
popa
inc
test
outsl
cli
jp
test
or
dec
jo
add
dec
sub
cmp
call
jnp
imul
sub
add
add
daa
shrl
mov
push
aas
adc
pop
mov
subb
in
cmc
pop
mov
xchg
notl
mov
or
jne
mov
mov
jns
jp
aas
call
lcall
arpl
cmp
xchg
les
sbb
sub
mov
leave
or
sbb
mov
cs
sub
sbb
cmp
or
add
add
lea
stos
xor
inc
xor
mov
jnp
pop
shrb
jp
push
std
sbb
xor
rolb
imul
aam
xor
les
pop
mov
sbb
mov
adc
jl
test
pop
sbb
inc
ljmp
sub
adc
pop
stc
mov
add
sub
mov
stos
out
outsb
xchg
scas
sub
ds
hlt
repz
adc
iret
aaa
push
sbb
mov
mov
mov
fdivrs
and
mov
dec
pop
mov
mov
xchg
or
inc
add
sbb
adc
cmpsl
or
test
mov
jne
sub
cmp
mov
pop
xchg
mov
inc
dec
paddd
das
loope
push
push
push
inc
test
xor
add
daa
jnp
out
dec
xor
mov
push
movsl
ljmp
and
popa
dec
sbb
data16
sub
dec
repz
push
notl
jge
pop
das
jae
pop
stc
jns
mov
push
aas
jae
pop
jle
sbb
xchg
loop
jp
outsb
test
xchg
cwtl
insl
cmp
pop
jmp
in
mov
push
inc
inc
popf
clc
or
sbb
out
movsl
add
sti
cs
xchg
in
jne
mov
je
hlt
dec
stos
cmp
aad
add
dec
pusha
popl
movsl
insb
xchg
ret
in
outsl
aad
in
loopne
mov
test
imul
jne
mov
push
mov
xor
scas
mov
pop
add
sub
inc
into
negb
fwait
in
sbb
sbbb
fdiv
sbb
xlat
cs
scas
roll
pop
cli
lds
sub
or
mov
pop
out
jg
test
imulb
cltd
addb
cs
loop
addl
stos
jge
push
repnz
scas
sub
stc
sbb
movsb
dec
xchg
adc
daa
mov
out
sub
add
daa
dec
jp
iret
adc
in
test
insb
sub
jno
hlt
rcrl
push
shlb
adc
xchg
mov
movsl
hlt
sub
das
inc
xor
mov
jnp
add
push
push
xchg
cmp
or
dec
dec
and
leave
imul
rcr
mov
int3
sbb
add
or
xchg
push
xchg
mov
das
sbb
push
ljmp
int3
jae
loope
xchg
out
mov
mov
adc
mov
int3
sbb
and
popa
inc
push
fimull
rcll
adc
out
movsb
lret
in
add
loope
push
push
dec
xchg
sahf
xchg
mov
jns
jbe
aas
lock
repnz
mov
push
xchg
push
sbbl
push
scas
les
push
loop
inc
cmpsl
mov
xchg
push
adc
sbb
cmc
cmc
xchg
add
pop
rol
pop
shl
push
jecxz
std
sub
int3
xchg
aas
fisttps
adc
bound
movsb
jnp
jl
xor
mov
pop
loopne
pop
adc
inc
and
insl
aas
push
mov
xor
push
xchg
stos
mov
test
fadds
add
inc
bound
sub
mov
clc
mov
push
pop
adc
dec
enter
ljmp
rolb
xlat
movsl
jnp
pop
clc
sbb
outsb
dec
addr16
pop
test
push
mov
or
das
ret
inc
or
aad
dec
mov
cmpsl
cli
lods
mov
xor
aas
jb
jae
mov
in
push
shll
dec
scas
repz
xchg
pop
addr16
ljmp
or
sbb
mov
jns
jb
add
jp
lret
lods
insb
xchg
or
ret
outsl
sub
mov
ljmp
mov
xor
out
nop
pop
jge
jp
xchg
and
pop
sahf
sbb
mov
sub
cmpl
fcmovbe
bound
and
stos
or
cmp
cmpsl
pop
aam
sub
adc
and
popf
shlb
sbb
pop
mov
sub
subb
cli
movsb
jp
insl
lea
xor
imul
mov
hlt
loop
xchg
loop
add
jle
cwtl
cmp
outsl
je
scas
or
andl
xor
inc
loope
push
sti
mov
sbb
push
and
mov
xor
pop
xor
je
pop
fxch
inc
jecxz
les
insl
sahf
mov
dec
rcl
pop
add
jp
xchg
rorl
arpl
push
dec
lods
addl
sbb
sarl
push
xchg
add
in
fwait
xor
sub
out
repnz
inc
pop
fsubp
cmp
jns
into
xor
imul
adc
bound
push
movsl
cmp
xorl
cmc
frstor
dec
dec
imul
xchg
mov
add
int3
fildl
jmp
inc
xchg
inc
and
xchg
cmc
lahf
neg
loop
gs
push
nop
push
iret
jecxz
orl
icebp
jae
adc
aas
xchg
mov
hlt
aas
es
xchg
mov
sbb
ja
jmp
xor
push
cmp
mov
arpl
mov
mov
leave
sbb
mov
push
lods
pusha
pop
out
cltd
jg
inc
xchg
mov
xchg
inc
jecxz
push
inc
push
inc
addr16
mov
add
shrb
test
inc
rcrl
push
mov
fnsave
xorl
inc
xchg
outsb
mov
daa
in
push
rolb
jle
repz
pop
lds
ja
add
push
pop
bound
dec
fists
mov
pop
xor
int3
mov
jecxz
push
pop
rcrl
xchg
or
stos
outsl
stos
rclb
lret
mov
out
push
pop
adc
inc
dec
sbb
pushf
or
or
jb
adc
inc
push
jmp
add
lahf
lret
jge
loopne
cmp
pop
fsts
js
dec
rcl
loop
ja
int
mov
in
jae
jmp
adc
aam
jge
add
lds
push
ss
mov
dec
lret
movzwl
bnd
dec
movsb
jg
push
inc
gs
shl
add
add
cmpl
mov
mov
stc
jb
loop
sbb
repnz
mov
mov
int
mov
push
and
fs
cmp
cli
xchg
call
incl
leave
shl
adc
inc
stc
int
aaa
push
mov
dec
pushl
in
adc
xchg
mov
popa
mov
outsb
stc
sbb
scas
lea
aas
hlt
lret
ret
mov
in
fsub
pushf
imulb
psubsw
in
insl
lret
out
inc
pushf
shlb
and
mov
mov
xor
data16
mov
push
pushf
and
and
fcomps
push
mov
add
loope
mov
pop
addl
arpl
mov
pop
and
mov
imul
sub
call
pop
ret
mov
pushf
add
push
xchg
xor
sarb
mov
xor
inc
mov
adc
xor
js
movsb
push
jae
jecxz
xor
jns
cld
int3
fs
jp
mov
xor
out
mov
gs
xchg
stc
fcompl
std
stos
js
add
jo
std
sub
or
cmc
fnsave
fwait
cli
mov
out
scas
inc
pop
rcl
cld
xchg
in
das
in
into
adc
adc
inc
adc
fucomip
mov
jmp
jmp
mov
sub
or
std
arpl
ss
inc
xchg
mov
mov
dec
mov
ja
and
dec
ret
test
out
out
push
xor
push
mov
aas
pop
movsb
pop
and
stos
aad
pop
pusha
lahf
sahf
mov
into
xchg
push
out
flds
daa
fistpl
cli
and
jnp
std
pushf
repnz
std
jp
jns
sbb
pop
rorb
inc
pop
or
addr16
ds
jae
inc
addr16
pop
inc
xchg
imul
or
hlt
fsubrl
pop
jne
mov
daa
arpl
push
pop
xchg
das
lds
lods
or
call
pop
pop
dec
in
inc
rcl
fs
or
sub
cmc
xor
inc
fistl
lcall
jmp
cmp
ret
ret
mov
adc
call
xor
mov
xchg
xchg
push
and
subb
sub
cli
sub
pop
shr
jmp
mov
adc
out
sbb
push
mov
cltd
lea
in
imul
or
outsb
nop
pop
outsb
sub
insl
cmpsl
sub
add
add
adc
gs
inc
lret
cmpsl
pop
adc
mov
daa
test
outsl
in
sbb
rcl
outsl
jle
int
xchg
push
loope
sub
pop
outsb
out
cmpsl
or
inc
subl
iret
mov
xchg
add
rcl
iret
testl
rcr
jge
dec
xor
shr
xchg
aad
je
mov
adc
xchg
dec
fisttpll
ds
dec
add
push
adc
inc
ret
inc
sub
adc
mov
sub
mov
sbb
std
cmp
push
rcll
cli
scas
inc
bound
idivl
test
xor
xor
jmp
mov
inc
bound
mov
popf
jne
call
icebp
into
and
sbb
jl
inc
scas
les
aad
scas
cli
cmp
fisttpl
mov
std
inc
cli
inc
pop
aad
add
sub
adc
stos
mov
sbbl
push
out
or
sub
insl
mov
mov
adc
inc
rcll
out
mov
mov
insl
lret
or
mov
and
or
mov
inc
cmp
fistl
cmpsl
xchg
dec
clc
jg
add
pop
cld
sub
dec
test
stos
enter
or
sbb
sbb
nop
in
mov
aam
dec
pop
lcall
mov
fists
sub
xchg
test
mov
movsl
js
js
nop
pop
std
mov
dec
pop
stc
add
insl
inc
cmp
shl
stos
aad
pop
mov
rcrb
and
fisubrs
push
sarb
mov
jno
inc
dec
lret
inc
mov
push
sbb
imul
clc
fucomip
arpl
pop
dec
adc
or
std
adc
mov
aas
push
jo
lcall
or
cltd
rolb
push
cltd
pop
lea
test
xchg
outsl
or
mov
jns
pop
cmp
in
hlt
push
xchg
aad
mov
mulb
add
push
lea
dec
mov
add
loop
sub
and
push
cmp
sbb
adc
mov
jne
lock
mull
mov
dec
int3
imul
mov
or
push
movsb
adc
in
rcll
loopne
fwait
popa
test
fists
inc
andb
stc
mov
rcrb
iret
addr16
imul
pop
aam
out
ss
or
adc
sti
sti
mov
push
jp
lods
sbb
out
mov
push
pop
sbb
cli
inc
mov
test
in
mov
mov
inc
push
mov
outsb
cmpsl
rorb
test
push
or
shrl
out
data16
popl
and
adc
xor
lea
shr
popf
mov
sbb
inc
cmpl
jo
fs
mov
or
pushf
ja
int3
inc
add
scas
movsl
pop
xor
aad
mov
ret
cmp
scas
cs
fbstp
push
mov
outsb
cmp
jl
cmp
cmpl
cmp
pop
sbb
sub
cmp
inc
xor
test
inc
bnd
pop
pop
and
xchg
xor
lret
sbb
mov
mov
clc
sub
std
and
inc
repz
fistl
push
dec
xchg
mov
mov
enter
jmp
sbb
nop
lret
push
inc
pop
mov
push
mov
mov
pop
test
pop
sbb
push
and
sub
xchg
popa
inc
inc
rcll
sbb
push
fstpl
in
in
xorl
jmp
adc
cmp
popf
mov
push
es
push
test
pushl
cmp
lds
rcr
pop
cmp
xchg
add
mov
or
pop
in
imul
fbld
loopne
shrl
pop
lds
pop
mov
xor
dec
add
jge
je
cmp
enter
fisubs
inc
jo
lock
out
cmp
inc
fucomi
and
mov
add
push
xchg
cmpsb
sbb
mov
mov
push
rorb
xor
inc
scas
adc
sahf
stc
hlt
aam
jno
push
cmp
movsl
addl
sar
mov
pushf
lea
rcrb
mov
push
cmp
movsb
push
dec
aaa
mov
jp
imul
cli
inc
mov
cmpl
rcll
dec
inc
out
xor
cmp
push
sub
cmp
adc
iret
cli
out
push
mov
xchg
test
in
aas
pusha
mov
push
rorb
or
dec
jns
aas
and
fs
sahf
sub
sub
movsb
jbe
out
dec
clc
xor
and
out
addr16
in
pop
out
ljmp
xor
idivl
addb
cwtl
ds
dec
shl
js
mov
jae
or
shrb
jne
stc
mov
cmpsb
shlb
outsb
ja
add
fs
lds
sbb
mov
jbe
stos
movsb
fisubrs
dec
inc
scas
out
pop
stos
sub
pop
enter
xor
int
cmp
in
lret
and
adc
lea
popa
mov
mov
sub
push
mov
pop
and
int3
dec
std
imul
sbb
fstpt
cltd
fnsave
rolb
jg
insl
clc
xlat
push
jg
ret
dec
int
pushf
out
sub
movsl
or
imul
lods
mov
lret
andb
mov
sbb
subl
xchg
inc
pop
inc
inc
adc
popf
je
cmc
movsl
mov
cmp
movsl
pusha
jge
mov
popa
mov
scas
sbb
push
cmpl
push
daa
aam
cmp
test
in
adc
or
inc
mov
cltd
cmp
jo
cmpb
out
rorb
pop
adc
xor
inc
sti
pop
sub
out
push
js
adcb
addr16
adc
ja
mov
pop
push
xor
fsts
out
cmpb
jp
push
js
gs
sub
xchg
jne
mov
add
in
cwtl
xchg
cmp
push
push
clc
adc
cmpsb
inc
inc
shl
sub
movsl
adc
test
cltd
mov
xchg
repz
in
xchg
push
pop
pop
mov
mov
imull
mov
imul
int
mov
imul
and
sbb
stos
cld
jmp
dec
lods
add
adcb
xchg
or
jecxz
aaa
inc
ss
sub
repz
mov
out
mov
lcall
ds
fs
orl
ret
xchg
mov
lcall
js
pop
cmove
out
fnsave
mov
sbb
xchg
icebp
call
sub
push
pop
call
push
adc
cltd
mov
sub
sub
sbb
jnp
scas
es
sub
cmp
enter
cmpsl
add
dec
xchg
mov
outsl
gs
cltd
pop
cwtl
xor
or
cmp
fldenv
xchg
mov
sahf
dec
lds
lea
pop
mov
mov
lea
mov
cmp
mov
and
rcrb
roll
adc
sub
out
push
dec
inc
sbbl
scas
mov
andb
or
out
xchg
cld
and
popf
push
in
mov
dec
push
movsl
mov
xchg
shll
imul
bound
stos
mov
adc
push
cltd
scas
cmp
in
test
jae
pusha
sub
mov
xor
xchg
rorl
inc
les
pop
and
sbb
mov
add
cmp
push
push
icebp
add
fsubp
mov
nop
jle
cli
jge
mov
dec
ja
mov
fs
fnstsw
mov
mov
jb
loopne
movsl
lret
add
pop
add
daa
and
loope
add
fimull
lods
cld
sub
into
bts
rcll
sbb
jno
jb
adc
inc
ret
loopne
ss
in
lods
testl
jb,pt
xchg
inc
push
mov
outsl
and
push
push
int
mov
pop
insb
jge
xor
push
int
sahf
in
and
cmp
dec
aam
pop
in
cmpsl
fistps
xchg
ss
fwait
leave
icebp
dec
into
dec
cmc
xorb
mov
cld
inc
lds
xchg
pop
inc
orl
lods
dec
push
sub
dec
repnz
js
xchg
cmpps
jge
leave
les
cmp
xor
mov
inc
push
jb
or
sub
jp
shrb
xchg
stc
and
subl
mov
mov
mov
nop
xchg
mov
idivl
inc
dec
mov
shrl
popa
cmp
cltd
fimull
sub
mov
out
loop
int
sbb
adc
ficomps
push
cld
sbbb
shl
daa
fsts
jae
and
lret
add
subb
xchg
dec
es
push
jno
addl
scas
roll
xchg
dec
imul
cmpsb
cmpsl
push
xor
loope
xor
pop
sbb
ds
shll
inc
pop
lret
push
std
call
xchg
lcall
sub
out
cmp
sbb
daa
test
fucomip
xor
push
dec
out
mov
jbe
sahf
rorb
stc
pop
pop
lods
sahf
stc
arpl
sub
jnp
mulb
jle
dec
fs
sti
test
cwtl
loopne
jecxz
in
cmc
out
mov
lret
and
fildl
lret
shll
cmp
sub
lea
and
movl
sub
je
sbb
inc
dec
out
stos
xchg
decb
popa
int
imul
ret
xor
pop
xor
aas
sub
into
ror
inc
and
loop
inc
outsl
std
add
xor
pop
aad
movsb
lea
sub
rep
fisubs
cmc
cmp
mov
es
or
insl
cmp
push
push
mov
cs
inc
loop
cmpsl
push
jge
ret
push
sbb
daa
in
jb
fnstenv
adc
mov
mov
out
and
push
sbb
bound
xchg
lcall
out
stc
cmp
loope
out
push
insb
push
popa
mov
hlt
fisttpl
ret
mov
or
shl
cmp
push
in
jb
cld
call
push
js
outsb
pop
mov
in
mov
das
unpcklps
movsb
and
pop
arpl
aas
sub
lret
fidivrl
rorb
xor
cmp
call
and
pop
xchg
add
push
inc
rcrb
fisubrl
and
aaa
jo
test
subb
pop
inc
gs
and
cmc
mov
mov
mov
icebp
fimuls
mov
cltd
dec
ffreep
das
insb
adc
std
jbe
dec
sbb
xor
test
cltd
jnp
loop
pop
adc
hlt
movl
mov
dec
fnstsw
sub
cmp
pop
adc
ret
pushw
fdivrs
mov
xchg
cmp
test
out
fistps
jge
and
repnz
leave
icebp
fwait
in
push
and
mov
lods
popf
repz
and
addr16
shlb
iret
mov
fistpl
adc
lods
jge
fstps
scas
shl
mov
adc
xor
push
es
scas
adc
std
mov
xchg
mov
cmp
dec
adc
push
push
pop
and
add
in
pop
js
push
jb
lods
sbb
pushf
cmpsl
les
rdpmc
fnsave
shll
call
xor
sub
mov
mov
jmp
push
cmpb
popf
aas
pop
pop
lahf
js
sub
xchg
pop
or
pop
cmc
and
jmp
xchg
imul
andb
jp
jg
push
or
dec
lret
out
mov
mov
popa
push
xchg
inc
repnz
cmp
out
pop
insl
jg
mov
dec
sbb
push
or
push
mov
sub
test
in
pop
std
movsb
fwait
mov
cmp
movsl
inc
or
push
pop
jl
adc
lock
cmp
jo
adc
push
icebp
push
pop
jp
push
hlt
cmpsl
stos
cmpsb
shlb
pop
dec
or
pop
cs
in
jae
adc
fisttps
pushf
shrb
je
imul
and
scas
in
repnz
lock
setb
insb
dec
imul
xchg
test
jae
sub
jg
ret
cmp
lods
sub
pusha
lock
sub
xchg
in
adc
mov
and
rorb
mov
mov
test
jbe
call
outsb
jle
or
lret
es
jo
push
call
push
out
and
push
negl
xchg
adc
mov
mov
add
or
repnz
or
xchg
aas
aad
mov
sbb
movsb
call
ljmp
mov
outsb
mov
or
dec
mov
add
pushf
jne
jle
jmp
lret
imul
ss
pop
bound
movsl
mov
sahf
or
inc
xchg
and
mov
int
subb
mov
adc
lods
mov
jnp
xchg
fwait
pop
or
imul
mov
loopne
faddl
mov
in
loopne
outsb
adc
inc
sub
push
fldt
stos
std
loopne
xchg
loopne
stos
pop
pop
jl
aas
sbb
xor
xor
and
pop
scas
inc
insl
jno
fildl
dec
test
cs
sub
daa
cld
and
stc
mov
xor
dec
or
mov
pop
add
mov
inc
or
lahf
movsl
lahf
sti
adc
mov
loope
sub
pop
test
sub
jb
jmp
inc
idivl
mov
push
in
inc
pop
lds
mov
imul
sub
xchg
loop
push
cmp
inc
bound
and
sbb
and
pop
mov
cmpsb
pop
sbb
jmp
jbe
int
fbld
mov
or
inc
jle
scas
mov
pushf
scas
mov
push
mov
repnz
fmull
push
es
or
dec
pop
jl
cmp
sbb
pop
rcrl
sub
inc
je
fs
fwait
add
inc
lods
mov
push
cld
or
repz
adc
sub
lahf
das
lock
movl
lds
test
push
ss
dec
repz
xchg
xor
aam
pop
outsl
xchg
jle
mov
push
ds
arpl
js
add
gs
js
in
add
or
dec
daa
mov
popa
ficoms
sbb
dec
inc
jbe
sbb
push
adc
push
aad
cmp
lds
xor
out
jnp
adc
addr16
into
loopne
popa
psrlw
and
stos
into
rep
pushf
mov
mov
mov
gs
or
loopne
or
push
sub
mov
xchg
dec
shll
adc
daa
mov
fwait
sbb
push
call
fprem1
push
add
push
hlt
add
or
sti
push
into
push
aad
and
fmul
je
pop
mov
pop
mov
push
fwait
jmp
icebp
cmp
dec
add
int
adc
mov
xchg
stos
xlat
hlt
mov
pusha
fisubs
lret
mov
sub
shlb
sbb
dec
cli
cwtl
loopne
repz
pop
mov
cmpsl
xor
loopne
shl
mov
ds
xchg
push
xor
jmp
mov
mov
sti
inc
xchg
jo
cmpsb
add
sbbl
jo
mov
or
stos
out
or
into
sbb
mov
dec
out
out
pop
xlat
push
inc
push
je,pt
cwtl
dec
mov
adc
push
mov
les
xchg
cmp
lret
push
aas
aad
or
rcr
dec
mov
push
jle
dec
mov
sbb
ds
push
pop
mov
adc
sbb
out
scas
outsb
mov
sbbb
sbb
cltd
sbbb
fstps
mov
sbb
adc
jmp
xlat
dec
lcall
mov
dec
and
pmulhw
imul
out
test
jecxz
adc
es
jge
cmp
jmp
outsb
xchg
call
jno
add
aam
cmp
inc
sarb
insb
ret
xchg
stos
add
inc
xorb
sub
mov
mov
mov
loop
mov
or
addr16
jae
push
sub
adcb
mov
jecxz
test
mov
out
and
cltd
lds
add
xor
in
sbb
add
shll
inc
or
push
xchg
inc
sub
sub
xor
scas
out
repz
dec
pop
xchg
pop
cwtl
pop
cltd
push
push
sub
inc
xchg
mov
add
push
jbe
lods
jae
xchg
inc
xor
push
sbb
xor
mov
cmc
fadds
loop
stos
fcmove
push
dec
jmp
loop
movsb
mov
fs
std
loop
xchg
sub
sqrtps
sub
xor
std
xor
das
push
jge
jb
jl
add
cld
jecxz,pn
sarb
cld
mov
mov
enter
jns
int
xchg
ljmp
xor
stc
or
mov
mov
add
or
sbb
xchg
jmp
pop
push
dec
xor
and
repz
rcrl
inc
push
mull
cltd
cmp
xchg
dec
fdivrl
sbb
call
adc
and
inc
scas
je
push
ja
and
rclb
jle
dec
sub
int3
outsl
popa
push
and
pop
out
addr16
adc
xor
mov
sbb
hlt
xchg
xchg
push
mov
inc
into
xor
fldenv
scas
hlt
sbb
movsl
in
jmp
jl
nop
sbb
sub
ficoml
in
push
xlat
xchg
xchg
out
inc
cmp
add
push
mov
dec
adc
inc
mov
mov
cmc
jbe
inc
cmp
push
xor
mov
push
ds
mov
js
jnp
test
les
mov
addr16
prefetch
lret
mov
js
mov
insb
icebp
mov
sbb
mov
inc
filds
cmp
mov
mov
stc
orl
fs
pop
push
out
push
std
jno
icebp
push
push
repnz
add
adc
push
adc
add
adc
inc
pop
add
adc
shlb
xlat
aas
push
push
daa
ljmp
in
inc
cmpsb
pop
cmp
mov
and
xchg
iret
fcompl
ljmp
mov
and
imul
outsl
jno
sub
ret
ljmp
insl
int3
test
das
ret
or
dec
jns
xchg
cmp
cmc
pop
not
les
icebp
push
int
push
pop
aas
out
jns
cwtl
lods
out
xlat
das
orb
adc
movl
mov
pop
and
roll
add
push
xor
sub
mov
vmovlps
into
ljmp
ljmp
loope
push
scas
jae
push
ret
cmp
mov
stc
mov
scas
inc
int
add
pop
repz
js
add
test
mov
loop
jl
adc
pop
or
xchg
jnp
test
mov
cmp
ret
mov
loop
and
xchg
pushf
call
xor
jecxz
push
test
xchg
std
pop
in
fwait
pop
nop
mov
ss
cs
movsb
jb
dec
add
and
cmp
clc
cmc
mov
sub
aad
pop
xor
pop
insl
adc
lock
shlb
jecxz
shr
dec
mulb
je
movsb
mov
sbb
xchg
test
cmp
repz
pusha
mov
inc
adc
inc
es
push
inc
xchg
out
pop
outsl
mov
inc
add
push
scas
mov
xor
jle
repz
mov
enter
jg
mov
stos
nop
cmp
cs
out
subb
fsubp
cld
mov
les
dec
rcll
add
shrl
out
jne
xor
sti
lcall
dec
or
push
push
shlb
iret
mov
rcrb
cmc
loop
mov
addr16
pop
pop
out
in
xor
jne
jno
out
cmp
into
adc
je
add
jle
dec
outsb
adc
jl
hlt
jbe
mov
stos
outsb
inc
adc
sahf
or
das
pop
dec
dec
dec
ljmp
fwait
mov
jle
in
push
jp
and
in
dec
push
push
xchg
and
popf
cmc
mov
fdivl
paddusb
fimuls
ss
ret
push
out
inc
notl
mov
cwtl
pop
xchg
jb
imul
sbb
aaa
data16
add
push
push
add
inc
in
cmp
and
inc
jecxz
lods
mov
and
or
iret
cld
mov
jl
rcrl
mov
xchg
push
adc
out
jno
movsb
or
jp
movsb
push
mov
mov
xchg
outsb
jne
push
out
nop
mov
cs
mov
mov
out
arpl
cmp
subl
incl
jmp
gs
sbb
xchg
icebp
jb
int3
ret
je
adc
sbb
js
pop
or
mov
cmp
mov
add
and
ror
cltd
leave
enter
imul
loope
in
mov
sub
das
out
adc
xor
adc
add
inc
ss
mov
ljmp
mov
in
inc
loop
xchg
pop
hlt
fs
add
mov
fstps
or
mov
and
push
push
les
add
cmpsb
stos
push
inc
and
leave
int
cld
mov
and
cmp
fimuls
int3
out
out
xchg
jbe
roll
icebp
test
xlat
sbb
jmp
lods
shr
movsb
ds
xor
push
idivb
cmc
aas
insl
gs
sbbl
out
lods
mov
cwtl
mov
decl
aad
cmp
mov
or
mov
jmp
xor
dec
xchg
pop
jb
push
lds
jl
rcl
adc
pop
cmp
mov
inc
mov
jp
push
cmpsl
rcrl
push
aam
jmp
test
xchg
push
mov
cmc
fwait
mov
cmp
sub
jle
shrb
mov
mov
aaa
xchg
lret
pop
arpl
mov
pop
nop
jno
and
inc
push
and
add
or
mov
test
imul
dec
push
adc
data16
sarb
loopne
inc
jae
jo
jns
sti
jp
les
sti
adc
mov
pushf
xchg
adc
mov
xchg
cltd
push
add
cltd
idivl
ffreep
jns
xchg
movsl
push
mov
stos
add
fidivl
add
leave
pop
jmp
std
fildl
imul
fsubs
jbe
mov
cmp
arpl
inc
insl
aas
in
push
sub
scas
push
andb
add
xchg
lds
test
mov
fistpll
iret
xor
and
jb
stc
daa
add
das
rcll
in
jle
and
xchg
hlt
cltd
push
int3
je
jno
adc
mov
cwtl
test
cld
pusha
test
pop
adc
popa
cs
and
or
in
adc
jae
inc
in
cltd
push
movsb
sbb
cmovle
adcb
and
test
test
sarl
popa
sbb
push
addr16
inc
mov
out
xlat
insb
leave
stos
das
lods
mov
inc
add
xor
xor
fstpt
jb
loopne
popa
xchg
sub
xchg
in
and
cmp
jmp
pop
push
gs
pop
cwtl
xorl
xchg
leave
inc
sahf
and
mulb
in
gs
fxch
outsb
jecxz
jmp
jb
shll
hlt
dec
in
jo
idivb
pop
bound
lcall
out
jp
sbb
incb
sbb
mov
jp
inc
xchg
insb
sbb
xchg
push
popf
add
js
mov
pop
push
movsb
cmp
imul
out
arpl
addl
shll
aad
daa
jne
int
mov
dec
mov
and
cmp
adc
mul
aas
jo
jne
pushf
push
mov
mov
clc
jns
or
mov
fwait
add
sarb
faddl
stos
or
cs
mov
mov
cmp
arpl
xchg
xchg
sbb
mov
sub
filds
xlat
jmp
mov
das
popa
aas
std
ljmp
adc
into
imul
out
sarb
mov
xchg
mov
ljmp
xchg
hlt
in
rolb
shrb
and
adc
aaa
int3
cwtl
repz
out
sarb
rorl
enter
stos
mov
dec
les
sbb
xchg
and
pop
jns
push
mov
inc
shl
jb
xor
imul
jl
out
push
xor
es
bound
mov
push
jecxz
ja
push
cmc
outsb
sub
or
ret
sbb
shlb
iret
pop
fbld
ds
sbb
fwait
cs
sbb
adc
lock
test
js
jecxz
add
jb
or
xchg
roll
jb
lahf
dec
hlt
dec
neg
repz
out
add
mov
mov
aam
jge
shr
mov
cmpsb
mov
push
gs
cmp
cmp
pop
sti
inc
iret
enter
lret
mov
insb
inc
ljmp
mov
add
dec
repnz
stos
sbb
cmp
mov
xchg
or
popf
xor
imul
pop
pop
out
mov
inc
mov
xchg
es
adc
fisubrl
xchg
je
out
push
js
push
pusha
mov
data16
mov
or
dec
adc
adc
orb
pop
xor
and
mov
dec
dec
push
pop
mov
ja
jg
inc
lods
add
je
sarl
bound
int
js
out
and
push
add
pop
xchg
pop
loopne
loope
mov
sbb
mov
sub
xor
sti
loope
stc
or
pop
adc
and
popa
sbb
inc
push
and
adc
idivl
insl
popf
adc
pushw
mov
imul
add
stos
mov
out
loop
adc
jecxz
inc
add
sahf
inc
fidivrl
repz
pmulhw
sbb
das
dec
cmp
push
pop
jne
es
push
push
out
repnz
ret
add
fcomp
mov
divb
das
sub
adc
xchg
stos
or
icebp
and
jmp
fmul
mov
pop
shlb
imul
push
sbb
dec
nop
test
jns
xchg
sbb
xchg
jo
jno
in
fbld
ficoml
jge
fldcw
adc
cmpsl
xchg
std
dec
pushf
into
pop
adc
sub
enter
ja
enter
sub
jge
fdivp
fucomi
or
push
arpl
fwait
mov
cmp
enter
out
xchg
outsb
jne
lahf
or
lahf
ret
mov
pop
push
cs
sbb
lret
mov
in
jge
lds
imulb
jp
rclb
js
into
jno
push
addr16
int
push
ror
push
stos
out
fs
add
or
ror
aas
lds
adc
mov
inc
or
in
jmp
mov
popa
inc
xchg
or
push
pop
push
sub
mov
insb
sub
stc
cmpsl
jb
shll
je
pop
gs
inc
pop
out
imul
sbb
movntq
inc
sbb
mov
es
jmp
in
aaa
adc
dec
mov
dec
sbb
std
push
ret
out
imul
xchg
sbb
or
out
das
xor
and
or
push
xor
test
mov
jno
and
push
pop
scas
repz
cmp
sub
dec
push
sub
test
insb
cmp
inc
xchg
insb
into
xchg
cmovs
sub
fs
icebp
add
mov
sahf
mov
scas
cmp
nop
mov
jg
movnti
cs
in
mov
pop
mov
add
scas
fcomps
mov
jns
push
push
lods
dec
movsb
add
xor
dec
outsb
xchg
inc
stos
pushf
scas
adc
negb
sbb
add
and
dec
and
jne
bound
cltd
js
add
xchg
in
pushf
addr16
fildl
repnz
inc
jmp
ret
int
pop
fsts
xchg
call
test
gs
test
sub
fisubrs
les
fimull
push
jl
je
xchg
notb
rol
xchg
xchg
scas
xor
frstor
fadds
lods
lcall
jmp
xorb
sarb
jb
stc
cmp
in
mov
adc
outsl
mov
lret
inc
or
stos
das
or
testl
xchg
iret
cmp
sbb
pop
or
cltd
adc
fcompl
roll
mov
jae
mov
js
imul
and
add
daa
jo
xor
test
adc
std
jne
cmpsl
loop
jp
call
mov
clc
pmuludq
fnsave
jmp
mulb
mov
sar
or
clc
add
adc
adc
es
pop
dec
xchg
jg
out
sub
xchg
dec
or
cs
shlb
push
mov
xchg
adc
mov
fidivs
or
leave
dec
xor
divl
in
push
push
ljmp
movsb
push
push
xor
fmuls
test
mov
or
repz
xchg
mov
push
sahf
sbb
push
out
cwtl
lds
repnz
repz
popf
loope
outsb
stos
into
lret
xchg
push
dec
popa
pop
rcll
decl
jle
cmp
jge
jbe
and
insl
loop
xor
aaa
xor
outsb
pop
mov
shl
test
sahf
pusha
push
mov
mov
pop
fs
push
out
mov
addr16
in
fmuls
xor
sub
xor
xor
inc
outsl
stos
icebp
adc
jg
xchg
jp
fsubrl
adc
jno
mov
inc
push
ret
and
gs
xchg
mov
sbb
in
sbb
push
outsl
lock
mov
mov
roll
int
pop
add
aad
push
xor
mov
adc
lock
jmp
adc
cwtl
jno
dec
addr16
add
aaa
ficoms
push
add
mov
dec
mov
aam
xchg
push
dec
add
cmpsb
sarb
testl
iret
ljmp
pop
mov
sbb
lcall
pop
or
lahf
in
pop
pop
mov
mov
sbb
jg
outsl
addr16
and
lcall
inc
jne
dec
push
data16
jae
fwait
bound
addb
stos
xchg
int3
cmp
adc
push
imul
lret
leave
jle
std
jp
mov
pop
push
daa
cmp
sub
push
push
fwait
mov
mov
mov
jae
or
jecxz
mov
int3
mov
bnd
and
xchg
aam
scas
xchg
and
mov
ss
ja
mov
ja
sub
mov
dec
mov
daa
notb
and
or
cmp
sti
loopne
mov
xor
fadds
add
ficompl
push
and
nop
stc
inc
add
xor
or
push
adc
jge
push
popa
pop
sarl
add
lahf
or
mov
aaa
jecxz
mov
cwtl
adc
push
push
mov
xor
pop
mov
mov
jnp
testb
fildll
push
scas
lret
clc
dec
dec
dec
jne
cmp
inc
mov
or
mov
mov
lock
add
xchg
push
stos
daa
mov
notb
das
call
shlb
idiv
mov
mov
fxch
sbb
call
add
mov
jmp
mov
in
lret
mov
fnstsw
hlt
pop
cmp
aas
jns
in
or
dec
sub
or
sbbb
insl
jo
addr16
pop
or
push
addr16
cmp
ljmp
ficomps
mov
and
popf
cli
add
dec
in
inc
pusha
pusha
cmpsl
jecxz
fucom
fs
int3
arpl
shrb
hlt
and
fildl
das
int
jmp
stos
xor
add
stos
in
push
xchg
into
mov
and
mov
inc
fwait
shll
rorl
sbb
jg
mov
std
and
cmp
jb
dec
ss
pop
inc
push
mov
fisubrl
adc
push
cltd
jnp
sub
sbb
mov
pop
in
cmp
in
mov
test
lods
leave
daa
in
mov
clc
fidivrs
dec
add
mov
dec
push
test
rclb
lret
pop
mov
lret
sub
mov
lods
pop
das
cmc
cmp
and
mov
aaa
dec
iret
and
leave
or
pop
mov
rolb
push
in
and
mov
mov
inc
mov
stos
stc
clc
test
dec
push
xchg
fs
and
in
test
mov
test
jle
fimull
icebp
sub
cltd
add
lock
pop
and
xlat
pop
xchg
mov
and
fs
jl
test
in
shll
lahf
cmc
mov
les
out
idiv
addl
dec
jo
cmpsl
pusha
xor
xor
and
stos
push
aas
mov
cmp
and
mov
mov
enter
mov
mov
ds
add
sbb
cmp
fists
jmp
xor
xor
popf
or
je
mov
adc
mov
fcmovnb
sti
push
dec
bound
divb
inc
push
out
ret
inc
pop
in
mov
inc
adc
jne
push
push
jge
mov
mov
and
add
dec
xchg
push
std
test
lcall
lcall
movsl
or
icebp
shlb
inc
pop
mull
adc
or
std
sbb
enter
dec
and
stc
sbb
sti
lret
add
xlat
mov
mov
add
or
lret
das
push
aaa
push
ret
xor
mov
and
push
xlat
push
add
inc
or
stos
rcl
lock
daa
cmp
cmp
sahf
lds
push
in
xor
jmp
insl
pop
int
xor
icebp
cli
push
xchg
push
or
icebp
aad
sub
rorl
mov
pusha
cwtl
jl
fildll
push
push
jl
fwait
in
dec
in
lahf
out
dec
mov
fwait
std
iret
mov
cli
sub
jle
lods
xor
scas
mov
mov
inc
imul
clc
call
or
pop
pop
mov
jmp
sarb
loopne
fstl
fs
int
pop
scas
fcmove
mov
int
xor
inc
lds
rcll
jecxz
jge
xchg
roll
xor
je
aas
inc
mov
inc
ljmp
pop
jnp
adc
mov
adc
rcr
orb
inc
les
aad
mov
sub
repnz
rorb
jae
js
in
inc
int3
xchg
dec
sbbl
dec
push
lret
cld
cmp
outsl
push
mov
push
stc
stos
shrb
add
das
mov
fisttps
adc
cs
push
mov
aad
enter
cli
ljmp
scas
sahf
xchg
fcompl
pop
jne
scas
pusha
in
fidivs
les
push
mov
pop
pop
push
enter
xlat
adc
dec
pop
pop
mov
or
pusha
xlat
sub
insb
call
sub
dec
nop
jne
dec
imul
fs
jnp
cltd
mov
outsb
nop
or
push
jge
insl
pop
dec
pusha
xchg
loopne
js
out
jns
aaa
or
xchg
dec
rorl
xor
xchg
adc
into
imul
push
lret
fcompl
je
fwait
jo
cmpsb
testl
stc
test
cwtl
push
dec
in
add
add
push
pop
cltd
push
cmp
dec
dec
jge
pop
jge
push
xchg
or
adc
adc
cmpb
out
inc
js
dec
cmpsb
dec
inc
xor
mov
push
push
sub
cmp
iret
icebp
add
int
sti
mov
mov
xor
sub
dec
fimull
out
and
sub
into
sub
cwtl
xor
cmp
js
add
lret
in
fldt
mov
adc
pop
push
cmp
scas
push
arpl
sbb
sbb
cmc
add
pop
pop
xchg
mov
adc
stos
mov
push
cwtl
sti
cli
jns
stc
cmpsl
dec
leave
push
push
scas
mov
aas
mov
and
shll
add
loop
or
or
imull
push
or
cmc
add
push
scas
mov
rcr
xor
mov
shrl
push
or
xchg
into
imul
or
cmc
pop
data16
mov
fnsave
cmp
divl
push
test
sbb
adc
xor
cmp
dec
testb
sub
jnp
or
in
mov
ret
jnp
pop
or
inc
call
pusha
clc
aad
mov
sub
addb
jo
daa
adc
dec
add
into
pop
cmpsl
cmp
ret
imul
test
sbb
mov
test
jnp
dec
stc
fwait
mov
test
mov
lret
inc
xor
and
jb
addl
push
sbb
movsl
int
fsubr
mov
mov
jnp
mov
inc
clc
mov
das
popf
jne
repnz
push
xor
sub
fstps
sahf
lds
cmp
add
out
sub
addr16
iret
xor
push
mov
push
or
movsl
add
nop
out
loope
or
fistl
pusha
popf
mov
lds
out
outsl
xor
add
cli
mov
push
cld
cmp
mov
pop
out
pop
in
je
jbe
pusha
sub
aam
lret
dec
inc
xchg
mov
testb
pop
nop
popf
aam
mov
out
lcall
ja
clc
mov
pop
mov
aad
dec
test
lds
jns
cmpl
fs
ficompl
shll
mov
addb
jbe
shrb
popa
in
cmp
mov
scas
xor
jo
int3
xor
scas
or
jmp
xor
sbb
lret
add
cld
lock
repnz
adc
fists
cmpsl
mov
mov
rolb
fcoms
inc
fisttpll
stc
int3
lods
sbbl
popa
adc
xchg
movsl
stos
sbb
fsubrs
mov
loopne
push
aaa
pop
cld
or
test
push
or
shrb
bound
jl
mov
and
sbb
jge
movsb
cld
out
add
ja
inc
push
pop
dec
into
dec
mov
es
ror
int
sub
xchg
inc
mov
pop
jg
pop
xchg
cmc
pop
xchg
mov
out
sbb
and
pop
and
xor
inc
push
aas
jbe
sub
arpl
jl
xchg
dec
xlat
in
lea
test
hlt
inc
lock
sub
jo
aad
push
fcoms
int
pop
or
jne
push
in
gs
popf
push
es
mov
cmp
or
inc
test
and
xchg
xchg
adc
das
cmp
imul
insb
repnz
mov
and
je
fbstp
icebp
loopne
gs
inc
das
ds
mov
jno
mulb
jle
xlat
sub
or
dec
sbb
pop
test
outsl
xor
movsl
ficoml
pop
and
shrb
iret
or
mov
pop
and
rolb
loope
push
xchg
xchg
adc
shrl
jp
mov
and
or
imul
mov
fldl
inc
lret
subb
icebp
mov
jl
inc
mov
inc
xorb
push
enter
adc
jns
mov
inc
or
sub
pop
sbb
mov
scas
cmc
xor
out
or
fidivrs
and
cmpb
repnz
mov
cmp
xor
add
lret
shlb
les
lock
js
xor
sub
mov
fisubl
gs
ds
push
in
mov
adc
or
xor
mov
push
dec
and
add
bound
test
xchg
mov
xchg
shl
mov
inc
xor
push
and
aad
int3
cld
or
jne
sbb
lahf
or
out
inc
iret
popa
adc
inc
jge
enter
addl
mov
aas
mov
push
movl
add
in
sub
inc
lret
xchg
adc
mov
jmp
js
sbb
mov
popl
xchg
or
mov
push
cmp
push
and
sub
mov
mov
or
and
add
cmp
int
push
jle
xchg
pushf
xor
mov
or
and
in
lock
sahf
test
out
mov
jns
adc
sub
mov
xor
loope
test
movsl
outsb
push
xchg
movsb
arpl
cli
cli
mov
outsl
cmp
cltd
mov
push
pop
add
jne
sbb
aaa
ret
mov
gs
mov
jmp
outsb
pop
xor
hlt
pop
insl
push
xchg
dec
lock
cmc
dec
dec
jmp
push
jle
mov
dec
fldl
adc
scas
lea
les
or
cs
or
pop
jmp
in
pushf
popf
imull
outsb
iret
cmp
fwait
lahf
enter
pop
jp
inc
insb
rorb
sbb
movb
ror
cmp
cmp
push
xchg
outsb
sbb
push
ss
jns
adc
and
aas
enter
repnz
test
push
pushf
mov
jbe
push
mov
pop
rep
pop
inc
pop
shl
inc
or
pop
subl
sub
das
push
cmp
mov
and
push
lahf
arpl
sbb
icebp
loope
pop
loope
mov
loop
lea
enter
push
jge
cli
cmp
inc
fsubl
mov
js
in
cwtl
mov
cmpsb
scas
dec
push
mov
inc
in
fldt
das
inc
cmp
add
movsl
out
out
insb
in
rorb
inc
push
jae
int3
adc
test
dec
imul
mov
fsubrl
xchg
push
cltd
dec
xor
mov
repnz
or
ja
mov
out
xchg
mov
push
cmp
int3
mov
pushf
addr16
mov
jo
mov
jnp
mov
leave
inc
and
out
call
pop
shll
add
int
adc
push
ja
aaa
cmp
pop
inc
inc
or
jbe
dec
dec
jae
lock
test
out
mov
add
in
rcll
lods
ds
push
mov
or
stos
aad
loop
xchg
repz
in
mov
jnp
pop
adc
dec
into
pop
adc
cmpsb
jmp
inc
push
fidivrs
cmc
xchg
aaa
push
popa
sbb
sbb
cmp
dec
and
dec
and
sub
sub
mov
pushf
test
enter
xchg
xor
mov
mov
lods
xchg
pop
sbb
xor
pop
lret
or
aam
mov
sub
jg
xor
push
outsl
jp
or
xchg
pop
lods
aaa
push
scas
aad
andb
jmp
movsl
out
lret
adc
cmp
fsubrp
scas
cltd
and
cmpsl
repnz
cmp
sub
insb
dec
jns
scas
imul
mov
punpckldq
sbb
xor
std
data16
movsb
pop
push
mov
xchg
add
push
xor
sub
cmp
jne
sub
test
mov
mov
outsb
out
cmp
pop
adc
add
dec
in
push
daa
mov
mov
inc
shrl
jl
incb
scas
shrb
adc
push
ret
cmpsl
mov
in
mov
lcall
dec
push
or
mov
imul
ret
shlw
test
mov
cmpsl
pop
fsubrp
jl
hlt
cli
sub
in
push
adc
fs
ds
and
je
pop
xchg
fisubrl
push
repz
dec
xchg
faddp
ljmp
pop
lahf
decb
imul
fidivl
rol
cld
push
aad
in
lds
mov
adc
xchg
test
insl
or
aas
mov
aas
push
sbb
push
and
push
pop
stc
mov
ss
sti
sub
ljmp
and
push
fisubrl
movsb
loopne
xchg
add
or
lock
mov
mov
loope
outsb
mov
add
jo
jmp
ja
xchg
popf
sbb
test
lds
pop
inc
out
push
test
push
repz
xor
mov
jb
xchg
lods
dec
adc
or
divb
push
jmp
xor
lods
rcll
jne
arpl
xchg
dec
mov
loopne
int
cmp
pusha
jno
outsl
cmc
loopne
jp
xor
sbb
movb
xchg
inc
xchg
pop
push
push
push
fstl
rorl
pusha
mov
adc
pop
scas
or
jmp
mov
std
cld
icebp
xchg
xchg
add
fdivrs
jle
imul
push
lock
mov
mov
xchg
cmc
xor
or
ret
or
xor
nop
std
sub
pusha
jmp
mov
mov
rolb
fsts
cs
out
sbb
or
scas
xchg
dec
into
aaa
stos
das
mov
xlat
les
adc
inc
repz
in
jo
mov
ss
add
jp
addl
fs
add
mov
shlb
jge
xor
imul
sbb
mov
mov
loopne
xor
movsl
mov
nop
or
jno
dec
orl
inc
cmp
fldcw
add
dec
or
sbb
data16
fisubrs
jns
test
rcrb
push
mov
dec
arpl
xor
mov
lock
mov
push
cmp
push
or
xor
jb
in
mov
stos
cmpsl
mov
lds
push
fsubs
rcrb
xchg
inc
dec
fcoml
jbe
sub
dec
loopne
push
xor
std
aas
pop
inc
scas
jl
test
push
shlb
scas
fistl
sbb
lcall
xor
je
decl
fdivrs
add
out
xor
jecxz
jg
mov
push
daa
cmpsb
xor
adc
inc
inc
dec
hlt
inc
cmpsl
imul
es
cmp
test
inc
mov
sbb
push
mov
in
adcb
mov
sti
sub
mov
call
pop
out
cmp
xchg
adc
sbb
and
ss
in
addb
aas
mov
fsts
sbb
fimull
add
mov
sbb
hlt
adc
pop
testb
jp
xchg
cmp
jmp
pop
in
fsubp
dec
rcrb
jle
pop
jge
jle
xor
rcrl
lds
dec
into
and
aaa
loopne
dec
add
mov
push
add
sti
pop
movsl
jge
or
jg
lahf
mov
adc
cmp
adc
dec
and
jae
in
pop
add
test
insl
repz
pop
mov
cmp
jae
shrb
push
jno
mov
and
jbe
xor
loop
lret
xchg
mov
rcll
popl
scas
mov
pushf
popf
lret
xor
ret
sub
jl
push
jb
fstp
daa
pop
ss
push
push
push
push
add
pop
xchg
out
movsl
inc
jmp
inc
ss
inc
cmp
cmp
dec
lock
fsubl
lods
xchg
aas
ret
mov
inc
js
mov
adc
rcrl
dec
adc
lea
sub
and
add
sti
js
lods
mov
mov
testb
aas
dec
pushf
xor
mov
adc
mov
xor
notl
sbb
cmp
mov
stos
dec
pop
mov
pop
cld
push
ljmp
sbb
add
cmpsl
fimuls
dec
push
cmpsb
fimull
clc
dec
addr16
lods
aam
inc
int
sub
insl
xor
xchg
clc
bound
movsb
shll
and
cmp
cmp
xor
sbb
xchg
lcall
out
insb
fmuls
hlt
xor
xchg
fildl
daa
mov
lds
movsb
lods
or
add
sub
dec
adc
mov
push
ljmp
jne
adc
dec
dec
xor
mov
jo
mov
repz
fcoms
sbb
add
or
sbb
push
jp
roll
call
addl
aaa
xchg
clc
cwtl
inc
rorb
out
scas
insb
enter
dec
xlat
push
popa
mov
push
lret
fs
pop
jp
int3
repz
jns
sub
rcr
shr
les
das
mov
cmpsb
push
mov
or
xor
repnz
push
aad
rorl
iret
xchg
push
jecxz
xor
aaa
movsb
push
fnsave
or
clc
movsb
dec
adc
aaa
mov
pop
dec
lret
mov
adc
fmuls
sub
jne
leave
imul
ret
adc
ljmp
sbb
movsl
out
cmp
xor
test
daa
sub
pop
cwtl
push
mov
neg
adc
inc
jge
loope
sarl
or
mov
pop
mov
xor
lahf
add
insl
xchg
fmulp
push
pushl
in
cmp
setne
push
or
and
adc
jbe
insb
mov
fs
movsb
jp
cmp
insb
jmp
add
or
arpl
push
inc
push
loopne
shrb
cli
mov
push
das
lock
pusha
outsb
xor
add
test
xchg
and
adc
xor
xchg
js
pop
xchg
xchg
add
ds
jp
sbb
stos
lcall
or
add
ret
xor
in
aaa
imulb
leave
push
adc
movsb
xor
mov
hlt
or
out
xchg
test
aam
mov
xchg
mov
inc
lods
xorl
pop
mov
jp
cmp
popa
push
adc
sub
fsubrp
lcall
out
rolb
and
ficompl
adc
cmp
dec
fucom
bound
or
xchg
aad
test
dec
mov
lods
lock
cltd
or
sub
cltd
pop
xchg
inc
mov
popf
test
outsb
out
cmpsb
sar
fimull
fsubl
sub
adcb
mov
pop
mov
or
pop
or
sbb
std
into
sub
add
mov
mov
inc
push
jmp
dec
int3
sarb
xchg
movsb
cmpl
add
sbb
nop
sub
xchg
notb
mov
or
mov
out
ss
inc
fidivl
dec
sbb
stos
sbb
mov
sbb
jnp
and
addr16
cld
jo
outsl
imul
or
adc
sbb
js
loopne
xchg
enter
adc
dec
xchg
mov
adc
es
cwtl
push
xchg
mov
dec
jge
push
sub
xor
add
in
fcomp
push
adc
push
test
ror
idivb
dec
sbb
push
in
loop
mov
sbb
rcr
push
adc
adc
and
lea
xchg
xchg
mov
mov
imul
add
test
fmuls
add
orb
ja
ret
rcll
jg
pop
adc
dec
ljmp
jae
dec
sub
push
mulb
mov
dec
pop
pop
shl
adc
cwtl
sbb
push
sbb
sbb
pop
shl
mov
daa
iret
cmpsl
add
mov
adc
aaa
pop
push
xor
cli
aaa
push
jg
fnstcw
cld
sahf
arpl
outsb
sbb
cmp
pop
in
sub
in
in
and
lods
insb
xchg
xor
fisttpll
mov
mov
cli
pop
mov
xchg
cltd
mov
xchg
out
pop
lea
push
repnz
fldenv
mov
inc
rorl
xchg
mov
add
adc
fmuls
jp
cmpsl
insb
pop
stos
test
or
lods
push
ficomps
pop
sub
xchg
sbb
mov
push
aam
orl
cmp
push
inc
outsl
ljmp
pop
out
mov
std
dec
push
call
addb
inc
scas
movsb
leave
mov
shl
pop
lcall
inc
fs
fildll
sarl
stos
loope
outsl
xor
daa
or
cmc
mov
in
cmp
jbe
jnp
jle
mov
pusha
adc
lods
sahf
push
sub
les
xor
leave
adc
shll
mov
mov
sbb
pop
lods
push
add
sbb
rcrl
negb
mov
ds
sbb
add
fucom
xchg
jle
ret
enter
hlt
rolb
xor
rcr
jo
mov
jmp
repnz
mov
aas
mov
call
adc
push
and
fstpl
pop
mov
push
aad
inc
cmp
jb
mov
int3
std
push
psrad
icebp
mov
pop
mov
mov
cmp
sbb
xchg
or
fbld
jae
in
sub
dec
jge
pop
mov
mov
pop
cs
sbbl
xchg
push
hlt
lcall
daa
mov
pop
push
leave
cs
test
push
dec
rorl
cmpb
fbstp
cmp
sub
sti
and
ds
shl
and
or
seto
mov
lea
mov
inc
test
shr
stos
pop
sbb
roll
dec
adc
fs
push
push
mov
andb
test
orb
and
loope
hlt
test
sti
fsubs
pop
rcrl
jno
dec
push
pop
rorl
sbb
in
arpl
jbe
cmp
shrb
push
jecxz
leave
lret
mov
sub
cli
dec
gs
pop
mov
cmpsb
or
push
test
pop
sahf
out
push
xlat
lahf
xchg
inc
mov
mov
xor
jecxz
fadds
mov
popf
push
sbb
push
mov
xchg
mov
popa
lods
das
sar
fwait
dec
pop
sub
pop
sub
jp
mov
sub
cmpsb
mov
push
jmp
push
stos
repnz
jmp
test
mov
rcr
outsl
pushf
popa
pop
test
mov
jecxz
aam
dec
pop
push
lret
mov
jl
or
nop
cmp
out
add
aad
sbb
cmp
cmp
jl
mov
push
xchg
addr16
sbb
or
push
or
les
push
push
lahf
mov
push
outsb
mov
ds
cld
xor
ds
push
aaa
rorl
loopne
sbb
or
stc
sub
iret
inc
fldt
mov
push
mov
fwait
jns
mov
jle
push
cmp
push
or
daa
cmp
imul
inc
out
mov
pop
sbb
outsb
sahf
pop
mov
adc
cwtl
cmp
cld
mov
in
insb
sbb
xchg
sbb
cmp
mov
enter
xlat
cmpsb
test
push
fmull
add
push
jmp
push
push
lret
dec
and
jno
testl
lods
xchg
ret
dec
ss
outsb
mov
dec
jbe
dec
or
mov
push
xchg
inc
fisttpl
xor
fildll
daa
enter
data16
sbb
adc
sbb
fs
dec
or
jb
push
inc
fcoms
arpl
outsl
notl
sub
das
pop
scas
mov
inc
cltd
mov
les
and
imul
adc
stos
add
push
dec
cltd
daa
pop
shl
lcall
cmpsb
movsl
mov
or
sbb
pop
cmp
mov
fsubrs
out
repz
xchg
cmc
test
cmp
jno
mov
stos
in
test
mov
jle
fdivl
popl
and
ds
push
test
scas
pusha
push
ss
dec
sbb
sahf
and
addr16
fisttpll
stos
sub
xchg
jl,pt
shrb
in
cltd
mov
outsb
sub
aaa
sbb
xchg
xchg
adc
jo
xor
outsl
xchg
pop
mov
fistps
inc
xchg
xchg
sub
out
push
loop
sub
pop
addr16
sbb
imull
mov
push
sbb
mov
in
push
divb
lock
jle
imul
insl
sub
insl
divl
vucomisd
push
or
pop
xlat
inc
out
test
xchg
test
xor
push
sbb
xor
incb
enter
shr
jle
lods
mov
mov
scas
les
mov
sub
cmp
jns
lret
push
push
cwtl
cmp
dec
daa
int
shr
fsubl
or
mov
inc
mov
and
stc
mov
jl
fldl
imul
sti
mov
dec
mov
adc
testl
jns
stos
mov
fists
jmp
xchg
ret
aam
cmp
or
add
pop
pop
shl
push
pop
scas
adc
cltd
jl
xor
and
mov
loop
scas
lock
aas
or
mov
xor
outsb
add
mov
push
or
sbb
pop
or
cmpsb
fdiv
mov
cli
scas
lcall
cmp
sub
test
mov
sti
dec
lahf
mov
cmp
jb
outsl
std
mov
fmul
jp
xor
stos
sbb
sar
jno
push
push
mov
pop
sti
into
jno
push
adcl
lahf
or
loopne
insb
xchg
push
mov
ret
cwtl
movsb
stos
aaa
dec
mov
cmc
cmp
cmp
mov
push
lret
mov
lcall
mov
gs
xchg
lcall
cmp
test
jmp
dec
sub
pusha
fwait
cwtl
lods
fcmovnbe
sub
or
jnp
mov
pop
mov
dec
sbb
push
mov
mov
jno
cltd
mov
das
dec
sub
aas
scas
cmpsb
mov
xor
cmp
push
sbb
inc
in
xchg
stc
subb
movsb
adc
mov
jbe
pushf
cltd
jno
jg
inc
sub
mov
cmpsb
mov
mov
sub
stc
inc
add
push
icebp
adc
int
cmpsl
cltd
and
inc
in
je
int3
ret
out
and
inc
sbb
inc
dec
xchg
std
sbb
adc
out
push
xor
dec
js
lods
es
sbb
xor
add
outsb
fmulp
fsubr
lcall
pop
cmp
inc
ja
subb
mov
arpl
iret
into
es
xor
sub
repnz
push
cmp
nop
fidivs
dec
shlb
push
movq
insl
xchg
imul
punpckhdq
inc
pop
jmp
cltd
daa
lret
insb
mov
dec
jecxz
shll
into
lods
mov
arpl
in
les
cmp
popa
jns
push
std
mov
adc
gs
add
push
inc
roll
jno
or
das
push
addr16
add
shrb
cmpsl
add
iret
adc
xchg
shrl
lret
lret
inc
aam
js
aam
xor
in
push
pop
lds
inc
pop
push
mov
cmp
mov
mov
xchg
inc
movb
incb
aas
fnstcw
es
orb
insl
lods
jle
pop
nop
adc
mov
mov
aad
mov
or
ljmp
push
in
pop
inc
shl
out
push
xchg
mov
and
and
stc
enter
and
jg
pop
pushf
aad
push
rorb
test
lahf
dec
xor
add
mov
lret
jo
stos
sarl
bound
xchg
inc
mov
pop
arpl
mov
sbb
adc
pop
sbb
pop
add
jge
sbb
daa
push
adc
clc
rcrb
repnz
jne
inc
inc
dec
inc
cmp
movsb
jns
cmp
into
nop
mul
push
jg
fidivrs
xchg
push
pop
push
cmp
jbe
and
sub
mov
in
fwait
lahf
cmp
out
mov
shll
xchg
in
pop
popf
out
inc
fisubrs
outsl
pop
cmc
add
xchg
loopne
add
xor
out
push
jle
sub
ret
insb
mov
jle
cmp
and
sbb
sahf
int3
cmp
xor
data16
lea
sar
stos
icebp
push
lret
inc
xchg
popf
and
sbb
mov
xchg
push
inc
aam
pop
jge
loope
std
in
scas
mov
dec
test
push
cmp
inc
aaa
shll
cmc
push
shl
addl
fcmovnb
jge
jo
cmpsl
sbb
push
jo
cs
sub
adc
imul
or
enter
movsl
push
fildll
xor
or
scas
inc
jle
jne
xchg
mov
cmp
cmc
ss
test
add
dec
xchg
testb
dec
or
popf
int3
mov
aaa
test
fs
imul
in
das
jp
jle
fimuls
hlt
inc
stc
push
dec
scas
sbb
inc
je
xlat
pop
add
mov
mov
cld
jecxz
loop
and
imul
xor
ds
and
rolb
cmc
bsr
dec
mov
mov
sahf
roll
adc
jbe
mov
xchg
jbe
popf
jg
es
sub
fbld
jge
jnp
mov
mov
dec
gs
fmull
xchg
or
mov
aam
add
inc
push
pop
outsb
mov
push
pop
pop
push
xchg
stos
cbtw
leave
inc
sub
sbb
clc
mov
push
into
lods
out
lds
ljmp
jb
sar
push
mov
pop
imull
or
xchg
iret
add
add
xor
push
scas
loope
mov
dec
add
sub
data16
lcall
repz
mov
push
ret
or
out
lods
insl
daa
mov
adc
push
xlat
cmp
xchg
cld
fnstenv
mov
dec
stc
stc
pop
shll
add
leave
mov
cmp
outsl
imul
push
aas
sahf
pop
and
jge
xor
andl
mov
sbbl
add
jns
call
mov
movsl
addl
fsubrs
xchg
sub
in
and
out
rorb
mov
ficompl
xor
test
stos
popa
loopne
dec
adc
mov
shl
or
repz
dec
or
or
inc
fistpll
pusha
sub
cmp
fisubrl
push
mov
and
dec
mov
arpl
rolb
inc
cmp
std
and
das
jb
mov
mov
ret
call
dec
aas
icebp
loopne,pn
pop
push
pop
test
clc
addl
jmp
adc
push
enter
push
test
addl
jl
push
mov
negl
xchg
sbb
out
fsubs
xor
loop
gs
adc
fsubr
insb
jp
fadds
insb
push
xchg
sbb
jg
movsl
mov
sub
dec
rcrb
sbb
lret
pop
rcrl
xor
pop
adc
sub
jp
aam
shl
push
loop
cld
fmuls
jmp
mov
rorl
mov
sti
add
scas
jo
and
mov
insl
pop
jmp
aas
ficoms
mov
int3
or
mov
adc
shlb
jo
cmpsb
and
in
popf
ja
pushf
jmp
push
test
subb
ficomps
shll
cmp
fdiv
arpl
xor
pusha
fisubs
adc
xchg
insl
cmp
popl
sub
xor
aaa
loope
push
pop
fwait
xchg
cli
mov
dec
cmp
push
dec
ds
inc
fnsave
andb
pushf
pop
daa
cmp
les
rcrb
adc
xchg
out
ficompl
mov
inc
into
bound
lods
push
scas
clc
mov
jl
inc
movsl
adc
mov
lret
mov
jl
je
push
jnp
hlt
mov
cltd
lods
push
fldcw
mov
mov
out
sub
shlb
xchg
sbb
sahf
test
daa
lahf
loop
out
jo
xchg
dec
out
add
mov
mov
bnd
clc
adc
icebp
stos
push
jle
xlat
push
inc
xchg
xor
dec
repnz
sub
loop
pushf
sub
xchg
mov
ret
shl
loope
jmp
inc
cs
xor
pushf
xor
addr16
or
push
popa
dec
repnz
imul
pop
adc
xor
sub
nop
shlb
das
in
pusha
adc
push
cmpsl
fs
cwtl
loopne
aas
mov
cs
inc
sub
ja
ja
mov
repz
sbb
vprotq
test
idivl
xchg
push
je
sahf
fmuls
lds
fs
rcrb
fsts
mov
mov
out
push
sbbb
mov
or
data16
repnz
jmp
js
jmp
repz
push
lret
and
xchg
lahf
stos
push
mov
dec
mov
out
and
decb
sbb
imul
sub
mov
inc
lea
std
sbb
sti
adc
or
fbld
ret
jae
adcl
loopne
jp
mov
pop
push
in
mov
dec
push
mov
cwtl
dec
imul
fsub
inc
popf
xchg
cmpb
sub
inc
bound
pushf
and
push
inc
outsb
mov
sbb
test
cli
mov
orb
pop
push
sub
cmpsb
cltd
jl
dec
es
icebp
push
jne
push
adc
push
outsl
mov
push
mov
pop
int
lahf
hlt
arpl
adc
xchg
in
adc
out
fdivl
test
and
arpl
insl
xor
in
in
pop
sub
mov
pop
gs
xchg
aaa
dec
push
push
xor
sahf
aaa
push
std
pop
leave
inc
lcall
arpl
sub
dec
push
insl
insl
or
mov
mov
fimuls
add
imul
into
leave
cld
sahf
lahf
sub
push
outsl
testl
sbb
push
xchg
inc
ret
les
mov
adc
mov
xor
push
jg
cmp
ret
and
sti
xchg
lcall
jp
and
sub
leave
insl
mov
mov
fstps
call
xchg
test
pop
daa
fwait
pop
xor
inc
jae
in
pop
inc
out
rcll
mov
clc
insb
in
add
test
sub
jne
outsl
ds
or
pushf
jmp
pop
adc
mov
push
repnz
dec
movsb
inc
fiadds
xor
pop
push
cmp
adc
mov
fsts
shll
imul
ja
sahf
dec
pop
js
jae
inc
inc
inc
mov
jb
add
adc
push
mov
stc
dec
jl
mov
es
and
mov
mov
adc
xor
addr16
sub
outsl
mov
clc
push
jo
cmp
fbld
xchg
and
je
xchg
cmp
push
lds
jp
cltd
leave
or
in
fs
jno
outsb
push
xchg
mov
sbb
sbb
inc
jl
fildll
ss
jbe
test
std
and
and
jo
aam
test
outsl
pop
xchg
sub
jl
mov
mov
movsb
pop
xchg
jbe
mov
adc
data16
push
mov
lret
cltd
aaa
addr16
ljmp
push
test
xor
adc
xor
icebp
push
push
or
mov
mov
cld
push
jge
xchg
pop
fs
xchg
inc
adc
adcl
test
pop
xor
div
inc
dec
dec
sub
sbb
repz
jo
lret
aam
or
aas
cmc
jne
cmp
dec
aad
mov
popf
or
cmpl
add
sub
xlat
and
andl
and
cltd
mov
lods
cltd
push
lahf
cmp
test
mov
orb
into
leave
mov
sbb
fisubrl
jp
aaa
ds
flds
mov
pushf
call
aaa
xchg
cltd
in
incl
mov
fistl
xor
pop
mov
mov
sbb
mov
cmp
repnz
jns
mov
call
inc
pop
mov
daa
mov
pop
cmp
sub
cmc
adc
loopne
repz
xchg
dec
mov
int3
pushf
push
lock
repnz
in
mov
inc
fisttps
subl
xchg
add
nop
idivl
loope
add
das
repz
or
ret
adc
mov
sub
dec
or
add
cli
aaa
les
cmpsb
sbb
fdiv
cmp
push
decb
jg
adc
push
inc
stos
cli
cmp
pushf
and
and
push
cmpsb
aaa
int
lds
mov
mov
out
mov
cwtl
mov
jle
sahf
out
test
cmp
dec
stos
lahf
aam
jb
lock
sub
inc
dec
or
jo
pop
inc
mov
in
xchg
stos
sbb
loope
add
movlps
push
sahf
cld
jb
into
clc
bound
mov
ss
mov
mov
pop
gs
xchg
iret
pop
fcmovnbe
les
mov
push
outsb
arpl
mov
sbb
loop
push
pop
in
stos
jle
mov
rclb
aas
out
ds
jmp
push
dec
popf
xor
ret
or
fadds
push
cmp
dec
jge
ret
arpl
fcoml
dec
call
mov
mov
test
sub
xor
out
hlt
adcl
mov
loop
je
js
sahf
add
fcmovbe
inc
add
cmp
dec
arpl
push
aas
hlt
lods
imul
fisubl
push
sub
xor
scas
loop
xor
xchg
pushf
sub
hlt
push
jnp
test
jnp
adc
pop
mov
adc
pop
add
inc
mov
and
fdivrl
jmp
mov
jae
jae
jecxz
ljmp
inc
xor
clc
push
cmpsb
mov
inc
leave
test
mov
das
mov
xchg
add
out
push
imul
repz
fsubrl
jecxz
or
adc
scas
ret
aam
std
rorb
rorl
jle
sub
pop
cld
in
out
jmp
andb
jbe
std
jmp
sahf
xchg
mov
out
aad
shrb
inc
into
jge
ljmp
das
or
dec
pop
out
xbegin
jnp
addr16
dec
sbb
sbb
aam
outsl
scas
pop
sbb
arpl
rcr
sahf
leave
mov
cmp
xor
sbb
pop
fstps
mov
xchg
sub
dec
adc
or
push
pusha
jns
ds
mov
lret
lea
std
pop
jno
sbb
mov
inc
mov
loop
mov
sbb
jp
dec
mov
fs
ror
push
mov
int
idivl
fst
ljmp
ss
xchg
mov
fcomps
scas
mull
pop
mov
push
mov
fdivrs
xchg
jb
inc
out
mov
repnz
or
ret
dec
or
icebp
jno
pop
jl
add
clc
bound
daa
add
ret
or
sub
nop
mov
nop
outsb
adc
insb
sahf
iret
leave
outsl
xchg
pop
jae
xor
and
mov
pop
jns
adcb
xchg
ss
addl
xor
pop
daa
stos
sbb
push
ljmp
jmp
add
test
loopne
cwtl
push
test
cmp
nop
mov
mov
mov
hlt
out
cwtl
inc
jb
or
push
lcall
pop
and
fadds
popa
pop
xor
push
dec
jb
lods
test
shrb
popf
test
push
out
dec
dec
sahf
arpl
scas
mov
nop
dec
jmp
ret
or
mov
dec
inc
push
arpl
dec
xchg
sub
push
mov
adc
stos
xchg
inc
xlat
inc
andb
xor
push
in
dec
repz
shrb
jl
lods
lods
or
cmpsb
insb
aaa
push
popf
rcll
push
jge
mov
push
sub
icebp
sbb
jle
or
mov
shrb
pushf
daa
mov
movsl
shrl
rol
ja
mov
cs
mov
sbbl
pop
xchg
mov
cmp
xchg
cmp
aaa
popf
jmp
push
inc
mov
lcall
pop
mov
mov
rcr
lods
sbb
subl
out
push
jnp
mov
push
pop
jg
xor
dec
xchg
int3
xchg
lods
mov
sbb
sub
push
dec
pop
adc
jne
mov
aas
ja
movsl
dec
and
adc
lock
inc
add
xchg
push
sbbb
push
push
nop
or
scas
xor
scas
in
ss
mov
mov
cmpl
jo
insl
lea
mov
jmp
arpl
adc
imul
sahf
pop
rorl
aas
icebp
mov
out
inc
pushf
sub
xor
sub
mov
clc
mov
repz
sbb
test
mov
lea
push
loopne
repz
pop
insb
lret
mov
pop
leave
adc
jb
test
inc
loopne
jns
mov
int3
mov
jmp
cli
xchg
push
mov
push
ljmp
mul
subb
mov
jle
pushf
fsubp
adc
mov
jb
jnp
roll
sbb
icebp
test
int
mov
lea
add
inc
xor
movl
pop
mov
mov
adc
aas
cmpsl
mov
mov
sti
stos
and
sbb
movsb
mov
stos
jns
movsb
mov
ja
cli
add
sub
int3
scas
pop
add
pxor
dec
inc
cld
cs
out
std
xor
cwtl
test
xchg
mov
addr16
movsl
push
jmp
mov
jo
push
xchg
xor
or
mov
push
xchg
out
fcompl
sub
cmp
rcl
les
jb
add
sar
or
lcall
insb
popa
inc
icebp
mov
sub
push
in
mov
add
ret
adc
adc
aam
sub
add
push
xlat
fimull
push
mov
xor
js
incb
jb
arpl
insb
pop
mov
lret
flds
pop
shrl
lds
adc
int3
test
data16
push
outsb
dec
or
iret
jp
lret
test
enter
add
cwtl
pop
mov
in
sub
arpl
shlb
into
sub
cmp
xchg
xor
movsb
outsb
addr16
xor
jg
ljmp
dec
ret
incl
sub
dec
in
ss
gs
scas
dec
push
out
push
mov
pop
xchg
andps
rolb
xchg
je
fcomi
mov
push
mov
std
jae
insb
cld
xchg
cmp
mov
mov
or
sahf
dec
repnz
inc
add
or
and
mov
mov
arpl
push
gs
inc
xchg
dec
xchg
out
inc
stc
notl
int3
mov
rcr
jge
dec
lock
or
imul
lret
ret
or
push
inc
enter
add
decl
into
jmp
scas
mov
pop
imul
divl
xchg
lret
popf
adc
push
aaa
jp,pt
cli
imul
and
orl
pop
gs
push
pusha
test
jno
icebp
cmp
xor
cwtl
lods
loopne
nop
ficompl
add
cmp
xchg
adc
jmp
lret
mov
ret
testb
sbb
push
dec
xchg
mov
cmp
hlt
rcrl
in
jl
dec
adc
adc
divl
push
xor
push
cmpsl
lds
sub
mov
in
lret
xor
inc
cmp
mov
loope
in
dec
push
jns
inc
shrl
outsb
aaa
or
push
iret
stos
mov
jns
dec
lret
mov
outsl
inc
mov
pop
dec
adc
jne
mov
xor
dec
shlb
xchg
and
inc
gs
push
push
lret
std
mov
inc
mov
inc
cmpl
stos
movsb
test
scas
jae,pt
or
movsl
scas
sub
mov
and
popf
mov
mov
in
sbb
pusha
and
xchg
push
dec
jae
aaa
imul
mov
push
popf
add
cmpsl
shrb
sub
adc
fildl
adc
call
jmp
bound
ror
fldt
cmp
xchg
jns
or
inc
dec
jge
aaa
dec
mov
gs
xor
mov
dec
je
cmp
or
jo
xchg
inc
push
mov
fistpll
mov
adc
adc
jns
sub
mov
ret
xchg
cld
ja
outsl
pop
fcomip
pushf
jp
push
and
scas
lret
icebp
sub
hlt
ja
lock
push
test
idivb
mov
sbb
xor
into
xchg
jne
pop
in
xlat
rorl
mov
jnp
add
pop
lret
cmp
aas
aam
xor
jne
or
sarb
negl
mov
and
mov
cmp
aaa
push
fwait
outsb
mov
shll
pop
and
mov
pop
jne
dec
push
int
jo
jmp
enter
xor
mov
jl
xor
cwtl
out
hlt
cmp
xchg
outsl
sub
int
dec
jl
in
js
xor
cmp
inc
dec
add
stos
xor
mov
pop
jae
jns
push
lods
and
xchg
out
stos
rclb
inc
mov
adc
daa
lods
xchg
sub
ret
push
xchg
movsl
inc
pop
cs
add
cmp
cmp
push
repz
lods
push
xchg
or
int3
jb
sbb
and
mov
push
adc
adc
inc
das
mov
stc
repz
cmp
dec
pop
jae
adc
adc
sbb
sub
int3
xchg
pop
ds
loop
xchg
fldcw
in
dec
push
jns
sti
xlat
pop
leave
sub
pop
movsl
jmp
lcall
sarb
jno
or
adc
mov
pop
or
cwtl
in
cmp
mov
lret
xor
sbb
jge
sti
ja
leave
mov
stc
and
jae
inc
loop
and
mov
inc
aam
punpcklwd
jge
popa
adc
sub
pop
int3
in
jnp
mov
movsl
fst
lret
push
push
xor
or
and
test
bound
push
and
fldt
idiv
xor
jle
mov
daa
aas
push
lods
xor
xchg
add
mov
xchg
leave
or
xchg
shlb
lret
addl
ja
dec
adc
jl
fwait
dec
hlt
jle
das
int
je
fistps
popa
out
adc
jae
pop
fiaddl
sahf
xor
and
cld
test
scas
ret
jp
inc
xchg
mov
adc
mov
imul
enter
les
movsb
cwtl
dec
jnp
inc
push
int
xchg
imull
add
xlat
cmp
add
lahf
cmp
add
shl
lods
xor
imull
fsts
test
test
fisubs
jb
or
mov
mov
xchg
dec
vrcpss
push
pop
cltd
jno
jnp
mov
mov
push
in
pusha
movsl
cmpsl
cmpsl
adc
test
lret
dec
incb
xor
mov
bound
or
popa
xchg
adc
shrl
adc
jge
pop
popa
add
jne
adc
jmp
pop
cmp
push
nop
mov
adc
dec
stos
fwait
sbb
inc
push
shlb
cwtl
mov
mov
cld
xchg
rorl
xchg
enter
xor
sbb
xor
in
add
mov
notl
sub
je
je
sub
in
insl
jne
jb
xor
int3
nop
pop
scas
shr
jmp
ljmp
mov
mov
aad
test
and
sub
mov
mov
pop
xchg
mov
mov
popa
dec
inc
push
mov
cltd
outsl
loope
pop
push
insl
cs
xor
imul
into
mov
sub
or
aam
movsl
mov
repz
testl
push
in
sbb
jbe
pop
jb
aaa
push
or
js
or
jb
mov
push
negl
or
push
pop
call
adc
in
pop
add
lods
mov
ds
fcomps
sub
inc
out
leave
cmpsb
mov
mov
jae
add
cwtl
fsubl
subb
sub
jne
jl
or
aam
pop
adc
into
pop
fstl
adc
shll
sub
sahf
ror
daa
or
add
push
xor
dec
pop
mov
rolb
mov
jp
cmc
inc
std
aad
inc
insl
push
and
rcrb
scas
push
stos
mov
add
adc
bound
xchg
pop
inc
mov
mov
lock
mov
jmp
and
fdivrl
mov
jnp
ja
jo
es
mov
fisttpl
mov
cmp
loop
lea
mov
jne
jbe
inc
xchg
aad
inc
ret
push
push
add
sbb
jmp
lods
daa
push
fidivs
or
or
jmp
pop
xor
and
xor
push
hlt
insl
mov
addr16
sbb
stos
ret
push
repz
shrl
fisubrs
mov
cmp
push
and
icebp
jbe
xchg
mov
add
push
push
cmp
aas
xchg
sti
mov
jne
cmp
push
into
js
and
rorb
push
aaa
fbstp
fs
add
test
popa
push
pop
popa
shlb
aam
aam
dec
push
divl
je
cmp
adc
mov
pop
shrl
add
cmp
pushf
scas
repnz
dec
add
jae
icebp
rcr
arpl
stc
cmp
jl
dec
sub
movsl
mov
loop
xor
adc
ret
cmp
int
mov
xchg
cltd
imul
mov
stos
shrb
rcrb
push
mov
and
fs
adc
or
mov
dec
xchg
test
xlat
fildll
push
popf
bound
jnp
pop
jmp
cmpl
pushf
xchg
cmc
imul
imul
xchg
hlt
inc
test
addl
test
pop
cmp
and
test
repz
jmp
inc
add
es
rorl
sbb
fimuls
enter
cld
bound
lcall
pop
sub
and
test
js
push
jns
jae
dec
pop
adc
lahf
popa
imul
in
jbe
bound
and
adc
push
sbb
mov
mov
je
push
xchg
sahf
insb
aam
push
arpl
mov
sub
fwait
cmp
fiaddl
pop
xor
jae
shrb
and
jo,pt
repnz
bound
or
mov
idivb
lods
sahf
fistps
rcrl
movsb
jmp
cmpsb
fsubs
add
jmp
adc
xor
outsl
stos
jno
sbb
hlt
insl
dec
jns
negb
pop
pop
sarb
xchg
je
mov
lea
adc
inc
sti
gs
popa
in
push
rorb
push
sbb
or
sub
xor
mov
inc
stos
mov
pop
repnz
leave
popf
lock
popa
sar
jno
cmpl
xchg
adc
cmp
ret
sub
rcrb
das
mov
insl
movsl
xor
fistps
fmuls
shlb
xchg
sbb
imul
int
or
jno
mov
arpl
lods
jge
inc
xorl
lock
arpl
pop
shrl
mov
fldt
cmp
out
xlat
inc
jmp
movsl
mov
test
ljmp
xchg
sbb
sub
mov
mov
pop
lods
fstpt
adc
cli
fst
mov
pop
cmp
inc
lock
into
jmp
ror
pusha
aaa
pop
mov
xchg
pop
rcr
dec
push
sub
pop
xor
add
or
sbbb
fucomip
adc
pushf
jp
in
mov
gs
pusha
adc
gs
push
lods
xchg
pop
push
push
cmp
mov
imul
sbb
mov
add
push
ljmp
daa
cmp
fstl
push
fistpll
ds
sar
sar
jmp
or
or
inc
loope
aaa
mov
mov
sahf
scas
jg
mov
arpl
loop
andl
fldl
fs
jp
xchg
xchg
cltd
xor
pop
xchg
lcall
mov
or
pushf
dec
add
jmp
andb
cli
rolb
into
out
nop
and
sbb
xchg
nop
jae
jno
mov
or
loope
pop
mov
stc
bound
mov
dec
cmpsb
mov
jmp
ljmp
push
and
shll
xor
or
loope
push
sti
in
out
pop
pushf
fs
iret
sbb
sub
lods
in
shll
xchg
out
and
mov
pop
loop
mov
jbe
iret
pop
ljmp
popa
sbb
add
and
add
test
fptan
loop
push
pop
subb
ret
movsb
scas
jge
xchg
xchg
fnstcw
imul
shlb
cltd
ljmp
aam
je
mov
mov
cmp
jp
xorb
ret
inc
push
xchg
loopne
xor
out
hlt
addr16
clc
frstor
sub
or
mov
imul
outsb
cmp
push
aaa
sub
int3
pop
cltd
pop
jp
mov
mov
sub
ds
lahf
push
dec
in
sub
stc
aad
inc
jnp
xchg
imul
add
inc
jecxz
xor
cmpsl
mov
dec
mov
les
jo
push
ja
js
fs
nop
loope
movsb
mov
xor
add
xchg
cs
cmp
in
es
mov
pop
pusha
mov
rcrl
dec
sub
mov
push
sbb
or
add
xor
mov
in
mov
mov
lcall
js
sub
inc
push
mov
imul
jne
shlb
pop
and
dec
iret
cmc
xchg
xchg
cmp
mov
cltd
add
xor
mov
shlb
dec
imul
fsubr
push
adc
push
and
mov
xor
cmpsb
lret
add
daa
repnz
in
jae
rcl
add
cmp
rol
out
mov
mov
out
add
pop
mov
test
shll
ret
shll
lea
movl
pusha
mov
popf
icebp
out
sahf
int
shrb
cmp
bound
push
scas
lret
push
xchg
outsl
fwait
pop
jmp
jmp
ret
mov
lahf
xchg
dec
gs
test
jg
test
mov
fs
es
ror
cmp
aad
andb
data16
ficompl
mov
or
or
fisubs
das
mov
cltd
fwait
jg
and
add
push
mov
cli
dec
mov
sbb
leave
fs
jle
mov
cs
and
divb
aam
inc
push
lds
mov
popa
out
ret
je
mov
js
pop
jb
xchg
out
push
mov
pop
inc
clc
rclb
inc
sub
sahf
pop
xchg
scas
or
or
push
stos
aad
mov
adc
mov
es
ss
cmpsb
sbb
cmpl
adc
les
mov
out
fadd
mov
cs
scas
mov
out
mov
xor
ret
pop
lret
sub
imul
jno
mov
dec
call
xchg
leave
pop
popa
fstpt
nop
inc
jo
jbe
or
sti
and
in
xchg
stc
icebp
out
pop
sbb
sbb
pusha
outsb
movsl
mov
mov
mov
pop
cmp
out
mov
sub
das
into
out
outsb
xor
sti
pop
pop
jge
outsb
mov
inc
fxtract
popf
sar
sbb
in
gs
mov
outsl
imul
stos
rcrb
cltd
test
stc
mov
stos
xchg
sahf
pop
push
je
cmp
loop
inc
fistpll
js
xor
test
sub
mov
je
xor
clc
xor
loopne
jae
xor
push
call
cmc
mov
fiadds
sub
adc
bswap
fs
xor
push
sub
sar
fisubrl
scas
mov
lock
pushf
hlt
xchg
bnd
sahf
enter
xchg
adc
loopne
scas
or
cwtl
sub
movsb
xchg
mov
mov
addb
adc
arpl
cli
imul
lods
cmp
dec
fwait
adc
pop
sbb
icebp
out
es
fs
push
push
shrb
into
cltd
sub
lods
pop
mov
enter
mov
pop
pop
mov
mov
imul
sbbl
xlat
addr16
in
mov
push
scas
nop
repz
lods
mov
leave
scas
pusha
or
mov
sti
jnp
into
add
test
mov
pop
cmpsl
adc
jns
cmp
sbb
incl
call
or
mov
adc
inc
arpl
rcrb
loopne
sbb
cmc
out
mov
lahf
pop
inc
mov
iret
rorb
push
int3
int
pop
cmp
out
movsl
push
jmp
stos
jle
cli
iret
hlt
mov
push
xor
push
lret
sbb
leave
out
or
or
jge
out
clc
pop
cmpsb
mov
or
and
ret
fs
mov
add
andl
fstps
jle
cmp
out
push
pop
dec
push
add
add
ss
mov
push
jmp
pavgw
sub
dec
pop
or
mov
mov
int3
push
sbb
lock
insb
mov
cli
repz
std
mov
jg
movsl
adc
sub
jb
hlt
movsb
sti
ret
negl
mov
fisubrl
cli
or
cmp
iret
scas
dec
je
loope
cmp
test
fcmovb
popf
push
sub
inc
fsts
nop
loope
add
and
rcrb
xchg
test
pop
rcl
add
movsl
not
inc
or
xchg
xlat
cwtl
pop
dec
cmpsb
dec
add
aam
je
sub
test
arpl
adc
gs
mov
mov
push
aas
stos
xor
adc
insl
stos
arpl
and
and
mov
adcb
ljmp
daa
lret
or
movups
add
push
push
cmp
lcall
into
popa
adc
adc
pop
popa
inc
je
add
add
bound
shl
int3
pop
and
sti
je
xorl
inc
xchg
push
cmp
lahf
fsubs
gs
insb
fbld
mov
sbb
das
jg
cli
dec
cmp
jmp
push
jne
pop
lcall
push
cli
lods
rcrl
adc
pusha
mov
out
jne
hlt
mov
flds
loop
mov
jle
dec
icebp
pop
sub
or
xor
nop
inc
in
jmp
dec
fadds
mov
mov
push
pop
jo
pop
cmp
sub
sti
sub
and
cs
sbb
adc
call
xchg
or
jae
popa
push
pop
mov
xor
arpl
mov
or
and
inc
fnstenv
push
cwtl
sar
xchg
xchg
int3
sbb
in
int
adc
mov
repz
push
testb
dec
add
jg
mov
jecxz
in
dec
cmp
ficomps
xchg
jp
inc
rcr
mov
sub
shrb
test
arpl
pop
add
and
push
xor
int
xchg
jg
jo
pushf
xor
insb
mov
jl
pushl
mov
cli
jbe
in
aaa
xor
pop
cmp
fsubs
push
push
xor
xchg
pop
lods
stos
jecxz
adc
jmp
or
and
hlt
rcrb
fwait
adc
test
cmp
mov
cmp
adc
je
negl
pop
mov
pop
aas
jecxz
pusha
sbb
mov
int
inc
arpl
push
dec
nop
pop
pop
lods
mov
test
daa
lds
or
or
dec
testl
fimuls
repnz
mov
ret
les
pop
sbb
lret
xor
pushf
sbb
ficoms
cli
mov
or
jne
enter
jne
scas
inc
push
mov
or
push
adc
xor
test
jns
cmp
jecxz
dec
jno
or
std
adc
sbb
nopl
mov
fstpt
or
cmp
in
push
fnstsw
stos
mov
int3
jg
aaa
movsb
jae
mov
movb
mov
divb
mov
roll
mov
or
pop
sbb
int3
mov
xchg
and
xchg
cmp
or
xchg
push
add
stos
outsb
cmp
lret
pushf
test
movsb
sbb
push
push
sub
popa
aas
mov
xor
orb
xchg
out
mov
push
push
sub
xchg
mov
mov
pop
lcall
push
dec
stos
cltd
mov
test
lea
mov
and
mov
jae
out
stos
dec
fildl
cwtl
enter
or
test
pushf
mov
pop
in
sbb
mov
std
mov
push
cmp
out
xor
cltd
push
or
xchg
ds
pusha
dec
jne
mov
imul
push
pop
jne
push
sbb
and
out
mov
inc
or
sbb
daa
cmpsb
push
push
dec
or
sub
fcmovbe
data16
push
fsubl
and
test
inc
cmp
in
fimull
ljmp
mov
mov
test
sar
mov
int3
mov
in
inc
in
jbe
inc
or
and
xchg
mov
pushf
or
lock
add
incl
call
and
testl
add
pop
push
dec
mov
jge
leave
lea
jnp
add
push
ret
dec
xor
shrl
or
cmpsl
inc
add
je
lcall
or
or
fildll
mov
pushf
and
aas
enter
data16
pop
sbb
xchg
mov
ljmp
out
lret
adc
mov
cmc
enter
push
push
sbb
lret
hlt
rcrb
inc
in
in
stos
mov
pop
cli
leave
cli
bound
loop
outsb
stos
fs
in
mov
pop
push
sbb
call
xchg
jge
jno
in
loopne
sbb
das
mov
jmp
mov
lret
loop
push
aas
out
xchg
dec
push
repnz
cwtl
jmp
push
out
xchg
or
jle
sub
ret
lcall
sbb
fisubrl
pushf
xchg
mov
loop
mov
jp
or
pop
mov
dec
cli
mov
add
lret
test
rolb
inc
loopne
xchg
push
cmp
testb
ret
add
in
mov
xchg
ret
xor
mov
in
mov
outsl
sub
insb
jmp
push
adc
pop
inc
mov
inc
jnp
loopne
push
push
xchg
xlat
jle
jecxz
dec
mov
push
jo
aaa
shl
pushf
cmp
cmp
fstp
scas
in
ret
adc
hlt
jns
js
popa
out
sar
int3
mov
ror
sbb
cmp
popf
addr16
popa
cli
pop
gs
add
jmp
and
and
and
push
out
push
xchg
jo
mov
movsl
xchg
mov
jno
jp
xchg
aas
fdivl
imul
sbb
xor
loopne
mov
aad
xchg
loope
push
imul
mov
push
test
sub
mov
jno
mov
add
or
ljmp
ds
lcall
mov
loopne
jl
mov
inc
pop
xlat
aad
cmp
xchg
nop
in
aaa
icebp
clc
cmp
stos
push
int
in
imul
pop
loop
xchg
push
movsb
fstl
fs
aaa
push
cli
aam
loop
clc
dec
lock
inc
lods
xchg
arpl
orl
pop
lret
andl
lcall
mov
mov
test
imul
dec
dec
fadds
or
xorb
fstps
inc
insb
mov
jnp
sbb
popa
mov
xchg
dec
daa
mov
call
jl
or
aas
lret
inc
push
mov
lods
hlt
push
inc
xchg
mov
les
mov
sub
out
mov
das
pop
lods
in
out
lds
inc
sbb
cmovne
inc
lret
std
push
adc
inc
aas
ljmp
pop
xlat
cmpsb
xchg
pop
into
mov
insb
sbb
insb
sub
xor
pop
inc
pop
fnstcw
ret
insb
jg
enter
int3
and
xchg
mov
lret
pop
ret
ss
jmp
lcall
aaa
cmp
sub
mov
mov
cli
push
add
cltd
in
fs
movsb
enter
or
and
xor
test
mov
mov
addl
xchg
add
push
inc
xor
sub
add
mov
hlt
aad
rclb
jo
jb
fwait
xor
sub
mov
roll
aaa
data16
lods
sub
pop
out
neg
pushf
fildll
inc
jmp
sbb
pushf
shlb
cmp
fisttps
das
fwait
or
mov
idiv
fisubl
clc
out
loope
add
sub
fistpll
sahf
pusha
dec
insl
cmpsl
xchg
add
loop
fiadds
bound
sbb
jo
lock
jbe
fsts
out
mov
xchg
icebp
arpl
inc
jmp
push
int
cmpsb
jnp
repnz
lret
dec
nop
repnz
and
cwtl
icebp
adc
dec
imul
cmp
push
std
sbb
mov
add
mov
loope
inc
leave
mov
test
jno
jb
iret
imul
shl
inc
icebp
clc
add
add
adc
xor
jle
mov
mulb
test
popa
mov
adc
pushf
or
icebp
adc
std
out
js
xchg
insl
cld
sbb
mov
pop
push
mov
rorl
andl
stos
inc
or
sbb
daa
test
mov
lret
pop
cwtl
fdivl
lcall
mov
mov
int
push
mov
xor
shll
dec
jno
pop
dec
mov
call
mov
test
ret
fisttpl
fs
push
mov
mov
mov
inc
ja
push
mov
pop
fnstsw
sbb
adc
popf
or
push
loop
xor
dec
mov
add
push
push
cmp
mov
xchg
enter
in
das
mov
repz
mov
js
and
cli
rcrl
ja
movsl
lret
je
dec
sub
and
add
out
mov
mov
inc
shrb
mov
xor
xchg
and
data16
hlt
push
mov
ret
addr16
mov
add
or
daa
lea
in
add
push
das
imulb
int3
loope
imul
mov
orl
sub
ret
sub
cmpsl
mov
mov
add
adc
daa
mov
adc
jmp
add
mov
or
lods
fmul
pop
ljmp
jl
or
adc
mov
cmp
mov
cmpsb
stc
in
leave
pop
js
push
jns
mov
into
imul
pushf
and
and
xor
dec
pop
push
pop
les
orb
pushf
imul
popf
in
aad
iret
mov
frstor
pop
cmc
fmull
movsl
jb
adc
lods
std
aad
or
and
fdivrl
hlt
icebp
push
pop
lds
jno
adc
jne
pushf
mov
dec
lock
dec
inc
nop
imull
add
sbb
push
cmc
pop
stos
mov
data16
sub
cmp
adc
push
sar
push
out
sbb
inc
addr16
and
mov
pop
pushf
xchg
add
push
ds
jbe
data16
in
cmc
aad
cli
inc
or
scas
mov
mov
and
or
pop
lret
xchg
xor
pop
adc
insb
mov
cltd
push
sbb
pop
cld
repz
sbb
ss
addb
push
test
jns
mov
mov
jge
mov
lea
xchg
movsb
xor
lods
fcoms
pop
in
sbb
cs
mov
psrad
sub
ret
sahf
in
mov
adc
cmpsl
lret
out
sbbl
mov
outsb
or
jg
lods
mov
xchg
cld
xlat
mov
in
test
jecxz
or
pop
xor
stos
add
and
lock
adc
in
lods
out
sti
lret
sbb
imul
sahf
mov
or
push
pop
add
mov
sarb
inc
shll
push
sub
and
jb
mov
xchg
add
jmp
mov
in
xchg
fcmovbe
mov
mov
outsl
fwait
adc
xchg
or
push
or
rclb
out
inc
and
sub
lods
fstl
adc
adc
loope
sub
dec
sti
fnsave
or
repnz
bound
sti
lods
pop
xchg
sub
enter
je
xor
data16
jnp
pop
or
lds
sahf
sbb
cmp
or
fwait
andb
mov
jecxz
sub
or
sub
fadds
pop
and
mov
stc
mov
bound
rcr
int3
xor
shlb
mov
and
das
push
push
sub
dec
mov
test
cmpsb
xchg
sub
and
xor
jle
inc
pop
push
jb
jb
outsl
add
imul
ficomps
fs
repnz
cmpsb
loope
subl
inc
push
les
sahf
mov
mov
subl
xor
mov
xchg
movb
test
xchg
iret
cs
repnz
ja
or
xor
xchg
out
push
leave
popf
lcall
sub
je
mov
xchg
mov
push
cli
mov
add
test
dec
or
leave
sbb
sbb
pushf
mov
push
push
sbb
adc
test
fnsave
mov
andl
cmp
pop
jns
mov
mov
cli
xchg
fsts
mov
and
sbb
ret
ret
mov
lds
fwait
lds
cmpsb
movsb
loopne,pt
add
sub
test
inc
mov
in
sub
cmp
outsb
and
fbstp
inc
ret
ss
std
dec
nop
xchg
mov
sub
jg
outsb
ljmp
je
or
mov
aaa
add
add
dec
push
adc
xor
insb
fcmovb
insl
push
enter
add
daa
sbb
scas
xchg
push
and
cwtl
xor
outsb
fisttpll
scas
adc
jo
cmpsl
mov
inc
jne
add
sub
xor
pop
jns
lret
in
add
push
outsb
cwtl
bound
pop
enter
loope
outsl
sbb
sub
leave
xchg
arpl
andl
out
das
popf
js
lock
mov
rclb
mov
add
xor
or
and
push
aaa
pop
cld
rolb
dec
sahf
cld
cmp
lods
or
lea
inc
dec
shlb
dec
push
push
dec
cmp
and
xchg
fistps
nop
repnz
icebp
mov
mov
or
aas
pop
xchg
inc
ljmp
das
inc
fldenv
fiaddl
or
outsb
dec
dec
mov
mov
jp
shlb
orl
dec
test
push
mov
jle
mov
out
dec
idiv
sarl
aam
push
dec
repz
out
jne
testb
dec
pushf
ja
sbb
decb
out
push
mov
and
outsl
mov
lods
mov
inc
ret
stc
sub
rolb
pop
daa
mov
and
sub
and
push
mov
xor
les
in
sub
movlps
aam
xor
xchg
xchg
bound
jl
mov
mov
dec
aaa
pop
push
shll
in
jg
sub
dec
shrl
fistl
shlb
es
icebp
aam
mov
gs
mov
sub
in
sub
mov
mov
mov
sub
mov
cmp
push
lcall
or
xchg
ret
les
testb
iret
in
lods
adc
mov
or
lock
pop
stos
divl
push
addr16
sahf
andb
jb
outsb
out
rcll
ljmp
dec
sub
enter
sbb
ljmp
and
cmp
pop
lods
icebp
add
xchg
aam
and
lods
pop
cmp
test
shrl
push
popa
jb
out
xchg
cs
sarl
and
inc
and
sub
cmpsl
pop
mov
add
pop
daa
mov
cs
adc
dec
pop
fcom
mov
adc
cmpsl
add
xchg
jns,pn
push
xor
fidivrs
movsl
movsb
jl
or
loop
ret
xlat
jbe
lods
add
icebp
mov
adc
add
pop
push
stc
stc
jg
add
testb
push
cwtl
add
int3
xlat
add
xchg
lret
addr16
or
xlat
xor
xor
fidivs
push
mov
xor
jmp
lret
xor
je
adc
mov
cld
and
jo
int
dec
dec
push
and
enter
inc
das
fisubs
inc
flds
scas
int
xor
insl
jmp
test
add
ret
push
jl
pushf
sub
pop
jg
inc
test
xor
out
outsb
xor
imul
sar
pop
mull
cmp
jecxz
inc
push
xchg
xor
out
pushf
ds
repnz
das
je
cmp
add
shl
cmc
jmp
mov
and
outsl
cmp
cmp
jae
mov
call
push
aam
sbb
pop
jle
sub
or
ret
subl
xchg
fisttps
mov
pop
xchg
xchg
andl
pop
push
sub
mov
ss
sub
or
mov
imul
daa
push
jb
je
es
sub
push
cmp
mov
cmp
mov
and
sub
fdivrl
into
adc
insb
push
sarl
fsubrl
adc
fidivrl
dec
mov
cmp
les
sbb
aam
stos
jg
std
push
adc
mov
mov
int3
add
push
mov
mov
inc
ds
daa
insl
imul
pop
mov
mov
cmp
lahf
and
lahf
xchg
adc
adc
movsb
outsb
mov
add
xor
dec
mov
repz
cmc
jnp
push
push
jae
popl
loop
pop
adc
inc
je
add
mov
out
mov
pop
scas
arpl
daa
movsb
adc
imul
testb
push
xchg
pop
jp
ds
adc
push
mov
int
add
fmuls
sbb
cmc
into
movsl
jge
aam
sub
jge
pusha
pop
int3
mov
jae
ret
mov
sahf
movl
dec
or
gs
into
jnp
lahf
inc
lock
imul
sbb
movsb
cmp
fsubs
testb
push
jp
cltd
sbb
inc
sbb
mov
in
lret
std
add
mov
ret
cli
pusha
incl
popf
clc
in
in
pop
lret
out
and
sub
icebp
push
xchg
mul
lcall
fistpll
or
nop
rcrb
xchg
cmp
jb
sub
jg
mov
push
sti
cwtl
sahf
adc
scas
push
add
aaa
or
push
int
and
addr16
xchg
scas
sub
ja
ret
adc
sub
add
mov
lahf
inc
clc
inc
imulb
imul
addr16
popa
test
std
aaa
jmp
clc
insl
fstpl
pop
cmp
mov
jmp
xor
pushf
sub
test
orl
int3
mov
ja
sti
or
adc
popf
mov
fadds
je
int
incb
sub
dec
mov
bnd
popl
jle
nop
mov
push
mov
scas
mov
or
inc
cmp
xchg
ret
fisubrl
cmp
and
lock
idivb
das
dec
push
cltd
sarb
rorl
mov
sub
fnstenv
jl
ds
dec
or
inc
adc
xlat
outsl
cmpsb
cltd
int
sub
sahf
xchg
mov
popa
mov
push
dec
call
xchg
xlat
sbb
rcrb
jbe
and
or
jg
rcr
imul
clc
pop
dec
add
dec
and
sub
mov
adc
mov
dec
mov
push
test
xchg
or
shll
stc
sbb
or
xchg
add
push
pusha
push
pop
lcall
add
mov
imul
mov
gs
push
push
lret
lock
sti
fucomi
or
mov
arpl
ljmp
and
or
bound
mov
jo
cltd
dec
clc
mov
push
mov
or
lret
pop
cmovns
cwtl
add
jg
push
xor
xor
aaa
stc
jecxz
ret
mov
jge
sbb
push
cmp
pop
pop
push
insb
sbb
lahf
xchg
insl
pop
xchg
pop
add
xchg
push
cmp
aas
jp
pop
add
push
pop
xlat
dec
or
push
shll
mov
shl
jb
mov
and
push
incl
xor
addr16
sarl
and
push
pop
loopne
push
jbe
mov
push
sbb
fadd
testl
xor
ljmp
test
push
ret
mov
leave
call
rorb
fisttpll
push
inc
pop
adc
testb
fstpl
inc
and
mov
cli
add
xchg
mov
out
imul
sub
cli
pop
and
ret
mov
arpl
jg
in
dec
xchg
loopne
cmp
inc
aam
or
dec
mov
fwait
call
pop
in
cmp
pop
xor
xor
mov
imul
mov
stos
inc
outsl
push
clc
aad
xor
scas
iret
xchg
lds
mov
cmp
roll
imul
xchg
mov
in
jne
test
pop
cmpsl
imul
shl
jmp
push
cwtl
jnp
rcl
xchg
sub
out
outsl
into
pop
std
dec
imul
jp
ret
push
inc
mov
lret
or
hlt
ret
xor
cmpb
adc
rcll
leave
rcrb
std
mov
mov
push
lret
mov
or
decb
mov
les
mov
pop
mov
push
dec
mov
and
fnsave
out
inc
jecxz
xor
push
dec
pop
into
xchg
pop
dec
inc
jp
or
mov
xor
inc
call
testb
out
xchg
or
scas
push
std
mov
jg
sbb
fcompl
mov
stos
sub
or
xor
push
testb
std
jno
cwtl
adc
cmpsb
outsl
scas
or
sbb
aam
push
cmp
jnp
rol
aaa
add
push
ljmp
cmpsl
sub
and
rolb
cmp
pop
cmpsb
push
ja
and
and
xor
loop
and
pusha
daa
lea
popa
movsb
stc
xchg
repz
ja
pop
inc
decl
mov
add
jle
push
xor
nop
xor
js
frstor
mov
out
inc
test
rorl
cmp
loopne
popa
sbb
fcomps
jle
xor
jecxz
or
xor
lea
adc
cmc
call
arpl
fdivs
movsl
nop
sub
sbb
push
dec
loope
mov
outsl
sbb
in
add
or
inc
add
mov
push
or
cli
cmp
cli
pop
adcl
lea
ret
and
mov
push
mov
or
nop
adc
sbb
mov
sarb
rcll
and
insb
mov
div
or
mov
rorb
jmp
mov
adc
cmp
movsl
stos
jl
adc
xchg
xorb
dec
xchg
repz
pop
and
out
int
testb
cmp
arpl
sub
in
out
cmpsb
insl
sub
ret
lcall
cmpsb
iret
push
add
jmp
jp
mov
mov
push
aad
rcl
jb
jnp
pop
push
push
sahf
mov
icebp
jmp
fsubrp
dec
in
bound
jl
scas
sbbl
adcl
sbb
xchg
lock
out
shrb
loop
and
xchg
outsl
add
iret
gs
out
fcoms
xor
jge
mov
xor
xor
repnz
push
out
ficoms
mov
fcomi
ret
xchg
fsubl
rcrb
or
lock
xchg
loop
into
mov
jl
fistl
dec
mov
mov
dec
mov
xor
or
pop
je
dec
js
aam
mov
cmp
mov
pop
mov
enter
jmp
push
movl
mov
adc
icebp
fstpl
adc
lea
shl
rorl
or
or
xchg
ja
lods
ret
mov
or
mov
cmp
std
adc
sub
ds
shll
push
xchg
lcall
push
sbb
shlb
push
dec
xchg
arpl
xorl
pop
addb
cmpsb
push
adc
repz
xor
mov
add
inc
xor
je
insb
push
fchs
jge
pusha
mov
ss
inc
and
push
std
je
call
push
push
mov
jnp
adc
pop
outsb
xor
cs
and
mov
push
call
jl
fwait
cmp
push
repnz
pop
pop
fldl
jno
fisttpll
imul
add
in
pop
jle
ror
lods
cs
dec
pushf
in
arpl
dec
xor
sbb
jne
cmp
sbb
stos
xchg
aam
sub
stos
mov
stc
inc
lods
ret
enter
mov
fst
es
inc
sarb
push
xorl
lods
inc
mov
jbe
xbegin
jp
push
outsb
adc
push
mov
test
xor
fistpl
mov
aam
out
xlat
jnp
dec
dec
dec
dec
pop
mov
sub
sub
cmpsl
nop
cmp
ja
roll
xchg
cld
test
jnp
push
jne
in
dec
or
rcrb
and
cmp
shll
cltd
es
dec
je
jg
pop
and
ret
adc
sbb
dec
xlat
popa
scas
clc
pop
mov
inc
aam
lcall
dec
jecxz
bound
sahf
add
adc
pop
cmp
add
test
sub
push
lds
into
mov
mov
or
in
jmp
xor
mov
sub
fistl
push
mov
cmp
out
imul
shr
dec
lret
jno
pop
dec
and
mov
or
icebp
sbb
sbb
fmuls
sbb
mov
sbb
popa
xchg
pop
add
cwtl
add
or
or
scas
pop
push
shll
mov
fmulp
in
push
vpackssdw
ficoms
mov
cld
push
out
dec
in
or
nop
adc
aas
in
iret
sbb
andl
sahf
icebp
ljmp
aam
xchg
pop
aad
xor
negl
cmpsl
fistpll
jp
cltd
push
inc
fwait
into
outsl
cmpsl
push
fcoms
lret
dec
xchg
xchg
push
inc
repnz
inc
out
out
cmp
lret
push
les
addl
test
and
sbb
inc
enter
mov
jecxz
cmc
pop
push
movsl
mov
outsb
add
dec
push
inc
add
cmp
andl
pop
adc
test
adc
push
in
cmp
stos
cmpl
add
call
lock
ret
add
popf
mov
nop
scas
cmp
and
ja
ljmp
push
dec
pop
sarb
xor
in
or
stc
xor
aaa
adc
jp
popf
test
jnp
jl
out
push
ja
fisttpll
daa
jns,pt
jnp
push
jle
and
pop
and
pop
pop
cwtl
adc
cmp
cmp
loopne
push
push
xchg
jl
xchg
roll
mov
dec
jge
xorb
pushf
test
movsl
scas
aas
pop
mov
dec
cwtl
fistpl
fcoml
pop
iret
jne
mov
xor
lret
add
xor
add
inc
dec
ret
add
jmp
ja
dec
add
pop
dec
cmc
les
cmpsb
adc
push
popl
xchg
out
insl
nop
sbb
hlt
arpl
jmp
outsl
decb
or
add
jl
ja
shlb
repz
lret
cmpsb
jbe
pop
sub
dec
xchg
sub
pop
jp
push
push
idivl
shl
ja
jbe
jg
push
cmp
push
or
dec
idivl
add
sete
xchg
fcoms
leave
pop
imul
int3
mov
es
outsl
inc
incb
jp
fdivrs
ja
imul
imul
in
cltd
imul
out
ret
cli
jae
push
mov
add
adcl
push
mov
sub
pushf
sarl
scas
pushf
xor
jne
and
test
push
inc
sbb
pop
ud0
outsb
sub
cmp
xor
adc
fists
jle
jecxz
cmp
insb
std
sbb
ja
jno
fists
mov
push
add
adc
jmp
loop
push
pop
and
lret
leave
hlt
xchg
cli
adc
test
xchg
out
push
jp
push
inc
addr16
test
cmpsb
pop
mov
sub
test
xor
cs
cmc
sbb
cmp
out
scas
xchg
lahf
addr16
sbb
xchg
aas
jmp
scas
pop
daa
mov
inc
mov
xor
mov
jo
sub
dec
adc
pop
xchg
les
sbb
push
cmc
shrb
test
adc
subb
insb
push
xchg
mov
mov
mov
xchg
pop
out
mov
push
stc
add
mov
aad
ja
push
scas
jp
pop
int
lock
pop
fcomi
insl
lret
aaa
adc
dec
loope
scas
aaa
cmpsb
fdivrs
shl
pop
orb
loop
mov
mov
mov
movsl
inc
and
aas
cmp
rorl
lcallw
pop
dec
enter
mov
jae
fwait
out
sub
insb
fnstcw
sub
adc
lahf
jg
popf
scas
mov
lea
je
insl
push
pop
outsl
adc
push
push
mov
shr
sbb
enter
sbb
div
push
fcoml
cmpb
js
add
pop
aam
adc
inc
xor
jmp
xchg
rorb
mov
mov
aas
cmp
fistps
lcall
popa
es
lods
push
mov
add
mov
jnp
pop
insb
sbb
cmc
fstpt
cmp
ret
int
and
xchg
dec
out
scas
mov
popl
scas
adc
fmulp
cwtl
aam
jl
pop
shl
mov
fadds
fistpl
xor
or
insl
adc
dec
enter
vsubss
inc
lcall
mov
hlt
shlb
jmp
mov
or
cmp
dec
cmp
daa
add
rcr
ret
mov
fdivrs
jg
dec
mov
add
lret
jae
push
pop
mov
xchg
sbb
cmpb
xchg
xchg
adc
or
xchg
jo
addr16
and
int3
jb
shrl
loopne
cmpsl
inc
aad
add
dec
in
pop
pop
and
clc
ss
push
mov
jl
xchg
cmp
scas
outsb
add
xchg
jbe
pusha
adc
dec
or
cs
ja
arpl
test
gs
push
icebp
and
mov
fsubs
dec
sub
rorb
jg
mov
mov
mov
popf
je
movsb
sbb
cmp
subb
cmpsb
xor
jle
insl
mov
pop
or
addr16
subb
lds
std
cs
icebp
ljmp
enter
mov
int3
jle
lods
fs
insb
sub
roll
fidivrl
pop
inc
ret
mov
pop
in
ss
rcrb
inc
idivl
ja
lret
mov
insb
add
inc
fdivl
inc
xchg
and
xchg
bnd
lods
dec
jmp
and
cmp
pop
mov
test
imul
fsub
in
push
push
xchg
call
xor
lcall
lcall
mov
out
xor
fbld
or
sub
stos
pop
mov
push
inc
adc
xor
fisubrl
mov
add
mov
js
jne
push
xor
mov
fldt
push
jecxz
fs
pop
pop
add
adc
js
lods
add
add
add
jg
imul
push
add
sbb
roll
adc
lods
dec
mov
sbb
adc
sub
or
lret
pop
inc
ss
lods
lahf
fisttps
inc
daa
cli
mov
dec
test
rolb
cltd
idivl
es
fs
stos
call
ja
jno
in
pop
cld
jecxz
imul
aad
div
mov
push
sbb
scas
testl
shrb
in
pop
xchg
or
ja
push
mov
and
add
jb
fsubrs
pusha
push
pop
dec
fs
cmpsl
scas
les
mov
sub
in
dec
aad
je
adc
lods
mov
inc
andb
xchg
cmpsl
popf
mov
stos
dec
push
into
xor
pop
mov
mov
mov
lods
insl
jns
dec
data16
pop
mov
and
fadds
mov
outsl
mov
inc
daa
xchg
and
push
mov
ss
fiadds
int3
out
outsl
adc
movsl
popf
addr16
ret
inc
cmpsb
loope
mov
add
mov
js
adc
add
mov
add
jl
adc
test
jg
pop
mov
and
cmc
cltd
fsubl
mov
ffreep
push
sbb
xchg
cmp
or
nop
cmpsl
lea
cltd
mov
fisubl
sub
out
inc
sbb
inc
out
cltd
sub
mov
push
rclb
gs
or
and
popf
in
mov
mov
aas
dec
sarb
test
in
mov
or
sbb
cmp
out
mov
sub
adc
or
xchg
mov
mov
roll
fsubs
mov
dec
jge
gs
cmp
jmp
add
ret
add
leave
dec
jne
cmp
add
out
sub
add
xchg
mov
or
cmp
dec
insb
push
scas
and
sbb
xchg
bound
aaa
test
out
pop
push
iret
adc
xchg
xchg
rcll
adc
insb
stos
into
jge
in
sahf
pusha
mov
repz
sbbb
cmp
fst
jmp
pop
xor
push
stos
or
mov
mov
push
nop
mov
stos
addl
push
push
push
mov
mov
mov
push
xlat
pop
addr16
aas
es
into
mov
cmpsb
push
jmp
notl
test
xor
test
stc
movb
leave
std
jae
cmp
movsl
sub
aaa
mov
push
jae
cltd
inc
xlat
push
shl
dec
sub
outsl
imul
xchg
popa
mov
sbb
vpperm
jl
or
jl
mov
xor
sbb
mov
in
mov
daa
iret
xor
lds
push
xor
dec
xchg
jb
int
clc
mov
xchg
stos
rcrl
cmp
lea
loope
inc
stos
jns
and
je
xchg
popf
mov
ret
mov
out
in
push
mov
cwtl
fcompl
cli
inc
jecxz
mov
repnz
repnz
push
cmpsl
dec
add
push
sbb
push
sbb
or
hlt
jmp
icebp
inc
xor
cld
push
cmp
cmpsb
pushf
inc
mov
out
push
push
icebp
mov
dec
push
sbb
pop
xlat
sub
push
sub
bound
jae
cmpsb
or
outsl
jnp
xor
in
outsb
addl
push
sbb
lock
les
pop
aam
cltd
mov
sub
sbb
ds
mov
insl
insb
push
in
je
dec
mov
adc
push
and
lods
outsb
jmp
dec
push
and
sub
test
xchg
imul
pop
dec
dec
jno
outsl
rcrl
bound
jg
shlb
out
cmp
jmp
dec
imul
icebp
out
dec
cmc
hlt
or
pop
pop
in
cmc
mov
mov
xlat
mov
por
push
es
push
and
or
cld
xor
gs
adc
sti
mov
sub
add
adc
bound
loope
lahf
cmp
or
lods
xchg
or
dec
fucomi
in
xlat
push
jmp
leave
pop
lods
jae
jp
pop
xor
cmp
stos
shrb
lret
fdivrs
iret
movsb
lea
cmc
lahf
mov
aaa
repnz
ds
adc
add
in
pusha
test
lock
icebp
shlb
lcall
faddl
insl
inc
mov
mov
and
stos
cmp
testl
cmp
dec
mov
jle
or
inc
xorl
jo
mov
push
add
and
and
sub
xor
mov
sub
fdivs
add
sub
xchg
ss
mov
lcall
xchg
jg
push
jmp
sub
push
movsb
inc
dec
add
pop
enter
cmpsl
add
mov
xor
xlat
mov
xor
push
jno
xor
call
aaa
inc
pop
lret
cmp
jns
xchg
enter
enter
jno
push
test
xor
int3
sub
xchg
adc
bound
mov
pushf
pop
arpl
enter
mov
in
xchg
int3
jae
outsl
fisubs
lret
xchg
lret
jmp
push
xchg
outsb
test
cli
adc
and
sbb
loop
outsl
inc
xchg
in
test
pop
fsts
fimull
je
inc
mov
pop
cmp
sub
sub
xor
adc
hlt
popa
arpl
loope
xor
pop
je
int3
add
mov
or
fcomps
int3
call
leave
lea
add
mov
or
mov
cmpsb
xchg
jecxz
push
mov
and
push
jne
push
cwtl
xor
add
lods
mov
inc
lods
add
jp
jns
adc
fwait
pop
and
aad
ss
das
int
mov
xlat
pop
lods
sbb
iret
mov
dec
xor
mov
push
mov
mov
xor
xor
inc
or
inc
gs
lods
adc
add
pop
enter
shll
decb
cmp
or
jae
mov
xor
mov
xor
xor
xchg
mov
clc
ret
adc
movsl
fistpl
adc
outsb
outsl
bound
mov
cmp
mov
cltd
arpl
mov
in
clc
out
mull
loopne
lods
xchg
stos
push
push
sbb
cmc
mov
inc
repz
ret
ds
sub
shl
sbb
adc
leave
push
incl
jle
out
rorb
inc
inc
test
mov
sarb
clc
cwtl
cmp
jmp
stos
loop
data16
adc
dec
jnp
stos
loope
mov
or
jge
adc
dec
sbb
dec
xor
lea
sbb
pop
out
cmp
add
xchg
or
jno
jmp
lcall
inc
mov
mov
sbb
sub
xchg
sub
int3
adc
mov
mov
clc
stos
cmpsb
jge
xchg
in
mov
xchg
push
dec
cli
icebp
arpl
jns
pop
mov
jmp
scas
arpl
ds
add
xchg
dec
xchg
pop
sub
cwtl
adc
int
outsb
loopne
test
pop
xor
pop
push
cmp
push
dec
sub
or
mov
pop
mov
xor
clc
ret
adc
jmp
insb
rorl
inc
push
lret
out
and
adc
and
lds
arpl
dec
fisubrl
data16
cmp
sbbb
push
push
mov
push
push
pop
dec
fwait
cmp
lods
mov
fwait
mov
add
jl
fsubrs
out
rolb
imul
outsl
repnz
jne
add
sbb
adc
lods
insl
daa
movsb
sbb
xchg
adc
pop
mov
frstor
faddl
inc
pop
mov
adc
aad
sete
fbstp
outsl
sbb
les
aam
jecxz
lods
jno
xchg
les
lret
mov
sub
test
cmp
mov
jle
dec
ja
and
imul
aas
cmp
dec
aas
xor
ds
mov
int
sub
xchg
ss
xchg
push
enter
data16
test
sarl
mov
or
into
out
xlat
mov
jg
mov
or
stos
test
push
sbb
pop
lods
data16
xor
add
mov
aaa
cld
fwait
scas
cmpsb
mov
std
inc
xchg
add
pop
daa
movsl
mov
and
mov
into
dec
outsl
lods
aaa
jl
mov
lods
xor
popa
pop
jae
imul
scas
push
stc
xor
mov
repnz
stos
lahf
jno
jl
dec
lahf
and
ja
and
push
mov
out
aam
fldt
sti
outsb
mov
enter
jmp
cmpb
cmp
dec
cmp
mov
cwtl
push
adc
xchg
mov
jns
cmp
mov
lahf
pushf
scas
jmp
int3
push
push
dec
pop
fwait
mov
das
mov
xchg
jp
or
sbb
shr
lret
das
push
add
mov
mov
add
mov
sbb
in
incb
arpl
dec
pop
jmp
jl
xor
xorb
pop
popa
shlb
add
lret
xor
lea
push
data16
pop
std
jmp
mull
and
loope
jb
dec
repnz
enter
int
out
in
cmc
int
mov
imul
adc
outsl
mov
dec
pop
andb
loopne
aas
mov
scas
cmp
popf
pop
dec
cmpsb
movsb
jbe
lods
or
stc
xlat
add
push
out
cmp
shll
adc
fcomp
dec
jg
or
jnp
iret
xchg
pop
ret
mov
iret
movsb
jmp
cli
adc
mov
psubsw
xor
adc
icebp
dec
cli
add
movsb
mov
cmp
fmuls
js
mov
in
sbb
lret
mov
lds
add
inc
mov
push
shll
mov
push
pop
mov
aad
push
mov
aad
push
out
and
mov
ror
jns
out
or
stos
sbb
adc
inc
and
jp
xchg
push
and
mov
dec
jns
test
jg
dec
mov
xchg
std
add
adcl
stos
add
add
sbb
mov
shrl
notl
ret
cmpsb
or
mov
andb
imul
and
adc
cmpsb
addl
out
les
inc
push
pop
pop
stc
and
sub
das
mov
sub
push
sub
add
lea
or
sbb
jno
pushf
ss
jne
mov
cmp
mov
loop
mov
xchg
aas
xor
jae
insl
popf
mov
pop
mov
loop
loope
cmp
sub
jge
hlt
xor
cmpsl
adc
popa
cmp
shlb
jnp
sarl
cmpsl
jno
mov
jne
inc
ss
xor
dec
adc
push
push
jmp
and
outsl
push
outsb
add
dec
fidivl
orl
push
adc
cmp
shlb
sub
xor
adc
js
test
repnz
lret
rolb
jecxz
jo
add
inc
int3
adc
and
fisttpl
xchg
out
and
shll
nop
push
sbb
repz
in
push
push
das
aas
test
cmp
movzwl
das
call
es
aam
xor
xchg
rcrb
enter
xchg
stos
jo
dec
xchg
mov
pop
icebp
xchg
sub
adc
mov
cmp
int3
int3
adc
pop
sub
into
jne
pusha
jne
sub
cmc
aam
outsb
adcb
clc
aas
xchg
and
fsubp
test
fcoms
popa
dec
xor
dec
shl
aad
pop
inc
ret
nop
clc
scas
push
xor
jb
loop
mov
inc
pop
test
mov
daa
bound
dec
dec
es
outsb
jge
fiaddl
dec
pop
int
xor
or
pop
int3
pop
mov
ljmp
insl
hlt
call
add
cs
pop
mov
lods
push
mov
add
push
aas
xchg
imul
hlt
xchg
pop
int3
xlat
xchg
xor
out
mov
fwait
aas
dec
lock
fs
mov
lcall
jo
fwait
mov
mov
dec
stos
lret
aam
addr16
aad
bound
ja
and
mov
aam
gs
jae
push
or
mov
push
and
pop
xchg
or
adc
xlat
dec
xchg
inc
sbb
jbe
mov
adc
enter
call
and
cmpsb
jge
inc
std
int3
and
ret
fs
aaa
ja
push
sbb
cmp
pop
outsb
dec
sub
pop
enter
out
sbbb
scas
mov
es
and
jg
movsb
ja
outsb
ja
movsl
std
imulb
fcompl
mov
and
loop
adc
adc
xor
mov
lock
or
xchg
aam
rol
lock
pop
das
aam
or
mov
xchg
push
pop
jge
add
lcall
sbb
enter
fwait
stos
jl
xchg
or
mov
lret
xchg
in
insb
mov
loopne
into
les
mov
dec
shlb
mov
or
xor
cmp
xor
mov
nop
xlat
adc
xor
out
sub
and
jae
mov
arpl
ljmp
imul
inc
mov
addr16
neg
std
lock
test
adc
enter
add
sarl
jmp
pusha
and
dec
jnp
push
imul
fcoml
cmpsb
xor
xchg
mov
mov
movsl
aad
mov
jmp
das
das
xor
push
or
xchg
lcall
test
pusha
or
outsl
or
imul
stc
dec
repz
enter
enter
out
jle
adc
sub
pop
into
cmpsl
inc
xor
add
fnstcw
dec
leave
into
in
lods
jmp
or
inc
es
pop
cli
lahf
xor
jp
in
daa
push
sbb
dec
test
ret
sbb
mov
movsb
test
sahf
mov
sbb
or
xor
mov
sub
mov
push
and
add
mov
in
sbb
xchg
push
lcall
out
cmpsb
jns
loop
hlt
adc
pop
adc
cmp
xchg
jmp
inc
test
push
mov
xor
add
decb
mov
mov
mov
enter
fwait
sbb
cmp
mov
dec
push
mov
xor
int3
les
mov
cmpsb
loop
fldt
mov
pop
push
jnp
adc
in
das
popf
or
aad
adc
fmull
lahf
mov
cltd
les
lea
fwait
push
mov
aad
in
jne
mov
sub
lea
mov
ds
mov
ds
inc
gs
push
stc
imul
jo
inc
call
arpl
in
add
clc
int3
lods
add
lock
subl
or
ljmp
test
mov
jecxz
in
pop
pusha
inc
inc
add
mov
pop
pushf
dec
adc
in
cmp
std
fsubs
add
xchg
adc
xlat
pushf
adc
sub
and
adc
data16
insl
sub
test
cmp
mov
addr16
icebp
repz
adc
jp
pop
dec
mov
gs
sub
mov
mov
sub
add
ss
sbb
cmpsl
repz
adc
pop
mov
or
mov
popf
mov
add
jg
ficompl
repnz
sbb
out
insb
inc
adc
int
push
mov
jge
and
mov
push
dec
cmc
insl
cmp
pop
jo
push
test
popf
adc
fxch
mov
or
vpsraw
sub
push
cltd
negb
cmp
mov
ds
pop
decb
inc
inc
mov
adcb
dec
or
out
mov
shr
push
jno
cs
mov
ret
and
imul
xchg
cltd
outsl
add
into
add
stos
xorb
add
inc
push
jnp
jb
inc
fidivl
sub
jbe
xchg
imul
test
sbb
scas
add
inc
loope
jo
jb
pushl
adc
nop
mov
icebp
add
lods
push
inc
cmp
sbb
add
es
movl
cltd
stos
pop
mov
arpl
pop
add
jno
movsb
fs
xor
imul
dec
pop
fbld
cwtl
or
dec
xor
cld
dec
cwtl
dec
mov
mov
addl
cmc
pop
xor
scas
add
jl
movsl
mov
add
lds
push
inc
mov
sbb
pop
xchg
cmp
scas
out
mov
insb
outsl
shl
adc
xchg
xchg
jge
stos
mov
movsb
mov
inc
xchg
std
sub
mov
sbb
xchg
sbb
add
aam
jnp
push
movsb
mov
sbb
cmp
sbb
ss
cmp
cmc
pop
cwtl
lret
fadd
test
cltd
lds
dec
cmpsb
call
push
aas
ror
into
inc
repnz
minps
daa
push
hlt
test
pop
jae
das
or
jp
cmpsb
lret
std
lock
nopl
xor
adc
inc
and
sub
or
pop
getsec
mov
dec
jle
cli
inc
ret
ret
or
out
aas
lods
push
mov
sub
pop
mov
adc
sub
mov
and
fucom
clc
sub
lahf
outsb
fidivrs
add
testb
xor
aam
push
pop
mov
fistpl
jb
pop
xlat
lock
mov
sbb
lret
pushw
gs
adc
cmp
add
inc
out
jb
mov
in
fisubl
cmp
adc
push
outsb
test
jge
pop
fs
xlat
int3
mov
sub
cmpsb
repnz
das
xor
dec
imul
movsb
xor
sub
sbb
lahf
stos
jle
fwait
test
dec
push
scas
sbb
sahf
pop
mov
rcr
inc
cwtl
aam
mov
pop
sbb
sahf
test
cld
and
enter
ret
add
push
mov
sub
je
pop
xor
mov
or
int
sbb
loop
mov
xchg
lock
mov
jne
push
imul
inc
ss
lods
in
xor
popf
jmp
mov
adc
mov
cmpsb
ja
xchg
pop
cmp
repz
sbb
icebp
pop
jmp
nop
jle
or
inc
mov
aas
test
sarb
lea
pop
xchg
sbb
sbb
ret
push
dec
jne
push
dec
fsts
sub
xchg
lret
mov
jle
cmp
imul
push
je
push
insb
xchg
push
fldcw
out
clc
inc
shr
in
dec
int
leave
mov
test
sbb
mov
popf
nop
or
imul
loope
scas
cltd
cwtl
cmp
mov
clc
mov
and
pop
int
fcmovnbe
xchg
pop
mov
sbb
jo
sub
loop
add
das
pop
pop
daa
rorb
xchg
and
lods
pop
adc
int3
loopne
jae
lret
shll
fwait
add
clc
pushf
push
jecxz
insl
push
sbb
nop
push
das
mov
xor
outsb
cmc
push
push
inc
sbb
mov
je
mov
fcoms
pop
add
push
aam
loopne
scas
call
cmpsb
insb
stc
xor
mov
popa
push
je
nop
mov
popf
xchg
popa
cmp
sub
loop
fwait
sub
stos
lea
fs
pop
mov
adc
add
divl
push
mov
fcompl
jo
sub
sbb
cmp
xchg
jae
or
popa
add
inc
insl
mov
packuswb
pushf
test
out
insb
test
cmp
cmp
pop
mov
test
or
lahf
jge
inc
dec
dec
mov
or
arpl
dec
test
lret
add
pmaxsw
jo
cmp
fmull
les
divl
xchg
add
mov
or
ss
sbb
mov
sbb
in
lock
into
je
fs
add
sti
shl
add
cmp
xchg
lret
aad
outsb
mov
adc
adc
bound
jmp
sbb
sahf
lods
xor
push
push
adc
std
or
iret
rclb
pushf
cmc
jg
or
fwait
leave
cs
int3
xor
lods
insb
xchg
jge
test
push
call
mov
loop
popf
and
mov
ja
sbb
into
jecxz
repz
aam
sub
mov
add
dec
lods
xchg
sar
adc
std
mov
mov
jge
sbb
and
adc
sub
je
mov
ret
outsb
lret
mov
mov
dec
sub
sub
xchg
lahf
pop
mov
sub
in
lahf
les
adc
lods
cmpsl
xchg
test
test
mov
xor
test
ret
lret
inc
xlat
fwait
cld
jmp
jmp
movsb
xchg
jg
xchg
mov
pop
das
stos
sbb
add
popf
and
adc
inc
loope
pop
push
push
addl
and
imul
add
clc
xor
xchg
test
add
sbb
adcb
xlat
adc
inc
aam
out
popa
dec
mov
xchg
pop
aad
xor
mov
loop
gs
ja
fsubl
call
dec
mov
pop
es
sbb
push
jae
icebp
sbb
loope
in
ss
xor
arpl
fisubs
call
mov
pop
jb
shlb
out
imul
push
movsb
xor
cli
call
aaa
sarl
mov
sub
cmp
stc
mov
pop
loopne
testb
xchg
gs
dec
add
aad
mov
sbb
jmp
cmpl
in
movsb
fiadds
icebp
add
pushf
push
lods
xor
add
pop
and
sub
out
adc
jo
mov
mov
add
rcl
dec
xchg
sbb
in
push
rorb
mov
jae
ja
mov
adc
sub
lods
or
repnz
movsb
add
sub
cmp
int
dec
lcall
jecxz
sub
lds
enter
js
shlb
push
pop
lods
push
pop
cs
push
in
repnz
inc
adc
lods
xor
mov
xor
cmp
push
leave
sub
into
mov
enter
and
mov
scas
push
xor
cwtl
add
dec
add
hlt
roll
hlt
addr16
gs
fnstenv
adc
xchg
mov
and
push
loopne
sbb
mov
push
and
add
sbbb
dec
repz
lock
rolb
dec
push
sub
or
xchg
ljmp
bound
mov
movsl
mov
sar
mov
cli
aad
bound
mov
mov
ljmp
out
and
mov
lea
je
sbb
enter
mov
iret
test
push
movsl
push
adcb
push
pushf
lahf
repz
popa
pop
add
jle
lcall
int3
mov
add
inc
sbb
scas
ss
pop
jno
jbe,pn
cmc
stos
test
add
out
stos
lods
imul
nop
outsb
cwtl
push
nop
mov
ss
xor
push
push
sbb
in
push
fistpl
in
daa
repnz
and
xor
add
imul
sub
mov
sarl
ret
rcrb
ret
rorb
inc
cs
mov
xor
jmp
jns
in
push
cs
jle
pmuludq
lds
icebp
out
add
out
movsl
adc
mov
fwait
cmpb
mov
push
jmp
dec
pop
insb
and
push
out
test
sub
mov
adc
imul
roll
loopne
mov
xchg
sbb
and
mov
cs
dec
adc
mov
out
xor
imul
mov
pop
or
push
xchg
push
out
movsl
fstpl
jnp
outsl
arpl
mov
inc
push
mov
cmp
and
ss
loope
pusha
lds
mov
xor
xchg
dec
movsb
dec
or
popf
xor
sub
js
stos
jns
sub
mov
arpl
test
cmp
dec
out
les
test
lcall
xchg
pop
add
in
clc
cmpl
mov
mov
jge
jecxz
mov
mov
negb
sub
fwait
adc
push
movsb
dec
scas
and
xor
push
adc
cmp
pop
es
test
icebp
xor
lahf
lea
and
bound
push
mov
lret
dec
xor
lret
lock
test
cmpl
and
push
movsb
jne
lret
and
inc
and
pop
jo
inc
mov
orb
xchg
popf
ss
insl
xchg
xchg
popa
dec
sub
sub
into
and
mov
fs
sub
jno
xor
push
fwait
push
stc
inc
pop
shlb
lods
je
ds
sbb
rclb
cmp
les
dec
mov
cmp
mov
cli
popl
push
xor
arpl
mov
or
out
ror
adc
adc
xor
adc
mov
sub
lds
inc
test
cmp
mov
lods
pop
stc
scas
mov
repz
push
mov
sub
push
out
sub
out
pop
daa
faddl
inc
adc
add
mov
xor
add
push
push
push
rclb
xchg
push
lcall
push
inc
divl
jns
or
xchg
push
push
mov
rorb
and
and
sub
sti
add
push
sbb
cmp
cmp
cltd
gs
gs
jmp
dec
xor
clc
jmp
lret
sub
sahf
sub
mov
or
leave
add
in
mov
add
mov
inc
insb
sbb
mov
push
cmpb
les
mov
cmpsb
bound
mov
xor
sbb
or
sbb
xlat
push
arpl
pop
mov
xlat
and
sub
fucom
cs
add
sub
jbe
xchg
popf
sub
wbinvd
xchg
mov
mov
jmp
subl
aam
clc
fs
jl
jle
test
or
jbe
adc
dec
push
andb
je
xor
cld
icebp
mov
dec
jecxz
adc
push
stc
mov
and
mov
call
cld
movsl
andb
mov
push
fldl
in
pop
and
lcall
cwtl
mov
dec
pop
cmp
sbb
data16
mov
cmpsb
add
adc
jbe
sub
test
xorb
mov
inc
pop
pop
xchg
dec
add
aam
lods
adc
enter
push
add
adc
push
popa
add
clc
push
in
fiadds
movsb
and
rcrl
pop
add
sbb
popl
pop
mov
inc
sub
and
xchg
addr16
push
js
inc
cmp
lods
jb
add
nop
cs
mov
pop
fisubrl
adc
add
nop
mov
pop
xor
cmp
lret
notb
or
testl
mov
call
in
loop
xchg
test
add
add
adc
sarl
aad
and
cmp
mov
scas
sbb
mov
cmpsl
scas
inc
jmp
int3
addb
cmpl
fsubrp
popa
pushf
cmp
dec
inc
sti
add
inc
fcoms
inc
rorb
xchg
jae
dec
xor
popf
and
imul
lcall
imul
xchg
hlt
lcall
push
mov
testb
mov
ja
lcall
stos
fwait
jno
cmpsl
push
mov
in
in
dec
pop
sbb
mov
aam
dec
cmp
stos
rorb
mov
shl
mov
fimull
addr16
xlat
sub
push
adc
mov
std
rcr
frstor
dec
mov
js
jbe
lret
jns
out
les
dec
or
out
repz
out
jp
push
xchg
jmp
cmp
test
test
scas
lcall
enter
sbb
mov
leave
adc
hlt
xor
outsb
stos
mov
mov
out
sub
mov
sub
xor
sahf
mov
aam
xor
sbbl
xor
mov
and
je
sbb
xor
adc
aaa
pusha
xchg
cbtw
push
movsl
cmp
jle
mov
adc
adc
aas
sub
sub
mov
sub
fdivrs
inc
sub
xor
imul
xchg
adcl
inc
jmp
popf
into
int
push
xchg
out
lock
sbb
jle
jmp
out
jg
mov
scas
and
pop
mov
andl
push
scas
sub
int
and
iret
add
push
mov
std
inc
ret
sbb
xlat
xchg
aaa
or
aam
fwait
decb
shl
jb
cltd
jmp
or
mov
jns
dec
push
xor
lea
test
mov
adc
popf
xchg
xchg
dec
sbb
mov
out
mov
sbb
and
bound
mov
adc
shl
outsl
test
bound
push
sar
mov
sti
stos
jo
or
dec
cmp
sti
inc
lahf
xor
push
cmp
lret
pop
imul
inc
jns
jnp
aad
lock
sub
xor
cmp
inc
loopne
adc
xor
cmc
out
ljmp
mov
or
sub
mov
aaa
fs
pop
fldcw
pop
sbb
cld
icebp
lds
dec
push
bound
lock
sarl
js
int3
lret
daa
popa
insl
sahf
add
cmp
mov
xchg
in
lds
addb
mov
push
imul
xchg
in
pop
xchg
arpl
js
push
cld
loope
jb
fiadds
rcr
push
inc
xchg
out
mov
adc
sub
dec
xor
inc
mov
sbb
push
jge
into
call
nop
xchg
sub
mov
je
jbe
and
push
ss
dec
dec
cwtl
rep
cs
sub
push
pushw
push
insb
cwtl
nop
mov
lahf
divl
into
push
ja
fchs
outsb
and
cld
int3
mov
decb
and
nop
or
jmp
in
mov
adc
jnp
repz
add
cltd
int3
lret
lock
sub
int3
mov
jne
cs
sbb
lahf
dec
mov
xor
sbb
pop
cmp
leave
pop
sarb
pop
subb
mov
adc
jo
mov
adc
xor
addr16
pop
pop
or
pop
sub
and
mov
scas
xchg
subb
jle
pushf
mov
fwait
mov
mov
js
mov
in
ljmp
mov
stc
scas
add
aas
and
mov
xchg
pushf
ss
push
pusha
jnp
dec
lret
pop
add
jno
stos
repnz
cmpsl
mov
xor
iret
push
out
inc
mov
test
xor
in
aaa
aaa
data16
pop
fwait
jbe
dec
pop
popa
jne
es
adc
loopne
loop
push
test
in
inc
sbb
test
lret
scas
add
out
gs
stos
lret
xlat
push
es
add
lret
mov
mov
push
lods
and
add
add
arpl
mov
mov
sbb
mov
sbb
mov
push
mov
mov
inc
push
push
mov
das
ja
mov
ficoms
loope
push
sbb
roll
dec
mov
mov
psraw
xchg
jnp
cmpsl
pop
add
cmp
sbb
lret
dec
repnz
add
and
jg
mov
push
xor
cmp
pop
jmp
aam
jb
fadds
fsubrl
fsubl
mov
aad
jbe
rcrl
sub
adc
jns
mov
mov
sub
shrl
ja
and
mov
xchg
xlat
push
out
dec
inc
sub
pusha
sbb
imul
mov
arpl
ret
mov
jmp
popf
pop
hlt
add
xor
decb
mov
xor
test
push
or
rcrl
ret
push
mov
push
in
rorb
cs
mov
add
pop
fnstcw
idivb
repz
and
and
or
sarl
and
aas
pop
mov
insb
xor
xchg
lods
jb
push
mov
mov
push
sbb
addr16
inc
and
add
icebp
push
imul
mov
add
and
push
lcall
lcall
cld
in
into
inc
sub
inc
adc
clc
dec
ds
cmpsl
mov
mull
mov
daa
or
lahf
and
ret
pop
pop
scas
or
inc
lds
loopne
push
xchg
adc
stc
ja
inc
or
stos
jns
mov
push
fldcw
push
int
cld
add
fstpl
leave
mov
adc
pop
dec
call
std
lcall
and
mov
cmpsl
mov
out
pop
pusha
lcall
les
xchg
mov
int
mov
sbb
mov
mov
xchg
pop
mov
iret
adc
pop
xor
dec
ds
adc
popa
stos
aas
clc
xchg
cmc
cld
push
jns
inc
dec
lret
pop
xchg
fnstsw
iret
push
push
je
sbb
je
adc
jecxz
movsb
insb
daa
addr16
push
fsubrs
dec
insb
push
dec
andb
nop
das
xor
mov
das
inc
dec
cmpsl
imul
je
out
xor
out
imul
and
daa
daa
enter
mulb
leave
rorl
jns
nop
fiaddl
inc
sub
ffree
lcall
or
icebp
lret
and
les
imul
outsb
mov
cli
mov
arpl
lods
add
imul
je
jo
std
add
xchg
addb
add
and
adc
mov
add
or
sub
jecxz
dec
inc
mov
adc
jge
sti
xchg
and
sub
dec
out
adc
lea
js
jb
outsl
cmp
lahf
and
push
push
mov
xlat
les
fidivl
fsubl
mov
adc
add
mov
ljmp
push
and
mov
add
mov
adc
pop
test
xchg
cmpl
mov
sbb
and
xchg
and
and
sub
call
pop
sub
pop
mov
xchg
jmp
mov
mov
mov
in
in
cs
or
mov
movsb
or
cmp
outsb
mov
testl
cmc
pop
mov
xchg
lds
inc
jge
adc
mov
lcall
lret
mov
sub
add
mov
inc
imul
pop
cltd
jno
mov
cmp
lret
shr
fildl
into
mov
pop
mov
push
pusha
xor
pop
shll
popf
sahf
inc
js
in
push
call
icebp
insl
jbe
pop
adcl
imul
test
les
aas
sbb
mov
dec
jnp
rorl
sbb
cwtl
or
inc
jnp
jb
loop
jecxz
popf
inc
sub
xor
cmp
loopne
repz
sbb
mov
jae
or
jns
adc
mov
mov
jb
ss
les
jo
in
sbb
dec
jecxz
aas
repz
lds
sbb
xlat
leave
les
es
call
lock
xchg
es
cmp
sti
xchg
push
xor
aam
sbb
shrl
xchg
jecxz
mov
fnsave
inc
arpl
sahf
mov
dec
enter
jbe
outsb
dec
mov
xchg
cmp
jns
cmpsb
mov
sbb
mov
dec
fistpl
and
mov
cmp
cli
jl
sbb
jnp
xor
imulb
out
dec
inc
jle
lret
push
push
cmpsb
scas
push
jg
subb
push
out
jns
jl
xchg
adc
jg
sub
xor
aad
inc
gs
add
fistpl
and
out
std
xchg
les
xchg
out
push
adc
out
imul
mov
sbbl
aas
cmp
sbb
nop
movl
ss
cmp
insb
push
cmovp
ljmp
inc
mov
lock
mov
lea
lahf
push
xchg
out
sbb
leave
inc
mov
in
push
sbb
test
das
out
adc
cmp
and
jecxz
inc
das
mov
jecxz
sub
lahf
lea
pop
lds
mov
nop
ja
cmpl
int3
mov
lds
ret
cmpb
loop
adc
add
pop
mov
js
pop
fs
jae
cltd
mov
aas
sub
das
icebp
mov
stos
xchg
sti
aad
cmp
cli
jno
insb
jbe
mov
xor
das
sbb
xchg
fsubrp
ret
jg
decb
dec
xchg
mov
jo
insl
cmpl
pop
arpl
mov
movsl
je
in
push
aas
mov
inc
xchg
jae
mov
jp
pop
test
pop
push
pushl
cmpsb
lods
movsb
adc
xor
and
or
add
cltd
das
imull
push
loopne
jecxz
jb
pop
adc
ss
ret
movsl
add
mov
or
xchg
ficoms
add
jnp
mov
mov
movsl
add
jecxz
aad
ror
mov
arpl
mov
scas
cltd
or
push
loop
mov
dec
stos
mov
jb
jnp
pop
pop
nop
jae
repz
mov
jg
xchg
icebp
scas
push
dec
popl
icebp
sbb
xorb
lea
dec
and
cltd
jnp
adc
xchg
rcr
hlt
xchg
ret
or
xchg
pusha
mov
pop
xor
pushf
cmp
mov
mov
testl
clc
pop
push
fxch
fldenv
sub
mov
sbb
cli
inc
inc
cmp
push
dec
dec
testb
push
cwtl
pusha
inc
das
sbb
sub
sub
scas
cmp
in
push
mov
popa
cmc
pusha
jl
test
sub
and
sbbl
cmp
mov
in
mov
pop
or
arpl
das
ret
js
in
or
adcl
hlt
ficomps
dec
ret
or
popf
pop
jl
cmp
mov
stos
xor
xor
push
lock
scas
cmp
bound
mov
xchg
xchg
and
arpl
sbb
pop
test
lahf
sbb
dec
ret
imulb
sub
arpl
cmpb
dec
loopne
lock
push
out
ja
cmpsb
shll
ja
movsl
aaa
leave
outsb
and
jp
fidivl
xor
cli
mov
cmp
push
xor
jns
das
js
jle
and
leave
inc
and
aad
iret
cmpsb
and
outsl
mov
push
pushf
push
outsl
jg
arpl
adc
fsub
das
push
hlt
mov
and
dec
ss
fldt
and
jg
adc
stos
in
adc
enter
cmc
daa
fsubs
ss
jno
xchg
mov
or
in
les
orb
sub
mov
xchg
or
xlat
cltd
int
cld
cmc
scas
jle
or
xor
cltd
jo
sbb
or
das
dec
inc
sbb
jbe
test
iret
inc
jle
dec
ds
pavgw
sub
js
cwtl
pop
inc
stos
insb
movsl
aam
into
jae
fnstsw
pop
call
sbb
aaa
cli
loop
cmp
mov
push
ficompl
jns
mov
jnp
sti
xor
ret
lret
lods
out
popa
sbb
jecxz
sbb
in
lcall
inc
mov
pop
jmp
repz
jmp
or
xchg
inc
mov
cmpsb
iret
test
addl
push
cmp
lods
cmc
push
adc
test
lea
inc
jbe
pop
add
loop
mov
xor
incb
stos
sbb
cmp
sub
addr16
out
mov
pusha
hlt
xchg
inc
fiaddl
inc
cmc
cmp
loopne
dec
sbb
testb
sahf
lret
rorb
js
dec
stc
fistps
aas
jmp
sub
test
vprotw
repnz
out
pop
testb
mov
cmpsl
cmpl
ja
add
mov
xchg
or
push
fisttps
imul
mov
bound
cld
or
jmp
push
fidivs
pop
add
insb
ret
pop
ds
push
adc
mov
jno
add
or
mov
fs
cld
ret
mov
addr16
and
mov
add
movsl
inc
std
adc
push
pop
ljmp
xor
push
jne
push
mov
shlb
cmp
mov
dec
mov
jmp
scas
ss
jp
fnstenv
out
nop
dec
insb
cmp
push
sbb
lret
xor
cli
in
inc
inc
cmp
inc
mov
cltd
mov
call
adc
es
xor
fidivs
cltd
repz
pusha
pop
jnp
lcall
ja
mov
test
sbb
add
mov
xor
sarl
cld
or
ss
dec
fldl
insb
adc
push
mov
xchg
cltd
xchg
dec
mov
jge
or
sbb
cli
mov
cmp
sarb
sbb
nop
fs
mov
add
aaa
push
jne
into
or
sub
lock
xor
pop
inc
or
sahf
je
or
mov
xchg
les
out
jmp
cmp
mov
in
inc
test
frstor
cmpl
pusha
icebp
cmp
pop
cmp
in
mov
xchg
imul
sbb
ret
xor
xlat
add
xlat
fmuls
fucomp
out
loope
sahf
pop
fidivrs
push
negl
or
pop
dec
lcall
dec
enter
cmc
imul
mov
dec
mov
push
mov
jne
je
iret
mov
xor
enter
fiadds
sbb
xor
aam
in
mov
insl
lods
call
adc
popa
rcl
push
test
outsb
test
cmp
js
jp
push
or
adc
mov
and
aam
fcoms
dec
fstl
ret
mov
cld
lds
dec
scas
inc
adcl
cwtl
test
or
pop
jl
popf
lcall
sbb
mov
insb
stc
mov
outsl
jo
add
sub
or
pop
dec
jecxz
jno
jl
mov
dec
sub
or
andnps
bound
addr16
icebp
mov
loope
pop
dec
mov
mov
push
test
js
mov
fsubl
int
out
test
outsl
repnz
out
loop
and
ljmp
cltd
int3
mov
nop
fcmovnbe
add
pop
mov
aad
les
cwtl
lahf
mov
adc
jmp
pop
or
mov
daa
mov
test
popf
cmp
addr16
mov
inc
outsb
sbb
es
push
inc
leave
in
dec
inc
js
fsts
jno
pop
gs
sbb
jo
int
dec
adc
xchg
push
xchg
and
js
call
fsubp
leave
iret
pop
movsb
jmp
push
imul
sub
outsl
movsb
outsl
sahf
stos
sti
es
add
inc
sbb
pop
stc
imul
and
sub
jg
and
and
test
gs
stc
leave
mov
adc
pop
cmp
popa
mov
and
les
xor
jl
xor
inc
cmc
fs
adc
mull
das
fldl
shl
adc
fs
cmpsl
jl
sub
mov
adc
jne
jmp
pop
loopne
xor
hlt
and
mov
mov
or
xchg
filds
int
ror
mov
sbb
inc
data16
add
sbb
or
inc
ja
xlat
call
xchg
push
mov
into
mov
jnp
sbb
cmp
loopne
add
sbb
dec
fxam
data16
mov
push
js
xchg
lret
iret
es
sti
testl
or
jle
in
test
mov
aam
inc
cmp
or
jbe
jb
call
fidivrs
iret
add
jl
cmp
pop
mov
jle
sub
and
pop
add
xor
fsubrs
cwtl
fisttpll
jmp
pop
lret
mov
mov
mov
loopne
popf
lds
popf
dec
push
pop
cmp
dec
test
test
lcall
ret
shl
out
inc
sub
mov
in
jbe
add
cmp
sub
pop
imul
dec
xchg
clc
mov
xchg
lcall
popa
mov
das
sarb
test
cmp
ljmp
mov
ja
mov
lock
jno
repz
out
jnp
inc
adc
es
fiaddl
pop
fwait
sub
popf
sub
cs
xor
mov
ficoml
into
mov
fucomip
xchg
push
mov
enter
lods
pop
xor
in
xchg
add
mov
add
in
mov
jg
fsubrl
ret
arpl
scas
aam
mov
cmp
ret
aaa
sub
cmpsl
mov
ret
pop
ret
cmp
imul
sete
lds
jns
add
lods
adc
mov
das
jl
ja
hlt
inc
sub
jns
pop
xchg
and
add
loopne
mov
hlt
das
lahf
lahf
push
cwtl
notl
xor
lods
es
cli
fmuls
fnstcw
cmpsb
cld
cltd
or
push
rcl
jb
mov
cmp
push
inc
aad
pop
imul
ret
mov
push
cwtl
fdivs
inc
inc
push
pop
sub
stos
adc
cld
xchg
cmc
push
in
leave
cs
mov
and
shr
test
jb
stos
mov
fcomps
xchg
aas
pop
std
mov
adc
movsl
ss
inc
cmp
sti
xchg
push
mov
xchg
pop
shll
fnstsw
test
shlb
jo
test
jbe
aaa
js
setns
inc
outsb
shld
lcall
pop
in
icebp
lahf
mov
and
arpl
mov
cmp
xor
jmp
pop
sarl
test
xchg
popl
scas
test
and
adc
cld
out
sbb
or
ds
jl
push
push
dec
lea
or
pushf
dec
sub
jbe
or
outsl
dec
scas
loop
loope
jo
out
lret
aas
and
jp
repz
pop
jne
add
jnp
imul
dec
jle
pusha
xchg
mov
xchg
icebp
cmpsl
jns
jp
jge
cmp
mov
lcall
mov
sbb
int3
ret
aas
call
aas
bnd
sub
data16
mov
and
push
sbb
stos
fsts
pushl
iret
ds
pop
sbb
out
sub
roll
popf
add
ljmp
dec
jnp
mov
int
push
je
mov
jb
and
jmp
cwtl
sahf
ret
mov
adc
idivl
rcll
add
out
mov
cmp
and
mov
fs
mov
cmpsb
mov
jp
lock
mov
mov
jmp
popa
mov
cmp
sub
adc
adc
cmp
in
int
push
fldcw
xchg
imul
cmp
jp
mov
cs
inc
mov
mov
sbbb
dec
les
paddsb
xchg
mov
ljmp
ds
adc
add
gs
lock
int
fdivp
pusha
popa
sti
pop
dec
pop
dec
adc
js
sti
movsb
xor
fcomps
and
jo
imulb
scas
out
xchg
clc
or
dec
push
mov
icebp
or
test
or
sub
pop
push
inc
repnz
pop
fadd
scas
mov
lahf
cmp
imul
nop
pop
mov
lcall
mov
outsl
lcall
in
out
pop
in
imul
es
out
sub
addr16
jecxz
cltd
jno
sbb
test
mov
les
add
push
aad
cmp
dec
test
out
mov
mov
pop
dec
xchg
mov
cmp
inc
add
xor
mov
aad
sbbl
push
pop
xchg
insl
cmp
or
mov
mov
jge
dec
fwait
scas
out
add
pop
mov
iret
xchg
lds
imul
cmc
xchg
mov
aam
cmp
popa
cmpsb
jns
dec
sbbb
repz
cs
shlb
add
sub
adc
add
aas
pop
mov
mov
sub
or
xchg
test
mov
aas
mov
andl
mov
push
insl
mov
inc
and
push
stos
push
int
jb
lock
arpl
add
push
rcrb
mov
cs
mov
sub
outsw
clc
push
lods
frstor
dec
out
stos
scas
mov
push
inc
pop
mov
inc
jbe
push
add
arpl
push
daa
or
inc
test
insl
mov
test
loope
fs
jp
insl
jb
sahf
neg
push
clc
mov
xchg
leave
int
lods
fbld
pop
shll
jbe
fmul
add
das
ret
mov
fs
aas
push
clc
push
xchg
mov
inc
push
sbbl
in
jp
fistl
mov
sbb
fwait
insl
outsb
loope
xchg
push
insb
leave
push
dec
in
pop
lahf
call
dec
scas
fisttps
scas
pushf
dec
loop
xchg
in
mov
jl
and
pop
push
sbb
jl
hlt
pop
inc
lea
mov
int3
mov
mov
pop
movl
mov
clc
pcmpgtw
inc
and
pop
stos
push
sub
dec
adc
ret
mov
cmp
push
mov
adcl
jns
pop
jmp
inc
lods
or
mov
pop
cwtl
sub
les
mov
movsl
dec
loop
xor
cmp
jg
mov
fistps
iret
mov
push
xchg
push
mov
xor
and
fldt
add
test
lret
push
mov
cmp
xor
lret
mov
clc
and
imul
xor
push
rolb
fimull
and
sub
adc
push
xor
mov
xchg
sahf
dec
test
and
lock
rcrb
dec
cmp
daa
mov
cmp
push
jb
lock
mov
inc
push
pop
ret
gs
mov
xchg
pop
rolb
pop
jne
add
xchg
fwait
dec
push
or
add
stc
rolb
mov
int3
inc
js
sbb
shlb
push
test
xor
mov
sub
pop
stc
sub
mov
add
inc
daa
fildll
or
dec
mov
loope
push
jae
inc
jbe
jecxz
gs
push
jne
adcl
pop
jg
and
aam
loopne
lods
sub
fstpt
pushf
jbe
jmp
stos
insl
jne
or
out
xor
jl
and
cmp
push
aad
mov
jecxz
sahf
lcall
repz
fwait
rcrl
loop
xchg
add
fidivs
sub
xchg
ud2
mov
sbb
mov
dec
sarb
sbb
clc
shlb
inc
jne
mov
sbb
and
xchg
adc
cwtl
sbb
mov
dec
stos
xor
xchg
add
push
scas
push
xlat
mov
push
add
push
xchg
mov
mov
pusha
sbb
adc
xchg
sbb
lret
mov
rorl
pushf
or
cmp
dec
hlt
cvtdq2ps
push
jge
add
test
movsl
or
xor
in
and
in
scas
loopne
gs
std
out
mov
orl
xchg
pop
adcb
insb
stos
dec
and
mov
insb
movb
pop
push
enter
mov
js
lods
dec
pop
jge
insl
pop
jbe
cmp
pop
sbb
and
pop
jmp
nopl
mov
adc
mov
sbb
imul
cmpsl
xchg
adc
sbb
fsubrl
xchg
jno
pop
imul
and
sub
mov
push
inc
scas
dec
dec
outsl
mov
sahf
cmp
mov
out
or
sub
mov
mov
cmp
jl
and
cmp
add
cmp
cltd
or
xor
int3
sti
sub
xchg
lods
push
mov
pop
insb
test
push
jp
mov
mov
adc
or
mov
xor
aad
stos
mov
mov
dec
js
aam
stos
fwait
pop
aad
mov
aas
loope
nop
sub
jmp
imul
loop
sbb
mov
nop
clc
rcll
aam
fsubrs
mov
lahf
mov
jmp
or
xchg
xor
mov
mov
in
dec
lea
xchg
push
hlt
out
std
adc
push
pop
call
cmp
pop
ror
mov
sub
jo
arpl
push
or
push
xchg
bound
bound
sarl
xor
cmpsl
lcall
jg
cmp
inc
fistpll
xchg
das
and
movsb
push
lock
and
pushf
cmp
fs
cwtl
std
sbb
and
push
pusha
dec
lret
add
or
cmc
pop
ss
cmp
fsubrs
icebp
clc
loope
pop
es
bound
test
stc
mov
dec
pop
lretw
ja
sub
data16
int3
int3
test
push
add
imul
popf
push
adc
ret
dec
xchg
add
and
sub
ja
lahf
push
dec
add
pop
lret
mov
fistpl
ss
add
jl
mov
test
movsl
pop
jg
mov
scas
mov
test
pop
repnz
dec
stos
xchg
lods
mov
inc
fnstcw
dec
dec
mov
scas
mov
mov
addb
or
es
int
cmp
in
push
jae
adc
mov
mov
aas
mov
add
fcoml
xchg
cmp
push
or
inc
and
mov
dec
pop
or
test
das
add
out
hlt
mov
mov
jge
dec
sbb
lea
pop
cld
add
adc
push
movsl
pushf
arpl
cmp
jo
mov
insl
mov
jl
sbb
ds
cltd
loopne
lcall
jmp
push
repz
pushf
out
dec
jno
pop
out
sbb
fsubs
out
xchg
or
pop
mov
add
push
icebp
mov
push
xor
std
sbb
cmp
das
fisubs
lock
dec
xchg
and
icebp
jecxz
mov
push
sbb
test
dec
inc
ljmp
mov
cmp
enter
mov
cmp
jge
in
loopne
mov
mov
or
cld
or
clc
cmp
stc
push
out
pop
sbb
mov
dec
sbb
jo
xchg
in
in
fldenv
jno
mov
jno
adc
pop
bound
xchg
outsl
addr16
lret
push
push
les
or
xor
aam
or
add
shrb
icebp
aam
sbb
mov
fdivrl
bound
inc
daa
roll
jle
cs
arpl
mov
outsb
adc
je
push
mov
aam
jo
xorb
add
cmp
xchg
push
insl
xor
mov
daa
ret
enter
push
jmp
jge
ds
andb
fwait
pop
mov
inc
orl
mul
enter
int3
adc
mov
sahf
mov
pop
mov
rorb
jle
and
movsb
push
sbb
add
cmp
push
aam
mov
out
outsl
sub
jge
popf
lret
adcb
test
in
cmp
dec
fwait
aas
stc
out
movsl
movsb
sti
xor
sbb
test
into
mov
out
imul
sti
push
lods
pop
xchg
aaa
pop
insl
rorl
rorl
scas
test
jne
addr16
loope
mov
ffreep
inc
insb
lcall
stos
xor
movmskps
mov
subl
jle
xorl
xor
mov
push
lahf
dec
iret
jg
adc
into
cli
testb
inc
and
dec
inc
xchg
aad
pop
xor
add
cmpsb
mov
ret
dec
cmp
push
movsl
adc
outsb
out
pop
dec
adc
sbb
loop
inc
cmpsb
or
sti
stc
mov
imul
mov
sbb
or
out
test
outsb
lods
dec
mov
mov
xor
mov
xor
adc
out
inc
sub
and
or
aaa
inc
cmc
adc
out
fnstsw
icebp
test
ret
adc
repnz
pop
sub
lret
pop
and
andps
push
add
js
add
sbb
mov
mov
sub
mov
mov
mov
std
cmpsl
test
cmpsb
sub
in
test
je
push
repnz
xor
pusha
cmp
sbb
mov
aam
out
and
out
xor
and
scas
push
dec
push
repz
mov
sbb
clc
je
loop
sub
dec
mov
mov
xchg
ret
xor
fwait
cmp
out
fsubr
and
aad
je
bound
inc
cmp
movb
or
push
xor
jge
pop
sti
ljmp
in
ret
jp
mov
mov
xchg
into
mov
dec
cmp
mov
jecxz
mov
mov
subl
jmp
dec
fdivrs
dec
pushf
jmp
inc
gs
add
push
xor
xor
pop
sbb
into
loop
imul
xchg
pop
cmp
dec
fwait
cmp
pop
pop
incl
xor
jmp
in
imul
jae
in
test
push
push
test
shr
test
mov
pop
fisubrs
cmp
and
sub
test
adc
cmpsb
shlb
xchg
and
pop
pop
aas
lahf
jne
and
dec
stc
mov
inc
outsl
ds
fsts
xor
aas
xchg
dec
fs
cli
inc
aad
mov
stos
bnd
inc
xor
sbb
xor
ror
or
dec
popl
popf
sbb
add
push
sub
ljmp
xchg
nop
fwait
xchg
pop
mov
loope
pop
adcb
jmp
dec
iret
insb
pop
ret
out
pop
jne
mov
push
jmp
popa
cld
setnp
or
xor
xor
mov
pop
test
mov
loope
shl
jno
dec
fstl
adc
mov
fsts
inc
xchg
fs
sti
insb
fucomi
mov
mov
fmul
cmp
cmp
shll
push
jb
dec
aam
sub
cmpsb
ja
sbb
pop
out
in
lock
stos
push
rol
or
jbe
shll
mov
pop
jle
outsb
iret
and
jae
jnp
mov
js
loope
cld
adc
mov
test
jp
jge
stc
loope
dec
sarl
dec
sub
int3
mov
and
pop
shlb
mov
std
add
jne
icebp
and
sbbb
xchg
mov
mov
xorl
cmp
pop
sub
jnp
cmp
std
ja
jb
dec
es
cs
push
push
adc
inc
mov
inc
adc
mov
mov
aad
cmp
and
mov
push
xchg
cltd
pop
fcompl
adc
stos
mov
mov
or
add
push
lock
and
pop
jecxz
and
adc
andb
popa
inc
sub
mov
out
ret
fisttpll
sub
addl
pop
jmp
outsl
dec
rorb
add
repz
rclb
xchg
leave
mov
mov
and
imul
mov
data16
ljmp
mov
cld
cld
int3
lock
in
mov
or
push
mov
leave
lret
loope
cmp
mov
pop
inc
testb
dec
push
stc
scas
and
aas
push
jbe
push
and
outsl
loopne
xchg
xlat
jb
mov
sbb
xchg
orl
flds
inc
aaa
sbb
leave
xchg
pop
sub
jno
andb
sub
add
ss
mov
inc
or
pop
xor
stos
sub
movsb
mov
push
jle
xchg
aam
adc
pop
lods
dec
gs
repz
movsb
pop
lret
stc
test
insb
cltd
mov
jne
stc
out
mov
sub
push
mov
push
in
cld
and
mov
lea
sbb
sub
cmp
xchg
sub
pop
mov
fucomp
cs
movsb
dec
push
add
pop
mov
and
cmp
mov
je
test
cwtl
repnz
leave
xchg
or
movsb
scas
jns
rorb
rclb
popa
loop
ret
mov
popa
pop
or
pop
nop
mov
js
fidivs
dec
out
in
xor
cmp
xor
mov
testl
push
in
daa
mov
pop
lahf
cmp
push
sbb
xor
int
ds
adc
mov
or
sbb
out
push
sub
imulb
dec
pop
mov
mov
cmp
aad
fnstcw
mov
pop
mov
pushf
cwtl
mov
les
sbbl
xchg
bound
or
inc
push
mov
and
add
stos
push
aad
xor
push
sub
mov
mov
fcomi
add
lock
mov
push
in
dec
leave
add
sub
push
xchg
pop
push
movsb
ds
ret
jae
incl
test
scas
adc
pop
aas
fdivl
and
popf
aam
pop
scas
push
iret
fsubrp
movsb
sub
mov
insl
lss
fisubs
push
dec
xlat
dec
jl
and
and
inc
jp
pop
daa
push
cmp
enter
outsb
pop
sub
mov
std
aam
push
dec
cli
or
icebp
in
sub
or
mov
stos
test
movl
push
mov
or
repz
xchg
or
dec
addr16
mov
cmpsb
add
daa
jge
pop
or
sbb
push
dec
jbe
add
popf
enter
adc
mov
cmpsb
testb
or
mov
add
pop
jl
cmp
pop
mov
int
incl
xchg
push
inc
push
mov
aad
cwtl
cmpsb
clc
jb
jae
aas
data16
push
and
leave
lcall
mov
inc
jno
inc
dec
xchg
mov
fstp
pop
es
es
inc
test
call
adc
push
cmp
fisttps
add
sahf
push
mov
adc
and
dec
test
loop
mov
mov
xor
clc
cmc
out
mov
or
into
clc
fs
cmc
push
or
stos
into
fidivrs
call
scas
mov
or
mov
mov
test
aad
ret
cs
inc
sub
dec
data16
mov
adc
push
les
sti
or
mov
jmp
mulb
mov
leave
js
ja
or
aam
mov
and
xor
je
scas
push
sub
stos
cmp
mov
xor
daa
test
mov
pushf
xlat
lock
outsb
popa
mov
push
jp
dec
adc
push
inc
rcrl
nop
dec
jnp
ficomps
aad
add
cmp
and
sbb
jbe
rcll
add
push
sbbl
hlt
leave
sahf
das
mov
push
mov
shll
jmp
add
sbb
or
je
or
xchg
js
push
push
sub
pop
pop
loopne
jp
jnp
hlt
jp
dec
mov
push
sub
icebp
mov
add
mov
pop
lods
dec
cli
jbe
dec
int3
popf
pushf
adc
inc
mov
stos
pushf
in
fldpi
mov
and
sub
inc
or
cmp
pop
mov
rorb
mov
sahf
aad
push
push
js
es
stos
add
rclw
xchg
in
test
xor
std
or
jmp
sbb
movsb
std
data16
push
faddl
int3
jnp
dec
into
dec
jecxz
loope
and
xchg
xor
imul
ljmp
push
inc
cmpb
jmp
adc
and
inc
xor
iret
test
dec
mov
cmp
fs
test
ficomps
jns
sbb
ss
aas
loopne
aad
mov
cmpsl
push
cmpsl
xchg
xor
xor
and
imul
push
inc
aad
fdivrl
test
repz
es
jno
bound
sbb
inc
jge
mov
cltd
jge
xchg
push
dec
lret
int
add
loopne
pop
das
pop
inc
push
xlat
jno
pop
cmp
and
jne,pn
push
and
pop
xor
rcr
iret
inc
mov
nop
jne
dec
add
outsl
inc
insl
hlt
dec
addr16
sub
rcrl
daa
insl
out
mov
jp
and
and
jae
fmull
dec
sub
inc
popf
pop
xchg
mov
push
cmpsb
sub
shr
outsb
xchg
bnd
jg
mov
test
nop
dec
pushf
call
icebp
pop
cld
push
jnp
push
dec
or
push
pusha
ss
out
cmp
push
push
ret
pop
mov
inc
sub
les
dec
popa
shrl
jbe
add
mov
add
shlb
popa
movsl
xchg
xor
bound
mov
cmp
pop
aaa
pusha
into
fists
loope
and
jb
int3
cli
xchg
mov
jg
mov
dec
cli
jl
ret
push
adc
sahf
test
loopne
sbb
stos
sbb
dec
aad
and
sub
out
cwtl
dec
scas
aas
shll
and
insb
push
and
rcrl
lahf
std
in
pop
insb
pop
mov
xlat
or
es
test
das
pop
lock
cwtl
leave
jbe
imul
loopne
sub
push
mov
pop
aad
sub
adc
int3
inc
es
outsl
cmp
lock
outsb
fs
push
mov
cmp
lds
inc
fs
xor
adc
stos
aam
shl
test
dec
push
nop
mov
cmpsb
stc
mov
hlt
aam
mov
adc
fnstcw
mov
xchg
mov
aas
mov
cmp
gs
pop
daa
sbb
dec
xor
or
push
scas
or
aam
neg
inc
push
in
mov
push
testl
in
push
imul
or
xchg
mov
jle
xchg
test
add
loopne
jl
dec
xchg
mov
cmp
fxch
lret
mov
xchg
pop
cmpsb
mov
push
fsubl
push
ret
inc
pop
icebp
aad
jnp
js
sbb
cwtl
xor
sti
sbb
adc
and
lret
outsl
test
mov
push
ret
addr16
stos
insb
jnp
repnz
movsl
je
loop,pt
pop
shl
pop
dec
adc
outsl
les
stc
sbb
test
xchg
adc
pop
inc
cmp
cmp
push
xor
roll
push
enter
add
loopne
mov
fisubrs
xchg
mov
sbb
daa
mov
mov
testb
int3
mov
dec
pop
cmp
add
adc
push
js
dec
std
mov
adcl
sahf
std
aam
mov
ret
int
ds
addr16
sub
fsub
cmpsb
aad
mov
or
int3
movl
sahf
jmp
fcoms
fwait
jae
and
fldcw
in
xor
mov
add
repz
ja
fwait
add
dec
pusha
adcl
xor
inc
xchg
inc
inc
jg
mov
fs
xchg
add
pop
enter
mov
mov
jne
bound
sahf
jnp
push
xchg
rorl
mull
xor
mov
push
in
mov
cli
mov
jge
outsb
push
test
push
jle
jnp
xor
leave
add
cmpsb
bound
int
fxch
scas
add
dec
cmp
jne
js
cmpsb
pusha
movsb
fimuls
loope
sub
push
inc
mov
push
lret
mov
imul
adc
stos
cmp
lcall
xchg
jb
lret
jmp
iret
mov
test
test
and
xchg
scas
add
dec
stc
inc
aad
mov
xlat
cmpsl
decb
xor
dec
ljmp
mov
and
iret
leave
dec
mov
xchg
cmp
jne
ljmp
pop
movsl
cmp
fadds
sub
enter
hlt
mov
inc
xchg
leave
mov
outsl
xchg
sbb
test
jl
int3
mov
xchg
jb
xchg
xchg
negl
cmc
aaa
cmp
in
outsl
cli
mov
stos
imul
push
jnp
sub
cmp
inc
mov
sarb
xor
add
xchg
dec
jns
xchg
pop
test
jl
hlt
lret
mov
mov
xchg
xchg
icebp
les
ret
cld
aam
mov
ss
cmp
inc
jmp
lcall
inc
inc
jne
stos
jbe
add
addb
lock
fbld
scas
hlt
mov
repz
push
ljmp
push
cmp
xchg
icebp
lock
xlat
or
subb
mov
jnp
cmp
or
cmpsb
mov
lods
xor
call
push
fistpl
adc
sbb
mov
cmp
outsl
pusha
push
adc
loopne
dec
hlt
xchg
jae
jmp
pop
xchg
add
bound
sbb
cld
mov
lret
jg
fcmovbe
dec
scas
lods
insb
loop
sbb
test
lahf
call
lods
xor
int3
sti
insb
or
jmp
popf
push
stos
setae
jge
push
inc
test
add
jb
movsl
push
cs
mov
stos
jmp
sub
adc
outsl
ss
mov
enter
jnp
sub
repnz
test
lea
xchg
push
test
aam
js
loop
xchg
add
inc
mov
repz
push
mov
das
inc
pushf
shl
cmp
loope
in
inc
loopne
jnp
out
pop
sub
mov
jbe
jns
adc
and
mov
dec
fstpl
and
test
push
jmp
adc
mov
dec
pop
push
cs
imul
cvtdq2ps
pop
repnz
call
push
das
ficoms
xchg
push
adc
push
lods
dec
fildl
mov
add
push
mov
jl
push
cmp
clc
xchg
pop
arpl
test
cmpsb
imul
js
clc
pop
std
push
dec
adc
push
mov
adc
inc
int3
lods
or
inc
mov
das
pushf
mov
das
cwtl
sbb
in
das
adc
enter
jno
add
flds
jle
add
jge
mov
xor
jns
mov
cmp
xor
mov
ds
xchg
sti
jnp
shlb
loope
testl
jne
rcrb
xchg
push
xor
cmpsb
pop
mov
or
cwtl
in
dec
sub
in
push
or
jl
in
jbe
loope
xor
loopne
sbbb
nop
pusha
dec
pop
sahf
xchg
int3
cmp
popf
push
lahf
in
xchg
sub
sbb
lock
jecxz
stc
andb
xor
cmp
cmp
leave
loope
mov
rcll
inc
insl
outsl
cltd
fwait
in
cmpsb
int3
sarb
in
or
out
sbb
jbe
jge
mov
dec
sub
ret
movsb
mov
movsl
or
stc
xchg
lods
sbb
jp
arpl
rcrb
imul
enter
in
int
or
imul
lcall
fidivs
jecxz
mov
inc
mov
dec
mov
adc
loope
loopne
enter
in
bound
dec
call
add
mov
js
js
das
cmp
sbb
and
out
jle
js
pop
lods
jnp
mov
aaa
jg
mov
hlt
jl
push
mov
inc
mov
dec
jns
aam
cltd
sbb
mov
inc
es
adc
lock
fbstp
mov
cmp
jle
lahf
sbb
sbb
pop
jbe
mov
mov
mov
mov
and
pop
outsl
mov
fsubrl
inc
loope
mov
xor
push
into
movsb
cltd
loop
mov
stos
pop
jg
imul
cltd
xchg
icebp
and
xchg
data16
inc
xor
jae
lea
idivb
xor
cmp
andl
imul
or
aas
popf
mov
pushf
add
hlt
inc
pop
xor
xchg
pop
dec
add
clc
mov
mov
mov
andl
dec
push
sub
in
lods
dec
add
add
les
and
sbb
mov
jo
incb
cmp
pop
loop
push
sub
push
arpl
dec
lret
aaa
inc
or
push
dec
sbb
popf
jp
ficoms
inc
pop
repz
mov
cmp
add
out
into
jmp
mov
xor
mov
daa
ljmp
aad
or
test
dec
inc
mov
fidivs
sub
and
jp
adc
cmp
inc
cmp
scas
jge
mov
out
popa
loopne
jbe
xchg
inc
arpl
inc
das
pop
repz
sbb
nop
inc
jl
jge
fsubp
mov
ss
imul
mov
push
mov
lret
rorl
mov
cltd
dec
mov
cwtl
inc
loope
jne
push
xor
sbb
leave
mov
icebp
icebp
mov
pop
addr16
insb
push
out
pop
dec
cmp
inc
xor
sbb
mov
aad
push
dec
dec
cwtl
cltd
or
push
mov
cli
or
pop
cmp
in
mov
add
mov
jl
out
inc
std
sbb
xchg
and
cmp
loop
pop
xor
fisubrl
push
aas
cmp
jnp
push
jle
cmpsl
cld
mov
mov
jne
dec
push
xchg
sub
aaa
sbbb
mov
aaa
or
lret
lret
adc
sbb
lds
sub
push
adc
mov
pop
sbb
in
or
aad
imul
es
mov
insb
stc
jne
addr16
push
sti
ja
lods
sbb
or
lods
xchg
jge
inc
cltd
push
xchg
jle
adc
push
cwtl
push
divl
ret
xor
pushf
shll
push
xchg
int
cmp
pushf
dec
and
mov
sarl
xchg
xor
in
inc
mov
and
xor
dec
lret
insb
or
out
mov
iret
lcall
scas
push
aad
lods
adc
out
jl
inc
xor
fcoms
cmp
inc
dec
pop
xor
fbld
sahf
sbb
aam
sbb
stos
push
leave
jle
inc
mov
cmp
fisubs
fwait
clc
in
shrl
inc
std
stc
fcmove
mov
ljmp
subl
pop
xchg
jmp
mov
pop
dec
jo
pop
add
xchg
fwait
movsl
cwtl
jp
icebp
pop
and
lods
mov
jl
jnp
or
adc
aam
lods
fwait
mov
push
lea
pop
or
pop
mov
dec
mov
sti
xchg
push
cmp
shll
inc
pop
add
jo
cwtl
sahf
xchg
fldcw
adc
mov
sub
leave
cli
mov
push
push
cld
mov
push
cmpl
or
mov
int
inc
scas
xor
iret
push
and
subl
adc
and
aaa
cmp
pop
fs
mov
insb
in
loopne
add
ret
pop
icebp
fwait
push
dec
ljmp
adc
or
jmp
push
push
repz
in
or
nop
loopne,pt
xchg
mov
movsl
loopne
lret
es
outsl
pusha
ss
sbb
cmp
ss
mov
push
cmp
pop
xchg
push
xor
jg
cmp
rcrl
hlt
push
jmp
xchg
lret
xor
rclb
xchg
scas
xchg
mov
push
in
roll
mov
mov
ja
in
jle
shrb
mov
ss
adc
movhps
loopne
jnp
andl
xor
ja
mov
mov
adc
mov
lods
shlb
lcall
out
push
pop
xchg
add
ja
inc
xrelease
mov
jle
in
sub
jnp
xchg
hlt
cmpb
push
push
in
cmc
adc
pop
sub
pop
jbe
mov
cltd
inc
or
testb
mov
adc
call
or
movsl
cld
loopne
cltd
outsl
movsb
jmp
out
loop
jae
push
push
mov
fdivrl
or
loopne
or
pushf
adc
or
shl
cli
mov
insl
je
inc
xor
out
adc
popf
jo
int
mov
or
cmp
xchg
lret
and
sti
inc
arpl
js
nop
jg
jmp
jnp
imul
mull
std
or
mov
test
btr
fists
enter
enter
add
xor
movsb
jmp
cmp
lods
inc
xchg
fiaddl
or
stos
inc
lods
icebp
mov
cs
andb
out
adc
xabort
in
push
out
dec
int3
rol
bts
jge
add
and
cmpsl
ret
mov
stc
xor
test
mov
push
mov
pop
scas
pop
clc
xor
sbb
push
je
mov
je
das
imul
mov
aas
jmp
mov
lods
push
xchg
sahf
ljmp
push
addr16
in
adc
icebp
mov
xor
scas
jl
movsl
sbb
psraw
pop
and
lods
push
arpl
cmp
push
push
scas
clc
and
scas
and
pusha
cmp
push
pop
adc
subb
and
dec
aaa
push
dec
push
shrl
xor
mov
jb
or
sti
popf
fisubl
adcl
jmp
cltd
pop
daa
pop
inc
xchg
jmp
stc
and
leave
dec
in
push
js
aad
mov
push
cs
lock
jge
add
fisubs
ffree
add
dec
ss
loopne
clc
mov
mov
negb
jns
dec
dec
inc
sbb
dec
push
dec
and
inc
clc
aas
xor
outsl
rol
cmp
clc
inc
add
in
sub
cmp
stos
mov
mov
pop
das
lock
push
cltd
mov
and
pop
call
cmp
scas
dec
enter
iret
push
inc
je
gs
arpl
and
out
jnp
cmp
xchg
bound
mov
ljmp
pop
inc
stc
mov
add
push
inc
test
fldenv
push
mov
ds
cmpsb
pop
insl
insl
push
sbb
lea
mov
jle
pop
addl
dec
xchg
pop
aad
sahf
push
add
frstor
adc
pop
aaa
mov
mov
insl
mov
pop
daa
xchg
mov
outsl
test
mov
popf
bound
pop
arpl
shll
or
add
leave
ficompl
pusha
call
int
jo
bound
sub
pop
fimuls
cmp
pop
addr16
cli
sbb
popf
popl
adc
mov
icebp
mov
enter
mov
and
jecxz
imul
dec
push
test
jne
and
outsl
rcrl
in
jl
adc
stos
fists
pop
cmpsl
cmc
inc
cmpsl
mov
aas
adcb
add
xor
ds
out
or
lret
inc
sub
inc
mov
mov
mov
xchg
popf
mov
into
lea
cltd
add
xor
add
pop
aad
add
mov
cmp
lcall
popf
shll
pop
dec
push
imul
sub
popa
imul
js
lahf
cmp
rcll
dec
pop
mov
mov
rcll
aam
mov
repz
inc
jmp
mov
loope
mov
dec
mov
rolb
pop
js
stos
xchg
imul
outsl
wrmsr
sub
js
push
and
lods
jne
and
xlat
xor
in
popa
pop
sub
imul
pop
push
or
mov
adcl
arpl
lret
shrb
clc
sbb
mov
test
pop
fidivl
lock
cmp
add
xchg
sti
addr16
push
lahf
jno
in
pusha
pop
push
test
jb
sbb
jne
les
mov
xchg
and
mov
mov
out
sbb
inc
jp
sbb
jae
popf
inc
mov
inc
sub
psrlw
push
mov
push
xchg
mov
imul
testl
je
jb
cmp
adc
and
cmp
pushf
or
mov
pushf
mov
xorl
daa
test
cmp
aam
fs
jl
sahf
cltd
push
ret
popa
inc
aad
fst
or
imul
rcrb
int3
mov
lock
enter
cmp
jp
insb
add
ss
sub
mov
sub
jae
outsl
cli
pop
lods
pop
jns
into
inc
ja
add
mov
pop
push
call
es
mov
or
push
push
adc
mov
xor
lret
sub
sti
lds
or
pop
mov
mov
push
sbb
fidivl
int
sub
mov
imul
sbb
icebp
outsb
outsl
cmp
ret
mov
xchg
cli
add
cmp
movb
dec
out
mov
cmp
mov
mov
out
call
int
test
xchg
imul
cmp
push
jmp
sub
sahf
fistps
sub
jle
inc
icebp
ret
ljmp
aam
in
sahf
ss
sti
daa
ret
and
lock
or
neg
aas
push
sbb
leave
mov
cwtl
fistpl
leave
sahf
lea
inc
push
jmp
sbb
push
cmpl
inc
test
sbb
add
inc
add
das
test
xor
xchg
sub
fcmove
xorl
stos
or
mov
mov
fmuls
cmp
jmp
lods
mov
adc
adc
dec
pop
lret
dec
pop
les
rcrl
jg
push
xor
sbb
in
iret
push
out
jns
xlat
fildll
notl
fwait
lcall
fstpt
lods
jno
and
cmp
int
push
repz
cli
andb
repz
sub
push
inc
insl
adc
lret
sahf
dec
push
fwait
xchg
push
daa
mov
in
cmp
popa
or
inc
loope
jnp
stos
sahf
dec
mov
jae
mov
inc
jno
pop
shll
xor
adc
out
js
sub
or
arpl
orl
and
mov
dec
sub
or
pop
inc
xor
dec
cmc
and
inc
or
pusha
push
pop
add
jnp
aas
orl
lret
or
mov
dec
andb
in
test
pop
popa
shrl
and
mov
pop
movsb
ret
xor
push
xchg
into
mov
push
scas
in
xor
cmc
fyl2xp1
xchg
scas
fs
inc
js
dec
add
cli
sub
fimull
dec
add
jl
imul
mov
enter
or
int
push
in
mov
gs
fwait
test
inc
fldcw
add
sub
adc
pop
xor
cld
mov
jnp
loope
xchg
pushf
inc
mov
or
test
repz
iret
fnstenv
mov
movsl
xchg
sub
cmp
xor
xor
data16
out
lcall
mov
xchg
xchg
sbb
arpl
push
imul
jo
test
and
and
dec
add
xor
pop
hlt
lahf
mov
push
adc
cld
push
jno
sub
aaa
mov
xor
inc
mov
sub
nop
ficoms
lds
add
cmp
pop
xor
and
xor
jle
shll
lret
loope
mov
dec
mov
mov
or
push
cltd
mov
adc
roll
sub
mov
repz
decl
adc
sub
sub
sub
add
into
roll
aas
inc
fwait
jle
sub
clc
aaa
sahf
xchg
adc
imul
sbb
mov
pop
sbb
hlt
pusha
xor
mov
and
mov
addr16
cmp
ret
popa
xor
sbb
xorl
popa
aad
imul
cmovl
sub
mov
mov
cmp
xor
dec
lret
sub
stos
or
cltd
cmpsb
cwtl
adc
popf
or
jmp
fsubl
in
cld
pop
ss
loop
cmp
lods
sub
sub
adc
outsb
out
and
inc
pop
cmpsl
sbb
inc
sub
push
stc
xchg
mov
test
lods
dec
divl
push
aam
inc
or
rorl
outsl
stc
sbb
inc
jge
inc
jmp
enter
mov
pop
loopne
test
mov
in
xchg
push
jbe
mov
xor
or
xchg
mov
jnp
jl
sub
pushf
aas
dec
add
mov
cltd
aaa
mov
mov
std
inc
outsb
fidivrl
cli
decb
ret
jae
pop
movsb
outsl
adc
ret
fcoms
dec
mov
test
add
cmp
movsb
add
mov
addl
fnstcw
call
pop
stc
fs
fldcw
iret
ret
xchg
ret
arpl
inc
jp
out
adc
sub
or
leave
imul
jge
cmp
mov
data16
lcall
js
imul
cmp
mov
cmp
sub
jno
add
andb
dec
lods
add
mov
jnp
mov
subl
rorl
les
push
cmp
lret
imul
fstpt
lods
lret
aam
test
sub
shll
outsl
outsb
add
push
xchg
jne
fwait
jbe
pop
xchg
adc
fnstcw
xor
mov
and
scas
std
push
testb
call
popf
sbb
pop
cmp
mov
clc
xchg
jns
rorl
jmp
jmp
sub
cmp
push
rcrl
xchg
push
setae
or
shl
mov
lcall
mov
lea
pop
fcomip
ja
leave
mov
or
cmp
js
imul
xor
adc
add
pushf
push
and
inc
mov
fmuls
mov
sub
fdivl
fcoml
cmpsl
pop
inc
adc
xchg
xor
in
lcall
stc
les
fistl
fsubs
dec
push
rcrl
mov
or
fldl
dec
enter
add
adc
mov
jmp
int
dec
es
adc
xchg
xor
mov
push
sbbl
sahf
outsb
jp
jl
dec
out
jecxz
mov
mov
insb
xchg
in
cmpsl
fwait
insb
jl
and
sbb
push
fwait
dec
js
lds
arpl
cmp
gs
add
stos
hlt
add
aaa
icebp
dec
pop
aas
gs
sub
fidivl
mov
mov
das
and
mov
or
in
add
xor
cld
xor
aas
dec
pop
loop
push
sbb
mov
bnd
imul
cmp
dec
dec
mov
daa
jmp
fisubl
out
ret
jge
add
mov
cli
popf
lret
lods
xor
lea
rorb
mov
loopne
mov
jle
in
in
es
inc
adc
lret
push
jae
jmp
repz
das
js
cmp
out
dec
sub
mov
paddb
mov
popf
cs
ret
push
lcall
jmp
ret
std
rolb
mov
mov
loop
subl
jmp
bound
and
test
dec
or
sbb
scas
dec
jne
xor
out
cmp
sbb
iret
mov
add
popf
mov
and
sbb
jno
cmpsl
lahf
or
sub
xchg
mov
jo
lods
mov
sbb
push
lock
ficomps
nop
push
nop
push
push
and
cmp
loope
add
aaa
lahf
xchg
ret
aas
push
mov
iret
sarb
xor
jmp
push
rcll
std
mov
add
inc
pop
dec
leave
jns
fwait
sbb
jl
xchg
outsl
add
aad
sub
xchg
or
pop
lcall
cli
pop
mov
gs
xchg
std
out
nop
fs
xor
dec
addl
pop
dec
ret
lret
push
xchg
jb
mov
push
add
pop
test
xor
je
sub
and
mov
add
ds
dec
and
je
repz
jg
inc
popf
shr
in
mov
xchg
cmpb
pop
and
xor
aas
das
jmp
movsb
test
sbb
and
xor
or
dec
mov
add
dec
fdiv
loope
das
mull
ds
stos
inc
pop
sub
es
jle
cli
cmpsb
dec
xor
adc
xor
push
andb
mov
movsl
lret
and
dec
jbe
cmc
lock
fistpl
fdivrl
push
int
cmp
js
pop
push
pusha
movsb
xchg
scas
leave
insb
shll
xor
orl
cwtl
cmp
dec
rorl
push
sahf
leave
dec
lock
shrl
pop
cmpsl
adc
xchg
mov
jo
dec
or
dec
jnp
mov
xor
pop
xchg
jg
pusha
push
sub
mov
jmp
add
rcr
sbb
adc
fisubrs
jno
mov
push
ja
icebp
xor
mov
fildl
sahf
cmp
loop
xchg
clc
mov
xor
idivb
or
loop
xor
mov
mov
das
movl
xor
dec
push
xchg
imul
or
add
pop
add
push
pop
sub
push
sub
xchg
mov
andb
fs
pop
jbe
arpl
xlat
aad
nop
adc
mov
shll
adc
stos
shl
mov
jge
inc
addr16
add
xchg
push
xor
inc
and
in
cmpsb
jmp
jmp
negl
imul
mov
mov
inc
or
and
adc
cmp
cmp
mov
pop
into
adc
enter
push
fsubrs
mov
repnz
mov
sub
cmp
sti
stos
cmp
test
aaa
out
hlt
lcall
push
sti
and
shrl
es
adc
repz
sub
setl
xchg
mov
cmp
push
push
pop
or
mov
popa
dec
shrl
adc
dec
inc
and
inc
outsl
je
jg
inc
test
stos
mov
test
mov
jg
xor
jle
mov
mov
add
sub
mov
rolb
shrb
repnz
jp
adc
xchg
xor
jbe
jo
in
movsb
xchg
inc
fists
add
pop
push
pop
pop
ret
sbb
jbe
mov
push
mov
jl
add
fidivrs
push
scas
mov
and
rclb
sbb
mov
sti
lcall
mov
cmp
mov
mov
dec
pop
inc
cmpsb
pop
dec
dec
push
movsb
mov
fsincos
jmp
jecxz
cmp
bt
rcrb
push
add
xchg
cld
add
push
lea
or
or
sahf
popa
sbb
fimull
bound
inc
ficomps
jmp
movsl
sti
mov
or
mov
or
sarb
sbb
mov
hlt
rdmsr
xor
or
and
push
sbb
test
fisubrl
cmp
jnp
enter
pop
outsl
arpl
mov
adc
cmc
jo
in
mov
rolb
sub
in
rorb
loopne
insb
ljmp
jb
sbb
add
popf
pop
ror
cwtl
sahf
xor
xor
insl
lcall
jecxz
inc
popf
mov
outsb
lret
mov
cwtl
xchg
or
add
mov
nop
out
cmpsw
insb
std
cmpsl
sub
cmpsb
and
mov
sahf
ss
jne
ja
dec
jmp
lods
aam
pushf
hlt
and
lahf
add
fdivp
popl
out
jbe
xchg
std
sub
mov
out
inc
mov
stos
mov
jae
fiaddl
outsl
or
jmp
nop
push
mov
xchg
aas
daa
mov
push
leave
dec
dec
aaa
push
jb
pop
rcrb
sbb
in
out
mov
fs
and
hlt
inc
test
mov
mov
push
push
test
ja
rcr
call
roll
and
shlb
and
lret
iret
in
fnstenv
sbb
push
stc
mov
mov
mov
dec
inc
xchg
and
inc
mov
cs
adc
mov
xchg
scas
xor
push
inc
jno
je
xchg
shrl
dec
xchg
insl
dec
sahf
repz
out
cmc
sub
dec
push
stc
jae
jae
cld
scas
aaa
fildl
adc
push
xor
xor
mov
outsb
ljmp
push
mov
lock
push
les
jae
dec
jo
stos
rcrl
les
in
scas
movsl
sbb
fcoml
inc
sbb
or
scas
int3
dec
and
repz
pop
mov
sub
sbb
fdiv
cmp
fiaddl
or
xchg
repz
test
adc
push
popl
add
insl
loop
lret
cld
fnstsw
in
sbb
fsubrp
xchg
push
popf
leave
xor
call
dec
fsub
sti
mov
xchg
into
or
fldcw
addr16
pop
popa
aam
pusha
xchg
inc
in
adc
push
mov
ret
pushf
lds
iret
mov
shlb
pop
xchg
pop
addr16
ds
and
jb
int3
or
aam
iret
xchg
sti
mov
inc
sti
pop
test
mov
mov
faddl
push
sub
adc
lcall
sub
sbb
mov
hlt
cmpsb
add
inc
sbb
or
xorb
enter
push
cmp
or
out
pop
inc
push
dec
cli
repnz
push
pop
xor
xchg
shlb
dec
push
and
dec
jno
gs
fbstp
mov
add
call
bound
jae
xchg
pusha
shl
xor
out
arpl
xlat
dec
inc
es
outsb
bound
mov
pop
cs
es
cmp
pop
jmp
pop
mov
ret
lock
loop
scas
sahf
mov
inc
or
mov
pushf
leave
inc
inc
mov
gs
adc
cltd
mov
inc
cltd
cld
mov
jb
mov
dec
sahf
jbe
adc
les
pop
xor
xor
add
xchg
and
scas
cmpsb
inc
or
or
push
subb
hlt
cmp
mov
mov
shrb
gs
push
mov
mov
or
jno
mov
popf
pop
insl
outsb
jecxz
mov
mov
aas
inc
sqrtps
push
jmp
cmp
or
fldl
fistpl
and
xor
cmpsl
in
sbb
pop
jno
sti
out
rcr
out
inc
gs
ret
dec
popf
push
shl
jl
stos
dec
shrb
dec
xchg
mov
loopne
cmc
sub
pop
fldt
rdmsr
jl
dec
iret
push
pop
xchg
cmp
mov
int
lock
and
cld
push
and
sub
pop
sub
pop
mov
leave
inc
push
jo
jo
lods
add
lcall
cmpsb
sub
inc
les
stc
push
shll
mov
cmp
sbb
or
mov
hlt
xchg
dec
add
jb
shrb
mov
repnz
lret
mov
dec
rorb
add
in
push
mov
sysenter
icebp
lds
xchg
loop
lock
mov
test
mov
push
ds
loope
call
cld
rorl
stc
xchg
mov
pop
xchg
xor
fimull
xor
jp
lock
pop
and
mov
jne
imul
pushf
pop
pop
sub
mov
mov
jle
shll
stc
mov
jg
inc
cwtl
pushf
inc
cltd
std
add
outsl
pusha
mov
fwait
or
ljmpw
mov
mov
and
jmp
int3
and
test
cld
aam
sbbb
xor
sbb
ja
shl
jmp
xchg
mov
add
mov
mov
notl
ficompl
dec
sar
inc
lock
imulb
fiaddl
das
loopne
pop
xchg
or
mov
jle
dec
mov
inc
loopne
and
xorl
call
push
in
pop
rcrb
inc
push
hlt
fwait
dec
xchg
aad
pop
pop
adc
inc
gs
jno
add
and
leave
cltd
jne
aaa
mov
pop
xor
gs
mov
neg
mov
dec
mov
mov
mov
ret
ds
dec
mov
dec
push
movsb
jecxz,pt
jnp
pop
fwait
xchg
mov
imul
mov
scas
lahf
xor
movsb
fisttpl
jmp
push
roll
call
xor
sub
cmc
or
and
sar
lret
mov
mov
dec
arpl
mov
or
pushf
jae
repz
test
inc
jo
cs
pop
out
add
rcll
mov
xchg
xor
loope
movsb
adc
add
xor
dec
loope
xchg
in
leave
inc
xchg
sub
add
jecxz
push
jmp
loopw
dec
cmp
xchg
and
sub
pusha
jnp
push
sbb
fbstp
and
orb
pop
pushf
pop
lahf
mov
hlt
stos
sbb
outsb
movb
mov
mov
add
fld
push
xor
inc
push
or
mov
and
outsl
inc
jno
lea
bound
mov
ret
jns
js
andb
push
mov
inc
cmp
scas
sbb
jbe
xchg
test
pusha
jg
or
sti
in
cwtl
leave
inc
sbb
inc
js
daa
xchg
pusha
add
loop
nop
sub
mov
cmp
cmp
ficoml
add
cli
leave
cld
stc
gs
stc
testl
mov
push
dec
pop
sub
push
jecxz
test
in
push
add
cwtl
xchg
cmp
pop
mov
push
test
push
jge
outsl
sub
push
divl
sub
lret
mov
pop
int3
and
les
imulb
insb
xlat
inc
dec
rcpps
fmul
xor
jnp
push
icebp
js
movl
mov
mov
int3
es
xor
das
pop
das
vmwrite
push
mov
push
dec
sahf
clc
mov
rol
cmpb
pop
push
xor
jl
sub
mov
out
xchg
or
ja
orb
insl
js
in
lods
loopne
lret
adc
outsb
push
jno
mov
in
cmp
xchg
xchg
mov
push
aas
jns
in
rcrb
ror
int
dec
push
push
cmp
orl
fdivs
leave
aad
sbb
mov
stos
lret
mov
jmp
and
jg
cmp
in
xchg
scas
pop
cli
es
popa
sbb
xchg
fwait
mov
mov
xlat
xor
std
ret
mov
popa
or
imul
xchg
mov
xchg
inc
dec
out
or
push
inc
sub
cmp
cmc
imul
add
adcb
in
sbb
out
sbb
xor
pusha
ret
addr16
mov
mov
faddl
orl
or
loopne
cmp
dec
leave
mov
adc
mov
add
icebp
xchg
jae
jno
aas
push
sub
loopne
jo
ret
outsl
sbb
mov
dec
sbb
mov
adc
cmp
shrb
lret
sbb
imul
sbb
or
cmp
pop
cmc
jge
pop
inc
xchg
xor
outsl
cltd
addr16
xchg
and
mov
aaa
fadds
adc
and
xchg
fdivrl
in
movsl
pop
mov
sbb
into
push
xchg
stos
xor
adc
sets
sub
outsl
shll
mov
mov
push
or
jns
or
mov
inc
sbb
xchg
mov
push
xchg
je
fs
push
push
mov
mov
sbb
ret
adc
xchg
pop
push
loop
in
xchg
sub
test
xorl
sbb
lahf
outsl
adc
stos
out
shll
les
lahf
bound
jmp
sbb
gs
fnsave
movsl
insl
fdivrl
push
mov
int
std
xchg
push
or
popf
xchg
jae
mov
xchg
xchg
sbb
sbb
and
push
adc
lods
out
fiadds
cli
push
mov
xchg
jl
lock
stos
gs
sbb
popa
outsb
in
xchg
mov
outsb
pop
xchg
dec
xchg
push
xor
loopne
pusha
lcall
movsl
mov
fwait
push
aad
cld
xor
push
sub
xor
cmp
cwtl
aam
mov
aas
imul
dec
lcall
into
test
jbe
gs
orb
adc
ds
push
dec
iret
add
mov
push
xor
popa
mov
mov
cld
adc
mov
mull
enter
mov
cmp
lock
je
call
outsl
iret
and
in
add
xlat
xchg
sub
jno
or
and
push
mov
pushf
sar
or
insl
mov
jbe
jae
inc
dec
xor
jns
mov
jp
ljmp
loop,pt
ljmp
push
lret
xchg
pop
out
mov
push
movsl
loope
jbe
out
add
mov
jecxz
in
jo
mov
fcmovu
out
jne
pop
out
inc
loopne
mov
dec
mov
lods
mov
inc
mov
push
mov
xchg
sbb
aas
lcall
mov
ret
in
mov
out
or
stc
push
stos
jb
lcall
mov
cmp
and
inc
and
mov
loopne
bound
xchg
in
sbb
subl
and
push
lods
lcall
imul
pop
repz
dec
rcrl
jns
mov
iret
sub
adc
push
ficoml
dec
ja
subb
xchg
jecxz
mov
dec
fwait
test
jge
mov
pop
cwtl
dec
sbb
in
xchg
rcrl
leave
cld
pusha
cmp
add
add
sar
adcl
mov
cmp
sbb
rorl
sub
mov
les
mov
jnp
jmp
fisubl
and
push
mov
mov
xchg
inc
adc
push
xchg
push
test
mov
fwait
dec
push
jmp
daa
lods
lahf
mov
adc
mov
insb
jecxz
arpl
pop
dec
mov
bound
xor
push
mov
fiaddl
fdivp
push
insl
not
cmp
adc
adc
ss
sti
idiv
mov
pop
cmc
ret
aam
or
jg
imul
cmp
rcrl
aas
sbb
mull
mov
inc
pop
and
imul
ja
stos
mov
addr16
out
mov
mov
sbb
adc
xchg
inc
aas
fnstcw
and
pusha
sbb
dec
mov
loopne
pop
cmp
lahf
mov
inc
add
sbb
js
fucomi
xlat
push
ds
cmp
cwtl
fisubl
lcall
and
ja
sub
not
je
jmp
lahf
dec
rcll
in
fdivp
data16
outsb
sbb
gs
dec
mov
loop
push
clc
adc
mov
adc
test
fmul
orl
adc
out
movsb
mov
cmp
fsub
sbb
pop
adc
dec
das
cld
jno
cmp
sti
movl
sahf
xchg
add
jle
sub
mov
std
jnp
fbstp
outsl
and
push
mov
mov
jp
jne
pop
test
clc
aas
js
fstpl
push
jg
cmp
inc
leave
iret
jl
mov
inc
daa
lret
cmp
insl
shlb
pop
jno
sub
push
daa
push
stos
int3
hlt
xor
cld
lret
mov
and
push
dec
jae
mov
xchg
adc
xchg
push
bound
out
int
lret
data16
mov
push
or
jb
daa
popa
test
cmp
pop
test
daa
fdivrl
loop
sahf
nop
arpl
mov
cmpsl
mov
repnz
call
stos
adc
imul
cld
adc
jl
sbbb
dec
mov
cmpsb
mov
xchg
loope
out
cs
or
pop
push
push
fistps
sbb
mov
test
jp
shlb
ret
ljmp
mov
jnp
cmp
ljmp
aam
jge
fisubs
loopne
ja
mov
or
dec
jecxz
aas
adc
rorl
pop
outsb
add
xor
jmp
add
or
test
mov
ja
xor
mov
sar
mov
rorb
cli
data16
mov
pop
dec
cwtl
add
inc
pop
mov
adc
js
jae
sub
std
sbb
mov
add
daa
je
sbb
hlt
adc
xlat
push
or
ret
mov
xor
arpl
inc
mov
in
into
rorl
dec
leave
out
fwait
push
sbb
push
mov
mov
scas
dec
hlt
in
add
or
xchg
dec
test
sub
dec
add
shlb
das
inc
ret
or
mov
xchg
insl
and
xlat
fildl
js
xchg
hlt
out
repnz
mov
sahf
jae
mov
imull
jg
aam
or
mov
jl
add
adc
mov
jae
sbb
or
pop
pushf
mov
push
in
xchg
mov
inc
cwtl
sbb
cmp
andl
sbb
fsubr
add
ret
and
xor
cld
lret
shll
movsl
gs
jl
shll
int3
daa
ljmp
mov
arpl
sbb
sub
sub
mov
mov
cmp
call
xor
je
aas
mov
ret
out
pop
out
mov
jb
jae
out
mov
cmc
leave
mov
fstl
xchg
xchg
or
clc
xchg
xchg
mov
sub
adc
stos
jno
push
xchg
nop
fisttps
clc
fidivrs
mov
daa
ds
imul
add
mov
loope
xchg
jnp
and
out
cmp
cmp
loopne
scas
movsl
test
push
stos
mov
leave
or
roll
xchg
adc
mov
pop
cmpl
add
test
jo
loop
cmp
shll
xor
in
add
pushf
fcmovu
dec
add
test
adc
ret
pop
xlat
out
movl
jmp
dec
roll
mov
cmp
jne
movsl
mov
ja
out
sbb
and
mov
ss
jmp
fcoml
adc
lret
cmp
in
leave
ss
gs
xor
xchg
dec
ret
xchg
push
sub
mov
xchg
jle
lret
lock
jbe
loopne
sub
mov
loop
xchg
rorl
cmp
iret
add
insb
adc
lahf
cs
mov
push
cli
adc
xchg
lock
jns
dec
mov
into
outsl
dec
cwtl
andb
fidivrl
or
test
cwtl
jae
sbb
cmpsb
adc
xchg
xor
ret
sbb
ja,pn
and
enter
push
pop
push
dec
call
out
mov
ljmp
testl
mov
jl
sub
loop
fists
loop
jae
mov
dec
pusha
and
cmpb
push
inc
sub
jnp
mov
sub
mov
cwtl
xchg
in
jp
pop
jp
pop
fisubl
adc
pop
test
cmpsl
cli
mov
hlt
dec
dec
mov
sbbb
out
iret
ficompl
inc
sbb
ljmp
insb
cs
arpl
and
mov
div
rcll
stos
insl
jmp
movsb
cmpsb
jb
pop
popf
mov
mov
orb
fs
mov
fcompl
insb
sbb
mov
xchg
adc
push
cmc
ret
jmp
pop
pop
enter
in
mov
aas
sti
sbb
insl
lret
pop
or
popa
adc
clc
decl
aas
push
push
add
ljmp
cmp
outsl
pop
daa
lret
jae
fidivrl
jbe
xchg
sbb
gs
add
push
sub
cmp
and
dec
jns
cmp
sub
or
sub
pop
pop
jmp
out
adc
test
scas
dec
mov
sbb
cmpsb
pop
out
mov
dec
pop
xor
inc
in
mov
fwait
mov
aas
jecxz
add
sti
xor
addr16
sub
sti
and
pop
in
push
or
cld
ds
test
stc
loope
sub
pusha
loop
add
or
add
stos
pop
inc
jl
or
test
fstl
in
lods
push
in
xor
in
jae
or
inc
push
scas
cltd
and
lds
jb
jns
icebp
imul
inc
sbb
mov
daa
pop
ja
inc
inc
sub
or
daa
iret
leave
and
hlt
dec
xor
movsl
in
add
fisubl
stos
xor
jmp
mov
sub
mov
icebp
push
decb
jmp
cld
lret
negl
mov
sbb
rclb
cmp
push
test
jo
mov
inc
sbbb
mov
mov
dec
sahf
ficomps
in
mov
fistpl
lret
int
incb
mov
cmp
cltd
sbb
in
mov
ss
push
jmp
stc
ret
aam
push
das
mov
xchg
js
mov
aad
scas
push
std
mov
push
or
push
out
dec
adc
aas
mov
push
test
lsl
loope
adc
dec
sbb
clc
sub
repz
xor
mov
sub
push
inc
mov
adc
adc
fs
leave
addl
push
and
fdivr
mov
cmp
je
sti
hlt
inc
js
dec
movsl
mov
cmp
fcompl
jmp
jnp
or
mov
movsl
aas
pop
repnz
fs
ret
mov
rol
inc
xchg
rcll
ret
adc
pop
pop
pop
nop
in
movsb
push
sahf
out
aad
imul
daa
dec
jo
popf
pop
ljmp
push
adc
flds
enter
test
gs
mov
loopne
xor
hlt
lods
fsubrl
sbb
cmp
repz
sbb
ds
enter
or
pop
addr16
mov
xchg
cwtl
pop
daa
int
pusha
xchg
inc
cmpsl
pop
mov
icebp
std
repz
imull
xchg
rorb
test
std
or
push
mov
sarl
add
pushf
scas
jp
mov
sbb
sbbb
sahf
popf
ljmp
inc
negb
hlt
call
dec
pop
jmp
loope
rcll
shr
je
sbb
bound
pop
int
mov
rclb
mov
cmpl
cmp
mov
mov
arpl
into
pop
fimull
fdivrl
testl
int
and
outsl
daa
testb
add
pop
fsubl
fsubr
mov
dec
lock
cmp
xchg
in
lcall
cmp
pop
sub
incb
loop
iret
add
jno
pop
or
lahf
or
loope
scas
outsb
aaa
xlat
andl
push
dec
push
test
outsb
test
and
scas
mov
or
jge
iret
mov
cmpl
mov
jp
icebp
mov
add
scas
adc
jno
jge
fmuls
test
test
enter
mov
inc
xor
push
loope
mov
out
sbb
fisubrl
jbe
ljmp
inc
test
jp
arpl
sub
popf
loope
das
adc
jl
loopne
mov
inc
loopne
jge
add
mov
adc
enter
push
sub
mov
outsl
sbb
pop
or
jno
int
fstl
push
add
sbb
test
xchg
sti
insl
mov
jne
add
sbb
insb
lea
bound
je
or
sbbb
mov
push
rolb
push
pop
push
fcoms
xchg
in
out
add
ja
mov
mul
sbb
mov
xchg
test
sub
mov
xchg
push
adc
push
sub
inc
push
cli
in
mov
pushf
jns
test
mov
sahf
sbb
push
xchg
es
push
fistpll
xchg
adc
push
or
adc
ljmp
dec
adc
pop
loop
jge
xadd
push
mov
cmp
hlt
xor
dec
test
or
xchg
mov
clc
fwait
jge
xor
adc
dec
dec
in
cmp
push
rcr
aaa
mov
nop
lret
push
insb
in
xacquire
mov
test
idivb
aad
cmovae
dec
out
mov
enter
sub
cmpsb
lods
pop
shrb
adc
dec
ja
mov
mov
mov
and
mulb
xchg
pop
cmpsb
pushf
pop
lea
jecxz
enter
sub
into
xchg
cwtl
push
or
pop
dec
or
adc
inc
pop
and
xor
jecxz
push
adc
lods
imul
outsb
mov
adc
and
inc
adc
inc
std
xor
mov
stos
xor
cs
mov
clc
je
or
scas
pop
lock
mov
es
mov
cmp
iret
dec
add
icebp
xor
sahf
movsl
push
ljmp
add
mov
xor
cli
jecxz
dec
sub
int
add
cwtl
pop
and
adc
hlt
and
lock
pop
pop
pop
mov
mov
ficoms
dec
or
inc
mov
jg
cmp
test
in
cmp
loope
es
add
sub
fstpt
inc
pop
addr16
xchg
ja
cmp
xor
je
jle
fldl
mov
faddp
bound
fisubl
inc
jb
pop
push
pop
movsl
in
out
add
rorl
in
sub
ljmp
sahf
jle
sub
jae
cmpsb
push
cmp
arpl
pusha
repnz
enter
mov
add
test
mov
rcrl
push
fnstenv
mov
mov
and
insl
adc
fwait
pushf
repz
out
pop
push
pop
xor
daa
dec
sub
or
mov
sahf
jne
inc
push
add
or
lret
mov
adc
jnp
hlt
aas
mov
push
cmp
pusha
jae,pn
xor
shrb
fstpl
push
fwait
sbbb
inc
int3
cmp
js
xchg
jnp
ljmp
jbe
and
xchg
xorb
ret
hlt
ret
mov
and
adc
jns
add
adcl
dec
lahf
cs
xchg
sahf
daa
cmpb
lods
jae
mov
mov
andl
ljmp
pushf
sub
pop
popf
mov
jp
test
fnstenv
xchg
iret
xchg
push
scas
push
sbb
call
pop
mov
test
jb
jne
mov
sbbb
push
xor
jb
xor
insl
sub
daa
inc
cmp
ss
hlt
push
mov
dec
pop
nop
int3
pop
out
adc
gs
push
rcrl
daa
cmp
test
xchg
push
clc
addr16
or
test
nop
mov
fs
and
inc
jne
adc
js
xchg
lret
cmpsb
jno,pt
mov
outsl
adc
stos
imul
repnz
inc
nop
or
sbb
dec
jl
ja
stc
push
loop
and
decb
mov
sub
movsb
and
inc
mov
mov
inc
ficomps
clc
enterw
adc
test
test
dec
das
mov
stos
cmp
repz
fwait
clc
pop
jne
pop
pop
and
jl
mov
xchg
jae
lret
stc
aam
add
call
mov
or
sbb
push
mov
or
test
sbb
bound
mov
cmp
xchg
cmp
add
insb
in
das
fcmovu
lcall
addr16
enter
xchg
outsb
out
jbe
iret
fdiv
in
push
add
loope
jnp
cwtl
scas
push
cmp
lock
mov
fmull
out
fs
enter
push
pushf
mov
pop
cmpsl
pop
gs
daa
pop
das
and
xlat
push
mov
test
xorl
incb
sbb
sbb
jecxz
inc
mov
shlb
cmc
and
inc
adc
pop
push
arpl
insl
aas
sbb
xlat
insl
jns
mov
in
ret
shll
mov
push
ja
pop
jge
sbb
jmp
mov
push
pop
int
or
shl
xor
icebp
inc
inc
dec
add
int3
les
xor
sbb
mov
ret
lds
ret
pop
sbb
shll
decl
rolb
int
dec
mov
jne
shl
add
cmp
xor
inc
insl
in
and
adc
mov
and
push
test
mov
stos
pop
jge
mov
lock
mov
add
test
jge
stc
mov
xchg
sub
cmp
loope
out
sbb
xchg
test
ret
ss
stos
adc
jns
test
push
mov
xchg
cmpsl
int3
pop
ds
arpl
rcll
leave
xor
and
sub
sbbl
subl
and
mov
icebp
sbb
and
mov
out
out
dec
or
dec
outsb
clc
xor
fwait
mov
shlb
test
pop
jnp
xchg
ds
adc
cmp
jecxz
xchg
pushf
or
pusha
push
jmp
pop
pop
add
push
js,pn
pop
push
cli
inc
sub
sub
jle
or
sbb
pop
pop
cs
mov
fidivrs
mov
or
ja
pusha
stos
or
out
mov
arpl
repnz
jle
inc
xlat
test
push
fildll
mov
jae
mov
jne
push
pop
movsb
lret
pusha
nop
rol
fsubs
and
adc
fsubl
movsl
leave
cmp
fsubr
cmp
push
loopne
jne
push
sub
mov
orl
mov
mov
mov
push
popf
rclb
mov
jle
adc
stos
in
add
sub
cli
jmp
inc
test
mov
int3
dec
lods
mov
sub
pop
push
jo
lock
push
dec
fldcw
int
insl
xor
cld
cld
jns
test
cmp
jp
notb
in
push
in
das
in
jecxz
xchg
xchg
mov
push
fucom
push
movsb
shld
adc
cmp
bound
xchg
adc
xor
das
lock
cmp
cmp
sbb
fnsave
jne
xor
mov
jae
in
cmp
stos
dec
data16
mov
jp
mov
lods
xor
outsl
xchg
nop
rcrb
aad
rorl
xchg
jo
fistps
jl
popf
mov
aas
aaa
push
mov
adc
dec
jg
out
mov
outsb
dec
pop
mov
cmc
or
lret
cmp
leave
mov
and
cli
sbb
xchg
insl
xchg
cli
cltd
and
xchg
xchg
movsl
inc
push
jg
sub
inc
iret
cli
roll
xor
pusha
sbb
push
xor
icebp
into
loopne
lea
mov
fdivrp
mov
movsb
fbld
into
mov
dec
and
inc
add
add
jle
xchg
mov
aad
push
dec
push
or
sub
into
jne
mov
or
inc
into
mov
cmp
inc
dec
mov
lods
pop
aam
sub
es
cmp
mov
aam
adc
adc
movsb
sbb
sbb
mov
rcrb
mov
movsb
jnp
loopne
xor
in
or
int3
jbe
les
arpl
sbb
mov
orb
or
inc
loopne
popf
sbb
jae
outsl
stc
pop
and
or
mov
por
sqrtps
loopne
repnz
jl
cwtl
leave
sub
push
stc
xorb
mov
aad
ja
loop
fnstcw
stos
lods
inc
fiaddl
popa
pop
lea
jle
pop
jge
dec
dec
and
shl
lahf
mov
inc
xor
xor
aas
sub
push
mov
in
popa
mov
xor
insb
imul
cs
fdiv
lods
inc
xchg
aad
cld
jo
outsb
adc
stc
push
jg
add
push
fsts
xchg
aam
movsl
push
fbstp
andl
push
dec
sahf
push
insl
or
pop
push
in
push
pop
mov
push
add
jg
imul
in
sub
cwtl
cs
adc
and
push
mov
mov
mov
decb
mov
dec
xchg
orl
repz
jae
roll
pop
mov
arpl
or
lock
iret
icebp
sbb
stc
pusha
ja
es
xchg
dec
test
jl
mov
icebp
imul
mov
rclb
xor
sarl
mov
xor
enter
test
dec
push
cmp
cmp
mov
mov
push
jmp
sbb
xor
mov
or
cmp
cmp
div
jg
pop
int3
inc
cmp
faddl
leave
pop
add
pop
loope
fsts
xchg
mov
add
andb
inc
and
imul
sub
push
inc
ret
mov
cltd
pop
push
cmp
in
and
daa
push
movsl
sbb
mov
dec
jnp
sti
adc
mov
dec
ficompl
mov
jecxz
sub
mov
mov
fcoms
pop
sar
fisubrs
and
cmpl
xchg
gs
aam
cmp
inc
jle
and
add
sbb
add
arpl
fildll
cmp
xchg
cmp
xor
adc
add
sub
jp
subb
clc
xchg
dec
xor
dec
lret
cmp
mov
mov
and
push
stos
out
cmpsb
dec
or
cmpsb
and
jns
adc
adc
sbb
or
or
push
sub
ljmp
icebp
jo
xchg
dec
aaa
scas
test
push
adc
and
push
lahf
lret
mov
stos
mov
and
mov
cmpsl
xchg
mov
in
pusha
or
lods
cmpsb
dec
andl
cmp
add
fdivl
push
les
and
cwtl
int3
frstor
pop
dec
out
faddl
jle
sbb
push
mov
mov
xchg
jae
and
ret
pop
mov
cmp
sbb
repnz
add
xchg
js
mov
jp
xchg
enter
jno
cmp
les
dec
sbb
ffree
ret
push
repnz
adcb
push
pop
pushf
inc
jmp
pop
cmp
cld
xor
mov
data16
dec
xchg
xor
shl
out
inc
add
cmpl
jae
das
adc
fs
ds
jle
fs
sbb
sub
scas
scas
adc
mov
mov
ljmp
xchg
cwtl
pop
dec
into
xchg
add
iret
jg
sbb
cs
cld
sbb
mov
out
and
jecxz
mov
in
cmpl
call
xor
bound
repz
or
lods
pushf
adc
rolb
repnz
mov
mov
ss
mov
push
rcll
nop
daa
mov
xchg
mov
sbb
js
imul
cmpb
bound
bound
clc
shl
jmp
xchg
addr16
pop
js
push
pop
bound
adc
push
lret
sbb
jp
add
mov
push
ss
fisttps
xchg
adc
mov
jge
xchg
adcl
sub
mov
out
xor
out
jecxz
int3
loope
negb
add
sbb
test
sbb
jge
mov
xchg
mov
xlat
mov
pop
mov
std
into
testb
xor
insl
dec
jl
std
lcall
adc
loopne
jp
push
dec
les
sarb
dec
sub
jle
repz
jns
add
pop
inc
cwtl
outsb
mov
pop
add
mov
popf
xchg
xorb
add
jne
adc
jns
xlat
stc
ret
cs
je
ss
adc
fisubrl
ds
test
push
in
pushf
sbb
and
ror
lcall
jne
sub
add
in
pusha
and
daa
lods
pushf
jecxz
push
repnz
xchg
push
mov
adc
mov
mov
mov
hlt
subb
data16
xchg
jecxz
shlb
pop
addl
mov
pop
xchg
add
imul
in
push
push
stos
xor
add
imul
fiaddl
iret
inc
and
outsb
loop
adc
add
mov
pop
scas
pushl
sub
xchg
add
ret
cltd
dec
addr16
rorb
inc
inc
aas
iret
fadd
aaa
xlat
scas
inc
jae
xor
push
adc
push
jmp
pop
scas
inc
or
lret
sarb
cmpsl
xchg
sahf
movsb
push
insl
xchg
adc
dec
sbb
jecxz
out
leave
in
popa
repnz
movsb
cwtl
jl
xchg
aam
test
int3
push
shll
pop
sub
pop
xor
mov
or
leave
dec
stos
push
inc
scas
dec
mov
imul
enter
rorl
testl
sti
or
cwtl
push
out
call
sbb
outsb
scas
xchg
sahf
pop
sbb
in
lds
add
lahf
and
lahf
fsubrs
test
xchg
insb
mov
das
test
cmpb
popf
idivl
xchg
jmp
pop
xor
imul
stos
insb
push
xchg
sub
rclb
sahf
sbb
mov
jns
pop
movsl
jge
jae
lret
test
xchg
cmp
loopne
sarl
xchg
fstl
pusha
cli
and
dec
int
sbb
and
cmpsb
jo
add
test
scas
pop
mov
jo
fwait
cmp
cltd
xchg
rcrb
rcrb
push
mov
iret
cmp
scas
stos
popa
push
sub
mov
aas
push
cmpl
hlt
dec
cmp
xor
push
shl
inc
movsl
pop
jge
movsb
cmpsb
or
xchg
mull
mov
nop
dec
shlb
sti
push
mov
out
jns
mov
xor
aam
popa
insl
mov
pop
sbb
jno
inc
sbb
xchg
pop
push
mov
dec
jo
pop
shl
fcmovb
add
pop
repnz
mov
push
aad
dec
xchg
or
ljmp
cmpsb
adc
push
test
mov
mov
jo
pop
xor
loopne
or
std
pop
shlb
pop
in
or
mov
dec
add
movsb
adc
call
in
loopne
jbe
stos
jns
in
nop
jp
dec
int3
and
fs
inc
push
cli
ret
jp
cmc
push
mov
lret
das
ret
add
fxch
rcl
shrl
inc
into
jo
movsb
and
in
sub
in
push
pop
push
call
inc
cmp
insb
cltd
mov
cmc
mov
push
data16
cmp
push
push
dec
xchg
inc
cmc
push
jg
pop
notb
rcll
aam
js
xchg
dec
mov
ds
idiv
pop
in
sbb
jbe
es
out
mov
dec
in
add
hlt
push
and
or
test
in
cmp
jb
xlat
cmc
or
outsb
inc
int
out
lea
stos
mov
cmp
in
rcr
insl
aas
add
add
push
jno
pushf
xor
sti
arpl
push
cmpsl
hlt
int3
inc
push
popa
dec
out
and
mov
xchg
shl
inc
fs
pop
dec
ss
test
push
cmp
push
mov
dec
mov
push
mov
pop
and
xor
ficoms
pop
inc
jl
inc
adc
jbe
sub
in
and
fsubrl
push
dec
fsubrl
pop
pop
fwait
sub
dec
imul
in
popa
jecxz,pt
and
push
and
inc
jl
outsl
jns
mov
mov
xchg
mov
mov
sub
andl
lds
xchg
fidivl
fstpl
ds
cmp
or
or
loopne
cmp
mov
cmc
or
les
jae
inc
loop
fwait
jno
orb
cs
cli
shl
and
xchg
lea
orl
lret
xlat
sbb
adc
mov
cmc
repz
sub
pop
or
adc
push
adc
mov
sub
push
mov
int
fs
or
aam
lds
and
adc
jo
adc
xchg
pushf
mov
call
mov
in
std
xchg
jecxz
enter
cs
test
ret
test
out
nop
mov
shl
mov
movsl
cmpsl
mov
pop
setge
mov
dec
cmp
push
mov
leave
in
xchg
sti
insb
push
pop
mov
jmp
int
mov
add
ret
aam
mov
mov
popa
or
push
orb
in
pop
mov
ljmp
inc
xchg
mov
inc
shll
push
mov
xchg
dec
stos
pop
mov
outsl
xchg
pop
int
lahf
gs
out
jb
popa
dec
cmpsl
sbb
das
inc
ret
push
add
adc
out
push
or
push
cltd
cld
imul
ljmp
jns
test
fisubrl
mov
xor
sbb
xchg
cmc
inc
sbb
and
dec
into
pop
or
add
xchg
jne
out
hlt
js
popf
dec
xchg
pop
fs
inc
out
mov
jnp
movsl
loop
shlb
aas
test
outsb
int
mov
jo
sbb
pushf
in
cmp
loope
dec
xor
push
push
push
inc
sbb
hlt
or
dec
adc
movsb
jae
jns
sub
leave
addr16
ss
fsubrl
push
shrl
outsl
inc
shlb
mov
call
cmc
cmpl
jno
pop
das
mov
add
in
xorb
jmp
mov
pop
jg
popf
cmpsb
mov
add
adc
popw
repz
loope
shlb
mov
lock
and
mov
in
ret
xchg
lcall
dec
dec
icebp
jle
popa
push
cli
xor
imul
js
aaa
fstpt
ficoms
adc
bound
jno
int3
pusha
test
dec
pushf
retw
xchg
stc
loope
pop
push
mov
sub
aad
insl
inc
aaa
test
mov
or
or
lock
mov
into
inc
add
jp
add
push
les
push
cli
jb
cli
pop
adc
popf
fcmovb
ja
jnp
jo
js
mov
sub
jmp
mov
or
test
nop
inc
sbb
pop
repz
inc
sbb
pop
mov
sub
jnp
cmp
mov
or
adc
push
imul
js
lret
mov
test
cld
mov
daa
dec
add
inc
sahf
push
dec
nop
add
idivl
mov
fcomps
or
shll
add
xchg
movsb
cmp
hlt
inc
mov
dec
enter
jbe
dec
stos
and
imul
dec
out
movsl
addr16
mov
jae
sub
pop
iret
pop
out
lock
sbb
popf
mov
mov
rclb
adc
push
mov
mov
sbb
ret
push
data16
mov
and
lds
sar
fidivrl
mov
lock
jae
loopne
and
jl
jbe
in
data16
jno
les
outsb
cmc
outsl
xor
inc
movsl
movl
idivl
and
insb
inc
mov
push
pop
xor
stos
pop
jecxz
jg
aad
scas
es
stos
fdiv
in
rorl
out
inc
xchg
sbb
jns
pop
dec
adc
orl
push
loop
mov
repnz
mov
and
int
sahf
std
or
push
and
cmpsl
dec
jmp
mov
jmp
js
push
movl
sar
enter
xor
and
dec
push
xchg
dec
cmp
insb
stos
mov
daa
xchg
daa
sbb
popa
xor
mov
adc
sbb
push
je
idivl
rorl
imul
stos
jnp
mov
sbb
mov
rorl
mov
cmp
fdivr
inc
dec
pusha
mov
test
pop
gs
aaa
in
lods
inc
jns
jae
aas
and
out
cwtl
push
xor
push
pop
cmp
dec
arpl
cwtl
pop
mov
iret
mov
jne
add
rcrl
pop
idiv
fwait
xor
dec
sbb
mov
push
sub
sub
pop
push
mov
idivl
push
test
fucom
adc
test
push
das
cmp
ret
mov
mov
sarl
loope
pop
adc
repz
xor
or
dec
outsb
ret
ljmp
jmp
fdivs
rclb
xchg
daa
shlb
fwait
test
in
mov
jns
daa
push
mov
aaa
xchg
sub
imul
push
lods
adc
sub
adc
mov
scas
cld
add
leave
fistl
xchg
cmp
xor
inc
outsb
bound
lret
iret
dec
pop
and
aaa
ljmp
fnstcw
sub
movsl
scas
mov
subb
sbb
stc
adc
scas
ds
std
loope
popf
ret
call
movsb
sbb
mov
roll
or
mov
jb
in
sub
adc
ja
leave
xchg
adcl
ss
outsb
pop
fdivrl
adc
adc
cs
jb
cmpsb
jb
xor
fwait
nop
xor
push
inc
ljmp
imul
or
out
or
shl
or
cmp
out
cmpsb
fs
std
pop
shrb
test
dec
ret
sahf
jne
mov
jge
xor
push
std
xor
mov
repnz
adc
add
stc
mov
outsb
imul
fcoms
dec
xchg
flds
sti
int
cmp
xchg
ss
add
dec
inc
adc
int
inc
sbb
and
jmp
stos
cmp
into
test
orb
mov
dec
dec
mov
add
cmpl
loop
test
insl
jne
ds
pop
fldenv
stos
lea
scas
cwtd
daa
jae
mov
lods
les
mov
outsb
dec
dec
ret
test
push
shlb
test
push
scas
mov
std
sub
adc
cmpsl
adc
mov
add
sbb
mov
cmp
or
pop
sub
mov
scas
push
aas
inc
sub
mov
aaa
push
rolb
sbb
lret
push
xor
call
push
cli
and
sub
shr
jg
lods
stos
jmp
js
push
test
aas
add
imul
jp
mov
dec
imul
inc
popf
sub
sub
jo
xchg
add
leave
ljmp
into
xchg
mov
call
push
or
arpl
mov
mov
popa
mov
xchg
mov
std
addr16
js
jno
or
cmp
dec
sbb
daa
pop
pop
sub
or
loope
xchg
lods
jbe
mov
or
inc
ret
push
and
inc
mov
leave
pusha
stos
pop
sbb
out
sbb
jge
loop
add
mov
add
sbb
gs
jge
cmpsb
inc
inc
push
sbb
adc
mov
sar
mov
sbb
fdivrl
lods
mov
xor
sub
rolb
jp
push
movsl
xor
hlt
ret
out
adc
popf
mov
outsb
xlat
shlb
scas
jns
push
push
fmull
adc
push
out
xchg
mov
popa
inc
outsb
and
push
loopne
cmp
add
aad
jbe
es
sti
scas
lcall
lret
or
sbbb
pusha
call
mov
mov
push
sbb
sahf
fistpl
movsb
je
mov
out
nop
cli
faddp
dec
in
dec
cwtl
pop
sub
adc
lret
mov
aam
movsb
push
sub
adc
imul
sarl
in
rcll
or
sahf
loop
cltd
push
dec
inc
dec
push
mov
sbb
xchg
xchg
ficoms
pop
xor
fisubrl
add
hlt
sbb
decb
stos
lods
jb
sbb
loope
cmpsl
lcall
cltd
pop
dec
mov
cli
je
push
rcll
or
lret
adc
mov
test
mov
mov
cwtl
mov
mov
movsl
jle
imul
jmp
inc
dec
mov
test
push
add
pop
lcall
xchg
jae
call
in
and
negl
cmp
or
mov
hlt
mov
aas
sub
jg
ret
in
movzwl
imul
jmp
mov
xchg
test
into
in
sahf
inc
jns
enter
xchg
or
xchg
stc
pop
out
into
popa
mov
rcrb
jg
jb
mov
outsb
movsl
addl
mov
rclb
mov
mov
pop
lcall
mov
sub
and
imul
cmp
lea
aad
test
jns
xchg
lods
cmc
leave
inc
sub
fcomp
and
mov
lcall
pop
lods
inc
inc
lock
mov
aad
fwait
push
jl
adc
hlt
mov
frstor
test
mov
adc
in
repz
lods
into
lods
mov
hlt
and
xlat
dec
jbe
insl
rcll
mov
mov
scas
lret
add
add
xchg
xchg
daa
int
jne
stc
lcall
inc
out
cmpsl
out
xlat
mov
mov
aas
or
push
cltd
sti
repnz
in
jg
shlb
and
pop
sbb
pop
xchg
sub
push
repz
push
mov
sbb
xchg
cmp
adc
adc
sahf
cltd
jns
pop
xchg
jae
or
fidivrs
jb
mov
jg
cmp
in
sbb
lea
push
jge
filds
jmp
push
lsl
dec
enter
in
adc
loopne
or
aad
aas
or
sub
mov
jg
sbb
popf
stc
push
popf
inc
aaa
xor
stos
sbbl
movsb
sbb
leave
sub
sbb
jo
ret
push
cwtl
std
in
imul
or
xchg
xor
lock
mov
mov
aaa
mov
dec
aad
dec
test
ja
ret
jae
dec
sbb
test
orl
add
xchg
pop
lods
xlat
or
mov
clc
push
dec
js
push
in
rol
lcall
dec
jp
adc
into
sbb
xor
sbb
dec
sahf
mov
jbe
aaa
sub
fcomps
icebp
push
imul
pop
cmpsb
mov
aaa
mov
popa
stc
ret
mov
xorl
adcl
loopne
dec
pushf
mov
mov
xchg
cwtl
hlt
shufps
adc
xor
xchg
mov
dec
cmp
ss
jmp
rcrl
jbe
mov
dec
jecxz
or
arpl
push
imull
adc
jg
or
pop
lock
mov
popf
fiaddl
cli
repz
loope
and
add
cld
lcall
and
add
sub
cmp
mov
fimull
movsl
lea
fcompl
dec
lret
pop
xor
ficoml
mov
xor
lods
aaa
cmpsb
or
mov
ret
lcall
dec
jne
scas
mov
leave
add
xchg
stos
loopne
std
dec
sbb
test
push
fwait
inc
adc
gs
shlb
js
cmp
dec
mov
inc
jecxz
lcall
inc
cmovae
inc
ret
jo
dec
rcrb
mov
scas
mulb
jmp
popa
and
sub
aad
out
xchg
or
lea
outsb
in
out
psubq
or
repz
add
ficoms
add
orl
cltd
dec
inc
lods
icebp
pop
xchg
out
test
sub
mov
mov
enter
es
shll
push
cmpl
or
movsb
cli
push
and
cmp
ja
in
mov
jle
add
push
sub
cli
ds
popa
mov
psubd
in
ficomps
mov
add
lea
mov
cmp
or
push
xchg
push
pusha
outsb
push
xorl
sti
aas
stos
mov
ds
bound
clc
jns
outsb
dec
pop
jle
and
jl
inc
ja
xor
fadds
fs
inc
xor
sbb
pop
mov
insb
rcrl
ljmp
sub
push
fadds
jmp
pop
xchg
jge
mov
fistps
lret
lods
sub
or
cmp
test
loop
sbb
pop
mov
jg
mov
jl
sahf
xorb
jno
imul
jae
in
push
push
jne
repnz
shrb
addr16
repnz
or
jmp
push
imul
lret
std
pop
outsb
jl
pusha
mov
inc
enter
mov
and
insb
call
insb
xor
or
icebp
rcrb
cwtl
dec
jmp
mov
xchg
repnz
mov
pop
scas
mov
mov
sub
jnp
stos
popf
add
inc
mov
into
sar
push
outsb
xor
addr16
lods
xor
adcb
in
insb
mov
mov
sub
lcall
cltd
shlb
test
fisubrs
mov
xchg
adc
mov
and
lods
test
aas
and
jecxz
stos
jl
jns
ljmp
fildl
add
sti
test
sub
inc
js
lods
cmpsl
outsl
sub
aam
push
mov
jge
lcall
sub
in
test
push
fsubrl
and
and
jg
es
arpl
or
jl
mov
cmp
test
dec
jb
adc
push
jnp
ror
jge
in
aam
add
pop
mov
or
sahf
cmp
adc
dec
mov
cltd
in
jo
repz
in
inc
in
add
fists
nop
mov
cmp
aad
scas
pop
or
xor
sarl
hlt
pusha
sbb
andb
call
pusha
les
pushf
and
jae
add
iret
mulb
sbb
popa
jae
and
stc
rolb
push
lret
ds
inc
push
lods
inc
test
jge
xchg
pop
cli
inc
ja
add
jecxz
sbb
pop
cmpsl
mov
in
out
movsl
movsl
iret
mov
pop
adc
aam
sbb
ficompl
push
push
test
dec
push
jmp
out
cmp
mov
inc
scas
adc
out
jae
insl
mov
ljmp
sub
push
add
inc
scas
add
sub
clc
jo
cwtl
adc
loopne
push
jbe
bound
push
addr16
insl
mov
idivl
leave
and
xor
aam
addl
lcall
or
in
adc
out
je
sar
dec
sub
inc
or
jle
pusha
fisttps
xor
inc
lds
mov
adc
and
jnp
test
pop
adc
fwait
gs
or
jae
or
and
dec
push
sbb
pop
pop
mov
jmp
mov
adc
aam
cli
aaa
pop
jecxz
aas
cld
xor
adc
fldl
inc
dec
mov
mov
jle
xchg
lret
dec
inc
xor
adc
in
outsl
cmp
fsubrl
cwtl
mov
xor
pop
aas
in
mov
mov
mov
inc
push
into
sub
jg
mov
add
mov
and
cmc
loop
icebp
add
xchg
inc
inc
cmp
lock
xchg
pop
adc
dec
lock
fstpl
and
sti
cmpsb
out
repz
icebp
push
or
sub
mov
out
xor
popf
mov
aam
cmpb
mov
cld
add
inc
cld
pop
cmp
xor
push
sub
aad
pop
pop
lods
scas
call
mov
je
fldcw
jne
sub
sbb
push
outsl
pop
add
mov
mov
fisttpll
and
inc
bound
pushf
std
outsb
jae
mov
iret
xlat
sbb
shrb
pusha
jg
jp
or
push
mov
xchg
adc
cltd
cs
jp
fchs
fmuls
xchg
shlb
mov
or
lods
sbb
test
ljmp
mov
jae
roll
inc
data16
mov
push
mov
pop
adc
popa
push
adc
pushf
push
pop
mov
fwait
mov
jnp
fs
out
push
pushf
add
push
xor
sbb
shlb
insl
mov
imul
mov
in
ja
in
int
xor
test
pusha
outsl
rol
add
gs
cmp
int3
call
mov
dec
scas
call
mov
push
inc
hlt
jp
inc
xor
shlb
shrb
pop
mov
lahf
sub
scas
clc
dec
hlt
pop
adc
fldt
dec
jmp
mov
sar
je
xchg
in
pop
sub
rorl
in
mov
mul
aas
inc
xchg
out
sbbl
push
mov
aas
andb
enter
jmp
jbe
lea
mov
ss
cmp
inc
push
cmp
ja
or
xchg
lret
mov
cmp
sub
cmp
push
ret
mov
or
adc
imul
xor
push
mov
and
negb
or
cmpsb
test
rolb
js
aad
cmc
inc
loopne
shl
pop
vminss
mov
adcl
test
int3
mov
scas
sub
jb
fidivrs
xchg
movsb
pushf
push
outsb
dec
out
cs
pusha
incb
xchg
pop
orb
dec
daa
and
fsubrp
imul
jne
repz
test
nop
arpl
ret
cmp
mov
dec
inc
inc
or
push
add
test
scas
mov
and
fidivl
ret
jb
outsb
inc
imul
addr16
cmpl
repz
cwtl
and
mov
aam
lods
push
jns
mov
inc
in
out
push
stos
mov
adc
ret
inc
inc
cmp
lcall
sbb
jmp
popf
cmpsb
mov
je
mov
adc
sbb
push
mov
clc
call
ret
jne
and
fwait
jae
sub
sub
es
or
adc
fstpl
and
addl
stc
sarb
lds
mov
xlat
xor
dec
or
dec
div
push
sarl
pop
lods
sbb
aaa
negl
inc
sbb
aad
mov
cmp
iret
inc
jmp
jg
ret
sbb
add
clc
mov
stos
daa
mov
dec
imul
adc
outsb
jb
hlt
js
mov
ljmp
fsubrl
dec
call
loop
in
xchg
fldz
inc
cmp
cmp
aaa
aad
fildl
add
lock
mov
xchg
scas
push
out
cmp
mov
push
mov
xchg
push
movsl
xor
icebp
rcrl
xchg
mov
jp
insl
rorb
out
shrl
dec
lret
xchg
pop
aas
sbbl
enter
cs
call
cmp
add
or
fs
pop
out
popf
daa
scas
xchg
push
and
repz
sub
push
push
or
call
ret
cmp
push
notb
push
gs
or
dec
call
test
push
ljmp
and
adc
sub
aaa
cs
and
add
xor
and
mov
stos
ret
jo
jp
test
push
mov
push
dec
add
mov
xchg
mov
fists
mov
hlt
inc
das
mov
inc
or
and
mov
add
dec
inc
call
sub
inc
mov
les
test
idivb
xor
mov
idivb
xchg
xchg
xchg
lahf
sbb
insl
xchg
xchg
sti
cmp
sti
sub
pop
gs
xor
rclb
dec
testb
xchg
popf
xor
gs
int
jb
pop
pop
mov
xchg
scas
jle
repz
data16
iret
call
orb
sbb
or
aaa
sub
cmp
imul
dec
insb
scas
xlat
pusha
pop
test
mov
mov
roll
jo
mov
mov
iret
xchg
in
pop
mov
outsb
jns
ljmp
cmc
dec
xor
mov
mov
dec
xor
in
stos
aad
mov
les
xlat
negl
push
and
into
mov
imul
ret
adc
xchg
dec
test
push
xchg
stos
les
out
shrl
mov
jp
and
xchg
rcl
sbb
dec
fistps
sbb
inc
mov
xor
sti
fdivrl
mov
ret
fs
shrl
xor
fucom
mov
leave
mov
orb
lods
enter
mov
repz
movsl
out
jb
loopne
sbb
or
std
and
push
sub
and
xchg
cmpsb
inc
pop
mov
mov
arpl
in
push
mov
iret
push
push
mov
pop
pop
push
inc
cmpsl
movl
push
out
xor
jmp
mov
sub
in
imul
mov
test
movsb
and
fwait
push
add
fwait
xlat
push
nop
int3
cltd
mov
daa
insl
stos
lods
xchg
in
xchg
mov
ret
xor
popa
cmpsb
cmp
mov
lods
int3
hlt
adc
push
and
outsb
push
xchg
sti
scas
inc
rcrb
ret
pop
xor
mov
les
ret
arpl
or
roll
data16
jmp
call
out
sub
dec
clc
cmp
jbe
cmp
inc
xchg
add
sarl
repz
aad
pusha
ret
push
mov
das
inc
or
inc
cli
sbb
mov
mov
cmp
adc
mov
call
mov
lock
mov
dec
sub
mov
adc
adcb
mov
push
mov
outsb
rcrl
cld
jbe
adc
mov
movsb
jne
or
add
addr16
fwait
xor
mov
rcrl
sarl
int3
or
xorl
push
mov
jb
stos
mov
stos
xchg
int3
cmpsl
xchg
lods
mov
inc
fdiv
mov
push
cmp
cmp
lret
cmp
push
dec
pop
jnp
ja
push
icebp
jmp
dec
or
test
mov
xchg
jno
fs
cmpsl
pop
sbb
sub
or
test
mov
mov
mov
xor
or
adc
mov
imul
mov
mov
pop
out
out
push
and
ja
out
aam
jmp
or
in
outsb
and
push
in
xor
out
mov
jno
fsts
sub
adc
test
mov
jns
mov
nop
jl
dec
mov
pop
addr16
cmp
jns
pop
mov
cmp
int3
cs
adc
sbb
imul
jno
lahf
xchg
movsl
loop
add
arpl
sahf
xor
add
enter
dec
sbb
xchg
mov
mov
fnstenv
pop
mov
or
pushf
adc
cmp
dec
popf
mov
lcall
inc
movsb
mov
xchg
or
gs
std
mov
clc
xchg
jno
xchg
mov
push
insb
lcall
pop
and
jns
lds
int
fidivs
inc
mov
stos
jno
adc
and
int3
scas
mov
mov
or
jo
aad
repz
lea
pop
add
ja
sub
pop
cmpsb
or
out
shlb
clc
add
push
int3
jmp
sahf
mov
jno
ja
and
imul
sbb
in
out
notb
inc
xor
repnz
sub
mov
cmpsl
loope
mov
ret
cli
add
cmp
pop
cltd
insl
ror
pop
and
sub
ret
push
cwtl
dec
mov
xor
gs
adc
imul
scas
stos
xchg
enter
adc
arpl
shl
inc
stos
stc
rcrl
or
jbe
pop
mov
adc
or
daa
push
add
push
jb
dec
mov
es
cmpsl
mov
rclb
push
jne
nop
mov
sub
js
ljmp
xchg
imul
iret
scas
mov
xchg
cmpsb
add
push
fnsave
scas
and
jmp
js
dec
and
vminpd
add
lods
sub
xorb
mov
sti
hlt
sbb
test
sub
mov
cs
je
xchg
iret
dec
test
or
loop
pusha
cmc
pop
negl
nop
cmc
rcr
pop
cmp
orl
divb
fisttps
cld
sbb
insw
push
cmp
mov
inc
roll
jo
in
mov
aas
pop
fcoml
loope
jecxz
xor
divl
pusha
les
adc
cmp
mov
sub
sahf
cmp
es
pop
in
sbb
cmpsb
mov
ret
lds
fchs
add
adc
aaa
mov
and
mov
and
ret
dec
mov
fimuls
xchg
test
int3
out
xchg
in
clc
fnstcw
xchg
jge
pop
bound
fistps
sub
in
imul
fstl
lods
and
lahf
adcb
cld
outsb
lods
adc
popf
ljmp
mov
mov
clc
addr16
fidivl
cmp
shrl
daa
mov
mov
inc
dec
test
repnz
xor
sbb
lea
incb
and
in
ss
cmpsb
lcall
push
cld
pop
cltd
push
mov
inc
inc
inc
popf
gs
jns
jl
sub
loopne
dec
shll
push
inc
loop
xchg
leave
xor
ss
mov
adc
cmp
in
stos
dec
add
push
hlt
or
cmpsb
cs
pop
test
std
loopne
int
or
pop
jmp
insb
cs
mov
pop
sbb
sbbb
mov
dec
add
cmpsl
aas
cltd
jno
xor
add
aas
and
xchg
roll
sbb
sub
lock
add
loopne
push
enter
lcall
xchg
dec
leave
int3
insb
cwtl
bound
ja
mov
data16
pop
or
sti
lods
push
movsb
sub
sbb
sbb
xchg
pop
push
mov
adc
mov
add
cmc
pop
enter
lahf
xlat
sar
sbb
sbb
push
and
dec
int
fsubs
stos
testl
out
fnsave
sub
nop
data16
mov
xor
jbe
ret
mov
call
fwait
insb
pop
cmpl
push
push
mov
es
mov
mov
adc
and
mov
sub
mov
cmp
or
sbb
out
lds
xor
jb
jbe
push
subl
and
jns
loope
push
jbe
mov
dec
dec
mov
popl
gs
aam
xorl
outsb
in
les
pop
sbb
scas
out
xchg
pop
test
jge
xlat
pop
jg
lds
cli
outsb
pop
cmp
repnz
sbbb
fadds
shrb
cmp
jecxz
ffree
jmp
ffree
cmp
push
scas
dec
xchg
call
lcall
or
pop
shrl
sbb
pop
fcmovne
cld
jl
mov
js
xor
test
add
ss
jae
bound
mov
jmp
roll
push
pop
and
test
mov
add
xorb
and
inc
fwait
add
lret
push
mov
cmp
movsb
sbb
inc
push
jmp
lods
add
cli
in
cmp
lret
call
cwtl
insl
fwait
xor
mov
and
push
lcall
scas
jg
mov
icebp
mov
push
and
cmp
inc
xchg
add
movsb
outsb
xor
cwtl
scas
lea
push
into
push
nop
jo
pop
push
pslld
addr16
cmc
push
push
int3
and
aam
sarb
mulb
mov
movsb
or
popa
outsb
adc
lsl
pop
push
adc
shrb
hlt
cmp
jl
add
jno
mov
arpl
clc
arpl
or
or
je
pop
jbe
mov
xchg
inc
scas
xor
inc
xchg
out
jae
pop
mov
dec
pop
dec
fs
dec
dec
cmpsb
mov
push
cmp
jmp
jb
adc
fs
jge
imul
cld
pusha
fs
nop
pop
pop
push
sbb
cmp
mov
xchg
scas
dec
out
scas
jg
mov
movsl
in
pop
gs
loope
mov
js
nop
sbb
pop
jns
sbb
or
pop
daa
mull
sub
and
add
cmp
rolb
dec
fistps
ret
cs
mov
jmp
les
shlb
int3
pop
dec
xchg
fucomip
mov
stos
sti
inc
jbe
inc
add
dec
enter
xor
inc
fbstp
mov
dec
jnp
sub
mov
push
dec
pop
ret
pop
popa
pop
jp
pop
mov
in
mov
addl
call
add
lds
bound
jne
fsincos
pushf
mov
xor
aam
mov
mov
jb
lods
dec
jecxz
sub
outsl
sahf
push
add
loopne
or
lea
mov
fdivl
mov
cld
dec
push
loope
dec
xor
push
loop
les
clc
sub
mov
jo
lds
inc
pop
mov
jns
jo
ficoml
popf
add
test
sbb
ja
int3
out
cmpsb
pushf
mov
cs
mov
sbbb
sub
nop
sub
push
xor
dec
iret
fadd
mov
pop
lret
and
mov
cmp
scas
mov
scas
push
push
fcmovbe
dec
jae
hlt
mov
mov
repnz
jbe
sti
loopne
dec
sbb
sub
sub
dec
mov
or
ret
mov
mov
dec
cs
and
mov
pop
cmp
push
push
loope
call
ret
ljmp
mov
lock
xchg
popa
fisubrs
bound
add
jg
and
ljmp
push
sbb
cmpsl
ret
inc
pop
das
loopne
out
sub
jecxz
loop
aam
popa
fst
outsb
jbe
xchg
sahf
aaa
jno
pop
inc
hlt
mov
scas
out
dec
xchg
rcrl
faddl
mov
sbb
xor
lock
outsb
mov
add
cmpsl
add
xchg
pop
and
leave
mov
test
aad
in
lds
jns
push
pushf
fwait
push
xor
sub
mov
mov
dec
lods
rorl
pop
xchg
fadds
pushf
or
mov
std
inc
pop
cwtl
add
xchg
cmp
add
mov
cmp
dec
ret
pop
fwait
inc
jo
loopne
push
std
push
pop
xchg
and
or
mov
mov
inc
sub
ret
xor
cmc
rclb
push
sbb
clc
push
test
jo,pn
movsb
sub
push
inc
seto
jp
cmp
mov
cltd
clc
cmp
ret
cmc
jmp
movsb
pminub
pop
je
adcl
inc
ss
cmpsl
mov
outsb
cmp
ret
push
sub
dec
push
cmp
shl
movsl
sub
mov
sub
xchg
inc
push
iret
xchg
sti
gs
inc
mov
inc
insb
mov
add
cmpsl
mov
gs
mov
mov
and
icebp
aas
call
cld
je
add
loope
or
outsb
imul
cmp
lock
sahf
andl
or
sbb
dec
push
out
cltd
cmp
aad
mov
xor
and
shrl
shl
sub
cli
add
setle
sbb
scas
cs
adc
mov
mov
lahf
es
mov
out
mov
ret
and
out
cmp
shll
jae
xchg
xor
pop
call
js
push
call
movsl
pop
pop
ljmp
jbe
hlt
aas
push
popf
cmp
jne
out
mov
cmp
lods
cs
pushaw
ja
add
xchg
arpl
push
dec
adc
cwtl
test
jns
xchg
hlt
aas
imul
sub
jle
in
pop
enter
aaa
xlat
int3
adc
test
inc
push
js
movsb
dec
fistl
ret
jnp
loop
cmp
js,pn
fidivrl
sub
fisttps
data16
lods
int3
scas
lock
dec
call
mov
mov
aad
sti
and
mov
jns
xor
lcall
xchg
cwtl
and
data16
mov
jmp
adc
pop
sti
int3
test
dec
mov
dec
pop
or
xchg
das
je
fs
mov
pop
or
add
inc
nop
mov
test
imulb
stc
jge
sbb
popa
mov
push
mov
cs
std
movsl
and
mov
ffreep
das
push
and
mov
cmpsl
xor
in
leave
xchg
fwait
in
mov
push
jecxz
ljmp
mov
addr16
dec
xor
inc
xchg
adc
jo
cmpsl
push
push
xchg
dec
dec
mov
stos
add
inc
insl
and
sbb
ja
xchg
popa
frstor
mov
mov
jge
sbb
push
movsl
test
cli
xor
mov
inc
test
dec
xchg
xchg
add
shll
or
in
and
cwtl
jmp
in
adc
cld
ret
pop
sar
outsb
pop
aas
pop
ds
pop
pop
insb
cmp
adc
dec
cli
push
sbb
sub
es
sbb
fwait
or
inc
jge
div
or
xchg
popa
lcall
mov
mov
and
xchg
cmp
fists
aam
daa
inc
fadd
adc
leave
mov
mov
fisttpll
hlt
mov
lahf
out
inc
add
call
pop
repz
inc
call
sub
lahf
or
cmp
arpl
sbb
sbb
mov
adc
out
aas
xchg
ja
cmc
pusha
arpl
cmpsb
es
jb
sub
sub
cmpsb
fdivl
xor
adc
out
sbb
out
push
fimull
xlat
popl
dec
outsl
inc
dec
pop
cltd
sub
push
aam
push
jns
mov
adc
pop
popf
jne
ret
xchg
fdivr
push
les
push
lods
mov
ror
dec
xchg
mov
xchg
hlt
fnstcw
add
jp
das
mov
notb
xchg
sysexit
or
movl
arpl
xor
inc
scas
in
adc
jle
jp
inc
mov
pop
cltd
imul
jb
ds
pop
sbb
scas
push
and
mov
xchg
and
mov
imul
sti
inc
or
int3
out
jmp
cmpsl
mov
adc
add
sbb
sbb
addr16
push
add
lods
xchg
or
sbb
lret
shll
fists
adc
sub
ljmp
xor
pop
mov
or
in
adc
ljmp
daa
or
repz
or
sbb
pmulhw
add
cmp
imul
jmp
cmp
popf
sub
jo
inc
aam
sbb
xchg
cmp
loop
jg
pmullw
jle
loopne
mov
stos
xor
fwait
cmpsb
jge
in
mov
mov
add
lret
sub
sub
cmp
into
cltd
test
sbb
gs
pop
out
mov
cmc
lret
fst
cmc
sbb
jmp
push
cmpsb
js
push
cmpsl
jecxz
jbe
add
daa
in
xchg
insl
lock
jecxz
push
adc
sbb
fldl
jno
andl
mov
mov
sbb
and
mov
roll
mov
mov
sub
shrl
pop
jne
movsb
mov
add
xor
sar
lret
xchg
mov
mov
mov
cmp
xchg
imull
scas
aam
call
imul
mov
fbstp
repz
xor
sbb
inc
mov
test
or
jmp
push
addb
xor
xor
adcl
cmc
sub
dec
cmp
inc
mov
dec
pop
movsb
test
sbb
ds
xchg
pushf
cmp
and
and
nop
sub
mov
int3
inc
fnstcw
cmc
mov
out
ficompl
pop
mov
push
je
sbb
xchg
orl
lods
imul
jmp
sub
test
jmp
shrb
adc
xorl
js
lret
jbe
adc
inc
xlat
mov
sbb
gs
cmp
scas
xor
aaa
out
add
or
call
mov
xchg
sbb
cmpsl
test
sub
sub
sub
das
imul
popa
dec
sbb
add
aad
xchg
sbb
mov
testb
nop
mov
fsubr
pop
test
stos
mov
adc
jecxz
dec
jmp
stc
jecxz,pn
jo
outsb
mov
xchg
inc
out
jg
fdivrs
enter
mov
xorl
ror
test
stos
xor
out
xchg
mov
mov
int
pushw
imul
dec
xchg
dec
inc
mov
sub
dec
jecxz
lds
add
sarl
aad
and
jmp
add
fdivrs
in
loope
jno
dec
ret
in
xchg
lods
sbb
mov
cli
ret
inc
jbe
fxch
mov
roll
dec
pusha
dec
or
xor
or
pop
cmpsl
xchg
leave
mov
into
fstpt
fnstcw
and
aaa
cmp
enter
sbb
cmp
dec
push
bound
into
mov
pushf
xchg
jo
aad
mov
inc
pushf
jg
pushf
cmpsb
dec
fnstsw
or
outsl
push
fxam
stc
add
cs
add
or
loope
in
aaa
dec
mov
mov
mov
ljmp
roll
or
lahf
cmpsl
push
add
xor
xor
mov
add
inc
jle
adc
ss
pop
pop
gs
stos
mov
jg
clc
dec
outsb
cmp
push
add
pop
cmp
test
cli
sub
adc
aas
int3
jmp
ja
mov
mov
and
pop
outsl
fdivrl
mov
add
or
scas
dec
xor
adc
aad
and
xlat
sbb
mov
dec
aam
push
jnp
push
xchg
mov
mov
xchg
sub
ds
mov
sbb
pop
subb
push
fsubr
jmp
jg
fwait
test
into
mov
push
in
mov
adc
imul
or
daa
xchg
fsubl
dec
int3
mov
mov
sub
pop
movsb
sahf
loope
or
push
cmp
push
test
repz
mov
imul
cmpl
jg
adc
in
jbe
rorl
and
xchg
xchg
imul
mov
aas
ss
dec
mov
outsl
test
xchg
dec
sti
jo
dec
sbb
lcall
xchg
repnz
movsb
pop
mov
orb
popf
fimuls
and
add
sbb
lret
push
lcall
ljmp
mov
xor
inc
test
das
jecxz
mov
stos
movsl
push
cmp
inc
aaa
je
ljmp
test
lds
or
mov
inc
popf
in
xchg
xor
test
pushl
repz
mov
push
jns
or
cmp
mov
inc
xchg
in
and
out
sub
push
mov
pop
xchg
mov
dec
jb
out
mov
mov
or
daa
data16
or
cmp
enter
fs
xor
call
pop
aaa
add
inc
cmc
cs
add
pop
rcl
repnz
enter
arpl
inc
daa
ljmp
mov
sub
push
push
adc
sub
movsl
in
sbb
mov
push
adc
movsl
fisubrl
jno
fildl
add
addr16
xchg
push
xor
and
lock
test
out
ds
popa
ret
and
imul
mov
js
mov
int
hlt
add
dec
lds
repnz
or
jmp
xchg
inc
cmp
dec
loop
pop
int
subb
mov
loop
fisttps
pop
repnz
in
gs
fs
sar
ret
cmpsb
fmuls
cmp
or
js
int
cs
xorl
shr
loope
je
mov
icebp
push
push
lods
cltd
jge
enter
inc
popf
lds
or
test
scas
cmpsl
push
shrl
xchg
mov
mov
adc
std
adc
js
xchg
jo
pop
dec
dec
mov
jle
mov
dec
popf
adc
cmp
icebp
loopne
fcmovb
jp
mov
loope
outsb
mov
sbb
repz
stos
cmpsb
add
lock
sub
push
jmp
cmp
mov
push
shll
sub
xchg
ds
push
shrb
push
movb
push
dec
stos
mov
xor
xchg
pushf
and
push
out
mov
loop
aad
add
xchg
inc
push
xchg
pop
fisubl
scas
aaa
jb
xor
in
stos
sub
push
jne
adc
lcall
mov
int3
rcrl
imul
sbb
leave
popf
ret
mov
jmp
push
adc
sbb
jbe
mov
in
push
mov
call
loope
cmp
repz
dec
jae
test
mov
enter
sub
pusha
pop
xlat
in
imul
mov
pop
push
adc
sbb
or
ss
mov
cwtl
shll
add
push
xchg
dec
loopne
ds
mov
and
add
js
mov
loopne
jle
sahf
jle
sarl
mov
insb
frstor
shlb
in
mov
lret
sub
mov
leave
dec
scas
pop
adc
mov
imul
je
sub
pop
roll
test
push
jns
arpl
jp
xchg
pop
cs
push
nop
xor
adc
dec
loop
or
gs
loopne
mov
imul
inc
jnp
pop
les
jmp
enter
jo
or
jge
out
scas
sbb
aam
mov
divb
shlb
iret
mov
jae
outsb
and
mov
or
outsl
adc
jo
mov
push
icebp
inc
adc
dec
sti
mov
div
in
shl
dec
push
pop
ja
fmull
jne
out
inc
or
aad
mov
xor
out
or
cmp
push
push
mov
addr16
into
hlt
xchg
push
jp
and
mov
in
aaa
push
lret
rcll
iret
fisubrl
mov
sbb
adc
and
divl
decl
das
cmp
sbb
dec
sub
inc
jno
push
out
testl
inc
jg
mov
adc
enter
mov
cmp
enter
shr
push
ljmp
adc
in
push
inc
add
inc
test
notb
out
es
dec
fisttps
mov
lods
xlat
in
cmp
test
xor
leave
cmp
divb
cmp
push
dec
cmp
push
std
cmpsb
jnp
add
inc
sbb
xchg
daa
pop
pop
fwait
mov
xchg
pop
stc
add
adc
jl
stos
mov
pop
cmc
mov
jne
shlb
inc
jg
pop
or
or
mov
and
es
xchg
cmp
inc
xor
les
cmpsl
sbb
lcall
out
push
fdivp
push
repz
das
and
jl
out
aam
repnz
outsl
sbb
pop
sub
cmp
mov
mov
je
sbb
insl
dec
aam
cmp
gs
pop
xchg
stos
mov
inc
popl
mov
lea
gs
mov
pop
xor
mov
and
fcmove
pop
push
or
faddp
iret
pop
mov
pop
fcomi
adc
daa
push
mov
mov
loope
movl
movl
mov
mov
cmc
dec
jp
cmp
cmpsb
testl
mov
pop
mov
sub
inc
inc
scas
subb
addr16
mov
jbe
pop
ds
cmp
jns
mov
or
mov
ret
imulb
jl
mov
dec
mov
push
lds
cltd
lods
cli
cmpsl
pop
add
lods
push
sbb
pop
jl
mov
or
shlb
fidivrl
movsl
pop
fiaddl
lcall
cmpl
jb
sbb
mov
xor
sti
sbb
push
aaa
jge
adc
mov
mov
adc
leave
or
mov
mov
pop
cltd
cmp
hlt
xchg
and
and
jl
dec
outsb
arpl
jge
ret
sarl
lds
rorb
jns
adc
xchg
les
xor
xor
pop
add
pushf
cli
dec
negb
movsb
out
sbb
stos
je
mov
ret
mov
cmp
xlat
jge
insb
and
jl
xor
lret
test
and
insl
xchg
andb
adc
repz
cld
mov
and
cmp
je
subb
fdivs
push
mov
adc
ljmp
testb
xchg
inc
fiaddl
push
jp
jns
inc
mov
pop
mov
mov
repnz
insl
insl
add
shll
pop
pop
lods
inc
inc
add
mov
cmp
pop
scas
sti
cli
fdivs
jecxz
adc
add
mov
call
inc
popa
add
or
xchg
pop
mov
xor
std
mov
popf
mov
mov
or
fwait
imul
insb
pop
movsb
cmp
xor
stc
repz
fsubrl
int
cmp
jle
push
dec
add
jge
dec
and
cmp
lds
xor
cmpsb
or
imul
repnz
jg
jbe
pop
in
not
xchg
je
jmp
or
leave
push
push
pop
push
inc
jbe
add
cs
test
pop
sub
mov
ljmp
push
stos
mov
jle
clc
add
dec
mov
xor
insb
push
push
sub
mov
dec
in
pop
aas
adc
mov
sbb
in
add
or
and
cmp
or
push
inc
add
sub
pop
cmp
incb
movsl
roll
jno
in
addr16
repz
push
fistps
fsubrp
xchg
cwtl
cmpsb
fdivs
jns
fstpt
inc
pop
icebp
ja,pt
xor
push
inc
fdivp
std
push
stos
and
jo
repz
cmp
cs
test
ret
sarb
sbb
jae
imul
stos
imul
mov
jecxz
inc
inc
sahf
leave
pushf
adcb
ds
xor
stc
ljmp
jne
ret
dec
xchg
lret
cmp
jle
jnp
mov
repnz
add
push
add
add
mov
ss
leave
cld
add
or
dec
jmp
in
scas
lods
inc
out
ds
out
sbb
movsl
in
pop
push
addr16
add
aas
outsl
xchg
test
test
jo
cmpsb
mov
pushf
mov
je
ret
aam
pop
inc
mov
mov
xchg
aaa
fidivrs
jns
addr16
dec
int
mov
inc
fdivrl
jle
jo
shlb
in
jo
push
lods
push
push
push
jb
aaa
jle
or
mov
cmp
gs
mov
mov
or
outsl
cmpsb
fdivrl
mov
push
xor
cmp
or
pop
push
xor
pop
lea
cmpsl
mov
rclb
push
pop
or
shll
sahf
outsl
mov
jecxz
out
movsb
sbb
mov
mov
sub
fstps
sbb
jno
mov
lahf
imul
and
inc
and
or
addl
add
sbb
push
test
or
pop
sahf
call
inc
mov
sahf
or
xchg
jp
test
jnp
pop
orl
inc
or
jns
mov
in
cmpsb
xor
inc
int3
je
jno
stos
and
inc
pop
pop
xor
mov
mov
mov
pop
cmp
inc
test
icebp
cltd
cmp
fwait
icebp
inc
push
xchg
ret
mov
movsb
mov
int
pushf
sahf
cld
sub
cmpsl
cwtl
je
sub
mov
push
jns
push
ljmp
push
jo
lret
outsb
push
in
ja
out
xchg
cmpsl
xchg
or
loope
push
in
jae
data16
pop
or
dec
popf
popa
ja
push
fs
push
add
int
addr16
popa
rcrl
xor
cmpsl
ficompl
cmpsl
mov
out
xchg
sub
in
stos
sub
lret
adc
cld
loopne
mov
xchg
pop
into
data16
mov
cmpsl
fld
test
push
outsb
in
enter
mov
testl
fs
cmpb
mov
cmc
mov
out
push
divl
push
daa
mov
sub
mov
mov
or
test
mov
xchg
aaa
in
lods
jnp
add
lea
scas
xor
jno
stos
lods
test
inc
outsb
push
adc
sbb
out
pusha
jmp
dec
push
ljmp
into
mov
pop
test
test
popf
jo
loopne
lods
fsub
push
jp
dec
jbe
mov
push
iret
je
cmp
inc
dec
sub
mov
mov
xor
push
jns
lds
ja
cmp
or
stos
nop
jl
jle
jp
ret
dec
fimull
lcall
lcall
lds
ds
outsb
shrl
mov
pusha
xchg
mov
cltd
outsb
loopne
jb
fdivp
inc
outsl
enter
arpl
aaa
mov
je
mov
fnstsw
jl
loopne
lods
imul
movsb
xor
or
sbb
adc
or
ret
stos
rcrl
cld
and
mov
mov
or
ret
ljmp
mov
mov
lods
pop
fwait
inc
push
mov
cmp
add
push
repz
ret
loopne
mov
adc
mov
mov
jecxz
xchg
push
stos
sahf
cmp
pop
adc
cld
fldt
icebp
pop
fiadds
sub
xchg
and
adc
mov
dec
lods
jo
aas
fdivl
std
test
sbb
aaa
leave
sub
pushf
rorb
cmp
pop
dec
out
fs
in
lods
sub
ret
in
lret
scas
fwait
cmp
fnsave
mov
jp
js
fisubrs
mov
lods
jne
popa
fdivrp
repnz
in
int
jmp
ret
sbbl
jmp
pop
pop
mov
inc
adc
fucomp
outsl
mov
dec
xchg
cmc
mov
xchg
sarb
movsl
sahf
jp
sahf
cli
sbb
mov
test
fisttpll
inc
fcoml
sbb
mov
adc
mov
jno
inc
or
ss
push
or
in
sub
sbb
mov
divl
push
sub
outsb
les
rcll
mov
int3
jne
add
push
lret
lcall
dec
aam
nop
dec
mov
dec
adc
out
or
xchg
pop
movsb
add
jle
mov
jp
mov
fs
imul
fistps
jae
xchg
and
push
cmpsb
lret
cmpxchg
inc
not
mov
jbe
call
hlt
out
iret
mov
jb
mov
in
addr16
push
lahf
dec
adc
xchg
pop
aad
call
or
ja
add
xchg
fimuls
fistpll
rorl
mov
mov
fnsave
or
or
jnp
hlt
outsb
xor
sub
cmp
outsl
ja
xchg
das
fmuls
stos
mov
dec
jmp
shlb
push
jmp
xor
mov
pushf
loopne
or
sbb
cmp
imul
cmp
dec
fs
jbe
lret
das
pusha
bound
movsl
popa
aaa
sub
nop
xchg
ja
adc
sahf
invlpg
mov
mov
movd
lcall
xchg
xlat
xchg
addr16
fnstcw
je
std
test
jge
sub
test
dec
and
xchg
and
ljmp
stc
mov
lds
inc
fs
mov
ljmp
ss
je
jecxz
mov
jne
jo
dec
adc
xor
stos
xchg
ja
xlat
repnz
movsb
stos
mov
cwtl
insl
and
shl
sub
ss
sbb
inc
out
push
pop
xor
rorl
in
sub
cmc
scas
sbb
add
xchg
jmp
push
sbb
cmp
bound
cmp
mov
xchg
mov
scas
pushf
xor
and
cltd
mov
popa
jnp
cmpsl
arpl
jae
sbbl
sahf
mov
mov
xchg
fs
insl
cwtl
dec
pop
jmp
sbb
mov
mov
jo
mov
divb
fsubl
lods
inc
rcll
mov
sti
add
test
adc
pop
and
adc
loope
dec
rolb
test
aaa
in
out
xchg
cmp
loope
push
inc
cmp
adc
jbe
sarl
push
arpl
jne
push
orl
ss
outsl
jmp
mov
add
lods
mov
pop
cld
cwtl
repz
les
outsl
fistps
jns
fstpl
cwtl
dec
ret
or
aad
lret
xchg
xchg
cmpsl
xchg
in
cs
ja
loopne
imul
jg
rcll
inc
dec
hlt
push
jae
xchg
xor
pop
call
pop
cmpsb
enter
lock
push
ret
inc
data16
lds
xchg
cld
outsb
mov
mov
xchg
add
inc
iret
sbb
sti
dec
test
jecxz
in
jmp
mull
xchg
cltd
or
push
loope
add
ret
cmp
loop
shr
fwait
das
fadd
call
test
into
lret
cmc
movsb
xchg
push
fs
icebp
and
pmaxub
mov
fucomp
jmp
dec
jae
mov
ret
inc
in
movsb
and
ret
mov
mov
sbb
lret
arpl
in
xchg
out
outsl
push
sub
jg
pop
sub
cli
mov
push
leave
out
aam
dec
xlat
jb
or
mov
ljmp
cmp
fistpll
stos
ljmp
inc
and
add
jae
push
ss
mov
cltd
notl
inc
fmull
mov
hlt
mov
testl
clc
jb
rolb
mov
in
adc
incb
lods
jl
ds
hlt
dec
pop
and
cmp
rcll
pop
jl
or
enter
lods
das
mov
sub
push
mov
inc
data16
pop
rcrb
loopne
xchg
sub
shll
lea
sub
mov
mov
in
or
sbb
sub
addl
in
mov
bound
xor
in
cs
jmp
leave
xchg
cli
mov
mov
dec
shrb
lcall
sub
fbstp
sub
push
dec
sti
cmp
mov
fisttpl
mull
popf
adcl
lods
aaa
cld
out
xchg
ret
dec
in
inc
and
pop
mov
lahf
xor
enter
pop
inc
cmpsb
and
and
xchg
jns
mov
push
mov
xchg
lret
mov
loope
pop
into
add
sub
cmp
jns
repnz
push
test
test
sub
mov
cmp
mov
xchg
and
clc
dec
pushf
jo
aaa
fnstcw
xchg
rcl
and
imul
std
xchg
fdivs
fsubp
add
in
and
cmp
test
mov
iret
sub
and
push
push
push
adc
push
fstpt
sbb
mov
and
hlt
test
test
pusha
sub
pop
xchg
fs
lock
and
outsb
aam
mov
fisubrs
or
mov
out
pushf
shrl
movsl
sbb
xchg
out
adc
xchg
lods
adc
addr16
fisubrl
sahf
test
sbb
mov
ret
sbb
popa
repz
mov
data16
loop
pop
fldl
lret
fwait
lret
mov
fstps
mov
xor
adc
mov
aad
sbb
mov
arpl
imull
icebp
sub
lea
imul
jmp
hlt
cmp
jo
fwait
cltd
adc
lock
stc
or
dec
pop
jb
ss
add
push
mov
icebp
psubb
add
shl
fcom
rclb
test
or
inc
or
mov
fisubl
clc
mov
mov
test
das
lods
sbb
mov
das
aam
ds
sub
mov
std
loope
loopne
orb
cwtl
mov
enter
push
loope
sub
lea
mov
and
outsb
gs
mov
xchg
iret
fmull
int3
dec
mov
inc
cmpsl
aad
mov
sarb
pop
push
fistl
test
mov
mov
into
addr16
cwtl
aas
sub
mov
shrl
mov
shrl
inc
int3
bound
mov
inc
adc
pop
stos
mov
sahf
jnp
shll
or
jmp
ds
push
aam
adc
xor
enter
imul
in
adc
out
daa
sub
or
pop
sbb
push
add
sub
pop
dec
cwtl
sub
jae
push
std
jg
inc
or
and
jle
xchg
ret
out
mov
js
mov
das
xchg
cltd
xchg
pop
push
insb
cmove
cmp
add
jge
push
lods
int3
negb
inc
mov
dec
shl
shlb
mov
insb
xchg
adc
xchg
lret
xlat
jecxz
sub
push
aaa
pushf
test
sbbb
push
or
dec
inc
inc
fiadds
std
or
outsl
stos
in
pop
xor
test
fnstenv
repnz
pop
lods
insb
mov
and
sub
arpl
cli
adc
pop
xchg
addr16
fs
sub
xlat
push
push
lock
cmpsl
pushf
mov
mov
sub
and
mov
out
push
mov
sub
mov
jmp
js
int
roll
mov
and
stos
sub
fs
fnsave
jnp
add
sub
stos
jnp
sbb
pop
or
in
pusha
and
and
pop
inc
imull
pop
xchg
push
xchg
xchg
sti
add
xchg
dec
popa
into
data16
scas
push
or
mov
mov
cltd
mov
jecxz
pop
jnp
or
dec
je
jno
sub
and
scas
lods
add
cmpsb
das
inc
inc
fimuls
sbb
xor
dec
in
add
rclb
loop
cmp
rolb
negb
xchg
inc
inc
lods
test
fmul
jbe
xlat
pop
push
into
pop
adc
clc
sbb
push
fbstp
sbb
addr16
rcrl
in
inc
imul
lock
aad
mov
jb
std
pop
mov
sbb
adc
pusha
push
xchg
hlt
rcrb
lods
adc
sbb
fldenv
add
pop
adc
cltd
outsb
dec
push
pushf
insb
std
std
push
mov
clc
dec
mov
mov
push
or
fcomp
jmp
jno
xchg
pushl
xchg
xchg
mov
pop
test
cmp
and
aad
cmp
xchg
xchg
dec
fcmovne
popf
xor
test
loopne
mov
xor
fwait
ljmp
cmp
adc
dec
test
cwtl
mov
xlat
xchg
push
fidivl
jno
cmp
dec
out
iret
or
inc
dec
test
inc
inc
inc
sub
insl
mov
popa
aad
int
cli
ss
sub
mov
out
jns
mov
lret
inc
mov
in
jge
addb
dec
mov
add
das
xor
fcoms
repnz
dec
mov
negb
cwtl
xor
jae
aam
pop
cmpsb
pop
das
daa
dec
out
jmp
push
inc
pop
fabs
cmpsb
ret
popa
subl
test
add
push
repnz
dec
subps
loop
or
sbb
das
outsb
movl
push
or
fwait
inc
xchg
das
sub
or
pop
mov
sub
cmp
push
jb
or
adc
jecxz
shll
test
dec
xchg
test
sbb
pushf
fs
or
lods
mov
mov
sub
adc
and
push
and
sbb
push
pop
fcomps
add
mov
adc
mov
in
clc
xor
sbb
push
add
dec
enter
adc
int
pop
sbb
repnz
mov
mov
xor
dec
and
int3
fcomip
arpl
lahf
cli
cmp
rcrl
dec
add
loop
sbb
vcvtsd2si
dec
mov
movsb
xor
mov
scas
pop
enter
jmp
enter
sarl
dec
jne
test
mov
sbb
mov
xor
inc
cmp
lods
fidivl
push
xor
or
movsb
inc
jmp
pop
mull
lods
jl
sbb
adc
movsl
xchg
xchg
iret
filds
in
xor
icebp
leave
rorb
pop
and
jno
cmp
lret
lcall
fwait
test
push
mov
loopne
xchg
xlat
loopne
jp
cmp
adc
cmp
mov
xchg
jmp
jno
jmp
and
adc
xchg
sub
scas
xchg
popa
push
test
xor
push
cmpsb
int3
mov
xor
or
sbbb
or
adc
test
sub
shlb
stos
cld
xor
cmp
adc
jge
ja
pop
mov
cs
loopne
cmp
scas
push
dec
nop
cmp
js
mov
mov
mov
loopne
push
xchg
sti
js
sub
xor
push
xchg
enter
shrl
gs
sub
mov
lods
mov
or
cmpsb
loop
sub
adc
xchg
dec
cmpl
push
push
bound
mov
or
pop
aam
jecxz
shlb
or
mov
nop
stos
jns
add
jae
jle
jnp
ucomiss
mov
shll
pop
fwait
xlat
sahf
sbb
xlat
pop
cmp
and
push
mov
xchg
push
add
mov
clc
popf
or
stc
stos
imul
jno
push
xchg
imul
cwtl
js
pusha
push
inc
mov
adc
je
popf
jp
pop
jp
lret
mov
rcr
sti
mov
lock
divl
fsts
sbb
jl
sub
aad
cmp
xorb
sub
xchg
imull
lret
daa
mov
inc
push
popa
push
out
sbb
cltd
cmpsl
mov
mov
fsub
mov
push
sti
repz
movsb
test
pop
in
mov
popf
pop
jb
enter
rcll
xchg
mov
jb
jge
fnsave
incb
dec
or
test
mov
lahf
scas
mov
push
xor
shr
repnz
push
cmpsb
pop
lret
mov
test
ret
out
adc
leave
add
aaa
pop
and
jns
enter
and
inc
outsl
fsts
test
xchg
push
inc
push
add
xchg
movsl
mov
jle
add
push
pushf
jle
jne
xlat
pop
jae
out
xor
ss
add
test
ss
mov
jne
jo
inc
das
fidivrl
sbb
jb
and
ret
lea
pop
adcb
stos
nop
xchg
fwait
mov
mov
mov
movsb
and
xor
clc
into
addl
mov
pop
mov
clc
jmp
push
mov
jo
test
sarl
and
lcall
xchg
xchg
lahf
cmc
cmp
xor
lahf
mov
pop
adcl
mov
or
dec
insl
shlb
sub
mov
leave
or
pop
aad
in
out
popa
repnz
out
lea
xor
jge
ret
xchg
pusha
fbld
adc
xchg
adc
fidivl
outsb
and
fcompl
cwtl
test
jle
es
and
cmp
loop
repz
push
push
mov
mov
inc
xchg
das
push
imul
adc
xchg
jns
lahf
cwtl
cli
mov
pop
inc
sub
outsb
pop
test
xchg
dec
xor
push
pushf
js
sub
fs
jb
mov
jg
fcmove
cmp
mov
lret
cmpsb
imul
dec
mov
fdivr
ret
neg
pop
jo
sbb
add
and
gs
in
mov
int
mov
scas
loop
popf
pop
insl
out
mov
fsubrp
dec
lods
je
fiaddl
pusha
xchg
orb
and
pop
fldcw
shl
xor
inc
jecxz
js
jg
push
dec
xor
es
cli
addr16
mov
sub
mov
imul
ljmp
push
sets
dec
mov
clc
cmc
shlb
es
pop
sub
rol
pop
cwtl
imul
or
ficoms
popf
push
popf
pop
cmpsl
xor
test
pop
popa
jl
xchg
js
mov
call
or
in
sahf
or
fisttpll
into
loopne
popl
mov
inc
push
mov
xchg
xor
test
cs
shlb
popa
incl
aad
andl
shll
repnz
lcall
hlt
mov
jmp
inc
out
mov
cltd
or
inc
and
mov
and
roll
jo
inc
mov
inc
dec
adc
xor
iret
push
jg
dec
adc
mov
mov
push
iret
mov
push
inc
enter
loopne,pn
xor
xchg
enter
bound
dec
dec
int
xchg
lock
mov
cmp
jne
mov
sbb
outsl
and
sti
icebp
aas
xchg
jecxz
cli
mov
push
sbb
jne
xlat
jbe
mulb
add
mov
push
push
push
ficoml
popf
sbb
and
mov
push
arpl
dec
ljmp
pusha
cmp
scas
std
sbb
in
pop
add
cmp
inc
mov
ficoml
cld
orl
jae
add
je
outsl
stc
int
add
mov
popa
stc
fistl
push
sub
sub
lds
pop
adc
mov
lcall
in
fdiv
js
mov
pop
jge
pop
push
je
mov
and
add
ds
js
jo
jo
imul
mov
xchg
push
das
imul
sahf
iret
lcall
or
sub
ljmp
dec
pop
xchg
lret
pusha
adc
push
add
dec
stos
pop
mov
jmp
rorb
mov
dec
rcl
call
ficoms
je
pop
shl
nop
pop
adc
aas
sbb
xchg
arpl
inc
or
dec
dec
sbb
call
loope
xchg
fdivs
mulb
in
negl
cmp
mov
int
inc
lea
xchg
jae
or
inc
add
and
dec
jmp
pop
aad
daa
jns
leave
fbld
jo
cmpsl
mov
pop
mov
outsl
xchg
push
fnsave
mov
add
aaa
add
add
fidivrs
es
sub
fists
cmp
inc
shl
pop
mov
ret
or
jg
repz
out
pop
ljmp
push
neg
sti
imul
test
js
int
xchg
in
adc
insb
frstpm(287
notl
pop
popa
stos
push
dec
and
sbb
xchg
lods
loopne
lahf
pop
movsl
lods
roll
xor
mov
jmp
daa
sub
popa
pop
xor
pop
jl
repz
xchg
sahf
sub
inc
scas
imul
pushf
mov
ja
fsubrs
or
ja
add
int3
shr
sub
pusha
rcrl
cmp
adc
rcl
mov
lods
dec
and
pop
push
push
xor
add
jecxz
add
hlt
incb
in
push
nop
out
andl
mov
inc
and
and
fnstsw
or
test
enter
lods
push
adc
mov
cltd
fs
enter
jns
xchg
popf
aaa
pusha
jbe
mov
jno
aaa
loope
pushl
arpl
leave
lret
inc
leave
pusha
fadds
add
adc
aas
in
inc
xor
push
mov
data16
je
cmp
mov
cmc
test
imul
lret
stc
pop
pushf
mul
add
sbb
sub
out
xor
ror
pop
scas
push
mov
sub
loope
cmp
cmp
hlt
xchg
sahf
rorb
iret
mov
je
gs
fsubr
pop
fsubrs
xchg
inc
inc
or
sub
xor
les
sub
pop
pop
adc
cmp
aaa
adc
stos
lods
cmp
icebp
je
push
jp
sub
sub
loop
xchg
sub
cld
mov
adc
aad
pop
mov
dec
and
cli
ja
rcr
xor
mov
fmuls
iret
int
mov
dec
jae
push
in
incl
sarb
mov
jae
scas
popa
mov
mov
clc
pusha
fildl
and
ljmp
and
shrb
dec
fucomi
fadds
ret
out
pop
push
dec
aas
xor
js
mov
loope
add
pop
jae
pusha
dec
mov
push
xorl
fsubs
mov
add
dec
aas
subb
outsb
or
std
std
lahf
aad
les
stos
scas
jnp
cmpsb
jl
bswap
sub
pop
lock
in
hlt
lea
add
adc
sbb
xchg
out
fistpll
mov
in
adc
cmp
into
dec
int
inc
jmp
xor
ja
cs
sub
leave
and
mov
subl
jge
jne
sahf
clc
out
ret
sbb
mov
mov
pop
and
fs
shlb
mov
fnstcw
orl
xchg
cmp
xchg
aam
ds
inc
sbb
dec
sbb
scas
pop
fcmovnbe
or
stc
lahf
and
add
pop
lods
adc
vmread
add
push
push
jns
adc
adc
lods
inc
cmpsl
pop
pop
xchg
aad
rcr
cmc
mov
mov
int3
loopne
add
and
mov
jns
pushf
pop
pop
adc
cmp
adc
loop
push
stos
add
cwtl
adc
cmc
push
fcomi
test
sub
jp
xchg
push
lcall
mov
mov
jp
out
ja
insl
mov
pop
pop
mov
test
sbb
xchg
add
cmp
js
insl
ret
lahf
jbe
cmp
sbb
shll
xor
jmp
out
jns
push
push
xchg
test
out
rclb
push
movsb
addb
lret
stos
jmp
les
test
mov
lods
or
cmpsl
out
push
mov
lds
or
sub
mov
movsl
inc
pop
push
xchg
mov
xchg
jnp
mov
scas
xchg
or
cltd
sbb
fwait
clc
subb
into
setbe
xchg
mov
pop
lds
cs
icebp
repz
les
mov
std
cltd
add
test
mov
push
jb
inc
xchg
iret
repnz
push
xchg
and
inc
push
sub
sub
mov
jbe
cmpsb
xchg
xor
popa
cmpsb
inc
sbb
scas
insb
out
outsb
jmp
mov
and
or
bound
pop
ja
push
js
inc
add
push
mov
test
xor
shl
hlt
pop
fstps
stos
cmc
fidivl
pop
mov
add
scas
add
mov
movsl
in
hlt
fs
xchg
sub
out
jmp
cmp
adc
clc
jo
mov
ljmp
push
hlt
pop
or
lret
add
sbb
pop
test
jle
repnz
or
mov
pop
or
rcll
add
mov
cmp
mov
mov
lcall
push
push
test
mov
sbb
sub
sbb
inc
xchg
mov
xchg
and
pusha
fwait
mov
arpl
mov
fwait
push
push
adc
sbb
jge
mov
or
and
add
mov
js
mov
push
fisttpl
inc
and
mov
xchg
aad
aam
inc
pop
addr16
sbb
stos
and
and
adc
push
rolb
sbb
xchg
test
mulb
sbb
xchg
xor
or
jbe
mov
pop
stc
stc
cld
mov
pop
jo
stos
cwtl
mov
mov
fisttpll
cmpsb
sub
dec
add
rorb
sbb
or
and
rcr
icebp
js
and
mov
push
dec
stos
data16
ljmp
push
sbb
or
adc
cld
cmpsl
jne
fwait
in
push
scas
test
sub
cld
pop
in
fwait
or
mov
pushf
sbb
or
fists
orl
mov
xchg
cmpsl
adc
push
xchg
jg
push
dec
stos
mov
arpl
mov
scas
jb
movsl
mov
mov
adc
cltd
push
jmp
outsl
sar
out
les
aas
leave
test
lods
dec
lret
clc
mov
mov
mov
push
or
push
hlt
andl
fnstcw
ljmp
sub
sub
imul
adc
add
movsl
add
imul
ret
mov
push
out
mov
jnp
out
popf
mov
das
add
cwtl
mov
insl
pushf
adc
lds
push
jbe
xor
mov
cli
sbbl
cmpsl
dec
cld
in
pop
and
and
sbb
push
inc
js
push
lcall
je
subb
adc
xchg
sub
call
movsb
and
mov
aad
fsubr
lods
pop
sti
inc
jne
in
mov
int
in
cld
jns
xchg
dec
cwtl
mov
pop
shrl
hlt
movsb
movsb
mov
test
mov
pop
mov
notb
jnp
xchg
pop
adc
in
pop
mov
mov
mov
fldl
in
fisttpl
sbb
fld
daa
aam
xchg
jle
ss
pop
cmp
negb
and
mov
stos
stos
shl
rcll
mov
sub
mov
jnp
repz
pop
jae
or
mov
fiaddl
mov
mov
jg
jg
jecxz
ljmp
mov
fmull
and
sub
out
nop
arpl
incb
push
pusha
cmp
push
mov
into
inc
stos
xchg
adc
mov
out
hlt
mov
xchg
addl
dec
std
inc
icebp
aad
adc
mov
sbb
jge
push
and
stos
xor
sar
rolb
ljmp
dec
in
dec
adc
mov
imul
cmp
lods
fsubrl
icebp
add
jge
fbld
icebp
shr
arpl
in
fwait
pop
xchg
xchg
out
js
jp
xor
push
cmp
or
insb
cmp
mov
push
lea
mov
pop
ja
dec
adc
mov
test
inc
adc
xchg
shll
cld
in
and
dec
imul
jl
lahf
out
popa
pop
aas
xor
jge
adc
mov
mov
mov
outsb
idivl
pop
sbb
addr16
dec
or
pop
leave
add
mov
mov
pop
add
sbb
adcl
sbbb
loope
mov
insb
movsl
and
in
xlat
test
add
into
testb
dec
push
adc
pop
jb
mov
cmpsb
sub
fdivs
pop
sbb
out
pop
hlt
push
cwtl
frstpm(287
push
mov
lock
add
nop
out
movsb
in
ljmp
push
cmc
pop
fstl
cmc
lret
cmp
mov
xor
loope
mov
and
adc
pop
ss
dec
jle
ds
or
rcr
xor
sarl
add
out
shlb
test
gs
mov
cmpsb
push
and
loope
call
out
pop
and
imul
add
xlat
clc
add
xchg
mov
cltd
and
cwtl
sub
cmp
divb
jmp
add
mov
int3
push
or
leave
and
das
pop
stos
insl
and
and
int3
xor
cwtl
inc
orl
insb
sub
cwtl
ja
adc
sub
inc
test
inc
cmp
sub
xor
ds
sbb
loopne
dec
pop
mov
pop
shll
mov
push
jmp
cmc
mov
xor
ret
or
pop
and
xchg
mov
xorb
div
xchg
nop
in
sahf
mov
mov
test
and
lret
push
xlat
cmpsl
lret
or
rolb
ljmp
int
insl
rorl
mov
lcall
lret
xor
adc
cmp
jne
mov
test
js
fs
mov
aaa
shll
mov
imul
inc
mov
jbe
nop
ja
into
xor
xchg
jecxz
hlt
push
arpl
xchg
ret
cmpsb
push
daa
mov
rclb
push
inc
sbb
pop
ds
push
mov
push
cmp
xchg
arpl
daa
lods
mov
ficomps
or
rcrl
mov
xlat
jns
inc
mov
pop
outsb
fistpll
rcl
in
xchg
aaa
jae
adc
xchg
cmp
js
arpl
add
movsl
popf
xchg
or
test
cmp
mov
pop
pop
repz
iret
aad
mov
shlb
jae
jp
cli
lock
cmp
outsb
imul
out
cmp
mov
ss
std
lds
and
stos
xchg
scas
lret
mov
jle
test
jne
xlat
dec
test
mov
xchg
pop
test
sub
shl
inc
jb
and
jnp
lds
movsb
mov
push
loope
xor
mov
ss
adc
sub
ror
mov
flds
cmpsl
cli
dec
mov
mov
cmpsb
mov
repz
and
ljmp
xchg
sub
lea
or
fs
lret
dec
cmc
rcr
mov
cmp
aam
jns
dec
ja
jnp
imul
call
fbstp
push
mov
jns
insb
icebp
mov
sub
arpl
mov
and
push
mov
loop
push
xchg
jnp
add
sbbb
jo
test
test
jnp
mov
and
push
into
call
and
jae
jge
push
leave
hlt
inc
and
insl
xchg
mov
pop
ret
push
sbb
dec
xchg
mov
pop
sub
rorl
cmp
daa
add
mov
jg
into
and
push
jno
dec
shll
in
shrb
ljmp
lods
andl
xor
cltd
or
push
sub
scas
push
int
repnz
out
push
sub
clc
jmp
cmp
sbb
pusha
cmp
dec
clc
sbbb
cld
mov
scas
out
faddl
sar
jb
rcrl
push
or
add
push
push
outsl
rcr
cmp
xchg
mov
xor
enter
repz
cli
insl
roll
int
nop
imul
cld
jb
hlt
xlat
push
imul
sub
pop
sbb
fsubp
sub
clc
out
stos
fistpl
je
mov
aas
mov
mov
dec
sti
outsl
jl
lods
dec
fs
in
inc
fs
xchg
lea
dec
fucomi
cmp
inc
mov
and
and
inc
pop
mov
scas
push
ret
bound
int3
jle
cmp
aad
incl
adc
hlt
iret
ds
mov
mov
cmc
push
cmp
sbb
cwtl
bound
push
mov
xor
mov
js
xor
rorl
mov
sti
out
idivb
mov
xor
ds
lods
in
sub
adc
popf
ret
mov
ljmp
cmp
js
add
in
call
inc
xchg
pop
jbe
inc
mov
stos
adc
xlat
mov
inc
dec
or
push
jge
sbb
adc
pop
add
ss
xchg
pop
sub
test
testl
out
fwait
stc
xor
call
andl
xorl
xchg
push
xchg
mov
iret
cmc
xchg
pop
stos
adc
and
jbe
and
gs
mov
push
out
pop
cs
push
jp
push
add
clc
pop
push
je
lea
or
add
inc
les
jb
lds
and
xchg
push
pop
sub
in
xor
jb
clc
mov
mov
cmp
enter
shlb
loop
sarl
xor
mov
test
lret
cwtl
jo
xchg
sbb
xchg
repz
cmp
cld
out
jbe
shl
xchg
out
pop
mov
sbb
push
and
inc
adc
mov
pop
in
and
stc
aaa
inc
mov
pop
test
mov
pop
push
mov
sub
fadds
pop
xor
xor
push
inc
cmp
mov
outsl
loope
lds
cmp
xor
xor
in
lea
cmp
mov
jmp
inc
jl
lds
scas
mov
and
je
cmpsl
stos
daa
xchg
call
pop
pop
sbb
mov
ja
cmp
nop
push
or
shl
push
xchg
incb
add
jno
rcrb
push
add
ja
mov
jmp
sbb
js
popf
mov
jg
stos
mov
push
insb
jmp
mov
cmp
jg
jbe
fwait
xchg
dec
mov
lcall
push
and
pop
sub
add
sub
jl
pop
xchg
ret
adc
adc
cmpsb
xlat
sbb
mov
cmc
xchg
jg
es
cmp
or
leave
inc
bound
mov
push
insl
jnp
push
mov
cmp
mov
ret
stos
lret
into
dec
ret
cwtl
jo
testl
shr
or
out
and
fistl
sahf
pop
cmp
aas
jne
stc
pusha
jle
movd
and
push
mov
test
lods
or
push
cmp
mov
xor
xor
adc
or
daa
jl
mov
imull
mov
cs
sbb
mov
inc
outsb
jb
dec
icebp
sub
int
popf
movsl
adc
jecxz
pop
movl
xchg
xchg
js
xor
lret
aam
fisubs
mov
push
mov
fists
push
push
push
into
test
mov
xor
jno
or
jecxz
inc
push
sbb
xchg
std
loope
push
pop
decl
loop
push
lret
arpl
test
mov
sti
dec
ljmp
jnp
mov
mov
cmc
data16
or
fistpl
push
das
cmpsb
xor
xchg
lret
cmpl
je
enter
iret
mov
ds
lock
and
cmc
jp
jge
push
cmc
xlat
mov
outsl
bound
mov
arpl
push
clc
dec
cld
xor
insb
push
pop
mov
cmp
repz
mov
out
mov
sub
sarl
lock
aad
or
mov
out
les
cmp
je
dec
adc
cli
xor
aas
ds
les
mov
lods
jle
jae
cmp
mov
xchg
jmp
mov
or
imul
mov
sub
xor
xchg
stc
add
jle
dec
sub
leave
mov
jl
gs
sbb
call
loopne
aam
mov
hlt
push
pop
cmpsb
gs
into
push
mov
mov
push
sub
push
mov
inc
mov
inc
sbb
mov
mov
out
cltd
cld
inc
xchg
divl
dec
jmp
dec
movsl
js
in
in
cmp
dec
cmpsl
inc
push
mov
mov
fmuls
dec
in
sub
mov
mov
outsb
mov
sbb
xchg
in
xor
dec
push
cmp
pop
jp
imul
cmp
dec
and
fsubrl
pop
das
mov
ljmp
and
add
mov
into
inc
test
lret
xor
dec
fs
test
push
push
xstore-rng
cmpsl
test
out
push
movsl
xor
lods
call
xor
gs
mov
pop
mov
loopne
nop
mov
dec
popa
dec
mov
inc
jne
push
or
mov
sbb
xor
je
stos
or
hlt
popa
out
enter
jno
pop
mov
adc
add
out
sar
lret
or
fs
xor
sub
aaa
cmp
out
sub
cmp
inc
mov
in
loope
and
lahf
in
enter
adc
js
jbe
mov
scas
pop
push
jnp
mov
push
mov
into
add
lahf
pop
push
mov
rorl
jns
jge
pop
or
dec
adc
mov
sbb
push
stos
rcrb
cmpsl
rclb
mov
jge
jbe
xchg
fucom
dec
iret
jp
push
xor
arpl
mov
imulb
mov
cmp
lahf
inc
mov
cmp
jecxz
test
add
lahf
fistps
ret
mov
pusha
outsl
lret
push
notl
ret
pusha
lahf
fs
outsb
xchg
add
roll
mov
xchg
shlb
sub
or
sbb
push
les
dec
faddl
xor
mov
sti
push
pop
mov
push
sbb
adc
pop
jle
leave
or
mov
sti
dec
pop
jb
ljmp
mov
sbb
add
sbb
inc
adc
int
stos
xchg
sub
mov
dec
pop
imul
call
xlat
cmpsb
popf
adc
sbb
xchg
mov
cmp
sbb
shlb
inc
mul
lret
frstor
nop
stc
xor
xlat
call
xor
fbstp
cwtl
pop
fnstsw
les
frstor
in
pop
into
push
sub
out
rol
push
jg
add
icebp
push
dec
add
aas
cmpsl
pop
push
popa
ja
dec
or
push
mov
add
xchg
lock
sbb
pop
sub
jo
cli
push
dec
out
shrb
dec
fs
lock
push
mov
or
sbb
aaa
xor
test
inc
jno
pop
jle
and
call
pop
frstor
pusha
movsb
clc
hlt
mov
xchg
cmp
xchg
fcoms
jnp
es
push
ja
or
fs
lods
pop
cmp
fnstcw
or
or
int
loope
dec
insb
sub
out
adcl
and
test
xchg
push
popf
pushf
test
mov
sub
mov
stos
daa
and
test
and
mov
shrl
lcall
test
shrb
cmp
push
jecxz
jle
and
sarb
std
xor
pop
xchg
or
inc
cmp
outsb
xchg
in
xchg
mulb
xchg
add
inc
push
jns
fidivl
push
ss
lcall
pop
aad
int3
push
insb
cmp
rorl
pop
jnp
je
jbe
int3
lea
mov
or
add
loop
fs
push
dec
xor
jge
mov
push
mov
imul
sub
cmp
cmc
push
adc
inc
pop
lock
pop
fs
jnp
stos
cmc
adc
dec
je
out
fs
test
cmp
fdivrl
and
add
and
cmc
cld
imul
loopne
pop
enter
fstpl
add
test
mov
and
fs
mov
leave
test
arpl
gs
clc
pushf
jo
cwtl
jns
pop
cs
xchg
sbb
aam
lret
push
xlat
mov
or
mov
mov
lods
xorl
mov
add
sahf
mov
sub
pop
jns
mov
push
ficoms
int
sbb
jbe
mov
fwait
jp
stc
add
lock
xlat
dec
and
or
mov
icebp
js
lds
xor
lret
xorl
mov
mov
and
push
add
out
mov
imul
jbe
jnp
out
cmpsb
call
loop
addr16
inc
pop
mov
shrl
push
testl
int3
or
mov
into
cmp
addr16
enter
mov
std
les
sysenter
xchg
adc
dec
jne
mov
pop
xor
mov
lock
data16
jp
push
adc
std
mov
fisttpl
dec
outsb
push
jecxz
pop
int3
inc
and
or
ja
call
test
jo
mov
push
movl
dec
cmc
xchg
shlb
aad
jb
xchg
sbb
enter
or
mov
enter
test
mov
faddp
aad
in
mov
push
mov
sbb
push
mov
xlat
leave
push
mov
and
jns
or
dec
sbb
pop
aas
dec
ja
fimuls
or
imul
fwait
cmp
sti
lods
subl
jae
or
xor
xor
and
pop
pop
ret
dec
lcall
xor
or
mov
ja
mov
inc
sbb
pop
icebp
inc
jl
mov
outsb
loopne
push
je
dec
sbb
xchg
outsb
inc
add
out
mov
call
insl
lock
outsl
push
pop
lahf
sbb
sub
cmp
dec
xor
int3
hlt
inc
push
lea
push
xor
push
subl
mov
mov
sub
popf
and
mov
mov
ficomps
outsl
in
mov
call
adc
stc
sbb
jg
jo
push
sub
jb
sbb
nop
pmaxsw
fcomi
or
add
add
dec
xlat
or
rcr
xchg
pop
fsubs
lock
mov
mov
mov
mov
icebp
jo
add
repnz
xchg
inc
xchg
pop
xchg
hlt
push
mov
jae
push
test
mov
sbb
and
imul
pushf
sub
test
dec
insl
add
dec
push
jne
push
pop
adc
pop
pop
dec
mov
cli
jp
aas
mov
movsb
adc
sti
pushf
bnd
es
pop
cltd
pushf
cli
and
jecxz
inc
out
fwait
mov
xor
cmp
mov
test
popf
adc
shrl
mov
insl
sahf
and
fs
mov
fwait
sub
cmp
in
mov
cmc
mov
clts
dec
mov
mov
and
js
mov
mov
testl
pop
loop
mov
mov
or
lea
cmp
imulb
loope
nop
jle
js
sub
les
sub
popf
and
inc
jg
ret
movsl
sbb
jno
xchg
in
pop
push
rcrl
orb
xchg
jno
scas
pop
gs
stos
or
jo
flds
xor
mov
xchg
xchg
push
fisubrl
add
ljmp
lock
loope
push
enter
mov
int
out
inc
inc
add
jge
jae
movsl
jb
das
out
sub
sbb
xchg
sub
and
inc
pushw
jne
mov
mov
in
xor
mov
jo
repz
ret
adc
pop
movsl
and
add
cs
out
adc
cmp
sti
xlat
sub
xor
sahf
rorb
xor
ljmp
movsb
or
add
fcoms
jecxz
add
or
pop
aam
pop
cmp
xchg
jg
repnz
fisubl
int
and
fs
call
inc
aam
mov
mov
sbb
add
lds
fidivrs
ret
push
and
cmpsb
arpl
outsl
shl
xchg
cmpsb
mov
loop
sbb
push
insb
add
or
push
out
out
inc
and
adcb
mov
inc
xor
mov
sub
cld
lcall
or
mov
mov
aas
js
ret
test
cmp
loop
or
and
je
dec
sbb
mov
addb
adc
add
roll
insl
test
pusha
and
test
clc
adc
push
cmp
jnp
ljmp
inc
adc
cs
in
cmp
daa
xchg
hlt
push
add
jmp
ret
and
add
xor
adc
jmp
dec
jne
mov
and
xor
dec
or
pop
dec
mov
shrb
push
insl
lea
repz
mov
or
pop
jmp
jbe
fistps
mov
icebp
add
mov
mov
movsb
ljmp
shlb
lods
pop
push
cmp
repz
dec
sub
push
in
ret
addl
mov
cmp
dec
enter
scas
outsb
stc
xchg
daa
shrb
or
mov
and
repz
insb
stos
scas
dec
inc
inc
mov
jl
push
mov
outsb
ljmp
xchg
loop
cmpsb
mov
add
sbb
inc
xchg
fcmove
rol
cwtl
inc
pop
mov
mov
call
pop
lock
mov
sub
pop
loopne
hlt
movzwl
mov
mov
ret
inc
ljmp
ds
arpl
cld
sub
testl
in
leave
xor
xchg
add
fldt
ja
xor
push
cld
jge
mov
popf
enter
add
insl
dec
aad
push
sbb
repz
push
or
int3
jp
xor
inc
ror
ja
push
das
fnstsw
adc
fs
cmp
sub
xor
out
lret
pop
jnp
out
or
int3
push
movsl
sbbl
cmpsl
imul
scas
jp
enter
mov
sahf
rcrl
xchg
stc
mov
and
pop
mov
dec
jge
jmp
andb
inc
adc
mov
mov
inc
js
and
jg
jle
push
push
sub
mov
nop
pop
fsub
mov
jbe
and
jnp
mov
fwait
xor
lcallw
flds
subb
ret
mov
movsb
bound
xchg
adcb
push
adc
jae
lcall
mov
sbbl
lods
inc
mov
dec
and
test
ret
jmp
aad
inc
xor
bound
aam
scas
dec
push
or
dec
mov
fdivrp
push
mov
scas
mov
pop
lods
shlb
pop
push
js
or
xor
push
lods
xor
hlt
and
push
adc
add
xchg
push
adc
rcrl
mov
insl
mov
pushf
pop
iret
lods
loope
stos
and
jle
and
call
adc
ds
cmp
lds
aaa
lret
mov
sub
les
stc
in
pop
repz
pop
sub
popf
mov
dec
inc
stos
adc
or
xchg
mov
mov
fstpl
aas
test
jb
fwait
inc
dec
jp
push
cmpsl
in
mov
or
fadds
cmp
sahf
icebp
fdiv
aam
call
cmp
out
xor
addr16
pop
adc
xchg
popf
outsb
mov
repnz
je
adc
or
push
mov
adc
fnstcw
cmp
das
imul
cmp
cld
aad
mul
inc
bnd
push
jnp
rcll
movsl
mov
iret
cmp
repz
xchg
in
mov
jbe
sub
add
sub
sbb
rclb
out
mov
dec
lock
outsb
outsb
push
and
negl
add
mov
out
add
pushf
lods
push
repnz
lods
dec
and
fstpl
inc
jo
cmpsb
pop
ja
stos
pop
out
inc
xor
jb
movsb
push
aam
fsubrs
std
cmc
daa
xlat
sub
adcl
and
jns
mov
outsb
fcmovnbe
jo
fisttpl
sbb
dec
dec
push
adc
in
xchg
xchg
js
repz
mov
mov
mov
and
in
les
int
hlt
push
push
test
dec
inc
clc
inc
inc
cwtl
pusha
cld
xchg
pop
push
mov
rol
sbb
push
push
xor
movsb
ljmp
lcall
into
gs
fmull
and
pushf
ja
xchg
daa
outsb
ret
stos
xor
xor
lds
test
movsb
push
adc
fnstsw
or
mov
or
xor
not
push
loop
sub
scas
cs
adc
and
sbb
xor
scas
cwtl
arpl
lods
in
jg
lods
cmpsb
sub
pop
div
das
cmp
mov
push
xor
popf
pop
cmp
or
fldenv
out
fnstenv
sbbb
pop
cld
dec
fldenv
test
roll
push
inc
dec
in
in
insl
push
add
lock
inc
add
sub
jg
sbb
rorl
cmp
jno
add
js
movsl
dec
outsl
out
stc
mov
push
js
leave
cmc
sbb
mov
and
cmp
fdivrs
call
int
int
dec
test
push
movsb
inc
push
pop
fists
in
pop
lock
lret
or
imul
xchg
mov
and
mov
and
popf
mov
int3
sti
shll
pop
pop
call
stc
dec
js
je
les
mov
xor
mov
dec
ret
jle
push
add
inc
pop
cmc
mov
test
out
fwait
sti
es
jmp
loop
cmp
mov
mov
in
or
test
rcll
sbb
adc
js
add
or
je
jbe
push
out
call
jg
popl
xchg
dec
fucomip
jns
dec
push
js
push
pushf
dec
sbb
xlat
pop
push
lret
ret
pop
mov
je
mov
sbb
sub
and
repz
shrb
test
lcall
iret
jp
cmp
loop
ljmp
loope
mov
xor
shll
push
mov
xor
or
shl
push
mov
add
nop
into
fbld
je
pop
dec
mov
imul
fisttpl
pop
jne
and
pop
xor
rolb
lret
xor
fildl
movsl
jmp
sbb
or
pop
mov
lcall
push
sbb
sbb
cmpb
ja
ret
cmp
arpl
dec
inc
imul
rdmsr
push
push
addl
xor
fcmovb
outsl
jp
push
xor
lods
jg
addr16
xlat
cmp
mov
adc
int
adc
movsb
mov
lret
mov
mov
ds
filds
les
pminsw
shll
gs
cmp
mov
add
mov
subl
jl
cmpsl
movsl
aam
pop
push
dec
mov
jb
add
xor
and
aaa
cli
frndint
mov
aaa
pop
insb
scas
xor
pop
and
dec
add
mov
jo
inc
or
mov
ret
lods
jmp
popf
mov
xchg
cmp
outsb
sbb
jl
pop
std
xchg
shlb
in
rclb
push
aad
push
jb
ss
lret
or
jo
xor
pusha
popf
jnp
mov
movsb
divb
xor
xchg
stos
and
rorl
sub
xchg
mov
pop
or
push
rep
push
imul
cmp
icebp
daa
adc
sbb
cld
jae
pop
lcall
pushf
in
out
jns
test
pop
xchg
xchg
rclb
sub
outsl
adc
cmp
je
jno
mov
or
cs
jg
inc
rclb
cmp
and
aaa
xchg
jno
or
mov
dec
sub
jae
add
fwait
les
sbb
lret
fnstcw
add
pushf
xchg
leave
fisubrl
cmp
mov
push
pop
xor
ffree
popl
push
xor
lret
ljmp
push
js
sub
mov
or
adcb
ret
mov
xor
movsb
fwait
pop
sub
fsubrl
push
pop
sub
inc
cmp
out
jmp
cmp
jl
push
push
mov
inc
add
mov
add
add
out
jmp
adc
jae
jge
scas
push
pop
ss
mov
mov
mov
add
jnp
mov
std
mov
jl
sbb
int3
pop
ret
mov
out
insb
xor
pop
in
push
scas
test
mov
in
icebp
mov
add
pop
sub
sbb
aad
push
jb
pusha
out
xchg
mov
gs
in
int3
fidivrl
mov
xchg
or
push
push
pop
int
add
mov
cltd
xchg
andb
push
inc
lret
sub
add
shlb
lret
je
add
push
ds
movsb
bound
in
js
push
jbe
push
mov
ret
xor
sbb
mov
inc
call
decl
in
ja
pop
mov
push
lods
int
mov
shll
sbb
mov
and
mov
fidivs
jmp
lret
xchg
dec
lock
test
mov
jecxz
sub
fbld
ss
pop
es
sbb
and
push
jge
rcrb
jbe
inc
and
call
dec
frstor
cmp
push
mov
jbe
xchg
stos
xchg
xlat
outsl
in
mov
jmp
daa
inc
in
into
xor
test
jmp
cmp
sbb
or
xlat
bound
adc
push
sbb
stos
jle
and
lock
adc
repz
pop
add
rorb
test
mov
andl
add
imul
jge
mov
pop
cmpsb
je
shrl
lock
jb
in
enter
mov
xorl
in
push
xor
in
bound
pop
mov
jecxz
jae
mov
cmp
cmp
adc
cwtl
mov
xor
mov
rcrb
pcmpeqb
cmp
cmpsl
jo
mov
or
cmc
dec
ret
ja
pop
or
idiv
into
sbb
mov
shrb
dec
xor
lods
sbb
mov
enter
push
or
inc
mov
rcl
xchg
aas
enter
fidivs
repnz
mov
cmpsl
add
jns
shrb
lds
orb
inc
pop
imul
test
xor
out
out
xor
jecxz
inc
lcall
outsl
xchg
adcl
xchg
enter
dec
dec
xchg
adc
jae
cwtl
adc
inc
pop
pop
call
xchg
jae
push
push
cmc
and
adc
out
loopne
sbb
stc
mov
mov
dec
jns
fs
lret
in
xor
xor
stos
fs
aam
fldcw
rcrl
sub
mov
movsl
xchg
loope
movsb
imul
outsl
mov
ret
in
movsb
add
lret
jne
or
cwtl
mov
xchg
pop
dec
jg
sub
jno
mov
jbe
imul
inc
jl
inc
cmpsl
mov
rorl
ds
sbb
cmp
es
jp
add
add
loop
mov
cmpsl
add
pop
inc
mov
mov
push
mov
and
dec
jl
sub
cld
mov
fcoms
jg
xor
mov
lahf
clc
scas
cmpsb
leave
scas
enter
mov
inc
movsb
xor
aam
inc
adc
xor
add
mov
dec
mov
dec
lret
jb
fisubs
sub
push
xor
mov
cld
pop
test
dec
pop
popa
in
test
inc
ret
ss
out
divb
xchg
dec
mov
push
scas
in
ret
pop
fwait
inc
cmpl
cli
in
fbstp
sub
jmp
inc
cmp
sar
fldcw
ljmp
push
cli
stos
imul
ljmp
push
add
fdivr
in
iret
nop
pop
cmp
outsl
out
pop
dec
cwtl
xor
dec
adcl
pop
cmc
in
push
pcmpgtw
xor
fiaddl
mov
data16
jbe
iret
js
out
push
push
lea
ret
push
ret
les
outsl
mov
mov
xchg
lret
dec
je
loope
sbb
les
sub
sub
cmp
or
dec
scas
jp
inc
scas
adc
mov
xchg
int
fcomps
notl
sbb
push
shr
jl
data16
push
dec
inc
in
imul
inc
cli
std
ret
sub
stc
lods
and
mov
inc
stos
add
ret
xor
int3
xchg
lods
mov
mov
sub
cli
loope
cmc
aas
cmp
sub
adc
daa
mov
push
lret
jo
lcall
ljmp
xchg
cmc
pop
push
cmpsl
in
add
adc
add
or
xchg
adc
pop
jecxz
push
xor
dec
cmp
lods
movsb
jb
aas
pop
or
mov
stos
pusha
cmc
lods
pop
jmp
movl
in
in
sub
mov
aas
xchg
sub
mov
mov
dec
push
mov
sbb
fiaddl
push
and
mov
sub
lcall
insb
cmp
mov
pusha
and
rcll
cmp
fdivr
aad
inc
jge
push
aaa
test
jge
outsb
scas
inc
ret
pop
mov
in
xor
loopne
pop
xlat
popa
movsb
jl
test
push
jmp
negb
sub
xchg
ficoms
mov
out
dec
xor
fbstp
ljmp
popf
mov
jne
cmpsl
fsubr
push
scas
jns
xor
xchg
aaa
minps
ss
cli
xrelease
imulb
mov
call
push
and
and
aad
dec
popf
fcmovb
add
pop
cmp
push
test
dec
sbbl
xchg
scas
sub
add
mov
or
pop
in
xorb
sbb
push
outsl
mov
or
cmp
iret
inc
movsb
test
insb
mov
cmp
out
lea
into
push
andb
pop
xchg
and
insl
fyl2x
jle
jo
mov
dec
rolb
jg
mov
mov
mov
pop
add
inc
sti
adc
cmp
sti
popf
xor
cmp
sbb
pop
add
adcl
mov
daa
push
xor
leave
mov
lock
aaa
stos
jb
cmp
push
push
leave
adc
push
mov
fldenv
jb
fiaddl
dec
mov
pop
repnz
aaa
mov
mov
repz
jnp
xchg
mov
mov
decl
fisttpll
fiadds
insl
inc
subb
mov
lock
cld
push
add
popf
mov
xchg
lods
sbb
and
push
in
mov
push
lods
or
xor
or
pop
sbb
ret
xor
adc
inc
push
sahf
or
sahf
xorb
rol
shl
std
daa
push
mov
gs
repnz
imul
ficomps
insb
push
cmpsb
lods
dec
repnz
incb
or
add
mov
dec
inc
fimull
xchg
lds
shrb
or
cmpsw
jb
sbb
jle
jmp
pop
cwtl
mov
out
pop
into
addr16
movsb
sub
lahf
repnz
mov
movsl
jecxz
sbb
or
mov
mov
sub
add
popa
mov
les
lcall
cs
xchg
xchg
mov
inc
int3
xor
loope
inc
cltd
mov
and
inc
std
or
movsl
jmp
or
out
mov
in
sub
push
jnp
lods
xchg
and
in
test
cmpsb
sbb
fwait
add
into
jmp
cmp
scas
cmp
lock
push
jp
loope
pop
out
sbb
fdivrl
jg
pop
sub
ror
pop
or
push
adc
inc
sar
inc
icebp
sbb
fwait
stc
mov
or
insl
fidivl
jecxz
ret
mov
shll
ds
rcll
mov
fbstp
or
ljmp
aaa
insl
fisubrl
sbb
mov
iret
sub
push
sub
mov
cmp
insb
gs
daa
push
test
jl
sub
pop
push
ret
xchg
test
inc
mov
and
iret
addr16
mov
roll
testl
mov
imulb
push
mov
mov
jo
mov
pushf
cmpsb
test
int3
sbbb
mov
lock
sbb
pop
daa
xor
or
inc
cltd
movb
sbb
pop
out
cmpsb
pusha
aaa
sbb
int
out
rcll
push
jns
push
mov
xchg
cmpsl
sub
push
cmpsb
jbe
add
in
mov
aad
pusha
cmpsb
scas
mov
push
dec
push
sbb
push
adc
roll
ss
loop
sarl
stos
cmc
push
in
push
dec
sub
lods
push
inc
pusha
add
shll
and
call
push
and
inc
mov
cmp
cmp
sbb
jmp
pop
jo
sar
lret
and
pop
jae
mov
mov
mov
repnz
sub
dec
pop
int
test
xlat
fcoms
push
mov
mov
mov
push
les
in
jns
aam
cmp
andl
shlb
adc
mov
std
cmp
sti
mov
push
or
hlt
sahf
lea
test
mov
pop
jge
aam
xchg
ljmp
pop
cmpsb
cmc
xchg
adc
jl
lds
add
aas
dec
pop
or
lods
icebp
sub
mov
and
mov
cmp
js
mov
les
mov
push
aam
arpl
mov
out
test
icebp
jmp
xor
and
sarl
dec
xchg
lahf
imul
fildl
data16
ljmp
jbe
mov
sub
sub
ja
jns
in
aaa
mov
stos
in
cmp
sarl
pop
test
movsb
jge
js
pop
imul
jne
sbb
sti
mov
aam
mov
lret
xor
jge
iret
add
pop
and
fldenv
mov
mulb
shlb
mov
movsb
jb
in
dec
push
xchg
pop
pop
popf
pop
sbb
movsl
shl
or
out
out
cmpsl
aad
dec
mov
inc
sbb
rclb
and
movsb
sub
notl
add
fs
push
out
test
inc
adc
adc
jg
daa
push
mov
mov
lock
in
or
outsb
repz
std
in
pop
sbb
push
enter
pusha
imul
pop
xor
ficompl
jb
lods
and
jb
cwtl
mov
pop
insl
mov
orl
pop
fisubrl
in
cmp
mov
xchg
bound
xchg
in
out
cltd
iret
test
and
mov
cld
and
stos
ljmp
push
cmpsl
call
cmp
and
testb
shl
cmp
add
cmc
xor
sub
cwtl
stc
cmp
insl
xchg
roll
jl
pop
jo
and
sub
inc
imul
add
vpsubq
jl
xchg
push
fldl
mov
xchg
enter
inc
sub
scas
pop
jo
ss
cvtdq2ps
inc
cmp
popa
mov
mov
jbe
pop
ljmp
sbb
pushf
mov
fdivrl
cld
cwtl
inc
enter
cmpb
aaa
into
mov
pop
inc
out
inc
push
dec
insl
push
push
mov
data16
or
mov
sub
loope
mov
fsubrl
lcall
hlt
push
out
cltd
cmp
int3
pop
or
sahf
ja
cli
lds
lret
aad
scas
pop
std
xchg
movsb
xor
aad
gs
arpl
movsl
leave
and
xchg
or
mov
out
pop
pop
es
mov
cmp
mov
bound
loopne
fcoms
sbb
es
xor
in
int
jl
inc
push
dec
das
xor
sub
xchg
insl
and
mov
out
inc
scas
inc
lea
imul
sub
dec
aad
jmp
and
inc
in
add
inc
cmp
sbb
pop
xor
cmp
jo
cmp
bnd
push
out
xor
mov
bound
lret
lods
in
in
sti
push
adc
sbb
shll
mov
cmp
adc
aad
jo
push
pushf
push
and
adc
push
pop
adc
sbb
mov
mov
jae
arpl
add
orl
cmp
pusha
das
clc
mov
push
adc
pop
or
js
add
iret
push
dec
dec
nop
fiaddl
bnd
mov
sub
movsl
fldenv
xchg
in
stos
pop
lock
jl
stos
test
pop
mov
mov
adc
mov
mov
inc
push
rorb
jae
sbb
test
outsb
push
push
or
and
sbb
xor
jg
enter
outsb
push
cmp
out
mov
repz
nop
and
aaa
and
in
mov
stos
sahf
ret
ss
add
cli
aam
pushl
insb
sbb
xor
loop
cmp
sub
dec
out
fsts
lea
lcall
shrb
push
sti
loop
and
and
lea
sbb
enter
add
loop
jl
xor
jmp
in
jmp
jp
adc
inc
and
scas
cmp
pop
mov
cmp
pop
call
cmp
mov
xor
aaa
sbb
inc
pop
mov
cmp
sub
and
icebp
popf
jae
sti
sub
adc
sub
mov
and
fidivrs
inc
into
xor
ss
lcall
cli
out
inc
pop
push
sbb
adc
sbb
mov
aad
fistps
adc
sub
outsb
sbb
mov
xchg
push
fwait
xor
aas
pop
adc
decl
sbb
sub
outsb
pop
nop
jae
xor
sub
sub
in
and
sub
mov
mov
xchg
add
hlt
aam
or
loope
cmpsb
mov
inc
mov
outsl
call
and
mov
shrb
push
mov
mov
nop
xor
icebp
mov
push
lahf
xorl
aad
mov
sub
lock
fmuls
stos
aaa
sbb
cmp
xor
dec
xor
push
mov
adc
int3
jmp
lret
pop
add
dec
out
adc
adc
lahf
enter
fisttps
cmp
dec
mov
cmp
adc
jmp
aas
cmp
je
mov
mov
insb
jp
push
jb
pop
cmpsb
imul
lcall
ret
xchg
out
outsl
adc
xor
push
test
dec
fisttpl
cmc
xor
and
inc
push
into
sbb
adc
loope
xchg
pop
mov
imul
sbb
loop
aad
leave
dec
sub
push
push
lods
stc
cmpsb
inc
push
clc
sahf
xor
xchg
mov
inc
push
out
mov
ja
push
dec
pop
adc
inc
loopne
ds
fucomi
dec
cld
insb
xchg
test
add
pop
push
lock
inc
outsl
getsec
fdivrp
pop
sbb
lahf
cltd
jo
ret
mov
mov
or
inc
in
cltd
adc
xor
mov
mov
insl
clc
dec
ja
orb
rol
icebp
daa
mov
das
enter
xor
in
add
pusha
lcall
sti
fs
add
mov
rorb
add
pop
jp
push
push
fstpt
fistps
xor
jb
push
daa
pop
ljmp
fucomp
mov
lret
insl
mov
fwait
pop
xchg
insb
xchg
mov
add
push
movsb
in
xchg
sub
notl
out
into
lret
in
out
pop
add
or
cmc
dec
mov
xchg
pop
push
testl
aas
scas
inc
fcmove
push
inc
imul
or
sub
push
or
sbb
jae
mov
out
mov
mov
fstp
inc
mov
inc
lea
lret
dec
lods
cli
pop
lds
dec
and
pushf
cmp
bswap
popf
cld
dec
loope
jno
cmp
daa
mov
repz
ds
cwtl
mov
or
sbb
mov
sbb
test
sub
fsts
in
sbb
inc
xchg
push
add
and
jle
lock
adc
fistpl
jg
adc
mov
ja
cmp
pop
pop
xor
movaps
pop
mov
divb
mov
sub
pusha
add
shll
mov
sub
popf
dec
xchg
sub
fstpl
pop
jne
outsb
or
or
mov
das
pop
adc
mov
lcall
pop
cmp
mov
inc
inc
adc
rcll
iret
mov
int
scas
inc
jae
shlb
popf
faddl
adc
xchg
mov
mov
mov
lods
incl
loop
mov
out
and
aam
xor
or
clc
mov
icebp
orl
mov
test
push
aad
fwait
add
aas
xor
and
inc
adc
out
fdivr
pop
pop
push
leave
mov
lods
add
adc
and
add
bound
fnstcw
cmp
sub
jmp
aam
mov
insl
cmp
fstpl
cmp
out
or
adc
jp
or
sbb
inc
mov
stos
pusha
leave
jmp
lret
mov
mov
dec
mov
mov
sbb
loope
sub
sub
push
cmp
addr16
inc
cmp
movsb
int
xor
stc
mov
push
jg
add
ds
mov
xchg
pop
addr16
xchg
adc
shrb
out
push
stos
adc
mov
push
scas
xchg
mov
in
cmc
xchg
cmpsl
mov
mov
sbb
xchg
sub
sahf
jno
es
cmp
push
jmp
leave
dec
arpl
mov
pusha
dec
pop
aam
inc
add
cmp
lret
cs
je
dec
xor
jg
jns
add
dec
rcl
icebp
ljmp
mov
xor
or
test
sbb
std
add
fmull
cli
or
aaa
aaa
jne
xchg
push
mov
or
jg
scas
mov
pop
mov
pop
ds
sti
jno
mov
xchg
jno
mov
outsl
dec
das
cmp
jnp
mov
cmp
cmp
lahf
jg
stos
mov
jle
xorb
fidivrl
xchg
mov
push
or
pop
cmpsl
sbb
repz
push
sbb
lods
shlb
int
mov
jno
jbe
pusha
xchg
xor
add
cmpsb
mov
or
clc
bound
xor
test
je
lock
popa
movsl
xchg
daa
pop
mov
cmp
cmp
pop
push
iret
pop
mov
popa
mov
add
std
pop
or
mov
lret
jbe
xchg
sub
loop
adc
ret
imul
sbb
test
mov
push
xchg
push
jge
and
xchg
cwtl
inc
out
std
popf
mov
lret
adc
mov
or
shl
sbb
test
fistpll
adc
jmp
and
xlat
lds
ds
xchg
pusha
nop
jno
cmp
add
push
shll
cmp
dec
xor
das
pop
stc
pop
mov
dec
mov
stos
rclb
iret
jne
fistpll
lret
cli
jmp
movsb
decl
xchg
shrb
add
push
pushf
or
cs
pop
push
fnstcw
fwait
out
shlb
xchg
and
fisttps
adc
stc
cmpsl
pop
jge
movsl
repz
out
xor
jnp
jp
or
addr16
popf
test
inc
xchg
sub
push
std
or
lods
cmp
xor
xor
jbe
lock
fildll
imul
stc
jno
outsl
lret
sub
daa
rcll
lret
sahf
loope
cs
subl
fwait
andb
js
lock
sahf
fstpl
and
mov
xchg
mov
rcll
pop
cmp
push
xchg
dec
xorl
cmpsl
mov
mov
lock
addr16
les
xchg
lret
cmp
icebp
in
pop
sbbb
mov
cmp
push
push
stc
inc
stos
cltd
xchg
sarl
out
loop
jb
into
pop
fnstsw
add
insl
jge
push
fistps
add
cltd
shrl
jbe
inc
sarl
and
rclb
lods
ret
aas
in
mov
fwait
sub
dec
mov
leave
jnp
dec
push
in
sbb
mov
mov
jmp
bswap
add
mov
or
sbb
mov
and
xor
push
fcmovnu
andb
cld
xchg
or
fbld
mov
repz
xchg
pop
xor
sbb
sbb
and
xor
adcl
push
aas
insb
ja
ss
jae
inc
sbb
rcrb
pop
les
mov
mov
add
loope
mov
and
xchg
insl
jmp
aam
clc
sahf
lret
sub
lea
test
lock
mov
test
or
xchg
push
push
jmp
insb
lds
adc
leave
shl
shrl
shl
and
loope
hlt
arpl
into
lock
mov
adc
xor
cmp
jge
shll
xchg
inc
icebp
in
dec
test
out
cwtl
lea
lret
mov
or
frstor
nop
mov
imul
dec
sub
add
and
fdivrs
in
iret
iret
dec
scas
sbb
loop
sbb
lret
sub
push
mov
xchg
hlt
lret
cmc
incb
jge
cltd
push
cmp
jl
mov
repnz
push
dec
incb
ljmp
xchg
insl
xchg
push
and
push
pop
aaa
mov
sub
into
xlat
test
fists
daa
stos
and
mov
mov
xchg
mov
int
into
out
or
xchg
jmp
dec
mov
adc
cmpl
pop
jl
push
scas
ds
add
mov
aad
inc
xor
pop
sub
out
push
es
fldl
xor
sub
cwtl
mov
aas
xor
xchg
mov
ljmp
clc
stos
lock
sbb
sahf
pop
out
jno
aam
pusha
cli
sbb
scas
cli
fstps
in
and
mov
push
mov
mov
pushf
mov
pop
and
or
negl
or
xor
push
ljmp
dec
xor
cmpsb
mov
mov
sub
inc
in
les
adc
pop
js
cmpsb
jmp
loop
dec
and
mov
sub
push
jmp
xor
rcl
rorl
call
out
or
pop
jl
movsl
js
add
mov
or
sbb
mov
ficompl
popa
push
mov
sbb
dec
cmc
movsl
ljmp
mov
mov
jecxz
cmp
xlat
adc
mov
jne
xor
shrl
cld
lods
push
shr
inc
pop
push
hlt
lea
or
stos
adc
notb
xor
add
add
dec
xorl
iret
adc
mov
int3
inc
enter
gs
mov
setle
rcr
lret
lret
adc
rcrb
sti
pop
imul
dec
add
sbb
push
aas
stos
fsubrl
icebp
sub
pop
inc
push
inc
dec
jge
gs
aas
cltd
ds
pop
fstpl
sbb
fst
clc
xchg
and
pop
negb
push
inc
push
mov
pop
ret
mov
mov
sbb
movsb
sub
and
daa
mov
loopne
rcr
add
call
movsb
pop
aam
mov
jecxz
jge
sbb
rclb
dec
jl
jecxz
pop
xchg
movsl
sbb
sti
push
loopne
les
popf
and
inc
mov
xor
ja
insl
dec
sti
fdiv
mov
pop
cwtl
mov
pop
jns
jecxz
scas
add
fwait
mov
outsb
cmp
sbb
ds
dec
mov
ret
inc
push
dec
mov
add
int3
ljmp
inc
sub
push
cmpsb
test
repz
cs
push
pop
enter
push
fiadds
repz
and
pusha
sbb
aam
pop
xchg
cmp
jno
fcomi
les
or
sbb
mov
out
inc
stos
push
lahf
dec
cmpsl
loop
or
pop
ret
dec
cmpsb
icebp
sarl
arpl
xchg
inc
xchg
bound
lds
inc
mov
outsl
mov
adc
lods
jmp
shlb
data16
mov
rcll
pop
shll
scas
neg
push
aad
mov
popf
adc
in
test
cmpsb
fstp
scas
inc
loopne
xlat
or
ds
in
loop
inc
and
loopne
insb
pop
pop
xchg
jle
dec
stos
outsb
cmp
or
mov
push
je
cmp
out
dec
lret
adc
xchg
push
pop
mov
call
mov
sub
xor
testl
dec
shlb
push
mov
sub
push
mov
addr16
sbb
shlb
push
notl
mov
inc
fisttps
xchg
mov
xor
lret
repnz
push
int3
xor
mov
hlt
xor
push
or
bound
lock
push
test
stc
cmpb
jge
out
jl
xor
cld
pusha
add
sti
stos
aam
gs
aas
add
inc
xchg
cmp
push
cltd
cmpsb
lds
lahf
jp
call
inc
fsubr
mov
lds
push
adc
pop
lret
bound
cwtl
cmp
shlb
es
lods
push
sbb
mov
ror
in
rorl
ds
fmuls
xchg
push
daa
jo
dec
push
lods
leave
xchg
aam
dec
call
jbe
pop
xchg
cmp
mov
jo
add
popf
out
rolb
xchg
and
jbe
sbb
popf
mov
jns
dec
inc
cmpsb
stos
aas
sub
xchg
ss
inc
push
push
xor
aaa
into
movsl
push
push
rclb
daa
arpl
das
imul
movsl
jl
jle
cmpsl
repnz
mov
out
jns
sbb
das
mov
jge
or
lea
icebp
sub
xor
inc
add
cmp
imul
jnp
mov
mov
jnp
mov
int3
add
jno
aad
mov
in
js
dec
lahf
ror
fnsave
pop
loope
jle
hlt
jb
call
rorb
cmpsb
pop
loope
pop
mov
lcall
mov
dec
jecxz
enter
mov
xchg
ret
scas
icebp
push
mov
mov
sbb
pop
clc
jecxz
ss
xor
pop
adc
mov
shlb
sub
cmpsl
cmp
mov
andb
push
push
mov
adc
in
inc
and
add
fwait
adc
push
out
dec
nop
xor
push
pop
dec
pop
das
xchg
daa
lahf
sub
push
pop
mov
jecxz
out
dec
in
dec
inc
arpl
sahf
pop
repnz
into
outsb
jns
arpl
push
subl
adc
sub
sbb
add
mulb
sahf
ja
lods
jb
push
loop
sbb
icebp
adc
mov
jle
and
cmpsb
dec
cmc
fnsave
mov
pop
data16
dec
mov
daa
test
scas
les
jge
and
rorl
test
jns
in
lds
clc
aas
mov
and
sub
aaa
decl
inc
das
es
lods
or
sahf
ja
testl
ret
stos
mov
sub
mov
pop
jno
inc
cmp
and
aam
int3
mov
shrb
shlb
and
xchg
cwtl
out
jnp
mov
fwait
sub
dec
inc
mov
add
gs
push
loope
or
mov
popa
jne
fsubrs
lock
fsubs
jge
movsl
push
sbb
sbb
push
mov
lret
fldcw
mov
fsubl
dec
popa
shlb
cmpsl
mov
idivb
pop
sbb
rcr
mov
out
sbb
xor
mov
or
mov
cmp
mov
xchg
je
pop
xchg
hlt
lahf
pusha
jle
sti
clc
fcomps
sbb
cmp
push
divb
push
out
dec
flds
xor
enter
cltd
cmp
and
ja
push
push
mov
and
icebp
cmpsb
mov
cli
xchg
mov
cmpsl
pop
icebp
or
xor
popa
push
nop
sbb
sti
push
aam
lods
xlat
inc
into
cmp
mov
jl
stos
into
hlt
xlat
mov
fbstp
mov
cltd
loope
mov
stc
es
lods
ret
clc
xchg
loopne
mov
bnd
push
ret
es
scas
inc
jns
in
dec
xchg
mov
cli
pop
mov
outsb
mov
mov
mov
mov
imul
or
imulb
ret
ss
and
loopne
ss
pop
adc
cmp
jl
sub
push
lock
lcall
jno
xchg
movsb
stc
jns
in
fyl2xp1
mov
pushf
mov
jecxz
cs
mov
xchg
inc
lahf
mov
repz
adc
inc
mov
addr16
jmp
sub
and
jp
pop
xor
cli
sbb
test
mov
dec
inc
sahf
push
repz
push
je
mov
lcallw
or
mov
test
dec
pop
xchg
adc
mov
aam
mov
cltd
sub
fdivrl
ja
sbbb
icebp
shll
arpl
sbb
push
jg
or
test
daa
lea
rcrl
jne
dec
push
aas
mov
xchg
iret
aaa
xchg
and
lcall
mov
or
push
scas
es
popa
dec
jmp
push
outsb
mov
push
movsb
jecxz
and
enter
cmp
sbb
push
push
adc
sub
adc
push
mov
jnp
adc
lea
js
outsl
mov
cmp
pop
ja
dec
outsl
enter
xor
inc
sub
jbe
sbb
out
jno
lea
mov
jmp
into
dec
or
sbb
push
mov
outsb
repz
test
xchg
xchg
popf
push
test
insb
pushf
sti
mov
mov
jb
cmp
add
loop
pusha
cwtl
push
out
int3
bound
arpl
loop
and
movsl
mov
jo
jg
push
push
and
adc
cli
sbb
sbb
mov
inc
push
subl
mov
fld
xchg
push
sbb
mov
add
test
in
xor
xor
sarl
cld
xchg
es
out
add
rclb
andl
lcall
daa
mov
mov
andl
rclb
in
inc
cli
enter
pop
mov
outsb
addr16
inc
imul
pop
mov
adc
in
adc
frstor
movsb
pop
sarb
pop
inc
shrl
enter
lahf
push
aad
pusha
dec
cmp
ja
scas
mov
cmp
repz
jmp
push
mov
js
adc
iret
push
xchg
jo
int
ljmp
lret
pop
pop
mov
addl
xchg
addb
xor
pop
ja
cmc
das
jmp
xchg
mov
into
pusha
lock
mov
jle
sbb
cmpl
subl
jl
or
and
cli
das
mov
fsubrs
repz
add
mov
inc
cmp
sahf
fisubrl
int3
cwtl
and
jge
jns
adcb
test
sub
insl
jl
add
jl
mov
imul
pop
mov
jl
fdivrl
movsl
add
inc
leave
test
xor
adc
jmp
inc
mov
scas
or
mov
mov
jmp
xor
in
stc
pusha
mov
add
jg
into
jg
out
sub
lret
xchg
push
cmp
hlt
in
adc
sub
cmp
push
mov
cmc
xchg
sbb
adc
fdivrl
les
and
cmpsb
dec
lock
push
test
and
dec
nop
push
das
adc
das
fldt
push
pop
xchg
scas
sbb
mov
jo
dec
imul
sbb
adc
out
dec
mov
or
in
xor
fs
mov
sbb
sub
lods
inc
dec
stc
dec
jb
xor
xchg
push
sti
clc
stos
mov
mov
les
pop
iret
rcrb
ret
xchg
repnz
and
xchg
call
adc
mov
jecxz
cmp
mov
ret
pop
and
xchg
push
test
clc
scas
test
add
mov
shrb
add
lds
negb
daa
xchg
popf
and
and
add
sub
popf
adc
cwtl
mov
repz
call
imul
pushf
jns
mov
call
fs
push
mov
shrb
xor
xchg
cmpsb
pop
ret
dec
ljmp
lock
lods
sahf
std
mov
and
call
xchg
dec
push
or
lret
jmp
or
mov
push
out
hlt
push
and
jno
filds
insl
lahf
popf
adc
jecxz
cltd
adc
data16
cmp
sahf
fstl
push
ljmp
lret
dec
roll
inc
add
lcall
push
mov
push
rclb
jbe
adc
xchg
pop
mov
inc
add
mov
out
inc
mov
sub
rorl
xchg
paddw
rcll
test
jmp
int
adc
mov
cld
movsb
popf
je
div
inc
xor
mov
cltd
stc
in
lds
add
divl
jmp
sbb
iret
es
lock
or
ret
sbb
mov
mov
inc
ja
mov
and
lea
pop
mov
lods
mov
pop
out
das
inc
jl
mov
rcll
test
rcrb
inc
pop
pop
sub
sbb
dec
push
jge
out
shll
loope
xchg
movsl
dec
sub
push
test
cmp
or
inc
jmp
cmp
aas
loopne
pop
push
decb
repnz
inc
dec
fldt
inc
pop
popf
lods
xchg
inc
test
jg
lahf
call
mov
jp
jb
push
sub
cmp
sub
shrb
std
lods
fstpl
insb
dec
xchg
pop
cmpsb
mov
aad
lock
mov
outsb
mov
dec
and
cmp
mov
shl
mov
sub
jecxz
cmc
sbb
jb
inc
pop
in
cltd
jne
clc
mov
test
adc
push
cwtl
mov
adc
dec
out
cltd
jp
sub
cmp
in
sbb
mov
daa
ret
push
rcll
pop
sbb
jl
jb
xchg
mov
jp
sub
cmp
outsl
jl
mov
aas
or
jnp
sub
xchg
insb
cmp
ja
add
mov
arpl
rcrb
mov
xor
sub
lret
pop
stc
push
hlt
sub
imul
xchg
out
pop
scas
ret
sbb
nop
inc
lods
testb
incl
clc
loopne
xchg
addr16
pop
push
fdivr
movsl
mov
mov
dec
ficoms
and
xor
mov
mov
mov
das
cmp
xchg
bts
icebp
push
sbb
outsb
add
fstpt
sub
scas
push
dec
add
xchg
jns
sbb
lahf
xchg
fisubl
lret
adc
ror
lret
pop
mov
ja
push
inc
dec
push
mov
cmp
cmpb
sbb
mov
out
fbld
and
mov
adc
call
xchg
sub
add
pop
in
dec
xchg
popl
dec
int3
ds
mov
test
mov
addl
outsb
push
frstor
dec
push
and
xlat
add
sbb
lret
into
enter
pop
cwtl
fsubrs
dec
add
sbb
push
stos
mov
aas
add
dec
adc
ds
push
cmp
mov
cwtl
in
mov
or
popw
sbb
mov
sbb
hlt
stos
mov
ljmp
adc
gs
sbb
mov
jb
xchg
xchg
sbb
fisubl
push
dec
das
push
dec
lods
push
or
cwtl
mov
fsts
subl
and
mov
jb
xor
shlb
jo
and
pushf
jecxz
xchg
pop
xor
xor
shlb
in
inc
xchg
xchg
aaa
xchg
fistl
mov
jg
mov
out
inc
ret
adc
jl
cmp
push
jp
in
rorl
pop
insb
int3
mov
jle
pusha
ret
or
js
push
lret
je
mov
daa
and
pop
jge
shrb
mov
lods
push
mov
inc
mov
shrb
or
xor
mov
xchg
fstpt
mov
ret
jnp
sub
jge
lea
aad
out
pop
cmp
adc
shlb
lcall
dec
jns
scas
pop
sub
sbb
xor
and
push
out
inc
lods
mov
movsb
mulb
dec
push
loop
loope
icebp
dec
bsr
iret
in
mov
mov
test
push
dec
bound
lods
ja
mov
mov
push
add
lret
addr16
mov
in
add
xrelease
movsl
test
add
jnp
sbb
sahf
push
dec
mov
add
popa
pop
push
pop
mov
stc
or
push
daa
mov
fisubl
jno
lods
stos
mov
jae
or
xor
out
imul
push
pop
xchg
jno
fildll
sub
leave
pop
xchg
jbe
sarl
mov
je
adc
adc
fldcw
jo
cmp
cmp
mov
fcmove
cmc
out
rorb
inc
repnz
jne
out
aam
inc
insl
and
inc
xchg
lea
imul
mov
insl
lret
aaa
shlb
mov
mov
bound
sbb
dec
pandn
xor
jno
push
mov
imul
mov
cmp
mov
dec
sub
pop
cltd
pop
adc
mov
pop
outsb
lock
fistps
lret
push
std
xchg
test
xchg
in
mov
add
addr16
insb
out
in
cwtl
add
sub
jns
mov
jno
push
jl
rolb
pop
sbb
fadds
adc
sar
lahf
pop
or
out
sahf
inc
pop
cmp
sub
es
jo
lds
jmp
arpl
fmull
shll
sbb
addr16
js
std
mov
and
rcrb
or
ret
fldenv
ss
stos
rcrl
inc
and
pop
call
or
mov
mov
cli
imul
or
mov
dec
xor
mov
inc
insb
in
ret
mov
or
subb
adc
pop
es
or
lea
loope
add
push
mov
xor
mov
loop
rorl
rcrb
or
add
ret
fbld
clc
pop
sar
int
and
and
out
bound
outsl
scas
fnstenv
shll
pusha
pop
lret
ret
pop
jnp
inc
outsl
ret
mov
inc
add
push
mov
mov
sub
xor
push
aam
dec
std
pop
dec
shll
popf
xor
sbb
repnz
push
sahf
or
ret
test
cmp
dec
push
outsb
or
jg
out
dec
iret
or
leave
jp
add
push
das
scas
orb
stos
imul
stos
inc
cmp
jae
addb
das
pop
sti
dec
retw
push
lret
sub
loopne
outsb
lods
mov
sbb
aas
das
imul
jo
dec
loopne
add
jbe
and
cmp
sahf
out
inc
push
inc
aad
and
jmp
sbb
xlat
dec
lret
jecxz
negl
popf
incl
or
sub
sub
sub
out
push
aas
sbb
divb
xchg
jmp
jg
inc
cmp
inc
xchg
mov
add
gs
pop
sbbb
outsl
outsb
sbb
in
rcrl
xchg
shrl
cmc
add
lods
push
push
xchg
fcomps
hlt
jno
dec
cld
data16
mov
scas
cmp
push
xlat
mov
xor
ret
fnstsw
insl
ljmp
cmpl
mov
mov
jle
daa
xor
fwait
mov
pop
outsl
and
add
call
cmpsl
sbb
jns
mov
sub
sbb
xchg
negl
push
cs
or
psubusb
and
cmp
arpl
cli
lds
jl
out
std
je
cwtl
jae
add
cmpsb
cmp
pop
js
pop
dec
dec
and
test
add
mov
inc
pop
ret
sahf
cmp
xchg
dec
out
ret
movsl
enter
xlat
add
sub
pop
jo
lahf
mov
leave
pop
jmp
push
ret
pushf
add
lret
outsl
idivb
cli
add
rorl
add
jb
notl
xchg
rorb
xchg
sub
test
add
sbb
and
cmp
push
adc
inc
jge
ljmp
sbb
adc
push
iret
clc
hlt
pop
cs
leave
jmp
sahf
filds
inc
jl
pushf
sbb
daa
jb
fwait
xchg
cmp
in
push
dec
mov
push
ret
jo
std
jg
shr
xchg
jmp
or
icebp
aas
cwtl
lock
dec
cmp
int3
mov
into
aas
loop
pop
outsb
faddl
pop
and
enter
test
jb
adc
lds
xor
imul
jnp
sbb
imul
les
xchg
imul
cmp
scas
mov
mov
adc
cmp
adc
mov
les
lret
and
xor
fdivr
push
int3
mov
dec
std
fimull
push
mov
xor
test
push
dec
pusha
xchg
out
test
xchg
xchg
ret
adc
dec
div
add
mov
orb
in
dec
rolb
xchg
stos
fisubl
add
or
fstpt
xchg
add
fbstp
or
pop
or
bound
mov
lcall
mov
aad
sbb
rol
repz
fwait
lea
out
xchg
cli
mov
pop
adcl
clc
xor
in
aaa
mov
pop
fmull
aam
sbb
ror
lods
xchg
inc
insb
cmp
pop
cld
bound
cs
and
pop
cmpsb
inc
cmp
ss
in
out
jg
pop
repnz
mov
xchg
xor
fsubl
jmp
mov
sbb
adc
ss
pop
fwait
push
arpl
cmc
and
jbe
loop
or
pop
mov
pop
stc
scas
jmp
cmp
push
mov
add
into
pop
into
sti
mov
rorb
or
scas
inc
lea
es
pop
add
lcall
sbb
lret
cs
testb
fisubl
inc
mov
push
clc
or
xchg
aas
adcl
loope
mov
movsb
cmp
xchg
stos
cmp
dec
cmp
and
pop
jmp
addr16
or
xchg
inc
xchg
fucomip
in
iret
nop
cmp
sbb
pop
jp
pop
cmpsl
xchg
stos
insl
ds
dec
stos
dec
gs
xchg
push
dec
into
mov
xlat
mov
insl
push
pop
pop
jg
gs
fnstenv
or
insb
or
jae
mov
xchg
xor
sub
mov
inc
mov
movsl
adc
dec
addb
cmpsl
jmp
push
lods
pop
mov
cli
inc
fadd
in
std
ret
xor
or
push
mov
mov
jmp
mov
sbb
insb
lds
pop
cmc
mov
push
jbe
push
sbb
out
cld
xchg
dec
jnp
outsl
xchg
jge
xchg
and
pop
dec
adc
mov
push
ds
cli
cmp
lods
sahf
jle
sbb
addb
sbb
scas
dec
mov
xchg
jnp
lds
mov
mov
xchg
sbb
inc
andb
dec
xchg
fsubl
pusha
inc
cmpsl
mov
repnz
dec
lea
fdivl
loop
add
fidivl
cwtl
inc
mov
lret
push
movb
dec
daa
push
sbb
cmp
sub
jp
jecxz
notl
add
add
imul
dec
notb
cmpsb
jge
je
sub
rcrb
in
mov
iret
inc
gs
out
scas
pushf
fimull
stc
test
faddl
lcall
dec
ljmp
mov
pop
clc
aaa
and
mov
std
imul
daa
push
shlb
mov
mov
lret
mov
cmp
inc
aas
addb
inc
aam
rol
cs
jnp
push
mov
lret
mov
andb
adc
int
adc
mov
mov
dec
repnz
mov
mov
fmull
aam
popa
sbb
dec
xlat
popa
es
jmp
sti
add
xchg
ret
xchg
jle
mov
mov
sarl
movsb
xchg
xorl
stc
ret
sti
jo
pushf
inc
xchg
in
cmpsl
mov
fisttpll
xchg
jns
clc
mov
aad
dec
ss
sahf
pop
arpl
es
pop
shr
jle
jns
leave
cli
testb
test
add
dec
xchg
adc
call
mov
mov
pop
push
roll
mov
jmp
xchg
scas
sahf
adc
xor
insb
movd
mov
sbb
negl
jno
adc
in
stos
bnd
xchg
adc
movsl
ss
pop
mov
push
cmp
daa
in
jnp
sbb
mov
fidivrl
sbb
in
sub
lods
daa
je
movsb
jo
jae
ss
mov
dec
test
cmp
loop
xorl
or
cwtl
xor
jle
mov
cmp
mov
lds
adc
cmp
scas
fldl
sbb
mov
or
push
aam
sub
sbb
push
test
mov
lods
xchg
sarl
or
jnp
mov
mov
js
sbb
inc
mov
scas
lcall
cmp
repz
das
lods
ret
or
mov
test
loopne
cmp
lock
mov
int3
clc
lods
or
daa
out
sarl
mov
cmp
inc
and
or
hlt
or
xchg
cmp
adcl
std
add
daa
scas
sbb
inc
sub
jecxz
fisttpll
sti
push
outsb
decl
mov
mov
cmpsb
shlb
faddl
fistl
mov
fiaddl
aaa
mov
mov
dec
out
push
addr16
mov
and
and
movsb
iret
mov
lcall
stc
sbb
xchg
mov
mov
ja
add
enter
pushf
stc
xor
mov
std
pop
test
mov
cli
ss
fwait
sti
pop
push
mov
ja
adc
test
push
xchg
gs
or
jge
jl
out
xor
mov
shl
test
mov
add
jns
daa
pop
add
jo
sbb
sbbb
mov
pop
mulb
push
and
fwait
sahf
lret
pushl
dec
fsubr
inc
scas
mov
jg
sbb
xor
mov
incl
xchg
mov
and
jb
inc
mov
push
xchg
mov
ficoms
push
mov
fdiv
rcrl
mov
pop
repz
xor
inc
mov
sbb
stos
sbb
in
int3
jae
scas
adc
mov
fidivrs
xchg
mov
mov
dec
mov
mov
mov
nop
pop
insl
adc
jmp
lea
and
hlt
movsl
sub
jge
dec
nop
push
fistpll
cwtl
dec
dec
stos
push
mov
testb
add
iret
pushf
je
dec
orb
and
xor
in
cli
or
sbb
negl
fidivl
imul
out
push
pop
mov
cmp
sbb
jo
mov
xchg
daa
fdivs
rolb
or
daa
into
data16
loop
test
imul
sbb
add
mov
out
out
lret
lock
mov
or
stc
push
fdivrs
out
jmp
sahf
inc
jne
pop
mov
pop
adc
jl
dec
sbb
push
lods
mov
out
push
aaa
popa
cmp
inc
adc
mov
jnp
notl
inc
sub
sbb
pop
xorb
cld
sbb
adc
test
and
add
cltd
inc
mov
adc
push
sub
xor
mov
dec
fisttpll
inc
lods
hlt
dec
outsb
test
xor
movb
in
cmc
sahf
mov
into
sbb
stos
sbb
dec
jbe
adc
add
jmp
jno
mov
call
mov
dec
cltd
jnp
mov
js
push
bnd
fists
pusha
mov
out
fcomp
js
adc
scas
repz
push
xor
fwait
inc
and
jnp
cmp
pop
sahf
or
xor
iret
js
dec
mov
dec
iret
and
jne
dec
lds
jl
shll
cmpsb
outsb
mov
in
and
add
add
fwait
xor
sbb
int
dec
inc
jmp
add
mov
ret
add
adc
addr16
push
mov
xor
adc
outsl
outsb
int3
pop
and
ljmp
cmpsb
sbb
xchg
mov
out
cmp
adc
pop
dec
sub
lret
push
rcr
mov
adc
cmp
cli
sub
xor
cwtl
cli
arpl
leave
sub
or
enter
mov
iret
mov
pushf
test
or
js
out
xchg
fnstsw
cld
and
test
push
push
add
mov
ficompl
rcr
lock
test
or
pushf
movsb
repz
push
mov
insl
push
test
dec
mov
xchg
fbld
outsl
xchg
nop
pop
iret
adc
mov
mov
inc
or
stos
sbb
jmp
std
push
mov
and
mov
push
gs
adc
jl
outsb
test
pop
xor
mov
les
pop
xchg
push
jp
push
cwtl
lods
mov
lds
or
mov
nop
cmp
out
mov
sbb
cmp
aad
push
sub
dec
lret
xor
or
dec
ss
mov
insb
out
daa
and
pop
repz
push
cli
int3
roll
add
jecxz
fimull
cmpsl
cmpsb
sbb
fiaddl
jecxz
or
testb
jnp
rcrl
push
mov
sub
stc
push
sub
cmp
shrb
xor
mov
pop
lods
xchg
imul
xchg
aad
jbe
jb
dec
in
add
enter
sbb
xorl
inc
sbbb
stc
xor
cmp
push
les
inc
mov
push
or
dec
cmp
add
push
cmp
adcl
rcrb
out
data16
pushf
fmul
lret
sub
adc
aas
shrl
inc
mov
ss
es
sub
jl
pusha
in
outsb
cmp
inc
roll
out
push
sarl
stc
sbb
mov
pop
movb
xor
jg
mov
cmpsb
push
into
test
ljmp
mov
jne
fwait
jge
lds
and
jb
imul
subl
ss
inc
inc
jecxz
int
jle
cmpsl
inc
jo
popf
and
cmc
jno
mov
and
pushf
cmp
xchg
lret
loope
out
call
ficompl
cmpsl
lahf
dec
jmp
jbe
stc
insb
xchg
and
nopl
adcb
jecxz
test
cs
sbb
das
mov
shrl
sub
xchg
popa
stos
jg
push
dec
adc
cltd
aad
ds
out
scas
aaa
dec
or
add
sub
cmp
sbb
icebp
xchg
sbb
jbe
sbb
xor
icebp
fwait
subl
mov
adc
shrl
cmp
paddsb
xchg
and
sub
aad
add
fimull
es
scas
sbb
ljmp
jle
lahf
add
divb
loopne
rcll
mov
mov
fiadds
mov
sbb
push
push
pop
les
xor
bnd
loopne
in
xchg
out
lea
jb
inc
cmp
cli
or
jg
out
dec
push
daa
mov
stc
imul
pop
inc
add
push
fistl
add
syscall
std
je
stos
sbb
mov
dec
inc
rclb
jge
rorl
adc
fisubrl
cs
sbbb
jo
loope
jl
popa
aam
dec
mov
jns
mov
in
or
pop
pop
pusha
and
add
leave
iret
xor
fimull
out
std
aam
jae
faddl
and
mov
fidivl
dec
cmp
flds
lods
repnz
and
lret
popf
popf
flds
and
popa
jecxz
sbb
sbb
ss
bound
or
stos
mov
shrb
cld
mov
jmp
push
jbe
sbb
or
xchg
adc
sub
jp
mov
cmc
repnz
data16
mov
xor
movsl
adc
mull
std
xchg
mov
mov
mov
lret
jmp
sub
fdivrs
aas
cs
adc
daa
xchg
sti
or
mov
ljmp
daa
xor
out
jge
je
xchg
sbb
jle
jbe
add
movsl
sbb
dec
lods
inc
or
imul
push
jg
sbb
xor
xor
jnp
pop
pop
dec
push
movsb
dec
pop
outsl
jns
faddl
add
xlat
jbe
inc
setb
mov
cmpsl
push
cwtl
dec
cmp
arpl
stos
lcall
mov
jb
cli
fs
xor
jo
leave
xor
cmp
shl
addl
outsb
je
popa
pop
outsl
jb
cmpsl
or
jbe
inc
xor
outsl
cmp
sbb
mov
push
outsl
clc
mov
cmpsl
mov
mov
lods
sub
out
inc
mov
scas
add
jns
ret
jb
pop
test
pushf
out
xchg
push
cmp
je
sbb
shrb
or
rclb
jb
dec
aam
push
jnp
popa
rolb
dec
mov
jg
inc
cltd
jl
cmc
mov
movsl
add
lcall
test
mov
fcmovnb
fwait
cmp
pop
sahf
sub
jno
out
sbb
or
adc
sbb
out
lret
fwait
adc
push
sub
sbb
int3
push
add
mov
or
mov
in
lock
pop
movsb
mov
xor
std
jae
add
push
popa
pop
repnz
and
in
nop
lock
ret
mov
xabort
fs
mov
hlt
push
jge
lock
xchg
rorl
int
mov
and
jecxz
dec
push
dec
adc
rcrb
push
sub
int3
cwtl
test
scas
je
mov
xor
cmp
aam
push
out
mov
loope
das
repnz
ljmp
add
shrb
sub
jnp
imul
xlat
loope
dec
mov
fildll
std
mov
outsb
pop
ds
inc
dec
add
pop
jne
das
mov
push
and
add
jl
shrb
fincstp
pop
rcll
lret
mov
xor
push
imul
shrl
jo
rsm
lcall
leave
jae
in
xchg
cmp
inc
cwtl
lret
lock
dec
psubd
sarb
ljmp
jecxz
sub
push
lahf
adc
stos
xor
adc
imul
pop
jb
jge
loopne
je
ret
pop
imul
mov
ljmp
clc
inc
hlt
sti
xchg
xchg
cmp
outsl
jmp
mov
add
stos
inc
mov
dec
subb
mov
and
cmp
enter
xchg
imul
in
mov
out
out
inc
je
and
mov
ret
outsl
addr16
scas
or
mov
push
or
in
pop
hlt
push
test
fs
xchg
cmp
ss
jne
dec
or
sub
inc
or
push
push
rol
shll
roll
les
icebp
pusha
in
imul
inc
pop
push
out
mov
psubd
cld
sti
ret
call
je
pop
stc
nop
xchg
ret
insb
dec
dec
ja
cmp
cmp
mov
mov
or
ss
dec
xor
enter
add
shrb
dec
es
lret
repz
lret
or
jne
loop
ja
add
sbb
mov
sub
mov
push
inc
jae
xchg
cltd
inc
inc
pusha
jo
imul
xchg
mov
lret
inc
push
in
xchg
dec
push
dec
cwtl
or
call
ficoms
mov
or
jae
shlb
mull
movsb
jnp
push
shr
outsl
iret
sbb
and
add
testb
dec
out
cmpsb
push
xchg
xor
mov
adc
mov
push
movsb
mov
std
leave
fwait
adc
dec
inc
mov
jecxz
xor
shll
mov
dec
dec
cwtl
mov
lods
ret
scas
popa
idivb
or
push
ds
jg
inc
insb
and
jno
mov
lods
adc
popa
mov
and
mov
and
mov
aam
dec
into
repz
adc
ret
in
jle
sub
jo
test
mov
sub
popf
adc
cmpb
cmp
pop
popf
jnp
inc
add
xlat
jg
mov
popf
xchg
mov
sarl
stos
push
leave
xchg
xlat
and
cmp
adc
enter
rcl
mov
add
add
cmp
sahf
push
dec
ja
sbb
or
pop
or
or
std
mov
or
or
clc
push
cmc
ret
push
scas
cmp
in
es
dec
scas
nop
xor
pop
mov
mov
inc
push
push
je
sbb
outsb
scas
sub
add
fnsave
popf
loopne
sbb
jle
ret
aas
inc
jge
or
add
or
iret
stc
dec
adc
mov
sbb
jecxz
inc
cmp
sub
arpl
lret
mov
loopne
dec
les
and
out
shlb
ds
sti
into
mov
mov
int
lret
xchg
int3
in
in
cmpsb
cmp
adc
pop
jnp
lods
inc
cmc
not
decl
call
inc
stos
push
shr
lock
test
adc
jecxz
pop
in
loope
das
in
call
aam
gs
mov
and
mov
les
repz
int3
int
shl
pslld
fwait
adc
add
or
sub
and
xchg
jbe
mov
xor
movsb
and
push
xchg
std
xor
lods
imul
leave
stc
shlb
out
pop
sbb
lds
push
and
loop
out
mov
jmp
xorb
sub
jecxz
sub
mov
xchg
fisubs
daa
sahf
push
out
shlb
sub
mov
and
andl
loopw
daa
pushf
das
mov
or
daa
jmp
sub
test
and
in
and
cltd
imulb
mov
xchg
cwtl
inc
xor
ret
xchg
ret
mov
jo
jg
repz
daa
add
filds
outsl
cmc
sarb
sub
pop
cmp
sub
fdivl
xchg
mov
pushf
dec
sbb
dec
jecxz
jno
mov
cld
mov
nopl
lods
stc
xchg
mov
add
les
mov
or
jbe
lcall
dec
dec
arpl
in
inc
pop
sbb
adc
ja
add
leave
popf
imul
hlt
iret
outsl
push
xchg
insb
stos
dec
js
mov
imul
cld
xor
or
add
dec
les
fldl
jb
push
sub
int
jge
or
sbbb
xchg
sbb
clc
push
pop
push
add
inc
mov
scas
push
movsb
orl
in
dec
int
or
cli
pop
push
or
cmc
int3
mov
inc
mov
jbe
add
rolb
mov
push
sbb
pop
sbb
arpl
loopne
fs
test
lods
cmc
or
pop
mov
and
aad
andl
jp
shll
mov
leave
cmc
mov
or
mov
shl
xor
jnp
stc
arpl
sbb
mov
lcall
dec
dec
sub
outsb
popf
cld
test
jb
mov
hlt
popf
jne
xor
cmp
movsl
push
push
and
js
lds
jle
call
cmp
paddb
inc
inc
stos
jnp
in
call
pop
add
push
push
jmp
ljmp
xchg
jg
sub
stos
insb
sbb
push
jb
cmp
xor
imul
in
es
cmp
rcll
popa
ds
rclb
xor
inc
xchg
jns
aaa
pushf
push
jge
mov
mov
cli
sbb
shll
sarl
or
inc
and
je
ja
mov
xchg
add
gs
pop
jne
aad
cmp
xor
jl
addr16
mov
js
decl
dec
jecxz
imull
iret
mov
xor
std
jl
inc
mov
arpl
fiaddl
data16
es
jnp
rclb
lods
pushl
cmpsb
fmull
cmp
adc
jae
stos
sbb
pop
fmulp
mov
jbe
mov
jmp
adc
insl
jns
roll
arpl
jne
xor
push
xor
sbb
scas
or
pop
mov
pop
xor
test
out
pop
cmpsl
add
xchg
test
stos
inc
inc
fwait
je
addl
js
or
cmpsb
and
loopne
inc
dec
imul
and
push
int3
jmp
jo
es
inc
pop
pop
push
rcll
jecxz
inc
push
cmc
shl
push
nop
fimuls
pop
push
shlb
pop
jae
pop
sbb
add
push
mov
push
sub
int3
es
js
dec
movsl
shr
out
jge
cmc
jle
mov
pushf
popf
mov
mov
std
mov
fxtract
idivl
rol
aas
pop
addl
dec
sahf
add
test
or
test
les
mov
or
js
ret
popa
xchg
lods
push
cmpsl
sub
das
insl
push
test
insl
jecxz
lods
daa
and
fmull
sti
mov
dec
pop
cmpsb
fwait
sarl
pop
outsl
negl
fldt
fcomps
int
cmpl
pusha
inc
dec
sbb
test
rcrl
popa
outsl
sbbb
out
in
jne
sbb
notb
cld
movsb
push
push
adc
inc
jno
outsb
mov
sbb
or
or
sub
pop
cmpsl
push
mov
fisubl
in
inc
lods
pop
sbb
mov
in
addr16
adc
adc
adc
dec
int3
pushfw
dec
pop
pop
pop
out
xchg
rol
jns
in
push
xchg
js
notl
adc
mov
ds
pop
push
fimuls
ss
movsb
lret
dec
push
ficompl
repnz
or
inc
aam
cmpsl
sbb
scas
pusha
cmp
loopne
lds
scas
dec
mov
repz
in
cwtl
divb
push
mov
test
or
sub
inc
cmp
divl
out
xor
add
lahf
adc
loope
in
lahf
ljmp
lcall
or
pop
andb
jle
and
sub
in
jb
mov
or
push
adc
cmp
push
mov
sti
out
loope
mov
out
insb
les
jbe
mov
ds
sbb
int
rcrb
sarl
sub
lock
fcmove
stos
push
test
and
mov
leave
in
lcall
cmc
cmpsb
sti
dec
icebp
push
xchg
jecxz
sub
jbe
scas
add
mov
repnz
leave
aad
decl
cld
or
fwait
adc
jae
mov
sub
in
push
shlb
dec
daa
mov
lods
sbb
sub
inc
jg
movsl
scas
sahf
sub
out
daa
cmp
inc
xchg
or
sbbl
mov
lock
lods
sti
mov
mov
and
jmp
lahf
push
popf
or
mov
shll
jae
lcall
loope
rol
sbb
mov
call
movsl
gs
into
fcomps
cmp
mov
pop
mov
aaa
mov
int
int
mov
scas
and
cmpsl
mov
cmp
js
mov
lcall
repnz
repnz
lcall
push
pop
mov
cmpsb
negb
lcall
sub
mov
cs
psrlq
mov
rcr
and
rolb
push
addr16
sbb
gs
mov
xor
ret
or
stc
dec
lds
cs
dec
dec
inc
sub
ljmp
cmp
imulb
rolb
pop
stc
lcall
lret
in
xchg
insb
jb
sbb
adc
int3
push
jbe
mov
movb
jmp
lret
sub
and
inc
repz
fbld
xor
sti
stos
loope
jp
sbb
push
aas
arpl
sar
sbb
mov
mov
mov
dec
sets
addr16
jnp
pop
imull
push
xor
mov
or
fisttpl
push
outsl
test
cmpsl
mov
push
mov
sahf
je
mov
mov
adc
jnp
cmp
leave
std
mov
sbb
xor
pop
xor
pop
outsb
lock
inc
fsubrs
xchg
push
ds
fwait
xchg
xor
cmp
scas
jae
loope
adc
pop
push
push
lahf
int3
push
sub
in
and
sub
imulb
mov
ss
imul
pop
loope
push
push
or
shll
jne
jecxz
shrl
popl
mov
bound
inc
xchg
mov
popf
lods
push
or
lock
rcrb
repnz
stos
pop
xchg
sub
inc
fisttps
stos
cwtl
pusha
fimuls
out
lidtl
leave
bound
xor
inc
xchg
decb
rolb
sti
adc
idivl
sbb
in
popf
jbe
popl
jg
mov
int3
xchg
imul
pushf
push
outsb
popf
jae
add
scas
and
inc
pusha
je
and
aam
sub
xchg
fwait
sbbl
ja
popa
das
add
xchg
mov
ret
into
cmp
pop
add
jge
lahf
xor
lahf
lret
enter
flds
cli
and
mov
test
dec
lea
in
sbb
sub
push
xchg
out
dec
loopne
ret
mov
ljmp
dec
push
lcall
cmpsb
out
loope
lods
loope
cs
lods
in
orb
mov
addr16
aas
push
or
loopne
lock
dec
xchg
das
xchg
jnp
ljmp
cwtl
mov
insl
xorl
gs
ljmp
div
xchg
out
bound
jae
mov
cmp
push
jno
hlt
xchg
leave
rorl
sahf
and
ret
jg
das
int3
js
dec
mov
push
fidivrl
ja
or
pusha
cmpsb
rol
mov
or
xchg
mov
int3
sub
adc
cld
cmp
fcmovne
lret
js
jl
adc
push
mov
push
ljmp
add
les
sub
negb
lss
add
or
in
xor
std
push
xchg
lods
xchg
mov
adc
xor
mov
loop
dec
cmp
repnz
jmp
les
js
push
inc
aas
sarl
or
mov
sub
dec
repnz
pop
shll
inc
jmp
loop
jb
xor
jg
add
mov
aam
sub
sbb
dec
aaa
xchg
repnz
out
in
dec
sbb
rorl
jnp
pop
fcoms
flds
sbb
add
cli
mov
sti
cmpsl
lsl
jp
inc
ret
jne
push
mov
out
adc
mov
fprem
insl
int3
push
xchg
clc
inc
cmp
out
add
mov
xchg
ljmp
js
pushf
mov
mov
test
push
sti
lahf
fmull
mov
jb
enter
mov
adc
pusha
scas
dec
adc
cmpsl
fisubs
xor
mov
dec
inc
dec
jmp
push
or
popa
shll
lock
dec
xchg
push
loopne
and
sbb
leave
repz
loop
ret
push
and
loop
lods
lcall
fprem
out
inc
sub
jae
xor
das
adc
out
dec
dec
cmp
mov
fidivs
sbb
sub
sbb
and
xor
js
enter
jmp
adc
or
int
imull
rcll
sub
popa
and
fisubs
rcrl
sbb
rol
and
jmp
popa
mov
pop
mov
inc
adc
adc
cmp
sbb
xlat
out
mov
cmpsl
iret
in
popa
stos
loop
push
js
add
cwtl
cmp
mov
sbb
xor
cmp
mov
mov
pushf
dec
xor
and
mov
loope
xchg
inc
stos
xchg
jecxz
movsb
pop
pop
movsl
pop
or
or
fsubp
jle
fwait
jae
and
stos
xchg
pop
ret
pop
fwait
push
cmp
mov
xchg
mov
inc
dec
mov
aaa
imull
mov
scas
mov
xchg
arpl
pop
pop
mov
sbb
jne
cmpsl
mov
out
loop
inc
xchg
inc
xchg
push
ds
xor
pop
lds
mov
cmpsb
inc
adc
push
and
int
test
dec
fsubl
mov
ljmp
xor
mov
mov
gs
ficoml
or
popa
push
adc
cmp
and
push
pop
insl
clc
or
sbb
inc
in
data16
mov
sbb
xorb
dec
insl
dec
outsl
jno
fldt
jle
frstor
sub
mov
pushf
xor
lahf
or
mov
push
inc
int
add
pusha
clc
dec
pop
loope
mov
sub
dec
cmp
dec
imul
out
iret
mov
mov
ljmp
imul
lcall
orb
in
add
sbb
lea
or
js
stos
fidivl
jecxz
sti
mov
lret
xchg
xchg
mov
out
pop
add
int
push
xchg
jnp
cli
adc
call
mov
gs
push
mov
insb
stc
jne
mov
sub
orl
in
or
aad
mov
cld
push
icebp
or
mov
xchg
out
inc
dec
and
aad
or
loopne
sub
std
mov
sub
jnp
mov
out
pushf
cli
arpl
adc
push
add
sub
or
inc
cmp
iret
xlat
cmp
push
push
seto
out
sub
adc
xor
out
cmc
repz
adc
jp
xchg
mov
mov
push
nop
aas
bswap
test
dec
mov
stos
mov
pop
leave
jae
pop
and
jbe
jge
pop
mov
clc
cmc
stc
neg
sbb
xchg
dec
sub
pushf
pop
sbb
sub
incl
test
es
dec
push
popf
cmp
jo
movsb
call
insl
mov
mov
je
push
lahf
orb
cs
cmpb
mov
adc
test
xchg
push
mov
loope
pop
pop
push
or
fsts
cs
xlat
cmpsb
push
push
adc
mov
fs
jne
xlat
lock
jge
vaddps
add
into
mov
nop
lods
xchg
xchg
mov
and
popf
sub
and
outsl
cld
xor
sbb
scas
ja
enter
loope
ljmp
adc
mov
xor
insl
ffree
xor
xor
jge
ds
leave
in
addr16
mull
inc
xor
loopne
in
jns
and
fs
lcall
mov
in
cmpsb
cmp
stos
in
int
movsb
xchg
inc
sbb
addl
cmpsb
scas
adc
cwtl
ror
arpl
pusha
dec
pop
cmp
mov
push
push
sbb
cltd
insl
fs
sub
push
or
imul
cmp
test
outsl
pushf
push
add
adcl
popa
mov
gs
mov
xor
or
mov
hlt
aas
incb
rcrb
pop
push
push
adc
ret
lea
pop
mov
lcall
mov
inc
mov
leave
inc
push
nop
dec
cvtps2pi
add
inc
adc
test
cld
inc
icebp
jl
or
decl
lds
repz
or
pop
add
add
or
push
pop
dec
ficomps
ficoml
xor
dec
pop
pop
negb
arpl
mov
std
and
sbb
popf
popf
inc
mov
mov
into
and
push
or
sbb
cltd
ds
or
ret
fcompl
sub
inc
and
arpl
sub
test
push
xchg
mulb
or
out
push
hlt
data16
int3
adc
inc
sub
and
and
jmp
mov
dec
shlb
push
lcall
dec
mov
push
aad
out
sarb
mov
mov
jbe
xchg
into
outsl
mov
arpl
mov
aaa
add
cmp
cmp
lcall
rorl
ficompl
ficompl
pop
movsl
lcall
or
mov
sub
pop
sbb
jl
and
lock
rorb
mov
enter
xor
push
lea
rolb
bnd
in
in
and
sbb
scas
fstpt
pop
movsl
pop
rcr
mov
push
fwait
dec
mov
or
mov
cwtl
out
pusha
add
clc
cltd
adc
icebp
bound
call
jae
mov
fxch
inc
mov
inc
fcoms
js
xor
lret
idivb
rcrb
lea
jns
fs
inc
xlat
xor
cmp
bound
rcrl
mov
mov
adc
pop
frstor
and
repz
int3
pusha
mov
sbb
inc
mov
sub
scas
add
pop
fisttpll
mov
pushf
sbb
leave
lods
jo
repz
mov
inc
lea
inc
pushl
stc
xor
gs
or
sti
adc
pop
jge
sub
ficoml
subl
fs
jo
adc
pop
in
ret
les
pop
inc
enter
cmp
ret
cmpsb
xchg
hlt
subb
repz
xchg
sti
inc
int
xchg
stc
push
pop
lret
jecxz
test
sbb
inc
mov
mov
and
sbb
or
xor
stc
hlt
push
xor
imul
into
mov
mov
fmull
test
mov
divb
xchg
fidivrs
inc
repz
leave
sub
jno
scas
test
je
mov
rcll
fcoms
push
xchg
xchg
gs
inc
add
push
cmpsb
rcrb
adc
mov
fcoms
or
mov
arpl
stc
mov
or
inc
or
icebp
mov
in
in
jns
dec
add
push
rcrb
inc
rorb
cld
pop
sub
push
sbb
pop
lret
loop
hlt
mov
call
pop
jg
rorb
inc
inc
or
rep
pop
aaa
fwait
add
ja
pop
std
shl
sbb
cmp
test
pop
lea
out
mov
popa
xlat
and
inc
xchg
call
call
int
cmp
mov
das
lods
add
lahf
mov
jb
call
inc
sub
pop
out
jp
dec
xchg
adc
pop
jl
jmp
inc
pop
les
rcrl
sub
aas
enter
mov
andb
push
data16
clc
insl
into
je
xchg
xchg
int
in
or
cmpsb
pop
out
daa
test
push
call
push
sbb
sbb
je
repnz
popa
lods
xor
xor
sub
popf
out
xchg
cmp
ud2
push
mov
adc
cmpxchg
pop
jl
arpl
xchg
incl
jne
adc
jl
test
pop
and
cmp
adc
jmp
rcll
or
jl
mov
test
out
push
mov
rolb
inc
nop
inc
scas
outsl
cmc
cmp
iretw
xlat
mov
lahf
jb
mov
lcall
mov
ds
stc
sbb
lods
dec
call
repnz
sbb
cltd
gs
add
mov
ret
xchg
in
call
rcl
xor
test
js
jae
push
cwtl
add
and
jmp
std
icebp
in
int3
aas
jns
push
inc
dec
add
pushf
nop
push
int3
cs
stos
xorl
or
movsb
sbb
xchg
shrl
pop
push
insb
repnz
mov
loopne
ret
cmc
or
fildll
es
pop
and
mov
pop
dec
mov
filds
push
iret
mov
and
out
clc
call
mov
add
loopne
lods
test
adc
sbb
mov
in
div
sahf
mov
xor
push
ret
stos
jae
data16
scas
push
push
addb
xor
in
lods
push
mov
mov
and
inc
add
int3
xchg
sub
jbe
dec
xchg
rcl
cmp
push
jmp
arpl
push
icebp
pop
call
xchg
sbb
xchg
mov
jnp
fwait
xchg
add
jo
push
xlat
cmp
xorb
or
mov
jle
cmp
out
sub
enter
ss
addb
fnstsw
aam
mov
loope
lcall
push
popa
cli
xchg
jns
xor
int
dec
ds
imul
pop
mov
or
int
push
fbld
push
orb
popl
cs
xor
test
hlt
rcrb
fsubr
add
ja
scas
xchg
jbe
iret
xchg
push
pop
dec
jae,pt
jne
in
mov
test
xlat
and
out
jb
fbld
mov
xchg
dec
sbb
aad
scas
xor
mov
pop
nop
mov
js
mov
mov
sbb
out
nop
jp
shrl
scas
lret
int3
lcall
insb
stos
cmp
inc
daa
jmp
dec
or
mov
mov
mov
mov
add
shlb
fstl
sbb
sti
insb
sub
push
cmpsl
lds
push
pop
sub
pop
push
ss
push
mov
lret
mov
mov
into
xor
push
adc
cmp
daa
cltd
jbe
jns
loopne
xchg
xor
or
pop
fidivrs
cmpsb
sbb
or
ja
in
xorl
daa
fadd
mov
into
sbbl
cmpsl
fs
cmp
emms
and
jl
mov
push
sub
inc
xor
jecxz
mull
maskmovq
negl
inc
loop
xor
dec
int
fwait
imul
sbb
mov
add
pop
cmp
movsb
out
mov
in
fnstsw
lds
cmp
sub
cwtl
and
mov
clc
mov
test
xor
add
add
jno
clc
scas
daa
fst
pop
sbb
andb
loopne
dec
iret
data16
sbbb
int
jge
jae
mov
add
movsl
adc
jb
inc
mov
jl
movsl
dec
or
inc
aad
sbb
push
ss
lea
mov
push
out
adc
insb
xchg
xchg
aas
iret
fsubr
xor
out
or
into
inc
jnp
cmc
in
out
push
push
adc
es
cld
mov
outsl
pop
xchg
out
fidivl
xchg
popa
sub
rcl
loop
mov
mov
mov
fwait
xchg
nop
xchg
mov
mov
sbb
data16
jbe
lods
or
add
pop
or
popf
lret
mov
popa
leave
cmc
add
shll
pop
imulb
xchg
sbb
mull
pop
hlt
push
and
cs
out
mov
and
loop
mov
outsl
data16
or
and
push
fs
mov
cmp
mov
add
scas
dec
xchg
popa
jo
jo
pop
pop
jnp
inc
shlb
xor
into
mov
jo
stc
jp
cmc
mov
push
or
and
arpl
xchg
jne
iret
inc
cmp
test
movsb
fcompl
adc
repnz
or
out
and
popa
rorl
adcb
fidivrl
sbb
or
stc
gs
dec
int
dec
std
and
lahf
sbb
sub
clc
push
push
sbb
test
pop
pushf
lcall
pop
push
jp
out
or
fbstp
std
xchg
ss
mov
int3
scas
add
jecxz
notb
jge
ljmp
mov
adc
clc
cltd
sti
insb
inc
lds
outsb
insb
or
cmp
lahf
roll
loopne
dec
lret
cmp
adc
stos
jl
int3
dec
add
jge
cwtl
add
int3
or
imul
int
aad
push
mov
mov
lods
fstl
mov
stc
mov
test
mov
mov
ljmp
dec
dec
mov
push
test
mov
sarl
mov
iret
xlat
shl
shl
dec
inc
push
add
or
jmp
pop
xor
popw
or
push
pop
mov
mov
fbld
cmc
dec
mov
ljmp
lcall
dec
stos
cmp
push
shrl
xor
ss
cmp
pop
and
push
pop
mov
in
xchg
cli
jbe
and
mov
mov
mov
lods
xor
dec
or
push
out
sbb
mov
daa
cmpsb
jb
imul
lods
mov
jne
movsb
fwait
adc
ds
addl
dec
push
movsl
mov
jp
mov
cmp
fildl
insb
insl
leave
and
cmp
sub
inc
out
int
dec
out
movsl
dec
mov
icebp
push
hlt
fstps
push
test
ja
jecxz
and
les
mov
cmpsb
stc
jp
test
pushf
jge
adc
or
pop
ss
int
lods
pop
adc
les
fcoms
int3
cmp
mov
je
pop
adc
es
popa
sbb
mov
into
push
mov
shrb
mov
push
or
test
push
mov
sub
cmp
or
into
jbe
jge
out
inc
jb
cmp
mov
push
std
add
int
icebp
cwtl
pop
daa
ret
adc
xchg
movsl
aaa
pop
xchg
or
in
adc
hlt
shrb
ret
loope
outsb
mov
sti
add
scas
fcoml
andb
pop
jge
lret
fcmovbe
xor
add
and
iret
imul
push
ja
sarb
incb
or
xlat
lret
icebp
sbb
jne
mov
ror
mov
mov
dec
lahf
lcall
iret
movsl
inc
aad
and
adc
insl
dec
jnp
ds
mov
jg
inc
push
mov
add
arpl
jecxz
sub
inc
xor
jle
push
insl
and
adc
repnz
fdivr
lahf
mov
fidivrl
jo
push
or
sbb
mov
imul
ret
adc
xchg
adc
or
movsl
xchg
fmul
inc
sti
ljmp
mov
outsb
cmpsl
inc
jecxz
push
das
cmpsl
or
call
dec
lret
jmp
in
and
pop
xchg
mov
sub
jecxz
pop
stos
lret
insl
hlt
or
cmpsl
ds
push
imul
or
popf
data16
dec
mov
movsb
dec
xor
idivb
daa
nop
cmpsl
aam
mov
push
mov
push
std
aam
in
inc
std
fnsave
lods
js
mov
ds
adc
add
xchg
mov
mov
sti
stos
scas
jno
cld
icebp
int3
pop
add
jge
jl
pushf
cmpxchg
out
push
shrl
inc
pop
pop
rol
jp
psubsb
xorb
add
cmpsb
add
test
sahf
xchg
xor
sub
rolb
cmp
push
bound
cs
jno
xchg
sbb
shll
cmpsl
and
jl
cmp
cmp
out
loop
test
shrb
cltd
add
sbb
sbb
int
jb
sar
les
repnz
sbb
cmp
icebp
shrl
mov
pusha
sahf
push
pop
add
inc
mov
ficomps
inc
mov
pop
sbb
sbb
test
fists
imul
jge
mov
call
mov
fstpl
mov
sbb
out
popa
cmp
inc
inc
das
or
call
mov
ss
dec
xchg
loop
jecxz
dec
add
inc
sti
inc
in
cmp
inc
shrb
cmc
aad
decb
dec
sub
pop
divb
xor
cmpl
mov
cmp
aad
int
xor
or
pop
fwait
dec
or
inc
sub
out
push
sub
xor
xchg
jge
inc
and
cmp
pop
add
loop
and
ret
fists
sbb
repnz
jp
test
pop
mov
icebp
pop
mov
push
inc
xchg
fstl
xor
mov
inc
stos
rol
xor
aaa
xchg
pusha
dec
insb
cmp
push
mov
mov
fucomip
sahf
inc
mov
xor
fstp
das
sarb
aas
push
ja
dec
icebp
xchg
cmp
cmpb
mov
adc
sbb
cmp
test
bound
and
and
hlt
lret
mov
leave
in
cmpsl
into
xlat
sahf
push
scas
stc
shll
insb
pop
xchg
push
dec
call
rclb
lea
xchg
lcall
icebp
fisubl
dec
mov
xor
xor
lods
es
popa
inc
xchg
test
mov
js
lret
push
lds
pusha
or
pusha
test
push
xchg
aas
add
add
mov
mov
xor
out
clc
pop
jo
adc
xchg
xor
mov
sbb
push
add
rcll
pushf
in
or
cld
mov
je
das
cmpsb
add
cmp
mov
shrb
daa
xorb
mov
outsb
mov
inc
add
and
adc
lock
jg
and
movsl
jp
in
lret
std
jmp
xor
xor
xorb
push
test
pop
or
xchg
andb
mov
adc
sarb
and
dec
es
lds
popf
daa
jle
cmp
mov
cmpsb
xlat
and
fistpll
sbb
xor
cmp
mov
dec
jb
bnd
nop
or
ret
mov
push
push
mov
mov
es
mov
cltd
mov
pop
add
jmp
push
cld
bound
daa
in
pop
fadds
cmpsb
notb
pop
sar
sti
in
push
push
les
xchg
daa
ja
jge
mov
cli
ficoml
jge
movsb
sub
cmp
ljmp
mov
inc
popa
aas
xchg
inc
mov
shl
pushf
pushf
mov
mov
pop
scas
cld
sahf
ljmp
std
iret
aas
or
js
pop
out
repz
fldcw
adc
fcmovnb
sarb
jge,pn
fisttps
or
dec
pop
testl
lds
mov
outsl
nop
xor
jle
push
mov
mov
stos
and
xor
and
nop
arpl
into
or
mov
mov
imul
cmpsb
pop
data16
inc
cld
fists
xchg
xor
inc
fs
pop
or
jp
pop
or
mulps
mov
stos
push
push
adc
mov
jb
adc
pop
icebp
dec
mov
mulb
cmpsl
jmp
fidivl
mov
lret
fidivl
pop
loop
sub
dec
or
mov
cli
sub
lea
lcall
cli
and
jae
mov
insl
adc
dec
sub
pop
mov
jb
data16
cli
sbb
jns
outsb
add
dec
ret
rcr
pop
testb
mov
jmp
jnp
add
pop
xor
xor
mov
or
loopne
pop
mov
xchg
fimuls
or
or
sub
xchg
lods
dec
in
or
xchg
jns
mov
jp
fsubrs
jns
mov
mov
xor
pop
mov
imul
or
mov
pop
pop
sbb
movsb
add
in
sbb
sub
pop
cmpsl
jecxz
jl
add
mov
jae
loopne
cwtl
int
mov
rorb
xchg
fcmovbe
movsl
add
lcall
inc
subl
adc
pop
lods
jle
call
dec
out
inc
je
or
push
add
xchg
adc
mov
mov
mov
fsts
add
fwait
add
clc
xchg
adcl
push
enter
and
xchg
pop
stos
or
lret
mov
inc
push
push
fs
mov
cmp
ljmp
cmp
mov
cmpsl
add
jmp
push
mov
lea
std
popl
fisttps
and
jecxz
adc
ss
adc
mov
xor
or
lahf
push
lcall
mov
or
xor
ret
mov
outsb
mov
inc
clc
bound
icebp
xor
mov
out
es
enter
jmp
fs
hlt
mov
dec
jne
or
ret
aam
pop
pop
scas
cltd
jo
or
mov
enter
push
jne
sbb
out
into
cli
jle
out
mov
sbb
cmp
loope
mov
out
push
inc
or
test
push
js
fcomps
sub
and
ret
lods
lahf
push
xchg
insb
adc
loope
ss
mov
inc
test
and
js
xchg
out
mov
ret
pop
in
mov
sbb
push
xchg
xchg
cs
loope
jne
cmp
fsubl
in
out
add
rcrb
jg
adc
adc
push
inc
lcall
mov
mov
jns
inc
mov
xchg
jmp
aad
das
loope
fdivrs
mov
std
daa
xchg
xchg
sub
lods
in
or
aad
pusha
push
lods
push
fimuls
mov
pop
ss
pop
outsb
lcall
mov
cmovle
mov
fisttpll
pop
fisubrs
sbb
mov
lds
leave
dec
scas
cltd
add
mov
ljmp
aaa
dec
mov
fcomip
inc
test
push
sbbl
jo
or
add
jge
mov
cmp
lret
pop
pop
in
fs
loopne
movsl
mov
orl
shlb
dec
dec
bound
bound
aaa
movb
clc
stos
fdivrl
pop
xor
scas
inc
jne
imul
mov
push
stc
pop
mov
and
xchg
inc
pop
xor
inc
push
xor
cmpsl
ret
in
stos
mov
daa
lods
pop
jl
and
inc
dec
inc
addl
add
clc
sbb
movsl
in
out
out
push
into
xor
jmp
xchg
rcll
cmpsb
aaa
push
jne
jbe
jne
mov
lock
out
je
lods
test
xor
inc
fsubl
lea
lret
pop
fildll
nop
pop
cmp
xchg
xor
push
imul
or
popl
mov
ljmp
adc
xchg
push
out
aad
sti
sub
shll
cld
fidivrl
ret
or
lea
add
lods
inc
mov
int3
mov
mov
imul
push
jb
daa
cmp
inc
je
mov
cmc
hlt
jo
scas
jmp
mov
fildll
loop
sbb
xchg
les
fldt
xor
jl
mov
dec
xchg
push
or
pop
lret
and
and
rcrl
fs
lds
pop
orl
test
call
xor
cmp
mov
repz
adc
mov
outsl
sbb
vmread
pop
adc
lret
ja
mov
fidivrl
mov
lret
pushf
icebp
movsl
es
lods
mov
xchg
or
or
xor
rol
jle
pcmpgtw
scas
xor
inc
outsl
fcomps
adc
lret
imul
push
sbb
fldenv
std
jmp
add
incl
xchg
cmp
jne
jge
ret
ror
mov
mov
insb
inc
push
cld
mov
in
mov
int3
adcl
ret
sbbb
rol
mov
push
ret
fidivrl
scas
imul
test
in
shll
dec
sbb
sarb
inc
shl
add
mov
jbe
mov
ret
push
dec
and
inc
inc
mov
jne
test
xchg
or
into
scas
inc
mov
dec
fldcw
les
xlat
cmp
fmull
mov
push
dec
stos
mov
mov
xor
sub
aad
ss
leave
clc
ret
std
aam
mov
stos
inc
lds
jmp
ja
test
dec
jl
jg
dec
jg
leave
hlt
jne
dec
push
add
dec
ja
out
dec
inc
psrld
pushf
mov
xlat
imull
bound
mov
test
in
mov
into
cmpsl
sbb
jle
jg
inc
pop
dec
sub
sahf
rcrb
xchg
or
xlat
inc
xor
push
bound
xchg
jl
xlat
ds
dec
fldt
and
andl
dec
cld
rcrb
aas
test
shrl
jb
xor
outsb
lock
push
xor
mov
xchg
jge
add
mov
jmp
sbb
push
popf
sti
lods
sub
sbb
pop
pop
xor
not
push
xchg
cwtl
aam
mov
mov
push
aam
scas
and
insl
pop
rcll
roll
das
into
mov
inc
loopne
mov
aaa
adc
arpl
push
and
flds
clc
mov
mov
push
push
lcall
insb
jp
add
xchg
lcall
sub
test
push
cwtl
mov
aam
lods
ljmp
xchg
loopne
xchg
mov
ljmp
push
jne
mov
inc
push
lcall
test
mov
lret
push
in
dec
sahf
adcl
add
jo
mov
lock
and
rcrl
inc
sbb
mov
and
mov
sbb
mov
xchg
adc
stc
pop
dec
fstp
arpl
sarb
mull
fildll
pop
push
sbb
and
enter
shll
push
mov
add
ss
stos
or
adc
inc
stos
inc
jl
jae
leave
jns
sub
aad
out
fnstsw
ret
xor
loope
lret
je
lcall
lea
popa
xor
sub
dec
pop
in
rolb
aaa
mov
adc
lcall
push
fs
in
clc
cltd
pop
pop
stc
sbb
inc
jb
mov
sarl
and
imul
clc
sbb
lock
push
das
xchg
jg
jle
mov
test
mov
xchg
add
data16
lods
mov
imul
add
xchg
test
movsl
test
aam
jecxz
xchg
mov
lahf
int3
push
push
sbb
adc
cs
scas
jns
stos
add
dec
mov
cltd
shlb
hlt
fbld
jne
mov
cld
mov
mov
jmp
inc
in
js
cmp
cld
in
fsub
lret
fcoml
movsl
dec
popf
int
push
std
cltd
jmp
cmpsl
mov
cmp
lds
and
jg
sbb
out
ja
jno
out
es
dec
notb
sar
outsb
dec
sub
pusha
ret
mov
ds
adc
pop
lock
and
sbb
data16
popf
sub
lcall
js
cwtl
or
loopne
jg
lret
fimuls
cwtl
mov
cmc
movsb
mov
shll
and
call
adc
add
mov
test
jb
jle
mov
dec
xchg
sbb
jnp
mov
je
insl
inc
imul
inc
xchg
push
inc
fst
in
fwait
xchg
adc
cmp
jns
sti
dec
xorb
adc
out
rcrb
rcrl
mov
out
sahf
nop
js
movsb
push
cmp
in
jmp
fdivr
pop
mov
stc
push
push
in
sbb
lret
leave
mov
inc
adc
push
stos
xchg
and
test
add
out
adc
mov
insl
sbb
mov
pop
icebp
xchg
cwtl
xor
inc
andb
push
fistl
and
and
mov
in
sbb
aaa
loopne
ficomps
xlat
cmp
jl
dec
and
fnstenv
dec
push
frstor
mov
add
fisubrs
pop
pop
mov
lea
in
pop
push
dec
scas
or
mov
mov
jmp
ret
jb
orb
jo
inc
sub
and
ficoms
outsb
push
add
sti
testl
fadds
das
in
data16
adc
es
inc
jae
dec
ret
shll
xor
mov
sbb
push
pop
stos
cmp
cmpsl
inc
inc
adcb
cmp
cmp
sbb
mov
and
cmp
outsb
je
jns
inc
mov
out
mov
loope
jge
sub
sbb
jo
xchg
mov
or
subl
jg
bnd
mov
sbb
arpl
and
push
fcompl
push
xor
pop
in
rorb
popf
cwtl
int
scas
mov
mov
cltd
cmp
sarl
sti
out
dec
aas
or
sar
shlb
stc
sahf
xchg
mov
xchg
cltd
lret
xchg
jg
push
mov
or
dec
aas
mov
fistl
adc
push
or
push
or
insb
mov
aam
rorl
aaa
test
push
cwtl
icebp
mov
jb
daa
nop
sbb
repz
int
adc
jle
mull
pop
ficoml
sbb
dec
hlt
test
or
or
push
lret
dec
orl
pop
push
jae
sub
adc
xchg
cmpb
mov
fwait
jne
sub
inc
xchg
loop
ret
out
repnz
and
lods
aas
rol
mov
push
cli
mov
cmp
fiadds
or
ret
ja
mov
in
sub
mov
mov
mov
fisubs
inc
addr16
clc
and
test
dec
inc
cmpsl
sub
cltd
xchg
sbb
pop
sbb
sub
dec
pop
mov
jae
xor
in
add
lcall
repz
push
add
pop
mov
sarl
pop
cmpb
inc
out
sbb
test
lods
lods
jg
sbb
loop
loopne
sub
js
cmpsb
sbb
lods
sbb
lahf
sub
or
cmp
and
movsl
imul
dec
jg
ljmp
and
fisttpl
jmp
dec
adc
test
sub
jbe
inc
outsb
lretw
pop
mov
lret
jg,pn
inc
jbe
adc
push
push
jg
mov
in
xchg
aaa
fwait
or
xchg
push
ret
les
xchg
out
adc
rol
push
adc
or
leave
sub
fs
pop
ljmp
jns
sbb
sub
or
shlb
aad
ret
gs
dec
pop
dec
test
icebp
mov
ja
jo
addb
mov
loop
inc
fwait
push
adc
shrl
movsl
sbb
out
sarl
cmp
nop
push
push
cmp
dec
jg
sbb
sub
xor
shr
jp
pop
scas
paddd
aam
leave
add
lods
cmp
jo
fwait
push
mov
daa
and
fsub
pop
cmp
ja
filds
mov
daa
lcall
push
pop
push
jnp
push
popa
push
xchg
xor
movsl
icebp
push
jne
jns
loope
xchg
cld
out
sub
sub
cmp
sbb
dec
cmp
sub
mov
and
jmp
int
mov
dec
jg
movsb
push
int3
fwait
push
test
shll
cltd
fmull
sub
dec
scas
outsb
push
cmp
rcr
inc
es
push
xchg
insb
loopne
fisubrs
enter
repnz
and
push
imul
fisubrs
je
and
push
sub
xchg
pop
sub
and
test
mov
and
repz
scas
pop
inc
or
xor
sbb
stos
shll
loopne
inc
jge
mov
adcl
out
jmp
push
imul
cli
inc
dec
mov
jp
sbb
cs
or
fwait
mov
sti
mov
pusha
adc
sub
and
xchg
icebp
sub
xor
xchg
fstpl
inc
xchg
clc
loop
push
sub
xor
jno
lods
mov
adc
mov
inc
xchg
or
fcmovnu
ret
sbb
dec
pop
xchg
cmp
mov
pop
jp
orw
insl
test
test
xor
or
cs
dec
push
jnp
jmp
xchg
adc
pusha
lods
sub
in
loope
pop
inc
jb
add
xor
ror
push
mov
insb
loop
fwait
jns
in
lret
mov
sub
mov
mov
pusha
pop
jle
lea
xor
sbb
pusha
cmc
es
xor
sub
mov
or
jmp
xor
push
insb
mov
fsubr
mov
inc
sbb
punpcklbw
mov
stos
inc
lods
or
jmp
and
cltd
fidivs
add
pop
adc
xchg
mov
inc
fs
jns
lcall
out
sub
sub
push
clc
adc
pop
inc
pop
cmc
fidivs
adc
out
leave
xorb
cmp
mov
fs
push
pop
jle
sbb
xor
sbb
jne
pop
pop
fsubrs
adc
mov
stos
or
mov
pop
pop
imul
add
or
in
mov
jo
aaa
jno
je
scas
repnz
movsb
mov
out
xchg
icebp
sarb
xchg
jge
cmc
push
shlb
or
xchg
in
nop
pop
pop
stos
rcrb
or
js
or
and
mov
scas
xchg
add
sbb
rorl
stc
sbb
adc
movsl
push
or
aam
popa
fwait
mov
and
fdiv
je
stc
loop
out
and
pop
addr16
in
into
dec
jg
adc
mov
add
ss
inc
fsubs
dec
adc
mov
popa
mov
scas
lret
aas
jecxz
pop
daa
xchg
xchg
mov
inc
nop
es
lcall
xor
sbb
clc
int
dec
pop
sub
in
cmp
jno
std
movsl
loope
sbb
rolb
xor
mov
mov
adc
fwait
mov
popf
fdivrl
or
jns
pop
adc
rolb
daa
lea
xchg
xchg
adc
cmp
out
cmp
lock
mov
jnp
fstps
add
enter
push
pop
out
xor
inc
push
sbb
jecxz
cmp
addr16
xchg
lret
inc
out
xor
adc
xchg
das
divb
nop
or
aas
inc
add
scas
pop
add
sbb
ret
andb
mov
mov
push
sub
in
outsb
ret
ds
daa
dec
out
sbb
ja
dec
xchg
mov
mov
je
daa
pop
mov
pop
mov
loopne
xchg
mov
mov
movsb
daa
jl
popa
sub
lock
popf
scas
jmp
inc
outsb
adc
and
push
stc
das
jnp
test
inc
mov
pop
cmpsb
add
xchg
push
or
test
xor
inc
lahf
rolb
xlat
add
mov
xlat
lods
test
cmp
push
mov
fildll
mov
jno
xchg
jns
sub
mov
stos
xor
ficomps
adcl
int3
add
je
into
out
roll
mov
and
les
cmpsl
xlat
in
mov
inc
cmp
pop
cmp
adcl
sbb
or
add
add
sbb
push
cwtl
les
adc
jnp
or
xor
jmp
in
dec
adc
repnz
inc
cmpsl
push
loope
push
adc
inc
mov
pop
sub
sbb
cmpsl
int
fsubl
loopne
int
jecxz
outsb
cmp
pop
arpl
push
out
testl
inc
cmp
mov
adc
cmp
js
cwtl
stc
dec
lahf
out
adc
popf
stc
adc
push
out
js
mov
js
insl
call
pusha
out
sbb
subl
lods
out
fsubrs
mov
lods
movsb
outsl
push
sti
mov
sbb
movsl
int3
xor
sub
jmp
dec
outsb
jno
lret
idivb
mov
add
repz
das
fwait
out
jmp
lods
int3
mov
call
dec
push
cld
sbb
mov
xchg
sbb
stos
add
aad
push
outsl
fidivl
cld
pushf
sahf
fnstcw
daa
push
outsb
xor
ret
ret
fistps
sub
mov
jmp
jne
js
hlt
aas
xchg
ljmp
fldcw
adc
subb
ret
lret
lea
lds
and
rcrb
push
jp
gs
push
es
jbe
ja
sbb
xor
idivb
sub
inc
jne
stos
sti
inc
inc
insl
js
cld
jbe
inc
int3
jle
ja
jp
adc
sub
testl
jg
test
lret
cmp
dec
pop
add
ljmp
mov
inc
test
fwait
gs
mov
mov
cmp
pop
daa
in
dec
cwtl
and
out
cmpsb
pop
bound
mov
dec
sahf
push
push
rcll
mov
cld
lret
cmp
and
push
xchg
lods
adc
cwtl
adc
dec
jne
cli
push
xor
inc
iret
ja
sti
out
dec
xchg
adc
in
pop
shrb
inc
ja
inc
aam
dec
insl
movsb
int
les
movsl
rcl
sub
push
xor
push
push
xchg
mov
mov
sbb
imul
mov
and
push
cmp
adc
fwait
shlb
nop
dec
mov
mov
and
daa
pop
mov
push
adc
dec
in
cmp
out
std
adc
test
jnp
das
lods
fwait
xor
sbb
out
mov
jo
dec
leave
testl
pop
mov
xchg
fucomip
int3
mov
or
sub
cmc
sub
adc
pop
mov
xchg
cltd
xchg
xor
insb
sbb
jae
lcall
xchg
mov
adc
pop
std
and
ds
call
pop
clc
mov
xchg
adc
or
test
inc
pop
lock
push
push
mov
sub
popa
mov
leave
insb
ret
cwtl
and
push
out
inc
out
out
dec
movsl
mov
insb
std
in
shrb
sahf
push
in
mov
jl
jmp
enter
aaa
lea
cmp
fwait
enter
mov
push
popf
inc
and
cmpsb
sub
aam
add
lock
sub
or
test
enter
fisubrs
popf
std
insb
mov
rorl
mulb
cs
scas
sbb
adcl
adc
sbb
push
dec
or
pop
and
fbstp
pop
xlat
cmp
outsb
mov
ret
and
jne
ljmp
dec
mov
adc
inc
leave
add
cli
outsl
std
jno
fldenv
mov
sub
sub
pop
aaa
lcall
inc
mov
inc
sbb
and
sbb
daa
inc
pop
or
xor
pop
scas
movl
jl
jge
sarb
mov
sbb
push
out
mov
std
repz
int
jp
pop
cmpsb
fsts
pop
fchs
punpcklbw
sub
push
xchg
pop
dec
dec
rcrb
jg
lds
sub
inc
imulb
out
mov
out
push
sti
ljmp
pop
in
cmpsb
dec
lahf
aam
add
and
lods
icebp
sbb
fstl
pop
call
pop
pop
cmp
js
loop
mov
ret
cli
fs
lret
js
aam
xor
push
lea
pop
and
popf
sbb
xor
inc
scas
mov
lahf
push
scas
sbb
ds
push
xchg
gs
dec
cmpsb
cmp
pop
lock
aaa
pop
cld
cmpsb
pop
xchg
xor
mov
mov
cwtl
cmp
clc
test
and
fisubrl
fcomip
jg
or
push
xchg
shlb
ret
and
jecxz
stc
cs
add
pop
dec
enter
jae
and
scas
mov
jae
movsl
sbb
gs
shrb
xchg
mov
push
jl
je
xor
xor
stc
pop
adc
mov
lahf
xchg
push
and
loop
lea
xchg
mov
dec
inc
in
jmp
std
xor
sub
push
sarb
scas
fstpl
xchg
test
lret
mov
pusha
ss
sub
adc
fistpll
sbb
mov
inc
das
cmpsl
pop
or
or
pushw
aas
add
xor
daa
inc
in
sbb
shlb
sub
sbb
jecxz
xor
dec
mov
push
test
movsb
add
add
imul
out
push
pop
cmp
adc
pop
cmc
sub
xchg
arpl
sub
jp
xorb
mov
pushf
testb
pop
lds
jmp
add
mov
dec
jae
nop
xchg
fabs
inc
rclb
iret
push
loope
je
jmp
jmp
ljmp
pop
lahf
shlb
gs
pop
into
fldenv
cwtl
dec
ds
out
cmp
mov
pop
cmpsl
dec
adc
loopne
cmpsl
jae
test
fwait
movsl
pop
imul
stc
mov
pop
or
out
adc
int3
imul
ret
adc
dec
push
out
cmpsl
daa
and
cmp
outsb
push
inc
mov
addr16
push
lds
push
mov
pop
push
adc
aas
movsb
lahf
repz
add
and
jge
mov
inc
fldcw
add
roll
mov
sbb
lock
dec
lret
mov
cmpsb
fisttpl
push
xchg
push
mov
data16
stc
or
es
mov
adc
or
sub
out
ja
jbe
dec
outsb
mov
mov
imul
movq
mov
sbbb
mov
out
in
jb
jl
pusha
and
movl
xor
mov
mov
add
mov
lock
push
push
iret
int
sub
adc
push
outsl
in
negb
sbb
push
jg
pop
pop
mov
imul
cmpsb
or
and
test
ljmp
stos
cmpsb
ss
push
xor
mov
xor
dec
pop
aaa
mov
imul
or
in
mov
dec
jb
cmp
hlt
and
and
jle
xor
mov
je
dec
aam
push
das
cmpsb
js
subb
loop
pop
outsb
xchg
scas
pop
insb
lock
xor
add
mov
sahf
pop
fmulp
jge
dec
or
fs
daa
dec
mov
enter
fisttpl
jecxz
movsl
xor
shr
test
xchg
sub
mov
jmp
xchg
add
in
cli
cmp
in
shrl
faddl
sar
sub
mov
out
stc
jns
pop
cli
orb
jge
adc
and
jecxz
push
push
mov
add
ret
push
jmp
push
or
xchg
jecxz
inc
or
les
sub
add
adc
lods
out
notb
cld
or
cld
insl
add
orb
stos
test
pop
imul
insb
xchg
xchg
jmp
dec
aaa
or
pop
aad
or
sbb
fists
testl
daa
gs
pop
add
cmp
imul
mov
mov
out
jp
or
iret
xchg
jnp
jno
lea
cltd
and
pop
test
das
mov
enter
inc
in
pop
and
inc
ret
mov
cmp
data16
hlt
pop
sub
adc
push
cmp
mov
sub
jae
inc
push
std
inc
lcall
xchg
roll
sahf
jne
cld
ljmp
xor
rcll
jle
or
dec
rcr
pop
inc
mov
jle
lods
das
xchg
test
inc
popa
and
icebp
hlt
inc
mov
mov
dec
pop
inc
decl
int3
mov
cltd
pushf
pop
in
xchg
out
sub
test
add
lds
stos
scas
mov
insl
les
popa
mov
xlat
sbb
lods
mov
sub
jb
sub
pop
pop
sub
cs
or
cmp
aam
lods
or
mov
sbb
sbb
hlt
add
testb
jg
loop
cmpsb
xchg
lods
iret
and
add
dec
or
jmp
stos
jge
jmp
cmp
cmpsb
mov
mov
call
jo
daa
xchg
movsb
jae
cmp
mov
cmp
jno
icebp
push
and
jno
or
xor
cmpsl
ficoms
add
xchg
pop
ds
xor
mov
es
mov
fldpi
loop
lcall
out
cs
lahf
and
out
mov
push
add
and
jbe
sub
xor
pminsw
sarb
mov
pop
cmp
repnz
jnp
mov
xchg
ja
inc
inc
dec
mov
cmp
jnp
inc
movsb
movsl
sbb
mov
lcall
adc
sbb
sbb
mov
mov
mov
mov
inc
test
shlb
xor
enter
mov
jne
sbb
mov
mov
xor
jb
sbb
sbb
loop
andb
push
cmpsl
mov
loope
push
cmp
faddl
cmp
sbb
hlt
add
push
xor
lock
cmp
or
lret
sbb
add
adc
add
mov
mov
sbb
mov
fucom
test
cmp
jne
jbe
addb
mov
mov
dec
shl
mov
and
inc
and
push
push
push
and
or
cmp
aas
aad
lahf
xchg
pop
inc
xor
or
sahf
push
mov
pop
cmpsb
mov
jno
xchg
addr16
add
sub
loopne
push
ficompl
mov
icebp
xor
in
repnz
jns
jp
or
pop
xlat
adc
fstl
jns
or
sub
imul
pop
sbb
sbb
rclb
mov
ret
cmc
or
nop
nop
clc
into
and
movsb
jecxz
and
imul
fbstp
lock
stos
cmp
jge
xor
insl
rcrl
mov
or
loopne
cs
inc
cmp
jo
mov
call
test
and
mov
mov
mov
insl
jne
jnp
mov
add
jo
jne
imul
leave
mov
jl
lods
adc
or
dec
adc
ret
repnz
loope
xchg
out
sbb
enter
xorb
add
mov
lods
repz
xor
fcomps
fistpl
xlat
jg
nop
std
movsb
xchg
divl
repnz
in
cmp
adc
add
sarl
jle
insl
jo
in
in
outsb
ss
movsl
stos
ret
pop
ljmp
mov
jg
add
mov
push
bound
push
fstps
push
rcll
dec
shrb
insb
xor
mov
lods
sbb
xor
fwait
idivb
push
ret
and
sbb
add
jne
hlt
mov
sub
adc
jg
pop
aaa
cltd
sub
lahf
fisttps
cwtl
mov
repz
mov
mov
and
ret
xchg
xchg
pop
into
mov
push
xor
outsl
mov
push
imul
mov
push
rorb
fildll
xor
and
xchg
sar
frstor
xor
scas
add
outsb
jne
xchg
and
xchg
pushf
int3
movsl
loop
jl
fcmovbe
push
aam
sbbl
subb
or
out
push
xchg
pusha
pop
mov
enter
pop
pop
adc
inc
das
lret
mov
fwait
sahf
ja
fstpt
xchg
stc
cmp
cmp
int
stos
push
push
cwtl
scas
aam
sbb
pop
test
fbld
sbb
push
pop
cmp
bound
mov
sub
add
ja
jp
movsb
add
cli
or
sub
mov
mov
nop
pop
inc
sub
dec
and
pop
sbb
push
inc
outsl
push
roll
in
dec
mov
jg
cmp
jle
xor
rcll
mov
scas
imul
outsl
pop
xchg
out
push
pop
dec
cmpsb
adc
sbb
cli
ds
lret
stos
scas
flds
sub
inc
sahf
js
pushf
add
out
lock
xor
lods
jge
out
in
xchg
add
cmc
pop
hlt
sti
clc
or
inc
add
add
adc
mov
je
scas
push
pop
stc
pop
test
adc
aam
lea
loope
or
leave
pop
mov
daa
xor
push
jbe
movl
and
loop
sti
ds
mov
test
fldl
mov
and
dec
test
inc
movsb
xchg
dec
add
ds
add
ds
gs
shl
pop
inc
mov
insl
fldcw
inc
and
pushf
int3
push
pop
into
mov
cmpsb
stos
mov
out
les
pushf
mov
mov
stos
int
jmp
xchg
lret
pop
xor
jg
xchg
xchg
jl
fidivrs
leave
jp
loope
fbld
add
repnz
sahf
pop
ja,pn
sbb
lahf
push
cmp
sbb
mov
xchg
push
pusha
sbb
je
inc
icebp
mov
add
test
inc
and
jne
popa
cmpsb
mov
es
mov
sti
push
lods
xchg
arpl
sbb
sub
imul
movsb
popl
xor
adc
fprem
scas
sub
popa
cmp
xchg
fistpl
sbb
mov
xor
pop
add
out
aaa
pusha
insl
clc
sub
xchg
jno
or
test
push
rcll
jl
stc
aam
push
fldcw
pop
repz
js
andl
pop
loope
call
in
jl
inc
jo
stc
sbb
testl
es
pop
or
sbb
dec
imul
rcrl
pop
push
sbb
mov
mov
scas
movsl
and
lcall
fs
fistl
xor
lds
push
cmc
ds
sub
mov
push
jmp
inc
mov
jmp
pop
sbb
cmp
mov
sbb
xlat
lret
xchg
mov
fists
popa
jecxz
dec
inc
imul
xchg
outsl
fs
aam
mov
test
lret
sbb
in
push
mov
lcall
jb
cmpsl
mov
pusha
inc
insl
add
clc
cmp
mov
cmpsb
lret
xor
add
sub
test
inc
add
lcall
mov
push
bound
pushf
jnp
cmp
sub
xor
pop
aaa
fs
inc
ds
or
xor
shll
mov
test
mov
cli
inc
pop
mov
cmp
dec
and
bound
loope
ljmp
lea
adc
pop
push
push
xor
mulb
ret
out
or
iret
test
sbb
dec
imul
or
add
or
test
push
test
imul
pop
cltd
ret
imul
sbb
das
outsl
pop
mov
cmp
cmp
addb
sbb
loope
movsl
xchg
int3
mov
push
shlb
lods
outsl
sub
mov
jmp
adc
push
adc
fbstp
ljmp
mov
je
lcall
or
pop
dec
mov
scas
in
pop
mov
loope
jecxz
mov
scas
loop
mov
popf
xor
sbbb
sti
push
xor
ret
jecxz
push
aas
sub
test
int
inc
mov
push
xor
add
xchg
sub
imul
cmpsb
push
sub
inc
pusha
out
fimull
shll
add
jns
ljmp
or
in
das
stos
lret
lcall
scas
add
fistl
xchg
or
imul
or
xchg
insb
xlat
mov
out
sub
inc
imul
icebp
sbb
add
or
shlb
mov
adc
xchg
sub
outsb
sub
ds
sbb
std
in
dec
jbe
dec
and
test
into
cmpsb
in
repnz
mov
arpl
mov
cli
jp
ljmp
iret
out
push
popa
add
cmpsb
cmc
loopne
pushf
xor
out
push
cmp
xor
adc
in
dec
mov
xchg
add
lret
in
cmpsb
push
jl
mov
movsl
sete
mov
ss
push
pop
int
clc
xor
movsl
bsr
daa
mov
mov
add
sbb
lcall
jg
int
push
dec
loope
sbb
push
test
loopne
and
jmp
outsl
jecxz
cltd
xchg
mov
les
inc
or
push
push
lret
insl
push
mov
call
xor
jns
addb
and
scas
in
ltr
fdivrl
mov
lret
rol
cld
int3
mov
mov
cli
xor
mov
mov
xchg
mov
rorl
cmpl
pop
pop
fldcw
mov
fucomi
nop
bound
out
mov
pop
and
pop
in
ss
scas
loope
outsl
aam
fisttpll
inc
jmp
add
call
out
je
test
lret
sbb
adc
outsl
adc
jmpw
cltd
xchg
sahf
subl
in
and
cmp
loope
ja
pushf
imul
fmuls
out
cmp
lea
aaa
mov
or
stos
addr16
cmp
sbb
xchg
jge
or
mov
xchg
negb
and
cmpsb
sbb
inc
shlb
addb
std
push
and
adc
scas
mov
fistl
aad
cwtl
imulb
mov
fstl
clc
data16
mov
sub
inc
jae
call
imul
enter
mov
daa
pop
lock
lea
rcl
xor
pop
dec
jp
popf
pop
sub
cmp
cmp
pop
cmpl
cmp
stos
adcl
test
ret
es
and
lock
pop
test
pop
inc
inc
adc
push
bound
stos
lds
add
dec
out
cld
out
push
dec
les
shrb
pop
or
mov
xor
jp
push
xchg
lods
cmp
stos
jbe
sbb
mov
sti
mov
rclb
nop
in
sbb
repz
xchg
mov
cmp
cltd
jp
aam
add
xchg
dec
dec
inc
pop
pop
or
sbb
cmp
test
mov
andb
repz
and
les
fs
lods
pop
leave
or
enter
cmc
push
fwait
mov
sti
outsb
xlat
xchg
loopne
loope
movsl
pop
adc
mov
jbe
pop
xor
repnz
cmp
pop
xchg
cmpsb
sarl
adc
cmp
push
adc
test
aam
int
imul
mov
fsub
pop
adc
and
in
js
mov
jle
loope
in
sub
xchg
mov
out
mov
add
mov
outsl
mov
insb
pop
mov
lahf
sbbl
and
fildl
jg
mov
xchg
in
pop
sahf
icebp
pusha
adc
icebp
daa
cmpl
or
movsl
cmp
iret
mov
lock
icebp
ret
outsb
xor
mov
jmp
push
int3
stos
cmp
icebp
add
imul
imul
push
push
dec
pop
xchg
movsb
fbld
aas
mov
fdivrp
cmpb
pushf
push
mov
jno
cmp
mov
and
dec
mov
dec
pop
or
js
add
stc
decl
or
mov
dec
aad
jns
jae,pt
mov
lods
fs
cli
xor
jmp
pop
insl
mov
addl
test
adc
loope
sahf
push
and
pop
and
loop
sbb
dec
imul
dec
ret
enter
das
enter
mov
jnp
out
enter
dec
push
jae
jecxz
clc
in
sti
jl
daa
enter
push
jl
xchg
mov
pop
ds
dec
inc
push
xchg
sub
scas
xchg
and
pop
sahf
nop
jnp
pop
cmpsl
push
jmp
in
jmp
lods
push
add
mov
mov
mov
mov
jl
jle
div
adc
nop
cmp
xor
dec
hlt
das
fucomp
push
mov
mov
nop
push
ficoml
mov
ret
loop
mov
out
add
imul
popf
xchg
test
sub
mov
mov
xchg
mov
arpl
cld
push
iret
cmp
call
dec
sub
loopne
outsb
or
mov
gs
jo
test
xchg
adc
shrl
fldenv
popa
jle
sbbl
xchg
xchg
jle
xchg
iret
rorb
imul
pusha
jns
adc
lret
mov
sub
sub
in
ljmp
jae
insl
adc
pushf
stos
shl
imul
mov
imul
mov
inc
adc
xchg
xchg
sbb
mov
test
or
push
adc
sbb
inc
mov
mov
push
mov
andb
xchg
xlat
jmp
and
xor
push
divl
pop
push
push
test
sbb
cmc
inc
repz
jno
sub
les
cltd
jp
cmp
lea
test
xchg
lahf
lods
mov
adc
mov
popf
mov
jg
fs
lret
and
or
sub
and
lcall
sbb
adc
mov
push
addr16
test
sbb
jecxz
enter
stos
xor
push
jge
repnz
je
mov
mov
arpl
loope
push
rcl
fstps
adc
sbb
mov
dec
mov
and
daa
xor
leave
push
test
adc
aas
mov
xor
sti
push
push
xchg
pop
push
cmova
sbb
cmpsl
icebp
pop
ret
fsts
cld
adc
push
mov
addr16
sbb
mov
cwtl
lahf
dec
xor
aam
xor
lret
jne
ror
adc
repz
or
enter
jne
mov
fwait
pop
in
xor
stos
lock
dec
inc
lock
pop
jns
insb
sbb
jbe
fmuls
lds
or
and
mov
and
ret
lds
popf
loop
orb
inc
cmc
int
int
or
enter
call
ljmp
sub
rolb
add
insl
mov
movsl
js
je
insl
out
cmp
sub
imul
mov
mov
ja
je
jge
push
xchg
stc
clc
pop
add
scas
inc
inc
pop
push
lret
cmpsl
das
std
and
jg
frstor
xor
iret
dec
bound
sub
push
lahf
push
in
pop
imul
lret
fidivl
lcall
inc
int
push
pop
negl
pop
rorl
add
push
rolb
xchg
adc
out
pop
stos
movsl
or
adc
and
stos
sub
or
pop
dec
gs
dec
mov
jne
jmp
repz
and
xchg
xlat
cmp
out
dec
jg
fimuls
pop
push
iret
idiv
daa
in
xchg
sub
jbe
cli
cli
mov
popf
sub
repnz
mov
test
push
sti
push
nop
push
and
inc
clc
into
dec
lahf
data16
ret
sarb
sub
inc
mov
hlt
lahf
mov
jl,pt
outsl
push
push
jbe
aas
push
pop
das
cmp
sbb
cmp
xor
cmovge
add
xor
inc
pop
and
add
out
cmp
sub
sbb
xchg
sub
ret
outsl
test
pop
cmp
lcall
xchg
testl
orb
call
sbb
mov
das
add
pop
sbbb
mov
scas
pop
gs
in
pusha
popa
sti
xchg
fcompl
mov
es
and
sub
add
mov
sbb
inc
fcoms
jle
in
dec
mov
push
ljmp
cmp
sbb
dec
mov
or
mov
dec
adc
addr16
add
inc
cltd
adc
repz
cmpb
mov
js
pop
popa
insb
fnstenv
cmp
ja
int
jge
sub
rolb
mov
mov
cmpsb
xor
lahf
push
addr16
push
adc
fcomps
add
das
push
nop
shlb
scas
pop
pop
inc
xor
ret
and
orb
sub
cmpsl
mov
or
cmp
cltd
jno
mov
add
movsl
cmp
push
jg
xchg
xchg
mov
popa
inc
adc
paddb
inc
aam
and
mov
mov
mov
sub
call
sub
aas
les
jnp
push
sbb
nop
lods
xchg
inc
sub
sbb
insb
imulb
std
jp
dec
imull
push
cmp
lret
inc
clc
shl
add
push
cli
pop
cmp
mov
add
test
fistl
push
and
or
mov
push
pop
adc
fldcw
cmp
mov
rcll
cmp
jno
pop
pop
fildll
lcall
or
ljmp
in
test
cmpb
jecxz
and
sbb
push
push
imul
movsl
into
pop
push
mov
gs
arpl
sub
pop
inc
aam
repz
push
outsb
stos
cwtl
xchg
xor
aaa
xorb
cmpsl
cli
out
pop
inc
fcoms
rolb
sub
or
leave
test
dec
shlb
xchg
sbb
ds
cmpsb
enter
fwait
inc
sbb
pop
sbb
fwait
push
adc
sub
jg
pusha
push
adc
fs
mov
jns
push
or
in
push
mov
pop
test
add
stos
orb
mov
or
sub
jecxz
mov
xchg
jne
pop
in
cli
xchg
js
push
pop
adc
pushf
adc
jb
ret
lea
sbb
rcrl
jne
scas
ljmp
mov
push
movsl
xchg
cmp
ja
jecxz
lods
mov
popa
and
and
mov
and
sbb
inc
mov
cltd
lds
inc
adc
popf
imul
dec
fldcw
dec
push
scas
lods
test
mov
xchg
adc
push
push
sbbl
cld
ret
mov
fisubs
sbb
test
jecxz
jns
cltd
pop
cmp
repz
in
lods
mov
nop
mov
sub
push
jb
jp
sbb
pop
repz
sbb
pop
das
fdiv
pop
jg
das
popf
add
inc
jp
aaa
cmp
in
pop
outsb
push
imul
mov
sti
insl
xchg
dec
movsl
adc
jns
jnp
dec
adc
test
cmp
jo
and
xor
sbb
fwait
mov
or
call
inc
jno
pop
inc
aaa
out
dec
out
faddp
sub
jns
jns
popf
dec
mov
outsl
jecxz
sbb
enter
stc
push
lds
push
dec
xchg
mov
sub
xorb
mov
xlat
dec
fbld
movsb
add
sahf
shrb
or
push
popf
lock
ja
inc
jg
pop
pop
hlt
repz
imul
xchg
lea
sbb
out
aas
fld
das
cmpsl
jp
push
inc
mov
or
mov
daa
rclb
insb
mov
stos
cmpsb
adc
shl
mov
xchg
ror
inc
mov
sbb
xor
sub
dec
fnstsw
sahf
jbe
xchg
movsb
or
and
xchg
add
stos
lret
in
jg
mov
jb
cmpb
add
pop
hlt
fimuls
loopne
mov
arpl
inc
arpl
mov
scas
test
jl
xor
mov
pusha
arpl
fisttps
outsl
mov
inc
shl
jmp
add
cli
leave
imul
cmovle
int3
repz
aas
dec
mov
es
sub
mov
pop
sbb
pop
adc
pop
cmp
ja
mov
mulb
mov
adc
daa
insl
fdivrl
loop
sbb
push
sbb
cmp
or
lahf
cwtl
leave
adc
xor
out
cmpsl
into
xor
gs
arpl
mov
mov
insb
add
jl
leave
xorb
clc
cs
jb
pop
call
xor
nop
push
mov
push
dec
imul
dec
dec
push
push
shlb
xor
mov
push
in
and
movl
mov
push
push
shrl
lods
jl
rorl
nop
ficoml
lahf
fwait
lahf
push
rcl
xchg
xchg
sub
jecxz
stc
xor
mov
jge
add
sbb
and
add
int
push
cmc
or
pusha
sti
test
data16
outsl
xor
lods
fdivrl
xor
xlat
fldt
fadds
add
out
in
shll
jmp
pop
movsb
sbb
shr
pop
push
mov
pop
push
sahf
pop
jecxz
cmp
sti
movsl
sbb
sti
pcmpeqw
push
mov
mov
mov
mov
xor
mov
jns
add
and
fs
pop
mov
fdivp
jp
data16
fucomp
pop
xchg
jae
bound
arpl
inc
cmp
popf
sub
or
xchg
push
push
inc
cmp
int
insl
test
stos
adc
nop
xor
xchg
push
dec
cmpsb
lods
inc
jb
mov
shl
lret
and
arpl
pop
test
adc
sbb
mov
stos
jmp
sub
subl
sbb
jecxz
push
xor
ret
mov
push
jecxz
jecxz
orl
jecxz
dec
dec
adc
scas
rolb
xor
cmc
cmpsl
push
scas
cmp
mov
dec
mov
inc
jo
je
sbb
cld
mov
cli
ret
cmpsb
dec
push
call
stos
lods
rorb
ljmp
adc
popf
out
out
xchg
and
ljmp
cmc
fidivrl
xchg
stos
mov
rorl
pop
fidivrl
lret
in
sti
mov
repnz
mov
mov
aam
insl
sub
pop
dec
push
test
idivl
mov
and
in
mov
pop
inc
out
movsl
hlt
push
mov
setle
cmc
ret
sahf
cmpb
in
or
dec
orl
jns
adc
cmp
push
lds
cli
xor
inc
or
xchg
inc
dec
jns
cltd
iret
cmpsl
bound
add
addr16
mov
lock
mov
inc
mov
inc
adc
insb
pop
outsl
xlat
xor
into
aas
xor
dec
xor
shrb
mov
ljmp
int3
daa
insl
fldl
push
inc
ds
imul
jne
insl
iret
pushf
sub
in
test
stc
pop
enter
push
xor
mov
shrl
lret
lds
call
and
jg
inc
sti
rcll
mov
aas
lds
xor
les
sbbl
out
mov
les
lock
ljmp
jb
orb
pop
xchg
movsl
xchg
aaa
xor
lods
lods
fstl
and
lods
fdivrs
fistps
cmp
negb
pop
jmp
jae
inc
sbb
je
and
mov
jecxz
cmp
ss
jl
xor
sub
clc
cmp
inc
addl
pop
in
pop
adc
pusha
xor
outsb
mov
dec
mov
ficomps
inc
inc
mov
push
adc
pop
cmp
lret
data16
push
sub
lret
scas
sbb
mov
aam
jle
jae
push
icebp
mov
sub
das
inc
loop
sbb
xchg
cmpsb
lock
xor
sbb
lock
cmp
ret
mov
push
clc
or
and
inc
mov
fwait
icebp
adc
test
xchg
dec
orb
lcall
dec
jle
cmp
or
adc
dec
inc
mov
jecxz
sbb
cwtl
push
ja
jmp
mov
pop
out
xor
push
fdivs
rorl
jle,pt
loope
lret
fimuls
gs
mov
insb
jp
rcll
xchg
lock
imul
cmc
add
push
cmc
out
sub
jne
into
ljmp
xlat
loope
stos
push
ret
sbb
mov
adc
insl
cltd
lcall
sub
or
inc
cmpb
jno
add
cmpsl
sbb
jb
xchg
push
inc
jg
and
mov
pop
in
lret
cmp
roll
jge
push
decb
mov
adc
cmp
jp
in
aas
cmp
inc
fcoms
pop
push
pop
test
mov
mov
jb
insb
mov
imul
and
loopne
lahf
movsl
mov
xchg
iret
call
in
add
je
enter
xlat
push
push
jge
cli
lret
je
adc
and
ror
push
daa
sbb
sbb
dec
sti
imull
mov
out
aad
dec
xchg
push
or
push
in
push
jnp
jae
sbb
imul
pop
sbb
adcb
cmpsl
in
in
cmp
pop
push
sub
fldl
lock
pop
and
pop
sbb
sub
inc
push
mov
inc
jo
mov
jge
add
dec
mov
cltd
mov
fidivrl
hlt
mov
dec
mov
or
into
cld
out
sub
loop
sub
sarl
in
es
scas
push
daa
in
mov
push
cmp
bnd
mov
sbb
outsb
dec
xchg
mov
xchg
adc
sub
dec
in
jno
into
add
dec
adc
sub
jo
inc
out
sarl
in
push
icebp
adc
in
jno
add
push
jmp
and
push
cmpb
mov
xorl
lret
jecxz
ret
sbb
dec
mov
out
jbe
sti
mov
adc
push
aad
popa
clc
pop
loope
adc
dec
dec
cs
mov
shr
add
dec
jge
fstps
pop
push
mov
loope
fisubl
jmp
ret
xchg
stos
cmpsl
cli
cmovge
or
sarb
push
sbb
cmp
push
lea
sub
ljmp
pop
stc
in
cli
mov
mov
cmc
adc
inc
xchg
dec
jecxz
add
mov
bound
and
sbb
sub
fs
test
xchg
pop
jae
ficomps
leave
ja
out
mov
mov
jg
mov
or
test
ss
push
pop
test
inc
push
jl
repz
adc
sub
ret
test
jmp
jge
sbb
add
lahf
mov
dec
pop
lock
movsb
pusha
out
movsl
jb
ss
dec
cmpsb
mov
push
sbb
mov
jg
and
sub
cli
xor
dec
pop
iret
xchg
loope
pop
mov
sbb
jg
pop
arpl
clc
in
jne
push
enter
cmp
jnp
and
inc
sbb
in
sbb
xor
pop
lds
adc
sub
mov
lahf
imul
lcall
outsl
daa
nop
sub
cmpsb
pop
dec
sahf
fnsave
mov
sub
pop
subl
jno
mov
shrb
xchg
xchg
push
iret
daa
hlt
sti
jge
loope
pop
inc
xor
jp
clc
negl
loopne
sub
lret
out
sub
or
pop
fs
cmp
xchg
or
or
jg
ficompl
aad
push
xchg
js
pop
popa
lcall
add
sub
ljmp
adc
test
mov
scas
jmp
cmpsl
in
shl
cmpsb
push
jnp
adc
inc
or
push
inc
dec
nop
or
mov
xor
jl
or
pop
es
sub
dec
enter
mov
fcompl
xor
mov
xor
or
in
les
shlb
movsl
cmpsl
sarb
xchg
sbb
lods
or
cmp
and
inc
xchg
or
xlat
sbb
test
pop
cld
sub
cmp
add
data16
push
jmp
stos
movsb
sahf
inc
sbb
mov
mov
cmpsb
shlb
addr16
sbb
sbbl
xorl
inc
and
push
lds
pop
jmp
sahf
rcll
in
bnd
jmp
mov
jns
in
ss
and
sbb
push
popf
add
sbb
or
push
popf
xor
leave
rcrb
jecxz
sbb
imul
pop
sbbb
aaa
push
pop
popa
pop
aam
push
pop
jg
mov
jno
cmpsb
dec
xchg
sbb
inc
notb
jp
adc
shlb
test
inc
insb
or
mov
or
or
push
xchg
daa
dec
inc
push
mov
call
cmpsl
push
jns
or
mov
push
int3
dec
pop
call
inc
stos
das
outsl
and
adc
push
mov
jns
mov
mov
lods
stos
nop
pop
mov
mov
dec
movsl
adc
mov
bound
add
lret
ja
divb
lods
lret
gs
sahf
xor
pop
mov
psllw
or
dec
sbb
into
fdivrp
inc
stos
rolb
inc
mov
push
lock
inc
sahf
cmp
sub
push
out
fdivrs
jnp
cld
imul
fsubs
adc
push
cmp
mov
jmp
pop
jns
xor
in
arpl
pop
inc
jp
jle
xchg
push
xor
repz
fisubs
test
pusha
mov
popf
pop
sti
pusha
sbb
into
push
mov
xchg
repz
push
fwait
sti
xlat
mov
adc
add
js
ss
dec
cmp
fimuls
pop
and
sahf
xchg
rcrb
aas
pop
mov
inc
xchg
jo
sub
and
mov
adc
dec
add
and
and
inc
in
dec
push
sbb
mov
push
fildll
push
lods
sti
lahf
xchg
out
or
mov
ljmp
jo
test
dec
jg
addb
mov
dec
jmp
xchg
adc
lock
stos
in
dec
inc
shlb
and
and
mov
out
jb
bound
pop
dec
jmp
sub
into
push
mov
jmp
loopne
push
int
push
pop
or
xchg
shlb
movl
inc
pusha
add
rcrl
sbb
cmp
cld
out
scas
daa
cs
pusha
mov
mov
scas
insl
imul
movsb
jae
cmc
and
gs
popa
adc
jge
xchg
shlb
xor
xchg
loop
scas
fadd
mov
es
movsl
test
pop
mov
add
cli
inc
cmp
sbbb
rcr
dec
ret
mov
jmp
pop
arpl
fcmovbe
int3
imul
and
pop
push
mov
mov
cld
dec
xor
add
in
and
push
mov
pop
push
in
mov
inc
xchg
add
test
clc
flds
or
cltd
out
jae
into
fidivs
and
test
fwait
push
clc
xchg
shlb
mov
in
xlat
icebp
cmp
enter
incb
sbb
dec
loopne
test
add
pop
movsl
push
adc
inc
je
sub
or
xchg
push
sub
and
insb
and
dec
xchg
mov
adcb
test
sbb
mov
dec
clc
into
push
les
sahf
cmp
pop
je
shlb
jl
mov
jge
jns
andl
ss
lods
xor
sub
inc
mov
movsb
ret
push
out
and
mov
add
aad
adc
in
repz
jle
xchg
test
cmp
jecxz
stos
repnz
cmpsl
icebp
mov
lcall
mov
sbb
mov
sbbb
push
pop
push
sbbb
movsb
jbe
push
mov
test
ret
sbb
iret
test
addr16
enter
iret
les
sbbl
and
into
cmp
add
insl
cld
mov
in
fwait
jnp
movl
adc
rcrl
push
aam
xchg
mov
mov
mov
lcall
inc
das
into
shl
or
and
sbb
add
es
popf
cmc
movsb
xchg
mov
xchg
adc
test
fwait
lds
test
movsb
enter
mov
jo
mov
out
sbb
sbb
je
test
push
and
ss
adc
jnp
test
ja
shrb
xchg
ret
push
dec
notb
or
dec
mov
lcall
dec
aam
and
add
insl
out
or
popl
jno
dec
pop
and
xchg
lret
jbe
inc
mov
inc
mov
sub
mov
mov
mov
fsubrs
xor
push
inc
sbb
stc
sar
inc
mov
pop
and
arpl
je
mov
arpl
cmp
fists
xor
fimull
filds
push
mov
cwtl
rclb
sti
aam
cli
mov
sbbl
adc
imul
movsl
into
sbb
or
adc
mov
jle
test
mov
pusha
fs
loopne
subl
out
push
sarl
lds
inc
and
out
idiv
loopne
fisubl
pop
push
mov
xor
push
jl
pop
sbb
dec
sub
jb
rcr
in
movsb
or
cwtl
fwait
and
js
faddl
mov
adc
pusha
mov
lods
fildll
dec
and
popa
sub
push
cmp
repnz
fdivrp
mov
mov
jge
fwait
xor
notb
icebp
sub
aad
nop
into
ret
pop
inc
icebp
rol
mov
aad
cmp
xor
lret
jle
lcall
test
addr16
or
cltd
jp
jno
stos
xchg
outsb
sub
fs
enter
push
or
or
jge
fisttps
add
out
jmp
nop
or
jmp
inc
test
fs
popf
adc
jmpw
mov
in
jnp
adc
add
pop
mov
mov
jl
or
in
andb
fnsave
cmp
xchg
fists
xorb
lock
mov
fcmovnbe
add
ss
lds
mov
decb
out
fiadds
mov
jbe
and
sbb
jnp
jp
xchg
jns
jmp
pop
cld
mov
push
dec
decb
mov
mov
dec
push
repnz
stos
mov
inc
stc
ds
push
std
push
scas
add
cmp
jo
add
or
gs
lcall
dec
xor
cmp
pop
sti
test
adc
sub
xchg
cmp
aad
pusha
stc
in
and
and
jecxz
lcall
into
mov
fcompl
dec
pop
cmp
pusha
fmul
jne
cmp
mov
lahf
lcall
pop
sbb
xchg
outsb
iret
xchg
jns
fwait
mov
jl
jbe
inc
inc
rorb
fwait
rolb
cmpsl
adc
cmp
cmp
lods
add
push
decb
rol
into
inc
in
cmpsb
inc
dec
add
imul
mov
ja
mov
pop
lods
mov
sub
mov
rorl
fs
mov
aad
fwait
jae
mov
and
push
xchg
insl
lahf
leave
jmp
ljmp
mov
lea
sbb
xchg
adc
and
loopne
lods
loope
mov
cmp
pushf
jmp
xchg
adc
and
dec
ret
movsb
int3
pop
xchg
loop
xchg
cld
fnstsw
leave
insl
in
mov
xchg
mov
adcb
in
bswap
outsb
mov
in
xchg
lcall
cmpl
scas
sub
cld
js
pop
push
adc
and
stos
xchg
aas
lcall
rclb
mov
into
and
std
subl
pop
pop
ret
js
iret
in
mov
ja
mov
xorl
xor
lods
push
fisttpll
ljmp
xchg
sub
out
mov
dec
dec
iret
mov
ljmp
lret
cmpsl
push
repnz
orb
lret
sbb
pop
pusha
mov
xor
jnp
push
cmpsb
fimuls
adc
cmp
outsb
scas
mov
fisubl
jmp
dec
jp
lret
add
test
cmpsb
jl
xor
sub
rclb
add
ja
out
leave
inc
adc
jge
ret
pop
lcall
rorl
dec
pop
movsl
lret
lret
dec
mov
push
adc
repz
or
ret
gs
xchg
dec
sub
mov
daa
test
popf
je
mov
mov
les
jp
push
pop
push
jge
lods
sub
in
lcall
dec
mov
adc
mov
adc
xchg
mov
hlt
test
insb
xor
das
les
xchg
cmp
pop
out
into
jno
jp
sahf
dec
sti
inc
xor
mov
xchg
jns
outsl
cmp
adc
push
inc
cwtl
xchg
jp
push
dec
stc
fadds
and
inc
add
in
lock
add
sti
mov
mov
sarb
mov
lcall
add
stc
mov
sub
lahf
or
pop
mov
mov
into
fs
mov
lds
and
dec
insb
push
jo
add
xor
adc
jnp
or
loop
pusha
adc
call
jae
cltd
scas
das
lea
xorb
sub
jecxz
pushf
jne
cmp
cmp
sti
imul
pop
xchg
shlb
stc
mov
xor
mov
pop
cmpsb
mov
daa
cmp
dec
jb
idivl
pop
dec
sti
ljmp
lea
pop
push
jb
cmp
movsl
data16
fldenv
push
fsub
ss
addb
les
sti
dec
movsb
mov
mov
cwtl
dec
sbb
movsb
or
loop
popf
sbb
imul
test
sbb
test
aaa
mov
pop
mov
xchg
dec
enter
imul
sti
xor
les
fs
les
jle
push
or
xor
leave
mov
pushf
lret
add
sahf
xchg
aaa
test
mov
adc
imulb
mov
mov
and
mov
add
mov
and
xchg
xor
push
adc
test
dec
pop
mov
mov
in
andb
repz
mulb
cmp
and
push
lret
jnp
cld
mov
lret
or
jo
aaa
in
fnstsw
jmp
divl
loopne
fs
ds
aaa
sar
xchg
push
aaa
sub
ret
int3
in
cwtl
outsb
inc
xchg
sub
scas
jp
aas
jns
dec
or
sub
or
jae
push
mov
dec
rcrb
or
das
mov
scas
shrb
insl
call
adcl
repz
test
hlt
cmp
fwait
push
hlt
stos
icebp
adc
js
jns
mov
push
adc
adc
mov
sahf
clc
test
mov
mov
add
mov
cmp
test
movsl
pop
sahf
insl
push
cwtl
mov
mov
cmp
test
and
cmp
mov
imul
into
hlt
pusha
pop
inc
cmp
and
cmp
mov
cli
mov
add
adc
sahf
push
aam
push
inc
mov
outsb
jno
and
add
pop
push
iret
cmp
data16
mov
dec
mov
pop
push
fldcw
inc
jnp
mov
dec
sbb
adc
daa
jns
ret
ds
inc
xchg
fstpl
add
popf
loope
pop
mov
mov
rorl
lcall
add
add
mov
inc
fimull
dec
shrl
sub
pop
das
lcall
mov
cltd
mov
sbb
mull
mov
mov
or
js
mov
loop
ficoms
notb
pop
addr16
aaa
or
enter
mov
inc
xor
xchg
dec
or
nop
bnd
cld
jne
mov
inc
fidivl
divb
lcall
or
and
jge
frstor
lcall
fs
jmp
push
adc
fimull
inc
push
in
mulb
pushf
xchg
aas
fcoml
popf
outsl
sbb
pop
scas
xchg
ss
cltd
pop
sub
cwtl
pusha
mov
fcoml
aaa
pop
add
sbbl
jmp
or
repz
rolb
lcall
mov
cmc
and
or
dec
in
decb
movsl
sub
mov
cmpsb
sub
pop
or
pop
incl
jae
ret
test
jo
mov
lods
cltd
push
fsubrl
and
test
call
xchg
dec
mov
pop
xchg
mov
aaa
cmpb
cmp
adc
cwtl
mov
cmp
lret
aas
ds
pop
xchg
lcall
cmp
pop
add
stc
mov
lcall
mov
mov
add
sub
pop
call
jae
push
inc
mov
xorb
ret
sub
mov
push
push
xchg
ja
cmp
ret
sub
mov
jge
in
xchg
cmp
loopne
es
push
pop
aad
add
lods
std
push
push
pop
cmc
aam
outsb
jp
scas
hlt
jnp
out
pop
pop
mov
mov
cmc
xchg
bound
sbb
fcoms
xor
test
mov
mov
movsl
xchg
jo
repnz
mov
mov
and
inc
clc
jle
pushf
lcall
mov
mov
dec
dec
cmpsb
xchg
out
jae
push
adc
mov
mov
das
mov
push
jno
movb
push
repnz
push
pop
insb
cmpsb
mov
loopne
testl
jmp
dec
aam
sahf
or
shr
and
adc
dec
xchg
xchg
call
filds
outsl
xchg
insb
js
and
push
and
fcmovnu
mov
mov
gs
fcomps
adc
fistpll
jno
adc
xor
mov
push
clc
fdivrl
outsl
or
out
mov
push
push
or
fwait
add
cmp
int3
fists
movsl
lret
add
pop
xlat
jno
xor
loope
dec
les
cmp
push
lret
aam
mov
inc
inc
sub
decl
inc
jno
int
push
popl
cmp
scas
or
dec
or
jmp
in
fildl
push
clc
mov
sub
jbe
outsl
sbb
lock
sub
test
and
dec
jbe
pop
push
xchg
sbb
inc
or
and
jmp
sti
mov
inc
insb
push
sbb
ret
in
in
loope
mov
and
pop
scas
dec
push
inc
out
jge
lea
push
enter
push
xchg
shl
mov
add
rcrl
pop
test
add
lret
inc
mov
sbb
sub
pusha
and
xchg
pop
stc
dec
std
loope
ljmp
in
cmpsl
mov
insb
scas
adc
addl
adc
sub
mov
adc
in
out
dec
fs
or
out
sbb
ret
das
mov
std
lods
or
xor
pop
and
adc
lret
aaa
pop
and
movsb
push
sarb
xchg
cmp
gs
daa
inc
push
mov
andb
fsubr
cmpsb
stos
sub
or
scas
insb
and
popa
adc
sub
push
sub
xor
and
push
les
test
mov
add
repnz
aaa
sbb
push
lods
sbb
je
aas
mov
xchg
into
adc
jo
js
fdivrs
adc
jp
jecxz
int3
adc
jle
loop
loop
mov
shll
sti
jmp
scas
scas
cmp
mov
lock
mov
push
inc
mov
sbb
insl
fimuls
sub
xchg
movsl
mov
aad
mov
nop
inc
xchg
into
das
imul
enter
jae
jae
imul
cmp
sub
mov
shll
jo
test
adc
sti
lock
outsl
scas
inc
mov
ss
mov
rcll
enter
lret
out
loope
cmp
adcl
mov
add
push
cmp
nop
pop
cmp
and
in
adc
mov
jecxz
adc
pop
sub
bound
dec
add
arpl
test
add
iret
jns
sbb
icebp
lea
fisttpl
fistl
pop
mov
adc
mov
cmp
pop
mov
pop
out
cltd
jno
push
add
mov
in
push
xor
push
add
stos
outsb
enter
bound
dec
out
jnp
pop
pusha
shll
mulb
push
call
in
addr16
push
inc
lret
and
mov
add
sti
push
scas
jg
daa
out
inc
xchg
mov
jmp
mov
mov
push
and
rorl
add
xlat
mov
iret
lret
xor
pop
out
pop
mov
repz
mov
xchg
add
das
pop
adc
stos
jbe
mov
mov
sub
mov
rclb
into
push
in
push
add
das
cmp
mov
movsl
cli
sti
or
loope
loope
popf
cmpsl
cmp
xor
lcall
test
test
mov
cwtl
mov
pop
cmc
stos
cmp
jo
xchg
cmp
mov
cmpsl
xchg
sub
jecxz
mov
adc
or
cmp
xchg
bound
xor
and
jo
cmp
xchg
out
dec
scas
ljmp
mov
mov
pop
jecxz
rclb
dec
stc
imul
push
push
cmp
pop
cmp
bound
hlt
cmp
pop
cmp
movsb
xchg
lret
mov
adc
mov
xorl
mov
movsl
lcall
pop
pop
inc
mov
mov
mov
jne
add
xor
and
negl
inc
cmp
scas
sub
pop
in
movb
jecxz
out
sbb
cmp
and
enter
ret
sub
jp
or
push
push
dec
or
gs
inc
lcall
and
mov
sbb
push
lea
loopne
jno
mov
cmc
or
mov
mov
movsl
ds
pop
cmpsb
inc
sbb
jno
or
cmp
jp
arpl
or
jle
xchg
xchg
ja
xlat
push
dec
or
or
xor
or
popf
inc
lods
sub
mov
cld
or
ret
sub
mov
adc
cmp
gs
cmp
aam
ret
cmpsb
sub
sub
cltd
mov
inc
std
repnz
outsl
shll
fldl
xor
movsl
cs
shlb
stos
shrl
sbb
adc
sbb
test
mov
cmpsl
bound
shr
inc
mov
movsl
add
mov
rorb
insl
sub
xchg
xchg
jge
lea
jecxz
arpl
mov
loope
mov
sbb
lock
stc
mov
lea
leave
jbe
sub
sub
adc
adc
and
or
pop
pop
loope
imul
mov
xor
sbb
push
das
push
in
or
decb
jae
inc
scas
and
xor
push
lods
jb
xlat
mov
icebp
cmp
sti
sbb
and
outsl
je
sub
push
out
pop
inc
dec
xor
das
sub
pop
outsb
jmp
cmc
fdivrs
lret
fld
sbbl
dec
fcoml
icebp
adc
push
addr16
dec
adc
push
mov
xchg
mov
pushf
inc
ds
and
ficoml
dec
or
xchg
mov
lret
xchg
into
aad
nop
push
mov
inc
fldl
cmp
cld
mov
scas
les
xchg
jp
xchg
mov
adc
std
fcoml
xchg
pop
jle
test
cmp
inc
dec
nop
jno
rcrb
push
fstps
cmpsb
pop
out
jecxz
inc
stc
ret
jne
jmp
int
aas
movsb
cs
aad
ja
and
add
int3
scas
push
add
sbb
push
mov
fsubl
and
loopne
lea
mov
out
cmpsl
movsb
jecxz
cmpsl
jmp
mov
inc
adc
icebp
outsl
out
pop
jg
dec
loopne
dec
inc
pop
mov
les
xchg
jne
iret
inc
xchg
mov
pop
jecxz
mov
lods
outsb
adc
jecxz
inc
in
jo
test
fdivrl
xchg
cltd
mov
fisttps
test
orl
adc
pop
stos
lea
xor
mov
enter
pusha
ja
pop
out
pop
test
imulb
mov
test
xorl
xchg
enter
fsubrl
fcmove
sbb
loop
aaa
xchg
cmp
test
dec
cmpsb
movsb
faddp
push
dec
push
pop
popf
push
mov
fucomi
pop
add
aad
push
sbb
xchg
adc
imul
xor
cltd
pushf
addr16
clc
ret
test
sub
sub
cwtl
jg
fcmovnb
addr16
int
cmp
ficoms
lea
pop
mov
rorb
mov
out
test
xor
lcall
and
fsubrl
sbb
jg
mov
cmp
lds
outsb
nopl
or
test
mov
leave
cmc
pop
push
adc
jnp
xor
or
push
lods
lock
das
stc
and
fildll
or
jmp
jmp
dec
mov
popa
jmp
xchg
mov
or
or
fwait
aas
lods
stos
aad
mov
clc
push
gs
loop
lcall
jo
add
dec
inc
mov
dec
cli
lock
dec
dec
pop
or
inc
das
cld
push
test
or
sub
std
stos
dec
jg
and
scas
mov
arpl
sbb
xchg
xlat
mov
jnp
add
mov
aad
push
popf
mov
xor
je
int3
pop
inc
mov
loopne
repz
stos
in
pop
mov
loopne
mov
out
repnz
mov
cmp
iret
push
pusha
out
loope
xchg
push
cwtl
js
shlb
adc
mulb
jae
shll
cmpsb
leave
int
inc
ficompl
iret
mov
add
shr
nop
es
ja
xchg
outsb
stos
cmp
repnz
add
mov
shl
enter
mov
mov
dec
cli
mov
mov
jp
sub
push
sbb
pop
cmp
dec
sub
popf
das
cli
inc
or
jb
int
sbb
and
jle
stos
push
fwait
into
mov
sbb
mov
push
pop
mov
andl
mov
scas
push
adc
jno
jns
leave
add
lods
outsb
mov
push
sub
adc
adc
es
jns
pop
mov
add
xor
aas
lcall
addr16
addr16
lds
mov
mov
inc
add
es
push
imul
into
pop
cmpsb
xor
cmp
sbb
sbb
add
int3
adc
in
rol
mov
xchg
out
aad
aaa
add
sub
push
sub
ret
xor
pusha
dec
inc
loopne
ja
mov
xchg
popa
pop
ds
xlat
je
ret
pop
dec
nop
rclb
mov
imul
int3
out
mov
add
xchg
and
sub
daa
xchg
mov
jns
jmp
icebp
outsb
ja
push
fldt
and
pop
xor
mov
nop
push
lret
mov
sbb
push
cmpsl
jo
addr16
cmp
leave
push
mov
push
cwtl
jmp
pop
ficoms
mov
add
stos
aad
shl
cltd
imul
test
sbbl
and
fwait
mov
jle
sbb
ffree
push
mov
xor
fidivl
arpl
mov
jne
hlt
pop
cmpsb
push
sbb
decl
adc
scas
xchg
dec
daa
inc
xlat
movsb
jge
cmp
mov
mov
or
cmp
cmpsl
pop
jne
mov
push
jae
andl
and
clc
loope
or
xchg
stos
into
js
and
push
lret
test
or
fisttpl
xchg
and
xchg
jl
inc
xchg
test
mov
cmpsl
add
and
adc
sub
add
ljmp
lret
loop
outsl
loopne
and
or
jne
fistl
jmp
test
inc
and
and
add
idivl
fcompl
rcll
push
push
movsb
inc
and
test
js
test
jl
or
fs
xor
aaa
or
call
int
and
scas
lods
push
sbb
xor
xchg
sbb
out
int
or
sub
rol
xchg
or
and
lea
mov
jecxz
cld
sub
push
xchg
xchg
xor
int3
jae
jbe
and
jp
mov
jbe
push
inc
cmpsb
pop
and
orb
jae
ret
mov
dec
sub
stos
sbb
loopne
xor
pop
pop
mov
lret
xlat
insl
dec
scas
xorb
jl
dec
adc
add
dec
ds
push
sub
push
dec
cwtl
mov
and
xchg
push
xor
add
test
mov
pushf
repz
cmp
xchg
mov
push
push
aaa
shrl
shrl
cmp
decl
je
in
leave
sti
push
add
fidivrs
cmp
mov
sub
cmp
jne
mov
cmpsl
aas
and
adc
movsl
pusha
push
sahf
idiv
shll
jo
lcall
adc
fdivrl
adc
cmp
cmc
add
andb
sub
das
and
das
outsb
cmpsb
xchg
aam
inc
xchg
push
incb
or
xchg
pop
push
jo
inc
xor
xchg
insl
pop
inc
pop
cs
inc
cld
mov
std
mov
pop
cmp
or
and
adc
test
push
nop
xor
jns
mov
push
xchg
scas
jne
sbb
stos
test
hlt
aam
psubb
addl
in
pop
add
lods
fisttps
pop
mov
jo
add
call
lea
into
xchg
mov
fs
jmp
inc
jp
fdivp
xor
mov
or
mov
pop
lods
jne
fnsave
pop
mov
in
subl
pop
jl
pop
out
push
xchg
mov
xor
jne
pop
push
adc
mov
loope
cmp
and
lret
gs
imul
push
jp
and
lock
inc
add
add
xlat
lods
mov
xor
ja
lahf
push
xchg
rorl
inc
push
shl
pusha
je
jle
lret
lcall
movsl
aad
cwtl
into
sub
call
daa
xor
dec
movsb
push
ds
gs
sbb
adc
adcb
or
inc
cmp
jge
outsl
jmp
xor
test
outsb
fnstenv
xlat
hlt
test
loope
mov
std
sbb
rcrl
pop
sub
jne
fisubrs
mov
ljmp
mov
popa
push
inc
mov
fiaddl
ret
jmp
cwtl
or
mov
imul
pop
jecxz
insb
pop
shrl
scas
je
adc
cmpsl
inc
jno
sbb
test
ja
xor
shlb
jnp
in
addr16
stc
test
add
mov
adc
push
xor
inc
dec
push
mov
shlb
fmull
adc
inc
adc
jp
mov
sahf
push
mov
mov
mov
ret
imul
shll
pop
jmp
mov
add
mov
jo
xchg
jno
icebp
adc
aam
mov
adc
sbb
sub
es
adc
mov
dec
in
mov
out
mov
and
fidivl
mov
jbe
or
addr16
mov
inc
sub
xchg
xchg
les
jl
mov
jecxz
decl
cwtl
push
ficompl
out
jecxz
stos
dec
cs
add
adc
pusha
insb
in
xlat
out
loop
mov
pop
ds
mov
mov
adc
sbb
adc
pop
nop
jb
or
fidivs
cmp
stc
mov
subl
mov
call
xor
in
pop
cmovs
fwait
dec
cs
xor
dec
xor
fstpt
mov
mov
sbb
dec
pushf
add
fs
adcb
hlt
sti
or
mov
jle
add
mov
push
mov
shlb
lcall
sbb
ficoms
jno
mov
or
ljmp
jmp
icebp
jne
sub
jbe
dec
mov
add
fbld
cmpsb
mov
jg
jae
ror
mov
outsb
xlat
xor
jmp
or
fwait
jns
cmpsb
aaa
jae
stos
cmpsl
sub
xor
out
mov
mov
xchg
clc
pop
pop
pop
cmc
inc
sbb
cmp
imul
jl
clc
mov
jnp
inc
mov
sti
mov
out
outsb
xchg
add
pop
lods
cmp
stos
jl
mov
int
xchg
sbb
sub
jae
adc
insb
out
xor
inc
dec
mov
jb
sbb
rcll
push
out
scas
lret
sbb
or
das
cmp
jle
sub
insl
loope
int
mov
in
stos
sbb
jb
jbe
cmpsl
pop
ja
out
mov
inc
loope
mov
mov
hlt
insl
orl
dec
jl
das
xlat
adc
scas
add
xor
aaa
scas
mov
fwait
dec
pop
or
pop
hlt
xor
mov
lahf
dec
lcall
mov
xchg
mov
into
decb
pop
lods
pop
fdivrp
dec
sahf
aam
mov
mov
test
xchg
data16
xchg
repnz
fists
cmp
cli
push
sbb
out
mov
sbb
mov
adc
sub
movsb
popa
xchg
pop
rcrl
dec
adc
movsb
mov
and
arpl
lcall
adc
into
shlb
lret
sbb
mov
jmp
push
jbe
iret
push
imul
das
dec
dec
lds
mov
popa
xlat
bound
add
inc
cmc
push
leave
fs
scas
cmp
xor
jmp
xorb
test
je
xor
jb
pop
dec
leave
call
sbb
push
xchg
dec
pusha
les
nop
fsubrl
adc
cli
adc
ljmp
rcr
dec
addb
sub
fldenv
inc
sub
cmp
jae
lds
jae
cmp
cmp
and
add
imul
push
cmp
daa
aaa
xor
out
out
dec
cmpsl
cmp
les
xchg
or
push
push
movsl
xchg
js
push
jge
jmp
or
fimull
jmp
arpl
jo
pop
xlat
lret
lock
jmp
push
jns
and
lods
ds
jo
aas
out
adc
sarb
hlt
push
out
in
fstps
negl
inc
jo
xchg
sub
sbb
aaa
mov
jno
sub
sub
clc
jle
xor
vaddsubps
cwtl
add
ret
loopne
sub
test
dec
fimull
mov
adc
sysexit
sub
jo
cmp
repnz
je
ds
mov
fs
jbe
clc
cmp
addr16
sahf
mov
lock
popa
push
cwtl
mov
fdivl
fs
imul
jp
mov
jb
outsb
out
xchg
arpl
test
ds
push
adc
cmp
test
jle
add
scas
mov
mov
test
rolb
loop
sbbb
pop
pop
aas
push
mov
lods
jne
dec
sub
aas
cltd
jns
jge
mov
leave
stos
push
mov
cmpsl
pop
fprem
dec
and
xor
rcl
loop
fcoms
vpmaxub
ss
pop
cltd
or
pop
mov
inc
cmpb
sbb
and
hlt
pop
mov
xchg
aaa
or
test
xchg
pop
insb
adc
negl
inc
fnstenv
adcb
push
adc
xchg
add
lods
jecxz
aas
mov
addr16
mov
mov
not
xor
sbb
push
int3
fwait
and
into
sbb
test
std
mov
cli
data16
mov
or
jle
mov
pushf
pop
push
inc
push
cmc
or
mov
adcl
ja
xor
push
loopne
sti
pop
xlat
add
inc
adc
pop
pusha
push
pop
lds
mov
rcrl
jmp
test
cltd
mov
dec
mov
xchg
fcmovbe
test
js
jp
mov
cmp
scas
jo
pop
sahf
cwtl
adc
fs
ss
add
icebp
scas
mov
icebp
ficomps
fs
dec
out
div
mov
jecxz
fisttpll
dec
or
addb
adc
pop
adc
sbb
mov
sahf
mov
push
dec
push
sub
cld
mov
mov
xchg
inc
loop
mov
popf
enter
inc
xchg
inc
mov
in
in
fistps
arpl
inc
fwait
push
mov
aas
push
xor
scas
mov
js
sbb
inc
sbb
sub
xchg
adc
jbe
push
ljmp
popf
pop
mov
xchg
mov
mov
or
cmp
das
sbb
aas
cli
and
xchg
jp
xor
in
popf
cmp
sbb
push
pop
mov
sbb
and
cmc
aas
imul
adc
outsl
lea
mov
aaa
push
and
test
mov
popf
cld
jle
mov
jmp
out
xor
orl
mov
fdivrl
sbb
ret
xchg
test
repz
pusha
mov
push
push
mov
in
lcall
dec
mov
imul
jae
jecxz
data16
jp
insb
xchg
push
in
sbb
or
jecxz
setae
aam
jl
lret
and
int
jp
push
roll
sbb
add
and
cmp
xchg
push
jb
dec
inc
add
sbb
jp
lret
inc
ss
mov
mov
aam
sahf
insl
fistps
xor
movsb
fwait
pop
out
mov
jge
or
imul
js
pop
std
sti
into
movsl
mov
cmp
pop
sti
or
mov
adc
les
sbb
movsb
inc
scas
sub
iret
pop
jecxz
icebp
lahf
pextrw
xchg
movsb
adc
cmp
sbb
push
dec
iret
and
daa
inc
lcall
out
fstl
xorb
add
jl
loopne
leave
and
pop
jecxz
sti
imul
pop
pushf
mov
jnp
orl
les
and
add
push
andl
pop
gs
cmp
and
ficomps
sbb
out
or
aam
inc
mov
stos
sub
push
out
pop
push
or
jne
pop
shlb
and
mov
imul
mov
mov
bound
mov
sub
arpl
push
ss
out
jmp
jne
mov
fisubrs
fsubp
in
ds
mov
scas
and
fbstp
or
ja
outsb
sub
adc
stc
scas
addl
stc
dec
mov
adc
xor
xor
pop
mov
dec
icebp
enter
push
lcall
jno
sbb
xchg
das
jge
call
shlb
cmpsl
xchg
lcall
scas
lock
xor
les
fwait
lahf
das
scas
dec
adc
movsb
push
mov
lret
sete
jp
lock
pop
xchg
xchg
sarb
cli
mov
and
xchg
aad
inc
pop
es
popa
xchg
mov
xor
loope
xor
push
cld
lea
jmp
pop
xor
iret
sti
lock
inc
or
cs
mov
cmp
and
inc
mov
add
inc
testl
jle
movb
add
in
nop
ljmp
movsb
cmp
gs
stos
fs
lds
scas
ret
xchg
or
sbb
rol
inc
ret
pop
cltd
mov
inc
mov
notl
mov
xchg
popf
int
dec
cmova
out
push
add
and
enter
push
inc
lods
inc
xchg
subb
nop
mov
mov
push
hlt
loope
sub
ja
add
cmp
mov
push
and
inc
filds
in
sub
and
jecxz
bound
outsb
push
adc
ja
adc
jp
scas
sub
leave
mov
movsb
stc
inc
pop
pop
sub
xchg
movsb
sbb
addb
aas
lock
add
sub
test
scas
fs
jne
adc
mov
push
mov
mov
sahf
sub
dec
sub
es
out
mov
and
mov
jae
jle
les
daa
or
sub
xchg
jns
cmpsb
loopne
jo
mov
loop
mov
sbb
push
in
int
mov
enter
cwtl
enter
das
shr
mov
adcb
aam
mov
xor
jnp
xor
xor
loope
adc
lret
and
into
dec
sbb
rcll
loopne
sbb
lock
ret
mov
pop
nop
mov
std
sub
cmp
xchg
push
cmp
jmp
or
pop
xorl
addr16
mov
imul
xchg
cmc
xor
add
mov
cmp
mov
mov
popa
or
bound
sbb
inc
adc
es
jnp
xlat
stos
cmp
ret
and
sub
or
cmpb
dec
repnz
sar
mov
cmpb
pop
xor
imul
add
mov
inc
bound
outsl
cwtl
jle
push
and
sub
add
js
outsb
dec
ja
sub
sub
ljmp
test
ss
sub
movb
dec
rcrl
ljmp
cmp
and
sbb
hlt
roll
std
xchg
xlat
push
les
push
rcll
test
inc
adc
sarb
cld
test
pop
shll
mov
jne
xchg
mov
jmp
lea
or
mov
xchg
outsl
add
ficoms
adc
sub
les
inc
adc
inc
mov
insb
xor
mov
mov
push
add
jno
addr16
and
sbb
fstl
shrb
pop
cs
push
push
dec
inc
movsb
mov
or
sahf
into
inc
movsb
out
xchg
dec
idivl
test
xchg
imul
mov
xchg
and
cmp
add
ljmp
pop
xor
ds
ds
xchg
jno
jns
mov
dec
testb
daa
mov
cmp
and
sbb
xor
jl
ss
shr
push
cmc
in
jp
adc
aad
adc
data16
dec
inc
aas
test
and
std
adc
and
mov
sbb
fidivrs
mov
fisttpll
aam
call
xchg
pop
in
mov
xchg
pop
xor
inc
jb
xor
adc
loopne
and
jg
lcall
ret
leave
popa
and
add
jge
inc
std
mov
in
out
js
jle
or
push
lods
jae
js
incl
scas
test
xchg
inc
cmp
in
inc
inc
and
cmp
mov
adcb
in
xlat
into
or
data16
sub
lock
push
hlt
repz
lahf
cmp
sarb
je
lock
or
mov
faddl
mov
mov
push
psrld
subl
in
lods
insl
imul
push
or
pop
xchg
mov
mov
test
aam
in
cmp
dec
inc
inc
cmp
xor
push
js
aas
sbb
adc
call
jb
push
ret
cmp
mov
iret
mov
mov
clc
inc
mov
insl
std
cmc
jae
mov
add
je
into
shl
xor
xor
jl
pop
sub
add
scas
stc
jle
stos
cmp
or
repz
daa
notl
push
xor
fdivr
xchg
mov
push
push
cld
imul
loop
mov
jo
mov
sub
mov
pusha
insb
scas
stos
lods
add
or
xchg
mov
fistpll
arpl
outsl
js
sti
jb
in
pop
pushf
mov
xchg
and
push
insb
adc
dec
ljmp
mov
sub
lret
leave
mov
popf
js
insl
mov
sub
dec
push
cltd
fs
in
cmp
mov
mov
idivb
jns
lods
pop
cmp
and
mov
mov
push
loopne
pushf
or
jo
insl
pusha
in
cltd
sbb
fs
popa
mov
dec
ret
mov
fs
add
lods
shl
xchg
iret
fcoml
pop
mov
inc
ficoms
jno
ljmp
cmp
push
in
sub
xchg
adc
ds
mov
repz
push
xor
sbb
repnz
push
movsb
push
scas
mov
dec
jmp
xchg
fcoms
adc
jecxz
sbb
cmpsl
jecxz
ret
arpl
jle
rcrb
stos
cs
inc
sub
jnp
fcomps
mov
push
mov
mov
enter
scas
enter
aam
pop
cmp
xor
push
or
jnp
lods
fidivrl
andl
in
cmp
and
flds
mov
and
push
rclb
pop
imulb
mov
mov
adc
adc
jl
fdivr
cld
mov
mov
das
arpl
cmp
mov
sub
out
andb
push
xchg
add
lea
stos
sti
pushf
or
rcrb
clc
dec
dec
clc
xlat
filds
cld
add
jb
xor
aaa
pop
mov
pop
lret
jno
iret
adc
xchg
ret
pop
gs
lds
ja
in
jp
sub
negb
cmpsl
or
add
and
ret
dec
out
lock
iret
adcl
pop
cwtl
mov
jne
adc
leave
dec
jp
dec
negl
lea
cmp
fwait
pop
sti
mulb
push
les
dec
mov
out
shl
mov
test
in
mov
lret
mov
les
cmp
mov
cmp
jns
mov
lods
cs
sbb
fldenv
xor
in
sbb
mov
mov
popa
int
clc
cltd
enter
ljmp
inc
out
xlat
cli
scas
xor
or
pop
jno
push
lcall
iret
sub
pushf
cmp
sbb
add
push
xchg
sti
jecxz
shld
pop
cli
push
sub
adc
or
fisttps
imul
stc
mov
add
das
ss
jge
jb
push
pop
das
test
or
add
fwait
inc
fstpt
lret
jo
mov
jp
adc
std
jne
popf
push
mov
pop
insb
inc
lods
icebp
sbb
aas
fstps
das
aam
lret
popf
dec
dec
lcall
enter
lods
std
xor
xchg
lock
inc
aad
push
out
imul
stos
pop
lea
shl
addr16
adc
pop
mov
sbb
jg
daa
decl
dec
pop
mov
lret
or
sarl
add
addr16
lds
dec
add
sbb
pusha
inc
mov
fs
mov
test
dec
popl
jecxz
inc
mov
mov
dec
sbb
popa
icebp
cmp
cmpl
jae
shr
in
inc
rolb
out
pop
fisttps
ja
pop
mov
icebp
dec
cs
cmp
sbb
mov
push
flds
orl
inc
stc
dec
out
sub
lea
fwait
stc
push
lods
dec
xchg
lret
out
dec
adc
lods
mov
imul
fistps
sub
in
mov
adc
idivl
les
adc
cmp
ret
push
dec
icebp
mov
sbb
sub
cmpsb
stos
mov
inc
test
mov
push
loopne
outsl
xor
xor
cmp
roll
pop
and
stos
push
cmp
xor
lret
sbb
mov
rcrl
xchg
xchg
push
inc
mov
dec
pop
lods
push
lods
sub
fcomps
pushf
fs
mov
pop
sbb
loop
scas
jg
fwait
cmp
xor
and
dec
test
mulb
es
insl
loop
push
inc
sbb
mov
cmp
add
pop
leave
ret
popf
jae
cmpsb
addl
add
pop
sub
mov
push
dec
inc
pusha
xor
sbb
stos
mov
push
ret
in
pandn
je
push
inc
mov
cwtl
mov
dec
xchg
ds
or
daa
cmpsl
setb
aam
lock
bound
je
pop
xchg
aam
enter
in
pusha
sbb
or
mov
repz
les
fstps
adc
fadds
and
scas
outsb
pop
lock
sub
cmp
jl
mov
scas
jb
pop
adc
mov
pop
out
xlat
les
push
mov
clc
sbb
idiv
aas
mov
fsubrp
jae
jbe
adc
jl
shrb
shll
mov
mov
inc
mov
sub
popa
fildll
push
shrl
out
shlb
add
jmp
insl
inc
xor
xchg
mov
loop
imul
arpl
mov
mov
test
pop
arpl
cwtl
add
push
jo
testb
scas
lds
js
aam
mov
cmp
xchg
mov
fiadds
cmp
sub
mov
int
std
in
fbstp
mov
jbe
pop
mov
hlt
and
jb
icebp
jg
test
cld
or
sub
push
mov
fldl
gs
lods
mov
inc
inc
hlt
add
and
push
mov
pop
das
lea
xor
fdivrp
testb
cmp
sbb
cld
pop
or
jb
inc
je
inc
mov
lcall
ljmp
fistl
mov
testl
lock
dec
push
mov
out
xchg
xchg
fdivrl
sbb
iret
lock
pop
out
loope
cmp
adc
dec
sub
sub
sub
in
fcompl
or
or
mov
mov
push
inc
stos
inc
inc
arpl
fsubrl
push
cs
add
loope
mov
cmpsl
in
das
data16
mov
mov
jge
into
pop
jge
jb
or
ljmp
iret
cltd
loop
inc
push
lret
stos
push
insl
mov
bound
mov
ja
sahf
out
pusha
dec
jl
adc
fwait
sahf
pop
std
repnz
shll
or
push
fnsave
xchg
mov
sub
mov
in
xor
jmp
adc
mov
lds
adc
shll
xchg
inc
cld
imul
xchg
xor
out
ret
push
pop
adcb
cmp
ss
hlt
lock
sti
adcl
dec
cltd
sbb
into
mov
mov
js
lahf
scas
xlat
in
cmp
gs
adc
pop
xor
inc
mov
repz
std
addl
cmp
sub
pop
push
pusha
pop
or
adcb
arpl
es
insl
or
xchg
cmp
inc
mov
jle
fstp
pusha
xchg
xchg
iret
mov
out
filds
lea
mov
aaa
add
inc
mov
jne
cmp
leave
stc
loopne
mov
pop
test
sarb
jbe
fisttps
out
scas
xor
cmp
inc
aas
add
pop
mov
mov
sahf
pop
call
push
pop
aad
fldcw
daa
adc
daa
and
pop
adc
jb
mov
sub
adc
push
pop
jl
int
enter
mov
ds
mov
push
test
hlt
stos
dec
xlat
lea
test
shrl
pop
inc
and
sbbl
push
or
scas
lods
loope
sub
repnz
and
mov
lods
outsb
push
movsb
ror
xchg
pop
dec
sbb
pop
mov
arpl
inc
xchg
cmp
sub
test
mov
inc
sarb
pop
jns
xchg
add
fsubr
std
fstpl
test
lods
ret
and
adc
dec
stc
sahf
jecxz
dec
sbb
insb
mov
aaa
dec
stos
jg
inc
jo
scas
stos
outsl
das
pop
xlat
adc
sbb
fistpl
lds
cwtl
ss
xor
lock
add
dec
sbb
jecxz
rcl
dec
jnp
jg
xor
sub
and
hlt
jge
xchg
cmc
fnstenv
xchg
or
cmp
notl
push
and
xor
sbbb
cmpsl
mov
mov
mov
and
das
repnz
incb
fwait
pop
xor
sub
sub
cmp
imul
scas
jge
fistl
pop
add
clc
orb
mov
lods
sub
mov
aas
lret
gs
sbb
sbb
jg
and
dec
mov
nop
pop
mov
pop
push
das
test
pop
mov
scas
cs
ljmp
sbb
mov
cmpsl
sarb
scas
sbb
mov
roll
mov
mov
ja
and
sahf
mov
gs
dec
test
pusha
stos
adc
ret
sti
scas
mov
or
enter
popf
jg
cmp
mov
into
test
cmp
add
scas
or
inc
les
cmp
aam
dec
in
sub
dec
subl
jl
inc
scas
sbb
inc
das
cmp
adc
push
in
mov
xor
xor
mov
lret
iret
adc
pop
or
inc
jnp
in
push
movsl
loope
outsl
int3
inc
pusha
jmp
sub
in
push
xor
add
dec
cmp
or
push
outsb
loopne
leave
mov
js
sti
mov
pop
hlt
imul
imul
sbb
or
popf
mov
insb
cmpsl
xor
pop
dec
jle
mov
push
insb
mov
lret
dec
jp
mov
cwtl
adc
inc
call
or
xor
daa
in
lret
in
mov
imul
cmp
cmp
test
cltd
sub
fmul
xchg
pop
fisttps
pop
mov
cmp
scas
cmc
scas
int3
rcpps
idivb
mov
sarl
xchg
insb
incb
cmp
fisubl
dec
mov
mov
pop
scas
ret
fcoms
add
pop
push
rcrb
xor
adc
enter
in
add
mov
xchg
jbe
sbb
xorl
aad
mov
popa
rep
or
add
out
push
iret
gs
into
xchg
popa
inc
sbbb
and
cmpsb
mov
lods
mov
inc
iret
and
std
int
jle
jge
or
lock
sbb
sub
iret
dec
mov
loope
mov
pop
dec
jnp
lock
add
leave
rol
add
mov
sub
test
sub
lret
out
and
outsl
in
mov
inc
cmp
gs
pop
fsubrl
out
dec
inc
adc
mov
mov
mov
mov
push
rorl
ret
jl
push
fucom
xor
push
in
sbb
or
shrl
das
hlt
cmc
js
in
cmpsb
fistl
test
sub
cmp
loope
inc
fsubs
push
in
mov
xchg
pop
xchg
cs
and
addb
movsb
dec
dec
mov
daa
ret
push
pop
cmpb
mov
adc
adc
mov
jmp
sbb
imul
mov
insl
push
fstl
mov
xchg
call
cmp
or
aas
sti
lock
icebp
xor
sub
mov
cmp
addr16
jecxz
mov
stos
xchg
loop
sub
lea
xchg
or
imul
xchg
jp
dec
andl
jg
xorb
push
in
cwtl
lret
dec
jno
outsb
scas
lods
outsb
mov
sub
aas
mov
sbb
lds
lahf
push
jo
jp
insb
inc
xchg
add
imul
loope
aas
stos
mov
sbb
push
out
sbb
jp
shrb
jbe
pusha
ljmp
es
ret
dec
stos
jl
je
fdivrs
rcll
adc
divl
fmulp
mov
fsubrp
pop
ds
dec
dec
out
jbe
repnz
jo
mov
push
push
out
rol
cmp
mov
push
hlt
testl
xor
dec
jecxz
mov
aam
mov
imulb
popf
cmc
dec
fisttps
imul
pop
stc
test
push
cmp
std
pop
push
push
mov
adc
shlb
adc
std
adc
pop
xchg
cltd
mov
cmp
jmp
leave
aas
adc
sahf
mov
push
and
inc
dec
pop
cld
sbb
push
xor
lds
fs
mov
imul
popf
jle
and
faddl
inc
data16
cmp
pop
movsb
scas
pop
and
jno
cmpsb
push
cli
mov
or
mov
push
mov
jnp
mov
adcb
dec
jmp
push
adc
outsb
aas
add
cwtl
andb
or
leave
pop
inc
jmp
mov
push
add
outsb
iret
in
sbb
aaa
and
stos
js
or
fidivrs
jo
push
add
push
fcmovu
push
ds
pop
dec
pushf
sbb
mov
sbb
int3
data16
imul
add
pop
or
pop
subb
dec
xor
fstpt
dec
add
mov
incl
inc
filds
cmpsl
jae
pop
imul
add
dec
push
jl
mov
dec
sar
jmp
in
inc
in
rorl
sahf
dec
inc
cmpsl
jmp
xchg
into
inc
xlat
test
shr
fnstcw
mov
aad
xor
cmpsb
jae
sub
inc
jno
fucomi
cli
outsb
jp
push
cmpsl
loopne
sub
pop
dec
adc
stos
mov
cmpsb
and
push
inc
and
in
shl
inc
cs
mov
cmp
cli
andl
mov
roll
push
cmpsb
shrb
out
and
dec
stc
mov
add
imul
adc
fildl
test
loop
shll
ljmp
fnstsw
repnz
jmp
dec
sbb
dec
sbb
and
xlat
xchg
add
shll
xor
sbb
mov
pop
push
lcall
jmp
add
push
mov
ds
aad
movsb
push
je
jo
leave
or
aam
daa
push
mov
lcall
push
inc
leave
dec
insb
jno
cmpsl
xchg
outsb
sbb
sbb
arpl
outsb
loopne
mov
mov
inc
popf
data16
xor
ret
cmp
cmp
cld
pop
xchg
jmp
jecxz
aaa
call
clc
mov
ret
jg
jmp
lods
les
stos
daa
dec
jmp
fucom
inc
push
push
loopne
ljmp
pop
xor
push
mov
mov
test
pop
mov
dec
mov
aam
sub
shr
and
jne
jp
cmpl
lret
xchg
mov
mov
call
sub
std
mov
dec
push
dec
or
push
fmull
scas
cmp
dec
xor
dec
cli
das
mov
sbb
test
pushf
mov
repnz
lahf
loopne
jnp
cmovg
and
mov
mov
xor
shlb
pop
pop
jbe
int3
shrb
and
inc
sub
add
std
mov
cmp
inc
outsb
lds
or
push
cmp
xchg
pop
fs
ss
push
jnp
xor
sub
js
jns
in
negl
xchg
sbb
push
mov
popa
aaa
cwtl
leave
or
jo
in
lret
push
imul
xor
mov
mov
sbb
pop
sub
aad
aam
icebp
cmpsl
pop
clc
out
jge
sub
and
sti
adc
push
cmpsb
mov
mov
jp
or
jns
in
lea
jecxz
add
cmp
pop
leave
mov
pop
cmc
loopne
dec
mov
add
outsl
mov
xlat
fldcw
sub
pop
mov
dec
fbld
xor
push
xchg
and
xlat
lds
mov
pop
test
test
pushfw
push
in
and
xchg
sahf
add
adc
and
pop
dec
push
popa
rcrl
push
scas
inc
mov
out
mov
in
xchg
test
cmpsl
aam
loope
inc
std
arpl
scas
mov
or
outsl
lahf
in
in
dec
popa
and
cli
mov
cmpsb
and
jge
sbb
push
lcall
outsb
sub
and
push
rep
add
adc
ret
inc
lock
int
and
insl
adc
fsubrs
pop
in
sahf
sbb
lods
scas
add
push
xor
mov
push
and
mov
push
hlt
jg
cld
push
dec
jno
and
dec
pop
movsb
cltd
adc
fisttpll
mov
jb
ss
icebp
js,pn
mov
fwait
loop
insl
push
jg
mov
cltd
std
and
fcompl
idivl
in
inc
jecxz
mov
loopne
xor
dec
int
push
and
mov
enter
add
movsb
imul
ret
sub
sbb
or
dec
sub
fs
mov
sub
or
je
shl
rclb
lock
xchg
adc
pop
inc
cmp
ljmp
or
mov
mov
aad
push
mov
sub
jmp
into
stos
jb
xchg
jmp
lcall
cs
stos
jle
fstpl
push
xorl
and
add
sub
dec
nop
mov
ret
rcrb
testb
sbb
movsb
mov
jg
dec
xor
scas
push
xor
rcrb
test
aas
iret
adc
imul
jnp
ret
mov
dec
adc
lret
lods
shrb
sub
jo
jl
aad
loopne
mov
push
push
cmp
imul
loope
cli
jbe
std
pop
sub
stos
daa
push
push
push
xchg
mov
fisttps
xor
jg
es
stos
stos
push
arpl
mov
popa
sahf
mov
xor
mov
inc
pop
insl
dec
mov
xchg
dec
pop
enter
ret
xchg
cwtl
jo
adc
pop
aaa
mov
push
daa
icebp
sub
lds
jb
and
sub
int3
mov
sub
mov
xchg
mov
dec
and
outsl
aaa
push
pop
adc
mov
mov
push
in
inc
imul
dec
dec
push
fsubrs
push
mov
pop
jo
dec
testl
pop
out
inc
jne
fcompl
add
pop
fwait
mov
rdmsr
mov
push
lret
sub
rcll
arpl
es
adc
insl
and
xchg
push
jae
push
add
pop
or
or
push
movsl
jg
clc
push
outsl
and
mov
outsb
jns
xchg
inc
ja
jo
out
in
into
movsl
or
dec
loopne
jecxz
addr16
stos
push
or
push
rcl
mov
sbb
ljmp
popa
dec
mov
pop
cmc
fildl
rcrb
arpl
decb
mov
xchg
mov
and
sbb
dec
push
andl
les
outsb
xchg
fnstenv
and
out
rorb
js
repnz
faddl
nop
pcmpgtw
fistpl
in
enter
scas
adc
or
adc
sahf
bound
out
pop
ficompl
sbb
fsubrs
test
shll
inc
pop
jb
sti
inc
icebp
shl
sbb
jae
je
lret
dec
inc
shr
cmp
lds
mov
pop
push
push
inc
inc
sbbl
in
pop
sbb
in
mov
push
bound
movsb
dec
and
sbb
and
jns
sub
jecxz
fdivs
ret
or
repnz
add
lahf
dec
cmp
jmp
rcl
inc
add
les
loop
mov
lods
inc
aad
stos
leave
iret
sub
iret
lds
in
gs
dec
ja
outsb
cmp
out
call
mov
jl
jl
mov
inc
mov
jmp
or
push
scas
popa
dec
lret
push
pop
sub
xchg
cmpsb
movsl
and
jnp
xor
enter
jbe
rorb
rol
inc
mov
repnz
ret
shr
and
mov
xchg
inc
lea
dec
test
test
test
lcall
xchg
sub
xlat
adc
int3
clc
test
outsb
xor
dec
mov
cld
out
add
aad
loop
push
lock
cwtl
mov
lret
and
fmuls
sbb
popa
xor
or
add
loope
movsb
mov
cmpb
fldt
jno
mov
dec
jle
lock
stc
jbe
repnz
fidivrl
push
fsubr
push
mov
xchg
das
jne
jo
sub
push
mov
ret
out
mov
mov
mov
mov
xor
or
shll
push
mov
adc
inc
lret
inc
xchg
imul
cwtl
sub
icebp
std
dec
bound
out
fnstenv
push
test
out
shlb
push
rolb
mov
push
mov
incb
pop
ss
out
xor
adc
mov
or
push
repnz
fldenv
outsl
pop
or
stc
daa
jno
push
ss
xor
cltd
mov
lret
sarl
lahf
out
adc
fdivrl
and
fstpl
push
sbb
jmp
pop
mov
fdivl
jne
enter
int
inc
imul
in
xchg
adc
adc
fwait
sbb
jno
in
push
gs
cld
sbb
test
pop
pop
mov
imul
cmp
xchg
popa
pop
aad
imul
fdivp
xchg
mov
mov
lock
bound
push
xchg
lcall
sbb
jecxz
pop
sub
fnsave
cs
lods
xchg
adc
sbb
iret
clc
xchg
jp
or
into
and
lahf
into
aaa
jbe
lret
add
fstpt
push
stos
sbb
push
inc
fcompl
js
sbb
mov
mov
shrb
mov
dec
call
xchg
cld
and
push
lret
pop
inc
mov
loop
popa
sbb
test
insl
pushf
lea
in
aam
pop
out
lock
sarb
mov
cli
mov
sbb
ret
jge
sub
test
jnp
icebp
test
sbb
insl
icebp
mov
lret
call
in
out
mov
mov
stos
inc
into
jnp
insb
sar
test
cmpsb
decl
cmp
cmp
mov
pop
call
ds
mov
pushf
and
mov
lea
sbb
xchg
jg
outsl
jb
jb
push
pop
repz
and
sub
xchg
shl
jo
test
cs
fwait
aaa
pop
mov
ja
mov
stos
in
outsb
out
push
cld
add
jb
pop
sahf
popa
jns
stos
cmp
cmp
out
iret
sbb
and
sbb
jnp
out
mov
push
inc
std
aaa
leave
pop
outsl
fistpll
loop
sub
and
push
pop
outsl
jmp
pop
insb
scas
jbe
ret
out
je
imulb
mov
divb
lds
cmp
jl
xchg
and
push
mov
mov
nop
add
lods
outsb
sub
je
add
bound
enter
cs
imul
imul
or
push
cmp
je
shll
es
or
in
sbb
push
pop
xchg
cld
add
cs
xor
dec
adc
push
sub
aaa
sub
and
xor
jmp
fdivr
imul
jmp
out
mov
jo
addl
and
out
mov
ret
xor
lahf
add
inc
push
movl
outsb
mov
insb
mov
pushf
xor
dec
inc
add
mov
pop
add
cmp
jl
jge
pushf
push
imul
inc
cmpb
fildll
js
lcall
mov
ret
mov
or
movsb
cmp
cmp
mov
jnp
mov
cmc
enter
mov
xlat
push
jnp
sub
mov
pop
das
rcl
xchg
cs
inc
call
dec
and
pop
or
mov
rol
xchg
es
aad
xchg
cmpsl
je
lret
jb
sbb
sub
cltd
lahf
inc
add
add
dec
sub
mov
lods
lock
push
inc
int
inc
adc
xor
xchg
mov
mov
pop
scas
xchg
insl
daa
xchg
ja
daa
cwtl
xchg
int3
cmp
addl
push
dec
cmpsl
fistps
mov
pop
rclb
and
movsl
lods
sahf
loopne
push
push
fcmovnb
arpl
xchg
lock
fldcw
scas
inc
lock
aaa
popa
stos
test
std
mov
pop
addr16
pop
mov
dec
xor
mov
xchg
cmp
sub
ret
cmp
das
sti
je
aas
inc
test
jns
notl
inc
aad
jge
adc
mov
bnd
jbe
enter
or
test
addr16
xchg
lds
subb
xor
dec
sbb
or
lods
cmp
ret
loop
lahf
int3
adc
push
add
mov
and
nop
xor
scas
xchg
adc
sbb
ret
dec
or
pop
mov
or
mov
das
dec
sbbl
add
ljmp
das
loope
repz
ficoml
or
mov
lcall
and
fsub
jle
dec
mov
sub
in
jnp
imul
repz
std
mov
mov
jl
insl
negb
dec
lret
jge
jle
movsb
syscall
cmp
or
pusha
cmpsl
bound
mov
loope
les
popa
jns
or
jle
sbb
mov
mov
cmpsl
mov
mov
repz
mov
outsl
out
mov
jecxz
addr16
ss
fs
dec
pop
inc
xor
mov
sarb
dec
int
add
rcrl
inc
enter
in
jbe
outsl
in
stc
fsubl
repnz
jnp
mov
lods
loopne
xchg
rorb
push
fwait
push
push
fwait
out
jp
push
ret
inc
cmp
leave
xorb
in
xchg
cltd
inc
pop
rclb
pop
ss
push
xchg
cld
or
or
loope
mov
es
je
mov
pop
dec
fwait
in
sbb
cmc
and
ret
mov
xchg
seto
fisubrl
into
into
inc
lret
lods
sarl
scas
jecxz
mov
cmc
daa
ja
push
pop
call
jnp
out
xor
mov
sbb
push
shll
mov
scas
push
jg
int
or
sahf
cltd
cmp
sbb
or
repz
jle
adc
push
addr16
push
add
add
ss
push
mov
or
sub
inc
xor
or
and
notl
out
rclb
xor
dec
lods
push
jl
cmpsl
mov
nop
pusha
and
loop
fwait
push
push
xchg
fnsave
push
imul
sbb
mov
mull
fsubs
add
pop
jne
adcb
and
mov
pop
lds
push
sahf
jecxz
mov
in
push
punpcklbw
mov
dec
sbbl
inc
mov
lds
cmc
mov
fimull
loop
sub
aas
sahf
jno
aaa
icebp
xchg
or
xor
or
sti
pusha
lods
lods
add
data16
cmp
je
loope
cmp
xor
aam
adc
daa
clc
pop
mov
sbbb
inc
jno
and
pop
stos
std
push
dec
out
add
ret
scas
ret
mov
jns
mov
mov
cld
mov
mov
jns
push
bound
ljmp
xchg
mov
das
cmpsb
aad
push
std
leave
test
mov
fsubrp
mov
jp
outsl
cwtl
cmpsb
xorb
add
lret
mov
int
push
scas
jne
loopne
jmp
inc
mov
pop
sbb
test
jg
add
mov
sar
xchg
es
fdivrl
sbb
call
xor
lods
mov
pusha
jbe
lahf
dec
int3
jmp
ds
sbb
fnstcw
repnz
xsha1
cmpsb
mov
mov
jg
adc
cmp
enter
arpl
add
dec
stc
add
insb
push
or
xchg
pop
scas
call
out
movsl
fwait
mov
bound
jecxz
mov
fnstcw
sub
outsl
dec
lahf
cmpb
jmp
sub
lock
inc
mov
test
push
xchg
int3
xchg
add
sub
mov
or
pusha
push
sbb
clc
fadds
sbbb
cmpsb
xor
pop
sub
mov
insl
cmp
rcl
jb
jo
repz
into
xor
add
xchg
sarl
test
dec
pop
sbb
subl
ror
mov
pop
and
sti
loop
andb
out
lret
push
and
xor
mov
testl
lds
std
idivb
clc
pop
cs
stc
movsb
push
iret
add
sub
arpl
setp
js
push
rorl
and
arpl
dec
lods
sahf
xchg
hlt
cmp
popf
lds
out
jmp
jp
pop
pop
dec
jmp
lret
dec
add
adc
fcompl
sub
cmpl
leave
xchg
dec
bound
shlb
inc
ljmp
mov
loopne
push
into
ja
outsb
mov
xchg
push
cmp
cmp
dec
cs
icebp
pop
out
gs
sbb
jne
fs
shr
movsb
mov
sub
into
cwtl
lods
xchg
mov
mov
in
sbb
jno
add
or
add
sbb
shl
sbb
push
cli
insb
push
stc
sub
ret
cld
bound
imul
or
inc
cmpsb
mov
sbb
loopne
test
clc
mov
pop
ficoml
xor
lret
es
pop
push
nop
adc
std
xchg
out
pop
mov
xchg
js
cwtl
sbb
leave
add
push
pop
incl
or
into
xchg
push
or
sahf
enter
cmpsb
jbe
xor
addb
sbb
mov
xchg
mov
sbb
dec
lods
js
sti
xchg
adc
icebp
test
popa
mov
mov
xchg
lcall
out
adc
mov
popf
sbb
push
repz
daa
cmc
push
fisttpl
loopne
mov
ja
push
jle
inc
mov
and
cmc
in
inc
dec
sub
and
aad
imull
ljmp
dec
inc
dec
and
dec
notl
pop
jl
push
mov
cltd
mov
int3
push
adc
out
cmp
push
push
inc
shrb
addr16
aam
mov
or
loop
lcall
sbb
lcall
and
out
push
sbb
out
test
mov
mov
jno
or
add
jge
pushf
dec
mov
mov
cmp
dec
idivb
push
lret
xchg
cmp
sbb
mov
fists
daa
xor
pop
jp
jb
jo
lods
add
adc
or
cmpsl
pop
lret
cmp
lods
mov
aaa
mov
mov
sub
in
das
aam
test
leave
cmp
mov
push
fwait
les
pop
neg
test
incl
lds
mov
cmp
rol
shrb
loop
jns
mov
js
add
in
jmp
add
movsl
and
lcall
arpl
imul
cmp
or
sahf
loope
shrb
out
mov
aam
and
mov
stc
pushf
mov
test
lock
sbb
in
xchg
outsl
in
fsts
push
int
pop
in
xor
ret
xchg
jmp
rcrl
mov
leave
test
mov
lods
or
inc
pop
je
xor
cwtl
sbb
sub
add
loopne
xlat
pop
adc
test
inc
inc
leave
cmc
rcr
inc
out
jecxz
loopne
imul
jp
pop
cmpsl
sub
fisubrs
xor
jl
add
sti
into
add
inc
xor
sub
shrl
mov
inc
sbb
mov
aaa
mov
and
mov
rcrl
pop
xchg
adc
fildll
pop
scas
pop
pop
fwait
mov
xor
fcoml
test
fists
out
mov
cld
loope
jmp
jbe
mov
das
mov
inc
jno
push
or
push
and
aaa
imul
out
and
mov
push
cs
fst
cmpsl
mov
mov
popf
jl
pop
bound
ss
int3
fcmovnu
xchg
andl
daa
mov
fsubs
inc
or
in
adc
adc
xchg
test
sbb
bswap
mov
fs
mov
sbb
sub
cmp
fdivl
int3
xchg
add
repz
test
les
xor
lret
fisttps
fucomi
push
aam
jle
cmp
mov
dec
loopne
push
cltd
adc
sbb
aaa
mov
sbb
adc
adc
clc
aas
or
jge
mov
ja
sbb
push
add
mov
inc
mov
jp
sti
loop
enter
push
and
pop
or
cmpsl
mov
loop
xchg
lret
mov
data16
mov
push
enter
dec
sbb
push
adc
dec
and
hlt
fmull
data16
out
push
lods
stc
imul
jmp
lods
xor
gs
mov
rorb
dec
inc
mov
xchg
dec
ja
or
cmp
jne
mov
dec
mov
push
cwtl
xor
lcall
arpl
mov
loop
or
xor
push
jae
rorb
mov
push
xchg
aas
inc
sbb
adc
mov
inc
icebp
dec
dec
out
test
int
xor
jl
mov
test
int
movsb
and
stos
lahf
pop
shr
xor
cmp
popa
jns
cmp
nop
push
xchg
jmp
jmp
dec
mov
out
adc
mov
mov
push
fcoms
repnz
xchg
insb
fwait
cmc
push
dec
pop
data16
mov
lret
xchg
or
push
lds
mov
xchg
loopne
lods
shlb
nop
pop
shll
fistps
add
fisttpll
mov
lea
je
push
or
cmc
dec
cmp
std
andb
lcall
fwait
cmp
dec
mov
jmp
les
push
mov
cmc
or
aam
lcall
jge
std
outsb
mov
es
jp
xor
xchg
pop
fwait
pop
mov
mov
push
ds
cmp
pop
jg
fld1
or
xchg
cmc
jl
mov
mov
insb
loope
psllq
inc
dec
pop
repz
pop
sti
fistpll
imul
out
push
add
sbbl
push
test
lock
inc
fisubrl
sbb
dec
inc
add
or
mov
xor
or
xchg
addr16
adc
lea
les
dec
adc
fnstsw
jmp
call
sbb
aaa
push
lds
sub
or
adc
or
shrb
mov
xchg
mov
nop
xchg
dec
dec
cmpsb
scas
loopne
in
cmp
mov
shrl
push
pop
ficoml
lcall
jno
xchg
add
mov
or
out
outsl
pop
imul
lcall
xchg
loope
insb
sbb
mov
cltd
pop
ss
loope
sbb
adc
rclb
jnp
sbb
in
aaa
in
out
sbb
jle
scas
loopne
and
jae
pop
jo
mov
xchg
inc
push
inc
rcl
jo
xor
or
push
clc
mov
sti
adc
movsl
mov
gs
inc
in
pop
push
jo
outsb
jmp
mov
cmp
pop
imul
sub
movsl
sbb
pop
adc
sti
movsb
mov
mov
pop
adc
push
push
pop
mov
sbb
mov
daa
lods
xchg
out
mov
pop
xor
aad
cmp
cwtl
sti
and
cmpsl
lret
jl
dec
mov
in
repnz
lret
pop
subb
inc
jnp
aad
pop
dec
dec
out
cmpsl
pop
pop
inc
add
std
sti
xchg
fisttpl
xadd
cmc
push
pop
mov
mov
loopne
push
jle
add
out
inc
iret
xor
xor
dec
enter
and
data16
jne
ss
sub
mov
scas
xchg
dec
xchg
cmc
xchg
bswap
cmpsb
adcl
cmpsl
pop
pop
add
cmp
fldl
xor
xorb
push
mov
push
cs
popl
lea
sbb
enter
jmp
mov
add
mov
loope
std
ja
fidivs
inc
shlb
fldt
push
lahf
sbb
rol
jge
mov
or
or
cmc
enter
pushl
jl
mov
and
adc
jns
jae
loop
push
fwait
xchg
mov
fldl
int
push
lcall
mov
nop
cld
insb
cld
lahf
cmpsl
sbbl
jle
loope
sub
movsb
or
add
icebp
cmp
fs
cmpsb
jae
aad
ja
aad
cmp
mov
or
pop
lea
mov
sbb
inc
ljmp
shrl
int
enter
inc
dec
inc
sbb
xchg
leave
or
push
test
mov
imul
mov
mov
sub
cltd
fdivl
ret
imul
jne
lea
sarl
lcall
icebp
xor
mov
pop
mov
cmp
imul
gs
mov
int3
push
icebp
jg
fadd
in
aad
mov
test
test
dec
pop
in
dec
inc
inc
add
mov
es
out
push
jnp
sbb
rcr
in
outsl
mov
shrb
clc
mov
sbb
mov
pop
pop
or
push
and
ds
mov
cmp
std
mov
sahf
fisttps
sahf
leave
xchg
jmp
sub
adc
adc
or
jns
mov
fs
dec
icebp
decb
push
rcll
sub
jb
pop
frstor
scas
fbstp
icebp
fwait
pop
hlt
call
pop
dec
aas
push
stos
and
pop
dec
adc
cmp
jle
movsl
adc
mov
or
bnd
push
jnp
sbb
icebp
adc
dec
dec
dec
fadds
xlat
push
imul
dec
mov
rcl
mov
cmpsb
cs
sbb
xchg
mov
sahf
cmp
insl
mov
push
pop
mov
sbb
cs
dec
or
rolb
xchg
int
mov
add
mov
inc
xor
loope
jae
add
test
cld
xchg
pushf
jecxz
sub
movsb
fs
mov
or
sub
push
mov
roll
dec
aam
jns
xchg
xor
jl
sbb
mov
mov
pop
push
xchg
jns
jb
jbe
arpl
mov
nop
lock
repnz
leave
sbb
mov
xchg
mov
jmp
test
idivl
push
dec
pop
cwtl
inc
faddl
mov
push
jo
fs
dec
ljmp
out
or
jae
stos
pcmpgtw
jne
adc
lcall
mov
int3
xor
stos
outsl
sbb
mov
sub
xchg
les
and
push
aam
out
fdivrs
jno
or
pop
or
in
scas
rorl
lahf
sbb
fildll
int3
adc
push
loope
icebp
data16
lods
mov
jmp
icebp
mov
mov
mov
mov
andl
dec
jl
and
cmp
addl
sbb
idivl
mov
mov
rcrb
or
jns
test
jle
lock
ja
imul
clc
adc
clc
rcrb
fldcw
mov
pop
in
push
push
push
pop
sub
shlb
fidivl
loop
mov
mov
jo
divl
or
add
in
mov
ret
add
popa
test
outsl
nop
sub
enter
jnp
test
mov
in
sub
pusha
stos
cs
enter
cmp
jbe
shrl
xchg
jno
or
jno
out
fs
push
sahf
jo
and
xor
lret
mov
and
pop
sti
cmp
ja
dec
arpl
ds
xchg
repnz
sbb
shr
and
jae
jnp
xchg
push
xchg
mov
test
insl
inc
loopne
xchg
shlb
xor
pushf
mov
cmp
xchg
outsl
mov
daa
ja
out
jmp
fisubs
out
mov
les
inc
jg
jg
in
leave
bound
cs
cmpsb
add
pop
push
sar
push
jg
mov
mov
add
mov
ds
lock
shl
insl
in
stos
pusha
mov
ret
loopne
push
or
mov
outsl
sub
pop
loope
mov
push
jmp
and
iret
movsl
cltd
test
les
pop
sbb
mov
notl
xchg
cltd
aaa
cmp
jo
test
mov
mov
pushf
roll
movsl
in
scas
sub
cmp
hlt
mov
test
or
xor
jle
xor
sub
das
pop
ljmp
bound
nop
dec
movsl
rolb
push
pop
jmp
jbe
jle
negl
enter
mov
lret
loope
push
stc
inc
fsubl
ret
cmp
pop
repz
and
lcall
fmul
rcrl
std
or
ljmp
stos
jmp
ds
out
and
ds
lods
jp
arpl
stos
add
mov
cs
mov
inc
mov
imulb
mov
in
iret
cltd
sbb
daa
inc
cmc
adc
and
jo
scas
xor
adc
outsl
jno
sub
xchg
push
stc
mov
xchg
in
out
dec
mov
xor
mov
mov
out
and
pop
and
cmpsb
hlt
mov
into
cmp
pop
stos
add
pop
inc
xlat
cmp
xor
int3
sub
mov
outsb
xor
pop
insl
lods
mov
push
mov
jp
cld
xchg
add
and
les
inc
jno
dec
gs
fdivl
les
dec
jne
mov
popa
cmp
test
pop
inc
mov
lret
scas
mov
mov
in
mov
add
cmp
sti
pop
ljmp
ljmp
xor
push
ret
xchg
fst
mov
push
hlt
dec
popa
es
add
adc
test
jl
add
ret
ret
fdivl
into
mov
pop
add
shl
movsl
jns
es
or
movb
in
push
and
loopne
nop
pop
xor
pop
insb
imul
jnp
xor
icebp
cmpsb
sub
ja
mov
push
or
fstps
jb
cmp
cwtl
cmp
push
aaa
mov
and
mov
mov
shrd
imul
lock
xor
cmp
je
cmp
mov
jecxz
aam
gs
sub
fs
scas
je
sub
add
inc
inc
or
lods
pushw
arpl
repnz
cltd
pop
pop
mov
imul
xor
stos
lods
test
icebp
test
xchg
in
sub
jl
daa
jecxz
ret
inc
pop
jg
push
mov
sbb
shl
cs
mov
das
sub
adc
xor
push
sbb
js
sbb
movsl
pusha
pop
xlat
fmulp
or
out
add
push
insb
add
loop
pop
rcll
test
jmp
mov
fisubl
int
test
pop
stc
lret
shrb
hlt
fstl
inc
dec
leave
xchg
shl
ja
hlt
je
sub
test
xor
ja
jbe
sbb
frstpm(287
xchg
sub
pop
loop
cmp
test
push
scas
cmp
test
add
mov
and
movsl
push
jecxz
jle
cmpsb
dec
and
xchg
adc
fildll
loopne
push
ffreep
adc
jns
pop
loop
lret
loop
jnp
ret
fisubrs
sahf
das
sub
mov
cmp
add
js
or
mov
mov
pop
fnstsw
iret
jae
sub
test
aad
rclb
je
fsub
pop
stos
cmp
adc
sbb
arpl
stos
cli
sti
push
movsl
push
mov
dec
cs
adcl
push
addr16
fxch
xor
ret
das
cltd
popa
pop
push
sub
rclb
cmc
mov
test
jae
mov
mov
add
add
bswap
xchg
enter
pop
mov
icebp
jp
scas
or
popa
lcall
sarl
popf
sar
push
mov
push
xor
push
ljmp
inc
xor
aam
ret
mov
out
xor
dec
jb
shr
sub
arpl
std
into
adc
in
bnd
call
test
mov
or
mov
xor
pop
out
or
sbb
mov
or
push
pop
or
mov
cmp
les
in
or
jbe
les
cmc
add
out
xchg
stos
inc
xor
icebp
fidivs
pop
shr
inc
push
push
cmp
push
adc
js
inc
dec
jecxz
andb
out
jmp
pop
mov
andl
call
enter
mov
or
jb
es
cmp
ja
test
push
xor
xor
sub
icebp
mov
sub
xchg
rcr
add
cmpsb
xchg
mov
lods
mov
mov
pop
add
sbb
mov
in
std
test
jb
and
push
xchg
mov
jecxz
jle
mov
sub
cmc
mov
leave
mov
add
pop
das
jnp
push
test
jecxz
xor
jbe
test
mov
bound
mov
fwait
insl
jmp
cmpsb
jne
add
pop
or
cmc
outsb
push
fsubs
pop
mov
mov
sbb
ja
cmp
aam
dec
repz
xchg
lds
mov
push
sub
push
push
adc
xor
mov
sbb
or
sar
adc
clc
xlat
mov
into
sub
xor
dec
xor
jecxz
leave
push
popa
repz
xchg
cs
cli
movsl
ret
inc
lock
addr16
adc
sub
sbb
call
lcall
jb
pop
enter
in
fs
mov
hlt
xor
in
stos
out
das
push
mov
sarb
lods
js
or
out
aam
imul
xchg
push
mov
sbb
and
sar
cmp
mov
bndstx
or
and
je
adc
movsb
cmp
xor
call
and
cmp
xchg
jg
fs
cmpsl
cmp
fimuls
xor
insl
clc
shlb
lock
add
ljmp
out
jo
movsb
lods
pop
push
clc
pop
inc
dec
shrb
pusha
lock
cmpsb
out
or
out
test
xor
sub
mov
adc
mov
jmp
fs
enter
rcrb
and
rcll
dec
ror
xchg
cmpsb
das
or
xchg
add
mov
xchg
addr16
es
fxch
sbb
aaa
sub
adc
outsb
and
loopne
jb
add
mov
and
rcll
sbb
std
add
popa
mov
pop
xor
xorb
and
xor
mov
aas
push
std
push
push
outsb
sbb
or
cwtl
xchg
cwtl
cli
sub
loope
aad
fcomps
mov
cmc
mov
test
or
jns
xchg
divl
push
xorl
mov
repz
int3
dec
jge
pop
push
xor
add
fwait
push
jge
sbb
sbb
xchg
add
cli
inc
xor
push
push
gs
test
call
stc
pusha
out
mov
pop
ds
dec
sub
xchg
pusha
iret
or
addr16
push
xchg
idivl
sbb
es
sahf
pop
enter
mov
pop
lret
cmp
leave
pusha
sbb
jp
jle
mov
jle
xchg
lcall
shl
inc
cwtl
lods
enter
cmp
pop
add
push
or
adc
lock
push
pop
dec
data16
or
pop
mov
pop
incb
or
inc
mov
xchg
aaa
sysenter
push
jmp
test
xchg
arpl
push
mov
xchg
mov
aaa
cmpsl
mov
insl
adc
subl
jne
mov
in
or
mov
stos
or
fisubrl
or
adc
mov
mov
fcmove
mov
push
add
sub
mov
inc
and
lods
fcoms
xchg
loopne
jg
xlat
jbe
xor
xchg
add
testb
fs
pop
aas
xor
shll
mov
dec
mov
jbe
mov
cmp
je
jge
xor
icebp
repz
movsl
or
adcb
fisubrs
pop
pusha
adcl
xchg
shrb
lcall
mov
jge
pop
shll
nop
stc
repz
pop
sti
mov
push
jge
out
cwtl
lcall
das
mov
jmp
and
mov
into
mov
leave
out
outsl
xor
int
jge
dec
dec
loope
loopne
fiaddl
icebp
inc
je
lcall
imul
mov
ror
mov
dec
xchg
cmp
and
sub
pop
sbb
in
scas
ljmp
pop
xchg
sbb
shl
pop
cmpsl
in
mov
dec
stos
jnp
jp
fldenv
sub
shl
test
pop
out
popa
out
mov
or
push
pop
sbb
pop
insl
adc
int
shl
cmc
sub
scas
out
adc
dec
leave
xchg
or
das
dec
pop
pop
inc
cmp
movsb
sub
das
pop
xor
lods
and
jle
andl
inc
push
mov
dec
scas
sbb
gs
inc
mov
inc
cmp
push
pop
testb
popa
mov
mov
or
and
cli
mov
add
rcl
loope
test
xlat
dec
pop
jl
dec
xchg
and
push
outsl
bound
mov
out
cmc
es
sub
mov
push
dec
stc
sub
rcll
vsubps
and
imul
mov
ret
push
add
sub
add
sbb
adc
sbb
mov
pop
cmp
mov
push
movsl
mov
decb
cmp
push
mov
sbb
stos
iret
fs
xchg
fsubrl
pusha
sub
out
into
mov
push
xor
lcall
jg
pop
pop
ret
inc
lcall
jns
push
push
cwtl
inc
sub
insb
push
ss
sbb
out
fiaddl
and
mov
jge
mov
std
fldl
add
mov
cld
inc
std
dec
adc
pop
pop
adc
out
push
fnstenv
jmp
movsb
repnz
mov
cli
cmp
mul
fbstp
adc
in
mov
jae
mov
jge
ds
repz
push
ret
push
dec
pop
push
lods
stos
bound
cmp
insb
mov
cmp
test
or
fwait
aam
add
scas
add
lret
jle
mov
sbb
out
shll
sbb
xor
add
xor
push
mov
jae
jb
push
lods
pop
pop
cmpsb
in
repz
xchg
mov
enter
adc
les
jb
push
xchg
ret
shrb
adc
fisttpll
sahf
mov
lods
sbb
cmpsl
push
jns
mov
repz
adc
movsl
lods
dec
lret
test
sbb
rolb
roll
cs
xchg
push
push
cs
sbb
xor
ss
outsl
ficompl
cmp
idiv
xchg
jmp
iret
xchg
inc
xchg
inc
lea
sub
and
pop
mov
cli
push
adc
mov
stos
or
stc
xor
inc
movsl
xchg
mulb
aaa
jmp
push
cmp
sub
mov
pop
cmp
and
mov
inc
mov
mov
roll
dec
add
ss
loope
es
mov
lods
sub
icebp
lret
rolb
cwtl
cmc
mov
and
fabs
pop
ret
mov
rolb
test
inc
mov
test
mov
push
pusha
shll
xchg
rol
lret
pop
dec
imul
fs
fdiv
jnp
lock
ret
pop
cltd
in
jl
imul
notl
jae
cwtl
out
sub
sbb
sub
mov
pushf
insl
daa
std
fists
dec
test
or
jae
sub
leave
inc
add
stc
xchg
and
scas
aam
mov
mov
dec
js
in
mov
jg
xchg
js
sbb
sub
subl
pop
in
xorl
mov
cmp
pop
mov
adc
movsl
inc
mov
out
lea
push
inc
pop
push
mov
pop
test
clc
sahf
add
mov
xchg
jl
push
ret
sbb
cwtl
mov
sub
add
push
add
push
dec
lret
inc
mov
cmp
add
mov
or
dec
sub
sahf
mov
imul
jbe
and
xchg
xor
inc
scas
inc
lret
cli
pcmpeqd
mov
xchg
gs
aas
in
xchg
xchg
fbld
jbe
out
xchg
es
test
rcr
cmp
dec
jnp
xchg
push
push
jmp
and
aas
in
jmp
xchg
push
les
fxch
push
loop
sbb
movsb
jmp
sub
dec
daa
inc
inc
or
ja
cmp
cmc
int3
dec
addr16
pop
pop
int
js
fcmovbe
orl
xchg
dec
mov
push
mov
adc
popa
lret
ret
out
fucompp
in
xchg
repnz
jo
jae
inc
sbb
lods
mov
push
add
sbb
ret
aam
push
stc
loope
lods
mov
icebp
sub
sbb
arpl
fistl
sbb
insl
aaa
nop
pop
mov
in
sub
push
push
sti
mov
nop
mulb
sub
rolb
mov
sbb
add
mov
mov
cli
enter
pop
fildll
pop
stc
popf
mov
in
jge
lods
cltd
add
dec
xchg
es
lcall
dec
int
and
test
mull
fwait
ja
fldl
subb
or
xor
outsb
gs
or
mov
in
es
xchg
or
mov
scas
pushf
movsl
push
push
mov
pop
mov
lods
cmpsl
sub
arpl
es
aaa
jle
push
dec
xor
inc
decl
dec
sub
out
lods
push
stos
shlb
ja
lock
pop
pushf
mov
iret
movsl
sub
ja
das
mov
shll
and
mov
pop
cmpsl
sub
mov
adc
push
adc
repz
add
ja
inc
inc
out
dec
cmpsl
adc
xor
or
push
sahf
outsb
xor
stos
scas
cmp
xlat
or
loop
icebp
inc
icebp
fadds
and
aad
in
test
movsb
idivb
xor
adc
pop
xchg
es
lret
jae
arpl
and
icebp
scas
enter
mov
inc
insl
jge
setl
and
ret
xchg
xchg
add
push
mov
cmc
movsl
pop
push
roll
hlt
out
frstor
xchg
je
push
js
lods
movsl
add
insb
jne
pop
cmpsb
xor
cmp
push
jecxz
sti
jns
loopne
jg
dec
fmul
int
and
mov
jno
pop
push
add
xchg
int
divl
stos
jns
pop
shrl
rclb
ds
daa
or
and
mov
xchg
mov
int
inc
xchg
pop
lods
inc
es
xor
iret
pop
data16
jg
inc
jmp
or
xchg
cmpsb
lods
es
mov
mov
add
and
jb
or
and
movb
imul
and
cltd
inc
ret
aad
int
cli
mov
sub
xlat
repz
pop
mov
mov
lahf
mov
add
xchg
adc
sub
in
cmp
jmp
sbb
mov
mov
js
nop
test
cli
xchg
mov
xor
sub
dec
jnp
jae
and
cmpsl
std
lret
mov
lods
mov
add
dec
jg
adc
scas
hlt
aam
xchg
push
mov
xchg
fidivrs
and
clc
adc
test
mov
jnp
arpl
jl
dec
xchg
outsb
popa
dec
jmp
sbb
pop
pop
sti
jecxz
xlat
xchg
je
ret
xor
xchg
out
adc
imull
jmp
jl
push
mov
push
popf
jg
push
int
in
sbb
or
test
ficoml
in
or
fimull
loopne
js
xor
lea
data16
aas
loope
cmc
scas
and
or
jae
mov
aad
data16
int3
adc
inc
jne
mov
fwait
jne
rorl
cmpsb
int
movsl
shr
insl
cmc
cltd
sbb
jno
jne
int3
adc
sub
scas
js
or
mov
mov
push
mov
pop
dec
mov
out
lods
test
sub
ds
sbb
inc
cmp
sahf
adc
xchg
cmc
add
fs
add
leave
movsb
jae
mov
jne
mov
mov
cmp
out
xchg
popf
cmp
or
fldenv
xorl
stos
pop
cli
pop
add
mov
jle
push
rep
sub
mull
test
int3
dec
push
adc
mov
sarl
jne
xor
sbb
cmp
insl
emms
push
mov
frstor
and
push
not
aam
mov
xchg
cmp
aam
dec
or
repz
dec
clc
mov
sahf
mov
int
popf
cltd
je
xor
cli
int
int
jle
or
je
inc
loope
jne
iret
lret
mov
pushf
sub
cmpsb
and
mov
movsb
stc
mov
xchg
fidivrl
stos
sbb
js
test
lods
mov
cltd
loope
sub
cwtl
pushf
pop
pusha
imul
fsubrs
push
xor
xchg
dec
pop
push
clc
adc
orl
sbb
ss
pop
call
shll
lahf
adc
push
dec
sbb
std
sbb
inc
add
idiv
inc
xlat
mov
mov
mov
stos
imul
cmp
push
incl
sbbl
mov
adc
sbb
outsb
mov
pushl
sbb
xlat
bt
loopne
das
mov
pop
mov
jg
jl
mov
cmp
push
adc
out
inc
loopne
mov
insb
adc
push
mov
lods
jnp
jne
dec
mov
pop
mull
or
aas
dec
adc
ja
jmp
sub
jnp
out
jns
movsb
jno
push
cld
ja
rolb
add
nop
jns
add
imul
in
dec
scas
lahf
mov
add
out
jb
loope
mov
cli
je
mov
sbb
cwtl
jbe
push
push
add
push
and
dec
mov
in
iret
ljmp
xor
fwait
jp
divl
loopne
roll
das
insb
push
cwtl
stc
fidivs
out
xchg
mov
and
inc
mov
fidivs
push
les
ret
jne
cmp
fwait
push
add
cmpsb
mov
ljmp
add
push
sub
ret
arpl
scas
sub
jecxz
mov
push
fsub
push
adc
idiv
bound
add
das
out
xor
cmc
sbb
enter
add
les
push
out
jecxz
sahf
add
mov
inc
fsubrl
jmp
jne
ret
push
cld
jno
leave
out
daa
or
lock
cmp
out
out
dec
mov
push
push
std
cmpsb
movsl
dec
cwtl
das
pop
pop
sbbb
dec
jnp
add
inc
rep
outsl
mov
mov
push
xor
add
push
mov
mov
gs
xchg
icebp
aaa
int
stos
sub
push
popf
jo
iret
daa
jle
cmp
mov
ljmp
nop
xor
xchg
std
addl
sbb
test
cmpsb
mov
pop
mov
cmp
orl
xorl
and
and
cmp
lock
and
adc
or
push
cmp
int3
repz
fs
mov
and
sbb
push
testl
repz
fists
inc
fucomip
fwait
sub
sbb
ss
push
push
clc
outsl
cmc
jnp
xchg
cmpsl
leave
adc
lret
inc
pop
xchg
divl
lods
dec
jecxz
jne
mov
pop
in
dec
fists
mov
push
lret
rcr
adc
inc
addr16
cmp
jae
jae
rcr
add
sbb
data16
mov
fcompl
ret
test
push
or
mov
push
ds
lret
mov
into
pop
js
push
add
outsb
cmp
aaa
adc
mov
pop
jge
xchg
clc
xor
stos
arpl
adc
dec
mov
loopne
xor
test
ljmp
shlb
sbb
cld
pop
loopnew
jne
scas
js
stos
daa
add
inc
xchg
popa
icebp
pop
and
xchg
xchg
dec
jo
jg
outsl
mov
pop
lock
pop
gs
inc
cmp
mov
mov
imul
sub
and
test
inc
jns
popf
outsb
loope
hlt
addr16
add
mov
pusha
fnstcw
xchg
xchg
aas
outsl
mov
fwait
pop
je
daa
int3
jle
sub
mov
loop
fsts
addr16
and
push
jae
adc
sub
jmp
jno
shl
hlt
add
cmc
jae,pt
shlb
out
pop
jae
inc
inc
jae
out
int3
or
mov
inc
dec
sub
push
cmp
inc
loope
cli
int
aad
dec
sti
inc
mov
add
push
pop
cmc
push
mov
push
test
or
and
mov
insb
xchg
stos
push
or
cmc
mov
mov
push
xchg
pop
inc
lcall
inc
sub
xor
ret
cmp
dec
xchg
test
in
rorb
or
inc
cmp
mov
xlat
pop
sarb
xor
dec
pop
lds
scas
add
cmpsb
iret
sti
loop
add
push
pushf
insb
fsubrl
mov
and
psubd
stos
andb
and
outsl
ret
dec
insl
jae
arpl
rorb
stos
lret
jg
test
sbb
and
pop
mov
pushf
dec
or
push
mov
cmp
mov
mov
or
mov
cld
mov
int
push
adc
push
cmp
ret
imul
aam
ffreep
sub
inc
mov
push
jne
outsb
int3
pop
or
inc
push
push
jne
lret
clc
sti
lea
push
mov
dec
fwait
or
rorb
mov
push
push
dec
cmc
fs
loop
sub
out
ret
loop
push
adc
clc
mov
jl
in
sub
mov
mov
and
mov
loopne
xchg
xchg
cmp
in
scas
lds
lret
dec
xchg
push
ds
push
aas
xor
push
mov
inc
ds
cwtl
popa
adc
iret
push
xor
cld
mov
call
mov
mov
xchg
push
test
lea
pop
pop
jae
or
pop
mov
cld
or
dec
dec
pushf
sbb
sbb
std
or
das
daa
int
lret
or
cmpsl
lret
fistpl
jne
adc
mov
repnz
inc
test
test
inc
push
push
decl
and
das
mov
push
dec
sbb
loop
out
sahf
psubb
fnstenv
adc
and
mov
adc
push
xchg
jb
in
xchg
add
int3
mov
mov
add
stos
loope
fsubs
jb
in
fwait
mov
pop
fisubs
inc
sbb
push
mov
mov
xchg
inc
stos
popa
mov
xchg
test
xor
push
into
or
out
lods
cmp
add
and
xlat
cmp
mov
aam
sub
outsb
cmc
mov
xchg
test
rorl
jno
orb
mov
sub
and
inc
xor
lods
fdivrs
jge
aam
mov
cmp
ss
jb
adc
cmpsb
xor
sbbl
int3
fldenv
jae
dec
inc
test
sbb
jb
inc
movsl
js
or
sbb
insb
pop
inc
xchg
and
jge
mov
and
lock
or
jae
imul
xor
mov
inc
xchg
xlat
sub
loop
inc
in
sbb
jb
mov
jle
jl
xchg
xchg
xchg
or
inc
jge
xor
loope
jb
xchg
popf
xor
mov
mov
sbb
mov
movsb
mov
sbb
add
mov
iret
cwtl
mov
adc
aad
cmp
jmp
jo
jmp
push
pop
adc
rcl
rol
sahf
jae
push
in
sbb
call
mov
pop
bound
ret
or
mov
jle
shr
js
out
daa
jb
mov
lret
jle
or
dec
push
cmp
jae
call
fnstsw
or
mov
and
int3
push
sub
stos
das
gs
jge
dec
mov
fucomi
sub
inc
mov
cs
or
ret
push
inc
inc
popa
ja
sbb
inc
and
or
xchg
xchg
cmpsb
push
mov
mov
xchg
insb
pop
cmp
inc
cmp
mov
sbb
out
add
jbe
mov
xchg
mov
ja
push
jo
ret
jge
ljmp
or
lcall
xor
pop
jle
pop
popa
pop
push
fwait
je
lods
or
lret
loopne
pushf
pop
sbb
or
dec
out
out
js,pn
push
push
add
pop
and
mov
jmp
insl
and
loopne
pop
dec
loope
add
sub
mov
shlb
cli
ret
push
xor
inc
jg
pop
sti
mov
and
insl
adc
sarb
test
jmp
stos
jb
rclb
or
aam
xor
add
sahf
mov
std
dec
and
jp
out
cmp
sbb
push
repnz
mov
hlt
adc
xor
pop
xor
mov
pop
in
loope
sti
lock
push
push
adc
jb
xchg
es
popa
dec
push
jmp
push
or
inc
rorb
push
outsl
cmp
xor
and
cld
aad
in
mov
push
push
cmc
div
pusha
pop
jecxz
xchg
int3
sub
fwait
push
lahf
xchg
add
inc
push
ss
xor
and
test
ficoml
push
mov
xor
enter
nop
add
fstl
idivb
into
std
out
ret
jo
frstor
mov
fidivrl
inc
dec
pop
mov
mov
push
sub
inc
neg
negb
mov
jo
sub
into
into
or
pop
test
adcb
das
and
mov
lahf
adc
cmp
add
or
mov
loopne
nop
mov
in
inc
dec
add
xchg
std
mov
xchg
lods
adc
addl
cwtl
mov
dec
loopne
out
loopne
in
gs
jge
std
add
cmp
imul
inc
inc
sahf
mov
fbld
xchg
dec
lds
mov
pop
pop
sub
scas
cmp
imul
cmc
inc
lahf
int3
pusha
mov
push
imul
fbld
fidivl
cwtl
xor
lcall
adc
arpl
fs
std
mov
xchg
outsl
fwait
repnz
jmp
call
dec
adc
and
sarb
jle
ret
roll
clc
out
arpl
xor
aam
out
xor
push
daa
dec
mov
jge
dec
dec
cmp
ret
scas
sub
push
or
repz
mov
push
pop
mov
out
add
xchg
gs
mov
xchg
jle
push
dec
mov
imul
dec
dec
gs
xlat
sub
add
jge
and
sbb
xchg
hlt
fisubrs
popf
xchg
mov
inc
cmp
xor
data16
fwait
push
mov
sti
lock
or
lcall
push
xchg
xchg
fidivrl
jnp
xchg
jge
or
xchg
popa
jo
addb
iret
cmp
popa
inc
mov
aam
outsl
ja
xorb
sub
sbb
jp
push
mov
inc
add
cmp
fnstenv
or
pop
mov
push
xchg
in
inc
dec
scas
sub
xor
adc
sub
sbb
cmp
mov
out
xor
dec
iret
in
push
push
mov
cwtl
clc
aad
popa
jmp
repnz
cmp
mov
mov
adc
mov
mov
je
dec
xchg
jno
aaa
outsl
icebp
arpl
xor
sbb
lahf
sbb
mov
add
adc
outsl
adc
mov
shl
xor
pop
sub
es
fists
add
daa
and
repz
pushf
ja
repnz
adc
and
inc
jl
cmpb
mov
pop
movsb
xchg
cmpl
xchg
jo
out
dec
icebp
rclb
mov
add
out
shll
insb
cltd
and
sahf
insl
add
push
xor
js
repnz
xchg
add
lods
adc
clc
loop
aad
cmp
pop
xlat
xchg
jle
sar
cmpsb
xchg
outsl
movsb
ljmp
xchg
cmp
es
insl
push
and
push
adc
cmpsl
sub
adc
call
xlat
sub
roll
lds
movsl
sub
stc
fsub
inc
aad
cld
icebp
sub
fs
sbb
xchg
jo
pop
lods
pop
push
xchg
dec
fstpl
sub
loope
mov
sti
jns
int3
add
gs
iret
mov
adc
mul
mov
jns
call
inc
pop
addr16
cmpsl
icebp
mov
fs
stos
loopne
mov
sub
add
push
dec
mov
loop,pt
cmp
addb
repnz
movsb
add
add
scas
stos
es
mov
leave
or
rclb
lds
lods
and
add
out
lea
ret
pop
ds
sarl
daa
xor
xchg
jno
je
or
push
push
xchg
xor
or
clc
mov
dec
sti
in
inc
stos
stos
lcall
insb
cmp
daa
jge
es
sbbl
pop
mov
sbb
lods
outsb
pop
ja
mov
sbb
inc
fidivrl
fwait
jmp
mov
mov
dec
sbb
mov
sbbb
lcall
repnz
js
cld
and
faddp
test
mov
xchg
sahf
pop
mulps
push
std
jecxz
cmp
andl
inc
jno
and
mov
add
sti
lahf
and
enter
jne
repnz
pop
jle
xor
dec
pop
xchg
gs
sub
mov
sub
jmp
mov
cmp
popf
fisttps
shlb
lods
adc
mov
sti
sub
inc
stc
imull
outsl
ss
pop
push
fsubs
push
mov
sub
sbb
push
outsl
fcomps
das
jnp
loop
adc
adc
jbe
dec
shlb
mov
xor
inc
push
inc
pop
pop
cmp
out
into
idiv
push
mov
daa
imul
into
movsb
pop
mov
mov
cli
pop
scas
xchg
pop
pop
lret
testb
mov
sarb
pop
mov
sub
mov
adc
sbb
mov
stc
jge
and
fidivl
or
int3
lods
iret
cmpsb
test
into
push
push
sbb
push
and
mov
mov
push
adc
cli
xchg
xorb
mov
test
lret
sub
xchg
mov
fstl
mov
hlt
loopne
mov
mov
pcmpeqw
cmp
sub
mov
add
mov
subl
pop
mov
xchg
jg
sahf
mov
outsl
rolb
cmpsb
adc
sub
xchg
sub
xlat
dec
push
dec
mov
inc
mov
je
test
pop
test
xchg
bound
out
xchg
xchg
dec
mov
hlt
sub
xchg
inc
mov
fists
pop
lahf
lahf
or
sub
push
test
xor
mov
cmp
push
clc
fcoml
sbb
mov
xor
imull
incl
lret
push
cwtl
jne
xchg
pop
insl
mov
cld
mov
pop
or
xlat
imull
cmp
mov
stos
scas
xchg
es
aad
jnp
sarl
and
aas
push
ret
or
pop
xchg
xor
aad
jp
das
ret
xor
inc
shrl
insb
xchg
hlt
jle
in
push
mov
mov
dec
out
insl
in
xchg
rclb
out
sbb
and
mov
sub
sub
sarl
pop
jbe
in
jno
add
xor
sbb
xchg
call
add
sub
test
out
xchg
insl
je
out
test
lods
mov
jl
xchg
jmp
in
aam
jp
adc
jno
pop
into
ds
fsts
mov
mov
or
mov
add
cmpsl
pushf
cld
xor
arpl
cmp
cli
ja
scas
mov
out
pop
mov
nop
icebp
stos
xchg
dec
cmp
cmpsl
sbb
xor
mov
cmpsl
mov
jb
or
repz
fsubrs
sbb
cmp
jmp
mov
int
jb
aas
mov
test
mov
insb
push
inc
loopne
imul
pusha
push
add
or
leave
pusha
jb
in
pop
dec
or
xor
and
test
inc
sub
push
pop
test
stos
xchg
fidivrl
bound
inc
sbb
out
lret
mov
cs
mov
push
rclb
pop
mov
pushl
xor
enter
adc
aaa
outsb
and
ret
rcrb
sbb
cs
xor
xor
mov
enter
xor
ljmp
ret
mov
shrb
dec
or
pop
mov
out
loope
out
or
sbb
mov
in
fsts
out
push
pop
imul
pop
add
xlat
adc
loop
xchg
dec
fdivr
push
sbb
inc
xchg
jmp
fwait
js
insb
cmc
into
xlat
xchg
das
lret
mov
gs
adc
mov
lahf
mov
shlb
xchg
out
lods
jno
hlt
xor
inc
or
mov
aam
pusha
or
daa
adc
jnp
test
clc
movsl
gs
inc
ljmp
sahf
ret
loopne
out
cwtl
dec
add
iret
and
inc
cmp
mov
pop
mov
add
rorb
cmp
cmp
xchg
scas
mov
xlat
sub
lahf
int3
jle
into
stos
or
xchg
push
in
pop
repz
push
in
mov
mov
into
in
rcl
mov
mov
inc
shrl
sub
outsb
push
insb
jle
pop
lcall
sbb
mov
jne
add
mov
shr
push
pop
mulb
cmp
jmp
push
push
nop
sbb
inc
dec
int
xchg
dec
sarl
js
sti
cmp
cmp
mov
fwait
adc
adc
scas
inc
sarb
rorb
jne
daa
rcrb
push
enter
jne
jnp
mulb
jno
imul
mov
ror
js
fnstenv
and
sti
add
or
lret
pop
insb
mov
xchg
rolb
pop
pop
rcl
les
cmp
sub
negb
ret
jp
jae
push
mov
pop
jle
int
or
xchg
jle
cmp
jle
in
imul
xchg
sub
rolb
movsb
adc
aaa
loopne
jnp
gs
movsl
stos
lods
mov
jo
sbb
scas
iret
sbb
in
adc
daa
sbb
or
adc
movsl
int
xlat
stos
movsl
push
fcompl
dec
inc
jmp
ds
mov
aad
and
mov
orb
daa
xchg
dec
dec
cmpsl
test
add
dec
cmc
xchg
int3
idiv
fstpl
mov
xchg
lahf
push
push
adc
inc
scas
faddl
fisubl
rclb
push
inc
imulb
cmp
test
lea
pushf
shrb
outsb
cmp
lea
or
scas
das
aaa
and
pop
inc
out
aad
data16
das
xchg
xchg
mov
popf
mov
xor
shll
xchg
inc
adc
xor
pop
xor
popa
mov
cli
mov
pop
mov
mov
lock
outsb
xchg
push
add
pusha
jmp
repz
xchg
rolb
std
xchg
rorl
inc
iret
adc
xchg
in
and
push
inc
lahf
adc
je
or
xchg
pusha
out
cmp
pop
cmpsb
loope
mov
jmp
push
mov
xor
pop
pop
test
pop
fistpl
pop
les
pop
mov
add
outsl
dec
cltd
inc
out
fiaddl
out
lods
push
cs
cs
push
and
dec
or
mov
test
lcall
lahf
xchg
int
xchg
fcoms
scas
adc
sbb
xor
push
cmp
test
jne
jbe
sub
xchg
popf
inc
pushf
cmpsl
xchg
add
mov
es
ficompl
cmpsb
arpl
cmpl
je
jge
jno
xlat
clc
in
out
add
mov
ss
and
ret
popf
pop
test
hlt
jge
lret
aam
repnz
cmp
mov
in
scas
add
clc
fcom
mov
movsl
aam
call
test
mov
cltd
xchg
lea
cmp
push
xlat
xor
push
mov
cvtpi2ps
xchg
fsubrl
and
mov
arpl
dec
divl
out
cltd
adc
cltd
inc
cli
fisubrl
pusha
mov
fsubl
testb
sub
pop
pop
js
push
add
imul
fs
clc
sbb
imul
daa
bound
out
pop
mov
xchg
in
scas
mov
and
cmp
sub
orb
mov
mov
pop
or
adc
jg
mov
int3
mov
outsb
hlt
push
sahf
inc
inc
xchg
in
decl
imul
adc
sub
and
addb
outsl
lea
rcrb
je
and
sub
clc
push
push
lds
out
push
xchg
cmp
roll
int3
ds
arpl
jno
xlat
or
mov
jge
mov
and
jl
mov
mov
icebp
dec
pop
aaa
std
jl
out
fdivl
fs
mov
roll
cmp
push
scas
sbb
sbb
sahf
cmp
pop
inc
iret
mov
jnp
mov
ljmp
in
dec
insb
es
mov
fs
push
pop
adc
xchg
gs
mov
ret
push
jbe
out
jl
test
pop
or
jecxz
std
adc
cmpsb
iret
and
insl
sbb
or
ljmp
loopne
enter
adcb
inc
sti
pop
out
daa
xchg
mov
fadds
lea
pusha
call
mov
dec
es
jl
pop
fidivl
and
xchg
cld
jns
out
mov
out
jp
and
jl
das
cs
mov
dec
sbb
lea
dec
shrb
sbb
jns
adc
and
sti
xlat
icebp
push
repz
or
jnp
mov
jge
or
fmull
mov
rcrl
clc
xchg
ficompl
inc
add
clc
ret
in
dec
xlat
jmp
cld
mov
dec
mov
push
sub
ficoms
rolb
jne
rol
xor
into
rcll
or
test
clc
mov
jbe
test
stos
jecxz
sub
mov
mov
imul
mov
jnp
pop
pop
jnp
jno
push
push
dec
push
dec
adc
ljmp
ret
clc
scas
jg
les
popa
aaa
xchg
jnp
xchg
sub
sub
pop
bound
jne
dec
testb
cmpb
incl
mov
push
enter
imul
sub
outsb
int3
aam
pop
shlb
jno
in
inc
adc
les
xor
sti
xlat
clc
sbb
mov
push
in
lret
sti
push
lcall
xor
imulb
or
clc
fstl
fidivrs
dec
pop
sub
pop
dec
xor
xchg
mov
pop
sbb
jbe
imul
ds
xlat
shll
hlt
out
mov
sbb
gs
pop
mov
mov
addl
rcll
xchg
testl
sub
add
je
sub
push
cmpsl
lret
mov
in
aam
mov
xchg
shll
nop
ds
addr16
sbb
inc
out
or
lret
mov
mov
rorb
xchg
lcall
aam
inc
and
cltd
int3
inc
jo
rorb
jne
push
push
lret
ficoms
imul
sbb
js
das
xor
mov
sbb
jle
adc
and
movsb
jmp
shlb
fyl2xp1
test
insl
insb
shlb
push
pop
sub
push
sub
jge
mov
push
ja
inc
xlat
incl
dec
sub
jno
add
and
mov
add
adc
aad
pop
push
add
test
mov
cmp
je
cmc
jg
mov
movl
rcr
hlt
adc
jmp
leave
cmp
jnp
jnp
mov
sbb
sbb
mov
cmpsl
mov
jae
cmpb
je
push
cmp
loope
je
fxch
sub
xor
stos
fmul
dec
xor
idivl
out
jge
xor
sarl
xor
fnstsw
lods
lods
movsb
stos
pop
into
push
ds
sbb
pushf
hlt
cmp
addb
sbb
js
or
clc
aam
dec
outsl
sub
cmp
xchg
pushf
inc
push
ja
jo
fbld
clc
hlt
lret
into
imul
or
or
add
add
fdivl
shrb
dec
ds
lods
sub
sar
insl
dec
and
adc
clc
add
jge
mov
xchg
sbb
sarl
dec
sar
arpl
mov
leave
pop
scas
and
cmp
negb
inc
mov
push
inc
in
sub
inc
cmp
sahf
mov
mov
push
pop
xchg
push
xorps
ja
bound
cmp
dec
ret
loopne
inc
rcr
add
out
or
sbb
cmc
cmp
jecxz
mov
add
fcom
mov
sbb
jbe
or
mov
stos
push
xor
sbb
std
arpl
jo
sbb
cmp
cmp
mov
pop
and
fiadds
xchg
inc
xchg
imul
mov
out
decb
sbb
ljmp
fistl
mov
test
cwtl
xlat
or
adc
and
jb
jl
adc
push
cwtl
ret
leave
xor
movsl
in
mov
xchg
aam
movsl
cmp
fcmovnb
push
xlat
xchg
in
test
mov
icebp
fnstenv
outsb
shll
dec
mov
mov
imul
mov
out
int3
or
out
call
jmp
adc
mov
jg
adc
leave
lock
jge,pn
mov
xlat
sbb
fdivrl
shl
push
mov
mov
pop
data16
lret
daa
in
push
and
int3
sti
in
push
rorb
stos
adc
lea
or
mov
cmp
mov
popa
cltd
or
pop
and
inc
cmc
call
lret
test
aad
ror
sbb
pop
pop
fsubs
jp
lea
dec
pop
dec
mov
rorl
aam
ljmp
rcll
xchg
sbb
sbb
pop
cmp
ret
jle
mov
iret
repnz
mov
lahf
bound
fdivl
xor
cmc
mov
fxch
out
das
and
mov
insb
mov
fldcw
fildll
xor
mov
lea
in
ror
testl
sub
jb
add
mov
aad
push
shrb
iret
pop
out
out
cld
push
xor
jae
fiaddl
adc
xor
push
ds
stos
cltd
cmp
aad
and
xor
xor
add
lcall
jg
push
lods
bound
scas
mov
fcmovu
cmc
xchg
xchg
xchg
loopne
insl
inc
and
jb
sarb
push
pop
fdivrs
lea
insb
mov
data16
mulb
cmc
mov
scas
sub
dec
mov
sbb
push
arpl
inc
sbb
out
mov
push
loope
and
stos
nop
fstpt
xchg
inc
cmp
cld
pop
fcmove
aam
push
adc
push
insl
addr16
inc
iret
popa
in
cmpsb
cltd
xchg
xorb
push
jg
rorl
mov
mov
mov
add
cmc
lret
dec
lret
sbb
clc
xor
ret
pop
xchg
mov
das
xlat
dec
fnstsw
hlt
pop
cli
sbb
cmp
in
fmull
imul
jbe
test
into
fwait
addb
xchg
daa
pop
sub
mov
pop
xchg
out
mov
push
mov
lret
cmp
andb
std
dec
add
enter
add
push
push
xor
mov
fimuls
scas
aas
adc
mov
notl
adc
dec
gs
jne
xchg
pop
ds
sbb
pushw
dec
mov
jge
cmc
and
aam
test
arpl
sub
mov
xor
add
push
push
push
mov
dec
lods
dec
pop
jecxz
inc
stos
sbb
int3
aam
std
dec
dec
mov
mov
fmull
fmul
push
sbb
xchg
loopne
pusha
adc
add
or
and
mov
jp,pt
push
inc
inc
jmp
mov
adc
dec
scas
xchg
inc
sub
or
shll
adc
out
les
xor
int3
scas
popf
cmp
ja
mov
outsl
pushf
xor
pop
cmc
jno
adc
data16
mov
inc
cwtl
push
ret
lcall
xchg
in
xor
fimull
mov
negb
cld
adc
mov
scas
mov
sbb
sahf
nop
lods
push
rcr
idivb
dec
jne
pop
xor
mov
incl
xor
shr
lcall
sti
and
ja
mov
jnp
test
mov
lret
repz
negb
inc
mov
xor
je
fsts
lcall
push
jmp
fbstp
addb
je
pop
ja
fwait
aad
fsubs
xor
push
push
cltd
mov
pop
and
adc
inc
aas
dec
stc
fiadds
jecxz
ljmp
sub
inc
test
stc
add
sti
bound
jnp
in
adc
ja
dec
push
mov
in
xor
pop
jecxz
mov
data16
scas
push
dec
push
sbb
das
add
jecxz
dec
pusha
pop
daa
mov
adc
cmp
shr
int3
pop
or
mov
sbb
cmpsl
cmp
mov
es
and
xor
dec
pop
xor
jg
xchg
in
pop
lret
xchg
sub
mov
ds
jno
popf
push
hlt
mov
fcmovne
sar
pop
xchg
insb
sbb
xchg
pop
push
aaa
add
aam
push
cmp
or
in
out
popa
hlt
imul
out
pop
filds
xchg
movsb
roll
ret
rcr
mov
sbb
out
mov
xchg
mov
sub
xchg
cld
cmp
jecxz
add
ret
fbld
pslld
mov
scas
movaps
sub
xlat
cmp
fwait
mov
pop
dec
cli
stos
adcl
mov
push
or
or
and
and
push
mov
out
bound
je
test
cli
adc
pushf
cs
movsb
daa
fdivrl
dec
sub
or
out
je
mov
movsb
aad
jmp
dec
dec
nop
pop
into
pop
add
in
xor
jl
jbe
adc
out
scas
mov
test
sbb
dec
stos
rcrl
pop
xor
pop
fcmovu
xchg
les
sub
lods
mov
xchg
test
call
push
pop
cli
mov
call
push
mov
pmaxub
mov
stc
fdivl
fisttpl
jecxz
fisubs
add
xchg
outsl
dec
sbb
outsl
mov
fidivrs
enter
jecxz
mov
inc
mov
into
mov
test
xchg
xor
fbstp
adc
test
sbb
test
jecxz
inc
or
rcr
and
inc
fidivs
jns
je
mov
xchg
xlat
jle
xor
dec
out
fisttpll
xlat
stos
je
insl
jecxz
xlat
fnstenv
mov
mov
mov
pop
xor
test
psubb
sub
out
jg
test
shrb
mov
cli
sub
add
aad
inc
rol
jno
leave
and
lret
gs
pop
nop
sbb
cltd
push
sbb
fstpl
cmp
xor
or
jns
mov
and
xchg
lahf
imul
insb
adc
mov
add
js
fwait
and
jb
arpl
cmpsl
add
inc
scas
lods
or
imul
xchg
das
xchg
xchg
mov
in
mov
dec
add
ljmp
aas
xchg
add
cld
sahf
scas
xor
in
pop
push
jge
mov
decl
cmpsb
ljmp
std
jg
mov
fsubrs
sahf
movb
popf
aad
shrl
inc
daa
jle
psadbw
xor
jg
imul
xor
push
mov
mov
add
and
iret
jmp
mov
xchg
adc
imul
lods
sbb
fs
rclb
and
xlat
push
pop
jp
es
push
stos
iret
sbb
clc
or
add
mov
insl
dec
nop
inc
add
gs
lds
or
shll
xor
lods
mov
addb
mov
jmp
mov
popa
mov
nop
into
out
sub
jp
cmp
jne
push
sbb
dec
dec
mov
icebp
mov
lret
aas
mov
wbinvd
lods
dec
icebp
cmpsb
push
ss
mov
js
repnz
bnd
jecxz
sbb
and
int3
mov
test
iret
les
push
xorb
daa
pop
jl
mov
and
stos
inc
addr16
das
mov
push
lds
icebp
dec
and
ror
adc
stc
fnsave
jae
loopne,pt
enter
subb
cld
cmpsl
stos
loope
cmp
cpuid
dec
sbb
jg
ret
push
nop
sbb
sub
nop
fmuls
movsl
mov
enter
int
xor
leave
or
sub
inc
xor
lods
xchg
adc
mov
dec
push
mov
cmp
mov
fcmovbe
fs
mov
jecxz
jno
std
mov
outsb
and
je
mov
mov
sub
sub
rcll
loope
inc
ficoms
ficomps
das
cli
scas
mov
loope
mov
js
mov
adc
cli
icebp
rcll
fisubrs
fnstcw
push
and
mov
adc
out
push
stos
pop
sbb
popf
push
icebp
and
movsl
jmp
jl
lods
dec
dec
xchg
sti
fsubs
iret
mov
and
push
inc
mov
dec
jecxz
sub
lahf
xor
lods
adc
push
xchg
adc
sbb
fimuls
in
cmp
ficompl
xor
sbb
pop
mov
sahf
and
push
fnstenv
or
repz
sub
add
test
sahf
jne
add
cmpsb
adcb
and
imul
aas
sub
hlt
mov
jecxz
in
mov
jbe
es
jo
stc
jo
rcll
outsl
into
in
add
mov
inc
pop
sbb
adc
loope
leave
jmp
dec
pop
sub
sbb
stc
xchg
mov
fadds
enter
cmp
test
imul
or
lea
loope
adc
lret
pop
and
popa
jecxz
fs
xor
test
adcl
pushf
aas
lret
aad
scas
mov
pop
lods
jg
addb
in
lret
in
adc
push
jns
icebp
mov
stos
jo
lea
out
adc
repnz
test
shrl
mov
ret
rcll
inc
mov
cmc
sahf
lcall
add
negl
int
mov
cmpsb
filds
addl
and
adc
lods
loop
fs
movsb
pop
or
sub
pop
mov
ja
xchg
scas
mov
ret
imul
xchg
int3
imul
adc
in
add
add
mov
mov
test
jns
outsb
mov
mov
stos
mov
in
pop
cwtl
lods
jmp
mov
pop
adc
jbe
sbb
xchg
push
add
or
out
fiadds
into
add
iret
add
movsl
xchg
and
outsb
xor
mov
jo
xchg
adc
rclb
ljmp
jno
pop
shrb
push
gs
push
jbe
aas
insl
repnz
in
int
popa
insb
stc
xchg
fcom
pop
data16
cltd
and
cwtl
loopne
daa
dec
rcll
jge
repz
les
and
cmpsb
push
and
loopne
incl
cmpsl
in
dec
pop
xor
add
ds
mov
xchg
fildll
enter
dec
loop
xor
push
push
inc
adc
shlb
xchg
cmp
lcall
mov
pop
sbb
sbb
out
or
adc
loop
cmpsb
ret
mov
daa
cmp
cmpsl
pop
cli
xor
jne
or
cmpsb
add
push
add
cmp
imul
jb
xchg
sti
stos
xchg
movsb
stos
ret
adc
mov
xchg
or
in
mov
jg
push
or
arpl
stc
jp
or
out
jbe
push
mov
int
dec
sbb
out
aas
rcr
pop
adc
push
jl
mov
lods
dec
jl
shll
into
pop
inc
dec
jmp
cmp
mov
dec
pop
jmp
mov
dec
sub
bnd
pop
rol
imul
jl
cltd
outsl
sub
mov
xor
mov
mov
cld
in
xor
subl
sub
pop
or
jp
outsl
sub
mov
jle
and
out
xor
jae
xchg
sbb
lods
sub
mov
sub
mov
mov
das
inc
add
out
pop
dec
xlat
mov
sub
loope
dec
nop
mov
fdivrs
push
push
jae
stos
out
cmp
adc
inc
scas
ret
jne
adc
dec
jo
pop
in
jp
mov
fisubs
addr16
mov
ret
insb
and
mov
dec
adc
std
int3
lret
mov
dec
xlat
mov
js
cmpsb
sti
ret
popf
lods
sbb
popf
xchg
out
mov
pop
cs
setp
mov
call
loope
in
jae
clc
lods
sahf
shr
pushf
je
jae
pop
or
jnp
dec
jecxz
lcall
incb
adcb
das
or
or
cmp
mov
addr16
pushf
outsb
mulb
push
add
lock
or
cmp
cmpsb
popf
popf
jns,pn
repz
jl
sahf
or
enter
pusha
loope
adc
inc
lret
jmp
cmp
cmp
addb
cmp
mov
push
sub
fiaddl
mov
addr16
repz
xchg
orl
xor
adc
sbb
sub
lret
push
jmp
call
push
jae
ror
mov
insb
jmp
popf
mov
loop
sub
clc
mov
rolb
mov
jns
cmp
lea
lods
jle
mov
jecxz
push
xchg
jb
kaddb
pop
inc
push
data16
push
jge
ja
rdtsc
sub
pushl
outsb
insl
or
mov
fdiv
fidivs
mov
repnz
in
test
add
pop
ret
lock
mov
enter
test
out
es
inc
call
pop
les
push
jnp
aas
loope
stos
out
or
mov
pop
adc
arpl
adc
cmp
jg
adc
xor
ds
mov
test
leave
sbb
push
dec
adc
daa
insl
out
pop
dec
push
pop
push
adcl
add
sbb
adc
jg
or
fnstsw
sub
mov
ja
mov
in
or
scas
js
mov
es
push
cld
jp
enter
dec
jns
addr16
push
inc
pop
insb
int
in
outsl
adc
int
in
lock
mov
iret
adc
pusha
dec
xor
fidivrs
nop
aaa
inc
outsl
sti
hlt
aad
pop
jo
jecxz
and
icebp
js
cmp
ret
jmp
arpl
arpl
int3
pop
inc
and
scas
out
inc
sbb
std
mov
and
add
scas
xchg
pop
push
cmpsb
testl
mov
pop
into
push
cmp
mov
shrb
mov
std
lret
cmp
aaa
or
scas
pushf
jge
push
out
push
iret
xchg
xchg
nop
sbb
xchg
popa
xor
fwait
fwait
xor
mov
cmp
add
icebp
xor
xchg
fdivr
ljmp
arpl
mov
lds
js
daa
mov
flds
lret
xor
popf
test
jo
add
daa
dec
xchg
lahf
dec
imul
std
mov
stos
add
jl
stos
jnp
nop
ret
cli
sbb
push
push
mov
dec
and
and
adc
and
sbb
xor
dec
xchg
jmp
and
or
xor
stos
cs
rcl
mov
sub
mov
sub
cmp
stos
xchg
mov
pop
add
mov
jbe
and
xor
mov
repz
adc
xchg
and
js
inc
pop
in
ljmp
sbb
pop
iret
out
rorl
in
sbb
mov
add
and
adc
pop
out
dec
inc
mov
pop
cmpsb
inc
ds
inc
loop
sub
sub
mov
ret
fcoml
out
aam
mov
cli
push
dec
jp
rclb
pop
nop
in
jae
pop
mov
adc
loope
pop
mov
xlat
ret
testl
ret
sub
pop
ds
and
lret
lods
sbb
addl
insb
sbb
push
int3
aaa
popa
jecxz
or
xlat
xor
cmp
pop
movsl
enter
pop
dec
pop
aaa
jns
mov
sub
sbb
xchg
fadds
scas
test
sbb
enter
enter
jne
ficompl
or
out
out
push
divl
jp
lret
dec
repz
pop
loopne
adc
dec
cmp
adc
xchg
lret
pop
fs
jmp
and
addr16
jmp
mov
and
jl
test
loop
adc
mov
sbb
push
or
push
bound
shl
lock
sbb
fdivrs
cmc
sti
stos
push
imul
int
inc
fcmovbe
movl
sbb
push
or
sbb
inc
jb
cmp
jle
push
rcl
inc
out
lods
mov
cli
sahf
xorb
add
scas
inc
mov
xchg
pop
ret
fcomp
add
mov
and
outsb
outsb
xor
mov
mov
sbb
adc
sbb
or
jbe
cmp
mov
pushl
daa
addr16
inc
xchg
pop
cmc
sbb
xor
mov
dec
dec
fmull
aas
mov
sahf
push
rorb
sbb
movsb
jae
push
ss
mov
add
sub
je
lods
mov
cmp
mov
imul
out
push
fnstenv
pop
xchg
pop
dec
cltd
out
sub
je
and
adc
jne
icebp
jl
mov
jl
xor
imul
sti
cwtl
or
sbb
pop
or
mov
sub
stos
test
icebp
js
pop
gs
mov
cmp
push
ja
out
pop
stos
push
flds
push
sbb
mov
mov
es
int3
push
mov
sbb
mov
iret
mov
ret
dec
iret
int3
mov
pushf
xchg
repnz
jnp
xchg
rcl
leave
push
loopne
subl
jnp
mov
loope
leave
push
mov
stos
mov
std
pop
sahf
xchg
mov
dec
jbe
bound
aad
cmp
je
push
xchg
stos
mov
mov
jbe
dec
xchg
sub
adc
sub
cmp
scas
push
in
rclb
call
out
and
pop
std
aas
dec
xchg
mov
jge
mov
and
jmp
mov
mov
mov
cs
jp
iret
cwtl
lea
or
imul
fsubr
negl
fucomip
arpl
cli
js
xchg
mov
lea
in
sbb
test
dec
mov
pop
int3
sbb
ds
push
in
je
movsb
dec
mov
cmpsb
xor
addb
pop
in
mov
push
daa
mov
sbb
mov
flds
pop
aas
and
out
aad
jg
mov
dec
inc
pop
adc
push
lcall
xchg
popa
xor
sbb
inc
pop
shll
sahf
dec
stos
pop
sub
push
sbb
add
mov
and
push
bound
mov
push
movl
out
sub
mov
push
pushf
jmp
int
loope
xor
rcl
pop
and
in
dec
add
lods
push
out
xchg
add
fwait
pop
pushf
or
std
movsl
mov
lock
jecxz
sub
out
cld
push
pop
mov
adc
scas
push
xchg
inc
aas
testb
and
pop
push
mov
dec
in
or
mov
test
xor
out
das
out
adc
push
test
lods
rcll
movsl
pop
cs
or
push
cmc
xor
jno
nop
andl
mov
orb
adc
scas
mov
fisubrs
push
fstpt
pusha
inc
or
test
inc
jae
dec
fmull
pop
dec
aam
mov
push
sbb
movsl
ret
stos
stos
sub
jmp
scas
cmp
or
inc
repz
movsl
pop
out
xchg
mov
dec
xchg
dec
and
out
loopne
push
xor
movsb
outsb
repnz
movsl
fisubrs
enter
push
sahf
hlt
int
mov
das
lods
xor
out
fisubrs
push
pop
aad
cmpsb
popa
fimuls
std
fstpl
add
xchg
mov
pop
and
out
jae
pop
fmuls
inc
mov
in
mov
enter
sbb
cmp
jmp
pop
enter
leave
lods
mov
jle
fadd
xchg
dec
mov
roll
dec
fstps
or
inc
daa
cmp
test
add
add
sbbl
xchg
ficoml
jb
mov
jnp
push
insl
mov
jno
mov
test
xchg
mov
mov
sbb
scas
out
aam
pop
or
gs
pop
sub
pop
dec
adc
daa
cmp
push
cmp
pushl
dec
popa
mov
lret
sub
sub
and
push
in
ja
pusha
push
nop
jne
mov
jl
flds
push
scas
lods
rcrl
call
push
pushf
int3
jbe
and
stc
xor
call
stos
sbb
iret
xor
in
loope
scas
lret
movsl
xchg
popf
cmp
mov
sub
push
push
sub
pusha
out
push
xchg
test
fucomi
inc
test
pop
cld
mov
movsb
fdivrl
jmp
jmp
daa
xchg
and
cmpsl
hlt
adc
jno
dec
pop
bound
popa
dec
fld
es
adc
test
push
lret
out
cmp
mov
adc
sti
jp
xor
mov
bound
icebp
pop
lret
nop
cmp
jecxz
in
xchg
rorb
mov
sahf
ljmp
dec
mov
scas
push
push
daa
mov
xchg
and
fcompl
movsl
and
pop
lods
adc
popf
fstl
aaa
and
push
push
inc
scas
sti
andb
js
fldenv
xchg
cmp
stos
mov
test
cmpsl
sub
movntq
push
repnz
scas
test
jo
xor
shl
out
js
add
clc
pusha
addr16
push
ret
ret
adc
cmp
jmp
jno
jbe
imul
xor
mov
jecxz
jns
sub
mov
jns
fwait
add
fs
cmp
pop
bound
sub
sbb
jmp
pop
or
sbb
pop
out
pusha
push
pusha
xchg
popf
cld
fisubl
cmp
dec
cmp
sub
aaa
add
pop
or
iret
fdiv
sbb
xchg
js
js
jle
fimuls
iret
scas
ljmp
icebp
and
data16
rolb
daa
ret
outsl
sub
pop
outsl
ret
test
aas
jl
cmp
jg
movsl
jle
fidivrs
dec
dec
mov
cli
pop
cmp
jb
xor
pop
dec
stc
scas
nop
shlb
cmp
outsl
in
addr16
fwait
aam
jp
js
sahf
inc
out
and
aad
cmpsl
lret
lret
je
add
lret
js
into
push
filds
sub
mov
or
mov
rcll
cltd
or
mov
scas
sbb
lea
or
stos
mov
push
cltd
pop
adc
scas
mov
mov
push
pop
mov
fcmovbe
ficoml
cmp
or
outsb
ret
aam
mov
xchg
dec
insl
sbb
or
cltd
sbb
adc
jmp
loop
das
inc
sub
xor
outsb
pop
sbb
xor
aas
shlb
pop
stc
pop
stc
sub
add
jp
je
xchg
fmull
and
scas
fwait
je
movsb
push
pusha
pop
or
mov
pop
pop
inc
jle
ljmp
or
sbb
lods
lods
je
ret
dec
push
lret
inc
shlb
popf
pop
cli
pop
mov
mov
fs
rorb
lea
ljmp
sub
jge
xchg
fiadds
inc
push
and
push
jbe
adc
pop
mov
aas
cmp
push
into
mov
push
inc
xchg
add
sti
dec
aaa
lea
add
or
inc
adc
stos
pop
adc
sbb
push
push
sub
push
push
fildll
pop
lea
mov
cmpsl
hlt
imul
jecxz
or
and
mov
call
ds
cmp
pop
xor
inc
pop
sti
repnz
sub
dec
or
rorl
cli
add
or
ret
or
movsl
les
jbe
dec
sub
or
cmpsl
fsubrl
in
xor
pop
mov
into
push
fisubrs
jo
add
rcr
fnstcw
xor
jo
cmp
sti
jae
xchg
popf
adc
mov
gs
push
adc
pop
mov
pop
lcall
add
jae
fisubrl
shrb
dec
push
adc
arpl
xchg
mov
fbstp
and
es
cmpsl
or
mov
dec
sarb
and
das
pop
test
aaa
cmpsb
pop
jae
out
inc
dec
cwtl
pop
cmpsb
jmp
cmp
fs
mov
push
and
ljmp
mov
cmp
imull
pop
xchg
shll
inc
jp
rol
outsl
xchg
movsb
ds
push
mov
inc
dec
xor
adc
mov
mov
adc
push
loope
inc
lret
test
aas
insb
adc
jmp
hlt
lock
inc
out
dec
push
out
inc
and
scas
xchg
xchg
fcmovne
and
ljmp
shrb
outsb
fsts
mov
jne
lcall
pop
or
pop
xchg
mov
pop
xchg
xlat
jg
and
xchg
pop
ljmp
mov
sahf
int3
mov
lds
ss
jns
mov
or
xchg
adc
xchg
lock
jg
jns
xchg
and
jl
sbb
xchg
add
fistpll
scas
xor
cmc
xor
rolb
xor
sbb
pop
add
pop
shrl
test
stc
mov
in
aaa
aas
xchg
out
pop
mov
in
and
pushf
push
add
repnz
jg
fldenv
aas
fwait
cli
inc
sbb
jg
and
stos
sub
mov
data16
mov
cmp
mov
pop
cmp
shlb
xchg
jmp
stos
bound
shrl
fsubrs
push
jne
push
mov
hlt
push
dec
pop
inc
push
es
mov
push
mov
ljmp
add
aas
xchg
or
aas
ret
stc
cmp
jb
clc
push
sub
scas
sbb
sahf
sbb
test
add
movsb
add
lahf
or
adc
mov
out
fwait
xchg
in
addr16
das
fs
pop
ljmp
pop
sbbl
jno
pusha
sub
call
test
das
lods
mov
xchg
out
fisubrs
xor
mov
pop
jnp
insb
pop
mov
insl
xlat
lahf
adc
shl
shrb
popa
xor
inc
jno
jmp
test
jmp
out
adc
add
sti
cmp
sub
hlt
and
adc
sbb
xor
stc
jne
psrlq
pop
stos
jmp
cmc
iret
fisubrs
or
test
pop
in
mov
rclb
pop
inc
popf
ret
and
xor
loope
imul
cmpsl
stc
xor
inc
shll
sub
jb
inc
or
lcall
sub
jnp
aas
je
pop
xchg
xor
ljmp
mov
and
neg
negb
push
fwait
imul
lea
fcompl
pushf
add
push
ss
hlt
pop
jge
and
mov
add
inc
gs
fsubl
rcrb
pusha
add
movsb
dec
xchg
int
mov
sbb
inc
xor
mov
addl
loopne
out
adc
ljmp
enter
out
test
jmp
jo
pop
or
push
aaa
orb
addr16
jne
and
ss
out
ljmp
pusha
mov
js
arpl
xor
pop
and
popf
stos
jmp
mov
fs
xchg
mov
in
leave
push
pop
and
jmp
repz
push
sbb
popf
sbb
or
pop
aaa
dec
ss
lock
add
sub
cmp
out
push
push
pusha
dec
xor
lcall
sub
mov
jmp
in
cmp
add
mov
mov
lds
cmp
xchg
adcb
js
or
int
fs
or
adc
dec
inc
push
sbb
push
jp
aas
aas
adc
jno
adc
mov
jle
cltd
inc
andb
sub
mov
or
int3
mov
pop
test
fidivrl
sub
fdivl
outsb
fldt
aaa
add
jle
pop
in
in
outsl
es
sarl
push
repz
clc
bound
aad
in
ret
mov
xchg
sub
push
div
and
adc
stos
jecxz
js
aam
add
mov
push
popl
gs
adc
sub
dec
add
and
call
cld
lods
sbb
xor
sub
push
hlt
stos
das
jmp
push
imul
nop
aas
sbb
pop
pop
jae
addr16
ret
loopne
pop
outsl
loopne
sub
xchg
fidivl
iret
dec
and
inc
push
ret
adc
and
rol
add
push
movsl
dec
fsubl
bound
nop
mov
adc
out
mov
or
sub
xchg
pop
inc
push
jge
enter
subl
dec
imul
lock
and
mov
inc
mov
data16
fcmovnb
sbb
adc
mov
stc
daa
ja
adc
push
and
scas
cmp
xchg
stos
mov
pop
gs
xor
dec
outsb
or
mov
cmpsl
and
pop
cmp
and
add
dec
gs
addl
outsb
lock
aam
xchg
mov
test
adc
sub
rorl
call
hlt
mov
js
jbe
in
add
xor
inc
arpl
iret
jb
rcll
xor
adc
cmp
adc
jp
daa
add
pop
fwait
pop
out
dec
subb
or
test
dec
xchg
jge
pop
les
push
mov
ret
rolb
gs
pop
ret
lock
stos
adc
jge
mov
jo
fbstp
nop
xchg
pop
sbbb
out
inc
and
jl
into
cmp
das
mov
inc
add
in
inc
mov
xor
add
sub
adc
adcl
and
sbb
and
push
cltd
aas
and
add
mov
rclb
das
jnp
fisttps
gs
cmp
lahf
xor
rclb
ja
cmpl
dec
iret
cmpsb
je
ret
lret
sbb
or
cmp
jne
int3
call
inc
adc
mov
ds
sbb
lret
gs
les
lock
push
out
xchg
int3
mov
inc
lods
test
jle
mov
arpl
cwtl
sub
sbb
and
mov
std
add
nop
fld
add
insl
cs
insb
mov
inc
stc
push
in
sub
and
mov
sti
incb
push
inc
test
movsb
pop
xchg
push
xchg
and
mov
cmc
ret
call
push
sbb
lret
shll
jecxz
lea
fcompl
setp
out
adc
cmp
lcall
std
jno
lret
hlt
rorb
xor
cmp
jne
mov
mov
jno
clc
dec
insl
sub
xchg
lds
or
insl
addr16
lcall
mov
insl
pop
pop
ret
bound
notl
push
lock
cmp
push
test
push
xchg
push
inc
xchg
push
xchg
add
sbb
xchg
adc
inc
add
scas
jns
cmc
cmp
es
mov
in
js
lret
sti
xchg
sarb
aad
fdivp
aad
daa
leave
or
jg
dec
sbb
xchg
shll
js
mov
or
jl
mov
int
push
mov
scas
dec
dec
shlb
icebp
je
sar
and
mov
sbb
jo
xor
mov
in
inc
pop
fisttpl
jne
out
adc
adc
adc
xchg
rorb
cs
jns
clc
std
dec
cmc
test
dec
dec
dec
xlat
dec
inc
xor
mov
jp
nop
inc
lea
mov
mov
fldcw
push
out
xchg
push
loope
fs
aad
inc
pop
stc
mov
xchg
insb
stos
pmaxub
dec
dec
cmp
add
mov
cmp
and
fisubrs
xchg
sbb
popf
aad
add
push
push
pushf
aas
std
sbb
mov
inc
or
jb
xor
jmp
xchg
push
jmp
addr16
push
mov
adcb
or
arpl
xor
cmpsl
adc
lock
dec
outsb
fdivs
mov
sub
mov
imul
xchg
pop
fprem
add
out
enter
mov
mov
mov
movsl
ss
sahf
cmpsb
adc
fwait
push
decb
shll
iret
sbb
addr16
cmc
push
daa
xchg
cmp
aas
jo
pushf
sahf
xor
or
add
ficomps
shll
dec
and
inc
repz
add
loope
mov
or
and
xchg
lods
dec
xlat
mov
hlt
jge
mov
in
test
jmp
sbb
inc
out
cmp
stc
dec
jnp
xchg
into
xchg
adc
mov
jae
popa
add
xchg
lret
lea
mov
test
push
rorl
lods
mov
sbb
fistpl
push
xlat
sub
xlat
cli
mov
bound
out
jecxz
insb
in
sbb
mov
xorl
and
bound
push
push
int
adc
aas
inc
xchg
int3
sarl
pop
mov
lea
and
dec
enter
outsb
out
xor
xor
xor
scas
insl
popa
pop
repnz
clc
or
jno
enter
jmp
sub
xchg
lods
inc
add
dec
mov
gs
shll
leave
fsubp
rcrb
jg
jno
xlat
test
xchg
sbb
clc
and
in
mov
inc
gs
imul
push
lods
or
push
push
arpl
lret
cli
jno
adc
adc
xor
add
jge
loope
pushf
cmp
mov
fildll
inc
xor
dec
loope
jo
repz
adc
push
xlat
out
sar
sub
sub
mov
xchg
js
inc
dec
pop
sar
repnz
xor
ffreep
dec
out
mov
insb
mov
dec
pop
pop
jb
mov
fsubrl
out
popa
mov
lret
dec
rcll
mov
pop
clc
pop
sub
jl
inc
mov
dec
clc
xor
ljmp
push
sub
adc
into
xchg
push
dec
xor
push
sub
sub
aas
add
xchg
jo
push
sub
sub
stos
add
jns
out
xchg
sbbl
sbb
cmp
mov
rolb
fldcw
fbld
lcall
xchg
jle
cmp
inc
shlb
shll
push
scas
in
int
loopne
or
adc
xchg
jbe
jg
jle
cmp
out
cmc
div
sub
xor
lret
jle
gs
lds
shll
inc
stos
test
mov
aam
pop
mov
leave
add
popa
clc
mov
lds
shll
dec
xchg
loopne
out
xorb
sub
gs
sub
adc
or
in
test
sbb
mov
icebp
les
dec
lods
pop
js
int
pop
mov
jno
pop
xor
lods
cld
pop
ljmp
mov
movl
fildl
nop
inc
into
adc
lods
in
xor
push
test
jge,pn
pop
or
iret
ljmp
je
bound
iret
sbb
mov
and
ret
inc
jno
bound
stc
mov
ficoms
test
ljmp
out
add
lret
add
and
ud2
mov
cmp
enter
add
inc
jns
cmp
jbe
cli
fimull
movsb
rcl
in
mov
and
adc
add
stc
xlat
xor
mov
jge
cli
aad
and
ja
cmpsl
test
cmp
lds
and
fwait
jb
inc
cmpsb
leave
xchg
mov
jmp
inc
negb
lret
pop
add
sbb
push
xchg
sahf
cmc
popa
push
ret
push
inc
hlt
loopne
aas
mov
cmp
adc
adc
hlt
push
push
addb
mov
mov
sub
mov
mov
test
xor
push
imul
pop
movsb
ja
pop
mov
pop
sub
pusha
aaa
cmpsl
jl
inc
lcall
xchg
stos
push
pop
push
rcl
out
pop
push
cmp
pop
stos
scas
fwait
fwait
idivb
nop
out
aam
stos
fdivrs
xchg
cltd
inc
popf
mov
outsl
push
and
es
insl
sahf
add
mov
cwtl
in
inc
dec
repz
gs
lds
xchg
push
movsb
xor
mov
mov
sbb
testb
jb
rclb
fwait
cmp
jecxz
loop
push
in
rcll
clc
mov
popf
bound
sub
int
inc
insb
add
xchg
cs
sub
or
fsubrs
dec
scas
sub
xchg
and
sbb
mov
test
js
pop
out
xor
mov
in
push
mov
cmp
enter
pusha
or
inc
iret
and
dec
inc
cmp
std
mov
dec
sub
add
cld
add
jae
aaa
or
xor
cmpsl
lods
daa
inc
call
loope
nopl
movsl
divl
xor
mov
sti
cmp
addr16
cwtl
pop
adc
mov
imull
lret
cmp
data16
ljmp
sbb
jle
mov
cli
mov
iret
nop
test
call
rcrl
fidivrl
aad
data16
jmp
mov
in
test
jl
sbb
clc
outsb
push
push
frstor
pop
jp
pop
or
hlt
imul
sahf
js
push
in
and
inc
pinsrw
insl
addr16
or
cs
cmpsl
add
xor
in
mov
insl
cmp
sbbl
jmp
aad
sub
mov
mov
ljmp
xlat
pop
stos
icebp
adc
push
jae
in
mov
jl
xor
sub
or
cwtl
notl
hlt
push
je
ja
jnp
pop
repnz
addr16
js
sub
cmp
test
xchg
mov
lds
push
push
xchg
adc
fcoml
jne
imul
push
repz
mov
push
and
sti
les
sar
add
sbb
xchg
mov
cld
stos
inc
cli
fwait
lods
push
jne
ficoms
jl
pushl
adc
pop
adc
mov
cmpb
scas
mov
out
mov
mov
xlat
mov
lods
ret
or
jb
sub
xchg
mov
movsb
arpl
movsb
lods
fisubrl
cli
lcall
test
pop
dec
cmp
xor
dec
rorb
and
lds
lds
shl
xchg
inc
ret
pop
pop
stos
repz
push
sub
fs
push
push
or
adc
mov
or
mov
push
icebp
adc
cmpsb
inc
movsl
out
shll
movaps
mov
mov
andb
push
cmp
push
sub
loope
push
and
adc
mov
xor
das
push
popf
sbb
cmpsb
loopne
sbb
stc
add
xor
aad
icebp
sbb
ljmp
aad
fwait
stos
test
ror
sbb
pop
jg
sub
mov
rcr
test
fstl
pushf
pop
jno
jl
int3
cmp
push
in
add
sahf
and
es
cld
pop
or
je
test
cmp
adcl
test
push
adc
pop
jg
and
mov
out
adc
mov
and
fcomp
pop
mov
sub
pop
imul
adc
mov
mov
push
mov
lock
push
sbb
ret
inc
jmp
and
stos
lcall
pop
push
test
push
lock
iret
sbb
push
mov
je
adc
mov
shl
xor
addr16
ljmp
and
cmp
push
lret
rorl
fildll
fwait
int3
fldt
sub
les
mov
nop
pop
cmp
ret
inc
dec
imul
mov
push
and
xor
and
and
movsl
mov
jb
xchg
sbb
inc
sub
sti
test
push
ja
push
fadd
lea
cmp
inc
inc
icebp
mov
cmp
adc
xor
xchg
cmpsl
rclb
adc
xor
imul
or
mov
or
add
add
sub
ret
jb
sbb
adc
mov
or
lret
test
xchg
add
and
adcl
cmp
mov
sub
and
inc
ss
in
cmp
inc
pop
insl
pop
mov
jge
out
mov
punpckhwd
jmp
mov
stos
push
dec
pop
adc
sahf
pop
jbe
stc
or
dec
lret
sarl
pop
mov
pop
cmp
out
push
and
sub
xcrypt-ecb
cmpsl
dec
fsubrl
nop
ret
push
sbb
inc
xor
dec
add
xor
jo
in
add
xorl
test
adcl
bound
cmpb
push
shlb
xor
xlat
inc
negb
subb
lea
aad
rcrl
push
sbb
mov
insb
test
dec
jmp
mov
aad
add
test
fldl
dec
data16
dec
test
lret
mov
mov
ds
mov
inc
adcl
mov
das
lret
cmp
sti
ret
mov
in
jl
test
es
adc
out
jb
jge
fnstsw
mov
sub
js
ds
jae
icebp
or
xlat
movsb
cwtl
jno
std
mov
repnz
repnz
mov
outsl
out
push
clc
sub
sbb
add
xchg
shl
jne
xor
ret
jbe
add
dec
sub
mov
outsb
mov
mov
addr16
pop
data16
popf
in
scas
xchg
cmpsb
pop
pop
mov
xchg
lock
cmp
popf
imull
aas
xor
movsb
xchg
mov
xchg
xchg
add
int3
add
sub
mov
fnstenv
jl
push
loopne
imul
pusha
adc
enter
adc
fs
int
adc
adc
xchg
pop
mov
sbb
adc
push
jae
pop
and
pop
mov
push
imul
dec
fcompl
lock
mov
sub
inc
sarl
xor
ja
test
test
ss
test
cmp
cmp
add
inc
cmpsb
jnp
xchg
mov
aas
xor
push
mov
into
pop
sbb
lahf
push
dec
add
test
xchg
add
data16
fmul
int
cmp
cmpsb
sub
add
ljmp
or
xor
and
cltd
sub
mov
arpl
insb
icebp
push
xor
mov
push
and
rcrb
mov
pusha
jp
loop
ja
out
ljmp
leave
mov
or
test
clc
jecxz
out
shrb
push
cmp
pusha
mov
xor
and
mov
es
push
imul
sti
add
int
stc
mov
xchg
mov
jo
xor
pushf
xchg
mov
push
sub
lds
arpl
cli
dec
add
push
xor
or
ret
and
in
mov
repnz
ror
ds
cmp
adc
ficoml
sbb
fwait
xor
and
lods
scas
lea
mov
sub
loopne
mov
mov
xchg
enter
gs
dec
popa
mov
xor
jnp
enter
sarb
inc
inc
xchg
jmp
jge
pop
mov
arpl
xorl
lea
outsl
xchg
dec
fbstp
xchg
enter
pop
dec
mov
pop
jle
in
jne
int
push
xchg
dec
out
xchg
adc
lds
test
and
pop
jp
xchg
xor
fimull
inc
mov
jmp
jl
js
popa
push
mov
repz
jno
lahf
in
and
call
push
bound
int3
adc
or
fistpll
push
repnz
mov
dec
loope
out
jns
jbe
add
cmc
jae
arpl
and
jb
or
sbb
es
inc
mov
imul
mov
aas
mov
dec
das
mov
int
jp
xor
push
imul
fwait
mov
js
xchg
cwtl
cld
les
bound
add
sbb
js
jb
nop
leave
mov
out
xor
shrb
stc
clc
xor
jns
repnz
sbb
lcall
shl
lret
addr16
aaa
jns
gs
pop
mov
push
add
out
cmpb
or
push
jae
xchg
xor
mov
xchg
cmp
cwtl
and
pop
cwtl
or
cli
lods
int3
movsl
les
stc
adcb
sbb
ret
les
test
cmpb
call
fwait
mov
add
mov
test
js
fistps
add
nop
mov
movsb
movsl
fdivrs
ja
cmp
gs
mov
mov
add
leave
jmp
jmp
pop
outsb
adc
fisubl
xor
xor
pop
inc
es
stos
lds
cmp
into
hlt
lahf
sarb
lcall
sbb
xchg
sbb
shl
adc
aas
outsl
bound
addr16
out
adc
dec
daa
scas
lahf
mov
xor
mov
in
xor
fisubl
lods
cmp
xor
je
mov
lds
dec
xchg
push
loopne
jl
shll
sbb
icebp
pop
jo
nop
mov
xchg
lret
or
jge
or
pop
inc
dec
add
fwait
add
cltd
lret
and
jg
js
out
mov
xchg
pop
cmp
mov
or
jbe
inc
cmc
sti
add
jbe
daa
rolb
push
xlat
cmp
mov
es
xor
and
ficoml
test
cmp
sarl
mov
jb
je
mov
push
inc
popf
push
xchg
iret
cmc
sbb
add
push
nop
gs
inc
add
and
cmpsl
pushl
xchg
sbb
icebp
cli
gs
push
jb
adc
adc
mov
xor
sahf
addr16
mov
fnsave
bound
out
sti
and
daa
test
js
adcb
xchg
jb
lahf
sbb
adc
popf
stc
xor
imul
testl
dec
jns
add
xchg
cltd
xor
cld
test
int
sbb
cmp
fldl
dec
mov
enter
sbb
fsts
out
sahf
bnd
aam
xor
idiv
cmpsl
pop
bound
mov
cmp
sub
loop
pop
mov
xor
and
shlb
inc
addl
mov
rolb
mov
mov
jg
pop
inc
fiaddl
enter
jnp
pop
mov
mov
pop
dec
outsl
mov
lret
mov
push
jg
in
outsl
not
push
ss
jns
cmpsb
xchg
dec
and
add
push
sbb
dec
dec
cmp
pop
mov
out
mov
mov
stos
loopne
sbb
ljmp
push
sbb
stc
repz
add
and
out
insl
lcall
jns
and
es
adc
xchg
dec
jmp
addb
movsl
dec
pop
push
fcmovnu
pop
add
scas
fbstp
int
xchg
icebp
jbe
jno
lret
jge
adc
push
ret
push
cmp
popa
or
xor
addr16
dec
cmpsb
jg
lret
xchg
xchg
stos
je
ss
movsb
push
mov
mov
movsl
mov
lcall
inc
dec
dec
and
mov
fldenv
stc
arpl
cmp
scas
pop
jle
adc
fimuls
test
hlt
jno
push
xor
pop
dec
jp
jo
or
jle
orl
movsl
fsubl
pop
and
cld
test
sarl
mov
insl
pop
mov
xor
fdivrs
xor
lret
adc
lods
pop
idivl
xchg
dec
xor
push
out
sub
or
test
mov
imul
dec
mov
pop
sbb
test
scas
add
cld
call
cld
fsubs
out
sub
cmovg
dec
mov
mov
add
xor
insb
sub
pusha
cwtl
out
sub
add
js
and
push
and
stos
dec
pop
mov
and
fnstcw
enter
push
dec
jno
scas
orb
loopne
mov
jo
dec
std
inc
loope
inc
mov
mov
test
pop
pop
sbb
mov
pop
push
jo
jp
sbb
out
dec
jle
insl
cltd
mov
aaa
or
mov
mov
and
xor
add
insl
add
adc
ret
shlb
push
dec
sbb
movsb
ds
daa
lcall
dec
rolb
aam
inc
sbb
and
in
int
push
cli
jmp
lret
xor
nop
cltd
add
out
cmp
pop
xor
adc
and
das
push
jg
cmp
cmc
pop
outsl
push
movsb
adc
loope
jo
sbb
out
jae
jne
mov
and
and
gs
cmp
ljmp
stc
push
sub
adc
clc
pushf
mov
call
popa
mov
js
rol
and
popa
lock
popa
mov
sti
and
flds
mov
scas
repz
in
shl
or
fisubrs
jbe
testb
mov
repnz
dec
int
sub
cmp
push
jnp,pn
cmp
add
sti
jno
push
inc
sti
and
jbe
adc
in
mov
leave
dec
ds
out
jno
scas
sub
fst
pop
ja
xchg
add
leave
out
pop
aaa
mov
xchg
and
xlat
mov
dec
dec
cmc
xor
sbb
out
inc
cmp
jge
in
inc
and
add
sub
jp
shl
inc
cld
mov
mov
sub
adcb
sbb
dec
mov
ljmp
outsl
pop
mov
adc
push
xchg
or
inc
and
cld
pusha
mov
dec
dec
jmp
add
mov
xor
mov
aas
icebp
mov
inc
call
inc
addl
call
push
jg
jge
std
pushl
add
clc
imul
hlt
les
xor
fcom
xlat
scas
movsl
mov
call
and
sbb
push
gs
adc
mov
and
sub
sbb
clc
xor
cmp
je
inc
outsl
xchg
imul
inc
xor
push
cmp
xor
stos
xor
jb
jge
fldcw
inc
bound
enter
jbe
shrl
pop
mov
and
je
add
in
mov
mov
arpl
lods
adc
and
das
in
pop
or
sub
adc
mov
rcrb
and
adc
insl
cmpsb
cli
into
in
sub
shlb
cmp
xor
sbb
repnz
push
mov
and
dec
lcall
inc
or
divb
inc
lds
imul
arpl
gs
les
inc
clc
popa
cmp
sub
mov
je
push
insl
and
jne
mov
mov
cmpsl
and
ss
jno
jb
bound
mov
or
mov
lret
push
ljmp
and
xchg
loop
shll
scas
jo
xchg
push
jbe
test
mov
sahf
test
sub
das
daa
push
test
sbb
push
xor
ljmp
xchg
push
and
and
popf
lcall
or
mov
popa
ss
dec
mov
adc
outsb
mov
and
or
push
mov
daa
shlb
sbb
add
inc
pop
pusha
xchg
in
sub
es
or
insl
or
lock
mov
sbb
movsb
stos
mov
stc
push
popf
ret
and
cmp
sbb
mov
push
pop
cmpsl
stc
mov
mov
cmp
in
mov
pop
cwtl
je
int3
scas
cltd
adc
add
sahf
adc
pop
mov
ds
cs
pushf
xor
js
icebp
and
mov
adc
lds
pop
add
inc
sbb
xor
ret
imull
or
dec
inc
lahf
test
jae
fdivrs
addr16
arpl
xchg
mov
out
mov
outsb
sub
daa
aad
push
push
mov
mov
jae
pop
js
test
or
mov
sub
cmpsb
or
bound
pop
cmp
xor
inc
cmp
and
mov
loope
sarl
movsb
pop
insb
jg
aad
je
in
push
leave
jae
xchg
push
mov
xorb
sub
mov
ds
decl
ss
fisubs
mov
mov
add
pop
mov
sbb
mov
xor
iret
xor
lret
subl
loop
int
jns
ds
adc
jnp
scas
fmulp
xchg
popa
push
xchg
dec
mov
mov
movsl
lods
dec
aad
loope
pop
pop
loop
pop
inc
push
mov
lods
inc
cmp
ljmp
mov
xchg
rcr
jns
pop
cmp
or
jle
push
mov
and
mov
sbb
pop
ret
fidivrs
pop
push
sub
mov
das
ss
out
add
call
jg
les
adc
push
sub
mov
ret
sahf
cmp
mov
cmp
adc
out
jl
fs
and
push
lret
add
cmp
daa
cmp
in
dec
dec
iret
sarb
insb
or
xchg
shrb
ror
inc
pop
lods
loope
repnz
insb
cmpsb
test
aam
aad
jmp
das
loope
sbbl
push
sbb
loopne
popa
push
cmp
mov
xchg
sti
insl
ret
sub
hlt
xor
je
divb
xor
lods
xor
insb
jg
sub
test
jg
les
call
or
mov
dec
dec
sub
lahf
adc
lock
pop
enter
leave
dec
add
and
leave
scas
pop
flds
in
adc
cmp
stos
ror
pushf
loopne
lret
xchg
imul
shll
push
mov
lret
std
add
xor
mov
inc
repnz
in
jb
xchg
push
out
cmp
push
aas
insl
mov
jl
lret
leave
xchg
xchg
dec
sub
sahf
daa
adc
xchg
lods
push
std
in
push
or
jb
lahf
mov
arpl
ficoml
mov
adc
sbb
bts
pushf
mov
jecxz
fwait
dec
lret
cmp
adcb
cmp
xor
push
gs
sub
cmpsl
cmpb
mov
mov
mov
leave
imul
cmp
stos
in
ret
stos
test
push
cmp
xchg
mov
push
adc
jno
push
mov
cmp
sub
inc
aas
ds
and
pop
xorb
into
pusha
mov
push
outsb
insl
je
sub
pop
mov
cltd
outsb
xchg
jae
push
or
int3
mov
cmp
add
jp
push
cmpsb
jg
loope
test
int
cld
cmp
cwtl
lock
xchg
jmp
in
pop
jns
aas
pop
mov
add
out
cmc
mov
push
mov
int
sub
push
jge
in
lret
xchg
fdiv
les
out
or
dec
xor
call
ret
lcall
mov
add
into
sbb
das
or
add
mov
mov
aam
or
lahf
je
lods
wbinvd
adcb
xchg
mov
les
adc
sub
dec
mov
adc
or
mov
pop
and
push
jge
je
call
or
lcall
std
ljmp
push
sbb
cld
mov
pop
popf
aad
fldt
push
cld
jecxz
into
mov
out
jbe
dec
push
xor
dec
mov
xor
enter
xchg
fldenv
add
stos
sub
movsl
push
test
aaa
jle
push
adc
mov
cli
sbb
cmp
xor
ret
and
ds
in
and
daa
cmp
and
jmp
imul
test
imul
adc
jl
jp
dec
xchg
push
mov
jecxz
bound
push
cltd
pop
shll
in
std
popa
push
and
dec
jae
cli
arpl
mov
lahf
lods
daa
out
loope
push
push
outsl
cwtl
stos
add
dec
idivl
popf
inc
jnp
or
mov
pop
cld
adc
aaa
fwait
jle
inc
dec
test
pop
pop
shlb
repnz
andl
and
add
jecxz
outsb
dec
hlt
movsl
gs
pop
xor
cmpsl
cmp
lahf
js
jno
add
outsb
dec
xchg
dec
xchg
ret
cs
cli
dec
dec
ja
sub
push
out
push
jo
sar
ss
ja
pop
cmp
insl
into
dec
and
sbb
insl
cmp
xchg
out
test
dec
xchg
imulb
outsl
push
pushf
or
push
jle
imul
das
sbb
jns
dec
cs
jns
dec
fadds
push
sub
dec
addb
cld
imul
pop
mov
and
test
xor
out
xchg
lds
repnz
jecxz
scas
sti
pop
out
cmp
cmp
jo
dec
frstor
mov
and
mov
push
xor
sub
adc
mov
fcoml
mov
fs
stos
lret
repz
pushf
inc
lret
jno
lods
out
movsb
push
hlt
sti
dec
iret
ret
and
test
mov
xor
jp
xchg
mov
jo
adc
jle
push
movsl
or
pandn
and
inc
loope
in
loop
adc
pop
loope
daa
push
int
pop
into
iret
cmc
sbb
mov
mov
mov
enter
jb
push
mov
sub
in
sub
adc
push
popa
and
es
mov
and
sub
rcrb
fidivrl
rcll
add
scas
adc
or
sub
fdivrs
test
mov
jns
sbb
xorb
nop
or
nop
cmp
js
dec
sbb
mov
sbb
inc
lds
mov
shrb
push
cmpsl
sbb
inc
dec
mov
rorb
and
cmp
out
mov
jbe
sbb
jge
add
mov
int3
inc
mov
sbb
rcrb
sub
aam
jno
add
shl
cltd
addr16
iret
push
mov
lahf
out
js
cmp
stos
sub
xchg
insb
inc
js
adc
bound
xchg
jnp
xchg
adc
add
js
adc
rclb
daa
adc
mov
test
movb
dec
add
mov
sti
xchg
push
push
mov
gs
sbb
stos
xchg
dec
jne
loope
sbb
or
jns
test
and
xchg
test
scas
jle
dec
jnp
inc
hlt
js
stos
add
enter
jle,pt
push
icebp
jb
add
push
inc
jge
push
push
js
mov
cld
inc
push
or
jecxz
data16
push
and
push
mov
rclb
sbb
adc
das
pop
bound
lahf
cmc
pop
jecxz
loop
jmp
daa
push
lcall
inc
icebp
push
mov
ficompl
fdivp
lret
xor
push
fnstsw
ffreep
insb
fistpll
roll
pop
pop
lcall
icebp
push
test
imul
dec
lods
outsl
xchg
inc
dec
leave
or
sbb
ficoml
ds
push
call
cld
adc
push
jae
fbstp
mov
dec
clc
jg
xlat
inc
dec
movl
out
jne
imul
dec
out
xchg
and
rcl
stc
and
stc
push
jmp
push
lock
mov
dec
add
bndldx
orb
mov
pop
in
push
aas
jp
mov
loop
loopne
mulb
leave
or
jb
fdivrs
pop
pusha
out
cmp
sub
cmp
rcl
insb
in
mov
add
xchg
xchg
mov
mov
js
cli
dec
test
mov
icebp
mov
mov
mov
shr
lcall
mov
out
mov
test
lock
decl
bound
pop
rcr
xchg
imul
push
mov
and
out
cmp
push
data16
inc
push
jmp
mov
das
lahf
ss
push
push
fucomip
sbb
addl
add
das
adc
ss
jp
sub
mov
and
adc
and
sub
cmp
icebp
jne
dec
popf
inc
fstp
outsb
in
cli
inc
icebp
fsubs
and
sub
xchg
inc
push
mov
in
das
cmp
cmp
jmp
movsl
inc
pop
inc
js
or
je
inc
enter
sbb
jecxz
sub
sbb
sti
fidivrs
lret
mov
mov
cwtl
xchg
jns
pusha
outsb
pop
in
pop
jecxz
sub
sbb
cmpsl
pop
xchg
cmc
xchg
xor
xchg
add
mov
or
clc
xor
mov
mov
jb
cwtl
jne
cmp
adc
outsb
jmp
in
inc
stc
jmp
fisubs
lcall
loop
mov
pop
dec
sub
sbb
jmp
mov
ds
sbb
add
arpl
hlt
cwtl
addr16
sub
push
aaa
sahf
xchg
js
ret
insb
mov
mov
mov
mov
fcomps
clc
mov
sub
pusha
adc
mov
outsl
fistps
mov
adc
sbb
and
jb
inc
push
inc
push
mov
add
in
lods
mov
sub
pop
hlt
inc
xchg
sub
push
push
clc
rcll
insl
pop
push
mov
push
xchg
push
jge
mov
mov
int
sbb
lret
sbb
mov
cmp
push
sbb
adc
rclb
sbb
pop
faddl
ja
cmp
or
fcoml
iret
ror
cwtl
enter
pop
aam
pop
addr16
fcomps
addr16
rclb
popa
test
xor
icebp
push
out
inc
popa
cmp
rcll
in
loope
stc
cli
add
dec
or
jns
loope
xchg
repz
mov
in
pusha
lods
clc
mov
js
ret
rorl
sbb
inc
fcmovnu
stos
push
and
sub
jo
lods
jge
repnz
cmp
xor
sub
ds
or
andl
sub
adc
sbb
testb
inc
lret
push
and
mov
inc
sub
sub
sub
gs
call
js
stc
mov
xchg
lock
xchg
mov
add
in
jb
aaa
mov
std
fs
xor
jg
mov
ffree
loop
jp
jp,pt
push
repnz
and
cmp
jb
or
add
pop
sub
mov
rcrl
out
cmp
aad
jecxz
sarb
cmp
cmp
dec
ret
xor
test
repnz
sarb
lods
lcall
jnp
mov
xchg
lret
repz
xor
pusha
xchg
pop
sub
clc
lret
lods
mov
mov
or
mov
aaa
insb
push
aam
dec
jnp
sub
mov
xchg
adcl
icebp
movsl
pop
adc
clc
mov
sbb
test
or
out
xchg
fwait
push
jb
jnp
xchg
sbb
add
and
pop
adc
jg
cli
push
mov
xchg
or
ds
pusha
fwait
lods
aas
pusha
jp
iret
cli
daa
and
aad
pushf
add
xor
add
sub
imul
popf
mov
pop
mov
mov
inc
fistl
in
test
sub
dec
lods
ja
mov
sbb
icebp
fidivs
and
jmp
mov
icebp
xor
sbb
insb
adc
or
xchg
lods
pop
rcr
fidivs
das
addl
jbe
cmp
rorl
or
imul
fcmovnb
imul
and
cmpsl
and
pusha
cmc
mov
dec
cmpsl
pop
inc
jl
add
xor
out
and
mov
adc
cmp
xor
cmp
jb
out
jb
jb
fwait
jp
fistpl
push
test
stos
or
cld
gs
enter
shlb
repz
fimuls
fwait
cmpb
xor
lock
pushf
fsubrl
push
pop
cmpsl
add
mov
adc
lods
fs
push
sub
mov
sub
sarb
xlat
and
mov
mov
or
iret
fiadds
dec
in
enter
stc
sbb
je
sbb
cmpsb
push
adc
jb
sbbb
push
and
push
and
into
pop
sti
sbb
cmp
adcb
mov
aaa
jp
lds
mov
xor
out
or
fdivl
mov
out
sub
mov
test
aad
xchg
mov
xor
je
inc
ret
push
xchg
stos
loop
dec
and
mov
mov
xor
adc
ss
mov
sub
arpl
cmp
push
sahf
es
cmp
inc
jns
clc
sbb
inc
jb
fwait
test
inc
push
push
int3
mov
xchg
gs
add
stos
add
mov
cmpsb
mov
testb
mov
dec
cmp
push
into
cmp
dec
cmpsb
xor
sarb
mov
clc
mov
das
xchg
xchg
aad
sbbl
roll
ret
mov
les
xchg
in
aas
xor
mov
and
int
dec
lcall
scas
repnz
enter
and
stc
sbb
sub
ret
jp
xor
dec
adc
insl
test
adc
xor
add
scas
add
or
and
pop
loope
xchg
push
in
sbb
cmpsl
lods
outsb
and
rcll
sub
mov
sarl
inc
test
sub
sarb
insl
jecxz
xchg
jbe
sbb
lahf
or
movsl
push
int
xor
sbb
out
divl
adc
xchg
je
repnz
jl
int
rolb
loop
xchg
out
jbe
or
and
xchg
pop
and
inc
push
mov
mov
sarb
scas
push
sub
stos
inc
adc
or
scas
sbb
mov
icebp
jbe
insb
flds
sbb
scas
dec
xchg
adc
fbld
sbbl
cli
das
push
adc
mov
add
lcall
cmp
shll
dec
push
adc
arpl
xorb
enter
sbb
add
shrl
scas
inc
pop
loopne
push
mov
pusha
out
jg
sbb
scas
lret
and
into
das
and
cld
aaa
call
cld
sub
nop
cmp
xor
sub
sarb
arpl
pop
into
push
mov
lock
push
jmp
fstl
add
fwait
fsub
dec
cmp
je
mov
je
andb
and
inc
in
popa
imul
pop
nop
jnp
adc
ds
and
add
dec
push
out
jmp
sub
outsl
mov
dec
insl
imulb
bound
inc
and
cmpsl
cmp
xchg
jne
cmc
jae
pop
movq
gs
cwtl
mov
loopne
push
in
add
loop
inc
jmp
out
ljmp
sub
pop
jno
rclb
stos
das
add
and
mov
jp
out
jo
dec
push
lods
sub
aad
sub
shr
jl
lahf
inc
outsb
ljmp
inc
xlat
dec
loope
mov
lcall
or
add
ss
lods
int3
mov
into
insl
lret
pop
mov
sar
cmpsl
in
xlat
popf
andl
pop
call
vpcmpgtd
cwtl
jne
dec
xchg
data16
and
mov
push
test
sub
repnz
loop
inc
mov
lods
mov
ficompl
adc
popa
mov
mov
aas
loop
enter
mov
xchg
and
sahf
adc
pop
sbbl
fsubl
and
lret
xor
imul
xor
repnz
mov
sti
insl
push
or
test
lcall
xchg
cmc
inc
dec
imul
das
std
icebp
mov
push
insl
loope
mov
dec
test
jns
or
lret
add
inc
dec
arpl
adc
loopne
imul
sbb
movsb
xchg
cmpsb
cmpsl
dec
and
inc
dec
mov
lret
jecxz
inc
xchg
xor
hlt
adc
loope
bnd
lcall
pop
aaa
test
push
cmp
repnz
leave
push
jp
pop
adc
call
in
jle
lods
popa
aad
adc
xchg
dec
sbb
in
mov
icebp
add
push
aad
sub
je
inc
into
mov
xchg
int
xor
es
pop
fstpl
movsl
aam
add
int3
repnz
jae
imul
cmp
sub
xlat
mov
pop
cmpsb
jne
subb
inc
or
pop
aaa
imul
imull
repnz
fwait
xchg
insl
mov
ljmp
jbe
sub
ficomps
cmp
lods
stos
rorl
and
cmp
fcomps
out
push
lea
or
pop
add
mov
pop
mov
nop
rcr
pop
jp
aaa
mov
gs
scas
cmp
ljmp
icebp
fildl
cmp
pop
xchg
inc
and
mov
aaa
jnp
xor
mov
pop
je
adc
cmp
or
or
push
dec
add
fwait
or
loope
fwait
je
inc
xchg
sbb
dec
lret
outsb
push
xor
mov
addr16
mov
mov
mov
sbb
jnp
cli
push
rcl
int
or
decb
adc
xchg
push
test
pusha
outsb
or
imul
nop
inc
push
call
pop
sub
imul
xlat
mov
fsts
mov
xchg
sub
sub
add
dec
mov
aas
sti
and
xor
in
pop
xor
cmp
inc
push
or
jecxz
dec
and
jne
push
and
shl
mov
daa
dec
or
mov
pop
mov
inc
adc
dec
ja
lahf
and
jp
shlb
mov
js
add
popa
dec
repnz
lcall
lock
scas
cmc
cmp
or
cmp
inc
icebp
loope
inc
js
or
mov
pop
test
shl
pop
mov
xor
pop
inc
insl
cmp
fwait
stos
and
push
test
leave
add
adc
or
notl
jmp
xor
mov
out
or
mov
ss
js
jo
pop
shrb
cmp
int
jp
rcrl
and
movsb
cmp
and
loope
jae
cwtl
mov
and
push
sbb
sbb
add
inc
and
jbe
cld
cmp
test
add
sbb
lock
outsl
aad
jno
and
add
xchg
test
mov
shrb
xchg
push
scas
cltd
pop
xchg
cmc
arpl
xor
dec
lds
repnz
push
mov
inc
pop
sar
jne
push
jecxz
shlb
sbb
xchg
and
and
cmp
or
or
test
mov
movsb
dec
cld
push
sub
bound
inc
dec
jmp
decb
outsl
sbb
hlt
mov
or
stc
cmp
push
test
jbe
push
arpl
mov
lcall
fs
ret
nop
fistl
pop
cwtl
fmull
xchg
xchg
fcmovnb
cmpsl
fwait
dec
pop
insl
push
jnp
and
xor
sbb
dec
imul
leave
jae
mov
jbe
icebp
add
inc
out
pop
mov
fisttpll
sub
fsubrl
icebp
popa
fcmovb
push
aam
icebp
mov
out
sbb
dec
nop
cmpsb
inc
fstps
mov
sarl
add
divl
add
fldz
sti
sub
iret
fcomps
mov
scas
test
sbb
sahf
mov
inc
movb
stc
aad
fidivl
push
sbbl
inc
icebp
pop
xchg
scas
aaa
popa
adc
mov
mov
gs
pop
shrb
xchg
push
mov
xchg
adc
xor
xor
inc
lahf
in
cmp
cmpl
pop
push
dec
and
cmp
push
xchg
sub
jnp
es
mov
xchg
dec
xchg
cmp
adcb
adc
movsb
cmp
hlt
lds
inc
or
mov
or
fwait
je
push
add
xchg
repz
or
ja
rcl
test
jae
imul
or
dec
sub
inc
push
rol
shll
push
into
out
shll
fildll
out
call
add
dec
mov
add
fdivrp
fxch
jbe
sbb
dec
insb
mov
add
nop
scas
mov
jle
mov
xchg
cmp
hlt
xchg
stc
test
add
inc
clc
xchg
loop
cli
fildl
pop
cmp
ja
enter
cmp
dec
popf
cmp
or
je
leave
add
sub
jl
loope
push
inc
test
cs
test
mov
pop
xor
mov
inc
rolb
sub
int
pop
fsubrs
shrb
dec
test
pop
sarb
push
jecxz
lock
lcall
push
pushf
and
and
cmp
inc
add
jno
lock
outsb
mov
and
fdivrl
mulb
mov
leave
sbb
or
lahf
pop
loopne
mov
pop
add
loope
ret
jmp
fcomps
inc
fisttpll
dec
pusha
xchg
daa
and
loope
add
lock
xchg
vorps
push
jmp
imul
adc
mov
and
cmpsb
or
stc
lock
test
mov
es
orb
add
mov
sub
sbb
imul
push
xchg
add
sub
add
xchg
xchg
dec
in
sti
xchg
push
or
in
pusha
mov
mov
cmp
dec
lret
loope
in
fadds
adc
jg
std
ljmp
test
pop
popa
movsb
sarb
nop
lret
jne
cmc
add
mov
mov
push
and
pop
sbb
mov
stos
push
and
fs
idivl
imul
ds
dec
outsb
sub
fstpl
mov
sahf
mov
lods
push
fcmovnu
add
or
call
jns
je
pusha
sbb
fwait
mov
xchg
ja
cmpsb
enter
dec
sbb
jg
jp
push
cwtl
and
rolb
ljmp
out
ljmp
jb
xor
cmpsb
adc
and
add
mov
in
jge
xchg
sbb
or
pop
pushf
lahf
mov
in
clc
aam
mov
pop
mov
mov
loop
or
inc
push
pop
sbb
sub
hlt
xchg
out
mov
xchg
sbb
int
insl
ficoml
mov
push
shrb
push
xchg
ret
xor
cmp
sti
das
cmp
inc
clc
pop
fidivrs
stos
mov
push
xchg
out
inc
jb
ja
sub
dec
and
pop
lahf
push
cli
daa
jnp
jb
pusha
daa
push
aam
fstl
sbbw
stc
and
jecxz
fdiv
jns
dec
jge
imul
insb
mov
xor
loop
scas
xchg
icebp
ljmp
gs
sub
jo
xlat
pop
push
fldcw
jnp
mov
adc
in
cltd
jmp
aaa
les
sub
push
bound
xchg
shlb
mov
cmp
adc
fbld
cmpb
add
scas
std
add
je
mov
addr16
lahf
cmp
rorl
sahf
icebp
jne
inc
adc
cmp
loopne
pop
sub
add
add
iret
mov
inc
inc
add
push
mulb
pop
outsb
add
pop
mov
gs
mov
repnz
pushf
icebp
lds
movsl
add
jbe
add
mov
das
fistpl
scas
sub
test
enter
xor
popf
sti
mov
jl
popa
mov
sti
ret
sbb
pop
jle
aas
pop
mov
xchg
adc
inc
sahf
adc
sub
insb
cmp
xor
rorb
pop
ficomps
xor
pop
jne
xor
cmp
daa
cmp
and
out
repnz
jg
outsb
xor
adc
sbb
inc
into
outsl
fsub
in
cmp
call
sbb
stos
lock
jecxz
dec
insl
sub
fstl
or
push
cmp
and
push
mov
into
std
jp
shll
mov
dec
lea
mov
xor
imul
mov
je
aas
or
mov
sbb
inc
into
or
push
pop
xor
adc
mov
pop
iret
xor
enter
mov
inc
lret
in
stc
inc
enter
inc
jae
ficomps
fsubs
xchg
sahf
shlb
in
cmpl
stos
icebp
cmp
sti
and
xchg
lock
repnz
pop
or
sub
cmp
shrl
xor
test
mov
adc
aam
add
sbb
pop
xchg
xchg
mov
lret
add
xchg
lret
mov
jl
iret
cmp
xchg
pushl
dec
int3
pop
rcll
inc
inc
shl
xchg
add
outsb
addps
fcmove
stos
jnp
mov
pop
mov
fstp
jecxz
negb
das
inc
mov
sbb
call
adc
test
mov
subl
push
clc
pop
negl
mov
call
mov
mov
pop
aam
icebp
mov
insl
fbstp
jg
cmpsb
mov
add
jbe
clc
jns
stc
and
jmp
or
jmp
mov
lahf
adc
int
inc
jg
sub
pop
xchg
adc
jmp
js
stc
int3
pop
shl
mov
daa
push
jnp
out
pushf
inc
call
mov
dec
xor
dec
or
jl
out
and
inc
popa
hlt
mov
xchg
out
mov
test
lahf
fnstcw
dec
dec
in
add
add
mov
jae
loopne
cli
sub
inc
jl
cmp
jno
adc
mov
and
or
ret
sbb
push
mov
test
aaa
in
mov
mov
cld
fnstenv
lods
pop
xchg
xor
rcll
jg
dec
sub
and
jne
icebp
adc
adc
sti
xor
repz
popa
push
push
pusha
sub
popa
jbe
cmp
inc
xchg
jno
sbb
xor
jns
add
xchg
xchg
enter
arpl
outsl
nop
and
dec
in
and
jne
pusha
xchg
mov
inc
xlat
js
cmpl
and
sbb
outsl
mov
and
adc
ds
mov
cmovbe
sbb
mov
pop
mov
daa
lds
adc
int3
cs
jg
jns
int3
outsl
scas
and
cmp
mov
jl
aaa
lock
mov
push
cld
add
lahf
push
jl
mov
jbe
call
sbb
in
mov
adc
cltd
xor
lods
sbb
and
sbb
sbb
adc
stos
xor
add
lret
xchg
cmpsb
mov
push
sub
jmp
push
lock
rorb
stos
fstp
addps
std
out
popf
push
sbb
adc
insl
jmp
int
xchg
nop
bswap
movsb
daa
xchg
mov
leave
lret
mov
mov
test
jg
sbb
xchg
pop
xchg
mov
rol
cmc
mov
int3
and
cmpsl
adc
insb
insb
xchg
adc
negb
fnstsw
cmpl
in
nop
call
js
scas
cmp
in
or
or
test
and
sarl
sub
or
xor
stos
push
iret
mov
popf
or
pop
or
sub
push
in
iret
push
xchg
sti
in
test
call
mov
mov
pop
add
mov
mov
sub
and
push
inc
scas
sbb
repnz
jg
mov
in
outsl
idiv
fisttpl
ljmp
scas
outsb
mov
jae
mov
or
jp
sbb
push
enter
lods
mov
xor
cmc
xchg
loopne
mov
pop
xor
adc
push
shll
pop
outsl
sbb
iret
jo
mov
ret
loopne
hlt
scas
push
out
daa
or
mov
aad
sbb
add
cmpb
mov
xor
cli
mov
in
pop
xchg
adc
in
or
test
dec
stos
nop
sub
testb
imul
jo
cli
mov
push
xchg
mov
sbb
mov
orl
js
adc
arpl
xchg
jp
xchg
push
xchg
sbb
stos
xchg
aad
daa
ja
push
push
lret
mov
movsb
lock
inc
xor
jbe
mov
lret
inc
pushf
add
into
fnstsw
lahf
sbb
in
mov
fs
je
mov
test
adc
rclb
cmp
mov
or
test
pop
sbb
sbb
jns
fidivrl
into
and
imul
call
sub
or
stc
pop
adc
es
sti
sbb
inc
xor
in
fsubs
sar
hlt
shl
push
nop
scas
mov
mov
xchg
mov
lds
xchg
xchg
lea
fisubrs
loop
dec
test
arpl
mov
stc
push
ror
cmp
mov
inc
xlat
insb
inc
jge
jnp
dec
jbe
cmp
xor
sub
xor
dec
add
xor
bound
cld
notl
fnstenv
lods
js
lods
mov
filds
movsb
mov
insb
xor
adc
sbb
pop
sbb
call
lcall
out
int3
xchg
sbb
pop
xchg
push
mov
push
lods
out
lock
clc
popf
orb
pop
mov
jnp
sbb
outsb
sti
sbb
test
jno
repnz
loope
cmovns
inc
into
inc
fs
jno
lsl
jg
fsubr
add
icebp
shlb
and
popa
mov
mov
pop
ja
mov
int
jnp
add
mov
add
xchg
mov
mov
adc
mov
shrl
int
test
in
into
xchg
xchg
mov
in
push
stos
loopne
aam
dec
and
cmp
xchg
ret
push
adc
mov
xor
jge
mov
add
mov
xchg
add
inc
subb
jno
enter
push
jmp
inc
arpl
movsb
inc
call
adc
out
adc
out
mov
adc
jb
push
or
in
lret
mov
jno
int3
pop
ficoms
ficoms
pop
and
test
mov
add
outsl
xor
fdivl
jo
stos
in
mov
mov
adc
jae
sub
jecxz
fisttpl
dec
mov
pop
mov
inc
fistpl
xor
cmpsl
ss
xchg
jge
inc
xlat
lock
in
es
cs
inc
and
mov
lods
int3
call
rorb
inc
mov
int
adcb
jmp
mov
in
pop
inc
in
pop
mov
rclb
dec
test
or
mov
ret
inc
add
lea
jb
mov
jns
pop
xor
sbb
nop
lret
or
in
pop
add
ret
pcmpgtb
and
int
push
test
and
insb
pushf
and
rcrl
outsl
bound
pop
add
adc
push
sbb
addr16
pop
pop
sbb
out
nop
pushf
sbb
imul
lods
enter
gs
mov
popa
push
aas
pop
scas
mov
cld
add
test
sbb
popf
insb
fucom
fstl
pop
pop
mov
divb
inc
push
mov
les
adc
push
cmpsl
pop
jnp
and
rorl
inc
xor
mov
mov
repz
pop
mov
and
es
jp
les
cmp
repz
rolb
movsb
jb
ret
aam
movsl
push
mov
push
adc
or
jb
mov
leave
ret
je
test
pop
push
dec
int
pop
stc
mov
fsubrs
adc
out
fidivrl
and
imul
sub
sub
ss
adc
hlt
sbb
pop
mov
test
gs
inc
add
daa
mov
sbb
sub
mov
lds
jo
sbb
int
mov
in
ds
dec
in
dec
sahf
cld
pop
adc
sbb
add
mov
jge
push
inc
and
cmp
push
xor
out
mov
jp
push
cli
sub
dec
cmp
test
mov
nop
ret
movsl
dec
or
mov
repnz
ds
fadds
shr
lods
pop
mov
fstl
push
neg
xor
insl
sbb
xchg
push
out
dec
sbbl
cld
sahf
hlt
lock
xchg
sbb
in
add
pcmpeqd
xchg
cmp
mov
jmp
into
add
xchg
mov
xchg
mov
outsb
ret
jmp
pushf
jmp
ds
xlat
mov
cmp
in
je
sahf
mov
sti
cmpsl
mov
int
dec
adcl
push
pop
or
sub
ss
ror
cwtl
mov
pop
xchg
lds
pop
repnz
inc
sahf
std
mov
xchg
mov
jbe
mov
lret
fisttpll
lahf
lcall
fimuls
sub
pop
push
or
nop
pop
cli
inc
lcall
stos
hlt
add
jmp
mov
lea
aaa
mov
repz
test
fs
inc
mov
pop
lcall
out
and
lret
adc
push
adc
clc
hlt
and
sbb
dec
jle
paddusw
and
xchg
xchg
mov
in
pop
getsec
mov
xchg
insb
mov
jns
xchg
mov
stos
or
popf
xor
std
in
lods
mov
mull
int3
push
loopne
push
int3
dec
mov
clc
inc
repnz
popa
aas
dec
bound
push
int3
test
mov
rcr
cmp
mov
notb
iret
imul
mov
mov
js
lret
movl
jns
std
rclb
imul
sbb
add
imul
jnp
movsb
dec
insl
add
lahf
mov
jecxz
jle
xchg
mov
push
ja
mov
xchg
aaa
sub
out
sbb
fadds
sahf
iret
sbbb
push
scas
ds
mov
add
test
mov
xor
es
dec
push
xchg
push
xor
aaa
inc
mov
jae
pop
adc
sbb
jge
jne
enter
mov
adc
add
repz
outsl
std
xchg
inc
push
insl
sub
xor
pop
inc
mov
sbb
scas
lcall
stos
fdivl
push
lods
inc
add
xor
cmp
push
aad
nop
dec
push
fisttpl
testl
out
mov
xchg
mov
test
mov
sub
hlt
mov
mov
jne
sbb
sbb
test
sysret
pop
push
fimuls
lea
or
aas
pop
repz
or
adc
cmp
ja
push
sbb
lds
mov
push
popf
jb
outsb
outsb
dec
enter
mov
ficoml
dec
and
jb
mov
cmp
or
sub
aad
call
rcrb
andb
popf
stc
and
fdivs
push
add
shlb
in
mov
nop
sti
cli
sbb
data16
mov
mov
or
int3
mov
daa
mov
lret
gs
xor
fwait
cmc
xchg
leave
outsb
cmp
add
mov
cmpsb
out
dec
std
inc
fs
sbb
inc
mov
cltd
scas
pop
js
jb
aaa
pushf
jbe
stc
sub
mov
mov
mov
add
dec
mov
dec
inc
xchg
mov
sub
mov
out
push
mov
adc
mov
mov
lahf
insb
fsubs
aad
insb
dec
adc
out
add
ret
xchg
rcr
pop
divb
pop
inc
in
dec
loope
or
dec
out
adc
push
dec
xchg
xor
out
dec
pop
sub
cmp
mov
int
movsb
xlat
fisttps
insb
pop
data16
add
adc
sbb
jbe
imul
pop
fdivs
fldt
mov
mov
jae
mov
dec
add
or
cs
out
out
hlt
out
movsl
lea
adcl
shl
rclb
cltd
and
or
adc
outsb
adc
sahf
inc
cmp
or
repnz
mov
and
cmpsl
stc
mov
test
rcrl
xchg
test
fimuls
mov
cmp
inc
stos
inc
addr16
faddl
inc
adc
sbb
add
mov
pause
out
nop
lock
push
add
shrb
inc
dec
xchg
icebp
sti
adc
dec
and
sbb
push
mov
add
fcmove
cmp
push
repz
and
dec
fistpll
sub
ret
out
xchg
fnsave
in
jecxz
xor
stos
xorl
mov
repnz
lcall
and
and
les
movsl
pusha
dec
jnp
cmp
jp
sub
push
adc
not
call
mov
ret
or
pop
je,pt
sbb
pop
mov
push
cwtl
sub
jb
push
insb
jno
sbb
test
pop
mov
xchg
adc
fistl
fiadds
jne
in
cli
shll
or
add
add
xchg
inc
xor
je
hlt
and
cli
insl
jne
hlt
jne
jb
stos
ja
clc
cwtl
xor
stos
mov
xchg
jp
fiadds
movsb
sub
push
mov
lds
or
xchg
fidivrl
test
scas
xchg
cmc
dec
xchg
mov
dec
mov
es
test
dec
punpckldq
bound
sbb
sub
mov
adc
inc
xchg
out
cs
leave
cmp
mov
cs
sub
xchg
jo
popa
push
mov
lods
jns
sbb
out
add
call
int3
xchg
jmp
pop
push
adc
or
pop
loopne
or
sub
das
sbb
push
add
jb
les
xor
out
in
scas
fldenv
add
pop
imul
in
jge
dec
int
dec
jmp
xchg
or
add
add
loopne
lods
pop
mov
xor
out
jmp
ficompl
loop,pt
mov
adc
je
pusha
loope
in
cmp
sbb
data16
or
sub
mov
divl
lock
sbb
insl
mov
pop
popa
loop
push
popa
add
mov
repnz
xor
stos
lock
dec
arpl
mov
gs
movsb
add
push
testb
and
dec
add
inc
lods
xchg
aad
arpl
mov
mov
sub
stos
aad
mov
bound
xchg
fwait
cmp
xchg
jno
dec
pop
std
adc
aaa
clc
push
mov
int3
out
sbb
ret
and
out
das
inc
in
stos
shll
fcmove
push
lds
or
xchg
jbe
cmpsb
xor
mov
test
mov
push
loope
fistpll
sbb
mov
adc
push
ja
leave
mov
mov
and
xchg
cmp
add
out
adc
arpl
pop
out
mov
mov
and
lock
sub
inc
les
xor
shrl
sbb
add
lods
shl
mov
shlb
lea
cmp
in
cwtl
scas
pop
inc
pop
pop
and
xchg
out
dec
lea
insl
mov
jle
sub
push
mov
insl
aaa
sti
mov
xor
test
or
sti
andl
adc
in
jmp
or
or
or
cmc
cld
aam
insl
mov
jne
dec
add
pusha
dec
addr16
imul
adc
jb
outsl
and
jge
fnstsw
inc
push
cmp
cmpsb
cmpsb
fstps
jge
es
shrb
mov
cltd
dec
xchg
scas
movsb
push
jl
inc
pop
xchg
lock
insl
push
jno
aam
push
xor
out
pop
pop
loop
jb
mov
cmpsl
jns,pt
pop
dec
fdivs
andb
push
in
mov
pop
cmp
ror
add
jle
rolb
cmpsl
xor
xchg
xchg
push
test
mov
or
jg
into
pusha
lds
or
mov
dec
mov
or
push
fcmovnbe
sub
ret
in
pop
sahf
test
push
fnstcw
movsl
mov
rcr
mov
jo
sub
jb
fidivs
cmp
jae
cmp
std
nop
aaa
cs
ret
push
push
inc
leave
or
pop
mov
iret
xchg
fidivl
into
jo
adc
cmp
mov
mov
arpl
fstl
dec
dec
sub
mov
fstp
pop
sti
add
fistpll
jecxz
test
push
push
arpl
sbb
sub
jae
inc
loope
xchg
ret
inc
jbe
gs
add
push
lods
out
repz
lea
jle
in
fcom
ret
lods
ds
shr
mov
leave
add
imul
in
xor
jl
xchg
mov
in
xchg
lea
sbb
movsl
mov
lret
fldcw
pop
ja
xchg
leave
jo
adc
inc
loopne
mov
dec
xchg
outsb
adc
push
out
xor
xor
jb
and
dec
dec
jo
add
sti
popf
mov
mov
and
jne
sub
ja
hlt
sub
lods
or
jae
dec
jne
aas
mov
cmp
jnp
gs
lret
ljmp
out
adc
ljmp
stos
js
add
lds
pushf
lods
fsubrl
into
div
insl
and
rcll
lret
pop
ljmp
inc
lahf
push
das
sbb
push
movsb
and
cltd
pop
xlat
leave
add
push
xchg
xchg
scas
aad
mov
test
ljmp
cltd
mul
shll
adcb
in
inc
dec
icebp
rcr
imul
mov
iret
push
andb
cli
mov
cmp
fsubs
push
xor
repz
leave
mov
in
xor
imul
jmp
add
push
add
es
fcmovnu
xor
push
jp
adc
test
cmp
aam
or
cmp
adc
sub
out
adc
dec
pop
imul
clc
in
lods
call
out
push
sbb
dec
aam
iret
push
mov
loopne
cmp
sub
xlat
pusha
and
cmp
loopne
push
data16
push
arpl
push
or
add
mov
repnz
aas
push
jecxz
sub
lods
inc
ret
shll
into
dec
imull
mov
jmp
cmp
pop
lds
inc
jge
in
jmp
hlt
xchg
pop
jle
jg
pushl
fwait
clc
pop
jae
enter
sbbb
push
lret
mov
mov
inc
and
js
jo
and
inc
xlat
and
push
mov
lods
rorl
cmp
xor
push
push
lret
push
xor
dec
fiaddl
ret
fwait
rclb
adc
sbb
push
popa
pop
loope
jmp
sub
stos
jmp
cmpb
aaa
cs
mov
stc
imul
cmp
aad
cs
nop
insb
jmp
adc
popf
add
fldl
sbb
mov
sbb
ret
jne
and
mov
lock
push
inc
jge
cmp
lea
dec
mov
adc
nop
pop
daa
insb
xchg
mov
arpl
imul
arpl
cmpsb
out
mov
std
testl
fcmove
es
xor
adcl
jns
sub
fisttpll
mov
mov
pop
mov
sbb
sbb
xor
lods
mov
adc
xor
ror
jno
jge
popa
ret
mov
jle
jp
push
sub
ficomps
mov
add
jno
jns
push
sbb
push
adc
test
sbb
fwait
in
add
sbb
cld
ss
adc
es
cmp
ficomps
fwait
xor
lock
add
rolb
push
cmp
inc
xchg
jne
pop
aad
xlat
popa
xor
and
bound
adc
sahf
jp
jbe
shl
mov
sahf
mov
in
int
add
cmp
gs
xchg
xor
in
dec
mov
mov
movsl
mov
daa
dec
cmc
cld
into
in
mov
ss
imul
add
add
push
mov
mov
ret
in
dec
mov
in
cli
cmp
add
and
sbb
push
xchg
mov
mov
jo
das
std
aam
lret
pop
or
loop
jno
lret
add
cmc
lock
xor
int3
push
out
xchg
lret
cs
pop
andb
aaa
decl
lret
inc
mov
or
xlat
sub
jnp
inc
call
mov
mov
rclb
inc
and
mov
mov
in
int
mov
mov
sti
dec
dec
sbb
or
mov
pop
dec
sub
fidivs
incb
data16
test
fwait
push
mov
fs
sub
cmp
not
ss
mov
das
aad
cs
ss
rcll
add
inc
xchg
inc
je
cmp
mov
mov
arpl
daa
mov
push
xlat
inc
fildll
jne
daa
mov
add
inc
out
inc
mov
and
jno
fisubs
aas
adc
and
sbb
adc
sub
push
imul
and
adc
push
jmp
call
icebp
daa
pusha
xor
xlat
out
pop
rolb
add
mov
out
fnsave
in
and
imulb
fdivp
test
mov
pop
xchg
fisubl
lods
aam
xor
fldt
mov
les
inc
sbb
pop
test
push
mov
imul
iret
mov
add
sub
push
add
enter
ja
jp
sbb
hlt
mov
pusha
cmp
pop
lcall
jmp
mov
jnp
sbb
xor
push
dec
loop
js
mov
sub
xchg
repz
icebp
rcl
test
shlb
std
js
lahf
scas
mov
cmp
and
cmp
pushf
push
int
cmp
test
ja
sub
pop
cmp
lahf
cmc
mov
sub
and
mov
add
mov
shll
sahf
cli
add
es
dec
push
stos
push
sbb
sub
imul
mov
adc
scas
push
sbb
pop
and
dec
and
add
inc
movsl
jno
mov
call
adc
scas
push
sbb
adc
jecxz
out
test
jmp
pop
scas
jnp
imul
in
clc
sub
xchg
test
orb
rorb
pop
int3
loop
test
cmc
rol
js
int
mov
jbe
and
cs
jae
push
cmp
lods
ret
nop
add
in
push
imul
mov
mov
daa
repz
aad
in
jnp
call
movsb
pusha
pop
and
lods
jl
stos
jp
jbe
lret
fmuls
popf
cltd
sub
sbbb
mov
repnz
or
icebp
xchg
add
dec
cs
mov
xor
inc
jl
movsl
dec
pop
data16
repz
sbb
cmp
adcb
and
imul
pop
mov
and
inc
dec
jne
iret
push
push
in
sarl
std
pop
xchg
add
push
lcall
in
xchg
add
aam
aam
jnp
push
add
adc
cmp
clc
mov
loop
outsl
repz
cmp
mov
push
lret
in
push
lret
jnp
xor
pop
sbb
je
andl
cmpsl
mov
sub
xchg
jae
adcb
movsl
cmp
mov
mov
push
sarl
clc
sub
fnstsw
xor
mov
lds
jmp
cmc
mov
scas
stos
in
jb
xchg
sub
push
jnp
push
and
lcall
push
jae
stc
push
dec
add
sbb
in
out
ficoms
mov
jne
notb
push
push
inc
pop
lods
popf
arpl
dec
outsb
cwtl
or
mov
dec
in
jb
add
pop
inc
xchg
mov
adc
adcl
js
mov
adc
notb
or
cmp
push
xchg
stc
test
into
fwait
sbb
cmp
lahf
mov
pop
popa
sbb
fsubrl
pop
int3
and
dec
add
ds
mov
repz
mov
stos
xchg
mov
aaa
xor
mov
lods
shr
stc
pop
into
in
push
pusha
ljmp
push
jmp
pop
aad
mov
rorb
popa
jmp
pop
jmp
xchg
inc
ficoms
mov
mov
jge
push
sbb
mov
pop
sbb
insb
sbb
cmp
mov
data16
sahf
insb
push
adcb
les
fsubs
shld
repnz
dec
jnp
incb
loopne
inc
imul
push
mov
xor
mov
iret
adc
shrb
xchg
daa
jg
fsub
inc
insb
mov
adc
fmul
mov
out
in
push
fimuls
mov
in
jmp
xor
push
arpl
push
jns
loopne
cmpsl
add
xor
push
hlt
aad
aam
out
cs
jb
sub
and
fwait
test
mov
fcom
daa
pop
inc
or
js
xor
mov
arpl
lods
ret
cli
ss
pop
ficoms
xor
xor
cmpsl
mov
cwtl
mov
inc
popf
adc
lret
xchg
loope
and
xchg
pushf
hlt
out
test
je
jb
hlt
cld
mov
inc
jmp
jp
adc
jno
mov
nop
aas
fsubs
xor
push
rcrb
push
xchg
push
sahf
push
daa
jb,pt
and
cmc
dec
lods
fsubs
mov
cld
cmc
inc
shrw
pop
xor
cmp
mov
mov
push
adc
shlb
add
push
sub
xor
cmp
hlt
cwtl
pop
sbb
xchg
popf
push
popf
fcoms
bound
push
outsb
cli
adc
js
xchg
sbb
aad
cld
ret
push
xor
stos
mov
mov
in
mov
sbb
xor
stos
dec
cmpsl
int3
or
ret
jmp
ss
shlb
mov
and
ja
ficompl
bound
cmp
fistl
in
adc
out
cmp
mov
lcall
adc
push
pop
in
or
or
in
scas
inc
pop
mov
push
cmpsb
and
xlat
std
pop
sti
add
stos
mov
setbe
sub
push
fs
xchg
cltd
xor
jge
lcall
xlat
test
and
pop
out
loopne
mov
dec
loopne
jge
push
cmp
xor
lds
imul
cmp
sbb
lock
mov
xchg
sbb
inc
mov
xor
nop
ja
inc
out
icebp
xchg
inc
repnz
xchg
das
inc
pop
int3
dec
lods
push
adc
in
mov
popa
inc
lahf
adc
pusha
ror
cmp
icebp
cltd
stos
cmp
xor
jmp
xchg
inc
push
mov
or
mov
xor
inc
add
filds
jp
test
jnp
insb
std
pop
cld
jnp
jb
mov
out
push
xor
dec
loop
inc
popa
adc
adc
std
lods
push
mov
xchg
js
daa
outsb
adc
out
sbb
stos
mov
jne
or
outsl
fimuls
jmp
out
mov
dec
mov
and
or
arpl
push
pop
ja
push
mov
cmp
adc
cld
push
mov
push
and
cmc
fs
cmp
mov
pop
mov
or
and
cmpl
leave
inc
xor
mov
pop
or
add
and
mov
pop
outsb
out
test
sbb
mov
jge
stc
push
add
adc
sub
jl
add
or
jne
lret
imul
pop
fdivrl
jecxz
sub
mov
sbb
xor
inc
cmp
xor
mulb
mov
scas
xchg
xor
inc
ja
and
mov
ss
pop
nop
mov
dec
iret
in
ret
and
stos
imul
or
mov
sbb
mov
pop
jnp
xor
je
cmp
mov
adc
notl
hlt
push
jmp
jno
and
and
pop
jo
cmpsb
cmp
push
cmp
repnz
es
jmp
push
jmp
mov
faddp
fistpll
and
add
xor
jno
mov
fiadds
xchg
and
sub
sbb
pop
xabort
test
pop
push
int
loopne
subl
push
in
and
cmpsl
imul
mov
inc
je
rcrl
ja
stc
mov
enter
lods
jo
sbb
push
pop
cwtl
and
push
pop
insl
cmp
xchg
loopne
scas
push
xor
dec
out
mov
pusha
add
rorb
fldl
das
inc
add
icebp
pop
pop
lret
aaa
icebp
mov
pop
sub
inc
mov
subl
jne
stc
addr16
add
push
enter
sbb
lret
add
daa
out
insl
call
mov
insb
pop
mov
and
fs
stos
fxch
jbe
push
sbb
hlt
mov
adc
sbb
stos
push
inc
sub
pushf
jbe
add
mov
xchg
mov
dec
arpl
cld
test
enter
mov
js
stos
and
sbb
cmpsb
js
mov
loopne
inc
loop
mov
xchg
shll
jae
test
dec
mov
dec
xchg
mov
jp
sahf
fsts
in
mov
outsl
mov
shrb
aad
clc
incb
xor
dec
mov
adc
clc
divl
aas
sub
dec
pop
mov
out
into
movlps
mov
pushf
xchg
cmpsb
fisttpl
sbb
shr
mov
mov
lods
cmp
inc
cmp
lcall
mov
fdivrl
jmp
repnz
sub
mov
add
sbb
cmp
or
int
xlat
push
popf
mov
or
cs
cmp
push
test
aam
xchg
das
xor
dec
cmp
sar
xchg
pushf
movsb
and
call
std
xchg
sbb
out
mov
xchg
lods
sbb
push
imull
xchg
outsb
je
pop
lods
inc
push
insb
nop
ljmp
and
cmpb
in
or
mov
mov
scas
jecxz
xor
roll
in
jmp
insb
imul
scas
in
pop
or
sbb
dec
aaa
fnsave
fwait
ljmp
leave
ds
sbb
mov
lds
cld
mov
pop
popa
repz
dec
jge
outsb
out
imul
mov
xchg
lods
sti
xchg
andl
mov
stos
lods
cmp
cmpsb
sub
iret
push
cmp
push
xchg
xor
xor
inc
push
lret
jo
inc
test
ror
hlt
je
jb
and
jmp
je
dec
mov
ds
add
mov
jl
cmc
add
mov
push
xor
dec
xor
ss
mov
es
pop
das
pop
xchg
jge
inc
add
insl
inc
rcl
cmp
adc
cmp
pop
lea
mov
fmull
mov
push
mov
mov
jle
fmulp
xorl
push
xor
add
in
test
inc
in
dec
iret
das
push
mov
cmp
jnp
push
mov
cmp
push
mov
stc
xor
popf
mov
lds
mov
sub
call
xor
push
pop
ficomps
xor
lret
mov
lcallw
test
idiv
jle
je
and
xchg
sti
xor
mov
in
mov
adc
dec
dec
fistpll
jp
cmp
jno
jno
jl
stos
pop
mov
out
pop
mov
push
jle
addr16
and
call
xor
sub
sbb
sub
sbb
repnz
add
xorb
mov
sub
ficompl
popf
loopne
adc
insl
sbbl
adc
or
je
leavew
pop
sub
imul
loopne
jl
stos
arpl
jge
pop
jge
mov
lods
mov
rcrl
ss
iret
out
imul
mov
ja
pop
xchg
leave
sub
test
fistl
fs
lea
push
testl
pop
daa
aam
mov
push
arpl
dec
mov
inc
call
xor
sti
push
xor
xchg
mov
mov
jne
loopne
xchg
dec
add
pop
and
mov
or
xor
enter
jl,pt
mov
imul
out
cmp
adc
inc
lahf
in
mov
jns
pop
mov
add
test
es
in
mov
or
sbb
pop
out
repz
jno
fnstsw
out
cltd
mov
mov
stos
sahf
movsl
xchg
push
push
dec
into
into
push
sub
dec
cmp
pushf
loop
jp
pop
pop
jno
and
xchg
imul
dec
push
mov
ss
sub
iret
sub
outsb
mov
fdivr
out
cmp
in
loope
xchg
loopne
pop
dec
sub
pusha
jl
loop
add
push
in
lret
sbb
pop
inc
loop
adc
cld
out
sub
inc
push
jle
lret
orl
add
pminub
pop
sub
push
aad
pop
mov
sub
ja
cmp
push
and
jecxz
outsb
pop
cmp
lcall
inc
repnz
cmpsb
jle
add
dec
push
fdivl
iret
mov
test
call
lret
fisttpll
xchg
ror
incb
jno
movsb
inc
pop
sub
sub
jnp
mov
inc
sbb
scas
mov
pop
mov
imul
rcrl
xor
aam
cmp
adc
xor
sti
adc
cmp
push
enter
cmpsl
mov
pop
xlat
in
int
jns
add
or
dec
gs
je
mov
jge
mov
out
incb
call
out
and
push
cmp
mov
jp
jle
arpl
xchg
cmp
cmp
rcll
arpl
sub
aas
int
jecxz
xchg
jge
std
cmp
and
xchg
lods
jp
xor
sub
sub
sub
movsb
mov
inc
daa
xchg
int
loopne
or
or
add
das
mov
push
ficompl
ljmp
out
fldenv
xor
jle
sarl
xchg
or
sar
lea
and
inc
jo
and
inc
sti
or
repz
enter
rcrl
xchg
aaa
or
imul
bound
mov
rolb
sub
daa
cmpsl
paddusb
xor
push
sub
cmc
fldt
faddl
and
inc
pop
bound
mov
jle
xor
xchg
sub
jmp
cmp
push
sub
sbb
popa
movsb
insb
cmp
in
outsl
les
push
icebp
xlat
mov
insb
aam
or
jae
push
adc
xlat
fmull
repnz
movsl
sub
xor
dec
mov
lcall
cmc
sbb
int
or
es
sub
cld
loopne
adcb
lds
mov
xchg
lcall
out
mov
repz
or
mov
push
scas
xchg
push
stos
xor
push
insl
outsl
xor
mov
jp
jp
std
cmp
xchg
outsb
xchg
outsl
mov
add
xchg
enter
inc
mov
mov
cmp
popa
cmp
jnp
sub
push
stos
or
mov
xchg
test
xchg
push
dec
clc
xchg
ss
out
xor
int3
jns
rol
out
sbb
insb
int3
mov
push
out
test
adc
xor
icebp
adc
sahf
lods
xchg
pusha
mov
fnsave
adc
inc
push
out
sbb
in
cwtl
fsubp
mov
into
mov
cmpsl
arpl
pushf
pop
mov
pop
xchg
repz
rorl
repnz
mov
in
in
orb
or
iret
movsl
inc
testl
xor
jnp
add
insb
and
push
pushf
adc
pop
fs
fidivs
cwtl
popa
scas
loopne
jo
out
push
aaa
stos
pmulhuw
add
dec
jb
lcall
js
add
adc
mov
dec
sti
push
mov
or
addr16
loopne
in
outsb
jmp
loop
call
mov
mov
xchg
mov
divl
xor
ljmp
stos
xor
test
mov
pop
mov
cmp
pushf
fisttps
cmp
dec
mov
clc
sub
mov
lods
mov
lcall
sbb
pop
xchg
push
aad
leave
add
aaa
ret
data16
push
add
or
adc
je
hlt
out
adc
cmp
inc
lds
sbb
ror
push
mov
adc
fsubrs
sub
lods
loope
aaa
sbb
pop
or
or
xchg
call
cmovb
aad
or
sub
pop
inc
inc
fimull
shlb
aas
into
stc
inc
outsb
aam
add
push
in
lea
mov
jo
xor
mov
stos
push
pusha
jl
jge
sub
inc
fcmovnb
cwtl
aam
pusha
lds
call
or
and
push
imul
or
push
pop
fdivl
std
notb
sbb
loopne
in
ja
jmp
pop
xchg
sbb
lahf
add
cmp
push
xlat
push
dec
sub
push
mov
aaa
push
add
mov
aam
fs
inc
dec
popa
into
mov
jo
fcmovnu
mov
stc
sub
mov
or
aad
dec
push
or
or
push
scas
mov
nop
mov
jmp
or
pop
aam
xor
cltd
cmp
cmp
fdivrl
test
insl
loop
cmp
sahf
adc
or
jno
fidivs
or
mov
fisubrl
mov
loope
fnstcw
sbb
push
xchg
lea
cmp
stc
cwtl
sbbl
cmp
clc
jo
mov
sbbl
xchg
mov
inc
xor
mov
jo
or
dec
imul
loope
sub
push
inc
iret
xchg
jno
and
cltd
mov
fsubrp
int3
lock
add
mov
push
pop
cwtl
pop
mov
cmp
pop
mov
bound
xchg
and
roll
xchg
mov
jbe
dec
inc
sbb
xchg
or
std
mov
test
stos
bnd
mov
mov
pop
add
sub
sub
clc
jmp
sub
pop
xchg
popa
sub
cwtl
ja
clc
rorl
lods
push
sbb
pop
vcvtpd2psx
arpl
dec
or
dec
les
orb
repnz
test
daa
pop
adc
mov
mov
aad
cwtl
dec
and
cmpsl
mov
out
inc
movsl
int3
or
test
sub
pushf
mov
movsb
add
dec
popf
fnsave
or
iret
jns
sbb
push
aad
movsl
iret
cwtl
loope
fldt
lahf
inc
sbb
clc
bound
cmp
ljmp
pushf
mov
lds
xchg
xor
pop
out
inc
lret
xchg
pop
fimuls
mov
push
int
imul
scas
jns
mov
jne
cmp
lds
and
dec
mov
nop
dec
rorb
pop
adc
inc
mov
pop
dec
mov
push
nop
mov
jp
or
cli
mov
int
push
xchg
push
jmp
fsubr
sbb
cmc
std
push
xchg
das
xchg
cli
sub
jge
sub
test
sahf
inc
push
mov
stc
cmpsl
je
imul
mov
roll
pop
dec
xchg
jg
push
jns
mov
daa
mov
and
sahf
in
inc
outsb
mov
mov
outsl
outsb
xchg
pop
addr16
push
inc
or
ljmp
mov
out
mov
inc
in
and
inc
sub
jnp
stos
fwait
sahf
sub
dec
dec
and
inc
pop
push
jae
repnz
ret
out
fst
sti
lock
sbb
loope
and
icebp
push
push
jo
cli
sub
in
jecxz
pop
sbb
out
inc
arpl
xchg
scas
adc
aam
mov
cltd
and
mov
and
pop
pop
mov
cmpsb
lock
dec
test
and
addl
loopne,pn
lods
push
add
test
xor
add
or
decl
mov
push
lea
or
ficompl
imul
xor
scas
pop
and
jp
sbb
sbb
insb
aad
in
adc
and
lcall
add
cmp
addr16
sub
mov
and
mov
mov
push
icebp
enter
imulb
nop
or
roll
dec
mov
dec
inc
es
aas
test
pop
pusha
xor
mov
lods
daa
aas
cs
or
fwait
cs
scas
dec
lcall
es
mov
rol
test
jno
in
jno
ds
and
std
add
mov
or
adc
jnp
ss
mov
movsb
test
cld
fidivrl
cmp
xchg
and
ds
jae
es
ret
sti
neg
aaa
pop
mov
bound
push
mov
daa
fisubrl
push
lock
cmp
ret
lock
enter
mov
dec
cmp
xchg
sub
ds
std
lcall
in
push
cmp
cmpsb
push
jae
mov
loop
sbbl
sbb
xchg
mov
gs
insb
ss
arpl
loop
stos
stos
mov
cmp
mov
shll
sahf
int3
int3
int
add
sbb
fwait
push
xchg
hlt
sti
outsl
hlt
inc
aas
xchg
imul
stc
insb
mov
push
lret
std
out
inc
cli
dec
inc
mov
cmp
scas
test
insb
jl
mov
and
xchg
ljmp
popf
cs
rcrb
cmp
mov
jmp
or
lods
adc
lock
mov
mov
das
jno
xchg
popa
jle
push
insb
xchg
std
push
mov
std
test
lret
jae
leave
int
andb
push
and
push
sti
fdivrl
mov
mov
push
mov
sub
dec
ss
mov
sub
mov
popf
xchg
loop
inc
sbb
std
stc
fiadds
inc
std
shrb
xchg
fildl
push
cmp
fwait
mov
push
lahf
sub
mov
es
fstpl
xchg
adc
pop
pop
pusha
xchg
lahf
cltd
andl
push
clc
ljmp
mov
cmpsl
test
push
lds
je
int
jns
aaa
jle
loop
mov
xor
mov
push
or
pop
add
mov
lahf
mov
aas
int
adc
ja
out
or
in
addr16
sahf
xor
scas
int3
jecxz
shll
mov
nop
pop
xchg
jg
pop
sbb
insb
stos
leave
dec
add
xchg
orl
cmp
xchg
xor
lret
pusha
test
les
mov
sbb
rcpps
lock
aas
pop
pop
dec
hlt
and
stc
dec
ss
ret
inc
jle
aas
sbb
rorb
int3
cli
roll
aas
push
push
mov
fistpll
das
loope
xor
mov
frstor
outsl
js
flds
test
inc
fsubrl
sub
pop
fnop
fadds
add
jnp
lds
push
scas
push
js
in
dec
syscall
jno
sbb
jecxz
pop
push
xchg
mov
sbb
sar
and
int3
loopne
xor
sub
mov
add
xor
mov
cmpsb
mov
and
dec
mov
mov
les
sub
pushf
nop
ljmp
test
dec
ror
dec
adc
fs
and
mov
pop
fprem
jo
ss
add
je
jge
add
adc
pop
aas
xor
xchg
mov
xchg
add
inc
stos
sbb
dec
mov
fldcw
push
movsb
add
xor
cld
sti
lret
cmp
ffreep
pop
xchg
cmp
loope
push
jno
or
sbb
lds
and
enter
into
jle
xchg
mov
mov
push
mov
adc
rcll
lahf
pop
in
repnz
out
ja
shlb
jmp
ss
inc
mov
cmp
jecxz
push
mov
cmp
rol
shlb
filds
mov
dec
lock
ret
cmc
jmp
into
arpl
sahf
sti
xor
push
mov
mov
int3
scas
loope
jno
mov
mul
mov
push
addr16
jae
hlt
push
jle
bound
das
xor
loop
test
inc
sub
sti
push
hlt
test
inc
add
incl
loope
adc
jmp
xor
addr16
push
enter
ds
xchg
pushl
cmpsl
mov
sub
jg
ror
and
inc
jne
push
in
or
pop
xlat
hlt
bound
and
shrl
test
sarb
pop
or
idivb
es
std
lret
mov
lock
mov
sbb
dec
and
xchg
mov
loope
sbb
pop
or
mov
filds
jb
push
sti
xor
in
lock
mov
xorl
cmp
adc
ljmp
and
cmp
ja
ret
inc
mov
fs
push
repnz
in
inc
iret
enter
dec
aam
loopne
cli
in
mov
or
lret
jg
mov
pop
inc
aad
nop
rcll
cmp
es
mov
cmpsl
mov
push
addl
mov
arpl
pop
ret
add
aaa
or
cmp
mov
jg
jbe
pushf
add
ds
fisttpll
lcall
pop
jecxz
loopne
jmp
loopne
lock
stos
negb
or
idivb
and
mov
push
fst
lods
sub
inc
repnz
sti
cmpsb
jecxz
imul
jmp
in
js
sub
inc
cmp
add
jmp
pop
pushl
das
arpl
sbb
incb
cmp
cmp
imul
les
xor
push
lcall
xlat
mov
stos
or
mul
iret
pushf
lret
fwait
or
sbb
cmc
pusha
mov
push
clc
mov
push
ret
dec
inc
xchg
lret
scas
aaa
xor
cmp
push
add
test
xchg
ds
xor
or
or
cmpsb
dec
dec
xor
push
sub
ret
inc
dec
add
adc
nop
inc
jne
pop
std
jno
dec
jbe
test
sub
pop
sbb
in
imul
lock
xchg
mov
clc
sub
adc
mov
mov
jne
cmp
dec
lds
mov
mov
mov
sub
hlt
sub
or
xchg
xchg
cmp
ljmp
dec
add
xor
sbb
jg
mov
dec
lods
and
int3
aad
in
roll
jmp
jp
mov
cmp
xor
and
mov
test
jbe
loope
push
negb
aad
sbb
pop
in
and
sub
dec
gs
jg
test
fs
xchg
inc
mov
cmpsb
addl
cwtl
mov
add
or
lcall
cmpsl
ja
pop
cmp
sub
mov
jle,pn
push
out
jge
mov
adc
mov
fstpl
mov
rorb
insb
cmpsb
pop
xor
jbe
xchg
out
mov
outsb
jecxz
cmc
leave
jne
fildll
shll
jl
mov
jp
mov
movsb
adc
sbb
pop
sbb
enter
pop
cmp
adc
jl
xor
repnz
mov
xor
lret
jo
adc
je
adc
arpl
mov
pop
out
cmp
shrb
inc
pop
xchg
inc
fsubrs
add
mov
cmp
cli
sbb
fnstcw
dec
push
cmp
imul
in
cmp
movsb
mov
inc
mov
out
cmp
cmpsl
and
push
dec
xchg
lds
pop
xchg
xchg
ljmp
or
dec
pop
callw
gs
sub
pop
jge
jl
daa
xchg
mov
dec
push
cmpsb
into
mov
jne
inc
jg
jmp
xchg
stc
or
cmp
int
repz
inc
mov
out
es
fmull
ss
cmp
cmc
aas
sbbl
lods
in
aaa
vorpd
pop
jle
shl
ror
addb
sbb
cmc
xchg
hlt
jbe
hlt
stc
cs
popf
lcall
mov
or
je
jo
xor
push
push
lods
enter
stos
int3
sbb
insb
fiadds
ja
outsl
lahf
nop
mov
xchg
cmp
adcb
mov
ds
jns
xstore-rng
cmpsl
inc
pop
shrb
sbb
xor
and
scas
push
and
mov
adc
sub
sub
sub
jle
sbb
fs
lods
into
and
adc
dec
fistl
jbe
insb
icebp
inc
ret
xor
push
push
dec
jmp
sub
push
pop
mov
xor
fisttpl
iret
sub
mov
adc
cmpsl
add
dec
mov
and
shr
mov
add
sbb
inc
scas
pop
insl
or
cmp
sub
pop
add
repz
outsl
aad
jecxz
mov
pop
mov
rorb
pop
jle
mov
push
xchg
popa
scas
inc
push
outsb
aaa
repz
sbb
pop
mov
add
mov
ds
pop
js
test
and
add
dec
mov
daa
mov
mov
fwait
mov
lahf
xchg
ljmp
and
aad
pop
stos
lret
ror
cmp
stos
cmp
mov
jbe
dec
dec
test
jmp
mov
enter
cli
jnp
aad
rcr
sarb
mov
mov
bound
insl
xchg
or
test
dec
movsb
cltd
inc
cwtl
or
fisttps
aam
mov
int3
mov
imul
into
add
loope
jge
dec
shll
stos
mov
nop
or
das
std
fnsave
mov
jo
repnz
loope
jge
pop
adc
mov
scas
mov
in
fdivp
pusha
fisubs
insb
ret
xchg
adcb
mov
jno
add
call
cmc
stc
xor
push
negb
mov
or
xor
lods
xchg
xor
add
scas
imul
ja
add
adc
out
push
jmp
sti
mov
sbbl
jg
out
lret
add
out
es
std
daa
rcr
or
dec
xor
mov
xor
out
mov
mov
dec
pop
mov
inc
addr16
cmp
xchg
jmp
arpl
dec
punpckhwd
hlt
xchg
hlt
inc
pop
push
xchg
sub
inc
sbb
adcb
test
aam
jnp
aas
push
jae
jae
xchg
sub
pop
jecxz
add
adc
clc
xchg
cmp
test
xlat
mov
sub
stos
inc
jb
in
inc
ret
jg
arpl
repnz
push
fisttps
in
and
fwait
aaa
ret
mov
aaa
ret
mov
mov
jp
iret
push
ud0
leave
scas
inc
js
xor
jno
pop
xor
pop
and
jo
cmpsl
xor
rcrl
dec
mov
and
mov
dec
xor
sub
or
xchg
js
push
out
dec
cmpsb
sbb
mov
ret
push
iret
pop
outsb
arpl
roll
pop
add
push
sahf
cmc
jo
push
cmp
ds
mov
and
ljmp
add
nop
mov
xor
roll
dec
cli
mov
dec
pop
sub
pop
and
daa
stc
lds
rcr
xchg
sbb
adc
jmp
push
push
out
inc
adc
sub
pop
nop
pop
mov
mov
jmp
pop
les
out
pop
xor
or
outsl
mov
push
lods
mov
jmp
xlat
fbld
test
into
add
and
push
sbb
mov
jae
or
or
add
fidivs
xor
icebp
push
xor
test
int
inc
push
jae
in
int
in
stc
fists
lahf
shrb
in
call
fwait
test
adc
ret
mov
out
cmp
push
xchg
ds
sub
aaa
outsl
mov
lea
pushf
push
mov
push
repz
adc
inc
in
xchg
cmpsl
daa
push
jo
push
mov
mov
adc
push
mov
dec
out
pavgw
mov
stos
xchg
sub
xor
aam
mov
adc
push
movsl
mov
mov
int
and
mov
mov
in
and
xlat
and
sbb
inc
lcall
adc
add
loop
cmp
push
push
xlat
cmp
or
or
iret
call
out
mov
lret
and
mov
shll
cmpl
out
mov
mov
cmc
push
xchg
add
call
mov
or
ja
jp
or
fdivrl
mov
adc
dec
mov
cltd
and
nop
out
inc
imul
sbb
daa
inc
test
sub
outsl
fildl
or
shll
mov
cmp
das
pop
daa
sbb
jb
jl
mov
lret
mov
andb
hlt
test
insl
push
mov
jecxz
add
lret
jo
incb
mov
popf
sbb
push
mov
add
leave
gs
jecxz
fbstp
popa
and
rolb
loop
add
mov
lods
mov
jmp
lea
xor
cs
stos
mov
imul
cmpsb
adc
pop
sbb
mov
fcompl
mov
jnp
test
mov
and
push
ret
cmpsl
adc
cmp
xor
jge
jge
movl
sub
lret
jns
sub
shrb
das
shrb
sbb
mov
xchg
sti
jnp
stc
repnz
sbbl
or
cmp
aas
mov
sub
sub
fwait
cmp
sbb
cmp
inc
push
xchg
sti
push
lods
jb
test
adc
leave
jg
cmp
or
in
aad
xchg
fidivrl
test
adc
pop
adc
xchg
fmuls
sar
jb
push
js
sbbl
ss
inc
std
jg
mov
loope
rcll
aas
ljmp
inc
ss
sbb
test
sub
cmp
jl
sub
xor
mov
movsb
fists
jo
ret
scas
rorl
aas
push
add
mov
mov
sahf
xchg
or
std
dec
mov
loopnew
cmp
inc
or
repnz
stos
adcb
ja
mov
inc
dec
or
arpl
jb
cli
rorb
inc
mov
jg
inc
scas
scas
ds
push
jmp
xchg
jnp
shrb
rorb
sti
ljmp
cli
mov
roll
jl
xchg
push
sub
push
int
cwtl
loopne
cmp
aas
cmp
fdivrs
push
pop
jp
sub
push
aas
and
addps
and
out
movsl
jno
cmp
inc
sbb
cmp
xor
xlat
pop
fdivs
and
xchg
es
jecxz
ret
sub
push
or
cmc
mov
mov
push
ror
idivl
into
xor
xchg
aaa
pop
jne
outsl
idivb
orb
or
loopne
lea
ds
xchg
dec
and
cltd
push
loope
pop
repnz
xlat
lret
daa
in
jl
aas
je
mov
push
bound
push
cli
lret
add
pop
bnd
sub
jnp
shrb
aaa
jbe
or
cltd
mov
jnp
push
jne
and
inc
or
mov
mov
daa
es
or
cmp
lahf
lret
push
sti
jns
xchg
jo
lahf
mov
sbb
les
movsb
clc
clc
sbb
cmc
in
fistps
mov
stc
and
popf
pusha
push
and
sbb
in
pop
and
ret
ficompl
out
adc
popf
dec
insl
xorb
jg
addr16
mov
loop
aad
dec
in
enter
mov
xchg
fwait
insl
or
jl
daa
inc
pop
insl
xor
nop
adc
cmp
out
negl
aas
adc
lret
xor
xor
xchg
pop
nop
xor
inc
xor
inc
fmul
jmp
push
ljmp
iret
or
add
jecxz
cltd
jno
sbb
je
dec
jp
lods
add
faddl
in
mov
jg
sbb
push
mov
push
cmp
jg
cli
enter
fiaddl
inc
pop
rorb
sub
mov
mov
mov
jno
dec
dec
mov
inc
mov
mov
sbb
adc
ret
imul
xchg
test
mov
in
jmp
adc
in
sbb
imul
jb
adc
pop
fs
adc
addb
cmpsl
adc
cmp
push
sub
lret
imul
call
in
iret
mov
jb
sarb
mov
pop
push
sti
into
jle
inc
pop
ja
sbb
aaa
addr16
pop
fwait
push
insb
mov
inc
stos
adc
mov
lds
mov
or
pop
scas
std
adc
dec
add
enter
or
push
sbb
jns
idivl
xchg
xchg
scas
out
aam
dec
ds
int
inc
push
repz
cmp
cmp
and
adc
imul
pop
hlt
jne
frstor
addl
or
add
mov
jno
imul
push
test
and
xchg
sbb
mov
adc
inc
sbb
jl
mov
cmpsl
addr16
xlat
inc
fdivrs
xor
mov
cmpsl
stos
mov
sub
int
sub
addr16
out
mov
and
dec
push
push
imul
or
or
mov
xchg
ss
xor
mov
push
or
jmp
cmpsb
repnz
jge
insl
dec
flds
negl
mov
xor
ret
sub
sar
push
pop
subl
mov
das
fwait
aas
loope
in
or
mov
xor
les
mov
cmpsl
jae
cli
sti
jmp
movsl
mov
add
int3
sahf
pop
mov
aad
add
mov
jb
lock
mov
push
dec
sub
out
shrl
pop
add
int3
gs
push
pop
orb
or
in
pushf
scas
arpl
xchg
and
int
lock
cmpsl
fsubrs
add
pop
push
mov
push
cmc
jp
stos
or
adc
lock
xor
mov
in
adc
add
mov
add
or
add
cmp
popf
outsb
mov
fs
scas
jo
dec
stc
notb
in
cld
sub
mov
insl
addr16
push
gs
jle
pop
push
sub
fstpl
xor
lock
fiadds
push
dec
dec
mov
xor
jp
enter
dec
sahf
lea
data16
jge
das
and
imul
mov
notb
sub
sub
xchg
jns
pushf
dec
adc
push
adc
fnstcw
inc
ds
mov
xor
in
push
imul
xchg
mov
jo,pt
outsb
jb
stos
xorl
outsb
popf
inc
fwait
ds
enter
push
gs
jb
sub
cmp
mov
lock
push
loope
pop
xor
or
sbb
mov
lcall
xchg
sub
fadd
mov
nop
lahf
mov
arpl
out
loope
fisttpll
jns
jae
in
cmpl
push
loop
sbb
push
mov
movsl
test
and
pop
scas
dec
cld
movsb
add
dec
ljmp
or
and
stc
nop
cmpsb
fs
sbb
mov
lods
cmp
mov
xor
add
jne
ss
jecxz
int
mov
xchg
xor
shll
cmpsb
push
inc
enter
mov
popa
cmp
sti
sar
push
and
mov
testb
sahf
cmp
leave
iret
pop
shrb
je
mov
and
imul
rclb
outsl
clc
and
lock
xchg
lods
scas
xchg
push
sbb
lds
loope
mov
xchg
inc
push
stos
hlt
pushf
adc
xchg
cmp
mov
inc
adc
mov
enter
testl
push
in
das
movsb
push
dec
ja
insl
inc
mov
scas
rolb
and
cld
int3
jbe
pop
mov
gs
sbb
mov
xchg
push
addr16
test
mov
add
jnp
cmp
fldl
lods
mov
add
and
outsl
aad
jns
insb
lea
jp
jae
daa
insl
stos
push
mov
bound
popl
inc
xor
mov
dec
or
repnz
ss
fsubrs
shlb
mov
shr
xlat
test
mov
mov
mov
mov
nop
xchg
fists
test
and
cli
sbb
ja
cs
xchg
pop
fistl
jp
roll
mov
imul
jnp
mov
jl
mov
in
sbb
lods
adc
pop
sub
sbb
in
arpl
std
out
jbe
push
xchg
fidivrs
jge
mov
push
adc
popa
filds
cli
movsl
mov
mov
mov
cmp
subl
pusha
fistl
fildll
cmp
jne
pop
mov
shlb
push
pop
call
pop
imul
push
sbb
stos
sub
insl
mov
adc
aam
and
mov
jl
and
mov
and
push
sub
fs
jge
sti
and
mov
das
mov
or
add
insb
mov
nop
in
enter
mov
add
scas
imull
push
lods
pop
push
daa
push
jp
sub
sahf
jmp
ficoml
mov
ret
in
pop
leave
lret
xchg
pop
pop
ds
dec
mov
cmp
dec
add
nop
enter
les
xor
cmpsb
sbb
pop
jb
push
inc
mov
inc
ret
inc
cmpsb
inc
cmpsb
mov
jmp
fnstcw
outsb
jecxz
mov
popf
push
int3
xor
out
aas
ljmp
out
aaa
out
push
xor
out
stc
les
adc
shlb
repnz
cmc
and
sbb
cs
nop
sti
pop
es
mov
xor
jne
sbb
bnd
data16
andb
cmpb
mov
inc
mov
dec
repz
lret
mov
xlat
mov
inc
test
xchg
rorl
or
ljmp
jg
mov
dec
ds
mov
clc
incb
loop
imull
sub
mov
jnp
dec
xchg
push
sbb
or
fs
nop
xchg
jae
iret
fildll
outsl
inc
cmp
shlb
mov
add
scas
and
adc
inc
mov
xchg
cmp
in
in
or
daa
cmp
and
stc
push
dec
sbb
fcmovnbe
mov
movsl
outsb
mov
stos
test
sbb
fcmovnb
cmp
loop
inc
jl
sti
adc
xor
hlt
hlt
push
adc
sahf
pop
mov
cs
mov
inc
loopne
push
movb
ds
int3
xor
in
arpl
cmp
aam
pusha
jp
arpl
xlat
and
mov
notl
into
insl
int
mul
repz
add
push
or
xor
cmp
hlt
or
bnd
sub
idivl
testl
mov
jmp
shrl
movsl
fldenv
push
sbb
xor
pusha
sbb
iret
jmp
push
cmpl
jp
call
scas
cmp
mov
push
jl
shlb
xor
cmp
mov
xchg
test
rorb
lcall
or
fisubs
sub
rcll
mov
lea
test
pop
xlat
loope
popa
jp
shll
mov
xchg
mov
adc
les
fwait
pcmpgtd
jae
pop
mov
mov
mov
jp
mov
or
mov
pop
jmp
dec
xchg
shlb
mov
cmp
enter
and
test
adc
lcall
test
mov
cmc
push
push
rol
loop
cmp
shrl
aaa
mov
pop
cmp
mov
sub
xchg
decb
push
sub
or
xchg
icebp
pop
jb
cmp
adc
mov
sbb
and
inc
sub
mov
scas
add
insb
lock
adc
stc
stos
push
jb
mov
fcompp
pushf
jmp
pop
fistl
sbb
aam
scas
cmp
and
leave
xor
sub
cwtl
xchg
xchg
mov
lcall
add
addr16
pop
in
daa
mov
mov
cmpsl
add
xchg
mov
push
shlb
add
lcall
leave
in
and
rcrb
pop
iret
or
fadds
loope
or
dec
mov
cli
iret
clc
popf
mov
and
mov
push
push
sub
add
rol
cmp
jle
dec
jl
dec
loop
push
popa
push
testl
mov
mov
shll
sti
xchg
subl
and
ret
lds
xchg
shrl
out
inc
inc
jb
pop
inc
pop
inc
imul
lods
aaa
pop
adc
addr16
jecxz
push
cmp
inc
cmpsb
cmp
adc
mov
lods
jnp
mov
fisubrl
mov
stc
loope
xchg
lea
push
aad
mov
ja
cwtl
xor
daa
and
aas
shll
sub
jmp
addr16
xchg
push
sbbl
clc
mov
dec
add
aaa
xchg
ja
cwtl
add
adc
mov
add
cltd
mov
push
cwtl
stos
pop
ds
stc
mov
jecxz
pop
jmp
jge
insl
insl
adc
sbb
push
inc
scas
sti
fs
pop
jl
repnz
fcompl
xor
xchg
mov
push
pop
enter
test
xchg
push
out
ret
mov
int
mov
and
mov
andb
sti
lret
dec
cwtl
sbbl
je
cmpsl
push
fldl
inc
adc
nop
dec
nop
test
popa
sub
inc
and
mov
and
xor
sbb
and
int
pop
rolb
je
popf
jg
xor
add
cmp
cmp
dec
sbb
dec
dec
popw
sti
and
aam
mov
mov
shlb
mov
xor
and
cmpsb
sbb
nop
clc
adc
mov
loope
fldenv
sbb
je
and
addl
ficoms
pop
in
mov
scas
dec
fs
mov
adc
cmp
sub
jb
dec
sbb
cmp
pop
in
push
in
inc
cmp
mov
enter
dec
sbbb
in
aaa
out
inc
mov
xor
adc
mov
fwait
lret
sbb
or
adc
les
repz
jge
xchg
scas
int
jmp
push
push
push
mov
lods
sbb
jo
lcall
sub
cmp
cwtl
std
or
pusha
out
mov
call
adc
fmull
lret
popa
dec
or
mov
dec
jno
push
popf
inc
and
pop
push
insl
lods
or
pop
lods
and
or
mov
rorl
sub
push
xlat
xor
jnp
scas
mov
xchg
sub
xor
mov
faddp
test
mov
data16
fs
sub
rorb
cli
lea
insb
das
shl
rcrl
xchg
pop
loop
test
push
je
cs
scas
adc
nop
sub
jo
pop
xchg
jecxz
cmp
lahf
pop
into
sbb
leave
dec
xor
out
xchg
out
ret
pop
call
lahf
in
adc
and
scas
fildl
jmp
out
push
lret
pop
shlb
das
adc
xchg
mov
dec
jb
xchg
inc
dec
xlat
shlb
ss
jns
sub
sub
xlat
mov
insl
inc
cs
fsubs
cltd
and
inc
jecxz
or
cmpb
fcmovnb
cmp
test
fwait
daa
int
pop
sub
pop
inc
sub
dec
mov
or
push
dec
mov
jb
adc
cmp
aam
mov
xchg
stos
out
mov
shlb
les
mov
ss
cmp
sbb
mov
fbld
sub
int
fdivrl
stos
iret
add
ja
ljmp
stc
pop
je
mov
jns
scas
std
iret
push
aaa
shll
insl
jns
ficoms
rcl
scas
pusha
inc
test
movsb
and
out
xor
jne
enter
andnps
sarl
mov
fst
xor
jmp
es
outsl
ds
sti
iret
outsb
jae
imul
cmp
add
xchg
adc
adc
in
loope
jge
int3
mov
fstpl
in
imul
xlat
imul
lcall
xchg
lds
cmp
xchg
popa
push
andl
inc
xchg
lods
xchg
xor
sub
or
or
pop
cwtl
pop
lods
sbb
xchg
and
lret
bound
pop
and
iret
into
adc
notb
sub
xchg
pushl
aaa
mov
lods
jns
and
in
push
sbb
bound
loopne
push
mov
imul
mov
leave
push
lods
mov
jb
ss
daa
xchg
icebp
loop
adc
lcall
sub
movsl
push
fidivs
in
xor
or
push
arpl
les
add
imul
sub
cmp
sbb
xchg
lock
pop
cmp
mov
adc
mov
cmp
es
mov
rcrl
shl
adc
int
stos
sti
push
out
pusha
ficomps
out
cwtl
iret
arpl
jge
into
rol
aas
les
pusha
jnp
rolb
test
adc
cmp
xchg
fimuls
js
ljmp
andb
jno
cmp
jae
popa
push
jp
rcrl
dec
sub
pop
jne
shrb
jne
cmp
js
lods
ja
aad
inc
in
add
out
sub
add
into
adc
call
adc
scas
lcall
gs
sub
punpcklbw
jne
enter
or
pop
xchg
adc
cmc
aaa
or
sbb
aam
out
sbb
icebp
repnz
jp
roll
dec
mov
sub
jle
xor
inc
dec
fnstcw
clc
xchg
mov
push
mov
adc
mov
insl
hlt
jg
loopne
cmp
add
pop
fwait
jnp
sti
in
sub
cs
shlb
pop
push
cmpl
in
adc
and
cmpsb
jge
xchg
jl
pop
mov
mov
imul
icebp
mov
inc
mov
lea
sub
mov
lcall
mov
leave
les
loope
push
and
jbe
repz
orb
cltd
add
sbb
or
push
mov
int
fsubrp
xchg
dec
mov
lahf
std
mov
push
mov
repnz
dec
mov
sti
push
mov
add
lock
cmp
mov
pcmpeqw
movsl
decl
jns
loopne
cmpsl
xchg
push
xor
cmpsl
ja
jae
cwtl
and
int3
addr16
mov
into
cmp
jge
sbb
or
or
rolb
scas
ss
sub
inc
scas
dec
sub
pop
test
xchg
mov
lea
or
in
push
lahf
je
xorb
jp
pop
lods
xchg
jno
xchg
insb
pop
bound
pop
rcll
stos
pop
pop
mov
repz
push
fisubrs
icebp
pop
push
sub
or
dec
cmp
mov
mov
out
dec
std
mov
mov
jb
out
or
ds
or
dec
sub
movsb
out
or
rorl
xchg
cmpsl
test
loope
jp
sbb
jle
pop
sub
jge
dec
cmp
sub
mov
in
mov
js
cmp
xchg
lcall
cmpsl
loop
adc
cld
fldenv
add
xlat
ss
or
outsb
dec
sub
mov
sub
in
or
fsub
sti
loope
call
testl
arpl
outsl
ficompl
and
mov
cmc
in
mov
or
sub
ds
inc
jae
repnz
mov
push
mov
xlat
inc
xor
nop
lret
mov
lods
sbb
adc
mov
mov
xor
cltd
and
mov
pop
mov
inc
jno
or
rcll
ret
shlb
rcrl
pusha
and
mov
sub
lret
mov
jbe
outsl
cmp
lahf
and
jmp
xchg
mov
sbb
mov
or
js
dec
pop
sahf
push
cli
cmp
jns
xor
fimuls
jno
push
mov
push
mov
mov
jle
daa
and
outsl
add
sbb
fiaddl
les
fcompl
lock
jno
cmpsb
in
fnstcw
adc
aaa
fcomps
sahf
mov
adc
out
std
dec
negb
jne
xor
xchg
out
div
aam
cmpsl
ds
sub
mov
sbb
leave
jp
loopne
rcl
testb
xor
xor
pop
bound
aam
aaa
dec
aaa
adc
push
iret
adc
add
out
xor
add
iret
mov
jns
inc
xor
cmc
cltd
stos
xor
mov
jle
loop
enter
jo
push
imul
subb
aaa
aas
es
xchg
icebp
es
shlb
test
pusha
outsb
stc
inc
faddp
enter
leave
or
or
dec
enter
adc
and
push
jge
and
fldenv
scas
mov
ds
inc
test
aaa
adc
sub
jb
pushf
mov
mov
or
xchg
cmp
rcr
mov
int
iret
sub
push
mov
clc
mov
push
mov
push
pushf
adc
and
dec
inc
mov
jb
dec
ret
and
iret
adc
xchg
and
pop
mov
ret
add
mov
dec
bound
shr
and
out
dec
jno
in
int3
iret
in
xor
fimuls
jo
jb
mov
clc
push
aas
syscall
movsb
and
xchg
mov
add
lea
ja
cmpl
repz
xchg
push
mov
pop
data16
xor
add
je
push
imul
push
xchg
xor
jns
movsl
lahf
push
jne
fs
iret
xor
dec
or
pop
pushf
mov
in
loop
mov
sbb
mov
stos
pop
popa
push
inc
sbbb
ljmp
add
jl
xor
out
enter
test
cmp
mov
adcl
cmp
push
stc
std
mov
imul
daa
adc
decl
push
mov
loop
das
and
clc
cmp
lock
in
push
mov
mov
insl
xor
stos
xchg
dec
dec
and
jp
roll
sti
test
mov
mov
cli
aas
cmp
ret
jg
cwtl
fldcw
sub
xchg
hlt
adc
imul
daa
mov
add
inc
dec
xchg
nop
sti
rcll
inc
pop
add
push
pop
dec
pusha
sub
mov
push
test
pusha
adc
adc
pop
jge
push
push
mov
int3
jg
adc
stos
popa
ja
stos
fwait
or
pop
leave
sbb
mov
imul
shll
add
dec
stos
mov
test
push
mov
ljmp
mov
lret
aam
orb
push
mov
rclb
imul
or
xchg
sbb
into
pop
hlt
and
repz
fdivl
mov
fnstsw
xchg
adc
out
or
repnz
mov
fucom
sub
test
fisubrs
repnz
jge
fwait
mov
pop
mov
repnz
bnd
mov
pop
movsl
das
loop
insb
sbb
fs
icebp
and
ss
xchg
mov
lret
push
fidivrl
lea
inc
sub
sti
lods
lcall
inc
aas
xchg
mov
or
pop
dec
xchg
xchg
adc
sub
and
push
pusha
mov
pop
or
or
cmp
push
movsl
in
jge
mov
mov
fcoml
arpl
jnp
jg
pop
daa
lods
adc
xchg
adcl
inc
outsb
fisubl
rcrb
dec
xchg
jle
sti
cltd
xchg
or
inc
shlb
cwtl
ljmp
stos
mov
jge
add
adc
mov
ljmp
xor
aaa
mov
into
jmp
pop
push
ja
mov
lret
mov
jae
xor
mov
test
inc
adc
arpl
add
inc
int3
mov
into
decb
and
int3
jmp
movsl
divb
push
stos
jno
popf
jge
or
inc
dec
adc
in
dec
lea
dec
mov
lock
cli
aam
push
or
or
xor
xchg
out
pop
fsubs
movsl
mov
fcomip
ds
push
mov
inc
pop
push
add
add
call
sbb
cmp
pop
stos
ljmp
insl
lds
ret
cwtl
push
xor
xor
ljmp
aaa
pushf
xchg
mov
push
cmp
dec
mov
aad
loop
sbb
xorl
call
push
mov
sub
cmc
sub
mov
gs
fincstp
cmpl
dec
and
push
inc
call
mov
les
mov
add
in
mov
xor
mov
mov
popa
outsl
pop
xor
or
inc
test
in
cmp
xchg
sar
fwait
xchg
subb
add
push
fidivrs
and
and
stos
loope
adc
hlt
outsb
outsb
or
jbe
push
pop
sbb
cmp
ss
repnz
rcrb
aaa
mov
xor
insl
mov
pop
gs
sbb
sub
call
or
xlat
dec
pop
rcrl
nop
and
or
fs
fistps
jl
mov
mov
mov
mov
cmp
cmp
int
xlat
loop
or
add
mov
inc
pusha
xchg
xor
xor
add
imull
xchg
push
xor
popf
icebp
mov
pop
outsb
jns
cmp
fadds
pop
in
and
jle
out
adc
xchg
in
jecxz
mov
shlb
xorb
push
or
pop
mov
jbe
cli
mov
push
cmp
inc
fiaddl
jb
cli
js
xchg
out
cmpsl
push
push
scas
test
loop
outsb
jle
fisubs
add
fists
jne
mov
adc
pop
xchg
test
repnz
fnsave
lock
cs
cwtl
call
xchg
pop
rep
jo
mov
cld
hlt
xchg
xor
and
jmp
sub
scas
std
sub
sbb
fcoms
sub
ss
jno
dec
imul
psubsw
mov
ret
js
loop
pop
inc
stos
push
sbb
or
orl
addb
or
das
inc
dec
mov
xorb
push
push
stos
jbe
sbb
pop
mov
outsb
cli
mov
or
mov
mov
repnz
pop
push
js
lcall
outsl
roll
xor
mov
imul
sti
mov
lods
jg
movsb
movsl
sbb
arpl
sbb
cmp
pop
xchg
in
test
gs
xchg
cmc
in
scas
call
aas
jns
in
bnd
mov
jl
loope
movsl
or
lcall
push
add
sub
imul
pop
lock
arpl
popa
lret
sub
leave
push
out
xchg
push
in
mov
xor
mov
jp
xor
jae
push
out
adc
jns
daa
sub
test
mov
loop
subb
data16
aam
mov
mov
sbbl
call
into
popf
adc
jg
push
aam
lods
out
fidivrs
cwtl
sbb
in
xchg
push
loop
mov
and
inc
cmp
and
xor
cmp
xor
mov
addl
mov
decb
lock
mov
sub
xlat
mov
das
mov
add
gs
rcrb
sbb
mov
scas
and
or
sbb
push
std
jnp
mov
mov
loop
mov
loopne
daa
add
pop
out
stos
bound
jge
sub
adc
sbb
jle
xchg
lret
pop
xchg
pop
repz
sbb
push
xor
fdivl
arpl
inc
repnz
aas
bnd
cmp
out
movsl
in
pusha
test
inc
push
in
lods
mov
adc
cmp
mov
xorl
pop
not
fsub
cwtl
pop
std
leave
xor
lcall
pop
leave
xlat
mov
faddl
ljmp
and
sbb
pop
push
loope
int3
sti
enter
insl
in
subl
js
scas
mov
cmc
pusha
popf
fcmovnu
or
jle
pop
adc
adc
push
push
xchg
fistps
stos
lret
inc
push
loopne
mov
jecxz
aam
cmp
in
cmpsb
or
xchg
xacquire
shl
adc
in
mov
bound
or
mov
dec
push
xchg
fisubrs
je
sub
push
push
cwtl
jae
sub
jmp
mov
sub
pop
jmp
sbb
cmpsl
lahf
out
out
sarl
dec
daa
mov
aaa
rcll
jge
or
jp
loope
sub
cltd
xchg
arpl
pop
or
sub
xchg
push
lods
test
and
pop
or
lcall
dec
bound
cmpsl
inc
rcll
mov
add
sti
je
shrl
leave
push
enter
or
mov
scas
dec
jge
js
sub
xchg
jnp
pushaw
out
es
mov
or
clc
addr16
jecxz
jno
pop
out
jmp
sub
add
enter
dec
push
sarb
ffree
sbb
xchg
shrl
faddl
or
xor
ja
std
arpl
or
hlt
xchg
pop
or
rcrb
xchg
mov
push
push
mov
icebp
out
mov
jbe
dec
je
xchg
xor
fisubrl
and
push
mov
mov
imul
fstps
cmp
inc
mov
pushf
mov
mov
push
pushf
data16
test
push
not
mov
dec
ffree
bound
push
nop
imul
fs
addl
test
sbb
daa
lds
into
andb
data16
mov
mov
mov
or
int3
or
in
lock
jbe
sbb
inc
outsl
rolb
xchg
mov
call
test
data16
jle
jo
ss
dec
adc
pop
push
lret
arpl
inc
xor
inc
lock
or
xor
xchg
mov
xor
aad
in
jmp
aas
insl
add
or
adc
bound
jle
pop
pop
test
cltd
push
mov
xchg
fs
inc
push
or
mov
out
xchg
pop
test
cli
divl
mov
sub
adc
jnp
jge
hlt
fstpl
or
fisttps
aam
sbb
es
xor
fwait
mov
xchg
mov
inc
mov
push
sub
pop
xchg
mov
movsb
fwait
and
loop
and
fs
mov
sub
mov
je,pt
out
mov
adc
and
fwait
sub
cmp
fucomip
mov
aaa
aad
ljmp
jb
sbb
pushf
inc
ja
jne
mov
xchg
dec
jge
stos
dec
cmp
addr16
and
jae,pt
lods
aas
cmp
or
mov
mov
jmp
dec
add
dec
out
lods
out
add
mov
push
repnz
dec
and
les
vcvttps2dq
insl
and
out
adc
mov
jno
sarb
mov
iret
xor
xor
pop
daa
jl
call
rcll
pop
ds
outsb
push
xchg
push
or
inc
mov
lea
pop
lea
addl
mov
mov
mov
push
test
xor
mov
cmp
fisubrs
jne
adc
lods
push
lods
pop
jae
shll
in
push
xor
test
xor
mov
icebp
or
adc
jl
mov
pop
aam
cmp
call
xlat
scas
mov
push
repz
arpl
inc
xor
push
rorl
push
lods
cmp
cmp
sub
mov
cmp
push
daa
je
mov
jne
icebp
pop
cmpsb
arpl
xor
adc
and
add
add
lret
add
xor
stc
sub
push
sub
pusha
outsl
sub
pop
jge
jno
lea
rcll
out
out
jecxz
lret
stos
out
xor
cmp
aad
or
jmp
or
push
push
bound
jl
adc
cmp
mov
ljmp
dec
enter
std
rolb
jae
sbb
dec
cmpsl
lea
dec
or
shl
xor
int3
jmp
dec
lret
dec
lret
xchg
inc
ret
push
jecxz
dec
lods
push
and
addb
repz
decl
dec
or
into
cmp
adc
aam
fwait
sbb
movsb
mov
int3
fists
push
lods
aas
testb
pushf
cmp
xor
lea
push
bound
mov
pusha
adc
mov
pop
xchg
cmc
mov
dec
add
add
pushf
mov
gs
xchg
lret
shrl
push
mov
adc
sbb
test
out
in
das
es
add
jb
xor
lea
stc
stos
xchg
push
jbe
hlt
adc
aaa
iret
out
data16
jmp
daa
std
add
xor
mov
cmpsl
notl
mov
mov
dec
mov
or
inc
jno
mov
fistpll
cmp
inc
andl
loopew
rcll
scas
adcb
push
cmp
test
rorl
pop
inc
in
faddl
lahf
daa
fdiv
gs
cmp
pop
jb
test
add
mov
cmpb
fdivrl
xor
mov
jmp
divb
xor
inc
xlat
pop
sub
inc
je
ja
outsb
in
fidivrs
xlat
push
es
and
and
and
mov
xor
rorb
scas
gs
fwait
outsb
sbb
mov
sbb
je
push
sub
mov
cmpsb
fdivrs
inc
out
lret
aad
enter
fadd
or
cld
inc
jne
xor
repz
shlb
fimull
pop
fcoml
shr
push
loope
mov
xchg
aaa
insb
inc
cmove
std
mov
xor
lahf
stc
add
call
mov
dec
inc
push
mov
bound
inc
ja
xor
sub
arpl
insl
std
shl
filds
push
and
push
jmp
pop
sub
jne
in
jne
mov
xor
push
sub
dec
jmp
or
shll
and
push
mov
outsb
jnp
pop
nop
xor
cmp
mov
inc
repnz
adc
mov
adc
in
sub
mov
mov
pop
lock
test
mov
jns
inc
addb
cwtl
lret
add
cwtl
les
fstl
mov
es
xchg
jmp
pop
mov
xchg
and
mov
stos
jbe
dec
scas
popa
mov
xor
cmp
inc
add
cld
or
mov
cld
mov
adc
mov
iret
pop
pop
in
bound
mov
das
lahf
aaa
mov
xchg
cltd
sbb
int3
js
incl
inc
shl
data16
push
sbb
test
mov
push
xchg
dec
add
adc
jp
shlb
addl
lea
xchg
xchg
les
addr16
shlb
pop
in
xor
mov
pusha
push
out
inc
iret
mov
jnp
mull
je
jb
mov
scas
xlat
pop
imulb
sub
nop
mov
pop
sbb
jg
cmpsl
and
adc
adc
pop
cmpsl
ljmp
sub
fisttpll
xchg
fdivrs
mov
cmp
jo
pop
sbb
aam
arpl
outsb
scas
jns
mov
jns
cmpl
shl
jl
sbb
je
dec
inc
xchg
pop
scas
ret
xchg
fwait
mov
adc
sahf
rcll
xchg
cmp
xor
out
mov
pop
mov
push
or
or
jae
sub
rorb
loopne
pop
mov
std
lock
repnz
stos
imull
mov
mov
and
mov
jb
js,pn
pop
mov
adc
ja
push
xor
scas
mov
cwtl
sti
dec
leave
push
add
aam
push
imul
je
repnz
or
das
sub
sbb
mov
enter
rclb
mov
clc
sarb
and
xchg
sub
je
lea
in
popa
jecxz
fidivrs
fstl
testb
call
popa
mov
jnp
es
push
jb
jbe
mov
pop
in
sub
and
repnz
push
mov
nop
aas
or
and
mov
push
jae
or
jg
hlt
shl
imull
cmpsl
mov
hlt
icebp
outsb
clc
sub
hlt
ret
cmp
dec
mov
jbe
fs
xchg
fdivs
cli
add
loope
notb
in
leave
add
or
out
adc
test
adc
mov
rcl
push
ja
es
inc
or
std
dec
aaa
cmp
jae
add
mov
lahf
stc
and
mov
jle
add
and
daa
push
aas
test
push
sbb
mov
arpl
data16
dec
fcmovbe
loopne
dec
out
fwait
push
hlt
bound
xchg
adc
mov
inc
pushf
fmuls
lods
outsl
mov
push
mov
fcoms
dec
enter
daa
int
stc
xlat
push
out
mov
popf
mov
aaa
es
jae
inc
sbbb
pusha
cltd
mov
loopne
inc
pop
add
push
leave
popf
pop
or
or
shll
mov
int
rolb
cld
in
lea
add
cmpl
imul
das
scas
cs
repnz
lds
cli
add
addps
push
pop
rol
pop
xchg
or
mov
ret
inc
dec
mov
cmpsb
nop
xor
lret
mov
fsts
repnz
pop
dec
out
sbb
addr16
inc
insl
iret
hlt
cmp
notl
mov
or
cmpsb
jbe
and
mov
mov
and
mov
mov
mov
shlb
ja
sbb
jnp
mov
push
xchg
inc
pop
fs
out
inc
jg
pop
iret
mov
popa
inc
xor
or
faddl
sub
dec
adc
sub
jge
clc
lahf
scas
cmp
ljmp
fisubl
push
xchg
fsubs
push
and
jne
push
and
mov
sub
sbb
call
movsb
ss
int3
inc
sbb
addr16
xchg
jp
cwtl
push
in
mov
dec
jge
fiadds
xor
push
push
push
xchg
sub
add
push
lods
add
pusha
sub
add
or
jb
in
mov
out
fcompl
adc
rorl
out
push
mov
pop
hlt
jae
fwait
push
fbstp
dec
test
sbb
mov
mull
mov
cmc
add
std
jg
stos
in
test
aas
cmpsl
cmp
das
push
call
dec
popa
xchg
adc
push
pop
add
mov
sbb
or
cld
mov
push
gs
popa
loopne
sbb
push
cmpb
adc
cmp
fmulp
ficoml
jle
push
pop
pushf
int
idiv
mov
push
cld
sub
cmp
loopne
push
imul
cli
stos
adc
and
fmuls
loope
sbb
inc
jno
pop
push
jbe
sbb
lret
popf
fcompl
mov
es
jp
xchg
jmp
cmpsb
ljmp
stc
sbb
leave
in
call
mov
lahf
mov
push
roll
aam
movsb
icebp
das
adcl
mov
pushf
in
cs
scas
fs
dec
jbe
enter
gs
adc
stc
adc
sub
adc
bound
rolb
into
mov
xchg
lds
or
jl
push
sub
mov
and
gs
icebp
out
andb
fxam
ljmp
push
roll
cmp
je
pushf
push
outsb
sub
frstor
sbb
shll
sahf
pop
out
jno
and
add
aaa
and
mov
fsubrl
pusha
ds
aaa
call
subb
inc
das
hlt
movd
test
xchg
mov
xchg
outsb
xor
pop
mov
in
xorb
jp
iret
xor
mov
sub
mov
ffree
push
add
je
cmp
in
mov
adc
jo
subb
lods
pop
sub
orb
cs
cs
push
mov
sbb
cmp
cmp
dec
pop
sti
dec
push
add
stc
push
cmpsl
stc
loope
cmc
rcr
jle
lret
lret
fs
maxps
aaa
fimuls
enter
mov
sbb
mov
in
add
mov
outsb
jno
fs
push
push
outsl
pop
addr16
outsb
popa
in
sahf
inc
xrelease
dec
xorl
inc
push
sub
add
xchg
shrl
pusha
stos
xchg
ret
fsub
add
xor
jo
pop
mov
jecxz
pop
fldt
lret
mov
dec
jns
scas
cmp
xchg
notl
jl
add
ljmp
dec
pop
xchg
movsl
mov
adc
test
dec
into
push
cli
popf
mov
pushf
push
dec
iret
imul
imul
cmpsl
mov
jmp
lcall
xchg
test
lds
mov
sub
xchg
inc
push
mov
out
jbe
lret
dec
xor
ja
xchg
mov
aam
mov
fisubrs
push
jo
xlat
sub
mov
sbb
call
dec
imul
lret
out
xchg
mov
push
jp
pop
fildll
dec
xchg
adc
or
outsl
jg
mov
pusha
into
mov
mov
popl
inc
das
pushf
inc
mulb
fnstsw
jo
ret
loope
fnsave
dec
sub
pop
js
out
fwait
movsb
test
sbb
rclb
aaa
push
or
xor
das
sub
inc
mov
dec
andl
fcoms
repnz
pop
sbb
rcll
xor
pop
xor
in
jmp
pop
in
xlat
xchg
adc
jbe
pop
cltd
xorb
or
pushf
pop
les
cmp
fwait
xchg
ret
mov
pop
pop
jmp
ret
jecxz
pop
adc
lods
movb
jle
add
sub
mov
xor
rolb
sbb
mov
stos
pop
and
sub
pop
push
add
insl
mov
or
and
pop
lret
in
or
adc
jbe
outsb
aad
loop
push
fsubl
xlat
leave
jnp
jmp
repz
jne
cwtl
nop
and
sub
aas
jnp
mov
test
mov
adc
insl
rorb
mov
xchg
jno
mov
fsubrp
cmp
dec
pop
std
xchg
rcrb
pop
lret
xchg
std
lcall
fbstp
xor
jmp
mov
xor
fidivrs
iret
decb
test
sub
sbb
adc
shrl
aas
jmp
rcr
push
jnp
popf
inc
pop
add
mov
mov
repnz
fwait
inc
or
or
rorb
nop
xchg
xchg
add
xor
data16
xchg
leave
and
lea
outsl
inc
cld
bt
sbb
movsl
pushf
fidivl
jno
push
cmp
loop
gs
dec
jp
sub
pop
jg
pop
xor
popa
les
and
sbb
xchg
outsb
push
adc
push
int
incb
push
sub
add
ss
cs
lret
je
shlb
popf
jmp
stos
cmp
push
adc
out
bound
pop
xchg
icebp
popf
pop
xchg
imul
iret
mov
dec
cwtl
aas
or
out
hlt
gs
or
sub
std
stos
mov
aas
fildll
mov
sub
or
movsb
and
dec
and
dec
movsb
pop
jmp
add
push
jb
out
pmulhw
cmp
enter
mov
decl
rorb
adc
int
sbb
or
sub
vrcpps
push
sbb
jno
nop
fs
push
mov
xlat
mov
bound
add
push
shlb
mov
das
inc
movsb
clc
sarl
inc
xor
into
aad
sub
lret
or
loopne
pushf
pop
js
aaa
sbb
mov
insl
adc
sbb
lock
sub
out
scas
xchg
push
jo
sbb
lock
mov
inc
test
je
mov
outsb
or
lods
cmpsl
xchg
mov
lods
push
push
mov
fs
popf
add
xchg
aam
imul
dec
out
lret
inc
mov
adc
sub
shrb
idivb
outsl
mov
mov
cmp
jno
add
xor
sbb
into
xchg
pop
cmpsl
js
jo
push
daa
xchg
repnz
rolb
lds
ret
push
into
push
jns
mov
xchg
dec
imul
test
sub
mov
testb
shrl
xchg
push
adc
test
adc
cmp
adc
jo
mov
xchg
xchg
add
cmp
fsubl
in
mov
mov
adc
mov
cmp
push
mov
bound
sub
adc
dec
cmp
outsb
and
sbb
sbb
mulb
push
fwait
cmp
mov
xor
pop
dec
pop
jnp
mov
orps
dec
test
dec
sbb
test
jp
shrl
ficomps
in
sahf
rclb
pop
lret
mov
aas
sti
das
and
sub
add
xor
cmc
mov
icebp
sbb
rolb
xor
je
mov
mov
cmp
mov
mov
push
dec
xor
ljmp
or
push
or
inc
imul
xor
lods
fbstp
add
mov
adc
fmull
in
adcl
push
mov
in
sub
dec
cli
add
inc
ds
jno
std
pop
fwait
lret
int3
mov
sbb
push
xor
fcompl
addl
mov
mov
std
loop
lcall
in
mov
cmp
push
loopne
aam
mov
fnstenv
rol
and
xor
sub
xchg
mov
mov
inc
mov
mov
data16
jp
adc
sbb
xor
pusha
in
ljmp
pop
popf
cmp
mov
fnstenv
xchg
sahf
pop
push
stos
mov
ljmp
fcomps
fildll
sbb
or
lods
jmp
mov
divl
dec
ja
xor
cmp
insl
test
mov
aas
push
mov
sahf
lds
ror
icebp
mov
fistpll
push
sbb
mov
mov
out
test
lcall
enter
or
xor
out
icebp
and
and
imul
mov
inc
outsb
xor
add
pop
inc
fbstp
out
rcll
cwtl
inc
int3
leave
mov
add
hlt
fisttpl
shrl
insl
clc
pop
dec
gs
xor
mov
cmpsl
insb
test
std
rol
fdivl
dec
dec
cs
adc
or
pusha
insb
pusha
ja
dec
add
nop
and
nop
mov
xchg
pop
mov
ja
das
lret
scas
loopne
cmpsl
or
jg
push
add
into
xor
test
cmpsl
dec
ds
mov
fs
adc
mov
mov
in
cld
pop
int3
xor
sahf
aaa
lds
bnd
imul
adc
sbb
dec
es
out
add
out
into
mov
and
jecxz
push
push
addb
je
inc
mov
lahf
jecxz,pn
gs
xchg
mov
inc
and
or
sbb
daa
cmpsb
pop
popf
push
mov
mov
cmp
mov
push
xchg
push
leave
nop
adc
inc
push
fistps
jecxz
dec
xor
in
mov
mov
push
imul
bnd
lret
mov
nop
jg
es
aad
or
xlat
cmp
jge
cmp
add
mov
into
or
adc
ret
mov
inc
jns
pop
xchg
mov
push
das
fnstsw
movsb
xlat
pop
mov
in
mov
stos
leave
pop
test
sub
push
testb
mov
insl
xchg
sahf
pop
aad
dec
sbb
mov
cmp
xor
shr
movsb
jnp,pn
hlt
push
push
sbb
xor
sub
es
dec
xor
and
into
inc
dec
push
jne
dec
loope
rcrb
mov
repz
jae
push
cmp
lea
out
jo
sub
inc
pop
jno
mov
cmovle
or
inc
add
leave
out
sub
inc
fldl
push
lea
adcb
std
pop
dec
or
jb
push
cs
and
sub
rcrb
cs
fstpl
push
sbb
mov
inc
cmpsl
or
xchg
pop
add
les
jne
xor
test
insl
fisttpl
xchg
xorb
inc
mov
out
dec
inc
jg
shlb
add
pop
pop
aas
xchg
aam
sbb
sub
mov
lcall
mov
cmc
add
ja
enter
aad
ja
xchg
push
jbe
add
lcall
adc
stos
in
pop
mov
add
sbb
xor
xchg
stos
les
sbb
inc
pop
rcll
js
call
add
lods
cmp
sbb
fistpll
sub
push
mov
fists
int
repz
push
inc
adc
inc
jge
aam
sub
mov
cwtl
daa
jg
jg
psubb
sbb
outsl
fsubs
or
test
sbb
xchg
sahf
sbb
jl
add
and
xlat
pop
daa
mov
lock
fdivr
mov
fstps
fcompl
mov
sbb
cmp
xchg
sti
jl
test
shr
std
ret
fcoml
or
leave
dec
adcb
sahf
push
rolb
hlt
repnz
cwtl
inc
adc
or
rorb
jle
mov
mov
pop
push
mov
mov
sub
adc
shrb
jg
pop
jmp
xor
dec
dec
clc
repnz
sub
or
inc
mov
scas
cs
test
xchg
loopne
add
and
jle
mov
sub
and
dec
xor
push
push
sub
xor
cmpsb
mov
or
aaa
imul
fstp
cmc
out
add
mov
add
push
push
inc
stos
or
das
dec
mov
jle
xchg
idivl
negl
outsb
pushf
ds
sbb
push
into
shl
push
push
add
cmp
add
or
and
xorb
nop
or
cld
mov
mov
int3
push
inc
and
or
fcmovnu
cmpsl
movsl
clc
inc
xchg
fiadds
cmp
xchg
iret
repnz
sbb
pop
sti
sarl
pop
insl
mov
fcomps
and
mov
int
mov
mov
xchg
mov
or
mov
ficomps
push
outsl
int3
int
in
cmp
insl
push
bound
clc
hlt
aas
dec
sbb
push
add
and
mov
jae
mov
sbb
xchg
and
sub
sub
add
bound
adc
or
mov
xchg
daa
pop
push
loop
mov
aam
mov
pop
mov
mov
cmp
arpl
out
xor
out
stc
or
mov
popf
mov
add
xor
jge
cmp
pushf
pop
jae
inc
sbb
lods
loopne
subb
ljmp
js
push
adc
out
add
cmp
mov
or
inc
gs
push
mulb
jo
cs
cli
es
push
or
push
mov
iret
push
cmp
orl
or
pusha
mov
repnz
mov
in
xor
repnz
sarl
jecxz
filds
mov
push
int
ror
inc
jne
addr16
rcl
lcall
out
fildl
and
adc
dec
pop
push
cmp
inc
sahf
jmp
sub
aas
cmpsl
add
xchg
js
aam
push
xchg
sbb
lods
cli
push
movb
test
shlb
xorl
push
pop
stc
fnstcw
jns
pop
xchg
out
fcomp
inc
int3
inc
dec
je
and
enter
icebp
pop
data16
xor
test
xor
ss
insb
shlb
mov
es
fistpl
xor
xlat
or
js
lret
pop
fsubrs
cmp
dec
sbb
xor
repz
data16
je
std
xchg
dec
sbb
mov
repz
lock
cmpsb
pushf
in
inc
push
xor
fwait
xchg
scas
loopne
scas
xor
enter
fstl
add
pop
gs
mov
lahf
jp
bound
cld
arpl
jle
xchg
xchg
in
cmp
sbb
inc
mov
mov
sbb
shrl
test
dec
int
sbb
fsubrs
add
cltd
sub
push
gs
in
insb
dec
xchg
sbb
push
outsb
xchg
pop
nop
bound
dec
lret
nop
push
cmp
lcall
pop
xor
jmp
xchg
xlat
int3
repnz
mov
loop
popf
xchg
inc
adc
dec
das
jno
insb
xlat
mov
xchg
xchg
and
dec
cmpsb
cmp
imul
or
inc
imul
mov
in
jnp
sub
lods
dec
cmpsl
mov
arpl
push
icebp
xchg
fidivrs
add
aaa
pushf
add
addr16
enter
push
inc
sarl
adc
loope
pop
pop
lcall
scas
clc
sbb
push
stos
push
test
sub
xor
dec
xor
shrl
jne
test
mov
stos
and
jg
addb
sbb
subl
jns
pop
fwait
cmc
inc
or
pop
inc
pop
out
add
mov
sti
mov
out
sub
fnsave
sub
lods
loope
jge
outsl
jne
pop
mov
mov
push
cmp
hlt
lods
mov
mov
les
push
ficoms
popf
insb
mov
stos
cmpsb
mov
ds
stc
and
ret
push
cmpsb
arpl
addr16
fisttps
push
mov
xchg
pop
xor
pop
loop
dec
cmpsl
das
movsl
mov
push
jbe
pop
lret
cmpl
dec
sahf
and
mov
mov
cmp
dec
pop
dec
call
cmpsb
pop
mov
jno
mov
mov
hlt
out
inc
push
push
and
es
stos
mov
rorl
sti
subl
cmp
pop
mov
ret
cmp
sbb
push
hlt
mov
int3
adc
bnd
xor
aad
call
fnstsw
es
jl
add
outsl
dec
or
inc
lds
cli
out
jle
nop
mov
cltd
jae
push
testl
imul
dec
jns
stos
xchg
lds
imul
incl
mov
pop
push
mov
inc
sbbb
arpl
jp
lea
call
daa
push
cmp
in
imul
xor
outsb
andb
jle
fldt
mov
cwtl
adcb
mov
enter
dec
popa
dec
mov
lret
xchg
sbb
loopne
and
pop
mov
dec
pop
jmp
arpl
stc
enter
icebp
rcll
xor
daa
add
rcrb
rorl
pop
movsb
stos
jg
movsl
jmp
push
cmpsl
sbb
arpl
arpl
add
in
add
or
cmp
mov
nop
leave
lods
pop
inc
add
scas
jb
into
addr16
insb
dec
cmp
testb
push
out
test
out
movsl
fcmovne
inc
push
xchg
int
jg
and
xchg
int3
inc
neg
fs
add
mov
repz
std
popf
add
inc
lods
mov
xor
lds
dec
fidivrl
sbb
adcl
cli
fs
jne
loopne
test
in
stos
mov
das
fsubr
out
test
sub
push
xor
or
add
les
ret
loopne
dec
xchg
decl
loope
adc
aam
mov
jae
add
movsl
pop
dec
in
in
mov
add
and
out
and
push
sbb
xor
mov
clc
pusha
fstpl
mov
mov
or
cmp
leave
ss
sub
jg
sahf
xor
loopne
shrb
cmp
int3
cltd
scas
sbb
jae
pop
mov
add
ret
pop
ljmp
xchg
addr16
bound
out
ret
repnz
test
in
inc
mov
mov
xor
repnz
cmpsl
and
andl
ret
xchg
sbb
pop
cmpsb
testl
jg
aas
pushf
bnd
lret
lods
call
push
fcmovnbe
xor
cmp
cs
call
in
nop
push
add
jg
insb
add
leave
lcall
fwait
cmp
xchg
pop
add
imul
sbb
je
add
ret
mov
jle
cs
cmpsl
les
push
mov
mov
lret
pop
lret
call
aad
and
stos
sub
jmp
push
ljmp
lret
add
clc
pushf
inc
xlat
insl
scas
sbb
xor
dec
mov
jmp
fstps
and
out
mov
dec
ljmp
lock
pop
das
sbb
out
jbe
es
fistpl
and
lods
xchg
xor
ret
pop
fildl
int3
mov
pop
jmp
jbe
cmp
pop
cmp
insl
in
adc
lcall
mov
mov
push
lcall
jge
dec
mov
jo
lcall
ds
sbb
mov
sub
mov
rorb
add
jae
adc
in
into
loope
pusha
in
loope
jp
fsts
out
push
in
popa
jns
xor
jne
mull
mov
ljmp
icebp
gs
ljmp
insb
add
jbe
jecxz
aad
adc
xor
mov
mov
mov
aas
mov
and
js
jae
dec
rolb
loopne
add
out
pop
cmpb
push
sub
or
sub
roll
loop
mulb
adc
dec
push
fucom
add
push
adc
pop
call
mov
inc
aad
orb
mov
js
fldl
xchg
js
xor
xor
mov
xchg
push
pop
bt
inc
jns
cmp
add
cmpsl
nop
daa
and
xlat
pusha
sub
dec
stos
fsub
or
dec
arpl
mov
mov
faddl
mov
sub
xor
into
xor
shlb
jge
jle
int3
icebp
and
cltd
mov
push
scas
xchg
mov
je
out
movsb
xchg
pop
jmp
je
gs
cltd
cmp
jl
push
push
mov
loope
jmp
imul
mov
je
loopne
jae
pop
ja
cltd
and
popf
sub
idivb
in
sbb
pop
dec
mov
sbb
xchg
mov
shlb
inc
fs
push
push
fdivrl
xchg
cld
sbb
repnz
cmc
xlat
xchg
or
icebp
repz
mov
sbbl
popf
cmp
cmpb
lods
cli
sbb
pusha
lods
bound
test
add
in
push
mov
stos
ljmp
test
or
sbb
xchg
cmp
dec
pop
fldenv
sbb
lret
inc
cmp
push
add
leave
test
mov
jle
cmp
mov
sbb
stos
clc
imul
jae
jecxz
lods
test
loopne
xor
mov
lea
call
je
mov
aaa
lahf
iret
cmp
movsl
xor
ret
mov
push
and
test
dec
test
sbb
jg
in
sub
scas
mov
gs
dec
cmc
inc
mov
fimull
xchg
mov
jmpw
das
ds
sbb
mov
jg
push
xor
data16
xor
inc
jge
xchg
sub
and
inc
jg
js
outsb
cld
fidivl
jg
pop
inc
imul
xor
and
push
repz
xchg
and
sub
adc
iret
mov
les
lods
pop
outsl
into
push
lret
inc
sub
stos
xchg
dec
std
adc
insl
leave
sbb
mov
pop
gs
arpl
xchg
jb
dec
cmp
test
sub
out
jmp
test
add
mov
jg
mov
js
adc
adc
pusha
xor
hlt
arpl
aad
lahf
addb
cmp
in
rolb
bound
arpl
pop
mov
xor
insb
or
out
ja
leave
inc
dec
mov
lods
popa
cwtl
xchg
sub
mov
shlb
test
into
mov
mov
inc
push
stos
fdivs
imul
jo
in
das
xchg
xchg
std
add
lcall
scas
fistps
rolb
push
imul
cmp
inc
push
sbb
adc
inc
pop
dec
sbb
or
mov
inc
leave
mov
mov
shrb
cltd
loopne
test
or
cmp
ja
movsb
popa
in
push
jb
cmp
inc
dec
xchg
mov
jnp
pop
sahf
add
mov
jae
in
add
ret
aaa
test
das
stc
cmp
cmp
sbb
jno
sub
xchg
dec
test
fdiv
push
xor
je
push
popa
cmpsb
int
xchg
or
jo
mov
sbb
lods
ljmp
scas
das
cmp
daa
dec
sbb
subb
mov
mov
mov
subl
fbstp
mov
xchg
add
dec
mov
outsl
decl
xor
xchg
cwtl
add
jno
adc
popf
dec
cli
imul
jle,pn
filds
data16
xchg
push
add
ljmp
adc
rorb
cmp
and
mov
push
cltd
mov
je
and
dec
push
inc
and
in
jae
movsb
js
sub
add
pop
call
adc
ret
and
add
ret
xorl
jl
mov
int
call
dec
push
pop
xchg
dec
xor
sbb
lods
mov
mov
xchg
xchg
int
cltd
imul
pop
and
cmp
and
jno
inc
cmpsl
ftst
dec
pop
inc
popf
ljmp
mov
jge
imulb
jecxz
mov
jecxz
mov
test
in
aam
rclb
mov
jmp
jbe
cmpsb
lds
xchg
xor
adc
mov
push
mov
adc
xchg
adc
dec
push
mov
mov
lods
push
test
xor
repz
fs
out
jnp
in
inc
es
stc
sub
mov
cwtl
pop
es
aaa
insl
sbb
xchg
jecxz
xchg
dec
icebp
xchg
ljmp
cmpsb
test
lods
and
mov
jnp
mov
andb
lahf
inc
jge
addl
cmp
inc
pop
adc
addl
add
test
pop
lret
mov
sbb
fwait
xor
xchg
mov
in
cld
jge
xchg
adc
vorps
fimuls
push
mov
dec
pushf
enter
sub
or
and
stos
sub
dec
mov
adc
jbe
mov
pop
stc
jge
mov
sub
out
pop
shrb
cmp
stc
sahf
xchg
add
inc
mov
gs
scas
jnp
gs
lock
jecxz
decl
pop
insb
test
daa
es
mov
xchg
inc
lods
push
push
adc
xchg
outsb
push
adc
mov
outsl
sti
mov
into
jno
xlat
add
cld
int
xor
pop
mov
dec
int3
fwait
dec
jnp
lcall
gs
shrl
in
nop
add
inc
xchg
jne
xchg
imull
fisttpll
mov
sbb
cwtl
cmp
mov
sbb
mov
dec
lock
addr16
jae
adc
add
ja
add
loopne
mov
xor
push
scas
cld
sub
xlat
fadd
loopne
mov
jge
push
inc
stos
jb
xchg
xor
jle
mov
adc
xchg
sub
sub
push
add
lods
cmpb
fistps
xchg
or
pop
mov
outsb
addl
fadds
call
mov
xor
insb
jmp
mov
lret
icebp
jge
cmp
or
push
inc
mov
pop
jg
rcrl
xchg
pop
aaa
in
leave
xchg
aad
inc
push
pop
and
mov
pop
adc
xor
and
xor
jo
int
jne
test
lahf
mov
mov
mov
les
fmulp
and
sti
pop
cmc
cmp
rcr
lock
subl
jmp
push
xor
xchg
mov
inc
sti
ret
push
ja
cmp
sbb
jl
addr16
leave
mov
sub
pushf
mov
ret
roll
inc
mov
mov
xor
insb
sbb
loope
and
arpl
jbe
fldcw
xchg
mov
daa
test
jecxz
cmp
xor
add
mov
aad
dec
icebp
add
mov
test
dec
orb
xor
cmp
out
mov
inc
xchg
testl
lcall
and
or
lock
or
and
sbb
arpl
js
lock
sub
mov
push
out
fidivs
xchg
pushf
stos
mov
jge
sbb
mov
daa
mov
in
sbb
dec
movsb
repnz
inc
xor
scas
mov
shl
lds
lahf
enter
adc
or
rorb
pop
imul
arpl
xchg
outsl
sub
mov
mov
sub
mov
sbb
mov
add
hlt
mov
aaa
pop
pop
fsts
pop
mov
xor
jmp
pop
sub
shlb
mov
jo
stc
mov
and
nop
in
fs
mov
fmull
scas
je
fsubrl
push
das
sub
xchg
xchg
lret
mov
add
dec
xor
jnp
inc
sbb
ljmp
mov
add
mov
dec
mov
movsb
pop
push
fisttps
mov
lcall
es
jbe
xchg
repz
bound
jmp
test
cmp
cmpsb
outsb
fwait
repnz
mov
jnp
es
pop
add
mov
and
xchg
stos
jecxz
or
sub
jne
data16
inc
test
jno
mov
les
fisubl
push
fs
loop
das
ret
insb
shlb
xchg
xchg
lods
xchg
pop
sahf
or
icebp
xchg
sbb
ja
dec
mov
enter
push
xchg
outsb
or
test
mov
insb
iret
dec
push
dec
jo
enter
push
xchg
add
push
mov
movsl
inc
cmp
sbb
dec
jle
pop
push
inc
es
sub
fistps
adc
jo
inc
mov
cmc
mov
mov
jno
mov
pop
out
mov
in
mov
or
lods
inc
mov
shrl
mov
xor
inc
mov
push
add
cld
mov
cmpsb
mov
cwtl
push
imul
or
in
pop
ret
ret
mov
xor
or
in
scas
dec
jnp
test
or
pop
addr16
cmpsb
loopne
shrb
jl
xchg
mov
mov
inc
pop
jo
mov
xchg
pushf
notb
xchg
mov
sub
mov
in
cld
mov
adc
test
dec
fiadds
xor
jne
lret
das
jl
pmovmskb
cmp
imul
into
or
std
repnz
mov
push
arpl
cmp
xor
rcrb
mov
bswap
fnstsw
push
push
fsubl
dec
rolb
inc
dec
dec
pop
xorb
mov
ficompl
shrl
orl
movl
dec
lea
adc
or
xor
mov
jle
jl
xchg
rcrl
pop
add
enter
icebp
or
test
mov
sbb
dec
rcl
mov
adc
xchg
and
icebp
mov
div
mov
pop
jl
and
rorb
mov
dec
jno
or
fwait
lods
rorl
fnstcw
out
std
pusha
jb
leave
sbb
push
iret
std
and
int
dec
rorl
lds
cmp
sub
fisubrs
test
sub
push
mov
cvttps2pi
test
adc
dec
test
mov
std
add
movsb
in
pop
inc
lret
add
sahf
pop
out
xchg
mov
jg
shrl
gs
lods
cwtl
in
call
outsb
jo
inc
ljmp
cmpsl
repnz
or
test
int3
inc
jle
ret
or
bsf
jae
div
iret
fs
push
outsb
push
jecxz
ret
cwtl
xor
or
inc
mov
and
jne
adc
fadds
or
ss
mov
std
pop
scas
popa
mov
loop
push
mov
out
in
jns
repz
xor
adc
adc
adc
cmp
int3
inc
gs
pop
aaa
mov
cmp
dec
outsb
mov
popf
in
push
repnz
jne
dec
repnz
ja
jbe
test
mov
in
xor
pop
cli
inc
ret
sub
mov
and
jecxz
aam
jge
jp
jbe
dec
repz
cs
xor
mov
hlt
icebp
into
inc
movsb
xor
push
push
call
push
and
ret
in
repnz
je
lcall
repz
push
mov
push
int
stos
iret
nop
lret
lret
data16
les
pop
pop
outsb
cmpsb
sub
out
shll
pushaw
xchg
cli
xchg
xchg
cmp
inc
repnz
mov
out
mov
lcall
inc
sbb
cmp
scas
sbb
or
sbb
in
imul
js
sar
ss
add
add
xchg
xor
icebp
in
iret
jae
inc
mov
jmp
jae
push
rcrl
mov
mov
mov
insb
arpl
jge
mov
pop
cwtl
in
lret
cmc
mov
cltd
loope
push
pop
outsl
pop
cmp
inc
shrl
xchg
add
ja
lahf
xchg
xor
jae
xchg
pop
cmpsl
mov
pop
mov
mov
jg
pop
adc
mov
inc
push
int
lcall
sbb
mov
pop
lods
push
aad
mov
enter
xchg
mov
orb
iret
ss
push
mov
pop
pop
xchg
mov
cmp
sbb
ficomps
out
push
push
dec
mov
adcl
bound
jbe
imul
inc
fwait
push
jp
and
imul
xchg
call
lea
xchg
testl
pop
adc
push
sub
mov
pop
sbb
ret
push
sub
or
jle
pop
mov
fsts
inc
xor
les
or
adc
mov
xorl
dec
in
repz
scas
hlt
rcl
lret
add
lock
das
mov
pushf
out
sub
jge
mov
pop
add
clc
mov
pop
adc
xchg
push
test
ret
pusha
xchg
cmpb
sbb
aam
inc
mov
fucom
and
and
and
pusha
xchg
push
mov
mull
and
mov
repnz
jecxz
jg
test
ss
data16
aad
js
pop
jl
insb
xchg
mov
call
xor
xrelease
bound
add
cmp
mov
mov
rorl
add
push
dec
pop
fcoms
mov
imul
jo
add
dec
dec
cwtl
push
or
test
jns
push
add
stc
cli
push
pop
jle
bound
xchg
cmpb
in
lock
jae
jne
fsubl
das
pop
psubw
push
roll
inc
adc
lods
mov
mov
andl
jns
sub
jg
popf
mov
test
inc
scas
leave
out
sbb
rol
out
mov
scas
xor
insl
xchg
jo
enter
outsb
mov
shlb
jp
cmpsb
lea
xchg
add
sbb
shlb
adc
stos
lret
insl
cmp
fnstenv
sti
aas
dec
xor
sub
test
mulb
jbe
adc
incb
cltd
je
add
mov
push
ror
pop
inc
stos
mov
aam
and
cmp
dec
adc
cmc
mov
sti
fldt
movsb
sbb
cmp
lcall
movsb
out
push
out
lods
mov
out
jge
adc
lea
punpckhwd
imul
and
loop
mov
mov
je
add
sti
pop
cmc
ss
pop
addr16
mov
cmp
es
mov
pop
arpl
inc
and
rclb
add
in
hlt
dec
mov
xchg
mov
push
subb
sbb
sbb
inc
mov
pop
and
cmp
into
inc
adcl
ljmp
iret
aad
in
outsl
fisttpl
jle
gs
sub
pop
and
jecxz
jmp
imul
pop
insl
pop
out
push
pop
ds
imul
icebp
push
mov
jo
pop
subb
pop
adc
push
inc
dec
sbb
cwtl
mov
insl
hlt
xchg
cmpl
push
pop
add
mov
loopne
sahf
out
repz
sub
insb
popf
scas
imul
cmp
pop
or
mov
mov
and
dec
or
mov
in
xchg
stos
jno
mov
lods
pop
aad
ljmp
lret
xor
mov
add
or
dec
loope
scas
out
cmp
add
cwtl
xor
mov
mov
push
gs
out
sub
call
mov
mov
scas
inc
int
aam
icebp
mov
jno
mov
mov
pushf
data16
push
xchg
jmp
sub
das
test
jp
or
lahf
xor
or
inc
pop
out
xchg
add
xor
insl
bound
movsl
cmc
cwtl
push
outsb
cs
pop
insb
push
adc
cltd
dec
xchg
or
repnz
sub
fstpt
aaa
mov
mov
mov
subb
es
sbb
into
jl
mov
mov
push
pop
fwait
xor
addb
in
aad
sarl
mov
imul
mov
jb
int
xor
les
rclb
clc
lret
jmp
jecxz
push
push
xchg
lock
mov
push
cmp
nop
cltd
or
xlat
test
std
fmuls
add
out
add
nop
mov
jl
ss
sub
jge
mov
and
decl
test
out
push
clc
js
dec
jge
mov
and
jg
stc
repnz
or
mov
imul
push
call
ret
push
stos
out
inc
fisubrs
or
sub
rsm
jl
add
sti
push
or
popf
jno
repnz
adc
popf
mov
sub
dec
ss
rol
push
arpl
and
in
push
movsb
clc
xchg
mov
and
imul
dec
out
test
test
cld
cltd
cltd
adc
sub
insl
jl
adc
lods
lret
cmp
jmp
in
popa
xor
mov
adc
or
xchg
jg
push
stc
add
mov
pop
add
xor
jmp
scas
fdivrl
or
cmpsb
adc
mov
fwait
mov
movsb
movsb
mov
mov
pusha
sub
aad
stos
ret
xor
aam
pop
jb
add
out
pop
push
mov
dec
pop
and
subb
mov
pop
push
lock
stos
fmulp
mov
jg
bnd
test
mov
ret
int
sub
push
pop
jns
sbb
shlb
push
push
cli
ret
dec
mov
push
mov
xchg
jmp
xor
std
cmpsb
xchg
pop
xchg
lea
fcmovnbe
push
mov
mov
adc
test
sti
pop
imul
cmp
and
imul
dec
cli
les
sahf
and
pusha
rcrb
mov
or
lea
pop
inc
mov
lock
cmp
mov
into
std
xor
les
scas
mov
pop
daa
out
sbb
clc
je
sbb
jmp
in
and
pop
out
dec
cmp
rol
xlat
mov
nop
mov
aad
rclb
cwtl
insb
cld
xlat
mov
and
gs
or
inc
adc
outsl
mov
test
jl
xor
push
jne
nop
ss
push
test
fistl
je
or
enter
jae
nop
addr16
cmp
add
push
in
xor
cli
sbb
ds
mov
xor
lock
mov
out
cmp
popa
mov
push
pop
popf
aaa
cmp
push
lahf
cmp
das
jnp
lea
lahf
aad
sti
sbb
mov
and
out
nop
ret
lret
gs
lcall
int
dec
and
sub
movsl
fcmovbe
sub
inc
fisubl
into
mov
adc
mov
out
mov
add
jno
adc
repz
jns
popa
dec
mov
pop
jl
ss
rolb
xor
roll
flds
xor
fimull
fbld
cmc
jno
mov
jge
xor
push
mov
sbb
xchg
leave
in
inc
lret
outsl
xchg
push
outsl
lock
sub
iret
faddl
push
push
out
int3
les
or
out
sub
jns
mov
sub
aad
subb
addr16
fbstp
jl
filds
jmp
mov
push
mov
repnz
inc
inc
mov
cmc
mov
addr16
cmp
mov
xchg
leave
imul
out
lods
js
inc
cmp
jg
sbb
lods
dec
sub
std
cmp
dec
push
fs
jae
jmp
mov
fsubrl
lcall
loop
in
ss
jle
cmp
aam
int
xchg
xor
mov
add
mov
ret
aas
aad
subb
dec
push
adc
xor
shl
das
jns
xor
popa
sbb
xor
inc
inc
scas
sbb
sbb
xchg
xor
bound
push
mov
push
andb
out
mov
sbb
enter
dec
and
insb
fadds
es
popa
ret
mov
push
repz
clc
scas
lock
cmpsb
and
cmpl
and
xchg
test
mov
xor
mov
jno
xlat
lret
gs
clc
jns
inc
bound
test
sbb
mov
push
test
repz
jns
jns
pop
push
mov
add
call
xchg
mov
and
inc
cld
iret
outsl
or
scas
addb
pop
add
mov
sbb
jp
pushf
pop
or
sbb
jge
xchg
xchg
pusha
aam
in
xchg
shl
mov
add
stos
sbb
jmp
push
fldt
popa
cmp
fsubl
mov
out
rorb
add
sub
inc
scas
aaa
dec
xlat
in
and
cwtl
sbb
addr16
cwtl
xor
push
jno
xchg
ljmp
shl
xchg
cmp
insl
cld
xorb
ja
cmp
cmp
cltd
add
popa
adc
xor
mov
lahf
stos
pop
lods
xor
mov
push
adc
mov
loop
inc
push
add
mov
xchg
xlat
or
cli
xor
push
fstpl
lods
dec
jle
test
loop
pop
shrb
subb
xor
outsb
arpl
movsb
and
lret
jge
jno
pop
inc
cmp
push
inc
sub
insl
push
jecxz
dec
pop
shrd
incb
mov
xchg
inc
arpl
in
adc
ds
push
mov
cmp
mov
and
add
stc
dec
jecxz
das
xor
jle
mov
cli
leave
mov
dec
int
push
jb
pop
aaa
cs
stc
cmp
test
adc
mov
add
mov
or
andb
and
lods
lret
stc
adcb
dec
cmp
xor
or
clc
sub
push
and
mov
cli
dec
cltd
gs
push
cmp
or
add
sub
push
fiaddl
loopne
ds
mov
xor
out
lret
cs
push
add
jp
icebp
into
mov
pop
pushf
mov
and
popf
or
aaa
imul
orl
pop
and
and
es
mov
mov
lods
xchg
loopne
cld
xor
fs
lock
test
xchg
adc
or
out
cmp
in
mov
push
jno
sub
fcmovu
jns
add
in
push
mov
sub
jae
cmp
out
sbb
push
sbb
lret
mov
in
cwtl
xchg
ror
pop
xor
xor
in
xorb
inc
mov
xchg
xchg
test
cmp
and
lds
add
push
cmp
in
cltd
test
maxps
adc
fisubrs
xchg
scas
mov
xor
shr
in
push
fidivl
lret
adc
dec
adc
arpl
mov
inc
cli
into
add
aas
mov
ss
lods
sbb
outsl
mov
hlt
inc
xchg
mov
sbb
decl
and
pop
mov
push
fs
dec
incl
jbe
push
sub
lahf
cli
lods
jo
mov
lret
sub
pop
clc
push
and
ja
lret
push
fwait
stos
cld
arpl
cmp
pop
cmp
loope
into
out
and
lods
popf
adc
adc
add
pushf
jg
jnp
xchg
add
shlb
test
mov
imulb
dec
add
int3
mov
fwait
sahf
je
rcl
addr16
addl
enter
xchg
xchg
lcall
out
imul
aam
into
dec
cmovp
jns
fcoml
jmp
ss
lock
out
adc
xchg
arpl
scas
fbstp
jle
mov
sbb
lock
dec
out
mov
test
leave
insb
nop
sbb
sbb
mov
aad
nop
data16
lret
dec
mov
mov
insb
mov
xchg
dec
mov
sub
add
jo
ret
movsb
lods
mov
inc
arpl
lcall
pop
inc
jo
test
xchg
jle
aam
adc
jb
and
stos
adc
dec
push
loop
mov
xchg
and
loopne
pop
xchg
add
pop
int
lea
mov
mov
jae
mov
pop
jbe
subb
shr
out
push
or
push
add
jne
or
mov
dec
ja
popa
movsb
or
pop
aaa
stc
and
jmp
pop
cmp
cmp
fisubs
add
add
out
clc
pop
push
cmpsb
in
xchg
arpl
and
mov
dec
push
daa
stc
mov
idivl
subl
inc
mov
or
and
test
mov
scas
inc
decl
cmpsb
mov
fwait
dec
jge
jno
inc
mov
mov
mov
pusha
xlat
pop
movsl
inc
sbb
adc
push
divl
test
lahf
add
xchg
loope
pop
inc
pushf
cmp
and
sbb
cmp
push
mov
sub
divb
xchg
xchg
pop
inc
pop
faddl
cmc
adc
lcall
cmpsl
jne
and
fs
adcb
dec
int
cmp
ss
xchg
xlat
jno
pop
test
insb
out
push
fcomi
cltd
sub
ret
ss
aaa
out
xchg
and
cmc
out
insb
int
mov
sbb
dec
add
add
push
sub
mov
scas
adc
mov
das
stos
sarl
push
lcall
push
out
cmpsl
pop
mov
iret
shll
fwait
xchg
lock
push
push
mov
lea
cmp
sahf
sub
stc
cmpl
outsb
cld
mov
pop
jno
mov
sub
xchg
adc
insb
and
pop
in
fistpll
mov
and
gs
stos
sub
and
test
and
mov
jnp
sti
aaa
xchg
mov
ja
jecxz
fsubs
les
lock
or
xlat
push
xchg
inc
xor
adc
pop
js
insl
fsubr
or
mov
in
or
pop
rclb
clc
out
pop
mov
and
rclb
jno
adc
xor
ret
mov
shrb
add
add
mov
daa
sbb
mov
in
pop
ret
test
jne
leave
subb
cwtl
cmp
jle
cli
out
popf
jp
dec
inc
stc
lret
jmp
ss
xlat
notl
jne
shrl
call
inc
push
test
push
or
js
mov
in
mov
xor
cwtd
pop
push
bound
rcrl
inc
and
mov
sub
nop
add
mov
cld
or
into
pop
push
out
jl
insb
xchg
je
mov
mov
daa
andb
mov
or
out
or
inc
imul
sub
popa
mov
jbe
fistl
mov
mov
mov
push
adc
imul
push
jb
inc
and
fists
in
imul
insl
lock
lret
xchg
inc
inc
insb
sub
sub
nop
xlat
aad
xor
iret
jae
pop
test
mov
cmpsb
xchg
aad
cmpsl
cmp
jmp
popl
aad
scas
and
push
or
pushf
or
je
jge
adc
xor
jb
mov
dec
icebp
stos
push
outsb
jnp
test
clc
mov
incb
decb
fmul
inc
cmovbe
cmpsl
push
adc
xchg
xor
cld
mov
hlt
inc
out
loopne
xchg
mov
cmp
or
mov
mov
mov
clc
jmp
mov
out
inc
aam
mov
lcall
pop
fisubl
dec
cmp
push
and
fimull
insl
push
push
int3
fcmovnb
push
pop
push
add
mov
xor
stc
cmp
mov
lret
nop
xor
mov
mov
pop
sbb
ficoms
dec
sbb
daa
aad
push
lods
test
in
leave
insl
lods
or
enter
lds
addr16
and
lock
xchg
add
fbstp
mov
mov
cmpsl
fstps
xchg
jbe
fwait
xor
lock
cli
hlt
pushf
repnz
jle
ljmp
inc
leave
outsb
test
insb
push
mov
pop
stos
loop
ss
aaa
push
shlb
testl
pushl
xor
imul
dec
mov
push
sbb
xchg
mov
xchg
jno
or
mov
push
sbb
fmuls
lret
or
pop
cmpsb
out
ret
mov
add
push
push
adc
dec
cmp
fadd
sub
addr16
aas
call
rcrl
shll
insb
dec
sub
pop
mov
int3
or
rcl
cmc
cmp
xor
aas
adc
fs
and
bound
xchg
les
and
pop
xor
mov
popa
test
pop
lods
xchg
lcall
out
ret
mov
push
add
push
dec
out
xor
mov
cmc
enter
mov
in
jo
sbb
stos
lock
xchg
fldl
jns
mov
lds
jne
mov
adc
ret
sbb
stos
aas
cmpsb
and
mov
les
sub
cmp
add
sub
fcomps
inc
popf
and
jo
out
add
aam
xor
mov
mov
scas
inc
mov
loope
mov
fwait
sub
subb
and
sbbb
jo
nop
sbb
xlat
push
js
mov
lret
shll
leave
nop
and
push
leave
out
pusha
jg
sub
sub
jmp
mov
sbb
imul
stos
mov
xchg
lret
andb
ret
cli
jb
jle
fsubp
mov
push
xchg
mov
adc
sub
mov
jnp
or
jb
cmpsl
lock
aas
popf
jecxz
das
pop
push
sbb
lods
push
cmp
outsb
mov
add
jg
bnd
lahf
push
pop
mov
sub
loope
test
lret
mov
or
hlt
mov
sbb
mov
pop
push
imul
insl
cmp
ds
inc
inc
adc
movsl
xchg
movsl
cmp
jno
loopne
jle
push
and
ret
fs
les
stos
mov
daa
test
cwtl
jmp
nop
jo
dec
jle
pop
scas
das
and
mov
add
stos
dec
ss
iret
je
mov
cltd
mov
sub
or
addr16
pop
int3
push
std
scas
mov
movsb
xchg
pop
cmp
push
stos
fdivrl
iret
decl
or
mov
test
inc
sub
mov
mov
and
lods
iret
ret
push
cmpl
pop
or
cmp
inc
adc
stos
clc
fidivs
je
fldl
mov
mov
inc
push
jge
pop
xchg
cmp
push
mov
roll
push
fisubrl
mov
ja
iret
xchg
jnp
pop
jno
popa
popf
aaa
sub
sbb
and
loope
stos
lret
jno
shr
in
push
push
or
mov
xchg
sub
push
mov
or
adc
mov
mov
and
pop
or
std
ds
mov
popf
iret
sbb
mov
cmpsb
xchg
push
push
test
fs
call
cmovae
cmp
or
add
mov
je
out
dec
insb
xchg
mov
cmp
jp
shlb
jle
inc
dec
outsb
mov
inc
inc
sti
mov
xchg
mov
rcrb
test
loop
pop
cld
push
fs
fsubs
xor
outsl
test
iret
test
xor
ja
xchg
mov
mov
stos
sbb
shll
fnsave
pushf
or
lcall
dec
int
das
aas
sbb
test
lods
jp
movsb
xor
jo
ret
jp
popl
mov
mov
int3
adc
out
leave
cwtl
out
adc
js
and
aaa
adc
rclb
xchg
push
xlat
rcrb
sub
sub
push
jge
adc
or
push
and
icebp
rcrl
aas
call
rcrl
mov
cmpsb
xor
jno
loop
inc
dec
popa
mov
imul
sbbb
mov
pop
into
push
cwtl
mov
jmp
sbb
push
ja
pop
jnp
push
and
insb
add
mov
mov
rolb
repnz
stos
cs
into
leave
ret
mov
lret
test
mov
rorl
repnz
adc
cmc
sub
sub
xchg
xor
pop
scas
add
loopne
ja
out
stos
pop
js
repnz
sbb
inc
sub
daa
mov
mov
or
adc
jno
mov
test
call
imul
insb
sbb
mov
lahf
stos
push
sub
cmp
add
fiaddl
rolb
int3
test
pop
cli
push
xchg
mov
mov
sub
sub
pop
add
push
cmp
out
sbb
pop
ljmp
adc
cmpsl
adc
lcall
xchg
rorb
in
or
jg
inc
lahf
pop
pop
dec
push
scas
pop
mov
jae
fildll
adc
pusha
mov
jne
and
push
lock
negb
add
mov
jno
popa
nop
roll
inc
jb
lock
fcom
scas
stos
xor
loop
les
and
or
push
adc
out
fsubl
cmp
fdivrs
jo
push
xor
aad
cmpsb
pop
mov
adc
xlat
xchg
in
and
jne
orl
xchg
adc
mov
cld
fsubs
add
push
lock
mov
int
pop
shll
std
cltd
xchg
enter
cmp
in
and
ss
popf
add
cmp
idiv
pop
lret
pop
push
cmc
push
push
xchg
mov
ja
imul
adc
nop
setbe
scas
es
fdivl
cmp
fsubl
lcall
pop
rcrb
or
cmc
out
add
inc
fildl
jno
stos
jl
xchg
inc
imul
sbb
repnz
lret
cwtl
sbb
stc
xchg
push
movsl
aaa
dec
lods
ljmp
push
pop
inc
mov
jge
dec
sub
aaa
jae
mov
loope
into
test
call
mov
jnp
divl
add
fmul
lods
add
rorb
divl
das
into
xchg
fs
lods
xor
push
cmp
mov
dec
add
loop
hlt
push
cs
movsl
dec
push
mov
pusha
mov
stos
std
sbb
dec
inc
jecxz
inc
iret
int3
arpl
pop
pop
cwtl
pop
mov
fidivrs
jnp
mov
lods
pop
cli
xlat
pop
imul
push
cli
into
xor
pop
xchg
stos
outsb
inc
push
pop
jmp
xchg
stos
imul
out
test
aas
incl
roll
jg
xchg
mov
stos
shlb
or
push
sub
or
ret
pusha
cwtl
sbb
cs
imul
cmp
inc
and
test
add
pop
movsb
aas
sub
fdivrl
xor
cmp
into
cmpsl
mov
xchg
cmp
arpl
pop
icebp
add
fstl
pop
lahf
and
jge,pt
jmp
sbb
xor
dec
out
popf
arpl
sub
std
pusha
xlat
mov
flds
loope
jle
out
jmp
loopne
mov
xor
les
sbb
stos
pop
loope
push
repz
dec
inc
lock
sub
mov
rcr
sarl
outsb
push
pop
pop
mov
cmp
and
sbb
adc
add
push
out
setno
out
jge
xor
test
lahf
aad
icebp
inc
repnz
mov
js
push
cmpsb
rorb
mov
xchg
insl
cmp
out
outsl
inc
sbb
pop
and
rorb
xor
lahf
addr16
dec
jmp
dec
pmuludq
or
notl
loop
rclb
loop
mov
in
or
or
mov
and
jle
mov
movsl
jb
loopne
dec
inc
pop
mov
mov
fs
add
scas
sub
lock
adcb
mov
mov
mov
sbb
or
daa
fcompl
das
and
repz
pop
inc
xchg
adcl
lcall
bound
mov
loope
test
jb
punpcklwd
stos
adc
pop
lds
jne
loop
insb
mov
and
pop
pop
push
dec
pop
jae
nop
mov
daa
fsubrp
or
pop
mov
mov
sahf
cmc
dec
mov
pop
repz
loopne
push
imul
pop
push
outsb
jg
ror
xchg
sahf
and
ja
sti
notb
cmp
pop
lods
int3
into
stos
push
adc
pop
inc
inc
or
sub
dec
cli
neg
jg
int3
cmp
mov
mov
cmp
ret
fisttps
scas
addl
mov
ds
adc
enter
into
out
mov
jno
pop
sarb
jmp
push
fwait
xchg
mov
ds
xor
negb
add
adc
hlt
push
dec
cmp
mov
mov
mov
addb
repz
repnz
daa
ja
fmul
sahf
mov
inc
call
sub
decl
jecxz
mov
popf
adc
mov
xchg
ss
gs
hlt
scas
mov
inc
mov
sub
and
fsubl
xchg
loope
in
or
jbe
sbb
mov
cmp
mov
xor
push
loope
sub
mov
push
and
add
popa
fprem
clc
popf
pop
mov
dec
aaa
dec
adc
or
ss
fimuls
insb
scas
imul
rolb
test
mov
push
les
xchg
mov
fwait
fwait
mov
cmp
mov
adc
cmpsl
mov
xor
out
dec
imul
cmp
or
sarb
cli
ja
mov
outsb
icebp
sub
lods
mov
pop
adc
xor
stos
sbb
js
sub
popf
aaa
push
nop
in
nop
add
push
xor
inc
loopne
call
test
mov
loope
xorb
fsubs
cmp
mov
pop
add
test
pop
mov
add
pop
loop
dec
push
or
das
imul
and
test
dec
pop
xchg
dec
cmp
and
mov
icebp
pusha
shll
mov
xor
lds
enter
sbb
mov
repnz
inc
hlt
or
lahf
test
or
pop
inc
add
daa
cmp
mov
fmull
fiadds
stc
int
pop
push
cmc
lret
aad
les
fisttps
and
and
cmpsl
cmp
add
dec
cmp
shll
inc
mov
xor
pop
mov
cltd
xor
mov
sbb
testb
inc
cmc
xchg
test
adc
inc
xchg
repnz
mov
cmp
arpl
inc
rol
xchg
in
addl
je
test
lods
mov
popf
roll
into
add
data16
hlt
nop
es
insl
xlat
out
inc
push
or
cmp
push
xchg
pop
inc
pop
mov
dec
sahf
lret
gs
lea
pop
fs
scas
ret
mov
push
push
clc
movq
pop
mov
sbb
inc
cld
cmp
scas
pusha
pusha
xor
clc
js
clc
adcl
cmpsl
pop
sub
rorl
iret
rcrb
mov
add
sahf
scas
in
or
outsb
dec
call
push
and
addr16
cwtl
jae
fisubrl
push
pop
mov
mov
sti
shll
cwtl
cmp
movsb
loopne
jl
popa
xchg
repz
leave
dec
cmpsl
inc
mov
mov
das
mov
scas
jno
xchg
test
sti
loopne
sbb
add
pop
inc
or
push
pop
in
aaa
xchg
ds
jae
or
es
popa
lcall
inc
aaa
xchg
es
popa
jge
stc
ds
mov
pop
cld
je
mov
es
and
cwtl
jae
xchg
or
insb
int
arpl
sub
sub
add
mov
mov
std
mov
jnp
xor
mov
adc
std
jae
mov
dec
push
fnsave
jp
call
sub
xchg
inc
xor
sub
adc
dec
jmp
xchg
hlt
inc
dec
in
pop
and
or
std
dec
int
push
nop
push
adc
bound
adc
ret
mov
jo
mov
jmp
or
xor
sbb
outsl
push
cs
hlt
dec
adc
jb
loope
push
test
xchg
sbb
pop
aad
je
pop
xchg
xchg
xchg
test
scas
ja
xor
jnp
test
adc
push
in
and
jge
popa
push
adc
cmp
lcall
dec
and
call
push
or
and
add
mov
or
addr16
and
or
add
cs
incl
int
xchg
dec
or
xchg
mov
xor
test
arpl
fwait
outsl
xchg
sub
push
xor
dec
aam
push
nop
push
std
lret
xchg
addr16
rorl
push
mov
inc
jmp
popf
das
xor
out
mov
dec
cmp
dec
scas
outsl
cmp
rcl
sti
mov
js
jge
cmc
sbb
aad
in
rcrb
push
add
daa
cmp
fdivs
int
and
xchg
jmp
mov
sbb
js
sti
stc
sti
jp
add
mov
pushf
aam
sub
jns
lcall
mov
xor
mov
xor
in
sub
xor
jl
push
xchg
ficomps
in
cmp
mov
xor
and
cli
movsb
inc
lods
xchg
scas
cs
rorl
sarb
jp
sbb
and
pop
pop
cmpsl
inc
xor
jne
int3
push
faddl
loopne
dec
dec
cmpsb
push
sub
fnstcw
loope
stos
mov
sbb
sbb
push
or
push
mov
enter
idiv
mov
sbb
and
outsl
aas
addb
dec
adc
lock
mov
xor
inc
daa
mov
dec
jno
add
rclb
pushf
add
orb
xchg
jmp
js
push
leave
cmp
imul
jg
icebp
sbb
pop
inc
adc
addr16
cld
mov
shll
xchg
lea
xchg
sub
into
loope
mov
int
orl
clc
cmpsb
cmp
xlat
sti
xchg
insl
mov
mov
pop
popa
sbb
xor
push
dec
mov
lcall
lods
add
pop
sbb
sbb
push
sbb
sti
jge
and
cwtl
aam
push
adc
fiadds
pop
xor
push
aad
mov
std
in
push
pop
mov
xor
aas
int3
jg
push
xor
imul
sbbb
daa
ljmp
popa
out
insl
jecxz
jno
dec
push
jo
mov
pop
add
push
xor
in
mov
in
xchg
pop
sbb
frstor
cmp
imul
cltd
xlat
adc
inc
mov
popa
ja
dec
and
scas
pop
outsl
lcall
sub
or
and
pop
inc
sub
out
mov
jno
dec
aaa
imul
adc
fnstsw
fisubs
pop
aam
xlat
xchg
xchg
out
imul
aam
cs
outsl
jg
jae
insl
cmp
push
and
ja
in
out
je
popa
jmp
out
repnz
cmc
cmp
roll
jne
ja
xchg
imull
aam
in
lgs
cwtl
xchg
push
int3
xchg
mov
es
outsb
fnstcw
dec
sbb
hlt
adc
fnstcw
rorl
ret
xchg
sub
stc
icebp
dec
xlat
jmp
out
addr16
imulb
mov
sbb
inc
cli
loop
lcall
pop
pop
test
out
leave
shrb
cmpsb
out
pop
add
andb
stos
fistps
inc
sbb
cld
loop
lret
jg
cltd
movsb
lcall
pop
mov
inc
and
mov
dec
rclb
fs
jae
roll
ret
iret
sbb
cld
repnz
pop
pop
inc
pop
add
lds
cmp
sub
das
sbb
pushf
je
mov
es
cmpsl
int
jmp
cld
popf
ret
cwtl
cmp
pop
push
dec
adc
dec
add
int3
std
lret
xor
or
cmpb
fsubr
mov
pop
insl
inc
jle
xor
ficomps
pushf
call
sub
mov
xorl
and
push
dec
inc
mov
cmc
imul
pop
xor
imul
adc
mov
outsb
sub
ss
xchg
pushf
or
sub
cli
jo
mov
ss
jo
and
cmc
rolb
jg
jmp
loop
in
adc
jmp
ret
insl
fisubl
push
pop
dec
sbb
inc
push
inc
sarb
test
mov
loope
arpl
fsts
xchg
aaa
pop
push
imul
fwait
jae
inc
ficoml
sbb
jg
mov
mov
test
sub
ret
scas
adc
stc
lods
inc
shlb
xchg
int
imul
roll
fisttpl
sbb
test
jo
mov
sbb
or
mov
jae
jmp
push
testl
mov
inc
pop
mov
aas
xor
faddp
adc
in
adc
fmul
push
lods
jae
mov
push
mov
or
in
cmp
sbb
dec
aad
adc
lds
aam
mov
pop
rorl
mov
dec
sbb
aaa
cmp
xchg
mov
loope
out
xchg
incb
out
mov
xor
sbb
mov
pop
les
mov
and
or
xchg
dec
fildll
add
fs
dec
ret
insl
andb
fxch
jb
adc
into
lds
dec
out
cmpsl
add
aam
pop
cmp
jne
sbb
lret
and
jnp
push
pusha
add
xor
inc
pop
imull
hlt
cli
in
cltd
adc
inc
dec
or
jbe
mov
stos
lods
push
ja
popf
sub
jae
add
outsl
push
das
icebp
add
dec
xchg
cmpsb
xchg
imul
push
jmp
insb
ficoms
jb
test
cs
inc
pop
rorb
out
dec
aam
jp
popa
xchg
scas
fs
adc
ja
xchg
in
es
sbb
in
xchg
aaa
and
fs
js
xor
mov
sub
mov
pop
sub
pop
sub
jbe
xlat
adc
xor
jecxz
lea
cmpsb
push
int
xchg
sub
push
cli
push
pop
lock
push
and
add
nop
jmp
add
rorl
adc
loop
pop
adc
lea
pop
insb
pop
aam
movsl
or
and
dec
fiaddl
pusha
aam
cmp
stc
aam
sar
leave
cmpsl
mov
sahf
in
jmp
mov
inc
fcomps
mov
add
cmp
add
adc
mov
xchg
lock
pop
aam
pop
jecxz
test
pop
mov
mov
push
cmpl
shl
add
fadds
out
lahf
push
pop
stos
call
xor
fidivrs
xor
aas
dec
addl
loope
cmp
js
sub
lods
push
and
into
je
mov
mov
or
pop
pop
adc
cmpb
jmp
ret
shll
int3
test
cmp
sarb
inc
add
cmp
inc
sub
jns
stc
adc
cmp
je
jb
jno
mov
xlat
pop
js
adc
lahf
lret
sub
or
and
lea
int3
push
mov
jp
mov
sbb
insl
pop
jp
stos
call
clc
insl
hlt
jo
dec
adc
fisttpll
or
push
dec
or
pop
adc
dec
jb
cmpsl
dec
xchg
std
sub
inc
jno
cmp
mov
mov
adc
popa
shll
xchg
dec
movsb
cmp
sbb
and
ljmp
mov
stos
insl
sub
sbb
mov
mov
les
rolb
in
dec
mulb
lret
mov
push
sub
rolb
repnz
sub
pop
add
xchg
ret
pushf
mov
in
and
hlt
loop
or
inc
pop
cltd
mov
jmp
aad
xchg
xor
mov
xor
mov
notl
adc
int
jg
and
mov
sbb
pop
cmp
mov
xor
dec
or
dec
stos
popf
cwtl
mov
ja
int3
insb
xor
adc
cmp
xlat
stc
je
enter
scas
icebp
or
mov
mov
inc
push
lods
sub
cmp
addr16
ljmp
int
fwait
arpl
jo
add
cmpsb
or
push
clc
bswap
jbe
adc
jb
add
push
jge
call
int
xor
jge
xor
sbb
jge
adc
xchg
lahf
int
xchg
sub
cmp
cld
insb
push
lahf
sbb
pop
mov
sub
cwtl
rep
lret
add
pop
push
mov
add
mov
xchg
popa
mov
nop
mov
es
mov
movsb
ret
jge
add
mov
dec
xchg
stos
cmpsl
into
lock
test
mov
lods
sub
sub
cld
mov
pusha
clc
mov
call
adc
sub
xchg
pop
sub
das
push
imul
stos
jmp
push
mov
mov
stc
fs
xor
sub
adc
cmp
adc
sub
jns
mov
lea
push
repnz
dec
pop
mov
es
shl
adc
jp
int3
aad
mov
fsts
popa
js
or
lds
mov
ret
mov
fisttpl
mov
movsl
pop
insb
mov
js
lcall
xchg
ds
dec
out
loopne
or
ljmp
out
jo
inc
in
scas
add
add
int
rcrl
sahf
and
push
mov
jbe
inc
in
add
mov
mov
mov
cmpsb
in
pop
insb
push
daa
fwait
das
add
xchg
mov
push
mov
xor
fdivrs
ret
test
add
sar
mov
xor
movsl
fstps
dec
insb
cmp
cmc
mov
sbb
and
inc
sbb
daa
cmp
and
js
mov
jo
push
add
movsl
js
or
roll
adc
jle
test
push
mov
imul
bound
sahf
stc
outsb
test
mov
sub
fcoms
xchg
orl
imul
sbb
inc
aad
es
push
jmp
mov
add
popf
xchg
lret
outsl
popf
xchg
fidivrs
icebp
shlb
sub
pushf
push
cmp
inc
in
in
lret
cmp
pop
roll
pop
jmp
jp
fnstenv
fsubs
lret
icebp
pop
scas
iret
mov
inc
ret
push
inc
adc
imul
inc
push
mov
es
loop
nop
inc
jge
ds
test
aad
add
cs
jbe
cs
inc
pop
bound
xchg
cmp
adc
push
or
cmp
cmp
xor
call
adc
std
pop
clc
sahf
push
dec
and
pop
dec
popf
pop
inc
and
mov
cmpsb
fists
xchg
sub
iret
subl
mov
ss
bound
jecxz
jmp
cmp
pop
xor
jo
push
fcomi
imul
movsl
add
or
movsb
outsb
cli
dec
rorb
hlt
jg
rolb
adc
imul
sbb
ret
xor
push
je
icebp
out
fisubrs
sub
dec
sbb
jle
lock
inc
push
stos
push
or
mov
xor
mov
add
xchg
ss
jg
in
ss
jecxz
and
pop
mov
mov
nop
xchg
sbb
jg
push
arpl
cwtl
and
push
pop
hlt
push
jl
and
cwtl
sub
idivl
arpl
mov
daa
fs
push
xchg
popa
lods
sbb
sar
pop
out
ljmp
jne
push
pop
outsl
sbb
pop
lods
aam
jmp
js
dec
shr
xchg
roll
std
jp
mov
into
lock
stc
dec
pop
sahf
in
xor
add
jecxz
cmp
mov
inc
mov
jmp
cs
jge
or
outsb
outsl
push
sahf
ret
bound
out
hlt
ret
and
and
fstpt
push
lret
add
ret
fs
pop
dec
jmp
ljmp
out
mov
cmp
inc
in
gs
aad
adc
jmp
cld
push
mov
sbbb
insb
mov
popf
sub
adc
mov
out
mov
in
aam
add
iret
cmp
jp
mov
daa
out
mov
fstpl
sbb
mov
mov
shll
scas
pop
jnp
mov
lods
movsb
ret
sbbl
sub
loope
cmpsl
mov
xchg
addr16
es
out
or
cmp
lods
ds
dec
je
cmp
adc
add
xchg
je
repnz
mov
sub
out
push
call
add
inc
enter
test
jnp
cld
dec
ret
lods
nop
ljmp
pushf
add
sub
pop
popf
push
into
popa
stos
sahf
dec
rclb
and
jns
fwait
test
sbb
fwait
test
pop
pop
xchg
stc
mov
test
cltd
xor
mov
out
push
sbb
lcall
test
test
add
sbb
cmp
cmp
push
or
int
mov
and
jg
jbe
pop
sahf
mov
dec
xor
call
sbb
or
push
push
mov
jge
mov
pop
add
dec
je
mov
lret
inc
jp
mov
movsl
mov
push
call
fsts
or
pop
cltd
mov
pushf
and
xor
addl
test
repnz
and
mov
pusha
xchg
repz
sub
push
xchg
test
jle
mov
adc
aaa
xchg
out
repz
and
or
pop
loop
jne
jg
inc
test
test
add
sahf
fninit
das
scas
shlb
push
and
adc
in
cmpsl
fwait
insb
jo
rorl
mov
insb
rol
mov
push
sbb
rcrl
xor
int
cmp
sbb
adc
push
xor
push
popa
jb
push
movsb
shrb
pop
and
inc
push
mov
cmp
aas
sbb
and
jne
stos
test
sbb
mov
mov
or
or
adc
div
mov
arpl
into
into
addr16
mov
call
push
fistpl
push
or
mov
cmp
fs
pop
lods
stos
and
mov
int
test
lock
xchg
jns
test
sub
xchg
insb
ror
pop
aas
pop
loope
cli
jmp
lret
stc
push
or
push
cmp
in
rol
xchg
lods
push
pop
dec
scas
fucomi
out
movsl
inc
int3
adc
mov
imul
cltd
outsb
and
jo
xchg
push
pop
add
in
xor
dec
xor
movsb
ja
mov
jle
sub
push
adc
out
mov
xor
or
lods
hlt
repnz
pop
movsl
add
inc
push
mov
test
inc
inc
add
jbe
call
int
mov
ror
jl
testb
pop
test
insb
lret
rolb
push
nop
pushf
das
das
testl
movsb
loopne
cld
cmp
inc
or
mov
popa
out
xchg
dec
sub
jns
repnz
inc
psubb
xchg
in
xchg
fcomip
call
jecxz
fildll
ret
sub
outsl
jl
das
pop
mov
and
outsb
data16
arpl
cmpsb
jno
jb
push
inc
lret
iret
dec
adc
push
shr
mov
sub
pop
push
and
arpl
mov
jb
dec
sahf
fwait
mov
mov
jo
imul
outsb
mov
add
in
fnstenv
jb
pop
or
adc
cmp
push
mov
clc
add
popf
inc
mov
pop
and
test
add
xchg
sbb
add
out
inc
xlat
cmp
jno
mov
lods
pushf
dec
fcmovnb
inc
mul
mov
jno
jno
or
xorb
adc
push
repz
ja
outsl
test
cmpsl
negb
add
loop
add
pusha
fcmovb
cmp
adc
or
int
sbb
in
cld
dec
mov
lret
cld
mov
or
cmp
xchg
pop
fisttpl
mov
lahf
ja
std
cmp
jle
mov
lcall
mov
push
rorl
jp
inc
push
loopne
shr
or
xchg
sbb
mov
pop
mov
int3
push
jnp
aad
cmpsb
fisttpl
jge
mov
push
cmp
xchg
mov
sbb
gs
ja
adc
mov
pop
lea
cli
lcall
daa
outsl
repz
pusha
test
and
out
dec
adc
clc
enter
divl
cli
sbb
mov
xchg
cmp
or
mov
frstor
pushf
icebp
or
jg
fdivrs
cmpsb
adc
add
sbb
pushf
mov
aas
push
mov
dec
mov
pop
jne
cmp
aaa
push
mov
add
movsl
pop
mov
jp
inc
mov
rorl
sbb
lock
in
inc
xchg
pop
mov
rol
sbb
mov
and
jns
or
adc
pop
out
mov
mov
add
int3
ljmp
xor
pop
pop
pop
js
test
sub
mov
dec
rolb
adc
sbb
mov
dec
imul
pusha
mov
and
hlt
pop
lods
icebp
mov
mov
insl
mov
xor
fisubrl
cmp
insl
mov
and
shll
and
or
or
xchg
or
insb
int3
mov
fs
sbb
xor
aam
sub
mov
sub
insb
jae
gs
cmc
pop
dec
shll
cmp
fisubl
fstp
faddp
into
incl
std
pusha
inc
cmp
out
xor
jns
pop
mov
cwtl
or
sbb
and
out
fstpt
pop
sbbb
mov
add
dec
inc
aad
mov
lods
movsb
xor
xchg
sub
into
and
mov
dec
and
sbbb
clc
and
cmp
xchg
adc
scas
or
dec
cld
push
and
test
sub
inc
popa
xchg
orl
xlat
or
pop
mov
call
sub
int
enter
dec
push
mov
sub
fwait
mov
int3
sbb
adc
imul
push
xchg
out
and
fstpl
or
adc
out
adc
pop
inc
add
push
jl
pop
and
xchg
pop
aas
push
adc
pop
movsb
les
ljmp
jno
repz
js
cmp
jp
mov
test
sbb
aaa
mov
aas
dec
cld
nop
push
add
das
jnp
or
cmpsl
xorb
xor
fcoml
push
jno
and
mov
jmp
xor
adc
pop
fsubp
push
in
aad
mov
dec
inc
mov
popl
imull
mov
leave
addr16
repnz
mov
pop
xor
dec
and
aas
cmpb
push
mov
int3
inc
and
je
pop
cmc
cli
popf
push
sar
dec
push
loop
push
rcrb
rorb
popf
mov
cmpsb
inc
cmp
mov
ret
or
call
fildl
nop
cli
shlb
inc
push
sti
pop
fwait
mov
pusha
shlb
outsb
mov
out
cmpsb
lods
mov
cmpsb
shll
nop
incb
sub
sbb
push
inc
xorb
and
mov
daa
push
inc
push
dec
mov
add
add
cmp
xor
fildll
sub
sbb
sub
in
rolb
adc
fs
imul
xor
mov
sbb
test
int
addr16
inc
mov
insb
ss
or
arpl
jnp
stos
lcall
dec
shrl
mov
mov
fcmovnbe
rorl
je
stos
lock
rolb
ds
push
mov
std
adc
repnz
hlt
in
out
fwait
nop
mov
xchg
xor
jbe
fdivl
push
pop
pop
push
daa
enter
push
dec
or
in
push
arpl
repz
test
push
sub
iret
mov
push
jecxz
and
inc
xchg
scas
int
sub
lret
ds
repz
cmp
movsl
jbe
stos
add
xchg
stos
xor
test
mov
fwait
cs
jne
ret
cmpsb
lahf
fwait
xchg
in
fwait
stos
or
fldt
inc
inc
push
cmp
leave
jbe
adc
jo
in
cmp
loope
arpl
mov
enter
sahf
fidivl
sahf
mov
sbb
jns
arpl
cmpsb
mov
xchg
lret
in
jbe
lret
mov
mov
cs
repnz
pop
adc
pop
or
imul
jp
stos
jmp
dec
xchg
pop
insb
mov
dec
pushf
mov
fcmovu
jge
out
mov
and
xor
jp
stos
pop
dec
shrb
cmp
hlt
push
xor
out
jg
es
les
imul
insl
xor
aam
mov
jnp
mov
imul
das
push
cmp
ljmp
jecxz
hlt
sbb
pop
and
stos
dec
add
ja
ljmp
mov
addr16
sbb
div
ds
inc
add
clc
je
int3
jge
shlb
cmp
jge
dec
ljmp
insl
adc
inc
fwait
pop
mov
xchg
inc
and
mov
pop
jle
testl
fsubrl
jg
rol
pop
sub
lret
aad
cmpsl
test
int3
leave
std
test
loope
push
or
mov
and
cmp
pop
loop
adc
out
mov
push
or
xchg
popa
xchg
aas
dec
mov
stos
inc
ret
lret
jl
pop
add
dec
js
movsl
movsb
iret
std
popa
adc
test
jge
icebp
jbe
inc
pop
outsl
or
cmp
or
lret
popf
scas
push
and
mull
pop
mov
inc
pop
les
push
inc
stos
jecxz
jmp
enter
dec
push
cmp
and
mov
adc
dec
lret
mov
mov
frstor
jg
popa
pop
xor
cmpsb
pop
cmp
arpl
push
hlt
and
and
jnp
and
pop
mov
xchg
lods
fcomp
sbb
xor
sbb
out
lret
sahf
lea
arpl
popf
dec
dec
and
insb
jb
cli
mov
xor
mov
xlat
pushf
cmp
sti
sub
outsb
add
mov
inc
das
adc
outsl
sbb
popf
mull
jno
lds
add
inc
push
add
insl
sbb
popf
fidivrs
mov
push
cmp
and
sbb
cmpsl
nop
jecxz
and
leave
lret
mov
cmp
add
imul
xor
add
cmp
inc
xchg
xchg
je
in
mov
andl
push
dec
add
ret
inc
adc
loop
xchg
cs
mov
lret
mov
lret
jmp
mov
mov
pop
jnp
xchg
int
mov
popf
andl
repnz
ja
lods
adc
cmc
push
sbb
dec
inc
scas
push
push
cmp
repnz
dec
inc
inc
imul
test
popf
lock
mov
cmp
cld
imul
push
push
dec
test
mov
jmp
lcall
jns
push
pushf
repz
in
mov
ret
mov
loopne
cmp
dec
lea
shll
mov
xchg
adc
and
sbb
iret
lock
rolb
fbstp
cmp
negl
imul
mov
fisttpll
inc
dec
cmp
mov
mov
pop
mov
fidivrs
out
fistpl
sti
adc
cmpsb
popf
xchg
es
push
xor
jg
xor
push
add
adc
or
xor
sub
jmp
inc
test
mov
add
mov
xor
out
fucomip
sbb
add
mov
aas
sahf
jge
dec
dec
pop
push
cwtl
jbe
mov
push
sahf
sub
sub
xlat
pop
and
shlb
adc
jae
mov
cwtl
xor
inc
or
shll
movsb
sbb
aas
and
pop
out
and
shrb
push
inc
pop
aas
and
push
or
mov
imul
xlat
imul
into
lcall
cltd
cmp
negb
add
data16
lock
clc
pop
lds
and
xor
add
xlat
mov
sti
in
push
and
out
lahf
xchg
cmp
cmp
ret
adc
loopne
sbb
fldl
aad
fisttpll
jmp
adc
es
in
cwtl
enter
mov
mov
in
test
lret
dec
jnp
fbstp
sbb
mov
dec
sub
jp
mov
sub
xor
aaa
nop
mov
push
add
shrb
rdpmc
sbb
cmp
mov
enter
jae
jnp
insl
decl
lahf
les
inc
and
loope
adc
outsb
lret
mov
sbb
aad
jg
cmp
adc
in
xor
pop
xchg
adc
out
xchg
cmp
mov
sbb
mov
fnsave
fisttps
sahf
mov
adc
xchg
call
js
into
push
pop
aad
pop
fildll
jg
mov
adc
mov
mov
inc
int
sbb
mov
cmp
hlt
cld
jae
frstor
xor
push
scas
cmp
mov
or
mov
xor
mov
inc
dec
mov
mov
mov
insb
fdivl
adc
dec
dec
cmp
scas
push
jns
or
adc
lcall
iret
lods
push
pop
xor
push
addb
data16
and
jb
pop
repnz
les
mov
rcr
in
push
cltd
fsubp
cld
scas
inc
outsb
jnp
push
pusha
mov
xor
adc
rcrl
adc
or
es
adc
sub
jl
add
inc
lea
pop
mov
ret
or
mov
pop
fnstenv
shl
push
push
xchg
jp
iret
pop
jl
jae
cmp
mov
jg
mov
mov
mov
push
mov
lods
repz
loopne
in
add
ret
ja
cmpsl
xchg
sbb
fsubs
loop
xchg
or
arpl
je
lock
push
xchg
enter
push
push
hlt
jg
mov
push
fnsave
in
or
dec
dec
ljmp
sub
xchg
or
lods
sbb
test
jae
push
inc
push
add
push
outsb
push
jge
sbbl
sub
push
pop
or
inc
or
jno
inc
push
shrb
sahf
out
or
inc
mov
jae
call
push
jns
sub
ja
dec
mov
out
out
jge
stc
es
scas
pop
xchg
stc
je
lods
das
or
aas
and
leave
fcoms
jle
mov
lods
inc
ds
adc
pop
fisttpl
ds
mov
fcoms
pop
cmp
repz
rcr
jnp
push
test
inc
jecxz
mov
adc
aam
fstpl
xor
sub
xor
cmc
fstp
xlat
int3
dec
or
decb
arpl
mov
jne
movsl
popa
icebp
or
cmpsl
fdivl
jns
and
lods
push
jnp
repnz
outsl
loop
push
dec
mov
ja
pop
sbb
mov
push
aas
test
stos
sub
inc
popl
ret
jl
pop
sub
push
je
pop
jne
inc
stos
xor
inc
jle
fidivs
aam
mov
popa
lock
inc
or
stc
scas
and
cli
adc
ret
rclb
lret
movsb
into
lahf
sbb
cmc
jns
mov
cltd
jo
andb
fidivrl
xor
dec
repnz
add
hlt
dec
imul
cltd
inc
mov
and
xchg
outsl
add
popa
shlb
or
mov
sti
jecxz
stos
cmpsl
aaa
push
xor
cvtps2pd
std
das
loopne
daa
and
dec
popa
into
push
shr
pop
cld
mov
adc
int3
add
lret
push
add
add
aaa
test
lods
scas
or
leave
inc
lret
mov
or
mov
lock
mov
sub
aam
int
xchg
jne
push
aad
jg
and
repnz
pop
out
fwait
movsb
jl
push
jecxz
mov
int
jo
pop
cmp
xchg
mov
mov
ret
loopne
ss
or
mov
aam
pop
clc
inc
ljmp
cli
roll
aam
add
push
mov
xchg
aaa
cmp
sbb
xchg
cmp
dec
inc
mull
rol
addb
xlat
adc
inc
dec
inc
pop
loopne
jbe
lret
mov
mov
ret
stos
in
jnp
add
jg
cmp
dec
clc
rol
pop
in
inc
or
mov
xor
rclb
xor
dec
xor
addr16
dec
pop
sub
repz
scas
sahf
gs
or
inc
sbb
cwtl
les
sbb
cli
aad
push
push
adc
mulb
sbb
enter
push
pop
mov
fdivr
add
dec
int
ljmp
adc
xor
xchg
shl
inc
cmp
or
cltd
mov
inc
les
pop
cmp
ljmp
push
cmp
pop
dec
aaa
push
fcomip
xchg
cmpsb
popa
cmp
jne
fwait
push
sub
jge
mov
inc
mov
mov
fnstenv
fnstcw
lret
hlt
and
cli
adc
stos
mov
mov
push
mov
cmp
mov
ljmp
lea
push
sbb
pop
or
insb
sub
jle
pop
inc
cmpsb
sub
popa
into
pop
jl
jge
mov
xor
pusha
dec
jge
aam
sarl
mov
sbb
in
scas
push
mov
into
cmp
icebp
fcmovb
movsl
push
dec
mov
inc
cmp
int3
imull
mov
push
es
or
cld
xor
xchg
push
pop
bound
pop
and
cltd
in
ds
movsl
jl
js
mov
leave
push
mov
imul
invd
mov
sub
mov
mov
test
push
sub
inc
dec
cmp
push
mov
xchg
das
jo
or
out
jmp
cs
cmpsb
in
xchg
jae
test
pop
jno
jo
outsl
adc
fistl
loopne
cli
push
cld
jns
xchg
ret
jl
nop
aas
sub
insb
pop
or
fdivrl
lret
sbb
lea
aaa
nop
aad
jb
ret
loop
jl
cmc
add
xchg
lds
in
gs
inc
jge
lods
pushf
ror
adc
into
dec
lret
xchg
fbld
imul
mov
xor
mov
loope
sub
mov
pop
cltd
into
fwait
mov
jmp
xor
sub
jb
incb
shll
insl
inc
sarl
mov
dec
int
pop
ficomps
fisubrs
rcl
jnp
ficoml
mov
divl
ret
fwait
push
sahf
inc
clc
push
pop
loopne
subb
imul
lret
push
dec
cmp
add
bound
popf
mov
pop
out
mov
shll
jno
jl
lds
les
in
mov
mov
pop
aaa
leave
pop
xor
xchg
mov
mov
pop
jnp
cmp
lods
adc
fisttps
or
leave
cmp
sbb
sub
andl
or
inc
mov
movsb
dec
jbe
test
mov
je
inc
mov
ret
xchg
add
lods
and
test
cmp
sbb
into
cmp
icebp
jecxz
inc
xchg
outsb
jp
cmp
es
test
rep
push
data16
shll
in
js
xlat
aaa
aaa
push
insl
and
xorb
fiaddl
idivb
add
lock
xlat
mov
or
in
xor
addl
movl
inc
and
iret
outsb
movsl
dec
addr16
xchg
xor
mov
das
aad
sarl
mov
mov
pushf
xor
in
addl
sbb
xchg
xor
std
daa
fists
mov
ss
and
popa
push
or
ja
inc
call
aad
cmpsb
fimull
lret
es
loop
std
push
mov
hlt
aas
mov
fcoml
sub
std
ficomps
out
add
sub
aam
mov
rcrl
mov
ja
in
cli
pop
cs
ret
mov
in
adc
in
xor
dec
jl
push
popf
in
push
cli
loop
dec
inc
mov
xor
ja
pop
sub
sti
or
es
jg
jno
sahf
lret
frstor
mov
leave
sahf
pop
mov
mov
xchg
xor
inc
sarb
sbb
andb
adc
scas
imul
xchg
dec
jno
mov
and
pop
cmp
ficoml
or
out
add
lea
daa
addr16
test
inc
lahf
adc
xchg
xor
and
sub
fdivrs
mov
ret
mov
mov
xor
adc
popl
xor
or
sub
mov
mov
add
mov
popa
inc
mov
cmp
push
cld
pushf
and
ss
lock
mov
mov
jp
fwait
cwtl
push
sub
sub
js
xchg
sbb
cmpsl
adcb
ret
adc
movsb
jnp
aam
jae
mov
enter
daa
cmp
push
test
push
mov
out
mov
inc
jne
sub
xlat
cmp
stos
xchg
or
gs
dec
test
lea
sbb
in
stos
pushf
enter
add
cld
loopne
push
pop
lcall
jns
xchg
and
rcrl
sub
xchg
mov
jnp
inc
aaa
or
pop
add
shlb
add
or
mov
stos
movsb
xor
mov
cmpsl
je
sub
ret
xlat
es
mov
or
out
or
pop
jo
pop
repnz
loop
data16
daa
sarb
cmp
fimull
push
das
jb
arpl
inc
dec
fwait
call
jl
inc
outsl
cmp
push
sub
and
into
cmp
jmp
out
jo
scas
pop
sbb
sub
clc
or
mov
jg
in
xchg
test
idivb
mov
loopne
pop
lahf
lock
jae
or
push
pop
mov
lret
cmp
jae
xchg
sub
or
add
faddp
push
adc
mov
fcmovne
or
stos
les
int
test
movsb
out
aas
andl
imul
push
cmc
sbb
jp
pop
dec
outsl
js
xor
mov
inc
adc
push
pop
xchg
sar
and
jl
adc
mov
xlat
pop
pusha
repz
out
xor
jecxz
iret
or
shr
and
and
push
push
imul
mov
pop
jbe
xchg
push
add
xchg
jecxz
into
mov
xchg
pop
jae
cmp
inc
pop
or
add
ds
idivl
mov
shll
mov
pop
add
pop
dec
sbb
in
jo
mov
and
jno
jg
pusha
ret
and
cs
sahf
jge
enter
xchg
fucomp
xchg
sub
push
mulb
mov
jb
out
or
cwtl
pop
addl
sbb
lahf
shrb
icebp
push
or
clc
jbe
mov
inc
push
pop
push
fldl
pop
xchg
mov
mov
cmp
pop
icebp
pop
inc
xorl
adc
call
mov
dec
mov
mov
jp
ss
lcall
hlt
cmpsb
in
scas
push
or
jnp
fnstenv
xlat
gs
xor
out
imul
mov
push
daa
xchg
sbb
push
negb
add
sbb
hlt
xor
cwtl
pusha
xor
pop
push
pop
jno
rcll
push
mov
cmp
inc
push
insb
enter
cmp
inc
or
sbb
jp
cmp
bound
in
imul
inc
mov
mov
movsb
sarl
mov
ss
lahf
jb
push
sub
push
pop
fdivrl
jp
incl
in
in
jecxz
add
mov
test
movsb
mov
imul
rolb
xchg
hlt
repz
jecxz
jmp
cmpsb
das
add
orb
in
xchg
outsb
stos
lds
mov
cmp
inc
pop
mov
pop
push
repz
ja
cltd
mov
addr16
and
mov
insl
jno
imul
pop
pop
ljmp
ja
xchg
ds
pop
cmpsl
jno
mov
fs
popf
push
fs
dec
xchg
mov
jo
fwait
adc
sbb
cmpb
sbb
adc
ret
insl
xor
mov
divb
mov
sbb
cmp
iret
in
jae
cli
jne
mov
xchg
xchg
adc
fldenv
pop
cmp
cmp
mov
cmp
jmp
sbbl
dec
mov
adc
xor
lock
rcll
jecxz
push
xor
adc
cmp
subb
sub
sbbb
pushaw
sub
imul
mov
cltd
out
je
add
or
dec
pusha
movsb
jmp
sub
pop
mov
imul
mov
pop
adc
adc
mov
dec
or
push
cmpsb
stos
inc
aaa
lods
js
mov
inc
jl
xchg
sub
sarl
loopne
mov
cmpsb
pop
sub
jp
jns
add
add
and
cmp
xchg
ret
repnz
int3
and
add
sub
mov
ljmp
inc
mov
dec
in
stos
test
mov
or
xor
int3
inc
xchg
and
shll
xchg
mov
jecxz
push
xlat
clc
aaa
ljmp
push
inc
dec
lock
jp
mov
idivl
push
ja
xchg
lock
sub
mov
iret
cmp
xchg
or
or
mov
jp
int3
push
sti
or
arpl
iret
aam
xchg
in
mov
inc
mov
jle
dec
pop
dec
cmp
cmp
xchg
test
add
dec
cld
iret
mov
adc
shlb
fwait
cmp
push
loop
iret
mov
ret
es
test
mov
adc
es
jg
daa
hlt
int
adc
hlt
mov
or
pop
and
mov
insl
enter
xchg
arpl
or
cmpsb
testb
lahf
mov
mov
paddq
jp
pop
jo
mov
xor
adc
aas
mov
xchg
mov
movsl
inc
mov
stos
sbb
lcall
mov
test
in
out
inc
push
pop
add
dec
sti
imul
cli
dec
push
mov
xorb
adcl
dec
push
push
dec
pop
ja
aas
pop
cwtl
or
je
aaa
inc
fnsave
mov
cld
stos
ret
sbb
xor
pop
ja
out
pop
and
out
out
dec
dec
adc
mov
jb
lcall
lea
and
popf
repz
nop
divl
jg
insl
fnsave
cmp
dec
test
mov
rcr
mov
jno
imul
xor
out
test
xor
jno
pop
pop
push
adc
scas
inc
push
outsb
or
jp
out
loope
daa
imul
pop
scas
call
test
jo
movsl
mov
lock
hlt
push
mov
iret
mov
mov
jb
pushf
add
pop
movsb
pop
and
mov
and
ds
out
jb
sti
sti
dec
pop
clc
test
jp
adc
dec
jo
pop
inc
mov
mulb
popf
js
scas
and
pop
push
je
out
leave
adc
or
mov
mov
fs
inc
mov
ja
rorb
xor
repnz
mov
loop
iret
subl
icebp
push
lahf
aad
clc
cwtl
dec
nop
mov
dec
lods
and
push
xchg
xor
jp
rep
pop
in
lea
mov
enter
cmpl
popf
adc
pop
push
dec
rcll
add
sbb
mov
xchg
cltd
cs
mov
std
pop
stos
ljmp
pop
or
ljmp
fs
mov
and
sub
insl
stos
and
int
scas
inc
dec
data16
fwait
cmpsl
jb
xor
sahf
clc
mov
dec
imul
adc
mov
add
loop
fldl
pop
mov
test
dec
dec
mov
dec
xchg
std
xor
ljmp
mov
loopne
bnd
sub
scas
push
ret
jnp
hlt
rcl
dec
test
push
out
cmp
das
ljmp
loope
pop
mov
jge
inc
jns
sbb
push
andl
push
push
fnsave
mov
inc
js
fadds
inc
dec
rcrb
or
orb
out
push
call
or
dec
inc
jmp
and
xor
inc
ret
dec
jecxz
inc
inc
sbb
xchg
push
js
bound
rcl
fwait
jg
movsl
push
xor
jnp
inc
xchg
out
xchg
sub
inc
insl
push
pop
mov
dec
and
pop
lock
fucomip
sbb
push
movsb
dec
test
xchg
inc
loopne
dec
add
and
mov
es
shll
push
movsl
inc
cmpsl
movsl
push
subb
mov
lods
loope
int3
mov
fnsave
pusha
popf
hlt
imul
imul
loop
push
xchg
fldcw
ja
sub
inc
cmp
sub
insl
pop
pop
and
mov
jno
mov
and
jbe
sbb
jbe
test
pop
test
in
xor
test
adc
lods
sub
daa
inc
jmp
pop
shll
mov
jmp
call
fsts
movsb
inc
mov
xchg
bound
shrb
stos
outsb
mov
test
in
test
sbb
test
pop
jo
sbb
push
aad
in
adc
and
into
scas
icebp
stc
fsts
dec
dec
lds
ja
mov
outsb
mov
dec
add
fisubl
or
xor
add
xor
inc
cmc
ds
mov
xor
ja
dec
cmp
popw
mov
jne
loop
test
les
sub
mov
stos
dec
lock
loope
push
mov
sbbb
lds
aaa
out
stc
pop
sahf
ret
cmp
sbb
and
rcrl
push
cwtl
adc
mov
adc
jp
lret
push
mov
mov
vminps
dec
arpl
stos
cmp
int3
in
mov
leave
or
cmp
enter
inc
in
js
daa
dec
test
dec
pusha
xor
or
sub
xor
pop
cmp
push
mov
or
insb
pop
mov
xchg
fisubl
jo
jl
jl
lcall
imul
or
shl
repz
dec
ficompl
das
xor
fbstp
pop
add
jmp
add
xor
dec
xchg
mov
int
outsb
rcrl
adc
ret
cmp
sub
mov
insl
lret
pop
push
loope
and
mov
jl
mov
fldcw
insb
out
js
dec
insb
pop
movsb
sbb
ds
adc
fnsave
push
push
and
mov
mov
mov
xor
mov
inc
lret
inc
xor
fcmovne
mulb
jae
outsb
je
xchg
dec
rcrb
decl
xor
pop
arpl
aaa
lahf
xor
pop
pop
ja
mov
into
icebp
adc
jo
xor
das
outsb
mov
fbstp
das
sub
push
das
outsb
fwait
and
dec
xchg
lret
popf
xlat
push
loopne
ret
or
pop
stc
sbb
ror
fmul
pushf
push
les
cwtl
cwtl
mov
sbb
cmc
jns
push
lods
or
in
dec
cmovns
sbb
adc
movsb
mov
ja
fdivs
jmp
outsb
ss
fildll
push
cmp
mov
int
sbb
movsb
mov
subl
scas
je
mov
fs
lds
push
add
xor
test
xor
jns
dec
icebp
mov
sbbb
sbb
loopne
cmp
cmpsb
push
pushf
push
jg
daa
pop
ss
sub
movsb
inc
lock
hlt
add
xorb
xor
jno
mov
rorl
xor
lods
xchg
insb
xor
iret
inc
lcall
adc
sti
lcall
add
cmpb
inc
dec
add
outsb
inc
sbb
jb
imul
fsubl
jecxz
rcll
movsb
cld
mov
scas
cmpsb
mov
xchg
xchg
iret
lret
lods
dec
xchg
ret
jge
xchg
lret
or
push
mov
sub
mov
gs
cmc
sub
add
xchg
lahf
fbstp
mov
dec
mov
test
push
loopne
jb
push
add
movsl
or
mov
fisttpl
ret
push
pusha
push
inc
in
cli
shrl
jno
jmp
push
push
aas
jl
jmp
test
in
sbb
jl
pop
imul
lahf
ret
mov
dec
push
push
add
inc
rol
dec
cmp
mov
mov
lods
mov
in
scas
jbe
sub
ja
sbb
lock
mov
dec
xor
xlat
pop
xchg
xlat
mov
jle
stc
or
loop
aad
adc
jb
jle
xchg
aas
push
mov
cli
or
sub
sub
lcall
fnstsw
mov
inc
in
pop
in
mov
pop
outsb
out
push
sub
in
repz
cmpsb
lods
xorb
mov
andb
pop
adc
fnstenv
popf
dec
iret
fs
xchg
sbbb
mov
call
out
shll
mov
fwait
js
push
dec
jbe
int
stc
jns
jo
push
cmp
ds
or
lods
jo
dec
add
sub
lds
repnz
movsb
inc
jge
out
adc
sti
or
pop
sahf
in
idiv
stc
xor
pushf
addr16
das
or
cwtl
rep
clc
ret
sbb
xchg
mov
cmp
mov
dec
in
test
or
pop
mov
cmovo
xchg
insb
aam
add
push
cmpps
insb
es
shrb
inc
pop
mov
roll
loop
andnps
mov
jne
out
divb
xor
aaa
incb
sub
or
inc
pop
rclb
xor
aas
ljmp
flds
jecxz
imul
outsl
inc
ja
gs
sub
dec
pop
jg
cwtl
or
add
int3
shll
int
shll
or
popa
cmp
add
and
mov
pushf
push
pop
stos
lret
adc
push
push
movsb
test
inc
mov
shrb
in
shlb
mov
push
dec
jno
arpl
pop
popa
data16
mov
std
lods
cmp
and
and
repz
clc
bsr
jmp
repnz
sbb
int3
out
cld
push
ja
cs
mov
adc
fists
and
sub
out
scas
mov
repnz
pop
jp
lods
xor
cmp
mov
cwtl
xor
xor
mov
push
xchg
ljmp
adc
xlat
ljmp
inc
push
jmp
enter
mov
cmp
cwtl
adc
push
xchg
mov
xor
adc
sub
ficomps
mov
aam
loop
adc
sub
sbb
inc
cmp
pop
divb
and
loop
ss
jmp
scas
jnp
mov
pop
arpl
ljmp
test
int
je
xchg
mov
fxch
mov
scas
aad
ret
rorb
add
xchg
test
fwait
sbb
and
imul
cmpsb
xchg
sbb
pop
stos
jle
leave
xor
adc
aad
pop
stos
fwait
mov
mov
mov
lds
cmp
stos
in
in
cmpsl
mov
mov
aas
cltd
pushf
scas
fdivrl
loopne
out
pop
jl
pop
jecxz
xchg
mov
jne
imul
or
sbbb
push
aad
cmp
add
dec
adc
or
xchg
mov
mov
pop
push
push
add
rolb
cmp
jg
shll
ja
sti
xorl
xchg
imul
icebp
or
in
fdivs
mov
gs
aad
repz
ror
sbb
or
scas
scas
mov
jo
jno
ja
out
cmp
and
cmpsl
les
mov
pushf
pop
fbld
aas
fsubl
xchg
push
out
lret
jg
lock
push
ss
out
jo
das
in
mov
pop
and
inc
xlat
inc
jns
cmp
mov
out
dec
fldcw
pop
pusha
pop
pusha
push
lea
jns
push
sbb
movsl
shrl
mov
mov
mov
fcoml
das
hlt
xlat
ljmp
or
push
repz
pop
inc
or
push
data16
mov
fwait
lods
enter
pop
daa
out
in
sbb
outsb
sub
in
in
cmp
xor
lods
jge
mov
outsl
adc
push
adc
mov
arpl
in
and
dec
das
add
cmp
adc
push
jl
add
in
add
cmpsb
shr
xchg
test
fbld
sti
push
sub
jb
push
xchg
dec
test
inc
call
aaa
fstpt
and
mov
mov
mov
test
test
xor
push
sarl
cli
es
std
mov
push
mov
push
add
mov
xor
cs
mov
fisubrs
call
outsl
push
arpl
insl
into
ss
sahf
outsb
mov
fsts
adc
out
dec
push
dec
nop
popa
int
fisubrs
sub
icebp
jnp
jne
xchg
mov
ljmp
test
mov
xchg
mov
scas
nop
mov
sbb
sarl
je
mov
fdivl
out
in
add
sbb
push
mov
in
dec
sbb
push
jge
aaa
mov
fadd
inc
jl
int
bound
xor
add
mov
mov
jmp
sub
xor
leave
mov
sbb
cltd
xor
popa
je
sbb
fsts
xchg
jbe
inc
adc
mov
lods
mov
in
call
xor
xchg
aas
push
fsave
and
mov
std
dec
in
pop
je
mov
test
fldl
adc
cmp
bound
sbb
and
into
in
push
shlb
cli
cld
mov
add
sti
add
sbb
push
test
leave
and
xchg
adc
ljmp
les
in
xchg
jle
lcall
xor
push
ds
sbb
push
cld
lret
mov
test
leave
cwtl
xchg
js
and
sti
jb
stos
or
jne
fwait
sahf
xchg
les
xor
leave
xchg
andb
inc
icebp
xchg
inc
stc
inc
xchg
test
or
pop
push
xchg
or
pop
ss
mov
xchg
mov
pusha
or
jl
or
mov
pop
pop
es
push
rcll
les
or
xchg
pop
ljmp
out
lahf
rcrl
inc
xchg
xor
aad
dec
dec
addr16
xor
jbe
shl
cwtl
outsb
aas
sub
and
push
leave
inc
in
dec
inc
rorb
or
and
enter
push
in
adc
into
and
pop
test
add
pop
xor
sti
push
jl
add
sub
adc
push
test
movsl
pop
stos
push
pop
or
pusha
mov
sahf
dec
ret
lds
push
bound
and
dec
sbb
rcrl
mov
popa
pop
les
cwtl
hlt
mov
push
sub
jb
lahf
pop
mov
cmp
and
xor
leave
adc
out
or
sbb
ljmp
jecxz
inc
mov
cli
sbb
adc
jns
xor
adc
lahf
sti
aas
fstl
or
shl
inc
rcl
lds
sbb
and
xchg
xchg
loope
jno
cmp
imul
insb
mov
mov
inc
and
jnp
int
mov
out
sbb
cmp
pop
and
inc
incl
adc
lret
or
movsb
pop
sarl
inc
sbb
out
pop
push
xchg
or
pusha
pop
shrl
push
mov
scas
jns
scas
addr16
mov
or
cld
inc
mov
pop
pop
scas
movsl
pop
cmp
ss
mov
ret
push
dec
sbb
pusha
rcrb
inc
enter
xchg
lahf
xchg
mov
mov
idivb
or
ds
ljmp
dec
scas
arpl
pop
pop
inc
lods
jge
jb
mov
hlt
rcr
std
add
dec
mov
ss
icebp
movsb
lret
cmp
add
xlat
aas
int
gs
scas
scas
dec
adc
ret
inc
mov
add
fdivp
outsl
lret
mov
loopne
lds
push
mov
or
mov
mov
aas
popa
sub
jns
and
cwtl
or
jle
aam
jge
xor
movsl
stos
mov
jne
fwait
jbe
insl
fistps
add
cmp
lahf
nop
int
inc
sbb
push
jnp
fdivl
add
insl
addr16
shrb
cmp
nop
xor
and
or
stc
cmpsb
cwtl
and
arpl
fcomi
stos
je
xchg
xlat
popf
lods
fidivs
xchg
movsb
mov
imul
jb,pn
stos
push
data16
sub
dec
and
push
mov
fmul
xchg
iret
lock
loop
dec
push
in
xchg
stc
cmpsl
sub
out
div
cmp
or
lret
adc
adc
add
jno
pop
pop
lcall
pop
arpl
jb
ret
movsl
fmull
or
lods
pop
jle
xlat
dec
je
test
stc
dec
pop
incl
jnp
mov
lods
cmpsb
sub
loop
loopne
lds
sarb
push
push
dec
mov
pop
mov
pop
out
negl
aam
lods
scas
pop
dec
packsswb
in
inc
dec
fcomps
lods
std
add
fldcw
or
dec
adc
xor
fnop
iret
adc
and
lret
shll
test
jo
dec
mov
rcl
xchg
idivl
shrl
imul
adc
pop
add
cmp
repnz
icebp
out
sahf
in
imul
loope
sub
xchg
into
lock
cmp
stc
in
mov
aam
mov
push
add
sbb
inc
xchg
jl
or
in
lret
cld
sbb
shrl
lret
cmp
mov
dec
mov
jne
lds
mov
jge
jecxz
loope
icebp
outsl
in
sahf
subb
and
cmpsb
sbb
imul
fdivp
flds
or
movsb
push
inc
aas
mov
inc
nop
aaa
mov
dec
rorl
fwait
jge
dec
xchg
hlt
cmc
xlat
arpl
add
in
adc
and
movsb
inc
stos
rcll
dec
add
adc
outsl
cmp
scas
pop
cmp
inc
iret
das
sbb
ret
ss
pop
pop
pop
pop
and
ds
mov
aad
push
punpckhbw
into
pop
and
cli
test
mov
cmp
jns
icebp
or
iret
cmpsb
rcl
push
cmp
shll
sub
sbb
arpl
pushf
adc
js
btc
jg
cli
push
xor
aad
push
push
mov
outsb
mov
in
fcom
push
dec
hlt
or
adc
loop
mov
call
dec
inc
shr
sbb
std
inc
dec
mov
cmpsl
sbb
dec
scas
dec
adc
pop
mov
gs
lret
cld
xchg
dec
cmp
mov
mov
dec
push
mov
cmp
xchg
jo
ja
sub
jmp
jo
pop
movsb
cmp
inc
cmp
mov
test
and
iret
lods
sbb
je
pop
ja
fwait
rcl
ret
shrl
je
or
dec
cmpsl
add
addr16
lret
pop
setl
xlat
pop
push
xchg
je
fsubs
push
arpl
mov
inc
mov
fwait
adc
jne
jbe
cmp
push
flds
jae
and
ss
fdivs
push
mov
in
pop
add
push
jno
add
test
mov
jbe
dec
mov
cltd
es
popa
sub
insl
xor
aad
adc
xor
jp
add
mov
jge
loopne
movsb
and
mov
imul
aas
xor
mov
add
xlat
aas
pop
cltd
cmc
js
test
pushf
mov
mov
xor
sbb
cmpsb
data16
jle
pop
stos
insl
pop
test
das
arpl
xchg
xchg
jmp
dec
iret
jno
add
ds
jb
aaa
pop
lret
sbb
mov
inc
rcrl
aas
add
cwtl
dec
out
jecxz
xchg
into
insb
jp
mov
mov
pop
int
cmp
dec
and
lods
fwait
pop
jns
mov
lahf
imul
outsb
test
xor
sarl
jmp
jmp
push
push
pushf
mov
testl
xor
add
mov
repnz
aad
imul
jae
lds
int3
mov
xchg
ret
sbb
and
inc
int
xchg
pop
push
add
insl
pop
inc
xchg
and
add
mov
hlt
mov
fst
cld
movsb
sub
sub
testb
addl
sub
mov
movsb
loop
test
jae
imul
inc
dec
mov
sub
pushf
sub
or
mov
pop
lret
loop
xor
lea
loopne
scas
push
repnz
xor
pop
fimull
lcall
cli
in
fbstp
mov
pop
jne
imul
pop
add
sbb
or
hlt
cmp
jl
jae
test
lock
aad
repz
repnz
out
mov
mov
push
lret
mov
inc
push
mov
mov
jmp
inc
in
xor
jnp
sbb
fucomp
cld
lret
orl
stc
js
insl
insb
xchg
mov
sub
cmp
mov
insl
addl
gs
pop
test
xchg
push
dec
lret
sbb
jne
test
cmp
ss
pop
jecxz
rcll
mov
add
xlat
mov
and
in
push
aas
rclb
aas
orl
pushf
add
dec
jg
add
icebp
xchg
aaa
stos
xlat
cmc
inc
add
cmp
adc
roll
outsb
in
sub
sbb
rorb
out
sub
loop
loopne
stos
in
pushf
repnz
xchg
push
jge
std
out
jmp
sub
pop
inc
add
or
pusha
div
inc
cmp
scas
insl
addr16
ds
mov
ret
pop
cwtl
jns
pop
les
sub
fsts
addr16
jbe
out
hlt
fadd
add
xor
lods
mov
push
jg
push
mov
xchg
adc
inc
mov
pop
pop
cmc
xchg
mov
mov
sbb
out
xor
lcall
adc
xchg
inc
or
and
in
shll
mov
scas
mov
jl
jecxz
lds
inc
sub
shlb
ss
iret
mov
push
cmpb
sbb
add
repnz
into
sub
cmp
cmc
adc
mov
clc
push
mov
push
in
sbb
push
fiadds
cmpl
dec
outsl
xchg
push
cmp
mov
lods
fcmovne
mov
negb
jae
dec
add
mov
inc
pop
adcb
sub
dec
fmuls
decl
mov
push
jns
imul
mov
popf
xchg
enter
arpl
es
loope
fistl
sub
add
sti
push
mov
div
rcll
hlt
dec
je
xor
add
push
cmc
or
fchs
jmp
adc
sub
lcall
dec
mov
ficompl
inc
cmp
int
dec
jg
pop
stos
adc
sub
pop
pop
mov
mov
in
adc
daa
imul
in
jl
jge,pt
pop
or
xchg
mov
adc
adc
sbb
mov
jns
adc
loope
into
xor
or
mov
std
add
and
adcl
pop
insl
fisubrl
dec
es
add
adc
xor
fnsave
addr16
sbb
and
and
stc
push
push
cmc
inc
pcmpgtw
bound
ret
mov
dec
or
sub
pop
adc
bound
movsb
stc
push
mov
hlt
enter
divl
shll
jo
pushf
push
data16
mov
cmp
std
sub
sub
popf
and
aam
hlt
lret
pop
repnz
shrl
aam
mov
and
xchg
fsubl
mul
mov
push
aaa
popf
enter
ret
push
hlt
xrelease
shlb
mov
xchg
xlat
shll
push
mov
repnz
fisttpll
les
cmp
push
xlat
mov
adc
mov
arpl
mov
das
popf
clc
shll
xor
and
inc
stos
ss
lahf
lock
or
test
out
and
and
cmc
push
mulb
fnstenv
fdivrl
xchg
loopne
push
push
xchg
nop
shl
add
xchg
mov
fildl
xchg
or
loopne
and
pushf
jns
cwtl
dec
xor
pop
test
inc
pop
adc
and
and
inc
and
dec
sbb
jecxz
mov
inc
mov
addr16
pop
and
movsb
xchg
mov
imul
insb
cmpsl
aam
in
lds
mov
int
data16
loopne
mov
mov
and
fsubl
int3
push
subl
mov
mov
push
cmc
std
or
and
mov
enter
inc
in
mov
jmp
icebp
rcrb
dec
nop
xchg
xor
mov
add
test
mov
sub
dec
push
jle
in
fs
cmpsb
sbb
and
push
sbb
mov
enter
jne
sub
push
les
inc
dec
scas
sub
movsb
cld
int3
adc
jge
fldcw
fdivrp
ljmp
scas
les
and
cmpsb
fists
unpcklps
mov
stc
loope
icebp
xchg
jle
scas
sbb
int
incl
inc
mov
or
insb
dec
or
flds
or
or
and
insl
mov
outsb
mov
rcrl
mov
in
int3
sbb
jno
pop
mov
mov
sub
jmp
gs
leave
pop
idivb
jo
jge
sbb
xchg
cmc
or
pop
cwtl
arpl
xor
cwtl
jmp
and
jg
mov
clc
jb
push
xchg
js
ja
and
fstpt
xor
aad
imul
aad
nop
adc
fldenv
inc
divl
mov
sub
add
es
cli
inc
mov
xchg
out
aaa
cltd
jns
test
xchg
mov
mov
dec
ficompl
mov
scas
cltd
cmp
aad
xchg
ficomps
jo
pusha
daa
mov
sbb
out
stos
cmp
popa
fbld
out
add
test
or
out
cmpsl
dec
repnz
rcrb
jmp
lcall
jnp
or
fmull
jmp
sub
test
adc
fbld
lret
mov
and
push
ret
cld
shll
push
loopne
lret
push
cmp
jp
popa
pop
rcll
inc
xlat
xlat
jno
mov
xchg
stos
in
sbb
jo
mov
jecxz
clc
or
leave
xlat
fcoml
test
dec
and
arpl
or
fldl
or
sbb
int
outsl
adc
dec
imul
jle
add
repnz
push
test
push
idivl
push
pushf
movsb
sbb
cmpsb
enter
and
cld
stos
sti
andl
adc
int
jo
fistpll
xchg
out
in
mov
push
xlat
subb
sti
push
mov
outsl
dec
push
mov
and
stos
adc
je
dec
mov
fistps
dec
and
add
mov
mov
cmp
fs
int
sti
dec
std
or
rcl
lret
lahf
xor
cld
pop
push
in
or
mov
adcl
and
mov
ds
cmp
bound
xchg
pop
pop
jae
clc
std
fadds
aas
mov
iret
jae
sbb
lods
addr16
xchg
inc
mov
sub
push
push
mov
and
test
jne
jns
jb
mov
inc
int3
add
xor
sarb
push
sbb
std
je
sub
imul
int3
rol
add
cltd
ljmp
and
fisubl
cs
stos
insl
push
out
push
dec
mov
jmp
mov
movsl
movsl
mov
xchg
mov
adc
mov
adc
jo
stos
fisttpl
insb
out
ds
fidivl
cwtl
pop
push
inc
or
scas
movsb
pushf
insb
pop
xchg
int
add
inc
adc
cli
add
icebp
outsl
jmp
stc
jno
je
sub
push
or
jge
push
add
add
and
sbb
flds
sub
fldenv
push
inc
fisubl
mov
push
jge
or
dec
insl
int
dec
pusha
cmp
nop
xchg
jns
sub
inc
mov
imul
out
dec
adc
mov
jb
xchg
cmp
mov
leave
ss
aam
sub
or
add
enter
data16
in
addr16
push
pushl
frstor
xchg
lods
divb
sbbb
push
imul
push
lock
cmpsb
sub
pop
and
xchg
fistl
test
repnz
addr16
psubusb
divb
mov
jge
sbb
mov
or
repz
cmp
nop
hlt
and
ds
insb
pop
lahf
ja
into
mov
sbb
or
push
dec
xchg
sbb
push
std
mov
scas
jnp
inc
hlt
xor
sbb
arpl
mov
int
leave
stos
pop
mov
jb
jo
imul
stos
sub
ds
sbb
inc
nop
test
sti
cmpsb
mov
push
push
mov
int
enter
add
sbb
int3
incb
mov
insb
pusha
fildl
pop
push
dec
loope
dec
orb
dec
mov
xor
jno
inc
pop
add
dec
je
cmp
sbb
xor
dec
adc
cmp
sbb
and
iret
or
xchg
mov
cwtl
int
adcl
mov
or
icebp
mov
icebp
bndldx
cs
int
push
adc
jmp
xchg
push
add
pop
ss
repnz
or
lret
mov
nop
and
mov
jp
loope
int3
lea
add
daa
lret
adc
push
jno
dec
cli
mov
pop
cmpsb
cmp
aaa
idiv
pop
lea
dec
hlt
scas
decb
or
lods
sub
push
fstpl
cmp
cmp
gs
shl
xor
dec
ljmp
cmp
stos
pop
andb
mov
addr16
in
bound
sub
cltd
stos
lret
notb
dec
or
pop
movsl
gs
out
inc
loop
xchg
fisubrs
inc
outsl
pop
mov
adc
push
insl
or
stc
lcall
mov
movsl
pop
cli
lods
inc
ret
stos
and
lds
sub
mov
int
je
aas
popa
jge
into
hlt
add
mov
xor
repnz
adc
jecxz
push
adc
stos
testb
jle
popa
sub
mov
cs
inc
sbb
in
pop
ss
cltd
sbb
xchg
or
cld
add
daa
loopne
pop
sbb
add
push
mov
lods
mov
xlat
push
cld
out
dec
das
push
inc
jb
sbb
sbb
jnp
cmc
xchg
lods
xor
or
mov
stc
lret
jmp
gs
pop
sbb
or
pop
or
lods
xor
pop
stos
push
outsb
fdivs
or
xor
loop
inc
jb
mov
inc
rolb
scas
fsubl
pop
test
ret
lods
lea
xchg
orl
stos
add
inc
fcmovnbe
xchg
mov
xor
iret
fiadds
pop
sub
andb
sbb
adc
in
mov
adc
and
sbb
pop
dec
push
and
adc
popa
sub
inc
jb
roll
add
in
xchg
fidivs
out
subl
test
repz
pop
mov
aaa
push
clc
imul
lods
nop
jp
jns
push
mov
aad
or
js
mov
test
jnp
lcall
iret
aaa
jbe
pusha
and
rcrb
mov
jl
fidivrs
outsl
jge
adc
popa
scas
mov
movsb
pusha
lcall
cmpsl
aam
and
repnz
inc
sbb
push
mov
jb
lcall
inc
mov
adc
dec
mov
and
loope
cmpsb
sbb
fstpt
push
push
and
loop
or
push
fisubrl
sub
mov
bound
subl
mov
xchg
jle
cmp
mov
sahf
or
adc
mov
dec
nop
add
xchg
repz
push
roll
arpl
and
mov
inc
insb
popa
ds
cmp
test
repnz
inc
rcl
push
or
test
out
and
sbbl
insb
out
rol
push
pop
lods
jne
xchg
or
fmuls
out
mov
cltd
xor
rol
test
popa
xlat
xor
jecxz
dec
mov
and
jmp
orl
lods
jnp
fdiv
push
inc
xchg
movsl
push
test
scas
push
notb
add
aaa
clc
jo
mov
in
xchg
sub
and
push
mov
sub
mov
and
insb
or
inc
adc
cli
jne
or
imul
adc
jns
xor
push
pusha
push
jge
mov
in
into
inc
sbb
inc
insl
loope
hlt
cmpl
mov
fldcw
sbb
and
or
scas
lea
xorb
mov
mov
pop
pop
cmp
inc
shrb
mov
and
pop
mov
cwtl
pop
and
mov
xorb
mov
xchg
je
xor
lcall
pop
cmp
and
bndldx
dec
movsl
rolb
repnz
sbb
push
stos
xchg
sti
jno
sub
xchg
arpl
pop
iret
mov
dec
icebp
jb
orb
hlt
add
xchg
enter
sbb
xor
cmp
movsl
fs
fadd
cltd
fs
movsb
mov
xor
fdivs
jp
cltd
mov
mov
sbb
pop
loope
dec
cmp
scas
pop
inc
and
or
into
stc
fdivl
jae
shrl
loop
jmp
xor
inc
dec
lcall
imul
pop
xor
sbb
ds
decb
add
xor
and
xchg
xchg
jecxz
xchg
jae
xchg
cltd
adc
cmovb
or
dec
lods
mov
pop
sub
lcall
fdivs
dec
movsl
xchg
clc
mov
lahf
clc
scas
mov
daa
cmpb
mov
xorb
cmp
mov
call
fcomps
movsb
fimuls
fisubrl
push
dec
jmp
mov
les
xchg
faddp
sbb
lods
in
push
jne
sbb
push
jl
add
popa
cmp
mov
inc
add
pop
stos
mov
jnp
dec
cltd
imul
xor
hlt
popa
sub
into
sub
jmp
push
pop
repz
push
or
dec
leave
repz
test
cli
add
fs
frstor
les
insl
insb
stc
ret
cmp
and
cmp
push
add
jge
and
push
push
cmp
daa
mov
xchg
jl
or
pop
andb
and
out
and
sbb
xchg
daa
jno
pop
cmpl
inc
push
repnz
mov
push
je
xchg
test
andb
cmpsb
adc
fldcw
inc
loope
push
push
adc
xchg
loope
arpl
push
fdivp
mov
out
je
mov
getsec
add
push
mov
mov
pop
movsb
inc
mov
loopne
pop
std
loopne
push
cmp
sbb
mov
data16
js
or
jmp
pop
mov
xchg
or
je
subb
insb
hlt
mov
xor
dec
jne
xchg
mov
sti
push
push
cli
xchg
xchg
push
and
adc
dec
sti
pop
ret
add
ja
inc
das
xchg
rolb
stc
adc
fldl
shlb
jl
add
push
sahf
jno
inc
je
pop
add
or
inc
jno
sbb
lock
push
fisttpll
mov
rorl
insb
int3
into
ret
jl
aam
nop
psubd
ficompl
ret
pop
mov
jmp
mov
jae
mov
iret
cli
es
adc
aam
sahf
pop
idivl
and
sub
fldt
in
jle
adcl
in
mov
mov
outsl
lock
in
lea
imul
test
pop
mov
and
fld
and
and
xchg
and
sbbb
call
das
dec
push
idiv
and
jnp
icebp
xor
gs
aad
and
movsl
inc
out
push
pop
jl
cmp
shll
mov
adc
pop
sbb
jne
sub
push
push
std
or
push
sub
hlt
lcallw
out
push
lods
sbb
mov
or
inc
xchg
or
iret
lret
mov
roll
stos
cmpl
notb
cmp
jl
stc
inc
pop
or
icebp
jo
subb
stc
rcrl
into
loopne
sub
pop
shrb
cmc
xor
lret
mov
pop
scas
sti
adc
jbe
lret
pop
mov
dec
mov
pop
xchg
test
and
jmp
ja
icebp
mov
or
mov
dec
lret
daa
popf
fmull
gs
mov
bound
dec
mov
jge
mov
imul
jmp
xor
pop
call
push
pop
daa
test
pop
repz
sub
movq
push
mov
mov
jl
rcl
adc
lods
and
pop
add
inc
inc
or
outsb
loopne
xor
and
sub
and
rcr
pop
dec
dec
inc
aam
sar
push
in
andb
mov
mov
push
in
adc
in
xor
jae
loopne
xorl
addr16
cmpsl
pop
arpl
mov
outsl
xor
push
mov
jnp
add
popf
cmp
mov
ja
xchg
nop
mov
add
fs
fisubl
push
pop
jle
sub
addl
and
ss
mov
out
out
push
mov
scas
add
inc
add
rcll
cmp
shll
cmc
insb
into
in
dec
sbb
lock
jbe
push
lea
jno
mov
jmp
cmpsl
xchg
nop
imul
xor
test
sbb
mov
sgdtl
jle
je
or
xchg
into
pop
rolb
stc
aad
mov
shl
or
cmpsl
jno
nop
inc
aaa
push
insb
leave
outsl
mov
xor
popf
ljmp
data16
add
add
ds
out
stos
shl
es
push
push
mov
cwtl
mov
and
fldl
and
jmp
es
sti
arpl
mov
mov
lods
repnz
bound
cmp
loope
shlb
rcrb
sbb
aad
push
sbb
sbb
jecxz
inc
es
push
and
mov
or
adc
sbb
adc
xchg
push
or
pop
mov
mov
mov
into
push
adc
jle
aam
mov
xchg
push
adc
in
jb
lret
cmpsl
mov
adc
lods
pop
adc
fdivs
aaa
jno
push
jp
xor
sbbl
inc
adc
fisubrl
int3
das
lahf
jb
repz
cs
add
sbb
jmp
test
or
in
jl
pop
mov
mov
sbb
jmp
pop
in
mov
mov
jo
enter
enter
call
das
dec
fs
sub
addr16
xor
push
or
or
adc
mov
xorl
sti
sahf
mov
popf
aad
sub
lret
cli
inc
dec
in
sub
adc
les
push
mov
ds
jae
fcoms
outsl
sbb
out
aas
inc
repz
mov
adc
ffreep
mov
sub
ja
rcrb
jb
lahf
sbb
cld
orb
or
sub
xor
les
pop
mov
mov
popf
dec
mov
push
outsl
jo
inc
push
aaa
jecxz
cwtl
test
aas
mov
mov
int
mov
xchg
hlt
sbb
fmulp
test
sbb
out
ss
addb
cmp
inc
cltd
pusha
je
add
ds
push
add
movb
sub
js
mov
adcl
hlt
and
lret
push
and
mov
jae
mov
and
pop
enter
insl
outsb
inc
push
inc
aas
outsl
test
mov
mov
push
xchg
xchg
inc
gs
ljmp
cli
adc
push
or
rcrl
fcmovnu
xor
dec
cld
adc
fisttps
pop
cmp
movsb
jns
adc
xchg
cmp
fldt
aaa
ret
test
in
dec
mov
or
cmp
outsb
lds
dec
push
icebp
sbb
test
cmp
leave
add
mov
mov
lds
xchg
push
ret
loope
repz
call
std
mov
pop
js
push
mov
mov
xchg
mov
daa
and
loop
shrl
dec
outsb
lods
sbb
mov
xor
xchg
jne
pop
sbb
or
mov
clc
inc
push
inc
test
in
int3
out
movsl
sbb
popa
imul
sbb
enter
cmp
dec
test
scas
push
mov
out
sbb
insb
loope
ret
dec
div
dec
shl
cmp
cmp
daa
cmpsl
loop
adc
mov
mov
adc
lret
mov
and
mov
mov
stc
das
inc
dec
mov
and
es
or
pop
dec
push
cli
add
jb
dec
push
jb
jae
pop
and
inc
push
movsl
push
xchg
outsb
popa
pop
je
jno
xor
jl
push
add
sahf
lds
adc
and
xor
mov
outsb
push
cmpsl
lods
icebp
mov
aaa
test
cwtl
sbb
aaa
negl
inc
or
mov
cmp
push
pop
xchg
outsb
push
mov
movsb
mov
out
xchg
nop
xchg
in
jne
icebp
js
mov
mov
xor
loope
jecxz
fildll
sub
mov
out
adc
sbb
jns
mov
js
mov
dec
in
adc
jbe
pop
hlt
int3
pop
xchg
xchg
pop
test
xor
bnd
fisttpll
mov
adc
leave
test
ror
xor
clc
lock
lret
inc
loope
pusha
adc
adc
call
es
insb
xchg
push
loopne
cmpsb
in
dec
sbb
cmc
mov
jmp
pop
and
ret
imul
outsb
mov
pop
into
ret
push
sbb
or
imul
gs
sahf
push
xchg
les
push
test
cmpsb
repz
jecxz
insl
lret
and
sub
sub
xor
cmp
xchg
xlat
pop
xchg
mov
or
mov
jae
mov
clc
mov
stos
addr16
dec
and
or
mov
mov
sub
sub
xchg
or
sbb
and
seta
bound
cli
movsb
add
inc
mov
imul
test
mov
aad
and
adc
jo
cmp
sahf
insb
lret
mov
add
adc
cmp
mov
inc
mov
mov
jmp
xor
mov
xchg
les
and
pop
into
and
rorb
inc
and
add
fistpl
pop
out
xorb
fcoml
leave
add
jle
inc
xor
es
aad
popf
outsb
add
mov
rcrl
call
jl
xor
aad
loope
popa
dec
sbb
jne
ret
pusha
fisubrl
frstor
iret
or
dec
push
ud2
ljmp
sub
lahf
inc
imul
adc
lds
and
fstpt
pop
in
jns
loope
xchg
js
aam
xor
shrd
bound
lcall
cltd
cmc
stc
jmp
mov
jle
adc
into
jnp
lret
and
iret
xchg
mul
inc
or
in
rcll
pusha
pop
push
mov
pop
or
movsl
pop
pop
and
stc
dec
push
and
rolb
jb
fisubrs
int
xor
into
push
and
push
movsl
out
inc
jge
lods
mov
add
rol
mov
imul
loope
mov
ret
icebp
xchg
shr
test
ljmp
jbe
rorb
fsubrl
dec
cmp
mov
out
stos
negb
xchg
movsl
out
test
push
pop
mov
and
mov
nop
push
shll
xor
cmp
pop
jo
mov
mov
in
inc
jmp
fs
fildl
repnz
jo
sub
jno
subb
mov
nop
or
mov
lock
aaa
stc
insl
out
push
nop
test
test
mov
xchg
testb
ss
aaa
stos
les
push
aam
insb
xchg
mov
sbb
andb
aas
adc
mov
loop
fdivrp
push
fdiv
or
inc
xchg
or
aad
or
pop
repz
es
jnp
scas
mov
pop
imul
insl
inc
mov
pop
xor
dec
jb
push
mov
xor
push
push
cmpl
stos
lcall
pop
lods
dec
push
arpl
add
xor
and
lea
dec
jae
jge
js
iret
nop
jo
xchg
adc
pusha
je
ficoml
das
push
or
outsl
arpl
push
arpl
test
jg
mov
outsb
dec
xor
inc
ds
int3
jg
into
add
and
movsl
add
stos
dec
adc
int
lret
inc
incb
movnti
push
lcall
jmp
fcoms
leave
mulb
outsl
je
cli
push
loope
fstl
jbe
idivl
ja
ljmp
or
adc
les
into
jmp
pop
xchg
sarb
jmp
sbb
lea
xchg
pop
mov
outsl
sub
push
mov
sbb
fs
movsl
xor
mov
and
jnp
cmc
mov
mov
cmpb
testl
xchg
dec
aad
loop
cmp
insb
stos
iret
inc
sub
inc
cltd
lret
jbe
dec
test
cmp
shll
inc
les
popa
cmp
es
popf
stos
inc
sub
ss
inc
cmp
push
mov
cmp
dec
mov
push
mov
lret
pusha
mov
mov
into
xor
cmc
cmp
push
push
fcmovbe
imul
notl
sub
aas
mov
testb
das
cwtl
pop
gs
ss
sbb
and
outsb
shlb
scas
test
sbb
xor
or
xchg
xor
adc
into
data16
pop
inc
mulb
push
inc
sbb
xlat
out
and
xor
cli
cs
mov
test
xchg
ret
add
xor
adc
lds
clc
aaa
pop
in
and
imul
sbb
outsl
mov
aad
or
and
into
out
pop
xlat
ds
sahf
adc
fidivrl
cmp
xlat
cwtl
push
fs
dec
aam
movsd
pushf
pop
nop
pop
das
repnz
mov
inc
xor
ret
xchg
int3
nop
loope
mov
arpl
xor
jecxz
jne
sbb
gs
rcl
arpl
xchg
mov
popa
mov
decl
jb
sbb
pop
fsts
xor
xor
loope
mov
pop
mov
fdivs
fmuls
adc
test
loop
dec
lret
out
fidivl
inc
lret
push
daa
jno
ret
aad
or
and
test
mov
push
mov
push
sti
xchg
lds
gs
jg
jns
add
punpcklwd
or
cltd
lds
sub
arpl
jl
pop
xor
mov
jecxz
mov
adc
push
add
insl
in
sub
mov
out
and
pop
int3
or
add
lcall
popf
jl
hlt
xchg
pusha
jo
pop
mov
jnp
daa
add
in
arpl
cmp
fwait
out
jge
cmp
and
outsb
stc
add
mov
leave
jae
js
repz
out
dec
or
ret
xchg
jbe
cli
dec
js
mov
and
push
scas
les
push
push
push
sbb
arpl
mov
out
lock
add
jmp
inc
mulps
int
stos
pop
xchg
mov
inc
icebp
sarb
mov
int3
int3
ds
or
scas
pop
xchg
xor
xchg
ljmp
sbb
xor
inc
cltd
inc
push
out
or
mov
lods
adc
and
pop
fdiv
jae
inc
push
mov
adcl
push
mov
push
xchg
adc
jb
dec
movsb
or
insl
jae
xor
fidivl
fdivrl
xchg
in
xor
push
dec
lods
or
mov
mov
sub
loope
push
or
mov
sub
imull
xchg
mov
mov
pop
jmp
adc
pop
add
or
pop
adc
dec
xorb
call
mov
xor
jns
and
jmp
mov
or
insb
dec
pop
inc
sar
loop
adc
call
push
mov
dec
push
daa
fcom
lods
aam
cli
andb
jne
gs
daa
pop
pusha
jnp
mov
mov
nop
jmp
push
adc
push
cmc
sbb
js
sbb
mov
inc
sahf
orb
in
mov
dec
fsubr
mov
cli
outsb
jecxz
rcr
int3
mov
inc
push
push
outsb
sub
mov
addr16
leave
xchg
pusha
inc
vmovdqu
in
inc
fisubrs
mov
mov
fisubl
xor
out
aaa
or
mov
sub
inc
sub
mov
xchg
in
mov
mov
ret
into
rclb
and
sub
ficomps
mov
iret
sbb
out
sahf
ds
shll
scas
sbb
int
cld
push
insb
rep
push
addb
sub
aas
mov
ja
test
xchg
gs
out
mov
xchg
push
and
cmp
adc
pop
js
jbe
fmul
xor
and
call
in
pop
mov
dec
and
add
lods
or
mov
cmp
sub
dec
bound
sub
sub
sub
rol
ret
and
lods
push
lret
test
insb
hlt
hlt
fisttpll
push
mov
lods
or
repz
roll
or
cmp
sti
adc
dec
aas
and
xchg
cmp
inc
cltd
int
cli
cmp
pop
test
mov
or
es
jbe
faddl
push
dec
push
stos
or
inc
movsl
pop
add
ja
xlat
shl
pop
mov
xor
cmc
add
push
insl
xor
aad
pop
cmp
scas
cs
clc
and
fisubrl
mov
adc
test
lcall
sbb
addr16
mov
mov
sbb
lahf
push
std
xchg
in
daa
push
subl
cltd
pop
add
arpl
fnstcw
jne
cmp
gs
hlt
xchg
loop
dec
cmc
ja
adc
mov
data16
sbb
je
std
pop
std
jns
push
jecxz
push
mov
xlat
mov
push
jmp
cmp
push
daa
nop
and
cwtl
ljmp
out
mov
mov
lret
sbb
imul
inc
in
jae
mov
cltd
ds
and
push
out
roll
clc
add
mov
inc
fnstenv
mov
and
dec
xchg
popf
test
adc
outsl
subl
dec
dec
sub
jae
shrl
cmpsl
aam
and
inc
mov
stos
sub
repnz
sbb
fidivrl
push
in
int
das
loope
das
push
fistpll
paddq
ss
orl
mov
popf
mov
sbb
mov
mov
hlt
dec
inc
mov
loope
add
jecxz
or
shr
je
push
jp
fidivrl
stos
dec
test
shll
ret
gs
addr16
cmpsl
lods
xchg
pop
mov
clc
mov
ja
mov
cmp
fnstenv
mov
loopne
inc
inc
xchg
inc
or
push
jg
bound
xor
test
dec
xchg
fnstsw
dec
sbb
and
mov
mov
pop
hlt
mov
test
into
push
shlb
or
ret
cmp
jle
jecxz
pop
es
inc
int
cmp
pop
test
cmp
mov
test
xor
mov
test
mov
mov
in
pop
outsl
mov
or
push
xchg
xlat
in
scas
std
into
sbb
call
stos
nop
popf
jns
adc
push
lahf
bound
lds
sub
mov
xchg
stos
xor
lea
shll
push
adc
mov
in
es
mov
jg
out
movsl
mov
call
inc
adc
cmp
cmp
mov
fistpll
cmp
test
fstl
xor
imul
fsub
and
mov
pusha
add
jmp
add
mov
and
popf
in
xlat
cmp
dec
out
add
and
mov
bound
sub
cmp
fadds
iret
mov
in
jo
mov
push
sub
cmpl
mov
cmc
or
or
cli
xchg
jns
cmp
mov
mov
inc
sub
int
xor
cmpsb
hlt
dec
jecxz
loopne
dec
xchg
outsl
xor
add
shl
adc
pop
std
fsubr
xor
aad
sti
imul
sbb
fcoml
cmpsb
lds
pop
inc
sub
jns
mov
sbb
mov
mov
out
test
cmpl
xor
dec
xchg
sub
and
aad
fstp
mov
fwait
clc
add
sarl
cmpb
pop
sub
mov
xor
push
testb
dec
sbb
add
jbe
int
jl
dec
inc
filds
push
adc
pop
or
incl
inc
adc
sbb
mov
das
mov
cmp
movsl
xorl
jbe
std
es
add
add
or
fcomi
icebp
mov
inc
inc
loop
mov
std
sub
mov
inc
sahf
out
mov
mov
push
lret
fstps
test
test
mov
pushf
std
hlt
jo
fsubs
mov
cmp
cmp
pushf
int3
lds
test
cld
xchg
mov
popf
push
push
int3
push
test
fstps
dec
mov
fsubl
xchg
sub
popf
es
cmp
or
jbe
in
es
enter
xlat
xchg
cltd
insl
flds
add
mov
mov
mov
roll
adc
dec
ss
and
flds
or
insb
sub
pop
xor
gs
sbbl
insl
jno
je
adc
adc
imul
mov
and
out
push
or
stos
call
cmpsl
stos
insb
adcl
dec
divl
mov
mov
xchg
sbb
push
nop
shll
rorb
fiaddl
dec
jp
add
das
je
scas
jne
or
cmp
fsubrs
jl
out
xchg
lods
in
sub
subb
ljmp
jne
sub
mov
xchg
push
mov
andb
in
push
insl
cltd
dec
icebp
fstl
jl
inc
push
mov
xchg
mov
add
outsb
stos
xchg
xchg
int
lcall
push
cmpsl
xor
fadd
and
add
and
cli
orl
push
sahf
mov
adc
ds
aaa
rol
test
mov
xchg
mov
mov
icebp
insl
popf
pushf
xor
aas
vpsubsw
or
std
jne
mov
mov
ja
jne
mov
cltd
outsl
xchg
push
sub
idivl
mov
jbe
inc
or
pushf
mov
and
pop
enter
inc
loopne
jp
xadd
push
lahf
push
jns
mov
movb
mov
mov
mov
out
mov
push
cmc
fcomps
clc
lahf
bound
repz
movb
pusha
data16
pop
push
in
mov
adc
mov
push
xor
mov
fnstsw
cwtl
gs
mov
push
addb
hlt
ja
in
stos
cmp
add
ja
fidivl
xchg
daa
jecxz
fs
inc
cli
sahf
mov
add
js
popf
jle
sahf
loopne
ss
lcall
jne
sbb
mov
inc
pushf
lods
dec
bound
pushf
mov
adc
iret
mov
adc
fcmovbe
mov
and
sbb
mov
push
nop
xchg
in
mov
mov
call
pop
or
fidivrs
sub
push
scas
icebp
movsb
pop
jecxz
or
test
addr16
pop
and
fsubrs
sub
test
jle
lret
sbbl
mov
pop
mov
mov
push
mov
loope
lret
sbb
mov
aad
pop
pop
sbb
in
fs
push
out
push
push
ret
pop
insb
js
dec
adc
arpl
into
outsb
lret
cwtl
les
mov
sub
pop
mov
ret
lock
sub
pop
add
out
push
ss
les
push
xchg
sub
pop
mov
les
mov
lret
loope
lods
dec
cmp
add
adc
out
pop
xlat
ljmp
fnstenv
out
out
ss
insl
xchg
in
shll
pop
cld
or
mov
pop
int3
and
mov
or
pop
mov
add
and
test
mov
cmp
xor
or
inc
testl
pop
scas
dec
pop
cld
call
ljmp
mov
arpl
add
or
xchg
push
popf
outsb
jo
leave
ss
jbe
adc
mov
mov
mov
dec
lea
mul
pop
jmp
fmull
xor
xor
pop
fldenv
lcall
jb
mov
nop
clc
loope
inc
mov
cmp
adc
pop
xor
lods
xchg
pop
pushf
shrb
in
fmulp
popf
ja
dec
rclb
mov
mov
add
out
or
inc
or
mov
inc
ret
cmp
xchg
add
int3
repnz
adcb
fidivrl
sub
cmp
test
lods
jmp
mov
inc
fisttps
mov
ja
dec
test
jns
pop
stc
adc
jae
adc
imulb
gs
stos
mov
pop
adc
push
xor
test
xor
test
outsb
mov
pushf
xor
leave
iret
enter
clc
lock
rcll
inc
xor
mov
dec
push
test
jb
fisttpll
cmp
pop
enter
jmp
ds
xchg
or
add
in
inc
call
aaa
xlat
test
cmc
shlb
cmp
fbstp
mov
test
xchg
inc
mov
ljmp
push
xorl
push
arpl
shlb
push
scas
jo
jmp
dec
mov
cmp
mov
mov
mov
xchg
out
add
adc
add
inc
test
jns
hlt
stos
pop
je
test
mov
jb
nop
push
in
jne
repz
and
push
es
js
in
lds
pop
mov
in
mov
or
fidivrl
xchg
out
dec
xchg
pop
mov
xchg
mov
lods
sub
cmp
lock
in
add
or
rol
mov
or
mov
and
jecxz
dec
jnp
mov
or
jl
dec
fstl
add
mov
fcoms
mov
hlt
daa
lock
shl
lahf
jg
xor
fsubrs
cld
mov
xchg
adc
jnp
jno
cld
mov
xlat
cld
in
xor
and
add
adc
repnz
cmp
mov
pop
push
sub
cs
mulb
ss
adc
in
movsl
add
mov
stos
dec
and
jns
adc
out
ds
mov
mov
lret
lods
popa
ret
loop
adc
ret
std
stos
mov
insl
mov
pop
testl
aas
mov
push
scas
jp
mov
mov
cmpsl
cld
jmp
lock
ds
shrb
mov
aaa
inc
xchg
or
leave
test
sbb
clc
and
push
add
cmpsb
fs
aad
push
xlat
lods
in
xor
ja
rcrb
pop
sub
mov
or
or
mov
enter
adc
push
daa
ds
xor
add
jnp
and
lret
lcall
mov
dec
or
xchg
xchg
inc
mov
cmp
xor
or
dec
xchg
dec
jp
inc
out
xchg
add
xchg
bound
push
sarl
inc
and
xchg
ljmp
xchg
popf
add
add
mov
mov
jl
in
ret
fldt
movsl
and
lock
out
push
pop
pop
popf
bound
pop
or
jmp
psubq
mov
jae
mov
add
shlb
mov
bound
mov
jnp
mov
pusha
ljmp
insb
lock
inc
fmull
cmp
mov
push
lea
call
int
inc
xlat
cmc
bound
and
rcr
les
xchg
xor
in
repnz
jbe
mov
lret
jge
lret
out
mov
add
lcall
jl
jl
jmp
inc
daa
sbb
ret
insb
aas
xchg
ljmp
lret
jle
and
insb
mov
ds
jecxz
gs
pop
fwait
lods
and
xchg
jnp
jb
xchg
cli
insl
add
adc
popf
cli
push
scas
jp
ret
adc
mov
jecxz
adc
mov
lahf
sub
push
inc
xor
inc
es
lock
or
iret
and
xchg
test
ret
cltd
inc
xorl
clc
mov
nop
stos
sti
pusha
sahf
xor
insb
add
xchg
cli
bound
dec
push
in
enter
xor
movsl
mov
jne
pop
pop
add
sti
std
mov
jg
mov
mov
xor
inc
ds
int3
jo
fsts
mov
jecxz
inc
jle
pop
enter
nop
xchg
push
jae
setge
jle
ficoms
ss
sahf
pushf
jge
cmpb
ljmp
jb
data16
fildll
push
rorl
push
shr
push
jno
mov
addb
cwtl
pop
cmp
jg
jo
and
push
sbb
sub
pop
sbbb
mov
mov
es
xchg
icebp
push
mov
aaa
xchg
insl
int3
insb
xor
lcall
icebp
gs
fcompl
in
adc
jmp
movsl
cmp
add
xor
popf
imul
lds
sub
mov
cli
loopne
or
and
sbb
cmp
cs
add
hlt
or
cmp
and
xchg
jecxz
cwtl
inc
lea
or
cld
sti
sbb
fs
add
pop
fldcw
pop
sbb
int3
movb
lret
mov
in
insb
dec
adc
push
dec
dec
mov
push
mov
iret
push
ja
xchg
inc
iret
pop
cmpsl
or
add
jno
divb
in
push
icebp
xchg
mov
arpl
scas
push
ret
ljmp
in
ficompl
ljmp
inc
or
mov
jg
pop
pop
fstps
mov
mov
loopne
and
ret
jecxz
adc
loopne
jbe
imul
out
dec
jmp
xchg
mov
pop
insl
xchg
rcrl
push
repz
cmpsb
jg
jae
int
hlt
inc
sbb
push
xchg
pop
sbb
cbtw
sub
pop
bound
cmp
mov
repnz
mov
sub
sbb
xor
jl
pop
and
dec
xchg
sbb
je
ljmp
adc
xor
cmp
push
cmp
sti
or
imul
aas
pop
notl
clc
sarl
pop
pop
inc
decl
or
sbb
rol
insb
pop
jp
dec
pop
in
pop
and
push
shll
cs
lcall
fsubrl
adcb
repz
dec
jecxz
mov
inc
cmp
xchg
ja
add
enter
mov
jns
add
fs
lea
ja
mov
and
cmpb
orl
js
or
add
xchg
aaa
or
insl
mov
mov
or
mov
adc
and
repnz
lods
mov
std
add
jo
rorl
pop
int
rcll
fmuls
mov
popf
sbb
push
add
jecxz
fucomi
jmp
inc
rorl
and
mov
and
fidivrs
in
sarb
gs
adc
in
adc
or
pop
lea
cmp
sub
dec
cmpl
jle
xchg
aaa
test
test
ficomps
sub
pop
jae,pt
add
dec
dec
sbb
mov
pop
ss
stc
pop
in
dec
dec
lret
xor
outsb
fwait
loope
daa
in
pop
shl
subl
lods
outsb
pop
jbe
pop
lods
pop
leave
xchg
nop
jmp
push
or
add
xchg
lea
scas
adc
sbb
mov
pop
bound
jne
adc
aas
outsl
inc
push
in
dec
hlt
cmp
push
push
lock
xchg
aaa
in
pop
xchg
pop
inc
push
mov
pop
inc
xchg
inc
cmp
ljmp
and
icebp
pop
xchg
and
pop
iret
push
out
dec
rcll
inc
insl
nop
xor
ja
cmpsl
sbb
sbb
imul
sbb
popa
adc
jae
movsb
push
xchg
ret
repz
lods
jne
insb
mov
mov
in
or
mov
into
lcall
adc
loopne
dec
in
lods
mov
test
mov
cmp
mov
andl
or
loopne
in
mov
sbb
mov
cmpb
xchg
adc
stos
push
test
cmp
rorb
sbb
data16
push
in
lods
xchg
and
dec
pop
jg
xchg
in
les
xor
jnp
inc
cmp
jle
push
insl
int
das
mov
ds
inc
mov
mov
int
mov
test
std
cmp
push
xchg
test
gs
std
sbb
aad
in
mov
push
movsl
insb
xchg
cmp
leave
xchg
xchg
jmp
or
outsb
cmpb
xor
push
mov
mov
or
lret
dec
adc
arpl
jecxz
nop
and
mov
sbb
sbb
loop
mov
xchg
jns
or
sahf
jns
shrb
aam
and
mov
clc
je
mov
pop
inc
adc
mov
scas
mov
adcb
mov
cmp
inc
pop
and
rcrl
ficoml
cmp
scas
mov
roll
leave
sub
scas
ret
filds
jp
jp
or
and
aaa
mov
loopne
sbb
push
cmp
dec
or
sarb
sub
movsl
scas
aam
roll
pushf
shlb
ljmp
in
add
cmpsl
ljmp
push
push
lcall
pushf
pop
xlat
stc
and
add
pop
jl
jno
jmp
jnp
and
shl
jmp
mov
loope
jle
pop
push
add
cltd
insl
das
jne
mov
cmp
cltd
roll
push
aam
mov
xchg
cmpsl
pop
enter
push
xorl
cmp
iret
add
adc
sbb
test
cli
out
push
sarb
mov
idiv
jo
fdivrs
ljmp
mov
lahf
mov
les
adc
pop
lods
sub
mov
sub
push
lcall
cmp
inc
mov
insb
xchg
adc
int3
mov
insl
xor
or
mov
cli
nop
std
or
addb
dec
enter
sti
dec
mov
inc
sahf
jg
xchg
cltd
lock
pop
push
push
ud0
fimull
mov
push
jb
in
in
mov
call
std
cmc
out
lea
and
int
push
out
sbb
sbb
jnp
or
fs
adc
mov
pop
cmc
rcr
xchg
addr16
push
jo
xor
mov
and
mov
test
repz
push
pop
mov
push
bound
pop
sarb
scas
mov
mov
cli
or
stos
sub
mov
gs
dec
mov
add
bound
mov
or
dec
repz
or
leave
sub
mov
in
popa
rclb
sbb
icebp
pop
fdivs
test
mov
and
jg
in
xchg
sti
xchg
jne
call
ljmp
xchg
mov
popa
cli
sub
aam
and
lret
dec
mov
fisttpl
mov
dec
rcll
sub
out
cmpsb
jo
ja
rorl
cmpb
movsb
in
jb
add
and
out
lea
sbb
lret
int
ljmp
popa
mov
jne
cmp
int3
cmp
xchg
xor
sti
addl
sbb
cmp
add
or
xchg
int3
jp
jno
popf
lds
pop
jae
ljmp
into
daa
xlat
adc
sbb
or
xor
dec
xchg
mov
adc
test
inc
mov
aad
fs
repnz
ret
xor
cltd
push
out
std
jp
pop
or
jo
lds
in
imul
scas
cmp
shll
subl
inc
xor
and
loop
or
xchg
pop
sarl
es
cmc
jge
jl
lods
adc
sbb
pop
xor
stos
in
dec
ja
lods
ror
pop
and
sub
or
inc
mov
sbb
lock
pop
xchg
jle
mov
testl
imul
out
jl
jne
insl
cmp
xor
and
sub
adc
jmp
lret
in
add
jecxz
mov
pusha
cld
lret
mov
pop
jge
pop
push
or
jno
mov
fisttps
adc
pop
ficoml
jnp
mov
inc
je
fcoml
or
add
test
xlat
pushf
pop
mov
cmpsb
jp
pop
xchg
aam
mov
scas
repz
mov
mov
addl
dec
lahf
dec
push
pusha
mov
int3
adc
sub
aaa
cmpsl
ret
dec
enter
push
dec
out
es
dec
daa
ret
and
arpl
aad
fnstenv
and
inc
mov
and
sbb
jne
out
data16
repz
pop
and
push
jl
test
ss
int3
lret
int
ss
mov
dec
dec
xor
cltd
decb
lds
data16
and
dec
mov
imul
in
gs
js
pop
cmpsb
mov
rorl
mov
push
cli
cmpl
adc
sub
clc
stos
xchg
adc
mov
sbb
clc
mulps
aas
push
mov
or
ljmp
push
inc
mov
sub
cmp
pop
sub
pop
mov
movsb
pushf
es
dec
jl
cmp
ret
lret
adc
hlt
or
addr16
sbb
pop
push
nop
jo
cmp
push
sub
aam
lods
push
hlt
lds
sbb
sub
dec
stos
mov
mov
dec
mov
push
xchg
sbb
jl
fbstp
jecxz
adc
inc
cmp
mov
mov
dec
mov
jo
jge
mov
sub
push
xchg
pop
jg
mov
jne
popf
in
lods
adc
sbb
jb
bound
inc
jle
add
push
push
pop
xlat
ror
push
push
add
repz
outsb
fs
mov
gs
mov
cmp
pop
int
xchg
in
sub
fsubp
fildl
enter
cld
dec
mov
xor
scas
mov
icebp
push
add
repz
sub
dec
arpl
xchg
sbb
mov
mov
adc
int3
lcall
mov
xchg
push
mov
push
push
xchg
out
ljmp
jg
mov
cmp
out
mov
xchg
test
mov
rorb
or
mov
int3
adc
shll
add
inc
xchg
mov
push
mov
or
ja
jecxz
shll
mov
das
in
ficoms
sahf
int
push
mov
pusha
stc
inc
dec
or
push
adc
inc
xchg
fidivrl
cmp
dec
cmp
repz
push
mov
divl
pop
mov
pop
daa
popf
movl
cli
xchg
sub
bound
enter
std
pop
inc
sarl
dec
mov
xor
test
fsubl
cmp
notl
js
jns
push
xor
in
fld
inc
jo
pop
pushf
mov
mov
inc
lods
test
fisttpl
out
inc
sti
sbb
movsb
lea
lret
jl
xlat
push
xchg
mov
jl
fcmovne
hlt
arpl
icebp
test
stos
mov
sbb
lret
lea
ja
in
sarl
leave
jg
les
sub
loope
jbe
and
hlt
push
and
cmp
cmp
lret
sti
push
inc
mov
jae
xchg
jmp
fists
push
outsl
xor
cmp
shlb
dec
sbb
add
aam
adcb
out
inc
sub
add
aas
loope
dec
sti
hlt
int
lea
fldcw
or
adc
push
test
xor
stos
or
pop
sub
in
add
mov
test
in
stos
dec
jb
iret
lods
xchg
jge
add
sbb
in
mov
inc
shlb
loope
stc
pop
arpl
mov
in
pop
bound
mov
mov
jecxz
fwait
pop
rclb
fisttps
js
rclb
jb
mov
lods
adc
pop
int
mov
xchg
js
inc
repz
inc
shll
int3
dec
outsl
push
cmp
adc
mov
les
shlb
mov
int3
jp
push
jl
daa
in
hlt
xlat
cmp
lea
out
mov
idivb
mov
scas
imul
test
sub
cmp
dec
sbb
icebp
pushf
pop
mov
or
sbb
or
pop
pop
aas
cmc
xor
cmp
mov
aas
fmuls
push
jo
xlat
in
cmp
push
xor
fwait
outsb
mov
stos
dec
mov
xchg
fst
jbe
sbb
lcall
pusha
popf
into
mov
lock
mov
sbb
fsub
and
mov
cmpsb
std
push
test
js
sub
rcll
jmp
fildl
xor
and
nop
mov
dec
and
jp
cwtl
gs
int
pop
mov
inc
mov
in
add
fbld
mov
pop
out
mov
clc
jg
jl
out
ja
jo
mov
pop
into
and
pop
cmpsl
out
aam
lret
mov
and
out
lcall
gs
cmp
xor
fidivl
dec
mov
inc
xor
add
pop
mov
nop
pushf
jle
mov
push
push
mov
daa
add
cmp
sbb
mov
imul
mov
popa
mov
jge
into
loope
jl
mov
cwtl
inc
lcall
movsb
in
insb
ds
enter
movsl
lock
or
xor
jg
pop
jnp
xchg
mov
insl
repnz
push
jl
dec
je
leave
mov
jg
inc
stos
std
aaa
xor
in
mov
xchg
adc
push
jnp
push
rcrl
ret
pop
addr16
add
lea
mov
shl
inc
xor
pushf
stos
mov
push
lcall
cmp
xor
mov
adc
ja
adc
in
dec
dec
add
mov
sbb
shll
push
test
gs
in
jmp
rclb
push
xchg
pop
add
scas
loopne
out
xchg
data16
aaa
and
lcall
cmp
jge
pop
iret
push
scas
hlt
pop
out
stc
mov
pushf
ret
inc
xor
jmp
orb
mov
xchg
adc
sar
add
jmp
idivl
push
inc
out
jp
cmp
push
cmp
mov
leave
xor
psubw
xor
subl
pop
sbb
test
shr
cmp
fistpl
mov
mov
push
out
push
mov
ret
cmpsb
adc
sarb
pop
fisubrs
mov
mov
int
mov
ret
fcomps
stos
adc
pop
lcall
in
movsl
dec
mov
hlt
push
aas
rclb
stc
mov
dec
jb
push
out
xor
sub
add
jo
std
sbb
xchg
xor
cli
mov
sbb
adc
or
dec
lret
notl
adc
inc
stos
jle
popa
cmp
dec
jmp
dec
adc
mov
dec
out
xor
push
out
sbb
adcb
lds
repz
xchg
adc
leave
xchg
inc
sub
das
adc
insl
xchg
in
jl
je
int
test
fdivr
in
imul
int3
rorl
push
popl
jecxz,pn
mov
inc
jl
sti
mov
mov
pop
push
or
mov
xor
xor
cwtl
and
cmp
icebp
xchg
and
lret
mov
mov
pop
or
xchg
dec
loop
mov
cmp
dec
xor
sbb
enter
insl
icebp
enter
cmpsb
add
sub
imul
in
scas
adc
mov
scas
arpl
push
mov
inc
inc
xchg
jecxz
xchg
insl
mov
scas
out
inc
mov
imul
pop
movsb
aad
outsb
stos
push
xbegin
pushf
jp
fs
mov
mov
adc
testb
cmp
leave
fwait
cmp
popa
lods
add
cmc
pusha
sbb
mov
insb
mov
sbb
jp
pminsw
jbe
dec
sbb
cli
lods
nop
enter
cmp
xchg
cmp
jbe
test
mov
inc
cmp
jmp
xchg
test
sbb
cmp
fwait
xchg
sub
xchg
hlt
xchg
mov
push
incl
jmp
scas
inc
sbb
inc
ss
inc
lahf
out
fldt
pushf
arpl
dec
push
mov
shlb
dec
xor
push
dec
outsb
int3
sub
inc
inc
add
rcrb
outsb
mov
or
mov
mov
pop
inc
and
bound
push
cltd
lods
xchg
popa
stc
aad
adc
clc
scas
pop
divb
mov
push
push
ret
leave
or
loopne
test
inc
jp
and
rorl
mov
je
aaa
outsl
adc
cmp
pushf
inc
jmp
inc
jnp
mov
push
mov
rcrb
jb
inc
fcmovb
xor
shl
fwait
nop
pop
mov
leave
or
les
adc
adc
arpl
push
inc
mov
lods
rclb
stos
mov
rcrl
jmp
mov
add
lods
jl
xor
iret
push
in
and
outsb
orl
or
sti
insl
movsl
add
xor
loop
test
std
jb
sub
dec
and
xor
xchg
test
lock
ret
into
int3
out
adc
push
icebp
sti
les
leave
mov
sbb
xor
scas
out
mov
sahf
shll
dec
or
pop
pusha
pop
in
xchg
dec
mov
mov
add
js
pop
xchg
pop
jnp
cs
jo
gs
pop
add
xchg
mov
js
lcall
loopne
xor
xchg
inc
dec
sbb
out
xor
int
fidivl
adc
fs
inc
add
ret
mov
lea
test
test
sub
loop
cltd
pusha
xor
loop
test
lret
bound
mov
rolb
insl
sbb
adc
lods
fistl
movsl
sub
cmpsl
push
pop
fmul
add
ljmp
adc
adc
lods
push
movb
fucomi
hlt
adc
mov
push
repnz
scas
ds
shl
repnz
pop
lock
jno
mov
test
aaa
aas
movsl
jg
xchg
not
jo
loope
orb
jbe
push
sbb
xor
push
jmp
xchg
ja
stos
fildll
fwait
outsl
sti
andnps
jnp
xor
frstor
xor
gs
cs
ljmp
sub
inc
inc
cwtl
push
mov
ja
xor
adc
and
xchg
adc
daa
dec
mov
jbe
lea
mov
vdivsd
fmuls
js,pt
mov
and
cmpsl
mov
hlt
jecxz
mov
in
cwtl
cs
cwtl
sahf
popf
cs
pop
jb
xor
subb
popf
cld
clc
fmuls
xor
ret
rcrl
pushf
sbbb
mov
fcmovu
mov
gs
xchg
nop
inc
scas
push
int
or
test
scas
mov
mov
adc
clc
icebp
std
mov
aad
xchg
push
mov
icebp
ds
imul
adc
push
mov
call
sbb
insb
jno
imul
dec
xlat
and
addr16
jmp
push
enter
jmp
inc
ds
push
adc
and
mov
in
xchg
shr
imul
mov
daa
inc
rclb
jae
sub
ds
sbb
out
pushf
xor
adc
out
inc
js
pop
pop
dec
int3
push
xchg
push
rorl
mov
jno
pop
fldenv
pop
push
fs
aad
xor
add
inc
enter
cmp
dec
push
add
cmp
icebp
inc
insl
mov
push
push
int3
lcall
cli
loopne
mov
cmp
sbb
jae
scas
aam
mov
dec
pushf
push
shr
sbb
fwait
pop
sbb
out
mov
int
scas
loope
dec
icebp
xor
jmp
aam
hlt
outsl
cs
and
sub
push
std
out
sub
push
fsubrs
insb
pop
mov
imul
xchg
std
addb
test
or
adc
movntps
loope
loopne
inc
pop
lds
inc
aas
mov
xor
aas
mov
int
mov
fwait
inc
fildl
ljmp
clc
mov
scas
lahf
iret
repz
pop
mov
in
ja
out
loopw
dec
cmp
out
lcall
xchg
lcall
jmp
dec
sbb
out
adc
xor
cli
pop
int3
lods
cmp
stos
out
dec
and
fs
add
mov
pop
sti
and
scas
gs
lock
jp
push
icebp
in
cmp
jo
mov
cmp
ja
cmp
sti
mov
sub
adc
jl
js
loope
sbb
pmullw
cltd
enter
cli
jno
inc
dec
pop
dec
lds
jp
add
xchg
and
pop
or
push
and
addr16
xor
popf
xor
int
xor
dec
xchg
aad
insl
mull
or
lret
test
sub
mov
or
outsl
pop
mov
aas
sbb
cmpsb
adc
std
xchg
adc
jecxz
cmp
pop
jmp
jb
lret
cmp
mov
int
outsb
and
pushf
inc
ret
add
inc
and
aaa
xchg
or
push
mov
mov
leave
loopne
popa
adc
mov
inc
aas
xor
shll
push
mov
jo
je
mov
lea
xchg
enter
cmpsl
scas
jb
or
push
sbb
sub
pop
cmp
imul
mov
mov
jno
out
or
and
out
or
test
lahf
out
push
push
adc
test
mov
dec
inc
cmp
inc
and
mov
and
int
leave
and
mov
dec
sub
xlat
xor
cwtl
or
mov
cltd
inc
xchg
repz
hlt
rol
fwait
or
in
mov
mov
dec
xchg
mov
mov
and
jle
mov
push
cmp
xor
adcb
sbb
cmp
mov
cmp
out
cmp
pop
cmp
add
mov
pop
popa
ss
test
xor
cld
or
je
or
int
and
adc
mov
push
cmp
dec
mov
push
pop
pop
inc
pop
jg
pusha
das
cmp
cmpsb
cmp
push
dec
mov
int
add
and
adc
sbb
popf
or
stos
push
push
test
push
and
pushf
cwtl
mulb
loop
test
imul
fadd
sub
rorl
loop
insb
shll
mov
fwait
pop
pop
mov
fldenv
imul
cli
inc
aad
repz
out
mov
divl
jo
movsb
push
jnp
pop
mov
out
jg
dec
aas
out
cmp
lret
dec
cmp
out
push
js
insb
xchg
xor
cltd
mov
repz
mov
call
insl
and
stos
adc
cmp
xor
jmp
cmc
das
lods
jnp
and
imul
fstpl
dec
or
jns
dec
push
inc
in
mov
stos
sub
test
pop
jl
or
dec
fisttpl
fdivl
pop
sub
ds
push
adc
test
xchg
in
and
inc
dec
jnp
sub
inc
jge
cli
lahf
jmp
add
sarb
push
lret
lret
lret
jns
aaa
daa
push
xlat
nop
pop
pop
and
pop
int
or
adc
inc
cmpb
cli
add
test
or
sub
lods
and
pusha
das
repz
in
test
pop
sbb
jo
xchg
xchg
jae
sahf
inc
inc
mov
ja
adc
or
xlat
jmp
inc
xchg
mov
lret
in
mov
adc
sbbl
in
mov
into
js
aad
inc
cmp
sbb
shrb
out
inc
test
js
push
push
xchg
jp
push
jle
flds
cld
push
out
div
dec
mov
pop
push
mov
pop
pop
push
mov
xchg
xor
mov
pop
int3
int
outsb
push
sbb
popl
inc
mov
das
cmp
jmp
std
pop
adc
and
mov
sbb
mov
pop
js
sti
sbb
js
dec
mov
dec
js
sub
push
dec
push
cltd
mov
xchg
pop
ljmp
add
imul
inc
mov
xorb
dec
cli
or
and
xor
push
mov
mov
xor
xchg
ret
jmp
and
pop
cmp
xor
loope
inc
stos
sbb
popf
les
leave
adc
mov
xchg
pop
out
int3
sbb
cmc
lods
fmuls
mov
loop
mov
mov
push
xchg
inc
ffreep
inc
jne
xchg
adc
and
xchg
xor
dec
aas
cmp
aad
inc
inc
sar
sbb
ficomps
push
cmp
or
sub
fwait
pop
mov
test
add
hlt
mov
xor
sub
std
cs
sbb
adc
dec
dec
test
cwtl
loopne
mov
clc
test
test
test
pop
or
ds
xchg
dec
idivl
fnstsw
sub
movsl
add
dec
fists
mov
mov
push
sbb
rolb
mov
in
sbb
push
push
jae
icebp
sti
cmp
xor
sbb
lds
xor
fwait
cmp
cmpsl
cmpsl
mov
cmpsb
or
and
and
mov
jp
mov
or
jae
pop
jmp
movsb
inc
rorl
xor
test
jecxz
roll
pop
push
xor
jg
ret
into
push
sbb
les
aam
movsb
out
pop
push
dec
iret
adc
addr16
subb
mov
in
fs
test
lods
into
push
daa
and
repnz
xor
xchg
daa
repnz
mov
push
xchg
inc
pop
js
dec
fidivrl
pop
ret
ljmp
mov
std
sbb
jnp
inc
push
pop
push
in
mov
test
popa
mov
out
les
dec
lcall
or
out
push
cmp
jb
push
xor
nop
rcr
sarl
scas
cmpsb
rorl
lret
mov
fnsave
cs
clc
xchg
jg
cs
in
xchg
xor
push
push
xchg
mov
jns
stos
jecxz
xchg
imul
push
push
dec
sub
mov
mov
jo
test
xchg
cmp
loope
clc
nop
xor
xor
call
mov
inc
pop
movsb
adc
xor
call
cld
sbb
pusha
orb
vrcpss
cmc
mov
fwait
in
lods
adc
xor
push
inc
pop
fdivrl
jge
pop
cmp
add
decl
jno
push
dec
lea
insb
ret
jnp
fists
enter
jno
insb
mov
stos
stos
stos
mov
mov
gs
sub
repnz
mov
imul
jns
movsl
pop
xor
out
xor
cwtl
es
ljmp
cltd
push
int
cmp
bound
test
or
loop
arpl
mov
pop
and
jmp
jmp
dec
xlat
out
add
xchg
mov
insb
mov
pop
pop
cmpsl
jbe
sub
divl
xchg
xor
fs
popl
int
adc
xchg
xor
mov
andl
ja
mov
xor
ficoml
shll
fidivl
icebp
test
idivb
mov
outsb
adc
neg
mov
sbb
sub
int
mov
mov
cld
pop
jl
es
fdivr
aaa
call
shl
adc
cli
inc
insl
mov
pop
daa
dec
lock
shrl
and
rcl
pop
jmp
or
mov
pop
mov
test
outsb
dec
cmpsl
adc
out
jg
in
pop
jo
mov
pop
xlat
mov
lods
aas
jge
icebp
scas
insl
jns,pn
dec
adc
xlat
xchg
fadd
in
std
xchg
test
cmp
pop
mov
shlb
orl
or
in
sbb
sbb
pop
jbe
aad
aaa
xor
and
out
into
shlb
lds
in
sahf
sbb
mov
cmc
cmp
sbb
adc
fstpt
loopne
push
or
test
and
and
add
xchg
jecxz
cmp
or
arpl
stos
mov
cmp
push
test
popf
and
mov
and
iret
mov
pop
add
jbe
mov
xchg
test
test
push
and
pop
add
sbb
lods
mov
hlt
sahf
xlat
jns
xchg
vmovups
gs
in
lods
pop
jle
push
mov
fidivs
or
adc
sub
push
sbb
fildll
testb
adc
adc
xchg
sub
pop
test
mov
popf
cltd
test
loopne
push
jbe
cmp
cmpsl
jp,pt
cmp
call
les
shl
mov
in
lods
jnp
lret
pushf
add
xchg
mov
mov
mov
inc
clc
pop
insb
arpl
xlat
cmp
shlb
fimull
adc
out
sub
push
mov
aaa
sub
xchg
ret
mov
push
pop
outsl
jnp
sarb
test
call
ret
ret
xlat
sub
addr16
adc
cwtl
sub
pop
dec
push
adc
imul
sbb
mov
sbb
jle
sarl
and
cli
popf
icebp
pop
push
xor
xor
movsl
gs
xchg
jnp
fldl
xchg
sub
jae
addr16
int
ficoms
push
loope
in
fistps
xor
les
fisttpll
ljmp
rolb
scas
les
mov
data16
pop
cltd
xor
int3
inc
sub
jo
daa
jecxz
fs
and
scas
push
sbb
sub
jnp
mov
pushf
lahf
lea
jne
rolb
js
dec
jl
mov
ss
repnz
inc
jae
lcall
dec
xchg
lahf
or
xchg
inc
jmp
mov
fdiv
idivb
hlt
fsubr
sub
imul
cmc
add
mov
int3
cmp
int
movsl
dec
jns
int3
dec
rcll
aad
jae
pushf
xor
enter
dec
bound
cmp
test
xlat
aaa
add
outsl
das
aaa
negl
aam
mov
jmp
jbe
sbb
das
pusha
xchg
ret
scas
xchg
les
out
cmc
call
add
or
cmc
and
loopne
in
jns
add
or
sub
push
lock
sti
dec
ds
or
leave
aaa
ljmp
mov
test
mov
jmp
sub
xor
test
jnp
cmpsl
ds
xchg
push
dec
rcrl
push
lret
out
or
aaa
sti
adc
mov
xchg
mov
inc
sbb
pop
push
inc
sub
stos
xor
subb
jl
mov
inc
lods
mov
es
push
in
lahf
das
into
popf
pop
xor
scas
rcrl
lret
lcall
dec
or
push
push
insb
hlt
xchg
adc
and
mov
repz
mov
jp
mov
into
fs
scas
push
push
mov
test
mov
push
out
icebp
shlb
mov
lods
adc
leave
nop
adc
add
hlt
jg
leave
aad
aam
cmp
sub
adc
push
cmp
jmp
adc
icebp
fcmovnbe
sub
movsl
dec
cs
xchg
aad
test
fs
repz
ja
mov
mov
test
cld
lret
aam
popfw
mov
inc
mov
sarl
fmuls
jg
pushw
iret
dec
insl
cmpsb
sbb
outsl
in
cmp
xchg
pop
mov
and
xchg
loopne
mov
frstor
int3
push
pop
inc
in
sbb
cmp
inc
imul
hlt
sbb
repnz
mov
fnsave
stos
xchg
mov
pop
cmp
push
cld
mov
jne
clc
mov
jns
lahf
outsb
pop
insl
cmp
mov
mov
test
aam
movsb
xlat
mov
rcll
in
or
xchg
aad
movsl
push
test
ja
xor
cmc
sti
lret
and
xchg
and
aas
pop
push
xchg
mov
jnp
fnstsw
inc
dec
sub
jge
arpl
fnstcw
mov
test
xchg
aaa
xchg
icebp
xor
mov
mov
in
clc
nop
hlt
in
std
xchg
icebp
test
aas
out
dec
stos
mov
adc
call
xchg
outsl
or
inc
pop
divb
ret
gs
movsb
lahf
lods
fstl
in
out
sub
mov
push
ret
mov
xor
iret
scas
jns
mov
mov
sbb
imul
pop
sahf
xchg
icebp
pushf
xchg
mov
fists
or
sbb
add
dec
es
repz
jae
cmc
dec
inc
mov
xor
jno
pop
pusha
movsb
sub
pusha
mov
stos
pop
outsl
jmp
loope
mov
in
cltd
inc
dec
js
test
push
testb
jl
stc
mull
loope
je
iret
xchg
and
sub
lret
es
bound
mov
frstor
stc
fnstsw
cmc
imul
inc
cmpsb
dec
jecxz
outsl
mov
push
xchg
test
insl
out
jecxz
xor
das
mov
push
add
dec
mov
je
sbb
cmpsb
icebp
add
sbb
sub
xchg
imul
arpl
pop
jle
mov
pop
adcl
or
lcall
cmc
inc
or
hlt
jae
into
pop
xor
les
jno
divl
dec
fsubrp
push
psubsb
push
cmp
lret
icebp
mov
mov
xchg
lret
add
sub
gs
call
and
enter
inc
pop
sbb
push
jnp
jo
adc
cmpsl
push
ja
fnstsw
add
sbb
jb
cli
jle
ficoml
orl
jg
nop
ds
pop
cli
mov
jo
scas
sbb
mov
mov
popf
push
pusha
dec
test
lahf
jne
js
clc
out
xor
mov
mov
xor
cmp
push
cmpsl
add
enter
clc
mov
jmp
cmpsl
lret
push
cmp
pop
in
subl
popf
shlb
out
lds
xor
sub
cltd
out
jg
mov
insl
cmp
and
adc
push
lods
mov
repz
repz
aas
dec
mov
sar
stc
push
aas
cld
pop
pop
or
out
mov
sub
jae
nop
js
sub
jecxz
ror
mov
adc
and
call
jl
push
xor
adc
add
push
pop
cmp
das
std
fs
mov
jle
xchg
je
nop
pop
stos
mov
repnz
faddl
iret
inc
icebp
and
sub
mov
nop
mov
push
push
dec
enter
mov
pop
cld
dec
popa
mov
leave
or
les
mov
aaa
sbb
jl
int3
cmp
adc
jl
push
inc
dec
xor
sbb
xor
and
mov
push
xor
mov
lods
ficoms
xchg
repz
adc
std
subb
mov
dec
jbe
and
jp
ds
loope
mov
pusha
xchg
jbe
lahf
pop
sbb
sti
sbb
mov
and
or
ljmp
mov
sub
mov
lea
fisttpl
movsb
push
movsl
and
nop
pop
dec
test
repnz
leave
adc
mov
pop
mov
and
out
cmp
and
xchg
jbe
dec
lret
dec
mov
in
cs
popf
jb
test
fisttpl
xchg
in
jp
les
inc
iret
cmpsb
mov
sahf
in
mov
sbb
fnstenv
inc
push
imul
test
scas
rcll
shrl
pop
push
jbe
adc
xchg
icebp
bound
mov
je
gs
aas
hlt
add
popl
scas
xorb
fsubrp
cli
test
rolb
lock
and
push
inc
push
rclb
test
add
fldenv
mov
mov
subl
jmp
fisubl
faddl
int
mov
movsl
xchg
in
scas
pop
dec
jecxz
arpl
fstpt
dec
pop
pushf
orb
leave
sub
pop
push
push
lock
in
mov
dec
push
and
or
scas
pop
sbb
mov
xchg
mov
fimull
cmc
inc
push
mov
dec
sti
lsl
xchg
jge
arpl
or
divl
adc
jge
and
cli
in
arpl
cmp
or
and
js
pusha
adc
xchg
clc
mov
fstpt
cmp
stc
mov
push
sti
bound
pusha
int3
adc
cmp
xor
addb
xor
push
fnstenv
dec
lea
cmp
lock
mov
or
xor
dec
test
inc
xorl
icebp
clc
inc
mov
in
cmp
out
pop
stc
lock
mov
lock
je
jmp
add
xor
xchg
adc
mov
int3
pushl
lcall
in
pusha
pop
cwtl
and
into
imul
pop
movsl
inc
aam
addr16
sub
push
iret
out
mov
das
mov
push
in
lds
lock
jle
jo
xchg
sbb
xor
rcr
push
and
outsb
mov
xor
pop
cli
dec
sbb
js
mov
inc
test
sub
imul
cmp
or
inc
mov
ds
cmp
push
fistps
in
add
cmp
push
or
div
sub
ret
rcll
or
mov
add
push
inc
test
sub
lret
das
aaa
dec
test
inc
pop
push
sub
add
push
cld
xor
jp
test
fsubs
outsb
mov
imul
int
dec
pop
scas
out
mov
aam
sub
decl
notb
pop
loope
xor
sbb
int
pop
push
dec
ret
orl
push
mov
fisttpll
cmp
pop
ljmp
mov
fbstp
xchg
pop
pop
sti
inc
mov
in
fchs
sbb
loope
bound
imul
push
or
or
dec
loop
cli
testl
stos
inc
fnsave
loope
movsb
push
sub
lret
stos
and
lret
js
mov
imul
lods
jne
mov
xchg
xchg
adc
mov
push
testb
jge
push
sbb
and
stc
in
je
or
adc
into
scas
loopne
sbb
insl
jbe
push
jp
adc
push
add
add
pop
ds
ret
xor
and
xor
push
push
sub
or
cmpsl
pop
xor
shl
scas
cmpsl
and
adc
inc
ds
test
mov
dec
xchg
xor
jno
in
icebp
pop
xchg
dec
xor
ret
add
sub
sub
mov
xchg
movsb
xchg
fidivl
xchg
int
pop
ja
xchg
cmpsl
add
fcmovnbe
fdivs
outsb
jne
lods
and
dec
dec
adc
fiadds
cmpsb
lret
ja
dec
pop
push
fiaddl
pop
scas
cmp
enter
dec
xor
imul
sub
cwtl
or
stos
xchg
jecxz
das
xchg
sub
lock
repnz
mov
dec
mov
arpl
loopne
add
mov
lods
add
lea
test
mov
stos
sub
push
loopne
testl
push
imull
insl
mov
push
stos
call
insl
push
jns
cmpb
into
or
or
jno
dec
mov
jb
sub
pop
push
ret
cmp
fdiv
mov
rcrb
imul
sbb
mov
sub
stos
cmp
inc
in
inc
push
mov
in
push
pop
ss
sub
addr16
mov
out
adc
fildll
gs
out
fsubl
and
ret
inc
repnz
test
add
xor
roll
cmp
mov
fimull
fucomp
sub
lock
or
ljmp
out
cli
push
and
push
and
insl
inc
in
loope
sub
xchg
sub
insl
imul
push
inc
cmp
mov
push
cmp
ljmp
cmpsb
repz
lock
cmp
dec
ja
loopne
xor
adc
xor
out
fnstenv
lock
pop
mov
jo
mov
and
stos
js
ds
fs
push
or
mov
mov
pop
int
stc
out
test
pop
pop
cmp
in
std
lahf
mov
std
repz
or
sub
or
push
cwtl
aas
xchg
mov
sbb
xor
push
imul
or
mov
rcrl
mov
call
xchg
nop
in
pop
cmpsl
icebp
mov
or
popa
xchg
jg
loope
and
cmpsb
into
dec
mov
movsl
inc
dec
daa
xchg
sub
outsb
testl
pop
mov
mov
mov
ja
decb
push
add
push
pop
cmp
jecxz
repnz
lahf
xor
and
push
iret
in
bound
cmp
jle
cmp
lahf
out
out
lock
push
mov
arpl
sub
jecxz
xor
lock
jl
hlt
gs
add
push
lcall
xor
or
mov
and
push
test
fcompl
test
stos
in
testb
test
shlb
dec
push
ss
es
mov
mov
add
pop
cltd
mov
stc
adc
insb
dec
push
lret
or
insb
std
or
sbb
cmp
pusha
pushf
sahf
out
cltd
in
and
pop
out
or
pop
insb
fwait
lret
cmp
int3
sub
stos
loop
xchg
cli
sub
cmpsl
mov
aam
mov
mov
mov
xlat
sbb
fcompl
imul
fldt
test
add
hlt
mov
divl
push
imul
jmp
aam
lock
je
add
jp
mov
fs
adc
sub
mov
dec
jmp
push
jl
outsb
dec
lods
out
push
cmp
inc
xor
mov
push
movsl
xchg
mov
shrl
push
jmp
cld
lock
push
outsb
cwtl
mov
mov
xchg
daa
cmp
add
sub
and
push
es
jno
and
push
cs
lret
fnstenv
xchg
mov
adc
mov
jp
mov
add
jbe
aad
lret
rcrl
aaa
sub
dec
push
jae
sti
stos
add
lret
push
dec
and
xchg
inc
adc
mov
ss
scas
aaa
decl
adc
lahf
cmp
ds
mov
cli
gs
jnp
mov
mov
add
rorl
jns
out
cmp
shll
data16
adc
cmc
popa
push
lock
aas
cmp
ljmp
jle
cmc
insb
push
mov
rorl
mov
pop
jecxz
jb
sub
jo
lods
cmp
dec
push
into
rcrl
aam
ss
adc
jmp
dec
int3
popf
sti
dec
xchg
iret
ret
cltd
test
sbb
mov
jle,pn
xor
and
outsl
aas
and
mov
mov
loopne
fiadds
jl
in
adcb
pop
cmc
stos
add
inc
adc
cli
rorb
push
rcl
pop
inc
je
mov
lahf
lock
rcll
cmp
xor
jb
outsl
mov
mov
cli
mov
cli
shrl
cli
jbe
cltd
add
test
push
mov
int3
mov
stc
sub
or
sbb
xlat
cs
aam
imul
xlat
ja
lock
imul
xchg
add
mov
js
aad
jmp
les
ja
pop
xchg
inc
mov
into
push
sub
cmpsb
dec
rorl
lods
or
fmuls
jle
stos
mov
mov
test
xchg
pop
adc
lret
cwtl
xchg
mov
scas
pop
fcmovbe
int3
test
fisubrs
inc
fidivs
mov
int3
sub
test
xchg
or
push
jo
sbb
jo
jp
les
or
add
sbb
jbe
rclb
daa
dec
cmc
loop
sub
push
movsl
mov
ret
push
orb
or
dec
jecxz
lahf
sti
xchg
jno
mov
iret
ror
push
sbb
pushf
sub
lock
hlt
jns
inc
fcomps
ljmp
andb
pop
daa
leave
stc
outsl
jmp
add
sbb
jge
sbb
jae
into
test
rol
pusha
inc
jecxz
mov
mov
popa
ror
mov
std
ja
xchg
sbb
xor
adc
dec
addl
xchg
stos
aaa
inc
push
or
in
cs
mov
iret
repnz
lods
cmpsb
jg
push
pop
jecxz,pn
jns
imul
lods
fsubrl
loop
adc
xchg
inc
sbb
add
ret
fldt
fimull
xor
xor
cwtl
icebp
aaa
inc
and
insl
js
cmp
movsl
cmp
push
or
je
lcall
fstps
fistpll
xchg
imul
push
push
ret
inc
xor
cmp
or
push
jg
sub
leave
rcll
sbb
cli
adc
test
adc
in
mov
std
add
in
pop
xchg
adc
sub
fimull
out
push
xchg
push
mov
xor
mov
push
ja
loopne
imull
inc
or
add
rorb
mov
adc
lsl
in
cmpsl
sar
mov
jle
mov
adcb
push
jno
lret
into
ret
js
je
andl
movsl
add
stos
mov
and
cmp
cs
lahf
mov
mov
sahf
les
mov
out
outsl
into
pop
mov
pop
neg
arpl
sahf
scas
cmp
call
xchg
mov
mov
pusha
int
lock
roll
jecxz
sti
int3
jno
push
adc
mov
mov
sahf
popf
lea
and
pop
cmp
cmp
pop
mov
daa
xlat
cs
mov
push
cmp
or
pop
inc
ds
add
inc
lds
sub
test
hlt
int
call
pop
insb
fiaddl
pusha
sahf
test
cltd
push
lret
stc
int
mov
xchg
insl
test
or
xor
jbe
imul
add
jne
xor
mov
mov
test
and
or
xor
mov
aas
and
cmpsb
add
mov
dec
pop
mov
test
cwtl
push
lret
out
push
popf
cmpsl
mov
int3
test
in
test
add
ja
sarb
jns
add
fbstp
imul
inc
jmp
and
lock
mov
js
inc
jns
push
pop
sub
pop
stos
xchg
stos
shll
iret
leave
mov
sub
stos
mov
inc
xlat
jo
shr
sbb
dec
repz
cmpsl
fisubrl
pop
mov
dec
xchg
cmp
lods
mov
xchg
repz
mov
es
dec
daa
scas
lcall
aas
and
pushf
jo
xor
movb
jo
dec
mov
xchg
mov
pop
jle
jbe
inc
mov
testb
push
loop
js
sbb
out
ret
pop
xchg
add
rorb
cltd
nop
inc
in
insb
xlat
into
and
sahf
loope
je
je
mov
scas
mov
jb
xchg
xor
test
adc
into
mov
fs
push
mov
mov
push
adc
sbb
cmc
stos
sub
or
imul
int3
mov
xor
or
mov
outsw
mov
or
das
add
lock
fdivrl
dec
insb
push
jae
fldt
int
mov
cmp
dec
enter
add
or
insl
cld
loop
xchg
cltd
lock
je
sub
xchg
inc
xchg
or
jnp
icebp
rorb
pushf
insb
imul
lods
pushf
mov
lea
test
mov
test
ljmp
std
add
jo
cmc
cld
imulb
or
test
addl
pop
js
push
sti
fnstenv
sbb
test
cli
mov
adc
in
or
adc
shl
push
fnsave
mov
push
push
fnstenv
and
lods
lods
fcoms
mov
xchg
add
fwait
iret
mov
cmp
jl
push
jne
jle
xor
mov
lahf
hlt
pop
frstor
into
mov
lret
dec
mov
push
inc
ljmp
xchg
js
stos
jae
fcmovne
inc
xchg
mov
leave
adc
lock
daa
js
xor
and
ss
push
mov
unpcklps
lds
jbe
mov
push
ljmp
out
mov
outsb
mov
test
je
push
xchg
nop
lcall
mov
mov
pop
shll
mov
pushf
leave
and
bound
repnz
add
pop
dec
xchg
mov
inc
out
add
lret
das
and
or
adcl
cltd
fidivrl
mov
fidivrl
lods
push
cmp
pop
arpl
pop
mov
dec
mov
lock
inc
popf
mov
fstpl
push
adc
add
or
mov
dec
pop
jle
inc
call
adc
bound
in
push
adc
addb
pop
ljmp
insl
stc
loope
xor
fldcw
fsubrl
dec
push
adc
sub
loope
data16
pop
movsb
lds
daa
sub
mov
iret
sub
cmpsb
stos
push
movntps
mov
dec
std
or
pop
xchg
xor
cmp
lret
sarb
sti
mov
lods
out
or
not
or
sar
bound
ss
fimull
and
jae
dec
andb
mov
lret
mov
jns
movsl
dec
mov
pop
test
jecxz
stos
inc
arpl
jbe
outsl
xor
xchg
add
int3
and
sbb
fiaddl
jmp
sar
int
mov
testb
rcl
sbb
jp
decl
add
add
sub
jmp
dec
and
pop
push
scas
push
push
lahf
jp
icebp
jae
cwtl
cmp
fisttps
rolb
or
icebp
cmpsl
fwait
jecxz
sub
sti
cmc
inc
in
lods
add
mov
pusha
into
dec
scas
scas
sub
jne
inc
dec
pop
mov
sub
mov
mov
sarl
xchg
jge
xchg
int
popa
inc
mov
cmp
call
sbb
push
into
dec
mov
aam
cmp
add
movsb
mov
dec
stos
adc
push
jg
jecxz
mov
jmp
ljmp
clc
adc
pop
clc
mov
inc
fmuls
lahf
add
loop
jl
mov
pop
jl
mov
sti
mov
fnstenv
cmp
outsb
jmp
es
xchg
mov
xor
cli
imul
jno
mov
rcll
insl
mov
sub
sbb
f2xm1
cwtl
mov
fwait
data16
movb
sub
mov
imul
cld
adc
xchg
stos
jge
dec
mov
xchg
mov
call
pop
cmpb
xor
std
gs
xor
push
sbb
loope
rolb
xchg
dec
les
ljmp
imul
adc
movsb
lcall
int
inc
dec
mov
mov
push
lods
loopne
cmp
mov
mov
je
in
cmp
lods
ss
push
push
cmc
ss
inc
fists
dec
in
repz
sbb
pop
dec
jle
loopne
gs
xchg
sbb
lahf
test
cmp
fbstp
ja
xor
mov
ret
pop
ljmp
or
loopne
movsb
lea
jne
or
mov
imul
repz
inc
pop
pushf
or
lret
inc
add
lock
aaa
jmp
jns
pop
shlb
je
mov
out
push
pop
out
aad
cwtl
in
push
push
add
arpl
dec
stos
aaa
xchg
std
mov
clc
int3
clc
ljmp
mov
cmpsb
lahf
aaa
inc
jb
popf
jb
cmp
dec
popa
aam
push
xchg
test
dec
xor
pop
sbb
jbe
pop
push
cmp
jb
stos
daa
je
js
loope
movsb
les
inc
inc
mov
jl
dec
cmc
mov
out
dec
lret
add
lahf
scas
dec
jmp
aas
lea
xor
xchg
loope
cwtl
scas
testl
int
pop
push
dec
jge
sahf
cltd
jge
or
scas
scas
sub
jbe
das
or
mov
mov
out
add
adc
ljmp
dec
add
insl
jo
adc
cmp
aam
jb
sub
pusha
mov
rcrl
pop
mov
pop
stos
add
xor
imul
rcrl
fwait
mov
das
stos
aam
mov
jl
xor
xchg
mov
sbb
in
push
shrb
adc
das
cld
push
jbe
mov
inc
lcall
sahf
inc
arpl
sbb
and
sub
sub
lahf
pop
hlt
xchg
cmpb
push
mov
notb
lods
iret
xor
jno
or
fmul
mov
pop
add
cmc
hlt
pop
mov
adc
mov
inc
push
pop
xor
enter
lcall
xor
shl
lods
push
or
rol
clc
and
add
clc
stc
jb
icebp
xchg
std
test
sbb
es
fistps
or
push
sarl
cmp
gs
xchg
das
aaa
out
mov
loopne
mov
jmp
aaa
push
lods
das
mov
or
insl
ds
inc
jbe
push
iret
pop
inc
hlt
das
cltd
add
std
stos
psrlw
mov
sub
adc
sar
insl
pop
repz
or
imul
fcoms
dec
jo
loope
bound
into
mov
into
fmuls
inc
ljmp
lods
loopne
cld
or
std
xor
dec
xchg
mov
fwait
jmp
fisttpll
dec
cli
test
jbe
std
mov
xlat
arpl
shll
sbb
jp
inc
add
cltd
repz
fsubr
inc
xchg
mov
into
xchg
fidivl
xchg
cmp
clc
movsb
test
cmpsl
iret
pop
les
sbb
push
outsb
adc
xchg
xor
lea
and
sti
or
es
js
das
dec
call
insb
or
ss
dec
sti
gs
lea
pusha
pop
lds
adc
add
lock
fcompl
push
adc
or
test
pop
push
pop
and
in
pop
arpl
lret
mov
or
pop
in
bound
clc
push
adc
xor
shll
ljmp
mov
sub
adc
mov
dec
xchg
sub
or
int
jg
lds
sbb
fisubrl
jnp
mov
ds
cmpsb
bound
scas
jb
xchg
xchg
std
imul
pop
stos
sub
xchg
into
inc
inc
jg
lcall
ret
lret
shl
push
mov
leave
push
and
arpl
rorb
test
xchg
sti
push
mov
test
movsb
inc
mov
push
leave
testl
imul
ja
clc
fnsave
add
add
pop
sbb
in
pop
inc
dec
addb
jbe
outsl
pop
int
aaa
or
push
mov
movsb
shl
pop
cmc
mov
adc
mov
mov
mov
lock
mov
push
movsl
into
push
mov
ja
mov
mov
lahf
sub
stc
lock
fucom
mov
je
into
lea
pop
fldl
test
xchg
inc
mov
or
xchg
and
lret
xchg
pop
pop
jne
ret
into
sub
dec
add
fstpt
sbb
loope
sbb
mul
pop
mov
aam
nop
ret
pop
xchg
ss
cltd
out
and
inc
pop
clc
dec
fmul
xor
ret
mov
lock
xor
ficomps
add
in
flds
test
sub
push
js
xor
lea
or
pushf
bound
xor
or
jno
subl
mov
pop
lods
adc
fucompp
xchg
push
xor
and
inc
stos
pop
hlt
repnz
lods
pop
data16
les
hlt
cmp
jbe
xchg
ljmp
mov
imul
test
inc
pop
cld
arpl
loopne
lcall
inc
enter
orl
in
jns
inc
mov
pop
arpl
xchg
xchg
sub
pop
pop
push
jge
shll
daa
cmp
xchg
push
xor
fadds
mov
adc
jo
in
dec
insb
push
psubsb
mov
inc
and
pop
xchg
fcmovnbe
xchg
loope
lds
mov
iret
jo
sub
and
jmp
sub
leave
ss
pop
aaa
mov
outsb
pop
mov
rorl
xor
in
xchg
pop
lock
insl
sbb
and
in
ficoms
cmp
mov
sbb
sbbb
cmp
call
xchg
mov
jl
shl
aas
pop
or
lea
subb
shl
push
dec
inc
stc
mov
movsb
mov
into
add
aam
lods
sbb
fimull
mov
mov
add
mov
inc
out
cmp
cmp
push
roll
add
push
ficoml
cmc
ficoml
jno
inc
and
test
jbe
imul
mul
in
jmp
mov
or
pushf
pusha
or
aad
lock
fwait
out
lahf
aad
cld
push
jmp
hlt
shlb
jp
out
lret
fstps
cmpsb
call
xor
ss
mov
lea
lods
scas
mov
divb
jecxz
lret
test
pushf
sbb
roll
xor
xchg
push
std
lds
cmc
outsb
sub
jnp
cs
xor
cmc
pop
jecxz
repnz
mov
push
popf
jg
pop
jge
pop
sub
inc
mov
jl
jae
or
imul
sbb
push
inc
pop
and
hlt
mov
ret
mov
mov
jp
push
cmp
fdivr
sub
cmp
shl
sbb
mov
mov
jl
sahf
fdiv
mov
pop
jg
scas
adc
dec
fucom
jl
ja
movsl
dec
sub
adc
xor
sbb
pop
jle
rcll
inc
hlt
or
sbb
sbb
inc
xor
xor
pop
cld
call
leave
in
xchg
and
and
fwait
jecxz
push
in
icebp
movsl
loop
xor
adc
dec
add
or
sub
gs
ret
flds
jbe
andb
pop
xor
inc
jle
cmp
mov
pop
sub
mov
mov
dec
insl
jnp
xchg
cli
into
mov
fidivrl
popf
mov
scas
out
mov
push
sbb
in
mov
mov
faddp
mov
lea
std
cltd
cwtl
jae
mov
addb
rep
mov
lods
cltd
add
mov
fwait
aad
loope
aaa
xor
lahf
or
sahf
cmp
ds
sub
repz
inc
lea
or
subb
enter
or
in
add
test
push
xrelease
or
popa
jne
and
outsl
in
mov
cmpsl
lret
xchg
mov
add
idivl
pop
pop
mov
dec
popf
arpl
and
out
mov
sbb
stos
cmpsl
popf
shrl
faddl
out
rol
xor
test
fnstenv
frstor
and
pop
test
mov
mull
adc
sub
jecxz
mov
jmp
out
fldenv
into
daa
movsl
clc
bound
enter
sub
adc
rorl
dec
sbb
cmp
jg
xor
jns
sbb
mov
dec
popa
mov
sbb
inc
imul
fs
mov
lds
mov
lss
or
jg
das
shrb
mov
xchg
add
js
adc
ja
repnz
jbe
mov
out
adc
adcl
xchg
dec
call
insb
xchg
and
lret
or
mov
test
push
in
push
and
jmp
lcall
cwtl
int3
cwtl
ds
data16
and
mov
push
aas
xchg
cltd
inc
ret
fnstsw
imul
lcall
mov
mov
in
lds
lods
sti
ljmp
arpl
sub
pop
int3
stos
pusha
xor
cmpb
les
mov
sbb
fadds
in
sbb
and
push
jne
pop
jns
push
test
sub
ja
arpl
icebp
es
cs
add
pusha
or
and
shll
popf
xlat
pop
adc
or
and
mov
push
loopne
or
jge
lea
cmp
aad
cltd
pop
ja
sahf
cmp
push
scas
and
push
sub
outsl
loop
in
fsubs
leave
aas
adc
in
jge
or
mov
mov
ds
imul
mov
loopne
stos
mov
out
fcoms
mov
sti
cmc
mov
popl
pop
pop
jmp
or
aaa
add
aas
inc
push
xchg
ret
cltd
xor
movups
add
lret
mov
mov
fmul
je
mull
dec
pop
or
mov
shll
mov
enter
xor
dec
jae
inc
das
dec
loope
mov
sub
mul
or
inc
lret
stc
sub
ret
stos
push
divb
adc
int
aam
std
jnp
mov
push
jne
pop
hlt
stos
push
mov
sbb
xchg
int3
out
pmullw
mov
push
xlat
jp
xor
enter
orb
or
xchg
pop
imul
test
pop
shll
int
and
rolb
jno
dec
stos
push
xor
in
into
sub
mov
mov
and
push
jb
cli
outsb
push
mov
rorl
adc
jle
addb
fisubrs
or
daa
jns
jns
pop
jne
movsb
sbb
lret
ret
je
dec
out
mov
inc
adc
adc
aam
lcall
dec
add
mov
roll
sar
cli
gs
add
and
jb
mov
rcrl
sub
jne
sub
jmp
mov
insl
or
inc
mov
dec
mov
mul
add
adc
fisttpll
insl
mov
pusha
lds
push
adcl
sbb
rorb
ret
sbb
mov
xchg
jmp
out
xor
cli
and
stos
inc
filds
mov
lret
rcll
dec
or
jecxz
xor
inc
jno
jecxz
xchg
adc
or
mov
jns
addr16
jg
les
test
xchg
shl
je
push
jmp
dec
popf
mov
cmp
pop
jmp
inc
xor
mov
sub
mov
test
les
in
into
mov
add
inc
loopne
cmpsb
pop
insb
pop
fstpl
fs
data16
icebp
cmp
mov
push
insb
in
idivb
push
adc
add
add
mov
pop
push
inc
pop
pop
lret
mov
scas
pop
and
loopne
scas
adc
ja
enter
popf
adc
pusha
inc
jmp
loope
aam
in
sub
lcall
adc
mov
push
ljmp
and
jge
add
add
sub
ror
mov
mov
jns
xor
push
int3
sbb
je
xor
or
in
cs
sbbl
jle
mov
cwtl
mov
push
loopne
xchg
push
mov
mov
out
and
insl
nop
and
jae
mov
pop
cmpsb
or
and
lds
mov
cmpsb
inc
sar
stc
pop
divl
jne
hlt
aam
adc
sbb
mov
jecxz
test
cmp
lahf
dec
push
scas
dec
sub
adc
xchg
xor
stos
iret
movsb
jbe
call
flds
pop
inc
mov
and
sarb
std
xchg
xor
int3
push
lcall
adc
jb
dec
xchg
push
mov
inc
mov
sar
call
stos
movsb
and
sbb
aad
loope
jne
mov
pop
mov
cs
push
in
pop
cs
xchg
xchg
and
mov
sub
enter
ret
xlat
int
mov
push
xor
mov
ss
sbb
lcall
xchg
lock
sub
iret
int
movsb
repz
je
sarl
and
data16
int3
xor
sahf
jbe
sti
mov
add
decb
mov
cmp
out
pop
pushf
aas
call
insb
sub
aas
cli
jo
lods
add
rorb
mov
lret
ficomps
push
jecxz
push
pop
pushf
outsb
es
pop
pop
or
in
push
mov
sbb
scas
mov
out
mov
fistl
cld
das
mov
mov
pusha
cmpsb
imul
fiaddl
or
inc
mov
daa
call
push
xchg
mov
xchg
xor
gs
xor
shll
pusha
dec
mov
arpl
jle
iret
mov
xchg
ret
adc
xlat
ja
nop
add
xchg
adc
push
cmp
pop
rol
pop
out
cwtl
pop
addb
xor
xor
test
lret
ljmp
loop
mov
sub
push
test
bound
ss
and
push
and
dec
dec
js
sub
dec
movsb
pop
mov
lret
inc
lret
gs
shrb
cmp
ret
dec
sub
rorl
fistl
out
push
mov
add
xlat
xchg
clc
lock
push
cmp
dec
sbbb
ret
fxtract
lds
mov
mov
push
and
cmp
out
repz
xchg
push
push
ficoml
andb
xlat
mov
fmull
imulb
cwtl
aas
nop
or
mov
mov
mov
mov
into
leave
in
shlb
dec
addr16
cmp
sbb
xchg
out
rclb
pop
mov
xchg
cmp
push
movsb
mov
inc
insl
dec
stos
cmp
mov
xchg
cmp
notl
lcall
pushf
jae
test
nop
loop
imul
sbb
loope
daa
mov
mov
clc
mov
push
and
in
stos
mov
out
dec
shlb
adc
mov
dec
sbb
pop
in
jle
jge
jge
xor
push
pop
outsl
cli
cli
mov
rolb
cmp
lahf
mov
mov
lret
jmp
cmpsb
dec
xlat
stos
dec
das
rorb
and
inc
mov
dec
mov
or
shlb
and
push
loope
xchg
fcmovb
in
mov
into
add
mov
jmp
and
aas
insl
mov
pop
mov
iret
cmp
lods
nop
fs
aam
mov
inc
fmuls
cli
insl
mov
outsl
mov
ds
cmc
jnp
jp
cwtl
ffree
enter
out
jmp
jp
push
iret
fs
sub
mov
jp
insl
int3
test
fdivrl
or
out
ret
lea
popf
inc
inc
cld
aam
mov
xor
popf
push
push
sbb
push
pop
pop
jns
in
shll
leave
inc
cs
stc
add
repnz
cwtl
pop
popf
mov
stos
pop
enter
inc
pop
inc
fbstp
jae
add
pop
mov
repnz
loopne
push
xor
pop
popa
in
les
ror
ljmp
into
out
pop
mov
loope
aad
xor
xor
lods
aaa
or
in
ljmp
xchg
lret
pop
xchg
fidivrs
push
jne
sub
shl
sub
sahf
sub
cmp
mov
sbb
dec
mov
nop
cld
adcb
adc
inc
lret
shrb
popa
jo
mov
add
add
jmp
test
fstl
and
mov
inc
add
lahf
cltd
fcomps
leave
unpckhps
lret
lods
mov
push
xchg
int3
xor
jno
fwait
insl
pop
lret
pop
adc
add
out
cmp
pusha
mov
or
cmp
scas
loop
lahf
test
or
subl
pop
and
scas
leave
outsl
jg
loope
inc
and
ljmp
pop
lcall
push
push
les
roll
outsb
push
inc
xchg
push
push
pop
add
jg
mov
js
lock
pushf
dec
lods
cli
lds
flds
loop
xlat
movsl
jno
mov
js
clc
sbbl
lea
push
dec
insb
je
inc
fldl
hlt
icebp
xor
fisubl
pop
xorb
dec
repz
xchg
adc
jl
and
sub
lock
adc
cltd
mov
rcrl
jbe
mov
test
call
xchg
add
dec
enter
xchg
push
jecxz
fsub
dec
repnz
mov
and
dec
sub
in
sbb
pop
adcl
jge
lods
aad
rcll
test
sub
push
pop
sbb
xchg
and
xchg
push
cmp
add
daa
gs
pop
and
sub
leave
sub
out
or
cmc
loop
push
repnz
repz
and
lea
push
xor
aaa
loop
xorl
jmp
xlat
jbe
call
ds
inc
lea
iret
xchg
jno
mov
lea
sbb
cs
lret
inc
cmp
xor
scas
push
pop
xor
outsb
mov
adc
setge
inc
dec
repnz
addr16
push
pop
repnz
cli
aad
mov
nop
cmp
adc
outsb
xchg
mov
cmp
idiv
test
pushf
sub
jo
stc
fwait
and
mov
cmpsb
jb
ds
pushf
mov
lea
fwait
pop
push
fidivrs
pop
dec
ret
orb
jg
or
inc
call
add
xor
add
cwtl
cmpsl
push
or
cmpsl
jns
fsts
and
jmp
mov
xchg
sub
repz
or
aas
lods
mov
mov
jl
and
xchg
xor
pop
lcall
iret
ret
jbe
dec
hlt
adc
ds
push
lods
mov
mov
xorl
mov
jmp
or
cmp
cwtl
pop
cwtl
ficompl
ret
lods
or
jnp
imul
fbstp
in
adc
lret
sbb
loope
or
jl
adc
pop
cmp
mov
xchg
inc
stos
xor
push
push
mov
addr16
sahf
incb
mov
test
in
mov
lret
push
in
test
add
movsl
lea
push
fcmovu
mov
lds
je
out
mov
pusha
movsl
test
jmp
cmp
or
gs
dec
xor
lods
jo
call
jns
mov
mov
jle
pop
lods
mov
mov
das
inc
jbe
inc
xchg
xchg
cld
xor
dec
push
xchg
repnz
mov
sbb
sti
inc
cmp
and
jo
clc
sarl
jmp
sub
push
and
cmc
add
and
sahf
xchg
mov
inc
cltd
mov
movsl
out
sub
mov
out
xchg
or
push
push
insb
xor
cmpxchg8b
enter
cmp
push
cmpsl
push
shlb
pop
mov
in
and
decb
or
sub
dec
call
cltd
out
ret
xchg
out
ljmp
mov
out
cmp
dec
imul
xchg
add
fcoml
into
test
or
push
icebp
mov
dec
lods
xchg
jns
dec
ret
pop
gs
inc
push
mov
repz
xchg
xchg
cmp
rolb
dec
outsl
add
pop
movsl
push
stos
addr16
jle
int3
out
cmc
add
mov
and
mov
xchg
in
iret
sahf
mov
in
xor
mov
push
sbb
xor
test
stc
in
fwait
adc
imulb
mov
or
aam
add
sti
jge
or
test
popf
mov
mov
push
pop
ds
mov
or
rcll
dec
sarl
call
sub
mov
lahf
loope
imul
pusha
cmp
aad
orb
xor
cmp
fcomps
dec
or
lock
push
mov
shr
lcall
mov
cld
jmp
sbb
nop
sub
and
lods
dec
pop
sbb
xchg
fwait
push
add
adc
add
adc
movsl
shll
mov
mov
pop
scas
jecxz
xchg
lret
pop
mov
lock
andb
scas
mov
frstor
or
dec
fadds
mov
int
aas
sbbl
or
xchg
jl,pn
mov
out
mov
xor
daa
add
ret
inc
jbe
jne
sub
xchg
gs
push
enter
or
xor
mov
faddl
jmp
insl
les
jno
jle
pop
or
sub
fwait
mov
mov
lds
insl
inc
xor
into
nop
cltd
cwtl
lcall
inc
insb
pop
mov
mov
hlt
out
cmp
dec
or
stos
mov
pop
jne
cltd
adc
scas
test
gs
push
adc
ds
rcll
repnz
pop
lret
mov
jae
lea
popa
jnp
jmp
xchg
dec
xor
pop
mov
scas
xchg
pop
adc
gs
loop
std
pop
dec
xchg
mov
sbb
sahf
pop
jmp
jmp
repz
icebp
or
test
push
push
or
jnp
lods
shrb
out
fstpl
arpl
pop
push
cwtl
mov
jae
xchg
push
sub
cmp
or
cwtl
jno
repz
shll
jns
shl
hlt
dec
add
lret
push
xor
dec
adc
lea
mov
mov
dec
xor
mov
cmp
dec
popa
mov
jmp
outsb
enter
adc
mull
lods
pop
loope
xchg
xor
lds
sti
mov
xchg
jbe
les
shl
cmp
icebp
push
mov
cmpsb
fisubrs
jb
pop
sub
les
sti
icebp
cwtl
cmp
sbb
stos
cmp
mov
xchg
mov
add
push
xor
movsl
dec
lret
and
sub
cmp
push
sbbl
std
mov
jno
mov
movsl
mov
lcall
lret
inc
add
in
es
pop
jg
aam
enter
imul
cmp
mov
xchg
adc
stos
mov
dec
fmull
pop
iret
ljmp
add
rol
sti
in
mov
jle
push
call
ret
dec
std
jmp
das
mov
aaa
aad
popa
mov
subb
cmpsl
shlb
sub
inc
push
xchg
adc
inc
inc
lock
push
push
mov
dec
lods
mov
mov
inc
enter
inc
mov
fdivl
loopne
cmpsb
lods
sub
es
sbb
mov
std
mov
mov
pushf
movsb
js
mov
push
dec
push
mov
jmp
adc
mov
movsl
cmp
enter
fdivl
xchg
sahf
lods
loope
push
out
bound
xchg
lock
add
setge
loope
aad
cld
aad
xlat
in
pop
enter
xchg
jnp
jae
or
push
lods
and
cs
fdivs
lahf
loop
mov
test
push
mov
sbb
es
shrl
into
add
xchg
mov
pusha
mov
xlat
mov
pop
sarl
fwait
adc
jmp
pushf
xor
push
dec
mov
divl
or
sub
and
add
aad
sbb
xor
sbb
push
cld
adcb
push
xchg
lds
xlat
pop
or
cmp
jmp
shrl
sub
and
sbb
push
fmulp
icebp
dec
sbb
bound
inc
movsl
movsl
cmp
testl
or
invd
xchg
in
pop
push
enter
or
insl
jae
loope
in
adc
or
inc
daa
or
inc
xlat
lods
xor
xor
dec
push
ljmp
xor
push
out
cmp
test
sbb
mov
lret
fdivp
aaa
mov
mov
jbe
jne
and
das
jge
cmpsl
add
test
xchg
adc
fs
add
rcll
insl
cmp
push
inc
inc
mov
mov
pop
jbe
dec
imul
movsb
je
lock
lock
push
in
push
cltd
imul
jecxz
idiv
xchg
pop
lods
aas
shrb
and
add
nop
xchg
mov
pop
mov
and
imul
inc
dec
and
sub
mov
mov
shlb
fmuls
or
pusha
sbb
lock
cmp
lret
pop
inc
rcll
mov
sti
xchg
sbb
cld
bound
mov
sbb
or
in
lcall
jnp
cmp
mov
mov
mov
dec
es
ds
and
enter
mov
fmul
mov
cmp
test
rcll
push
stos
mov
mov
std
test
xor
ja
mov
aaa
xor
adc
push
sti
dec
push
inc
and
cmpb
mov
test
cmp
mov
es
fisubrl
in
inc
sbb
mov
scas
jp
xor
and
rorb
test
sarl
mov
into
pop
mov
xchg
pop
rolb
adcl
lahf
mov
push
sbb
shr
ficoml
scas
fistpl
bnd
and
push
cs
jmp
sbb
mov
rcll
inc
adc
sub
inc
out
mov
xchg
ret
push
lcall
cmp
icebp
mov
enter
xorl
sarl
adc
mov
sbb
sbb
push
cmp
repz
mov
fidivs
lea
cmp
xchg
fs
jle
push
jbe
mov
test
test
sbb
pop
mov
and
sub
imul
jge
lods
in
pop
les
je
fstpt
pop
mov
adc
inc
push
ljmp
jp
rolb
jmp
cmp
ficoms
fcomip
sub
cmpsb
div
cmc
mov
lahf
cmp
xor
lahf
loope
xor
in
sbb
cmp
mov
lret
adc
pop
and
lock
mov
mov
addr16
imul
adc
scas
mov
loopne
mov
push
popa
pop
mov
ja
jge
leave
movsb
fimuls
push
add
cs
push
mov
das
dec
int3
je
inc
imul
insb
lock
add
or
or
mov
xchg
mov
cmpsb
push
cmp
inc
jecxz
add
je
xchg
inc
mov
roll
push
push
pop
lahf
mov
mov
repz
xchg
test
adc
aaa
int
fwait
and
dec
ljmp
imul
leave
mov
scas
jno
add
add
jnp
xor
mov
arpl
popf
mov
test
in
jnp
mov
sub
or
jno
ret
dec
pusha
rcl
add
rol
mov
and
cmp
fmuls
add
loope
cmc
nop
testb
xchg
negl
xchg
fcomps
ret
jae
push
xchg
and
inc
cmpsb
jl
xor
inc
and
inc
mov
movsl
gs
and
cli
pop
std
dec
cmp
cld
iret
jo
pop
lahf
and
xchg
add
jne
sbb
sub
loope
jns
xchg
sarb
jp
adc
js
and
jb
shl
mov
lock
lret
insl
dec
xor
add
in
push
dec
inc
popf
adc
outsb
mov
insb
inc
dec
adc
jns
movl
mov
jo
xchg
jbe
leave
jae
setbe
and
pop
je
sub
dec
popa
daa
jae
shlb
rcl
xchg
shl
fldt
repz
mov
jbe
sbb
inc
mov
outsl
cwtl
jne
mov
mull
out
inc
jne
xchg
or
fstpt
cld
and
addb
bound
aam
add
shll
inc
or
mov
xor
pop
loope
enter
sub
fs
sahf
xor
ret
mov
inc
ljmp
push
xchg
xor
in
js
std
xor
sbb
mov
imul
shl
inc
jbe
js
pop
ret
out
aam
push
xlat
mov
ret
aam
jmp
jbe
jo
xchg
sub
lahf
fldenv
sbb
lock
cmp
cmpsb
push
adc
and
outsl
nop
mov
sbb
icebp
cli
jns
arpl
sub
inc
adc
sub
xchg
inc
cmp
mov
jne
out
mov
xlat
add
cmp
int3
arpl
enter
pop
arpl
test
jno
daa
xlat
imul
xor
mov
test
jnp
mov
ret
mov
xor
loopne
jg
addr16
cmp
sarb
les
pushf
dec
sbb
es
or
push
loope
test
sub
std
mov
mov
adc
and
orl
cmp
jnp
dec
sub
add
repnz
mov
cmc
and
cmpl
inc
push
rcrb
orb
jmp
ljmp
mov
ljmp
adc
jge
mov
xchg
xchg
addw
dec
mov
mov
cmp
and
cltd
cmpsb
data16
out
iret
or
daa
xor
or
cmp
push
mov
cmp
gs
and
sbb
in
xor
and
jl
daa
lret
and
nop
dec
bnd
stos
and
push
push
inc
mov
pop
outsb
popa
mov
add
roll
inc
jns
loopne
and
in
enter
cmp
cmp
jo
inc
mov
mov
in
sti
cmp
leave
stc
add
cmc
push
outsb
sti
outsl
stc
dec
fwait
push
neg
int3
lahf
jl
dec
negl
sbb
xchg
xchg
fwait
jle
sbb
and
lods
jb
mov
inc
aam
into
call
cmp
mov
cmp
fstpt
push
mov
mov
sbb
fcoms
divl
out
xor
inc
xchg
fs
push
test
stos
test
mov
sub
ds
icebp
adc
jnp
inc
stos
sub
lods
shlb
and
xor
pop
add
aaa
mov
pop
push
xchg
inc
pop
ds
cltd
jge
loop
imul
push
xchg
sbb
ret
inc
mov
or
lcall
inc
sub
repnz
pushf
mov
inc
jecxz
inc
inc
aas
add
sub
mov
cwtl
fisubs
xor
xor
push
mov
inc
call
dec
rol
enter
xor
fimull
cmp
mov
mov
dec
xlat
lcall
test
and
push
push
lret
push
push
xor
adc
xchg
push
xchg
mov
push
mov
orl
jne
outsb
mov
enter
xchg
dec
imul
popa
cs
mov
dec
jnp
xor
sub
dec
and
or
daa
loopne
inc
or
ljmp
push
repz
mov
adc
inc
jecxz
add
xor
scas
and
xor
sbb
sysexit
fcomps
push
ljmp
outsb
sahf
lret
ljmp
pop
popa
jns
sbb
arpl
lods
movsb
lea
jl
jle
lahf
push
sbb
mov
fisttpll
addl
push
lods
test
mov
push
adc
aas
mov
mov
xchg
stc
test
cwtl
rcl
shll
sbb
jl
jbe
fsts
dec
pop
push
lea
lcall
add
xor
or
test
push
mov
xor
push
mov
sahf
clc
jle
cld
dec
mov
push
mov
mov
pop
aas
pop
cli
enter
dec
push
imul
adc
ja
fnstcw
test
fcoml
aaa
test
push
mov
jmp
sbb
add
in
lds
xchg
dec
outsl
test
adc
mov
mov
and
xchg
add
mov
and
addr16
call
xchg
pop
push
stos
xchg
xlat
std
fsts
test
movsb
aam
cmp
and
inc
mov
cld
les
cli
fs
in
ret
test
push
js
mov
nop
dec
jp
mov
in
aas
loop
push
bound
pusha
fdivrl
sub
jo
xchg
push
stos
jb
mov
mov
mov
lret
jnp
sub
pop
mov
pop
xchg
lea
shl
mov
movsb
ss
hlt
leave
push
je
mov
cmc
bound
and
icebp
dec
flds
movsb
loop
jl
call
pop
lahf
cwtl
add
ret
test
jecxz
jle
mov
add
outsb
rol
pop
lcall
jns
push
inc
dec
lea
popf
mov
xchg
mov
cmp
xor
int
xchg
pop
outsb
adc
fdivr
sub
pushw
insb
fcoms
pop
and
pop
pop
jae
xor
fadd
dec
xor
leave
xchg
test
cmpsb
in
insb
fmul
pop
je
mov
test
test
roll
jp
enter
gs
adc
lea
adc
and
adc
mov
lods
ljmp
enter
jno
cmc
stos
ret
movsb
subb
cmp
pop
sti
and
lret
cld
dec
cmc
test
icebp
lods
in
cmp
in
pop
je
sti
decl
pop
dec
add
sbb
add
insb
aas
mov
sub
fldenv
jb
pop
ds
push
sub
xchg
outsl
or
inc
jae
ljmp
hlt
std
loop
adc
sub
in
dec
jg
push
cli
jne
cmp
test
repnz
push
fs
in
lret
adc
xlat
adc
xchg
or
fadd
js
or
pop
or
lret
insl
das
add
push
xchg
hlt
in
xchg
daa
mov
adcb
outsl
mov
out
jae
stc
into
pop
cmp
xchg
mov
lock
mov
cmc
xor
mov
adc
add
in
push
push
inc
jae
inc
pop
sub
dec
xor
fstp
insb
or
fpatan
jle
xor
mov
out
rorb
jno
fnstenv
dec
pop
and
clc
cmp
pop
stos
pop
ret
mov
dec
int
es
cmpsb
rcr
cwtl
decb
xchg
rcll
cld
ret
pop
scas
outsb
push
fsubr
or
push
bound
bound
cmpsl
cmp
icebp
mov
adc
nop
scas
mov
cs
jl
out
xchg
pop
imul
es
mov
xor
leave
pushl
cmp
mov
stos
mov
sti
mov
cmpsl
outsb
sbb
mov
das
or
xchg
pop
outsb
sbb
je
mov
jp
mov
or
aaa
test
xor
sub
lods
pop
aaa
cmpsl
and
stos
cltd
lret
inc
push
test
loopne
mov
xor
inc
inc
imul
pop
mov
and
adc
mov
pop
xchg
dec
push
mov
mov
jge
jp
sbb
mov
and
push
jo
shrl
xor
dec
push
insb
out
test
push
mov
sub
sub
pop
nop
sbb
cmp
push
imul
xlat
ljmp
outsl
adc
or
inc
and
imul
mov
mul
mov
adc
inc
adc
xchg
sub
dec
pop
inc
out
je
cwtl
adc
in
mov
arpl
sub
push
xor
dec
lret
jg
mov
inc
enter
inc
jmp
inc
sbb
pushf
inc
pop
out
hlt
push
insb
xchg
adc
add
inc
leave
leave
lods
popl
inc
cmp
fldcw
sub
sbb
mov
cltd
push
outsb
jl
inc
insb
mov
rcll
data16
mov
pop
cmpsl
testl
sbb
outsl
pop
add
xor
stc
nop
and
push
fs
leave
ja
adc
xchg
and
pop
push
lods
fcmovbe
or
cmp
push
js
dec
aas
das
push
les
push
mov
sub
cli
or
clc
nop
add
or
insb
cmp
in
pop
es
mov
inc
xchg
rclb
mov
bound
test
jmp
mov
rcll
add
xor
xor
dec
adc
mov
aaa
into
jno
push
or
les
adc
daa
and
insb
cmp
sbb
in
stos
scas
jne
fsubrl
push
aam
sbb
into
inc
out
repnz
mov
ja
js
push
je
and
lret
lods
push
or
mov
mov
adc
mov
jmp
fwait
stos
outsb
mov
inc
jmp
pusha
sbb
pop
push
mov
and
sub
and
das
dec
sahf
push
je
es
pop
clc
movsb
lds
lea
mov
jle
movsb
or
dec
in
das
xchg
loop
add
and
stos
in
lea
pop
add
ds
dec
jbe
and
lret
cmpsb
inc
mov
or
addl
sahf
mov
mov
popa
rorb
and
test
push
inc
dec
sahf
adc
dec
shll
xor
and
cli
mov
jecxz
leave
fbld
inc
inc
or
pop
inc
push
push
ja
dec
mov
mov
adc
dec
dec
push
xor
sbb
pop
xchg
xchg
adc
lret
loopne
icebp
les
xchg
ja
js
xor
push
xchg
xchg
pop
jg
fdivrs
ja
jge
repz
aaa
hlt
or
cmp
ljmp
push
mov
push
pop
pusha
mov
test
xchg
jno
pushf
pop
arpl
cmp
insb
inc
cmp
pusha
mov
and
add
mov
jmp
mov
mov
clc
cmp
mov
lret
dec
ds
into
jg
dec
lcall
cld
mov
mov
icebp
sti
sub
mov
leave
lds
cmp
and
jns
mov
lods
test
sub
in
es
out
lahf
or
faddl
mov
jno
mov
roll
push
rcl
dec
add
ret
sbb
mov
dec
adc
pusha
jb
mov
pop
sahf
jl
ljmp
int3
hlt
or
imul
mov
adc
mov
test
push
repnz
xchg
out
push
xor
and
jae
in
addr16
inc
push
sarl
xor
xor
outsl
clc
pop
scas
xchg
mov
mov
stos
ds
movsb
clc
mov
pop
out
pop
pop
divl
xlat
out
push
lods
testb
lret
mov
je
test
xor
sahf
jb
cmp
jnp
subl
or
repnz
or
jmp
mov
ljmp
movsl
xor
pop
cmp
mov
les
mov
loope
sahf
add
and
jo
push
into
mov
xchg
xchg
inc
testb
or
jle
mov
lds
sub
inc
add
or
ja
mov
ficomps
rclb
adc
fldenv
mov
or
leave
xor
pop
sahf
add
leave
mov
imul
adc
fldenv
or
adc
rclb
imulb
pop
dec
jle
sbb
push
pop
jne
mov
mov
jae
pushf
sbb
xor
lret
fstpl
xor
jmp
ljmp
push
xor
adcl
and
push
adc
inc
dec
ljmp
int3
cld
jne
cmp
cmpsb
xchg
push
pushf
adc
insb
fsubl
in
adc
push
push
add
pushf
int3
sub
inc
mov
mov
rcrb
xchg
test
mov
loope
add
lret
mov
or
fsubl
mov
lret
sub
xchg
adc
sbb
mov
xchg
lret
ja
push
outsl
lods
lock
in
and
das
xchg
or
add
jno
ja
jb
mov
jmp
jnp
adc
jo
imul
fcoml
call
pop
push
clc
mov
shlb
mov
ret
cmpsb
push
lret
pop
pop
pushl
or
jge
pop
inc
nop
or
pop
lods
mov
outsl
addr16
mov
jo
test
lret
andl
mov
sbb
or
xor
push
or
cmp
xchg
jae
cmp
mov
lds
jp
push
nop
sub
js
call
jp
shlb
ret
or
rcr
inc
shll
add
push
sti
push
std
inc
lods
nop
mov
mov
pop
xlat
or
push
cmp
in
in
pop
cltd
nop
xlat
mov
ja
fs
add
dec
je
pop
adc
adc
pop
cmp
push
rorb
dec
push
mov
sbb
cltd
push
cld
sbb
xchg
inc
int3
and
inc
in
mov
cli
popf
jb
gs
jno
mov
sti
mov
in
adc
pop
es
and
and
cli
push
lahf
je
mov
fcmovb
jmp
sti
stos
in
inc
pushf
dec
inc
push
aaa
jmp
dec
xchg
xchg
dec
aaa
inc
add
dec
jns
int
out
or
cld
pop
pop
aam
xchg
sahf
out
cs
jl
lock
fninit
mov
push
test
xchg
pop
data16
addl
rcl
and
test
aad
jno
ja
cmp
insb
fisubl
je
adc
add
loopne
movsb
sub
sub
repz
xchg
pop
in
adc
jbe
mov
xlat
jo
fsubrl
mov
adc
sub
outsl
xor
mov
bnd
test
inc
fsubrs
cli
and
inc
mov
test
and
xor
cmp
sti
insl
aaa
jbe
mov
jp
sbb
dec
xchg
or
mov
scas
mov
stc
or
jne
xor
push
scas
push
cs
mov
inc
mov
sbb
xchg
push
cmp
lods
in
add
mov
cmc
jle
leave
ret
cmp
in
clc
sbb
add
loop
fstpl
dec
mov
in
adc
and
xchg
ror
inc
mov
add
jp
lahf
cmp
add
jb
nop
sub
push
cmp
fiaddl
cmp
aam
inc
push
inc
jbe
add
int3
fisubrl
and
sub
dec
sti
shll
stc
pushf
scas
and
sbb
mov
xchg
sub
mov
jo
repz
pop
loop
mov
loopne
aas
push
sbb
inc
xchg
je
mov
repz
dec
mov
or
xlat
gs
sub
outsb
sbb
xchg
mov
imul
bound
sahf
cs
mov
es
and
test
jg
sub
insl
jp
pop
xchg
aas
std
jb
ret
and
push
and
push
stos
in
pop
and
aam
call
cld
add
cs
rcrb
lods
sbbl
jp
scas
insb
imul
outsl
pop
lahf
cmp
popf
adc
roll
sarb
jo
and
pop
mov
cs
inc
pop
sti
push
pop
pushf
xor
fcomps
mov
sbb
fadds
jbe
cmp
enter
fwait
pusha
sbb
je
push
cltd
xlat
call
lods
jle
not
cmpsb
xchg
xchg
or
push
adc
add
xor
and
xchg
pop
ljmp
cli
xchg
call
or
push
push
pop
inc
sub
cmpsl
adc
aaa
jecxz
xlat
push
loopne
insb
mov
push
mov
jb
or
sbb
out
dec
add
add
jo
in
addr16
stos
mov
or
test
jmp
lea
into
mov
jg
sbb
cmc
hlt
add
test
ss
dec
test
jecxz
les
or
aaa
adc
pop
add
leave
aaa
xor
das
stc
daa
jae
lahf
aaa
pop
dec
ret
cli
sbb
outsl
out
add
test
mov
hlt
xor
loop
ficoml
sbb
in
test
test
xchg
imull
out
and
dec
pushf
jbe
sub
add
fsub
mov
lods
add
je
adcb
mov
dec
lcall
stos
jb
in
addr16
inc
adc
fistpl
sbb
inc
mov
lcall
stos
mov
add
and
lcall
faddl
cwtl
cmp
jns
dec
push
cmp
les
aaa
movsl
sbb
add
cmp
cmp
inc
xor
loop
push
xlat
sbb
out
push
xchg
or
outsl
test
notl
mov
test
dec
cld
or
nop
xor
pop
faddl
loop
mov
add
repz
jae
sbb
out
aam
add
pusha
mov
pusha
lcall
pop
iret
xchg
xor
mov
stos
dec
scas
cs
mov
and
int
icebp
rclb
data16
sub
out
xchg
in
test
ss
push
mov
in
ret
int
imul
jge
push
sbb
call
cli
jo
sbb
lods
rcl
adc
lahf
addb
push
lock
jno
pop
fstpt
mov
xor
sbb
scas
mov
shl
xor
dec
push
xorb
cmc
lods
cmpsl
cmc
add
imul
stos
imul
sbb
jp
and
push
mov
pop
jmp
xchg
push
dec
sti
das
mov
lret
inc
aas
cs
lods
mov
and
sbbb
movsb
pop
inc
fdivs
loop
out
fwait
lcall
subb
arpl
je
pusha
push
out
dec
push
sbb
inc
push
out
sub
adc
mov
das
add
pop
dec
pop
push
sahf
sahf
mov
sub
aad
xchg
and
dec
mov
jb
mov
movsl
scas
pusha
xor
jle
cmp
aad
in
cmp
mov
pop
push
adc
ljmp
icebp
out
mov
push
dec
inc
pop
sahf
and
cmpsl
nop
pop
jge
pop
xchg
fildll
xor
jns
sbb
popf
cmp
les
mov
adc
es
pop
xor
jb
jmp
faddl
jno
ret
lahf
cmpsl
cmp
das
fucomip
mov
loope
loopne
out
movsb
scas
xchg
idivl
cmpsb
fcmovnb
ss
hlt
jge
adc
popf
push
mov
ds
loop
sarl
fimuls
xchg
in
or
lret
sub
rcll
cs
xchg
in
cwtl
lods
or
outsl
cmp
stos
mov
jns
test
push
and
add
pop
mov
mov
mov
rclb
fbstp
xchg
xchg
rcll
leave
popf
dec
inc
push
push
sub
lret
mov
popf
cmc
dec
inc
scas
lret
rcrl
dec
push
jmp
in
adc
lods
xchg
and
mov
addr16
out
pop
push
imul
push
mov
xchg
mov
inc
jg,pt
ss
fnsave
jl
mov
sarl
cmpsb
aad
test
pop
inc
add
out
pusha
testl
int3
lret
add
movsb
into
fnsave
fidivl
test
xchg
push
mov
fldcw
inc
ds
mov
pop
pop
pop
shlb
aad
rcrl
mov
mov
inc
mov
gs
jecxz
sbb
lret
mov
xor
pop
icebp
cmp
repnz
xchg
and
xor
add
aad
and
sarb
push
jle
xlat
fildll
cmc
stos
ds
nop
mov
pop
add
inc
shlb
adc
or
sti
xchg
fsts
mov
cmc
loopne
adc
out
ss
scas
push
dec
rcr
push
xlat
xchg
in
mov
cmp
dec
insb
mov
cmc
rolb
lcall
movsl
in
mov
sbb
stc
lahf
xorb
add
or
aad
push
pop
mov
sub
imul
jno
adc
pop
xlat
nop
add
or
xlat
add
fbstp
test
push
sbb
jp
sahf
add
inc
inc
push
xchg
push
lods
in
les
jg
js
mov
sub
push
add
mov
scas
lock
shll
xchg
mov
xor
lcall
mov
sbb
out
jne
lret
into
push
xchg
out
movsb
sbbb
cmp
xchg
into
pop
lahf
mov
jecxz
xor
testl
in
out
pop
scas
and
sub
popa
xchg
aas
pusha
jne
push
cmp
imul
or
mov
call
dec
xchg
xchg
gs
adc
adc
rcll
jp
mov
repnz
outsl
ja
es
cmpsl
xor
stc
lods
jnp
pop
lret
push
push
test
push
mov
add
inc
addb
sbb
sub
adc
push
adc
sarb
mov
sub
xor
push
pop
faddp
insb
push
xchg
inc
out
pushf
xchg
sarl
test
jno
out
lea
dec
xchg
ret
shll
add
pusha
cmp
and
sbb
and
testb
cmpsb
xor
inc
sub
nop
mov
gs
mov
lret
popa
jbe
mov
movsl
out
icebp
push
loop
sarl
jg
movsbl
std
movsl
outsl
lcall
out
sarb
jne
jnp
js
pop
xor
clc
dec
dec
push
xlat
xchg
jge
push
inc
pop
sub
repnz
rclb
shl
iret
dec
sub
in
mov
mov
adc
loopne
aam
test
add
pushf
push
aad
leave
rcrb
xor
insl
ds
popf
std
icebp
xchg
dec
repnz
pusha
iret
ds
int
insb
stc
mov
mov
jmp
mov
push
pop
fnstsw
sti
or
dec
push
repnz
cmp
mull
pusha
fcoms
js
mov
cmp
mov
in
add
jmp
shrb
outsb
into
mov
or
or
mov
pusha
decb
adc
cmp
push
lds
xchg
andl
scas
xor
outsl
pop
sbb
scas
mov
sbb
cmc
inc
cs
mov
sbb
push
int
insb
add
mov
inc
jne
subb
movsl
cmp
cmp
jmp
loopne
outsb
jg
pop
xchg
jge
xor
xor
pop
mov
out
fdivp
aam
jns
jp
xchg
pop
inc
repnz
xor
inc
popl
imul
popa
ja
and
repnz
negb
adc
jo
push
mov
ret
add
jl
fsub
js
rclb
outsb
cmp
and
mov
adc
pop
add
mov
sub
roll
rol
lret
xchg
jno
add
insb
mov
push
mov
movsl
popf
dec
sbb
sbb
test
stos
shrl
pop
out
xchg
test
imul
cld
cmpsb
int
stc
ficomps
out
test
das
jne
push
iret
mov
and
pusha
inc
push
xchg
cmp
outsl
push
test
imul
gs
aaa
ret
icebp
or
es
lds
lds
lods
jp
inc
jns
fs
stos
dec
cmpsl
cmpsl
js
icebp
xor
leave
or
mov
xlat
mov
jae
cmp
mov
xor
add
jo
push
jmp
frstor
shll
add
loopne
mov
dec
push
adc
pop
xchg
icebp
leave
mov
adc
mov
movsb
popf
sub
and
popa
f2xm1
add
adc
add
pop
dec
daa
call
cltd
fsubr
lods
pusha
push
out
push
ret
mov
mov
xchg
std
pushf
fildl
add
jl
scas
sub
stos
mov
repz
loope
aas
std
mov
fldenv
push
arpl
mov
popa
jnp
pop
pushf
cmp
outsb
mov
insl
dec
dec
pop
hlt
mov
mov
mov
adc
das
rcr
pop
cmp
push
pop
inc
inc
xchg
aam
dec
mov
push
fistps
cmpl
icebp
mov
pop
inc
loope
rcrb
mov
insb
xor
enter
imul
jbe
mov
sub
lea
aad
cwtl
sbb
pusha
or
jmp
add
mov
jnp
adc
xor
jae
jg
or
sbb
adc
test
jae
adc
ret
jecxz
fbstp
sub
das
mov
push
mov
aas
fiaddl
fdiv
repnz
cwtl
jo
mov
xchg
shll
cs
daa
push
adc
lahf
or
sub
shl
aad
cmc
or
inc
popf
das
sub
lcall
fisubl
push
add
je
mov
or
lea
jge
xorb
outsl
pop
add
sub
pop
pusha
push
stos
dec
push
cmp
adc
lea
lods
xchg
push
pop
popf
mov
mov
mov
test
inc
sti
or
jbe
inc
and
or
and
orb
dec
sbb
js
ffree
hlt
lods
push
stc
sub
or
cmp
pop
shll
call
xor
scas
dec
icebp
jno
push
xor
sbbl
push
int3
shrl
xchg
push
mov
xor
inc
add
mov
clc
or
outsl
bound
je
or
or
daa
cmpb
int3
xor
loopne
or
mov
nop
xchg
pop
inc
adc
pop
mov
out
or
dec
mov
ret
mov
or
sti
jb
mov
test
rol
xor
rcll
pop
xor
xchg
and
outsl
loopne
jno
stos
sub
mov
add
or
add
mov
mov
pop
sub
and
ret
xchg
add
jno
pop
es
shll
lods
ret
out
jbe
sub
pop
loope
jge
lret
and
insb
jl
cmp
cmc
dec
add
mov
xor
je
jle
test
sbb
push
pop
cwtl
into
xlat
inc
sbb
loop
pusha
xor
lock
sbb
cmp
mov
jp
add
adc
push
or
cmp
add
rcll
lret
in
push
dec
jecxz
rcll
mov
xchg
cmp
adc
mov
mov
mov
inc
mov
test
aam
hlt
inc
xchg
add
lret
movsl
jp
sub
mov
scas
cmpsl
lock
and
lcall
fldt
sarb
cmp
mov
cmpsb
femms
cmp
push
fprem
sbb
cmp
cmp
mov
push
int
stc
andb
sbb
cld
outsb
cmp
cli
jno
cmp
jl
add
add
push
lea
or
inc
test
mov
repz
sbb
bound
roll
adc
sbb
sbb
sbb
cmp
ret
adc
jno
jmp
mov
call
fwait
mov
pop
and
aaa
mov
pop
or
push
dec
cmp
dec
out
sub
and
jne
pop
ja
jns
inc
lea
pop
repz
stos
cli
mov
sti
subb
jae
jnp
outsb
mov
arpl
insl
test
rcr
gs
mov
xorl
push
shll
fnstsw
lock
daa
addr16
and
cmp
xchg
cmc
lea
loop
test
mov
lahf
jl
adc
testb
add
pop
pop
mov
push
popa
mov
loope
daa
scas
add
inc
push
jns
shrb
fiadds
ret
loopne
fsub
xor
mov
test
mov
aad
outsl
cmp
aaa
inc
loopne
mov
ljmp
movsb
ret
test
or
mov
and
pop
stos
pushf
in
scas
stos
inc
outsl
add
outsb
xor
aaa
loop
push
ds
adc
fistpll
add
movsb
adc
pop
mov
xlat
xor
call
xor
lret
dec
mov
movsb
inc
cmp
clc
push
and
pop
adc
jmp
sahf
mov
in
mov
iret
outsb
mov
mov
repz
jbe
or
filds
or
sbb
push
sbb
or
pop
fisubrl
leave
dec
mov
cmp
xchg
leave
xlat
pop
aaa
mov
mov
mov
ret
pop
jnp
mov
jmp
xor
and
pop
scas
and
mov
movsb
mov
pop
fdiv
pop
into
hlt
leave
cmp
pop
sbb
inc
enter
lcall
out
push
cmp
xchg
jo
sub
fdiv
dec
lcall
es
daa
mov
xchg
push
or
popf
or
mov
mov
xchg
xor
loope
jmp
jae
cmpb
stos
mov
cmp
mov
cmp
pop
xor
aad
xor
cmpsl
pop
cs
es
mov
cmp
icebp
enter
mov
andb
dec
ret
push
cmp
lahf
adc
mov
dec
fucomp
lcall
dec
inc
or
sbb
out
out
xchg
cmpl
imul
add
aas
sub
cwtl
mov
mov
sbb
enter
fst
mov
je
adc
das
cmc
imul
adc
mov
pop
push
aam
pop
das
movsl
pop
cmp
and
jle
push
in
cmp
into
stc
adc
mov
pop
lahf
push
pop
loope
jp
inc
mov
and
mov
xorb
pop
add
loope
shrl
lock
cltd
rolb
push
lret
pop
iret
setle
mov
and
mov
sub
jnp
xchg
enter
push
test
imulb
mov
xor
xor
xor
jl
pop
cmp
scas
mov
imul
xor
or
in
jo
and
push
or
lret
cltd
add
dec
inc
outsb
sub
loop
stos
pop
jl
addr16
xchg
sbb
mulb
repz
shll
rol
jmp
jns
arpl
stos
push
mov
in
inc
pushf
stos
xchg
movsb
test
inc
add
add
add
divl
add
adc
aas
cmp
out
mov
scas
jle
mov
xchg
iret
xchg
lret
ret
xchg
cwtl
sti
pushw
int
cli
add
fimull
int
xchg
jecxz
xlat
call
jg
push
jge
mov
popf
dec
ljmp
xchg
mov
mov
jb
mov
lods
dec
push
xchg
and
and
mov
insb
int3
jp
outsl
mov
xor
icebp
js
sbb
add
xor
jno
jmp
lea
inc
and
pop
dec
add
xchg
fstps
sahf
mov
dec
and
adc
adc
xchg
jmp
sahf
and
das
out
incl
mov
es
adcb
jne
sahf
adc
add
xlat
and
mov
and
or
dec
cmpsb
popf
push
cwtl
jmp
inc
popf
push
mov
ja
add
addr16
xchg
push
jo
mov
sub
lret
ss
test
pop
sbb
jg
arpl
mov
lods
xchg
insb
aad
or
lahf
adc
pop
or
xor
cmp
xchg
jle
hlt
fldt
aad
lret
popa
das
mov
add
inc
push
sbb
and
mov
aam
lods
sub
xlat
outsb
jae
arpl
dec
aas
or
push
popf
and
out
jge
cmp
pop
lret
popa
jno
cmpsl
addr16
out
or
cmp
ss
push
and
jle
fldenv
and
add
clc
mull
inc
jmp
lods
and
incb
mov
dec
out
jo
ja
and
jnp
stos
mov
insl
pop
ljmp
jmp
aam
in
stos
pop
fadds
stc
mov
ret
mov
pop
push
aad
or
jmp
sub
imul
xchg
pop
jecxz
aad
test
rcl
ret
fs
ja
test
or
push
cmpl
mov
ret
loop
xchg
mov
iret
nop
pop
test
leave
jle
test
test
js
cmpsb
sti
in
in
ds
sbb
ret
adc
push
loop
packsswb
fdivr
call
faddl
or
cs
je
cmpsl
cmp
test
jae
pop
xchg
pop
hlt
xchg
int3
int
add
fstl
and
insb
xlat
jb
xchg
idivb
imul
ret
pop
inc
jp
sbb
jne
repz
loopne
adc
inc
xor
fldt
hlt
out
repz
stos
push
idiv
sub
add
pop
stc
subb
fstpt
xchg
and
dec
int3
adc
test
jb
into
adc
arpl
or
or
jg
inc
and
mov
ja
xor
mov
push
fisubl
sti
or
xor
insl
bound
fcompl
pop
pop
ja
out
jp
pop
fwait
cmpsl
lahf
push
ret
js
ret
lret
lods
sub
stos
xchg
inc
sub
pushf
jae
xor
popf
shll
mov
ret
jle
shll
xchg
dec
push
mov
shrb
or
xor
sbb
xor
scas
adc
inc
addr16
pop
jns
cmc
mov
aad
popl
xchg
add
jl
xchg
jae
nop
xor
and
cltd
lret
out
popf
int3
pop
nop
inc
xor
xlat
inc
and
movb
mov
mov
jmp
pop
sub
pop
and
pop
and
pop
or
fcmovb
movsb
xor
adc
mov
in
xchg
aaa
push
jnp
fnstcw
stos
daa
out
xchg
in
das
lret
enter
inc
xchg
pop
sbb
lea
mov
pop
sbb
dec
add
js
pop
insl
stos
cmp
test
jmp
enter
or
rcrb
dec
add
nop
fdivrl
mov
dec
mov
push
mov
aam
push
fistps
cmc
push
pop
shl
mov
dec
js
add
aaa
mov
inc
sbb
loope
mov
push
push
mov
stos
pop
cli
and
jb
sbb
xor
adc
cltd
sbb
aas
icebp
mov
add
fcoml
lcall
push
pusha
loopne
out
fldl
adc
mov
jg
aad
cli
adc
gs
and
js
jge
pop
and
sbb
mov
mov
inc
pop
or
mov
loopne
sub
pop
adc
jge
mov
push
push
jb
in
push
cmp
shlb
mov
imul
add
jo
js
lcall
jecxz
js
lock
out
movsb
inc
jne
and
je
ja
das
fwait
nop
mov
popf
scas
cmpsb
insl
dec
dec
xchg
mov
push
fisubrs
lret
movsb
add
add
push
std
add
xchg
loopw
mov
psubsb
inc
flds
mov
and
adc
mov
out
jmp
stos
js
arpl
shrl
test
insb
stos
mov
cmp
dec
lahf
test
pavgb
sarb
jo,pt
dec
test
rolb
and
loop
outsl
test
fbld
mov
inc
aam
sub
ja
add
outsl
mov
inc
popl
bound
and
cmp
jo
lea
test
sub
ds
icebp
out
fdivrl
das
jno
xchg
in
push
out
std
push
sti
push
or
nop
out
dec
inc
je
imul
jae,pn
lcall
shrl
outsl
pop
inc
jae
cmp
clc
pop
push
iret
arpl
add
cmp
mov
dec
mov
aaa
sub
lds
push
cmp
mov
push
andl
inc
sbb
js
rcr
test
mov
and
daa
add
mov
stc
push
add
mov
movb
and
cmp
fiadds
xchg
dec
xlat
jno
popa
sbb
mov
les
pop
mov
sub
jle
xor
mov
and
xor
add
les
aam
or
pushf
lahf
imul
adc
xchg
add
jle
test
rolb
and
xor
fadd
and
and
divb
mov
and
jp
jle
sub
popa
pop
test
adc
add
in
jne
pop
adc
sub
xor
stos
cmp
movsb
sub
shrb
ret
data16
add
call
push
pop
in
icebp
in
fs
out
xchg
mov
mov
mov
ljmp
inc
mov
imull
dec
mov
fwait
push
jns
sbbb
das
rcrl
xorb
push
mov
mov
and
xchg
mov
and
xchg
ljmp
outsl
add
cmpsb
mov
push
push
xor
lds
mov
adc
mov
ds
sbb
ret
add
push
pop
ss
aam
adcb
or
pusha
mov
iret
ss
out
insb
stos
or
lret
xor
addr16
loop
pop
rcrb
pop
ret
shl
mov
pop
sbb
psllw
pop
sbb
bound
test
mov
sub
jp
jg
loope
push
jns
punpcklwd
gs
scas
nop
and
jmp
mov
dec
jo
inc
pop
in
xor
lret
pop
xor
les
arpl
mov
cmp
push
es
fsts
addl
cmp
add
imul
or
xor
add
jge
xchg
mov
sub
fnstenv
mov
insl
js
leave
in
int
sub
insl
fidivs
pushf
repnz
test
push
and
mov
sub
jns
pop
loope
les
stos
sub
sahf
or
mov
js
and
orb
push
xchg
jo
popa
push
and
mov
nop
fsubl
jge
jle
push
les
fwait
out
aaa
xor
and
inc
imul
mov
fidivrl
jle
cmp
pop
mov
ja
pop
mov
sbb
mov
mov
ficomps
sbb
add
inc
mov
push
outsb
xor
aas
outsl
xchg
scas
stos
cltd
shrl
push
test
or
cmp
inc
cmp
and
ficompl
sbb
div
loope
ja
pop
xchg
cmp
mov
enter
vmovd
jl
rcll
cmpsl
mov
hlt
push
scas
jns
add
das
cwtl
push
mov
cmp
out
adc
mov
fdivp
pop
or
insb
stos
mov
cmp
dec
jae
adc
pop
fs
adc
dec
rorl
iret
sbb
inc
js
stc
xor
sti
push
inc
pop
fwait
leave
imul
mov
sbb
mov
fbstp
iret
in
or
movsb
clc
or
notb
rcr
in
mov
cmpl
cmp
aad
jl
stc
cld
jae
adc
or
pop
jmp
or
movb
jecxz
adc
dec
movsb
cltd
mov
mov
or
movl
sub
lods
decb
les
fs
outsl
lock
jns
ja
dec
idivl
mov
sbb
ret
outsb
rcpps
xor
or
movsb
dec
sarl
imul
xchg
test
notl
pop
test
pop
sar
xchg
out
inc
es
pop
inc
enter
lock
mov
aaa
cmp
add
stc
stc
inc
gs
insb
repz
jecxz
hlt
mov
lahf
lea
pop
mov
dec
ds
pop
and
stc
inc
mov
inc
add
mov
out
lret
and
mov
ds
adc
es
ret
bound
int
xor
sbb
gs
lret
jge
jns
push
push
pop
lret
rclb
fistps
mov
dec
cs
mov
xchg
adc
mov
adc
dec
and
insl
push
bound
adc
dec
movsb
jb
fs
inc
lock
arpl
fmuls
int
fcoml
scas
sub
jae
pusha
movsb
mov
cwtl
rorl
mov
dec
pusha
ljmp
mov
inc
shl
jecxz
sbb
lahf
xorl
movsb
or
push
in
mov
jge
insl
adc
and
les
imul
sbb
icebp
fbld
mov
xor
xchg
cli
loopne
cmp
pop
add
shll
aas
xor
mov
js
mov
push
push
mov
jp
adc
test
add
xchg
rolb
mov
adc
int
testl
sahf
push
jne
lock
add
ljmp
cmp
dec
dec
outsb
adc
repnz
std
aam
aaa
in
jne
ret
outsl
jle
inc
or
mulb
addr16
packsswb
cs
out
mov
call
fs
xor
fst
lcall
xor
sbb
push
fistl
jle
push
imul
outsl
mov
and
or
iret
das
push
xchg
jo
scas
pop
add
rolb
push
cmp
and
popa
int
mov
lret
mov
in
mov
daa
leave
adc
push
dec
rorb
das
mov
jne
fcmovne
pusha
and
out
add
mov
ja
push
aaa
adc
xor
pop
add
mov
mov
in
cld
xchg
pop
pop
das
xchg
repz
ljmp
aas
mull
lds
xchg
jge
lret
push
andb
add
push
inc
add
xchg
pop
pop
xchg
or
test
xchg
rcrl
bndldx
bound
rcrl
aas
pusha
int3
scas
shl
stc
js
jne
xchg
xchg
xchg
mov
sbb
xchg
mov
sub
xchg
and
movsl
cmc
add
push
insb
jns
int3
sbb
xchg
lret
loope
addr16
in
adc
cmp
les
repz
enter
in
shrl
inc
pop
adc
cmc
add
mov
mov
mov
stc
and
ds
xchg
imul
iret
daa
loopne
cli
aaa
dec
xchg
outsl
xchg
scas
dec
dec
and
aaa
mov
inc
add
cmp
icebp
aas
rcrl
shll
rcll
jge
adc
imul
sbb
cwtl
push
dec
rclb
cmp
aad
cmp
sub
push
or
iret
dec
mov
dec
scas
daa
faddl
sahf
xor
inc
jo
push
mov
dec
pop
add
jbe
addb
ja
cmpsb
daa
add
pop
movsb
lret
pop
ja
xor
ja,pn
mul
push
adc
sbb
sbb
add
out
sub
insb
and
movsl
movsl
in
loop
into
and
in
pop
in
pop
leave
daa
push
add
mov
fists
xor
mov
inc
dec
adc
dec
negb
int3
push
aad
ret
or
daa
jo
inc
cmpsb
mov
adc
rcrb
iret
and
int3
inc
je
pop
sub
push
sbbl
jae
icebp
jbe
out
sarl
sub
jnp
rol
das
mov
test
jbe
dec
or
jne
dec
inc
enter
mov
ss
xor
jae
adc
dec
adc
jge
push
pushf
orl
adc
in
sub
add
sub
loop
mov
pop
fldt
xlat
sbb
rclb
xchg
mov
cmp
sub
pushf
aas
clc
adc
push
sbb
cmpsb
cmp
or
push
sbb
mov
int
xchg
xor
es
sbb
rcr
xchg
rolb
rolb
mov
push
mov
mov
sub
dec
fstpt
sbb
cmp
xor
clc
sub
push
or
vaddsubpd
or
push
xchg
bnd
ret
dec
rol
lret
xchg
testb
aam
aam
sbb
shrb
stos
mov
sub
jno
push
cmp
mov
pop
and
aad
int
mov
sarb
pop
vpavgb
lods
lods
in
xchg
es
sub
sub
ja
sbb
cltd
pop
mov
sub
ficoml
sbb
sub
sub
and
inc
aaa
sbb
mov
insl
mov
xchg
push
add
sbb
addr16
push
icebp
push
stos
call
mov
test
bound
adc
addr16
lea
adc
cmp
inc
mov
jae
sahf
fwait
xlat
xchg
shll
repz
sbbl
lock
inc
test
add
rorl
pop
aas
jle
add
imul
push
rclb
pop
pop
test
outsl
lea
lock
test
fnstenv
jg
lods
int3
aam
out
or
dec
cmpl
pop
mov
ljmp
iret
lods
stc
or
and
jb
outsb
pop
insb
out
rorb
and
fcomps
in
xchg
jb
or
add
pop
xor
fiaddl
in
mov
fcomip
bound
data16
bound
dec
pop
xchg
bound
pop
cmpsl
push
aam
xor
adc
aas
sbb
ret
jno
fs
pop
ds
rorb
nop
repnz
movsl
jl
rorl
popf
xor
movsb
mov
inc
iret
xor
movsl
add
push
and
xor
mov
testl
aad
jns,pn
lret
pop
in
or
test
xchg
lcall
cli
mov
mov
popf
push
push
sub
sbb
aas
sti
sbb
ret
cmpsb
aam
fisttpl
adc
xor
fwait
xchg
inc
push
lds
push
fnsave
je
pop
cmp
inc
or
rclb
mov
div
jns
push
hlt
test
mov
inc
ret
sbb
ret
arpl
dec
cmc
mov
clc
jg
not
clc
aas
repnz
push
out
lods
adc
sub
sub
push
cmp
lock
jmp
push
sub
andb
xor
mov
fs
xchg
pop
aas
scas
in
out
cmpsb
addr16
sbb
pop
in
outsl
int
lahf
lahf
aam
jg
xchg
nop
repz
into
push
mul
scas
fcmovnu
adc
adcl
cmp
jg
or
loop
pop
paddusw
test
push
dec
fidivl
loop
fmuls
push
adc
fisubrl
pop
mov
mov
xchg
add
add
push
std
and
push
popf
pop
js
ror
out
pushl
dec
sahf
roll
mov
push
pop
adc
dec
push
push
inc
mov
insl
jb
orl
adc
inc
fsubp
jl
add
jge
mov
or
into
in
pop
push
mov
inc
jmp
xchg
movsl
sbbl
fmull
jo
adc
cmc
and
mov
subl
flds
in
orl
or
xor
jae
mov
out
orb
push
sub
mov
push
lock
mov
loopne
pop
test
lcall
aam
outsb
lods
mov
shlb
outsl
dec
test
pop
sbb
mov
xchg
cmp
cmpsb
xchg
clc
fdivr
in
mov
test
xor
add
mov
ja
pop
and
cmp
gs
gs
push
push
inc
hlt
cmp
mov
push
mov
xchg
sbb
jo
in
out
int3
and
leave
repz
rcrl
mov
test
out
cmpsb
pop
pop
inc
les
aaa
cwtl
xlat
dec
ljmp
fs
sbb
jbe
inc
aas
fcmovne
sbb
jp
out
into
imul
pop
push
add
pop
clc
sub
mov
inc
mov
or
rclb
pop
jge
lsl
mov
lahf
popa
mov
fstp
sbb
dec
aam
push
add
mov
jp
add
jbe
pop
fst
push
cld
sub
repnz
jnp
jl
fistps
daa
mov
dec
aam
in
pop
pushf
ret
sbb
stos
pop
andb
lods
cmp
scas
test
push
mov
loopne
and
cld
lahf
ret
or
cmc
pusha
fistl
arpl
psrad
popa
sub
adc
push
out
add
repnz
fisttpl
aaa
push
mov
dec
aaa
add
fsubrs
aas
or
cmpsb
or
mul
movsl
imulb
scas
xor
mov
cli
cmp
or
and
ljmp
loopne
xor
mov
pusha
gs
xor
dec
test
mov
in
mov
xchg
fiadds
and
popa
test
mov
sub
outsb
add
mov
enter
mov
mov
mov
fldl
gs
das
imul
mov
push
mov
mov
enter
stos
xorl
or
leave
test
out
dec
or
sbb
shll
push
pop
imul
push
inc
xchg
int
add
loop
add
out
sbb
enter
mov
xor
fwait
xor
fcomps
mov
ret
stos
ror
mov
add
mov
mov
dec
sub
scas
pop
int3
jmp
xchg
mov
add
add
fisttps
aam
insb
out
or
popf
test
cmp
jp
and
testb
push
mov
xor
xchg
xchg
xchg
pusha
jg
push
aas
test
sbb
cmpsb
popf
add
ja
pop
test
mov
pop
mov
sbb
test
and
pop
pop
dec
lods
fcoms
push
push
jmp
lods
ss
popa
loop
jae
sbb
mov
sub
push
sub
jecxz
pop
inc
adc
fldt
stc
mov
cmp
inc
inc
or
pop
push
loopne
and
out
lea
es
pusha
push
lahf
pusha
stos
movsb
jne
push
dec
sub
out
xchg
addr16
jbe
repnz
jle
jp
dec
dec
dec
xor
sahf
pop
push
fbld
stc
repz
shrb
xor
adc
jns
jp
aaa
cmp
adc
pop
sbb
mov
fists
out
sarb
mov
rcr
test
jae
bound
xchg
jecxz
mov
in
pop
and
scas
dec
or
mov
hlt
adc
lock
mov
pusha
subl
int3
mov
pop
jl
sbb
daa
aad
scas
pop
inc
cld
and
lods
inc
shrb
sbb
mov
idivl
ja
mov
popa
mov
jbe
pop
mov
cmpsb
stc
es
mov
loope
repnz
pop
xchg
add
bound
xor
in
popf
push
mov
xlat
loope
push
movsl
mov
mov
cmp
test
loope
into
add
pop
pop
pop
dec
pop
daa
xor
int3
dec
push
subb
out
das
cs
pop
mov
rorl
test
jno
mov
in
xor
push
or
adc
lahf
ret
scas
outsb
push
cmpsb
aas
cmc
insb
xchg
adc
cltd
add
cmc
mov
test
and
insl
in
out
lcall
pop
dec
stc
in
aam
inc
jmp
jne
cwtl
ret
cmpsb
sub
xor
xor
cld
dec
into
add
mov
adc
pop
sahf
out
sbbl
lods
pushf
inc
dec
push
jae
cltd
pop
xor
imul
push
mov
je
out
mov
mov
sbb
and
into
test
xchg
popa
add
push
enter
mov
movsb
pusha
clc
xor
in
aas
cld
and
jnp
mov
sti
inc
enter
imul
pop
pop
leave
push
push
ja
or
pop
dec
fimull
fcomps
cmp
das
lods
jne
xorb
pop
aas
imul
imul
xor
scas
sbb
adc
mov
cmpsb
outsl
arpl
call
out
sbb
or
jo
pop
mov
or
xorb
ljmp
push
dec
cmp
push
out
pmaxsw
jae
subb
popf
pop
cltd
mov
xor
inc
pushf
stc
and
push
cs
movsl
daa
mov
dec
out
daa
sarl
pop
fnstenv
lods
fcom
sarl
or
dec
mov
mov
push
or
lods
dec
and
cltd
insl
jle
jns
mov
mov
and
dec
push
stos
and
add
clc
je
jge
movsb
xchg
shl
insl
cmp
data16
roll
add
int
add
and
jle
imul
mov
pop
pusha
push
adc
test
shl
lret
nop
sahf
shll
xchg
shrl
bnd
and
orps
jb
push
stos
dec
divb
dec
mov
lea
call
mov
or
das
inc
decl
fcmovbe
mov
fwait
scas
sbb
pop
roll
add
stos
xor
loopne
out
dec
int3
or
sub
pop
xchg
ficompl
leave
int3
cs
int
push
xchg
test
mov
jae
mov
fs
pop
hlt
xorl
jae
call
mov
xchg
sub
xor
mov
popf
call
in
loop
cli
outsl
data16
dec
pop
enter
inc
mov
xor
mov
clc
cmp
lahf
hlt
scas
add
mov
cmpsb
dec
rclb
adc
outsl
subb
mov
jae
cmp
imul
in
fisttps
cmp
cli
dec
sbb
les
aam
sti
inc
insb
in
rol
enter
and
lret
je
leave
decb
cmp
sahf
pop
stos
mov
wbinvd
in
or
in
jecxz
adc
lods
iret
into
sbb
icebp
add
inc
out
push
aaa
les
pop
jmp
test
pushl
mov
lea
lret
arpl
es
stos
fsub
enter
or
xor
out
and
mov
sbb
jl
imul
mov
lods
stos
scas
cs
sbb
in
mov
stos
je
icebp
repz
std
stos
nop
push
movsl
ljmp
rorl
movsl
add
mov
repnz
je
push
loope
push
iret
or
lret
adc
aaa
xchg
je
shlb
jno
and
adc
outsl
shlb
rcrb
cmpsl
in
cwtl
stos
ret
sbb
pop
add
int3
cmp
movsb
add
jmp
les
call
pop
popf
inc
aad
push
cmpb
mov
les
cmp
xor
mov
push
cwtl
pop
ret
test
rcrb
outsl
and
insb
aam
test
out
xchg
xchg
ss
dec
mov
aaa
fisttpll
lock
loopne
fsub
or
mov
mov
lahf
mov
xchg
int3
leave
loopne
sarb
std
pop
subb
stos
lock
mov
add
popf
mov
cwtl
loop
push
mov
orb
je
sbb
cli
cmpsl
fnstsw
flds
popa
stos
and
test
lods
sbb
push
push
movsb
test
loope
pushf
test
clc
int
or
or
jo
push
fcoms
in
push
in
adc
mov
pusha
nop
xchg
jb
pop
adc
xchg
sahf
adc
sahf
dec
mov
jo
bound
adc
int
jg
pop
xchg
pop
popf
aaa
sub
into
mov
jbe
dec
mov
les
pop
adc
pop
out
cmpsb
lahf
popa
dec
repz
or
adc
ljmp
inc
mov
cwtl
fs
mov
loope
and
dec
test
out
adc
mov
and
push
sub
lds
cmp
jle
mov
sub
daa
mov
push
dec
inc
pop
xchg
shrd
notb
cmp
xchg
repnz
jb
ds
aaa
xchg
loop
cltd
shll
loopne
frstor
dec
mov
mov
mov
mov
ss
cmp
add
mov
lock
dec
xchg
xor
mov
mov
mov
sbb
sub
shll
mov
mov
pop
push
adc
ss
xor
inc
sahf
sbb
pop
xchg
jae
mov
mov
imul
cwtl
andl
mov
es
cld
jo
add
lahf
mov
xor
ret
mov
mov
dec
xor
and
pop
lahf
imul
cmpsl
or
je
jnp
iret
add
test
sub
lods
sub
sbb
std
fs
sub
or
out
dec
call
out
push
in
sub
push
mov
xor
imul
pop
popf
or
arpl
test
sahf
mov
adc
xchg
pop
mov
iret
test
jecxz
loope
shrb
and
inc
pop
jae
dec
jecxz
jle
mov
mov
dec
push
push
sbb
popa
fwait
inc
add
xchg
shl
and
fnstcw
cmpsl
in
scas
sbb
pusha
js
and
int
js
cmpl
out
pusha
fcom
int3
loopne
sub
jns
mov
dec
aas
cmpsb
cmp
jnp
cmc
rcl
in
push
mov
bound
faddl
test
cmpl
pop
mov
and
or
or
pusha
test
dec
aaa
add
mov
adc
xchg
cmpsb
jo
push
lcall
cmp
lea
sbb
adc
xor
mov
dec
scas
int
imul
sbb
mov
dec
lods
or
stos
mov
jns
inc
cmp
cmp
xor
jle
bound
ret
and
inc
out
cmp
arpl
ficoml
cmp
sahf
daa
adc
cld
sbb
shlb
aam
ret
popa
mov
inc
je
mov
enter
jl
sbb
adc
aas
xor
mov
mov
movsb
mov
jae
repnz
add
into
enter
jne
dec
ds
loopne
daa
mov
mov
pop
jo
and
andl
enter
mov
in
fidivrs
pusha
iret
mov
adc
or
jge
dec
xchg
loopne
inc
data16
or
push
pop
out
adc
out
add
xor
jo
xchg
and
pop
xchg
mov
insl
push
sub
mov
push
pusha
inc
fldt
mov
mov
gs
mov
dec
cmp
inc
cmp
dec
arpl
mov
xchg
into
mov
sub
cmpsb
xchg
fsts
mov
shl
mov
jbe
xchg
inc
xchg
or
rcr
aam
sub
pop
pusha
inc
ret
dec
jg
xchg
subl
cmp
inc
cmpsl
xchg
cmpsb
insl
mov
push
rorl
fsubrl
mov
outsb
cmp
push
ja
ds
mov
inc
clc
and
jns
ret
adc
test
or
push
insb
xor
pop
xor
std
sahf
pushf
add
test
lods
mov
lcall
dec
sub
popf
aad
or
xor
jge
lret
pop
and
fldenv
pop
xor
push
or
adc
fcoml
int
xchg
stos
xchg
sbb
adc
mov
sti
fcmove
adcl
mov
cmp
add
add
insb
xchg
adc
jo
andl
jns
mov
add
imul
ficompl
xlat
enter
mov
mov
xlat
dec
mov
mov
and
xchg
fildll
adcl
das
pusha
hlt
jl
ds
call
ss
iret
xor
pop
push
xchg
setne
mov
mov
test
sub
in
sarl
dec
iret
dec
lea
pop
movsb
inc
mov
or
and
in
add
or
jp
stc
jge
sub
and
xchg
sub
adc
or
pop
lahf
not
shl
pop
dec
jo
repz
xor
and
out
xor
decb
or
hlt
lret
xchg
inc
jle
mov
jo
or
adc
sbb
cmp
mov
xchg
xchg
xor
pop
mov
push
imul
test
sbb
subl
pop
js
clc
movsl
mov
addr16
out
xor
sbb
jne
out
jnp
shrb
dec
das
jg
xor
and
lds
lret
xor
insl
out
outsl
pushf
das
adc
fdivrl
idivl
sub
xchg
mov
and
stos
adc
and
cld
mov
push
xchg
inc
dec
test
rcr
mov
xchg
mov
adc
push
movsb
inc
cli
movsb
je
add
jo
xchg
add
push
and
pop
mov
out
test
mov
nop
gs
pop
xor
push
xchg
mov
adc
mov
and
xchg
sahf
fwait
aaa
into
andl
pminsw
into
jg
cltd
lds
mov
movswl
pusha
xor
add
sbb
outsb
ja
mov
inc
dec
and
inc
jle
cmpsl
mov
jno
cli
xchg
dec
es
xchg
add
xchg
in
stos
sti
cmp
mov
ds
dec
and
inc
mov
push
fidivrs
sub
push
mov
adc
imul
cmp
ret
xchg
inc
mov
inc
jns
and
jmp
inc
int
sub
push
jns
gs
or
loop
mov
fbstp
add
xchg
xor
into
repnz
out
xor
pushf
insl
lds
xor
xlat
subb
mov
lods
mulb
jbe
push
lods
cmp
push
cmpl
ret
fidivrl
outsb
out
inc
lahf
sbb
jmp
sbb
or
insl
mov
jmp
sub
es
in
subl
ljmp
ljmp
jle
decl
add
mov
js
out
mov
push
hlt
cld
jg
rol
add
out
or
mov
ret
fs
add
in
test
xor
fmuls
dec
int
int
cld
mov
pop
push
add
stos
ds
clc
adc
imul
test
rcrl
or
nop
scas
dec
push
mov
jle
rcll
ljmp
cmp
lea
insl
mov
cmp
loop
mov
inc
add
push
and
or
inc
imul
stos
pusha
adc
inc
fs
fs
inc
dec
enter
adc
adc
cs
jle
sbb
push
shl
mov
bnd
adc
push
icebp
xor
cli
aas
in
or
sbb
mov
inc
scas
out
mov
dec
int3
sbb
xlat
shl
sar
xlat
add
lock
or
jb
mov
pop
mov
mov
push
mov
je
sub
adc
pop
jno
adc
push
pop
mov
push
test
mov
ja
iret
jns
or
mov
pop
dec
loope
mov
sbbb
fwait
cmpsl
or
lock
mov
addr16
push
sbb
sub
jecxz
push
xchg
mov
inc
adc
out
pop
inc
hlt
or
movsl
ja
mov
inc
aam
push
rclb
movsl
xor
dec
cwtl
add
enter
arpl
in
popf
sbb
cmp
ror
clc
xchg
jno
cmpsb
sar
es
sbb
mov
jne
daa
enter
ja
pushf
mov
in
daa
fisttpl
in
mov
test
mov
push
leave
daa
mov
xchg
jle
aaa
aad
movsb
fsubrl
push
xor
cld
dec
imul
in
jp
jno
out
jecxz
fisttpll
mov
mov
loopne
sbb
adc
sub
mov
dec
jb
dec
js
test
xchg
mov
sub
cli
fidivs
test
stos
aaa
cmp
fdivl
lcall
adc
daa
daa
lods
pushf
in
inc
pusha
sub
movsl
js
rolb
push
out
ss
in
adc
jno
cmp
bound
imul
pop
mov
adc
test
aad
pop
in
xchg
fdivl
fdivrl
mov
iret
hlt
pushf
xor
mov
jmp
sti
scas
test
cmc
xlat
hlt
mov
mov
push
push
loopnew
dec
dec
loop
inc
fwait
add
xor
jg
rcrl
pushf
enter
adc
enter
xchg
es
xor
scas
jne
mov
jmp
inc
gs
pop
xchg
adcb
cmp
inc
lods
sbb
aaa
shrl
fwait
mov
xchg
or
sub
ds
and
ja
and
ljmp
mov
push
hlt
jns
adc
add
fwait
dec
xor
lods
sti
test
jl
arpl
push
dec
fsubr
icebp
inc
dec
cs
les
add
mov
stc
out
in
repnz
xor
fidivl
sti
sahf
and
fs
mov
jg
dec
xchg
je
pop
push
movsl
sbb
lock
das
inc
sbb
lret
mulb
enter
daa
inc
push
mov
repz
and
rolb
mov
cmp
dec
xchg
sbb
in
into
insb
inc
lcall
aam
imul
jae
mov
icebp
int3
push
sti
je
push
addr16
jg
push
adc
sub
adc
gs
cs
and
into
sub
jmp
fcmovb
int
adc
stos
and
movsl
mov
cld
mov
xor
jp
ds
nop
out
mov
sbb
fsts
rcll
add
jge
pop
insb
pavgw
repnz
or
add
jne
pushf
xorl
cmp
jmp
stc
mov
xchg
imul
gs
into
into
fisttpl
inc
xchg
push
xchg
jle
push
push
jne
sahf
mov
dec
jns
shrb
fnstcw
and
sub
test
stos
adc
mov
std
mov
fbstp
cmp
iret
movsl
movsb
hlt
repz
sahf
ds
jecxz
jg
mov
andl
fistpl
push
out
sub
andl
pushf
fmull
xor
and
mov
mov
xchg
mov
sub
mov
and
inc
lret
call
test
mov
push
mov
jp
pop
xchg
add
cmp
inc
xor
cwtl
imul
mov
cmp
std
scas
xor
mov
pop
jmp
call
pop
mov
addr16
nop
out
ret
jmp
xor
loope
or
dec
dec
xchg
xchg
push
test
fistps
addl
lcall
test
ret
pop
fldcw
sub
jne
sbb
dec
stc
ret
mulb
scas
inc
pop
mov
int
pop
add
lret
fcmovnu
stos
jmp
sbb
stc
andl
adc
lret
cmp
mov
ret
adc
popf
or
dec
aaa
std
dec
in
push
push
push
adc
jo
cmp
or
mov
fistps
jnp
icebp
fdivrs
cmpsl
ljmp
jo
lods
cmp
adc
xor
cs
lret
lock
jno
jecxz
push
lods
scas
insl
shr
stos
sahf
cmp
ljmp
imull
jge
cmc
inc
int3
and
bound
enter
mov
ror
addr16
pop
mov
sub
mov
test
popf
dec
test
cmpsl
int
push
jle
mov
cmp
xchg
loope
mov
sub
cld
subl
add
adc
aaa
loopne
adc
inc
inc
push
popf
scas
imul
rcl
mov
adc
add
add
jne
adcb
inc
sub
ret
mov
aaa
adc
mov
dec
xchg
xor
or
clc
clc
sub
mov
lods
je
push
pop
pop
inc
aaa
fwait
push
je
ja
sub
push
or
and
or
ficomps
imul
mov
mov
fildl
sbb
test
pop
mov
jle
sbb
in
cmp
xor
mov
cmpsl
xlat
outsl
andb
jno
push
xor
inc
dec
cmp
adc
add
rorl
adc
xorl
jbe
jnp
pop
dec
mov
jg
shlb
mov
inc
bsf
sub
mov
test
std
vpunpcklbw
mov
aaa
movsb
cmp
fsubl
pusha
fs
and
push
nop
daa
jecxz
bound
je
or
and
aas
push
and
mov
xor
pop
jnp
xlat
es
push
sub
and
mov
push
sub
outsb
sbb
mov
push
jns
nop
pop
lret
fnsave
pop
mov
int
xchg
leave
daa
je
dec
mov
mov
stos
nop
xchg
lcall
popa
test
rolb
push
jnp
ftst
frstor
mov
test
dec
into
adc
daa
mov
adc
call
je
lods
std
dec
jns
mov
add
stos
rorb
dec
insb
jo
stc
lock
test
and
leave
mov
add
xchg
iret
mov
stos
shlb
push
cmpl
pop
mov
jnp
xor
lret
imul
pop
out
outsb
cmpsl
ret
and
jp
js
xchg
mov
dec
cltd
test
leave
dec
shll
sub
adc
mov
sub
stos
imul
test
out
xchg
sarl
jbe
mov
in
out
lock
dec
sub
repz
mov
icebp
movsl
pop
cltd
sbb
jns
movsl
or
hlt
cs
imul
pop
pop
orb
mov
mov
pushf
push
loope
adc
daa
add
fcoms
int3
imull
jb
scas
pop
jp
push
dec
sar
mov
in
push
jle
clc
lods
scas
add
dec
add
out
cli
adc
fiadds
push
js
pop
sti
cmp
jo
aas
std
cltd
es
shl
cmpsl
jns
lcall
mov
cmp
sub
cmpsl
ret
ds
in
mov
pop
aad
or
pop
add
rcll
pop
mov
outsb
push
std
lds
fs
inc
nop
in
pusha
jmp
mov
rcrl
push
adc
test
leave
fucomp
leave
rorl
lods
adc
pop
mov
testl
jae
mov
push
sub
cmp
cmpsl
cmp
in
add
fwait
int3
mov
scas
push
jle
sub
push
outsl
in
pusha
mov
std
imul
mov
jnp
cmp
xor
not
ljmp
or
jmp
jmp
inc
fcoml
jp
adc
addr16
lods
fsubs
jae
xor
mov
popa
test
jne
movsb
dec
xchg
and
mov
mov
dec
xchg
lcall
ja
cmp
dec
loope
test
xor
adc
push
les
mov
cmpsl
imul
sub
adc
cli
inc
add
adc
or
lahf
or
cmp
cld
jno
cmp
sbb
icebp
cmp
nop
inc
mov
jne
mov
in
and
jae
push
cmpsl
adc
cmp
sbbb
sub
std
mov
rcrb
ficompl
aad
pop
xor
insl
jp
pop
push
add
pop
ss
ja
das
inc
sub
add
jo
stos
xchg
inc
ljmp
push
mov
xorb
cmp
dec
sbb
push
test
adc
mov
and
and
fdivr
loop
mov
mov
in
loop
fisubs
xchg
mov
test
rcl
inc
clc
cmp
lahf
test
in
out
aam
sbb
sub
movsl
scas
cmc
xor
sub
stc
pop
mov
mov
xchg
ret
ja
adc
ljmp
js
addr16
jbe
insb
cmp
loope
cmp
sarw
inc
add
fisttpl
mov
inc
jo
mov
fwait
or
negb
and
mov
xor
ljmp
repz
stos
movsb
enter
mov
pop
push
fwait
test
loopne
xchg
fidivl
stos
ret
aam
ffree
mov
xor
jno
adc
mov
outsb
insl
xchg
sub
idivb
sar
out
sub
lahf
push
pop
cltd
sbb
push
adc
aaa
mov
adc
ret
lret
pop
or
shll
jne
rolb
or
js
imul
rcrl
adc
movsbl
add
imul
std
xchg
mov
jnp
pop
aad
lcall
mov
pop
jae
or
mulb
mov
fs
jb
jle
sbb
int3
cmpsl
dec
pop
shrb
int
add
adc
loopne
inc
mov
daa
test
cli
mov
sbb
lods
jno
dec
mov
jno
adc
inc
in
dec
jo
jge
jo
mov
fmull
scas
xchg
cs
xchg
cmp
aad
add
outsb
addl
out
cmp
adc
xor
pop
and
test
sbb
insl
mov
add
mov
mov
movsb
out
cmp
cmp
sti
cs
test
sti
inc
movsb
dec
lret
mov
push
xorl
ficoml
scas
xchg
pop
outsl
adc
aam
cltd
jmp
clc
adc
sbb
dec
inc
hlt
shl
ret
jg
adc
mov
std
fsubr
hlt
lods
std
sbb
mov
jg
mov
inc
mov
inc
rorl
dec
fisttps
sub
movsl
lods
call
mov
shlb
ss
sbb
pop
fsubs
gs
fldcw
adc
cmpsb
xchg
aaa
stc
adc
mov
sti
lods
mov
or
push
aas
testb
lds
rcrl
jp
sub
pop
jmp
inc
lret
push
dec
hlt
and
dec
mov
adc
jmp
js
outsl
dec
stos
in
mov
fwait
adc
push
cli
mov
movsl
jnp
jg
dec
out
mov
xor
mov
sbb
xchg
sti
sub
pop
push
lods
lods
mov
dec
pop
stos
icebp
arpl
das
inc
mov
repnz
outsl
mov
into
shrl
int
popf
in
cmp
imul
push
leave
pslld
sbb
push
adc
test
adc
leave
jo
and
pop
cmc
rorl
xchg
pop
imul
in
xchg
lea
lock
sbb
pushf
sbb
jbe
pop
mov
push
roll
sub
lcall
fidivl
cmpsb
lods
push
dec
dec
stos
xchg
movsl
push
cwtl
insb
imul
movsl
sub
aaa
xchg
fimuls
adc
cltd
dec
inc
arpl
mov
inc
push
insb
or
test
cmc
int
out
adc
mov
xchg
stos
sbb
pop
inc
out
test
popa
outsl
jae
testb
mov
xlat
ss
scas
jmp
mov
lock
and
mov
xlat
inc
xor
add
iret
mov
xchg
arpl
hlt
sub
mov
and
daa
jle
or
inc
loope
pop
xchg
mov
jnp
push
scas
pusha
cli
pop
sub
repz
sub
or
xchg
imul
sub
push
jno
inc
pop
mov
jge
out
subb
ja
jae
inc
in
jge
nop
iret
or
or
pop
or
xor
std
addr16
sub
xor
or
push
mov
ljmp
out
aad
cmpsb
insb
imul
pop
pop
insl
addr16
fdivrl
or
mov
mov
xchg
jg
data16
mov
out
pop
mov
loopne
mov
or
push
adc
movsb
hlt
cltd
mov
cli
in
add
hlt
ja
and
pop
or
mov
or
popf
imul
mov
ds
fistpl
rcrl
popf
mov
add
repnz
push
mov
push
jp
aad
cmpb
mov
lods
cmpsb
lock
std
call
pop
stos
xor
in
out
enter
sbb
mov
push
add
movl
mov
xor
insl
in
dec
pop
scas
sub
dec
mov
push
mov
sti
icebp
adc
insb
and
je
test
lahf
mov
cmpsb
mov
and
push
lds
mov
or
sbb
in
pusha
fsubl
nop
aaa
push
fisubrs
ss
jbe
lock
movsb
pop
mov
jne
push
xchg
fisubs
lock
imul
sti
adc
das
and
out
push
cmp
pusha
test
or
jecxz
and
cs
shll
ficomps
xchg
add
rolb
dec
mov
andl
cmpsl
cs
adc
mov
lret
mov
cmp
add
and
cmp
mov
jecxz
push
je
xor
int
mov
scas
stc
dec
stos
xchg
aad
arpl
aad
subb
and
rorl
mov
push
mov
repnz
icebp
mov
repnz
movsl
jecxz
add
xor
push
lods
sub
fistpll
rcrl
clc
bound
mov
call
rolb
dec
pop
lahf
mov
movsl
add
cld
imul
rcrb
sbb
lods
stos
adc
test
push
dec
dec
inc
pop
xor
sbb
pop
add
rcrb
sbb
ss
or
mov
lods
shr
lods
imul
push
inc
sbb
jmp
inc
fimull
mov
test
xor
outsl
ret
push
das
xchg
je
lods
xor
test
nop
xor
rol
push
mov
or
popa
adc
mov
inc
mov
or
and
inc
cmp
inc
jb
sub
jne
push
rcl
js
leave
loop
or
xchg
or
call
movsb
pop
in
xor
or
push
cld
pop
test
mov
xchg
mov
enter
mov
adc
mov
insb
mov
and
mov
in
imul
dec
roll
insb
pushf
push
sbb
mov
sbb
aas
icebp
out
cmp
mov
inc
and
jne
xor
pop
stos
dec
xchg
inc
sub
xchg
pop
lcall
pop
rcrb
sub
xchg
sahf
dec
outsb
mov
lods
test
sbb
jnp
cli
pop
xor
pop
xor
loope
adc
dec
fildl
into
in
push
jno
xor
push
repz
sub
or
add
orb
mov
loopne
mov
ret
mov
and
cltd
push
pushf
add
sub
loopne
notb
jecxz
sbb
pslld
adc
fs
add
cs
add
lret
pop
mov
mov
mov
mov
sub
sbb
mov
jl
adc
xchg
call
mov
incl
test
xchg
jmp
imull
cmp
mov
movsb
add
movsb
jge
shll
fucomp
push
sub
aas
fildll
cld
adc
ret
mov
and
int3
ja
xchg
test
jbe
dec
inc
cmpsl
jne
cmc
mov
mov
or
dec
aad
cltd
pop
scas
cmp
xor
mov
inc
stos
shl
jns
es
idivl
push
cwtl
scas
adc
insb
inc
addl
pusha
mov
or
lock
int3
and
mov
pop
add
push
jno
jp
and
inc
xchg
jle
inc
mov
add
push
push
addr16
mov
out
jne
xor
jge
adc
mov
into
xchg
cltd
lret
enter
gs
lods
mov
pop
xchg
dec
xor
in
jecxz
out
jge
cmc
adc
xlat
inc
mov
jp
xchg
jns
xor
cmpsb
xlat
gs
ds
lea
pop
pop
rolb
and
push
rcr
mov
push
testb
mov
jo
pop
pop
sub
xchg
jne
std
mov
cs
cld
pop
xorb
and
cmpsl
das
gs
sub
mov
push
dec
adc
ror
sbb
adc
mov
repz
fisubs
add
call
dec
jae
or
loopne
cmp
pop
shll
mov
or
dec
and
dec
mov
mov
mov
xor
stc
loope
mov
or
testb
pop
inc
jg
pop
xchg
fdivrs
dec
aam
call
and
ss
or
inc
jle
dec
xchg
scas
std
rcrb
xorl
scas
pop
lret
jae
icebp
add
ljmp
sbb
xor
pop
mov
sbb
mov
daa
lret
adc
je
int
sub
aad
out
xor
mov
add
fadds
scas
xchg
nopl
push
int3
data16
shr
repnz
daa
mov
rcrb
ror
mov
pop
jae,pn
add
dec
aaa
popf
mov
ret
mov
xor
mov
xchg
fcmovu
inc
pushf
ds
jge
mov
cmp
out
lahf
sahf
or
mov
sti
xchg
mov
insl
lods
lea
jge
mov
sub
push
jae
adc
inc
sbb
out
mov
nopl
inc
sub
pop
fwait
jmp
xchg
push
test
scas
hlt
scas
push
jo
pushf
movsl
jo
lahf
repz
xor
aaa
imul
adc
movsl
cwtl
shll
push
jno
lods
loop
sub
jp
mov
inc
jge
scas
xchg
add
lds
jge
mov
pusha
mul
cmpsb
repz
test
xchg
mov
icebp
push
push
xchg
push
inc
mov
sub
xor
jnp
popf
out
inc
shrb
hlt
rep
fistps
pop
popa
jb
mov
mov
sbb
mov
and
sub
cmp
js
dec
in
stos
xchg
ds
mov
or
jns
push
jno,pn
pop
dec
mov
bound
rcll
xchg
fsubrs
fdivr
mov
cmp
popf
sub
aam
es
loope
int3
inc
test
ja
stos
insl
imul
add
xor
xchg
mov
xor
xlat
loope
mov
xlat
inc
sub
pushf
cmp
add
xlat
jle
jge
mov
xor
xchg
fs
adc
dec
push
test
jnp
mov
cltd
push
jge
scas
push
test
sbb
or
push
lcall
dec
inc
inc
push
test
lds
lret
xchg
dec
fmuls
sub
xchg
jo
sarl
data16
adc
sahf
daa
scas
lret
loopne
lods
fidivrl
and
xchg
insl
in
sub
in
and
stos
cwtl
or
test
imul
dec
in
insb
jb
dec
sar
jbe
pushf
movsl
hlt
jae
adc
dec
pop
ret
mov
insl
pop
gs
mov
ret
ret
aaa
mov
and
je
ja
insl
mov
leave
mov
pushf
ja
test
adc
inc
xchg
dec
outsl
xchg
adc
jo
fcoml
mul
push
jne
lcall
enter
push
or
scas
inc
test
adc
clc
inc
dec
pop
push
fs
cmp
imul
add
sub
inc
lcall
aaa
out
pop
js
mov
jb
inc
push
pop
inc
scas
clc
lods
pop
and
xchg
or
icebp
xchg
pcmpeqw
fnop
iret
jo
rcrl
in
xlat
adc
dec
aas
pop
rcrl
add
sti
imul
les
lahf
xor
daa
or
sub
or
daa
jae
fwait
mov
ds
lahf
sbb
dec
lahf
addr16
in
add
nop
push
dec
sbb
push
and
adc
psubsw
arpl
cmp
dec
inc
subl
xchg
sub
lret
mov
sbb
pop
jae
ret
dec
in
xchg
mov
iret
xchg
sub
jmp
pushf
inc
testb
add
push
lds
ss
dec
out
cmp
jbe
test
mov
stos
sub
in
insb
cmp
or
into
out
hlt
cmc
pop
aad
cmp
repz
imul
int3
call
sub
mov
jl
loope
jmp
pop
nop
hlt
sbb
paddd
push
push
aas
add
add
cli
fcmovne
sub
lock
push
xor
mov
xlat
lods
mov
jecxz
xchg
mov
xor
fs
imul
cmp
cld
and
or
fs
stc
and
test
push
push
fwait
lock
es
dec
push
xlat
xchg
cmp
mov
outsb
std
nop
std
iret
mov
std
push
mov
aas
jge
into
insb
test
inc
outsb
dec
and
cmp
cmp
cmp
xchg
imul
xchg
lahf
xchg
out
call
mov
ret
les
jnp
lcall
rcr
pop
xchg
fucom
ljmp
add
das
mov
pop
mov
sbb
call
out
pop
dec
mov
add
clc
push
lahf
sbb
int
mov
clc
out
adc
ds
divl
loope
sahf
and
jl
pop
movsb
pusha
cmp
icebp
loop
push
xchg
insb
daa
cmpsb
pop
sub
js
sbbl
pop
cmp
pop
mov
sbb
pop
cmp
loopne
jne
cmpsb
mov
jge
mov
mov
mov
inc
push
jge
test
push
push
or
mov
sbb
jbe
xor
pusha
ret
dec
ja
lds
cltd
inc
dec
loop
rcrl
daa
push
pop
rol
xchg
dec
dec
sub
jl
sbb
repnz
lret
dec
outsl
add
shrl
mov
jb
push
sbb
push
pop
pop
aam
cli
jle
mov
jns
jle
rcl
lods
popa
and
clc
clc
leave
cld
inc
lcall
xlat
jae
push
cmpsl
jg
or
outsl
std
mov
add
ja
dec
out
push
xlat
imul
xchg
jmp
aas
popf
xchg
xor
std
and
fsubs
dec
int
push
push
std
stos
mov
pop
das
or
in
dec
int3
jbe
popa
push
movl
mov
leave
popf
cmp
inc
jae
std
mov
sub
scas
loop
mov
outsb
sbb
or
xor
pop
orb
xor
cmpsb
into
cmp
push
data16
scas
insl
orl
imul
jb
mov
cltd
mov
dec
js
insl
negl
arpl
xor
pop
xor
imul
or
and
sbb
inc
jns
pop
xor
jecxz
out
pop
int
jb
jae
fists
pushf
cli
lret
sbb
jo
or
push
fldenv
movsl
out
jb
xor
cmp
cmp
ret
andl
and
inc
in
and
fldlg2
push
popa
shll
gs
inc
fsubl
and
push
in
cmp
add
cltd
jae
push
in
dec
imul
push
mov
mov
mov
in
cmp
sub
mov
dec
xchg
push
add
pop
test
cmp
fnstcw
inc
sub
daa
sub
sbb
pop
je
push
ja
testl
pop
enter
rorb
pop
dec
and
insl
idivb
jle
lds
and
adc
cmpsb
fidivrs
add
and
lds
loop
aas
inc
loope
sahf
pop
int3
int
push
dec
shll
popl
inc
rclb
add
leave
adc
fdivrl
cs
xor
mov
icebp
jg
aaa
mov
add
movsb
data16
jge
jnp
lret
sbb
and
dec
mov
xchg
or
int3
out
rcl
dec
popf
or
cli
cmc
les
mov
fs
mov
sbb
push
addr16
stos
cmpsl
or
inc
and
push
fsts
dec
inc
repz
in
mov
push
xchg
aad
sti
lea
call
cmp
ret
add
push
or
mov
jp
mov
mov
adc
dec
in
xor
sub
xor
aam
lahf
xchg
iret
arpl
cli
jbe
jecxz
fsubr
inc
adc
lea
cmp
les
aam
fwait
jnp
push
jmp
sahf
jle
xchg
adc
test
cmp
iret
inc
xlat
or
pop
jae
xchg
popa
lcall
jp
pop
mulb
add
out
jb,pt
mov
scas
out
inc
mov
and
into
movsl
xorl
or
inc
pop
xchg
mov
sub
aam
daa
push
ret
dec
lea
add
testb
push
dec
jo
call
push
lea
mov
in
push
push
test
test
push
mov
or
jecxz
pop
test
pop
inc
xchg
das
scas
and
jp
add
test
int
mov
jmp
sub
push
cmpsl
jecxz
push
pop
imul
stc
mov
cmp
out
ret
mov
aaa
add
xchg
sbb
insb
mov
cmp
mov
jl
and
mov
jp
ja
iret
jno
dec
aaa
push
les
jp
xchg
mov
pop
jmp
jge
arpl
mov
dec
popa
fisttpl
sub
out
push
sbb
insb
or
lret
adcl
mov
fstpt
add
cmp
xor
add
enter
sbb
dec
leave
hlt
out
ss
xor
jne
imul
fcoml
pusha
and
loope
js
sbbb
outsb
pop
loopne
outsl
cmc
push
or
inc
and
loopne
jns
push
js
push
push
inc
and
dec
mov
aam
leave
jb
push
cmpsb
sbb
jmp
and
xlat
gs
int
mov
push
mov
stos
xchg
jecxz
dec
in
jb
lcall
or
pop
xchg
push
repnz
push
out
and
cwtl
outsb
xchg
icebp
cmpl
shr
jge
ljmp
sbb
pop
sub
arpl
adc
inc
push
jmp
cmp
insl
xchg
fs
xor
inc
mov
mov
jmp
rol
ljmp
in
orl
mov
shll
xchg
fdivrl
outsb
adc
inc
dec
lea
jle
fstl
mov
xlat
push
out
das
push
jp
cs
mov
aam
pusha
jbe
sbb
push
test
loopne
jg
push
mov
inc
sbb
pop
push
leave
ret
in
fmull
mov
pop
in
movsb
ja
lret
jmp
dec
shlb
adc
jbe
fstpt
aas
mov
sbb
xchg
sti
pop
notl
push
sbb
into
pushf
xor
ja
movsl
lcall
clc
inc
scas
cmp
mov
aad
mov
inc
mov
mov
or
and
icebp
sti
aam
push
ds
or
pop
adc
inc
ljmp
cli
popa
ret
stos
mov
leave
lods
out
sub
and
aam
mov
cltd
mov
es
enter
es
pop
mov
leave
xchg
add
dec
lods
arpl
ds
mov
popa
insl
lahf
push
enter
daa
addr16
cld
pop
push
cmp
ds
mov
nop
ficoms
pop
xor
xor
mov
shl
adc
fidivrs
or
and
ret
and
mov
dec
insl
jne
es
mov
jo
cmc
adc
cmpsb
lds
mov
aad
outsb
mov
mov
mov
in
jbe
aaa
clc
mov
push
sub
cltd
mov
xor
int
push
aad
insl
andl
xchg
pushl
xor
mov
inc
jae
xchg
dec
xor
jp
adc
mov
pop
mov
int
insl
or
xchg
mov
inc
push
lods
icebp
adc
jle
push
fstl
clc
xor
push
jno
aaa
nop
sub
lgs
call
fwait
popa
mov
test
jo
ret
inc
sub
mov
pop
movsb
fdivs
fwait
xchg
mov
xor
les
push
mov
and
out
sub
stos
cmp
adc
sbb
push
test
mov
or
push
jge
sub
pop
dec
jle
outsl
test
insl
cwtl
xor
sub
mov
pop
cmp
fists
pop
sbb
test
jge
xor
test
loopne
lods
in
je
jl
jg
lea
test
lret
dec
imul
pop
xor
in
ja
dec
or
add
mov
fcomi
adc
daa
dec
mov
mov
lcall
xor
imul
mov
pop
jb
adcl
sti
pop
clc
or
mov
test
inc
leave
pop
neg
ja
out
iret
pop
sbb
lock
and
sub
cmpsb
mov
dec
sbb
and
pop
fstps
arpl
aas
test
ss
ljmp
dec
or
wrmsr
shll
or
pushf
fstl
aad
jbe
mov
jle
popf
dec
push
push
es
or
test
popf
cmc
int
out
add
and
cld
fucomip
lds
jae
lcall
mov
pusha
shll
outsl
push
adc
sub
aad
cmp
testl
adc
in
imul
popf
dec
and
mov
leave
mov
xchg
jbe
mov
mov
pop
jmpw
jp
or
out
dec
fiaddl
int3
cmp
inc
inc
gs
rorb
je
ja
outsb
mov
inc
jo
cld
inc
ja
ret
mov
repnz
inc
test
testl
cmp
fsts
loopne
sbb
cltd
arpl
dec
cmp
cmp
dec
dec
lods
dec
in
daa
cmp
xor
int
xchg
stos
in
gs
inc
das
outsl
pop
bound
pop
jne
stos
sbb
aad
push
inc
lods
test
stos
or
repnz
adc
pop
sti
mov
xchg
dec
jne
xlat
hlt
xor
xchg
xchg
stos
mov
rcrb
or
fs
push
push
aad
push
dec
xor
inc
mov
adc
lret
pop
sub
cmp
mov
xchg
xchg
sbb
jg
fists
lret
cmpsb
xor
push
icebp
xchg
icebp
xor
cmp
lret
or
repz
mov
cmp
push
lods
add
jae
iret
pop
pop
pop
scas
adc
mov
inc
adc
and
push
mov
pushl
lea
fbstp
sbb
shlb
ret
add
adc
xchg
mov
out
mov
inc
push
add
xchg
aam
mov
sti
xor
ja
xchg
je
cmp
inc
repz
in
adc
xchg
push
movsb
insl
inc
and
pop
ja
pop
in
je
cmp
sbb
std
inc
inc
je
into
jg
aam
enter
xchg
pop
ret
fisttpll
sub
shrb
aad
mov
fisubl
scas
hlt
jo
jle
add
pop
jno
js
lret
inc
scas
outsb
jp
je
addr16
in
pop
mov
push
pop
push
in
je
loop
add
negl
adc
push
test
push
lods
inc
in
popa
fdivr
aam
dec
pop
out
pop
ss
mov
add
scas
push
jns
mov
test
movsl
lcall
pop
sbb
stos
add
or
pop
xchg
xor
pop
push
arpl
cmp
popa
pushf
jnp
pop
in
arpl
std
mov
push
cmpb
ds
lret
mov
inc
xchg
add
fwait
pop
push
pop
jne
pop
push
hlt
sbb
and
push
xorl
xor
scas
push
or
mov
xchg
pusha
inc
mov
mov
hlt
add
out
mov
pop
mov
and
push
add
adc
add
jnp
inc
mov
addr16
mov
mov
mov
mov
sub
sub
and
iret
pop
ds
xchg
dec
and
out
xchg
xchg
mov
inc
pushf
cwtl
jle
enter
adc
cwtl
mov
or
sbb
orl
mov
loop
pop
pusha
mov
test
imull
ja
lods
int3
or
and
xor
gs
or
mov
jnp
add
inc
shll
cmp
xchg
push
mov
icebp
jmp
dec
xchg
push
xchg
pop
inc
scas
scas
xor
inc
mov
jp
aad
jp
aas
and
mov
cltd
in
aaa
cmp
push
cli
dec
or
enter
jo
sub
lea
pop
jae
and
xchg
aaa
xchg
out
mov
ret
xlat
mov
cli
ds
stos
xorl
ret
or
out
sub
dec
into
rorb
inc
and
pop
pop
test
lcall
sbb
ss
mov
mov
or
push
cmp
pop
sbb
movsl
inc
pop
out
xlat
inc
pop
js
test
iret
jp
or
jge
repnz
jg
pop
add
fcmovnu
lods
inc
inc
inc
sub
pop
xlat
jnp
mov
pop
neg
push
and
mov
andl
and
adc
mov
add
mov
inc
nop
xchg
icebp
ds
idivb
push
nop
dec
mov
fimull
push
jne
fistpll
cmp
test
out
sti
lret
ficoms
ljmp
es
stos
out
or
jge
callw
cmp
scas
lret
scas
lret
sbb
dec
pop
mov
pop
popl
movsb
mov
cmp
fmulp
dec
mov
fldcw
inc
outsl
scas
jp
fs
inc
rcrb
ds
add
or
push
js
jl
jns
adc
popf
jbe
lret
mov
ss
clc
and
xchg
xchg
add
movsl
mov
adc
sarb
or
cwtl
jmp
xchg
push
stc
enter
sbb
xor
leave
jno
fcmovb
stos
cld
mov
int3
dec
inc
jl
and
xchg
sub
lods
popf
xlat
mov
call
cwtl
decl
pop
fstpl
xchg
lret
inc
sbb
out
fwait
clc
mov
repnz
and
loop
rcrb
shll
shrl
xor
ret
push
push
gs
sbb
cmpl
inc
inc
pop
shll
mov
dec
lods
pop
mov
leave
inc
mov
out
stos
mov
imul
and
adc
ret
push
outsl
movsb
je
out
fptan
icebp
mov
adc
xchg
inc
divl
push
add
sbb
cmp
inc
xor
vpmulhuw
incl
subb
and
adc
inc
jecxz
insb
test
mov
lcall
test
dec
lods
pop
xchg
mov
adc
adc
test
mov
shll
gs
and
loope
inc
adc
push
jg
pop
mov
lcall
xchg
inc
push
test
jae
fdivrl
cli
dec
hlt
in
dec
xlat
movsb
inc
sub
inc
jl
int3
push
cmp
aaa
popf
cltd
leave
out
pop
aas
js
ljmp
int3
loope
push
add
mov
push
xor
pop
mov
dec
cmp
xchg
cmp
daa
out
dec
jno
sbbb
icebp
mov
roll
mov
mov
rclb
dec
push
dec
ljmp
sub
lods
cld
and
push
out
lret
out
aaa
push
adc
push
mov
xchg
add
fidivl
repnz
xor
pop
inc
in
outsb
inc
mov
mov
fldenv
and
push
sarb
scas
mov
repnz
sbb
mov
sbb
ret
dec
ret
pop
test
cmp
arpl
pop
mov
or
adc
pop
test
pusha
rorb
and
test
jbe
out
ss
adc
insb
xchg
jge
cmpsl
clc
xchg
inc
sti
mov
sbb
xor
aas
inc
dec
mov
mov
xchg
adc
fidivrs
pop
ret
imul
movl
in
dec
jnp
or
mov
rol
pop
and
leave
call
rolb
fiadds
nop
pop
adc
jecxz
mull
stos
std
push
mov
xor
lods
test
xchg
std
push
mov
lods
mov
cmpb
jmp
push
jne
mov
jo
addr16
mov
cltd
mov
sbb
movsl
and
mov
dec
insb
cli
ret
aam
sub
inc
nop
push
rorl
push
xor
filds
jecxz
jg
mov
imul
ja
xchg
xor
xor
jnp
repnz
mov
sbb
mov
fcmovb
xor
and
ljmp
loop
or
bound
pop
mov
push
and
shll
mov
lahf
ds
inc
mov
or
frstor
das
call
push
jg
mov
es
mov
mov
insl
out
cltd
xchg
fcoml
fsubrs
in
negb
loopne
mov
inc
icebp
in
shlb
std
or
int3
xor
push
adc
stos
jge
mov
xchg
cli
cmp
das
idivl
and
scas
repz
jb
pop
mov
push
mov
sbb
mov
stc
cmp
dec
cmc
mov
outsl
pop
jmp
or
fdivr
wrmsr
xchg
incb
cmp
and
aaa
repnz
aaa
int
ret
adc
shl
mov
stos
and
in
lret
addl
sub
jl
fs
sub
push
insb
inc
fsubl
leave
call
mov
icebp
sub
cld
ljmp
into
fsin
and
jno
pop
mov
pop
lds
cmc
lea
mov
rcr
or
mov
movsb
fyl2x
imul
fs
lods
jl
test
xchg
int3
pushf
clc
ret
xor
inc
lods
inc
pop
fcoms
enter
mov
jge
out
inc
xor
mov
shll
cmp
jnp
push
sbb
cmp
inc
jae
rorl
xorb
push
and
outsl
hlt
lods
call
mov
push
lds
or
adc
push
imul
fnstenv
xchg
xor
movsb
lods
scas
pop
lods
or
mov
sbb
cld
out
lods
test
xchg
test
cli
in
push
pop
lcall
sbb
test
hlt
fidivl
add
cld
adc
pop
adc
mov
bound
lea
js
movsb
int
pop
addr16
rorb
add
push
add
xchg
add
negb
test
mov
lods
cli
scas
adc
leave
bound
loopne
lret
cld
jp
enter
add
in
mov
in
mov
mov
or
movsl
shll
outsl
or
or
xor
cmc
aad
sub
or
std
inc
jae
ret
stc
testb
pop
inc
in
lret
mov
push
mov
mov
mov
movsb
lock
cmp
inc
adc
shlb
imul
push
mov
sbb
xor
rolb
pushf
pop
jb
dec
fdivrl
push
repnz
dec
sbb
add
dec
aad
adc
dec
test
mov
iret
cmp
stos
add
out
in
scas
inc
mov
pop
arpl
mov
insb
imul
lret
movsl
mov
data16
mov
dec
dec
mov
ret
rcrb
in
inc
pop
adc
sbb
adc
int3
jmp
and
cltd
hlt
xlat
push
sub
pop
aad
and
stos
sbb
xchg
jns
test
jo
insl
inc
sbb
push
bound
and
mov
sti
mov
les
adc
scas
mov
push
sbb
les
gs
insl
sbb
push
out
cmp
cmp
test
scas
repz
jno
xlat
dec
jae
mov
shl
push
in
stc
repz
sbb
or
ss
xchg
dec
jmp
adc
jecxz
int
pop
xchg
xchg
cwtl
xchg
add
or
aaa
jno
ds
stc
inc
cmp
imul
sub
pop
push
std
cmp
push
test
jnp
pop
xchg
xor
outsl
sub
std
xor
rcll
ljmp
lods
stc
inc
inc
fcmovnbe
or
dec
into
xchg
mov
and
push
mov
sti
dec
add
mov
es
test
je
jno
xor
ljmp
in
cmp
and
in
stos
fldenv
cmpsl
pop
into
sbb
popf
outsl
push
bswap
sub
pop
in
fcmovnb
inc
cmp
dec
mov
loop
dec
repnz
inc
mov
call
pop
xchg
cmc
and
pop
pop
mov
insl
mov
jo
cmpsb
jecxz
outsl
sbb
lea
imul
test
and
into
arpl
push
cltd
std
sub
popa
dec
adc
inc
out
adc
adc
fs
pop
or
dec
cmp
push
xor
inc
push
sbb
push
ret
mov
movsl
dec
enter
fists
int3
in
je
pop
nop
pop
xor
dec
negb
inc
add
dec
inc
push
lods
mov
mov
mov
in
mov
je
movsl
pushf
arpl
lcall
pop
fyl2xp1
cmp
inc
outsb
mov
aad
pop
lahf
or
enter
pop
inc
mov
mov
and
sbb
adc
rcll
enter
dec
and
xchg
sbb
push
jno
push
faddl
xchg
sarl
and
ror
andl
sbb
stc
loopne
scas
loope
jmp
cmpsl
push
push
xor
psubsb
nop
xor
cmp
hlt
mov
xlat
imul
std
inc
pop
cld
jns
insb
sub
xchg
cmp
fsubrs
xchg
sti
stos
dec
push
sbb
mov
jl
dec
dec
in
outsl
jno
xchg
push
ds
xor
fs
test
int
inc
pop
lods
adc
pushf
sub
xor
mov
and
jno
cmc
lret
inc
push
cmpsl
mov
out
iret
hlt
cltd
rorl
insb
mov
cmp
sub
call
mov
sub
pushf
mov
inc
mov
cmp
push
lahf
and
arpl
lea
xor
cltd
mov
ja
adc
add
dec
fldenv
shrb
mov
scas
test
jbe
cmp
add
int3
lock
jle
dec
xor
cmp
fstpt
testl
sbb
mov
jne
popa
cmpsl
pop
or
fimull
jmp
or
dec
in
cmp
ja
gs
mov
sub
test
cmp
repnz
div
dec
nop
adcb
aad
sbb
hlt
cmp
leave
xor
dec
lcall
push
roll
and
cmp
incl
or
lods
pop
xchg
rol
cltd
push
dec
addb
movsb
scas
push
popf
add
mov
mov
hlt
mov
push
cwtl
inc
fcompl
stc
push
add
hlt
sub
mov
shl
loopne
mov
mov
xchg
sub
mov
push
mov
pop
fs
cmp
mov
mov
movsl
pusha
adc
add
inc
sub
adc
sti
sbb
leave
aaa
mov
adc
daa
or
orb
xchg
sub
push
inc
call
mov
sub
scas
aam
xchg
adc
lea
jg
sbb
xchg
insl
xchg
pop
dec
movsb
jp
mov
push
xor
adc
push
je
jbe
rcr
adc
sbb
lret
gs
and
cmovg
je
movsb
jle
ljmp
aas
cmpsl
push
lret
in
nop
xor
leave
inc
dec
std
xor
fwait
pop
pop
jl
std
cmp
shll
ret
outsl
push
std
xor
test
mov
and
push
add
test
bound
and
in
in
sub
movsb
dec
add
rcrb
mov
and
icebp
mov
cmp
dec
cmpsl
sbb
pop
orl
push
pop
jb
pop
xor
mov
mov
mov
fwait
loopne
mov
cmpsl
stos
icebp
cmc
fisubrs
push
subl
mov
in
mov
test
testb
xor
shlb
mov
add
mov
cltd
clc
rol
rclb
repz
insb
ds
sub
clc
mov
cmp
sub
faddl
sbb
lcall
hlt
cltd
out
adcl
nop
cwtl
adc
imul
or
mov
push
jbe
cmc
dec
sbb
fnstenv
sbb
scas
sbbl
int3
xchg
aam
xor
leave
icebp
psllq
lock
sti
fstl
jl
push
cmp
or
mov
cmp
bound
lret
jge
push
mov
gs
mov
fstl
push
fistps
sub
mov
addr16
fldpi
jmp
jecxz
jle
sub
push
push
sti
cltd
xchg
jb
fmul
cmp
inc
mov
xor
loope
stos
mov
jb
xchg
push
cld
and
mov
ret
test
add
dec
test
nop
inc
and
test
mov
ja
xor
adc
leave
push
push
aad
inc
mov
out
mov
inc
scas
mov
mov
mov
jle
aam
jno
cmpsl
cmpl
mul
push
in
call
pushf
mov
lea
push
insb
icebp
loop
pop
mov
cli
dec
test
lods
ds
mov
cltd
inc
leave
cltd
iret
jp
sbb
mov
pop
mov
inc
jne
push
jge
jle
sub
pop
pushf
imul
les
call
adc
mov
mov
aas
cmpsb
mov
js
sbb
xchg
mov
into
jecxz
ds
pop
dec
add
movsl
jp
jle
sti
or
dec
fildl
push
mov
mov
cwtl
pop
punpckhdq
popl
xor
xchg
sbb
fimull
fwait
out
icebp
outsl
loopne
xor
inc
sub
rep
icebp
cmc
inc
add
fwait
inc
cs
sbb
cltd
int3
mov
paddw
dec
adc
call
mov
cmp
ficoms
or
sub
std
dec
int
out
sbb
sub
xchg
mov
flds
inc
lods
aam
sbb
push
subb
outsl
stos
ret
icebp
mov
cld
push
and
leave
adc
inc
in
xchg
sbb
pop
jne
notb
and
sarb
lea
mov
jp
add
cld
or
mov
fcomi
dec
pop
mov
test
pop
cs
push
and
in
inc
jae
jle
aas
or
ss
sub
outsb
repnz
call
cmp
dec
int
icebp
ss
jbe
xchg
fdivs
idiv
int3
iret
repz
cs
stos
mov
jae
sbb
sub
inc
popa
repz
scas
sahf
add
cmpsl
cmpsb
fildl
jmp
int3
xor
sahf
xor
ds
lods
out
xlat
mov
mov
xchg
enter
mov
fadds
fsub
fcoml
rcrl
arpl
test
out
and
stc
ljmp
adc
aam
mov
js
scas
jmp
mov
push
xchg
imul
mov
pop
cmp
notl
stc
je
pusha
ss
mov
in
or
call
cli
pop
xlat
xchg
lods
push
pop
fstpl
xchg
int
and
mov
mov
jl
jne
pop
ret
mov
lahf
imul
jl
mov
les
mov
push
aaa
stc
movsl
jns
mov
int
mov
lds
xchg
jo
arpl
test
inc
add
xor
pop
or
rolb
cltd
and
mov
add
and
mov
mov
lret
mov
dec
faddl
xchg
js
sub
fcompl
cld
icebp
pop
outsb
xchg
out
fdivs
adc
shl
dec
jne
out
cmc
jmp
ficoms
sbbb
popl
cmc
pop
loopne
mov
adc
lock
in
ss
aam
xor
jmp
add
push
inc
movsl
mov
les
push
dec
add
aad
cli
outsl
das
pop
pop
scas
push
cmc
and
push
daa
pop
in
cmc
lds
lahf
sbb
sbb
loopne
iret
loope
xor
lcall
call
cmp
loopne
xor
lods
xor
std
add
cld
out
fisttps
dec
and
adc
mov
inc
cmp
adc
gs
inc
sbb
movsl
clc
push
aad
mov
notl
push
xchg
test
mov
mov
arpl
push
std
ds
push
sarb
lahf
mov
mov
jmp
scas
imul
in
stc
repz
push
cli
rorl
cmp
xchg
clc
js
and
xchg
sahf
cli
add
mov
dec
and
leave
ljmp
cmp
inc
fwait
ja
xor
pushf
popa
xor
mov
loopne
in
add
popf
cld
insb
mov
dec
call
neg
sahf
lahf
jno
jle
jg
or
cmp
scas
mov
out
push
xchg
aam
push
mov
ret
ja
iret
loope
inc
pop
aam
inc
sbb
jge,pt
sub
test
add
and
pop
inc
xchg
fisttpl
adc
lock
mov
push
adc
push
mov
jbe
testl
pusha
jo
inc
dec
out
jge
test
enter
mov
or
dec
sbb
and
lret
clc
iret
push
pusha
out
sbb
inc
jo
jl
test
mov
addb
xor
cmc
out
iret
pop
pop
fnsave
push
mov
test
or
cwtl
into
pushf
jle
push
pop
jl
cmpsb
mov
mov
sub
sub
out
jl
inc
mov
and
rorb
movsb
stos
xchg
cmpsl
dec
jmp
fldt
push
mov
add
sbb
bound
cmp
mov
fdivs
aaa
cltd
xor
cmp
mov
pop
cmpb
inc
nop
mov
cwtl
pop
scas
add
mov
dec
popa
aas
xchg
add
clc
inc
stos
loopne
mov
sarl
sub
arpl
push
pop
push
xlat
out
mov
idivl
jns
shrb
in
inc
push
aam
rorb
fdivr
les
cmp
sub
mov
call
mov
pop
add
mov
pop
nop
push
das
outsb
mov
mov
adcb
jp
shll
sub
jmp
cmp
das
inc
mov
sar
int3
clc
lods
vmread
mov
aas
dec
dec
scas
lret
add
add
cmp
jecxz
push
push
inc
mov
cmp
jl
repz
aaa
push
push
xlat
in
stc
jne
and
outsb
mov
cs
or
adc
inc
xor
sbb
mov
xor
pmullw
test
sbbl
fbld
and
cmpsl
xchg
lods
out
add
lret
and
fistl
mov
test
and
adc
bound
and
in
inc
in
xchg
test
jge
xor
push
test
fwait
pop
in
jmp
mov
fmull
arpl
std
addr16
jg
les
mov
xchg
call
or
xor
mov
and
insb
bound
dec
xchg
xchg
test
fucomip
push
rclb
push
mov
adc
in
add
mov
lods
xor
rcrl
loope
fsubrs
pop
sub
dec
jnp
insb
sub
hlt
ds
int
cmp
iret
test
lods
sub
jmp
rorb
mov
movsl
jge
imul
pop
cmp
les
inc
cmpsb
mov
push
inc
in
pop
and
push
mov
movsb
test
movsl
dec
cmpl
outsl
add
mov
test
imul
mov
ffreep
faddp
ljmp
leave
push
push
push
xor
outsl
pushf
scas
push
xor
or
and
dec
jmp
scas
insl
mov
dec
aam
mov
data16
pusha
xchg
jge
mov
xchg
inc
sub
cld
rorl
pop
hlt
mov
mov
cld
sub
pop
aam
ljmp
scas
aaa
add
ds
jb
lret
and
insb
jmp
mov
cmp
mov
pop
xchg
and
jmp
dec
and
sub
mov
dec
lea
es
sub
sarl
or
sti
mov
xchg
pop
std
mov
gs
mov
mov
lahf
dec
nop
dec
or
jne
cli
mov
clc
jl
pop
add
ja
push
jne
xor
dec
loop
rolb
daa
adc
mov
jae
out
inc
lea
push
cwtl
push
inc
lea
and
dec
in
ljmp
push
pop
adc
mov
sbbl
and
adc
out
cs
dec
stc
call
movsl
stos
cmp
pop
out
inc
shl
mov
dec
lret
iret
mov
xor
mov
adc
test
add
or
mov
cmpsb
je
jns
ja
mov
xor
enter
fst
inc
hlt
add
jnp
jo
xchg
push
or
test
add
nop
add
xor
lcall
inc
lods
xor
adc
jnp
ljmp
inc
mov
dec
test
add
pop
adc
and
pushf
or
xor
dec
lods
add
pop
push
imul
dec
and
imul
loopne
pop
lahf
jae
add
sbb
popf
imul
add
lcall
lods
adc
sub
int3
inc
and
dec
cmp
test
stos
sbb
insb
mov
out
push
xchg
aas
sahf
sti
incb
sub
add
sbb
cmp
push
mov
or
sbb
nop
add
rclb
ficoml
jb
adc
inc
add
lret
in
addr16
and
bound
nop
testb
ljmp
add
mov
sub
jno
xor
push
adc
sbb
out
or
rolb
dec
dec
add
mov
lods
in
push
arpl
jecxz
cli
shrl
test
push
adc
push
mov
iret
xor
popf
cmp
jne
adc
in
outsl
cmpsl
xor
fadd
push
in
inc
sub
add
hlt
mov
mov
movsl
stos
jle
add
push
sbb
movsl
xor
xchg
xchg
add
sbb
inc
adc
dec
xchg
mov
jg
pop
dec
mov
adc
jmp
or
fsubr
jno
imul
and
xchg
std
cmp
xlat
outsl
les
jmp
push
sub
fdivs
jmp
repz
mov
ss
int3
xchg
xor
fprem
mov
out
lds
mov
inc
jbe
mov
test
lock
mov
lea
adc
pop
pop
push
or
add
in
shrb
inc
or
mov
push
mov
mov
incb
aad
jmp
or
jns
into
fs
into
xor
sbb
jne
push
outsl
xchg
addb
fsub
lock
test
js
cmp
arpl
imul
rorb
mov
xchg
movsl
mov
or
fldcw
imul
jge
lea
jge
cmpl
insl
jae
scas
jo
hlt
aas
inc
dec
inc
jmp
or
push
enter
bound
dec
repnz
fs
negl
aas
pop
ret
cmpsl
lcall
scas
adc
sahf
cwtl
jb
lds
mov
aaa
outsl
mov
pushf
out
push
dec
lods
or
clc
jecxz
stos
fs
cmpsb
jmp
shll
clc
adc
arpl
das
cli
scas
movsl
imul
push
jp
call
lret
iret
jmp
mov
or
jae
add
aad
or
xchg
adc
jno
sar
fadds
jl
or
or
mov
sbb
xchg
in
push
mov
scas
ret
cli
mov
dec
cmp
cmc
dec
xchg
sbbl
das
movhlps
dec
jno
stos
push
mov
sub
push
in
inc
jl
jge
aam
pop
popa
je
xchg
mov
mov
cs
mov
xchg
mov
fisttps
pop
icebp
jbe
out
in
xor
out
loope
call
dec
stc
cmp
testl
jle
daa
jle
push
and
jecxz
es
sbb
sbb
mov
push
cmc
push
les
mov
sti
pop
int
xor
mov
jmp
cmp
mov
pop
stc
clc
or
add
cmp
pop
leave
enter
cmpl
xchg
mov
imul
es
loopne
test
cmpsl
fwait
add
sub
les
int
les
clc
pop
sbbl
mov
or
mov
jo
test
jo
adc
sub
mov
inc
jns
les
add
inc
cmp
push
jbe
stos
jbe
enter
and
sbb
mov
popf
leave
jmp
faddl
in
or
mov
arpl
pop
mov
jb
inc
pop
push
cmp
movl
jge
jecxz
leave
imul
inc
rol
pop
add
out
mov
xchg
ja
std
xchg
out
in
xor
jg
cmp
cltd
in
mov
dec
outsl
mov
mov
sub
sbb
jns
pop
mov
decb
push
add
aam
push
movsl
cs
dec
ss
lcall
test
lds
mov
mov
xchg
pop
mov
repz
mov
repnz
push
das
xor
insb
enter
inc
aam
xchg
imul
add
ret
mov
addb
out
loopne
jnp
lods
scas
out
loopne
push
fdivs
jge
mov
sbb
ss
mov
in
lea
add
cs
mov
mov
add
iret
out
pop
jg
jmp
in
sbb
insl
cld
test
jecxz
jecxz
rcrb
mov
out
aam
fldl
int3
jne
daa
sub
in
adc
jo
push
das
fcomps
inc
mov
fnstsw
movsl
icebp
in
jns
add
xchg
dec
adc
roll
xor
sub
pop
mov
out
jle
xor
dec
arpl
cltd
fsubp
push
or
mov
xor
mov
sub
add
fidivs
mov
fsubs
add
mov
add
dec
add
shrb
adc
pop
rorb
add
test
hlt
adc
mov
push
cld
jbe
out
dec
bound
in
ljmp
pop
and
popa
add
xor
mov
or
dec
inc
dec
icebp
push
mov
scas
loopne
pop
cmp
xchg
push
cltd
jne
add
push
mov
es
add
mov
mov
fwait
jle
rcll
xchg
ds
in
pop
cmc
xchg
lock
loopne
or
sub
in
inc
rorl
sbb
mov
out
add
ret
mov
or
add
inc
dec
adcb
test
mov
fwait
mov
lret
sarl
adc
cmpsl
sbb
jecxz
pop
cwtl
xor
ljmp
fsubrp
rcll
movl
cmc
mov
bound
fs
stc
push
cld
dec
stc
out
rcll
aad
scas
orl
pop
add
cmp
repz
fldenv
xchg
jno
inc
sub
loop
cld
dec
sub
outsb
cmp
mov
sub
jmp
test
stos
lret
ror
ret
jp
xlat
nop
adc
ret
insb
dec
ror
aaa
pushf
out
push
in
jmp
cmc
dec
rolb
xor
testl
rclb
cs
lret
test
or
cmp
ret
or
jge
test
cmp
cmc
add
nop
and
sahf
filds
dec
ss
inc
iret
daa
pop
mov
lods
fistps
or
sub
mov
dec
gs
and
and
push
or
mov
mov
sarb
popl
movsb
mov
sbb
mov
cli
sub
push
mov
jle
aad
dec
lret
jg
rol
xchg
and
pusha
pop
scas
ret
dec
bound
rclb
in
adc
ret
xchg
add
dec
push
fidivl
add
gs
out
adc
mov
jp
daa
insl
insl
dec
pop
sbb
bound
push
test
insl
sbb
mov
bnd
js
int
jne
sbb
jl
ret
and
xor
or
mov
mov
jl
cmpsb
dec
jecxz
push
cmp
xlat
into
std
add
into
jbe
or
cli
xchg
xchg
das
mov
data16
pusha
lock
inc
repz
pop
shll
xor
inc
and
sbb
sub
iret
fistpl
pop
xchg
rcrb
and
add
fadd
cld
mov
imul
add
mov
jno
and
imul
xchg
pop
push
mov
adc
pop
nop
enter
cld
movsl
adc
adc
adc
in
sub
into
stc
cs
jl
pop
mov
iret
mov
mov
jg
and
in
add
pop
js
or
pop
sub
or
inc
sub
loop
cmpsl
inc
popa
sub
lcall
push
lods
test
inc
jle
arpl
in
aas
icebp
mov
xor
int3
cltd
andb
and
mov
mov
sbb
addb
clc
popf
in
in
mov
lds
mov
ret
fldcw
dec
pusha
std
cmpl
imul
js
dec
in
xchg
fsubrp
lahf
dec
pop
cld
xor
push
pushf
test
or
stos
jmp
pop
mov
mov
cmp
inc
ljmp
sub
mov
push
and
mov
xor
jnp
dec
ror
cmpl
push
lods
adc
fstpt
sarb
mulb
xor
pushf
out
bound
out
mov
xchg
xchg
pusha
mov
cld
bound
jg
xchg
fsts
js
cmp
loop
imul
inc
cwtl
adc
outsl
loope
movsb
les
mov
sub
add
xor
notl
jno,pn
out
dec
mov
popf
cltd
dec
pop
and
pop
sub
int3
popf
push
inc
loop
cli
bound
sbb
mov
xchg
ds
std
mov
xchg
mov
pop
outsb
fbstp
cmp
add
dec
test
pop
ret
daa
dec
mov
mov
jmp
insl
orl
and
pop
pop
es
insl
fmuls
lea
pushf
or
clc
in
jge
add
rcr
aam
out
rol
jb
shlb
popf
stos
dec
bound
sarl
or
xchg
int
adc
or
and
out
sub
ljmp
cld
sub
nop
push
pop
hlt
add
loope
ja
insl
je
test
aad
push
daa
jmp
fcomp
das
sti
sub
mov
loope
sub
call
add
jmp
dec
pop
xchg
add
jle
mov
lcall
mov
push
push
sbb
cmp
sub
cmpsl
xchg
inc
stos
aaa
lret
in
xchg
push
shrl
jmp
jo
mov
xorb
lret
dec
inc
xchg
dec
pop
sub
cmp
or
push
enter
pop
xor
das
ds
xchg
xor
adc
out
sub
gs
in
or
movsb
inc
push
mov
mov
adc
fdivrp
xchg
sub
xlat
sub
and
dec
jnp
pop
jne
cld
sub
jl
add
addr16
in
pop
jo
xorb
add
shl
mov
mov
aaa
and
daa
mov
pop
enter
push
sbb
jle
mov
mov
or
outsb
dec
adc
lock
mov
push
cmc
sbb
inc
clc
int3
cs
pop
test
push
pop
push
push
pop
mov
adc
or
ljmp
inc
mov
push
or
out
add
push
mov
sbb
ds
xor
xchg
xlat
xchg
iret
sbb
enter
inc
leave
pop
and
mov
std
sbb
push
rorl
inc
mov
rcrb
cltd
pushf
cs
test
mov
pop
loopne
add
mov
pusha
test
inc
and
lahf
xchg
inc
inc
inc
mov
mov
std
cmpsb
je
stos
mov
mov
int
or
add
sub
xchg
and
lods
pop
movsb
mov
stos
outsb
dec
mov
sub
adc
pop
out
stos
icebp
enter
jmp
add
bound
pop
inc
xchg
in
arpl
nopl
push
shrl
clc
and
mov
push
xlat
out
icebp
imul
pusha
add
ror
add
or
mov
cmpsl
jo
xchg
jne,pn
movsb
push
sbb
mov
mov
shrb
out
out
jo
or
in
shr
fsubrp
out
jne
push
pop
pop
shll
cmp
in
xchg
sub
mov
cmp
stc
dec
inc
xchg
adc
insb
fidivs
pop
or
push
movsb
push
mov
fsubl
add
xchg
sbb
cmpsb
jne
mov
pop
shlb
addr16
outsb
or
aad
cmp
nop
fcomi
sbb
dec
mov
pop
leave
out
ljmp
dec
mov
or
xor
daa
mov
jnp
nop
ret
sub
fs
clc
imull
js
fisttps
mov
adc
xor
jecxz
and
sbb
je
xchg
xchg
rcrb
xor
push
dec
inc
out
push
scas
adc
outsb
out
cmp
scas
data16
mov
xor
or
mov
je
push
sub
sbb
fdivrl
fidivrl
jge
repz
insl
mov
andb
xor
lods
enter
mov
stos
repz
into
mov
aad
mov
cmp
das
jae
fisubrl
fcoms
dec
and
push
xor
mov
xchg
dec
mov
lods
mov
pop
or
pop
sbb
cmp
out
ret
push
xor
mov
push
popa
xchg
iret
orl
lods
test
push
cmp
mov
in
outsl
add
pop
xchg
rcll
bound
iret
inc
push
cmpsb
loopne
xchg
cmp
mov
ja
add
and
xchg
mov
jl
das
push
call
scas
push
out
pop
loopne
cwtl
inc
ss
push
sbb
cld
cmpsl
jg
cmpsl
adc
jl,pt
xchg
push
fcmovnu
pop
repnz
push
push
xor
xchg
test
ror
jae
mov
inc
inc
scas
xor
or
stos
aad
ret
and
push
mov
das
aaa
cmc
pop
sub
cmp
iret
dec
cmp
jnp
xchg
jno
cmp
jle
jbe
test
xchg
insl
jge
xchg
push
xorb
inc
add
fdivs
mov
cmpsb
popa
cld
fistpl
out
loopne
int
lahf
ffreep
cmp
sbb
aas
inc
leave
push
lods
rcl
pop
bound
in
mov
and
hlt
mov
out
xchg
push
push
ja
inc
mov
mov
pop
insl
mov
mov
fmull
push
sti
xorb
jmp
xor
mov
or
lret
loopne
xchg
test
mov
sarl
dec
push
js
daa
mov
jo
sarl
sub
int
sub
push
sbb
jle
or
les
rsqrtps
or
mov
mov
popf
shl
paddsw
ss
jne
or
cs
add
js
pop
lahf
ljmp
rcl
pop
sbb
cmp
adcl
dec
xor
xchg
in
fsubrl
insl
sahf
mov
das
jmp
or
add
adc
fprem1
jle
fstpt
je
mov
sbb
add
cwtl
push
mov
xchg
add
dec
xchg
push
ror
outsl
iret
fucomp
mov
sub
cmp
xor
int3
jb
push
inc
push
sbb
jno
xor
loope
rclb
sub
bound
dec
faddl
popa
mov
movsl
or
and
adc
fisubrl
and
es
xor
flds
fistpll
xchg
ljmp
lret
push
test
jns
adc
aam
cwtl
stos
mov
fwait
xchg
mov
mov
je
mov
outsb
cmp
sub
roll
jl
mov
aas
mov
rcll
in
jmp
rol
add
insl
xor
addr16
xchg
call
fnsave
push
fsubrl
idiv
aaa
sahf
std
xchg
call
pop
addr16
pop
cmp
push
jle
rolb
int3
data16
fiadds
xchg
sbb
xchg
xor
fisubl
lock
in
outsb
cltd
push
sti
int
jg
loope
pop
adc
fwait
insb
fisttpl
xor
lock
xchg
mov
sub
in
adc
jno
cmp
scas
xor
adc
jnp
mov
add
popf
mov
and
xchg
scas
dec
jbe
leave
loope
scas
pop
lret
movsb
movsb
aas
xor
ret
xor
nop
or
inc
sbb
jmp
pop
xor
or
mov
pop
std
sbb
push
lahf
push
ds
or
pop
mov
pop
arpl
xor
fadds
xlat
cs
pop
or
lods
insl
clc
push
iret
and
sahf
jo
sar
pop
sub
stos
fldenv
test
movsb
scas
loop
pushf
xchg
imul
jg
push
negl
nop
lock
sub
js
jl
jo
add
and
mov
outsb
rorl
pop
daa
xchg
insl
dec
adc
es
xor
sbb
xor
ljmp
das
bound
xchg
jnp
mov
push
push
dec
push
pop
adc
cld
add
test
dec
clc
inc
and
or
mov
inc
es
xlat
in
jg
inc
movsb
repnz
push
popa
fisttps
inc
pop
ja
leave
notl
aad
in
jmp
hlt
mov
outsb
cmp
push
out
mov
popa
jp
ja
ds
dec
xor
lret
xchg
out
rolb
imul
mov
lea
dec
jecxz
mov
mov
cs
sbb
push
rcrb
outsb
mov
mov
shlb
mov
hlt
cli
es
imul
fdivl
fcomip
cmp
dec
pop
imul
aad
cmp
fidivrs
test
ret
add
jl
insl
test
xlat
cmp
jns
adc
xor
xchg
test
jns
cld
jmp
push
xorb
fs
int
jmp
pushf
cmp
push
xchg
and
sahf
add
xchg
and
mov
sahf
add
mov
loope
rclb
nop
pop
push
xchg
cli
xchg
xor
jno
mov
xor
inc
xchg
cmc
xchg
lahf
inc
dec
mov
cli
les
adc
add
and
cmp
stc
lods
ds
sti
insl
or
mov
fnstsw
out
stos
adc
outsl
cltd
lret
dec
mov
pop
cmp
mov
mov
fiadds
lods
data16
loope
jo
pusha
xchg
aas
je
f2xm1
jo
icebp
xlat
xor
adc
pop
in
inc
and
shlb
push
inc
mov
dec
xchg
push
andl
dec
jle
les
sub
adc
repnz
pop
call
fdiv
rcrl
add
int
and
leave
cltd
xchg
xor
out
lods
jns
cmp
roll
js
dec
mov
mov
inc
pop
pusha
mov
cmpb
sbb
into
lret
adc
add
jp
lods
adc
mov
pop
push
or
inc
mov
clc
sub
mov
arpl
xor
jo
adc
mov
push
sbb
enter
shl
dec
jnp
mov
or
ret
test
mov
test
je
mov
int
lsl
mov
jae
adc
mov
push
xlat
mov
lds
enter
inc
jp
xchg
jge
inc
sbb
pushf
mov
pusha
sbb
sahf
out
and
or
dec
add
fwait
cli
aaa
jp
dec
fildll
lods
aad
sub
sbb
fsubrp
mov
fwait
rdmsr
adc
sbb
out
add
and
int
bound
pusha
fwait
pop
cli
cli
fimuls
sbb
mov
mov
stos
popf
cli
popf
cli
cwtl
jmp
dec
cmpxchg
jbe
imul
mov
repz
int3
jp
lcall
out
rorb
dec
mov
inc
jp
adc
lods
outsl
lcall
mov
pop
lods
jl
es
test
je
cmp
insb
lods
sub
jae
rorb
mov
cmc
mov
sbb
sbb
orb
imul
sub
cmpsb
mov
add
adc
mov
cld
push
pop
pop
pop
pop
adc
push
out
sub
push
sarl
adc
jns
nop
sbb
sar
or
fisttpll
je
out
dec
arpl
push
adc
lods
add
in
popa
xchg
mov
jecxz
mov
sbb
cmp
xor
jb
mov
and
cmpl
mov
sbb
fldt
das
push
mov
jmp
ds
stos
incb
movntps
nop
out
push
dec
call
rcll
push
inc
cmp
xorl
les
fwait
popa
pusha
cmp
dec
xchg
mov
mov
loopne
pop
xchg
xchg
push
or
inc
xchg
inc
fisubrl
xor
mov
add
xchg
pushf
in
sbb
xor
xchg
inc
cli
push
add
jne
xchg
dec
pop
roll
xor
js
stos
movsl
je
mov
adc
jnp
pop
mov
or
mov
insb
xchg
fs
gs
pusha
lea
mov
dec
mov
dec
std
pop
pushf
push
and
clc
cmp
push
ljmp
jnp
fcoms
and
push
in
jg
sbb
xlat
test
shlb
adc
xchg
fcomi
ja
mov
ret
inc
mov
lret
pop
mov
add
xchg
add
jp
and
dec
mov
fmuls
fwait
and
imul
pusha
addr16
push
push
jg
in
xlat
jecxz
push
imul
xor
cmp
fdiv
mov
push
sub
mov
xchg
or
in
rol
mov
in
jnp
notl
leave
jg
lahf
adc
fcmovb
sbb
xor
jg
lahf
fnstenv
lahf
dec
insl
pop
mov
push
jne
cmp
xchg
push
inc
jmp
adc
and
arpl
adc
sbb
mov
push
iret
pop
out
mov
popa
push
jbe
hlt
jae
push
lds
push
or
xor
xor
dec
or
push
or
out
sbb
dec
and
xchg
int
xchg
xor
mov
leave
pop
sbb
ret
push
das
xchg
hlt
lods
mov
sbb
dec
lahf
in
fisttpl
jo
jg
jecxz
pop
xchg
mov
mov
iret
pop
pop
push
jae
xor
mov
inc
xchg
movsb
hlt
push
push
stos
aad
mov
std
rclb
sbb
add
mov
std
mov
inc
dec
loope
sub
sbb
shll
lret
iret
jg
push
inc
mov
int3
jmp
xchg
xchg
ret
push
popa
mov
data16
stos
jnp
andb
lret
dec
and
cmovs
push
stc
push
or
cs
jo
cld
fcomp
loopne
gs
inc
shrl
mov
sbb
ja
shrl
popa
mov
stc
test
jg
and
jl
sbb
cmp
push
mov
std
lea
xchg
ficompl
mov
in
push
pop
fwait
push
iret
pop
lods
ljmp
xor
and
sbb
lcall
xlat
ljmp
mov
in
imulb
push
jge
scas
psraw
hlt
inc
cli
jecxz
push
jecxz
rol
aas
mov
dec
mov
daa
or
paddusw
inc
fstps
mov
iret
mov
aas
stos
add
adc
or
push
push
lahf
pop
push
mov
es
fldt
mov
and
mov
rep
mov
mov
cmc
inc
inc
xchg
dec
cmp
or
pop
mov
lea
fldl
js
or
and
mov
pop
mov
ret
and
add
cmpl
mov
inc
or
data16
sub
pop
sbb
dec
mov
xchg
in
fldl
pop
pushf
lea
repz
or
vhsubpd
sub
into
adc
xchg
adc
add
jecxz
fldt
fsubr
insb
and
push
outsb
or
nop
mov
sub
add
jo
jb
pop
test
lcall
das
and
push
cmpb
jg
sbb
jae
es
jle
rcrb
mov
adc
arpl
lcall
mov
dec
stos
jmp
fildl
movsl
xchg
fstps
pop
jle
lahf
cmpsb
push
xchg
test
dec
pop
in
xchg
movsl
fwait
das
loope
or
jne
push
push
mov
sbb
mov
cmp
cmp
pop
push
sarl
test
data16
movsl
sub
sub
daa
adc
int3
push
das
aam
call
jle
xchg
mov
movsl
es
add
xchg
scas
add
mov
mov
inc
cmpsb
cmp
loope
xor
bound
imull
dec
cmp
out
pop
mov
cmp
test
sbb
inc
jmp
inc
pop
nop
mov
jmp
cmp
or
mov
and
xchg
lods
cld
and
adc
lea
mov
jo
nop
xchg
lods
aad
out
jns
mov
pop
test
fwait
outsb
je
std
mov
inc
cmp
lcall
fimuls
mov
sub
xor
scas
mov
lea
es
cmp
cld
push
cli
es
mov
mov
imul
adc
pop
add
ret
dec
cltd
mov
prefetch
bound
scas
mov
das
popf
dec
cmp
inc
mov
aas
xor
es
pop
pusha
inc
lret
jno
mov
lcall
jmp
pop
pop
push
gs
js
cmp
and
das
mov
push
inc
mov
sbb
cld
data16
lea
push
fcom
shlb
stc
inc
aas
sbb
sarb
pop
add
pop
test
sbb
jae
cwtl
pop
push
push
add
xchg
mov
xor
jne
loope
jge
mov
add
mov
sbb
inc
iret
xor
push
or
ret
adc
sbb
leave
pop
xor
and
loopne
push
dec
mov
push
pop
outsb
enter
jge
jno
jg
inc
push
inc
pop
popl
insb
mov
sti
push
xchg
shll
addl
insl
test
xchg
and
ljmp
rorl
lcall
std
daa
mov
inc
ret
insl
fs
and
mov
mov
mov
lret
push
lcall
cmovs
pop
pop
aaa
lahf
or
xchg
jbe
ret
fadds
call
hlt
popf
pop
jg
inc
xor
lcall
stos
loope
xchg
and
add
dec
lret
xchg
arpl
stos
mov
mov
and
xor
sbb
mov
and
sbb
xor
in
data16
shrb
xchg
in
aad
mov
ficoml
fdivrs
push
and
mov
mov
inc
mov
adcb
std
sbbb
cli
xchg
mov
push
fldcw
sub
xchg
inc
jnp
mov
dec
mov
xor
imul
and
push
pop
in
mov
std
dec
ret
stc
addl
inc
jno
roll
cmp
push
das
sbb
ret
dec
adc
sbb
xchg
xchg
addr16
mov
out
jmp
and
movsb
cmp
cmp
addl
frstor
mov
jae
ret
inc
scas
xor
xor
sahf
jle
sti
out
orl
lcall
hlt
lea
push
fstpt
cli
jmp
jo
mov
jb
lret
adc
inc
cmpsb
inc
mov
lret
jmp
xor
roll
and
pop
pop
pop
sub
lea
mov
jne
shl
jg
jns
sbb
dec
mov
mov
dec
je
dec
adc
add
jno
fsubrl
cld
lods
xchg
fwait
shll
jbe
mov
sub
cmpsb
das
fcmovne
pop
adc
xor
push
lcall
fildl
adc
mov
shl
insl
mov
pop
dec
xor
daa
inc
push
stos
test
mov
sbb
adc
adc
decb
push
roll
or
lods
push
inc
in
and
adcl
add
push
in
cs
stos
stc
inc
jp
xor
in
mov
shlb
ss
and
pop
push
repz
shll
push
jns
pop
xchg
xchg
fistpl
ret
shrl
xchg
push
cwtl
stos
testl
jge
push
movsb
pop
fwait
fs
fs
in
sub
leave
jno
pop
adc
sbb
in
jge
fcoms
ss
cmp
test
and
mov
jl
cmp
aad
mov
ret
ret
je
push
pop
jle
jmp
sub
jae
daa
xchg
data16
std
dec
inc
add
ljmp
and
cmp
insl
cmpl
rcll
jns
fabs
push
pop
jp
shrb
push
pop
or
cmp
dec
fildl
loop
jns
mov
out
jge
inc
sbb
sub
xorb
pop
scas
lcall
mov
and
arpl
mov
xor
and
or
les
mov
jb
ficompl
or
imul
data16
add
mov
addr16
in
ret
adc
jnp
jns
mov
pop
ficoms
push
sarl
lret
ss
push
and
mov
movsb
ss
jg
jecxz
lret
movsb
mov
pop
scas
ffree
pop
sub
fadds
sub
sbb
in
rorb
xchg
lret
in
aad
jecxz,pt
sbb
das
inc
ljmp
pop
imul
or
mov
jg
add
or
cmp
cmpsl
out
shll
fxch
outsb
lds
imul
mov
out
push
adc
lcall
in
pop
shlb
test
pop
sub
jo
shrb
dec
je
pop
jae
xor
xor
in
loop
mov
decb
cmpsl
pop
xor
movsb
cmp
or
cli
jo
sbb
push
ret
sub
andb
pop
cmp
push
int3
cwtl
mov
leave
dec
daa
lret
jae
insl
cmp
add
jg
mov
xchg
dec
jb
in
repnz
mov
ds
xorl
fldl
xchg
adc
lret
inc
movsb
popa
loop
sub
lods
adc
mov
shrl
popf
inc
mov
arpl
jmp
enter
dec
mov
sbb
enter
sub
neg
mov
jl
mov
sub
ret
dec
stc
fimull
mov
xor
sbb
call
mov
mov
frstor
cmp
mov
in
mov
enter
inc
stc
repnz
call
xor
sbb
push
push
fstl
les
push
sar
mov
mov
jl
and
sub
lods
cmp
mov
cmp
jl
jb
lret
inc
dec
mov
fisttps
and
insl
daa
pushf
dec
cmpsl
pushf
add
std
es
mov
das
stos
xchg
enter
jbe
xchg
push
shll
jb
jecxz
js
and
jne
inc
mov
and
hlt
pop
or
mov
gs
inc
pop
push
or
jae
jb
int3
cmp
sub
xlat
jne
fstps
sub
pop
rclb
jge
lahf
mov
leave
or
dec
fs
or
jl
inc
mov
mov
popf
fidivl
pusha
cltd
jo
and
and
sub
mov
pop
addr16
or
sub
out
lret
cmp
lcall
dec
enter
test
mov
out
insb
fistpl
fists
sbb
push
xchg
ja
mov
sti
pop
fcmovbe
aam
pop
push
in
mov
mov
in
test
jbe
stos
aas
test
mov
jg
sub
arpl
xchg
icebp
mov
add
add
mov
mov
or
repz
mov
rcll
repnz
movl
bound
push
mov
xchg
push
leave
or
and
adc
mov
ja
mov
outsb
xchg
sub
add
dec
cmpl
cmp
push
mov
jns
and
mov
push
in
mov
sahf
ret
aam
sbb
stos
clc
sbb
mov
push
in
xor
pop
test
or
je
clts
mov
into
in
sub
loop
call
popf
jae
ja
std
fbld
pop
add
ret
lods
inc
add
or
notl
push
and
push
pop
jns
call
jne
stos
xchg
push
mov
rcll
or
adc
sub
and
add
out
dec
adc
movsl
cwtl
fucomp
or
lea
pop
inc
pop
mov
adc
xchg
sbb
push
cmpsb
mov
je
adc
jbe
sub
pusha
mov
std
push
pusha
lds
pop
out
roll
add
push
loope
sub
adc
bound
js
adc
in
xchg
mov
test
pop
dec
bound
mov
sub
push
daa
scas
repnz
call
lret
aas
jae
push
sbb
outsb
mov
fwait
dec
jns
mov
das
adc
mov
dec
imulb
in
push
das
cltd
sub
xor
inc
out
stos
sti
add
jae
sub
cmp
fsub
mov
adc
loopne
sbb
in
stos
paddusw
fcomip
je
lahf
inc
or
gs
repnz
sbb
mov
push
movsb
or
clc
sbb
jne,pn
mov
add
or
test
lock
cmpsb
sub
inc
dec
fisubs
xchg
lds
movsl
xor
or
ljmp
push
imul
lret
xor
lds
enter
decl
lret
cmp
or
lahf
ds
jmp
pop
dec
andb
lret
push
dec
daa
mov
pop
out
sbb
outsl
lcall
and
xchg
mov
lahf
mov
call
xor
push
sbb
and
add
mov
insl
mov
aaa
mov
fisubrs
rol
or
xchg
aaa
test
xchg
mov
add
imul
outsb
outsl
call
enter
mov
jb
jnp
sub
mov
push
sub
mov
dec
inc
cmp
and
dec
lods
in
push
cmp
je
or
add
ret
out
ljmp
ret
popf
sub
pop
andb
inc
pop
mov
pop
lcall
lret
loopne
daa
dec
mov
and
lret
dec
sahf
pop
xor
outsl
push
or
xchg
xchg
push
aas
imul
inc
mov
jecxz
aas
lcall
xchg
mov
daa
pavgb
das
xor
sub
xlat
or
js
mov
inc
imul
daa
sarb
push
pop
out
incb
fwait
enter
cmpb
hlt
fldl
mov
mov
pop
pop
sub
cmp
in
popf
cmp
xchg
insb
push
movsb
pop
mov
int3
mov
cmpsb
cmp
xchg
lock
sub
push
lds
ds
outsl
dec
cmp
aas
sahf
fistpl
xchg
lods
mov
int3
and
or
cli
xorb
outsl
jno
subl
adc
cs
push
lock
lcall
mov
sbb
push
xchg
sbb
mov
sahf
add
int
adc
mov
mov
jmp
sub
push
aas
fcomp
mov
or
adc
or
sbb
jbe
inc
sub
jae
mov
inc
bound
scas
mov
testl
xchg
rcrb
mov
scas
dec
loope
mov
cwtl
stos
xchg
jbe
push
into
jns
insb
cmp
cli
icebp
inc
insl
mov
popl
mov
mov
lds
xchg
and
mov
dec
loop
sbb
push
movsl
xor
adc
int3
cld
mov
nop
mov
cmp
push
das
bound
jle
or
xor
inc
mov
dec
rcll
jbe
and
and
mov
lods
rorb
mov
das
xor
and
sub
pop
sbb
call
enter
cmp
jno
dec
sub
popa
and
inc
cmp
fisubl
cmpsb
mov
push
cmpsb
push
int
fmul
sbb
mov
rcll
push
aaa
dec
sbb
add
les
dec
inc
mov
addr16
lcall
mov
arpl
pause
push
loopne
subl
enter
std
mov
loop
mov
add
fxch
cmp
addb
cmpsb
ds
sahf
fildl
inc
jge
aad
inc
es
cwtl
jmp
xchg
addr16
decl
lahf
gs
mov
shlb
int3
mov
addl
and
outsl
jmp
jmp
into
cs
imul
arpl
pushf
xchg
xchg
cmp
lds
imul
notl
gs
lret
xchg
xor
imul
rcr
aam
sbb
sub
push
out
cmp
out
push
push
sarb
push
cltd
jp
das
mov
lret
aam
push
mov
push
in
push
push
mov
mov
mov
cmp
add
pop
loopne
icebp
xor
cmc
dec
jp
lods
and
fsubrl
fistpl
lret
or
ljmp
sahf
mov
sub
mov
sbb
mov
sub
movsl
fsqrt
sub
test
loopne
sbb
es
cwtl
cmp
das
dec
out
dec
aas
sbb
dec
out
sub
xor
inc
dec
push
push
cmpsb
negl
or
sti
jg
xor
pop
loope
ljmp
pushf
xor
jl
out
adc
out
dec
push
icebp
xlat
es
subb
stos
push
mov
aas
ds
std
sbb
sbb
pusha
push
xchg
mov
add
shl
in
pushf
or
ja
push
aam
sbb
jo
push
xor
neg
or
dec
int3
mov
roll
pop
mov
iret
mov
or
shrl
and
jns
insb
filds
or
lock
rcrb
add
icebp
lcall
lods
and
jne
jnp
jne
ss
daa
rorb
sbb
dec
loopne
test
dec
adc
cmpsl
in
in
icebp
and
ds
out
dec
nop
xchg
lahf
pusha
mov
lds
ljmp
pop
cmc
mov
iret
lret
test
fimuls
cmp
out
add
lahf
adc
inc
or
fs
popl
mov
cmp
inc
pushf
ljmp
fisubl
fldenv
push
fxam
pop
inc
shlb
push
sahf
aam
fdivr
push
or
xchg
flds
not
adc
bound
jo
cmp
jbe
push
std
and
adc
arpl
test
clc
or
xchg
lret
jmp
int3
inc
inc
inc
stc
adc
and
cld
lea
jge
sbb
jp
cltd
xlat
jo
adc
cmp
pop
push
dec
and
hlt
mov
sti
and
xchg
jg
fstl
popa
iret
pop
or
test
and
mov
lods
dec
sahf
jmp
scas
jl
jle
xchg
ja
jl
mov
xchg
sub
jno
push
pop
cwtl
or
loope
xor
aas
pop
cli
adc
adc
pop
push
cmpsl
pop
cmp
mov
inc
mov
sbb
xor
sti
andb
adc
cli
int3
jno
jb
inc
xchg
mov
sbb
fnstsw
ljmp
hlt
push
bound
or
popa
push
frstor
adc
imul
test
aaa
pop
add
insl
push
loop
cmpb
sbb
add
pusha
push
daa
inc
push
mov
adcl
rclb
mov
loopne
int3
jo
repz
or
in
stos
inc
mov
xchg
pop
lcall
lods
jns
mov
pusha
in
push
pop
fs
jle
int
mov
daa
sbb
mov
dec
addr16
cmp
sbb
dec
xchg
cltd
add
arpl
xchg
lret
xchg
xchg
aas
cmpsl
test
lahf
jb
int
shr
jecxz
pop
in
fldt
mov
and
daa
sub
outsb
dec
add
dec
in
cmc
jnp
and
out
hlt
sub
mov
movsl
in
xor
fst
jmp
outsb
xchg
fisubs
push
mov
jne
sti
push
lds
push
out
pop
and
dec
mov
test
fwait
adc
xor
pop
xlat
lahf
std
test
mov
mov
cld
push
xor
mov
std
clc
inc
nop
mov
in
arpl
push
hlt
inc
adcb
push
or
ficoml
insb
cmp
mov
pop
jge,pt
lods
iret
adc
cmp
hlt
fs
inc
setne
jge
cmpsl
roll
jge
repnz
faddl
adc
push
das
jb
jp
test
or
jnp
mov
xchg
push
out
leave
pushf
inc
repnz
adc
and
imul
jge
pop
add
js
push
or
gs
in
adc
jne
outsb
add
mov
xchg
inc
jae
mov
sbb
and
int3
cmp
xchg
push
rcrb
or
adc
jl
imul
or
rcrl
fs
aad
mov
cs
cmp
xchg
xchg
ret
loope
cmp
lret
mov
add
add
rdtsc
addr16
mov
xlat
mov
add
cmp
arpl
inc
loop
adc
stos
outsl
cmc
dec
int3
push
js
mov
xchg
ret
add
mov
insb
gs
dec
sub
and
subl
pop
dec
xchg
jmp
shll
adc
mov
lods
imul
addr16
or
sbb
push
in
call
cmp
idiv
sbbb
arpl
ret
xchg
sbb
fisubrl
cld
mov
int
jle
icebp
xchg
das
lret
mov
jle
imul
aad
mov
mov
xor
into
cmc
hlt
cmp
lods
push
inc
mov
push
int3
ja
push
push
shlb
dec
call
in
insl
pop
btc
push
dec
jns,pt
mov
dec
and
mov
jmp
sub
call
add
lods
adc
xchg
out
cwtl
jae
notb
adc
dec
rcll
jge
ljmp
mulw
jecxz,pn
push
inc
mov
mov
andb
lds
lcall
ljmp
aad
inc
push
cmpsb
or
xchg
jp
xor
cs
mov
cli
imul
mov
shll
add
dec
xchg
fnstcw
arpl
sbb
adc
and
adc
or
xor
push
sbb
xchg
les
cmp
jns
xchg
push
aaa
clc
jae
mov
xchg
push
xchg
inc
inc
cmc
push
je
loope
cmp
gs
cmp
mov
and
inc
int3
out
ss
adc
cltd
aam
or
addb
pop
ss
fucomp
gs
and
sbb
cmp
lret
sub
push
test
popa
and
jae
cs
leave
push
loopne
andl
sti
mov
pop
and
data16
pop
enter
scas
cmp
out
test
cli
cli
mov
xchg
imul
mov
popf
stos
xorb
mov
xor
ja
push
outsb
fisttps
mov
adc
jae
xor
je
std
adc
xor
jmp
jmp
jno
scas
into
addr16
aas
adc
push
insl
lret
test
xchg
sbb
fldl
fwait
hlt
fucompp
xchg
mov
add
test
adc
or
ss
cli
push
mov
sub
mov
cmp
sti
push
mov
mov
xchg
out
fsubrs
push
outsl
in
fistps
daa
and
shlb
adc
es
or
imul
mov
ljmp
push
xchg
xchg
and
xchg
hlt
rolb
fsub
andl
in
jae
shlb
idivl
cwtl
sbb
aaa
ficompl
lahf
into
mov
add
movl
in
or
jo
call
dec
rcrb
xchg
pop
mov
jbe
cltd
lods
fldt
cmp
test
and
cmp
inc
mov
test
mov
nop
pusha
mov
dec
add
inc
xchg
data16
jp
cmpsb
out
inc
add
lds
pusha
int
xor
jae
cmpsl
or
shrl
shll
cwtl
adc
in
lods
movsb
push
or
ret
iret
fisubl
xor
mov
fwait
sbb
add
sbb
cmp
adc
sub
sub
adc
cmp
inc
out
filds
cs
cs
inc
inc
rclb
inc
push
push
ja
lret
rcll
xchg
lret
mov
in
aaa
pop
xchg
or
adc
in
daa
xor
cs
sbb
push
data16
fstps
mov
add
adc
outsb
into
in
inc
cmp
mov
iret
mov
ds
pop
repnz
dec
ffreep
rorl
dec
loop
push
xchg
push
aaa
es
cmp
negb
stos
cltd
cli
inc
jns
and
stos
stos
mov
xchg
cld
call
pushf
push
inc
stc
test
push
or
xchg
mov
insb
ror
cmpsb
cmp
adc
insl
fistps
inc
xchg
add
test
aad
lea
cmp
xor
lret
and
in
faddl
int
cltd
clc
push
mov
leave
mov
les
add
xor
dec
cmpsb
mov
das
shlb
xchg
xorb
aam
inc
insl
cmp
pavgw
and
mov
jbe
cmp
xor
xchg
pop
mov
ss
xchg
push
jle
vaddsd
mov
xor
call
ficoml
loop
shrl
jae
lcall
sub
mov
cmp
adc
aaa
aam
popf
addl
fucom
rolb
outsb
lcall
sub
xor
pop
mov
dec
push
cltd
mov
std
or
cmc
jle
enter
rclb
push
adc
incb
lods
mov
aas
push
nop
cmp
sub
lret
dec
negb
clc
popa
inc
insl
mov
and
pop
adc
aad
js
testb
popa
cmpl
cltd
mov
ret
push
pop
in
cmp
inc
jmp
shlb
scas
xchg
movsb
push
dec
insb
jo
fists
repnz
sar
push
inc
and
cmp
push
sahf
cmp
jl
rcrl
cli
jl
adc
pushf
dec
rcr
jns
xlat
rcr
dec
cmp
lods
ret
ds
adc
dec
aad
lods
pop
push
xchg
push
mov
dec
jae
sub
pushf
sub
clc
add
sbb
jnp
push
outsb
or
leave
ss
adc
in
push
mov
test
inc
sbb
call
dec
hlt
mov
push
test
int3
mov
aaa
jb
push
mov
adc
sbb
mov
enter
ret
iret
jnp
push
add
add
jnp
xchg
sbb
movsb
pop
cmp
and
fiaddl
out
xchg
jp
lcall
inc
pop
fmuls
push
add
fincstp
mov
cmp
ss
xchg
lds
icebp
pop
in
xchg
rcrb
bswap
xor
enter
ljmp
mov
stos
hlt
mov
mov
xor
mov
cltd
cmp
fstl
lods
jo
pop
xor
jle
shlb
adc
jb
dec
xor
pushf
enter
cld
xchg
pop
clc
clc
jno
addb
mov
ja
mov
fsubl
out
and
ret
cmp
jno
xchg
call
pop
push
imul
sub
insl
push
xchg
inc
xchg
xor
mov
imul
mov
cltd
pop
ljmp
pop
dec
cmp
icebp
dec
add
fiaddl
stos
cmp
out
jb
sub
xchg
mov
subl
leave
jmp
adc
jae
sub
sub
add
pop
jp
and
and
addr16
push
fidivrs
lods
jmp
inc
ficomps
dec
jb
adc
lods
lahf
push
addr16
add
pusha
sarl
ljmp
mov
mov
scas
aam
clc
cmpsl
repz
out
xchg
mov
lret
pop
popa
sti
add
mulb
ja
sub
or
inc
lods
push
adc
mov
ds
aam
imul
outsb
inc
xchg
inc
in
sbb
lods
jne
test
cmpsl
jmp
in
or
and
pop
adc
std
addr16
sub
in
add
jp
mov
loopne
xchg
push
cmp
leave
pop
mov
insb
pop
mov
push
mov
nop
iret
loope
lock
pop
or
add
mov
call
in
sub
cmp
add
jb
stos
push
pop
jbe
sub
dec
outsl
nop
dec
int
pop
mov
mov
in
pusha
pop
jmp
fistl
push
ss
jmp
add
inc
roll
insb
sarb
loope
ja
dec
push
lea
jp
xchg
fsubrs
call
test
ja
or
jle
jl
xchg
xchg
cmp
scas
xlat
add
aad
jne
aam
pusha
pop
push
xor
sbb
add
xchg
lret
daa
and
and
out
push
in
jnp
add
popa
lea
lret
mov
ret
loop
jnp
push
and
movsb
out
cmpsb
outsb
mov
daa
dec
jle
lret
dec
in
xchg
push
mov
sub
jecxz
xchg
mov
pop
cmp
fsubl
xchg
and
mul
jae
popf
dec
lods
xor
sbb
mov
adcl
fbld
sbb
mov
jecxz
in
iret
movsl
std
jmp
pushf
or
outsl
in
mov
and
mov
sbb
ret
dec
mov
dec
inc
insb
adc
pop
loop
mov
dec
out
cmpsl
push
aad
dec
das
divl
sbb
inc
nop
cltd
cmc
cltd
dec
pop
inc
fsubl
repz
test
sbb
or
cmc
cmpsl
pop
push
dec
or
cli
aas
lret
mov
mov
jle
dec
jmp
lahf
popa
cmp
xor
in
data16
pop
test
outsb
cwtl
dec
cmp
xchg
sbb
adc
cltd
cmpsl
xchg
shrl
mov
mov
aam
pop
test
into
cli
xchg
mov
inc
fcompl
push
call
adc
sub
sub
pop
mov
pop
pop
add
add
adc
test
int
fsubrl
mov
inc
sub
xchg
mov
out
aam
loopne
inc
and
jb
lods
nop
and
dec
das
test
pop
cmp
cmp
pop
dec
int3
ret
push
lcall
xchg
push
pop
or
mov
and
push
dec
mov
cmp
pop
mov
dec
sub
incl
xlat
pxor
repz
or
out
fdivl
inc
push
push
and
aad
ss
xlat
mov
adcl
mov
ficompl
xor
adc
cmp
outsb
outsl
dec
jo
push
push
cmp
lret
pushf
pop
dec
xchg
test
shlb
cmp
dec
popl
and
das
xchg
nop
mov
xlat
sbb
mov
xor
out
mov
cli
xor
out
adc
in
outsl
lea
adc
sti
and
es
fidivs
xor
outsl
mov
aas
add
mov
enter
adcl
in
xor
sbb
fnstsw
mov
and
or
or
stos
inc
mov
aad
or
jbe
imul
cmp
add
dec
cltd
xlat
add
xor
imul
mov
idivb
xchg
fbld
mov
movsl
push
loope
ret
push
fsts
or
repnz
lods
das
daa
and
xor
cmp
imul
test
dec
lea
scas
repnz
mov
push
cmp
test
xchg
clc
movsl
jecxz
in
mov
arpl
data16
cli
shll
pop
cmp
enter
jne
adc
decl
fldcw
imulb
or
push
loopne
fwait
div
lea
or
scas
sub
push
lock
sbb
or
pop
gs
idivl
xor
rcrl
iret
add
mov
and
mov
in
icebp
cltd
sti
loope
mov
inc
cmp
aaa
ss
sbb
int3
flds
jbe
jl
call
sub
lods
dec
xchg
scas
adc
fdiv
dec
loop
inc
lea
in
pushf
xchg
ret
mov
out
stos
add
inc
pop
add
mov
sub
cmpsl
call
push
out
ja
adc
test
outsl
ss
in
fisubrs
push
xchg
dec
cwtl
pop
xchg
sub
aad
orl
mov
movsl
adc
adc
imul
push
mov
aaa
sahf
scas
test
xlat
lret
xor
shrl
adc
mov
out
xor
movsb
push
and
sub
sub
adc
test
cmpsl
adc
imul
nop
pop
jle
int3
and
mov
add
inc
cmp
xor
inc
jg
sahf
and
dec
aas
mov
fcoml
push
repnz
cmp
mov
xlat
aad
pop
xor
adc
retw
adcb
xor
mov
inc
mov
pop
and
imul
dec
xor
push
fdivs
sti
add
clc
pop
popf
out
xlat
scas
xor
enter
or
xlat
std
xchg
jecxz
in
or
push
loopne
leave
mov
movsl
xor
sbb
xchg
loopne
inc
or
sbb
and
loop
ljmp
jb
mov
inc
add
mov
or
scas
sub
fnstenv
xchg
pop
mov
push
push
insl
std
cs
fisttps
popa
add
aaa
and
insl
addl
pop
fst
out
mov
das
add
repnz
mov
jecxz
into
leave
jbe
rorl
lock
xchg
cmp
inc
test
xchg
sub
inc
dec
aam
or
out
in
push
pop
push
jno
push
push
stc
fs
dec
mov
mov
xor
popa
inc
loope
pop
sti
add
jle
and
add
and
nopl
pushf
push
das
mov
sub
and
movsl
and
scas
mov
mov
jbe
push
sbb
out
jns
pop
sub
js
cmp
movsb
lret
stc
pop
subb
push
sub
and
mov
popa
pusha
jno
je
and
ss
xor
xchg
outsb
xchg
mov
cwtl
out
jmp
or
fistpll
add
xchg
pop
mov
mov
sbbb
ljmp
add
outsl
push
inc
xchg
pop
sti
adc
inc
shrl
push
jns
roll
mov
jne
mull
adc
test
mov
stc
jnp
mov
fisttpll
and
pop
jl
jge
ret
jne
xor
mov
ret
in
roll
imul
ss
xchg
in
outsl
scas
cs
aas
or
nop
fxch
addr16
ljmp
lods
dec
mov
nop
sub
mov
jne
lahf
movsb
orb
jecxz
mov
jle
cmp
push
mov
add
mov
addl
mov
outsb
pop
popa
cwtl
xor
pop
mov
mov
pusha
xchg
mov
sub
mov
frstor
outsb
shrb
inc
push
cli
and
mov
xchg
shll
popf
adc
jbe
xchg
clc
rolb
mov
rcl
push
xor
adcl
int
fbld
add
aad
sti
and
add
aas
push
stc
jmp
pop
mov
loop
or
ss
cwtl
xchg
mov
mov
sahf
mov
inc
ss
je
hlt
inc
push
pop
adc
je
dec
jp
mov
subl
iret
rorb
pop
dec
mov
ret
mov
pop
mov
in
jecxz
mov
adc
mov
jmp
push
data16
and
outsb
mov
test
std
out
sub
pop
popa
popf
sbb
les
rorl
inc
fsubr
inc
mov
dec
xlat
lods
ds
rolb
jbe
xchg
lret
mov
ljmp
dec
jno,pn
lods
or
fisubs
jmp
add
or
mov
pop
rcll
shrb
int
bnd
call
mov
add
mull
in
iret
sbb
lds
in
mov
cmp
das
into
cld
cmpsb
fbstp
xor
mov
sub
dec
lods
fs
in
sysenter
cmp
not
out
sbb
sbb
fs
jne
imul
push
rcr
xorl
pop
sub
popf
xlat
pop
adc
iret
cmp
dec
pop
xor
fildl
iret
imul
sub
sbb
jne
stos
mov
sbb
je
cmp
mov
cs
icebp
aas
inc
push
pop
jg
in
test
adc
sub
sub
jo
mov
je
sbb
dec
out
cmp
mov
push
imul
fnstenv
xchg
and
mov
nop
stos
repnz
ret
dec
inc
pusha
and
mov
in
and
mov
pop
lahf
and
jl
push
pop
pop
cmp
outsb
mov
xor
jle
imul
sub
movsb
ss
mov
mov
dec
daa
ja
lret
xor
out
decl
xchg
pop
lret
adc
adc
mov
mov
mov
test
data16
dec
mov
repz
cmp
inc
test
sbb
xor
mov
sub
les
popf
dec
sbb
test
js
out
mov
fildl
mov
imul
movsl
or
movsb
sbb
ret
inc
adc
movsl
je
jmp
ss
jmp
sbb
sahf
sub
cmp
orl
jne
jae
fistl
popf
or
dec
jno
jnp
jle
insb
stos
aad
dec
adc
popf
mov
add
or
subl
loope
pushf
mov
and
sbb
adc
sbb
andb
adc
mov
push
cld
ja
fwait
icebp
sub
add
jmp
push
cli
mov
and
ljmp
sub
adc
ljmp
jmp
addr16
mov
scas
push
aam
or
jbe
xchg
test
int3
inc
dec
jecxz
dec
mov
dec
sbb
sbb
jne
idivl
fsts
into
mov
cmpsl
cli
into
or
jb
push
and
mov
sbb
loopne
mov
icebp
cmp
lods
pusha
or
mov
mov
insb
jl
mov
or
lret
data16
sub
rorl
jo
std
in
and
sub
adc
fadds
pop
test
xchg
shrl
dec
enter
call
aaa
ljmp
pop
scas
xchg
xor
hlt
arpl
sar
sahf
outsb
inc
out
cld
out
nop
scas
lds
fimull
add
vmwrite
inc
adc
dec
xchg
lret
fsubrl
aam
add
push
pop
sbb
or
sbb
setge
stos
data16
cmpb
out
mov
insl
dec
and
pop
mov
sbb
outsl
push
xchg
pop
xchg
or
hlt
repz
or
movsl
jne
dec
mov
outsb
mov
dec
insl
inc
jmp
xchg
add
and
jge
fadd
inc
out
fistpl
mov
inc
cmpsl
clc
packsswb
jp
cmp
dec
sub
cmpsl
mov
pmulhuw
mov
adc
pop
mov
leave
in
xchg
mov
repnz
sbb
mov
sbbl
lahf
mov
fdivr
js
mov
test
lds
sub
cmpsb
imul
test
aam
dec
into
pushf
and
and
or
inc
and
push
pop
jno
pop
icebp
sub
mov
divb
mov
lods
test
xor
jg
mov
inc
xor
imul
sub
aas
xlat
xchg
mov
pushf
ss
xchg
out
stos
faddp
aad
stc
push
cmpsl
bound
xchg
mov
pop
push
pop
stc
mov
mov
or
jl
push
and
bound
das
enter
inc
lret
les
out
sbb
jmp
jmp
mov
mov
mov
into
jno
int
out
nop
inc
lds
fnstsw
out
mull
std
gs
movsb
adc
cmp
or
cmp
shrb
pop
push
lods
mov
or
jle
mov
dec
sub
or
jg
dec
xor
outsb
adc
xchg
push
jmp
push
cli
loop
dec
repnz
adc
ret
aam
sbb
test
cltd
or
xchg
cmp
ret
and
push
dec
dec
inc
push
outsb
addr16
outsb
mov
mov
mov
mov
push
lds
dec
pushf
sub
ljmp
or
inc
mov
enter
cmp
jbe
rorb
shlb
popa
sahf
pop
sbb
and
jmp
and
jmp
inc
loope
adc
and
and
rolb
loopne
cmp
lahf
stos
scas
dec
jp
fwait
adc
mov
dec
das
int3
and
daa
jg
and
mov
mov
fildl
dec
push
int
shrl
mov
sbb
imul
xchg
shrl
sub
mov
addr16
dec
fdivl
ds
sub
es
inc
sbb
push
mov
mov
stos
mov
inc
pop
add
dec
icebp
mov
ss
std
testb
out
inc
dec
mov
xor
xor
pop
cmpsl
sbb
loop
cli
cld
or
pushf
orl
cmp
cmp
repnz
or
lods
inc
push
push
push
cmpsl
inc
and
fwait
xchg
fs
jle
nopl
sub
outsl
adc
lock
jmp
adc
mov
loopne
stos
es
push
sub
dec
aaa
out
shl
mov
pop
loop
es
aas
jbe
mov
gs
mov
inc
pop
push
out
add
jl
cmp
dec
pop
imull
outsb
cltd
fsubl
sbb
xchg
mov
movsb
add
xor
loop
rclb
imul
cmp
sub
sub
pop
push
mov
xchg
test
inc
dec
inc
lcall
andl
push
adc
mov
dec
nop
loope
xchg
aad
dec
mov
mov
push
les
sbb
aaa
addr16
insl
ficoml
mov
fidivl
mov
std
xor
xchg
cmovbe
movsl
cmc
mulb
cmpsl
aaa
adcb
pusha
dec
lahf
pushf
inc
loopne
out
cmp
test
outsb
outsb
mov
mov
aam
ljmp
repnz
pop
andl
push
enter
cli
testl
xor
ss
les
sub
das
cltd
call
jg
jnp
in
mov
es
xchg
and
aaa
or
data16
shlb
mov
std
sbbb
push
push
aad
orb
cmp
lret
mov
iret
push
inc
or
mov
inc
andb
push
jg
dec
out
test
jp
mov
and
push
pop
mov
sbb
jnp
addr16
mov
jnp
add
out
scas
push
ret
jecxz
xorb
lret
add
sbb
and
movl
sub
cmp
js
in
das
cmpsb
xchg
mov
mov
sti
dec
sbbl
pop
sahf
ljmp
xchg
dec
imul
pop
ret
pop
popl
ret
inc
xchg
out
vmwrite
lods
cmc
cmp
cltd
push
mov
jmp
pop
clc
mov
cmp
sahf
ja
or
inc
jge
jmp
xor
aad
outsl
std
std
add
and
addr16
ficoms
lcall
pushf
mov
cmpsb
push
std
dec
sub
sub
jne
adc
xchg
fcmovnb
lcall
pop
jo
fnstsw
dec
scas
andb
test
adc
mov
mov
iret
es
das
pop
aad
jl
pop
jge
xchg
inc
mov
xchg
or
jg
daa
pop
fxch
or
sub
movntps
stos
jmp
mov
loope
and
push
push
adc
imul
xchg
adc
out
and
mov
mov
mov
movsl
loopne
sub
dec
fwait
jne
insl
jnp
inc
sub
stos
js
mov
gs
outsl
out
mov
xchg
jno
ret
mov
push
les
cld
xchg
add
xchg
pop
in
and
mov
cmpsb
lea
sti
ret
fldcw
aas
inc
mov
push
mov
pop
loope
mov
sub
mov
mov
stc
inc
pop
and
data16
sub
and
jp
cs
sti
xchg
in
or
xor
sub
adc
add
rcrb
sbbb
adc
sbb
dec
aas
aam
leave
outsl
and
pop
mov
insl
jge
cmpl
sub
out
insb
loop
push
push
aad
inc
push
pop
cmp
or
ljmp
cmp
mov
mov
add
sub
dec
inc
lret
arpl
gs
dec
jge
ret
mov
xchg
inc
idivb
mov
cmp
aad
mov
pushf
lods
pop
xchg
fld
fsubrp
pop
add
punpckhwd
sbb
cwtl
cld
adc
call
mov
loopne
and
push
stos
xor
loop
jle
cmc
lahf
loop
mov
or
or
mov
xchg
add
ljmp
in
push
add
pop
sbb
loopne
notb
mov
jg
pop
xchg
xchg
addr16
and
loop
push
mov
addb
les
and
xchg
sbb
aaa
dec
mov
pop
xchg
stc
jl
mov
pop
mov
xlat
xchg
mov
cmp
add
add
pushl
fnstsw
popa
xchg
cmc
loop
pushf
xor
xlat
push
ss
pop
lcall
jb
in
adc
mov
xchg
leave
mov
adc
fisttps
mov
mov
inc
jl
jl
jno
push
adcl
push
push
into
inc
add
ljmp
lea
in
jne
sub
loope
inc
add
fs
test
pushl
sub
pushf
imull
xor
or
cmpsl
jp
push
sub
into
pop
hlt
out
aaa
xchg
jae
lods
mov
sub
fildll
sub
repnz
shrb
cld
sbb
mov
aaa
test
dec
mov
imul
dec
push
push
enter
sbb
pop
movsl
and
xor
pop
push
js
push
inc
movsl
sbb
jmpw
es
cmp
daa
shr
jp
faddl
push
xchg
orl
sbb
pop
pop
sbb
push
xor
xchg
mov
movsb
and
mov
out
daa
jecxz
frstor
xor
push
idiv
cmpsb
mov
lods
enter
inc
adcl
gs
inc
push
and
dec
test
jae
out
in
loopne
mov
clc
lock
mov
in
xchg
sahf
add
pop
xor
add
xor
pop
outsl
or
mov
loope
jns
and
loopne
negl
jle
aaa
pop
or
pop
or
or
add
xor
lds
cli
cli
fildl
ja
xchg
dec
mov
inc
jecxz
pop
sbb
ljmp
add
push
out
mov
sahf
aam
mov
fs
lcall
mov
adc
test
cli
int3
push
and
movb
filds
inc
dec
into
jg
jae
pop
or
mov
push
inc
cltd
movsl
sbb
adc
and
jo
mov
in
movsl
cld
cmp
fmul
push
pushf
cwtl
leave
mov
or
dec
add
gs
shll
movsb
pop
in
ret
sub
outsb
ds
adcl
imul
xor
push
mov
int
xchg
repz
fsincos
dec
mov
xchg
push
sub
xchg
pop
jno
inc
mov
lods
push
and
pop
call
mov
mov
scas
out
dec
fsubr
adc
pusha
jg
call
mov
jno
les
xchg
test
xchg
inc
xchg
fistps
jge
push
push
jge
inc
cmp
sbbl
cmp
je
fisubrl
sbb
adc
shll
push
dec
and
push
jp
xorl
adcl
movb
repnz
mov
fs
lods
hlt
popa
push
cmp
lcall
inc
and
in
adc
loop
add
fnstenv
add
dec
in
and
cmp
mov
arpl
sub
lea
mov
mov
orl
mov
pop
lock
inc
xchg
inc
push
cmpsb
xchg
mov
fsubr
rorb
cltd
adc
xchg
cmp
push
dec
pushf
jmp
mov
pop
xchg
fwait
imul
adc
inc
adc
pop
icebp
pop
mov
or
loope
js
add
pushf
lret
adcb
int3
or
pop
xchg
je
insl
or
cmp
loope
outsl
aas
cmp
inc
lods
icebp
loopne
aam
mov
inc
dec
pop
in
test
sbb
sub
cs
out
xchg
pop
push
push
leave
dec
loop
mov
add
sub
out
hlt
je
jl
or
jo
pop
and
cs
mov
jns
pop
test
jmp
fnstcw
daa
ja
sub
pushf
add
stos
sub
push
pop
cmp
dec
push
sbb
mov
repnz
pop
xor
insb
cs
out
add
lret
pushf
push
insb
pusha
push
and
sub
jg
fsts
js
mov
inc
sbb
rorb
jb
jb
sub
sbb
insl
les
lahf
fs
js
xchg
std
xchg
inc
fldt
jl
push
dec
xchg
call
mov
or
dec
push
or
movsl
pop
or
sub
nop
out
xor
mov
aam
xchg
test
incl
addl
loop
cmp
mov
dec
int
push
mov
data16
xor
divl
xchg
jno
xor
cld
or
scas
and
sbb
add
adc
ret
lds
or
sbbl
and
mov
push
dec
sbb
ljmp
mov
jno
popa
mov
sub
xchg
add
push
rcll
xchg
arpl
sub
jns
lock
mov
or
aam
mov
scas
and
in
lret
cmp
lock
fwait
mov
pop
mov
and
mov
je
stos
fucomip
or
lods
into
and
test
or
testl
inc
mov
lods
dec
xchg
xlat
fimull
jne
js
pop
in
inc
xchg
test
cmc
pop
xchg
dec
pusha
rclb
in
adc
outsb
in
mov
pop
xchg
lods
pop
xor
jb
fcmovnbe
popf
mov
and
add
xor
inc
xor
mov
cmp
int3
or
pop
xlat
jno
xchg
push
sarb
ds
fwait
sar
fnstenv
push
and
xchg
aaa
pop
cli
sti
shrb
sub
xor
repz
mov
adc
cmp
loope,pn
sbb
out
dec
add
fstpl
xor
imul
cli
add
lahf
mov
pushf
jle
push
js
enter
inc
xchg
fimuls
cmp
fwait
out
pop
add
in
sub
stc
loop
mov
jge
sub
stc
fcmovb
dec
idivl
jb
add
lods
repz
mov
adc
mov
jmp
adc
mov
xor
push
push
fisttpl
push
jle
jb
push
dec
repnz
lcall
es
sub
roll
ds
ret
cmp
dec
shll
pop
sarb
lret
in
movsb
cmpl
xor
cmc
push
xor
pop
inc
push
dec
mov
pop
lea
or
xlat
adc
ficomps
orb
sbb
adcl
enter
loope
adc
adc
arpl
ja
sub
pop
sbbb
inc
mov
add
sahf
daa
in
lods
leave
mov
lock
pop
outsl
movsl
jno
jle
sub
in
pop
xor
outsb
mov
inc
jae
jge
or
test
scas
dec
fidivs
out
aas
and
imul
xchg
inc
lea
pop
xchg
xor
push
loopne
jecxz
icebp
sbb
push
jl
mov
test
sbb
add
push
or
lea
cmp
lds
cld
or
and
ficoms
xchg
cmp
jae
mov
and
arpl
pushf
xor
out
outsl
push
cs
insb
xchg
push
adc
inc
push
add
mov
loop
in
xchg
out
xchg
sub
sbb
pop
and
rorb
or
mov
pop
mov
xor
sahf
ret
mov
add
dec
sti
and
scas
in
les
idivl
and
sub
xchg
mov
cmp
adc
andl
outsb
push
lahf
pop
jecxz
lods
jb
mov
pop
mov
sub
and
xor
pushl
jne
jl
pop
pop
push
stos
scas
fistpl
in
rcrl
push
jmp
hlt
xchg
adc
lods
or
aad
adc
fmuls
outsb
jo
sub
mov
test
dec
and
mov
xchg
xor
xchg
mov
dec
or
xor
je
pop
js
mov
sub
mov
enter
outsl
lcall
sub
cmc
shll
lret
cmp
mov
add
clc
mov
addr16
xchg
mov
lret
cmpsl
lds
push
xor
ret
mov
lret
aaa
lret
jno
int3
sub
add
mov
popf
js
je
sub
out
cmp
lea
or
negl
fisubl
xchg
sub
fucom
mov
test
pop
cmp
lods
cld
das
jl
inc
add
out
push
in
loope
add
fcompp
jns
fimull
ss
sub
pop
dec
inc
xchg
or
shl
ret
loopne
push
mov
push
xor
push
or
adc
push
rcrl
fistpl
out
and
dec
xchg
jne
movsl
sub
inc
daa
scas
movsl
push
mov
adc
pop
ss
loop
call
fcoml
orl
sub
in
fcompl
mov
fstps
xchg
in
or
int
mov
jp
psadbw
enter
add
cmp
inc
hlt
jecxz
pop
inc
and
adc
jmp
jge
mov
mov
mov
popf
jb
and
sub
cmp
call
jae
mov
inc
xchg
sbb
rorl
lahf
adc
in
inc
lret
xor
pop
sbb
jecxz
movsb
mov
into
hlt
stos
pop
ds
mov
pushf
mov
sub
ja
dec
adc
cmp
iret
mov
loop
dec
pop
add
shll
dec
mov
in
cmp
pop
mov
in
lcall
add
jno
test
sbb
xor
lods
jbe
test
push
jns
in
mov
push
inc
jmp
stc
pop
aam
and
inc
cmpsb
jl
or
push
stos
inc
pop
pushf
pop
loope
and
icebp
in
incb
jge
je
stos
sub
daa
hlt
sub
and
cltd
enter
or
xchg
rorl
cmp
test
mov
jmp
lcall
xchg
inc
les
sahf
xor
push
push
rorb
jno
lahf
push
cmp
lret
sbb
jmp
xchg
dec
dec
push
dec
sub
and
aas
cmp
dec
fstpl
jp
outsb
leave
adc
cwtl
pop
push
insb
sti
jbe
pop
adc
xlat
out
ja
sub
pop
aaa
and
inc
mov
pop
lods
sbb
inc
rolb
lds
cmpsb
dec
jne
sbb
inc
mov
push
dec
adc
fidivl
push
sbb
popa
cmpsl
dec
fnsave
rcll
inc
inc
in
adc
arpl
mov
xlat
cmp
sbb
pop
scas
lock
mov
call
push
dec
or
fcomps
aas
cmpsl
push
adc
repz
loope
out
dec
shl
sub
xor
xor
stos
adc
mov
xchg
sbb
pop
out
sar
fwait
xchg
lahf
bound
or
test
xchg
or
pop
or
fsub
test
push
std
mov
in
gs
sti
dec
push
xor
jnp
in
shr
xor
cltd
push
add
push
stos
lods
xor
sbb
xorl
rcrb
insb
sbbl
jb
cld
fistpll
mov
and
ljmp
push
xlat
mov
sti
jmp
adc
cmp
add
fiaddl
sub
xchg
daa
aaa
int3
int3
and
mov
pop
ret
fsubrs
adc
push
lock
fsubl
mov
jo
out
mov
xlat
sub
sub
ret
cmpsb
scas
cmp
push
jge
jnp
sbb
dec
cltd
inc
add
mov
push
and
dec
in
cltd
xor
jbe
xor
aad
xchg
lret
stos
inc
cmp
repnz
jl
icebp
inc
adc
test
xchg
push
push
add
push
pushf
jg
fs
cmc
subb
faddl
mov
xchg
lea
fcmovu
push
xor
mull
popf
ss
push
notl
aas
dec
ss
in
dec
or
cmp
push
dec
or
adcb
pop
ret
movsl
enter
sbb
into
xor
sar
shr
jns
pusha
test
imulb
sub
das
jge
fcoms
mov
insb
push
xchg
mov
push
testl
scas
lahf
cld
inc
fstl
mov
inc
out
rolb
cli
sbb
inc
pushf
cmpsl
push
inc
mov
inc
iret
fbld
or
mov
out
out
loope
sbb
insl
stos
dec
xor
icebp
ret
data16
adc
xor
or
imul
jb
jne
mov
dec
sub
call
mov
push
jle
rcll
iret
push
negb
jecxz
mov
add
adc
subb
xchg
jbe
cld
push
cmp
mov
scas
cli
mov
cld
xchg
repz
scas
mov
es
sbb
or
push
add
dec
mov
mov
int
test
in
pop
pop
xchg
mov
cmp
dec
pop
les
lcall
imul
jl
jnp
lret
popa
jp
stos
mov
mov
sub
dec
and
cmp
loope
test
fdiv
cmp
mov
or
mov
push
push
rclb
scas
sub
mov
sub
mov
mov
lcall
sbb
popa
and
addr16
push
mov
add
mov
add
iret
jmp
jg,pn
aam
rclb
je
adcb
add
pop
and
aad
adc
jle
inc
dec
iret
push
and
sahf
cmpsb
push
jge
in
or
fdivrl
sbb
fdiv
and
dec
stos
repz
fadd
jb
daa
imul
mov
push
jb
cmp
mov
sbb
pop
fstpt
lret
xchg
sbb
scas
mov
test
mov
lret
jnp
rcrb
push
shrl
repnz
dec
ret
jp
mov
mov
push
jg
icebp
xchg
test
aaa
and
mov
fistpll
xchg
inc
pop
pop
and
xchg
cli
pusha
mov
or
push
sti
mov
int3
adc
pushf
sahf
dec
jge
cwtl
pop
or
mov
fldl
xor
popa
jg
jl
cltd
aas
sub
hlt
cli
fiadds
dec
or
andb
test
xchg
inc
xchg
cwtl
mov
sub
lods
or
jbe
pop
es
sar
repz
repnz
xor
ds
inc
inc
jb
pop
push
xchg
dec
andb
pop
jno
cmp
test
cmp
dec
mov
gs
ss
and
adcb
or
icebp
cld
inc
cmpsl
adc
fdivp
mov
iret
xor
popl
nop
ficoml
icebp
cmp
adc
inc
out
popf
push
dec
xor
lea
push
loope
rclb
jns
cld
mov
fidivrl
and
das
add
add
fsubrl
jmp
adc
sbbl
nop
int3
push
cmp
mov
cmc
test
pop
adc
adc
pop
or
loope
fwait
repnz
dec
inc
dec
cmpsb
mov
cld
dec
jle
aad
clc
sahf
sub
and
test
adc
clc
sahf
push
push
xchg
leave
xor
cmp
in
cmc
inc
test
cmp
pop
mov
stos
icebp
rorb
jbe
pop
xchg
adcl
pop
ret
imul
sub
inc
cmp
aad
jmp
xchg
ret
xor
addr16
mov
in
aaa
pop
push
xor
orps
scas
in
ljmp
test
mov
push
pop
jecxz
stos
dec
in
mov
jno
sub
mov
aam
lds
leave
shlb
dec
pop
ss
mov
pop
pop
out
test
xor
mov
mov
cld
sbb
ds
lea
mov
sub
mov
cmc
jno
mov
subl
jo
addl
jp
adc
push
cld
jbe
imul
push
jmp
xchg
loop
loopne
jmp
ret
rorb
add
add
aas
or
loopne
dec
or
dec
scas
loop
in
pop
fwait
loop
js
cmp
lods
push
xchg
fdiv
decl
lods
jecxz
test
shl
jo
adc
ret
rcr
dec
mov
sarl
jnp
push
je
sbb
pop
sarb
xorb
pop
lock
mov
add
das
icebp
pop
imul
mov
xor
ret
add
stos
or
js
jo
movss
xchg
add
mov
dec
adc
adc
rolb
imul
mov
ss
lret
jae
push
std
and
cmp
stos
inc
mov
aas
mov
icebp
mov
push
sbb
enter
loopne
and
popf
xorl
mov
nop
add
jne
insl
add
xchg
insb
push
jne
mov
insb
cltd
cmp
es
xor
outsl
cmpsl
inc
sub
jmp
adc
je
add
ret
xor
neg
stos
or
popa
faddl
icebp
pop
dec
xorl
mov
je
dec
mov
jnp
bound
mov
mov
rcr
pop
cltd
popa
fs
out
mov
in
jne
mov
out
addb
fnstsw
adc
push
mov
faddl
xor
mov
call
jge
xchg
imul
loop
lahf
cltd
sub
adc
arpl
xchg
and
push
mov
adc
cmp
sub
sbb
inc
and
div
dec
push
lds
fidivrs
push
mov
cwtl
pusha
subl
or
cmpsl
fists
cwtl
xor
mov
rcrl
push
adcb
pop
push
mov
nop
inc
jmp
sbb
inc
mov
insb
shll
insl
pop
cwtl
dec
cmp
fisubrs
and
push
movsb
decb
adc
scas
sub
add
push
adc
fbld
push
lcall
fwait
sub
push
xor
rol
or
xchg
add
mov
test
pop
imul
sbb
xor
je
dec
jge
mov
xchg
inc
cltd
or
sub
sub
xor
lret
cmpsl
bound
dec
jne
jle
shrl
adc
xchg
add
clc
and
stos
push
ljmp
mov
mov
and
stos
and
dec
sbb
add
jge
pop
or
jnp
dec
add
jb
mov
add
adc
mov
and
dec
xor
inc
stos
pop
mov
pop
aad
xchg
call
imul
xor
ret
or
and
sub
jae
mov
repnz
cld
xchg
sub
xor
or
cs
cmpsb
or
ds
testb
es
xor
je
push
out
pop
mov
push
pop
mov
sahf
lret
jns
xchg
aas
or
mov
jae
les
shrl
xchg
cmpl
les
dec
jmp
stos
sahf
imul
xor
popa
out
popf
cmc
push
jb
dec
iret
or
lods
xchg
loopne
outsb
out
outsl
aaa
dec
mov
jl
pop
shll
sbb
jl
inc
arpl
inc
roll
adc
and
sbb
hlt
jno
out
mov
and
mov
lea
mov
inc
sbb
scas
and
loop
data16
or
add
mov
dec
hlt
or
cmp
pop
inc
mov
pop
add
add
cli
shlb
jge
orb
jns
popf
ss
loopne
nop
outsl
mov
sub
mov
in
dec
outsw
pop
stos
je
pushf
test
enter
inc
sbb
fiadds
bound
dec
outsb
add
mov
addb
jbe
cs
or
test
push
popf
out
in
lods
popl
pop
xlat
pop
aam
lods
imul
jne
mov
dec
add
cmpsb
push
xchg
pop
push
mov
shlb
popa
xchg
cli
aaa
cvtsd2si
dec
cmpsb
pop
je
mov
ljmp
iret
movsl
and
iret
sbb
xchg
inc
scas
adc
xchg
dec
aas
stos
xchg
mov
xor
cmpsb
fs
psraw
xchg
mov
jno
mov
xorl
imul
fs
push
jbe
shl
sub
xorl
jl
inc
lret
cmp
arpl
sub
sub
sahf
jmp
pop
iretw
in
fwait
mov
outsb
pushf
push
scas
or
pop
insb
icebp
sub
insb
mov
fstps
jecxz
dec
cli
enter
dec
hlt
rol
jns
std
sbb
in
aad
lods
or
mov
test
mov
mov
mov
or
add
orl
dec
outsb
mov
and
inc
mov
dec
mov
pop
lahf
rcrb
sahf
stos
fsubp
popa
xchg
push
fldl
adc
mov
ret
inc
mov
shrb
fldcw
sub
pop
outsl
scas
dec
push
iret
shll
repz
and
fiaddl
psubsb
cli
and
sbb
imul
popa
lods
popa
cmp
mov
nop
cwtl
cltd
sbb
mov
lea
ja
insb
jle
ret
fldcw
xor
sub
xchg
push
sub
loopne
jns
and
add
fnstsw
je
imul
shrb
mov
sub
in
ljmp
ja
sub
push
jecxz
scas
repnz
xor
dec
jecxz
jl
mov
pop
adc
mov
ljmp
add
jne
mov
pop
mov
adc
aas
jmp
push
int
mov
sbb
push
inc
add
xlat
push
popa
xorl
or
and
movsl
dec
inc
test
mov
bound
xor
aaa
or
aas
lret
adc
jo
xchg
fstpl
jne
pop
aad
ljmp
adc
ficompl
inc
stos
jne
inc
or
xlat
int
mov
dec
and
ret
cmpsl
jge
cld
ficoml
lods
cltd
fwait
pop
inc
outsl
cmpsb
shll
mov
sbb
xor
jmp
jmp
int3
cli
mov
clc
std
mov
out
inc
adc
movsb
ret
push
xchg
mov
adc
mov
test
pop
cli
int3
adc
cld
pop
xchg
iret
test
stc
lcall
inc
sbb
iret
mov
inc
mul
pusha
out
pop
pop
or
or
mov
adc
test
notb
es
sarb
xchg
jge
push
cld
fs
xchg
cld
push
jge,pt
cmp
mov
sbb
data16
push
mov
push
ret
mov
dec
int3
dec
clc
xorl
push
loope
inc
mov
add
sbb
cmp
mov
ds
mov
cvtps2pi
pop
mov
arpl
mov
or
xor
pushf
push
mov
jne
and
es
pushl
int3
xor
pop
push
in
adc
enterw
fsubrs
insb
inc
sub
icebp
fcomi
jbe
jno
push
sub
ret
mov
sub
mov
fistl
jge
out
adc
jg
scas
sbb
pop
cmpsb
dec
or
sub
bound
push
ret
mov
pop
mov
push
dec
adc
ljmp
pop
xor
je
mov
out
fwait
clc
mov
lretw
mov
sub
out
xchg
sbb
pop
icebp
xchg
fadds
pop
stos
out
dec
out
inc
xchg
mov
xor
push
mov
xlat
jae
out
jb
and
jbe
fnstsw
fcos
sbb
icebp
push
and
lods
mov
lret
iret
ljmp
mov
xchg
dec
ja
mov
mov
popa
pop
pop
mov
movsl
loope
jns
xor
dec
mov
insl
cmp
out
mov
adc
ss
shll
leave
repnz
cmc
pop
int3
daa
adc
sbb
cmp
insb
or
lea
cltd
and
inc
loopnew
inc
fdivs
sbb
xlat
mov
push
push
adc
stos
inc
add
lea
sbb
fdivl
hlt
adc
pop
loope
xchg
push
adc
pop
std
adc
xor
stos
jnp
mov
adc
cld
ret
test
xor
addr16
into
sbb
out
sub
sbb
pop
jo
test
rcl
lcall
pop
jle
pop
das
adcl
sbb
mov
nop
adc
ret
mov
int
xor
push
js
inc
mov
scas
loopne
sub
dec
data16
sar
sti
pop
push
adc
or
sub
sbb
mull
mov
fwait
movb
inc
es
cwtl
dec
mov
dec
stos
arpl
xchg
ds
or
add
outsl
push
arpl
mov
sub
stos
aas
bts
jl
data16
je
fidivrl
pop
mov
adc
pop
jns
xchg
movsb
mov
mov
shr
adcl
dec
cli
mov
repz
aad
js
and
push
movaps
xchg
jmp
in
aad
pop
adcl
pushf
push
lret
enter
sub
data16
inc
movsb
shrl
inc
popf
jge
imul
shll
mov
arpl
or
repnz
fwait
pop
lret
bound
jecxz
dec
or
push
sub
mov
mov
insl
test
movsb
scas
mul
jp
add
ja
subb
fldt
add
data16
mov
aaa
inc
xchg
int
and
rcrb
enter
sarl
das
ss
outsb
cmp
ficoml
test
cmp
pop
dec
fldl
add
add
mov
fidivrl
rol
stos
adc
cmp
adcl
fists
cmpsb
adc
fidivrl
imul
mov
adc
xchg
pop
sbb
out
outsb
sti
fwait
xchg
xchg
jmp
rorb
clc
mov
mov
and
sbb
or
mov
notl
and
adc
pop
stos
daa
mov
test
jbe
and
out
and
mov
ret
repz
aas
push
sbb
call
lret
popf
leave
or
aad
cmp
cli
sub
insl
inc
and
lods
inc
ds
sbb
popa
iret
pop
es
leave
scas
adc
sub
xorb
fwait
mov
and
cltd
mov
insl
outsb
ljmp
daa
hlt
add
dec
sbb
sar
sbb
movsb
sahf
out
xlat
inc
sarl
add
dec
fs
sub
pop
jbe
daa
jae
negb
add
jle
adc
cs
shlb
adc
pop
inc
fbstp
in
sub
test
fmuls
inc
add
adc
mov
mov
xor
lret
lock
cmp
imul
out
mov
inc
aam
hlt
or
mov
js
mov
repz
adc
rcrl
in
add
fimuls
call
bound
aam
mov
dec
pop
sbb
fs
jmp
or
xchg
push
scas
shll
xchg
xchg
movsb
add
dec
adc
ret
pushf
mov
stos
sbb
sti
mov
movsl
daa
leave
mov
jmp
mov
ret
insb
shl
sbb
loop
jo
cltd
stc
ss
lock
jb
push
popf
push
loop
jmp
lock
js
std
out
push
mov
or
dec
loopne
xchg
add
fdivl
fwait
lret
push
push
lahf
out
xor
add
imul
sarb
loopne
pushf
jg
stos
aad
mov
inc
loop
or
jno
ljmp
add
outsl
add
cmp
insl
jno
out
cmpsl
stos
call
pop
jne
push
xor
in
jne
push
mov
jle
add
scas
in
add
dec
mov
insl
pusha
fsubl
push
lcall
sahf
stc
ljmp
mov
int
jbe
mov
test
pop
and
sbb
mov
call
sbb
add
pop
imul
sub
ret
push
imul
ret
shl
mov
mov
aam
jno
pop
inc
js
imul
pop
mov
mov
pop
xor
cmp
inc
test
rcrl
jl
movb
mov
cmp
insb
outsl
cmp
idiv
sbb
dec
xchg
scas
lcall
mov
shl
pop
pop
cmpsb
lret
xor
sets
dec
xchg
fisttpl
scas
or
out
xor
fwait
cmp
xchg
data16
popf
in
mov
mov
ret
jl
jb
sbb
or
icebp
fcomi
pop
shll
mov
outsl
cmpsb
aas
mov
xlat
mov
inc
icebp
jno
int
mov
es
jmp
jecxz
lcall
hlt
call
mov
mov
cld
lcall
sbb
and
aad
jb
cmovae
lret
and
adcl
data16
xchg
test
mov
push
fs
movsl
mov
xor
and
xchg
jae
jno
xlat
push
sub
and
dec
imul
jl
or
or
es
jge
mov
andb
stc
cmp
cmp
insl
and
fisubs
call
leave
fnstsw
cld
or
lcall
pushf
push
or
dec
pop
loope
loope
imul
pop
testl
ret
fiaddl
jl
xchg
push
dec
and
jg
andl
add
out
pop
inc
loope
cwtl
bound
jns
mov
xor
jns
clc
cli
js
and
fldl
sub
push
cs
mov
add
out
mov
lret
icebp
and
lock
scas
call
int
mov
adc
xchg
ret
insl
je
cmp
dec
iret
sahf
cmp
mov
jbe
or
daa
sbb
inc
scas
jae
jns
int3
ret
pop
push
lahf
jb
cmp
popl
inc
lahf
jl
fcomps
cmp
pop
out
xor
adc
es
pop
jl
movsl
or
jbe
test
dec
jnp
insb
jmp
call
push
inc
push
push
adc
xchg
sbb
out
dec
push
mov
push
mov
test
sub
sub
mov
in
sahf
mov
or
push
sahf
js
test
jbe
pusha
jo
lods
imul
xchg
push
mov
mov
or
fildl
jb
cld
es
inc
ret
lods
pop
sub
int
scas
cmc
xchg
inc
lods
movlps
loope
xor
push
scas
sbb
clc
ret
out
mov
xchg
jge
and
insl
lea
mov
add
mov
bound
mov
pop
cs
aaa
push
andl
jle
xor
sub
imul
pushf
iret
pop
push
fimull
sahf
pop
out
add
sub
dec
out
add
in
cmp
dec
in
mov
mov
inc
pop
xor
lock
test
sbb
cs
inc
cmp
cmp
aam
imul
enter
push
mov
popf
cmp
lds
movsl
int
mov
jne
mov
rorl
fnstsw
cmova
in
sbb
mov
inc
pop
pop
movsb
bound
and
inc
pop
inc
push
xchg
fsts
push
scas
push
cmp
pop
loop
popl
scas
out
loop
cmpsb
sahf
xchg
sbb
test
lahf
mov
push
xorl
sti
dec
push
mov
adc
xchg
fsubl
sbb
pop
sbb
or
lds
sub
test
mov
push
jnp
sub
gs
dec
push
xchg
das
cwtl
cltd
adc
imul
xchg
mov
sub
xchg
sbb
lret
jmp
lods
inc
cmpsl
adc
rorb
pop
pop
scas
xor
inc
imul
dec
mov
mov
icebp
fiaddl
test
dec
pushf
fmull
fadds
stos
into
mov
add
xchg
ret
jmp
mov
and
cmp
push
mov
rcl
fcomps
cmp
out
nop
add
das
rorb
mov
jne
in
inc
mov
data16
jle
push
mov
insl
in
aas
sahf
lea
xchg
scas
cmpsl
jp
mov
jno
or
cmovge
mov
pop
out
xchg
icebp
adc
test
inc
jecxz
dec
inc
aam
xchg
shlb
adc
push
xchg
loop
arpl
xor
push
fistpll
adc
lea
sbb
push
test
cmp
jge
subb
inc
test
loop
add
nop
roll
cmp
dec
sbb
and
movsb
push
pusha
xchg
shll
cmp
mov
cmp
sbb
nop
lcall
loope
mov
mov
or
insl
negl
lret
testb
or
std
dec
mov
hlt
cmp
stos
jp
cmpsb
lods
push
iret
jmp
loope
cmp
cltd
aaa
pmullw
mov
rcll
pop
fs
mov
pusha
push
push
pop
inc
and
jb
loope
add
xchg
and
sbb
and
or
xchg
jmp
aaa
jmp
push
cli
loope
ret
leave
insb
push
xchg
insl
test
push
jmp
jbe
cs
sahf
inc
cmc
inc
sahf
sti
fs
inc
fdivrl
into
ja
jge
jp
pop
adc
mov
xor
push
adc
dec
call
aam
inc
push
lds
or
mov
or
sub
sbb
cltd
pop
insb
movsl
imul
out
cmpsb
mov
push
std
push
cmpsb
test
ficoms
push
pop
jbe
out
movsl
addr16
sbb
lret
adc
inc
clc
jno
pop
xchg
push
cmp
lea
into
mov
test
inc
sub
inc
stc
fcoml
sbb
or
xchg
pusha
es
lea
mov
ret
scas
mov
mov
stos
cli
push
popf
shl
cltd
pinsrw
or
inc
movsl
rclb
pop
andl
lods
mov
push
aas
dec
divb
push
das
cmpsl
xor
cmc
clc
test
sbb
jo
lcall
fnstcw
lea
rclb
push
push
xchg
scas
or
mov
pop
js
dec
dec
xlat
sar
std
cmpsl
sahf
push
adc
mov
stos
test
adc
mov
mov
add
add
or
fldenv
ja
or
lret
xchg
push
mov
fiadds
js
cmp
lret
dec
pop
push
inc
repnz
mov
sub
dec
movq
jns
in
mov
xchg
icebp
pop
std
sar
inc
xor
mov
out
inc
lods
and
ja
pop
gs
jge
push
pop
cs
scas
jle
aad
testb
insl
xchg
aam
xchg
or
aad
xor
jbe
cmpb
lcall
addl
or
pop
sbb
test
aad
pop
push
xlat
in
loop
divb
add
xchg
xchg
div
stos
pushf
sbb
push
push
push
rolb
sub
mov
jge
mov
out
cmp
call
add
adc
int3
xchg
sbbl
jbe
lea
pop
shrl
loope
cmp
xor
fstps
xchg
test
mov
inc
xchg
add
stos
sub
push
push
jge
orl
dec
xchg
and
out
mov
test
mov
subb
int
inc
mov
inc
sub
add
mov
fidivl
and
daa
xchg
xchg
fwait
cmp
shlb
jle
call
dec
cmpsb
or
jns
hlt
popl
push
mov
call
popf
call
sti
push
pop
lahf
sub
sub
mov
push
mov
shrb
dec
loope
js
mov
insb
outsb
daa
ss
lds
inc
into
mov
add
add
adc
je
inc
dec
int
mov
sbb
ret
mov
jne
inc
pop
aad
mov
les
mov
enter
push
bound
inc
sub
xor
out
stos
test
subb
pop
adc
xor
mov
jne
test
lds
das
nop
imul
call
xchg
dec
or
prefetch
mov
sub
js
adc
bound
loop
inc
cltd
pop
sub
mov
add
call
xchg
outsb
fstps
jbe
or
lret
cmpl
hlt
mov
push
sub
push
test
idivb
loop
jnp
dec
into
cmp
lods
out
push
cmp
xchg
xlat
leave
pop
pop
fcom
dec
adc
mov
jb
xor
iret
int3
cmc
xchg
adc
adc
fbstp
les
test
inc
mov
mov
xchg
cmpl
shll
fdivrs
xchg
xor
out
push
adc
es
pop
mov
push
dec
mov
adc
test
popa
dec
push
loope
leave
cmp
or
cmpsl
pop
cmpsb
mov
ret
sbb
lods
push
leave
add
lcall
mov
mov
fnsave
adc
rcr
fdivrp
sti
cmpsl
and
ds
repz
test
dec
insb
flds
cli
fwait
ret
dec
sbb
imul
sbb
imul
in
imul
sub
insl
dec
adc
add
sub
mov
les
jb
mov
jmp
jle
dec
dec
inc
adcl
cld
mov
inc
in
lds
and
mov
jp
daa
mov
inc
mov
pusha
lret
jmp
cltd
inc
in
lods
xchg
sbb
adc
stos
and
mov
cmp
mov
pop
dec
dec
cli
sbb
stos
stos
mov
jnp
pop
mov
and
fimuls
xchg
adc
mov
sahf
inc
jge
mov
js
lds
stos
inc
or
pop
or
mov
push
arpl
dec
jae
and
sbb
xchg
andl
pop
xchg
pop
or
in
sub
ss
mov
lea
rcr
push
sbb
cli
adcb
out
pop
push
gs
mov
mov
mov
sub
shll
jae
lds
out
push
jge
jne
fwait
mov
sub
xchg
insb
movsb
sbb
fs
es
cmpsl
inc
mov
ds
push
mov
cld
call
push
nop
pop
rorb
adc
jae
cmp
or
xchg
dec
and
push
hlt
and
into
push
loopne
into
push
dec
aaa
negl
jno
mov
cmpl
add
ljmp
sub
xor
xlat
jmp
ret
scas
pop
pop
mov
add
sub
pusha
rolb
shrl
mov
rcll
cwtl
mov
test
and
inc
test
mov
pushf
cmp
add
inc
sbb
rcll
stc
out
punpcklwd
cmpsl
aaa
repz
push
les
js
pusha
inc
dec
adc
je
es
jl
jecxz
add
in
lods
popf
lock
ja
dec
dec
in
mov
mov
sub
xor
icebp
mov
mov
pop
jbe
push
dec
sub
out
cltd
mov
fistpll
bound
shrb
int3
mov
sbb
add
inc
adc
xchg
push
repz
cmpsl
xor
jecxz
mov
fstl
frstor
subb
shll
jle
fmull
lock
mov
cmpsb
in
es
sub
negb
hlt
stos
mov
adc
orb
scas
sbb
xor
dec
movsb
int3
lcall
cltd
stos
mov
lea
aas
xor
push
mov
inc
mov
jnp
call
or
sub
mov
mov
daa
sbb
imul
fnstsw
test
pusha
out
sbbb
outsl
mov
mov
hlt
shrl
fsubs
sub
xchg
push
pop
scas
test
pop
aaa
outsl
dec
rcrb
out
xor
fwait
cmc
jge
popf
scas
mov
cmpsl
push
dec
xchg
push
sub
movsb
roll
adc
test
fisttpll
stos
in
adc
xchg
adc
or
dec
dec
push
test
add
push
sub
stos
fidivs
adc
bound
cmc
mov
and
xchg
mov
std
lcall
rcl
push
adc
add
sahf
inc
test
repnz
inc
add
cmc
inc
js
jecxz
imul
ds
addb
xchg
cmpsb
and
xor
cmp
fs
jo
mov
or
pop
mov
mov
inc
push
sbb
pusha
xor
aaa
jg
inc
sbb
loopne
or
sbb
xchg
hlt
jg
es
sub
test
cmp
jl
in
inc
in
lcall
pop
adc
aam
xor
leave
out
and
xor
dec
mov
inc
rcr
roll
icebp
imul
sbb
test
add
add
imul
pop
into
sub
fidivl
sbb
or
sub
cmp
fs
mov
nop
lret
jno
cmp
vsubss
xchg
ja
cmp
fsubrs
cli
orl
mov
mov
add
sahf
sbb
mov
lods
sahf
shll
xor
push
or
lcall
pusha
mov
dec
fisttpl
movsl
dec
insb
mov
sbb
push
xlat
mov
mov
fmulp
mov
fisubs
bound
pop
and
jecxz
mov
mov
push
les
test
ja
push
out
lret
mov
mov
icebp
or
pop
cwtl
sahf
fimull
mov
push
call
and
inc
out
ror
xchg
xor
fsts
lds
add
push
pop
mov
scas
dec
adc
movsl
data16
cli
jecxz
arpl
add
add
movsb
cmp
loop
fistpll
sarl
enter
adc
push
std
pop
mov
jnp
leave
pop
inc
jno
mov
cmp
pop
cmpsl
ds
add
sbb
mov
mov
cmp
movsb
dec
mov
dec
movsb
mov
mov
daa
fsubp
lods
lods
push
xchg
mov
iret
fsubp
stos
sarl
jbe
push
scas
xor
std
sbb
adc
lret
or
lods
xchg
push
ljmp
sub
test
push
mov
push
stos
or
sub
out
pop
or
mov
in
out
fwait
call
lahf
mov
mov
ds
popa
pop
aad
xor
lret
lds
loopne
mov
cmpb
fmull
sbb
sahf
mov
jmp
add
jmp
mov
dec
or
pop
idivl
fldt
mov
push
sbb
mov
push
les
and
loope
out
dec
jp
mov
cmp
fnstsw
popf
and
mov
dec
pushf
fildll
push
int3
out
pop
inc
es
jecxz
cmc
ja
ficomps
cmp
aas
or
jg
jle
fists
retw
jecxz
dec
xchg
inc
hlt
xchg
imul
cmp
xlat
add
pushf
mov
stos
fiadds
or
mov
adc
stc
fnstenv
in
bound
adc
pop
rorl
cmpsb
popf
xchg
sbb
lds
into
xchg
clc
lret
mov
xor
sti
and
sub
inc
pop
sbb
xlat
adc
push
icebp
pop
ret
push
out
sub
add
in
sbbb
or
xor
sub
out
pop
sarb
shrb
mov
xchg
lock
cwtl
xchg
mov
xor
add
aam
mov
ret
popf
add
outsl
int3
xor
push
xorb
mov
jg
push
arpl
insl
dec
std
jo
das
pop
lret
mov
cmp
lea
dec
jg
xchg
inc
pop
pop
jno
mov
xchg
loope
sub
mov
pop
pop
sti
sbb
sbb
cmp
jg
rorl
ret
ja
fsubr
jge
jnp
lcall
sub
mov
adc
sahf
xchg
adc
cmpsl
aas
pop
sbb
out
popf
aaa
cmp
movsb
jmp
or
fidivs
jbe
pop
jo
aad
popa
notl
pop
ds
fiaddl
and
mov
jmp
test
fnstenv
jge
pop
push
push
shlb
push
subl
cmpsl
inc
mov
and
pop
pop
adc
adc
cmp
add
repz
sub
push
jmp
aas
outsb
jmp
jl
mov
jae
push
imulb
ret
sub
xchg
mov
lods
dec
cmp
sbb
fnstcw
cld
jl
mov
xchg
ficoml
mov
pop
inc
ret
push
dec
push
pusha
push
aam
sub
cmpsb
jecxz
and
jne
movsl
push
inc
int
add
add
xchg
cmp
jae
js
das
out
add
out
pop
mulb
xlat
xor
mov
mov
bound
push
in
jecxz
addr16
lea
cmpsl
mov
leave
loope
xor
sub
adc
enter
aam
aad
or
inc
cmp
dec
inc
ficompl
push
vorps
into
das
das
jo
mov
bound
sbb
lods
mov
inc
mov
xorb
pusha
jge
lcall
aad
sbb
inc
xchg
jne
dec
adc
insb
mov
jge
xchg
test
sub
sub
test
push
push
mov
jo
fstl
mov
push
cmpsb
faddl
and
jns
mov
fistps
cwtl
push
or
adc
adc
into
xchg
mov
sarl
cmp
or
jle
pop
dec
jge
adc
lret
lret
sbb
in
ret
sub
mov
das
incb
xlat
lods
dec
hlt
xchg
push
mov
fs
je
adc
mov
js
mov
das
inc
push
lret
rorb
push
lods
lods
xchg
pop
outsb
sbb
mov
dec
pusha
in
shll
stos
sbb
inc
push
imul
pop
lock
mov
enter
call
call
imul
push
dec
pop
pusha
mov
pop
mov
xchg
add
jmp
cwtl
aas
push
fcoml
ja
ljmp
das
sub
sub
or
and
roll
mov
fs
pop
divb
mov
bt
mov
stc
cmp
sbb
sbb
xchg
dec
add
mov
sbb
mov
pop
pop
mov
dec
mov
mov
mov
lret
xchg
cmp
sbb
lods
sub
int
out
fbstp
movsl
mov
or
leave
loopne
hlt
mull
repz
sub
test
test
dec
in
xor
pop
sub
enter
or
sub
lock
orps
arpl
jg
cltd
dec
adc
shl
sub
fcompl
mov
inc
pop
repnz
pop
add
dec
xchg
xor
cs
addl
xchg
jnp
lock
lret
insb
mov
xor
push
fdivl
fidivrs
sbb
pop
popf
ja
push
pop
mov
xlat
mov
dec
jp
push
loope
fucom
mov
push
cmp
fcoml
enter
fsubs
div
sub
xchg
mov
adc
scas
push
jge
xchg
jle
icebp
mov
or
dec
pop
test
xchg
lcall
pop
negb
scas
insl
testl
mov
sbb
arpl
adc
push
test
mov
sahf
mov
and
xor
xchg
xchg
das
dec
mov
push
lods
notb
dec
xchg
in
test
sbb
imul
roll
pop
fistpl
dec
leave
cmp
pushf
jno
pop
mov
shlb
lock
xlat
push
ja
nop
aad
push
jecxz
into
sahf
shrb
sub
imul
inc
and
gs
sub
int
mov
add
test
lods
arpl
or
into
xor
pop
and
mov
add
stos
cwtl
in
xchg
jecxz
test
cltd
test
xchg
cmp
sub
mov
jp
in
cmp
pop
and
pop
mov
fldenv
fsubl
or
xchg
xlat
enter
dec
subl
mov
or
pop
jae
cmpsl
fs
inc
and
dec
pop
fistpll
jns
dec
sbb
int
inc
mov
sbb
push
xlat
loop
enter
popl
scas
cmpsl
mov
add
push
lahf
enter
mov
xchg
lret
hlt
dec
fisttpl
stc
call
scas
push
xchg
nop
pop
sahf
mov
jl
leave
movsl
mov
cmp
sbb
in
jecxz
xorb
mov
daa
pusha
mov
notl
mov
jb
cmpsb
sbb
push
shlb
sbb
mov
aad
cld
and
jmp
jecxz
int3
out
pop
adc
jno
pop
mov
jbe
pop
jbe
mov
ret
sbb
loop
adc
mov
aas
mov
sti
stc
shll
sub
rcrb
and
hlt
push
mov
or
sbb
jl
int
dec
dec
jno
gs
pop
mov
jmp
pop
lds
call
popa
fcmovu
push
bound
sbb
cld
popa
lret
cmpl
sti
mov
xchg
inc
adc
int3
xchg
fcomps
jae
icebp
inc
arpl
fisttpl
cmp
dec
lret
test
aad
test
cs
nop
out
add
cmp
loopne
push
mov
int
mov
dec
mov
jo
add
loop
sbb
push
cmp
pop
xchg
gs
lea
repnz
fs
dec
jb
stc
das
rcrb
inc
test
fsubrs
mov
aas
es
xchg
dec
push
int
imul
ljmp
loopne
jno
sarl
inc
add
enter
sti
aam
int
das
or
xchg
adc
jns
sub
sub
cmc
sub
pushf
sub
imul
inc
daa
ljmp
out
je
and
out
mov
dec
lahf
cltd
iret
sub
rcr
cmp
outsl
in
add
pushf
adc
das
shl
leave
xchg
sub
fcmovnbe
arpl
cli
jmp
adc
or
cmp
les
fnstcw
test
jne
push
or
stc
and
inc
push
aaa
imul
adc
stos
pop
lea
mov
fiaddl
popa
sbb
iret
jae,pn
sti
mov
or
push
push
std
push
data16
das
pop
out
jecxz
aas
lahf
and
int
xor
fldenv
mov
ja
mov
loope
jmp
mov
dec
add
je
rcl
dec
cmp
jmp
ret
inc
lods
push
cmpsl
mov
fcoms
nop
xchg
mov
mov
mov
imul
adc
fists
push
jbe
sub
ds
in
or
jp
sub
sub
sbb
call
sar
or
dec
stos
outsb
pop
cmp
test
jo
bound
sbb
divl
dec
je
in
xchg
std
and
ficoms
xor
pop
jne
insl
insl
cmc
ret
mov
xchg
jae
scas
cmc
push
scas
ret
cld
pop
push
mov
push
pushf
fidivs
fs
dec
leave
mov
andb
xchg
xchg
jns
fsubl
cmp
out
fidivs
ret
or
adc
sub
or
sbb
xor
mov
sub
ljmp
inc
xchg
mov
stos
add
xchg
inc
imul
pop
in
sbb
je
ja
push
adc
add
sbb
shrb
mov
fs
testl
rcrl
xchg
neg
out
inc
sbb
data16
mov
gs
cmp
or
sbb
pop
cmp
js
mov
loop
pop
repz
mov
stc
ja
or
sahf
enter
out
addb
or
iret
and
int3
cld
or
mov
stos
fidivrl
push
fisubl
mov
sti
xchg
mov
mov
cmpl
out
cmp
hlt
mov
inc
sbb
push
sub
cli
cld
fsts
add
pop
and
clc
cmp
movsb
scas
cmp
xchg
repnz
ljmp
dec
imul
mov
inc
cld
call
mov
fldl
lret
mov
or
sub
insl
mov
imul
jl
xorb
in
mov
fucomi
ret
fstps
scas
aas
mov
lods
mov
xchg
in
pop
mov
insb
aad
push
inc
popa
lret
sbb
jl
fidivrl
loop
fisttps
mov
jo
adc
arpl
xchg
lea
popa
pop
mov
mov
cmp
jnp
sbb
frstor
mov
add
ret
and
dec
adc
in
test
push
loop
inc
xchg
dec
pop
push
dec
imul
shl
jnp
or
sbb
cltd
mov
ljmp
bound
xchg
push
ret
int3
sbb
adc
sti
scas
cmpsl
mov
mov
adc
hlt
loop
pushaw
cmc
mov
inc
lahf
or
fnstcw
mov
mov
mov
cmp
add
mov
sub
xor
pop
dec
pusha
inc
loop
or
popa
mov
dec
mov
out
sbb
push
or
dec
adc
push
cmpsl
add
ror
mov
push
xchg
mov
inc
std
sbb
inc
xchg
out
out
sti
xor
and
xchg
mov
add
int
sub
jp
shll
bound
add
jns
adc
in
lret
cmp
ja
pop
mov
dec
mov
lods
add
stc
xchg
daa
mov
dec
mov
cmpsb
repnz
aam
jge
mov
xor
cmp
je
movaps
sub
xchg
stc
sbb
cmp
mov
and
movsl
bsf
mov
aaa
mov
stos
mov
xlat
push
pop
aad
inc
sbb
orl
dec
xor
scas
out
cld
xlat
add
mov
mov
mov
mov
sub
fs
stc
mov
mov
shlb
sub
adc
lock
mov
sarb
xor
ret
mov
loope
ss
add
xchg
add
jecxz
sub
sahf
add
pop
out
aam
fsts
fcoms
push
push
aad
fsubrl
xchg
repz
add
neg
test
pop
xchg
jge
mov
insl
dec
and
fcmovb
mov
fmulp
ret
mov
enter
ljmp
in
aad
mov
hlt
into
ljmp
mov
cmp
jl
or
add
dec
xor
hlt
loop
ds
stc
or
cltd
sub
jmp
lret
sub
sub
loopne
test
outsl
and
sbb
sahf
xchg
fdivrl
cmp
lods
dec
and
jl
ficoms
popa
and
cmp
pop
sub
mov
ljmp
xchg
xor
pop
jno
fldt
inc
and
iret
insb
inc
inc
jb
scas
inc
add
mov
mov
outsb
cmpsl
inc
iret
xchg
aam
dec
cltd
xor
es
mov
sbb
mov
aas
lds
sbb
mov
sbb
xchg
out
or
or
mov
lods
cmp
xchg
mov
jb
mov
or
pop
lock
jbe
xor
push
xchg
add
push
insl
test
jb
jns
jg
in
movsb
sub
pushf
fisubrs
mov
mov
adc
or
and
insl
test
in
popf
push
aaa
dec
mov
movsl
xorb
mov
arpl
pop
cmp
aaa
jb
pop
pop
cmpsl
adc
sbb
mov
sbb
mov
inc
jnp
jmp
dec
cmpsb
fs
in
mov
sub
fldt
shrl
push
imul
add
sbb
mov
sti
aam
int
inc
stos
aaa
addb
pop
sub
mov
or
mov
ret
pop
or
xchg
lods
in
mov
push
mov
pop
mov
push
mov
push
ljmp
jns
jae
push
fstl
or
push
xor
push
in
rol
jno
pop
lea
repnz
stc
rcr
xchg
jmp
xchg
inc
adc
sbb
and
add
int
int
jnp
loopne
inc
mov
add
sub
mov
and
pop
xchg
push
xchg
and
and
pop
js
and
cld
pop
adcl
sbb
in
into
or
insb
sbb
sub
aas
add
sub
and
mov
inc
or
inc
xchg
pop
mov
dec
lret
pop
mov
xchg
adc
add
and
imul
pop
test
mov
imul
or
lock
and
jb
xchg
mov
jo
popf
mov
daa
fwait
sub
subl
jns,pt
inc
sbb
out
sub
clc
add
mov
dec
pop
mov
dec
dec
cmp
dec
movsb
sbb
add
stos
inc
xor
fdivl
and
jg
aaa
leave
xchg
fisttps
and
rorb
mov
mov
mov
cmp
xchg
pop
arpl
dec
and
sahf
fdivrl
jge
mov
dec
mov
es
mov
add
xchg
or
xchg
ja
xor
ret
sbb
gs
repnz
subb
push
push
dec
out
das
mov
sbb
cmp
arpl
mov
mov
sub
das
insl
arpl
push
pop
xor
aam
xor
pop
push
adc
dec
aam
nop
cmpsb
data16
ss
cmp
jns
xchg
cli
push
lcall
xchg
mov
push
sub
out
int
cmp
out
int
sbb
mov
push
ret
cmpb
jns
cmpsb
pushf
and
mov
aas
js
and
push
repnz
clc
adc
fisubrs
inc
lods
scas
test
cs
js
mov
or
and
jne
aad
xchg
and
repz
roll
mov
ja
je
or
push
fstpt
inc
ds
and
mov
rclb
sub
lea
mov
xorb
mov
cs
push
dec
stos
paddb
dec
adc
lea
jo
adc
or
sub
dec
push
pusha
std
cmp
icebp
scas
sbb
jle
mov
das
enter
ds
push
jno
xchg
pop
add
jne
xor
test
repnz
std
mov
lock
mov
xchg
cmp
dec
repz
repz
adc
or
lock
xor
pop
lods
inc
je
imul
in
mov
cli
push
lahf
add
daa
test
pop
lds
stos
sub
mov
in
xor
dec
dec
add
gs
lock
dec
sub
jecxz
mov
flds
mov
push
pop
pop
add
cmp
enter
imul
or
in
das
js
in
js
jle
xor
push
cltd
mov
jno
andl
call
pop
gs
or
fdivl
sub
sbb
xor
mov
fwait
mov
out
push
push
movsb
stos
push
dec
jecxz
outsb
pop
leave
xor
jae
mov
xor
mov
or
ret
jge
inc
inc
jns
imul
push
movups
cmp
stc
in
mov
mov
cmp
lret
ret
mov
sub
in
bound
scas
mov
int3
push
cmp
xchg
loop
adc
mov
push
push
adc
add
call
imul
mov
xlat
and
and
mov
pandn
jo
aaa
fcmovnbe
jmp
sbb
adc
mov
dec
addr16
fists
out
cmp
jge
ds
sub
or
subb
fidivs
ja
push
sbb
mov
mov
jbe
ficoms
lret
dec
mov
push
mov
pop
movsl
push
gs
lahf
sbb
ret
cmp
or
or
inc
es
int
iret
shll
xor
mov
ja
in
ja
xor
out
xor
pop
jg
idiv
cli
mov
into
jmp
and
int3
call
popf
loop
punpckhdq
xor
push
or
iret
ror
ror
outsl
clc
pop
mov
cmpsb
jg
jmp
daa
or
add
cmp
and
repnz
dec
hlt
sbb
jne
ficoml
cmpsb
xchg
ficomps
sub
inc
in
loope
push
fcmovnbe
push
adc
call
adc
or
xor
jne
pop
add
pop
imul
inc
loope
push
ss
prefetch
stc
sbb
jo
inc
in
pop
leave
xchg
mov
leave
xor
aad
es
shr
cmc
flds
mov
pop
push
loop
movsb
inc
sbb
mov
fstpl
cmp
push
push
mov
jle
cld
movsb
pop
cltd
mov
sbb
push
fstpl
sti
xor
hlt
inc
in
cltd
cmp
xor
push
pcmpeqw
or
dec
inc
inc
sub
cmpsb
cs
pop
lret
fbstp
hlt
and
mov
iret
ret
jl
insl
or
and
sub
xchg
dec
repz
arpl
adc
scas
jo
xchg
shrl
addr16
movsb
push
and
mov
mov
aas
mov
inc
mov
notl
lea
fisttpl
cwtl
push
push
mov
push
inc
mull
adc
sbb
add
je
push
es
out
lret
push
movsb
cmpsl
data16
jecxz
pop
dec
jo
fcomp
or
and
stc
das
inc
and
inc
pop
dec
sub
fiaddl
cs
jmp
mov
sbb
gs
cmp
ffreep
add
mov
cmp
inc
out
sbb
xchg
gs
lahf
sbb
ret
aad
mov
daa
push
mov
mov
bound
push
xlat
enter
in
movsl
mov
jno
jp
pop
jl
out
add
xchg
dec
jle
les
loop
les
insb
cmc
or
scas
sahf
test
push
insb
stos
cmc
lahf
fsubrs
inc
out
data16
outsb
xor
ja
loopne
xchg
lcall
adc
jb
jl
sarb
xchg
mov
mov
loop
fdivl
out
imul
pop
sub
xor
adc
testl
out
cli
imul
lret
or
mov
inc
dec
cmpsb
dec
js
xchg
pop
sbb
sbb
ss
fcom
sub
sbb
mov
adc
scas
test
push
inc
fcoms
adc
dec
mov
pop
outsl
mov
fisubl
jl
lods
add
test
mov
clc
push
les
leave
mov
insb
and
ret
icebp
das
fstps
std
cltd
push
mov
sti
bound
and
daa
mov
popf
dec
adc
lods
jp
inc
fwait
mov
adc
fmulp
jno
faddl
fidivrs
adc
in
lock
adc
sub
and
add
std
cwtl
adc
lret
leave
mov
mov
jg
addl
imul
les
rorl
in
icebp
into
adc
lods
xchg
pop
sbb
xor
and
or
sti
cmpsb
mov
jb
xchg
adc
jb
dec
and
push
jg
mov
lea
insb
scas
pop
call
adc
sti
xchg
in
repnz
pop
test
push
fisttpl
std
cltd
lret
repnz
cwtl
mov
mov
sbb
fsubrs
and
adc
aas
xchg
mov
enter
out
pop
lea
mov
int
push
push
fadds
jns
cwtl
mov
outsl
dec
es
or
data16
mov
lock
adc
repz
or
outsb
aad
ljmp
cmc
or
cmp
int3
outsb
int
ljmp
int3
inc
sub
push
sub
inc
cmp
loopne
sub
xchg
xchg
ja
cmpsb
inc
pushf
ret
sub
test
sub
out
push
mov
mov
sub
mov
mov
test
mov
mov
add
loope
aaa
leave
sbb
lock
xchg
mov
cmp
fbstp
jmp
sub
and
call
push
or
add
jle
jl
iret
stos
or
lcall
xchg
enter
push
mov
push
jge
push
jl
pop
pushf
sbb
jp
cmpsl
dec
xchg
cmp
jle
inc
push
push
shll
nop
jp
mov
add
call
push
inc
sub
mov
cmp
xor
pop
xor
jo
adcb
in
inc
sahf
jae
push
jns
mov
sbb
sbb
push
lock
pop
push
repz
xor
push
jb
xchg
cwtl
cmp
jmp
imul
insb
aam
add
mov
jns
inc
rcrb
jmp
scas
in
mov
movsb
mov
fistpll
ljmp
push
xlat
icebp
pop
mov
fcomps
and
sbb
dec
nop
pusha
mov
mov
push
pushf
inc
xchg
data16
add
nop
or
jbe
rcr
xchg
insb
adc
xchg
fdivrs
in
ja
add
lods
fisttpl
mov
pusha
das
mov
dec
jbe
push
xchg
mov
ret
push
add
call
rol
inc
mov
or
ss
mov
std
add
fst
jo
cmp
shlb
inc
lcall
sbb
repz
out
lahf
subl
das
aam
cltd
mov
jae
sub
xchg
add
dec
fldcw
inc
ja
cli
jp
mov
push
xor
test
push
aas
sti
nop
cli
cmp
add
nop
mov
jne
subb
push
ljmp
sub
into
lea
fiaddl
lods
and
inc
add
out
jo
in
or
pop
push
ret
in
iret
js
adcl
lods
push
jmp
js
fs
mov
mov
orb
icebp
lods
mov
loop
push
divps
cmpb
imull
jbe
shll
sbb
jle
insl
insb
pop
addr16
pop
xchg
mov
mov
dec
xchg
mov
aam
xchg
pop
sub
jb
pop
fisubrs
dec
sti
lahf
add
insl
pop
cmpsl
test
outsl
pop
pushf
xor
outsb
movsb
scas
enter
les
icebp
orw
cmp
cmp
xor
int
inc
loope
imul
add
into
push
add
and
test
repnz
inc
xor
lods
fildll
fcompl
imulb
mov
sbb
in
inc
sub
test
lahf
xchg
sub
push
lds
in
adc
nop
dec
les
xor
sbb
cwtl
icebp
jg
mov
das
ret
ds
stc
aas
and
jb
or
sbb
push
mov
leave
xchg
fistl
aaa
cli
cmp
push
xchg
cmpsb
push
push
lcall
sti
cld
and
leave
adc
inc
cmc
and
push
dec
inc
insb
cmp
xchg
and
xchg
pushf
push
arpl
mov
arpl
enter
and
dec
outsb
push
andl
add
fdiv
movsb
hlt
push
out
inc
pop
loope
adc
sahf
mov
ss
add
sub
and
xor
loope
ja
ret
movsl
xchg
daa
or
xchg
pop
push
call
push
xchg
in
fildll
push
dec
jecxz
out
mov
inc
push
push
adc
stc
cmp
mov
xchg
push
xchg
add
leave
xchg
lahf
push
mov
sub
mov
adc
rcrb
dec
repnz
gs
std
jmp
xchg
aas
dec
mov
xchg
xor
repnz
xchg
or
cmp
inc
rcll
jae
imul
sbb
xchg
mov
mov
subl
hlt
bound
into
mov
mov
aam
and
fdivrl
sub
mov
addb
aad
sub
cmp
push
pop
popf
enter
mov
out
jmp
fsubs
and
adc
sub
in
test
inc
in
aas
mov
mov
pushfw
pop
fisttpll
or
or
imul
fistpll
xor
in
fildl
sub
sbb
lahf
inc
sarl
mov
push
jb
mov
pop
call
loope
icebp
inc
jb
jb
or
push
into
adc
add
push
les
dec
scas
jo
sub
xadd
jo
mov
push
roll
testl
das
jbe
ret
mov
jns
push
fs
nop
or
or
add
adc
ss
and
cltd
push
mov
dec
or
xchg
hlt
mov
cld
sub
stos
inc
and
and
loop
jbe
adc
sti
adc
add
lcall
out
xor
inc
data16
rclb
push
dec
pop
int3
push
add
clc
dec
and
std
mov
sub
cmp
push
sub
aad
fimull
loopne
orl
lods
rcll
std
shll
pusha
push
in
std
aas
jmp
sarb
xchg
clc
cmp
sub
adc
addr16
inc
cmpsb
daa
ret
andl
sahf
lea
mov
push
cmp
jbe
push
sbbl
test
js
in
pushf
nop
pop
inc
movsb
gs
jae
sbb
ret
push
fidivs
call
stos
push
sbb
mov
xor
pop
sahf
push
lock
out
pop
subb
xchg
sahf
jae
add
jmp
xchg
or
test
loope
xor
gs
xchg
lods
push
xor
out
insb
mov
scas
test
mov
jecxz
dec
insl
rorl
push
lret
add
pop
mov
mov
dec
lock
push
daa
pop
xor
pop
fidivrs
mov
xchg
xchg
xchg
add
lcall
xchg
outsb
push
jge
int3
inc
pop
ret
in
andl
sub
pusha
lret
cmp
mov
mov
cmpsl
data16
popfw
sbb
shl
adc
jmp
pop
inc
mov
adcb
jle
mov
mov
cmp
inc
pop
push
out
out
jo
stos
mov
jge
icebp
rolb
adc
add
or
sub
cs
in
rorb
lcall
mov
aad
fbld
pop
xor
push
pop
jp
fcmove
sbb
aad
orl
out
push
sub
insb
adc
jno
sbbb
inc
jno
inc
cmp
sub
in
or
cmp
mov
pop
repnz
cld
rorl
fsubrs
push
mov
and
lock
roll
sbb
fimuls
jnp
scas
push
push
push
ss
inc
push
dec
clc
fiadds
mov
sbb
in
inc
mov
xchg
aad
push
mov
push
rorl
popa
mov
int
inc
es
push
shlb
iret
aaa
xor
jle
in
push
into
fsubl
hlt
mov
sub
sub
cmp
or
movsl
insl
jae
stc
popf
push
mov
push
aas
sbb
js
mov
fs
scas
lret
and
loop
or
push
shrl
out
shrl
rclb
mov
pop
xchg
imul
in
mov
mov
xor
idivb
jnp
and
in
test
lret
and
les
into
push
test
imul
mov
dec
repz
jmp
bnd
cmp
and
push
push
adc
mov
or
dec
mov
mov
icebp
jle
dec
pop
ss
lcall
lea
jle
xor
jg
sbbb
jnp
push
test
repnz
dec
ficoms
pop
scas
jne
out
insl
xor
push
dec
rol
xor
push
xchg
sub
fstpt
cs
scas
jo
pop
lock
pop
int3
mov
cltd
jbe
das
out
popf
cmp
add
jp
popa
and
jge
pop
clc
xor
sub
inc
mov
mov
mov
pop
jno
xchg
les
push
cs
addr16
clc
rcrl
fcmovnbe
mov
imul
jbe
out
sub
in
mov
mov
cld
sub
pop
push
mov
xorl
les
xor
mov
mov
scas
lock
sub
loopne
lds
jnp
in
ficoml
pop
inc
scas
adc
data16
dec
and
sub
dec
pop
and
mov
mov
sbb
adc
les
and
jns
adc
rorb
shll
lods
mov
or
xchg
xchg
jnp
xor
gs
ss
test
lcall
mov
jl
data16
mul
and
ljmp
mov
test
clc
xchg
sub
push
in
dec
sbb
imul
bound
gs
pushf
pop
dec
rcrb
adc
lods
test
push
mov
push
fwait
hlt
and
xor
cmpb
lods
adc
jmp
push
ja
xlat
scas
std
aam
movsb
sahf
pusha
in
fisubrs
jbe
cmpsb
add
cmpl
mov
inc
push
mov
sbb
fistpl
xchg
mov
xchg
pop
adc
add
inc
dec
xchg
lea
adc
scas
hlt
fists
fidivrs
aaa
lods
inc
mov
and
xchg
int
inc
jp
roll
lock
dec
xor
push
xchg
cmp
insl
ja
xor
lret
fnstcw
ljmp
sbb
sub
ja
mov
jg
pop
repnz
scas
loope
loope
adc
dec
loop
or
or
push
push
xor
push
pop
sti
xor
aas
test
cmp
xor
repz
jmp
jl
inc
loop
mov
add
xor
add
add
jo
flds
stc
mov
push
fidivl
push
mov
out
push
pop
mov
ret
adc
add
int
xchg
add
xorl
dec
lahf
xorl
sub
aad
aad
xchg
pop
xchg
lods
dec
push
inc
les
push
and
fildll
in
xor
pop
xchg
jp
and
jno
stc
dec
fwait
lret
and
sbb
outsl
mov
mov
mov
lahf
ljmp
inc
ljmp
adc
adc
aad
mov
cmp
cmp
or
xchg
test
adc
addr16
add
mov
shl
cs
aam
mov
std
sub
jmp
outsl
mov
pop
fistpl
testb
dec
xchg
mov
roll
test
xchg
push
or
jge
add
mov
mov
jns
jecxz
cmpl
xchg
cmp
loope
mov
movsl
ja
fbstp
in
mov
and
mov
push
jnp
jmp
mov
jae
popa
sub
push
int3
scas
lea
popa
or
inc
xlat
xchg
es
sub
inc
adc
aam
jecxz
pop
in
in
sbb
inc
std
xor
or
repz
scas
push
fwait
xor
sbb
jo
mov
mov
sub
cld
movsb
ja
pop
addr16
rcrb
push
add
pushf
jecxz
movl
pop
pop
clc
popf
xor
jb
cmp
xchg
mov
addr16
in
bnd
fadds
xchg
add
idivb
mov
mov
mov
hlt
cmpl
push
cmp
hlt
jmp
rcrl
adc
push
and
mov
mov
push
or
mov
ds
loope
or
les
mov
mov
xor
inc
test
lahf
adc
jne
jge
mov
jnp
stc
mov
jbe
fbstp
push
push
add
mov
xor
jbe
and
aas
shl
in
arpl
or
lret
or
ja
fists
js
stc
sbb
mul
scas
mov
dec
lock
mov
sub
pop
push
xchg
push
call
inc
xor
dec
aaa
mov
mov
rep
std
push
jl
add
pop
add
aad
lds
cmp
insb
loope
aas
xchg
ret
mov
jg
jns
fbstp
and
jecxz
iret
dec
mov
xchg
cli
repnz
push
mov
int
sarl
push
ja
cld
cmp
inc
jo
or
shl
sub
hlt
clc
clc
push
pop
inc
cmp
mov
push
sbb
rcrl
lods
test
adc
fnsave
mov
xchg
rclb
cli
imul
orl
popa
push
mov
jno
jo
jno
cmp
and
add
xchg
shll
ficoms
leave
iret
push
adc
div
cmp
sub
add
mov
adc
jmp
gs
lret
inc
jmp
xor
jle
insb
ljmp
pop
jle
mov
rolb
mov
inc
iret
lock
repnz
sbb
mov
jo
test
xor
cmpsb
mov
sub
xor
push
loope
ret
imulb
pusha
bswap
loope
add
adc
hlt
sti
out
nop
pop
shl
sub
leave
mov
cld
push
inc
ja
push
aas
repz
popa
mov
data16
xchg
jle
inc
inc
or
sar
jae
jmp
test
lahf
jecxz
jecxz
push
aaa
push
mov
mov
jp
sub
pop
ljmp
push
cs
add
cs
jnp
mov
sub
mov
enter
test
mov
cld
xor
xchg
outsl
inc
in
inc
xchg
add
mov
mov
jmp
cmpsb
test
in
or
and
sti
dec
sub
lock
les
push
push
popf
push
xchg
cwtl
dec
jne
cmpsl
jmp
sahf
ljmp
mov
jo
cwtl
fldcw
mov
shll
dec
xor
popa
mov
loopne
or
pop
cmp
int
sub
or
dec
inc
jb
mov
mov
cmc
sbb
imul
adc
fs
mov
and
notb
lahf
push
mov
addr16
fnstenv
adc
loope
lods
ret
jnp
inc
xor
mov
mov
test
inc
fsts
ds
jnp
push
xchg
ja
push
andb
je
push
popa
imul
sub
mov
loop
out
mov
jnp
jnp
dec
xor
push
pop
repnz
mov
out
ret
xor
sub
dec
cmc
mov
stos
loopne
cli
jbe
mov
inc
cmpsl
sbb
fcmovnbe
mov
sbb
add
jg
jg
mov
jmp
and
repz
std
pop
mov
stos
mov
add
sbb
nop
cmp
push
sbb
loope
jmp
loop
jle
or
ja
popa
pop
dec
and
sub
sub
push
xlat
or
int
lds
negl
outsb
fwait
aam
fucom
mov
jb
fsts
in
add
mov
clc
pusha
outsb
pop
int3
jecxz
sbb
sub
inc
rcrb
loop
xchg
hlt
test
incb
jg
inc
mov
jecxz
imul
pop
lret
mov
xchg
jecxz
and
sbb
lods
loope
sub
adc
mov
mov
mov
push
sarb
js
loope
leave
ret
pop
mov
shll
adc
incb
clc
mov
or
pop
and
xchg
add
mov
imul
jno
push
mov
mov
or
loop
lret
movsb
mov
lods
mov
lds
cmp
xor
pusha
sbb
cmp
ja
xchg
adc
dec
cli
inc
lds
int3
in
cli
add
aas
ljmp
pop
inc
std
cmp
dec
lods
add
sbb
pop
mov
xlat
adc
xorl
or
cmp
cld
leave
xor
mov
sub
mov
xchg
pusha
popf
jnp
insl
mov
lock
jnp
jae
imul
lahf
enter
aad
adc
imul
scas
mov
imul
inc
sbb
and
ja
fucomi
cmp
push
xchg
repnz
xor
and
aam
inc
rolb
push
inc
int3
dec
popa
sub
mov
imul
cmp
inc
aam
pop
jnp
in
out
popf
andb
mov
pop
and
cmp
pusha
and
sti
notb
adc
pop
mov
jno
arpl
add
into
orb
andb
outsl
mov
mov
mov
mov
mov
mov
jo
mov
dec
rorb
push
mov
adc
push
adcb
xchg
pop
mov
out
sahf
clc
fdivr
mov
pop
rol
and
mov
ja
jnp
das
inc
lahf
xchg
xchg
stos
movsl
add
jl
lea
pop
pop
rolb
push
jp
fs
test
sub
mov
hlt
jp
cmp
cli
add
sbb
call
in
or
mov
fldcw
xor
in
mov
dec
lea
push
shlb
bnd
mov
inc
or
pop
fsubrs
jmp
pop
stos
orb
andl
adc
lahf
subl
add
xchg
mov
cltd
inc
into
cmp
not
jle
pop
inc
mov
scas
mov
nop
mov
jo
pop
jge
popf
cs
fdivrl
push
int
loopne
lret
inc
int3
mov
popa
shl
jo
pop
pop
std
lods
rcll
push
sub
stos
or
mov
bound
pop
add
shll
pop
dec
cmp
call
pop
test
jo
ss
mov
fbstp
pop
lret
adc
adc
add
and
in
sbb
dec
jnp
mov
lret
mov
sarl
fcom
or
and
addb
push
insl
push
sar
and
repnz
rol
ficoms
sub
loop
imul
and
aam
imulb
add
rcrl
and
xlat
arpl
xchg
push
popa
daa
adc
jnp
add
icebp
pop
out
inc
lcall
mov
xchg
insl
scas
lods
xchg
push
add
push
inc
dec
xchg
jecxz
hlt
rcrb
jne
dec
popa
mov
pop
push
pop
adc
xchg
mov
mov
int3
call
js
loope
push
xchg
lock
in
jne
repz
pop
data16
push
mov
add
mov
loopne
xor
data16
stos
mov
stos
xchg
les
cltd
aam
cld
in
sub
enter
xchg
pop
mov
lahf
sbb
mov
ja
and
push
inc
aam
pusha
mov
pop
loopne
pop
outsb
lds
cmpsl
push
dec
xchg
jmp
ss
bound
dec
sbb
and
repnz
push
aaa
xor
into
pop
xchg
cmp
mov
jp
jne
mov
mov
test
sbb
sarb
cmp
inc
cs
fwait
inc
pop
xor
mov
push
les
test
jo
fbld
inc
xor
xchg
and
lods
mov
mov
and
cld
mov
outsb
xchg
lods
test
ljmp
les
jno
push
out
arpl
inc
pop
xlat
rorl
cmpsb
enter
add
mov
jno
leave
les
jne
mov
sbb
adc
shlb
adc
sbb
xchg
cmp
pop
push
int3
je
addr16
add
or
bound
push
mov
pop
sub
adc
cmpsl
repz
jb
gs
sbbb
sbbb
int
xchg
and
push
fildll
cmp
pop
xlat
dec
xchg
push
inc
mov
outsl
xchg
push
test
scas
jg
jne
sbb
lods
push
rcrl
xor
push
inc
fwait
dec
lahf
mov
xor
das
sub
xchg
into
loop
mov
pusha
test
call
and
std
lods
aam
xchg
loope
divb
stos
lock
sbb
out
push
mov
adc
or
and
and
jbe
pop
jl
sbb
jecxz
mov
jge
dec
test
mov
pop
pop
add
hlt
adc
cmp
add
lods
call
cs
push
xor
xorl
push
inc
inc
int3
es
push
xor
xor
sbb
out
add
pusha
jmp
inc
nop
or
adc
adc
sub
jle
inc
les
push
inc
imul
ficoms
aam
mov
sbb
adc
inc
addr16
push
jmp
into
ret
push
js
mov
fistps
push
les
xchg
push
pop
or
and
leave
int3
inc
push
jns
jbe
sub
inc
and
cmpsl
cmp
jae
xchg
jo
loop
ret
add
ljmp
push
push
sbb
in
push
push
movsl
popf
push
test
push
push
add
ss
shl
leave
lret
negb
add
push
int
sahf
lods
and
pop
pop
mov
loop
cltd
jl
ret
rol
xchg
outsl
push
fwait
shll
xor
repz
adc
decb
mov
sub
and
leave
leave
push
test
lds
hlt
jmp
into
xor
sbb
dec
or
pop
lahf
jg
mov
mov
les
xchg
das
fnstcw
scas
lret
xchg
inc
dec
jne
cmc
jge
push
icebp
and
insl
movsb
sbb
imul
inc
mov
aam
fmul
xchg
test
and
imul
sub
nop
mov
pusha
mov
sub
movsl
and
mov
push
mov
mov
in
mov
mov
inc
repnz
xchg
mov
cld
fcoms
mov
es
ja
data16
test
inc
push
xchg
test
fldcw
cmpl
mov
out
inc
push
pop
xlat
dec
in
fcomp
pop
dec
xor
scas
sarb
mov
mov
xchg
pop
icebp
int
enter
sub
mov
cmp
cwtl
dec
adc
out
add
cwtl
sbb
lds
adc
enter
pop
push
or
mov
insl
addr16
std
pushf
push
cli
aam
lret
push
adc
push
sub
xor
mov
dec
mov
jb
nop
ljmp
stc
mov
lcall
inc
add
add
and
xor
hlt
ret
cmp
sub
cmovl
mov
arpl
xchg
and
adc
in
movsl
cmc
fs
jae
mov
and
cli
cmp
repz
ret
adc
cltd
daa
dec
dec
addb
lret
out
stc
mul
cmp
push
inc
frstor
jae
lock
lock
jbe
mov
add
in
mov
sbb
call
inc
insl
lcall
push
jp
xor
push
mov
std
stos
loopne
and
sbbb
or
push
push
sbb
iret
stos
push
pop
ret
popa
insl
jno
or
inc
sub
sub
adcb
xchg
movb
fbld
lfs
xchg
pop
jns
and
fwait
dec
sub
stos
shl
add
fidivl
sub
leave
sbb
xchg
mov
imul
cli
fildll
popa
sbb
test
jmp
jb
shrl
xor
test
arpl
cmp
aam
push
adcl
mov
pop
sub
mov
fs
sar
fstl
std
loope
mov
xchg
or
and
lods
lret
pushf
mov
imul
loopne
xchg
inc
inc
sahf
nop
rcrl
testl
hlt
scas
test
es
sub
rolb
or
or
inc
pop
fbld
xor
sbb
xorb
aad
enter
inc
negl
add
cmp
dec
and
inc
inc
test
sub
jo
shr
sbb
arpl
repz
test
dec
enter
popf
adc
xor
push
daa
fisubs
push
dec
sar
mov
pushl
mov
inc
movsb
and
mov
popf
push
push
andb
add
shlb
jns
call
mov
inc
sbb
inc
cmp
aas
sub
aas
mov
into
xchg
in
pop
inc
test
pop
ror
movsb
pop
stos
and
mov
ret
jae
inc
notl
xchg
add
add
pop
jns
outsb
pop
cmc
addl
aad
jae
fs
test
sub
inc
les
sahf
adc
inc
lret
cmp
or
stc
cmpsl
loop
lods
sti
xchg
pusha
lea
or
sbb
xor
sub
cmp
jns
cli
inc
das
sbbl
cltd
mov
inc
xor
mov
sti
dec
test
loop
repnz
xchg
xor
push
and
jge
mov
add
cli
push
and
pop
shrb
jl
fwait
pop
and
adc
popa
and
jmp
jae
idiv
and
movsb
push
cmp
sarb
test
pop
pusha
push
std
add
stos
inc
push
insl
scas
push
les
cmp
sti
push
sub
xor
stos
fiadds
adc
test
sbb
or
int
flds
sbb
push
sub
aad
dec
and
and
hlt
jl
xlat
fbld
or
sub
push
mov
jb
je
pop
and
test
ja
xchg
xor
dec
mov
mov
sub
ffree
xchg
and
aam
push
jl
or
push
pop
push
je
push
iret
out
mov
icebp
andb
cmp
xor
xchg
test
add
mov
xchg
push
pusha
add
add
leave
sub
add
ret
mov
mov
ss
aas
mov
mov
lret
repz
and
fimull
add
push
push
push
xchg
mov
imul
mov
movsb
cwtl
jle
in
out
stos
call
jp
cli
pop
addr16
mov
ret
adc
ret
stos
add
lret
or
push
mov
dec
mov
mov
out
lret
add
loopne
iret
ja
push
and
mov
mov
mov
ljmp
mov
loop
dec
jns
mov
aad
orb
sbb
mov
lahf
mov
enter
adcl
addl
into
lds
lcall
cli
lock
or
scas
movsl
shrb
inc
inc
mov
mov
inc
or
or
les
sub
add
pop
xor
xchg
jb
push
fmul
test
jge
adc
dec
jns
dec
mov
aad
out
mov
cmp
mov
push
mov
bnd
aaa
mov
inc
cmpsb
stc
mov
xor
inc
inc
dec
lods
mov
iret
lock
nop
mov
out
jnp
sub
bt
mov
bound
cmp
and
cmp
fstp
or
push
scas
jno
mov
add
in
cltd
xor
sarb
mov
or
pusha
fld
pushf
push
pop
jno
mov
add
mov
push
pop
mov
inc
int
outsl
xchg
or
cs
jg
outsb
mov
add
sarl
loope
stc
mov
fbld
push
inc
sbb
roll
sub
mov
les
testl
inc
test
mov
pop
dec
adc
or
mov
xchg
les
mov
cwtl
push
jg
cltd
mov
aas
mov
enter
fdiv
stos
aas
js
sub
scas
mov
adc
lret
inc
hlt
not
or
dec
sub
cmp
sbb
and
bound
clc
aam
inc
push
rcr
mov
cmc
inc
and
nop
dec
xchg
jae
lods
cmpsl
jl
sarl
mov
mov
mov
xchg
sub
insb
sbb
jae
fucomip
sti
vprotd
out
xchg
in
jb
sbb
out
int3
sti
pop
lcall
dec
fldcw
fs
ret
and
pushf
xor
adc
mov
je
sbb
test
lcall
outsb
or
lcall
mov
add
daa
dec
ds
sbb
mov
pop
jno
xchg
inc
fsubs
repz
jl
adc
push
dec
pop
sti
sbb
adc
in
push
decl
pop
jl
div
cmp
cld
fdivrs
les
pusha
fadds
repnz
and
insb
jge
inc
mov
scas
imul
imul
xchg
xchg
popa
push
pop
sahf
mov
cltd
int
add
mov
enter
sub
add
out
and
or
pop
jbe
out
or
daa
loope
movsl
pop
pop
dec
sbb
inc
fs
mov
je
clc
cli
mov
mov
adc
or
cs
lods
mov
shll
ret
out
adc
push
lods
dec
clc
fdivrl
push
dec
pop
jno
mov
jo
mov
dec
mov
fwait
pusha
outsb
leave
pop
imul
outsb
adc
mov
add
sbb
aaa
les
dec
out
cmp
data16
outsl
sti
call
mov
shrl
sbb
repnz
je
es
cmp
in
movsb
mov
jno
mov
ss
xchg
call
shrl
push
xchg
sbb
mov
insb
les
divb
or
adc
mov
mov
xor
dec
inc
jb
pop
popf
cmpsb
add
fsub
inc
sub
int3
rep
mov
xor
add
add
mov
mov
ja
loopne
pop
push
pushf
in
xchg
ret
pop
push
hlt
in
jno
mov
mov
push
rclb
push
add
out
fwait
cmp
mov
xchg
clc
inc
mov
xor
repnz
push
int3
fcom
jl
jecxz
adc
push
nop
fnop
mov
cld
sbb
push
mov
pop
inc
add
xor
popf
xchg
and
or
push
inc
fsubrs
add
ds
mov
out
cmc
ljmp
fcoml
lods
cld
cwtl
add
or
push
mov
push
jo
xor
add
lods
negb
into
ret
jge
sbb
and
cmc
call
je
bound
fcoml
push
fidivrs
sti
inc
fimuls
push
ret
int3
mov
mov
idivb
xor
cmp
std
dec
and
daa
mov
rcrl
nop
movsb
pop
dec
sahf
in
test
mov
sub
stos
add
xlat
mov
pop
fiaddl
shr
aad
cmp
out
and
mov
ret
pop
inc
nop
mov
stos
cmc
xor
sbb
xor
fdivr
movsl
inc
jg
cmp
das
imul
xchg
lds
sub
sbb
test
popf
add
in
jmp
lds
icebp
mov
mov
std
inc
mov
mov
arpl
mov
ret
cmpsl
fstpt
icebp
cmp
add
pop
cmp
fcmovne
js
mov
mov
enter
xor
pop
les
addr16
in
jns
inc
push
enter
mov
jl
int
pop
aad
xor
adc
mov
fists
nop
mov
and
out
in
dec
dec
cmp
lahf
fidivrl
push
inc
rorb
xlat
mov
adc
xor
lcall
aam
pop
shrl
into
hlt
lret
cli
in
and
sub
ds
add
test
outsl
popa
inc
into
add
mov
call
cmp
ret
loope
sub
sub
xor
sub
add
subl
xchg
test
xlat
jns
fnstsw
fs
out
push
and
lahf
mov
test
imul
mov
into
push
mov
push
fcoml
into
mov
testb
push
outsb
push
insb
sbb
jecxz
aaa
mov
in
cwtl
pushf
incl
sub
jae
mov
insb
xor
adc
xor
arpl
push
les
mov
or
pop
mov
fucomip
cmc
xor
adc
popf
out
jl
aas
mov
dec
cmp
mov
adc
cmpsl
fsubrs
nop
and
mov
stc
jmp
mov
mov
jle
sbb
jg
and
addl
call
lcall
sbb
popa
pushf
xor
bound
arpl
sub
jmp
lods
fcomip
add
hlt
cli
pop
aad
je
into
fisttpll
add
xor
dec
jb
fs
xchg
pop
xchg
lcall
or
lds
pop
daa
lds
pop
push
jno
xchg
push
kortestw
jo
pop
sub
mov
xor
cwtl
mov
pop
pop
les
jne
cmc
inc
cwtl
mov
arpl
xchg
xchg
push
pop
jg
sub
subl
dec
pop
xor
lret
mov
movb
lahf
sti
sub
popa
sbb
mov
push
mov
jnp
clc
mov
xchg
movb
lea
mov
add
push
xor
jno
mov
nop
in
jge
fstp
nop
fnstenv
push
in
loop
outsl
aad
push
mov
push
push
jno
mov
push
jns
pop
divb
pop
scas
sar
jg
xchg
dec
pop
jl
add
shl
inc
push
dec
leave
das
dec
push
inc
in
inc
jno
sub
adc
add
imul
push
in
aam
in
int
lds
mov
pusha
xchg
in
cmc
xchg
or
xor
int3
imul
daa
loopne
ljmp
cld
or
loopne
stos
arpl
sarl
pusha
out
repz
lods
rcrl
and
mov
nop
fdivp
dec
in
orl
fstpl
lea
aas
popl
mov
sar
stc
loop
mov
es
jne
jl
incl
xor
addl
pop
pop
mov
in
js
stos
adcb
inc
mov
cltd
scas
add
stc
dec
jp
cmp
rcrl
cmp
push
test
add
dec
push
fwait
dec
int3
inc
pop
arpl
xchg
mov
inc
ret
mov
mov
xor
mov
and
repz
sarl
xor
push
sub
push
xor
jecxz
mov
inc
push
or
call
mov
xchg
jns
dec
in
or
outsl
mov
cmp
stos
jl
jmp
loopne
pop
std
lcall
add
push
jp
lea
xlat
fmull
mov
ljmp
jbe
cmp
mov
xchg
nop
dec
cld
in
dec
inc
addr16
test
fisttps
add
jge
cwtl
aas
repz
xor
in
imul
push
scas
mov
repnz
sub
clc
mov
cltd
push
mov
inc
shrl
xchg
xlat
pushl
jb
stc
push
ret
cmp
mov
push
sub
mov
aad
cwtl
fs
adcl
cli
fs
push
mov
outsl
arpl
mov
adc
test
dec
sarb
pop
imul
stos
int
sbb
cmp
mov
inc
test
rorl
mov
lret
xor
pop
adc
frstor
push
push
push
push
test
out
push
imul
jmp
xchg
mov
orps
add
addr16
pop
xor
adc
push
rcll
les
sbb
dec
in
xor
pop
inc
mov
mov
sbb
pop
lret
and
inc
fucomi
xor
jle
fadd
or
mov
aaa
jae
mov
push
icebp
cmpsl
repz
xchg
xor
jb
or
push
int3
fmul
aaa
cmp
rorb
jge
clc
adc
outsb
rorb
jmp
cltd
mov
mov
in
xchg
adc
loopne
jne
xor
pop
daa
lret
in
cwtl
jge
bound
push
mov
sar
sbb
jno
stos
jge
aam
push
enter
notl
push
push
inc
xor
mov
pop
aaa
pusha
add
out
cs
into
mov
lret
jbe
sub
rclb
fldcw
xchg
test
dec
push
scas
jl
adc
dec
clc
xchg
std
fsubrp
sbb
sbb
inc
inc
in
xor
mov
test
add
cmp
in
mov
stc
push
push
pusha
sub
jns
mov
sahf
or
outsl
jg
and
cmpsb
push
push
and
std
lcall
and
or
or
gs
aad
in
fistpl
inc
sti
mov
bound
push
je
std
mov
insb
or
mov
pop
cmpsl
mov
jecxz
pop
in
mov
bnd
lods
add
add
adc
es
mov
push
in
stos
jl
mov
mov
push
pop
mov
sbb
daa
ljmp
movsb
xlat
les
ja
jbe
call
out
push
daa
push
imul
add
in
and
repnz
sub
xor
cmpsl
fs
test
test
xorb
loopne
lods
insl
js
filds
sbb
pop
andb
mov
clc
in
push
xchg
push
mov
call
bound
notl
inc
mov
adc
imul
adcl
popf
and
movsb
lret
bound
je
out
jmp
inc
xchg
sbb
lods
push
add
ret
inc
fwait
sahf
xor
sahf
add
rorb
and
cmp
pop
hlt
fs
mov
pop
inc
or
int
rcr
dec
and
jo
popl
adc
cld
jecxz
ss
sbb
das
fldl
mov
xor
adc
jl
cmpsb
push
fdivr
or
loopne
clc
or
shll
daa
popf
cltd
and
jns
out
mul
sub
push
mov
inc
cmp
cmp
mov
fisubrs
mov
ja
sub
pop
or
cmp
xchg
mov
sub
ret
filds
les
mulb
test
xchg
jp
popa
test
in
adc
xlat
stos
dec
push
lock
cmp
dec
dec
mov
je
mov
mov
dec
popf
add
xchg
xchg
aas
adc
sbb
subl
je
xchg
out
popa
and
mov
pop
ljmp
lds
xchg
rcr
xlat
lds
mov
xor
aaa
push
push
fbstp
push
push
ss
dec
sub
or
jge
adc
pop
icebp
sub
test
push
fisttps
testb
jmp
popf
fwait
sahf
and
addr16
inc
inc
push
cltd
sub
fists
in
hlt
ljmp
jg
pop
mov
sbb
lock
mov
xchg
or
pop
or
inc
repz
cltd
xor
test
add
into
test
mov
pop
popa
insb
or
out
cmpsb
sub
adc
out
scas
pop
in
sub
popa
cmp
lcall
jae
xchg
cmp
iret
sub
daa
mov
test
fcoms
les
xor
cmp
aad
pushl
and
xchg
mov
les
addb
dec
sbb
out
mov
imul
push
pusha
xchg
orl
jns
sub
inc
fcmovnbe
movsl
lahf
mov
scas
mov
out
dec
clc
jbe
sbb
cltd
js
iret
loope
adc
mov
fildl
mov
cmc
mov
push
jne
lahf
jnp
push
pop
sub
mov
mov
jae
outsb
sub
sti
xor
out
or
xchg
fistpll
test
xor
in
cmc
rolb
cmpsb
pop
inc
roll
pop
out
lret
or
mov
mov
push
push
mov
pop
in
loope
and
jmp
inc
or
push
in
xor
mov
mov
cmc
inc
pop
fs
add
bound
add
push
xor
mov
dec
mov
pushf
std
bound
and
mov
or
push
and
sbb
xchg
push
daa
rcll
push
das
cmpsl
mov
lret
adc
cvtpi2ps
fsubrs
mov
inc
xor
cltd
xchg
xchg
pop
mov
fmulp
xor
lock
add
jnp
ret
push
scas
push
fcomps
out
lods
xchg
mov
adc
lret
std
xchg
xor
mov
pushf
shl
pusha
dec
test
cltd
cmpsb
stc
test
or
xor
jbe
stos
cld
jge
adc
mov
push
lods
ficompl
cmp
lea
std
mov
test
jecxz
stc
out
aam
dec
popf
leave
inc
mov
mov
repz
in
jmp
in
shl
inc
pop
mov
mov
stos
xchg
lods
shlb
or
push
xchg
lret
clc
cmp
mov
lahf
cmp
sub
iret
push
xchg
cmp
iret
mov
mov
pop
filds
rorb
pop
cld
push
cld
jnp
negl
jne
shll
fiadds
mov
xchg
clc
aaa
adc
inc
ret
jbe
data16
mov
sahf
divb
fs
call
repz
or
jne
or
dec
cmc
push
jmp
lahf
inc
sbb
inc
cmp
mov
ss
adc
lods
sbb
out
push
es
jnp
jmp
adc
jle
mov
orb
loop
jg
dec
jo
cmp
lock
xor
mov
cmp
out
cmp
pop
lods
jle
xchg
mov
enter
lret
push
ljmp
push
in
lcall
pop
ss
enter
std
ret
xchg
or
push
mov
pop
jle
xchg
pop
jne
or
sar
mov
cmp
cmp
xor
movsb
jge
int
shl
push
aad
xchg
pop
jp
and
test
call
jp
sub
xlat
or
fisubs
in
inc
mov
add
push
push
jge
pop
pop
lods
rolb
mov
jb
jge
stos
dec
cmp
lcall
xchg
das
in
dec
lds
int3
or
leave
test
ror
cld
out
stos
push
orps
dec
cmp
call
adc
movsl
xchg
aam
cmp
or
test
lods
push
xchg
xchg
dec
lcall
cmp
loop
jg
jnp
jecxz
cmp
ss
xor
lret
sub
sbb
stos
fwait
xchg
xchg
adc
je
fildl
jp
int
sub
push
sahf
lds
cmp
outsb
push
jns
movsl
clc
xor
loopne
das
jle
jbe
sbb
lcall
jecxz
push
mov
rorb
jle
xor
adc
aaa
lret
fadds
add
jae
subl
mov
dec
aas
xor
fsubl
inc
ret
sub
pop
cmpsl
lret
fcmovb
cmp
enter
xor
jle
clc
imul
dec
sbb
dec
cld
jne
lock
add
insb
lods
test
popf
jle,pt
inc
cli
imul
xchg
fisttpl
out
adc
pop
into
pusha
pusha
pop
jb
inc
faddl
mov
orb
movsb
jle
pop
and
sub
fwait
xor
into
gs
insl
xor
in
jns
push
in
test
cmp
daa
scas
mov
jmp
ret
mov
push
stc
cmpsb
fimuls
fisubl
arpl
test
cmp
dec
sti
add
sbb
popf
adc
pop
and
pop
fwait
mov
aas
dec
mov
rolb
lret
xor
std
xlat
fwait
and
pop
push
sub
jmp
pusha
pop
sbb
mov
out
filds
jl
je
stc
negb
inc
imul
adc
pop
push
push
in
scas
jecxz
mov
add
leave
adcl
adc
gs
xchg
mov
dec
xor
sbbb
push
outsb
mov
pop
xchg
xor
out
mov
cmpsl
mov
out
leave
rorl
insb
xchg
xchg
bound
mov
push
sti
sbb
mov
jns
cmp
push
xchg
data16
sub
jbe
roll
mov
sbb
js
jbe
lret
iret
mov
cmp
mov
xor
inc
jne
test
in
or
mov
fstps
stos
test
jge
push
das
movsl
and
and
ret
jle
call
adc
xchg
pop
sub
xor
adc
mov
inc
je
jge
pop
adc
push
ret
xchg
arpl
sbb
insl
setp
jmp
sbb
or
adc
gs
mov
dec
cld
ret
and
je
stos
mov
jae
mov
int
pop
or
pop
lock
adc
mov
jno
adc
and
frstor
out
and
test
add
les
pop
rolb
cmp
lret
jno
pop
pop
scas
inc
mov
jp
sbb
bound
ret
jns
sub
ds
cltd
mov
lret
lret
push
or
jl
popf
add
ss
rorb
mov
test
filds
rcrb
movsb
movb
lock
add
xchg
pop
cltd
xchg
push
jb
mov
lock
jns
adc
cld
mov
xchg
cld
aaa
filds
cli
popa
sbb
pop
mov
pop
ljmp
jecxz
out
or
jp
rclb
mov
test
aam
ds
lret
ficompl
addr16
pusha
sbb
nop
adc
lcall
cmpsb
lods
cmp
aas
fcompl
inc
hlt
lret
inc
outsb
sbbb
adc
xchg
add
arpl
scas
and
sub
mov
call
dec
stc
cmp
mov
and
sbb
negb
sti
mov
jne
pop
filds
cs
enter
ret
jbe
inc
rolb
fisttpll
or
sub
mov
lcall
testl
sbb
js
cmp
add
divl
pop
adc
adc
fucomip
in
jno
mov
sti
fdivrs
jb
pop
pop
shl
aas
enter
or
arpl
inc
bound
inc
mov
xor
lret
mov
ljmp
sahf
inc
xor
jae
xchg
add
lret
jmp
cwtl
ljmp
mov
daa
inc
sti
das
sub
mov
out
call
les
add
jb
cli
rcr
and
or
pop
in
sbbl
rolb
xor
dec
clc
xor
testl
inc
ja
jmp
icebp
jg
push
data16
push
insb
cmp
xchg
mov
cmc
in
mov
mov
push
out
daa
fsubs
scas
add
loop
es
sub
mov
cltd
int
pushf
push
sbb
add
cmp
adc
xor
fimuls
jb
cmp
sbb
mov
xchg
mov
scas
ror
mov
xchg
rcrb
push
mov
filds
inc
lahf
sar
mov
cmp
iret
sub
icebp
adc
mov
adc
aam
and
and
in
lcall
aad
mov
hlt
out
mov
xchg
jne
jns
mov
movsl
pop
in
loopne
sbb
add
pop
shrb
clc
ss
lods
clc
xchg
dec
xor
push
movsb
jle
mov
fdivrl
inc
fmuls
adc
sbb
xchg
int
lds
popf
cmp
popf
sbb
pop
xor
shll
bound
rcrl
pop
mov
mov
jmp
aas
fidivs
sub
jl
jge
rorl
pop
test
or
mov
std
dec
lcall
mov
loope
aam
mov
inc
lret
rolb
push
cmpsb
stos
add
rorl
cmpsl
push
in
mov
inc
pusha
sbb
into
cmp
inc
pop
ss
pop
data16
out
mov
jecxz
in
rcr
and
push
xor
das
push
sub
jno
dec
lea
dec
int
jns
and
xor
ja
pop
iret
outsl
jne
aaa
sbb
out
and
or
fsubl
movsb
fwait
pop
mov
jl
sbb
mov
inc
int3
sbbb
and
lahf
xchg
jnp
icebp
mov
mov
mov
mov
test
or
jp
push
pop
js
push
or
pop
push
daa
pop
cmp
xor
in
sub
xor
jae
test
adc
out
fucomp
cmpsl
jb
dec
mov
pushf
orb
les
lds
flds
mov
lahf
mov
int3
je
xchg
dec
rclb
inc
dec
push
xchg
nopl
cmpsb
jmp
xor
push
jbe
rolb
outsb
mov
and
xchg
adc
idiv
mov
push
adc
inc
or
cmp
fisttpll
add
lret
aad
fldenv
sbb
or
add
xor
mov
dec
xchg
insb
lret
in
cmp
mov
mov
push
cmp
loopne
lahf
sub
popf
sub
loopne
jbe
ljmp
xchg
mov
xchg
or
outsb
add
jo
mov
fidivrs
ret
inc
fldcw
popf
gs
pop
ss
mov
daa
in
add
stc
dec
ljmp
out
mov
outsb
test
jge
daa
lret
add
xchg
dec
mov
cmp
cli
popf
mov
and
and
fisubs
popf
repz
add
sbb
fsubrs
cmpl
imul
adc
in
imul
jb
sahf
jmp
xor
mov
and
dec
jbe
shrb
les
jnp
jp
and
repz
mov
pusha
scas
out
xchg
imull
insb
inc
sub
nop
sbb
or
addb
add
call
dec
or
lock
sub
pop
rcl
inc
dec
xor
mov
xchg
adc
std
pop
mov
icebp
popa
mov
lds
outsb
std
rolb
popf
scas
cld
pushf
fs
nop
out
or
pusha
into
add
jns
scas
jns
mov
subb
test
fimull
nop
repnz
pusha
jo
dec
sbb
popf
jg
mov
sub
xchg
sbb
add
pop
stc
mov
lcall
int3
xor
dec
pusha
adc
cwtl
push
daa
cltd
pusha
sub
push
add
rorl
ret
and
repz
stc
fldt
push
fcmovne
ret
inc
imul
fmuls
jge
or
jo
ds
jge
pushf
inc
jmp
ret
movsb
std
dec
inc
aaa
pop
sub
shl
xchg
hlt
lea
out
stos
out
adcl
in
call
in
xor
ljmp
mov
inc
pusha
push
js
adc
loop
ret
sub
adc
pusha
or
mov
aaa
icebp
jecxz
sahf
popa
jecxz
lods
mov
mov
shlb
daa
test
loope
jns
inc
xchg
test
loop
pop
sub
ljmp
fbstp
xchg
push
jno
insb
inc
xchg
sub
mov
loopne
lds
pop
arpl
mov
lret
pop
jmp
mov
dec
adc
aad
adc
int3
fildll
xor
add
scas
and
test
cmp
push
rcr
push
mov
lods
ror
call
mov
or
xor
pop
fucomi
mov
mov
jmp
je
xor
enter
clc
jo
or
cmp
lock
push
or
cmp
adc
loop
repz
leave
into
cli
sbb
in
push
adc
mov
mov
jle
test
adc
cmp
int3
faddl
inc
push
or
pop
pop
aad
ret
sbb
dec
mov
ficoml
sbb
je
gs
or
call
sub
imul
shll
stc
mov
mov
cmpsb
mov
ret
popf
mov
lea
out
fmull
lock
cmp
jl
test
dec
popa
movsl
mov
jne
push
dec
sub
ja
lret
pop
xchg
sahf
sbb
shll
jl
dec
repz
xchg
sti
sub
or
shlb
inc
jp
std
in
dec
inc
jg
call
mov
int3
test
jns
cmp
mov
or
add
xor
movsb
rcl
and
jb
outsb
rclb
stos
push
test
insl
out
pushf
test
mov
addb
mov
jl
or
push
scas
xor
mov
fldenv
and
ret
insl
xlat
xor
dec
sub
data16
stos
pop
popf
lea
ret
sub
sbb
clc
loope
dec
nop
push
push
cli
frstor
rclb
call
jmp
aas
lea
not
pop
cwtl
mov
cli
inc
ss
and
push
sbb
scas
add
pop
call
push
push
inc
dec
popf
lahf
cmp
pop
mov
inc
lods
popf
mov
pop
das
testb
lods
inc
sbbb
sbb
subl
push
and
daa
leave
popf
inc
mov
dec
or
and
imul
cmp
pop
cld
mov
xchg
xchg
faddl
int3
mov
push
push
push
lea
adc
jb
lea
jno
fistl
sbb
xor
push
and
mov
movsb
shrl
in
in
cmp
subl
pusha
inc
push
sbb
stos
mov
dec
adc
pop
sahf
sbb
xor
shl
inc
rolb
pop
push
std
jmp
add
or
or
dec
out
xchg
mov
iret
adc
fstpt
repnz
mov
inc
jbe
in
xor
inc
and
fsubl
test
sarl
inc
setp
in
pop
ror
or
push
in
scas
inc
loope
nop
cmp
pop
aaa
addl
xchg
and
rcr
lret
cmp
jae
or
lds
mov
xchg
lea
add
fcoms
repnz
std
mov
lods
and
jmp
imul
lds
add
sbb
lock
mov
into
mov
add
mov
cmp
sbb
out
notl
imul
insl
dec
es
inc
xchg
jae
lock
sub
sub
pop
aad
push
xchg
pusha
fsubrs
dec
enter
cltd
outsb
repz
ljmp
lods
test
in
mov
popf
imull
jb
adc
mov
bound
imul
dec
ds
stc
dec
aaa
pop
and
push
pop
inc
loopne
dec
push
imul
int3
and
inc
imul
sbb
or
imul
inc
mov
sarb
adc
push
xchg
pushf
push
outsb
pop
cmp
aam
daa
xchg
in
adc
icebp
pop
dec
adc
mov
cmc
pop
out
sub
js
lret
push
pop
sahf
iret
mov
xchg
cmp
mov
negb
loope
enter
inc
cmc
insb
adc
jp
xlat
mov
and
imul
movsb
mov
and
nop
aad
nop
mov
and
inc
push
out
fnsave
sub
jg
inc
cmp
cmp
push
sub
sub
xchg
and
sub
inc
pop
popa
inc
call
cld
dec
or
lea
into
or
mov
mov
lods
pop
jle
xchg
adc
mov
fbstp
add
xchg
jmp
out
and
sahf
push
je
jl
fwait
pop
rcl
call
add
rep
and
cmpsb
adc
in
test
cld
sarb
negl
mov
jmp
lret
jo
mov
inc
movsl
or
lods
outsb
dec
dec
mov
xchg
jg
push
or
jnp
sbb
lea
add
mov
mov
ret
rol
xchg
sbb
push
adcl
inc
push
jae
or
ss
and
sahf
ja
mov
outsb
enter
arpl
cltd
jns
negb
sub
xor
mov
frstor
dec
movsb
sbb
int3
fs
addr16
lret
push
movsb
imul
mov
mov
in
rcll
dec
int3
andl
jns
int3
in
fildll
sbb
lahf
jo
inc
mov
in
movsl
cmp
pop
adc
or
or
out
mov
mov
fmull
add
xchg
add
mov
popf
cmp
pop
ss
inc
fstpl
xor
inc
cmp
scas
and
fs
jle
fmuls
push
inc
sbb
cmpb
test
loope
shl
push
fmulp
mov
xchg
iret
cld
ret
out
lock
inc
jmp
dec
stos
rolb
and
test
ljmp
packuswb
mull
add
pusha
fisttps
push
or
pop
jle
push
pop
stos
movsl
fisubrl
stc
das
xor
repz
test
ficomps
xchg
popl
lds
int
or
mov
lods
add
push
pop
pop
cmpsb
dec
imul
ja
cmp
dec
inc
iret
in
jmp
iret
dec
mov
jg
popf
lcall
lods
lods
push
dec
dec
int3
lcall
loopne
mov
inc
clc
mov
dec
into
sub
sbb
ja
ss
sarb
sub
jecxz
and
scas
and
cmp
sbb
push
sbb
push
jbe
dec
pop
fidivrl
adc
outsl
add
fcoml
jne
and
out
lods
pop
daa
pop
xchg
xor
popf
cwtl
ret
jns
out
clc
xchg
inc
sub
sub
sbb
inc
or
or
clc
es
push
adc
clc
cmp
push
mov
and
xchg
movsl
dec
data16
and
xchg
pop
jno
inc
out
bound
repnz
mov
adc
daa
test
mov
mov
cmp
push
pop
sbb
fistpll
inc
sbb
pop
ja
aad
hlt
push
xchg
jl
push
inc
and
xchg
inc
in
jge
inc
clc
jecxz
mov
addr16
leave
imul
xor
inc
std
mov
xor
iret
les
xchg
pop
and
int
lret
icebp
fistl
or
cmp
int3
jno
stc
and
lea
enter
mov
test
sub
or
addr16
or
mov
xor
in
xor
push
sub
sbbl
push
and
mov
push
loope
imulb
out
push
shr
mov
pop
cli
lret
jl
add
inc
sbb
cmpsb
xchg
sti
push
xchg
xlat
add
inc
mov
or
insl
pop
cmp
into
add
fptan
inc
jg
inc
das
or
pop
jp
out
push
loopne
ljmp
dec
cld
xchg
imul
popa
mov
push
mov
pop
adc
fsubrl
pop
dec
movsb
into
add
xlat
mov
testl
pop
cli
jae
aaa
cmp
cltd
push
push
daa
enter
aad
jb
nop
jecxz
fstpt
push
push
xchg
cmp
out
mov
arpl
int
je
inc
nop
out
push
or
and
cmp
int3
imul
mov
in
enter
mov
aaa
shl
sbb
sub
push
aad
testl
jno
jo
ror
out
sbb
cmp
sbb
dec
rorb
sbb
xor
xchg
int
cmp
adcl
xchg
mov
ds
pop
mov
loop
popa
clc
sub
push
pop
repnz
xchg
gs
es
mov
ja
loopne
inc
out
lods
out
mov
cld
mov
lds
push
cmpsb
xor
sub
std
scas
jne
lea
or
aaa
lds
scas
dec
stos
cli
les
repz
mov
cmp
mov
mov
cmp
jge
jno
frstor
adc
push
sti
shr
popf
xorb
mov
pushf
dec
rorb
hlt
inc
pop
outsl
jp
or
and
dec
sarl
xor
in
fmull
mov
jbe
push
les
xor
pop
xchg
or
insb
mov
movsl
stc
cmp
mov
iret
mov
push
xchg
bound
scas
addr16
lcall
mov
sbb
inc
cmp
in
sbb
mov
push
jg
and
int
mov
pop
mov
mov
xchg
mov
inc
push
xchg
loopne
fs
sbb
dec
mov
ja
out
sbb
insl
das
adc
ljmp
fiadds
xor
jnp
setnp
rcll
push
adcl
scas
inc
test
pop
adc
aas
out
push
cmpb
cmpsl
mov
shll
and
int3
add
add
test
out
into
dec
or
mov
mov
xor
mov
out
xchg
test
jecxz
pop
jg
lret
inc
xchg
sbb
scas
mov
imul
push
ret
pop
out
lret
push
roll
loopne
xchg
sbbb
mov
adc
add
hlt
dec
pop
and
loopne
inc
mov
xchg
adc
fstl
mov
mov
pop
inc
xlat
mov
cmp
test
in
aaa
movsl
pop
mov
jmp
pop
outsb
call
mov
dec
cld
cwtl
jo
cwtl
lcall
popa
sub
daa
movl
xor
adc
test
push
jno
and
push
adc
leave
cs
mov
mov
in
sti
adc
cmp
cmp
pop
add
cld
jae
into
ja
scas
or
fisttpll
insb
dec
mov
mov
mov
lock
xchg
inc
push
and
cmp
and
push
or
rcr
out
lahf
popf
cmc
xorl
push
stos
jecxz
jecxz
dec
mov
jb
je
imul
mov
leave
sarb
pop
imul
lea
aam
idivl
inc
mov
int3
dec
xchg
insb
or
test
fs
aas
pop
cli
mov
sub
inc
sti
outsb
pop
sbb
pop
lret
daa
mov
xor
sbb
pushf
imulb
repz
sahf
aad
cltd
sub
je
ret
test
cmpl
mov
dec
mov
cmp
add
add
fwait
imul
mov
ljmp
inc
jno
das
xor
mov
mov
fsub
daa
nop
jns
push
imul
cltd
lret
shll
rclb
int3
sbb
out
in
rorb
call
test
sub
vmovq
faddp
out
adc
xchg
xor
inc
icebp
mov
outsb
shlb
fdivrs
data16
hlt
jmp
mov
mov
cld
out
aam
imul
xor
sti
pop
and
fmuls
sbb
or
mov
adc
pop
in
in
push
ljmp
inc
push
int
int3
cmp
leave
aam
add
dec
mov
mov
jle
jnp
rorb
xchg
xchg
cmpb
arpl
daa
pop
pop
mov
sbb
push
out
sub
jecxz
dec
lds
scas
or
xchg
cmpsl
add
dec
nop
xor
xlat
sbb
pop
in
dec
xchg
rolb
xor
mov
jno
push
iret
mov
cmp
or
cmpsb
aaa
xchg
inc
iret
dec
cltd
daa
add
or
enter
fimuls
dec
xor
outsl
in
mov
movsb
stos
ja
sbb
sub
jne
xor
pusha
notl
sub
iret
jle
push
pop
pop
inc
fidivl
add
stos
das
adc
sbb
sbb
arpl
jge
jmp
mov
adc
fildll
stos
or
jl
push
adc
pusha
int
jne
mov
push
inc
cwtl
xor
and
sbb
fildll
pop
inc
cmpsl
cmp
add
jp
cs
push
test
add
cmp
gs
and
int
lret
ja
xor
outsl
jle
nop
pop
fldt
jl
xchg
mov
ret
or
lea
subl
mov
or
cs
dec
push
pusha
cmp
movsb
xchg
movb
push
pushf
and
fadds
mov
scas
adc
push
loope
push
sub
sbb
das
hlt
mov
pop
popa
lret
aas
jns
push
out
mov
rcr
sbb
add
pop
stos
pop
sbb
idiv
jp
fwait
sahf
push
sti
xor
mov
xchg
inc
cmp
xchg
shl
add
js
cli
dec
hlt
aam
dec
dec
inc
mov
je
mov
loopne
pop
imul
aam
lds
subl
fildll
dec
loopne
sbb
shlb
pop
add
inc
adc
fsubrl
in
or
mov
mov
movsb
rcll
rcrl
jne
scas
repnz
outsb
and
enter
mov
loope
push
pop
std
or
repz
aas
mov
lret
stos
adcl
cwtl
sub
out
sarl
enter
inc
fsubl
fidivl
insl
into
push
adc
push
xor
stc
xor
and
lods
ljmp
mov
cmp
insb
aam
xchg
mov
adc
xchg
pop
inc
lock
cwtl
jne
adc
mov
lods
cmp
sarb
sub
sub
sub
pop
ljmp
mov
dec
ss
cwtl
fldt
je
xor
mov
jo
cmp
pop
cli
jle
inc
orl
pop
add
out
dec
xchg
ss
sbb
pop
sub
add
mov
cld
sub
xchg
adc
jp
jle
mov
roll
mov
jo
lods
int3
cmpsb
dec
mov
pop
addl
pushf
fsubp
testl
or
dec
xor
mov
cmp
push
or
cmpsb
clc
jae
insb
test
dec
dec
stos
ja
xor
nopl
mov
mov
ja
filds
or
dec
gs
dec
mov
sub
push
scas
add
dec
pop
into
sub
and
mov
insb
insl
push
pop
inc
mov
stos
push
mov
fcompl
arpl
jbe
pop
xchg
xorb
adc
insb
jmp
std
call
notb
mov
cmpsl
movsb
clc
add
in
mov
testl
jns
sbb
loop
push
jo
int3
push
add
inc
test
xor
mov
pusha
aad
pop
mov
pushf
jg
arpl
ds
stos
cmpsl
shlb
jecxz
insb
cmp
sbb
cmpsl
shl
loop
xchg
push
aad
xor
les
sbb
gs
in
mov
fbstp
xor
stos
insb
das
mov
jb
mov
into
sub
cmp
lahf
push
call
sarb
orb
and
test
rcll
or
test
ds
out
ss
aad
pop
sub
aaa
frstor
into
pop
sbb
jbe
aam
xchg
inc
inc
pop
shll
sbb
jge
pop
pop
aas
and
mov
pop
or
pop
hlt
fdivs
mov
cmpsb
xchg
mov
or
cmpsb
dec
stos
inc
xchg
setno
nop
push
mov
cmp
xor
add
add
jge
xchg
pop
mov
or
cli
std
inc
dec
ja
cld
in
ret
push
mov
je
jge
add
and
clc
test
lods
jnp
add
ficomps
popa
test
adc
xchg
push
js
lahf
cmpsl
adc
loopne
fs
pushf
adc
dec
data16
repz
ja
jno
inc
inc
push
add
push
mov
jns
ret
sub
stos
xchg
sbb
mov
bound
push
insb
pop
add
mov
dec
cmp
add
call
cmp
mov
mov
cltd
out
xchg
cmp
xchg
sub
fcomip
das
popa
movsl
mov
outsb
pop
ja
dec
xor
and
lds
test
cmp
mov
mov
pop
sub
push
fldt
jbe
into
pop
lds
adc
sbb
cli
adc
adc
mov
mov
jnp
lock
inc
push
dec
mov
and
jnp
adc
push
jecxz
clc
mov
xchg
test
xor
pop
in
mov
loope
xorl
mov
mov
push
mov
adc
xor
mov
mov
js
sti
adcb
aam
cmc
mov
fdivrs
or
loope
sbb
popf
jb
push
fnsave
mov
cli
and
mov
dec
push
flds
sahf
push
out
push
xor
xchg
nop
xchg
mov
dec
cmpsb
popf
jbe
js
test
loopne
adc
xchg
and
subl
addl
pop
enter
movsl
aam
frstor
cmp
lcall
cmpsb
mov
dec
push
push
pop
es
js
mov
sarb
xor
in
cltd
mov
enter
sub
jnp
popa
sub
and
cld
sbb
aad
scas
je
out
cmp
pop
outsl
push
push
sub
aad
or
push
sarb
push
mov
mov
insb
push
jno
loope
cmc
sbb
add
enter
or
pop
add
mov
dec
call
fdiv
sbb
inc
cli
mov
mov
aam
fst
imul
pop
and
in
fs
inc
dec
enter
mov
int
lret
sub
fcmovb
xchg
dec
sbb
cmpsl
cld
das
ljmp
pop
leave
addb
test
add
or
jnp
les
fwait
push
cmp
xorb
hlt
mov
aas
mov
out
xor
pop
ret
pop
daa
repnz
loope
lea
inc
mov
jl
cltd
push
lds
shrb
xor
adc
imul
mov
inc
push
addr16
arpl
arpl
jo
pop
push
dec
insb
mov
mov
add
in
imul
jne
clc
movsl
push
les
cmp
inc
mov
out
aaa
out
push
pop
ficoms
adc
mov
out
mov
subl
add
push
mov
sub
jo
clc
les
enter
loope
inc
add
daa
jno
push
lods
push
ror
out
adc
pop
sub
in
push
sub
xor
inc
and
aas
div
insl
xor
daa
mov
dec
push
xor
sub
push
add
mov
scas
push
leave
sar
into
jg
mov
lock
xlat
sbb
adc
or
mov
movsb
jnp
sbbl
jne
ds
push
movsb
hlt
and
push
js
xor
shll
adc
scas
xor
mov
adc
push
push
cmc
loopne
push
and
jmpw
push
loop
shll
jmp
test
add
je
jmp
stc
jl
pop
stos
mov
cmp
mov
pop
subb
je
and
movb
pop
bound
pop
jo
cli
inc
xchg
or
push
add
jnp
push
and
xchg
push
out
shl
sbb
lret
les
movsl
mov
push
adcb
inc
in
push
dec
out
cwtl
icebp
test
push
mov
add
mov
push
jnp
push
xor
shrl
cwtl
add
rorb
mov
iret
or
lods
repz
movsl
add
repnz
sbb
subl
cltd
or
or
sbb
out
push
inc
xchg
add
cmc
es
or
add
xor
fisttps
xchg
pop
js
adc
cmpl
iret
jb
pop
mov
stc
mov
push
sub
mov
in
xchg
bound
dec
sbb
rcrb
sbb
dec
sub
jp
fisttpll
mov
mov
xchg
aad
cltd
out
mov
cmpsl
arpl
push
fistpll
stos
inc
std
out
push
faddl
push
add
movsb
and
sbb
loope
mov
cmp
pop
jnp
je
fisttpll
loopne
sub
aas
loope
inc
add
or
ret
sub
jecxz
ljmp
jmp
mov
loop
push
lahf
dec
ja
mov
mov
cmp
bound
pop
hlt
fadds
iret
aam
mov
inc
movsl
push
into
inc
xor
in
push
daa
push
lea
xor
or
and
arpl
das
xor
insl
pop
cwtl
mov
push
sbb
jle
sbbl
in
push
push
cmp
sbb
add
xor
adc
out
mov
fnsave
scas
push
fwait
pop
fs
daa
or
xor
fadds
mov
push
inc
xchg
jnp
add
push
dec
push
jno
inc
jmp
lds
in
lahf
sub
fwait
es
push
xchg
test
stos
out
ljmp
jns
stc
ret
xor
fnstcw
pop
loopne
es
icebp
les
mov
cmp
fcoms
daa
dec
call
bound
push
xchg
lret
jle
mov
inc
stos
jae
mov
mov
es
xor
pop
sub
bnd
xor
adc
sbb
inc
mov
stc
xchg
lds
aad
leave
add
movsl
daa
stos
out
xchg
mov
pop
push
pop
ret
sub
adcl
ret
dec
imul
sub
nop
or
inc
mov
xor
pop
dec
into
pop
push
mov
add
add
aad
shll
fwait
popa
and
loop
or
mov
lods
mov
push
add
lahf
in
and
std
and
insb
cmp
subb
lock
mov
push
arpl
loop
xchg
es
shlb
mov
or
sub
jmp
pop
hlt
mov
mov
xlat
add
or
repz
push
mov
cwtl
adc
xchg
rdpmc
aam
xchg
jge
imul
jg
jno
add
dec
xor
stos
cmpsb
xor
addr16
movsl
add
loop
scas
imul
dec
add
arpl
icebp
pop
arpl
or
fs
leave
lcall
cmp
aas
fwait
ds
inc
cmp
cmp
ss
lcall
es
lock
inc
sbb
pushf
cltd
cmc
inc
push
mov
int
xchg
pushf
or
sub
test
jae
jns
lret
xchg
hlt
test
mov
mov
int3
iret
jp
mov
push
stos
aad
lock
dec
call
jmp
xchg
cltd
jne
int3
inc
fnstsw
stos
mov
es
xchg
mov
push
lods
xchg
mov
mov
jge
dec
scas
fwait
hlt
fcmove
jle
lcall
scas
inc
jmp
aas
stc
and
adc
repz
lret
cmpsb
lock
push
out
nop
mov
test
ret
out
add
pusha
in
pop
or
dec
hlt
push
loop
xor
jbe
data16
adc
imul
iret
inc
shll
inc
cmpb
pop
lods
xchg
rcr
fucomp
or
dec
mov
xchg
hlt
add
mov
cs
cmp
push
mov
ret
mov
dec
mov
pop
mov
fistpll
jg
jle
out
push
fidivrs
clc
test
mull
enter
cli
and
incl
cmpb
ret
pop
mov
inc
inc
pusha
xor
push
cwtl
lods
fwait
jmp
xor
insl
xor
shlb
popa
jno
pop
push
cmp
out
inc
sub
out
mov
out
sub
push
sub
popa
pushf
outsl
and
mov
jae
sbb
mov
mov
subb
mov
inc
scas
je
aam
std
push
fdivs
xorl
pop
cli
push
xor
aaa
inc
inc
sub
inc
mov
dec
sub
push
bound
and
cltd
mov
call
xor
gs
les
ret
aaa
xorb
adc
add
cld
jmp
js
mov
sti
push
mov
mov
cmpsl
jp
jge
add
mov
outsl
mov
fildll
sbb
cmp
xor
imul
push
mov
sahf
rcll
mov
lods
push
int
sbb
repz
pusha
insb
sub
xchg
out
and
flds
scas
movsl
jb
mov
sub
getsec
add
jae
ret
ret
es
fnsave
cmp
int
sbb
rclb
out
dec
adcb
mov
das
dec
pop
adc
mov
sar
adc
adc
shl
into
sbb
fsubrl
lret
das
sahf
int
dec
mov
and
out
adc
shrb
lea
shr
push
mov
insb
in
or
stc
arpl
push
lahf
ret
push
push
movsl
add
out
cltd
icebp
lret
push
ja
cmp
dec
aad
clc
add
bound
or
inc
fcoms
push
cmpsl
mov
mul
aaa
fwait
out
mov
mov
inc
in
xchg
loope
mov
pop
or
in
push
cmp
out
mov
in
xchg
pop
gs
mov
cwtl
dec
inc
jecxz
xor
lods
mov
outsl
add
mov
es
sbbb
lahf
xchg
loop
and
mov
mov
lods
scas
rcrl
or
pop
loope
and
es
xchg
mov
adc
out
data16
and
mov
ficompl
jecxz
xor
xor
cmp
test
jo
xchg
in
cmpb
mov
orl
jnp
add
add
jns
aad
cmp
dec
mov
adc
sarb
jmp
loopne
inc
mov
jo
jns
jp
into
or
sbb
inc
mov
aad
mov
jg
jns
push
dec
pop
add
xchg
sub
push
imulb
ret
mov
adc
xor
inc
rcrl
cmpsl
call
cld
arpl
jp
fldl
rolb
nop
mov
jge
add
jae
pop
pop
push
daa
icebp
push
imul
and
cmp
scas
fadds
adc
sub
mov
ss
cs
mov
clc
xchg
outsl
pop
mov
jge
push
in
xor
push
sar
and
adc
popf
add
sub
pop
frstor
add
add
daa
int3
push
popl
mov
xchg
push
in
pushf
jae
sub
outsb
push
or
xor
orl
frstor
mov
pop
out
loop
mov
sbb
imul
inc
xor
inc
icebp
sub
dec
les
adc
daa
clc
repz
flds
jmp
icebp
fisttps
fs
pop
lret
pop
jne
cmpsb
pop
inc
icebp
cmp
fwait
cmp
mov
mov
pop
add
and
lret
push
mov
addr16
test
or
outsb
test
mov
mov
mov
sbbb
push
sbb
bound
inc
mov
and
xchg
insb
lock
mov
mov
add
sub
inc
and
jns
pop
mov
lret
push
add
jecxz
fs
mov
cmpb
outsl
cs
adc
sti
add
outsl
outsb
ficompl
imul
mov
lahf
sbb
sbb
daa
mov
movsl
and
xor
in
sub
repz
dec
arpl
cmpsb
clc
add
fistps
sub
outsl
cmpsl
add
inc
loopne
or
dec
mov
imul
fisubs
and
xor
fs
pop
fwait
jg
adc
adc
xor
int3
push
jae
mov
faddl
sub
sahf
cs
jmp
jnp
mov
dec
mov
mov
xor
push
pop
shrb
cwtl
aam
or
dec
shll
jl
push
mov
pop
cltd
pop
sbb
xchg
and
pop
stos
inc
add
sub
and
jg
and
dec
pop
xor
sbb
xchg
insl
jne
arpl
cs
mov
gs
or
mov
clc
and
jp
or
jae
push
ret
add
scas
mov
and
push
andb
add
pusha
sub
pusha
mov
js
jns,pt
in
cmpsb
outsb
cmpsl
push
popa
or
push
rorb
xor
cwtl
popf
xor
xchg
xlat
outsl
sarb
push
stos
dec
jae
fdivl
out
jne
mov
rorl
mov
lods
lret
movsb
mov
mov
add
add
inc
xor
xor
loope
sahf
ffreep
aad
dec
and
cld
out
lods
cltd
ret
xor
das
fiadds
sub
dec
push
jg
leave
push
into
int
insb
int
mov
je
and
mov
xchg
mov
dec
mov
mov
sub
mov
out
mov
pop
es
push
jg
pop
lock
and
xor
cli
fcmovu
adc
cs
cs
adc
mov
adc
push
dec
mov
push
imul
add
jmp
das
pop
push
into
push
pop
icebp
fcmovu
mov
xchg
rcrl
sub
loopne
bound
mov
and
pop
mov
mov
and
out
and
pop
pop
jle
dec
mov
addl
xor
les
mov
dec
adcb
in
aad
pusha
jne
mov
lcall
divb
adc
js
mov
ficoms
push
push
adc
les
lds
jo
repz
ljmp
sbb
test
stos
mov
mov
loop
sub
xor
cmp
jae
jg
lock
pop
cld
mov
and
mov
mov
push
sub
inc
je
push
lcall
adc
out
mov
arpl
lock
ficompl
jb
ss
loope
popf
xchg
in
leave
ret
push
mov
punpcklwd
cli
pop
lcall
jo
aaa
js
lods
mov
cltd
int
pop
or
fwait
mov
xor
in
xchg
rolb
cmp
cli
or
mov
inc
push
push
inc
cs
cmp
pop
cmp
fstpl
cmpsl
push
mov
cmp
int
dec
and
js
mov
sub
inc
movsb
lret
stc
fistpl
iret
dec
mov
ret
daa
ljmp
mov
jns
pop
xchg
aaa
call
cmpsl
mull
mov
lret
cld
loope
sub
jno
adcb
nop
imul
stos
sub
push
sub
sbb
bound
pop
pop
mov
adc
loop
pop
inc
and
cmp
pusha
mov
sub
std
cltd
into
fcomip
fadds
add
or
out
out
mov
addl
movsl
fmull
adc
lret
push
fnstenv
cs
pop
add
add
push
repnz
aam
pop
fdivrs
mov
cmc
inc
adcl
cmp
in
out
jns
les
rcr
pop
sbb
xchg
xlat
sarb
testb
add
adc
jp
sub
idiv
fistl
mov
cmp
cmp
inc
add
clc
cmp
cmpb
nop
scas
or
imul
cmp
jg
mov
add
dec
mov
inc
mov
pop
cmp
mov
mov
stos
jmp
popf
mov
imull
inc
jmp
aaa
push
pop
dec
push
sbbl
dec
enter
add
push
mov
out
jne
pusha
mov
mov
cwtl
xchg
out
mov
dec
add
xor
sbb
dec
or
pop
imulb
ds
jb
movsb
sti
adc
mov
cmp
imul
push
aad
dec
sub
push
xchg
movsl
loop
cmpsb
test
jg
in
push
repz
push
mov
mov
xchg
shr
jecxz
mov
mov
lods
les
loop
mov
outsl
enter
inc
pop
loopne
push
cmp
in
dec
aam
xchg
insb
mov
inc
int
push
push
sub
mov
lahf
cltd
mov
add
push
lea
and
jnp
pop
filds
lock
addr16
test
sbb
inc
lods
and
sub
int3
test
inc
leave
mov
bound
jns
cwtl
inc
idivl
pop
orps
lds
xchg
mov
xor
pop
mov
cmp
mov
and
mov
ds
cmp
xor
jnp
jno
jle
call
lods
iret
test
or
rcll
in
lods
ds
and
enter
cli
fstps
dec
mov
dec
lods
inc
xor
sub
int
mov
xchg
pop
mov
out
fmul
andl
insb
mov
mov
push
call
or
pop
adc
mov
rcrl
mov
mov
stos
cmp
xchg
jbe
mov
lret
xchg
xchg
inc
iret
mov
xchg
pop
ss
bnd
adc
das
pusha
mov
inc
jnp
cmp
add
inc
mov
loope
int
cmp
mov
push
insb
cmp
push
ja
xor
sbb
das
movsb
cmp
lock
sub
ds
rorb
les
jne
adc
sti
aad
dec
xchg
xor
test
xor
lock
scas
cltd
push
test
inc
mov
das
into
daa
sbb
push
test
cltd
rcrb
outsl
add
ljmp
inc
and
sub
outsb
cmp
xchg
ljmp
das
int3
dec
es
xlat
sub
inc
fs
cmp
jmp
push
jo
jp
lahf
and
inc
ficoms
out
data16
inc
lds
add
jbe
fstp
sti
loope
lods
push
sbb
in
xchg
test
pop
fildl
mov
repz
xor
push
sbb
idivl
scas
aaa
jge
jno
mov
pop
xchg
dec
adc
pop
shr
fistpl
imul
out
jne
int3
das
ja
call
push
xor
adc
outsb
ret
inc
mov
nop
and
mov
cmp
xor
sub
adc
mov
and
xchg
jno
xor
add
jb
add
aaa
push
jb
mov
pop
mov
jne
xor
test
enter
mov
les
dec
mov
cs
cmpsb
jl
xchg
lahf
and
es
xor
mov
and
loopne
mov
cmpsb
ret
adc
inc
dec
std
hlt
jbe
pop
push
add
adc
xchg
adc
sub
nop
sub
sbb
cmp
xchg
push
jl
inc
in
pop
add
popf
out
aas
dec
test
int3
rcrl
mov
jecxz
outsl
int3
leave
jo
cmp
jp
js
xchg
paddsw
iret
sbb
xor
lds
xlat
sub
jg
lcall
cmp
das
lret
int
cmpsl
mov
in
mov
push
into
xchg
icebp
fcmovnb
rcrl
cmc
lods
fsubrl
test
jo
xchg
xchg
fcmovnb
lret
aaa
cmp
cmp
jb
pusha
xchg
jp
stos
test
jnp
xor
out
dec
movsb
popa
or
mov
or
mov
cld
cmpsl
pop
mov
js
mov
arpl
lret
add
jns
mov
ret
les
inc
and
pop
insl
ja
rorb
and
lahf
fidivl
mov
ss
daa
fidivrl
ja
mov
in
inc
sahf
shl
sbb
and
mov
movsb
imul
xchg
pop
adc
and
lods
mov
mov
inc
pop
adc
push
mov
sbb
and
repnz
push
jle
pop
subl
dec
popa
cmc
pop
lds
int
cmpsb
insb
cmp
push
xor
jns
dec
dec
icebp
push
jae
cmp
arpl
ljmp
cmpsb
mov
jnp
xor
outsb
cmpsb
pop
int
scas
xor
sub
mov
jle
test
fldl
xorl
lahf
mov
lret
xchg
push
imul
cmpsb
mov
std
mov
mov
mov
cmpsl
in
sti
test
das
and
push
dec
pop
mov
shrl
ds
popf
jmp
shll
clc
jle
and
xchg
leave
enter
enter
out
jp
cmpsb
rcll
shrb
inc
push
sub
add
push
outsb
mov
pop
inc
lock
js
sbb
or
sub
lcall
cmp
std
sub
jmp
iret
mov
imull
cmp
jmp
and
pop
pop
fsin
jae
inc
into
jecxz
cmp
and
ficompl
imul
adc
shl
and
leave
lea
insl
rol
push
shlb
fldl
cmp
sub
int3
xlat
jns
mov
or
insb
shll
mov
push
or
xchg
pop
sub
ja
in
fdivr
jmp
or
sti
outsl
rcll
lret
pop
mov
mov
pop
leave
cs
sbb
nop
adc
lods
sub
sbb
push
jle
addl
add
mov
xlat
mov
or
test
sub
jle
in
cmp
mov
jge
arpl
iret
mov
mov
sbb
fldcw
es
loope
out
xchg
cmp
in
pop
jle
sub
popf
pop
dec
sub
pop
lret
mov
ret
popf
mov
in
mov
int3
leave
bound
add
lret
andb
mov
mov
pop
sbb
jl
fidivrl
sbb
fcmovbe
int
in
push
ja
mov
pop
dec
cmpsb
mov
repz
cmp
xchg
iret
push
imul
in
test
or
pop
cmp
push
and
lods
mov
popf
push
mov
jp
pop
dec
mov
ja
cmc
jae
xchg
jle
iret
and
mov
push
mov
loopne
push
or
sahf
pop
pop
push
jle
dec
pop
pop
sbb
je
je
inc
push
aad
je
adc
mov
inc
xor
mov
aas
pushl
mov
jae
mov
sub
add
call
inc
mov
lret
loopne
sub
repnz
loopne
dec
shlb
fstpl
insl
bound
loope
jmp
stos
ljmp
stc
and
fisttpll
adc
jecxz
ss
rcrl
sbb
add
inc
inc
dec
outsl
out
and
pop
sub
in
mov
mull
pusha
popa
jnp
imul
inc
rcr
in
and
dec
jle
repnz
in
cmp
mov
dec
push
dec
out
pop
pop
adc
outsb
mov
cmp
inc
test
lock
clc
das
cwtl
mov
testb
sbb
or
stos
je
sub
neg
je
shll
repz
cmc
add
iret
pop
lret
mov
rcrb
mov
bound
div
jp
test
mov
push
das
jp
in
les
mov
pop
mov
push
add
jmp
mov
cmc
ret
inc
ss
lds
pusha
cwtl
aas
shll
mov
pop
xchg
je
cmc
imul
xchg
bound
das
ret
call
in
jge
jns
mov
pop
mov
cmp
inc
jle
pop
mov
mov
cmpsb
out
enter
iret
inc
mov
mov
ja
cmp
jp
sar
or
arpl
rorl
mov
mov
movsb
sub
mov
das
ljmp
fnstsw
out
aaa
pushl
sub
and
fsubrs
cmpsl
lret
ret
and
xor
inc
cmpsb
inc
in
hlt
push
mov
mov
cmp
fsubrs
or
in
outsb
and
mov
adc
scas
xorb
pop
movsb
mov
push
inc
insl
mov
mov
lock
mov
bound
or
movsl
xor
mov
cmpl
mov
fcomi
adc
and
xorb
lods
pop
stc
int
mov
mov
jge
test
dec
xor
flds
call
pop
ja
and
cmpsl
inc
or
sbb
dec
rorb
les
xchg
jo
sbb
push
cmpsb
mov
xor
mov
push
push
fwait
xchg
mov
pop
insb
xchg
das
cmp
add
xchg
dec
jle
mov
sbb
jg
mov
mov
movsb
pusha
sbb
add
sbb
ljmp
mov
or
daa
lea
ret
ja
pop
fmuls
out
clc
cli
push
mov
ss
xchg
mov
imul
adc
adc
and
jp
jno
adc
lods
push
sbb
push
pop
mov
push
popa
or
test
gs
aaa
and
adc
fnsave
xor
std
xchg
int
out
adc
cmc
sub
push
aaa
push
cld
fisttpl
xchg
push
scas
arpl
pop
lock
repz
pop
notl
clc
sti
test
pop
mov
and
out
dec
arpl
pop
lea
dec
xchg
push
inc
push
rcrb
sbb
adc
push
adc
xchg
xchg
in
jle
leave
mov
rcll
sbb
dec
and
adc
mov
addr16
push
movsb
pop
icebp
ljmp
outsb
jns
mov
sti
lea
fwait
stos
jbe
out
fdivs
test
rcrl
lcall
or
push
mov
push
adc
adc
or
mov
xchg
fmuls
and
fwait
pop
in
cli
dec
imul
push
cmp
push
stc
repz
inc
out
push
sub
dec
add
out
pop
mov
xchg
push
pop
icebp
jp
mov
push
ret
xchg
jg
ret
fsubrl
faddl
adc
sti
es
aas
out
psubusw
lret
mov
arpl
loope
pop
cltd
xor
movsb
inc
js
hlt
cmpsb
fldenv
in
test
cwtl
ficoml
push
subb
push
jno
shl
je
add
xchg
andl
fwait
and
ss
xchg
mov
das
rcr
clc
adc
testl
cmp
add
nop
xchg
xchg
rorb
mov
mov
pop
shr
pop
mov
mov
jb
lds
sub
push
aad
cmp
jno
sub
popf
ss
mov
adc
and
aad
popf
sbb
cmp
cmpsb
inc
js
scas
ss
xchg
adc
outsb
test
jge
mov
cmp
sbb
dec
sbbb
repz
in
scas
pushf
int3
mov
cltd
mov
rcl
imul
push
mov
ret
or
adc
or
orb
xor
ljmp
enter
subl
xor
push
lret
mov
cmp
inc
inc
ljmp
es
hlt
sub
or
inc
xor
xor
popa
pop
outsl
sbb
jle
dec
mov
jo
std
pop
fwait
sti
dec
pop
and
lock
rorl
lods
dec
aaa
adc
or
xor
sar
fsubrp
xor
add
stos
xchg
mov
lea
xchg
movsb
add
aam
aam
sub
insl
xchg
vpmadd52luq
mulb
mov
iret
in
mov
pop
cmpsl
lret
sbb
or
push
test
shr
xchg
test
js
push
subl
pop
xlat
push
mov
dec
shlb
sbbl
mov
iret
and
rorl
sahf
rcrb
cmp
mov
sahf
xlat
xchg
in
in
pop
push
nop
out
lods
or
xchg
out
mov
in
leave
push
mov
ja
lret
dec
lods
dec
outsb
fsts
and
mov
mov
cwtl
dec
fstl
or
scas
loope
jecxz
cmpsb
xchg
aam
repnz
pop
leave
sarl
dec
ss
pop
stc
out
repz
jnp
or
js
fisubl
dec
xor
sbb
rolb
cmp
shlb
repnz
out
mov
aas
loope
mov
data16
lods
mov
and
or
xor
xchg
mov
loop
pop
mov
repnz
and
into
mov
mov
mov
adc
mov
xchg
xor
pop
lea
add
push
jnp
insb
sub
rorb
or
clc
enter
or
clc
imul
cmp
data16
mov
mov
mov
subl
pop
xor
lret
adc
sbb
mov
pop
cmpsl
sbb
cmp
xchg
and
ds
jbe
jne
cmp
sub
cltd
inc
xchg
cmp
cmp
xchg
inc
imul
mov
rcll
nop
push
push
sahf
cli
mov
push
bound
mov
imul
cltd
xchg
sbb
ljmp
mov
gs
je
movsl
das
xchg
ret
fdivrl
imul
and
ljmp
lret
loop
shrb
outsl
cmc
scas
imul
jne
imul
ja
add
push
test
mov
xchg
jb
cltd
adc
in
aas
add
andb
jl
pop
xor
or
or
xlat
aam
addr16
imul
ljmp
js
or
cld
or
jns
sbb
aaa
orb
adc
sbb
lods
cld
in
jns
hlt
inc
sbb
jge
mov
movsl
fisubl
cmp
aam
repnz
sub
frstor
aas
test
pop
push
out
mov
idivl
inc
pop
les
xor
jg
test
inc
sbb
jno
push
mov
daa
movsl
cmp
rcr
dec
pop
xor
push
pop
fsts
xchg
shrl
aaa
bound
or
js
arpl
jle
stos
xchg
jnp
lcall
in
sbb
sar
xchg
or
enter
fldcw
addl
leave
xor
sbb
adc
inc
and
popf
adc
fwait
imul
jae
or
imul
insl
dec
pop
sub
xchg
shll
sbb
inc
and
jg
sub
movups
cli
das
ja
pop
out
sahf
push
mov
divb
bnd
fstpt
adc
int3
mov
push
cwtl
dec
popa
pop
add
notl
jo
xchg
les
push
pop
push
sub
loopne
fcompl
mov
jecxz
int3
decb
adc
pop
mov
push
add
icebp
js
xor
js
mov
sahf
ss
or
out
pop
sbb
cmpsl
mov
push
xlat
dec
pushf
cmp
push
aaa
repnz
jbe
fs
push
mov
push
outsl
mov
xor
or
xchg
mov
scas
dec
lock
bound
pop
push
dec
cmp
inc
fldl
es
inc
test
fistps
imul
jo
push
je
cmp
sbb
shrl
add
pop
xor
test
add
cwtl
insb
push
and
je
mov
sar
pop
xchg
or
xchg
mov
mov
imul
lret
stos
mov
in
jnp
pop
dec
out
lock
outsb
jle
xchg
lahf
gs
ret
sub
scas
jle
push
mov
sbb
sahf
xchg
ja
sub
data16
into
cmpsb
cld
jae
sub
movsl
or
mov
dec
sar
jge
jnp
xchg
inc
lret
in
aaa
jl
decl
pop
xor
jge
mov
inc
xchg
xlat
and
pop
inc
xchg
cmpsl
xchg
or
out
sti
lret
jge
fwait
js
lcall
fidivrl
dec
or
repz
push
cmp
sti
pop
xchg
inc
out
mov
adcl
ss
xchg
out
shl
sub
and
xlat
lods
xor
xor
cmp
cmp
dec
nop
jo
dec
or
sbb
jle
pop
adc
mov
imul
or
js
jo
add
out
cmp
lahf
loope
mov
or
xor
and
jl
pop
cwtl
fidivs
fisubrl
fnsave
cmpsl
pop
lret
xchg
movsl
or
int
or
shl
mov
sbb
mulb
jmp
mov
cmp
sub
shrb
cmpsl
mov
push
cwtl
add
pop
inc
rolb
jp
outsb
jmp
pop
add
out
int3
popf
or
mov
nop
dec
subb
mov
test
xchg
fs
add
fstl
movsb
stos
test
xchg
pop
inc
das
fisubs
insl
aam
and
in
xor
int
pop
test
pop
outsl
mov
jl
cmp
pushf
dec
lds
mov
or
push
aaa
rorl
dec
mov
addr16
jo
in
sub
jge
xchg
cli
xor
push
push
inc
jp
fisubrl
jge
popf
rclb
in
sub
push
mov
pop
int
mov
aas
jno
add
pop
mov
dec
les
iret
sub
mov
repz
pushf
and
ja
mov
sahf
or
std
hlt
shll
ss
call
daa
mov
sub
and
xchg
movsb
sbb
push
clc
pop
js
ret
add
inc
movsb
hlt
sbb
loope
add
data16
cmpsb
fld
outsb
fwait
or
jne
fwait
inc
rcrl
mov
inc
out
adc
lds
add
mov
inc
cli
out
je
xchg
ret
dec
and
mov
sarb
fldcw
es
dec
push
lods
stc
xor
sub
xor
cli
mov
out
xor
mov
aam
bound
out
or
dec
jo
mov
add
cmpsl
mov
push
push
and
cmp
insl
into
push
shll
xchg
adc
pop
pop
loope
inc
mov
es
pop
shl
mov
rcrb
dec
vmwrite
jnp
lock
mov
aad
es
aas
sub
rcrl
scas
adc
dec
cmpsl
insb
mov
add
in
jge
cmp
mov
mov
xchg
es
mov
pop
cmp
dec
mov
out
cmpsb
mov
andb
mov
adc
in
fcmovnbe
push
xchg
mov
out
roll
outsb
test
add
in
out
in
cli
dec
das
mov
jl
dec
pop
jl
fadds
pop
and
cs
stc
pop
mov
lds
test
mov
leave
mov
ljmp
adc
jns
push
inc
and
push
ret
test
xchg
test
xor
nop
js
std
out
cmp
and
jb
fmull
cli
or
cmpsb
popl
adc
xchg
jg
icebp
xchg
fisubrs
cmp
cmp
add
mov
rol
cld
jmp
flds
push
add
mov
pop
repnz
fdivrs
outsb
add
cs
insb
inc
out
in
fstl
cmpsb
xchg
and
mov
xor
lret
lret
mov
mov
cmpw
pop
jae
icebp
out
in
aad
and
int3
mov
pushf
lods
jge
out
sbb
and
mov
cmp
xor
cmpsl
pushf
add
or
xlat
jns
sub
imulb
or
icebp
xorb
movsl
jbe
mov
mov
or
sub
push
jae
fmull
sbb
subl
ficoms
rcrb
jns
adc
nop
cmc
lods
pop
cmp
das
cmp
push
lret
movsb
cltd
aad
cmp
dec
out
or
xor
aas
imul
jne
push
pop
mov
push
in
jno
pop
stos
pop
stos
shrb
pop
adc
repnz
fadds
ja
adc
out
fdivrl
ret
dec
movb
rolb
mov
mov
repz
enter
mov
dec
jns
lods
sub
xchg
inc
and
clc
mov
mov
je
xchg
sbb
push
xchg
adc
mov
sbb
hlt
xchg
mov
fcoms
std
push
js
add
mov
shl
lret
into
in
rclb
sti
fildl
push
lcall
push
aad
push
in
fwait
push
outsl
adcb
int3
lds
sub
push
lea
mov
icebp
in
jb
jb
push
xor
add
aaa
clc
cld
fdivrl
mov
in
ret
test
movsb
xchg
sbb
sbb
lea
cmpsl
pop
cmp
xor
insl
cs
sub
cmp
dec
xor
outsl
push
mov
cli
fs
jge
dec
sbb
cwtl
xorb
clc
cmp
and
pusha
jo
lret
dec
jmp
push
loop
mov
push
lcall
sbb
mov
jbe
sbb
std
push
pop
hlt
pop
das
aad
adc
ja
cmp
in
push
sti
shrl
lds
std
gs
jmp
push
add
mov
test
cld
ljmp
sbb
shll
pop
add
inc
sub
orb
mov
sbb
ja
in
pusha
in
push
sbb
popf
addl
fs
sbb
pop
mov
push
and
add
xchg
lret
push
ja
aas
cld
push
mov
dec
push
jno
or
popa
push
jo
mov
aaa
jle
pop
roll
cmpb
movsl
xchg
fcoml
icebp
dec
rorb
sarb
sahf
lret
dec
and
mov
adc
cmpsb
xchg
jg
pop
dec
xor
mov
sub
shrb
popf
or
jp
mov
cwtl
sbb
std
push
call
sub
int
xchg
mov
mov
outsb
test
movsl
mov
stos
jmp
enter
and
scas
clc
pop
add
movsl
pop
out
das
in
testl
lds
mov
outsl
pop
xchg
jmp
push
push
pop
adc
pusha
mov
fcomps
pushf
cmp
jnp
jne
jns
jmp
jnp
test
push
imul
test
cmp
aaa
pusha
xor
lahf
sub
pop
push
xor
pushf
iret
bound
fiaddl
push
jo
and
and
je
test
pop
jb
stc
fcmovbe
aas
jb
repnz
mov
sub
xorl
mov
lret
sbb
jbe
cltd
repnz
movsl
dec
xchg
sbb
pop
loopne
sbb
rolb
mov
insl
jecxz
in
push
sub
push
sarb
mov
loop
addb
mov
add
push
call
out
jle
iret
jns
sbb
jo
sahf
cmp
insl
lret
out
pop
inc
imulb
sub
xchg
hlt
xchg
pusha
inc
dec
xchg
adc
mov
loop
ljmp
mov
ds
mov
sbb
scas
out
inc
or
push
lods
sub
lea
mov
in
int3
pop
int3
loope
sub
jb
inc
sbb
lds
das
xor
xchg
stos
sti
and
pop
sti
imulb
shrl
push
jle
test
pop
and
aas
or
pushf
std
xlat
sbb
imul
push
pop
cmp
out
xor
imul
and
pop
int
push
aad
icebp
push
rol
cmp
xchg
cmc
out
sbb
ret
and
das
cwtl
popf
sub
leave
xchg
or
pop
decb
and
adc
sub
xchg
in
repnz
inc
push
cs
jnp
xchg
fcomps
clc
push
outsl
in
int3
add
jle
mov
out
shlb
and
stc
adc
sarl
stc
cmp
fwait
imul
push
pop
lahf
dec
std
mov
and
adc
ret
test
xchg
add
add
mov
mov
cs
mov
fisttps
orb
cli
loopne
movsl
jbe
adc
sbb
xchg
cmp
mov
push
std
pop
int3
inc
lods
inc
rorl
loop
mov
imul
popf
bound
test
outsl
das
push
sub
or
mov
orb
fs
jecxz
arpl
in
push
and
mov
or
push
orl
pop
and
sbb
cs
and
adc
rorl
shr
in
jmp
or
fwait
inc
push
inc
nop
dec
iret
mov
add
xchg
mov
leave
call
addr16
insb
int
and
xchg
and
arpl
mov
mov
lds
add
rcll
mov
dec
cmp
dec
push
leave
mov
jns
out
es
ret
into
std
add
pop
cmp
jno
mov
mov
jg
adc
sub
sub
mov
dec
sti
int3
mov
sbb
scas
add
add
inc
mov
sbb
cmp
lods
mov
push
mov
xor
icebp
xchg
dec
xor
mov
aas
mov
punpckldq
testb
into
cmp
add
ja
adc
jp
outsl
rol
dec
push
inc
imul
lahf
push
imul
dec
inc
pusha
dec
lods
es
pushf
loope
cwtl
mov
es
ficompl
mov
jmp
adc
stos
jge
movsl
dec
aam
mov
loope
push
bound
sbb
pop
aas
mov
add
cmpsb
iret
shlb
inc
bound
jb
mov
jb
sti
and
rclb
xlat
and
iret
cwtl
scas
les
in
lods
xchg
inc
xor
sub
xchg
push
fistpl
outsb
pop
jb
pop
jecxz
shll
int3
jl
cs
pop
jbe
mov
and
popf
fcoml
mov
insb
fldenv
mov
mov
call
xlat
xchg
xchg
loopne
popa
jo
es
cwtl
xchg
inc
loope
addr16
xor
fistpll
insl
mov
mov
mov
add
push
sub
dec
mov
jo
cmc
add
xchg
nop
stc
jecxz
jne
mov
fwait
mov
hlt
fdivrs
push
daa
pop
mov
sbb
shlb
mov
sbb
stos
mov
adc
sub
lahf
inc
fistpl
cli
sub
sub
mov
mov
and
mov
mov
push
adc
dec
push
ret
xchg
imul
arpl
enter
fcompl
xor
shr
fistpl
out
xchg
jae
xor
cmp
mov
add
add
arpl
aad
fisttpll
arpl
loop
push
out
mov
add
xchg
lcall
xor
xor
or
cmp
movsb
and
jnp
add
xor
test
jnp
scas
addr16
xorl
les
sbb
mov
loope
or
xchg
add
mov
faddl
and
rorl
aas
aaa
pop
jns
jle
mov
cmp
jecxz
mov
les
negl
test
mov
stos
pop
lods
ret
sub
je
adc
push
ja
mov
inc
negl
jle
xchg
out
inc
mulb
sarb
das
std
jnp
shrb
jle
push
pusha
in
mov
xchg
fwait
adc
dec
les
inc
xor
sbb
inc
arpl
inc
dec
je
inc
test
push
sbb
sar
aad
xor
mov
push
fiadds
dec
nop
cmp
add
pop
sub
sbb
shl
adc
repz
sar
xchg
sbb
and
sti
cmp
dec
push
jne
std
stos
es
in
ret
sbb
jge
popf
or
sti
sbb
lods
adc
dec
cltd
pop
xchg
sbb
jae
xchg
dec
xor
xchg
fdivp
dec
outsb
or
jb
test
jbe
sub
sub
rcr
mov
cmp
aas
adc
sbb
mov
mov
stc
mov
insb
sub
sub
cmp
cltd
out
comiss
add
or
cmp
mov
out
mov
mov
addr16
xchg
mov
cmp
popa
in
fsubrp
and
lock
or
mov
hlt
sahf
jns
mov
inc
add
call
xchg
sub
mov
or
jno
imull
aam
mov
cmpsl
xor
pop
inc
dec
xor
rorl
icebp
adc
add
lods
push
lret
or
lret
lods
std
add
mov
test
roll
and
or
or
inc
hlt
lea
fstpt
fcomps
xor
push
lods
dec
loope
sti
jl
mov
lret
gs
hlt
mov
shrb
mov
mov
and
xchg
pop
xchg
inc
or
mov
push
fistps
xchg
mov
push
and
mov
push
push
mov
ds
jae
iret
mov
mov
les
mov
sub
jmp
fst
jmp
sarl
popf
mov
int
int3
adc
insl
cwtl
mov
lret
and
daa
lock
fstpt
mov
out
aad
mov
clc
or
ja
loop
dec
lcall
xchg
pop
pop
add
lock
mov
pop
cld
fwait
lock
xchg
dec
push
adc
inc
aam
imul
push
lods
lret
adc
xor
or
sub
mov
add
mov
push
dec
aaa
jnp
sbb
daa
push
xchg
pop
push
repnz
dec
je
lret
fsubl
iret
ds
mov
and
scas
xor
jno
or
jo
push
frstor
movsb
adc
add
or
insl
popf
imul
iret
push
imul
bnd
fstp
lock
and
xchg
cmp
call
inc
pop
std
jnp
inc
lahf
inc
cmc
pop
jmp
lds
dec
push
mov
xchg
adc
fbstp
pop
fisttpll
push
cmp
dec
in
xor
jle
aaa
mov
pop
xlat
cltd
int
lret
dec
add
fstpl
jbe
cmpsb
jns
jge
mov
xlat
ror
push
mov
aad
cmp
addr16
inc
jbe
jmp
js
testl
scas
addr16
stos
aaa
loop
adc
inc
int3
arpl
mov
call
outsl
pop
popa
push
mov
data16
mov
sub
mov
sub
jecxz
pop
pushf
dec
jo
and
scas
jbe
push
das
cmp
mov
cmp
in
cs
mov
lds
add
sarl
ror
pop
jns
pop
add
out
xchg
and
inc
subl
mov
pop
push
xchg
mov
xchg
xor
inc
lods
cmpb
and
mov
cltd
out
scas
lock
shrb
sbbb
pop
xchg
mov
clc
or
loop
mov
aad
jge
fnstcw
xchg
mov
subb
push
dec
aad
dec
scas
dec
je
xor
cwtl
jbe
mov
fists
lcall
ss
xor
jmp
test
jb
cmpsl
mov
inc
jge
in
adc
xchg
mov
cmp
jb
inc
movsb
lret
push
inc
sbb
xchg
notb
int
stos
stc
add
aaa
jne
jl
push
push
adc
add
aam
lock
cmp
inc
ret
mov
dec
clc
or
adc
decb
add
or
addl
stos
cmp
enter
insb
rolb
dec
xchg
das
lahf
fwait
call
imul
call
mov
rorl
lea
nop
nop
sbb
xor
cmpsl
push
incl
xchg
dec
loop
mov
jne
cmpsb
jmp
inc
imul
pop
jb
aad
rclb
test
xor
sti
outsl
insl
push
ffreep
xlat
adc
inc
cmp
cltd
mov
inc
out
fmuls
cmp
and
jmp
orb
inc
outsb
ret
sub
les
fcompl
mov
call
pushf
cmp
jp
mov
test
rorb
push
xor
mov
adc
fucomp
adc
adc
sbb
jg
out
test
cmc
test
test
xlat
cltd
sub
sbb
clc
popf
stos
roll
std
sbb
dec
inc
jmp
cld
jnp
hlt
jno
leave
sahf
add
std
push
push
push
pop
repnz
cmc
fcoml
cmp
loop
jge
ss
xlat
mov
cbtw
push
jge
fucomp
jmp
mov
jmp
cld
or
ret
insl
fwait
scas
add
cmp
bound
xchg
add
ja
sbb
dec
scas
mov
insb
pop
xchg
mov
inc
int3
popf
xor
imul
ds
sarl
or
push
imul
xchg
xchg
in
pop
sub
inc
or
out
inc
mov
jge
push
test
push
out
mov
push
ds
mov
rcr
ret
es
clc
std
or
push
mov
scas
sbb
lret
cmp
out
stc
jae
push
pop
xchg
in
jo
repz
mov
ss
push
and
cmp
fstpt
or
adc
loop
nop
jge
leave
arpl
stc
loop
out
movsl
fisttps
jg
push
push
fs
pop
fucom
roll
pop
ret
jnp
stos
scas
ja
sbb
movsb
adc
outsb
sbb
dec
out
lcall
jmp
data16
xor
loop
push
leave
stc
fcmovb
in
mov
leave
int
pop
push
imul
lds
rcrl
push
orb
sbb
push
jb
js
shr
sbb
sub
popf
push
mov
int
cwtl
mov
dec
outsb
inc
test
lret
rcrl
mov
daa
out
mov
out
xchg
inc
mov
pop
ret
xchg
ja
out
lret
jle
movsl
fsubrs
loopne
loope
xchg
mov
clc
repnz
or
adc
add
mov
fisttps
test
adc
sub
inc
lods
or
js
mov
add
in
adc
out
sub
sahf
sub
jno
int
xlat
mov
sub
daa
inc
mov
xor
mov
inc
ja
cs
je
mov
out
aaa
punpckldq
sub
insl
xor
insl
mov
xchg
and
mov
repnz
cltd
push
negl
js
icebp
inc
and
les
or
push
imul
sub
addb
imul
sbb
sbb
jle
shrl
loope
lahf
jb
lahf
cld
and
push
xchg
push
arpl
push
and
sub
push
stos
addb
cwtl
mov
jmp
call
repz
pop
sub
int3
mov
cmp
or
inc
sub
es
sbb
sbb
jns
xchg
cwtl
push
sub
mov
ja
repnz
sub
js
lock
cmpl
mov
arpl
add
fnsave
xor
jbe
dec
add
stos
lahf
pop
cli
or
adc
je
and
push
fstpl
and
pop
rorl
inc
dec
arpl
aam
push
xchg
addr16
xchg
and
mov
adc
aad
mov
push
mov
jl
aaa
pusha
xchg
ss
into
lahf
outsl
mov
lcall
xor
std
mov
movsl
shrb
test
add
jae
insl
lcall
mov
out
in
dec
xor
lods
ret
pop
inc
cmpsl
add
jns
lcall
cmp
inc
cwtl
and
fimull
xchg
sub
and
xor
dec
sti
test
loop
cmpsw
sub
scas
cmpl
rcrl
subb
push
ja
dec
leave
ficoms
mov
mov
stos
fimuls
xchg
or
xor
mov
pop
leave
orb
jg
mov
mov
push
xor
inc
sub
fsubrs
sbb
in
mov
popa
out
xor
in
bound
jae
cmc
xchg
arpl
pop
mov
cwtl
ror
xchg
push
adc
push
xchg
pop
jae
mov
mov
f2xm1
and
fmull
mov
hlt
push
out
loope
rol
mov
std
xchg
jp
dec
mov
mov
xor
xchg
adc
movsb
outsl
mov
fidivs
sbb
jnp
popa
pop
add
sbb
push
jp
push
in
pop
daa
jl
test
xlat
inc
add
inc
push
std
cmp
adc
inc
es
popa
pop
push
mov
cmc
sbb
push
inc
test
sbb
xchg
fwait
rcll
dec
inc
dec
push
xchg
add
push
sub
push
cwtl
push
cmp
dec
in
clc
sub
rcrl
cs
jp
cmpsl
shlb
and
push
popf
fdiv
mov
xchg
outsb
adcl
jns
call
cmpsb
add
cmp
inc
sahf
mov
in
lcall
push
sub
mov
mov
dec
gs
mov
sarb
pusha
pushf
jbe
lock
cmc
loopne
jle
clc
dec
sbb
mov
cmpsb
shrb
or
lcall
mov
jle
mov
loop
test
sub
inc
cmp
xor
imul
lds
mov
push
into
jle
add
outsb
in
out
push
in
sub
sbb
cmp
mov
out
into
hlt
or
jns
push
rol
mov
mov
in
jmp
sbb
lods
add
sub
xor
cli
pop
sbb
inc
xor
jbe
daa
inc
pop
fdivl
aad
test
in
sub
jle
test
in
aam
and
jmp
push
pop
dec
mov
or
lods
xchg
std
inc
cmp
jo
das
movsb
adc
call
stos
lret
push
xor
shll
mov
sub
stos
lods
cli
imul
rolb
andl
imul
mov
popa
push
push
lcall
mov
xor
fs
and
mov
std
mov
adc
cltd
xchg
push
lret
in
push
cs
flds
clc
mov
mov
add
stc
mov
fists
mov
fs
mov
pop
xchg
mov
fldenv
push
and
mov
xchg
popa
mov
sub
ret
adc
outsb
test
rcrb
fcmovbe
add
icebp
xchg
bound
jmp
sbb
push
dec
bound
gs
adc
mov
popf
aam
imul
call
lock
xchg
fistpll
repz
cld
stos
xor
jg
lahf
dec
rorl
pop
mov
mov
sbb
cmp
dec
bound
jmp
fidivl
and
xchg
jbe
icebp
adc
roll
into
mov
sub
hlt
cmpsb
repnz
add
xor
or
repnz
arpl
xor
popf
rcrb
std
outsb
xor
inc
sub
xlat
notb
adc
add
popa
sub
sbb
pop
dec
arpl
ja
shl
movsl
inc
mov
dec
fnstcw
inc
in
xchg
xor
int
lret
clc
std
leave
sbb
iret
lea
inc
mov
xchg
lds
inc
incb
adcb
insl
lret
call
xor
and
insb
inc
icebp
xchg
ret
cli
sbb
adc
out
les
dec
iret
mov
aas
icebp
push
lret
imul
fwait
xchg
data16
test
push
ret
mov
jno
lds
sbb
ficomps
add
jnp
out
sub
and
add
jmp
aas
or
lds
pop
mov
in
mov
dec
add
sub
cwtl
gs
add
stos
loope
js
aad
dec
enter
mov
aad
sub
scas
xchg
nop
fwait
jne
jp
arpl
dec
xchg
ret
fadds
inc
aas
ss
dec
sbb
aas
aaa
pop
cmc
and
cli
sbb
sub
inc
aaa
mov
int3
test
aaa
dec
out
fwait
adcl
jmp
push
or
cld
das
or
adc
sub
in
sub
adc
jge
ret
adc
dec
xchg
jno
fstl
jmp
clc
aaa
sti
aaa
or
mov
ljmp
mov
out
inc
push
xor
hlt
inc
add
jae
aam
mov
dec
xor
mov
stc
mov
outsb
inc
pusha
in
mov
xchg
mov
hlt
subl
das
loope
mov
mov
or
or
jp
or
out
popf
dec
stc
inc
mov
xor
xor
in
dec
dec
mov
dec
insl
inc
roll
jp
fdivp
ljmp
push
xchg
not
scas
and
popa
inc
cmp
ds
inc
in
xchg
mov
add
mov
je,pt
jl
shll
or
jnp
sub
xor
lret
rolb
mov
mov
push
lcall
push
xchg
js
cmp
fnsave
mov
hlt
fimuls
repnz
pusha
xor
mov
popf
lock
mov
aaa
xlat
flds
cmc
pop
movsb
cld
sbb
dec
es
hlt
je
popf
push
sbbl
jl
je
divl
enter
negb
sub
imul
sbb
xor
jp
es
ffreep
sbb
adc
inc
sub
mov
mov
cltd
lret
add
mov
sbbb
sarb
aad
mov
xor
push
stos
jbe
orl
push
in
mov
cwtl
mov
jns
scas
loope
notl
jecxz
pop
es
inc
dec
in
ret
aaa
lret
ror
cmpb
mov
loopne
push
dec
cmpsl
inc
cmpl
fisubrl
out
pop
xor
shlb
pop
sti
or
and
pop
mov
inc
movsl
sbb
jg
inc
fstp
mov
mov
mov
adc
popa
ret
bound
cmc
aad
movq
in
jb
iret
cmp
push
mov
out
pop
enter
inc
sahf
vmovmskps
xchg
cmp
or
les
out
mov
jbe
xchg
mov
mov
rclb
mov
sti
cmp
dec
fst
lods
cmpsl
sbb
test
cmp
pop
js
pop
ja
cmp
push
sbb
mov
mov
mov
iret
fisttps
xchg
adcl
add
arpl
ds
or
neg
ljmp
fwait
mov
int3
adcl
adc
sbb
arpl
pop
sbb
dec
andl
sbb
sbb
lcall
mov
and
iret
xor
and
adc
mov
cwtl
mov
pop
rorb
push
stc
mov
jne
out
imul
jl
xor
jne
negb
and
mov
iret
sub
add
mov
sub
pusha
ds
inc
push
ret
dec
inc
imul
es
cmp
aad
repnz
fiadds
aas
mov
mov
dec
xchg
enter
rolb
inc
movsl
nop
cmp
cmp
xor
jne
inc
outsl
sub
fsubl
add
imul
cvtps2pi
lock
aas
add
pop
mov
lret
push
mov
mov
xorb
sub
add
testl
in
rorl
sti
fwait
sbb
mov
dec
imul
les
add
mov
mov
xor
hlt
jno
xchg
xor
nop
cmp
in
cmp
xchg
jo
jno
jp
movsl
addl
bound
push
xor
adcl
out
stc
jecxz
mov
xchg
mov
shlb
std
imul
test
adc
ret
testb
xchg
in
cltd
je
sbb
fstpl
push
shlb
jl
gs
jnp
xchg
sub
mov
fnstenv
shr
pop
in
push
sub
addr16
divb
enter
stos
orb
push
lods
imul
pop
xchg
cltd
jecxz
push
call
push
enter
or
and
adc
sti
int3
jge
push
stc
add
clc
test
mov
mov
push
cli
cmp
mov
insl
cmpsl
adc
jno
sbb
imul
xchg
sub
stos
fwait
sbb
sbb
cltd
and
out
xchg
jne
int
insb
inc
xor
mov
mov
mov
inc
jbe
cmp
aas
into
sbbb
jnp
jns
rcrb
je
pop
addr16
dec
and
or
ret
jb
jne
push
jae
ficomps
push
xchg
je
lret
pop
push
imul
mov
inc
xor
and
ja
sub
stos
test
addr16
jbe
fildl
pop
xlat
shlb
leave
mov
xor
shlb
cltd
mov
shrl
sub
xchg
stc
sbbb
add
or
cld
mull
or
or
in
daa
add
pop
shrl
sbb
test
jno
call
mov
icebp
dec
les
and
lret
cmc
push
jge
add
xchg
test
cld
stos
mov
add
lcall
fdivrp
pop
push
cld
pop
lret
pusha
fidivrl
mov
cltd
fistl
dec
cmp
jo
lods
jle
mov
add
or
mov
inc
aam
mov
pop
lds
cmpl
sub
ret
lock
enter
int3
mov
imul
jge
addr16
ja
cli
xchg
call
fidivs
adc
in
xor
adc
sbb
repz
sarl
and
mov
mov
out
or
mov
and
pop
jnp
push
cltd
hlt
adc
ja
inc
inc
stc
lods
cmp
add
pop
sbb
push
xchg
mov
fsubrs
les
dec
movb
aaa
dec
into
sub
jl
xchg
inc
mov
xchg
dec
xor
mov
ficoms
mov
shl
and
scas
pop
mov
arpl
xor
cld
mov
and
cltd
dec
fadds
ret
xchg
sbb
insl
repnz
dec
cmp
sub
test
loopne
xor
dec
add
jae
adc
decb
out
aas
cmp
mov
popa
fldcw
scas
pop
xchg
aaa
shlb
pop
mov
pushf
adc
xlat
adc
enter
mov
out
push
pop
pushf
loope
scas
bound
sub
xchg
push
push
mov
xchg
and
fadds
mov
and
cwtl
mov
sub
mov
repnz
call
out
jae
rclb
insl
cmp
mov
aas
mov
hlt
loopne
cmp
shl
rcrb
mov
cmp
jae
test
addr16
xchg
cmp
rcrl
in
sbb
mov
test
push
mov
push
push
sbb
inc
pop
add
shlb
or
add
or
adc
nop
adc
pushf
out
insl
adc
into
pop
maskmovq
imull
in
fimull
sahf
cmc
pop
inc
outsl
ljmp
out
mov
lods
inc
push
or
enter
jns
jecxz
mov
das
mov
test
lods
cmp
sahf
and
jb
jno
pop
mov
adc
inc
or
iret
call
nop
daa
std
or
dec
push
push
xchg
out
mov
mov
js
jo
add
mov
ret
mov
push
xor
ds
push
sub
push
xor
nop
add
pop
jmp
cmpsl
push
lcall
aam
cmpsl
jl
out
mov
cmc
sbb
mov
dec
lret
pushf
and
das
cmp
scas
pop
scas
cmp
cs
fisubrs
outsb
inc
sub
in
lods
pop
dec
and
xchg
test
or
mov
add
jge
push
or
xor
fdiv
xlat
cmpsl
imul
mov
mov
xchg
pop
push
xor
dec
sub
loop
mov
ds
mov
lret
mov
repz
sbb
cmp
addr16
test
add
mov
and
jno
in
cmpl
mov
xchg
push
or
pop
or
inc
sbb
sub
mov
or
xchg
pushf
push
push
or
daa
test
insl
dec
xchg
cld
in
and
and
add
insl
or
rol
pop
pop
add
dec
mov
cli
pshufw
dec
push
loopne
push
inc
pop
pop
repnz
pop
roll
in
test
mov
xlat
mov
adc
imul
mov
mov
popf
and
mov
fadds
mov
loop
les
inc
dec
cmpsl
sbb
xor
outsb
and
std
out
sbb
repnz
inc
notb
sbb
mov
jae
jecxz
jge
cmp
sbbl
cwtl
and
insl
insb
cwtl
sub
sub
sbb
jbe
jecxz
loopne
icebp
icebp
clc
cmp
pushf
sub
mov
gs
mov
out
pop
adc
xchg
loop
cmp
add
nop
add
cmp
rorb
lret
shrb
pop
clc
mov
frstor
mov
test
in
int
xor
aas
cmpsl
dec
push
pop
scas
test
xlat
fdivl
cmpps
cmp
jp
and
sbb
inc
xchg
sub
mov
je
shrb
add
cmpl
xchg
daa
popa
push
lret
push
les
xchg
jmp
mov
jp
cwtl
sub
push
mov
lods
jb
ljmp
mov
jmp
push
jmp
stc
lahf
jp
or
hlt
dec
and
or
inc
xor
mov
pop
add
mov
jecxz
jmp
daa
jmp
xor
xchg
sar
add
push
mov
and
inc
imul
rcll
ret
fmuls
jge
mov
rorb
xor
mov
and
inc
xchg
sbb
sub
fmull
testb
inc
jo
es
dec
dec
je
adc
or
inc
movsl
scas
pusha
pop
pop
sub
xor
mov
mov
cmp
push
int
nop
enter
out
jae
and
add
mov
in
lcall
xlat
mov
jnp
mov
adc
cmc
mov
xor
insb
cmpsl
daa
xor
adc
inc
jnp
roll
add
clc
rclb
pop
or
add
shl
sub
pinsrw
mov
js
or
adc
scas
cmpl
scas
cli
or
xor
sbb
cmp
sub
lcall
cltd
xchg
lods
bound
jle
daa
sbb
and
xor
sub
imull
shrl
jp
dec
inc
loop
or
push
push
cmpsl
into
sbb
cwtl
mov
daa
add
mov
clc
jl
jae
std
xchg
cmp
xorb
lea
sarl
idivb
push
gs
je
mov
cwtl
inc
outsb
popa
clc
movsl
jmp
loope
leave
push
pop
aas
leave
lods
dec
stos
sti
push
je
cs
test
and
sub
adc
jae
mov
cmp
clc
cwtl
fsubrl
cmp
mov
mov
fsubl
xor
mov
out
push
mulb
push
jbe
add
and
jae
std
push
cmp
mov
pop
ljmp
out
cld
es
add
nop
pop
jge
jno
mov
pop
cmpsl
aas
test
sbb
xor
cmp
les
push
adc
or
add
add
push
sub
mov
jae
mov
jnp
idivl
testb
cmpsb
xor
pop
pop
fldl
xchg
cs
add
int3
adc
loope
icebp
cld
das
add
ds
stos
or
dec
andb
ja
push
mov
jb
bound
add
pop
push
rorb
mov
ret
adc
and
out
movb
jecxz
pop
or
imul
decl
adc
testl
test
push
rorb
pop
add
shll
xchg
pop
mov
lcall
lret
mov
ret
cmp
sub
jb
dec
int3
mov
add
sahf
icebp
fisttps
orl
or
jo
cmp
push
inc
or
jmp
jmp
sub
pushf
nop
sar
sbbl
xchg
pushf
mov
cmp
cmp
sbbb
jmp
popa
in
add
outsl
pop
add
jge
push
in
cs
xor
daa
rolb
insb
push
arpl
inc
cmpsl
inc
adc
sti
pushf
ljmp
pop
and
mov
cmp
js
aad
mov
aaa
pop
cmp
add
mov
mov
repz
sub
jb
cmp
ja
mov
aaa
pop
sbb
fwait
mov
push
pop
jg
jmp
in
cmp
mov
and
xor
xchg
aaa
pop
adc
cmp
and
xlat
or
test
sbb
xor
sti
outsb
pop
out
repz
mov
add
lock
dec
addb
cmpsb
jecxz
cmp
pop
jg
add
inc
jnp
pop
call
insl
cmovno
sar
jb
inc
xor
xor
and
cmpsb
xor
mov
lahf
and
addr16
mov
sahf
adc
roll
mov
sub
dec
gs
imulb
xor
inc
adc
pushf
sbb
push
jg
jg
jle
jge
mov
fmull
cmpsb
cmp
bound
jge
imul
jl
inc
adcb
dec
test
add
cvttps2pi
in
xchg
push
rorl
arpl
mov
mov
je
shlb
fxch
hlt
dec
jnp
cmp
mov
inc
icebp
push
mov
call
mov
cmp
movsb
and
xor
or
adc
inc
dec
inc
gs
cmpl
mov
mov
and
push
bound
add
notl
cmpsb
jno
sbb
jnp
icebp
pop
push
inc
jg
mov
inc
scas
dec
sti
push
push
push
add
cmp
and
push
arpl
cwtl
shr
dec
adc
clc
adc
ljmp
out
xchg
inc
enter
fcom
cmp
push
mov
xor
cwtl
fs
or
mov
or
in
rol
pop
sub
push
adc
je
insb
arpl
inc
mov
xchg
je
mov
add
in
sub
shl
int
mov
stc
dec
mov
rcl
insb
mov
jecxz
push
push
xor
mov
or
iret
mov
sub
cmpb
push
add
lock
mov
outsb
jecxz
mov
jae
adc
std
pop
sbb
jmp
loop
addr16
aad
aas
es
mov
std
stos
imul
xor
fwait
sub
jb
int3
jg
sti
dec
pop
cs
and
int
fadds
mov
invd
lods
call
push
push
fwait
lea
test
jg
test
repnz
fdivrs
into
jl
scas
movsb
imul
shl
popa
fisubl
or
xor
in
lret
pop
cmp
sti
push
sbb
ja
mov
in
call
lcall
sub
cmp
xchg
xchg
subb
mov
ret
fcoms
ret
iret
cmp
mov
popf
pop
push
stos
in
mov
jp
xor
insb
imul
dec
icebp
or
lods
insl
cs
hlt
stos
mov
mov
jge
loopne
jl
in
jbe
sbb
mov
aad
push
jno
scas
sub
xor
in
add
mov
scas
push
dec
push
aas
dec
dec
cwtl
daa
rorl
mov
fwait
pop
mov
jge
and
shl
push
or
inc
cmp
push
or
ds
aas
repz
cwtl
stc
cli
pop
das
push
gs
stc
in
mov
aaa
and
inc
stos
xchg
mov
loop
mov
mov
pop
dec
xchg
and
add
adc
sbb
pop
leave
shlb
jae
mov
call
call
xor
mov
ss
xor
repnz
shll
fadd
mov
push
jp
mov
mov
sub
int
push
mov
int3
push
pop
ds
in
adc
ret
lods
sbb
nop
sbbl
xor
or
mov
int3
mov
xchg
mov
push
ds
aaa
dec
dec
push
dec
xchg
jg
jle
repnz
xchg
ljmp
int
loop
inc
mov
push
outsl
push
dec
jl
mov
clc
sbb
push
inc
jne
mov
mov
xor
scas
outsb
sahf
xlat
mov
sub
pushf
sub
sub
imul
ret
es
jbe
mov
mov
test
sub
lea
and
push
jno
iret
pop
les
adc
pop
in
sbb
mov
outsb
fbld
mov
lahf
fsub
or
ret
jbe
inc
or
push
call
mov
xor
fldl
sti
arpl
jb
ss
daa
xchg
sub
adc
lret
cs
loope
in
jl
sarl
stc
enter
outsl
in
insl
out
leave
cwtl
roll
repnz
test
inc
sub
fcoml
lcall
mov
fdivrl
cwtl
aad
clc
bound
pushf
sti
jnp
mov
and
sbb
push
lods
mov
ret
fnstcw
aam
mov
add
je
cmp
call
shlb
push
mov
cmp
out
pop
pop
pop
inc
movsl
repnz
addl
push
call
sub
sub
sbb
sub
rolb
loopne
data16
jmp
scas
lcall
mov
addr16
arpl
aas
ljmp
or
sahf
sub
sahf
mov
out
jae
pop
jae
mov
pop
mov
xchg
call
ror
ss
xchg
mov
cli
xchg
or
rcr
cmpsb
add
stos
xor
xchg
cmpb
sbb
jno
pop
rcl
fdivs
xchg
test
test
or
adc
scas
hlt
adc
push
jmp
mov
mov
pop
mov
or
addr16
rcrl
sarl
adc
and
xor
in
aaa
xor
in
outsb
push
jbe
aaa
mov
xchg
jns
in
lods
lds
jbe
sub
mov
fsubrl
push
mov
fistl
push
mov
inc
jg
sub
jg
mov
cmp
cmp
out
fnsave
add
sub
bound
paddb
ret
mov
bound
inc
and
insl
xchg
ficomps
add
dec
xchg
hlt
pop
imull
sub
lods
sub
pop
stc
add
dec
aas
movsl
scas
push
mov
and
jno
add
insl
adc
daa
and
leave
adc
adc
push
cltd
sbb
and
xchg
dec
xor
fs
orl
xor
inc
xor
aad
xor
inc
and
cwtl
movsb
repz
xchg
jecxz
lea
test
lea
xor
sub
cmpsb
out
fwait
ja
mov
jnp
test
push
cld
rcll
nop
pushf
sbb
push
pop
rorl
lahf
loopne
pushf
or
jp
inc
pop
setg
xor
test
mov
insb
out
sub
xor
and
gs
ljmp
mov
fs
cmpsb
test
and
mov
sbb
mov
in
fstpl
cmp
mov
rolb
mov
push
das
pop
pop
repz
sub
pop
sbb
jo
push
sub
jmp
pop
pop
int
ret
xor
pushf
out
and
xchg
test
mov
imul
lock
sub
pop
pop
xor
aas
outsl
in
out
test
sahf
push
sbb
pusha
or
test
cmpsl
aaa
jge
cwtl
adc
mov
sbb
sti
mov
dec
or
shl
cmp
lods
mov
pushf
out
cltd
daa
sbb
adc
or
gs
dec
ss
xor
stos
mov
push
outsl
jbe
and
scas
cmp
test
stc
and
lret
dec
and
add
test
inc
iret
imul
mov
or
pop
lret
inc
jns
subb
push
arpl
cld
loop
inc
inc
out
cmp
mov
jne
lock
adc
pop
in
ss
xor
mov
dec
push
and
pop
jmp
pop
int3
adc
xchg
out
rorb
xchg
ds
es
outsl
popl
and
jae
dec
sbb
pop
addr16
int3
lcall
push
dec
sub
daa
mov
mov
push
lea
arpl
sub
out
pop
ret
pop
popa
rolb
xchg
clc
dec
testb
enter
fbld
fimull
xor
imul
mov
mov
add
leave
sarl
test
mov
push
add
pusha
pushf
mov
loope
enter
in
sbb
pop
icebp
hlt
mov
cli
popf
ret
scas
sub
fdivs
adc
add
test
dec
popa
into
iret
nop
jge
push
aaa
fiaddl
push
mov
lret
or
cwtl
cltd
loope
test
adc
push
jmp
inc
cwtl
jnp
lods
ja
pop
pop
add
sub
test
cwtl
pop
subb
and
imul
aam
mov
lret
mov
mov
sbb
cmpsl
xor
rcll
shrl
pop
jg
pop
push
adc
cwtl
imul
dec
ss
out
inc
lcall
ret
mov
pop
cld
mov
loopne
sti
adc
mulb
outsl
bound
insl
pop
rcrb
fucom
ret
popa
jl
addr16
into
orb
add
pop
insb
cltd
call
popf
cmpsb
add
out
repnz
mov
jne
fidivrl
mov
loopne
jg
mov
jle
or
jne
subb
das
xchg
es
push
cltd
sub
sbb
fisttps
aam
gs
lods
fisttpl
jnp
mov
outsl
mov
rorl
outsl
sub
xor
sub
add
imul
lock
cmc
mov
jae
and
mov
adc
mov
aaa
mov
fst
mov
mov
dec
nop
mov
mov
lahf
dec
pop
sub
imul
ss
sbbb
ds
xchg
ret
jg
dec
ficomps
xchg
bound
lahf
rclb
int3
stos
push
sub
into
sti
stos
into
xorb
adc
add
mov
and
pop
adc
cmp
scas
clc
out
push
dec
in
popf
dec
outsl
mov
shrb
outsb
xchg
pop
sub
push
push
in
dec
subl
jge
xchg
dec
push
lods
hlt
inc
clc
add
inc
sbb
nop
jmp
fs
fwait
pop
cmp
cmp
xor
inc
test
stos
lret
lods
mov
daa
nop
fnstcw
inc
and
mov
add
jle
cs
notl
ss
mov
cmp
cmp
aaa
lret
inc
xor
sub
out
sub
cmp
or
lods
in
push
cwtl
pop
add
out
or
jae
xchg
mov
test
mov
fidivl
cld
iret
mov
out
js
jg
or
xchg
push
repz
pavgw
xchg
push
xchg
mov
ret
dec
popf
lea
insl
push
or
aas
jmp
mov
mov
inc
shlb
cltd
icebp
lds
pop
mov
addr16
fmull
xchg
jl
ret
lcall
ljmp
out
enter
lock
cmpsb
inc
sbbl
cwtl
lock
js
jne
mov
add
jns
dec
bound
push
stos
xchg
push
mov
jge
shrb
out
push
mov
jo
push
mov
jne
push
push
repnz
rorl
inc
xlat
add
test
cmp
ljmp
mov
jbe
leave
sbb
js
push
pusha
inc
cmpl
shlb
push
pop
sub
dec
mov
sub
mov
shl
fwait
inc
pop
mov
pop
scas
add
jb
mov
mov
or
mov
aaa
add
popa
lea
inc
imul
ss
jb
stos
pop
decl
repnz
cld
xchg
jmp
jecxz
int3
mov
mov
imul
adc
pop
inc
loop
loope
in
fs
je
mov
imul
adc
inc
rcr
mov
dec
sub
sbbb
mov
lods
adc
sbb
rorl
icebp
jns
cltd
ja
cs
stc
jmp
add
dec
add
cmpl
mov
popf
test
jae
stos
mov
dec
pop
pop
jo
outsl
mov
jmp
push
and
add
mov
int3
lret
push
stos
dec
imul
and
lods
push
xchg
ljmp
mov
add
mov
cli
movsb
in
cmc
mov
xchg
dec
fdivs
push
sbb
xor
sbb
xchg
imul
push
cld
or
xor
jae
push
or
mov
jp
inc
add
pop
mov
daa
loopne
cmp
sub
test
movsl
stc
adc
rcrl
sbb
repnz
bound
and
std
mull
dec
jns
xchg
loop
fwait
inc
insl
jmp
mov
cmp
push
lcall
iret
mov
fwait
or
mov
stos
jl
add
pop
fmul
es
pop
fwait
jns
push
imul
mov
rcrl
add
jae
sbb
cmp
adc
mov
adc
scas
ds
ret
icebp
sub
xchg
out
popl
insb
mov
data16
loop
mov
jne
mov
sbb
popf
jmp
jmp
cmpb
adc
jmp
dec
or
or
inc
mov
jne
out
push
and
repnz
mov
int3
mov
jo
jmp
push
cwtl
mov
loop
aas
shrl
test
dec
push
je
jecxz
std
into
adc
lret
bndldx
mov
or
mov
jp
je
shl
arpl
xor
rolb
push
inc
sahf
inc
hlt
divl
call
mov
adc
sub
sbb
pop
pop
fldt
insl
and
fisubl
loop
jbe
mov
movsb
xchg
dec
mov
repnz
jge
aas
mov
add
pop
bound
mov
xor
stc
sub
pop
inc
sub
jns
test
or
add
dec
lcall
rorl
adc
xchg
cmpsl
push
inc
add
pop
addr16
loop
mov
mov
dec
pushf
mov
sbb
aad
fmull
fldenv
icebp
push
jb
stos
xor
mulb
cmp
pushf
or
xor
pusha
jmp
add
lods
aaa
les
ljmp
cwtl
mov
pop
js
cmpl
sbb
inc
add
mov
stos
xor
cltd
dec
mov
adc
mov
jae
bnd
fisubl
addr16
xchg
popf
xchg
ss
mov
pop
xor
iret
cmpsl
mov
cmc
pop
xlat
orl
or
mov
cli
pop
aas
addr16
push
adc
push
bound
mov
loope
int
cld
incb
aam
and
push
cmp
idivl
shr
xchg
fnstcw
imul
push
sbb
xchg
cs
jno
push
xor
inc
mov
fisttps
notl
mov
mov
inc
es
in
addb
imul
movsl
bound
and
add
sub
xchg
call
mov
pop
sub
push
outsl
jecxz
pop
lret
mov
sub
mov
mov
les
add
cltd
andl
sub
push
sbb
movsb
je
dec
jb
std
cmp
pminub
inc
into
inc
fsubrl
adc
xchg
out
outsb
pop
push
in
or
sub
xor
ds
xor
sub
aad
pop
push
mov
lahf
dec
add
dec
sbb
adc
sub
mov
out
shr
ret
mov
push
dec
repz
test
nop
rcll
imul
add
js
cs
icebp
or
pushf
test
stos
or
adc
mov
mov
out
dec
aas
xlat
push
sbb
xchg
int3
lock
inc
push
sbb
mov
xor
adc
mov
mov
jmp
xchg
and
call
je
jbe
adc
push
js
and
cli
adcb
mov
xchg
sahf
ds
mov
jo
adc
push
or
repz
sbb
iret
dec
lcall
xchg
mov
jo
and
fxch
fimull
into
push
or
arpl
pop
sub
and
pop
icebp
push
movsl
aaa
int
and
std
stc
xchg
enter
push
pushl
aam
xchg
cmp
and
fsubrs
cmp
push
inc
or
push
and
push
mov
cld
jp
idivb
gs
and
mov
adc
mov
inc
and
stos
add
jg
mov
lcall
dec
aas
adc
into
test
decl
lock
aaa
scas
pop
jecxz
jg
inc
push
leave
mov
inc
or
mov
xor
aam
das
dec
xchg
loop
loopne
ds
or
push
jp
sti
push
jne
es
pop
jmp
std
mov
test
in
cs
mulb
stc
adc
imul
sub
scas
xchg
mov
pop
aaa
shl
enter
in
loop
in
sbb
sub
ret
loopne
jecxz
xor
mov
pusha
loope
and
xchg
scas
push
clc
push
pop
leave
xchg
adc
lahf
mov
pop
out
adc
mov
in
movsl
lret
icebp
push
push
fadds
push
jnp
ja
jmp
es
push
add
shrl
ret
mov
stc
cmp
mov
push
push
shll
jmp
cld
mov
lcall
gs
pop
xor
fcomps
xor
pop
inc
leave
inc
xor
mov
mov
push
sbb
push
mov
dec
add
xorl
xchg
movsl
imul
clc
cmp
jmp
add
cs
and
dec
pop
jbe
and
pushf
fwait
xchg
stc
xchg
movsb
iret
sub
js
push
pop
call
mov
pushf
fsubrs
push
scas
scas
add
push
pop
pop
sub
pop
cmp
aaa
mov
idivb
pop
roll
push
imulb
xorb
aam
jne
inc
fsubs
hlt
fwait
cs
xchg
test
andl
das
pushf
testb
repnz
aam
mov
in
test
inc
xchg
mov
inc
adc
jbe
std
pushf
das
int
leave
xchg
cs
mov
stos
and
cmpsl
mov
inc
loopne
mov
imul
ja
lea
jmp
pop
mov
sub
lea
lds
or
aaa
movsl
cmp
testl
shrb
imul
shr
jne
sub
stos
mov
mov
loope
dec
adc
pop
jno
in
mov
fwait
mov
shlb
jb
mov
movsl
or
inc
pop
data16
data16
cmp
push
xchg
jae
xor
fcos
rolb
movsl
call
dec
pop
call
lcall
iret
data16
lds
and
clc
aaa
sub
sub
or
lods
pop
nop
sti
pop
adc
jge
sbb
gs
pop
jo
sbb
aad
ror
ret
inc
clc
sub
adc
icebp
mov
fcompl
out
sbb
push
add
add
push
xor
movsl
adc
cmp
mov
test
push
sub
push
and
inc
cs
ljmp
lret
dec
dec
rcr
in
pushf
incb
outsl
lcall
jno
sbb
inc
sub
sbb
pop
nop
push
psubw
inc
daa
jbe
daa
lret
sbb
fildll
in
push
dec
andl
and
rolb
pop
daa
mov
scas
mov
movl
and
mov
outsb
cld
loopne
outsb
ss
cmp
ror
sbb
jl
lods
or
clc
int
push
sbb
dec
popf
inc
mov
xor
out
leave
shr
in
pop
xlat
or
dec
stos
xorl
iret
dec
xchg
inc
stos
cltd
push
int
out
fistl
jmp
not
stos
test
int
inc
jns
push
pop
sbb
sub
dec
pop
pushf
inc
xlat
mov
ret
sbb
ret
xchg
mov
adc
movsb
mov
loop
out
sub
mov
es
loopne
stc
push
in
adc
adc
addr16
lcall
pusha
rcr
mov
outsb
popa
dec
lret
mov
scas
or
jp
pop
xchg
ficoml
pop
icebp
jb
push
inc
mov
mov
add
daa
aaa
mov
lods
je
fistpll
out
xlat
lea
jmp
mov
lret
lock
xchg
loop
push
icebp
stos
orl
push
mov
insl
fstpt
loop
inc
adc
fisubs
cmp
sbb
jp
mov
enter
push
or
xor
fldl
fs
push
ret
cld
stc
mov
out
ds
xchg
hlt
mov
rcr
stos
inc
lahf
jmp
bswap
or
ss
aas
xchg
pop
test
fistpll
ret
mov
and
pop
nop
imul
or
and
outsb
pop
out
subl
jb
gs
mov
or
push
inc
call
out
es
outsb
cld
js
insb
mov
mov
mov
fidivrs
xor
and
das
xor
xchg
cmpsb
lret
ljmp
push
push
test
loopne
aas
and
xor
shll
mov
sbb
xor
add
addl
divb
pop
iret
pusha
rclb
sub
loop
daa
popa
dec
cmp
adc
pop
aas
push
inc
mov
in
mov
outsl
pop
dec
adc
mov
leave
loope
add
test
cmp
pop
test
sbb
or
sub
push
and
mov
mov
adc
lcall
rorb
scas
mov
add
jbe
movsl
les
ja
mov
mov
lahf
std
pop
lcall
xchg
subb
mov
dec
cmp
mov
jge
repz
loop
sub
push
shrb
jno
jb
ret
pop
cmpsb
jmp
js
arpl
mov
movsl
add
pop
imull
fs
leave
sbb
push
test
stos
fbld
leave
fsqrt
mov
movsb
sub
fs
lea
mov
mov
ja
xor
mov
sub
or
pop
mov
and
int
popfw
loope
lahf
lret
test
bound
std
pop
lret
lahf
orl
add
arpl
test
fisubl
cmp
inc
cmc
mov
cli
cld
mov
or
push
xchg
xchg
std
adc
pop
popf
mov
inc
std
sub
mov
jmp
lea
aad
cmpsl
inc
cmp
cld
daa
add
pop
cltd
push
mov
clc
mov
mov
or
cmpsb
es
mov
or
lret
xor
nop
add
shlb
imull
or
inc
adc
out
dec
add
add
arpl
pusha
push
sub
jo
cli
jg
in
adc
jg
xor
xchg
je
jne
orl
lcall
dec
cmp
sub
sbb
daa
pop
pop
test
out
push
mov
jle
lcall
mov
adc
ljmp
pop
cmp
sub
outsb
push
stos
jo
fiadds
test
mov
push
iret
push
adc
dec
lds
sbb
pop
mov
repnz
cmp
cmp
dec
mov
pop
xchg
ds
adc
mov
dec
int3
inc
lds
test
jg
and
in
cmp
mov
dec
push
pop
jp
out
scas
add
add
add
ficoml
lods
jecxz
rorl
adc
rcrb
cwtl
push
inc
movsb
scas
popf
rcrb
cmp
sub
cltd
lret
and
xchg
dec
mov
push
push
inc
test
pop
jae
dec
mov
insl
mov
sub
lods
loop
inc
cli
cmpsl
xor
fstl
mov
or
lea
pop
cmp
imul
dec
orl
scas
loope
ljmp
push
pop
in
sub
rorb
mov
fisttpl
add
pop
inc
jl
dec
adc
push
out
rorb
stos
cld
inc
cmp
int3
mov
inc
test
out
add
push
xchg
std
rolb
jo
or
push
stc
mov
add
fildll
leave
and
lret
adc
jnp
and
stos
in
lea
push
lahf
push
js
popa
sarw
xor
test
out
push
push
cli
inc
loop
jge
dec
dec
adc
push
arpl
icebp
add
sub
rclb
ja
test
rolb
mov
aas
jno
ret
inc
mov
jnp
or
add
fcoml
adc
test
ljmp
mov
mov
xchg
ja
inc
pop
jns
inc
rclb
iret
repz
mov
mov
mov
decl
pop
sbb
mov
push
lret
xor
enter
mov
enter
out
mov
jle
jmp
sbb
lcall
mov
je
dec
mov
push
cwtl
test
pop
imul
lods
mov
jnp
in
loopne
ss
mov
inc
outsb
mov
sub
jmp
jno
ret
addr16
iret
movsb
pop
jae
adc
adc
clc
lcall
stc
push
call
mov
jmp
push
fnstsw
nop
insl
sub
adc
lahf
fsub
outsb
mov
xor
pop
fisubl
ret
push
std
movsl
or
pop
jno
mov
cmp
dec
jl
push
ss
or
test
cmovne
mov
jmp
aaa
fsub
pop
jae
xor
xor
insl
inc
xchg
and
adc
movsl
dec
js
fistpll
add
shrb
retw
int3
test
jmp
inc
cli
roll
mov
sbb
test
idivl
pop
out
sub
enter
jp
dec
push
pop
dec
in
arpl
add
adc
lock
adc
jl
pop
pop
dec
push
sahf
in
aad
mov
incb
cmpsb
jno
jne
ljmp
jecxz
mov
xchg
jb
aaa
xor
ja
jmp
movsb
into
mov
mov
sub
stc
ja
pushf
iret
test
sbb
stos
cli
inc
loopne,pn
int3
ja
jne
xchg
cmpsl
int3
lret
push
pop
dec
mov
scas
cmp
mov
je
mov
dec
mov
popfw
adc
cmp
adc
pop
imul
sbb
adc
gs
inc
dec
cmp
vpminub
shll
rolb
dec
xchg
dec
adc
jecxz
ja
inc
pushf
adc
jp
leavew
mov
popa
xlat
cmc
outsb
jge
mov
ds
clc
popa
push
js
mov
xorl
outsb
stos
popf
fwait
and
mov
lds
test
mov
pushf
push
jmp
inc
lods
rorl
in
ret
or
test
fidivrs
out
push
push
loopne
ret
test
fldcw
mov
xchg
fcoml
dec
jg
pop
push
int3
xchg
ja
push
outsb
imul
xchg
imul
je
xchg
ret
xor
lock
mov
xchg
xchg
ds
cmp
push
lods
mov
cs
inc
push
dec
fbld
cltd
sbb
cmp
sub
jmp
jns
outsb
aam
in
push
orl
push
out
out
mov
jb
cmp
sub
insl
dec
pushf
adc
dec
mov
xor
popa
cmp
jle
adc
xor
push
test
lret
je
push
int
out
or
inc
in
xchg
ret
bound
les
imul
outsb
scas
sub
lock
lret
push
xchg
ret
hlt
or
out
test
pop
mov
xor
cltd
out
lea
jnp
iret
add
cmc
out
mov
cmp
lock
out
sbbb
pop
mov
jg
cmp
mov
add
loope
outsl
sub
aas
subb
xor
stc
jp
arpl
sub
cmp
aaa
icebp
dec
insl
mov
mov
mov
cmp
sbb
xlat
data16
test
add
sahf
bsr
call
out
mov
in
inc
lea
cs
cmp
mov
add
dec
and
pushl
lret
jge
movsl
dec
repz
iret
push
sub
out
jb
xor
or
shll
sub
int
mov
adc
pop
xorl
fildll
stc
ret
dec
sub
mov
lret
sbb
pop
mov
inc
jmp
mov
cmpsl
jmp
adc
xchg
enter
add
xchg
mov
into
and
bound
inc
and
jge
mov
ss
pop
je
mov
sub
aas
adcb
pop
bound
bound
xchg
fsubs
cld
rcll
ficompl
dec
mov
das
stos
ret
cmp
push
mov
dec
popa
mov
jp
pop
pop
fcomp
ret
lcall
dec
sahf
mov
mov
ja
jne
inc
mov
sbb
cmp
mov
xorb
push
jne
xchg
mov
adc
test
inc
push
xor
cld
xchg
lcall
push
mov
ret
jnp
outsl
pop
in
filds
cs
iret
jnp
mov
sub
shll
xorb
fbld
in
push
repnz
push
lock
dec
and
clc
and
cwtl
lret
imul
adc
std
push
cmpsb
mov
fwait
ljmp
fs
xchg
add
in
xchg
jp
jl
aas
orl
pop
mov
dec
mov
dec
mov
insb
shlb
or
fwait
lret
add
out
test
fcmovbe
inc
bound
lret
xor
fiadds
sub
mov
iret
xlat
fimull
dec
mov
jnp
pop
mov
rclb
sbb
dec
cmpb
neg
sbb
stos
ss
iret
inc
jo
aaa
inc
or
xchg
dec
xor
sub
mov
push
hlt
adc
cmpsb
jp
mov
mov
lds
jmp
popa
in
sub
jnp
xchg
movsl
repnz
push
hlt
add
push
fs
clc
repnz
iret
dec
lods
shrl
loope
mov
call
lret
insl
jmp
xchg
lret
test
call
fs
and
pop
mov
aam
pop
lret
sub
mulb
and
imulb
xchg
jl
inc
icebp
stos
xor
xchg
sub
inc
test
stos
das
adc
jg
pop
xchg
movsb
nop
xor
add
add
add
xchg
xlat
les
dec
mov
or
rorl
pop
sti
jle
jle
insl
xor
pop
jnp
repnz
and
sbb
mov
dec
pop
mov
or
and
jmp
inc
sarb
lret
mov
and
pop
and
in
xchg
mov
jne
sti
mov
and
lcall
out
loope
xor
dec
scas
fwait
jecxz
sub
jecxz
out
xchg
in
or
fstps
cmp
and
test
xchg
mov
mov
jle
sub
int
lds
and
inc
cwtl
cmpsl
lahf
inc
andl
mov
or
jle
xchg
or
dec
std
cmpl
mov
sub
push
fidivs
xlat
mov
cmp
rclb
das
push
cmc
insb
cmp
ds
xchg
in
outsl
mov
arpl
fiadds
mov
sbb
and
pusha
mov
xchg
sbb
dec
lcall
inc
jg
push
xor
mov
in
cld
data16
push
in
lahf
inc
gs
push
pop
push
cltd
pop
ja
jecxz
jnp
lret
add
sub
push
inc
in
fcmovnbe
repnz
sti
inc
into
and
mov
xchg
xor
or
popf
sbb
lods
xorb
pop
cld
jge
dec
inc
mov
dec
inc
mov
test
addl
call
sahf
out
push
cmp
push
or
push
in
and
adc
inc
dec
jle
adc
add
mov
mov
test
notb
ret
loope
mov
xchg
rcrl
faddp
push
div
push
loop
fsub
or
stos
or
int3
icebp
add
mov
in
lock
jbe
push
aaa
out
cmp
xchg
popa
repz
in
cmp
ds
pop
in
or
xor
mov
outsb
or
fwait
imul
fbld
xor
stc
lds
outsb
add
mov
mov
imul
repz
push
ret
mov
xor
lcall
imul
ds
fsubrl
enter
mov
xchg
cmp
adc
rcrb
inc
cmpsl
pop
rcrl
mov
or
or
and
fimuls
fidivs
leave
jle
adc
mov
imul
pop
lahf
xchg
adc
mov
pusha
addl
push
jmp
lea
test
in
or
and
xchg
sbb
test
xchg
jl
sbb
pushf
mov
push
outsl
pop
sbb
cmp
or
push
lahf
push
and
jno
xor
out
daa
cmpsl
int
fnsetpm(287
lret
in
outsl
mov
pushf
mov
arpl
pop
cmp
jle
and
sub
inc
add
call
pop
loop
enter
ja
adc
cmp
add
ljmp
pop
loope
and
lret
packuswb
pop
pop
mov
es
xor
mov
ljmp
dec
cs
xchg
out
dec
rol
jg
enter
mov
addl
push
sub
and
fcomip
movsl
mov
or
adc
pop
mov
rclb
test
bound
xchg
mov
scas
sub
call
jns
sub
scas
clc
inc
lret
add
sbb
xchg
or
gs
adc
inc
mov
das
mov
sub
repz
mov
push
push
ljmp
mov
cmp
stos
or
xchg
dec
mov
dec
aaa
nop
pop
jmp
pop
stos
sub
xor
enter
pop
out
lea
push
pusha
arpl
jp
aas
mov
mov
lods
mov
jmp
iret
pop
push
sub
outsl
repnz
imul
ror
adc
jo
dec
je
inc
mov
cmc
jbe
mov
cmc
push
push
mov
or
mov
movsl
cli
sub
inc
xchg
and
lahf
or
arpl
mov
jbe
mov
clc
faddp
cltd
test
sub
jle
popa
cmpsb
pop
mov
add
icebp
ret
push
jns
ljmp
xor
out
mov
sub
movb
pusha
push
lahf
ret
jno
hlt
cmp
xchg
sbb
out
fbstp
cmp
cmp
or
enter
or
xor
fstpt
js
js
push
mov
sbb
cld
repz
cld
and
adc
movsb
lahf
xor
fstpl
push
nop
cwtl
dec
jl
xchg
cwtl
pop
ficomps
jmp
sahf
mov
ficoms
outsb
jb
mov
inc
adc
cmp
xchg
insb
mov
in
xchg
or
js
out
jl
dec
jne
adc
jne
adc
adc
movsl
jb
test
pop
test
adc
popl
mov
shll
cmp
test
xchg
xor
sahf
jne
test
daa
lret
popf
test
mov
pop
inc
pop
int3
mov
hlt
es
imul
aas
pop
add
push
enter
das
movsb
mov
cmp
xor
nop
sbb
and
popf
mov
jmp
mov
push
addr16
push
shlb
int
jbe
fstl
xor
pop
fisubrs
sti
push
sbb
cli
add
mov
jp
pop
jae
jb
outsb
add
ret
fwait
dec
xchg
push
aaa
and
fwait
jmp
xor
pop
icebp
push
insb
jl
xor
popf
aad
inc
hlt
nop
sbb
mov
sub
bound
jp
or
mov
rorb
push
mov
sbb
cmp
test
clc
mov
lods
dec
and
adc
xchg
mov
lret
out
das
fdivrs
lcall
adc
ret
xor
xorl
jno
cli
add
cli
mov
cmp
and
lock
cmc
xorb
inc
out
out
into
int
sbbl
stos
lods
or
xchg
inc
loop
push
xor
xchg
push
add
mov
dec
sub
mov
das
pusha
adc
cmp
sbb
mov
loop
or
push
sub
pop
push
or
cmc
jmp
js
inc
mov
pop
lods
gs
lods
sahf
pushf
rorl
jg
loop
dec
push
inc
push
in
cwtl
daa
stos
ret
inc
xchg
xor
sub
idivb
nop
outsb
ds
mov
arpl
mov
data16
sarb
dec
aas
pusha
jl
add
cmp
mov
push
cmp
dec
notb
push
cmpsb
or
dec
cmp
pop
dec
xor
mov
adc
js
sbb
sub
call
cmc
idiv
cmp
dec
rol
xor
out
inc
sub
xchg
cs
cwtl
push
inc
mov
jae
fisttpl
fldt
inc
pop
out
cltd
sarl
rcll
push
iret
xor
and
fldl
xchg
mov
imul
hlt
jnp
xchg
arpl
add
test
gs
daa
jnp
repz
enter
sub
outsl
fsts
xor
mov
shlb
idiv
jo
push
mov
sub
in
mulb
pop
add
pusha
mov
mov
push
xor
outsl
aad
aaa
into
mov
lods
ss
mov
dec
sbb
in
cmp
push
pop
ds
mov
mov
jne
nop
frstor
dec
test
jg
xor
popa
negl
fcomi
sbbl
adc
out
push
fbstp
inc
jp
es
mov
adc
incl
aad
mov
inc
gs
xchg
shlb
or
jp
and
add
and
jecxz
mul
aad
pushf
xorb
iret
or
inc
jle
cmc
jns
jnp
jl
lahf
movsl
and
call
cli
leave
sbb
stos
imul
loop
pop
pushf
outsb
mov
sbb
fnstcw
push
xor
das
push
in
mov
inc
in
mov
push
and
mov
and
jns
enter
mov
push
adc
test
push
or
push
cs
mov
rorb
cmp
mov
pop
ud1
call
jbe
gs
sub
insl
sbb
lea
lret
cmp
xchg
inc
pop
into
lock
sarb
push
lret
aaa
je
sbb
insl
push
test
and
push
mov
fidivl
addl
or
loopne
dec
jno
push
adc
adcb
cltd
rorb
mov
outsb
or
adc
in
loopne
push
lahf
lock
scas
dec
mov
out
xchg
mov
push
lock
push
jge
add
pop
pusha
in
rcrl
in
or
or
ds
popf
enter
mov
in
cmp
inc
adc
ds
fisubl
jae
ret
and
cs
call
dec
lods
cltd
ret
in
push
sbb
push
push
mov
arpl
mov
xchg
push
xor
aaa
or
sbb
mov
ljmp
fs
ret
nop
xchg
pop
stos
andb
repz
pushf
nop
in
and
push
jmp
ret
cmpsl
add
mov
in
pusha
cmp
cmp
xor
dec
int
sub
adc
sbb
push
push
mov
imul
sub
lret
push
fidivrs
out
imul
lods
icebp
cmp
mov
pop
ss
out
jl
cmp
xchg
xchg
mov
sbb
testb
pop
xchg
mov
in
push
mov
inc
jecxz
ret
addr16
call
mov
or
dec
mov
int
push
fnsave
cmp
jl
out
lahf
xchg
and
mov
inc
xchg
xor
xor
dec
sub
xor
cmc
adc
sarb
in
cld
pop
imul
psllw
and
das
jge
aaa
lods
stos
push
in
fnstenv
test
xor
jno
sub
das
cld
ret
mov
mov
movb
adc
int
addb
arpl
xor
ret
jae
push
imul
jo
lret
rclb
adc
fsubrs
add
rcl
xchg
repnz
out
ja
xchg
stc
mov
in
xchg
mov
push
hlt
adc
jge
in
xchg
push
jmp
dec
adc
push
cmp
imul
mov
leave
or
cmp
push
shll
xchg
mov
mov
pop
test
call
pop
inc
mov
cs
sub
in
out
out
mov
subb
shlb
sub
sub
popf
mov
pop
jge
test
mov
gs
stos
adc
cmp
insb
movsb
leave
iret
das
aad
adc
in
rolb
outsl
call
pop
inc
std
cltd
xchg
sbb
loope
mov
pop
pop
es
or
mov
cmpl
dec
mov
and
mov
aas
xlat
into
cmp
xor
movsb
cmpsl
xchg
addr16
out
outsl
je
jns
lret
mov
insl
inc
xlat
adc
outsl
pop
cmp
mov
sbb
jb
iret
mov
mov
rcr
mov
fcoml
jns
pop
imul
in
mov
dec
pop
push
or
out
ljmp
sbb
jne
aad
and
push
js
xor
or
roll
push
add
lea
cwtl
xlat
xor
pop
mov
ds
jb
sbb
or
xchg
dec
movsb
aas
repnz
add
mov
das
fwait
mov
pop
lods
flds
pop
test
push
mov
push
pop
xchg
xchg
ficompl
push
arpl
xchg
test
and
test
add
adc
cmpsl
add
cli
mov
adc
pushf
inc
mov
shlb
orb
jl
inc
jmp
add
xorl
mov
inc
popa
rclb
add
and
adc
pop
mov
push
cltd
xchg
bound
xchg
fwait
xor
fwait
mull
je
arpl
jp
adc
out
out
xorb
mov
jne
pop
aad
movsb
mov
rorb
shll
movsl
inc
xchg
ret
test
das
stos
data16
test
push
jno
roll
push
add
add
test
cmp
insl
movsb
mov
mov
jo
pop
sbb
cmp
sar
and
jae
pop
leave
faddl
push
pop
test
pop
or
subl
sahf
lock
jle
inc
sbb
mov
int
outsl
pop
femms
cmp
setns
push
mull
push
ret
in
cmp
push
sub
aaa
add
outsl
mov
xchg
jecxz
in
fldenv
pop
sub
lcall
ficoml
inc
hlt
not
push
mov
xchg
fsubrp
dec
insl
inc
icebp
sub
xlat
ljmp
cld
cltd
loop
mov
adc
xchg
loop
pop
popa
enter
and
dec
mov
outsl
push
and
cmp
lock
icebp
sbb
aad
cwtl
mov
push
dec
clc
jg
dec
cmp
lods
std
sbb
add
outsb
ljmp
mov
into
xchg
and
lock
arpl
rclb
aad
hlt
or
addr16
push
jns
sub
rcll
or
pop
mov
clc
stos
xor
andl
or
call
adc
out
xchg
shrb
pop
mov
add
test
xchg
dec
nop
jne
cli
into
loopne
lahf
leave
add
dec
movsb
adc
ret
sarl
test
mov
fnstsw
ret
out
sbb
mov
ret
jne
cmp
jo
adc
sub
push
clc
push
xchg
dec
sub
test
add
fldenv
in
ds
mov
mov
cltd
iret
push
xor
add
mov
xchg
nop
lods
lods
mov
jp
xor
popa
or
adc
adc
cmpsb
lgs
mov
lret
and
in
movsb
icebp
loop
push
mov
xchg
push
mov
xchg
mov
and
cld
add
add
lahf
push
mov
repz
addb
mov
push
sbb
add
mov
std
stos
loope
outsb
cmc
dec
arpl
test
dec
ja
loope
call
mov
andb
clc
xchg
push
and
into
ss
pop
jo
gs
push
das
outsl
into
inc
xchg
sbb
pop
inc
push
push
push
or
decl
adc
push
mull
mov
inc
ljmp
add
test
ja
pavgb
in
xchg
pop
shrb
incl
call
jb
call
jl
push
imul
cmpsl
mov
xchg
adc
sti
add
jp
mov
ret
pop
das
or
sub
roll
mov
lcall
mov
out
jge
test
push
jle
aas
jge
mov
and
imul
jae
xchg
dec
or
rclb
popa
cmc
pop
xor
push
sti
shl
js
pop
daa
fwait
xchg
mov
xor
or
sarb
scas
jp
rcrl
and
fmul
out
push
ljmp
sub
lock
push
jg
gs
adc
sub
push
sbb
sti
imul
mov
int
les
test
pop
adc
cmpsb
leave
decb
test
repnz
int
jae
lret
lock
orl
ja
pop
xchg
mov
adc
loopne
sbbb
push
movsb
sub
adc
sbb
in
aam
les
adc
pop
std
push
sub
push
mov
lcall
inc
xor
sbb
je
pop
inc
mov
test
call
inc
mov
cwtl
test
push
pusha
push
pop
push
sub
sbb
push
inc
jecxz
dec
data16
sub
aas
add
xchg
mov
pop
shll
cmp
and
pop
jle
pop
cs
popl
mov
pop
ret
cltd
push
and
and
dec
pushf
out
pushf
loopne
sub
sbb
cmp
xor
sahf
mov
sbb
xor
sbb
aaa
sub
into
and
inc
cmp
lahf
adc
fsubp
cmp
daa
out
inc
mov
nop
pop
fwait
adc
test
je
daa
stos
mov
pushf
adc
sub
and
jo
push
add
inc
add
push
add
in
sbb
loop
jnp
int3
inc
insb
cmp
out
stos
test
popa
jae
dec
mov
cltd
ret
nop
add
push
out
mov
xchg
adc
jmp
je
popa
iret
cmp
scas
cmp
xor
cmp
std
movsb
xchg
jl
pop
xchg
push
mov
iret
hlt
pop
fucomp
sub
mov
add
jb
jge
fistpll
popf
repnz
add
inc
clc
movsb
adc
xchg
rorb
test
cltd
in
int
add
popa
ret
xchg
hlt
jl
jge
popf
jl
sub
movsb
and
mov
test
roll
stc
sub
xchg
scas
aam
xchg
add
dec
aas
mov
xchg
pop
fs
int
int3
xor
xor
insb
sub
std
gs
ret
jb
jns
sub
inc
clc
mov
movsl
xor
dec
sub
xor
les
shll
pop
pop
clc
subb
adc
cmpsl
dec
adcl
dec
add
push
xor
dec
mov
rcl
aas
mov
dec
ja
ds
arpl
js
aas
sbb
fsubl
add
push
pop
jl
inc
mov
dec
cs
push
xor
fbstp
sbb
aad
stc
incl
xor
les
inc
in
test
imul
jl
or
add
sub
xchg
jecxz
jle
jmp
add
inc
mov
clc
repnz
or
int
mov
dec
pop
sbb
test
loopne
fwait
les
stos
push
push
sbb
dec
scas
jo
ljmp
out
and
jne
mov
jle
in
dec
adc
pushf
sub
ja
mov
or
xchg
push
pop
push
lock
stos
mov
enter
and
nop
pop
dec
jne
dec
jo
setne
rcrl
popa
mov
or
movsl
imul
fwait
ja
fists
push
sub
mov
or
pop
cld
testl
sbb
das
aaa
mov
sub
mov
add
mov
lds
xor
and
pop
jb
in
mov
jbe
pop
xor
jge
mov
je
cs
ja
stos
movsb
inc
push
adc
stos
jl
sub
cld
push
shr
ret
ret
and
push
push
adc
ja
pop
mov
fdivp
nop
pop
enter
mov
mov
adc
add
loope
or
out
push
xor
inc
loop
sbb
and
pop
mov
ss
or
push
mov
and
inc
das
adc
mov
sti
add
ds
hlt
mov
out
shl
out
test
gs
jno
jmp
lods
fcmovnbe
dec
stos
mov
dec
loope
and
xchg
pop
jbe
mov
lds
and
aaa
add
loop
cmpsl
inc
repz
xchg
and
movsb
scas
mov
push
sbb
add
into
insl
push
jl
int3
je
adc
stos
imul
inc
fdiv
jp
or
jp
in
ds
fs
and
and
outsl
loope
xor
mov
and
jp
adc
pop
stos
repnz
push
in
sub
aas
shlb
pop
adc
subb
ret
mov
mov
ds
sub
nop
cmp
in
shll
adc
repnz
cmp
sbb
sub
mov
dec
xchg
mov
push
adc
pop
ficoms
xor
std
mov
in
jl
dec
shll
xor
loopne
insl
jb
cmp
inc
xchg
ss
outsl
mov
pop
cmp
add
push
lahf
icebp
pop
dec
popf
out
mov
sarb
sbb
out
fs
mov
incb
xchg
mov
adc
pop
and
lods
js
lds
mov
sbbb
add
in
add
lods
in
imul
cmpsl
cmpsl
into
add
js
xor
ds
and
jg
lods
jae
enter
dec
addr16
repz
jecxz
in
aaa
in
mov
popa
sahf
and
es
outsl
test
inc
stos
and
mov
pushf
out
ss
rcr
pop
dec
iret
pop
xchg
cld
lock
pop
insb
insb
mov
sbb
sbb
jg
mov
ljmp
int3
fldl
push
loopne
cltd
imul
cmp
dec
fsubrp
addr16
sbb
fcomi
lahf
and
loope
insb
outsl
aad
lahf
dec
adc
xchg
mov
add
nop
mov
inc
xchg
inc
test
fs
test
push
sbb
and
dec
jae
inc
inc
sub
stc
in
outsb
mov
ljmp
pushf
xchg
int3
lds
adc
xor
call
jbe
sbb
sbb
push
mov
leave
add
ljmp
add
fcomps
jmp
cmp
mull
adc
jo
cs
out
pop
sub
push
inc
cmp
fwait
ds
sahf
orps
or
aad
xchg
sarb
stc
jns
scas
xchg
adc
stc
jae
jbe
adc
and
out
cmpsb
pop
lea
mov
mov
cmp
pop
shl
mov
lds
mov
decb
mov
cmp
es
add
dec
repz
mov
sbb
adc
leave
xor
lahf
jae
scas
inc
enter
xchg
jo
sbb
add
int3
mov
pusha
cmp
fldenv
push
in
push
aam
lock
cmp
repnz
fcomi
popf
nop
insb
aaa
push
iret
ffree
pop
shrl
mov
lahf
mov
xor
push
shlb
fwait
es
pop
loope
xchg
std
mov
xchg
mov
xchg
jne
pop
mov
mov
inc
enter
fiaddl
inc
pusha
adc
mov
lret
hlt
xchg
insl
push
pcmpeqb
xor
loopne
jns
out
fwait
sahf
es
fcmovnb
lret
push
sbb
shlb
mov
cmp
cmpsb
and
call
push
dec
lret
les
cmp
bound
and
add
adc
xchg
push
push
mov
push
or
fildll
sbb
mov
xor
ret
cmpsb
cmp
push
or
cmp
aaa
dec
cwtl
insl
pop
lods
js
fwait
and
pop
sub
das
imul
addl
stc
sub
mov
into
or
aas
dec
icebp
jecxz
lods
dec
flds
inc
fmull
daa
mov
push
push
sub
adc
daa
mov
sti
mov
scas
lcall
scas
jge
mov
inc
pop
andb
mov
sub
xchg
clc
gs
push
pop
rorl
mov
int3
invd
test
push
xor
andl
pop
and
es
xchg
xor
repnz
mov
mov
cs
or
push
ja
aaa
pop
out
je
push
out
inc
aas
xor
mov
push
mov
push
mov
jg
inc
dec
inc
or
int3
fs
cmp
xchg
or
xchg
jae
scas
xchg
jecxz
stc
and
loop
mov
rorl
ljmp
orb
call
jl
lds
jmp
inc
je
add
scas
leave
jne
mov
or
ljmp
lods
sahf
mov
out
cmpsl
mov
xchg
push
cli
sub
jl
inc
mov
push
xchg
cli
mov
ret
inc
mov
cli
or
test
orb
mov
jnp
mov
invd
lret
mov
jns
fwait
insb
cmp
inc
add
sub
imul
mov
mov
xlat
fiadds
jmp
xchg
add
inc
xor
and
mov
pop
add
icebp
fmuls
xchg
push
into
dec
lods
or
mov
push
lahf
dec
pop
push
push
out
jp
cmp
cmp
mov
jbe
lds
dec
fs
in
sbb
and
shrb
sahf
jecxz
push
inc
cmpsb
movsb
adc
stos
jo
mov
into
jp
mov
lock
ja
jle
test
in
fwait
mov
lret
sbb
popf
xchg
fidivl
imul
mov
or
aaa
xchg
jno
movsl
fnstsw
int3
popa
inc
mov
push
lods
cmp
mov
imul
inc
loope
mov
fs
out
sub
cltd
xchg
adc
cli
push
add
insl
in
sbb
test
push
shl
ror
or
movsl
fdivrs
clc
test
cmc
inc
lahf
pop
gs
insb
or
std
ret
xor
mov
dec
cltd
sbb
adc
mov
cs
sbb
xchg
mov
fsubp
iret
mov
stos
out
test
stos
sub
sbb
call
sbb
push
ja
orl
push
outsb
sbb
in
jg
std
pop
sbb
lods
xor
outsl
jne
mov
iret
jge
into
jge
mov
dec
fldl
repnz
push
cltd
mov
cli
or
lea
test
addl
push
movsl
mov
testb
pushf
insb
out
add
jmp
mov
pushf
jge
repnz
outsl
outsl
out
ret
pusha
mov
and
adc
in
mov
in
das
or
push
sbb
xchg
stos
testb
push
push
sbb
je
sbb
xchg
and
push
xchg
xor
stos
mov
sub
shrl
mov
imul
pop
push
mov
jo
mov
aad
push
icebp
mov
adc
out
rclb
cmc
xchg
push
push
pushf
sbb
jle
fnstsw
xlat
cmpsl
adc
xchg
jae
xor
loopne
mov
hlt
aam
push
lea
fcoms
aas
ret
sahf
dec
ljmp
xlat
inc
fidivs
add
shll
xchg
or
enter
int3
xor
push
outsl
jmp
xchg
push
mov
out
in
mov
mov
pop
jp
mov
dec
xor
cs
add
ret
outsl
xchg
or
sbb
je
pop
jno
mov
out
dec
mov
inc
lock
jno
cmp
scas
cli
cs
aaa
mov
xor
repz
add
sub
insl
int
cltd
lar
push
push
out
bound
in
dec
sub
popa
dec
mov
es
pop
in
push
mov
mov
pop
lds
sbb
shll
push
popa
dec
inc
cs
mov
clc
mov
sahf
lret
fucomip
and
mov
sbb
icebp
test
jo
lret
cmp
dec
cmp
cmp
pushf
arpl
pop
into
jno
and
inc
imull
loop
adc
pop
push
xor
push
in
fs
mov
daa
xor
imul
adcb
mov
xchg
xchg
mov
sbb
mov
dec
fldt
mov
push
xor
insb
addr16
mov
jb
xchg
or
jecxz
jle
fnstcw
dec
jecxz
scas
clc
mov
idivl
pop
andl
ds
cmp
cmp
push
dec
pop
lahf
aaa
mov
mov
test
and
push
and
mov
sbb
rolb
sbb
push
mov
subb
fcomps
sbb
xor
xor
mov
mov
and
mov
xor
shll
mov
sarl
shlb
in
aam
jp
mov
push
in
pop
dec
loopne
out
sbb
ljmp
ror
test
lods
ret
sub
sub
or
out
xor
mov
stos
cmp
gs
pusha
jae
mov
push
xor
xchg
scas
xor
mov
icebp
sub
lret
imul
aaa
push
lock
pop
pop
loop
inc
aad
inc
cwtl
xchg
xorl
pushl
inc
dec
movsl
lds
loope
dec
dec
imul
test
adc
sbb
insl
dec
adc
xchg
push
int
add
loope
xchg
addr16
and
jbe
pop
fimull
jecxz
sar
mov
dec
sub
pop
clc
push
jb
jmp
aad
enter
push
mov
cli
mov
bound
stos
pop
repz
push
sbb
cmpb
dec
mov
cmp
dec
out
sub
xchg
push
xlat
das
xor
rorl
inc
mov
mov
out
xchg
push
outsl
dec
cmp
lahf
test
test
pop
inc
scas
out
imul
ffreep
jecxz
sbb
pop
fcmovu
sbb
shll
lds
lahf
xchg
mov
pop
sub
or
fstps
int3
jg
pop
hlt
cmp
lock
jo
bound
or
add
out
lahf
xchg
scas
fcmovne
out
or
sub
scas
ja
dec
loop
push
mov
mov
sbb
sahf
jg
ss
out
scas
xchg
pop
dec
adc
dec
cmpsl
hlt
outsl
fbstp
xor
xor
ljmp
sbb
mov
sbb
inc
cli
sub
movsl
mov
adc
jae
pop
cmp
aad
insl
lret
inc
adc
lret
pop
xchg
test
jmp
ss
mov
inc
not
push
inc
loopne
das
es
inc
add
sbb
cmp
adc
popa
sub
jb
repz
pop
fisttps
inc
adc
mov
push
mov
movsl
sti
int
pop
xchg
nop
in
xor
and
adc
repnz
xor
xchg
in
dec
repnz
pop
jnp
enter
sub
aad
leave
pop
out
gs
lea
test
das
mov
or
stc
cli
int
pushf
aad
pop
movl
test
jmp
mov
mov
in
xchg
shrb
scas
lock
mov
pushf
frstor
ret
mov
fisttpl
adc
cwtl
pop
jge
divl
xor
cmp
aaa
pop
push
movsb
sti
jb
push
add
push
out
jl
pop
stos
pusha
xor
mov
in
sbb
inc
cmp
or
sub
sbb
and
adc
fsubp
push
xor
dec
rcrl
in
pop
ss
xor
testb
mov
pop
call
pop
sbbb
sub
mov
push
movsl
or
add
test
mov
push
inc
scas
add
stos
ret
or
sar
and
or
cmpsb
fimuls
movsb
pushf
add
pop
adc
fadds
jo
mov
add
mov
pusha
push
ficompl
jl
inc
dec
int3
lcall
out
dec
popf
cwtl
cmp
push
push
sub
mov
fwait
ss
test
rcr
fsubs
cwtl
push
ja
pop
sbb
xlat
repz
rclb
ljmp
mov
ret
add
inc
gs
fnsave
test
push
cmp
shrb
popa
pushf
lahf
leave
aaa
cmpsb
in
fiadds
or
cs
xor
loope
in
stc
add
xchg
in
movsl
dec
out
aaa
mov
subl
clc
inc
das
cmpsb
adc
mov
push
out
lret
adc
jp
arpl
push
jb
ljmp
jg
jnp
pop
cltd
dec
filds
or
jns
mov
in
test
cmc
in
jae
stos
jl
or
mov
push
push
into
in
lret
lock
sub
ret
or
push
push
jmp
mov
lock
imul
push
shrb
arpl
jmp
out
push
jo
or
jno
adc
int
test
cmp
mov
mov
jmp
pop
xlat
jle
or
mov
or
lcall
push
add
push
cs
lea
xlat
add
mov
or
loop
or
pop
ret
inc
fs
xchg
neg
aaa
stos
add
arpl
and
xchg
pop
fcmovbe
jns
pop
jns
ret
mov
das
insb
xchg
js
xorl
mov
dec
cmp
mov
cmp
and
mov
stos
dec
jge
aad
out
ror
das
repnz
xor
dec
into
jl
imul
sub
push
mov
xor
jmp
cli
les
mov
mov
pop
lds
jge
fdivrs
xchg
lods
faddl
pop
scas
mov
in
xchg
and
cmpsl
mov
in
stos
jl
cmp
repnz
icebp
je
popf
or
xchg
xchg
add
fidivrs
arpl
or
hlt
jno
mov
inc
mov
jmp
xor
cli
cmp
test
cmp
push
mov
pop
mov
push
imul
lret
idiv
sub
jo,pt
scas
imul
push
aaa
imul
cs
jp
adc
push
pop
loopne
test
imul
pop
adc
pop
dec
mov
das
inc
dec
cmp
xor
scas
jecxz
jae
mov
adc
xchg
mov
jb
lock
dec
ja
push
add
add
iret
or
cmp
and
ret
mov
push
lods
pop
scas
dec
mov
pop
xlat
cmpsl
bound
sbb
and
pop
and
push
push
js
rcrl
add
mov
add
push
movsl
mov
xchg
movsb
xor
xchg
adc
xchg
add
stos
and
xchg
cmp
cld
jle
mov
mov
add
std
xchg
iret
mov
xchg
mov
std
leave
out
shlb
mov
dec
jl
out
dec
sbb
jge
call
jl
xor
into
mov
fnstcw
ret
push
jb
cwtl
mov
int
or
jnp
mov
dec
dec
push
fstps
and
mov
repz
mov
add
inc
jp
das
cmp
inc
in
xor
cmpsl
out
mov
daa
mov
xchg
cmp
notl
or
test
out
mov
push
aas
test
nop
cmp
ffree
push
fcoml
fisttps
mov
jge
lret
clc
stc
pop
bound
xchg
or
adc
push
mov
inc
in
mov
sub
xor
movsb
sbb
mulb
repz
scas
and
and
xchg
mov
bound
enter
lock
adc
in
and
lea
push
in
sbb
pop
out
out
mov
jne
xchg
cmp
sbb
and
inc
mov
mov
inc
les
xchg
lods
test
add
cltd
ret
inc
loope
leave
sub
ljmp
aam
or
push
in
test
or
cwtl
adc
pop
push
das
dec
scas
hlt
sub
sbb
int
mov
sti
push
fdivp
and
fwait
xlat
clc
aas
ja
ret
fucomi
aaa
jno
lahf
push
inc
fiaddl
pop
outsb
xchg
mov
sub
jmp
sub
push
je
jo
cmpsl
outsl
lret
int3
push
outsb
fisubs
jne
das
rorl
call
xchg
mov
pop
push
insb
dec
lret
sbb
pop
mov
lock
dec
and
pushf
sbb
fisubrl
adc
icebp
adc
lock
shrl
insb
lcall
repz
pop
adc
mov
hlt
xchg
push
fwait
enter
cli
and
negl
jno
cs
adc
push
dec
je
ret
sub
push
sub
cld
out
lods
dec
test
jp
lds
in
jecxz
rorl
xor
nop
add
out
je
sbb
jno
mov
jb
call
ja
mul
sti
sub
jecxz
daa
sub
int3
cld
movsb
aas
inc
popf
xlat
aam
lock
push
adc
incl
push
in
sbb
inc
jo
fdivr
sarl
js
jne
pop
outsl
xor
inc
mov
aaa
aaa
mov
push
sbb
mov
idivb
sub
sub
mov
stos
adc
jns
or
push
mov
mov
shlb
insb
jge
inc
mov
mov
lret
sub
je
mull
mov
std
pop
mov
pop
lcall
xchg
shlb
xor
dec
testl
jb
leave
cmp
data16
dec
push
ffreep
mov
lds
movsb
xor
std
push
xor
into
xchg
sbb
xor
push
xchg
nop
int
xchg
mov
push
stc
fmull
sarb
sbb
jl
mov
mov
mov
jno
lret
xor
pop
jge
popf
ret
add
xor
aam
cmp
popa
xor
jp
pop
pop
frstor
fcomps
orl
jmp
and
lds
mov
fiadds
or
daa
push
or
sbb
fisttps
xchg
cmp
jnp
inc
fld
leave
mov
std
iret
fs
adc
aas
sbb
bound
dec
dec
adc
in
fildll
scas
and
mov
mov
dec
add
int
arpl
add
inc
inc
mov
jmp
aam
ret
xor
scas
es
loop
repz
dec
or
dec
out
jo
fs
jl
mov
push
fistps
rolb
adc
jo
daa
push
sub
mov
pop
cmc
xor
lods
out
mov
fs
test
lcall
mov
int3
push
sahf
outsl
sbbl
out
iret
out
ret
fdivrl
xor
fnstenv
add
mov
mov
push
jge
sub
sbb
int3
pop
jecxz
int
leave
arpl
jae
test
xchg
or
push
mov
stc
mov
xor
dec
mov
add
adc
jecxz
push
cli
in
cld
pop
stos
mov
xor
je
and
lret
std
lret
dec
fsts
dec
pop
sarl
enter
add
lret
fistps
pop
outsl
xlat
cmpsl
movsl
push
xor
leave
in
fsubl
cmc
jge
jns
es
aas
rcrl
cmpsl
sub
gs
dec
pop
xor
jnp
fstps
push
lret
adc
inc
cmp
mov
inc
mov
daa
mov
dec
adc
iret
mov
pushf
cmpsb
and
jg
test
pop
cmpsb
inc
jne
adc
adc
stos
ds
cmp
pop
mov
dec
pop
cmpsb
xchg
cmc
push
dec
and
iret
fcmovnu
stc
fisttps
movsb
dec
fstp
and
loopne
clc
test
or
jbe
mov
lock
mov
mov
inc
sbb
fildl
inc
mov
mov
mov
mov
movsl
xchg
xor
mov
sub
aam
cs
in
or
scas
ret
dec
mov
out
out
sbb
aas
inc
pop
repz
fistl
and
dec
cwtl
xor
xor
shl
jno
test
pop
inc
js
mov
repz
cli
hlt
mov
ror
cmpsb
dec
lret
nop
popa
mov
pusha
in
xor
sbb
clc
cli
loop
cmpsl
push
mov
mov
dec
xlat
pop
pop
leave
xor
pop
out
loopne
pop
in
pop
out
or
and
cmp
jno
out
ret
popa
cmp
jmp
pop
test
xchg
rclb
cmp
lahf
into
shll
inc
leave
sub
cltd
ljmp
pop
jnp
sub
sbb
lret
dec
sub
add
test
scas
les
mov
jmp
push
adc
sbb
sbb
scas
fisttps
adc
test
popf
hlt
and
or
pop
xlat
popa
lret
out
push
lcall
mov
out
sbb
jle
test
add
call
pop
test
sbb
leave
add
stos
inc
int
pushf
jno
mov
cld
xchg
dec
sbb
mov
sahf
jge
fwait
pushf
in
mov
into
fisubrs
cltd
jnp
mov
repz
mov
mov
cmp
gs
out
jl,pt
inc
dec
or
sahf
outsl
inc
and
jbe
mov
mov
das
push
scas
mov
repnz
sub
xor
pop
pusha
je
clc
push
xchg
out
jp
mov
call
lea
jb
mov
scas
insb
sbb
rcll
push
xor
repz
mov
sub
xor
pop
loopne
mov
pop
dec
int
sti
push
and
push
xor
push
pop
cmp
into
scas
aaa
and
xor
inc
ljmp
imul
mov
ja
orl
dec
push
xchg
jnp
push
push
cwtl
inc
idivl
adc
out
or
dec
fldt
out
xchg
dec
mov
iret
cld
fsts
dec
jl
lods
cltd
enter
neg
insb
adc
adc
scas
dec
sub
mov
imul
aad
pushf
int3
movsb
or
lret
fstpt
adc
dec
pop
mov
and
fstps
and
inc
loope
cmp
mov
pop
mov
loop
mov
adc
adc
mov
gs
push
movl
imulb
test
leave
mov
push
xor
int3
cmp
ret
fwait
insb
rorb
nop
idivb
fimuls
mov
mov
push
add
mov
xchg
ret
push
mov
int3
ja
sbb
les
xor
addr16
out
pop
or
push
jo
mov
daa
lods
ljmp
mov
or
pop
and
aas
adc
popa
subl
daa
cmp
mov
mov
dec
je
lods
xor
xchg
lret
sahf
cs
loope
mov
idivb
jb
insl
pop
fsubs
sub
into
jle
mov
call
pop
shr
and
sbb
sub
cmpsw
repnz
outsl
outsb
test
cmp
cwtl
jo
mov
and
test
lcall
repnz
adc
dec
aad
int3
into
inc
arpl
mov
addr16
and
rsqrtps
outsb
adc
push
faddp
mov
mov
cmp
dec
push
sbb
pop
xchg
pop
add
mov
pop
dec
in
std
add
in
jle
repnz
add
roll
fsubs
test
addb
pop
arpl
jl
subb
sahf
and
or
push
jmp
push
imul
jmp
stos
xor
shlb
pusha
xchg
leave
or
int
mov
test
aaa
pop
cmpsb
shlb
sbb
fimuls
mov
popa
mov
test
or
xor
xchg
sbbl
and
mov
sbb
shll
test
leave
loope
test
sbb
bound
shrb
std
sbb
pop
rcr
pop
cld
xchg
xchg
cmp
incb
lock
imul
or
xchg
and
jb
aam
sub
mov
mov
sarb
andb
repnz
push
jo
mov
jno
jecxz
fs
shll
cmp
and
cmpsl
add
mov
lock
in
and
jno
add
addr16
addl
std
popa
push
dec
insl
add
in
call
icebp
cmp
adcb
int3
test
jge
dec
in
xchg
cmc
ss
rorb
test
scas
mov
or
push
lods
je
lcall
pop
fwait
push
xchg
loop
sub
mov
mov
mov
fidivl
addl
lods
cmpl
out
testb
dec
mov
int3
push
in
xor
jg
lds
jae
outsl
dec
sarl
and
mov
adcb
mov
stc
inc
addl
repz
lock
hlt
and
enter
pause
jno
mov
fmull
stos
sub
pop
icebp
mov
inc
pop
pop
add
sbb
cmp
sub
sbb
cli
jb
sub
aad
pop
in
add
pop
add
adc
outsl
scas
mov
jge
movsl
push
popf
test
adc
jno
iret
movsl
xor
add
call
shll
push
mov
jge
xchg
mov
xchg
ds
add
dec
sarl
pop
xchg
flds
push
mov
push
push
pop
mov
xchg
dec
jmp
or
dec
jno
jnp
xor
jmp
repz
or
pop
in
loopne,pt
push
sbb
sub
rcrb
sub
add
cmpsl
push
xchg
xor
mov
decb
mov
ja
or
mov
mov
hlt
and
push
add
test
repnz
cmpsl
scas
js
jp
jge
pop
dec
ja
cmp
push
iret
daa
xchg
mov
ret
inc
jge
sbb
neg
testl
aad
in
mov
inc
out
divb
in
sub
fsubrl
das
sub
and
xchg
adc
loope
sarl
jmp
cmpsl
jb
push
xchg
movsb
addr16
daa
cli
and
jmp
stos
jne
xor
bound
daa
in
xchg
das
aas
push
ss
nop
imul
cltd
sbb
jg
mov
or
pushf
sub
or
loopne
in
ficomps
mov
push
pushf
push
cmp
push
mov
ljmp
insb
mov
jmp
mov
scas
lahf
fsubrs
aaa
xchg
pop
or
loopne
jecxz
mov
ret
lods
dec
dec
jno
pop
adc
js
in
pop
enter
imul
mov
roll
fucompp
and
adc
loope
cmp
cwtl
mulb
jne
ret
loop
cmpsl
inc
and
sar
mov
ror
lods
scas
push
sbb
pop
sarb
or
hlt
xchg
jmp
div
lret
inc
push
mov
mov
inc
sub
or
jnp
ds
cli
out
in
ljmp
les
decb
pop
into
inc
aam
cmp
pop
in
cltd
sbb
jmp
xorl
push
push
clc
and
jg
pop
push
lods
xchg
mov
mov
dec
or
popa
push
add
rcrl
mov
pop
dec
jbe
aaa
orb
or
test
es
mov
pushf
in
xor
xchg
adc
lock
sahf
or
lret
sarl
sti
pop
out
das
loopne
popa
int
shll
sbb
pop
jno
jle
call
push
push
mov
aad
inc
out
loopne
dec
in
mov
movsl
daa
addr16
mov
add
insl
adc
xor
scas
sti
jns
es
fimull
orl
or
rorl
push
mov
adc
in
pop
push
pop
pmullw
add
sbb
cwtl
mov
aam
aam
ljmp
xchg
or
pusha
adc
icebp
gs
xor
adc
subl
mov
jmp
lcall
repnz
push
and
sbb
adc
pop
dec
pop
bound
push
inc
pusha
mov
cmpsb
xchg
outsb
jg
xor
in
daa
dec
ret
movl
fcom
sbb
pop
mov
int
loopne
add
stos
adc
insb
push
sbb
stc
addr16
pop
push
sub
leave
arpl
push
ret
enter
xor
and
xor
mov
push
in
dec
jno
addl
lret
popf
jl
xor
addr16
jge
sbb
sbb
push
inc
mov
xchg
decb
jne
ss
movaps
push
push
loope
imul
xchg
mov
sar
xor
mov
mov
testl
sub
lds
sbb
xchg
call
push
fwait
sti
iret
fwait
out
jnp
push
cs
fwait
xchg
outsl
xchg
out
cmc
pushf
arpl
les
and
cltd
jb
xchg
xor
hlt
test
pop
bound
xor
cli
jo
sub
lret
sarl
iret
scas
stos
inc
insb
out
sbb
adc
xchg
shlb
inc
lcall
ret
xchg
ljmp
dec
vaddsubps
mov
js
mov
inc
dec
pop
clc
xchg
mov
or
das
js
sbb
jg
cltd
xor
icebp
add
pop
mov
inc
add
lea
mov
orl
jecxz
lret
jns
call
dec
ja
jo
mov
push
push
sbb
mov
push
pop
or
in
and
in
push
mov
ljmp
stos
mov
stos
push
loop,pt
cmp
lea
push
call
mov
and
and
adc
rorb
mov
sub
sbb
or
sub
aam
sub
icebp
mov
xor
pop
pop
sub
jmp
scas
jg
loope
cmp
mov
add
cmp
pusha
das
stc
rclb
and
push
jmp
lea
inc
sbb
adc
push
in
lea
mov
imul
idivb
jo
mov
adc
out
addr16
inc
icebp
cmc
adc
repnz
mov
shr
cli
mov
enter
icebp
sar
mov
arpl
mov
sub
jmp
scas
lret
into
pop
es
test
movsb
mov
xchg
mov
pop
flds
cwtl
imul
test
int
xchg
cli
xor
sbb
lcall
pop
cs
es
and
cmp
ffree
adc
mov
dec
out
in
out
inc
arpl
fildll
imul
and
inc
setp
mov
imul
mov
add
pusha
mov
xchg
sub
ret
inc
sbb
leave
mov
ret
shrb
insb
jg
cs
and
mov
add
inc
dec
sbbl
or
in
push
cmpb
fdivl
adc
ret
jg
test
pushf
lea
int3
shl
mov
mov
add
lret
in
xor
call
sub
test
arpl
jmp
mov
ficompl
lret
pop
loop
stos
lods
add
loop
mov
adc
je
popa
lret
insl
mov
adc
icebp
cli
jmp
mov
outsb
aaa
test
int3
in
fmull
bound
adc
or
bound
jno
mov
lahf
movsb
push
pop
push
push
xor
push
and
jno
push
cmp
pop
arpl
dec
bound
movsb
or
xchg
xor
sbb
adc
xchg
inc
and
push
shrb
dec
mov
xchg
das
jmp
je
fs
xor
push
pusha
sbb
jecxz
or
daa
daa
pop
xchg
mov
jo
je
or
dec
and
mov
mov
in
outsl
ret
out
ret
mov
or
inc
mov
xor
subb
or
ljmp
sub
repnz
mov
xchg
cmp
pop
mov
in
jnp
enter
xchg
mov
cltd
xor
fidivs
loopne
ret
loope
fsubr
mov
mov
mov
outsl
arpl
sbb
push
in
push
mov
push
repz
movsl
ret
test
push
adc
jns
sbb
or
or
popf
inc
and
dec
int
rcrb
int
sub
rcll
lret
xchg
and
rorl
sarb
mov
imulb
sub
sub
call
mov
or
push
movsl
shll
add
shlb
pop
mov
nop
inc
lret
pop
push
adc
cmp
cmc
stos
int3
ret
sbb
sub
das
mov
xor
ficompl
mov
inc
sbb
inc
sbb
cwtl
hlt
inc
out
rclb
les
fidivrs
adc
sarl
mov
cmpsl
lahf
or
xchg
scas
inc
inc
es
outsl
xor
out
lods
xchg
fyl2xp1
aam
leave
lea
pop
sub
in
xchg
sbb
xor
fsubl
imul
fisubl
add
add
mov
ret
cmp
mov
hlt
stos
or
fcompl
add
adc
push
xor
mov
inc
sbb
insl
adc
mov
and
jl
test
mov
es
dec
lret
clc
in
es
cmpsb
sub
or
mov
outsl
cmp
in
inc
popa
xchg
add
xchg
mov
jg
test
rclb
add
jno
push
sub
scas
shll
je
pop
mov
dec
dec
pop
divb
adc
inc
xchg
fwait
sbb
lret
inc
mov
ret
jg
cmp
cmp
add
loopne
lods
cltd
mov
mov
inc
in
loope
mov
mov
test
fsubl
xchg
inc
out
add
add
ljmp
jae
mov
and
lea
pushf
cltd
xor
inc
imul
or
sbb
dec
lret
jns
pop
or
out
inc
das
add
jecxz
lods
cmpsb
sbb
hlt
iret
pushf
inc
push
mov
xor
std
popa
dec
arpl
jl
insb
adc
imul
add
mov
cmp
dec
out
mov
das
push
call
mov
mov
jb
lret
cli
or
outsb
xchg
std
iret
imulb
inc
dec
lahf
icebp
in
xor
pop
mov
jmp
mov
movsl
aam
jecxz
dec
popl
dec
rclb
mov
push
leave
xor
repnz
jl
jge
or
mov
push
jae
lahf
jae,pn
pop
jb
lcall
das
out
sti
mov
loop
dec
das
std
sbbl
rolb
ret
fcompl
outsb
cli
cmp
fadds
cwtl
ja
mov
lea
sbb
call
mov
add
add
mov
int3
loope
divb
jmp
in
call
pop
jb
xorl
add
pop
push
lds
cmp
aaa
cltd
in
cmp
dec
cmp
sub
test
xchg
mov
lods
xchg
jmp
xchg
in
repz
dec
dec
jge
ljmp
cmp
push
or
sahf
push
stos
mov
shll
xchg
xor
cld
fldt
out
or
scas
jmp
xchg
xor
ret
mov
add
dec
or
mov
xchg
mov
icebp
les
fisubrl
stos
dec
mulps
dec
cmc
lods
xchg
push
xchg
and
mov
bound
lea
adc
sbb
fwait
into
scas
inc
jae
psllq
in
mov
fldlg2
imulb
xor
mov
fsubl
les
enter
cmp
add
aam
sbbb
adc
xchg
adc
pop
xchg
mov
and
cli
lret
mov
inc
cltd
sub
sahf
cli
sbb
outsb
cli
clc
jo
cld
sbb
xor
insl
data16
stc
fsubr
pop
shrb
cmp
pop
jp
popa
scas
pop
out
xchg
imul
dec
cmp
pop
loope
scas
mov
int
pushl
into
outsl
out
aas
sahf
cs
leave
mov
mov
mov
pop
push
gs
shll
insl
sub
and
pop
dec
push
popf
fnsave
call
xchg
pop
jecxz
sti
std
mov
sbb
mov
mov
out
test
jl
aas
mov
xor
adc
and
sub
loop
data16
mov
xchg
adc
mov
sbb
pop
gs
add
in
or
repnz
or
es
rcll
cli
int
ret
push
pop
leave
shlb
and
sub
jg
mov
fldenv
inc
out
jo
mov
daa
cmpl
fwait
add
sarl
jo
call
dec
pop
cmp
sub
sub
stos
sbb
sub
outsl
int3
icebp
movb
and
and
push
lock
mov
mov
mov
lcall
push
fldt
pop
fs
dec
in
sub
decl
mov
cld
iret
pop
cmp
loop
add
sub
push
in
vmaxss
xor
jp,pt
sub
jbe
xchg
xchg
je
xorl
sub
cmc
adc
pop
mov
cmp
rcll
in
fists
adc
pushf
inc
int3
sti
jmp
movsl
not
add
dec
std
mov
xor
xor
notb
adc
mov
xchg
mov
or
enter
mov
in
adc
add
es
pop
xor
sbb
pusha
aam
pop
inc
loopne
pop
out
jno
mov
std
mov
lret
fisubl
sar
loope
fdivrl
rol
les
cmp
test
sarb
or
cmp
add
push
xor
lods
ja
xor
inc
sub
mov
mov
or
leave
stos
push
nop
pushf
push
rcrl
ret
cmc
lock
or
lock
loope
pop
in
add
gs
pop
imul
pop
les
adc
rorb
daa
lret
test
std
jb
sbb
imul
fs
cmp
adc
insb
jle
push
mov
jl
cmpsb
cltd
inc
mov
es
mov
xchg
cmp
mov
push
mov
pop
mov
dec
cmc
adc
add
dec
rcl
mov
incb
lret
mov
test
test
test
loopne
movsl
rcr
daa
lods
jmp
jae
outsl
faddl
mov
lahf
movsl
cmp
in
into
out
cmp
pop
cld
xor
mov
and
iret
nop
adc
jno
pop
idiv
cmpsl
sbb
xchg
stc
shlb
push
push
imul
in
lods
sahf
sub
lcall
jmp
sbb
mov
std
loopne
in
xchg
pop
test
lea
sub
sbb
or
push
int3
and
out
adc
mov
icebp
mov
push
bound
jecxz
ffree
inc
test
movsl
inc
shrl
les
and
movq
aad
mov
dec
fsubl
pop
insb
add
cmp
loopne
in
cmp
push
jb
andps
mov
inc
mov
push
fucom
imul
push
jb
lea
xchg
xchg
pop
and
mov
es
pusha
js
sbb
test
pop
repnz
fmuls
or
data16
out
cmp
jb
pop
out
mov
aas
mov
mov
or
jecxz
push
hlt
xlat
lcall
mov
insl
pop
pop
xchg
xchg
xchg
jl
cmp
sbb
icebp
push
movsl
loope
inc
sbb
shrl
xor
mulps
in
jb
sbb
mov
in
pop
das
jae
mov
pusha
jo
mov
sbb
add
sti
cld
adc
movsl
nop
ss
xor
and
dec
adc
loopne
out
in
pushl
push
dec
xor
inc
and
cmp
in
jns
imul
cmp
iret
mov
and
pop
xor
xchg
sub
outsb
sub
xor
test
cli
jg
mov
add
mov
dec
inc
jecxz
push
psubsb
not
rol
dec
lahf
js
imul
cmpsl
cmp
insb
leave
dec
test
mov
sti
xlat
aas
push
das
pop
in
in
lea
push
jle
xchg
iret
mov
mov
sub
lret
mov
test
adc
fwait
inc
and
fistpll
lock
jp
shlb
mov
movsl
add
xchg
call
and
mov
bound
cmp
xchg
aam
xchg
bound
jle
sub
inc
jne
mov
xchg
add
push
jmp
test
inc
add
jp
and
xor
fiadds
fdivrl
ds
ret
sbb
addr16
push
insl
push
push
xor
xchg
orb
in
sti
pop
xchg
hlt
or
sub
fs
jg
pusha
jne
pop
mov
push
in
cwtl
loope
mov
out
sbb
and
loopne
cmp
xor
lcall
or
das
arpl
push
dec
lahf
dec
test
inc
clc
dec
cli
cmpsb
aad
add
mov
sbb
out
mov
jg
mov
inc
xchg
fwait
xchg
or
jg,pt
test
andb
add
sbb
xchg
fistpl
loopne
repnz
push
cmp
pop
mov
movsb
mov
in
sti
xchg
mov
jp
mov
lods
push
push
sar
mov
pop
and
mov
mov
xchg
scas
or
std
and
xor
iret
adcl
pop
jmp
mov
cld
mov
and
mov
pop
loope
clc
lret
int
popa
enter
mov
into
add
xor
jnp
jmp
incb
movsl
jecxz
rorb
sub
loopne
ret
in
adc
jno
pusha
mov
mov
jns
sbb
pop
sbb
jno
inc
pop
jo
sbb
mov
cltd
mov
xlat
jbe
lea
sbb
mov
xor
jle
outsb
sub
cmp
push
mov
icebp
mov
cmp
dec
loope
je
testb
icebp
outsl
cmp
iret
sbb
xchg
mov
dec
das
mov
dec
mov
mov
pop
and
mov
icebp
mov
inc
inc
lret
es
or
sub
pushf
bound
pop
icebp
jg
in
add
xchg
out
xor
cld
mov
rcr
lahf
dec
insl
xor
jecxz
data16
mov
fwait
call
int3
fsubrs
and
ss
sbb
dec
insb
rorl
add
sub
dec
jp
pop
test
mov
loopne
xchg
push
mov
jecxz
push
stos
test
xchg
mov
lcall
sub
out
ret
xchg
inc
adc
and
popa
cmp
cmpsl
add
mov
jns
je
dec
xor
jo,pn
outsl
xor
add
mov
pop
and
lcall
icebp
mov
sarl
lret
ss
testl
fsts
ljmp
not
xor
outsb
push
xchg
jg
sar
imul
xor
dec
sub
xor
out
movsb
jb
ror
repz
bound
sti
mov
repz
je
push
jg
pop
loopne
dec
lds
arpl
test
cld
push
cld
pop
push
jae
testl
in
inc
shll
adc
fidivrl
test
jg
rorl
decl
hlt
rclb
lcall
jle
ljmp
or
test
lods
shl
xchg
cmp
jbe
cmp
out
icebp
xor
or
push
negl
imul
or
dec
cmp
repz
fwait
out
dec
sub
jb
sub
push
jmp
punpckhbw
pop
or
aas
or
sub
rclb
mov
js
frstor
cld
fwait
movb
jbe
push
in
fxrstor
rorl
mov
sahf
xor
clc
cmpsl
and
adc
jae
fcoml
push
stc
xor
push
repnz
inc
mov
stos
in
icebp
in
and
cltd
xchg
sbb
push
cmp
push
dec
xchg
push
xchg
cmpsb
fimuls
or
pushf
jle
adc
aad
pop
call
add
rcl
loope
ret
imul
out
xchg
ficompl
inc
pop
sbb
imul
mov
adc
arpl
shll
add
inc
mov
inc
or
dec
adc
sub
cmp
mov
js
xor
sub
aas
inc
outsb
mov
lret
out
lahf
ret
data16
cmp
sub
movsl
sbb
imul
add
in
mov
cwtl
dec
test
shll
lods
roll
mov
cmp
test
nop
mov
test
cmpsl
xlat
push
pop
fwait
mov
xor
mov
mov
testb
mov
pushf
das
mov
mov
scas
daa
mov
in
push
fsubrl
cli
pop
repz
add
and
addb
aaa
mov
leave
ja
jle
or
add
xor
aas
ret
in
pop
jmp
mov
add
outsb
jmp
jle
dec
sbbb
xchg
stos
out
in
out
out
push
sbb
in
dec
cmp
mov
fs
sub
mov
jle
popf
mov
xor
js
push
mov
loop
cmp
mov
xchg
pop
sub
popf
repz
sbb
frstor
pop
cmpsl
xor
aas
icebp
popf
add
add
mov
js
and
inc
cmpsl
push
cld
loop
ret
hlt
push
ljmp
subb
js
outsl
cld
add
frstor
ret
ja
out
push
gs
pop
je
mov
ja
pop
mov
jb
pusha
out
into
idivl
into
mov
pop
pop
andl
pop
and
or
cltd
int3
xchg
stos
loope
jno
cmpsb
adc
adc
dec
xor
fidivrs
pop
fucom
mov
xor
sub
push
int3
mov
xchg
mov
cmp
in
cmpsb
push
stc
daa
xchg
xor
jo
fadds
es
fnstenv
fsubrp
cmpsl
and
pop
test
cmp
outsb
dec
xchg
and
sbb
inc
or
rorb
push
insl
jb
movsb
cmp
hlt
loope
dec
inc
aas
pop
int3
and
popf
cmp
dec
xchg
or
xor
hlt
dec
jb
mov
dec
frstor
jnp
loope
popa
in
enter
lret
mov
imulb
jae
xor
sbb
ljmp
and
cmpsb
loopne
iret
add
aad
out
xchg
adc
out
and
inc
xor
adc
out
lcall
into
stos
cmpsb
mov
cmc
addb
movsb
popf
sbb
adc
adc
iret
test
arpl
stos
cmp
movsl
mov
lahf
fdivr
loop
pop
add
add
dec
rclb
push
sbb
pop
daa
ds
lea
adc
inc
mov
jo
jae
push
insb
outsb
sbb
js
mov
push
push
dec
rolb
fiaddl
xor
ret
mov
leave
stc
stos
fdiv
and
xchg
pop
jp
cmp
outsl
call
in
pop
cld
mov
sbb
pop
sbb
or
int3
in
inc
cmp
in
sub
dec
mov
mov
mov
cli
je
jl
or
dec
aam
sbb
ror
inc
sub
xor
lret
sbb
std
popa
sub
mov
jnp
xlat
test
das
fwait
mov
testl
inc
mov
cmp
imul
sbb
jle
add
clc
aam
mov
mov
mov
mov
pop
loopne
push
sbb
or
and
and
enter
fsts
es
add
push
sbb
popa
dec
fstps
dec
jne
std
test
gs
dec
dec
adc
xchg
mov
pop
cmc
or
iret
fisubrl
jp
mov
mov
and
and
mov
pop
in
sub
or
jne
arpl
or
push
cmp
lret
iret
mov
pop
mov
jne
jae
insl
jecxz
in
pop
out
inc
sub
repnz
push
sahf
mov
test
or
adc
scas
dec
xor
aaa
jp
testl
enter
ja
mov
mov
push
lcall
roll
add
int3
cltd
or
cmp
jo
mov
sub
dec
andb
arpl
pop
jbe
imul
iret
sub
hlt
cld
and
mov
jo
jae
xchg
xchg
xchg
inc
mov
xchg
and
gs
sbb
arpl
jg
sti
outsl
fcompl
xchg
out
iret
cwtl
cwtl
xlat
pop
iret
mov
inc
mov
mov
lods
sbb
lret
pop
dec
xchg
movd
and
outsl
mov
adc
loopne
mov
popa
js
ljmp
push
out
pop
test
adc
or
adc
push
dec
out
addr16
xlat
mov
push
shrb
push
inc
sub
loope
loop
add
mov
jmp
or
fs
sbb
movsl
das
jl
stos
ss
sahf
add
jecxz
jg
inc
stos
test
add
cld
dec
inc
add
in
pop
fldcw
fists
enter
xor
js
and
jge
imulb
xor
popf
pop
pop
push
repz
adc
std
inc
add
or
movsb
lods
shll
mov
jmp
mov
movsl
mov
addr16
mov
xchg
mov
cltd
push
cmp
jg
or
dec
cld
push
pop
mov
jo
mov
out
mov
mov
out
dec
out
xor
pextrw
or
adc
lds
popf
pop
mov
and
mov
loopne
jbe
movsl
cmp
hlt
insl
or
xor
test
jno
jbe
push
mov
clc
xchg
leave
cli
test
sub
in
sbb
pop
mov
push
push
xor
clc
mov
cmp
mov
add
fwait
in
fcomip
cmp
or
faddp
inc
jge
mov
push
shl
inc
jl
enter
xor
in
xchg
inc
int
jg
jnp
divl
xchg
xor
or
push
adc
add
xchg
or
pusha
mov
sub
xor
cs
xchg
scas
gs
pop
fdiv
adc
daa
sub
jmp
repz
fistpl
inc
cld
fwait
push
aaa
rcll
add
and
push
cltd
iret
add
fyl2x
loop
cmp
cld
jbe
dec
and
xorb
insl
cltd
lods
popf
jo
mov
mov
cli
gs
fisttpll
in
aas
hlt
sub
sub
dec
sbb
insb
popl
cmp
je
adcl
jno
cmp
stc
insb
aas
xchg
lds
mov
and
sub
out
shl
jno
jb
mov
pop
or
push
das
add
mov
call
mov
loopne
mulb
xor
mov
jnp
lods
jns
mov
inc
mov
into
push
xor
into
push
xlat
mov
into
std
out
je
xor
mov
mov
sbb
pusha
push
sar
in
scas
ffreep
je
push
stos
imul
std
xchg
daa
inc
push
dec
ret
imull
jnp
popf
xor
mov
xlat
dec
rcr
mov
adc
push
push
mov
mov
adc
out
cmpsl
cmp
dec
mov
shrl
xchg
pop
add
ficoml
jb
aad
jecxz
xchg
xor
jp
xchg
push
imul
jg
jmp
roll
jle
hlt
int
in
sbb
repnz
test
adc
cmp
notb
ds
insb
iret
inc
lret
and
pop
adc
int3
jmp
dec
mov
sub
nop
adc
mov
push
jb
xchg
push
or
xchg
int
lret
push
jo
xchg
and
or
addr16
mov
xor
inc
lea
cwtl
push
ret
fucomp
stos
mov
jno
mov
xchg
push
out
loop
data16
pop
arpl
outsb
sub
lret
xchg
fstps
loop
leave
jl
push
imul
repnz
jp
pop
adc
stos
pop
push
aas
ss
in
cli
xchg
cvtdq2ps
faddl
stos
sbb
pop
xor
cmp
dec
lret
sbb
jmp
mov
inc
mov
add
imul
adc
xchg
dec
dec
cmpsl
sbb
and
xlat
ljmp
mov
cmp
js
xchg
loop
xchg
imul
sbb
cmp
aaa
mov
ljmp
idivl
lock
sbb
add
sarl
js
and
dec
or
pop
pushf
push
push
inc
hlt
ds
push
push
pop
pusha
mov
mov
lcall
push
adc
in
fists
sbb
movsb
xchg
mov
add
lds
das
adc
cmpl
mov
xchg
jp
fisttpll
movsb
imul
xor
xor
push
call
int
pop
or
sub
cmc
dec
popf
xlat
sbb
jp
fcmovb
xchg
clc
jmp
pop
cmpsb
pushf
test
mov
and
sbb
sbb
out
pop
mov
inc
or
mov
fimuls
nop
pushl
popf
dec
filds
inc
pushl
jnp
ja
xchg
inc
insb
xor
out
lcall
rorb
in
subb
dec
lret
adc
xchg
pop
test
divl
sub
cld
mov
xor
cvtps2pi
shlb
mov
add
js
dec
xor
xor
ja
shrb
or
ss
sbb
or
int
outsb
sbb
mov
jle
scas
mov
imul
sbb
addr16
xchg
neg
insb
inc
jae
sarb
out
in
dec
jnp
fmul
mov
jno
sbbb
dec
outsb
inc
cmp
shl
test
sbb
mov
adc
xor
out
movsb
xchg
dec
fbstp
push
and
lods
push
inc
jne
stos
adc
and
jecxz
sbb
enter
xorb
cmp
mov
std
pop
mov
xor
shrb
and
dec
jp
push
add
cwtl
mov
out
jbe
xchg
or
sub
out
and
and
adc
sub
and
lahf
mov
out
xor
xorb
xchg
xchg
inc
insl
xchg
xor
ja
lret
das
lret
xor
pop
inc
in
xor
in
jo
sub
mov
sbb
push
rcrl
mov
test
add
jp
and
sbb
les
pop
sbb
mov
scas
repz
fiadds
sub
sahf
push
mov
and
jns
in
jge
arpl
loop
pushf
inc
inc
or
cmp
cli
outsb
sub
out
mov
xchg
jecxz
add
insb
int3
inc
dec
lock
cmp
das
add
gs
cld
out
or
repz
jmp
cld
xchg
jp
push
mov
add
shrb
cmpsb
movsl
mov
mov
xchg
iret
roll
lahf
jbe
dec
xchg
leave
sbb
inc
mov
push
aaa
imul
shll
push
jg
arpl
in
fwait
loopne
loopne
shlb
cmc
mov
add
leave
data16
cwtl
jmp
repnz
scas
mov
lea
clc
pop
or
push
sbb
mov
movsl
xor
sbb
xor
sti
jb
sbb
lds
aas
loope
loopne
xor
sub
shll
jmp
and
lahf
or
loopne
cwtl
jl
mov
cmc
jg
movsb
mov
and
mov
and
fmull
mov
jge
int3
adc
xlat
pusha
pop
add
int3
jg
xor
imul
icebp
push
mov
push
adc
pushf
ret
adc
cli
cs
xchg
int3
mov
sbb
call
fwait
and
mov
pop
daa
out
mov
rcrl
nop
pusha
jno
jecxz
mov
imul
jmp
movsl
mov
popf
aad
icebp
lret
push
xchg
xor
push
mov
sub
ljmp
pusha
xchg
lret
addr16
mov
outsb
sub
out
imul
mov
push
or
sti
repnz
subl
cmc
sub
sub
outsb
mov
or
popa
push
jp
das
ljmp
lea
inc
cmp
mov
jns
outsl
out
repz
aaa
mov
scas
les
stos
shl
shrb
pop
cmp
pushf
add
dec
jae
jae
sahf
jp
push
fmulp
inc
cmpsl
sbb
in
fs
push
mov
xor
sbb
sarb
xchg
cmp
mov
mov
inc
cmp
fwait
insb
iret
leave
mov
test
sbbl
in
sbb
add
cmpsl
dec
push
or
dec
or
mov
aad
imul
xor
pop
mov
mov
xchg
frstor
xchg
pop
popf
cwtl
xor
rcr
testl
lahf
fst
push
dec
cs
call
clc
mov
lock
shll
clc
mov
es
popf
inc
outsl
mov
fistl
outsb
push
fwait
sti
dec
adc
pop
leave
adc
icebp
stos
push
inc
adc
pop
mov
pop
cmc
sub
idiv
sar
add
int3
loop
add
mov
mov
outsl
xor
cwtl
adc
mov
je
sub
leave
subb
pushl
aam
ret
stc
sbb
xor
es
orb
xor
rcrl
stos
mov
lods
loope
inc
xchg
leave
fcmovb
or
jae
test
mov
mov
cltd
pop
xchg
outsl
movsb
jnp
push
aaa
fldcw
adc
loopne
lock
in
jnp
rorl
sarb
xor
fisubs
imul
pop
adc
mov
push
xorl
adc
call
sbb
call
pop
pusha
jne
jnp
test
dec
scas
sub
js
sbb
movsb
out
and
aas
sub
cltd
xchg
push
out
addb
lods
sarb
xor
push
mov
rorl
cmp
lods
inc
rol
xor
or
xor
test
rorl
sub
jne
mov
sbb
and
jns
add
push
call
in
shll
inc
imul
shrb
test
stc
cwtl
jb
popf
add
add
das
mov
jge
dec
add
decb
adc
sub
rcrl
pop
mov
and
mov
pop
jmp
sub
lock
into
outsb
in
sbbl
mov
cmp
jne
mov
mov
inc
cmp
mov
sahf
sahf
cld
mov
push
xchg
cmp
inc
jp
lods
jnp
mov
fsubl
sub
sahf
ret
jmp
and
add
movsl
mov
lahf
mov
cmp
mov
mov
xor
xchg
call
push
hlt
xchg
inc
adc
sub
jnp
das
mov
fistl
ret
or
mov
add
mov
in
ffree
mov
mov
dec
in
pop
pop
stc
ja
and
icebp
lds
mov
sbb
cmpsl
lcall
push
jg
div
add
jle
push
and
shrl
ret
in
fwait
mov
es
jmp
mov
cltd
add
mov
and
negb
pop
cmpsl
subb
or
divl
into
inc
outsl
sbb
mov
add
es
mov
xor
in
mov
repz
fists
mov
outsb
mov
repnz
adc
cli
out
pop
lock
pop
jp
xor
test
add
outsb
cltd
pop
and
sar
pop
arpl
lods
xorl
cmp
enter
xor
cmp
sar
or
inc
dec
adc
push
into
push
insl
sbb
sahf
push
cltd
rcr
xchg
shll
add
pop
jb
fiadds
mov
push
std
insb
test
add
repz
xchg
cmpsl
xchg
cmpsl
test
pop
jns
repz
sbb
inc
fisubl
cmpsb
sub
jae
pop
mov
mov
inc
iret
test
ret
bound
fsubrs
iret
pop
movsb
cmpsb
es
push
or
in
lods
jae
xor
lods
or
cmp
push
dec
dec
das
xchg
mov
push
lea
dec
inc
pop
in
les
pusha
jb
das
repz
xlat
cmpb
loope
add
fsubrs
xor
sbb
fsubrp
cmpsb
mov
mov
push
insl
loopne
in
std
ret
out
movsb
loopne
xchg
rclb
loop
insl
pop
aas
stos
or
add
mov
pop
test
ds
dec
or
mov
dec
scas
iret
out
rolb
cli
sub
in
xchg
aam
sub
cmp
fisttpll
cltd
xor
pop
add
divl
add
xchg
mov
inc
xor
mov
out
sbb
scas
xor
dec
clc
cmp
push
jge
jecxz
mov
test
je
mov
xchg
in
test
sub
push
data16
fstl
sbbb
aad
push
push
sbb
push
adcb
add
movsl
enter
cmpsl
xchg
xorl
mov
cmp
nop
cs
inc
loope
xor
mov
into
mov
repnz
shlb
pop
cmpsb
fwait
xchg
mov
repnz
icebp
imul
jmp
shr
icebp
test
push
xchg
std
ror
cltd
xor
add
mov
in
fbld
and
sti
pop
call
dec
mov
sti
jo
out
cli
mov
dec
dec
rolb
repnz
mov
push
and
pop
adc
inc
push
in
jecxz
and
adc
stc
xchg
aam
mov
dec
mov
push
imul
jle
fdivl
pop
xchg
xor
in
cwtl
sbb
pop
icebp
fadds
mov
inc
sub
push
ds
dec
mov
and
nop
stos
push
cmp
add
cld
cld
add
mov
mov
jne
outsl
pop
inc
xor
xchg
cmpsl
stos
mov
pop
xor
in
fs
push
jg
mov
cwtl
mov
adc
dec
dec
dec
aad
sahf
adc
rcr
lahf
cli
push
movsb
and
jae
das
pop
cwtl
inc
add
js
or
jnp
sub
push
repz
lret
fs
sti
movsb
cmp
insl
imul
xchg
add
mov
stos
outsl
xchg
adc
xor
aaa
ret
sbbl
ss
cmc
aam
mov
imul
daa
lea
mov
dec
push
pop
test
lods
lods
xchg
lods
mov
aaa
sub
es
int3
xchg
idiv
adc
sub
int3
ljmp
or
mov
popf
cmp
xor
iret
in
jp
pushl
jmp
adc
jb
and
push
xchg
aas
lret
push
pop
or
push
and
sbb
cmp
or
les
pop
adc
pop
sti
adc
adc
sbb
jecxz
lret
xchg
dec
push
sbb
lea
ret
jl
ss
mov
mov
int
cmpsl
mov
cmpsb
mov
out
push
lahf
xchg
mov
cmp
and
mov
das
sbb
sub
out
fildll
or
sub
jl
leave
daa
mov
sti
mov
es
repz
pop
mov
movsl
sub
inc
mov
inc
lahf
or
and
adc
cmp
fsubs
xor
rolb
aas
sti
xchg
mov
pop
or
or
popfw
stc
shll
int3
scas
in
rclb
sahf
rorb
pop
cmp
push
pop
loope
sbb
jmp
mov
cld
xor
xor
lods
es
push
mov
cmp
push
shlb
std
jl
jp
add
xchg
repz
adc
lock
mov
lods
sbb
sub
sarl
mov
ret
scas
addb
mulb
aaa
mov
mov
sbb
fcomi
jp
lret
xor
int
dec
push
mov
mov
cmp
or
aas
pop
mov
xchg
scas
ret
sbb
icebp
sbb
into
cmc
push
add
subb
lret
hlt
pop
xchg
sub
inc
cmpl
mov
xchg
loop
sarb
mov
test
mov
xor
int
test
data16
sbbb
test
sub
cmp
les
cmp
and
push
sti
sbb
cmc
ret
fstpl
mov
popa
mov
jmp
xor
out
mov
dec
dec
sub
pop
bound
pop
pop
xchg
xchg
lret
dec
dec
xchg
sbb
push
lods
data16
xchg
lods
pop
mov
stc
ljmp
jbe
sub
sbb
popf
and
mov
pop
pop
adc
xor
cmc
fbld
push
dec
js
mov
mov
pop
mov
add
ljmp
add
test
xchg
cwtl
in
daa
mov
push
movsb
sub
stos
pop
outsb
lret
lahf
push
sub
cwtl
mov
insl
bound
inc
fcmovnb
jge
add
push
bound
sub
rcr
out
xchg
xchg
mov
xor
fsubrl
mov
in
in
or
xor
out
imulb
push
inc
addb
shlb
or
ss
mov
ljmp
das
mov
test
mov
pop
repnz
mov
rclb
cli
fwait
or
enter
mov
testl
xor
mov
add
cmpb
fcomps
cmp
popf
dec
jg
add
fbld
js
inc
push
mov
scas
and
imul
push
dec
test
ret
cltd
test
dec
adc
dec
or
daa
cmp
test
jp,pt
in
int3
outsb
mov
shl
daa
mov
inc
sub
mov
inc
insl
fistps
aam
nop
pop
ss
stos
or
mov
fdivrl
sub
cmp
mov
sub
jne
sbb
inc
js
jno
and
or
decb
pop
nopl
mov
inc
les
stos
lcall
sbb
cli
xlat
lret
mov
pop
xor
cmp
dec
mov
out
and
fists
dec
add
dec
cld
add
mov
inc
ds
dec
std
and
in
cmp
xlat
xchg
ljmp
scas
adc
push
movsb
xor
xchg
add
or
sbb
ret
je
leave
add
jg
iret
movsl
imul
stc
jmp
fimull
jo
mov
mov
shlb
cmp
jle
sarb
mov
jns
imul
adc
xor
dec
dec
fistpll
fidivrl
call
ja
repz
or
push
xor
mov
push
cmp
insl
sbb
enter
imul
xor
pop
lods
or
ret
adc
in
lock
imul
mov
pop
fcmovnb
popf
call
mov
adcl
jo
xor
daa
and
xor
xchg
nop
sbb
xchg
jl
movsb
pusha
jnp
or
daa
mov
mov
mov
inc
cmpsl
lcall
xor
je
mov
lahf
hlt
mov
inc
lock
jge
and
and
xchg
xchg
cli
adc
fsincos
aad
icebp
or
add
mov
cmovno
jg
aas
outsl
sub
dec
bound
je
out
add
inc
jmp
push
add
xchg
add
lds
insb
pushl
fs
ds
loope
lcall
subb
add
push
dec
xchg
jb
es
test
mov
shl
xchg
sub
test
pop
jmp
push
pop
clc
push
xorl
inc
not
cmp
pusha
push
pusha
ret
push
lock
shlb
jno
cwtl
popf
add
rol
inc
sub
push
lock
push
sub
mov
int
jae
sub
jnp
call
jg
sbb
cmova
hlt
adc
sbb
or
les
fmuls
push
sbb
add
jo
lret
testl
mov
loopne
repnz
sbb
push
pop
fimuls
pop
pop
add
subb
fnstenv
or
imulb
mov
adc
mov
mov
js
cmp
xor
mov
fidivrs
adc
lea
add
jg
xor
pushf
pop
lcall
negb
out
pop
push
js
mov
add
aad
cmp
dec
mov
cmp
mov
lahf
pop
addr16
dec
pop
daa
add
jbe
push
or
sbb
out
inc
inc
idivb
cmp
jo
fs
add
mov
jno
stc
pop
gs
fnstsw
sub
cmpsl
orl
mov
mov
lods
aas
xor
aam
les
int
cld
and
shlb
push
add
add
pop
sub
push
push
mov
pop
dec
sbb
or
jb
mov
mov
inc
jg
xor
sti
pop
mov
adc
test
inc
pop
je
outsl
lds
and
inc
out
add
adc
imul
jl
cmp
mov
jo
insl
scas
add
dec
test
or
xchg
pop
fsubrs
into
int
sub
jno
fwait
sbb
sub
mov
sub
jmp
jns
jp
jns
enter
cld
inc
inc
lcall
aas
das
enter
adc
mov
mov
mov
xchg
xor
fwait
aaa
xchg
ffree
js
adc
jb
pop
mov
add
pop
lcall
loopne
ret
dec
imul
or
je
sbb
mov
cltd
jne
pop
jle
jo
fists
pop
mov
push
sbb
or
push
in
lods
ja
cs
fsubr
jo
or
mov
jae
add
xchg
shrb
fwait
sarb
mov
outsl
popa
insl
and
cmp
mov
rcrb
push
fdivrp
cmc
push
xor
cld
aad
mov
or
movsl
or
out
and
sub
ss
pop
das
in
add
popa
pop
and
jge
mov
out
jbe
rclb
pusha
sub
les
dec
mov
data16
dec
and
lcall
test
mov
pop
lods
jb
imul
andl
cmp
inc
mov
inc
dec
pop
lds
jo
popa
sbb
inc
gs
out
add
sub
or
sub
sbb
push
cmp
mov
fnstenv
cs
flds
mov
ror
daa
lret
pop
cltd
mov
or
out
cmp
pop
xchg
inc
xor
mov
dec
lock
int
repnz
mov
add
cltd
jb
pushf
icebp
arpl
mov
jb
jbe
pushf
int3
pop
bound
ret
or
aad
xchg
fcoml
fsub
inc
out
shll
add
fisubl
movsl
mov
adc
pusha
mov
jmp
and
dec
and
pop
jne
and
sahf
call
clc
dec
bound
jno
enter
ja
popf
cwtl
push
cmp
outsl
mov
popa
cmp
adc
pusha
loopne
or
dec
ljmp
cmpsl
repnz
clc
repnz
arpl
add
and
sbb
lret
das
pop
mov
incb
add
cltd
and
mov
and
test
popf
call
xor
add
inc
and
xorl
test
push
icebp
jns
add
jbe
movsl
ja
xchg
dec
aaa
lret
push
dec
cld
aaa
xor
iret
sub
add
jno
dec
repz
fisttps
ljmp
es
dec
dec
test
sbb
lods
stos
shrb
loope
ja
cmc
movb
fstpl
cmp
mov
movsl
or
sbb
inc
imul
jne
sbbb
mov
jb
jmp
test
imulb
mov
mov
add
adc
cld
ja
sarl
enter
cmc
je
or
xor
cmp
fstpl
loope
lods
les
mov
fndisi(8087
mov
lds
into
mov
popf
mov
test
adc
push
out
mov
fs
int
xchg
sbb
push
cmpsl
mov
das
push
jge
clc
pop
out
loopne
push
pop
push
fucompp
adc
inc
scas
mov
or
lcall
andl
xor
add
das
repz
jb
stos
pop
pop
jo
pusha
add
sbb
pop
loop
xor
ret
outsl
inc
jmp
pop
pop
jl
pop
sub
mov
inc
lret
inc
mov
lret
dec
les
pushf
mov
je
xor
pop
loopne
sbb
ret
or
das
mov
adc
les
clc
and
movsb
sbb
jmp
pop
xchg
mov
jp
inc
inc
or
cld
lret
push
aas
jle
leavew
sub
adc
or
adc
aad
xchg
aaa
int
ja
and
daa
les
jbe
push
jne
je
push
pusha
cmpsb
sbb
xor
mov
inc
dec
and
push
lcall
icebp
in
test
mov
xor
cmc
popaw
sahf
ret
movsl
mov
fwait
cmp
dec
and
out
xchg
enter
sub
into
movsb
insl
jne
adc
pop
out
stos
adc
or
xchg
mov
shrb
dec
xchg
icebp
jnp
sub
xor
mov
cli
xchg
jge
movl
mov
aaa
adc
sub
mov
ljmp
cmp
leave
std
inc
mov
jb
lret
lods
pop
fstps
jno
test
rorb
iret
adcb
fists
inc
and
pop
jnp
cmp
xchg
push
lods
pop
sub
dec
movsb
hlt
aad
cmp
push
xchg
jnp
inc
popa
adc
ja
xor
jp
xor
ja
into
icebp
cs
cmp
push
in
jbe
inc
dec
mov
or
aam
inc
repz
adc
mov
mov
xor
test
jge
fdivr
add
cli
add
scas
test
push
jne
fisttpl
add
pop
les
aad
ljmp
aam
test
lods
notl
mov
repz
popa
in
push
pusha
shll
iret
mov
xchg
loopne
dec
dec
pushf
ljmp
fidivs
jbe
dec
out
jecxz
stc
pusha
and
jmp
push
xchg
insb
push
jb
pop
push
addb
inc
and
pop
imul
and
es
xor
pop
mov
stc
xor
mov
sbb
mov
fsubrs
stc
pop
faddl
mov
jl
jecxz
cmp
push
repnz
repz
aad
cs
std
fidivs
icebp
fdivrs
stc
repnz
sub
cmp
jecxz
aam
test
sbb
xlat
add
cmp
rdtsc
jg
popa
cmp
lods
jnp
xchg
test
movsb
movl
shlb
aaa
pop
xchg
push
pop
out
movsb
call
mov
stos
xor
iret
dec
ret
rorl
cmp
clc
or
icebp
je
dec
fwait
and
das
mov
filds
push
xor
popa
add
iret
outsl
pop
and
scas
test
mov
js
cli
mov
xchg
and
daa
sub
int3
inc
xlat
xchg
push
in
mov
mov
push
xor
pop
in
jg
cmpsl
inc
pop
dec
testl
mov
ret
arpl
mov
jo
adc
shrl
or
iret
sub
sbb
cltd
jmp
popa
mov
mov
xchg
sub
dec
mov
sbb
hlt
test
adc
scas
add
pop
jmp
int3
jp
pop
inc
popa
call
push
ret
cmp
ret
pop
xorl
pop
stos
push
jg
mov
inc
les
inc
jae
inc
jo
iret
xor
fistl
push
sbb
rolb
cmp
mov
lret
clc
push
ret
mov
call
mov
jmp
icebp
add
lcall
or
aam
mov
jbe,pt
pushf
fistl
fldenv
lods
push
ss
mov
sub
add
inc
jns
pop
dec
psrld
xchg
push
adc
loopne
jmp
addr16
mov
mov
jnp
jmp
stos
fucomp
pop
and
xchg
jo
pop
pop
xchg
xchg
fdivl
popf
dec
movsl
push
mov
sti
add
dec
or
sahf
lock
mov
out
xor
fnstenv
inc
bnd
dec
adc
jns
xchg
into
std
into
in
pusha
dec
js
stos
sub
ja
adc
das
cmp
test
xor
cltd
push
xchg
pop
or
push
call
mov
jecxz
std
adc
iret
cmp
or
scas
pop
mov
jbe
fld1
or
sub
mov
cmc
addb
int3
in
push
and
or
leave
dec
loop
out
or
inc
gs
or
pop
stos
mov
adc
mov
divb
mov
popa
fistps
jo
subl
repz
and
test
sti
push
cmp
les
loope
pop
xchg
lret
jo
sub
pop
mov
testb
test
stos
push
sub
add
cld
pop
pop
or
fcmovnb
adc
lods
pop
adc
inc
pushf
jb
adc
or
jg
inc
leave
xchg
mov
jl
loopne
lret
in
dec
fistps
xor
add
cmp
into
movsb
mov
pop
push
adc
adc
in
lret
int
out
insb
xlat
cmp
and
in
notb
lods
mov
jmp
jl
cld
int
bound
stos
clc
jmp
push
imul
test
and
sub
sub
iret
outsb
jge
adc
xor
in
cltd
bound
xchg
lock
int
aam
scas
loopne
cs
cmp
stc
xor
in
push
ja
mov
lret
shld
inc
mov
dec
arpl
scas
mov
out
add
push
mov
xchg
sub
adc
xchg
fwait
push
xchg
jl
aas
test
mov
and
vcvtss2si
sahf
and
and
xchg
aas
stos
cmpsl
sbb
inc
lds
jb
xor
cmp
addr16
fnsave
jns
lret
pusha
push
pop
negb
in
pusha
sbb
push
popf
mov
nop
pop
out
in
adc
push
xchg
movsb
mov
xchg
sbb
dec
xchg
ja
insb
xlat
or
sub
xchg
out
call
jo
shr
or
shr
dec
rorl
sbb
hlt
hlt
jnp
dec
push
push
shll
pop
imul
adc
mov
adc
mov
in
or
pop
jo
xchg
push
roll
out
or
mov
test
andl
jl
xlat
aaa
jle
dec
int3
mov
add
adc
inc
hlt
pop
cmp
andb
ret
add
outsl
mov
icebp
sub
and
and
repnz
imul
std
and
jg
jnp
add
movsl
push
sbb
fadds
and
jno
nop
and
out
xor
scas
scas
std
xchg
adc
adc
push
jmp
repz
arpl
push
psubsw
jns
inc
popf
insl
out
movsb
inc
movsl
les
lahf
xor
lods
cmpsb
mov
pop
ret
or
ret
inc
in
mov
inc
mov
loope
pop
xlat
lods
out
jl
aaa
adc
fs
adc
imul
test
dec
cmpsl
adc
xor
in
aaa
into
dec
inc
dec
xchg
leave
incb
xchg
sahf
xchg
lods
mov
push
xchg
arpl
shll
mov
stos
inc
pop
inc
jge
imul
aam
repz
mov
outsl
xchg
pusha
fisttpll
ffree
jb
mov
shl
lods
sub
xchg
addr16
movsl
dec
mov
sub
int
mov
cli
bound
out
fcmovbe
mov
mov
fwait
sbb
and
repnz
sti
hlt
adc
pop
push
sbb
imul
aad
inc
jns
inc
adc
scas
pop
adc
out
jmp
add
mov
or
xchg
mov
jne
popa
data16
inc
subb
pop
xor
fldt
andb
loopne
rorb
pop
jle
pop
bound
insb
mov
fsub
jp
daa
xchg
mov
ss
popa
inc
cld
xchg
jno
sub
mov
jb
mov
xchg
and
mov
int3
lahf
mov
xor
hlt
dec
pop
stc
mov
push
mov
pop
jecxz
dec
cld
addr16
lods
ficoml
jae
iret
sbb
sahf
pop
cld
pusha
mov
mov
test
cmp
sbb
dec
cmp
cli
scas
and
inc
test
xor
nop
aas
xor
inc
mov
add
xchg
gs
or
dec
js
inc
mov
loopne
xchg
jge
push
sub
push
ret
sub
fwait
xchg
mov
jge
pop
add
add
faddl
lock
push
xor
fwait
cltd
dec
jmp
xchg
cmp
inc
enter
popf
or
mov
and
insl
pop
inc
mov
cmp
popf
inc
sbb
aad
dec
xchg
divb
push
clc
loope
test
pusha
movsl
mov
jbe
xor
cmp
add
test
or
cmp
notb
mov
xor
pop
or
xor
push
xor
or
xchg
bound
jb
xchg
and
je
and
sbb
mov
aam
lds
cmpsb
mov
and
out
rol
shlb
bound
xchg
pop
repz
push
dec
addb
pop
shrb
jmp
in
int
shlb
mov
add
xchg
cmp
push
ds
inc
xchg
and
fisubrs
into
dec
mov
inc
outsl
push
and
xor
mov
inc
jg
movsb
std
cmpsb
ret
gs
jge
xchg
imul
aas
pop
pop
dec
int3
leave
jg
scas
dec
mov
sub
or
sub
sbb
int3
fistpl
or
inc
lcall
mov
cmp
add
adc
jne
inc
aas
aam
sub
in
mov
mov
arpl
lret
jmp
adc
int3
inc
xor
mov
imull
push
mov
ja
and
jl
stos
xchg
insb
popf
cmp
xchg
or
inc
jae
inc
insb
mov
ljmp
mov
mov
jae
mov
push
mov
js
mov
std
jle
mov
mov
xor
lahf
notl
jne
xchg
cmp
mov
mov
pop
jl
xchg
xor
jo
jl
dec
lret
lcall
out
rol
loopne
inc
pop
mov
test
ljmp
cli
fiaddl
fdivr
stos
cld
sub
shrl
in
cld
push
mov
aas
int3
xor
hlt
mov
jo
sbb
loop
outsl
add
lock
dec
daa
cmpsb
jbe
das
ja
add
cltd
xor
dec
pop
sbb
pop
add
fwait
iret
jae
jbe
and
stos
mov
xchg
inc
sub
xchg
repz
fsubs
fs
push
mov
pop
pushf
dec
jne
ret
dec
dec
in
test
pop
sub
mov
sahf
push
adc
sahf
popf
fildl
mov
push
shl
das
xor
aas
push
stos
sbb
fcmove
sub
add
addr16
sub
out
add
repz
sahf
dec
jae
pop
xchg
xor
mov
sbb
leave
test
pop
cmc
cld
lds
mov
arpl
mov
cli
mov
cmp
pop
cld
mov
test
je
addl
inc
or
lock
adc
sub
es
mov
xchg
scas
mov
in
mov
rcrl
subb
xchg
test
mov
fnstenv
cld
test
subl
cmp
sub
and
jnp
push
shll
loope
add
jno
lock
and
inc
push
hlt
fldl
roll
push
stc
dec
mov
cwtl
movsb
inc
jecxz
jne
ds
adc
cmp
inc
aaa
ret
out
test
mov
std
pop
dec
adc
shlb
add
inc
out
jp
aas
loope
loop
sbb
popf
dec
fimull
sbb
mov
xchg
nop
jmp
pushf
inc
add
sbb
xor
stc
dec
adc
add
push
xchg
cmp
movsl
aaa
movsl
adc
and
cmc
xchg
mov
lods
dec
iret
icebp
mov
aad
repz
cli
sbb
xchg
stc
lock
mov
or
je
adc
loopne
cs
jmp
scas
fwait
push
imull
push
add
lret
cmp
daa
mov
cmc
sub
push
lret
pop
and
cmp
sub
bound
std
add
mov
sti
adc
cltd
dec
sub
aad
xor
mov
ja
lock
lahf
ja
loope
sbb
mov
pusha
scas
mov
rolw
jmp
fwait
push
in
sbb
pxor
push
aam
stos
push
sahf
mov
dec
xchg
cwtl
aas
out
cmp
sti
je
add
xchg
pop
push
data16
outsl
jno
mov
push
sub
sbb
outsl
in
push
cltd
jecxz
out
jmp
gs
mov
sub
and
mov
sbb
xchg
dec
add
mov
notb
lods
adc
lea
or
push
pop
dec
adc
mov
lret
lret
repz
jns
mov
test
cmpl
dec
pand
pop
mov
sub
jbe
int3
aaa
pusha
pop
cmp
pop
add
xor
stos
leave
popf
out
int3
popf
test
ret
push
outsl
pop
sbb
out
imul
aad
sub
into
stc
push
sbb
lahf
pop
add
mov
icebp
inc
scas
push
xor
sub
push
xchg
loope
add
mov
adc
cli
inc
loopne
adc
mov
push
dec
xchg
xor
adc
addr16
fs
aad
sub
sti
cmp
pop
les
das
test
pop
out
jae
je
xor
mov
dec
mov
outsb
scas
pop
pop
push
cmp
mov
ret
sub
jnp
adc
jl
cmc
loopne
dec
push
sbb
jb
push
das
adc
es
mov
xchg
mov
jns
mov
push
int3
test
mov
or
mov
stos
pop
mov
sbb
push
sbb
lock
lods
in
movsl
dec
xchg
push
jle
scas
jo
sbbb
jnp
sahf
in
in
addr16
mov
jno
sbb
push
call
insl
sarl
lods
jge
dec
fistps
les
loope
fidivrs
or
pop
clc
lahf
jns
and
in
popa
lret
in
cmp
lds
jge
aaa
stos
into
sbb
jo
fiadds
inc
daa
cli
fwait
mov
jmp
cmc
mov
cmp
mov
arpl
jge
xor
mov
mov
pop
add
data16
cmpsl
mov
test
adc
aad
xor
scas
mov
sub
in
jl
push
movsb
or
in
ljmp
xchg
jno
repnz
dec
xchg
in
dec
or
mov
pop
es
cmp
xchg
scas
or
xchg
sub
and
jp
sahf
mov
mov
scas
stos
push
in
das
push
xor
ljmp
enter
mov
inc
and
mov
mov
pop
mov
mov
ja
outsb
ret
adc
sbb
mov
xlat
mov
sub
std
add
std
push
sbb
pop
mov
sbb
outsb
andb
inc
sti
adc
lret
into
sub
mov
test
lcall
push
in
loope
popf
ljmp
or
fnstsw
iret
jae
bound
into
mov
insl
sbb
inc
pop
add
and
cwtl
fdivrs
sbb
inc
pop
or
dec
mov
into
sub
mov
sarb
data16
es
loopne
push
sbb
lcall
mov
nop
push
dec
insb
sbb
cwtl
and
jb
in
stc
cltd
lds
cmp
aaa
call
cmc
add
insl
out
arpl
mov
xchg
repz
or
orb
xchg
repz
dec
pop
push
push
cmp
mov
sahf
stc
cmp
mov
hlt
addb
adc
bound
pop
cmp
sbb
mov
or
lret
divb
sub
xchg
leave
aaa
lods
xor
or
xlat
push
pop
imul
mov
jg
shlb
jmp
inc
inc
jecxz
lahf
cwtl
arpl
cmp
aam
dec
nop
pop
mov
push
movswl
jle
clc
pusha
imul
mov
dec
repz
mov
mov
fs
and
test
pop
and
inc
push
and
inc
xor
xor
dec
sbb
inc
pop
cmc
or
rcll
loopne
das
adc
nop
dec
mov
adc
cmpb
iret
testb
add
mov
mov
pop
outsb
add
jb
sbb
repnz
ja
push
je
sub
pop
inc
cwtl
pop
lods
adc
out
add
mov
jecxz
dec
jecxz
fnsave
or
push
cmpsl
mov
or
adcb
fisttpl
repnz
mov
cmp
sbb
and
sbb
ss
pop
dec
xor
loop
dec
insl
sub
stc
lret
test
mov
xchg
outsb
mov
xor
sbb
and
mov
int3
and
fisubs
push
repz
imul
adc
push
lods
xlat
out
or
cmp
xchg
into
popa
mov
sarl
or
scas
addr16
push
dec
dec
jge
aad
push
addr16
test
fdivrs
das
dec
loopne
jp
push
aas
mov
cmpsl
popf
jmp
pop
pop
pop
push
mov
cmp
lock
popf
loope
push
cwtl
int3
imul
add
jb
xor
shr
cli
or
adc
xlat
lcall
dec
xchg
adc
pushf
test
xchg
mov
stos
mov
mov
fadds
mov
fcomp
ljmp
test
or
add
jle
call
xor
dec
pop
test
iret
jno
popf
adc
movsb
ja
or
ja
xor
outsb
test
ljmp
test
mov
add
repz
movsb
sbb
cltd
inc
fisubrl
add
shlb
jmp
mov
or
outsb
testb
mov
movsl
pop
fcomp
inc
insl
add
dec
xlat
xchg
mov
mov
sbb
inc
sbb
pop
mov
dec
testl
push
push
sub
xchg
shrl
mov
push
lcall
mov
sahf
mov
add
test
sbbb
scas
aad
cmpsb
push
mov
push
frndint
mov
inc
andl
ss
popl
cs
xchg
mov
popf
std
xchg
pop
loopne
sub
mov
cmp
mov
fmul
mov
push
lcall
push
jo
mov
imulb
lock
clc
jp
xchg
clc
adc
nop
stos
pop
inc
mov
addl
imul
pop
hlt
push
ss
jno
rcrb
jecxz
sub
icebp
pop
cmp
aaa
xchg
das
incl
or
pushf
inc
fcmove
aas
push
hlt
outsb
enter
pushf
test
and
and
dec
lea
xchg
jge
or
mov
mov
jo
lods
jnp
ret
xor
cmpsb
push
out
imull
or
pop
mov
pusha
pop
jle
push
rorb
lods
dec
aam
icebp
sbb
insl
push
jg
push
mov
aad
or
add
push
xchg
lea
fisttpl
inc
testb
fcomps
pushf
xchg
cmpsl
sub
pop
pop
cmc
sar
aad
mov
sahf
lret
xchg
subb
push
push
or
xor
aaa
push
push
xorl
fcomps
bound
sub
lcall
mov
int
mov
aas
test
and
xchg
scas
pushf
pusha
loopne
loop
loope
aaa
adc
jecxz
repnz
ds
or
and
sub
dec
jnp
jg
jb
mov
fistps
jb
sbb
andl
lret
xchg
adc
bound
xor
adc
inc
fisubs
int3
testb
inc
mov
aaa
fwait
aas
rol
cmpsl
xchg
imul
test
push
add
mov
jmp
or
sahf
push
aaa
pop
outsb
jl
dec
andl
dec
hlt
in
dec
repnz
popf
jl
call
popa
mov
sarb
nop
mov
je,pn
aas
cmp
in
and
xchg
jne
sbb
movsl
idiv
xchg
mov
mov
fstps
mov
sbb
push
xor
pop
in
cmp
aam
mov
pop
cmpsb
popa
stc
cmp
repnz
add
scas
pop
mov
jb
and
rep
push
dec
decb
roll
repz
testl
jle
push
addr16
dec
bound
adc
sbb
shl
andl
lahf
push
inc
jbe
push
or
std
inc
mov
push
mov
loop
jnp
mov
test
out
lods
xchg
fsubrs
mov
pop
imul
cs
lret
lret
ret
jmp
sbb
ds
repnz
xlat
shlb
arpl
jb
cmp
dec
clc
rep
mov
sti
cmp
and
jns
adc
mov
mov
push
or
jne
orb
mov
add
fistpl
adc
or
cmp
fwait
insl
inc
imul
sbb
push
jns
mov
int
pop
data16
cmpsb
rcrb
cltd
jae
add
mov
jmp
out
cmp
bound
orb
push
popa
fs
fnsave
add
mov
xchg
ret
mov
pop
call
aaa
inc
xchg
int
adc
push
repz
in
daa
xor
mov
iret
out
mov
push
lods
addr16
inc
xchg
rcll
adc
pop
cmp
xchg
inc
adc
pop
dec
mov
pop
out
jl
aaa
jle
xorl
dec
fdivrl
aaa
sub
push
cmc
in
dec
push
jp
fwait
out
sti
shll
jbe
mov
inc
inc
bound
adc
pop
lahf
mov
lea
aad
fiaddl
pop
in
int
adc
add
pop
stc
and
aad
inc
into
pushf
idivl
xchg
ror
leave
and
pop
add
aam
add
and
push
std
aas
xchg
pop
cmpsl
mov
aaa
xor
mov
xor
lods
fisubs
sub
outsl
cmp
lods
mov
xchg
imulb
notb
sub
add
jle
outsb
mov
popa
adc
popa
pop
mov
pop
sti
jns
push
aaa
push
push
jae
sbb
xchg
je
repnz
xchg
add
fdivl
push
mov
mov
rorl
filds
daa
call
sub
and
jns
rol
mov
adc
adc
mov
sbb
jle
mov
lock
test
fistpll
pop
push
bound
add
lcall
and
stos
stos
ror
pop
xor
dec
fsubl
scas
pushl
mov
les
imul
fidivrl
repz
cmp
pop
or
fistps
cmpsl
or
and
les
sub
daa
and
rcrl
inc
addr16
in
pop
cmpsb
dec
ds
or
aas
xorb
adc
es
inc
lods
mov
mov
fiaddl
mov
mov
push
push
inc
push
loope
shrl
dec
movsb
pop
lahf
mov
mov
addb
or
sbb
xchg
cmpb
cmpsb
cs
fstps
push
ja
pop
add
dec
cmc
add
pop
inc
stos
cmc
cmp
add
push
lea
sahf
sbb
sub
push
fldcw
rcl
mov
sub
dec
insb
cli
sbb
sarl
jecxz
inc
and
jl
add
mov
jnp
cmp
xor
cli
ret
clc
repz
scas
lock
push
push
xor
dec
sub
test
pop
jecxz
cli
ja,pn
imul
pop
mov
jecxz
fdivrl
jbe
out
mov
mov
or
daa
sub
aad
pop
inc
mov
mov
mov
mov
push
icebp
fidivs
pop
popf
dec
nop
sbb
or
insl
es
outsb
mov
out
dec
ret
mov
lret
or
std
data16
jge
add
mov
imulb
pushf
inc
jo
jg
cli
mov
jae
sub
inc
adc
mov
cmp
jnp
movsb
loope
shrb
mov
pusha
out
sbb
push
and
xor
lahf
push
fisttps
push
clc
add
xchg
sbb
imul
pop
jmp
pop
ss
or
fwait
xchg
inc
inc
enter
jo
aad
xlat
aam
outsb
popa
fsubrs
insl
sub
inc
rol
pop
push
test
and
pop
sbb
cmp
pop
pop
adc
jb
xor
cmp
pusha
int
xor
mov
pop
lock
shl
cwtl
std
inc
adc
xor
mov
jp
adc
shl
mov
jp
std
lret
adc
xchg
sarl
adc
popf
sbbb
sahf
jle
lret
dec
xchg
mov
sub
pop
js
sbb
outsb
jnp
dec
jb
into
scas
mov
jp
std
outsl
push
gs
add
xorl
shll
xchg
xchg
dec
stc
aam
sahf
cmp
push
xchg
aas
out
fnsave
roll
push
inc
rorb
inc
xchg
and
push
mov
stos
movsl
das
xlat
and
and
jo
adc
adc
sbb
cmp
adc
icebp
mov
sahf
jo
jge
pop
or
fistl
clc
sti
inc
in
dec
invlpg
nop
push
rcrb
sbb
lcall
pop
negb
mull
pushf
inc
and
pusha
xchg
mov
mov
mov
push
in
mov
cmp
lcall
and
sti
mov
push
test
mov
and
or
fisttps
and
mov
mov
add
and
aad
test
sahf
call
xor
add
mov
adc
in
cli
mov
mov
jle
js
out
sbb
push
pop
push
cmc
inc
in
lret
cmc
and
mov
cltd
inc
lock
popa
jae
jle
add
push
or
dec
int3
mov
jg
fs
rclb
fwait
adc
fisubrs
inc
push
sahf
test
and
mov
pop
add
inc
in
jb
xor
loop
sbb
cwtl
mov
sub
dec
and
jae
add
mov
enter
lcall
and
lret
or
or
shrb
fidivl
iret
testl
cwtl
adc
int
or
cmp
sbb
out
ret
dec
xchg
xlat
movl
orl
jmp
cmp
mov
jnp
adc
fisubrl
enter
je
cmp
jle
std
jge
jno
jle
cli
cmpsb
push
std
cltd
sbb
mov
mov
jp
dec
imul
xchg
iret
movb
jmp
mov
mov
push
cld
inc
dec
test
push
push
test
insb
jg,pn
das
int3
mov
jecxz
addr16
lcall
lcall
pushf
insl
dec
jo
and
adc
sbb
int
les
jmp
cmp
andl
out
cwtl
add
sti
sub
in
icebp
dec
inc
loope
jno
xor
mov
push
movsb
daa
jp
dec
imulb
or
incb
mov
push
ficompl
dec
pop
xchg
pop
pop
inc
or
xor
lret
in
sbb
cmpsb
call
sbb
sti
mov
negb
fimuls
pop
or
test
mov
bound
xchg
in
mov
and
or
jg
test
xlat
push
cmp
pop
lds
ljmp
ret
lret
mov
fwait
outsl
add
xlat
jnp
add
and
pop
cwtl
std
xchg
cmp
mov
rolb
dec
fs
xchg
xchg
movsb
sbb
add
popf
ffree
and
lcall
cli
mov
sbb
push
pop
mov
or
xchg
lcall
pop
arpl
push
sbb
fisttpl
pushf
int3
xor
in
xlat
dec
pop
push
mov
adc
cmp
sbb
pop
push
inc
jno
cmp
adc
pusha
mov
lret
cmp
ss
andb
or
sarb
inc
ret
scas
das
or
adc
out
mov
jne
pop
call
and
scas
mov
sti
mov
imul
ret
out
lret
sub
lahf
arpl
dec
int
adcb
mov
clc
jnp
loopne
and
shl
pop
sub
sbb
lods
repnz
fwait
loopne
sbb
dec
push
imul
or
mov
movsb
daa
or
cmp
out
mov
sub
jo
jno
rcrl
dec
xchg
dec
jle
xor
dec
aaa
xor
and
jl
inc
int
mov
fcoms
ja
iret
sbb
ljmp
cmpsb
mov
test
sub
jae
sub
sub
push
xchg
push
insb
std
loop
mov
cmp
loope
jns
xlat
push
push
mov
mov
shll
inc
mov
jle
aas
jp
push
sti
call
cs
pop
fisttps
add
xor
adc
add
into
addr16
jg
add
aad
jno
sti
loop
mov
psrlq
fisubl
and
xchg
pop
repnz
movsl
push
test
lret
inc
and
nop
mov
dec
es
xchg
test
icebp
leave
je
jge
inc
pop
inc
sub
jb
push
mov
mov
dec
sti
inc
pop
xchg
lods
ja
pop
jb
test
dec
movb
popa
jmp
jp
cld
xlat
inc
pop
nop
rclb
inc
fwait
push
pusha
and
and
mov
adc
scas
bound
xor
aas
xchg
es
or
pop
testl
in
aaa
inc
mov
call
xor
sub
nop
xchg
movsl
test
lods
mov
arpl
sub
sbb
lock
imul
movsb
pop
ljmp
add
push
std
pop
add
xchg
cmp
cld
cmp
mov
loopne
pop
icebp
sbb
or
sub
mov
dec
notl
stos
pop
insb
imul
push
insl
pop
push
sahf
jl
lock
inc
insb
in
adc
mov
jg
mov
push
arpl
je
jns
ret
push
sti
mov
jp
add
gs
pop
pop
mov
xchg
outsb
jp
aam
pop
test
xchg
fs
push
lds
rol
in
aam
das
shrl
mov
sbb
adc
mov
xchg
inc
inc
mov
sbb
mov
ret
mov
push
cmp
jg
cmpsb
daa
ret
das
adc
jmp
push
mov
mov
or
xchg
jmp
dec
jg
cmp
inc
jno
sti
jg
shlb
sbb
push
mov
mov
mov
inc
xchg
inc
hlt
inc
int
xor
lcall
pop
mov
sahf
xchg
aam
and
pop
push
js
js
push
stos
mov
jnp
loop
cmpsl
aam
cmp
dec
sbb
inc
xchg
sub
add
mov
xchg
ja
test
das
test
mov
das
inc
sbb
lahf
push
add
inc
pop
pusha
dec
jecxz
in
jnp
call
in
ljmp
fldt
xchg
sub
rorb
lea
mov
in
push
aam
hlt
cmp
scas
inc
fwait
nop
jo
sbb
outsl
cmp
call
rol
xor
gs
mov
mov
andb
mov
shl
adc
cmp
add
andb
addr16
pop
dec
es
addb
data16
lea
inc
in
add
into
int
mov
loop
xor
inc
mov
xorl
mov
fcompl
andb
test
sbb
dec
or
mov
xor
scas
push
add
inc
dec
mov
pop
int
ds
loop
je
push
push
inc
jge
mov
pushf
shlb
mov
cwtl
aaa
stos
cmp
or
sub
mov
ret
mov
or
mov
test
movl
js
pop
cmpsl
cmc
testl
mov
add
and
out
out
fcmovnbe
mov
pop
add
push
cmp
jmp
in
sub
and
push
fisubrl
sbb
xchg
ds
mov
js
push
ret
push
mov
sub
cmp
aam
out
inc
out
cmp
mov
fstl
and
and
imul
add
add
push
and
sbb
dec
jp
pop
push
or
popa
cmp
sahf
push
mul
lahf
mov
jecxz
sbb
mov
or
imul
shlb
pop
jo
push
and
mov
iret
lcall
mov
jnp
es
cmc
out
sbb
rcrl
movsb
jmp
xchg
rclb
jno
pop
mov
mov
out
mov
aaa
dec
xchg
outsl
push
pushf
add
jno
or
xor
jl
je
xor
mov
popl
divl
adc
sbb
inc
mov
stos
adc
out
ja
popa
add
mov
movsl
mov
xorb
xor
xchg
mov
les
adc
inc
xchg
push
ret
rcr
push
ds
in
mov
mov
xor
sub
rorl
or
mov
xorb
mov
sahf
rorb
mov
mov
inc
insl
pop
push
lock
addr16
mov
and
sbb
out
adc
popf
ds
popf
inc
js
sub
ret
fs
clc
mov
jb
mov
jbe
adc
pop
and
inc
mov
xchg
push
adc
imul
lcall
push
dec
add
gs
notb
call
push
dec
sbb
xor
lods
andb
lods
mov
lret
out
add
adc
jb,pt
xor
jp
sub
fwait
ss
mov
and
std
mov
push
xchg
or
xchg
std
or
pop
mov
lahf
aam
push
cmp
dec
ret
sub
ret
push
dec
mov
xchg
xchg
aam
mov
cmpb
inc
jae
cs
nop
arpl
inc
loopne
pop
push
sub
sti
je
dec
testb
in
cld
xor
jno
stc
and
test
mov
push
data16
insl
and
sbb
sbb
xor
popf
mov
loope
jp
cmc
test
ror
dec
jo
push
jo
sub
sbb
jecxz
jecxz
int
mov
mov
pop
pop
mov
add
pop
aad
xchg
xchg
cmp
and
mov
fs
cmp
or
pop
push
sbb
fwait
adc
mov
sub
mov
mov
mov
movl
arpl
mov
outsl
dec
mov
lahf
popl
push
add
adcb
leave
aad
jae
lret
int
imul
notl
cmp
dec
and
scas
aas
sub
push
aas
aas
rcr
pop
outsb
fdivr
in
xchg
mov
mov
out
leave
into
pop
add
push
clc
cmc
repz
cs
mov
xor
repz
fldt
jp
gs
into
push
push
iret
jp
push
cs
scas
pop
bound
mov
es
je
fwait
jae
test
movsl
inc
insl
and
xchg
es
mov
sub
mov
aad
pusha
mov
pushf
lock
incl
inc
movl
xor
inc
sbb
push
in
xor
or
mov
cs
dec
pop
cmpb
sub
mov
or
insl
pop
xchg
enter
repz
pop
inc
add
xor
int3
xchg
loopne
addr16
pop
and
sbb
ret
rcl
sti
inc
xor
shlb
mov
ss
mov
ss
cmpsb
and
xor
mov
mov
and
adc
sub
push
pop
test
mov
data16
outsl
rolb
out
push
pop
lret
push
iret
pop
lods
xor
sub
mov
mov
push
pop
dec
push
mov
loop
test
clc
fwait
je
pushf
lea
in
negl
xchg
dec
mov
push
orl
sbb
pop
add
mov
scas
movsb
sti
adc
xchg
jb
jl
cmp
bound
js
fdivs
xchg
adcb
outsb
cltd
add
cltd
adc
xchg
xor
inc
mov
cmp
aas
xchg
je
inc
cmp
inc
jle
subb
ss
cmpsl
aam
pusha
or
sub
jne
ss
rcrb
dec
pop
test
or
mov
sub
mov
in
jns
adc
ret
daa
shrl
nop
mov
sbb
ret
push
aas
mov
insl
cli
or
lea
cmpsl
or
pop
frstor
out
push
nop
aad
sahf
cmp
mov
frstor
add
lahf
ja
mov
testl
mov
jne
out
icebp
cmp
das
loopw
frstor
out
scas
mov
daa
and
pusha
fs
xchg
scas
sbb
mov
push
adcl
and
cs
sbb
lds
loope
lods
xchg
ret
es
jns
dec
cmp
dec
xchg
mov
and
add
xchg
in
xor
int
mov
addr16
stos
rcr
mov
and
out
inc
push
xchg
dec
mov
ja
fcomps
fcmovne
lods
testb
mov
scas
cmp
cmc
sahf
popl
lret
fstpt
sysret
inc
pusha
jle
xor
pop
rcll
mov
push
jb
je
adc
xchg
cmp
data16
andl
popa
test
loope
sbb
lcall
jmp
mov
cmp
push
mov
enter
hlt
das
sbb
cmp
mov
inc
mov
rclb
lods
aaa
mov
and
out
cli
popa
sarl
pusha
jp
add
pusha
imul
mov
in
imul
inc
data16
lods
jl
xor
addr16
lcall
sub
inc
imul
dec
lock
stc
fbstp
mov
rcl
movsl
xor
sbb
insb
scas
nop
repz
movsb
pop
jecxz
bndldx
rorb
mov
in
mov
mov
xor
mov
jo
imul
clc
fstpt
sbb
lds
cmp
repnz
xchg
subl
call
sbb
loope
addr16
fnstsw
inc
int
cmc
stos
hlt
daa
mov
enter
int3
add
or
mov
mov
mov
clc
sub
fcmovb
jno
shll
mov
sbb
adc
xchg
adc
mov
sub
add
lds
repnz
insb
iret
out
jnp
adc
jnp
arpl
jl
jo
push
out
enter
stos
add
stc
xchg
dec
xchg
ret
cltd
outsl
fldcw
call
adc
pusha
sub
subl
aam
imul
lret
stos
mov
cmp
pop
adc
les
or
call
pop
call
scas
cmp
xchg
cli
xor
or
loope
inc
imul
call
repz
or
pop
fisubrs
loope
mov
push
fdivp
mov
cmp
mov
cmpsl
jnp
pop
mov
mov
in
and
outsl
pop
cmp
cmp
jge
add
xor
iret
push
lods
xor
inc
mov
xchg
aaa
test
xchg
sub
loopne
cmp
push
sub
jno
subb
sbbb
add
sub
adc
lea
ljmp
in
xchg
inc
xchg
aaa
pop
push
pop
sub
iret
xchg
mov
push
lods
jl
push
push
xchg
dec
xchg
cld
aad
rorl
int3
xor
add
sarb
jle
adcb
xor
xchg
pop
repnz
sahf
shr
imulb
out
add
dec
xchg
imul
lods
jg
fcomps
addr16
popf
ret
pop
mov
jno
aas
iret
sahf
inc
pop
in
pop
jle
or
adc
xor
insl
mov
test
cmp
popf
and
mov
imul
lcall
cwtl
pop
ja
xchg
or
outsl
sub
or
movsl
or
pop
inc
push
orl
in
lods
repnz
push
push
popa
test
jl
mov
pop
xchg
or
mov
lods
lock
xor
scas
sbb
es
mov
pop
mov
inc
mov
jno
mov
and
pop
push
pop
xchg
add
jl
or
or
in
inc
and
in
push
insl
pop
sbb
enter
ret
inc
movsb
lock
push
sbb
sbb
push
mov
dec
and
add
sahf
popa
stc
aas
imul
mov
mov
outsb
pop
add
jmp
out
mov
jnp
lret
push
ja
pop
cmpsl
lods
sub
cwtl
gs
or
stos
dec
dec
or
sbb
lahf
mov
push
imul
fs
jns
sub
mov
push
cmp
cmp
pop
addl
xchg
aas
sub
mov
push
xlat
mov
jg
cltd
gs
mov
fcmovnbe
shrl
popf
cmp
push
vmovaps
int
imulb
xchg
shl
pop
jae
lahf
sbb
lock
xchg
adc
jo
les
enter
xlat
xchg
xor
sub
scas
gs
jp
add
mov
push
std
mov
adc
sbb
push
mov
adcl
dec
mov
hlt
mov
fdivs
xor
adc
push
xchg
mov
jb
xchg
sbb
or
test
sub
push
stos
loop
dec
cli
cmp
push
sub
paddq
movsb
scas
scas
and
xor
scas
jns
out
testl
iret
pop
mov
mov
push
mov
std
inc
and
dec
adc
enter
stc
mov
dec
into
cmpsb
mov
lahf
imul
and
mov
insb
fcmovnb
dec
jns
fnstsw
addl
lret
xchg
pop
fdiv
sub
xor
jmp
add
pop
and
push
inc
cwtl
jns
xor
fcmovnu
inc
fbld
loopne
out
pop
imul
sub
stc
pop
mov
ja
xor
imul
cwtl
andb
out
mov
lods
popf
sub
xchg
mov
mov
loope
call
lds
cltd
xor
jle,pn
fs
add
sub
hlt
aam
jae
aad
daa
push
adc
adc
add
fnstenv
jne
mov
xchg
push
leave
daa
out
cmp
jge
inc
out
pop
jnp
lcall
mov
xchg
mov
hlt
mov
js
pop
ja
dec
xchg
sbbb
push
loope
jg
aam
pop
les
and
sbb
fsubs
out
mov
in
lcall
mov
jb
jnp
mov
cld
adc
pop
cli
pop
sbb
xchg
adc
xchg
mov
push
pop
cmp
es
test
into
push
test
and
pop
jge
xchg
dec
jmp
test
cltd
xchg
mov
dec
cli
lds
adc
sbb
cmpsl
jg
test
testb
mov
scas
mov
xchg
dec
popf
or
xchg
insl
lods
jb
jle
mov
rorl
xor
adc
push
xor
cwtl
popf
pop
std
mov
mov
and
es
enter
jbe
cmp
pop
jnp
mov
pushl
jb
lods
loopne
ljmp
ljmp
pop
pop
pop
xor
or
inc
and
sahf
jle
push
inc
pop
lahf
pop
fs
out
mov
push
jl
gs
add
push
cld
cltd
push
jb
imul
fcomps
mov
test
push
sbb
add
jb
inc
out
faddp
mov
mov
mov
adc
adc
and
adc
xchg
jecxz
mov
mov
jbe
jl
jns
push
pop
pop
or
gs
fstpt
pushf
daa
and
das
jle
jae
daa
mov
pop
test
insl
sbb
pop
bound
inc
mov
jbe
sbb
xor
adc
lods
pop
push
push
sbb
je
mov
push
neg
push
in
cmp
lods
mov
loop
fs
sbb
jmp
adc
jl
dec
or
adc
cmp
mov
xor
xor
push
pop
popf
dec
inc
jne
add
pop
into
sub
daa
dec
daa
arpl
lds
adc
faddl
mov
and
jg
orb
xchg
jle
lds
decl
push
loope
sub
stos
and
sahf
push
ret
xchg
mov
lahf
fistps
pop
fnsave
call
sbb
xchg
lahf
shl
and
mov
stos
pop
and
in
mov
cwtl
push
test
out
fstpt
arpl
dec
dec
nop
pop
mov
ljmp
in
or
and
xchg
cmpsb
pop
iret
mov
or
push
xchg
or
mov
push
inc
dec
clts
xchg
sub
filds
mov
inc
jge
data16
pop
cmpsl
cmp
or
and
shrl
fldl
addr16
jp
xor
shlb
cltd
inc
dec
push
fwait
dec
mov
and
andl
test
jmp
mov
pop
out
cli
in
inc
push
push
fiaddl
and
adcl
xor
dec
xchg
mov
lcall
dec
mov
sub
adc
jne
div
sub
inc
dec
ja
sub
fcmovbe
loopne
push
push
mov
int3
adcb
inc
mov
mov
sarb
and
dec
mov
mov
outsl
fstps
sbb
inc
lret
mov
fldt
cmp
repz
xchg
daa
test
xor
mov
jb
in
cld
negl
pop
je
mov
add
xchg
loop
popa
pop
jmp
ret
jno
loop
fs
dec
xchg
hlt
mov
pop
or
add
out
or
mov
mov
sbb
testl
sahf
shll
xor
xchg
sbb
popa
dec
cli
out
push
and
inc
int
stc
inc
int
pop
push
push
pop
inc
mov
xchg
clc
adc
cmp
leave
cli
xchg
cmc
mov
cmp
add
std
leave
and
fisubrl
mov
add
sub
aam
or
out
and
sub
std
pop
pop
loopne
cmp
sub
outsl
mov
scas
or
jno
cmp
icebp
push
insb
jb
scas
lock
icebp
jo
sub
mov
or
sti
sub
lods
jl
mov
add
inc
aam
pop
or
jl
xor
mov
adc
mov
jb
dec
aam
inc
movsl
jl
cld
mov
jbe
aaa
push
mov
lea
xchg
xchg
mov
xchg
and
cmpsl
pop
push
stos
jmp
std
lret
orb
and
sub
jg
jo
imul
dec
inc
pop
mov
pop
inc
les
xor
xor
xchg
insl
sbb
jbe
add
int
gs
pushf
sahf
add
subb
aas
test
mov
inc
and
xor
aaa
mov
sbb
push
mov
mov
jno
out
ljmp
xchg
lods
test
fsubrl
xor
fimuls
mov
push
loop
fstpt
js
xor
xor
or
pop
sbb
jg
add
dec
out
ret
outsl
mov
lods
insl
mov
out
and
insl
out
lahf
push
or
mov
add
hlt
jmp
pop
ret
aad
mov
rcll
jmp
lock
dec
das
xlat
out
cmp
xchg
int
mov
adc
jno
js
out
add
sbb
repnz
adc
es
repnz
les
js
in
pop
fldl
push
imul
loopne
dec
pushf
mov
pop
adc
pop
insl
and
pop
push
stos
push
in
mov
jno
or
inc
fldln2
mov
stos
inc
shlb
inc
or
push
mov
or
movsl
popf
loop
cltd
or
adc
xchg
scas
sbb
and
cmc
cld
sbb
dec
adc
into
loopne
pop
jne
and
into
js
adc
aas
call
mov
fdivrl
aaa
and
dec
sarb
sbb
int3
inc
in
scas
out
jno
enter
jae
add
cmpsb
xor
cli
in
pop
jge
fldenv
dec
jmp
test
cmp
cmp
jl
adc
sarb
pop
inc
or
test
pop
fdivrl
arpl
in
or
push
xchg
mov
or
mov
mov
bound
ret
dec
data16
pop
out
cmp
mov
mov
rcll
add
sbb
inc
adc
mov
pop
arpl
je
popa
cmpsl
jecxz
adc
iret
shll
or
mov
pop
xor
popf
inc
stos
jg
push
addr16
repz
nop
mov
sbb
jl
outsl
cmc
xor
pop
les
adc
xor
or
push
push
sub
jl
scas
in
mov
sbb
cmp
jbe
testl
jns
xorb
pop
scas
loopne
cmp
mov
mov
stos
mov
xchg
sub
insb
cmp
mov
sub
fists
movsl
sbb
idivb
jge
stc
jns
or
out
xlat
cmp
pop
lods
test
jae
gs
adc
add
fldl
push
and
mov
lcall
or
adc
pop
in
xor
mov
data16
mov
notl
mov
or
xchg
cmpl
and
xchg
xchg
add
into
dec
jmp
shlb
testl
addr16
iret
movsb
std
push
gs
cmp
loopne
xchg
bound
ds
jmp
push
loope
cmp
lock
inc
ret
mov
call
add
jp
shr
fldcw
dec
andb
jne
mov
jne
ljmp
ds
in
cmp
sti
mov
je
and
fstps
adc
fwait
pop
movsb
icebp
xlat
adc
insb
jmp
push
loopne
sbb
inc
cmp
pop
mov
jnp
loopne
push
ret
stos
sbb
fwait
mov
test
popa
sahf
out
mov
push
loop
in
lahf
add
xchg
in
dec
lock
out
mov
or
sub
das
push
out
fstps
or
mov
add
jae
fildll
mov
push
mov
popf
gs
cld
clc
lods
fcoms
sbb
and
leave
sbb
out
inc
int
loopne
push
pop
ret
push
jo
adcb
ret
mov
stos
cs
sbb
mov
std
nop
xor
les
adc
mov
lcall
mov
inc
inc
lea
inc
sub
mov
fidivs
mov
or
std
mov
fs
daa
fldcw
daa
sub
insb
fwait
arpl
pop
inc
fistl
stos
adc
mov
xor
mov
icebp
test
jl
or
ss
pop
xlat
aam
dec
nop
push
cmp
in
cld
xchg
cwtl
inc
loopne
xchg
test
insl
jp
and
jg
iret
sub
dec
scas
push
lahf
insb
insb
cmp
mov
xchg
mov
filds
dec
mov
mov
leave
das
test
hlt
loop
loop
daa
jbe
sbb
add
ret
sbb
mov
cli
push
and
mov
and
and
jne
xlat
imul
and
add
mov
dec
out
fidivl
iret
movsb
je
or
sbb
lahf
test
jb
sbb
cmp
lcall
pop
add
fwait
push
xor
pop
jp
in
enter
lret
int
xchg
ds
xchg
and
or
sbb
bound
lods
mov
ljmp
cmp
lods
xchg
adc
ds
cltd
push
int
cmp
in
decl
mov
or
xchg
movsl
sub
filds
aaa
rcll
jecxz
scas
addr16
cli
xchg
push
clc
xor
and
sbb
mov
and
rclb
lret
push
pop
vmovq
fs
cmc
and
into
adc
jecxz
dec
inc
inc
fildll
pusha
movsb
sub
dec
cmp
clc
or
scas
jne
pop
ds
hlt
mov
mov
aad
pop
repnz
mov
jno
mov
ror
push
jbe
out
sti
cmc
sarb
adc
or
lods
cmp
xchg
idivb
push
push
inc
imul
mov
aas
sbb
or
mov
lcall
push
xchg
add
sarl
pop
popf
pop
dec
mov
dec
in
fcmovb
in
adc
pop
add
adc
mov
pop
fs
jg
or
fnop
or
or
iret
mov
std
xor
cmp
sub
scas
ss
pop
cld
or
jmp
in
sbb
xchg
inc
es
movsb
add
in
or
subl
xor
and
lock
adc
jo
cmp
adc
mov
fwait
push
xchg
ror
stos
push
jge
out
push
jg
insl
mov
rclb
ja
scas
aas
not
xchg
xchg
rcll
mov
mov
jmp
movsl
cwtl
dec
cmp
adc
cmpsb
cmpsl
imul
iret
fs
pusha
repnz
mov
loop
xor
stos
test
sub
dec
mov
push
mov
jns
xchg
or
xor
stos
addl
popf
add
dec
lock
cs
push
inc
lcall
in
cwtl
clc
push
lea
xchg
mov
pop
mov
sti
adc
or
push
cmc
mull
pop
mov
adc
ja
ds
mov
lds
dec
dec
imul
dec
aad
xor
aam
out
mov
add
xor
pop
add
push
loop
push
jmp
pop
push
mov
mulb
or
repz
cmp
add
adc
out
iret
xlat
stos
mov
adc
rorb
std
cmpsl
push
add
mov
mov
out
xchg
or
add
iret
icebp
jge
sbb
imul
inc
jg
int
cld
iret
sub
into
add
cmp
xor
test
cs
ret
sub
cmp
sub
jle
aaa
pop
dec
and
insl
rcrb
in
ljmp
rcll
cmp
mov
jnp
inc
ss
dec
jo
cwtl
scas
out
lods
or
jg
outsb
mov
loopne
add
sub
jg
pop
stos
mov
pusha
xor
movsb
popf
xchg
push
jo
xor
inc
shrb
dec
or
or
imul
pop
inc
ja
or
pop
jne
loop
adc
ret
pop
dec
xor
dec
adc
mov
sub
and
repnz
and
lods
and
flds
cwtl
jnp
pop
mov
cmp
lds
xchg
jo
mov
pop
and
adc
in
dec
jnp
mov
add
iret
into
mov
or
mov
movsb
mov
push
sahf
rorl
es
inc
push
or
dec
lret
sub
out
scas
int
loopne
or
mov
daa
cmp
test
test
mov
decl
leave
gs
cmc
insl
add
in
cmpsb
js
imul
jb
mov
shlb
or
repnz
add
push
jns
addb
insb
push
push
iret
sarl
lcall
add
hlt
sbbb
push
pop
sub
jp
js
nop
cmpsb
or
aam
aam
mov
push
loopne
fwait
or
cmc
ljmp
cmp
xchg
push
leave
xlat
icebp
xchg
push
push
push
and
adc
pop
call
fcmovnb
mov
fucomp
xchg
jbe
dec
loop
scas
sbb
or
in
jle
xlat
xor
popl
lahf
and
insb
mov
jnp
iret
aam
into
and
iret
imul
dec
scas
cmp
nop
push
daa
sahf
in
xlat
xchg
lret
popf
hlt
or
daa
dec
test
sti
push
mov
lods
pop
nop
cmp
dec
ljmp
ss
cmp
fs
add
pop
pushf
dec
mov
add
fistpl
jle
jge
ret
mov
lea
inc
xchg
mov
dec
mov
js
cmpsb
sbb
stos
jle
adc
stos
adc
es
lods
xor
das
mov
cltd
sahf
pusha
mov
dec
lock
push
and
insb
lods
adc
shl
aad
pusha
sub
xor
call
and
ja
sbb
daa
ret
cld
das
mov
repz
jne
rolb
sbb
xchg
or
arpl
loope
stos
dec
pusha
add
pop
lock
test
xorl
leave
addb
loop
shlb
in
sub
dec
xor
ficomps
pop
repz
ds
mov
aad
lea
loopne
or
call
loopne
fwait
pop
fstpl
arpl
adc
ret
sub
sbb
mov
jns
adc
data16
aaa
and
hlt
mov
push
lret
ret
pop
or
pop
mov
add
push
addr16
sbb
out
fs
sub
daa
add
in
mov
into
in
sbb
mov
aad
push
xchg
out
cmc
scas
repz
pop
das
sub
ja
rcll
subl
mov
pusha
pusha
xor
dec
ficomps
pop
cs
rol
lock
xchg
jecxz
inc
mov
mov
pushf
out
stos
sti
push
jmp
sti
dec
or
insb
mov
aad
imul
out
cmp
or
mov
cmc
xchg
cmp
data16
fcoms
int
int3
push
cmp
dec
imul
push
jnp
test
add
xlat
push
outsl
jmp
pop
mov
jae
and
pop
xchg
or
cmc
adc
or
in
and
into
add
mov
jno
xchg
popf
add
lea
icebp
cmp
jae
sub
mov
sbb
stos
ljmp
sbb
mov
sub
lods
xorl
insl
inc
sbb
xchg
mov
es
jne
mov
lock
cmp
sub
ljmp
add
out
push
popa
lods
lock
pop
repnz
mov
pushf
mov
mov
cmp
add
and
in
int
mov
sub
aaa
mov
xor
xchg
outsb
scas
stos
and
div
dec
jmp
mov
aas
push
mov
outsl
enter
dec
into
jecxz
andl
add
lds
or
mov
shlb
mov
cld
imul
jle
out
enter
bound
mov
in
cmp
xor
jmp
stos
std
aaa
jg
popf
test
mov
mov
and
rorl
lret
fldcw
dec
int
decb
lahf
cmp
daa
fimuls
mov
test
push
imul
or
pop
pop
je
jge
mov
mov
je
or
sbb
hlt
xchg
pushf
inc
mov
pushf
add
jl
femms
inc
fsubl
in
sti
adc
cld
cltd
mov
sub
cmp
and
sbb
sub
mov
inc
testl
inc
enter
loop
scas
das
xor
sti
cld
ret
fisubrs
and
cmpsl
and
jae
mov
mov
push
fdivs
iret
aas
orb
mov
loop
lods
adc
mov
dec
js
push
push
pop
cmpsl
sbb
jle
out
or
cmc
das
icebp
xor
lods
fsubrs
mov
or
mov
mov
xchg
pop
mov
fistps
outsb
dec
daa
scas
outsb
mov
mov
outsl
push
adc
pusha
dec
and
jmp
inc
jbe
xchg
ret
aas
sbb
fsubrl
add
jg
nop
in
lcall
sbb
adc
out
cmp
adc
mov
dec
jb
jae
sub
push
out
int
cwtl
ss
xor
dec
cmp
pop
lcall
adc
jg
push
pop
icebp
push
adc
xchg
pop
sbb
mov
and
add
shrb
cmp
xchg
les
hlt
push
rcr
push
stc
xlat
dec
loope
jecxz
xchg
inc
xchg
ret
and
push
lahf
cmp
pushf
cltd
popw
pusha
mov
data16
repz
mov
mov
pushf
xchg
pop
adc
mov
adc
out
sbb
push
outsb
and
sbb
pop
adc
pop
test
xor
es
cmp
and
es
mov
cmp
xchg
aam
xchg
xor
repnz
fwait
mov
inc
mov
adc
sbb
leave
div
inc
cwtl
jns
inc
test
inc
jecxz
arpl
adc
cmp
sub
in
xor
mov
js
pop
pop
mov
mov
jle
bound
jle
test
inc
pop
lock
ja
xchg
jl
aaa
popf
inc
inc
int3
dec
dec
xchg
fnstsw
xor
pop
sbb
int
jno
repz
mov
mov
popf
fstpt
lcall
in
pop
inc
out
js
and
fnop
stc
fldenv
loop
inc
mov
cltd
mov
mov
or
adc
xchg
pop
mov
int3
cmp
aad
pop
gs
ljmp
movsb
jne
pop
inc
and
push
test
loope
xchg
out
adc
and
sbb
popl
inc
pop
pop
or
sbb
cli
xchg
sbb
jge
push
loopne
cmpxchg
or
pop
xor
mov
test
sub
push
int
sub
test
xchg
cltd
aaa
cmp
test
dec
lret
xchg
push
dec
push
add
mov
das
pop
xor
jmp
icebp
sub
outsb
push
stos
xor
push
mov
inc
or
pusha
stc
mov
ja
jbe
mov
pop
push
lret
mov
in
add
in
pop
dec
push
mov
sarl
inc
mov
mov
inc
lds
jb
sbb
fs
jns
rclb
dec
call
inc
xchg
leave
mov
fwait
cli
movlps
test
mov
mov
mov
fsubs
loop
mov
or
jno
mov
cmp
add
bound
lcall
sub
push
or
push
and
or
sbb
repnz
aas
mov
pusha
inc
daa
imul
aaa
cmp
xor
inc
icebp
push
fidivrs
mov
add
push
push
mov
jecxz
xchg
in
cs
jmp
pop
shll
aad
xchg
hlt
rorl
es
add
popa
dec
rorl
xor
fsubp
clc
push
mov
mov
push
and
mov
fcmovu
sbb
push
pushf
call
push
mov
insb
sbb
in
lock
push
inc
dec
mov
xchg
clc
stos
push
sub
inc
xlat
ror
adcl
shl
incl
push
xor
and
sub
sub
popf
pop
ret
rcr
nop
adc
xor
out
scas
fstpl
xchg
mov
sub
mov
mov
gs
cmp
leave
imul
lock
mov
cltd
in
inc
sbb
out
lahf
mov
inc
add
enter
xor
insl
pop
addr16
bound
mov
fiadds
mov
jbe
inc
pusha
inc
scas
sub
mov
clc
pop
das
cmp
hlt
fwait
cwtl
pusha
fmuls
dec
dec
dec
les
sub
in
jo
cwtl
out
mov
ljmp
fsubp
pop
jns
cld
fsubl
and
movsl
sub
inc
mov
push
xchg
add
test
mov
out
stos
imul
mov
mov
pop
sbb
sbb
mov
stc
pop
or
jne
add
mov
leave
or
xor
fsubrl
mov
into
rcl
cmp
lods
inc
dec
pop
lahf
inc
pop
xchg
lret
cmpsb
js
rorb
push
loope
or
mov
mov
fdivrl
scas
adc
loop
shr
icebp
or
mov
shrl
stos
out
pop
imul
loop
mov
sbb
mov
inc
pusha
popa
push
xchg
loop
shlb
pop
xor
pop
mov
pop
fstpt
cmp
cmp
mov
mov
out
test
inc
add
and
leave
inc
mov
or
xor
aad
mov
sub
lahf
hlt
rclb
call
xchg
xchg
jne
jecxz
lock
jno
inc
aad
adc
and
int3
sti
xor
mov
mov
mov
insl
aam
repz
lcall
inc
mov
xchg
data16
aad
roll
mov
rolb
sbb
and
lahf
and
push
addb
xlat
inc
scas
mov
scas
adcl
xchg
cmp
rorb
lock
addr16
xchg
add
xchg
in
xchg
push
jle
push
add
ljmp
jmp
mov
movsl
mov
data16
adc
test
lret
cmp
enter
xchg
fldcw
imul
cmp
test
movsb
push
pop
test
push
and
push
push
sti
hlt
sbb
mov
imul
cmp
add
jns
int3
sahf
in
sbb
adc
adc
loope
sbb
out
dec
push
jmp
loope
xchg
fistpll
cld
int
jb
mov
adc
sub
sbb
sbb
insl
stos
pop
sti
or
aas
jns
inc
pop
fiaddl
shrb
lahf
or
fs
add
jnp
pusha
xor
xlat
in
adc
xlat
pop
in
lods
jp
repnz
popa
sub
mov
out
jb
stos
inc
mov
and
je
loop
and
test
mov
outsl
popa
sub
ljmp
ja
leave
mov
or
rcl
psrld
dec
scas
cmp
adc
inc
sub
es
mov
adc
jmp
push
gs
vcvttsd2si
push
jle
mov
add
cmp
xchg
out
out
xchg
fdivrl
repnz
pop
test
add
adcl
sub
nop
lcall
mov
ljmp
add
notb
pop
sub
adc
dec
aas
pop
dec
mov
rcrl
add
arpl
xchg
sahf
adc
cmpsb
cmp
jne
test
xor
adc
or
out
mov
inc
adc
jge
test
aas
or
and
or
or
xor
and
add
insl
fistpl
or
into
aaa
mov
jge
mov
lret
mov
jg
imul
pop
sbb
test
jno
out
xchg
sub
jl
and
fimull
cltd
xor
pop
jecxz
adc
pop
loopne
add
aaa
inc
dec
mov
sbb
jns
cs
ljmp
jecxz
in
or
test
notb
int3
mov
xor
ss
jl
movsb
and
jmp
xchg
inc
iret
xor
pop
cmc
out
mov
sub
mov
out
jb
jecxz
repz
and
clc
mov
and
clc
cmc
dec
sbb
pop
and
xchg
aad
in
pop
bound
mov
divb
push
xchg
mov
sub
add
cmpsl
test
mov
inc
adc
and
push
adc
decb
cmp
and
rcll
inc
daa
cmp
or
mov
xor
icebp
push
dec
pop
mov
pop
movsl
inc
inc
xor
pop
lcall
push
lret
jnp
lea
push
mov
xor
sub
sub
xchg
mov
daa
push
sbb
andl
cmp
pushf
enter
jp
paddsw
adc
dec
adc
fstpl
push
loop
mov
lea
or
ss
cmpsl
cmc
addr16
mov
cmp
sbb
stos
out
fwait
push
pop
xchg
and
or
in
lods
ja
out
sub
jmp
xor
scas
ds
inc
insl
sti
push
jp
cmc
shll
test
insb
movsw
mov
add
sbb
pop
inc
shl
and
data16
js
xor
pop
sub
cli
adc
and
cmp
rolb
jbe
fnstsw
ret
pop
cli
cmp
in
stc
push
xchg
ss
or
lods
mov
jae
push
add
roll
fldl
mov
and
dec
outsb
pop
cmpl
xor
push
and
icebp
mov
xor
popl
ljmp
repz
mov
jl
push
push
jns
inc
pushl
sar
daa
mov
das
in
jb
hlt
push
mov
fisttpl
cmpsl
fstps
jmp
data16
ftst
jno
leave
stos
inc
sar
adc
outsb
cmp
jne
mov
push
sub
data16
gs
dec
cmp
mov
lret
adc
mov
stc
or
test
or
pop
mov
stos
sub
pop
xchg
nop
xor
inc
dec
sub
lods
insb
dec
loope
fs
jp
adc
push
or
aam
dec
ja
xchg
arpl
and
mov
cmpsb
mov
or
cs
mov
mov
adc
xor
jg
cld
xchg
cwtl
sub
fidivs
and
xor
bound
and
or
lahf
fdivl
repz
push
shlb
xchg
ja
cmp
rcll
lods
lahf
jge
jnp
repz
sub
hlt
mov
hlt
mov
mov
xchg
sbb
pop
in
daa
jg
push
dec
jmp
mov
xchg
xor
arpl
or
mov
insb
nop
jb
pop
push
sbb
mov
adc
adc
loop
push
stos
jge
sbb
test
inc
mov
ret
jg
or
dec
cld
ror
fimull
sahf
icebp
out
enter
mov
adc
ret
push
and
ret
dec
push
outsb
popw
pop
fsubrl
jp
mov
inc
repnz
incb
jg
aad
jae
enter
pusha
or
pushf
push
shrl
loopne
repnz
aaa
mov
sub
pushf
sub
or
outsb
lock
push
xor
popa
cmp
jne
out
push
lcall
mov
jne
and
notb
and
aaa
mov
fwait
jmp
push
pushf
mov
arpl
pusha
jg
adc
jne
add
cld
mov
pop
add
cwtl
shrl
adc
push
cmp
sbb
aam
outsb
ds
notb
jecxz
out
fcoms
outsl
inc
fcomip
push
jb
sarb
adc
xor
stos
adc
or
mov
adc
call
test
pop
pop
in
mov
mov
mov
data16
xor
mov
pop
sub
test
push
pop
cld
mov
rcrl
notl
cmp
sahf
test
inc
in
ret
mov
es
lcall
aas
push
jns
fbstp
or
push
or
cmpsb
jno
xchg
in
test
or
mov
dec
jmp
push
jmp
cmc
scas
mov
pop
test
jno
jl
xor
mov
or
jp
pushf
in
mov
dec
push
icebp
push
lret
call
and
dec
jns
jno
inc
iret
or
adc
sbb
mov
int3
add
adc
scas
mov
mov
mov
mov
fucomi
or
inc
xchg
or
adc
jle
pop
in
and
pop
push
leave
int
lcall
cld
cmpsl
loope
push
mov
cli
jmp
sbb
push
mov
cmpsl
push
cld
or
out
ficoml
mov
jbe
pop
in
incb
int3
lret
push
xor
iret
mov
xchg
fcoml
cwtl
clc
leave
mov
lret
test
jne
test
fs
xlat
rcrl
and
push
lcall
dec
add
or
cmp
cmc
movsl
test
lret
insb
xor
clc
shrl
jnp
add
sbbl
test
addb
add
dec
mull
mov
imul
dec
loopne
imul
sahf
push
adc
mov
insb
iret
in
lret
mov
and
xlat
adc
xchg
mov
pop
test
inc
cmpsb
xor
cli
enter
arpl
mov
xor
pop
xchg
and
flds
addr16
in
lcall
pop
mov
cmp
adc
sbb
add
stc
pusha
jecxz
mov
and
push
test
push
adc
xchg
xchg
sbb
loopne
cmp
pop
adc
jns
add
mov
cli
xchg
mov
mov
pop
sbb
jp
enter
push
addl
jg
cli
and
mov
lea
sbb
in
xchg
pop
xchg
push
add
or
jmp
mov
xchg
push
loope
insb
fdivrs
loopne
cmp
jecxz
mov
mov
xchg
pop
push
add
aad
test
std
xchg
sbb
adc
inc
vphaddwq
inc
push
mov
jns
dec
shll
nop
in
fldcw
jbe
xlat
sub
mov
fcmovbe
xor
sarl
push
jmp
push
xor
stos
adc
daa
or
fnsave
scas
insb
mov
xchg
push
inc
jns
pop
mov
xor
jb
mov
xchg
mov
addr16
stc
cli
cmpsl
in
les
xchg
inc
pop
xchg
loopne
in
dec
sbb
das
sti
int
divb
pop
inc
xchg
subl
mov
dec
test
jge
insl
sbb
push
scas
out
or
cmpsb
movsl
idivb
add
lods
or
sbb
push
into
repz
add
xchg
out
scas
dec
mov
pop
and
and
cli
mov
repnz
jne
outsb
cltd
ljmp
sub
imul
insl
push
adc
test
inc
add
mov
lods
mov
into
or
inc
scas
out
dec
cmpsb
fs
mov
jmp
mov
pop
sub
mov
and
test
popl
push
mov
scas
xchg
loope
cmp
ret
sahf
shrl
mov
sbbb
and
push
push
lods
hlt
dec
lcall
roll
andb
fs
lcall
xchg
out
dec
fcompl
mov
lret
je
shrl
mov
cmpsl
jnp
daa
popf
cmp
out
popa
jo
sti
pop
xchg
xchg
nop
data16
add
xchg
mov
movsb
out
adc
cmpsl
sbb
inc
push
sbb
loope
lods
sbb
sahf
mov
xor
sbb
jl
cmpsl
and
sub
sar
inc
mov
adc
faddl
leave
repnz
add
and
dec
inc
mov
bound
xor
mov
mov
jle
mov
push
das
jg
and
ja
cwtl
and
sbb
enter
scas
inc
scas
rolb
mov
pop
and
cmp
or
loop
ss
mov
sbbl
pop
mov
int
inc
jb
add
jnp
cmp
and
mov
jecxz
cmc
inc
jbe
jle
pop
in
push
inc
pop
or
outsb
xchg
and
sub
or
mov
or
in
and
bound
test
movsb
call
and
cmp
dec
in
pop
ss
mov
pop
jno
out
dec
fisubl
mov
je
lods
sub
call
mov
scas
push
fisttpll
push
in
faddp
movsb
pop
je
xorb
inc
xchg
and
imul
mov
jb
or
pop
and
pop
xchg
sarb
int
out
inc
cwtl
lcall
pop
mov
mov
and
fidivs
push
dec
jno
icebp
adc
cmp
cltd
inc
clc
cmpsb
test
ret
outsl
cmc
lds
xchg
in
dec
scas
lds
or
roll
xchg
sub
dec
fistl
aas
shl
push
subl
xchg
pushf
adc
popf
cmc
xchg
inc
and
imul
out
fimull
in
mov
stc
adc
mov
sbb
xor
and
jae
or
xor
or
jno
ficompl
loopne
aad
stos
xchg
mov
out
push
out
jb
dec
ret
and
and
xchg
push
add
cwtl
leave
in
adc
cmp
aaa
cli
push
icebp
fisubrl
xchg
sub
movsb
sub
loop
sub
iret
cmpsl
or
mov
cli
scas
adc
and
insl
pop
jbe
xchg
or
cmp
int
loope
sbb
mov
in
dec
int
xchg
je
jl
mov
scas
cmpsl
jo
jecxz
mov
aas
lds
fs
add
rcrb
std
add
testb
add
push
aas
sub
ja
std
iret
dec
pop
xchg
sti
and
int
popf
push
in
daa
scas
and
dec
lds
mov
sub
in
insb
jb
jge
dec
jmp
cmpb
in
add
fdivrs
jno
movsb
loop
xchg
sbb
adc
out
stos
out
cmp
cli
cmpsb
add
xchg
push
push
sbb
mov
test
test
mov
xchg
and
mov
cmp
in
cmpsb
outsb
in
xor
imul
popa
insb
mov
push
jns
lock
rorb
pop
push
add
jg
aaa
shrb
bound
inc
repnz
mov
inc
push
mov
js
push
dec
jmp
aad
cmp
lret
pop
hlt
js
aam
push
mov
pushf
imul
mov
addr16
mov
xor
inc
fdivp
pop
cli
sti
aad
dec
test
push
pushf
add
mov
adc
pop
lea
jle
mov
sbb
mov
dec
xchg
adc
loope
inc
stc
aas
pop
in
sbb
jg
adc
mov
pop
dec
inc
out
mov
pop
cmp
dec
xor
push
pop
and
xor
in
inc
lds
jg
xor
jno
xchg
mov
lds
pop
out
jns
dec
jge
leave
jl
hlt
les
and
pop
mov
dec
jp
xor
insb
imul
inc
or
fiaddl
pop
loopne
jb
jecxz
dec
lea
dec
pusha
sub
xor
sbb
sbbl
lock
xchg
inc
xchg
stos
cmp
xchg
xor
or
mov
std
mov
testl
sbb
repz
add
jo
jns
daa
js
push
sahf
xor
test
cmp
jae
jle
iret
xor
push
inc
insl
dec
pop
aad
cmp
sbb
pop
dec
out
mov
push
lret
or
inc
mov
insb
mov
test
and
xor
pushf
test
enter
cmp
cmp
pop
jecxz
stos
icebp
je
stos
sti
mov
sbb
add
xor
push
pusha
std
or
ja
loope
adc
dec
pop
test
das
sub
rcr
loopne
int
sti
rol
add
dec
movlps
aam
movsl
aad
ds
or
push
scas
adc
pop
out
es
sbb
pop
ds
scas
decl
imul
mov
or
xchg
in
sti
pop
pop
test
mov
and
mov
dec
sub
sub
push
fisttpll
leave
mov
iret
or
icebp
lods
lock
fdivrs
inc
inc
movsl
sbb
adcb
std
loop
sbb
pop
lahf
inc
cmpsl
dec
mov
cmp
das
push
dec
das
pop
pop
std
inc
cmpsb
xchg
mov
cmp
clc
push
adc
lds
cwtl
inc
in
clc
or
jg
shr
sbb
arpl
cwtl
mov
mov
rdmsr
fs
cwtl
pop
push
out
pop
jno
movl
cltd
pop
jp
cmp
xchg
test
fbld
cmp
adc
enter
repnz
mov
sbb
adc
cmpsl
pop
idiv
pop
pop
mov
mov
xchg
mov
xchg
test
xchg
push
std
and
push
ret
push
pop
stos
sub
pop
sbb
mov
xchg
das
jne
xchg
adc
mov
jbe
jb
lret
push
pop
fistps
andb
stos
movsl
push
sub
inc
inc
lods
pop
and
xor
subl
stos
inc
mov
adc
push
ss
jmp
stc
xchg
add
adc
jl
mov
stos
sarb
aas
pop
push
xchg
push
or
cmpsl
and
jb
adc
addl
les
push
jae
mov
loopne
mov
cmp
and
out
jno
mov
fcoml
lods
out
mov
push
dec
jl
cmp
mov
lea
xchg
imul
mov
jle
test
pop
mov
aad
push
in
sti
inc
shll
cli
in
jl
sbb
mov
inc
cwtl
pop
clc
test
leave
xchg
mov
fldl
mov
cmp
sarb
inc
xor
and
call
je
div
int
or
jl
adc
mov
shrb
mov
test
fcomi
xchg
jg
aam
in
aam
or
sbb
and
inc
cli
movsb
jge
ljmp
fsubrl
stc
fdiv
sbbl
pop
roll
mov
mov
push
scas
imul
out
pop
adc
mov
xchg
fs
es
sbb
or
in
orl
lret
cld
jae
pop
xchg
imul
jl
jl
fwait
pop
mov
mov
test
xor
xchg
ja
and
adc
hlt
scas
pop
mov
test
test
decl
cs
cmp
mov
pop
lock
enter
mov
mov
cmp
pop
je
shrb
jle
xor
mov
xor
into
mov
iret
mov
add
xlat
xchg
xchg
mov
xlat
push
in
jbe
stos
adc
out
inc
inc
sub
sub
std
hlt
dec
outsb
rcrb
mov
ss
dec
xchg
insb
nop
pop
popl
scas
mov
clc
sbb
mov
jecxz
push
stc
sbb
jnp
rcrb
incl
inc
dec
imul
aam
bound
aad
dec
xchg
fcmovnu
pop
pusha
hlt
adc
push
sub
xchg
sbb
dec
das
cld
icebp
push
mov
xor
std
cmpsl
arpl
das
fcomip
inc
add
mov
rclb
adc
ljmp
das
xchg
aaa
pushf
pop
aas
cld
ss
push
inc
or
ja
and
imul
push
mov
imul
jns
push
push
js
loop
insl
mov
sahf
add
pop
inc
xchg
sub
jmp
jp
pop
into
adc
sub
lock
int3
dec
test
pop
fisubl
cli
ret
add
inc
dec
mov
leave
mov
lods
fwait
negl
cmc
or
adc
insl
inc
add
cld
push
jb
dec
lcall
sbb
sbb
std
add
test
adc
out
pop
jnp
lods
in
adc
sti
icebp
pop
pop
dec
xlat
fimuls
adc
or
call
pop
or
fiaddl
mov
jge
insb
push
das
ja
btc
ljmp
in
jno
mov
or
xchg
jnp
push
jge
loopne
clc
call
fnstenv
adc
xchg
das
rcrl
inc
loopne
bound
push
ret
addl
lea
ret
lods
enter
fnstsw
cs
adc
outsl
in
por
jnp
dec
cmpsl
cs
std
dec
movsl
aas
jae
les
in
fs
in
or
cli
ja
mov
in
dec
push
xor
int
adc
out
imulb
lock
cmpsl
mov
and
out
fsubs
je
xorl
dec
mov
and
mov
pop
arpl
stc
push
push
inc
xchg
lock
xchg
cltd
aas
push
xchg
dec
rcll
rolb
shrl
fistpll
cltd
xchg
inc
mov
testb
inc
mov
fldcw
ret
pop
push
and
rorl
push
cmp
subb
daa
xor
cs
xchg
int
pop
or
rclb
xor
sub
mov
cltd
push
scas
insb
call
sbb
adc
scas
insb
and
sub
mov
nop
icebp
ret
jg
pop
lret
lahf
aam
cmpsb
xor
scas
addl
xchg
out
sub
lret
pop
xchg
leave
insl
add
jle
leave
inc
jno
nop
or
inc
mov
sub
jnp
inc
xchg
jl
int3
dec
inc
jge
and
popf
stos
push
ds
sub
jnp
test
lret
std
popl
dec
sbb
mov
jbe
outsb
inc
dec
sbb
scas
cmpsb
mov
jl
cmp
bound
mov
subl
aas
aam
xchg
cld
es
repnz
sub
push
mov
cmp
push
add
adc
xchg
fbstp
ja
shl
jae
rorl
fs
pusha
inc
dec
notl
cld
jb
call
pop
mov
loope
repnz
adc
mov
and
or
in
dec
pop
xchg
xchg
mov
mov
loop
out
cmp
in
rclb
xor
and
ret
mov
cltd
es
sbb
push
addl
inc
das
xchg
dec
jge
push
sbb
ljmp
jmp
xchg
cli
jg
repnz
mov
popa
scas
sbb
rcl
mov
and
push
fldl
add
dec
xchg
lret
push
mov
mov
pop
lret
inc
push
and
mov
dec
xchg
adc
imul
jnp
push
inc
or
push
test
adc
fildl
dec
add
mov
je
push
lret
mov
jb
repnz
push
sub
pop
stos
rorl
les
or
or
popf
sti
outsl
cmp
push
cli
push
mov
or
pop
js
mov
gs
shr
bswap
pxor
pushf
sub
pop
sub
movsb
xchg
decl
je
shll
inc
fildll
fnstsw
arpl
lea
pop
test
out
cld
cmp
and
xor
ret
insb
inc
jg
int3
ret
inc
cltd
push
mov
rcrb
fldcw
popf
pop
ret
sub
add
out
lods
add
cmp
movsb
adc
test
mov
in
loopne
sub
sub
daa
xchg
cld
inc
leave
xchg
inc
les
mov
sti
outsw
fs
add
repz
add
mov
les
cs
xlat
inc
jp
clc
dec
or
sti
stc
or
cmpsb
dec
aad
rcll
mov
push
fisttps
push
cmp
test
xlat
mov
ljmp
pop
das
fstpt
cmp
aam
dec
cmpsb
jmp
fildl
push
mov
pushf
fidivs
jp
out
pop
je
addr16
xchg
push
lock
push
ljmp
push
mov
stos
xchg
dec
fisubrl
xor
fst
adc
push
jbe
arpl
aad
push
xchg
mov
add
xor
xchg
imul
aaa
push
pop
sub
or
outsl
xchg
jle
pop
out
lcall
jg
test
cmp
data16
ljmp
push
js
push
push
stos
and
cs
mov
xorl
stos
rcrl
mov
add
mov
sahf
mov
jno
or
adc
push
loopne
jns
mov
test
int3
adc
jbe
cmp
stos
mov
in
lds
mov
mov
cli
cmc
sub
lock
push
or
xor
addr16
and
xchg
sub
sbb
sbb
movsl
or
xchg
stos
into
inc
jb
std
in
pop
jae
call
push
adc
push
adc
pop
shlb
xchg
sbbb
mov
fcoml
pop
jmp
dec
ljmp
ljmp
mov
sbb
push
pop
dec
mov
gs
mov
in
mov
imul
sbb
cmc
add
imul
mov
lods
imul
dec
jg
mov
mov
dec
mov
test
pop
mov
inc
lret
jmp
cmp
pop
inc
mov
sub
incl
loopne
mov
pop
xor
add
and
inc
mov
pop
push
jne
mov
mov
push
xorl
mov
lods
or
gs
imul
add
xchg
push
xchg
lahf
mov
sbb
add
mov
ficomps
xor
ret
push
data16
js
pop
and
leave
jno
jg
mov
insb
or
repz
pop
or
out
stos
pop
push
fimuls
popa
xchg
mov
int3
hlt
cmp
scas
icebp
and
adcb
cmovl
call
cli
lcall
cmc
in
or
pop
popf
jmp
mov
mov
cs
sti
or
nop
xchg
mov
sub
roll
out
inc
iret
xchg
jne
mov
sbb
jnp
cmp
add
inc
xor
xor
xchg
push
dec
data16
adc
sbbb
inc
jb
sub
adc
cmpsb
xlat
pop
push
dec
push
cmp
jb
jns
sbb
out
test
es
fldl
lcall
pop
jns
in
negl
test
cld
mov
es
pusha
je
das
in
jb
mov
popf
cltd
cmpsl
inc
or
addl
frstor
xor
call
and
and
xchg
pop
inc
jb
push
fimull
stos
cmpsb
lods
pop
sbb
adc
fidivs
xor
in
sbb
jle
in
inc
scas
mov
pop
out
inc
jmp
sub
fiadds
jo
loope
arpl
std
mov
into
or
and
clc
popa
jnp
cltd
adc
fstpt
and
outsb
test
sbbb
mov
and
inc
scas
movsb
lock
jns
lods
dec
shlw
cmp
test
int3
rorb
inc
hlt
flds
dec
push
loopne
into
xchg
xchg
outsb
dec
jp
test
cmp
sbb
inc
mov
jnp
push
loope
ljmp
cmpsb
xchg
lcall
sub
outsl
xor
cmp
push
pop
xlat
push
mov
addr16
xchg
add
xor
aaa
sbb
pop
cmc
shll
lcall
imulb
lahf
in
enter
pop
popf
adc
push
mov
es
sub
std
jg
addr16
cli
lods
cmp
or
pop
sub
out
pop
adcl
cmp
fs
and
shlb
icebp
jp
dec
xchg
ja
xchg
es
ja
shll
push
inc
push
push
mov
stos
dec
xor
clc
test
xor
push
repz
sarl
adc
ret
fcompl
push
add
inc
cmp
xchg
lock
nop
roll
xchg
fisttpl
cmpsl
in
test
jge
inc
cwtl
rolb
mov
fnstcw
scas
push
stc
inc
mov
adc
in
and
sub
pop
iret
jg
int
mov
lods
adc
stos
xchg
lods
cmp
iret
mov
xor
movsb
loop
in
daa
mov
insl
add
adc
aaa
aaa
adc
loop
out
movsb
rcll
ret
test
or
inc
loope,pt
into
push
imul
out
ret
popf
test
xchg
add
push
je
in
in
in
mov
sti
lods
xorb
or
jne
and
das
xchg
sbb
inc
dec
mov
pop
inc
in
daa
into
movsl
sbb
sbb
repnz
or
ret
add
xchg
jecxz
push
ret
scas
mov
hlt
jb
jle
leave
jle
cmpl
test
adc
xchg
sbb
jmp
stc
test
movsb
divb
push
push
xchg
mov
sbb
xchg
adc
inc
into
jb
inc
mov
addr16
out
lods
icebp
adc
ret
or
dec
fcom
add
repz
or
pusha
es
mov
xchg
jns
jmp
push
xchg
jp
inc
stc
adc
mov
movsl
fnstsw
sarl
divb
cmpsb
xor
fmulp
loop
xlat
add
sbb
cltd
and
gs
repz
loopne
ret
arpl
jle
jle
fdivr
sbb
test
inc
stos
cld
lret
cmp
lret
cmp
dec
adc
and
sbb
loopne
cltd
stos
lods
sahf
movsl
cmp
stc
lods
je
push
mov
daa
push
fst
lcall
pop
push
adc
mov
push
push
fisttpl
enterw
mov
or
sbb
dec
iret
push
jle
loop
je
rorb
pop
push
xchg
xchg
add
and
add
jns
mov
daa
push
int
lret
je
testb
push
and
stos
xchg
sbbl
fwait
push
test
fisubrs
adc
enter
gs
pop
cli
nop
dec
insl
adc
add
xchg
jl
adc
add
xchg
sarb
add
das
mov
sbb
out
pushw
mov
mov
mov
cmp
shll
xor
inc
data16
test
add
sub
xlat
fnstenv
mov
xor
xor
xchg
repnz
fstpl
and
jno
pop
cmp
loopne
aad
push
mov
add
lods
cld
clc
in
jae
sbb
pop
push
test
xchg
addb
jo
sarl
adc
adc
std
push
sahf
sub
outsb
int3
cmp
jae
bound
and
outsl
stos
pushf
mov
out
data16
cmp
stos
xor
push
pop
notb
aaa
and
enter
orl
push
lods
leave
add
clc
loope
jmp
sbb
lret
daa
and
xchg
mov
nopl
addr16
pop
inc
clc
jge
std
mov
mov
dec
lock
dec
pop
xlat
ljmp
jnp
and
test
mov
xorl
out
push
inc
adc
mov
andb
icebp
sbbl
dec
pop
jge
mov
push
add
test
push
mov
and
int3
inc
lock
adc
in
dec
lds
mov
push
inc
jno
jnp
adcb
fcoml
addl
or
in
xchg
xorb
test
xlat
es
cmp
cwtl
dec
cmp
gs
shl
lret
sub
dec
xor
adc
cmc
pop
jecxz
add
xchg
jl
xor
pop
mov
lea
mov
js
lods
and
popf
cmp
test
jne
jno
mov
imul
jmp
jecxz
les
or
cmp
cmp
fimuls
mov
movsl
jecxz
lods
xchg
adc
out
repz
cli
sbb
pop
out
adc
fsubrs
ss
fists
cmp
sbb
mov
in
fsubs
xor
int3
ss
daa
jns
ljmp
shll
jge
repz
pop
movsb
jb
cmc
int3
mov
cltd
dec
mov
lcall
dec
stos
cwtl
pop
inc
loopne
sbb
repnz
bound
rorb
adc
sbb
xchg
xchg
jecxz
xchg
in
pop
repnz
xchg
sbb
cs
movsl
bound
fstl
lea
jg
out
sub
xor
gs
fdivl
add
insb
sbbl
jle
jbe
xchg
pop
cwtl
mov
into
mov
jmp
cmc
leave
and
mov
cmp
test
mov
xor
in
add
xchg
aad
and
cltd
sub
mov
outsb
es
insb
pop
mov
pushf
push
pop
mov
pop
mov
clc
inc
in
lods
and
jl
inc
sarl
xchg
sub
sub
loope
adc
mov
cmpsb
cmp
rclb
fs
es
add
cli
cli
pop
sub
cmp
sbb
arpl
push
outsb
mov
pusha
jo
push
mov
into
dec
xchg
and
cmpsl
mov
int3
imul
test
cwtl
js
test
stos
push
movsl
or
je
pop
push
movsb
in
aaa
mov
cltd
test
dec
int
aaa
icebp
hlt
mov
das
arpl
movsl
pop
scas
mov
jae
jge
pop
rcrl
mov
insl
lds
in
pusha
push
lcall
inc
imul
rcll
jmp
fwait
ret
mov
mov
divb
or
aaa
push
pop
test
test
test
cmp
sub
fwait
nop
adc
pop
imul
sub
popf
push
scas
xor
fucomip
jmp
xor
aaa
sbb
movsb
mov
xor
sub
jb
or
clc
sbb
in
in
and
cs
push
xchg
sbb
and
sub
jg
insl
outsb
pop
pop
cmp
mov
dec
adc
inc
sbb
ds
mov
mov
inc
jns
fisubl
mov
cmp
fsubrs
fadd
push
xchg
sahf
lock
inc
hlt
ret
mov
cli
xorb
inc
push
xor
loope
xor
xchg
bound
cmp
out
outsb
mov
pushf
sbb
jbe
lock
add
cs
sahf
int
lcall
ljmp
push
mov
inc
stos
xor
jns
xor
add
outsb
subl
jge
or
subb
jb
mov
dec
data16
push
cs
xor
mov
adcl
cmpsb
mov
fisttpl
and
inc
jae
pop
leave
leave
stc
loopne
adc
jmp
popa
add
outsl
adc
dec
daa
movl
fs
fcomps
push
rclb
testl
mov
mov
fld
mov
stos
and
sti
ja
fs
scas
sub
jae
mov
mov
push
mov
pop
dec
mov
in
or
push
push
es
mov
or
pop
fnstsw
pop
and
cld
sub
into
test
faddl
push
call
test
push
push
inc
je
mov
jno
imul
bound
adc
xchg
addl
cs
imul
cwtl
push
and
mov
loopne
push
mov
out
add
scas
ss
dec
xor
imul
xchg
mov
test
ficoms
push
cmc
mov
cmp
jp
mov
fwait
push
and
mov
int
pcmpgtb
mov
out
jp
xor
xor
mov
add
out
outsb
and
mov
test
push
and
sahf
int
sbb
outsl
cmp
xchg
out
icebp
push
xor
lahf
test
fcompl
or
mov
jp
outsl
push
mov
call
xlat
inc
aas
mov
add
cltd
cld
pop
sbb
arpl
pop
inc
or
pop
cmp
mov
test
cmpsl
insb
rorl
cwtl
cmp
mov
and
idivl
push
iret
hlt
std
push
jmp
daa
fbstp
int
dec
fwait
leave
jne
mov
fisubrs
fs
add
cmpb
or
xchg
jl
pop
mov
gs
pop
jb
mov
hlt
cmp
xor
lods
mull
add
bound
in
lods
rcrl
test
jno
push
cmp
jno
mov
xchg
fs
sahf
lcall
aaa
push
loop
jp
aas
inc
push
push
sbb
test
mov
jno
ljmp
and
dec
cld
in
cld
inc
lahf
lcall
popf
dec
xchg
stos
jg
int
or
icebp
jg
iret
mov
cli
insb
fimull
pop
add
push
xor
out
sti
push
ss
or
int
adc
pop
stos
pop
mov
or
mov
cmp
addr16
sbb
jg
or
ss
sub
xchg
inc
roll
scas
jnp
ljmp
sbb
or
pop
das
and
fidivs
out
add
push
dec
lock
aaa
movsb
inc
lods
push
sub
stos
dec
gs
in
sbb
add
ss
jmp
dec
or
repz
jg
pop
cmp
sbb
sbb
jg
xor
test
pop
mov
adc
sub
xor
xchg
xchg
pop
in
stos
daa
int3
fmull
xor
cltd
ror
sbb
ljmp
sbb
shlb
mov
inc
mov
ret
les
inc
test
lea
test
dec
ss
enter
mov
jmp
ja
dec
push
inc
les
int3
adc
ss
clc
xorb
push
popf
xor
mov
rol
ret
pop
cld
cs
test
cmp
push
cmpsb
incl
push
xor
jo
call
pop
outsl
cmp
frstor
scas
inc
fldl2t
jne
rorl
dec
sub
sbb
jmp
lds
hlt
inc
loope
divl
scas
das
push
fisubrs
mov
iret
out
or
bound
xchg
push
in
mov
push
pop
add
mov
push
dec
mov
and
mulb
mov
sub
decb
out
add
out
shlb
fistpll
lds
jecxz
lcall
imul
enter
mov
in
sarb
xchg
nop
sbb
adc
pusha
adc
and
xor
mov
imul
in
loopnew
adc
mov
mov
loop
or
aaa
pop
jle
test
xorb
ret
jg
fldl
jo
mov
pushf
sbb
pop
jle
sbb
mov
shlb
dec
cmpsl
repnz
lret
stc
jne
pop
cmp
addb
clc
loopne
cli
test
cli
faddl
mov
shr
insb
jp
xchg
add
adc
int
enter
out
xchg
dec
loopne
push
add
loope
mov
lret
test
adc
mov
jmp
sahf
fldcw
out
dec
ret
in
fmulp
and
jge
cwtl
lret
add
and
cmpsl
jo
add
xchg
xchg
sbb
push
push
daa
fildl
negb
adc
pop
sub
test
inc
fdivl
mov
testl
stc
and
push
in
int
pop
lock
pop
push
mov
insb
aaa
imul
es
pusha
adc
ljmp
push
addr16
mov
xchg
jae
lcall
push
in
js
daa
pusha
jns
pop
nop
cmp
call
clc
mov
fwait
incb
frstor
pop
out
sbb
dec
cwtl
mov
xchg
cmc
andl
lods
jmp
outsb
jae
mov
cmp
cmp
add
jbe
mov
jo
out
inc
or
cmp
xor
sbb
dec
or
mov
sub
loopne
pop
and
cli
sbb
dec
aas
lret
call
in
cmpb
xchg
sbb
mov
sbb
ret
pop
stos
adc
jle
js
popa
in
mov
jno
out
jnp
xor
les
pop
mov
pop
jge
shrb
mov
mov
data16
enter
xchg
arpl
stos
mov
clc
rolb
loope
es
and
fcmovu
pop
ret
xlat
dec
sbb
rcrb
cmp
sahf
loope
pop
out
inc
sbb
insb
pop
pop
movsl
inc
xor
test
mull
inc
cs
mov
xor
mov
loopne
dec
add
push
movsb
sbb
lret
cmp
sub
addr16
mov
shrl
add
out
movl
std
add
daa
jo
or
push
xchg
xchg
cs
jae
adc
sub
cmp
sub
adc
fwait
xchg
cs
and
fmulp
mov
xor
ds
jmp
pop
cmp
xor
out
xchg
out
push
enter
jb
inc
dec
out
sbb
es
mov
fdivrl
mov
mov
loop
outsb
mov
imul
je
xchg
push
shlb
arpl
jp
or
mov
cmpsb
cltd
push
pushf
mov
inc
xorl
lock
testb
out
or
dec
orl
jmp
inc
rcrl
or
sbb
jl
test
inc
pop
nop
mov
push
xchg
and
sub
xor
faddl
and
add
sti
lahf
fldcw
cmp
je
push
mov
shrl
loope
lahf
mov
push
fistpl
mov
es
cld
js
fisubrl
imul
or
pop
adc
ret
push
cmp
pusha
data16
add
mov
pushf
imul
ret
sub
mov
push
pop
shll
loop
pop
nop
cmp
arpl
mov
xor
cmp
fwait
stc
sbb
stc
cmp
sarl
mov
int
pop
pop
imul
cmp
dec
ror
cmp
xor
cmp
mov
jmp
cmpl
sti
jmp
inc
ljmp
in
pop
stos
inc
mov
push
add
adc
mov
loope,pt
rcrb
inc
mov
sbb
movsb
nop
dec
divl
mov
jmp
push
out
mov
dec
add
mov
sahf
call
jmp
mov
xchg
lcall
jb
adc
xchg
popf
and
and
movsb
movsl
rcll
add
mov
arpl
sbb
cwtl
into
out
mov
js
sbb
xor
data16
data16
lret
inc
push
cmc
mov
ret
inc
idivl
or
icebp
imul
inc
dec
push
mov
sbb
or
out
cwtl
mov
xor
adc
and
add
test
mov
or
test
cmp
push
pop
and
movsb
adc
push
mov
jge
adc
dec
dec
and
push
jmp
rclb
xchg
dec
daa
std
out
std
cli
pusha
imul
or
xlat
sub
push
popa
mov
jne
adc
out
xor
dec
push
pop
jg
sti
or
cmp
ror
push
lock
sub
lret
cwtl
shrl
dec
xchg
out
pop
popf
imul
inc
and
out
adc
cmc
gs
xchg
mov
leave
mov
mov
ds
xor
les
out
adc
pop
lret
push
lret
adc
stos
push
iret
repz
or
inc
jnp
cmp
lock
daa
cld
push
enter
mov
xor
imul
cmpsb
xchg
inc
xchg
xor
jmp
sti
aaa
aam
lea
arpl
xor
pop
or
jl
cwtl
inc
les
shrb
mov
movsl
std
cltd
fistpll
pop
jnp
xor
dec
repnz
lods
mul
inc
xor
sub
daa
push
push
xchg
scas
scas
push
cmpsb
lcall
ljmp
inc
mov
loop
repnz
dec
or
in
enter
mov
icebp
mov
add
std
sub
dec
sahf
pop
pop
sub
outsl
mov
out
test
dec
cmpb
aad
jb
out
mov
xchg
aad
scas
push
mulb
pop
mov
xor
mov
jns
mov
lret
or
mov
mov
rcl
sub
inc
daa
sub
push
pop
aaa
push
int
clc
icebp
out
mov
jmp
test
leave
add
dec
xor
in
dec
jle
lcall
jl
movl
xchg
inc
cmc
and
xor
cmp
inc
test
fisubrs
idivb
std
mov
lret
cmpsb
lds
ret
stos
or
pop
or
mov
ret
push
mov
xor
xlat
repz
pop
push
pop
and
fcomps
push
divl
movsl
xor
add
sub
and
mov
ret
push
scas
test
iret
cld
jle
or
lods
sub
pop
cmp
pop
fs
sbb
bound
cwtl
inc
adc
mov
push
orl
jns
lret
fmul
dec
sub
sbb
int3
je
and
xor
stos
pop
popf
mov
shl
das
in
ret
mov
daa
daa
ficoml
jg
push
dec
adc
push
das
rcrl
nop/reserved
fiaddl
xor
jae,pt
inc
rcl
mov
repz
out
mov
sub
dec
mov
cmp
fstps
jnp
pop
lahf
fidivs
mov
mov
xor
mov
ja
pusha
mov
mov
shrl
mov
stos
jl
std
sbb
cmp
outsb
hlt
out
jl
dec
pop
sbb
stos
dec
lahf
push
pop
test
push
or
insb
mov
mov
pop
sbb
jno
cmc
mov
push
cmp
inc
or
sbb
daa
lahf
mov
fdivrl
jl
je
pop
movl
lahf
mov
cmp
jmp
sbb
ret
int3
push
cltd
cwtl
push
and
jb
xor
mov
xchg
js
jne
ja
cmpsb
loop
loope
in
pushf
sub
test
cmpl
add
daa
out
sbb
test
movsb
scas
imul
dec
xchg
in
mov
mov
aam
aaa
popa
add
cmp
sahf
aam
mov
inc
std
mov
mov
push
sbb
subl
rcrb
nop
mov
fmulp
lret
ss
mov
lcall
mov
add
jl
ss
movsb
xchg
pop
pop
cmp
pop
jmp
sbb
xchg
nopl
and
xchg
icebp
fsubrl
sahf
rorl
hlt
cmp
adcb
stos
imul
out
inc
insl
lahf
push
xchg
cld
outsl
sbb
std
icebp
xor
adc
xor
loop
pop
jge
stos
mov
orl
xchg
int
scas
cmp
xchg
aad
mov
fs
xlat
xlat
loopne
mov
and
insb
pop
pop
cltd
sbb
mov
pop
fcoms
imul
out
mov
inc
adc
je
mov
sub
mov
int
pusha
or
mov
sbb
aad
mov
jecxz
adc
das
ds
cld
sub
lret
xor
pop
fmuls
aaa
cmp
test
aad
iret
lods
dec
push
outsb
mov
nop
inc
cmp
jnp
lds
into
xchg
jge
push
fistl
push
and
mov
inc
call
jecxz
adc
rcll
jns
shrb
fists
cs
fidivrl
movsb
push
push
jecxz
and
jno
pop
xor
or
jge
dec
jle
push
push
and
lea
mov
push
jle
add
cmovb
pop
cmpsb
enter
add
popa
xor
jne
outsb
push
rolb
push
jns
lds
out
shlb
in
lea
pop
and
out
in
push
push
repnz
movsb
xor
sub
adc
pop
sbb
mov
aaa
add
out
gs
push
xor
or
add
xchg
xchg
adc
leave
arpl
jmp
aad
test
pushf
sbb
adc
jae
cmp
inc
push
lcall
incl
cmp
xchg
push
push
jge
mov
sbb
les
loop
movsb
cld
sub
dec
scas
sub
nop
adc
repz
sub
out
sub
std
dec
mov
test
pop
and
stos
xor
or
pop
popf
lods
and
repz
into
jl
je
in
push
or
adc
adc
inc
xchg
ret
and
cmp
loop
out
adc
xor
movsl
sub
xor
xchg
scas
inc
cwtl
pop
jo
jbe
ret
in
ljmp
imul
add
scas
popa
push
dec
push
and
xchg
clc
mov
jo
repz
movsb
icebp
into
fsubs
or
adc
ficoml
arpl
mov
inc
sbb
les
sbb
arpl
jecxz
sub
push
cld
arpl
ror
pop
jl
sahf
stos
and
frstor
les
pop
xchg
mov
and
add
mov
test
mov
or
cmpsb
pusha
sub
cmp
mov
cmp
pop
adc
push
repnz
rcll
inc
fdivrs
ljmp
xor
mov
mov
jmp
dec
addb
and
in
inc
sub
movsb
xor
je
gs
add
inc
add
add
adcl
inc
sbb
test
pop
fimull
xchg
mov
mov
mov
mov
lret
jbe
mov
repz
clc
lret
popf
aaa
pop
je
adc
lahf
sub
xchg
fldenv
stos
aas
cli
jns
imul
loop
mov
mov
test
stos
jge
dec
push
xchg
iret
cmpsb
add
test
inc
pop
jns
xchg
cmpsb
fs
iret
sub
out
out
pop
mov
jbe
lods
push
clc
xor
jnp
je
xchg
pop
clc
lods
mov
fbld
repz
out
jbe
arpl
in
or
push
cmpsl
dec
inc
mov
shrl
push
mov
gs
push
add
mov
jbe
in
lea
cmp
push
or
dec
add
icebp
cmpsl
mov
push
in
cwtl
jb
inc
jl
fwait
test
jnp
jnp
xor
scas
ss
pop
add
int3
dec
mov
push
clc
or
adc
in
mov
add
jns
push
inc
mov
in
inc
dec
xchg
sbb
bound
mov
or
sti
lret
mov
xchg
add
cmp
inc
push
ljmp
push
xchg
icebp
adc
aas
jno
xchg
sti
lods
imul
mov
dec
movsb
rclb
xor
jne
iret
jno
dec
sti
std
rcl
push
repnz
mov
stos
outsl
or
mov
inc
in
jp
sub
scas
cld
xchg
and
fnstcw
lock
js
rcrl
pop
add
ret
push
pop
or
mov
mov
adc
or
in
arpl
ret
enter
insb
loopne
arpl
push
dec
push
fidivl
cmp
xchg
notl
clc
cmp
adc
jae
jnp
movl
inc
int
lret
and
dec
xchg
js
aaa
cli
fistpl
jne
stos
or
push
addr16
sbbl
lea
sub
pop
insl
pop
dec
lcall
jns
mov
xor
mov
sub
cmpsl
jnp
push
insl
outsb
inc
dec
sbb
or
mov
cmp
add
mov
mov
lahf
and
sbb
cmp
outsb
roll
sbb
pop
pop
scas
in
rcrl
inc
out
add
aad
pop
jp
pop
icebp
mov
xor
pop
lret
hlt
repz
ret
xor
mov
cwtl
jne
mulb
addb
xchg
movsl
iret
iret
add
lods
out
xlat
in
enter
scas
sub
sub
sbb
loop
aas
ret
ljmp
mov
jbe
cmp
mov
lret
stos
lock
xchg
pop
scas
jns
push
and
cltd
mov
adc
hlt
fstpl
test
cmpsb
sub
stos
jb
scas
test
mov
cmp
clc
jns
fldl
dec
push
insl
pop
or
nop
mov
loope
hlt
mov
fsubrp
push
and
test
imulb
pop
dec
inc
pop
sbb
or
fldt
adc
add
fldt
insb
sbb
cmpsb
mov
push
sub
clc
pusha
test
je
pusha
pop
inc
int
movsb
cmp
repnz
in
xchg
push
mov
fcoms
push
aam
ret
aaa
lret
mov
nopl
ret
bound
les
inc
test
ficompl
and
mov
jne
xchg
inc
sbb
sub
or
loope
lods
or
pop
mov
shld
fistpl
cmp
imul
inc
lret
or
cmp
repnz
imul
clc
test
xor
daa
adc
cmpsl
fisubs
inc
out
dec
nop
bound
xor
out
repz
xchg
les
sbb
jae
das
out
jae
jmp
rcr
imul
mov
inc
ret
or
fcom
lock
cltd
es
mov
repnz
adc
hlt
mov
loop
add
cltd
jle
mov
outsb
push
add
fsubs
por
or
inc
add
mov
add
mov
adc
sbb
add
pop
mov
xchg
dec
dec
dec
mov
aaa
sbb
gs
push
push
cmovne
in
or
push
push
xchg
mov
gs
sub
lds
shll
adc
sbb
mov
push
dec
jle
stos
mov
xchg
sbb
mov
xor
jl
pop
adc
leave
mov
icebp
gs
dec
iret
mov
pushf
add
aas
sub
call
adc
inc
stc
lahf
mov
push
mov
out
and
and
in
adc
lea
in
sub
rcl
adc
imul
js
push
es
or
mov
arpl
pop
fisttpll
mov
fbstp
hlt
dec
sub
dec
dec
push
cwtl
je
sti
ja
test
inc
sbb
in
lock
scas
scas
mov
cmp
inc
cmc
fwait
std
mov
ret
js
inc
jl
jbe
xchg
fnstsw
cli
jb
dec
gs
mov
pop
push
mov
or
pop
mov
pop
imul
in
shll
xor
jge
xlat
aad
js
daa
scas
in
xor
rcl
sbb
aaa
inc
punpckhbw
call
fsubrs
sar
mul
cltd
push
pop
push
rcl
insb
dec
adc
mov
xor
push
inc
idivb
dec
push
add
cmp
movl
das
push
icebp
sbb
xor
ja,pn
outsl
les
adc
xchg
repz
and
sub
movsb
fs
rcrl
fcomip
sbb
in
scas
imul
loopne
cmp
mov
and
cmc
mov
arpl
or
mov
in
mov
clc
push
mov
sbb
jecxz
mov
jne
mov
out
movsb
add
add
xchg
mov
jp
cltd
mov
pop
jbe,pn
push
xor
mov
cmpsb
xchg
testb
mov
push
scas
sahf
test
mov
dec
push
pop
ja
xor
adc
jp
out
mov
nop
jp
xor
jne
adc
push
leave
insl
andl
scas
movsl
xor
dec
dec
outsl
inc
cld
sub
stos
into
adc
insl
add
sbb
push
sbb
test
lret
dec
and
jl
scas
push
in
sbb
inc
dec
xchg
fsts
addl
mov
aaa
mov
pop
and
pop
clc
shr
insl
xchg
and
mov
aaa
dec
mov
add
inc
xchg
rorb
xchg
sub
cmp
ds
in
mov
jns
stos
sbb
pop
insl
xchg
rclb
pusha
enter
inc
decl
jl
lret
push
lods
ror
sbb
subb
fistps
pop
mov
sub
jl
pop
mov
cmpsb
fnsave
out
out
mov
ljmp
and
push
loopne
aad
aaa
fsts
mov
jp
rorl
sbb
mov
shll
push
notl
mov
or
sbb
xchg
gs
jmp
sbb
lahf
aam
cltd
sbb
adc
mov
stc
gs
mov
and
outsl
or
adc
cs
mov
aaa
ja
fs
cmp
pop
je
adc
mov
gs
clc
sbb
shrb
ljmp
fistpl
incb
fcomi
fisubrs
xchg
test
add
dec
dec
jecxz
adc
insl
mov
mov
mov
outsb
roll
ja
insl
xchg
cmp
adc
aas
mov
movsl
mov
adc
imul
jns
inc
push
dec
jmp
inc
and
add
fbstp
sbb
xor
mov
jp
push
jmp
jnp
xchg
push
andb
das
clc
loopne
test
lahf
aas
mov
push
pop
es
and
pop
push
out
pop
sub
cmpsb
mov
add
pop
mov
push
pop
inc
pushf
mov
mov
fstpt
mov
adc
or
lahf
cmpsl
ds
mov
cwtl
scas
xchg
pop
aad
mov
aad
sbb
arpl
inc
out
or
cmp
stos
cs
adc
push
jb
sub
cmp
xchg
jno
js
cmp
aam
add
hlt
mov
xlat
dec
cmp
mov
lock
mov
mov
out
pop
add
inc
int3
jo
icebp
rorl
push
jne
aam
jecxz
add
jp
pop
lahf
pop
xchg
lds
jmp
fiadds
xor
mov
cli
mov
add
rol
inc
dec
dec
cld
outsb
js
mov
push
push
pop
xor
enter
inc
clc
std
jecxz
xor
in
inc
or
mov
cmp
add
cmpb
mov
out
cmp
in
stc
jmp
stos
ret
push
imul
dec
pop
jnp
data16
or
xchg
dec
push
inc
jp
outsl
push
push
ss
jno
mov
imulb
cmp
rcrb
mov
lods
sbb
int
mov
xchg
jecxz
clc
sbbb
jge
loop
dec
jns
fisubrl
rol
imul
pop
shrb
lds
addb
in
dec
bnd
jl
mov
dec
jmp
xor
or
mov
into
xor
adc
test
dec
cmp
in
push
jnp
addr16
lret
inc
or
scas
inc
jmp
data16
test
mov
xchg
mov
dec
xchg
test
out
cmp
add
int
add
dec
mov
cld
cmc
or
xor
stos
fdivrl
mov
fwait
sub
mov
mov
mov
inc
loope
or
stos
enter
fcoml
mov
lcall
inc
clc
lea
decb
loope
jecxz
mov
test
xchg
incb
daa
outsb
xchg
lds
xor
lret
cltd
or
lahf
xor
pop
xor
pusha
sbbl
sub
iret
mov
push
aad
les
sbb
push
lods
push
cmp
cmp
call
jnp
movsb
lcall
push
sahf
incb
fcomi
push
sub
inc
lds
add
out
xlat
rcl
jb
dec
push
pop
iret
shrb
dec
pop
insl
popl
add
mov
push
jnp
nop
jne
lahf
sbb
fisubrs
jecxz
pop
mov
xchg
xchg
or
sub
imul
adc
dec
je
xchg
mov
sub
popa
shlb
cld
pop
aam
inc
int
es
mov
mov
xchg
mov
xor
test
dec
sti
stc
shl
inc
mov
cmp
into
or
inc
loope
fldenv
rol
aaa
notb
sbb
inc
fnstenv
inc
xor
or
mov
push
xor
sbb
das
cmpsb
lret
pop
outsl
xor
movl
add
add
sbb
rol
les
jl
js
sbb
test
daa
cmp
xchg
sub
add
and
adc
mov
out
xor
pop
cmc
dec
cltd
rcrb
xor
rcll
lcall
sbb
test
adc
cmp
pop
xchg
cs
lcall
sbb
inc
loopne
mov
les
inc
sub
loop
cmc
mov
xor
mov
icebp
in
cmp
dec
push
add
out
inc
aaa
rolb
mov
adc
std
mov
imul
iret
cmp
cld
and
cmp
aaa
adc
push
push
cmc
js
insb
push
sbb
or
pop
add
ret
in
hlt
fs
sti
test
fstpt
fildll
movsl
aas
lock
cmc
inc
int3
popf
lahf
pop
mov
inc
xchg
lods
clc
mov
add
add
fbld
insl
push
and
xchg
cmp
sbb
or
xchg
icebp
sub
iret
clc
aad
cltd
mov
out
nop
lcall
sub
sub
add
clc
lret
cmp
mov
in
mov
mov
mov
cwtl
sub
push
icebp
sbb
cmpsb
or
and
dec
sahf
mov
into
lods
and
mov
add
ljmp
add
test
cmpl
jg
lods
fdivl
lods
lret
pushf
aaa
push
sub
gs
push
ds
cmp
xchg
into
mov
xor
cltd
adc
or
mov
fdivl
jecxz
add
adcl
fs
orl
jg
nopl
in
fsubrl
aad
lret
loopne
dec
call
rcr
push
cmp
xchg
mov
and
mov
mov
loopne
jle
sub
cmp
adc
ja
jg
cmp
aas
inc
hlt
fsubs
push
shrb
es
fisubrs
sbb
sub
add
popf
in
in
imul
arpl
mov
sub
mov
push
int
into
shlb
mov
stc
in
out
out
in
mov
repnz
loopne
cmpsl
and
jmp
jmp
lret
addr16
mov
push
mov
inc
cmp
jns
xchg
xchg
leave
test
cli
cmc
shrl
clc
push
cli
push
imulb
rcll
and
xchg
cmp
mov
aad
dec
fistl
popf
mov
adc
shl
and
xchg
movsb
xchg
jb
sarb
mov
mov
add
and
dec
mov
and
popf
sti
scas
sahf
scas
xchg
jo
adc
fnsave
pop
mov
mov
int
push
pop
jae
cmp
xor
and
lea
stos
jno
xorl
dec
pop
aam
rcll
pop
xchg
jl
mov
xor
popa
daa
lock
mov
icebp
lret
stos
jnp
rol
sbb
pop
and
pop
gs
inc
repnz
test
xchg
mov
neg
cltd
or
sbb
aam
and
aas
jl
mov
clc
xchg
mov
ja
push
push
clc
pop
sub
rcrl
rcll
fwait
test
lds
jg
push
sub
cmc
sub
repnz
or
loope
sub
push
xchg
je
jno
sub
cmpsb
shlb
gs
fiaddl
cmc
aaa
dec
rcrl
dec
outsl
fidivl
in
imul
cmp
jmp
ja
ss
fsubrl
adc
mov
test
or
out
push
and
and
push
in
ficoms
lock
dec
mov
push
adc
jb
cmpsl
out
xchg
addl
orl
add
aas
pop
fcompl
mov
pop
lods
icebp
into
inc
add
cmpsl
loop
mov
orb
pop
dec
clc
or
sbb
mov
dec
inc
mull
lods
mov
out
mov
xchg
add
lods
cwtl
cld
hlt
out
xor
jae
sub
inc
dec
divl
mov
ror
dec
ja
sub
not
scas
mov
sub
jae
mov
inc
sbb
iret
xlat
sbb
jp
pop
cltd
movsl
aad
xchg
sti
stos
lods
pop
sub
dec
adc
adc
or
or
sbb
loopne
mov
pop
push
negb
adc
outsl
sti
fldt
das
enter
xor
sbb
add
addb
lock
and
pop
jmp
push
aad
lret
gs
fistpll
mov
lods
mov
jbe
add
push
jl
and
iret
push
sbb
xlat
cmp
sahf
add
out
cwtl
popf
in
inc
orl
xor
mov
loope
mov
out
inc
lahf
sub
add
xor
add
xlat
fldl
xchg
lds
ljmp
sarl
aad
repz
inc
ljmp
jmp
mov
enter
call
xchg
lds
xor
xlat
push
call
jnp
out
and
push
rcrb
in
outsl
fidivrl
add
push
test
outsl
dec
mov
test
stos
cmp
xor
shll
call
test
ret
lds
cmp
lods
mov
cmp
repnz
pushf
push
pop
fsubs
ja
lods
popa
out
sub
fists
les
inc
jnp
and
arpl
sbb
mov
pop
ja
fisttpl
mov
mov
cli
stos
push
es
cmp
jp
shl
and
test
xchg
xor
xor
cmp
add
inc
dec
ja
cld
je
les
loop
add
xlat
outsl
mov
xchg
je
and
or
mov
jo
mov
cmp
mov
cltd
lcall
in
aas
incb
push
cltd
loopne
sub
test
fsubrl
je
dec
and
jbe
js
sub
les
xchg
filds
adc
sti
rolb
jle
push
lahf
popa
dec
xor
push
sbb
aaa
inc
mov
int
ljmp
jecxz
ret
and
cmp
xchg
lret
dec
ret
and
mov
inc
jg
pop
xor
xchg
jbe
mov
mov
fildll
dec
test
jo
and
xorl
adc
cmp
mov
xor
icebp
shll
and
sarl
xchg
mov
adc
push
cwtl
adc
xchg
and
rorl
adcl
mov
jnp
and
sub
push
ret
js
mov
psraw
mov
dec
pop
repnz
mov
movq
out
sub
lock
push
sub
fwait
loop
lahf
cmc
sbb
mov
cmpsl
sbb
adc
lret
test
arpl
jge
sbb
xchg
cmp
push
rorb
in
pop
in
and
enter
mov
out
dec
shlb
pop
insb
outsb
mov
stos
adc
xchg
inc
sub
sbb
inc
jbe
sbb
dec
es
cmpsl
cmp
mov
adc
jle
push
lock
fisubl
add
movsl
mov
inc
add
int
bound
xchg
in
popa
call
inc
xor
adc
dec
jns
push
jl
clc
push
jb
sti
ja
divl
cmp
das
add
pop
mov
inc
mov
js
mov
filds
jg
pop
andb
imul
shll
shl
sub
dec
and
inc
in
ja
sbb
mov
mov
or
out
jne
adc
cmc
mov
xchg
mov
mov
cmp
cmpsb
mov
add
cmpsl
mov
fwait
and
dec
rolb
test
or
mov
xchg
cmp
sbb
ljmp
inc
es
xchg
popf
data16
scas
xchg
sub
xchg
test
and
andb
movsl
nop
mov
fwait
push
fcomps
aas
sub
jmp
mov
xchg
sti
sbb
cmp
dec
out
aaa
testb
je
cmpsl
add
test
out
pop
sbb
and
sbb
cmp
sbb
insb
out
aad
cltd
sahf
sarl
repz
dec
jbe
insb
rorb
add
sbb
cmp
pop
xchg
push
int3
adc
mov
aam
pop
push
outsl
addr16
pop
dec
sub
xchg
mov
cmp
das
push
cmc
mov
out
push
sti
mov
jp
mov
lcall
popa
int3
dec
loopne
fimuls
sete
adc
add
xor
adc
mov
push
push
mov
cmp
mov
js
lahf
inc
dec
ljmp
jmp
jl
jns
cltd
aas
jge
mov
fcomip
sub
and
call
xor
imul
dec
pusha
dec
xchg
or
je
add
mov
or
movsb
jno
insl
pop
cmpsb
mov
sahf
push
xor
inc
xor
pop
int
mov
lods
in
outsb
xchg
negl
adc
fbstp
lahf
cmp
rcr
and
aaa
dec
imul
adc
jecxz
dec
lcall
ja
notl
clc
pop
sbb
xor
jae
and
mov
aas
mov
imul
sbb
cli
or
inc
pop
adc
pop
ja
mulb
ret
leave
aas
cli
ljmp
cld
jp
add
mov
push
stc
or
cmpl
aam
sbb
popa
jns
add
addb
fsubrs
in
sub
test
cmp
mov
xchg
jg
mov
xchg
cmpsb
and
xor
imul
pop
xchg
sbb
sub
lods
cmpsb
incb
test
dec
jp
cmc
inc
pusha
rcr
pop
je
mov
xor
sub
aam
cmp
test
std
int
ljmp
inc
and
idivb
xor
inc
mov
mov
mov
std
sbbl
jp
mov
outsl
pop
fisubs
xor
lcall
jns
mov
jle
dec
lahf
xchg
pop
push
js
pop
mov
mov
cmp
push
push
rcll
into
aad
iret
ror
adc
popf
mov
inc
mov
xchg
icebp
in
stos
xchg
mov
rcrb
sub
mov
addr16
cmpsl
daa
insb
ljmp
cld
pop
test
sbb
pop
and
xchg
xlat
inc
inc
test
in
and
fsubl
mov
jecxz
loopne
xor
or
and
fwait
mov
push
sub
adc
fsubrl
xlat
test
push
mov
movsl
sbb
mov
mov
das
cmpsl
loope
jmp
test
cmpsb
dec
pop
jae
dec
sub
jnp
insl
xchg
mov
shrd
addr16
ret
ret
push
out
rcrl
popa
inc
scas
dec
stos
popa
movsb
cld
lcall
mov
xorb
sub
pushf
test
xchg
or
scas
pop
cld
mov
cmp
xchg
xchg
cltd
cli
mov
add
fidivrs
lea
out
add
sbb
cmc
int3
mov
outsl
popa
and
test
bound
pop
imul
xorb
sbb
icebp
xor
pop
test
cmp
lods
cld
lret
add
sbb
shlb
ljmp
push
shlb
xchg
dec
lcall
add
cmp
insl
xchg
or
mov
movsb
movd
sbb
inc
inc
rorb
hlt
xchg
fdiv
popa
sti
lahf
pop
out
jl
xor
push
sbb
sub
bound
or
sbb
jge
out
loopne
test
xor
hlt
or
xlat
add
mov
mov
les
nop
ret
call
mov
jnp
mov
push
mov
jbe
mov
xchg
lea
push
mov
ret
cmpsb
notl
mov
push
push
nop
inc
icebp
dec
push
aas
loope
pop
pop
outsb
les
cmp
mov
roll
pop
mov
outsl
ret
dec
addr16
leave
pop
sub
pop
pop
ljmp
loop
popf
pop
and
dec
sbb
sbb
mov
jmp
sahf
push
scas
pushf
mov
xchg
pop
add
pop
sbb
pushf
popf
ret
mov
dec
mov
dec
leave
and
lcall
int
insl
iret
sahf
imul
pop
arpl
xor
xor
test
aam
xchg
pop
in
lret
jo
fucomp
loope
mov
out
insb
or
pop
cli
loope
mov
pushf
movsb
add
movsb
aam
sbb
mov
pop
xchg
rorl
cmpl
pop
sbb
imul
clc
dec
shll
xor
lcall
std
dec
pop
jle
jae
or
inc
repz
xchg
push
loop
scas
jae
int
xchg
xchg
adc
sub
vmovntps
in
lahf
pop
lds
inc
arpl
mov
je
scas
mov
shll
lret
leave
dec
ja
jp
mov
popfw
jne
dec
cmpsl
repnz
fstp
mov
in
test
xor
or
fs
xor
dec
push
mov
in
xchg
lds
or
stos
cmpsl
mov
mov
imul
shlb
push
mov
int3
push
jnp
cld
inc
adc
mov
aad
stos
inc
add
out
jp
ret
das
fstpl
dec
jmp
jmp
mov
ret
jle
push
and
cli
stos
sarb
mov
jae
ret
jmp
lea
pop
and
jb
mov
pop
adc
pop
cwtl
div
jg
inc
add
adc
popf
cltd
jnp
xor
arpl
andb
mov
sub
and
in
xchg
pop
sbb
inc
cwtl
lea
lret
pop
jg
popf
and
jmp
push
out
mov
lods
sbb
lret
hlt
ljmp
movsb
out
je
jo
inc
cmp
mov
pop
shll
add
mov
xchg
mov
fiaddl
sbb
out
fwait
shrl
inc
iret
sahf
mov
inc
or
add
call
test
jp
cmpsl
movsb
sbb
jge
mov
cmp
ds
adc
fwait
jbe
inc
clc
mov
pop
jb
inc
stos
aam
xchg
lea
pop
mov
and
ficoml
stc
jno
aaa
lods
or
fstps
push
inc
dec
xor
dec
push
jb
mov
loopne
mov
xor
and
push
push
dec
push
dec
pop
rclb
push
nop
sbb
int
sbb
fwait
cmp
jl
dec
or
pop
rcrl
jns
pop
ficoms
jl
cmpsl
mov
arpl
push
cmp
sbb
cmp
sarb
leave
scas
xor
test
push
test
fnstsw
dec
rcrb
sub
sub
fisubs
shlb
add
adc
in
test
push
inc
pop
xor
cltd
pop
inc
mov
ljmp
pop
sub
dec
les
mov
add
rolb
or
jl
ja
out
jno
cmc
mov
mov
bound
mov
push
ljmp
push
mov
pop
xchg
pop
push
sbb
ss
pop
and
or
jns
mov
mov
jns
fnsave
data16
enter
fs
cmp
push
lock
push
adc
insl
mov
cmpsl
or
lods
push
mov
lds
mov
fsubrs
fimuls
loop
push
push
inc
push
fs
xchg
mov
in
sub
lds
jge
sub
cwtl
scas
out
pop
and
lret
or
or
and
sub
out
inc
cmp
mov
jl
daa
stc
out
popf
push
mov
mov
push
addr16
mov
int
fmulp
jb,pt
ja
adc
mov
sbb
fdivr
pop
subl
call
xor
jge
add
and
lret
lret
mov
push
test
icebp
js
push
fidivl
dec
mov
adc
sub
std
popf
cmp
cmp
mov
test
and
inc
dec
dec
adc
mov
in
cld
push
insb
int3
clc
jb
cmp
mov
pushf
or
xorl
and
fldcw
and
mov
cmp
lret
mov
cwtl
arpl
aas
jmp
rcr
inc
test
mov
jp
xor
sbb
lret
push
push
pop
insb
out
sub
dec
shlb
mov
es
or
out
shlb
add
in
jo
cmp
rcrl
jl
fdiv
rorb
int
inc
add
ret
push
and
jb,pn
dec
or
rol
dec
mov
xchg
fdivs
ret
mov
hlt
sti
clc
gs
xchg
inc
pop
imul
fsubrl
or
pop
cwtl
ja
lea
mov
xor
idiv
gs
dec
pop
and
loope
adc
sub
inc
pop
lret
shlb
mov
ror
fcoms
outsb
inc
push
jo
aad
xor
cli
and
inc
dec
jno
xor
ja
stos
fnstcw
mov
or
cli
push
arpl
mov
push
aas
xchg
cld
ss
cmp
mov
out
fdivs
pop
out
repz
jbe
inc
daa
pop
mov
data16
push
push
ljmpw
sub
inc
xchg
or
mov
scas
mov
push
mov
pop
js
mov
push
repnz
sbb
push
sbb
push
add
outsl
aas
xor
push
popf
add
push
fwait
outsb
xchg
inc
xchg
xlat
pop
fdivl
adc
jnp
push
xchg
add
mov
shll
imul
or
mov
pop
add
aaa
scas
sub
fsubrl
add
jno
lret
add
pushf
loop
out
mov
insb
or
mov
mov
lods
push
aas
int
push
add
sub
aam
in
cmp
sti
in
sbb
pushf
cli
jae
mov
dec
mov
jbe
fnstenv
imul
xchg
xor
gs
xchg
aad
adc
mov
in
out
lea
les
pop
inc
inc
lret
in
inc
xchg
cmpsl
cld
inc
dec
cs
mov
ljmp
dec
lods
sub
xchg
les
into
jne
add
mov
sbb
push
pop
mov
jmp
or
stc
sbb
mov
fdivp
fdivrs
xchg
add
jb
inc
cmpsb
testl
rcrb
aas
jg
jg
add
ret
xor
aaa
out
repz
rcl
ret
shl
cltd
sbb
addl
lds
xor
cmp
mov
and
add
jnp
sub
jg,pt
loopne
mov
cmp
fs
push
sub
stos
scas
pop
daa
dec
mov
adc
or
xor
and
ljmp
fstpl
mov
imul
pop
shrl
clc
xor
dec
xorl
sub
call
js
add
outsb
cmpsb
rcrb
sub
ret
adc
js
inc
inc
add
mov
ret
insb
push
cmp
stos
and
xor
fdivr
nop
xlat
dec
jg
sti
push
sbb
jmp
call
fs
in
ljmp
repnz
add
out
out
xchg
into
jg
cmc
mov
pop
jne
stc
and
sub
int3
xlat
jnp
out
pop
roll
push
jae
add
test
dec
aas
cmp
add
outsl
dec
mov
stos
vpsubsb
or
mov
pop
adc
movsb
add
mov
xchg
ljmp
fdivrl
cld
jmp
shr
int
push
xchg
in
or
lea
imul
sbb
mov
ds
adc
imul
mov
push
push
mov
add
push
aad
xor
mov
adc
cmpsl
add
movsb
mov
sti
sbb
movsl
rol
jle
inc
fdivl
or
mov
sub
mov
xlat
xor
ret
mov
mov
fdivrp
popa
xchg
sti
out
data16
shrb
adc
mov
in
add
inc
push
je
mov
cmp
mov
lods
in
mov
lea
inc
adc
xchg
out
xchg
jbe
and
enter
add
ds
ret
xor
in
mov
fidivrl
jo
sub
les
pushf
adc
pop
jge
xchg
jg
jo
xchg
enter
dec
lods
aad
dec
ljmp
pop
sub
ret
insl
adc
add
dec
imul
out
lcall
xchg
pop
pushf
loope
pop
data16
push
xor
jecxz
loope
dec
icebp
mov
jge
ret
dec
daa
xchg
popa
vmaxsd
add
sub
jno
pop
inc
sub
js
fsubrl
pushf
and
lcall
pop
data16
sbb
neg
dec
pop
xchg
bound
fldcw
out
jnp
jmp
cmp
insl
imul
pop
cli
jns
gs
jns
pop
sub
sub
std
mov
pop
mov
xchg
sbb
cld
pop
scas
stc
cwtl
das
cmp
rcll
stos
jno
test
test
call
push
dec
mov
sub
inc
lods
xchg
push
add
shlb
pop
js
add
dec
mov
dec
push
jne
sub
std
mov
sub
pushf
fbld
mov
and
out
ss
in
out
xchg
inc
cmpsb
jp
aas
adc
pop
jg
loope
mov
and
jl
xor
setb
mov
inc
fildll
mov
pop
push
xchg
ss
push
shll
and
jb
lock
cmc
stos
cmp
pop
lahf
daa
mov
out
inc
movsl
jmpw
mov
mov
cmpsl
xchg
xchg
je
push
push
lret
dec
js
popf
xchg
sbb
jnp
jge
cmpsl
mov
add
aas
psubd
sbb
xlat
ficompl
jecxz
xchg
jl
and
pop
int3
mov
lcall
les
lods
sti
jmp
repnz
fbld
mov
pop
fwait
pusha
lret
pop
lock
add
adc
adcb
scas
jl
or
or
push
cmp
sarb
in
dec
dec
lcall
push
fwait
bound
addr16
in
call
cmp
repnz
cltd
mov
ss
mov
push
mov
jg
movsl
jge
mov
dec
aam
and
push
stos
adc
int3
mov
jp
mov
iret
movsb
inc
push
xchg
or
jle
cmp
clc
xlat
jno
jmp
jl
sbbl
test
ja
xchg
mov
cli
int
jp
mov
pop
fdivrs
mov
add
mov
lea
sbbl
adc
adc
into
xor
jmp
push
call
cld
in
or
jp
jno
ljmp
imul
xchg
hlt
fbld
ds
jecxz
or
gs
js
mov
into
imul
ds
cld
rcll
mov
shrl
les
adc
mov
pop
and
push
es
mov
jl
arpl
stos
cmp
mov
or
lahf
lea
push
sub
inc
lret
cmpl
dec
dec
loopne
mov
inc
lcall
and
inc
sbb
aad
push
movsl
mov
mov
and
pop
sbb
in
mov
mov
cmp
mov
stc
xchg
mov
jo
cmpsl
dec
xor
iret
stos
loopne
and
nop
loop
lock
int3
jb
in
cld
inc
out
jmp
cmp
shrb
sti
add
xor
es
js
aaa
lods
sbb
add
cmovle
cmp
cmp
inc
outsb
mov
jmp
adc
out
leave
cli
das
add
push
pslld
lret
lods
xchg
nop
fldl
dec
cmp
repnz
andb
ds
push
sbb
in
jp
cs
stos
mov
fcompl
sti
or
jecxz
sbb
imul
faddl
vmaxss
mov
scas
lock
arpl
mov
pop
dec
repnz
sti
sahf
out
scas
jo
lods
jle
push
gs
sbb
pop
pop
sub
rolb
jmp
push
insb
cmp
outsb
loopne
sbb
subl
js
mov
test
scas
sub
dec
xchg
jo
adc
inc
add
sub
pop
scas
or
gs
sbb
dec
xchg
dec
ror
pop
out
insb
adc
and
mov
shr
or
adc
in
push
imull
icebp
icebp
cmpl
cmp
mov
sti
xor
push
cmpsb
es
add
in
xor
rorb
pop
out
sub
rclb
and
cmp
das
adc
iret
sub
stos
stos
aaa
xor
jmp
loopne
adc
cmp
pop
push
aaa
gs
sti
lods
les
sub
add
pushf
push
lret
mov
stos
stc
loopne
sub
test
int3
addr16
loopne
mov
mov
pushf
dec
jge
push
cmc
sub
pop
sbb
push
fcomps
dec
scas
int
and
push
push
xchg
cmpl
dec
jg
or
fwait
pop
cmp
aas
lret
cmp
addb
or
scas
bnd
jnp
and
push
dec
ficompl
movsb
or
std
mov
mov
sub
outsl
outsb
mov
mov
mov
std
scas
test
insb
fldenv
and
test
cmpsl
cmp
mov
out
ret
xchg
test
jmp
jb
pop
lods
jae
pop
scas
aas
lret
mov
and
stos
addl
fnstsw
jno
xor
jmp
mov
rcrl
cmpsb
xchg
subb
xchg
fists
arpl
push
sbb
dec
cmp
in
jg
test
lods
dec
inc
xorl
mov
push
and
data16
in
div
inc
sub
imul
mov
addr16
std
xor
inc
push
data16
cmp
test
enter
lods
adc
jmp
js
sbb
or
repz
mov
mov
movsl
in
call
aad
sti
or
push
pop
cmp
jmp
sbb
dec
popa
repz
adc
xor
paddsb
xchg
stos
cmp
test
icebp
xor
sbb
fistpl
rorl
and
cwtl
inc
sbb
pop
movsl
push
jne
cmp
jae
mov
push
rcrb
loopne
xchg
ss
outsl
bound
pop
movsl
cmp
aam
rcll
int
inc
mov
dec
add
pop
push
cltd
test
xchg
sbb
mov
scas
or
inc
lret
std
es
adc
out
outsl
out
leave
repz
and
and
cmc
mov
pop
push
mov
jle
leave
loope
xor
mov
add
call
test
pop
insl
jno
in
xlat
pop
mov
dec
js
jecxz
jg
push
jns
cs
pop
bound
lods
jmp
dec
sti
cmp
push
outsl
cmp
push
jle
or
std
jb
and
or
xlat
jle
jg
pop
push
xchg
inc
dec
dec
adc
movsb
jbe
mov
or
mov
and
push
lods
lcall
push
sahf
xchg
add
lea
sub
movsl
add
cmc
cmpsb
sti
cld
cwtl
add
mov
pop
jecxz
popa
cmp
push
cmp
or
pusha
out
lods
inc
add
je
loope
add
aaa
xor
ficoms
push
test
popa
outsl
xchg
loopne
xor
lahf
cld
cmc
or
inc
jp
cmp
xchg
push
jp
sti
test
mov
push
je
sbb
out
and
pop
and
fdivrl
sub
mov
inc
mov
mov
inc
cmp
sub
loopne
repz
pop
aas
mov
inc
fxch
test
scas
and
out
push
add
pop
scas
lods
inc
inc
into
cmp
push
lock
mov
cwtl
sub
pop
sub
xor
xchg
movsl
and
cmpl
jecxz
add
xlat
xchg
gs
lret
or
jnp
in
fistps
mov
xor
popa
cmc
sub
lods
mov
daa
fisttpl
lock
pop
pop
int
sub
sub
jmp
or
jno
jmp
xor
dec
push
in
inc
cwtl
popf
call
push
mov
aaa
pop
sbb
mov
adc
xor
psrlq
pop
pop
pop
jmp
lret
mov
push
mov
cmp
js
mov
push
out
fs
lcall
shlb
mov
cmp
jne
xchg
cs
dec
pop
pop
xor
outsl
jl
repnz
fldt
sub
out
fdiv
mov
lret
fsts
sahf
xchg
stc
adc
pop
xchg
rcl
inc
jno
sar
dec
xchg
jb
jecxz
hlt
sub
fcmovnu
push
popa
adc
in
push
push
testb
lds
shll
fwait
mov
mov
push
lcall
cltd
xchg
mov
or
dec
add
ficoms
sbb
scas
jbe
gs
sub
sti
mov
cmpsb
out
das
adc
jno
mov
dec
mov
iret
xchg
mov
cld
clc
ja
call
fsubl
jecxz
xor
dec
sbb
xor
jecxz
mov
stos
mov
stos
icebp
adc
cmp
lret
pop
adc
repz
inc
push
and
fsubrs
fldenv
pop
daa
repnz
mov
shrl
mov
push
mov
mov
push
dec
in
in
or
jnp
xor
js
cmp
mov
xchg
lods
mov
inc
in
xlat
outsl
push
dec
mov
jmp
pop
cmp
stc
das
rorl
out
cwtl
in
xor
fwait
in
xchg
sub
repnz
push
hlt
mov
inc
sahf
pop
mov
mov
mov
jmp
jo
push
and
add
sub
lahf
mov
push
xlat
pop
mov
in
int3
jl
xchg
push
xchg
xor
ss
fidivs
mov
test
outsl
aaa
ljmp
push
sar
popa
inc
shlb
cmpsl
mov
leave
jmp
sbb
inc
mov
cmp
jns
lret
fistpl
and
add
adc
pop
ljmp
mov
mov
add
test
and
xacquire
addr16
mov
arpl
cmp
cmp
mov
mov
jle
jle
das
lea
dec
leave
outsl
and
lods
aaa
gs
jae
sub
outsb
testl
cmp
adc
dec
mov
mov
inc
mov
popa
add
clc
in
pop
and
inc
mov
aas
ds
xor
imul
mov
int3
adc
push
movsb
dec
test
loop
dec
sbb
adc
clc
bound
imul
mov
sbb
vmovdqa
in
xchg
xchg
push
jno
adc
inc
ficomps
movb
mov
hlt
jge
push
jb
lods
dec
ljmp
mov
cs
bound
in
mov
mov
or
dec
and
insl
push
aam
add
push
cli
and
lcall
dec
sbb
test
lock
mov
jnp
adc
dec
xchg
ret
jmp
pop
inc
sbb
mov
ret
movsl
mov
push
shl
sbb
push
mov
mov
and
xchg
pop
push
fwait
mov
iret
ret
xchg
xchg
push
cmp
sub
inc
mov
addr16
in
lea
sub
mov
mov
mov
mov
xor
xchg
mov
xor
das
outsl
jne
imul
mov
cmp
jnp
into
mov
mov
jmp
negl
push
popa
repz
adc
gs
mov
add
push
push
icebp
xor
lahf
add
and
push
jmp
sti
lods
test
dec
scas
pop
movsb
cmp
adc
or
and
leave
daa
pusha
pop
xor
mov
xchg
daa
jg
ret
mov
push
data16
pop
cs
pop
repnz
sarb
cmpsb
add
int
inc
mov
xchg
jns
icebp
loop
mov
sahf
in
inc
mov
rolb
imul
jmp
je
mov
leave
fwait
insb
xchg
fnsave
fists
jae
into
jae
das
cli
rorl
movsl
mov
js
stos
fldt
push
and
arpl
cmp
aam
add
pop
stc
mov
xchg
cltd
mov
daa
pop
aaa
xchg
mov
flds
outsb
inc
and
mov
lods
sbb
mull
cwtl
xor
cmpl
xchg
fmull
rcl
shl
bound
inc
jbe
pop
xchg
push
inc
jns
push
jno
aad
add
cmpsb
cld
push
repz
sub
inc
popa
mov
jle
rclb
sbb
daa
mov
lods
cmp
shl
in
repz
inc
out
adc
fsts
cltd
scas
jns
pop
pop
stos
nop
cmpl
add
jge
mov
fcomp
xchg
mov
mov
xor
clc
xor
shlb
aaa
or
in
outsb
aad
outsl
shl
jae
mov
xor
popa
xor
aaa
in
scas
inc
or
xor
sbb
jmp
mov
js
or
inc
fwait
cli
mov
clc
addr16
and
aaa
pop
addr16
aas
dec
dec
pop
mov
inc
push
cmp
jp
int3
mov
inc
or
adc
loop
xor
mov
lea
push
nop
lcall
inc
rcll
push
and
cwtl
jno
setl
cmp
int
push
jl
sub
lahf
cmp
stos
cmpsb
scas
pop
ja
and
stos
push
inc
xor
xchg
inc
loopne
xchg
pop
cmp
push
jmp
test
jecxz
dec
mov
in
dec
mov
jnp
sbb
sub
xor
stc
ds
cmp
test
fs
imul
pop
push
cmp
jno
icebp
mov
rcll
pop
outsl
std
cmc
inc
je
jne
xchg
imul
fmuls
add
jbe
jno
shr
xchg
out
adc
outsb
cli
cs
into
jecxz
nop
pop
fsubrl
push
adc
push
popa
push
test
inc
daa
push
dec
lret
jo
pop
ror
ret
cmpb
dec
mov
lods
insl
push
adc
or
jbe
lock
xchg
gs
addl
xchg
dec
js
dec
ja
ss
popf
cmc
or
jmp
ljmp
movd
lret
pop
ja
lret
inc
sti
ljmp
mov
inc
adc
xor
mov
push
fistpl
scas
and
inc
pop
lods
fistpll
js
lcall
stc
or
mov
or
adc
ret
hlt
push
mov
inc
inc
sub
mov
cltd
lret
cmp
andl
inc
inc
sbb
adc
push
in
mov
push
mov
and
les
repz
jno
mov
ja
popf
adc
jp
xchg
int3
cltd
xor
in
adc
cli
pop
jb
jne
xor
xor
test
mov
push
jg
push
call
in
and
rolb
shlb
mov
in
repz
xor
mov
xchg
adc
ds
xchg
push
arpl
xchg
mov
and
int
insb
int
aad
outsb
inc
jbe
inc
cmp
out
inc
push
xor
mov
sbb
scas
out
mov
push
dec
je
push
sti
push
and
lods
cmp
inc
arpl
dec
out
mov
int3
pop
inc
aad
bound
cmc
add
push
jns
sub
repnz
rcrb
push
fldt
aam
hlt
jp
push
in
neg
pop
push
mov
cmp
pop
mov
pop
clc
sbb
decl
outsb
cmpsl
cld
cmp
mov
xor
mov
movsb
movq
sub
xchg
pop
push
adc
lock
add
adc
pop
and
push
pop
mov
test
ds
cmpsl
push
lret
xchg
mov
int3
mov
testl
fwait
notb
or
dec
sub
jne
xor
loope
test
and
jle
or
jp
mov
into
jo
jecxz
jae
jmp
jns
cmpsl
push
sbb
push
mov
sub
ljmp
or
mov
jecxz
out
loop
sbb
stos
push
in
jmp
pusha
and
xor
push
sub
and
add
or
aaa
jmp
sbb
enter
mov
call
pop
or
and
cwtl
add
gs
adc
scas
pop
stc
xchg
push
movsb
fistps
loop
sbb
mov
xor
add
fucomi
imul
xor
cmp
pop
or
jae
push
ja
and
xchg
stos
fcmovnb
gs
pusha
negl
cmpsl
inc
cmp
lock
or
jmp
in
lods
pop
rol
push
call
inc
xor
rcrl
sub
adc
or
mov
xchg
pop
test
fs
fwait
inc
addb
outsb
cmp
or
or
add
fimuls
push
xor
cld
inc
lahf
push
jp
outsl
cmp
cli
out
idiv
loope
loop
push
fmull
mov
and
out
xor
es
sbb
cmp
cmpsl
sbb
jnp
jb
int
mov
das
ficoms
jmp
les
shll
mov
cld
ljmp
ds
fsts
ret
push
fidivrs
sub
sub
imul
sahf
sti
out
fcoms
insl
cli
dec
rorl
in
inc
inc
mov
in
fcomi
inc
mov
inc
mov
loop
adc
sub
and
dec
jae
js
shlb
sub
dec
out
fldt
lock
mov
adc
aaa
std
in
xor
test
xchg
loope
movsb
ja
pop
and
addr16
das
in
shlb
xor
mov
dec
pop
loopne
js
mov
pop
out
jne
iret
mov
cs
mov
test
xchg
out
aad
ss
and
cltd
push
inc
loop
adc
xlat
cli
push
jl
mov
les
pop
insb
pop
xor
lcall
adc
pop
sti
cld
std
pop
outsl
testl
cmp
jo
into
clc
hlt
xchg
repnz
xor
test
sub
arpl
std
cs
pop
jo
mov
cltd
cmp
xchg
cwtl
movsb
mov
lret
pop
fdivrl
shrb
sbb
xchg
mov
aam
inc
inc
xchg
cmc
inc
in
test
in
dec
js
push
sarb
xchg
lahf
mov
sbb
mov
jmp
mov
pop
out
pop
and
mov
shll
mov
sbb
nop
xlat
push
mov
pop
or
xchg
or
sub
dec
push
push
push
aam
mov
loopne
stos
pop
cmp
movl
subl
cmp
dec
dec
sbb
jmp
push
lahf
sbb
loop
push
mov
outsl
ds
inc
pop
shrl
incb
dec
push
xor
mov
mov
repz
sub
cmp
xor
or
jo
lds
dec
data16
mov
fcmovu
out
and
ja
sub
xchg
adc
popa
dec
nop
imul
les
ds
stos
sub
sbb
ss
cltd
sub
fcomp
or
mov
mov
jecxz
es
fwait
loope
push
rcll
mov
sbb
jecxz
mov
lock
decb
add
jbe
lods
mov
arpl
pop
fsubl
pop
test
int3
jbe
fsubl
sbb
mov
pop
movsl
sub
mov
mov
xchg
mov
sub
int3
testl
movsl
ret
pop
sub
in
add
movsl
pop
jns
cmp
sbb
ficompl
sbbb
sbb
pop
clc
xchg
aad
pop
pop
gs
out
popf
inc
sub
cmpsb
repnz
cmp
sub
jp
fildll
mov
push
sub
cmp
jmp
cmp
lods
outsb
stos
pop
push
dec
or
insl
sbbl
in
rclb
sahf
bound
mov
and
jle
and
cs
pop
aam
fdivrs
dec
icebp
inc
sub
imul
pop
or
xchg
dec
outsb
push
cmp
lds
ret
push
push
sar
aad
cmpsb
iret
icebp
loop
jl
sbb
cmpsl
mov
ret
fdivr
pop
jl
lcall
arpl
jo
mov
mov
inc
scas
xchg
test
lahf
fs
pop
cmp
jle
nop
xor
cmp
sahf
cwtl
mov
sbb
lcall
loope
add
ljmp
jle
icebp
add
mov
add
scas
jno
mov
fldt
add
mov
xchg
dec
aas
js
jg
repz
std
sub
xor
ret
ss
mov
mov
inc
jbe
or
add
pop
mov
mov
and
jne
xchg
out
test
mov
xchg
push
mov
in
inc
subl
nop
xchg
sbb
test
sbb
or
dec
jle
jp
xchg
sub
in
loopne
jg
dec
push
sub
add
fsubr
int3
insb
aam
jecxz
ja
mov
xor
jae
jo
fwait
dec
jle
sub
mov
outsl
mov
mov
imul
test
jge
inc
or
mov
out
adc
mov
push
into
lods
out
pop
out
out
or
pop
fnstcw
mov
repz
lcall
mov
inc
jl
adcb
push
lods
aad
js
mov
andl
rcll
mov
jle
mov
xor
push
arpl
sub
and
sbb
mov
and
sahf
mov
and
push
jmp
adc
xchg
fidivrl
or
push
aam
hlt
sub
and
mov
out
fs
cmp
ja
sbb
out
in
pop
in
mov
xchg
shll
ljmp
maskmovq
idivl
pop
in
into
sub
add
xor
push
jae
addr16
or
jecxz
ljmp
fs
mov
addr16
and
jb
xor
hlt
cwtl
adc
jmp
addb
lods
or
dec
test
add
and
add
push
pop
xchg
cli
in
push
lahf
int
sti
imul
or
test
push
je
dec
and
outsl
stc
insb
sub
call
add
js
xchg
fs
out
sbb
cmpsl
or
push
rorl
in
push
scas
jmp
sbb
push
and
jb
mov
nop
push
cwtl
orl
pop
inc
enter
dec
fnstcw
dec
cmp
push
icebp
sub
in
push
dec
out
sti
mov
mov
xlat
scas
push
jns
mov
push
cmpsl
xchg
fdivrl
shr
sahf
sub
mov
inc
jl
aas
adc
fstpt
and
xchg
mov
movnti
xchg
es
cld
ret
popf
out
cmp
mov
mov
or
lea
push
pop
or
mov
scas
push
xchg
test
xor
repz
jne
scas
sbb
add
or
pop
xor
cmp
xchg
xor
fmuls
dec
cmp
jp
mov
xlat
push
jmp
movsb
xor
lcall
stos
leave
dec
xchg
dec
adc
inc
fucomi
xor
fsts
addb
test
fs
repnz
jno
dec
in
jle
iret
outsl
xor
jmp
mov
cltd
repz
shll
stos
mov
in
pop
cmp
out
repz
or
mov
jbe
icebp
imul
es
aas
rcrl
mov
jp
mov
jmp
pop
jmp
icebp
out
in
mov
inc
adc
or
out
dec
js
fstps
pop
aas
xchg
inc
lds
popf
lock
roll
addr16
in
xor
inc
repz
pop
out
inc
or
mov
filds
clc
rcrb
rorb
mov
cmp
idiv
jmp
in
pop
sub
sub
jl
cmp
loope
adc
xchg
jne
xor
jns
aaa
fsts
ret
popa
cs
sbb
std
mov
lods
test
dec
repnz
xchg
add
or
push
sub
jo
test
add
lcall
out
xchg
cmp
decl
in
loopne
lock
repz
mov
sbb
fmull
mov
es
fs
push
iret
adc
dec
inc
adc
inc
or
xchg
out
xchg
aam
xor
push
jo
jl
popa
jmp
pop
pop
pop
addr16
adc
iret
repnz
fistpl
push
jne
cmp
subb
mov
test
roll
sub
mov
adc
fstps
sarl
mov
arpl
dec
xor
jae
push
add
xchg
add
nop
pop
inc
repnz
sub
cmpsb
pusha
sbb
push
mov
xchg
iret
jns
stos
sbb
xchg
jo
sahf
ret
add
mov
fs
adc
push
push
jo
and
push
data16
out
mov
aas
xchg
cmp
into
jne
or
push
xchg
cmp
imul
pop
movsl
int3
cli
lock
pop
stos
and
mov
loop
sbbb
cld
and
in
js
push
fnstsw
push
push
imul
loope
mov
sbb
mov
sysenter
pusha
mov
push
stos
inc
stos
add
out
call
test
cwtl
insb
popf
pop
adc
mov
push
imul
nop
sbb
sub
das
leave
add
pop
hlt
addr16
mov
aad
xchg
add
addb
xor
mov
sbb
add
cmp
mov
sbb
add
dec
stc
hlt
pop
sub
shrl
daa
push
test
addr16
fstl
inc
roll
push
and
xor
or
mov
movsb
mov
cmp
inc
lahf
out
lods
daa
pop
xchg
gs
in
xor
adc
cs
mov
pop
or
out
sarb
mov
add
movsl
mov
mov
enter
pop
imul
cld
and
dec
aaa
leave
jb
popf
loopne
add
lcall
xchg
stos
out
pushf
sbb
push
push
inc
jo
popf
lea
sub
sbb
and
inc
lea
int
scas
test
dec
sub
aad
push
adc
jecxz
xchg
ss
fiadds
sub
or
and
sbbl
sahf
jg
andb
or
mov
or
sub
jecxz
push
sub
jbe
ss
jnp
sub
cld
mov
jae
scas
cmp
pop
xor
sub
cltd
mov
in
inc
pusha
xchg
inc
push
jbe
or
pop
pop
dec
daa
popf
add
addb
jne
push
jge
xchg
mov
call
lret
pop
notb
inc
lret
add
das
sub
out
push
adc
cs
sub
shll
jne
xorl
sbb
outsl
push
orl
pop
xchg
ss
pop
and
iret
dec
mov
and
dec
pushf
outsl
int
and
and
jno
inc
cmpsl
mov
or
mov
movsb
push
mov
mov
outsb
mov
cmp
test
shll
mov
and
lock
add
xchg
ret
push
cwtl
mov
jge
insl
lahf
mov
cwtl
jmpw
mov
bnd
or
or
add
or
gs
cmp
mov
fisubrs
icebp
repz
fucomi
xchg
mov
fmul
arpl
fcmovbe
cli
imul
inc
stos
lret
hlt
pop
ljmp
sarb
sub
shr
add
xlat
xchg
add
jmp
enter
out
int3
icebp
iret
es
mov
stos
xor
popf
inc
aam
inc
sub
imul
incl
scas
cmpsb
inc
pop
jecxz
stc
fld
mov
out
mov
fsubs
jno
and
mov
xchg
loope
pop
cmp
daa
xor
or
adc
jl
in
or
cmp
xchg
adc
in
mov
adc
sbbl
into
push
fs
xchg
les
lock
aaa
xor
push
inc
stos
gs
out
data16
inc
push
pop
push
jle
mov
and
or
add
add
mov
adc
loop
adc
outsb
mov
fmulp
sti
xchg
mov
out
out
insb
sub
push
je
push
lock
neg
cli
jne
out
fwait
call
xchg
leave
cmp
pusha
fnstcw
pop
inc
lret
push
pop
mov
pop
cltd
dec
fistpl
push
stos
cmpsl
sub
loopne
aam
sbb
pop
push
sbb
inc
lods
xchg
rolb
pushl
iret
test
daa
pop
jnp
insl
adc
or
xchg
bound
push
cmp
and
lea
nop
lock
shll
sysexit
call
imul
ja
rorb
into
mov
sub
out
arpl
movsl
inc
or
test
mov
xchg
hlt
insb
push
fucomp
fsubrs
cwtl
in
in
pop
cs
push
jmp
lcall
sti
cmpsb
xor
cmp
mov
xchg
sub
jae
jge
dec
js
stos
lds
sbb
movsl
cld
mov
popf
loopne
or
int3
push
stos
mov
or
jp
fs
cmpsl
and
or
inc
mov
ljmp
push
pop
stos
mov
addr16
cmpl
mov
xchg
pop
or
dec
enter
nop
jno
lods
pop
mov
inc
push
add
loop
mov
jecxz
xor
movsb
jo
push
jg
dec
jns
orl
add
or
cmp
mov
push
addr16
or
pop
aaa
xor
shlb
aas
adc
fnstcw
adc
jecxz
popf
mov
or
aam
loopne
inc
or
aas
ss
ljmp
je
xchg
push
xchg
adc
xchg
mov
cmp
fimull
add
or
ljmp
fcmovbe
inc
fstpt
dec
dec
xor
cmc
fwait
dec
notb
out
pop
pop
pusha
ljmp
dec
cmp
aaa
push
push
rolb
ljmp
dec
cli
mov
jg
mov
cmp
sub
pop
xlat
test
jg
mov
daa
pop
push
cmp
cmp
or
enter
ficoml
fucomi
mov
sub
cmc
stos
jmp
les
mov
add
xchg
push
insb
mov
or
jb
insl
loop
cmp
int
fisttps
imul
pop
test
pop
push
push
push
inc
div
out
mov
or
sbb
mov
in
int
jnp
call
sub
or
add
call
mov
and
jb
out
mov
outsb
xor
mov
inc
cld
idivb
cs
or
je
sbb
add
pop
xor
xor
and
scas
add
and
insl
pop
cmp
out
mov
xchg
mov
bnd
pop
es
push
dec
fs
lock
push
inc
lods
leave
dec
test
mov
sbb
sbb
inc
int
cwtl
inc
in
movsb
mov
testb
mov
cmpsb
mov
in
mov
call
push
popa
push
mov
mov
test
ja
inc
aad
pop
jecxz
sbb
push
nop
insl
pop
into
incb
icebp
repnz
xor
sbb
std
fs
cwtl
xchg
push
sbbb
push
sbb
aaa
arpl
or
fucom
pop
inc
pop
subl
add
jge
jb
scas
fisttps
jb
push
xchg
or
xchg
mov
and
ret
aam
aad
push
nop
iret
pop
xchg
enter
idivb
sbb
cmp
sahf
push
fdivs
inc
imulb
movsb
mov
lock
bound
push
filds
test
pushf
fldcw
xlat
fisttps
cmc
aas
out
insb
jnp
sahf
xchg
mov
mov
and
mov
cmp
pop
push
dec
movsb
ljmp
and
push
aam
mov
adc
in
xor
jne
inc
das
mov
rorb
clc
movsl
imul
nop
mov
mov
push
sar
ret
adc
sti
inc
sbb
or
inc
andb
adc
mov
clc
sub
inc
lret
mov
mov
pop
movsl
cmp
pop
in
lock
lods
outsb
jg
cmc
cmp
cmp
pushf
sub
ret
loop
push
pop
mov
sbb
cmp
pop
loop
in
iret
xchg
cld
cmp
dec
stc
fs
add
rcll
jns
loopne
xor
ret
sbb
sbbb
cs
ds
dec
pop
in
jge
dec
ficomps
lods
loopne
cld
pop
pushf
ret
cmpsl
fnsave
pop
addr16
sbb
aaa
andl
inc
js
xchg
push
cmp
xlat
repnz
fstp
in
mov
and
ljmp
andl
lods
rcrb
adc
mov
inc
mov
js
fucomip
xchg
and
xor
pop
fwait
jl
push
idivb
repz
outsl
jecxz
cmpsb
test
fimuls
lods
sbb
subl
pop
xchg
add
int3
inc
test
lret
push
fists
fnstenv
cmpl
imul
xchg
repnz
push
jnp
jmp
int3
loop
mov
or
ret
mov
scas
adc
cmp
fisttpl
cmc
jge
ja
bound
inc
sti
lds
inc
pop
stc
xorb
call
pop
bound
psubsw
int
out
pop
lret
std
rcl
mov
aaa
xor
sub
lret
ret
mov
push
push
and
jmp
outsl
cwtl
mov
test
jnp
fwait
ror
shlw
int3
mov
mov
sbb
mov
loop
movsb
sbb
push
cwtl
jge
sbb
push
scas
out
dec
mov
xchg
mov
fmuls
jne
pop
pop
dec
xchg
movsl
imul
sbb
cmc
mov
cmp
into
inc
ficompl
inc
in
jmp
mov
cmc
imul
dec
sub
cmp
das
cmc
jmp
lods
xchg
push
push
insl
mov
xchg
inc
dec
cmp
adc
jl
ja
pop
pop
or
xor
sbb
das
aam
pusha
jne
test
movsl
cmp
shlb
push
sub
loop
aas
pop
ja
rcrl
sbb
out
or
xchg
ljmp
and
cwtl
inc
xchg
loopne
adc
mov
test
dec
stos
pop
mov
xchg
mov
adc
icebp
xor
lea
into
cld
je
add
jmp
repnz
pop
sub
lret
jmp
or
in
xor
dec
rolb
jle
adc
movb
jmp
sbb
idiv
enter
scas
sub
daa
mov
ss
adc
test
push
pushf
xchg
xchg
pop
loop
test
lods
imul
inc
or
in
xchg
fxch
cmp
insb
mov
push
push
cmpl
mov
out
jp,pt
mov
pop
mov
push
jp
pop
cmpsl
adc
mov
jno
pop
dec
rcr
add
xchg
or
pusha
addr16
adc
jbe
push
jg
popf
sahf
leave
out
xchg
jne
iret
push
paddsw
pop
ds
pop
repnz
lock
add
push
dec
mov
cmc
mov
inc
adcl
cs
add
sub
insl
mov
jae
outsl
les
aas
cmp
adc
xchg
mov
mov
push
loop
jmp
mov
and
adc
int
push
mov
jno
cld
stos
in
sbb
out
pop
hlt
mov
shll
mov
adc
xchg
jb
enter
out
push
push
mov
pusha
inc
add
and
xlat
enter
inc
sub
call
push
outsl
cld
jb
sub
and
and
sub
daa
pop
push
jno
daa
push
mov
enter
or
jb
dec
inc
addr16
add
jo
fcmovnb
fistpl
fadd
dec
pop
push
or
mov
mov
pop
jae
ss
or
popa
mov
dec
aas
stos
push
jp
adc
call
fsubrs
mov
arpl
decb
cld
lret
loop
data16
cli
cmp
push
cmp
movzbl
clc
or
mov
mov
push
add
and
movsl
jge
sub
or
loopne
adc
xchg
jecxz
sub
sub
mov
into
or
xchg
repnz
shr
testb
pusha
xorb
loope
movsb
and
xchg
jmp
fs
test
mov
sahf
mov
sub
push
fucompp
cmp
icebp
pop
or
int
dec
dec
xchg
xchg
daa
data16
repnz
cmpsb
dec
mov
mov
jnp
fucomp
mov
adc
pushf
xchg
movsw
xor
insl
cmp
les
lods
and
xchg
push
daa
js
movsl
in
jmp
imul
lods
in
imul
std
pop
push
pusha
sub
and
jne
pop
sub
jae
aaa
xchg
xchg
dec
mov
jg
push
ficompl
repnz
jl
and
stos
jns
je
add
aas
push
mov
jecxz
fldcw
stos
sbb
dec
into
jne
fistps
cmp
cmp
fbstp
ljmp
sbb
cmp
dec
iret
int
push
leave
xchg
clc
pop
arpl
sbb
aam
mov
sub
push
sub
dec
adc
in
test
leave
cs
popa
popf
jno
lahf
movsl
dec
aaa
cmp
cli
das
rclb
dec
adc
andl
add
sbb
mov
dec
pusha
andl
es
add
inc
inc
pop
xor
in
sub
loopne
cmp
test
and
in
sub
push
cmpsb
push
and
pop
mov
lock
jmp
stos
xchg
subl
and
add
stos
lods
lock
add
paddusw
jnp
push
aad
cmp
fcmovbe
or
push
push
std
orb
enter
sub
dec
pop
inc
sbb
add
rorb
xchg
xor
sbb
sbb
inc
in
mov
pop
jb
fdivrs
xchg
aam
ror
int
pushl
mov
ds
pop
daa
push
ret
push
sahf
out
lea
hlt
mov
outsl
jnp
filds
aad
adc
inc
cmc
or
xorl
out
push
push
sub
stos
xchg
xor
sub
lods
repz
pop
mov
nop
xchg
cs
icebp
push
jnp
ss
cmp
dec
add
inc
cld
movsb
or
cmc
mov
ss
cmpsl
sbb
inc
sbb
mov
rcrb
icebp
es
mov
dec
add
and
xchg
or
xchg
nop
mov
mov
mov
xlat
cs
xchg
dec
xor
sbb
adc
sbb
sub
into
insb
dec
sub
xor
sub
mov
inc
pop
xorl
cwtl
jnp
rep
scas
fdivr
pop
les
addr16
mov
aaa
cltd
iret
hlt
xchg
loop
roll
and
add
cmpsb
dec
push
or
test
ftst
into
enter
push
cwtl
nop
pop
lds
lret
adc
or
pusha
add
pop
loop
dec
xor
adc
mov
cmp
mov
icebp
sti
test
ds
addb
push
inc
mov
sbb
adc
cmp
push
mov
xor
and
mov
sub
xor
into
dec
repnz
pop
mov
cmp
sti
mov
fdivl
sbb
lods
sahf
inc
insl
inc
pushf
jp
sbb
gs
push
and
stos
mov
adc
addl
add
xchg
jne
mov
add
imul
dec
add
pop
mov
cltd
xor
aaa
orl
push
add
cmp
rorb
in
xor
dec
outsl
mov
push
push
scas
cltd
cli
mov
adc
ja
out
cli
jmp
aad
sbb
inc
cmp
stos
mov
test
add
sub
inc
rorl
fdivr
testb
push
cmpsb
jo
mov
cmpsl
mov
push
jle
dec
inc
lock
repz
pusha
xlat
or
inc
fmull
fsubrp
jge
out
mov
stc
jnp
dec
fcoml
jno
leave
rcl
jno
movsl
mov
adc
and
mov
xchg
inc
aam
push
pop
adc
std
js
jecxz
jo
and
in
mov
add
pop
push
add
add
push
test
sub
out
ds
pop
arpl
dec
clc
andl
mov
test
test
ss
sub
mov
pop
cmp
push
push
push
sahf
movsb
pop
jl
sbb
lds
jecxz
xor
mov
jnp
push
jnp
js
push
sahf
push
mov
test
pop
stos
mov
fsts
pop
jmp
aad
iret
mov
fcoms
cwtl
ret
cmp
adc
movsb
mov
arpl
jbe,pt
mov
sub
mov
icebp
lcall
sbb
les
xor
loope
pop
test
cld
sub
mov
js
mov
lahf
pop
test
cltd
lahf
mov
xchg
sti
pop
mov
loop
imul
cltd
cmp
clc
pop
scas
sbb
arpl
mov
imulb
adc
out
daa
in
fldt
popf
jp
aas
xor
pop
stos
enter
ret
push
dec
aad
jg
adc
addl
sub
and
pmaddwd
dec
scas
movsb
sub
fsubr
adc
xor
js
pop
sti
mov
lret
int
inc
je
test
pusha
cli
push
lock
xor
cmp
jmp
mov
mov
inc
nop
lret
out
dec
xor
ja
mov
cmc
add
push
pop
add
push
push
mov
mov
adc
adc
loopne
hlt
lahf
hlt
dec
scas
and
lahf
push
sbb
lret
push
pushf
pop
push
and
mov
mov
sbb
lock
int3
xorb
adc
push
sbb
xchg
mov
inc
cmp
cwtl
hlt
mov
mov
rolb
pushf
mov
inc
repnz
xor
mov
sub
dec
addb
inc
movsb
out
movsl
dec
rolb
and
pop
mov
adcl
pop
leave
push
shrl
inc
cmp
inc
jo
and
je
pushf
rorl
or
mulb
or
push
add
popa
fcmovnu
push
dec
jnp
aaa
mov
cmpsl
xor
ds
in
fstps
or
popa
xchg
shlb
fnclex
scas
xor
inc
push
mov
inc
daa
pusha
roll
mov
sbb
mov
scas
sbb
cmpsl
adc
in
les
adc
ret
sbb
jl
cmp
stos
stos
mov
lods
push
ret
rolb
and
test
sbb
testb
js
cmp
int
xor
push
rorb
shrl
jmp
cmp
cmp
dec
fidivs
xor
mov
out
push
sbbb
dec
ljmp
pushfw
and
in
out
int
ret
mov
adc
je
jg
int
scas
push
lret
push
xor
add
sbb
fisubrs
out
xchg
hlt
adc
mov
add
outsl
je
into
mov
push
mov
lods
sti
mov
clc
xchg
fisttps
mov
push
mov
pop
ss
out
push
inc
data16
fisubl
pusha
mov
testb
ret
push
fmull
lcall
enter
adc
jbe
pop
jecxz
jecxz
pop
inc
xlat
mov
bsr
aam
jb
jo
outsl
jmp
jmp
mov
and
imul
mov
xor
lds
add
fs
xchg
and
aam
dec
inc
test
aam
dec
cmp
cvtdq2ps
arpl
lret
loope
lods
dec
dec
xchg
sub
xor
fs
xchg
mov
gs
mov
xor
push
test
mov
jl
cwtl
rclb
fcoms
bound
jmp
shrl
out
aaa
ds
scas
sbb
loopne
ss
scas
pop
fstpt
pop
xchg
es
std
in
jmp
std
fs
out
cwtl
leave
xor
push
sub
or
sub
cs
mov
sarb
add
sub
jnp
pop
pop
fwait
jno
sbbl
mov
call
jl
sbb
lret
jl
and
fwait
lahf
jae
xchg
xchg
test
mov
shll
out
add
cld
cmp
and
inc
dec
pusha
mov
push
adc
or
into
in
enter
jne
in
mov
jno
je
sbb
fmuls
dec
sub
aas
mov
cmpsl
jne
mov
or
mov
adc
cmpsl
shlb
sbb
mov
jecxz
mov
dec
pop
test
mov
repnz
adc
frstor
movzwl
pop
test
loope
out
test
nop
sub
cmpsl
imul
lret
cmp
not
sahf
loope
mov
in
jecxz
dec
inc
aad
mov
lods
cmc
lds
adc
mov
cmp
jg
push
cmp
shlb
pusha
adc
or
add
cmp
mov
aaa
ja
adc
adc
sub
pushf
test
scas
mov
sub
and
mov
lahf
pop
or
dec
call
mov
dec
shlb
adc
jp
mull
and
sub
addr16
mov
adc
stc
fdivrs
jg
mov
stos
dec
jne
push
push
jg
daa
cli
data16
aad
add
and
lods
sbb
inc
adc
add
mov
mov
rcll
test
xor
dec
sub
rcrl
das
das
lret
cs
fwait
sub
in
or
aam
push
xor
lea
sbb
fwait
lock
mov
sub
ret
cmp
mov
mov
daa
inc
inc
lods
enter
mov
ret
or
imul
stc
js
std
inc
add
popa
fdivrl
cmp
into
cmp
sbb
inc
in
push
jle
aam
sbb
xchg
sbb
inc
sbb
xchg
adc
je
lcall
pusha
dec
cmp
fdiv
dec
jnp
jo
iret
sub
pop
cmp
push
add
test
jae
vpmaxsw
jnp
movsb
cmp
pop
pop
mov
in
mov
hlt
icebp
cli
pushf
sbb
cltd
xor
fdivrs
dec
jae
fnstsw
mov
aad
cmp
xchg
pop
inc
mov
call
les
mov
push
subb
arpl
xchg
sbb
into
popf
sbb
scas
lret
nop
adc
jae
sbb
in
iret
in
or
dec
mov
mov
xchg
and
xchg
inc
xchg
lds
sub
insb
jb
mov
cmp
lret
dec
mov
dec
call
adc
out
inc
clc
dec
jae
in
out
cli
push
mov
test
bound
push
test
mov
mov
lcall
clc
cwtl
dec
aaa
lahf
push
xchg
or
shlb
loopne
fwait
in
xchg
push
jecxz
leave
pusha
enter
inc
out
outsl
pusha
push
push
clc
int3
gs
fstps
mov
cmp
test
dec
mov
xchg
push
push
or
or
out
jno
aaa
mov
push
int3
mov
jmp
cmp
pop
jne
or
fdivl
pop
ret
ret
sarl
lds
adc
ja
lret
and
dec
ja
aas
sub
xor
scas
pop
jb
test
adc
rol
xor
fsubp
push
stc
pushf
mov
imul
mov
cld
jp
cmp
mov
jns
cmp
jecxz
lods
into
or
outsl
jmp
cmc
lahf
pop
outsb
push
and
mov
mov
jecxz
jmp
push
lcall
js
mov
mov
adc
movsl
dec
sub
adc
test
adc
imul
or
jge
mov
xor
cmpsb
push
pop
ss
gs
inc
push
mov
adcl
rclb
push
xchg
lods
adc
xor
mov
lds
das
mov
cltd
pop
xchg
mov
daa
pop
dec
insl
push
ss
cmp
pop
sub
aad
das
mov
mov
pop
es
cli
dec
sub
dec
sti
scas
or
xlat
in
cmpsl
clc
enter
mov
xchg
push
dec
xchg
add
jl
mov
outsb
es
and
movsl
fwait
mov
push
insl
je
fcmovnb
lcall
xchg
or
pop
fidivrl
test
jg
pop
inc
ficoml
add
jne
add
pop
and
sahf
mov
and
icebp
mov
push
mov
cmp
add
lock
xchg
jmp
pop
mov
or
xchg
dec
pop
cmc
andl
lock
jns
pushl
inc
xor
dec
sub
jns
mov
inc
push
xor
jecxz
sbb
mov
pop
mov
xor
roll
lock
shrb
xor
fcoml
cld
leave
cmpsb
out
es
das
scas
cmp
sub
dec
les
test
xchg
jmp
lret
pusha
scas
xchg
sahf
data16
loop
or
sub
add
cmc
add
cmpsl
inc
fnsave
jns
mov
mov
xor
push
loop
inc
dec
xor
cmc
dec
icebp
pop
jecxz
sbbl
je
pop
dec
inc
add
mov
loope
adc
shl
and
pushf
inc
inc
add
lret
mov
mov
out
pop
stos
bound
cs
sbb
test
push
pop
pop
out
push
cmpsl
js
ret
popa
mov
mov
lds
sbb
xchg
icebp
and
pop
pop
and
int3
jle
or
add
pop
mov
xchg
inc
rol
pop
push
outsl
je
jg
js
bound
daa
xchg
daa
out
cwtl
and
mov
scas
int
jne
add
loope
pop
pop
nop
sub
push
or
mov
fdivr
xchg
sbb
xor
jge
arpl
fmuls
cmpb
adc
cmpsb
insl
aas
mov
or
sbb
or
inc
and
shrb
in
jl
fwait
mov
jno
dec
push
or
jnp
lods
push
adc
jle
pop
cmp
jne
ja
daa
je
into
jns
inc
jbe
ja
out
mov
js
jmp
sub
pop
sti
pop
push
lods
xor
xchg
je
or
push
out
mov
lahf
roll
ja
xchg
inc
xor
sub
or
push
out
pop
push
cmp
add
adc
xchg
mov
mov
jns
mov
inc
cmpsb
lods
inc
movsl
movsl
movsl
sti
test
jbe
mov
pop
inc
fcomps
add
aam
mov
jle,pt
inc
push
mov
inc
faddl
mov
movsl
cwtl
jp
lea
inc
rorl
jbe
jo
ds
mov
ja
add
adc
jbe
sub
add
outsb
mov
addr16
jmp
pop
mov
xchg
sbb
das
push
xchg
cmp
sbb
loopne
pop
dec
sbb
mov
mov
loop
mov
lock
pop
in
sub
int
sbb
pop
add
mov
lock
pop
jb
push
movsl
repnz
flds
pop
das
mov
test
inc
xchg
xor
imul
mov
test
mov
or
dec
stos
xor
and
enter
aaa
imul
xchg
jp
jbe
nop
sarb
or
insb
jno
in
sub
cmpsl
xor
sbb
frstor
popa
mov
lds
iret
inc
push
cmp
ret
bound
adc
aam
push
ljmp
rorb
sahf
int
outsb
dec
and
int3
or
inc
stos
mov
push
mov
ja
mov
xchg
sub
mov
sbb
pop
enter
jae
sub
in
push
pop
jmp
or
push
scas
insb
mov
out
lock
sbb
cmpsb
jbe
lret
jmp
push
adc
movsb
bound
movsl
cltd
add
xor
scas
xor
mov
ljmp
lds
xchg
inc
insb
pushf
nop
pop
xchg
or
ja
pop
and
mov
pushf
imul
arpl
fstpt
mov
cmp
dec
push
popfw
adc
daa
outsl
add
lods
jae
aam
mov
xchg
loop
mov
pop
xchg
arpl
leave
xchg
sub
mov
add
mov
daa
popf
sbb
outsb
pop
xor
xor
mov
xchg
fmul
sub
lret
loopne
in
adc
aam
push
cmp
or
cli
ljmp
pop
pop
outsl
out
dec
in
inc
ds
rcrl
ret
push
fsubrl
bound
inc
xor
sahf
add
sub
jge
push
sti
cmp
adc
cmp
cs
pop
mov
sub
adc
xor
scas
bound
xchg
cmpsb
cmp
dec
scas
test
mov
sbb
jae
mov
cmp
cltd
in
xor
das
mov
or
or
andl
xor
mov
push
in
cmp
pop
cwtl
pop
mov
stos
fdivrp
pop
insb
and
adc
pop
mov
pusha
in
dec
popa
mov
mov
or
insb
nop
add
aas
dec
adc
jmp
mov
out
push
pop
add
push
push
inc
loopne
ret
dec
push
cs
addr16
push
adc
mov
push
fdivs
int3
outsb
mov
push
mov
popa
ss
push
pop
sbb
jp
aaa
pop
in
cltd
fcompl
ror
jg
fdivs
rcll
icebp
sti
inc
jo
xchg
test
dec
loope
insb
jb
loopne
sub
adc
and
xchg
and
lahf
ret
lahf
inc
xchg
and
fwait
jle
aam
xchg
jecxz
mov
xchg
insl
negb
out
mov
cmp
in
mov
inc
out
arpl
ljmp
in
in
das
ret
pop
mov
lock
inc
lahf
cmc
mov
ljmp
mov
and
data16
rcll
cld
xor
jb
stos
push
outsl
add
aaa
push
lds
ljmp
pop
mov
adc
and
sub
mov
jmp
daa
sahf
xchg
outsb
fwait
sbb
push
or
testl
pop
pop
mov
mov
mov
cmp
xchg
pusha
cmp
into
mov
push
idiv
pushf
lret
xor
mov
divb
jl
les
test
mov
pop
push
pop
and
push
jle
aas
jnp
mov
nop
mov
ret
jb
notl
aam
cmp
addr16
inc
push
mov
stos
push
jnp
fdivrp
outsb
mov
push
fwait
icebp
pop
jns
xchg
gs
mov
dec
jg
cmp
lods
cli
lods
imul
jnp
mov
movsb
push
fsubl
xlat
push
dec
mov
jae
cmp
sub
mov
cld
jge
inc
adc
jg
std
stos
imul
rcrb
jge
inc
push
std
dec
cwtl
cli
xor
dec
mov
dec
mov
push
sbb
mov
mov
lea
pop
mov
push
add
mov
repnz
push
mov
mov
pushf
not
stos
pop
fidivl
dec
cmp
inc
xchg
cwtl
sub
rcrb
mov
js
pop
adc
in
add
insl
jle
mov
lcall
cwtl
xchg
cwtl
jle
outsb
xchg
add
cmpsl
adcb
jno
out
mov
daa
sub
pop
lret
mov
fnstcw
dec
sti
int
jmp
lcall
or
cmc
adc
xchg
aas
push
and
xchg
push
mov
ret
dec
addb
cwtl
inc
mov
jns
jae
cmp
add
inc
jns
ficompl
and
sbb
shlb
dec
gs
xor
lret
repnz
dec
fs
sbb
mov
adc
push
cli
js
mov
xor
nop
mov
lods
mov
jg
ret
adc
push
pop
fadds
imul
xor
stos
pop
lds
cltd
stos
fcmovbe
xchg
cmp
pushf
sub
clc
mov
std
sbb
ret
adc
adc
sbbb
loopne
into
pusha
xor
push
cld
jns
push
push
and
pop
mov
or
pop
lahf
fildll
push
stc
pop
jl
mov
lods
lret
push
xchg
xchg
pop
movsl
add
push
pop
lods
sbb
cmc
jg
mov
cmp
mov
jbe
sbb
sub
mov
mov
stos
inc
pop
test
mov
aaa
dec
movsl
fcomp
xor
add
inc
cmc
outsb
and
push
aaa
jl
add
fucomp
mov
sub
push
lcall
jne
jge
mov
hlt
stos
cld
inc
aaa
push
test
adc
rcl
push
sbb
jl
mov
ja
mov
mov
mov
mov
pop
in
mov
push
adc
dec
iret
xor
xchg
add
inc
cmc
test
das
add
fwait
addr16
xchg
cmp
and
or
out
pop
add
push
dec
ret
icebp
stos
inc
rcll
sbb
adc
jge
mov
orl
inc
sbb
pop
lods
cmp
iret
iret
int
inc
shlb
xchg
and
mov
das
rorl
lea
clc
mov
cmpsb
xchg
mov
lahf
loope
aaa
repz
rcl
and
in
popa
mov
test
fxch
pop
movsb
add
jle
xlat
mov
movsl
das
into
in
push
in
ret
int
lret
stos
mov
mov
dec
mov
add
scas
icebp
jecxz
pop
cmpsl
shlb
imul
or
adc
leave
icebp
jg
sbb
sbb
fimuls
or
daa
inc
inc
repnz
ror
xchg
stos
test
xorl
in
xor
aam
cmp
stos
or
lods
inc
xor
js
stc
pop
cmp
xorl
mov
push
cmp
cmp
test
jno
mov
fs
cwtl
jg
mov
xchg
les
lcall
clc
pusha
loop
xchg
xchg
cmp
dec
repnz
cwtl
insl
sbb
loope
xacquire
sbb
mov
pusha
mov
ss
and
jmp
mov
and
add
loopne
mov
adcl
pop
scas
shll
cmc
gs
adc
mov
inc
mov
inc
mov
lods
xchg
add
xchg
stos
mov
jae
out
dec
inc
xor
outsl
imul
fadd
xor
movsl
out
add
and
lods
cmpsl
outsl
dec
and
sbb
test
roll
rcrl
inc
cmpsb
roll
sbb
dec
inc
roll
xchg
mov
cmp
xor
stc
bound
or
mov
or
scas
xlat
push
outsl
xchg
pushf
stc
negl
in
inc
push
sub
mov
movl
inc
pop
pop
loopne
pop
add
pop
cmp
scas
cmp
sbb
in
mov
in
fisttps
leave
fistpll
mov
inc
call
in
pop
xchg
jg
cmp
les
aad
fstps
sub
dec
ljmp
cmc
sbb
dec
mulb
or
cmp
icebp
roll
loopne
jno
imul
jbe
mov
scas
xchg
scas
xchg
sub
out
push
pop
inc
lcall
daa
stos
sbb
add
jg
pusha
ja
and
inc
outsb
cmpsb
xor
xor
imul
dec
mov
test
dec
xchg
test
lahf
jg
cwtl
cmp
pop
loope
shl
xor
addr16
cs
sub
jne
out
dec
mov
in
inc
jg
lods
inc
int3
mov
movsl
or
sbb
pop
divb
dec
lock
inc
les
cmp
sub
ljmp
fisttps
jae
xchg
aam
lods
xchg
or
adc
jmp
arpl
cmp
repnz
xorb
aas
popf
jno
cmp
imul
iret
movsl
xchg
clc
aaa
ret
cvtps2pi
popf
and
xor
jb
nop
inc
jl
or
mov
or
lret
rcr
mov
cli
jne
push
test
mov
sub
or
enter
pushf
aas
pop
shll
jno
test
in
xchg
mov
mulps
aad
stc
bound
data16
sub
test
add
outsl
push
mov
sbb
lock
imul
cmpsb
xchg
mov
test
ja
ljmp
mov
xchg
mov
shrl
add
push
bound
cltd
pushf
adc
out
adc
xor
jb
pop
or
jge
cli
les
xchg
push
mov
dec
idivb
mov
push
gs
jle
out
add
pushfw
or
ds
xchg
jne
sub
mov
ljmp
xor
loopne
add
dec
ss
test
xor
mov
jo
dec
mov
push
xchg
sub
adc
inc
inc
pop
aam
push
imulb
jae
stos
outsl
sahf
push
fwait
xchg
xchg
push
jae
in
push
dec
mov
or
xchg
jp
mov
jl
jb
mov
mov
ljmp
jns
ljmp
cmp
lahf
xor
mov
insl
js
stos
sub
in
enter
push
jo
pop
xor
cli
frstor
sbb
mov
pushf
test
or
inc
pop
lods
adc
cmp
hlt
xchg
xor
daa
and
es
mov
jmp
mov
lods
vdivsd
or
nop
xchg
test
add
jb
adc
outsl
mov
inc
pop
ss
cmp
out
das
mov
inc
pop
ret
add
cmpsl
aaa
push
dec
out
sti
rol
jno
std
or
sbb
aam
and
sbb
sub
movsb
add
adc
mov
ljmp
xor
xchg
jmp
push
jmp
add
adc
out
or
test
add
push
repz
xchg
pop
ficoml
mov
adc
popa
cld
cmp
iret
ljmp
mov
inc
mov
jae
mov
or
sbb
cwtl
add
fwait
shll
xor
cmp
sub
out
adc
xlat
pop
mov
arpl
sub
mov
push
xchg
popf
inc
fisubrs
and
das
cwtl
arpl
cmc
ljmp
test
cmp
jae
out
ret
out
mov
divl
push
pop
mov
jp
and
out
loopne
push
add
push
ret
lds
int3
in
mov
sbb
add
call
jb
xchg
push
or
rcll
push
pop
orb
imul
sbb
bound
shlb
push
mov
fcomps
fwait
roll
and
test
fisubrs
adc
popf
mov
movsb
out
jae
adc
or
and
pusha
iret
and
xchg
xchg
jnp
jge
rcl
pushf
mov
adc
les
fadds
jecxz
insl
xchg
and
push
lods
sub
enter
in
cmpsl
lea
movsl
xor
xorl
addr16
out
test
xor
call
or
inc
cmpsb
pop
bound
lds
mov
in
cmpl
or
jae
ds
sub
lods
cmpsb
mov
xchg
gs
mov
mov
pop
pusha
push
and
aam
push
aam
fstl
mov
dec
jp
sti
and
push
and
fwait
mov
int3
inc
ror
jbe
repz
ss
fmul
arpl
xchg
pop
scas
or
mov
aam
ret
mov
jns
pop
adc
dec
lock
fidivrl
jge
cli
flds
dec
push
insb
jl
sbb
aam
mov
test
lock
in
out
add
pop
pop
testl
pop
popf
or
cli
and
xchg
rorb
cmp
push
jno
dec
adc
xor
xorb
inc
cli
in
pusha
xchg
mov
fnsave
dec
sub
in
push
out
lahf
inc
shll
mov
jmp
shll
jns
mov
pushf
xchg
sbb
mov
jge
clc
lahf
pop
arpl
dec
mov
pop
push
test
ret
ret
push
popa
pop
pop
addr16
cmp
test
sub
daa
lret
aad
push
jp
xor
mov
sbb
rcll
in
mov
inc
das
jp
scas
mov
adc
mov
daa
les
push
repz
mov
and
ret
push
sub
or
pop
adc
xchg
mov
out
and
pop
inc
loop
mov
insb
data16
jo
pop
xor
lods
inc
call
imul
movsl
jno
scas
mov
mov
xor
mov
ret
aad
pop
ss
push
jb
or
imul
push
or
xchg
xlat
push
add
xchg
leave
idivl
call
scas
push
loope
mov
xchg
out
cmpsl
and
orb
xchg
and
dec
and
jns
dec
bnd
lods
mov
sbbl
loope
mov
inc
inc
xchg
dec
jno
jecxz
xchg
jns
add
icebp
jae
add
add
dec
mov
dec
inc
mov
inc
jbe
cmp
gs
aaa
jmp
pop
jno
out
pop
jns
pop
adc
aaa
rcrl
repnz
xchg
xor
in
cmp
and
mov
cmp
les
outsl
subl
shlb
mov
push
xchg
lcall
and
lahf
pop
ret
and
popa
push
push
pop
fisttps
outsl
mov
xor
aad
jno
jb
loopne
clc
sbb
adc
je
jecxz
fcmovnbe
xor
cmc
jl
jb
adc
cmpsb
out
mov
and
js
test
inc
in
add
loopne
sbb
xor
and
test
roll
out
dec
arpl
inc
sti
js
inc
xchg
add
sbb
cmp
scas
stos
enter
xorb
lret
hlt
push
push
inc
out
sbb
jmp
or
repz
outsb
fwait
push
mov
push
ds
mov
loopne
iret
imul
les
xchg
mov
repnz
rolb
in
cmp
aas
jns
in
mov
ret
in
mov
in
push
lods
pop
pop
mov
mov
jle
stos
mov
into
aad
insb
daa
out
and
push
stos
mov
and
popa
testl
aam
sbb
daa
sub
inc
mov
xor
ds
jg
jne
mov
cmp
ss
sbb
xor
sahf
xchg
mov
mov
mov
stos
adc
ss
mov
sahf
cmp
rol
mov
xor
mov
or
xchg
out
outsb
jnp
sbb
inc
dec
xor
or
les
cmp
xor
add
mov
and
pop
pop
in
pop
lods
lds
fwait
std
scas
xchg
in
xchg
pop
jns
insl
and
xor
cmp
aaa
outsl
mov
lahf
lret
imul
daa
or
xchg
lea
adc
dec
or
loopne
arpl
lds
ficomps
sub
mov
testl
mov
add
pop
add
mov
mov
and
xchg
scas
jl
push
je
ret
cmp
scas
popf
fiadds
pop
les
imul
or
insl
fidivs
add
push
pop
mov
insl
dec
cmc
pop
pop
inc
pop
testl
repz
mov
inc
jb
movsl
adcb
pop
test
aad
scas
xor
loope
jl
inc
mov
fnstenv
xor
in
inc
push
or
mov
xchg
std
ja
shll
or
fisttps
add
cmp
ds
imul
xchg
cmpsl
leave
lret
jle
cltd
mov
dec
rolb
test
push
jno
repnz
jecxz
adc
repnz
pop
pushl
dec
and
cmpsb
mov
push
lods
cmp
cli
popa
xor
inc
inc
pop
and
in
lock
mov
xor
shrb
mov
and
xchg
add
push
addb
loope
add
mov
cmp
lods
push
inc
or
sbb
inc
inc
test
lods
sarb
stos
cs
pop
test
leave
test
push
adc
ret
cmp
lret
ss
repnz
xchg
inc
jecxz
mov
popf
hlt
rcrl
push
jns
xchg
lret
fiadds
pop
sbb
mov
sub
xchg
sbb
scas
cs
stos
sti
mov
fs
sub
jmp
push
or
pop
inc
outsb
repnz
imul
je
cwtl
insl
adc
cmpsl
sbb
fs
adc
loop
test
dec
mov
sbb
inc
jae
dec
pushf
jecxz
or
push
int3
pop
call
xchg
nop
cmp
jb
fstpl
shrb
ljmp
neg
xchg
push
popa
dec
push
aam
and
lods
mov
insb
jbe
mov
sbb
fsts
scas
imul
sbb
mov
pop
mov
jle
or
cmc
lcall
sbb
push
roll
mov
mov
add
ja
lock
adc
cli
pushl
lahf
les
push
sti
sbb
xchg
mov
loope
in
dec
int3
in
pushf
std
pop
xchg
outsb
adc
movntq
out
cld
push
xor
into
push
in
sbb
add
insb
xor
mov
jmp
lahf
or
inc
xchg
shl
leave
std
sub
into
add
das
jne
mov
fwait
mov
add
jno,pn
push
cmc
in
test
xor
sbb
push
cltd
dec
sar
pop
dec
pusha
cmp
add
addl
stos
xchg
xchg
mov
in
jg
xor
xor
nop
repnz
iret
or
and
fwait
xlat
test
xchg
in
je,pn
push
fbstp
cld
mov
or
loope
jns
data16
lds
lock
push
xchg
cmp
xchg
inc
maxps
icebp
cmp
dec
pusha
aam
xchg
sub
rcl
popa
dec
out
ffreep
jae
lret
cmpsb
cmpsl
push
popa
cmp
out
adc
inc
out
in
xchg
xor
mov
imul
nop
push
xchg
sbbl
inc
jns
push
repz
or
mov
in
sahf
sub
push
out
pop
in
push
mov
fnstenv
lds
enter
mov
cltd
xchg
pop
fidivl
dec
scas
sbbb
xchg
mov
mov
inc
inc
pop
loopne
cmpsb
or
gs
pusha
pushf
mov
adc
pop
dec
adc
cmpl
leave
push
and
scas
xchg
ja
popf
shll
scas
neg
mov
movsl
pop
or
mov
cmpsb
test
shlb
push
sbb
or
fs
xor
jb
jns
roll
scas
mov
cli
aas
add
outsb
lret
adc
sub
lcall
push
insl
cli
cmp
adc
xchg
fs
int3
mov
mov
arpl
dec
repnz
lret
nop
xorl
add
scas
rolb
stos
lods
or
icebp
dec
cs
ds
push
or
or
inc
jne
mov
lcall
cmp
add
mov
jge
cmp
mov
scas
inc
mov
cli
sbb
adc
mov
mov
sbb
adc
lcall
xchg
sti
rcll
out
mov
fidivs
pop
sub
cld
push
hlt
mov
mov
outsl
filds
jle
and
lret
and
inc
mov
jg
adc
lcall
xor
int
sub
in
movsb
or
arpl
or
mov
mov
in
hlt
insl
or
cmc
lods
and
pop
mov
hlt
sub
in
and
mov
clc
incl
popf
mov
xchg
lods
pop
cs
add
xchg
mov
pop
je
ljmp
cltd
loopne
push
scas
xchg
lcall
jo
pop
insb
mov
cmp
pop
outsl
xor
clc
das
call
xchg
cmp
sub
xchg
add
mov
sub
mov
adc
repz
xor
sbb
adc
sbb
pop
jecxz
leave
dec
stc
push
xchg
test
jmp
les
mov
mov
push
jmp
repnz
fwait
imul
mov
imul
lcall
imul
pop
jmp
loop
scas
sbb
fwait
test
mov
sbb
jbe
jns
imul
addr16
in
popa
mov
fbstp
sahf
pop
xor
mov
push
fbld
jno
ror
add
inc
ret
ds
rorb
xchg
cmp
push
xor
movsb
dec
cmp
stc
mov
pop
jb
dec
fmulp
fidivs
fnsave
mov
fsubl
cmp
cmp
loop
mov
mov
ret
sbb
daa
jecxz
mov
outsl
pushl
outsl
pop
mov
jbe
xchg
mov
pop
aam
sbb
lods
leave
jae
sarl
ficompl
push
aas
lea
adc
pushf
push
jecxz
pop
js
jnp
sub
push
jae
mov
mov
mov
push
loop
sahf
incb
inc
jo
pop
fbld
and
mov
push
jae
arpl
stos
cltd
scas
stc
addl
scas
xchg
insb
sbb
dec
jb
mov
lods
sub
sub
xbegin
lods
dec
pop
jo
pop
mov
lock
ror
pop
mov
xchg
xor
cli
stos
mov
sahf
mov
mov
mov
sub
icebp
test
pop
test
mov
mov
or
xchg
fsubrs
add
pop
pop
add
dec
lds
jns
or
push
xchg
push
fxch
or
insb
fisttpll
lret
psubd
lods
and
dec
lret
jae
sarb
test
jns
loope
adc
out
lods
mov
xchg
push
test
shl
cld
lods
int
out
lcall
movsb
push
aam
test
xor
xchg
aas
cmpsl
test
xor
lret
mov
stc
repz
jl
mov
xchg
mov
push
in
push
lcall
push
ret
cmp
sbb
adc
cmpsl
mov
push
int
int3
and
in
push
mov
outsl
ret
cmp
lock
xor
ror
addr16
icebp
mov
jecxz
push
pop
les
int
aam
movsb
push
inc
leave
mov
lds
mov
add
cs
mov
mov
shll
mov
shrl
lods
ljmp
or
or
shll
mov
stc
cmpsb
lods
inc
insb
push
fstpl
leave
mov
cld
je,pt
xor
or
lret
xor
push
cmp
inc
mov
shl
mov
ficoms
push
mov
jmp
cmpsb
icebp
add
dec
sbb
mov
sbb
pusha
mov
lret
cld
xor
xchg
xchg
testl
jbe
push
sbbl
mov
mov
popa
dec
inc
lods
mov
add
test
lcall
push
mov
ljmp
and
jno
sbb
adc
sub
fcomip
or
cltd
push
xchg
sbb
mov
scas
jns
or
add
ret
cmpsb
insb
jge
mov
xor
cmp
scas
sbbl
mov
loopne
cli
gs
mov
pop
mov
push
sbb
and
xor
mov
mov
xlat
sbb
pop
out
mov
mulb
imul
lock
aad
pop
ret
add
stos
cmp
xor
jmp
cmp
push
test
push
xlat
push
and
fisubrl
push
clc
jns
xchg
inc
mov
repz
test
inc
jbe
fcomp
sti
add
dec
shlb
sbb
loop
arpl
cmp
cmp
aaa
adc
pop
xchg
js
pop
lahf
pop
outsb
fadds
ret
push
mov
or
mov
sub
adc
fldl
jmp
xlat
sub
mov
push
negl
test
pop
and
jmp
shlb
xor
mov
mov
push
jmp
jnp
daa
sub
jo
inc
adc
mov
je
cmp
pop
aaa
std
push
cld
call
add
aaa
jns
mov
movsl
pop
fadds
add
jb
cmp
popa
cmc
daa
dec
loop
shll
jno
and
cmp
lret
mov
adc
push
imul
mov
push
xor
push
push
sbb
pushf
mov
mov
jmp
ret
lock
mov
js
sbb
sahf
stos
sbb
test
push
mov
xchg
movzbl
outsb
pushf
jge
movsb
add
pop
sbb
or
adc
fadd
push
add
add
jle
xlat
dec
adc
lea
xlat
repz
sub
pop
lods
lods
push
sub
pop
jle
mov
sbb
adc
test
push
out
pop
mov
lock
das
sub
sti
arpl
and
pop
push
push
dec
jno
inc
gs
cltd
mov
push
stc
test
lcall
xor
sbb
push
int3
push
push
loope
inc
adc
ret
ret
out
out
movsl
std
into
mov
outsb
dec
push
mov
int
stc
fidivrs
xor
jbe
je
sysenter
sbb
and
rol
pop
push
out
fcmovnb
rcrl
pop
fdivs
xor
inc
in
pop
lods
mov
into
add
outsb
out
push
and
ss
cmp
dec
shlb
cmpsb
icebp
add
movsb
imul
inc
mov
cwtd
mov
cmp
movb
and
das
pop
gs
dec
adc
pop
push
pop
mov
inc
cmp
cmp
push
mov
add
je
sub
imul
xor
inc
cli
test
cmp
cli
jp
cmp
ja
sub
add
mov
jo,pt
jmp
in
mov
pop
cmp
lods
stos
shll
movsl
and
lcall
jg
gs
xchg
adc
mov
mov
rorl
push
or
dec
mov
push
shll
push
adc
pusha
mov
jb
call
aas
xchg
sub
adc
repz
fnstsw
pop
dec
idiv
add
in
adc
inc
xor
mov
js
sbb
jns
push
fcomps
pop
adc
dec
push
sbb
iret
out
fiaddl
add
pop
cmp
cli
out
mov
push
dec
cmp
clc
jmp
mov
fwait
shlb
lahf
imul
lahf
push
pop
cmp
addl
xchg
scas
call
and
cwtl
adc
push
aam
push
and
les
mov
in
into
inc
adc
sbbb
cmpsb
adc
gs
sbb
jl
or
lcall
sti
inc
cmp
and
adc
repnz
pop
mov
fwait
pushf
mov
imul
fadd
rorb
repnz
xlat
xchg
push
popf
iret
mov
jl
jbe
adc
inc
popa
jno
pop
jmp
lcall
add
test
dec
aaa
jecxz
add
jl
inc
dec
and
or
and
mov
out
mov
sbb
orl
sub
push
jns
xchg
repz
xlat
and
and
fcmovne
mov
cmp
dec
cmp
in
mov
hlt
mov
fwait
jb
and
pop
jge
add
fstl
push
in
lea
or
ret
cld
push
mov
xor
test
mov
mulb
dec
in
bound
stos
lcall
pushf
and
mov
nop
and
pushfw
mov
or
xor
pop
sbb
mov
lret
sti
xor
shlb
and
mov
or
xor
les
inc
dec
mov
adc
push
rcr
rcrb
int3
add
rcll
or
bound
aam
leave
xchg
aaa
scas
sbb
repz
daa
out
je
pop
lds
mov
sbb
in
out
mov
stc
in
mov
and
cmpsb
xchg
jbe
in
mov
mov
cltd
lret
push
inc
in
gs
lcall
push
push
aas
and
inc
das
cltd
lret
sbb
in
jnp
push
incl
sbb
leave
in
pop
or
or
mov
mov
mov
inc
pop
mov
inc
inc
mov
add
mov
mov
bound
cld
rol
aad
adc
fucomip
in
notb
fcomps
cltd
inc
mov
pusha
repz
adc
lret
inc
aad
in
aas
enter
lock
inc
push
dec
xor
stos
mov
push
out
lock
adc
or
jnp
int
data16
and
data16
out
es
push
mull
mov
pop
pop
mov
xchg
fbstp
lcall
ret
fcmovb
loop
mov
mov
dec
xchg
dec
nop
cmp
xchg
or
or
addr16
ja
mov
mov
les
mov
imul
ret
xchg
insb
js
rorl
enter
sbb
push
cltd
ret
cmp
sar
inc
lods
cmpsb
out
or
cmp
pop
pop
sub
roll
sarl
pop
fldcw
jbe
push
mov
xchg
sbb
loope
sub
int3
lret
cmc
pop
daa
mov
rorl
dec
cmp
test
mov
repnz
scas
sub
xor
mov
popa
out
mov
pop
dec
xor
add
shll
push
cmp
xor
enter
mov
or
mov
je
mov
pusha
test
jle
push
ret
dec
ja
jbe
inc
push
jno
sbb
out
push
inc
outsl
mov
movsb
clc
shl
or
clc
sub
dec
out
data16
jns
shrl
add
jl
arpl
out
jle
insl
fyl2x
and
and
xor
sub
xor
hlt
sub
lret
push
cli
or
mov
inc
sub
lods
xchg
call
mov
sahf
push
clc
xchg
subl
scas
cmpsl
popf
pop
xchg
pushl
popa
hlt
mov
lret
hlt
mov
push
sub
hlt
mov
mov
push
cmp
push
pushf
test
lds
pop
shrl
xchg
dec
fmul
mov
rcrb
xchg
loope
add
fwait
sbb
sbb
les
mov
jmp
xchg
pop
ror
jmp
popf
in
adc
jmp
xor
out
jb
cld
sub
pop
dec
neg
mov
push
push
ljmp
add
mov
add
push
test
mov
cltd
xchg
xchg
fsts
jb
sti
std
inc
add
shll
ret
sbb
in
push
mov
je
pushf
mov
ja
mov
mov
rcll
andnps
subl
mov
js
imul
dec
pop
push
jo
stos
in
ret
out
mov
inc
pushf
push
std
test
dec
sub
jmp
xchg
clc
sarl
mov
and
insb
sahf
adc
aam
add
fistpll
out
sbb
cmp
popa
xor
lret
push
dec
sbb
jmp
mov
clc
sub
push
incb
xor
push
add
or
cld
cmp
push
push
mov
fsubs
sub
repnz
mov
inc
dec
xorl
ficoml
aad
std
jp
push
push
scas
ljmp
push
xor
lahf
mov
adc
dec
fidivrl
push
push
or
mov
add
loope
cmp
fwait
shlb
scas
sti
dec
mov
into
in
jmp
or
int
mov
iret
adc
lock
aam
xchg
and
and
cli
lea
outsb
cltd
test
jb
arpl
xchg
add
push
mov
xchg
loope,pn
jge
cmp
xlat
pop
or
and
mov
cmp
pop
mov
ffreep
fimull
cwtl
cmp
fsts
xor
jb
sahf
push
xor
push
popa
inc
out
daa
out
fisubrl
xor
cltd
pop
add
pop
jge
je
mov
sub
movsb
push
xchg
sbb
lret
ja
push
dec
sahf
xchg
sbb
daa
cmp
in
ljmp
adc
lea
movsl
xor
addr16
incb
call
outsl
jno
pop
stos
jp
lret
mov
aas
shrl
cmp
push
jle
lds
in
adc
push
outsl
or
out
inc
cmp
jl
mov
sbb
cs
fcomps
jg
inc
jp
rolb
in
fisubs
sbb
jb
adc
mov
add
mov
fistpl
in
adc
fdivrl
or
sbb
fistl
dec
sahf
outsl
xor
or
pop
ja
xor
push
jnp
enter
or
loope,pt
sti
push
mov
xlat
mov
push
jle
addr16
adc
inc
adc
leave
adc
mov
mov
jae
pushf
in
inc
jle
arpl
rcl
sub
imul
call
mov
dec
mov
dec
fs
in
fstl
xchg
stos
jl
mov
daa
dec
insb
ret
mov
xchg
lcall
orb
scas
gs
fs
fucomp
sarb
mov
xchg
mov
adc
bound
sbb
fistps
xchg
enter
cmpsl
jge
jg
mov
jne
jnp
cmpsb
out
add
fimuls
cmp
popa
daa
int
or
cmpsb
lods
jnp
andl
xchg
pop
or
xchg
and
mov
xchg
jp
fnstenv
and
jmp
jg
or
out
or
pop
jo
mov
mov
mov
ljmp
xchg
inc
das
jecxz
and
or
out
lds
je
cmc
adc
xchg
cwtl
add
sti
xchg
test
and
jle
shl
cmp
fdivl
dec
aas
xchg
enter
mov
mov
inc
jb
movsb
std
push
xor
adc
mov
out
add
mov
nop
sub
inc
call
jge
and
pop
add
ss
test
fs
pop
js
push
mov
sbb
xor
shlb
xor
mov
iret
pop
add
mov
int3
lea
mov
push
addr16
sbb
jl
enter
mov
jo
cmp
cmp
lret
leave
sub
cmp
sbb
test
je
int
jg
nop
add
pop
out
xchg
adc
js
test
int
xor
movsb
addr16
pushf
cmp
push
jg
pop
adc
xlat
jg
cmp
mov
fistpl
inc
xchg
ljmp
jp
and
mov
sbb
lock
pop
in
cmp
jbe
insb
or
std
sbb
fadds
sbb
jae
ficompl
dec
sbb
push
push
rorb
xor
lret
enter
dec
iret
aam
jecxz
adcb
inc
pop
fwait
out
push
out
pusha
cmpsl
add
rcrl
js
pop
addb
stos
fninit
mov
xchg
xor
ljmp
mov
cmp
fnstcw
sahf
mov
sbb
lahf
lods
mov
inc
xchg
loop
jl
and
fcmovu
push
inc
xchg
repnz
or
inc
mov
and
repnz
or
pop
movsl
jl
ja
xchg
fwait
pop
xor
jl
push
iret
inc
push
xor
clc
int3
mov
in
xchg
sub
ja
shl
in
inc
inc
jbe
mov
jl
stc
inc
or
push
adc
mov
jle
and
dec
dec
outsl
xor
movsb
pushf
add
in
jae
mov
or
ja
shl
add
iret
jb
out
jg
sub
cmc
loop
push
mov
dec
rclb
xchg
push
dec
fwait
lods
push
cltd
jecxz
imul
jae
dec
inc
xor
mov
push
xchg
cmc
movsl
or
mov
adc
xchg
shl
leave
insb
xor
outsl
mov
les
mov
or
movsl
pop
push
out
call
pusha
adc
sbb
repnz
sbb
push
xor
sbb
test
mov
data16
jl
popf
test
pcmpgtb
hlt
leave
push
mov
adc
cmp
loop
lods
cmp
or
mov
push
or
cmc
add
je
test
mov
subl
dec
mov
rorb
daa
mov
jo
mov
jns
or
arpl
mov
sub
cmc
adc
sarb
inc
into
jnp
shl
push
push
sub
cmpsb
adc
ss
mov
lcall
stos
adc
rcll
sbb
sbb
repnz
add
mov
rol
out
mov
sbb
inc
jo
xchg
std
cmp
mov
cmp
and
mov
mov
jne
dec
adc
sub
out
and
pop
pop
jmp
push
jl
jmp
inc
pop
jg
or
stos
bound
jg
loope
gs
sub
pop
jle
lcall
outsb
out
js
xchg
jnp
ljmp
mov
ja
lock
inc
insl
mov
call
inc
push
movsl
cs
pusha
and
jp
add
aam
in
mov
cmpw
adc
lret
push
inc
js
mov
lret
repnz
cwtl
push
mov
fisttpll
lcall
stos
or
test
in
or
dec
add
repnz
les
push
inc
lods
movsl
cmp
pushf
xor
lcall
and
dec
mov
lea
fisttpl
dec
push
jecxz
lret
movsb
cltd
push
xor
ret
popa
ja
xor
ret
fsub
inc
xchg
push
pop
loope
scas
and
test
xchg
in
ret
pop
inc
test
xchg
fimuls
pop
push
cmp
inc
adc
or
mov
sbb
dec
addr16
das
adcb
popa
ljmp
outsl
scas
mov
dec
testb
sahf
jp
clc
paddb
and
loopne
hlt
aaa
icebp
mov
sti
sub
bound
repnz
mov
sbb
sbb
iret
jnp
dec
fdiv
popf
cs
dec
sti
lahf
mov
cmp
pop
pop
scas
loopne
mov
push
dec
orl
fdivrs
mov
sub
cmp
mov
add
repnz
add
lods
std
ja
mov
cmp
rol
inc
mov
aam
ljmp
sbb
push
and
hlt
sbb
sub
imul
mov
cwtl
sti
add
pop
dec
ret
or
jb
shll
push
mov
cwtl
dec
jg
mov
fiaddl
in
out
fs
sub
mov
bound
push
dec
sbb
mov
lods
dec
mov
cmp
call
adc
cmp
mov
sub
cmpsb
rcrb
add
shl
cmpsl
sbb
pushf
and
fstpl
call
dec
xor
jg
mov
ss
add
push
adc
cmp
mov
das
fnsave
push
mov
imul
xor
lods
test
mov
es
mov
ja
les
cmpsb
dec
in
xchg
push
xchg
lahf
xor
and
jle
sub
stos
pop
xchg
test
out
insb
daa
ja
std
scas
mov
and
inc
mov
movsl
ja
sub
push
nop
xchg
add
iret
xchg
fstpt
lret
sbb
jne
push
faddl
aaa
nop
add
mov
adc
xchg
xor
daa
cmovbe
push
pop
stc
xlat
mov
subl
push
or
andl
je
lret
loop
iret
hlt
subb
shll
fs
std
leave
add
adc
rclb
mov
fsubrs
repz
xchg
mov
imul
jo
adc
in
push
add
js
dec
pop
cmp
loopne
push
mul
adcl
push
dec
mov
and
or
inc
xchg
stos
les
loope
cmp
loop
mov
xchg
adc
lret
scas
adcb
mov
cmp
mov
lds
mov
in
lret
aas
inc
in
sbb
pop
sub
iret
fidivrs
roll
and
shll
dec
test
push
cmp
sub
lret
subb
popf
push
int3
xor
sbb
leave
xor
add
outsl
xor
fcompl
lods
fs
jp
jno
in
jp
mov
data16
mov
pop
mov
inc
mov
cmp
adc
xor
jl
cmc
enter
mov
pop
cmc
xchg
mov
ret
inc
aaa
mov
clc
nop
fstps
cld
xchg
dec
adc
xor
pop
rcll
test
cmpsl
test
xor
push
cwtl
lods
jbe
stos
lods
and
pop
repz
sub
xor
cltd
repz
sub
sti
mov
cmpsl
shll
jns
mov
push
daa
imul
in
mov
lods
call
data16
jle
hlt
add
test
xchg
adc
xchg
imul
lcall
xor
icebp
rolb
push
pop
stc
pop
std
jns
mov
cmp
inc
addr16
and
push
enter
test
pop
or
data16
inc
mov
push
adc
test
pop
mov
sub
mov
sbb
xlat
sbb
dec
repz
bound
aaa
mov
in
mov
push
jl
push
shll
out
sub
inc
and
hlt
pop
loop
sbb
push
mov
add
hlt
xchg
neg
pop
cmpsl
sub
xor
dec
fadd
pop
mov
jmp
or
jo
dec
aas
mov
outsb
mov
dec
jmp
out
js
sub
in
pushf
mov
or
roll
and
lahf
lret
leave
mov
lods
fdivrl
push
sbb
add
test
adc
lret
mov
data16
shrl
fsubl
lods
sbb
bound
sub
push
or
scas
mov
les
idivb
scas
add
int3
pop
les
bound
jge
mov
mov
nop
sub
fidivrl
inc
aas
fbld
cmp
push
add
cmpsl
das
ret
imul
cmp
push
pop
lock
lgdtl
push
push
dec
mov
jo
cmp
enter
push
sub
into
cltd
ficompl
pop
jnp
and
xchg
sahf
stos
mov
insb
int3
sub
jbe
ficomps
mov
mov
sub
lods
std
cmp
add
jnp
jbe
rol
mov
add
dec
or
push
pushf
dec
into
push
mov
es
movsb
xor
std
mov
fwait
mov
xchg
jecxz
lods
adc
insb
pop
lea
pop
pop
or
xorl
fwait
arpl
jl
inc
test
inc
and
rcr
xor
dec
cmc
sar
sub
testl
push
xor
xchg
lahf
cltd
add
push
push
fidivs
mov
push
fwait
jne
sbb
rcrl
fdivrl
pop
fsubl
sub
cld
xor
mov
dec
stc
loope
adc
xor
xor
std
push
sbb
test
cmpsb
xor
sbb
stos
jle
xrelease
fs
or
cmpsb
outsb
inc
add
enter
mov
enter
inc
stos
push
popa
add
mov
mov
and
movsb
dec
pop
xchg
xor
adc
push
lea
adc
iretw
sbb
popa
pop
jp
aaa
ficoml
enter
cmp
add
lcall
aam
leave
mov
sub
bsr
mov
xchg
pop
lods
adc
shlb
xor
enter
xchg
aas
jne
das
adc
popa
add
stc
xor
inc
xorb
aad
cmpb
inc
pop
mov
pop
add
cmp
fs
arpl
push
sub
test
scas
push
aad
cmc
mov
cld
or
inc
and
out
push
xchg
push
mov
sub
xchg
push
cmpsl
shrb
out
sbb
push
xor
xchg
sub
popl
fimull
js
notl
pop
mov
addb
pop
push
pop
nop
imul
pop
fcoms
lods
out
inc
cltd
and
push
jne
arpl
jns
incb
or
repz
add
and
mov
imul
and
popf
shl
adc
test
xor
xchg
or
push
ret
js
test
cmp
insb
pop
fs
jb
cmpsb
mov
call
movsl
inc
mov
lds
ja
jle
and
cmp
les
shl
repnz
sbb
inc
mov
insl
push
push
inc
mov
hlt
lret
dec
push
add
call
dec
stc
sti
xchg
and
lods
roll
jno
cmp
or
inc
dec
and
push
adc
int3
inc
adc
mov
push
cmp
push
xor
xor
cmpsl
push
mov
push
cmc
adc
inc
push
mov
sbb
add
mov
xchg
mov
jb
sbb
inc
out
fstpl
and
mov
int3
faddp
sub
pop
mov
cmp
imul
insb
jnp
stc
mov
inc
xchg
stos
inc
arpl
xor
clc
dec
loop
mov
fdivl
dec
pop
fdiv
add
mov
nop
mov
xchg
xchg
rcrb
fwait
test
cmc
mov
lods
ja
or
push
stos
xchg
mov
fiadds
sub
or
push
lods
pop
sub
pop
lods
cmc
icebp
cmp
stos
dec
mov
inc
popa
mov
fisttpll
cmpsb
sbb
xor
jns
cltd
rcrl
lods
mov
insl
sbb
fdivrl
add
loopne
xadd
adc
popa
movsl
dec
cmp
mov
inc
sub
pop
or
cmpsb
loope
push
xor
mov
ds
inc
pop
into
in
popf
pop
scas
das
sub
xchg
sahf
popa
mov
mov
mov
arpl
roll
adc
mov
jb
mov
push
mov
fabs
dec
sub
iret
push
outsb
ljmp
sub
dec
push
jnp
ret
mov
jns
mov
mov
fistl
mov
mov
cmp
add
mov
jns
mov
iret
jns
xchg
dec
sub
and
orb
dec
int3
push
popa
out
cmpsl
jns
das
fists
lret
sarl
int
test
nop
cltd
addl
fistps
mov
xchg
pop
pop
shll
add
mov
mov
mov
popf
fldcw
pushf
sub
push
add
dec
fstl
imul
push
aam
add
xorb
leave
stos
mov
dec
or
jbe
lds
mov
and
push
popf
xor
mov
loopne
inc
mov
cmp
dec
xchg
dec
jmp
cmc
sbb
jno
insb
dec
push
sahf
jae
outsb
push
sbb
stc
mov
dec
adc
mov
cli
ret
cmp
call
popa
adc
movl
js
and
add
push
testb
mov
add
js
bnd
roll
inc
xchg
and
sub
popa
ss
pop
mov
lcall
imul
cli
in
push
and
jne
cwtl
xor
lret
xor
arpl
repz
add
mov
mov
je
fcmove
push
or
mov
add
add
orl
std
ljmp
push
sub
mov
sbb
divl
dec
outsl
jge
aad
call
mov
push
push
roll
jne
aad
js
test
das
in
cmp
ret
and
dec
pop
out
inc
jecxz
ret
jecxz
xor
lds
dec
inc
pop
mov
jecxz
pusha
xor
popa
jb
scas
xchg
cld
dec
ret
xor
mov
mov
adc
xchg
sbb
xlat
xchg
mov
rol
das
inc
jns
xchg
adc
xchg
frstor
mov
mov
sbb
lods
dec
mov
insb
or
jb
sbb
jns
mov
pop
jae
imul
push
je
ret
inc
mov
add
adc
jnp
ss
cmpsl
jge
inc
subl
and
lret
pop
mov
jne
jae
sbb
push
dec
push
jge
and
aad
fisubl
xor
movsl
xor
aas
in
xchg
je
pop
add
pusha
jne
inc
test
xchg
push
in
mov
or
stos
cmc
je
lock
rorb
pop
out
cmp
popa
and
mov
adc
mov
leave
sub
mov
mov
cmp
sti
inc
fimuls
cwtl
iret
add
into
outsb
addb
es
mov
insl
sub
repz
stos
loopne
xchg
mov
pop
lcall
adc
add
push
push
pop
call
outsb
out
add
adc
cs
mov
ret
inc
mov
mov
rcrb
pop
pop
test
cmpsb
fs
push
pop
ss
in
push
out
rcl
push
cmc
sbb
adc
mov
mov
and
push
inc
sbb
jl
or
xchg
or
cmp
pop
mov
cmpsl
push
lock
mov
std
jp
sub
dec
inc
cmpsb
subb
cmp
insl
push
cltd
cs
ret
pop
cli
pop
cltd
inc
iret
mov
cwtl
jl
add
xorb
loopne
in
cmpl
movsb
adc
cmc
scas
fs
mov
incb
mov
push
jb
xor
pop
or
adc
rolb
ficompl
dec
sub
test
xor
pop
into
leave
dec
aas
jmp
mov
insl
shrl
sub
jbe
mov
test
inc
lock
dec
mov
leave
cltd
aam
pop
xchg
add
dec
jnp
add
stos
push
test
enter
adc
xchg
jno
iret
pop
and
sbb
in
push
popa
and
mov
sub
add
pop
and
sti
pop
dec
imul
fstps
sub
scas
mov
mov
popa
popa
cmp
xchg
push
xor
pushf
pusha
or
xchg
enter
movsb
nop
mov
outsl
xor
push
adc
sub
mov
lea
lds
in
xor
jb
mov
ret
rcll
add
pop
jg
lea
mov
ret
dec
testl
mov
push
pushf
dec
loop
adc
and
sbb
or
jb
cmpsb
pop
xchg
cmp
cwtl
xor
push
lods
adc
outsl
jbe
pop
lahf
icebp
mov
adc
and
pop
cwtl
popl
mov
mov
aam
xchg
adc
jp
mov
mov
nop
sbb
insl
daa
mov
mov
data16
fs
in
xchg
push
push
inc
or
mov
rclb
mov
je
xchg
lcall
movsl
ficomps
cmp
sahf
jmp
mov
sbb
stos
inc
ja
bound
jmp
mov
inc
sti
jecxz
icebp
pop
pop
test
sbb
je
movsb
jmp
stc
mov
xchg
xchg
sub
outsl
popa
fwait
insl
push
sub
and
push
jl
push
icebp
sbb
icebp
jecxz
aad
sti
shl
ret
jbe
je
ljmp
fs
ftst
rolb
push
pop
cltd
and
cmp
push
shrl
jb
arpl
fsubs
jle
iret
int3
cs
js
insb
mov
mov
jge
aam
dec
mov
cmp
lcall
mov
popa
sbb
push
movsb
fildll
push
mov
iret
mov
jbe
nopl
cmp
sbb
shlb
lods
cld
jns
mov
push
push
pushf
dec
into
test
inc
push
cwtl
sarb
imul
cmc
aaa
mov
xchg
and
jge
add
inc
lods
and
push
dec
in
jbe
pop
fistl
pushf
dec
inc
fs
lret
and
cmpsl
mov
cltd
adc
push
scas
insb
jl
xor
aaa
dec
dec
into
cltd
shrb
xlat
sub
add
mov
stc
and
cmpsl
pop
ja
adc
inc
cmp
in
outsb
adc
and
inc
adc
xchg
int3
call
outsb
pop
push
fstl
aas
add
lahf
mov
loopne
data16
sub
pop
xchg
loopne
and
and
in
repnz
leave
jns
enter
popf
or
mov
mov
mov
enter
mov
decl
sbb
mov
aaa
mov
jl
add
movsb
jb
xchg
pop
jecxz
or
push
mov
aam
dec
mov
dec
inc
lods
nop
inc
and
inc
mov
lds
jmp
pop
jb
iret
fstps
push
adc
lods
aas
cmp
mov
fsub
movzbl
mov
cwtl
jne
in
dec
jge
inc
insl
xchg
in
push
cwtl
pop
je
bound
push
fcoml
std
mov
xor
sbb
jo
int
aam
cmp
ja
and
in
inc
push
stos
inc
xor
dec
push
test
lock
and
sbb
clc
out
pop
jecxz
add
dec
les
pop
cmp
popf
fwait
mov
or
pop
test
pusha
in
lret
mov
and
sub
or
outsb
sub
xchg
sahf
xchg
enter
mov
test
push
and
inc
cld
mov
dec
cmp
xor
cmp
popa
notb
xchg
and
dec
push
dec
jnp
push
mov
frstor
xchg
dec
cmp
ljmp
imul
cld
test
xorl
mov
roll
fs
and
es
mov
out
mov
mov
fiaddl
outsl
das
out
mov
pop
scas
cwtl
xchg
imul
int3
sbb
aaa
xor
cltd
lock
lret
xchg
and
jg
add
in
pushf
push
pop
cmp
or
imul
adc
xor
adc
imul
dec
fs
lds
jmp
xchg
pop
cmpsb
xchg
arpl
cld
mov
xor
jmp
jns
out
repz
int3
jge
inc
xor
int3
test
addb
mov
mov
xor
outsb
cld
adc
sub
das
sti
sub
jge
xor
inc
jg
scas
cmpsl
mov
test
sbbl
dec
addr16
clc
pop
ss
pop
jne
xlat
leave
dec
push
jne
dec
inc
xchg
ret
scas
and
sub
push
sbb
pusha
xor
sti
mov
jno
inc
or
testb
lods
mov
cltd
sub
adc
jmp
leave
inc
add
sbbb
js
pusha
push
mov
loopne
dec
outsb
mov
push
mov
push
daa
add
ljmp
fdivrs
mov
mov
mov
fsts
or
test
cli
sbb
jge
xor
rcrl
int
lret
xchg
ret
fdiv
fs
dec
repz
dec
xor
add
out
pushf
add
loop
dec
in
into
xor
xchg
mov
and
out
xor
ja
leave
push
andb
pop
pop
sub
xorb
ror
es
cmp
popf
stos
lahf
das
push
lods
call
ja
push
jbe
xor
xchg
insl
aas
shl
mov
push
pop
mov
addb
ds
add
sarb
iret
pop
rcrl
inc
decb
xchg
in
dec
rcll
lret
fnstsw
push
aad
int
push
dec
popa
outsl
inc
mov
xchg
enter
stos
xor
adc
shll
push
sbb
lret
or
add
popf
mov
jb
nop
fs
xor
lret
or
dec
sbb
fsubrs
push
out
and
repz
jns
js
lea
cmpl
rcl
imul
inc
adc
xor
cmpsl
lock
loope
sahf
push
loopne
add
lea
xchg
sub
dec
or
call
pop
inc
rorb
add
movsb
jmp
test
test
lock
lret
loopne
sti
mov
pushf
xor
nop
jmp
xchg
push
fs
push
jle
mov
mov
xor
mov
jbe
aas
outsl
sti
sbb
outsl
sub
mov
inc
scas
pop
les
push
sti
xor
pop
ljmp
mov
filds
xor
cs
movsb
inc
and
dec
pop
shlb
jge
pusha
xchg
rorl
lret
mov
mov
lahf
mov
int3
xor
sar
pop
jp
andb
pop
inc
push
xor
dec
dec
mov
sbb
mov
ds
loopne
hlt
dec
jbe
mov
mov
jnp
js
das
xchg
mov
sti
filds
xchg
dec
xor
add
decb
pop
notb
dec
in
hlt
cmp
scas
cmpsl
repz
test
sub
sub
negb
xor
test
xchg
stos
xorb
inc
add
xor
adc
mov
fs
xchg
lods
inc
mov
push
inc
xor
rcrl
add
fwait
loopne
es
cmp
and
cltd
fcomip
cmp
xor
sub
lret
addr16
mov
push
mov
jecxz
sub
popa
pop
jmp
push
in
mov
mov
jg
fistl
and
dec
popf
xchg
xchg
inc
add
add
adc
inc
jb
xlat
lock
lcall
fimuls
test
jl
int3
outsb
je
rcrb
out
popa
test
insl
out
scas
or
dec
cs
movsl
gs
insb
and
xor
jge
in
push
pop
pushf
fisubrs
pop
test
xor
inc
pop
pop
out
loopne
js
jmp
inc
aam
and
and
inc
push
mov
xchg
or
stc
lcall
xchg
push
add
xlat
push
cmpl
cmp
dec
jo
xchg
imul
test
jmp
fwait
jae
sub
xor
mov
aaa
js
add
mov
sbb
push
int3
cmpsl
jae
push
mov
jle
and
inc
xchg
sub
int3
push
adc
push
or
or
pop
push
xchg
or
cmp
cmc
fisttpl
inc
aam
daa
and
xor
daa
ljmp
test
xchg
jo
mov
or
ljmp
mov
xor
adc
sub
sbb
dec
jmp
clc
scas
pusha
jbe
or
leave
push
aaa
call
adc
add
mov
repnz
insl
imul
fstp
faddp
push
leave
xchg
movsb
adc
sub
cmp
out
inc
or
xchg
icebp
or
out
jno
or
add
je
xlat
lret
shlb
pop
ret
std
adc
negl
shl
and
repnz
std
inc
or
inc
nop
or
sub
xor
lods
inc
lea
stos
jo
rorb
and
jmp
repz
cli
xlat
mov
enter
mov
xchg
jl
fistpll
addr16
and
push
addl
gs
jbe
mov
lcall
daa
add
push
jle
lods
outsl
or
ror
xchg
push
testl
hlt
fwait
and
mov
sbb
inc
sarl
lods
pop
jmp
into
outsb
clc
jmp
mov
pop
fistpll
in
lea
adc
popa
jmp
add
sub
lods
push
jnp
dec
mov
mov
filds
pop
jp
cmpsb
mov
inc
cwtl
les
faddl
aam
dec
adc
insb
sub
pop
hlt
lods
xchg
call
imul
int3
imul
adc
inc
jle
jo
in
xor
repnz
cmp
fcom
cltd
push
sub
sbb
loop
inc
jne
xlat
imul
lods
fucomi
or
jae
shlb
xor
in
insb
fwait
mov
cmp
arpl
jecxz
inc
test
fdivl
cmovo
leave
fs
call
or
xchg
push
cld
xchg
xor
mov
push
loope
mov
push
in
ret
sub
pop
cmc
cmp
cld
mov
and
arpl
test
addr16
mov
mov
iret
shrb
popf
push
sbb
pop
insl
sub
jb
lret
cld
pop
push
mov
inc
sbbl
mov
inc
lods
int
pop
out
adc
sub
lret
icebp
pop
mov
test
cmc
aad
aas
jbe
or
fimull
hlt
mov
add
clc
sbb
xchg
adc
xor
adc
cmc
sbb
mov
je
push
cli
add
adcl
cli
stc
lds
and
jmp
dec
jb
addb
out
test
mov
push
fcompl
ror
hlt
call
das
scas
les
add
pop
xchg
cmc
push
ljmp
xchg
fdivl
mov
mov
push
xor
cli
add
iret
ror
mov
inc
xchg
add
testb
out
xchg
cltd
sub
mov
clc
pop
mov
int3
shrb
push
test
je
jne
sahf
loopne
hlt
pop
movsb
push
jle
mov
pop
mov
or
test
stos
pop
std
fistps
je
insl
xchg
push
mov
mov
mov
aad
sbb
into
shrb
and
inc
into
imul
sub
in
mov
sahf
idivb
scas
repnz
adc
dec
add
ret
stos
pop
shlb
inc
mov
xchg
bound
pop
dec
xchg
loop
sbb
sbb
sbb
insb
insl
xorb
mov
out
jb
pop
jae
data16
enter
add
inc
leave
and
lahf
hlt
aam
fs
sbb
in
shll
lret
notb
das
ds
adc
mov
mov
add
roll
insl
aaa
lahf
rep
clc
divb
cmc
inc
sub
fidivs
sub
stos
sti
cmp
es
mov
add
dec
shlb
fmull
incl
enter
sbb
lods
neg
inc
sbb
sarl
pop
fsub
out
pop
insb
fxtract
mov
cmp
xorl
mov
je
sbb
xor
in
scas
sub
ret
add
pop
jo
mov
mov
call
pop
andl
xor
xor
dec
or
dec
jo
inc
mov
pushf
mov
and
inc
sbb
lahf
imul
xchg
iret
mov
cmp
jle
outsl
inc
xor
dec
sahf
cli
subl
movsb
out
outsb
imul
mov
fsts
xchg
mov
fidivrs
lods
cmp
icebp
pushf
pushf
fcmove
mov
inc
aam
aam
roll
mulb
clc
call
movsb
jbe
iret
push
pop
arpl
popa
add
pusha
cmpsl
das
mov
mov
jge
call
add
ret
xor
arpl
xor
cld
int
cmc
sub
cli
mov
mov
aam
mov
push
dec
push
cmp
xor
das
push
enter
daa
lcall
in
aad
jbe
xchg
adc
ret
hlt
fcmovbe
iret
sub
xchg
jle
mov
popf
js
push
out
call
push
jle
dec
lahf
and
xor
lods
ds
mov
mov
xchg
ds
hlt
repnz
cmp
call
hlt
inc
push
sub
lea
push
dec
xchg
pop
and
ljmp
fimull
in
shrl
jo
or
sbbb
mov
cwtl
mov
jbe
dec
lds
xchg
inc
sbb
fisubl
lea
pop
jecxz
out
scas
jmp
cmp
xor
sub
cli
popf
aaa
cld
xchg
fildll
xor
xchg
jp
loopne
jne
cli
adcl
pop
cmp
adc
mov
rclb
ljmp
sbb
push
lahf
fsubl
in
nop
dec
outsl
cmp
or
lods
gs
or
out
shlb
sbb
xor
sbb
push
test
es
lds
stos
mov
sbb
std
fucomi
mov
cld
xor
ret
mov
lods
stc
mov
mov
repz
loop
mov
mov
fdivl
stos
loopne
sti
std
or
dec
sarb
cs
hlt
jl
mov
int
pusha
inc
mov
dec
scas
adc
mov
out
repnz
int3
mov
jmp
shrl
pop
jecxz
mov
popa
loop
loope
push
aas
ss
lcall
xchg
cmp
mov
in
orb
clc
xchg
push
push
std
je
scas
testb
mov
and
shr
mov
sahf
sub
neg
sbb
adc
lret
in
int
punpckhwd
cs
mov
xchg
es
mov
cmp
jnp
add
out
fildl
ss
xchg
mov
xor
push
inc
cmp
stos
out
jae
pop
adc
pop
lret
xchg
sbb
loopne
push
mov
ljmp
cmc
loope
aam
inc
frstor
lods
enter
pop
and
out
push
pop
xchg
aad
jle
sub
aas
fistl
int3
or
jo
data16
mov
cmp
jno
pop
mov
data16
adc
pop
add
dec
mov
jb
cltd
add
stos
xchg
std
sbb
fists
scas
dec
mov
pop
pop
hlt
cli
jmp
test
insl
imul
mov
fwait
dec
out
ja
xor
inc
and
popf
cmp
orl
movsb
sbb
jecxz
sbb
mov
loope
mov
cmc
out
xor
sub
movb
ss
lcall
aam
fs
das
movsl
fistpll
mov
test
dec
imul
scas
mov
mov
movsb
xor
jbe
dec
pop
push
xchg
xchg
xor
pop
adc
into
repz
mov
cmp
adc
adc
cli
les
sti
xchg
xor
ret
lea
addr16
jne
lea
imul
sbb
pop
nop
test
clc
push
enter
push
cmp
lea
add
lds
and
pushf
cmp
mov
inc
sbb
arpl
jmp
xchg
xchg
faddl
mov
push
xor
adc
fsub
js
push
pop
movsb
mov
adc
dec
or
insl
xchg
pop
sub
mov
lock
add
sarb
mov
jo
mov
adc
insb
jne
jg
shrl
subl
mov
daa
or
push
inc
adc
mov
imul
cmp
push
jmp
cmp
sbbl
andl
mov
mov
dec
and
push
xchg
das
stos
call
into
push
sub
pop
mov
insb
xchg
fiaddl
sub
xor
cmpb
xor
xor
inc
adc
pop
mov
mov
fs
and
add
sub
jae
push
clc
push
int
adcb
jge
fstps
mov
jp
cmp
enter
mov
fs
mov
sub
push
dec
jae
idiv
lds
fldt
mov
adc
dec
leave
test
sbb
sbb
aad
jns
lods
shlb
scas
pop
aas
sub
jno
js
xchg
cld
xchg
xorl
call
daa
dec
mov
adc
pop
xchg
sahf
ja
cmc
dec
xchg
movsl
adc
mov
fistps
mov
xchg
jnp
add
ds
dec
int
sbb
push
adc
xor
add
pop
lea
out
mov
jmp
imul
stos
pop
cwtl
sub
cld
roll
jne
inc
js
sub
adcb
repnz
sti
push
inc
test
cmpsb
movsl
mov
mov
test
inc
push
std
jl
jno
shr
push
out
xchg
jge
push
frstor
mov
xor
stc
ja
loope
adc
jecxz
jle,pt
rcrb
test
sub
movsl
test
andl
and
jbe
pop
iret
sarb
sub
lods
lods
lret
iret
movsb
gs
divl
in
jns
adc
fwait
cmp
inc
outsb
mov
jb
pusha
test
loop
incl
inc
push
js
subb
fstps
jl
dec
outsb
push
pushf
aam
add
test
xlat
cmpsl
push
dec
mov
pop
inc
push
es
push
scas
shrl
and
nop
pusha
gs
int
loopne
cmp
scas
sub
test
aad
mov
pop
cmp
in
xlat
jno,pn
push
sub
or
cmp
sub
lcall
mov
sbb
cmp
stc
sbbl
jmp
jg
mov
add
dec
mov
pusha
aaa
inc
adc
idivl
mov
roll
jmp
movsb
inc
inc
ss
mov
pop
pop
orl
bound
and
inc
bound
test
mov
sbb
in
jg
fsubrs
addr16
imul
dec
andl
ds
xchg
enter
stc
inc
clc
xchg
xorl
jmp
js
stc
out
push
stc
jne
dec
repnz
jl
int3
test
sbbb
lock
cli
in
jle
mov
fldcw
cmpsb
ljmp
and
mov
sbb
stos
sbb
out
mov
xchg
xor
aaa
jne
in
aaa
stos
dec
sub
mov
add
stos
xor
adc
divb
push
add
mov
pop
sub
jne
movsl
insb
push
in
or
loope
popa
testb
xchg
rorb
sub
lret
pop
sbb
add
push
mov
in
hlt
jae
lods
test
gs
mov
loope
push
les
jmp
mov
xchg
add
push
or
sbb
loope
add
cmp
es
rcll
cli
mov
inc
mul
lods
or
test
cmp
xchg
dec
jmp
movl
cld
mov
or
or
cmp
faddl
inc
imul
scas
sti
paddq
cltd
jge
frstor
push
jl
mov
jne
lock
jp
or
add
mov
push
aam
and
add
mov
dec
lret
shlb
fbstp
push
jne
out
inc
jp
adc
leave
inc
adc
mov
loopne
in
mov
adc
aam
mov
sub
mov
cltd
mov
add
dec
in
cmp
lret
jp
ss
and
call
lock
mov
ds
push
or
in
pop
inc
in
imull
add
or
mov
mov
jg
pop
adc
data16
ja
dec
idiv
pop
sub
push
pop
lahf
je
push
push
lods
and
stos
mov
les
cld
insl
repnz
fs
fildll
mov
out
jbe
sub
cmp
sti
and
scas
push
pop
add
pushw
in
pop
jnp
es
push
out
popf
xor
mov
sbb
daa
mov
xor
jb
sbb
ret
pop
mov
ret
cltd
dec
or
sbb
mov
into
dec
inc
sub
and
xchg
mov
mov
sti
je
scas
add
pop
out
aam
push
stos
push
cmpb
push
pop
push
popa
mov
nop
lret
test
mov
jae
or
cmpsb
test
sarl
and
lret
jp
movb
dec
or
xor
flds
sar
leave
repz
xlat
in
push
jns
sahf
ljmp
cmp
daa
cmpb
fldcw
inc
fcompl
push
les
rcrl
rcll
daa
lds
cmpsl
inc
add
push
bswap
movsl
scas
bound
outsb
bnd
rorl
and
movsl
xchg
pop
mov
mov
mov
dec
ds
and
ror
cs
sahf
cwtl
mov
push
push
js
sub
xor
incb
push
and
and
jmp
popf
add
fstps
add
repnz
lret
imul
cli
mov
mov
jecxz
in
scas
inc
imul
shlb
inc
cli
pushf
adc
call
xchg
fldt
add
inc
negb
lahf
addl
in
and
jo
mov
ss
add
sub
pop
daa
pop
pop
or
hlt
ja
sarb
out
sbb
rcll
inc
aam
add
test
cmp
rcll
inc
jno
js
fcoms
pop
and
xchg
mov
dec
cmpsl
lret
fsubrs
iret
push
inc
xor
loop
das
jmp
test
movsl
clc
sbb
test
lds
mov
cmc
pop
cmp
mov
fwait
cmp
push
jbe
pop
xor
leave
jo
pop
jle
leave
pop
cwtl
enter
push
test
mov
iret
push
cmc
push
in
lret
xchg
je
ficompl
jle
lret
pop
mov
push
notl
mov
dec
rcll
push
data16
test
sub
inc
rorl
cltd
xchg
scas
jne
pop
insb
cmc
mov
sti
mov
or
jl
cmp
mov
push
shrb
xor
cmp
lahf
mulb
rorl
mov
xchg
aas
out
lret
rorb
jns
ljmp
jb
movsb
xor
sar
movb
nop
popf
jle
out
push
xchg
ljmp
ficoml
mov
jmp
dec
inc
lods
inc
fucomp
and
movsl
xor
mov
sub
jb
call
push
std
xchg
out
das
lods
mov
cmp
aaa
jp
cmpsl
jmpw
jno
into
popa
mov
and
out
mov
fnsave
inc
sub
push
add
mov
in
push
mov
pop
outsl
sarb
jg
clc
test
jne
loope
shrb
mov
stos
sub
loop
popa
out
popf
das
ja
test
mov
sub
jp
int3
insb
data16
jge
movsb
pushf
jnp
jge
pop
cs
xchg
rclb
inc
mov
inc
gs
scas
popf
sbb
jg
into
ret
outsl
sub
push
rorb
mov
mov
mov
and
jle
xchg
add
xchg
out
outsb
stc
xchg
or
ja
aaa
aam
add
test
sub
sar
enter
test
sbb
mov
jbe
cmpb
data16
and
test
sbb
nop
mov
ss
pop
test
cwtl
rolb
cmp
add
sub
push
xor
push
std
dec
icebp
jmp
and
pushf
mov
adc
fisubrl
push
cmpsl
xchg
mov
cmc
addb
sub
dec
mov
dec
out
cmp
daa
bound
aaa
jecxz
cli
or
mov
lock
xor
ljmp
cltd
inc
scas
inc
arpl
xchg
test
push
nop
sub
mov
sbb
cmp
lds
mov
stos
inc
or
int
je
std
pushf
sbb
or
dec
repnz
das
jg
push
gs
movsb
pop
mov
mov
test
cmp
call
fwait
jge
mov
xchg
test
xchg
cwtl
je
lods
jmp
cs
or
in
sbb
sbb
mov
repz
pop
push
inc
lods
aas
mov
mov
repz
fmul
leave
mov
add
inc
pop
sub
inc
xorb
testl
lds
pop
ds
inc
xchg
inc
push
pop
sbb
dec
push
das
jmp
aaa
adc
adc
jmp
int
adc
xchg
ljmp
lret
in
jae
mov
je
mov
arpl
xor
aad
and
xor
push
mov
jb
nop
pop
pop
insb
mov
fldcw
push
clc
outsb
xchg
mov
push
iret
cwtl
cltd
xchg
cwtl
cs
jae
sub
pop
repz
cli
nop
inc
jl
xor
push
aaa
test
btc
dec
rcrl
push
movsb
pop
ret
int
mov
xor
leave
adcb
sub
or
lock
int3
sbb
shlb
fadd
mov
out
cmpsb
shl
mov
dec
mov
cmp
cwtl
and
fnsave
jae
sahf
ret
imul
jmp
iret
cmp
mov
cltd
into
scas
out
add
fs
fstpl
cmp
imul
mov
adc
cmp
inc
test
push
movsb
fs
cwtl
pop
sub
and
jo
fcoml
bound
out
imul
xorl
xrelease
cmp
jns
fbld
push
and
add
mov
cmp
test
mov
jp
movsb
mov
ret
xor
mov
inc
pop
pop
es
popa
dec
shlb
sarb
negl
ljmp
add
and
dec
sbb
push
jg
out
adc
loop
or
adc
mov
lea
mov
push
stc
push
add
faddl
out
fnstcw
push
repz
push
add
pop
iret
dec
call
popa
sarl
pop
sbb
jns
mov
jge
dec
sbb
cmp
inc
sub
push
shrl
cld
pushf
out
push
pop
dec
add
jl
pop
iret
shrb
aad
insl
orb
pop
push
mov
lods
lahf
stos
mov
jne
into
inc
addr16
lods
pop
adc
xchg
mov
mov
outsb
in
push
movsl
cmp
jnp
mov
addr16
lret
or
lret
test
sbb
scas
rcrl
in
orl
imul
cwtl
cs
test
repnz
int3
xor
dec
jnp
jmp
lods
mov
movsl
sub
pop
xchg
push
out
test
push
ret
lods
adcb
xor
test
sahf
or
lock
movsb
mov
and
hlt
sbb
int3
outsl
inc
inc
push
jae
mov
or
cmp
ss
cmc
jge
lds
jle
cmp
pop
add
int3
stc
jg
pushf
scas
cmc
in
dec
mov
xlat
addr16
fstpl
ret
cmpsb
xchg
sub
pop
aam
lods
arpl
mov
rclb
xlat
xor
xor
test
cmpsl
stc
cwtl
fs
aam
jne
mov
test
int3
xchg
adc
int
dec
sbb
insl
fnstenv
subl
std
mov
or
or
and
or
lcall
data16
xchg
adc
inc
push
push
cmp
jecxz
neg
insl
pop
hlt
mov
add
popa
and
mov
decl
or
movsb
scas
fldl
xorb
mov
mov
mov
cmp
adc
into
cmpsl
mov
imul
stc
xchg
sub
sub
mov
insl
fiaddl
push
sbb
nop
iret
lcall
adc
add
insl
pushf
push
shrl
fdivr
xchg
movsl
xchg
xchg
hlt
int
xor
dec
fldt
mov
push
xchg
clc
push
je
mov
xor
test
mov
mov
cltd
es
mov
xor
mov
push
adc
fld
xchg
sarb
jecxz
sti
rcrl
loope
cld
lahf
jbe
sbb
pop
dec
jmp
sub
into
cli
adc
out
test
dec
hlt
jae
inc
loope
mov
jnp
fwait
and
mov
adcl
push
sub
jno
test
loopne
mov
lds
inc
lock
adc
pop
jge
arpl
iret
aaa
loop
in
dec
test
push
add
bswap
iret
xor
jo
adc
dec
fwait
ret
stc
add
imul
out
aad
dec
cmp
push
jecxz
cli
in
xchg
ja
rcl
out
adc
ss
mov
dec
xchg
aad
inc
gs
adc
mull
repnz
sbb
jns
pop
adc
test
mov
pop
aaa
bound
mov
adc
ljmp
push
and
pusha
xchg
insb
push
xor
jmp
and
pusha
dec
jmp
loop
or
arpl
mov
or
add
loop
xlat
jle
xchg
pop
dec
push
cld
xlat
jns
mov
push
and
test
ret
and
pop
fidivrs
xchg
or
sub
imul
mov
mov
or
lds
subb
xor
data16
inc
and
inc
push
inc
mov
leave
lds
es
mov
mov
push
and
pop
je
jl
into
loopne
dec
jnp
pop
and
jns
addr16
pop
nop
out
fildll
cwtl
mov
xlat
fcompl
inc
shl
or
and
xlat
rcr
add
rclb
adc
mov
fistl
and
push
pop
adcl
imul
push
outsb
out
pop
incl
data16
pop
mov
outsb
mov
mov
sub
xchg
in
mov
pop
mov
lcall
cwtl
leave
xchg
jmp
dec
xchg
loope
xchg
mulb
popf
sahf
add
pop
addr16
cmp
sbb
xor
adcl
push
lret
xor
frstor
daa
or
xchg
mov
enter
inc
jecxz
clc
dec
popa
mov
mov
jb
sbb
pop
xor
sub
push
pop
call
jno
js
and
push
push
roll
inc
push
cmpsb
nop
jae
das
push
aam
pop
jo
call
aaa
mov
js
negb
pop
sbb
mov
sti
mov
imul
jo
mov
jp
jge
arpl
push
xlat
adc
cmp
cmp
or
cmpsl
xor
push
rolb
stos
repnz
mov
das
cmpsb
cli
xchg
pop
aam
stc
lds
sbb
cltd
call
fsubp
fwait
mov
arpl
nop
mov
repnz
mov
push
movsl
or
cmp
xchg
pushf
push
mov
mov
not
shlb
je
mov
lock
cld
inc
mov
pop
or
call
jbe
inc
pusha
imul
xor
movsl
mov
cli
dec
pop
xchg
mov
adc
cmpsb
dec
mov
inc
push
jo
rcrl
out
sbb
cmpsb
push
xchg
mov
xor
movsl
sbb
cmp
addr16
data16
push
or
or
fwait
insb
inc
pop
push
cmpsl
xchg
mov
andl
scas
dec
mov
in
jge
cmp
sbb
sti
sub
inc
pushf
imul
push
mov
daa
inc
mov
inc
sub
outsb
sbb
mov
iret
jmp
jp
leave
enter
int3
dec
loopne
dec
dec
inc
xchg
sbb
adc
cmp
nop
pop
mov
je
mov
fmuls
ds
pop
imul
xchg
mov
cltd
mov
cli
cmpsb
or
mov
lcall
mov
inc
fstps
push
aaa
adc
mov
fisttps
and
stos
mov
loopne
notb
sbbl
les
pop
dec
rorb
insl
les
push
jnp
xlat
movsb
dec
inc
repnz
xlat
xchg
std
jbe
jp
neg
inc
pop
cmp
mov
fwait
pop
inc
lds
mov
loop
push
addr16
test
jg
jns
nop
lods
and
dec
insb
iret
sub
jbe
lock
adcl
into
outsb
pop
xor
ret
sbb
clc
inc
adc
xchg
sarl
movsl
stos
pop
repz
sbb
push
mov
pop
push
rcrl
jge
push
add
in
pop
jp
lds
xor
mov
mov
cmp
scas
popa
cmp
aam
mov
pop
fs
pop
repnz
jo
aam
aas
xchg
inc
mov
popa
mov
cs
stos
sbb
jo
jb
cmp
push
fists
cmpb
cmp
pop
mov
aam
add
test
lock
dec
sbb
cmp
dec
ljmp
and
jbe
xchg
mov
pop
push
push
std
sub
aas
sahf
xchg
sub
push
fsub
xchg
cmp
dec
inc
push
fldcw
push
scas
jo
mov
cltd
inc
scas
add
inc
lods
and
out
mov
addr16
sbb
mov
stc
mov
js
rcrb
aam
dec
mov
pop
inc
push
fiadds
out
cs
imul
xchg
mov
or
pop
sub
outsb
ret
lahf
mov
ret
jl
inc
shrl
pop
fidivs
push
mov
or
sbb
push
mov
out
je
lahf
ss
cmp
in
jmp
and
mov
push
es
cmc
mov
out
js
cmp
bound
mov
sub
repz
cmp
out
out
insl
das
xor
xor
jmp
lcall
lret
sahf
repnz
andb
fs
mov
mov
ja
dec
rolb
lods
aas
jp
out
adc
pop
hlt
jle
mov
out
fistps
sbb
xor
shrl
scas
ret
push
inc
ds
mov
pushf
enter
aad
scas
mov
mul
mov
and
xchg
hlt
nop
sti
push
fnstcw
pop
ss
add
jg
mov
ja
jl
shll
shll
pop
sub
cmp
enter
or
jb
adc
inc
jae
jbe
pop
mov
sbb
ljmp
jne
or
cs
dec
into
pop
xor
xlat
or
dec
jns
shrl
mov
sub
jo
fdivrp
cmp
mov
mov
je
lret
pop
push
or
pop
and
jbe
dec
out
xchg
js
imul
imul
mov
mov
jae
dec
into
in
cli
mov
mov
xor
js
inc
daa
push
movsb
inc
int3
movsl
push
or
sbb
enter
call
cs
mov
ret
shll
inc
dec
stos
and
lock
sti
out
sbb
rolb
iret
loope
adc
inc
loop
das
stos
popf
leave
and
xchg
mov
and
fldcw
insb
sahf
sbb
mov
mov
jno
mov
pop
jo
mov
mull
shlb
bnd
mov
enter
push
cwtl
insb
ja
adc
mov
pop
sub
pushf
leave
xchg
dec
jle
pop
cmpsl
lods
pop
lods
rcrl
mov
push
inc
mov
adc
pop
pusha
mov
loopne
jo
sub
xor
fwait
adc
rorl
mov
imull
mov
push
sar
sti
xor
mov
out
lods
outsb
stos
push
and
cmp
push
and
out
icebp
inc
ds
test
loope
push
sbb
rcll
inc
xor
jb
push
andb
incb
push
add
jp
dec
sbb
enter
dec
outsb
pop
inc
dec
cwtl
dec
sbb
les
and
dec
imul
ret
andl
ja
movl
popa
jne
pop
push
sub
sarl
mov
jo
in
adc
shr
in
mov
jns
cmpsl
inc
xchg
outsl
dec
fstp
testb
mov
cld
fiaddl
push
mov
rcll
adc
mov
xchg
inc
stos
and
sahf
inc
or
jns
dec
aas
idiv
movsb
rcrl
mov
sbb
mov
ds
aam
jecxz
mov
lcall
adc
jne
inc
outsb
push
pop
push
out
mov
push
cmc
cltd
fcoms
pop
cmp
push
sub
cmpsb
cwtl
cmp
jo
dec
pop
fs
test
cmp
jo
push
mov
mov
out
or
movsl
mov
push
int3
stc
bnd
lcall
cmp
outsb
rol
mov
xor
and
rcr
xchg
lock
or
repnz
cltd
dec
notl
fidivl
int3
adc
idiv
push
pop
aam
mov
fdivl
jo
rclb
sub
inc
sbb
pushaw
aas
inc
insb
pop
pop
or
jle
adc
dec
call
testl
faddl
mov
sbb
lcall
cld
push
xchg
mov
in
inc
xchg
into
test
sbbb
sub
loop
jo
add
cltd
cmp
cld
add
data16
sub
das
mov
cmp
add
call
push
cmpsl
rorl
aam
adc
repz
in
cmpsl
out
pop
stos
test
addb
add
or
sbb
push
mov
jbe
les
ljmp
jae
or
cmpsb
call
pop
daa
sub
jmp
out
mov
icebp
lcall
test
sub
add
fyl2x
dec
cmp
and
xor
out
pop
sub
loopne
aaa
lret
jecxz
push
and
lock
add
inc
lock
sub
int3
pop
mov
imul
xlat
jnp
pop
in
inc
movsb
arpl
sarl
icebp
imul
mov
mull
cmpsl
sbb
stos
in
xchg
add
jne
ljmp
into
xchg
inc
push
cmp
xchg
cmp
scas
iret
pop
pushf
pop
lock
pop
in
and
fidivs
xchg
test
fadds
sub
cmp
dec
lret
out
mov
jmp
mov
or
lcall
aaa
in
rclb
imul
rolb
push
xor
mov
ja
sub
notb
js
lds
push
loope
insb
push
inc
push
hlt
pop
mov
or
les
enter
scas
jo
pop
sbb
rcrl
adc
call
hlt
sbb
das
xchg
sbb
loopne
addr16
add
pop
rcrb
or
nop
jg
sub
jb
inc
or
sahf
stos
sbb
bnd
mov
dec
push
dec
leave
add
mov
lahf
sbb
lcall
lea
xlat
dec
inc
cmc
xchg
xchg
cmp
and
pusha
mov
push
xchg
ret
mov
mov
cmp
dec
movsb
jno,pn
sub
jnp
xchg
pop
outsl
lcall
addb
add
and
jb
sahf
cli
loopne
xor
shrb
shl
push
jno
push
sub
cmp
popa
sahf
aad
mov
lds
iret
clc
dec
cmp
adc
sub
aad
cmp
gs
dec
rcr
imul
sbb
xor
lods
mov
push
mov
dec
je
enter
mov
lods
xor
sub
inc
icebp
pop
sub
cli
int3
mov
pushf
or
push
inc
xchg
enter
mov
repz
sub
xor
into
cmpb
in
jnp
call
mov
jmp
stos
neg
cmp
rcll
outsl
bound
sbb
fwait
aad
movsl
pop
adc
sub
test
ret
push
cwtl
sbb
out
js
xchg
out
test
mov
cmpsb
push
lret
and
add
out
push
mov
jecxz
mov
push
out
inc
xchg
popa
jns
pop
lcall
push
sbb
mov
pop
push
inc
xor
mov
push
bound
fs
cmp
xor
jg
movsl
mov
jae
jl
fisubs
push
adc
insb
pop
sbb
int
out
pop
mov
popa
outsl
es
into
push
sarl
jecxz
cmpsl
cli
push
rclb
inc
xor
push
popa
jmp
sub
leave
mov
leave
adc
inc
pop
adc
bound
or
test
mov
mov
mulb
call
adc
jl
pushf
mov
inc
lods
pop
jmp
mov
jmp
mov
aaa
repnz
adc
xchg
arpl
push
push
and
jne
icebp
pusha
cmp
pop
inc
stc
add
sub
adc
inc
jge
outsl
es
sub
popf
xchg
xor
cmpsb
das
jmp
std
xchg
lods
ret
mov
jge
cmc
sarb
mov
push
or
pop
mov
iret
ret
int
xor
shrl
mov
jb
daa
pusha
or
mov
jge
push
dec
add
jne
imul
movsl
mov
scas
nop
and
nop
xlat
adc
je
xor
daa
and
popa
pop
es
push
add
enter
ds
add
int
dec
mov
xchg
leave
nop
jb
mov
stos
mov
push
sub
mov
ss
inc
xchg
shll
jmp
pop
pop
sbb
js
jbe
out
mov
ret
xlat
push
hlt
or
mov
dec
sbb
lcall
test
jecxz
push
int
inc
fimull
lahf
sub
jae
mov
imul
xchg
dec
in
lods
cs
inc
and
cmpsl
imull
pop
cmp
add
nop
or
les
cmp
cmpsl
or
cli
mov
add
out
rcrl
cs
aaa
or
mov
pop
fwait
dec
and
xor
mov
cwtl
lods
jae
jl
es
andb
in
add
push
aam
sbb
fnsave
ficomps
popf
mov
fmuls
sub
adcb
repnz
movsl
push
imul
scas
mov
jmp
in
or
inc
mov
jae
lahf
cmp
xchg
xchg
fst
fwait
fwait
push
sbb
loopne
and
loopne
fs
pop
xlat
test
cmp
int3
lea
mov
icebp
popa
xor
add
xor
lcall
dec
mov
stc
add
cmp
stos
dec
out
shrl
addb
xchg
mov
hlt
lds
push
and
jae
rorb
mull
shrl
mov
sub
xchg
jns
pushf
in
aam
fcompl
xchg
pop
sbb
push
insb
jae
stc
xor
adc
inc
lahf
dec
mov
add
add
in
out
les
enter
mov
arpl
mov
fwait
divb
sahf
mov
lret
ret
bound
mov
movsl
push
or
das
mov
dec
mov
push
ret
subl
mov
fucomi
std
loop
jl
jle
popf
push
and
movsl
in
les
jecxz
push
jge
cltd
push
cmpsl
inc
dec
jmp
cmpl
sub
mov
xor
in
popa
xchg
add
lds
mov
mov
fwait
dec
bound
in
pop
push
and
sub
xchg
std
dec
clc
sub
in
sarl
add
addb
add
test
psubusb
in
jnp
adc
xor
push
push
jb
addr16
in
out
shrb
inc
aaa
sub
test
add
gs
movsl
xchg
push
ret
jmp
push
out
mov
jg
inc
fdecstp
or
adc
and
sbb
push
jb
dec
ud2
ret
xlat
hlt
xor
stos
sarl
lcall
ljmp
dec
jbe
adc
int3
es
filds
stos
push
addr16
xor
adc
cmc
fucom
enter
imul
push
outsb
add
das
subb
notl
xchg
and
inc
mov
fdivl
sub
jo
cmpsl
fwait
inc
push
shll
inc
rcrb
mov
outsl
pop
jle
cmpsl
push
inc
pop
and
ret
aad
cmp
ds
inc
or
mov
lahf
mov
xor
mov
int3
jecxz
or
loopne
rclw
test
rcll
xchg
sub
xlat
inc
add
add
xchg
mov
pop
adc
movsl
fs
jo
sbb
xchg
pop
and
cmpb
inc
insl
jle
lea
cmp
xor
cs
jle
ret
jle
into
cld
stc
stos
sub
cmp
pop
push
ss
mov
mov
dec
push
push
pop
pop
adc
mov
xlat
cmpb
or
out
lods
sub
mov
adc
inc
xchg
push
out
jnp
mov
pusha
pop
add
int
add
ja
test
fsts
inc
stos
cli
fnstenv
sarl
and
adc
ss
mov
rolb
xor
mov
inc
adc
jo
cwtl
leave
xchg
sbb
mov
sub
or
xchg
jge
cmp
fstp
ror
ffree
dec
adc
pop
into
in
call
push
mov
and
mov
xor
in
push
mov
into
lcall
inc
jo
lcall
sbb
fwait
mov
sub
loopne
arpl
xchg
ja
add
scas
push
push
scas
fwait
xor
outsl
lahf
lret
rorl
xchg
fldl
jbe
mov
push
cmp
xchg
and
xchg
pop
lock
repz
jp
adc
clc
ss
icebp
and
dec
mov
out
cmp
mov
mov
scas
jp
fidivrl
rolb
repnz
mov
xchg
adc
pop
fcmovbe
test
movsb
inc
pushf
or
mov
pop
cld
push
std
lcall
pop
xchg
cmp
mov
ljmp
popaw
and
sbb
testb
cs
notb
xchg
adc
icebp
cmpsl
dec
sub
inc
push
sub
sbb
cwtl
aas
xor
sub
mov
cmpsl
mov
int3
or
mov
fwait
push
lods
and
sbb
add
in
jl
sbb
inc
xor
pop
hlt
push
mov
push
pop
xor
dec
push
mov
mov
imul
popf
push
les
stos
filds
cld
lret
jg
dec
adc
jo
loope
add
or
mov
test
fisubl
adc
jb
cs
test
dec
cmp
imul
test
pop
add
rcll
adcl
out
pusha
pop
repz
out
or
incl
outsb
mov
sub
push
in
repnz
and
or
mov
test
sub
mov
dec
cmp
mov
leave
fadd
add
aad
imul
jmp
test
or
push
adc
call
jo
scas
push
insl
inc
and
lret
in
mov
faddp
jle
add
adc
xor
frstor
cwtl
xor
pop
inc
xor
ror
in
fwait
stos
pop
mov
cmp
out
jmp
xchg
add
imul
movsb
je
mov
xor
orb
inc
jae
in
fiadds
add
movsl
aam
mov
hlt
xchg
and
stos
push
mov
mov
inc
inc
subb
sub
rorl
cmp
aas
lcall
push
push
mov
mov
cmp
pop
mov
das
dec
jno
push
jne
das
ljmp
insl
test
scas
insl
fisttpl
push
pop
das
cltd
inc
outsl
addr16
jae
mov
je
stos
inc
pop
out
enter
ss
push
iret
idivl
cwtl
decl
bound
sub
shrd
and
lea
fbld
and
sub
mov
inc
loope
outsb
push
movsb
pushf
fisubl
mov
inc
daa
and
aas
dec
or
mov
push
popa
jg
aad
fldcw
loope
mov
jbe
insl
mov
repz
jmp
and
fdiv
test
insl
lcall
push
out
push
scas
cmp
lock
inc
jns
out
nop
lock
pop
cmp
mov
mov
add
mov
ljmp
scas
rorb
sub
fwait
sti
mov
repz
sbb
iret
sub
les
cmp
sub
pushf
pop
inc
dec
sub
jne
daa
cld
mov
aam
jne
call
lret
mov
push
rorb
int3
and
xor
je
jge
push
mov
add
ss
lea
and
lods
lock
leave
xchg
jnp
scas
setae
fildl
popf
mov
nop
xor
mov
int3
jno
shl
add
sbbb
repz
pop
lret
and
test
ljmp
mov
int3
ja
into
sub
fndisi(8087
lahf
aad
add
popa
fidivrs
push
mov
push
inc
cmp
mov
add
cwtl
mov
cmp
xchg
stos
or
inc
adc
cwtl
int3
ficoml
movsb
dec
flds
movsl
mov
movsl
enter
sbb
mov
enter
bound
mov
out
lahf
push
pop
xor
cld
mov
in
add
sbb
out
add
clc
adc
repz
cli
pop
xchg
loope
jle
ret
rclb
notb
call
divb
inc
bound
gs
mov
mov
pop
lcall
popa
sti
std
sub
push
mov
testl
inc
mov
adc
fldl
shlb
iret
mov
push
cmpsb
imul
lret
sub
in
push
std
ret
ljmp
aaa
mov
out
es
mov
jno
mov
cmpsb
dec
inc
push
pop
lds
outsb
mov
ffreep
push
add
cltd
jp
xchg
push
andl
mov
lahf
nop
cld
sbb
mov
divb
pop
mov
mov
adc
sub
push
and
xor
mov
dec
lcall
push
popa
lods
fcoms
pop
or
add
jae
out
or
in
daa
or
mov
and
push
outsb
fwait
mov
loop
pop
add
and
loope
test
in
sub
sbb
inc
sub
pop
bound
dec
dec
cltd
inc
adc
adc
push
mov
adc
movsl
adc
lods
dec
mov
in
mov
and
push
pop
fnstcw
mov
cwtl
test
push
sub
pop
mov
pop
mov
cmpsl
xor
sbb
ds
pop
cmp
dec
imul
jae
fwait
mov
stos
adc
adc
lahf
dec
outsl
je
mov
pop
fbstp
out
mov
jg
pop
es
and
and
xchg
xchg
sahf
jp
add
jg
cs
or
lock
pop
and
scas
fimull
xchg
mov
jnp
pop
pusha
lret
sbb
pop
popa
mov
pusha
jnp
repz
xchg
test
jg
pop
or
cmpsl
imul
mov
sbb
imul
push
pop
daa
sub
mov
mov
stos
xchg
pop
pop
fiadds
adc
lret
cmp
imul
fndisi(8087
popa
inc
cli
rcrb
in
pop
sub
rolb
fisttpll
idiv
cmp
lea
out
imul
stos
xchg
inc
iret
jne,pt
outsb
inc
aas
popf
cmp
xor
fs
into
jg
jg
cmp
lahf
lods
jg
adc
push
or
push
mov
xchg
mov
or
pop
ja
pop
mov
clc
sub
jge
cmpsb
daa
test
push
mov
movsb
xchg
pushf
aas
lret
cmp
dec
out
filds
xchg
push
pushf
inc
inc
jmp
mov
pop
int3
or
rorl
xchg
fstpl
out
adc
push
dec
mov
movsb
sub
loop
sbb
push
mov
cmp
cmp
or
jns
mov
adc
ja
mov
repz
je
mov
fcomi
insb
and
call
xchg
repnz
in
out
mov
imul
iret
sti
sub
pop
or
mov
push
xor
pop
mov
xor
addr16
int3
lods
subb
mov
orl
push
ja
sub
lods
pop
cmpsl
or
mov
push
dec
mov
add
adc
jl
lret
je
repz
in
cmc
push
cmpsb
xchg
lret
mov
inc
mov
mov
loope
dec
aad
gs
pop
mov
pop
sarl
xor
mov
in
pop
repnz
fisttpll
mov
aaa
ds
jne,pt
pop
repz
and
jae
int
xchg
mov
lahf
jb
dec
mov
daa
dec
lock
inc
jle
pop
lods
mov
sbb
imul
jecxz
test
push
and
sub
dec
cmp
mov
ficoml
push
repnz
dec
iret
mov
iret
dec
mov
mov
in
mov
pop
std
adc
clc
push
mov
leave
stos
pop
into
popa
mov
testl
mov
into
sbbb
ljmp
and
fistpl
ds
jmp
repnz
int
cmp
lock
inc
xchg
push
loope
enter
push
mov
xchg
jmp
xchg
lea
mov
addr16
mov
push
inc
or
scas
jmp
jae
xor
mov
ds
aad
fcmovne
jnp
ficomps
cli
xor
sahf
daa
fadds
xlat
xor
jno
and
idiv
leave
pop
stc
cmpsl
push
dec
lcall
nop
outsb
into
in
cmp
cmp
add
push
gs
pop
jno
lds
imul
jmp
bound
push
jge
je
mov
mov
jmp
arpl
mov
or
or
xchg
mov
add
or
lock
push
mov
or
dec
cmp
jns
jle
inc
jge
push
icebp
and
je
pop
mov
adc
jge
add
cmp
arpl
jmp
int3
mov
cmp
mov
dec
sti
inc
stc
daa
cltd
mov
push
dec
adc
jne
test
mov
jge
shrl
dec
shll
enter
sbb
adc
test
test
push
and
pop
cmpsb
sub
in
fs
adc
sti
xchg
out
nop
and
mov
cmp
insb
cld
pop
mov
shrl
add
in
out
jg
mov
ss
push
push
mov
sahf
xor
xor
loop
ss
in
xor
xor
testl
mov
movsl
or
add
stc
mov
mov
dec
add
cmpsl
and
arpl
xchg
inc
testl
mov
pop
sub
pop
ja
movsl
lea
cmp
add
test
dec
jae
xor
push
cld
mov
test
sub
sbb
pop
adc
popf
repnz
lock
sti
xor
ficompl
montmul
cmpsb
inc
jl
sub
or
inc
dec
nop
in
mov
jecxz
dec
jbe
test
sbb
lahf
pop
push
push
jmp
jge
jp
add
cmp
or
lahf
data16
rcrl
cmp
in
int3
cmc
movsl
push
cmp
and
pop
push
in
xchg
jo
xchg
adc
sbb
sbb
stos
dec
icebp
or
pop
jno
lods
rcrl
jnp
jns
leave
xorl
js
sbbl
popf
and
jb
in
pusha
cmpsb
adc
mov
adcb
or
gs
scas
jp
loop
mov
adc
xor
rorb
lcall
xchg
and
pop
push
jmp
outsl
inc
jg
sub
mov
sbbl
mov
rorb
lret
inc
aad
pushw
mov
test
pop
jmp
or
lods
xor
pop
jae
pop
leave
lcall
dec
ja
jmp
xchg
push
xchg
jae
push
faddl
cmp
icebp
jb
xor
ss
jae
inc
je
push
rclb
jnp
roll
es
les
push
mov
stos
or
scas
aam
jl
xlat
dec
cld
push
adc
stos
js
pop
outsb
popf
push
dec
or
cmpsb
mov
sub
add
mov
dec
in
dec
cmp
lahf
and
mov
stos
stos
ds
or
or
mov
jecxz
mov
in
js
mov
mov
dec
mov
in
js
push
sub
sub
push
jmp
mov
xor
mov
xor
aaa
inc
in
popf
aaa
mov
sub
add
sbb
enter
push
mov
sbb
outsb
mov
jns
mov
jmp
jp,pt
aaa
aaa
test
into
xor
lock
hlt
ja
ljmp
data16
fadds
dec
lret
xchg
aas
sub
loopne
xchg
push
sub
xchg
aam
add
mov
dec
lcall
dec
cmp
add
daa
sti
inc
js
addr16
jp
nop/reserved
sahf
sarb
fisttps
clc
stos
in
pop
into
scas
repz
stc
aaa
add
adc
xor
mov
pop
ror
cmpsb
mov
mov
and
jl
xor
and
xor
mov
mov
inc
cmc
call
jl
lea
pop
arpl
sub
jno
add
rolb
in
data16
jbe
push
sbb
jecxz
pop
cld
pushf
stos
jle
negl
cmp
push
xor
push
mov
sub
scas
and
js
jnp
ds
push
jp
idivl
jne
stc
fs
pusha
xor
insb
lock
mov
lods
mov
divb
lahf
mov
icebp
movsl
cltd
xchg
enter
mov
inc
or
bound
dec
ds
push
and
int3
or
dec
sti
lret
in
add
sbb
dec
or
cmp
les
mov
mov
dec
fmull
xor
pop
add
mov
ret
xchg
mov
rcrl
call
inc
jno
aaa
pop
out
pop
sbb
mov
xchg
aam
cmc
xchg
jne
stos
pop
push
outsl
ret
mov
movsl
rolb
sbb
shlb
xchg
pcmpeqw
ljmp
movsb
into
dec
push
lock
repz
mov
adc
icebp
mov
out
pop
cmp
xchg
ds
inc
inc
test
push
jecxz
in
aas
dec
nop
mov
js
or
fldcw
sbb
out
iret
lods
sbb
dec
xchg
jno
push
stc
js
fisubrs
stos
addr16
clc
jae
cwtl
xchg
sbb
sbb
jns
pop
jnp
mov
aas
mov
stos
adc
dec
xchg
dec
lds
xor
jns
xor
jnp
ljmp
cwtl
inc
cli
repnz
out
movsb
push
and
cltd
cmp
xchg
dec
lcall
enter
xchg
sarl
movsl
mov
repz
cs
frstor
outsb
pop
nop
mov
or
jns
push
push
outsl
scas
data16
lcall
jmp
pop
shl
ljmp
addr16
pop
cmp
xchg
inc
imulb
mov
adc
enter
ret
jnp
cli
push
xchg
push
or
sbb
xorl
loope
fwait
sub
adc
test
push
dec
lret
push
inc
push
ret
jp
mov
rcll
sub
stos
out
rol
push
inc
outsl
orb
lds
xchg
ss
test
daa
mov
clc
insb
xchg
xor
pop
mov
xor
fistpll
subb
push
mov
push
xor
and
cmpsl
inc
in
inc
xchg
sti
repz
loopne
outsl
add
and
xor
aam
popa
pushw
mov
cs
outsb
mov
push
add
test
xchg
xchg
or
repz
xchg
cmp
adc
mov
or
cmpb
jle
aam
jne
out
sarb
inc
and
pop
cmp
add
jno
sub
push
push
mov
cli
mov
mov
outsl
mov
sub
adc
xchg
leave
push
js
or
mov
jle
stos
inc
add
repz
aam
and
jle
cmc
test
testl
push
inc
punpckhdq
stos
into
out
mov
sti
pop
popl
notb
int3
push
sub
xor
mov
test
dec
cmpsl
push
dec
xor
push
add
jge
test
stos
pandn
roll
adc
in
and
rcll
aad
sbb
outsl
jmp
popa
int
jecxz
je
adc
lcall
loopne
test
jl
ror
test
jno
ret
leave
pop
sub
xchg
jns
fiadds
call
loope
mov
adc
dec
xor
cmp
sub
xchg
mov
popa
into
in
or
loope
push
jmp
fldt
push
ret
fcmovbe
inc
shlb
adc
stc
push
fildll
xor
mov
ss
ja,pt
lods
cli
dec
and
inc
jno
inc
icebp
lods
aaa
das
xchg
xchg
jecxz
adc
loope
es
loopne
push
cmc
add
xchg
or
leave
push
add
popf
mov
sbb
push
mov
loopne
cmpb
push
push
bound
cmp
cmp
push
xor
cmp
cmp
inc
push
fsubrl
pushf
aad
sub
repnz
stc
and
inc
test
mov
and
lcall
cli
jmp
adc
xor
push
mov
fcoml
mov
add
cmp
daa
ss
imul
clc
imul
inc
and
cmpsb
mov
xchg
mov
mov
jmp
aaa
inc
into
scas
orl
fidivrl
mov
sub
mov
daa
andb
sbb
push
xchg
enter
scas
mov
daa
jae
sarb
lret
popa
mov
sbb
mov
pop
inc
sbb
or
outsb
jecxz
xchg
mov
xchg
or
pop
insb
roll
push
jnp
and
scas
lds
mov
in
fildll
lcall
roll
push
mov
fistps
cmp
jbe
sahf
fs
outsl
mov
mov
enter
sbb
daa
cmc
xchg
test
fwait
and
mov
rorb
mov
push
clc
jmp
mov
test
out
pop
mov
popa
scas
std
adc
mov
xchg
popa
std
xlat
or
pop
js,pn
imul
lahf
sub
xor
push
inc
jne
test
sub
mov
les
dec
adc
out
jbe
inc
adc
inc
adc
mov
shl
inc
pop
push
or
cmp
cwtl
out
stos
loop
sbb
xlat
cmp
xchg
lods
imul
enter
sbb
add
bound
pop
jp
les
pop
cmp
sub
xlat
mov
scas
dec
push
mov
mov
and
jecxz
sbbl
mov
mov
xor
frstor
js
xchg
testl
mov
adc
mov
sbb
sub
shrb
xchg
cwtl
bound
sub
mov
test
sbb
insl
pop
out
xlat
stc
iret
mov
lret
push
sub
sbb
mov
and
pop
jg
jb
add
out
push
jmp
in
test
or
pop
xor
repz
mov
xchg
pop
inc
iret
add
add
fadds
cmp
repnz
mov
lahf
mov
shl
pop
cli
xlat
mov
fs
pop
negb
es
cmp
cmpsl
sub
clc
jge
cs
xor
mov
test
inc
data16
sub
imul
rorl
fisttpll
xor
lock
cld
adc
pop
xor
sarb
add
ja
jne
jnp
sbb
mov
mov
jge
es
aam
adc
test
cmp
jo
test
insb
mov
dec
mov
rcrl
fstpl
push
xchg
push
mov
pop
push
sub
iret
sahf
jb
mov
lds
inc
mov
lret
or
pop
xor
mov
fstpl
enter
arpl
or
rorb
and
push
arpl
jb
outsb
or
in
inc
fcomip
cmp
sbb
cmp
rcl
ret
imul
sbb
jp
mov
std
sub
fstl
push
aad
fistpll
sbbl
pop
outsl
sub
jno
push
mov
push
outsl
mov
imul
add
shr
and
jnp
sbb
pop
dec
xchg
sbb
fwait
and
xor
mov
cmp
ljmp
pop
xchg
es
outsb
int
sbb
xor
xchg
ja
sbb
into
dec
popl
push
xorb
sbb
pusha
call
cld
daa
fidivrl
or
fidivl
jae
mov
std
sbb
ljmp
cmc
cli
push
mov
fcomps
and
outsb
push
and
es
add
enter
aam
push
leave
push
fnstenv
sub
xor
cmc
mov
into
inc
insb
aam
fptan
arpl
sub
gs
mov
lret
out
jbe
fists
mov
push
cmp
xchg
lods
mov
dec
adc
std
das
dec
add
rcll
int3
pop
aaa
push
add
in
and
xor
adc
fisttps
sub
icebp
mov
aas
xor
add
mov
pop
movsl
lods
stos
stc
push
in
sbb
mov
cld
xor
test
int
sbb
ljmp
pusha
gs
pop
js
stc
jmp
aaa
out
dec
in
imull
and
inc
inc
xorb
push
cld
xchg
sub
xchg
or
sbb
int3
push
sbb
data16
or
lea
outsl
fstl
in
mov
pop
dec
hlt
scas
or
and
cmpsb
xchg
mov
inc
cmp
mov
cmp
pusha
pusha
popf
je
std
rcr
popa
out
mov
movsb
push
pop
push
xlat
ljmp
sub
fwait
adc
or
roll
mov
mov
mov
daa
enter
adc
stos
out
adc
ds
dec
and
adc
or
out
jecxz
aas
mov
fstps
repnz
fwait
cli
cmp
and
xchg
imul
clc
or
cs
mov
mov
adc
xchg
xchg
mov
sub
mov
jmp
xchg
jo
call
stc
aam
lahf
pop
push
or
outsb
push
ficoml
add
xor
mov
fidivrl
lahf
cmp
xchg
jo
idivb
sbb
xor
mov
xor
lret
fnstsw
imul
mov
pop
or
gs
mov
cmp
mov
pop
push
pop
sub
test
mov
jb
in
subl
jg
dec
mov
xchg
movb
sub
jg
repnz
inc
jno
incl
cld
mov
xchg
mov
xchg
sbb
sbb
adc
or
ljmp
pusha
int3
sbbb
pop
stos
ret
mov
aas
pop
ljmp
imul
incb
sarl
stos
mov
and
or
lcall
test
ror
and
dec
jecxz
pop
xor
daa
jb
cmpl
jns
mov
gs
mov
or
jge
adc
dec
pop
mov
xchg
and
in
popa
movsb
add
xchg
out
les
pop
icebp
cvtps2pd
cld
push
mov
dec
ret
xchg
xor
push
pop
jg
fcmovnb
fstp
pop
sub
popf
aaa
insl
into
add
mov
insb
sahf
dec
sub
push
pushf
sub
mov
sub
lods
loop
mov
addr16
addl
xor
push
adc
inc
loop
aad
fisubrs
in
mov
fnstcw
or
xchg
or
pop
mov
bound
sbb
call
call
push
inc
out
rclb
xchg
xchg
pop
iret
dec
fs
mov
out
cmp
andb
ret
jnp,pt
add
cmp
fdivrs
mov
jo
lds
aam
aad
xchg
sbbl
jecxz
shlb
adc
add
jo
add
std
popf
xchg
in
mov
jo
jl
enter
jmp
lock
adc
jecxz
stc
and
inc
daa
xor
xor
mov
inc
fwait
lods
pop
dec
clc
or
aaa
fucomip
push
enter
xchg
loope
jg
popf
sub
pop
jmp
xor
imull
jge
aam
fdivrl
add
lahf
pusha
out
mov
lret
and
sti
sbb
out
jp
inc
mov
movsb
dec
inc
test
jl
repz
insl
pushf
test
shlb
pushf
or
add
stos
jmp
inc
les
repnz
xor
jp
jl
loope
pop
test
cmp
pop
test
loope
adc
sub
xlat
and
notl
std
and
pop
cwtl
adcb
push
cwtl
xor
dec
cmpsb
stos
cmp
mov
xchg
shrb
sub
stos
outsb
mov
in
adc
stos
cmc
dec
frstor
xchg
imul
into
cmc
lcall
dec
shll
mov
sbb
jno
call
mov
lods
pop
js
mov
lock
shrb
enter
sub
xor
jecxz
hlt
fisubrl
adc
out
cwtl
jbe
pop
pop
loopne
xor
cmc
cwtl
xor
pop
cs
push
jmp
cmc
fistpl
sub
inc
pop
enter
sub
fidivl
or
lcall
loopne
pop
push
jle
pop
outsb
adc
repnz
out
idivl
in
jecxz
ja
jp
repz
xor
add
adc
clc
and
cmp
dec
out
push
aam
outsb
pop
add
inc
int3
lcall
std
sbb
pop
pushf
inc
ss
ljmp
test
dec
pop
rclb
push
enter
aad
pop
cwtl
outsb
mov
add
and
pop
and
xlat
repz
pusha
xor
jl
mov
jg
xor
cmp
ror
movsb
mov
fwait
sub
movsb
or
xor
mov
ljmp
loop
cmp
xchg
pop
mov
hlt
and
cs
sub
gs
fldcw
xchg
nop
fisttps
rcl
lcall
lock
lds
mov
lods
mov
and
push
les
sti
jl
xor
emms
enter
xchg
sub
or
mov
call
mov
mov
sbb
enter
pop
cwtl
push
cwtl
xchg
lcall
xchg
jb
pop
sub
mov
call
stos
out
in
test
jp
call
add
shlb
adc
fstl
arpl
mov
ljmp
or
mov
fstpt
lret
dec
adc
mov
lahf
add
inc
dec
mov
jne
lahf
repz
adc
jae
lock
mov
push
or
mov
sti
sbbb
imul
dec
mov
mov
pop
out
xchg
mov
push
dec
jne
popf
jmp
dec
push
jp
fdivrs
addr16
icebp
sub
sub
loope
push
stc
in
into
and
cld
negb
cmc
loopne
adc
cmp
roll
push
ja
and
push
mov
sti
dec
rorl
int
das
cwtl
dec
movb
and
mov
pusha
ja
inc
push
fcmovbe
or
es
ljmp
sbb
dec
adc
adc
rolb
daa
mov
fstl
shlb
xchg
enter
xor
cli
jmp
enter
xchg
xor
jmp
mov
dec
pop
push
out
call
push
push
mov
cmpsl
mov
mov
add
mov
inc
jge
sub
fstpt
scas
cmpsb
cmp
jns
into
mov
imul
cmovg
jns
cltd
jecxz
imul
test
xor
imull
pop
icebp
pop
jne
pop
icebp
or
leave
nop
jmp
or
je
jo
nop
xor
dec
mov
mov
imul
in
sub
mov
fstl
loopne
dec
enter
stc
inc
sbb
inc
mov
vshufps
lret
push
fs
cld
lock
dec
xchg
ljmp
xor
test
sti
cmpsb
popf
outsl
lods
aad
sub
jo
into
add
xlat
fs
inc
loop
mov
inc
ds
stc
jno
sti
insl
xor
mov
dec
aad
or
sub
jbe
pop
push
mov
pop
fcomps
dec
movsl
pop
sub
ret
ljmp
lcall
sbb
ret
mov
mov
cmp
cli
repz
dec
pop
enter
mov
and
stos
movsb
roll
adc
push
cmp
jg
jae
pop
mov
dec
rcrl
push
inc
xlat
test
add
xor
push
lods
or
cli
inc
fbld
in
cmp
loop
cwtl
aam
roll
cltd
or
ret
xchg
cmpb
pushf
dec
mov
iret
daa
inc
rcrb
xchg
enter
jnp
cli
adc
stos
add
pusha
leave
pop
mov
jl
aam
inc
cmpsb
test
ficoml
ljmp
in
das
and
or
add
xor
dec
push
sbb
xchg
test
test
inc
cmc
mov
aaa
ret
popa
xchg
into
inc
jnp
pop
jg
loop
movsb
notl
mov
mov
xchg
xchg
cltd
cli
aam
mov
push
loopne
fcoms
js
test
fstl
mov
mov
jbe
inc
lods
call
cmp
les
or
mov
std
lret
loopne
push
push
dec
pop
and
enter
scas
push
fdivrs
mov
subb
fistpl
or
jmp
sbb
or
test
or
std
test
mov
adc
out
fs
movsb
and
xchg
cmp
jae
mov
mov
lods
xor
fcmovbe
dec
xor
pusha
iret
adc
idivl
cmp
nop
imul
lahf
sub
daa
xchg
int3
mov
shll
subl
andps
bound
xchg
inc
cli
push
rcrb
or
sbb
test
mov
push
mov
adc
dec
ret
xchg
cwtl
adc
icebp
testb
fidivrl
xchg
shrl
xchg
mov
pop
in
add
cmp
lcall
hlt
cltd
stos
mov
cwtl
and
xor
cmp
sub
es
ss
icebp
std
ror
push
jecxz
pop
jno
add
inc
xchg
or
jno
and
ss
scas
jge
mov
hlt
or
inc
push
inc
fsubr
cwtl
sbb
jge
in
outsl
push
pop
adcl
mov
clc
dec
dec
pop
xchg
leave
je
cmp
lcall
or
orl
and
adc
add
mov
xchg
setno
and
push
gs
std
ret
outsb
psrlw
xchg
inc
push
pop
xor
mov
aas
adc
mov
adcw
pop
and
add
push
lock
je
cltd
add
mov
out
pop
sub
loope
bound
and
repnz
fbld
jno
sbb
mov
sub
dec
jecxz
inc
jns
ss
out
xchg
add
test
rsqrtps
or
outsb
rcr
imul
push
add
lret
les
push
jge
daa
sub
ucomiss
mov
lock
and
cmpsl
or
xorl
mov
cmpb
lret
in
and
sbb
mov
outsb
add
lods
aaa
fwait
dec
popa
cwtl
xchg
jle
mov
nop
fsubs
clc
jbe
mov
std
mov
mov
pop
xor
daa
jne
pop
ds
mov
gs
inc
pop
imul
xlat
js
and
test
lea
sbb
adcb
dec
jge
xchg
repz
enter
rcll
adc
cmpsb
bound
inc
dec
mov
fnstcw
popa
enter
cmc
inc
jecxz
mov
fbstp
imul
sbb
test
out
or
dec
hlt
xchg
mov
ljmp
movsl
sti
movl
adc
pop
ror
mov
pop
iret
pop
aas
popl
jo
dec
mov
pop
xchg
dec
shlb
sbb
jbe
push
cli
repnz
icebp
fistpll
push
cmp
repnz
xor
mov
push
pop
movsb
neg
ret
frstor
jbe
outsb
xchg
adc
clc
jmp
mov
fwait
pop
lock
jecxz
sbb
mov
and
sbb
gs
sbb
add
jle
fistpl
sub
ja
xlat
xor
sub
aad
ljmp
pop
arpl
adc
or
leave
add
fdivl
rcr
xchg
xor
push
out
mov
sbb
jp
sub
jg
jne
fwait
test
mov
imul
lods
into
mov
rclb
mov
mov
push
mov
mov
cld
lret
outsl
lds
inc
xchg
push
push
je
repnz
mov
mov
pop
fstpt
fstpl
pop
lret
xchg
and
rcrb
lea
sub
repnz
push
ljmp
cmp
adc
sbb
or
mov
push
outsb
test
push
xor
adc
push
inc
mov
aad
inc
int3
adc
ret
mov
aaa
popa
push
mov
mov
movsl
fstl
push
rcll
int3
inc
inc
push
mov
incl
cmp
fidivrs
adc
sbb
mov
clc
rol
sbb
enter
jg
mov
cwtl
cmp
xor
mov
sbb
mov
adc
cmp
cld
pushf
ljmp
jl
cmp
test
push
push
push
fsubs
daa
dec
cld
lahf
fcomip
jns
fcoms
cmc
and
adc
xchg
mov
je
icebp
sbb
and
dec
ja
lock
xchg
popf
orb
test
xchg
xor
fisubl
fwait
mov
leave
int3
mov
rcll
ret
xlat
mov
xchg
sbb
gs
cmp
dec
jns
enter
out
lcall
cmp
rcl
into
dec
sub
dec
stos
add
sti
push
add
mov
pop
scas
sub
or
aad
add
fcmovb
ret
scas
inc
xchg
or
cmpsl
jl
sti
incb
mov
sbb
inc
jae
mov
movsb
cwtl
jns
push
push
mov
pop
xchg
nop
movsl
xor
scas
push
jl
arpl
jbe
repnz
mov
push
adc
cmp
jge
mov
call
adc
ds
lods
sti
call
sbb
sbb
popf
adc
sbb
outsb
daa
testb
sbb
leave
rclb
aad
call
lods
pop
jne
in
cli
jb
sub
jle
repz
mov
inc
sbb
add
test
lods
jp
pop
pop
ret
push
outsl
mov
mov
xchg
inc
movsl
test
fwait
testb
mov
arpl
inc
mov
inc
mov
inc
addr16
push
popf
and
lock
pop
sub
std
int3
repnz
push
mov
adc
jnp
cli
adcl
xor
nop
mov
popa
imul
dec
pop
or
call
pop
rcl
and
fdivl
push
es
or
cmp
loopne
clc
bound
push
sub
jp
xor
xor
out
das
jge
dec
iret
test
add
popf
rolb
in
sub
add
dec
cmp
and
test
and
dec
inc
subl
fnstcw
jmp
arpl
clc
sbb
call
lods
ljmp
cmc
out
push
es
mov
icebp
inc
out
inc
mov
ror
xchg
shr
jle
push
in
jno
ss
imull
adc
ret
and
xchg
xchg
cld
stos
and
jo
mov
andl
lret
cli
dec
push
adcb
out
xchg
xlat
lods
lock
or
mov
mov
arpl
pop
pop
xor
jns
ret
fisttpll
aaa
pop
xchg
loopne
ja
cmp
add
iret
mov
mov
and
jae
jbe
push
ljmp
out
xchg
test
mov
mov
xor
in
push
mov
mov
stc
adc
fs
and
or
pushf
cmpsb
repnz
mov
fsubl
xor
decl
cmc
push
mov
cltd
and
aad
xchg
repnz
addb
shrb
int3
test
xchg
jne
jmp
hlt
dec
push
mov
sbb
or
push
iret
fs
repnz
mov
mov
push
stos
mov
sub
mov
dec
stos
lock
imul
and
imul
xlat
sbb
mov
jmp
adc
aaa
sub
cwtl
add
mov
xchg
mov
inc
mov
mov
jns
gs
jns
push
insl
les
cld
push
pop
not
push
mov
or
fsubr
pop
add
push
sub
pop
mov
lcall
js
push
lahf
push
sub
imul
fisttpl
rcrl
pop
ret
in
sarb
das
mov
or
add
rcr
mov
sub
imul
pop
andl
mov
sahf
cmp
shll
cmpsl
fstl
lahf
cltd
mov
popa
xor
push
xor
dec
push
fs
int3
push
out
scas
push
imul
sbb
xor
mov
cltd
fcmovnu
out
jns
stos
stos
xchg
xchg
inc
shlb
lock
push
shlb
rclb
lcall
inc
mov
sbb
mov
add
andl
mov
pop
sbb
mov
mov
ds
jb
sbb
loopne
pop
cmc
mov
pop
sub
repz
out
incb
mov
cmp
iret
cmp
and
lds
sbb
pop
ds
mov
testl
push
fnstenv
xchg
notb
cld
adc
and
mov
push
jno
mov
pop
mov
adc
mov
ret
jo
mov
nop
jl
jp
ret
sub
int
mov
xor
push
add
subb
mov
xchg
xor
mov
loop
add
push
inc
int3
push
cmp
ljmp
sbb
xchg
sub
das
sahf
mov
inc
es
lods
pushf
cltd
mov
int
lret
ljmp
sbb
pmulhuw
adc
add
out
push
push
dec
loop
xchg
cltd
push
fistpll
xchg
ss
push
pop
xor
pop
mov
push
mov
xchg
lahf
negb
rcrl
int
enter
cs
add
rcrb
test
mov
cld
adc
stos
pushl
xchg
cmp
mov
push
movsb
movsl
stos
jmp
mov
insl
cmc
push
jb
jb
insb
sbb
push
cltd
fsub
test
adc
mov
inc
rolb
or
movsb
xchg
inc
sti
loope
mov
aaa
cmp
jns
pop
cmp
aas
scas
cwtl
pop
ja
push
sahf
in
hlt
mov
dec
inc
out
pop
push
arpl
dec
push
cmp
loopne
dec
push
clc
rclb
mov
cmp
xor
outsl
test
popf
mov
mov
add
sbb
mov
sub
dec
xchg
mov
cmp
cwtl
push
jl
ljmp
fistpl
dec
inc
add
and
pusha
je
mov
xor
jmp
je
pusha
jb
pushf
dec
or
mov
dec
insb
jmp
pop
fdivs
ret
rcrl
pop
imul
jo
inc
popa
fldl
ja
push
add
mov
or
ret
or
cmpsb
orl
jno
clc
int3
movsb
pusha
pop
cmp
mov
fnstsw
push
cmp
push
mov
pop
int3
add
cs
mov
mov
ret
mov
sub
jle
mov
loop
sbb
inc
sbb
add
pushl
push
and
or
jmp
push
cmpsb
and
jae
pop
cmc
sbb
out
fcoms
mov
idiv
mov
call
or
mov
xor
stc
dec
dec
sti
dec
and
setp
sarb
mov
test
adc
push
movsb
in
mov
in
popf
out
scas
adc
xor
xchg
outsb
xchg
jge
fwait
xchg
or
jmp
sub
xchg
push
js
mov
int3
jo
repz
cmp
shrb
mov
mov
sti
sub
fidivl
push
gs
and
push
test
loope
test
cmc
and
daa
rcl
pushf
push
arpl
in
popa
mov
aas
out
mov
xchg
cs
cmp
push
int3
insb
jns
arpl
mov
pop
fildll
ss
out
out
dec
fiaddl
mov
dec
xchg
mov
add
paddq
push
ljmp
pop
ret
mov
sbb
mov
cltd
cwtl
push
mov
mov
pop
cmp
lea
push
adcb
cltd
push
ja
loop
iret
sbb
insl
lock
lret
and
or
inc
loop
repnz
push
aam
dec
popf
repz
and
mov
dec
inc
mov
or
adcl
sub
cs
fdiv
movl
subl
add
mov
add
push
mov
js
hlt
movsl
lret
mov
sbbb
out
jg
lods
or
jnp
scas
sub
lret
arpl
dec
pop
outsb
cmp
clc
mov
xchg
popf
and
hlt
xchg
stos
inc
push
mov
ljmp
push
add
mov
jbe
leave
test
pop
and
cmpsb
lret
inc
neg
sbb
adc
vorps
sbb
mov
xchg
fs
out
outsl
movsl
adc
dec
icebp
cs
jl
shl
mov
cli
arpl
test
jne
jmp
inc
je
prefetchw
or
mov
movsb
scas
xor
sbb
xchg
mov
or
fdivrs
aam
jmp
test
fisubl
pop
inc
jno
icebp
stc
and
sub
into
xor
or
mov
xchg
cmp
mov
fs
addl
push
sub
mov
add
xchg
dec
or
xchg
stos
push
push
dec
popf
push
jo
bound
rol
adc
sbb
std
je
scas
lcall
cmp
shll
adcb
pop
imul
inc
xlat
xchg
mov
or
inc
gs
push
mov
out
addr16
mov
xchg
mov
mov
cmp
jo
jns
lahf
out
jnp
imul
jle
fwait
ljmp
ss
dec
movq
cmpsl
scas
mov
ljmp
jmp
xor
pop
or
cmp
and
adc
fcoml
pop
leave
stos
lds
or
sub
adc
mov
jmp
lret
fcompl
cltd
out
adc
leave
push
sbb
dec
and
add
push
mov
clc
pop
add
cld
and
cmpsb
icebp
or
or
lods
pop
cmp
mov
iret
lahf
sub
hlt
jno
shrb
pop
xchg
add
mov
jmp
mov
jl
mov
andb
jl
stos
bound
ds
xchg
add
cld
adc
mov
leave
pop
mov
sub
adc
leave
cs
aam
dec
inc
mov
mov
cmp
in
push
daa
ljmp
fs
jmp
fcomps
jp
mov
ja
dec
mov
movsl
cwtl
fcompl
push
lds
test
inc
xor
loope
ds
es
or
fisubrl
in
scas
data16
lods
jge
add
shl
pop
mov
jmp
xor
ret
sbb
sub
in
mov
fnstsw
sub
pusha
insl
sub
sbb
test
push
push
or
lock
xor
xor
fwait
sub
ljmp
xchg
insl
push
and
or
out
stos
movsb
cli
mov
ljmp
add
lock
inc
pushf
fcmove
xchg
shl
and
add
sub
aas
aam
xchg
mov
gs
arpl
jne
dec
outsb
ret
test
mov
sub
xchg
or
lods
outsl
sbb
repnz
incl
imul
fwait
mov
in
rcrb
movsb
sbb
jle
push
push
test
push
push
sub
add
mov
clc
shrb
dec
mov
imul
xlat
out
addr16
mov
stc
adc
sub
jl
fsubrs
xlat
mov
jbe
outsl
mov
addr16
adc
clc
loop
test
mov
and
lods
cmp
xchg
mov
fbld
cltd
jmp
or
jmp
jo
jne
pcmpeqw
mov
and
push
icebp
mov
shr
stc
mov
cli
pop
leave
in
dec
ds
xchg
in
mov
cmp
mov
fcmovnb
xor
popf
jae
lods
push
jno
loopne
iret
jmp
add
lods
out
popa
insb
in
mov
mov
popa
jmp
jp
ja
xchg
ret
orb
cmc
out
icebp
fs
dec
in
push
lret
mov
mov
fnstcw
aam
inc
cltd
jo
mov
mulb
scas
dec
mov
fnstsw
pop
in
inc
rol
arpl
pop
in
dec
in
clc
pop
sti
mov
movb
stos
jnp
arpl
lret
pop
ljmp
mov
dec
ss
pop
dec
cld
xchg
push
pop
adc
mov
adc
stos
aad
mov
mov
and
out
dec
mov
stc
sub
sbb
mov
push
xchg
push
xor
scas
mov
xchg
int
fmuls
cmc
and
or
xor
pop
mov
mov
sub
inc
or
mov
jno
pop
cmp
pop
add
add
sub
sub
daa
call
pop
mov
cmpsb
push
sub
pop
xchg
or
xor
cmpb
lock
sbb
punpckhwd
fs
xchg
nop
push
xchg
xorb
jb
lret
fucomp
aam
scas
xchg
repz
js
cmp
imul
or
dec
sbb
fcoms
mov
dec
adc
and
mov
mov
pushf
lods
out
stos
and
cmp
mov
mov
test
xor
roll
pop
iret
in
daa
inc
and
adc
mov
data16
xchg
leave
dec
xchg
js
rclb
stos
push
sbb
pushf
adcb
test
loopne
pop
dec
xchg
incb
sbb
cwtl
inc
pop
fwait
sbbl
jle
xor
inc
outsb
shrb
mov
push
push
stos
lock
push
jl
mov
pop
xchg
dec
movsb
xchg
cmp
pushf
int
lret
out
repz
xorl
ds
xchg
test
jmp
sub
adc
and
cmpsl
mov
mov
dec
lods
mov
jle
fucom
iret
fbstp
cwtl
shrd
inc
mov
mov
rcl
sti
pop
push
out
sbb
sarl
bnd
inc
iret
mov
cmpsl
jno
push
test
push
cmp
out
test
arpl
inc
sub
jne
dec
sub
inc
push
fwait
movsb
jae
cmpsl
ret
shrl
jne
movsb
rcr
xchg
shlb
sbbl
push
arpl
pop
lret
pop
or
mov
jg
and
aaa
dec
cmpsl
pop
movsb
ret
addl
mov
ja
sub
adc
mov
stc
nop
out
lea
jnp
push
jb
test
sub
jecxz
dec
les
leave
push
cmp
push
or
and
test
stos
and
pusha
ficomps
pop
int3
sahf
shll
pop
in
sti
and
lock
jge
iret
je
int3
jge
xchg
rclb
jbe
outsl
aaa
int
stos
lret
data16
sti
adc
into
inc
sti
loopne
jno
inc
jl
push
or
loopne
inc
imul
out
push
inc
mov
xchg
pop
jns
jb
stc
frstor
cmp
xchg
jbe
xchg
fdivs
jno
lods
cmc
sbb
xor
es
dec
ja
push
cmp
addr16
cmc
sbb
repnz
bound
mov
in
inc
add
dec
and
add
movsb
jae
xchg
mov
loop
fnstsw
fiadds
xor
in
sti
sbb
push
cmp
jl
push
mov
sahf
jns
mov
xchg
lods
xchg
scas
ret
inc
pop
lds
jnp
mov
cmpsl
jmp
or
sbb
push
jo
cltd
mov
or
repz
mov
and
loopne
jnp
mov
push
pushf
or
jge
lds
in
shlb
pushf
sbbb
sbb
out
cmpsl
rorl
and
into
sub
xor
lcall
imul
lcall
popl
lret
xor
lods
mov
adcl
adc
xchg
frstor
xchg
mov
mov
jne
imul
les
xchg
stos
push
fstpt
sbb
cmp
push
adc
aad
mov
sbb
out
dec
ret
bound
loop
add
repz
mov
dec
push
hlt
ficompl
loopne
imul
cmp
jne
adc
xchg
enter
and
data16
mov
inc
lret
cld
xor
mov
mov
cmp
lods
lcall
jge
jns
sbb
sbb
in
jbe
mov
mov
pop
testl
push
notl
mov
lods
ret
adc
lods
dec
fcoms
sbb
enter
addr16
test
pop
divps
mov
mov
sbb
xor
add
lea
les
mov
aad
rcrl
sbb
push
call
adc
je
sub
sti
leave
ja
sbb
pop
cmp
stc
cmc
or
lcall
mov
imul
aam
mov
mov
test
testb
imul
int3
insl
fmulp
enter
scas
outsb
ret
adc
or
add
mov
shl
adc
jecxz
loope
sub
ds
cmp
inc
popa
imul
cmpsb
inc
aaa
cli
popf
push
push
ja
aaa
or
xor
sti
icebp
pop
mov
std
ja
icebp
and
sahf
std
push
mov
jns
lret
sbb
mov
mov
pop
push
sbb
jbe
pushf
or
sub
add
adcb
mov
pop
jb
mov
push
pop
mov
pop
jp
movsl
outsl
push
stc
scas
inc
ret
stc
leave
shrl
add
mov
mov
loope
lret
fwait
push
jecxz
getsec
inc
xchg
mov
faddl
outsb
jb
rcrb
or
mov
lods
xchg
outsl
dec
inc
notb
cmpl
pop
loop
call
insl
ds
mov
inc
pop
inc
in
addl
and
dec
jno
in
cmp
cmp
and
pop
in
sub
jbe
push
jae
pop
jmp
je
push
add
call
and
xlat
and
jne
add
out
mov
jmp
pop
ja
pop
dec
lret
cmc
inc
data16
rolb
sti
jns
push
mov
repz
mov
call
cmpsb
mov
adc
pop
imulb
pushf
jno
in
out
nop
lea
je
sbb
sub
cmpl
icebp
cmp
movsb
orb
les
mov
mov
sbb
lcall
jo
pusha
arpl
sbb
mov
xor
and
in
sub
jp
xchg
push
or
xchg
mov
xchg
push
push
movsl
mov
daa
cmp
nop
mov
scas
pop
scas
push
dec
daa
mov
mov
lcall
stos
mov
daa
and
inc
js
in
mov
and
movsb
gs
push
bound
je
call
sub
int
aaa
leave
repz
les
fs
pushf
call
repnz
sbb
mov
jno
cmpsl
mov
int3
push
ja
cli
sbb
out
aam
fidivl
lcall
pop
push
in
mov
add
stos
or
or
pop
inc
jl
xor
inc
lods
stc
testl
fwait
sahf
call
lods
cld
sbb
test
sbb
mov
std
mov
pop
mov
aam
pop
outsl
addr16
jno
rorl
int
or
and
cmpsb
into
add
lods
rorb
fwait
cmp
xchg
mov
cld
out
repnz
cmp
jae
jno
sub
inc
into
inc
push
inc
clc
dec
shlb
arpl
cmpsb
inc
addr16
aas
dec
dec
pop
bound
xchg
and
out
arpl
mov
dec
push
call
push
xchg
inc
andl
mov
mov
xor
out
mov
cs
mov
fildll
lcall
jge
sahf
cmpsl
pop
push
sbb
lods
push
les
inc
mov
lock
into
cmpsb
ja
test
pop
out
fildl
push
stos
lods
neg
push
fnsave
xchg
dec
pop
int
mov
cmpsb
rcll
xchg
out
leave
mov
int3
int3
lret
jp
and
mov
into
xlat
and
jp
jnp
push
repnz
add
cmp
sti
push
jge
sahf
push
getsec
ss
dec
mov
mov
sub
in
or
add
mov
mov
push
dec
dec
or
dec
les
js
out
cmp
icebp
and
cwtl
pop
mov
bound
push
push
mov
sub
je
jbe
and
dec
inc
cmc
pop
fisubrs
lods
push
xchg
sbb
inc
cwtl
push
lea
push
pop
sahf
stos
jnp
mov
inc
shl
sub
xor
fisubs
movsb
iret
fstl
dec
dec
mov
daa
fs
push
push
pop
sbb
mov
adc
insb
aam
outsb
jno
out
pop
dec
add
fdiv
and
ljmp
or
xor
pop
es
push
inc
lret
loopne
andb
cld
xor
cmp
popa
sbb
sbb
or
inc
jae
xchg
jae
push
sub
sub
in
das
mov
fisubs
xchg
repnz
aam
sub
pop
bnd
lods
xchg
pusha
cmp
sahf
push
dec
popf
jbe
pushf
sub
jns
mov
cmpsb
orb
cld
dec
aas
cs
push
mov
rcrl
cmp
inc
jmp
push
add
mov
pop
push
xor
jmp
in
ljmp
lahf
or
fldl
xchg
push
lret
test
test
lret
and
ljmp
lret
out
pop
cs
rorl
sub
shl
xor
popf
push
jae
jmp
pop
jecxz
fcmovu
pusha
cltd
pop
sub
xlat
xor
lods
adc
inc
mov
push
and
jg
idiv
cmp
in
stos
inc
popa
sub
aam
jae
mov
and
cmp
test
pop
lcall
push
loop
sbb
pusha
pop
notb
mov
jecxz
cmp
popf
xor
add
icebp
push
pop
mov
jnp
je
lods
jo
inc
or
ja
stos
mov
inc
lcall
dec
jae
inc
cmp
and
scas
cmp
das
jecxz
and
in
or
mov
fisubrl
gs
pop
leave
into
mov
adc
repz
mov
mov
stc
outsb
fmuls
xchg
pop
adc
push
cli
sahf
ror
push
mov
mov
push
outsl
cmc
adc
or
or
adc
adc
dec
bound
mov
inc
dec
in
pop
mov
fs
hlt
filds
cld
aad
cmp
xchg
popl
push
mov
fwait
les
sub
mov
test
add
repz
out
adc
push
das
pop
or
roll
cmpsb
adc
push
leave
inc
push
mov
nop
shlb
dec
out
idivb
add
fcomps
or
inc
mov
push
mov
or
jbe
lcall
mov
dec
insl
mov
mov
and
sub
inc
pop
xchg
fwait
stos
mov
mov
fsubrl
test
jmp
cs
addr16
andl
jge
aad
and
lods
inc
adc
js
sbb
push
mov
sti
fisubl
lea
rcr
addr16
cmc
and
in
repnz
xor
pop
pop
push
das
mov
cwtl
xchg
dec
mov
dec
add
sub
or
sub
mov
lock
jle
or
jmp
mov
mov
es
leave
movl
outsb
add
mov
movntq
fs
mov
enter
pop
sub
in
dec
inc
pop
pop
cld
pop
jne
sbb
push
movsb
xor
push
lret
xchg
mov
mov
ficomps
test
push
bound
sub
nop
push
adcb
fmull
mov
mov
pop
mov
and
pop
ja
dec
jp
sub
insb
sub
cwtl
shlb
sbb
xchg
sub
sub
cmp
mov
jae
push
push
inc
scas
out
shlb
enter
jae
ljmp
dec
shl
fs
sub
and
mov
jge
mov
jo
mov
sub
inc
lods
iret
in
shr
mov
sub
pop
aad
nop
fs
pop
cmp
sti
pop
pop
in
in
xchg
jmp
fstpl
push
jl
xor
ror
push
iret
dec
pop
xchg
andb
out
push
sahf
fisttps
int
bound
cmpsl
test
sub
mov
inc
repnz
xor
sub
xchg
cs
push
and
mov
loopne
pop
aad
popa
sbb
andl
jo
xchg
pop
inc
or
out
dec
sub
or
das
mov
push
stos
fwait
dec
ret
jb
sbb
in
daa
scas
das
ljmp
imul
xor
test
daa
aam
movsb
das
cmp
adc
aam
lock
je
jo
test
xchg
fs
xchg
mov
jnp
xor
out
cmp
mulb
sbb
adc
adc
xor
inc
mov
and
fucomp
mov
mov
lret
rol
cwtl
dec
or
aaa
mov
loope
pop
xor
sahf
dec
in
lock
sbb
leave
jb
jle
push
out
and
pop
adc
or
push
fmuls
test
xor
cs
sub
mov
dec
sbb
rcl
ficoml
ds
mov
gs
mov
popf
lret
mov
or
mov
aaa
testb
dec
pop
clc
into
jmp
imul
pop
int3
test
jne
sar
cltd
adc
mov
fs
xchg
shlb
xor
jo
es
cltd
int3
int3
push
int
pushf
ud0
jae
dec
cli
lret
lret
cli
ja
popa
sub
leave
popl
stos
fsubp
enter
adc
xchg
sti
jno
inc
push
pop
int3
lods
push
in
mov
cmp
xor
in
xchg
push
inc
in
adc
call
push
ljmp
pop
leave
pop
jnp
mov
je
in
test
push
push
cmpsb
sahf
imul
fwait
sbb
jmp
sbb
imul
dec
cmpsb
std
adc
jle
dec
mov
mov
mov
sarb
test
mov
push
imul
or
and
addr16
add
sti
sbb
pop
sti
jnp
cmpsl
push
mov
incl
jne
xor
out
push
dec
or
jo
sahf
roll
sbbl
or
inc
enter
cmc
mov
popa
jo
outsb
fistps
insl
int3
mov
jecxz
fisubs
aas
es
andb
dec
and
dec
outsl
je
lcall
dec
dec
mov
lods
sub
in
add
icebp
pop
xor
in
mov
sahf
adc
stos
repz
jno
cmp
loop
push
lock
cld
push
inc
xchg
in
test
test
gs
jp
mov
xor
mov
push
inc
in
and
inc
or
dec
es
std
pop
jo
sub
pop
mov
in
or
sbb
ja
sub
adc
mov
mov
shll
xor
ljmp
fldl
scas
les
adc
sti
sub
stos
pop
shrb
scas
in
dec
negb
in
inc
cmp
jb
jbe
insl
dec
or
push
cmp
movsl
or
sub
mov
out
sub
mov
sti
cmpsb
mov
sbb
loope
mul
or
les
adc
ret
outsb
cmp
in
cmp
pop
jmp
out
mov
shl
adc
dec
sub
jmp
repnz
cmp
lret
in
aaa
mov
ss
push
fisubl
fdivrl
inc
test
out
sbb
cwtl
dec
fists
inc
sub
inc
fidivrl
push
add
test
cmp
jne
pop
cmpsl
mov
xor
gs
adc
adc
jo
rorb
cmpsl
in
sarl
lock
lods
xlat
add
jg
aam
and
jl
xor
jae
orb
clc
imul
push
fstpt
sub
xchg
add
adc
test
repnz
mov
ds
daa
pop
jg
jnp
push
jg
test
outsl
push
add
xor
and
mov
stc
and
cmp
pop
adc
dec
loop
ss
mov
loope
pop
and
or
xor
test
scas
mov
aas
aad
cltd
mov
scas
push
loope
add
test
xchg
mov
gs
dec
fists
scas
xchg
leave
lret
push
push
push
jnp
push
rcrl
aaa
ja
stos
outsl
xchg
and
or
jne
mov
mov
pop
mov
mov
out
cli
mov
les
add
push
rclb
or
pusha
frstor
xchg
movsl
js
xor
rorl
int3
into
nop
push
jmp
popf
dec
hlt
into
or
push
mov
not
outsb
ds
xorl
cmc
jb
in
push
or
ss
pop
pop
outsl
or
dec
out
popf
cmovp
cli
lods
xchg
jb
xor
adc
push
sti
sub
out
jg
xor
mov
pop
ror
push
and
or
inc
out
pop
sbb
repnz
pop
inc
sub
test
outsb
adcl
xlat
idivl
mov
and
and
es
sbb
push
inc
in
push
mov
pop
scas
xchg
pop
sbb
stos
dec
enter
fdivr
or
mov
xchg
scas
lock
lds
pop
jle
add
shr
xchg
mov
mov
pop
dec
cs
int3
and
mov
cltd
roll
in
pusha
jb
test
cld
jae
ret
mov
das
bound
adc
pop
imul
call
adc
pop
cmp
mov
ret
add
xorb
in
xor
jmp
shrl
out
sub
das
push
out
xchg
int3
in
push
negl
jl
icebp
adc
fucomip
and
sub
dec
leave
mov
xor
pop
addr16
ret
and
int
mov
dec
aam
xchg
push
sbb
pop
int
sub
or
xchg
fwait
in
push
mov
icebp
dec
out
push
jae
imul
mov
add
sub
inc
fcomip
mov
push
push
shlb
and
jl
cmc
fldl
and
fsubrl
dec
push
mov
mov
sbb
xchg
mov
mov
popa
pushf
rolb
pop
xchg
push
pop
push
int3
sub
cli
ljmp
xor
cmpsb
jecxz
mov
mov
ja
pushf
and
push
repnz
repnz
pop
pop
sti
mov
cmp
xlat
ja
cltd
sub
xchg
lret
ss
sub
roll
adc
mov
icebp
sarb
loopne
sbb
and
pop
pusha
jae
imul
in
cld
test
in
cmc
or
dec
pop
dec
repz
idivl
in
mov
repz
fisubrs
pop
cmp
addl
mov
cmp
movsl
or
add
stos
xchg
out
out
add
pop
jne
mov
popf
mov
lret
int3
cmpsl
jns
xchg
add
sub
jno
popl
jnp
shlb
pop
in
gs
push
call
or
hlt
inc
outsl
insl
sbb
andl
mov
pop
fwait
jecxz
mov
sub
inc
jmp
dec
cli
mov
adc
pusha
mov
insb
subl
lret
jp
movsl
cmp
adc
push
pop
js
xchg
ficompl
sub
pusha
je
inc
out
xlat
inc
in
repnz
subb
jge
scas
nop
push
ljmp
dec
mov
ds
test
in
jl
jb
inc
add
or
int3
js
aas
mov
adc
push
dec
inc
jb
jbe
xor
fsubs
jb
popf
cmp
fmul
jns
jae
testb
lcall
and
lds
stc
xor
dec
push
int3
mov
rcrb
inc
enter
les
negb
lret
push
pop
jg
jp
ja
addr16
repz
ds
xorb
and
negl
fisubrl
sbbb
cld
push
xchg
sbb
popf
jae
dec
dec
mov
mov
stos
daa
xor
test
aam
adc
imul
stos
lret
adc
or
cmpsl
jo
sbb
push
stc
pop
and
jl
push
adc
fdiv
cmp
xchg
cmp
stos
imul
lods
gs
pop
int3
roll
cld
fmul
movsb
xchg
adc
addr16
inc
dec
into
outsl
fstpl
cmpsb
jle
fists
insb
pop
mov
add
jge
test
cltd
pop
pop
adc
xor
push
xor
wrmsr
lahf
fwait
mov
sub
ljmp
and
mov
loopne
push
inc
push
sbbb
dec
outsl
fs
cltd
test
cwtl
lahf
test
pop
push
lea
and
jo
push
add
dec
aam
adc
outsl
sub
cwtl
outsl
insl
pop
aad
mov
pusha
xchg
push
inc
and
outsl
mov
sub
xor
inc
cmpsb
rolb
inc
nop
int3
mov
in
fcomp
rclb
outsl
jae
pop
iretw
inc
dec
pop
or
adc
dec
and
push
loope
int
out
aad
call
inc
cmp
pop
add
aas
sub
iret
jbe
test
dec
mov
mov
fnstenv
ret
adc
sub
andl
and
test
hlt
push
and
and
mov
imul
fisubrl
sti
sub
dec
dec
out
cmp
out
nop
negl
data16
cmp
out
jp
mov
push
fucomi
cmp
jg
xchg
test
lods
sub
imul
rolb
mov
mov
in
inc
jl
sbb
pop
and
inc
hlt
cmpb
xchg
popa
das
pop
or
ficompl
addr16
adcl
mov
cli
pcmpeqd
clc
sub
mov
sub
jg
enter
movsl
ffree
push
inc
mov
dec
jmp
push
leave
stos
cmp
push
xor
fimuls
jae
lahf
push
mov
xchg
or
mov
rcl
mov
push
or
mov
cmovs
or
xchg
cwtl
sub
test
bound
xchg
or
mov
popa
cmp
mov
cmc
pop
jl
mov
out
fcompl
les
cmp
or
ret
fwait
stos
aad
je
mov
pop
not
and
inc
cwtl
jmp
loopne
andl
leave
dec
fsts
fwait
repz
push
test
sbb
sub
dec
cltd
push
pop
dec
push
es
xchg
and
xor
std
add
in
xchg
add
cli
je
add
jno
inc
sbb
in
push
jnp
push
or
aaa
movsl
pop
jmp
inc
sbb
mov
push
movsl
xchg
leave
mov
nop
inc
pop
jp
and
sub
int3
push
imul
ljmp
int3
jns
repz
cmp
push
je
sbb
sub
lcall
adc
and
mov
pushf
sti
inc
add
dec
ret
in
dec
add
movl
push
dec
mov
mov
sbb
push
pushl
jnp
lods
cmp
out
popf
lods
xor
jns
shll
subl
fnstsw
pusha
push
xor
test
push
jge
std
mov
cmc
outsb
adc
push
or
mov
push
sahf
pushf
xchg
imul
inc
fildll
jae
in
push
and
mov
cmp
inc
ja
mov
and
lcall
sbbb
fisubl
jmp
push
insb
dec
aas
fsubrs
repz
mov
dec
xor
call
push
push
int3
push
cmpsl
and
mov
jns
sub
cmpsl
aam
mov
and
jbe
inc
pusha
mov
add
andb
sbb
xor
mov
scas
arpl
out
sti
push
push
repnz
pop
add
jno
jl
sarl
aaa
push
es
mov
test
in
ret
adc
sbbl
jle
ret
jbe
sbb
mov
jo
cmp
pop
lret
push
sub
adc
dec
ret
xor
das
mov
mov
inc
rcrl
lea
int
jbe
cmpb
lcall
and
cs
pusha
sahf
cld
mov
push
dec
loopne
cmpsl
xchg
fildl
sub
jecxz
call
cmp
jae
mov
lods
imul
sub
push
mov
cmpsb
gs
pop
cmp
aad
dec
repz
mov
lods
jge
add
sbb
cli
push
mov
arpl
insb
in
mov
movsl
addr16
or
push
fwait
lahf
jae
pop
ss
mov
jae
ret
lcall
jmp
mov
sub
in
add
push
stc
mov
aam
jmp
inc
popa
mov
inc
pop
bound
cmp
andl
les
fwait
bound
in
mov
pusha
addr16
fldcw
inc
fstpt
xchg
cmp
dec
rolb
cmp
push
dec
push
and
mov
mov
sub
sbb
jg
jb
jnp
std
or
cmp
sti
mov
sti
insl
add
or
xchg
and
mov
xlat
cmp
subl
ja
test
stos
fwait
rcrl
outsl
xchg
adc
cmc
divl
test
or
jecxz
loopne
cwtl
inc
aad
pop
or
cmp
out
xor
mov
fwait
lret
adc
imul
adc
cli
shlb
sub
cmp
xchg
dec
loopne
mov
ret
fimuls
les
cltd
dec
cltd
repnz
ljmp
pop
mov
push
les
inc
lds
movb
push
pop
sub
imul
ss
and
sub
jge
enter
cltd
jae
pop
filds
js
mov
shlb
imull
in
lret
test
in
adc
faddl
out
xchg
lcall
mov
int3
xchg
pop
mov
fistl
call
mov
jp
enter
mov
nop
inc
jg
pop
in
rorb
xchg
mov
mov
adcb
xchg
jae
cmpsb
xlat
or
and
xor
aas
addl
ret
cwtl
push
test
mov
rolb
jg
inc
pop
loopne
mov
cmp
aaa
fsubr
dec
lods
out
jnp
jp
push
jl
sar
std
je,pt
dec
pop
mov
addb
fwait
pop
sbb
popa
xchg
and
test
shll
add
sbb
push
faddl
inc
mov
adc
std
inc
jl
jecxz
push
das
dec
fisubl
ret
enter
loopne
mov
ret
xchg
push
mov
xchg
jmp
push
adc
or
xlat
arpl
fmull
and
sbb
or
js
ret
mov
pusha
movsl
push
sarl
aam
imul
xor
add
fisttpl
ror
inc
mov
add
cmp
insb
les
mov
jnp
xchg
lock
test
mov
xor
jle
out
dec
inc
jo
push
jno
pop
or
idivl
loope
lock
xor
das
jge
dec
xchg
xchg
jne
add
mov
insl
insl
sub
xor
jne
testb
jo
dec
mov
pusha
mov
mov
fsubl
cmc
adc
xor
into
push
push
cmp
stos
imul
push
scas
aaa
repz
mov
out
push
repz
cmpsl
push
pop
push
fimull
mov
cli
mov
pop
mov
push
sbb
jl
loop
int
jg
xchg
in
ss
je
push
xor
or
mov
jb
dec
jg
enter
jo
jp
sbb
and
inc
ja
mov
gs
addr16
nop
pushl
sbbb
hlt
insl
push
xchg
push
sahf
xchg
push
add
push
inc
mov
pop
addps
imul
add
fbstp
fwait
sbb
out
push
imul
inc
mov
pop
jo
aas
mov
lret
pusha
xor
mov
lret
lret
movsl
cli
dec
pop
clc
sahf
fsubs
or
jl
js
xchg
sti
push
lcall
lcall
mov
jb
jns
sahf
push
lret
pop
mov
movsl
out
stc
mov
std
cld
test
arpl
push
xlat
mov
ja
dec
fs
cs
mov
xor
fidivs
icebp
jle
jmp
ret
pop
cmpsb
and
cmp
push
rcrl
roll
jecxz
jne
lret
xor
xor
sub
es
lea
pop
daa
and
dec
in
xor
in
call
adc
repz
aas
jno
jl
xor
sarb
pop
pop
and
hlt
int3
mov
testb
push
sbb
rcll
dec
and
scas
push
mov
pushf
cmp
lods
clc
inc
or
mov
xlat
es
sub
lret
bound
push
jae
inc
sbb
hlt
dec
ja
xlat
cld
xchg
clc
cwtl
fdivr
repz
sub
xchg
ss
movsb
and
add
shlb
or
add
mov
pop
clc
cmpsb
dec
sbb
in
insl
dec
inc
jne
lret
roll
add
icebp
mov
adc
push
jnp
mov
cmc
addr16
test
bound
outsb
push
subl
shll
cmp
mov
push
adc
pop
lcall
repnz
frstor
pop
enter
mov
pop
or
fidivrl
outsb
aad
addr16
push
lret
test
lcall
fwait
xchg
push
mov
mov
sbb
inc
loopne
mov
cmp
xchg
cwtl
aam
movsb
adc
shll
add
xchg
pop
mov
subb
jg
adc
jo
aam
cmc
mov
adcl
or
adcl
insb
push
les
out
push
in
scas
xchg
and
mov
test
cmp
aaa
shll
jp
movb
call
cli
mov
xor
pop
push
out
sahf
test
shlb
sub
mov
jmp
mov
mov
dec
pop
jb
pop
clc
jecxz
xchg
jae
mov
mov
and
shlb
fldt
imul
scas
xchg
popa
mov
js
inc
in
xor
pop
jmp
test
cmp
mov
mov
sbb
push
jns
push
sbb
sub
or
sbb
dec
mov
xor
fsts
mov
mov
dec
pop
rorl
mov
es
adc
lahf
stc
aad
sbb
mov
lea
dec
adc
nop
aad
push
adc
cld
imul
push
pop
test
gs
xchg
inc
stos
mov
or
cmp
rorb
je
cmpsb
pop
fisubrs
cltd
test
std
fyl2xp1
mov
mov
lea
sub
cmpsl
xchg
sahf
pop
pop
in
jb
sbb
icebp
jae
lea
adc
adc
lret
popa
jmp
inc
insb
adc
jne
add
loope
mov
add
outsl
jo
or
pop
cmp
xchg
cmp
clc
into
rcrl
xor
jge
jno
or
stos
dec
mov
cmpsb
push
inc
shrl
imull
loopne
xor
insb
push
or
and
sbb
imul
pushl
pushf
out
jl
lret
xchg
sahf
clc
int3
cli
test
loope
mov
subb
aaa
mov
xor
cmpsb
xchg
sub
push
xor
and
icebp
pop
jb
lahf
or
das
push
pop
or
fisubs
test
push
leave
stc
lret
pop
cmp
scas
cmpsb
push
pop
add
addb
sub
insl
clc
jmp
repz
lods
leave
ljmp
out
lods
and
fst
mov
xchg
mov
jmp
jmp
iret
stc
sbb
fsubrs
cli
arpl
call
push
ljmp
ss
sub
cwtl
daa
push
out
out
cli
pop
pop
dec
lcall
hlt
icebp
add
sbb
cmp
testl
add
pop
inc
jp
jns
pusha
or
movsb
je
mov
fmull
xchg
out
jne
je
or
dec
mov
push
or
loopne
cmp
rcrl
int3
ficoml
jne
ja
cli
decl
pusha
push
js
push
repz
push
pop
dec
pop
add
lock
or
addb
cwtl
pop
test
xchg
cmc
cmp
push
xchg
pop
mov
fwait
dec
jg
vcvttpd2dq
xchg
xchg
cmp
out
fs
sub
in
loope
sub
sbb
cmp
mov
jl
loope
lahf
sti
mov
push
les
cmpsl
sub
or
cwtl
mov
ror
xor
insb
in
in
mov
sarb
rorb
ljmp
fisttpl
repz
mov
aaa
xlat
dec
or
movsl
outsl
andb
ret
in
jp
xchg
adc
jne
xor
lahf
movsb
sbb
adc
lahf
or
xchg
jno
push
mov
mov
fidivs
xchg
je
or
dec
add
into
mov
ss
adc
and
lods
fidivs
fcmovnb
je
mulb
lock
movsb
inc
add
fcoml
lods
xor
sub
shrb
pop
cmp
pop
das
clc
rcl
popa
adc
xchg
push
push
add
mov
fsubp
out
iret
mov
shrl
or
jg
and
xchg
cld
add
or
lock
aad
lcall
adc
pop
add
subl
incb
mov
mov
jb
pop
inc
shr
jo
mov
cmp
push
cmpsl
stos
cmc
push
fdivr
dec
add
mov
push
lret
dec
jecxz
lcall
movsl
gs
lret
add
out
adc
das
add
jo
jl
and
pop
cmc
movsl
repnz
push
jbe
std
pop
jecxz
lret
maskmovq
imull
mov
ss
jnp
clc
scas
call
lret
fstl
fnstsw
inc
andl
repnz
daa
dec
push
scas
nop
insb
mov
mov
sub
je
fisttps
sbb
stc
inc
cmp
movsb
jmp
mov
les
mov
cli
or
and
test
in
cmp
imul
cmpsl
sub
mov
mov
dec
cmp
aam
dec
and
imul
push
sbb
pop
dec
hlt
insl
dec
cmp
sbb
cli
in
mov
or
ljmp
pushf
test
dec
push
sbb
sub
aas
in
imul
filds
mov
jmp
shr
pushf
cmp
xchg
call
push
mov
repnz
mov
dec
inc
inc
js
mov
repz
sahf
hlt
pop
xchg
sbb
push
ficomps
out
pop
loop
cli
mov
and
stos
and
mov
fisttpl
mov
stc
int
inc
hlt
icebp
xchg
pop
jg
or
and
test
movsl
inc
mov
sbb
sbb
push
xor
or
xchg
mov
fdivl
in
push
jb
sbb
std
fsubrs
cmp
and
fwait
cwtl
cmp
stos
mov
xor
ret
loop
cmp
push
ret
push
sbb
mov
cltd
icebp
jbe
sbb
inc
xor
cwtl
pop
mov
cmp
jecxz
jo
dec
bound
nop
popf
ja
push
pushaw
lret
insb
mov
lahf
outsl
mov
mov
jbe
insb
inc
sbb
inc
leave
dec
cmp
ret
mov
in
popa
mov
loopne
and
sub
ja
fdivrs
ret
sahf
jb
lret
mov
lcall
frstor
sbb
add
daa
shrb
mov
out
sbb
push
adc
xor
and
inc
mov
movsl
push
xor
sub
stc
es
mov
pop
cmpsb
sbbl
rcrl
pop
in
mov
and
inc
cltd
or
mov
jns
js,pt
push
pop
pop
mov
pop
aas
out
xchg
sbb
sbb
adc
fidivs
popf
les
inc
dec
addb
mov
inc
testb
cmp
and
mov
es
mov
clc
inc
xor
adcb
jb
xor
mov
lods
out
or
insl
pop
in
sbb
cmc
push
fnstsw
mov
xchg
xorb
jnp
sub
inc
xchg
cmp
insl
and
negl
int
pusha
pusha
xor
out
cmp
fs
movsb
xchg
out
outsb
test
jo
add
push
stos
inc
push
adc
mov
int3
insl
pop
mov
sub
dec
into
adcl
ret
xor
fs
lahf
dec
outsb
dec
jbe
loopne
sub
mov
sub
push
inc
mov
rolb
pop
sbb
fisttpl
mov
scas
dec
cmp
jp
xchg
jns
nop
iret
sar
and
mov
and
sub
cmp
inc
jl
mov
mov
fisubrs
pushf
or
dec
fs
outsl
pop
outsb
xor
test
shll
in
in
test
js
xadd
dec
enter
mov
xchg
mov
dec
outsb
in
sbb
dec
setns
sub
ss
sub
mov
push
lcall
xor
push
lds
cltd
insb
inc
inc
insl
cmpsl
mov
repnz
pop
leave
in
jae
imul
xor
aam
and
fists
inc
in
cmpsb
ja
out
cmp
ficoms
aaa
fwait
stos
fsubr
cs
sbb
nop
pop
sbb
pop
xor
rclb
test
fs
mov
jl
jmp
jns
cmpsb
xor
hlt
pop
sub
sbb
aas
je
aad
pushf
roll
push
dec
test
jecxz
xchg
ret
jno
cmp
jg
xchg
cmp
ljmp
shl
in
je
dec
or
add
push
adc
out
vhsubpd
dec
jp
push
pop
incb
dec
sub
dec
cmc
xchg
and
cmp
xchg
pop
pop
lock
lea
data16
xchg
imul
pop
inc
mov
stos
dec
cmpsl
lock
mov
and
loope
ss
push
iret
stc
fdivrl
ds
ljmp
or
or
gs
out
insb
ret
jb
push
add
ljmp
mov
aam
aas
dec
inc
or
push
cmp
cmpsl
jnp
push
lret
scas
daa
fistpll
mov
mov
jecxz
cltd
popa
insb
jle
jae
enter
fldenv
pop
mov
adc
outsl
jb
jns
mov
mov
sbb
adc
mov
aaa
lret
test
test
pop
xor
out
loopne
sarl
adc
insb
xchg
daa
into
stc
pop
lea
fs
push
cmc
xchg
adc
pop
pop
push
sbb
testl
jle
sahf
cltd
cmc
loopne
sar
sub
xchg
fmull
sub
jo
outsl
adc
mov
inc
fs
xchg
inc
add
call
and
xchg
lret
mov
jle
mov
push
int3
dec
adc
loop
mov
clc
cs
movsb
sbbl
dec
aas
push
pop
loop
test
push
inc
add
or
ja
imul
mov
jae
pusha
and
cs
inc
add
sub
cli
pop
pop
mov
ja
nop
out
sbb
insl
sbb
andb
rorl
insl
mov
loopne
test
outsl
aam
sbb
sbb
mov
sbb
lahf
rorb
out
xchg
std
data16
movsl
push
mov
pop
fisubs
iret
daa
movsl
or
out
xor
lea
cmp
loopne
mov
and
mov
gs
gs
mov
jecxz
jmp
pop
sbb
call
inc
cld
add
push
sbb
cli
and
into
out
xchg
movsl
pop
dec
xlat
sbb
fwait
aam
imul
dec
mov
inc
sub
int3
fnstenv
mov
int3
jl
push
cmp
stos
push
cmp
shl
in
pop
adc
daa
lcall
add
jno
stos
mov
or
out
pop
div
cmp
and
jne
pcmpgtb
mov
mov
dec
mov
adc
fmul
pusha
sub
mov
pop
jle
scas
sbb
jae
shrl
clc
inc
cltd
jp
dec
push
or
push
fmull
and
mov
xor
sub
pop
movsl
pop
jmp
sbb
minps
outsl
dec
add
stc
mov
push
mov
nop
sysenter
cmp
adc
sahf
mov
adc
imul
mov
sbb
dec
xor
xchg
or
mulb
jns
outsl
stos
pop
cmpsl
push
or
fimull
and
rolb
lcall
xor
push
inc
pushf
aam
jns
xor
rcrb
scas
xor
cmp
stos
loopne
inc
insb
mov
mov
cld
lea
lods
repnz
mov
flds
imul
popf
aas
mov
xchg
mov
mov
dec
and
dec
cmp
xchg
pop
arpl
or
ss
cwtl
sbb
jl
scas
sahf
clc
inc
mov
and
decl
loop
add
fsubrs
arpl
xchg
pop
dec
xor
jl
pop
das
adc
dec
push
or
cmc
cs
ss
aaa
inc
sbb
xchg
lds
jno
inc
mov
aas
add
pop
lret
jmp
inc
cmpb
jecxz
out
rol
xchg
test
jne
or
loope
stos
pop
mov
cmp
mov
sahf
pop
or
mov
lods
adc
cmp
adc
and
adc
sbb
ss
push
cmp
or
push
inc
std
adc
repnz
inc
xchg
xor
ds
mov
mov
pop
lds
fdivl
push
cmp
inc
push
lods
adc
ret
fdivrs
mov
mov
adc
bound
or
test
pop
mov
icebp
push
pusha
stc
xor
cmp
and
mov
movsb
loop
test
insl
lds
aaa
sub
fwait
mov
push
imul
inc
fldcw
call
xchg
xor
shr
and
fidivrl
push
popf
pop
adc
mov
xchg
test
sti
dec
xor
inc
jge
mov
mov
and
xchg
push
pop
push
js
idivb
fildll
pop
pop
test
inc
fsubrp
inc
add
dec
fsubp
push
push
fildl
nop
ja
push
rcrb
sti
subb
outsl
xor
or
aaa
imul
sub
fstps
bound
lds
mov
fwait
xor
fsubrl
cwtl
add
arpl
xchg
fs
icebp
pop
ljmp
or
ss
ss
mov
dec
cmp
xor
push
faddp
xor
lret
dec
lods
lcall
xchg
push
popf
xor
lret
dec
xor
jecxz
lret
in
into
je
loopne
mov
jae
pop
push
pop
xchg
sbb
xorl
cmp
push
iret
outsb
fiadds
jno,pn
lds
xchg
sbb
add
xchg
popa
outsb
xchg
xlat
cmp
jbe
dec
bound
addb
addr16
jae
js
pop
inc
xabort
scas
or
pop
push
mov
or
mov
repnz
mov
les
pop
ds
mov
lds
ret
and
mov
mov
inc
fcomi
out
lret
jge
insb
dec
cmp
sti
hlt
movsb
adc
cwtl
aad
imulb
cld
insl
pop
mov
aas
aas
xlat
mov
adc
inc
inc
mov
cmp
addl
cmpsl
add
or
lret
jb
movsl
mov
subl
loopne
stos
das
xchg
out
icebp
insb
roll
cmp
in
lds
mov
fcoms
addr16
hlt
repnz
pusha
ficoms
ljmp
pop
mov
nop
sub
in
cltd
push
xchg
sub
push
jb
je
mov
shlb
jns
call
int3
loop
adc
and
jg
jae
sub
cs
xchg
aas
mov
movsl
push
xor
inc
int
mov
iret
pushf
gs
sarl
jg
test
pop
add
inc
adc
mov
dec
add
popa
push
xchg
notb
cmp
ret
jae
push
js
gs
lcall
cltd
fldt
push
out
int3
add
mov
outsb
add
push
mov
mov
enter
nop
mov
sbb
xor
scas
dec
lock
int
dec
jns
ljmp
pop
pop
or
aaa
jns
pop
clc
push
xor
add
decl
je
int3
sbb
iret
sbb
mov
je
cmp
push
rclb
xchg
sti
cs
loopne
push
nop
shrl
sub
adc
out
aad
add
inc
xchg
lods
dec
lret
jmp
out
cli
stos
and
xchg
mov
push
int3
jmp
mov
push
push
or
inc
aaa
sub
sub
jns
pop
ret
pop
sbb
push
or
mov
loop
dec
call
and
out
adc
loop
fnstenv
push
cli
rclb
popf
push
mov
pop
jns
fcmovnb
out
pop
andb
add
lret
int
mov
mov
fisttps
mov
pusha
dec
js
clc
ss
int3
sbb
sbb
sub
mov
call
push
int3
mov
mov
mov
jne
mov
shlb
jg
call
popa
out
fidivrl
mov
dec
sub
fsubrp
pop
hlt
jbe
adc
in
mov
aaa
cmpsl
fwait
mov
iret
sbb
jge
xchg
mov
mov
dec
pop
push
mov
mov
jne
mov
daa
gs
mov
test
aas
add
cmp
and
sbb
rcll
call
jne
or
or
xchg
lahf
arpl
fwait
and
and
jl,pt
or
or
pop
fisttps
les
sbb
inc
jmp
aam
xor
cld
cld
repz
lret
test
xchg
lret
in
sub
cld
inc
and
cmp
clc
iret
dec
jne
in
mov
cmp
add
cmp
inc
cltd
jmp
out
jg,pn
loop
jge
repz
add
test
ret
das
add
mov
adc
or
cmp
repnz
leave
and
xchg
nop
mov
sbb
xor
xor
cs
xchg
lds
push
sub
in
les
sbb
push
sub
cmp
adc
push
and
pushf
sub
mov
mov
add
mov
mov
add
xchg
fwait
xor
mov
mov
or
mov
loope
cmc
insb
mov
add
adc
out
push
xor
cld
iret
call
mov
dec
pop
pop
pop
pop
shlb
jnp
cwtl
idiv
and
clc
xor
lods
dec
pop
je
clc
imul
and
rcrb
xlat
ret
and
outsb
xor
xlat
mov
pop
mov
sub
outsl
outsb
sub
push
dec
mov
aaa
inc
pop
lods
fwait
mov
add
jnp
ss
pushf
mov
in
or
adc
and
insl
sub
shlb
push
popf
call
addl
popf
pop
sbb
cmp
outsb
push
add
std
gs
subb
in
xor
pop
and
or
jnp
pop
fidivrs
push
scas
mov
jne
push
lock
sub
inc
fldenv
pop
cld
xor
insb
and
mov
popa
add
into
pop
mov
inc
rorl
jae
or
cmpsl
mov
xchg
enter
or
cmp
int
and
ficompl
sub
ljmp
scas
sahf
aam
gs
push
cmpsl
cmc
mov
stc
sbb
rcr
or
add
mov
cmp
out
cltd
cmp
dec
sarb
cmp
push
aad
and
ret
pop
mov
or
jo
mov
ja
scas
push
xor
imul
outsl
or
pop
les
scas
fndisi(8087
repnz
jae
push
sbb
jbe
mov
stc
out
dec
cld
test
sbb
pop
mov
xchg
sbb
mov
pop
xchg
mov
std
rol
adc
movsb
fcmovnbe
xor
hlt
fistpll
shll
adc
mov
ds
cli
xor
loopne
insl
adc
pop
fs
mov
out
aam
xorb
out
xlat
ja
push
adc
cli
rorb
xchg
pushf
in
lret
js
cmp
in
sub
jbe
popa
cmp
fwait
lret
addr16
frstor
lea
lods
add
push
pop
mov
sub
sbb
dec
daa
sub
je
mov
pop
xchg
add
lahf
mov
sub
mov
inc
enter
lods
jae
fidivs
loope
xchg
inc
out
sub
sbb
push
adc
icebp
and
jg
mov
cwtl
gs
xchg
push
aad
pop
icebp
js
pop
neg
insb
push
insl
pusha
and
hlt
sbb
sbb
cli
mov
call
mov
pushf
xchg
push
or
xor
repnz
popf
mov
xchg
mov
pop
xlat
sub
dec
xchg
imul
test
cmp
jmp
sbb
inc
out
test
push
ljmp
mov
popf
bound
push
push
clc
shll
mov
dec
jnp
or
xchg
sarl
or
mov
daa
lods
fsts
data16
mov
push
lahf
xor
and
push
xor
imul
data16
and
and
and
inc
cwtl
xchg
call
mov
lea
stc
ss
mov
cmc
loop
data16
or
push
test
shll
adc
popa
sarl
jmp
mov
ficompl
inc
cmp
mov
aam
mov
add
ret
test
jge
das
call
jl
push
mov
stc
or
jne
mov
inc
push
fcomps
das
pop
push
mov
lahf
loope
xor
mov
js
cmp
jl
xchg
insb
ror
les
xchg
cs
mov
push
or
add
push
in
inc
ja
mov
loop
jp
jp
ret
or
ss
jb
lcall
out
adc
clc
jae
xchg
js
push
dec
testb
push
dec
aaa
mov
data16
mov
andl
test
shlb
loope
cld
mov
mov
mov
pop
jp
lcall
lret
cmpsl
cmpsl
mov
flds
aas
jle
popa
jne
mov
mov
outsb
leave
add
mov
inc
and
in
lret
jae
cmpsb
dec
out
push
push
jmp
pop
out
lds
in
ret
mov
push
cmp
pop
filds
cmc
test
sahf
ret
xor
mov
lahf
lock
sbb
les
lret
sub
xor
stc
dec
lret
icebp
adc
std
imul
ret
into
or
movsb
or
ficoml
add
jns
shll
or
mov
pop
dec
push
xchg
icebp
and
add
mov
fiadds
leave
sbb
mov
add
mov
pop
popf
pop
adc
jnp
js
mov
pop
les
ficomps
lahf
fwait
je
push
inc
mov
inc
jo
cmpsl
pop
aaa
fwait
mov
bnd
popl
rsqrtps
daa
fbld
imul
push
loope
repnz
pop
push
jecxz
stos
mov
push
ds
xchg
inc
mov
lret
enter
inc
jae
add
fisttpll
pop
sbb
push
cmp
jge
mov
inc
dec
inc
pop
outsl
mov
mov
adc
cmp
subb
imul
inc
popa
into
or
mov
jb
sbbl
mov
popw
xor
out
popa
sbb
cmp
ret
dec
fstpl
adc
mov
push
mov
leave
mov
stos
test
mov
push
and
mov
cmp
imul
test
jnp
ret
mov
sbb
hlt
in
sbb
and
push
pushf
pusha
cltd
lds
pop
jg
stos
cmpb
push
popa
cmp
pop
insb
jae
xor
dec
mov
mov
idivl
pop
add
int
insb
repnz
and
sbb
adc
mov
push
into
jmp
frstor
scas
inc
lods
sbb
push
mov
xchg
pusha
hlt
jge
cmpsb
scas
mov
push
ja
lods
xor
stos
in
testl
pushf
pop
cmp
subl
inc
je
lcall
jne
mov
xchg
outsl
and
pop
add
arpl
and
pusha
jb
shlb
cltd
pop
or
xor
orb
add
mov
cmpsb
mov
jno
pop
shlb
rorb
dec
cmpb
jne
popf
fildll
aam
mov
pop
dec
shrl
xchg
inc
inc
out
movsl
movsl
daa
cmp
jge
ret
inc
aam
add
jne
xor
pop
jb
lret
mov
loopne
push
lret
sti
addr16
xor
push
mov
jp
hlt
push
movsb
cmpsb
xchg
dec
sbb
xchg
sub
stos
mov
dec
xor
mov
cmpsb
cmpsb
add
cmp
mov
mov
mov
std
dec
mov
mov
daa
cltd
loop
adc
sahf
mov
daa
or
jae
stos
outsl
fdivs
sub
stos
dec
pushl
testb
push
jb
enter
sub
mov
mov
sbb
jo
arpl
dec
movsb
xor
lret
cmp
insb
jnp
or
cli
mov
ja
test
mov
and
icebp
mov
fldenv
enter
jne
mov
lods
jp
loopne
and
call
dec
shlb
test
imul
mov
sbb
jno
mov
scas
iret
sti
lret
arpl
jb
or
xchg
jo
popa
outsl
cld
xor
insl
gs
mov
jmp
gs
sub
mov
dec
dec
jns
sahf
cmp
adcb
pop
inc
repz
das
xlat
push
sahf
les
cmp
xchg
push
xchg
pop
jl
mov
fistpl
in
dec
mov
addr16
popf
movsl
ds
dec
push
mov
sbb
mov
test
les
testl
xor
adcb
mov
dec
repnz
stos
jecxz
ret
sti
inc
neg
in
leave
push
pop
sarb
mov
push
push
out
mov
or
adc
sub
lods
xchg
jbe
dec
jecxz
adcl
enter
shlb
jo
mull
imul
std
int
mov
fprem
sbbl
scas
scas
popa
sbb
call
push
pop
mov
jae
movsl
push
movsb
addr16
pop
inc
cmpsb
pop
jno
cmpsl
aas
adc
mov
mov
dec
in
dec
adc
sbb
lcall
add
inc
and
int
cmp
or
add
movsb
insb
shll
aas
mov
xchg
outsl
fdivrs
xchg
imul
jo
or
inc
push
js
mov
pop
iret
jbe
dec
jo
ja
adc
lahf
pop
stos
jne
fwait
sbb
or
push
sub
inc
inc
pop
fs
scas
jge
cld
les
jbe
inc
loop
mov
xchg
push
sub
add
sub
inc
cmpsb
fldcw
flds
cli
in
inc
sahf
aas
aam
jl
add
cmp
call
and
jle
jns
enter
lods
mov
xchg
push
sub
xor
sbb
push
xchg
imul
cwtl
das
dec
fdiv
mov
es
fcmovb
push
movsb
mov
mov
xor
cmp
pusha
aad
pop
jecxz
pop
xor
out
testb
xchg
insb
andnps
loopne
mov
add
mov
popa
mov
mov
flds
cmp
and
into
shrb
loope
daa
ja
ja
xor
or
frstor
add
mov
cmp
push
push
xchg
adc
loope
mov
popf
ljmp
in
out
imul
fs
sbb
mov
xor
xor
or
sahf
dec
xlat
xchg
xor
inc
ficomps
sub
jg
fstpl
sbb
and
inc
cmpsb
add
jl
mov
cmp
and
movsl
stc
mov
sub
rcl
mov
lock
cmp
je
xchg
or
loopne
jge
xorb
sbb
add
pop
xchg
mov
sub
lods
and
jge
xor
xchg
pushl
mov
sbb
add
enter
and
pop
push
push
sub
mov
adc
sub
push
sub
add
jge
jnp
push
nop
aad
mov
sub
push
mov
aam
push
in
enter
test
dec
pop
inc
add
rolb
sub
and
sub
or
pushf
add
std
aam
dec
mov
pop
jb
or
rep
sbb
hlt
enter
push
aas
cltd
pop
ljmp
and
imulb
pop
aas
std
or
mov
mov
dec
jne
xchg
jmp
out
push
fs
lods
in
stos
js
inc
enter
push
mov
sbb
add
xchg
jg
into
ds
push
cmp
push
sbb
add
shll
push
aas
sbb
sub
mov
popa
sar
push
dec
inc
cmpl
negb
dec
pop
lcall
je
jae
addps
mov
pop
dec
ret
cmp
jl
cs
cwtl
addl
adc
xchg
mov
mov
pop
pop
movsl
push
cmp
stc
movsl
adc
in
cs
dec
clc
xchg
adc
sbb
xchg
mov
fisttps
scas
inc
jb
clc
lock
pop
xchg
and
mov
cwtl
mov
test
call
cmp
dec
xchg
mov
or
dec
pop
xchg
in
jl
stc
jge
or
mov
loopne
mov
xchg
into
inc
imul
and
scas
aaa
arpl
testl
lods
aad
adc
in
sub
daa
add
mov
lods
mov
cmpsl
ljmp
fildl
cmp
jge
lret
stc
dec
fstl
ljmp
inc
fsubs
cmpsl
pop
stc
je
dec
lahf
mov
or
push
inc
pop
rcl
ja
pop
cbtw
icebp
cltd
fnstcw
out
pushl
cmpsb
mov
cmpsb
hlt
lcall
mov
bound
and
stos
lock
adc
adc
jb
sar
idivb
dec
xchg
sbb
inc
sub
jno
addb
lods
stos
jnp
mov
mov
sub
jnp
in
push
pop
sbb
lahf
mov
lds
int
pop
xor
sbb
push
fcomp
mov
cmpsb
or
xor
ror
pop
adc
ret
inc
or
imul
or
add
shll
call
das
push
repnz
mov
rorb
dec
in
mov
xorl
lods
cs
popa
cmpsl
jne
or
push
adc
push
ds
mov
std
icebp
or
mov
xor
adc
or
shlb
cmp
or
in
xor
jae
int
mov
push
cli
ljmp
data16
stc
xorb
lret
jp
inc
mov
pop
mov
xlat
adc
or
sbb
enter
inc
nop
jno
mov
aaa
cmpsl
jns
fs
gs
cmpsl
add
iret
jecxz
aad
sub
mov
in
ret
xchg
sti
pushf
xchg
insl
jns
add
xchg
leave
xchg
scas
xchg
inc
insl
jl
sbb
dec
mov
push
xchg
pusha
inc
mov
out
xor
pop
scas
movlps
int3
push
pop
sub
inc
shrb
dec
rcl
cld
sub
jg
movsl
mov
sub
insl
inc
mov
mov
xor
idivl
push
insb
imul
xchg
xchg
cmp
cltd
or
cwtl
fisubs
sbb
jge
insl
sbb
pop
fistl
dec
or
mov
cmpsl
adc
daa
sbb
lahf
arpl
scas
jle
mov
aam
loopne
pop
pusha
sub
loopne
jecxz
ss
sbb
mov
jno
mov
and
pop
icebp
add
jns
and
pop
mov
mov
pop
nop
bound
lret
add
loop
jb
add
push
mov
cmpsl
test
mov
or
push
pop
sti
mov
aam
inc
lea
arpl
or
inc
inc
out
unpckhps
push
sti
adc
mov
mov
shrl
sbbb
xchg
mov
pop
loopne
lret
jbe
adc
insb
sbb
and
cmpb
sbb
xchg
xchg
mul
inc
jp
call
leave
imul
mov
imul
mov
arpl
and
fistps
in
or
push
xchg
imul
pop
sbb
cmp
lods
sbb
sub
into
call
pop
mov
xchg
js
lock
std
mov
cltd
in
test
mov
ljmp
fwait
lods
out
int
mov
add
outsb
and
fwait
pop
and
scas
andb
mov
fwait
xchg
xor
cld
push
xchg
neg
ret
insl
jb
inc
jp
loop
mov
pusha
xchg
and
mov
hlt
push
std
inc
inc
mov
out
mov
cmp
clc
inc
cmp
jns
mov
pop
sbb
jno
and
sub
mov
cmpsb
rcll
call
push
sbb
aam
push
rcrb
mov
out
inc
and
mov
mov
mov
lahf
push
fwait
jbe
xchg
sti
mov
mov
test
ret
aaa
cld
mov
out
inc
xor
jbe
int3
jge
movsl
int
add
dec
test
dec
fcomps
mov
or
xor
outsb
dec
xchg
aaa
dec
inc
in
add
mov
sti
sbb
xor
jecxz
imul
fsubrl
arpl
rclb
or
and
fiadds
mov
or
filds
push
sbb
jno
sub
sahf
pop
mov
cmp
outsl
mov
mov
inc
inc
sub
mov
inc
sti
sti
loop
out
xchg
push
shlb
push
push
cmpsb
js
adc
mov
dec
ret
jae
dec
in
nop
adcl
cmp
xor
gs
add
xor
jbe
dec
std
inc
mov
mov
outsl
mov
or
ljmp
xchg
inc
into
fwait
mov
mov
jmp
mov
ja
imul
cmp
gs
mov
mov
mov
and
popl
mov
jae
add
cmp
dec
inc
cltd
or
mov
aam
sbb
pop
popf
jmp
and
pop
sti
or
mov
jb
jg
lcall
or
xchg
jb
lcall
frstor
xor
mov
stos
inc
neg
fdivp
jb
js
je
mov
div
push
jae
or
push
cld
push
xor
or
rcrl
mov
hlt
aaa
lea
out
dec
ljmp
lcall
xchg
mov
sahf
mov
subl
push
sbb
adc
imul
loopne
bound
cmp
imul
outsl
add
push
rolb
mov
cltd
xor
sub
sub
add
xor
stc
inc
cld
cmp
imul
fisubrs
lods
test
and
out
push
sbb
or
sti
pop
pop
nop
adc
jmp
pop
out
shrb
cld
dec
mov
shlb
fidivrs
mov
sub
lea
sub
ja
push
iret
xor
call
mov
rorb
sub
mov
pop
stc
imul
insb
mov
es
in
cltd
popa
imul
fildl
and
and
mov
adc
xor
lock
jle
inc
cmp
push
leave
jb
jns
pop
gs
or
inc
pop
cmp
sbb
aaa
cmp
jg
add
das
cmp
mov
mov
in
ds
dec
xor
push
icebp
loopne
adcl
mov
xchg
add
jbe
cmp
movsb
cmp
test
dec
sub
push
xor
dec
jp
mov
pop
push
mov
pop
fsubrs
loopne
xor
jmp
mov
mov
jb
rcrl
fidivrs
sub
test
cli
in
add
push
cmp
lods
add
iret
fisubrl
sbb
sbb
scas
shr
test
sub
add
outsb
mov
fimuls
fldcw
pop
imul
xchg
mov
push
test
frstor
jbe
jg
mov
sub
mov
jo
test
dec
cwtl
cmp
add
jno
fsts
mov
fwait
cmpl
add
xlat
lea
xchg
repnz
aam
mov
adc
jns
adc
out
dec
in
sbb
and
sub
lock
sbb
lret
lods
dec
inc
jl
popf
pop
adc
and
stos
into
jmp
cmc
nop
pop
aad
repz
das
push
ljmp
scas
jo
ja
fadd
fidivrs
mov
aas
insb
jecxz
pop
cs
mov
adc
cmp
pop
das
mov
xchg
cmc
push
push
inc
push
jge
xorb
cmp
cld
adc
mov
sbb
jbe
ljmp
dec
pusha
or
cmp
stos
mov
and
aam
out
dec
pop
mov
ljmp
dec
sbb
adc
ret
sub
cmpsb
icebp
mov
sti
addr16
inc
adc
arpl
lret
mov
movsb
cli
mov
jns,pn
add
push
lds
das
adc
fbld
xchg
shl
jbe
je
lcall
pop
sub
cmpsb
mov
cld
xor
cmpsb
xchg
sub
insb
bound
jbe
lret
cs
imul
mov
xchg
mov
clc
in
test
and
push
iret
sbb
fstpl
subb
mov
iret
pop
mov
cmp
sub
jp
stos
clc
cld
push
pop
xor
adc
inc
popf
mov
mov
and
pop
gs
call
fnsave
divps
push
sbb
cmp
adc
enter
adc
sahf
push
aam
test
mov
inc
xor
or
daa
adc
ljmp
pop
ss
ret
in
jnp
in
adc
inc
shrb
inc
mov
gs
outsl
and
push
push
testb
add
and
mov
push
scas
stos
bound
fwait
jne
sub
cmp
incl
pop
cld
sbb
sbb
mov
adc
sbb
add
adc
loopne
sub
adc
addr16
mov
push
push
je
int
dec
pop
cmp
fwait
xchg
sbb
sbb
add
iret
mov
sbb
cmp
jmp
lret
push
repnz
add
test
je
add
in
lods
ret
fwait
pop
ret
inc
pop
leave
xor
out
and
jp
test
sbb
bound
stc
popf
mov
xor
push
push
push
out
insl
test
sub
push
mov
fistps
pop
xchg
mov
scas
pushl
and
pushf
or
adc
mov
pop
xchg
hlt
mov
dec
push
pop
xor
xor
popa
jge
cmp
aaa
pop
mov
xor
mov
ds
push
mov
insl
idiv
pop
xchg
add
cld
sbb
push
mov
fwait
xorb
fisubrs
add
dec
fisubl
mov
negb
sbb
jmp
jecxz
pop
adc
pop
gs
adc
cld
xor
ret
push
leave
pop
push
in
adc
mov
es
jno
stos
xchg
rorb
sub
int
stos
out
xor
out
and
cmp
pop
pusha
insb
scas
push
jp
mov
cmp
mov
jle
pop
scas
movsl
push
jecxz
pop
pop
sbb
es
push
arpl
jecxz
sbb
cwtl
movsl
scas
stc
jg
out
out
inc
mov
jmp
jne,pn
out
outsb
jno
fadds
add
lcall
repnz
insl
das
pop
jl
cmp
sti
dec
mov
push
inc
sbb
rol
arpl
fsubl
lret
xor
mov
jmp
ds
rcr
in
lret
movb
out
jno
push
sti
mov
sbb
shlb
jg
dec
push
mov
aad
mov
or
jns
je
adc
jo
scas
jne
cmc
or
mov
add
in
cld
sub
fisttpll
dec
outsl
push
and
jecxz
into
mov
or
pop
fmuls
jp
pop
push
cltd
sbb
pusha
jg
cmp
nop
add
jae
jle
loop
cmp
push
pusha
sbb
mov
icebp
je
in
ds
lcall
and
cmpl
insl
gs
and
dec
sbb
push
jns
inc
paddsw
fwait
xchg
mov
les
jae
cs
nop
lods
xchg
and
xchg
sub
mov
push
sub
stos
jle
xchg
pop
das
sahf
or
and
lahf
jns
jo
repz
jno
lret
jb
add
adc
sub
mov
sbb
sbb
add
lock
xchg
adc
dec
mov
mov
mov
fdiv
mov
out
out
stos
jnp
adc
or
and
and
and
scas
xorl
shl
mov
add
add
or
enter
fwait
inc
pushf
in
mov
inc
stos
and
imul
inc
ret
les
fidivs
jno
pop
lea
imul
mov
or
out
push
mov
fsts
andl
daa
dec
insb
sbb
add
ret
jb
add
pop
mov
les
add
xor
jmp
jns
push
jp
test
fisttpll
ficompl
sbb
fcoms
mov
mov
scas
loop
loope
xchg
clc
mov
in
push
cmc
ljmp
call
sub
sub
dec
outsl
in
dec
loopne
arpl
mov
clc
mov
loop
movsb
popa
dec
inc
ret
pop
in
mov
sub
dec
enter
ss
adcb
cmpsb
jle
cs
pop
jnp
or
test
call
cltd
cwtl
outsb
mov
shrb
mov
pusha
adc
add
lods
mov
mov
test
mov
dec
pop
push
dec
filds
pop
incb
cmp
stc
mov
xchg
fwait
test
fcoml
inc
push
call
gs
addb
push
lcall
mov
adc
stos
mov
and
in
xor
pop
inc
xchg
and
pop
add
lcall
cmp
add
xor
pop
pop
add
divl
jbe
mov
cmp
adc
xor
mov
icebp
pop
adc
xchg
aad
xchg
int3
insl
push
sub
sub
mov
mov
std
inc
xchg
flds
jb
lds
adc
in
sub
clc
cmp
adc
lods
scas
sub
dec
rorl
xchg
pop
cmp
xchg
cmpsl
mov
mov
es
dec
shr
inc
inc
icebp
mov
jl
dec
std
fsts
jns
sbb
cmp
dec
daa
dec
imul
jle
push
mov
mov
sbb
xor
push
orl
dec
mov
jno
sub
test
mov
xor
jg
aaa
xchg
mov
jnp
mov
mov
int3
mov
mov
jae
xor
or
or
lcall
pop
push
stc
jle
and
ret
sbb
popa
push
loope
mov
xchg
in
xlat
gs
shlb
jb
ss
outsb
lahf
pop
jecxz
cmp
push
scas
nop
out
jae
aad
insb
pop
hlt
add
vandps
rorl
int3
lods
es
push
loopne
lock
fidivl
sub
pop
sub
adc
dec
mov
divl
mov
out
lahf
ljmp
das
cltd
icebp
mov
insl
pop
divb
out
or
xchg
scas
cld
movsb
mov
push
pop
jno
xor
mov
in
repnz
lret
xchg
adc
cli
cmp
xchg
pop
in
shrb
outsb
mov
xlat
push
inc
lea
subl
and
fnstenv
mov
call
adc
orl
add
loop
fnsave
dec
mov
outsl
pop
scas
in
mov
imul
inc
pop
int3
mov
mov
mov
shll
push
cmovl
ds
adc
imul
mov
inc
loopne
pop
adcb
sti
inc
add
cmp
cwtl
fimull
xor
sahf
mov
fwait
xchg
dec
seta
add
mov
push
sti
ja
scas
loopne
sbb
aaa
push
in
in
or
aaa
pop
nop
fldl
inc
inc
jmp
mov
dec
je
sub
adc
repnz
imul
sbb
inc
mov
push
add
push
in
insb
mov
je
gs
jae
push
adc
loope
pop
ja
cltd
testl
inc
mov
in
and
pop
popa
repnz
adc
cmp
popf
stos
xchg
das
xchg
sbb
pop
inc
jne
pop
push
xchg
sbb
loope
mov
mov
lds
mov
push
push
pop
push
iret
outsl
push
divl
rcl
lret
in
add
insl
or
ss
add
jle
mov
aas
pop
and
stc
ja
mov
int
push
lods
mov
lock
sbb
jo
mov
push
leave
pop
lcall
push
push
lret
push
pop
and
icebp
icebp
adc
shll
test
dec
ds
cli
andl
in
adc
in
test
fidivs
sbb
lea
pop
test
jp
pop
add
jbe
ja
sub
sbb
push
test
and
xchg
lahf
loopne
inc
pop
hlt
inc
pop
into
pop
int
cmp
push
rcrl
cmpsb
out
pusha
loopne
sbb
ja
jg
and
jmp
pop
loopne
or
jmp
outsl
mov
adc
stos
dec
es
pop
js
dec
js
test
pop
adc
hlt
jg
push
test
xchg
mull
addr16
in
jmp
pop
sti
sub
add
pop
sahf
arpl
popa
add
ss
xchg
xchg
arpl
cmp
xor
cmp
clc
jecxz
jmp
sti
add
insb
sbb
pop
cmp
and
mov
dec
add
js
pop
mov
es
xchg
mov
lods
ret
or
jne
test
add
xchg
dec
sbb
pop
jb
inc
nop
pop
cld
push
test
inc
data16
es
shlb
jno
aas
fcomp
popf
ja
nop
pop
pusha
and
lea
pop
xchg
ficomps
scas
jge
pop
inc
js
add
sub
push
and
mov
or
ja
lahf
inc
imul
xchg
xchg
repz
sub
jb
jns
pop
nop
jns
sbb
icebp
jae
int3
inc
lret
mov
xor
push
js
es
adc
pop
sar
loopne
xchg
fists
inc
fisubl
popf
jnp
mov
mov
add
rol
xlat
mov
xor
insl
stos
jp
jbe
mov
pop
cmp
mov
aad
adcl
iret
pusha
xchg
jp
sbb
push
movsb
pop
bound
js
pop
out
fistpl
stos
push
pop
sub
loop
and
adc
pop
mov
jp
jno
ret
cltd
and
les
idiv
out
push
mov
shr
sarl
test
inc
lret
popf
cmpsb
pusha
fcoml
fidivs
xor
out
sbb
mov
jae
push
mov
adc
loop
cmp
dec
push
cmp
xor
add
sbb
iret
frstor
jmp
pop
es
jp
insb
or
inc
fdivs
mov
aaa
push
push
push
ss
frstor
cmp
pop
in
pop
cmp
lcall
jae
lret
jb
push
push
jae,pn
mov
mov
repnz
and
in
jnp
lcall
fwait
sti
and
and
int
mov
inc
repz
mov
sarb
mov
push
bound
or
ja
insb
pop
fsubl
xchg
and
sub
in
push
or
or
cli
popf
stos
inc
jmp
xchg
arpl
out
xor
dec
ljmp
int3
popa
popa
mov
mov
mov
xor
pop
mov
enter
out
enter
outsl
pop
mov
mov
dec
xor
or
in
aam
xchg
cs
ja
imul
or
pop
mov
cld
sub
add
jmp
fs
and
nop
mov
int3
ret
mov
cs
mov
icebp
adc
insw
fisubrl
pop
xchg
add
ds
test
subb
fstl
sbb
xor
lock
stos
and
lods
mov
sbb
cmp
jmp
out
xchg
shlb
sub
and
aas
popa
iret
clc
and
cmp
pop
in
xor
stc
jl
js
inc
fmuls
jmp
stc
lret
int3
xor
and
fwait
or
les
mov
jbe
add
add
fwait
add
imul
xor
test
or
cmp
push
aas
inc
sub
and
xlat
into
lods
iret
push
sarl
fildll
call
imul
clc
pusha
jge
orl
insl
arpl
movsl
cmp
jno
cli
ljmp
into
mov
mov
cld
sti
dec
sbb
notl
sub
ret
ss
loopne
mov
movsb
cwtl
mov
sbb
int3
jnp
mov
dec
mov
imul
or
dec
cld
pop
pop
jb
loopne
xchg
fdivl
fnstsw
roll
mov
sbb
sbb
add
out
push
int3
push
adc
lock
cmpsl
fcomi
xor
dec
movsb
or
jbe
cltd
bound
enter
jp
mov
stc
gs
fmul
imul
lea
pop
add
xor
mov
push
mov
jmp
mov
mov
fcmove
adc
aam
push
mov
push
inc
pop
insl
adc
push
fstps
cmpsb
xchg
dec
dec
sub
push
jno
pushf
xchg
mov
mov
repz
sub
pop
dec
ss
iret
ljmp
pop
movsl
inc
out
aam
inc
push
in
sbb
pop
lock
push
jns
mov
adc
sbb
test
xchg
xlat
and
insb
adcl
jl
int3
icebp
jmp
mov
scas
imul
mov
in
jb
popf
push
roll
aaa
clc
inc
cmp
mov
iret
xor
mov
loopne
inc
jns
popa
dec
cmp
cmp
xchg
jmp
ja
pop
inc
push
orb
lahf
push
cwtl
sub
xor
cmp
fs
pop
addb
icebp
sbb
comiss
sbb
dec
mov
mov
jecxz
test
dec
test
adc
outsl
aam
pop
dec
les
xor
jle
jae
inc
pop
mov
mov
ds
in
lock
dec
mov
popf
bound
cmp
and
cmp
out
cli
pop
jp
in
sbb
and
adc
push
mov
fs
jle
hlt
jae
into
cltd
pop
popf
out
push
cmpsl
loope
or
push
mov
sub
in
mov
mov
adc
test
gs
or
mov
pop
fisttpl
cmpsb
out
or
shrl
ss
adc
cmpb
add
jnp
sbb
push
dec
add
mov
shll
push
clc
ret
lret
dec
or
cmpsb
xchg
mov
subb
push
or
fsub
jle
repz
push
fiaddl
jle
es
inc
stos
cmp
lret
pop
arpl
int
or
pop
lock
rclb
xchg
mov
mov
cmp
sahf
rclb
hlt
cs
negl
or
sarl
ret
jo
orb
ret
jns
dec
lds
mov
push
mov
pop
push
lock
mov
inc
fnstsw
fbld
fwait
inc
lea
and
or
imul
mov
in
push
negl
or
out
mov
arpl
inc
bound
lea
addps
xor
mov
inc
scas
jg
test
hlt
mov
les
adc
fs
mov
mov
dec
add
or
push
insb
adc
es
mov
xchg
mov
cmpsl
adc
popf
aad
lret
and
sahf
ret
out
adc
les
pushl
lods
sbb
mov
lock
mov
pop
loop
pop
rcr
ja
jmp
cwtl
sub
call
cmp
sbb
push
aad
cmc
aas
mov
lds
xor
lods
ficoml
fiaddl
cmp
sbb
pop
mov
dec
cld
jnp
int3
lcall
or
jecxz
add
push
jbe
pop
out
les
xorb
mov
xor
cmp
outsb
ret
pushf
roll
cmp
lret
insb
ret
outsb
incl
test
mov
orl
or
addr16
iret
aam
mov
popa
insb
lret
fdivr
and
mov
xor
add
jg
mov
mov
test
mov
incb
stc
lods
jne
mov
and
test
dec
leave
push
pop
pushf
inc
sub
dec
dec
shll
int3
imul
ljmp
mov
push
sub
mov
outsl
mov
mov
xchg
hlt
cmp
jecxz
jp
sbb
xor
push
sahf
push
mov
or
ljmp
xchg
xlat
push
fcompl
jl
or
fsub
cmp
pop
out
or
les
push
pop
push
xor
iret
lahf
mov
js
jge
in
test
dec
mov
pop
shlb
stos
imul
add
push
cmp
lods
lret
hlt
repz
popa
mov
repnz
outsl
adc
mov
std
lods
xchg
jl
mov
adc
repnz
jae
push
pushf
pop
adc
ret
mov
or
xor
push
sub
add
ljmp
xchg
cmpsb
cli
subl
push
jno
xlat
add
add
leave
aad
ds
mov
jae
or
jno
sbb
icebp
js
clc
dec
dec
xchg
outsb
mov
xor
pop
or
or
test
sbb
loop
aam
mov
jnp
repz
or
aaa
mov
push
and
scas
dec
fwait
cwtl
push
sbb
add
inc
mov
push
js
or
in
test
dec
aad
sbb
test
lret
pop
pop
jnp
orb
dec
fwait
jg
mov
jge
jb
inc
pop
adc
sub
and
xlat
pushf
pop
pop
fsubl
lods
and
adc
push
daa
xor
test
fwait
loopne
out
adc
or
xor
jmp
dec
mov
shl
in
mov
rorb
add
fisttpl
test
iret
pushf
sbbb
rdtsc
add
lock
cs
push
sub
mov
js
ljmp
loopne
and
lods
faddl
mov
pop
popa
mov
imul
or
cwtl
push
push
in
fsubr
lods
ja
and
push
pop
or
inc
pop
lods
xor
nop
mov
imull
mov
adc
insb
jg
lahf
jbe
pop
xchg
imul
in
imul
je
cld
or
sub
dec
das
add
dec
mov
push
pop
add
or
or
fwait
push
pop
and
arpl
push
call
out
mov
sub
sub
cmp
adc
cld
push
movsl
fsubrl
addr16
aas
dec
cmp
mov
scas
xchg
cltd
push
cmp
aaa
fistl
mov
inc
cmp
fistps
lods
cmp
adcl
pop
nop
cmp
fsubr
nop
or
lds
mov
xor
shrb
daa
mov
data16
in
or
mov
xchg
pop
movsb
lods
ficomps
mov
loop
xchg
cwtl
out
hlt
mov
mov
sbb
jge
adc
xchg
lods
add
jo
fdiv
mov
adc
jnp
push
xlat
pop
andl
cmp
jmp
ret
enter
ret
mov
inc
push
add
jl
push
adc
push
dec
hlt
repz
jg
jg
js
mov
jmp
pop
mov
and
out
rol
push
jo
adc
pop
faddl
jle
lea
das
add
mov
pushf
rcrl
sub
jl
mov
int
rorl
or
mov
fs
pop
xchg
sub
cmpsb
add
add
lret
mov
mov
aad
ficomps
and
sbb
mov
dec
or
out
popf
sahf
ljmp
cmp
mov
mov
mov
loop
clc
test
adc
ret
mov
cmpsl
xlat
jb
clc
rcl
push
mov
cmp
lea
sub
xchg
clc
aad
repz
stos
cmpsb
aad
negb
dec
push
inc
ds
and
add
pop
js
outsb
mov
stc
sbb
out
cs
and
push
adc
fcompl
loop
jns
push
stc
mov
push
std
test
test
mov
out
in
jb
push
bnd
push
add
dec
adc
test
add
das
sahf
push
lret
mov
ljmp
jl
gs
inc
and
daa
add
test
dec
addr16
pop
mov
out
sub
mov
jl
js
loop
adc
lret
inc
inc
or
sahf
adc
in
push
and
pop
pop
xor
inc
xor
test
test
cmpb
sti
add
fs
xor
in
xchg
fstpl
dec
jns,pt
dec
ret
mov
fstpt
mov
or
add
jbe
dec
mov
xchg
in
mov
cmp
jle
shlb
xchg
test
jmp
in
aaa
or
in
mov
cmp
pusha
pushf
fimuls
pop
cwtl
ffreep
das
in
std
movsl
aad
adc
xchg
lret
dec
pop
xor
push
insb
mov
addr16
mov
cmp
mov
mov
stc
int
xor
or
push
cmp
out
popf
pop
in
ljmp
push
test
stc
mov
push
test
lret
fnstcw
shrl
xchg
sub
fldt
bound
or
mov
fcmovnb
iret
ljmp
pusha
jo
xchg
cmpsl
js
mov
lods
repnz
dec
ds
and
add
ds
inc
xor
pop
std
outsl
cs
dec
xchg
insb
xchg
jle
hlt
pop
aam
ret
sub
loope
out
push
pop
dec
xor
jl
daa
es
xchg
xchg
in
adc
dec
xor
jecxz,pn
dec
adc
mov
jl
sbb
inc
mov
dec
and
jecxz
fwait
pop
mov
lret
gs
hlt
scas
in
mov
xchg
stos
dec
inc
inc
movsl
scas
add
mov
mulb
push
mov
mov
lock
cld
sub
fcompl
mov
jae
sbb
mov
mov
in
dec
loop
jle
inc
cmc
lock
mov
nop
sbb
jecxz
adcl
lea
js
es
sub
adc
push
popf
and
cmpsb
mov
mov
adc
sub
push
clc
or
movsb
pop
je
xor
testb
aam
sbb
mov
xchg
cltd
rcrl
cmp
mov
jge
push
jb
push
adc
jmp
cmp
stc
negl
push
add
test
jg
cli
xchg
and
lods
sub
inc
into
adc
xchg
xchg
xchg
jge
mov
push
sub
cmc
shrb
repz
mov
fldt
popf
cwtl
pusha
divl
das
or
inc
cmp
pop
insb
jo
sbb
aad
adc
loop
sti
fisubrl
pop
subl
sbb
scas
loop
mov
cmp
sahf
jo
sub
popa
mov
aam
jns
jbe
cwtl
or
cmc
jnp
mov
into
jl
sbb
in
pop
sub
js
lock
rol
cmp
sub
jb
movsl
cmp
out
fstpl
mov
inc
mov
dec
movl
js
ret
jg
cmp
xchg
jp
and
js
jnp
jae
test
out
rorb
sahf
inc
cmp
lret
push
lahf
and
xlat
leave
insl
stc
mov
xchg
rcrb
adc
sti
fwait
mov
mov
mov
inc
hlt
cmc
sbb
jne
in
push
jnp
jmp
dec
cmp
or
pop
fcmovne
xchg
xchg
repz
test
lock
dec
clc
into
subb
mov
ja
fisttpll
rcll
push
xchg
or
repnz
add
lea
leave
push
test
lock
mov
xorl
fs
int
xchg
cmp
xchg
inc
jmp
sub
ss
and
xchg
mov
mov
andb
insl
mov
pop
or
leave
cmp
push
xor
and
test
dec
sub
push
sbb
mov
add
call
inc
add
cmp
sub
lock
pop
popf
aad
sarl
scas
fcoml
hlt
jmp
xchg
icebp
cmc
pushf
jno
jnp
arpl
cmpb
mov
cmp
and
call
adc
sar
mov
out
popa
push
arpl
arpl
and
pop
test
ja
xor
mov
sbb
sbb
xor
xchg
pshufw
sti
test
dec
pop
or
pop
xlat
cmp
ljmp
sub
leave
pop
xchg
push
shlb
pop
mov
iret
popl
jge
into
rep
ds
clc
loopne
aam
lods
js
adc
sbb
fdivl
mov
ss
mov
pushf
jecxz
aaa
sbb
cld
and
nop
and
ror
add
jae
mov
sub
lret
mov
inc
sub
aas
lods
loope
push
push
adc
sbb
loop
jae
imul
mov
and
loope
stos
mov
jmp
pop
push
lahf
cmp
dec
fisttps
jo
xor
inc
clc
ljmp
ret
pop
or
scas
mov
adc
inc
sub
mov
addl
and
jnp
rorl
loope
push
cmpsl
xor
arpl
jmp
sti
push
fiaddl
test
outsb
insb
jecxz
popa
leave
or
lods
leave
mov
jle
jnp
and
add
xchg
out
jae
mov
mov
mov
nop
dec
sub
out
fwait
sbb
jno
es
lea
mov
push
sub
clc
sti
mov
and
push
imul
jg
jl
arpl
cltd
call
aas
ret
lret
sbb
sbb
xchg
pop
or
push
or
mov
cmpsl
in
into
pusha
iret
cmp
les
xor
adc
dec
bound
add
inc
push
sbb
enter
mov
out
xor
shld
inc
mov
insb
mov
cmpsl
mov
pop
mov
mov
cmp
inc
aas
jmp
xchg
shlb
out
dec
add
dec
fnstenv
movsl
stos
shr
jecxz
push
mov
sbb
lahf
scas
or
pop
pop
enter
pop
pop
mov
sti
inc
xor
mov
daa
add
dec
les
pushf
dec
xchg
cmp
int3
push
jnp
lods
neg
push
adc
sub
nop
rorb
stos
gs
mov
popf
das
or
lods
sbb
sbb
cmpsb
adc
mov
pop
jae
or
cwtl
cmc
sub
mov
and
sub
pop
fnstcw
xor
and
cmp
rcrb
or
loope
mov
js
leave
bound
movsb
dec
sub
cmc
xchg
xor
out
cwtl
mov
sub
xchg
and
sbb
inc
pop
cmp
popa
pop
sbb
ret
cli
stc
or
in
sub
int3
fsts
adc
sbb
lea
adc
and
je
sbb
mov
cwtl
in
sbb
scas
mov
inc
cltd
popl
dec
mov
leave
loope
adc
mov
mov
sub
adc
test
jno
jl
insl
dec
push
and
jno
cmp
xor
fwait
lret
cmpl
pop
js
fs
push
pop
jo
out
jle
add
jns
das
outsb
add
mov
addr16
pop
push
out
cwtl
pop
movsb
imul
hlt
xchg
adc
les
jl
xchg
or
inc
push
leave
fadds
ret
and
dec
jae
lods
loop
push
jae
pop
dec
cltd
jmp
cmpsb
mov
test
xor
lret
xor
sbb
cmp
test
movsb
cmpsl
inc
xchg
mov
push
lcall
sbb
jg
cmc
mov
ret
fdivs
loop
movsl
jnp
mov
cltd
in
dec
sbb
pop
and
rcrl
pop
rcll
sub
sbb
stc
and
test
outsl
inc
ffreep
idivl
arpl
seta
dec
xor
fdivs
stos
arpl
jp
push
mov
fisubs
pushf
xor
movsl
lret
fisubrs
xchg
cmp
mov
sbb
std
in
cld
add
pop
or
dec
add
sub
shrb
push
icebp
test
mov
orb
or
mov
pop
out
adcl
push
cltd
push
into
or
adc
mov
into
and
ret
lcall
mov
inc
test
cwtl
iret
imul
inc
adc
in
mov
es
es
jbe
cmp
xor
cmp
or
sahf
cli
loop
loop
mov
mov
mull
cmpsb
dec
add
push
gs
lahf
cmpsl
pop
dec
dec
lds
jnp
xor
addr16
das
add
lods
jge
push
movsb
mov
nop
loopne
push
jmp
adc
lahf
enter
inc
rcl
lcall
loop
ret
ss
insb
mov
push
xchg
sub
jnp
pop
pop
aad
scas
in
fmull
cmp
push
dec
inc
push
dec
cmpsb
adc
cmpsw
shlb
test
inc
rcrb
dec
pop
push
and
adc
cmp
gs
call
mov
es
js
inc
mov
mov
push
and
lods
jmp
mov
inc
cwtl
mov
sub
lahf
adc
ret
fiadds
insl
loopne
mov
fsubs
pop
lea
pop
add
pusha
ret
push
sub
in
cmc
or
push
lods
testl
ret
lahf
lret
dec
push
js
inc
cmp
leave
push
adc
data16
dec
test
idiv
loope
mov
mov
mov
mov
repz
xchg
cld
mov
jmp
adc
push
add
pop
and
ret
dec
cmp
push
ljmp
xlat
cmpsl
adc
out
insl
sub
ss
test
cmpsb
daa
js
or
mov
lcall
sub
ss
ret
pop
mov
outsl
shll
daa
xchg
mov
rcl
sub
and
mov
lock
mov
int
push
push
incl
add
insl
shl
test
pop
and
add
shl
adc
ret
stos
inc
cmp
push
dec
test
mov
inc
add
lods
leave
mov
stos
mov
xor
pop
es
test
pop
inc
les
sub
loope
fildl
inc
mov
ret
mov
imull
scas
mov
push
xor
sub
stc
inc
loope
loope
call
popf
xchg
lahf
xchg
sub
inc
sub
jbe
insb
es
ret
stc
push
test
push
cmp
aas
repnz
jmp
inc
inc
inc
std
sub
insb
jnp
fimull
inc
shll
inc
push
scas
inc
enter
cltd
pop
pop
cmp
pop
xchg
lret
sti
orb
cmp
in
in
pop
stos
icebp
rol
xchg
js
cmc
mov
pop
test
mov
dec
mov
add
pop
jbe
jmp
das
mov
adc
test
sti
inc
inc
ja
pop
mov
jnp
dec
push
orb
mov
inc
push
sub
outsl
loope
add
ret
aaa
jnp
into
mov
mov
ds
push
nop
aad
push
call
pushl
sub
jle
lods
jb
push
fists
mov
je
cmc
or
and
or
sub
pop
and
mov
sarl
ja
imul
sahf
or
dec
xor
or
jae
test
add
nop
sahf
push
pusha
add
bnd
dec
in
cs
das
xor
cltd
movsb
push
loopne
add
pushw
mov
sub
mov
add
inc
pop
push
repz
mov
mov
mov
cli
gs
cmp
xchg
cli
fcoml
leave
ffreep
and
outsb
dec
test
ljmp
inc
inc
jg
jbe
roll
hlt
push
xchg
cs
adc
add
sub
cltd
dec
dec
mov
adc
lret
adc
mov
jle
or
in
sub
stos
imul
and
dec
jbe
jne
subb
shl
test
adc
mov
stos
jno
je
stos
sub
movsb
push
into
clc
lahf
mov
inc
aam
add
mov
mov
mov
pushf
aaa
inc
lea
mov
outsl
mov
call
jnp
pusha
pop
pop
fists
cmp
lods
add
or
dec
or
jge
dec
subl
mov
pop
adc
mov
lods
test
aam
data16
call
mov
aaa
xor
lcall
ss
or
sbb
add
jmp
test
orb
mov
mov
mov
add
jl
xchg
enter
daa
pop
sahf
or
out
jle
push
adc
mov
pop
rcll
cmpsb
jge
ljmp
loopne
cmp
mov
fmuls
loop
out
xor
push
mov
arpl
cmpb
test
add
ds
notb
fnstenv
clc
shrl
or
xor
aam
imul
sbb
dec
std
adc
pop
xor
push
fdivr
add
inc
rolb
fwait
leave
cmp
sub
loop
pop
adc
xchg
bnd
cli
and
sahf
push
loop
inc
mov
inc
jae
lea
shll
mov
cmc
addr16
pop
stos
lock
jle
rcr
insb
adc
and
icebp
jecxz
dec
sbb
shll
mov
iret
fildll
loopne
fwait
sar
enter
add
loop
ja
pop
inc
push
or
dec
popa
pop
xchg
mov
or
or
and
xor
jl
pop
or
and
adc
fucomp
arpl
push
or
ja
shlb
loope
or
into
loope
aaa
push
dec
outsb
divb
xchg
push
mov
sub
fldz
insb
pop
shr
push
xchg
cmp
cmpsl
lds
fisttpl
sbb
sbb
cmp
jecxz
mov
xchg
lods
imul
clc
rclb
pop
cmc
cmp
stc
cs
push
fucomp
addr16
adc
dec
and
insl
mov
and
push
test
in
mov
mov
sti
sbb
xor
js
idiv
and
sbb
in
repnz
lahf
push
mov
test
clc
jge
add
ss
psubsb
dec
sbb
lcall
and
xlat
ss
int3
add
mov
lret
mov
inc
sbb
jecxz
icebp
out
fadd
outsb
jae
xor
mov
jnp
sbb
pop
dec
outsl
stc
fisttps
xchg
rcrl
insl
dec
ret
pop
movsl
mov
mov
mov
test
inc
xchg
xchg
inc
and
dec
lds
jbe
xor
mov
sbb
lds
push
jge
cmp
sub
das
or
jb
or
popa
mov
cltd
ret
pusha
arpl
iret
xchg
fisubs
call
push
psubsb
rcr
xor
and
or
mov
test
adc
fisubl
sub
mov
pop
cmpsl
push
stc
test
push
stc
pop
fs
xor
adc
mov
cmp
test
enter
sahf
es
aas
push
cmp
pop
add
ss
push
insl
jp
pop
fadd
add
call
pop
mov
ficomps
mov
aam
adc
cltd
je
fs
jle
or
out
push
repnz
fistpll
dec
lcall
mov
mov
mov
rcrb
cmp
add
insb
cmp
dec
sub
mov
addr16
inc
jo
xchg
mov
jbe
pop
popf
cmpsl
add
mov
xchg
and
mov
je
popa
dec
dec
sbb
iret
inc
gs
adc
in
clc
cwtl
push
jmp
mov
mov
jns
push
pop
stos
call
push
add
stos
mov
push
lds
repz
mov
loopne
dec
pop
dec
jno
inc
mov
mov
jle
mov
mov
inc
inc
or
cltd
sahf
data16
bound
inc
faddl
push
sbb
outsb
dec
xchg
mov
repz
sub
dec
out
mov
popa
fisubrs
inc
fs
jl
and
hlt
cli
xchg
pushf
fstpt
cmp
in
insb
test
ljmp
stc
jp
cmp
mov
push
jge
and
and
loope
jb
xchg
cmp
mov
or
add
jae
xchg
lret
push
movl
xor
mov
jno
mov
and
mov
mov
outsb
enter
incb
add
outsb
mov
xchg
mov
out
pop
dec
mov
jg
std
cmp
mov
ffreep
mov
outsb
sbb
popf
aaa
pop
movsb
xor
loope
lock
push
push
xor
dec
push
aas
pop
les
mov
push
ds
jecxz
ljmp
subl
mov
test
scas
lds
dec
pop
lret
shl
mov
imul
push
xorb
cmp
out
lahf
adc
mov
pop
jns
add
xchg
mov
adc
cld
insl
jae
mov
out
scas
sub
fnstcw
repz
push
lds
in
lcall
jb
xor
jae
xlat
ds
push
dec
hlt
xchg
jne
sar
jecxz
push
sub
outsb
xchg
stc
das
lret
push
and
cltd
adc
xor
or
mulps
jle
fdivrl
add
adc
pushf
and
fcompl
mov
loop
mov
mov
jl
xor
xchg
mov
and
cmpb
bound
enter
lahf
pop
push
insl
xchg
sahf
pushw
cmp
dec
or
fcom
shrb
call
addb
das
js
addr16
jnp
cmpsb
push
inc
xchg
pop
fwait
pop
aas
out
jecxz
sbb
incl
cmc
addr16
dec
pushf
lcall
mov
cmp
push
jp
dec
xor
add
loope
and
into
inc
or
js
xor
jecxz
pop
fcmovnbe
mov
and
xchg
pusha
jle
jb
pop
xchg
stos
add
xor
js
lret
pop
fcmove
fucomi
lcall
sbb
pop
lcall
addr16
ret
loopne
mov
addr16
pop
mov
lods
fldcw
rcr
pop
shlb
push
inc
lds
push
push
sub
int
inc
imul
cwtl
clc
enter
or
decl
push
sbb
aad
arpl
test
inc
push
mov
push
sbb
sbb
lds
add
jmp
fstps
xor
mov
loop
icebp
ret
mov
stos
or
dec
xchg
sub
pop
outsl
mov
push
sbb
xor
mov
in
mov
mov
sub
cltd
into
pop
mov
add
repnz
jmp
mov
adc
cld
xchg
repz
repz
loopne
sub
idivl
rcl
mov
xchg
pop
out
sub
xchg
mov
rcrl
or
scas
xor
mov
lds
pop
aas
push
scas
cmpsl
dec
jg
cwtl
cmc
cmp
lods
data16
pushf
push
idiv
movsl
popa
mov
cmp
fwait
loope
xchg
mov
xchg
mul
mov
ss
pop
lock
jmp
inc
cmp
xchg
repz
and
jbe
mov
jge
fildll
jmp
aam
sbb
jnp
xor
xchg
int
mov
inc
jb
mov
pop
pop
test
dec
push
je
call
xchg
mov
das
push
mov
repnz
repnz
inc
inc
mov
or
cmovb
adc
cli
gs
jne
push
xchg
cmpsl
add
idivl
ljmp
int3
in
int
fnsave
dec
sbb
pop
lret
sbb
add
jp
and
push
mov
jns
loop
lcall
jns
jne
sbb
mov
or
jne
dec
push
mov
push
jae
in
in
fistpll
notb
in
scas
dec
in
jg
mov
push
loope
int3
adc
mov
jle
jecxz
mov
xor
mov
pop
out
add
jg
push
imul
ss
pusha
push
shlb
inc
pushf
jl
xlat
and
xchg
and
pop
and
xchg
fwait
ja
outsb
rorl
insb
popa
dec
xchg
xchg
cwtl
roll
sbb
add
jbe
sbb
dec
pop
ficomps
arpl
sub
lea
test
lahf
hlt
sbb
push
dec
sbb
cli
xchg
enter
dec
call
jbe
xchg
popa
testb
jle
push
sbb
add
xor
jns
fsubr
adc
repz
mov
adc
ret
in
enter
lea
mov
inc
dec
aad
sub
imul
ret
mov
jg
ljmp
push
inc
adc
lds
out
fisttpl
or
insb
xchg
js
flds
cwtl
xchg
and
je
xchg
pop
mov
jbe
daa
cli
scas
push
mov
ffree
jg
je
outsl
or
loopne
mov
xlat
or
sbb
pop
jge
mov
imul
dec
inc
add
sub
jmp
popa
push
mov
xor
in
test
pop
ret
or
dec
ret
ret
dec
ljmp
xchg
aas
mov
or
lret
mov
repz
test
xchg
jo
jns
adc
int3
add
jae
push
add
dec
dec
mov
or
pop
pop
mov
sbb
inc
ds
mov
push
sti
test
sub
add
imul
mov
test
outsl
mov
std
lods
xor
xchg
or
xchg
jne
jmp
inc
inc
stc
ret
loop
sbb
ret
notb
adc
mov
insb
cwtl
dec
inc
or
pop
in
fnstenv
imulb
mov
cmp
sahf
stos
add
xor
dec
push
lcall
push
pop
jmp
ficomps
cli
push
int
sub
lea
sbb
cmp
clc
mov
and
xchg
pop
cmpsl
lret
push
xchg
in
fcompl
cs
sbb
mov
mov
dec
inc
jle
insl
test
insl
xchg
jo
gs
and
iret
test
roll
adc
dec
ss
xchg
mov
fstl
in
dec
cmp
test
insb
ficompl
daa
shll
pushf
pop
daa
push
push
xor
mov
inc
mov
pushf
int3
out
and
lcall
loope
test
mov
loop
enter
fdivrp
add
shlb
mov
lcall
ljmp
dec
cltd
inc
pop
loope
xchg
mov
xchg
pop
xchg
or
xchg
and
negl
inc
imul
loopne
mov
cmp
adc
lahf
imul
js
push
push
add
cmp
dec
stos
fdiv
sahf
aas
push
repnz
mov
lock
push
mov
inc
fsub
push
add
fld
mov
xor
insb
add
lahf
cmp
sbb
xor
mov
cltd
out
xlat
xchg
sbb
xchg
adc
push
lods
fmul
out
mov
es
inc
jns
inc
stos
insl
pushf
lods
test
aas
aad
adc
jge
sbb
fistpl
and
dec
test
imul
into
shll
sub
pop
test
iret
aaa
jb
dec
dec
arpl
adc
loop
jg
sub
fsubrl
dec
adc
inc
pop
call
fldenv
inc
jl
sub
inc
aam
push
outsb
adc
pop
ret
fucomp
pusha
mov
xorl
inc
pop
push
or
in
sbb
push
sbb
mov
fidivs
pop
aam
in
in
inc
mov
push
dec
push
jmp
xor
adc
jne
mov
aas
cmc
fwait
sbb
sub
push
in
sub
stos
push
adc
lret
movsb
xor
jb
push
cmc
cmc
pop
in
jmp
aaa
aam
sbb
mov
jge
mov
filds
mov
xchg
jo
jmp
dec
add
call
sbb
fimull
dec
popa
xchg
xchg
mov
dec
int3
and
sti
stos
cltd
jp
imull
adc
mov
cmpsb
daa
fistpl
es
mov
lahf
xor
aaa
jne
adc
test
sahf
adc
jo
add
insl
popf
std
dec
outsb
das
dec
and
xor
jo
stos
xor
mov
movsb
and
js
and
imul
jecxz
sub
xor
fs
or
pop
lcall
test
sub
cmp
adc
xchg
loop
movsl
push
inc
jl
cmp
cmp
out
aaa
shrl
xchg
mov
nop
cmp
adc
mov
mov
pop
movsl
cmp
jg
push
add
jl
aas
daa
insb
imul
ljmp
inc
sbbl
cwtl
mov
loop
popf
js
add
sub
xchg
ret
clc
pusha
jnp
fsts
xchg
dec
mov
pop
mov
inc
pop
das
out
lea
pop
pop
mov
lods
sub
pop
xor
fisttpl
cs
add
dec
ljmp
push
bndldx
xlat
mov
in
adc
xchg
fistpl
fs
loope
pop
in
fisttpl
pop
cmp
xor
mov
idivb
inc
stos
mov
cld
xor
loop
stos
mov
cmp
out
and
sub
repz
xor
fbstp
pop
cmp
aas
insl
lock
std
jge
insb
in
rolb
xchg
clc
pop
call
push
dec
pop
stos
fs
fcompl
mov
push
xor
adc
outsb
mov
scas
mov
mov
test
aad
jns
mov
inc
iret
int3
and
je
cmp
sbb
clc
bound
sub
aad
fisttps
pop
add
dec
rclb
cmp
dec
mov
push
lret
rcr
lcall
push
push
xchg
jecxz
pop
call
inc
fdivrl
popf
into
push
fsubrl
sbb
jg
clc
and
add
adc
adc
mov
adc
lahf
push
jle
inc
mov
sub
lret
call
in
jg
jno
adc
push
or
adc
adc
pop
xchg
cltd
shlb
outsl
xor
pop
leave
imul
hlt
leave
cmp
ss
and
les
das
shll
pusha
inc
mov
xor
test
fwait
ret
cmovae
rcll
fisubrl
add
insl
repz
fwait
test
xchg
cmp
mov
push
add
mov
xlat
xchg
lea
call
xor
inc
jg
out
inc
inc
jecxz
cltd
femms
cltd
lret
mov
insl
in
int
lcall
andl
movsb
mov
orb
push
dec
fcoml
popa
jnp
loop
dec
mov
popf
push
scas
in
mov
mov
mov
imul
jbe
mov
adc
mov
mov
jmp
sti
movsl
xchg
jle
jbe
mov
pop
shrl
dec
popl
ss
std
mov
test
pop
sub
test
dec
pop
sub
shll
push
sbb
push
xchg
orb
push
faddl
push
jmp
xchg
mov
pop
add
push
mov
outsl
ds
push
pushf
cli
jae
lcall
repz
loop
outsl
lahf
popa
js
dec
fs
xor
pop
push
aas
mov
sub
mov
jg
adc
pop
pop
fwait
ret
xchg
mov
imul
rclb
inc
js
mov
adc
xchg
aas
mov
cs
jb
repnz
ja
subl
test
or
enter
pop
in
in
shll
pop
xchg
icebp
mov
mov
mov
sub
pop
repz
mov
daa
jl
jb
loope
ljmp
mov
lods
data16
or
xor
mov
or
aaa
addr16
stc
pushf
inc
pop
icebp
push
cmp
test
adcl
jge
fisttpl
push
mov
inc
in
and
fcoms
cmpsl
push
dec
jg
pop
pop
addr16
fmuls
out
sub
add
adc
faddp
pop
adc
nop
mov
scas
push
or
arpl
pop
dec
xchg
adc
xchg
fwait
mov
gs
mov
repz
add
lock
mov
inc
mulb
inc
cmp
rol
fisubrs
sbb
repz
xor
mov
inc
sub
ds
cmp
mov
outsb
mov
imul
cld
inc
sbb
push
sbb
xchg
xchg
fdivp
arpl
fyl2x
pop
pushf
les
adc
dec
inc
sub
arpl
shll
push
mov
xor
sub
stc
mov
loope
add
sbb
insl
push
outsl
shrl
lods
stos
pushf
jb
sbb
adc
loope
sub
jecxz
and
pop
cmp
aam
cmp
lock
cltd
xchg
lahf
outsb
daa
add
mov
mov
mov
mov
outsl
inc
ss
dec
pop
sti
daa
xchg
cwtl
sub
sub
push
pop
imul
fyl2x
out
sub
andb
iret
cmpsb
fcmovbe
arpl
pop
cmp
fistpll
cli
mov
pop
mov
jle
pusha
jle
es
stos
lcall
pop
dec
push
stc
imul
stos
cmp
add
jl
push
sbbl
mov
aam
inc
mov
into
adc
lods
clc
cmp
out
sub
xchg
sqrtps
lcall
arpl
pop
cs
cmp
jnp
xchg
mov
inc
lahf
xchg
int3
mov
adc
pop
ds
cmpsb
add
dec
loop
aas
stos
push
adc
push
hlt
pop
dec
test
stc
fiadds
jge
fnstenv
fcmovnb
dec
mov
aas
sbbl
adc
fdivr
sbb
xlat
jae
and
pop
xchg
mov
inc
test
lret
pushf
push
push
mov
repz
inc
imul
push
pusha
in
mov
ds
adc
mov
pop
ljmp
mov
lods
insl
movsl
testl
nop
shlb
ret
pop
subl
pop
loop
enter
jo
xchg
enter
les
shll
dec
mov
pop
push
inc
out
mov
adc
mov
aas
insl
jb
or
push
lcall
push
out
adc
adc
jo
or
popf
std
fisubrl
and
int3
nop
scas
mov
cmp
hlt
dec
mov
mov
dec
icebp
loopne
jne
imul
dec
add
xchg
inc
hlt
xor
or
ja
std
iret
add
in
jl
es
push
pusha
xchg
cmp
das
cmp
push
push
ss
aaa
test
gs
dec
mov
repz
loope
addr16
mov
fbld
ljmp
hlt
xor
daa
xchg
jne
sbb
push
shlb
das
nop
test
loopne
rcrl
xchg
in
pop
adc
xor
cmp
mov
push
call
sbb
mov
in
jp
xor
ja
mov
xchg
jmp
outsb
jo
cmpsb
call
lock
cmp
out
je
lcall
cltd
lret
movsb
sbb
lods
xchg
jle
mov
iret
outsb
jae
inc
pop
test
xor
push
xor
call
pminsw
repnz
aas
loopne
push
xor
dec
jmp
xlat
out
jmp
sbbl
std
sub
push
fidivl
and
dec
pop
adc
in
adc
cmpsb
sub
cltd
sub
fstp
flds
push
sti
nop
enter
outsb
rolb
shrb
data16
test
pop
add
daa
mov
pop
add
cmp
jb
lahf
in
loop
mov
test
shrd
outsb
psrlq
adc
xchg
jb
addb
loopne
mov
fcmovu
cwtl
js
mov
lods
movsl
lods
push
or
sub
pop
sub
shrl
test
cmp
cmp
and
inc
lods
pop
adc
stos
lea
rolb
pusha
xor
daa
loop
inc
cmp
gs
mov
stos
in
fwait
xchg
push
inc
rcrb
push
push
rolb
scas
js
xor
test
lahf
int
notb
xlat
popa
xchg
mov
and
mov
les
pop
xchg
imul
pop
fs
je
call
push
mov
dec
inc
call
push
and
jecxz
mov
jle
fmull
sahf
jecxz
sbbl
mov
scas
mov
or
jb
or
movsb
lret
jae
mov
iret
insb
outsl
jbe
cmp
orl
cmp
jnp
les
rcl
push
add
cmpsb
and
mov
inc
sbb
mov
xorl
xchg
mov
sti
jmp
mov
daa
cmp
xor
cmp
outsb
mov
data16
clc
cwtl
cmc
aad
inc
mov
xor
out
mov
jmp
in
push
aas
jo
add
dec
dec
fwait
mov
arpl
or
arpl
adc
leave
adc
mov
sub
shl
lock
fsubrs
jne
negl
ret
test
or
fildll
das
iret
inc
je
pop
rorb
xchg
lods
iret
dec
mov
push
jb
out
aaa
fs
sbb
lds
pushf
in
mov
pop
lods
adc
lods
in
mov
xchg
cmp
dec
mov
int3
lahf
aad
nop
push
aas
add
out
jae
inc
lret
jp
lods
testl
loope
xchg
push
nop
push
add
pop
orl
mov
pop
jge
jnp
lcall
fs
xor
aas
mov
xor
sbb
cld
cltd
loop
pop
lds
push
lods
sub
call
subl
lods
xor
jge
push
xchg
ja
std
mov
bound
sti
lea
add
cld
or
ja
push
inc
cli
xor
jns
btc
mov
jle
les
movsb
outsb
in
out
arpl
lock
adc
xor
mov
cwtl
and
dec
arpl
call
xor
cmp
movsb
jo
lea
pop
cmc
ret
pop
std
ret
jno
mov
and
shrl
testb
cli
sbb
mov
pop
sub
mov
addb
repnz
in
xor
add
jnp
sar
sbb
aad
push
cwtl
mov
js
cltd
jmp
movsl
outsb
cmc
test
push
push
pop
pop
add
and
pop
jp
push
inc
loop
mov
dec
call
pusha
jge
sarl
push
adc
and
aad
jmp
add
dec
lcall
mov
std
fimull
or
jecxz
inc
and
and
jns
in
and
sbb
fs
push
popa
cmpsb
or
fistpll
cltd
mov
and
mov
popa
dec
lahf
xchg
sbb
ljmp
je
std
iret
enter
adc
sbb
stos
in
xchg
add
inc
add
cmp
andb
roll
out
jge
sahf
ret
aas
inc
fimuls
sub
rol
pop
cwtl
fidivrl
mov
je
mov
dec
or
js
aam
lea
push
push
lcall
add
push
daa
iret
cli
cmp
test
dec
mov
pop
mov
scas
pop
jns
mov
inc
jmp
inc
dec
jp
sub
adc
xchg
ficoms
push
into
jmp
icebp
pusha
xchg
cmp
inc
cmp
push
inc
cmpb
mov
dec
jecxz
dec
sub
cmp
add
out
sbb
add
inc
push
dec
lods
pop
in
in
fnstsw
mov
iret
jp
enter
ja
jl
jbe
lret
cwtl
jns
mov
jnp
push
aaa
mov
mov
movsl
adc
xchg
mov
pop
pop
fisubs
xlat
rorb
pusha
pmovmskb
mov
push
bound
add
js
fcmovu
or
sahf
pusha
mov
mov
call
jb
cmp
ljmp
push
mov
jae
aas
pop
ja
cmc
cmp
mov
push
xchg
pop
fnstcw
mov
mov
out
mov
iret
or
aas
mov
cmp
xchg
repz
and
push
sub
inc
lea
es
insb
sbb
pusha
decl
mov
xor
test
cmp
ljmp
mov
pop
push
out
int
imul
loope
sbb
cmp
cmp
dec
pop
sub
add
or
pop
lret
jecxz
cmp
daa
imul
dec
or
pop
idivl
cmpsl
adc
iret
ss
addr16
aaa
in
cmp
lds
or
inc
cmp
cmc
mov
jae
xchg
nop
and
loopne
test
or
out
mov
jae
dec
cmp
push
pop
push
pop
aad
fcoms
jns
fs
sarb
repnz
push
cmpsb
je
xor
mov
jne
dec
push
pushf
xor
lcall
lds
loope
scas
fcompl
jo
orb
insb
fisttpll
in
lods
push
or
in
xor
dec
pop
repz
daa
in
jae
lea
dec
jbe
sbb
aaa
test
minps
dec
fnstenv
insl
jns
fimull
shrl
pop
fmuls
ret
sar
imul
mov
iret
inc
jnp
ja
cltd
clc
test
lret
lahf
sub
push
in
dec
jmp
imul
jge
sub
jno
xchg
cmc
add
or
sarb
aam
test
cli
scas
sbb
pop
out
test
int3
popl
mov
into
jnp
pop
pushf
push
push
mov
lds
adc
adc
hlt
dec
pop
mov
jnp
and
pusha
and
shlb
mov
cmpsb
jecxz
jno
and
loope
fstps
pop
or
sahf
add
inc
or
sbb
rol
add
out
out
jo
dec
adc
ret
subl
xchg
fistpl
lods
lods
mov
mov
leave
icebp
push
cltd
ret
xchg
es
mov
stos
sub
jo
dec
fisubl
sahf
lret
faddl
lret
xor
js
cmp
sub
aam
addl
and
shl
mov
mov
std
push
mov
mov
jae
data16
xor
inc
mov
call
cltd
inc
aam
mov
inc
pop
jecxz
push
movsb
push
sbb
mov
mov
add
or
inc
dec
or
outsl
mov
mov
je
js
ljmp
shlb
out
jl,pt
popa
lcall
xor
addr16
int
push
adc
iret
shll
movsb
sub
inc
stc
push
cmp
lds
iret
rcl
sbb
jae
dec
lea
inc
jae
push
jmp
pop
movsb
mov
sahf
xabort
repnz
mov
xchg
jns
stos
cmpsl
mov
pop
mov
mov
lcall
ror
add
test
outsl
jecxz
and
push
psllw
push
mov
in
xor
push
cmpsl
js
mov
data16
mov
xchg
pop
add
sub
test
cmp
out
fwait
dec
add
lds
and
data16
je
xorb
push
push
mov
jno
push
sub
out
aaa
push
push
loopne
sbb
ret
mov
rcrb
mov
out
clc
inc
mov
inc
inc
in
leave
pop
das
subl
cmpsl
sub
fldt
arpl
popa
rolb
pop
leave
ds
out
sbb
adc
sub
pop
mov
incb
xor
stos
pop
daa
les
mov
and
xchg
aaa
pop
mov
les
fwait
leave
outsl
jns
jmp
cmp
ds
inc
fwait
shll
xor
fdivs
les
and
fadd
stos
into
fidivs
jns
scas
ror
loope
inc
push
add
daa
mov
arpl
mov
pop
jg
aam
lea
shll
adc
fistps
mov
jl
sub
and
pop
stos
bound
gs
dec
dec
cmp
inc
pop
xchg
cli
and
dec
cmpsl
cli
cmp
pushf
dec
mov
popf
inc
pop
xchg
pop
call
pusha
cmp
nop
jmp
cmp
add
jmp
mov
rorl
idiv
subl
sahf
rol
repz
jecxz
jno
lds
inc
clc
lea
lret
aaa
push
sub
cmp
mov
sub
cmp
adc
inc
mov
mov
rclb
aas
test
stos
jnp
movsl
adc
xor
cs
addr16
nop
imul
addr16
pop
lods
in
jmp
lret
mov
jns
out
insl
push
sub
flds
mov
fnsave
pop
push
pop
test
leave
ljmp
in
rorb
lret
push
hlt
cmpsl
notb
aas
xchg
dec
or
movsb
lods
outsb
jo
fwait
adc
push
mov
repz
lods
xchg
cmp
cmc
sbb
cmpsb
aas
stos
add
das
adc
sti
ret
mov
mov
jmp
mov
fs
scas
andb
mov
dec
js
ret
xchg
jo
movsl
daa
push
cltd
mov
mov
repz
cmp
mov
dec
enter
std
sub
mov
sbb
pop
call
dec
sti
dec
mov
shll
xchg
inc
cmp
ret
movsl
jp
sbb
or
sahf
cwtl
shll
testb
test
mov
das
lds
lahf
add
xchg
jo
mov
fwait
loopne
cmc
not
lahf
jl
daa
adc
subl
out
mov
mov
xchg
or
adc
pop
sbb
lods
jmp
loop
jg
inc
je
data16
jb
mov
enter
add
mov
js
bound
xchg
int3
cmp
jg
imul
xor
pop
xchg
sbb
ss
jp
addr16
rcr
inc
jo
mov
movsb
arpl
xchg
iret
or
adc
addr16
sarb
sub
mov
int
daa
or
mov
sub
fcomps
xor
call
movsl
sti
pop
inc
lods
xor
testl
mov
push
lcall
pop
sti
mov
mov
inc
fwait
jo
and
cmpsl
fbstp
add
das
in
mov
pushf
test
outsl
and
jge
xchg
ds
dec
mov
xchg
les
cmp
loop
sub
push
jp
stc
jp
out
sbb
stos
lods
cmc
je
mov
dec
dec
push
sbb
jbe
sbb
cmpsb
test
lods
fisttps
in
cltd
out
xchg
lahf
repz
dec
jmp
cmc
loop
in
pop
mov
mov
or
sbb
sub
xchg
scas
jp
aas
je
xchg
xor
xchg
mov
hlt
clc
and
stos
jp
stos
sub
in
fdivs
mov
fstp
adc
jmp
fs
xor
push
dec
mov
sahf
push
rorb
shlb
mov
and
xor
test
xchg
aas
nop
cltd
mov
dec
out
pop
shrb
and
lods
add
pop
push
imul
pop
mov
ja
lock
cmp
xlat
inc
inc
lret
insb
lret
push
daa
xor
mov
jecxz
repnz
xchg
xchg
mov
jge
pushf
mov
add
push
xor
cmpsb
and
lods
push
dec
es
sbb
ja
xor
mov
cli
sub
mov
push
and
lds
dec
pusha
int3
push
push
mov
les
mov
push
add
jle
xor
test
rcrl
cld
or
andb
into
sub
xor
insb
les
nop
ss
inc
xchg
mov
jmp
sbb
jg
adc
pop
fs
mov
jmp
cmp
fadds
je
push
les
insl
mov
pop
mov
dec
cmp
dec
pop
out
mov
jp
mov
sbbb
jl
fcom
jnp
mov
lahf
xchg
sub
out
dec
jne
sub
stc
and
rcl
stos
fistps
sbb
rcr
xchg
mov
popf
loop
sub
inc
lret
adc
out
and
cwtl
or
clc
test
adc
rolb
js
sub
dec
dec
sub
jecxz
mov
stc
jmp
cs
out
jp
xlat
inc
pushf
leave
cmovnp
in
mov
adc
mov
stos
int
loop
cmp
js
xor
add
cmp
mov
mov
mov
in
shr
add
sub
mov
dec
mov
test
push
int
pop
mov
lret
in
mov
mov
ss
and
mov
filds
lret
divl
dec
pop
sbb
cld
and
cmp
dec
leave
movsl
ficompl
mov
decb
push
jle
mov
lods
lcall
cltd
or
insl
leave
inc
cmpsb
je
add
icebp
sahf
jp
out
inc
iret
pop
sti
jnp
psubusb
fst
int
and
and
or
xchg
stos
sti
jp
xorb
cld
mov
push
stc
mov
sub
push
mov
aas
push
daa
adc
sbbl
cmp
test
add
dec
xchg
inc
push
jne
dec
jle
rorl
lret
add
es
hlt
faddl
jne
xchg
arpl
test
jns
xor
mov
mov
dec
push
cmpb
dec
pushf
fmull
cltd
pop
sbb
pop
insb
push
and
push
gs
pop
cmp
ficoml
jne
dec
movsl
je
rorl
mov
xor
push
negl
xor
mov
mov
pop
cs
mov
or
shrb
jb
lods
jnp
or
aas
loopne
fbld
sahf
sbb
sbb
sbb
pop
das
push
push
int
stos
adc
icebp
cltd
cld
mov
dec
fdivrp
out
outsb
rorb
cs
dec
sbb
gs
push
loopne
lea
insb
pop
inc
imul
mov
cld
adc
es
xor
rcr
movsl
dec
push
ffree
inc
jg
mov
mov
jbe
shlb
dec
xor
das
notb
insb
cs
addr16
dec
sti
fstpl
xlat
pop
test
add
push
es
mov
cmp
lcall
dec
cwtl
jae
lahf
mov
and
das
xor
outsb
jns
lea
es
rclb
lret
xor
inc
pop
xchg
out
iret
int
cmc
xchg
stos
aaa
notb
fildll
or
dec
jmp
loope
test
subl
pop
rcrb
out
movsb
push
or
push
xchg
cwtl
ja
mov
bound
mov
lock
lret
jae
lock
push
mov
push
lds
pop
lcall
jo
std
sarl
jmp
dec
sti
pop
mov
pop
mov
jno
cltd
sbb
and
push
sti
pushf
fpatan
enter
mov
pusha
rcrb
ret
ss
inc
pop
xchg
ficoml
outsb
pshufw
mov
lahf
mov
adc
mov
lock
lret
sub
into
and
mov
inc
mov
and
adc
je
test
mov
scas
popf
dec
stos
jb
inc
cmp
pop
pop
movsb
dec
xchg
scas
dec
icebp
je
or
mov
ss
or
or
lret
fwait
ja
xor
in
int3
jb
icebp
sub
xlat
ds
insb
mov
inc
inc
jae
sub
stc
mov
fadds
iret
movsl
arpl
outsl
xchg
add
mov
ja
cmp
mov
add
repz
loop
pop
fwait
xchg
jle
mov
push
orb
dec
mov
in
push
movsl
cs
icebp
jg
xor
and
dec
ja
dec
xor
loopne
and
pop
lret
jbe
jne
pop
xor
push
cmp
xchg
push
repnz
mov
aas
loop
aad
sbb
stos
or
out
pusha
adc
adc
sub
in
inc
sbb
cmp
pop
nop
add
outsl
fwait
push
xor
push
sbb
movl
mov
jp
leave
sub
add
push
lods
inc
call
es
or
mov
mov
rcl
mov
inc
or
fdivrp
iret
sbb
and
daa
ds
adc
lahf
pop
sahf
dec
adc
lods
out
les
stc
inc
jecxz
push
and
jnp
mov
xchg
ret
adc
mov
pop
repz
flds
mov
jnp
mov
mov
pop
shll
mov
mov
iret
bound
shl
and
cmp
jae
sub
push
sbb
fcomps
ficoml
nop
ret
sbb
mov
push
jge
or
pop
je
mov
push
add
js
push
les
iret
imul
lahf
int3
mov
lcall
cmpsb
pop
cmp
mov
inc
call
mov
shrb
pop
imul
mov
lods
sbb
jg
pop
xchg
out
jle
sbb
or
arpl
cmp
xor
sub
sub
adc
sub
lahf
rcl
test
mov
insl
cmpsl
cmc
push
jae
push
outsb
fsubl
sbb
mov
jnp
aad
mov
dec
cwtl
mov
fcmovbe
mov
xor
subb
mov
adc
es
mov
pushf
sub
cltd
pop
jl
mov
sub
inc
les
pop
in
stc
mov
push
andb
dec
push
or
push
lret
fdivr
nop
mov
je
fucomi
or
das
pop
mov
xchg
das
dec
scas
scas
push
fdivs
test
lcall
add
xchg
cmovle
push
jb
cmp
dec
mov
into
outsl
aas
adc
push
cltd
rcrl
or
gs
in
pop
xchg
roll
aam
orl
sbb
fildl
mov
sub
arpl
test
jne,pn
imul
cmp
cmpsl
stos
sub
scas
add
inc
repz
dec
push
sub
sbb
xchg
sub
push
cmp
scas
sub
outsl
fsubs
add
mov
xchg
int
cld
add
rol
int3
fistl
and
jge
push
movsl
cmp
adc
sub
cwtl
sbb
popa
push
addb
pop
cmp
fs
out
mov
inc
jecxz
cmp
idivb
push
sub
lock
or
push
xchg
stos
mov
fwait
cmp
arpl
ljmp
ljmp
push
add
mov
xchg
sub
jno
mov
dec
scas
std
push
in
hlt
fs
dec
pop
pusha
mov
stc
mov
or
lds
iret
mov
jp
in
idiv
loop
in
movsl
inc
cwtl
insb
push
xor
cmp
inc
enter
jl
fists
lods
int
jecxz
sbb
xchg
bnd
push
mov
sbb
pushf
es
inc
or
and
test
add
and
mov
inc
jge
or
mov
or
in
mov
push
lret
shlb
cs
jmp
fldt
aad
or
adc
out
fdivrl
xor
mov
dec
lock
cmp
xchg
sbb
test
push
loopne
mov
push
xchg
xchg
cs
and
cld
or
in
test
fstps
in
mov
sub
mov
mov
jb
jmp
push
pop
hlt
fdiv
cmp
test
jmp
xchg
aad
movsb
out
ja
cmpsl
lahf
icebp
inc
push
sbbb
mov
rolb
fcmove
cld
and
adc
mov
sarl
dec
xor
in
xor
adc
aad
inc
cmp
sbb
dec
push
mov
dec
adcl
cld
adc
sbb
in
xor
push
cmpsb
adc
dec
lret
mov
sahf
and
and
mov
push
out
lahf
stos
jo
jbe
jecxz
dec
push
aad
pop
in
lcall
mov
jg,pn
xchg
into
or
push
fldt
or
mov
mov
xchg
add
xchg
inc
mov
or
lcall
sbb
pop
jp,pn
mov
fmuls
mov
nop
ret
imul
jecxz
enter
jg
add
inc
cltd
loope
mov
xchg
movsl
cmp
inc
jle
jnp
xor
mov
add
xchg
add
packuswb
adc
leave
gs
add
ljmp
jmp
xlat
jmp
and
in
shll
dec
ret
addr16
cmc
ljmp
int
out
pop
movsl
rclb
xor
pop
mov
jg
lods
mov
inc
cs
outsb
pop
push
loopne
andl
fidivrs
aad
mov
xchg
jne
xor
mov
ficoml
sub
push
lahf
arpl
fidivs
loopne
xchg
jl
outsl
sbb
pop
pop
and
xor
or
mov
in
mov
stos
xor
scas
pop
es
xor
jmp
jmp
jno
test
push
add
or
jp
and
stos
ja,pt
sbb
aaa
rcrl
lret
call
hlt
mov
sbb
dec
pop
std
lret
insb
ja
test
mov
stos
fs
inc
popf
xchg
fiadds
cmpsl
sbb
and
jno
mov
mov
ljmp
pop
call
data16
sub
arpl
sbb
data16
xor
data16
negb
iret
lods
jnp
enter
das
sbb
inc
stos
ss
outsl
sbb
xor
xor
les
into
jno
aaa
fs
and
test
imul
adc
ret
rcl
sub
mov
out
mov
fadds
in
adc
sbb
xchg
inc
mov
sub
out
push
rclb
mov
ror
jmp
push
in
aad
int
cmp
fcmovu
push
cmpsb
mov
cmp
cld
adc
sub
clc
lds
lds
ret
sbb
inc
sbb
hlt
and
push
out
subl
pop
pusha
dec
sub
cmp
test
push
pop
ret
dec
mov
xorl
shrb
dec
out
popf
fldt
or
inc
xor
adc
add
outsb
mov
aam
pop
jnp
pop
jo
ficompl
jle
roll
mov
add
aaa
jbe
sub
shl
and
xlat
fistpll
out
xor
aaa
cmp
imul
in
jnp
dec
adcb
lret
cmp
sub
test
push
xlat
add
sbb
mov
fwait
pop
lea
xchg
xchg
dec
push
and
add
ret
or
test
mov
int3
lods
jo
and
mov
push
sub
in
das
fcoml
imul
add
jbe
pop
mov
dec
jmp
pop
fsts
mov
or
or
and
pusha
mov
arpl
icebp
push
rol
lea
jle
push
mov
std
xchg
mov
stos
repz
repz
mov
dec
pop
add
mov
jae
sbb
sarb
xor
mov
mov
loop
mov
outsb
filds
dec
mov
dec
ror
lcall
add
rcll
movsl
add
in
mov
pop
loope
rcll
sbb
sbb
stos
xor
lods
fbstp
xchg
lcall
sbb
out
inc
out
or
mov
dec
jmp
dec
leave
jecxz
leave
pop
out
jno
xchg
js
and
cmp
adcl
in
in
cmp
xchg
xor
cmp
jmp
or
aas
cmp
iret
out
cwtl
pop
scas
fsts
sub
and
pop
mov
orl
icebp
mov
inc
repnz
in
mov
mov
popf
int3
sub
cli
mov
mov
push
fwait
lahf
mov
in
das
cmovs
into
or
mov
adc
test
mov
cld
std
lret
inc
cmpsb
inc
mov
or
nop
dec
stos
mov
push
lret
jg
int3
dec
and
dec
inc
cwtl
adc
push
sub
pusha
scas
jmp
jl
mov
jno
sub
sbb
push
leave
sbb
neg
cmpsl
or
and
push
jno
jmp
int
mov
mov
pop
lds
popa
push
leave
aam
test
cs
negl
dec
cmp
bound
movsl
cmp
adc
stos
lret
aam
ljmp
fcomp
fbstp
xchg
cmp
pop
mov
and
aad
xchg
in
pop
xchg
mov
lods
shlb
sbb
fidivs
shlb
insl
mov
add
mov
mov
pop
ficoml
js
adc
out
xchg
sub
xchg
faddl
loope
xchg
sbb
dec
xchg
cmp
out
adc
enter
pop
add
iret
icebp
daa
xchg
jno
mov
pop
mov
or
or
loopne
xchg
pop
lahf
add
and
jge
in
jb
lret
push
and
push
mov
int3
xlat
fbstp
int3
push
mov
or
mov
cmp
jno
xchg
lds
repz
jg
stos
pop
push
lcall
dec
or
or
adc
lds
in
leave
sub
xlat
cld
fidivrs
adc
jge
in
inc
call
pop
ret
int3
push
dec
cld
nop
lcall
add
xchg
lock
xchg
outsb
jno
in
jecxz
stc
or
jmp
sbb
jb
mov
sub
ret
fs
test
lds
rorl
add
push
xchg
iret
lret
cli
icebp
and
dec
push
mov
xchg
push
orl
not
mov
sti
dec
int
dec
enter
or
push
sub
into
daa
movsl
mov
pop
jo
cmc
sbb
data16
lds
xor
push
jp
adc
sub
call
rol
cmpsl
fistps
cmp
imul
scas
rclb
movl
imul
push
fsubl
in
cli
je
xchg
and
mov
mov
mov
push
push
jmp
movsb
insb
inc
add
xchg
adc
leave
out
mov
inc
dec
dec
push
fldt
add
mov
popa
mov
sbb
leave
dec
xchg
std
hlt
push
push
push
mov
out
xchg
jg
xchg
jae
mov
imul
add
ja
jns
push
and
jmp
scas
mov
lods
shlb
add
insb
cmp
es
out
stos
nop
mov
insb
push
fidivrs
fcompl
gs
shlb
out
xchg
aaa
jae
inc
add
jns
out
test
add
pusha
icebp
adcl
fsts
mov
in
adc
aad
data16
sub
test
pop
add
push
jg
shl
mov
cmp
jno
inc
js
add
outsl
orl
inc
sbb
fistpll
jbe
add
notl
mov
out
xchg
sahf
mov
push
cmp
mov
push
pop
inc
jmp
sub
sub
inc
int3
sti
cmp
sub
xor
pushf
adc
dec
sub
aad
std
ss
push
subb
rcrb
rcll
mov
popa
jge
dec
fmuls
test
mov
cmp
inc
in
insl
xchg
inc
dec
inc
mov
shrb
mov
jmp
fisubl
mov
ljmp
mov
pop
movsb
bound
shlb
daa
cli
psrld
mov
sarb
mov
iret
aam
data16
sarl
movsl
mov
in
xor
mov
sbb
jne
mov
jecxz
scas
fsub
lods
jp
adc
sbb
int3
repnz
pop
mov
xor
cmp
inc
dec
adc
cmp
cltd
outsl
cmp
inc
jno
fadds
movsl
dec
adc
clc
lcall
xor
pop
fwait
pop
into
pop
mov
ret
jae
jl
push
mov
sahf
sub
fwait
mov
inc
loope
inc
cmp
sahf
dec
add
cmpsl
jmp
sbb
xor
nop
cmp
mov
dec
jno
subb
jae
xchg
jle
mov
iret
fisubrl
jae
xor
adc
mov
xchg
mov
sbb
or
or
orb
repz
cmp
mov
xchg
inc
add
loope
mov
pop
xchg
pop
adc
xor
mov
loopne
ja
fnstsw
orl
leave
adc
shr
ja
lods
inc
xchg
jge
cli
pop
xchg
iret
aaa
adc
or
inc
decl
and
xlat
aad
movsl
mov
add
adc
sbbb
inc
fdivr
jae
loopne
push
aad
iret
lods
sub
mov
std
pop
dec
dec
loope
adc
jae
fwait
lcall
xlat
sub
inc
cmp
mov
cmp
pop
lods
roll
cmp
subl
scas
dec
pop
out
inc
shr
or
pop
fldl
out
sbbb
rol
mov
bound
repz
cmp
dec
jmp
jmp
outsl
push
movsb
dec
xchg
add
push
push
push
fbld
inc
xor
push
jg
andl
fists
mov
sub
mov
xor
inc
push
pop
jp
sbbl
or
in
cli
sbb
mov
sub
fisubrs
mov
inc
push
mov
sti
loope
fidivl
sub
out
imul
bnd
adc
mov
jno
insb
es
insb
dec
cmc
stos
and
add
cltd
loopne
out
aam
out
cld
xchg
sub
loopne
int
mov
pop
and
sbb
mov
push
jge
repnz
pop
cmp
sbb
add
mov
xchg
dec
jp
aam
pop
hlt
pop
aas
fnstenv
sbbl
shlb
push
inc
jae
xor
adc
or
xor
fdivs
xor
cmp
push
test
mov
add
outsl
aaa
and
and
test
data16
xchg
add
pop
sub
lods
jl
loope
dec
popf
repz
dec
pop
cmp
fwait
rcrl
and
xor
xchg
gs
mov
adc
outsl
jge
movsl
lea
and
fsubr
mov
loope
or
or
test
mov
pop
push
push
adc
out
dec
fnsave
lods
movsl
leave
mov
pop
pop
in
ss
dec
xor
stos
loope
mov
push
mov
or
cmp
pop
dec
pop
mov
dec
nop
jno
adc
aas
icebp
popa
iret
mov
fbstp
mov
sbb
xchg
test
mov
dec
fadd
mov
push
push
mov
xchg
subb
xchg
call
int3
movsb
out
lds
mov
loopne
stos
sbbl
jno
insl
outsb
push
push
push
js,pn
lahf
push
movsb
or
or
ja
and
dec
xor
mov
int3
movsl
pop
aam
dec
cmpsl
shl
dec
push
sbb
adc
dec
scas
xlat
mov
inc
notl
xchg
sbb
dec
outsl
mov
inc
shrb
inc
xor
fwait
aam
cmp
out
or
mov
insb
add
xchg
sbb
sub
or
pop
imul
dec
xlat
popf
mov
jo
fwait
and
sbb
inc
fldcw
sub
cmpsl
xchg
scas
sarl
adc
adc
daa
and
iret
test
imul
jecxz
mov
xor
lcall
pushf
outsb
inc
push
scas
mov
push
rcl
jne
and
stc
mov
adc
pusha
dec
xchg
jne
pop
sub
sub
sub
outsl
rolb
hlt
imul
popa
xor
sub
sub
cmp
iret
or
adc
fmull
pusha
stos
add
xor
sbbl
je
or
dec
sub
lods
test
rclb
jnp
pop
adc
add
pop
push
loopne
mov
bound
sub
pop
adc
stc
mov
push
testl
loopne
add
icebp
leave
mov
xchg
aam
icebp
stos
cmp
icebp
pop
push
sahf
cmovne
dec
inc
push
mov
and
mov
push
dec
out
enter
js
fldcw
les
ret
jl
popa
xchg
roll
mov
cmp
cmc
sub
bound
lret
xchg
ret
call
jb
gs
in
pusha
add
jmp
shlb
add
pop
push
sub
mov
roll
and
ret
pop
clc
adc
rcrl
cwtl
mov
popf
mov
in
push
mov
in
in
mov
es
xor
test
jle
mov
jno
aas
fistpll
jge
mov
enter
mov
iret
pushf
out
xor
movl
ds
leave
xchg
and
stc
es
xchg
loopne
or
orl
out
stc
je
lret
jae
in
inc
adc
cmp
xchg
outsb
das
mov
jnp
push
aam
sbb
mov
fyl2x
lods
pusha
or
pop
repz
jae
mov
lods
aad
pop
in
mov
mov
dec
bound
push
xor
je
sub
in
jl
or
cltd
jbe
mov
loopne
cs
mov
arpl
pop
and
ret
push
ljmp
roll
sbb
and
mov
js
idivl
cmp
adc
rcrl
pop
in
dec
out
inc
dec
aas
jno
mov
sbb
lods
shl
repnz
movsl
sarb
fnstcw
hlt
inc
and
outsb
and
xor
fimuls
xor
dec
cmp
adc
adc
and
imul
leave
push
mov
jno
mov
mov
cltd
sub
adc
ja
dec
xlat
mov
jb
dec
jle
nop
repnz
aad
jns
pop
daa
mov
or
xor
adc
ror
mov
or
cmp
cmp
xchg
pop
and
test
insb
test
int
popa
je,pn
mov
push
xchg
push
add
inc
mov
test
mov
inc
fidivrl
enter
maxps
xor
inc
mov
lods
out
and
mov
das
insl
arpl
inc
cmp
add
push
bound
imul
aas
dec
pop
or
cmp
sbb
or
xchg
bound
mov
mov
sub
xchg
ret
stos
subl
and
xor
push
loop
inc
jb
data16
cmp
jne
xchg
xchg
call
stc
aad
push
call
mov
enter
add
sub
jge
push
mov
imul
pop
cs
xchg
addb
jecxz
loopne
je
pop
enter
mov
sbb
or
mov
aaa
idiv
test
in
xorl
jns
pop
xchg
xor
aam
insl
fildl
lret
popf
dec
xchg
imul
out
jns
idivl
mov
pop
push
repz
mov
popf
popf
jb
xor
adc
gs
ror
pop
aaa
add
adc
dec
push
cmpsl
incb
ret
shll
pusha
fcoms
adc
popf
mov
fcmovnu
inc
cld
xchg
and
outsl
mov
sub
cltd
push
xchg
add
frstor
pop
sbb
push
or
and
cmp
mov
xchg
cltd
mov
pop
out
mov
push
inc
xor
xchg
addr16
mov
dec
imul
ja
idivl
add
pop
ss
dec
mov
xor
and
stc
push
xor
in
push
gs
cwtl
and
in
xchg
cmpsl
inc
scas
xor
mov
fisttps
sbb
xchg
xor
jl
pop
or
cltd
inc
lods
adc
mov
and
add
es
mov
or
adc
adc
mov
sbb
addr16
call
sub
push
add
xchg
int
mov
mov
push
add
jge
enter
in
xor
ja
neg
pop
sub
jmp
insl
dec
cld
test
mov
roll
push
adc
mov
sbb
mov
cmpl
bound
bound
sbb
arpl
lock
mov
inc
ja
enter
push
adc
sbb
repnz
dec
stos
lods
test
and
xchg
jae
sti
stos
sbb
mov
cmp
sbb
push
aaa
push
or
int3
rolb
cmpsb
and
testl
cmp
bound
popf
xchg
mov
cmp
mov
and
mov
inc
jns
pop
xor
mov
sub
mov
jnp
ret
xchg
mov
std
cli
xchg
mov
call
mov
div
int
mov
jnp
aas
add
add
shll
mov
cmp
insl
int
cmp
je
dec
cs
sub
imulb
jo
adc
cmp
mov
add
cmp
mov
dec
xchg
xchg
lods
push
xchg
xor
cmp
push
idivb
pop
loope
sbb
inc
repz
jge
mov
add
pop
repz
outsl
mov
icebp
sbb
cli
cmp
outsl
xchg
push
and
rol
mov
cs
inc
cmp
loop
push
daa
push
mov
ja
adc
cmpsl
out
sahf
sub
icebp
jbe
sbb
aam
push
add
scas
mov
mov
jmp
cltd
mov
inc
or
xchg
jecxz
test
push
stos
mov
mov
xor
push
test
xor
cmc
mov
data16
pop
push
mov
add
xchg
mov
popf
pop
repnz
es
popf
xchg
jne
iret
or
inc
ret
mov
ja
sbb
mov
je
in
lds
dec
pop
nop
and
mov
push
stos
push
shll
pop
jp
call
arpl
jns
sub
push
jae
mov
dec
out
fmull
test
icebp
fidivrs
data16
insl
lods
adc
cs
mov
jg
cmp
imul
into
jge
jle
test
pop
jno
ljmp
and
pop
out
add
jp
les
pop
cmc
ficomps
mov
rcrb
test
aam
sbb
fsts
push
fmul
nop
mov
ljmp
cmpsl
lods
add
in
shlb
xchg
sub
leave
dec
or
mov
out
cwtl
push
testl
jmp
test
nop
movsb
and
lea
sbb
sub
mov
mov
adc
lods
test
ss
dec
jge
push
pop
inc
in
fnstcw
mov
into
and
out
cmp
sar
imul
xchg
xor
nop
mov
jno
fisubrl
sbb
push
ss
insb
fidivrs
subb
cli
daa
mov
sub
xchg
ret
adc
repz
arpl
add
lods
sti
jo
vpminub
push
cmpsl
mov
ret
jne
out
adc
fidivl
test
pop
ja
out
pop
push
pusha
mov
push
jae
out
jo
ds
push
mov
mov
pop
add
out
sarb
bswap
sbb
xor
jmp
jecxz
ss
sbb
ljmp
je
sub
aam
adc
or
nop
mov
pop
stos
inc
xor
cmpsb
popf
adc
repnz
addl
addr16
xor
xchg
pop
jne
sahf
lahf
push
sbb
jbe
adc
dec
sub
scas
addr16
cld
aas
sub
call
cmp
insb
mov
test
idiv
test
insl
pop
pop
ret
data16
shll
mov
jg
pop
xor
lahf
ds
jl
jb
jae
adc
xor
jne
and
movsl
xor
pop
xchg
push
xor
xchg
out
in
or
pushf
shlb
add
test
pop
cld
seta
cltd
add
lds
mov
mov
ret
aas
mov
mov
inc
aaa
nop
pop
sub
loop
rcll
and
cmpsb
mov
mov
sub
test
push
dec
cli
mov
push
adc
lods
mov
sbb
adc
jb
push
mov
xchg
fs
ds
hlt
sub
aas
cmpsb
sub
push
dec
pop
or
inc
mov
test
xor
or
mov
icebp
cs
shlb
ja
or
dec
outsb
fsubrs
dec
inc
pushf
outsb
pop
xchg
pushf
and
in
mov
adc
xchg
inc
xchg
mov
fstpt
dec
jbe
movsl
mov
dec
test
loope
sub
jae
jnp
push
int
js
mov
test
dec
or
push
adc
cmpsb
mov
sub
jp
mov
cmpsl
nop
lahf
aam
adc
pop
in
sbb
sbb
popf
cmc
lock
movsb
xor
mov
icebp
mov
andb
mov
fisubs
adc
in
sub
popl
movsl
mov
inc
xlat
mov
mov
cmp
ds
mov
pop
or
rcl
jg
out
sub
or
ficoml
jbe
ret
ja
insb
inc
mov
test
mov
add
fisttpll
cmp
cmpsb
push
mov
les
cmc
test
jp
mov
add
int
inc
dec
pop
aad
sub
cli
mov
jg
push
adc
clc
and
scas
ret
jns
je
cmp
int
adc
sbb
push
fldl2e
push
dec
out
movb
movsl
sarb
inc
xor
daa
lds
jb,pt
rcl
aam
xchg
call
mov
lea
xchg
jecxz
add
fstpt
dec
cmpsl
or
rcr
sahf
xchg
jns
push
insl
test
push
cli
pop
mov
fnstsw
clc
xor
daa
cmp
cltd
jmp
ds
in
mov
jmp
les
inc
lock
lret
inc
test
inc
test
jae
push
fstl
daa
sar
bound
cmp
xor
jb
mov
lahf
lcall
jmp
lret
ret
test
in
cmp
icebp
shl
sub
movsl
mov
or
enter
jl
push
jl
jne
jnp
or
mov
mov
ret
outsb
fdiv
push
add
xchg
pop
lds
inc
xor
fmul
lret
sub
mov
inc
mov
test
add
or
fwait
lock
imull
dec
cmp
xchg
frstor
aad
mov
and
movsb
lcall
sub
xor
sti
pop
int3
inc
mov
loopne
xor
push
and
lret
mov
jbe
out
popa
lods
mov
adc
and
mov
test
in
mov
mov
xchg
xchg
mov
js
das
stos
ficomps
push
hlt
mov
sub
fnsave
icebp
dec
and
js
xor
xor
stos
mov
sub
aam
lret
fcomps
fldenv
push
insb
inc
and
inc
idivl
repz
xchg
ja
lret
test
inc
jo
stos
push
mov
dec
pop
out
inc
arpl
stos
sbb
mov
fldenv
xchg
sahf
xchg
jo
cmp
les
cwtl
lahf
mov
ljmp
mov
rcrl
ret
cli
call
rcrb
mov
popf
roll
fs
js
or
mov
call
hlt
cmp
mov
aas
xchg
jo
loopne
sub
jge
mov
rcll
test
mov
push
adc
fildll
push
mov
nop
push
fs
movsl
cmp
out
xchg
pop
pop
rclb
xchg
andb
aam
repz
cmp
xchg
and
and
mov
orl
call
inc
xchg
adc
inc
sbb
in
arpl
push
jbe
mov
dec
cld
dec
mov
sbb
jbe
mov
repz
sbb
test
adc
sbb
cld
test
out
xor
adc
std
mov
mov
mov
outsb
icebp
fiadds
fdivrl
jmp
mov
out
lcall
fisttpl
std
jb
xchg
lret
cmp
mov
fsubr
lds
mov
inc
int
adc
jmp
inc
jmp
sub
lret
stos
mov
push
sub
push
out
push
cmp
jl
xchg
and
sbb
mov
jnp
or
ja
add
fdivrl
sbb
cmpsb
lret
repnz
cmp
movsb
aad
xor
mov
das
push
not
stos
inc
jmp
pop
fsubrl
sbb
and
loope
out
dec
mov
or
rorl
outsb
cmc
outsl
push
jb
pop
stc
lods
dec
xor
dec
mov
int
push
out
stos
leave
cli
fcomps
lods
mov
js
and
push
push
in
int3
sar
iret
popa
ljmp
dec
addl
add
cmp
xor
sbb
test
cmp
js
sub
or
test
cmpsl
mov
loop
nop
test
add
idivb
sbb
pushf
int3
add
fs
dec
fdivs
mov
add
test
xchg
mov
out
add
jle
cmp
iretw
cmpsb
xor
adc
xchg
addr16
outsb
inc
jecxz
cmp
call
cmpsl
and
or
lret
test
mov
cli
pop
rorl
and
loop
popf
xor
or
pop
ja
xchg
data16
pop
out
adc
in
lea
xchg
popa
adc
dec
push
cmp
pop
inc
adc
stos
ja
bound
aam
sbb
mov
les
or
xchg
movsl
xor
ja
mov
inc
adc
and
pop
clc
sbb
and
arpl
sbb
jo
xchg
pop
das
icebp
sbb
mov
lmsw
test
addr16
push
pop
and
inc
mov
sbb
mov
roll
adc
lock
arpl
mov
iret
sbb
jo
pcmpgtw
je
adc
pushf
jg
xor
mov
fsts
sti
push
enter
cwtl
andb
or
ret
or
sarb
nop
call
cmp
jmp
jecxz
push
jmp
sahf
sub
mov
stc
xor
ja
cmp
dec
es
inc
sbb
sti
push
aaa
jg
lods
test
imul
jns
pop
push
dec
scas
outsb
aas
out
out
sbb
pop
aas
rorb
push
cmp
sarb
add
add
lcall
test
cld
jbe
mov
ret
in
xchg
pop
sub
pop
lods
fldenv
pop
loope
dec
testb
loopne
jo
cwtl
call
bound
mov
fidivl
sub
cld
cwtl
sub
cmpsb
sub
repnz
outsl
leave
push
repz
popf
jp
fisubrl
xchg
xchg
mov
lock
into
adc
jg
adc
xchg
je
int
xor
ss
lea
xlat
dec
dec
dec
das
js
hlt
unpckhps
sbb
sub
stos
scas
int
mov
add
xor
mov
clc
mov
pop
dec
dec
outsl
loop,pt
xchg
movsl
mov
mov
push
push
or
fadds
shrl
rolb
jb
inc
mov
pusha
dec
dec
lea
clc
fwait
dec
je
pop
xor
mov
push
cltd
sbb
std
inc
stos
dec
cltd
jl
cmp
jae
xor
xor
push
and
sub
pop
fistps
fwait
pop
add
push
push
loop
mov
dec
pop
cmpsl
inc
push
xchg
ljmp
cmpsl
aas
stc
push
mov
out
addl
pushf
jo
or
mov
sub
or
lods
push
push
insb
jo
push
fwait
mov
cltd
mov
ss
inc
ja
outsl
and
push
js
jg
jne
inc
fstp
test
mov
orl
add
scas
mov
rcrl
adc
outsb
xlat
push
nop
ret
pusha
out
add
jp
flds
mov
movsb
cs
or
mov
shlb
imul
cmp
mov
xchg
adc
iret
pop
inc
movsb
add
subl
add
out
mov
pop
fwait
scas
sub
sti
mov
push
adc
rcll
pop
mov
fidivrs
js
outsl
pop
push
gs
inc
mov
lea
dec
jne
inc
mov
pop
xor
fistl
adc
popa
mov
or
mov
mov
aam
lcall
cli
mov
out
dec
mov
into
pop
push
in
mov
push
xchg
sbb
mov
addr16
inc
call
pop
dec
jmp
cwtl
mov
ds
mov
add
add
nop
adc
cmpsb
popf
jge
xchg
mov
jle,pt
popa
sarl
mov
lock
adc
scas
pop
clc
mov
lods
push
test
jbe
dec
rcll
adc
test
movsl
addl
out
mov
jg
inc
push
cmovnp
clc
mov
jl
and
loope
fdivrs
jae
jge
outsb
or
sbb
popf
sub
xor
pop
jbe
mov
xchg
jnp
mov
mov
adc
jbe
xor
in
ret
xlat
sti
bnd
insl
repz
adc
add
xlat
popa
flds
popf
sahf
fisttps
cmp
xor
push
cwtl
cmp
dec
std
push
repz
pop
mov
scas
addr16
loope
les
and
enter
sti
mov
mov
adc
cmp
call
or
ja
xor
jl
stos
fidivl
pusha
pop
ret
dec
cmc
xor
sbbb
jecxz
sarb
or
idiv
dec
rorl
push
xchg
sub
cmpsl
dec
addr16
lcall
push
pop
pop
hlt
cmp
insl
adc
mov
sbb
pop
push
outsb
xchg
mov
dec
stc
xchg
or
cwtl
lock
and
test
xlat
xor
xor
or
rorl
imul
and
add
scas
mov
sub
subb
popa
and
stos
mov
mov
das
xor
lock
nop
cmp
fs
les
xlat
insb
cmpsb
adc
lds
xchg
pop
push
jae
arpl
mov
lods
jno
jle
out
pop
movsl
mov
sti
andl
imul
lret
mov
sahf
mov
lret
mov
dec
lods
dec
adc
loope,pt
stc
bound
push
aaa
aaa
xchg
push
push
sbb
mov
mov
adc
mov
xchg
stc
jl
icebp
push
jns
xlat
sub
xor
int
mov
mull
adc
sub
test
mov
sub
mov
dec
pusha
mov
lods
dec
xchg
push
sub
xchg
test
daa
das
inc
inc
or
icebp
sbb
mov
xor
dec
push
dec
ss
mov
mov
or
dec
xor
fadds
aaa
mov
xchg
stos
and
loope
cmp
mov
cmpsl
clc
pop
int
das
popa
outsl
lcall
fs
mov
pop
cmovbe
cld
je
outsl
das
fidivrl
in
pop
inc
push
popa
pop
dec
sahf
je
inc
scas
mov
daa
xor
inc
jp
mov
add
les
inc
jg
outsl
mov
dec
insl
sbb
dec
mov
pop
movb
cmpsl
mov
and
add
and
mov
and
insb
fadd
cwtl
lods
das
shll
xchg
in
scas
mov
and
push
xchg
push
rolb
jmp
xlat
xchg
cwtl
lcall
js
int
mov
mov
std
mov
add
xchg
repz
test
inc
into
in
lahf
adc
sub
stos
popa
cmp
xor
sub
mov
dec
push
insl
xchg
sbb
sbb
mov
inc
in
movsl
dec
cmp
xchg
push
inc
mov
inc
aas
pop
fcom
mov
ret
dec
cwtl
jae
mov
in
gs
popf
cmc
xlat
pop
mov
je
lods
loope
push
lods
sahf
and
frstor
aaa
test
addw
lods
out
outsb
cmp
xchg
dec
sbb
jae
pushf
mov
mov
mov
and
mov
fdivrl
sbb
rcr
lea
mov
jecxz
jl
loope
andb
or
dec
push
fwait
pop
dec
les
sbb
jns
xchg
out
not
mov
scas
adc
sub
add
cmp
movsb
cmp
into
outsl
in
add
push
aaa
mov
dec
jp
mov
mov
addl
mov
push
mov
repz
out
jle
aad
xchg
xchg
or
addr16
push
xor
sbb
jle
jle
xchg
dec
or
push
shrb
lds
push
hlt
mov
adcb
mov
push
sti
movsl
and
mov
jo
add
xor
lea
imul
cmpsb
cld
aas
aaa
adc
mov
cmpsl
mov
flds
and
pop
shlb
cmpsb
aam
insl
cli
fnstcw
js
inc
negl
sub
pop
sarb
fdivl
insl
xorb
int
mov
jno
inc
and
shl
out
inc
stc
jp
or
xor
fdivrl
test
sahf
dec
sar
sbb
push
jbe
push
push
mov
mov
cmp
adc
mov
or
rol
ret
gs
add
cmc
jmp
xlat
icebp
dec
inc
jge
xlat
and
inc
xchg
mov
mov
add
sub
sub
repnz
insb
inc
movsl
jl
jae
mov
test
movl
mov
xchg
sbb
jne
pushf
cmp
mov
pop
mov
push
xor
jmp
xchg
push
xlat
mov
mov
ljmp
in
aas
shlb
or
mov
push
pop
idiv
push
movl
std
add
insl
sub
mov
pusha
or
clc
ss
inc
sub
shll
mov
fcoms
jp
xchg
ljmp
sbb
and
sub
insl
in
sarl
outsl
jl
cmpsl
sub
daa
lret
and
addr16
jp
mov
jb
ljmp
pop
fimuls
push
dec
or
cltd
xlat
push
icebp
cmc
jne
xchg
xchg
loopne
dec
sahf
mov
mov
mov
mov
cs
imul
and
aad
mov
movb
mov
cld
jns
jl
orb
andl
adcb
arpl
dec
mov
shlb
fwait
jp
fsts
aad
mov
setnp
call
aad
cld
xchg
xchg
xor
fistl
test
leave
adc
das
loopne
cmp
mov
mov
fnstcw
pop
leave
pop
xor
xor
push
lock
mov
loopne
jb
or
and
stos
insl
sbb
fdivs
mov
xor
and
add
cmp
test
adc
imul
lcall
enter
ja
push
dec
jle
lcall
aas
fdivrl
pop
lods
mov
pop
xchg
mov
and
pop
sbb
mov
sub
rcr
jp
add
mov
ss
jecxz
adc
ret
lahf
int
aas
mov
rorl
dec
stos
adc
xchg
sti
popf
in
xchg
pop
xor
jns
add
lret
sub
out
outsb
aam
jle
dec
out
push
aad
adc
roll
out
inc
out
adc
cmpsl
xchg
jmp
inc
cmp
scas
fs
cmpb
sbb
mov
sub
push
lret
mov
test
sub
mov
call
add
push
mov
push
aaa
repz
jmp
aas
outsb
mov
shll
sub
mov
cmpb
cmpb
ss
in
gs
into
loop
xchg
push
sub
fs
icebp
scas
out
repnz
sub
ss
andb
loope
aas
mov
icebp
mov
push
decl
cmpsl
test
mov
out
mov
jg
insl
xchg
cmp
imul
lea
cmp
or
or
std
dec
dec
lds
stos
mov
xorl
movsb
push
aas
pop
pop
cmpb
jmp
mov
cmp
pushf
pop
xor
mov
mov
mov
jae
push
arpl
jl
fisttpll
jmp
loopne
sub
insb
lea
in
mov
dec
inc
dec
cmp
cs
movsl
adc
imul
pop
jno
mov
pop
push
jne
fsubr
push
mov
lods
icebp
sub
jg
push
movsl
repnz
in
mov
inc
imul
jmp
sbb
inc
pop
lds
push
add
dec
mov
xor
push
add
adc
or
insb
rclb
mov
xchg
push
xor
loopne
outsl
inc
pop
roll
push
sbb
cmp
push
in
push
dec
shll
hlt
xor
fcoml
cltd
xchg
push
mov
mov
aad
insb
adcl
xchg
repz
mov
xor
dec
es
std
ret
in
add
inc
fcom
sbb
push
inc
cwtl
popa
mov
xchg
sub
fbstp
jbe
mov
adc
add
jmp
cmp
movsb
jae
jmp
popf
xor
inc
xchg
insb
shlb
xchg
imul
sbb
cmc
mov
push
adc
iret
sub
ret
xchg
in
shll
out
cmp
push
in
lock
test
adc
jno
mov
pop
jns
and
or
inc
xchg
push
fcoms
pushf
add
mov
jne
dec
mov
push
inc
push
arpl
cmp
movsl
or
les
pop
outsl
pop
dec
outsl
lds
push
sbb
push
je
cltd
and
cmpsb
cmpsl
in
pop
aam
jns
jnp
cmc
std
loop
hlt
jbe
repz
fldenv
sbb
outsb
dec
dec
jb
cli
and
mov
in
push
stc
jae
push
repnz
jb
mov
sti
lahf
ljmp
scas
sbb
pop
push
or
xor
test
jecxz
mov
dec
pop
fcmovne
dec
out
ret
add
fwait
add
or
popa
inc
sar
cmp
mov
fs
cli
popa
out
dec
push
testl
mov
pop
or
js
cmp
xchg
shl
pop
pop
xor
add
in
pop
rolb
fwait
sub
fcompl
push
fnstenv
inc
cltd
pop
aam
movsl
stos
decb
pop
es
in
out
into
andb
insb
mov
push
xorb
jns
scas
mov
jae
lea
call
out
jge
push
push
dec
in
stos
pushf
andl
fwait
data16
jmp
and
sbb
inc
cmp
xchg
jo
mov
pop
icebp
jne
fmull
outsb
pop
sub
shll
push
sbb
or
jno
adc
test
mov
push
imul
cmpsb
aad
lret
jno
and
add
shr
dec
add
xor
cmpsl
fisubrs
popf
fldl
add
pop
in
and
aam
dec
out
daa
hlt
mov
mov
jle
adc
adc
pop
shll
nop
cwtl
xchg
sbb
pop
rclb
arpl
movsb
jnp
loopne
int3
dec
nop
sarl
mov
mov
push
lods
sub
sti
inc
fdivrs
ss
adc
push
sbbb
jno
lock
aaa
push
push
and
out
cmpsl
dec
clc
cltd
pop
mov
jnp
pop
mov
jp
cmp
push
sub
scas
and
mov
ficomps
xor
lock
enter
divl
shll
add
pop
mov
es
mov
insl
or
aam
lret
and
repz
inc
and
std
and
out
sub
cmp
push
sbb
dec
xchg
xchg
rcrb
push
call
pop
je
mov
jmp
js
sub
or
mov
ljmp
mov
pop
sub
repnz
or
gs
push
mov
jge
insl
cmp
pop
push
lds
pop
ljmp
into
call
inc
adc
stc
test
xchg
test
aad
mov
out
in
lods
xchg
cld
cld
pop
xchg
insl
jb
adc
das
sbb
out
sarl
fisubl
xchg
popf
and
loop
popf
mov
divl
mov
mov
cmp
roll
cmp
and
mov
xchg
in
arpl
sahf
sbb
test
jnp
fisubrl
add
add
out
xchg
dec
rol
clc
jecxz
push
add
cmp
sub
jle
xor
adc
and
and
mov
push
push
sbb
jnp
jo
lahf
xor
xor
mov
and
jmp
call
pushf
mov
mov
loope
sub
jl
ret
push
push
test
sub
jnp
push
filds
mov
adcb
pop
adcl
sbb
dec
fld
fistpll
pop
sub
dec
dec
push
scas
sbb
lods
mov
iret
popf
add
xor
loopne
inc
imul
cli
cmp
push
lods
mov
bound
mov
and
dec
jle
or
movsb
add
sbb
inc
mov
dec
call
roll
inc
mov
sbb
jbe
pop
sub
dec
fsts
cmp
and
enter
inc
negb
xor
js
ja
aaa
movsl
pop
mov
popf
ljmp
fstpt
xor
mov
jp
mov
sarl
xlat
or
mov
outsb
jnp
push
jp
fcompl
fwait
inc
addr16
rorl
popa
push
out
pop
adc
test
aad
loopne
add
pop
cld
mov
mov
lock
jecxz
fdivr
or
mov
movsb
add
mov
push
sarb
mov
out
cmpb
loopne
bound
or
xchg
xor
xor
mov
sub
xor
jp
mov
pop
addr16
dec
in
popf
aas
xchg
adc
popa
or
mov
xchg
or
cmp
lret
gs
sbb
sbb
xchg
in
xor
in
fmull
leave
pop
push
ljmp
loopne
test
and
call
or
les
xchg
inc
push
mov
jae
mov
cmp
movl
pop
pop
jns
cltd
mov
sti
lea
cmpsb
jnp
xchg
out
and
pop
inc
pop
or
mov
ss
xorb
cwtl
push
adc
les
mov
xchg
out
inc
add
sbb
mov
push
jne
mov
roll
loope
out
imul
or
inc
xchg
andb
sbb
push
incb
mov
mov
adc
ja
xchg
int
flds
outsb
pop
repz
adc
ljmp
or
pop
and
push
in
mov
jo
sbb
push
jecxz
repz
inc
addr16
xchg
test
bound
add
and
arpl
jle
push
fcoms
das
es
pop
repnz
enter
mov
sub
dec
ds
dec
into
rcr
sbb
xchg
fwait
jp
cmp
lds
js
out
ja,pn
in
jne
pop
sbb
sahf
imul
add
loop
xlat
cmc
pop
test
or
fwait
inc
out
xchg
addb
outsl
into
jmp
stos
int3
leave
stc
mov
call
inc
jg
fs
adc
add
lcall
or
inc
les
ja
ja
mov
adc
and
xor
scas
cmc
stos
sub
mov
shll
xchg
pop
adc
dec
add
mov
lods
push
pop
push
mov
stos
mov
shll
outsb
pop
xchg
push
in
outsb
jecxz
aaa
cmp
ljmp
jl
xchg
leave
cltd
mov
loopne
loop
std
mov
adc
or
mov
mov
and
movsl
je
sub
test
pop
xor
std
cmpl
jge
aam
mov
rorb
shlb
sbb
popf
out
imul
pushf
clc
mov
into
adc
stos
ret
mov
cmp
mov
xchg
repnz
sub
cmp
movsb
or
icebp
push
adc
mov
push
in
or
xor
pop
icebp
call
xor
jae
inc
xchg
xlat
adc
push
fldcw
sbb
rclb
push
add
inc
fimull
jbe
xchg
inc
fwait
pop
xchg
jb
lock
popf
movsl
xor
and
jne
scas
popf
mov
dec
sbb
in
or
cld
inc
pop
addl
iret
cmc
imul
cmp
daa
lods
pop
jo
or
imul
pop
sub
outsl
dec
xchg
leave
mov
nop
sbb
popf
fnstsw
sub
and
or
movsb
push
enter
xchg
add
gs
leave
xchg
dec
sti
fucomi
xor
sub
insb
fdivl
inc
test
pop
mov
hlt
fcompl
add
push
movsl
sub
lods
stos
and
pop
shrl
dec
adc
push
mov
jge
hlt
mov
mov
fdivl
fucomp
pop
adc
cmp
cmp
push
or
sbb
cmpsb
sbb
dec
sub
sti
sub
sbb
push
sub
mov
movsl
lret
xchg
test
push
lcall
jmp
or
or
jnp
push
pop
mov
mov
inc
mov
inc
sub
push
lock
loope
xchg
ja
lret
fisubrs
add
xlat
adc
inc
icebp
nop
sub
fisttpll
adc
and
mov
cmc
cli
data16
mov
sbb
push
mov
cld
mull
dec
pop
call
stos
lods
lret
rclb
fadds
add
out
mov
in
xchg
push
scas
lcall
mov
fildll
sbb
inc
test
push
flds
adcb
mov
xor
jle
mov
rcrl
pop
in
loopne
sub
jno
sbb
fstpt
xor
orb
sbb
into
jmp
fs
jb
jle
in
cld
dec
roll
xor
sbb
popf
add
ret
int
xchg
adc
int3
inc
mov
cmpl
mov
and
mov
mov
aaa
mov
idiv
aam
adc
xor
cmpb
push
xchg
xchg
fisubl
hlt
jne
loope
jp
or
and
mov
adcb
test
pop
sbb
sbb
push
icebp
dec
frstor
push
neg
fs
aaa
jns
fwait
js
xchg
out
test
mov
xchg
ds
add
cmpsb
xchg
aad
iret
or
xor
test
outsb
ficoms
mov
mov
lret
add
lahf
mov
neg
sub
or
repz
adcb
jno
fldcw
cwtl
mov
les
pop
clc
scas
mov
rdmsr
sbb
xor
xor
mov
outsb
rclb
add
inc
shlb
sarl
cmpsl
or
test
inc
loopne
loope
mov
movsb
pop
in
gs
xchg
popa
pusha
cmpsb
mov
push
push
push
sbb
sub
inc
divb
cmpsb
in
sub
jbe
arpl
mov
shll
add
in
sbb
or
hlt
sub
pop
mov
mov
jmp
or
in
mov
cmp
sbb
push
fsts
mov
daa
mov
arpl
mov
mov
lret
and
bound
pop
repnz
jl
fimull
out
cmpsb
pop
jmp
cwtl
mov
mov
hlt
scas
test
mov
mov
stc
pop
mov
inc
out
popf
fs
pushf
and
lea
mov
add
lahf
insl
aas
xchg
or
std
aas
cmp
repz
mov
inc
or
jne
mov
mov
popa
adc
mov
push
dec
sbb
mov
ret
lods
jns
jmp
mov
jl
ret
push
cmp
mov
or
les
mov
add
adc
adc
cs
pop
bound
out
shlb
stc
adc
fnsave
or
cmp
stc
inc
cld
and
imul
mov
xchg
repnz
and
push
insb
mov
mov
arpl
jmp
mov
mov
andl
enter
add
das
xchg
inc
cmp
std
rorl
sbb
mov
insl
xorl
xor
aaa
outsl
fwait
outsb
je
lret
jmp
add
dec
jnp
dec
jl
sub
mov
mov
mov
mov
lock
xor
int3
pusha
jnp
ljmp
cmp
fwait
rol
fsubrl
inc
sub
mov
shrl
xor
icebp
imul
xor
fwait
or
push
insb
jge
in
cmp
test
xchg
adc
add
test
cmp
pop
push
push
repnz
sub
inc
cli
or
push
mov
out
inc
jne
push
repz
jecxz
and
test
or
ret
test
pop
shl
mov
push
and
push
push
push
dec
push
and
dec
xchg
fwait
and
int3
add
push
test
push
push
add
lret
or
cli
cmp
dec
cwtl
pop
xor
pop
and
dec
mov
mul
add
pusha
and
push
enter
mov
and
arpl
jo
lret
jno,pn
push
shlb
sbb
enter
in
sbb
idiv
iret
pop
mov
fidivs
inc
sbb
mov
ficoml
aam
mov
cmp
cli
out
loopne
repz
test
str
and
jl
push
sbb
xchg
fs
cmp
xchg
fwait
xor
cmp
into
jo
aam
daa
push
ficomps
xor
xor
cmc
aam
out
fwait
xchg
inc
sarl
inc
iret
xor
inc
cmp
xlat
xchg
xchg
pop
adc
mov
pusha
mov
sbb
mov
mov
push
xchg
jae
pop
inc
ret
out
inc
clc
jecxz,pn
inc
stos
popf
xor
jp
das
mov
pop
pop
test
outsb
jl
sub
outsb
sub
jle
mov
or
aas
sub
ja
inc
les
jbe
mov
clc
test
dec
lods
rclb
xor
adc
inc
cltd
cld
xlat
sbb
mov
cmp
pop
icebp
outsb
fs
and
xchg
dec
jle
xchg
nop
add
enter
rorl
stos
mov
clc
sbb
push
inc
jbe
adcb
inc
mov
pop
push
mov
add
xchg
jno
fsubrp
cmp
in
roll
mov
vpsubusw
ror
addr16
dec
je
add
mov
shrl
lahf
inc
push
sbb
outsb
ret
fsts
xor
mov
jb
dec
push
sub
les
sub
shll
add
cmpsb
pop
idiv
sbb
sbb
xor
sbb
int3
movsl
mov
les
cmp
sub
scas
pushf
push
outsl
jo
int3
insl
imul
xchg
xor
stos
das
cmpl
les
xchg
repnz
mov
mov
iret
cwtl
jg
stc
jns
add
and
jmp
ss
mov
pop
stc
aam
cmp
dec
adc
and
sbb
lcall
jo
jo
inc
jno
add
or
dec
jo
sahf
lret
fildl
or
mov
les
pop
loop
rcrb
lret
sar
jl
movsb
xchg
shrb
and
cld
inc
cmp
fisttpll
das
sbb
out
cmp
inc
cmpsb
aam
es
arpl
sti
addr16
jns
insb
jl
jno
scas
gs
add
mov
in
out
and
dec
xor
cs
stc
imul
imul
test
imul
xchg
xchg
movsl
scas
sub
adc
sbb
scas
mov
sub
push
aam
test
sbb
jno
insl
fcompl
aaa
add
mov
or
lcall
mov
cmp
jp
and
fisubs
ficompl
mov
adc
sbb
insb
inc
imul
pop
mov
inc
xchg
out
loope
lock
mov
aad
adc
hlt
iret
jl
out
mov
icebp
cli
xchg
je
push
fwait
dec
addr16
sbb
ds
into
cli
cmpl
adc
call
cli
xchg
jbe,pt
lock
sti
add
sub
mov
add
xorb
jnp
xlat
fistpll
stos
fldenv
inc
sub
dec
mov
or
dec
dec
dec
and
xlat
adc
cwtl
xchg
inc
mov
lahf
mov
out
jns
testl
les
jno
mov
or
push
mov
cmp
cmp
lods
lcall
cltd
mov
loope
ret
mov
inc
movsl
out
xchg
arpl
sbb
enter
pop
cmc
loope
and
dec
test
push
insl
test
jno
mov
aaa
enter
cmpsl
push
mov
add
leave
rorl
lock
testb
out
ret
les
test
push
std
pop
in
pop
mov
push
jmp
mov
mov
imul
jmp
in
sbbl
lods
add
outsl
push
dec
shr
mov
jbe
daa
jne
bound
jo
xchg
pushf
sahf
js
loopne
adc
insb
test
lret
cmc
mov
push
inc
sti
int
lea
dec
out
clc
lahf
in
leave
cmpsb
mov
push
and
jno
andb
jp
dec
dec
xor
mov
stos
inc
int
cwtl
shlb
pop
jp
popa
lods
aad
and
push
enter
fs
repz
push
lea
inc
mov
loopne
mov
inc
in
pop
pop
or
in
jo
into
and
dec
mov
lock
gs
hlt
pop
or
inc
push
inc
repnz
mov
fsubrs
cmpsl
mov
and
mov
das
or
ret
je
nop
ret
inc
and
insb
xor
outsb
jae
or
push
mov
nop
aaa
in
out
ljmp
sahf
into
icebp
cli
sti
inc
sbb
jp
lahf
ficoms
xor
mov
lcall
stos
mov
call
insb
gs
pop
add
pop
xorb
out
sbb
xchg
loopne
xor
lods
push
pusha
movsl
mov
jno
push
int3
hlt
pop
mov
xchg
fwait
negl
mov
into
push
rcrb
jae
sar
add
stos
jmp
dec
mov
js,pt
ret
cmpb
jbe
iret
out
in
ja
arpl
js
xchg
adc
sbb
stos
mov
pushf
loopne
repz
or
ret
mov
jne
and
sbb
hlt
jmp
outsb
mov
icebp
test
call
movsb
sbb
bound
push
mov
mov
xchg
jmp
insb
jmp
fcompl
dec
sub
int
pop
dec
mov
cmp
dec
lcall
cs
cmp
sub
nop
sub
out
mov
push
shll
cld
dec
xor
add
ljmp
jmp
or
mov
inc
adc
clc
movsb
jecxz
dec
jmp
mov
imul
mov
nop
ljmp
xchg
repz
xor
lds
push
jmp
cltd
aam
lea
icebp
pop
and
insl
sbb
push
repnz
xorl
es
inc
mov
test
mov
ret
imul
push
inc
incl
outsb
fldt
jo
push
call
cld
cwtl
inc
ret
cmp
sbb
shrl
cmc
dec
fstpl
dec
test
add
int3
sahf
and
int3
stc
mov
jns
xor
out
arpl
shlb
add
iret
rcll
and
xor
ret
pop
fiaddl
pusha
jne
xchg
scas
push
pop
idivb
lods
push
push
repnz
push
push
test
fildl
pop
nop
inc
cmp
loopne
jno
fmulp
jnp
jg
lcall
sub
int3
sarb
insl
adc
scas
fadd
sub
dec
clc
or
mov
out
iret
gs
and
mov
outsl
push
std
push
add
pop
adc
mov
dec
sub
push
sbb
out
lret
and
int
js
dec
sub
fstp
stos
fstpl
cmpb
push
mov
cli
shlb
add
popf
pop
xchg
pop
mov
cmpsl
pop
out
test
jecxz
lods
std
arpl
and
and
sub
cwtl
outsb
imul
jne
ds
les
and
insl
je
sbb
les
jb
add
xchg
or
lea
xchg
xor
jo
add
pop
das
popf
cmc
jo
popa
mov
pop
and
mov
call
ret
add
scas
hlt
pop
mov
and
and
adc
jmp
call
rorb
leave
aam
mov
xor
xorb
out
lods
adc
or
stc
notl
cmp
or
fs
mov
jp
dec
insb
scas
icebp
mov
inc
inc
add
adc
in
push
lods
xor
pop
dec
adc
mov
xchg
sub
lods
mov
out
out
lret
iret
mull
fimuls
orb
mov
cmp
adc
fmuls
ja
cmp
inc
add
out
movb
fisubrl
sub
dec
pop
sub
sar
or
daa
sub
js
add
and
call
adc
cmpsl
setp
jns
adc
xchg
dec
fnsave
xchg
mov
mov
sbb
xchg
or
loop
push
repnz
push
call
hlt
sub
pushf
ret
jns
mov
push
cld
pop
inc
adc
lods
jl
stc
jno
adc
push
inc
pop
or
call
cltd
leave
push
jns
cmp
mov
adc
xor
inc
test
and
ja
mulb
lcall
fcoms
xor
push
arpl
jno
lret
ljmp
push
ss
decb
mov
in
push
mov
sbb
iret
adc
pop
pop
xchg
adcl
lods
mov
add
xchg
xchg
pop
sbb
push
insb
xchg
loopne
dec
adc
lods
add
std
dec
push
push
sub
pop
stc
jg
mov
cs
iret
repnz
test
sub
and
mov
imul
rcrl
int
xor
addr16
das
cmp
jmp
ja
jae
pop
mov
dec
pop
cmp
mov
sbb
daa
cmp
jbe
ret
add
cs
mov
dec
aaa
push
mov
sub
loop
ror
test
dec
xchg
imul
stos
push
mov
add
pop
pop
xor
insb
mov
mov
add
ficoms
adc
sbb
cld
sarl
movsl
jle
mov
bound
xchg
push
fwait
mov
fsubrs
pop
int3
cmpl
mov
mov
xor
inc
push
and
in
and
and
int
repz
cld
ds
mov
cmp
push
repnz
mov
or
adc
dec
xlat
mov
cld
mov
and
rolb
ret
inc
xchg
mov
std
push
scas
adc
sbb
stos
fisubs
or
adc
shrb
lahf
mov
arpl
cs
lret
push
or
and
xchg
data16
add
sub
js
addl
sahf
mov
or
sub
out
inc
in
adc
pop
mov
xor
js
dec
lret
rorl
mov
pop
test
xchg
cmp
sub
mov
or
imul
push
imul
ds
mov
loope
push
lods
push
iret
lret
mov
mov
push
ja
stc
jmp
pusha
decl
ljmp
cltd
adcl
es
push
lods
jge
or
cltd
je
scas
rorl
push
fcmovnbe
sub
xor
push
sbbb
pop
sbb
shlb
in
dec
sahf
mov
addr16
inc
cmp
pop
call
xchg
bsr
adc
dec
sti
xchg
repnz
push
orl
popf
lret
adc
push
addr16
xor
in
fcmovne
push
cli
aaa
out
nop
outsb
popf
mov
sbb
push
aas
imul
clc
xchg
cli
push
movsb
mov
int
ljmp
or
xchg
cmp
inc
adc
xchg
xchg
enter
aas
pushf
js
mov
repz
fxch
stc
sbb
lret
xchg
insb
cli
xchg
push
gs
movsb
scas
in
mov
call
mov
subb
dec
fisttps
mov
adc
push
adc
imul
xor
je
pop
rsqrtps
idivb
jp
insb
shr
jge,pn
loop,pn
or
push
and
lds
fadds
push
adc
jne
fdivrs
pop
outsb
fdiv
mov
jnp
mov
xchg
mov
inc
dec
cmc
stos
xchg
andb
xchg
idivb
cmp
repz
or
xor
sbb
push
test
decl
movsb
cmp
and
test
out
ret
xor
enter
out
add
sub
rcrb
mov
cmp
or
int
inc
arpl
mov
xor
insl
sub
outsl
inc
adc
pusha
scas
push
xchg
lods
jp
sbb
scas
ret
aam
xor
or
fstpt
aad
dec
sbb
cmpsb
outsb
pop
jnp
fldl
out
or
dec
xchg
outsl
pop
jb
jge
add
fldt
xor
sbb
inc
push
test
xchg
push
or
xchg
mov
jl
fcmovb
dec
dec
lock
mov
repnz
mov
lock
xor
cmpsl
xchg
call
dec
pop
stc
adc
mov
outsb
mov
mov
inc
and
cmc
mov
cmpsb
push
ret
and
pop
test
outsl
sarb
mov
cltd
out
push
ja
fadd
scas
xchg
cmp
aad
cld
xor
mov
add
imul
test
push
jb
movsl
xor
or
cld
add
je
lea
fwait
mov
jge
repz
dec
mov
shll
js
xchg
xchg
bnd
stos
sbb
xor
jno
mov
inc
ljmp
sbb
xlat
jl
rclb
stos
mov
jmp
or
movsb
jmp
add
xorl
xor
sbb
in
lret
pop
push
and
or
pop
push
add
das
jg
cmp
xchg
into
adc
mov
sub
stc
outsl
in
inc
aas
js
in
mov
lds
hlt
push
or
or
and
mov
js
push
ja
jbe
add
mov
dec
pop
cmp
sub
outsb
aas
mov
imul
fisubs
gs
test
add
shrl
scas
fldt
mov
xor
jp
inc
aas
pop
test
or
lea
push
cs
data16
fildll
movsb
and
jge
jle
pop
xor
cmp
mov
and
or
pop
or
adc
jp
in
pop
mov
jae
aad
push
dec
xchg
les
mov
xchg
pop
xchg
js
popf
shll
push
loopne
call
test
jmp
jl
push
cwtl
xor
jbe
jp
shrb
mov
std
enter
bsf
xor
rorl
add
dec
push
rep
into
out
lret
das
and
xchg
inc
scas
sbb
movsl
lcall
cmpsl
int3
mov
adc
jmp
inc
dec
lahf
enter
xchg
repnz
xor
jb
or
pop
sbb
aam
test
insl
mov
test
xor
jnp
jno
pop
push
movsl
push
inc
xchg
sbb
dec
add
or
mov
ja
ret
jns
or
lcall
idivb
pop
dec
cwtl
js
cmc
mov
cs
mov
and
mov
mov
jmp
add
lret
pop
add
xchg
sub
jnp
lcall
shl
in
popf
das
jae
jno
arpl
mov
mov
pusha
iret
aaa
outsb
dec
sub
in
popf
cmpb
mov
js
push
and
sahf
dec
stc
insb
and
pop
and
movsb
mov
add
push
cli
stos
adc
mov
ret
mov
outsl
shll
push
mov
les
rorb
arpl
out
mov
sbb
fst
cmpsb
mov
xor
orl
mov
jno
repz
jp
pop
dec
out
fnstenv
xchg
lahf
xchg
lea
add
xor
dec
sbb
xor
xchg
pop
adc
or
cmp
out
adc
lds
sarb
cmp
imul
lcall
mov
cmp
add
dec
lea
mov
pop
mov
mov
mov
daa
cwtl
push
imul
mov
imul
mov
clc
jno
rcrb
test
add
push
sbb
pop
jns
or
dec
enter
sbbb
pop
xchg
aam
lret
shll
adc
cs
mov
jge
outsl
bound
stos
fwait
imul
lret
xor
adc
fwait
sub
mov
hlt
inc
dec
sahf
fmull
shl
adc
enter
jae
mov
xor
or
fcomps
push
lods
dec
xchg
mov
mov
pop
les
jmp
kmovw
jle
js
mov
cmp
sub
lahf
jae
add
inc
cmpb
scas
mov
pop
cmp
adc
pop
inc
add
clc
xor
cmp
insl
jp,pn
dec
js
mov
inc
mov
pop
push
xchg
push
mov
mov
fld1
shrb
fwait
or
adc
xchg
shrb
popf
xchg
push
pop
jg
enter
pop
xorb
mov
nop
pusha
xchg
mull
push
add
pop
mov
or
test
dec
xor
mov
xchg
loopne
mov
jne
cmp
fcomi
push
and
jg
or
pushf
fildl
jl
outsb
and
dec
or
cltd
test
sbb
xchg
adc
enter
enter
cmpsl
push
cmp
or
ret
into
or
adc
or
add
push
in
ror
int
mov
sbb
in
popa
cmpsb
hlt
xchg
mov
aad
inc
hlt
or
mov
sub
fdivs
lods
loop
sahf
cmp
loope
out
dec
adc
bound
testb
sbb
push
shlb
cmp
mov
stos
pop
out
mov
test
inc
rorb
xchg
mov
dec
mov
orb
push
cmpsl
test
hlt
jecxz
jmp
xchg
repz
push
lods
leave
and
mov
outsb
mov
mov
jbe
inc
sahf
mov
mov
jae
popa
adc
es
fbstp
sub
sahf
rcl
or
jecxz
mov
cmpsb
jnp
pop
or
cmp
mov
nop
jns
out
or
icebp
testb
scas
push
outsl
or
ret
popf
inc
push
inc
add
arpl
cmp
mov
mov
cwtl
push
ret
lahf
xchg
les
dec
xchg
inc
movsb
sbb
mov
jb
mov
mov
push
or
add
fs
call
pinsrw
insl
mov
out
mov
xchg
push
mov
popf
inc
add
cwtl
jle
mov
adcl
daa
dec
mov
std
lcall
repz
jo
and
xlat
pop
mov
pop
mov
pop
out
subb
or
sub
ljmp
lahf
mov
xchg
dec
popf
fbstp
imulb
sti
pop
cmp
push
pop
pop
xor
pop
adc
loop
fwait
mov
arpl
or
pop
fmull
aam
push
lea
fidivs
mov
cmp
loope
gs
ss
fists
push
xlat
jbe
mov
repnz
ljmp
mov
sub
add
shll
fidivrl
or
call
fadds
push
jmp
movsb
cltd
mov
inc
int3
daa
adc
mov
xlat
nop
lods
xlat
ljmp
or
mov
hlt
dec
data16
xor
popa
scas
adc
repz
clc
mov
and
pop
ljmp
mov
push
stos
leave
add
push
and
mov
es
mov
adc
inc
mov
adc
and
add
and
mov
pop
pop
inc
jnp
push
sbb
jl
fnsave
dec
mov
loope
cmp
int3
jmp
cli
aam
insl
addr16
flds
pushf
stc
add
out
or
pop
lahf
in
cld
cmpsl
movsb
cltd
test
aas
dec
repnz
ret
mov
cmp
test
fstpl
push
enter
mov
enter
mov
cli
jnp
cs
bound
mov
adc
jbe
xor
enter
add
pop
push
push
push
divl
mov
push
cmp
inc
bound
xchg
test
mov
xchg
sarb
xchg
jecxz,pt
xor
iret
add
cli
pop
std
fadds
jae
test
invd
sub
lea
jne
fdivrs
aad
dec
add
inc
enter
rcrl
aam
push
lret
out
imul
roll
push
mov
mov
rol
inc
stos
out
mov
mov
shll
xor
outsl
dec
and
out
xchg
push
mov
pop
pop
xchg
jmp
fcoml
outsb
lcall
ljmp
jmp
and
clc
cli
push
lahf
push
inc
iret
mov
mov
mov
and
mov
rcr
dec
inc
inc
or
in
mov
jg
dec
or
pop
or
fimull
mov
hlt
push
rolb
pop
aaa
jnp
mov
mov
ljmp
out
fidivrl
xor
arpl
sub
mov
sbb
fmuls
lea
push
xchg
adc
xor
pusha
mov
inc
pusha
mov
inc
push
flds
jnp
lods
rcl
xchg
inc
ljmp
jne
lock
addr16
pop
dec
stos
ss
jb
incb
leave
inc
dec
pop
mov
in
outsb
outsb
mov
cmp
jbe
mov
pusha
outsb
dec
cwtl
or
inc
fidivrs
mov
mov
and
out
sbb
jns
sti
push
call
cmp
lahf
cli
bound
fs
xor
movsl
pop
adcl
ds
fiadds
enter
xchg
pop
data16
add
jecxz
pop
mov
cmp
ss
jb
inc
in
imul
mov
mov
flds
jne
cltd
iret
popf
inc
fildll
ficompl
cmp
xor
jne
pop
mov
test
fs
inc
push
jno
sbb
or
stos
jne
xchg
inc
mov
stos
or
mov
pop
xchg
lods
adc
in
out
mov
imul
lods
xchg
and
jmp
fiadds
lods
sub
mov
xchg
scas
stos
pop
pop
shl
roll
add
aam
pop
sar
aaa
mov
es
dec
repz
pop
xor
pushf
dec
lods
push
ljmp
jo
out
mov
pop
pop
pop
lods
mov
test
mov
cli
pop
sbb
mov
push
loop
xchg
outsl
ret
and
dec
pop
dec
dec
stos
mov
into
popf
cmp
and
insb
add
mov
push
ds
dec
cmpl
add
cmpsl
mov
dec
cmp
dec
mov
arpl
inc
pop
push
inc
or
into
mov
mov
sbb
sub
cmp
sarl
lds
mov
fistps
enter
push
pop
fwait
and
repz
and
mov
int
push
and
inc
dec
mov
jmp
movsl
add
movsl
imul
lret
dec
jmp
sbb
js
out
jecxz
shlb
cmp
jbe
sub
push
mov
jo
jno
jae
loope
mov
cmpsl
mov
es
lods
xchg
in
adc
push
je
inc
rclb
mov
mov
js
jo
mov
test
adc
out
sahf
push
mov
jno
shll
inc
adc
imul
sahf
jbe
push
cmp
jno
aad
mov
movsb
add
and
loope
cs
fxch
loop
jle
stos
int
popf
or
push
movsb
inc
enter
js
lea
cmc
sub
and
ja
ret
lret
mov
push
enter
call
lahf
std
push
add
and
jg
mov
mov
lcall
fldt
pushf
ret
cmp
shrl
int3
cmc
jl
arpl
pop
sub
mov
xor
sub
xchg
cwtl
jne,pt
xchg
loop
jne
or
adc
jns
push
aam
push
push
outsb
mov
and
sub
push
mov
mov
outsl
mov
std
inc
mov
sarb
loopne
jns
in
mov
int
fdivrs
shlb
ficomps
lret
jecxz
iret
outsb
mov
dec
js
movsb
insb
sbb
aad
sbb
int
ds
cmp
push
xorb
es
sub
cwtl
jb
adc
addb
stos
cmpsl
sbb
mov
lret
jb
pop
dec
xchg
inc
pop
fistpll
xchg
push
xchg
outsl
pop
add
jp
jno
or
out
sub
sti
push
push
xchg
les
je
pop
pop
shrb
jge
mov
fisttps
lret
pop
je
mov
inc
jl
das
cli
or
push
loopew
ret
in
inc
mov
xor
das
inc
fsub
mov
in
shlb
adc
mov
push
loopne
or
stos
dec
test
and
sub
jae
push
imul
arpl
inc
outsb
scas
lock
arpl
sub
mov
dec
push
pop
or
mov
in
jbe
dec
jnp
push
inc
jns
dec
ficompl
fldcw
mov
dec
pop
mov
sub
mov
adc
lods
mov
test
mov
pushf
inc
gs
push
rcrb
push
jp
add
jmp
mov
xchg
int3
or
bnd
mov
ror
xchg
cmp
sbb
and
gs
fimuls
and
dec
ja
push
push
mov
aaa
gs
out
shll
push
in
ja
fimuls
iret
adcb
inc
pop
in
sub
out
sbb
or
mov
sub
xor
push
pop
aaa
outsl
and
shrl
push
and
pop
pop
insb
sbb
lea
test
and
dec
lcall
stos
stc
cmp
stos
sub
mov
mov
cmp
test
mov
scas
bound
lods
aaa
aam
mov
push
cli
fstpl
or
add
pop
inc
ja
jb
jo
into
jmp
je
dec
jne
add
iret
gs
cmp
out
pop
stos
notl
adc
pop
jge
sbb
lahf
loopne
lds
sub
add
mov
inc
lcall
or
dec
ds
add
shrb
xchg
mov
dec
incl
aas
fldenv
dec
int
imulb
rorb
lahf
push
fsubl
aaa
mov
or
sbb
mov
out
pop
cs
xor
enter
xchg
lret
mov
xor
sub
and
mov
sub
and
cmp
mov
in
jae
lods
mov
inc
imul
popa
movsl
rolb
sub
jle
dec
repz
mov
rorl
jmp
lahf
jmp
sti
test
xor
and
sarl
mov
mov
fstpt
mov
js
roll
scas
jmp
shlb
cmp
and
jge
mov
lret
lret
in
das
sbb
ficoms
sub
pop
mov
push
dec
aaa
pop
outsb
lods
push
sub
jns
aaa
inc
or
out
xor
cmp
inc
pop
xchg
rol
jecxz
sub
push
mov
cwtl
push
push
adc
push
dec
inc
or
push
fs
sbb
jbe
xchg
rcl
aad
pop
push
mov
pop
lds
das
outsb
adcl
inc
pop
sub
leave
and
pop
aam
imul
push
in
adc
xchg
clc
cmp
adc
into
adc
in
or
or
mov
fdivrs
add
fdivs
dec
stos
std
pop
or
ja
cmc
out
mov
push
inc
adc
outsb
in
sbb
add
or
ds
sti
addr16
test
dec
dec
mov
out
xchg
sarl
je
pop
scas
mov
mov
or
das
push
lods
fldenv
xor
and
xchg
lock
cs
mov
cltd
jge
aam
push
push
scas
or
ret
sysret
or
ret
cmp
jp
jle
leave
and
sbb
or
je
frstor
incl
mov
sub
ljmp
jo
into
test
push
movd
xchg
fdiv
stos
xchg
mov
fldcw
shl
outsl
push
insl
add
push
fstl
pop
adc
incl
cmpsl
mov
or
dec
ds
and
stos
icebp
adcb
xor
ss
in
sti
sub
loope
and
xchg
cmpsb
ret
stos
cwtl
mov
mov
out
xchg
dec
jge
lds
cmc
js
in
xchg
jo
shll
cltd
xchg
sbb
mov
pop
and
cmp
and
mov
sbb
leave
pop
and
es
aam
fwait
lods
in
xchg
jg
pusha
mov
jge
mov
inc
sbb
das
arpl
and
fnsave
xor
push
sbb
mov
pop
and
cmp
subl
sub
cmpsl
imul
pop
popf
cmp
sub
int
dec
dec
mov
ret
rcrb
sar
push
loop
push
mov
bound
dec
dec
pop
jmp
mov
or
sbb
ds
xchg
cmp
rorb
dec
inc
dec
xchg
xlat
stc
inc
mov
sub
mov
out
ss
test
ret
aaa
sub
scas
pop
fistps
add
adc
pop
daa
daa
mov
fistl
idivb
test
int
jb
rcr
scas
sub
dec
out
cltd
test
pusha
ljmp
jmp
pop
push
pop
pop
inc
xchg
shlb
arpl
cmp
jno
and
adc
fmuls
or
xor
aaa
fidivrl
sub
daa
add
add
xor
popf
mov
mov
lock
dec
push
mov
adc
mov
inc
out
sbb
shrl
shrl
pop
cmp
adc
jne
test
pop
push
repnz
sbb
call
or
fs
aam
in
xor
mov
push
pop
and
push
out
shll
xchg
lea
sub
js
insb
lcall
xorl
shrl
scas
jle
push
mov
fisubs
fwait
pop
addr16
loop
mov
mov
and
inc
stos
insb
inc
dec
test
ljmp
fs
sarb
sbb
lea
jne
insl
inc
cmp
or
int
adc
aad
xchg
xor
jle
enter
ret
sti
inc
adc
dec
int3
cmpsl
xor
add
sbb
push
cmc
stos
push
call
aad
divb
inc
movl
test
and
aas
mov
stos
dec
cwtl
stos
add
icebp
cmpsl
push
and
mov
jg
mov
pushf
rclb
sbb
push
push
js
pop
cli
mov
mov
imul
lods
mov
stos
add
dec
adc
mov
cmpsl
call
cmpsb
add
adc
int
pop
add
fcmovb
mov
adc
cmc
sti
mov
xchg
out
mov
jbe
push
xchg
shlb
adc
add
mov
fs
js
add
push
fcomi
nop
stos
mov
dec
rclb
cmpsb
pop
jne
mov
stos
inc
mov
jp
mov
testb
push
xor
sub
sti
pop
stos
mov
jbe
in
and
es
scas
lcall
hlt
push
mov
insl
sahf
lods
and
shll
mov
rol
add
cmc
cld
dec
cmpb
mov
mov
loopne
cmp
scas
lods
push
and
jb
mov
push
call
out
das
sarb
daa
push
cli
adc
pop
push
aaa
or
adc
ret
mov
xchg
jecxz
jge
or
or
push
jno
ljmp
dec
stos
shll
jno
jle
lock
cmpsb
test
sarb
xchg
js
push
jge
mov
inc
lcall
hlt
adcl
cld
push
cmp
adc
or
out
xor
flds
mov
addl
stos
jmp
jnp
push
cld
cmp
lea
xchg
out
fisttps
push
addb
bnd
imul
mov
xchg
jmp
xlat
sbb
and
sahf
leave
repnz
or
pop
test
ret
dec
inc
adc
cmp
mov
xchg
sub
testl
es
mov
das
fwait
ljmp
jae
inc
imull
inc
adc
sbb
dec
xor
mov
push
mov
jle
mov
mov
jp
lret
jge
daa
dec
cmc
subb
inc
or
jnp
pop
adc
in
xchg
inc
pushf
lods
fcom
imul
lret
das
adc
shll
mov
clc
mov
xor
cmp
jnp
inc
iret
push
es
jnp
in
adc
fucomip
push
popf
mov
or
lock
fst
add
adc
lret
mov
mov
arpl
sub
jne
cmp
dec
scas
sahf
insb
mov
dec
sub
sbb
adc
cli
push
pushf
jl
push
cld
mov
mov
mov
stc
jne
pop
dec
lods
das
jns
xorb
pop
stc
xchg
int3
jmp
jae
fiaddl
xor
adc
pop
mov
sub
cmp
lock
insl
sub
ljmp
pop
enter
xor
lahf
insb
cmp
pop
and
fidivl
leave
mov
in
mov
xor
cmpsb
sbb
add
mov
js
scas
fs
aam
les
xchg
fildll
andb
pop
sti
sar
sbb
roll
jge
jns
mov
fwait
xchg
dec
data16
ds
ret
das
or
pop
xlat
pop
mov
mov
arpl
xchg
jmp
subl
sub
xchg
xor
outsl
mov
divl
push
js
adc
daa
mov
cwtl
data16
sub
mov
or
and
aad
cmp
mov
cmp
cs
mov
mov
pop
popa
das
dec
jno
mov
fadd
sahf
adc
loope
test
ljmp
push
out
lods
mov
mov
or
push
and
popf
daa
jp
outsl
stos
das
loope
ss
xchg
cmp
jns
xor
push
popf
stos
jl
mov
push
jp
jno
xor
mov
pop
test
outsl
cld
aaa
xchg
sbb
push
js
gs
lcall
push
push
jns
insb
push
out
push
fsub
xchg
mov
cmc
jb
outsl
mov
add
mov
mov
push
push
insb
sbb
fisubrs
push
sub
dec
mov
or
daa
ja
leave
dec
pop
jo
xor
stc
jbe
add
inc
fisubrl
andb
popf
outsb
adc
ret
pop
nop
dec
ljmp
dec
jl
sahf
cli
mov
pop
mov
sbb
mov
sbb
lods
shrl
mov
cwtl
mov
iret
push
loope
test
add
push
jo
imul
in
mov
nop
xchg
movsl
sbb
adc
dec
mov
sbbb
fstpt
mov
mov
mov
or
dec
nop
jle
sbb
sahf
cwtl
stos
arpl
test
cmp
loop
add
stos
mov
addr16
xchg
pusha
test
mov
sub
xorl
insl
or
push
push
dec
xor
loope
mov
dec
nop
jg
pop
fidivl
push
das
subb
jmp
sub
mov
sub
ffreep
in
mov
adc
pop
loope
xchg
xor
daa
and
sub
mov
jl
inc
and
xor
into
test
mov
aas
les
and
lcall
sub
push
scas
cmp
test
aad
aam
repnz
push
jle
mov
flds
nop
mov
test
jbe
insl
push
lock
inc
xor
add
aam
ss
push
fisttpl
cltd
or
lret
xchg
pop
aaa
sbb
mov
ljmp
mov
sub
inc
ds
xchg
out
mov
ljmp
jg
repnz
and
ds
je
and
addr16
sbb
test
xor
arpl
mov
jge
lahf
jecxz
orl
xor
jno
sub
arpl
adc
mov
int
mov
mov
cld
adc
into
pop
push
and
xchg
pop
aam
sub
imul
inc
cs
addl
insb
dec
mov
push
dec
outsl
outsl
cmpsl
leave
mov
es
add
aam
mov
stos
fsubp
sbb
add
sub
icebp
add
sub
push
pop
gs
sbb
popf
cli
mov
xchg
add
dec
cmc
js
clc
dec
fimull
mov
push
add
in
fcompl
add
mov
or
scas
xor
ficompl
shlb
xor
mov
sbb
sub
mov
sbb
dec
jle
xchg
xchg
mov
negl
mov
cmpsl
pusha
add
add
les
arpl
aam
mov
nop
jns
out
testl
stos
cmp
mov
push
cmp
dec
test
mov
rclb
pop
dec
in
xchg
pop
pushl
call
or
stos
aad
in
inc
rcrl
push
ss
cltd
outsl
cltd
dec
mov
jmp
cmp
or
in
and
scas
mov
adc
leave
mov
xor
fs
inc
mov
add
adc
insb
cs
inc
cmp
adc
ja
das
inc
lods
cmp
mov
xchg
sbb
out
call
cli
insb
aaa
bound
lret
xorb
xlat
sub
out
mov
jns
push
mov
lods
movsl
test
fstl
xor
loopne
jae
cwtl
sbbb
mov
jne
adc
faddl
pop
test
adc
lahf
dec
push
aaa
or
inc
fldt
or
fwait
inc
xchg
test
test
mov
ja
fstpl
lods
dec
pushf
inc
mov
mov
lahf
push
lods
pop
xchg
xchg
adc
shrb
stc
jne
outsl
aam
je
stc
and
mov
aam
add
adc
sbb
sti
test
fldenv
cmp
cld
rcrl
dec
imul
xchg
rcrb
das
test
cmp
sbb
sysenter
sbb
xorb
mov
jmp
sbb
xchg
int3
dec
or
or
clc
jns
test
fcoms
lock
stc
xchg
ss
int3
sbbb
mov
push
das
mov
ja
dec
or
cmp
inc
das
cmpb
loopne
pop
mov
mov
es
fldt
push
das
js
cmp
xchg
xchg
gs
push
mov
imull
cmpsl
sub
fcoml
jns
pop
jo
push
xor
loop
mov
ja
scas
pusha
mov
cmp
shll
adc
shll
push
jge
add
jbe
xchg
mov
ret
into
loope
pushf
loope
adc
out
out
mov
inc
jmp
into
jmp
adc
or
cmpsb
inc
jle
popf
mov
push
out
leave
out
adc
jl
arpl
data16
out
pushf
insl
rorb
inc
mov
outsb
and
and
add
outsb
jb
fldpi
cmpsl
dec
hlt
imul
sti
std
push
push
pop
sbb
gs
lcall
dec
sbb
push
mov
mov
or
add
stc
dec
out
lods
add
mov
cmc
inc
loope
cld
scas
aad
jae
movsl
push
mov
lret
mov
pop
shlb
ret
sbb
inc
sub
mov
pop
xor
jmp
test
xchg
fidivl
jb
outsl
lods
xorb
mov
lcall
mov
das
inc
sbb
sbb
mov
movsb
outsb
mov
inc
fsub
dec
mov
cmp
pop
and
lock
rorb
push
rcrl
inc
repz
test
push
lahf
cmpl
jns
jg
nop
loopne
add
inc
sbb
test
xchg
xchg
idiv
cmc
mov
or
jno
sbb
fiadds
mov
inc
mov
subl
cmp
mov
pop
out
mov
das
inc
pop
daa
data16
das
mov
out
mov
sahf
sub
fstpt
ficompl
jecxz
mov
out
in
pop
sbb
aam
insl
mov
pop
adc
nop
pop
icebp
push
push
adc
mov
pop
mov
jns
icebp
push
imull
xchg
mov
pop
popf
fistps
cmpsl
pop
push
cmp
lds
pop
daa
inc
shlb
pop
jmp
jno
xchg
mov
adc
sub
dec
pop
or
sbb
test
mov
inc
cmp
pop
test
in
loope
cmp
push
mov
pop
mov
fs
outsb
fucomp
mov
fistpl
mov
or
ficoms
mov
cmpsl
fwait
or
addb
cmpsl
icebp
push
out
mov
test
arpl
in
cmpsb
sbb
out
adcb
rep
cmpsb
xchg
jne
sbb
mov
xor
push
jl
adc
pop
xchg
pop
sub
or
imul
cs
sti
mov
jbe
jb
out
push
xor
rcrb
shll
and
sbb
shlb
ret
push
jo
jmp
into
cmp
push
sub
fstps
mov
cmp
pusha
sbb
xor
mov
mov
or
aad
mov
jmp
cmp
sahf
mov
dec
outsb
bound
pop
and
sub
call
and
cmp
fldt
repz
loopne
in
mov
add
and
mov
cs
jnp
xchg
lcall
sub
xchg
pop
sub
fldenv
pop
jbe
pushf
cs
and
adcb
movsw
sbb
dec
int3
jle
inc
icebp
or
insb
outsl
dec
push
xchg
mov
addr16
dec
mov
ja
dec
or
dec
push
lcall
adc
xchg
mov
xor
mov
das
xor
add
popf
mov
add
xor
pop
push
sbb
mov
sub
rol
xchg
mov
pop
jmp
movsb
jbe
ss
repnz
adc
adc
cmc
ljmp
loop
mov
pop
push
mov
pop
outsl
in
leave
sub
dec
mov
sub
mov
or
cmp
daa
add
pushf
aas
ds
xor
push
sub
shlw
cmp
cmpsb
jae
sbb
decb
std
add
imul
and
push
dec
mov
cmp
adc
xchg
add
cmc
or
push
fsubs
mov
std
mov
cli
cmpsl
fucom
adc
dec
negb
sti
sbb
lock
in
addl
loop
mov
icebp
in
dec
int3
fistps
in
xor
mov
jl
jns
xor
mov
call
data16
cltd
mul
int
imull
cmp
jg
inc
xchg
scas
cmp
mov
test
xor
pusha
jo
in
add
scas
xchg
mov
or
sub
outsl
imul
js
outsl
mov
push
push
and
xchg
out
or
out
enter
daa
fnstsw
out
lcall
jns
cmp
and
adc
jmp
aas
add
aam
call
aam
xchg
dec
outsl
jl
loop
xchg
aaa
xchg
loopne
cmpsb
and
pop
push
inc
mov
xor
sub
sub
mov
icebp
lcall
jmp
test
inc
ja
js
cmp
movsb
leave
or
dec
in
add
sbb
scas
repz
xchg
aad
mov
lcall
decl
outsl
dec
add
not
arpl
jecxz
clc
pop
fmulp
std
repnz
insl
lods
mov
sbb
std
mov
pop
cmc
fldl
push
gs
and
mov
adc
xchg
xchg
xchg
and
insb
out
dec
jge
sub
jns
out
addl
sbb
pop
data16
mulb
push
mov
call
pop
cmp
rcl
push
pop
in
pop
loop
bound
adcb
movsl
fnstenv
fildll
cmp
adc
movsl
sbb
shll
outsb
stos
call
faddp
mov
in
loope
cmpl
movsl
pop
mov
mov
jle
mov
out
ficoms
insl
into
in
xchg
inc
add
push
pop
push
sahf
mov
fsubrl
and
data16
mov
loope
loop
jmp
adc
sbb
sub
jo
lret
cmp
rorl
fnstcw
mov
imul
prefetchwt1
push
mov
adc
repz
dec
dec
mov
scas
mov
mov
aam
sahf
jne
xchg
fstpl
mov
sub
out
stos
cwtl
pushf
mov
push
outsl
inc
and
test
scas
fs
lock
adc
repz
sbb
pop
rcll
xchg
inc
stos
push
or
mov
sub
stos
mov
bound
mov
mov
xchg
imul
xchg
in
pop
iret
mov
pop
dec
pushf
mov
pop
pop
add
scas
scas
inc
das
out
jge
les
jp
js
hlt
xorb
test
aas
bound
lret
mov
test
fsub
adc
and
enter
and
clc
ljmp
mov
push
pop
lahf
sbb
popa
or
dec
pop
adc
insl
inc
iret
xchg
or
daa
mov
mov
xchg
add
adcb
dec
outsl
xor
out
pop
mov
mov
imul
sarb
or
push
cld
mov
mov
inc
ja
into
and
adc
inc
sub
mov
mov
je
ret
pop
jge
lahf
jmp
xor
loope
dec
xor
or
pushf
push
and
arpl
adc
cs
add
and
jbe
pop
adc
add
lahf
pop
xchg
push
loope
outsb
adc
sub
loop
inc
in
push
je
mov
jecxz
lock
nop
cmp
pop
jo
andl
dec
mov
jl
inc
shll
sarb
xchg
nop
and
movsb
ja
push
aaa
mov
xchg
jp
popa
test
ret
pop
je
mov
dec
dec
fsts
and
out
dec
add
shll
idivl
lock
lods
test
jno
popa
xchg
in
movsb
std
xor
into
and
pop
fidivrs
push
sar
push
sbb
data16
mov
aam
xchg
xchg
js
enter
jne
data16
les
cmpsb
adc
dec
popf
add
jns
mov
lock
int3
inc
xor
icebp
pop
stos
stc
lret
sbb
xor
lods
lods
ret
xor
das
rol
shrl
xlat
xor
sbb
mov
loopne
sbb
push
fsubrs
cld
call
adc
daa
mov
add
cmpsl
dec
ljmp
xchg
sub
cmpsb
xor
sub
mov
les
lds
push
xchg
scas
lock
gs
jb
addb
call
xchg
stc
push
movb
and
orb
and
sbb
sbb
xchg
pop
adc
add
dec
or
or
bound
cmp
sbb
xor
dec
enter
shlb
lock
sub
fildl
add
cmp
sub
dec
push
add
jp
outsb
xchg
in
in
pop
xor
pop
cli
out
mov
inc
mov
cmp
and
iret
addr16
aas
fmuls
loope
cmpsl
adc
out
pop
decb
mov
jno
in
movsb
push
aaa
mov
fidivs
jae
cltd
xchg
jno
pop
pop
scas
and
xor
cmp
in
popf
mov
out
push
pop
nop
out
imul
neg
xor
imul
aaa
insb
cmpsb
clc
add
pop
or
push
or
rcrb
jecxz
inc
pop
aad
mov
mov
ret
hlt
ret
sub
inc
push
dec
and
in
dec
lods
dec
jmp
and
enter
das
cmpsl
hlt
add
mov
mov
mov
jle
push
call
jbe
test
cld
mov
loop
hlt
sub
push
aam
leave
cld
push
lds
pop
out
mov
aad
fsts
push
clc
es
inc
outsb
pop
dec
repnz
fildl
mov
pop
setg
mov
sbb
dec
scas
int
loop
mov
mov
cmc
push
cmp
sub
mov
enter
fldl2e
stc
jo
sub
xor
in
mov
cmp
pop
jl
das
adc
insl
push
cmp
leave
xchg
sub
aas
inc
pushf
aam
xchg
mov
and
ret
xchg
xor
movsb
andl
inc
jecxz
das
adc
rorb
jecxz
js
xchg
sbb
test
int3
pop
sti
cmp
mov
inc
cld
in
test
sbb
sub
sub
scas
sarb
movsb
dec
lret
add
pusha
aas
icebp
xchg
jmp
adc
inc
pop
push
popf
push
test
in
fs
cmpsl
push
shrl
xor
adc
mov
xchg
xchg
dec
repnz
imul
add
jle
inc
dec
mov
loop
mov
and
rolb
pop
ficompl
call
xor
gs
sub
flds
sub
rcll
or
test
sub
data16
das
ror
daa
in
and
mov
gs
xor
cmp
cs
iret
repz
pop
ret
rcll
lock
jge
lahf
stc
out
push
mov
mov
sub
cmp
not
xchg
andb
mov
in
testb
xchg
adc
mov
push
fistpl
ss
ljmp
mov
mov
shl
leave
xchg
shrl
into
cwtl
mov
sub
and
sti
dec
jns
daa
test
inc
and
push
loope
stc
cs
js
xchg
sbb
and
cmpsb
pusha
adc
add
data16
pop
xorb
iret
out
cmp
hlt
fistps
or
push
pop
loope
js
rolb
jns
sti
fisubrs
stc
mov
mov
icebp
cmp
jg
fwait
xchg
pop
mov
mov
fidivrl
clc
mov
adc
xor
imul
sub
mov
ja
ret
jl
mov
flds
ret
and
pop
cmpsb
jl
jnp
dec
push
je
mov
add
adc
inc
icebp
xchg
xchg
cmp
adc
cmc
cmpsb
into
push
ds
or
jl
cmp
sub
mov
inc
xor
lock
adc
rcll
daa
adc
push
je
clc
leave
hlt
sbb
xchg
ljmp
mov
pop
inc
hlt
xlat
and
in
lret
daa
pushf
lock
xlat
cmp
ret
nop
in
sub
mov
pop
dec
pop
add
mov
fsubl
mov
mov
adc
or
rcll
popf
mov
pop
xchg
mov
into
xchg
test
ss
dec
add
xchg
int3
cmp
cs
int
icebp
dec
xchg
lock
xor
mov
mov
xchg
cmc
mov
mov
add
mov
jle
fdivs
enter
jno
orb
pop
sahf
bound
sbb
push
addr16
jae
and
inc
and
add
mov
loopne
insl
adc
test
lods
inc
jecxz
xchg
mov
pop
ds
adc
pushf
hlt
xchg
push
mov
mov
insl
lea
inc
sub
enter
push
lcall
sub
sbbl
add
test
out
xchg
mov
inc
fldl
push
pop
inc
fcmovne
dec
push
pop
jge
or
mov
loopne
shlb
rcrl
and
xor
cmc
add
movsl
jle
jg
sti
repnz
imul
and
into
sbb
repz
cmp
test
in
xlat
dec
enter
pushf
insb
inc
add
and
xlat
adc
push
jle
addl
mov
sti
add
or
or
mov
lahf
fwait
mov
mov
add
jp
into
xor
dec
cmc
jae
mov
push
cs
mov
jmp
lods
ret
clc
jle
push
aas
push
cltd
mov
les
cmp
ds
mov
pop
ljmp
or
outsb
andb
pusha
jno
jnp
loopne
sti
and
in
outsl
cmp
cld
fsubl
xchg
add
push
cmp
jae
pop
push
inc
pop
arpl
mov
data16
iret
adc
sub
call
jl
push
cmpb
mov
mov
push
cmc
data16
scas
arpl
jnp
fstps
add
ret
and
mov
pop
cs
xchg
xchg
pop
or
fxch
loope
cmc
cmp
out
pop
add
cmp
into
lds
sbbb
push
inc
scas
mov
xchg
jnp
inc
les
rorb
push
push
addb
insb
add
cmp
in
add
out
xchg
sub
pop
pop
popf
mov
cmp
iret
pusha
pop
jge
shll
mov
test
loopne
cld
push
hlt
push
js
and
or
cltd
sti
mov
test
aam
dec
xchg
jae
flds
lods
mov
int
sub
xlat
and
mov
jb
mov
cmp
xchg
sbb
add
cmpb
jge
sub
pop
lods
cmp
sub
and
jp
xchg
test
dec
outsl
test
sub
jge
add
cmc
push
popa
or
gs
cmp
in
sbb
mov
lcall
ljmp
cmp
dec
out
aam
roll
movsl
cmpsl
inc
popf
lock
xchg
jmp
mov
mov
les
mov
and
insb
cmpl
stc
inc
pop
fnstcw
leave
mov
jns
sbb
ficompl
dec
mov
sub
ret
lods
mov
xchg
jo,pn
pop
add
std
out
es
adc
cmp
clc
pushf
shl
pop
loope
jbe
push
icebp
xchg
dec
adc
mov
mov
mov
addr16
pop
mov
push
fndisi(8087
xlat
es
mov
aad
imul
popf
jno
movsl
sbb
and
les
push
mov
jg
or
cmp
sbb
adc
aaa
adc
pushf
imul
lock
test
sbb
push
ds
adc
xor
pop
and
push
push
cs
mov
test
test
push
xchg
cmp
popf
xor
mov
cli
sub
js
xor
mov
pop
cmpb
sbbl
lcall
lods
lcall
cmovo
fcmovne
and
jns
js
sub
jg
or
mov
lcall
punpckldq
sbb
push
fisubl
rcrl
jp
arpl
jnp
or
in
push
cmc
mov
sub
mov
outsb
popa
mov
shll
dec
xchg
test
xchg
stos
add
fdivrs
mov
cmpsl
in
sub
jle
jle
fisttpl
sub
sbb
xchg
push
pop
ja
movsl
orl
sti
paddq
test
jb
mov
cwtl
mov
push
xchg
cmp
movsb
inc
mov
ljmp
dec
test
ret
mov
aam
mov
aam
mov
into
fisubrl
sti
mov
aad
pop
xor
mov
outsl
sub
xchg
inc
test
idivl
cmp
inc
cmc
je
jge
cld
push
xor
int
or
and
cmp
xchg
jle
cmc
sub
pop
shll
popf
fdivrs
pop
lds
mov
clc
mov
sbb
out
adc
sub
jnp
into
push
popf
xchg
jmp
loope
fwait
or
int3
and
sub
push
fnsave
dec
sbb
inc
stc
mov
std
imul
push
aam
fmuls
movsb
or
and
cs
in
jne
push
inc
pop
jl
cs
and
sub
lcall
lret
les
and
outsl
outsb
pop
mov
and
popa
cmp
mov
mov
lret
fisttpl
aam
je
mov
in
inc
in
mov
inc
sub
xchg
jg
ds
outsb
les
push
in
repnz
lret
jg
inc
lods
es
xor
inc
movsb
in
and
sahf
enter
push
xchg
push
pushf
sub
cmpsb
push
into
stos
xor
mov
repz
in
faddl
xorl
int
sub
sub
popa
stc
mov
ja
pop
pop
out
or
aas
movsb
mov
test
fs
aas
repnz
jnp
pmuludq
lret
sbb
out
dec
xchg
cwtl
pop
and
shlb
out
push
mov
ss
inc
test
jo
cmc
push
cmp
and
sahf
outsl
cmc
jge
out
gs
xchg
adc
dec
les
dec
stos
scas
pop
or
nop
adc
shrl
push
shlb
stos
arpl
mov
push
repnz
sbb
dec
outsl
xchg
mov
add
pop
jnp
xor
or
jecxz
mov
sbb
lcall
dec
mov
inc
xorb
mov
ret
xlat
sbb
stc
mov
push
sbb
pop
inc
or
sub
rolb
dec
fimull
addr16
lods
pushf
push
cli
aaa
std
into
push
stos
dec
cmp
iret
int3
dec
test
sbb
inc
ja
cmpsl
subb
in
in
popf
sub
std
mov
daa
dec
xor
pop
mov
jo
jbe
int
mov
adc
rcl
push
jle
mov
xchg
loopne
shll
es
clc
outsl
lcall
cmp
btcl
ja
stos
jl
scas
inc
js
imul
pop
int
shl
add
adc
dec
xor
jmp
call
fiadds
xchg
inc
jmp
xchg
dec
pop
sub
mov
xor
cmpsb
push
repz
bound
sahf
adc
sar
mov
daa
in
mov
stos
cmp
cmp
xchg
popl
push
lcall
lock
lods
mov
or
xchg
push
xor
cld
jns
add
cmp
pop
dec
push
push
movsl
dec
sub
mov
mov
xchg
or
push
mov
inc
pop
sub
rcrb
sbb
jg
les
push
popa
repz
inc
jnp
pusha
enter
dec
movsb
mov
ret
aam
je
pop
pop
outsb
fs
sbb
inc
xor
and
cltd
sub
sbb
adc
fcoms
scas
xchg
pop
pusha
sub
push
pop
pop
mov
scas
cli
mov
insl
cmc
cmc
pop
cli
fsubs
pusha
dec
adc
ret
add
ds
test
loope
push
cs
xchg
clc
ret
arpl
daa
mov
rcll
leave
call
cltd
lret
ret
add
ret
or
stos
jnp
add
push
loop
adc
aam
popf
in
ficomps
jg
loope
in
ds
call
fildl
lret
adc
lahf
movsb
cltd
cmp
mov
adc
ja
mov
pop
loope
fwait
or
jecxz
xor
mov
or
sti
outsl
subl
adc
lods
inc
cmc
sub
test
lock
adc
ds
cmc
push
mov
test
es
push
pop
cmp
in
or
arpl
mov
stos
or
loopne
stos
enter
test
insl
lahf
loope
hlt
mov
push
test
cmp
fldt
cld
aad
lods
lods
std
jp
cs
lahf
out
add
mov
repz
mov
sbb
mov
fidivs
daa
int3
sbb
mov
push
ret
loopne
stos
es
mov
mov
movsl
cmpsb
sub
pop
fwait
sbb
rcrb
lret
jno
faddl
int3
pop
out
jnp
clc
test
daa
dec
jmp
jle
lods
imul
aad
dec
fldenv
jb
push
fcompl
gs
out
sub
punpcklbw
push
fstpl
or
xor
mov
movsb
in
stos
jge
sbb
out
lea
sub
sbb
lcall
ljmp
or
and
mov
mov
sbb
mov
inc
sub
sti
pop
popf
loop
push
lahf
inc
fstl
push
jns
scas
jno
mov
test
push
pop
sbb
mov
push
jp
dec
jl
dec
push
lret
rcrb
test
aaa
push
fadd
popf
mov
dec
mov
repnz
jbe
jecxz
inc
inc
jge
sti
add
fucom
xchg
sbb
add
xchg
scas
bound
mov
cmp
mov
pop
icebp
xor
mov
mov
push
fldenv
call
cmpsb
test
and
inc
out
sbb
mov
and
hlt
xchg
roll
je
xor
mov
xor
push
dec
fnsave
push
add
cmp
and
xchg
pop
jmp
xor
rorl
or
std
fs
clc
push
repnz
dec
jmp
iret
adc
adc
add
xchg
sub
sbb
pop
and
jbe
ret
stc
loopne
stc
lods
mov
lret
pop
call
insl
inc
leave
sbb
gs
cld
shll
inc
outsb
addr16
mov
ss
test
shl
les
bound
dec
int3
inc
adc
sbb
and
jge
call
into
push
out
fldcw
std
or
lds
cmp
inc
lock
sub
shrl
jmp
cmpsl
mov
out
popf
pop
or
xor
outsl
xchg
ret
negl
stos
fnclex
cwtl
sbb
data16
push
cmpsl
in
adc
rclb
mov
inc
xlat
inc
lds
imul
sbb
xchg
push
pop
xchg
jmp
out
add
mov
aam
data16
mov
sub
ret
pop
add
mov
xor
cmp
push
in
push
jp
ds
cmc
loope
pop
mov
stos
jo
sub
call
push
out
aam
inc
jecxz
push
addl
stos
mov
in
jo
mov
aam
pop
pop
subb
xor
pop
int
lods
jne
pop
push
jne
cmc
fimuls
pop
dec
out
popl
xchg
insl
fnstcw
stos
add
mov
mov
incl
out
adc
pop
pop
mov
mov
insb
add
insl
fnsave
in
adc
cmpsb
or
sbb
sub
stc
pop
sahf
add
mov
cmp
test
ret
std
xor
mov
pop
xchg
and
pop
sub
inc
dec
xor
push
sbb
push
or
das
inc
lret
mov
push
mov
aaa
fsubrl
cmp
sub
add
sbb
andb
ds
jno
popa
jnp
push
sbb
mov
dec
mov
pop
mov
mov
dec
mov
lahf
push
adc
pop
add
xor
ljmp
int
jne
cmp
sbb
icebp
into
cmp
adcl
pushf
insl
aaa
cmp
into
imul
rorl
test
mov
inc
cwtl
cmc
xchg
lea
dec
jecxz
mov
daa
fimull
add
cmp
leave
xor
and
negl
xchg
lret
roll
jg
popf
lods
xor
cmpb
push
mov
push
fwait
iret
pop
insl
nopl
pop
insb
vcvttsd2si
ret
iret
in
fmuls
jmp
ds
mov
xchg
jge
xlat
inc
rolb
inc
aad
pop
cmp
repz
cmp
or
push
andl
sub
xor
mov
pop
mov
add
mov
aam
adc
pop
loopne
cmova
dec
repz
mov
cmpsb
loop
add
js
stos
lods
inc
xor
in
or
sub
or
test
addb
lcall
xchg
dec
mov
xor
cmc
out
add
inc
fwait
ljmp
dec
mov
sti
mov
push
call
pop
pop
gs
mov
and
xor
rcll
clc
scas
mov
aad
mov
xchg
sti
lods
jp
adc
jp
inc
stos
bnd
arpl
int3
daa
insb
mov
cmp
mov
testl
ljmp
fidivl
sub
mov
adc
in
mov
mov
test
jle
dec
into
sbb
repnz
scas
cli
ss
cmp
cs
adc
add
jp
and
push
inc
push
push
sbb
or
in
mov
hlt
mov
sub
cmc
aam
mov
jb
mov
and
mov
stc
inc
cmp
sub
lea
insl
fiaddl
push
aam
cmp
loope
test
mov
and
jbe
or
mov
push
lds
cmpsb
ds
xchg
add
sti
pusha
fs
pop
inc
daa
pusha
lea
adc
inc
xor
enter
and
inc
jl
cltd
jbe
xchg
aas
sbb
jnp
in
and
mov
adc
xchg
and
push
scas
notl
repz
sub
js
ljmp
add
fisubrs
adc
mov
pop
ljmp
dec
out
dec
and
loop
test
push
outsb
sahf
dec
jb
test
out
cmp
ret
pushf
push
sysexit
pusha
mov
lods
stos
ficoms
and
das
mov
adc
outsl
movsl
outsb
sbb
pop
je
sbb
adc
addb
sti
lea
fisttpll
dec
daa
push
mov
mov
lahf
xchg
call
movsb
adc
jmp
call
test
mov
in
lea
or
cltd
cmc
cmp
ljmp
fstl
insl
or
cli
xlat
dec
pop
cltd
loope
std
sbb
push
and
cmp
stos
test
pop
mov
movsb
mov
lret
mov
enter
pop
imul
xlat
inc
loopne
mov
or
pop
adc
inc
loop
cli
xor
vpmuludq
mov
mov
cltd
incb
cld
sbb
aaa
js
icebp
mov
test
ja
sbbl
adc
mov
dec
loopne
cli
xchg
mov
fwait
cld
loopne
outsl
and
push
cmc
aas
pop
jmp
mov
push
or
ret
cmp
mov
fists
fwait
stos
or
push
repnz
hlt
leave
mov
cmpsl
fiadds
mov
stc
push
pop
or
daa
mov
comiss
rolb
test
aam
inc
and
pop
mov
dec
inc
mov
imul
dec
and
jmp
mov
sbb
inc
inc
dec
pushf
jae
push
and
jne
rcl
into
mov
shrl
lret
cmp
iret
out
mov
out
mov
pop
dec
cltd
ret
shrb
jp
lods
stos
add
pop
mov
xchg
jle
sub
push
jnp
pop
add
add
lds
jnp
dec
out
fstl
cwtl
stos
push
imul
int3
pop
cmpsl
or
sbb
sub
nop
pop
dec
outsl
mov
stc
aad
sbb
jno
addr16
insb
and
fcomps
popa
cmp
and
pushf
push
sub
popa
pop
loope
push
leave
sub
mov
lret
movsb
rorb
xchg
cmp
aaa
mov
roll
jg
push
test
int
pusha
adc
mov
cli
mov
lea
xchg
pop
add
repnz
sti
push
mov
sbb
movsb
xor
pop
insl
sub
pop
sbb
out
lret
mov
xor
mov
outsl
je
lock
int
or
jge
fisttpll
and
shll
iret
addr16
ds
push
xchg
in
daa
cmpsl
adc
out
pushf
outsb
jg
xor
dec
jl
sub
das
jo
and
cmp
add
incl
push
ss
insb
sub
les
xchg
mov
sub
inc
inc
outsb
mov
adc
in
insl
fdivl
stos
add
sbb
shlb
xchg
pop
lahf
loope
push
pusha
inc
adc
in
negl
mov
ja
rcll
xor
add
movl
aaa
sbb
push
pop
ljmp
mov
pop
sub
in
add
xchg
sub
jl
clc
mov
mov
imul
imul
xchg
sbb
aaa
in
jb
mov
mov
add
cmp
shlb
jg
xchg
jl
jge
ljmp
mov
sub
imul
sahf
sub
xchg
jbe
test
into
xchg
fisubl
mov
mov
adc
cltd
inc
mov
jmp
addl
in
repnz
sub
adc
insl
sub
dec
sub
shl
in
dec
mov
fldcw
jle
sti
mov
jge
cld
or
cli
loope
movsl
xchg
jmp
mov
and
mov
adc
dec
mov
mov
push
outsl
xor
insl
rorl
cmp
adc
mov
adc
stos
into
and
test
sbb
lahf
add
dec
addb
repz
pop
iret
sbb
jo
mov
stos
rclb
inc
movsl
imul
mov
pusha
mov
cmp
sbb
fildll
push
cmp
xor
push
and
cmp
mov
inc
dec
sub
sbb
cld
je
pop
dec
mov
ja
jbe
mov
fdivr
and
enter
stos
es
mov
xchg
push
pushf
rclb
es
and
cmp
and
mov
jmp
cmp
fidivrl
int3
cmp
push
inc
pop
dec
lret
stc
add
sub
out
aaa
cld
inc
sbbb
in
cmp
push
mov
hlt
push
sub
mov
sarl
fiaddl
rorl
ret
cmp
faddl
mov
test
and
ljmp
inc
jp
mov
inc
jle
jp
ljmp
hlt
lret
inc
or
mov
bound
push
rcrl
scas
call
inc
cmp
cli
scas
loop
fcompl
xor
cmpl
movsl
loopne
sub
or
xchg
adc
imul
ja
xor
adc
push
test
rolb
cmp
adc
push
and
add
sti
cmp
xor
xor
pop
test
xor
inc
mov
inc
loop
or
add
ret
pop
xor
mov
pop
push
xchg
lahf
push
ljmp
movsl
stc
jle
push
pop
mov
pop
jecxz
jo
dec
mov
mov
lcall
sub
mov
mov
imul
push
xchg
test
jmp
fs
loopne
push
jns
cmp
jp
stos
ret
cmp
xor
cmp
adc
movsl
inc
mov
cld
arpl
lret
insl
mov
or
pop
cli
dec
xchg
loop
stos
lds
enter
clc
dec
gs
cmp
loopne
fs
enter
sub
repz
jo
and
ret
inc
lock
sub
cmp
push
nop
xor
in
jo
sbb
sub
popa
or
cmpsb
mov
mov
mov
pushl
daa
jmp
je
xorb
jmp
mov
add
pop
lods
pop
mov
movsb
lods
rorl
dec
sti
xor
sbb
test
sub
adc
mov
int
push
in
cmpb
stc
push
mov
sti
movsb
rolb
repz
test
fistl
int
adc
cmp
scas
popf
loope
das
xchg
inc
stos
inc
ljmp
sbbb
mov
dec
cmp
lock
jns
adc
mov
sti
push
jnp
sub
xchg
icebp
xor
mov
mov
ljmp
imul
cmp
aaa
mov
and
mov
repnz
add
cmp
add
loope
cmpsb
test
inc
js
inc
fisubrs
int3
ljmp
loope
popa
jnp
push
push
pop
fldenv
or
inc
pop
sti
jo
push
jbe
lock
sbb
testb
xor
notb
mov
lea
adc
mov
sbb
in
fs
imulb
out
add
jae
out
hlt
subl
fstpl
mov
sbb
mov
push
or
jo
mov
shll
inc
xchg
sub
lret
adc
imul
clc
decb
test
add
push
mov
rcrl
cmp
into
mov
jecxz
xchg
mov
add
cmp
jp
jb
dec
popf
pop
icebp
push
mov
aad
incb
fst
push
lods
lea
fs
test
in
lea
pop
fldcw
call
cmpsl
pop
adc
mov
loope
fsubr
adc
jne
xor
hlt
cmp
out
jb
adc
loope
subl
fbstp
negb
add
iret
scas
popa
and
shll
inc
mov
push
push
mov
add
or
shrb
andb
push
scas
adc
ja
sahf
dec
je,pt
mov
rolb
jbe
sbb
push
scas
mov
inc
jg,pt
push
mov
rolb
mov
pop
cmc
test
hlt
call
mov
pushf
fwait
outsl
cmpsl
test
or
ljmp
aad
xchg
jg
test
mov
xchg
jo
call
clc
xor
cwtl
loop
inc
add
cld
shlb
sub
jecxz
pushf
or
cmp
jo
inc
cmp
cmp
mov
adc
filds
jp
sub
push
ljmp
inc
add
xor
pop
push
sub
cld
mov
push
out
cmp
mov
push
int
lcall
outsl
inc
lea
sub
sub
push
hlt
movsl
sub
or
lret
inc
sub
sub
pop
repnz
addr16
leave
xchg
inc
stos
dec
lds
jno
sbb
xchg
push
xchg
adc
inc
mov
andb
cmpsl
adc
mov
addb
shlb
adc
lcall
xchg
xchg
sub
rclb
test
loope
unpcklps
mov
or
xor
testb
push
xchg
enter
pop
add
rolb
jnp
out
jmp
arpl
inc
repnz
xchg
jmp
cmpb
fbstp
repnz
jmp
pop
pushf
cli
add
lahf
hlt
int
lods
stos
xor
jg
sbbl
insb
bound
push
push
fcmovu
pop
test
rcl
sbb
cmp
sbb
inc
cltd
std
sbb
aam
pusha
imul
jle
test
or
call
movsb
das
jmp
scas
in
cmpsl
xchg
pop
jnp
xor
testb
icebp
scas
ret
cmpsb
testl
cmc
sbb
movsb
push
push
xor
jnp
test
jne
jnp
outsl
xor
pop
lahf
inc
inc
mov
inc
and
add
mov
jmp
push
adc
repnz
push
imul
ljmp
sbb
pop
xor
test
cwtl
inc
popf
jnp
dec
fsub
and
repz
call
cltd
imul
test
xchg
popf
jmp
mov
cld
stos
sub
pop
xchg
xchg
adc
sti
mov
sbb
lcall
adc
jbe
dec
or
dec
pop
xchg
scas
cmp
mov
push
ficoml
shrl
aad
pop
es
pop
das
in
mov
xor
add
and
adc
mov
lcall
add
mov
cmp
leave
mov
or
push
movsb
or
dec
mov
adc
insl
and
sarl
inc
aad
sbb
cwtl
enter
sbb
jmp
sti
jge
cmpsb
push
mov
stos
movsl
mov
js
int3
xor
int3
lcall
outsl
xchg
jge
push
dec
in
inc
mov
insb
xor
pushf
fwait
xlat
aaa
cld
inc
and
mov
cmpsl
fists
scas
or
xrelease
push
sbb
pop
inc
leave
xchg
ds
pushf
test
sub
add
push
adc
insl
mov
push
cmpsb
inc
enter
xlat
divl
fadds
pop
jge
pop
push
aad
gs
dec
mov
jecxz
mov
in
or
inc
lcall
cltd
jb
push
fdivrl
or
push
xor
jne
mov
xchg
xchg
dec
lahf
add
outsl
jnp
nop
dec
mov
int
mov
outsl
es
push
ret
xchg
ja
movsl
fcmovbe
mov
add
loope
data16
enter
mov
push
testb
inc
and
scas
sti
sub
push
mov
jne
outsb
mov
pop
bound
dec
or
cmp
mov
pop
movsl
add
inc
xlat
iret
cld
push
mov
or
mov
std
xor
aam
mov
jns
cld
call
jbe
push
dec
je
xor
xchg
and
and
sbb
imul
ja
push
add
pop
xor
dec
push
push
dec
ja
and
push
mov
hlt
mov
sub
popa
insl
sub
xchg
std
inc
cli
mov
sti
les
sub
stos
notb
repnz
lcall
dec
push
gs
pop
and
push
push
sbb
imul
cmp
adc
jo
gs
bound
js
sub
adc
sarl
clc
jb
sbb
cmpsl
shl
inc
jo
bound
mov
xor
push
sub
in
outsb
lret
fcompp
out
cmp
inc
loope
imul
cmpsb
outsb
fidivs
sub
in
mov
mov
xchg
dec
jae
ja
sub
sbb
insl
xor
sarl
test
outsl
dec
mov
pop
in
arpl
and
mov
inc
dec
jl
fsubrs
mov
fbld
test
xchg
js
rorb
cli
jne
mov
decb
ljmp
out
ror
movsl
psrld
cli
insb
mov
mov
pop
or
sbb
jecxz
mov
fistps
repz
lahf
lcall
adc
lret
sbb
fwait
je
sbb
inc
mov
aas
xchg
in
push
and
adc
adc
xor
push
mov
ja
cmp
mov
es
and
in
add
or
mov
loop
push
imul
xchg
push
push
cltd
mov
xchg
in
mov
xchg
dec
xchg
mov
fbld
loope
inc
xor
mov
sbb
mov
aas
sub
xchg
stc
sub
stos
stos
push
jge
mov
rol
enter
int
rcl
outsb
cli
jle
inc
sub
fildll
fld
mov
xor
pop
mov
add
ss
aaa
inc
jb
enter
jnp
fnclex
js
je
mov
mov
aam
jle
loop
or
pushf
cmc
popf
insb
leave
aas
inc
fbstp
mov
lret
mov
gs
sub
mov
ror
jl
cmc
jae
mov
scas
test
jae
sbb
daa
sub
xchg
xor
push
stc
push
mov
ret
cmp
fistl
icebp
adc
call
stc
mov
mov
mov
insb
cmc
js
andb
xchg
push
out
cltd
add
rorb
sahf
lahf
call
jle
adc
fwait
add
sahf
sbb
inc
inc
hlt
fsubrp
inc
sbb
cmpsl
pop
dec
dec
dec
lcall
cmp
mov
sub
popf
shlb
test
lret
imul
adc
xchg
movsb
nop
push
dec
xchg
addr16
add
inc
add
sti
sbb
xchg
push
popf
inc
cmp
and
push
cmp
mov
sbb
mov
bound
add
jl
cltd
clc
les
inc
or
shll
mov
adc
xchg
dec
fsubl
loopne
loope
inc
mov
cmpsl
testl
outsb
sbb
cmp
sahf
pop
mov
jb
pop
bound
cltd
bound
in
add
imul
cmp
add
fmull
aad
cwtl
or
repz
lcall
cmp
inc
pop
mov
rclb
filds
seta
out
xchg
fs
pop
popf
sbb
fdivr
jl
ja
lcall
adc
enter
pop
mov
jge
mov
cmc
sub
adc
xor
mov
in
add
mov
frstor
jae
sbb
pop
xchg
mov
xchg
add
mov
sahf
mov
jecxz
leave
jl
jns
call
inc
adc
xor
pusha
push
popa
xchg
divb
xor
mov
or
int3
cmp
sbb
mov
cmpsl
push
je
dec
nop
pushf
and
out
sbb
test
fcmovnb
out
pop
scas
mov
mov
bound
dec
lods
xlat
jnp
cmc
in
xor
inc
gs
pop
cmc
sub
adc
out
mov
scas
inc
mov
push
scas
aad
outsl
mov
nop
push
rcrl
xchg
lcall
dec
push
mov
daa
mov
mov
insl
mov
pop
mov
mov
nop
push
sbbb
pop
add
push
cwtl
sub
sti
jp
inc
sbb
xchg
push
addr16
xor
jmp
fisttps
ja
pushf
inc
inc
into
inc
cmpsl
mov
pusha
lret
rcrl
and
popf
addr16
xor
loope
cli
mov
mov
sbb
cwtl
mov
clc
movsb
mov
movsb
push
mov
int
cmp
cmc
xor
inc
dec
mov
loop
push
add
xor
jl
mov
andb
sbb
mov
pop
mov
or
mov
mov
ret
push
lds
sub
fidivs
pushf
mov
fimull
or
call
shlb
or
clc
sbb
popa
lds
out
cli
rcrl
ss
inc
mov
notb
or
lods
ja
dec
cmp
sbb
push
ficomps
xchg
popf
push
mov
mov
jl
js
mov
into
or
jle
fcmovnu
mov
inc
add
test
test
sbb
mov
and
cld
pushl
push
sub
loope
pusha
outsb
subl
xchg
mov
stos
into
xor
sub
sub
sahf
xchg
or
ficomps
addl
aas
filds
dec
mov
ljmp
sbb
cltd
loope
xor
rcrb
push
xchg
pop
pusha
cli
stc
xor
jp
inc
je
nop
jecxz
bound
sub
iret
sbbl
mov
push
rcl
in
repnz
push
jecxz
and
loope
pop
or
mov
out
cltd
mov
mov
adc
test
loope
xlat
adc
pop
mov
inc
adc
mov
sub
mov
sbb
in
or
ss
lock
nop
mov
jl
out
fdivp
mov
movsb
jb
test
or
mov
and
imul
stos
fcompl
push
jne
cs
ljmp
jnp
stos
jae
mov
and
inc
push
inc
push
out
pop
andl
ss
daa
pop
sub
movsb
ljmp
jecxz
lcall
xchg
ret
outsl
inc
mov
bound
push
fwait
lcall
and
push
out
mov
jmp
mov
fisubrl
shrb
sub
mov
pop
sub
dec
movsl
push
or
push
dec
jns
jle
cmp
mov
int3
xorl
leave
loope
ds
mov
pop
arpl
xchg
andl
cmp
sub
movsl
push
mov
insb
xor
mov
inc
repnz
push
fidivrl
jl
lock
ret
jne
jge
sbb
inc
negb
out
mov
mov
outsl
sbb
mov
lock
addl
push
xor
mov
push
sti
cltd
roll
ret
xlat
add
loope
in
outsl
xor
or
filds
cld
sub
add
jl
adc
cltd
leave
add
push
in
xor
mov
andb
out
adc
out
mov
inc
cmpsb
dec
inc
mov
out
xor
pusha
cmp
ret
dec
push
lods
stos
pop
pop
mov
arpl
daa
pushf
sbb
lods
xor
test
pop
mov
or
aam
js
mov
in
jo
outsl
mov
xchg
psubd
js
imul
inc
cltd
lea
ret
pop
xor
mov
and
jecxz
sbb
cmp
inc
nop
lock
jne
ret
jmp
leave
shlb
sbb
in
dec
std
push
fisubrs
jle
lret
inc
imul
xchg
mov
push
push
push
arpl
mov
bnd
jno
stos
add
cmpsb
mov
in
xor
inc
outsb
sub
mov
cs
inc
pop
dec
fdivs
stos
push
mov
call
adc
ljmp
fiaddl
cld
pop
add
test
mov
ret
leave
roll
cli
jbe
mov
inc
stc
jge
lahf
sahf
mov
push
mov
lods
enter
fs
sub
sub
mov
or
sbb
fcmovb
ljmp
repnz
adc
mov
push
notl
push
mov
mov
mov
jns
or
cmp
jp
and
push
cmc
pushf
sub
fists
cmpsb
jo
mov
and
adc
mov
neg
inc
sub
mov
pop
adc
sub
add
shrl
jno
test
jg
ljmp
jnp
add
cmp
xchg
ret
sbb
rcll
imul
ret
jl
push
aam
jae
shl
shlb
and
ficoml
es
push
cltd
and
int3
roll
fldenv
and
push
jno
cmpsl
repnz
lcall
cli
pop
stos
cltd
fwait
pop
xchg
je
sub
cmc
pushf
mov
push
push
jle
and
mov
fidivs
adc
add
int
xor
sbb
pop
mov
mov
dec
mov
repz
aaa
stos
jecxz
mov
mov
inc
jle
adc
sub
pop
iret
lock
jle
pop
pushf
daa
mov
xchg
repz
cltd
int
or
or
sbb
push
clc
lods
roll
cltd
aad
dec
mov
mov
test
idivb
addr16
mov
mov
add
and
fsubrp
xchg
mov
aas
sub
sbb
aas
cli
mov
rolb
gs
add
andb
and
fnstsw
ret
sub
bound
fs
pop
scas
mov
push
cmpsb
and
sub
aaa
dec
lahf
into
jmp
xchg
pop
add
fsubl
sbb
mov
jecxz
fstpt
ja
inc
fdivrl
shrb
sub
add
les
lods
xchg
cs
fcomps
mov
adc
das
jge
lret
xchg
cmp
push
xchg
fisttps
mov
fs
push
loopne
xchg
mul
repz
sub
int
xlat
daa
pop
lret
or
jge
xor
mov
shl
lahf
jle,pt
ret
clc
inc
fldcw
xchg
xor
int
xchg
xor
inc
jb
adc
push
fwait
out
xchg
sti
movsb
pop
adc
jge
inc
cmp
xor
fs
loope
jle
inc
stos
ds
and
shl
test
movsb
into
sub
mov
cmp
and
cmp
test
sbb
in
movsl
out
jo
out
inc
push
mov
stc
les
cmp
mov
int
divb
sub
pop
repz
scas
arpl
cmp
push
repz
icebp
jb
adcb
push
fwait
lcall
ss
rolb
leave
xchg
js
in
inc
cld
je
data16
mov
ret
cmp
mov
pop
iret
mov
mov
test
push
push
dec
cmp
mov
cmc
outsb
inc
sub
int
in
mov
cmpsb
sub
or
das
jle
and
dec
subl
xor
mov
push
int3
js
xor
iret
or
add
in
dec
jno
mov
push
fwait
jns
scas
xchg
mov
mov
pop
ss
filds
jno
mov
and
mov
xchg
sbb
popa
imul
mov
mov
outsl
mov
cmp
mov
push
or
popa
xor
icebp
jnp
adcl
pop
dec
xchg
mov
out
cmpsl
jl
in
ret
inc
in
jb
and
jmp
lds
out
mov
xlat
or
aam
sbb
pop
cmp
push
cmp
adc
mov
std
enter
sub
adcb
aam
mov
int3
jnp
test
cmp
rcl
cmp
addr16
jmp
inc
mov
fdivp
pop
sbb
push
flds
repz
sub
xchg
lods
mov
sti
addr16
add
loop
push
and
fwait
outsl
pop
and
pop
xor
cwtl
cmpsl
ftst
call
lods
dec
push
inc
jae
stc
scas
inc
jnp
inc
test
dec
push
sbb
mov
repnz
sbb
mov
and
mov
out
add
adc
dec
mov
jo
sub
xchg
dec
es
inc
popf
xor
pop
jno
loopne
leave
xchg
movsb
call
mov
cmp
fisubl
add
nop
xchg
add
js
sbb
or
jne
dec
cli
inc
and
sub
or
push
in
or
mov
and
xor
or
out
adcl
lahf
mov
pop
ds
scas
and
in
adc
rcrl
and
aas
add
sbb
ja
push
push
call
sbb
int3
sub
pushf
pushf
add
rclb
mov
push
idivl
xchg
cmpsb
mov
js
cmp
pop
popf
sbb
fsubr
fwait
xor
inc
push
ret
pop
outsb
add
cltd
sbb
or
cwtl
in
sbb
lea
or
cmc
jmp
decl
sti
or
adc
and
loope,pt
fwait
pop
shll
jno
scas
sti
push
js
ss
cltd
jns
ret
cmp
pop
or
in
pop
cs
lret
jle
jnp
aaa
mov
mov
lcall
inc
add
in
addl
adc
pop
xlat
das
es
popf
lahf
pop
out
mov
inc
cmp
sub
xchg
mov
inc
dec
mov
adc
cmpl
jbe
cltd
adc
pop
cmc
cmc
xchg
loop
xor
jmp
or
mov
ret
inc
push
dec
mov
jo
shr
cmp
testb
out
push
mov
dec
inc
jle
push
adc
push
pop
mov
int3
sbb
cwtl
push
pushf
mov
in
loop
or
outsl
stos
push
int
test
xlat
add
mov
inc
sbb
fidivrs
xlat
xor
into
mov
rcrl
fstp
cmpsb
and
add
addr16
pusha
icebp
ret
mov
mov
cmp
push
add
ds
imul
or
mov
fisttpll
mov
dec
movsb
scas
cmpsl
inc
shlb
jnp
and
inc
adc
shl
ds
fsubs
mov
testl
outsl
int
mov
xor
inc
cmp
fdivrs
jae
stc
jo
sbb
sahf
xor
jae
jns
testl
mov
push
mov
js
xchg
call
xchg
fcoml
lahf
push
push
shrl
shlb
daa
jecxz
pop
push
and
adc
mov
xchg
insl
xchg
insl
rcrl
lret
sub
repnz
insb
sti
aam
inc
and
sarl
and
cli
je
mov
mov
imulb
orl
mov
das
add
push
scas
aad
sbb
xchg
sbb
pop
ds
xchg
and
mov
mov
dec
xlat
movsb
idivb
push
call
dec
cmp
cmc
adc
aaa
aas
cs
daa
push
adc
push
test
mov
push
les
mov
imul
incb
inc
jl
fidivs
js
or
addr16
std
inc
lcall
push
incl
aad
and
jno
and
into
lcall
xchg
imul
jae
nop
les
and
mov
cli
mov
test
lods
stos
incl
and
and
cmp
out
test
fistps
out
fdiv
cs
jnp
lock
pop
push
ret
popa
fs
pop
ljmp
ljmp
out
fistpll
loop
cmp
ret
mov
push
mov
int
out
push
adc
mov
mov
imul
jbe
fists
ret
sub
shrb
sar
mov
mov
or
xchg
fxch
imulb
dec
add
out
cltd
cmp
sub
imul
stos
nop
inc
pushf
inc
inc
lcall
and
lods
inc
adc
not
icebp
mov
jl
mov
mov
ficoms
jno
mov
xchg
pop
jns
or
scas
test
mov
ss
test
push
shll
jmp
test
add
sbb
lret
inc
push
add
xor
cmp
dec
inc
cmp
sub
push
insb
or
push
push
hlt
test
jo
jp
enter
fs
pop
ret
push
xlat
subb
jne
ret
js
xor
adc
frstor
dec
mov
jno
call
loop
sahf
enter
cmp
cwtl
ret
sub
pop
push
rcr
movsb
mov
aam
mov
xlat
fwait
test
daa
mov
aaa
xchg
loope
push
mov
cmc
dec
dec
call
maskmovq
divl
outsl
iret
pop
inc
imul
icebp
les
push
and
test
imul
sbb
jecxz
mov
xor
dec
lds
lods
inc
ss
sahf
mov
inc
ljmp
sbb
cmpsl
sub
lcall
jmp
insl
bound
mov
fs
push
jns
fwait
and
jbe
lret
mov
xchg
daa
adc
and
inc
fstl
mov
sub
or
pushf
xor
cltd
ljmp
iret
popa
mov
jns
cmp
hlt
sub
mov
ret
cmpsb
mov
cs
push
mov
or
xchg
aad
lods
arpl
mov
mov
pop
cwtl
lock
push
test
out
dec
arpl
cmp
jne
lahf
or
sbb
mov
xchg
cmp
inc
xchg
out
test
int3
mov
push
shr
movsb
pop
inc
dec
lods
cli
push
mov
lods
sub
mov
push
test
imul
dec
daa
xor
outsl
mov
xchg
scas
inc
cmpsb
int
inc
pushf
mov
add
jnp
adc
mov
icebp
inc
cmpsb
add
mov
mov
xor
cmp
xor
adc
or
inc
push
loope
push
pop
push
in
sbb
cmp
jmp
out
movl
js
add
scas
and
leave
out
call
push
nop
add
pop
data16
je
or
ljmp
sub
sbb
pop
push
enter
mov
inc
adc
rep
imul
dec
push
sar
or
xor
sti
repnz
lret
sbb
hlt
push
fidivrl
xchg
fscale
test
loope
mov
adc
int3
sbb
pop
lods
insb
mov
add
daa
cmp
mov
add
jae
push
aas
sbb
or
stos
cmp
icebp
jecxz
rolb
add
leave
ds
fidivs
xlat
fsubp
adc
sbb
or
jl
cmc
pop
xchg
adc
rcr
dec
ficoms
fcmovbe
push
daa
and
adc
repz
in
aas
sti
ds
clc
scas
mov
cmp
lahf
das
mov
stc
data16
xchg
mov
imul
stos
pop
data16
mov
xlat
lret
repnz
mov
cmp
xchg
nop
mov
push
imul
in
stos
repz
cmp
mov
addb
iret
dec
xor
outsb
repnz
xchg
fldz
jno
jecxz
adc
push
sub
scas
push
repnz
pushf
imul
xchg
ret
icebp
xchg
imul
mov
in
popa
inc
in
cmp
movsl
in
test
rcl
mov
mov
flds
inc
and
test
je
xor
mov
mov
shufps
adc
dec
rcr
push
xchg
or
cltd
cmpsb
repnz
pop
cmp
or
jbe
clc
out
sti
xchg
int
mov
cmpsl
mov
xor
inc
dec
je
adc
adc
mov
outsb
enter
cmp
xchg
inc
inc
sub
shlb
mov
cmp
push
mov
push
insb
add
mov
in
pusha
repz
jbe
mov
jno
adc
adc
fdivl
mov
pop
mov
dec
jne
in
inc
aaa
mov
cmovo
mov
pop
and
aaa
fwait
stc
fldl
sub
sbb
or
not
mov
lock
std
add
mov
lcall
mov
cld
loope
test
add
push
insb
test
ds
xchg
insb
mov
push
test
notl
imul
sub
iret
jo
pop
inc
add
bound
inc
lcall
or
mov
lods
add
fcomps
aaa
mov
sub
cld
or
push
mov
stos
stc
add
ljmp
loopne
fsubs
cltd
mov
addr16
rorb
mov
push
out
xor
sub
adc
fadds
inc
cltd
add
dec
inc
xchg
xchg
pop
test
stos
mov
sti
popf
adc
cmp
inc
xor
jmp
cmp
jp
mov
jg
mov
rcrl
in
jmp
rcrb
mov
addr16
or
jl
enter
out
ror
or
mov
and
out
scas
cmpsb
fldt
inc
add
lret
in
mov
movsl
or
addr16
nop
shrl
fimull
xchg
les
push
jmp
jno
sub
stos
adc
pop
in
dec
jle
push
mov
aaa
fcmovu
out
mov
mov
hlt
jae
push
lcall
jecxz
mov
sbb
push
jae
cli
jecxz
fisttpl
jl
dec
jae
stc
mov
cmp
xchg
mov
sub
mov
sub
test
jno
dec
js
sbb
insb
xor
ds
lea
mov
out
cmpb
lret
sbb
mov
fisttpll
sub
cmpsb
push
jl
mov
dec
jno
shrl
sbb
pop
data16
sahf
push
mov
sbb
jne
push
cs
dec
fadds
fnstcw
les
imul
push
lea
sbb
mov
into
mov
test
dec
icebp
hlt
andb
jbe
push
cmp
call
mov
and
mov
jnp
fs
inc
jmp
sbb
push
cmc
sbb
fists
jp
sbb
inc
mov
subb
jnp
hlt
jne
push
mov
mov
sbb
testb
adcl
sub
inc
stos
and
jg
ss
repnz
shl
mov
xorb
add
dec
add
pop
or
ss
addb
aad
mov
in
xchg
xchg
pop
rcll
mov
add
jo
and
loop
jno
in
stos
je
adc
test
clc
pusha
mov
mov
cli
dec
hlt
mov
jp
inc
adc
xor
inc
xchg
sahf
or
loopne
mov
mov
dec
sub
pop
dec
cli
mov
lret
fnstenv
lahf
mov
add
hlt
test
mov
lock
cmc
outsb
stos
pop
push
sub
sub
and
push
sbb
dec
xor
sbbl
lods
pop
cltd
or
xchg
mov
pop
mov
jno
scas
mov
xchg
inc
sub
js
sbbl
lcall
xchg
or
movsb
aad
mov
daa
out
mov
movsl
pushf
cld
pop
cwtl
jmp
sbbl
pop
idivl
sub
fsubrp
std
inc
lcall
cltd
and
repnz
mov
lods
jbe
call
movsl
fisubrl
mov
sti
mov
pop
andl
push
insb
stos
jge
push
mov
lcall
pop
mov
insl
or
insl
adc
leave
mov
dec
xor
or
aas
mov
sbb
movsb
push
insl
adc
and
lea
mov
daa
add
mov
daa
out
fs
sbb
push
cmp
into
int3
mov
or
aaa
aam
jg
xor
push
xchg
ret
mov
ficoms
stos
cmp
dec
dec
pop
fistpl
cli
dec
fdivl
push
sub
pop
xchg
xor
nop
fsubr
fs
stos
mov
pop
roll
loop
leave
mov
mov
inc
in
lds
inc
leave
shrl
enter
fs
rclb
pop
lret
sbb
xor
add
inc
mov
pop
sub
js
mov
data16
pop
outsb
mov
push
and
mov
mov
xor
xchg
fsubs
ljmp
mov
pop
add
cmp
js
in
jecxz
and
or
xor
movsl
cltd
psraw
jmp
mov
add
ljmp
jge
repnz
jo
out
andl
xchg
icebp
out
add
repz
ds
jnp
and
sbb
in
je
aas
add
xchg
push
add
push
rorb
mov
fwait
lahf
aad
mov
xchg
lret
add
dec
adc
cmp
jno
pop
into
xchg
add
mov
enter
in
sub
cltd
adc
ret
dec
rcll
or
negb
jb
fildll
in
std
mov
xor
movsl
pop
lock
repz
ds
lret
pop
faddp
aad
add
movsb
ljmp
fcoml
xorl
pushf
rorb
pop
int3
test
inc
mov
hlt
out
sarl
mov
cmp
xchg
add
ret
jp
sahf
ja
int3
cmp
jmp
insl
lea
xor
sbb
lea
dec
aas
sub
push
lret
xor
lods
or
test
xchg
jge
test
jo
sbb
mov
sbb
aam
scas
loope
or
xchg
jne
inc
inc
orl
rcr
scas
enter
xchg
xchg
jmp
mov
add
xchg
fistps
or
orl
pop
jl
imul
js
push
cmp
imul
aam
stc
in
lea
adc
mov
xor
pop
jecxz,pt
cmp
lret
jge
xchg
sahf
jmp
inc
pusha
jne
lahf
sarl
push
es
out
jne
cmp
mov
and
lcall
inc
mov
aaa
cmp
cli
clc
divb
out
test
jl
pop
cltd
inc
jle
inc
and
mov
int3
aam
or
add
push
mov
pop
mov
mov
mov
loopne
sub
xchg
mov
data16
jno
emms
loope
push
pop
outsb
jecxz
xchg
insb
shl
mov
mov
mov
push
xchg
push
lcall
ficomps
enter
movsl
xchg
pop
popa
bound
addr16
mov
hlt
rcrl
cli
sub
xchg
xorl
shr
dec
les
pop
scas
lcall
mov
ljmp
ja
mov
xchg
jo
popa
adc
lcall
sarl
mov
mov
add
push
aaa
cwtl
mov
call
les
mov
mov
jp
inc
dec
pop
mov
xchg
xor
imul
inc
daa
xchg
dec
popl
int3
imul
mov
addb
insl
int3
and
repnz
add
sbb
int3
rorb
mov
mov
add
inc
dec
lock
push
gs
dec
push
outsl
bound
push
inc
cmpsb
and
sarl
xor
mov
and
mov
lea
sub
or
jge
push
xchg
fmuls
or
arpl
aam
sbb
arpl
push
mul
ret
out
je
mov
jae
es
out
bound
xor
push
pop
adc
imul
idivb
icebp
and
rclb
stos
or
pop
test
lret
and
xchg
or
inc
push
hlt
cmp
adc
sub
cmc
stos
scas
neg
leave
inc
jne
ffree
ret
adc
in
inc
dec
lret
jo
leave
jae
je
lret
ret
mov
shrb
std
ja
mov
dec
jbe
out
or
lods
inc
pavgw
mov
mov
push
and
jns
jp
push
cmp
mov
movsl
mov
pop
jge
pop
push
aad
and
xor
and
ds
inc
push
dec
and
js
rcr
mov
call
outsl
jnp
or
or
push
popa
pinsrw
mov
mov
imul
nop
sar
out
push
mov
jae
and
and
sbb
into
data16
inc
rorl
cs
insb
ljmp
add
roll
mov
rolb
mov
mov
lea
mov
sbb
dec
sub
mov
sbb
sub
dec
jno
cmc
clc
test
cld
adc
fistl
mov
jae
xchg
mov
xor
movsl
push
sub
jle
or
gs
das
icebp
cmp
outsl
in
cmpsl
jp
gs
inc
outsl
cmp
outsl
cs
les
sub
sub
xor
mov
inc
test
jae
dec
cli
cmp
fidivrs
mov
fsubrl
call
lods
gs
and
out
sub
jmp
push
fidivrs
adc
push
cwtl
sub
sub
std
cmp
cld
pop
movsl
and
cmp
and
jmp
loopne
shrl
insb
imul
push
and
call
dec
clc
repnz
inc
lds
inc
js
adc
ss
xchg
popl
mov
icebp
test
ret
int3
jmp
lret
sahf
lcall
mov
dec
inc
repz
inc
dec
andl
jmp
adc
jb
cmp
mov
sub
lea
cli
mov
testb
mov
jb
cld
push
cmp
jno
bnd
imul
and
sub
inc
popa
cmp
movsl
pop
jae
xor
xchg
cmp
add
lods
aad
leave
jmp
fstl
stos
sub
mov
add
ret
pop
inc
outsl
movsb
mov
sub
xor
and
cmp
mov
loop
mov
nop
stos
adc
aad
insl
jle
movsl
lds
sbb
popf
pop
jg
enter
pop
ds
dec
xchg
addr16
fwait
jge
add
lahf
mov
fadds
idiv
loop
repnz
shld
in
pop
dec
xlat
and
sub
add
loop
out
xchg
fadds
lcall
adc
pushf
out
cmp
push
xor
inc
sahf
dec
std
hlt
jmp
push
lock
lock
lcall
mov
sub
mov
mov
inc
out
sub
scas
int3
mov
leave
push
repz
and
dec
cmp
outsb
sub
aas
lock
dec
push
aad
sub
jo
sbb
les
out
pop
xchg
dec
adc
and
xchg
inc
out
and
mov
and
in
testb
shrb
pushf
jae
xchg
sub
jl
cmp
xor
push
sub
pop
ret
loop
sbb
sub
mov
aas
lahf
push
lds
mov
stc
test
roll
inc
subl
push
inc
and
scas
hlt
hlt
icebp
inc
stc
stos
jecxz
jne
ret
loop
lock
lds
xor
inc
data16
xor
orl
mov
lds
mov
jnp
or
dec
dec
add
es
or
je
lret
cltd
xor
into
fwait
mov
loop
jne
push
frstor
adc
movsl
nop
sbbl
dec
gs
xchg
mov
scas
in
mov
xchg
scas
lds
cmp
adc
sub
mov
lods
cli
dec
push
out
icebp
push
sub
rorb
mov
add
adc
faddl
push
iret
lcall
cmpsl
aas
pop
xchg
popf
mov
jbe
mov
les
add
cmp
cld
pop
ss
dec
or
clc
les
mov
arpl
dec
jmp
test
loope
add
xor
mov
fisttps
mov
movsb
dec
mov
loope
hlt
mov
sbb
mov
xor
arpl
scas
fidivrl
lret
or
popf
push
push
mov
or
in
aas
loop
cltd
mov
mov
pop
std
mov
addb
daa
xor
aas
cmp
ret
subl
sar
stos
lds
push
andl
inc
push
nopl
jno
aam
add
mov
xor
jmp
movsb
lods
out
push
sub
int3
sbb
push
aam
push
inc
add
mov
sbb
rorl
std
in
mov
inc
pop
insl
lcall
out
adcl
stos
and
movsb
fs
cmpsl
inc
lret
xchg
push
fildl
dec
in
mov
mov
dec
push
out
sbb
cmp
inc
or
inc
jno
mov
nop
add
pop
and
xchg
xor
mov
inc
sbb
repz
jo
push
adc
xor
fwait
stc
int
pop
cmp
repnz
adc
scas
sub
inc
negl
lods
dec
sarl
cmpsb
gs
or
and
xchg
rcll
jbe
sub
mov
cwtl
jae
mov
test
xchg
push
arpl
mov
out
dec
xchg
in
nop
pop
fwait
adc
or
jl
jge
pop
and
mov
inc
mov
lcall
insb
push
in
sub
out
setg
mov
pushf
imul
mov
stos
mov
xchg
add
mov
jmp
jmp
loope
cs
mov
push
sub
xchg
jns
and
stc
push
cmp
dec
inc
adc
adc
cmp
push
ljmp
mov
xlat
adc
push
jecxz
addr16
leave
xchg
mov
xchg
mov
fdivl
adc
in
xor
pushf
lods
addr16
sub
cmc
les
mov
mov
cmp
xor
das
call
xchg
jge
xchg
aam
enter
pop
and
je
lea
fsubs
stos
ret
mov
cmp
mov
inc
pop
out
popa
pop
xchg
jl
mov
mov
lea
mov
push
js
xor
lcall
mov
jns
mov
pop
pop
cs
inc
shrl
xchg
cmp
fs
mov
cmp
mov
popa
popf
mov
sub
pop
or
cmpsb
scas
or
inc
loope
bound
jge
test
add
cmp
in
or
cltd
nop
sub
dec
scas
ja
cmc
mov
add
stc
jb
popa
ljmp
shrl
lods
jge
mov
inc
in
xor
loope
or
jae
adc
mov
and
xchg
call
das
out
stos
ret
xor
dec
shr
xor
insl
add
ss
shl
lds
jecxz
pop
mov
push
je
mov
sub
aas
or
cmp
xchg
adc
repz
lds
mov
mov
mov
pop
or
pop
and
mov
les
out
inc
mov
popa
adc
icebp
je
push
lret
imul
mov
pop
nop
mov
fnstsw
dec
test
push
sub
call
cmpsl
dec
add
psubd
into
testl
mov
jb
sub
sbb
xor
sbb
stos
inc
lods
scas
pop
aas
in
dec
adc
pop
in
cmp
adc
sub
mov
inc
cs
sub
aad
mov
das
imul
mov
mov
adc
cmp
sbb
cs
inc
cmp
iret
das
inc
fmuls
push
mov
mov
xchg
sarl
add
repnz
rol
and
jne
inc
dec
add
add
out
pushf
cmp
mov
lea
cwtl
out
dec
add
in
imul
xchg
sbb
out
cs
clc
ret
mov
mov
sub
sahf
adc
push
sbb
mov
out
sub
lock
mov
mov
push
cmp
les
shll
cld
mov
cld
jg
xchg
push
lea
cs
or
jge
mov
aam
and
dec
insb
adc
mov
mov
pop
stos
inc
adc
test
push
sti
pop
insb
shrl
int
fstl
sbb
xlat
jno
aaa
mov
lcall
add
ret
lock
jb
inc
mov
cltd
in
sbb
pop
lahf
int
pop
retw
mov
orl
insl
aam
ja
xor
sub
xor
dec
or
lock
mov
or
cs
xor
sti
ss
inc
mov
andl
dec
rolb
xor
cmc
dec
cltd
lahf
inc
jbe
movsb
sub
notb
lret
xor
pop
cmp
push
je
sub
adc
inc
les
push
jmp
call
push
imul
jae
int
sti
inc
mov
and
pushf
fs
cltd
mov
push
inc
vpshufhw
sbb
movsb
adc
iret
or
into
lahf
loopne
hlt
push
shr
inc
ljmp
jg
mov
mov
int3
push
cltd
fdiv
push
sbb
pop
hlt
mov
fbstp
push
and
fists
inc
gs
iret
lcall
int3
mov
adc
arpl
pop
pop
enter
pusha
mov
movsb
jb
adc
mov
sbb
xchg
cwtl
inc
stos
and
add
cmpsl
xor
adc
mov
rolb
daa
incl
in
inc
lods
xchg
mov
bound
jecxz
xor
jbe
pop
bound
adc
popf
dec
xchg
popa
ret
gs
mov
and
jle
lcall
roll
lds
push
adc
cmp
and
push
mov
or
fisubrl
movsl
and
ror
les
mov
cli
or
in
xchg
out
sbb
push
ljmp
xchg
adc
jb
movnti
in
mov
cs
cld
sub
fs
pop
or
dec
or
inc
dec
xor
ljmp
xchg
iret
lret
test
pop
in
mov
xchg
and
jno
lea
mov
outsl
xlat
out
pop
jnp
insl
push
cltd
push
xor
jo
push
cmpsl
fwait
cld
push
pop
mov
into
adc
sti
dec
dec
mov
cwtl
jnp
outsb
std
xor
push
add
dec
mov
cli
cld
hlt
sbb
inc
xchg
jle
enter
in
dec
mov
movsb
push
mov
xchg
add
test
add
xor
test
add
mov
xchg
les
adc
and
lock
dec
test
fisttpl
clc
in
or
or
ss
sbb
test
push
sbb
mov
mov
xorl
fwait
or
mov
daa
push
xchg
sub
orl
mov
ds
stos
insl
xchg
mov
stc
pop
jae
or
inc
rorb
sbb
loopne
daa
push
pop
mov
mov
rcrb
adc
leave
adc
je
or
repz
je
cwtl
lods
aaa
sub
cli
lods
mov
lret
dec
pop
aam
sahf
in
inc
lret
jg
leave
outsb
out
pop
jge
fsub
test
pop
pop
divl
jp
mov
sub
rcrb
xchg
mov
mov
lcall
and
nop
dec
in
inc
mov
stos
rcll
push
cmp
imul
or
loope
pusha
fdivr
and
fwait
sbb
in
lock
add
mov
stos
mov
mov
xlat
fbstp
fisttpl
daa
fldcw
push
clc
daa
ror
divl
call
sub
aaa
rcll
ja
stos
dec
pushl
arpl
test
or
push
adc
data16
nop
sbb
mov
and
sahf
pop
test
lret
fisubl
test
out
scas
push
inc
dec
jno
jne
inc
push
mov
int3
sbb
push
sbb
daa
mov
dec
cmp
lea
arpl
es
and
mov
aas
lcall
dec
jle
jge
mov
mov
sbb
out
adc
int3
out
int
pop
shlb
into
cs
sbb
adc
imul
outsb
ret
aas
mov
ja
mov
aam
or
cmp
and
or
push
insb
std
pop
sti
mov
out
cmp
lahf
js
mov
ljmp
sbb
push
hlt
lds
imull
jae
mov
out
inc
jo
ret
mov
es
cltd
xchg
xchg
mov
sub
outsb
sub
or
pop
stos
cmp
jg
stos
in
adc
jge
add
pusha
mov
mul
hlt
outsl
mov
hlt
adc
lret
scas
jmp
cmc
mov
nop
push
mov
in
cli
push
fists
cs
enter
repnz
addr16
aad
jae
sbb
pop
wrmsr
je
mov
aas
js
sbb
push
mov
add
xchg
ja
adc
and
mov
cmp
dec
in
mov
arpl
fucomi
pop
adc
or
or
out
adc
and
ret
xor
test
scas
mov
daa
mov
add
jp
sub
imul
and
pop
pusha
add
repz
xorb
in
add
sbb
mov
repz
pop
push
mov
pusha
aas
loope
adc
lods
inc
addr16
mov
and
rolb
sahf
les
mov
aaa
push
pop
push
xlat
rcrb
jnp
ljmp
pop
dec
mov
call
mov
fiadds
push
cmp
shlb
sbb
jmp
ja
and
gs
mov
icebp
mov
pop
daa
pop
jo
cwtl
cmp
lahf
jp
cmc
push
mov
xor
mov
pusha
leave
sti
sub
fsubrl
pop
jns
pusha
in
aaa
pop
mov
mov
movsl
hlt
loope
out
rcll
mov
or
arpl
lret
movsl
inc
xchg
mov
xchg
out
out
or
scas
or
dec
rcl
or
or
xchg
xchg
xor
sub
imul
jg
cld
add
outsl
decl
jo
xor
pop
std
outsb
xor
cmp
adcl
push
cmp
mov
cli
jae
cwtl
outsb
inc
ds
jle
jb
addr16
cltd
std
lret
iret
or
js
addl
cli
sbb
pusha
lds
xchg
push
bound
jne
push
repnz
dec
cs
add
pop
dec
jnp
in
cmp
and
push
adc
nop
lods
dec
jb
into
ret
clc
push
std
jb
adc
jo
test
ret
ret
xor
out
sub
mov
out
inc
int3
popf
ret
xchg
or
inc
in
dec
push
mov
and
das
cmp
nop
add
xchg
or
jecxz
sub
ds
pop
je
fs
inc
aaa
inc
mov
call
add
inc
and
nop
aas
stos
mov
sbb
push
shr
cmp
lret
mov
into
mov
and
lret
mov
mov
mov
shrb
out
stos
les
push
mov
ret
add
shl
or
in
cmp
hlt
pop
mov
popf
mov
fstp
inc
mov
aad
fdivs
lcallw
and
es
jecxz
push
ja
or
rcrl
aaa
roll
add
das
mov
fidivrl
jb
mov
test
add
sti
inc
cmp
ret
cmp
sub
mov
inc
dec
and
pop
frstor
adc
popa
inc
loop
cld
fs
push
notl
xchg
mov
push
jo
pop
repz
aaa
push
or
jmp
in
inc
or
ja
mov
outsl
repnz
loope
out
repz
out
test
fs
rcrb
mov
dec
aam
sbb
xchg
adc
out
add
shrb
arpl
add
in
push
jb
stos
mov
xlat
shlb
mov
fsubrl
bound
cmp
add
mov
push
mov
sub
xor
bound
rorl
sahf
out
inc
jmp
lret
xchg
in
inc
jge
inc
jns
popa
push
dec
inc
or
cld
daa
pop
data16
sti
movsb
or
shl
mov
inc
pop
inc
pop
subl
call
insb
pop
dec
bndldx
fwait
out
mov
xchg
jno
faddl
add
lock
inc
test
sbb
add
mov
jae
xor
xor
jnp
mov
in
dec
clc
mov
pop
ljmp
mov
pop
xor
rorb
push
jb
insl
xor
mov
iret
or
decl
fnstsw
neg
dec
sbb
add
jno
sub
pop
call
push
and
push
test
les
lods
mov
cmp
and
sbb
cli
push
push
jg
inc
es
stc
push
add
xchg
shl
mov
pop
or
fistpl
loopne
pop
ja
out
pop
into
outsl
imull
cmp
arpl
dec
mov
pop
call
mov
and
xchg
fimuls
and
aas
dec
pop
leave
imul
xlat
and
cmc
test
inc
insl
xor
out
decl
dec
mov
sbb
bound
fldt
lret
fistps
mov
push
adc
out
pushf
mov
xchg
stos
dec
mov
pop
sub
cmp
pop
mov
ljmp
insb
sbb
into
push
pushf
out
jmp
cmp
addb
mov
jle
mov
inc
mov
and
in
mov
or
cmpsb
sub
cmp
cmpsb
cmp
cli
jmp
insb
pop
adc
das
mov
pushf
mov
cld
out
mov
fcmovu
addr16
enter
shll
xor
mov
es
loopne
call
fld
cs
popf
sub
mov
mov
inc
or
arpl
jle
push
mov
mov
and
jbe
pop
outsb
ljmp
sub
mov
push
mov
push
xor
loope
xor
inc
add
dec
outsl
in
adc
shrb
jl
dec
lret
dec
pop
out
and
pop
int
push
je
mov
lcall
test
inc
dec
inc
add
inc
push
jmp
call
cmp
dec
lcall
pop
js
push
insl
push
jge
out
cli
cld
pusha
addr16
cmp
cld
iret
dec
inc
or
inc
and
ja
out
inc
fimull
xchg
les
stc
test
sbb
cmp
adc
pop
int
xchg
sub
inc
scas
in
mov
pcmpgtb
aad
into
xor
mov
xor
aaa
popa
in
sub
and
fidivrl
mulb
lcall
shll
push
rclb
mov
mov
div
jecxz
mov
push
or
jo
sbb
or
sarb
mov
inc
xor
fdivl
jmp
scas
lcall
fisubrl
inc
sub
int
dec
aaa
xchg
sub
lock
push
xchg
jns
daa
push
xchg
repnz
cmpsb
bound
fwait
pop
enter
and
xchg
push
xchg
in
mov
mov
test
dec
clc
cwtl
push
repz
movsb
mov
or
push
test
insl
push
jp
jbe
les
and
imul
popf
les
adc
je
push
mov
ss
xor
pop
sub
imul
enter
loop
stos
or
sub
add
pop
mov
push
mov
aam
dec
pop
lahf
shr
xor
jbe
mov
daa
xchg
das
or
add
fwait
mov
jecxz
inc
out
aaa
imul
xchg
movsl
inc
ffreep
lret
iret
andl
popf
imul
popf
pop
leave
sub
nop
daa
adc
xchg
xor
inc
stos
mov
outsl
push
mov
mov
jl
pop
push
sbb
hlt
into
xor
add
xor
into
in
xchg
jmp
xchg
test
pop
jmp
dec
mov
xchg
movsb
lods
pop
jbe
sub
mov
fstpt
out
dec
xor
jmp
jnp
xchg
test
fsubrl
loope
push
fnsave
adc
ret
jl,pn
outsb
mov
cmp
and
ljmp
and
pop
dec
lds
jns
arpl
xchg
push
sbb
ja
xor
rorl
jecxz
popa
mov
pushl
int
cmc
xchg
inc
adc
shr
or
lret
out
dec
lcall
fadds
sbb
popa
call
xchg
mov
sub
cmc
pop
sub
mov
xor
pop
add
hlt
scas
test
adcb
or
int
out
sbb
ret
push
or
stos
in
jnp
cmp
sub
std
mov
stc
loopne
into
int
out
push
mov
lods
ljmp
jp
aad
aad
sub
je
sub
jp
xchg
pop
xchg
push
cvtsd2ss
push
push
enter
outsw
sbb
lods
cs
dec
sub
sub
pop
outsb
inc
jl
fsubl
nop
sti
imul
mulb
lahf
pop
int
lret
mov
inc
jbe
popa
sarb
pop
pop
mov
mov
cs
popf
inc
jge
mov
mov
cmp
mov
nop
mov
out
jmp
sbb
lahf
rcl
and
add
jmp
mov
lds
repz
std
sub
mov
mov
into
add
push
sub
cmpsb
mov
in
lret
or
sub
inc
inc
pop
lock
adc
test
roll
pop
pop
cmp
testb
mov
leave
adc
jo
lods
mov
adc
lahf
mov
pop
xchg
xor
and
inc
loope
jnp
popf
repnz
lods
scas
jecxz
push
call
ficoml
into
test
xchg
stc
inc
jmp
out
xchg
jb
push
xchg
sub
mov
xchg
insb
mov
es
outsl
mov
roll
cmp
sbb
fnsave
dec
mov
int
mov
mov
inc
pusha
push
gs
fstpl
repz
scas
shrl
pop
xor
dec
ds
sbb
sti
mov
addb
stos
mov
sbb
mov
cld
cs
mov
mov
popf
fidivrs
loope
add
hlt
fcomi
jge
xchg
out
push
lcall
mov
push
jge
sub
xchg
inc
in
xchg
fucomp
dec
aad
mov
call
sub
lret
mov
sbb
or
adc
aad
mov
sarb
in
repnz
sub
daa
orb
clc
jecxz
stc
aad
dec
jne
popa
mov
add
into
mov
or
orl
es
xchg
fwait
out
cmpsb
mov
filds
push
lahf
xchg
lods
scas
lea
pusha
cld
icebp
out
fimuls
icebp
xchg
movsb
adc
xchg
scas
icebp
das
in
inc
std
ds
and
pop
xchg
cltd
xor
ret
xor
leave
stos
dec
jg
out
pop
les
jge
push
pushf
movsb
aad
dec
sahf
bound
out
out
data16
std
jge
jge
mov
cmp
jno
lret
mov
mov
stos
cli
cmpsb
call
mov
mov
adc
cmp
push
cmpsl
and
and
dec
push
dec
inc
test
out
je
cmpsb
lock
pop
outsw
sbb
pushf
inc
jno
and
or
jo
incb
inc
outsl
outsl
pop
xchg
cmp
push
mov
fimull
xor
mov
adc
inc
sub
iret
and
mov
lea
lods
les
cmp
push
and
popf
imul
out
xchg
fdiv
je
jmp
loopne
fs
scas
mov
fisubrs
rorl
adc
add
mov
lods
adc
das
sbb
mov
out
push
notb
popa
imul
or
sbb
push
mov
test
add
inc
mov
ret
std
addr16
mov
adc
mov
xlat
divb
das
sbb
and
stos
jae
dec
test
fistpl
mov
fcmovnbe
jl
push
int
fdivl
arpl
int
iret
out
pop
mov
cwtl
test
es
out
sub
mov
test
inc
aam
test
pop
sub
insl
push
cmp
jg
adc
and
adc
lcall
pop
or
adc
ret
mulb
xchg
imul
mov
cmp
fsubl
out
inc
add
cmp
sahf
mov
cltd
ficomps
adc
aam
push
mov
out
add
inc
cmc
mov
dec
into
lock
sarb
aas
into
shrb
mov
das
adc
jae
dec
xlat
xor
hlt
or
mov
pop
lods
es
arpl
lea
js
xor
mov
jbe
fs
sub
loope
cs
push
scas
ss
sahf
mov
das
jo
ret
cmp
or
mov
cmc
shlb
cmpb
jne
mov
sbb
inc
out
push
inc
xor
cmp
popf
leave
cmp
adc
and
mov
add
xchg
ficompl
insb
aas
or
mov
xlat
push
adc
jns
mov
dec
mov
jge
std
inc
pop
inc
std
fisubrl
xor
nop
repz
ljmp
mov
mov
mov
repnz
bound
add
fdiv
dec
or
fists
sub
cmovg
ficoml
loop
scas
divb
imulb
gs
int
rcrb
pop
pop
outsl
mov
and
lahf
jl
mov
inc
sbb
pop
inc
cltd
or
cmp
in
das
sub
add
mov
loope
cmpsl
pop
jge
repnz
jg
int3
jbe
fwait
xchg
mov
adc
dec
imul
xchg
xchg
dec
mov
fisubl
mov
scas
xor
sbb
popa
jae
mov
pushf
jne
clc
xor
lock
lahf
mov
fdivl
aaa
pop
mov
and
and
lret
mov
mov
push
push
mov
jns
ficomps
jge
pmovmskb
aaa
dec
cld
das
and
shll
inc
push
cmp
sbb
push
fwait
aam
popf
mov
push
sub
push
xchg
xchg
mov
inc
adc
mov
pusha
jl
push
dec
push
adc
add
stos
push
rorl
pusha
repz
cmp
daa
orb
lods
andl
add
fildl
in
orb
insb
stc
sbbb
shl
xchg
push
and
sub
lods
xchg
scas
cmpsb
jnp
repz
jmp
mov
push
leave
push
mov
mov
jmp
mov
imul
mov
or
sub
push
dec
outsl
mov
push
mov
inc
mov
int
out
inc
dec
addr16
fucomip
test
xchg
adc
ret
jg
stos
dec
dec
sahf
sbb
out
mov
sub
bound
and
aas
pop
inc
jb
add
mov
adc
push
xor
push
insb
xchg
in
xchg
lods
sbb
lcall
jl
cld
out
mov
jmp
mov
mov
cmp
ds
addr16
push
push
sub
mov
in
inc
mov
mov
flds
xchg
sbb
push
or
push
jne
repnz
lahf
test
adc
lods
into
sti
jp
adc
mov
outsb
sbb
sub
ljmp
mov
mov
pop
mov
ret
negb
mov
push
cmpsb
ss
dec
xor
adc
sub
int
cmpl
sbb
cld
and
roll
notb
push
sbb
lea
sarb
xor
mov
fs
fidivs
push
cmpsb
xchg
mov
and
leave
xlat
inc
xchg
xor
imulb
and
jne
xchg
rcll
push
lods
add
mov
mov
mov
xor
mov
in
js
negl
push
shr
sub
ret
xor
repz
insl
scas
xor
cmp
bound
push
fstl
jo
mov
mov
fwait
mov
out
mov
cs
sbb
stos
mov
into
add
mov
lahf
lahf
pusha
add
aas
iret
jecxz
push
mov
xchg
inc
fistl
adc
loopne
testl
sbb
jge
loop
mov
outsb
sti
inc
mov
mov
cmc
popa
mov
jl
stos
push
lcall
outsl
mov
jnp
adc
xchg
pop
pop
mov
imul
repnz
pop
imul
mov
push
adc
add
and
cli
cwtl
cwtl
inc
xchg
cmpsl
filds
sbbb
xor
xchg
xchg
icebp
mov
fadd
cmp
mov
cmpsb
ja
push
cltd
stc
fstl
and
and
or
lret
insl
xor
jno
xlat
pop
cmp
dec
adc
outsb
dec
xchg
inc
and
icebp
and
enter
iret
jo
jp
mov
adc
cmp
in
lds
xorl
and
mov
mov
xchg
out
outsl
xlat
enter
addr16
dec
mov
and
stos
and
push
push
out
shr
out
popf
cltd
stos
jno
rcl
rcrb
xchg
sub
jae
jmp
pushf
mov
cmp
pop
fwait
ret
sbb
pop
hlt
sbb
insl
xor
imul
lods
jb
cmpsb
scas
pusha
out
repz
fiadds
cmp
cwtl
faddp
or
pop
popf
or
xchg
js
nop
call
pop
cwtl
mov
xchg
iret
dec
push
aam
loopne
test
sbb
and
dec
push
push
enter
sub
or
add
std
icebp
in
aam
jecxz
mov
adc
jecxz
notl
pop
cmp
mov
push
sbb
xchg
out
mov
stos
or
cli
cmpsb
cmpsb
sti
mov
add
cmp
jne
xor
lahf
mov
outsl
push
daa
and
shrb
sahf
insl
insl
sub
stos
std
adc
mov
ljmp
jecxz
pop
jl
idiv
mul
mov
addb
jge
jae
loopne
cmpsl
mulb
or
push
jge
test
pop
in
test
add
sahf
rclb
lods
cmp
cld
inc
iret
mov
es
jae
add
adc
popa
add
dec
and
repz
mov
jmp
in
mov
jo
in
mov
out
je
or
xorl
lahf
sbb
insb
ja
stos
sbb
push
in
adc
xchg
push
push
and
inc
idiv
addr16
xchg
and
and
pop
lods
lods
push
out
xor
xchg
inc
int
es
imul
int
out
pop
pop
int
enter
mov
jbe
outsb
xor
sti
arpl
fwait
mov
xlat
sbb
xchg
or
xchg
popa
push
fwait
dec
push
lcall
fs
orl
dec
enter
mov
xchg
mov
or
inc
aad
add
pusha
xor
insl
sub
xchg
xchg
and
mov
dec
jle
scas
iret
stos
pop
cmpsb
sahf
iret
mov
test
and
inc
loope
sbb
adc
jle
loope
fiaddl
xchg
in
pop
cli
notl
mov
negb
jne
out
cmp
push
xchg
sbb
mov
sarl
ljmp
jmp
mov
mov
leave
call
sub
in
sbb
lahf
mov
mov
mov
jno
cwtl
outsb
jo
xchg
int
in
lods
ss
pop
pop
pop
sbb
psubq
inc
dec
dec
cmpsb
idivl
in
fistl
dec
cmpsb
loope
mov
jge
mov
pop
or
cmp
jo
ror
pop
mov
xchg
dec
loopne
stos
subb
aaa
push
gs
mov
sarb
cmp
popf
pop
dec
sarl
push
and
rcrl
arpl
sub
pop
push
cld
pop
sub
jno
sub
pop
movsl
add
mov
faddl
sub
pop
or
fimull
fcomps
roll
mov
mov
inc
hlt
cmp
sub
push
in
add
popf
cmc
add
push
cld
int
cld
ficoms
lret
jne
lock
mov
add
or
mov
push
call
and
stos
mov
dec
push
cli
pop
pop
push
cmp
xor
jmp
mov
or
lds
jge
xor
cltd
xor
sub
jle
imulb
cmpsl
sbb
mov
mov
aas
lods
sub
cs
mov
mov
divl
or
daa
pop
dec
and
sub
xchg
call
lret
ja
and
daa
or
mov
dec
sbb
push
xor
test
ret
jmp
clc
je
add
insl
fldl
and
dec
add
imul
lret
incb
gs
push
ljmp
jns
pop
inc
int3
cli
push
jns
sub
or
shr
and
xchg
jne
pop
in
mov
mov
ss
push
push
xchg
jae
push
imul
sbb
rcrl
jmp
xor
scas
xchg
enter
std
jb
sbbb
mov
mov
mov
sbb
or
or
push
inc
mov
sbb
push
insb
fwait
lret
aam
adc
shll
pop
cmc
mov
mov
inc
pop
pop
xor
xchg
jb
mov
popa
push
xchg
cmp
ret
mov
idivl
mov
fbstp
notb
sbb
ds
out
or
mov
mov
fdivr
das
jge
adc
add
push
xchg
push
out
dec
inc
in
pushf
pusha
scas
pop
and
xchg
sbb
lods
push
jle
or
and
clc
iret
dec
sub
fs
xchg
ljmp
notb
inc
sub
mov
mov
add
fcmovne
add
stos
push
or
inc
test
inc
loope
leave
je
stc
xchg
mov
xchg
sub
push
lock
leave
push
inc
and
mov
push
pop
iret
mov
sub
push
or
bound
push
pop
ja
or
xchg
jae
aas
jle
lods
in
pop
add
and
and
push
and
mov
mov
xchg
jmp
je
stc
addl
push
lret
hlt
outsl
lcall
jp
jle
xchg
add
fwait
sub
sub
popf
lods
cmp
imul
lret
sbb
or
movsb
and
cmp
jne
dec
filds
push
push
cld
mov
push
pop
mov
xchg
jo
es
punpcklbw
push
dec
mov
adc
jo
jg
inc
addr16
ret
or
mov
in
aas
jns
loopne
lods
inc
rol
pusha
arpl
outsl
fsubr
push
add
push
in
and
mov
or
into
ja
mov
in
xchg
icebp
or
inc
insb
lods
push
or
pop
fnstcw
xchg
or
loope
cmpl
sub
pop
repnz
pop
subb
test
jo
mov
push
pop
jmp
subb
das
cmpsl
pop
nop
dec
insb
add
and
in
iret
fdivrl
sbb
jno
push
mov
jg
roll
clc
fucom
test
inc
aas
in
adc
outsb
mov
das
ds
sub
out
xchg
inc
insl
nop
in
or
adc
addr16
outsl
outsl
insl
inc
lret
cmp
out
and
test
sbb
ds
cmp
out
pand
xor
rorb
adc
and
sarl
dec
fisubrs
inc
inc
sub
sahf
jns
inc
sub
lds
adc
push
pop
mov
scas
fadd
jo
push
in
mov
xchg
imul
jne
push
sub
jl
dec
mov
int
mov
insb
lods
cwtl
adc
int3
icebp
mov
negl
gs
mov
aaa
ror
shr
movsb
out
add
lret
sbb
or
push
and
addl
jno
pop
into
out
xor
xor
inc
push
jmp
fisubrs
lods
movsb
jmp
fcos
and
imul
cmpsl
jnp
movsl
int
cli
cwtl
inc
add
jbe
xor
dec
insb
movsb
adc
repz
sti
mov
loop
dec
addr16
pop
rcl
mov
inc
lods
int
mov
fs
ljmp
lock
jo
xchg
cmc
daa
dec
mov
jmp
cmp
mov
mov
das
inc
fdivrs
aaa
cmp
mov
inc
sbb
mov
push
test
jmp
push
test
mov
ja
in
and
bswap
mov
in
inc
leave
inc
jp
fidivs
adc
xor
cvtps2pd
sahf
push
mov
cld
stos
mov
mov
icebp
loop
pop
out
imul
pop
pop
in
fsubrl
repz
fcmovbe
dec
xor
insb
sbb
mov
ljmp
xchg
and
adc
fldcw
mov
mov
xor
adc
movsb
mov
fidivrs
sbb
inc
add
in
lock
xor
inc
jp
fs
push
jg
cmp
sub
xor
sti
adc
and
sub
lods
imul
mov
jmp
sub
and
mov
jl
pop
scas
lret
cmp
xor
pop
jns
pop
outsl
stos
ja
mov
or
div
loopne
push
movsb
hlt
lock
mov
mov
xor
adc
rcll
lods
pmaddwd
sub
add
into
in
iret
and
pusha
sub
mov
stos
fwait
stos
pop
adc
notb
inc
jg
mov
sub
jne
xor
add
or
fwait
popf
repz
mov
xor
insl
ss
jge
psrld
roll
sbb
xchg
pop
aas
add
leave
mov
add
orb
js
push
lds
mov
jle
inc
xchg
cmpsb
inc
es
pop
mov
jg
mov
idiv
loop
or
jl
add
daa
shll
shrb
sbb
mov
xor
jl
int3
outsb
or
pop
inc
orl
push
cmc
fnsave
cmc
sbb
push
mov
lds
sbb
clc
sub
mov
lea
dec
fcomi
or
xchg
adc
jmp
xor
les
sub
icebp
rcll
dec
in
add
lcall
cld
push
sbb
dec
sbb
imul
push
mov
inc
imul
or
cmp
iret
add
das
xchg
push
cltd
cwtl
sbb
pop
daa
lahf
lea
pop
sbb
aas
mov
xchg
outsb
mov
movsl
jnp
push
out
test
dec
mov
fistpl
sub
ds
mov
push
dec
in
pop
icebp
sub
repz
call
inc
dec
push
lock
push
xor
outsb
dec
sbbl
test
sub
fcmove
enter
jmp
and
loope
hlt
in
push
xchg
xchg
push
bound
sarb
daa
insb
lods
scas
sarl
add
cli
mov
sbb
lds
jge
imul
fimull
shll
cmp
pop
lret
loope
das
test
sub
cmpsl
dec
out
xchg
aas
cmp
add
int
scas
xchg
jp
sub
stc
pop
es
rolb
and
aad
and
xchg
popa
mov
cmpl
lret
pop
fstpl
movsl
int3
aaa
pop
movsl
dec
ss
pop
repnz
rcrl
imul
inc
roll
push
cmpsl
pushf
ljmp
adc
jno
imul
call
jo
or
jmp
ror
add
jno
mov
and
jno
xor
das
ljmp
push
js
xchg
lock
leave
lcall
mov
and
cs
scas
jo
mov
mov
xchg
jnp
jecxz
dec
lods
and
addr16
lock
jmp
and
inc
ss
sbb
xchg
sti
lods
inc
out
js
or
mov
int
xor
or
fs
andl
into
push
mov
jno
push
loop
cwtl
daa
inc
icebp
sti
cmpsb
ljmp
or
sub
dec
push
cs
mov
sbb
test
clc
adc
adc
mov
mov
leave
mov
push
dec
pop
in
popf
mov
lcall
push
cmp
mov
loopne
movsb
sub
mov
push
cmp
add
hlt
imul
int3
inc
test
das
fs
cmp
std
xchg
xchg
aas
lds
mov
mov
dec
sbb
loopne
js
imul
mov
xchg
adc
mov
jg
sbb
rcll
and
xchg
dec
lret
adc
data16
out
lahf
mov
test
dec
js
outsl
lcall
shrb
lret
mov
call
lods
mov
repz
cmp
sbb
push
jne
dec
insl
mov
addr16
jle
mov
movsl
scas
std
fstl
jl
jge
ljmp
das
xlat
jge
hlt
sbbb
jns
lahf
outsl
iret
push
stc
outsb
lds
fnstcw
inc
andl
dec
jo
stc
inc
gs
in
outsl
adc
mov
push
cli
lret
pop
push
and
loope
mov
and
dec
mov
stos
add
jmp
movsl
or
cmp
adc
add
push
fucom
jle
pop
adc
fs
ss
xchg
pop
cmp
dec
or
and
stos
xchg
leave
mov
jno
das
dec
mov
ss
mov
je
lcall
jo
gs
mov
out
lahf
push
cwtl
daa
sub
xchg
jnp
out
adc
pushl
scas
mov
push
mov
inc
xor
ret
add
xchg
pop
mov
jmp
push
lods
cmc
adc
test
push
lds
cmc
jmp
mov
inc
aaa
xor
clc
adc
in
hlt
test
sub
fwait
adc
mov
xchg
pop
sbbb
mov
add
imull
adc
pop
loope
adc
sub
and
mov
dec
mov
inc
adcb
jecxz
or
cmc
add
sbb
in
out
jne
scas
sub
mov
sti
imul
mov
mov
cmpsl
inc
les
mov
loopne
xor
inc
fisttps
lea
sbb
push
scas
int
das
jnp
pop
pop
add
xchg
cmp
lahf
add
fwait
aad
dec
dec
push
dec
repnz
jl
pop
xor
mov
cltd
sub
dec
jle,pn
arpl
or
fadd
cmpsl
mov
pop
cmp
push
lret
sbb
popa
or
mov
loope
popl
lods
rcr
cld
jg
data16
inc
mov
mov
pushl
xchg
inc
or
push
shl
cmp
or
sub
in
pop
imul
loope
push
iret
cmp
push
fists
sarl
push
enter
nop
orl
iret
push
push
ljmp
lret
sbb
mov
lcallw
dec
movsb
push
add
jno
pop
sub
cld
inc
add
cld
jecxz
mov
stos
int
fadds
mov
icebp
pop
ret
xchg
lahf
cmpsl
scas
dec
sbb
xor
fimull
repnz
mov
cmp
pop
sbb
pusha
iret
aad
andb
jns
pusha
cwtl
fnstenv
or
stos
dec
xchg
int3
pop
mov
mov
sub
in
lret
adc
jno
xchg
lods
mov
aaa
jmp
adc
cmp
pop
jle
xor
cmp
push
mov
and
hlt
lcall
repnz
call
loop
push
xchg
cs
fnsave
lock
push
in
in
cmc
insb
xlat
and
call
je
lret
insl
std
mov
pop
sub
jmp
inc
fldl
mov
popa
push
mov
cmp
cmp
scas
repz
stc
dec
sbb
xchg
fstpl
pushf
dec
fdivrl
jle
mov
orb
push
xchg
cwtl
jae
es
dec
test
cmp
mov
inc
and
and
loope
pop
push
cmp
push
mov
push
bt
jns
mov
fildl
pop
xor
pop
sub
scas
jmp
mov
adc
sbb
jmp
cmp
jns
and
rcrl
mov
sub
scas
aas
mov
pop
ret
outsb
sbb
and
xor
fcomps
mov
push
pop
mov
pop
sbb
and
push
push
or
aam
cmp
push
cmp
jae
cmp
jge
lahf
and
cli
ret
xchg
jp
add
fcom
jae
dec
or
out
movsb
icebp
push
dec
scas
nop
arpl
and
addl
sbb
cwtl
popf
jp
fildll
dec
imul
mov
or
fcompl
or
pusha
xchg
sbb
xlat
shr
movsl
mov
or
adc
inc
xor
inc
loopne,pt
sbb
sub
pop
enter
rclb
fs
loope
mov
aam
sub
adc
lods
scas
stos
sbb
add
push
cmp
cltd
mov
mov
test
dec
add
xchg
mov
mov
jle
jne
jg
add
insb
jge
mov
cmc
mov
adc
or
jp
jno
cli
sar
inc
cmovne
iret
insb
clc
int
jmp
imul
test
out
clc
pop
lcall
jmp
pop
ret
push
out
jp
sub
aad
jle
orl
pop
inc
mov
fxch
jae
cld
or
mov
pop
ret
sbbl
inc
xchg
mov
xchg
insl
add
pop
out
or
mov
shr
and
dec
lea
inc
mov
add
hlt
cmc
mov
lods
std
cmp
push
hlt
popa
push
imul
xlat
and
movsl
std
dec
adc
inc
cs
in
movsl
pop
sub
jge
ret
fs
fists
fbld
jb
pop
jne
and
adc
roll
lcall
jge
mov
inc
pop
mov
dec
insb
rcrl
js
outsb
xor
or
fcmovnbe
scas
cmp
mov
and
add
andl
jnp
aam
out
fimull
daa
push
mov
push
mov
add
cli
push
sub
repnz
mov
out
sbb
notb
mov
andb
icebp
lock
inc
jo
mov
xlat
sub
insl
inc
push
jl
ss
rorl
sti
rorb
lcall
rclb
test
call
jecxz
mov
and
xor
pop
mov
mov
rclb
test
insl
or
test
shlb
cmp
fisttpll
imul
push
fdivs
dec
xor
cmp
pop
fnsave
les
adc
xchg
push
dec
cli
pop
push
mov
lahf
mov
cld
or
aad
int
cld
vhsubpd
sbb
mov
and
ds
cmp
negb
outsb
popf
push
decb
les
daa
pusha
cld
test
jbe,pn
inc
sbb
push
add
push
or
dec
jne
and
adc
jmp
lcall
ret
int
push
push
insl
and
insb
rcr
stc
fwait
xchg
ror
or
push
loope
pop
xchg
shrb
movb
mov
push
cmp
stos
and
xchg
mov
push
mov
stc
mov
mov
sub
sub
gs
fdivrl
inc
or
adc
mov
out
xor
ljmp
fucomip
lcall
mov
xlat
sbb
scas
jle
cwtl
test
leave
and
ljmp
inc
int3
test
push
and
ss
jmp
xor
push
mov
xor
stos
or
and
das
or
sub
fwait
jne
adc
sub
cmpsl
nop
dec
mov
mov
push
mov
loopne
shll
push
xchg
mov
and
leave
and
mov
mov
dec
mov
aad
movsb
cs
push
add
inc
cmpsb
lds
popa
mov
push
jne
in
rorb
arpl
jb
cmpb
bound
popa
push
fcomps
sahf
shrl
add
js
inc
add
add
scas
loop
dec
mov
sbb
mov
xchg
fdivrp
inc
jg
mov
jbe
xchg
sub
mov
mov
inc
ljmp
pop
push
popf
mov
lds
mov
pop
adc
mov
add
xchg
out
lock
mov
sub
pusha
fsubrp
mov
popf
dec
sub
lods
iret
mov
xor
cmp
or
shrl
mov
jmp
mov
dec
or
jle
pushf
dec
ffree
jns
push
jb,pt
gs
adc
mov
sbb
lds
sbb
sbb
pushf
mov
xchg
cltd
xor
ror
xlat
sbb
adc
jne
pop
jo
sub
mov
out
jl
fadd
jge
shl
fnstenv
dec
sti
jb
imul
jb
sub
lcall
push
xchg
ret
jo
dec
mov
lods
pusha
jb
outsl
fisubl
out
add
enter
rcrb
sub
pop
out
pop
add
jne
push
stos
dec
pop
leave
popa
int3
xor
sbb
jns
inc
push
add
inc
push
inc
sarl
pop
sub
es
les
mov
mov
ja
imul
outsl
jge
xchg
mov
mov
cli
test
inc
adc
push
xor
cltd
xchg
adc
sbb
idiv
xlat
dec
test
cmp
mov
adc
jge
mov
adc
sbb
pop
ljmp
pop
sti
sar
adc
cmp
mov
mulb
pop
lock
mov
adc
cmp
cmp
movsb
je
xchg
mov
add
sbb
or
mov
nop
pop
xchg
mov
js
inc
jnp
cmpsb
sbb
in
in
jbe
hlt
aas
jge
mov
sahf
adc
addl
in
std
mov
adc
and
aaa
int3
sbb
push
xchg
jb
or
fcmovnb
sbb
jb
jnp
popf
xchg
jne
adc
test
lret
icebp
xchg
push
jbe
push
push
xchg
mov
enter
cld
fldcw
sar
adc
push
mov
sbb
shlb
ret
push
bound
mov
and
cmp
or
mov
movd
data16
cmpsl
test
jmp
rcll
test
insb
xlat
xor
es
inc
pop
mov
adc
add
insb
bound
testb
outsb
mov
dec
imul
cmpsb
adc
dec
into
adc
add
mov
cmp
cmpsl
jge
mov
sub
je
push
mov
pop
jecxz
adc
xor
call
into
pop
or
jl
push
cmp
pop
scas
dec
xor
jle
cld
xchg
pop
repz
ret
sbb
add
push
dec
fisubl
leave
popf
inc
sub
jae
loopne
scas
cs
sbb
push
jg,pn
stos
popf
jne
roll
jns
test
mov
pop
mov
clc
push
or
fdiv
and
mov
sub
mov
fnstsw
mov
pusha
sbb
clc
imul
sub
xor
sbb
out
lret
and
cld
xor
inc
jle
mov
and
stos
pop
cmp
lods
mov
jo
pusha
push
cmc
jbe
shlb
mov
aaa
sbb
pop
dec
pushf
lods
add
dec
push
fwait
cld
mov
push
sub
shrb
add
aas
aad
jp
frstor
fcoms
jno
pop
xor
adc
mov
jmp
push
xchg
pop
and
sahf
test
add
and
pusha
mov
dec
mov
push
mov
shll
mov
sub
inc
push
loop
sub
cmpsl
push
mov
mov
ja
add
sbb
mov
imul
mov
testl
mov
leave
cmp
lock
mov
sar
scas
sbb
aas
mov
xchg
stos
and
jecxz
out
jmp
dec
rorl
imul
dec
dec
repnz
fidivrl
fisttps
pop
pop
arpl
subb
rorb
daa
lcall
push
call
aaa
push
js
adc
jg
pushf
mov
mov
adc
cld
addr16
test
or
test
bndldx
xchg
popf
cmpsl
push
and
jnp
dec
ljmp
sbb
xchg
lahf
loope
add
outsl
push
cmc
inc
addr16
mov
lret
xor
enter
dec
out
or
int3
stos
sub
in
mov
lea
cmp
cwtl
mov
adc
lret
adc
adc
mov
fisubs
fstp
inc
out
xchg
xchg
lods
call
and
stc
roll
xchg
pushf
mov
sub
lods
lock
jb
out
or
ret
sti
jmp
xchg
and
in
pop
push
xchg
mov
test
setbe
xor
addb
push
aas
cltd
push
icebp
pop
sahf
push
add
mov
add
cmpsb
fisttps
inc
pop
jns
and
sub
fcompl
mov
inc
out
sbb
fadds
jge
je
imul
inc
rcrb
into
dec
mov
cs
adc
insl
loop
adc
pop
cmpsb
lret
cli
sbb
add
push
mov
lods
jno
pushf
es
inc
cs
add
jg
test
cmp
cmp
jnp
push
hlt
jg
cltd
cmpsb
sbb
les
fcoms
adc
scas
fsubs
and
push
loopne
icebp
mov
cmpsb
pusha
push
adc
and
hlt
cmp
int
scas
leave
mov
cwtl
cmp
in
sub
jnp
inc
fcoml
sarb
rcr
in
aam
sahf
ja
add
sbb
hlt
push
nop
fildll
loopne
test
hlt
mov
subl
push
loop
clc
push
mov
xor
stc
adc
dec
dec
in
js
sbb
scas
scas
das
pop
shl
cltd
and
jnp
xchg
inc
pop
and
mov
loope
inc
push
fistpl
jae
mov
mov
adc
aam
and
mov
jp
jp
jecxz
xchg
push
mov
imul
mov
push
cmp
mov
rcrl
dec
ret
stc
test
out
fstpt
fcmovbe
and
out
hlt
jecxz
xchg
cs
pop
xor
jns
mov
mov
mov
cmp
dec
and
lods
ss
sbb
mov
mov
loopne
out
imul
fldl
in
jle
and
xor
jecxz
dec
cmp
xchg
adc
mov
cmp
push
mov
cmp
inc
fldcw
adc
dec
xchg
add
movsl
das
out
mov
scas
dec
mov
mov
fstpt
xor
cld
out
push
mov
jle
xchg
or
cwtl
out
dec
push
rcrb
test
adc
rcrl
aas
mov
inc
pop
dec
dec
mov
pop
shl
ficomps
jno
mov
cld
insl
mov
sbb
mov
fbstp
and
adc
sub
ja
dec
sarl
gs
mov
repnz
adc
pop
mov
out
mov
icebp
mov
xchg
stc
and
add
scas
jne
mov
or
lret
popf
mov
dec
pushf
lods
pop
push
cwtl
adc
jo
leave
mov
dec
xchg
out
stos
xchg
inc
adc
pop
and
fildll
push
dec
sbb
in
xchg
inc
arpl
xor
or
addr16
leave
push
imul
test
adc
mov
cli
pop
sbbb
and
mov
testl
mov
mov
mov
fmuls
or
xchg
ja
add
mov
subb
shlb
xor
push
mov
pop
stos
or
pop
adc
pop
mov
jle
leave
xor
or
cmc
xchg
repnz
and
mov
sub
pop
fdivrl
mov
ds
push
jbe
inc
sub
jecxz
lcall
loopne
jne
xchg
mov
imul
popa
das
daa
pop
imul
push
insb
xchg
test
das
nop
loop
inc
jae
push
gs
daa
mov
cmc
cmp
and
and
hlt
push
pop
fcoml
xchg
pop
xchg
icebp
mov
push
dec
cmp
mov
and
fidivl
lret
push
xchg
pop
int
add
iret
mov
arpl
ret
insb
test
ss
inc
mov
inc
push
je
dec
idiv
pop
es
mov
outsl
pop
jo
pop
cmpsb
inc
repz
scas
ljmp
enter
lea
cld
cwtl
push
xchg
aam
test
cld
add
sahf
xlat
cld
cs
jecxz
mov
inc
inc
or
sub
lea
lahf
outsl
sub
dec
outsb
xchg
dec
sub
cmp
fsubs
mov
loop
or
pop
cmp
inc
mov
pushf
cld
insb
xchg
les
jl
cmp
add
mov
sub
mov
adc
int
sbb
andb
mov
scas
inc
push
cmpl
cli
mov
outsl
jecxz
or
sub
cmp
add
sub
and
pop
mov
xchg
sub
aas
mov
cmp
clc
lret
daa
test
outsb
outsb
pop
ret
xorl
xlat
adc
mov
add
sarb
adc
lcall
xchg
sbb
add
aad
sbb
sbb
ljmp
add
mov
and
imul
ja
fidivs
mov
xor
sarb
pushf
sbb
push
fsubrl
inc
ja
inc
sub
mov
sub
and
adc
test
cmpb
stos
cs
out
in
sbb
jns
mov
mov
shl
add
or
push
xchg
out
dec
mov
cwtl
add
lret
inc
inc
sarl
cmp
mov
sbb
sbb
cs
pushl
jo
fildll
sbb
push
gs
inc
repz
cmpsl
or
push
ficoms
jne
pop
xchg
orl
pop
inc
subb
sbb
repnz
inc
and
xchg
stos
je
sub
mov
xor
cmp
jge
mov
jne
pushf
or
fnsave
cmp
in
or
mov
sbb
push
push
nop
cld
fcmovu
dec
sarb
cmpl
leave
cmp
pop
mov
dec
aas
mov
mov
lds
mov
and
xor
add
sub
push
out
cli
xor
cmp
dec
pop
ffree
and
sub
adc
les
xchg
inc
add
adc
mov
push
stos
dec
inc
mov
ss
inc
int3
cmp
lods
and
jl
std
push
or
scas
into
nop
sbbb
jg
push
es
sub
fadds
or
cltd
fwait
jge
fnstenv
int
aaa
mov
xchg
mov
nop
lret
ficompl
pop
in
aad
icebp
xor
mov
imul
pop
adc
mov
movsb
jnp
push
dec
js
imul
pop
cli
cli
mov
push
adc
pop
dec
fs
sub
inc
clc
sbb
rcl
push
adc
jo
mov
dec
cmp
mov
mov
outsl
cs
js
fisttpl
idiv
out
mov
inc
or
sbb
sti
mov
pusha
sarl
cs
inc
outsl
pop
cs
xchg
and
pop
push
or
fnstenv
mull
sub
aaa
lea
movsl
and
jl
dec
test
inc
in
dec
int
sbb
cmp
or
out
test
jne
fcomps
cmpl
inc
fs
das
cli
mov
cmp
rorl
imul
fdiv
out
push
pop
mov
in
xchg
jb
je
xor
int3
adc
push
jmp
call
int
inc
popf
inc
adc
loopne,pn
sbb
fxam
push
xchg
push
xor
or
ljmp
out
imul
adc
data16
inc
insl
fwait
sbb
cli
icebp
pop
call
test
lahf
pop
jmp
mov
pushf
into
push
jmp
pop
lods
mov
xchg
and
out
jle,pn
mov
data16
mov
cmp
lea
lock
ja
dec
out
mov
mov
cmp
pop
loop
add
lcall
xor
push
cmp
pop
decl
js
out
stc
nop
jns
add
enter
cmp
mov
add
enter
cmpsb
xchg
xchg
jae
inc
sbb
je
jecxz
mov
imul
nop
sti
js
sbb
cmpb
movsb
outsb
push
lods
or
pop
test
lods
movsb
gs
imul
loope
push
nop
xchg
fimuls
or
or
jnp
or
inc
mov
mov
dec
iret
lock
cmp
fbstp
cmp
mov
inc
xchg
dec
cwtl
scas
shlb
pop
and
loope
mov
in
add
cmp
jg
ss
icebp
aaa
std
xchg
jle
xor
sbb
mov
popa
jl
jae
pusha
int
xchg
lcall
lods
imul
xlat
test
inc
cmp
push
adc
cwtl
scas
mov
jg
pop
fcmovbe
jp
daa
bnd
pusha
and
lock
ja
stc
fs
movsb
jae
iret
cmp
jns
jl
xchg
cs
iret
fdivs
pop
push
and
jg
daa
jb
xor
sbb
inc
add
arpl
movsb
cmp
adc
xchg
jle
inc
mov
pop
jg
lea
mov
nop
push
adc
ret
ljmp
xchg
and
cs
daa
pop
scas
or
call
add
data16
adc
jp
aam
sub
aas
or
sub
cli
xchg
add
enter
ret
shlb
xchg
ds
fs
arpl
xchg
rolb
sbb
popf
xchg
xor
sub
dec
scas
dec
aam
push
pop
lcall
sti
sahf
push
push
js
jnp
xor
pop
cmpsl
mov
js
xor
outsl
loop
iret
rcr
out
push
mov
inc
fmulp
dec
mov
jg
popa
and
dec
scas
jae
test
inc
aad
and
dec
and
ljmp
aaa
add
dec
ds
or
je
sbb
adc
inc
jne
stos
adc
andl
mov
popf
inc
out
nop
je
jb
and
imul
mov
pushf
add
test
test
and
fnstcw
mov
ret
add
jno
or
nop
add
daa
std
push
sti
jbe
inc
mov
jbe
and
call
xchg
sub
mov
sub
sub
icebp
ss
not
dec
or
leave
add
aam
xchg
mov
lret
loop
decb
mov
xor
jnp
lds
xor
push
lahf
adc
rorb
int
in
jo
adc
mov
lds
insl
out
in
popa
pop
minps
inc
test
loope
jp
mov
adc
pop
jb
jge
into
lock
push
push
movsb
sbb
imul
leave
imul
push
push
out
movsl
mov
aam
or
cwtl
cmpps
ret
out
shr
aas
bound
cmp
pushf
sbb
stos
xchg
orl
jp
jnp
xlat
imul
xchg
hlt
sti
mov
sbb
xchg
ja
sti
adc
addr16
sub
jl
pop
lods
pop
mov
je
maskmovq
and
mov
mov
pop
cmpsb
mov
adc
rol
adc
mov
adc
mov
jnp
or
shr
mov
cmp
push
mov
and
mov
pop
cmp
adc
xor
insl
repnz
cld
mov
scas
jge
jecxz
flds
inc
fwait
cmpsl
inc
add
mov
stc
incb
or
mov
jnp
xchg
je
stos
xor
mov
jecxz
jecxz
lds
mov
mov
rclb
push
out
and
leave
je
test
cmp
dec
jmp
jp
out
movsb
mov
xchg
mov
stc
mov
xchg
js
cltd
cmp
adc
lea
sub
aaa
cltd
sub
and
int
pop
xor
sub
inc
ret
in
loopne
negb
mov
inc
lds
cmc
mov
adc
je
dec
mov
ss
and
bound
andb
push
add
or
int3
bound
cmpsb
dec
nop
insl
shlb
mov
pop
imulb
in
test
adc
lds
or
xor
mov
mov
enter
mov
clc
jge
lea
adc
push
and
test
mov
add
xchg
sbb
mov
jl
in
std
dec
mov
bound
lods
aad
adc
push
xchg
xor
mov
leave
in
xchg
pop
rcl
push
pop
dec
xchg
movsl
dec
xchg
iret
xor
out
pop
push
scas
testb
popa
subb
or
add
inc
mov
xor
adc
inc
push
in
xchg
jne
xchg
test
stos
adcl
pop
sub
dec
xor
ds
test
pop
adc
bswap
or
and
fcomps
pop
scas
lahf
xor
pusha
pop
push
popf
out
sub
mov
cmpsl
je
repnz
out
je
dec
sub
mov
jae
cmp
xchg
fisubrs
ljmp
std
daa
dec
push
movsl
gs
mov
loopne
fistl
push
cld
xchg
lods
jle
stos
push
mov
std
pop
lods
and
jb
adc
sub
aaa
sti
pop
int
xor
sti
out
adc
mov
les
cmp
sbb
jo
shlb
js
mov
mov
jl
add
sbb
imul
shlb
mov
sub
inc
ret
rclb
mov
neg
jecxz
inc
js
cmp
mov
mov
dec
push
cmp
pop
jne
lea
cs
fisttpll
xor
pop
xor
push
mov
test
pop
jmp
aam
push
addr16
dec
push
mov
jmp
mov
das
pusha
mov
inc
add
aad
movsb
pop
lahf
and
lock
popl
test
xor
outsl
clc
adc
cmp
fmuls
add
out
cmp
dec
sub
add
in
push
aad
js
lds
xchg
inc
push
mov
ja
dec
sahf
fs
mov
xor
and
inc
mov
fisubrl
push
mov
or
add
sahf
or
ja
mov
mov
adc
in
mov
int3
test
std
fwait
shlb
add
lahf
cmp
jg
je
jae
or
add
stos
pop
int
pop
dec
idivb
pop
add
jno
or
push
dec
mov
mov
sbb
mov
push
dec
shll
pop
rorl
jge
cmpsb
inc
push
fcoms
add
lahf
jge
insb
xor
pop
dec
push
imul
popa
sub
mov
push
ret
ljmp
cmp
cmp
mov
cmpsb
ret
jecxz
lods
sub
hlt
sbb
jmp
push
clc
in
mov
je
nop
mov
jg
push
int3
cmp
adc
and
pop
test
push
mov
push
in
popf
push
lods
xor
push
icebp
mov
test
fs
sbb
jge
mov
mov
xor
loop
lcall
jp
inc
scas
xchg
pop
jp
test
repnz
mov
in
pushf
lods
bound
arpl
cwtl
push
cmp
lods
stos
xchg
ljmp
inc
pop
sahf
sbb
or
fistps
jno
sti
subb
in
sbb
sub
sub
les
bound
jbe
mov
pop
jnp
or
mov
cmp
mov
aad
ret
je
xchg
xlat
add
imul
xor
push
rclb
and
enter
sbb
mov
lock
rclb
inc
neg
int
or
mov
mov
mov
fstpt
loopne
and
cmp
inc
mov
xor
icebp
in
and
ss
and
mov
jecxz
pusha
or
xchg
out
jmp
movsb
pop
or
jnp
fmull
pop
push
dec
add
js
add
lock
in
lock
cmpl
bound
fisubrl
imul
mov
test
mov
and
xchg
pop
mov
cmpsl
jnp
xor
push
sub
pop
or
jb
cltd
lahf
jecxz
adc
stos
adc
jnp
xchg
fwait
imul
fcompl
cmc
arpl
mov
fidivrl
mov
leave
daa
push
sub
xchg
test
xor
xor
addb
sbb
testb
iret
mov
ss
jb
mov
dec
sahf
sbb
dec
mov
loope
out
add
sbb
add
dec
jns
das
subb
dec
mov
xchg
and
dec
cmc
add
fs
out
xor
add
adc
mov
mov
test
sbb
call
mov
mov
pop
jg
sbb
popf
or
inc
xor
sbbl
out
shll
push
test
adc
dec
jl
inc
in
dec
xchg
adc
loope
je
cmp
cmp
jg
in
push
jmp
imul
aam
popa
repnz
and
xor
and
fstps
dec
and
cltd
fildl
flds
popf
and
and
mov
hlt
jbe
sbb
add
cmp
adc
pop
loopne
jno
insl
xchg
push
pop
and
movsb
push
fsubp
jae
std
lock
lods
dec
mov
pop
push
jnp
jnp
mov
xlat
sub
dec
push
ds
clc
call
mov
lret
js
pop
adcb
fwait
sub
pusha
dec
lds
and
mov
push
inc
out
xchg
ret
in
lahf
test
add
mov
gs
push
outsl
pop
into
dec
lds
xchg
jno
sub
out
pop
inc
xor
imulb
lcall
mov
add
jp
mov
mov
mov
mov
lock
cwtl
jecxz
ljmp
xor
xor
fmulp
push
ss
hlt
jg
or
out
jo
mov
gs
ljmp
incl
push
sar
out
cld
add
or
pop
nop
sbb
ds
mov
rol
cmp
cmp
mov
pop
mov
mov
jne
test
jle
out
ror
sti
push
fs
pusha
les
xor
test
mov
incb
les
lret
aad
cmp
dec
sub
push
xchg
jle
ljmp
lea
lret
dec
das
out
mov
sar
cmpsb
inc
cmp
add
xchg
push
sbb
dec
jl
lea
jnp
test
jecxz
setnp
sub
pushf
movsb
mov
adc
testb
inc
out
pop
jnp
ret
push
xor
mov
mov
mov
out
pop
repnz
add
je
push
jno
movsb
pop
repnz
int
sbb
cmp
jo
arpl
lds
sbbb
push
icebp
jg
bnd
into
shll
aaa
lahf
in
lcall
mov
cs
mov
adc
jecxz
mov
dec
add
sub
test
leave
imul
stos
or
jecxz
jae
inc
xor
int
sub
adc
les
sub
loope
int
lock
adc
data16
cli
mov
hlt
movsl
cwtl
jae
fildll
adc
fisttps
push
pop
imul
dec
mov
xlat
stos
xchg
cs
lods
xor
push
cltd
icebp
lea
arpl
fidivrl
js
push
push
jbe
and
pop
inc
cmp
dec
jg
or
das
insl
push
mov
jge
pop
push
imul
sbb
mov
adc
sbb
loopne
lret
imul
sub
jmp
scas
push
or
cmp
and
bound
aad
dec
cmp
in
lcall
cmp
sub
xchg
aam
stc
repz
test
repnz
adc
inc
dec
xchg
lea
lret
loopne
xchg
jns
lock
test
shlb
outsl
xorl
insb
repnz
ljmp
mov
mov
fsubrs
cmpsb
add
xchg
add
ja
mov
jne
rclb
loope
mov
cmp
cmc
scas
xor
fldt
popa
movsb
inc
test
sub
jbe
inc
pop
fistpl
stos
movb
jmp
ror
xor
aas
lods
hlt
pop
or
push
mov
out
jecxz
mov
add
pushf
imul
insl
or
sti
dec
mov
dec
pop
je
mov
push
xor
out
xchg
ret
shrl
dec
dec
sbb
xor
add
jo
mov
outsb
push
mov
add
leave
pop
push
fs
mov
sub
and
jno
stos
sub
pop
push
mov
dec
jp
or
mov
push
inc
popa
mov
inc
aaa
mov
lds
lahf
popf
inc
out
cmp
mov
push
lds
cmp
gs
push
pop
sub
iret
test
int3
mov
out
cmp
adc
adc
sbb
push
and
pushf
xchg
pop
cmp
lds
leave
nop
fsubl
enter
add
or
push
inc
dec
sub
in
movsb
push
pop
rcr
sub
cmp
dec
and
and
add
bound
pusha
add
add
fwait
and
dec
jae
int
aam
cmp
mov
leave
ja
gs
and
cmc
inc
cmc
jns
adc
dec
jb
or
in
xchg
xlat
cwtl
sti
mov
inc
bound
outsl
xchg
pop
fcomi
gs
lock
int
sbb
mov
jp
jmp
cmp
add
call
adc
jmp
popa
das
cmpsl
mov
pop
add
jmp
shll
pop
js
bound
or
imul
mov
add
pop
inc
insb
lea
cmp
jb
cmp
cmp
fcoml
pop
fistl
out
fsubrl
int3
dec
andb
adc
popl
pop
test
rcrl
mov
mov
push
adc
adc
or
cmpsl
loope
adc
lcall
lods
and
inc
rolb
cmpsl
xor
adc
push
adc
call
and
cmp
push
sub
cmp
out
push
std
imul
push
ret
ljmp
stos
mov
cmp
mov
into
add
push
xor
cmp
je
mov
clc
adc
jmp
ss
jae
pop
push
mov
in
loope
lea
and
cmc
xchg
sub
clc
sub
dec
out
movsb
cld
sub
ret
lahf
loope
fnsave
add
jae
push
adc
push
pop
push
push
add
stos
repnz
lret
subb
movsl
lcall
pop
jnp
lldt
and
jle
outsl
sbb
adc
mov
aas
mov
cmp
shrl
leave
add
arpl
or
add
mov
jo
push
data16
rcr
fwait
test
ljmp
mov
mov
movsl
pop
out
cli
outsl
adc
xchg
andl
xor
aad
inc
and
mov
cltd
test
xor
sbb
mov
jnp
arpl
pop
pop
sbb
aaa
leave
aas
andb
sbb
xchg
push
popa
mov
scas
sub
dec
and
dec
stos
dec
rclb
fisubs
dec
jo
sbb
dec
mov
insl
cmp
jb
mov
xor
movl
leave
in
into
fildll
call
add
imul
push
addr16
fbstp
cmp
xchg
push
or
enter
dec
lock
add
in
sub
pop
cmp
mov
std
pushl
mov
cmp
lea
jno
jge
mov
adc
dec
fnstenv
sahf
loope
or
shl
bound
imul
pop
outsl
int3
rcrl
sahf
ja
sub
inc
xchg
or
inc
xchg
mov
pop
jae
xor
mov
out
dec
mov
notl
hlt
dec
std
imul
dec
push
sub
xor
popa
pop
js
xchg
sar
sub
fsubrs
es
jnp
cmp
movsl
ficompl
jno
bound
test
ss
bound
push
mov
inc
pop
adc
clc
cltd
and
inc
rdrand
xor
rcll
pop
jne
test
fldcw
call
sti
mov
pop
push
cmp
das
mov
andl
pop
neg
aaa
cmpsl
test
and
sub
xchg
add
dec
mov
pop
negl
cs
sti
jb
dec
bound
aas
push
mov
push
inc
orb
mov
push
pop
sbb
xchg
insl
xchg
shlb
daa
cmp
xor
pop
jp
sarl
jge
jmp
add
sahf
push
add
sub
in
lods
pop
xchg
push
inc
push
jmp
add
jmp
mov
fsin
mov
addl
push
ret
xchg
adc
mov
pushf
pop
sbb
rcrb
xchg
jns
scas
adcb
xor
xor
mov
add
stos
add
xacquire
mov
stos
scas
rol
shlb
hlt
sbb
ret
and
std
je
mov
adc
insb
fisttpll
sbb
fadds
adc
push
mov
mov
sbb
adc
cli
inc
int3
mov
std
or
sub
cmp
xor
pop
pop
int3
icebp
jae
and
loope
adc
mov
in
in
enter
lods
and
jb
jecxz
dec
lods
dec
dec
xor
xchg
mull
mov
cmp
push
xchg
xchg
rol
inc
test
mov
pop
push
xchg
les
inc
jmp
sbb
mov
pushf
outsl
dec
dec
ds
push
int
incb
movsl
push
adc
cmpsb
jg
pop
data16
fldcw
std
repz
pushf
ja
xchg
xor
push
mov
sbb
adc
or
push
jo
fwait
pop
push
ret
add
dec
add
cmp
ja
add
popa
into
pop
xor
xchg
adc
xchg
ljmp
and
mov
movb
jle
or
or
les
push
push
xchg
adc
xchg
mov
leave
int3
test
mov
mov
push
pop
mov
fcomps
or
cmp
mov
add
mov
loope
inc
icebp
mov
mov
mov
std
sub
jno
cmpsl
add
gs
test
push
push
std
ret
test
fsubr
mov
jmp
mov
lret
xchg
cld
cmp
dec
icebp
jmp
outsb
ds
mov
leave
data16
cmp
push
dec
mov
inc
mov
mov
in
mov
rep
dec
lret
pop
imul
sbb
jae
imul
jmp
push
xchg
scas
cwtl
push
jno
mov
scas
loop
mov
pushf
in
or
inc
xor
je
cmc
test
and
adc
xor
mov
cmpsb
lds
cli
cmp
imul
mov
mov
add
aaa
fucomi
cwtl
popf
cmpsl
sbb
push
adc
fdiv
stos
add
lcall
dec
push
xchg
mov
fsubrl
popa
lret
jae
fsubr
stos
fsubrs
hlt
cmp
aas
sub
divl
or
mov
mov
sbb
bnd
outsl
lods
leave
mov
in
adc
js
loop
lcall
lahf
call
mov
fmuls
push
dec
and
jb
aaa
sub
fwait
pop
aam
ds
inc
es
cmp
stos
imul
nop
and
pusha
popf
popa
sbbl
gs
adc
ja
jb
fdiv
jle
pop
cmpsb
and
int3
inc
nop
mov
mov
je
add
in
sub
loope
mov
aaa
jns
enter
xlat
loopne
jle
cltd
jbe
and
sbb
push
out
daa
xchg
mov
outsl
popf
mov
and
mov
pop
lret
and
lods
es
test
add
add
push
pushf
jns
popf
or
mov
xchg
mov
scas
jns
push
daa
mov
test
loope
or
testl
aad
add
imul
out
bound
int3
out
sub
adc
in
mov
out
fldt
bound
dec
aaa
and
stos
mov
push
dec
enter
bound
cmc
in
add
mov
gs
sbb
cmp
xlat
mov
fldcw
enter
sbb
popa
pop
cmp
aas
jge
cwtl
push
cmc
les
inc
fs
dec
sub
test
add
push
jno
push
inc
ja
xchg
xor
xchg
mov
shrb
mov
xchg
lret
test
jne
xor
cli
loopne
mov
mov
sbb
pop
test
jmp
outsb
cld
lret
out
aas
sbb
data16
pop
cmpsb
scas
mov
mov
cmp
jmp
adc
roll
aaa
leave
pop
sbb
xchg
sub
into
pop
shl
fimuls
cmp
ret
sbb
pop
mov
add
add
repnz
inc
mov
mov
inc
add
fisttps
cld
negb
jle
mov
hlt
or
and
loope
push
jb
mov
cmp
mov
aam
dec
out
mov
jns
repnz
or
mov
add
mov
js
adc
cmp
jecxz
fwait
mov
lret
inc
outsb
push
inc
mov
call
lods
sub
fisubs
push
mov
loop
rep
jo
mov
dec
mov
push
sub
ret
push
jge
xchg
adc
pop
in
push
mov
je
push
xchg
inc
rcrl
or
xchg
jge
and
xor
xlat
in
sbb
mov
loop
mov
jmp
outsb
xlat
lcall
cmp
sbbl
pop
stos
xlat
aaa
in
inc
call
int3
cmp
int3
jnp
inc
ds
loope
sti
loop
cld
pushl
cmpsb
inc
ljmp
jecxz
aaa
ds
sub
jg
push
xor
adcl
pop
scas
imul
out
pop
jp
jecxz
mov
xchg
cltd
popf
pop
jns
dec
xchg
pushf
inc
dec
shll
cwtl
pop
lods
cli
in
mov
mov
cmc
pop
add
or
mov
mov
adcb
dec
jle
das
xlat
test
mov
in
mov
mov
inc
dec
inc
sbb
mov
cli
cmp
push
test
jmp
lcall
into
stos
or
jo
or
or
bound
sar
das
dec
mov
mov
bound
xor
arpl
jmp
jg
and
pop
bound
mov
aas
into
jp
mov
pop
push
push
out
daa
mov
sub
dec
jmp
lcall
or
mov
sarb
inc
leave
loope
xor
and
jge
mov
add
ljmp
test
aad
in
push
inc
mov
arpl
mov
push
inc
mov
mov
pop
pop
sub
mov
rcrl
sub
or
aad
mov
movsb
lret
jmp
cs
cmp
fwait
into
out
adc
jo
mov
lret
fmull
mov
outsl
lock
dec
xchg
mov
sub
adc
in
std
mov
cmp
cmpsl
inc
or
fstpt
xchg
push
or
mov
mov
sub
push
pusha
addr16
scas
scas
or
test
add
mov
insl
out
aam
xchg
xchg
mov
clc
push
jns
std
push
cs
stos
sahf
loope
ret
push
jmp
mov
clc
mov
cwtl
sbb
adc
aam
mov
mov
mov
aad
cmp
pop
or
inc
and
test
dec
mov
cmp
imul
jl
negb
jl
pop
cli
sbb
inc
cmp
xchg
fcom
or
scas
jb
push
mov
ss
xor
mov
test
inc
testl
adc
incl
mov
rol
jns
movsb
mov
pushl
and
arpl
sbb
sub
js
iret
pop
dec
repz
mov
adc
dec
cmp
je
loopne
add
xor
loope
mov
outsl
mov
jge
ja
call
push
cli
scas
and
xchg
fisubrs
pop
sub
cltd
adc
push
push
add
stos
lds
add
out
bound
clc
pop
mov
pop
cmp
xchg
sbb
bound
push
cltd
nop
mov
rcrl
mov
fnstcw
stos
stos
out
push
mov
loope
add
jbe
movsl
push
add
nop
mov
in
xchg
cltd
inc
xchg
popa
mov
pop
adc
nop
and
xlat
jmp
jmp
pop
test
ss
std
fidivs
jmp
and
mov
loopne
ret
inc
andb
pop
xchg
or
mov
fsubrp
cmp
sbb
adc
mov
pusha
int3
icebp
pop
daa
mov
mov
mov
or
sti
or
int
mov
jmp
xor
sti
hlt
sub
int
flds
xor
dec
dec
sub
ret
in
movsl
jb
outsl
sahf
push
jmp
rcrb
clc
jge
out
into
into
negl
or
lret
xchg
gs
scas
mov
mov
jge
dec
ret
mov
insb
jl
jne
call
mov
sub
shl
leave
and
cs
mov
lret
lock
cwtl
push
rorl
rclb
cltd
add
mov
sbb
call
push
leave
mov
lock
or
sub
add
loop
movsl
shlb
daa
sbb
cmpsb
test
xchg
aas
cs
ds
or
cli
out
jno
adcb
sti
adc
push
inc
pop
push
int
loope
xchg
mov
testw
xor
insl
jns
pusha
mov
xor
mov
sub
ret
in
std
mov
mov
ss
loopne
pop
lds
mov
mov
cmpsw
push
inc
lahf
push
cld
loop
mov
mov
ficoml
pusha
cmp
dec
cmp
inc
jo
jecxz
pushl
loope
daa
es
and
lds
inc
mov
jmp
fstl
or
pop
pop
mov
sti
mov
insb
sub
sbb
xor
pop
push
xchg
mov
call
cwtl
lods
repnz
ss
jbe
mov
das
jne
pop
lahf
mov
aaa
mov
mov
push
push
push
mov
or
mov
mov
imul
fisubrs
dec
and
adc
lods
bound
repnz
dec
inc
add
mov
lret
sbb
push
idivb
hlt
ljmp
mov
xor
popa
add
cli
in
mov
jge
pop
push
test
test
outsl
and
dec
movsb
popf
jl
std
nop
fisttpl
sub
jns
jne
xchg
or
and
je
or
mov
fistpl
xchg
add
data16
call
jmp
push
jne
jne
mov
sub
cltd
rol
xor
sub
or
subl
fisubl
sub
icebp
xchg
fs
inc
jb
icebp
lds
push
fwait
stos
imul
test
and
ds
add
and
sub
pmuludq
jl
stos
outsb
aam
int3
int3
sbb
shll
jns
in
dec
sub
xchg
gs
mov
out
lock
inc
in
inc
gs
das
nop
repz
push
decb
in
jo
test
cmpb
xchg
lret
sbb
shrl
mov
sub
push
nop
jle
push
out
rcr
pop
dec
mov
jp
int
xchg
jbe
sub
hlt
push
inc
test
mov
cmp
adc
mov
jo
subl
add
out
arpl
stos
ss
mov
fisttps
loop
aam
and
outsb
rorb
pushf
xchg
cltd
mov
inc
cmp
imul
movsl
ljmp
inc
leave
filds
loopne
mov
pop
addb
shlb
pop
push
cwtl
aam
push
push
roll
fwait
les
push
jl
iret
fcoml
xor
out
sbb
xchg
push
push
daa
jb
out
pop
in
mov
outsb
and
sbbb
add
mov
ret
aad
jb
dec
xchg
push
je
mov
xchg
test
jl
sub
dec
xchg
sbb
mov
or
sbb
mov
bound
dec
pop
pop
dec
cmp
pop
push
pop
stos
flds
subb
repnz
jae
and
sti
out
sub
imul
push
clc
inc
loopne
xchg
test
xlat
mov
sub
and
xchg
mov
sbb
sti
stos
fwait
cmp
testb
fiadds
jns
je
scas
jae
cmpsb
cs
mov
jmp
jp
fst
movsb
mov
xchg
lcall
push
dec
call
mov
xlat
inc
ja
jge
cs
mov
mov
sbb
jbe
adc
inc
and
lcall
enter
pop
pushf
arpl
data16
rorl
popf
ja
push
and
mov
push
and
pop
dec
add
push
and
xchg
add
sub
out
sbb
ret
mov
iret
sub
cmp
jnp
pop
mov
mov
jp
xchg
and
inc
push
repnz
xchg
dec
mov
xor
popa
lret
imul
repnz
mov
rclb
dec
dec
jmp
lahf
sbb
cmpsl
lods
push
sbb
cmpsb
push
inc
lret
orl
push
push
sbb
outsb
or
ljmp
adc
pop
pop
mov
jmp
xchg
jecxz
push
pop
push
sbb
add
dec
dec
and
stos
pop
xchg
fdivrs
enter
es
test
stc
pop
cmc
mov
fsubp
sti
xchg
sbbl
fsubrl
xor
mov
cmc
mov
aaa
push
push
jbe
cmp
lret
xchg
std
adc
in
mov
repnz
cltd
cltd
shll
fidivl
cmpsb
mov
and
inc
inc
fwait
mov
xor
hlt
psubd
inc
jns
ss
pop
sub
or
sti
addr16
adc
or
sbb
sbb
adc
xchg
add
adc
add
jnp
sub
or
lds
repnz
xchg
fstl
sbb
lods
and
pop
loopne
or
stos
cmp
loope
inc
jno
ficoml
xchg
sahf
inc
xor
adc
out
mov
cmp
idivb
int
jecxz
cmpsl
mov
outsb
sub
mov
aas
loope
sbb
push
push
mov
repz
sbb
jae
aad
fwait
jbe
scas
adc
or
popf
fisttps
add
shll
in
in
xlat
xchg
in
or
movsb
imul
jns
aas
fmul
ds
pusha
sub
pop
lea
test
daa
or
pop
push
jg
push
iret
outsl
aad
fcoml
lret
xor
enter
icebp
dec
and
xor
mov
cli
lret
mov
add
jb
je
jno
mov
mov
cmp
xlat
dec
in
leave
and
push
je
scas
and
add
stos
leave
mov
aas
pop
testb
ja
jns
inc
cld
inc
jns
stc
mov
js
or
notb
mov
and
std
dec
pop
xlat
xor
lea
adcb
jnp
rorb
enter
pop
adc
xchg
ret
or
sub
xor
add
hlt
stos
push
repnz
xor
push
xor
push
push
es
cld
and
jbe
sbb
subb
pop
stos
and
sub
dec
cmpsl
inc
loop
enter
outsb
fcmovb
cmp
xchg
out
dec
fldcw
rcll
push
sub
call
pop
cmpb
pushf
gs
loopne
inc
movsl
lahf
js
es
imul
jg
add
lcall
addr16
adc
xchg
movsb
mov
mov
dec
mov
out
mov
in
mov
jge
iret
cmp
aam
outsb
mov
mov
cld
sub
mov
xor
sbb
or
test
push
scas
inc
cvtps2pi
fwait
out
push
inc
mov
ljmp
pop
jmp
les
jbe,pn
loopne
and
lock
mov
sbb
stos
lea
arpl
insl
and
aam
jg
cmpsl
or
in
rclb
pop
ds
cmp
xchg
add
ja
xor
stc
pop
cmp
loopne
sub
push
xor
addb
cli
ds
mov
push
pushf
pop
sbb
enter
out
lahf
lea
jecxz
clc
mov
clc
adc
dec
lcall
mov
andl
jge
repnz
idivb
mov
xchg
out
add
rcrb
xor
mov
dec
mov
add
push
ret
ss
incb
insl
aam
xor
mov
mov
mov
lret
sbb
imul
fsts
push
adc
lock
dec
lret
loopne
adc
adc
ficoml
or
mov
push
jbe
xchg
in
mov
and
mov
dec
lret
das
js
inc
fldl
lds
aas
shll
sti
pop
xor
push
in
das
sbb
xchg
pop
orl
sub
lret
push
push
or
scas
out
popf
or
icebp
in
push
dec
inc
leave
shlb
rclb
xchg
int3
insb
movsl
pop
aaa
lock
enter
pop
jno
add
aam
pop
into
mov
xchg
hlt
dec
sbbl
pusha
dec
test
sbb
jns
mov
fcoml
jmp
test
in
dec
mov
mov
andl
adc
mov
pop
sti
sub
push
hlt
xor
dec
in
xor
sbb
test
pusha
add
leave
xchg
adc
repnz
into
nop
fidivrl
pop
or
pop
inc
cmpsl
pop
and
pop
xchg
je
add
das
sahf
imul
adc
ret
sti
insb
xorl
ss
push
lods
and
ja
cmp
mov
test
fs
ss
inc
or
es
popa
or
inc
lds
jb
add
push
and
pop
insl
dec
lret
mov
push
jo
rclb
loope
js
leave
jg
enter
insl
psraw
push
jp
add
pop
mov
outsl
cmpsb
pop
imul
jmp
addr16
pushf
xchg
loopne
call
jns
imull
mov
or
js
fcom
idivb
insl
out
rolb
movb
jl
test
and
aam
xor
pop
and
xchg
inc
pop
roll
pop
sub
aam
xchg
adcb
xchg
shlb
inc
jne
mov
fidivrs
imul
cmp
fsubl
mov
xchg
aaa
stos
xor
insl
std
mov
mov
inc
leave
xchg
inc
cwtl
insb
pop
adc
adc
add
push
and
mov
xchg
cmpsl
push
mov
pop
fsts
aam
adc
das
movsl
clc
sti
loop
xchg
into
ljmp
lahf
ljmp
mov
xchg
add
dec
mulb
jg
pop
in
add
cmp
mov
xchg
out
xor
jle
call
lcall
mov
jnp
xchg
sub
add
ret
mov
jmp
add
js
dec
pop
movsl
fwait
jg
test
cmp
mov
or
jecxz
jae
and
sbb
data16
cmpsl
pop
es
jbe,pt
shl
ljmp
jb
inc
fisttpll
and
dec
jg
cwtl
scas
es
pop
mov
jns
outsl
xchg
test
sub
add
jae
cmp
push
jne
insb
pop
insl
shr
sbbl
out
cmpsb
pop
push
or
dec
or
loopne
jecxz
popf
xchg
dec
inc
enter
cmpsb
push
mov
sub
stc
loop
inc
or
stos
daa
mov
subl
xor
int
ds
outsb
and
sti
icebp
mov
or
dec
mov
into
shrb
push
repnz
adc
aad
movsl
std
loop
jmp
aad
inc
adc
popa
aas
out
loope
mov
cmc
popf
push
daa
cli
push
jmp
mov
mov
test
cmp
or
loop
or
pop
and
icebp
loope
in
cmpsb
cli
out
out
push
sub
fnsave
scas
mov
push
dec
push
mov
and
adc
mov
inc
dec
mov
mov
jge
fidivs
dec
pop
pusha
cmpsb
cmpsl
mov
sahf
mov
cmp
imul
cmp
jecxz
xchg
xchg
xchg
mov
cltd
nop
js
test
cmpsb
pushf
and
dec
ja
enter
popf
mov
jnp
aas
mov
and
out
out
and
cld
rolb
in
mov
and
xor
mov
jmp
int3
xor
or
mov
jns
xchg
mov
push
cmp
outsb
push
pop
std
xchg
imul
les
dec
fstpl
in
mov
into
push
sub
fucomp
mov
sbb
scas
dec
pop
ret
jnp
rcrb
test
call
mov
or
lods
out
cmc
imul
sahf
or
xor
std
cmp
and
inc
dec
xchg
add
enter
daa
push
insl
mov
xor
jecxz
shll
negb
test
nop
fs
sub
ja
cmp
mov
mov
and
xchg
mov
xchg
mov
fstps
adc
bswap
mov
test
faddp
shl
hlt
loop
fcmovnb
adc
cmp
addr16
jbe
int3
lret
test
sbb
push
jno
test
mov
inc
fsts
loope
testb
mov
jb
mov
mov
add
cmpsb
in
pop
aas
xor
fwait
adc
mov
jb
add
mov
inc
mov
push
pusha
xchg
mov
mov
inc
leave
cmp
and
xor
add
pop
repnz
fsts
sarb
fidivrl
repnz
cmp
stos
sub
adc
xlat
jmp
xor
cmp
sub
xlat
subl
xor
jmp
lods
in
xchg
cmp
int3
jno
out
mov
fldenv
push
dec
jns
xchg
imul
jge
aad
sti
and
jne
cmp
icebp
add
inc
push
dec
scas
dec
fcom
leave
xor
outsb
sub
mov
jle
jnp
pop
or
test
lret
mov
repnz
sbb
lods
mov
popa
sbb
subb
int3
xchg
nop
lock
flds
inc
aaa
and
movsb
outsb
mov
orb
mov
fimuls
mov
pop
add
loopne,pn
add
test
in
lods
aam
inc
mov
sub
insb
xchg
mov
aaa
in
inc
in
sub
cmpb
es
mov
loopne
cmp
movsb
fdivrl
adc
gs
sub
inc
jno
jmp
imul
arpl
jmp
jecxz
pushf
push
lods
adcl
js
fidivrs
mov
into
sbb
lcall
je
add
sub
add
xorl
out
mov
or
lods
ljmp
or
ficoml
jecxz
fcmovnb
cli
jne
out
and
lea
push
fistps
lcall
dec
std
jg
sbb
xchg
scas
lock
das
movsl
and
lock
push
cmp
imul
jo
xor
mov
lahf
fistpll
out
lods
mov
mov
adc
std
lret
xchg
fldl2e
xchg
daa
mov
out
mov
lcall
jae
jo
dec
and
xlat
push
mov
cwtl
std
mov
inc
xchg
adc
xchg
mov
pop
sbb
mov
sbb
out
call
dec
dec
ljmp
push
mov
sbb
nop
into
scas
fiaddl
push
mov
inc
lea
add
xor
loope
mov
jo
imul
icebp
jg
test
pop
incb
pop
push
mov
pop
fistpl
sbb
lahf
cs
les
imul
stos
mov
sub
rcr
pop
fidivl
gs
mov
xlat
test
mov
aam
push
dec
mov
mov
inc
sbb
xchg
pop
movsl
jl
adc
jb
adc
xlat
or
jne
push
incb
mov
icebp
fsub
inc
sub
mov
push
or
ja
sub
mov
dec
xchg
inc
popa
cltd
adc
xchg
mov
or
pop
add
clc
adc
adc
sub
jp
mov
outsb
jle
imul
adc
fld1
int
shll
jmp
ror
add
mov
or
push
in
xchg
lods
stc
in
push
push
incl
sub
cmp
fsubl
xchg
mov
shrw
gs
cmp
and
xchg
dec
jo
movsl
imul
dec
adcl
dec
stos
lea
or
mov
mov
cmpsl
mov
imul
mov
es
repz
and
and
icebp
xorl
mov
mov
popa
cmp
inc
cs
subb
add
fldenv
popa
jns
test
in
adc
cmp
lret
iret
dec
jns
fldcw
push
arpl
sub
and
cmp
or
movsl
mov
adc
xchg
dec
pusha
stos
loop
dec
pop
aas
int3
shrb
idivb
or
fstps
dec
mov
in
test
sbb
dec
sti
cmp
dec
icebp
das
push
sbb
pop
jb
lea
enter
js
mov
movsb
notb
xor
lahf
ret
jge
addr16
pop
mov
sub
cmp
xor
incl
add
mov
fisubrl
hlt
call
stos
xchg
sub
cmp
dec
cmpb
inc
pop
aad
xchg
pop
pop
jg
sbb
or
or
out
xchg
dec
cmp
pop
cmp
dec
lret
xchg
push
mov
add
pusha
test
push
push
iret
mov
test
leave
aas
mov
lds
aas
xchg
xchg
pop
xor
gs
push
dec
jecxz
mov
pop
cmp
rolb
cmc
cltd
pop
dec
and
push
dec
loopne
or
sbb
clc
or
push
inc
lea
adc
push
rcrb
adc
add
inc
push
nop
les
pushf
sub
mov
bound
pmulhw
mov
daa
movsl
or
es
stos
mov
std
je
inc
mov
dec
rcrb
hlt
enter
mov
dec
pop
push
shlb
fstpt
mov
lods
and
aas
sbb
inc
jns
adc
ljmp
andl
xor
dec
bound
cmpsl
imul
jg
xor
test
mov
out
rorl
cmp
dec
fwait
xor
mov
into
push
addb
pop
mov
aam
arpl
adc
cs
int
mov
out
mov
nop
fcmovb
sbb
sbb
popa
stos
xor
sbb
push
in
xor
xchg
mov
lods
mov
push
sub
mov
fwait
push
jge
fwait
pop
sub
ljmp
jne
jae
mov
lods
fcom
jecxz
push
in
mov
xchg
loopne
sbb
sbb
mov
pop
sti
inc
xor
jo
cmp
push
xor
xchg
xchg
subl
mov
xchg
fs
jb
in
cwtl
mov
cmpsl
mov
addr16
in
ljmp
xchg
adc
std
adc
mov
lcall
shll
mov
lea
push
cmp
sbb
mov
sbb
xchg
je
push
pop
jg
dec
mov
mov
cmc
andb
cmp
or
xor
scas
loope
test
test
jl
push
movsb
sarl
xor
lock
ljmp
pop
add
imul
fldenv
fists
jbe
cmp
mov
outsl
xor
dec
xchg
jge
mov
into
or
stos
sahf
push
mov
inc
dec
mov
je
stc
lock
mov
jl
arpl
mov
cmpsb
sahf
orb
into
xor
mov
push
mov
add
add
ss
adc
das
mov
fldl
sbb
lret
pushf
ss
push
ds
xchg
mov
mov
pop
rcl
mov
jnp
jns
xor
das
insl
aad
je
xor
sarl
out
popa
mov
out
in
lret
push
leave
adc
sbb
push
cmpsl
mov
jl
push
inc
pop
add
mov
dec
mov
sarb
les
test
cmp
adc
loope
mov
mov
jbe
scas
les
sub
or
push
subl
xchg
dec
mov
push
adc
pop
movl
sahf
in
xor
inc
pusha
into
pop
xchg
int3
xor
cld
inc
cmp
push
rolb
adc
cld
repnz
dec
pop
popf
inc
inc
loope
insl
sub
jg
or
int
movl
lds
stos
and
dec
icebp
stos
jns
repz
add
popf
dec
add
jne
pop
dec
movl
sub
sbb
and
jne,pn
mov
jp
in
inc
xor
sbb
push
mov
push
mov
mov
sahf
fistpl
push
mov
jns
and
and
pushf
iret
in
out
dec
jae
fwait
lahf
lods
fwait
xchg
push
push
movsb
fdivrl
jge
int3
rorb
shrb
add
repnz
mov
hlt
dec
adc
dec
jb
iret
xadd
mov
jo
sub
push
sti
fwait
jg
mov
sbb
sbb
hlt
movl
sbb
mov
cld
leave
enter
adc
xchg
int3
movsl
dec
mov
mov
mov
daa
imulb
push
xor
and
mov
flds
xor
scas
mov
pop
cmc
cwtl
cmp
and
jbe
push
add
cltd
pop
cli
loope
pop
dec
add
fwait
jp
pusha
dec
and
and
push
add
or
mov
stos
push
push
mov
mov
clc
push
mov
popa
push
in
mov
rcl
push
in
and
insb
lds
and
out
adc
sbb
in
dec
lret
fs
mov
jns
mov
mov
lds
dec
xchg
jns
jae
int
xchg
enter
push
jne
decl
xor
or
dec
mov
and
clc
nop
mov
dec
cld
adc
jge
push
dec
push
xchg
data16
xchg
mov
stos
sbb
bnd
in
sub
mov
mov
pop
mov
mov
push
jns
xchg
sub
mov
adc
sbb
push
mov
ret
repz
adc
inc
xlat
sub
rdtsc
mov
cmp
jns
and
mov
aas
data16
mov
push
rcrb
clc
sbb
js
lods
or
sbb
shll
jle
ds
xchg
rcrb
push
xchg
jecxz
add
lcall
ljmp
cmp
jae
mov
cmpsl
jbe
mov
push
mov
or
or
mov
mov
negb
ror
lea
imul
ret
aaa
add
xor
outsb
push
xchg
add
in
pop
or
xchg
or
pop
scas
imul
fwait
cmpsl
imul
movsl
jno
mov
data16
and
pop
jnp
fiaddl
ss
mov
outsl
and
jae
pop
xchg
sub
pop
dec
nop
xor
loop
lds
sub
cltd
inc
ja
xchg
xor
mov
mov
push
adc
sti
or
adc
test
flds
and
daa
test
stos
dec
sub
stos
xlat
lds
push
or
mov
push
stc
outsb
in
adc
clc
pop
pop
sbb
scas
inc
push
dec
dec
shrb
repz
mov
fisttpl
shll
inc
cld
fcoml
cmc
scas
push
mov
push
xchg
cmp
data16
jne
ss
jle
sbb
popa
mov
repz
jo
jmp
jbe
bound
shrb
aaa
out
and
add
fldcw
pop
mov
inc
addr16
mov
mov
pop
push
adc
insl
push
push
pop
addr16
ja
push
rclb
cli
mov
pop
fnstenv
sub
jge
mov
arpl
fisttpl
and
mov
and
rorl
mov
xlat
int3
les
imul
sub
dec
sub
clc
popa
cs
jge
jg
dec
push
push
jp
loopne
mov
mov
dec
faddl
fdivs
sub
push
inc
in
imul
lds
popf
ljmp
test
pop
mov
ja
insl
popf
push
in
push
jno
mov
xlat
sub
out
xor
pop
shr
jo
fmull
fs
cmpsl
dec
mov
pop
mov
push
add
test
or
adc
add
sbb
pop
mov
fwait
imul
into
mov
das
and
dec
xor
fldt
repz
jp
dec
push
sbb
jnp
jl
cmp
add
mov
fists
fldcw
push
xor
imul
mov
leave
dec
jae
mov
repz
and
int3
inc
notl
dec
push
scas
flds
cmpb
lock
sbb
inc
sahf
adc
loop
inc
cmp
cmpsb
lcall
mov
test
push
mov
hlt
outsb
cmp
push
dec
jnp
mov
stc
cmp
dec
leave
mul
aam
scas
dec
orb
dec
xchg
mov
das
sub
pop
cli
push
movsl
into
neg
jmp
pop
mov
stc
mov
mov
nop
mov
fs
data16
mov
inc
ss
cs
sub
xchg
jae
jecxz
xchg
popa
cmpsl
mov
aas
mov
and
test
jnp
sbb
sbb
dec
stos
jb
call
les
sahf
rorl
sbb
fucomip
sub
jmp
add
mov
cwtl
mov
add
negb
lcall
jne
or
out
pop
repnz
pushf
mov
and
fnstcw
and
cmp
fldenv
pop
mov
aad
cmp
repnz
push
outsb
jae
sbb
or
movsl
sub
sti
test
adc
sbb
sub
mov
dec
mull
loop
mov
dec
mov
mov
movsb
cmp
jns
fstp
test
cmp
mov
leave
fdivrs
mov
call
mov
aas
mov
call
js
sub
dec
push
jae
rcrl
xchg
push
fnstsw
pusha
dec
add
pop
dec
inc
cmp
push
icebp
out
ret
sub
testl
movsl
insb
lret
adc
jp
dec
fimull
xor
decb
cld
mov
add
sbb
lds
movsb
dec
dec
mov
jmp
fstpl
out
inc
loop
cmc
mov
adc
dec
lahf
iret
push
add
jg
lret
ret
ret
mov
sub
out
jne
icebp
or
test
lea
shrb
jmp
pop
inc
test
in
fs
shlb
in
fcom
sub
push
jge,pn
fmuls
rcll
push
outsb
shll
gs
jno
dec
add
xchg
jae
cld
sbb
dec
outsb
jecxz
push
push
dec
mov
fs
sub
mov
call
outsb
cmp
loope
pop
sahf
sti
ficomps
mov
xchg
sub
cltd
hlt
test
ret
lret
sub
mov
mov
cmpsb
into
in
mov
mov
jecxz
in
popa
mov
mov
xchg
ret
lock
insl
lret
xchg
addr16
jp
pop
pop
popa
lret
push
lahf
jb
pop
sti
push
mov
js
pusha
sub
and
in
pop
jns
xor
inc
mov
push
jl
lret
or
dec
arpl
sbb
movsl
xchg
lcall
jp
into
loop
roll
dec
cmp
das
cmp
adc
movsb
outsb
push
sti
and
ljmp
movb
sahf
mov
and
xchg
and
xchg
sahf
ljmp
into
sbb
gs
jge
xorb
cmp
leave
mov
sub
test
mov
cltd
add
mov
pop
outsb
in
push
dec
test
lods
ficoml
icebp
mov
push
in
or
xchg
xchg
mov
sbb
movsl
xchg
cmp
int
sti
jno
and
scas
and
add
inc
jmp
into
mov
popl
scas
shl
rorb
adc
jns
jp
stos
sbb
and
push
or
test
fimull
sbb
in
fisttpll
xchg
push
add
pop
push
cmpsl
adc
outsb
gs
push
cs
sub
jp
inc
out
cmpb
jnp
enter
enter
push
data16
xlat
add
into
movsb
and
pop
inc
leave
adc
xlat
paddsw
pop
add
or
sbb
and
mov
fwait
enter
or
dec
jo
ja
mov
fs
shr
popl
dec
shrb
push
and
sub
xchg
mov
out
outsb
stc
xchg
test
dec
cwtl
or
sub
sub
cwtl
insl
cmp
xchg
rclb
jbe
jp
pop
mov
mov
add
sbbb
xchg
icebp
jmp
int3
adc
pusha
mov
loopne
cmpsl
popa
mov
add
cmpb
sub
rol
pop
pushl
and
xor
imul
mov
jbe
ret
dec
push
mov
xchg
xlat
fistpl
jo
fucompp
outsb
enter
push
ja
loope
push
in
adc
les
movsl
adc
repz
out
dec
fstl
mov
nop
pop
pusha
fadd
fidivl
xchg
mov
add
xor
into
insl
mov
jp
mov
addl
jmp
push
push
cmpsb
and
mov
pop
cmp
add
in
scas
pushf
mov
out
mov
xchg
andb
cmp
pusha
stc
xor
inc
fnstenv
fistps
in
bound
cmpb
cmc
clc
addr16
ss
dec
dec
out
dec
cltd
pop
sti
push
adc
stos
push
dec
aad
pop
and
inc
push
loop
cmp
jo
jecxz
insb
pop
mov
jmp
fs
mov
inc
mov
pop
outsb
mov
aas
mov
inc
aad
and
test
jbe
pop
pop
xchg
shll
clc
mov
lcall
sub
test
popf
ds
dec
sbb
inc
add
mov
in
loopne
and
sbb
test
out
jno
int3
outsb
daa
inc
mov
dec
pushf
xchg
ss
xlat
and
mov
hlt
xchg
fnstsw
xor
mov
inc
push
jl
push
jno
sub
pop
enter
and
popa
cltd
cmp
cld
fdivl
add
pop
xchg
adc
mov
rcrb
cli
push
outsl
and
push
cld
popa
push
mov
scas
jnp
call
cltd
or
repz
ficoml
dec
xchg
lea
lock
push
jno
fidivrs
sub
adc
popa
sub
rcrl
outsl
in
fs
push
mov
testl
jecxz
in
xor
mov
pushf
inc
sbb
add
test
push
pop
popa
cli
xchg
and
sbb
and
gs
sub
mov
dec
sbb
pop
jmp
imul
sbb
mov
jmp
mov
mov
cmc
fcoml
shrl
xchg
push
scas
ret
orb
shll
cmp
jbe
int3
adc
jmp
jg
and
xchg
hlt
xchg
loope
fisubrl
adc
loopne
enter
inc
sti
subl
das
jmp
popf
lea
sub
sbbl
ss
pop
loope
cmpsl
fnstsw
add
push
jns
rorb
mov
cmp
icebp
xchg
cmp
not
jg
dec
rcll
mov
fs
push
cmp
mov
jg
push
mov
pop
ret
push
rorl
int3
pop
mov
int
xchg
in
push
jno
and
in
lods
jb
pop
clc
shl
mov
loop
push
cmpsl
pop
fsubr
push
push
lods
mov
sarb
xor
mov
mov
push
sbb
ja
iret
roll
mov
das
cld
je
push
mov
fwait
in
cmp
aam
test
inc
and
lret
dec
dec
cwtl
mov
pushf
ret
or
inc
xchg
lods
into
add
inc
and
imul
pop
jo
shlb
lock
fsubrl
inc
sub
iret
cmpb
loope
xchg
adc
lock
lret
faddl
je
xor
cld
xchg
fnstenv
push
lods
xchg
cmp
inc
xchg
icebp
out
rolb
jbe
mov
movb
test
pop
ss
out
sbb
jno
or
inc
daa
push
mov
lock
sbb
sbb
enter
shlb
je
insl
xchg
or
xor
fmull
test
mov
mov
shll
push
xchg
xchg
mov
and
cmpsb
insb
dec
ficoml
rol
mov
jo
xor
mulb
arpl
jl
ja
lahf
cmp
popf
mov
xchg
fildl
pop
popf
out
aas
adc
sbb
arpl
daa
arpl
loop
rcrb
fcompl
out
stc
adc
mov
sbb
ss
inc
pop
psrlw
and
imul
sub
sets
out
ss
test
xor
adc
jp
dec
jp
sti
fs
sub
sti
jle
out
dec
ss
adc
mov
or
lret
popa
sub
xchg
arpl
stos
push
into
cmp
mov
out
jg
pop
cmp
ljmp
mov
es
mov
adc
or
movsb
mov
jb
in
ja
lea
scas
mov
push
ret
daa
in
jae
inc
mov
and
sub
int
cltd
je
lcall
push
push
popa
icebp
pop
cmpsb
lea
loopne
pusha
ret
mov
iret
mov
pop
loope
cmp
mov
movsl
push
jge
sub
fnsave
sahf
cwtl
mov
xchg
fildl
loopne,pn
adc
aas
sub
and
popf
into
divl
daa
scas
std
or
imul
xchg
inc
loope
sbb
cmp
frstor
hlt
cmp
xchg
aad
xlat
lea
lea
lods
pop
ss
xchg
jmp
pop
inc
mov
leave
std
adc
outsb
and
sar
pop
xor
je
mov
mov
cmp
mov
in
add
jecxz
xor
adc
mov
movl
inc
sahf
in
addr16
clc
ljmp
sub
jg
fidivl
sbb
sbb
paddq
loopne
mov
jae
jne
push
pop
jge
push
dec
ds
es
sbb
jp
sarb
xor
sarl
cvttps2pi
mov
cmpsb
nop
shll
and
adcb
mov
stos
lcall
dec
push
cmp
loope
dec
mov
jnp
dec
jne
std
mov
xor
and
inc
inc
push
jns
lods
sbb
scas
pop
cmp
inc
jno
cmpsb
test
jnp
inc
xchg
adc
dec
push
ret
lods
dec
inc
pop
in
in
xchg
and
jns
and
mov
push
sbb
dec
aas
pushf
push
cmc
jp
xor
mov
sub
ret
jns
cmpsl
stos
mov
add
cmp
aaa
jmp
jp
ljmp
xchg
cs
pop
push
or
clc
push
mov
daa
push
hlt
cli
xor
das
fistpll
mov
sub
repnz
pcmpeqd
in
pop
cmp
cmpb
mov
je
cli
sub
xchg
push
sbb
sbb
andb
mov
sti
sub
fs
cmp
popf
add
pop
sbb
aad
dec
in
popf
xchg
xchg
imul
xor
inc
out
jl
bswap
stos
negl
shl
std
or
push
daa
adc
sub
movsl
loope
inc
sarb
mov
cmp
add
xchg
fs
or
sbb
popa
push
in
dec
loopne
addr16
adc
fsubs
ljmp
jns
lcall
lods
pop
xor
das
jecxz
leave
pop
repz
xchg
xor
into
fwait
pop
inc
ds
jle
leave
idivb
clc
ja
divb
mov
xchg
dec
ret
imul
pop
testl
bound
popl
xor
sbb
inc
cmpsb
sbb
xor
mov
test
sub
imul
call
xor
mov
jae
lock
movsb
aaa
or
jbe
insb
or
add
jmp
outsl
roll
pop
shlb
jg
dec
jns
jg
pushf
add
push
add
jge
or
loope
stos
in
hlt
and
adc
mov
jg
jecxz
mov
clc
pop
pop
jb
xchg
ja
out
cli
shrb
jbe
push
insl
fmull
push
and
stos
inc
mov
sub
pop
mov
cwtl
cmpsl
push
in
pop
shll
ret
nop
stc
pop
xchg
lcall
mov
out
mov
test
pop
mov
sbb
ss
or
sub
sbbl
mov
hlt
jno
lods
arpl
fcmovu
shl
jb
insb
jmp
xor
cld
xchg
and
add
mov
or
leave
inc
jbe
call
push
jge
rep
pusha
and
add
and
mov
adc
dec
das
jbe
dec
popa
sbb
jmp
outsl
in
in
inc
mov
mov
or
int3
mov
movsl
sub
xchg
jno
imul
mov
sbb
std
push
cmp
cmpsb
inc
int
mov
cmp
lods
lds
xor
add
das
lods
inc
mov
push
ss
std
sub
test
push
pop
ffreep
das
adc
sti
sbb
push
push
test
fldcw
xchg
stc
jne
push
jb
jmp
inc
or
sub
jbe
inc
stc
sarl
jns
pop
outsl
jge
adc
mov
inc
push
pop
pop
pop
arpl
pop
sbb
popa
dec
test
or
loop
xchg
loopne
arpl
inc
insb
adc
xchg
out
jmp
into
pop
bound
scas
cwtl
enter
loopne
aas
out
scas
fmulp
sub
scas
mov
push
imul
lcall
lock
mov
mov
xchg
cmpsb
push
add
mov
sub
fs
mov
jne
jae
movsb
sub
sub
xlat
sbbl
insl
inc
movsb
mov
cs
aaa
pop
loop
cmc
add
jl
scas
cmpl
mov
lret
arpl
icebp
std
sar
xchg
pop
pushf
push
or
jg
mov
xchg
sarb
sub
add
int3
dec
xchg
ret
mov
or
and
jnp
psubq
inc
dec
jb
pop
mov
rorl
cmp
sahf
pop
sub
dec
daa
lods
mov
cmpsl
data16
sub
jg
rcrl
cmp
sbb
rcll
jle
sbb
cmp
out
into
pop
out
mov
cli
rol
jbe
enter
cmp
jnp
push
push
push
mov
adc
adc
movsl
popa
fildll
fsts
or
push
pusha
repz
mov
add
or
outsl
js
mov
fcomi
jbe
ficoms
cli
and
outsl
cld
dec
jnp
stos
inc
or
xchg
inc
lcall
les
rcr
xlat
mov
fcmovu
iret
decl
inc
or
mov
jb
xchg
stos
pusha
adc
daa
jg
sub
push
sub
arpl
mov
stos
arpl
pop
lods
push
mov
lahf
scas
inc
mov
add
dec
mov
or
mov
mov
scas
xchg
imul
sbb
in
or
lcall
cmp
sbb
adc
pushl
dec
loopne
sbb
call
insb
lret
mov
xchg
rcrl
pop
fidivl
pop
fstps
fildll
int3
int
aaa
mov
sbbb
test
sub
xor
scas
shr
lret
mov
loopne
inc
xchg
scas
sbb
lcall
popf
pop
rcl
push
out
hlt
stos
xchg
outsl
jp
pop
fcmovnbe
mov
xchg
enter
lret
scas
mov
les
cltd
inc
cs
scas
mov
in
ljmp
stos
jmp
mov
inc
mov
shrb
or
lcall
xor
leave
data16
movsl
adc
arpl
jne
or
xor
stc
push
data16
push
cmp
cli
mov
mov
inc
sarl
xchg
jmp
mov
ss
add
dec
dec
sub
in
xor
test
mov
insl
pusha
imul
data16
jmp
hlt
mov
adc
adc
icebp
and
or
adc
xlat
xlat
fsubr
inc
shl
movsl
sbbl
jle
mov
lret
jp
jecxz
xor
dec
adc
xor
sbb
test
in
insl
mov
mov
push
mov
sub
ja
dec
inc
pop
pop
push
add
data16
mov
idivl
jg
cwtl
lret
add
loope
push
pop
jne
scas
xor
push
adc
mov
push
mov
lods
jp
sub
mov
fs
aaa
or
mov
sbb
inc
jp
dec
ret
xor
jno
or
lea
insl
push
sub
dec
mov
sub
dec
push
jmp
push
push
std
inc
dec
push
loopne
jg
inc
es
std
pop
sbb
fidivrs
popf
or
adc
mov
aam
int
pop
mov
lods
xor
loop
mov
or
aaa
push
imul
pop
outsl
dec
decb
xor
dec
lods
imul
loopne
divb
or
test
inc
aad
mov
les
jmp
enter
nop
xor
or
jl
cmp
cmpsb
pop
rorl
sub
sbb
test
cmovp
out
or
xchg
mov
dec
movl
outsb
test
aaa
sub
push
mov
and
xchg
rorl
push
push
jno
mov
mov
add
sbb
mov
repnz
mov
paddusw
fstps
xor
push
scas
xchg
out
jns
add
outsb
inc
lahf
adcb
xchg
mov
push
subb
lods
fidivs
xor
dec
out
cld
ds
loope
out
sub
fistl
int
sbb
out
xchg
mov
data16
sub
pop
in
call
cli
mov
mov
mov
cmp
add
into
adc
mov
mov
mov
mov
ret
cwtl
repz
adc
aas
ror
sub
es
mov
adc
mov
mov
or
lret
xor
and
stos
pop
adc
or
in
push
in
xchg
and
outsb
popa
and
dec
or
shlb
or
jmp
and
sbb
mov
leave
sub
lea
pop
shll
test
pop
xchg
jle
push
adc
mov
lods
cmp
mov
and
repnz
or
cmp
dec
les
jns
aas
inc
popl
mov
imul
xchg
mov
pop
std
or
and
imul
jb
mov
outsl
mov
ret
push
lock
ret
das
cld
cli
rcrl
out
inc
sbb
lret
cs
lock
fimull
sub
dec
or
in
jl
ss
lcall
out
and
jp
dec
mov
jp
add
push
fcoms
jmp
xor
lret
jge
aam
xor
xchg
pushl
xchg
dec
gs
aas
outsb
je
add
push
shll
mov
arpl
pushf
fdivs
sub
out
flds
xchg
hlt
enter
jo
outsl
fdiv
outsb
dec
push
sbb
mov
lock
sbb
scas
push
sub
loopne
sbb
jecxz
sbb
push
cld
sbb
mov
and
arpl
mov
mul
add
clc
ficomps
in
dec
pusha
aad
leave
add
mov
cltd
push
rclb
mov
fisubrl
adc
sub
sahf
jg
inc
mov
loop
mov
popa
adc
sahf
push
xor
rcrb
xor
and
cwtl
lret
jb
xchg
sub
ds
jmp
pmaddwd
or
xchg
adc
pop
push
pushf
rcl
mov
sbb
mov
iret
jmp
icebp
jecxz
mov
pop
out
cmovne
mov
cltd
cmp
jnp
in
dec
lods
out
dec
mov
or
mov
jmp
push
inc
dec
jae
add
adc
fsubrs
mov
mov
mov
cs
and
shlb
xchg
insb
inc
push
sbb
aaa
and
or
sarl
fildl
aam
mov
cmpsb
mov
cmpsl
ret
or
inc
add
lock
push
sbb
jecxz
mov
scas
aad
out
sarb
jmp
mov
mov
push
repnz
ja
cld
cmp
sub
test
out
push
xchg
nop
push
jbe
mov
xchg
mov
cli
push
sbb
adc
mov
and
push
loopne
dec
mov
sbb
repz
enter
mov
ljmp
pop
rep
push
inc
rcrb
in
mov
mov
push
inc
dec
ds
icebp
or
or
lods
xchg
pop
gs
cmp
fstpt
int
jge
pop
adc
cs
push
sbb
mov
jge
push
loopne
movsb
cmp
call
push
popa
xor
aaa
lcall
lock
loop
xor
inc
mov
into
lods
dec
cld
cmpsb
add
pop
div
push
das
ja
in
xchg
lock
aad
test
and
cmp
sbb
mov
lods
dec
sbb
cmc
in
enter
sahf
repnz
cmpsb
adc
fmuls
sbb
sarb
sbb
add
out
adc
jbe
inc
cltd
scas
mov
pop
aas
mov
enter
nop
dec
testl
xchg
jne
mov
pop
imul
mov
sub
bound
mov
pop
lret
lret
xchg
hlt
out
sbb
adc
iret
int3
jge
dec
outsb
test
xchg
js
sbb
sbb
dec
or
mov
xlat
or
and
loope
pop
adc
mov
orb
dec
pop
in
jne
pushf
push
rolb
adc
negb
cmp
pop
clc
repz
scas
adc
in
jbe
xorb
popa
pop
ret
jge
int3
add
ss
sbb
xchg
imul
movsl
sbb
lods
pop
jmp
loopne
and
mov
sbb
adc
adc
icebp
cltd
das
filds
push
push
dec
jbe
dec
loop
mov
mov
stos
mov
mov
repz
cmpsb
xor
notl
movl
loop
orb
cmp
int
dec
inc
gs
sub
fsubrs
jle
mov
call
into
xchg
int3
hlt
std
sahf
push
adc
stos
or
les
fs
sub
aas
xchg
out
mov
loop
mov
fidivs
test
or
mov
mulb
push
cwtl
mov
dec
xchg
out
mov
lret
cmp
jne
mov
pop
push
pop
pop
mov
inc
gs
mov
jae
push
std
shll
outsb
call
push
outsb
imul
jmp
movsb
movsl
push
aaa
lcall
addr16
mov
sti
mov
std
xchg
in
inc
icebp
adc
in
mov
mov
and
and
push
push
jmp
filds
stc
loope
cld
testl
add
cmp
enter
xchg
loope
out
mov
orl
xchg
insb
jno
rcll
xchg
test
xor
or
sub
mov
mov
mov
cwtl
push
or
out
out
cmp
or
xor
pushf
fisttps
int
imul
sub
adc
fwait
jnp
test
sub
iret
fiadds
mov
sub
mov
lds
sbb
aas
mov
ret
jmp
jecxz
movsb
dec
notb
enter
hlt
dec
js
pop
ret
xchg
inc
lods
mov
in
out
add
ds
das
inc
push
sti
lcall
add
adc
sbb
inc
dec
imul
inc
mov
fistpl
jae
rcl
rol
test
pop
gs
test
dec
outsl
sub
fisubs
cmp
test
shll
jnp
add
cmp
fidivl
jb
push
fsubs
fnstcw
fisttpl
xchg
xchg
ret
cmp
sti
lahf
mov
lds
inc
xor
movsl
out
lret
jl
imul
cld
jmp
stc
and
xchg
pop
jg
roll
mov
loopne
xchg
cmp
pop
xor
mov
dec
fdivp
sti
fs
ficompl
sbb
jmp
mov
and
ds
and
inc
xor
pusha
xor
push
jle
cmc
or
xor
leave
aam
sbb
test
or
inc
mov
int
jp
fstps
lock
icebp
jae
inc
cmpsb
jb
mov
add
arpl
cmp
out
les
dec
inc
pop
loop
jo
lret
rcll
inc
adcb
loopne
or
testb
mov
adc
adc
les
jns
andl
add
lcall
icebp
add
pushf
subl
push
lret
jmp
test
imul
ret
mov
adc
popa
insb
push
outsb
dec
sti
xchg
das
pop
and
jmp
xor
xlat
int
daa
mov
inc
dec
or
addr16
int
adc
shr
rcrb
or
repz
pop
loop
add
jle
aam
inc
push
jmp
bound
insl
lret
inc
pop
or
movsl
jg
fwait
outsl
cmp
shll
movsb
xor
call
test
nop
test
mov
xchg
jne
push
lods
cmpl
mov
leave
sbb
cmp
fldenv
stos
sbb
lods
jbe
cltd
jecxz
add
loopne
popa
loope
fldcw
jle
jecxz
hlt
leave
fildl
jo
cmp
push
cmp
mov
aaa
ja
ljmp
cli
popf
dec
test
movsl
aas
push
pop
test
and
mov
jae
push
pop
shrl
es
pop
mov
lods
inc
popf
adc
lret
cmp
adc
sub
mov
mov
jmp
roll
lea
test
pop
gs
fdiv
js
adc
int
repnz
fstps
mov
xchg
lahf
repz
mov
xchg
sbb
sub
pop
in
aas
xchg
rol
not
add
movsl
jp
pop
push
pop
add
out
add
lret
fldcw
and
xor
test
inc
test
xor
lret
add
inc
loopne
fdivs
mov
insl
pop
jno
leave
jge
stc
cld
sbb
mov
ds
ret
not
bound
jbe
add
mov
mov
ror
mov
inc
and
cmc
xchg
sub
ss
fcoml
ret
rorb
shrd
inc
xlat
fildll
sbb
push
iret
and
popa
pop
push
lahf
adc
lds
roll
mov
aad
btr
mov
rcrb
xchg
shr
jno
jecxz
lds
jge
pusha
cltd
and
int
mov
jae
inc
out
stc
out
aad
adc
frndint
inc
inc
repz
repz
jmp
add
jg
pop
shrb
inc
adc
xlat
lds
fwait
jl,pn
insl
pushf
add
push
imul
out
cmp
insb
jp
in
jp
xchg
pop
sbb
dec
and
xchg
xchg
xchg
leave
out
mov
mov
inc
pop
jge
push
dec
mov
in
adc
jns
scas
mov
enter
outsb
xchg
cld
rcrl
push
cltd
js
repnz
lods
inc
mov
or
mov
mov
subb
xor
cmp
jns
jl
outsl
jge
jecxz
cmp
fcomps
cwtl
repz
nop/reserved
mov
jb
mov
xchg
or
cmp
ret
scas
sub
pop
testb
lods
rdtsc
mov
data16
shrb
out
inc
mov
leave
mov
inc
cs
cli
stos
jae
movsb
mov
popf
arpl
and
sub
adc
js
cli
in
rorl
adc
cmp
fstpt
mov
faddl
in
jp
sti
in
fdivr
mov
and
roll
ja
sub
lcall
loopne
movsb
cltd
into
mov
in
pop
pop
js
pop
dec
jno
in
lahf
pusha
mov
jno
dec
mov
fs
push
or
mov
jno
inc
jo
jle
cld
jns
pop
ud2
sub
pop
pop
inc
test
andb
fiaddl
sahf
rolb
mov
pop
jmp
pop
decl
push
xchg
mov
das
std
jne
pop
or
stc
mov
test
mov
sub
out
out
inc
shll
adc
inc
and
push
sbb
push
mov
loop
test
jg
mull
push
scas
xor
leave
sub
add
mov
cmp
out
push
push
pop
inc
adc
xchg
mov
stos
outsb
lret
stos
inc
sbb
xor
dec
cmc
sub
xor
push
repnz
rorl
popa
sbb
push
insb
call
fs
insb
das
jg
and
mov
movsl
cwtl
es
mov
dec
enter
scas
mov
lods
clc
sub
addl
pop
test
jno
mov
fsubrs
mov
loopne
cmp
or
xchg
sub
jno
pop
ror
test
lahf
lods
push
arpl
xchg
xchg
divl
dec
pusha
inc
push
jecxz
rorl
add
enter
addr16
std
sub
leave
mov
daa
fwait
cmpsl
mov
push
or
push
into
fsubr
dec
insl
dec
xchg
push
xor
fisttps
insb
aam
inc
jae
xchg
cmp
or
cmp
sub
aam
clc
addl
inc
stc
lods
adc
lods
inc
mov
xchg
call
mov
mov
xchg
enter
xchg
nop
sub
mov
mov
mov
pusha
xchg
testb
popf
out
orl
pop
sub
xor
dec
aam
pop
arpl
mov
jno
stc
lahf
orl
pop
popf
data16
cmp
notl
leave
xchg
adc
xorb
sub
jmp
outsl
mov
pushf
or
loope
jge
test
cld
jmp
int
addr16
xor
std
lea
sti
fcoms
cld
sbb
mov
mov
mov
pop
jno
xor
loope
or
in
xor
push
or
ds
aaa
jo
and
mov
mov
aas
ds
mov
movsb
outsb
jno
lods
and
ljmp
incb
jecxz
adc
aaa
jnp
loope
sahf
clc
insb
loopne
push
sarl
fs
ja
push
mov
jge
or
test
mov
ljmp
in
add
fdivrl
lock
xchg
adc
mov
dec
movsb
cmpsl
dec
mov
jmp
xchg
adcb
test
push
pslld
inc
jnp
bound
inc
hlt
clc
inc
lods
pusha
xchg
rolb
inc
cmp
pop
dec
dec
sub
push
sub
inc
js
fildll
mov
inc
mov
mov
sahf
pop
xchg
mov
mul
cltd
jecxz
xchg
mov
dec
movsl
je
nopl
jp
icebp
pop
fld
mov
hlt
jo
lds
pop
xlat
pop
mov
aad
sbb
in
aaa
subb
push
stc
pop
fcoml
pop
or
popf
arpl
or
jecxz
fisttpl
inc
outsl
jnp
sub
dec
add
dec
repnz
imul
in
cmp
lods
xor
mov
and
push
scas
mov
fimull
fcmove
and
dec
pop
push
pop
imull
mov
xor
mov
jbe
add
lcall
gs
mov
jbe
hlt
sbb
lods
sti
xlat
loopne
push
cmp
or
aaa
mov
test
sub
std
xlat
inc
push
cmp
dec
aad
mov
sbb
or
jnp
cmp
cmp
pop
fs
adcl
xchg
rol
xchg
stos
sar
xchg
jp
fdivs
cld
cmpsb
ja
jne
popf
leave
imul
ror
pop
cwtl
out
jp
inc
push
cmp
pop
adc
mov
out
fwait
mov
popa
fcmovbe
in
test
mov
mov
or
dec
fldenv
mov
adc
stc
loop
dec
insl
push
and
cmp
mov
hlt
jmp
inc
sarb
lods
xchg
add
or
fs
xchg
push
icebp
addr16
dec
mov
out
dec
shll
sbb
hlt
repz
adc
js
loopne
int
stos
jl
and
dec
xchg
jno
mov
or
jge
mov
push
cmp
ret
jo
data16
mov
add
pop
outsb
dec
fdivrl
sbbb
dec
xchg
pop
stc
ret
push
popa
add
and
mov
test
mov
loopne
inc
dec
add
xchg
xchg
or
or
adc
aaa
mov
xlat
inc
std
std
pop
xchg
imulb
js
inc
lcall
mov
dec
fdivrl
aam
cmp
mov
push
and
or
aas
mov
mov
ror
and
dec
xchg
icebp
daa
mov
ljmp
inc
shrl
xchg
nop
pop
mov
lret
jp
push
push
callw
fcom
out
xchg
push
in
iret
cwtl
inc
mov
jecxz
xlat
leave
enter
repnz
pop
push
lret
js
into
cmp
pop
pop
ffree
lds
cmp
mov
pop
sbb
lcall
imul
jecxz
icebp
data16
xor
pushf
jge
add
lcall
cmp
ret
cmp
or
sbb
loope
xor
add
mov
fcomps
ja
add
pop
cmpsl
and
bound
sub
sbb
adc
xor
mov
sahf
psrlw
ljmp
mov
ret
out
dec
popa
lcall
sbbb
lret
mov
das
xor
jecxz
lcall
sahf
mov
add
mov
adc
lods
add
leave
inc
out
mov
push
mov
aaa
cmp
aas
dec
cmp
jle
mov
loope
stos
in
jbe
imul
punpckhdq
shl
jo
pop
jbe
lock
loopne
and
push
push
leave
mov
loop
xchg
dec
push
stos
es
loop
roll
daa
push
daa
sbb
or
jmp
int
popf
xchg
out
cwtl
and
and
lods
call
dec
mov
lret
mov
adc
mov
mov
fistps
out
enter
pop
dec
adc
mov
icebp
inc
mov
nop
ds
jns
je
cmp
jl
xor
mov
push
fidivs
fnstcw
iret
mov
dec
jns
aaa
push
imul
es
sbb
dec
mov
sbb
jmp
xor
lret
icebp
dec
fwait
std
call
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
test
enter
popf
mov
sti
addl
add
sub
repnz
jg
cmp
xlat
dec
ljmp
aaa
shrb
cltd
imul
pop
push
mov
mov
xchg
mov
stc
aas
sbb
jno
enter
mov
les
jp
ljmp
orl
xor
dec
fnstsw
pop
mov
xor
mov
mov
dec
addr16
xor
faddl
sti
outsl
pusha
ds
repnz
fadd
pop
and
jge
das
in
sub
data16
cs
xchg
sub
ja
inc
icebp
xchg
jecxz
push
fs
cltd
cmpb
pop
adc
sbb
int
sti
xchg
ds
loope
push
mov
mov
loope
pop
mov
pop
fadds
roll
into
ss
jae
out
add
aas
out
test
add
sub
aam
dec
ds
lret
lods
xchg
and
jae
ret
sbb
sub
lock
xchg
sbb
mov
push
imulb
or
mov
xor
pop
mov
adc
xchg
lret
xor
movsl
pop
rolb
inc
fstps
xor
add
add
add
xchg
add
inc
xchg
add
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
mov
add
xor
add
