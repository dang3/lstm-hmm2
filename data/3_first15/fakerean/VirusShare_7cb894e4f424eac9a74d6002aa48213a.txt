das
stos
stos
xchg
add
std
in
in
sub
pushl
lea
push
push
in
push
push
lea
push
lea
push
mov
cld
hlt
push
push
push
call
leave
ret
imul
lock
js
add
in
push
insb
js
call
jo
dec
int3
mov
iret
mov
push
lock
inc
inc
mov
call
mov
js
clc
push
push
push
clc
not
fisubrs
imul
or
std
sub
pushl
adc
sbb
inc
adc
jmp
dec
sbb
neg
inc
push
push
adc
testb
sub
fisubrl
imul
mov
mov
sahf
insb
push
out
mov
dec
or
and
call
jne
jmp
rorl
dec
ss
mov
pushl
gs
stos
out
inc
dec
sbb
mov
neg
not
sbb
jmp
fistpll
sub
js
jo
mov
dec
loopne
cld
sbb
mov
hlt
inc
outsb
push
sub
jnp
addl
xor
fimull
in
call
jmp
add
dec
add
push
dec
inc
dec
sub
jmp
fmuls
jmp
fwait
idiv
push
rcrl
push
inc
jmp
addl
sbb
call
mov
out
add
push
pop
fcomp
adc
loopne
dec
cmp
sub
outsb
push
mov
dec
cmp
btc
inc
mov
sbb
call
mov
dec
sbb
adc
neg
add
jmp
or
sbb
adc
dec
popf
std
fistpll
in
sbb
subb
jae
call
fsubrl
pop
aaa
or
push
fistpll
mov
imul
jae
push
adc
mov
push
sbb
xlat
mov
cli
jmp
popa
sbb
testl
leave
ret
dec
sbb
pop
cld
or
jmp
movl
inc
aas
inc
in
push
push
mov
hlt
clc
push
outsl
je
mov
insb
push
cmc
loopne
aas
jle
dec
imul
push
xor
xchg
cmpsb
sbb
mov
xor
pusha
js
bsr
push
push
push
dec
xor
push
call
push
das
ss
jmp
andl
push
psrld
dec
andb
push
jg
cld
call
popa
or
pop
jno
fwait
dec
mov
push
lea
aaa
outsl
das
jp
jno
inc
pushf
or
inc
add
jmp
fwait
lods
inc
add
sub
test
andl
mov
fimull
pop
ret
outsl
jno
jne
mov
sub
xchg
dec
popl
arpl
jg
mov
call
sub
push
xchg
mov
ds
rcrl
push
inc
push
call
jb
scas
fisttpl
push
outsl
push
or
sub
aaa
push
jmp
sub
repnz
add
es
neg
adc
add
mov
lret
imul
add
inc
gs
add
call
push
js
adc
inc
not
jmp
dec
mov
imulb
or
not
sub
jmp
and
pushl
jl
lock
push
push
shl
add
sbb
imulb
pop
push
testl
jae
jmp
add
icebp
popa
mov
ljmp
bound
push
xor
jg
std
jo
js
xor
pop
subl
push
jno
push
dec
or
xor
mov
pop
cmp
push
lcall
popl
enter
lock
cmp
test
push
inc
je
ret
popa
lock
call
mov
fwait
mov
sub
data16
repz
cmpsb
sbb
xor
add
xor
ja
je
cmpsb
jbe
dec
or
in
inc
pop
xchg
pop
cwtl
ret
adc
sub
push
xchg
sub
mov
jbe
push
int3
pop
jo
and
rorl
ss
test
cmp
xor
dec
dec
pop
add
or
into
add
mov
std
std
adc
xchg
dec
add
dec
xor
dec
nop
leave
movsb
cmp
btc
cs
shll
adc
pop
icebp
xor
lds
std
nop
or
and
push
loopne
dec
cwtl
cli
jmp
out
push
clc
cltd
in
push
icebp
mov
outsl
jb
popa
pop
sbb
test
push
sub
in
in
call
push
enter
push
pop
mov
push
push
shlb
xchg
sarl
loopne
dec
push
push
outsl
inc
aaa
cmc
incl
mov
push
sbb
push
dec
add
decl
push
dec
ficoml
sarl
dec
push
es
xchg
lret
bnd
xchg
push
out
xor
mov
dec
xor
call
stos
mov
push
dec
call
imul
rcll
mov
add
orl
inc
les
gs
scas
js
dec
mov
adcl
in
cmc
stos
push
test
repz
cmpsb
add
mov
push
or
jnp
stos
xor
ret
arpl
ret
cmp
sbb
or
pop
ret
push
js
loop
inc
imul
mov
push
arpl
je
fisubs
sub
je
mov
mov
popa
loope
add
push
pop
dec
bound
xor
mov
jne
add
imul
bound
push
pop
sbb
mov
loope
aam
test
sbb
lock
lret
adc
sbb
jmp
xor
adc
cli
sub
sbb
in
call
jmp
jge
sbb
inc
jmp
lock
inc
sub
popl
cmp
mov
icebp
pusha
or
loopne
jns
add
jl
push
xor
fiaddl
sarl
enter
and
mov
jg
jno
fwait
or
mov
insl
lods
adc
jge
sbb
imul
or
ljmp
js,pt
and
pusha
dec
sbb
loop
fdivs
negl
not
sbb
ret
sbb
jo
data16
addr16
xor
push
outsb
cmc
cmc
imul
dec
xor
xor
loopne
fwait
dec
xor
jge
cs
sbb
jle
mov
pusha
jecxz
test
fidivl
cmp
shrl
or
loope
and
push
mov
adc
add
sub
mov
sub
aam
inc
aaa
inc
and
pop
fdiv
jbe
xor
pushf
inc
cs
dec
out
lahf
xchg
add
inc
push
dec
mov
sub
dec
jmp
sub
dec
inc
push
jmp
aaa
mov
add
dec
sub
inc
movsb
dec
sub
jnp
repnz
add
ret
cmp
sub
add
inc
ja
pop
mov
inc
push
ss
add
subl
inc
xchg
lock
add
lock
loopne
jmp
inc
sbb
add
mov
add
push
ljmp
scas
call
pop
pusha
lds
stc
pop
lods
clc
sbb
movsb
rorl
call
loop
rclb
testl
pop
mov
or
cwtl
add
jmp
jg
bound
jns
xchg
jno
out
push
int
lods
ret
inc
inc
imul
push
dec
outsl
js
adc
fcoms
mov
sub
add
dec
add
mov
fimull
pop
dec
and
mov
inc
cmpsb
int
jns
jo
ss
jbe
or
sti
subl
adc
arpl
push
pusha
clc
jno
arpl
iret
and
mov
xor
jp
cld
pop
dec
mov
add
ss
bound
fidivrl
pandn
clc
adc
adc
and
andl
sahf
call
ret
add
push
push
push
pop
fs
ja
sub
xchg
xchg
mov
inc
loope
jmp
cmpsl
sub
enter
pop
jo
sub
int3
adcb
sahf
sub
push
hlt
mov
in
jmp
rolb
ja
jno
mov
in
loopne
imul
movsl
cmp
loop
rolb
xor
js
push
das
outsl
xor
dec
fadds
push
pop
pop
stos
or
dec
xor
pop
gs
ds
inc
push
btsl
and
sbb
cli
ljmp
rcrl
cmp
inc
enter
inc
push
push
sbb
in
dec
mov
iret
clc
movsl
jecxz
push
aad
lcall
out
push
push
imul
sahf
inc
jo
mov
popa
push
push
popf
adcl
dec
es
inc
adc
sub
call
or
push
lret
rcr
cld
push
pushf
cmpsb
gs
outsb
bound
in
adc
aad
outsl
jo
call
add
test
adc
ljmp
cmp
push
push
inc
dec
jge
cld
add
imul
ja
push
push
sbb
or
ret
orl
fdivl
shrb
dec
cmpl
mov
push
cmp
cli
mov
sbb
rorb
push
test
out
sbb
add
call
inc
fs
mov
nop
leave
fsts
ja
aaa
rcrb
clc
and
add
pshufw
push
sti
fs
dec
push
mov
fld
xchg
fwait
neg
dec
mov
xchg
insb
imul
xchg
dec
sub
push
scas
in
jbe
dec
subl
push
xor
outsl
mov
inc
mov
arpl
mov
mov
pop
pop
add
icebp
dec
xchg
fsubl
decb
inc
cmp
jne
sub
sbb
punpckldq
bound
push
lock
mov
enter
test
imul
mov
dec
stos
negb
xchg
ds
in
pusha
inc
fcomp
dec
inc
mov
call
lock
outsl
xchg
dec
out
or
outsb
dec
dec
or
mov
rcrb
push
insl
mov
mov
ret
jecxz
cmc
and
and
data16
call
rcrb
ljmp
inc
pop
xchg
mov
je
mov
imul
adc
out
pop
scas
aam
add
jo
mov
inc
adc
cmp
jmp
xchg
xor
pop
repz
loop
pop
addr16
add
call
gs
in
ljmp
jae
rcrb
pop
jne
xchg
leave
pop
in
jns
mov
stc
mov
xchg
ret
inc
sbb
dec
je
scas
pop
out
out
loop
dec
out
hlt
sub
mov
into
mov
cs
jl
mov
mov
test
push
push
xchg
shld
jg
outsl
mov
add
clc
pop
and
adc
mov
fs
std
int
jns
add
pop
xor
nop
pop
xlat
lahf
outsb
adc
cmp
dec
sti
mov
jmp
pop
ret
pop
push
enter
mov
push
lods
stc
insl
dec
ljmp
jg
inc
pop
or
fsubs
pop
fimuls
pop
adc
call
jp
aam
pop
inc
data16
shrl
fistpl
repnz
sub
xchg
pop
push
lret
ret
jmp
mov
jg
sub
sbb
push
pop
inc
jnp
loop
gs
das
daa
push
lock
ljmp
in
and
adc
je
aaa
test
or
xor
or
decl
pop
cmpsb
push
in
push
cmp
test
jge
mov
mov
mov
dec
pop
dec
push
fcomip
aaa
sti
imulb
into
pusha
sahf
pop
test
sbb
mov
dec
jecxz
and
in
adcb
or
inc
mov
in
pop
fnstenv
jp
sahf
fsincos
or
pop
mov
mov
jmp
jg
mov
or
divb
clc
hlt
sbb
jne
jg
in
fcomip
pop
push
and
lds
hlt
pushf
sub
fstp
sar
das
js
pop
or
les
outsb
aad
pop
movsb
rcrl
clc
in
fbld
sbbb
pop
outsb
sbb
in
xor
pop
mov
cs
xor
pop
ljmp
jmp
inc
scas
xchg
push
sbb
neg
or
or
in
negl
mov
push
and
mov
data16
pop
out
mov
cli
movsl
sbb
pop
repnz
lcall
pop
lock
pop
ds
loop
mov
pop
iret
jle
das
and
push
shlb
or
push
dec
xor
pop
out
aaa
jl
mov
pop
pop
dec
xchg
sbb
loopne
es
insl
add
mov
call
sbb
adc
loopne
movsb
lods
inc
sbb
arpl
mov
inc
jge
mov
mov
sbb
pop
mov
cmpsb
ss
add
fidivrl
sbb
dec
sbb
sbb
push
add
pop
ror
mov
mov
adc
bound
push
mov
pop
mov
jl
es
mov
in
xchg
mov
xor
jmp
sbbl
dec
je
sub
mov
sbb
jo
hlt
test
lcall
loope
hlt
scas
sub
pop
cmp
push
lock
rcrb
jae
adc
insb
jl
ret
xlat
jmp
in
pop
rcrl
mov
sbb
cli
das
clc
mov
push
push
pop
push
or
loop
enter
mov
dec
inc
test
cmp
dec
mov
cwtl
pop
cltd
dec
daa
mov
xchg
shrl
rcr
scas
outsl
outsl
lcall
jnp
stc
pop
pop
cmp
into
and
sbb
ss
cld
cmp
pop
pop
inc
sbb
jnp
jo
movl
and
popf
mov
movsb
push
sahf
xorb
aad
aad
xor
movsbl
lret
mov
pop
mov
out
pop
into
add
lahf
push
out
mov
lods
out
mov
dec
mov
imul
push
mov
mov
inc
sbb
stos
mov
xchg
shll
add
data16
pop
mov
bound
test
mov
push
sahf
mov
fistpl
dec
imul
add
pop
cmc
scas
lret
add
xchg
pop
lds
sub
dec
adc
push
xchg
sbb
jne
fiadds
xor
lahf
push
std
fisttps
inc
stos
pop
mov
pusha
push
xchg
ud0
push
sarl
and
ljmp
call
call
jns
call
pop
test
fisubrs
dec
mov
cld
insl
xchg
jle
test
mov
cs
jg
fdiv
pop
cmp
cmp
adc
inc
dec
mov
push
cli
orl
movsb
mov
pop
or
jno
lock
into
adc
sti
adc
js
xchg
xchg
inc
dec
stos
push
cld
fcomip
mov
sahf
das
push
mov
xor
inc
mov
out
divb
out
pop
dec
or
dec
out
movsl
inc
add
pop
arpl
shr
jne
stos
jmp
sub
jp
mov
mov
mov
cmp
add
pop
jo
jo
jo
sub
ljmp
xchg
iret
inc
push
fidivrl
loop
idiv
mov
into
cmp
iret
lea
xchg
out
adc
idivb
cli
cmp
pop
dec
adc
call
pushf
ljmp
jecxz
mov
cli
lret
mov
fistps
push
and
scas
push
std
mov
push
pop
push
inc
dec
inc
rcr
dec
push
insl
pop
inc
daa
imul
cmpl
sub
lret
cli
cmp
pop
ret
adc
inc
icebp
test
jp
fists
loopne
push
sbb
enter
xchg
push
pop
pop
ret
add
outsl
mov
cs
cmp
or
mov
mov
std
adc
cwtl
cmpsl
mov
cwtl
sbb
pop
xchg
xchg
pop
cmc
mov
ss
mov
cmpsb
mov
pop
cmp
subb
mov
mull
shlb
in
push
mulb
cmp
icebp
push
rorl
push
add
repz
push
sarl
adc
xor
cwtl
outsb
sub
pusha
mov
adc
es
lahf
adc
xor
imul
push
push
cld
xchg
lods
pop
lods
fwait
push
outsb
sbb
push
pop
rcr
insb
clc
mov
add
dec
push
cmpsl
cld
popa
jnp
pop
lahf
outsb
cmpb
pop
pop
sbb
out
aam
add
xchg
pop
jl
push
mov
out
mov
jle
scas
push
mov
int3
jge
xchg
aas
dec
inc
xlat
mov
jne
inc
xlat
int
or
mov
push
aad
or
cld
adc
mov
cld
xchg
in
mov
push
into
sbbl
ljmp
les
js
fucomip
jbe
sub
cwtl
cli
add
xor
dec
jbe
or
mov
dec
fadds
scas
push
in
mov
add
cmpsb
das
add
add
adc
inc
add
xor
lds
mov
inc
stos
push
das
and
jge
jg
jmp
js
mov
dec
pop
out
mov
push
dec
ss
fcmovnb
decl
ret
and
hlt
sti
out
cltd
pusha
mov
movsl
stc
cmpsb
sbb
lods
pop
enter
pop
mov
rorb
orb
inc
lock
lcall
push
movsl
imul
push
rclb
mov
jo
push
inc
sub
jg
out
jnp
sarl
insl
add
int3
mov
test
mov
aad
cli
jle
add
adc
fisttps
inc
dec
dec
orb
testb
lcall
mov
insb
pop
fldl
mov
xchg
fmuls
pop
icebp
pop
pop
mov
aad
pop
push
ret
push
or
sbb
mov
cmc
les
insb
lods
xchg
dec
sub
ds
cli
pop
pushl
jge
fistpll
imul
aaa
pop
and
mov
in
cmpsl
lods
inc
jb
or
out
outsl
sbb
test
loopne
pop
test
decb
sub
ds
jmp
sub
pop
mov
xor
xchg
outsb
fstpl
sbb
icebp
pop
daa
mov
lock
xor
and
jg
jl
add
out
sbbb
xchg
pusha
lds
dec
addb
xchg
mov
aaa
mov
jmp
xlat
mov
imul
add
pop
clc
xor
icebp
int
pop
sbbl
test
add
mov
inc
push
lods
pop
in
dec
loope
sbb
dec
mov
mov
aas
cmp
in
pop
cmp
ljmp
jp
jb
pop
mov
pop
sub
dec
mov
lock
shrl
pushf
add
stos
mov
sub
enter
in
sbb
stos
outsb
aas
lods
xchg
stos
test
mov
repnz
mov
add
ja
inc
pushf
mov
pop
sarb
test
fcomip
adc
sbbb
adc
and
clc
mov
add
in
add
test
stos
mov
pop
popf
pop
push
mov
dec
cmp
in
add
jbe
ljmp
divb
jecxz
cld
push
ss
ret
xchg
fisubrs
pop
sbb
push
mov
jecxz
fisttps
jo
ja
and
imul
rcrb
stc
scas
int
ds
iret
scas
rolb
sti
mov
mov
sub
sub
inc
adc
mov
inc
push
sub
dec
dec
cltd
fsubp
mov
add
jle
cmpsl
mov
ds
pushf
mov
test
pop
outsb
leave
adcb
out
unpcklps
jge
xlat
and
aaa
ss
xor
dec
jg
loopne
sub
add
data16
adc
dec
icebp
or
mov
mov
jmp
adc
scas
stos
in
and
jno
pop
mov
mov
es
adc
push
push
pop
shrb
cmp
outsl
pop
inc
mov
lods
add
out
pop
sub
dec
or
push
lods
push
cmp
orl
fwait
mov
inc
aam
and
jecxz
cmc
and
push
fs
or
popa
outsl
adc
push
enter
cltd
mov
out
fcoms
push
sub
mov
xchg
ficompl
xor
shrl
pop
pop
xchg
or
cs
adc
pop
pop
lock
aaa
sbb
mov
xor
outsl
xor
nop
push
sub
or
ds
arpl
scas
pop
mov
sbb
les
adc
out
les
data16
mov
fwait
scas
push
pop
fsubp
ljmp
sub
adc
insl
jg
pop
jae
cmpsb
inc
shl
ss
xchg
sub
call
add
pop
mov
aas
sub
call
cmp
enter
mov
mov
bound
add
jg
or
mov
das
movsb
push
cmp
push
pop
popl
ret
pop
into
aam
dec
mov
add
stc
arpl
or
pop
ds
je
out
xchg
aas
xchg
dec
stc
rcrb
inc
and
jle
cmpsb
scas
jle
cmp
mov
fdiv
in
jg
xor
loop
push
mov
xor
scas
outsl
ja
test
inc
outsb
mov
dec
jle
inc
sti
sahf
leave
js,pn
push
ficoml
ds
dec
out
and
pop
ljmp
mov
stc
daa
fstps
in
xor
in
pop
inc
push
push
xorb
xor
data16
cld
outsl
rcrb
add
test
ficompl
lock
sbb
std
scas
and
sbb
xchg
hlt
icebp
filds
mov
xor
imul
xorb
mov
js
xor
shr
fsubs
cmp
or
and
mov
pop
mov
sub
jne
inc
mov
insl
xchg
loopne
int3
inc
test
push
mov
cmp
pop
mov
and
lea
mov
jge
jae
bound
pop
xor
mov
dec
je
mov
rcll
hlt
mov
ret
xorl
jle
xchg
adc
movlps
out
lcall
in
dec
push
jmp
ds
jnp
xchg
aam
mov
ja
cmp
add
leave
in
and
or
add
push
movb
fwait
mov
sbb
lret
icebp
scas
cmpsb
and
test
cli
pushl
mov
das
sub
inc
mov
or
aam
jo
repnz
shrl
stos
cli
mov
adc
das
call
dec
mov
sub
lock
in
mov
icebp
ja
and
pop
or
sbbb
mov
shr
jle
inc
lahf
pop
cltd
test
xchg
out
loopne
dec
inc
shll
hlt
and
xlat
scas
je
sahf
sbb
or
out
fcoml
jg
or
out
mov
sbb
push
push
pusha
stc
cmp
mov
addr16
jo
nop
dec
pop
xor
inc
mov
and
pop
outsb
dec
or
sarl
pop
cwtl
imul
inc
dec
mov
push
lock
add
adc
or
jle
inc
roll
ja
aas
sub
in
or
das
sbb
fildll
iret
push
xchg
in
orb
adc
push
fnstcw
out
ljmp
aas
fdivs
in
dec
aam
mov
sbb
ret
fcomps
push
fisttps
and
mov
mov
sbb
cmp
dec
jmp
fdecstp
sahf
lods
fdivs
push
movsb
inc
cld
dec
imul
in
loop
out
repz
enter
cmp
mov
and
test
mov
pop
sbb
popa
push
jns
stos
pop
push
pop
xor
pop
shll
ja
and
fbld
inc
js
lret
repz
jge
jo
into
or
push
add
mov
outsb
adc
adc
sahf
push
cmpsl
pop
pop
int3
cld
xlat
das
jb
xchg
popl
jmp
in
fildll
or
test
int3
xchg
mov
cs
jle
cld
loope
xor
sti
jge
xor
sbb
adc
push
sub
add
idiv
incl
into
mov
cmpsb
push
mov
cmpsb
movsb
xor
sti
lock
mov
cli
stos
mov
loopne
mov
imul
adc
in
out
cmp
daa
popa
jl
stos
jle
sub
in
xchg
inc
add
out
mov
or
dec
mov
push
push
sahf
xchg
mov
sub
add
xchg
mov
out
cmp
pop
jbe
push
imul
adcl
fimull
mov
sbbl
sbb
pop
rorb
ss
stos
ficoms
mov
loope
sti
jno
cs
rcll
add
outsl
aam
xor
jns
mov
icebp
mov
or
sahf
aam
or
mov
jmp
loop
pop
out
cmpsb
or
push
test
pop
jg
ljmp
hlt
pop
mov
pop
xchg
enter
sub
mov
adc
or
je
cmpb
pusha
test
inc
mov
addr16
cld
scas
pop
test
mov
stos
aas
popa
es
lcall
jecxz
loop
rolb
and
or
movl
jecxz
mov
pop
xchg
xor
jle
pop
mov
movsl
mov
ret
popf
mov
adc
repz
jp
add
ds
lret
les
push
cld
outsl
es
rcrb
lock
das
pop
jno
aas
insl
mov
xchg
dec
cmp
ljmp
imul
adc
and
mov
pop
sub
pop
incb
fstpt
lahf
pop
hlt
jo
push
insb
outsb
je
nop
nop
sbb
mov
pop
notl
xor
mov
in
xor
cli
sbb
and
test
mov
push
pop
stos
movb
xor
stos
jp
scas
sub
mulb
dec
pop
pop
add
std
scas
cli
out
pushf
sbb
add
cmc
xchg
sbb
ret
add
or
es
ljmp
jg
pop
jo
push
push
cld
mov
cmpsb
mov
or
jmp
add
lods
into
sahf
add
pusha
add
sbb
sub
testb
pusha
pushl
fisubs
xor
cld
jl
cmc
jl
pop
clc
add
jnp
pop
into
inc
mov
outsb
ret
lea
gs
ret
cmp
js
sahf
out
in
jmp
fadds
imul
pop
out
mov
and
in
clc
outsl
mov
push
aam
clc
imul
bound
ret
mov
mov
andb
mov
cmp
or
imul
cli
sub
sub
arpl
dec
nop
das
adc
aam
hlt
or
iret
andl
mov
xchg
cmp
bound
xlat
outsl
ret
fwait
mov
in
call
pushf
testb
lds
mov
dec
orl
pop
xlat
push
cmp
je,pt
mov
mov
js
push
cli
add
inc
cld
cli
mov
pop
fildll
cli
insl
sbb
add
or
out
cld
stc
sub
pop
jb
dec
es
fsubs
scas
js
fdivr
pop
push
je
mov
stc
scas
test
fs
add
rorb
dec
pop
gs
cmp
push
iret
add
add
push
push
sbb
mov
lock
sbb
pop
outsb
or
inc
or
in
les
push
xchg
insl
xor
and
sbb
aad
insb
movb
incl
neg
enter
dec
push
pop
or
js
or
lods
stos
inc
adc
add
cmc
outsl
pop
sbb
dec
imul
pop
ljmp
lcall
dec
jmp
loop
scas
jns
bound
addb
hlt
or
test
out
out
ret
outsb
mov
enter
clc
pop
pop
jmp
pop
inc
add
sbb
js
push
adc
and
inc
call
std
ja
mov
mov
pop
xchg
sub
sub
data16
stos
stos
pop
or
ficoml
adc
jb
sub
pop
pop
pop
pop
lods
sub
lods
sub
and
bnd
xchg
adc
cmp
pop
xchg
adc
call
adc
jnp
movsb
mov
addb
gs
push
stc
cmp
pop
out
mov
dec
xchg
pop
mov
jnp
pop
push
rcrb
mov
xchg
pop
hlt
push
arpl
or
pop
jne
mov
lods
mov
jge
mov
ret
fcomip
out
andb
jns
test
inc
ss
mov
and
push
xlat
mov
repnz
jns
mov
mov
addb
push
push
xor
clc
inc
sbb
dec
ja
pop
mov
sub
inc
jle
rol
and
sub
enter
imul
cmp
mov
sti
pushl
cltd
rclb
add
sub
cmp
or
daa
movsb
mov
pop
mov
mov
jmp
pop
and
cltd
jecxz
testb
add
jecxz
jmp
push
rorl
mov
call
dec
aas
pop
clc
sbb
cli
movsb
mov
xchg
addl
or
fidivs
int
shlb
out
inc
aaa
std
add
jecxz
lds
mov
leave
hlt
pop
call
inc
sub
pop
insb
dec
xchg
fisubs
inc
sbb
mov
es
mov
out
mov
imul
add
adc
push
jge
sub
scas
jnp
cmp
sahf
sub
add
jge
mov
cli
mov
inc
imul
xchg
mov
adc
fidivrs
push
mov
pop
or
das
cli
mov
sbb
add
je
addr16
cld
inc
cmpb
cld
mov
adc
cmp
jnp
mov
sub
adc
jns
xor
jl
scas
sub
sub
shlb
das
or
pop
pushf
cmpsb
xchg
decb
iret
mov
push
dec
dec
cmpsl
call
test
imul
jmp
sub
cmc
imul
pop
enter
aaa
ss
mov
fdivrs
jne
fwait
mov
xchg
lock
xor
std
sysexit
sub
and
xchg
shr
insl
ret
push
jo
mov
mov
sub
jbe
jge
push
push
adc
lock
mov
leave
push
enter
imul
pushf
mov
dec
insb
sahf
addr16
fildll
cmp
dec
jne
insl
ret
iret
in
pop
jle
outsl
mov
outsl
pop
mov
mov
mov
sub
fmuls
movsl
pop
cwtl
pop
jb
ja
cli
sbb
stos
push
mov
xor
cld
xchg
fistl
das
hlt
lret
cmp
rcrb
cmpsb
push
sbb
sar
pop
iret
jo
jecxz
cwtl
rorb
call
add
add
aaa
int
icebp
push
add
cmpl
jp
adc
inc
xchg
jo
add
push
xchg
hlt
pop
data16
jb
sub
sub
aas
sub
scas
les
aam
pop
jmp
hlt
psubd
pop
pop
test
clc
inc
ret
add
mov
push
pop
sub
in
ret
adc
bound
pushf
jns
lock
xor
dec
adcb
popf
sub
jne
imul
adc
adc
mulb
dec
cmc
jge
add
mov
dec
sub
push
std
xor
outsl
push
aaa
adc
cmp
dec
pop
arpl
add
add
ja
jecxz
sbb
jmp
xor
mov
xchg
sbb
mov
nop
sbb
pop
push
in
sub
out
ret
mov
mov
sar
lock
pusha
stos
push
lock
jle
int3
pop
out
sbb
inc
mov
jecxz
clc
out
clc
push
test
imul
enter
xchg
pop
mov
and
push
les
inc
inc
xchg
add
sbb
lock
jae
ds
notb
add
dec
add
sbb
sub
adc
incb
mov
sahf
xchg
aaa
leave
aas
dec
das
div
pop
fcoml
cwtl
mov
or
adc
mov
test
xor
add
inc
jo
mov
mov
jg
les
icebp
mov
add
jne
decb
lock
sbb
repnz
insl
or
into
inc
movsb
xor
cmp
lcall
sbb
cmp
xor
xor
scas
and
mov
add
inc
cmp
sbbb
sar
mov
and
out
rcrl
push
dec
pop
dec
push
js
pushl
sub
fwait
and
xchg
xchg
pop
adc
insb
push
lea
mov
fiadds
mov
xor
push
cmp
xor
or
xchg
lock
in
jne
ja
sub
popf
stc
jb
hlt
sub
xor
inc
push
mov
add
lahf
add
inc
sbbb
jg
les
testl
pusha
xor
movsb
aas
inc
jbe
shrb
mov
cwtl
cs
loop
fists
fbstp
das
scas
push
mov
mov
dec
xchg
jg
out
mov
or
push
inc
pop
adc
dec
ljmp
movsl
push
xchg
xchg
add
push
mov
ret
scas
cli
inc
inc
inc
stos
mov
xchg
and
sbb
pop
jbe
cmp
or
cli
inc
inc
nop
stos
pop
fbstp
cmp
sub
mov
sub
mov
mov
negb
jae
hlt
pop
mov
out
iret
imul
outsb
insb
movsl
shlb
xchg
or
jno
enter
xor
lods
pusha
push
mov
xor
jnp
popf
sub
les
js
cmp
pop
ficompl
leave
roll
pop
cmp
sub
fs
cmpsl
mov
int3
cmp
insl
imul
push
cld
pop
stos
int
cmp
frstor
mov
inc
xor
sarl
leave
xor
or
test
scas
in
fstps
xlat
mov
xchg
jo
jmp
rcll
push
loop
repnz
js
loope
pop
pop
and
jge
push
setae
and
sbb
cld
ret
shrl
orl
mov
aaa
sbb
ret
aaa
dec
cmc
mov
stos
sub
addb
outsl
lahf
imul
or
jo
cmp
std
pop
orb
pop
cmpb
push
movsb
cmp
aaa
cltd
push
clc
mov
ret
movsl
pop
ja
inc
adc
push
into
pop
leave
fbstp
push
nop
scas
mov
and
movl
mov
xor
ficoms
dec
loopne
mov
insb
mov
dec
nop
cmp
ja
mov
lds
popa
push
sti
push
dec
je
xchg
cwtl
sub
pop
or
les
idivb
add
push
dec
in
out
gs
arpl
or
loop
fcomi
fwait
and
adc
and
push
mov
dec
jb
bound
std
adc
int3
sarl
pop
lods
test
and
aaa
or
outsb
popa
sti
rorl
pushf
or
mov
mull
stc
dec
outsl
repnz
lahf
int3
sub
dec
scas
push
pop
cmp
adc
xchg
add
subl
xchg
jnp
movsl
xchg
jecxz
or
fsubp
shl
das
xor
push
mov
jge
or
xor
jo,pt
ss
lcall
xor
adc
hlt
setg
test
ljmp
or
inc
int3
xor
iret
scas
test
ret
fs
add
es
dec
mov
cmp
loopne
das
mov
pusha
mov
rcrb
push
xor
cld
std
aad
mov
sbb
enter
outsl
cli
pop
xor
sbbl
sub
mov
pop
outsb
lret
jo
lods
xchg
mov
int
push
jns
sbb
add
cmpsl
xor
mov
mov
and
ds
mov
outsb
xchg
js
ljmp
xchg
pop
adc
cs
push
or
outsl
pop
push
cld
adc
cmpsb
aas
clc
fbstp
loope
fwait
popa
pop
test
pop
xchg
dec
xor
dec
sbb
sub
aaa
fmuls
adc
push
sbb
lahf
cmpsb
lret
ljmp
jecxz
pusha
jae
data16
cwtl
aam
pop
mov
ret
mov
push
add
jnp
and
inc
hlt
lock
jmp
ds
pop
and
je
push
sbbb
fisubl
adc
out
xchg
in
push
sbb
push
pop
cmp
xor
dec
call
inc
aaa
insb
inc
jne
inc
mov
jg
data16
mov
sub
fs
rcll
adc
fcompl
stos
pushf
mov
jg
pop
mov
dec
push
bnd
sbb
xor
inc
fdivrl
xchg
out
pop
add
loop
mov
xor
loop
dec
aam
out
loop
adc
leave
or
xchg
pop
or
mov
out
mov
filds
pop
nop
mov
xor
fwait
mov
mov
stos
mov
js
sbb
call
scas
idivb
add
fisubrs
mov
aam
dec
mov
dec
les
aam
add
je
mov
mov
xchg
mov
adc
mov
mov
adc
mov
jb
push
hlt
iret
andl
push
mov
inc
cmpl
or
sub
fwait
xchg
hlt
nop
rclb
xchg
push
je
adc
push
out
jmp
shr
hlt
pop
or
xchg
inc
sahf
aad
std
popf
cwtl
and
jg
inc
ret
out
bndldx
push
xchg
cmp
mov
jg
fisubrl
in
jno
mov
and
aam
and
mov
adc
jecxz
push
pop
clc
dec
xor
push
mov
dec
rcrl
mov
imul
es
or
pop
push
lea
lock
mov
stc
sub
or
std
inc
or
or
fldt
mov
inc
fsubs
push
ret
fistpll
jmp
pop
icebp
fistpl
mov
dec
xor
or
dec
jle
jmp
clc
in
jmp
subb
sti
xchg
xor
adc
gs
pop
and
mov
cli
filds
popa
push
xor
cmp
dec
fisttps
jb
aam
pop
jmp
js
fistpll
push
je
outsl
mov
sbb
add
cwtl
jnp
or
jg
inc
adc
ficomps
data16
fwait
out
aaa
sahf
sbb
ja
sbb
jp,pn
inc
cmp
rolb
cmp
pop
dec
mov
push
dec
jbe
push
shlb
pushf
ficomps
icebp
add
adc
and
push
xchg
sbb
ljmp
aad
inc
sub
ds
ret
cmpsb
pusha
push
and
data16
xor
xor
dec
push
push
push
ret
fisubl
jns
insb
adc
movsb
scas
cli
pop
clc
xor
aam
pop
into
ret
shll
xor
loope
shl
mov
jecxz
xchg
stos
aad
jmp
in
mov
jbe
sub
or
test
outsl
push
jno
add
adc
aaa
add
scas
clc
cltd
cmc
orb
xchg
cmp
dec
out
hlt
mov
add
pop
cmp
call
or
outsb
mov
out
jle
jecxz
je
outsl
clc
push
inc
jmp
data16
mov
lock
mov
mov
aaa
jge
dec
stos
rcr
out
out
jae
int
pop
cs
jge
fists
arpl
jl
fildll
mov
and
add
int3
lods
xor
jbe
push
std
repz
test
aas
bound
addl
jae
int3
out
xchg
cli
or
jl
in
pop
fdivrs
dec
hlt
ljmp
jle
scas
pop
ja
adc
xlat
subb
mov
lods
lds
pop
pop
sub
sti
addr16
es
add
or
inc
aas
nop
adc
pop
popf
pop
aam
pop
rorl
mov
sbb
add
out
dec
lock
clc
cltd
xchg
adc
aas
xchg
push
mov
and
mov
das
inc
inc
or
insl
xor
pop
inc
push
aaa
test
xchg
jae
or
lcall
xchg
xchg
pop
sti
inc
int3
stos
jg
cmp
mov
cmc
mov
rcrb
mov
mov
xchg
xor
xchg
lahf
mov
pushf
mov
pop
lods
ljmp
fsub
jl
lahf
test
cltd
inc
enter
pop
movsl
pop
decw
xchg
cs
and
jmp
stos
pusha
or
std
stc
xchg
sbb
andl
lret
or
push
addr16
sahf
dec
xor
pop
sbb
mov
push
or
lock
pop
add
add
pushl
inc
pop
adc
dec
push
or
mov
lcall
out
add
adcl
adc
sbb
cmc
fmull
cld
add
mov
pop
dec
insb
push
fld1
push
mov
out
sub
sbb
mov
clc
ja
pop
stos
ss
mov
lahf
addb
and
mov
or
movsl
adc
and
pop
or
int3
sub
addr16
in
adc
cmpsb
das
pop
mov
inc
mov
std
add
push
cmpsl
gs
dec
inc
js
mov
and
sbb
lods
inc
loop
push
out
sub
stos
sub
hlt
aas
fiaddl
jmp
pushf
push
idivb
rcl
test
int3
inc
out
scas
cmp
clc
mov
mov
ja
mov
push
sbb
js
mov
cmpb
je
iret
stc
aad
or
dec
xchg
inc
mov
mov
mov
sub
sub
lock
pushl
add
pusha
inc
test
add
pop
leave
sbb
imul
push
out
arpl
pop
dec
sub
fstl
and
mov
sbb
pop
sub
inc
ret
inc
aam
xchg
imul
das
sti
ljmp
cmp
cmp
data16
mov
and
push
mov
push
mov
dec
jle
je
and
mov
push
or
mov
pop
std
push
ja
pushf
ret
out
mov
add
mov
jp
xor
pop
fcmovbe
add
mov
ljmp
pop
ja
cmc
jnp
sub
sbbb
cld
in
aas
cld
jg
inc
xchg
and
xor
es
cmp
or
jb
and
jbe
incl
jbe
jle
jecxz
push
pushf
add
or
mov
shrl
cmp
jecxz
pop
lea
ss
mov
jg
mov
cwtl
cmp
or
das
rorb
jle
ret
fstps
add
sub
icebp
incl
cmp
add
scas
xchg
or
adc
mov
pop
nop
das
fcoms
mov
les
fildll
or
in
inc
in
test
int
test
aad
jp
mov
es
in
or
in
inc
ret
inc
rolb
cmpsl
xor
push
repnz
mov
sbb
inc
xchg
dec
shll
inc
lods
notl
mov
cld
pusha
in
rol
test
outsl
jl
pushl
push
pop
pop
fcompl
pop
aad
xor
jmp
adc
mov
cmp
jl
jg
jno
pop
mov
jo
das
dec
in
dec
int
insl
xchg
test
xlat
mov
lret
pop
add
pop
ret
and
adc
lods
out
mov
pop
push
dec
push
sbbl
cmp
sti
pop
shll
xchg
jo
inc
or
pop
popa
fdivr
lea
pusha
mov
subb
cmp
push
loop
lret
mov
dec
test
std
add
fisubl
xor
icebp
dec
add
loopne
or
movsb
sbb
mov
scas
shll
xor
xchg
insb
or
cmp
dec
test
adc
inc
lret
lret
pop
scas
test
dec
lods
insl
rolb
clc
sub
mov
and
fcomip
cmp
push
clc
mov
imul
mov
mov
out
mov
movsb
adc
and
jecxz
and
mov
cwtl
std
sub
cwtl
ds
repnz
das
decb
sbb
jnp
iret
int3
pop
fwait
es
mov
das
ret
int3
and
pop
daa
sbb
int
adc
push
ret
jmp
cmpsl
push
sub
je
scas
cli
jg
addr16
pusha
pusha
xchg
push
mov
in
cmp
insl
adc
stos
mov
cmpl
lret
push
test
pop
stos
jle
add
dec
cltd
mov
call
adc
and
adc
aas
lock
aas
inc
cli
sub
hlt
mov
push
fiadds
dec
aad
in
out
clc
cmp
cli
cmp
lea
add
sahf
ret
mov
sarl
lret
mov
stos
loopne
xchg
mov
aad
repnz
adc
pusha
out
pop
into
scas
cld
test
pop
mov
ret
rclb
add
cltd
test
and
mov
loopne
das
clc
xor
pushf
rorb
leave
lcall
pop
sub
or
adc
dec
frndint
mov
sub
insl
or
mov
fisttpl
daa
push
out
incl
mov
xchg
xchg
pop
movaps
mov
ret
int
dec
in
fisubrl
push
dec
fimuls
loope
sbb
int3
sbb
std
mov
pop
mov
fidivs
lods
xchg
fimull
data16
mov
pusha
mov
cmp
je
cs
pop
or
sub
inc
adc
cmpb
cmpsl
sub
cmp
cli
mov
mov
call
and
push
mov
sti
pop
dec
jo
xor
stos
scas
lret
cli
popf
mov
jb
outsl
push
add
rcrl
add
inc
push
inc
cmc
pop
mov
cmp
testl
xorb
data16
in
and
cmp
fsts
sbb
mov
xchg
lods
repnz
fdivrs
push
mov
adc
movsb
test
mov
outsb
mov
or
jmp
sub
pop
lock
or
dec
xchg
xchg
cld
and
daa
or
ljmp
incb
add
sub
push
adc
xchg
add
mov
lcall
int3
cwtl
inc
inc
sub
adc
cwtl
inc
andl
inc
aaa
sub
push
cltd
and
cmp
lret
outsl
stos
loope
rclb
mov
div
mov
add
pusha
add
dec
clc
stc
dec
call
pop
cld
add
arpl
sbb
clc
cmp
mov
pop
cld
dec
mov
repnz
fwait
push
in
jb
and
adc
xor
in
cmpsl
jg
ljmp
and
rcrb
lock
subb
dec
cld
inc
push
fcomps
fnstsw
test
into
jo
into
push
sub
add
outsl
ja
pop
or
test
or
xchg
cs
in
cmp
xchg
movsb
dec
repnz
sbb
lahf
push
lock
lods
out
xor
aam
and
sarb
mov
pop
fdiv
mov
pushl
sarl
mov
rorl
sbb
ljmp
mov
stos
jle
sub
lods
dec
or
xor
iret
ja
xchg
mov
fimuls
push
and
int3
xlat
push
xchg
cmp
mov
or
mov
add
ljmp
jns
pop
lds
in
pop
mov
push
mov
lods
push
xchg
stos
pop
pop
and
or
movsb
xchg
cli
sbb
inc
and
pop
jle
in
shll
mov
pushf
nop
fwait
adc
int3
dec
outsb
lea
filds
push
dec
sbb
push
xchg
cmc
or
push
mov
test
cmpsb
push
jg
pop
aam
adc
cs
lcall
sbb
das
ja
sar
imul
insb
lret
das
sbb
push
js
frstor
xor
jge
add
pop
mov
lahf
int3
arpl
in
mov
lret
js
incb
jno
xchg
push
icebp
sbb
push
idiv
ljmp
fimull
mov
jle
jbe
sbb
pop
mov
push
mov
pop
jae
dec
push
rolb
sbb
sub
cmpsb
jmp
dec
and
push
dec
mov
push
dec
xchg
mov
xchg
jmp
jmp
add
dec
inc
fidivrl
lds
shlb
enter
xchg
repnz
jecxz
xchg
movsb
outsl
pop
repnz
int3
pop
sub
clc
sbb
xor
mov
mov
movsb
push
fbstp
mov
xor
xchg
or
mov
pop
mov
mov
mov
push
pand
lea
mov
sti
inc
xlat
and
fwait
inc
cltd
pop
pop
loopne
mov
or
imul
dec
repnz
push
ffreep
pop
hlt
daa
cmp
fxch
mov
sbb
or
je
int
pushf
sahf
call
enter
mov
iret
mov
pop
mov
and
es
adc
aaa
mov
xchg
adc
xchg
mov
xchg
fcmovbe
or
mov
inc
inc
pusha
mov
scas
clc
call
cmpl
push
bound
mov
subb
fisubl
loop
es
or
jp
cmp
pop
mov
jbe
lods
popa
inc
adc
mov
mov
sahf
cmc
pop
jnp
xchg
jne
stc
daa
fs
cmpsb
cli
push
into
loope
lea
rcrl
lahf
pop
cmc
mov
test
rcrb
test
push
dec
sti
dec
pop
nop
push
mov
pushf
mov
dec
hlt
cld
xchg
outsb
shlb
in
adc
mov
xchg
insl
pop
jmp
aad
jmp
ja
add
push
fistpll
xlat
mov
mov
hlt
shll
mov
fwait
or
adc
js
xor
xchg
push
lret
cmc
es
rcll
ss
int
ret
jmp
push
daa
in
sbbb
cmp
or
xchg
lcall
jo
and
mov
add
pop
xchg
adc
mov
xchg
in
sbb
je
adc
pop
pop
add
mov
adc
add
cmp
in
inc
pop
cwtl
jge
inc
stc
jecxz
testb
js
aaa
lock
out
out
jmp
lock
cmp
pop
add
jp
mov
addb
inc
loope
pop
fdivr
fmul
arpl
jp
mov
mov
inc
iret
jo
cmc
es
shll
lds
jp
arpl
ljmp
xchg
jbe
repz
jbe
test
add
push
pop
sbb
out
jl
insl
aad
mov
pop
jg
aas
sub
addr16
sar
inc
mov
sbb
push
rolb
xor
lods
outsb
js
pushf
mov
sub
add
mov
aaa
cli
das
pop
ljmp
movsb
out
jne
stos
jp
fimuls
andb
jmp
das
pushl
adc
add
push
xor
aam
imulb
ret
loopne
adc
outsb
pop
inc
mov
jg
sub
gs
mov
adc
das
fdivs
loope
insb
inc
sub
jecxz
sar
mov
cmpb
push
pop
in
sahf
cmp
out
jmp
add
push
stos
hlt
and
pop
sbbl
mov
sbb
adc
iret
push
inc
inc
xor
push
shrb
jle
xlat
pop
inc
pop
xchg
lods
sub
js
mov
mov
xchg
mov
aad
scas
cwtl
loop
sbb
fadd
lods
das
js
push
inc
pop
cmp
inc
in
pop
jle
jmp
push
and
je
cld
dec
xchg
in
xchg
sahf
dec
mov
loop
or
xor
das
cli
cmpsb
clc
jg
adc
lahf
inc
mov
jp
push
lds
pop
out
clc
mov
fdivl
xchg
sbb
push
cld
xor
jmp
pop
out
mov
inc
xor
ja
jns
fimuls
pop
xchg
jnp
jno
mov
test
incl
adc
scas
sub
stos
mov
jnp
xchg
sahf
lcall
cmp
gs
out
lods
pop
sbb
xor
inc
push
lods
mov
jnp
rclb
adc
sahf
jg
stc
pop
mov
pop
clc
mov
adc
out
xor
adc
mov
fnsave
and
mov
mov
or
mov
fmul
outsb
cmpb
jp
out
notb
add
push
inc
je
xor
pop
lock
incl
in
stos
sub
mov
fs
inc
pop
pop
lret
sbb
daa
clc
and
out
cltd
loope
lods
testb
movsl
scas
adc
fsubrl
clc
mov
and
mov
pop
sub
pop
lcall
add
cli
dec
test
add
loopne
test
cmpsb
aas
mov
arpl
fcoml
cmp
sahf
negb
adcl
iret
jbe
pop
out
add
mov
pop
loopne
fs
and
loopne
mov
push
push
push
inc
out
mov
mov
jno
aam
clc
cli
ret
out
pop
sti
add
xchg
and
fadd
mov
dec
cmp
cs
cwtl
push
xchg
orb
rep
pop
stos
adc
push
cwtl
setle
mov
dec
mov
ret
mov
sti
pop
movsl
inc
pop
clc
rorl
stc
cmp
pop
loope
adc
fistl
int3
fildl
jecxz
cmp
jbe
cmp
into
jecxz
pop
loopne
aas
jle
push
xchg
rorb
outsl
xchg
sti
and
imul
sbb
jo
loope
mov
cld
lea
shll
mov
str
ljmp
and
push
mov
pop
movsb
adc
cs
mov
mov
out
cli
bound
xlat
dec
pushf
add
pop
decl
pop
stos
lds
xchg
pop
lods
xor
pop
push
dec
addr16
movsl
insl
or
mov
push
cli
scas
out
insb
xchg
xor
call
aaa
push
xchg
repz
sub
add
icebp
or
dec
int
cmpsb
fwait
xor
jmp
pusha
subb
aaa
std
filds
mov
inc
jns
shll
iret
add
mov
sub
das
shl
fs
divl
pop
je
jg
dec
mov
dec
ljmp
mov
imul
cld
fwait
add
mov
lock
dec
push
mov
mov
cld
cmp
mov
mov
ret
loop
add
std
cs
sbb
mov
mov
or
and
jg
mov
jbe
rep
loop
adc
lret
test
cs
add
sti
shrl
loopne
cs
imul
sub
xlat
mov
ja
or
daa
xor
mov
fcoml
lea
sbb
jne
jmp
sub
das
adc
pop
add
sub
fldl
or
xchg
fisubrs
sub
pushf
mov
push
inc
jp
cmp
cli
push
mov
or
pop
lods
push
inc
push
or
daa
cmpsl
call
test
test
cmp
clc
stos
fcomip
jl,pt
mov
int3
pusha
cmp
mov
inc
cld
sbb
out
pop
insl
sub
jmp
testl
imul
lods
hlt
in
pop
sub
mov
loopne
loop
stc
mov
cmp
xor
jb
mov
insl
adc
cmpsl
test
popf
xchg
test
pop
insb
mov
incl
mov
arpl
aam
or
push
and
call
lock
sbb
push
std
dec
lcall
in
adc
add
adc
push
aaa
lret
les
mov
jb
shrl
aas
jecxz
jmp
xchg
call
mov
or
xchg
arpl
sbb
dec
mov
jmp
jnp
dec
fiadds
mov
movsb
aam
mov
xchg
fdivl
xchg
movb
xlat
scas
cs
pextrw
orl
mov
outsl
ret
jbe
ljmp
and
or
aad
les
cmp
sub
inc
pushf
pushf
jno
pop
cmpb
adc
mov
dec
cmp
pop
repnz
mov
jg
xchg
pop
sahf
mov
sahf
rorb
aaa
mov
mov
xor
push
js
or
mov
aam
pop
pop
pop
ds
push
jge
mov
pop
sbb
iret
hlt
sbb
cmp
cmp
push
or
stos
pop
cmp
or
mov
das
fisubrl
mov
mov
cmp
push
loope
sbb
inc
pop
xor
pop
sahf
jae
cwtl
add
clc
out
and
lea
sub
or
clc
add
push
pop
sub
pop
bound
add
rcr
and
mov
pop
hlt
in
cmpl
in
push
sub
xor
pusha
jecxz
ljmp
into
enter
lock
xor
rcrb
shr
inc
cmp
bound
add
dec
rol
adc
aad
fsubp
adc
add
cmpsb
aas
decb
inc
xchg
lock
cs
test
aas
jp
xlat
pop
pop
dec
imul
sub
push
or
mov
lahf
push
js
mov
inc
push
fwait
add
insb
and
xor
sbb
inc
or
jno
jl
subb
gs
mov
lea
sub
dec
lock
dec
fiadds
lret
jo
xor
pushf
add
and
push
lds
mov
lods
adc
push
push
repnz
jmp
add
pop
mov
or
cmp
push
adc
mov
mov
mov
int
adcl
in
pop
std
es
clc
push
addl
fldt
rolb
jo
jae
test
mov
outsl
js
insl
inc
out
xchg
inc
mov
cld
dec
push
ljmp
jmp
push
cs
lods
mov
xor
aas
fs
xchg
mov
jp
mov
sbb
adc
pop
aaa
into
shrb
mov
sub
scas
out
or
pop
push
fcomps
xchg
lahf
mov
clc
cmc
pop
loopne
push
add
shlb
xchg
decl
jmp
dec
pop
pop
mov
fdiv
mov
pop
jne
pop
fwait
sub
xor
aam
push
je
out
push
icebp
shrb
jp
dec
cltd
rorl
and
pushf
iret
scas
push
cmp
rcr
test
enter
stc
movsb
pushf
ljmp
add
dec
push
xchg
adc
push
push
pop
jp
add
inc
xchg
jle
repz
cmc
dec
and
sub
or
fwait
adc
xchg
test
adc
nop
mov
jecxz
fdiv
xor
add
xor
fldl
push
in
ficoml
mov
popf
push
push
jg
mov
and
insl
rcll
rorb
out
lock
decl
pop
xchg
add
jp
fstpl
push
adc
scas
add
xchg
nop
pop
sub
mov
pop
add
idivb
nop
aam
notb
dec
mov
inc
jo
dec
dec
jecxz
push
loope
mov
push
insb
sub
jns
insb
in
addr16
or
xor
mov
daa
jl
sbbb
je
out
dec
mov
cwtl
pop
add
call
call
jg
inc
std
and
jp
push
inc
mov
jecxz
insl
lock
or
hlt
and
pop
mov
jmp
shrl
xor
enter
std
movsb
mov
pop
orb
incb
rolb
xchg
push
and
mov
leave
xor
fmuls
xchg
insl
cmp
clc
ds
push
jno
call
scas
add
test
jmp
xor
mov
sbb
jbe
xchg
mov
jo
xchg
or
loope
inc
add
jbe
sbb
cs
movsb
in
sahf
test
ret
pop
insb
mov
jmp
mov
pop
scas
lods
sub
xor
js
push
mov
lcall
jno
das
cli
or
pop
xchg
jae
inc
jg
adc
mov
inc
mov
and
out
push
cli
movsb
lock
js
lock
jecxz
stos
adcb
xor
add
cmp
call
and
add
inc
out
cmc
mov
fldt
xchg
mov
jl,pt
in
fisubs
and
ret
mov
mov
mov
dec
stc
sbb
fsts
cwtl
insb
jl
test
das
ljmp
lods
add
pop
add
pop
pop
pop
clc
sub
jl
jl
sbb
pop
pushf
push
push
xorl
scas
push
jp
mov
std
int
add
xchg
xlat
ja
mov
add
stos
out
and
rolb
jnp
add
stos
sbb
lea
mov
ja
insl
out
or
es
cmpsb
lret
les
testl
lret
fs
mov
mov
jmp
dec
test
aas
jo
mov
sbb
out
mov
outsl
add
mov
xor
add
enter
lds
dec
push
pusha
xor
adc
dec
cmp
sbb
mov
xor
cmpl
sbb
mov
popa
add
or
or
pop
sub
enter
loope
dec
cmp
scas
pop
pop
inc
call
push
test
test
lods
loopne
fdivp
or
pop
or
aam
scas
xor
mov
xchg
repnz
lock
jno
jecxz
in
mov
mov
data16
jg
xchg
jp
or
xchg
or
mov
inc
xor
popa
jle
cld
in
jmp
fidivrl
pop
cltd
pushf
aas
mov
dec
das
xchg
incl
scas
out
mov
sahf
xchg
lcall
xchg
rcrl
pop
fbstp
dec
pop
push
xor
fmul
lret
js
movsl
sbb
xchg
xchg
iret
fsubr
push
lds
lcall
fnstcw
idivb
jo
jmp
cmp
mov
add
ret
sbb
push
inc
lods
rorb
ret
cmp
andb
outsl
push
cld
xor
shrl
pop
lds
idivl
sub
mov
jo
jno
stc
pop
mov
mov
dec
in
test
neg
test
cmpsl
jb
mov
ret
pop
mov
sbb
pop
imul
pop
xchg
mov
inc
mov
add
cld
sbb
in
sar
out
add
adc
mov
int
pop
fmulp
cmpsb
jp
add
push
cs
fdivr
repz
ss
cwtl
popf
incl
push
fisubrs
inc
sub
stos
decb
and
and
and
fs
jle
jb
mov
mov
xchg
or
mov
or
orb
lods
loope
fdivrs
imul
stos
xlat
pop
mov
cs
and
mov
out
mov
aas
data16
add
mov
shlb
cmp
aaa
aaa
rcr
jle
hlt
fidivrl
mov
enter
add
dec
mov
add
ljmp
xchg
loop
jecxz
push
dec
jp
push
out
sbb
into
adc
cltd
shl
push
outsb
into
add
outsb
mov
hlt
jae
loop
mov
mov
push
push
push
fwait
in
jo
adc
push
sbbl
mov
sti
das
sbb
lret
fisubs
push
jmp
addr16
std
adc
daa
in
sbb
decl
lods
mov
cmp
lahf
adc
pop
je
mov
push
fadds
int
aas
lock
pop
lds
or
and
push
daa
xor
cs
aas
add
pusha
xchg
push
call
add
in
daa
imul
ret
sar
clc
jp
or
adc
filds
mov
imul
xor
push
outsb
push
jecxz
jge
in
inc
mov
xchg
cs
fstl
inc
test
mov
add
cwtl
push
es
mov
mov
int3
push
adc
fwait
and
clc
pop
and
inc
outsl
xchg
repnz
cli
pushl
lods
cmp
or
xor
pop
push
sub
or
call
pop
lds
stos
sub
mov
ljmp
mov
orb
inc
cmc
leave
pop
jns
ds
fldenv
sub
ja
fildl
mov
mov
cld
test
xlat
jl
popf
jl
ss
cltd
pop
lea
cmp
cld
jns
jne
fisttpll
add
inc
fwait
es
jne
adc
inc
movsb
inc
inc
sbb
and
andl
stc
sbb
inc
daa
lock
push
les
pop
rcrb
jg
push
push
xor
rolb
pop
jge
loop
pop
inc
mov
push
and
call
not
push
roll
mov
jge
push
add
and
dec
sbb
stos
sub
add
xor
jb
ret
pop
sbb
bound
jecxz
aam
popa
hlt
fsubrs
movsl
in
aam
fnstenv
mov
or
filds
xor
cmp
ljmp
or
adc
mov
outsl
lock
shll
imul
mov
dec
pop
repnz
xchg
sbb
inc
cmp
insb
fnstsw
cld
push
ret
dec
jo
lcall
pop
ds
xchg
call
xrelease
jg
lds
jmp
outsb
push
inc
addb
pop
cmp
subl
cmp
sbb
ret
xchg
lcall
push
ja
dec
inc
add
das
movsb
stc
cltd
push
pop
add
jl
in
push
push
ljmp
lcall
pop
and
in
pop
shlb
pop
cwtl
gs
arpl
pushf
sub
pop
std
xor
std
movsl
aas
pop
mov
ret
cltd
or
adcb
and
inc
mov
ret
push
fdivrs
lods
mov
movsl
or
jp
cli
jmp
mov
pop
loopne
push
add
cli
imul
mov
add
rcrl
fistpll
inc
jb
scas
sbb
stos
cmp
mov
sub
jmp
cmc
add
jbe
cmp
mov
jl
dec
lret
mov
xor
jmp
je
dec
push
mov
mov
and
fstl
mov
and
jg
xchg
lcall
inc
mov
aam
mov
mov
push
fistl
cmc
cmpsb
mov
cmp
cltd
sbb
sbb
jbe
jmp
pushf
sub
fisubrs
mov
jmp
test
lahf
or
pop
jmp
aaa
nop
outsb
ja
mov
pop
ret
xchg
adc
lcall
cmp
pop
lock
push
mov
js
cli
clc
aad
sar
imul
push
nop
cs
push
data16
mov
fcmovbe
mov
push
push
push
dec
xlat
subb
mov
jnp
sbb
cmp
lds
jp
xor
int
js
aas
xor
or
mov
add
stos
jecxz
enter
sub
mov
dec
es
jg
add
fistl
out
shl
out
cmc
lret
fimull
repnz
sub
comiss
pop
lock
packsswb
rclb
test
dec
xchg
sub
fsubrs
test
pop
and
pusha
xor
mov
fwait
decl
loop
add
mov
sbb
add
inc
jp
ds
out
sbb
xchg
xchg
sub
cmpsb
aaa
fildll
lcall
sbb
xchg
insb
push
add
xchg
aas
xlat
mov
inc
sbb
mov
sub
dec
mov
fs
dec
jle
jae
rcr
mov
sub
xor
out
test
cmc
aas
xor
pop
sub
ljmp
push
out
cld
scas
pop
xor
jo
mov
insl
cli
add
xor
lcall
push
sub
sahf
inc
inc
loope
dec
cli
rorb
testb
bound
mov
lahf
je
push
fstp
push
add
adc
mov
sub
nop
mov
or
mov
das
aam
stos
pop
sbb
or
nop
pushf
sbb
mov
shrb
xor
pop
dec
test
lock
dec
mov
mov
push
sbb
decl
pop
nop
mov
insl
nop
adc
insl
shr
cmp
loope
dec
in
push
out
mov
mov
or
push
clc
mov
pop
cld
add
pop
add
jge
hlt
es
sub
cmp
je
enter
ljmp
out
pushf
xchg
shll
mov
neg
cltd
lcall
jno
pop
scas
and
xor
jno
sbb
loopne
cmpsl
int3
push
cmpsl
mov
icebp
push
rorl
sub
aas
cmp
ljmp
pop
pop
jbe
push
push
pop
cmpsl
inc
xor
test
add
nop
pop
mov
pushf
sbb
cli
ds
cmp
pop
outsl
enter
dec
ljmp
push
out
sbb
iret
jne
sub
lods
sub
jg
lock
add
push
inc
ss
mov
cmp
test
popf
aad
scas
das
test
cmpsb
cs
int
mov
inc
fcomps
ficoms
inc
mov
xor
pop
scas
jb
pop
movsb
mov
cmpb
pop
cmp
adc
in
add
jmp
gs
add
sub
sti
addl
mov
idiv
add
outsl
mov
mov
clc
push
sub
dec
jb
ss
incl
les
hlt
loope
sub
cmc
push
push
mov
inc
arpl
mov
adc
lods
out
inc
cmp
adc
add
inc
cmp
and
jg
negl
ret
jle
arpl
mov
ljmp
jb,pt
pop
mov
es
out
test
pop
call
mov
insl
data16
mov
push
cli
or
xchg
xor
das
and
fstpt
dec
fisubrl
not
xchg
xchg
test
jb
mov
int
into
cmp
call
das
cs
or
int3
test
int
stc
cmc
mov
mov
fs
scas
out
jl
and
je
jg
mov
adc
sbb
adc
xchg
lds
cwtl
adc
fsubr
clc
std
rcll
lahf
xchg
sbb
xorb
sbb
fsub
xchg
jl
inc
adc
sti
lcall
mov
mov
insb
jbe
fidivs
and
scas
mov
cmpb
mov
call
repz
test
fidivrl
adc
push
aas
aaa
adc
jle
arpl
jecxz
loope
sbb
xchg
dec
pop
ficompl
iret
into
ss
add
xchg
mov
dec
inc
jno
cmc
data16
ljmp
push
jp
adc
cmp
pop
mov
jge
push
dec
adc
mov
fs
leave
jo
jl
ror
fidivl
das
insb
inc
mov
iret
inc
and
popf
je
add
xor
fwait
jbe
pop
mov
mov
out
jg
xlat
pop
es
loopne
lea
pop
xor
add
cmp
aam
es
mov
jne
addb
in
xor
subb
add
pop
xchg
push
call
insb
or
mov
inc
add
hlt
dec
aam
mov
jbe
cld
lahf
inc
daa
lods
mov
pop
inc
adc
movsl
aam
test
fldt
rcr
pop
andb
pop
fistl
loop
fsts
les
jbe
out
jle
sbb
subb
pop
add
mov
push
lock
bound
enter
cs
fildll
pop
ja
sub
popa
push
es
push
mov
lret
sub
pop
call
push
jge
mov
ret
test
push
mov
dec
stos
jle
mov
push
nop
pop
sbb
es
or
sbb
ja
inc
sbb
repz
jb
jl
aam
subb
xlat
loopne
xchg
aam
and
add
push
xlat
jecxz
ljmp
mov
pop
int
inc
mov
js
jae
mov
fildl
loope
ret
push
js
lret
add
clc
subb
lock
shlb
hlt
lret
inc
sbb
jmp
jmp
pop
or
fisttpl
fs
dec
push
testb
out
loope
jl
mov
sbb
ljmp
mov
cmpsb
fidivl
arpl
dec
out
add
aas
scas
cmpsl
and
add
jns
arpl
push
mov
mov
jge
cmpsl
pusha
fcmovu
sub
push
fistpl
mov
movsl
arpl
shl
and
lea
bnd
jo
int
shrl
jb
sub
push
sahf
mov
sti
ds
or
insb
fucomi
lds
add
xchg
and
mov
or
push
outsb
push
ret
push
into
and
xchg
inc
loopne
jecxz
push
lcall
cs
leave
inc
pop
arpl
je
iret
scas
out
mov
ja
mov
xchg
add
jbe
je
xchg
les
pop
loopne
cli
in
pop
sbb
inc
xchg
pop
in
popa
sub
cs
pop
push
or
xchg
xchg
push
cltd
and
xor
sub
jnp
int3
data16
ljmp
fbstp
and
cs
add
inc
xchg
fisubrs
jne
jne
adc
sbb
push
loopne
mov
cli
dec
clc
adc
pop
dec
loope
pop
jl
cmc
jo
jp
lods
jg
sub
jo
sub
push
out
mov
aaa
sbb
sbb
sub
in
sbb
in
sub
cli
pushl
jnp
loope
psubq
add
stos
mov
lock
jae
test
into
pusha
add
mov
aam
jne
dec
subl
aaa
jb
stos
stc
inc
in
lcall
pop
jg
pop
xchg
and
out
jns
ljmp
add
hlt
aaa
pop
in
and
leave
xchg
mov
fldenv
cmpsl
addr16
je
jg
ret
jl
jnp
mov
or
fwait
imul
and
xor
pop
jo
out
lret
fdivrp
mov
push
stos
int3
mov
sarb
jl
data16
mov
add
add
xlat
fmulp
pop
fsub
outsl
adc
jecxz
pop
jmp
cmp
ljmp
lcall
or
xchg
lods
push
stos
mov
fistl
inc
nop
sahf
or
stc
adc
mov
xor
push
lock
mov
xorb
push
jns
or
mov
inc
movsb
cld
xor
jmp
add
fcomip
xchg
push
rcrb
idivl
inc
sub
stos
add
jo
sub
jb
or
cmp
ljmp
hlt
sub
inc
fcmovne
sahf
into
sahf
sbb
sbb
mov
push
mov
push
fcoml
and
outsl
and
sbb
mov
mov
dec
clc
inc
pushl
sbb
rcll
dec
es
sarl
mov
lods
sti
insb
xchg
aaa
rorl
call
mov
sub
xchg
pop
lahf
mov
clc
cmp
addl
jmp
pop
fistps
pop
xor
incb
pop
pop
jns
enter
jecxz
jo
dec
mov
xchg
pop
cmp
mov
popa
and
pop
ss
adc
cmp
sbb
fdivrs
cmp
add
loope
adc
rcll
fcmovnu
sbb
outsb
insl
out
fmull
ret
popf
pop
inc
sbb
ret
push
loope
pop
aas
fisubl
mov
inc
fmull
xorw
mov
or
sbb
push
mov
mov
aam
xchg
sub
or
cmpsb
clc
mov
addl
jae
ret
pop
or
shl
inc
xchg
mov
aaa
xor
sahf
loopne
pop
je
mov
test
aas
or
lret
inc
and
ds
subb
xor
mov
push
pop
int3
lods
push
stc
pop
xchg
and
fwait
idivb
jb
pop
inc
aad
les
aas
loop
sbb
mov
iret
pop
call
sbb
inc
cmp
xchg
inc
cs
ss
xor
out
jb
add
into
in
mov
push
jp
or
mov
jg
xchg
rcrl
std
rol
cli
mov
in
fdivr
mov
jl
testl
mov
rcr
jno
aad
repnz
pop
aaa
repz
inc
jno
push
fdiv
mov
lret
mov
sbb
mov
test
xchg
or
pop
nop
ret
fs
mov
ss
mov
cmp
jecxz
push
aaa
add
xor
stos
aaa
push
daa
in
fucomi
adc
lret
pop
in
stos
roll
lds
test
decb
pop
fcoml
add
mov
fucomp
cmpsb
icebp
insl
adc
mov
test
pop
popa
xor
sbb
jae
mov
add
repnz
icebp
inc
xchg
in
dec
addl
rcr
xorb
jbe
jnp
inc
cmp
cmpsl
cli
sti
out
clc
pop
fcompl
sub
push
jns
stos
sub
cmp
xor
push
inc
jmp
and
inc
frstor
in
pop
push
aam
or
aas
push
ss
pushl
test
in
xchg
xchg
or
cltd
inc
mov
cli
fistpll
jmp
jl
mov
jb
jg
scas
sub
add
cmp
dec
insb
outsl
pop
mov
int
cmpsb
into
je
inc
dec
or
add
stc
mov
push
cmp
sub
stos
sbb
cmc
cs
js
pop
fsubl
inc
repnz
pop
pop
popa
fs
or
pusha
pop
mov
cltd
xor
stos
sub
sbb
incl
fcoml
and
mov
pop
adc
loope
jmp
adc
jmp
add
hlt
xchg
stos
sarb
shrb
or
cmp
ja
add
aaa
cld
mov
push
pop
fdivl
cmp
inc
repnz
dec
or
imul
and
enter
jns
out
cli
cmp
clc
lock
pop
mov
push
jbe
js
mov
aam
gs
cltd
mov
cli
pop
pop
mov
adc
xchg
outsb
test
sbb
sbb
inc
mov
clc
cmp
mov
lds
xchg
into
lds
data16
add
push
mov
sbb
imul
insb
insl
xor
cwtl
cmp
mov
xlat
lret
adc
jp
jb
cltd
rorb
int
mov
cltd
stos
or
and
jp
das
mov
xchg
xlat
jb
and
cs
clc
dec
aaa
in
add
cmp
test
iret
pop
insb
lret
jbe
mov
cmp
mov
repnz
pusha
mov
push
or
lock
jb
push
enter
push
leave
lcall
hlt
fiadds
lods
add
clc
and
roll
jns
inc
mov
mulb
stc
mov
ret
outsl
call
push
ss
mov
pop
cmp
decl
pop
xor
push
ret
mov
pop
xor
dec
icebp
cmp
adc
adc
sar
pop
rcll
decl
mov
fnstsw
and
sub
sbb
fadd
lock
push
jecxz
inc
cli
lcall
push
adc
mov
lock
and
fidivs
mov
js
ljmp
mov
ja
pop
lret
mov
sub
fs
call
sbb
movsl
jl
mov
arpl
push
push
incl
lods
or
xor
into
pop
sbb
push
std
add
je
push
mov
xor
pop
cmp
in
mov
lret
imul
cld
mov
or
or
push
js
hlt
cmp
push
sbb
out
xchg
push
clc
adc
clc
cs
notb
jge
test
pop
cmp
arpl
fldt
gs
movsl
in
mov
and
pop
mov
aaa
test
clc
push
jb
or
or
lcall
xchg
sbb
cwtl
pop
scas
mov
loope
jnp
leave
andl
pop
ljmp
subb
jp
mov
add
das
lahf
mov
cmp
int
sub
bound
push
aas
js
ja
inc
sbb
ds
pop
in
out
jg
icebp
push
jbe
inc
pop
mov
test
pop
subb
cmp
push
cmpsb
pop
mov
mov
inc
mov
lret
push
pop
and
cs
mov
loopne
cli
mov
or
jmp
xchg
mov
ret
test
fdivr
ljmp
jp
push
inc
idiv
or
push
adc
inc
loopne
mov
decl
cli
push
clc
popa
jo
dec
lret
negl
addr16
mov
mov
mov
je
dec
lahf
mov
std
nopl
stc
jb
decl
add
inc
repnz
js
sub
loop
pop
clc
mov
or
push
and
roll
fistpll
stos
fimull
push
lcall
aam
call
and
add
xor
sbb
mov
filds
mov
fdivs
pusha
push
push
sub
sarl
add
test
mov
push
call
jno
sub
in
cli
ds
sub
lods
jmp
adc
mov
cmp
jp
call
mov
es
rolb
fsub
fs
sbb
push
pop
jecxz
adc
push
js
and
mov
inc
or
cmpsl
push
je
jae
je
popa
pusha
call
mov
ljmp
ss
jo
inc
jbe
sti
xor
repnz
dec
aas
stc
add
lret
mov
sbb
aam
mov
cmc
sub
cmp
cs
pusha
and
push
sub
in
das
or
mov
insb
mov
xchg
push
mov
jo
add
sub
outsl
loopne
inc
enter
inc
mov
outsl
mov
bound
dec
ret
stos
sbb
add
icebp
aas
cltd
or
mov
loopne
ficoml
loopne
mov
ja
popf
mov
leave
mov
pop
jb
pop
sub
arpl
aaa
and
iret
jecxz
xor
push
sbb
inc
cmp
ret
nop
imul
aam
dec
and
outsb
rorl
cld
sti
ljmp
dec
jno
jl
je
in
push
pop
jae
rcll
iret
pop
fildll
cli
inc
insb
fidivl
or
jnp
lahf
add
mov
loop
bound
push
add
ret
push
mov
sbb
ss
adc
dec
or
outsl
into
stos
stc
mov
outsb
sbb
gs
ror
fidivs
sbb
stos
adc
mov
pusha
sub
jo
mov
xlat
subl
ffree
int3
lahf
adc
adc
int3
mov
mov
aad
mov
sbb
mov
pop
xorb
sub
lret
dec
mov
mov
and
in
jge
std
mov
push
lock
mov
imul
rcrl
jmp
test
pop
fdivrl
shll
retw
sbb
or
outsl
lea
mov
call
clc
addb
jo
rcrl
pop
mov
pop
incl
shlb
fcmovnbe
inc
iret
xor
lock
mov
or
pushf
les
fists
jo
jl
jecxz
loopne
loope
mov
adc
insb
mov
repz
mov
push
cwtl
xor
lahf
xor
mov
jp
fisttps
stc
addr16
adc
push
xorb
mov
bound
insb
sarb
mov
stos
adc
nop
adc
popa
cli
mov
push
inc
stos
sbbl
jg
jg
pop
sbb
loop
loop
cmp
call
mov
imul
jns
mov
fsubrp
mov
imul
add
push
insb
dec
hlt
cmpsb
push
push
cmp
outsb
push
testl
sahf
or
scas
pop
push
test
jg
xor
lds
jge
mov
shlb
stos
call
clc
in
outsl
cmp
imul
mull
mov
cmc
pop
nop
push
sub
pop
jne
ss
inc
popa
mov
jg
sar
test
cli
das
fisubrl
pop
lahf
sbb
and
sbb
and
dec
rclb
in
jbe
jl
push
fcmove
jge
push
incl
pop
and
xchg
adc
test
decl
sbb
iret
xchg
or
mull
mov
fwait
sbb
adc
or
or
ljmp
push
push
lahf
sbb
cli
add
adc
push
cmp
sub
xchg
lods
testl
and
adc
adc
xchg
jl
fcomip
out
clc
adc
or
push
add
aaa
add
mov
mov
cld
test
std
mov
cmc
int3
sbb
sub
pop
pop
sbbb
mov
movsb
mov
dec
adc
dec
cmc
fstpt
lret
fcoms
cld
subb
ret
xor
popf
mov
lahf
and
jle
aaa
std
negb
mov
pop
cmp
add
mov
loopne
inc
scas
adc
mov
sub
push
fcmovu
rsm
outsb
clc
mov
sbb
sbb
mov
jl
int
outsl
pop
push
insl
imul
aam
add
push
lock
daa
out
stc
jne
pop
xor
test
repz
pop
out
les
je
fwait
stos
push
push
xlat
mov
jg
ljmp
addr16
ficoml
or
das
shrb
out
or
push
inc
or
orb
and
sub
adc
dec
push
adc
in
add
pop
je
lds
or
pop
out
and
jmp
lods
cwtl
pop
mov
movsl
aad
repz
xchg
stos
icebp
jg
bound
fnstcw
xor
stos
push
cmp
rorb
jg
and
loopne
gs
add
scas
ds
pop
test
jmp
pop
sub
or
inc
pop
push
cwtl
daa
lods
fsubrl
fcoms
test
es
and
stos
mov
mov
push
jle
mov
ja
xchg
stos
sarb
fwait
mov
loop
push
clc
pushf
push
adc
ret
or
jl
test
dec
cmp
cli
jne
mov
mov
inc
pop
mov
sub
lods
jle
roll
mov
movsb
popa
mov
scas
cmp
cmp
xor
notb
push
jle
xchg
ja
jle
ret
pop
mov
stos
into
adc
lock
mov
sarb
add
pop
push
inc
insb
and
testl
call
fimull
adc
scas
or
mov
jp
push
es
adc
mov
push
hlt
ja
mov
adc
fldl
add
orb
ds
call
test
inc
mov
sti
mov
pop
les
push
sub
cmp
stos
clc
jg
je
fistps
mov
cmc
es
pop
daa
pop
or
in
xchg
jns
repz
pop
mov
xchg
jmp
mov
pushf
xchg
push
push
test
xor
stos
cmp
rcrb
mov
pop
xchg
inc
lods
ret
js
pop
fwait
adc
xchg
loope
shll
inc
jp
and
lcall
push
and
jl
mov
cs
pushf
call
mov
add
mov
lock
nop
jbe
add
test
cli
xchg
pop
int3
sub
add
push
dec
nop
mov
pushf
inc
ja
push
inc
pop
cld
stos
and
test
int
loopne
or
loopne,pn
test
adc
hlt
add
jnp
inc
ds
xchg
aam
out
mov
insb
das
sub
fldt
mov
dec
mov
stos
mov
inc
subb
ds
dec
outsl
andb
mov
cmp
pop
mov
fdivp
lcall
idivl
push
fwait
lea
push
bound
mov
mov
shll
rclb
push
lcall
pop
outsb
inc
inc
jmp
mov
dec
adc
lods
mov
cmpb
outsl
jnp
ss
push
cs
lods
jno
dec
or
push
jmp
cmp
sbb
cmc
shrb
jmp
mov
in
xchg
iret
test
les
out
pop
daa
ds
jae
push
sbb
movsb
aam
or
std
shll
pop
jne
xor
ret
fwait
leave
insb
sub
enter
rclb
fdiv
das
add
int3
jmp
repz
adc
mov
pop
xorl
sti
push
scas
jae
into
xchg
jb
mov
dec
sub
sub
jb
jbe
rclb
push
inc
les
lcall
push
loopne
cwtl
xor
ret
inc
xor
jp
outsl
xchg
outsb
pusha
sub
scas
mov
pushf
out
xchg
je
and
aas
mov
mov
cmpsb
ficoml
int
test
push
push
popa
std
imul
inc
push
cld
repz
mov
lea
daa
pop
add
or
mov
gs
test
cli
xchg
shrl
fbstp
cld
xchg
mov
test
adc
mov
mov
dec
sub
leave
or
outsb
mov
dec
stos
hlt
sub
imul
inc
sti
jecxz
aaa
mov
inc
addl
in
mov
popa
push
stos
addr16
outsl
xor
ficoml
pop
aaa
xchg
hlt
mov
pop
push
enter
lds
sahf
and
mov
jp
or
divl
mov
cli
xchg
inc
fstpl
push
cmp
mov
std
testb
hlt
pushf
sbbb
sahf
lock
mov
loope
call
std
rclb
mov
outsb
jo
jne
fwait
add
lods
add
pushf
add
sahf
cli
divb
inc
push
push
or
xchg
mov
add
push
mov
jmp
mov
insb
mov
pop
sbb
xlat
pop
cltd
loop
test
mov
out
outsl
lock
outsb
pop
add
push
add
fcomip
jecxz
pop
cmp
mov
pop
outsb
dec
int3
les
pop
shl
mov
mov
negb
or
xor
adc
jle
mov
sub
leave
notb
test
fwait
rolb
sarb
or
lock
sub
add
mov
inc
push
jne
pop
rol
mov
mov
popl
mov
fcoml
sub
hlt
js
pop
clc
xchg
dec
sbb
mov
repnz
push
loopne
or
sub
es
push
or
cmp
dec
ret
pop
lods
nop
dec
xchg
out
ficoms
mov
adc
xchg
mov
sbb
push
lods
les
pushf
dec
jl
shll
pop
push
pushf
ljmp
cmp
lcall
push
jae
sub
notb
push
pop
mov
mov
mov
pop
mov
sarb
test
push
in
inc
test
lcall
lds
test
rclb
mov
jp
cli
call
inc
cs
test
dec
jbe
sub
mov
sub
insl
cs
mov
aaa
in
and
mov
clc
imul
push
pop
sub
mov
push
lods
add
test
push
lock
push
ret
jecxz
out
das
jl
out
mov
pop
xor
and
mov
add
xlat
pushl
xchg
jb
sub
mov
mov
fcomip
jne
sub
adc
stc
rolb
add
dec
xchg
fstpl
sbb
push
js
je
adc
jl
push
out
and
lock
nop
sub
jne
inc
into
ret
test
sub
cld
cmpsb
out
shlb
jl
bound
xchg
pop
mov
cmp
incl
adc
rolb
test
rcrl
or
mov
mov
adc
movsl
and
push
or
ds
dec
mov
mov
inc
fs
pop
shlb
mov
lods
lds
aaa
push
jne
ja
rolb
mov
out
jp
cmpl
nop
add
insb
sub
ljmp
out
lcall
in
in
inc
cwtl
add
aad
fistl
mov
rcll
xchg
in
nop
jmp
imul
mov
je
fisttps
pop
add
mov
repz
dec
inc
xor
inc
pop
sbb
push
in
mov
scas
mov
push
cmp
and
push
cmp
popf
shrl
mov
jmp
sub
push
mov
sub
pop
pop
pop
mov
ja
inc
pop
pop
inc
adc
xor
jg
lock
jnp
mov
clc
adc
jne
mov
repz
xlat
fstps
push
adc
lcall
mov
jl
or
xor
fbstp
lock
jl
popf
shrb
sti
test
fbld
das
addb
ss
test
mov
jmp
sbbb
iret
push
lock
mov
in
cltd
lret
pop
or
push
pop
sahf
cli
incl
roll
cmpsb
inc
int
jle
add
pop
sbbb
sub
adc
int3
and
add
adc
or
xlat
je
jbe
sbb
fimuls
dec
xchg
mov
jb
pop
or
sbb
shl
decl
add
das
push
divl
adc
mov
inc
jae
decl
ret
jl
in
mov
sahf
cld
je
insb
sub
adc
inc
sub
mov
mov
sub
aam
mov
cmp
in
sub
jne
mov
ror
in
ja
push
iret
popf
xchg
cwtl
sbb
cmp
pop
bound
jle
sbb
shlb
incl
fnstenv
xchg
sub
mov
mov
repnz
pop
out
cli
add
loop
stos
cmp
icebp
and
jnp
cli
jg
or
pop
and
pop
jb
out
push
adc
inc
lods
push
push
ret
scas
push
jl
mov
adc
jae,pn
les
jbe
push
ds
adc
or
pop
add
call
pop
jae
inc
sub
xchg
inc
rdmsr
add
inc
int3
pop
fisubs
adc
daa
mov
std
fbstp
jecxz
inc
mov
iret
mov
adc
nop
pop
mov
loopne
add
or
jmp
cs
sar
dec
fmull
fldl
nop
mov
mov
lret
add
xor
loopne
sbb
mov
mov
pop
push
lock
pop
enter
push
fcmove
mov
xchg
nop
xchg
insb
adc
mov
shrb
push
std
ljmp
es
inc
data16
mov
pop
jg
hlt
xchg
push
das
pop
out
inc
xchg
cwtl
push
jecxz
pop
inc
outsl
cli
incl
into
inc
add
mov
lahf
pop
xor
mov
fdiv
add
xchg
mov
xor
lcall
daa
jge
xor
push
jne
hlt
cmpsl
js
and
das
inc
sar
fmull
cli
add
pusha
fcompl
mov
and
hlt
mov
lahf
pop
fcmovnb
cwtl
push
mov
insb
dec
add
mov
outsb
mov
aam
nop
mov
aam
xor
out
incb
jp
icebp
filds
mov
movsb
loop
mov
xchg
jge
and
dec
xor
pop
pop
hlt
je
jne
dec
adc
jecxz
add
outsl
js
mov
mov
cmp
push
pop
or
adc
outsl
ljmp
andb
popf
pop
fildl
add
cli
xor
divl
mov
cli
pop
or
fdivl
ja
cld
movsl
or
inc
icebp
mov
popa
push
sti
pop
mov
and
sbb
lds
scas
cmp
or
jae
add
lret
lock
sub
mov
lods
aam
in
dec
sbb
fcompl
mov
inc
sahf
ret
xchg
jmp
stos
sub
call
cmp
xchg
sbb
mov
ljmp
scas
call
outsb
pop
mov
xchg
sbb
mov
pop
cld
cmp
loopne
sub
adc
xchg
cmp
push
sbb
push
sbb
sarl
sbbb
incl
subl
nop
in
mov
add
dec
xor
jbe
cmc
mov
sar
aad
lret
and
popf
scas
sbb
cmpsb
insl
sbb
pop
jle
cmp
hlt
test
and
mov
and
movsl
cmp
movsb
sti
cmp
cmpsb
pop
jbe
add
pusha
leave
mov
mov
shll
and
cwtl
cmp
ret
scas
divl
mov
movsb
sbb
pop
int
pushf
push
stos
imul
mov
ljmp
mov
daa
and
mov
fs
cmp
adc
and
sbb
sub
mov
pop
xor
xchg
mov
incb
inc
fistpl
add
pushl
std
faddp
in
int
pop
mov
inc
enter
cmp
push
xchg
xchg
in
sub
inc
push
mov
pop
aas
iret
orl
dec
ss
out
clc
divps
es
jae
and
xchg
not
xchg
push
mov
fsubrl
sub
lea
xchg
filds
mov
js
dec
pop
daa
rorl
cmp
ljmp
call
fldcw
imull
in
xor
fidivrl
push
push
shrl
sbb
int
and
and
loop
mov
stos
jg
inc
inc
adc
mov
sbb
pop
fldt
pop
jno
jno
xor
daa
sub
cwtl
push
jno
fcom
test
inc
mov
stos
jle
dec
pop
cmc
testl
mov
les
cld
jmp
dec
mov
xchg
lcall
dec
push
mov
jb
aaa
lea
cltd
and
cld
shrl
or
ret
pop
fwait
add
les
pop
shrb
fiadds
popf
stos
adc
jmp
add
aas
addr16
push
pop
int
pop
subl
push
neg
rclb
jl
ret
jb
lods
mov
orl
dec
mov
xor
icebp
pushf
ja
inc
dec
enter
mov
cld
add
cmpb
cmp
push
push
andl
pop
adc
leave
sub
aaa
sub
call
fwait
mov
push
movb
ja
xchg
xor
mov
inc
sub
scas
mov
sbbl
add
imul
add
pop
fisubl
jp
enter
mov
cs
rcll
sbb
incl
or
mov
pop
dec
cmp
mov
pop
stos
and
sbb
pop
rorb
rorb
add
cmc
cmp
add
add
push
jg
xlat
sub
lcall
std
clc
bound
je
aam
mov
lret
xchg
adc
lods
jecxz
out
gs
loope
scas
pop
sub
add
in
push
popa
sbbl
pop
ret
jb
xchg
cmp
mov
ljmp
or
stos
popf
ret
jmp
mov
stos
shlb
fildll
pop
test
lds
popa
push
cs
addr16
and
pop
inc
jl
daa
test
cld
mov
push
shl
out
imul
jmp
iret
sti
inc
aaa
jb
dec
jo
mov
cwtl
nop
pop
icebp
sub
cli
jbe
shlw
lahf
and
push
pop
aas
add
clc
or
jnp
movsb
mov
dec
mov
cmp
xor
push
test
mov
fists
inc
cmpsb
inc
icebp
pop
lret
scas
out
push
mov
enter
ret
push
xchg
std
inc
in
fdivrs
lea
cltd
icebp
lea
adc
ret
mov
icebp
jno
sbb
pop
vmread
pop
jo
fwait
xchg
insl
xor
loop
aaa
cld
add
mov
inc
jbe
inc
lock
pop
sub
out
loopne
sbb
or
mov
jle
loopne
shlb
out
fcoms
ljmp
add
adc
xchg
mov
and
call
dec
sbb
pop
pop
jo
or
mov
mov
xchg
lret
jp
ds
add
movsl
jg
push
stc
fistps
adc
push
movsl
mov
and
cltd
pop
pop
lahf
icebp
repz
scas
push
jg
fiadds
nopl
jae
or
cmp
fwait
enter
pop
push
dec
jb
aaa
loop
fsubrs
inc
lods
mov
lret
call
cld
inc
das
aad
jg
lds
mov
movsl
pop
mov
mov
inc
pop
movsb
dec
into
jmp
nop
inc
xlat
fsubl
jb
bound
popf
mov
mov
jo
insb
mov
or
sub
das
mov
bound
mov
jmp
sbb
pop
adc
xchg
aaa
in
cli
pop
xor
ret
jbe
cmpsb
movsb
pop
add
lock
aam
pop
mov
inc
ja
cmc
fldt
jecxz
xlat
ret
xor
out
out
rclb
dec
sbb
hlt
popf
jmp
scas
mov
pop
or
or
pop
pop
add
fwait
mov
mov
jg
inc
fildll
pusha
push
pushl
adc
sbb
mov
sub
xor
lahf
push
repnz
sbb
scas
fsubrs
lds
test
dec
jne
mov
scas
push
add
lahf
dec
mov
push
outsb
std
xor
aam
movsb
jp
pusha
xchg
outsb
cmp
mov
and
fwait
jp
testb
hlt
inc
cmpsl
xlat
mov
add
out
shlb
inc
adc
mov
sub
push
mov
inc
adc
sub
cmp
fimuls
aad
out
idivb
or
cmpsl
xchg
xchg
add
lret
pushf
or
mov
mov
fistl
movsl
pop
xchg
xchg
pop
mov
mov
hlt
fimull
add
leave
pushf
orb
push
mov
adc
ja
dec
pusha
fsts
gs
pop
or
pop
repz
xchg
pop
inc
lcall
jne
faddl
in
or
push
clc
lsl
sub
xor
shlb
lods
test
sub
js
xchg
dec
pop
into
insl
push
and
outsl
mov
jl
jns
addl
imul
je,pn
jno
sub
push
sub
inc
aaa
cld
outsb
es
mov
rcr
sarl
stos
in
scas
or
sbb
jo
fdivrl
movsl
insb
scas
into
jmp
pusha
sub
mov
decl
mov
cmp
in
ret
lock
mov
add
sub
dec
mov
fcomps
aas
add
and
and
loop
and
dec
sub
jge
lcall
fsub
addl
daa
ss
dec
or
clc
push
test
clc
ja
xor
push
inc
pushf
or
pop
jecxz
jno,pn
push
ret
pop
in
fdivrs
insb
rcrl
andb
out
xor
sub
test
inc
daa
push
dec
xchg
push
cmp
in
loopne
addb
sub
pushf
push
pop
popf
dec
inc
bound
aas
adc
fidivl
dec
push
xor
cs
or
pop
add
pop
mov
mov
mov
movsb
mov
jo
and
jge
mov
hlt
ficoml
lock
out
push
rclb
jno
fistps
mov
les
cmpsb
shlb
jne
in
pop
mov
rclb
ss
lds
cwtl
inc
add
pop
mov
or
cld
dec
scas
stos
jmp
mov
ss
hlt
jmp
pop
and
push
ja
loope
lock
lret
jge
test
and
stos
sbbl
xchg
mov
lock
lcall
push
pop
lock
sub
aas
stos
outsb
cwtl
rorl
sbbb
and
xor
jl
adc
or
mov
mov
ret
jno
out
pop
jo
jg
mov
faddl
adc
mov
xchg
sbb
movsb
das
cwtl
push
js
shlb
and
loopne
pop
je
adc
push
jg
xor
outsl
pop
cli
cwtl
push
push
inc
sub
adc
pop
inc
mov
push
and
adc
call
test
outsb
add
aaa
cmp
sub
sbb
stos
outsb
xor
sbb
add
pushf
jge
jp
movsb
push
sub
push
dec
cmp
scas
or
cltd
sbb
in
jmp
addr16
pop
mov
rorl
nop
pop
inc
mov
xorl
adc
push
mov
stos
scas
ret
adc
addb
inc
push
xchg
jo
stc
cmp
mov
call
or
das
outsl
jno
inc
imul
sbb
jo
jg
outsl
fisubs
pop
aad
int3
cs
xor
push
loope
js
xchg
stc
adc
lock
and
inc
or
mov
adc
mov
fmull
sub
add
subb
push
add
xchg
daa
es
jge
sub
adc
arpl
stos
mov
jle
adc
sbb
push
xchg
push
push
push
insl
shlb
add
pop
inc
repnz
add
push
or
lcall
call
pop
mov
scas
xor
or
pop
and
dec
test
and
or
xchg
add
xchg
cmp
add
lock
sahf
loop
jl
dec
subb
cli
les
shl
pop
mov
sub
aaa
jb
out
adc
or
sbb
mov
outsb
loopne
scas
add
pop
repnz
adc
mov
pop
mov
mov
push
std
add
icebp
aaa
mov
addr16
les
aas
ss
incl
andl
leave
lock
lock
sbb
fs
stos
mov
outsl
or
xor
push
fs
add
addr16
sbb
rorb
pop
fcoms
insb
inc
fnstsw
mov
push
aas
add
ljmp
mov
pop
sub
out
jle
sub
jae
mov
std
mov
iret
adc
nop
lcall
fbstp
imulb
push
pop
mov
mov
mov
sbb
cmpsb
sbb
mov
add
push
in
and
mov
call
pop
lds
sahf
xor
xor
clc
push
sbb
mov
or
icebp
push
lcall
jmp
aam
fists
sbb
loope
mov
cs
mov
xchg
pusha
cmpsb
enter
jg
xchg
cmpsb
aas
aaa
xchg
add
and
aaa
jo
out
mov
in
dec
jbe
jp
mov
mov
cli
and
fwait
mov
mov
sbb
add
xchg
dec
insb
fcmovb
cli
pop
mov
push
aam
mov
pop
xor
mov
pop
sbb
outsl
clc
lods
jns
jns
hlt
cmp
jp
enter
mov
insl
mov
sub
lret
adc
sbb
aad
sahf
cld
imull
sub
pop
adcb
aad
jns
push
sbb
push
dec
out
outsb
lret
js
adc
into
roll
mov
aaa
cld
jmp
cli
inc
mov
notl
ja
repz
push
mov
cmc
pop
xlat
loope
mov
mov
mov
jae
jbe
adc
rclb
movsb
cwtl
aam
jnp
test
cmpsb
incl
dec
jmp
inc
xchg
inc
push
mov
fldl
sbb
std
or
out
push
repnz
add
mov
sub
mov
ljmp
subb
int
fisubrl
lret
inc
in
repz
js
mov
in
lret
ljmp
fsubp
ja
les
fnstsw
cld
jne
mov
xor
pop
imul
push
xor
mov
scas
std
or
sub
xor
and
cld
sbb
push
mov
pop
mov
mov
scas
iret
ja
sar
outsl
subb
jp
adc
inc
outsl
pop
sar
fildll
xchg
in
ret
dec
lret
add
inc
xor
add
cld
mov
xchg
movsb
push
fildll
std
stc
repz
loope
add
out
pusha
test
jg
subb
xchg
shrd
jo
mov
jl
aad
test
out
int
push
clc
pop
push
scas
sbb
fldl
inc
and
dec
or
rcrl
mov
cmp
and
jle
movsb
cmpsl
idiv
jmp
test
push
decb
cwtl
fdivrs
inc
aaa
ret
inc
hlt
mov
or
jnp
jg
mov
xchg
call
cmp
pop
filds
or
add
std
outsl
xor
repnz
mov
ficomps
jg
sar
fsubrs
imul
ret
aas
loopne
loope
ret
or
paddsb
sub
pop
dec
aam
push
loopne
jno
mov
lret
xchg
sbb
add
stos
mov
mov
pop
adc
icebp
scas
sbb
xor
cmp
imul
hlt
mov
sarb
mov
es
mov
add
outsl
stos
bound
inc
les
inc
cs
pop
out
sub
mov
fnsave
inc
popa
pop
sub
mov
jg
cmp
mov
stc
scas
and
orl
xor
xchg
sbb
push
les
ficoml
xchg
cmp
xchg
test
fs
loopne
push
adc
mov
add
cmp
lock
sbb
cwtl
sbb
icebp
dec
xchg
cmc
fsubrs
add
pop
cli
xchg
cmp
or
cli
fildll
sbb
add
shll
xor
gs
mov
xchg
mov
sbb
jb
stc
fidivrl
add
aaa
fcomip
push
mov
jl
outsl
icebp
repz
clc
movsl
pushf
push
repnz
mov
or
or
jne
push
adc
ret
xchg
mov
in
mov
out
sbb
push
sbb
cwtl
jmp
jnp
dec
sub
xchg
and
iret
popf
scas
iret
push
cmp
psllw
fcomip
incb
lret
lock
mov
xchg
lds
push
inc
pop
xchg
bound
or
sub
adc
rclb
into
leave
mov
jmp
lds
negb
jns
mov
pop
popf
mov
and
je
jmp
sub
ljmp
mov
rcrl
cli
idivl
dec
dec
stos
insl
sti
cmp
scas
dec
lds
cwtl
pop
cmp
cmp
test
sub
xor
adc
call
push
and
rol
scas
cmpsl
ja
stos
xchg
or
scas
ds
cmpsb
mov
enter
test
and
mov
pop
dec
mov
push
mov
adc
inc
shl
out
pop
mov
ss
fs
and
mov
ljmp
add
xor
push
cli
dec
inc
xchg
mov
movsl
fisubrl
pop
or
ja
fbstp
mov
enter
lods
mov
aaa
in
push
pop
jg
cld
stos
cmpsb
fcmovnbe
data16
in
mov
invd
jo
pop
lcall
ljmp
faddl
inc
or
xchg
mov
scas
xchg
gs
jnp
jmp
push
nop
orb
daa
into
pop
out
pop
xor
imul
in
mov
pusha
les
and
imul
adc
decb
test
subl
pop
push
jle
icebp
pushl
push
pop
mov
popa
jns
dec
sahf
roll
xor
sbbb
push
mov
push
pop
and
shlb
push
lods
or
call
test
lds
mov
dec
dec
jg
jnp
inc
cs
outsb
adc
popl
push
cmp
cmp
cmpsl
pop
test
cld
or
jge
push
pop
mov
xor
ret
outsl
pop
js
loop
mov
dec
fdivrp
dec
cmc
push
push
or
mov
hlt
or
inc
fwait
sbb
lcall
jg
xor
out
inc
inc
push
fimuls
mov
inc
and
push
cld
shl
pop
mov
das
sbb
cmpsb
mov
sub
fld
sbb
rolb
aam
cmp
dec
xchg
test
int3
icebp
fwait
movsl
add
mov
call
mov
and
cld
hlt
pop
call
fdiv
xor
xor
outsb
lret
out
add
cmp
mov
mov
mov
test
or
sub
lods
xchg
cmp
ficompl
ret
jl
mov
loope
jbe
fsubp
push
bound
xchg
cwtl
xchg
movaps
fdivrs
mov
push
cltd
movsb
or
scas
mov
or
stos
loope
lret
mov
mov
pop
lock
cmp
push
jp
call
loop
pop
inc
pop
xchg
aas
cwtl
out
jae
push
aas
xchg
lcall
repnz
fdiv
incl
mov
push
fstl
lods
aaa
mov
scas
push
cmp
dec
jge
or
xlat
and
dec
ljmp
xchg
rclb
cld
dec
add
retw
add
test
icebp
push
repz
loop
cmpsb
and
rcl
mov
jo
lea
jne
icebp
dec
inc
push
hlt
mov
out
or
pop
jg
mov
mov
push
jmp
mov
pop
scas
cmp
and
decl
mov
and
movsl
rolb
incl
insb
stc
jp
inc
movsl
sbb
fidivrs
sbb
int
push
mov
lods
fmulp
adc
fcom
add
lahf
mov
sub
ret
xor
and
push
lds
insb
jb
xor
pop
rep
loop
fdivr
mov
test
fwait
pusha
mov
pop
mov
pop
push
call
push
jg
pop
mov
cmpsb
lcall
fcomp
adc
jl
pop
mov
sti
andl
add
icebp
add
in
ret
add
push
cld
notb
mov
loop
or
movsb
sbbl
pop
loop
outsb
xchg
xorl
inc
cmpsb
sbb
adc
lock
int
aam
mov
pop
sbbb
mov
ljmp
mov
sahf
out
cmc
mov
jnp
sahf
adc
jo
mov
jmp
enter
add
je
or
inc
sub
xor
push
sbb
cmpb
out
cmp
sbb
xor
jno
or
push
dec
mov
subb
test
inc
xchg
outsb
add
ljmp
adc
mov
cmp
mov
mov
daa
push
out
dec
test
arpl
jle
sbbl
leave
dec
add
fmuls
jl
jb
xchg
sahf
mov
mov
xchg
jp
int
shlb
and
rcrl
sbb
sar
mov
aad
push
sbb
in
pop
inc
test
cld
jg
das
inc
add
and
add
out
adcl
fisubs
add
jle
pusha
js
push
call
movl
hlt
imul
pop
insb
lods
xor
sti
das
cs
mov
test
std
xor
loope
lods
ja
test
shl
loop
push
dec
arpl
in
mov
enter
dec
ljmp
into
or
mov
adc
pop
out
jg
push
adc
subl
loop
add
adc
dec
aam
jmp
and
sbb
jmp
lods
rol
pop
shrb
lock
int
in
pop
loope
or
cmp
sub
push
xlat
xchg
xchg
mov
stos
rcr
addb
scas
adc
add
inc
cmpb
test
cs
aas
nop
jno
pop
or
pop
cmp
xchg
lds
sbb
sbb
clc
add
xchg
inc
push
rcr
fmul
push
fiaddl
mov
push
dec
dec
xor
cwtl
cmpsb
inc
jbe
dec
lock
sti
jno
mov
outsb
xor
clc
orl
mov
dec
jno,pn
mov
ja
popw
stos
add
mov
adc
and
fisttps
notl
ds
mov
and
add
fcmovnu
aam
sbb
mov
ljmp
xchg
cli
les
push
leave
loope
divl
std
jns
push
or
add
inc
xchg
add
or
jbe,pn
push
cwtl
dec
adcb
mov
inc
cmp
out
ret
outsb
adc
pop
loopne
lahf
sub
jle
ret
mov
cmpsl
outsl
fdivl
test
insl
mov
sub
xchg
inc
cmp
xchg
aam
mov
stos
aaa
out
mov
jbe
lea
add
sbb
cld
xchg
aam
in
mov
sti
push
mov
adc
cmc
filds
int
jnp
stos
iret
ficoml
ss
mov
popa
daa
aad
cmp
xor
andb
or
je
call
mov
xchg
cmpsb
ja
and
mov
ds
enter
push
or
xchg
sbb
sti
add
inc
fs
imul
cmp
pop
incl
sub
in
cwtl
push
push
pop
je
sbb
aam
pop
mov
scas
mov
cmc
pop
call
lock
inc
loope
aas
rcrb
xor
mov
cltd
and
es
mov
lret
jbe
insb
ds
cld
outsl
cmp
pop
push
sub
hlt
imul
mov
sbb
not
and
shl
mov
call
push
fbld
mov
and
scas
shrl
ret
mov
mov
insl
addr16
popf
add
repnz
ds
push
jge
and
xchg
inc
aam
loop
cwtl
lret
push
cmp
cmp
xchg
add
scas
cmpsb
mov
xchg
mov
std
dec
ss
mov
andb
outsl
xchg
ret
adc
sub
test
xchg
gs
mov
insl
sub
xor
mov
add
cli
mov
mov
and
clc
aad
dec
pop
push
fwait
js
and
pop
fimull
shr
push
cmp
mov
jae
and
or
test
call
test
test
lcall
mov
mov
mov
push
mov
sub
jb
fistpl
out
adc
imul
xchg
mov
pop
or
outsb
add
sub
scas
jo
lock
sub
out
lds
sub
mov
mov
sub
sub
cld
ljmp
lock
dec
aad
inc
dec
imulb
xchg
or
loopne
leave
push
and
jg
dec
xor
or
push
push
fildll
pop
mov
int3
adc
pop
enter
pop
lods
inc
imul
pop
movsb
into
aad
jo
imul
or
pusha
push
nop
shll
adc
stos
pop
mov
js
mov
fsts
imul
cmp
mov
cli
inc
xchg
mov
sbb
add
loop
incl
ljmp
jmp
call
add
dec
pusha
cmp
or
mov
ret
mov
inc
clc
push
jbe
xchg
add
repnz
dec
push
jns
cmp
push
add
jle
aaa
enter
iret
inc
ret
and
sub
or
jmp
cld
cmp
into
iret
testb
rolb
mov
gs
jnp
cld
aaa
mov
nop
jo
push
jo
sbb
pop
sub
std
jecxz
add
add
lods
push
mov
aas
outsb
sub
or
mov
bound
and
cmp
jmp
lock
idivb
adc
stc
decl
sbb
mov
cmp
inc
add
pusha
and
stos
lods
fisttps
mov
jb
inc
adc
std
dec
fdiv
imul
pusha
mov
cmp
sub
jp
pusha
mov
push
mov
jbe
and
fsubrs
lock
std
adc
pop
jne
xchg
add
subb
jo
mov
pop
pop
add
ljmp
sub
adc
jb
add
mov
and
cmp
mov
pushf
pop
mov
movsl
test
push
add
xchg
enter
out
sahf
push
filds
inc
sbbb
lcall
and
push
push
lcall
mov
repnz
je
mov
or
push
les
inc
popf
sbb
and
subb
mov
pop
jmp
hlt
mov
fstps
xor
popa
imul
xchg
inc
out
add
sbb
fbld
or
xor
add
sub
sub
xor
rolb
enter
out
es
xchg
push
in
and
jbe
leave
in
and
pop
pop
stos
insb
stos
notl
sub
adc
xor
cmp
aad
loopne
jecxz
fnstenv
push
inc
call
bound
pop
leave
dec
hlt
or
and
mov
ljmp
lds
push
push
call
jle
cmp
nop
or
push
das
ret
pop
mov
outsb
mov
pop
lret
cli
pop
mov
lds
jl
xchg
jo
call
cli
jbe
mov
push
or
inc
jl
pusha
int
cwtl
mov
fs
int
fisubs
cld
lea
or
sti
mov
jle
les
xchg
mov
and
push
ret
clc
adcb
shlb
in
repz
psraw
loopne
pop
and
bound
in
pop
shl
xor
clc
mov
mov
je
negb
in
addr16
xor
or
into
xchg
ja
xchg
scas
jg
fdivl
nop
ret
push
pop
les
sub
mov
add
mov
jo
iret
fcompl
jl
ja
in
sbb
or
and
sti
hlt
stc
mov
shlb
push
les
jle
cmc
ror
ljmp
lea
pop
outsb
imul
mov
popf
aad
rcll
mov
je
and
decl
inc
jmp
pop
int
dec
mov
mov
mov
dec
xchg
lret
push
cmp
stos
test
pop
dec
pop
lock
call
jns
push
sub
cld
push
jecxz
adc
loopne
mov
lahf
mov
cli
mov
movsl
fldt
in
or
add
fiadds
push
scas
sub
jmp
movsb
dec
cli
push
mov
repnz
xabort
incl
mov
cmp
or
sbb
clc
mov
sub
sar
outsl
out
adc
cs
add
test
lret
or
inc
jg
dec
lret
sarb
inc
add
fimull
loopne
scas
sarl
arpl
pop
nopl
stc
xchg
mov
jecxz
mov
mov
and
sbb
repnz
pop
sub
fidivrl
add
add
push
push
fdivrp
lret
int
cmp
dec
dec
lock
fldl
sbb
push
jae
hlt
lods
scas
insl
jle
mov
push
std
xor
fldcw
int
arpl
ja
es
push
lods
push
aad
jmp
fwait
jle
fbld
fimull
bound
xchg
mov
and
or
clc
or
mov
lcall
sbb
xchg
mov
cld
pop
jb
ja
cmc
lahf
fsubrs
mov
mov
movsl
mov
enter
in
loop
sbb
repz
cmp
sarl
movsl
xchg
add
daa
aas
lcall
aad
xchg
imul
and
sub
and
rorb
test
rclb
addr16
adc
cli
sub
lret
jle
fnstsw
jbe
xor
xor
insb
pop
add
ficoml
sbb
push
push
cli
adc
cld
jb
xchg
mov
cmp
jle
and
mov
insl
push
pop
add
insb
out
mov
cmp
sbb
inc
into
pop
mov
leave
add
push
mov
mull
pop
mov
ret
mov
call
push
lret
mov
mov
lds
iret
push
mov
outsb
mov
ds
jne
data16
mov
jo,pt
and
inc
push
aaa
xor
sbb
pop
outsl
mov
pop
mov
push
cli
rcrb
jb
mov
cmp
mov
jb
mov
ljmp
fcom
test
lret
add
add
bnd
jb
in
push
fsubl
jb
dec
scas
mov
out
mov
mov
loopne
add
les
pop
clc
sbb
lret
jl
fdivrs
dec
insl
mov
rorb
push
push
popa
std
add
mov
test
in
fcompl
xchg
ret
mov
into
pop
aam
fadd
cld
cmp
mov
adc
dec
mov
adc
dec
xchg
add
pop
inc
xor
inc
pop
gs
jmp
sahf
fdivr
adc
out
push
xchg
mov
movsb
push
repnz
add
push
mov
xlat
mov
add
inc
inc
mov
push
in
enter
rclb
push
ss
and
mov
push
pop
hlt
or
cmc
scas
stos
push
sub
stos
and
push
xchg
test
out
fdivrl
stos
test
xchg
dec
out
dec
cltd
div
dec
jae
jg
cs
xchg
push
mov
outsb
sbb
xchg
mov
enter
push
mov
fists
mov
clc
sbb
sbb
add
fsubl
ljmp
or
xorb
cmp
cmp
das
clc
mov
xor
cmc
ret
out
pop
mov
lods
fsubrs
outsb
jne
adc
cmp
les
add
mov
or
cmpsb
add
into
push
fstps
pop
je
mov
scas
or
jmp
jmp
stc
add
ljmp
pop
or
js
push
jmp
jmp
jae
popa
pop
loop
cld
ljmp
or
and
jo
lret
ficomps
add
cs
pop
loop
jns
mov
or
smsw
mov
dec
cmp
pop
xchg
in
daa
push
cli
inc
cld
sbb
in
adc
dec
mov
cmp
fisttps
sahf
insb
dec
jae
xchg
and
sahf
sti
sbb
aad
pop
mov
ret
cli
rcll
imul
cmpsl
in
adc
lcall
ljmp
outsl
test
out
adc
ret
add
pusha
inc
push
pop
cmc
mov
sub
jmp
aaa
mov
inc
faddl
push
in
fdivl
hlt
mov
inc
pop
ret
into
out
push
adc
arpl
mov
mov
dec
mov
pop
out
push
inc
xchg
test
or
mov
cmp
cmp
popf
test
adc
daa
jecxz
dec
pushl
sbb
xchg
ljmp
xorl
imul
jb
rcl
mov
and
push
dec
orb
mov
mov
insl
std
push
pop
inc
and
inc
lock
aas
insb
mov
mov
repnz
cld
mov
stc
sub
neg
idivl
sbb
pop
adc
xor
insl
std
es
mov
and
clc
mov
push
and
mov
jg
pop
and
ror
pop
jmp
and
arpl
mov
add
xchg
nop
out
and
jp
clc
add
outsl
bound
frstor
pop
push
pop
push
add
fistps
ljmp
pushl
push
adc
sbb
aam
out
inc
adc
mov
pop
xchg
jne
or
stos
popl
cmp
xlat
mov
add
xchg
nop
inc
mov
mov
or
push
push
je
xchg
gs
add
incb
loopne
cli
and
pop
or
push
iret
fbld
sub
sub
mov
pop
ret
xchg
xlat
mov
mov
pop
or
lds
fisttps
stos
xor
sarb
xchg
dec
cld
js
add
mov
xor
mov
fs
xchg
mov
pop
mov
shl
jmp
lods
shl
push
pop
mov
mov
clc
or
pop
jbe
out
pop
jge
out
dec
cld
das
sub
pop
sub
loopne
mov
sbb
cld
ljmp
xor
cmpsb
sub
xor
pop
ljmp
stos
call
pop
push
cwtl
pushf
std
xchg
adc
lahf
out
lds
dec
loope
sar
mov
out
inc
mov
sahf
pop
lock
cld
sub
cmp
or
repz
gs
sahf
mov
pop
test
mov
inc
inc
je
inc
adc
and
cmp
shrl
inc
filds
adcl
cld
pop
loopne
pop
or
dec
push
sub
ret
sub
push
cwtl
push
pop
test
stos
out
or
shlb
test
loop
or
push
lret
add
mov
xchg
mov
fistps
mov
xchg
jo
int
add
data16
cltd
stos
outsb
lods
xor
dec
out
movsb
cli
ljmp
lods
es
xor
insb
pop
cs
xchg
les
mov
cmpsb
outsl
addb
add
es
adc
dec
sub
push
lock
adc
outsb
pop
sub
pop
cmp
fnstenv
add
insl
adc
hlt
shll
jl
dec
fildll
mov
pop
test
xor
outsl
clc
cmp
or
inc
cmc
adc
scas
cmp
movsl
push
sub
mov
add
lods
mov
xor
or
iret
cltd
dec
ja
adc
cs
and
pop
xor
cld
jle
loop
add
aam
outsl
cli
incl
xchg
jl
pop
xor
ljmp
jae
decl
arpl
divb
lret
clc
mov
shrb
add
sar
or
dec
fisttpll
push
mov
es
sbb
dec
mulb
or
xchg
jmp
push
jo
jge
xor
sbb
jg
push
pop
sub
insb
cli
jg
jg
jl
and
insb
mov
and
popf
aam
pop
out
lcall
push
add
xor
mov
pop
push
fsubrs
inc
sub
jp
cmpsl
out
andb
mov
inc
cmp
imul
pop
pop
lcall
int3
xchg
sar
in
enter
insb
lret
mov
inc
lds
mov
pop
loopne
sub
mov
adc
push
ja
mov
pop
fimuls
sbb
cmp
fadds
daa
pop
dec
addr16
jmp
out
ret
mov
cmpsl
mov
mov
adc
ret
jg
ja
and
sub
sahf
mov
pop
xchg
push
or
dec
mov
sahf
xchg
adc
clc
xor
push
popa
popa
dec
pop
daa
sahf
roll
scas
xor
sbb
fistl
incl
mov
rolb
pop
xor
pushf
mov
mov
movsl
lds
aam
out
pop
sub
sbb
adc
enter
mov
mov
test
xchg
cmp
xchg
push
add
lahf
cld
jne
imull
mov
mov
lds
jb
or
mov
mov
lock
mov
push
ss
popa
in
mov
push
xchg
dec
das
xchg
push
ror
xor
dec
jnp
psubusb
pop
jo
jp
mov
aam
inc
je
mov
pop
lds
add
in
pop
sbb
add
cmp
adc
cwtl
lock
sbb
pop
push
dec
hlt
jecxz
xchg
leave
xchg
sub
shlb
sbb
mov
popa
fwait
ss
lock
cmpsb
mov
pop
hlt
and
cmpb
lods
into
and
leave
fs
cmp
outsb
int
sub
cmpb
jae
pusha
jge
adcl
jge
ret
add
jl
mov
insb
and
dec
mov
jnp
xchg
fmuls
cmc
daa
sub
insb
mov
sbb
sub
sbb
mov
in
and
dec
ret
fs
xor
sbbb
incl
xchg
and
rclb
push
push
cmp
lock
mov
xchg
into
loopne
mov
iret
or
loop
loop
cs
push
rcr
test
fdivs
cmc
cli
idivb
mov
dec
ss
push
ret
imull
mov
or
bnd
mov
dec
pop
adc
jg
mov
shll
es
cmp
sub
icebp
cltd
mov
xchg
mov
mov
inc
and
ret
das
clc
dec
pop
imul
data16
jb
xchg
enter
cmp
mov
xor
cmc
in
pop
pusha
cmp
xor
xchg
inc
push
inc
add
fdivs
sbb
les
fisubs
mov
pushl
sub
rolb
test
les
add
pop
insl
lds
add
jmp
ss
inc
je
jg
xchg
out
xlat
pop
jg
test
sub
lods
ficomps
jne
decb
rolb
cmp
inc
mov
pop
xor
pop
mov
sub
jae
test
int3
or
or
xchg
ljmp
pop
lods
push
ret
dec
sbb
loop
mov
push
dec
pushl
xorl
cmc
negl
pusha
xchg
mov
rcl
mov
cmc
enter
sarl
push
insb
movb
lret
xchg
mov
je
push
das
sbbb
js
mov
loope,pt
pop
loopne
cmp
movsl
xor
or
mov
pop
mov
mov
push
movl
pop
outsl
dec
iret
pop
cwtl
icebp
mov
jbe
jge
jne
inc
pop
cld
or
pop
hlt
sbb
rcll
xchg
xchg
call
push
mov
out
hlt
inc
pop
or
out
push
inc
mov
aas
stc
dec
xchg
and
lcall
dec
push
adc
test
andb
cltd
sahf
fdivr
jg
or
insb
or
cld
sub
sub
icebp
mov
jmp
sub
addl
inc
cli
mov
stos
fiadds
mov
cld
jl
lods
and
scas
clc
in
xchg
cmp
hlt
add
mov
je
mov
sub
mov
xchg
rorl
dec
sti
or
cmpsl
adc
push
jnp
sarl
arpl
add
sbb
je
sahf
fsubrs
mov
call
loope
dec
pop
out
pop
mov
cli
rol
dec
pop
jb
lock
inc
mov
shlb
int
dec
pop
cmp
hlt
cltd
cmp
popa
pusha
and
add
sub
adc
out
fiadds
insl
clc
loopne
shl
nop
sub
sub
hlt
mov
imulb
cli
cs
or
push
fdivl
pop
sbb
fnsave
gs
in
addr16
push
sub
dec
jbe
incl
movsl
push
mov
push
and
mov
dec
std
or
xchg
pop
xor
or
pop
mov
pop
or
test
mov
add
push
mov
fwait
mov
cmp
ret
std
add
pop
iret
les
mov
mov
fcomps
mov
or
call
ljmp
xchg
aas
mov
movsl
stos
loop
sti
and
loopne
push
mov
icebp
in
int
out
or
ds
insl
mov
pop
adc
xchg
aaa
pop
and
mov
dec
sub
insb
js
inc
scas
imul
ss
mov
incb
push
xchg
push
insb
xor
js
mov
inc
xchg
inc
xor
adc
jmp
push
hlt
test
mov
cld
mov
ljmp
dec
out
or
push
mov
inc
aam
cld
pop
decb
int
leave
add
sbb
pop
ret
pop
add
fisubrl
mov
addr16
lock
loopne
scas
mov
sahf
pushf
stos
cmc
add
hlt
stc
aas
out
xor
pop
mov
inc
daa
fucomi
ret
decb
add
mov
outsl
fwait
test
rclb
xor
push
sbb
enter
sbb
jns
push
out
cmp
ja
mov
int3
push
sahf
sahf
mov
push
cld
lds
inc
pop
in
fisubrl
cmp
mov
es
and
std
jg
lods
das
add
mov
xchg
call
xchg
shll
mov
lods
loope
adc
xor
int3
dec
jl
ds
gs
xchg
push
push
dec
test
mov
pop
jl
mov
inc
call
cmp
sub
dec
cli
add
aas
push
fbld
jmp
ret
xchg
loop
int3
and
adc
stos
pop
add
rep
stos
ljmp
mov
add
lock
in
data16
mov
jns
movsl
push
cld
and
sub
dec
sbb
push
ljmp
test
pop
cld
adc
imul
lds
push
lods
ret
sbb
aaa
inc
pushl
outsb
cmp
jbe
mov
or
jo
mov
sub
movsl
push
dec
add
lds
mov
cwtl
or
fbld
shrb
mov
mov
adc
add
fdivrl
ljmp
xchg
outsl
cs
push
stc
es
pop
add
sbb
dec
pop
inc
daa
dec
rorw
push
inc
sub
faddl
scas
lods
nop
je
mov
mov
cmp
mov
push
flds
stos
loopne
gs
and
cs
test
pop
std
negb
mov
jge
xor
sarl
js
inc
call
push
push
or
js
cltd
fsub
pop
mov
hlt
pop
repz
push
and
shrb
testl
dec
inc
push
dec
push
clc
or
push
fstpt
hlt
mov
mov
jp
jb
cmc
sub
inc
xor
test
pop
add
sub
es
lcall
push
inc
sbb
xchg
stos
or
sbb
jae
push
je
pushf
lcall
mov
push
sbb
inc
or
sbb
and
fidivrs
or
mov
mov
inc
dec
push
or
addb
mov
xor
mov
cmp
fdivr
mov
loopne
sub
ss
in
in
inc
in
sti
sub
lret
aas
mov
fadds
movsb
push
das
clc
decl
out
add
pop
jno
and
jg
xorl
rorl
cmp
mov
add
lods
cli
int
pop
inc
mov
fmulp
movsl
fmuls
adcb
add
mov
adc
mov
dec
rclb
aas
cmp
dec
mov
or
das
clc
out
mov
push
mov
pop
adc
mov
fwait
les
hlt
addr16
xor
cs
popf
les
cmp
jg
mov
sahf
mov
fcmovne
aaa
shlb
xor
lea
add
dec
pop
xchg
cwtl
and
push
xor
sbb
dec
or
and
push
fistpll
outsl
je
fisubs
lods
lret
js
loop
inc
icebp
pop
pop
outsb
out
repz
pop
shrl
jg
mov
jo
cmp
xor
xorb
int3
cmp
adcb
into
push
jo
ficompl
cltd
ss
jp
stos
xor
daa
mov
scas
mov
fisubs
test
fistl
mov
call
push
test
decl
pop
pop
shrb
jg
dec
mov
jl
jle
cmpsb
sub
scas
push
dec
dec
dec
scas
sahf
cmpsl
sbb
in
or
rclb
adc
xlat
pop
subl
or
xchg
mov
cmpsl
pop
outsb
mov
lods
scas
jge
xor
insl
push
xor
sbb
and
mov
call
jno
mov
inc
scas
adc
push
pop
call
or
adc
xlat
or
ret
jle
mul
add
rcll
repnz
mov
cmp
in
sbb
dec
mov
fwait
push
sbb
repz
lds
push
out
rolb
and
pop
inc
stos
mov
pop
or
pushaw
sarl
dec
ret
adc
pop
jl
stc
std
sub
sbb
push
xor
or
inc
mov
push
dec
xchg
pop
aad
data16
movsb
arpl
xchg
test
jb
sbb
ret
mov
decl
adc
movsb
mov
fisttps
nop
insb
sub
push
sbb
inc
mov
mov
fstps
cmpsb
mov
push
test
mov
push
fstps
mov
jl
hlt
cmp
mov
xlat
and
scas
cmp
ss
or
jne
sbb
push
inc
lcall
xchg
fldenv
fcomps
xor
cs
jmp
into
neg
pop
mov
stos
les
imul
push
sub
sbb
test
decl
icebp
push
adc
push
jno
loopne
insl
leave
jp
push
pushf
pop
repnz
cmc
mov
imul
add
push
push
mov
jle
test
mov
xchg
or
push
xchg
sbb
mov
nop
call
in
stos
lret
push
stc
hlt
mov
push
stos
dec
mov
rolb
mov
sub
fbld
mov
test
sbb
and
mov
decb
js
cmp
shll
out
mov
jns
or
mov
pusha
push
cli
mov
jle
loop
in
popf
pop
test
icebp
and
and
add
movsb
mov
cmp
cwtl
sub
mov
inc
je
int3
ss
mov
add
popa
mov
mov
push
fldl
daa
push
sub
dec
rorb
cwtl
mov
mov
das
sub
rcll
xor
call
outsb
sti
dec
xor
mov
jbe
add
cli
mov
pop
out
test
or
or
fs
dec
pop
inc
std
jmp
loope
das
test
add
aas
mov
push
cmp
imul
pop
pop
inc
xor
inc
push
stos
cmc
ljmp
das
loopne
call
mov
shlb
mov
nop
movsb
adc
in
cli
pop
xchg
push
mov
mov
fists
test
jle
mov
add
cli
mov
and
pusha
mov
insl
pop
ret
add
and
mov
inc
mov
loopne
push
clc
scas
push
mov
add
outsb
sub
outsl
addr16
mov
mov
pop
xchg
lock
mov
ud0
pop
xor
orb
das
movsb
push
mov
fdiv
dec
lcall
call
daa
mov
stc
adcb
scas
shrb
dec
rcrb
mov
xchg
insl
pushl
or
stos
insb
std
mov
push
ret
push
mov
popf
or
mov
js
es
ds
dec
jl
div
inc
addl
into
mov
insb
push
scas
fmul
mov
push
adc
adc
lret
aaa
cmp
add
add
mov
movb
inc
jb
in
call
dec
insb
jp
push
push
das
xor
inc
add
ret
lods
pop
push
sbb
sbb
test
dec
rol
aad
or
xor
shlb
inc
mov
lods
xchg
lahf
std
mov
jmp
mov
lahf
cld
or
push
into
pusha
stos
pop
hlt
insl
push
outsl
inc
mov
lock
push
xlat
xorb
inc
jle
pop
pop
imul
fbld
mov
mov
movsb
xchg
push
cmp
mov
push
scas
sub
sub
sub
call
and
mov
fcompl
pop
push
sbb
int
mov
into
adc
pop
and
aad
add
inc
repz
or
cwtl
clc
jg
sbb
loope
inc
mov
sbb
stos
test
mov
test
mov
jbe
int
call
loopne
add
repnz
inc
insl
xchg
jb
push
lock
call
rolb
in
fbstp
mov
lcall
or
xchg
dec
loope
icebp
sub
inc
loop
out
or
pop
popa
cwtl
sbb
jmp
ficompl
rorb
les
hlt
xchg
ss
xchg
lods
mov
jg
addr16
stos
loop
scas
mov
fs
daa
jnp
movsb
lock
pop
clc
and
or
sahf
lods
vmovlhps
or
loop
pop
lock
shl
std
les
mov
fimull
jmp
stos
pop
or
or
jecxz
filds
sub
repz
sahf
add
pop
ds
clc
sub
push
xor
fcoms
or
ja
cmp
adc
repnz
push
add
dec
mov
sbb
jo
xchg
jmp
cmpl
or
inc
sbb
std
and
xor
pushf
adc
pop
in
pop
cli
add
ja
sub
xchg
fiaddl
pop
sub
adc
jle
hlt
push
add
imul
cmp
sarl
jbe
add
xor
jae
arpl
mov
inc
xor
fisubs
cli
xchg
push
lods
pop
mov
mov
lret
adc
cli
push
rclb
sub
jmp
push
lahf
jle
push
loope
mov
cmp
into
pop
mov
cmpsb
fwait
xchg
pop
int
pushf
dec
xor
imull
or
data16
cli
sar
call
cmp
inc
add
xchg
int3
push
sbb
mov
shll
pop
sbb
xchg
mov
int
add
sbbl
xor
fwait
shll
lock
sub
pop
mov
lret
sub
stos
fdivrl
rclb
jge
dec
xor
insl
cld
fwait
jle
and
int3
sub
or
inc
add
dec
ljmp
inc
test
hlt
rcr
mov
adc
or
xchg
pop
inc
cmp
popf
sbb
int3
add
dec
fidivs
cmp
mov
sbb
push
add
ret
push
fwait
push
mov
sub
ja
sbb
inc
jg
stos
icebp
cltd
imul
out
inc
xor
cmp
in
mov
dec
inc
inc
inc
je
or
dec
sar
add
rcrb
mov
jmp
dec
insl
cld
outsl
fisubrs
xor
sbb
dec
lcall
ljmp
sub
jo
stos
sub
das
nop
shll
test
push
add
es
sti
subb
clc
inc
pop
cmp
jle
xchg
bound
mov
or
gs
mov
cmpsb
enter
add
cmpsl
in
mov
mov
or
pop
cmp
ljmp
push
filds
pop
outsb
sahf
sbb
notl
cmc
push
mov
mov
mov
loopne
sub
hlt
adc
push
dec
fsubrs
aas
int3
sub
sbb
mov
mov
les
xchg
inc
ret
decl
cmp
test
mov
and
push
divb
ja
ds
lods
jbe
mov
pop
jl
and
fdivr
add
outsl
xchg
mov
add
pop
or
sub
fwait
bound
jne
mov
testb
fisttpl
push
in
jae
mov
dec
mov
popa
movsb
cmp
insb
adc
repnz
out
scas
loope
bound
iret
rcrl
movsb
jle
mov
in
sub
jmp
pop
mov
popf
lds
out
aas
ds
loopne
fldt
mov
pop
cli
aad
repz
push
int
add
call
or
lea
test
icebp
adc
imulb
jmp
xor
dec
cli
cli
test
mov
push
mov
add
sbb
mov
pop
faddp
push
je
mov
mov
cli
std
pushl
mov
push
pop
mov
imul
xor
xchg
mov
loopne
add
ljmp
or
pop
sbb
out
icebp
iret
lret
sbb
and
cmp
inc
pop
or
sbb
cmp
pop
inc
adc
pop
cmp
xchg
add
adc
mov
push
sub
das
popa
adc
add
cld
mov
pop
and
aaa
jp
mov
sarl
add
rolb
jecxz
jecxz
outsl
popa
push
jno
pop
push
int
sbb
in
leave
push
push
push
mov
decl
cli
lods
repnz
andb
out
inc
mov
push
add
faddp
xchg
out
and
push
scas
into
pop
dec
test
inc
cmp
mov
pop
pop
xchg
out
pop
and
push
ljmp
mov
and
inc
popf
cmc
sahf
lcall
shl
test
daa
add
add
sahf
repz
stos
add
test
aaa
les
fdiv
pop
dec
cld
mov
jge
test
adc
test
inc
mov
popf
lock
mov
fidivrl
cmp
pop
push
stc
ret
cmp
in
rorl
cmc
or
lock
mov
pop
aam
dec
lcall
out
mov
stos
ret
pop
loopne
out
jae
roll
mov
xchg
aad
mov
inc
aad
fcomip
push
mov
in
test
aam
push
test
cmp
gs
imul
test
loopne
pop
mov
push
inc
push
dec
jge
inc
je
jmp
sub
mov
ret
push
dec
inc
faddl
js
and
movsl
ja
nop
pop
aam
hlt
ds
mov
sub
pop
fdivr
mov
aaa
add
push
xchg
stos
xchg
cltd
clc
fisubrs
fcmove
sub
pop
repnz
and
loopne
inc
negb
sbb
clc
pop
push
xlat
cltd
nop
enter
lahf
aam
fcomi
pushl
or
add
push
inc
fwait
enter
insb
cmpsb
jg
push
xor
lods
xchg
ss
mov
jmp
or
cmove
pop
inc
cmpsl
mov
repnz
xor
pop
xchg
mov
mov
xchg
inc
loope
cmp
outsb
jb
jns
aas
xor
loopne
decl
neg
lret
cmp
jge
sub
xchg
mov
fdivrs
push
mov
fidivrs
aas
adc
add
lcall
adc
jbe
pop
push
cmp
sub
add
icebp
pop
mov
add
mov
add
js
inc
jbe
xchg
das
clc
addb
cli
clc
es
pop
jbe
andb
std
xlat
sbb
and
add
xchg
jbe
pop
or
lcall
into
fidivs
rcrb
push
push
sti
pop
test
out
jne
cmp
insb
outsl
jae
js
push
sub
dec
jp
add
pop
out
lcall
sar
or
pop
mov
push
push
inc
xchg
lods
pop
pop
or
sbb
dec
sub
shlb
inc
xchg
and
add
jns
enter
lods
jp
sbb
cmp
jp
xor
ss
adc
push
cmpsb
cmpxchg
shrl
mov
xor
pop
je
and
inc
xchg
fisttpll
dec
scas
test
dec
pop
lds
cmc
pop
mov
pop
in
mov
stc
pop
ljmp
adc
or
inc
dec
pushf
or
pop
insb
mov
mov
test
xchg
fwait
cmp
jmp
aad
subb
mov
or
int
fs
inc
sub
dec
lods
sub
pop
push
dec
push
cmc
inc
pop
pushl
shlb
cmpsb
sub
cmpsl
dec
pop
mov
jmp
jb
lods
mov
mov
sahf
pop
sub
pop
pusha
rol
shlb
sbb
sub
pop
xor
imul
out
cmp
adc
sub
movsl
outsb
pop
xchg
cmp
mov
aaa
dec
js
mov
or
inc
sub
icebp
pusha
xor
pop
in
mull
decl
std
sarl
lahf
sbb
mov
or
jo
decb
sub
mov
pop
jmp
add
sarb
dec
xor
dec
or
adc
incl
imul
and
stos
addr16
call
outsl
xchg
add
fcomi
cmp
push
popa
std
fs
test
or
fsubrp
sub
xchg
mov
cld
and
or
incb
pop
in
pop
push
push
and
mulb
xor
lcall
adc
mov
sti
sub
or
pop
das
lods
pushl
clc
lcall
pop
int3
ds
mov
mov
lret
jle
add
outsl
jg
jbe
mov
and
add
cmp
mov
push
xchg
sahf
sarb
call
push
jg
jecxz
das
dec
test
mov
jno
adc
filds
mov
or
jmp
jge
lock
jl
gs
jmp
call
loop
pop
jecxz
push
mov
clc
call
stc
imul
cltd
clc
xor
js
arpl
fwait
or
lcall
imul
clc
or
mov
cli
inc
shr
push
loopne
sub
xchg
dec
inc
pop
adc
sbb
fildll
add
cmc
push
dec
ja
fisubrs
cli
clc
jg
mov
adc
cmp
dec
lock
scas
ljmp
jp
add
decl
push
ret
ret
pushf
popa
add
and
push
test
pop
adc
dec
mov
stc
push
fsts
pop
lods
rol
fs
xchg
push
ljmp
jle
cs
xchg
popa
jne
pop
jo
cmp
test
mov
mov
push
mov
lahf
add
pushf
jns
loopne
faddl
dec
clc
jg
add
inc
sbb
mov
sar
mov
xorb
int
inc
pop
mov
fsub
inc
fldt
fcmovnu
inc
gs
mov
or
adc
lock
int3
push
jnp
arpl
sbb
mov
stc
cmp
mov
xchg
or
test
call
fnop
pop
pop
lcall
sete
push
fstpt
mov
adc
sbb
push
insl
cli
movsl
test
mov
aaa
lods
add
lock
dec
inc
dec
fisubl
pushf
pop
clc
mov
mov
cmp
xchg
cs
xor
pop
fcomps
stos
cmpb
hlt
ljmp
sahf
aam
fwait
das
xor
loop
loope
push
or
je
and
scas
adc
pop
add
lea
clc
das
mov
mov
es
fiaddl
fsubrp
js
lahf
in
sub
pusha
call
sub
notb
push
shlb
aas
sarl
lds
icebp
test
inc
cmp
xor
fs
jb
rorb
push
mov
adc
dec
imul
mov
shl
adc
mov
cmc
testl
pop
test
cmpsl
mov
test
xchg
dec
mov
cld
stos
inc
push
xchg
lock
rcl
adc
ret
mov
xchg
mov
loop
sbb
fidivrs
sbb
adc
pop
repnz
insb
sbb
cmp
pop
lods
cli
sbb
loope
cmp
or
mov
cmpl
sub
bnd
xor
xor
pusha
xlat
fbstp
mov
stos
pop
mov
adc
xchg
mov
sub
sub
inc
and
lret
test
fwait
loope
outsl
mov
inc
or
inc
das
inc
imul
xchg
js
jg
movsb
mov
enter
sub
sar
xor
sub
loopne
fcomip
lret
xor
mov
fisubl
xor
lret
imul
mov
js
ret
push
ds
bound
mov
es
ss
insl
in
enter
jecxz
cld
jno
push
push
pop
daa
scas
repz
cltd
push
push
rcr
sbb
cld
push
imulb
movsb
xlat
xchg
cmp
es
rcr
data16
jg
and
popf
xchg
cli
pop
cli
add
jmp
pop
sub
movsl
fs
aad
loopne
sub
subb
inc
ret
dec
out
fsubrl
lods
inc
xchg
fimull
push
lcall
cmp
daa
xchg
fistpl
jl
sub
idivb
dec
adc
xchg
ds
and
loopne
fnsave
sbb
fs
movsb
sub
inc
jne
jb
imul
into
loop
sti
jg
mov
mov
mov
clc
jb
pop
cld
repnz
mulb
in
hlt
push
xchg
add
sub
lods
dec
push
leave
dec
mov
aaa
gs
push
mov
hlt
xchg
icebp
jmp
inc
orl
aaa
mov
mov
cmp
pop
xchg
adc
pop
sbb
adc
sub
adc
and
cli
pop
lock
ljmp
adc
loopne
mov
add
add
stos
fdivrs
push
pop
jge
lcall
fsts
push
mov
daa
dec
loop
xor
iret
sbb
jge
cltd
jecxz
mov
insl
fistpl
cli
inc
pop
jmp
jo
cmp
add
sbb
shlb
in
pop
or
fnstsw
repnz
mov
popa
shlb
mov
inc
push
out
pop
dec
cld
xchg
movsb
and
jb
aaa
sub
xchg
outsb
movsb
rorb
cwtl
insb
pop
int3
lds
ljmp
jnp
imul
inc
mov
adc
and
add
jbe
pop
mov
popa
jg
imul
fwait
lods
subl
xlat
das
aam
cmp
mov
lret
pusha
xlat
js
mov
insb
arpl
dec
std
xchg
xor
pop
repz
ret
js
fsubr
insb
inc
je
xor
push
adc
sub
scas
inc
jle
jne
xchg
rcrb
dec
or
aam
jmp
clc
dec
les
pop
test
test
pop
adc
stc
xor
dec
mov
inc
aas
popa
pop
bound
add
je
das
sar
mov
mov
xchg
xchg
xchg
or
sbb
jle
dec
insl
xor
clc
ds
leave
cwtl
test
scas
stos
adc
rcrl
mov
sbbl
pop
sub
inc
xchg
mov
repz
push
fstpl
hlt
fcompl
and
mov
xchg
pushf
les
arpl
inc
pop
test
ss
sub
mov
inc
sub
pushl
sbb
jg
jge
roll
add
pop
movhps
inc
cmp
add
xor
in
adc
jp
lock
lahf
add
scas
cmpsb
xchg
sbb
mov
sarb
mov
in
mov
or
inc
and
popf
mov
daa
lret
xchg
add
int3
insb
adc
cld
dec
jge
addb
mov
xorb
cli
jnp
in
insl
sbb
inc
cmp
mov
aam
pop
js
test
jp
xchg
jg
mov
fdivrs
ret
pop
jecxz
adc
pop
incl
lods
and
pop
cwtl
pusha
sbb
movsl
repz
lock
and
push
sbb
mov
cli
adc
inc
mov
int3
mov
je
rcr
andb
pop
cwtl
xor
ds
pop
pop
push
fdivp
leave
jne
adc
cmp
pop
imul
pop
or
mov
ds
mov
pop
hlt
repnz
mov
jecxz
push
lea
inc
std
out
inc
dec
adc
jle
push
pop
scas
jg
fucomp
sub
cmpsb
jle
loopne
xchg
sbb
mov
nop
xlat
call
je
or
fidivrl
mov
fisubrl
and
imul
popf
fidivs
pop
loopne
mov
sti
shrl
jmp
scas
inc
call
dec
jg
popl
xchg
pop
jbe
pop
inc
push
mov
mov
mov
adcl
fisubrs
int
or
iret
dec
lret
loope
or
shr
push
pushf
push
cmp
cld
xor
xchg
rcr
pop
std
gs
mov
xchg
fdivl
sub
mov
call
fsubp
fadds
in
mov
add
cs
cmp
push
decl
pop
sahf
test
add
or
jae
loop
mov
repnz
rcl
push
push
push
in
in
push
std
je
call
adcb
pop
pop
jg
gs
int
mov
mov
imul
int
pop
sub
lods
mov
insb
insb
iret
scas
inc
popl
dec
cmp
int3
inc
fcompl
sti
sbb
or
and
in
into
mov
test
mov
push
sub
xchg
inc
cld
ret
sbb
shrb
push
fcmovnu
repnz
inc
enter
out
mov
movsl
adc
adcb
repnz
imul
mov
js
pusha
cmc
push
insb
lcall
enter
sbb
dec
jb,pn
mov
pop
xchg
shrl
mov
pop
in
mov
imul
add
lahf
and
xchg
adc
int
int3
rorl
xchg
sub
test
mov
mov
stc
jo
xchg
ret
ss
pop
or
ja
jnp
adcl
int3
mov
cmp
test
fdivp
lcall
cli
clc
xchg
mov
mov
gs
fucomi
leave
push
les
test
pop
sbb
inc
mov
push
clc
inc
pop
mov
or
jo
test
adcb
mov
lock
mov
fiaddl
sub
testl
xor
cmpsb
outsl
or
mov
push
xchg
js
mov
adc
int3
fisttps
dec
xorb
push
cli
sub
outsl
lret
cli
sbb
cmpsl
sbb
aam
jae
cmp
cld
jg
sub
cmp
mov
mov
sti
rcll
mov
ljmp
pop
mov
inc
sbb
jnp
loopne
out
inc
call
and
xchg
and
cli
sbb
sbb
or
sahf
sbb
and
outsb
leave
sar
or
es
pop
fcmovne
and
add
aam
mov
xor
fidivl
add
fwait
mov
fidivs
clc
push
cld
fwait
aam
mov
add
push
inc
std
sarl
ljmp
outsb
cltd
dec
xor
xchg
cmc
loope
xor
lcall
mov
pop
in
lods
scas
decl
rolb
ds
cmc
cmc
adc
mov
push
xor
xchg
mov
ja
mov
and
mov
xor
or
js
aas
push
adc
xor
scas
mov
and
cmc
data16
mov
add
pop
hlt
sbb
sub
mov
popa
cmp
in
out
mov
jg
in
pop
xchg
fdivrl
dec
pushf
fimull
nop
dec
lock
jmp
jb
decl
dec
jbe
daa
xor
mov
test
jmp
mull
xchg
add
xchg
inc
pop
sub
push
sbb
pop
js
mov
xchg
lock
or
add
adc
in
das
ljmp
in
in
push
mov
insb
stc
test
sub
into
add
insl
lods
test
enter
adc
xor
xor
jne
pop
sub
adc
fisubs
xor
cld
inc
sub
xlat
cli
loop
push
push
pushf
ljmp
add
enter
into
cmpb
ja
push
sbb
decl
scas
out
push
pop
aaa
dec
lods
cs
decl
sbb
pop
rclb
push
xor
sbb
sbb
jecxz
aas
xor
loop
push
inc
ds
ljmp
ud1
sub
stc
lock
push
sar
mov
movsl
cmp
insb
fildll
push
in
adc
rcrl
lahf
shll
mov
adc
sbb
mov
cmpsl
or
les
inc
mov
jle
mov
inc
fdivl
xchg
dec
mov
lods
ljmp
pop
fstpt
mov
sbb
in
mov
cltd
jl
xor
dec
dec
mov
mov
outsb
out
mov
jns
sbb
cltd
incl
test
test
fs
pop
jns
lcall
les
and
add
shrl
dec
mov
jg
fildll
adc
push
cmpb
sbb
mov
pushl
iret
popl
sahf
push
mov
jmp
add
sbb
leave
jb
pop
cmp
lock
test
mov
jne
push
or
and
or
cmpsb
outsb
jp
sub
adc
orb
adc
lock
xor
push
roll
sbb
pop
mov
out
clc
cmpsl
or
mov
xor
jmp
in
dec
ljmp
stos
sub
rol
mov
decl
adc
nop
inc
cs
sti
sarl
xor
ret
mov
sbb
cwtl
jbe
and
mov
mov
mov
mov
mov
jbe
bound
jg
rcrb
pop
insl
mov
jb
outsb
cmp
or
cmpsb
push
lock
leave
mov
xchg
in
dec
pop
dec
fidivrl
andb
sub
imul
push
or
jmp
dec
int3
mov
sahf
arpl
pop
mov
bound
jae
decb
mov
cld
scas
pop
mov
inc
fsubl
or
sbb
jge
or
mov
push
pop
mov
insl
sbb
jne
xor
push
popa
push
push
sahf
add
fcmovb
cmp
ds
mov
not
divb
je
adc
mov
aaa
les
js
pop
jmp
repnz
aad
call
xchg
cmp
cwtl
sbb
pop
pop
pop
js
mov
cmp
aaa
sti
inc
insb
arpl
sub
xchg
pop
mov
scas
test
and
mov
inc
decl
stos
cmpsl
dec
sub
inc
jb
mov
loop
or
cmp
add
pop
add
aam
mov
pop
dec
dec
lcall
pop
xor
mov
rclb
aas
push
cs
bound
lds
outsb
and
pop
nop
dec
push
push
arpl
hlt
aad
pop
fcmovnu
sahf
mov
xor
negb
enter
pop
adc
fcompl
mov
push
mov
mov
bound
push
outsb
jge
pushl
jle
pop
and
adc
sbb
add
call
mov
ja
rorl
cld
ret
movsb
push
adc
hlt
sbb
xchg
enter
xchg
lods
inc
imul
scas
push
lcall
adc
or
mov
and
gs
scas
repnz
inc
rorb
mov
pop
cmp
mov
cmp
mov
div
call
pop
push
aad
jne
mov
aad
jge
cltd
mov
inc
pop
repz
rcll
jne
xor
xlat
dec
push
or
push
pop
icebp
fildll
pop
fprem1
xchg
int
mov
add
mov
dec
pop
icebp
cli
ljmpw
fldenv
aas
rolb
pop
cmp
in
sub
out
and
les
cwtl
popl
cmp
mov
aam
ror
mov
cmp
xchg
cli
sbb
or
mov
mov
push
movsl
dec
jo
push
push
cmp
test
mov
and
mov
cs
mov
mov
sub
ret
push
incb
mov
orl
lods
or
mov
jbe
xchg
adc
jecxz
mov
pop
pop
jmp
js
int
or
imul
cmpsl
pop
pop
and
push
and
ljmp
mov
adc
or
mov
inc
xor
incl
loope
stos
shll
aaa
popa
aaa
in
xchg
push
xchg
incl
in
aas
test
scas
lret
dec
je
push
adc
jl
in
sbb
vxorps
push
inc
or
mov
fs
sbb
enter
xor
xor
hlt
push
sbb
into
pop
and
bound
xchg
incb
nop
rolb
das
clc
mov
xor
inc
mov
pop
adc
jl
lea
mov
mov
inc
and
clc
mov
dec
sbb
loop
pop
jbe
cli
mov
pop
data16
out
push
dec
push
das
mov
das
cli
sbb
jns
xchg
xchg
xchg
cmp
sbb
pop
pushf
sbb
fidivl
hlt
cmp
lea
mov
cmp
inc
loopne
jl
stos
pop
mov
je
inc
or
hlt
rol
fsin
sub
push
lock
decl
cmpb
lret
imul
fldt
xor
outsl
or
scas
les
jno
push
aas
inc
jns
xor
jnp
jmp
ljmp
pushf
es
notb
std
jg
ljmp
jg
repz
adc
push
data16
mov
pop
pop
jo
cwtl
add
mov
repnz
outsl
aam
xchg
ds
push
mov
push
je
out
or
lds
fsubp
ss
pop
mov
pusha
mov
push
inc
mov
outsb
scas
int
jl
or
fistl
int3
mov
pop
sbb
mov
xor
push
aam
hlt
mov
pop
or
push
or
mov
imul
mov
xchg
insb
jge
test
fisubl
cmp
fildll
ret
mov
lret
cmc
add
test
insb
xorb
daa
mov
outsb
cmp
inc
int3
icebp
push
jmp
and
movsl
ja
pushl
xchg
push
cli
cs
stos
and
pop
daa
inc
xchg
aaa
std
pop
add
push
pop
cmp
lahf
mov
pop
mov
fdivl
pop
mov
push
pop
clc
mov
mov
fwait
cmp
pop
std
pop
jp
mov
in
xor
pop
idivb
and
movsb
mov
bound
fdivrs
pop
mov
push
pop
or
mov
pop
mov
mov
adc
pop
lock
xchg
cwtl
lock
pop
push
lods
pop
mov
fisubs
add
lret
pop
clc
or
dec
cmpsl
ds
lock
sbb
lock
lds
jo
push
mov
inc
loop
push
stos
adc
retw
sti
dec
mov
mov
and
adc
lea
add
and
mov
jnp
cmp
mov
cmp
outsb
es
jne
fsubrp
mov
test
scas
add
push
aam
mul
cld
or
loope
push
dec
or
jmp
test
cld
push
daa
rcrb
cmp
xor
into
inc
ljmp
sahf
xorb
lock
or
ficompl
add
inc
js
mov
cmp
clc
das
push
mov
into
mov
add
shlb
mov
xchg
pop
cmp
cmp
pushf
mov
jle
insl
inc
ss
push
push
ljmp
jg
mov
lods
xchg
stos
in
jbe
pop
mov
adc
lret
orb
mov
loop
adc
mov
jns
repnz
das
in
add
fildll
xchg
popf
mov
aad
jle
sbb
inc
add
imul
jl
inc
mov
jp
int3
pop
test
loopne
je
mov
add
push
add
jne
aad
mov
mov
jbe
int3
out
loope
adc
std
test
jg
and
in
mov
sub
stos
scas
push
mov
jg
icebp
jno
pop
xchg
imul
leave
or
stc
mov
out
or
mov
jg
outsb
addb
pop
in
into
icebp
inc
and
mov
lods
pop
mov
and
push
cs
das
cwtl
loopne
sar
les
pop
sub
mov
aaa
data16
mov
inc
pop
mov
faddl
push
pop
pop
jge
push
mov
jge
nop
ljmp
das
cli
inc
cli
fnsetpm(287
lret
das
repnz
sub
push
xchg
pop
fisttpl
fdivl
mov
popa
jl
lcall
add
push
repz
int3
dec
xchg
cmpsl
pop
add
cmp
xchg
mov
pop
and
jbe
and
lcall
mov
out
out
hlt
push
imul
mov
push
repnz
pop
mov
add
stos
fwait
dec
aas
aam
adc
xchg
sbb
fdivr
adc
mov
cmp
cmpsb
nop
mov
dec
sbb
xor
jo
pop
xor
rcrb
in
ss
loop
clc
sub
push
icebp
out
cmc
idivl
stos
scas
movsb
jg
call
xlat
pop
mov
sbb
or
pusha
jae
push
mov
pop
sub
das
add
pop
and
or
adc
js
mov
or
mov
negl
in
out
lods
int
sti
add
adc
cmp
in
ja
pop
and
aaa
loop
neg
mov
push
cmp
pop
pop
lahf
nop
subl
jl
add
push
and
mov
cmp
mov
mov
mov
in
xchg
xchg
mov
push
cmp
aad
lds
into
orb
add
dec
addr16
sub
addb
bound
sub
sahf
pop
fst
xor
push
jo
pop
sarb
sub
in
movsb
push
cmp
push
push
fidivs
adc
sbb
lret
pusha
into
sbb
fcmovb
mov
dec
push
stos
inc
mov
xchg
pop
lock
push
aas
inc
mov
add
push
fsubrp
lret
push
pop
in
mov
repz
mov
ret
pop
out
sahf
push
fs
xchg
xchg
dec
pop
bound
xchg
push
or
mov
pop
jmp
clc
mov
or
xchg
fwait
lahf
int3
pop
hlt
mov
shll
hlt
clc
cmpsb
mov
lcall
push
cmpb
clc
xchg
cmp
shrb
cmpsb
push
mov
call
shl
adc
rcr
ds
ljmp
jmp
dec
xchg
add
jbe
movsb
jb
push
pop
push
pushf
ret
or
push
dec
sub
pushl
pop
dec
cs
sub
jb
mov
pop
lret
adcb
mov
mov
add
repnz
cli
lock
lahf
jl
mov
outsb
or
lret
ror
loope
bound
mov
pusha
inc
add
xor
loop
mov
mov
fdivrl
xchg
cmp
ss
incl
insb
fadds
aam
sbb
and
sti
pop
pop
mov
aad
jmp
sti
pop
pop
pop
adc
add
data16
lods
out
sbb
incl
pushl
and
je
fisubrl
fs
lea
jne
push
jne
pushl
mov
insb
cmpsb
inc
jb
fisubl
pop
fs
pop
mov
pop
jge
jl
xorl
cmp
push
xor
adc
ljmp
and
add
and
outsl
incl
dec
loop
pop
rorb
or
add
push
cmp
and
add
mov
mov
dec
enter
cmp
lods
mov
decl
test
stc
ret
inc
test
movsl
insb
fldenv
std
and
mov
xchg
cmpsb
push
scas
cld
xchg
dec
cld
mov
xchg
mov
dec
test
lock
pop
push
add
imul
inc
mov
dec
dec
insb
mov
mov
enter
in
pop
jl
add
in
in
loopne
movsb
fwait
scas
adc
and
mov
mov
add
ds
adc
xchg
in
insl
jnp
adc
imul
mov
push
dec
mov
jle
cmc
das
dec
xchg
test
xor
clc
sahf
jg
jno
lods
inc
mov
gs
mov
xchg
fcoml
add
ja
bound
sbb
cmpsb
pop
sbb
mov
pop
push
ficoml
insl
jg
cmp
fistpll
mov
jo
pop
cld
aaa
pop
xchg
mov
xor
dec
sbb
roll
mov
insb
andb
add
cmp
mov
cmpsl
and
fstps
mov
pop
and
mov
jno
sbb
jle
jle
ljmp
aas
add
lret
pop
mov
or
mov
fildll
cwtl
das
push
loopne
pusha
add
insb
scas
cli
push
pop
lods
add
cmp
je
add
clc
add
or
push
and
fmull
cli
das
test
cwtl
pop
icebp
cmpsl
push
lock
loop
ljmp
mov
push
jp
ja
pusha
lcall
xchg
xor
push
inc
add
cmc
push
lods
and
and
in
sub
jno
mov
push
and
lcall
sub
mov
and
sahf
and
mov
lods
out
lcall
mov
mov
mov
and
fisubl
aad
xor
sbb
mov
and
cmc
push
push
adc
jg
mov
sbb
movsb
outsl
and
cmc
push
inc
sahf
sarb
pop
or
jle
pop
nop
add
shr
mov
pop
cld
sub
jnp
pop
mov
mov
leave
jl
dec
adc
les
es
sti
sarb
fwait
mov
sbb
sbb
pop
pop
or
mov
xchg
insb
pop
pop
pusha
fisttpl
fiaddl
ror
std
push
mov
pop
stc
jl
inc
add
pop
push
in
loopne
in
in
sub
add
cmp
into
pop
mov
jg
pusha
test
pop
mov
cmpb
mov
or
mov
or
jo
inc
xlat
jae
fadds
scas
jo
out
jl
mov
xchg
lock
pop
dec
test
inc
ret
roll
lods
xchg
cld
pop
dec
mov
filds
or
jo
ror
or
fidivrs
mov
jb
in
cld
sub
aad
sahf
mov
fldt
lcall
cs
push
cmp
pop
stos
cs
lcall
aas
test
adc
pop
int3
ss
aam
ret
lds
rcl
fwait
call
out
mov
jg
dec
je
push
cmpsl
xchg
scas
in
mov
sar
pop
clc
mov
jmp
pop
outsb
cmpsb
ret
dec
jecxz
clc
mov
adc
jo
sbb
ja
sub
arpl
sub
jnp
mov
mov
pushf
sub
jl
sbb
sbb
mov
aad
cld
ljmp
push
push
sub
repz
adc
mov
pop
mov
cld
pop
and
gs
cmpsb
aas
lcall
mov
inc
xor
and
adc
fdiv
push
jg
cld
scas
fisubl
jle
cltd
xor
outsb
shll
adc
in
inc
fdivs
mov
jbe
cltd
rorl
mov
fstpt
mov
and
mov
outsl
jg
aas
lock
mov
test
lock
dec
nop
jbe
mov
lret
xchg
jecxz
push
add
icebp
shr
scas
test
pop
dec
or
bound
movsb
popl
nop
adc
inc
loopne,pn
cwtl
adc
mov
and
enter
movsb
sbb
hlt
loopew
jg
mov
mov
pop
fdivrp
divb
xchg
jns
jne
push
ss
dec
push
push
add
adc
inc
and
inc
or
sbb
in
ret
push
sbb
sub
xor
xchg
inc
dec
inc
mov
outsl
cli
push
cld
jl
xorl
in
lcall
pop
ffree
mov
sub
or
mov
sbb
pop
aaa
enter
or
stos
pop
push
pusha
push
dec
and
add
xor
out
ljmp
es
mov
std
dec
jbe
cmp
mov
push
lods
adc
adcl
shr
stos
mov
hlt
pop
adc
pop
popf
aad
cltd
dec
mov
nop
sbb
cli
sbb
mulb
ret
aas
xchg
lcall
aaa
add
pop
outsl
clc
jg
and
mov
push
lret
cltd
mov
outsb
jbe
xor
cmc
ja
xor
mov
scas
xlat
iret
jo
bound
sub
pop
jge
popf
xchg
test
add
push
add
sarl
sbb
iret
push
scas
xchg
aam
fsubs
inc
fpatan
fnstsw
xchg
push
test
lahf
mov
outsb
inc
fsubrp
ficoml
loope
cli
mov
rcrb
mov
sub
jg
pop
mov
xchg
or
data16
adc
and
pop
mov
test
pop
jg
mov
inc
and
pushf
xor
insb
xchg
push
je
push
test
aaa
std
movsb
repz
outsl
arpl
and
lahf
mov
mov
mov
xchg
fisubrl
addl
js
xor
dec
loopne
xchg
test
ds
dec
pop
fucomip
aam
pop
xchg
fisubl
pop
pop
cmpsb
lret
outsb
aas
xchg
and
pop
icebp
pop
cmp
add
sub
lods
push
pushl
lock
rorl
fstpt
pop
lcall
sbb
sub
outsl
jp
or
and
rcrb
ret
or
popa
lock
xlat
sbb
cmp
adc
sahf
cwtl
sbb
add
nop
jnp
mov
dec
insl
or
dec
cltd
adc
xor
or
xchg
xchg
inc
lods
adc
push
incl
mov
push
xor
push
fwait
rorl
mov
cli
fs
xchg
fstpl
and
rorb
xchg
sub
outsl
shrb
sbb
mov
mov
out
les
clc
jg
xor
fwait
sarl
fldl
pop
dec
xchg
inc
xchg
pop
aas
jmp
jle
loopne
and
sbb
decl
inc
cwtl
dec
inc
bound
out
aad
sub
pop
mov
jp
clc
iret
adc
pop
pop
or
dec
es
pop
ret
jb
mov
aaa
test
mov
loope
jl
insb
push
lcall
lds
inc
push
mov
pop
in
into
xchg
call
outsl
jbe
pusha
je
and
pushl
pop
out
inc
push
mov
add
xor
mov
adc
or
sti
xchg
int
decl
ljmp
mov
roll
and
lock
jecxz
lret
lods
mov
iret
repnz
scas
outsl
outsb
je
std
decl
movsl
aas
jle
push
and
lret
mov
loopne
cmp
roll
popf
shlb
stos
aad
mov
out
lret
inc
daa
insl
out
adc
fidivrs
icebp
fwait
cld
xchg
movsl
loop
and
out
fwait
repz
es
pop
scas
lret
pusha
movsb
xor
push
jmp
pop
xchg
ljmp
mov
pop
push
mov
xchg
cmc
out
dec
or
mov
mov
dec
bound
adc
clc
mov
fcmovb
outsl
clc
and
bound
mov
cld
dec
inc
mov
cld
inc
fbstp
cltd
cmc
add
mov
ret
fists
mov
jnp
jno
add
into
jns
dec
mov
mov
mov
jne
push
lret
sbb
iret
lods
or
cmp
clc
add
cmc
mov
push
cmpl
ljmp
cmp
adc
lcall
insb
add
push
push
or
sbb
xlat
stos
jno
mov
push
add
hlt
pusha
xchg
fs
idivb
fisubrs
push
scas
adc
push
ja
add
inc
das
outsl
mov
lcall
loopne
mov
mov
and
test
mov
pop
or
enter
inc
jb
adc
ret
add
cld
lock
clc
dec
xor
push
mov
dec
aaa
imul
out
nop
xor
pop
imul
stos
sub
test
outsb
xorl
stos
ret
sbb
lret
movsb
or
push
xchg
mov
and
negb
pop
mov
mov
pushf
or
nop
int
push
inc
int3
imul
sub
or
lret
cli
xchg
add
pop
lcall
xor
lods
and
jp
pop
push
cmpb
sub
out
int
les
les
jo
sub
jp
js
call
sahf
push
test
pushf
jmp
xchg
sti
clc
sbb
pop
pop
stos
or
push
xor
aas
dec
arpl
decl
jne
mov
cwtl
mov
sbb
push
jl
add
jmp
push
rep
shlb
mov
sbb
fldcw
cli
fld
pop
outsl
sahf
lret
insl
sbb
ljmp
shl
cltd
jb
imul
mov
mov
or
xchg
decl
adc
cld
mov
imul
inc
and
loop
js
ret
into
pop
mov
icebp
xor
call
or
mov
adc
pop
dec
stos
lret
ret
inc
mov
mov
adc
add
cmpb
shrl
cbtw
mov
xor
imul
dec
jl
lds
inc
rcrl
xchg
push
repnz
popa
mov
push
in
in
icebp
add
lods
out
dec
pop
or
xlat
and
add
fsin
mov
fwait
pop
or
dec
and
or
pop
lea
shrb
repz
fsubs
inc
dec
sahf
lea
push
gs
cs
aad
movd
sbb
inc
mov
pushl
mov
xchg
std
adc
sub
loope
ret
divb
sbb
cmp
mov
mov
pop
test
lcall
lret
inc
pushl
jnp
cwtl
xchg
mov
iret
cs
push
and
shll
js
mov
in
jecxz
outsb
add
ret
adc
push
inc
adc
mov
repz
ljmp
cmpsb
sbb
inc
fisttpll
inc
call
sub
or
ljmp
cld
mov
pushl
and
xor
jo
push
test
pop
mov
fildll
pop
adc
loope
cli
pushf
jne
sbb
iret
je
clc
mov
xchg
adc
test
push
jl
popf
mov
scas
scas
mov
mov
test
aas
mov
lret
ss
fs
lock
inc
bound
pop
pushf
movsl
sub
cmp
jne
mov
outsl
fcmovu
icebp
dec
mov
jle
inc
cmp
mov
lds
mov
pop
fnsave
cli
pop
adc
or
mov
mov
add
in
call
dec
or
fcmovnb
adc
mov
push
pop
pop
cld
das
shlb
sarl
pop
dec
cmp
out
test
in
aas
movntps
out
dec
mov
shrb
shlb
clc
fists
pop
pop
dec
pop
or
pushf
xchg
imul
mov
dec
std
iret
pop
outsb
mov
push
fstl
pop
lea
aad
and
xor
inc
sbb
adc
call
std
fsubrl
dec
dec
push
mov
pop
push
cmp
das
ljmp
xor
rol
fnsave
das
xor
mov
mov
pop
cmp
sti
dec
push
stos
add
xchg
je
inc
cmp
and
loopne
xchg
mov
jl
jbe
sub
mov
clc
jne
fucomp
negb
ljmp
xchg
push
inc
ss
mov
adc
pop
inc
inc
out
sub
add
call
sbb
jmp
pop
mov
lods
loopne
push
add
aad
es
push
sbb
incl
mov
lock
sahf
push
pop
rorb
sub
sbb
lret
push
mov
pop
rorb
push
cmp
xchg
cmp
lock
in
pop
clc
data16
lods
jp
insl
fsubr
or
mov
push
dec
call
aaa
incb
or
sub
pusha
xor
aaa
push
clc
lods
test
or
xor
test
cld
pop
sub
cmp
fisttpl
mov
push
jg
pop
iret
cltd
mov
mov
fdivp
cmp
clc
sbbb
mov
push
mov
add
decb
mov
pop
test
mov
movsl
cmp
adc
or
sbb
icebp
mov
fadd
and
imul
jl
pop
xorb
jno
or
loope
adc
pop
inc
hlt
xor
sbb
or
clc
ljmp
test
add
pop
pusha
adc
add
std
ja
xchg
shlb
pusha
sbb
pop
mov
and
dec
mov
scas
mov
pop
ja
or
sbb
cmpsb
and
movsl
xchg
xchg
mov
dec
dec
sahf
adc
loop
add
xor
fcoml
fildl
test
es
add
push
pop
xchg
into
pop
or
fsubrl
push
pushf
imul
and
jmp
sub
neg
push
in
je
push
lea
repz
push
fdiv
mov
and
psubsw
jo
test
sbb
push
in
out
jne
scas
push
mov
ret
jl
je
testl
add
mov
loopne
fs
out
ret
mov
push
and
pushl
in
mov
mov
mov
pop
es
cmpsl
test
sub
mov
out
and
out
mov
add
add
cmpsl
outsl
and
add
imul
faddl
inc
loop
sbb
ljmp
xchg
mov
in
mov
cli
in
aam
push
test
xchg
stos
mov
cmpsb
inc
shll
fcomip
sub
fnsave
into
adc
mov
sbb
pusha
in
adc
xchg
pop
mov
fldt
dec
sbb
xchg
xchg
out
inc
sub
mov
idivb
mov
mov
das
pop
lret
mov
repnz
shl
add
and
jno
test
int3
add
lods
lahf
fcmovnu
or
mov
fcomps
dec
fidivs
push
mov
mov
pusha
pop
cmp
scas
test
sub
pop
and
cmp
xchg
mov
ds
add
subl
mov
clc
sub
pop
jno
sbb
fmull
repnz
mov
incl
rolb
icebp
inc
add
dec
pop
xchg
push
pop
inc
mov
or
iret
fstpt
inc
shrb
jbe,pt
decl
outsb
rclb
out
cli
aaa
mov
and
shrb
js
aad
mov
nop
mov
lcall
jmp
insl
and
fcmovbe
dec
push
mov
mov
push
es
ljmp
pop
pop
pushf
sbb
rcrl
loopne
adc
in
aas
dec
decl
jecxz
rcl
and
jg
inc
push
jmp
pop
pop
subb
repz
lds
xchg
icebp
pop
mov
inc
pushf
dec
int
pop
jo
mov
ret
lods
push
movsb
mov
sahf
int3
insb
pop
jns
push
fstpt
mov
testb
test
cli
pushf
movsb
in
sbbl
lcall
mov
int3
xor
jo
das
repnz
mov
int
push
out
call
mov
mov
or
int
sub
decl
and
adc
xchg
jge
pop
sbb
jecxz
in
call
test
sbb
mov
scas
cmpb
jmp
hlt
inc
cs
imul
cmp
xchg
mov
and
sub
xorb
push
cmc
mov
jge
aad
push
or
adc
loope
shlb
in
pop
mov
data16
sub
gs
or
mov
leave
xchg
mov
add
sar
fildl
push
dec
xlat
pop
cld
scas
cmp
and
in
in
fdivs
add
mov
add
loop
ret
clc
in
add
jl
leave
into
incl
mov
mov
js
mov
lahf
or
lret
loop
rcrb
scas
mov
sub
xchg
and
inc
adc
push
fimull
arpl
das
and
sub
adc
add
push
or
addr16
sar
cli
pop
fwait
loopne
insl
xor
sbb
sbb
loop
sar
call
mov
and
cltd
stos
xchg
in
xor
call
ljmp
fbld
loopne
cwtl
dec
mov
and
push
cltd
mov
cli
and
jle
jle
stc
cwtl
and
adc
dec
lcall
aad
pop
push
jl
mov
iret
sbb
mov
outsl
shrb
inc
pop
xor
add
mov
mov
sub
mov
in
jl
mov
rcrb
insl
aam
stos
fadds
cmp
fldenv
push
xchg
pop
call
stos
test
lret
popa
and
and
and
pop
mov
aas
push
ror
fdivp
sahf
cmp
inc
inc
shl
stos
aas
sbb
lods
pop
fisubs
adc
sub
pop
lock
aad
cmpsl
push
mov
or
push
pop
push
push
pushf
arpl
ljmp
rclb
out
inc
loopne
mov
add
adc
adc
sub
pop
aaa
xchg
xchg
in
push
cld
pop
pushl
mov
sub
push
lea
arpl
add
stos
and
out
dec
lcall
cmp
movsl
or
hlt
nop
add
add
out
jecxz
pop
xchg
je
or
mov
repz
cmpsb
mov
mov
je
xchg
jns
loopne
ret
adc
pushf
mov
pop
lret
jecxz
fbld
addl
mov
cmp
and
jp
icebp
pop
adcb
or
ds
je
inc
loopne
fstl
aas
add
dec
sbb
xor
push
sbb
pop
test
loope
push
jg
daa
mov
iret
dec
ffree
in
pop
inc
loop
inc
mov
push
cmp
adc
loopne
dec
pop
jmp
in
mov
out
mov
dec
mov
test
pop
test
add
pop
in
imull
adc
fwait
out
cmp
into
sbb
add
out
add
idivb
lock
ret
movsl
mov
lock
cwtl
and
cmpsb
inc
call
test
shlb
xor
pop
rorb
incl
out
ljmp
add
repz
lcall
xchg
sbb
scas
imulb
popa
repnz
ret
xlat
sub
mov
inc
inc
xor
or
das
mov
add
fcmovu
hlt
ja
sbb
fmuls
or
cltd
into
inc
and
js
lods
jle
dec
pop
hlt
fwait
lahf
pop
adc
lock
mov
jmp
mov
fldt
push
mov
hlt
out
addb
int
pop
mov
cmpsb
or
push
jge
cli
mov
je
in
test
push
jg
imull
jo
lock
aas
js
cmp
das
cmpsb
outsb
jmp
xorl
gs
add
rolb
adcb
mov
cmpsl
mov
cli
decl
enter
pop
in
shl
icebp
jnp
add
xlat
jmp
in
lcall
sbbl
mov
xor
or
arpl
dec
shrb
sti
push
mov
sti
shr
sub
add
pusha
pop
sub
data16
sub
cmpsl
stc
and
int
fsub
jae
adc
gs
jg
and
mov
in
or
cmp
insl
in
sub
scas
lret
push
push
lds
push
xchg
clc
jge
test
adc
push
shrb
push
inc
out
inc
push
or
sub
mov
out
mov
inc
data16
pusha
xor
lds
fistps
sbb
loope
jb
lret
js
popl
int3
mov
sbb
pop
dec
lret
lock
sbb
outsl
leave
push
jmp
dec
in
push
ljmp
mov
pop
loope
push
push
and
sbb
and
adc
push
and
cltd
sbb
decl
div
pop
adc
mov
popa
inc
xchg
push
or
test
and
lahf
popa
fnstsw
scas
mov
and
testb
ja
or
ds
jbe
arpl
call
loopne
mov
pop
and
pop
xchg
xchg
sub
test
ret
xor
decb
stos
xor
insb
test
pop
pusha
xchg
or
pushl
dec
rolb
mov
incl
push
fistpl
dec
add
cs
push
xor
in
cli
cmpb
clc
dec
insb
jbe
out
decl
sub
adc
cmpsl
dec
leave
pop
out
movsb
shlb
and
mov
or
xchg
adc
hlt
mov
popf
adc
add
pop
cmp
xor
inc
cmc
sti
out
call
cmp
mov
jns
push
dec
int3
or
jne
pop
and
mov
ds
es
ljmp
or
xchg
jmp
testl
ja
mov
jo
jmp
xor
out
ljmp
pop
add
cld
jge
filds
xchg
roll
icebp
pop
icebp
daa
mov
jl
add
outsb
or
mov
aas
aas
pop
push
dec
loope
pop
pop
je
test
mov
mov
std
sarb
fists
mov
repz
out
xchg
insb
fcomi
das
add
in
pop
clc
daa
and
aaa
inc
data16
std
mov
les
mov
aad
or
popf
out
and
jg
ror
and
test
sbb
test
jle
and
call
mov
shrl
clc
mov
mov
aam
mov
lcall
xchg
jp
addr16
jg
xor
aaa
cld
fistps
insl
pop
or
je
js
mulb
cld
ljmp
cmp
pop
pop
cmp
add
xor
jno
pop
outsl
insb
rorb
clc
ljmp
and
inc
mov
call
std
adc
test
fadds
imul
int
jne
test
ds
inc
adc
pop
xor
pop
popf
or
repz
adc
mov
aad
pop
pop
pop
push
mov
mov
xchg
sbb
or
xor
fwait
popf
je
out
decl
pusha
sti
inc
sub
cmpsl
mov
mov
call
mov
jecxz
fcoms
fisubs
dec
pop
sub
sub
dec
sub
mov
arpl
jl
or
push
pop
dec
aaa
adc
add
add
cmp
mov
subps
shlb
push
out
es
pop
sahf
test
adcb
leave
pop
mov
lret
adc
pop
orb
das
es
mov
inc
push
je
cmp
arpl
jb
sbb
fcmovnb
rcrb
loop
and
stos
enter
xor
dec
inc
sbbl
pop
add
rclb
shrb
ljmp
cmp
mov
clc
and
int
jns
es
mov
test
lds
jo
cld
pop
js
and
mov
call
loope
ret
in
adc
shrl
jle
fisubrs
or
scas
testb
mov
pop
loopne
ljmp
mov
into
cwtl
push
pop
add
dec
movsb
iret
inc
aad
ret
shr
push
dec
pusha
inc
sub
lahf
push
in
out
pop
bound
jg
add
clc
jl
fimull
sub
pop
mov
loop
adcl
ficoml
aaa
outsb
ds
jnp
inc
and
pop
xor
sti
inc
push
cmpsl
hlt
stos
js
pop
ret
sbb
sti
mov
pusha
fwait
aad
stos
insb
push
cmpsb
xchg
lods
test
mov
or
and
lret
scas
mov
jle
sar
insb
lahf
adc
pop
mov
mov
das
sbbb
aam
fbld
sub
push
adc
je
imulb
cld
inc
mov
and
inc
outsb
outsb
pop
call
push
xlat
pop
push
test
cmp
std
pop
pusha
sub
shl
int
cmpsl
clc
inc
fmull
lcall
outsb
sbb
sub
or
pop
xor
ret
adc
sbb
push
iret
pop
sahf
out
in
inc
mov
mov
test
mov
fs
inc
adc
adcb
cmpb
jns
jbe
and
add
orps
mov
and
loope
adc
mov
popa
jg
inc
pop
push
sub
mov
icebp
mov
enter
cli
push
mov
loop
sbb
push
inc
mov
insl
shrb
xor
mov
pop
xchg
sub
mov
rep
cmp
or
pop
flds
xlat
decl
fnstsw
scas
cmpl
icebp
lcall
test
jg
cmp
adc
sahf
mov
and
incl
xchg
sbb
aas
inc
jmp
cltd
add
mov
ja
test
scas
fadds
mov
pop
dec
dec
cld
jno
aad
scas
pop
insb
inc
loope
subb
dec
push
out
lret
cltd
ret
pop
inc
in
js
sbb
cmpsb
push
push
fs
ss
insb
push
xchg
loope
jne
jle
cmp
incl
in
sub
dec
aaa
scas
pop
inc
push
or
push
jmp
cmp
ja
add
cmp
nop
lods
lock
pop
shrb
mov
inc
adcb
push
fstpl
inc
imul
pop
fldl
imul
sbb
dec
fistpll
jno
int
sbb
dec
xchg
pop
mov
sub
call
stos
clc
sarl
ret
cmp
rorl
loopne
int
es
inc
jmp
push
cmp
out
enter
sbb
scas
call
inc
jbe
xchg
scas
aas
pop
jbe
adcb
fisttpl
iret
test
fmuls
icebp
ss
les
mov
inc
or
jno
adc
movsb
cmp
leave
xor
mov
decl
or
jecxz
push
and
mov
pop
stos
aas
int
jmp
outsb
xorb
pop
or
hlt
cli
roll
sub
pushf
neg
cwtl
add
repnz
xlat
call
out
cli
btc
mov
ds
cmp
push
sub
ss
ficompl
roll
cld
pop
or
not
push
in
add
push
divl
dec
pop
cmpsl
dec
movsb
ljmp
int
mov
or
push
lods
and
lcall
mov
mov
inc
mov
xchg
inc
mov
pop
lods
out
mov
and
lods
inc
popf
iret
flds
in
rorb
movsb
iret
mov
jg
fwait
jmp
pop
repnz
cmp
pop
xlat
xor
adcb
testb
les
pop
inc
sub
outsl
cli
stos
push
jl
arpl
mov
fistps
icebp
mov
bound
adc
xor
mov
bound
lcall
adc
push
and
push
inc
pop
push
pop
repnz
and
sbb
dec
jno
mov
and
outsb
inc
subb
bound
imul
lds
fisubs
add
and
dec
cmc
jecxz
aad
ljmp
push
fsubs
add
mov
outsb
pushf
mov
jecxz
add
xor
or
add
xchg
fistps
add
adc
or
xchg
mov
data16
loopne
xchg
decl
ret
xchg
mov
push
and
jb
jnp
rcrl
lea
mov
flds
pop
js
adc
lret
push
xchg
cmp
adc
cld
daa
mov
dec
xchg
test
push
and
mov
loop
jecxz
or
jne
or
out
xor
ljmp
mov
or
hlt
mov
fistps
push
lods
jl
call
mov
xor
cmp
adc
pop
rclb
cltd
aam
jb
push
inc
cwtl
or
sbb
pop
jg
mov
and
pop
pop
push
jg
jb
stc
jmp
ds
outsb
sahf
cmp
pushf
lea
loopne
rorb
mov
cmp
arpl
ja
js
orb
insb
int
add
test
es
add
bound
xchg
xchg
jmp
loop
pop
push
dec
pop
je
xchg
pusha
xor
push
mov
cmpsl
cli
cmp
dec
ficoms
cmpsb
sbb
cmp
xchg
pushf
pop
mov
inc
popa
fbstp
mov
jp
and
pcmpeqb
add
arpl
sbb
insb
cmp
and
test
pop
push
clc
adc
loopne
or
adc
sbb
add
pushf
push
aad
adc
pushf
xor
pop
pop
ret
mov
adc
imul
leave
test
clc
mov
shl
cltd
adc
mov
cld
add
fimuls
add
cld
std
mov
ljmp
dec
inc
js
call
push
cltd
mov
add
xchg
sub
inc
xchg
mov
xchg
data16
js
jg
icebp
push
adc
mov
cwtl
and
movsb
mov
adc
int3
xor
mov
pop
mov
mov
add
push
add
add
or
data16
scas
nop
mov
cmpsl
fcomip
pop
adc
cmp
cld
leave
push
mov
and
cmp
pop
ret
out
mov
jnp
test
jmp
stos
mov
clc
lock
cmpsl
add
jp
pushl
mov
insb
mov
icebp
in
int
cs
xchg
pushf
push
xchg
test
gs
mov
scas
mov
push
jb
insl
loopne
mov
mov
sub
or
and
dec
push
push
push
out
lods
and
psubsb
pop
jl
mov
mov
xchg
repnz
jg
ljmp
adc
pop
call
nop
sbb
lock
aaa
xor
ret
sub
in
add
aaa
ret
xchg
sar
or
and
popa
xchg
lock
call
fmull
inc
and
insl
addr16
lds
push
stos
pop
fwait
xor
ficomps
jbe
test
cmp
mov
jl
jae
cmp
das
aam
pop
fildll
xchg
dec
rorb
pop
and
ja
jb
sub
data16
jmp
pop
rcr
out
adc
pop
fcmove
push
xchg
jp
push
mov
sbb
nop
push
repz
mov
inc
pop
sti
stc
mov
xlat
test
cld
pop
push
cmpsb
lock
inc
loop
mov
push
push
dec
filds
cld
mov
icebp
pop
mov
jb
push
cwtl
or
sbb
cltd
jns
int3
fdiv
pop
cli
sbb
cli
out
mov
icebp
or
das
xor
dec
mov
pop
loop
dec
pop
call
rcrb
int
lds
decb
clc
jno
mov
inc
xor
sbbb
scas
xor
je
cmpsl
dec
mov
push
lcall
pop
test
ja
cmpb
add
lcall
imul
jle
sub
aam
movsb
imul
mov
dec
xor
mov
stos
cli
or
lods
push
xor
shll
iret
sbb
cli
in
dec
push
mov
push
out
clc
jle
rep
mov
add
add
in
cltd
inc
add
inc
popa
fisubs
nop
and
add
add
adc
out
sub
sbb
in
fstl
xor
or
jg
mov
into
iret
xlat
sarl
fisubrs
mov
iret
mov
mov
les
add
call
cltd
loopne
mov
jne
cmpsb
xrelease
push
fld
icebp
add
xor
bnd
cli
push
pop
add
pop
sbb
inc
enter
add
inc
and
fidivs
lcall
mov
pop
fs
test
test
pop
gs
dec
aam
inc
fucomip
mov
test
jle
cmp
xlat
lcall
or
push
out
push
aas
sub
add
insb
mov
pushf
jo
stos
mov
cmc
mov
mov
rcrb
pop
add
into
test
pop
movsl
or
in
push
out
rclb
jl
add
push
inc
sbb
mov
push
pop
pop
incl
jecxz
ja
aad
ja
clc
stc
fmuls
enter
mov
cmp
push
pop
cmpsl
mov
add
push
push
add
lds
fdivp
jge
cld
das
cli
jg
mov
cmp
xchg
movups
dec
clc
das
push
ss
mov
push
cmp
pop
pop
fwait
lock
adc
cld
mov
push
adc
outsl
mov
xchg
mov
rcrl
fisubrl
fnstsw
shlb
ret
aaa
pop
clc
decl
subb
pop
pop
xor
adc
mov
add
adc
pop
outsb
mov
call
lds
ss
dec
pop
xor
pop
aaa
xlat
call
push
mov
add
repnz
push
mov
mov
imul
mov
mov
dec
sub
loop
cs
iret
shlb
outsb
mov
add
add
xchg
jnp
dec
clc
das
cli
lret
xchg
xlat
xor
pop
jp
pop
mov
add
out
in
pop
push
inc
or
pop
cmp
and
test
lahf
or
int
fsubp
add
shrl
jmp
sub
lcall
dec
mov
inc
jnp
mov
mov
lret
std
call
mov
imul
insl
loopne
xor
add
mov
adc
push
mov
outsb
and
dec
pop
pushf
outsb
jg
xor
inc
mov
push
outsb
and
sub
mov
add
imull
loopne
test
fists
sub
js
cmpsb
adc
jl
sub
mov
pop
hlt
or
mov
mov
sub
add
test
xchg
xchg
xchg
shrb
sub
dec
jg
mov
rcrb
jo
push
add
jle
mov
ss
or
leave
divb
mov
fisubrs
sbb
and
jno
mov
call
mov
jg
outsb
in
mov
es
jle
cmp
insb
jg
jge
es
fbld
sub
jbe
ss
sahf
mov
ja
fwait
sahf
pushf
je
test
rcr
ljmp
into
push
insb
jmp
fadds
dec
mov
decl
mov
gs
or
sarb
jg
add
xchg
mov
inc
nop
and
lock
sbb
clc
push
add
pushf
or
js
mov
lcall
push
mov
ficoms
ds
adcl
push
sbb
jp
lods
or
pop
mov
clc
push
rolb
cmp
ljmp
mov
outsb
and
xchg
pop
and
out
clc
imul
xchg
inc
insl
cmp
ret
sar
and
loop
sbb
sub
mov
jnp
aas
je
adc
loopne
loope
dec
call
xor
jl
mov
jo
mov
jl
test
dec
daa
lcall
add
mov
jle
dec
aas
std
mov
xchg
jo
in
mov
cmc
outsb
test
pusha
pop
add
cmpsb
mov
out
and
push
lods
inc
or
xchg
inc
or
xchg
std
push
cmpb
push
divw
clc
adc
push
jno
fstpt
mov
shrb
mov
iret
and
cld
daa
outsb
jmp
in
dec
sub
clc
lds
pop
and
dec
test
mov
lcall
shlb
xchg
mov
cli
pusha
mov
inc
lock
call
fneni(8087
mov
test
cmp
pop
hlt
jl
fcomip
sub
jnp
and
test
cld
pop
mov
mov
pop
dec
and
shrb
int
jl
inc
loopne
jb
loope
movl
mov
or
xchg
loope
mov
in
sahf
xchg
mov
sti
cmp
jno
fdivs
jbe
mov
inc
sub
shrb
mov
mov
out
add
inc
add
call
or
mov
cmpl
mulb
mov
test
ljmp
addr16
cmp
rcrb
and
mov
cmp
sub
jmp
clc
pop
mov
inc
push
jne
clc
push
in
call
fbstp
movsb
mov
pop
test
dec
pop
xchg
add
loop
fsubrs
subl
mov
push
mov
push
inc
test
sbb
movsb
pop
inc
popa
pop
push
push
xorb
add
ja
fcomps
jg
jbe
outsb
sbb
sbbb
mov
repz
add
ret
mov
jle
pop
sub
jmp
mov
ret
sbb
mov
sub
or
dec
adc
sub
or
add
lcall
inc
call
aas
scas
cmc
jb
mov
into
push
clc
pop
pop
insb
mov
gs
lock
es
test
shrl
cltd
dec
inc
fcomps
mov
clc
stos
cmp
pop
fbstp
lcall
add
adc
xlat
fisttpl
out
pop
adc
icebp
fst
insl
fidivrl
scas
push
jmp
call
loope
jg
insb
push
xchg
xchg
push
pushf
lds
ret
shlb
nop
ss
pop
sub
icebp
incl
loopne
lret
in
les
jno
loopne
jbe
sti
imulb
xlat
or
outsl
sarb
xor
sbb
mov
dec
out
arpl
movsb
pop
cld
dec
and
ret
sbb
out
dec
stos
pop
jmp
ret
mov
add
mov
push
jg
std
incl
dec
or
sub
add
push
aas
mov
pop
push
mov
lock
lea
mov
popf
out
sub
sub
or
jbe
call
test
data16
and
cli
pop
push
inc
aaa
push
jl
and
mov
imul
stc
cmp
aam
loop
dec
out
xchg
mov
jle
cs
shl
xchg
stos
adc
inc
inc
std
or
add
mov
cs
push
icebp
pushw
pop
scas
xchg
mov
lcall
cwtl
icebp
lahf
imul
and
in
sbb
fildll
inc
lods
mov
and
mov
pop
mov
mov
out
in
pop
cmp
push
jmp
jecxz
xchg
stos
out
push
incl
call
mov
dec
je
jb
sbb
js
push
add
in
ja
jb
fimuls
xchg
mov
cmp
push
cmp
in
adc
mov
lock
lcall
sarl
lds
scas
mov
jg
sbb
jbe
popf
mov
daa
icebp
aaa
cmp
push
loopne
dec
jp
jmp
hlt
sahf
int3
push
jo
out
scas
add
xor
adc
jbe
jns
lcall
jnp
jns
leave
das
popf
xorl
inc
sub
scas
mov
sub
iret
pushl
data16
clc
neg
sbb
sahf
rol
jmp
rorb
add
insb
fisubl
ljmp
push
xchg
pop
adc
int
aam
push
mov
test
repz
push
mov
push
bound
or
rcll
out
pop
dec
loopne
inc
sub
pop
jae
rcr
imul
mov
sti
stc
movsb
or
xor
fldenv
push
je
in
in
sahf
popf
iret
loopne
jmp
mov
decl
mov
xchg
icebp
push
sbb
imul
int3
aas
mov
les
cmp
mov
jne
stc
js
push
mov
cmp
push
xor
add
adc
popa
jo
shrl
or
in
add
divb
and
push
mov
popa
pop
lret
hlt
nop
dec
outsb
icebp
pop
push
incb
sti
repz
stc
dec
add
out
out
or
adcl
sbb
jb
fsubp
sub
mov
orb
in
xchg
inc
repz
dec
cwtl
push
fs
push
cmc
out
stc
dec
xor
insl
sbb
aam
xchg
arpl
rcll
outsl
je
popl
das
push
cmpsb
jp
test
xor
test
clc
or
daa
cmp
pop
clc
mov
mov
outsb
dec
loopne
mov
pop
and
ljmp
jecxz
dec
mov
das
and
or
and
fstpl
int
dec
or
adc
mov
scas
push
in
mov
push
push
mov
stos
pop
outsl
sbb
dec
lret
push
xchg
or
sar
incl
cmp
bswap
aaa
sub
dec
ljmp
data16
or
xchg
leave
cli
add
lcall
repz
or
xchg
push
mov
cld
dec
movsb
sbb
dec
sbb
mov
jb
xchg
int
popa
push
mov
inc
rcrb
enter
or
shlb
les
jle
push
cld
jbe
loop
mov
sbb
jno
sub
cli
add
inc
lret
cli
cld
aas
orb
pop
and
or
mov
push
xor
mov
fldcw
sti
inc
jnp
and
inc
pop
jmp
cmpsb
dec
std
jne
icebp
ret
shlb
in
adc
shrl
push
push
rorl
inc
fdivrp
or
pop
notb
mov
dec
jb
sbb
js
mov
fisttps
adc
loopne
int3
push
sub
dec
aaa
mov
test
repnz
and
andb
lret
outsl
int
stos
sub
loope
jle
addb
in
pop
xor
ret
xor
push
test
pop
push
mov
clc
sbb
ret
cli
jg
int
add
or
adc
xor
dec
sub
dec
jg
ljmp
out
ret
aas
push
add
stos
mov
cmp
scas
mov
call
lds
lcall
mov
push
adc
adc
sub
shll
rorb
cmp
mov
js
sti
jb
cwtl
inc
cmc
ljmp
adc
hlt
push
xor
test
pop
and
sub
outsl
das
xchg
sub
jmp
fmulp
mov
jl
adc
repz
repnz
je
stos
sahf
and
incl
hlt
roll
hlt
mov
push
and
inc
add
mov
ja
rsm
test
lcall
or
dec
fimull
or
das
pusha
call
inc
repnz
ret
je
inc
cmp
pop
and
sub
fimuls
add
pop
mov
push
ret
inc
aad
cmp
jb
adc
adc
loop
xchg
icebp
xor
in
scas
enter
dec
test
mov
arpl
cmp
add
dec
mov
push
leave
sbb
cmp
sub
pop
bound
mov
das
add
cmp
cld
xor
push
mov
test
sbb
jg
xchg
imul
int3
mov
jle
std
mov
dec
rol
out
pop
shl
jmp
jle
scas
push
test
inc
sbb
negl
lret
loop
pop
cmp
mov
adc
mov
xor
aaa
in
pusha
fcomip
sbb
add
pop
lret
or
pop
insb
push
pop
jbe
into
movsl
outsl
sub
jp
and
mov
mov
ljmp
in
loop
push
fdivrl
mov
loope
insb
fdivrl
shrl
xchg
inc
push
cld
jge
movsl
mov
test
shll
push
dec
adc
jg
mov
scas
pop
mov
sub
cmp
inc
push
pushf
add
pop
in
int3
jnp
add
in
aad
clc
je
insl
cmp
mov
add
sub
cmpl
dec
inc
lret
sahf
fimull
xor
shl
add
rol
cli
mov
pop
sub
jb
in
fildl
inc
test
dec
pusha
mov
dec
pushf
fcomip
sbb
icebp
imulb
cwtl
out
adc
fst
enter
mov
rcrb
sbb
loopne
mov
sub
stc
out
pop
pop
or
into
pop
cli
fmul
lcall
adc
sub
icebp
inc
jno
inc
push
fadd
test
mov
out
fistpll
mov
dec
shlb
mov
mov
pop
mov
or
repnz
les
das
jmp
sbb
push
into
dec
push
cs
clc
fwait
add
jge
push
jl
pop
jmp
mov
negb
add
sub
ficomps
lret
dec
fcomip
or
cmpsb
ljmp
pushf
fdiv
add
lods
into
inc
inc
ret
clc
stos
push
sbb
cs
sub
cmp
shll
pop
lcall
push
scas
testl
negl
arpl
test
loop
lock
jecxz
idiv
repz
push
pushf
cmp
adc
jl
notb
loopne
mov
fsub
test
les
cwtl
xchg
jbe
fldl
outsb
cmp
sbb
pop
lods
push
int3
insb
or
loop
xchg
in
fsubl
push
ljmp
pop
hlt
jge
push
addr16
mov
xchg
jne
stc
pop
or
adc
pushl
inc
cmp
mov
popl
lret
push
rcrl
pop
sbb
out
mov
pop
pop
fstpt
nop
xchg
stos
pop
jecxz
push
or
xor
inc
loopne
cs
add
add
jg
push
lods
lret
loop
cmp
xchg
mov
inc
cld
or
ret
andl
nop
outsl
mul
adc
or
push
fidivs
test
xchg
fildl
adc
into
aad
test
cmp
inc
inc
sbbl
or
push
fcoml
nop
xchg
jmp
dec
push
jb
push
cmp
insl
sti
adc
ja
cmpsl
call
mov
mov
mov
mov
imul
mov
pop
loope
push
incb
inc
sub
mov
or
or
aaa
pop
jo
fwait
insb
fs
orl
mov
xchg
add
adc
jmp
popa
pop
push
icebp
jnp
cmp
int3
and
cmp
pushf
jbe
into
stos
in
or
push
sub
jg
dec
push
rorb
jge
ret
pop
imul
idiv
and
lds
jae
popa
fnstcw
mov
adc
repnz
cmpsl
xchg
cmc
adc
push
pop
mov
fisubrl
mov
xor
sbb
ljmp
pusha
clc
mov
or
fprem
rcrl
das
adc
scas
mov
cmp
insl
into
aas
std
pop
adc
adc
adc
adc
fmulp
cli
fwait
mov
insb
pusha
cwtl
and
dec
in
dec
push
sub
inc
jp
push
xchg
std
push
add
cmovp
hlt
cmp
loop
mov
xchg
mov
pop
push
repz
ljmp
icebp
cmp
sub
adc
inc
in
and
push
mov
mov
repnz
mov
cmpsb
push
inc
jns
ret
scas
or
insl
test
xor
rcll
loope
insl
rorl
movsb
fs
and
in
decl
stos
repz
sbbb
sbb
xor
je
cmp
enter
fs
push
stos
das
mov
test
pop
lock
ds
sub
push
sbb
sbb
pop
and
int
dec
pop
jle
ret
pop
shlb
loopne
cmp
hlt
out
not
or
inc
mov
jns
mov
arpl
int
movsb
fwait
dec
scas
push
xorl
push
ljmp
pushl
in
sub
xor
pop
test
mov
cld
or
dec
adc
lcall
mov
ss
push
inc
jge
jle
rcrb
std
pop
jle
push
stos
out
or
das
pop
and
pop
jp
lods
popa
lret
pushf
test
rolb
pop
repnz
pop
cli
dec
outsl
xchg
imul
dec
lret
lock
mov
insb
xor
jle
push
aas
and
adc
ja
sbb
or
jle
gs
movsl
push
or
inc
cwtl
out
pop
dec
mov
inc
xor
aad
sub
xchg
repz
xor
xchg
leave
mov
cmp
adc
inc
push
inc
jmp
ss
idivb
sbb
inc
pop
xorb
jle
icebp
xchg
xchg
dec
icebp
pusha
mov
mov
mov
sub
sub
pop
outsl
into
add
mov
imul
xchg
mov
std
out
testb
call
inc
jne
ja
ljmp
imul
je
mov
loopne
fstpt
pop
repnz
enter
out
sbb
stos
or
push
mov
nop
push
ret
xchg
imul
pusha
sbb
std
fcomip
sub
push
ja
cmpsb
jnp
and
pop
xor
mov
xchg
push
pop
pop
mov
or
orb
sti
add
scas
and
ljmp
xlat
orb
icebp
test
xchg
xlat
lods
push
and
mov
push
ret
sub
pop
xor
outsb
mov
decl
jb
adc
cmp
mov
jbe
sbb
loopne
std
clc
ret
xor
nop
enter
call
mov
fmull
jb
sub
lods
aad
cli
or
ret
stos
psubd
aad
les
cwtl
push
in
mov
shl
call
scas
aas
dec
shr
sbb
icebp
call
sbb
and
mov
stos
fldcw
divb
add
mov
xor
cmp
pop
test
lods
fildll
push
in
sub
aas
fcoml
std
scas
outsl
push
out
dec
sub
repz
pop
insb
cltd
loope
shll
pop
sub
sub
inc
pop
lcall
push
push
dec
clc
add
enter
add
jae
ja
enter
xchg
xor
orb
or
test
mov
stc
pop
xchg
fidivrl
ljmp
inc
rcr
mov
inc
or
aaa
cmp
jmp
in
sbb
subb
lds
sti
scas
call
shl
scas
push
cmp
push
popf
xor
and
push
cmpsl
inc
jmp
int
or
mov
insb
jbe
mov
sub
jae
loope
clc
add
jp
scas
and
test
push
das
rolb
xchg
cmpsb
lcall
adc
xor
cmc
pop
sub
loope
mov
adc
sub
jp
sbb
call
je
mov
frstor
jmp
mov
lds
mov
pop
aam
mov
dec
xor
call
shll
cmp
or
divl
jne
xchg
xchg
aad
dec
inc
ret
dec
xchg
xchg
call
xor
cli
xor
jno
adc
shl
xorb
cmp
push
xchg
sub
jb
cmp
insl
push
js
adc
les
fsubrl
les
les
cld
inc
clc
scas
cli
outsl
cli
jb
xchg
ret
cmp
repz
mov
inc
lods
test
std
sub
dec
pop
jnp
lds
call
jle
add
inc
insb
push
ljmp
mov
cld
int
test
in
shlb
daa
ds
out
cmc
add
jbe
mov
fsubrs
and
xlat
adc
int3
add
sub
pop
push
fdivs
jp
or
loopne
pop
icebp
lret
add
pop
cmp
out
dec
pop
mov
sbb
out
inc
cld
or
sub
xor
dec
call
sbb
mov
aas
push
out
xchg
in
sub
pushl
fbld
pop
popf
sahf
nop
clc
push
cs
xchg
lods
fcomip
das
add
call
mov
ljmp
bound
orb
add
pop
jl
test
pop
pop
popf
fisubs
ret
adc
push
sbb
loope
insl
mov
js
mov
lcall
xor
mov
sub
sub
mov
sbb
pop
je
and
mov
mov
jae
js
lcall
mov
mov
outsb
cmp
add
repnz
es
adc
std
ret
sub
js
sub
sar
aaa
inc
sub
ljmp
shrl
mov
icebp
inc
mov
jno
mov
ss
aad
dec
out
push
jl
adc
mul
pop
roll
icebp
jg
incl
pop
out
jbe
pop
xrelease
inc
fdivrl
mov
hlt
mov
mov
pop
scas
in
push
add
jo
loopne
and
pop
imul
adcb
ljmp
ficoml
adc
mov
shlb
hlt
sbb
loop
sbb
cld
iret
inc
clc
dec
call
loop
adc
scas
icebp
das
jle
out
out
add
pop
icebp
add
aas
cmp
js
mov
call
es
push
cltd
push
inc
loopne
lea
jmp
pop
cmc
lcall
mov
xor
cltd
mov
ljmp
pop
shrl
dec
test
pop
gs
mov
sbb
lcall
test
pushf
pop
or
sbb
test
mov
push
in
ja
ljmp
incl
mov
dec
test
and
jg
inc
xlat
and
loop
jbe
aaa
repz
inc
stc
mov
mov
mov
sub
cmp
ja
mov
mov
les
sub
movsb
data16
lock
addr16
adcl
cli
lcall
ffree
jg
push
scas
jo
sbb
test
scas
in
scas
movsl
negl
in
mov
lcall
test
add
mov
outsl
jl
sub
mov
out
mov
xchg
pop
cli
or
mov
insl
cli
sub
add
scas
push
push
in
mov
insb
adc
push
dec
ds
jb
movsb
push
clc
sbb
out
dec
adc
stc
in
inc
dec
imul
out
ljmp
or
popf
dec
aad
mov
popf
push
add
scas
cmp
dec
or
ja
jmp
ds
xor
mov
jb
pop
dec
insb
pusha
mov
push
sub
jmp
inc
mov
pop
inc
mov
or
xor
sbb
int
mov
repnz
cmp
jno
stos
dec
and
push
and
daa
sbb
aad
arpl
je
and
cwtl
fdivrl
scas
jl
add
xchg
sub
dec
jmp
call
lock
mov
xor
pop
es
cld
das
les
loop
cmp
icebp
cmp
push
das
adc
adc
cltd
jbe,pn
mov
daa
lock
sbb
cmp
mov
push
ja
js
sub
sbb
push
push
cs
mov
in
in
mov
xchg
mov
mov
adc
xor
inc
aad
call
ret
xlat
mov
js
sar
mov
sub
add
dec
mov
xchg
mov
mov
jo
add
stos
out
cmp
add
mov
adc
ljmp
inc
adc
or
inc
lods
ds
mov
incl
data16
mov
jo
jo
push
or
pop
xchg
mov
and
pop
fbld
fcomip
jo
dec
mov
jns
sbb
ret
mov
in
pop
mov
xor
add
fcompl
and
orl
aam
fucomip
stc
add
filds
scas
pop
das
test
rcr
mov
test
sub
lahf
hlt
rcrb
popa
xchg
cmpsb
sub
popf
xchg
push
jno
mov
pop
mov
pop
les
call
es
or
cmp
xor
movsb
insb
ss
popa
out
xor
cmp
inc
popf
cli
and
sbb
js
arpl
loop
int3
adc
cmpb
cmpb
jno
popf
lret
cli
imul
mov
jecxz
inc
add
adc
mov
addr16
push
movsl
and
adcl
in
or
jl
addl
ljmp
pop
sbb
push
xchg
xor
dec
repz
fisttpll
call
sub
mov
adc
ret
rol
mov
incl
iret
into
xor
add
out
popf
mov
icebp
mov
and
rcrl
sarb
dec
nop
mov
cld
inc
mov
ds
mov
int3
push
cmp
mov
cld
push
dec
mov
je
clc
jg
xor
add
adc
subl
jge
rcrl
xchg
lcall
fsubs
ds
divb
and
les
sub
dec
cmp
jp
mov
dec
loopne
jge
stos
scas
popa
aam
insb
imul
mov
pop
addr16
inc
jbe
dec
mov
push
dec
dec
push
in
pop
pop
mov
loope
jmp
pop
sub
xchg
sbb
dec
test
ss
inc
fisttpll
roll
push
jno
push
jge
loop
inc
jo
push
mov
cmp
scas
sti
mov
sub
or
jns
xchg
jbe
stos
xchg
popl
sub
subl
cld
jg
repz
xchg
inc
shrl
pop
adc
push
push
xchg
or
daa
fs
or
push
mov
loop
push
sbb
inc
adc
sbb
jle
arpl
cli
inc
jg
push
dec
std
test
push
push
fcompl
inc
xor
inc
loopne
icebp
aaa
push
add
sti
movsb
sub
out
pop
sbb
std
out
repnz
inc
cmp
out
dec
sbb
test
pop
xchg
mov
mov
sbb
jns
int3
inc
xor
test
fdivrs
jmp
cmp
mov
push
sahf
mov
fbld
inc
pushf
cmp
mov
cld
sub
xchg
icebp
pop
pop
lods
stos
aas
push
cld
add
subl
es
testb
ret
dec
add
in
adc
sub
outsl
add
lea
xor
sub
pop
outsl
in
xorl
iret
push
ds
inc
push
mov
sbb
jge
bound
in
aaa
fsubrl
mov
cmpsb
js
mov
and
inc
mov
or
mov
adc
jg
adc
fwait
jg
mov
in
dec
pop
pop
std
add
adc
cwtl
enter
and
push
sub
fdiv
bound
hlt
push
push
dec
push
sbb
lret
jb
sbbb
test
pop
into
inc
sbb
lods
xchg
out
sbb
pop
xor
fiadds
sarb
std
addb
sub
mov
push
int3
pop
adc
std
rorb
clc
add
mov
adc
mov
fimuls
mov
jbe
pop
fs
and
mov
and
mov
cli
xchg
mov
jmp
xchg
inc
jne
dec
negl
scas
mov
jb
mov
scas
cld
push
jnp
mov
ja
xor
push
mov
in
popa
dec
jmp
sub
push
aaa
ss
cmp
mov
mov
scas
aas
or
mov
sahf
push
adc
insb
cmp
dec
mov
xchg
icebp
ficompl
push
xchg
lcall
mov
cmp
cmp
cmp
dec
add
es
add
rclb
imul
or
jne
jbe
out
push
add
sti
mov
call
mov
das
and
add
fdivl
daa
inc
jmp
das
mov
xor
aam
ljmp
clc
fcomip
out
or
xchg
and
and
or
xchg
cmp
mov
inc
cltd
mov
inc
inc
in
cli
icebp
fwait
clc
sub
pop
or
push
std
call
data16
out
jo
outsl
push
iret
push
add
sahf
das
bound
xchg
pop
cli
sub
leave
lret
bound
scas
fidivrl
es
add
mov
dec
and
outsb
pop
cmpsb
mov
das
movsb
jo
inc
cmp
pop
sbb
mov
std
add
push
cmp
mov
jmp
clc
mov
outsb
shlb
outsb
xchg
add
push
inc
push
ret
mov
push
jge
jp
mov
push
icebp
jmp
rolb
or
add
mov
xor
mov
out
adc
xchg
cmp
mov
clc
and
add
dec
ret
and
int
loopne
push
add
enter
lock
xchg
push
inc
es
mov
or
enter
cli
add
jg
int3
inc
fsts
xor
mov
and
repz
pop
adc
rclb
mov
decb
dec
xchg
orb
inc
mov
jb
idiv
push
push
jecxz
mov
cmp
cmp
stos
push
add
fwait
jge
bndstx
mov
add
xchg
fdivp
mov
or
adc
cmpsl
fwait
orb
imul
inc
xchg
negb
dec
call
xchg
sbb
push
jle
sub
sub
int3
cmp
mov
mov
xchg
sub
jno
jecxz
call
cwtl
shr
and
mov
sti
clc
arpl
jnp
sub
dec
call
inc
push
fs
sbb
or
and
inc
stc
call
add
cmp
test
jae
mull
sbb
loop
inc
imul
mov
jge
pop
sub
sub
pop
cltd
sub
jo
scas
popa
lods
stos
aam
add
insb
sub
mov
mov
jnp
stos
and
xor
daa
call
push
decl
and
add
decl
jecxz
cmp
lods
rcrl
mov
lret
add
hlt
roll
fisubs
mov
jg
add
push
testb
push
mov
iret
ja
pushf
push
sbbb
cmp
test
pusha
sub
mov
dec
sbb
sahf
pop
sti
inc
outsb
add
dec
mov
inc
mov
hlt
fldt
cmp
pushf
add
xor
jmp
stos
jg
mov
ret
in
in
les
cmp
push
dec
decl
mov
or
xor
test
lea
adc
and
inc
bound
jg
repnz
xchg
mov
add
mov
arpl
insb
inc
push
xrstor
mov
idivl
fsubrs
add
or
or
out
mov
xor
mov
mov
clc
incl
cld
fdivrl
fsubrp
jmp
pop
repz
mov
xchg
dec
in
jg
adc
gs
rorb
or
push
hlt
cmpsb
addb
ss
ljmp
pop
mov
xlat
cmpb
jecxz
add
mov
stos
dec
rolb
call
outsb
add
ret
jg
outsl
hlt
cmp
icebp
dec
adc
xchg
pushf
test
mov
subb
scas
sub
sbbb
jg
push
addb
mov
fs
pop
stos
scas
loopne
pop
pop
movsl
jnp
mov
mov
xor
call
add
xchg
cli
andb
jo
cmpb
pop
cmp
cld
push
call
ds
adc
or
mov
rorl
aad
mov
ss
call
movsl
mov
nop
subb
xor
sub
stos
sub
out
mov
pop
mov
decl
je
cli
push
pop
ja
lret
dec
adc
cmc
xchg
dec
mov
push
pushf
push
popf
push
jg
je
in
aas
push
mov
cmp
sbbl
push
mov
adc
add
sarl
lret
mov
mov
ret
imul
decl
or
daa
add
mov
jg
lcall
dec
lret
push
mov
in
imul
jp
cmc
divb
add
or
cmp
push
jle
dec
aaa
inc
mov
jecxz
add
jg
test
shll
orb
xor
xor
imul
daa
bound
mov
add
cmpsb
jg
mov
xor
outsb
lcall
sarb
push
xchg
sarb
outsb
mov
loopne
xor
stos
sarl
sbb
ficompl
adc
mov
incl
mov
sbb
test
shlb
xor
jle
adc
fdiv
mov
mov
xor
jg
jg
inc
cli
cmp
mov
cwtl
or
jl
mov
mov
movsl
pushl
cld
mov
pushf
pop
sbb
jne
in
jp
insl
pop
mov
jge
nop
sarl
out
mov
xchg
addr16
in
jmp
test
fimull
jae
dec
mov
jb
rol
or
jl
sub
mov
test
cmp
jg
ljmp
enter
loop
sub
aas
sub
lods
push
push
cli
xchg
test
mov
sbb
push
cmp
sbb
adcb
outsl
mov
pusha
rcl
pop
cmp
dec
cld
mov
push
jmp
hlt
int
cmc
scas
jge
in
adc
aaa
sbb
out
xchg
fnop
lods
sub
rorl
pop
add
push
adc
pop
jmp
mov
jmp
and
stos
aas
arpl
gs
mov
push
fs
add
xchg
icebp
mov
lds
in
mov
mov
std
add
pop
cs
ljmp
push
or
sbbl
insb
cltd
aad
cld
outsl
imul
xor
cmpsb
dec
sbb
mov
pusha
lcall
test
jg
dec
pop
inc
xchg
cmp
test
cli
mov
les
fwait
cmp
incl
ret
dec
adc
lea
mov
jp
test
mov
and
pop
rcrb
aam
loope
mov
pop
push
lods
lcall
xchg
xor
cwtl
cmc
fstpt
fsub
std
leave
inc
push
mov
mov
or
es
test
mov
or
add
out
push
add
mov
out
add
push
aad
lcall
int3
lret
test
fildll
xchg
pop
and
popf
in
inc
pop
add
cmp
inc
hlt
lea
call
push
imul
pushf
xor
push
hlt
enter
mov
popf
ljmp
or
repz
jbe
lods
mov
push
insb
test
call
jo
in
es
mov
pop
cmp
pop
rcll
repnz
dec
es
jmp
adc
rorb
push
push
add
pop
sbb
xlat
jmp
add
cs
push
es
add
sbb
arpl
pop
jecxz
lods
adc
mov
bound
aam
add
hlt
sub
in
dec
and
push
xchg
inc
xchg
ljmp
cmc
pop
pusha
mov
mov
lahf
shl
mov
mov
decb
rorb
jg
rorl
add
mov
sbb
into
leave
dec
pop
sti
add
sbb
pop
jbe
lods
clc
fstl
inc
js
jl
mov
fcoms
mov
mov
decl
dec
repnz
or
std
lods
pop
mov
xor
adc
pop
movsb
xor
clc
decl
jle
jbe
mov
pop
stos
sbb
push
rclb
mov
mov
outsl
scas
js
call
push
sbb
mov
adc
inc
add
pushl
lods
cmp
jge
cmp
cmp
mov
imulb
movsb
lock
adc
cmpsl
and
or
fisttps
je
popa
push
outsl
cli
jno
outsl
outsb
ljmp
test
pop
sub
mov
je
dec
loope
popf
orb
jl
ljmp
repnz
sbb
loopne
push
int
or
cltd
xchg
mov
clc
jmp
jecxz
jmp
in
scas
leave
lcall
inc
ret
ja
adc
cltd
xchg
outsb
icebp
scas
movsb
loope
and
mov
push
mov
mov
es
xlat
pushf
outsl
scas
cmc
hlt
sbb
aam
mov
jnp
xchg
jmp
test
repnz
icebp
sub
cs
pop
mov
out
mov
inc
pusha
inc
cli
or
sub
xchg
mov
lcall
insl
ss
pop
testl
or
or
subb
clc
adc
lds
or
cmp
das
mov
sbb
call
cltd
aam
in
adc
cmp
jmp
adc
hlt
dec
sbb
sub
adc
sarb
push
adc
pop
ljmp
xchg
mov
lea
xor
cmp
fs
jp
or
dec
fistps
adc
hlt
pop
negl
aas
dec
enter
sub
jle
test
outsl
ret
int3
in
fcoms
nop
mov
mov
rcr
insb
sub
pop
cmp
pop
mov
sub
js
mov
jmp
pop
movsb
push
dec
adc
shll
inc
in
negl
jg
mov
push
mov
add
filds
dec
loopne
pop
gs
mov
aas
jne
sbb
cld
sbb
and
push
cmp
in
fcmovu
icebp
mov
loopne
nopl
aad
int3
mov
sbb
pop
mov
mov
daa
js
test
and
add
push
dec
pop
orb
mov
lret
mov
cmp
ss
inc
movzbl
inc
pusha
adc
fisubs
push
jo
or
stc
outsb
scas
mov
clc
fisubs
sub
sub
popf
push
in
mov
in
std
xor
int
or
mov
lods
inc
test
les
or
pop
test
cmp
mov
je,pt
add
dec
mov
mov
in
daa
adc
add
cld
and
push
xor
mov
push
inc
ret
inc
xor
sbb
and
sbb
leave
or
or
add
lods
dec
sub
sbb
push
inc
mulb
mov
loope
push
loopne
sub
test
js
pop
out
movsb
mov
sbb
xor
and
or
ljmp
clc
ljmp
pop
cltd
cmp
inc
mov
sub
jmp
shrl
lret
mov
add
scas
sti
jnp
xor
ds
in
js
mov
jno
sbb
mov
lcall
jb
xlat
rorl
dec
ds
cmp
std
lret
das
pop
or
add
dec
push
ret
push
and
pop
mov
push
pop
mov
pushl
or
dec
std
ss
cmp
mov
das
mov
dec
pop
cmp
push
or
sbb
pop
rclb
xchg
enter
incl
cmpsl
push
test
adc
pop
into
xchg
fistl
testb
scas
push
and
or
cmc
jg
cmc
sub
into
xchg
test
pop
push
push
push
inc
adc
fwait
xchg
xor
xor
pop
insl
cli
stos
outsb
scas
add
ret
fisubrl
push
pop
orl
scas
hlt
aas
es
mov
dec
push
jb
ficomps
jge
fstps
shlb
mov
repz
mov
and
or
mov
pop
dec
sbb
push
out
dec
sbb
outsb
xchg
int3
outsl
shlb
hlt
into
or
aam
loop
xchg
scas
sbb
call
adc
push
sbb
loop
cmp
repz
clc
nop
xor
clc
inc
add
inc
icebp
add
roll
sarl
lock
bound
scas
xchg
fsubrl
sahf
aam
mov
mov
and
cli
pop
lds
cmc
bound
mov
lahf
in
lea
xchg
mov
pop
ret
xor
faddl
ret
jb
lea
push
das
sub
mov
int3
and
push
mov
inc
rol
push
add
out
rcrb
inc
dec
xor
cld
pop
sbb
sbb
js
fstpl
jae
aaa
inc
cli
push
dec
lea
xor
push
mov
inc
dec
jb
into
popa
lret
pop
imul
sarb
jle
xchg
int3
mov
cli
ret
loope
add
test
fisttpl
pusha
sbb
scas
mov
pushf
xor
decb
inc
pusha
sbb
inc
mov
js
jb
in
shrb
ret
push
sbb
lret
outsl
decl
push
mov
js
ret
push
lahf
pusha
and
out
push
or
shr
sbb
lods
push
adc
adc
int3
in
lods
adc
out
sbb
mov
ja
push
sbb
inc
mov
decl
cmc
nop
ja
mov
cmp
stos
push
scas
mov
add
aas
scas
std
int
add
movsb
fidivrs
rolb
xor
loopne
fisttpl
sahf
jmp
mov
mulb
cmpsl
mov
push
js
cmp
jg
mov
sub
mov
int
aaa
sbb
cmp
mov
sub
pusha
mov
dec
lods
nop
push
stos
push
nop
fistps
xchg
mov
add
cmp
inc
push
jns
pop
in
adc
lock
sub
push
ds
loopne
rcll
arpl
clc
push
loop
pop
sbb
fs
jns
inc
add
xchg
insl
xor
hlt
in
cmpsl
pop
shrl
xchg
jle
mov
pop
mov
cli
movsl
and
incl
xchg
lahf
sub
add
test
mov
push
loope
inc
test
jbe
cmp
push
dec
push
jp
loop
adcb
pop
inc
mov
shlb
in
add
sar
imul
pop
insl
pushf
add
pop
icebp
mov
mov
push
ljmp
add
cmp
subss
cli
test
lock
pop
cmc
das
mov
sub
cmp
or
xlat
cmp
or
dec
xchg
or
inc
popf
cli
lods
cli
push
cmp
jp
rcl
ds
dec
push
mov
out
sbb
imulb
cmp
or
sahf
ret
dec
push
pop
jno
add
aas
stc
or
shl
jmp
sbb
xor
and
and
iret
lret
jb
pop
push
shll
push
dec
xchg
jae
mov
pop
std
xchg
push
inc
xor
xchg
loopne
mov
cld
stos
or
push
jl
movsl
and
clc
incl
xchg
mov
cs
cmp
icebp
mov
or
rclb
nop
mov
clc
add
sub
xchg
inc
pop
std
cwtl
sub
test
lods
inc
add
loop
lods
push
sar
xor
add
test
push
dec
push
xor
mov
ljmp
sub
xorl
lods
lods
lcall
xchg
sub
ds
pop
mov
cmp
popf
lret
xor
pop
ljmp
sbb
pop
adc
dec
mov
push
aad
or
fdivrl
ss
shll
cwtl
xchg
fiadds
xchg
ja
sub
push
cli
mov
fcomps
hlt
subb
add
cmp
pop
jle
push
lret
ljmp
sbb
lcall
or
mov
add
stos
out
clc
stos
jbe
mov
inc
cmpsb
rcrl
test
shlb
addr16
push
inc
or
lcall
ss
repz
das
add
ds
movsb
outsb
sub
sbb
insb
cmp
jge
decl
repnz
pop
outsb
sbb
mov
jb
xchg
sarb
add
out
je
repnz
jmp
jbe
imul
enter
xchg
push
dec
push
shll
call
fcomip
loope
lahf
je
mov
loope
stos
inc
movsb
roll
test
lret
mov
popf
cmp
fbstp
fwait
xchg
pop
mov
test
sbbb
mov
in
loopne
std
inc
sub
enter
adc
mov
inc
rcl
jo
movsb
stos
or
lcall
fisttpll
xchg
push
or
adc
jg
call
dec
dec
dec
dec
adc
int3
popf
jb
js
fisttpll
sub
jb
cwtl
sub
pop
movsb
pop
repnz
mov
int3
add
sbb
pop
dec
inc
pop
mov
lods
test
std
push
mov
call
mov
push
cltd
ficoml
lret
and
push
mov
nop
pop
inc
dec
cmp
test
sbb
sub
dec
cmc
mov
pop
rclb
cmpsb
ret
jmp
push
rorl
sbb
roll
sub
cmpsb
testl
pop
sub
lock
scas
sbb
add
scas
cmpsl
pop
push
scas
mov
jle
scas
or
add
in
mov
mov
cld
sbb
jmp
lahf
icebp
jo
inc
out
mov
call
aaa
jo
mov
cmp
lods
adc
stos
and
cmp
pop
inc
adc
or
dec
pusha
movsl
movsl
push
add
scas
xlat
sbb
jbe
mov
ret
or
mov
xor
inc
pushl
cmp
mov
rorl
fcomp
mov
add
add
testb
xor
iret
test
flds
ficoml
sub
jb
mov
push
pop
dec
mov
hlt
arpl
fprem1
push
lcall
fimuls
hlt
jp
push
jne
pusha
rcll
lcall
insb
rcll
jnp
xchg
mov
fldcw
ret
in
add
inc
xor
mov
push
mov
xlat
xorb
push
hlt
pop
dec
test
xor
and
int
pop
push
insb
decl
jno
cli
jmp
mov
scas
adc
push
push
icebp
fwait
sub
dec
shll
add
xchg
movsb
and
adc
incl
xor
pop
adc
les
ja
movsl
call
mov
scas
mov
mov
dec
sbb
sbb
lea
fisttps
movsb
mov
mov
mov
mov
push
sub
or
cmpsb
mov
test
es
mov
sar
jb
pop
mov
or
jg
push
or
int
mov
pop
inc
aaa
cld
lcall
bound
jae
enter
push
sbb
in
xchg
rolb
jg
inc
loopne
roll
adc
adc
xchg
nop
scas
add
xor
mov
jl
mov
cli
rorl
inc
loop
mov
out
jmp
adc
inc
nop
adc
add
jae
push
jge
push
jb
pop
das
lcall
insl
dec
inc
lds
adc
in
scas
xchg
ret
scas
pop
lds
cli
mov
jp
pop
addb
adc
int3
jno
aas
adc
xor
sahf
jae
mov
xor
adc
dec
push
or
sbb
icebp
ja
fistpll
cld
cld
lea
fwait
push
xor
sahf
jl
pop
lock
cmp
sbb
dec
jg
jno
sbb
add
adcl
add
pop
call
inc
je
lahf
cwtl
loop
adc
adc
outsl
movsl
pop
push
fcmovnb
dec
xor
lds
sbb
mov
inc
movsb
inc
sahf
sub
cmp
sub
or
es
mov
xor
lret
sar
inc
lcall
lods
pop
cmp
lea
insl
test
xor
shll
pop
nop
stos
and
cs
xchg
mov
mov
stc
test
cltd
pushf
mov
xlat
out
xor
and
push
in
repz
hlt
fucomip
fisttpl
test
aas
cmp
dec
lret
fsubrl
call
or
pop
ljmp
inc
in
jp,pn
lcall
add
inc
jg
dec
inc
lds
adcl
test
push
push
push
daa
rcl
mov
mov
imul
jnp
lcall
leave
aaa
rorb
cld
loope
aas
adc
mov
lods
pop
je
iret
cmp
or
arpl
pop
pusha
lcall
nop
filds
dec
and
sub
jbe
mov
pop
lret
loop
lods
pop
dec
clc
inc
sub
jns
mov
xchg
add
xchg
sub
fisubrs
cmpsb
ljmp
cmp
jmp
ja
bound
mov
adc
push
cli
jmp
mov
std
cmp
sbb
sub
lods
dec
jnp
testb
or
xchg
pop
pop
into
mov
stc
sub
clc
mov
xchg
dec
outsb
push
or
sbb
pop
and
xchg
pusha
adc
sbb
add
fsubrl
fisubs
xchg
loopne
loopne
xor
mov
dec
cmp
ds
ret
fstpl
ret
cmpl
aam
stc
dec
stos
sub
xchg
aas
sub
inc
clc
mov
adc
jne
or
repz
push
and
test
outsl
das
movsb
in
cmc
mov
sbb
popf
pop
sub
loopne
mov
push
sub
lock
cmp
jne
push
pop
mov
and
xchg
jbe
stos
mov
clc
dec
mov
mov
xor
jl
icebp
dec
mov
mov
add
xor
add
and
imul
ljmp
repnz
adc
movsb
push
int3
mov
test
jg
or
add
mov
inc
sahf
mov
lods
mov
int3
sti
or
jb
aaa
adc
cli
pop
in
xor
jb
nop
pop
xchg
mov
and
fbld
jle
inc
sub
add
aam
je
pop
hlt
jle
add
in
mov
add
iret
mov
mov
decl
lds
push
jnp
cmpsl
sub
repnz
pushl
push
aam
push
pop
imul
scas
rcr
adc
sub
jl
fisubrl
orb
sbb
shll
adc
add
pop
lock
mov
arpl
mov
cmpsb
jp
sub
out
fiadds
xchg
jmp
sarl
mov
xchg
mov
and
pushf
inc
or
dec
in
rolb
xchg
and
mov
mov
jb
out
adc
cmp
cmp
lods
mov
fsubrp
jl
pop
aas
cmp
enter
testb
ret
loope
jle
pushf
and
or
xchg
fisubl
cli
stos
sub
push
push
sub
xchg
test
add
ffree
rcl
out
test
in
pop
xor
scas
insb
jb
push
negb
dec
ret
lea
mov
loopne
push
add
inc
call
pop
adcb
fucomi
gs
mov
mov
cld
es
pusha
jmp
dec
mov
decb
faddl
mov
mov
cmp
ja
mov
fucomip
and
daa
lahf
mov
mov
aas
es
xor
sub
add
mov
std
testb
std
jne
hlt
test
sbbb
ljmp
repz
and
je
push
xchg
xchg
jmp
adcb
pop
lock
jp
dec
push
dec
test
cltd
mov
aam
hlt
jg
pop
pop
add
popa
dec
mov
loope
dec
push
jp
sub
sub
jb
data16
jg
jmp
daa
mov
push
xor
mov
inc
jns
sbbb
pop
addb
fidivl
cmpb
xchg
lret
jecxz
in
lret
lcall
daa
xor
xor
xor
hlt
mov
shlb
movsl
inc
movsb
aad
stc
mov
test
or
add
sub
pop
ljmp
das
and
loop
inc
jle
pop
pusha
jmp
enter
scas
dec
fbld
jbe
lock
ljmp
sbb
orb
bound
popf
and
shlb
jmp
push
mov
xchg
outsl
test
mov
arpl
mov
lds
mov
sub
xor
out
out
sbb
imul
jbe
icebp
lds
std
xor
stos
pop
push
in
fs
sub
fstps
aaa
cmpsb
ja
mov
xchg
mov
add
xchg
sbb
movsb
lods
push
xchg
pop
test
xor
jge
daa
mov
xor
cltd
mov
sarb
dec
sub
jecxz
sbb
push
repnz
in
out
cmp
xor
push
rcll
arpl
inc
sti
decl
sub
mov
add
mov
add
sbb
push
mov
mov
jmp
test
xor
push
mov
mov
and
out
xchg
push
push
jl
mov
mov
psubusw
sub
inc
incl
je
shl
xor
jp
push
adc
lds
dec
mov
or
fnstenv
hlt
and
in
nop
fs
sub
mov
fs
or
lret
and
push
sub
clc
sub
mov
sbb
xchg
inc
adc
cmpsl
inc
cld
pop
add
inc
add
inc
addb
clc
mov
loop
or
xchg
decb
mov
mov
das
mov
cli
jecxz
push
test
pusha
jecxz
out
push
push
push
adc
cwtl
outsl
loopne
mov
ja
cmp
aad
sbb
nop
leave
loopne
repz
insb
cmpsl
push
dec
cli
add
cld
enter
enter
sti
fs
sub
xor
iret
int3
or
jmp
xchg
add
sbb
add
cwtl
popf
ss
fisubrl
push
into
sub
xor
mov
or
arpl
stos
or
sub
xor
or
cmpsb
lret
add
dec
fwait
add
inc
das
in
mov
loope
incb
cli
mov
pop
iret
dec
and
or
jge
mov
mov
and
ss
lock
cmp
mov
ljmp
or
lret
mov
mov
mov
cmpsl
add
out
sub
mov
mov
insb
lret
sub
jnp
pop
or
xchg
dec
mov
nop
xchg
mov
cld
add
xchg
jp
bound
jns
aad
loope
sbb
stc
adcl
sbb
scas
jmp
mov
test
jmp
push
add
xchg
push
stc
je
inc
test
js
sbb
je
jne
adc
leave
shlb
pop
insb
movsb
dec
push
mov
lret
mov
mov
add
testb
cmp
jl
icebp
fsubl
mov
psubb
sbb
dec
pop
xor
icebp
aas
test
mov
sbb
ja
jne
pop
pop
xor
jecxz
js
rcrl
movsb
repnz
sub
dec
sbb
lea
into
movsb
scas
inc
arpl
fldl
loop
sub
add
jg
push
ret
mov
lods
push
push
jb
sub
mov
push
mov
push
pusha
sti
push
dec
and
add
jmp
clc
xor
mov
pop
aas
cmp
sti
shrb
dec
sbb
jne
cltd
ss
pop
aam
lods
stos
notl
cmp
lods
movsb
and
xchg
das
pop
insl
inc
clc
scas
push
inc
mov
into
cwtl
xor
fidivrl
ret
jecxz
and
push
lret
pop
call
outsb
ljmp
decb
and
jne
scas
lods
cld
sar
ja
ret
xchg
pushf
loopne
aad
cld
insl
mull
jge
ficomps
hlt
lcall
jle
and
movsb
imul
mov
hlt
fucomi
add
sbb
rcll
popa
xor
xchg
rolb
fdivrl
mov
pop
dec
jmp
adc
adc
out
add
push
sub
pop
and
jl
sub
and
test
sbb
call
test
ds
jno
or
das
cli
sub
push
loop
or
mov
pop
outsb
push
jecxz
sbb
xlat
push
xchg
xchg
loopne
sub
push
test
scas
mov
aaa
adc
mov
or
mov
jo
jg
mov
into
fldl
mov
hlt
inc
cli
push
clc
sbbb
dec
ficompl
xor
cmc
enter
mov
sub
inc
push
frstor
and
inc
mov
jle
cmp
sbb
fdivrs
cmp
sbb
pushf
add
nop
incb
sar
mov
test
jbe
test
pushf
dec
cmp
sub
xlat
jmp
mov
outsl
hlt
out
dec
jecxz
mov
mov
lcall
insb
stos
hlt
dec
inc
pop
jo
and
mov
push
push
and
add
ss
and
inc
mov
mov
adc
sbb
or
jp
lcall
push
sar
popf
cmc
pop
push
repz
mov
inc
push
push
add
pop
add
inc
xorb
dec
outsb
sbb
scas
clc
dec
js
fs
clc
std
lahf
scas
stos
add
xor
mov
mov
jno
sbb
hlt
adc
fdivr
cmp
pop
ret
gs
ja
insl
pop
lock
insl
test
int3
mov
sub
push
cli
jg
out
mov
pop
cwtl
aam
mov
call
fildl
insb
stos
cmc
push
sahf
bound
mov
fiaddl
test
and
mov
cmp
js
xor
adc
repnz
mov
add
mov
lcall
push
cmp
xchg
rolb
icebp
xchg
das
clc
aad
xchg
scas
jb
lea
pop
add
mov
and
push
or
fidivrl
stos
repz
mov
fistpl
loope
sbb
and
das
lods
cmp
sbb
push
aas
imul
mov
mov
rcrl
loope
jl
mov
scas
adc
inc
test
sub
stos
aas
pop
ljmp
mov
mov
sbb
push
shl
cmc
scas
or
xor
ret
test
sti
xchg
add
cli
roll
mov
scas
mov
jle
clc
aam
fstpl
or
mov
mov
mov
add
fisttpl
dec
mov
test
mov
rcrb
pop
mov
or
scas
je
mov
fcomi
inc
out
and
incl
ljmp
mov
add
dec
mov
orb
xor
andl
aad
ljmp
test
imul
ja
outsl
cli
inc
dec
inc
stos
test
sub
clc
adc
mov
push
jge
and
mov
popa
decl
daa
outsb
stos
test
imul
enter
hlt
pop
add
or
ljmp
sahf
push
das
dec
ljmp
sbbb
mov
push
inc
adc
push
popf
or
aad
pop
sbb
pop
sbb
jmp
mov
jp
aad
setp
shlb
mov
push
sarb
add
clc
in
loop
mov
jns
imul
les
and
jg
push
cmp
repz
inc
lods
or
sbb
add
dec
imul
aad
dec
xchg
push
fisubrs
pop
pop
add
iret
int
mov
adc
sbb
mov
lcall
sub
jle
js
shlb
mov
cli
push
push
adc
and
mov
loope
mov
cs
fildl
aad
jle
cmp
inc
adc
jle
jl,pn
mov
insl
clc
scas
imul
sbb
icebp
or
cmp
jb
jg
mov
jmp
sbb
or
dec
fists
jmp
add
stos
pop
mov
lods
clc
aad
movsl
adc
mov
icebp
mov
mov
adc
sahf
cmpsl
insl
cmp
cmp
fisubl
outsl
push
lock
hlt
mov
mov
mov
clc
xor
inc
or
xor
push
inc
mov
push
movsb
movb
fistpll
mov
pusha
sti
loop
adc
or
test
add
cmp
ret
std
push
pop
add
jp
icebp
das
clc
outsl
stos
addr16
ret
fs
imul
outsb
leave
jle
out
ja
sarl
push
out
fiaddl
push
or
mov
ds
pop
or
and
js
push
add
das
mov
cmc
mov
fiaddl
bound
lahf
mov
idivb
pushf
negl
cmp
xchg
fdivr
fdivl
jne
je
in
dec
pushf
and
cs
mov
push
and
fisttps
mov
out
pop
add
lahf
cli
fldt
inc
jns
ds
jle
jl
cmpsl
mov
add
dec
lahf
push
mov
jmp
lcall
lock
adc
int3
dec
adcb
sbb
push
in
push
clc
pop
inc
mov
mov
pop
cwtl
in
sub
lcall
add
cs
inc
xchg
in
loop
sahf
nop
mov
mov
push
jnp
push
cli
test
rolb
pop
scas
cmpsl
aad
jecxz
cli
clc
add
shrl
cmc
push
shrb
jo
stos
jle
pop
packsswb
cmp
mov
loopne
mov
jecxz
cld
cmp
inc
mov
js
test
cli
enter
xchg
mov
dec
lock
xchg
push
sub
dec
or
sarb
push
les
inc
adc
mov
add
mov
jo
lds
adc
mov
icebp
and
sbb
push
jle
frstor
and
loop
in
xor
jo
add
jbe
adc
push
add
cmp
mov
push
fnsave
pop
inc
popa
push
pop
cwtl
sub
mov
data16
pop
testb
pop
mov
stc
dec
xor
bound
addr16
lret
rclb
or
fiadds
or
pusha
xor
ret
xchg
call
dec
pop
outsl
mov
sub
xchg
rclb
push
cmpb
fildl
iret
mov
clc
insl
ljmp
imul
sub
cmpsb
mov
mov
orl
push
xor
add
mov
clc
mov
jl
cmp
push
leave
scas
fwait
jmp
sub
leave
pop
mov
adc
jg
inc
dec
fimuls
xor
lods
add
addb
pop
dec
mov
adc
mov
sbb
sub
daa
pop
add
and
cli
bound
imul
sbb
es
push
out
ds
push
inc
fnstenv
lea
mov
shr
cmp
loopne
das
add
sub
ds
mov
sbb
mov
sub
push
xchg
mov
jg
inc
movsl
pop
repnz
sub
push
xor
sub
jno
or
inc
mov
add
rcrl
loop
rcrb
orl
imul
rcrl
imul
stc
lcall
jg
je
pop
pop
add
jne
sbb
and
or
nop
cmp
mov
xchg
hlt
fisttpll
sbb
sbb
arpl
adc
mov
les
mov
sub
mov
cmp
jns
in
xchg
lods
fsubl
or
incl
adc
push
daa
imul
push
int3
stos
dec
movsl
pusha
cmp
ljmp
dec
mov
pop
mov
dec
mov
add
add
aad
popa
jecxz
ret
in
aaa
or
pop
dec
push
xlat
xor
std
lahf
sbb
pop
push
pop
leave
pop
shrl
sub
add
push
loop
fidivrs
lcall
cs
lret
outsl
mov
shrl
push
fs
mov
imul
or
push
mov
xor
fldcw
pushf
std
mov
jo
jmp
jge
pop
hlt
cmp
das
xor
add
add
fcoml
stos
xchg
pop
push
call
and
jnp
inc
push
stos
or
aam
xlat
mov
cmp
sub
cmp
sub
xchg
loop
cmp
xchg
shlb
ja
shrb
lret
dec
mov
test
fwait
es
xchg
pop
pushf
xor
or
adc
repz
lock
dec
xor
movsl
pop
mov
add
mov
mov
outsl
sbb
pop
in
push
pop
and
xchg
scas
bound
push
decl
inc
jnp
bound
dec
add
mov
test
mov
mov
mov
mov
lahf
imul
out
lret
or
mov
ja
ja
inc
inc
pop
cs
incl
sub
mov
ss
shlb
call
cmp
or
pushf
jbe,pt
loop
in
pop
inc
push
adc
sbb
add
shll
cmp
xor
out
mov
loope
faddl
push
gs
or
insl
pop
dec
xor
pop
cwtl
push
mov
mov
dec
add
incl
lock
ja
lods
pop
hlt
cwtl
mov
mov
xor
push
movsl
outsl
xorb
jbe
mov
mov
sub
jmp
mov
hlt
lock
and
lcall
xlat
mov
mov
outsb
add
jb
inc
push
xchg
nop
mov
das
mov
insb
in
cmp
sub
sub
dec
loop
pop
and
jno
insl
jae
cmp
and
ret
push
push
jns
shrb
mov
mov
pushf
sub
hlt
mov
orb
inc
jae
mov
dec
adc
fcmovnu
cli
mov
in
dec
movsl
or
mov
inc
ret
fildll
test
bound
fisubrs
adc
add
mulb
dec
cltd
fwait
cmpsl
jnp
iret
aam
mov
in
ret
push
fcoml
jmp
mov
loope
out
pop
sarb
sub
test
movsl
mov
adc
push
ljmp
mov
or
aaa
pushf
sarb
decl
pop
sbb
mov
mull
pop
js
mov
pop
mov
loop
movsb
add
xchg
pop
jbe
pop
mov
jmp
ss
incl
inc
xchg
inc
jle
and
mov
push
scas
jle
pop
call
jmp
cmpsb
xchg
pop
mov
mov
or
dec
cmp
movsb
sub
mov
jg
aam
push
fstps
pop
pop
enter
cli
jns
shll
and
dec
lods
outsb
adc
ret
aad
das
mov
mov
leave
icebp
invd
inc
mov
shrl
shl
das
aam
sub
in
jg
les
or
mov
mov
adc
out
aam
js
sub
mov
sbb
or
rorb
cwtl
movsb
inc
pusha
xchg
or
jbe
cmp
push
dec
int
outsb
jge
sub
or
stc
popa
lock
stos
movsl
mov
pop
mov
ja
pop
push
pop
inc
test
jb
insb
push
lea
pop
sbb
or
mov
decl
jmp
divl
shr
bound
fisubl
aad
adc
pop
pop
incl
imul
adc
je
xchg
andb
inc
aam
aad
ret
shlb
lcall
shlb
out
dec
stos
pop
dec
in
sbb
pop
pop
inc
push
cld
mov
pop
imull
out
bound
mov
pusha
sub
jg
cli
ljmp
mov
jno
pop
mov
add
xchg
das
leave
outsb
std
mov
push
pop
mov
sub
mov
mov
xchg
leave
ret
pop
jno
js
xchg
movsl
mov
mov
pop
or
fwait
mov
cmp
aam
ja
or
mov
jp
cmpsl
je
and
sub
adc
pop
shll
sbb
xor
pop
mov
or
shr
mov
or
mov
fimull
subl
test
out
andb
mov
pop
mov
test
xchg
mov
pushf
pop
mov
std
idivl
dec
fdivrs
out
jmp
add
pop
in
sub
shl
cs
inc
pop
cltd
push
scas
loopne
or
pop
mov
insb
aam
inc
loop
sub
jmp
clc
or
mov
or
mov
in
stos
xor
sbbb
dec
jp
jo
outsb
push
pop
pusha
xchg
push
and
std
add
inc
add
popa
pop
aas
ficomps
mov
adc
jl
xchg
testl
mov
icebp
pop
lret
jp,pn
dec
pop
scas
js
gs
push
into
sbb
push
cwtl
lret
lods
sarl
enter
ljmp
mov
mov
out
jp
stos
nop
decl
fucomip
rolb
xor
fisubl
push
rolb
push
outsl
loop
mov
or
scas
mov
xchg
xchg
pop
mov
notb
lods
add
dec
xchg
je
sbb
inc
filds
scas
call
mov
cmc
outsl
into
shll
sbb
int3
mov
repz
jl
test
push
push
lret
fimull
inc
bound
outsl
ss
enter
in
je
push
clc
add
pop
or
scas
insb
pop
jmp
lock
sbb
add
mov
je
hlt
sbb
add
ljmp
scas
xchg
xor
scas
insb
push
inc
inc
ret
call
inc
ljmp
gs
js
mov
std
xchg
aad
lea
mov
add
pushf
pop
mov
cs
loopne
jge
insl
outsb
scas
sbb
push
sub
pop
in
mov
cs
rcrl
sub
mov
xchg
setp
addr16
je
xchg
testb
push
lret
add
insb
loop
or
sar
sbb
fists
xchg
mov
dec
jle
or
mov
xchg
stos
rcll
test
fdivs
aaa
cmp
mov
jb
sbb
nop
xchg
lcall
and
push
je
int3
jle
pop
outsl
jae
push
mov
clc
int
push
inc
jecxz
pop
lcall
popf
movsb
or
inc
xor
mov
mov
lcall
shlb
xchg
movsb
and
jmp
dec
in
jno
out
movsl
mov
decb
out
ljmp
push
or
sbb
out
cs
les
jp
sub
cmpsl
in
sbb
call
cli
lcall
jle
call
aam
fucom
mov
mov
pop
or
xchg
aad
lea
and
clc
cmpsb
fistpl
out
push
dec
cwtl
or
push
push
jg
jne
imul
ret
bound
jp
jns
flds
orb
mov
dec
leave
cmp
stc
mov
out
inc
fnsave
subl
adc
cmpsb
into
add
incl
inc
mov
test
sbb
pop
out
xor
cmc
negb
dec
fldt
lds
sub
dec
push
call
jne
out
shll
inc
aam
sbb
pop
pop
into
ljmp
pushf
mov
sbb
inc
mov
mov
pop
repz
cli
inc
ja
push
sarb
add
movsl
test
test
jb
mov
stos
jno
mov
mov
and
loopne
cld
je
push
inc
incl
movsl
je
movb
jg
inc
push
out
push
add
das
jbe
int3
mov
sbb
loop
xorb
jmp
hlt
mov
push
ret
xchg
dec
or
jnp
pop
repz
pop
fcomip
push
mov
mov
seta
push
repnz
sti
fwait
mov
xlat
icebp
pop
inc
lods
mov
mov
ds
into
hlt
jo
jmp
ljmp
lret
inc
fs
xorb
mov
fs
mov
std
cmp
push
jmp
sub
sub
insb
add
or
test
hlt
push
into
xchg
fildll
hlt
dec
adc
mov
xchg
dec
inc
je
mov
ds
sbb
jecxz
mov
aas
mov
mov
mov
jl
add
xor
int3
lea
mov
or
ljmp
decb
fisubs
and
add
and
jg
add
sbb
test
ret
cmp
lahf
and
clc
jp
mov
push
fdivl
mov
ljmp
leave
stc
fst
pop
adc
pop
gs
sbb
out
or
push
mov
and
add
push
jp
push
pop
jecxz
ss
mov
in
rolb
out
in
dec
incl
mov
jg
mov
orb
add
mov
xchg
js
add
xlat
decl
push
sub
pop
lods
cmp
add
pop
push
add
push
insl
repnz
push
push
jae
mov
mov
push
pop
mov
add
dec
cld
pushl
std
sbb
insl
das
insb
jle
and
addr16
fdiv
dec
pop
mov
and
clc
jge
aas
inc
adc
mov
lret
lock
add
adc
xchg
sub
pop
jle
mov
inc
rcrb
es
and
aaa
cld
decl
pop
dec
les
mov
outsl
cmp
pop
cwtl
add
add
inc
ret
adc
push
jnp
into
push
dec
mov
rorb
adc
mov
xchg
inc
xchg
test
cld
mov
pop
lret
loop
pop
or
ljmp
push
jne
int3
daa
add
stos
and
roll
repnz
pop
sbb
loope
mov
stos
lock
std
mov
push
mov
inc
and
mov
pusha
push
jg
and
cmp
loop
pop
jp
addr16
bound
mov
jp
add
xchg
adc
adc
js
pop
add
incl
pop
stos
cmp
idivb
lret
mov
dec
test
out
out
dec
jno
into
fbld
lcall
jle
or
clc
jp
daa
or
jo
es
cs
mov
add
addr16
cld
das
int
scas
xor
sub
scas
mov
int3
sbb
test
push
adc
neg
inc
lock
out
data16
add
je
imul
push
mov
decl
mov
jmp
stc
ret
push
ficoml
rorl
sub
cli
ret
popl
pop
add
push
dec
cwtl
mov
sbb
rclb
cmp
mov
or
push
lcall
sbb
inc
jl
push
sub
mov
out
push
ret
repz
and
push
repz
mov
pop
jmp
jp
shl
bound
pop
mov
inc
nop
jl
pop
dec
clc
mov
ds
push
mov
test
js
mov
cmp
xchg
inc
mov
mov
fisttps
loopne
mov
imul
mov
prefetchw
mov
mov
stos
inc
outsb
sbb
pop
xor
or
enter
aam
fadds
push
jno
mov
js
jle
add
jbe
mov
bound
sahf
fnstcw
aas
lret
roll
js
test
lods
lods
lods
sub
xchg
nop
push
cs
xchg
sbbb
push
mov
jno
fnsave
xchg
pop
cmp
push
xlat
hlt
pop
fistps
mov
shrl
xor
add
jg
pop
mov
pop
nop
js
orb
xor
inc
push
sbb
test
iret
push
add
mov
mov
cltd
sbb
stos
test
fadd
or
cld
pop
cli
in
addb
pushf
addr16
fwait
popa
cld
cs
aas
jl
aad
and
mov
push
sbb
jge
xchg
int
cmp
in
loop
dec
cld
jmp
fwait
or
jle
scas
into
iret
dec
push
mov
pop
xchg
mov
ljmp
xor
xchg
mov
enter
inc
leave
mov
lret
sar
pop
pop
iret
cwtl
dec
outsl
test
push
insl
andb
aas
and
add
add
scas
call
push
hlt
push
rcr
aas
mov
inc
inc
lea
inc
lcall
fldcw
lret
jb
sar
cmp
lea
incb
repnz
mov
popf
aad
fs
xlat
jg
and
movsl
enter
shll
sbbb
and
cwtl
aad
sub
pop
in
data16
push
stc
ret
cmpsb
ljmp
test
cmp
call
iret
xchg
mov
subl
mov
mov
xorb
inc
je
pusha
xchg
jle
mov
mov
dec
insl
jns
mov
mov
mov
gs
jg
dec
jl
pop
fdivrs
mov
pop
test
xchg
hlt
pop
push
sti
jne
sahf
jae
lock
dec
cmp
mov
loopne
sub
shlb
or
cmp
jno
ss
incb
mov
inc
hlt
and
repnz
lods
adc
mov
jno
test
sti
pop
push
xchg
ret
pop
or
bound
and
pop
mov
push
sbb
dec
jbe
lods
pop
sbb
push
pop
push
sar
pushf
jle
roll
mov
jle,pn
dec
jp
xlat
sbb
push
in
loop
aaa
mov
sbb
hlt
ljmp
lcall
adc
jecxz
pop
mov
popf
aas
test
dec
push
mov
jg
in
xor
mov
clc
cld
xor
shll
aaa
push
inc
pop
imul
ljmp
inc
scas
mov
es
or
bound
mov
jg
lds
enter
push
mov
lock
xchg
mov
incl
clc
clc
popa
sub
adc
push
incl
sub
loope
and
sub
fcomip
push
pushl
dec
hlt
cmpsb
jo
inc
int3
hlt
cmp
loop
loop
cmp
xchg
pop
push
push
hlt
faddl
jmp
ret
outsb
fadds
cltd
push
mov
mov
lock
jmp
cli
cmpsb
fwait
sub
mov
xchg
lcall
dec
mov
movsl
lock
mov
loope
or
mov
jle
mov
popf
sub
std
jmp
dec
sub
cmpsb
aad
sbb
cld
aam
daa
in
add
inc
adc
movsl
inc
ror
inc
decb
cs
cli
and
das
sub
push
nop
and
lcall
fcomps
dec
scas
inc
sbb
rcrb
inc
enter
scas
loope
pop
mov
pop
dec
mov
cmpsb
cmc
mov
mov
dec
js
fs
and
lcall
pushf
mov
or
mov
mov
icebp
push
stos
loope
pushl
push
aad
pop
inc
cmp
dec
push
pop
stc
inc
cs
aaa
dec
cli
lcall
and
outsb
sub
movsl
inc
xlat
add
loop
pushl
sar
and
sbb
pusha
push
in
mov
mov
mov
mov
cmp
inc
or
cltd
inc
shll
mov
sarb
mov
sub
sbb
pop
ret
xchg
dec
dec
add
push
aam
or
fidivl
outsb
int3
fdivl
mov
mov
sub
jno
mov
inc
sar
rcl
pop
dec
push
or
xlat
add
dec
mulb
insb
pop
jl
mov
sub
lahf
into
jmp
loop
jo
mov
sbb
mov
xchg
pop
in
into
pop
adc
rclb
dec
popa
call
movsl
push
jg
cmc
dec
les
std
inc
pop
jbe
pop
test
std
aas
adc
ja
gs
dec
les
std
aam
fsubs
ja
and
nop
inc
pop
cli
dec
xchg
mov
data16
addr16
pusha
jnp
hlt
fisttps
push
jg
test
push
fnstsw
push
ljmp
aam
mov
shl
loope
xor
mov
add
loop
repz
cmp
push
pop
lock
or
mov
cmpsb
push
pop
ds
adc
scas
xchg
cmpsb
pop
and
cld
out
mov
test
pop
cli
mov
stc
push
adc
imul
lea
inc
fdivrs
or
lea
in
pop
scas
sar
mov
fmul
lds
out
cmp
dec
dec
ret
mov
inc
je
mov
fidivrs
fists
jnp
aas
je
test
lcall
adc
stos
bound
jbe
subl
outsl
pushl
pop
mov
xchg
lds
xor
sub
adc
inc
mov
xchg
ds
cld
adc
aaa
call
inc
fldl
mov
nop
jmp
popf
push
fsin
mov
xchg
clc
sub
sbb
push
adc
mov
push
mov
dec
add
scas
jg
addr16
pop
fnsave
jp
mov
mov
or
inc
hlt
xor
mov
out
cmp
jmp
mov
mov
addb
mov
repnz
pop
or
xchg
inc
jp
popa
adc
les
jle
fisubs
lret
dec
mov
mov
out
imulb
add
or
rol
push
mov
mov
aaa
mov
sbb
or
ret
movsb
test
lcall
out
outsb
ljmp
cli
cmp
pop
mov
cmp
mov
negl
ds
jns
push
push
pop
sbb
in
daa
cmp
repnz
mov
data16
mov
pop
or
add
mov
and
int3
insb
or
arpl
scas
out
lret
aam
sbb
and
pop
pop
inc
loopne
shl
enter
mov
mov
push
rclb
or
outsb
ret
loop
pop
mov
push
fnstcw
inc
and
ljmp
or
mov
leave
cmp
repnz
pop
jb
jg
dec
testl
or
mov
stos
test
mov
jecxz
mov
add
fidivl
test
faddl
or
into
pop
xchg
decl
push
stos
std
fisttpl
mov
push
jmp
call
and
fs
mov
pop
cld
out
pop
je
inc
addb
clc
or
gs
sbb
mov
call
mov
shlb
fcoms
lods
imul
ja
loopne
daa
xor
bound
imul
repz
dec
enter
sbb
clc
rcl
push
adc
jne
call
or
aas
and
pop
push
cwtl
mov
ss
jp
mov
loopne
rorb
pop
jge
xchg
adcb
lret
dec
ja
fisttps
and
push
and
push
push
or
inc
pop
add
push
dec
aad
ljmp
sbb
lcall
jnp
insb
decl
add
and
sbb
inc
jp
jno
inc
mov
sbb
mov
sub
sarl
xchg
outsl
je
cmp
cld
cmp
cwtl
cmp
std
jo
pop
cmp
sbb
in
std
or
dec
dec
pop
insb
ljmp
pop
cli
ss
jl
cmpsb
es
mov
icebp
inc
cmp
ror
imul
insl
fimuls
mov
lret
inc
push
mov
mov
cmp
mov
adc
pop
stos
lds
mov
dec
pusha
and
pop
xchg
mov
inc
pop
jbe
stos
neg
jp
xor
cmc
iret
mov
mov
inc
mov
je
fcomip
lar
insb
aad
mov
pusha
sbb
mov
call
cmp
inc
mov
dec
shlb
dec
aad
xor
mov
outsb
jle
inc
xchg
fbld
jg
pop
jecxz
jmp
mov
enter
mov
repz
xchg
je
pop
inc
rorl
out
mov
popa
pop
mov
jp
cmp
adc
fdivl
push
pop
dec
incl
or
repnz
cmp
std
mov
pop
cmpsl
sub
dec
add
jb
mov
inc
clc
mov
push
clc
jb
add
xor
fisubl
push
ret
add
mov
leave
jo
xchg
jns
adc
xchg
cwtl
pop
sub
test
cli
xor
sbb
add
ret
insb
mov
sub
pop
lock
idivb
inc
cld
es
test
add
cmp
jo
repnz
mov
imul
and
stc
pop
data16
adc
insl
mov
shrb
lds
mov
mov
pop
aam
lcall
jl
jg
cltd
js
add
sub
loop
stos
or
lcall
mov
cli
test
clc
adc
aas
cmc
scas
lcall
repnz
jo
test
adc
jg
add
mov
cmpl
mov
inc
xchg
loope
mov
sbb
or
sub
adc
cmc
mov
push
incl
sbb
cmp
pusha
ja
movsb
fwait
incb
push
out
repz
sbb
push
jmp
jle
and
mov
push
xor
mov
cmp
in
movsb
hlt
lret
push
mov
mov
add
jg
stc
test
xchg
jl
out
xor
ret
fstpl
ds
pop
mov
push
adc
or
and
pop
jl
scas
cli
inc
jae
mov
sbb
add
scas
jo
lcall
mov
js
sub
std
push
jg
cmp
cmpsb
mov
pop
ds
icebp
mov
test
adc
stos
push
sbb
int
xchg
xor
xchg
push
xchg
test
mov
push
and
jp
xor
gs
dec
add
ret
adc
jne
outsl
js
xorb
pop
jecxz
fidivrl
inc
mov
orb
scas
push
cs
icebp
cmp
ja
xlat
push
bound
push
ljmp
je
jmp
ficompl
notl
shrl
bound
or
stc
dec
sar
inc
add
movsb
repz
loop
mov
inc
adc
push
inc
stos
pusha
cld
jo
outsb
cmp
add
jb
jb
mov
mov
popf
xchg
xchg
push
call
push
sub
sti
adc
pop
popf
fstps
adcb
jg
hlt
mov
and
mov
sbb
in
mov
jecxz
push
fcmovb
add
addr16
cli
push
push
ds
cmp
mov
mov
pusha
enter
or
xchg
push
pop
pushl
mov
jp
mov
pop
lods
jns
mov
fmuls
push
jge
popa
or
in
lock
cmpsb
adc
clc
decl
pop
sbb
mov
lahf
aaa
popf
adc
int
arpl
stos
imul
push
xchg
popl
adc
imulb
je
std
call
bound
push
pop
mov
push
dec
sbb
xchg
add
in
imul
out
cs
add
mov
nop
shrb
sub
mov
jl
bsf
dec
xor
inc
aam
ret
subb
and
movsb
hlt
pushl
in
outsl
inc
mov
jb
in
dec
xorb
cmp
and
mov
ret
orb
inc
loopne
int3
rcrl
mov
mov
jbe
fs
mov
cmpsl
inc
mov
in
movsl
mov
loopne
push
call
out
or
xchg
test
sbb
daa
shl
fdivrl
test
in
test
mov
or
pop
call
mov
push
int3
cmpsb
out
mov
pop
ljmp
popa
push
add
or
lcall
shrb
js
cmp
dec
lock
add
push
mov
push
dec
gs
ret
add
and
push
and
ret
stos
decb
push
mov
mov
icebp
push
pusha
pop
in
mov
movsl
mov
int3
push
mov
cmp
mov
loopne
aad
inc
in
in
leave
add
and
fstl
push
pushf
push
sbb
fwait
push
aaa
es
jns
stos
ret
mov
mov
outsl
clc
mov
add
lcall
mov
jb
addr16
sbb
popa
std
in
xor
jno
xchg
adc
aam
xchg
dec
cltd
dec
mov
mov
jmp
fsubl
mov
fdivrp
jbe
jmp
arpl
addl
push
xchg
out
fimull
jb
filds
int3
daa
pop
or
inc
fs
pop
stos
faddl
jecxz
std
xchg
sbb
cmc
aad
pop
mov
scas
mov
cltd
or
push
dec
jl
sbb
add
or
pushf
dec
decl
lock
jp
or
iret
adc
subb
push
popa
jbe
sar
aaa
mov
sbb
ret
fdivrl
mov
xchg
lds
pushf
jge
cmc
sbb
aaa
ja
xor
pop
push
pop
icebp
or
stos
push
cld
sbb
xchg
adc
sbb
in
jmp
test
sbb
shrl
xchg
pop
ljmp
mov
jle
pop
jo
movsl
imul
mov
xor
mov
push
repnz
mov
cld
push
sti
repnz
or
push
fadd
add
pop
mov
sbb
dec
push
mov
sbb
cltd
sub
stos
in
adc
loopne
pusha
clc
jmp
dec
adc
jmp
scas
pop
pop
daa
push
incl
lea
pop
data16
ficomps
xchg
jns
gs
ret
xchg
pop
jb
or
decl
sbb
daa
mov
and
out
sbb
mov
xchg
sbb
pop
pop
jo
or
adc
mov
lock
lock
push
and
fst
stos
xor
movsl
xor
jns
shlb
pop
hlt
ljmp
push
xlat
dec
jb
jl
fcoms
sti
push
repz
sub
jno
or
std
jmp
xchg
clc
sbb
push
push
hlt
mov
hlt
mov
adc
jbe
push
sub
jecxz
xor
int3
jae
add
fnsave
mov
test
push
cmpsb
das
stos
adc
movsl
ds
jnp
fsubrs
nop
icebp
add
add
js
lret
dec
inc
inc
cltd
adc
sbb
push
pushf
pop
aas
clc
xor
fstp
leave
outsl
push
add
std
outsl
cli
dec
add
dec
push
stc
or
pop
insl
leave
jl
cltd
mov
pop
sbb
pop
lock
jecxz
mov
les
aad
pop
cmp
int3
ljmp
je
adc
adc
sub
ss
clc
pop
and
aas
sbb
mov
idivl
ds
jbe
scas
lret
jp
pop
mul
and
into
or
lcall
dec
arpl
mov
clc
inc
sub
adcb
pop
js
xchg
rolb
dec
shrl
xor
xor
and
cmp
sbb
dec
xchg
mov
push
pop
cwtl
hlt
mov
push
pop
adc
or
pop
sub
insb
jmp
push
lret
fcomip
aam
sbb
inc
pop
mov
outsb
mov
lods
out
imul
push
test
les
mov
cmp
pop
ljmp
cmp
inc
cli
das
sbb
inc
sbb
mov
mov
addr16
test
enter
xchg
int3
dec
stos
mov
or
out
jmp
add
aaa
inc
outsl
loop
enter
lock
push
and
or
xchg
lea
push
imul
cmp
data16
pop
test
hlt
and
xor
rcl
loop
push
cld
fwait
push
push
pop
mov
shll
jl
ret
scas
lock
mov
add
mov
pop
jo
jnp
jl
ljmp
mov
test
xchg
jo
mov
jo
in
xor
pop
iret
pop
test
addr16
fdiv
das
mov
adc
outsb
fidivs
jae
aam
ret
testb
imulb
xor
fbstp
sub
test
push
std
sbb
xor
pushf
adc
sub
xchg
repnz
mov
aas
or
inc
stc
pop
pop
push
jle
jne
les
pop
add
or
sbb
xor
inc
aad
pop
mov
pop
cmp
fmull
fmulp
imul
andb
sub
xchg
jns
mov
decl
orb
sbb
fcmovb
fdivr
and
sbb
ljmp
or
xor
dec
fxch
fwait
and
loop
cli
xor
jle
inc
stc
push
push
jg
out
adc
dec
in
dec
sbbb
fisttps
lock
in
cmp
pop
flds
aaa
mov
mov
adc
loopne
push
add
mov
imull
addb
in
mov
mov
pushf
inc
insl
ds
js
sub
jecxz
stos
xchg
out
mov
mov
mov
cs
xchg
into
push
dec
ds
vcvtss2sd
or
imul
ss
leave
in
mov
and
adc
loop
movsl
pop
xchg
sub
imulb
aaa
cld
mov
inc
mov
pop
and
xchg
cmpsl
and
out
pop
mov
mov
push
dec
jg
mov
mov
repnz
lock
out
cwtl
xchg
mov
push
pop
stc
and
mov
xchg
sub
popl
outsb
in
shlb
ficoml
movl
mov
push
or
pop
xor
pop
std
fidivl
daa
mov
arpl
das
lods
add
cli
test
or
xor
movsl
pop
pop
and
clc
testb
cs
push
incl
outsl
sbb
loope
push
in
pop
hlt
test
ja
xchg
cmpsb
mov
mov
mov
adcb
out
push
add
pop
popf
pushf
pop
jp
dec
arpl
jl
pop
fisttps
loop
adc
inc
outsl
fiaddl
dec
inc
in
addl
dec
xchg
jae
call
in
xchg
mov
pop
cmpsb
inc
cs
in
push
xchg
jg
fs
nop
dec
pop
jmp
hlt
decl
nop
test
pop
filds
xchg
cltd
mov
ljmp
inc
out
mov
je
mov
repnz
push
test
repz
push
lds
je
push
and
sar
add
out
cmpb
rep
jno
and
jg
flds
std
jmp
bound
jno
mov
cld
push
mov
jb
into
xchg
dec
xchg
mov
cmpsl
call
mov
jl
outsl
clc
testl
or
push
xchg
xchg
clc
mov
cmp
stos
dec
sbb
lret
es
movsb
cmp
ss
les
and
fcmove
insb
mov
aas
jle
dec
pop
je
leave
xabort
add
mov
inc
out
out
cmpsb
or
mov
insl
jge
mov
inc
int3
xor
jl
out
hlt
outsb
adc
mov
imul
mov
push
xchg
fdivrl
outsl
dec
ret
pop
sub
add
bound
pop
out
test
dec
add
mov
filds
insb
cmp
and
pop
xchg
lahf
sarb
rcl
lock
scas
push
enter
fs
inc
lods
aaa
sarb
xchg
lcall
and
xchg
adc
mov
cs
mov
das
mov
and
rcl
push
pop
js
push
int3
hlt
aaa
mov
jbe
or
mov
xchg
clc
add
imul
mov
test
jg
js
scas
add
les
jns
fsubs
insb
test
test
ss
or
arpl
dec
pop
test
into
test
loopne
incl
add
out
push
add
sar
data16
sub
lods
cli
fcos
in
pusha
sub
mov
xor
stos
push
addr16
pop
adc
fdiv
ret
movsl
in
pusha
lods
xchg
mov
and
push
inc
scas
dec
cmp
pop
in
xor
cmpsb
xchg
sbb
cltd
clc
test
test
push
mov
gs
pop
les
iret
addl
or
lock
clc
push
and
mov
lea
inc
into
pusha
aaa
mov
xchg
sbbb
mov
sub
and
push
pop
add
sbb
jle
lods
or
dec
enter
push
aas
pop
inc
inc
xor
jp
bound
clc
stos
divl
jecxz
or
xchg
subb
jecxz
loope
jle
movsl
js
scas
cli
outsb
xchg
sbbl
pop
lea
andl
dec
xchg
xchg
outsl
cmp
mov
mov
icebp
or
fwait
push
je
inc
or
jle
pop
sbb
inc
fldcw
sbb
sar
mov
jnp
imul
movsb
fidivs
inc
dec
sub
inc
movsl
loopne
es
loop
jl
mov
push
lcall
fcmovbe
ret
xchg
adcl
inc
adc
outsl
mov
bound
ds
repz
in
or
mov
ja
inc
loope
fcoml
js
pusha
lea
ss
push
cmp
mov
push
popf
pop
out
aaa
jl
test
int
test
xchg
push
add
dec
cmpsb
stc
lock
jg
push
adc
and
lock
nop
sub
sti
out
pop
icebp
das
rorb
cmp
loopne
test
mov
jae
or
in
scas
adc
repz
sub
lcall
mov
adc
in
push
pop
pop
inc
rclb
sbb
hlt
pop
out
and
sbbb
push
mov
xor
hlt
pop
mov
inc
mov
pusha
repnz
sbb
fidivs
nop
and
je
jns
sahf
jl
dec
sbbb
bnd
xor
stos
sahf
popf
es
and
mov
rcll
mov
js
stc
add
inc
push
xor
sbb
test
cmc
ja
sbb
out
les
lahf
call
std
pop
cmc
mov
cmc
imul
mov
or
mov
std
jg
test
inc
sbb
xor
in
mov
das
iret
sub
xlat
scas
push
ret
sub
inc
xlat
fcomip
sub
sub
sbb
mov
or
ja
mov
leave
idivb
cwtl
aad
sbb
addr16
mov
jnp
loop
scas
jp
pushl
lea
rcrb
adc
loope
xchg
xor
sub
and
push
push
out
mov
pop
and
hlt
je
mov
repz
lret
xchg
pop
xor
or
and
sahf
stos
mov
push
mov
jb
das
imul
call
subb
jge
push
loopne
push
cmpsb
sub
pop
jbe
sub
jecxz
sub
outsb
push
jo
adc
or
mov
push
cmp
stos
test
fcmovbe
adcl
inc
imul
fcomps
xlat
sub
mov
outsl
mov
in
xorb
aam
mov
jo
mov
jl
push
sub
jmp
fsubl
lds
add
movsl
and
ss
rcl
inc
adc
rolb
addr16
and
inc
aad
movsb
mov
push
das
stos
stos
xchg
add
std
in
in
sub
pushl
lea
push
push
in
push
push
lea
push
lea
push
mov
cld
hlt
push
push
push
call
leave
ret
imul
lock
js
add
in
push
insb
js
call
jo
dec
int3
mov
iret
mov
push
lock
inc
inc
mov
call
mov
js
clc
push
push
push
clc
not
fisubrs
imul
or
std
sub
pushl
adc
sbb
inc
adc
jmp
dec
sbb
neg
inc
push
push
adc
testb
sub
fisubrl
imul
mov
mov
sahf
insb
push
out
mov
dec
or
and
call
jne
jmp
rorl
dec
ss
mov
pushl
gs
stos
out
inc
dec
sbb
mov
neg
not
sbb
jmp
fistpll
sub
js
jo
mov
dec
loopne
cld
sbb
mov
hlt
inc
outsb
push
sub
jnp
addl
xor
fimull
in
call
jmp
add
dec
add
push
dec
inc
dec
sub
jmp
fmuls
jmp
fwait
idiv
push
rcrl
push
inc
jmp
addl
sbb
call
mov
out
add
push
pop
fcomp
adc
loopne
dec
cmp
sub
outsb
push
mov
dec
cmp
btc
inc
mov
sbb
call
mov
dec
sbb
adc
neg
add
jmp
or
sbb
adc
dec
popf
std
fistpll
in
sbb
subb
jae
call
fsubrl
pop
aaa
or
push
fistpll
mov
imul
jae
push
adc
mov
push
sbb
xlat
mov
cli
jmp
popa
sbb
testl
leave
ret
dec
sbb
pop
cld
or
jmp
movl
inc
aas
inc
in
push
push
mov
hlt
clc
push
outsl
je
mov
insb
push
cmc
loopne
aas
jle
dec
imul
push
xor
xchg
cmpsb
sbb
mov
xor
pusha
js
bsr
push
push
push
dec
xor
push
call
push
das
ss
jmp
andl
push
psrld
dec
andb
push
jg
cld
call
popa
or
pop
jno
fwait
dec
mov
push
lea
aaa
outsl
das
jp
jno
inc
pushf
or
inc
add
jmp
fwait
lods
inc
add
sub
test
andl
mov
fimull
pop
ret
outsl
jno
jne
mov
sub
xchg
dec
popl
arpl
jg
mov
call
sub
push
xchg
mov
ds
rcrl
push
inc
push
call
jb
scas
fisttpl
push
outsl
push
or
sub
aaa
push
jmp
sub
repnz
add
es
neg
adc
add
mov
lret
imul
add
inc
gs
add
call
push
js
adc
inc
not
jmp
dec
mov
imulb
or
not
sub
jmp
and
pushl
jl
lock
push
push
shl
add
sbb
imulb
pop
push
testl
jae
jmp
add
icebp
popa
mov
ljmp
bound
push
xor
jg
std
jo
js
xor
pop
subl
push
jno
push
dec
or
xor
mov
pop
cmp
push
lcall
popl
enter
lock
cmp
test
push
inc
je
ret
popa
lock
call
mov
fwait
mov
sub
data16
repz
cmpsb
sbb
xor
add
xor
ja
je
cmpsb
jbe
dec
or
in
inc
pop
xchg
pop
cwtl
ret
adc
sub
push
xchg
sub
mov
jbe
push
int3
pop
jo
and
rorl
ss
test
cmp
xor
dec
dec
pop
add
or
into
add
mov
std
std
adc
xchg
dec
add
dec
xor
dec
nop
leave
movsb
cmp
btc
cs
shll
adc
pop
icebp
xor
lds
std
nop
or
and
push
loopne
dec
cwtl
cli
jmp
out
push
clc
cltd
in
push
icebp
mov
outsl
jb
popa
pop
sbb
test
push
sub
in
in
call
push
enter
push
pop
mov
push
push
shlb
xchg
sarl
loopne
dec
push
push
outsl
inc
aaa
cmc
incl
mov
push
sbb
push
dec
add
decl
push
dec
ficoml
sarl
dec
push
es
xchg
lret
bnd
xchg
push
out
xor
mov
dec
xor
call
stos
mov
push
dec
call
imul
rcll
mov
add
orl
inc
les
gs
scas
js
dec
mov
adcl
in
cmc
stos
push
test
repz
cmpsb
add
mov
push
or
jnp
stos
xor
ret
arpl
ret
cmp
sbb
or
pop
ret
push
js
loop
inc
imul
mov
push
arpl
je
fisubs
sub
je
mov
mov
popa
loope
add
push
pop
dec
bound
xor
mov
jne
add
imul
bound
push
pop
sbb
mov
loope
aam
test
sbb
lock
lret
adc
sbb
jmp
xor
adc
cli
sub
sbb
in
call
jmp
jge
sbb
inc
jmp
lock
inc
sub
popl
cmp
mov
icebp
pusha
or
loopne
jns
add
jl
push
xor
fiaddl
sarl
enter
and
mov
jg
jno
fwait
or
mov
insl
lods
adc
jge
sbb
imul
or
ljmp
js,pt
and
pusha
dec
sbb
loop
fdivs
negl
not
sbb
ret
sbb
jo
data16
addr16
xor
push
outsb
cmc
cmc
imul
dec
xor
xor
loopne
fwait
dec
xor
jge
cs
sbb
jle
mov
pusha
jecxz
test
fidivl
cmp
shrl
or
loope
and
push
mov
adc
add
sub
mov
sub
aam
inc
aaa
inc
and
pop
fdiv
jbe
xor
pushf
inc
cs
dec
out
lahf
xchg
add
inc
push
dec
mov
sub
dec
jmp
sub
dec
inc
push
jmp
aaa
mov
add
dec
sub
inc
movsb
dec
sub
jnp
repnz
add
ret
cmp
sub
add
inc
ja
pop
mov
inc
push
ss
add
subl
inc
xchg
lock
add
lock
loopne
jmp
inc
sbb
add
mov
add
push
ljmp
scas
call
pop
pusha
lds
stc
pop
lods
clc
sbb
movsb
rorl
call
loop
rclb
testl
pop
mov
or
cwtl
add
jmp
jg
bound
jns
xchg
jno
out
push
int
lods
ret
inc
inc
imul
push
dec
outsl
js
adc
fcoms
mov
sub
add
dec
add
mov
fimull
pop
dec
and
mov
inc
cmpsb
int
jns
jo
ss
jbe
or
sti
subl
adc
arpl
push
pusha
clc
jno
arpl
iret
and
mov
xor
jp
cld
pop
dec
mov
add
ss
bound
fidivrl
pandn
clc
adc
adc
and
andl
sahf
call
ret
add
push
push
push
pop
fs
ja
sub
xchg
xchg
mov
inc
loope
jmp
cmpsl
sub
enter
pop
jo
sub
int3
adcb
sahf
sub
push
hlt
mov
in
jmp
rolb
ja
jno
mov
in
loopne
imul
movsl
cmp
loop
rolb
xor
js
push
das
outsl
xor
dec
fadds
push
pop
pop
stos
or
dec
xor
pop
gs
ds
inc
push
btsl
and
sbb
cli
ljmp
rcrl
cmp
inc
enter
inc
push
push
sbb
in
dec
mov
iret
clc
movsl
jecxz
push
aad
lcall
out
push
push
imul
sahf
inc
jo
mov
popa
push
push
popf
adcl
dec
es
inc
adc
sub
call
or
push
lret
rcr
cld
push
pushf
cmpsb
gs
outsb
bound
in
adc
aad
outsl
jo
call
add
test
adc
ljmp
cmp
push
push
inc
dec
jge
cld
add
imul
ja
push
push
sbb
or
ret
orl
fdivl
shrb
dec
cmpl
mov
push
cmp
cli
mov
sbb
rorb
push
test
out
sbb
add
call
inc
fs
mov
nop
leave
fsts
ja
aaa
rcrb
clc
and
add
pshufw
push
sti
fs
dec
push
mov
fld
xchg
fwait
neg
dec
mov
xchg
insb
imul
xchg
dec
sub
push
scas
in
jbe
dec
subl
push
xor
outsl
mov
inc
mov
arpl
mov
mov
pop
pop
add
icebp
dec
xchg
fsubl
decb
inc
cmp
jne
sub
sbb
punpckldq
bound
push
lock
mov
enter
test
imul
mov
dec
stos
negb
xchg
ds
in
pusha
inc
fcomp
dec
inc
mov
call
lock
outsl
xchg
dec
out
or
outsb
dec
dec
or
mov
rcrb
push
insl
mov
mov
ret
jecxz
cmc
and
and
data16
call
rcrb
ljmp
inc
pop
xchg
mov
je
mov
imul
adc
out
pop
scas
aam
add
jo
mov
inc
adc
cmp
jmp
xchg
xor
pop
repz
loop
pop
addr16
add
call
gs
in
ljmp
jae
rcrb
pop
jne
xchg
leave
pop
in
jns
mov
stc
mov
xchg
ret
inc
sbb
dec
je
scas
pop
out
out
loop
dec
out
hlt
sub
mov
into
mov
cs
jl
mov
mov
test
push
push
xchg
shld
jg
outsl
mov
add
clc
pop
and
adc
mov
fs
std
int
jns
add
pop
xor
nop
pop
xlat
lahf
outsb
adc
cmp
dec
sti
mov
jmp
pop
ret
pop
push
enter
mov
push
lods
stc
insl
dec
ljmp
jg
inc
pop
or
fsubs
pop
fimuls
pop
adc
call
jp
aam
pop
inc
data16
shrl
fistpl
repnz
sub
xchg
pop
push
lret
ret
jmp
mov
jg
sub
sbb
push
pop
inc
jnp
loop
gs
das
daa
push
lock
ljmp
in
and
adc
je
aaa
test
or
xor
or
decl
pop
cmpsb
push
in
push
cmp
test
jge
mov
mov
mov
dec
pop
dec
push
fcomip
aaa
sti
imulb
into
pusha
sahf
pop
test
sbb
mov
dec
jecxz
and
in
adcb
or
inc
mov
in
pop
fnstenv
jp
sahf
fsincos
or
pop
mov
mov
jmp
jg
mov
or
divb
clc
hlt
sbb
jne
jg
in
fcomip
pop
push
and
lds
hlt
pushf
sub
fstp
sar
das
js
pop
or
les
outsb
aad
pop
movsb
rcrl
clc
in
fbld
sbbb
pop
outsb
sbb
in
xor
pop
mov
cs
xor
pop
ljmp
jmp
inc
scas
xchg
push
sbb
neg
or
or
in
negl
mov
push
and
mov
data16
pop
out
mov
cli
movsl
sbb
pop
repnz
lcall
pop
lock
pop
ds
loop
mov
pop
iret
jle
das
and
push
shlb
or
push
dec
xor
pop
out
aaa
jl
mov
pop
pop
dec
xchg
sbb
loopne
es
insl
add
mov
call
sbb
adc
loopne
movsb
lods
inc
sbb
arpl
mov
inc
jge
mov
mov
sbb
pop
mov
cmpsb
ss
add
fidivrl
sbb
dec
sbb
sbb
push
add
pop
ror
mov
mov
adc
bound
push
mov
pop
mov
jl
es
mov
in
xchg
mov
xor
jmp
sbbl
dec
je
sub
mov
sbb
jo
hlt
test
lcall
loope
hlt
scas
sub
pop
cmp
push
lock
rcrb
jae
adc
insb
jl
ret
xlat
jmp
in
pop
rcrl
mov
sbb
cli
das
clc
mov
push
push
pop
push
or
loop
enter
mov
dec
inc
test
cmp
dec
mov
cwtl
pop
cltd
dec
daa
mov
xchg
shrl
rcr
scas
outsl
outsl
lcall
jnp
stc
pop
pop
cmp
into
and
sbb
ss
cld
cmp
pop
pop
inc
sbb
jnp
jo
movl
and
popf
mov
movsb
push
sahf
xorb
aad
aad
xor
movsbl
lret
mov
pop
mov
out
pop
into
add
lahf
push
out
mov
lods
out
mov
dec
mov
imul
push
mov
mov
inc
sbb
stos
mov
xchg
shll
add
data16
pop
mov
bound
test
mov
push
sahf
mov
fistpl
dec
imul
add
pop
cmc
scas
lret
add
xchg
pop
lds
sub
dec
adc
push
xchg
sbb
jne
fiadds
xor
lahf
push
std
fisttps
inc
stos
pop
mov
pusha
push
xchg
ud0
push
sarl
and
ljmp
call
call
jns
call
pop
test
fisubrs
dec
mov
cld
insl
xchg
jle
test
mov
cs
jg
fdiv
pop
cmp
cmp
adc
inc
dec
mov
push
cli
orl
movsb
mov
pop
or
jno
lock
into
adc
sti
adc
js
xchg
xchg
inc
dec
stos
push
cld
fcomip
mov
sahf
das
push
mov
xor
inc
mov
out
divb
out
pop
dec
or
dec
out
movsl
inc
add
pop
arpl
shr
jne
stos
jmp
sub
jp
mov
mov
mov
cmp
add
pop
jo
jo
jo
sub
ljmp
xchg
iret
inc
push
fidivrl
loop
idiv
mov
into
cmp
iret
lea
xchg
out
adc
idivb
cli
cmp
pop
dec
adc
call
pushf
ljmp
jecxz
mov
cli
lret
mov
fistps
push
and
scas
push
std
mov
push
pop
push
inc
dec
inc
rcr
dec
push
insl
pop
inc
daa
imul
cmpl
sub
lret
cli
cmp
pop
ret
adc
inc
icebp
test
jp
fists
loopne
push
sbb
enter
xchg
push
pop
pop
ret
add
outsl
mov
cs
cmp
or
mov
mov
std
adc
cwtl
cmpsl
mov
cwtl
sbb
pop
xchg
xchg
pop
cmc
mov
ss
mov
cmpsb
mov
pop
cmp
subb
mov
mull
shlb
in
push
mulb
cmp
icebp
push
rorl
push
add
repz
push
sarl
adc
xor
cwtl
outsb
sub
pusha
mov
adc
es
lahf
adc
xor
imul
push
push
cld
xchg
lods
pop
lods
fwait
push
outsb
sbb
push
pop
rcr
insb
clc
mov
add
dec
push
cmpsl
cld
popa
jnp
pop
lahf
outsb
cmpb
pop
pop
sbb
out
aam
add
xchg
pop
jl
push
mov
out
mov
jle
scas
push
mov
int3
jge
xchg
aas
dec
inc
xlat
mov
jne
inc
xlat
int
or
mov
push
aad
or
cld
adc
mov
cld
xchg
in
mov
push
into
sbbl
ljmp
les
js
fucomip
jbe
sub
cwtl
cli
add
xor
dec
jbe
or
mov
dec
fadds
scas
push
in
mov
add
cmpsb
das
add
add
adc
inc
add
xor
lds
mov
inc
stos
push
das
and
jge
jg
jmp
js
mov
dec
pop
out
mov
push
dec
ss
fcmovnb
decl
ret
and
hlt
sti
out
cltd
pusha
mov
movsl
stc
cmpsb
sbb
lods
pop
enter
pop
mov
rorb
orb
inc
lock
lcall
push
movsl
imul
push
rclb
mov
jo
push
inc
sub
jg
out
jnp
sarl
insl
add
int3
mov
test
mov
aad
cli
jle
add
adc
fisttps
inc
dec
dec
orb
testb
lcall
mov
insb
pop
fldl
mov
xchg
fmuls
pop
icebp
pop
pop
mov
aad
pop
push
ret
push
or
sbb
mov
cmc
les
insb
lods
xchg
dec
sub
ds
cli
pop
pushl
jge
fistpll
imul
aaa
pop
and
mov
in
cmpsl
lods
inc
jb
or
out
outsl
sbb
test
loopne
pop
test
decb
sub
ds
jmp
sub
pop
mov
xor
xchg
outsb
fstpl
sbb
icebp
pop
daa
mov
lock
xor
and
jg
jl
add
out
sbbb
xchg
pusha
lds
dec
addb
xchg
mov
aaa
mov
jmp
xlat
mov
imul
add
pop
clc
xor
icebp
int
pop
sbbl
test
add
mov
inc
push
lods
pop
in
dec
loope
sbb
dec
mov
mov
aas
cmp
in
pop
cmp
ljmp
jp
jb
pop
mov
pop
sub
dec
mov
lock
shrl
pushf
add
stos
mov
sub
enter
in
sbb
stos
outsb
aas
lods
xchg
stos
test
mov
repnz
mov
add
ja
inc
pushf
mov
pop
sarb
test
fcomip
adc
sbbb
adc
and
clc
mov
add
in
add
test
stos
mov
pop
popf
pop
push
mov
dec
cmp
in
add
jbe
ljmp
divb
jecxz
cld
push
ss
ret
xchg
fisubrs
pop
sbb
push
mov
jecxz
fisttps
jo
ja
and
imul
rcrb
stc
scas
int
ds
iret
scas
rolb
sti
mov
mov
sub
sub
inc
adc
mov
inc
push
sub
dec
dec
cltd
fsubp
mov
add
jle
cmpsl
mov
ds
pushf
mov
test
pop
outsb
leave
adcb
out
unpcklps
jge
xlat
and
aaa
ss
xor
dec
jg
loopne
sub
add
data16
adc
dec
icebp
or
mov
mov
jmp
adc
scas
stos
in
and
jno
pop
mov
mov
es
adc
push
push
pop
shrb
cmp
outsl
pop
inc
mov
lods
add
out
pop
sub
dec
or
push
lods
push
cmp
orl
fwait
mov
inc
aam
and
jecxz
cmc
and
push
fs
or
popa
outsl
adc
push
enter
cltd
mov
out
fcoms
push
sub
mov
xchg
ficompl
xor
shrl
pop
pop
xchg
or
cs
adc
pop
pop
lock
aaa
sbb
mov
xor
outsl
xor
nop
push
sub
or
ds
arpl
scas
pop
mov
sbb
les
adc
out
les
data16
mov
fwait
scas
push
pop
fsubp
ljmp
sub
adc
insl
jg
pop
jae
cmpsb
inc
shl
ss
xchg
sub
call
add
pop
mov
aas
sub
call
cmp
enter
mov
mov
bound
add
jg
or
mov
das
movsb
push
cmp
push
pop
popl
ret
pop
into
aam
dec
mov
add
stc
arpl
or
pop
ds
je
out
xchg
aas
xchg
dec
stc
rcrb
inc
and
jle
cmpsb
scas
jle
cmp
mov
fdiv
in
jg
xor
loop
push
mov
xor
scas
outsl
ja
test
inc
outsb
mov
dec
jle
inc
sti
sahf
leave
js,pn
push
ficoml
ds
dec
out
and
pop
ljmp
mov
stc
daa
fstps
in
xor
in
pop
inc
push
push
xorb
xor
data16
cld
outsl
rcrb
add
test
ficompl
lock
sbb
std
scas
and
sbb
xchg
hlt
icebp
filds
mov
xor
imul
xorb
mov
js
xor
shr
fsubs
cmp
or
and
mov
pop
mov
sub
jne
inc
mov
insl
xchg
loopne
int3
inc
test
push
mov
cmp
pop
mov
and
lea
mov
jge
jae
bound
pop
xor
mov
dec
je
mov
rcll
hlt
mov
ret
xorl
jle
xchg
adc
movlps
out
lcall
in
dec
push
jmp
ds
jnp
xchg
aam
mov
ja
cmp
add
leave
in
and
or
add
push
movb
fwait
mov
sbb
lret
icebp
scas
cmpsb
and
test
cli
pushl
mov
das
sub
inc
mov
or
aam
jo
repnz
shrl
stos
cli
mov
adc
das
call
dec
mov
sub
lock
in
mov
icebp
ja
and
pop
or
sbbb
mov
shr
jle
inc
lahf
pop
cltd
test
xchg
out
loopne
dec
inc
shll
hlt
and
xlat
scas
je
sahf
sbb
or
out
fcoml
jg
or
out
mov
sbb
push
push
pusha
stc
cmp
mov
addr16
jo
nop
dec
pop
xor
inc
mov
and
pop
outsb
dec
or
sarl
pop
cwtl
imul
inc
dec
mov
push
lock
add
adc
or
jle
inc
roll
ja
aas
sub
in
or
das
sbb
fildll
iret
push
xchg
in
orb
adc
push
fnstcw
out
ljmp
aas
fdivs
in
dec
aam
mov
sbb
ret
fcomps
push
fisttps
and
mov
mov
sbb
cmp
dec
jmp
fdecstp
sahf
lods
fdivs
push
movsb
inc
cld
dec
imul
in
loop
out
repz
enter
cmp
mov
and
test
mov
pop
sbb
popa
push
jns
stos
pop
push
pop
xor
pop
shll
ja
and
fbld
inc
js
lret
repz
jge
jo
into
or
push
add
mov
outsb
adc
adc
sahf
push
cmpsl
pop
pop
int3
cld
xlat
das
jb
xchg
popl
jmp
in
fildll
or
test
int3
xchg
mov
cs
jle
cld
loope
xor
sti
jge
xor
sbb
adc
push
sub
add
idiv
incl
into
mov
cmpsb
push
mov
cmpsb
movsb
xor
sti
lock
mov
cli
stos
mov
loopne
mov
imul
adc
in
out
cmp
daa
popa
jl
stos
jle
sub
in
xchg
inc
add
out
mov
or
dec
mov
push
push
sahf
xchg
mov
sub
add
xchg
mov
out
cmp
pop
jbe
push
imul
adcl
fimull
mov
sbbl
sbb
pop
rorb
ss
stos
ficoms
mov
loope
sti
jno
cs
rcll
add
outsl
aam
xor
jns
mov
icebp
mov
or
sahf
aam
or
mov
jmp
loop
pop
out
cmpsb
or
push
test
pop
jg
ljmp
hlt
pop
mov
pop
xchg
enter
sub
mov
adc
or
je
cmpb
pusha
test
inc
mov
addr16
cld
scas
pop
test
mov
stos
aas
popa
es
lcall
jecxz
loop
rolb
and
or
movl
jecxz
mov
pop
xchg
xor
jle
pop
mov
movsl
mov
ret
popf
mov
adc
repz
jp
add
ds
lret
les
push
cld
outsl
es
rcrb
lock
das
pop
jno
aas
insl
mov
xchg
dec
cmp
ljmp
imul
adc
and
mov
pop
sub
pop
incb
fstpt
lahf
pop
hlt
jo
push
insb
outsb
je
nop
nop
sbb
mov
pop
notl
xor
mov
in
xor
cli
sbb
and
test
mov
push
pop
stos
movb
xor
stos
jp
scas
sub
mulb
dec
pop
pop
add
std
scas
cli
out
pushf
sbb
add
cmc
xchg
sbb
ret
add
or
es
ljmp
jg
pop
jo
push
push
cld
mov
cmpsb
mov
or
jmp
add
lods
into
sahf
add
pusha
add
sbb
sub
testb
pusha
pushl
fisubs
xor
cld
jl
cmc
jl
pop
clc
add
jnp
pop
into
inc
mov
outsb
ret
lea
gs
ret
cmp
js
sahf
out
in
jmp
fadds
imul
pop
out
mov
and
in
clc
outsl
mov
push
aam
clc
imul
bound
ret
mov
mov
andb
mov
cmp
or
imul
cli
sub
sub
arpl
dec
nop
das
adc
aam
hlt
or
iret
andl
mov
xchg
cmp
bound
xlat
outsl
ret
fwait
mov
in
call
pushf
testb
lds
mov
dec
orl
pop
xlat
push
cmp
je,pt
mov
mov
js
push
cli
add
inc
cld
cli
mov
pop
fildll
cli
insl
sbb
add
or
out
cld
stc
sub
pop
jb
dec
es
fsubs
scas
js
fdivr
pop
push
je
mov
stc
scas
test
fs
add
rorb
dec
pop
gs
cmp
push
iret
add
add
push
push
sbb
mov
lock
sbb
pop
outsb
or
inc
or
in
les
push
xchg
insl
xor
and
sbb
aad
insb
movb
incl
neg
enter
dec
push
pop
or
js
or
lods
stos
inc
adc
add
cmc
outsl
pop
sbb
dec
imul
pop
ljmp
lcall
dec
jmp
loop
scas
jns
bound
addb
hlt
or
test
out
out
ret
outsb
mov
enter
clc
pop
pop
jmp
pop
inc
add
sbb
js
push
adc
and
inc
call
std
ja
mov
mov
pop
xchg
sub
sub
data16
stos
stos
pop
or
ficoml
adc
jb
sub
pop
pop
pop
pop
lods
sub
lods
sub
and
bnd
xchg
adc
cmp
pop
xchg
adc
call
adc
jnp
movsb
mov
addb
gs
push
stc
cmp
pop
out
mov
dec
xchg
pop
mov
jnp
pop
push
rcrb
mov
xchg
pop
hlt
push
arpl
or
pop
jne
mov
lods
mov
jge
mov
ret
fcomip
out
andb
jns
test
inc
ss
mov
and
push
xlat
mov
repnz
jns
mov
mov
addb
push
push
xor
clc
inc
sbb
dec
ja
pop
mov
sub
inc
jle
rol
and
sub
enter
imul
cmp
mov
sti
pushl
cltd
rclb
add
sub
cmp
or
daa
movsb
mov
pop
mov
mov
jmp
pop
and
cltd
jecxz
testb
add
jecxz
jmp
push
rorl
mov
call
dec
aas
pop
clc
sbb
cli
movsb
mov
xchg
addl
or
fidivs
int
shlb
out
inc
aaa
std
add
jecxz
lds
mov
leave
hlt
pop
call
inc
sub
pop
insb
dec
xchg
fisubs
inc
sbb
mov
es
mov
out
mov
imul
add
adc
push
jge
sub
scas
jnp
cmp
sahf
sub
add
jge
mov
cli
mov
inc
imul
xchg
mov
adc
fidivrs
push
mov
pop
or
das
cli
mov
sbb
add
je
addr16
cld
inc
cmpb
cld
mov
adc
cmp
jnp
mov
sub
adc
jns
xor
jl
scas
sub
sub
shlb
das
or
pop
pushf
cmpsb
xchg
decb
iret
mov
push
dec
dec
cmpsl
call
test
imul
jmp
sub
cmc
imul
pop
enter
aaa
ss
mov
fdivrs
jne
fwait
mov
xchg
lock
xor
std
sysexit
sub
and
xchg
shr
insl
ret
push
jo
mov
mov
sub
jbe
jge
push
push
adc
lock
mov
leave
push
enter
imul
pushf
mov
dec
insb
sahf
addr16
fildll
cmp
dec
jne
insl
ret
iret
in
pop
jle
outsl
mov
outsl
pop
mov
mov
mov
sub
fmuls
movsl
pop
cwtl
pop
jb
ja
cli
sbb
stos
push
mov
xor
cld
xchg
fistl
das
hlt
lret
cmp
rcrb
cmpsb
push
sbb
sar
pop
iret
jo
jecxz
cwtl
rorb
call
add
add
aaa
int
icebp
push
add
cmpl
jp
adc
inc
xchg
jo
add
push
xchg
hlt
pop
data16
jb
sub
sub
aas
sub
scas
les
aam
pop
jmp
hlt
psubd
pop
pop
test
clc
inc
ret
add
mov
push
pop
sub
in
ret
adc
bound
pushf
jns
lock
xor
dec
adcb
popf
sub
jne
imul
adc
adc
mulb
dec
cmc
jge
add
mov
dec
sub
push
std
xor
outsl
push
aaa
adc
cmp
dec
pop
arpl
add
add
ja
jecxz
sbb
jmp
xor
mov
xchg
sbb
mov
nop
sbb
pop
push
in
sub
out
ret
mov
mov
sar
lock
pusha
stos
push
lock
jle
int3
pop
out
sbb
inc
mov
jecxz
clc
out
clc
push
test
imul
enter
xchg
pop
mov
and
push
les
inc
inc
xchg
add
sbb
lock
jae
ds
notb
add
dec
add
sbb
sub
adc
incb
mov
sahf
xchg
aaa
leave
aas
dec
das
div
pop
fcoml
cwtl
mov
or
adc
mov
test
xor
add
inc
jo
mov
mov
jg
les
icebp
mov
add
jne
decb
lock
sbb
repnz
insl
or
into
inc
movsb
xor
cmp
lcall
sbb
cmp
xor
xor
scas
and
mov
add
inc
cmp
sbbb
sar
mov
and
out
rcrl
push
dec
pop
dec
push
js
pushl
sub
fwait
and
xchg
xchg
pop
adc
insb
push
lea
mov
fiadds
mov
xor
push
cmp
xor
or
xchg
lock
in
jne
ja
sub
popf
stc
jb
hlt
sub
xor
inc
push
mov
add
lahf
add
inc
sbbb
jg
les
testl
pusha
xor
movsb
aas
inc
jbe
shrb
mov
cwtl
cs
loop
fists
fbstp
das
scas
push
mov
mov
dec
xchg
jg
out
mov
or
push
inc
pop
adc
dec
ljmp
movsl
push
xchg
xchg
add
push
mov
ret
scas
cli
inc
inc
inc
stos
mov
xchg
and
sbb
pop
jbe
cmp
or
cli
inc
inc
nop
stos
pop
fbstp
cmp
sub
mov
sub
mov
mov
negb
jae
hlt
pop
mov
out
iret
imul
outsb
insb
movsl
shlb
xchg
or
jno
enter
xor
lods
pusha
push
mov
xor
jnp
popf
sub
les
js
cmp
pop
ficompl
leave
roll
pop
cmp
sub
fs
cmpsl
mov
int3
cmp
insl
imul
push
cld
pop
stos
int
cmp
frstor
mov
inc
xor
sarl
leave
xor
or
test
scas
in
fstps
xlat
mov
xchg
jo
jmp
rcll
push
loop
repnz
js
loope
pop
pop
and
jge
push
setae
and
sbb
cld
ret
shrl
orl
mov
aaa
sbb
ret
aaa
dec
cmc
mov
stos
sub
addb
outsl
lahf
imul
or
jo
cmp
std
pop
orb
pop
cmpb
push
movsb
cmp
aaa
cltd
push
clc
mov
ret
movsl
pop
ja
inc
adc
push
into
pop
leave
fbstp
push
nop
scas
mov
and
movl
mov
xor
ficoms
dec
loopne
mov
insb
mov
dec
nop
cmp
ja
mov
lds
popa
push
sti
push
dec
je
xchg
cwtl
sub
pop
or
les
idivb
add
push
dec
in
out
gs
arpl
or
loop
fcomi
fwait
and
adc
and
push
mov
dec
jb
bound
std
adc
int3
sarl
pop
lods
test
and
aaa
or
outsb
popa
sti
rorl
pushf
or
mov
mull
stc
dec
outsl
repnz
lahf
int3
sub
dec
scas
push
pop
cmp
adc
xchg
add
subl
xchg
jnp
movsl
xchg
jecxz
or
fsubp
shl
das
xor
push
mov
jge
or
xor
jo,pt
ss
lcall
xor
adc
hlt
setg
test
ljmp
or
inc
int3
xor
iret
scas
test
ret
fs
add
es
dec
mov
cmp
loopne
das
mov
pusha
mov
rcrb
push
xor
cld
std
aad
mov
sbb
enter
outsl
cli
pop
xor
sbbl
sub
mov
pop
outsb
lret
jo
lods
xchg
mov
int
push
jns
sbb
add
cmpsl
xor
mov
mov
and
ds
mov
outsb
xchg
js
ljmp
xchg
pop
adc
cs
push
or
outsl
pop
push
cld
adc
cmpsb
aas
clc
fbstp
loope
fwait
popa
pop
test
pop
xchg
dec
xor
dec
sbb
sub
aaa
fmuls
adc
push
sbb
lahf
cmpsb
lret
ljmp
jecxz
pusha
jae
data16
cwtl
aam
pop
mov
ret
mov
push
add
jnp
and
inc
hlt
lock
jmp
ds
pop
and
je
push
sbbb
fisubl
adc
out
xchg
in
push
sbb
push
pop
cmp
xor
dec
call
inc
aaa
insb
inc
jne
inc
mov
jg
data16
mov
sub
fs
rcll
adc
fcompl
stos
pushf
mov
jg
pop
mov
dec
push
bnd
sbb
xor
inc
fdivrl
xchg
out
pop
add
loop
mov
xor
loop
dec
aam
out
loop
adc
leave
or
xchg
pop
or
mov
out
mov
filds
pop
nop
mov
xor
fwait
mov
mov
stos
mov
js
sbb
call
scas
idivb
add
fisubrs
mov
aam
dec
mov
dec
les
aam
add
je
mov
mov
xchg
mov
adc
mov
mov
adc
mov
jb
push
hlt
iret
andl
push
mov
inc
cmpl
or
sub
fwait
xchg
hlt
nop
rclb
xchg
push
je
adc
push
out
jmp
shr
hlt
pop
or
xchg
inc
sahf
aad
std
popf
cwtl
and
jg
inc
ret
out
bndldx
push
xchg
cmp
mov
jg
fisubrl
in
jno
mov
and
aam
and
mov
adc
jecxz
push
pop
clc
dec
xor
push
mov
dec
rcrl
mov
imul
es
or
pop
push
lea
lock
mov
stc
sub
or
std
inc
or
or
fldt
mov
inc
fsubs
push
ret
fistpll
jmp
pop
icebp
fistpl
mov
dec
xor
or
dec
jle
jmp
clc
in
jmp
subb
sti
xchg
xor
adc
gs
pop
and
mov
cli
filds
popa
push
xor
cmp
dec
fisttps
jb
aam
pop
jmp
js
fistpll
push
je
outsl
mov
sbb
add
cwtl
jnp
or
jg
inc
adc
ficomps
data16
fwait
out
aaa
sahf
sbb
ja
sbb
jp,pn
inc
cmp
rolb
cmp
pop
dec
mov
push
dec
jbe
push
shlb
pushf
ficomps
icebp
add
adc
and
push
xchg
sbb
ljmp
aad
inc
sub
ds
ret
cmpsb
pusha
push
and
data16
xor
xor
dec
push
push
push
ret
fisubl
jns
insb
adc
movsb
scas
cli
pop
clc
xor
aam
pop
into
ret
shll
xor
loope
shl
mov
jecxz
xchg
stos
aad
jmp
in
mov
jbe
sub
or
test
outsl
push
jno
add
adc
aaa
add
scas
clc
cltd
cmc
orb
xchg
cmp
dec
out
hlt
mov
add
pop
cmp
call
or
outsb
mov
out
jle
jecxz
je
outsl
clc
push
inc
jmp
data16
mov
lock
mov
mov
aaa
jge
dec
stos
rcr
out
out
jae
int
pop
cs
jge
fists
arpl
jl
fildll
mov
and
add
int3
lods
xor
jbe
push
std
repz
test
aas
bound
addl
jae
int3
out
xchg
cli
or
jl
in
pop
fdivrs
dec
hlt
ljmp
jle
scas
pop
ja
adc
xlat
subb
mov
lods
lds
pop
pop
sub
sti
addr16
es
add
or
inc
aas
nop
adc
pop
popf
pop
aam
pop
rorl
mov
sbb
add
out
dec
lock
clc
cltd
xchg
adc
aas
xchg
push
mov
and
mov
das
inc
inc
or
insl
xor
pop
inc
push
aaa
test
xchg
jae
or
lcall
xchg
xchg
pop
sti
inc
int3
stos
jg
cmp
mov
cmc
mov
rcrb
mov
mov
xchg
xor
xchg
lahf
mov
pushf
mov
pop
lods
ljmp
fsub
jl
lahf
test
cltd
inc
enter
pop
movsl
pop
decw
xchg
cs
and
jmp
stos
pusha
or
std
stc
xchg
sbb
andl
lret
or
push
addr16
sahf
dec
xor
pop
sbb
mov
push
or
lock
pop
add
add
pushl
inc
pop
adc
dec
push
or
mov
lcall
out
add
adcl
adc
sbb
cmc
fmull
cld
add
mov
pop
dec
insb
push
fld1
push
mov
out
sub
sbb
mov
clc
ja
pop
stos
ss
mov
lahf
addb
and
mov
or
movsl
adc
and
pop
or
int3
sub
addr16
in
adc
cmpsb
das
pop
mov
inc
mov
std
add
push
cmpsl
gs
dec
inc
js
mov
and
sbb
lods
inc
loop
push
out
sub
stos
sub
hlt
aas
fiaddl
jmp
pushf
push
idivb
rcl
test
int3
inc
out
scas
cmp
clc
mov
mov
ja
mov
push
sbb
js
mov
cmpb
je
iret
stc
aad
or
dec
xchg
inc
mov
mov
mov
sub
sub
lock
pushl
add
pusha
inc
test
add
pop
leave
sbb
imul
push
out
arpl
pop
dec
sub
fstl
and
mov
sbb
pop
sub
inc
ret
inc
aam
xchg
imul
das
sti
ljmp
cmp
cmp
data16
mov
and
push
mov
push
mov
dec
jle
je
and
mov
push
or
mov
pop
std
push
ja
pushf
ret
out
mov
add
mov
jp
xor
pop
fcmovbe
add
mov
ljmp
pop
ja
cmc
jnp
sub
sbbb
cld
in
aas
cld
jg
inc
xchg
and
xor
es
cmp
or
jb
and
jbe
incl
jbe
jle
jecxz
push
pushf
add
or
mov
shrl
cmp
jecxz
pop
lea
ss
mov
jg
mov
cwtl
cmp
or
das
rorb
jle
ret
fstps
add
sub
icebp
incl
cmp
add
scas
xchg
or
adc
mov
pop
nop
das
fcoms
mov
les
fildll
or
in
inc
in
test
int
test
aad
jp
mov
es
in
or
in
inc
ret
inc
rolb
cmpsl
xor
push
repnz
mov
sbb
inc
xchg
dec
shll
inc
lods
notl
mov
cld
pusha
in
rol
test
outsl
jl
pushl
push
pop
pop
fcompl
pop
aad
xor
jmp
adc
mov
cmp
jl
jg
jno
pop
mov
jo
das
dec
in
dec
int
insl
xchg
test
xlat
mov
lret
pop
add
pop
ret
and
adc
lods
out
mov
pop
push
dec
push
sbbl
cmp
sti
pop
shll
xchg
jo
inc
or
pop
popa
fdivr
lea
pusha
mov
subb
cmp
push
loop
lret
mov
dec
test
std
add
fisubl
xor
icebp
dec
add
loopne
or
movsb
sbb
mov
scas
shll
xor
xchg
insb
or
cmp
dec
test
adc
inc
lret
lret
pop
scas
test
dec
lods
insl
rolb
clc
sub
mov
and
fcomip
cmp
push
clc
mov
imul
mov
mov
out
mov
movsb
adc
and
jecxz
and
mov
cwtl
std
sub
cwtl
ds
repnz
das
decb
sbb
jnp
iret
int3
pop
fwait
es
mov
das
ret
int3
and
pop
daa
sbb
int
adc
push
ret
jmp
cmpsl
push
sub
je
scas
cli
jg
addr16
pusha
pusha
xchg
push
mov
in
cmp
insl
adc
stos
mov
cmpl
lret
push
test
pop
stos
jle
add
dec
cltd
mov
call
adc
and
adc
aas
lock
aas
inc
cli
sub
hlt
mov
push
fiadds
dec
aad
in
out
clc
cmp
cli
cmp
lea
add
sahf
ret
mov
sarl
lret
mov
stos
loopne
xchg
mov
aad
repnz
adc
pusha
out
pop
into
scas
cld
test
pop
mov
ret
rclb
add
cltd
test
and
mov
loopne
das
clc
xor
pushf
rorb
leave
lcall
pop
sub
or
adc
dec
frndint
mov
sub
insl
or
mov
fisttpl
daa
push
out
incl
mov
xchg
xchg
pop
movaps
mov
ret
int
dec
in
fisubrl
push
dec
fimuls
loope
sbb
int3
sbb
std
mov
pop
mov
fidivs
lods
xchg
fimull
data16
mov
pusha
mov
cmp
je
cs
pop
or
sub
inc
adc
cmpb
cmpsl
sub
cmp
cli
mov
mov
call
and
push
mov
sti
pop
dec
jo
xor
stos
scas
lret
cli
popf
mov
jb
outsl
push
add
rcrl
add
inc
push
inc
cmc
pop
mov
cmp
testl
xorb
data16
in
and
cmp
fsts
sbb
mov
xchg
lods
repnz
fdivrs
push
mov
adc
movsb
test
mov
outsb
mov
or
jmp
sub
pop
lock
or
dec
xchg
xchg
cld
and
daa
or
ljmp
incb
add
sub
push
adc
xchg
add
mov
lcall
int3
cwtl
inc
inc
sub
adc
cwtl
inc
andl
inc
aaa
sub
push
cltd
and
cmp
lret
outsl
stos
loope
rclb
mov
div
mov
add
pusha
add
dec
clc
stc
dec
call
pop
cld
add
arpl
sbb
clc
cmp
mov
pop
cld
dec
mov
repnz
fwait
push
in
jb
and
adc
xor
in
cmpsl
jg
ljmp
and
rcrb
lock
subb
dec
cld
inc
push
fcomps
fnstsw
test
into
jo
into
push
sub
add
outsl
ja
pop
or
test
or
xchg
cs
in
cmp
xchg
movsb
dec
repnz
sbb
lahf
push
lock
lods
out
xor
aam
and
sarb
mov
pop
fdiv
mov
pushl
sarl
mov
rorl
sbb
ljmp
mov
stos
jle
sub
lods
dec
or
xor
iret
ja
xchg
mov
fimuls
push
and
int3
xlat
push
xchg
cmp
mov
or
mov
add
ljmp
jns
pop
lds
in
pop
mov
push
mov
lods
push
xchg
stos
pop
pop
and
or
movsb
xchg
cli
sbb
inc
and
pop
jle
in
shll
mov
pushf
nop
fwait
adc
int3
dec
outsb
lea
filds
push
dec
sbb
push
xchg
cmc
or
push
mov
test
cmpsb
push
jg
pop
aam
adc
cs
lcall
sbb
das
ja
sar
imul
insb
lret
das
sbb
push
js
frstor
xor
jge
add
pop
mov
lahf
int3
arpl
in
mov
lret
js
incb
jno
xchg
push
icebp
sbb
push
idiv
ljmp
fimull
mov
jle
jbe
sbb
pop
mov
push
mov
pop
jae
dec
push
rolb
sbb
sub
cmpsb
jmp
dec
and
push
dec
mov
push
dec
xchg
mov
xchg
jmp
jmp
add
dec
inc
fidivrl
lds
shlb
enter
xchg
repnz
jecxz
xchg
movsb
outsl
pop
repnz
int3
pop
sub
clc
sbb
xor
mov
mov
movsb
push
fbstp
mov
xor
xchg
or
mov
pop
mov
mov
mov
push
pand
lea
mov
sti
inc
xlat
and
fwait
inc
cltd
pop
pop
loopne
mov
or
imul
dec
repnz
push
ffreep
pop
hlt
daa
cmp
fxch
mov
sbb
or
je
int
pushf
sahf
call
enter
mov
iret
mov
pop
mov
and
es
adc
aaa
mov
xchg
adc
xchg
mov
xchg
fcmovbe
or
mov
inc
inc
pusha
mov
scas
clc
call
cmpl
push
bound
mov
subb
fisubl
loop
es
or
jp
cmp
pop
mov
jbe
lods
popa
inc
adc
mov
mov
sahf
cmc
pop
jnp
xchg
jne
stc
daa
fs
cmpsb
cli
push
into
loope
lea
rcrl
lahf
pop
cmc
mov
test
rcrb
test
push
dec
sti
dec
pop
nop
push
mov
pushf
mov
dec
hlt
cld
xchg
outsb
shlb
in
adc
mov
xchg
insl
pop
jmp
aad
jmp
ja
add
push
fistpll
xlat
mov
mov
hlt
shll
mov
fwait
or
adc
js
xor
xchg
push
lret
cmc
es
rcll
ss
int
ret
jmp
push
daa
in
sbbb
cmp
or
xchg
lcall
jo
and
mov
add
pop
xchg
adc
mov
xchg
in
sbb
je
adc
pop
pop
add
mov
adc
add
cmp
in
inc
pop
cwtl
jge
inc
stc
jecxz
testb
js
aaa
lock
out
out
jmp
lock
cmp
pop
add
jp
mov
addb
inc
loope
pop
fdivr
fmul
arpl
jp
mov
mov
inc
iret
jo
cmc
es
shll
lds
jp
arpl
ljmp
xchg
jbe
repz
jbe
test
add
push
pop
sbb
out
jl
insl
aad
mov
pop
jg
aas
sub
addr16
sar
inc
mov
sbb
push
rolb
xor
lods
outsb
js
pushf
mov
sub
add
mov
aaa
cli
das
pop
ljmp
movsb
out
jne
stos
jp
fimuls
andb
jmp
das
pushl
adc
add
push
xor
aam
imulb
ret
loopne
adc
outsb
pop
inc
mov
jg
sub
gs
mov
adc
das
fdivs
loope
insb
inc
sub
jecxz
sar
mov
cmpb
push
pop
in
sahf
cmp
out
jmp
add
push
stos
hlt
and
pop
sbbl
mov
sbb
adc
iret
push
inc
inc
xor
push
shrb
jle
xlat
pop
inc
pop
xchg
lods
sub
js
mov
mov
xchg
mov
aad
scas
cwtl
loop
sbb
fadd
lods
das
js
push
inc
pop
cmp
inc
in
pop
jle
jmp
push
and
je
cld
dec
xchg
in
xchg
sahf
dec
mov
loop
or
xor
das
cli
cmpsb
clc
jg
adc
lahf
inc
mov
jp
push
lds
pop
out
clc
mov
fdivl
xchg
sbb
push
cld
xor
jmp
pop
out
mov
inc
xor
ja
jns
fimuls
pop
xchg
jnp
jno
mov
test
incl
adc
scas
sub
stos
mov
jnp
xchg
sahf
lcall
cmp
gs
out
lods
pop
sbb
xor
inc
push
lods
mov
jnp
rclb
adc
sahf
jg
stc
pop
mov
pop
clc
mov
adc
out
xor
adc
mov
fnsave
and
mov
mov
or
mov
fmul
outsb
cmpb
jp
out
notb
add
push
inc
je
xor
pop
lock
incl
in
stos
sub
mov
fs
inc
pop
pop
lret
sbb
daa
clc
and
out
cltd
loope
lods
testb
movsl
scas
adc
fsubrl
clc
mov
and
mov
pop
sub
pop
lcall
add
cli
dec
test
add
loopne
test
cmpsb
aas
mov
arpl
fcoml
cmp
sahf
negb
adcl
iret
jbe
pop
out
add
mov
pop
loopne
fs
and
loopne
mov
push
push
push
inc
out
mov
mov
jno
aam
clc
cli
ret
out
pop
sti
add
xchg
and
fadd
mov
dec
cmp
cs
cwtl
push
xchg
orb
rep
pop
stos
adc
push
cwtl
setle
mov
dec
mov
ret
mov
sti
pop
movsl
inc
pop
clc
rorl
stc
cmp
pop
loope
adc
fistl
int3
fildl
jecxz
cmp
jbe
cmp
into
jecxz
pop
loopne
aas
jle
push
xchg
rorb
outsl
xchg
sti
and
imul
sbb
jo
loope
mov
cld
lea
shll
mov
str
ljmp
and
push
mov
pop
movsb
adc
cs
mov
mov
out
cli
bound
xlat
dec
pushf
add
pop
decl
pop
stos
lds
xchg
pop
lods
xor
pop
push
dec
addr16
movsl
insl
or
mov
push
cli
scas
out
insb
xchg
xor
call
aaa
push
xchg
repz
sub
add
icebp
or
dec
int
cmpsb
fwait
xor
jmp
pusha
subb
aaa
std
filds
mov
inc
jns
shll
iret
add
mov
sub
das
shl
fs
divl
pop
je
jg
dec
mov
dec
ljmp
mov
imul
cld
fwait
add
mov
lock
dec
push
mov
mov
cld
cmp
mov
mov
ret
loop
add
std
cs
sbb
mov
mov
or
and
jg
mov
jbe
rep
loop
adc
lret
test
cs
add
sti
shrl
loopne
cs
imul
sub
xlat
mov
ja
or
daa
xor
mov
fcoml
lea
sbb
jne
jmp
sub
das
adc
pop
add
sub
fldl
or
xchg
fisubrs
sub
pushf
mov
push
inc
jp
cmp
cli
push
mov
or
pop
lods
push
inc
push
or
daa
cmpsl
call
test
test
cmp
clc
stos
fcomip
jl,pt
mov
int3
pusha
cmp
mov
inc
cld
sbb
out
pop
insl
sub
jmp
testl
imul
lods
hlt
in
pop
sub
mov
loopne
loop
stc
mov
cmp
xor
jb
mov
insl
adc
cmpsl
test
popf
xchg
test
pop
insb
mov
incl
mov
arpl
aam
or
push
and
call
lock
sbb
push
std
dec
lcall
in
adc
add
adc
push
aaa
lret
les
mov
jb
shrl
aas
jecxz
jmp
xchg
call
mov
or
xchg
arpl
sbb
dec
mov
jmp
jnp
dec
fiadds
mov
movsb
aam
mov
xchg
fdivl
xchg
movb
xlat
scas
cs
pextrw
orl
mov
outsl
ret
jbe
ljmp
and
or
aad
les
cmp
sub
inc
pushf
pushf
jno
pop
cmpb
adc
mov
dec
cmp
pop
repnz
mov
jg
xchg
pop
sahf
mov
sahf
rorb
aaa
mov
mov
xor
push
js
or
mov
aam
pop
pop
pop
ds
push
jge
mov
pop
sbb
iret
hlt
sbb
cmp
cmp
push
or
stos
pop
cmp
or
mov
das
fisubrl
mov
mov
cmp
push
loope
sbb
inc
pop
xor
pop
sahf
jae
cwtl
add
clc
out
and
lea
sub
or
clc
add
push
pop
sub
pop
bound
add
rcr
and
mov
pop
hlt
in
cmpl
in
push
sub
xor
pusha
jecxz
ljmp
into
enter
lock
xor
rcrb
shr
inc
cmp
bound
add
dec
rol
adc
aad
fsubp
adc
add
cmpsb
aas
decb
inc
xchg
lock
cs
test
aas
jp
xlat
pop
pop
dec
imul
sub
push
or
mov
lahf
push
js
mov
inc
push
fwait
add
insb
and
xor
sbb
inc
or
jno
jl
subb
gs
mov
lea
sub
dec
lock
dec
fiadds
lret
jo
xor
pushf
add
and
push
lds
mov
lods
adc
push
push
repnz
jmp
add
pop
mov
or
cmp
push
adc
mov
mov
mov
int
adcl
in
pop
std
es
clc
push
addl
fldt
rolb
jo
jae
test
mov
outsl
js
insl
inc
out
xchg
inc
mov
cld
dec
push
ljmp
jmp
push
cs
lods
mov
xor
aas
fs
xchg
mov
jp
mov
sbb
adc
pop
aaa
into
shrb
mov
sub
scas
out
or
pop
push
fcomps
xchg
lahf
mov
clc
cmc
pop
loopne
push
add
shlb
xchg
decl
jmp
dec
pop
pop
mov
fdiv
mov
pop
jne
pop
fwait
sub
xor
aam
push
je
out
push
icebp
shrb
jp
dec
cltd
rorl
and
pushf
iret
scas
push
cmp
rcr
test
enter
stc
movsb
pushf
ljmp
add
dec
push
xchg
adc
push
push
pop
jp
add
inc
xchg
jle
repz
cmc
dec
and
sub
or
fwait
adc
xchg
test
adc
nop
mov
jecxz
fdiv
xor
add
xor
fldl
push
in
ficoml
mov
popf
push
push
jg
mov
and
insl
rcll
rorb
out
lock
decl
pop
xchg
add
jp
fstpl
push
adc
scas
add
xchg
nop
pop
sub
mov
pop
add
idivb
nop
aam
notb
dec
mov
inc
jo
dec
dec
jecxz
push
loope
mov
push
insb
sub
jns
insb
in
addr16
or
xor
mov
daa
jl
sbbb
je
out
dec
mov
cwtl
pop
add
call
call
jg
inc
std
and
jp
push
inc
mov
jecxz
insl
lock
or
hlt
and
pop
mov
jmp
shrl
xor
enter
std
movsb
mov
pop
orb
incb
rolb
xchg
push
and
mov
leave
xor
fmuls
xchg
insl
cmp
clc
ds
push
jno
call
scas
add
test
jmp
xor
mov
sbb
jbe
xchg
mov
jo
xchg
or
loope
inc
add
jbe
sbb
cs
movsb
in
sahf
test
ret
pop
insb
mov
jmp
mov
pop
scas
lods
sub
xor
js
push
mov
lcall
jno
das
cli
or
pop
xchg
jae
inc
jg
adc
mov
inc
mov
and
out
push
cli
movsb
lock
js
lock
jecxz
stos
adcb
xor
add
cmp
call
and
add
inc
out
cmc
mov
fldt
xchg
mov
jl,pt
in
fisubs
and
ret
mov
mov
mov
dec
stc
sbb
fsts
cwtl
insb
jl
test
das
ljmp
lods
add
pop
add
pop
pop
pop
clc
sub
jl
jl
sbb
pop
pushf
push
push
xorl
scas
push
jp
mov
std
int
add
xchg
xlat
ja
mov
add
stos
out
and
rolb
jnp
add
stos
sbb
lea
mov
ja
insl
out
or
es
cmpsb
lret
les
testl
lret
fs
mov
mov
jmp
dec
test
aas
jo
mov
sbb
out
mov
outsl
add
mov
xor
add
enter
lds
dec
push
pusha
xor
adc
dec
cmp
sbb
mov
xor
cmpl
sbb
mov
popa
add
or
or
pop
sub
enter
loope
dec
cmp
scas
pop
pop
inc
call
push
test
test
lods
loopne
fdivp
or
pop
or
aam
scas
xor
mov
xchg
repnz
lock
jno
jecxz
in
mov
mov
data16
jg
xchg
jp
or
xchg
or
mov
inc
xor
popa
jle
cld
in
jmp
fidivrl
pop
cltd
pushf
aas
mov
dec
das
xchg
incl
scas
out
mov
sahf
xchg
lcall
xchg
rcrl
pop
fbstp
dec
pop
push
xor
fmul
lret
js
movsl
sbb
xchg
xchg
iret
fsubr
push
lds
lcall
fnstcw
idivb
jo
jmp
cmp
mov
add
ret
sbb
push
inc
lods
rorb
ret
cmp
andb
outsl
push
cld
xor
shrl
pop
lds
idivl
sub
mov
jo
jno
stc
pop
mov
mov
dec
in
test
neg
test
cmpsl
jb
mov
ret
pop
mov
sbb
pop
imul
pop
xchg
mov
inc
mov
add
cld
sbb
in
sar
out
add
adc
mov
int
pop
fmulp
cmpsb
jp
add
push
cs
fdivr
repz
ss
cwtl
popf
incl
push
fisubrs
inc
sub
stos
decb
and
and
and
fs
jle
jb
mov
mov
xchg
or
mov
or
orb
lods
loope
fdivrs
imul
stos
xlat
pop
mov
cs
and
mov
out
mov
aas
data16
add
mov
shlb
cmp
aaa
aaa
rcr
jle
hlt
fidivrl
mov
enter
add
dec
mov
add
ljmp
xchg
loop
jecxz
push
dec
jp
push
out
sbb
into
adc
cltd
shl
push
outsb
into
add
outsb
mov
hlt
jae
loop
mov
mov
push
push
push
fwait
in
jo
adc
push
sbbl
mov
sti
das
sbb
lret
fisubs
push
jmp
addr16
std
adc
daa
in
sbb
decl
lods
mov
cmp
lahf
adc
pop
je
mov
push
fadds
int
aas
lock
pop
lds
or
and
push
daa
xor
cs
aas
add
pusha
xchg
push
call
add
in
daa
imul
ret
sar
clc
jp
or
adc
filds
mov
imul
xor
push
outsb
push
jecxz
jge
in
inc
mov
xchg
cs
fstl
inc
test
mov
add
cwtl
push
es
mov
mov
int3
push
adc
fwait
and
clc
pop
and
inc
outsl
xchg
repnz
cli
pushl
lods
cmp
or
xor
pop
push
sub
or
call
pop
lds
stos
sub
mov
ljmp
mov
orb
inc
cmc
leave
pop
jns
ds
fldenv
sub
ja
fildl
mov
mov
cld
test
xlat
jl
popf
jl
ss
cltd
pop
lea
cmp
cld
jns
jne
fisttpll
add
inc
fwait
es
jne
adc
inc
movsb
inc
inc
sbb
and
andl
stc
sbb
inc
daa
lock
push
les
pop
rcrb
jg
push
push
xor
rolb
pop
jge
loop
pop
inc
mov
push
and
call
not
push
roll
mov
jge
push
add
and
dec
sbb
stos
sub
add
xor
jb
ret
pop
sbb
bound
jecxz
aam
popa
hlt
fsubrs
movsl
in
aam
fnstenv
mov
or
filds
xor
cmp
ljmp
or
adc
mov
outsl
lock
shll
imul
mov
dec
pop
repnz
xchg
sbb
inc
cmp
insb
fnstsw
cld
push
ret
dec
jo
lcall
pop
ds
xchg
call
xrelease
jg
lds
jmp
outsb
push
inc
addb
pop
cmp
subl
cmp
sbb
ret
xchg
lcall
push
ja
dec
inc
add
das
movsb
stc
cltd
push
pop
add
jl
in
push
push
ljmp
lcall
pop
and
in
pop
shlb
pop
cwtl
gs
arpl
pushf
sub
pop
std
xor
std
movsl
aas
pop
mov
ret
cltd
or
adcb
and
inc
mov
ret
push
fdivrs
lods
mov
movsl
or
jp
cli
jmp
mov
pop
loopne
push
add
cli
imul
mov
add
rcrl
fistpll
inc
jb
scas
sbb
stos
cmp
mov
sub
jmp
cmc
add
jbe
cmp
mov
jl
dec
lret
mov
xor
jmp
je
dec
push
mov
mov
and
fstl
mov
and
jg
xchg
lcall
inc
mov
aam
mov
mov
push
fistl
cmc
cmpsb
mov
cmp
cltd
sbb
sbb
jbe
jmp
pushf
sub
fisubrs
mov
jmp
test
lahf
or
pop
jmp
aaa
nop
outsb
ja
mov
pop
ret
xchg
adc
lcall
cmp
pop
lock
push
mov
js
cli
clc
aad
sar
imul
push
nop
cs
push
data16
mov
fcmovbe
mov
push
push
push
dec
xlat
subb
mov
jnp
sbb
cmp
lds
jp
xor
int
js
aas
xor
or
mov
add
stos
jecxz
enter
sub
mov
dec
es
jg
add
fistl
out
shl
out
cmc
lret
fimull
repnz
sub
comiss
pop
lock
packsswb
rclb
test
dec
xchg
sub
fsubrs
test
pop
and
pusha
xor
mov
fwait
decl
loop
add
mov
sbb
add
inc
jp
ds
out
sbb
xchg
xchg
sub
cmpsb
aaa
fildll
lcall
sbb
xchg
insb
push
add
xchg
aas
xlat
mov
inc
sbb
mov
sub
dec
mov
fs
dec
jle
jae
rcr
mov
sub
xor
out
test
cmc
aas
xor
pop
sub
ljmp
push
out
cld
scas
pop
xor
jo
mov
insl
cli
add
xor
lcall
push
sub
sahf
inc
inc
loope
dec
cli
rorb
testb
bound
mov
lahf
je
push
fstp
push
add
adc
mov
sub
nop
mov
or
mov
das
aam
stos
pop
sbb
or
nop
pushf
sbb
mov
shrb
xor
pop
dec
test
lock
dec
mov
mov
push
sbb
decl
pop
nop
mov
insl
nop
adc
insl
shr
cmp
loope
dec
in
push
out
mov
mov
or
push
clc
mov
pop
cld
add
pop
add
jge
hlt
es
sub
cmp
je
enter
ljmp
out
pushf
xchg
shll
mov
neg
cltd
lcall
jno
pop
scas
and
xor
jno
sbb
loopne
cmpsl
int3
push
cmpsl
mov
icebp
push
rorl
sub
aas
cmp
ljmp
pop
pop
jbe
push
push
pop
cmpsl
inc
xor
test
add
nop
pop
mov
pushf
sbb
cli
ds
cmp
pop
outsl
enter
dec
ljmp
push
out
sbb
iret
jne
sub
lods
sub
jg
lock
add
push
inc
ss
mov
cmp
test
popf
aad
scas
das
test
cmpsb
cs
int
mov
inc
fcomps
ficoms
inc
mov
xor
pop
scas
jb
pop
movsb
mov
cmpb
pop
cmp
adc
in
add
jmp
gs
add
sub
sti
addl
mov
idiv
add
outsl
mov
mov
clc
push
sub
dec
jb
ss
incl
les
hlt
loope
sub
cmc
push
push
mov
inc
arpl
mov
adc
lods
out
inc
cmp
adc
add
inc
cmp
and
jg
negl
ret
jle
arpl
mov
ljmp
jb,pt
pop
mov
es
out
test
pop
call
mov
insl
data16
mov
push
cli
or
xchg
xor
das
and
fstpt
dec
fisubrl
not
xchg
xchg
test
jb
mov
int
into
cmp
call
das
cs
or
int3
test
int
stc
cmc
mov
mov
fs
scas
out
jl
and
je
jg
mov
adc
sbb
adc
xchg
lds
cwtl
adc
fsubr
clc
std
rcll
lahf
xchg
sbb
xorb
sbb
fsub
xchg
jl
inc
adc
sti
lcall
mov
mov
insb
jbe
fidivs
and
scas
mov
cmpb
mov
call
repz
test
fidivrl
adc
push
aas
aaa
adc
jle
arpl
jecxz
loope
sbb
xchg
dec
pop
ficompl
iret
into
ss
add
xchg
mov
dec
inc
jno
cmc
data16
ljmp
push
jp
adc
cmp
pop
mov
jge
push
dec
adc
mov
fs
leave
jo
jl
ror
fidivl
das
insb
inc
mov
iret
inc
and
popf
je
add
xor
fwait
jbe
pop
mov
mov
out
jg
xlat
pop
es
loopne
lea
pop
xor
add
cmp
aam
es
mov
jne
addb
in
xor
subb
add
pop
xchg
push
call
insb
or
mov
inc
add
hlt
dec
aam
mov
jbe
cld
lahf
inc
daa
lods
mov
pop
inc
adc
movsl
aam
test
fldt
rcr
pop
andb
pop
fistl
loop
fsts
les
jbe
out
jle
sbb
subb
pop
add
mov
push
lock
bound
enter
cs
fildll
pop
ja
sub
popa
push
es
push
mov
lret
sub
pop
call
push
jge
mov
ret
test
push
mov
dec
stos
jle
mov
push
nop
pop
sbb
es
or
sbb
ja
inc
sbb
repz
jb
jl
aam
subb
xlat
loopne
xchg
aam
and
add
push
xlat
jecxz
ljmp
mov
pop
int
inc
mov
js
jae
mov
fildl
loope
ret
push
js
lret
add
clc
subb
lock
shlb
hlt
lret
inc
sbb
jmp
jmp
pop
or
fisttpl
fs
dec
push
testb
out
loope
jl
mov
sbb
ljmp
mov
cmpsb
fidivl
arpl
dec
out
add
aas
scas
cmpsl
and
add
jns
arpl
push
mov
mov
jge
cmpsl
pusha
fcmovu
sub
push
fistpl
mov
movsl
arpl
shl
and
lea
bnd
jo
int
shrl
jb
sub
push
sahf
mov
sti
ds
or
insb
fucomi
lds
add
xchg
and
mov
or
push
outsb
push
ret
push
into
and
xchg
inc
loopne
jecxz
push
lcall
cs
leave
inc
pop
arpl
je
iret
scas
out
mov
ja
mov
xchg
add
jbe
je
xchg
les
pop
loopne
cli
in
pop
sbb
inc
xchg
pop
in
popa
sub
cs
pop
push
or
xchg
xchg
push
cltd
and
xor
sub
jnp
int3
data16
ljmp
fbstp
and
cs
add
inc
xchg
fisubrs
jne
jne
adc
sbb
push
loopne
mov
cli
dec
clc
adc
pop
dec
loope
pop
jl
cmc
jo
jp
lods
jg
sub
jo
sub
push
out
mov
aaa
sbb
sbb
sub
in
sbb
in
sub
cli
pushl
jnp
loope
psubq
add
stos
mov
lock
jae
test
into
pusha
add
mov
aam
jne
dec
subl
aaa
jb
stos
stc
inc
in
lcall
pop
jg
pop
xchg
and
out
jns
ljmp
add
hlt
aaa
pop
in
and
leave
xchg
mov
fldenv
cmpsl
addr16
je
jg
ret
jl
jnp
mov
or
fwait
imul
and
xor
pop
jo
out
lret
fdivrp
mov
push
stos
int3
mov
sarb
jl
data16
mov
add
add
xlat
fmulp
pop
fsub
outsl
adc
jecxz
pop
jmp
cmp
ljmp
lcall
or
xchg
lods
push
stos
mov
fistl
inc
nop
sahf
or
stc
adc
mov
xor
push
lock
mov
xorb
push
jns
or
mov
inc
movsb
cld
xor
jmp
add
fcomip
xchg
push
rcrb
idivl
inc
sub
stos
add
jo
sub
jb
or
cmp
ljmp
hlt
sub
inc
fcmovne
sahf
into
sahf
sbb
sbb
mov
push
mov
push
fcoml
and
outsl
and
sbb
mov
mov
dec
clc
inc
pushl
sbb
rcll
dec
es
sarl
mov
lods
sti
insb
xchg
aaa
rorl
call
mov
sub
xchg
pop
lahf
mov
clc
cmp
addl
jmp
pop
fistps
pop
xor
incb
pop
pop
jns
enter
jecxz
jo
dec
mov
xchg
pop
cmp
mov
popa
and
pop
ss
adc
cmp
sbb
fdivrs
cmp
add
loope
adc
rcll
fcmovnu
sbb
outsb
insl
out
fmull
ret
popf
pop
inc
sbb
ret
push
loope
pop
aas
fisubl
mov
inc
fmull
xorw
mov
or
sbb
push
mov
mov
aam
xchg
sub
or
cmpsb
clc
mov
addl
jae
ret
pop
or
shl
inc
xchg
mov
aaa
xor
sahf
loopne
pop
je
mov
test
aas
or
lret
inc
and
ds
subb
xor
mov
push
pop
int3
lods
push
stc
pop
xchg
and
fwait
idivb
jb
pop
inc
aad
les
aas
loop
sbb
mov
iret
pop
call
sbb
inc
cmp
xchg
inc
cs
ss
xor
out
jb
add
into
in
mov
push
jp
or
mov
jg
xchg
rcrl
std
rol
cli
mov
in
fdivr
mov
jl
testl
mov
rcr
jno
aad
repnz
pop
aaa
repz
inc
jno
push
fdiv
mov
lret
mov
sbb
mov
test
xchg
or
pop
nop
ret
fs
mov
ss
mov
cmp
jecxz
push
aaa
add
xor
stos
aaa
push
daa
in
fucomi
adc
lret
pop
in
stos
roll
lds
test
decb
pop
fcoml
add
mov
fucomp
cmpsb
icebp
insl
adc
mov
test
pop
popa
xor
sbb
jae
mov
add
repnz
icebp
inc
xchg
in
dec
addl
rcr
xorb
jbe
jnp
inc
cmp
cmpsl
cli
sti
out
clc
pop
fcompl
sub
push
jns
stos
sub
cmp
xor
push
inc
jmp
and
inc
frstor
in
pop
push
aam
or
aas
push
ss
pushl
test
in
xchg
xchg
or
cltd
inc
mov
cli
fistpll
jmp
jl
mov
jb
jg
scas
sub
add
cmp
dec
insb
outsl
pop
mov
int
cmpsb
into
je
inc
dec
or
add
stc
mov
push
cmp
sub
stos
sbb
cmc
cs
js
pop
fsubl
inc
repnz
pop
pop
popa
fs
or
pusha
pop
mov
cltd
xor
stos
sub
sbb
incl
fcoml
and
mov
pop
adc
loope
jmp
adc
jmp
add
hlt
xchg
stos
sarb
shrb
or
cmp
ja
add
aaa
cld
mov
push
pop
fdivl
cmp
inc
repnz
dec
or
imul
and
enter
jns
out
cli
cmp
clc
lock
pop
mov
push
jbe
js
mov
aam
gs
cltd
mov
cli
pop
pop
mov
adc
xchg
outsb
test
sbb
sbb
inc
mov
clc
cmp
mov
lds
xchg
into
lds
data16
add
push
mov
sbb
imul
insb
insl
xor
cwtl
cmp
mov
xlat
lret
adc
jp
jb
cltd
rorb
int
mov
cltd
stos
or
and
jp
das
mov
xchg
xlat
jb
and
cs
clc
dec
aaa
in
add
cmp
test
iret
pop
insb
lret
jbe
mov
cmp
mov
repnz
pusha
mov
push
or
lock
jb
push
enter
push
leave
lcall
hlt
fiadds
lods
add
clc
and
roll
jns
inc
mov
mulb
stc
mov
ret
outsl
call
push
ss
mov
pop
cmp
decl
pop
xor
push
ret
mov
pop
xor
dec
icebp
cmp
adc
adc
sar
pop
rcll
decl
mov
fnstsw
and
sub
sbb
fadd
lock
push
jecxz
inc
cli
lcall
push
adc
mov
lock
and
fidivs
mov
js
ljmp
mov
ja
pop
lret
mov
sub
fs
call
sbb
movsl
jl
mov
arpl
push
push
incl
lods
or
xor
into
pop
sbb
push
std
add
je
push
mov
xor
pop
cmp
in
mov
lret
imul
cld
mov
or
or
push
js
hlt
cmp
push
sbb
out
xchg
push
clc
adc
clc
cs
notb
jge
test
pop
cmp
arpl
fldt
gs
movsl
in
mov
and
pop
mov
aaa
test
clc
push
jb
or
or
lcall
xchg
sbb
cwtl
pop
scas
mov
loope
jnp
leave
andl
pop
ljmp
subb
jp
mov
add
das
lahf
mov
cmp
int
sub
bound
push
aas
js
ja
inc
sbb
ds
pop
in
out
jg
icebp
push
jbe
inc
pop
mov
test
pop
subb
cmp
push
cmpsb
pop
mov
mov
inc
mov
lret
push
pop
and
cs
mov
loopne
cli
mov
or
jmp
xchg
mov
ret
test
fdivr
ljmp
jp
push
inc
idiv
or
push
adc
inc
loopne
mov
decl
cli
push
clc
popa
jo
dec
lret
negl
addr16
mov
mov
mov
je
dec
lahf
mov
std
nopl
stc
jb
decl
add
inc
repnz
js
sub
loop
pop
clc
mov
or
push
and
roll
fistpll
stos
fimull
push
lcall
aam
call
and
add
xor
sbb
mov
filds
mov
fdivs
pusha
push
push
sub
sarl
add
test
mov
push
call
jno
sub
in
cli
ds
sub
lods
jmp
adc
mov
cmp
jp
call
mov
es
rolb
fsub
fs
sbb
push
pop
jecxz
adc
push
js
and
mov
inc
or
cmpsl
push
je
jae
je
popa
pusha
call
mov
ljmp
ss
jo
inc
jbe
sti
xor
repnz
dec
aas
stc
add
lret
mov
sbb
aam
mov
cmc
sub
cmp
cs
pusha
and
push
sub
in
das
or
mov
insb
mov
xchg
push
mov
jo
add
sub
outsl
loopne
inc
enter
inc
mov
outsl
mov
bound
dec
ret
stos
sbb
add
icebp
aas
cltd
or
mov
loopne
ficoml
loopne
mov
ja
popf
mov
leave
mov
pop
jb
pop
sub
arpl
aaa
and
iret
jecxz
xor
push
sbb
inc
cmp
ret
nop
imul
aam
dec
and
outsb
rorl
cld
sti
ljmp
dec
jno
jl
je
in
push
pop
jae
rcll
iret
pop
fildll
cli
inc
insb
fidivl
or
jnp
lahf
add
mov
loop
bound
push
add
ret
push
mov
sbb
ss
adc
dec
or
outsl
into
stos
stc
mov
outsb
sbb
gs
ror
fidivs
sbb
stos
adc
mov
pusha
sub
jo
mov
xlat
subl
ffree
int3
lahf
adc
adc
int3
mov
mov
aad
mov
sbb
mov
pop
xorb
sub
lret
dec
mov
mov
and
in
jge
std
mov
push
lock
mov
imul
rcrl
jmp
test
pop
fdivrl
shll
retw
sbb
or
outsl
lea
mov
call
clc
addb
jo
rcrl
pop
mov
pop
incl
shlb
fcmovnbe
inc
iret
xor
lock
mov
or
pushf
les
fists
jo
jl
jecxz
loopne
loope
mov
adc
insb
mov
repz
mov
push
cwtl
xor
lahf
xor
mov
jp
fisttps
stc
addr16
adc
push
xorb
mov
bound
insb
sarb
mov
stos
adc
nop
adc
popa
cli
mov
push
inc
stos
sbbl
jg
jg
pop
sbb
loop
loop
cmp
call
mov
imul
jns
mov
fsubrp
mov
imul
add
push
insb
dec
hlt
cmpsb
push
push
cmp
outsb
push
testl
sahf
or
scas
pop
push
test
jg
xor
lds
jge
mov
shlb
stos
call
clc
in
outsl
cmp
imul
mull
mov
cmc
pop
nop
push
sub
pop
jne
ss
inc
popa
mov
jg
sar
test
cli
das
fisubrl
pop
lahf
sbb
and
sbb
and
dec
rclb
in
jbe
jl
push
fcmove
jge
push
incl
pop
and
xchg
adc
test
decl
sbb
iret
xchg
or
mull
mov
fwait
sbb
adc
or
or
ljmp
push
push
lahf
sbb
cli
add
adc
push
cmp
sub
xchg
lods
testl
and
adc
adc
xchg
jl
fcomip
out
clc
adc
or
push
add
aaa
add
mov
mov
cld
test
std
mov
cmc
int3
sbb
sub
pop
pop
sbbb
mov
movsb
mov
dec
adc
dec
cmc
fstpt
lret
fcoms
cld
subb
ret
xor
popf
mov
lahf
and
jle
aaa
std
negb
mov
pop
cmp
add
mov
loopne
inc
scas
adc
mov
sub
push
fcmovu
rsm
outsb
clc
mov
sbb
sbb
mov
jl
int
outsl
pop
push
insl
imul
aam
add
push
lock
daa
out
stc
jne
pop
xor
test
repz
pop
out
les
je
fwait
stos
push
push
xlat
mov
jg
ljmp
addr16
ficoml
or
das
shrb
out
or
push
inc
or
orb
and
sub
adc
dec
push
adc
in
add
pop
je
lds
or
pop
out
and
jmp
lods
cwtl
pop
mov
movsl
aad
repz
xchg
stos
icebp
jg
bound
fnstcw
xor
stos
push
cmp
rorb
jg
and
loopne
gs
add
scas
ds
pop
test
jmp
pop
sub
or
inc
pop
push
cwtl
daa
lods
fsubrl
fcoms
test
es
and
stos
mov
mov
push
jle
mov
ja
xchg
stos
sarb
fwait
mov
loop
push
clc
pushf
push
adc
ret
or
jl
test
dec
cmp
cli
jne
mov
mov
inc
pop
mov
sub
lods
jle
roll
mov
movsb
popa
mov
scas
cmp
cmp
xor
notb
push
jle
xchg
ja
jle
ret
pop
mov
stos
into
adc
lock
mov
sarb
add
pop
push
inc
insb
and
testl
call
fimull
adc
scas
or
mov
jp
push
es
adc
mov
push
hlt
ja
mov
adc
fldl
add
orb
ds
call
test
inc
mov
sti
mov
pop
les
push
sub
cmp
stos
clc
jg
je
fistps
mov
cmc
es
pop
daa
pop
or
in
xchg
jns
repz
pop
mov
xchg
jmp
mov
pushf
xchg
push
push
test
xor
stos
cmp
rcrb
mov
pop
xchg
inc
lods
ret
js
pop
fwait
adc
xchg
loope
shll
inc
jp
and
lcall
push
and
jl
mov
cs
pushf
call
mov
add
mov
lock
nop
jbe
add
test
cli
xchg
pop
int3
sub
add
push
dec
nop
mov
pushf
inc
ja
push
inc
pop
cld
stos
and
test
int
loopne
or
loopne,pn
test
adc
hlt
add
jnp
inc
ds
xchg
aam
out
mov
insb
das
sub
fldt
mov
dec
mov
stos
mov
inc
subb
ds
dec
outsl
andb
mov
cmp
pop
mov
fdivp
lcall
idivl
push
fwait
lea
push
bound
mov
mov
shll
rclb
push
lcall
pop
outsb
inc
inc
jmp
mov
dec
adc
lods
mov
cmpb
outsl
jnp
ss
push
cs
lods
jno
dec
or
push
jmp
cmp
sbb
cmc
shrb
jmp
mov
in
xchg
iret
test
les
out
pop
daa
ds
jae
push
sbb
movsb
aam
or
std
shll
pop
jne
xor
ret
fwait
leave
insb
sub
enter
rclb
fdiv
das
add
int3
jmp
repz
adc
mov
pop
xorl
sti
push
scas
jae
into
xchg
jb
mov
dec
sub
sub
jb
jbe
rclb
push
inc
les
lcall
push
loopne
cwtl
xor
ret
inc
xor
jp
outsl
xchg
outsb
pusha
sub
scas
mov
pushf
out
xchg
je
and
aas
mov
mov
cmpsb
ficoml
int
test
push
push
popa
std
imul
inc
push
cld
repz
mov
lea
daa
pop
add
or
mov
gs
test
cli
xchg
shrl
fbstp
cld
xchg
mov
test
adc
mov
mov
dec
sub
leave
or
outsb
mov
dec
stos
hlt
sub
imul
inc
sti
jecxz
aaa
mov
inc
addl
in
mov
popa
push
stos
addr16
outsl
xor
ficoml
pop
aaa
xchg
hlt
mov
pop
push
enter
lds
sahf
and
mov
jp
or
divl
mov
cli
xchg
inc
fstpl
push
cmp
mov
std
testb
hlt
pushf
sbbb
sahf
lock
mov
loope
call
std
rclb
mov
outsb
jo
jne
fwait
add
lods
add
pushf
add
sahf
cli
divb
inc
push
push
or
xchg
mov
add
push
mov
jmp
mov
insb
mov
pop
sbb
xlat
pop
cltd
loop
test
mov
out
outsl
lock
outsb
pop
add
push
add
fcomip
jecxz
pop
cmp
mov
pop
outsb
dec
int3
les
pop
shl
mov
mov
negb
or
xor
adc
jle
mov
sub
leave
notb
test
fwait
rolb
sarb
or
lock
sub
add
mov
inc
push
jne
pop
rol
mov
mov
popl
mov
fcoml
sub
hlt
js
pop
clc
xchg
dec
sbb
mov
repnz
push
loopne
or
sub
es
push
or
cmp
dec
ret
pop
lods
nop
dec
xchg
out
ficoms
mov
adc
xchg
mov
sbb
push
lods
les
pushf
dec
jl
shll
pop
push
pushf
ljmp
cmp
lcall
push
jae
sub
notb
push
pop
mov
mov
mov
pop
mov
sarb
test
push
in
inc
test
lcall
lds
test
rclb
mov
jp
cli
call
inc
cs
test
dec
jbe
sub
mov
sub
insl
cs
mov
aaa
in
and
mov
clc
imul
push
pop
sub
mov
push
lods
add
test
push
lock
push
ret
jecxz
out
das
jl
out
mov
pop
xor
and
mov
add
xlat
pushl
xchg
jb
sub
mov
mov
fcomip
jne
sub
adc
stc
rolb
add
dec
xchg
fstpl
sbb
push
js
je
adc
jl
push
out
and
lock
nop
sub
jne
inc
into
ret
test
sub
cld
cmpsb
out
shlb
jl
bound
xchg
pop
mov
cmp
incl
adc
rolb
test
rcrl
or
mov
mov
adc
movsl
and
push
or
ds
dec
mov
mov
inc
fs
pop
shlb
mov
lods
lds
aaa
push
jne
ja
rolb
mov
out
jp
cmpl
nop
add
insb
sub
ljmp
out
lcall
in
in
inc
cwtl
add
aad
fistl
mov
rcll
xchg
in
nop
jmp
imul
mov
je
fisttps
pop
add
mov
repz
dec
inc
xor
inc
pop
sbb
push
in
mov
scas
mov
push
cmp
and
push
cmp
popf
shrl
mov
jmp
sub
push
mov
sub
pop
pop
pop
mov
ja
inc
pop
pop
inc
adc
xor
jg
lock
jnp
mov
clc
adc
jne
mov
repz
xlat
fstps
push
adc
lcall
mov
jl
or
xor
fbstp
lock
jl
popf
shrb
sti
test
fbld
das
addb
ss
test
mov
jmp
sbbb
iret
push
lock
mov
in
cltd
lret
pop
or
push
pop
sahf
cli
incl
roll
cmpsb
inc
int
jle
add
pop
sbbb
sub
adc
int3
and
add
adc
or
xlat
je
jbe
sbb
fimuls
dec
xchg
mov
jb
pop
or
sbb
shl
decl
add
das
push
divl
adc
mov
inc
jae
decl
ret
jl
in
mov
sahf
cld
je
insb
sub
adc
inc
sub
mov
mov
sub
aam
mov
cmp
in
sub
jne
mov
ror
in
ja
push
iret
popf
xchg
cwtl
sbb
cmp
pop
bound
jle
sbb
shlb
incl
fnstenv
xchg
sub
mov
mov
repnz
pop
out
cli
add
loop
stos
cmp
icebp
and
jnp
cli
jg
or
pop
and
pop
jb
out
push
adc
inc
lods
push
push
ret
scas
push
jl
mov
adc
jae,pn
les
jbe
push
ds
adc
or
pop
add
call
pop
jae
inc
sub
xchg
inc
rdmsr
add
inc
int3
pop
fisubs
adc
daa
mov
std
fbstp
jecxz
inc
mov
iret
mov
adc
nop
pop
mov
loopne
add
or
jmp
cs
sar
dec
fmull
fldl
nop
mov
mov
lret
add
xor
loopne
sbb
mov
mov
pop
push
lock
pop
enter
push
fcmove
mov
xchg
nop
xchg
insb
adc
mov
shrb
push
std
ljmp
es
inc
data16
mov
pop
jg
hlt
xchg
push
das
pop
out
inc
xchg
cwtl
push
jecxz
pop
inc
outsl
cli
incl
into
inc
add
mov
lahf
pop
xor
mov
fdiv
add
xchg
mov
xor
lcall
daa
jge
xor
push
jne
hlt
cmpsl
js
and
das
inc
sar
fmull
cli
add
pusha
fcompl
mov
and
hlt
mov
lahf
pop
fcmovnb
cwtl
push
mov
insb
dec
add
mov
outsb
mov
aam
nop
mov
aam
xor
out
incb
jp
icebp
filds
mov
movsb
loop
mov
xchg
jge
and
dec
xor
pop
pop
hlt
je
jne
dec
adc
jecxz
add
outsl
js
mov
mov
cmp
push
pop
or
adc
outsl
ljmp
andb
popf
pop
fildl
add
cli
xor
divl
mov
cli
pop
or
fdivl
ja
cld
movsl
or
inc
icebp
mov
popa
push
sti
pop
mov
and
sbb
lds
scas
cmp
or
jae
add
lret
lock
sub
mov
lods
aam
in
dec
sbb
fcompl
mov
inc
sahf
ret
xchg
jmp
stos
sub
call
cmp
xchg
sbb
mov
ljmp
scas
call
outsb
pop
mov
xchg
sbb
mov
pop
cld
cmp
loopne
sub
adc
xchg
cmp
push
sbb
push
sbb
sarl
sbbb
incl
subl
nop
in
mov
add
dec
xor
jbe
cmc
mov
sar
aad
lret
and
popf
scas
sbb
cmpsb
insl
sbb
pop
jle
cmp
hlt
test
and
mov
and
movsl
cmp
movsb
sti
cmp
cmpsb
pop
jbe
add
pusha
leave
mov
mov
shll
and
cwtl
cmp
ret
scas
divl
mov
movsb
sbb
pop
int
pushf
push
stos
imul
mov
ljmp
mov
daa
and
mov
fs
cmp
adc
and
sbb
sub
mov
pop
xor
xchg
mov
incb
inc
fistpl
add
pushl
std
faddp
in
int
pop
mov
inc
enter
cmp
push
xchg
xchg
in
sub
inc
push
mov
pop
aas
iret
orl
dec
ss
out
clc
divps
es
jae
and
xchg
not
xchg
push
mov
fsubrl
sub
lea
xchg
filds
mov
js
dec
pop
daa
rorl
cmp
ljmp
call
fldcw
imull
in
xor
fidivrl
push
push
shrl
sbb
int
and
and
loop
mov
stos
jg
inc
inc
adc
mov
sbb
pop
fldt
pop
jno
jno
xor
daa
sub
cwtl
push
jno
fcom
test
inc
mov
stos
jle
dec
pop
cmc
testl
mov
les
cld
jmp
dec
mov
xchg
lcall
dec
push
mov
jb
aaa
lea
cltd
and
cld
shrl
or
ret
pop
fwait
add
les
pop
shrb
fiadds
popf
stos
adc
jmp
add
aas
addr16
push
pop
int
pop
subl
push
neg
rclb
jl
ret
jb
lods
mov
orl
dec
mov
xor
icebp
pushf
ja
inc
dec
enter
mov
cld
add
cmpb
cmp
push
push
andl
pop
adc
leave
sub
aaa
sub
call
fwait
mov
push
movb
ja
xchg
xor
mov
inc
sub
scas
mov
sbbl
add
imul
add
pop
fisubl
jp
enter
mov
cs
rcll
sbb
incl
or
mov
pop
dec
cmp
mov
pop
stos
and
sbb
pop
rorb
rorb
add
cmc
cmp
add
add
push
jg
xlat
sub
lcall
std
clc
bound
je
aam
mov
lret
xchg
adc
lods
jecxz
out
gs
loope
scas
pop
sub
add
in
push
popa
sbbl
pop
ret
jb
xchg
cmp
mov
ljmp
or
stos
popf
ret
jmp
mov
stos
shlb
fildll
pop
test
lds
popa
push
cs
addr16
and
pop
inc
jl
daa
test
cld
mov
push
shl
out
imul
jmp
iret
sti
inc
aaa
jb
dec
jo
mov
cwtl
nop
pop
icebp
sub
cli
jbe
shlw
lahf
and
push
pop
aas
add
clc
or
jnp
movsb
mov
dec
mov
cmp
xor
push
test
mov
fists
inc
cmpsb
inc
icebp
pop
lret
scas
out
push
mov
enter
ret
push
xchg
std
inc
in
fdivrs
lea
cltd
icebp
lea
adc
ret
mov
icebp
jno
sbb
pop
vmread
pop
jo
fwait
xchg
insl
xor
loop
aaa
cld
add
mov
inc
jbe
inc
lock
pop
sub
out
loopne
sbb
or
mov
jle
loopne
shlb
out
fcoms
ljmp
add
adc
xchg
mov
and
call
dec
sbb
pop
pop
jo
or
mov
mov
xchg
lret
jp
ds
add
movsl
jg
push
stc
fistps
adc
push
movsl
mov
and
cltd
pop
pop
lahf
icebp
repz
scas
push
jg
fiadds
nopl
jae
or
cmp
fwait
enter
pop
push
dec
jb
aaa
loop
fsubrs
inc
lods
mov
lret
call
cld
inc
das
aad
jg
lds
mov
movsl
pop
mov
mov
inc
pop
movsb
dec
into
jmp
nop
inc
xlat
fsubl
jb
bound
popf
mov
mov
jo
insb
mov
or
sub
das
mov
bound
mov
jmp
sbb
pop
adc
xchg
aaa
in
cli
pop
xor
ret
jbe
cmpsb
movsb
pop
add
lock
aam
pop
mov
inc
ja
cmc
fldt
jecxz
xlat
ret
xor
out
out
rclb
dec
sbb
hlt
popf
jmp
scas
mov
pop
or
or
pop
pop
add
fwait
mov
mov
jg
inc
fildll
pusha
push
pushl
adc
sbb
mov
sub
xor
lahf
push
repnz
sbb
scas
fsubrs
lds
test
dec
jne
mov
scas
push
add
lahf
dec
mov
push
outsb
std
xor
aam
movsb
jp
pusha
xchg
outsb
cmp
mov
and
fwait
jp
testb
hlt
inc
cmpsl
xlat
mov
add
out
shlb
inc
adc
mov
sub
push
mov
inc
adc
sub
cmp
fimuls
aad
out
idivb
or
cmpsl
xchg
xchg
add
lret
pushf
or
mov
mov
fistl
movsl
pop
xchg
xchg
pop
mov
mov
hlt
fimull
add
leave
pushf
orb
push
mov
adc
ja
dec
pusha
fsts
gs
pop
or
pop
repz
xchg
pop
inc
lcall
jne
faddl
in
or
push
clc
lsl
sub
xor
shlb
lods
test
sub
js
xchg
dec
pop
into
insl
push
and
outsl
mov
jl
jns
addl
imul
je,pn
jno
sub
push
sub
inc
aaa
cld
outsb
es
mov
rcr
sarl
stos
in
scas
or
sbb
jo
fdivrl
movsl
insb
scas
into
jmp
pusha
sub
mov
decl
mov
cmp
in
ret
lock
mov
add
sub
dec
mov
fcomps
aas
add
and
and
loop
and
dec
sub
jge
lcall
fsub
addl
daa
ss
dec
or
clc
push
test
clc
ja
xor
push
inc
pushf
or
pop
jecxz
jno,pn
push
ret
pop
in
fdivrs
insb
rcrl
andb
out
xor
sub
test
inc
daa
push
dec
xchg
push
cmp
in
loopne
addb
sub
pushf
push
pop
popf
dec
inc
bound
aas
adc
fidivl
dec
push
xor
cs
or
pop
add
pop
mov
mov
mov
movsb
mov
jo
and
jge
mov
hlt
ficoml
lock
out
push
rclb
jno
fistps
mov
les
cmpsb
shlb
jne
in
pop
mov
rclb
ss
lds
cwtl
inc
add
pop
mov
or
cld
dec
scas
stos
jmp
mov
ss
hlt
jmp
pop
and
push
ja
loope
lock
lret
jge
test
and
stos
sbbl
xchg
mov
lock
lcall
push
pop
lock
sub
aas
stos
outsb
cwtl
rorl
sbbb
and
xor
jl
adc
or
mov
mov
ret
jno
out
pop
jo
jg
mov
faddl
adc
mov
xchg
sbb
movsb
das
cwtl
push
js
shlb
and
loopne
pop
je
adc
push
jg
xor
outsl
pop
cli
cwtl
push
push
inc
sub
adc
pop
inc
mov
push
and
adc
call
test
outsb
add
aaa
cmp
sub
sbb
stos
outsb
xor
sbb
add
pushf
jge
jp
movsb
push
sub
push
dec
cmp
scas
or
cltd
sbb
in
jmp
addr16
pop
mov
rorl
nop
pop
inc
mov
xorl
adc
push
mov
stos
scas
ret
adc
addb
inc
push
xchg
jo
stc
cmp
mov
call
or
das
outsl
jno
inc
imul
sbb
jo
jg
outsl
fisubs
pop
aad
int3
cs
xor
push
loope
js
xchg
stc
adc
lock
and
inc
or
mov
adc
mov
fmull
sub
add
subb
push
add
xchg
daa
es
jge
sub
adc
arpl
stos
mov
jle
adc
sbb
push
xchg
push
push
push
insl
shlb
add
pop
inc
repnz
add
push
or
lcall
call
pop
mov
scas
xor
or
pop
and
dec
test
and
or
xchg
add
xchg
cmp
add
lock
sahf
loop
jl
dec
subb
cli
les
shl
pop
mov
sub
aaa
jb
out
adc
or
sbb
mov
outsb
loopne
scas
add
pop
repnz
adc
mov
pop
mov
mov
push
std
add
icebp
aaa
mov
addr16
les
aas
ss
incl
andl
leave
lock
lock
sbb
fs
stos
mov
outsl
or
xor
push
fs
add
addr16
sbb
rorb
pop
fcoms
insb
inc
fnstsw
mov
push
aas
add
ljmp
mov
pop
sub
out
jle
sub
jae
mov
std
mov
iret
adc
nop
lcall
fbstp
imulb
push
pop
mov
mov
mov
sbb
cmpsb
sbb
mov
add
push
in
and
mov
call
pop
lds
sahf
xor
xor
clc
push
sbb
mov
or
icebp
push
lcall
jmp
aam
fists
sbb
loope
mov
cs
mov
xchg
pusha
cmpsb
enter
jg
xchg
cmpsb
aas
aaa
xchg
add
and
aaa
jo
out
mov
in
dec
jbe
jp
mov
mov
cli
and
fwait
mov
mov
sbb
add
xchg
dec
insb
fcmovb
cli
pop
mov
push
aam
mov
pop
xor
mov
pop
sbb
outsl
clc
lods
jns
jns
hlt
cmp
jp
enter
mov
insl
mov
sub
lret
adc
sbb
aad
sahf
cld
imull
sub
pop
adcb
aad
jns
push
sbb
push
dec
out
outsb
lret
js
adc
into
roll
mov
aaa
cld
jmp
cli
inc
mov
notl
ja
repz
push
mov
cmc
pop
xlat
loope
mov
mov
mov
jae
jbe
adc
rclb
movsb
cwtl
aam
jnp
test
cmpsb
incl
dec
jmp
inc
xchg
inc
push
mov
fldl
sbb
std
or
out
push
repnz
add
mov
sub
mov
ljmp
subb
int
fisubrl
lret
inc
in
repz
js
mov
in
lret
ljmp
fsubp
ja
les
fnstsw
cld
jne
mov
xor
pop
imul
push
xor
mov
scas
std
or
sub
xor
and
cld
sbb
push
mov
pop
mov
mov
scas
iret
ja
sar
outsl
subb
jp
adc
inc
outsl
pop
sar
fildll
xchg
in
ret
dec
lret
add
inc
xor
add
cld
mov
xchg
movsb
push
fildll
std
stc
repz
loope
add
out
pusha
test
jg
subb
xchg
shrd
jo
mov
jl
aad
test
out
int
push
clc
pop
push
scas
sbb
fldl
inc
and
dec
or
rcrl
mov
cmp
and
jle
movsb
cmpsl
idiv
jmp
test
push
decb
cwtl
fdivrs
inc
aaa
ret
inc
hlt
mov
or
jnp
jg
mov
xchg
call
cmp
pop
filds
or
add
std
outsl
xor
repnz
mov
ficomps
jg
sar
fsubrs
imul
ret
aas
loopne
loope
ret
or
paddsb
sub
pop
dec
aam
push
loopne
jno
mov
lret
xchg
sbb
add
stos
mov
mov
pop
adc
icebp
scas
sbb
xor
cmp
imul
hlt
mov
sarb
mov
es
mov
add
outsl
stos
bound
inc
les
inc
cs
pop
out
sub
mov
fnsave
inc
popa
pop
sub
mov
jg
cmp
mov
stc
scas
and
orl
xor
xchg
sbb
push
les
ficoml
xchg
cmp
xchg
test
fs
loopne
push
adc
mov
add
cmp
lock
sbb
cwtl
sbb
icebp
dec
xchg
cmc
fsubrs
add
pop
cli
xchg
cmp
or
cli
fildll
sbb
add
shll
xor
gs
mov
xchg
mov
sbb
jb
stc
fidivrl
add
aaa
fcomip
push
mov
jl
outsl
icebp
repz
clc
movsl
pushf
push
repnz
mov
or
or
jne
push
adc
ret
xchg
mov
in
mov
out
sbb
push
sbb
cwtl
jmp
jnp
dec
sub
xchg
and
iret
popf
scas
iret
push
cmp
psllw
fcomip
incb
lret
lock
mov
xchg
lds
push
inc
pop
xchg
bound
or
sub
adc
rclb
into
leave
mov
jmp
lds
negb
jns
mov
pop
popf
mov
and
je
jmp
sub
ljmp
mov
rcrl
cli
idivl
dec
dec
stos
insl
sti
cmp
scas
dec
lds
cwtl
pop
cmp
cmp
test
sub
xor
adc
call
push
and
rol
scas
cmpsl
ja
stos
xchg
or
scas
ds
cmpsb
mov
enter
test
and
mov
pop
dec
mov
push
mov
adc
inc
shl
out
pop
mov
ss
fs
and
mov
ljmp
add
xor
push
cli
dec
inc
xchg
mov
movsl
fisubrl
pop
or
ja
fbstp
mov
enter
lods
mov
aaa
in
push
pop
jg
cld
stos
cmpsb
fcmovnbe
data16
in
mov
invd
jo
pop
lcall
ljmp
faddl
inc
or
xchg
mov
scas
xchg
gs
jnp
jmp
push
nop
orb
daa
into
pop
out
pop
xor
imul
in
mov
pusha
les
and
imul
adc
decb
test
subl
pop
push
jle
icebp
pushl
push
pop
mov
popa
jns
dec
sahf
roll
xor
sbbb
push
mov
push
pop
and
shlb
push
lods
or
call
test
lds
mov
dec
dec
jg
jnp
inc
cs
outsb
adc
popl
push
cmp
cmp
cmpsl
pop
test
cld
or
jge
push
pop
mov
xor
ret
outsl
pop
js
loop
mov
dec
fdivrp
dec
cmc
push
push
or
mov
hlt
or
inc
fwait
sbb
lcall
jg
xor
out
inc
inc
push
fimuls
mov
inc
and
push
cld
shl
pop
mov
das
sbb
cmpsb
mov
sub
fld
sbb
rolb
aam
cmp
dec
xchg
test
int3
icebp
fwait
movsl
add
mov
call
mov
and
cld
hlt
pop
call
fdiv
xor
xor
outsb
lret
out
add
cmp
mov
mov
mov
test
or
sub
lods
xchg
cmp
ficompl
ret
jl
mov
loope
jbe
fsubp
push
bound
xchg
cwtl
xchg
movaps
fdivrs
mov
push
cltd
movsb
or
scas
mov
or
stos
loope
lret
mov
mov
pop
lock
cmp
push
jp
call
loop
pop
inc
pop
xchg
aas
cwtl
out
jae
push
aas
xchg
lcall
repnz
fdiv
incl
mov
push
fstl
lods
aaa
mov
scas
push
cmp
dec
jge
or
xlat
and
dec
ljmp
xchg
rclb
cld
dec
add
retw
add
test
icebp
push
repz
loop
cmpsb
and
rcl
mov
jo
lea
jne
icebp
dec
inc
push
hlt
mov
out
or
pop
jg
mov
mov
push
jmp
mov
pop
scas
cmp
and
decl
mov
and
movsl
rolb
incl
insb
stc
jp
inc
movsl
sbb
fidivrs
sbb
int
push
mov
lods
fmulp
adc
fcom
add
lahf
mov
sub
ret
xor
and
push
lds
insb
jb
xor
pop
rep
loop
fdivr
mov
test
fwait
pusha
mov
pop
mov
pop
push
call
push
jg
pop
mov
cmpsb
lcall
fcomp
adc
jl
pop
mov
sti
andl
add
icebp
add
in
ret
add
push
cld
notb
mov
loop
or
movsb
sbbl
pop
loop
outsb
xchg
xorl
inc
cmpsb
sbb
adc
lock
int
aam
mov
pop
sbbb
mov
ljmp
mov
sahf
out
cmc
mov
jnp
sahf
adc
jo
mov
jmp
enter
add
je
or
inc
sub
xor
push
sbb
cmpb
out
cmp
sbb
xor
jno
or
push
dec
mov
subb
test
inc
xchg
outsb
add
ljmp
adc
mov
cmp
mov
mov
daa
push
out
dec
test
arpl
jle
sbbl
leave
dec
add
fmuls
jl
jb
xchg
sahf
mov
mov
xchg
jp
int
shlb
and
rcrl
sbb
sar
mov
aad
push
sbb
in
pop
inc
test
cld
jg
das
inc
add
and
add
out
adcl
fisubs
add
jle
pusha
js
push
call
movl
hlt
imul
pop
insb
lods
xor
sti
das
cs
mov
test
std
xor
loope
lods
ja
test
shl
loop
push
dec
arpl
in
mov
enter
dec
ljmp
into
or
mov
adc
pop
out
jg
push
adc
subl
loop
add
adc
dec
aam
jmp
and
sbb
jmp
lods
rol
pop
shrb
lock
int
in
pop
loope
or
cmp
sub
push
xlat
xchg
xchg
mov
stos
rcr
addb
scas
adc
add
inc
cmpb
test
cs
aas
nop
jno
pop
or
pop
cmp
xchg
lds
sbb
sbb
clc
add
xchg
inc
push
rcr
fmul
push
fiaddl
mov
push
dec
dec
xor
cwtl
cmpsb
inc
jbe
dec
lock
sti
jno
mov
outsb
xor
clc
orl
mov
dec
jno,pn
mov
ja
popw
stos
add
mov
adc
and
fisttps
notl
ds
mov
and
add
fcmovnu
aam
sbb
mov
ljmp
xchg
cli
les
push
leave
loope
divl
std
jns
push
or
add
inc
xchg
add
or
jbe,pn
push
cwtl
dec
adcb
mov
inc
cmp
out
ret
outsb
adc
pop
loopne
lahf
sub
jle
ret
mov
cmpsl
outsl
fdivl
test
insl
mov
sub
xchg
inc
cmp
xchg
aam
mov
stos
aaa
out
mov
jbe
lea
add
sbb
cld
xchg
aam
in
mov
sti
push
mov
adc
cmc
filds
int
jnp
stos
iret
ficoml
ss
mov
popa
daa
aad
cmp
xor
andb
or
je
call
mov
xchg
cmpsb
ja
and
mov
ds
enter
push
or
xchg
sbb
sti
add
inc
fs
imul
cmp
pop
incl
sub
in
cwtl
push
push
pop
je
sbb
aam
pop
mov
scas
mov
cmc
pop
call
lock
inc
loope
aas
rcrb
xor
mov
cltd
and
es
mov
lret
jbe
insb
ds
cld
outsl
cmp
pop
push
sub
hlt
imul
mov
sbb
not
and
shl
mov
call
push
fbld
mov
and
scas
shrl
ret
mov
mov
insl
addr16
popf
add
repnz
ds
push
jge
and
xchg
inc
aam
loop
cwtl
lret
push
cmp
cmp
xchg
add
scas
cmpsb
mov
xchg
mov
std
dec
ss
mov
andb
outsl
xchg
ret
adc
sub
test
xchg
gs
mov
insl
sub
xor
mov
add
cli
mov
mov
and
clc
aad
dec
pop
push
fwait
js
and
pop
fimull
shr
push
cmp
mov
jae
and
or
test
call
test
test
lcall
mov
mov
mov
push
mov
sub
jb
fistpl
out
adc
imul
xchg
mov
pop
or
outsb
add
sub
scas
jo
lock
sub
out
lds
sub
mov
mov
sub
sub
cld
ljmp
lock
dec
aad
inc
dec
imulb
xchg
or
loopne
leave
push
and
jg
dec
xor
or
push
push
fildll
pop
mov
int3
adc
pop
enter
pop
lods
inc
imul
pop
movsb
into
aad
jo
imul
or
pusha
push
nop
shll
adc
stos
pop
mov
js
mov
fsts
imul
cmp
mov
cli
inc
xchg
mov
sbb
add
loop
incl
ljmp
jmp
call
add
dec
pusha
cmp
or
mov
ret
mov
inc
clc
push
jbe
xchg
add
repnz
dec
push
jns
cmp
push
add
jle
aaa
enter
iret
inc
ret
and
sub
or
jmp
cld
cmp
into
iret
testb
rolb
mov
gs
jnp
cld
aaa
mov
nop
jo
push
jo
sbb
pop
sub
std
jecxz
add
add
lods
push
mov
aas
outsb
sub
or
mov
bound
and
cmp
jmp
lock
idivb
adc
stc
decl
sbb
mov
cmp
inc
add
pusha
and
stos
lods
fisttps
mov
jb
inc
adc
std
dec
fdiv
imul
pusha
mov
cmp
sub
jp
pusha
mov
push
mov
jbe
and
fsubrs
lock
std
adc
pop
jne
xchg
add
subb
jo
mov
pop
pop
add
ljmp
sub
adc
jb
add
mov
and
cmp
mov
pushf
pop
mov
movsl
test
push
add
xchg
enter
out
sahf
push
filds
inc
sbbb
lcall
and
push
push
lcall
mov
repnz
je
mov
or
push
les
inc
popf
sbb
and
subb
mov
pop
jmp
hlt
mov
fstps
xor
popa
imul
xchg
inc
out
add
sbb
fbld
or
xor
add
sub
sub
xor
rolb
enter
out
es
xchg
push
in
and
jbe
leave
in
and
pop
pop
stos
insb
stos
notl
sub
adc
xor
cmp
aad
loopne
jecxz
fnstenv
push
inc
call
bound
pop
leave
dec
hlt
or
and
mov
ljmp
lds
push
push
call
jle
cmp
nop
or
push
das
ret
pop
mov
outsb
mov
pop
lret
cli
pop
mov
lds
jl
xchg
jo
call
cli
jbe
mov
push
or
inc
jl
pusha
int
cwtl
mov
fs
int
fisubs
cld
lea
or
sti
mov
jle
les
xchg
mov
and
push
ret
clc
adcb
shlb
in
repz
psraw
loopne
pop
and
bound
in
pop
shl
xor
clc
mov
mov
je
negb
in
addr16
xor
or
into
xchg
ja
xchg
scas
jg
fdivl
nop
ret
push
pop
les
sub
mov
add
mov
jo
iret
fcompl
jl
ja
in
sbb
or
and
sti
hlt
stc
mov
shlb
push
les
jle
cmc
ror
ljmp
lea
pop
outsb
imul
mov
popf
aad
rcll
mov
je
and
decl
inc
jmp
pop
int
dec
mov
mov
mov
dec
xchg
lret
push
cmp
stos
test
pop
dec
pop
lock
call
jns
push
sub
cld
push
jecxz
adc
loopne
mov
lahf
mov
cli
mov
movsl
fldt
in
or
add
fiadds
push
scas
sub
jmp
movsb
dec
cli
push
mov
repnz
xabort
incl
mov
cmp
or
sbb
clc
mov
sub
sar
outsl
out
adc
cs
add
test
lret
or
inc
jg
dec
lret
sarb
inc
add
fimull
loopne
scas
sarl
arpl
pop
nopl
stc
xchg
mov
jecxz
mov
mov
and
sbb
repnz
pop
sub
fidivrl
add
add
push
push
fdivrp
lret
int
cmp
dec
dec
lock
fldl
sbb
push
jae
hlt
lods
scas
insl
jle
mov
push
std
xor
fldcw
int
arpl
ja
es
push
lods
push
aad
jmp
fwait
jle
fbld
fimull
bound
xchg
mov
and
or
clc
or
mov
lcall
sbb
xchg
mov
cld
pop
jb
ja
cmc
lahf
fsubrs
mov
mov
movsl
mov
enter
in
loop
sbb
repz
cmp
sarl
movsl
xchg
add
daa
aas
lcall
aad
xchg
imul
and
sub
and
rorb
test
rclb
addr16
adc
cli
sub
lret
jle
fnstsw
jbe
xor
xor
insb
pop
add
ficoml
sbb
push
push
cli
adc
cld
jb
xchg
mov
cmp
jle
and
mov
insl
push
pop
add
insb
out
mov
cmp
sbb
inc
into
pop
mov
leave
add
push
mov
mull
pop
mov
ret
mov
call
push
lret
mov
mov
lds
iret
push
mov
outsb
mov
ds
jne
data16
mov
jo,pt
and
inc
push
aaa
xor
sbb
pop
outsl
mov
pop
mov
push
cli
rcrb
jb
mov
cmp
mov
jb
mov
ljmp
fcom
test
lret
add
add
bnd
jb
in
push
fsubl
jb
dec
scas
mov
out
mov
mov
loopne
add
les
pop
clc
sbb
lret
jl
fdivrs
dec
insl
mov
rorb
push
push
popa
std
add
mov
test
in
fcompl
xchg
ret
mov
into
pop
aam
fadd
cld
cmp
mov
adc
dec
mov
adc
dec
xchg
add
pop
inc
xor
inc
pop
gs
jmp
sahf
fdivr
adc
out
push
xchg
mov
movsb
push
repnz
add
push
mov
xlat
mov
add
inc
inc
mov
push
in
enter
rclb
push
ss
and
mov
push
pop
hlt
or
cmc
scas
stos
push
sub
stos
and
push
xchg
test
out
fdivrl
stos
test
xchg
dec
out
dec
cltd
div
dec
jae
jg
cs
xchg
push
mov
outsb
sbb
xchg
mov
enter
push
mov
fists
mov
clc
sbb
sbb
add
fsubl
ljmp
or
xorb
cmp
cmp
das
clc
mov
xor
cmc
ret
out
pop
mov
lods
fsubrs
outsb
jne
adc
cmp
les
add
mov
or
cmpsb
add
into
push
fstps
pop
je
mov
scas
or
jmp
jmp
stc
add
ljmp
pop
or
js
push
jmp
jmp
jae
popa
pop
loop
cld
ljmp
or
and
jo
lret
ficomps
add
cs
pop
loop
jns
mov
or
smsw
mov
dec
cmp
pop
xchg
in
daa
push
cli
inc
cld
sbb
in
adc
dec
mov
cmp
fisttps
sahf
insb
dec
jae
xchg
and
sahf
sti
sbb
aad
pop
mov
ret
cli
rcll
imul
cmpsl
in
adc
lcall
ljmp
outsl
test
out
adc
ret
add
pusha
inc
push
pop
cmc
mov
sub
jmp
aaa
mov
inc
faddl
push
in
fdivl
hlt
mov
inc
pop
ret
into
out
push
adc
arpl
mov
mov
dec
mov
pop
out
push
inc
xchg
test
or
mov
cmp
cmp
popf
test
adc
daa
jecxz
dec
pushl
sbb
xchg
ljmp
xorl
imul
jb
rcl
mov
and
push
dec
orb
mov
mov
insl
std
push
pop
inc
and
inc
lock
aas
insb
mov
mov
repnz
cld
mov
stc
sub
neg
idivl
sbb
pop
adc
xor
insl
std
es
mov
and
clc
mov
push
and
mov
jg
pop
and
ror
pop
jmp
and
arpl
mov
add
xchg
nop
out
and
jp
clc
add
outsl
bound
frstor
pop
push
pop
push
add
fistps
ljmp
pushl
push
adc
sbb
aam
out
inc
adc
mov
pop
xchg
jne
or
stos
popl
cmp
xlat
mov
add
xchg
nop
inc
mov
mov
or
push
push
je
xchg
gs
add
incb
loopne
cli
and
pop
or
push
iret
fbld
sub
sub
mov
pop
ret
xchg
xlat
mov
mov
pop
or
lds
fisttps
stos
xor
sarb
xchg
dec
cld
js
add
mov
xor
mov
fs
xchg
mov
pop
mov
shl
jmp
lods
shl
push
pop
mov
mov
clc
or
pop
jbe
out
pop
jge
out
dec
cld
das
sub
pop
sub
loopne
mov
sbb
cld
ljmp
xor
cmpsb
sub
xor
pop
ljmp
stos
call
pop
push
cwtl
pushf
std
xchg
adc
lahf
out
lds
dec
loope
sar
mov
out
inc
mov
sahf
pop
lock
cld
sub
cmp
or
repz
gs
sahf
mov
pop
test
mov
inc
inc
je
inc
adc
and
cmp
shrl
inc
filds
adcl
cld
pop
loopne
pop
or
dec
push
sub
ret
sub
push
cwtl
push
pop
test
stos
out
or
shlb
test
loop
or
push
lret
add
mov
xchg
mov
fistps
mov
xchg
jo
int
add
data16
cltd
stos
outsb
lods
xor
dec
out
movsb
cli
ljmp
lods
es
xor
insb
pop
cs
xchg
les
mov
cmpsb
outsl
addb
add
es
adc
dec
sub
push
lock
adc
outsb
pop
sub
pop
cmp
fnstenv
add
insl
adc
hlt
shll
jl
dec
fildll
mov
pop
test
xor
outsl
clc
cmp
or
inc
cmc
adc
scas
cmp
movsl
push
sub
mov
add
lods
mov
xor
or
iret
cltd
dec
ja
adc
cs
and
pop
xor
cld
jle
loop
add
aam
outsl
cli
incl
xchg
jl
pop
xor
ljmp
jae
decl
arpl
divb
lret
clc
mov
shrb
add
sar
or
dec
fisttpll
push
mov
es
sbb
dec
mulb
or
xchg
jmp
push
jo
jge
xor
sbb
jg
push
pop
sub
insb
cli
jg
jg
jl
and
insb
mov
and
popf
aam
pop
out
lcall
push
add
xor
mov
pop
push
fsubrs
inc
sub
jp
cmpsl
out
andb
mov
inc
cmp
imul
pop
pop
lcall
int3
xchg
sar
in
enter
insb
lret
mov
inc
lds
mov
pop
loopne
sub
mov
adc
push
ja
mov
pop
fimuls
sbb
cmp
fadds
daa
pop
dec
addr16
jmp
out
ret
mov
cmpsl
mov
mov
adc
ret
jg
ja
and
sub
sahf
mov
pop
xchg
push
or
dec
mov
sahf
xchg
adc
clc
xor
push
popa
popa
dec
pop
daa
sahf
roll
scas
xor
sbb
fistl
incl
mov
rolb
pop
xor
pushf
mov
mov
movsl
lds
aam
out
pop
sub
sbb
adc
enter
mov
mov
test
xchg
cmp
xchg
push
add
lahf
cld
jne
imull
mov
mov
lds
jb
or
mov
mov
lock
mov
push
ss
popa
in
mov
push
xchg
dec
das
xchg
push
ror
xor
dec
jnp
psubusb
pop
jo
jp
mov
aam
inc
je
mov
pop
lds
add
in
pop
sbb
add
cmp
adc
cwtl
lock
sbb
pop
push
dec
hlt
jecxz
xchg
leave
xchg
sub
shlb
sbb
mov
popa
fwait
ss
lock
cmpsb
mov
pop
hlt
and
cmpb
lods
into
and
leave
fs
cmp
outsb
int
sub
cmpb
jae
pusha
jge
adcl
jge
ret
add
jl
mov
insb
and
dec
mov
jnp
xchg
fmuls
cmc
daa
sub
insb
mov
sbb
sub
sbb
mov
in
and
dec
ret
fs
xor
sbbb
incl
xchg
and
rclb
push
push
cmp
lock
mov
xchg
into
loopne
mov
iret
or
loop
loop
cs
push
rcr
test
fdivs
cmc
cli
idivb
mov
dec
ss
push
ret
imull
mov
or
bnd
mov
dec
pop
adc
jg
mov
shll
es
cmp
sub
icebp
cltd
mov
xchg
mov
mov
inc
and
ret
das
clc
dec
pop
imul
data16
jb
xchg
enter
cmp
mov
xor
cmc
in
pop
pusha
cmp
xor
xchg
inc
push
inc
add
fdivs
sbb
les
fisubs
mov
pushl
sub
rolb
test
les
add
pop
insl
lds
add
jmp
ss
inc
je
jg
xchg
out
xlat
pop
jg
test
sub
lods
ficomps
jne
decb
rolb
cmp
inc
mov
pop
xor
pop
mov
sub
jae
test
int3
or
or
xchg
ljmp
pop
lods
push
ret
dec
sbb
loop
mov
push
dec
pushl
xorl
cmc
negl
pusha
xchg
mov
rcl
mov
cmc
enter
sarl
push
insb
movb
lret
xchg
mov
je
push
das
sbbb
js
mov
loope,pt
pop
loopne
cmp
movsl
xor
or
mov
pop
mov
mov
push
movl
pop
outsl
dec
iret
pop
cwtl
icebp
mov
jbe
jge
jne
inc
pop
cld
or
pop
hlt
sbb
rcll
xchg
xchg
call
push
mov
out
hlt
inc
pop
or
out
push
inc
mov
aas
stc
dec
xchg
and
lcall
dec
push
adc
test
andb
cltd
sahf
fdivr
jg
or
insb
or
cld
sub
sub
icebp
mov
jmp
sub
addl
inc
cli
mov
stos
fiadds
mov
cld
jl
lods
and
scas
clc
in
xchg
cmp
hlt
add
mov
je
mov
sub
mov
xchg
rorl
dec
sti
or
cmpsl
adc
push
jnp
sarl
arpl
add
sbb
je
sahf
fsubrs
mov
call
loope
dec
pop
out
pop
mov
cli
rol
dec
pop
jb
lock
inc
mov
shlb
int
dec
pop
cmp
hlt
cltd
cmp
popa
pusha
and
add
sub
adc
out
fiadds
insl
clc
loopne
shl
nop
sub
sub
hlt
mov
imulb
cli
cs
or
push
fdivl
pop
sbb
fnsave
gs
in
addr16
push
sub
dec
jbe
incl
movsl
push
mov
push
and
mov
dec
std
or
xchg
pop
xor
or
pop
mov
pop
or
test
mov
add
push
mov
fwait
mov
cmp
ret
std
add
pop
iret
les
mov
mov
fcomps
mov
or
call
ljmp
xchg
aas
mov
movsl
stos
loop
sti
and
loopne
push
mov
icebp
in
int
out
or
ds
insl
mov
pop
adc
xchg
aaa
pop
and
mov
dec
sub
insb
js
inc
scas
imul
ss
mov
incb
push
xchg
push
insb
xor
js
mov
inc
xchg
inc
xor
adc
jmp
push
hlt
test
mov
cld
mov
ljmp
dec
out
or
push
mov
inc
aam
cld
pop
decb
int
leave
add
sbb
pop
ret
pop
add
fisubrl
mov
addr16
lock
loopne
scas
mov
sahf
pushf
stos
cmc
add
hlt
stc
aas
out
xor
pop
mov
inc
daa
fucomi
ret
decb
add
mov
outsl
fwait
test
rclb
xor
push
sbb
enter
sbb
jns
push
out
cmp
ja
mov
int3
push
sahf
sahf
mov
push
cld
lds
inc
pop
in
fisubrl
cmp
mov
es
and
std
jg
lods
das
add
mov
xchg
call
xchg
shll
mov
lods
loope
adc
xor
int3
dec
jl
ds
gs
xchg
push
push
dec
test
mov
pop
jl
mov
inc
call
cmp
sub
dec
cli
add
aas
push
fbld
jmp
ret
xchg
loop
int3
and
adc
stos
pop
add
rep
stos
ljmp
mov
add
lock
in
data16
mov
jns
movsl
push
cld
and
sub
dec
sbb
push
ljmp
test
pop
cld
adc
imul
lds
push
lods
ret
sbb
aaa
inc
pushl
outsb
cmp
jbe
mov
or
jo
mov
sub
movsl
push
dec
add
lds
mov
cwtl
or
fbld
shrb
mov
mov
adc
add
fdivrl
ljmp
xchg
outsl
cs
push
stc
es
pop
add
sbb
dec
pop
inc
daa
dec
rorw
push
inc
sub
faddl
scas
lods
nop
je
mov
mov
cmp
mov
push
flds
stos
loopne
gs
and
cs
test
pop
std
negb
mov
jge
xor
sarl
js
inc
call
push
push
or
js
cltd
fsub
pop
mov
hlt
pop
repz
push
and
shrb
testl
dec
inc
push
dec
push
clc
or
push
fstpt
hlt
mov
mov
jp
jb
cmc
sub
inc
xor
test
pop
add
sub
es
lcall
push
inc
sbb
xchg
stos
or
sbb
jae
push
je
pushf
lcall
mov
push
sbb
inc
or
sbb
and
fidivrs
or
mov
mov
inc
dec
push
or
addb
mov
xor
mov
cmp
fdivr
mov
loopne
sub
ss
in
in
inc
in
sti
sub
lret
aas
mov
fadds
movsb
push
das
clc
decl
out
add
pop
jno
and
jg
xorl
rorl
cmp
mov
add
lods
cli
int
pop
inc
mov
fmulp
movsl
fmuls
adcb
add
mov
adc
mov
dec
rclb
aas
cmp
dec
mov
or
das
clc
out
mov
push
mov
pop
adc
mov
fwait
les
hlt
addr16
xor
cs
popf
les
cmp
jg
mov
sahf
mov
fcmovne
aaa
shlb
xor
lea
add
dec
pop
xchg
cwtl
and
push
xor
sbb
dec
or
and
push
fistpll
outsl
je
fisubs
lods
lret
js
loop
inc
icebp
pop
pop
outsb
out
repz
pop
shrl
jg
mov
jo
cmp
xor
xorb
int3
cmp
adcb
into
push
jo
ficompl
cltd
ss
jp
stos
xor
daa
mov
scas
mov
fisubs
test
fistl
mov
call
push
test
decl
pop
pop
shrb
jg
dec
mov
jl
jle
cmpsb
sub
scas
push
dec
dec
dec
scas
sahf
cmpsl
sbb
in
or
rclb
adc
xlat
pop
subl
or
xchg
mov
cmpsl
pop
outsb
mov
lods
scas
jge
xor
insl
push
xor
sbb
and
mov
call
jno
mov
inc
scas
adc
push
pop
call
or
adc
xlat
or
ret
jle
mul
add
rcll
repnz
mov
cmp
in
sbb
dec
mov
fwait
push
sbb
repz
lds
push
out
rolb
and
pop
inc
stos
mov
pop
or
pushaw
sarl
dec
ret
adc
pop
jl
stc
std
sub
sbb
push
xor
or
inc
mov
push
dec
xchg
pop
aad
data16
movsb
arpl
xchg
test
jb
sbb
ret
mov
decl
adc
movsb
mov
fisttps
nop
insb
sub
push
sbb
inc
mov
mov
fstps
cmpsb
mov
push
test
mov
push
fstps
mov
jl
hlt
cmp
mov
xlat
and
scas
cmp
ss
or
jne
sbb
push
inc
lcall
xchg
fldenv
fcomps
xor
cs
jmp
into
neg
pop
mov
stos
les
imul
push
sub
sbb
test
decl
icebp
push
adc
push
jno
loopne
insl
leave
jp
push
pushf
pop
repnz
cmc
mov
imul
add
push
push
mov
jle
test
mov
xchg
or
push
xchg
sbb
mov
nop
call
in
stos
lret
push
stc
hlt
mov
push
stos
dec
mov
rolb
mov
sub
fbld
mov
test
sbb
and
mov
decb
js
cmp
shll
out
mov
jns
or
mov
pusha
push
cli
mov
jle
loop
in
popf
pop
test
icebp
and
and
add
movsb
mov
cmp
cwtl
sub
mov
inc
je
int3
ss
mov
add
popa
mov
mov
push
fldl
daa
push
sub
dec
rorb
cwtl
mov
mov
das
sub
rcll
xor
call
outsb
sti
dec
xor
mov
jbe
add
cli
mov
pop
out
test
or
or
fs
dec
pop
inc
std
jmp
loope
das
test
add
aas
mov
push
cmp
imul
pop
pop
inc
xor
inc
push
stos
cmc
ljmp
das
loopne
call
mov
shlb
mov
nop
movsb
adc
in
cli
pop
xchg
push
mov
mov
fists
test
jle
mov
add
cli
mov
and
pusha
mov
insl
pop
ret
add
and
mov
inc
mov
loopne
push
clc
scas
push
mov
add
outsb
sub
outsl
addr16
mov
mov
pop
xchg
lock
mov
ud0
pop
xor
orb
das
movsb
push
mov
fdiv
dec
lcall
call
daa
mov
stc
adcb
scas
shrb
dec
rcrb
mov
xchg
insl
pushl
or
stos
insb
std
mov
push
ret
push
mov
popf
or
mov
js
es
ds
dec
jl
div
inc
addl
into
mov
insb
push
scas
fmul
mov
push
adc
adc
lret
aaa
cmp
add
add
mov
movb
inc
jb
in
call
dec
insb
jp
push
push
das
xor
inc
add
ret
lods
pop
push
sbb
sbb
test
dec
rol
aad
or
xor
shlb
inc
mov
lods
xchg
lahf
std
mov
jmp
mov
lahf
cld
or
push
into
pusha
stos
pop
hlt
insl
push
outsl
inc
mov
lock
push
xlat
xorb
inc
jle
pop
pop
imul
fbld
mov
mov
movsb
xchg
push
cmp
mov
push
scas
sub
sub
sub
call
and
mov
fcompl
pop
push
sbb
int
mov
into
adc
pop
and
aad
add
inc
repz
or
cwtl
clc
jg
sbb
loope
inc
mov
sbb
stos
test
mov
test
mov
jbe
int
call
loopne
add
repnz
inc
insl
xchg
jb
push
lock
call
rolb
in
fbstp
mov
lcall
or
xchg
dec
loope
icebp
sub
inc
loop
out
or
pop
popa
cwtl
sbb
jmp
ficompl
rorb
les
hlt
xchg
ss
xchg
lods
mov
jg
addr16
stos
loop
scas
mov
fs
daa
jnp
movsb
lock
pop
clc
and
or
sahf
lods
vmovlhps
or
loop
pop
lock
shl
std
les
mov
fimull
jmp
stos
pop
or
or
jecxz
filds
sub
repz
sahf
add
pop
ds
clc
sub
push
xor
fcoms
or
ja
cmp
adc
repnz
push
add
dec
mov
sbb
jo
xchg
jmp
cmpl
or
inc
sbb
std
and
xor
pushf
adc
pop
in
pop
cli
add
ja
sub
xchg
fiaddl
pop
sub
adc
jle
hlt
push
add
imul
cmp
sarl
jbe
add
xor
jae
arpl
mov
inc
xor
fisubs
cli
xchg
push
lods
pop
mov
mov
lret
adc
cli
push
rclb
sub
jmp
push
lahf
jle
push
loope
mov
cmp
into
pop
mov
cmpsb
fwait
xchg
pop
int
pushf
dec
xor
imull
or
data16
cli
sar
call
cmp
inc
add
xchg
int3
push
sbb
mov
shll
pop
sbb
xchg
mov
int
add
sbbl
xor
fwait
shll
lock
sub
pop
mov
lret
sub
stos
fdivrl
rclb
jge
dec
xor
insl
cld
fwait
jle
and
int3
sub
or
inc
add
dec
ljmp
inc
test
hlt
rcr
mov
adc
or
xchg
pop
inc
cmp
popf
sbb
int3
add
dec
fidivs
cmp
mov
sbb
push
add
ret
push
fwait
push
mov
sub
ja
sbb
inc
jg
stos
icebp
cltd
imul
out
inc
xor
cmp
in
mov
dec
inc
inc
inc
je
or
dec
sar
add
rcrb
mov
jmp
dec
insl
cld
outsl
fisubrs
xor
sbb
dec
lcall
ljmp
sub
jo
stos
sub
das
nop
shll
test
push
add
es
sti
subb
clc
inc
pop
cmp
jle
xchg
bound
mov
or
gs
mov
cmpsb
enter
add
cmpsl
in
mov
mov
or
pop
cmp
ljmp
push
filds
pop
outsb
sahf
sbb
notl
cmc
push
mov
mov
mov
loopne
sub
hlt
adc
push
dec
fsubrs
aas
int3
sub
sbb
mov
mov
les
xchg
inc
ret
decl
cmp
test
mov
and
push
divb
ja
ds
lods
jbe
mov
pop
jl
and
fdivr
add
outsl
xchg
mov
add
pop
or
sub
fwait
bound
jne
mov
testb
fisttpl
push
in
jae
mov
dec
mov
popa
movsb
cmp
insb
adc
repnz
out
scas
loope
bound
iret
rcrl
movsb
jle
mov
in
sub
jmp
pop
mov
popf
lds
out
aas
ds
loopne
fldt
mov
pop
cli
aad
repz
push
int
add
call
or
lea
test
icebp
adc
imulb
jmp
xor
dec
cli
cli
test
mov
push
mov
add
sbb
mov
pop
faddp
push
je
mov
mov
cli
std
pushl
mov
push
pop
mov
imul
xor
xchg
mov
loopne
add
ljmp
or
pop
sbb
out
icebp
iret
lret
sbb
and
cmp
inc
pop
or
sbb
cmp
pop
inc
adc
pop
cmp
xchg
add
adc
mov
push
sub
das
popa
adc
add
cld
mov
pop
and
aaa
jp
mov
sarl
add
rolb
jecxz
jecxz
outsl
popa
push
jno
pop
push
int
sbb
in
leave
push
push
push
mov
decl
cli
lods
repnz
andb
out
inc
mov
push
add
faddp
xchg
out
and
push
scas
into
pop
dec
test
inc
cmp
mov
pop
pop
xchg
out
pop
and
push
ljmp
mov
and
inc
popf
cmc
sahf
lcall
shl
test
daa
add
add
sahf
repz
stos
add
test
aaa
les
fdiv
pop
dec
cld
mov
jge
test
adc
test
inc
mov
popf
lock
mov
fidivrl
cmp
pop
push
stc
ret
cmp
in
rorl
cmc
or
lock
mov
pop
aam
dec
lcall
out
mov
stos
ret
pop
loopne
out
jae
roll
mov
xchg
aad
mov
inc
aad
fcomip
push
mov
in
test
aam
push
test
cmp
gs
imul
test
loopne
pop
mov
push
inc
push
dec
jge
inc
je
jmp
sub
mov
ret
push
dec
inc
faddl
js
and
movsl
ja
nop
pop
aam
hlt
ds
mov
sub
pop
fdivr
mov
aaa
add
push
xchg
stos
xchg
cltd
clc
fisubrs
fcmove
sub
pop
repnz
and
loopne
inc
negb
sbb
clc
pop
push
xlat
cltd
nop
enter
lahf
aam
fcomi
pushl
or
add
push
inc
fwait
enter
insb
cmpsb
jg
push
xor
lods
xchg
ss
mov
jmp
or
cmove
pop
inc
cmpsl
mov
repnz
xor
pop
xchg
mov
mov
xchg
inc
loope
cmp
outsb
jb
jns
aas
xor
loopne
decl
neg
lret
cmp
jge
sub
xchg
mov
fdivrs
push
mov
fidivrs
aas
adc
add
lcall
adc
jbe
pop
push
cmp
sub
add
icebp
pop
mov
add
mov
add
js
inc
jbe
xchg
das
clc
addb
cli
clc
es
pop
jbe
andb
std
xlat
sbb
and
add
xchg
jbe
pop
or
lcall
into
fidivs
rcrb
push
push
sti
pop
test
out
jne
cmp
insb
outsl
jae
js
push
sub
dec
jp
add
pop
out
lcall
sar
or
pop
mov
push
push
inc
xchg
lods
pop
pop
or
sbb
dec
sub
shlb
inc
xchg
and
add
jns
enter
lods
jp
sbb
cmp
jp
xor
ss
adc
push
cmpsb
cmpxchg
shrl
mov
xor
pop
je
and
inc
xchg
fisttpll
dec
scas
test
dec
pop
lds
cmc
pop
mov
pop
in
mov
stc
pop
ljmp
adc
or
inc
dec
pushf
or
pop
insb
mov
mov
test
xchg
fwait
cmp
jmp
aad
subb
mov
or
int
fs
inc
sub
dec
lods
sub
pop
push
dec
push
cmc
inc
pop
pushl
shlb
cmpsb
sub
cmpsl
dec
pop
mov
jmp
jb
lods
mov
mov
sahf
pop
sub
pop
pusha
rol
shlb
sbb
sub
pop
xor
imul
out
cmp
adc
sub
movsl
outsb
pop
xchg
cmp
mov
aaa
dec
js
mov
or
inc
sub
icebp
pusha
xor
pop
in
mull
decl
std
sarl
lahf
sbb
mov
or
jo
decb
sub
mov
pop
jmp
add
sarb
dec
xor
dec
or
adc
incl
imul
and
stos
addr16
call
outsl
xchg
add
fcomi
cmp
push
popa
std
fs
test
or
fsubrp
sub
xchg
mov
cld
and
or
incb
pop
in
pop
push
push
and
mulb
xor
lcall
adc
mov
sti
sub
or
pop
das
lods
pushl
clc
lcall
pop
int3
ds
mov
mov
lret
jle
add
outsl
jg
jbe
mov
and
add
cmp
mov
push
xchg
sahf
sarb
call
push
jg
jecxz
das
dec
test
mov
jno
adc
filds
mov
or
jmp
jge
lock
jl
gs
jmp
call
loop
pop
jecxz
push
mov
clc
call
stc
imul
cltd
clc
xor
js
arpl
fwait
or
lcall
imul
clc
or
mov
cli
inc
shr
push
loopne
sub
xchg
dec
inc
pop
adc
sbb
fildll
add
cmc
push
dec
ja
fisubrs
cli
clc
jg
mov
adc
cmp
dec
lock
scas
ljmp
jp
add
decl
push
ret
ret
pushf
popa
add
and
push
test
pop
adc
dec
mov
stc
push
fsts
pop
lods
rol
fs
xchg
push
ljmp
jle
cs
xchg
popa
jne
pop
jo
cmp
test
mov
mov
push
mov
lahf
add
pushf
jns
loopne
faddl
dec
clc
jg
add
inc
sbb
mov
sar
mov
xorb
int
inc
pop
mov
fsub
inc
fldt
fcmovnu
inc
gs
mov
or
adc
lock
int3
push
jnp
arpl
sbb
mov
stc
cmp
mov
xchg
or
test
call
fnop
pop
pop
lcall
sete
push
fstpt
mov
adc
sbb
push
insl
cli
movsl
test
mov
aaa
lods
add
lock
dec
inc
dec
fisubl
pushf
pop
clc
mov
mov
cmp
xchg
cs
xor
pop
fcomps
stos
cmpb
hlt
ljmp
sahf
aam
fwait
das
xor
loop
loope
push
or
je
and
scas
adc
pop
add
lea
clc
das
mov
mov
es
fiaddl
fsubrp
js
lahf
in
sub
pusha
call
sub
notb
push
shlb
aas
sarl
lds
icebp
test
inc
cmp
xor
fs
jb
rorb
push
mov
adc
dec
imul
mov
shl
adc
mov
cmc
testl
pop
test
cmpsl
mov
test
xchg
dec
mov
cld
stos
inc
push
xchg
lock
rcl
adc
ret
mov
xchg
mov
loop
sbb
fidivrs
sbb
adc
pop
repnz
insb
sbb
cmp
pop
lods
cli
sbb
loope
cmp
or
mov
cmpl
sub
bnd
xor
xor
pusha
xlat
fbstp
mov
stos
pop
mov
adc
xchg
mov
sub
sub
inc
and
lret
test
fwait
loope
outsl
mov
inc
or
inc
das
inc
imul
xchg
js
jg
movsb
mov
enter
sub
sar
xor
sub
loopne
fcomip
lret
xor
mov
fisubl
xor
lret
imul
mov
js
ret
push
ds
bound
mov
es
ss
insl
in
enter
jecxz
cld
jno
push
push
pop
daa
scas
repz
cltd
push
push
rcr
sbb
cld
push
imulb
movsb
xlat
xchg
cmp
es
rcr
data16
jg
and
popf
xchg
cli
pop
cli
add
jmp
pop
sub
movsl
fs
aad
loopne
sub
subb
inc
ret
dec
out
fsubrl
lods
inc
xchg
fimull
push
lcall
cmp
daa
xchg
fistpl
jl
sub
idivb
dec
adc
xchg
ds
and
loopne
fnsave
sbb
fs
movsb
sub
inc
jne
jb
imul
into
loop
sti
jg
mov
mov
mov
clc
jb
pop
cld
repnz
mulb
in
hlt
push
xchg
add
sub
lods
dec
push
leave
dec
mov
aaa
gs
push
mov
hlt
xchg
icebp
jmp
inc
orl
aaa
mov
mov
cmp
pop
xchg
adc
pop
sbb
adc
sub
adc
and
cli
pop
lock
ljmp
adc
loopne
mov
add
add
stos
fdivrs
push
pop
jge
lcall
fsts
push
mov
daa
dec
loop
xor
iret
sbb
jge
cltd
jecxz
mov
insl
fistpl
cli
inc
pop
jmp
jo
cmp
add
sbb
shlb
in
pop
or
fnstsw
repnz
mov
popa
shlb
mov
inc
push
out
pop
dec
cld
xchg
movsb
and
jb
aaa
sub
xchg
outsb
movsb
rorb
cwtl
insb
pop
int3
lds
ljmp
jnp
imul
inc
mov
adc
and
add
jbe
pop
mov
popa
jg
imul
fwait
lods
subl
xlat
das
aam
cmp
mov
lret
pusha
xlat
js
mov
insb
arpl
dec
std
xchg
xor
pop
repz
ret
js
fsubr
insb
inc
je
xor
push
adc
sub
scas
inc
jle
jne
xchg
rcrb
dec
or
aam
jmp
clc
dec
les
pop
test
test
pop
adc
stc
xor
dec
mov
inc
aas
popa
pop
bound
add
je
das
sar
mov
mov
xchg
xchg
xchg
or
sbb
jle
dec
insl
xor
clc
ds
leave
cwtl
test
scas
stos
adc
rcrl
mov
sbbl
pop
sub
inc
xchg
mov
repz
push
fstpl
hlt
fcompl
and
mov
xchg
pushf
les
arpl
inc
pop
test
ss
sub
mov
inc
sub
pushl
sbb
jg
jge
roll
add
pop
movhps
inc
cmp
add
xor
in
adc
jp
lock
lahf
add
scas
cmpsb
xchg
sbb
mov
sarb
mov
in
mov
or
inc
and
popf
mov
daa
lret
xchg
add
int3
insb
adc
cld
dec
jge
addb
mov
xorb
cli
jnp
in
insl
sbb
inc
cmp
mov
aam
pop
js
test
jp
xchg
jg
mov
fdivrs
ret
pop
jecxz
adc
pop
incl
lods
and
pop
cwtl
pusha
sbb
movsl
repz
lock
and
push
sbb
mov
cli
adc
inc
mov
int3
mov
je
rcr
andb
pop
cwtl
xor
ds
pop
pop
push
fdivp
leave
jne
adc
cmp
pop
imul
pop
or
mov
ds
mov
pop
hlt
repnz
mov
jecxz
push
lea
inc
std
out
inc
dec
adc
jle
push
pop
scas
jg
fucomp
sub
cmpsb
jle
loopne
xchg
sbb
mov
nop
xlat
call
je
or
fidivrl
mov
fisubrl
and
imul
popf
fidivs
pop
loopne
mov
sti
shrl
jmp
scas
inc
call
dec
jg
popl
xchg
pop
jbe
pop
inc
push
mov
mov
mov
adcl
fisubrs
int
or
iret
dec
lret
loope
or
shr
push
pushf
push
cmp
cld
xor
xchg
rcr
pop
std
gs
mov
xchg
fdivl
sub
mov
call
fsubp
fadds
in
mov
add
cs
cmp
push
decl
pop
sahf
test
add
or
jae
loop
mov
repnz
rcl
push
push
push
in
in
push
std
je
call
adcb
pop
pop
jg
gs
int
mov
mov
imul
int
pop
sub
lods
mov
insb
insb
iret
scas
inc
popl
dec
cmp
int3
inc
fcompl
sti
sbb
or
and
in
into
mov
test
mov
push
sub
xchg
inc
cld
ret
sbb
shrb
push
fcmovnu
repnz
inc
enter
out
mov
movsl
adc
adcb
repnz
imul
mov
js
pusha
cmc
push
insb
lcall
enter
sbb
dec
jb,pn
mov
pop
xchg
shrl
mov
pop
in
mov
imul
add
lahf
and
xchg
adc
int
int3
rorl
xchg
sub
test
mov
mov
stc
jo
xchg
ret
ss
pop
or
ja
jnp
adcl
int3
mov
cmp
test
fdivp
lcall
cli
clc
xchg
mov
mov
gs
fucomi
leave
push
les
test
pop
sbb
inc
mov
push
clc
inc
pop
mov
or
jo
test
adcb
mov
lock
mov
fiaddl
sub
testl
xor
cmpsb
outsl
or
mov
push
xchg
js
mov
adc
int3
fisttps
dec
xorb
push
cli
sub
outsl
lret
cli
sbb
cmpsl
sbb
aam
jae
cmp
cld
jg
sub
cmp
mov
mov
sti
rcll
mov
ljmp
pop
mov
inc
sbb
jnp
loopne
out
inc
call
and
xchg
and
cli
sbb
sbb
or
sahf
sbb
and
outsb
leave
sar
or
es
pop
fcmovne
and
add
aam
mov
xor
fidivl
add
fwait
mov
fidivs
clc
push
cld
fwait
aam
mov
add
push
inc
std
sarl
ljmp
outsb
cltd
dec
xor
xchg
cmc
loope
xor
lcall
mov
pop
in
lods
scas
decl
rolb
ds
cmc
cmc
adc
mov
push
xor
xchg
mov
ja
mov
and
mov
xor
or
js
aas
push
adc
xor
scas
mov
and
cmc
data16
mov
add
pop
hlt
sbb
sub
mov
popa
cmp
in
out
mov
jg
in
pop
xchg
fdivrl
dec
pushf
fimull
nop
dec
lock
jmp
jb
decl
dec
jbe
daa
xor
mov
test
jmp
mull
xchg
add
xchg
inc
pop
sub
push
sbb
pop
js
mov
xchg
lock
or
add
adc
in
das
ljmp
in
in
push
mov
insb
stc
test
sub
into
add
insl
lods
test
enter
adc
xor
xor
jne
pop
sub
adc
fisubs
xor
cld
inc
sub
xlat
cli
loop
push
push
pushf
ljmp
add
enter
into
cmpb
ja
push
sbb
decl
scas
out
push
pop
aaa
dec
lods
cs
decl
sbb
pop
rclb
push
xor
sbb
sbb
jecxz
aas
xor
loop
push
inc
ds
ljmp
ud1
sub
stc
lock
push
sar
mov
movsl
cmp
insb
fildll
push
in
adc
rcrl
lahf
shll
mov
adc
sbb
mov
cmpsl
or
les
inc
mov
jle
mov
inc
fdivl
xchg
dec
mov
lods
ljmp
pop
fstpt
mov
sbb
in
mov
cltd
jl
xor
dec
dec
mov
mov
outsb
out
mov
jns
sbb
cltd
incl
test
test
fs
pop
jns
lcall
les
and
add
shrl
dec
mov
jg
fildll
adc
push
cmpb
sbb
mov
pushl
iret
popl
sahf
push
mov
jmp
add
sbb
leave
jb
pop
cmp
lock
test
mov
jne
push
or
and
or
cmpsb
outsb
jp
sub
adc
orb
adc
lock
xor
push
roll
sbb
pop
mov
out
clc
cmpsl
or
mov
xor
jmp
in
dec
ljmp
stos
sub
rol
mov
decl
adc
nop
inc
cs
sti
sarl
xor
ret
mov
sbb
cwtl
jbe
and
mov
mov
mov
mov
mov
jbe
bound
jg
rcrb
pop
insl
mov
jb
outsb
cmp
or
cmpsb
push
lock
leave
mov
xchg
in
dec
pop
dec
fidivrl
andb
sub
imul
push
or
jmp
dec
int3
mov
sahf
arpl
pop
mov
bound
jae
decb
mov
cld
scas
pop
mov
inc
fsubl
or
sbb
jge
or
mov
push
pop
mov
insl
sbb
jne
xor
push
popa
push
push
sahf
add
fcmovb
cmp
ds
mov
not
divb
je
adc
mov
aaa
les
js
pop
jmp
repnz
aad
call
xchg
cmp
cwtl
sbb
pop
pop
pop
js
mov
cmp
aaa
sti
inc
insb
arpl
sub
xchg
pop
mov
scas
test
and
mov
inc
decl
stos
cmpsl
dec
sub
inc
jb
mov
loop
or
cmp
add
pop
add
aam
mov
pop
dec
dec
lcall
pop
xor
mov
rclb
aas
push
cs
bound
lds
outsb
and
pop
nop
dec
push
push
arpl
hlt
aad
pop
fcmovnu
sahf
mov
xor
negb
enter
pop
adc
fcompl
mov
push
mov
mov
bound
push
outsb
jge
pushl
jle
pop
and
adc
sbb
add
call
mov
ja
rorl
cld
ret
movsb
push
adc
hlt
sbb
xchg
enter
xchg
lods
inc
imul
scas
push
lcall
adc
or
mov
and
gs
scas
repnz
inc
rorb
mov
pop
cmp
mov
cmp
mov
div
call
pop
push
aad
jne
mov
aad
jge
cltd
mov
inc
pop
repz
rcll
jne
xor
xlat
dec
push
or
push
pop
icebp
fildll
pop
fprem1
xchg
int
mov
add
mov
dec
pop
icebp
cli
ljmpw
fldenv
aas
rolb
pop
cmp
in
sub
out
and
les
cwtl
popl
cmp
mov
aam
ror
mov
cmp
xchg
cli
sbb
or
mov
mov
push
movsl
dec
jo
push
push
cmp
test
mov
and
mov
cs
mov
mov
sub
ret
push
incb
mov
orl
lods
or
mov
jbe
xchg
adc
jecxz
mov
pop
pop
jmp
js
int
or
imul
cmpsl
pop
pop
and
push
and
ljmp
mov
adc
or
mov
inc
xor
incl
loope
stos
shll
aaa
popa
aaa
in
xchg
push
xchg
incl
in
aas
test
scas
lret
dec
je
push
adc
jl
in
sbb
vxorps
push
inc
or
mov
fs
sbb
enter
xor
xor
hlt
push
sbb
into
pop
and
bound
xchg
incb
nop
rolb
das
clc
mov
xor
inc
mov
pop
adc
jl
lea
mov
mov
inc
and
clc
mov
dec
sbb
loop
pop
jbe
cli
mov
pop
data16
out
push
dec
push
das
mov
das
cli
sbb
jns
xchg
xchg
xchg
cmp
sbb
pop
pushf
sbb
fidivl
hlt
cmp
lea
mov
cmp
inc
loopne
jl
stos
pop
mov
je
inc
or
hlt
rol
fsin
sub
push
lock
decl
cmpb
lret
imul
fldt
xor
outsl
or
scas
les
jno
push
aas
inc
jns
xor
jnp
jmp
ljmp
pushf
es
notb
std
jg
ljmp
jg
repz
adc
push
data16
mov
pop
pop
jo
cwtl
add
mov
repnz
outsl
aam
xchg
ds
push
mov
push
je
out
or
lds
fsubp
ss
pop
mov
pusha
mov
push
inc
mov
outsb
scas
int
jl
or
fistl
int3
mov
pop
sbb
mov
xor
push
aam
hlt
mov
pop
or
push
or
mov
imul
mov
xchg
insb
jge
test
fisubl
cmp
fildll
ret
mov
lret
cmc
add
test
insb
xorb
daa
mov
outsb
cmp
inc
int3
icebp
push
jmp
and
movsl
ja
pushl
xchg
push
cli
cs
stos
and
pop
daa
inc
xchg
aaa
std
pop
add
push
pop
cmp
lahf
mov
pop
mov
fdivl
pop
mov
push
pop
clc
mov
mov
fwait
cmp
pop
std
pop
jp
mov
in
xor
pop
idivb
and
movsb
mov
bound
fdivrs
pop
mov
push
pop
or
mov
pop
mov
mov
adc
pop
lock
xchg
cwtl
lock
pop
push
lods
pop
mov
fisubs
add
lret
pop
clc
or
dec
cmpsl
ds
lock
sbb
lock
lds
jo
push
mov
inc
loop
push
stos
adc
retw
sti
dec
mov
mov
and
adc
lea
add
and
mov
jnp
cmp
mov
cmp
outsb
es
jne
fsubrp
mov
test
scas
add
push
aam
mul
cld
or
loope
push
dec
or
jmp
test
cld
push
daa
rcrb
cmp
xor
into
inc
ljmp
sahf
xorb
lock
or
ficompl
add
inc
js
mov
cmp
clc
das
push
mov
into
mov
add
shlb
mov
xchg
pop
cmp
cmp
pushf
mov
jle
insl
inc
ss
push
push
ljmp
jg
mov
lods
xchg
stos
in
jbe
pop
mov
adc
lret
orb
mov
loop
adc
mov
jns
repnz
das
in
add
fildll
xchg
popf
mov
aad
jle
sbb
inc
add
imul
jl
inc
mov
jp
int3
pop
test
loopne
je
mov
add
push
add
jne
aad
mov
mov
jbe
int3
out
loope
adc
std
test
jg
and
in
mov
sub
stos
scas
push
mov
jg
icebp
jno
pop
xchg
imul
leave
or
stc
mov
out
or
mov
jg
outsb
addb
pop
in
into
icebp
inc
and
mov
lods
pop
mov
and
push
cs
das
cwtl
loopne
sar
les
pop
sub
mov
aaa
data16
mov
inc
pop
mov
faddl
push
pop
pop
jge
push
mov
jge
nop
ljmp
das
cli
inc
cli
fnsetpm(287
lret
das
repnz
sub
push
xchg
pop
fisttpl
fdivl
mov
popa
jl
lcall
add
push
repz
int3
dec
xchg
cmpsl
pop
add
cmp
xchg
mov
pop
and
jbe
and
lcall
mov
out
out
hlt
push
imul
mov
push
repnz
pop
mov
add
stos
fwait
dec
aas
aam
adc
xchg
sbb
fdivr
adc
mov
cmp
cmpsb
nop
mov
dec
sbb
xor
jo
pop
xor
rcrb
in
ss
loop
clc
sub
push
icebp
out
cmc
idivl
stos
scas
movsb
jg
call
xlat
pop
mov
sbb
or
pusha
jae
push
mov
pop
sub
das
add
pop
and
or
adc
js
mov
or
mov
negl
in
out
lods
int
sti
add
adc
cmp
in
ja
pop
and
aaa
loop
neg
mov
push
cmp
pop
pop
lahf
nop
subl
jl
add
push
and
mov
cmp
mov
mov
mov
in
xchg
xchg
mov
push
cmp
aad
lds
into
orb
add
dec
addr16
sub
addb
bound
sub
sahf
pop
fst
xor
push
jo
pop
sarb
sub
in
movsb
push
cmp
push
push
fidivs
adc
sbb
lret
pusha
into
sbb
fcmovb
mov
dec
push
stos
inc
mov
xchg
pop
lock
push
aas
inc
mov
add
push
fsubrp
lret
push
pop
in
mov
repz
mov
ret
pop
out
sahf
push
fs
xchg
xchg
dec
pop
bound
xchg
push
or
mov
pop
jmp
clc
mov
or
xchg
fwait
lahf
int3
pop
hlt
mov
shll
hlt
clc
cmpsb
mov
lcall
push
cmpb
clc
xchg
cmp
shrb
cmpsb
push
mov
call
shl
adc
rcr
ds
ljmp
jmp
dec
xchg
add
jbe
movsb
jb
push
pop
push
pushf
ret
or
push
dec
sub
pushl
pop
dec
cs
sub
jb
mov
pop
lret
adcb
mov
mov
add
repnz
cli
lock
lahf
jl
mov
outsb
or
lret
ror
loope
bound
mov
pusha
inc
add
xor
loop
mov
mov
fdivrl
xchg
cmp
ss
incl
insb
fadds
aam
sbb
and
sti
pop
pop
mov
aad
jmp
sti
pop
pop
pop
adc
add
data16
lods
out
sbb
incl
pushl
and
je
fisubrl
fs
lea
jne
push
jne
pushl
mov
insb
cmpsb
inc
jb
fisubl
pop
fs
pop
mov
pop
jge
jl
xorl
cmp
push
xor
adc
ljmp
and
add
and
outsl
incl
dec
loop
pop
rorb
or
add
push
cmp
and
add
mov
mov
dec
enter
cmp
lods
mov
decl
test
stc
ret
inc
test
movsl
insb
fldenv
std
and
mov
xchg
cmpsb
push
scas
cld
xchg
dec
cld
mov
xchg
mov
dec
test
lock
pop
push
add
imul
inc
mov
dec
dec
insb
mov
mov
enter
in
pop
jl
add
in
in
loopne
movsb
fwait
scas
adc
and
mov
mov
add
ds
adc
xchg
in
insl
jnp
adc
imul
mov
push
dec
mov
jle
cmc
das
dec
xchg
test
xor
clc
sahf
jg
jno
lods
inc
mov
gs
mov
xchg
fcoml
add
ja
bound
sbb
cmpsb
pop
sbb
mov
pop
push
ficoml
insl
jg
cmp
fistpll
mov
jo
pop
cld
aaa
pop
xchg
mov
xor
dec
sbb
roll
mov
insb
andb
add
cmp
mov
cmpsl
and
fstps
mov
pop
and
mov
jno
sbb
jle
jle
ljmp
aas
add
lret
pop
mov
or
mov
fildll
cwtl
das
push
loopne
pusha
add
insb
scas
cli
push
pop
lods
add
cmp
je
add
clc
add
or
push
and
fmull
cli
das
test
cwtl
pop
icebp
cmpsl
push
lock
loop
ljmp
mov
push
jp
ja
pusha
lcall
xchg
xor
push
inc
add
cmc
push
lods
and
and
in
sub
jno
mov
push
and
lcall
sub
mov
and
sahf
and
mov
lods
out
lcall
mov
mov
mov
and
fisubl
aad
xor
sbb
mov
and
cmc
push
push
adc
jg
mov
sbb
movsb
outsl
and
cmc
push
inc
sahf
sarb
pop
or
jle
pop
nop
add
shr
mov
pop
cld
sub
jnp
pop
mov
mov
leave
jl
dec
adc
les
es
sti
sarb
fwait
mov
sbb
sbb
pop
pop
or
mov
xchg
insb
pop
pop
pusha
fisttpl
fiaddl
ror
std
push
mov
pop
stc
jl
inc
add
pop
push
in
loopne
in
in
sub
add
cmp
into
pop
mov
jg
pusha
test
pop
mov
cmpb
mov
or
mov
or
jo
inc
xlat
jae
fadds
scas
jo
out
jl
mov
xchg
lock
pop
dec
test
inc
ret
roll
lods
xchg
cld
pop
dec
mov
filds
or
jo
ror
or
fidivrs
mov
jb
in
cld
sub
aad
sahf
mov
fldt
lcall
cs
push
cmp
pop
stos
cs
lcall
aas
test
adc
pop
int3
ss
aam
ret
lds
rcl
fwait
call
out
mov
jg
dec
je
push
cmpsl
xchg
scas
in
mov
sar
pop
clc
mov
jmp
pop
outsb
cmpsb
ret
dec
jecxz
clc
mov
adc
jo
sbb
ja
sub
arpl
sub
jnp
mov
mov
pushf
sub
jl
sbb
sbb
mov
aad
cld
ljmp
push
push
sub
repz
adc
mov
pop
mov
cld
pop
and
gs
cmpsb
aas
lcall
mov
inc
xor
and
adc
fdiv
push
jg
cld
scas
fisubl
jle
cltd
xor
outsb
shll
adc
in
inc
fdivs
mov
jbe
cltd
rorl
mov
fstpt
mov
and
mov
outsl
jg
aas
lock
mov
test
lock
dec
nop
jbe
mov
lret
xchg
jecxz
push
add
icebp
shr
scas
test
pop
dec
or
bound
movsb
popl
nop
adc
inc
loopne,pn
cwtl
adc
mov
and
enter
movsb
sbb
hlt
loopew
jg
mov
mov
pop
fdivrp
divb
xchg
jns
jne
push
ss
dec
push
push
add
adc
inc
and
inc
or
sbb
in
ret
push
sbb
sub
xor
xchg
inc
dec
inc
mov
outsl
cli
push
cld
jl
xorl
in
lcall
pop
ffree
mov
sub
or
mov
sbb
pop
aaa
enter
or
stos
pop
push
pusha
push
dec
and
add
xor
out
ljmp
es
mov
std
dec
jbe
cmp
mov
push
lods
adc
adcl
shr
stos
mov
hlt
pop
adc
pop
popf
aad
cltd
dec
mov
nop
sbb
cli
sbb
mulb
ret
aas
xchg
lcall
aaa
add
pop
outsl
clc
jg
and
mov
push
lret
cltd
mov
outsb
jbe
xor
cmc
ja
xor
mov
scas
xlat
iret
jo
bound
sub
pop
jge
popf
xchg
test
add
push
add
sarl
sbb
iret
push
scas
xchg
aam
fsubs
inc
fpatan
fnstsw
xchg
push
test
lahf
mov
outsb
inc
fsubrp
ficoml
loope
cli
mov
rcrb
mov
sub
jg
pop
mov
xchg
or
data16
adc
and
pop
mov
test
pop
jg
mov
inc
and
pushf
xor
insb
xchg
push
je
push
test
aaa
std
movsb
repz
outsl
arpl
and
lahf
mov
mov
mov
xchg
fisubrl
addl
js
xor
dec
loopne
xchg
test
ds
dec
pop
fucomip
aam
pop
xchg
fisubl
pop
pop
cmpsb
lret
outsb
aas
xchg
and
pop
icebp
pop
cmp
add
sub
lods
push
pushl
lock
rorl
fstpt
pop
lcall
sbb
sub
outsl
jp
or
and
rcrb
ret
or
popa
lock
xlat
sbb
cmp
adc
sahf
cwtl
sbb
add
nop
jnp
mov
dec
insl
or
dec
cltd
adc
xor
or
xchg
xchg
inc
lods
adc
push
incl
mov
push
xor
push
fwait
rorl
mov
cli
fs
xchg
fstpl
and
rorb
xchg
sub
outsl
shrb
sbb
mov
mov
out
les
clc
jg
xor
fwait
sarl
fldl
pop
dec
xchg
inc
xchg
pop
aas
jmp
jle
loopne
and
sbb
decl
inc
cwtl
dec
inc
bound
out
aad
sub
pop
mov
jp
clc
iret
adc
pop
pop
or
dec
es
pop
ret
jb
mov
aaa
test
mov
loope
jl
insb
push
lcall
lds
inc
push
mov
pop
in
into
xchg
call
outsl
jbe
pusha
je
and
pushl
pop
out
inc
push
mov
add
xor
mov
adc
or
sti
xchg
int
decl
ljmp
mov
roll
and
lock
jecxz
lret
lods
mov
iret
repnz
scas
outsl
outsb
je
std
decl
movsl
aas
jle
push
and
lret
mov
loopne
cmp
roll
popf
shlb
stos
aad
mov
out
lret
inc
daa
insl
out
adc
fidivrs
icebp
fwait
cld
xchg
movsl
loop
and
out
fwait
repz
es
pop
scas
lret
pusha
movsb
xor
push
jmp
pop
xchg
ljmp
mov
pop
push
mov
xchg
cmc
out
dec
or
mov
mov
dec
bound
adc
clc
mov
fcmovb
outsl
clc
and
bound
mov
cld
dec
inc
mov
cld
inc
fbstp
cltd
cmc
add
mov
ret
fists
mov
jnp
jno
add
into
jns
dec
mov
mov
mov
jne
push
lret
sbb
iret
lods
or
cmp
clc
add
cmc
mov
push
cmpl
ljmp
cmp
adc
lcall
insb
add
push
push
or
sbb
xlat
stos
jno
mov
push
add
hlt
pusha
xchg
fs
idivb
fisubrs
push
scas
adc
push
ja
add
inc
das
outsl
mov
lcall
loopne
mov
mov
and
test
mov
pop
or
enter
inc
jb
adc
ret
add
cld
lock
clc
dec
xor
push
mov
dec
aaa
imul
out
nop
xor
pop
imul
stos
sub
test
outsb
xorl
stos
ret
sbb
lret
movsb
or
push
xchg
mov
and
negb
pop
mov
mov
pushf
or
nop
int
push
inc
int3
imul
sub
or
lret
cli
xchg
add
pop
lcall
xor
lods
and
jp
pop
push
cmpb
sub
out
int
les
les
jo
sub
jp
js
call
sahf
push
test
pushf
jmp
xchg
sti
clc
sbb
pop
pop
stos
or
push
xor
aas
dec
arpl
decl
jne
mov
cwtl
mov
sbb
push
jl
add
jmp
push
rep
shlb
mov
sbb
fldcw
cli
fld
pop
outsl
sahf
lret
insl
sbb
ljmp
shl
cltd
jb
imul
mov
mov
or
xchg
decl
adc
cld
mov
imul
inc
and
loop
js
ret
into
pop
mov
icebp
xor
call
or
mov
adc
pop
dec
stos
lret
ret
inc
mov
mov
adc
add
cmpb
shrl
cbtw
mov
xor
imul
dec
jl
lds
inc
rcrl
xchg
push
repnz
popa
mov
push
in
in
icebp
add
lods
out
dec
pop
or
xlat
and
add
fsin
mov
fwait
pop
or
dec
and
or
pop
lea
shrb
repz
fsubs
inc
dec
sahf
lea
push
gs
cs
aad
movd
sbb
inc
mov
pushl
mov
xchg
std
adc
sub
loope
ret
divb
sbb
cmp
mov
mov
pop
test
lcall
lret
inc
pushl
jnp
cwtl
xchg
mov
iret
cs
push
and
shll
js
mov
in
jecxz
outsb
add
ret
adc
push
inc
adc
mov
repz
ljmp
cmpsb
sbb
inc
fisttpll
inc
call
sub
or
ljmp
cld
mov
pushl
and
xor
jo
push
test
pop
mov
fildll
pop
adc
loope
cli
pushf
jne
sbb
iret
je
clc
mov
xchg
adc
test
push
jl
popf
mov
scas
scas
mov
mov
test
aas
mov
lret
ss
fs
lock
inc
bound
pop
pushf
movsl
sub
cmp
jne
mov
outsl
fcmovu
icebp
dec
mov
jle
inc
cmp
mov
lds
mov
pop
fnsave
cli
pop
adc
or
mov
mov
add
in
call
dec
or
fcmovnb
adc
mov
push
pop
pop
cld
das
shlb
sarl
pop
dec
cmp
out
test
in
aas
movntps
out
dec
mov
shrb
shlb
clc
fists
pop
pop
dec
pop
or
pushf
xchg
imul
mov
dec
std
iret
pop
outsb
mov
push
fstl
pop
lea
aad
and
xor
inc
sbb
adc
call
std
fsubrl
dec
dec
push
mov
pop
push
cmp
das
ljmp
xor
rol
fnsave
das
xor
mov
mov
pop
cmp
sti
dec
push
stos
add
xchg
je
inc
cmp
and
loopne
xchg
mov
jl
jbe
sub
mov
clc
jne
fucomp
negb
ljmp
xchg
push
inc
ss
mov
adc
pop
inc
inc
out
sub
add
call
sbb
jmp
pop
mov
lods
loopne
push
add
aad
es
push
sbb
incl
mov
lock
sahf
push
pop
rorb
sub
sbb
lret
push
mov
pop
rorb
push
cmp
xchg
cmp
lock
in
pop
clc
data16
lods
jp
insl
fsubr
or
mov
push
dec
call
aaa
incb
or
sub
pusha
xor
aaa
push
clc
lods
test
or
xor
test
cld
pop
sub
cmp
fisttpl
mov
push
jg
pop
iret
cltd
mov
mov
fdivp
cmp
clc
sbbb
mov
push
mov
add
decb
mov
pop
test
mov
movsl
cmp
adc
or
sbb
icebp
mov
fadd
and
imul
jl
pop
xorb
jno
or
loope
adc
pop
inc
hlt
xor
sbb
or
clc
ljmp
test
add
pop
pusha
adc
add
std
ja
xchg
shlb
pusha
sbb
pop
mov
and
dec
mov
scas
mov
pop
ja
or
sbb
cmpsb
and
movsl
xchg
xchg
mov
dec
dec
sahf
adc
loop
add
xor
fcoml
fildl
test
es
add
push
pop
xchg
into
pop
or
fsubrl
push
pushf
imul
and
jmp
sub
neg
push
in
je
push
lea
repz
push
fdiv
mov
and
psubsw
jo
test
sbb
push
in
out
jne
scas
push
mov
ret
jl
je
testl
add
mov
loopne
fs
out
ret
mov
push
and
pushl
in
mov
mov
mov
pop
es
cmpsl
test
sub
mov
out
and
out
mov
add
add
cmpsl
outsl
and
add
imul
faddl
inc
loop
sbb
ljmp
xchg
mov
in
mov
cli
in
aam
push
test
xchg
stos
mov
cmpsb
inc
shll
fcomip
sub
fnsave
into
adc
mov
sbb
pusha
in
adc
xchg
pop
mov
fldt
dec
sbb
xchg
xchg
out
inc
sub
mov
idivb
mov
mov
das
pop
lret
mov
repnz
shl
add
and
jno
test
int3
add
lods
lahf
fcmovnu
or
mov
fcomps
dec
fidivs
push
mov
mov
pusha
pop
cmp
scas
test
sub
pop
and
cmp
xchg
mov
ds
add
subl
mov
clc
sub
pop
jno
sbb
fmull
repnz
mov
incl
rolb
icebp
inc
add
dec
pop
xchg
push
pop
inc
mov
or
iret
fstpt
inc
shrb
jbe,pt
decl
outsb
rclb
out
cli
aaa
mov
and
shrb
js
aad
mov
nop
mov
lcall
jmp
insl
and
fcmovbe
dec
push
mov
mov
push
es
ljmp
pop
pop
pushf
sbb
rcrl
loopne
adc
in
aas
dec
decl
jecxz
rcl
and
jg
inc
push
jmp
pop
pop
subb
repz
lds
xchg
icebp
pop
mov
inc
pushf
dec
int
pop
jo
mov
ret
lods
push
movsb
mov
sahf
int3
insb
pop
jns
push
fstpt
mov
testb
test
cli
pushf
movsb
in
sbbl
lcall
mov
int3
xor
jo
das
repnz
mov
int
push
out
call
mov
mov
or
int
sub
decl
and
adc
xchg
jge
pop
sbb
jecxz
in
call
test
sbb
mov
scas
cmpb
jmp
hlt
inc
cs
imul
cmp
xchg
mov
and
sub
xorb
push
cmc
mov
jge
aad
push
or
adc
loope
shlb
in
pop
mov
data16
sub
gs
or
mov
leave
xchg
mov
add
sar
fildl
push
dec
xlat
pop
cld
scas
cmp
and
in
in
fdivs
add
mov
add
loop
ret
clc
in
add
jl
leave
into
incl
mov
mov
js
mov
lahf
or
lret
loop
rcrb
scas
mov
sub
xchg
and
inc
adc
push
fimull
arpl
das
and
sub
adc
add
push
or
addr16
sar
cli
pop
fwait
loopne
insl
xor
sbb
sbb
loop
sar
call
mov
and
cltd
stos
xchg
in
xor
call
ljmp
fbld
loopne
cwtl
dec
mov
and
push
cltd
mov
cli
and
jle
jle
stc
cwtl
and
adc
dec
lcall
aad
pop
push
jl
mov
iret
sbb
mov
outsl
shrb
inc
pop
xor
add
mov
mov
sub
mov
in
jl
mov
rcrb
insl
aam
stos
fadds
cmp
fldenv
push
xchg
pop
call
stos
test
lret
popa
and
and
and
pop
mov
aas
push
ror
fdivp
sahf
cmp
inc
inc
shl
stos
aas
sbb
lods
pop
fisubs
adc
sub
pop
lock
aad
cmpsl
push
mov
or
push
pop
push
push
pushf
arpl
ljmp
rclb
out
inc
loopne
mov
add
adc
adc
sub
pop
aaa
xchg
xchg
in
push
cld
pop
pushl
mov
sub
push
lea
arpl
add
stos
and
out
dec
lcall
cmp
movsl
or
hlt
nop
add
add
out
jecxz
pop
xchg
je
or
mov
repz
cmpsb
mov
mov
je
xchg
jns
loopne
ret
adc
pushf
mov
pop
lret
jecxz
fbld
addl
mov
cmp
and
jp
icebp
pop
adcb
or
ds
je
inc
loopne
fstl
aas
add
dec
sbb
xor
push
sbb
pop
test
loope
push
jg
daa
mov
iret
dec
ffree
in
pop
inc
loop
inc
mov
push
cmp
adc
loopne
dec
pop
jmp
in
mov
out
mov
dec
mov
test
pop
test
add
pop
in
imull
adc
fwait
out
cmp
into
sbb
add
out
add
idivb
lock
ret
movsl
mov
lock
cwtl
and
cmpsb
inc
call
test
shlb
xor
pop
rorb
incl
out
ljmp
add
repz
lcall
xchg
sbb
scas
imulb
popa
repnz
ret
xlat
sub
mov
inc
inc
xor
or
das
mov
add
fcmovu
hlt
ja
sbb
fmuls
or
cltd
into
inc
and
js
lods
jle
dec
pop
hlt
fwait
lahf
pop
adc
lock
mov
jmp
mov
fldt
push
mov
hlt
out
addb
int
pop
mov
cmpsb
or
push
jge
cli
mov
je
in
test
push
jg
imull
jo
lock
aas
js
cmp
das
cmpsb
outsb
jmp
xorl
gs
add
rolb
adcb
mov
cmpsl
mov
cli
decl
enter
pop
in
shl
icebp
jnp
add
xlat
jmp
in
lcall
sbbl
mov
xor
or
arpl
dec
shrb
sti
push
mov
sti
shr
sub
add
pusha
pop
sub
data16
sub
cmpsl
stc
and
int
fsub
jae
adc
gs
jg
and
mov
in
or
cmp
insl
in
sub
scas
lret
push
push
lds
push
xchg
clc
jge
test
adc
push
shrb
push
inc
out
inc
push
or
sub
mov
out
mov
inc
data16
pusha
xor
lds
fistps
sbb
loope
jb
lret
js
popl
int3
mov
sbb
pop
dec
lret
lock
sbb
outsl
leave
push
jmp
dec
in
push
ljmp
mov
pop
loope
push
push
and
sbb
and
adc
push
and
cltd
sbb
decl
div
pop
adc
mov
popa
inc
xchg
push
or
test
and
lahf
popa
fnstsw
scas
mov
and
testb
ja
or
ds
jbe
arpl
call
loopne
mov
pop
and
pop
xchg
xchg
sub
test
ret
xor
decb
stos
xor
insb
test
pop
pusha
xchg
or
pushl
dec
rolb
mov
incl
push
fistpl
dec
add
cs
push
xor
in
cli
cmpb
clc
dec
insb
jbe
out
decl
sub
adc
cmpsl
dec
leave
pop
out
movsb
shlb
and
mov
or
xchg
adc
hlt
mov
popf
adc
add
pop
cmp
xor
inc
cmc
sti
out
call
cmp
mov
jns
push
dec
int3
or
jne
pop
and
mov
ds
es
ljmp
or
xchg
jmp
testl
ja
mov
jo
jmp
xor
out
ljmp
pop
add
cld
jge
filds
xchg
roll
icebp
pop
icebp
daa
mov
jl
add
outsb
or
mov
aas
aas
pop
push
dec
loope
pop
pop
je
test
mov
mov
std
sarb
fists
mov
repz
out
xchg
insb
fcomi
das
add
in
pop
clc
daa
and
aaa
inc
data16
std
mov
les
mov
aad
or
popf
out
and
jg
ror
and
test
sbb
test
jle
and
call
mov
shrl
clc
mov
mov
aam
mov
lcall
xchg
jp
addr16
jg
xor
aaa
cld
fistps
insl
pop
or
je
js
mulb
cld
ljmp
cmp
pop
pop
cmp
add
xor
jno
pop
outsl
insb
rorb
clc
ljmp
and
inc
mov
call
std
adc
test
fadds
imul
int
jne
test
ds
inc
adc
pop
xor
pop
popf
or
repz
adc
mov
aad
pop
pop
pop
push
mov
mov
xchg
sbb
or
xor
fwait
popf
je
out
decl
pusha
sti
inc
sub
cmpsl
mov
mov
call
mov
jecxz
fcoms
fisubs
dec
pop
sub
sub
dec
sub
mov
arpl
jl
or
push
pop
dec
aaa
adc
add
add
cmp
mov
subps
shlb
push
out
es
pop
sahf
test
adcb
leave
pop
mov
lret
adc
pop
orb
das
es
mov
inc
push
je
cmp
arpl
jb
sbb
fcmovnb
rcrb
loop
and
stos
enter
xor
dec
inc
sbbl
pop
add
rclb
shrb
ljmp
cmp
mov
clc
and
int
jns
es
mov
test
lds
jo
cld
pop
js
and
mov
call
loope
ret
in
adc
shrl
jle
fisubrs
or
scas
testb
mov
pop
loopne
ljmp
mov
into
cwtl
push
pop
add
dec
movsb
iret
inc
aad
ret
shr
push
dec
pusha
inc
sub
lahf
push
in
out
pop
bound
jg
add
clc
jl
fimull
sub
pop
mov
loop
adcl
ficoml
aaa
outsb
ds
jnp
inc
and
pop
xor
sti
inc
push
cmpsl
hlt
stos
js
pop
ret
sbb
sti
mov
pusha
fwait
aad
stos
insb
push
cmpsb
xchg
lods
test
mov
or
and
lret
scas
mov
jle
sar
insb
lahf
adc
pop
mov
mov
das
sbbb
aam
fbld
sub
push
adc
je
imulb
cld
inc
mov
and
inc
outsb
outsb
pop
call
push
xlat
pop
push
test
cmp
std
pop
pusha
sub
shl
int
cmpsl
clc
inc
fmull
lcall
outsb
sbb
sub
or
pop
xor
ret
adc
sbb
push
iret
pop
sahf
out
in
inc
mov
mov
test
mov
fs
inc
adc
adcb
cmpb
jns
jbe
and
add
orps
mov
and
loope
adc
mov
popa
jg
inc
pop
push
sub
mov
icebp
mov
enter
cli
push
mov
loop
sbb
push
inc
mov
insl
shrb
xor
mov
pop
xchg
sub
mov
rep
cmp
or
pop
flds
xlat
decl
fnstsw
scas
cmpl
icebp
lcall
test
jg
cmp
adc
sahf
mov
and
incl
xchg
sbb
aas
inc
jmp
cltd
add
mov
ja
test
scas
fadds
mov
pop
dec
dec
cld
jno
aad
scas
pop
insb
inc
loope
subb
dec
push
out
lret
cltd
ret
pop
inc
in
js
sbb
cmpsb
push
push
fs
ss
insb
push
xchg
loope
jne
jle
cmp
incl
in
sub
dec
aaa
scas
pop
inc
push
or
push
jmp
cmp
ja
add
cmp
nop
lods
lock
pop
shrb
mov
inc
adcb
push
fstpl
inc
imul
pop
fldl
imul
sbb
dec
fistpll
jno
int
sbb
dec
xchg
pop
mov
sub
call
stos
clc
sarl
ret
cmp
rorl
loopne
int
es
inc
jmp
push
cmp
out
enter
sbb
scas
call
inc
jbe
xchg
scas
aas
pop
jbe
adcb
fisttpl
iret
test
fmuls
icebp
ss
les
mov
inc
or
jno
adc
movsb
cmp
leave
xor
mov
decl
or
jecxz
push
and
mov
pop
stos
aas
int
jmp
outsb
xorb
pop
or
hlt
cli
roll
sub
pushf
neg
cwtl
add
repnz
xlat
call
out
cli
btc
mov
ds
cmp
push
sub
ss
ficompl
roll
cld
pop
or
not
push
in
add
push
divl
dec
pop
cmpsl
dec
movsb
ljmp
int
mov
or
push
lods
and
lcall
mov
mov
inc
mov
xchg
inc
mov
pop
lods
out
mov
and
lods
inc
popf
iret
flds
in
rorb
movsb
iret
mov
jg
fwait
jmp
pop
repnz
cmp
pop
xlat
xor
adcb
testb
les
pop
inc
sub
outsl
cli
stos
push
jl
arpl
mov
fistps
icebp
mov
bound
adc
xor
mov
bound
lcall
adc
push
and
push
inc
pop
push
pop
repnz
and
sbb
dec
jno
mov
and
outsb
inc
subb
bound
imul
lds
fisubs
add
and
dec
cmc
jecxz
aad
ljmp
push
fsubs
add
mov
outsb
pushf
mov
jecxz
add
xor
or
add
xchg
fistps
add
adc
or
xchg
mov
data16
loopne
xchg
decl
ret
xchg
mov
push
and
jb
jnp
rcrl
lea
mov
flds
pop
js
adc
lret
push
xchg
cmp
adc
cld
daa
mov
dec
xchg
test
push
and
mov
loop
jecxz
or
jne
or
out
xor
ljmp
mov
or
hlt
mov
fistps
push
lods
jl
call
mov
xor
cmp
adc
pop
rclb
cltd
aam
jb
push
inc
cwtl
or
sbb
pop
jg
mov
and
pop
pop
push
jg
jb
stc
jmp
ds
outsb
sahf
cmp
pushf
lea
loopne
rorb
mov
cmp
arpl
ja
js
orb
insb
int
add
test
es
add
bound
xchg
xchg
jmp
loop
pop
push
dec
pop
je
xchg
pusha
xor
push
mov
cmpsl
cli
cmp
dec
ficoms
cmpsb
sbb
cmp
xchg
pushf
pop
mov
inc
popa
fbstp
mov
jp
and
pcmpeqb
add
arpl
sbb
insb
cmp
and
test
pop
push
clc
adc
loopne
or
adc
sbb
add
pushf
push
aad
adc
pushf
xor
pop
pop
ret
mov
adc
imul
leave
test
clc
mov
shl
cltd
adc
mov
cld
add
fimuls
add
cld
std
mov
ljmp
dec
inc
js
call
push
cltd
mov
add
xchg
sub
inc
xchg
mov
xchg
data16
js
jg
icebp
push
adc
mov
cwtl
and
movsb
mov
adc
int3
xor
mov
pop
mov
mov
add
push
add
add
or
data16
scas
nop
mov
cmpsl
fcomip
pop
adc
cmp
cld
leave
push
mov
and
cmp
pop
ret
out
mov
jnp
test
jmp
stos
mov
clc
lock
cmpsl
add
jp
pushl
mov
insb
mov
icebp
in
int
cs
xchg
pushf
push
xchg
test
gs
mov
scas
mov
push
jb
insl
loopne
mov
mov
sub
or
and
dec
push
push
push
out
lods
and
psubsb
pop
jl
mov
mov
xchg
repnz
jg
ljmp
adc
pop
call
nop
sbb
lock
aaa
xor
ret
sub
in
add
aaa
ret
xchg
sar
or
and
popa
xchg
lock
call
fmull
inc
and
insl
addr16
lds
push
stos
pop
fwait
xor
ficomps
jbe
test
cmp
mov
jl
jae
cmp
das
aam
pop
fildll
xchg
dec
rorb
pop
and
ja
jb
sub
data16
jmp
pop
rcr
out
adc
pop
fcmove
push
xchg
jp
push
mov
sbb
nop
push
repz
mov
inc
pop
sti
stc
mov
xlat
test
cld
pop
push
cmpsb
lock
inc
loop
mov
push
push
dec
filds
cld
mov
icebp
pop
mov
jb
push
cwtl
or
sbb
cltd
jns
int3
fdiv
pop
cli
sbb
cli
out
mov
icebp
or
das
xor
dec
mov
pop
loop
dec
pop
call
rcrb
int
lds
decb
clc
jno
mov
inc
xor
sbbb
scas
xor
je
cmpsl
dec
mov
push
lcall
pop
test
ja
cmpb
add
lcall
imul
jle
sub
aam
movsb
imul
mov
dec
xor
mov
stos
cli
or
lods
push
xor
shll
iret
sbb
cli
in
dec
push
mov
push
out
clc
jle
rep
mov
add
add
in
cltd
inc
add
inc
popa
fisubs
nop
and
add
add
adc
out
sub
sbb
in
fstl
xor
or
jg
mov
into
iret
xlat
sarl
fisubrs
mov
iret
mov
mov
les
add
call
cltd
loopne
mov
jne
cmpsb
xrelease
push
fld
icebp
add
xor
bnd
cli
push
pop
add
pop
sbb
inc
enter
add
inc
and
fidivs
lcall
mov
pop
fs
test
test
pop
gs
dec
aam
inc
fucomip
mov
test
jle
cmp
xlat
lcall
or
push
out
push
aas
sub
add
insb
mov
pushf
jo
stos
mov
cmc
mov
mov
rcrb
pop
add
into
test
pop
movsl
or
in
push
out
rclb
jl
add
push
inc
sbb
mov
push
pop
pop
incl
jecxz
ja
aad
ja
clc
stc
fmuls
enter
mov
cmp
push
pop
cmpsl
mov
add
push
push
add
lds
fdivp
jge
cld
das
cli
jg
mov
cmp
xchg
movups
dec
clc
das
push
ss
mov
push
cmp
pop
pop
fwait
lock
adc
cld
mov
push
adc
outsl
mov
xchg
mov
rcrl
fisubrl
fnstsw
shlb
ret
aaa
pop
clc
decl
subb
pop
pop
xor
adc
mov
add
adc
pop
outsb
mov
call
lds
ss
dec
pop
xor
pop
aaa
xlat
call
push
mov
add
repnz
push
mov
mov
imul
mov
mov
dec
sub
loop
cs
iret
shlb
outsb
mov
add
add
xchg
jnp
dec
clc
das
cli
lret
xchg
xlat
xor
pop
jp
pop
mov
add
out
in
pop
push
inc
or
pop
cmp
and
test
lahf
or
int
fsubp
add
shrl
jmp
sub
lcall
dec
mov
inc
jnp
mov
mov
lret
std
call
mov
imul
insl
loopne
xor
add
mov
adc
push
mov
outsb
and
dec
pop
pushf
outsb
jg
xor
inc
mov
push
outsb
and
sub
mov
add
imull
loopne
test
fists
sub
js
cmpsb
adc
jl
sub
mov
pop
hlt
or
mov
mov
sub
add
test
xchg
xchg
xchg
shrb
sub
dec
jg
mov
rcrb
jo
push
add
jle
mov
ss
or
leave
divb
mov
fisubrs
sbb
and
jno
mov
call
mov
jg
outsb
in
mov
es
jle
cmp
insb
jg
jge
es
fbld
sub
jbe
ss
sahf
mov
ja
fwait
sahf
pushf
je
test
rcr
ljmp
into
push
insb
jmp
fadds
dec
mov
decl
mov
gs
or
sarb
jg
add
xchg
mov
inc
nop
and
lock
sbb
clc
push
add
pushf
or
js
mov
lcall
push
mov
ficoms
ds
adcl
push
sbb
jp
lods
or
pop
mov
clc
push
rolb
cmp
ljmp
mov
outsb
and
xchg
pop
and
out
clc
imul
xchg
inc
insl
cmp
ret
sar
and
loop
sbb
sub
mov
jnp
aas
je
adc
loopne
loope
dec
call
xor
jl
mov
jo
mov
jl
test
dec
daa
lcall
add
mov
jle
dec
aas
std
mov
xchg
jo
in
mov
cmc
outsb
test
pusha
pop
add
cmpsb
mov
out
and
push
lods
inc
or
xchg
inc
or
xchg
std
push
cmpb
push
divw
clc
adc
push
jno
fstpt
mov
shrb
mov
iret
and
cld
daa
outsb
jmp
in
dec
sub
clc
lds
pop
and
dec
test
mov
lcall
shlb
xchg
mov
cli
pusha
mov
inc
lock
call
fneni(8087
mov
test
cmp
pop
hlt
jl
fcomip
sub
jnp
and
test
cld
pop
mov
mov
pop
dec
and
shrb
int
jl
inc
loopne
jb
loope
movl
mov
or
xchg
loope
mov
in
sahf
xchg
mov
sti
cmp
jno
fdivs
jbe
mov
inc
sub
shrb
mov
mov
out
add
inc
add
call
or
mov
cmpl
mulb
mov
test
ljmp
addr16
cmp
rcrb
and
mov
cmp
sub
jmp
clc
pop
mov
inc
push
jne
clc
push
in
call
fbstp
movsb
mov
pop
test
dec
pop
xchg
add
loop
fsubrs
subl
mov
push
mov
push
inc
test
sbb
movsb
pop
inc
popa
pop
push
push
xorb
add
ja
fcomps
jg
jbe
outsb
sbb
sbbb
mov
repz
add
ret
mov
jle
pop
sub
jmp
mov
ret
sbb
mov
sub
or
dec
adc
sub
or
add
lcall
inc
call
aas
scas
cmc
jb
mov
into
push
clc
pop
pop
insb
mov
gs
lock
es
test
shrl
cltd
dec
inc
fcomps
mov
clc
stos
cmp
pop
fbstp
lcall
add
adc
xlat
fisttpl
out
pop
adc
icebp
fst
insl
fidivrl
scas
push
jmp
call
loope
jg
insb
push
xchg
xchg
push
pushf
lds
ret
shlb
nop
ss
pop
sub
icebp
incl
loopne
lret
in
les
jno
loopne
jbe
sti
imulb
xlat
or
outsl
sarb
xor
sbb
mov
dec
out
arpl
movsb
pop
cld
dec
and
ret
sbb
out
dec
stos
pop
jmp
ret
mov
add
mov
push
jg
std
incl
dec
or
sub
add
push
aas
mov
pop
push
mov
lock
lea
mov
popf
out
sub
sub
or
jbe
call
test
data16
and
cli
pop
push
inc
aaa
push
jl
and
mov
imul
stc
cmp
aam
loop
dec
out
xchg
mov
jle
cs
shl
xchg
stos
adc
inc
inc
std
or
add
mov
cs
push
icebp
pushw
pop
scas
xchg
mov
lcall
cwtl
icebp
lahf
imul
and
in
sbb
fildll
inc
lods
mov
and
mov
pop
mov
mov
out
in
pop
cmp
push
jmp
jecxz
xchg
stos
out
push
incl
call
mov
dec
je
jb
sbb
js
push
add
in
ja
jb
fimuls
xchg
mov
cmp
push
cmp
in
adc
mov
lock
lcall
sarl
lds
scas
mov
jg
sbb
jbe
popf
mov
daa
icebp
aaa
cmp
push
loopne
dec
jp
jmp
hlt
sahf
int3
push
jo
out
scas
add
xor
adc
jbe
jns
lcall
jnp
jns
leave
das
popf
xorl
inc
sub
scas
mov
sub
iret
pushl
data16
clc
neg
sbb
sahf
rol
jmp
rorb
add
insb
fisubl
ljmp
push
xchg
pop
adc
int
aam
push
mov
test
repz
push
mov
push
bound
or
rcll
out
pop
dec
loopne
inc
sub
pop
jae
rcr
imul
mov
sti
stc
movsb
or
xor
fldenv
push
je
in
in
sahf
popf
iret
loopne
jmp
mov
decl
mov
xchg
icebp
push
sbb
imul
int3
aas
mov
les
cmp
mov
jne
stc
js
push
mov
cmp
push
xor
add
adc
popa
jo
shrl
or
in
add
divb
and
push
mov
popa
pop
lret
hlt
nop
dec
outsb
icebp
pop
push
incb
sti
repz
stc
dec
add
out
out
or
adcl
sbb
jb
fsubp
sub
mov
orb
in
xchg
inc
repz
dec
cwtl
push
fs
push
cmc
out
stc
dec
xor
insl
sbb
aam
xchg
arpl
rcll
outsl
je
popl
das
push
cmpsb
jp
test
xor
test
clc
or
daa
cmp
pop
clc
mov
mov
outsb
dec
loopne
mov
pop
and
ljmp
jecxz
dec
mov
das
and
or
and
fstpl
int
dec
or
adc
mov
scas
push
in
mov
push
push
mov
stos
pop
outsl
sbb
dec
lret
push
xchg
or
sar
incl
cmp
bswap
aaa
sub
dec
ljmp
data16
or
xchg
leave
cli
add
lcall
repz
or
xchg
push
mov
cld
dec
movsb
sbb
dec
sbb
mov
jb
xchg
int
popa
push
mov
inc
rcrb
enter
or
shlb
les
jle
push
cld
jbe
loop
mov
sbb
jno
sub
cli
add
inc
lret
cli
cld
aas
orb
pop
and
or
mov
push
xor
mov
fldcw
sti
inc
jnp
and
inc
pop
jmp
cmpsb
dec
std
jne
icebp
ret
shlb
in
adc
shrl
push
push
rorl
inc
fdivrp
or
pop
notb
mov
dec
jb
sbb
js
mov
fisttps
adc
loopne
int3
push
sub
dec
aaa
mov
test
repnz
and
andb
lret
outsl
int
stos
sub
loope
jle
addb
in
pop
xor
ret
xor
push
test
pop
push
mov
clc
sbb
ret
cli
jg
int
add
or
adc
xor
dec
sub
dec
jg
ljmp
out
ret
aas
push
add
stos
mov
cmp
scas
mov
call
lds
lcall
mov
push
adc
adc
sub
shll
rorb
cmp
mov
js
sti
jb
cwtl
inc
cmc
ljmp
adc
hlt
push
xor
test
pop
and
sub
outsl
das
xchg
sub
jmp
fmulp
mov
jl
adc
repz
repnz
je
stos
sahf
and
incl
hlt
roll
hlt
mov
push
and
inc
add
mov
ja
rsm
test
lcall
or
dec
fimull
or
das
pusha
call
inc
repnz
ret
je
inc
cmp
pop
and
sub
fimuls
add
pop
mov
push
ret
inc
aad
cmp
jb
adc
adc
loop
xchg
icebp
xor
in
scas
enter
dec
test
mov
arpl
cmp
add
dec
mov
push
leave
sbb
cmp
sub
pop
bound
mov
das
add
cmp
cld
xor
push
mov
test
sbb
jg
xchg
imul
int3
mov
jle
std
mov
dec
rol
out
pop
shl
jmp
jle
scas
push
test
inc
sbb
negl
lret
loop
pop
cmp
mov
adc
mov
xor
aaa
in
pusha
fcomip
sbb
add
pop
lret
or
pop
insb
push
pop
jbe
into
movsl
outsl
sub
jp
and
mov
mov
ljmp
in
loop
push
fdivrl
mov
loope
insb
fdivrl
shrl
xchg
inc
push
cld
jge
movsl
mov
test
shll
push
dec
adc
jg
mov
scas
pop
mov
sub
cmp
inc
push
pushf
add
pop
in
int3
jnp
add
in
aad
clc
je
insl
cmp
mov
add
sub
cmpl
dec
inc
lret
sahf
fimull
xor
shl
add
rol
cli
mov
pop
sub
jb
in
fildl
inc
test
dec
pusha
mov
dec
pushf
fcomip
sbb
icebp
imulb
cwtl
out
adc
fst
enter
mov
rcrb
sbb
loopne
mov
sub
stc
out
pop
pop
or
into
pop
cli
fmul
lcall
adc
sub
icebp
inc
jno
inc
push
fadd
test
mov
out
fistpll
mov
dec
shlb
mov
mov
pop
mov
or
repnz
les
das
jmp
sbb
push
into
dec
push
cs
clc
fwait
add
jge
push
jl
pop
jmp
mov
negb
add
sub
ficomps
lret
dec
fcomip
or
cmpsb
ljmp
pushf
fdiv
add
lods
into
inc
inc
ret
clc
stos
push
sbb
cs
sub
cmp
shll
pop
lcall
push
scas
testl
negl
arpl
test
loop
lock
jecxz
idiv
repz
push
pushf
cmp
adc
jl
notb
loopne
mov
fsub
test
les
cwtl
xchg
jbe
fldl
outsb
cmp
sbb
pop
lods
push
int3
insb
or
loop
xchg
in
fsubl
push
ljmp
pop
hlt
jge
push
addr16
mov
xchg
jne
stc
pop
or
adc
pushl
inc
cmp
mov
popl
lret
push
rcrl
pop
sbb
out
mov
pop
pop
fstpt
nop
xchg
stos
pop
jecxz
push
or
xor
inc
loopne
cs
add
add
jg
push
lods
lret
loop
cmp
xchg
mov
inc
cld
or
ret
andl
nop
outsl
mul
adc
or
push
fidivs
test
xchg
fildl
adc
into
aad
test
cmp
inc
inc
sbbl
or
push
fcoml
nop
xchg
jmp
dec
push
jb
push
cmp
insl
sti
adc
ja
cmpsl
call
mov
mov
mov
mov
imul
mov
pop
loope
push
incb
inc
sub
mov
or
or
aaa
pop
jo
fwait
insb
fs
orl
mov
xchg
add
adc
jmp
popa
pop
push
icebp
jnp
cmp
int3
and
cmp
pushf
jbe
into
stos
in
or
push
sub
jg
dec
push
rorb
jge
ret
pop
imul
idiv
and
lds
jae
popa
fnstcw
mov
adc
repnz
cmpsl
xchg
cmc
adc
push
pop
mov
fisubrl
mov
xor
sbb
ljmp
pusha
clc
mov
or
fprem
rcrl
das
adc
scas
mov
cmp
insl
into
aas
std
pop
adc
adc
adc
adc
fmulp
cli
fwait
mov
insb
pusha
cwtl
and
dec
in
dec
push
sub
inc
jp
push
xchg
std
push
add
cmovp
hlt
cmp
loop
mov
xchg
mov
pop
push
repz
ljmp
icebp
cmp
sub
adc
inc
in
and
push
mov
mov
repnz
mov
cmpsb
push
inc
jns
ret
scas
or
insl
test
xor
rcll
loope
insl
rorl
movsb
fs
and
in
decl
stos
repz
sbbb
sbb
xor
je
cmp
enter
fs
push
stos
das
mov
test
pop
lock
ds
sub
push
sbb
sbb
pop
and
int
dec
pop
jle
ret
pop
shlb
loopne
cmp
hlt
out
not
or
inc
mov
jns
mov
arpl
int
movsb
fwait
dec
scas
push
xorl
push
ljmp
pushl
in
sub
xor
pop
test
mov
cld
or
dec
adc
lcall
mov
ss
push
inc
jge
jle
rcrb
std
pop
jle
push
stos
out
or
das
pop
and
pop
jp
lods
popa
lret
pushf
test
rolb
pop
repnz
pop
cli
dec
outsl
xchg
imul
dec
lret
lock
mov
insb
xor
jle
push
aas
and
adc
ja
sbb
or
jle
gs
movsl
push
or
inc
cwtl
out
pop
dec
mov
inc
xor
aad
sub
xchg
repz
xor
xchg
leave
mov
cmp
adc
inc
push
inc
jmp
ss
idivb
sbb
inc
pop
xorb
jle
icebp
xchg
xchg
dec
icebp
pusha
mov
mov
mov
sub
sub
pop
outsl
into
add
mov
imul
xchg
mov
std
out
testb
call
inc
jne
ja
ljmp
imul
je
mov
loopne
fstpt
pop
repnz
enter
out
sbb
stos
or
push
mov
nop
push
ret
xchg
imul
pusha
sbb
std
fcomip
sub
push
ja
cmpsb
jnp
and
pop
xor
mov
xchg
push
pop
pop
mov
or
orb
sti
add
scas
and
ljmp
xlat
orb
icebp
test
xchg
xlat
lods
push
and
mov
push
ret
sub
pop
xor
outsb
mov
decl
jb
adc
cmp
mov
jbe
sbb
loopne
std
clc
ret
xor
nop
enter
call
mov
fmull
jb
sub
lods
aad
cli
or
ret
stos
psubd
aad
les
cwtl
push
in
mov
shl
call
scas
aas
dec
shr
sbb
icebp
call
sbb
and
mov
stos
fldcw
divb
add
mov
xor
cmp
pop
test
lods
fildll
push
in
sub
aas
fcoml
std
scas
outsl
push
out
dec
sub
repz
pop
insb
cltd
loope
shll
pop
sub
sub
inc
pop
lcall
push
push
dec
clc
add
enter
add
jae
ja
enter
xchg
xor
orb
or
test
mov
stc
pop
xchg
fidivrl
ljmp
inc
rcr
mov
inc
or
aaa
cmp
jmp
in
sbb
subb
lds
sti
scas
call
shl
scas
push
cmp
push
popf
xor
and
push
cmpsl
inc
jmp
int
or
mov
insb
jbe
mov
sub
jae
loope
clc
add
jp
scas
and
test
push
das
rolb
xchg
cmpsb
lcall
adc
xor
cmc
pop
sub
loope
mov
adc
sub
jp
sbb
call
je
mov
frstor
jmp
mov
lds
mov
pop
aam
mov
dec
xor
call
shll
cmp
or
divl
jne
xchg
xchg
aad
dec
inc
ret
dec
xchg
xchg
call
xor
cli
xor
jno
adc
shl
xorb
cmp
push
xchg
sub
jb
cmp
insl
push
js
adc
les
fsubrl
les
les
cld
inc
clc
scas
cli
outsl
cli
jb
xchg
ret
cmp
repz
mov
inc
lods
test
std
sub
dec
pop
jnp
lds
call
jle
add
inc
insb
push
ljmp
mov
cld
int
test
in
shlb
daa
ds
out
cmc
add
jbe
mov
fsubrs
and
xlat
adc
int3
add
sub
pop
push
fdivs
jp
or
loopne
pop
icebp
lret
add
pop
cmp
out
dec
pop
mov
sbb
out
inc
cld
or
sub
xor
dec
call
sbb
mov
aas
push
out
xchg
in
sub
pushl
fbld
pop
popf
sahf
nop
clc
push
cs
xchg
lods
fcomip
das
add
call
mov
ljmp
bound
orb
add
pop
jl
test
pop
pop
popf
fisubs
ret
adc
push
sbb
loope
insl
mov
js
mov
lcall
xor
mov
sub
sub
mov
sbb
pop
je
and
mov
mov
jae
js
lcall
mov
mov
outsb
cmp
add
repnz
es
adc
std
ret
sub
js
sub
sar
aaa
inc
sub
ljmp
shrl
mov
icebp
inc
mov
jno
mov
ss
aad
dec
out
push
jl
adc
mul
pop
roll
icebp
jg
incl
pop
out
jbe
pop
xrelease
inc
fdivrl
mov
hlt
mov
mov
pop
scas
in
push
add
jo
loopne
and
pop
imul
adcb
ljmp
ficoml
adc
mov
shlb
hlt
sbb
loop
sbb
cld
iret
inc
clc
dec
call
loop
adc
scas
icebp
das
jle
out
out
add
pop
icebp
add
aas
cmp
js
mov
call
es
push
cltd
push
inc
loopne
lea
jmp
pop
cmc
lcall
mov
xor
cltd
mov
ljmp
pop
shrl
dec
test
pop
gs
mov
sbb
lcall
test
pushf
pop
or
sbb
test
mov
push
in
ja
ljmp
incl
mov
dec
test
and
jg
inc
xlat
and
loop
jbe
aaa
repz
inc
stc
mov
mov
mov
sub
cmp
ja
mov
mov
les
sub
movsb
data16
lock
addr16
adcl
cli
lcall
ffree
jg
push
scas
jo
sbb
test
scas
in
scas
movsl
negl
in
mov
lcall
test
add
mov
outsl
jl
sub
mov
out
mov
xchg
pop
cli
or
mov
insl
cli
sub
add
scas
push
push
in
mov
insb
adc
push
dec
ds
jb
movsb
push
clc
sbb
out
dec
adc
stc
in
inc
dec
imul
out
ljmp
or
popf
dec
aad
mov
popf
push
add
scas
cmp
dec
or
ja
jmp
ds
xor
mov
jb
pop
dec
insb
pusha
mov
push
sub
jmp
inc
mov
pop
inc
mov
or
xor
sbb
int
mov
repnz
cmp
jno
stos
dec
and
push
and
daa
sbb
aad
arpl
je
and
cwtl
fdivrl
scas
jl
add
xchg
sub
dec
jmp
call
lock
mov
xor
pop
es
cld
das
les
loop
cmp
icebp
cmp
push
das
adc
adc
cltd
jbe,pn
mov
daa
lock
sbb
cmp
mov
push
ja
js
sub
sbb
push
push
cs
mov
in
in
mov
xchg
mov
mov
adc
xor
inc
aad
call
ret
xlat
mov
js
sar
mov
sub
add
dec
mov
xchg
mov
mov
jo
add
stos
out
cmp
add
mov
adc
ljmp
inc
adc
or
inc
lods
ds
mov
incl
data16
mov
jo
jo
push
or
pop
xchg
mov
and
pop
fbld
fcomip
jo
dec
mov
jns
sbb
ret
mov
in
pop
mov
xor
add
fcompl
and
orl
aam
fucomip
stc
add
filds
scas
pop
das
test
rcr
mov
test
sub
lahf
hlt
rcrb
popa
xchg
cmpsb
sub
popf
xchg
push
jno
mov
pop
mov
pop
les
call
es
or
cmp
xor
movsb
insb
ss
popa
out
xor
cmp
inc
popf
cli
and
sbb
js
arpl
loop
int3
adc
cmpb
cmpb
jno
popf
lret
cli
imul
mov
jecxz
inc
add
adc
mov
addr16
push
movsl
and
adcl
in
or
jl
addl
ljmp
pop
sbb
push
xchg
xor
dec
repz
fisttpll
call
sub
mov
adc
ret
rol
mov
incl
iret
into
xor
add
out
popf
mov
icebp
mov
and
rcrl
sarb
dec
nop
mov
cld
inc
mov
ds
mov
int3
push
cmp
mov
cld
push
dec
mov
je
clc
jg
xor
add
adc
subl
jge
rcrl
xchg
lcall
fsubs
ds
divb
and
les
sub
dec
cmp
jp
mov
dec
loopne
jge
stos
scas
popa
aam
insb
imul
mov
pop
addr16
inc
jbe
dec
mov
push
dec
dec
push
in
pop
pop
mov
loope
jmp
pop
sub
xchg
sbb
dec
test
ss
inc
fisttpll
roll
push
jno
push
jge
loop
inc
jo
push
mov
cmp
scas
sti
mov
sub
or
jns
xchg
jbe
stos
xchg
popl
sub
subl
cld
jg
repz
xchg
inc
shrl
pop
adc
push
push
xchg
or
daa
fs
or
push
mov
loop
push
sbb
inc
adc
sbb
jle
arpl
cli
inc
jg
push
dec
std
test
push
push
fcompl
inc
xor
inc
loopne
icebp
aaa
push
add
sti
movsb
sub
out
pop
sbb
std
out
repnz
inc
cmp
out
dec
sbb
test
pop
xchg
mov
mov
sbb
jns
int3
inc
xor
test
fdivrs
jmp
cmp
mov
push
sahf
mov
fbld
inc
pushf
cmp
mov
cld
sub
xchg
icebp
pop
pop
lods
stos
aas
push
cld
add
subl
es
testb
ret
dec
add
in
adc
sub
outsl
add
lea
xor
sub
pop
outsl
in
xorl
iret
push
ds
inc
push
mov
sbb
jge
bound
in
aaa
fsubrl
mov
cmpsb
js
mov
and
inc
mov
or
mov
adc
jg
adc
fwait
jg
mov
in
dec
pop
pop
std
add
adc
cwtl
enter
and
push
sub
fdiv
bound
hlt
push
push
dec
push
sbb
lret
jb
sbbb
test
pop
into
inc
sbb
lods
xchg
out
sbb
pop
xor
fiadds
sarb
std
addb
sub
mov
push
int3
pop
adc
std
rorb
clc
add
mov
adc
mov
fimuls
mov
jbe
pop
fs
and
mov
and
mov
cli
xchg
mov
jmp
xchg
inc
jne
dec
negl
scas
mov
jb
mov
scas
cld
push
jnp
mov
ja
xor
push
mov
in
popa
dec
jmp
sub
push
aaa
ss
cmp
mov
mov
scas
aas
or
mov
sahf
push
adc
insb
cmp
dec
mov
xchg
icebp
ficompl
push
xchg
lcall
mov
cmp
cmp
cmp
dec
add
es
add
rclb
imul
or
jne
jbe
out
push
add
sti
mov
call
mov
das
and
add
fdivl
daa
inc
jmp
das
mov
xor
aam
ljmp
clc
fcomip
out
or
xchg
and
and
or
xchg
cmp
mov
inc
cltd
mov
inc
inc
in
cli
icebp
fwait
clc
sub
pop
or
push
std
call
data16
out
jo
outsl
push
iret
push
add
sahf
das
bound
xchg
pop
cli
sub
leave
lret
bound
scas
fidivrl
es
add
mov
dec
and
outsb
pop
cmpsb
mov
das
movsb
jo
inc
cmp
pop
sbb
mov
std
add
push
cmp
mov
jmp
clc
mov
outsb
shlb
outsb
xchg
add
push
inc
push
ret
mov
push
jge
jp
mov
push
icebp
jmp
rolb
or
add
mov
xor
mov
out
adc
xchg
cmp
mov
clc
and
add
dec
ret
and
int
loopne
push
add
enter
lock
xchg
push
inc
es
mov
or
enter
cli
add
jg
int3
inc
fsts
xor
mov
and
repz
pop
adc
rclb
mov
decb
dec
xchg
orb
inc
mov
jb
idiv
push
push
jecxz
mov
cmp
cmp
stos
push
add
fwait
jge
bndstx
mov
add
xchg
fdivp
mov
or
adc
cmpsl
fwait
orb
imul
inc
xchg
negb
dec
call
xchg
sbb
push
jle
sub
sub
int3
cmp
mov
mov
xchg
sub
jno
jecxz
call
cwtl
shr
and
mov
sti
clc
arpl
jnp
sub
dec
call
inc
push
fs
sbb
or
and
inc
stc
call
add
cmp
test
jae
mull
sbb
loop
inc
imul
mov
jge
pop
sub
sub
pop
cltd
sub
jo
scas
popa
lods
stos
aam
add
insb
sub
mov
mov
jnp
stos
and
xor
daa
call
push
decl
and
add
decl
jecxz
cmp
lods
rcrl
mov
lret
add
hlt
roll
fisubs
mov
jg
add
push
testb
push
mov
iret
ja
pushf
push
sbbb
cmp
test
pusha
sub
mov
dec
sbb
sahf
pop
sti
inc
outsb
add
dec
mov
inc
mov
hlt
fldt
cmp
pushf
add
xor
jmp
stos
jg
mov
ret
in
in
les
cmp
push
dec
decl
mov
or
xor
test
lea
adc
and
inc
bound
jg
repnz
xchg
mov
add
mov
arpl
insb
inc
push
xrstor
mov
idivl
fsubrs
add
or
or
out
mov
xor
mov
mov
clc
incl
cld
fdivrl
fsubrp
jmp
pop
repz
mov
xchg
dec
in
jg
adc
gs
rorb
or
push
hlt
cmpsb
addb
ss
ljmp
pop
mov
xlat
cmpb
jecxz
add
mov
stos
dec
rolb
call
outsb
add
ret
jg
outsl
hlt
cmp
icebp
dec
adc
xchg
pushf
test
mov
subb
scas
sub
sbbb
jg
push
addb
mov
fs
pop
stos
scas
loopne
pop
pop
movsl
jnp
mov
mov
xor
call
add
xchg
cli
andb
jo
cmpb
pop
cmp
cld
push
call
ds
adc
or
mov
rorl
aad
mov
ss
call
movsl
mov
nop
subb
xor
sub
stos
sub
out
mov
pop
mov
decl
je
cli
push
pop
ja
lret
dec
adc
cmc
xchg
dec
mov
push
pushf
push
popf
push
jg
je
in
aas
push
mov
cmp
sbbl
push
mov
adc
add
sarl
lret
mov
mov
ret
imul
decl
or
daa
add
mov
jg
lcall
dec
lret
push
mov
in
imul
jp
cmc
divb
add
or
cmp
push
jle
dec
aaa
inc
mov
jecxz
add
jg
test
shll
orb
xor
xor
imul
daa
bound
mov
add
cmpsb
jg
mov
xor
outsb
lcall
sarb
push
xchg
sarb
outsb
mov
loopne
xor
stos
sarl
sbb
ficompl
adc
mov
incl
mov
sbb
test
shlb
xor
jle
adc
fdiv
mov
mov
xor
jg
jg
inc
cli
cmp
mov
cwtl
or
jl
mov
mov
movsl
pushl
cld
mov
pushf
pop
sbb
jne
in
jp
insl
pop
mov
jge
nop
sarl
out
mov
xchg
addr16
in
jmp
test
fimull
jae
dec
mov
jb
rol
or
jl
sub
mov
test
cmp
jg
ljmp
enter
loop
sub
aas
sub
lods
push
push
cli
xchg
test
mov
sbb
push
cmp
sbb
adcb
outsl
mov
pusha
rcl
pop
cmp
dec
cld
mov
push
jmp
hlt
int
cmc
scas
jge
in
adc
aaa
sbb
out
xchg
fnop
lods
sub
rorl
pop
add
push
adc
pop
jmp
mov
jmp
and
stos
aas
arpl
gs
mov
push
fs
add
xchg
icebp
mov
lds
in
mov
mov
std
add
pop
cs
ljmp
push
or
sbbl
insb
cltd
aad
cld
outsl
imul
xor
cmpsb
dec
sbb
mov
pusha
lcall
test
jg
dec
pop
inc
xchg
cmp
test
cli
mov
les
fwait
cmp
incl
ret
dec
adc
lea
mov
jp
test
mov
and
pop
rcrb
aam
loope
mov
pop
push
lods
lcall
xchg
xor
cwtl
cmc
fstpt
fsub
std
leave
inc
push
mov
mov
or
es
test
mov
or
add
out
push
add
mov
out
add
push
aad
lcall
int3
lret
test
fildll
xchg
pop
and
popf
in
inc
pop
add
cmp
inc
hlt
lea
call
push
imul
pushf
xor
push
hlt
enter
mov
popf
ljmp
or
repz
jbe
lods
mov
push
insb
test
call
jo
in
es
mov
pop
cmp
pop
rcll
repnz
dec
es
jmp
adc
rorb
push
push
add
pop
sbb
xlat
jmp
add
cs
push
es
add
sbb
arpl
pop
jecxz
lods
adc
mov
bound
aam
add
hlt
sub
in
dec
and
push
xchg
inc
xchg
ljmp
cmc
pop
pusha
mov
mov
lahf
shl
mov
mov
decb
rorb
jg
rorl
add
mov
sbb
into
leave
dec
pop
sti
add
sbb
pop
jbe
lods
clc
fstl
inc
js
jl
mov
fcoms
mov
mov
decl
dec
repnz
or
std
lods
pop
mov
xor
adc
pop
movsb
xor
clc
decl
jle
jbe
mov
pop
stos
sbb
push
rclb
mov
mov
outsl
scas
js
call
push
sbb
mov
adc
inc
add
pushl
lods
cmp
jge
cmp
cmp
mov
imulb
movsb
lock
adc
cmpsl
and
or
fisttps
je
popa
push
outsl
cli
jno
outsl
outsb
ljmp
test
pop
sub
mov
je
dec
loope
popf
orb
jl
ljmp
repnz
sbb
loopne
push
int
or
cltd
xchg
mov
clc
jmp
jecxz
jmp
in
scas
leave
lcall
inc
ret
ja
adc
cltd
xchg
outsb
icebp
scas
movsb
loope
and
mov
push
mov
mov
es
xlat
pushf
outsl
scas
cmc
hlt
sbb
aam
mov
jnp
xchg
jmp
test
repnz
icebp
sub
cs
pop
mov
out
mov
inc
pusha
inc
cli
or
sub
xchg
mov
lcall
insl
ss
pop
testl
or
or
subb
clc
adc
lds
or
cmp
das
mov
sbb
call
cltd
aam
in
adc
cmp
jmp
adc
hlt
dec
sbb
sub
adc
sarb
push
adc
pop
ljmp
xchg
mov
lea
xor
cmp
fs
jp
or
dec
fistps
adc
hlt
pop
negl
aas
dec
enter
sub
jle
test
outsl
ret
int3
in
fcoms
nop
mov
mov
rcr
insb
sub
pop
cmp
pop
mov
sub
js
mov
jmp
pop
movsb
push
dec
adc
shll
inc
in
negl
jg
mov
push
mov
add
filds
dec
loopne
pop
gs
mov
aas
jne
sbb
cld
sbb
and
push
cmp
in
fcmovu
icebp
mov
loopne
nopl
aad
int3
mov
sbb
pop
mov
mov
daa
js
test
and
add
push
dec
pop
orb
mov
lret
mov
cmp
ss
inc
movzbl
inc
pusha
adc
fisubs
push
jo
or
stc
outsb
scas
mov
clc
fisubs
sub
sub
popf
push
in
mov
in
std
xor
int
or
mov
lods
inc
test
les
or
pop
test
cmp
mov
je,pt
add
dec
mov
mov
in
daa
adc
add
cld
and
push
xor
mov
push
inc
ret
inc
xor
sbb
and
sbb
leave
or
or
add
lods
dec
sub
sbb
push
inc
mulb
mov
loope
push
loopne
sub
test
js
pop
out
movsb
mov
sbb
xor
and
or
ljmp
clc
ljmp
pop
cltd
cmp
inc
mov
sub
jmp
shrl
lret
mov
add
scas
sti
jnp
xor
ds
in
js
mov
jno
sbb
mov
lcall
jb
xlat
rorl
dec
ds
cmp
std
lret
das
pop
or
add
dec
push
ret
push
and
pop
mov
push
pop
mov
pushl
or
dec
std
ss
cmp
mov
das
mov
dec
pop
cmp
push
or
sbb
pop
rclb
xchg
enter
incl
cmpsl
push
test
adc
pop
into
xchg
fistl
testb
scas
push
and
or
cmc
jg
cmc
sub
into
xchg
test
pop
push
push
push
inc
adc
fwait
xchg
xor
xor
pop
insl
cli
stos
outsb
scas
add
ret
fisubrl
push
pop
orl
scas
hlt
aas
es
mov
dec
push
jb
ficomps
jge
fstps
shlb
mov
repz
mov
and
or
mov
pop
dec
sbb
push
out
dec
sbb
outsb
xchg
int3
outsl
shlb
hlt
into
or
aam
loop
xchg
scas
sbb
call
adc
push
sbb
loop
cmp
repz
clc
nop
xor
clc
inc
add
inc
icebp
add
roll
sarl
lock
bound
scas
xchg
fsubrl
sahf
aam
mov
mov
and
cli
pop
lds
cmc
bound
mov
lahf
in
lea
xchg
mov
pop
ret
xor
faddl
ret
jb
lea
push
das
sub
mov
int3
and
push
mov
inc
rol
push
add
out
rcrb
inc
dec
xor
cld
pop
sbb
sbb
js
fstpl
jae
aaa
inc
cli
push
dec
lea
xor
push
mov
inc
dec
jb
into
popa
lret
pop
imul
sarb
jle
xchg
int3
mov
cli
ret
loope
add
test
fisttpl
pusha
sbb
scas
mov
pushf
xor
decb
inc
pusha
sbb
inc
mov
js
jb
in
shrb
ret
push
sbb
lret
outsl
decl
push
mov
js
ret
push
lahf
pusha
and
out
push
or
shr
sbb
lods
push
adc
adc
int3
in
lods
adc
out
sbb
mov
ja
push
sbb
inc
mov
decl
cmc
nop
ja
mov
cmp
stos
push
scas
mov
add
aas
scas
std
int
add
movsb
fidivrs
rolb
xor
loopne
fisttpl
sahf
jmp
mov
mulb
cmpsl
mov
push
js
cmp
jg
mov
sub
mov
int
aaa
sbb
cmp
mov
sub
pusha
mov
dec
lods
nop
push
stos
push
nop
fistps
xchg
mov
add
cmp
inc
push
jns
pop
in
adc
lock
sub
push
ds
loopne
rcll
arpl
clc
push
loop
pop
sbb
fs
jns
inc
add
xchg
insl
xor
hlt
in
cmpsl
pop
shrl
xchg
jle
mov
pop
mov
cli
movsl
and
incl
xchg
lahf
sub
add
test
mov
push
loope
inc
test
jbe
cmp
push
dec
push
jp
loop
adcb
pop
inc
mov
shlb
in
add
sar
imul
pop
insl
pushf
add
pop
icebp
mov
mov
push
ljmp
add
cmp
subss
cli
test
lock
pop
cmc
das
mov
sub
cmp
or
xlat
cmp
or
dec
xchg
or
inc
popf
cli
lods
cli
push
cmp
jp
rcl
ds
dec
push
mov
out
sbb
imulb
cmp
or
sahf
ret
dec
push
pop
jno
add
aas
stc
or
shl
jmp
sbb
xor
and
and
iret
lret
jb
pop
push
shll
push
dec
xchg
jae
mov
pop
std
xchg
push
inc
xor
xchg
loopne
mov
cld
stos
or
push
jl
movsl
and
clc
incl
xchg
mov
cs
cmp
icebp
mov
or
rclb
nop
mov
clc
add
sub
xchg
inc
pop
std
cwtl
sub
test
lods
inc
add
loop
lods
push
sar
xor
add
test
push
dec
push
xor
mov
ljmp
sub
xorl
lods
lods
lcall
xchg
sub
ds
pop
mov
cmp
popf
lret
xor
pop
ljmp
sbb
pop
adc
dec
mov
push
aad
or
fdivrl
ss
shll
cwtl
xchg
fiadds
xchg
ja
sub
push
cli
mov
fcomps
hlt
subb
add
cmp
pop
jle
push
lret
ljmp
sbb
lcall
or
mov
add
stos
out
clc
stos
jbe
mov
inc
cmpsb
rcrl
test
shlb
addr16
push
inc
or
lcall
ss
repz
das
add
ds
movsb
outsb
sub
sbb
insb
cmp
jge
decl
repnz
pop
outsb
sbb
mov
jb
xchg
sarb
add
out
je
repnz
jmp
jbe
imul
enter
xchg
push
dec
push
shll
call
fcomip
loope
lahf
je
mov
loope
stos
inc
movsb
roll
test
lret
mov
popf
cmp
fbstp
fwait
xchg
pop
mov
test
sbbb
mov
in
loopne
std
inc
sub
enter
adc
mov
inc
rcl
jo
movsb
stos
or
lcall
fisttpll
xchg
push
or
adc
jg
call
dec
dec
dec
dec
adc
int3
popf
jb
js
fisttpll
sub
jb
cwtl
sub
pop
movsb
pop
repnz
mov
int3
add
sbb
pop
dec
inc
pop
mov
lods
test
std
push
mov
call
mov
push
cltd
ficoml
lret
and
push
mov
nop
pop
inc
dec
cmp
test
sbb
sub
dec
cmc
mov
pop
rclb
cmpsb
ret
jmp
push
rorl
sbb
roll
sub
cmpsb
testl
pop
sub
lock
scas
sbb
add
scas
cmpsl
pop
push
scas
mov
jle
scas
or
add
in
mov
mov
cld
sbb
jmp
lahf
icebp
jo
inc
out
mov
call
aaa
jo
mov
cmp
lods
adc
stos
and
cmp
pop
inc
adc
or
dec
pusha
movsl
movsl
push
add
scas
xlat
sbb
jbe
mov
ret
or
mov
xor
inc
pushl
cmp
mov
rorl
fcomp
mov
add
add
testb
xor
iret
test
flds
ficoml
sub
jb
mov
push
pop
dec
mov
hlt
arpl
fprem1
push
lcall
fimuls
hlt
jp
push
jne
pusha
rcll
lcall
insb
rcll
jnp
xchg
mov
fldcw
ret
in
add
inc
xor
mov
push
mov
xlat
xorb
push
hlt
pop
dec
test
xor
and
int
pop
push
insb
decl
jno
cli
jmp
mov
scas
adc
push
push
icebp
fwait
sub
dec
shll
add
xchg
movsb
and
adc
incl
xor
pop
adc
les
ja
movsl
call
mov
scas
mov
mov
dec
sbb
sbb
lea
fisttps
movsb
mov
mov
mov
mov
push
sub
or
cmpsb
mov
test
es
mov
sar
jb
pop
mov
or
jg
push
or
int
mov
pop
inc
aaa
cld
lcall
bound
jae
enter
push
sbb
in
xchg
rolb
jg
inc
loopne
roll
adc
adc
xchg
nop
scas
add
xor
mov
jl
mov
cli
rorl
inc
loop
mov
out
jmp
adc
inc
nop
adc
add
jae
push
jge
push
jb
pop
das
lcall
insl
dec
inc
lds
adc
in
scas
xchg
ret
scas
pop
lds
cli
mov
jp
pop
addb
adc
int3
jno
aas
adc
xor
sahf
jae
mov
xor
adc
dec
push
or
sbb
icebp
ja
fistpll
cld
cld
lea
fwait
push
xor
sahf
jl
pop
lock
cmp
sbb
dec
jg
jno
sbb
add
adcl
add
pop
call
inc
je
lahf
cwtl
loop
adc
adc
outsl
movsl
pop
push
fcmovnb
dec
xor
lds
sbb
mov
inc
movsb
inc
sahf
sub
cmp
sub
or
es
mov
xor
lret
sar
inc
lcall
lods
pop
cmp
lea
insl
test
xor
shll
pop
nop
stos
and
cs
xchg
mov
mov
stc
test
cltd
pushf
mov
xlat
out
xor
and
push
in
repz
hlt
fucomip
fisttpl
test
aas
cmp
dec
lret
fsubrl
call
or
pop
ljmp
inc
in
jp,pn
lcall
add
inc
jg
dec
inc
lds
adcl
test
push
push
push
daa
rcl
mov
mov
imul
jnp
lcall
leave
aaa
rorb
cld
loope
aas
adc
mov
lods
pop
je
iret
cmp
or
arpl
pop
pusha
lcall
nop
filds
dec
and
sub
jbe
mov
pop
lret
loop
lods
pop
dec
clc
inc
sub
jns
mov
xchg
add
xchg
sub
fisubrs
cmpsb
ljmp
cmp
jmp
ja
bound
mov
adc
push
cli
jmp
mov
std
cmp
sbb
sub
lods
dec
jnp
testb
or
xchg
pop
pop
into
mov
stc
sub
clc
mov
xchg
dec
outsb
push
or
sbb
pop
and
xchg
pusha
adc
sbb
add
fsubrl
fisubs
xchg
loopne
loopne
xor
mov
dec
cmp
ds
ret
fstpl
ret
cmpl
aam
stc
dec
stos
sub
xchg
aas
sub
inc
clc
mov
adc
jne
or
repz
push
and
test
outsl
das
movsb
in
cmc
mov
sbb
popf
pop
sub
loopne
mov
push
sub
lock
cmp
jne
push
pop
mov
and
xchg
jbe
stos
mov
clc
dec
mov
mov
xor
jl
icebp
dec
mov
mov
add
xor
add
and
imul
ljmp
repnz
adc
movsb
push
int3
mov
test
jg
or
add
mov
inc
sahf
mov
lods
mov
int3
sti
or
jb
aaa
adc
cli
pop
in
xor
jb
nop
pop
xchg
mov
and
fbld
jle
inc
sub
add
aam
je
pop
hlt
jle
add
in
mov
add
iret
mov
mov
decl
lds
push
jnp
cmpsl
sub
repnz
pushl
push
aam
push
pop
imul
scas
rcr
adc
sub
jl
fisubrl
orb
sbb
shll
adc
add
pop
lock
mov
arpl
mov
cmpsb
jp
sub
out
fiadds
xchg
jmp
sarl
mov
xchg
mov
and
pushf
inc
or
dec
in
rolb
xchg
and
mov
mov
jb
out
adc
cmp
cmp
lods
mov
fsubrp
jl
pop
aas
cmp
enter
testb
ret
loope
jle
pushf
and
or
xchg
fisubl
cli
stos
sub
push
push
sub
xchg
test
add
ffree
rcl
out
test
in
pop
xor
scas
insb
jb
push
negb
dec
ret
lea
mov
loopne
push
add
inc
call
pop
adcb
fucomi
gs
mov
mov
cld
es
pusha
jmp
dec
mov
decb
faddl
mov
mov
cmp
ja
mov
fucomip
and
daa
lahf
mov
mov
aas
es
xor
sub
add
mov
std
testb
std
jne
hlt
test
sbbb
ljmp
repz
and
je
push
xchg
xchg
jmp
adcb
pop
lock
jp
dec
push
dec
test
cltd
mov
aam
hlt
jg
pop
pop
add
popa
dec
mov
loope
dec
push
jp
sub
sub
jb
data16
jg
jmp
daa
mov
push
xor
mov
inc
jns
sbbb
pop
addb
fidivl
cmpb
xchg
lret
jecxz
in
lret
lcall
daa
xor
xor
xor
hlt
mov
shlb
movsl
inc
movsb
aad
stc
mov
test
or
add
sub
pop
ljmp
das
and
loop
inc
jle
pop
pusha
jmp
enter
scas
dec
fbld
jbe
lock
ljmp
sbb
orb
bound
popf
and
shlb
jmp
push
mov
xchg
outsl
test
mov
arpl
mov
lds
mov
sub
xor
out
out
sbb
imul
jbe
icebp
lds
std
xor
stos
pop
push
in
fs
sub
fstps
aaa
cmpsb
ja
mov
xchg
mov
add
xchg
sbb
movsb
lods
push
xchg
pop
test
xor
jge
daa
mov
xor
cltd
mov
sarb
dec
sub
jecxz
sbb
push
repnz
in
out
cmp
xor
push
rcll
arpl
inc
sti
decl
sub
mov
add
mov
add
sbb
push
mov
mov
jmp
test
xor
push
mov
mov
and
out
xchg
push
push
jl
mov
mov
psubusw
sub
inc
incl
je
shl
xor
jp
push
adc
lds
dec
mov
or
fnstenv
hlt
and
in
nop
fs
sub
mov
fs
or
lret
and
push
sub
clc
sub
mov
sbb
xchg
inc
adc
cmpsl
inc
cld
pop
add
inc
add
inc
addb
clc
mov
loop
or
xchg
decb
mov
mov
das
mov
cli
jecxz
push
test
pusha
jecxz
out
push
push
push
adc
cwtl
outsl
loopne
mov
ja
cmp
aad
sbb
nop
leave
loopne
repz
insb
cmpsl
push
dec
cli
add
cld
enter
enter
sti
fs
sub
xor
iret
int3
or
jmp
xchg
add
sbb
add
cwtl
popf
ss
fisubrl
push
into
sub
xor
mov
or
arpl
stos
or
sub
xor
or
cmpsb
lret
add
dec
fwait
add
inc
das
in
mov
loope
incb
cli
mov
pop
iret
dec
and
or
jge
mov
mov
and
ss
lock
cmp
mov
ljmp
or
lret
mov
mov
mov
cmpsl
add
out
sub
mov
mov
insb
lret
sub
jnp
pop
or
xchg
dec
mov
nop
xchg
mov
cld
add
xchg
jp
bound
jns
aad
loope
sbb
stc
adcl
sbb
scas
jmp
mov
test
jmp
push
add
xchg
push
stc
je
inc
test
js
sbb
je
jne
adc
leave
shlb
pop
insb
movsb
dec
push
mov
lret
mov
mov
add
testb
cmp
jl
icebp
fsubl
mov
psubb
sbb
dec
pop
xor
icebp
aas
test
mov
sbb
ja
jne
pop
pop
xor
jecxz
js
rcrl
movsb
repnz
sub
dec
sbb
lea
into
movsb
scas
inc
arpl
fldl
loop
sub
add
jg
push
ret
mov
lods
push
push
jb
sub
mov
push
mov
push
pusha
sti
push
dec
and
add
jmp
clc
xor
mov
pop
aas
cmp
sti
shrb
dec
sbb
jne
cltd
ss
pop
aam
lods
stos
notl
cmp
lods
movsb
and
xchg
das
pop
insl
inc
clc
scas
push
inc
mov
into
cwtl
xor
fidivrl
ret
jecxz
and
push
lret
pop
call
outsb
ljmp
decb
and
jne
scas
lods
cld
sar
ja
ret
xchg
pushf
loopne
aad
cld
insl
mull
jge
ficomps
hlt
lcall
jle
and
movsb
imul
mov
hlt
fucomi
add
sbb
rcll
popa
xor
xchg
rolb
fdivrl
mov
pop
dec
jmp
adc
adc
out
add
push
sub
pop
and
jl
sub
and
test
sbb
call
test
ds
jno
or
das
cli
sub
push
loop
or
mov
pop
outsb
push
jecxz
sbb
xlat
push
xchg
xchg
loopne
sub
push
test
scas
mov
aaa
adc
mov
or
mov
jo
jg
mov
into
fldl
mov
hlt
inc
cli
push
clc
sbbb
dec
ficompl
xor
cmc
enter
mov
sub
inc
push
frstor
and
inc
mov
jle
cmp
sbb
fdivrs
cmp
sbb
pushf
add
nop
incb
sar
mov
test
jbe
test
pushf
dec
cmp
sub
xlat
jmp
mov
outsl
hlt
out
dec
jecxz
mov
mov
lcall
insb
stos
hlt
dec
inc
pop
jo
and
mov
push
push
and
add
ss
and
inc
mov
mov
adc
sbb
or
jp
lcall
push
sar
popf
cmc
pop
push
repz
mov
inc
push
push
add
pop
add
inc
xorb
dec
outsb
sbb
scas
clc
dec
js
fs
clc
std
lahf
scas
stos
add
xor
mov
mov
jno
sbb
hlt
adc
fdivr
cmp
pop
ret
gs
ja
insl
pop
lock
insl
test
int3
mov
sub
push
cli
jg
out
mov
pop
cwtl
aam
mov
call
fildl
insb
stos
cmc
push
sahf
bound
mov
fiaddl
test
and
mov
cmp
js
xor
adc
repnz
mov
add
mov
lcall
push
cmp
xchg
rolb
icebp
xchg
das
clc
aad
xchg
scas
jb
lea
pop
add
mov
and
push
or
fidivrl
stos
repz
mov
fistpl
loope
sbb
and
das
lods
cmp
sbb
push
aas
imul
mov
mov
rcrl
loope
jl
mov
scas
adc
inc
test
sub
stos
aas
pop
ljmp
mov
mov
sbb
push
shl
cmc
scas
or
xor
ret
test
sti
xchg
add
cli
roll
mov
scas
mov
jle
clc
aam
fstpl
or
mov
mov
mov
add
fisttpl
dec
mov
test
mov
rcrb
pop
mov
or
scas
je
mov
fcomi
inc
out
and
incl
ljmp
mov
add
dec
mov
orb
xor
andl
aad
ljmp
test
imul
ja
outsl
cli
inc
dec
inc
stos
test
sub
clc
adc
mov
push
jge
and
mov
popa
decl
daa
outsb
stos
test
imul
enter
hlt
pop
add
or
ljmp
sahf
push
das
dec
ljmp
sbbb
mov
push
inc
adc
push
popf
or
aad
pop
sbb
pop
sbb
jmp
mov
jp
aad
setp
shlb
mov
push
sarb
add
clc
in
loop
mov
jns
imul
les
and
jg
push
cmp
repz
inc
lods
or
sbb
add
dec
imul
aad
dec
xchg
push
fisubrs
pop
pop
add
iret
int
mov
adc
sbb
mov
lcall
sub
jle
js
shlb
mov
cli
push
push
adc
and
mov
loope
mov
cs
fildl
aad
jle
cmp
inc
adc
jle
jl,pn
mov
insl
clc
scas
imul
sbb
icebp
or
cmp
jb
jg
mov
jmp
sbb
or
dec
fists
jmp
add
stos
pop
mov
lods
clc
aad
movsl
adc
mov
icebp
mov
mov
adc
sahf
cmpsl
insl
cmp
cmp
fisubl
outsl
push
lock
hlt
mov
mov
mov
clc
xor
inc
or
xor
push
inc
mov
push
movsb
movb
fistpll
mov
pusha
sti
loop
adc
or
test
add
cmp
ret
std
push
pop
add
jp
icebp
das
clc
outsl
stos
addr16
ret
fs
imul
outsb
leave
jle
out
ja
sarl
push
out
fiaddl
push
or
mov
ds
pop
or
and
js
push
add
das
mov
cmc
mov
fiaddl
bound
lahf
mov
idivb
pushf
negl
cmp
xchg
fdivr
fdivl
jne
je
in
dec
pushf
and
cs
mov
push
and
fisttps
mov
out
pop
add
lahf
cli
fldt
inc
jns
ds
jle
jl
cmpsl
mov
add
dec
lahf
push
mov
jmp
lcall
lock
adc
int3
dec
adcb
sbb
push
in
push
clc
pop
inc
mov
mov
pop
cwtl
in
sub
lcall
add
cs
inc
xchg
in
loop
sahf
nop
mov
mov
push
jnp
push
cli
test
rolb
pop
scas
cmpsl
aad
jecxz
cli
clc
add
shrl
cmc
push
shrb
jo
stos
jle
pop
packsswb
cmp
mov
loopne
mov
jecxz
cld
cmp
inc
mov
js
test
cli
enter
xchg
mov
dec
lock
xchg
push
sub
dec
or
sarb
push
les
inc
adc
mov
add
mov
jo
lds
adc
mov
icebp
and
sbb
push
jle
frstor
and
loop
in
xor
jo
add
jbe
adc
push
add
cmp
mov
push
fnsave
pop
inc
popa
push
pop
cwtl
sub
mov
data16
pop
testb
pop
mov
stc
dec
xor
bound
addr16
lret
rclb
or
fiadds
or
pusha
xor
ret
xchg
call
dec
pop
outsl
mov
sub
xchg
rclb
push
cmpb
fildl
iret
mov
clc
insl
ljmp
imul
sub
cmpsb
mov
mov
orl
push
xor
add
mov
clc
mov
jl
cmp
push
leave
scas
fwait
jmp
sub
leave
pop
mov
adc
jg
inc
dec
fimuls
xor
lods
add
addb
pop
dec
mov
adc
mov
sbb
sub
daa
pop
add
and
cli
bound
imul
sbb
es
push
out
ds
push
inc
fnstenv
lea
mov
shr
cmp
loopne
das
add
sub
ds
mov
sbb
mov
sub
push
xchg
mov
jg
inc
movsl
pop
repnz
sub
push
xor
sub
jno
or
inc
mov
add
rcrl
loop
rcrb
orl
imul
rcrl
imul
stc
lcall
jg
je
pop
pop
add
jne
sbb
and
or
nop
cmp
mov
xchg
hlt
fisttpll
sbb
sbb
arpl
adc
mov
les
mov
sub
mov
cmp
jns
in
xchg
lods
fsubl
or
incl
adc
push
daa
imul
push
int3
stos
dec
movsl
pusha
cmp
ljmp
dec
mov
pop
mov
dec
mov
add
add
aad
popa
jecxz
ret
in
aaa
or
pop
dec
push
xlat
xor
std
lahf
sbb
pop
push
pop
leave
pop
shrl
sub
add
push
loop
fidivrs
lcall
cs
lret
outsl
mov
shrl
push
fs
mov
imul
or
push
mov
xor
fldcw
pushf
std
mov
jo
jmp
jge
pop
hlt
cmp
das
xor
add
add
fcoml
stos
xchg
pop
push
call
and
jnp
inc
push
stos
or
aam
xlat
mov
cmp
sub
cmp
sub
xchg
loop
cmp
xchg
shlb
ja
shrb
lret
dec
mov
test
fwait
es
xchg
pop
pushf
xor
or
adc
repz
lock
dec
xor
movsl
pop
mov
add
mov
mov
outsl
sbb
pop
in
push
pop
and
xchg
scas
bound
push
decl
inc
jnp
bound
dec
add
mov
test
mov
mov
mov
mov
lahf
imul
out
lret
or
mov
ja
ja
inc
inc
pop
cs
incl
sub
mov
ss
shlb
call
cmp
or
pushf
jbe,pt
loop
in
pop
inc
push
adc
sbb
add
shll
cmp
xor
out
mov
loope
faddl
push
gs
or
insl
pop
dec
xor
pop
cwtl
push
mov
mov
dec
add
incl
lock
ja
lods
pop
hlt
cwtl
mov
mov
xor
push
movsl
outsl
xorb
jbe
mov
mov
sub
jmp
mov
hlt
lock
and
lcall
xlat
mov
mov
outsb
add
jb
inc
push
xchg
nop
mov
das
mov
insb
in
cmp
sub
sub
dec
loop
pop
and
jno
insl
jae
cmp
and
ret
push
push
jns
shrb
mov
mov
pushf
sub
hlt
mov
orb
inc
jae
mov
dec
adc
fcmovnu
cli
mov
in
dec
movsl
or
mov
inc
ret
fildll
test
bound
fisubrs
adc
add
mulb
dec
cltd
fwait
cmpsl
jnp
iret
aam
mov
in
ret
push
fcoml
jmp
mov
loope
out
pop
sarb
sub
test
movsl
mov
adc
push
ljmp
mov
or
aaa
pushf
sarb
decl
pop
sbb
mov
mull
pop
js
mov
pop
mov
loop
movsb
add
xchg
pop
jbe
pop
mov
jmp
ss
incl
inc
xchg
inc
jle
and
mov
push
scas
jle
pop
call
jmp
cmpsb
xchg
pop
mov
mov
or
dec
cmp
movsb
sub
mov
jg
aam
push
fstps
pop
pop
enter
cli
jns
shll
and
dec
lods
outsb
adc
ret
aad
das
mov
mov
leave
icebp
invd
inc
mov
shrl
shl
das
aam
sub
in
jg
les
or
mov
mov
adc
out
aam
js
sub
mov
sbb
or
rorb
cwtl
movsb
inc
pusha
xchg
or
jbe
cmp
push
dec
int
outsb
jge
sub
or
stc
popa
lock
stos
movsl
mov
pop
mov
ja
pop
push
pop
inc
test
jb
insb
push
lea
pop
sbb
or
mov
decl
jmp
divl
shr
bound
fisubl
aad
adc
pop
pop
incl
imul
adc
je
xchg
andb
inc
aam
aad
ret
shlb
lcall
shlb
out
dec
stos
pop
dec
in
sbb
pop
pop
inc
push
cld
mov
pop
imull
out
bound
mov
pusha
sub
jg
cli
ljmp
mov
jno
pop
mov
add
xchg
das
leave
outsb
std
mov
push
pop
mov
sub
mov
mov
xchg
leave
ret
pop
jno
js
xchg
movsl
mov
mov
pop
or
fwait
mov
cmp
aam
ja
or
mov
jp
cmpsl
je
and
sub
adc
pop
shll
sbb
xor
pop
mov
or
shr
mov
or
mov
fimull
subl
test
out
andb
mov
pop
mov
test
xchg
mov
pushf
pop
mov
std
idivl
dec
fdivrs
out
jmp
add
pop
in
sub
shl
cs
inc
pop
cltd
push
scas
loopne
or
pop
mov
insb
aam
inc
loop
sub
jmp
clc
or
mov
or
mov
in
stos
xor
sbbb
dec
jp
jo
outsb
push
pop
pusha
xchg
push
and
std
add
inc
add
popa
pop
aas
ficomps
mov
adc
jl
xchg
testl
mov
icebp
pop
lret
jp,pn
dec
pop
scas
js
gs
push
into
sbb
push
cwtl
lret
lods
sarl
enter
ljmp
mov
mov
out
jp
stos
nop
decl
fucomip
rolb
xor
fisubl
push
rolb
push
outsl
loop
mov
or
scas
mov
xchg
xchg
pop
mov
notb
lods
add
dec
xchg
je
sbb
inc
filds
scas
call
mov
cmc
outsl
into
shll
sbb
int3
mov
repz
jl
test
push
push
lret
fimull
inc
bound
outsl
ss
enter
in
je
push
clc
add
pop
or
scas
insb
pop
jmp
lock
sbb
add
mov
je
hlt
sbb
add
ljmp
scas
xchg
xor
scas
insb
push
inc
inc
ret
call
inc
ljmp
gs
js
mov
std
xchg
aad
lea
mov
add
pushf
pop
mov
cs
loopne
jge
insl
outsb
scas
sbb
push
sub
pop
in
mov
cs
rcrl
sub
mov
xchg
setp
addr16
je
xchg
testb
push
lret
add
insb
loop
or
sar
sbb
fists
xchg
mov
dec
jle
or
mov
xchg
stos
rcll
test
fdivs
aaa
cmp
mov
jb
sbb
nop
xchg
lcall
and
push
je
int3
jle
pop
outsl
jae
push
mov
clc
int
push
inc
jecxz
pop
lcall
popf
movsb
or
inc
xor
mov
mov
lcall
shlb
xchg
movsb
and
jmp
dec
in
jno
out
movsl
mov
decb
out
ljmp
push
or
sbb
out
cs
les
jp
sub
cmpsl
in
sbb
call
cli
lcall
jle
call
aam
fucom
mov
mov
pop
or
xchg
aad
lea
and
clc
cmpsb
fistpl
out
push
dec
cwtl
or
push
push
jg
jne
imul
ret
bound
jp
jns
flds
orb
mov
dec
leave
cmp
stc
mov
out
inc
fnsave
subl
adc
cmpsb
into
add
incl
inc
mov
test
sbb
pop
out
xor
cmc
negb
dec
fldt
lds
sub
dec
push
call
jne
out
shll
inc
aam
sbb
pop
pop
into
ljmp
pushf
mov
sbb
inc
mov
mov
pop
repz
cli
inc
ja
push
sarb
add
movsl
test
test
jb
mov
stos
jno
mov
mov
and
loopne
cld
je
push
inc
incl
movsl
je
movb
jg
inc
push
out
push
add
das
jbe
int3
mov
sbb
loop
xorb
jmp
hlt
mov
push
ret
xchg
dec
or
jnp
pop
repz
pop
fcomip
push
mov
mov
seta
push
repnz
sti
fwait
mov
xlat
icebp
pop
inc
lods
mov
mov
ds
into
hlt
jo
jmp
ljmp
lret
inc
fs
xorb
mov
fs
mov
std
cmp
push
jmp
sub
sub
insb
add
or
test
hlt
push
into
xchg
fildll
hlt
dec
adc
mov
xchg
dec
inc
je
mov
ds
sbb
jecxz
mov
aas
mov
mov
mov
jl
add
xor
int3
lea
mov
or
ljmp
decb
fisubs
and
add
and
jg
add
sbb
test
ret
cmp
lahf
and
clc
jp
mov
push
fdivl
mov
ljmp
leave
stc
fst
pop
adc
pop
gs
sbb
out
or
push
mov
and
add
push
jp
push
pop
jecxz
ss
mov
in
rolb
out
in
dec
incl
mov
jg
mov
orb
add
mov
xchg
js
add
xlat
decl
push
sub
pop
lods
cmp
add
pop
push
add
push
insl
repnz
push
push
jae
mov
mov
push
pop
mov
add
dec
cld
pushl
std
sbb
insl
das
insb
jle
and
addr16
fdiv
dec
pop
mov
and
clc
jge
aas
inc
adc
mov
lret
lock
add
adc
xchg
sub
pop
jle
mov
inc
rcrb
es
and
aaa
cld
decl
pop
dec
les
mov
outsl
cmp
pop
cwtl
add
add
inc
ret
adc
push
jnp
into
push
dec
mov
rorb
adc
mov
xchg
inc
xchg
test
cld
mov
pop
lret
loop
pop
or
ljmp
push
jne
int3
daa
add
stos
and
roll
repnz
pop
sbb
loope
mov
stos
lock
std
mov
push
mov
inc
and
mov
pusha
push
jg
and
cmp
loop
pop
jp
addr16
bound
mov
jp
add
xchg
adc
adc
js
pop
add
incl
pop
stos
cmp
idivb
lret
mov
dec
test
out
out
dec
jno
into
fbld
lcall
jle
or
clc
jp
daa
or
jo
es
cs
mov
add
addr16
cld
das
int
scas
xor
sub
scas
mov
int3
sbb
test
push
adc
neg
inc
lock
out
data16
add
je
imul
push
mov
decl
mov
jmp
stc
ret
push
ficoml
rorl
sub
cli
ret
popl
pop
add
push
dec
cwtl
mov
sbb
rclb
cmp
mov
or
push
lcall
sbb
inc
jl
push
sub
mov
out
push
ret
repz
and
push
repz
mov
pop
jmp
jp
shl
bound
pop
mov
inc
nop
jl
pop
dec
clc
mov
ds
push
mov
test
js
mov
cmp
xchg
inc
mov
mov
fisttps
loopne
mov
imul
mov
prefetchw
mov
mov
stos
inc
outsb
sbb
pop
xor
or
enter
aam
fadds
push
jno
mov
js
jle
add
jbe
mov
bound
sahf
fnstcw
aas
lret
roll
js
test
lods
lods
lods
sub
xchg
nop
push
cs
xchg
sbbb
push
mov
jno
fnsave
xchg
pop
cmp
push
xlat
hlt
pop
fistps
mov
shrl
xor
add
jg
pop
mov
pop
nop
js
orb
xor
inc
push
sbb
test
iret
push
add
mov
mov
cltd
sbb
stos
test
fadd
or
cld
pop
cli
in
addb
pushf
addr16
fwait
popa
cld
cs
aas
jl
aad
and
mov
push
sbb
jge
xchg
int
cmp
in
loop
dec
cld
jmp
fwait
or
jle
scas
into
iret
dec
push
mov
pop
xchg
mov
ljmp
xor
xchg
mov
enter
inc
leave
mov
lret
sar
pop
pop
iret
cwtl
dec
outsl
test
push
insl
andb
aas
and
add
add
scas
call
push
hlt
push
rcr
aas
mov
inc
inc
lea
inc
lcall
fldcw
lret
jb
sar
cmp
lea
incb
repnz
mov
popf
aad
fs
xlat
jg
and
movsl
enter
shll
sbbb
and
cwtl
aad
sub
pop
in
data16
push
stc
ret
cmpsb
ljmp
test
cmp
call
iret
xchg
mov
subl
mov
mov
xorb
inc
je
pusha
xchg
jle
mov
mov
dec
insl
jns
mov
mov
mov
gs
jg
dec
jl
pop
fdivrs
mov
pop
test
xchg
hlt
pop
push
sti
jne
sahf
jae
lock
dec
cmp
mov
loopne
sub
shlb
or
cmp
jno
ss
incb
mov
inc
hlt
and
repnz
lods
adc
mov
jno
test
sti
pop
push
xchg
ret
pop
or
bound
and
pop
mov
push
sbb
dec
jbe
lods
pop
sbb
push
pop
push
sar
pushf
jle
roll
mov
jle,pn
dec
jp
xlat
sbb
push
in
loop
aaa
mov
sbb
hlt
ljmp
lcall
adc
jecxz
pop
mov
popf
aas
test
dec
push
mov
jg
in
xor
mov
clc
cld
xor
shll
aaa
push
inc
pop
imul
ljmp
inc
scas
mov
es
or
bound
mov
jg
lds
enter
push
mov
lock
xchg
mov
incl
clc
clc
popa
sub
adc
push
incl
sub
loope
and
sub
fcomip
push
pushl
dec
hlt
cmpsb
jo
inc
int3
hlt
cmp
loop
loop
cmp
xchg
pop
push
push
hlt
faddl
jmp
ret
outsb
fadds
cltd
push
mov
mov
lock
jmp
cli
cmpsb
fwait
sub
mov
xchg
lcall
dec
mov
movsl
lock
mov
loope
or
mov
jle
mov
popf
sub
std
jmp
dec
sub
cmpsb
aad
sbb
cld
aam
daa
in
add
inc
adc
movsl
inc
ror
inc
decb
cs
cli
and
das
sub
push
nop
and
lcall
fcomps
dec
scas
inc
sbb
rcrb
inc
enter
scas
loope
pop
mov
pop
dec
mov
cmpsb
cmc
mov
mov
dec
js
fs
and
lcall
pushf
mov
or
mov
mov
icebp
push
stos
loope
pushl
push
aad
pop
inc
cmp
dec
push
pop
stc
inc
cs
aaa
dec
cli
lcall
and
outsb
sub
movsl
inc
xlat
add
loop
pushl
sar
and
sbb
pusha
push
in
mov
mov
mov
mov
cmp
inc
or
cltd
inc
shll
mov
sarb
mov
sub
sbb
pop
ret
xchg
dec
dec
add
push
aam
or
fidivl
outsb
int3
fdivl
mov
mov
sub
jno
mov
inc
sar
rcl
pop
dec
push
or
xlat
add
dec
mulb
insb
pop
jl
mov
sub
lahf
into
jmp
loop
jo
mov
sbb
mov
xchg
pop
in
into
pop
adc
rclb
dec
popa
call
movsl
push
jg
cmc
dec
les
std
inc
pop
jbe
pop
test
std
aas
adc
ja
gs
dec
les
std
aam
fsubs
ja
and
nop
inc
pop
cli
dec
xchg
mov
data16
addr16
pusha
jnp
hlt
fisttps
push
jg
test
push
fnstsw
push
ljmp
aam
mov
shl
loope
xor
mov
add
loop
repz
cmp
push
pop
lock
or
mov
cmpsb
push
pop
ds
adc
scas
xchg
cmpsb
pop
and
cld
out
mov
test
pop
cli
mov
stc
push
adc
imul
lea
inc
fdivrs
or
lea
in
pop
scas
sar
mov
fmul
lds
out
cmp
dec
dec
ret
mov
inc
je
mov
fidivrs
fists
jnp
aas
je
test
lcall
adc
stos
bound
jbe
subl
outsl
pushl
pop
mov
xchg
lds
xor
sub
adc
inc
mov
xchg
ds
cld
adc
aaa
call
inc
fldl
mov
nop
jmp
popf
push
fsin
mov
xchg
clc
sub
sbb
push
adc
mov
push
mov
dec
add
scas
jg
addr16
pop
fnsave
jp
mov
mov
or
inc
hlt
xor
mov
out
cmp
jmp
mov
mov
addb
mov
repnz
pop
or
xchg
inc
jp
popa
adc
les
jle
fisubs
lret
dec
mov
mov
out
imulb
add
or
rol
push
mov
mov
aaa
mov
sbb
or
ret
movsb
test
lcall
out
outsb
ljmp
cli
cmp
pop
mov
cmp
mov
negl
ds
jns
push
push
pop
sbb
in
daa
cmp
repnz
mov
data16
mov
pop
or
add
mov
and
int3
insb
or
arpl
scas
out
lret
aam
sbb
and
pop
pop
inc
loopne
shl
enter
mov
mov
push
rclb
or
outsb
ret
loop
pop
mov
push
fnstcw
inc
and
ljmp
or
mov
leave
cmp
repnz
pop
jb
jg
dec
testl
or
mov
stos
test
mov
jecxz
mov
add
fidivl
test
faddl
or
into
pop
xchg
decl
push
stos
std
fisttpl
mov
push
jmp
call
and
fs
mov
pop
cld
out
pop
je
inc
addb
clc
or
gs
sbb
mov
call
mov
shlb
fcoms
lods
imul
ja
loopne
daa
xor
bound
imul
repz
dec
enter
sbb
clc
rcl
push
adc
jne
call
or
aas
and
pop
push
cwtl
mov
ss
jp
mov
loopne
rorb
pop
jge
xchg
adcb
lret
dec
ja
fisttps
and
push
and
push
push
or
inc
pop
add
push
dec
aad
ljmp
sbb
lcall
jnp
insb
decl
add
and
sbb
inc
jp
jno
inc
mov
sbb
mov
sub
sarl
xchg
outsl
je
cmp
cld
cmp
cwtl
cmp
std
jo
pop
cmp
sbb
in
std
or
dec
dec
pop
insb
ljmp
pop
cli
ss
jl
cmpsb
es
mov
icebp
inc
cmp
ror
imul
insl
fimuls
mov
lret
inc
push
mov
mov
cmp
mov
adc
pop
stos
lds
mov
dec
pusha
and
pop
xchg
mov
inc
pop
jbe
stos
neg
jp
xor
cmc
iret
mov
mov
inc
mov
je
fcomip
lar
insb
aad
mov
pusha
sbb
mov
call
cmp
inc
mov
dec
shlb
dec
aad
xor
mov
outsb
jle
inc
xchg
fbld
jg
pop
jecxz
jmp
mov
enter
mov
repz
xchg
je
pop
inc
rorl
out
mov
popa
pop
mov
jp
cmp
adc
fdivl
push
pop
dec
incl
or
repnz
cmp
std
mov
pop
cmpsl
sub
dec
add
jb
mov
inc
clc
mov
push
clc
jb
add
xor
fisubl
push
ret
add
mov
leave
jo
xchg
jns
adc
xchg
cwtl
pop
sub
test
cli
xor
sbb
add
ret
insb
mov
sub
pop
lock
idivb
inc
cld
es
test
add
cmp
jo
repnz
mov
imul
and
stc
pop
data16
adc
insl
mov
shrb
lds
mov
mov
pop
aam
lcall
jl
jg
cltd
js
add
sub
loop
stos
or
lcall
mov
cli
test
clc
adc
aas
cmc
scas
lcall
repnz
jo
test
adc
jg
add
mov
cmpl
mov
inc
xchg
loope
mov
sbb
or
sub
adc
cmc
mov
push
incl
sbb
cmp
pusha
ja
movsb
fwait
incb
push
out
repz
sbb
push
jmp
jle
and
mov
push
xor
mov
cmp
in
movsb
hlt
lret
push
mov
mov
add
jg
stc
test
xchg
jl
out
xor
ret
fstpl
ds
pop
mov
push
adc
or
and
pop
jl
scas
cli
inc
jae
mov
sbb
add
scas
jo
lcall
mov
js
sub
std
push
jg
cmp
cmpsb
mov
pop
ds
icebp
mov
test
adc
stos
push
sbb
int
xchg
xor
xchg
push
xchg
test
mov
push
and
jp
xor
gs
dec
add
ret
adc
jne
outsl
js
xorb
pop
jecxz
fidivrl
inc
mov
orb
scas
push
cs
icebp
cmp
ja
xlat
push
bound
push
ljmp
je
jmp
ficompl
notl
shrl
bound
or
stc
dec
sar
inc
add
movsb
repz
loop
mov
inc
adc
push
inc
stos
pusha
cld
jo
outsb
cmp
add
jb
jb
mov
mov
popf
xchg
xchg
push
call
push
sub
sti
adc
pop
popf
fstps
adcb
jg
hlt
mov
and
mov
sbb
in
mov
jecxz
push
fcmovb
add
addr16
cli
push
push
ds
cmp
mov
mov
pusha
enter
or
xchg
push
pop
pushl
mov
jp
mov
pop
lods
jns
mov
fmuls
push
jge
popa
or
in
lock
cmpsb
adc
clc
decl
pop
sbb
mov
lahf
aaa
popf
adc
int
arpl
stos
imul
push
xchg
popl
adc
imulb
je
std
call
bound
push
pop
mov
push
dec
sbb
xchg
add
in
imul
out
cs
add
mov
nop
shrb
sub
mov
jl
bsf
dec
xor
inc
aam
ret
subb
and
movsb
hlt
pushl
in
outsl
inc
mov
jb
in
dec
xorb
cmp
and
mov
ret
orb
inc
loopne
int3
rcrl
mov
mov
jbe
fs
mov
cmpsl
inc
mov
in
movsl
mov
loopne
push
call
out
or
xchg
test
sbb
daa
shl
fdivrl
test
in
test
mov
or
pop
call
mov
push
int3
cmpsb
out
mov
pop
ljmp
popa
push
add
or
lcall
shrb
js
cmp
dec
lock
add
push
mov
push
dec
gs
ret
add
and
push
and
ret
stos
decb
push
mov
mov
icebp
push
pusha
pop
in
mov
movsl
mov
int3
push
mov
cmp
mov
loopne
aad
inc
in
in
leave
add
and
fstl
push
pushf
push
sbb
fwait
push
aaa
es
jns
stos
ret
mov
mov
outsl
clc
mov
add
lcall
mov
jb
addr16
sbb
popa
std
in
xor
jno
xchg
adc
aam
xchg
dec
cltd
dec
mov
mov
jmp
fsubl
mov
fdivrp
jbe
jmp
arpl
addl
push
xchg
out
fimull
jb
filds
int3
daa
pop
or
inc
fs
pop
stos
faddl
jecxz
std
xchg
sbb
cmc
aad
pop
mov
scas
mov
cltd
or
push
dec
jl
sbb
add
or
pushf
dec
decl
lock
jp
or
iret
adc
subb
push
popa
jbe
sar
aaa
mov
sbb
ret
fdivrl
mov
xchg
lds
pushf
jge
cmc
sbb
aaa
ja
xor
pop
push
pop
icebp
or
stos
push
cld
sbb
xchg
adc
sbb
in
jmp
test
sbb
shrl
xchg
pop
ljmp
mov
jle
pop
jo
movsl
imul
mov
xor
mov
push
repnz
mov
cld
push
sti
repnz
or
push
fadd
add
pop
mov
sbb
dec
push
mov
sbb
cltd
sub
stos
in
adc
loopne
pusha
clc
jmp
dec
adc
jmp
scas
pop
pop
daa
push
incl
lea
pop
data16
ficomps
xchg
jns
gs
ret
xchg
pop
jb
or
decl
sbb
daa
mov
and
out
sbb
mov
xchg
sbb
pop
pop
jo
or
adc
mov
lock
lock
push
and
fst
stos
xor
movsl
xor
jns
shlb
pop
hlt
ljmp
push
xlat
dec
jb
jl
fcoms
sti
push
repz
sub
jno
or
std
jmp
xchg
clc
sbb
push
push
hlt
mov
hlt
mov
adc
jbe
push
sub
jecxz
xor
int3
jae
add
fnsave
mov
test
push
cmpsb
das
stos
adc
movsl
ds
jnp
fsubrs
nop
icebp
add
add
js
lret
dec
inc
inc
cltd
adc
sbb
push
pushf
pop
aas
clc
xor
fstp
leave
outsl
push
add
std
outsl
cli
dec
add
dec
push
stc
or
pop
insl
leave
jl
cltd
mov
pop
sbb
pop
lock
jecxz
mov
les
aad
pop
cmp
int3
ljmp
je
adc
adc
sub
ss
clc
pop
and
aas
sbb
mov
idivl
ds
jbe
scas
lret
jp
pop
mul
and
into
or
lcall
dec
arpl
mov
clc
inc
sub
adcb
pop
js
xchg
rolb
dec
shrl
xor
xor
and
cmp
sbb
dec
xchg
mov
push
pop
cwtl
hlt
mov
push
pop
adc
or
pop
sub
insb
jmp
push
lret
fcomip
aam
sbb
inc
pop
mov
outsb
mov
lods
out
imul
push
test
les
mov
cmp
pop
ljmp
cmp
inc
cli
das
sbb
inc
sbb
mov
mov
addr16
test
enter
xchg
int3
dec
stos
mov
or
out
jmp
add
aaa
inc
outsl
loop
enter
lock
push
and
or
xchg
lea
push
imul
cmp
data16
pop
test
hlt
and
xor
rcl
loop
push
cld
fwait
push
push
pop
mov
shll
jl
ret
scas
lock
mov
add
mov
pop
jo
jnp
jl
ljmp
mov
test
xchg
jo
mov
jo
in
xor
pop
iret
pop
test
addr16
fdiv
das
mov
adc
outsb
fidivs
jae
aam
ret
testb
imulb
xor
fbstp
sub
test
push
std
sbb
xor
pushf
adc
sub
xchg
repnz
mov
aas
or
inc
stc
pop
pop
push
jle
jne
les
pop
add
or
sbb
xor
inc
aad
pop
mov
pop
cmp
fmull
fmulp
imul
andb
sub
xchg
jns
mov
decl
orb
sbb
fcmovb
fdivr
and
sbb
ljmp
or
xor
dec
fxch
fwait
and
loop
cli
xor
jle
inc
stc
push
push
jg
out
adc
dec
in
dec
sbbb
fisttps
lock
in
cmp
pop
flds
aaa
mov
mov
adc
loopne
push
add
mov
imull
addb
in
mov
mov
pushf
inc
insl
ds
js
sub
jecxz
stos
xchg
out
mov
mov
mov
cs
xchg
into
push
dec
ds
vcvtss2sd
or
imul
ss
leave
in
mov
and
adc
loop
movsl
pop
xchg
sub
imulb
aaa
cld
mov
inc
mov
pop
and
xchg
cmpsl
and
out
pop
mov
mov
push
dec
jg
mov
mov
repnz
lock
out
cwtl
xchg
mov
push
pop
stc
and
mov
xchg
sub
popl
outsb
in
shlb
ficoml
movl
mov
push
or
pop
xor
pop
std
fidivl
daa
mov
arpl
das
lods
add
cli
test
or
xor
movsl
pop
pop
and
clc
testb
cs
push
incl
outsl
sbb
loope
push
in
pop
hlt
test
ja
xchg
cmpsb
mov
mov
mov
adcb
out
push
add
pop
popf
pushf
pop
jp
dec
arpl
jl
pop
fisttps
loop
adc
inc
outsl
fiaddl
dec
inc
in
addl
dec
xchg
jae
call
in
xchg
mov
pop
cmpsb
inc
cs
in
push
xchg
jg
fs
nop
dec
pop
jmp
hlt
decl
nop
test
pop
filds
xchg
cltd
mov
ljmp
inc
out
mov
je
mov
repnz
push
test
repz
push
lds
je
push
and
sar
add
out
cmpb
rep
jno
and
jg
flds
std
jmp
bound
jno
mov
cld
push
mov
jb
into
xchg
dec
xchg
mov
cmpsl
call
mov
jl
outsl
clc
testl
or
push
xchg
xchg
clc
mov
cmp
stos
dec
sbb
lret
es
movsb
cmp
ss
les
and
fcmove
insb
mov
aas
jle
dec
pop
je
leave
xabort
add
mov
inc
out
out
cmpsb
or
mov
insl
jge
mov
inc
int3
xor
jl
out
hlt
outsb
adc
mov
imul
mov
push
xchg
fdivrl
outsl
dec
ret
pop
sub
add
bound
pop
out
test
dec
add
mov
filds
insb
cmp
and
pop
xchg
lahf
sarb
rcl
lock
scas
push
enter
fs
inc
lods
aaa
sarb
xchg
lcall
and
xchg
adc
mov
cs
mov
das
mov
and
rcl
push
pop
js
push
int3
hlt
aaa
mov
jbe
or
mov
xchg
clc
add
imul
mov
test
jg
js
scas
add
les
jns
fsubs
insb
test
test
ss
or
arpl
dec
pop
test
into
test
loopne
incl
add
out
push
add
sar
data16
sub
lods
cli
fcos
in
pusha
sub
mov
xor
stos
push
addr16
pop
adc
fdiv
ret
movsl
in
pusha
lods
xchg
mov
and
push
inc
scas
dec
cmp
pop
in
xor
cmpsb
xchg
sbb
cltd
clc
test
test
push
mov
gs
pop
les
iret
addl
or
lock
clc
push
and
mov
lea
inc
into
pusha
aaa
mov
xchg
sbbb
mov
sub
and
push
pop
add
sbb
jle
lods
or
dec
enter
push
aas
pop
inc
inc
xor
jp
bound
clc
stos
divl
jecxz
or
xchg
subb
jecxz
loope
jle
movsl
js
scas
cli
outsb
xchg
sbbl
pop
lea
andl
dec
xchg
xchg
outsl
cmp
mov
mov
icebp
or
fwait
push
je
inc
or
jle
pop
sbb
inc
fldcw
sbb
sar
mov
jnp
imul
movsb
fidivs
inc
dec
sub
inc
movsl
loopne
es
loop
jl
mov
push
lcall
fcmovbe
ret
xchg
adcl
inc
adc
outsl
mov
bound
ds
repz
in
or
mov
ja
inc
loope
fcoml
js
pusha
lea
ss
push
cmp
mov
push
popf
pop
out
aaa
jl
test
int
test
xchg
push
add
dec
cmpsb
stc
lock
jg
push
adc
and
lock
nop
sub
sti
out
pop
icebp
das
rorb
cmp
loopne
test
mov
jae
or
in
scas
adc
repz
sub
lcall
mov
adc
in
push
pop
pop
inc
rclb
sbb
hlt
pop
out
and
sbbb
push
mov
xor
hlt
pop
mov
inc
mov
pusha
repnz
sbb
fidivs
nop
and
je
jns
sahf
jl
dec
sbbb
bnd
xor
stos
sahf
popf
es
and
mov
rcll
mov
js
stc
add
inc
push
xor
sbb
test
cmc
ja
sbb
out
les
lahf
call
std
pop
cmc
mov
cmc
imul
mov
or
mov
std
jg
test
inc
sbb
xor
in
mov
das
iret
sub
xlat
scas
push
ret
sub
inc
xlat
fcomip
sub
sub
sbb
mov
or
ja
mov
leave
idivb
cwtl
aad
sbb
addr16
mov
jnp
loop
scas
jp
pushl
lea
rcrb
adc
loope
xchg
xor
sub
and
push
push
out
mov
pop
and
hlt
je
mov
repz
lret
xchg
pop
xor
or
and
sahf
stos
mov
push
mov
jb
das
imul
call
subb
jge
push
loopne
push
cmpsb
sub
pop
jbe
sub
jecxz
sub
outsb
push
jo
adc
or
mov
push
cmp
stos
test
fcmovbe
adcl
inc
imul
fcomps
xlat
sub
mov
outsl
mov
in
xorb
aam
mov
jo
mov
jl
push
sub
jmp
fsubl
lds
add
movsl
and
ss
rcl
inc
adc
rolb
addr16
and
inc
aad
movsb
mov
push
enter
adc
jg
add
jg
insb
push
stos
negl
xor
cld
aaa
cltd
adc
pop
pop
push
pusha
xchg
pop
mov
pushl
int3
outsl
ja
mov
clc
or
xchg
in
insb
pusha
jp
mov
sbb
jae
cli
rolb
push
out
enter
push
pop
hlt
push
pushf
push
jecxz
cmpsl
jge
and
fwait
sub
mov
cmp
data16
sub
dec
mov
or
dec
sti
call
in
orl
dec
or
push
adc
aaa
fs
sbb
mov
call
pop
int
ds
mov
ret
cs
mov
jp
inc
inc
jne
dec
cmp
iret
jno
call
pushl
xor
out
pop
sub
movsl
mov
inc
sar
push
leave
aad
stc
hlt
aad
mov
in
mov
sahf
adc
xchg
add
outsb
test
je
cmp
jl
insl
rorl
mov
mov
imul
bound
or
aam
add
jno
shr
or
das
popa
add
outsb
mov
shlb
ss
inc
mov
inc
scas
mov
mov
cld
dec
inc
adc
lea
mov
hlt
clc
popa
push
adc
mov
ret
mov
mov
push
pusha
add
ret
test
movb
sub
pop
cmp
jae
xchg
push
mov
out
mov
pop
lock
call
sub
outsl
or
mov
cld
outsl
add
mov
jle
add
mov
ret
es
pushl
fs
pop
inc
adc
inc
xchg
ja
lods
test
clc
mov
jg
jge
sarl
push
add
addr16
adc
and
and
fcmovu
ds
jo
pop
sbb
lods
mov
faddl
insl
sub
push
push
sbb
xor
aad
mov
lret
xor
dec
repnz
inc
in
adc
push
arpl
xchg
sbb
hlt
outsl
test
jecxz
out
sbb
or
icebp
pop
cld
xlat
jge
or
sarb
mov
adc
inc
incl
mov
push
insb
mov
icebp
sarb
scas
mul
mov
loope
and
les
std
cmc
xchg
push
loope
scas
mov
ror
dec
xor
repnz
out
cmc
fisttps
shl
push
push
in
cli
fstpl
outsb
js
in
es
lcall
sarb
jne
cmp
jg
pop
mov
and
sub
adc
imul
es
pusha
xchg
sbb
je
jne
out
xor
pop
xchg
mov
adc
xor
xorb
jne
mov
mov
cltd
das
adc
pop
inc
dec
test
and
scas
jmp
adc
mov
stos
lock
repnz
mov
outsl
es
mov
insl
and
push
outsb
or
adc
sahf
cmp
mov
lock
sbb
adc
xor
or
or
sub
movsl
je
pop
fs
push
mov
jg
add
mov
adc
fistl
sub
lea
pop
mov
pop
imul
inc
lret
fiadds
fdiv
fstl
movsb
add
dec
xchg
outsb
lods
and
repnz
and
add
pop
int
push
getsec
jecxz
xchg
les
dec
push
fsubrs
scas
mov
mov
lods
add
sbb
adc
je
mov
xchg
mov
pop
jno
adc
scas
andb
in
mov
push
mov
dec
push
add
sbb
sbb
jb
sbb
xchg
inc
std
cmpsb
lods
cs
dec
pop
iret
lcall
test
xchg
roll
sub
push
pop
lret
push
imul
std
fildll
loopne
out
xchg
pop
xchg
jge
xchg
mov
add
pop
or
jae
and
sub
mov
ret
jo
pop
lds
popa
ss
push
stos
push
add
sub
test
pop
push
scas
lods
stos
push
stos
mov
jp
dec
repz
lock
in
dec
repnz
sub
mov
mov
pop
insb
repnz
cld
outsl
pop
rcl
and
xchg
dec
push
and
cmp
cmp
ja
lods
pop
adc
sbb
je
sub
int3
adcb
insl
dec
loope
push
mov
mov
pop
push
loopne
adc
xchg
rorl
popa
data16
mov
pop
lods
push
sub
jae
cmp
mov
pushl
add
xor
cs
aas
scas
hlt
push
andb
data16
ja
adc
jns
hlt
and
or
iret
jmp
mov
inc
mov
pop
dec
int
out
repz
pop
cmpsb
sahf
mov
das
or
push
ljmp
or
or
cld
shrb
pop
dec
ljmp
jmp
pop
aas
mov
push
out
xor
and
mov
pop
dec
js
adc
adc
mov
jne
addr16
sbb
icebp
mov
imul
mov
sub
push
setle
test
lret
pop
int
decb
fcmovb
mov
adc
inc
lods
fdivrl
popa
sbb
lds
loopne
rorb
push
das
inc
push
pop
cmc
jle
mov
cmpsb
sti
clc
test
or
jl
push
jl
jne
adc
ljmp
or
fcompp
dec
cmc
mov
cltd
mov
xor
adc
hlt
fldt
or
push
int
push
pusha
mov
out
fstl
adc
iret
in
fimull
jge
in
xchg
mov
sbb
into
data16
je
roll
mov
mov
add
mov
mov
adc
push
pop
stc
add
pusha
inc
sbbl
rolb
psubsb
sub
test
ss
dec
pop
inc
sar
out
or
inc
add
jmp
bnd
popa
mov
das
ljmp
lods
movsl
mov
dec
lods
jae
and
and
and
cmp
or
mov
jo
std
mov
and
ljmp
enter
mov
sub
push
fnsave
cmc
shll
push
notb
shrb
pusha
jne
out
sbb
inc
lcall
pushl
ret
push
ljmp
cmp
push
movsl
ljmp
push
movl
sub
and
or
pop
pusha
sbb
shrl
mov
pop
out
loope
fsubrl
cld
sbbl
and
es
mov
lods
std
aaa
dec
xchg
mov
ds
mov
fsubs
jae
mov
push
dec
aas
nop
xlat
inc
jecxz
sbb
subl
stos
adc
mov
fiadds
ljmp
xchg
sbb
shll
dec
outsl
push
mov
cmc
lods
js
into
clc
stc
push
add
sbb
icebp
imul
arpl
jb
xchg
jg
les
call
mov
jo
cltd
jl
clc
adc
xchg
icebp
mov
stos
jg
or
mov
sarl
add
shl
cmp
and
or
cs
mov
pop
mov
cli
jno
leave
je
test
push
jne
and
ljmp
inc
loop
dec
stos
das
sbb
lret
sbb
fildll
mov
xchg
mov
push
push
imul
in
push
adc
sbb
bound
test
xor
arpl
and
jo
repnz
add
push
test
mov
inc
or
mov
cmp
dec
fstl
sbbb
xor
outsb
cmp
jle,pn
sbb
cmpsb
mov
xor
or
stc
sar
pop
jle
mov
xchg
sub
in
pop
add
mov
scas
ficomps
lock
add
adc
jg
mov
and
cmpsl
push
pop
sahf
inc
push
daa
in
rcr
cmpsb
bound
pushl
fs
jno
stos
jg
fsts
inc
sbb
inc
push
stos
mov
sahf
mov
sahf
loopne
aaa
mov
mov
testb
and
fnstenv
aaa
cmp
and
jecxz
sti
push
loopne
in
lret
jne
popa
leave
mov
out
pop
cli
pop
xchg
loopne
xor
mov
cmp
jae
sbb
and
mov
and
pushl
mov
xor
or
je
mov
lcall
js
call
mov
cmp
cwtl
lods
not
add
sub
repnz
mov
dec
add
imul
enter
lock
push
pop
into
lcall
pop
jge
dec
add
cli
ret
mov
call
ljmp
xchg
lock
jne
inc
pop
push
mov
aam
call
sbb
pop
outsb
out
sub
outsb
push
outsb
inc
jno
xchg
ss
cs
cld
push
sbb
xor
or
movsl
xchg
pusha
push
jecxz
mov
gs
das
fcomp
xor
arpl
addl
lcall
lods
push
pop
data16
pop
adc
sbb
les
aam
clc
in
push
aad
iret
push
xchg
add
mov
lahf
mov
pop
lcall
and
in
ja
mov
adc
das
gs
add
mov
out
push
mov
push
jge
nop
test
xorb
cs
std
xchg
scas
adc
mov
gs
sbb
out
inc
lret
loop
xlat
xchg
cwtl
push
xor
inc
ja
fcomip
lret
fdivl
cmpl
out
add
lcall
dec
and
mov
pusha
fcompl
mov
xlat
clc
aad
loope
dec
addr16
fsubrs
adc
in
sbb
adc
pop
ljmp
xor
adc
mov
in
and
fwait
shrb
pusha
xor
push
cmpsb
call
jo
push
fs
lods
pop
fldl
std
sub
inc
loope
mov
mov
cmp
sbb
scas
xchg
push
mov
adc
xchg
aam
pusha
fldenv
fsubl
jmp
xchg
pop
ljmp
cs
xchg
testb
aaa
adc
fs
popf
repz
push
xlat
stos
sarb
or
and
mov
cmp
ret
pop
mov
arpl
nop
icebp
add
or
mov
xchg
jbe
mov
fidivrs
adc
adc
cld
mov
dec
ds
sub
into
stc
xlat
mov
push
jl
pop
xchg
mov
inc
pop
cmp
push
add
es
push
xchg
mov
icebp
incl
movsb
mov
scas
mov
jns
loope
dec
mov
ret
lock
sub
decb
cltd
dec
xchg
pop
das
xlat
mov
and
cmp
std
pop
nop
sbb
stos
xchg
call
dec
loopne
push
pop
push
pop
ja
aaa
movsb
and
pop
sub
int3
je
outsb
jae
adc
test
sar
or
pop
cmpsl
xchg
aas
pop
fiaddl
into
cvtdq2ps
mov
sub
add
std
xchg
pop
pop
bound
sbb
xor
clc
pushl
lcall
mov
je
shrl
mov
mov
mov
in
xlat
outsl
clc
stos
loop
jle
enter
iret
cmp
pop
enter
sbb
std
or
stos
jl
or
popf
ficompl
jg
inc
inc
pop
jecxz
xchg
sbb
inc
push
movsl
jle
nop
test
sbb
aas
mov
movsb
sarl
aas
xor
sub
xor
xchg
mov
lcall
mov
orb
inc
mov
add
inc
mov
jle
loope
adcl
insl
sbb
daa
fiadds
dec
out
lahf
dec
push
repnz
mov
adc
xchg
xorb
loope
sbb
daa
test
inc
pop
out
int3
adc
inc
int
xchg
cs
and
mov
jl
pop
and
and
jbe
aas
and
jge
notl
inc
stos
insb
inc
xchg
test
mov
enter
pusha
lret
jg
dec
fcoml
cld
insl
xor
push
push
sti
push
movb
popf
push
jp
enter
lret
clc
jl
jnp
xor
sti
fwait
push
mov
sub
loop
cmc
add
sub
or
lahf
or
dec
mov
xlat
add
scas
std
fcomip
fistl
lret
inc
cmc
pushl
call
rol
add
mov
mov
cli
push
cli
out
and
jl
xor
fs
xor
call
adc
pushf
adc
mov
loope
xchg
and
cmp
sbb
adc
ljmp
mov
push
jle
sbb
out
scas
mov
cmpsl
pop
dec
pop
lea
xchg
mov
push
jo
outsl
mov
xchg
int
mov
cmp
add
lods
xchg
sarb
add
lock
ljmp
cli
lret
mov
lock
loopne
in
aam
push
inc
insl
ljmp
leavew
sub
inc
or
jns
ljmp
filds
mov
sbb
xchg
lret
push
adc
int
jnp
icebp
and
je
mov
cli
lcall
inc
fld
pop
lahf
pop
cmpsb
faddl
push
push
mov
out
fdivl
or
mov
sub
mov
pop
adc
xor
xor
cmp
decl
imul
inc
jmp
cld
scas
jo
lea
mov
mov
fs
popf
xchg
inc
or
sub
pop
cli
mov
push
jb
inc
mov
jg
idivl
fcmovu
mov
add
sahf
adc
mov
mov
test
out
dec
jno
lahf
xchg
imul
sub
inc
int
pop
jne
jle
int3
or
clc
fistpll
jbe
mov
sbb
push
sbb
inc
adc
decl
jns
or
xor
mov
pop
mov
pop
cmpsl
jge
push
mov
sub
sbb
jge
outsl
jns
jle
rolb
cwtl
pop
xchg
clc
int
js
inc
mov
fs
pop
push
or
out
les
js
xchg
fwait
decb
or
dec
enter
daa
je
push
lret
fists
jb
aam
mov
fldcw
mov
mov
xor
fdivs
push
or
lds
and
jp
decl
das
inc
lea
clc
pop
inc
lds
mov
mov
negb
xchg
lock
cmpsl
mov
pop
xchg
push
loopne
ret
movsb
pop
hlt
xlat
push
pushw
popl
push
imul
clc
mov
shlb
mov
cli
dec
das
sbb
mov
mov
lret
jns
into
mov
sub
lock
cld
jg
adc
fdivp
sbb
cmpsb
push
inc
je
push
xchg
arpl
scas
loop
loopne
pop
xorl
pop
push
dec
jmp
xor
popa
fdivrl
loop
mov
cli
mov
fwait
loopne
pop
mov
scas
fisubl
xchg
icebp
popf
outsl
dec
cld
push
shl
lods
add
mov
lret
dec
sbbb
mov
mov
xor
pop
xor
in
jmp
push
loop
mov
xor
andb
mov
cli
inc
mov
rcll
sub
xchg
mov
jecxz
jl
push
cld
or
clc
cmpsb
pop
add
lods
pop
push
mov
ljmp
ret
imul
inc
iret
mov
cs
stc
sahf
fimuls
and
ja
jle
pusha
clc
adc
call
mov
adc
loopne
imul
mov
jns
mov
mov
rcrb
and
xlat
hlt
out
nop
or
inc
std
add
cmc
lret
aaa
jp
pop
aas
xchg
or
faddl
push
jle
cmp
hlt
cs
mov
test
mov
and
gs
popf
into
add
push
cmp
call
push
inc
cld
cmp
lahf
mov
mov
scas
out
std
xor
js
js
fwait
in
add
inc
sti
add
mov
clc
sub
mov
inc
dec
into
adc
outsl
ljmp
pop
or
push
pushf
leave
sti
jb
xchg
icebp
pop
hlt
and
shl
push
mov
unpcklps
cmp
xor
sbb
decl
dec
mov
or
idiv
cmp
inc
decl
aas
sbb
mov
pushf
out
mov
rorb
jp
and
ret
imul
out
clc
adc
mov
or
push
pop
aaa
test
dec
scas
add
pop
xchg
movsb
fimull
insl
mov
adcl
out
clc
aas
int3
mov
stos
inc
dec
icebp
addb
cld
ficoml
adc
mov
fistl
sbb
out
dec
jo
jl
aaa
dec
fcmovnb
inc
cmp
cltd
sub
and
outsb
push
sbb
inc
test
incl
pop
sbb
or
xchg
cmpb
add
adc
push
xchg
add
push
inc
fbstp
call
daa
dec
add
xchg
mov
in
ljmp
add
fists
ljmp
sarb
out
out
dec
inc
fwait
inc
fwait
mov
mov
fisubrs
xchg
jecxz
das
dec
sub
aaa
int
cmp
add
mov
mov
enter
cli
or
adcb
push
js
xchg
inc
push
sub
mov
push
cld
cld
pop
mov
jge
ds
outsl
das
pop
adc
sub
ljmp
ret
inc
and
push
jge
jbe
stos
adc
sub
sbb
push
jg
cld
lods
cld
add
out
std
or
sbbb
dec
inc
lds
xlat
jbe
call
lds
sar
mov
push
add
loop
lcall
cld
adc
dec
cmc
mov
xchg
sbb
std
xchg
insl
scas
and
and
fdiv
fidivl
call
sub
inc
lret
sbb
add
mov
es
loope
shrl
gs
das
pop
cmpl
enter
stc
dec
jecxz
stos
push
jb
test
pop
aaa
xchg
ficompl
xchg
decl
and
fnstenv
cwtl
dec
jb
xchg
hlt
or
sbb
sbb
dec
pop
stos
movsb
outsb
mov
clc
dec
jb
rcrl
test
ret
sub
lret
hlt
arpl
adcl
xchg
ftst
fisubrl
sub
ficompl
xchg
dec
push
orl
or
scas
dec
jne
loope
xchg
push
mov
cmpsb
and
inc
incl
leave
gs
clc
les
cmp
pop
out
xor
or
and
lods
xor
data16
arpl
mov
sti
in
jg
loop
jmp
lcall
pop
mov
mov
stos
mov
pop
out
pop
in
aam
scas
lock
outsb
mov
rorl
out
add
mov
pop
loopne
sub
push
pop
jns
or
test
pop
mov
sar
pop
ror
arpl
xor
dec
dec
jg
mov
cmpsl
je
jb
push
and
clc
inc
ljmp
sub
cltd
mov
mov
pop
aas
iret
xchg
jno
add
xor
lcall
nop
inc
xor
dec
sbbb
loop
jp
or
movl
or
adc
lret
dec
mov
dec
js
call
aam
push
in
in
stos
add
sbb
mov
mov
inc
shlb
and
call
std
mov
pop
push
lret
sub
mov
shll
sub
mov
hlt
into
push
lds
js
wbinvd
test
xchg
pop
fsubrl
incl
jo
and
jp
push
jnp
xchg
xchg
out
jg
cwtl
push
mov
adc
add
xchg
test
pop
push
jle
insl
dec
pop
jno
cli
adc
jp
outsb
xchg
inc
hlt
stc
xor
push
sub
mov
mov
pop
add
in
jecxz
dec
movsl
pop
cmp
addl
push
clc
lods
ljmp
cmp
inc
repnz
clc
scas
mov
scas
ret
mov
inc
cwtl
cs
pop
sti
out
loope
fildll
sti
xchg
xchg
mov
adc
idiv
sbb
pop
dec
mov
pushf
clc
add
loope
inc
psllq
in
icebp
sub
data16
dec
fldl
cs
xor
aas
lcall
clc
add
push
xchg
pop
add
fisubrs
cli
dec
push
mov
pushf
test
ljmp
cmp
sub
js
pop
add
and
xchg
adc
ljmp
popl
leave
lods
pushf
in
sub
stos
out
dec
pop
jb
decl
or
xchg
sbb
cwtl
pop
mov
pop
mov
inc
std
int3
aas
or
adc
lret
jmp
stos
les
push
jno
sbb
push
jne
loop
cmovo
inc
mov
lods
shll
cmc
mov
rcl
scas
mov
mov
cmp
insb
push
mov
movsl
and
add
incl
mov
sbb
fwait
pushf
shll
sbb
mov
and
std
call
es
and
mov
aaa
cmp
fwait
ljmp
pop
mov
push
add
cwtl
jno
xor
aaa
bts
xchg
ljmp
lds
lret
pop
push
mov
shlb
cld
aaa
inc
pop
cmpsl
pop
push
inc
scas
mov
add
dec
scas
pop
lahf
mov
cld
jmp
filds
repnz
sub
mov
in
lods
jnp
ja
les
or
mov
shr
xchg
push
mov
outsl
test
dec
cmp
xchg
fisttpll
cmp
inc
pushl
ja
shlb
jl
mov
sub
jnp
pop
or
xor
aas
popf
shr
cmpsb
jg
clc
and
lret
das
jle
dec
push
sti
add
mov
data16
shrb
out
sbb
sbb
out
pop
mov
hlt
mov
in
xor
push
sub
inc
add
push
sbb
dec
pop
cmc
imul
into
push
mov
movsb
aaa
fcom
mov
icebp
xor
cwtl
cmp
add
decl
pushf
fadds
nop
xchg
push
push
and
call
fcomip
push
xchg
repnz
aam
add
pusha
clc
aaa
jl
rol
pop
pop
fistpll
pop
sbb
inc
shrb
loope
out
push
shlb
xchg
stos
cmp
mov
arpl
inc
call
fcomps
sub
sbb
repnz
inc
jmp
imul
aad
push
mov
push
push
dec
insb
lret
pop
outsl
adc
push
insb
inc
mov
mov
mov
fisubrs
out
mov
ljmp
lcall
pop
push
jbe
jecxz
into
mov
cwtl
sub
jns
insl
push
imul
sub
push
mov
sbb
sbb
popf
je
xor
int3
xchg
or
rcl
add
and
stos
scas
aam
pop
cld
mov
sti
pop
lods
mov
jno
sbb
cmp
xchg
push
mov
pop
mov
insb
dec
xorb
imulb
lret
loop
pushl
cmc
dec
or
jno
add
or
lds
jp
sub
cmp
xchg
add
lcall
xchg
ret
das
mov
popa
dec
outsl
add
pop
inc
out
out
and
cmp
dec
mov
mov
xlat
imul
xchg
call
or
jp
inc
cwtl
pop
imul
bound
gs
movb
gs
das
fbstp
adc
cmp
orb
mov
mov
cltd
rol
test
inc
cwtl
or
mov
incb
jae
gs
leave
cmp
adcl
fwait
fisubrs
mov
add
jb
ljmp
mov
xchg
mov
mov
xor
ret
js
aam
jecxz
xchg
adc
xlat
out
and
fists
loop
jecxz
repnz
and
jb
cmp
jne
stos
stc
cmp
stos
fcmovu
loopne
test
insb
ret
js
pop
jg
fidivrl
bound
inc
int
outsl
add
mov
in
vcvtsi2sd
xchg
ja
imul
ret
outsl
and
xor
clc
jg
sbbb
fcoml
xchg
decl
js
fdivs
repz
cltd
add
xor
and
mov
mov
fs
rcr
sub
pop
sub
mov
and
mov
hlt
jne
push
pop
inc
int3
cwtl
nop
or
popf
push
pushf
add
mov
push
ljmp
fcoms
and
or
subl
mov
mov
ds
out
cmp
jg
leave
les
imul
xchg
je
data16
adc
push
inc
xor
sbb
lods
subl
mov
push
push
cld
test
add
orl
out
movsb
xchg
dec
pop
cwtl
push
into
sbb
sub
ss
pushl
inc
jmp
pop
pop
and
xchg
push
stos
xchg
push
sbbl
mov
push
std
adc
lock
add
jb
aaa
push
mov
or
movsl
movsb
pop
or
pop
out
mov
mov
pop
clc
decl
ficoms
imul
fadd
dec
incl
outsl
shlb
sub
and
and
sbb
mov
cs
les
ds
cmp
cmpsl
inc
imul
addr16
ljmp
ret
rorl
call
mov
sub
lcall
sbb
xlat
js
stos
das
xchg
xchg
clc
mov
call
xchg
and
sti
sbb
xchg
stc
clc
pop
xlat
fdivrl
inc
or
and
adc
mov
arpl
dec
cmpsl
js
jge
cmpsb
mov
rorl
cs
decl
inc
decb
or
jmp
leave
je
sub
pop
jne
cmc
test
js
loop
nop
fdivrs
movups
pop
incl
jno,pt
inc
loopne
mov
in
call
ret
mov
mov
xchg
jo
cli
add
fwait
loop
mov
in
cmp
mov
popf
sbbb
fwait
sub
add
sbb
aaa
shl
ret
ljmp
mov
stos
subl
inc
push
pop
mov
rolb
cs
fcomip
data16
out
or
aam
add
mov
inc
in
lods
mov
add
or
inc
sahf
test
test
jmp
fimull
cli
add
jge
mov
lock
sbb
bound
sub
pusha
daa
call
mov
fcmovb
push
cmpsb
loop
in
rcrl
adc
pop
xor
das
orb
jg
pop
pop
mov
pop
mov
mov
cld
mov
call
fistl
lret
les
sahf
and
mov
fisubs
stc
inc
or
inc
repnz
inc
out
or
cmp
push
push
lock
sub
sbb
hlt
push
out
dec
pop
add
cmp
popa
cli
mov
mov
es
insl
push
jnp
mov
xchg
pop
jge
pop
jno
test
mov
push
int
sbb
jbe
mov
inc
dec
add
pushl
inc
les
dec
pop
push
and
xchg
inc
and
mov
rclb
jb
cmc
push
add
mov
and
in
pushf
jb
out
loop
sub
lret
lock
cmp
sub
mov
cltd
aaa
and
xchg
cmp
jb
mov
jmp
push
push
mov
out
push
insb
push
or
jp
push
data16
adc
inc
inc
jno
cmc
jl
hlt
call
cwtl
bound
jge
mov
fisttpll
xor
mov
xchg
add
pop
xor
pop
inc
enter
not
fcoms
icebp
sbb
aas
stos
lock
pop
jge
jp
xchg
sti
inc
inc
sbb
mov
push
and
out
dec
fdiv
outsb
cwtl
shr
stos
leave
repnz
cmp
sti
sub
or
pop
push
push
sub
out
mov
hlt
dec
pusha
fistpl
test
jge
sahf
jns
add
pop
jp
in
xor
outsb
pop
sub
adc
outsb
pop
mov
dec
movsl
pop
addb
push
rolb
sarl
adc
jne
test
pop
jl
xor
andb
push
enter
into
rolb
cli
cld
sbb
addb
outsl
js
cmp
stc
in
loop
pop
mov
push
scas
ja
xchg
sbb
sub
dec
cmpsb
js
add
or
jne
loope
iret
jo
push
mov
mov
out
enter
dec
jcxz
and
xchg
inc
sti
and
dec
outsb
add
icebp
xchg
jbe
and
push
lods
xchg
sub
lea
inc
or
add
push
cmpsb
cwtl
jecxz
sar
add
aas
mov
inc
sub
add
popa
cmp
sub
testb
cs
jnp
mov
rcll
jmp
or
lret
repz
je
mov
mov
sub
mov
ficoms
scas
pop
pusha
out
es
ja
mov
mov
iret
lock
jmp
dec
pop
clc
jns
in
mull
out
call
dec
jbe
aad
mov
lcall
mov
hlt
pop
rol
repnz
loopne
dec
sbb
sbb
movsb
arpl
adc
decb
sar
adc
loopne
and
in
repnz
add
daa
mov
int
rclb
orb
dec
push
jl
mov
lods
sbb
neg
sub
mov
mov
bound
push
push
jmp
test
pop
test
cmp
xchg
add
cmp
ljmp
int
mov
jg
xchg
jne
fst
jle
xchg
gs
inc
addr16
decl
jle
rcrl
pop
add
ret
leave
jle
into
mov
xchg
jge
jg
mov
cs
aas
and
mov
sub
xchg
outsb
cmp
rclb
mov
stos
jp
dec
pop
ljmp
dec
add
pop
and
shll
pop
cld
or
sarb
icebp
push
or
ja,pn
push
icebp
jle
pop
mov
fadd
inc
xchg
test
xor
or
popf
stos
push
pop
push
xor
shlb
repnz
imul
outsb
xor
loop
add
mov
lock
xchg
movsl
nop
dec
cmp
stc
int
cs
adc
mov
fsubrs
enter
add
testb
iret
dec
inc
pop
pop
and
cmp
pop
stc
lcall
int3
add
mov
pusha
fisttpll
fs
or
test
or
push
jg
mov
xor
xchg
dec
mov
add
adc
cmp
jge
push
xor
mov
cmc
stos
fldl
jne
add
mov
jne
xchg
lock
mov
jae
nop
adc
lock
hlt
mov
adc
pop
into
iret
mov
push
and
aam
fcompl
push
inc
mov
out
push
aam
xchg
pop
sub
sub
outsl
mov
sub
xor
adc
adc
test
lret
lods
and
xchg
call
shll
pop
shlb
and
aad
sti
sbb
imul
dec
lods
hlt
mov
mov
mov
cld
push
fistpll
insb
pushf
cmp
mov
jg
in
roll
push
pop
or
or
lsl
sbb
dec
js
out
push
cmpb
in
sbb
xor
jns
mov
dec
cmp
add
aam
lds
int
lods
ficomps
push
rorl
jmp
and
in
fisttps
add
out
je
data16
pop
loop
and
aam
ja
lock
scas
cmpsb
push
sub
pop
add
outsl
mov
add
jecxz
pop
sbb
jg
push
add
mov
cs
aad
push
sti
xlat
mov
and
jge
push
add
mov
cmp
ja
sub
loope
jl
dec
imul
add
andb
mov
ds
jmp
push
cmc
or
xor
clc
mov
decl
push
js
imul
push
neg
lock
sbb
add
ficomps
test
int3
in
mov
mov
jl
test
test
into
sbb
ret
xor
dec
and
add
sbb
insb
outsb
call
pop
pop
sbb
ss
pushf
pop
or
insl
out
clc
scas
pop
push
mov
mov
cmp
xchg
add
hlt
repz
movsb
dec
mov
call
iret
mov
cmp
incl
mov
adc
adc
mov
sub
outsl
and
incl
jecxz
test
mov
into
cwtl
iret
and
cmp
xor
pop
outsl
xchg
sbb
sub
scas
jno
mov
fsubrs
and
cmp
sbb
das
cmpsl
int
out
movsb
lock
movsb
cmp
ficompl
lods
fmull
orl
add
push
testl
cwtl
rclb
out
sub
dec
dec
sub
les
repnz
incl
adc
rorb
add
dec
movb
not
add
lea
cmp
cld
or
loope
sar
or
inc
fistpl
pop
xchg
cmp
imul
icebp
mov
loope
push
or
cmp
mov
cli
xchg
xlat
lcall
pusha
rcll
inc
cmp
sbb
ficoms
add
out
sbb
pop
mov
inc
jmp
rorl
test
fldl
loope
aaa
mov
jp,pt
mov
rolb
ja
adc
lock
mov
js
add
xchg
stc
xor
jo
jg
lahf
cld
lahf
adc
dec
loope
jl
cmp
sbb
adc
cmp
inc
mov
lods
mov
jne
pop
nop
arpl
leave
stc
sarl
pop
push
enter
jb
sub
push
fcomip
in
sub
loope
adc
xchg
dec
inc
xor
xchg
mov
cmp
adc
cmp
cmc
pop
sub
add
jns
jae
cmc
ljmp
stos
dec
rorb
push
pop
test
fwait
int
daa
push
enter
orl
in
jnp
inc
mov
cld
mov
sarb
cwtl
mov
icebp
fbld
pop
sub
jnp
shr
xchg
xchg
rorl
mov
pushf
jl
les
nop
inc
jl
mov
and
sbb
sub
add
jg
mov
pop
cmp
orl
push
ss
subl
cli
jle
pop
sub
repz
test
and
int
std
fidivl
xchg
mov
or
outsb
cld
pop
xor
ljmp
sub
and
push
cmp
sarl
mov
jmp
pusha
nop
clc
fsubrs
call
push
jl
dec
fwait
mov
jbe
movsl
incb
dec
lea
dec
sub
dec
rorb
addb
push
lea
mov
mov
sbb
lret
out
faddl
in
add
add
cmpb
das
sbb
shrl
pushf
cmp
or
adc
fs
pop
lcall
in
out
inc
mov
fwait
fs
mov
test
popa
cmp
enter
xlat
push
sbb
xchg
ret
sarb
xor
ficompl
jne
push
jne
les
and
hlt
dec
sbb
sbb
dec
mov
leave
imul
fadds
aam
dec
cli
jg
out
push
or
push
xchg
sub
nop
mov
lcall
bound
cld
ja
bound
xchg
icebp
stos
repz
mov
dec
jecxz
jmp
and
and
rcrb
xchg
pop
mov
mov
arpl
and
ss
call
sub
xchg
xor
mov
pop
stos
test
subl
adc
hlt
js
cli
push
pop
push
fbstp
pop
push
adcl
sub
add
dec
or
aad
mov
push
loope
xor
addl
shll
adc
push
pop
dec
or
mov
or
mov
mov
xchg
sub
hlt
decl
ret
aas
sub
test
jg
pushl
rol
test
add
test
scas
and
sti
mov
int3
cmpsb
or
ds
dec
test
jle
inc
cmp
mov
or
xchg
jb
sub
data16
daa
scas
push
jg
std
mov
test
je
push
push
test
jl
inc
loopne
add
mov
push
rclb
or
mov
iret
xor
and
lds
movsl
addr16
mov
popa
push
sar
xchg
int3
jl
push
popl
xchg
ljmp
cmpsb
iret
dec
imul
jl
sbb
std
sbb
leave
sbb
push
jge
push
inc
cld
pop
sub
and
pop
mov
mov
stos
mov
inc
shlb
hlt
inc
test
or
mov
popf
jnp
mov
fstpl
push
mov
mov
cmp
dec
and
lea
outsb
enter
andb
xchg
push
pusha
int
sahf
into
fwait
or
sbb
sub
push
mov
int3
enter
push
adc
shrb
sbb
lock
push
pop
jl
call
pop
mov
cmp
pop
lds
mov
mov
add
hlt
loope
pop
in
clc
stos
lea
dec
cmpb
decl
xchg
pop
inc
div
rcl
mov
ss
add
inc
mov
cli
inc
push
cmp
pop
jnp
hlt
test
imul
xchg
cmp
ficomps
inc
xor
mov
sub
in
cmpsb
sbb
clc
stos
outsb
lock
into
mov
push
pop
fwait
lret
push
stos
push
adc
faddl
jp
pop
pop
int3
fwait
push
push
jae
cld
out
aad
sub
loopne
xor
xor
ret
mov
and
sub
into
into
xchg
lret
lock
jmp
push
dec
in
ja
push
rcl
xchg
pop
mov
or
out
add
adc
adc
jl
addr16
mov
jp
das
push
repnz
call
leave
sahf
imul
sbb
adcl
adc
add
jp
insb
stos
ret
stos
mov
ficoms
je
push
in
hlt
pop
or
ret
sahf
test
gs
adc
loop
shll
test
adc
shrb
mov
adc
mov
idiv
call
fdivl
adc
push
push
cs
mov
lcall
cmpsl
mov
xor
adc
aad
ds
inc
cmpsl
push
bound
ret
push
hlt
pop
jg
push
mulb
or
ljmp
mov
sbbl
inc
je
sub
jmp
fsubr
push
add
and
cli
add
xchg
inc
enter
jle
xchg
mov
or
clc
mov
add
lock
cld
aaa
test
push
cs
fldenv
inc
mov
insb
sbb
mov
jbe
dec
je
pop
dec
or
mov
fisubl
aaa
flds
xor
es
jmp
bound
stos
mov
imul
xchg
bound
andl
nop
pop
cmpsl
ret
add
add
and
add
call
out
decl
pop
xlat
shrl
aaa
clc
out
push
push
add
lock
cmp
and
add
or
mov
shrl
bound
notl
mov
leave
insb
clc
scas
clc
in
sub
jmp
sbb
or
xor
orb
test
and
mov
xchg
xchg
mov
pop
scas
cli
lahf
or
xchg
stos
movsb
mov
cmc
mov
adc
dec
cwtl
popa
in
jecxz
and
and
xor
mov
sub
int
sub
pop
lret
jns
xor
or
push
sbb
sub
and
xor
cmp
imul
cwtl
sahf
ss
push
fbld
push
outsb
pop
cmp
cld
scas
mov
xor
adc
cmp
xchg
jbe
fdiv
and
pop
cmc
sub
sub
aam
fidivl
loopne
insb
mov
sarb
out
cmp
jo
jnp
push
cmpsb
mov
add
cld
je
ret
sti
pushl
ljmp
test
xchg
push
fidivrl
fmul
cld
incl
call
add
bound
dec
mov
add
mov
dec
mov
iret
mov
ss
xor
jle
bound
in
sub
push
cmp
scas
inc
dec
pop
mov
test
gs
notb
inc
out
les
adc
nop
popf
inc
sahf
daa
adc
jns
flds
aad
cld
cli
dec
mov
mov
je
sbb
adc
inc
fisubrl
jbe
cmp
push
adc
leave
dec
push
inc
in
outsb
xor
loopne
nop
call
push
mov
push
ljmp
mov
jno
iret
mov
fwait
pop
movsb
es
mov
mov
mov
cwtl
adc
outsb
mov
jbe
xor
icebp
inc
imul
cld
rcr
mov
mov
push
and
cs
pop
fs
shrl
lods
in
movsb
lock
sti
sub
or
add
push
rorb
cmp
stc
xchg
ficoms
sbb
pop
in
and
std
xor
lods
add
into
leave
push
mov
push
pop
mov
mov
mov
popf
ds
test
into
and
jg
cli
mov
enter
inc
fdivrs
push
rolb
push
cmp
add
test
inc
mov
idivb
push
cmc
inc
fisttps
inc
out
adc
cmp
and
push
mov
or
ds
es
pop
jmp
sbb
inc
adc
push
mov
jle
ja
pop
dec
xchg
dec
cmp
cmpsl
outsb
cmp
int3
add
pop
or
or
cwtl
sub
or
push
xor
pop
xchg
sahf
xor
adc
jge
cmp
scas
es
lds
inc
dec
xor
icebp
clc
ja
repnz
mov
mov
into
inc
pop
sar
jge
inc
out
inc
movsl
or
ret
lods
xor
push
adc
mov
mov
out
stos
mov
sub
push
push
int
nop
in
jecxz
ret
call
aas
mov
movl
inc
ljmp
cmp
jle
and
add
daa
ds
inc
movsl
fistpl
dec
pushf
cmp
push
pop
enter
add
loopne
mov
jg
popf
ss
xchg
jmp
orb
clc
loope
pop
sbb
pop
hlt
rcl
push
push
fmuls
cmp
pop
sbb
cltd
incb
xchg
xor
or
push
mov
adc
aad
cmp
incl
les
xchg
imulb
int
loop
into
xchg
out
adc
pushl
push
aad
fwait
mov
add
lcall
aaa
and
add
fsub
jle
les
cmc
mov
jb
jns
xor
xchg
hlt
lods
pop
lods
cmp
sar
pop
aad
and
shll
xor
jne
and
icebp
mov
xor
jle
lock
loopne
outsl
mov
in
rorb
xchg
mov
xchg
sahf
clc
out
dec
push
test
jge
cmp
mov
xchg
mov
mov
ljmp
mov
dec
out
dec
pop
pop
lods
out
add
mov
mov
cmp
ljmp
mov
insb
inc
add
jg
sub
sbb
leave
sub
int
ljmp
jg
cld
call
in
cmovo
clc
or
mov
dec
push
mov
push
ret
in
nop
or
dec
adc
cld
pop
dec
mov
ficoml
mov
pop
in
mov
jle
pop
sub
cmp
inc
and
xor
dec
rcrb
ljmp
lahf
dec
mov
push
ja
idiv
out
mov
imul
xchg
mov
jne
clc
outsl
jg
fmul
es
mov
call
lret
push
fwait
pop
add
mov
outsb
mov
inc
xor
xchg
push
pop
ljmp
or
adcl
add
xchg
sbb
clc
ljmp
dec
ljmp
sbb
mov
mov
out
in
lds
or
add
insl
push
push
das
inc
into
push
adc
test
loope
scas
jmp
outsb
outsb
insl
pop
dec
dec
sbb
call
push
loopne
or
mov
lods
cmp
fcomp
dec
loope
les
shlb
and
add
fcoml
and
jb
sahf
aaa
in
dec
ljmp
add
cld
ljmp
jbe
ja
orl
mov
ud1
mov
stos
add
add
mov
cmpsb
push
sbb
push
call
popf
mov
mov
adc
sbb
pop
sub
cmp
sub
outsb
sbb
mov
mov
add
xchg
and
dec
xlat
enter
test
adc
loope
outsb
mov
xor
clc
loope
jmp
das
push
or
add
movsl
jb
xor
sub
call
jmp
enter
test
sbb
test
pop
jne
xor
roll
fcmovne
push
imul
daa
push
add
and
pop
stos
aaa
mov
or
in
push
out
mov
jl
xor
inc
push
insl
fcmovbe
dec
mov
lods
mov
push
pop
inc
mov
lods
push
out
enter
fbstp
adcb
cmpl
pop
add
ds
rolb
bound
sub
mov
fcoms
cld
call
ja
pushf
imul
xor
ja
sub
push
es
dec
ljmp
xchg
in
xchg
hlt
push
sarb
adc
loop
mov
icebp
in
fwait
pop
cmp
push
mov
loopne
mov
pop
and
popf
nop
icebp
cwtl
shl
xor
enter
push
ret
loop
scas
dec
xchg
jg
mov
xor
movsb
lds
jge
sti
outsl
aaa
pop
cli
pop
setbe
xchg
lret
pusha
cmp
add
jg
test
ss
add
insl
pop
pop
bound
cmpsl
cmp
stc
cmp
add
adc
fidivs
rcl
insb
jmp
mov
xchg
sbb
hlt
jo
dec
mov
mov
js
out
dec
cmp
push
andl
cmp
fimuls
stos
sub
test
xor
jmp
fisubs
jg
bound
fldl
fistpll
and
orl
mov
repnz
andb
call
incl
outsb
shlb
into
ds
fdiv
cltd
pop
dec
fistpl
add
rcl
or
inc
push
jmp
add
add
loop
es
jmp
cmpsb
jg
decl
push
mov
inc
out
lea
ds
in
sub
or
hlt
pushl
mov
pop
jmp
or
imull
ret
ret
pop
mov
mov
adc
cmpb
test
xchg
mov
or
cmp
xor
sub
fildll
je
mov
scas
lods
cmp
stos
push
sub
or
stos
sub
pop
aam
jmp
or
jno
lcall
xor
dec
mov
add
xchg
dec
sub
jp
cmp
movsl
int3
les
xor
pushf
js
out
add
clc
fcomip
scas
mov
pop
and
push
sub
shll
mov
pop
jp
adc
testb
out
push
inc
jl
cld
incl
dec
sub
in
out
mov
adc
and
imul
inc
pop
jl
jnp
pop
inc
cld
call
pop
iret
rcrb
cmp
test
out
cmp
sub
int
xchg
fcmovnb
inc
aaa
mov
jmp
mov
aad
in
xchg
dec
or
dec
sti
imul
sbb
fistpll
sub
insb
movsl
in
jb
enter
mov
dec
andl
mov
mov
or
mov
xchg
jmp
or
loop
aad
inc
fsubrl
mov
sub
in
pop
mov
mov
jg
call
popf
cmp
xchg
into
jp,pt
ljmp
mov
fmull
out
adc
mov
aas
decl
ret
xor
in
or
int
cli
inc
mov
mov
push
sar
lahf
cmpsb
and
xchg
mov
fwait
jno
mov
mov
pop
lds
add
add
xlat
pop
test
or
add
xchg
sahf
cmp
pop
test
mov
call
jmp
pop
and
inc
mov
xchg
cmp
lahf
iret
in
ljmp
sub
inc
cmpsb
mov
sbb
xchg
lds
int
mov
sbb
stos
adc
cwtl
xchg
xchg
loope
test
js
mov
rcrb
xor
imul
and
push
sub
cmpsb
in
js
aam
pusha
mov
call
ljmp
inc
inc
pop
inc
lret
icebp
fbstp
lock
jg
mov
adc
or
int3
inc
jecxz
xor
shll
mov
inc
cli
pop
sbb
test
mov
fcmovnu
mov
sbb
js
call
cmp
dec
sahf
adc
xor
adc
lods
bound
and
mov
add
xchg
cmp
popa
mov
sbb
pop
je
call
adc
shlb
mov
xchg
xor
scas
xchg
pop
push
imul
neg
andl
cwtl
std
pop
mov
mov
push
rclb
push
int3
or
cmp
decl
and
inc
mov
es
out
roll
inc
or
fldl
scas
out
movsl
test
scas
mov
stos
outsb
pop
lock
rclb
xchg
iret
pusha
test
cmc
mov
pop
adc
fisubl
mov
mov
add
inc
mov
pop
cmp
call
add
lcall
pop
pop
jp
sub
test
pop
out
or
das
add
lock
stos
add
adc
push
aaa
cmpsb
adc
add
xorb
sub
mov
daa
int3
test
fadds
mov
fwait
incl
cmp
insl
nop
shrl
int3
pop
jne
in
stos
out
insl
cli
fwait
stos
aam
xchg
and
fwait
dec
pusha
mov
pop
cld
or
loope
ss
push
pop
movl
fidivrs
scas
or
mov
cs
test
ret
push
mov
jg
dec
subb
push
cmp
jae
mov
or
lcall
pavgb
imul
jmp
xor
iret
lcall
sbb
dec
pop
sbb
pop
cmp
scas
pusha
mov
cs
sbb
pop
test
or
pop
cmp
add
pop
je
test
mov
cmp
in
jmp
js
pushf
xor
in
cld
dec
pop
jbe
dec
orl
inc
je
aaa
adc
mov
xchg
mov
push
dec
loopne
cmpsb
push
pushl
adc
mov
push
lea
jl
mov
sbb
add
js
fstps
ljmp
cli
jecxz
push
xchg
xchg
pop
lods
hlt
mov
popf
cmpsb
orb
adcb
out
mov
out
ss
pop
outsl
fstpl
dec
imul
sahf
push
in
fwait
mov
jg
rol
int
xchg
enter
imul
pop
addb
loop
divb
xlat
mov
lods
xor
xor
sub
lcall
or
jmp
mov
and
cmp
arpl
push
roll
mov
cli
stos
xor
lret
xchg
jbe
decl
inc
inc
test
xor
ljmp
cmp
xchg
xchg
mov
aas
mov
inc
mov
inc
test
dec
xor
stc
jg
lea
cmpb
jg
xchg
cs
push
xor
inc
push
push
out
lds
das
and
xchg
add
cmpsl
aas
adc
mov
or
mov
jmp
shll
repnz
and
cld
pop
mov
mov
cmp
ret
testl
rorb
out
mov
mov
call
mov
lock
push
scas
push
fdiv
mov
adc
outsl
push
jo
mov
add
add
pop
test
adc
mov
outsb
xor
jp
pop
test
lods
add
lahf
out
mov
cld
pop
rclb
jo
and
push
and
inc
out
les
int3
or
dec
mov
adc
repz
cld
das
push
jle
aaa
mov
aas
pop
loopne
movsl
fistpll
inc
cmp
clc
pop
mov
mov
jp
mov
jl
shlb
pop
push
gs
push
cli
add
sub
les
mov
inc
outsb
pushf
or
push
call
xchg
cmc
in
jle
jg
imul
nop
cmp
enter
or
jmp
pop
ljmp
push
je
sbb
inc
cmp
scas
pop
add
mov
out
scas
sbb
mov
jae
add
inc
xchg
in
lods
mov
dec
dec
ljmp
mov
xor
lods
push
cmp
popa
push
sub
aaa
push
push
jae
clc
sub
cli
mov
int3
jecxz
jg
aaa
movl
sahf
repz
sbb
add
hlt
test
xchg
mov
mov
push
mov
adc
xchg
mov
mov
or
fcmovnbe
or
jae
mov
scas
pop
sbb
dec
mov
adc
rol
inc
mov
sub
pusha
out
cmp
adc
jns
adcl
push
sub
adc
stos
imulb
jo
adc
outsl
xchg
inc
sub
fsubs
inc
push
sbb
xor
mov
mov
out
xchg
hlt
scas
outsl
test
mov
stos
inc
push
mov
push
lret
or
fimull
mov
push
and
cld
lcall
pop
jle
repz
into
dec
int
sbb
adc
fwait
mov
inc
scas
inc
rcll
push
stos
sbb
and
dec
lret
fdivp
cli
push
pop
or
add
push
je
pop
je
leave
sub
outsb
loop
ljmp
pop
push
mov
and
out
jne
jnp
mov
pop
cmp
mov
jecxz
push
fadd
pop
adc
jg
lea
sbb
dec
stos
lcall
add
jl
stos
mov
jge
cld
or
pusha
jp
decb
ds
pop
in
and
xchg
mov
mov
aad
shl
das
out
push
out
dec
cmc
fdivrs
stos
addr16
mov
es
inc
push
cmp
decl
mov
popf
add
lock
mov
pop
ficomps
lcall
dec
cmp
fcompl
xchg
pushl
call
sub
push
add
mov
pop
sbbl
add
pop
adc
dec
aaa
dec
ficoms
fdiv
sub
aam
xchg
call
hlt
lcall
mov
cmp
sbb
jne
jmp
mov
cmp
xorb
movsb
pop
scas
jecxz
jg
loopne
add
xchg
vmovups
mov
inc
sbb
mov
cli
inc
lcall
mov
mov
push
cltd
bound
rcl
push
aaa
das
out
incl
xchg
cwtl
inc
lock
data16
inc
xchg
cli
mov
dec
cmc
or
ss
stc
and
adc
mov
pop
popa
cmpsb
into
mov
lock
loope
aaa
lcall
sub
xchg
pop
add
fucomip
xchg
cld
mov
add
mov
cli
inc
pop
jne
push
enter
jg
or
inc
fidivrl
movsl
ja
mov
ds
dec
out
test
and
push
add
or
aad
lahf
adc
mov
push
lret
push
inc
test
js
stos
xor
jecxz
cmp
mov
jl
dec
xchg
mov
mov
data16
adc
outsb
test
cmpsl
xor
paddsb
pushl
mov
pop
dec
call
pop
mov
and
sbb
fisubl
insl
mov
and
lcall
imul
loopne
xchg
std
insb
mov
call
lcall
mov
cmp
scas
pop
pop
lods
jg
mov
fnstsw
xchg
decb
lcall
or
imul
sbb
fistpll
mov
sbb
xchg
cmp
mov
lock
stc
adc
add
enter
mov
pusha
js
pop
cmpsb
xchg
sbb
fildll
cmp
inc
pushf
in
jmp
jb
insl
rcrl
in
add
add
push
cmp
jp
or
insb
rclb
fists
loopne
jg
hlt
xchg
sbb
and
insb
out
sti
mov
inc
sbbb
fldt
mov
jno
push
or
ljmp
add
inc
sbb
outsb
lret
fistl
xor
dec
cs
ss
dec
fmuls
jbe
scas
imul
fadds
add
pushf
out
or
push
dec
fbld
mulb
lock
or
aam
or
stos
or
mov
scas
rcrl
adc
fnstsw
jbe
movsl
or
ss
ja
js
out
lahf
icebp
add
inc
add
call
xchg
jmp
imul
pop
addr16
nop
cli
pop
mov
sub
insb
push
repnz
push
sub
and
stos
incb
movsb
pop
adc
stos
fs
popf
movsl
cwtl
test
maxps
pushf
mov
dec
xchg
sub
mov
push
mov
sub
dec
mov
jns
in
negb
adc
xor
cmp
pop
push
fiadds
divb
xor
xor
push
fsts
iret
test
lock
aaa
cld
loopne
pop
arpl
int3
jno,pt
imul
lock
sub
notb
fmuls
lret
ficomps
and
or
push
jb
add
push
cltd
sub
ficoml
in
inc
pusha
pop
imulb
adcb
pop
andl
dec
loope
iret
data16
test
xchg
decl
mov
out
push
pop
popa
mov
push
add
adc
jg
add
and
jo
jmp
adc
cmp
add
jmp
push
pushf
jo
xor
jb
inc
mov
jecxz
xchg
shl
call
sbb
mov
mov
inc
jnp
mov
ficoml
or
es
sbb
adc
inc
xlat
add
out
inc
mov
xchg
movsb
mov
xorl
outsl
dec
cmpsb
aas
rcl
outsl
clc
pop
mov
lods
jp
cwtl
jb
frstor
jp
jge
pop
cli
jge
mov
leave
int
jl
pop
out
lock
push
fwait
mov
sbb
pushl
xchg
out
mov
push
cmp
jbe
mov
cmc
clc
push
ret
sbb
fcompl
cli
sbb
dec
mov
mov
mov
dec
add
call
fs
enter
stc
add
push
jbe
pop
cli
xchg
mov
test
aaa
cwtl
lcall
movsl
lock
sbb
jp
inc
out
pop
jb
pop
fsqrt
mov
mov
lds
mov
mov
fcos
pushl
and
out
cwtl
or
lea
scas
dec
and
add
add
lods
fbstp
popf
bound
cld
or
les
aaa
mov
dec
sti
push
sbb
mov
imul
xor
lret
push
mov
mov
and
test
fdivrl
pop
iret
cwtl
pop
dec
sbb
mov
pop
pop
loop
nop
mov
stos
aam
and
mov
loopne
test
lea
es
test
inc
lcall
mov
rclb
mov
push
jno
and
shlb
into
adc
mov
cwtl
pusha
scas
fwait
mov
call
and
test
loope
pushf
dec
movsb
xor
mov
mov
dec
lcall
pop
sub
in
leave
push
shrb
mov
aaa
inc
iret
repnz
scas
adc
jge
cmp
mov
fisttps
push
movsb
mov
and
std
outsl
lcall
dec
out
and
sub
fldenv
fs
mov
ljmp
inc
push
vpmacssdql
decl
xchg
xchg
rol
out
xchg
lock
aad
inc
cmp
scas
fidivrl
das
or
xchg
sub
mov
insb
or
mov
xchg
jmp
decl
out
xlat
pop
mov
hlt
xor
mov
inc
dec
fwait
insb
mov
pop
pop
xor
adc
and
sbb
or
imul
int3
addl
pop
push
jo
xchg
push
add
pushf
mov
pop
std
cmc
js
loop
fs
fsubp
pop
clc
das
mov
fwait
and
fsubrl
cmp
out
inc
and
lcall
ja
ljmp
loope
das
call
les
aaa
ljmp
rcr
push
inc
rolb
out
psrld
xchg
adc
loope
inc
mov
sarl
pop
fwait
sbb
fwait
scas
mov
cmpsl
adc
int3
aad
clc
mov
fstpt
insb
push
je
lret
pop
xchg
push
js
mov
scas
nop
movsb
std
add
and
sub
dec
pop
fidivrs
lcall
push
cmpsb
addr16
data16
adc
cwtl
ljmp
mov
inc
push
xorb
mov
xchg
mov
cmp
cmp
add
clc
fldt
cmp
and
cwtl
sbb
mov
out
loope
adc
hlt
jecxz
inc
jbe
xchg
mov
sub
fisttps
add
rcrb
cmp
mov
cmc
pop
inc
mov
faddl
mov
ds
stc
lods
fnsave
cli
mov
aam
adcb
std
dec
pushl
das
inc
into
xor
adc
loop
icebp
out
int3
pop
test
fwait
cmpsb
pop
push
push
and
sbb
mov
add
mov
and
dec
scas
mov
lea
dec
cmp
pop
ret
mov
scas
cmpsb
mov
loopne
sub
pop
mov
inc
cwtl
sub
mov
stos
test
rolb
add
inc
mov
ljmp
mov
int3
add
push
lret
nop
sub
cld
jge
or
inc
call
pop
push
fs
insb
cmpb
jp
mov
sahf
dec
lock
jnp
sub
lcall
sbb
leave
in
push
fwait
hlt
or
dec
sub
ljmp
pop
icebp
fmul
sbb
jo
jg
cmp
das
clc
and
ljmp
gs
lock
sbb
xchg
cli
test
or
xor
out
imul
les
aad
cmc
jne
mov
push
inc
xor
mov
pushl
push
add
add
ljmp
mov
shrl
sbbb
ljmp
jp
dec
xor
cltd
leave
rolb
ljmp
adc
cld
outsl
nop
push
mov
mov
mov
pop
cwtl
mov
cs
cmp
jmp
cs
add
jle
sub
adc
adc
mov
scas
cmp
lds
xor
sbb
dec
mov
inc
xor
call
push
xchg
or
lret
jne
cmp
pop
sub
sub
icebp
xor
rcrl
mov
test
cltd
add
pop
xchg
sbb
push
scas
int3
arpl
mov
xchg
lea
cld
es
jns
jb
ljmp
loop
lock
rcr
jecxz
lret
add
adc
add
insl
bound
jg
or
sub
popf
sbb
mov
fldl
push
pushf
in
pop
push
or
cwtl
push
stos
pop
jg
ljmp
or
pop
mov
fsubrs
sti
or
mov
cmp
inc
shl
push
adc
cmp
iret
jb
lods
stos
loop,pt
xor
jb
cmpb
stos
pop
push
or
mov
je
cli
aas
inc
inc
in
pop
sbb
adcb
stos
rcll
stos
repnz
movsb
ret
cli
mov
fst
loope
xchg
sbb
mov
ss
and
pop
mov
sti
cli
mov
pop
or
add
imul
jne
dec
sti
sub
pop
mov
sahf
hlt
clc
dec
scas
mov
fimuls
push
push
stc
fimuls
sbb
or
mov
movsb
imul
js
fwait
and
dec
hlt
rcl
adc
or
fisttps
mov
int3
test
add
push
xor
inc
cli
out
cli
aam
xchg
mov
pop
sub
negl
xor
inc
push
rolb
in
or
scas
clc
inc
dec
lret
mov
xchg
inc
dec
xchg
loop
pop
sub
mov
and
push
adc
out
xorb
icebp
fadds
dec
rol
dec
pop
sbbb
das
pop
and
add
or
inc
or
add
cli
dec
sar
jge
sub
sbb
or
sbb
cwtl
loop
mov
femms
cmp
mov
push
lock
and
call
jecxz
insb
mov
nop
je
jmp
dec
adc
mov
insb
daa
pop
ret
pop
mov
xchg
cld
or
das
outsl
mov
or
push
fisubs
adc
ja
sahf
push
mov
push
popa
add
mov
insb
push
shrb
jg
lods
add
sub
pop
jmp
sbb
mov
sbb
add
lds
subb
scas
xor
cmp
ljmp
mov
jbe
add
pop
lock
mov
cmp
gs
and
rcrl
sub
ja
lea
mov
loop
inc
jecxz
push
inc
push
sub
add
iret
cmc
or
mov
pop
std
movsb
mov
mov
push
xchg
daa
cmc
push
fwait
mov
push
cs
icebp
jbe
inc
pop
div
arpl
aam
rcrl
xor
es
push
pop
popf
dec
or
sub
outsb
lcall
ja
clc
sub
or
int
test
les
in
inc
and
inc
push
pop
cmpsl
cmpb
xor
jno
xor
fwait
out
pop
cltd
pmuludq
pop
es
pop
push
jbe
add
testb
leave
test
jno
dec
roll
xor
add
test
outsb
pusha
or
push
scas
sub
jle
sub
mov
dec
pop
lods
fs
nop
cltd
cmpsb
pop
lds
inc
lods
sub
cwtl
fsub
inc
jl
add
inc
insl
push
mov
xor
xlat
add
lods
jns
imul
into
sbb
jl
fadd
jmp
add
inc
imul
cmp
inc
out
mov
stc
mov
xor
stos
mov
cli
in
aas
iret
mov
inc
pop
xor
and
sub
sti
cwtl
xlat
outsl
mov
dec
dec
or
cmpsl
and
sti
push
stos
xchg
jmp
mov
mov
roll
push
jae
sub
adc
enter
push
push
and
pop
cmc
lcall
pusha
xor
fbstp
mov
ror
mov
mov
hlt
cli
cli
ljmp
adc
jmp
or
fistps
lcall
cli
fs
add
lcall
call
pop
repnz
je
fistpl
jmp
xchg
xchg
cltd
add
xchg
push
movsl
pop
sbb
xchg
cmpb
loope
push
fsubs
xor
push
adc
and
cmp
jo
mov
mov
ljmp
push
pop
push
ds
jns
imul
shrl
cmc
cmp
lcall
add
push
cs
cmpsb
cmpsl
dec
jmp
pop
pop
dec
loop
sbb
sub
lock
inc
mov
sbb
add
push
push
dec
mov
mov
fwait
add
fsub
ss
aas
mov
lock
push
leave
push
xor
insb
mov
add
xchg
sarb
xor
mov
data16
or
add
jne
mov
and
call
xchg
lcall
xor
cmpl
pusha
icebp
es
mov
cli
adc
mov
mov
lods
cwtl
aaa
imul
adc
out
les
push
into
aad
dec
test
in
test
add
aaa
sbb
in
test
hlt
push
pop
mov
cwtl
pop
dec
mov
insl
jg
icebp
jbe
and
xchg
cltd
lock
xlat
mov
mov
fildll
lret
cmp
xchg
adcb
push
pop
test
idivb
push
add
and
push
push
cmp
mov
sub
pop
mov
icebp
shlb
pop
mov
mov
fwait
adc
roll
lcall
sti
or
out
fucomp
mov
mov
inc
mov
jg
jnp
sarb
fcoml
inc
in
leave
jmp
adc
jl
push
xchg
sbb
push
mov
mov
cmpsb
popa
push
aam
push
and
or
mov
cmp
jle
insl
loope
xchg
jg
sbb
inc
lcall
dec
sbb
pop
jno
cmp
pop
jge
or
les
pop
popa
sbb
loop
ljmp
cld
and
cmpsb
ljmp
mov
xor
or
push
jg
in
xchg
fcmovbe
dec
mov
xchg
or
and
ds
clc
adc
mov
inc
mov
fcomps
call
sub
add
fidivrl
stos
inc
push
js
fidivl
sbb
aas
mov
stos
and
in
out
sbb
ljmp
int3
gs
xchg
stc
add
setg
fnsave
sbbl
das
inc
mov
popf
adc
mov
sbb
cld
bound
loop
jns
xchg
inc
loope
std
scas
and
mov
xchg
sub
call
xchg
or
dec
add
pop
mov
je
ret
mov
mov
fsubl
iret
je
jg
mov
sti
or
dec
add
das
clc
add
xchg
cltd
test
jle
jns
js
add
mov
shll
out
lahf
stc
adc
sbb
call
lock
sub
mov
outsl
hlt
mov
xchg
cmp
jle
jmp
xlat
push
push
mov
jge
outsb
jg
outsl
mov
push
scas
cld
mov
dec
xchg
sub
xchg
mov
mov
pushl
lret
mov
push
stos
in
push
nop
scas
cmpsb
sub
das
cli
lret
shll
ljmp
test
mov
xor
inc
iret
xor
pop
adc
push
out
push
mov
pop
les
add
push
cmpsb
sahf
bound
repz
mov
fwait
and
jg
lcall
mov
out
in
sahf
popa
sar
lcall
and
std
cli
fisubrs
dec
sbb
test
jg
lock
xor
mov
aad
sbb
or
das
inc
push
lahf
lea
lahf
or
test
dec
dec
pop
sahf
or
mov
ljmp
bound
into
pop
xor
inc
lahf
pop
jnp
push
push
leave
push
test
push
mov
aam
in
ret
ds
pop
or
and
out
cmp
jge
and
add
orb
shll
dec
cmp
mov
pop
mov
jne
cmpsb
xchg
sub
sbb
dec
jnp
push
std
sub
push
xor
loope
xchg
das
cli
stos
mov
add
xor
push
cmpsl
adc
sar
shlb
jg
enter
insb
mov
jno
int
and
hlt
iret
stos
pop
into
mov
daa
clc
pushl
lock
shlb
std
pop
jge
push
or
scas
inc
mov
ficomps
mov
xchg
popa
push
dec
push
jle
fwait
mov
je
mov
loopne
xchg
stos
stos
adc
xchg
pop
je
in
js
or
insb
cld
mov
xchg
sub
pop
xchg
hlt
or
ja
das
outsb
jnp
and
es
fbld
jp,pt
andb
jg
lock
sbbl
dec
pop
scas
push
add
scas
sub
ret
add
loop
lcall
std
mov
dec
sub
xor
scas
mov
stos
and
pop
jo
cmp
out
mov
in
push
lds
xlat
dec
cmp
push
jp
cmc
inc
jmp
add
cs
sub
xchg
mov
sub
push
pop
popf
shrb
pop
sub
xchg
sarb
xchg
push
jp
popf
aam
icebp
fs
mov
stos
pop
inc
movsb
aas
imul
sbb
mov
rclb
orl
pop
add
arpl
arpl
daa
pop
inc
add
ss
cld
adc
fcomip
jmp
dec
pop
adc
add
xchg
sbb
ret
repz
inc
inc
ret
in
add
inc
in
test
cli
ja
mov
imul
outsl
fdiv
xchg
sahf
dec
sbb
xor
dec
pop
aam
ljmp
add
mov
divl
outsb
mov
and
popa
cwtl
push
push
jns
insl
jo
pop
pop
push
add
mov
repnz
inc
lds
mov
icebp
pop
std
sbb
add
mov
fs
add
in
imul
outsb
repnz
fstpl
mov
jle
insb
or
pop
jge
dec
sub
clc
pop
std
mov
decl
fwait
in
mov
fisttpll
adc
push
push
and
mov
clc
adc
icebp
push
cwtl
test
aaa
xchg
popf
or
lahf
xlat
inc
adcl
aam
mov
inc
xchg
das
push
adc
mov
xor
xor
icebp
jl
outsb
mov
subb
mov
add
inc
pusha
rolb
int3
xchg
negl
sub
mov
or
xchg
cld
imul
loopne
sub
adc
adc
pop
adcb
scas
insl
or
mov
outsb
pop
push
cmp
sub
push
sahf
into
test
sbb
push
add
xchg
or
cmp
mov
xor
sub
or
inc
sbb
xor
clc
mov
repnz
popf
imul
mov
dec
arpl
test
adc
ret
decl
decb
xchg
imul
bound
in
jg
xchg
ss
nop
ds
mov
stos
mov
inc
add
pushf
inc
sarl
or
mov
ffreep
pop
rcll
jns
adc
out
ret
xchg
int
popf
push
sbb
pusha
xlat
popf
test
outsl
ja
xor
mov
mov
jo
shll
xchg
mov
xor
xchg
test
in
decl
dec
out
lods
addr16
scas
cmc
adc
pop
sub
and
dec
adc
loopne
incl
lret
cmp
fistps
in
clc
int
stos
pop
push
add
mov
mov
lcall
adc
es
xchg
push
xor
loopne
add
js
mov
decl
fucomip
movsb
outsl
repnz
add
push
xor
mov
dec
xchg
jecxz
or
jecxz
sbb
pop
jb
mov
pop
push
sub
aas
mov
pop
adc
jg
cmpsb
cltd
push
inc
jge
nop
xor
sbb
in
das
xor
cmp
ret
push
shl
mov
adc
dec
dec
bound
add
ret
push
inc
or
xor
adc
scas
cli
cld
rcl
lock
push
mov
mov
aam
test
cld
cmpsb
orb
lahf
jl
ret
pshufw
sbb
xchg
in
fchs
jns
js
dec
mov
pop
pop
sahf
fcmovne
cld
mov
pop
adc
jl
sub
nop
int3
jmp
adc
adc
adc
xor
xchg
mov
stc
les
arpl
sbb
and
gs
jb
jne
add
sar
mov
pop
jne
jo
adc
xor
dec
cwtl
cli
mov
or
adc
aam
cmp
fistpll
cmp
mov
mov
lret
mov
movsl
jmp
icebp
push
out
xchg
dec
orb
js
and
cmp
cwtl
pop
add
mov
cmp
inc
sbb
inc
lods
outsl
addb
cli
dec
stos
jle
test
xchg
fdiv
popf
into
cmp
addr16
test
les
cli
inc
push
or
jb
clc
cmp
mov
call
out
mov
mov
sbb
aaa
fprem
mov
push
add
dec
aam
aad
mov
xchg
lret
xor
repz
ret
popf
inc
test
xchg
loop
jnp
cld
mov
sub
dec
jp
jl
add
mov
mov
call
inc
arpl
jns
cmp
xchg
gs
lods
icebp
addl
jg
out
mov
dec
rcrb
inc
and
inc
cmp
and
mov
stc
cmp
mov
fldcw
adc
jecxz
mov
adcb
fcomip
mov
mov
mov
loop
xor
push
mov
shll
in
test
cltd
outsb
xchg
pop
mov
add
sub
aaa
mov
pop
dec
fcmovb
jg
test
popa
js
jae
mov
arpl
push
lods
sti
sbb
std
lcall
clc
mov
adc
sub
cmp
push
lcall
push
imul
les
cli
rorl
icebp
ficompl
cmc
dec
mov
lea
outsl
push
out
fdivp
out
clc
mov
dec
imull
lods
xchg
adc
jge
push
cmpb
outsl
dec
cmp
sub
out
and
shrb
es
in
in
loop
jp
xlat
loop
or
mov
jmp
pop
mov
jb
push
jo
outsb
and
loopne
xor
dec
dec
jl
cmpl
cwtl
into
stc
test
movsb
jl
and
ret
add
mov
jg
sbb
mov
ret
ljmp
in
insl
hlt
xchg
xchg
pushw
add
sbb
jb
in
push
add
mov
push
mov
xor
stos
xchg
jns
js
xor
jno
movsb
outsb
rol
sub
push
push
push
out
sahf
or
aad
hlt
jb
ljmp
mov
jp
lock
mov
popa
pop
push
mulb
testl
lea
ret
cmp
pop
cld
filds
fstpl
loope
dec
fcompl
scas
xchg
and
xor
mov
pop
mov
orb
jecxz
mov
ds
fldcw
jo
pop
xor
mov
pop
insl
lcall
mov
fildll
mov
lcall
cld
sub
pop
xchg
adc
mov
jo
call
xchg
dec
jns
jg
pushf
ret
xor
clc
pop
sub
sub
shlb
das
test
dec
stos
xchg
push
test
or
cmp
jecxz
dec
and
mov
push
pop
lds
mov
push
add
push
sahf
adc
std
lds
dec
pop
xchg
cmp
cmp
add
out
jmp
mov
jg
xchg
cli
lcall
jmp
icebp
incl
xor
ror
cmc
adc
mov
dec
mov
std
push
fisubrl
in
test
leave
or
add
movsb
xor
test
add
xor
decl
loope
xor
and
rorb
jo
hlt
pusha
ljmp
aaa
adc
push
sub
mov
dec
shlb
stc
ljmp
mov
xor
add
cs
fnstsw
pusha
mov
and
xor
sbb
inc
or
shll
rcrl
adc
js
ds
fdivrl
add
push
sub
pop
xchg
fdivrs
pop
pop
mov
insl
outsl
fsub
lea
or
mov
and
sub
push
mov
jle
pop
adc
mov
mov
negb
push
incb
stos
push
in
jb
inc
fildll
dec
bound
xchg
xlat
mov
test
xchg
fdivs
fisttpl
add
mov
loope
jno
lcall
add
add
push
fs
int3
ficompl
fsubrs
rolb
pop
push
add
mov
add
jp
decb
je
jnp
and
test
cli
inc
fiaddl
pop
mov
shll
jg
sbbb
arpl
inc
lret
mov
push
sub
incl
cld
in
es
sbb
push
popl
dec
fnstenv
bound
mov
jne
in
lds
xor
jo
call
mov
in
dec
xor
jl
fcoms
pop
pop
mov
xor
inc
ret
jmp
mov
scas
shrb
rolb
pop
dec
cld
into
jmp
cmp
push
div
mov
jnp
sti
dec
xchg
cltd
jb
cmpsl
mov
sbb
jb
hlt
lods
pop
in
std
pop
mov
lds
pop
xchg
jno
sbb
inc
adc
js
mov
rcr
push
cmp
add
jle
xchg
sahf
pop
movsb
inc
jnp
rorl
cld
mov
pusha
das
mov
out
or
mov
andl
int
and
outsl
and
mov
iret
jp
inc
lock
imul
nop
jno
ljmp
and
out
mov
aad
inc
sbb
fidivrl
xor
notb
pop
icebp
sbb
mov
roll
mov
mov
inc
scas
clc
pushl
push
scas
clc
adc
pop
add
xchg
cmp
stos
jns
cmp
jge
gs
mov
push
clc
nopl
js
inc
in
cwtl
pop
aaa
rorb
aad
and
lods
aas
loopne
repnz
popf
mov
mov
mov
or
andl
sub
lcall
es
xchg
xchg
in
flds
jmp
pop
popf
cmpb
add
pop
or
data16
cwtl
iret
pop
lds
and
pop
jg
mov
add
pushl
jmp
inc
das
push
and
pop
sbb
hlt
clc
push
push
ss
insb
out
imul
in
insb
push
lods
xor
and
ss
shrb
hlt
jle
jnp
lock
sbb
fdivl
sub
xchg
scas
je
fcomps
xlat
loopne
fs
pop
pop
sahf
or
loop
push
cld
jecxz
adc
sub
call
lods
jno
nop
sub
mov
jg
clc
adc
clc
jnp
sti
lods
pop
pop
or
ljmp
cli
sub
mov
daa
sarb
mov
adc
stos
push
lret
sbb
les
add
sbb
sub
in
mov
pop
testb
js
adcb
mov
sub
outsl
jle
jnp
orl
sbb
in
pop
subl
popf
cmp
nop
mov
inc
or
push
jge
mov
push
aam
adc
mov
dec
int3
adc
mov
and
leave
and
add
fdivrl
test
lret
std
jmp
cmp
sti
enter
dec
shlb
xor
sahf
mov
cld
adc
push
push
sbb
jbe
and
jns
ret
cli
aas
stc
repz
pushf
insb
or
or
mov
xchg
ds
add
push
cmpsb
xchg
jbe
ret
dec
pop
and
push
int
add
ret
outsl
jbe
lahf
loope
mov
push
hlt
sub
mov
and
scas
push
cmc
jmp
lods
mov
cmp
jne
cmp
push
mov
sub
adc
adcl
xchg
fsubr
push
lods
into
aaa
mov
insb
inc
imul
cmpsb
cmp
or
cmc
pop
mov
jmp
cltd
add
ja
aaa
stos
ja
fmuls
cld
add
jnp
hlt
movsl
jp
and
jecxz
add
clc
mov
xor
in
aas
push
push
adc
popa
decl
xchg
pop
enter
push
test
push
cwtl
clc
adc
rclb
sub
les
push
cmpsb
out
mov
loopne
mov
pop
cmpsl
mov
sub
pop
push
mov
loopne
jae
iret
jo
ss
sub
xchg
ret
in
hlt
pop
outsb
cmpsb
push
mov
movsl
stos
out
xchg
push
adc
mov
mov
or
lret
jne
jle
mov
call
cmp
inc
mov
cmp
f2xm1
ljmp
inc
and
add
mov
jle
out
and
pop
mov
add
mov
out
push
pop
hlt
pop
add
and
imul
cld
pop
stos
jmp
xor
repz
ds
out
and
cmp
pop
bound
push
sbb
jmp
insl
xor
push
sub
jle
dec
icebp
loopne,pn
jbe
outsb
pop
out
jle
movsb
pushl
lcall
mov
cli
in
lcall
sbb
lcall
daa
aam
test
mov
js
test
jg
test
push
add
cmp
shrb
cmp
push
lret
pop
popa
xchg
fdivp
clc
adc
xlat
pop
in
sub
pop
xor
jl
sub
xor
lcall
push
xor
push
cmpsl
fistps
cmc
sbb
inc
push
cli
mov
js
mov
mov
lret
lcall
loopne
sbb
in
enter
jg
inc
jecxz
adc
cmpb
cmpsb
pop
pop
cmp
or
fimuls
jg
insl
sti
lock
ret
pop
cli
and
popf
out
cld
into
mov
push
pop
pop
adc
cli
test
cwtl
sahf
les
push
call
stos
and
ljmp
add
stos
clc
pop
jl
sbb
notb
loopne
xlat
rol
adc
lea
sbb
jge
test
adc
imul
jg
cmp
jns
xchg
fsubrs
dec
dec
xchg
jnp
xlat
and
adc
sti
inc
sub
add
sub
cmpsb
sbb
pop
lods
pop
mov
sub
cmpsb
loope
mov
jg
pop
lret
xor
or
pop
and
popf
jge
cs
xchg
inc
lret
lahf
and
lret
or
sub
bnd
xor
jo
int3
add
push
inc
jle
xor
and
mov
popa
cld
out
pop
adc
cmp
cld
jnp
clc
lods
pop
cld
shrb
xchg
call
ror
stos
stc
mov
lahf
sub
in
dec
mov
adc
sti
rorl
pop
lds
pop
rorb
clc
stc
imul
jg
in
lds
test
jge
je
jle
add
sub
in
dec
lock
cld
stos
sub
mov
or
and
push
sub
js
fbstp
pop
mov
mov
pop
jns
leave
mov
std
inc
mov
pop
add
adc
xor
das
cli
movsb
mov
push
xor
sub
mov
lret
pop
mov
sub
jg
ljmp
pop
dec
movsb
dec
push
data16
shl
mov
pop
lods
cmp
mov
xor
pop
aaa
or
sbb
jecxz
test
mov
mov
mov
jg
les
cld
jp
cmpsb
subb
pop
mov
xchg
mov
jg
jge
shrb
add
mov
sub
adc
call
cmpsl
inc
fisubrs
sub
jnp
push
fistl
add
mov
or
jle
movsb
adc
or
push
movsl
adc
jmp
dec
mov
cmc
cmp
cli
mov
mov
push
bound
mov
pop
xchg
repnz
sbb
or
mov
hlt
ret
lods
add
incl
pop
andl
enter
pop
pop
lret
clc
ljmp
push
push
dec
or
sub
add
mov
sub
mov
into
cld
fbstp
push
dec
mov
or
mov
inc
sti
push
gs
sarb
mov
data16
jo
pop
xchg
cli
fcomip
mov
mov
ret
pop
and
pop
ja
aas
les
pop
les
jns
adc
decl
sub
insl
mov
or
aaa
sbb
movsl
scas
mov
xacquire
lods
orl
adc
js
mov
xor
pop
pop
jp
mov
lcall
push
adc
inc
lods
in
pop
sarl
xor
push
xor
mov
insl
cli
call
test
xchg
vmwrite
pop
and
sar
fcom
test
es
mov
loop
shrb
lcall
jg
adc
fldcw
xchg
xorb
adc
outsl
sub
mov
lcall
push
iret
inc
pop
mov
inc
or
mov
lcall
xchg
std
lea
dec
xchg
andl
call
pop
mov
lret
xor
jmp
outsb
dec
and
addr16
mov
dec
mov
lahf
in
jle
in
mov
cmp
out
push
dec
cmpsl
adc
and
in
and
mov
les
xchg
mov
jo
add
stos
imul
fists
repz
fs
les
clc
pop
lock
mov
cli
cs
sbb
mov
or
ret
iret
popf
pop
mov
hlt
leave
mov
mov
jg
fildl
call
incl
test
shll
leave
out
push
mov
push
dec
loope
fiadds
jbe
and
xchg
leave
or
filds
lcall
out
rorl
or
repnz
mov
loop
jl
xchg
sti
cltd
test
or
in
std
incl
enter
out
lods
dec
push
call
pushf
pop
lea
vxorps
fildll
ds
arpl
aaa
in
fbstp
lods
icebp
push
cld
popf
enter
dec
xorb
dec
in
ljmp
jge
arpl
inc
or
rcr
mov
mov
mov
les
call
loope
push
adc
movsb
inc
jl
jg
pop
sub
sahf
pushf
push
cwtl
xorl
mov
insb
adcb
pop
xor
enter
in
push
stc
mov
or
fbstp
mov
stos
ljmp
jne
fidivs
cmpsb
pushl
ljmpw
sarl
xor
clc
imul
or
outsb
sub
dec
ret
std
mov
sbb
lods
mov
xchg
lahf
mov
sbb
adc
pop
adc
mov
fisubl
dec
pushf
dec
dec
pop
rclb
mov
sub
mov
lods
push
inc
mov
pusha
push
inc
mov
mov
stos
adc
fisubs
aas
mov
je
mov
in
xchg
repz
adc
push
mov
clc
jmp
inc
or
adc
pop
cwtl
cmc
sbb
push
stos
mov
jle
enter
pop
xchg
xor
scas
inc
mov
mov
aam
push
jo
pop
mov
inc
push
es
xchg
jb
xor
icebp
adc
lcall
jl
adc
and
xor
lahf
adc
clc
lock
jmp
jo
mov
not
sbb
lret
and
call
shl
test
inc
rclb
mov
inc
f2xm1
mov
mov
popf
test
insl
mov
ss
pop
pop
sbb
mov
int
xchg
in
clc
test
outsb
in
cmp
push
inc
mov
pop
cli
aas
push
mov
mov
cmp
jno
pop
jbe
mov
lods
xchg
lahf
push
add
pop
jo
mov
mov
pop
push
xchg
or
sub
leave
dec
out
push
lcall
in
pop
pusha
idivb
ret
testb
cwtl
clc
out
mov
js
pop
stos
arpl
dec
and
mov
adc
sbb
sub
outsb
add
icebp
mov
dec
in
xor
sub
popf
and
std
jle
std
pop
dec
jecxz
out
mov
lock
clc
sub
cli
mov
pushf
xchg
dec
push
div
js
cmp
or
add
icebp
mov
in
and
test
mov
cmp
xchg
test
jne
enter
mov
dec
pusha
repnz
sub
rolb
push
dec
sbb
incl
xchg
and
cmpl
clc
pop
insl
sub
insb
cmp
idiv
fildll
or
mov
dec
xchg
stos
xchg
dec
push
outsb
pop
out
mov
xchg
jle
outsl
popa
ret
mov
cwtl
pop
fs
mov
rorb
mov
test
stos
dec
mov
mov
int3
mov
adc
cmpsb
lcall
pop
lret
movsb
setg
imul
mov
incl
cmp
dec
test
mov
adc
andb
call
loopne
andb
push
in
les
mov
rolb
je
cmpsl
movsb
lahf
cmpsl
dec
ljmp
jno
out
xor
sub
and
sar
in
lods
fiaddl
xchg
ds
cmpsb
sbbb
add
xor
xor
or
jmp
in
dec
test
push
push
pop
pop
xchg
inc
pop
insb
jl
jecxz
out
cli
inc
jo
lds
xchg
loope
xchg
call
sbb
sub
pop
or
pop
mov
insb
popa
ja
mov
ljmp
pusha
and
movsl
and
jns
icebp
mull
pop
ja
mov
xchg
aam
movsl
fistpll
or
sbb
push
and
push
orl
adc
cs
inc
add
imulb
mov
mov
xchg
fnstsw
jne
ljmp
lret
mov
je
add
lods
lret
jl
mov
das
cli
scas
orb
or
sub
out
cmp
and
push
or
vmwrite
jmp
push
rcrl
xor
addl
jbe
adc
iret
mov
adc
mov
mov
xor
call
jp
out
movsb
xor
scas
test
pop
enter
icebp
adc
enter
pusha
fmull
jb
xchg
pop
les
filds
xor
fistl
pop
scas
flds
in
pop
shrb
cmpsl
aas
and
into
leave
lods
jg
xchg
cmp
je
push
xchg
push
or
stos
jb
filds
adc
jge
jecxz
hlt
out
or
dec
ljmp
iret
ds
cmp
fimuls
fldt
std
add
sub
cmpsb
inc
push
inc
std
sarl
mov
xchg
mov
sub
xchg
pop
xchg
jne
mov
inc
pop
jp
outsl
dec
xchg
xor
jge
sub
push
cmpsb
inc
push
or
mov
fs
cmp
sub
sahf
cwtl
xor
aas
sub
jb
push
inc
ror
pop
rcr
ret
push
mov
push
xor
mov
call
mov
adc
fwait
jl
add
jg
fwait
outsb
or
orl
repnz
ja
test
and
enter
in
mov
push
jmp
loope
mov
cli
popf
cli
adc
adc
xor
scas
rcr
mov
test
push
push
mov
ficompl
mov
aas
sbb
cmp
pop
aas
mov
test
mov
test
lcall
pop
lcall
pop
lods
sub
hlt
pop
xchg
xchg
xor
jecxz
into
inc
sub
pushf
add
jg
fidivrl
sub
push
out
mov
dec
clc
aad
sbb
mov
inc
ret
rorb
bound
inc
pop
add
sub
mov
jo
fdivr
std
lea
mov
pop
mov
mov
hlt
andb
jge
ja
bound
scas
loop
add
cld
or
cmp
mov
lods
pop
sti
jecxz
mov
fcomip
fists
repnz
adc
dec
inc
int
dec
mov
dec
aaa
jl
loope
bound
adc
addl
rep
xchg
test
test
arpl
decl
imul
lds
adcb
ljmp
test
inc
push
pop
cld
lods
or
add
decl
cmp
aad
pop
push
mov
lods
jmp
cmp
fstpl
add
cmpsl
rcrb
aad
test
jmp
cli
ljmp
pop
dec
popf
lcall
push
mov
or
mov
xorb
clc
lret
stos
cmp
dec
jb
cwtl
pop
aaa
or
cmp
jmp
mov
push
add
sbb
je
sahf
data16
inc
mov
aas
clc
jae
test
pop
cmp
cmp
adc
loope
dec
jg
and
mov
lods
stos
cmc
jb
mov
sbbl
rcl
inc
movsl
sub
bound
sub
push
enter
xorl
add
fdiv
js
pop
ret
out
aam
outsl
push
mov
xor
movsb
mov
dec
out
aaa
adc
cmp
fldt
icebp
dec
add
push
push
mov
lds
mov
or
push
es
stos
mov
loopne
lret
ss
add
pop
loopne
fiadds
or
filds
mov
mov
xchg
out
add
mov
pop
push
jl
cmp
fnsave
pop
in
mov
rcll
push
stos
fs
cli
jnp
jmp
xchg
lods
push
cmpsb
jae
nop
adc
out
scas
push
cli
mov
in
fucom
cmc
inc
pop
sbb
add
scas
push
jns
scas
add
add
cmp
xchg
push
inc
inc
sbb
in
out
cs
jg
adc
xchg
data16
hlt
add
jecxz
adc
and
fmull
xor
cmp
addb
push
pop
clc
xchg
jg
decl
mov
pop
ds
jle
sti
incl
sbb
sbb
insl
jp
aam
push
pusha
std
out
adc
cmp
outsl
imul
orl
add
sbb
cmp
dec
push
lahf
and
xchg
jne
sbb
rcrb
mov
das
clc
sub
ss
add
mov
cmp
adc
add
mov
stos
mov
stc
fcom
or
cli
dec
cld
js
xchg
mov
sbb
or
inc
icebp
cs
sub
stc
or
ljmp
out
inc
xor
cli
dec
and
imull
adc
loope
out
xor
aaa
xchg
repnz
repnz
fidivl
fidivrl
fildll
dec
inc
in
fxam
mov
scas
jp
fcompl
outsl
movsb
sahf
add
scas
nop
push
jno
test
inc
dec
pusha
add
mov
imul
jbe
outsb
inc
cmpsb
mov
sti
pusha
in
and
pop
sbb
inc
int3
not
mov
or
xchg
pop
out
mov
mov
sbb
std
ror
dec
test
lds
dec
adc
inc
clc
jle
mov
and
ret
sub
bound
dec
pop
pushaw
fbld
dec
scas
mov
xorl
incl
das
push
stos
cmp
leave
push
jno
test
xchg
xorb
sbb
xor
jmp
loop
insb
add
mov
or
push
hlt
sti
bound
dec
push
adc
adc
fdivp
jns
add
push
xchg
fisubrs
int3
in
lcall
add
xchg
scas
and
iret
inc
xor
subl
mov
mov
ret
pushl
mov
sub
test
jno
call
mov
dec
mov
fwait
push
cmp
scas
add
sbb
push
xor
push
dec
out
pop
or
xor
jmp
iret
push
mov
dec
mov
inc
and
jb
cmp
mov
adc
cmp
cld
pop
in
aaa
xchg
shlb
mov
cmc
bound
add
fisubs
xchg
dec
jne
add
xchg
inc
mov
sbb
pop
or
mov
push
push
inc
das
clc
fstpt
mov
add
sbb
insb
and
fidivs
loope
dec
xchg
pusha
test
mov
adc
push
out
cltd
loop
notb
pop
and
movsl
test
fdivrp
outsl
clc
pop
mov
push
int3
nop
hlt
push
sbb
into
mov
push
inc
xchg
lods
scas
rorb
sub
push
clc
add
add
jbe
out
push
or
leave
pop
repz
ljmp
add
rcrb
and
shl
fwait
outsb
push
cmpsl
test
repnz
iret
outsl
scas
in
mov
add
jg
fisttps
add
outsb
in
movsl
jge
or
popf
or
arpl
or
inc
xor
add
les
jp
andl
pop
or
lcall
popa
ds
orb
ret
dec
xor
and
mov
idivl
movsb
mov
cmpsb
pop
inc
cld
xchg
repz
jp
push
outsb
scas
das
pop
and
jmp
cs
jge
lcall
xchg
or
sti
addl
push
push
loop
aad
pop
mov
inc
add
movsb
mov
sub
mov
ljmp
cmovl
mov
mov
test
sti
enter
nop
sub
dec
mov
ffree
push
jl
je
stc
pop
sbb
cwtl
imul
lret
clc
decl
lret
or
mov
cli
mov
test
and
cltd
out
scas
js
add
sub
incl
repz
pop
fimull
add
sub
dec
jno
jns
and
jecxz
pxor
dec
ljmp
mov
ja
je
push
xchg
fs
dec
pop
fmul
cwtl
pop
pusha
rol
xlat
push
inc
rorl
es
push
scas
clc
outsl
movsb
push
xchg
cltd
mov
inc
movsl
cmc
xor
decl
mov
pop
outsl
out
push
mov
mov
sub
inc
mov
insl
xchg
inc
and
incl
and
push
cmp
mov
mov
in
cmpsl
cmp
jae
sub
mov
ret
lcall
inc
loop
cli
mov
add
clc
adcb
mov
xchg
push
std
dec
fidivl
adc
mov
roll
push
add
pop
or
jg
addl
cli
push
push
inc
push
mov
mov
xor
repnz
sub
sbb
aas
cmc
jno
stos
xor
pop
push
dec
int3
and
scas
xchg
lods
sub
lods
sbb
adcb
mov
jbe
mov
push
test
or
stos
subl
xchg
sbb
addl
outsl
decl
movsb
sub
das
or
pop
stos
inc
xchg
adc
sub
xor
cmp
sub
inc
xchg
mov
inc
jno
cmp
add
pop
test
and
fwait
dec
into
int3
daa
mov
and
loopne
or
pushf
mov
inc
pusha
or
add
loopne
lcall
dec
dec
sbb
inc
jmp
push
aaa
xchg
mov
ja
jg
mov
mov
jle
pushl
aaa
cld
outsl
mov
or
roll
lods
jp
mov
adc
push
sti
mov
in
and
dec
sub
push
repz
data16
loopne
lods
xchg
lock
jmp
sti
shl
pop
mov
pop
pop
xchg
insb
sarl
cmpsb
jle
pushl
sub
fmull
shlb
mov
bound
dec
cmpsb
divb
pop
ljmp
in
sahf
mov
or
icebp
mov
push
fdivrp
into
fdivrs
call
negb
out
xlat
jo
in
mov
bound
leave
push
call
les
push
test
inc
mov
mov
push
aad
jle
pop
jmp
scas
cs
inc
xchg
push
int
testb
aaa
lods
fsubl
sbb
mov
xor
scas
cmp
and
dec
adc
cli
cmpsl
dec
pop
ljmp
roll
xchg
and
push
xchg
repnz
push
lcall
je
pop
cmp
mov
popa
rcr
jle
sub
addr16
sbb
in
add
ss
push
mov
sti
scas
mov
out
pop
jns
outsl
inc
sub
jge
sarb
pop
pop
dec
mov
mov
movsl
outsb
xlat
outsl
jecxz
es
inc
pop
push
xor
iret
mov
or
cmp
sbb
or
ret
incl
sbb
les
inc
mov
push
lret
adc
icebp
incl
push
push
in
ja
insb
jbe
out
sub
push
sysret
outsl
decl
dec
xchg
mov
bound
hlt
cmc
rcrb
fildl
incb
mov
lods
pushf
mov
add
fdiv
andl
cli
ljmp
or
out
mov
call
std
fcompl
sbb
cltd
pop
clc
jae
mov
xchg
dec
mov
inc
add
sub
test
in
jae
call
adc
pop
imul
out
les
popf
out
iret
push
mov
push
imul
mov
push
mov
les
loopne
mov
stos
stos
nop
xchg
fisttps
cwtl
out
sub
into
push
mov
mov
leave
ss
mov
sub
push
pop
dec
arpl
inc
or
adc
cmpsl
mov
cli
movsl
mov
pop
inc
mov
jb
and
sbb
repz
inc
mov
jg
jle
je
push
sbbl
iret
gs
or
call
movlhps
and
rcrb
push
xchg
pop
xchg
mov
sub
outsb
cli
ljmp
std
or
shrl
cmpsl
jno
js
jp
push
loope
add
or
fnsave
push
add
xor
lcall
pusha
or
cmp
subb
idiv
outsb
insb
adc
mov
fimull
add
mov
cmpsl
dec
ja
cli
dec
pop
enter
lret
adc
fstpt
incl
pusha
sbb
sbb
adc
lock
mov
jg
dec
cld
gs
fstpt
xchg
jl
int
lahf
cmp
and
negb
inc
loope
xchg
and
ficoms
icebp
incl
jb
xor
leave
sbb
jbe
call
pop
jnp
je
jg
fisttps
shrl
xchg
add
ret
mov
lock
scas
push
adc
or
xchg
and
cs
je
int3
bound
subl
lods
shrb
add
push
cmpsl
pop
mov
mov
or
jp
xor
dec
xor
add
inc
adc
mov
push
pop
mov
lock
or
add
ja
xor
call
mov
lea
test
popf
test
in
or
jg
or
sub
ljmp
out
int
cmp
or
pop
bnd
push
cld
mov
or
xchg
pop
lcall
adc
out
fdivr
push
pushf
pop
adc
aaa
std
sub
dec
or
nop
lret
pop
adc
decl
or
popf
rorl
outsl
and
or
push
out
xchg
jp
test
into
cmp
icebp
scas
aaa
frstor
call
push
sarb
in
rorl
mov
cld
fsin
and
add
jge
dec
sub
dec
sbb
inc
sub
push
daa
dec
jmp
sbbb
fisubrs
shlb
decl
rorl
push
test
test
add
dec
call
add
or
cmp
and
in
inc
scas
jmp
lods
add
lret
push
test
pop
insb
cli
mov
xor
lock
loop
shll
inc
rcrb
mov
xchg
rcrb
add
aaa
loop
jg
xor
lock
stos
addr16
jl
ljmp
cs
jns
mov
mov
in
ss
mov
dec
mov
xchg
fmul
repnz
xor
std
xchg
mov
repz
in
into
cltd
cwtl
stos
push
insb
aaa
mov
or
cmp
fdiv
dec
mov
mov
and
add
iret
fcoms
push
inc
pushl
cli
mov
scas
lea
jbe
dec
ret
sbb
aam
mov
call
push
popa
ja
hlt
daa
inc
xor
fs
push
les
in
lock
scas
xor
sbb
shlb
jl
push
or
loop
lods
cs
xchg
das
lods
ljmp
dec
loopne
dec
jmp
rcll
add
xchg
xor
jmp
les
stos
push
push
cmc
fmulp
mov
test
dec
jmp
sbb
xchg
cmp
into
mov
out
cmp
pop
push
rcr
or
sub
adc
add
stos
ljmp
cs
push
outsb
lds
dec
dec
sti
ret
jb
dec
dec
lods
adc
lock
outsl
add
aas
imul
rcll
or
loopne
dec
jae
out
dec
xchg
insl
aaa
push
aam
or
cli
or
add
jp
loopne
pop
fcoml
les
mov
cld
stos
stos
mov
aam
cltd
scas
stc
cmpsb
es
mov
jl
testb
stos
cmpsl
je
or
movsb
cmp
mov
lods
out
not
or
fisubrs
or
mov
cld
lcall
pop
sub
jle
adc
push
xor
pop
fsubrs
lock
add
arpl
dec
ret
in
out
cs
pop
xchg
in
jno
mov
sahf
and
or
loop
in
jbe
mov
in
imul
cmp
xor
pop
bswap
pop
flds
popl
fildl
jecxz
in
je
mov
xlat
dec
jg
test
pop
into
mov
dec
mov
inc
mov
sub
add
sarb
push
pushf
fwait
lock
into
or
scas
mov
adc
mov
je
push
sbb
fsts
or
test
pop
mov
and
cmpsb
ja
addb
pmulhw
xchg
rolb
cld
mov
dec
sbb
test
adc
mov
jns
fidivl
icebp
xor
add
pop
lahf
xor
cmpsl
mov
decl
decl
scas
or
and
and
add
push
cld
inc
xchg
jecxz
lock
xlat
test
sub
test
movsl
lea
test
decl
pop
or
aaa
aas
ret
out
jne
gs
lods
jg
sahf
xchg
loope
cli
sbb
dec
dec
sti
shlb
loop
pop
lds
enter
dec
cmpsb
adc
dec
movsb
mov
push
pop
jo
add
mov
das
add
outsl
cmp
lahf
pop
xor
pop
jl
xchg
ds
cmc
sbb
inc
jne
cmp
fwait
mov
add
stos
fwait
insb
data16
push
out
imul
mov
sahf
or
outsb
pop
xor
test
dec
adc
add
dec
clc
mov
fidivrs
fcmovbe
cs
pop
xor
daa
or
sbb
outsb
mov
push
das
das
mov
fwait
out
imul
or
divl
int3
inc
jge
dec
and
mov
or
mov
cmpl
dec
cmp
inc
loop
xor
push
add
sub
decl
out
pop
xor
int3
les
cmc
add
lret
sub
pop
cltd
es
mov
xchg
mov
lret
loop
sub
das
mov
and
pop
pop
fxch
push
jge
das
jp
addr16
test
xorb
das
sub
add
je
ljmp
mov
mov
loop
dec
lahf
fcomps
add
push
out
call
sub
jmp
mov
lret
mov
rol
pop
add
imul
pushaw
add
add
mov
mov
adc
decl
mov
push
pop
mov
or
sub
pushl
pop
outsl
inc
ds
jnp
cmp
mov
adc
incl
psadbw
cmc
mov
jp
lret
add
repnz
out
jb
fs
imul
es
lcall
xchg
push
sub
lods
lret
in
pop
mov
ds
sub
add
sbb
lds
rclb
adc
xchg
add
xchg
pusha
rorl
inc
hlt
sub
adcb
sti
shrb
stc
psllw
mov
jg
out
sub
and
loopne
fs
mov
pop
call
int
adc
dec
decl
push
aad
int
je
xchg
jno
mov
dec
mov
in
pushf
sbb
pusha
cmp
adc
stc
xchg
cwtl
movb
mov
pop
jecxz
push
cli
movsb
mov
sub
dec
pop
std
es
mov
daa
fsubr
mov
movsl
xchg
incl
lret
jle
js
insl
pop
inc
mov
push
xorb
psubsw
dec
dec
clc
xlat
cld
lahf
mov
andl
cmp
lcall
dec
arpl
ss
mov
aaa
loop
cmc
incl
xchg
fbstp
push
push
ljmp
dec
vpmaxsw
out
fcomip
pop
push
inc
jg
dec
test
sti
push
and
cs
aas
xchg
cmpsl
pop
call
cli
push
mov
or
jbe
xchg
pushf
fistpl
dec
movsb
inc
lcall
add
imul
xchg
mov
dec
push
jl
lea
repnz
mov
mov
fcmovu
sub
incb
and
inc
lods
aas
adc
cmp
adc
fistps
mov
sarl
mov
push
and
stos
fs
adc
in
fldt
bound
insb
pushf
call
int
jecxz
fisubs
mov
sbb
cmc
stos
shl
out
mov
fdivrl
mov
mov
xlat
or
lods
inc
nop
out
scas
lcall
mov
fcmovu
or
mov
sbb
aaa
cld
repz
dec
outsb
and
negb
iret
jp
and
leave
cmp
int
cld
pop
pop
hlt
test
aam
mov
out
call
pushf
std
dec
pushl
push
dec
scas
lcall
cmp
mov
sbb
sbb
hlt
adc
roll
jnp
add
pusha
cld
xchg
test
daa
xor
rclb
loope
out
mov
mov
call
les
incl
cs
jno
lock
pop
and
xchg
xor
pop
out
sub
mov
js
push
dec
adc
pop
mov
cld
jg
pop
call
lods
aam
in
pop
sti
mov
je
mov
push
mov
data16
sbb
ja
lret
jb
push
push
push
add
lods
int3
push
cltd
nop
cmp
add
bound
adc
test
adc
dec
popf
push
mov
jne
das
fwait
int
mov
pop
leave
push
mov
mov
popa
popf
pop
mov
pop
enter
mov
out
mov
rorl
add
adc
lret
decl
enter
cmp
scas
push
add
push
dec
cltd
push
or
fbstp
push
bound
aaa
push
popa
insl
add
js
movsb
xchg
adc
fsubr
push
mov
out
push
push
push
jne
aas
loopne
jg
add
xchg
inc
loopne
sbb
movsl
mov
mov
xlat
pusha
idivl
jno
clc
add
xorb
dec
jge
mov
rcr
or
xor
pop
jl
add
gs
dec
lods
cli
fildl
push
shlb
and
mov
or
push
outsb
cmp
cmpsb
xchg
xchg
xor
xor
cmp
cwtl
imul
xchg
mov
xchg
out
in
xor
dec
and
xor
adc
cli
jg
rcrb
movsb
xchg
repnz
mov
push
jnp
loopne
scas
sbb
fidivrl
mov
and
fs
cmc
mov
in
xor
xchg
decl
clc
and
add
scas
cwtl
mov
add
push
nop
loopne
xchg
hlt
push
fiadds
adc
fcmovnb
fimull
dec
in
push
inc
ljmp
or
lcall
pop
les
test
mov
repz
loope
jecxz
push
iret
aad
and
dec
cmp
sub
incl
fnstsw
mov
pop
sbbb
and
sbb
sub
pop
addb
pop
mov
cmovae
xchg
loop
pop
inc
xor
scas
rorb
adc
jbe
sbb
sub
mov
sbb
clc
mov
stos
jle
mov
push
cwtl
inc
popa
cwtl
lock
test
pop
jecxz
sub
mov
xchg
push
mov
push
jge
jmp
nop
les
sarb
xlat
jo
hlt
ljmp
mov
cmpsb
dec
pusha
insl
clc
xor
in
push
or
sbb
aas
cmp
push
faddl
push
shlb
dec
aam
pop
or
or
jg
adc
ja
stos
inc
out
xor
sub
and
push
adc
xor
sti
stos
rcrl
lret
pushf
push
cltd
inc
fisttps
jecxz
call
scas
imul
movsb
call
add
pop
or
pusha
jg
xchg
cmp
incl
out
repnz
pop
add
pop
cmp
lret
jle
xchg
lret
shrl
adcb
popf
mov
push
mov
les
rolb
into
pop
ss
dec
sbb
inc
shll
sbb
stc
loop
and
outsb
inc
jecxz
xchg
test
dec
filds
outsb
jb
les
adc
enter
outsl
das
xor
xchg
xchg
popf
xchg
repz
add
push
sub
dec
fcomip
fildll
ds
inc
sub
cmp
popf
cmp
push
out
mov
fsubrp
lds
pop
mov
or
mov
dec
dec
clc
jmp
addr16
testb
ds
popa
out
add
das
jge
fisubrl
sbb
dec
pop
push
ds
mov
or
xchg
testb
fistl
and
test
stos
mov
cmpsb
lock
and
cs
xchg
mov
dec
ds
sbb
test
xchg
adc
hlt
cli
sub
or
push
mov
cmc
shr
fidivrl
mov
cwtl
lcall
out
std
inc
jg
shrb
rcll
xchg
je
inc
test
fcomip
fwait
sub
rorb
push
in
js
addb
pop
mov
add
fsubrs
dec
lods
add
popa
sbb
ja
lea
pop
outsb
in
loop
mov
dec
add
adc
or
mov
xor
jecxz
sti
add
js
dec
adc
jecxz
jae
and
loopne
or
jp
dec
or
outsl
mov
push
push
fstps
nop
adc
pop
cmpsb
scas
and
outsb
hlt
mov
fbstp
sbb
cmp
and
mov
cmpsl
xchg
adc
and
push
push
jle
jns
dec
aam
mov
xor
jns
lcall
lock
andb
cmp
outsb
or
gs
push
std
and
fisttps
shll
add
and
fstpl
mov
adc
mov
and
pop
xor
lods
lcall
add
cmpsl
cld
mov
mov
in
decl
xchg
out
add
add
xor
mov
inc
and
sub
xchg
loopne
inc
adc
xchg
cli
ret
rol
push
mov
sub
sbb
jae
jle
xchg
cmp
jg
dec
ss
enter
sbb
jg
push
or
cmp
pop
and
cld
scas
ret
aad
inc
add
sbb
dec
ret
ds
iret
call
mov
inc
lock
pop
imulb
sub
sub
dec
xchg
cmc
das
inc
dec
movsb
xchg
cli
test
push
lock
rclb
shlb
push
add
movsb
xchg
cltd
sbb
xchg
movsb
cmpsb
out
test
cmp
or
fsubl
add
popf
jecxz
pop
gs
mov
mov
jecxz
in
sahf
clc
shl
xchg
jo
push
mov
leave
aam
lret
lock
dec
mov
and
add
fistl
stos
rorl
outsb
fdivs
mov
pop
jl
mov
pop
mov
js
adc
mov
push
iret
aas
cli
test
imul
or
decl
std
incl
push
dec
adc
jno
push
xchg
jl
aas
and
stos
call
inc
pop
pop
in
jg
add
int3
jl
aam
sub
push
inc
sbb
cmp
and
leave
push
lahf
jo
jg
fiadds
add
push
js
push
xchg
cmpsl
lods
aaa
in
test
or
push
jne
and
inc
cmp
mov
cmpsl
cld
mov
xchg
jae
ja
test
sbb
or
icebp
aad
movsb
pop
mov
jg
add
jbe
add
ja
adc
inc
jg
jecxz
sbbb
dec
adc
loopnew
jbe
inc
sar
inc
xorl
rclb
inc
sarb
jg
cmc
push
data16
fimuls
frstor
addb
mov
xlat
or
loop
adc
les
mov
mov
push
and
add
ja
int3
dec
push
add
imul
push
sbb
lcall
scas
push
mov
scas
xor
fwait
test
sysret
negb
ljmp
push
fcoms
cld
xchg
fs
adc
test
mov
cmc
sar
mov
pop
dec
sub
aam
ficomps
orl
mov
das
mov
or
inc
in
mov
xlat
lods
scas
dec
xor
cmp
mov
cli
stos
pop
dec
and
pop
clc
addr16
testb
scas
mov
xor
xlat
xor
adc
pop
insb
push
movb
add
xchg
shrb
movsl
das
ljmp
leave
das
clc
lods
mov
rorb
subb
test
pop
rcrl
push
pop
out
add
or
mov
sbb
dec
sub
mov
loop
out
and
sbb
clc
mov
dec
gs
add
dec
pushf
out
mov
xor
push
lret
mov
lahf
outsb
movhps
les
push
and
mov
jbe
jmp
mov
xchg
decl
popf
jnp
fidivs
jae
mov
fnsetpm(287
pusha
in
outsl
add
shrl
movsb
and
mul
ljmp
test
dec
lock
cwtl
outsl
leave
lret
add
push
fs
push
ljmp
sbb
daa
xchg
scas
jbe
cmp
dec
and
pop
outsl
lea
fiadds
lods
ljmp
in
movd
repnz
fadds
fbld
aaa
aam
xor
out
cmp
test
std
mov
dec
dec
sahf
push
pop
cmpl
scas
and
filds
fdivr
filds
ficomps
jne
imul
mov
add
sub
outsl
push
add
nop
int3
movsb
mov
dec
jnp
mov
shrb
and
loopne
add
call
lock
mov
fsubs
push
call
sub
or
lock
push
dec
pop
fcmove
add
xchg
lock
aad
nop
jns
adc
into
shl
test
aaa
pushf
add
push
cmp
dec
xor
mov
jg
add
cmpsl
ret
mov
sbb
push
jg
mov
aaa
or
mov
lock
xlat
decl
xchg
aam
hlt
lcall
mov
mov
sub
jae
insb
scas
loopne
scas
jo
adc
add
out
push
std
mov
lock
jmp
jne
fidivs
pop
decl
testl
stos
icebp
lcall
mov
jb
push
and
sbb
sbb
icebp
incl
xchg
clc
stos
sbb
stos
aaa
xchg
dec
or
jne
adc
enter
cmpsb
aam
pop
sub
dec
repz
inc
pop
push
sar
sarl
xor
incb
sub
pop
and
mov
aas
data16
aas
lock
inc
xchg
imul
sub
test
fstpt
test
ljmp
hlt
mov
cld
push
lock
add
and
jae
xchg
aas
mov
mov
xor
mov
std
ljmp
mov
mov
lret
je
insl
jecxz
xorl
jg
pop
jb
sbb
jl
push
iret
arpl
into
loope
call
sarl
jns
mov
add
fcmovnbe
pop
fldt
lcall
in
ljmp
adc
add
aaa
xchg
cli
add
icebp
std
inc
add
add
push
mov
aaa
add
int3
decl
jns
push
xchg
int3
xchg
lahf
cmpsl
call
sub
dec
mov
adc
sub
fbld
daa
dec
inc
jg
nop
push
fs
inc
push
ficoml
push
std
ljmp
sbb
scas
data16
cmp
sbb
jl
outsb
mov
push
les
sub
pushf
scas
push
daa
dec
xchg
mov
pop
insb
or
jmp
xchg
xor
jl
call
mov
fisttps
cli
negb
test
mov
bound
gs
cs
xor
xor
sub
pop
test
sbb
pop
test
lcall
jbe
pop
pop
loopne
shll
jg
ffreep
nop
and
add
dec
mov
ret
call
lods
or
fildll
cli
js
sbb
mov
movsb
push
jmp
hlt
jp
sarl
aas
inc
loop
out
mov
jg
stos
sub
xlat
adc
shrb
into
es
mov
notrack
sub
pop
mov
ret
push
outsb
clc
inc
ja
sub
inc
pop
mov
movsl
es
lcall
or
shrl
pushf
xor
iret
aad
mov
dec
in
push
pop
insl
std
cmp
les
fisttpl
push
adc
fwait
xor
jb
dec
ds
lahf
and
push
lds
out
cmp
pop
push
sub
jle
jg
popw
das
cli
lret
scas
cmc
aas
inc
mov
loop
mov
or
mov
xchg
shll
pop
cs
mov
outsl
nop
jnp
hlt
dec
imul
inc
dec
test
incl
adc
xchg
inc
addb
inc
or
sub
mov
jmp
outsl
mov
dec
dec
call
xchg
pop
inc
mov
shrl
insb
mov
aam
xchg
iret
bound
decl
js
fidivrs
dec
xchg
sub
jnp
push
cmc
pop
int3
jns
inc
ret
dec
out
xchg
fistpl
and
xor
and
mov
roll
dec
mov
push
rcl
bound
push
dec
dec
ljmp
andb
mov
fisubrl
or
adcl
sbb
dec
cmc
dec
mov
cmc
fwait
push
ss
and
or
scas
cmpsl
mov
xchg
mov
mov
mov
jbe
sub
lds
cmpsb
or
cmp
or
scas
clc
xchg
movsb
xor
loope
out
test
movsl
mov
inc
xchg
lret
je
add
fistpll
and
inc
imul
fisubrs
add
out
sbb
xchg
push
shl
pusha
pop
mov
inc
add
bound
ret
push
fwait
cli
cli
mov
mov
test
rorb
aad
push
sbb
fbld
adc
je
outsl
repz
push
jb
pop
mov
sub
gs
jmp
movsl
das
test
xlat
popf
inc
jg
cmp
fs
fiadds
pop
push
mov
push
jle
pop
inc
es
dec
test
xor
out
sbb
mov
push
mov
out
rcr
xor
leave
pop
or
or
clc
push
cmp
movsb
out
clc
jg
aas
push
mov
inc
and
inc
adc
inc
and
or
decl
sub
mov
iret
mov
xor
subl
and
inc
inc
pop
cld
inc
sub
pushf
dec
sbb
and
mov
cli
jnp
xchg
movsl
push
jg
jle
inc
push
lock
sbb
push
sbb
and
dec
jno
pop
in
stc
int3
and
or
ljmp
pop
sub
cli
cmp
mov
mov
ja
aad
out
inc
clc
push
mov
aam
outsb
stos
xor
push
inc
sar
mov
xchg
lock
mov
mov
sub
sub
push
pop
cmp
les
adc
fucom
jae
scas
ds
pop
out
pop
iret
add
fsubl
sbb
sbb
mov
adc
orl
lods
out
push
ss
inc
lret
andb
mov
sbb
shll
out
mov
jb
add
movsb
cld
scas
add
cltd
pop
call
jge
cld
xorb
push
call
test
pop
inc
jmp
sub
mov
sar
jo
xchg
loopne
push
dec
xor
sub
fiadds
jno
decl
jge
hlt
mov
stos
jle
fdiv
and
mov
nop
sbb
data16
dec
push
add
fsubrs
cmpsl
cmpsl
out
push
mov
mov
lea
lcall
int
int3
test
shlb
adc
pop
lds
popf
ja
mov
dec
outsb
mov
cmpsl
push
fwait
cmpsb
stos
push
xchg
xor
jg
hlt
or
js
orl
repz
mov
lods
cwtl
ljmp
inc
ret
std
pop
hlt
out
idivl
stc
push
or
daa
xchg
shr
xor
mov
pop
dec
ja
clc
pop
mov
dec
jge
mov
and
cli
movsb
scas
imul
xor
fwait
movsl
or
push
out
cli
sbb
dec
test
sahf
xchg
dec
add
jo
jne
pop
inc
jae
cli
mov
jbe
jg
adc
fnstcw
cmp
je
fcos
fildl
push
sub
inc
pop
hlt
arpl
fisttps
mov
and
enter
xor
movsb
decb
inc
lods
jns
jl
pop
mov
stos
add
push
in
mov
aam
xchg
push
out
lret
adc
xchg
jne
sbb
dec
cmpl
push
lods
xchg
sahf
pop
fildll
imul
mov
cmp
inc
insb
push
xchg
es
div
clc
add
ljmp
lds
or
xchg
mov
addb
mov
test
out
insb
ret
cld
aad
add
add
mul
and
xchg
into
lods
jmp
push
inc
test
imul
cli
or
pop
adc
xchg
enter
sub
ficoms
dec
push
sbb
mov
jl
xchg
cmpsb
dec
stos
shrl
push
icebp
pop
imul
rcll
push
jg
cmp
lahf
into
dec
sub
adc
lahf
jb
pop
cld
add
mov
stos
pop
cmp
in
std
dec
mov
mov
jmp
lods
adc
scas
and
xchg
cli
aas
mov
jl
xchg
dec
jg
push
clc
cmp
mov
lret
nop
dec
stos
mov
lods
sub
pushl
xor
jmp
orl
sub
pop
cld
fwait
pusha
ret
dec
call
push
out
inc
or
pop
icebp
out
popf
cld
push
xchg
push
out
cmpsl
mov
int3
rorl
call
adc
movsb
shll
xchg
pop
dec
or
dec
inc
xor
pushl
ljmp
mov
lret
xchg
sub
add
sub
stos
out
cli
jb
and
fistps
ret
mov
iret
je
mov
aad
pop
add
cmp
rcl
enter
mov
pop
mov
xor
jno
cmp
pop
scas
cli
inc
xchg
push
shr
movsl
cwtl
mov
jge
mov
fisubrl
fdivrs
loope
cs
ss
je
push
cmpsb
add
outsl
andnps
scas
sub
stos
push
in
pop
add
shlb
cli
ret
xchg
fs
sub
xchg
movsl
fcomip
cwtl
int
pushf
mov
lods
dec
mov
add
jg
xchg
lcall
jns
cmp
jno
jmp
cmc
add
mov
pop
lahf
xchg
fistpl
data16
inc
mov
adc
mov
pop
repnz
ret
jge
mov
fs
cld
pop
out
test
mov
ljmp
mov
fwait
incb
add
es
or
push
hlt
mov
repnz
js
lcall
mov
incl
sbb
loopne
cs
adc
sub
jno
cmp
ss
outsl
outsl
clc
and
dec
out
jl
dec
sub
loopne
fsub
lock
rol
cmp
inc
jg
pop
mov
cmp
jge
rorl
std
pop
lods
popa
into
pop
dec
ret
sbb
cmp
mov
or
jmp
in
aad
add
pop
lahf
inc
test
mov
scas
sbb
insl
pushf
pop
mov
push
add
cwtl
aaa
adc
aaa
cltd
or
xlat
pushl
in
cli
mov
pop
dec
adc
mov
pop
enter
push
sbb
loope
push
cmpsl
adc
rclb
sbb
xchg
cmp
mov
cld
add
pop
faddp
add
cmp
cmpb
sbb
sub
in
stos
fsubrl
adc
jl
mov
sub
insl
sbb
fadds
cmp
les
fiaddl
push
hlt
aad
jbe
stc
xchg
stos
and
pop
dec
add
scas
cli
pop
mov
and
cmp
mov
and
dec
enter
aad
jno
xlat
iret
aam
cltd
aas
xchg
jne
jecxz
pop
roll
popf
aam
test
fiaddl
les
and
pusha
fs
pop
lods
clc
sbb
pusha
cmpsb
stc
push
mov
jo
jle
lock
arpl
push
jl
pop
adc
fsubs
sahf
sbb
or
sbb
add
inc
pop
repnz
fildl
test
loope
lea
or
mov
dec
pop
js
xor
pop
jg
and
mov
clc
ljmp
add
push
jnp
aas
sub
adc
dec
push
ret
mov
mov
push
cwtl
mov
xor
cmc
cmp
or
adc
dec
inc
je
inc
xchg
gs
jle
cmpsb
out
xor
fs
ja
cmp
mov
sahf
and
sbb
mov
jp
inc
or
mov
or
or
fistps
pop
pmaddwd
testb
fimull
push
pop
fstps
cmp
dec
hlt
aaa
mov
repnz
mov
ljmp
adc
jle
fbld
mov
mov
or
gs
js
call
xor
cli
xor
add
inc
addl
cld
adc
adc
jns
into
xchg
pop
add
loop
pop
mov
push
shlb
call
mov
popf
pop
enter
push
ss
jg
test
sysenter
push
inc
and
pop
pop
inc
or
sbbb
or
sub
in
or
movsl
jne
push
dec
cwtl
fistl
push
xchg
xchg
sarl
cwtl
test
adc
imul
pop
es
in
leave
push
ss
rolb
fwait
mov
pushl
mov
lret
push
aaa
inc
pop
pop
ja
lds
mov
pop
push
test
lret
jo
or
mov
mov
xor
xor
pushf
gs
repnz
mov
jnp
sub
cwtl
out
and
pushl
repz
add
adc
pop
sub
mov
dec
mov
stos
sbb
xchg
loope
lock
lret
mov
or
loop
jg
sbb
rcrb
add
push
mov
lods
in
push
mov
inc
pusha
pop
aam
ja
adc
hlt
dec
aaa
nop
es
xchg
xor
push
xchg
loopne
das
xor
es
add
dec
ja
pop
adc
cmpsl
add
and
inc
lds
add
fildll
jg
repz
xchg
test
adc
lcall
dec
jmp
ror
push
std
xchg
ss
cli
jg
add
pop
aad
mov
out
fucomip
movsb
outsl
inc
cmp
cli
sub
mov
push
test
mov
add
adc
pop
dec
fwait
mov
cmpsl
cwtl
lahf
loop
push
call
hlt
fs
push
mov
in
jl
sub
fs
pop
xor
scas
mov
addl
es
or
add
repz
push
fsubl
lea
sub
dec
or
mov
call
ret
jmp
mov
les
and
lock
aam
sub
mov
dec
mov
insb
std
push
imul
jns
xor
icebp
mov
jnp
shll
ss
loop
pushf
cmp
dec
mov
jp
movsb
enter
out
or
push
xchg
xor
adc
in
or
cmp
js
loopne
push
test
xor
call
adcl
pop
sub
mov
jecxz
std
mov
stos
je
push
clc
scas
in
pushl
jnp
popa
cmpsb
dec
arpl
push
call
xor
cld
es
decb
xchg
sbb
dec
mull
sbb
int3
outsb
shl
pop
sub
or
scas
fimull
adc
xlat
in
sbb
or
pop
add
or
sahf
sbb
adc
adc
insb
mov
in
inc
adc
adc
jmp
pusha
ret
roll
mov
sbb
call
insb
fstpl
test
out
inc
inc
mov
cmpsb
faddl
fstpt
mov
clc
cli
mov
mov
test
sbb
imul
test
pushf
stc
cmp
lret
decl
int
and
movsb
sub
pop
js
sbb
rcrl
add
imul
and
insl
shlb
stos
xor
inc
ljmp
pop
xchg
aaa
into
aad
lret
cmpsl
push
cmp
lea
les
loope
sti
cltd
cmp
pop
in
rclb
fisttpl
adc
decl
mov
pop
es
inc
js
sbb
daa
xor
inc
mov
cli
mov
xor
xchg
push
out
inc
xor
add
incl
adc
mov
mov
cmc
push
jg
or
push
fsub
cmp
out
mov
aaa
inc
xchg
inc
leave
pop
or
push
adc
push
mov
mov
adc
jb
scas
and
bnd
cs
and
stos
cwtl
lret
pop
or
add
add
jg
lock
mov
mov
xchg
fstp
imul
mov
addr16
push
std
add
pcmpeqd
push
push
jae
aas
push
cmp
jmp
enter
das
rcr
jg
push
mov
and
adc
jecxz
rcrb
inc
xchg
xor
mov
pop
add
dec
add
or
sti
ds
stos
ss
outsb
xchg
pop
int3
fwait
xor
or
jbe
lret
out
outsl
stos
clc
dec
loope
dec
and
add
lret
jecxz
pushl
pushl
xchg
xchg
pushf
in
sub
pop
xchg
daa
jb
lds
or
inc
mov
jecxz
std
cmp
inc
das
in
inc
icebp
fsubrs
cmp
add
adcl
pcmpgtb
es
inc
jl
lret
jecxz
cld
data16
shll
enter
add
rcrb
push
sbb
add
xor
call
push
aas
push
adc
call
negl
cmpsb
es
sti
sub
pop
lods
mov
sub
sub
dec
gs
es
sbb
std
cmp
lcall
dec
jecxz
or
inc
mov
sub
fs
bound
inc
cli
add
or
hlt
mov
stos
push
mov
cwtl
test
inc
sti
decl
loope
jae
ret
jecxz
jg
or
mov
xchg
xlat
sti
sbb
aaa
sbb
pushl
outsl
jg
repnz
fsubs
js
sub
into
and
sbb
lods
hlt
dec
sbb
sbb
xchg
lods
ljmp
or
sarl
add
sti
sbb
pop
mov
sbb
adc
aaa
cwtl
mov
repnz
pop
lock
data16
mov
mov
jp
int
mov
aad
cmpsl
xchg
lods
data16
dec
lahf
or
ficoml
mov
pop
mov
rcr
data16
fs
idivl
gs
sbb
fcmovnbe
rorl
fmuls
ljmp
mov
shl
or
and
pop
test
cmp
loopne
out
mov
loope
fcoml
fidivrl
shll
sub
pop
fmull
out
xchg
xchg
outsl
fs
jno
xchg
add
add
in
mov
pop
mov
xor
cltd
adc
mov
nop
cmp
push
int3
xchg
adc
dec
jmp
adc
jge
adc
movsl
inc
std
mov
lea
mov
mov
jg
inc
inc
nop
xchg
scas
dec
daa
insb
inc
mov
jo
subl
out
fdivrs
int
add
sbbl
fsubs
movsl
sarb
and
and
pop
test
sub
cmp
pop
cmpsl
dec
pop
inc
aam
add
xchg
sbbl
mov
mov
adc
aaa
sub
jle
inc
mov
test
jecxz
inc
jle
mov
fidivl
add
in
aaa
mov
pushf
test
or
push
and
dec
scas
movsb
decl
idivb
sbb
inc
mov
into
adc
adc
mov
js
int3
jae
mov
mov
decl
cmc
add
inc
adc
pop
hlt
cmp
hlt
fstpt
mov
sbb
scas
out
movsb
cmp
outsl
adc
mov
pop
cmpsl
cmp
sub
sub
sbbb
in
daa
sbb
add
sub
mov
inc
lcall
shll
in
cltd
inc
sub
inc
dec
in
and
or
sub
enter
mov
cmpl
in
loope
std
mov
mov
or
or
repnz
shrl
mov
push
xorb
cmp
clc
shlb
fsts
fsubr
mov
out
test
std
inc
sub
jnp
dec
adc
pop
add
mov
cltd
into
popf
scas
ljmp
popf
out
xor
jg
pop
sbb
stos
sbb
jp
xchg
inc
out
adc
rcrl
divb
cmp
add
dec
es
xchg
cmp
imul
jbe
test
mov
ja
push
or
mulb
mov
hlt
imull
cmpsl
sahf
pop
pop
add
jno
add
aad
pop
jge
in
out
add
pop
jo
push
inc
testb
xchg
call
data16
mov
mov
jg
mov
mov
pusha
js
out
mov
or
lods
mov
xor
inc
idiv
mov
mov
arpl
push
or
mov
aam
push
stos
pop
and
xchg
sbb
jg
push
stos
test
push
xchg
shlb
ret
lret
pop
std
jmp
mov
pushl
pop
cltd
lret
movsb
mov
mov
fadd
sbb
cmpsb
mov
push
add
in
insl
inc
or
lock
cmp
sub
inc
pop
popa
or
mov
xchg
rolb
sbb
outsb
or
insb
add
fildll
loopne
mov
and
lcall
cld
out
mov
stc
add
fldenv
xor
adc
inc
inc
stos
inc
nop
mov
add
mov
sbb
popa
mov
incl
mov
xor
or
pop
xor
jns
mov
mov
add
mov
pop
fcmovne
and
xchg
cmp
outsl
popf
mov
je
push
decl
aas
cld
push
dec
inc
push
iret
lods
cmp
dec
fcomip
jg
in
or
push
inc
imul
sbb
mov
xlat
adc
mov
xchg
dec
ficompl
dec
or
clc
incl
cli
mov
sub
repz
inc
inc
pop
ljmp
add
dec
jb
mov
int3
aam
popf
jmp
hlt
sub
jmp
jmp
and
pop
add
in
hlt
bnd
dec
push
mov
orl
rclb
cltd
mov
frstor
or
lcall
repz
xchg
scas
loopne
imul
or
pop
leave
xchg
cltd
cli
jmp
outsb
ds
cmp
mov
pop
jge
subb
rclb
push
int3
push
mov
inc
mov
cmpsb
pop
pushf
je
fsts
pop
insb
ljmp
into
lcall
or
lds
push
outsl
xchg
ds
int
push
jbe
outsb
lods
sub
inc
das
sarb
and
divl
pop
fnsetpm(287
testl
mov
ja
inc
subb
cmp
pop
sahf
div
or
mov
sbb
jg
icebp
mov
sbb
add
xchg
inc
add
insl
hlt
mov
add
sbb
sbb
shrl
adc
pushf
cli
and
gs
ss
mov
ljmp
loope
mov
aas
push
dec
ja
push
inc
daa
inc
into
iret
ljmp
mov
lcall
fcmovnbe
or
lret
out
inc
lret
arpl
inc
or
inc
ja
mov
mov
stos
repnz
inc
nop
pop
int
aad
rcll
stc
pop
sub
inc
mov
jmp
enter
pop
adc
adc
mov
pop
popf
je
repz
arpl
rorl
jne
movsb
inc
add
sbb
test
push
testb
adc
mov
mov
cmc
fadds
sbb
and
out
inc
loop
das
push
jg
daa
add
mov
daa
mov
les
sbb
mov
inc
incl
add
xchg
or
scas
mov
js
aam
and
or
iret
mov
les
lret
popa
sbb
dec
dec
inc
movsb
sub
into
xchg
push
daa
dec
pop
aad
rorb
mov
outsl
xchg
push
sub
jmp
loop
add
rcrb
add
sti
incl
mov
jo
xor
adc
scas
test
stos
sti
and
and
test
mov
mov
sbb
js
ret
or
push
jl
cs
pop
mov
mov
es
cmp
cmpsb
dec
jecxz
or
mov
ss
aas
cli
mov
mov
daa
xor
inc
lcall
sbb
push
sbb
adc
jno
push
mov
outsl
and
sarb
scas
xchg
cmpl
jl
dec
xchg
mov
incl
mov
adc
mov
dec
rcr
pop
clc
fcomip
push
shll
or
jnp
mov
roll
jo
shrl
dec
dec
jo
jecxz
fsubrl
stos
dec
std
mov
mov
sub
sbbb
stos
dec
mov
jbe
scas
jno
cmp
adc
lods
repnz
push
or
cld
pop
push
jp
add
mov
orb
mov
fiadds
mov
push
fcoml
cs
sub
lods
fs
clc
sbb
mov
aam
or
pop
mov
jle
aam
add
push
xor
push
lcall
push
add
outsb
adc
jns
sub
mov
ret
repnz
add
dec
stos
dec
or
aam
xchg
outsl
xorb
sbb
enter
pop
cmpsb
repnz
jle
lcall
call
mov
cmpsb
jnp
outsl
xor
ret
sbb
int
sub
pop
jg
outsl
cmp
pop
insl
test
insl
ljmp
bound
jecxz
lret
xchg
jb
add
ljmp
mov
ss
outsb
xchg
popa
out
xor
push
cwtl
jno
rolb
xor
sbb
dec
popf
xchg
sub
test
enter
hlt
sbb
lock
pop
sbb
test
adc
ss
adc
std
jg
cmp
mov
mov
imul
sahf
sarb
cmp
sbbl
push
cmpsl
loop
loopne
stos
adc
push
adc
lock
js
imul
xor
add
fcomp
mov
into
inc
aam
call
std
test
fwait
jnp
xlat
cmpsb
loope
fdivr
int3
cmp
test
pop
inc
xchg
je
rcl
ljmp
jo
pusha
mov
lea
xchg
lock
inc
roll
jle
leave
je
xchg
pop
push
fistl
clc
sti
imul
sbb
daa
mov
daa
pushl
cld
pushl
sub
ljmp
mov
popa
dec
add
insl
pop
out
incl
ljmp
sub
sbb
out
sub
add
in
pushl
cld
xchg
ret
arpl
jge
adc
and
add
jle
in
repnz
popf
scas
cli
outsl
aaa
std
call
loop
xor
pop
aad
xchg
notl
push
inc
out
pop
cmp
in
xchg
and
cmpsl
repz
sbb
pushf
jno
xchg
clc
jmp
jg
call
mov
jg
ljmp
ljmp
int
pop
movsb
ret
or
mov
push
and
mov
inc
into
mov
rorb
addl
jg
adc
or
ljmp
pop
adc
fwait
jmp
lods
lods
cmp
xchg
push
test
pop
daa
movsl
xchg
pusha
hlt
add
pop
shrb
or
push
jg
inc
enter
mov
xchg
pop
gs
scas
pop
add
push
in
mov
cmp
pop
out
sbb
sbb
push
outsb
pop
pop
jbe
add
outsb
iret
xor
popa
inc
loope
xor
or
arpl
cmp
dec
mov
pop
mov
push
popf
std
lcall
jl
xor
jecxz
mov
pop
aas
pusha
xchg
int
ljmp
nop
mov
push
cmp
ss
arpl
cs
popa
aaa
subb
movsb
push
mov
mov
jbe
or
mov
dec
add
push
jae
std
mov
imul
pop
aam
cmpsb
pushl
or
sub
sbb
cs
subl
fisubrs
jp
das
add
cmp
ss
cli
mov
ret
adc
iret
xor
and
pop
loopne
jne
dec
pop
mov
pop
push
inc
push
jl
mov
add
or
enter
rcll
sub
push
gs
add
scas
xchg
xchg
jge
pushf
jle
inc
mov
mov
cmpsb
cmp
or
pop
sbb
jmp
or
inc
sbb
loop
ljmp
cmp
jle
shll
movsb
mov
fbstp
fdivrs
dec
cmp
test
ss
xchg
sub
test
scas
and
ljmp
in
loopne
push
lahf
fcomip
int
es
inc
cmp
lock
xor
hlt
jle
out
dec
cs
fnsave
jnp
movsl
push
push
jle
mov
mov
inc
popf
outsb
pop
mov
cltd
jp
imul
repz
in
scas
nop
icebp
dec
cmc
xchg
scas
addr16
and
cmp
dec
mov
mov
ljmp
lods
add
sub
mov
push
sub
out
scas
push
and
dec
movsb
add
nop
xchg
mov
jecxz
nop
hlt
jge
xchg
push
or
fs
adc
ret
mov
cmp
das
lods
inc
mov
jg
testl
pop
sbb
pop
bound
sbb
in
sbb
xlat
push
sbb
adc
test
mov
xor
or
cld
pop
xchg
inc
dec
mov
jg
add
dec
push
lds
cmp
add
adc
cmpb
cld
sub
pusha
inc
xchg
push
incl
pop
jp
push
dec
mov
and
xchg
jno
jmp
lock
fdivrl
push
xchg
xchg
inc
vpcmpeqd
scas
push
jns
fnstcw
mov
mov
loop
std
std
cmpl
jg
ret
jg
mulb
les
sbb
cmpsb
lret
mov
jle
je
das
push
cmp
xchg
jg
inc
sbb
pop
cmpsb
pop
mov
jl
jge
out
jp
out
fildll
movsl
das
loopne
hlt
es
and
and
clc
incl
pop
movsb
xchg
dec
jmp
and
out
sbb
push
adc
loop
cli
dec
add
pcmpeqw
pop
sub
shl
push
sub
cli
movsl
sbbl
not
ret
js
mov
decl
push
mov
sbb
shl
movsl
and
mov
fcmovne
sbb
ret
pusha
jg
bound
adc
pop
jo
mov
popa
mov
sbb
mov
or
push
mov
sub
cmp
fprem
xchg
or
cmpsl
movsb
adc
pop
push
hlt
sbb
cs
in
outsb
mov
jne
in
mov
clc
mov
mov
rorb
mov
decl
pop
push
stos
iret
push
pop
jmp
add
subl
cli
rolb
mov
fs
fwait
jns
pop
mov
out
cltd
mov
decl
lods
mov
sub
daa
je
fdiv
das
in
xchg
jno
or
mov
jl
cmc
stos
add
dec
jo
jns,pt
adc
xchg
sbb
jge
clc
lods
push
inc
addr16
bound
bound
or
dec
in
cmc
pusha
fsubl
mov
pop
cmpsl
test
rolb
cmp
and
ret
lock
adc
xchg
lret
dec
ja
or
adc
cltd
rcll
jl
sub
js
fisubrl
xchg
pop
adc
rep
xchg
pusha
pop
das
insl
mov
mov
leave
sbbl
or
or
push
inc
pop
push
andl
nop
js
push
pop
jo
jmp
xchg
jno
push
or
cmp
hlt
outsl
add
or
daa
notl
int3
dec
xor
imul
shrl
rcrl
inc
sbb
dec
into
inc
repnz
mov
stos
jno
stos
ss
into
push
loopne
stc
pop
ljmp
lds
pop
aas
add
pop
jl
sbb
lods
inc
cld
cmpsb
jmp
or
add
inc
call
outsl
fistl
das
cmp
std
dec
ficompl
xchg
inc
and
out
icebp
imul
test
fsubrs
aam
mov
pop
cmpsl
pop
hlt
stos
outsb
cwtl
roll
ljmp
bound
test
loopne
push
pop
adc
stc
sbb
sbb
dec
sbb
pop
mov
pop
mov
and
jne
xchg
int
jb
outsl
add
cld
dec
xchg
cmp
sub
dec
mov
ljmp
call
or
cld
imul
jae
inc
jecxz
sbb
pop
pusha
mov
cmpsb
sub
sbb
jnp
pop
sbb
fcomip
gs
lahf
sub
or
aaa
xor
adc
insl
loopne
cmpsb
and
jg
stc
dec
add
adc
inc
or
sub
incl
adc
push
dec
add
jns
mov
add
xchg
fxch
mov
lods
xor
stos
jne
filds
scas
test
lcall
incl
sahf
xchg
xchg
add
popf
lahf
sbb
pop
lods
or
xchg
push
xchg
outsl
clc
mov
cmp
or
inc
test
pop
mov
mov
push
cld
sbb
mov
loopne
jle
lock
mov
xor
lret
out
sbb
cld
stos
inc
xchg
pop
xchg
mov
xor
in
ss
lods
add
add
cmp
loopne
js
push
fisttpll
jb
mov
jae
or
add
scas
imul
test
jg
push
sub
sbb
lods
sti
and
scas
dec
sub
jae
mov
fbstp
or
lock
xchg
cmp
inc
inc
lods
push
xor
push
lods
call
pop
push
pop
mov
out
pop
lock
frstor
lock
cmpsl
pop
imul
pop
ljmp
and
je
xchg
dec
cmpsl
stos
lahf
repz
ja
das
cli
pop
fdivrl
push
neg
pop
movd
and
fmull
xchg
and
std
mov
sbb
push
idivb
dec
push
fsubp
dec
je
or
inc
fisttpl
daa
add
and
mov
adc
aad
scas
hlt
cmp
into
jmp
mov
inc
dec
dec
cmpl
lock
sub
pop
push
inc
loope
mov
cmp
mov
call
mov
jge
add
push
pop
mov
cmpsl
outsb
pop
outsb
divl
inc
or
jecxz
pop
lods
cmpsb
lret
sbb
movsb
jo
in
filds
aaa
and
adc
mov
clc
sbb
incl
sbb
imul
xchg
out
cmp
mov
leave
das
and
push
out
mov
int3
arpl
int3
pop
xorl
incl
mov
jl
mov
test
popl
fildll
push
add
jo
push
daa
pushf
lds
mov
loop
mov
jbe
lods
sbb
push
inc
ds
loopne
jmp
mov
sbb
rorl
dec
enter
inc
add
das
mov
xchg
jo
sub
or
es
repz
in
mov
pop
sbb
push
push
out
mov
mov
out
inc
adc
notl
cwtl
jle
pop
insb
mov
cmp
or
cmc
decl
popfw
out
jecxz
add
sub
push
into
xlat
cmpsb
xchg
jmp
das
sbb
ss
lahf
dec
cmp
cmpsb
call
mov
cld
nop
out
and
push
mov
daa
xchg
mov
rep
pop
xor
mov
sti
addb
out
fs
pop
push
sub
decl
mov
or
push
cld
or
imul
and
addl
sbb
xchg
lret
out
clc
jmp
sahf
mov
jp
sub
lcall
cmp
loop
mov
push
fs
and
in
add
mov
repnz
add
mov
ss
jmp
loopne
or
pushf
shl
outsb
or
pusha
iret
sbb
xchg
or
and
mov
dec
hlt
mov
pop
repz
ss
push
add
ficompl
mov
dec
lods
add
sbb
mov
out
jns
push
push
mov
int3
and
cltd
incl
or
jecxz
or
ret
push
adc
jbe
adc
cmp
or
je
insl
xchg
repnz
jmp
xchg
fmull
shrb
mov
push
inc
out
mov
mov
fsubp
jg
hlt
pop
sahf
fisubl
ja
jnp
in
mov
jecxz
clc
adc
push
xor
pusha
nop
dec
mov
incl
push
shlb
cmpsl
jb
arpl
adc
fs
push
fldl
xchg
adcb
push
xor
lds
das
dec
sub
cmpsl
and
fldcw
int
push
cmp
mov
cld
out
sub
sub
xor
loop
fcomip
pop
adc
dec
push
hlt
mov
mov
lcall
cmpb
out
push
add
jne
in
fcmovb
dec
push
jmp
out
jo
mov
sahf
stc
lods
pop
std
ljmp
inc
lret
lea
inc
in
cli
lea
xchg
lods
mov
les
or
adc
xor
push
xchg
pop
mov
insb
stos
pop
dec
fs
mov
cmp
inc
int
dec
and
push
rol
cmpsl
pop
pop
push
add
lret
out
add
je
mov
stos
mov
mov
mov
mov
sbb
pop
mov
or
pop
and
jne
and
push
inc
ret
fcoms
lods
xchg
push
adc
dec
imul
adc
fwait
xchg
xchg
add
call
jo
jl
push
sbb
cli
fidivrl
mov
push
test
xor
mov
shl
stc
push
xchg
mov
mov
popa
imul
mov
sub
cld
jg
cmc
lret
jno
popf
stos
jge
jns
jnp
lds
jl
cmp
cltd
push
push
mov
fistl
jno
and
xchg
mov
add
push
cld
and
sbb
pop
mov
out
or
ss
out
dec
or
jp
hlt
scas
sbbb
arpl
or
popf
mov
mov
aad
popf
ds
adc
sbbb
outsl
add
pusha
cli
call
mov
scas
ja
push
es
jg
enter
es
mov
cs
sub
pop
xor
jb
bound
shll
push
fcomip
pop
pop
or
push
sbb
data16
rorl
mov
pop
xchg
mov
loopne
gs
lahf
push
mov
cli
test
push
jo
int
xorb
cmp
push
clc
sti
js
out
add
xor
mov
mov
jg
fbstp
pop
or
push
adc
and
loop
lock
push
push
or
jnp
ret
push
stc
orl
push
pop
and
dec
add
cld
test
testb
xchg
scas
inc
pop
shrb
gs
cmp
aam
clc
sub
mov
test
sub
sbb
out
cli
decl
clc
or
xchg
xor
sti
hlt
ja
push
loopne
fisubs
jb
xor
or
adc
jg
fwait
mov
pop
je
cmp
pop
push
inc
xchg
and
adc
ljmp
dec
cld
aam
xchg
and
push
sbb
push
mov
pop
mov
pop
sub
mov
hlt
cmp
add
call
adc
push
inc
clc
push
dec
add
push
fsubrp
jno
leave
lcall
xchg
dec
dec
sbb
pop
and
mov
mov
rcrl
nop
push
sarb
pop
mov
mov
mov
loop
xor
push
in
or
adc
test
cs
shl
in
jg
or
xchg
cmp
jo
incl
repnz
or
pop
inc
aam
sub
xor
sbb
pop
cmc
lds
dec
xor
sbb
movsl
mov
pop
mov
mov
mov
bound
push
outsl
mov
push
cmp
insl
and
pop
adc
or
jb
cwtl
lods
and
out
aam
sahf
loop
mov
xchg
out
cli
scas
sbb
sub
popa
sti
sahf
mov
iret
mov
cli
pop
lods
xchg
jmp
leave
sub
dec
pop
inc
jmp
fisubrs
jle
enter
pop
sbb
and
lcall
into
test
outsl
nop
inc
cmp
inc
leave
cmp
movsb
mov
imul
xchg
and
lcall
scas
xchg
pop
pusha
push
notl
inc
and
dec
les
jge
enter
decl
aad
inc
lret
or
into
adc
push
lods
jmp
and
jno
mov
and
xchg
inc
enter
dec
jb
sbb
inc
aas
loop
fsubs
adc
faddl
jge
add
insb
popa
mov
lds
movsb
loope
mov
sub
cmc
je
mov
xor
mov
inc
xchg
fbld
push
jne
lcall
push
hlt
jg
fisttpll
ret
cwtl
into
push
std
hlt
addr16
mov
shrb
add
cmc
ja
and
mov
inc
pusha
push
push
jmp
lret
lcall
mov
test
add
jnp
test
sbb
push
inc
push
pop
pop
loopne
sahf
pop
sarb
cmpsb
shrl
push
movsb
push
xchg
or
in
repz
pop
aas
cmp
fmuls
mov
mov
clc
pop
sub
mov
pop
cld
dec
jle
fwait
push
pop
jbe
js
repz
pop
adc
dec
mov
test
scas
insb
imul
add
push
cld
flds
addr16
jb
jg
lds
and
daa
sbb
and
mov
ficomps
lret
adc
pop
xor
jmp
into
sti
mov
adc
push
mov
es
fbstp
lret
mov
imul
clc
or
ljmp
mov
mov
add
popa
mov
cmpsl
cltd
or
je
outsb
lods
sti
das
jg
add
stos
fists
pop
xchg
jno,pn
or
sti
sbb
xlat
sub
jo
mov
test
mov
cwtl
jge
mov
sub
shrb
std
insb
sbb
jb
cmpsl
adc
xchg
sar
call
repnz
mov
rcrl
mov
cmp
call
jle
or
and
jne
cmp
xchg
lock
ret
pop
jl
sbb
clc
or
sub
dec
jl
sub
sahf
test
fwait
mov
in
sub
jp
and
xchg
and
das
outsl
lea
or
or
mov
popa
xchg
adc
add
inc
aam
pushf
push
and
inc
test
and
repnz
les
push
inc
inc
ret
out
test
xchg
lods
pop
cltd
xchg
std
jo
inc
rcr
fidivs
xor
cmpb
push
test
sbb
scas
repnz
rcr
rcrb
cmpsl
lock
push
cwtl
imul
mov
and
adc
and
outsb
jle
jg
add
push
cmpsl
pop
mov
icebp
fists
add
add
iret
push
xchg
xor
in
adc
adc
gs
js
je
pop
mov
addr16
adc
movsb
out
fidivl
mov
shll
sbb
add
xchg
or
cltd
mov
cmp
into
das
scas
call
rcrb
pop
push
or
in
pop
mov
pop
inc
xchg
not
mov
sbb
xchg
dec
adc
push
movsl
inc
inc
inc
lock
in
or
xchg
mov
dec
sarb
mov
scas
jle
jle
cmp
ds
int3
jb
mov
xchg
pusha
rcll
jg
cmp
mov
fildll
dec
ja
data16
jge
dec
xchg
rorl
jne
fwait
das
call
push
fstl
adc
mov
addl
fnstcw
lret
sbb
aaa
mov
std
fistps
inc
fsts
fdiv
arpl
or
test
mov
add
cli
call
outsl
pop
int3
es
sub
adcb
orb
inc
ds
cmp
cmpb
xor
rorl
dec
mov
jbe
ja
rcrl
lcall
pop
out
pushf
jb
int
rcrb
jns
dec
inc
js
cmc
push
sbb
call
xor
jnp
cmpsl
sbb
mov
ss
aaa
shrb
std
pop
shll
cmp
inc
xchg
pusha
lds
mov
jl
jg
inc
in
adc
pop
and
inc
xchg
pop
jae
add
mov
mov
scas
scas
cmp
pop
clc
or
push
push
adc
shll
das
sar
adc
push
and
push
push
out
adc
or
sub
ret
int
das
adc
movsb
mov
std
mov
pop
shlb
push
enter
push
dec
dec
mov
mov
adcb
adc
cmp
in
inc
loopne
mov
fisttps
dec
cmc
push
mov
sbb
mov
xchg
add
fcomip
add
cwtl
mov
cmp
lock
jmp
sub
push
loop
mov
cmp
xor
incl
and
jnp
lock
sub
insb
sbb
pop
test
adc
jmp
fwait
adcl
faddl
dec
jno
adc
fcompl
dec
adc
inc
outsl
mov
cli
jmp
enter
loope
inc
xor
cmp
pop
in
fiadds
mov
mov
inc
movsb
push
je
xchg
aam
aam
outsb
lods
push
xor
stos
inc
ljmp
and
push
jmp
loope
inc
rolb
sahf
sti
iret
push
flds
pop
xchg
sub
add
jg
or
mov
imul
les
mov
and
imul
jg
jno
mov
jbe
pop
dec
int3
mov
das
stc
cmp
sbb
sub
sbb
pop
and
pop
fadds
mov
pop
xor
test
scas
xor
xor
dec
xlat
int3
sub
ljmp
fwait
dec
add
push
iret
out
ds
aam
popf
cmp
push
mov
stos
jmp
pop
mov
push
rolb
mov
clc
jp
push
test
test
incl
fcmovne
mov
sub
jg
fsubp
sub
push
cmp
jo
jmp
mov
sar
popl
add
ss
ret
dec
dec
in
pop
or
mov
dec
pop
ret
addr16
or
push
lea
jg
and
and
icebp
pusha
in
mov
test
pushaw
cmp
test
mov
add
fldz
flds
or
out
insl
push
mov
imul
insl
mov
inc
pop
loope
jle
outsb
ja
aas
lock
push
mov
and
call
push
or
sarb
add
push
fcomi
mov
push
push
pop
inc
sub
xlat
dec
jp
shlb
aad
xor
add
imul
sub
mov
xchg
scas
jge
push
mov
sbb
sub
mov
lret
out
mov
sub
jo
inc
jbe
and
cltd
std
mov
jg
aam
mov
fwait
nop
orl
mov
jp
ljmp
adc
lds
dec
addr16
jp
cmpsb
movsl
in
mov
bound
push
xchg
adcb
iret
mov
jae
push
and
cmp
sar
leave
or
cmpsl
adc
std
fucomi
pop
shl
lock
push
cmp
hlt
xor
inc
inc
cmp
cmp
add
insb
movsb
and
mov
call
incl
shlb
sub
inc
lods
cmp
decl
adc
mov
outsb
rcrl
cmp
decl
lcall
nop
mov
bound
rorb
or
out
rcrb
or
bound
jl
scas
sahf
loopne
pop
mov
adc
or
jg
test
imul
imul
sub
subl
jne
fdivs
add
push
push
cmp
jl
in
incl
add
jns
test
pushf
shlb
sahf
divb
ret
mov
sbb
jno
push
and
cli
iret
mov
push
dec
adc
cmc
mov
jno
ffreep
lods
test
push
call
jno
fs
lods
xchg
xchg
and
push
sbb
inc
dec
insb
mov
pushl
xchg
xchg
jnp
ljmp
test
scas
push
out
mov
aas
decl
xchg
in
cmp
xchg
les
and
lcall
inc
xchg
inc
je
ja
mov
iret
ljmp
enter
mov
push
sbb
xchg
leave
mov
incl
or
fwait
loope
ret
cs
push
inc
mov
hlt
lods
das
jg
mov
push
enter
scas
inc
aam
mov
or
jg
sbb
scas
pop
cwtl
test
adc
jp
dec
and
mov
sub
mov
fdivrs
leave
test
cli
pop
hlt
in
sub
aad
ljmp
dec
comiss
in
mov
sbb
mov
and
mov
jo
minps
or
aaa
push
inc
cwtl
addr16
jle
es
pop
stos
int
cltd
imul
cmp
fsubrs
push
into
shlb
outsb
aaa
xor
mov
into
inc
pop
adc
pop
jae
jle
aad
aaa
cmp
pusha
sub
push
pop
xchg
sbb
pop
les
mov
jno
adc
es
lcall
jns
push
loopne
call
cmp
or
cltd
jb
pop
xchg
pusha
mov
test
call
jp
lret
cmp
cmp
fdivrp
push
and
out
adc
inc
aad
mov
add
mov
mov
ljmp
mov
aaa
sub
fldcw
push
mov
sbb
mov
and
adc
fwait
shrb
in
inc
jnp
into
lret
or
mov
shll
or
leave
sar
xchg
mov
into
cli
or
inc
jae
ss
mov
aas
jle
shll
bound
xor
add
dec
xor
int3
xchg
xor
ja
mov
pop
std
int3
stc
dec
mov
xor
mov
and
nop
stc
or
adc
das
and
pop
enter
sub
aam
mov
shr
fistps
loopne
pop
mov
fcmovne
adc
int
mov
mov
pop
dec
das
or
call
clc
shlb
jns
sahf
pop
fstpl
inc
lea
fsqrt
sbb
js
dec
push
push
mov
hlt
gs
and
imul
shrb
rcl
dec
mov
nop
je
stos
outsl
push
push
pop
jg
insb
push
push
sbb
addr16
push
add
mov
pop
or
mov
push
arpl
jl
push
mov
popl
jo
jne
fsubrl
sub
subl
fucomip
sbb
xor
xor
jns
mov
mov
mov
mov
gs
lock
inc
or
jae
cltd
sbb
sub
push
jle
insb
unpcklps
add
mov
mov
mov
int3
out
sbb
jb
mov
insl
cmp
aad
enter
dec
add
idiv
lods
in
add
fisttpl
rol
pop
mov
mov
add
bound
pop
jo
lock
pop
mov
sbb
fucomp
das
xchg
divb
out
mov
shlb
inc
mov
push
mov
add
inc
pushf
mulb
call
aas
js
test
jge
inc
add
scas
push
js
or
jg
fdivrs
mov
aas
cmpsl
test
movsl
sbb
aam
push
loopne
in
fidivs
and
jno
xor
adc
inc
aaa
fsubrs
test
mov
frstor
and
push
clc
push
aas
add
or
dec
or
test
leave
jbe
push
push
add
mov
call
jbe
jnp
dec
faddl
shr
loopne
xchg
push
in
jmp
add
cmc
add
call
fs
or
hlt
js
fmuls
mov
jecxz
data16
add
dec
aas
add
mov
jmp
cmpsl
stos
xchg
out
and
movsl
ret
lret
inc
sar
jmp
dec
add
jbe
xchg
lahf
sbb
js
test
mov
push
imul
pop
sti
dec
in
cli
mov
out
dec
xchg
inc
xor
fwait
lock
hlt
es
jecxz
fsub
js
ss
es
push
xor
loop
incl
pop
stos
xor
loope
or
shrb
enter
mov
mov
rorb
jp
fiaddl
and
inc
inc
lcall
cmp
jecxz
cmpsl
cmp
push
mov
dec
in
mov
and
sbb
hlt
jl
jecxz
rcl
mov
cmpsb
dec
mov
cmpsl
jle
idivb
or
pop
decl
aaa
stc
cmp
xchg
std
cld
pop
pop
test
lea
cmc
mov
push
pop
xor
lret
mov
xor
out
jb
pushf
movsl
fisubrs
fdivp
ljmp
fmul
pop
cmp
lods
fs
sbb
mov
mov
sub
lods
pop
sub
popf
pusha
sub
dec
cmp
xor
ljmp
outsb
cmpsb
mov
shll
scas
and
imulb
or
clc
das
pusha
cmp
pop
push
ret
sub
aaa
insb
hlt
bound
std
add
fdivr
cmc
pop
aad
sarl
mov
add
pop
mov
mov
push
mov
popf
pop
popf
lods
fsubrs
cwtl
fistpll
pop
jp
sub
aas
and
es
rorb
jecxz
push
cwtl
cltd
jp
enter
cli
aaa
test
shl
mov
jns
fidivrl
mov
sub
icebp
inc
lahf
insb
pop
ja
stos
cli
call
jo
test
fsubs
push
push
add
cwtl
imul
push
or
hlt
fmull
mov
push
dec
insb
lods
mov
jb
lock
ret
push
xor
pop
dec
and
or
cltd
ja
xchg
pop
es
jg
add
jp
mov
fisttpl
adc
push
leave
inc
cmc
ds
pop
lock
jg
cmp
pop
pop
ror
mov
xor
jl
in
scas
loopnew
push
add
mov
pop
ss
pop
out
mov
add
lahf
scas
inc
loopne
fisttps
xchg
jae
and
push
enter
int3
lods
hlt
mov
dec
mov
and
repnz
mov
cli
mov
mov
ljmp
loopne
or
dec
cmpsb
xchg
test
movsl
pop
jge
push
push
add
ret
das
add
stos
loope
xor
or
lock
decl
lock
outsb
loopne
pop
popf
imul
lock
pushl
adc
loope
mov
inc
cld
cmp
or
xorl
or
pop
icebp
add
inc
sbb
pop
gs
ljmp
incb
int
mov
mov
mov
xor
inc
pop
jne
or
dec
fsub
sub
movsb
mov
in
std
or
mov
add
aas
nop
and
add
imulb
lahf
stos
xor
ret
pop
sbb
jg
aaa
into
add
insb
rcl
push
cmpsb
jg
sbb
inc
sbb
das
shlb
je
cwtl
or
pop
rol
xor
xlat
xlat
fisttps
push
mov
push
dec
fsubr
push
test
mov
push
add
lret
insl
test
inc
lcall
mov
jl
notb
data16
out
lock
xchg
inc
sub
jg
pop
add
shll
xchg
iret
int
push
das
fdivrl
cs
add
adc
sub
outsb
mov
pop
and
xor
sbb
xchg
pop
pop
sub
jae
mov
pop
xchg
mov
loopne
leave
and
les
jb
fdivrp
push
movsb
add
xchg
push
rorb
ljmp
xor
or
pushf
cmpsl
push
mov
movsb
mov
sahf
mov
push
incl
inc
fcoms
test
out
pop
dec
pop
inc
ds
dec
cs
cli
fistpll
adc
jne
or
push
pop
daa
mov
decl
xchg
jl
rep
cmpsl
into
fimull
inc
mov
adc
stos
loopne
outsb
cld
cmpsl
mov
pop
push
sbb
lds
lahf
lods
mov
lods
pop
xchg
test
sbb
sbb
lahf
lods
clc
push
test
pop
cld
outsb
aam
xor
jne
cmp
jge
cld
jno
push
jb
sub
or
ss
mov
sbb
fldenv
shll
rcll
lds
jo
lcall
mov
sub
jp
push
sti
mov
pushl
and
notl
nop
mov
jg
mov
push
add
lds
repnz
rclb
fstl
popa
loope
xchg
repnz
lds
adc
stos
in
add
loop
nop
in
hlt
mov
icebp
cmp
mov
push
xchg
lods
out
dec
popa
sub
js
popf
xchg
das
mov
jmp
xlat
notl
scas
add
pop
cmp
cmp
scas
pop
out
add
out
cli
pop
bound
inc
xor
mov
cmpl
xor
add
mov
xor
or
xor
mov
jge
pusha
or
cmp
js
sub
outsb
clc
out
rcr
js
and
and
mov
in
call
fidivl
lock
fdivs
sub
fcompl
aaa
mov
xchg
cmpb
or
and
cmp
push
pop
dec
or
lcall
mov
pop
xor
std
incl
push
addr16
mov
aad
out
cli
push
cltd
int3
pusha
shl
xchg
cmc
rcrb
subl
leave
std
es
add
xchg
jecxz
xchg
cltd
inc
lcall
and
sub
adc
cld
fisttps
fs
pop
push
pop
movsl
scas
xlat
sbbb
xor
pop
push
pop
push
pop
stos
movsb
cmp
mov
ret
les
adc
lock
fimull
add
mov
add
and
fisubl
mov
add
movl
cmpsl
repnz
dec
jle
cwtl
jg
lock
or
sub
out
xchg
lock
shr
fadds
jle
rol
scas
jecxz
xor
clc
lret
repz
push
dec
pop
sar
mov
pop
pop
in
or
aaa
or
pop
divb
pop
and
rclb
mov
cs
outsb
jp
scas
data16
sbb
pop
test
pop
fdivrp
lea
inc
xor
data16
and
std
insl
mov
nop
cltd
xor
push
adc
outsl
shlb
mov
fisubl
fmull
inc
clc
or
dec
jmp
es
push
hlt
and
ret
sub
leave
ja
push
ret
mov
inc
sti
sti
sub
cmpsl
lret
cmp
or
dec
push
or
adc
shrb
add
sbb
lods
add
mov
sub
jb
xor
std
sbb
filds
pop
repz
in
jno
push
or
mov
pop
inc
mov
aad
sbb
stos
pusha
es
es
mov
in
je
add
int3
xor
xorb
push
nop
push
sub
jno,pt
mov
pusha
daa
adc
fnstenv
out
xor
xor
and
jg
js
stos
mov
pop
in
sub
pop
sub
stos
sub
ljmp
repnz
pop
cltd
jle
cmp
cmp
jno
adc
cmp
insb
aam
mov
shll
mov
and
inc
adc
mov
adc
mov
pusha
pop
mov
cld
int3
enter
test
int3
insl
bound
lock
icebp
loope
into
jo
popl
dec
jmp
es
and
sahf
inc
sbbl
stc
call
mov
call
sar
mov
adc
mov
je
in
stos
sbb
cmp
dec
inc
bound
pop
in
cli
dec
and
imulb
lods
icebp
loop
lods
jnp
pop
clc
das
mov
mov
fwait
insb
cltd
shlb
adc
clc
clc
and
aaa
lds
mov
inc
or
lods
push
fs
fbstp
push
ljmp
jle
mov
mov
mov
aaa
mov
mov
cs
push
clc
and
dec
mov
out
clc
inc
adc
or
and
div
loop
clc
aas
loop
fsubrl
cmp
lret
in
ffreep
pop
fiaddl
arpl
pop
pop
and
xor
loop
jnp
or
jno
or
mov
movsb
lcall
cld
pop
cmp
dec
jno
cmp
lock
xchg
jg
ss
xor
mov
shll
ffreep
sar
roll
ret
repnz
pop
jmp
fildll
xchg
xor
push
mov
incl
lahf
and
sbb
hlt
js
xchg
mov
xor
push
int3
mov
sub
mov
pop
es
push
pushf
xchg
mov
jmp
xor
mov
fucomi
dec
out
cmp
out
fisttpl
cmp
out
mov
pop
add
or
hlt
add
movsb
pop
popa
mov
sbb
cld
mov
inc
js
repz
js
cmp
ljmp
loopne
loop
jne
cmpsl
sub
in
repnz
fucom
insb
testl
js
lods
sub
jbe
icebp
lcall
movsb
mov
jg
cmp
popa
cmp
ficoml
inc
xor
inc
lods
push
adc
lock
sub
xchg
pop
cmc
insl
xchg
sbbb
mov
rclb
pop
hlt
push
std
out
adc
insl
add
fwait
xchg
rorb
pop
mov
push
jge
fs
sti
loop
mov
cmp
mov
sub
lcall
dec
jp
add
das
push
sub
arpl
jge
adc
mov
jo
add
push
les
and
divb
cmp
or
cmpsl
xchg
lahf
dec
std
inc
mov
lret
jmp
nop
loop
dec
in
xlat
xchg
loopne
sub
fcmovu
out
add
loopne
mov
mov
sub
push
push
lret
jno
ljmp
add
push
inc
mov
subb
cmpsl
sub
shrb
loope
add
jne
inc
dec
out
stos
lock
ljmp
out
jmp
scas
sub
xor
add
ret
or
sbbb
cs
xchg
test
or
cli
dec
push
push
mulb
adc
adc
xchg
add
push
add
mov
cmp
push
loop
sub
in
and
cs
sub
cmp
and
pop
pop
mov
mov
dec
cltd
adc
aaa
xor
shlb
xorl
push
enter
jg
ds
loopne
mov
mov
shlb
aam
lock
lret
data16
in
rolb
mov
or
lds
pop
adc
sub
dec
pop
test
cld
mov
sbb
adc
test
pop
or
loope
sarl
lock
loop
inc
jb
sbbl
call
cwtl
aam
fisubrl
out
pop
ss
cmpsl
jg
dec
test
dec
cmp
sahf
sub
in
pop
sbb
push
or
push
xchg
lahf
add
jge
push
sbb
mov
xor
push
adc
jg
mov
frstor
js
dec
loopne
aaa
push
adc
xor
or
dec
mov
adc
pop
fsubrl
cltd
add
sub
les
test
inc
shrl
cmp
and
incl
dec
sbb
xor
pop
fwait
cmp
mov
out
or
sar
repnz
cli
xchg
sbb
test
adc
sarb
mov
test
lcall
repnz
cli
push
jmp
or
xor
push
sbb
ret
fistl
cmc
enter
push
ret
fwait
mov
lock
cwtl
adc
pop
or
mov
or
inc
sub
jo
cmp
sbb
xor
mov
mov
lret
jbe
inc
pop
sbb
frstor
mov
pushl
mov
repz
dec
mov
push
add
sub
cmp
fwait
fs
or
push
xchg
ror
jp
xor
sbb
iret
or
into
sti
push
sbb
fchs
mov
xchg
sbb
outsb
jo
push
mov
lods
adc
sbb
fistpll
ljmp
bound
sti
xor
mov
adc
subb
mov
pop
clc
mov
mov
ja,pt
add
sub
aad
imul
xchg
scas
add
sti
outsb
xchg
and
sub
sbb
mov
mov
push
pop
dec
or
jmp
ljmp
jg
test
lds
pop
dec
stos
pop
movsl
jg
jbe
dec
and
sbb
jecxz
scas
jnp
jne
pop
mov
add
sar
cmpb
les
mov
rcll
dec
stos
pop
mov
sub
xchg
jp
jecxz
inc
add
je
jo
mov
inc
into
scas
cli
pushl
push
jge
stos
inc
in
mov
fistps
mov
xor
xchg
mov
insb
into
inc
jmp
cmp
dec
jecxz
fstps
sub
orps
inc
or
jmp
das
lcall
test
push
push
imul
data16
fsubrl
cmpsb
ja
lret
mov
outsl
js
or
lods
jbe
pusha
cmpsl
rcrl
int3
add
mov
cli
pop
orb
push
jbe
jne
and
pop
pop
jbe
movsb
sar
div
lcall
addl
fmulp
sbb
mov
pop
sbb
mov
and
pop
mov
jns
hlt
mov
out
xor
and
inc
fmull
add
popf
pop
mov
hlt
inc
scas
rcll
add
test
cmp
dec
inc
pop
add
adc
cmc
xchg
mov
adc
dec
mov
stc
sub
cwtl
inc
ret
push
push
or
outsl
cmpb
ja
fst
adc
je
sub
dec
repz
pop
call
test
cld
into
push
lret
or
xor
sbb
inc
push
js
add
ljmp
cld
aaa
pop
jl
push
sub
jecxz
mov
push
movsl
push
pop
inc
in
daa
sub
xchg
bound
idivb
xchg
xor
jle
inc
mov
nop
in
push
icebp
jbe
vmaxps
jle
add
mov
xchg
call
out
cmp
inc
xchg
sahf
dec
xor
cmc
push
jmp
cmc
mov
jne
add
push
ds
push
in
sbb
add
into
adc
fsubs
mov
mov
push
sti
outsl
dec
sbb
sub
orl
jg
fisubs
add
loopne
fidivs
repnz
push
andb
aaa
or
js
dec
mov
push
outsl
inc
push
add
inc
sbb
mov
jmp
frstor
push
pusha
pop
imul
jecxz
inc
push
dec
out
clc
ret
adc
mov
out
js
test
sbb
pop
movsl
adc
je
mov
rorb
jmp
pop
outsl
in
rorb
call
fnstsw
add
and
cld
incl
shlb
outsl
or
xchg
stc
mov
jmp
jle
push
ret
lret
sti
jo
xchg
lods
jge
inc
xchg
cld
cmpsb
mov
outsb
push
ljmp
or
outsl
and
test
jg
sahf
repz
test
fcomip
push
loope
adc
enter
cli
scas
lock
pop
andb
lret
insb
mov
test
xlat
cmp
push
es
mov
mov
cmpsl
cmp
jg
mov
pushl
cmp
scas
or
mov
xor
jmp
dec
in
jmp
clc
scas
sbb
xchg
imul
loop
lret
vmulsd
bound
sahf
bound
push
fistl
fscale
xchg
aaa
xor
adc
sbb
clc
mov
cmpsb
mov
pop
cld
dec
ljmp
popa
dec
es
jl
into
add
jmp
jne
fdivr
mov
iret
leave
into
inc
jl
dec
push
add
jecxz
fs
pop
jae
cld
mov
movsb
js
aad
call
ret
sti
decl
shl
sarl
je
mov
jle
dec
ljmp
sarl
pop
insl
ja
jmp
mov
pop
stos
negl
add
lcall
mov
shll
test
adc
lods
jp
xchg
dec
sub
aaa
outsb
mov
mov
mov
or
shlb
ffree
push
mov
je
xor
pop
adc
out
in
fmul
lcall
push
shrb
filds
outsl
lods
push
push
clc
add
pop
jo
jmp
pop
mov
inc
adc
ljmp
je
jp
mov
mov
sub
and
dec
in
std
jmp
or
addr16
repz
mov
fidivrl
insl
mov
movsb
inc
incl
enter
xlat
rolb
clc
jb
push
das
daa
ss
fnsave
loop
adc
fwait
inc
fucom
and
int
hlt
insb
enter
mov
loope
loopne
xchg
imul
pusha
adc
loopne
pop
decl
decl
xchg
mov
cld
pop
orl
rcrl
jmp
gs
je
and
sub
xor
mov
outsl
js
fwait
mov
int3
ficompl
mov
pop
dec
ret
into
repz
outsl
mov
inc
mov
incl
xchg
loop
xchg
inc
pop
or
mov
push
aad
xchg
dec
inc
loopne
addb
shrl
sub
ds
test
mov
test
into
sbb
cmp
ss
std
sbb
sub
add
xorl
mov
xor
lret
es
in
xor
adc
push
adc
cmp
pop
pop
mov
add
cmp
dec
pop
hlt
aas
cli
or
fistpll
dec
les
cmp
pop
jle
mov
movsl
jo
je
in
mov
dec
aas
mov
mov
aad
ret
mov
fildll
repnz
or
stos
out
jb
cmpl
fsubl
xorb
mov
pop
mov
xchg
push
stos
jnp
add
sbb
sbb
jmp
or
push
or
dec
mov
insl
ret
loopne
push
dec
ret
sti
stc
inc
or
movsl
fs
stc
sbb
scas
ss
sub
js
push
into
jp
push
sub
adc
add
pop
movl
lock
and
xor
jae
subb
sub
stos
sbb
push
pop
add
and
fs
inc
fadds
ror
es
and
cwtl
ds
data16
int3
pop
outsb
push
mov
mov
mov
das
clc
cmp
xor
jb
xlat
cmpsl
jle
and
ss
gs
add
jg
dec
addr16
mov
lods
in
fnsave
loop
lea
shrb
incl
push
fistpl
adc
jl
test
sub
xchg
scas
stos
cmp
out
cmp
out
add
aaa
mov
inc
enter
enter
decl
out
jmp
shrb
movb
ficomps
mov
add
mov
testb
xchg
mov
sub
pop
stos
push
in
mov
call
repnz
ljmp
rclw
or
fcoms
and
pop
dec
out
lods
xor
push
inc
into
mov
decb
fidivl
ljmp
add
mov
jg
sbb
cmpsl
leave
mov
sti
arpl
movsb
jg
test
and
push
pop
daa
inc
loopne
jle
loop
and
or
add
in
xchg
mov
cld
filds
pusha
push
out
shl
nop
fildl
nop
cltd
cwtl
pop
rcll
push
add
incl
and
mov
sar
jmp
sub
out
and
xchg
cmpsb
cli
mov
cmpsl
sbb
pushl
xchg
call
pop
mov
push
movsb
adc
cmp
bound
clc
sub
mov
or
fs
push
sub
push
add
mov
mov
add
push
mov
ret
or
adcw
rorb
or
and
js
xchg
lea
aas
sar
ljmp
in
push
mov
xor
pushf
and
js
repnz
scas
cli
jmp
les
icebp
push
jmp
out
lds
je
incb
cmp
push
pop
sub
add
outsl
lds
cs
shrb
icebp
jg
mov
sbb
cmpsb
sub
loop
and
xchg
loopne
sub
sbb
divb
and
mov
pop
dec
push
inc
xchg
test
rol
andb
lret
sbb
andb
std
ficoms
icebp
mov
js
mov
sbb
cmp
lahf
jl
rclb
push
outsl
xchg
pop
icebp
int
clc
sbb
fcoms
mov
cmp
std
das
push
push
push
xlat
or
xor
lods
cli
popa
sub
ss
push
xchg
xor
repnz
mov
mov
add
movsl
lock
rcrl
pop
and
fwait
pop
loope
dec
and
mov
cmp
outsl
clc
stos
hlt
push
enter
jne
das
pop
loop
pop
xor
lock
divl
js
into
into
in
addr16
mov
scas
add
or
pop
jo
jae
fmulp
and
cmpsb
fldt
add
fnstcw
or
cmp
loopne
test
pmuludq
cmp
aaa
jne
lods
inc
dec
aam
sbb
shll
pop
mov
lods
add
and
jne
dec
adc
dec
lret
int
jle
orb
xor
push
lods
shlb
mov
pop
cmp
xchg
das
pop
adc
std
outsb
mov
lret
fmull
cbtw
dec
sbb
shrb
jno
out
es
xchg
xor
mov
aas
xchg
cmp
xor
push
jmp
mov
cli
push
xor
lods
enter
jbe
test
cmc
jne
xchg
rcrb
push
push
push
and
add
fcmovu
adcl
lock
aam
xchg
shll
aaa
aaa
and
into
add
lea
dec
inc
pop
add
test
out
xchg
cmc
fucomip
push
inc
cli
add
fs
cmp
mov
pop
dec
and
ja
and
adc
movsb
lds
test
mov
jecxz
daa
jl
or
adc
xchg
lds
hlt
adc
aam
jo
jle
inc
popa
xchg
stos
call
inc
mov
test
push
clc
or
fcomps
pop
add
shlb
das
xchg
into
mov
and
bound
divl
or
add
test
mov
xchg
lret
movsb
cmp
leave
xchg
call
call
decl
push
sub
or
xchg
pop
pop
or
cmpsb
mov
fildl
and
cmp
sub
mov
dec
inc
repnz
cmp
icebp
aas
mov
jle
in
inc
sahf
repz
testb
aam
xor
fidivl
sub
clc
pop
fdivp
or
fiaddl
repnz
or
sbb
pop
sbb
cmp
xor
cmc
mov
arpl
cmp
dec
aaa
loop
mov
push
lret
clc
cmp
std
andl
inc
mov
mov
add
or
popl
cmp
xchg
jg
lea
stos
add
adc
cli
stos
or
dec
je
or
sbb
adc
dec
push
mov
or
push
into
push
jg
icebp
ficompl
pop
outsl
dec
loope
pop
mov
test
cli
aas
dec
inc
mov
mov
lret
lret
test
push
mov
mov
sar
mov
mov
fs
into
pop
xchg
jg
das
ss
push
xchg
jne
scas
scas
inc
fimuls
push
imul
arpl
pop
bound
xchg
jbe
loope
mov
push
pushl
movsl
inc
push
sbb
pop
pop
jg
jne
mov
loop
clc
shrl
mov
sub
pop
sub
lea
add
or
cltd
cmp
pusha
and
movsl
inc
notb
xchg
sub
mov
xchg
xlat
pop
scas
lret
sub
mov
cld
fcomip
or
cltd
push
xchg
xchg
mov
xor
movb
iret
cld
xchg
push
out
ljmp
daa
jecxz
shlb
popf
popf
xchg
mov
insl
insl
cs
in
adc
or
jg
aaa
std
pop
hlt
sbb
repnz
sub
lods
fwait
outsl
addb
in
mov
push
das
sarb
imul
je
sbb
cmp
loopne
outsl
xor
or
mov
jg
mov
je
inc
outsb
jg
pop
push
enter
mov
add
leave
cmp
cwtl
repz
jae
test
cld
and
cld
pop
xor
popl
fistl
hlt
sub
sbb
mov
movsb
es
push
clc
pop
inc
push
cli
js
scas
icebp
add
jae
push
adc
sub
mov
push
jle
lds
stos
dec
pop
mov
xlat
movsb
sbb
or
leave
inc
dec
sub
call
cli
sahf
push
lret
push
and
scas
mov
fwait
mov
cmp
outsb
mov
push
cwtl
cmp
std
add
sbb
and
mov
cli
xchg
add
sub
or
enter
sub
out
icebp
inc
jle
sub
ja
cli
or
jl
pop
idivl
test
bound
and
adc
ljmp
aas
out
inc
add
add
out
cmpl
mov
clc
mov
call
push
mov
mov
pop
xchg
fbld
test
lret
jle
pop
lods
mov
pop
jl
cld
add
pop
mov
insl
mov
movsl
push
sub
sub
xlat
imul
mov
pop
aam
loopne
leave
ret
mov
into
jmp
insl
shlb
cmc
xchg
xchg
popa
ror
or
imul
outsb
hlt
in
push
cmp
add
incb
fisubl
call
pusha
sbb
clc
in
in
test
scas
iret
fdivp
push
cmp
xor
sub
mov
jle
mov
inc
xor
pop
out
idivb
pushf
xor
mov
lret
cld
sub
aas
and
jg
call
xchg
push
testl
mov
lcall
cmp
mov
mov
lcall
addr16
out
mov
aam
xchg
mov
mov
adc
pushf
scas
jbe
pop
ja
mov
ss
or
fsubs
outsl
mov
sahf
add
inc
dec
pop
pop
ret
dec
dec
xchg
repnz
jne
pop
stos
dec
idiv
mov
xchg
gs
lahf
pop
pop
mov
mov
into
pop
stos
repnz
aad
pop
stos
jmp
mov
jb
fisttpll
lock
jg
bound
lret
cmp
mov
mov
dec
dec
popf
fsubl
or
xchg
push
inc
or
pushf
mov
scas
clc
popa
xchg
loope
mov
scas
test
dec
setns
rol
outsl
mov
int3
sub
sbb
mov
aad
and
jb
mov
dec
sub
aas
dec
or
insl
cmp
push
fxch
sbbb
mov
or
jno
repnz
decl
sbb
pop
mov
bound
idiv
add
loop
clc
pop
mov
mov
ss
mov
stos
dec
loope
cld
test
shl
test
shr
mov
cmpsl
shll
mov
mov
inc
sti
sub
std
lods
adcl
push
and
push
pop
daa
bound
pop
idivl
mov
repnz
insb
push
scas
outsl
icebp
or
inc
shrb
and
jg
pop
cmpsl
ret
bound
pop
mul
ret
fcomp
and
pop
sbb
mov
push
mov
pop
jno
cld
pusha
pop
adc
arpl
sub
incl
popf
cmpsb
fistps
or
inc
push
pop
jae
push
sub
popf
dec
dec
sbb
push
into
pop
aam
das
andb
imul
or
sub
mov
fnsave
mov
pop
cmp
sbb
push
mov
ljmp
inc
stos
scas
pop
mov
fwait
rorb
loopne
adc
jmp
out
ljmp
pop
cmc
dec
jnp
iret
xor
imul
into
lea
imul
mov
sub
mov
fidivs
sar
ljmp
mov
sub
dec
lds
xor
add
mov
es
jg
push
jo
cmc
js
popf
repz
dec
or
xor
jg
hlt
xchg
sbb
scas
movb
sbb
out
lock
lcall
push
stos
dec
movsl
nop
nop
and
neg
mov
es
jno
aaa
add
aad
adc
fiadds
push
mov
loope
push
mov
inc
jmp
jg
ss
jmp
sub
push
int3
int3
mov
jns
pop
arpl
cli
roll
inc
mul
imul
pop
shlb
jg
hlt
inc
jo
test
aaa
adc
mov
adc
arpl
xchg
jmp
ljmp
lods
mov
and
xor
scas
clc
stos
add
adc
hlt
xchg
dec
jae
pop
xchg
sbb
repnz
jmp
fs
in
cli
pop
pop
pop
xor
data16
push
push
jp
enter
in
fwait
or
inc
test
testl
add
decb
xlat
cmp
repz
ret
pop
call
ret
ljmp
notb
sub
incl
or
pop
ss
subl
dec
jnp
icebp
mov
inc
ffree
mov
mov
je
ljmp
imul
or
dec
or
adc
das
adc
or
xor
mov
mov
adc
std
movsl
pop
out
lahf
lods
add
dec
push
das
hlt
sahf
push
ljmp
mov
cmc
pop
cmp
in
lock
scas
mov
jle
fwait
stc
pop
data16
or
adc
inc
sub
test
clc
daa
leave
loope
add
outsl
mov
jg
fistl
icebp
decl
jmp
test
loopne
movsbl
mov
cmp
inc
xchg
pop
jp
cmp
fcmovnu
fistl
mov
mov
xchg
push
lods
in
mov
pop
mov
sub
jge
adc
cld
inc
popa
xchg
je
mov
ret
leave
mov
jp
xor
adc
fwait
out
ljmp
xor
ror
lret
mov
scas
xor
sub
out
mov
push
fcom
jg
jae
fmull
stos
or
imulb
out
clc
mov
lcall
cmp
push
jmp
jg
sub
stos
cmpsb
mov
pop
xor
std
mov
adc
cmpsb
sbb
mov
adc
jne
and
mov
cld
jmp
or
jmp
xchg
je
push
add
mov
icebp
imul
out
inc
inc
push
ljmp
xor
dec
aas
and
insl
push
inc
cli
decl
sub
adc
inc
push
xor
xor
lock
and
ljmp
or
fs
scas
add
adc
adcb
pop
cmp
adc
adc
mov
cmp
addr16
dec
jbe
dec
testl
lock
inc
adc
jb
lret
negb
inc
pop
xchg
add
outsl
clc
das
cmpsb
adc
sub
xchg
imul
mov
in
cli
out
push
fistl
ret
xchg
int3
testb
adc
dec
dec
pusha
jge
scas
clc
rcl
sub
idivl
fisttpll
inc
cmp
imul
sahf
push
jge
lods
cmp
sbb
push
lods
clc
jl
mov
movsl
test
fwait
inc
push
cmp
stos
adc
or
pop
jmp
rolb
mov
arpl
aaa
sar
xchg
mov
or
stc
or
les
leave
pop
cmp
dec
add
cwtl
mov
mov
les
adc
mov
dec
js
icebp
dec
mov
call
ja
and
outsl
mov
loop
mov
stos
outsl
filds
push
mov
test
nop
jne
push
fdivs
insb
cmp
jg
movsb
stos
xchg
mov
pop
mov
cmp
aas
cmp
xchg
pop
adc
lea
mov
adc
xor
adc
sbb
jp
frndint
loope
mov
xor
cmp
add
lock
mov
mov
inc
push
enter
imul
lret
fimull
dec
shl
sbb
sub
andl
inc
jl
aas
cld
add
clc
mov
test
test
xchg
decb
sub
and
test
adc
push
xorb
aas
jecxz
int
repnz
nop
dec
outsb
decl
xchg
jl
xor
shlb
aas
lods
roll
sbb
pop
jg
or
mov
les
cli
in
dec
add
insb
sarl
rcrl
jg
inc
call
jp
xchg
stos
dec
das
jle
push
das
xchg
mov
popa
or
push
cmp
in
lock
mov
jmp
pop
in
aam
push
sub
jg
xchg
lcall
shll
lcall
or
pop
ja
loope
push
fcomps
pushl
pop
xchg
inc
xlat
mov
mov
test
arpl
xchg
enter
mov
subb
xchg
lahf
loopne
adc
mov
insb
fisubrl
push
pusha
in
sub
fldl
lock
add
lcall
ret
cmpsb
mov
hlt
inc
mov
cmp
sbb
std
ljmp
jp
mov
mov
aas
pop
pop
repz
ss
add
int
fcompl
fdivs
movsb
cmp
mov
call
xchg
and
pop
and
and
jbe
add
enter
adc
add
test
fs
mov
dec
ljmp
jno
pop
sbb
scas
fidivrl
pop
adc
test
bound
outsl
push
hlt
ljmp
pop
cmc
mov
xor
xor
enter
cmc
fistps
mov
jecxz
nop
lods
movsb
mov
cmp
ret
js
jle
inc
int3
ss
push
aam
adc
adcl
mov
cld
int3
mov
ljmp
jnp
mov
lret
jp
pop
inc
mov
call
outsb
lods
pushl
xchg
push
mov
call
and
aad
test
ljmp
cmpsl
dec
inc
fdiv
push
incl
jbe
sbb
pop
mov
push
pop
pop
enter
pop
and
lods
sti
loop
lcall
adc
lock
or
pushl
std
fdivs
test
pop
mov
add
xor
lret
jg
rcrb
add
sub
xor
dec
je
call
es
xchg
xchg
aas
mov
cld
pop
push
ljmp
xchg
jle
stc
mov
or
lods
adc
shrb
loopne
rolb
into
sbb
xchg
mov
arpl
xor
mov
and
mov
xchg
clc
sub
das
xchg
repnz
cmpb
mov
movsb
addr16
xchg
mov
aad
mov
pop
jg
mov
mov
jg
lods
mul
cmpsl
mov
lods
scas
loop
lock
pop
test
insl
aam
mov
inc
pop
mov
mov
cmp
jg
stos
das
sub
add
mov
cmp
cmpl
pop
mov
in
insl
xor
cmc
loope
push
inc
cli
dec
cmpsb
jle
mov
jle
insl
in
inc
jecxz
ljmp
jo
outsl
mov
jo
hlt
jbe
and
cmp
pop
mov
xor
pop
sbb
decl
jne
sub
dec
enter
call
loopne
cwtl
js
jns
or
ss
inc
xchg
adcl
push
adc
push
loopne
fs
sbb
jns
sub
inc
incl
xchg
and
test
xor
push
movsl
stos
adc
stos
and
ret
and
stos
mov
push
cmp
out
rcrb
fmuls
and
movsb
push
add
aam
aam
mov
inc
sbb
repz
xor
or
mov
and
jmp
dec
idiv
es
out
sbb
repz
loopne
and
insl
std
sbb
jb
jne
ljmp
sahf
insb
call
mov
mov
fiaddl
pusha
xor
mov
add
push
fisubs
in
push
ljmp
stos
sub
dec
push
pop
lock
fisubrs
fs
rorb
call
xchg
add
pop
lds
add
scas
and
push
sbb
iret
aad
sti
adc
test
pop
nop
inc
xlat
lds
inc
leave
popf
in
sarb
ds
mov
or
pop
pop
divb
or
outsb
mov
outsl
add
push
test
push
into
in
outsb
jp
insb
inc
and
lock
cltd
and
testb
stos
push
sub
and
aad
pop
mov
add
jp
std
dec
roll
mov
xchg
aas
int3
dec
popl
cmp
insb
call
add
pop
dec
inc
ret
lods
insl
insl
push
jno
cmpb
jg
sub
add
pop
cmp
rclb
fadds
jge
loope
add
shll
dec
clc
pop
push
mov
pushf
push
sahf
inc
add
pop
pop
push
mov
repz
jecxz
scas
xor
std
cld
mov
mov
ret
adc
rolb
mov
nop
adc
mov
rorl
lods
fmull
test
mov
jg
lods
mov
and
add
and
rcrl
mov
jmp
cmp
dec
jge
mov
jg
fildll
mov
cwtl
pop
push
rclb
insl
lcall
popa
cld
lret
leave
inc
adc
push
shrl
enter
sbb
insb
pop
inc
inc
mov
orb
pop
pop
push
mov
int
fsubrs
cmp
mov
and
loopne
aam
in
add
inc
repnz
xor
mov
pop
and
add
sub
mov
jmp
mov
out
jp
cld
int3
mov
pop
sti
ja
sbb
inc
push
cwtl
jne
insb
jbe
and
test
in
pop
mov
mov
jl
mov
jg
adc
imul
enter
push
xor
in
add
movb
mov
cli
je
adc
not
clc
je
dec
adc
push
add
movsl
mov
fwait
and
mov
jb
cwtl
insl
gs
adc
pushl
cld
decl
mov
mov
adc
jb
mov
jg
adc
lcall
rcr
cs
out
ret
push
dec
push
lods
ret
iret
sahf
lea
cs
adc
out
xor
mov
sahf
ss
fbld
lcall
in
mov
rorl
js
pushf
movsb
and
clc
mov
lcall
or
dec
gs
dec
sar
pop
movsb
sub
movsl
push
mov
push
jp
mov
adc
mov
inc
jge
xor
jle
aaa
pop
loop
mov
sub
mov
pop
mov
inc
out
pushf
sub
stc
push
pop
fwait
pop
stc
pusha
adc
fdivl
mov
jg
scas
shrl
cmp
pop
pop
xor
dec
jp
mov
inc
push
fs
sbb
std
imul
adc
cli
pushl
inc
adcb
push
and
sahf
mov
mov
mov
dec
fstl
cld
pushf
ret
dec
mov
jl
push
scas
pop
mov
aam
mov
jo
imulb
or
cmp
sbb
mov
das
sub
jbe
shlb
pushf
out
fidivl
mov
push
das
movsl
pop
push
pop
ljmp
in
adc
and
sub
pop
aas
xorb
lock
bound
leave
xchg
jle
mov
pop
fs
push
arpl
mov
pop
fidivs
filds
push
lret
xchg
movsb
fs
mov
mov
imul
adc
mov
inc
ljmp
je
cmp
mov
mov
incl
aam
and
xchg
add
out
aam
dec
push
inc
pop
push
push
cmp
dec
cld
add
pusha
and
xchg
push
mov
xchg
mov
insb
mov
mov
bound
sarb
hlt
fcmovnbe
adcl
addb
add
ja
adc
inc
and
addb
dec
add
mov
aam
cmp
mov
std
data16
sub
inc
pop
dec
jp
loopne,pt
pop
dec
dec
add
jo
jg
lods
loopne
mov
mov
xor
lds
call
je
xchg
xorb
in
pop
cmpsl
lds
pop
xchg
icebp
das
clc
fisttps
dec
mov
adc
xchg
add
es
ds
push
pop
xchg
xchg
lock
in
hlt
or
in
or
jecxz
mov
push
hlt
cwtl
lcall
pop
cli
jge
cmpl
pop
mov
jecxz
mov
mov
insb
xlat
cs
inc
dec
adc
clc
outsl
cli
ds
pop
sbbl
hlt
pop
mov
lret
xlat
jae
mov
incl
xchg
fstl
jmp
cmpl
jbe
aaa
int3
adc
xchg
xchg
iret
xor
in
xchg
jl
cmpsl
sbb
mov
mov
jno
pop
lret
mov
int3
ss
cli
xchg
mov
pop
mov
int
ds
pop
fstl
in
add
jne
jo
lock
pusha
icebp
sbb
test
cmpsb
pop
xchg
xorb
lcall
mov
inc
cmpsb
mov
icebp
mov
mov
movsb
cwtl
mov
call
iret
iret
lcall
xor
sahf
xchg
cmp
jmp
adc
mov
clc
push
and
cli
cli
test
push
xor
push
jle
int
fisubrl
shlb
cld
cmpl
lret
mov
jge
pop
pop
in
xor
xchg
adc
imul
or
aaa
xchg
arpl
sbb
xor
rclb
int
ret
xor
orl
add
mov
adc
sbb
inc
inc
push
and
fildll
mov
and
pop
pusha
and
sbb
push
ret
loopne
add
mov
aam
jmp
aam
sub
jmp
jae
cmpl
add
push
lods
sbb
ror
push
aaa
das
ret
add
push
dec
out
popa
lcall
scas
mov
jl
push
add
fldcw
and
cwtl
dec
in
add
mov
mov
pop
hlt
add
subb
les
sbb
xlat
mov
andl
daa
cli
jecxz
das
dec
out
mov
pop
lock
mov
out
shlb
bound
fdivrs
loop
fists
test
inc
cltd
xchg
pop
mov
and
adc
push
add
popf
pop
or
repnz
lret
cli
mov
into
push
push
scas
shlb
cmp
or
clc
es
pop
push
push
mov
add
push
mov
aaa
pusha
push
rclb
pop
sbb
jg
test
sbb
mov
sub
mov
lcall
lea
or
cmp
arpl
mov
orl
decl
cli
popa
jbe
movsl
push
inc
shrl
mov
xor
mov
xchg
shl
roll
add
out
xchg
sub
pushl
cld
in
mov
icebp
jecxz
mov
out
loop
xor
inc
test
pop
cld
dec
mov
into
mov
adc
or
mov
ret
or
mov
or
out
cmc
ds
xchg
inc
fnstenv
pop
or
xor
pop
pop
lods
lea
call
cld
and
in
jmp
mov
jecxz
or
movsb
ja
xchg
sahf
cmp
repnz
jno
dec
push
xchg
scas
mov
pushl
clc
incb
dec
add
faddp
jmp
jl
addl
test
cmp
subb
aad
add
out
ficompl
popf
scas
mov
ljmp
mov
inc
sub
ja
icebp
pop
fists
xchg
test
rol
aam
call
pop
and
xchg
inc
pop
fs
jl
xor
dec
sahf
pop
in
cs
mov
cmpsb
jl
cld
cli
inc
movsl
inc
and
dec
iret
outsl
cld
and
clc
stos
inc
dec
mov
movsb
sbb
mov
and
and
daa
pop
push
sti
test
stos
add
cmp
push
stos
push
xchg
inc
aam
inc
adc
mov
xchg
mov
mov
or
fists
add
jl
sahf
in
xchg
add
and
mov
pusha
or
jg
sbb
xor
push
add
mov
sbb
incl
push
aad
fbstp
cmp
mov
js
loopne
lock
out
mov
sbb
sub
mov
insb
cmp
xlat
unpckhps
aaa
push
mull
ljmp
cmpsl
mov
pushf
sbb
or
js
fnsave
test
jnp
test
or
fdivrs
mov
pop
popa
dec
shlb
mov
gs
adc
and
mov
std
mov
push
out
pop
sub
sbb
jg
stc
dec
or
scas
int
repnz
out
xchg
aaa
movsb
cmp
in
push
fistpl
outsl
mov
push
clc
mov
mov
sub
dec
pop
sub
cmpsb
loope
inc
cmp
loopne
pop
or
ret
push
fidivs
fcmovnbe
push
sbb
adc
insl
push
or
lods
cmp
mov
or
lcall
xchg
pop
pushf
push
xchg
in
jg
jo
loop
sarl
xchg
add
cli
out
inc
pop
enter
decl
or
xor
loopne
xchg
ja
scas
inc
inc
sbb
jbe
insb
and
shrb
test
pop
push
cld
jg
ljmp
sub
sbb
sahf
stos
cmp
or
outsl
clc
dec
ficoms
int3
lods
push
push
mov
int3
incl
or
js
xrelease
xor
pop
dec
loopne
jno
insb
xchg
rclb
inc
jne
add
adc
mov
lods
cmp
aam
mov
incl
sti
and
push
cmp
movsb
xor
ret
into
pop
and
sbb
aaa
adc
add
push
clc
cs
cltd
push
push
cs
decl
or
into
orl
xchg
jl
xor
sub
xchg
pop
mov
lds
out
dec
xchg
adc
clc
pop
mov
inc
pushl
adc
ja
in
ret
in
xor
sbb
add
out
movsb
mov
pop
inc
cmpsl
mov
cmp
mov
adc
and
repnz
xorb
pushl
adc
jb
mov
and
test
scas
dec
add
insl
dec
mov
push
and
ja
inc
push
pop
sbb
cmpsb
adc
mov
adc
cs
cwtl
jmp
and
mov
cld
cmpsl
push
push
out
ljmp
lods
idivb
xor
lds
push
inc
out
adc
jle
movsl
jo
mov
in
jb
jle
testl
or
push
mov
dec
jg
jg
aam
add
add
test
insb
jmp
xlat
movsl
mov
or
movl
clc
out
negb
mov
add
imul
jmp
dec
cmp
loop
insl
adc
mov
xchg
adc
pop
mov
es
xchg
inc
mov
cmpsl
mov
push
into
push
inc
popa
add
lods
jmp
mov
out
ljmp
ljmp
call
arpl
jns
lock
pop
jle
or
lods
xor
add
push
pop
pop
or
or
add
jno
cmp
hlt
jne
mov
insb
test
xchg
clc
das
fs
mov
and
cmp
das
fcomip
incl
cmpsb
mov
cmp
pop
pop
dec
push
adc
ljmp
clc
sar
popa
lahf
jbe
sahf
in
push
xor
or
push
out
sar
decl
es
cltd
enter
movb
pop
cmp
add
movsl
icebp
xchg
sub
lods
add
mov
stc
icebp
test
ja
cmp
ret
addr16
daa
push
sahf
pop
sbb
rol
cmp
sbb
shl
push
adc
push
mov
mov
pushf
movsl
shlb
dec
clc
pop
sbb
bound
jnp
cli
xchg
test
arpl
inc
popa
stos
push
adc
in
xlat
int
in
insb
call
push
fsubl
xchg
sub
add
dec
and
js
aaa
push
jb
jg
mov
adc
cmp
test
jle
mov
int
movsb
xor
ret
fdivr
ja
mov
into
cmc
in
cmpsb
decl
jle
aas
add
cld
loope
push
xchg
xor
outsb
add
fwait
push
fwait
adc
iret
add
pop
pop
sub
jbe
stos
inc
clc
daa
inc
test
mov
push
das
xchg
stos
decl
movsl
jle
sbb
mov
fisubl
jl
mov
add
inc
mov
cwtl
push
and
jg
sahf
add
hlt
pop
testb
enter
xor
pop
or
dec
mov
push
lds
aad
mov
mov
push
dec
dec
mov
out
test
aam
fisttpll
mov
mov
mov
lret
imul
nop
out
pop
jb
mov
dec
movsb
jno
add
rcrb
fistps
or
inc
sarl
pop
lea
aam
jmp
cltd
cli
lea
imul
aad
or
imul
hlt
mov
cmp
adc
das
faddl
testl
stos
aas
mov
adc
adc
cmpsl
dec
mov
movsl
in
and
cs
xchg
jmp
cmpsb
clc
pushf
or
sar
loop
insb
ret
add
dec
sahf
xchg
hlt
xchg
mov
ret
cmpsl
decl
push
inc
ficoml
enter
sbb
dec
imul
xchg
lahf
pushl
jle
and
cltd
push
pop
inc
mov
sahf
enter
mov
cs
fdiv
stc
roll
ljmp
mov
push
adc
add
xchg
mov
imul
fsubl
ljmp
incl
push
and
dec
out
out
and
insl
lods
adc
lock
xchg
push
in
das
scas
jg
jmp
inc
jge
lock
push
and
in
fs
add
fwait
ds
mov
rcll
clc
mov
jl
cs
add
mov
les
mov
adc
icebp
and
dec
subb
push
dec
jl
sbb
outsl
sub
sub
ja
sub
mov
dec
out
mulb
pop
js
add
aas
adc
rolb
adc
sub
mov
xor
fstps
call
jb
filds
andb
lcall
aas
xchg
lods
pop
addr16
movsb
mov
xor
incl
xchg
filds
js
xchg
push
or
fsubr
lahf
lret
cmp
icebp
adcb
mov
movsb
int
xchg
cwtl
rclb
add
mov
mov
jg
jnp
jp
outsl
lcall
test
hlt
jp
les
mov
inc
xor
gs
sbb
dec
es
inc
pop
cmp
cmp
loop
subb
mov
popa
lock
inc
xchg
pop
test
mov
mov
sbb
mov
cmp
mov
inc
sti
pop
enter
mov
je
jge
insl
nop
orb
push
xchg
xchg
or
jp
cwtl
cmc
push
jns
or
pusha
and
aam
xchg
mov
ljmp
xor
mov
in
jg
mov
sub
pop
repnz
mov
cwtl
rcrb
test
stos
xor
jmp
cld
push
ja
pop
jmp
xchg
xchg
dec
jae
add
and
mov
es
bound
loopne
jmp
outsl
ret
mov
xor
adc
adc
pop
jnp
push
mov
pop
filds
fstps
lock
pop
cs
or
cmpsb
les
lods
xchg
das
pop
loopne
lcall
into
shll
loop
test
pop
nop
les
cmc
into
jl
gs
mov
test
clc
xor
dec
adc
jp
sbb
jl
push
sahf
testb
add
pop
inc
mov
dec
mov
sar
jmp
std
stc
xchg
lods
repz
push
inc
pop
and
iret
loope
fbstp
sub
push
push
and
int
or
mov
mov
dec
pop
subb
in
mov
mov
rolb
inc
xchg
and
mov
negb
and
cld
push
jnp
out
mov
and
mov
lds
push
sub
cltd
push
ss
and
jge
xchg
hlt
mov
lret
mov
fistps
xchg
test
fbld
jmp
jbe
add
daa
add
ljmp
jb
aam
movsb
and
jbe
add
cmc
jno
mov
or
test
inc
inc
aad
out
inc
aad
dec
dec
clc
dec
lcall
jmp
pop
xlat
jns
jg
mov
push
clc
push
cltd
mov
out
jo
sub
dec
iret
add
sbb
imul
sti
push
and
xchg
dec
pop
not
mov
adc
cmpsl
jne
addb
jg
popf
inc
insl
imul
mov
mov
push
std
outsb
scas
fstpt
cmp
jp
hlt
ficomps
lods
sub
imul
dec
push
mov
hlt
xchg
adc
sub
repz
stos
clc
cmp
sub
aad
rcll
mov
rcrl
cld
push
icebp
pop
icebp
lcall
sbb
mov
fdivrs
leave
aas
or
pop
mov
daa
insb
xor
ljmp
lock
jbe
jle
aam
sar
leave
es
push
stc
and
sbbl
add
js
push
jbe
xor
adc
int
ljmp
xor
cmp
add
jp
icebp
xlat
sbb
in
test
push
popf
sub
jg
fcomi
scas
mov
sahf
dec
cmc
inc
push
aad
dec
pusha
outsb
mov
jmp
jbe
mov
push
jl
push
daa
loopne
push
jns
fld1
test
fcmovnbe
and
ss
add
dec
test
fs
xchg
add
pop
mov
mov
outsb
fimull
ret
shlb
pop
sbb
or
inc
jno
pusha
mov
mov
inc
movsb
xlat
insl
dec
pop
xchg
test
mov
add
and
fwait
mov
test
push
jae
mov
aam
repz
pop
add
mov
ljmp
add
pop
push
inc
dec
enter
xor
fists
adc
roll
ficoml
and
int3
ja
fnstenv
push
xchg
call
int
mov
ljmp
dec
inc
xor
add
decl
sti
sti
inc
dec
mov
sub
or
clc
jmp
mov
xchg
ret
sbb
pop
inc
jmp
ror
jbe
add
out
imul
mov
push
das
add
or
adc
lcall
sahf
or
sbb
sarb
fwait
inc
adcb
or
nop
pop
das
xchg
xchg
cmp
sbb
pop
xchg
and
cmp
fbld
jmp
and
mov
aaa
lret
loope
scas
mov
call
dec
or
iret
popa
mov
add
or
ljmp
xchg
pop
pop
in
ljmp
sub
push
call
test
cmp
in
mov
pushl
fdivrl
lods
inc
ja
mov
jnp
jl
lods
jb
cmp
icebp
call
pop
es
and
push
cmp
sahf
test
jb
pop
or
jge
movsb
mov
xchg
iret
xor
pop
fwait
rol
aam
dec
xor
mov
test
xchg
jle
aaa
push
xor
mov
mov
dec
xor
add
push
inc
add
decl
into
inc
inc
jg
xchg
imulb
xchg
xchg
push
jmp
sbb
and
bound
push
push
neg
pop
outsb
dec
cmpsb
push
adc
and
mov
hlt
cltd
add
les
xor
rorb
arpl
shl
sbb
jle
mov
nop
ds
mov
jmp
pop
adc
and
int
mov
cmc
xor
mov
loop
ja
call
dec
ljmp
lret
or
int
and
clc
xchg
or
xchg
adc
popf
mov
clc
addl
add
mov
sbb
aaa
dec
cmc
call
push
ret
mov
filds
adc
mov
dec
pushl
pop
gs
sbb
mov
test
or
out
mov
mov
dec
dec
push
mov
out
pushl
jo
pop
mov
adc
pop
jmp
add
xchg
xchg
cmc
stos
ljmp
loope
mov
inc
cmp
nop
bound
sbb
pop
mov
jg
test
cli
aas
push
add
popa
pop
call
push
sti
out
decl
sub
enter
or
in
imul
jl
clc
add
and
adc
mov
clc
mov
les
xchg
sbb
clc
xchg
jg
repnz
cmpsl
dec
adc
sbb
sbb
call
rorb
push
pop
cmp
sub
cmpsb
into
test
loop
call
neg
call
pop
pop
cmp
imul
jmp
add
add
push
add
sub
clc
sbb
adc
jle
mov
mov
hlt
mov
fildll
add
add
mov
mov
rcrl
stos
decl
test
mov
mov
ret
adc
nop
mov
js
mov
pop
rorl
mov
xlat
sti
in
dec
nop
imul
sub
dec
inc
repnz
mov
fstps
cmp
out
xchg
lock
and
fs
or
bound
xchg
add
into
lcall
pushf
jl
pop
cld
movsb
xchg
repz
ds
push
add
out
sub
and
cs
leave
inc
fildll
add
data16
sbb
ja
or
push
pop
xor
dec
imul
sbb
push
jl
push
lods
push
test
incl
dec
add
js
pop
pusha
sbb
into
or
sub
ljmp
nop
xor
and
dec
push
mov
cmpsb
cmp
mov
sahf
add
loopne
ljmp
movsb
lock
cmp
adc
mov
xchg
xchg
and
rclb
cmpsb
pop
cmp
adc
add
lods
jo
call
call
dec
clc
mov
mov
js
xlat
lahf
dec
push
sarl
inc
incl
push
cmpsl
subl
mov
popa
sarl
and
call
out
or
sarb
push
mov
cmp
in
ret
in
fcoms
push
sub
jne
lock
ret
mov
negb
loope
push
bound
js
mov
jp
dec
xor
ss
pop
lods
mov
push
add
lcall
dec
imul
ljmp
scas
jb
mov
push
and
mov
jle
mov
ljmp
cwtl
mov
fstps
xchg
jae
xchg
xor
adc
lcall
jle
push
das
sbb
fdivp
or
push
lret
test
ds
int
decl
cmpsl
cld
adc
adc
cwtl
aam
pop
dec
insl
cli
add
mov
xchg
inc
jae
cli
sbb
or
push
mov
push
daa
fimull
ljmp
sub
hlt
movsb
lods
ret
dec
loop
sub
test
loope
push
or
jg
cmp
mov
js
jbe
push
ljmp
insb
popf
cmp
cwtl
jno
sbb
pop
and
mov
fistps
pop
xor
pop
dec
sub
push
movl
sub
ljmp
mov
or
rcl
test
cltd
clc
imul
pushf
aam
sarb
inc
rcl
fmuls
xchg
sbb
pop
es
sub
pop
or
fidivrl
cmp
jno
imul
loopne
push
shrb
inc
or
sbb
push
call
stos
notb
fidivl
pop
mov
imul
aaa
je
jle
enter
subb
or
push
out
pop
jmp
mov
fldl
jnp
or
xchg
adc
in
inc
icebp
push
jae
jbe
mov
push
fcom
notl
decl
cmp
movsb
aas
push
pusha
push
gs
rorb
push
xchg
mov
filds
in
lds
clc
subl
inc
mov
cwtl
out
lret
cli
mov
dec
pop
and
clc
lock
lock
jecxz
je
out
add
call
das
mov
lret
cltd
ss
xchg
pop
xchg
cli
xchg
in
movsl
xchg
enter
aas
pop
pop
fwait
push
mov
adc
push
inc
xchg
dec
daa
pop
xchg
addl
pusha
cmp
or
ror
mov
push
int
iret
cmp
sub
xor
test
adc
pop
insl
or
js
js
outsl
pushl
cli
push
push
in
add
jno
jnp
fwait
sub
dec
ljmp
mov
mov
ror
fcomps
xchg
jl
add
mov
popa
ja
das
inc
mov
adc
ds
scas
jg
icebp
or
lahf
and
fstpt
mov
mov
sub
and
mov
aas
inc
sub
pop
or
scas
mov
sbb
bound
sub
data16
pop
stos
ja
stos
sti
repnz
jp
pop
cld
fildl
pop
mov
popf
fdivr
movsb
push
scas
shlb
push
and
push
jg
leave
push
pop
stc
movsb
idivl
dec
out
test
cltd
arpl
add
std
outsl
xor
test
es
aaa
inc
shlb
test
mov
sahf
jo
and
pop
pop
mov
ljmp
sarb
fsubs
jecxz
xchg
rcll
test
mov
mov
cltd
out
mov
or
insb
xchg
dec
fstpl
int3
fistpll
js
xor
lds
sbb
scas
xchg
rcrl
mov
out
iret
pop
sbb
dec
push
lock
and
imul
ljmp
hlt
loopne
sub
mov
icebp
pop
pop
dec
dec
inc
or
gs
incl
or
mov
in
jmp
sub
sub
call
mov
pop
inc
and
out
jle
xchg
cmc
cmp
outsl
push
test
repz
decl
fs
sub
sub
repz
mov
push
incb
dec
decl
out
cmp
fsubl
push
mov
dec
push
jmp
xchg
jle
fwait
add
mov
xor
je
mov
push
mov
sbb
stos
xchg
dec
jb
sti
cmp
call
shrl
es
jg
mov
mov
pusha
lret
lahf
add
mov
outsb
xlat
incl
call
pop
out
mov
loopne
mov
mov
add
enter
shll
fwait
xor
test
scas
lea
rcrb
aaa
push
push
inc
ss
and
jae
adcb
jmp
scas
cmc
outsl
pop
pop
jmp
adc
sub
leave
xchg
xchg
andps
test
sbb
jo
loopne
adc
lcall
int3
push
pop
inc
lea
roll
int3
xchg
or
or
out
sahf
mul
fdivrs
ja
mov
mov
inc
clc
ljmp
test
sbb
ja
adc
mov
mov
nop
sar
and
push
pop
inc
loope
mov
rcrl
sub
mov
lcall
xor
inc
fsubl
push
jle
xchg
fimull
sbb
leave
xor
mov
lcall
inc
jmp
push
test
lock
outsl
aam
popf
dec
dec
pusha
lock
fbld
push
or
sbb
mov
xor
loop
mov
bound
ja
mov
cli
icebp
outsb
mov
loop
nop
dec
sub
jp
fcom
and
lcall
adc
dec
dec
in
push
std
add
pop
stc
pusha
cmp
push
hlt
inc
mov
mov
test
rcll
mov
out
nop
mov
std
adc
push
or
mov
js
xchg
hlt
outsl
add
fldenv
fbld
xchg
add
std
pop
ja
icebp
fldl
or
adc
xor
jg
adc
pop
sub
ret
pop
ret
mov
je
imul
inc
push
push
clc
pushl
test
and
int3
lahf
sub
xor
stos
cmp
pop
fldt
pop
pop
test
mov
addr16
mov
insb
notl
jg
inc
movsb
out
ljmp
push
mov
mov
fs
inc
neg
repnz
fwait
pusha
cld
mov
jnp
data16
inc
jmp
mov
cs
jb
mov
nop
or
pop
mov
call
add
out
lret
mov
shll
and
das
shll
loop
jg
addl
fs
addr16
pop
xor
jno
sub
sbb
cmp
sub
icebp
call
push
or
les
add
push
imul
repz
mov
sbb
add
cli
lahf
adcb
fdivr
adc
push
repnz
sbb
push
das
mov
xchg
push
and
cmp
cmpsb
ss
jmp
push
rcrl
adc
sar
stos
fs
mov
xchg
push
xchg
scas
mov
jle
jl
mov
dec
pop
or
sar
sbb
ret
xchg
xchg
mov
inc
inc
lret
and
das
jle
icebp
decl
xchg
jp
popl
mov
mov
xchg
add
out
and
fsubs
mov
push
mov
repz
inc
shlb
mov
cltd
mov
fincstp
stos
ret
mov
inc
int
call
mov
jmp
pop
push
jae
sub
pop
push
orb
push
leave
ret
pop
mov
mov
hlt
mov
mov
rcrb
lcall
xor
mov
ficompl
bound
call
fimull
jno
dec
scas
sub
jmp
lods
cli
mov
fcomip
inc
xorb
lret
aas
push
sub
mov
lds
shll
outsb
push
iret
xchg
dec
and
jmp
fwait
lods
and
mov
sub
mov
mov
mov
aad
pusha
push
pop
or
hlt
pop
arpl
pop
adc
sbb
xchg
cli
loope
sbb
stc
adc
sub
jmp
mov
shl
sbb
add
push
cld
pop
hlt
add
xor
push
cmp
and
orl
sbb
clc
ljmp
imul
sbb
into
call
jmp
lcall
out
das
and
mov
mov
es
ficoml
das
pop
fildl
or
fidivs
cli
push
data16
addl
sbb
aad
dec
pop
hlt
jl
insb
mov
push
pushl
loopne
scas
flds
pop
loop
push
or
popa
pop
adc
int3
test
jg
fwait
adc
outsb
mov
jb
cld
inc
mov
pop
adc
addr16
jg
test
jb
add
add
stos
in
pop
and
or
out
pop
lock
out
mov
mulb
push
sarb
mov
inc
out
or
lock
out
mov
mov
sarb
rorl
mov
sbb
hlt
jle
sub
jl
ja
cs
pop
or
mov
sbb
or
sbb
cmp
xchg
sub
sbb
push
divl
call
mov
sub
aam
add
lods
inc
sbb
subl
sbb
sub
mov
adc
test
outsl
pushl
shlb
cld
ja
and
pop
dec
add
sbb
dec
xor
jo
js
mov
mov
scas
lahf
stos
mov
mov
cld
fadds
ja
push
pop
out
add
fwait
scas
mov
scas
cmpb
stos
outsl
xor
jg
icebp
sub
das
or
jecxz
add
aas
pop
cwtl
shrb
mov
push
jg
mov
xor
push
jge
pop
into
or
push
lcall
pop
push
scas
movsb
popf
nop
push
fldcw
adc
push
pop
jecxz
xor
js
pop
and
push
sub
lods
std
fs
pop
fisttpll
shll
dec
movsl
rcrb
in
lcall
pop
inc
xor
push
incl
xchg
fsubl
pop
imul
mov
sub
pop
push
xchg
push
lcall
push
push
mov
inc
fsubs
sti
loop
bound
js
jne
scas
gs
sub
sub
loope
xchg
mov
in
loopne
mov
movsb
je
loopne
mov
inc
test
lock
mov
lret
sub
push
scas
fidivs
adcb
hlt
inc
xor
fwait
sbb
dec
cld
jmp
xor
adc
clc
negl
stos
aas
inc
lods
fnstenv
cwtl
cwtl
pop
mov
daa
mov
mov
jle
rclb
loopne
into
les
xor
aas
cmp
iret
invd
mov
push
ds
and
in
sub
out
xchg
mov
in
in
and
inc
jae
jno
in
mov
testl
aas
push
inc
mov
out
shlb
clc
cmp
mov
or
sbb
dec
mov
imul
push
inc
dec
push
fistps
xchg
fcompl
dec
cmpsl
pop
pop
inc
icebp
cmp
mov
sbb
mov
in
test
fisttps
gs
imul
sbb
testb
aaa
sbb
add
push
test
sar
fildll
mov
rcr
mov
xor
mov
sub
icebp
incl
shlb
in
cli
dec
loopne
inc
mov
mov
adc
push
mov
pop
and
mov
popa
pop
movl
clc
call
sub
retw
aas
and
xchg
cli
add
mov
jno
add
repnz
movsb
jmp
xor
jg
lret
int3
rcll
jb
cli
aam
pop
movsb
jp
shr
push
ljmp
cld
inc
cli
mov
adc
sbb
add
pop
add
repz
loop
sarb
pop
hlt
lcall
leave
bound
iret
mov
adcb
aaa
out
xor
mov
in
add
add
test
movsb
out
clc
bound
loop
rolb
cs
jg
test
jecxz
xchg
outsl
pop
cmp
in
cli
incl
loope
pop
adc
mov
lahf
test
pop
movsb
decl
pop
mull
sti
mov
mov
pop
aad
out
clc
jg
mov
sbb
aam
unpcklps
or
decl
movsb
dec
fsubrs
stc
cmp
aas
in
adc
outsb
or
dec
test
add
insb
ja
ficoms
fnstcw
clc
mov
movsl
add
cwtl
andl
inc
rcrl
aad
adc
sbb
int3
xchg
movsb
inc
cmp
mov
sbb
push
jmp
mov
hlt
movsl
inc
dec
or
movsb
push
dec
push
inc
cld
stos
and
add
cwtl
xor
xor
jmp
bound
mov
dec
fld
aaa
or
pop
sahf
icebp
rorb
pop
icebp
decl
ret
or
pop
push
and
inc
adc
in
xchg
mov
cmp
icebp
or
sbb
sub
ret
mov
adc
pop
mov
sbb
jg
or
roll
jg
add
adc
fs
jg
dec
sub
pusha
cwtl
pop
or
mov
push
lcall
cmpsb
js
add
lods
lahf
iret
xor
jbe
cltd
out
out
cli
jg
cmpsb
cmp
mov
pop
adc
sbb
mov
sub
mov
sbb
lock
add
pushl
sarl
pop
push
xor
jg
incl
das
and
jg,pn
push
xor
xchg
mov
es
ljmp
in
xor
mov
dec
xor
add
fisubs
std
adc
mov
and
ds
idiv
lret
mov
mov
in
jnp
movsl
leave
es
dec
int3
sbbb
pop
sbb
xchg
clc
inc
mov
sbb
sbb
mov
fimull
adc
jmp
call
xor
or
loope
imul
es
xchg
and
orl
in
stos
push
popl
xor
pop
adc
rorl
add
inc
sub
adc
xchg
aas
js
ljmp
hlt
xorl
jae
fldt
add
out
imul
sub
ljmp
les
cld
jg
sub
popf
mov
xchg
pop
pop
fistpll
fmuls
out
sub
jmp
iret
xor
decl
out
mov
or
add
or
cwtl
out
xchg
fldcw
mov
decl
xor
popa
popa
pop
fcomi
cmp
inc
xchg
je
cmp
enter
inc
and
cmc
ljmp
mov
cmp
test
push
aas
mov
jge
mov
pop
stc
pop
jp
or
pushl
push
push
les
and
push
sub
jge
pop
mov
sub
sub
xchg
in
or
pop
cmpb
mov
vpaddb
fwait
imul
jo
int
jbe
lcall
movsb
and
cmp
pushf
pop
insl
loopne
cmpsb
scas
xchg
sbb
jg
addr16
cld
mov
cmp
int
jecxz
xchg
and
ljmp
add
lds
cmp
std
cmp
repnz
clc
jg
rol
andl
inc
xor
daa
fistpl
shll
and
mov
or
mov
outsl
pop
rclb
jo
ret
icebp
dec
in
sbb
and
push
movsl
mov
cld
call
adc
cmp
mov
clc
mov
enter
mov
and
fldt
and
fwait
mov
call
lds
lret
hlt
adc
mov
mov
jp
fwait
or
push
movsl
mov
stc
jle
ret
int
out
xchg
mov
aam
mov
call
int3
push
mov
pushf
inc
pop
in
les
cli
sahf
sahf
adc
in
repz
sub
outsb
je
cmp
inc
aam
movsb
inc
fidivrl
scas
outsb
in
mov
add
pop
sahf
mov
mov
test
push
icebp
jmp
call
cs
dec
out
repz
scas
add
enter
xchg
jb
dec
pop
xchg
cmc
aaa
sub
inc
mov
push
jnp
pop
xor
push
sub
mov
mov
jbe
inc
add
pop
es
sub
out
cmpsl
mov
mov
mov
mov
sar
fwait
jmp
sub
cmpsb
imul
xor
shll
in
dec
clc
aaa
push
sahf
lods
push
mov
fmull
decl
add
out
out
into
push
adc
outsl
fs
sub
add
xor
or
mov
mov
add
pop
rorb
mov
clc
fadds
mov
mov
lock
sbb
mov
sub
lea
sbb
inc
push
add
push
js
mov
or
stos
lahf
testb
or
adc
int
test
xor
loope
push
push
call
push
inc
fdivrs
lods
xor
std
pop
jns
cs
lds
sub
in
add
sbb
ss
addl
cli
jns
loopne
sbb
xchg
mov
and
out
dec
push
or
dec
add
sbb
mov
pushf
fsubrl
cmp
dec
mov
dec
sub
hlt
pop
cld
nop
mov
xor
lahf
scas
xor
xchg
adc
out
or
movsb
addr16
sbb
jg
fs
out
jmp
add
pop
vfmadd231ss
loopne
sub
sub
sub
lcall
mov
cli
outsb
push
call
add
jge
mov
ficompl
dec
call
icebp
and
call
mov
int3
lds
hlt
or
pop
lret
pop
icebp
mov
fldcw
sub
adc
pop
icebp
sbb
cwtl
cs
push
ja
xor
sarl
mov
mov
xchg
cld
lock
jg
stc
sub
cmp
jl
es
sub
ljmp
out
push
pusha
mov
add
clc
adc
add
add
and
inc
mov
mov
mov
jns
mov
mov
add
sbb
inc
cli
push
enter
sbb
cld
xchg
nop
push
cmp
sbb
clc
jl
hlt
pop
insl
inc
mov
sub
pop
jae
mov
lcall
outsb
fcoml
cmp
pop
adc
pop
iret
xorl
xchg
imul
das
rol
mov
lds
out
push
mov
push
fnsetpm(287
dec
out
bnd
inc
pop
test
pop
jl
out
clc
lcall
call
sbb
push
mov
add
call
pop
sub
sbb
jbe
pushf
fbld
imull
adc
lock
popf
xor
mov
dec
sub
sub
dec
std
lea
pushl
pop
or
jae
data16
adc
pushf
push
and
fistps
stc
or
pop
lcall
add
aam
push
xor
mov
rclb
test
add
push
mov
incl
and
mov
fldl
pushf
mov
push
push
aaa
and
mov
mov
gs
lcall
adc
lods
sarl
jg
cmp
nop
in
fadds
pusha
scas
sub
cmp
lea
dec
testb
add
add
subb
sub
mov
cmp
push
incb
xchg
jo
imul
incl
mov
xchg
adc
sub
pop
jecxz
adc
test
dec
sub
inc
sub
and
mov
orb
ret
mov
ljmp
sarb
or
and
push
mov
sbb
jne
inc
cmp
xorb
mov
ds
fnsave
xlat
lods
xchg
out
mov
imul
repnz
repz
xor
stos
sub
jbe
cmp
jg
push
pop
xchg
inc
fisubl
sub
dec
dec
fcmovbe
roll
jmp
cld
push
cmp
mov
cmp
movsl
cmp
clc
mov
sub
push
ret
iret
inc
call
out
push
movsl
push
mov
cli
stos
lods
into
jbe
jle
mov
test
pop
xor
pop
pop
ret
hlt
push
std
fwait
and
jae
in
imul
push
add
push
mov
pop
pop
add
push
or
jecxz
and
push
sub
lods
adc
or
or
je
mov
xor
jg
hlt
pop
pop
mov
mov
lret
push
aam
sbb
insl
dec
or
les
outsb
or
mov
jg
shrl
mov
mov
cld
outsb
outsl
xor
jns
dec
mov
cmpb
pop
sbb
into
lret
mov
sbb
bound
cmpb
push
sbb
jl
pop
or
lcall
test
xchg
inc
cmp
sub
adc
sub
movl
lock
aaa
sbb
movsb
negb
and
inc
rclb
cs
push
arpl
mov
das
inc
inc
daa
cwtl
sub
test
dec
ret
add
lds
cmp
xchg
test
fcomip
decl
jo
rorl
mov
dec
xchg
pop
adc
pusha
ret
dec
mov
es
shrb
loop
in
jb
outsl
add
popf
lret
or
push
lods
stos
loop
jge
loop
decl
aam
sahf
cmp
hlt
shrb
sub
jg
fiadds
add
out
mov
or
push
sub
jmp
lock
adc
fdivs
cli
cmpsb
out
push
cli
testb
rcl
pop
outsb
xchg
in
xchg
mov
addb
je
repz
add
push
std
mov
mov
push
aas
stc
inc
sbb
xor
test
lds
hlt
cmp
jg
pop
adc
or
es
test
ficoml
loop
ljmp
mov
push
mov
lds
mov
xor
dec
jne
jmp
inc
js
fidivl
fwait
mov
fsts
pop
sbb
rorl
scas
clc
mov
jecxz
lea
inc
inc
push
outsl
push
movsb
pop
mov
inc
push
xor
or
mov
ds
loopne
sahf
push
mov
cmp
ret
cwtl
add
js,pn
leave
shrl
stos
mov
andb
nop
push
pop
cli
sti
inc
imul
dec
mov
les
sbbb
mov
or
or
popa
std
ljmp
aad
lock
in
outsl
xchg
xchg
pushf
rclb
sbb
xor
jns
add
xchg
cltd
sbb
fdivrp
lock
call
test
cli
sbb
mov
push
mov
push
andb
push
add
orb
ficomps
lods
or
pusha
sbb
mov
cs
stc
pop
jbe
mov
add
dec
jg
jo
or
loop
sub
dec
int
in
test
aam
aaa
pop
hlt
test
sbb
xor
fbld
mov
incl
push
repz
mov
mov
pop
sbb
mov
xchg
jecxz
out
clc
push
imull
or
mov
test
add
lock
fbld
inc
jno
xlat
and
movsl
js
decb
fists
or
jmp
dec
test
nop
aas
movsb
dec
xchg
aad
push
cmpsb
stc
inc
push
decl
jg
aam
sbb
es
movsb
fldenv
sbb
lock
call
jp
movsb
mov
or
xchg
adc
or
in
pop
sbb
jbe
aaa
xchg
pop
cmpb
mov
sti
mov
dec
sub
or
stos
call
or
fstpl
xorl
fmul
xchg
xchg
lods
inc
cmp
jecxz
fimuls
mov
scas
dec
decl
addr16
push
lods
test
sbb
shrb
in
jmp
je
jle
cwtl
incl
cld
incl
movsl
into
outsl
repnz
popf
xchg
icebp
lret
pop
sahf
xor
jp
mov
ljmp
ficoms
cs
loopne
clc
or
iret
xchg
in
inc
cmp
mov
adc
push
lcall
jae
sahf
xchg
xor
dec
push
lods
adc
mov
mov
inc
popa
repz
mov
mov
mov
dec
mov
pusha
out
sar
lcall
push
xchg
loop
mov
lods
adc
jb
mov
mull
pusha
push
sarl
ljmp
scas
cmp
lret
stos
xchg
xchg
mov
cmpb
int3
cmp
out
inc
sahf
cli
test
cli
daa
or
push
cmc
scas
mov
push
jle
scas
sti
das
clc
inc
in
aas
rolb
inc
dec
out
mov
dec
lret
clc
dec
rorl
aam
ja
jbe
incl
push
sbb
clc
push
inc
test
dec
dec
push
and
jg
cltd
shlb
popf
mov
push
cmp
pop
loop
jg
dec
xchg
jmp
das
add
pop
push
mov
out
xchg
out
xchg
pop
mov
add
pop
popf
jle,pn
mov
outsl
ss
nop
xchg
add
mov
bound
pop
jmp
shll
out
mov
mov
jo
lcall
test
ret
cli
mov
inc
and
xchg
xor
loopne
push
fbld
fs
mov
jp
lods
shl
adc
in
push
mov
fcomi
push
jbe
mov
sbb
cmp
xlat
je
adc
add
jg
or
in
or
mov
add
dec
and
mov
mov
xor
cli
mov
lret
dec
and
cmp
add
lret
sbb
pop
and
mov
xor
push
adc
stos
mov
pop
cs
jge
js
dec
mov
jg
int3
adc
add
mov
lret
ss
mov
movsb
cmc
xchg
xchg
adc
xlat
mov
lcall
sbb
dec
cmp
xchg
fisttpl
jns
mov
xchg
xchg
pop
push
pop
mov
xor
fsubs
inc
xchg
dec
notb
xor
sbb
mov
xor
mov
stos
mov
test
jmp
fimull
addb
xor
fsubp
push
push
mov
pop
imul
sbb
jp
dec
mov
xchg
cld
xchg
inc
call
ror
pop
mov
lea
ljmp
out
jne
repnz
add
adc
xchg
fnsave
pop
jmp
nop
inc
loopne
jbe
cmpsb
push
loope
fimull
pop
sub
push
not
adcb
nop
lea
mov
insb
and
jnp
adc
cmp
sbb
movsl
dec
push
inc
xor
nop
lods
or
outsl
je
jecxz
mov
mov
mov
cwtl
and
insl
cmc
les
stos
sub
inc
xchg
jne
mov
pop
addr16
xor
cmp
mov
outsl
inc
int3
ficomps
jmp
call
clc
add
jb
xchg
dec
add
out
loop
jbe
fs
daa
aas
adc
sub
in
shrl
dec
push
mov
arpl
xor
iret
inc
out
addr16
mov
pushl
pop
cld
lods
inc
lds
jg
rcrl
js
enter
pop
icebp
aaa
mov
mov
mov
stos
push
mov
xchg
ret
xchg
mov
aam
sub
lods
or
gs
jb
and
jmp
ljmp
and
pop
popa
ret
decl
out
stos
imul
decl
jo
mov
lcall
and
test
mov
pop
icebp
lcall
sub
xchg
mov
out
xor
mov
sbb
add
mov
das
lods
xchg
mov
sub
test
cmp
sub
adc
pop
pusha
xchg
sbb
nop
ret
inc
add
mov
cmp
mov
incl
adc
ja
mov
pop
test
pop
mov
into
loop
repnz
pop
call
les
outsl
fwait
mov
outsl
loopne
icebp
add
movsl
inc
sub
dec
out
mov
ss
sub
das
clc
jmp
insl
cltd
imul
cmp
add
test
jg
dec
js
int
mov
lods
out
and
pop
testl
jl
adc
inc
cld
filds
sbb
out
daa
imul
xor
ja
mov
and
inc
ljmp
pop
ljmp
sub
ret
dec
test
imul
and
pop
cld
pop
int
xchg
sub
push
mov
xchg
add
push
dec
ljmp
sbb
and
dec
adc
dec
ss
in
arpl
or
mov
dec
dec
clc
xor
mov
pop
int3
pop
orb
lret
pop
sub
cli
rcrb
pop
push
pop
add
enter
xchg
aad
les
lea
xchg
ljmp
sar
mov
fisttpll
sbb
movsb
cmpsb
xchg
aam
stos
xchg
dec
movsb
fmuls
or
stos
jmp
rcl
ret
adc
mov
jg
adc
cmp
xchg
add
rcll
mov
in
pop
or
pushf
jmp
mov
int
loop
jge
in
leave
or
sub
mov
and
jb
pop
clc
push
aam
mov
push
pop
or
cld
cltd
ljmp
xlat
pop
mov
gs
mov
out
adc
xor
xchg
inc
incl
xchg
sub
mov
push
scas
mov
cwtl
stc
fs
mov
pop
insl
clc
adc
mov
pop
loope
mov
subb
ja
xor
hlt
or
mov
add
mov
mov
jg
mov
adc
add
repnz
adc
clc
push
cli
inc
xor
cmpsb
push
xchg
imul
daa
mov
push
mov
mov
or
push
mov
test
push
or
push
hlt
mov
pop
sub
sbb
out
xchg
cs
inc
leave
fdivr
jg
aaa
mov
mov
lods
mov
lods
sbb
es
and
push
jne
xchg
icebp
mov
in
clc
neg
or
dec
das
cli
sub
and
nop
lcall
mov
sub
ja
out
mov
bound
and
adc
inc
mov
or
push
sbb
mov
sbb
lcall
pop
gs
push
mov
jg
pop
dec
pop
ds
addr16
movsb
in
mov
bound
adc
repnz
add
xchg
inc
call
fs
lcall
repnz
ljmp
jno
adc
mov
ficompl
push
sti
aaa
rcrl
outsb
pop
and
int3
incl
pushl
pop
xorb
mov
push
mov
aad
divl
lea
cmp
ret
call
jge
inc
pop
imul
mov
pushl
adc
popa
pop
scas
mov
xchg
outsb
ljmp
mov
hlt
cmp
sbb
pop
popa
dec
les
dec
loop
push
ja
or
ljmp
cmpsl
pop
add
dec
xlat
pop
cwtl
sbb
add
pop
out
xchg
mov
es
decl
outsb
clc
fwait
stos
pop
mov
mov
mov
call
jmp
sbb
jae
scas
pop
mov
jno
adc
fists
cld
jl
stos
pop
lds
fs
sbb
lret
push
inc
cmp
mov
xor
test
les
adc
adc
sar
decl
mov
inc
addl
mov
mov
insb
or
mov
sub
out
pop
incl
mov
push
enter
mov
dec
xor
mov
aas
leave
or
cld
lds
sub
mov
sub
jmp
push
mov
dec
aaa
mov
lret
sub
add
sbb
das
cli
ja
adc
cmpb
enter
jl
mov
jb
pop
add
das
mov
lock
popf
xor
jno
sbb
adc
jg
js
jmp
pop
in
out
inc
repz
push
jmp
repz
js
arpl
dec
ret
fisubrl
jle
mov
loope
jae
sub
lcall
jne
mov
or
jle
adc
outsb
rcrb
jns
fsubrs
outsl
fdivr
jmp
inc
mov
insb
mov
lds
incl
and
pop
popf
cmpsb
cmp
lret
ds
aaa
xchg
sub
add
add
aad
jle
lods
pop
fs
and
or
push
incb
ljmp
sbb
mov
dec
jg
mov
repnz
jl
fs
xor
cld
sbb
hlt
incl
ljmp
and
ror
cmpb
inc
sub
nop
sbb
addb
adc
mov
fsubrs
cltd
dec
jb
ljmp
and
sbb
aam
adc
add
js
test
aaa
jp
cs
cmp
add
lods
sub
jmp
mov
xor
ror
les
lcall
mov
mov
and
jnp
stos
movsl
das
shlb
pop
push
push
in
or
sub
jge
test
mov
repnz
jecxz
dec
lods
stos
jb
mov
rcrl
scas
inc
dec
bound
test
xchg
test
or
scas
xchg
inc
sbb
and
push
adc
jle
xchg
xchg
cmpsl
sahf
clc
cmp
decl
jle
xchg
inc
and
test
ds
subb
dec
sbb
push
movsb
jns
jg
jo
jle
mov
mov
add
sti
dec
mov
xor
nop
loopne
mov
into
pop
mov
orb
or
cld
stos
scas
add
decl
mov
push
testb
jg
add
aas
sub
push
fwait
and
loope
sar
pop
mov
xor
aam
roll
pop
scas
lods
or
sti
outsl
add
mov
jge
fsubs
popa
adc
ja
ficoms
or
mov
ljmp
mov
loopne
dec
iret
adc
jg
jle
adc
pop
jns
out
xchg
cmpsb
fwait
in
xor
mov
dec
jle
adc
call
movsl
stc
sbb
fstpl
and
xor
rorb
pop
pop
sar
mov
pop
pop
enter
inc
ffree
jmp
adc
scas
xchg
and
fcomip
clc
xor
jp
pop
mov
cmp
lea
push
pushl
divb
mov
sbb
test
aam
push
std
scas
clc
push
hlt
fdiv
sarb
jg
cmp
add
add
dec
pop
imul
test
sbb
mov
pop
push
dec
cmc
rcll
adc
clc
ljmp
xor
sub
cld
cmpsb
cli
outsl
jmp
cmpsl
adc
add
add
ja
cltd
movsb
in
mov
push
mov
add
adc
add
in
mov
jg
push
jns
mov
sbb
or
imul
sub
xlat
xor
insb
lods
mov
jg
inc
cld
ja
repz
fwait
shll
in
mov
or
cwtl
or
cwtl
pop
pop
stos
scas
dec
jnp
sar
out
std
insb
ds
pop
pop
std
inc
enter
enter
and
push
lods
inc
fbstp
or
dec
jl
dec
inc
incb
add
bound
ds
data16
pushl
cmp
ret
pop
fcomi
lds
cs
idivb
inc
ret
adc
incl
mov
pop
cmp
pop
push
adc
out
rcrb
mov
push
jle
shll
and
inc
cmp
dec
mov
cmp
pop
push
insl
cmp
pushl
lret
mov
ret
inc
lcall
mov
jo
shlb
out
aas
cmp
jl
push
push
cs
call
shlb
sbb
js
push
cmp
fwait
xor
test
xchg
pop
sub
lea
rorb
pop
test
push
sarb
jne
jo
mov
lods
mov
aas
add
xchg
sti
cmc
test
lods
sub
js
out
mov
loop
lods
cmpsl
out
lcall
andl
adc
mov
sbb
test
dec
idivl
lret
repz
cmp
dec
movl
inc
lret
data16
inc
or
or
mov
in
fwait
pop
insb
repnz
pop
push
cld
jae
fcomip
das
bound
call
fbld
xchg
jno
outsb
push
das
sarb
ljmp
push
pop
xchg
testl
rorb
xchg
cmc
xchg
push
adc
scas
jbe
jg
cld
filds
fildl
test
ret
sub
inc
outsb
cmp
cmpb
jns
pop
idivl
inc
sbb
aaa
pcmpgtb
popf
cmpsl
cmp
fisubrs
push
sub
cmp
std
stos
dec
mov
add
int
jb
jns
xor
in
pop
adc
incl
push
push
insl
js
rep
fadds
pushf
dec
mov
test
xlat
mov
es
push
pop
clc
inc
les
pushf
mov
or
xor
adc
cwtl
mov
jg
jle
nop
jp
lcall
out
sub
std
ljmp
js
jecxz
repz
sbb
xor
int3
sub
stos
loop
inc
in
cmp
mov
outsb
stos
lea
mov
leave
mov
pushf
popl
jecxz
add
cmp
test
ret
bound
dec
popf
aaa
cld
jg
je
pop
jle
mov
je
add
jl
or
decl
jno
test
aaa
movsb
pop
into
mov
pop
inc
cld
fwait
mov
call
mov
in
js
xor
jo
fiadds
pusha
sbb
cmp
shl
xor
decl
imul
iret
and
mov
cmp
iret
lret
lock
mov
or
mov
das
dec
sbb
jg
pushl
imul
cltd
inc
inc
pop
in
test
stos
adc
adc
in
mov
lahf
shrb
push
aaa
aam
mov
pop
xor
repz
scas
in
inc
outsl
sbb
mov
test
call
jp
mov
pop
int3
fwait
xor
int
cmp
fcomip
incl
notl
jge
dec
sbb
pushf
add
inc
inc
push
or
jmp
aam
dec
mov
adc
jle
cli
fcomip
mov
hlt
adc
xchg
mov
add
mov
lahf
mov
cmc
sub
sbb
xor
cwtl
sarl
mov
in
or
xor
shll
mov
or
xchg
pop
lds
loope
mov
pop
jmp
mov
rcl
mov
sbb
xchg
aad
dec
rclb
shll
pop
test
sub
icebp
repnz
and
jo
mov
mov
sub
data16
decl
mov
push
sub
pop
pop
or
ret
jmp
loopne
mov
incl
movsl
popa
adc
fs
mov
insb
les
xchg
pop
inc
outsl
cli
mov
jg
push
mov
out
loope
or
pop
push
and
xchg
cli
sarb
mov
sbb
add
add
popa
lcall
push
test
cmpsb
jmp
das
fcmovnu
sbb
pop
inc
std
dec
mov
add
inc
dec
xchg
scas
xor
jae
fmull
mov
ljmp
mov
ljmpw
push
aam
xchg
adc
nop
and
cli
sbb
sub
ss
mov
xchg
xchg
outsl
ljmp
xlat
adc
incl
sbb
ljmp
cmp
mov
scas
lods
jnp
pop
inc
pop
rorl
jmp
rcrl
aam
rcll
mov
es
aaa
les
scas
push
adc
pushf
push
and
fsqrt
das
dec
clc
mull
cmpsb
outsb
xchg
mov
call
mov
jmp
add
xchg
loop
movsb
jl
test
push
inc
add
ret
test
xchg
inc
call
push
lods
loopne
mov
jg
pop
stos
sbb
xor
ljmp
sub
lahf
ret
popf
dec
cli
or
data16
or
lcall
fbstp
push
addr16
int3
iret
jne
xchg
lret
or
test
negl
cmpsb
ficomps
or
fwait
cmp
lock
aas
idiv
ja
fisubl
jmp
mov
sub
push
jg
mov
xor
test
adc
dec
pushf
push
sbb
or
or
sahf
mov
js
mov
pop
xor
sub
push
movsl
test
sub
aad
and
add
jecxz
loopne,pt
daa
xchg
xchg
jge
mov
push
push
gs
mov
aam
push
and
hlt
aaa
push
outsl
mov
dec
adc
push
rcr
rorl
pop
inc
xchg
or
fimull
in
jg
mov
mov
dec
fisubl
pushf
ret
or
mov
gs
ret
movsb
lods
loop
or
or
insl
in
adc
push
out
jp
cwtl
rorl
fisttpll
push
daa
dec
stos
jmp
mov
arpl
sbb
mov
mov
cmp
mov
push
or
jno
call
or
or
or
sbb
xor
add
fisttps
adc
testb
mov
mov
xor
pop
mov
lcall
loop
cwtl
push
sbb
hlt
mov
aas
es
inc
mov
in
jp
xor
mov
dec
hlt
jle
in
js
push
in
fscale
lahf
mov
adc
int3
and
xchg
xor
fs
stc
lcall
sbb
or
sub
fidivs
cli
add
mov
loopne
lock
mov
mov
pop
clc
xchg
and
out
cli
lcall
cmpl
pop
cmp
adc
xor
out
cmpsb
mov
push
and
sbb
or
lret
push
sub
add
xor
sbb
out
xchg
lock
xor
outsl
xor
jge
mov
adc
cmp
in
leave
pop
or
jge
loop
and
or
adc
mov
fstpt
push
cmpsl
xchg
test
push
mov
push
cmp
and
sahf
lds
subb
sbbb
xlat
dec
pop
push
jle
nop
fisubl
hlt
or
call
adc
push
push
push
int3
repz
add
stos
dec
pop
xchg
mov
stc
push
jg
cmp
adc
sahf
jle
fidivs
rclb
divl
in
mov
mov
adc
xlat
dec
lods
push
loopne
push
dec
pop
call
stos
dec
sbbl
mov
mov
imul
es
ret
ret
or
pop
jp
add
fisubl
jle
dec
test
dec
insl
or
xor
in
inc
jecxz
mov
daa
adc
jbe
rolb
enter
pop
adc
out
sbb
bound
imul
push
sbb
insb
pop
mov
jb
xor
cmp
push
movsl
mov
lea
xchg
sbbl
fistpll
lcall
rcll
mov
clc
mov
in
fldenv
ficoml
adc
sbb
add
xchg
repnz
add
ds
nop
pop
pop
shlb
ficompl
clc
int
sbb
mov
lds
xor
add
inc
packssdw
pop
or
lods
inc
mov
add
sbb
in
subb
mov
shl
sub
fidivrl
out
cmp
cli
addr16
rcrl
mov
arpl
stos
push
lret
mov
mov
cld
xor
ljmp
mov
sbb
ret
insb
movsb
cwtl
into
dec
add
clc
push
push
or
add
and
icebp
pop
xorb
add
orb
mov
fs
fstl
mov
out
add
jae
or
repnz
int3
sbb
inc
js
jp
push
dec
sbb
faddl
cmp
jnp
fsub
mov
pop
sbb
push
sbb
ja
push
ja
jg
stos
mov
add
inc
inc
lock
xchg
add
mov
cmp
cs
mov
cmp
push
pop
mov
mov
and
jbe
xchg
jge
add
or
mov
xor
aas
fcmove
pusha
ret
pusha
dec
jl
sarl
mov
adc
lret
inc
call
into
xchg
pop
inc
mov
mov
std
mov
dec
push
and
es
in
mov
orl
mov
add
sub
test
mov
filds
inc
inc
cmp
out
mov
ret
aad
inc
and
or
xor
lods
out
lcall
movsb
test
cmp
jo
inc
jo
lret
shl
mov
cld
sub
out
push
pop
xchg
pop
and
scas
add
adc
or
lcall
sub
les
enter
loope
pop
or
mov
cltd
je
lods
mov
xor
cmp
cmpsb
mov
inc
xlat
sub
lock
pop
cli
cmp
cmp
xchg
pop
pop
push
or
subb
inc
mov
aaa
ficoms
and
mov
sbb
mov
xchg
lahf
mov
loope
fchs
int3
inc
ljmp
and
mov
mov
dec
sbb
xor
fistpll
jae
ret
scas
shrb
xchg
shl
mov
xlat
dec
jg
das
sub
ret
loope
push
stos
into
inc
lea
ret
sub
loope
sub
inc
insb
adc
psrld
jo
icebp
je
sub
std
xor
rdtsc
and
sub
movsl
push
cmp
test
xchg
loope
dec
jbe
inc
add
adc
stos
sti
dec
fdivrs
jb
iret
addr16
lahf
iret
cmp
insb
mov
or
cmp
mov
dec
aaa
std
jmp
adc
fiaddl
fs
pop
movsl
sub
pop
or
clc
sub
pop
mov
loope
add
lods
sub
jb
test
mov
cmp
je
shll
fs
pop
and
push
add
fdivr
xlat
ja
jmp
stos
jl
pop
push
mov
lret
sub
sti
jle
loop
inc
out
xor
pop
jl
jnp
sub
xor
mov
sti
popf
mov
inc
and
stc
in
mov
clc
repnz
daa
cmc
hlt
insb
jecxz
xor
inc
stc
cmp
or
push
mov
dec
jnp
pop
pop
jmp
xor
pop
outsb
loop
popa
xlat
scas
and
push
dec
adc
addr16
add
pop
pushf
dec
outsb
scas
xchg
sbb
push
pop
push
incl
dec
jmp
ja
test
xchg
jle
push
or
xlat
movsb
push
pop
mov
enter
clc
push
into
jo
dec
pusha
insl
insb
dec
pop
inc
ds
jecxz
xor
pop
mov
jg
sub
into
xor
popa
pop
sbb
jnp
or
int3
mov
rolb
jg
sbb
pop
push
sbb
lcall
xor
dec
sbb
cld
es
adc
mov
dec
call
sbb
cli
mov
inc
xchg
xlat
xchg
sbb
arpl
popf
and
fsubrp
cwtl
jns
mov
fwait
in
mov
incb
add
insl
int
insb
mov
pop
lock
xchg
int3
mov
lock
pop
pop
cmp
jno
xchg
dec
bnd
or
incl
fcomi
push
mov
jle
mov
jge
push
and
mov
adc
sahf
cltd
jmp
jbe
push
dec
and
mov
icebp
pop
cltd
in
or
add
imul
add
enter
out
out
clc
insb
mov
shlb
add
add
rep
pop
jg
repz
aam
std
dec
mov
xor
add
mov
jne
push
or
movsl
js
ss
mov
dec
lahf
out
jne
aas
sub
loop
mov
jne
cmp
mov
jg
test
aam
fcompl
js
sub
test
clc
pop
imul
sahf
aaa
popa
outsl
dec
jmp
push
aam
test
scas
mov
adc
dec
lahf
sbb
jge
dec
mov
adc
jmp
out
test
cmc
clc
mov
sar
test
sbb
push
sub
dec
movsl
mov
sub
xor
mov
pop
pop
mov
pop
je
jge
add
add
movsl
jg
out
loop
iret
outsl
cmp
mov
cld
jbe
pmaxub
cwtl
adc
lahf
jo
es
push
xorl
out
ucomiss
hlt
jo
int3
and
add
aam
push
mov
jo
insb
std
dec
and
mov
out
imul
mov
in
std
and
lcall
sub
and
mov
ret
movsb
push
push
in
mov
mov
fisubrl
add
test
fwait
pop
rolb
shl
xchg
sub
ds
out
or
cmp
hlt
arpl
pop
movl
adc
iret
add
push
pop
scas
es
or
in
xor
mov
dec
xchg
or
fcomp
stos
or
sbb
jns
xor
loopne
mulb
inc
mov
adc
shrb
inc
xchg
push
loopne
jno,pt
push
fstps
or
mov
aam
fistps
mov
cmp
popa
xor
mov
outsl
sahf
jb
je
jno
jecxz
mulb
loopne
xchg
mov
outsb
mov
add
jge
ficomps
xorb
int3
lret
std
mov
pop
call
filds
push
push
scas
sbb
ja
test
jo
pop
jne
nop
pop
out
ficomps
xchg
add
adc
add
add
sub
dec
pop
ret
adc
jg
sti
push
mov
lahf
hlt
push
xchg
sub
mov
sbb
lahf
pushl
out
add
mov
jnp
xlat
pop
mov
mov
and
cmp
inc
adc
mov
scas
mov
movsb
pop
cmp
popf
jmp
jno
test
clc
cmp
or
mov
ljmp
mov
add
js
jmp
pop
je
pop
sbb
loop
push
mov
sub
push
mov
in
sbb
mov
inc
dec
arpl
jbe
aam
mov
dec
jle
aaa
rol
sub
xchg
push
in
mov
lock
pop
sub
add
xor
pop
and
aam
repnz
test
fwait
lock
cli
popl
nop
movsb
fadds
mov
dec
jo
xor
jecxz
loopne
add
mov
xchg
mov
add
loopne
mov
mov
or
cwtl
test
ficomps
pop
xor
jne
cmp
out
or
xchg
xor
sbb
add
adc
filds
jle
addr16
push
pop
out
push
jecxz
or
cmp
lods
or
add
jle
mov
iret
xlat
sub
mov
shll
in
mov
sub
je
mov
cmpsl
mov
pop
and
fstpl
lock
int
mov
fisttpll
adc
imul
pop
fwait
rcrb
ret
sti
mulb
mov
cmp
sbb
call
jg
cli
or
mov
xchg
mov
or
xchg
jl
pop
lock
mov
scas
ret
mov
add
pop
cli
push
pop
and
movsb
add
dec
mov
sbb
push
mov
jecxz
mov
ljmp
out
loope
xchg
inc
adc
lods
jle
movsl
push
je
push
cwtl
jb
pop
inc
or
movsb
nop
add
sub
mov
addb
call
dec
adc
inc
aaa
in
push
xchg
ja
xchg
popf
mov
inc
cmc
lds
outsb
lock
jg
std
mov
xchg
pop
jge
add
pop
xchg
mov
add
cmc
loop
pop
out
mov
sub
or
mov
hlt
add
dec
adc
adc
shll
clc
ljmp
dec
inc
cmp
and
repz
clc
rcl
sub
ror
sub
sbb
ror
dec
cld
pop
adc
xor
pop
cmp
push
dec
or
push
das
aas
jle
aas
leave
icebp
pop
ljmp
in
inc
loopne
dec
divb
cmp
aam
cmp
sub
movsl
dec
mov
jmp
push
xor
test
mov
xchg
push
dec
faddl
leave
popa
cli
test
jae
cmp
js
xor
add
enter
fs
hlt
mov
push
and
jl
sbb
sbb
pop
jle
pop
movsl
sbb
jbe
xchg
repnz
and
mov
jns
or
xor
cmp
sbb
xor
xchg
addr16
int3
cli
call
mov
and
das
gs
mov
cmpsb
ljmp
push
lods
js
mov
ljmp
cmovg
filds
rclb
and
xor
pop
js
adc
push
mov
ret
xorl
jbe
mov
add
and
or
ljmp
push
inc
cmpb
or
mov
add
int3
push
cli
pop
rorb
or
fst
loop
cmpsb
push
insl
or
xorl
insb
lret
testb
mov
add
mov
sub
imul
sub
cmp
xor
fiadds
scas
in
mov
test
mov
idivl
loopne
xchg
adc
sti
mov
das
xchg
dec
push
jnp
lods
xchg
js
into
inc
dec
lds
leave
insl
cmp
test
mov
dec
jne
ret
mov
loope
pop
pop
and
jno
push
ljmp
fs
jmp
add
nop
js
imul
aad
and
test
dec
lret
stos
pop
aad
stc
scas
or
dec
push
test
inc
mov
jnp
cmp
sbb
out
push
pop
lock
ret
push
mov
sub
imul
or
push
sbb
aam
mov
cld
sbb
push
je
jae
scas
pop
mov
lahf
sub
add
ret
push
es
mov
xchg
cmc
add
add
lods
inc
movsb
pop
cld
add
iret
ljmp
movsl
push
leave
inc
psubb
push
scas
call
xchg
jnp
jge
inc
arpl
ret
int3
imul
sbb
jmp
xchg
mov
cmp
movsl
jnp
popf
dec
add
dec
sbb
loopne
fnstenv
adc
add
insb
rorb
jle
adc
adc
dec
cmp
pushf
mov
mov
cmc
push
nop
cli
sbb
mov
fcomps
jo
notb
push
testb
mov
push
xchg
ljmp
mov
sub
mov
loop
xchg
into
movsl
test
mov
popl
add
outsb
lret
inc
in
jbe
imul
add
cwtl
and
push
adc
leave
add
stos
enter
aas
cmpsl
ss
decl
lcall
dec
mov
loope
into
shl
pop
sbb
insl
push
test
adc
inc
add
fsts
mov
pop
es
adc
sbb
out
fnstsw
cmpsl
push
cmc
pop
jmp
idivb
mov
rcl
mov
xor
pop
mov
jge
mov
idivb
loopne
dec
sbb
jnp
iret
dec
shlb
mov
mov
sub
fldenv
imul
xchg
add
fs
ret
mov
fisubrl
cmpl
inc
movsb
xchg
xor
fsubp
inc
lret
out
cmp
or
icebp
cmp
xchg
fdivl
push
jle
sbb
bound
inc
js
mov
and
dec
out
aas
xlat
mov
dec
xor
aam
adc
mov
shlb
mov
mov
mov
jno
pushf
lock
cmp
rcll
jmp
add
std
rol
sbb
add
mov
mov
xchg
jo
push
pop
add
in
sbbb
dec
inc
adc
faddl
es
pop
adc
push
cmp
jecxz
mov
mov
mov
cmp
outsl
mov
movsb
call
hlt
outsl
jecxz
xchg
sub
sub
xchg
or
int3
rcrl
scas
aam
pop
xchg
lcall
std
adc
das
push
out
outsb
roll
fadds
pop
push
sbb
sbb
add
cmp
aaa
mov
mov
sbb
push
pop
insb
movb
pop
in
xor
inc
xor
out
ret
stos
inc
lock
test
pop
hlt
ret
cmc
repnz
mov
loop
pushf
mov
lods
jge
movsb
loopne
rclb
sbbl
cmp
fisubrl
fldt
mov
outsl
mov
xor
adc
mov
dec
jge
das
xchg
lcall
subb
test
inc
jb
sbb
neg
push
fdivrs
fbld
outsl
xor
xor
or
mov
in
xchg
ret
imul
pop
push
iret
stos
int3
dec
fs
pusha
shr
jmp
xchg
out
fs
mov
lret
jne
subl
fcmovne
cmpsl
fidivrl
push
mov
jno
call
cmpsb
es
cmpsl
ss
cmp
add
sti
mov
adc
fstpt
pop
dec
jnp
xchg
fldcw
scas
inc
loopne
add
cmc
fstpl
out
mov
lea
aam
mov
jmp
pop
mov
or
sbb
das
cmp
js
jmp
inc
push
add
cli
incl
fidivs
xchg
in
es
cmp
mov
or
push
push
cmp
mov
pushl
lret
cmc
lods
test
loop
and
cmp
hlt
stos
jbe
xchg
and
loopne
cwtl
add
xor
mov
dec
mov
stc
popa
pop
fcomip
push
xor
add
inc
icebp
sahf
test
pop
push
fmull
nop
xlat
rorb
jmp
xchg
lret
jns
push
adc
stc
mov
loopne
repz
sbb
xor
sbb
les
push
push
cld
sbb
or
jb
roll
add
test
dec
mov
add
lea
fbstp
xor
cmovp
icebp
push
test
ds
or
adc
ja
inc
popf
cmpsl
outsb
and
nop
gs
inc
push
cmp
mov
mov
mov
pop
dec
into
pusha
dec
rclb
push
outsl
dec
ror
mov
pop
push
flds
push
dec
stc
sbb
movsb
les
dec
aaa
fcomip
jge
or
add
dec
xlat
mov
out
rcr
dec
add
int
jmp
mov
pop
adcl
rcll
nop
lock
bound
xor
push
jle
add
xchg
sub
jno
aad
test
xchg
push
mov
pop
pop
mov
das
test
cmp
test
xchg
add
shrl
mov
call
js
pop
into
pop
push
les
and
repnz
pop
lock
mov
sbb
or
jle
lret
and
mov
fildl
scas
hlt
push
jno
sub
pop
test
sub
shlb
adc
pop
inc
cli
push
sti
clc
ret
push
push
mov
test
test
sbb
xor
add
jle
jge
loopne
inc
jecxz
jmp
and
add
cmc
push
and
movsb
inc
rolb
sbb
aam
lahf
or
cmp
push
fstpt
stos
in
mov
repnz
dec
push
outsb
ja
add
pop
idivl
add
fnsave
addl
out
rcll
push
outsb
pop
jge
jecxz
pop
adc
movsl
movsb
lods
or
push
ret
mov
loopne
insl
jmp
lock
lcall
clc
push
push
or
addr16
adc
aaa
loop
inc
xchg
out
pcmpeqb
sahf
ret
add
mov
dec
or
push
test
fadds
ficomps
out
xor
nop
out
repz
jl
jg
in
aas
jno
adc
xchg
add
sub
push
dec
pop
or
adc
mov
cmp
repnz
add
xor
sbb
movsl
ds
add
je
ret
mov
mov
mov
mov
lods
clc
inc
adc
dec
xchg
cmpsl
out
enter
mov
inc
mov
push
fldenv
hlt
in
cmp
testb
pop
mov
fwait
adc
xchg
icebp
lcall
pop
cs
rcrw
out
mov
sub
lock
xchg
test
in
fdivr
xlat
lds
test
and
idivl
sub
jne
cmp
icebp
in
nop
cmp
dec
fistpll
adc
int
icebp
scas
ficomps
mov
loop
cmp
xchg
sub
inc
jo
nopl
iret
rol
push
jnp
fildl
std
incl
or
jp
or
mov
aas
jl
jecxz
cs
out
shrb
lret
test
fildll
adc
lds
nop
dec
cltd
loopne
dec
pushf
ljmp
ret
pop
inc
or
fwait
mov
test
inc
rcl
sti
adc
add
repz
fiadds
and
cli
aad
hlt
rcr
jbe
push
mov
mov
mulb
incl
fwait
aam
je
cwtl
hlt
mov
rclb
adc
push
jg
and
mov
iret
roll
pop
jne
add
mov
scas
fdivrl
xor
ljmp
adc
sbb
aam
dec
push
decb
jne
outsb
cmp
rcrb
ljmp
jnp
and
and
sub
es
stos
pusha
daa
push
inc
je
cmp
pop
shrb
out
fmull
lret
and
pushf
push
orl
add
out
lds
lock
push
addb
push
jge
xlat
movsl
add
add
imul
and
cmp
mov
imul
add
pushf
mov
movsb
sub
xchg
call
in
gs
mov
mov
or
outsb
or
aam
shlb
add
cmp
loope
add
sbb
fnstsw
aam
add
pop
add
cmp
nop
jo
pusha
push
insb
mov
in
or
insb
jmp
enter
and
cmpsb
shll
shlb
mov
incl
jl
adc
dec
mov
pop
ret
ret
push
jae
pop
je
jno
dec
and
daa
repnz
std
lock
inc
xchg
loop
pusha
sbb
jne
dec
addr16
jae
in
push
and
inc
in
add
pop
add
outsb
out
add
jae
push
pop
add
fisubrs
mov
lods
adc
jno
iret
push
inc
mov
add
fimuls
mov
jp
lods
adc
sbb
out
fcmovb
shlb
imul
dec
clc
mov
icebp
fstps
jbe
loope
or
dec
adc
push
inc
jne
sub
push
pushf
mov
dec
gs
cmc
sub
clc
mov
in
imul
rorb
dec
call
cmpsl
xor
xor
adc
in
pop
data16
cmp
dec
dec
in
stos
jecxz
or
fcompl
lret
ljmp
mov
xor
mov
adc
popa
jge
ljmp
sub
xchg
sarl
movsb
les
enter
adc
in
inc
arpl
xchg
sbb
jp
std
in
add
pop
sub
filds
loop
pop
jmp
pop
xchg
add
lret
mov
xchg
xchg
arpl
repnz
rolb
pushf
cmp
adc
iret
loopne
mov
mov
std
jb
lahf
add
andb
inc
into
mov
shrb
adc
adc
inc
dec
imul
adc
mov
pop
jg
mov
push
sbb
and
jle
pop
dec
cld
add
cmpsb
cmc
cmp
outsb
shll
adc
fs
outsl
cmc
cmp
jp
popf
mov
push
push
mov
inc
pop
pop
inc
xchg
insb
and
jmp
xor
sbb
loope
mov
fsts
sbb
or
mov
int3
mov
pusha
mov
daa
jle
mov
jnp
dec
enter
mov
pop
push
movsl
loop
and
mov
rclb
std
sub
xor
test
mov
sahf
pop
xor
mov
fisttps
scas
and
push
test
movsb
in
cmp
mov
in
mov
mov
fisubrs
mov
test
ffreep
jb
outsb
ljmp
data16
cltd
idivb
adc
cmp
cmp
cltd
out
call
cmpl
and
sbb
fstl
loope
ret
lds
loopne
inc
inc
movsb
add
stos
dec
sbbl
into
aaa
mov
inc
jl
fwait
scas
cmp
jge
lods
scas
sbb
scas
aam
cmp
add
stos
je
pop
test
scas
dec
dec
out
inc
xchg
out
mov
inc
sbb
loopne
inc
rclb
mov
mov
mov
rcrb
ljmp
push
pop
inc
cmp
or
fdivl
sbb
push
in
jl
xchg
jle
das
add
jg
ret
lahf
and
mov
xchg
ljmp
push
js
fs
mov
movsb
and
cmp
adc
out
and
add
push
pushl
inc
in
sbb
pusha
je
mov
lock
subb
push
jne
xchg
sbb
push
or
cld
test
jmp
xchg
cmp
sbb
mov
xchg
xchg
mov
decl
mov
js
push
and
pop
pop
inc
pop
outsl
cwtl
or
or
jbe
ret
mov
jle
push
mov
or
sbb
enter
test
scas
popf
or
rclb
mov
lea
add
fstps
dec
mov
add
cmp
cltd
imul
push
pushf
cmpsl
fs
out
loope
ljmp
xor
int
cmpsb
or
push
lock
jle
test
pop
add
cli
loop
jo
cmp
cld
mov
inc
adc
push
mov
test
sub
mov
pushl
cmp
jb
into
nop
rep
and
jecxz
jecxz
lock
je
adc
inc
sbb
xor
sub
jb
cld
in
rcl
sarb
mov
or
lret
mov
add
jbe
loope
sub
mov
imul
repnz
int
xchg
cmp
int3
cmp
pop
icebp
jg
outsb
dec
out
pop
jl
sub
dec
shl
rolb
dec
mov
mov
outsl
jg
scas
popa
or
mov
jp
push
test
ds
mov
aas
aam
xchg
or
xor
xchg
popa
lock
test
and
mov
test
lock
ficomps
clc
jae
add
incl
subb
pop
idivl
divb
repnz
call
ret
xchg
xchg
mov
loopne
ds
gs
mov
xor
and
lcall
bound
jo
jp
sbb
pop
mov
sahf
jbe
hlt
fwait
into
pop
dec
or
and
je
cmp
pop
cld
dec
data16
ljmp
pop
cmp
xchg
fisubl
cmpsb
and
add
loopne
stos
aam
push
iret
adc
push
aas
pop
xchg
mov
pop
fcoms
mov
testl
ss
pop
xlat
ss
aas
dec
faddl
sub
fimuls
pop
sbbl
jge
out
cmp
inc
sahf
dec
f2xm1
push
stos
mov
or
mov
inc
popf
hlt
call
cltd
daa
scas
inc
mov
pop
pop
lea
loope
add
sub
or
icebp
push
cmp
jl
xchg
ja
test
aad
popl
mov
or
aad
mov
hlt
push
adc
test
push
clc
push
scas
pop
inc
fucomip
jnp
lods
mov
mov
push
jbe
xchg
into
mov
pop
fsts
dec
xlat
lods
and
outsb
test
mov
mov
and
adc
inc
ficoml
or
jo
sbb
and
scas
andb
incl
daa
inc
jbe
ficompl
push
jno
mov
pop
test
xchg
les
inc
sbb
jmp
cmpsb
rolb
js
ds
sar
fwait
adcb
fwait
mov
aad
mov
mov
ljmp
and
mov
fidivs
out
in
xor
add
sub
lcall
sub
push
cmc
push
add
pop
jl
jnp
loope
hlt
jge
fsubl
mov
stos
movsl
aam
mov
cli
xor
push
insl
inc
fsqrt
sub
xor
aas
nop
xchg
and
arpl
gs
inc
shll
jbe
mov
sub
dec
in
jge
scas
lgs
adc
mov
clc
pop
cld
aaa
mov
or
xor
xlat
js
dec
in
mov
jge
mov
hlt
in
jns
out
or
add
mov
rolb
mov
out
ds
lock
and
mov
decb
push
inc
mov
xor
sub
jne
fadds
out
pop
cmpb
movsb
add
mov
icebp
sub
pop
psubw
testb
pusha
mov
lret
ret
pop
icebp
idivl
ds
repnz
in
cld
imul
aam
xchg
and
shlb
mov
imul
outsb
cmp
stc
js
push
incb
pop
aaa
pusha
imul
cld
sar
in
pop
icebp
jg
test
out
adc
and
out
hlt
mov
loopne
ljmp
pop
cmc
fldt
or
dec
dec
xor
aam
or
call
mov
decl
cmc
adc
jp
stos
cmp
inc
roll
mov
jle
sub
dec
rclb
xchg
dec
add
int
mov
scas
push
or
shlb
in
pusha
xor
loope
jmp
clc
mov
fstpt
mov
insl
push
dec
push
inc
jle
add
rcrb
mov
fistl
fimull
xorl
outsb
insb
sub
cmp
mov
ret
cmp
stos
jmp
mov
xchg
lock
push
cmc
push
xchg
push
xchg
call
outsb
inc
rsqrtps
ds
inc
cmpsb
pop
xchg
dec
pop
adc
repnz
or
movsl
call
mov
or
dec
lods
mov
mov
rol
jle
std
and
xor
pop
hlt
add
mov
movsl
sbbb
jmp
int
inc
rorl
in
xchg
pop
call
popa
add
mov
lods
rol
nop
inc
stos
aas
xorb
add
mov
test
push
mov
xchg
fisttps
fwait
repz
mov
pushf
xor
das
nop
mov
jo
sub
pusha
lock
lods
cmp
inc
cmp
stos
or
add
fisubrs
shlb
xor
mov
cmp
lahf
mov
hlt
and
jo
mov
mov
mov
sbb
add
jb
aad
fnstsw
jo
aaa
mov
adc
mov
jg
jb
hlt
jp
inc
fldenv
call
cmpsl
scas
and
mov
jmp
adc
inc
lods
jnp
faddp
jnp
lods
sti
movsb
mov
mov
cmpsb
ja
xchg
mov
test
xchg
sbb
mov
rcl
and
bound
and
push
or
inc
pushf
mov
push
sbb
aas
mov
pop
push
sub
push
aad
loopne
gs
cld
xchg
push
movsl
jg
xor
jne
mov
sbb
int
shl
mov
mov
lock
sub
test
aam
loopne
scas
mov
mov
cwtl
lea
mov
imul
inc
dec
out
outsl
hlt
pop
cmc
sub
dec
cmpsb
adc
scas
pop
mov
jge
les
adcb
pop
fdiv
cmp
ret
push
xchg
mov
loopne
jb
enter
inc
add
mov
sbb
jo
push
loope
ret
leave
adc
faddl
jge
jo
mov
test
sub
ret
mov
push
mov
stos
mov
and
cmpsl
xchg
jp
in
sbb
pop
movsl
push
pop
add
aad
dec
arpl
aam
outsb
and
cmp
outsl
lret
add
xor
xchg
fwait
jno
cmp
jo
insb
sub
popa
mov
push
xor
xchg
negl
mov
push
shlb
lds
dec
in
push
mov
dec
xorb
iret
sbb
adc
enter
cmp
adc
mov
sbb
lret
test
sti
outsb
sub
sub
cmp
loopne
jne
cmp
in
test
jns
lods
sbb
push
sbb
add
ret
int3
mov
loopne
orb
daa
fdivrp
imul
hlt
dec
mov
nop
mov
pop
add
pop
fidivrl
mov
add
xchg
pusha
dec
ss
sub
loopne
out
lahf
cli
and
and
nop
jbe
add
cmpsb
movd
ljmp
movsb
clc
pop
cltd
cmp
pushw
jno
sbb
sbb
roll
inc
sahf
pop
fadds
aam
not
lds
push
mov
leave
mov
sbb
adc
or
and
sbb
aas
xchg
dec
aad
out
xor
push
std
xchg
outsb
cmp
lods
notl
popa
and
adc
test
popf
mov
cli
fwait
xchg
hlt
add
popa
jns
and
push
push
popa
cs
in
dec
ss
cld
outsl
mov
inc
adc
in
fisubl
mov
push
inc
hlt
les
in
imul
aam
and
add
sbb
pop
dec
sbb
pop
loope
sub
add
adc
stos
dec
hlt
shrb
faddl
dec
test
inc
mov
pop
mov
dec
mov
decb
jb
or
dec
and
cmp
and
and
xlat
iret
mov
bound
xor
loop
add
sarl
cmpsl
pop
pop
inc
jns
lock
repz
scas
fwait
push
xor
xchg
es
mov
gs
cmp
cld
inc
jmp
js
mov
call
test
mov
gs
sbb
mov
mov
test
std
loop,pn
pop
jnp
jg
dec
jo
pusha
flds
test
mov
pop
into
push
or
xor
xchg
mov
mov
mov
xchg
jg
push
je
jle
aad
outsb
std
xor
mov
out
push
repnz
fs
decb
push
leave
push
push
xor
nop
sbb
xlat
imul
cli
mov
cmpsb
and
cli
inc
adc
repnz
popf
pushl
adc
outsl
mov
inc
xlat
call
mov
ljmp
add
jo
lret
insb
imul
jl
pop
mov
fisttpll
jne
pop
test
push
imul
sub
aaa
sub
scas
jp
mov
xchg
insb
lock
je
cs
movsl
cmp
rcrl
loop
addr16
cmp
movsb
int
mov
popf
icebp
mov
addl
test
fistl
xchg
jo
rclb
fbstp
es
pop
ret
les
xchg
pop
mov
xor
mov
sub
mov
jb
enter
loopne
ljmp
adc
add
xor
adc
into
mov
lock
push
mov
es
aam
fwait
cmpb
mov
or
js
adc
rolb
mov
icebp
jle,pn
mov
cmp
decl
lds
enter
cmp
inc
or
mov
jp
push
cli
mov
add
inc
cli
shrl
jo
add
in
sub
les
clc
mov
or
adc
adc
dec
xchg
leave
ja
bound
in
dec
cmc
rclb
sarl
jmp
imul
dec
loope
cltd
ds
out
push
cmp
leave
mov
outsl
cvtpi2ps
push
adc
mov
mov
add
aam
cmp
dec
sbb
pop
sub
repnz
adc
test
repz
or
stc
mov
cwtl
sbb
cmc
aad
or
loope
add
fisttps
lock
insl
loopne
repnz
xchg
mov
add
dec
fistpll
movb
sbb
sub
int
inc
adc
mov
or
xchg
mov
cmp
cmp
setae
test
fimull
incb
adc
fbld
push
nop
das
push
mov
ja
rorb
sub
push
push
inc
cmpsb
pop
add
dec
out
mov
and
cmpsl
adc
add
pop
xchg
sub
enter
out
icebp
in
cmp
jg
mov
pop
imul
inc
mov
mov
adc
dec
dec
cld
decl
iret
dec
mov
inc
add
xchg
jbe
jno
test
je
sub
sub
mov
ss
outsl
enter
jne
jl
or
movsb
mov
push
push
lea
outsb
lds
sbb
js
pop
jo
cmc
adc
shll
or
pop
fisttpl
stos
mov
repnz
pop
lret
cmp
scas
inc
loope
inc
scas
fisubrl
fidivrl
and
push
insl
fs
sbb
loope
push
frstor
pop
mov
nop
cmp
dec
out
hlt
mov
and
jno
jb
xor
inc
push
shlb
sub
jg
push
pusha
add
push
ja
or
dec
mov
cmp
call
ljmp
mov
scas
es
out
std
iret
cmp
mov
push
mov
das
jg
xchg
push
stos
inc
xlat
add
mov
pop
xchg
pop
sbb
addb
sub
sub
xor
sarb
push
push
pop
hlt
dec
mov
or
xor
or
in
inc
in
mov
ror
dec
inc
sub
cld
clc
aad
inc
lcall
inc
adc
hlt
divb
roll
push
int
add
inc
push
mov
add
out
fucomip
lahf
std
int3
dec
mov
xor
push
out
jl
std
jbe
xchg
mov
out
or
jmp
mov
out
mov
shlb
jno
mov
adc
jo
xchg
enter
push
push
sub
xor
das
and
pop
sub
pop
mov
mov
mov
or
lea
pop
cmp
sbb
dec
push
test
dec
out
xor
addl
sbb
push
icebp
incl
addr16
mov
imulb
into
xor
push
jns
push
inc
push
and
sub
add
add
cld
adc
loopne
lcall
mov
iret
xchg
test
stos
test
dec
loop
sub
gs
inc
pop
adc
lods
mov
int3
int
pushf
ss
cmp
stos
clc
xchg
add
push
cmp
loope
or
neg
out
add
pop
and
pushf
push
adc
incl
out
jp
mov
movsl
sub
push
inc
mov
xchg
movb
pop
test
jecxz
sub
insb
add
clc
cli
mov
mov
lock
xor
mov
insl
xchg
sbb
dec
out
xchg
mov
inc
cli
or
jno
and
aad
daa
fisubrl
jle
mov
testl
mov
jbe
push
add
lcall
arpl
imul
xor
cs
pop
shrl
fcomps
hlt
aas
jo
xlat
inc
inc
dec
lcall
test
aaa
mov
call
mov
xor
xor
movsl
sarb
jmp
cmp
rorb
ret
outsl
jmp
adc
ljmp
stc
fs
sub
jl
add
or
dec
adc
ret
mov
pop
pop
pop
cmp
sbb
add
sub
into
xchg
ficompl
push
mov
fadd
call
add
mov
sub
stos
mov
das
scas
push
xchg
pop
ljmp
mov
and
push
lcall
movsl
or
push
loop
je
mov
int3
test
sbb
movsb
int
clc
or
mov
ds
sbb
lea
xchg
cmp
data16
jl
xorb
loopne
xchg
jge
pop
ret
lret
xchg
jae
cmp
std
jb
and
dec
fildl
cld
ds
inc
movsb
addr16
jmp
shlb
adc
test
ds
dec
pop
xchg
inc
jg
mov
sub
imul
and
jp
xchg
push
dec
rcl
dec
cs
cmovge
mov
jno
lods
mov
or
scas
pusha
xor
cmpsb
cmp
aas
les
jecxz
enter
mov
imul
pushf
test
push
cld
outsl
inc
nop
into
mov
sbb
mov
dec
or
xchg
xchg
push
xor
mov
push
push
fwait
lcall
dec
std
adc
icebp
icebp
hlt
xor
gs
inc
fcompl
in
mov
mov
popa
sbb
sbb
adc
stc
mov
movsb
cmp
or
std
push
callw
aam
add
cld
pop
xor
jecxz
xchg
shrl
and
andb
and
je
mov
insb
dec
test
mov
pop
movsb
adc
lcall
loop
lock
cmp
fmul
ror
mov
jecxz
jno
jbe
xor
addl
adc
mov
mov
mov
pop
lods
pushf
cmp
cli
sbb
xorb
push
into
cmp
mov
cmp
inc
cmpsl
cli
jmp
mov
repz
pop
imul
pop
cmpsb
clc
xchg
xchg
lds
fsubrs
sub
sub
cli
cwtl
ficoms
sub
in
push
ret
push
loope
cmc
bound
decl
out
jecxz
jmp
jnp
jmp
outsl
inc
mov
xchg
test
dec
loopne
xor
push
loopne
push
jecxz
out
dec
cmp
loopne
movsb
lret
js
aas
push
jle
and
cmp
test
stos
imul
orb
adcl
adc
mov
sub
inc
mov
dec
lahf
xchg
std
sbb
jbe
cmp
push
leave
adc
sub
xor
cmp
rcl
push
leave
pop
xchg
add
xchg
pop
xorb
fistps
jg
sbb
xchg
stos
setge
mov
mov
sub
inc
pop
cmp
incb
xchg
mov
pop
and
lea
shlb
add
xchg
xor
mov
mov
xor
or
inc
add
clc
int3
pop
lcall
daa
xchg
and
lret
int3
push
xchg
push
filds
in
mov
mov
outsb
insb
jecxz
sbb
pop
adc
out
jmp
jmp
outsb
aas
out
mov
les
and
cmp
adc
mov
stos
shlb
xlat
test
sti
rcrb
incb
icebp
push
ss
les
int
insl
leave
jbe
pushf
jmp
jge
iret
cmp
ja
rolb
pop
cmp
push
or
mov
mov
cwtl
lods
fldt
xlat
pop
lock
les
dec
les
inc
cmpsl
sub
or
out
mov
cmp
or
test
stos
clc
icebp
or
push
hlt
sti
jp
pop
ret
lahf
gs
fcmovnb
inc
clc
jmp
xchg
rorl
jae
jle
sbb
or
in
rcl
adc
in
push
mov
cmp
jb
sbb
or
lea
sbb
les
jl
inc
jne
sbb
pushf
jg
pop
sub
test
outsb
push
mov
fwait
lea
mov
inc
mov
sub
push
adc
mov
scas
cmc
mov
add
gs
fnsave
dec
fstpl
rcl
or
daa
push
and
decl
cmp
inc
in
push
add
fbstp
gs
pop
mov
inc
gs
sub
jo
dec
les
stos
scas
xchg
les
imul
inc
mov
inc
mov
aas
pop
aaa
jo
mov
mov
inc
or
data16
push
fistps
pop
cld
jnp
xchg
mov
cmp
add
xor
dec
xchg
adc
pop
mov
sub
stos
std
lcall
mov
fwait
rcl
push
lods
mov
sbb
sbb
add
fisubl
mov
xchg
mov
push
idivl
adc
add
fsub
std
mov
mov
pop
cmp
shr
insl
xorb
mov
out
sub
sub
jmp
sbb
ljmp
std
call
loop
dec
cmp
sahf
xchg
sbb
pop
push
mov
mov
mov
insb
jge
pushl
push
aad
adc
sahf
push
jmp
bound
hlt
sub
jno
pop
sbb
jae
sbb
fldl
mov
or
mov
xchg
sbb
lds
lock
cmpsl
xor
jmp
pop
fistl
aaa
ljmp
xor
pop
loopne
popf
pop
push
popa
data16
loopne
mov
push
data16
scas
adc
lcall
jl
mov
js
or
test
jb
les
cmpsb
pop
mov
adc
rcl
or
mov
lcall
sbb
lcall
inc
cmpsb
sahf
data16
push
xor
jge
jns
adc
inc
lock
inc
out
mov
or
inc
mov
inc
add
push
aam
dec
add
fisttps
icebp
lods
aas
rol
mov
push
test
pusha
test
repz
lcall
push
fbstp
mov
add
fcmovnu
push
hlt
fucomi
ret
cwtl
enter
pushf
mov
aam
andb
outsb
bound
cmpb
repnz
push
or
mov
jmp
sbb
std
psubb
xchg
jb
ds
jb
pusha
ja
int
std
cmp
cmp
movsb
ljmp
xor
fdiv
and
dec
xor
test
xor
bound
les
mov
cmp
jecxz
mov
insb
movb
adc
cwtl
mov
in
dec
fisubs
enter
lock
jmp
pop
push
cs
mul
icebp
mov
add
rcrl
shl
push
cli
mov
aad
and
mov
adc
cmp
rolb
pop
push
pop
sarl
sbb
dec
sub
push
pusha
adcl
in
lock
les
mov
cltd
push
jg
bound
je
cmp
add
decl
shlb
add
xchg
lea
inc
mov
test
xchg
repnz
mov
lock
sarb
call
adc
jg
mov
jecxz
xchg
fsubrp
outsb
nop
mov
sub
pop
sub
cmpsb
ljmp
dec
ds
test
shlb
jno
xchg
lock
repnz
cwtl
out
fs
rol
aad
adc
adc
jg
inc
stos
stc
aam
push
cld
lahf
out
mov
jne
out
pop
call
push
push
pushf
pop
popa
fmul
xor
sbb
xor
pop
jp
mov
jmp
jge
push
lea
push
dec
cmp
xchg
push
fldl
fmulp
and
pop
xor
or
in
xchg
inc
std
push
dec
je
adc
jne
mov
test
jo
cmp
mov
insl
into
push
dec
push
in
aaa
mov
ljmp
sub
dec
mov
sub
sub
xchg
or
ret
stos
pop
mov
inc
sub
icebp
lahf
mov
subl
pop
xor
les
hlt
inc
stos
or
jg
lock
bswap
lock
adc
cmpsl
clc
push
clc
aam
pop
ret
movsb
push
call
jge
cmp
sti
jne
cmp
sahf
add
mov
sbb
stos
mov
mov
insb
adc
add
fnstcw
push
or
add
jae
push
mov
pop
or
xchg
call
pushf
push
pop
mov
pop
xchg
loopne
cwtl
xchg
jmp
dec
sub
xchg
fsts
push
xchg
test
sub
push
adc
adc
push
jnp
das
mov
dec
test
xchg
adc
scas
mov
hlt
cmpl
incb
loop
sbb
fwait
sbb
stos
mov
lret
jl
in
les
cltd
cmp
dec
cmc
movhps
dec
adcb
lcall
sbb
xrelease
test
add
mov
mov
das
cmpsb
mov
adc
stos
into
xor
mov
mov
add
movsb
lahf
mulb
enterw
ja
push
jno
mov
mov
and
lcall
ret
hlt
adc
inc
and
lds
and
pop
je
fldt
fsub
out
push
loop
lods
fnsave
mov
xor
sbb
mov
int
mov
or
or
insl
clc
ljmp
push
out
jnp
test
ljmp
dec
call
ficompl
faddl
mov
jg
aad
xor
lock
add
arpl
xor
punpckhdq
cmp
lods
pop
sbbl
fidivs
jp
mov
sar
and
call
adcl
sbb
sub
mov
mov
mov
mov
mov
push
out
stc
jb
sub
cmp
stos
or
xchg
ret
mov
mov
scas
jo
stos
sub
push
es
or
pop
in
fwait
jbe
imul
jae
js
push
or
jo
add
push
cli
sub
adc
sbb
mov
dec
jo
pop
pop
fimuls
mov
or
loope
add
mov
in
sbb
and
ds
idivl
out
dec
adc
mov
loope
push
icebp
pop
mov
aad
push
cmpsl
jg
inc
sub
scas
aam
mov
inc
adc
int3
and
push
adc
or
aam
shll
ret
ficoms
cmc
js
push
movsl
rorb
cs
sbb
or
call
adc
inc
shlb
mulb
jmp
push
push
sbb
stos
das
mov
pop
push
pop
ljmp
scas
gs
test
loop
xor
cli
pop
in
sbb
loope
push
jo
insl
fdivs
inc
push
and
and
out
mov
or
sub
dec
jmp
cmp
cmp
mov
add
outsb
decb
icebp
mov
adc
loop
mov
inc
int
jb
cwtl
fsubs
sbb
incl
adc
jecxz
fsubrp
and
jl
test
cmp
adcb
push
xor
xor
loope
cmpsb
testb
pop
push
sub
dec
add
fiadds
imul
aas
popf
rcrb
add
mov
xchg
sbb
mov
xchg
xlat
push
ja
cmpsl
pop
push
mov
cmp
push
xchg
test
lea
sub
add
scas
mov
cli
dec
ljmp
or
sahf
scas
xor
mov
mov
cmc
mov
inc
sbb
imul
fsubrs
stos
insl
push
jecxz
das
ficomps
mov
ja
jl
push
push
add
enter
loopne
xchg
addl
mov
sbb
pop
cmp
rcll
decb
outsl
pop
push
dec
movsb
insb
daa
ja
xchg
fcmovnbe
in
mov
xchg
loope
pop
push
pop
add
aam
add
daa
sbb
or
mov
inc
sub
pop
push
jmp
pushf
bnd
sbb
aam
xchg
pop
xchg
adc
test
pop
lcall
mov
imul
inc
cli
scas
js
ljmp
loop
add
xchg
inc
mov
jmp
idiv
push
in
sti
ficompl
inc
or
jl
call
mov
pop
fbld
sbb
icebp
cmp
jl
xor
dec
jp
ljmp
cld
mov
int3
lock
movsl
fs
mov
daa
cmp
sub
xor
or
ror
jo
push
mov
shrl
mov
ja
mov
cmc
inc
mov
iret
jbe
scas
icebp
hlt
jno
loop
cmp
xchg
gs
ljmp
inc
cwtl
adc
jge
inc
leave
add
jns
into
mov
outsl
push
or
inc
add
push
xchg
mov
mov
push
pushf
pop
or
arpl
pop
gs
dec
stos
sub
pushf
loopne
stc
xchg
fldcw
mov
int
or
cs
jecxz
push
pop
cltd
imul
adc
fsubl
fstl
sub
movsb
sub
jns
scas
inc
cmp
roll
mov
push
ss
fiaddl
jle
sahf
xchg
rolb
push
clc
pop
inc
insl
lods
out
dec
mov
jp
daa
rolb
jle
cmc
pop
mov
pop
xor
jns
daa
ljmp
out
jbe
lret
ficompl
jno
and
clc
sbb
push
sub
inc
or
xorb
ret
aam
mov
fisubrl
cmp
imul
sub
sbb
pop
cmp
cmp
mov
sub
cs
test
test
div
add
mov
sub
lods
nop
add
xchg
in
loop
cli
push
cwtl
xchg
add
mov
mov
adc
rcl
repnz
int3
andb
je
cs
sub
scas
lock
into
cmp
dec
pushl
movsb
cmp
ja
push
sahf
aaa
adc
mov
insl
addb
lret
bound
loop
pop
insb
adc
or
push
cld
leave
bound
push
popf
in
pop
sub
cld
scas
mov
arpl
jo
fcoml
iret
sub
hlt
test
sahf
mov
add
mov
das
daa
imul
loopne
repnz
add
ljmp
jbe
sub
adc
and
aaa
xchg
pop
mov
dec
push
scas
jne
jecxz
pushl
adc
movb
add
rcl
ja
adc
or
pop
iret
sar
mov
xor
cmpb
push
lahf
test
xchg
mov
jecxz
and
subb
push
xchg
lret
adc
ud0
adc
adc
hlt
or
fwait
sarb
cmpsb
popa
mov
or
cmc
leave
adc
nop
or
add
mov
ja
lock
and
pop
int
call
aas
cmp
xchg
cmc
out
enter
sbb
mov
cmpsb
scas
push
jg
lea
xor
adc
ret
jno
aaa
lock
mov
dec
jne
sbbl
shrl
sub
imul
test
lock
jno
icebp
enter
mov
inc
insb
jg
mov
idiv
scas
push
sahf
js
js
loop
scas
mov
lret
aaa
test
push
push
add
adc
dec
test
inc
mov
clc
mov
repz
inc
pusha
mov
loope
cmp
stos
das
jmp
mov
shl
dec
mov
pop
js
sbb
enter
inc
xor
mov
das
sbb
xorb
xchg
addb
ja
addr16
add
cwtl
cmp
ret
add
ja
fimuls
mov
mov
adc
shll
aam
in
inc
jge
dec
cmp
mov
mov
js
icebp
cmc
jle
sbb
lds
xchg
out
add
add
outsl
mov
clc
and
mov
jg
adc
push
inc
jecxz,pn
push
cmp
xor
add
or
icebp
jo
dec
jb
or
loope
mov
jge
decl
sti
dec
aam
in
xchg
or
mov
fcmovnu
xor
dec
movsb
repnz
cmpsb
mov
inc
out
cmp
arpl
adc
add
cmp
subb
mov
adc
mov
mov
ret
loop
mov
div
aam
inc
int3
push
pop
and
adc
xchg
xor
mov
divl
decl
push
ret
ljmp
loopne
scas
inc
push
movsb
nop
adc
adc
pop
add
jmp
dec
jle
sub
and
push
sbb
xor
mov
movsl
std
jnp
or
push
add
or
dec
test
mov
icebp
jne
mov
or
lahf
out
jl
jmp
sbb
lock
sub
cs
mov
ds
pop
andl
xchg
cmc
lahf
fistps
add
shlb
movsb
shl
jl
mov
push
enter
idivl
sti
or
leave
repnz
loop
sbb
xor
test
mov
arpl
test
ss
or
std
dec
add
push
fisubrs
rol
inc
clc
dec
jo
dec
dec
fisttps
cld
test
xchg
repz
es
ljmp
pushl
insb
outsl
lret
mov
pop
sbb
je
rcl
pop
or
mov
pop
addl
cmpsl
pop
cmp
mov
jge
orl
enter
cs
mov
xchg
rcr
ja
cltd
out
rcl
adc
mov
inc
sub
push
add
jnp
sbb
add
rorl
insl
jnp
push
lock
lret
and
push
daa
cli
or
adc
faddl
test
pop
test
sub
orl
loopne
cmp
mov
arpl
das
mov
sbb
lds
ret
push
jl
jg
cmc
orb
cmp
cmp
jge
push
push
mov
push
jb
mov
or
pop
roll
and
inc
ljmp
fsts
inc
cmp
nop
adc
arpl
sti
xor
xchg
lock
mov
sbb
icebp
inc
mov
jle
push
cmpsl
xchg
icebp
or
add
inc
xor
mov
shrb
xchg
hlt
ljmp
in
mov
and
cwtl
shlb
scas
loope
sbb
mov
frstor
pop
pop
inc
clc
mov
dec
inc
call
iret
inc
sub
sub
rorb
sbb
cmp
mov
loopne
insl
jmp
xlat
ret
ds
mov
fbstp
push
jne
sbb
clc
sbb
add
jb
lock
push
cmp
jo
dec
pop
xor
or
push
test
cmc
mov
andl
cmp
lods
cmp
fs
rcll
jecxz
lea
push
loop
push
or
into
jne
andl
mov
jo
jmp
mov
mov
inc
add
xchg
rolb
ds
stos
add
inc
pop
inc
dec
popf
jne
loope
incb
lods
inc
push
imul
sbb
fnstsw
jl
cmp
loop
pop
and
jno
push
mov
cmp
bound
inc
test
lds
add
dec
cmpsl
clc
stc
xchg
add
dec
stos
jo
and
ss
xchg
xor
iret
and
adc
andb
out
add
lcall
sub
xchg
mov
data16
adc
sbbl
sub
jno
aas
mov
es
ljmp
push
jmp
sbb
cli
cmp
cltd
mov
sti
mov
jle
aaa
cmp
or
lds
xlat
or
mov
data16
cld
ss
sbb
or
push
and
sub
xchg
xor
bound
popa
loop
mov
mulb
mov
add
out
xchg
aas
cwtl
jnp
adc
das
or
loope
nop
mov
dec
loop
pop
cmpsb
lds
into
xlat
inc
aam
or
cmp
or
pop
cmp
or
push
or
xlat
mov
mov
fidivl
push
sbb
push
fs
or
out
sbb
jecxz
mov
xchg
push
mov
add
add
inc
jg
adc
dec
jbe
les
and
loop
jmp
push
add
mov
or
sbb
ficoms
movsb
addb
fwait
xchg
xchg
jge
test
das
out
mov
pop
inc
in
mov
orb
call
lret
aam
cmc
clc
sub
adc
fdivs
mov
add
adcb
int3
adc
mov
iret
loope
cmp
shrl
lea
xor
xor
or
loop
das
pop
sar
xchg
push
mov
stos
add
mov
lock
pop
sar
mov
mov
sub
lock
test
xchg
jo
divl
outsb
inc
idiv
xchg
fs
sbb
cmp
ffreep
ljmp
xor
sub
cmp
mov
out
scas
addl
hlt
in
xchg
lock
sti
outsl
cmpsl
dec
pop
dec
adc
and
popf
xchg
or
mov
sbbb
fwait
jb
int
or
lock
scas
fdivr
mov
pop
push
and
xchg
leave
fldl
sbb
add
dec
loope
into
xor
loopne
mov
xchg
lcall
sbb
int3
cmpb
pusha
mov
out
hlt
loope
cmp
aad
stos
mov
das
rol
pop
hlt
sbb
dec
xor
outsl
imul
inc
std
das
pop
imul
int
ret
fldcw
adc
data16
ljmp
cs
movsb
add
or
dec
adc
pop
jnp
icebp
stos
xlat
rcl
popl
push
in
jmp
or
jae
xchg
jmp
ss
mov
cmp
andb
inc
pop
jg
pushf
test
push
inc
cmp
cmp
inc
outsb
les
fisubrl
adc
jmp
call
fsubrs
pusha
repnz
or
jg
in
adc
sahf
popa
inc
enter
int
not
loop
out
jecxz
push
inc
jne
mov
mov
icebp
mov
outsb
mov
or
aad
and
add
pop
into
test
popl
or
push
pop
mov
inc
jg
icebp
mov
sbb
jl
scas
inc
icebp
mov
adc
call
xlat
push
sbb
adc
iret
cmc
lods
cmp
or
add
cmp
add
inc
in
ds
insb
fs
shl
sahf
xchg
mov
loope
int
push
in
mov
push
mov
push
shll
push
pop
das
push
pop
or
loop
pop
dec
add
jp
ds
jbe
xchg
fnstsw
ljmp
shlb
pop
or
push
push
inc
aas
sbb
add
rcrl
ss
data16
mov
pop
cli
fcomi
imul
push
cmc
push
push
adc
inc
stos
ret
or
jns
and
in
pusha
jle
sbb
add
ss
jle
xchg
fwait
stos
loope
cmc
scas
dec
fs
iret
sahf
mov
mov
and
add
aad
fbstp
fidivrl
test
fdivr
fsubrl
push
sub
in
jg
lods
and
push
mov
jle,pn
xlat
add
add
ljmp
adc
aad
sti
mov
subb
push
add
popa
das
hlt
mov
mov
ret
data16
decl
mov
mov
sbb
pop
cmpsb
lret
decb
lock
jo
orb
int3
fildl
sub
inc
jp
mov
icebp
std
mov
mov
insb
pop
repnz
call
adc
mov
push
adc
test
inc
cmp
pop
sbbb
lret
loope
sub
fidivs
popa
mov
jl
mov
mov
stos
repz
pop
insb
jo
ss
outsl
mov
hlt
and
or
fistps
rolb
sbb
ficoms
rcll
mov
arpl
and
mov
push
add
fimuls
loop
pop
lock
shrl
jmp
sub
add
popf
xor
out
fldcw
data16
xchg
sub
and
sbbl
enter
jge
cmc
jp
fs
mov
jge
ds
out
lcall
cli
mov
and
pop
in
clc
sbb
cmc
push
mov
or
jo
xchg
push
ud0
stos
in
mov
push
stos
mov
addb
mov
fsqrt
int
push
push
xchg
lock
outsl
xchg
cmp
out
in
mov
cwtl
push
call
xchg
push
fldl
nop
lcall
adc
loop
mov
add
loope
jl
xchg
into
ds
pop
mov
xor
cmp
hlt
mov
cmpsl
cld
dec
jl
leave
decl
fnstenv
adc
add
lds
push
loope
loope
add
push
xor
inc
roll
into
aam
sar
ss
shl
out
push
daa
and
mov
je
mov
clc
imul
shl
movsl
pop
cld
mov
test
imul
cs
ret
jg
and
mov
aam
xor
cmp
push
les
dec
aad
or
int3
jmp
leave
jbe
clc
fbstp
adc
stc
sahf
ja
outsl
mov
stos
shll
pop
mov
add
inc
jecxz
and
inc
ljmp
push
insl
xor
test
movsl
icebp
push
subl
loop
push
insl
subb
outsb
pushf
test
mov
stos
sub
mov
clc
lcall
lret
incl
scas
inc
and
xor
outsb
arpl
outsl
inc
clc
cmp
jl
into
xor
mov
pop
cmp
shr
cmp
inc
pop
fdivl
xchg
jl
nop
fucom
jecxz
icebp
push
in
push
fwait
imul
jg
jecxz
stc
adc
fistpl
pop
mov
mov
enter
addr16
outsb
add
lea
mov
and
xchg
jmp
sbb
mov
and
xor
filds
xchg
mov
daa
mov
pop
pop
inc
rcrb
sbb
inc
push
cld
mov
push
lret
push
or
cmp
ret
out
clc
xor
mov
mov
sub
jmp
in
lret
shlb
cmpsb
pop
int
pusha
sahf
xchg
sbb
push
jg
jae
push
pop
rcll
mov
dec
jnp
mov
imul
inc
or
in
popf
loop
jmp
pop
enter
add
cs
sbb
jg
adc
ljmp
in
int3
add
scas
inc
aad
pop
xchg
push
push
adc
push
and
in
in
add
push
pushf
push
xor
leave
clc
sar
lods
and
sub
add
pushl
outsl
cmp
dec
loope
inc
enter
cs
mov
xchg
jge
fldl
cmpsb
mov
mov
ljmp
loop
test
test
icebp
sti
jp
mov
jnp
push
push
inc
push
cmp
aaa
divl
jnp
nop
inc
xchg
dec
cmpsl
lcall
aaa
rcr
dec
dec
add
inc
rorl
pop
pop
scas
testb
or
inc
inc
fsubrl
aaa
fdivl
push
sbb
inc
add
sbb
pop
cmp
jne
pushf
ljmp
push
or
push
aas
mov
mov
sub
rcll
fisubl
pop
jne
js
mov
add
inc
jg
fstpt
loopne
andl
icebp
call
aas
mov
lret
mov
gs
lret
and
adc
inc
adc
cli
mov
pop
xor
adc
push
faddl
and
lock
lock
cmpsb
out
lock
jmp
gs
lock
ret
sar
loopne
loopne
repz
xchg
or
push
jno
adc
push
test
aam
xor
shlb
loope
mov
nop
loope
sub
outsb
xchg
mov
dec
ss
iret
sub
clc
pop
mov
jp
fcmovnb
lret
rcr
mov
scas
sbb
ja
pusha
jb
or
fwait
xor
and
movsb
mov
js
mov
push
fldl
rorl
cwtl
rolb
xchg
pop
bound
icebp
test
inc
xor
ds
mov
loop
xlat
testl
iret
xchg
out
jp
dec
mov
out
out
cmp
shrb
xchg
pop
hlt
ss
out
push
dec
push
mov
mov
testl
adc
clc
icebp
cmc
push
mov
imul
inc
clc
sahf
mov
mov
inc
pop
int3
clc
bound
xor
jb
jb
push
fimull
cmp
jp
stos
push
repz
test
push
sti
push
fwait
out
sbb
dec
lock
jae
sbb
mov
mov
xor
sahf
lds
pushf
xchg
adc
loope
addb
jae
repnz
incl
ret
fstps
lahf
divb
insl
xchg
in
dec
cli
fsubrp
movsl
adc
mov
push
adc
pusha
movsl
stos
inc
test
sub
mov
in
fiaddl
mov
lods
cmp
cmpl
orb
mov
fiadds
add
fisubs
adc
push
fisttps
push
push
dec
pop
jmp
aaa
add
or
sub
int3
das
jb
ret
arpl
lods
data16
inc
xchg
lds
push
bswap
mov
add
mov
dec
mov
or
pop
popa
xchg
fsubrp
call
dec
add
ficoms
sbb
cmp
fwait
das
jbe
xchg
sbb
inc
jp
mov
rol
sub
jbe
sbb
mov
jo
inc
sbb
int3
mov
in
push
mov
push
adc
add
pop
fst
inc
js
pop
aam
xor
pop
xor
mov
cmpsl
push
add
fcomps
mov
and
dec
xchg
mov
adc
mov
jmp
testb
sub
lea
adc
aad
in
inc
mov
por
call
roll
push
shrb
sbb
scas
loop
in
ljmp
imull
jg
outsl
sub
mov
test
cld
sub
adc
test
push
xor
pop
xchg
test
inc
sti
dec
xchg
shrb
xchg
or
push
pop
xor
cwtl
rcl
adc
sbb
testl
inc
xor
push
stos
mov
jmp
mov
xlat
dec
test
stos
jb
add
pop
imul
mov
xchg
fcomps
lret
xchg
xchg
mov
mov
lea
rolb
dec
mov
sti
repnz
or
rclb
push
push
std
pop
lods
lock
or
cmpl
inc
lcall
push
xchg
incb
das
rolb
je
fadd
ja
cwtl
or
jecxz
scas
movsb
push
sbb
aas
je
xor
fildl
mov
mov
aaa
ret
pop
mov
daa
das
xchg
decb
repnz
push
hlt
adc
push
insl
inc
mov
ljmp
dec
jmp
iret
outsb
xchg
imul
xchg
dec
pop
push
inc
aaa
add
and
xor
adc
dec
xchg
cmc
dec
ja
pushf
addr16
roll
mov
pop
mov
mov
fimuls
mov
cli
pop
push
das
mov
in
out
frstor
andb
out
sub
xchg
fadds
std
pop
js
into
out
pop
xchg
sub
mov
sub
push
inc
sub
shl
stos
loopne
mov
iret
pop
jg
lcall
adc
fdiv
add
or
pop
daa
lret
decl
les
sahf
lock
inc
loope
lock
jmp
inc
cli
aam
jo
jmp
mov
sahf
popf
mov
jl
imul
mov
repnz
cmp
jno
cmp
xchg
and
stc
pop
add
xlat
icebp
cmpsb
mov
clc
push
sbb
dec
push
popf
test
push
add
lods
seta
mov
push
jle
mov
incl
std
xor
inc
arpl
push
fmull
add
in
cli
ljmp
push
inc
fistl
push
or
outsl
pop
je
adc
pop
xor
sarl
and
pop
je
sti
out
and
cmpsb
aam
movsl
mov
ljmp
dec
xlat
hlt
mov
sbb
cmp
fmuls
adcl
xor
stos
or
sti
cs
or
ret
fnstenv
testb
sub
nop
or
jae
push
jge
dec
loope
sahf
out
dec
stos
arpl
call
lcall
jg
adcb
adc
mov
clc
adc
mov
movsb
test
or
stos
xor
mov
sti
movsl
mov
jg
xchg
cmp
sub
inc
rcrl
sub
pop
adc
testb
stc
mov
ljmp
mov
pop
pop
mov
xchg
aam
mov
clc
jno
push
pop
add
jg
sti
js
stos
mov
sbb
sub
or
xor
pop
fsubr
ljmp
sbb
lock
mov
inc
lock
rcrb
sbb
xchg
dec
inc
or
andl
adc
sbb
dec
mov
jmp
pop
cmpb
dec
sub
shrb
mov
hlt
incl
iret
dec
inc
int
mov
addr16
mov
cmp
push
or
sahf
lock
loop
movsb
lcall
outsb
js
mov
inc
sahf
xor
pop
mov
clc
push
and
pop
sbb
int
or
xlat
jg
inc
addb
add
fs
inc
sarb
jecxz
ds
popa
xchg
inc
and
fldt
lcall
mov
not
sbb
cmc
and
scas
or
fmulp
cmc
jo
mov
shl
cmp
xchg
xor
int3
or
push
lea
insb
cmp
mov
hlt
loop
stos
enter
popa
sub
mov
mov
aaa
mov
in
sub
mov
nop
jo
jbe
subb
sub
movsl
sub
es
and
ljmp
incl
fdivp
jp
test
xor
test
stos
sti
repnz
cli
mov
mov
lds
sbb
sbb
stos
prefetch
xor
cmc
sbb
aas
adc
xchg
shlb
push
mov
cli
aad
scas
test
aam
subb
loopne
popa
dec
dec
data16
bswap
xor
sbb
adcb
pop
push
ds
jae
ficomps
insl
test
pop
fisubl
cmpsl
aam
lods
loope
cmp
fldl
xor
xlat
and
adc
push
push
sbb
jne
xor
rolb
dec
sbb
mov
scas
mov
push
pop
clc
stos
push
sub
inc
xor
data16
cmp
inc
aas
mov
push
cmp
dec
lcall
pop
in
sub
shrl
mov
fcoms
aad
aaa
adc
sub
jg
sbb
mov
adc
imulb
xor
adc
js
lahf
inc
add
add
ret
out
adc
push
push
xchg
int3
scas
and
mov
and
xor
xchg
adc
pop
test
xchg
leave
xchg
sub
cmp
pop
orb
lods
mov
stos
mov
inc
ficompl
shll
mov
cmp
mov
sub
loope
das
xchg
xor
aam
cmc
adc
add
add
cmpsb
shlb
imul
loop
outsb
mov
fistpll
mov
mov
sbb
and
inc
and
cmp
or
lret
jecxz
push
jp
fsubrp
imul
in
push
or
clc
push
push
inc
jmp
mov
xchg
dec
jo
dec
in
or
daa
xor
add
or
lcall
jb
popf
xor
subl
dec
fsubl
mov
mov
loop
xor
cs
push
pop
cltd
add
sub
push
lret
adc
loop
bswap
push
div
and
insl
decb
call
adc
test
mov
adc
jmp
inc
mov
cmp
or
call
aad
test
inc
or
mov
scas
aad
add
scas
and
xorl
je
in
xchg
fldl
dec
adc
lock
xor
pop
xor
sahf
in
dec
in
pop
ja
rorl
push
cmp
in
stc
or
rcr
xlat
lods
sbb
call
jno
ret
scas
inc
lock
inc
sub
mov
mov
inc
scas
mov
out
test
popl
loop
mov
mov
pop
fldcw
sub
jmp
lcall
hlt
mov
jb
decb
fstpl
sub
or
mov
mov
movsb
out
xchg
movzwl
in
jp
shr
out
cld
push
pushf
pop
js
in
xchg
icebp
cmp
sub
insl
mov
jecxz
xchg
aam
adc
sbb
mov
jp
aam
outsl
cmc
enter
add
push
xor
int
dec
xchg
mov
xor
fnstsw
add
fdivrs
or
mov
jecxz
fwait
inc
jo
adc
enter
sub
inc
adc
pop
jmp
jbe
cmpsb
push
mov
and
jg
idivl
push
iret
cmpsl
xchg
int
cmpb
mov
push
test
xchg
adcb
xchg
lcall
ss
cli
fnsave
sub
pop
cmp
repnz
scas
push
dec
mov
cmp
xchg
pop
shrl
enter
push
dec
nop
aas
popa
pop
mov
je
push
outsb
pop
mov
gs
lods
inc
into
cmp
jg
cmpsb
xchg
mov
mov
or
inc
popf
movsb
add
mov
cli
outsb
pop
or
xchg
jne
cli
rcrb
cli
out
clc
xor
stos
movsb
mov
rclb
sub
out
adc
int
jle
add
aaa
std
mov
in
xor
xor
inc
test
or
stos
rcrb
cmpb
outsl
mov
fdivr
adc
dec
repz
xchg
mov
jae
stos
mov
icebp
incl
mov
daa
das
xchg
into
adc
mov
push
outsb
sub
or
adc
mov
add
inc
jnp
jmp
lock
lcall
les
rorb
pop
inc
or
jbe
lea
push
push
daa
or
cmp
fs
jnp
mov
jnp
lods
or
cmpsb
cmp
cmpsl
movsl
jo
out
in
push
add
jo
aad
fwait
jg
cmpsb
push
roll
ja
jbe
push
adc
adc
inc
andl
mov
inc
outsl
adc
push
jge
sub
lea
loop
add
lods
xor
jnp
je
push
subl
push
cmp
fisttps
mov
jg
pushf
jl
ljmp
roll
lock
inc
jbe
jmp
inc
cmp
mov
and
je
push
fistps
push
sub
jle
jbe
add
xchg
lods
scas
dec
cmp
loopne
ficoml
cmp
add
shrl
sub
in
push
clc
adc
mov
mov
xchg
adc
mov
ret
adc
add
stos
mov
test
mov
cwtl
dec
testb
outsb
ds
cmc
test
sbb
es
cwtl
dec
decl
pop
data16
popa
stos
mov
push
jmp
cmp
addr16
dec
repnz
adc
jmp
lcall
in
test
xchg
mov
js
or
or
loope
lcall
mov
sub
push
insb
ljmp
aaa
ds
pop
jmp
xchg
mov
push
daa
fcomps
cmpsl
jbe
out
test
lods
inc
mov
cmpsl
cli
shr
ljmp
fnsave
loope
sub
and
lods
pop
mov
mov
or
pop
insl
xchg
add
push
sub
test
xor
ret
dec
loope
movsb
xchg
cs
sub
lddqu
insb
fidivl
lds
mov
inc
pop
lock
imul
ret
dec
aad
push
mov
stos
pop
push
or
imul
inc
into
push
lea
sahf
xor
jg
or
inc
pop
mov
loope
cmp
push
push
xchg
jb
jmp
out
test
test
cld
and
adc
fisubrs
ljmp
jge
cmp
popa
rol
sti
and
data16
test
call
xor
mov
jmp
cmp
cmc
call
sbb
xor
gs
js
seto
cmp
xor
xchg
mov
lea
cmp
popf
mov
insl
cmp
pop
inc
cld
dec
in
sbb
pop
sbb
hlt
shlb
mov
cmpb
mov
int3
cld
data16
mov
jmp
sbb
jne
add
pop
dec
adc
icebp
sbb
pop
push
cmp
mov
cld
mov
scas
push
pop
scas
int
and
decl
sbb
sub
repz
inc
xorb
call
iret
pop
dec
rclb
mov
stc
xchg
pop
jle
push
insb
pop
loopne
push
push
xchg
ss
jne
or
sub
cmpsb
sahf
test
jns
ja
push
test
popf
mov
outsl
into
xorl
fs
sbb
lds
and
lcall
add
push
lods
mov
and
and
push
or
pop
and
and
add
mov
addr16
pushl
jle
or
inc
xchg
jle
aaa
das
in
xchg
mov
inc
pop
lock
mov
clc
test
scas
loop
mov
inc
mov
and
je
jo,pt
mov
pushf
push
add
inc
int
pop
mov
sarb
sub
subb
xor
push
in
xchg
lret
loopne
jno
cmp
mov
popa
inc
sub
sub
mov
pop
mov
jne
xchg
cli
mov
mov
popf
out
stos
cli
inc
mov
dec
mov
aad
fisubl
sub
incl
cmp
loop
dec
add
jae
inc
inc
or
lds
idiv
sbb
iret
xchg
and
out
les
scas
inc
sti
rcrb
jo
mov
jno
pop
jmp
shll
mov
xchg
inc
sti
es
inc
sub
jno
lock
into
jp
inc
sahf
call
mov
popa
dec
xchg
pop
fstpt
sub
add
ja
into
aad
jg
lock
pop
loopne
sub
fcmovnb
xor
adc
xor
rcl
pushf
or
mov
pop
adc
lock
popa
dec
inc
vpcmpeqb
jp
push
ljmp
ret
jno
iret
mov
in
int3
es
add
mov
add
leave
jb
aas
leave
jle
aaa
or
jbe
add
cmp
cwtl
xor
and
or
rolb
sub
scas
pop
xor
iret
in
push
enter
lods
sub
cmp
mov
jne
pushf
cmpb
inc
add
insl
adc
outsl
pop
es
pavgw
and
cmpsl
mov
mov
into
add
mov
push
icebp
push
jg
jecxz
scas
pop
jbe
pop
hlt
js
push
jge
lea
adc
and
inc
push
sub
cld
pop
loop
add
push
and
xchg
mov
gs
daa
imul
or
mov
sbb
mov
push
dec
or
enter
unpckhps
pop
and
js
xor
mov
push
ljmp
stos
outsb
out
mov
adc
into
imul
mov
int3
int3
pop
pop
insb
shrd
clc
inc
push
mov
inc
lahf
mov
jne
sbb
cmp
mov
add
pushf
push
mov
insl
mov
outsb
lock
nop
mov
mov
stos
dec
ljmp
pop
call
pop
or
movsl
mov
aam
test
insb
adc
push
adc
push
jecxz
cli
arpl
aas
sbb
xorb
sbb
dec
jo
aas
mov
xor
pop
cld
inc
aaa
mov
push
mov
out
jbe
xchg
icebp
testb
std
push
popa
ret
or
addr16
ret
fistpl
aam
aaa
add
shrb
add
adc
lcall
pop
inc
push
pop
mov
push
gs
mov
movsb
mov
ljmp
mov
sub
rcrb
mov
inc
sbb
testb
xchg
push
push
xor
mov
imul
fldenv
mov
cltd
lock
jecxz
mov
in
push
jnp
jb
rorb
cmp
decl
fildl
add
sti
insl
mov
int
or
pop
lock
leave
push
cmp
ret
sub
xchg
loop
xchg
cmp
xchg
inc
pop
jo
loopne
xor
sub
push
or
js
push
jl
jno
xchg
test
push
cli
imul
gs
notb
pop
ljmp
xchg
mov
mov
dec
cmp
movsb
mov
clc
and
cmc
pop
or
insb
inc
movsb
or
arpl
bound
push
add
or
movsb
add
xor
dec
gs
dec
rcr
lret
xlat
call
add
mov
dec
inc
sub
stos
or
mov
popa
xchg
jp
mov
pop
sbb
out
and
lods
je
jne
xlat
enter
push
sbb
xor
adc
inc
and
fildll
ret
sbb
xor
mov
adc
jnp
jno
arpl
sbb
adc
ds
cmc
lods
sbb
pop
std
xchg
lcall
push
xor
fistl
stos
pushl
dec
ret
pop
cmp
pushl
rcrb
scas
ret
push
jnp
out
cmp
add
in
stos
sahf
test
les
rcrl
mov
outsl
xchg
pushf
or
int
pop
mov
mov
cmp
int3
pop
jno
inc
fs
mov
xchg
lock
fistps
subl
pminub
or
sbb
ret
arpl
mov
cmp
mov
push
jmp
push
ret
pop
jg
mov
or
mov
movsl
cwtl
jne
xor
inc
jmp
inc
lahf
adc
inc
shll
pop
pop
adc
jp
js
aas
ljmp
inc
dec
inc
call
push
or
nop
xchg
out
and
jg
or
jp
push
jns,pn
sub
and
out
jo
arpl
xchg
jnp
arpl
cmp
clc
lock
mov
test
stc
pop
subl
mov
or
or
sbb
hlt
pushf
pop
aad
sahf
or
andl
pop
divb
cmpsl
andb
divb
loope
ret
idivl
sub
adc
mov
xlat
ds
decb
inc
pop
aam
arpl
leave
or
aaa
sub
mov
int
add
cli
call
pop
icebp
pop
aam
test
add
scas
push
cld
cmp
movsl
xchg
pushf
insb
fisttpll
adc
sbb
scas
xor
in
inc
or
add
lds
lods
lods
fsubrs
scas
adcb
push
shl
imul
sbb
mov
sub
sbb
or
aas
push
cmp
push
fisubrs
ja
xor
mov
rorb
pop
pop
xchg
mov
lret
push
mov
dec
add
xor
mov
pop
xor
int
push
hlt
push
mov
sahf
push
cs
cli
call
aaa
mov
inc
popf
iret
xchg
jecxz
xor
sbb
shrb
xor
add
pop
push
sub
mov
in
sar
push
adc
inc
mov
stos
jb
cld
cmp
loop
cmp
xor
inc
mov
dec
sbb
or
out
dec
fsubrl
insb
xchg
lret
test
lret
xchg
adc
lock
xor
imul
stos
dec
and
xor
loope
push
fbld
cmp
imul
je
scas
sahf
cmp
mov
das
jle
cmpb
lret
movsb
fnsave
lock
pushf
dec
cmp
lock
hlt
inc
dec
or
rorb
loope
mov
mov
es
idivb
in
jmp
sub
push
mov
push
in
test
andb
or
stos
or
iret
loope
sub
ds
pop
sbb
sbb
mov
imul
add
mov
xlat
sti
int3
xor
ret
xchg
inc
add
jg
nop
mov
iret
daa
add
cmp
adc
add
jmp
push
in
or
xor
scas
xchg
movsl
jno
jae
mov
test
lret
jp
push
push
leave
into
rcrb
arpl
push
icebp
mov
jp
pop
ret
jle
mov
fdivs
into
test
mov
ljmp
pop
cltd
mov
mov
add
jno
clc
inc
ljmp
mov
lcall
mov
sub
xchg
ja
dec
jp
test
mov
add
push
cld
push
jne
cs
mov
push
js
add
xor
pop
or
jle
push
xchg
dec
movb
leave
bound
push
pop
lods
push
ljmp
divb
push
push
xchg
cmpsb
cmp
and
push
stos
push
jmp
out
dec
lret
lcall
jp
xchg
push
imul
stos
repz
cld
call
scas
lret
je
lods
inc
js
jne
js
mov
dec
cmpsb
add
sub
repnz
mov
rcll
and
inc
add
mov
adc
enter
fisttps
out
push
and
stc
cmp
sbb
bound
dec
adc
mov
jbe
mulb
xor
pushf
incb
ljmp
in
sarb
scas
lods
shl
pushf
dec
mov
out
aas
push
mov
hlt
xchg
insb
xchg
clc
xlat
inc
xchg
xor
cld
lcall
sub
aas
test
dec
pop
out
stos
test
lcall
iret
lret
xor
fnstsw
jbe
add
pushl
mov
or
loopne
and
scas
movsl
fisubs
shlb
or
sbbb
or
int
jge
or
cmp
loope
adc
aaa
pop
xchg
and
add
mov
pop
mov
jl
call
pop
xlat
in
data16
fbld
out
cmp
xchg
loopne
mov
xchg
or
cld
lret
push
mov
mov
aad
loope
fdiv
pop
cmc
shll
pop
mov
lahf
adc
sub
lret
inc
add
lea
in
out
pop
fists
ja
call
add
and
jns
adc
cmpsl
les
jae
or
outsb
clc
jle
sub
cwtl
dec
lods
or
aam
es
div
aas
and
aam
xor
add
adc
jbe
mov
jb
dec
xchg
lods
cli
dec
xchg
or
das
xlat
bound
add
mov
ljmp
cmp
mov
outsb
jmp
aas
sbb
and
sub
sbb
pop
push
adc
clc
xchg
test
loope
cltd
js
cmc
js
imul
mov
mov
rolb
in
xchg
js
outsl
popl
add
cmp
rclb
jo
outsb
enter
pop
mov
arpl
inc
adc
dec
inc
mov
pop
in
jg
fwait
add
rorl
mov
push
cmp
test
mov
or
movsl
and
in
imulb
in
and
and
jae
fadds
pop
cld
jmp
sahf
push
outsb
sbb
js
into
pop
scas
add
pop
push
repz
popf
hlt
push
and
mov
xor
pop
inc
cld
mov
push
adc
and
cmp
stos
call
mov
and
enter
sbb
push
loopne
ret
push
inc
imulb
fwait
xor
mov
lahf
rcrb
xorl
adc
test
jl
dec
sub
outsl
xchg
mov
enter
rcrb
addr16
sbb
and
dec
imull
fstl
leave
sbb
jmp
arpl
jmp
cld
jle
xchg
dec
xorb
adc
movsl
or
cmp
adc
mov
lahf
and
sub
dec
ds
pop
cmp
add
in
cmp
dec
test
dec
push
xlat
jmp
call
shlb
xchg
hlt
mov
mov
add
js
jbe
inc
in
incb
jl
pusha
sub
clc
sbb
bound
jnp
aad
aas
inc
out
icebp
iret
xchg
out
test
pop
lods
sbb
add
clc
pop
jno
popa
outsb
mov
inc
xchg
xchg
pop
mov
stos
push
push
aam
and
sbb
pushf
pop
mov
cld
clc
gs
mov
cmpb
add
sbb
test
scas
fimull
jae
pop
xchg
pop
imull
jg
lret
clc
mov
sub
xorb
scas
xchg
js
scas
jo
xor
aas
push
add
mov
mov
cmpsb
lods
jo
mov
int3
or
push
lret
mov
jge
scas
pop
shl
call
fsubs
add
pop
dec
ljmp
mov
pop
mov
jmp
inc
pusha
add
jae
cli
jl
sub
das
cs
pop
mov
mov
xchg
adc
and
ljmp
cmp
or
xor
loopne
loopne
pop
mov
fdivrl
or
insb
imul
test
sbbl
enter
mov
movsb
cmp
jl
int
mov
sub
pop
out
ss
inc
rcr
lret
jg
jno
lret
mov
sbb
test
pop
push
pop
inc
or
xorl
push
cmc
je
and
jg
arpl
dec
dec
ljmp
add
mov
cltd
jle
rcl
sub
mov
lret
jp
jg
jl
call
mov
cmc
icebp
sahf
cli
movsl
repnz
rcll
jecxz
aam
and
inc
pushl
orb
mov
mov
out
pop
stos
movsl
loop
das
lods
jno
inc
popa
incl
and
jle
xor
imul
insl
cmp
pop
sbb
pop
sbb
xchg
jp
std
adc
jp
mov
jmp
mov
jmp
test
xchg
pop
lahf
ret
xor
loope
clc
push
andl
sbb
sbb
loope
je
xor
push
inc
push
nop
push
and
mov
stc
roll
addl
or
pop
fisttpll
xor
dec
movsb
push
jmp
inc
cmp
and
into
sti
fistpll
std
pop
push
sub
sahf
sbb
pop
lea
mov
pop
sarl
mov
push
lods
sub
out
push
lods
mov
ret
fldt
arpl
rolb
xor
cli
andb
ja
add
pop
rcll
pop
xchg
xchg
ffree
ja
sbb
push
cmp
cmp
cmp
into
mov
mov
subb
stos
cli
loope
sub
inc
js
push
outsl
notb
hlt
es
out
mov
out
movsb
sbb
cmp
insl
mov
and
lcall
push
jge
pop
aam
mov
stos
imul
xchg
test
inc
imul
sti
push
pop
mov
pop
movb
test
daa
ficompl
ret
dec
testb
adc
xchg
outsb
push
loope
and
or
call
rcr
fcomps
cmp
or
and
jl
mov
das
lcall
add
imul
outsl
loope
mov
mov
call
xor
shr
pop
stc
hlt
insb
xor
push
jecxz
gs
add
fimull
add
clc
scas
cmp
rol
imul
aam
push
mov
or
mov
and
insb
cld
xor
rclb
fcoml
loop
das
pop
sbb
add
fimull
push
jge
push
sub
popa
push
sub
nop
mov
pop
cmp
cmc
std
add
cmp
roll
ds
mov
add
jle
push
add
pop
loopne
jmp
les
pop
sarl
sti
sar
inc
sub
mov
sub
fcmove
mov
mov
loop
daa
jle
adc
cmpsb
sub
aam
test
xor
cmp
fsubs
popa
pusha
mov
mov
rorl
xor
jbe
mov
or
in
sub
cltd
outsb
jae
push
negb
imul
fnsetpm(287
dec
push
mov
or
or
mov
or
out
sbb
data16
fwait
into
push
pop
fnstcw
jnp
sub
mov
sbbb
adc
cli
push
mov
push
icebp
xchg
scas
xchg
mov
mov
loope
push
xor
add
mov
sub
incb
or
sub
pop
jecxz
sub
js
xlat
adc
lods
or
add
push
ret
inc
inc
mov
or
mov
mov
push
sbb
push
pop
and
pusha
push
nop
rcl
mov
add
enter
mov
ret
sbb
pop
dec
notl
sub
in
jmp
int
leave
mov
mov
and
or
mov
mov
jnp
cld
pop
setnp
cmp
push
inc
int
jmp
sbb
inc
shll
jo
or
jno
pop
pop
sbb
pusha
inc
xchg
sbb
les
jmp
sbb
push
and
dec
pusha
mov
pop
push
pop
cld
ficoml
jg
push
add
xor
jge
test
dec
pop
lods
and
mov
incl
push
dec
xor
flds
jno
adc
int
and
sar
aad
sbb
clc
repnz
outsl
addr16
ret
xchg
push
sub
inc
xchg
fs
sahf
pop
out
pushl
ljmp
pushf
cli
jl
xlat
and
fs
cmp
sub
or
mov
and
aad
fnstsw
sub
cmp
clc
add
decl
inc
iret
push
push
mov
and
jmp
cmp
loop
mov
push
inc
inc
mov
adc
rorl
mov
loop
and
xchg
and
inc
jnp
ljmp
ljmp
pop
mov
das
mov
cld
popa
aas
imul
mov
aad
mov
popf
mov
xchg
cmc
mov
cmpl
push
std
mov
sbb
mov
dec
jp
adc
xor
sarb
jecxz
adc
ds
mov
push
or
mov
adc
mov
xchg
dec
lods
sub
sub
xor
ljmp
aaa
sbb
into
xor
fwait
xchg
adcl
xor
pushf
call
movsb
sbb
sti
push
cld
fld
inc
mov
or
shlb
mov
js
xor
push
ficomps
jl
fists
cmp
gs
pop
test
or
sbb
out
mov
cwtl
outsl
repz
or
jns
call
clc
jecxz
rclb
in
jnp
push
xor
mov
adc
push
and
add
outsl
add
je
shrb
xor
xchg
xor
das
mov
in
pop
pop
xor
es
jl
popf
les
xor
push
je
pusha
inc
mov
cmpl
lods
popf
sub
jo
pop
pop
das
fstpt
add
inc
mov
mov
stos
push
fwait
and
ljmp
sbb
mov
andl
stos
hlt
cmp
es
xchg
ret
pop
rcrl
push
test
js
dec
mov
cmpsb
inc
cltd
mov
adc
ljmp
mov
adc
stos
or
popf
xor
mov
out
pusha
pop
clc
movsb
decl
mov
jne
inc
sahf
xchg
out
add
or
cmp
pop
dec
ret
fmul
nop
imull
nop
fadds
dec
out
xchg
stos
aad
lock
aas
pop
cli
lret
aam
xchg
or
fcmovnbe
aad
or
jne
xchg
je
lret
jl
fnstcw
cmp
icebp
xor
mov
xchg
or
cmp
cmp
push
fcmovb
call
dec
popa
dec
aaa
mov
shlb
leave
sbb
inc
xor
inc
loope
mov
imul
cmc
or
pop
data16
cmc
adc
xor
sbb
jp
jmp
ljmp
inc
jae
inc
gs
or
dec
stos
or
aas
mov
test
aam
clc
push
pop
dec
pop
in
inc
and
jmp
in
call
fidivrs
clc
mov
pop
mov
aaa
ficomps
out
test
pop
inc
insb
adc
inc
jg
pop
cmp
test
mov
xchg
pop
test
push
or
push
xchg
jae
rol
adc
mov
mulb
cmp
lahf
aaa
pop
inc
loop
adcl
xchg
filds
fisttpll
sub
pop
jbe
aad
add
les
ss
sub
loope
sbbl
and
es
adc
sbb
jo
fcompl
dec
push
incl
gs
mov
clc
mov
dec
nop
cmp
sub
mov
jle
mov
dec
pop
inc
ja
je
js
mov
popf
inc
mov
je
movsl
mov
jmp
shl
aad
push
fs
fisubrl
sar
jne
decl
daa
pop
jle
scas
mov
adcl
jmp
aam
imul
decb
aaa
and
sub
fidivrl
jae
push
inc
sbbb
sub
clc
outsb
xchg
inc
mov
ss
ret
sahf
lcall
jbe
mov
fcmovb
hlt
pop
push
xor
add
jne
roll
mov
jmp
xchg
xlat
in
lcall
shrl
xor
stc
hlt
inc
add
fs
test
xchg
cs
scas
xor
cli
lds
push
adc
pop
xchg
pop
add
sub
xchg
lods
xchg
and
jmp
ret
nopl
xor
sub
dec
or
es
shlb
push
cwtl
movsb
push
dec
push
mov
popf
push
mov
mov
push
mov
in
sub
push
scas
scas
pop
les
incl
out
add
cmp
sub
insb
mov
fwait
xchg
xor
or
dec
ret
lock
cmp
push
pop
lret
mov
sub
mov
mov
push
sub
push
push
leave
ret
add
push
jge
mov
add
shll
pop
mov
mov
dec
adc
rclb
push
jl
jo
xchg
and
and
movsl
inc
mov
add
cltd
jb
push
mov
add
and
pusha
xor
repz
je
ret
sbb
decl
mov
xchg
xchg
int
mov
cmc
xor
adc
mov
push
data16
fnstsw
xlat
insb
fistpll
push
jb
jo
arpl
call
push
mov
icebp
jp
xor
inc
shl
leave
mov
push
jne
mov
or
jl,pn
nop
adc
out
clc
mov
inc
jmp
icebp
lret
adc
and
jmp
adcb
int
jl
sub
ffree
push
jp
loopne
out
mov
sar
push
lcall
bound
dec
fs
mov
ret
xchg
sub
jecxz
push
cmp
push
les
lock
sbb
sbb
test
xchg
sbb
pop
and
pop
outsl
jb
outsb
imul
xor
add
fsubs
lret
jp
mov
cmp
xchg
call
add
aam
and
int
loopne
pcmpeqb
lcall
ret
sub
or
mov
jg
mov
out
push
pop
stos
stos
rcr
movsl
add
cmp
mov
decb
adc
cmp
cmp
mov
int
loopne
push
inc
outsb
stc
jp
mov
notb
cs
adc
fistpl
addl
cwtl
cmpsb
and
pusha
insl
lock
test
fwait
cld
sti
cmc
xchg
adc
or
test
outsl
pop
das
mov
js
push
es
cmp
fidivrs
xchg
dec
lds
xor
dec
or
scas
bound
shlb
mov
mov
aaa
imul
inc
in
cmp
test
mov
out
jno
inc
xor
mov
shl
cli
jp
sub
or
fnstsw
aad
es
sub
push
mov
add
sahf
jp
paddq
add
push
outsb
jne
sbb
and
dec
test
pop
mov
clc
sub
xchg
mov
xor
mov
mov
mov
xor
cmpsl
push
push
das
dec
or
shlb
adc
mov
in
test
or
movsb
lods
stos
jle
int3
or
or
das
test
arpl
xchg
ljmp
out
ret
mov
xchg
mov
jbe
push
or
cld
push
and
out
outsb
test
push
jno
inc
adc
cmc
lock
cli
dec
outsb
pop
pop
cmp
fdivrl
pop
adc
pop
mov
cli
mov
sub
jne
sbb
mov
loop
sub
or
adc
or
fisttps
mov
push
fwait
xchg
outsb
adc
xchg
jecxz
dec
std
popl
aam
ror
adc
jo
or
dec
pop
test
mov
sti
mov
mov
add
inc
xor
jne
push
test
adc
outsb
ja
sub
aad
outsb
pop
fdivrl
and
mov
sbb
lods
push
fucom
stc
lahf
pop
xchg
push
mov
jnp
imul
lods
mov
sbb
add
dec
insb
cmp
dec
or
mov
int
xchg
push
fdivl
in
pushf
sahf
shr
in
sahf
sbb
out
ljmp
out
mov
push
addr16
je
fdivp
neg
dec
and
ret
fisubl
cmp
call
js
sbb
pop
fdivrs
lahf
lods
adc
jge
cmc
loop
push
and
add
pop
jbe
cld
mov
scas
xchg
out
sub
test
mov
in
push
adc
push
dec
adc
and
nop
cmp
lods
mov
into
mov
fucomi
pop
nop
xchg
push
xor
cmpl
and
nop
sbb
lea
cs
sbb
jmp
orl
and
inc
inc
vunpckhps
dec
cmp
sbb
sbbl
mov
in
push
inc
leave
cmpsb
dec
rolb
pop
lcall
mov
icebp
push
cmp
inc
rclb
jl
imul
or
mov
or
and
shr
push
mov
mov
cld
jp
int
push
addr16
sbb
xchg
leave
dec
test
cwtl
sub
js
iret
dec
pop
test
push
leave
test
fwait
cmp
inc
ret
call
jp
pop
adc
pop
cld
cmp
lcall
mov
sbb
xchg
jne
push
sbb
mov
inc
inc
adc
dec
dec
cmp
cli
fsubs
push
cmp
fdivrs
dec
xchg
mov
aam
and
xchg
or
test
int3
jno
mov
movsb
pop
sbb
sub
cmp
mov
push
je
outsb
mov
xchg
jle
jbe
sti
out
adc
sar
ret
push
sub
outsl
loop
xlat
flds
jecxz
es
loopne
jb
fst
inc
inc
add
cmpsl
imul
push
push
mov
or
ret
or
lea
sub
pop
xchg
mov
maxps
je
xchg
mov
call
sahf
insb
outsl
xlat
add
dec
int3
scas
sub
jnp
cs
js
pop
adc
sbb
push
repz
mov
jge
movsb
mov
dec
and
add
xor
pop
mov
sbb
sti
mov
loope
push
cli
push
ret
out
dec
cli
clc
cmpsb
outsl
fistpl
mov
push
sub
xchg
js
movsl
add
jge
mov
push
dec
clc
xor
roll
test
jno
addr16
enter
rolb
dec
push
pushf
mov
adc
cld
mov
les
cmpsl
out
push
push
aam
pop
or
mov
inc
add
push
pop
xchg
neg
add
dec
jmp
imul
dec
imul
mov
push
inc
and
inc
out
mov
ret
sub
jl
shlb
scas
xchg
fcmovb
lcall
mov
mov
adc
mov
push
jne
rclb
or
lods
cli
push
outsb
cltd
emms
pop
push
inc
push
lods
xor
push
jne
outsb
clc
lods
sarb
xchg
hlt
add
stos
pop
pop
inc
rcl
or
cltd
xchg
cmp
aas
jmp
pop
push
scas
add
add
add
push
cwtl
jno
jo
push
arpl
hlt
mov
adcb
hlt
rcl
popf
loope
movsl
hlt
and
add
pop
loopne
push
sub
sub
mov
push
add
pop
repz
xchg
insb
pop
inc
or
hlt
enter
inc
imul
loopne
scas
dec
loopne
lds
stos
rcrl
mov
pop
adc
je
add
xchg
daa
call
cmp
jl
mov
std
sbb
add
pusha
mov
aad
movsb
stos
mov
lods
scas
orb
fnstsw
xchg
fsubrs
jmp
not
aad
fadds
xor
jb
sahf
xor
jecxz
xchg
mov
ljmp
ret
or
idivl
pop
mov
imul
push
jb
mov
xorps
mov
idivb
xchg
fwait
or
outsb
hlt
aaa
stos
xchg
fcomps
dec
adc
sbb
jo
pop
mov
push
jge
mov
pmaddwd
mov
push
inc
pop
jmp
pop
fcoms
push
mov
push
and
jge
pop
jnp
push
scas
popf
in
cld
sub
arpl
or
sbb
pop
or
push
pop
das
push
add
hlt
in
fistl
add
xchg
pop
sar
daa
ss
jl
mov
mov
cmpsl
sahf
mov
test
icebp
hlt
pushf
mov
pop
pusha
hlt
addr16
push
fldt
data16
test
jbe
mov
cmp
clc
addb
js
sub
invd
jle
push
mov
xor
sub
ja
fwait
and
cs
add
sbb
cld
push
lods
mov
cmp
pop
sbb
jae
push
lock
sbb
mov
jg
out
xor
and
shr
or
mov
bound
sub
out
mov
mov
add
jge
insl
leave
or
jne
mov
add
sahf
push
or
mov
fsubrs
add
dec
lds
cli
stos
mov
test
ret
rcrl
mov
cmp
mov
testb
push
gs
lret
sar
mov
dec
and
push
les
add
lea
xor
push
jmp
cmp
sbb
mov
pop
push
inc
lock
mov
addb
pop
sub
pushl
add
stos
mov
push
ss
adc
clc
aad
add
int3
push
dec
movsb
aas
in
mov
inc
fcomip
xor
repnz
mov
and
clc
clc
sarb
pop
jg
xchg
popf
jg
lock
sub
arpl
push
or
int3
xchg
jns
lret
imulb
sbb
hlt
jmp
fdivr
mov
orl
stos
cmp
and
mov
xchg
mov
push
test
xchg
and
dec
pop
cs
pop
daa
mov
push
jl
pop
push
inc
loop
movsl
xchg
sub
sub
mov
rolb
push
pop
adc
add
sub
inc
je
out
pop
test
mov
mov
rolb
push
aad
aad
inc
mov
pop
push
mov
adc
xchg
pop
int3
fcoml
jge
jle
in
cmp
clc
jg
push
add
mov
mov
xor
adc
cli
lds
shr
in
into
dec
cmp
sbb
adc
pop
sbb
push
mov
and
dec
cld
cmc
mov
aad
cmpsl
add
inc
ret
or
push
and
aam
fistps
inc
mov
cld
dec
lret
shll
pop
push
jae
fstpt
fwait
das
mov
mov
inc
mov
ja
fistl
lret
das
push
stc
scas
stos
pop
ficomps
lock
loopne
push
stos
xchg
inc
mov
dec
sbb
adc
stos
cmc
sbb
jbe
test
inc
ljmp
xor
pop
add
sbb
add
add
call
loope
mov
shrl
jp
or
sbb
jmp
mov
mov
in
iret
push
xchg
adc
cli
mov
sti
add
inc
shll
icebp
xor
add
sub
mov
add
inc
sbb
lea
add
popa
inc
mov
aas
jg
in
xchg
mov
xchg
movsb
int
cmp
push
js
xor
dec
jl
or
test
pop
lock
pop
xor
xchg
fldenv
enter
imulb
dec
push
add
push
loop
and
pushl
sub
in
fldenv
jmp
adc
gs
or
mov
adc
mov
repnz
decb
fnstenv
je
movsl
ds
sub
aad
xchg
mov
jle
mov
mov
cmc
test
push
test
push
cmpsb
dec
sahf
or
stos
repnz
lods
or
add
mov
aad
xor
fwait
xchg
sub
dec
ljmp
inc
push
jmp
jmp
jmp
scas
rorb
movsl
dec
pop
inc
cmpsb
mov
ss
mov
lcall
js
scas
lods
ljmp
mov
adc
into
nop
testl
lret
int3
das
fcoml
shl
add
xlat
sbb
adc
popf
fucomip
jmp
push
insb
push
in
xor
mov
add
mov
pop
inc
call
popf
pushf
aas
or
mov
shlb
clc
jbe
jae
dec
mov
data16
pop
gs
cmc
bound
xchg
test
xor
mov
jns
fbld
test
or
inc
xlat
push
daa
push
outsb
pop
popf
out
cmp
push
or
das
xor
call
sbb
andb
cmp
xchg
push
xor
dec
push
mov
and
cltd
pop
or
jp
adc
andb
loop
idiv
fists
cmp
sub
movsb
ds
xchg
sub
rcrb
xchg
pop
push
and
add
stos
dec
insb
jnp
cwtl
fcomi
fcoms
dec
dec
test
pusha
pushf
clc
mov
das
hlt
test
pop
and
sub
sub
cmp
jg
loopne
add
push
jp
mov
call
jg
icebp
inc
add
cmp
mov
mov
scas
bound
andl
jbe
jne
cmc
dec
cwtl
jmp
push
aaa
icebp
shlb
ss
mov
ljmp
lock
push
add
mov
scas
out
shrl
hlt
sbb
lea
adc
sahf
cmp
jg
cmp
shr
sbb
stos
mov
sahf
lods
inc
nop
loop
xor
sub
pop
outsl
es
sub
jb
sub
in
es
push
sub
sbb
and
jle
addl
add
push
jo
pop
cmp
xor
pop
loopne
scas
push
movsb
hlt
sub
pop
ret
and
arpl
fbld
cmp
clc
xchg
add
adc
pop
dec
pusha
shl
xor
jp
jmp
and
xchg
mov
add
movsb
dec
int
inc
scas
adc
loope
sbb
sbb
cmpsb
xchg
pop
mov
inc
int
pop
lret
hlt
lock
ds
int3
js
loopne,pn
movsb
movb
sub
and
sub
into
inc
imul
push
sbb
aas
or
adc
ret
test
movsb
iret
decl
scas
push
test
pop
adc
jmp
push
pop
push
xor
inc
out
jl
nop
jne
cwtl
push
movq
adc
dec
mov
inc
ljmp
lret
ja
pop
mov
jl
scas
loop
aam
adc
push
shrl
mov
cld
dec
js
xchg
data16
int3
in
scas
mov
jg
mov
sub
ret
or
nop
xor
xchg
das
arpl
das
daa
or
cld
out
mov
mov
cmp
into
cmp
mov
dec
aas
xor
mov
mov
push
loopne
push
inc
neg
inc
mov
call
push
mov
lcall
mov
or
inc
aad
pushf
pop
arpl
mov
adc
pop
lods
pop
cld
cmp
lods
arpl
pop
xchg
add
jmp
fdiv
push
out
ret
fidivrs
lret
fs
or
pop
call
lock
in
cmp
mov
mov
jmp
jne
jmp
sub
jge
jge
out
fcoms
adc
jg
mov
or
and
fdivr
cmc
lds
icebp
mov
shl
push
lock
lahf
test
lock
aas
cmp
pop
push
inc
popf
repnz
fstpl
mov
pop
inc
lcall
rcr
mov
aad
in
adc
pop
mov
jns
inc
icebp
xchg
mov
xor
xchg
filds
pop
js
mov
incl
test
xor
pop
pop
add
fsqrt
xchg
bound
pop
cmp
into
xchg
cmpsb
xchg
jmp
cmp
clc
filds
dec
xor
xor
insl
ficoms
xor
dec
cmpb
mov
or
int
push
jl
fldt
les
add
mulb
push
frstor
mov
cli
cwtl
fucomi
inc
es
das
scas
movsb
push
push
cmp
jmp
mov
in
cmp
mov
mov
sbb
int
or
jg
mov
dec
mov
xchg
leave
mov
sub
repnz
jae
xchg
mov
push
pushf
call
pop
dec
ret
pop
cmp
mov
outsb
popa
mov
clc
fdivrl
mov
push
clc
aas
pop
js
and
in
pop
cmpsb
push
addl
cmpsb
fcoms
mov
pop
popf
xchg
adc
cmp
out
fistpll
or
ja
adc
rcll
inc
push
fcmovbe
jae
mov
cmc
out
push
insl
add
mov
sbb
push
cltd
int
lods
push
hlt
sbb
pop
dec
fidivrs
add
push
adc
pushf
xor
or
and
sbb
shll
fisttpl
sub
mov
pop
cmp
pop
andl
xchg
xchg
jbe
not
popa
dec
es
push
add
aas
xchg
jo
in
stos
inc
es
roll
add
dec
add
stc
fldt
gs
inc
fistpll
cmp
out
arpl
and
inc
sbb
cmp
out
nop
mov
sub
clc
cmpb
mov
push
adc
lcall
sbb
adc
adc
or
inc
ret
scas
lcall
and
pusha
lock
fisubs
out
lret
add
pop
call
mov
incl
lcall
sbb
pop
fisubrl
cltd
lahf
cmpsb
nop
lock
cltd
in
loope
or
scas
cs
decl
xchg
fwait
or
das
mov
mov
xor
pop
jge
cmp
bnd
cwtl
rcr
sub
pushf
xor
push
lcall
testb
stos
pop
sar
push
arpl
cmpsb
pop
pushf
adc
cmp
insl
add
pop
mov
xchg
loop
nop
xor
std
dec
shlb
bsf
cmp
sbb
and
push
out
ja
pop
test
test
test
movsl
jo
ror
jle
inc
lds
icebp
adc
incl
dec
lods
clc
xor
jmp
cmp
add
clc
mov
ret
in
iret
ret
and
push
inc
and
jb
dec
sbb
mov
mov
xchg
js
imul
or
movsbl
call
mov
js
icebp
mov
rcr
cmp
sar
stc
jle
inc
mov
mov
mov
nop
ljmpw
mov
push
mov
xor
jg
push
mov
sub
rolb
loope
jno
std
mov
inc
aad
int3
rcrb
or
cltd
sub
push
in
pop
add
fwait
inc
das
cli
ljmp
xchg
imul
pop
sahf
jno
mov
cs
pop
das
int
fwait
js
inc
aam
ret
movups
lea
inc
lret
addl
mov
ret
or
or
mov
or
mov
arpl
call
cmp
fisubrl
gs
mov
pop
imul
push
add
imul
leave
sarb
repz
sbb
mov
pop
mov
ja
pop
mov
ds
xor
imul
xchg
jno
xchg
notl
lea
mov
je
dec
push
adc
or
or
popf
push
xchg
dec
mov
repnz
lock
pop
ljmp
cmpsl
sti
pop
sahf
mov
icebp
lods
pop
rclb
sub
xor
sbb
or
shll
icebp
push
push
pop
in
call
xlat
sar
ds
push
ja
mov
sbb
inc
dec
add
aam
sbb
xchg
arpl
insb
lock
or
ljmp
lret
mov
or
jbe
mov
xchg
mov
pop
or
dec
or
test
sub
loopne
mov
xchg
outsb
orb
jle
int
fists
shll
jnp
aad
cmc
xlat
dec
popl
push
lret
mov
xor
mov
loop
daa
add
aas
insl
mov
shlb
cmp
sub
inc
imul
adc
mov
mov
jmp
push
not
and
aaa
mov
mov
or
decl
pop
out
push
mov
xchg
cmp
mov
insb
ret
test
or
mov
mov
jl
cwtl
jmp
xchg
shl
lret
sub
mov
push
mov
cli
incl
ret
mov
jno
aad
sbb
out
mov
vmovsd
jne
dec
shrl
lock
rorl
loopne
push
push
repz
cwtl
mov
xchg
push
mov
pop
fwait
mov
push
mov
adc
mov
outsl
dec
js
test
shrl
dec
in
fadd
jp
jne
or
adc
cld
and
sbb
push
popa
inc
fbstp
cmpsl
pop
sbb
xchg
push
inc
push
jmp
mov
and
lods
lea
sbbl
ret
pushf
add
mov
mov
outsb
xchg
jae
adc
mov
push
sub
sub
push
lock
decb
or
into
aam
mov
mov
cmp
jo
mov
push
lcall
adc
imul
notl
xor
xor
jp
xor
repz
movsl
jb
push
pop
stos
dec
or
int3
test
or
outsl
loopne
test
pop
ds
xchg
push
jl
call
mov
mov
mov
enter
jp
ljmp
arpl
shlb
adc
or
fidivs
jnp
cmp
add
xchg
xor
dec
call
and
cmp
or
push
clc
ret
push
mov
addr16
push
mov
rolb
sbb
mov
pop
inc
adc
loop
jb
loope
mov
scas
mov
sahf
in
mov
jbe
cmc
out
rcrb
jns
xor
icebp
shl
sbb
hlt
jmp
mov
enter
push
adc
sbb
adc
sbb
or
or
inc
mov
fildll
dec
cmp
push
pop
add
pop
xchg
mov
mov
mov
and
mov
orl
mov
jb
add
dec
jp
dec
jg
mov
mov
dec
jl
scas
push
call
push
fimull
cmp
js,pt
or
loopne
mov
into
lahf
sti
pushf
xor
xor
dec
test
pushl
mov
cmp
movsl
fmuls
jmp
orl
mov
scas
sub
sub
mov
or
sbb
add
popf
jmp
jbe
and
ja
and
jo
and
pop
loopne
and
sti
pop
ret
sbb
push
mov
lds
aad
cmp
test
mov
sub
push
test
icebp
cmc
lret
jne
adc
fimuls
push
adc
pop
mov
rcrl
hlt
mov
lret
sbb
lds
sub
sarb
loop
jg
in
mov
cmp
lret
mov
test
addl
adc
hlt
xchg
clc
sbb
mov
aaa
cmp
les
pop
je
enter
push
cld
mov
jb
lcall
mov
mov
leave
inc
jecxz
int
inc
push
xor
jmp
push
roll
pop
xchg
push
cli
and
mov
add
adc
inc
out
lods
mov
pop
and
popa
cmpsl
repnz
xor
push
addl
test
pop
cld
push
bound
mov
cmp
sub
mov
bound
dec
dec
addl
xchg
xchg
cmp
ret
mov
getsec
cs
in
push
mov
pop
push
mov
push
hlt
and
push
adc
adc
add
cmp
cld
cmp
shll
inc
mov
mov
sub
push
push
fdivs
add
push
popf
hlt
xor
stos
jo
pop
adcl
test
jo
mov
test
loop
psubb
mov
dec
addl
inc
dec
sbb
int3
enter
or
ret
mov
push
push
pop
add
or
xchg
inc
adc
in
lock
jne
pop
inc
add
cld
sbb
inc
xor
push
mov
jl
push
shrb
pop
dec
add
dec
sbb
test
jnp
sbb
sub
xlat
dec
pop
dec
or
loop
ja
jns
adc
mov
adc
mov
pop
movsb
cmp
call
dec
sub
pop
pop
mov
js
mov
ss
mov
jg
pop
sub
lcall
pushf
fs
ret
or
sbb
inc
scas
mov
jp
js
pop
ja
or
sbb
inc
xor
jmp
mov
sub
xchg
imul
pop
xchg
mov
repnz
mov
jmp
lods
scas
xchg
sub
jmp
aad
xor
notb
inc
outsl
std
sahf
out
sbb
in
data16
add
test
push
or
add
sar
sti
iret
pop
and
push
xchg
in
pextrw
xor
aad
jmp
mov
shll
out
push
rol
mov
pop
shufps
cli
sub
bound
pusha
arpl
pshufw
out
cmp
sbb
jg
push
lods
cmpsl
and
fcoml
jl
and
xchg
dec
adc
hlt
xchg
in
and
in
xor
cld
scas
xor
test
mov
mov
adc
test
jg
mov
hlt
push
pusha
fcmovbe
hlt
shlb
pusha
adc
xchg
jns
or
adc
mov
xlat
insb
xlat
sub
dec
sbb
pushf
stos
out
lock
rorl
cmp
mov
stc
imul
pop
int
mov
adc
sbb
add
into
add
inc
int3
cli
outsb
mov
mov
mov
ret
inc
dec
loope
scas
lret
jne
fdivl
les
ja
mov
mov
testb
inc
mov
jecxz
jb
lea
push
mov
pusha
dec
pop
movsb
dec
lds
pop
hlt
mov
cmp
adc
cmp
rolb
sti
cmc
push
aas
cmc
shl
shll
pop
pop
jge
ret
hlt
pop
fwait
repnz
mov
pusha
or
pop
mov
into
lea
mov
jp
std
cld
lock
lods
pop
and
insb
add
in
sbb
xorb
out
loop
cwtl
lock
and
xchg
jo
mov
xchg
and
mov
stc
andb
jne
adc
mov
xchg
fwait
and
pop
cltd
adc
cmpsl
jae
loopne
mov
jg
sbb
in
je
insb
imul
or
jae
ret
mov
or
jp
sarl
loope
mov
imul
cmp
out
xchg
sbb
mov
push
ljmp
ret
sbb
jmp
cmpsl
cltd
andb
dec
into
mov
loope
out
sub
out
sbb
mov
inc
mov
push
dec
mov
js
test
sbb
sbb
add
or
jns
lcall
enter
cmp
mov
sbb
cli
cmp
lock
or
aas
ljmp
push
push
add
fcoms
sbb
xor
ret
lock
outsl
mov
lods
adc
sbb
incb
lods
xchg
fbstp
in
test
daa
dec
jo
sub
out
xchg
movsb
cld
cmpsb
or
pusha
stos
mov
sbb
dec
vpaddd
test
in
pop
call
mov
xorl
sbb
pop
cmp
mov
xor
movsb
rcr
ret
int
xchg
sub
jmp
mov
lods
inc
pushl
xor
repnz
jp
sub
cli
not
shlb
mov
popa
jbe
xchg
mov
mov
jo
push
push
sbb
push
iret
into
lea
mov
sbb
push
cmp
xor
test
adc
add
daa
call
jge
fimull
shl
mov
pop
add
fs
inc
leave
imul
aam
int3
int
sahf
test
mov
inc
mov
mov
push
pop
jge
loopne
pop
sahf
dec
or
stos
lahf
pop
dec
lock
je
stos
call
xlat
sahf
test
mov
cmp
sti
pop
mov
adc
add
mov
cwtl
xor
lcall
outsb
xor
or
enter
jg,pn
adc
adc
dec
addb
mov
sbb
mov
jge
inc
dec
push
and
sub
lock
pop
push
pop
fsubrl
shl
movsb
inc
subw
xchg
cs
inc
or
mov
in
mov
addr16
dec
fwait
add
mov
daa
mov
out
out
ud0
aad
je
cmc
mov
and
add
sbb
lret
cmp
sbb
xor
fmuls
pushl
pop
imul
pop
jge
pop
ds
scas
ljmp
adc
push
sub
jo
cli
outsl
cmp
repz
sub
push
call
mov
xchg
jo
push
daa
push
pop
test
out
pop
adc
jge
lret
xor
movsl
lahf
fld
mov
sub
sub
mov
lcall
cmpsl
imul
fstps
or
inc
imul
ret
pushf
add
mov
inc
push
cli
ja
mov
xchg
add
mov
insl
lahf
cmpb
mov
push
arpl
mov
mov
xchg
clc
fnsave
pop
cmp
in
add
cmp
cmp
cmp
xor
and
rcll
mov
mov
ja
ss
pop
mov
xor
jmp
mov
les
push
mov
movsb
cmc
lea
add
push
or
decb
pop
sbb
call
jp
jne
dec
and
rcl
sbb
xor
or
jp
pop
xchg
ss
int3
mov
add
jne
sahf
cmp
ret
shr
mov
std
mov
sar
adc
mov
out
incb
push
xlat
sbb
lods
pop
fimuls
mov
pop
and
push
mov
dec
popf
sbb
pushf
mov
jmp
loope
and
mov
mov
xchg
xchg
pushf
fdivrl
imul
in
pop
sbb
sbb
mov
and
mov
sbb
ja
mov
push
call
pop
inc
call
cmp
pop
xor
lds
xchg
lcall
aaa
fucomp
hlt
jp
loop
jp
nop
cmpsl
push
cmc
out
dec
inc
loop
xchg
lret
js
xchg
mov
aas
ror
inc
ud0
pop
int3
inc
cmp
cmp
adc
and
arpl
cmpsl
orb
pop
stc
lcall
or
movsl
mov
scas
into
sahf
jmp
xor
jge
dec
cmpsb
xor
sub
shrb
jmp
jg
mov
cmp
call
and
dec
cmc
idivb
push
pop
jle
mov
push
jo
fadds
dec
aas
mov
test
push
test
xor
jp
in
std
inc
dec
pop
sbb
mov
ret
mov
jns
adc
mov
pushf
push
dec
push
mov
dec
js
inc
pop
ss
push
stc
inc
test
push
aam
jmp
push
mov
incl
leave
jge
in
cwtl
aad
outsb
pop
aas
jno
mov
das
inc
ss
adc
insl
sub
int3
xchg
divb
pop
sub
cwtl
cmp
mov
movsb
sbb
jge
mov
in
or
call
pop
dec
add
add
and
insb
pop
icebp
jnp
test
cli
in
xor
pop
frstor
es
inc
js
clc
addr16
pop
sarl
xlat
in
and
jecxz
mov
loope
fistpl
push
and
clc
incl
pop
fnstsw
push
popa
adc
mov
mov
jb
pop
insl
sub
or
fcoml
fadds
pop
rol
cmp
arpl
sbb
xchg
xchg
dec
sbb
movsl
stos
fistpll
cld
aaa
movsb
shlb
fisttpl
sub
xor
sub
insb
enter
inc
xchg
inc
and
sub
cmp
lock
mov
push
test
shll
in
sub
clc
add
inc
pusha
add
subl
in
jne
push
out
nop
call
aas
xor
mov
loopne
sar
xor
add
mov
repnz
out
fidivs
scas
cltd
addl
lods
xchg
dec
push
mov
push
mov
and
fs
insl
mov
or
inc
int3
cs
pop
scas
ds
lds
inc
jbe
dec
dec
out
push
mov
push
jb
sbb
or
or
pop
xor
call
orb
mov
mov
fmull
inc
adc
testl
push
lock
mov
dec
mov
mov
add
jecxz
inc
clc
ficompl
ljmp
lock
xor
mov
pop
ljmp
lock
aas
shll
cmp
sbb
adcl
mov
lea
mov
hlt
push
ret
cmp
or
fildl
or
in
jno
dec
or
jo
sti
subb
out
test
xor
pop
inc
fwait
xor
pop
mov
mov
push
fimuls
aas
and
ja
cmpsl
sub
cmpsl
jmp
jnp
mov
mov
aam
out
add
int
xchg
or
imul
loopne
pop
or
mov
or
mov
pushl
and
sub
push
dec
jl
mov
into
mov
in
fadd
das
js
or
fwait
sbb
add
adc
xor
aad
add
jns
in
xor
jne
lods
cs
insb
nop
lods
cs
das
push
lcall
push
ret
sbb
pop
enter
bound
stos
inc
fcoms
jo
fsubr
rol
fiadds
pop
fcoml
shlb
gs
cmpsb
xchg
inc
mov
mov
lock
xchg
dec
fs
sbb
or
shll
ljmp
pop
mov
cmp
jp
and
mov
and
mov
ljmp
stos
test
movsb
cmpb
cmpsl
rorl
sub
test
mov
fcmovb
test
sbb
dec
pushf
movl
shr
dec
jge
adc
pop
enter
popa
aam
or
pop
dec
neg
xchg
pushf
insb
das
cli
lcall
or
mov
cmpsl
imul
add
stos
dec
xchg
fmull
xor
cmpsb
icebp
outsl
sbb
repz
jl
test
xchg
pop
jl
imul
mov
inc
insl
jne
or
nop
shrb
push
pop
inc
xchg
maxps
arpl
test
jo
jecxz
stc
inc
push
xor
dec
insl
daa
mov
sub
lock
scas
cmp
mov
cmpsl
cmp
push
testl
add
mov
pushl
ret
jne
ljmp
adc
xlat
inc
and
shr
aaa
cmp
scas
push
cmp
add
sbb
subl
jl
neg
push
imul
mov
int
out
adc
adc
cmpsb
or
fidivrl
stos
roll
or
pop
fnsave
mov
cmp
bnd
in
mov
pushf
in
loop
adc
mov
mov
mov
mov
daa
ljmp
lea
pop
movsb
enter
rclb
jno
add
adcl
outsl
inc
xchg
ss
orb
mov
xchg
clc
inc
decb
or
xor
mov
pop
mov
jl
xchg
dec
pop
xchg
movsl
sar
sar
pop
add
mov
out
inc
es
mov
movsl
add
and
notb
mov
hlt
aas
call
add
clc
aaa
push
imul
and
adc
adc
sub
sbb
jle
lods
sbb
inc
fisubrl
out
add
ljmp
stc
cli
out
pop
outsl
insl
addr16
outsl
jge
stos
testb
push
inc
dec
or
scas
push
dec
push
jmp
repnz
bound
or
adc
push
mov
call
repnz
adc
cmp
mov
dec
loopne
mov
ljmp
outsb
mov
mov
xchg
mov
lods
and
mov
inc
push
dec
inc
adc
push
test
dec
jmp
sbb
mov
dec
inc
pop
dec
ss
xchg
rolb
cs
hlt
mov
pop
loop
and
loop
push
cld
add
mov
pop
cwtl
inc
pop
call
mov
jo
mov
sbb
movsl
push
push
xchg
xor
sbb
xchg
insl
jle
pop
jecxz
sub
push
enter
push
add
fcoml
fs
imul
test
xlat
mov
mov
mov
insl
jb
push
mov
jo
cmp
adcb
mov
ret
in
pop
and
mov
ret
add
cmp
enter
mov
jbe
mov
sub
adc
clc
inc
sarb
mov
jp
cmp
push
push
mov
mov
mov
mov
add
push
sub
push
loop
jle
shll
dec
loopw
clc
divb
and
or
adc
loope
clc
inc
cmpsl
sbb
je
mov
push
inc
mov
pop
inc
jecxz
call
mov
lods
xlat
cld
movsb
push
test
lcall
mov
mov
cmp
iret
jle
push
dec
add
dec
dec
insb
jg
out
jl
sbb
mov
mov
icebp
testl
mov
hlt
sbb
and
jg
sbb
daa
repz
jo
cmpsl
es
jmp
jo
sbb
ljmp
mov
inc
inc
inc
pop
sti
mov
mov
sub
add
adc
inc
bound
push
mov
jb
imul
sbb
fildll
repnz
push
shll
jp
lea
push
mov
cli
jmp
push
sbb
into
sbb
cmp
scas
mov
or
arpl
int
shl
xor
rclb
sub
lahf
xor
loope
mov
jae
mov
or
inc
loopne
mov
pop
pop
jns
fmuls
xchg
or
cmp
cld
ds
fcoml
cli
mov
in
mov
mov
lret
sbb
sub
xor
loopne
dec
aaa
xorb
mov
iret
lock
sbb
daa
jbe
gs
clc
sbb
ja
fildl
jno
jb
ds
push
sbb
sub
xor
pop
and
adc
out
jmp
push
or
pop
cmp
inc
incl
sub
xor
xor
iret
mov
xchg
cmpsb
pop
stos
inc
push
mov
jmp
sub
in
xchg
xor
cmp
inc
mov
jns
cmp
cld
sub
xor
mov
rcll
and
loope
xor
shrl
dec
inc
lock
mov
mov
ret
fs
cmp
in
dec
mov
outsb
data16
mov
subl
xor
lods
aaa
sahf
inc
dec
das
mov
into
das
fmul
adc
mov
fsubrl
fcomp
sbb
daa
cmp
test
xchg
js
push
imul
jg
jp
push
cmc
pop
fsubp
xor
call
sub
mov
push
incl
mov
mov
or
iret
xorb
into
dec
js
test
mov
scas
insb
mull
sbbb
mov
divl
and
arpl
test
dec
sahf
loope
rorl
icebp
mov
pop
fld
sbb
cwtl
fucomp
imul
repz
or
mov
inc
cmpl
and
or
jnp
add
mov
pop
shrb
xor
clc
loopne
insb
sbb
sbb
clc
add
push
xchg
pop
stos
mov
mov
or
lahf
daa
mov
xchg
ljmp
movsb
stos
mov
push
inc
adc
stc
cmp
mov
cmp
add
pop
insl
jp
mov
adc
mov
sub
cmpl
aas
jmp
cmc
addl
push
cmc
xor
ljmp
mov
pop
xor
call
fxch
push
mov
aaa
jb
pop
popl
stos
pop
add
xor
dec
push
mov
mov
push
sbb
push
ficoml
mov
and
call
xlat
subb
jne
add
fidivl
cmp
cmp
inc
jbe
cld
xchg
pop
mov
outsl
or
test
inc
mov
mov
pop
in
and
xor
pop
cmp
ffreep
jo
int3
aaa
vmovdqu
inc
inc
dec
xlat
iret
fdivr
pop
bound
lock
sub
pop
lods
fdivs
lret
cli
int
pop
add
test
add
mov
pop
test
dec
scas
mov
sub
push
mov
jp
add
mov
mov
in
inc
nop
dec
mov
rcl
fidivrl
loopne
cli
shrl
into
push
sub
cmp
cmpsb
mov
sbb
mov
push
cmpsl
sub
adc
les
dec
loope
jg
rorb
jne
mov
dec
dec
xchg
sbb
lahf
lahf
fisubl
ds
daa
andb
xorl
mov
pop
mov
std
ss
ja
jg
xchg
jo
stc
ss
sbb
icebp
sub
xor
ret
xor
jmp
xchg
insb
xor
test
lock
push
mov
sysenter
cmp
pop
popa
loopne
mov
fcomps
stos
xor
cmp
push
arpl
loopne
fadds
mov
jo
adc
clc
pusha
loopne
rolb
jno
iret
daa
and
ds
push
push
stc
dec
fwait
pop
out
mov
xchg
push
sbb
aas
daa
sub
movsl
in
jns
and
insb
pop
pop
sbb
mov
ret
out
mov
jle
push
lret
inc
push
xchg
and
xchg
lods
pop
loop
movsl
pushw
xchg
outsb
ljmp
pop
mov
nop
int
shl
mov
imull
cld
pop
pusha
js
ja
das
add
and
ljmp
cmp
cld
pcmpgtw
aas
or
xchg
cmp
repnz
cmp
daa
in
rclb
pop
or
es
cmc
inc
mov
dec
jge
ret
and
stos
test
push
jg
push
jg
test
inc
mov
insb
inc
jo
jb
and
xor
ficompl
inc
add
outsb
in
add
or
hlt
add
mov
cmpsb
jns
inc
pop
je
lods
rcr
xchg
adc
mov
pop
pop
pushf
pop
mov
jecxz
pushf
mov
cmp
pop
sub
sar
mov
ljmp
inc
adc
dec
xchg
ficoml
pop
mov
push
xchg
sbbb
cmp
inc
cmp
pop
roll
ss
testb
sub
cmc
scas
push
popa
int
or
mov
fwait
movsl
pop
pop
pushf
mov
je
dec
les
ret
inc
adc
dec
and
dec
in
cltd
jl
add
mov
sarb
fidivrs
lahf
ret
jnp
mov
and
rorb
jmp
aaa
mov
ficompl
out
push
cltd
sub
dec
pop
mov
mov
cmp
repz
mov
add
int
insl
fwait
ds
push
jg
mov
cld
cmpsl
cmpsb
sahf
inc
or
int3
mov
and
jg
push
jae
sti
in
jmp
jl
mov
sbb
sbb
mov
xor
mov
xchg
mov
cmpsl
sbb
shr
out
mov
daa
xor
cmp
xor
sub
sub
ljmp
hlt
adc
jb
pop
ja
leave
gs
loopne
stos
ja
and
std
aas
cmp
lret
add
mov
fsubrl
aam
adc
push
jp
mov
repz
lret
xchg
sub
mov
adc
mov
inc
int
add
or
aam
cmpsl
fld
push
mov
ja
add
or
cld
push
push
or
jp
ss
mov
add
clc
add
scas
mulb
test
pushf
xor
in
push
push
je
jecxz
testb
andb
mov
lods
and
mov
mov
xor
and
jnp
sbb
jno
xorps
push
or
jg
pop
jns
iret
push
xor
xchg
inc
jnp,pn
mov
adc
push
ja
xor
js
mov
shl
scas
out
and
insb
pop
pop
fisubs
mov
add
test
dec
stos
jecxz
mov
and
pop
addb
inc
sub
daa
jno
std
fnsave
mov
fucomp
add
and
adc
sub
cmpb
ja
iret
fwait
jle
in
mov
adc
pushf
in
inc
pop
xor
out
mov
or
popf
out
jo
xor
lds
push
xor
rcrb
xlat
je
sbb
lea
movsb
jno
loopne
push
or
xor
orl
pop
loop
adcl
loop
cmpsl
lods
or
repnz
jle
stos
add
data16
std
sub
jg
push
je
sub
lods
ljmp
pop
cmp
int
frstor
mov
adc
pop
mov
cmc
jo
loop
popf
mov
orl
jg
andl
inc
clc
adc
or
loopne
xchg
std
jnp
mov
or
dec
or
pop
mov
fadd
dec
sbb
cmpb
jmp
push
hlt
or
rcll
adc
xchg
wrmsr
call
ss
stos
popa
dec
xor
mov
mov
arpl
cmp
out
stos
subl
sub
add
lods
sbb
xor
arpl
movsb
pop
jbe
or
out
iret
addb
push
inc
sub
test
and
popa
and
dec
and
jne
push
lock
dec
push
and
mov
sahf
dec
add
add
lock
mov
lret
test
pop
notl
jp
jb
mov
and
dec
inc
jmp
or
mov
inc
test
shl
xor
jl
lock
sahf
mov
xor
lahf
out
or
aam
stos
and
push
jg
sub
sub
push
dec
sbb
loopne
sub
aaa
imul
ja
cmpsb
lcall
xor
xchg
insb
push
jl
sub
add
and
in
jo
fwait
outsb
push
or
mov
mov
inc
mov
out
imul
xlat
push
pushf
xor
leave
shlb
cmp
loop
xchg
sbb
mov
sbb
push
or
bound
cmp
or
adc
sub
outsb
enter
ja
andl
das
cs
add
fildl
push
lods
dec
xchg
cwtl
cmp
sub
in
movsb
dec
loopne
xor
inc
add
pop
xorb
mov
xchg
mov
mov
sub
roll
add
arpl
pop
pusha
js
xor
add
outsl
jecxz
sub
loop
jmp
and
lea
scas
xchg
loope
mov
out
push
jno
imul
inc
mov
out
test
push
imul
xchg
std
ljmp
mov
fdivs
popa
or
sahf
jbe
jmp
inc
xor
jp
jns
inc
cld
jg
mov
push
dec
mov
sbb
mov
cmp
mov
sbb
and
call
pop
and
call
mov
pushf
sub
ljmp
mov
mov
dec
cmovnp
add
mov
out
lret
pushf
popa
loop
sbb
ljmp
jge
push
mov
cmp
mov
int
pop
js
jp
in
and
mov
test
add
dec
test
movsb
push
jae
sbb
xor
jae
lods
dec
jle
pop
cmc
ret
lock
or
adc
aas
insb
lods
into
xor
test
fucomp
gs
ja
rcrl
lea
and
or
adc
pop
xor
cmp
loop
cld
stos
lods
imull
loopne
jno
fcomi
cli
cli
fildll
xchg
pmaxub
xchg
dec
das
push
inc
adc
call
jne
jle
cmp
daa
pop
cmpsl
jb
int3
adc
mov
ljmp
insb
fildl
xlat
dec
sarb
inc
sbb
xor
addr16
fisubrs
jle
push
cli
rclb
xor
xor
cmp
pop
pop
push
mov
sub
sbb
dec
cmpsl
fisubrl
scas
and
mov
into
or
pop
cli
fisubrl
mov
pop
test
ja
adc
jg
inc
loop
cli
sub
rorl
or
adc
jg
jbe
in
xchg
pop
leave
aaa
dec
push
aas
mov
into
push
mov
test
mov
sub
ret
test
push
sub
pushf
cmp
cmp
inc
xor
push
pushf
psubd
rclb
addr16
cmp
fwait
ds
fdivl
pushl
les
adc
mov
jne
adc
push
test
popa
xchg
test
ret
and
int3
or
dec
pop
movsb
ljmp
push
ja
dec
xor
or
mov
out
lcall
push
inc
into
stos
sti
jo
mov
dec
mov
jno
jp
movsb
fadds
mov
inc
push
jmp
loopne
mov
add
xlat
adc
cmp
or
mov
mov
cli
mov
push
adc
mov
jmp
aad
mov
xchg
xchg
mov
xchg
lods
xchg
jb
push
rorl
and
inc
jecxz
int3
sti
andb
cld
cmp
andl
cli
dec
cmp
and
or
addr16
push
loopne
mov
dec
mull
xchg
call
adc
push
pushf
pusha
cmpsl
xchg
jne
loopne
cwtl
pop
cmp
jge
ret
dec
cmpsb
aad
and
mov
mov
out
cwtl
out
sub
enter
mov
push
shl
outsl
or
cmp
std
or
or
mov
jge
mov
add
mov
cmp
clc
pop
addr16
scas
add
push
jb
jae
inc
pop
scas
add
jle
or
jmp
xor
rcll
insl
insl
add
sarb
sbb
push
xchg
in
sub
lods
pop
inc
leave
cli
ja
pop
adc
into
and
cld
push
lea
movsb
push
mov
cwtl
mov
push
xor
rorl
mov
pop
loop
divl
push
daa
mov
cld
and
adcl
xchg
sti
sub
and
sbb
clc
jg
xlat
mov
sbb
repnz
mov
adc
hlt
jmp
scas
aaa
fldt
push
inc
push
testb
cmp
stos
mov
je
ljmp
out
insb
sub
aas
jne
adc
sub
dec
andl
cmpsl
outsl
rdtsc
lahf
or
pop
fisttpl
test
test
daa
repnz
int
and
mov
lcall
dec
adc
movl
xor
jge
mov
aaa
mov
fs
mov
outsb
push
outsl
adc
mov
arpl
leave
mov
mov
mov
insl
adc
dec
sub
data16
bound
sbb
mov
addb
hlt
push
rorl
cltd
dec
xor
pop
call
and
ror
push
mov
jl
push
jecxz
cs
inc
or
mov
pushf
test
movsb
push
cli
xchg
or
mov
jg
add
cmpb
cmp
stos
sbb
das
inc
mov
popf
decl
dec
in
adc
pushf
mov
dec
sub
xor
test
pop
ss
sbb
mov
sbbb
cmp
push
out
adc
clc
sub
scas
out
data16
xchg
leave
inc
xor
jg
pop
jmp
cmp
add
pop
sbb
xor
cltd
fmuls
push
jbe
mov
pushl
pop
dec
jno
sbb
iret
or
paddq
push
or
pop
xchg
data16
xor
fs
push
add
in
test
lods
int3
fwait
mov
jo
pop
dec
and
cwtl
add
lcall
add
cmp
clc
in
push
sub
dec
test
lds
decl
loopne
inc
cmpsb
xchg
xor
pop
mov
push
mov
movsb
xchg
mov
jbe
test
xor
sub
xchg
lods
jg
cs
xor
movlps
mov
or
cmp
or
mov
ret
es
fistpll
jmp
jecxz
arpl
out
ss
nopl
fcomp
aad
mov
lods
mov
xlat
pop
push
dec
dec
decl
lret
or
cmp
or
imul
and
adc
jp
xchg
sahf
loopne
xchg
lahf
test
adc
xchg
xor
add
pop
push
and
push
inc
push
sarb
sbb
lods
call
add
push
insb
outsb
and
incl
pop
mov
fldl
jb
jns
add
fwait
repz
in
data16
imul
test
ss
ficoms
mov
clc
jne
scas
add
fs
fmulp
popf
mov
sarb
jo
inc
lcall
jg
push
enter
mov
cltd
jg
jp
adc
mov
int3
sub
mov
decl
add
cld
mov
add
sahf
mov
test
ds
scas
jno
and
lea
mov
out
out
dec
adc
mov
sub
xor
sahf
fidivrl
popa
aas
fxch
in
les
push
adc
or
mov
mov
inc
aam
or
jle
or
out
outsb
lcall
out
cmp
gs
out
or
jnp
mov
xchg
add
add
hlt
jg
cmp
adc
mov
into
mov
adc
in
insl
jle
dec
shrl
push
sub
movsl
cmp
pop
fcomps
and
stc
and
lcall
movsl
jg
loopne
mov
pop
fcompl
rorb
dec
cmp
insb
mov
add
pushl
movsl
ljmp
adc
cmp
sar
xchg
add
adc
jecxz
out
pop
and
jle
lock
jmp
xchg
scas
push
cld
fistl
jle
lcall
stos
jb
ret
adc
push
rol
fidivrl
inc
fdivrl
push
std
inc
adc
xchg
lret
test
jecxz
cmpsb
pop
mov
and
inc
pop
test
loop
pop
or
in
and
icebp
jg
ret
push
jno
push
outsl
xchg
pop
mov
cwtl
or
mov
pop
pop
sbb
jp
jae
call
sub
add
pusha
or
orb
jbe
mov
das
pop
roll
mov
push
ss
les
pusha
div
sub
fcomps
mov
mov
icebp
dec
jne
xor
ja
add
hlt
jg
sub
xor
xor
rcl
cmpsb
xlat
xchg
jno
jl
xor
add
inc
in
dec
jle
push
cli
ds
outsl
dec
rolb
les
sub
outsb
add
xor
xchg
mov
dec
mov
push
insl
xor
rcrl
hlt
shlb
in
insb
scas
xchg
loopne
jnp
add
push
jl
mov
lcall
scas
jnp
cli
sub
pop
xor
pop
divb
adc
cmpsb
out
inc
mov
add
jg
mov
or
adc
pop
or
push
xor
cmpsb
mov
lcall
jne
sti
scas
into
mov
sbb
outsb
ret
clc
or
pop
rorl
repz
mov
cmp
les
into
movb
xchg
sbb
rolb
jnp
bound
xchg
imul
jne
mov
jmp
test
adc
out
imul
xchg
outsb
mov
loopne
push
mov
leave
cmp
dec
or
cmp
scas
push
es
ljmp
push
mov
jns
push
jl
mov
adc
push
sbb
mov
aam
out
les
pushf
repnz
mov
cld
aas
stc
fiaddl
sub
fisttpl
jbe
in
pop
mov
hlt
stos
clc
cmpsb
iret
repz
cmp
jne
fisttpl
popa
scas
pop
sbb
je
lds
dec
or
add
in
mov
insb
outsb
int3
xor
cmp
sbb
cmp
mov
sar
daa
push
sbb
jne
cmp
pop
or
jo
xor
mov
pop
push
push
pop
mov
std
add
xor
iret
xchg
lods
jmp
enter
subb
xchg
push
mov
divb
popa
pushl
inc
adc
push
jp
pop
push
push
stos
dec
push
mov
add
test
pop
js
mov
pushf
push
or
mov
sahf
lods
shll
testl
pop
inc
jle
lods
adc
sub
out
mov
push
int3
leave
jmp
ljmp
popf
sub
add
mov
lods
mov
cli
or
ficompl
inc
or
mov
icebp
test
icebp
aas
rorb
and
pop
mov
dec
lods
pushf
cmpl
mov
cwtl
jl
pop
dec
jg
jg
or
je
xor
out
mov
mov
cli
pusha
and
cmp
jmp
adc
inc
mov
mov
inc
or
call
or
pushf
cmpsb
xor
cld
and
mov
adc
sarl
movsl
movsb
xchg
or
outsb
int3
cmp
into
xchg
popl
mov
inc
xchg
dec
add
cmp
loopne
xor
and
pusha
xlat
into
decb
ljmp
xor
icebp
cld
hlt
lock
sub
lret
movzwl
cmp
mov
push
idivb
xchg
sbb
push
cmpl
and
gs
dec
pop
sbb
cmp
mov
dec
sub
cmpl
adc
xor
jle
ret
int3
in
inc
or
shl
jnp
cli
mov
adc
mov
or
cmp
sbb
iret
and
add
pop
pop
and
pop
push
adc
jmp
iret
cmpsl
adc
jbe
rcrl
shlb
xor
cmpsl
ret
out
xchg
dec
jmp
mov
das
pop
adc
add
add
inc
loope
loopne
cld
out
adcl
add
nop
jb
cmpsl
outsb
inc
loopne
push
inc
loope
rorl
sub
ljmp
cwtl
nop
mov
xchg
xor
xchg
or
inc
push
and
push
add
jo
fsub
subb
lea
xlat
and
xchg
hlt
fcoml
stos
sub
push
test
into
inc
andb
pop
add
ret
mov
popf
rcrb
jl
inc
shr
fcmovnu
fcmovnu
ret
int
sbb
mov
pop
adc
push
adc
mov
cmp
xor
stos
cs
in
das
sbb
fisubs
mov
int
sub
mov
and
mov
push
add
fiadds
mov
sbb
lahf
push
cmpsb
adc
pop
ljmp
and
dec
loopne
aas
sbbl
inc
pop
stc
ja
ljmp
mov
inc
ret
fistl
insl
mov
add
adc
mov
add
xchg
pop
add
adc
and
ret
push
cld
push
mov
icebp
loop
filds
inc
rol
jmp
and
cltd
xchg
and
sbb
push
jg
dec
daa
jp
xor
movsl
movsl
push
or
iret
jae
fsub
jae
movsl
or
xchg
cltd
push
xor
sub
jle
push
movsb
ljmp
insl
xchg
adc
lock
cld
das
outsl
call
sub
js
mov
or
cmp
sbb
lret
adc
push
add
lret
lcall
dec
dec
push
stos
neg
shll
ljmp
pop
mov
pop
popa
rol
mov
aad
test
fs
lods
jb
rolb
shll
cmpsl
dec
pusha
mov
les
test
icebp
lods
xor
loop
test
pop
and
cmp
in
je
xchg
test
xchg
xchg
std
pop
lock
shll
xor
fimuls
mov
mov
mov
sub
jg
adc
clc
sbb
xchg
mov
mov
sub
push
loop
mov
in
test
fwait
ret
test
call
xor
sarl
sbb
push
pop
jo
bound
sub
and
dec
lock
out
inc
dec
or
mov
mov
out
cmpsl
xor
cmp
mov
jge
shrb
sbb
push
out
outsb
movlps
push
dec
adcb
pushf
jg
fistl
movsl
push
stc
cmpsb
imul
out
add
xchg
mov
mov
insl
std
xor
loop
divb
pusha
push
aaa
mov
dec
xchg
jno
pop
in
out
and
and
adc
es
shll
pop
xchg
push
jg
stos
test
fdivrl
and
adc
xchg
sbb
dec
fldl
push
rcrb
test
and
cltd
adc
subl
xor
pop
mov
dec
rcll
and
adc
mov
dec
jns
inc
movsl
test
xor
loope
xchg
sbb
mov
imul
fmuls
nop
fs
xlat
aad
pop
fwait
mov
loop
cmp
mov
popf
sbb
push
cmc
incl
mov
cmpsl
insl
lmsw
push
mov
ss
incl
loopne
loopne
pop
out
fmull
mov
push
xor
in
fdivrs
orl
mov
cmp
cld
adc
push
mov
sbb
aad
icebp
jae
int
mov
pop
or
add
jle
loopne
mov
lock
adc
popa
push
add
mov
fdivl
inc
cli
icebp
push
xor
pop
mov
stos
inc
dec
lret
add
loopne
pop
xchg
out
imul
shrl
aam
das
and
ds
rcrl
and
fucom
sub
push
aam
out
std
js
es
add
xchg
xor
sub
cmp
push
mov
cmpsb
adc
jnp
int
gs
iret
out
or
out
call
or
adc
push
mov
outsb
mov
inc
scas
movsb
repnz
pushf
xor
js
xchg
add
aad
mov
cmc
jge
mov
insl
mov
pop
sub
mov
std
mov
inc
scas
repz
pushf
and
leave
sub
push
cmp
mov
and
and
push
test
js
cmp
pop
add
das
ljmp
fldl
and
mov
cmpsl
data16
add
xor
sub
ficompl
pop
pop
sbb
jb
mov
ljmp
test
push
out
stos
bound
decl
mov
sub
ja
dec
pop
cmp
pop
fistps
rclb
dec
shl
xchg
shrb
divl
fs
cli
sub
push
dec
inc
cmp
inc
dec
xchg
adc
cmp
sub
cmp
cmp
call
lds
push
out
js
ret
mov
xor
xor
push
shrb
scas
clc
js
jecxz
sub
push
adc
cli
int3
pop
mov
fs
sarl
adc
mul
jecxz
in
jge
xchg
sub
mov
repz
aaa
scas
and
mov
sub
mov
or
sbb
pop
push
cmp
sbb
cmpsl
fsubr
sub
add
pusha
jmp
xor
je
adc
and
rcl
xor
sub
andb
test
xor
ljmp
test
mov
aad
or
inc
pop
adc
js
lock
push
mov
call
mov
mov
aas
jo
cmp
adc
pop
nop
mov
jo
loop
inc
cmpsl
fistpll
insl
cmp
out
pop
rcr
or
leave
rcrb
pop
shlb
mov
movsl
dec
and
push
ljmp
shrl
dec
mov
add
out
and
mov
xchg
jb
scas
aam
cmp
js
and
jae
mov
mov
cld
shrb
outsl
stos
shrb
mov
test
stos
push
and
call
mov
or
test
xorl
es
in
arpl
mov
data16
xor
shlb
mov
movsl
repnz
pop
clc
xchg
push
adc
add
xlat
mov
bound
push
push
jbe
incl
cmp
int3
enter
popf
loop
or
pop
jb
or
xchg
push
sub
pusha
xchg
adc
inc
or
lea
and
repz
fisttpll
add
and
std
mov
int
xor
imul
xchg
cld
push
movsl
leave
sar
cli
cld
fistl
dec
jne
add
cmp
mov
push
cld
test
mov
mov
push
call
xor
adc
cwtl
movsb
stc
leave
sar
jg
idivl
repz
mov
repnz
std
sar
inc
xor
or
ret
lret
jecxz
inc
cmp
loopne
aam
test
mov
cli
adc
add
test
jecxz
scas
into
inc
popf
cmp
repz
outsl
mov
or
and
add
jecxz
clc
aam
loopne
sub
inc
popa
stos
xchg
daa
cli
lods
inc
push
aam
push
mov
sub
jl
fbld
hlt
out
mov
xchg
xor
push
push
sub
sbb
pop
cld
sbb
dec
xchg
xchg
rcrl
subl
in
push
in
clc
int3
bound
sub
inc
mov
xor
iret
mov
or
push
addl
sub
les
cltd
mov
mov
pushf
cmp
push
inc
jmp
mov
push
or
mov
shrl
jne
mov
clc
jg
inc
pop
mov
ja
out
sahf
adc
mov
sbb
and
jo
movsb
push
add
in
sbbl
frstor
pushf
negb
mov
outsb
fmull
rcrb
cmp
insb
outsb
div
push
jl
jmp
pop
pop
out
xor
cmc
pop
mov
jecxz
iret
dec
sbb
jmp
jns
mov
int
cmp
repnz
dec
mov
aaa
mov
int
and
adc
push
cmpl
pop
sbb
loopne
addl
mov
add
pop
cmp
inc
push
lret
es
xchg
sbb
aaa
cmp
adc
dec
cmpsl
add
mov
in
jbe
or
xchg
sti
xor
and
out
pop
in
call
sbb
mov
faddl
iret
cmp
notb
js
popw
mov
jg
jns
sarb
pop
xlat
movsl
iret
ret
sub
add
loope
push
dec
pop
sub
fidivs
iret
lret
sahf
inc
jnp
xchg
jle
inc
pop
push
mov
ss
popa
inc
imul
popa
mov
lods
and
rol
dec
fidivs
rcl
into
xor
cwtl
inc
rorb
out
add
push
xor
push
test
push
ds
loop
loope
pop
cwtl
call
adcl
sub
xor
cmp
xchg
lock
adc
lds
ss
rorb
rolb
sbb
push
fldenv
std
mov
or
xchg
xor
imul
push
mov
xor
pop
aam
mov
inc
push
out
jnp
mov
mov
stc
mov
dec
and
push
and
mov
jge
xchg
xchg
mov
movsb
push
or
icebp
fwait
mov
push
inc
xchg
sbb
dec
aas
sub
bound
pop
sti
cmpb
or
fs
imul
adc
movsb
inc
in
lret
or
pop
mov
mov
je
hlt
loope
fidivs
ljmp
lret
xor
cmovle
mov
xchg
aas
sbb
ret
dec
rolb
cmc
clc
mov
icebp
loopne
int
dec
xor
sub
das
pushl
enterw
pop
ret
inc
sbb
mov
lock
rolb
sbb
inc
ret
cmp
and
insb
mov
sahf
ds
imul
cs
or
xor
decl
or
sbb
jbe
cs
int
movsl
sbb
das
push
jge
inc
and
loopne
cmpl
or
cld
xchg
mov
sar
nop
pop
push
test
ljmp
mov
shlb
mov
stos
push
jp
jno
xchg
ret
aam
les
mov
inc
in
cmpsl
add
cmpsl
push
xor
mov
aam
outsb
ljmp
fs
fwait
add
pop
xchg
mov
mov
imul
lock
js
mov
lret
sub
cmc
adc
inc
pop
add
inc
dec
mov
rolb
jg
pop
sbb
lret
div
cmp
sub
sub
mov
push
repz
fisttps
jg
inc
pop
jp
push
cmp
lock
sti
ljmp
addb
jns
in
push
rolb
lea
loopne
mov
out
js
push
pop
xchg
popf
mov
mov
loopne
push
inc
in
xor
ss
xchg
adc
hlt
mov
shl
ljmp
hlt
aas
cmp
xchg
hlt
add
cmpsb
popf
rcr
mov
mov
into
movsb
add
nop
xor
cli
stos
aas
ja
scas
pushf
jo
adc
or
ss
in
xchg
jmp
dec
cmpxchg
subb
mov
push
ja
fidivl
mov
adc
pop
inc
and
shl
inc
mov
repz
push
mov
jmp
jne
cld
sbb
dec
pop
mov
inc
sbb
repz
dec
test
push
test
cmp
pop
hlt
popa
into
or
imul
sbb
dec
fisttpl
ljmp
jne
leave
mov
add
sahf
clc
lods
test
pusha
xor
jg
insl
and
jae
jno
mov
mov
dec
cmpsl
aaa
push
cli
nop
mov
jb
jo
sti
enter
rolb
scas
lock
addr16
cmp
scas
es
xor
push
shlb
jae
cs
jmp
ficompl
inc
mov
popa
scas
int
fs
or
scas
inc
arpl
xchg
in
push
in
inc
ja
mov
repz
lcall
or
xor
dec
cld
pop
dec
stos
jb
cmpsl
mov
push
lds
ss
je
or
sub
xor
pop
dec
rcl
mov
imull
push
push
in
cltd
cwtl
insb
inc
jl
sub
call
mov
sub
pop
gs
sub
xchg
xchg
push
pop
sbb
mov
cmp
cs
loop
dec
sbb
jns
inc
pop
mov
loopne
out
addr16
cmp
sbb
fwait
adc
dec
insl
lcall
jmp
fdiv
out
out
call
pop
adc
enter
mov
lcall
mov
pop
aam
cmp
or
in
rcrb
nop
dec
out
pushf
dec
adc
lds
cmp
js
pop
mov
mov
jg
adcb
stos
sbb
cmp
das
or
cmpsb
decl
dec
into
cmc
mov
clc
stos
push
int3
sub
dec
inc
aaa
jns
outsb
cmp
jp
mov
pusha
sti
xor
cli
jl
jle
jae
cmp
mov
add
cmp
inc
push
mov
cltd
mov
inc
pop
push
gs
cltd
inc
push
mov
mov
dec
je
jg
dec
sbb
xor
mov
in
ret
enter
ss
out
cmpps
mov
fisubrl
icebp
jno
iret
rcr
das
push
xchg
adc
fildll
sbb
add
push
jl
lahf
mov
or
xchg
mov
rclb
outsl
push
dec
sbbl
lcall
pushf
notl
sub
scas
push
dec
adc
out
clc
jne
xchg
imul
incb
das
xchg
and
mov
aad
pop
pop
or
data16
cmpb
sti
pop
jl
pop
and
aad
cmp
pop
scas
add
lret
push
add
lods
xchg
sbb
mov
ja
aas
add
xchg
pop
and
cmp
bound
js
xchg
aaa
pushf
push
bound
test
js
push
in
xor
or
lods
pop
inc
mov
mov
out
js
repnz
loopne
mov
cmp
aad
in
inc
or
or
es
mov
adc
fisttpl
in
mov
inc
loopne
dec
sub
inc
pusha
ret
outsl
cli
xlat
mov
push
lods
cmp
outsl
pop
mov
pop
and
rcll
mov
dec
mov
mul
pusha
push
stos
nop
nop
test
notb
push
add
call
std
pop
inc
add
xor
js
jp
test
sbb
jmp
std
add
inc
aaa
call
sbb
shll
lds
cmpsl
dec
shl
adc
sub
xlat
mov
pop
sbb
aad
lods
jg
dec
and
mov
cmpsl
in
cld
aas
dec
les
sub
js
inc
test
int
inc
mov
and
push
lock
mov
mov
lahf
sub
ljmp
or
sub
inc
add
sar
mov
scas
cmp
shl
stos
jmp
cli
sbb
xor
imul
cmp
in
lds
jne
inc
mov
hlt
and
inc
cmc
loopne
mov
mov
mov
sbb
lea
std
jge
adc
push
enter
push
or
addb
out
nop
dec
scas
je
and
test
cmp
adc
in
es
cmp
outsb
inc
repnz
jo
negb
or
lods
add
xchg
mov
ret
loope
sarl
out
inc
repz
cmp
shrb
ja
jne
data16
in
adcl
push
aaa
pop
cmp
push
push
adc
movsb
test
jmp
push
sahf
mov
dec
addr16
out
in
notb
xchg
or
data16
mov
inc
mov
sti
fnstsw
push
cmp
cli
arpl
shrb
sub
cmc
pop
and
mov
xchg
cmp
mov
insb
les
lea
mov
mov
rorl
pop
push
mov
sub
mov
cmc
pop
sbb
std
cmpsl
pop
aam
and
mov
cli
push
outsl
repz
into
cmp
mov
jbe
pop
arpl
push
adc
mov
inc
scas
add
adcb
mov
cmpsl
arpl
push
fs
mov
or
mov
dec
sub
shrb
jbe
sub
sti
jg
adcb
xor
ret
pop
push
ljmp
add
pop
adc
cmp
ret
dec
loop
xor
and
leave
sub
std
push
mov
in
jle
pushf
rcl
mov
lret
leave
push
les
aad
xor
mov
lods
or
ret
push
fisttpl
aaa
shl
orb
push
inc
movsl
sub
rorl
bnd
lods
push
test
add
inc
push
jge
lret
mov
leave
out
roll
push
mov
xchg
push
inc
or
cs
adc
jb
lds
add
insb
mov
js
pop
lret
js
mov
mov
ljmp
inc
loop
enter
cmpsb
test
rcll
mov
lock
sub
pop
inc
fcompl
pop
add
cmp
fnstcw
push
in
test
adc
and
stos
vcvtsi2sdl
fdiv
inc
pushf
sbb
rol
cmp
xor
mov
pusha
mov
push
pusha
ret
sbb
push
cmp
shlb
jecxz
xor
mov
test
fiadds
lock
call
push
sti
sbb
ja
pop
sub
js
jle
fnstcw
adc
xchg
call
lcall
outsb
nop
xlat
or
jmp
cli
sbb
in
ljmp
insl
rcll
sub
mov
movsl
sbb
xor
incl
cwtl
in
jne
mov
xchg
xchg
ret
jecxz
out
mov
pop
das
aam
adc
ds
push
xor
inc
inc
xor
and
divl
leave
and
add
cmp
and
popl
inc
xor
jae
push
in
loop
outsl
fmuls
loopne
jp
pop
hlt
cwtl
out
stc
aam
out
jmp
in
call
cwtl
jo
icebp
test
mov
loopne
popl
jmp
enter
or
nop
sbb
xchg
mull
mov
stos
xchg
and
cld
xor
fnstsw
xchg
add
fdivrs
lock
push
xor
sbb
ss
jp
push
inc
dec
outsb
scas
mov
aas
and
cmpsb
mov
sub
arpl
lock
sbb
adc
xchg
cli
jg
ret
lcall
or
cmp
pop
aas
jae
int
std
pop
mov
stc
in
scas
addr16
loop
dec
outsl
mov
int3
mov
mov
adc
rcrb
shrl
push
push
mov
rcrl
ljmp
pop
outsb
pop
dec
sub
ljmp
mov
mov
mov
and
stos
xor
pushf
mov
dec
or
jne
xchg
dec
xchg
lcall
xchg
push
push
and
cmp
lods
jo
rcl
aam
adc
ret
jl
dec
mov
scas
rcrb
push
aam
or
xor
cli
rolb
jg
and
hlt
aam
je
pop
nop
cmp
dec
in
sub
add
not
jg
push
fs
mov
xchg
fistpl
dec
mov
incb
das
add
dec
popf
mov
pop
loopne
pushf
test
add
fidivs
add
negl
jp
mov
out
adc
sbb
imulb
cmp
aam
cld
into
insb
scas
sub
mov
mov
in
mov
adc
or
inc
xor
mov
ss
mov
and
jno
dec
mov
xor
add
scas
lcall
ud0
add
aaa
sub
call
sub
cmp
das
clc
imul
dec
je
xor
movsl
inc
jg
sbb
pushf
pop
roll
test
loop
es
and
push
pop
mov
xor
test
add
adc
inc
jb
xor
nop
test
fucomi
jmp
sbb
ror
push
dec
cmc
cmp
sbb
inc
adc
sub
lret
dec
mov
fadds
cmp
aaa
xor
dec
aas
call
pop
movsl
pop
and
or
adc
sbb
pop
fcomps
cmp
mov
lcall
mov
mov
inc
cmp
fcmovnu
lahf
mov
fidivrs
mov
sahf
jnp
lds
jno
movsbl
lea
jnp
ret
lret
cmpsb
leave
out
div
dec
loop
mov
sub
push
mov
fsub
xchg
div
call
test
sub
or
test
arpl
adc
aas
std
jge,pt
mov
fsubrp
pushf
insl
push
adc
and
sub
hlt
aas
mov
mov
out
pop
int
ds
jg
mov
xor
xchg
fcomip
addr16
xchg
push
inc
leave
aad
inc
jmp
rcrb
fs
bound
pushl
push
test
pushf
add
pop
mov
jmp
cmp
add
in
xchg
hlt
decl
push
push
jg
push
push
lea
out
sbb
cmp
jge
decl
in
cli
adc
inc
lret
movsl
notb
xor
push
sahf
jae
mov
sub
mov
mov
loopne
sub
nop
jle
inc
xor
fwait
gs
scas
jge
push
test
mov
loope
or
mov
mov
xlat
xchg
cmp
in
push
or
cld
inc
jl
xchg
sbb
idivl
mov
pop
pop
subb
sub
mov
jo
test
xchg
mov
mov
das
jno
aad
pop
and
push
jmp
les
lods
and
into
push
cmp
cltd
cmp
lea
ret
pushl
clc
inc
cld
mov
lods
mov
inc
jmp
in
mov
adc
or
mov
push
cwtl
notl
out
sbb
test
xchg
dec
add
cmp
dec
or
adc
das
pop
mov
push
test
dec
aam
call
cltd
mov
jg
lahf
stos
fs
dec
push
not
je
sbbb
ja
sbbl
xor
jmp
enter
test
dec
out
add
jg
or
adc
hlt
dec
pushf
popf
dec
cmp
sbb
popa
push
fwait
and
rcrb
push
dec
pushf
addr16
lcall
decl
cmp
aaa
pushl
inc
xchg
into
es
aaa
push
lds
scas
xchg
mov
out
inc
imul
add
mov
lods
xchg
outsb
rcrl
addr16
xchg
or
shll
push
stos
jno
loope
jno
jmp
jecxz
loope
les
into
push
cmp
daa
nop
lcall
stc
in
xchg
or
std
lea
xor
daa
and
add
xrelease
xor
mov
ljmp
in
push
dec
mov
es
stos
mov
cmp
jb
imul
and
repz
xor
dec
jno
mov
ret
push
adc
or
mov
jbe
stos
adc
in
jno
imul
movsl
jp
ljmp
jecxz
xchg
sub
loope
and
andl
add
aaa
test
idivb
mov
adc
and
cmp
dec
icebp
and
cmc
xorb
and
inc
jecxz
mov
stc
fadd
into
mov
push
push
lahf
insb
popf
fstps
aam
ss
ds
xor
jge
jnp
dec
xor
pop
call
insl
adc
or
xor
lcall
test
imul
push
cmp
or
jp
sbb
jno
hlt
imul
fmull
pop
adc
cld
or
sar
ja
sub
push
lock
decb
repz
lret
adc
inc
cmp
clc
mov
jecxz
sub
rcrb
nop
pop
je
ss
aam
negb
mov
out
lcall
lods
xorl
les
jl
pop
and
lahf
sbb
and
sarb
jg
inc
dec
ds
jns
hlt
addr16
jp
or
jp
push
stos
pusha
imul
test
sbb
clc
inc
xlat
lcall
std
in
cwtl
adc
ljmp
inc
imul
adc
pushf
sub
data16
cmp
mov
pop
inc
call
inc
jle
stos
add
jno
adc
pusha
loopne
lahf
add
cld
aaa
mov
mov
inc
dec
test
push
les
xchg
mov
push
ret
ret
or
cs
push
out
aam
fldt
dec
out
push
push
out
or
and
adc
jg
adc
movsb
mov
int
push
pushf
push
mov
fisttps
shll
vprotq
pop
xlat
adc
inc
and
test
sar
enter
shll
test
icebp
fs
scas
fisttps
shll
xor
sahf
fcmovb
push
xor
adc
pop
cmp
jbe
jns
jg,pn
mov
dec
rorl
test
or
call
pop
cmp
cwtl
cli
jo
and
sar
mov
xchg
fiaddl
mov
and
push
fsubrl
sbb
mov
int3
dec
mov
std
sbb
and
push
pop
es
pop
mov
outsb
jno
xor
push
bound
into
mov
mov
lcall
ud0
hlt
add
jl
mov
lea
leave
insl
scas
push
movsl
lahf
pop
rolb
cmpb
ror
or
inc
lcall
cli
cmp
add
mov
push
sbb
sub
js
inc
mov
clc
inc
dec
push
push
jns
popa
call
push
pop
add
incb
and
in
adc
stos
out
or
aad
les
cmp
das
lds
push
test
in
xchg
or
aaa
jg
iret
in
adc
mov
mov
loop
loopne
sbb
jmp
cmpl
pop
jmp
xchg
jle
cld
jg
addr16
fbld
mov
and
je
mov
sahf
jne
arpl
incb
xchg
add
fs
test
int3
mov
add
add
jnp
or
add
push
out
dec
add
mov
bound
pop
cmp
push
xor
js
dec
ds
sbb
sbb
gs
pop
add
pop
pushl
and
and
ds
stos
sbb
outsb
es
lock
lods
sbb
mov
shrb
cmpsl
lea
inc
vpavgw
shlb
mov
or
and
enter
mov
mov
adc
sub
cs
pop
mov
enter
out
fisttps
sbb
pop
subl
les
scas
xor
sar
in
lea
dec
mov
mov
pop
roll
cmp
or
xor
or
mov
mov
data16
out
pop
push
lret
fbstp
pop
clc
pop
inc
mov
adc
mov
adcb
fs
sbb
jne
cmp
mov
dec
lods
xchg
cmp
je
pop
stos
out
dec
call
jb
fsubrl
sub
sub
hlt
jecxz
jge
sar
ljmp
loopne
dec
mov
cmpsb
pop
xchg
in
and
and
and
and
xor
push
jmp
aam
out
add
sub
scas
or
xchg
fnstenv
sbb
pop
in
jne
daa
xchg
push
lret
stc
les
sbb
sbb
cmpsb
mov
rcl
cmp
or
arpl
mov
cli
push
lret
sub
movsl
lock
jecxz
clc
testb
mov
gs
cs
jne
dec
push
movsb
sbb
decl
lret
sbb
data16
das
or
fadd
out
and
mov
je
xchg
sub
outsl
outsb
mov
mov
mov
loope
subl
sbb
rcrb
cli
nop
gs
inc
dec
outsb
mov
xchg
scas
rcll
incl
mov
lea
ds
dec
outsl
jo
inc
and
in
lea
bound
dec
mov
cmp
out
les
or
add
xchg
test
test
inc
cmp
les
or
daa
pop
dec
out
jmp
js
cs
adc
adc
imul
add
dec
bound
stos
mov
div
pop
pop
dec
test
mov
adc
loopne
jg
pop
jle
subl
movsb
pop
dec
ljmp
test
loope
lret
lock
mov
fidivrs
movsb
mov
in
cld
xchg
icebp
sbb
pop
pop
or
mov
xchg
sbb
test
lahf
ss
push
cmc
ret
dec
jo
dec
lea
dec
into
sub
xor
mov
loop
sbb
jge
add
jg
xchg
mov
pop
jmp
out
call
inc
jnp
add
subb
inc
fucomp
es
pop
mov
mov
sbb
sbb
aas
jp
sbbb
push
icebp
or
push
stos
arpl
in
loop
xorl
jno
fldenv
jl
dec
push
sbb
xchg
mov
xor
pop
test
in
nop
andl
les
jp
sub
xchg
mov
xchg
push
call
mov
mov
test
sbb
pop
adc
jp
xchg
ljmp
pop
out
add
icebp
aaa
insb
in
xor
inc
pop
or
stos
pop
jg
jno
jg
jp
test
mov
add
subl
movsb
bnd
sbb
cmp
xchg
push
add
js
jl
pop
jge
ds
pop
sbb
int3
shr
aam
cmp
lods
dec
pop
inc
sub
fwait
bound
mov
pop
imul
lea
negl
mov
repnz
add
jae
mov
mov
pop
adc
test
fidivrs
jg
mov
jno
das
mov
adc
ljmp
addr16
add
xchg
sbb
adc
mov
xchg
in
xchg
out
popa
pop
push
mov
movsl
push
push
inc
mov
lds
dec
sbb
cmpsl
pop
jae
es
dec
adc
das
adc
cmpsb
fs
jp,pn
adc
pop
push
add
xor
mov
cmp
outsl
lods
sar
jg
or
aaa
mov
jb
adc
jmp
pop
out
cs
mov
out
xlat
jae
pop
and
jecxz
sub
mov
mov
inc
ret
mov
iret
mov
mov
or
push
faddl
xchg
push
loop
pop
or
ret
mov
and
push
pop
or
out
sar
lea
sar
test
jle
rcrb
jg
jl
loope
call
fs
xor
shll
divl
push
movsl
outsl
test
lock
cmpsb
loop
mov
mov
pop
add
push
sub
pop
ljmp
push
dec
cmp
int
sub
call
and
cli
filds
lock
icebp
lock
clc
mov
xchg
icebp
scas
jp
jl
fmuls
xchg
mov
dec
jl
jg
insb
in
data16
fwait
pop
push
inc
push
push
inc
imul
out
movsb
loope
and
sbb
add
mov
std
lds
sahf
inc
dec
lods
movsl
inc
and
add
jae
inc
mov
mov
sbb
mov
add
aad
push
pop
adcl
jbe
xchg
mov
insb
outsl
insb
pop
add
jnp
inc
sub
cmp
rclb
pop
or
hlt
jge
js
roll
pop
push
jnp
jno
lods
add
daa
sbb
pop
ljmp
add
adc
cli
mov
jmp
mov
pusha
ljmp
addr16
loopne
inc
test
cltd
popa
jp
loop
adc
cwtl
cs
mov
int3
jnp
push
sub
pop
lret
andb
idiv
push
insb
rcll
pop
or
lods
ret
jle
jno
sbb
add
adc
inc
push
dec
ficoms
sbb
in
stc
and
sarl
icebp
mov
hlt
cwtl
pop
bound
xor
divl
jno
gs
imul
mov
push
ret
xchg
js
pop
mov
aaa
or
jp
icebp
mov
inc
imul
cmp
inc
mov
lret
dec
lret
sarl
inc
adc
fisttpl
test
daa
aam
out
adc
and
movsl
stc
sbbl
ret
adc
lods
sahf
rorl
mov
mov
rcrb
cld
movsl
mov
dec
sbb
add
lcall
xchg
xlat
mov
xchg
aaa
push
jbe
cli
pop
cltd
int
push
sub
and
call
out
jecxz
out
mov
out
jo
adc
cmp
call
inc
cld
vdivps
xchg
imul
xchg
mov
cmpsl
cmp
test
pop
icebp
mov
dec
sete
xchg
add
bound
push
out
insb
leave
mov
vxorps
stos
push
cmpsb
dec
ficomps
xor
adc
jmp
jg
icebp
out
movsb
and
je
pusha
out
aaa
dec
mov
andl
mov
xchg
test
mov
push
shll
les
xor
les
adc
sahf
and
sbb
adc
fimuls
in
arpl
rclb
mov
mov
shrb
roll
jne
loope
pop
lock
mov
adc
fisttpll
cwtl
cmpsl
xchg
sbb
mov
leave
loopne
jmp
jbe
sbb
outsb
mov
sbb
inc
orl
ljmp
sbb
lcall
jg
enter
mov
sbb
mov
push
cmc
fiadds
dec
call
cmp
fdivr
insl
ret
fadds
into
jecxz
pop
jp
mov
cmp
and
xchg
dec
mov
mov
pop
ret
fnstsw
cli
ficoml
adc
pop
inc
pop
mov
mov
fsubl
push
or
test
cmp
cmp
pop
mov
stos
loopne
inc
add
daa
rolb
push
outsb
xor
or
jl
sbb
nop
ljmp
cmpsb
iret
repnz
lock
xor
xorb
adc
fs
inc
cltd
jbe
mov
sbb
inc
cmp
repnz
cmc
push
ljmp
insb
push
loopne
insb
out
or
scas
jp
inc
fimuls
cmp
xor
sbb
out
push
mov
pop
fs
rcr
lahf
jg
mov
mov
pop
mov
fists
xchg
lds
jp
popf
out
adc
loope
ss
ret
inc
cmp
fsubrs
cmp
popf
pop
or
out
enter
adc
push
cli
dec
mov
dec
ret
loopne
pop
jl
rcll
mov
imul
adcb
inc
jb
pop
cli
sbb
scas
mov
inc
inc
enter
fildl
stos
je
jbe
mov
or
iret
ljmp
fadd
adc
movsb
leave
andb
cwtl
rol
jmp
ret
cmp
leave
ficoml
jecxz
movsb
pop
test
les
mov
push
bound
outsl
test
mov
stos
data16
shrb
cmpsl
mov
mov
dec
divb
inc
cltd
add
jb
xchg
mov
lahf
ja
pushl
aad
sub
fcoml
scas
std
cmc
scas
andl
rcll
push
sub
sbb
xchg
fcompl
addb
rcrl
add
or
out
in
dec
loopne
or
pop
rclb
mov
cmp
jnp
js
mov
loop
push
pop
lcall
dec
cmpsl
dec
icebp
and
ret
adc
xchg
shl
mov
inc
push
sub
mov
shrl
fcmovnb
pushl
or
and
adc
push
imull
push
xor
add
test
fwait
or
inc
xchg
enter
sub
sbb
loop
jg
int
lcall
jmp
lock
test
test
popf
push
mov
sub
inc
xor
repz
lcall
arpl
push
jle
in
mov
orb
mov
xchg
pop
mov
aaa
lods
jmp
mov
inc
push
mov
adc
outsb
fwait
push
imul
and
loopne
xchg
iret
js
dec
xor
out
sub
push
loop
cld
sahf
shlb
cli
rolb
es
mov
mov
int3
rclb
jl
pop
js
push
inc
xchg
ljmp
mov
pushf
mov
mov
test
icebp
pop
inc
lods
jbe
mov
push
test
adc
clc
incl
cmpsl
scas
subl
adc
push
lock
push
xor
add
and
and
je
jl
loope
cmp
xor
push
ss
std
test
push
xor
cmp
popl
lea
mov
ss
jp
mov
cld
sub
in
adc
into
mov
pop
sbb
js
jae
pusha
gs
add
sub
insb
mov
jne
xchg
shlb
popf
push
lods
in
aam
adc
cmp
xor
mov
push
inc
add
or
call
dec
aad
nop
pushf
and
cmp
push
dec
ret
sbb
in
push
ja
insb
pop
jmp
rolb
pusha
or
sbb
rcll
push
ret
gs
mov
test
jno
push
or
mov
icebp
test
ljmp
daa
jge
push
loopne
addr16
fdivs
add
sti
or
fidivrl
out
jmp
mov
mov
xchg
sbb
mov
push
lock
mov
in
lret
or
pop
ss
jmp
stos
lock
jae
sbb
or
and
stos
out
in
mov
aam
clc
add
sub
jle
fildl
ss
ljmp
add
xor
pop
xorb
cld
aas
mov
cmp
jg
jge
clc
js
mov
sbb
std
rorb
icebp
sub
clc
mov
sbb
xchg
push
xor
mov
pop
push
call
ljmp
shll
test
sbb
cltd
jl
loopne
xor
mov
in
xchg
or
sbb
dec
sub
xlat
add
jns
test
test
popf
sbb
rclb
add
cmp
into
dec
pop
movsb
inc
lock
cmp
aaa
lcall
lock
enter
lea
mov
ret
adc
lods
lock
lret
xchg
sti
push
mov
pusha
xchg
test
mov
mov
xchg
push
addl
mov
dec
mov
sbb
gs
dec
loope
xor
adc
leave
push
outsl
jmp
lods
dec
jmp
jae
cmc
sarl
in
mov
inc
fs
or
sub
push
push
mov
dec
enter
lahf
mov
fxch
and
cmp
xor
jb
incb
rcrb
xchg
xor
sub
xor
sarb
int3
xchg
xchg
mov
adc
lcall
loop
popa
mov
je
sbb
mov
pop
sub
mov
adc
incl
jl
push
inc
adc
add
repz
cli
test
lds
pop
cmp
clc
pop
pop
jns
cs
sub
icebp
mov
jecxz
jmp
xchg
lock
nop
pop
cltd
jne
call
mov
add
add
xchg
adc
test
lahf
idiv
or
sub
push
mov
clc
ss
xor
in
pop
pop
xor
je
sub
cld
aad
fisttps
sub
es
push
sarl
pop
mov
fsubr
mov
stc
sahf
imul
movsl
loop
sahf
arpl
dec
cmpsl
gs
pop
cli
jmp
sbb
add
jb
js
push
les
add
dec
fisubrs
mov
frstor
test
ss
xchg
mov
xchg
fdivl
sub
addr16
hlt
test
cli
fwait
jno
imul
mov
call
cmp
jae
icebp
mov
scas
stos
push
ret
mov
mov
mov
jno
stc
inc
lods
cmc
clc
cs
adc
shlb
or
pop
xor
les
xchg
xor
repz
sbb
push
nop
cmp
sbb
jecxz
fdivs
xchg
cmc
jg
aam
lret
and
enter
dec
je
jmp
add
and
push
push
sahf
test
sub
rorl
jmp
jo
das
loopne
jg
jbe
mov
mov
iret
inc
fcompl
call
icebp
imul
pop
lret
xor
and
icebp
js
nop
add
js
dec
stos
dec
test
dec
popa
cmp
imul
lods
out
test
xor
cmp
pushf
cld
out
fildl
push
fiaddl
sub
pop
sub
fdivp
or
inc
stos
and
rorb
xchg
pushf
ljmp
rolb
faddp
sbb
sub
xchg
test
clc
ds
loopne
or
ror
add
jns
add
call
pusha
dec
aam
push
in
jp
loope
outsb
aaa
adc
inc
clc
inc
int3
popa
lret
or
jmp
mov
stos
sub
mov
rorl
push
out
js
add
fisubrs
jg
fld
loop
jbe
jae
push
js
std
test
add
mov
stos
add
pop
cli
out
inc
lods
ret
sarb
mov
or
add
or
test
loopne
and
jg
icebp
pop
pop
push
in
xchg
mov
mov
sbb
mov
mov
addl
imul
pop
pop
lcall
in
insb
mov
gs
pop
lods
pop
mov
cwtl
and
mov
xchg
mov
dec
fdivr
push
loopne
pop
aaa
xchg
les
sub
rcll
das
xchg
push
xchg
dec
dec
jnp
dec
fmuls
clc
mulb
icebp
and
and
and
loopne
popa
or
out
xchg
mov
inc
movsb
sub
push
arpl
push
cmc
icebp
decl
jecxz
out
int3
fmul
jb
sub
dec
stos
adc
fisubs
xor
mov
test
or
sub
rcl
cmp
dec
mov
jmp
cmp
bound
pop
dec
in
out
movsl
outsl
filds
iret
xchg
scas
mov
cmp
int
add
lcall
out
lock
call
aaa
mov
mov
sbb
out
cmp
cwtl
jmp
mov
clc
out
inc
fmull
test
sbb
mov
aad
fistps
sub
mov
outsb
cmpsl
test
mov
pop
rcrb
mov
jbe
lea
or
outsb
jns
sub
adc
xchg
jle
push
inc
jl
cmp
push
insb
jo
lods
mov
push
inc
mov
leave
daa
mov
shll
pop
mov
cld
shll
cmpsb
sub
addr16
sub
adc
test
hlt
pop
sub
pop
mov
or
loope
fs
jno
add
mov
in
push
loopne
cmp
push
mov
lret
mov
mov
jbe
mov
and
mov
or
js,pn
mov
movsb
hlt
mov
lea
jns
jne
cli
lcall
or
loop
andl
dec
jmp
and
xor
cmp
mov
mov
dec
sub
pop
idivl
iret
aaa
and
cmp
inc
sub
fdiv
adc
inc
sbb
cltd
xor
mov
pop
in
sbb
jb
add
cli
dec
popa
cmp
das
in
mov
sbb
rcll
fs
cs
imul
ret
loope
push
fsts
popf
notl
cmp
or
pushf
push
jno
add
push
mov
dec
out
adc
cmp
mov
xor
xchg
cli
loope
sbb
jnp
orb
pusha
filds
dec
mov
mov
dec
mov
cmp
cmpsl
pop
fildll
dec
pop
into
cmpsb
cmp
xchg
in
xchg
mov
jne
popa
xor
call
push
fiaddl
dec
mov
iret
xor
and
in
and
nop
xchg
mov
test
shlb
cmc
jg
jne
cmpsb
mov
mov
incb
sub
sbb
sub
cmpsb
mov
sub
rcrl
popa
dec
adc
pop
popf
dec
and
push
push
mov
mov
jns
js
mov
add
stos
jns
mov
add
pop
xor
cmp
dec
outsl
imul
bound
pop
ljmp
inc
xchg
dec
mov
imul
cmp
cmp
sub
imul
add
fnstcw
in
push
pop
inc
std
inc
sub
xchg
sub
mov
in
push
jg
or
shr
pop
mov
mov
sub
mov
adcb
pop
add
jno
xor
xchg
cmp
hlt
loope
gs
jl
scas
lea
xor
div
mov
leave
cmp
push
loop
fiaddl
scas
cld
ljmp
push
push
mov
inc
ja
idivl
and
add
mov
push
hlt
mov
ret
scas
pop
inc
scas
enter
pusha
stos
adc
and
jno
cmp
int3
sete
mov
mov
scas
dec
imul
scas
or
mov
xchg
into
test
in
orl
push
adc
mov
mov
incl
fwait
mov
sbb
jmp
andb
cmpb
mov
lcall
add
int
test
and
andl
or
inc
int
loop
sub
gs
hlt
pushl
cmp
mov
test
pop
or
test
nop
into
adc
jg
push
inc
cmp
dec
pop
bswap
push
dec
js
out
jmp
mov
mov
xchg
or
xor
push
out
or
or
cmp
mov
or
sbb
xor
xor
pusha
push
pop
stos
xchg
faddl
mov
sbbb
js
aas
jge
cmp
add
loop
es
out
scas
mov
mov
popf
dec
pop
pop
and
subl
cmp
sub
mov
mov
push
adc
cmp
xor
dec
or
rorl
loope
aad
out
push
or
pushf
push
mov
stc
mov
cld
aas
lret
sbb
sarl
jl
sbb
and
aaa
adc
mov
ret
fldcw
or
cmp
mov
int3
jle
inc
lcall
xor
ljmp
fdivrl
fisubs
mov
fwait
incb
das
fdivl
mov
xlat
pop
je
add
mov
in
enter
inc
pop
and
aad
cli
bsr
out
shl
pop
mov
add
adc
movsb
push
test
lea
jb
les
cmp
jg
pop
mov
xchg
add
adc
push
shrb
lret
jbe
jle
negb
movsb
leave
test
add
es
mov
cld
mov
push
add
test
mull
sbb
jl
sbb
daa
ficomps
fistpll
faddl
lods
test
mov
push
adc
inc
loopne
mov
lfs
cmp
add
cmp
mov
es
push
push
idivl
mov
mov
xor
stos
cs
sub
sbb
aaa
das
call
pop
das
pusha
jae
xorl
push
daa
mov
loope
idiv
lods
mov
jnp
stos
mov
call
sub
das
test
daa
push
ljmp
inc
jg
ret
adc
and
test
sahf
ffreep
mov
jp
scas
dec
test
fcoms
dec
arpl
bound
cmpsl
bound
adc
sahf
arpl
insb
push
inc
or
leave
xchg
sub
adcl
cltd
sub
nop
jne
or
ret
shl
sub
pushf
xor
es
rolb
jg
outsb
fwait
add
ror
jg
outsb
lods
fadds
js
mov
mov
sbb
sub
call
mov
fldl
ret
arpl
leave
pop
sbb
mov
iret
lret
xchg
in
imul
xor
sub
push
pop
adc
loope
mov
pop
mov
mov
push
into
xchg
fwait
fs
cs
inc
add
cmpsb
pop
icebp
sbb
inc
push
push
mov
testb
dec
jmp
ret
hlt
cmp
push
cmp
cmp
jmp
ret
idiv
daa
psllq
cltd
rclb
and
pushf
loope
fdivrl
sub
and
popa
sbb
xchg
mov
sarl
lds
call
clc
jb
push
jmp
jne
sub
inc
cmp
or
pop
lods
cmpsb
aad
xchg
movsl
int
gs
mov
rorb
mov
faddl
or
ja
ret
jmp
push
mov
pop
in
js
push
mov
push
sbb
rcl
jge
xorb
rolb
imul
roll
inc
mov
adc
sbb
lea
sub
pop
aad
push
subl
adc
call
adc
xchg
sahf
sbb
fisubrl
pop
jp
enter
inc
sarl
inc
xor
sbb
jne
jp
jecxz
movsb
lret
les
sahf
outsl
or
add
mov
fistl
lret
xchg
jle
xor
lock
sbb
pop
lds
jg
or
fisubs
notl
js
push
sub
fxch
push
cld
movl
in
movsl
jmp
sarb
pop
sbb
data16
add
fists
mov
or
shll
jecxz
lret
lods
jl
push
and
fwait
hlt
or
push
hlt
incl
sbb
jns
leave
lock
mov
cld
test
cmp
mov
leave
sbb
jbe
push
les
xchg
pavgb
mov
inc
mov
mov
adc
cmp
daa
jle
jo
ficompl
mov
sub
scas
pop
in
inc
push
mov
stos
out
cmp
enter
jecxz
jmp
inc
sbb
lods
out
repz
xor
inc
pop
fildll
and
movsb
popa
data16
fimull
sbb
mov
and
ds
push
clc
cmp
bound
cs
fwait
je
jbe
rclb
mov
popa
push
mov
push
data16
or
call
push
xor
push
call
inc
mov
aaa
cmp
or
push
inc
or
xor
int3
ljmp
sbb
js
ljmp
rclb
push
cmp
inc
int3
mov
cmpsl
in
adc
fiadds
bnd
pop
outsl
cli
and
insl
insl
dec
pop
lock
inc
mov
test
in
jl
mov
pop
pop
jmp
cltd
mov
jo
pop
xor
cld
ja
or
gs
incl
call
and
outsl
xor
cwtl
movsl
xchg
stc
ret
adc
imul
lds
hlt
cs
fwait
aam
gs
aam
dec
push
inc
xchg
mov
pop
loop
sahf
shr
cs
mov
push
sbb
xor
pusha
ret
mov
mov
pop
std
ss
mov
push
mov
orl
lds
loope
fdivrs
cmpb
sahf
inc
mov
push
lods
mov
push
scas
loopne
mov
stos
push
test
push
lret
call
mov
jo
repz
mov
pop
add
xchg
out
js
rol
ds
dec
sub
lds
xchg
rorl
inc
cmp
sub
adc
mov
sub
inc
lahf
xor
push
faddl
test
lret
push
jno
inc
jge
iret
imul
mov
roll
call
cwtl
mov
cltd
lods
mov
orl
push
sub
adc
xor
inc
mov
sbb
adc
das
cltd
aaa
mov
jmp
push
pop
mov
scas
and
or
call
fdivrp
xchg
xor
adc
inc
dec
lock
xorl
mov
cli
shl
jmp
mov
out
mov
or
ret
sub
sub
cmp
dec
mov
into
inc
or
pop
add
ss
fadds
cs
mov
push
fs
ds
pusha
xor
or
or
mov
sahf
shll
xchg
lods
movsl
lock
scas
mov
and
dec
add
clflush
icebp
andl
xlat
lock
dec
adc
data16
cmpsb
pop
fmulp
ret
nop
mov
dec
cld
cmp
mov
pop
or
cmp
cld
js
cmpsl
and
ja
or
cmp
movsb
pop
and
mov
inc
mov
mov
fisttpl
ss
cmp
xor
sbb
mov
clc
lcall
out
je
repz
pop
ffree
jmp
pop
icebp
jmp
pop
cmp
clc
lret
clc
push
mov
cmovno
jp
pop
lea
rol
cmpsl
or
sub
ffree
das
mov
add
cmp
xchg
mov
add
fisttpll
pop
imul
dec
pushf
enter
test
shlb
les
fldt
mov
filds
ret
je
or
dec
incl
sbb
mov
inc
in
push
loop
pop
loope
fwait
push
stos
jmp
inc
test
mov
les
shlb
pop
aas
lock
jle
push
dec
sub
mov
lret
cmp
imul
cs
mov
lret
push
jge
jecxz
mov
xchg
xchg
cld
outsb
and
pop
inc
mov
jge
cmp
xchg
xor
jnp
add
or
ret
mov
movsb
aam
xchg
test
cmp
ficomps
cli
rcll
out
xchg
aad
cmpb
cmp
loopne
decb
jns
cmpsl
push
xchg
sahf
cmpsl
inc
pop
addb
sbb
jno
pop
mov
call
sahf
lcall
test
lods
mov
mov
mull
mov
in
lods
cmpsb
call
and
and
dec
jns
push
pop
add
add
in
pop
mov
pop
insl
lods
aaa
sbbb
outsl
js
cmp
sbb
repnz
mov
sbb
stos
inc
fldenv
pop
add
sarb
jbe
and
pop
pop
sub
repz
dec
jle
mov
pop
imul
xchg
cmp
mov
xchg
jae
inc
or
inc
push
pop
stos
xchg
xchg
lock
xor
ja
sbb
out
mov
stos
inc
sub
and
xchg
decb
xor
jl
sbb
pop
in
mov
cmc
pusha
add
mov
lret
sbb
cli
sahf
out
cmpsl
jmp
or
ss
les
dec
pop
test
xchg
xchg
push
xor
sbb
sarb
hlt
les
add
or
popf
sbb
and
sub
mov
lods
es
pop
popf
gs
add
cltd
pop
add
aas
lea
or
jae
mov
fcmove
loope
mov
in
aas
pop
and
push
cmp
cmp
pushf
ret
add
subb
add
jp
mov
das
mov
mov
fstpl
mov
rcrb
popf
mov
lock
test
or
mov
hlt
and
incl
sahf
cmp
sahf
and
ljmp
into
pushl
jge
mov
idivb
js
adc
mov
fldl
movsl
inc
mov
js
int
xchg
cs
push
loope
mov
cmovb
mov
fucomi
dec
push
sarb
adc
pusha
stos
test
dec
push
push
scas
mov
adc
fidivrl
mov
js
jg
add
rorb
lock
xchg
sub
dec
mov
push
mov
jg
fstpl
add
xor
daa
push
gs
imul
pushf
sarb
jbe
push
mov
mov
mov
fcmovu
dec
xchg
pop
xor
out
je
aas
nop
loope
adc
mov
test
push
mov
loop
repnz
cld
clc
cli
inc
lods
lock
outsb
mov
test
mov
and
cmp
fwait
pop
pop
inc
ja
and
sub
jne
push
ret
mov
jp
scas
sbb
jo
and
into
xchg
scas
push
or
out
and
fdivrp
call
dec
imul
femms
fdivrl
xor
pop
iret
ljmp
mov
insb
mov
stos
daa
lods
js
mov
push
mov
fldt
mov
and
filds
fiaddl
cmp
cmpb
or
es
mov
popa
pop
mov
inc
sub
aam
pop
lea
push
adc
aam
or
cld
pop
mov
cmp
outsl
add
mov
cmpsb
call
jle
aad
movb
pop
jne
push
or
adc
mov
and
xchg
jns
xor
dec
mov
cmp
inc
and
sbb
cltd
andb
into
push
enter
sbb
imul
icebp
pop
xchg
sub
ds
and
inc
adc
dec
lds
nop
dec
aas
sub
pop
decl
lods
or
dec
dec
push
cs
jo
out
mov
add
push
leave
js
xchg
cmp
push
xchg
xor
cmp
scas
inc
mov
push
sub
and
lds
cmp
jle
inc
pushf
lock
jle
sbb
mov
sbb
nop
sub
push
jp
dec
or
pop
xor
sbb
adc
popf
mov
fdivrs
push
loop
pusha
xchg
jne
mov
push
leave
or
cmp
sahf
sub
mov
testl
mov
add
fiaddl
rclb
es
add
sti
lock
andb
lods
les
sub
daa
jno
jl
fidivrs
lods
test
cld
scas
aaa
out
sub
fs
lea
out
mov
xor
jne
int
mov
stos
out
loop
cmp
xor
sub
les
or
push
cld
or
loopne
cmc
jp
repnz
mov
loop
or
pushl
jmp
lcall
jae
bound
scas
mov
out
pop
pop
lret
adc
mov
push
scas
adc
cmp
mov
mov
adc
mov
or
jo
aas
xor
add
push
xor
add
mov
sub
adc
out
sub
xchg
push
cmp
push
pop
bound
jnp
ja,pn
xchg
mov
mov
sub
mov
in
jmp
ljmp
lret
arpl
cmp
pop
outsb
mov
cmp
das
and
add
lock
dec
push
push
mov
dec
xchg
fcomps
call
inc
hlt
xchg
ja
lcall
xchg
or
adc
pushf
divl
lcall
push
add
xor
aam
lret
in
ret
xchg
outsl
jg
pop
add
int
xchg
imul
add
sub
sar
iret
test
add
push
pop
mov
mov
jg
or
cmp
inc
std
jnp
loope
shrl
jl
in
dec
adc
add
add
in
sti
mov
les
aad
mov
cmpb
testl
push
outsl
pop
cmpl
shll
jne
sub
aaa
inc
subl
popf
jb
test
push
mov
xor
incl
pop
ds
loop
sub
leave
loope
jge
inc
sbb
push
jecxz
add
jge
pop
mov
pop
pushf
sbb
mov
insl
xchg
pop
das
lahf
mov
es
dec
daa
add
lods
add
pusha
push
pusha
or
jnp
xchg
mov
cmp
test
pop
mov
or
jmp
sub
je
sbb
out
scas
mov
fdivp
or
add
cwtl
jne
leave
pop
mov
ds
loope
mov
ja
movsl
jb
lods
push
lahf
add
cwtl
xchg
push
dec
sahf
jp
xchg
cmp
and
inc
jmp
add
in
inc
ds
fdivrs
or
add
cmpsb
jmp
popf
sub
scas
sub
fwait
cmp
mov
xor
cli
pushl
xadd
or
lret
out
lahf
lret
pop
or
mov
daa
repnz
fstpt
sub
push
std
push
xchg
mov
hlt
pop
adc
out
add
pusha
in
add
sub
lock
stos
xor
mov
incl
fadds
das
push
mov
dec
sbb
jne
xor
sbb
bound
xorl
push
xchg
incl
push
xchg
outsl
or
jp
gs
cli
xor
hlt
add
and
ret
mov
jb
sub
insl
add
mov
push
in
loop
pushf
pop
inc
or
xor
sbb
jl
or
fsubrp
xchg
xchg
jnp
iret
mov
repz
mov
ja
ror
and
into
packuswb
dec
mov
push
cwtl
add
js
jg
jg
sub
lret
mov
test
rcrb
popa
sbb
mov
sbb
cmp
push
test
addb
jno
in
jmp
jmp
fidivl
jns
xor
inc
fsubrs
test
call
mov
cmp
jl
out
or
sbb
sub
xchg
pop
jbe
fcoms
dec
jns
inc
fstpt
and
push
incl
mov
fcompl
stos
lods
pop
sub
dec
xchg
sarb
loopne
mov
lea
dec
cmpl
outsl
mov
cs
fbstp
ror
rolb
je
mov
out
jge
popa
push
mov
in
pop
and
adc
repnz
es
adc
or
sbb
jns
out
add
rclb
mov
xchg
cmp
leave
das
mov
je
jecxz
sbb
psubb
in
icebp
pop
ds
mov
xchg
jl
call
rcr
xchg
mov
mov
push
mov
pop
nop
movsb
out
hlt
dec
js
stos
sbb
mov
mov
jns
xchg
cmp
xor
imul
cld
inc
cmp
shlb
js
sahf
shrl
xor
test
je
sbb
mov
sbb
sbb
mov
sub
and
test
add
cwtl
mov
fwait
ds
or
movsl
push
cmp
addr16
jnp
mov
dec
insb
lock
int
aaa
sub
lock
cmpsl
cwtl
sbb
hlt
fisttpll
sub
lret
inc
dec
mov
pop
sbb
mov
mov
jo
je
and
xchg
xchg
fldt
push
add
inc
out
inc
or
imul
jne
jbe
adc
inc
loopne
xor
stos
mov
cmp
and
inc
and
and
aam
sbb
flds
mov
jmp
packsswb
jmp
movsb
icebp
ret
add
push
add
mov
mov
push
insl
mov
mov
and
jmp
jb
xchg
jbe
imul
push
into
mov
adc
ficompl
in
sub
mov
push
sub
dec
lods
xor
jl
pop
pop
imul
add
outsb
xchg
push
faddp
loope
add
popa
lret
push
sub
add
outsl
push
cmc
mov
fdivl
test
jno
out
in
adc
mov
out
mov
mov
adc
cmpsb
addr16
fdivr
mov
dec
in
orl
sub
cmpsb
bound
cmp
outsb
test
ror
ljmp
imul
bound
xchg
call
pop
dec
mov
xchg
push
lret
jb
ret
aas
push
aas
push
repnz
ss
and
cwtl
rcrb
mov
jle
lea
cmp
call
or
stos
push
or
xchg
loope
ficoms
mov
aad
iret
pusha
lods
add
inc
xchg
jo
pop
xor
xchg
ja
push
call
pop
add
sbb
lods
addb
pop
mov
jg
xchg
push
push
push
sahf
aaa
mov
mov
std
pop
jbe
pop
cmp
cmpsl
fcompl
cmp
jmp
adc
fnstenv
pop
xchg
mov
sbb
xchg
rorl
cmp
pop
data16
jmp
js
mov
mov
push
sahf
les
orb
jg
sbb
fdivs
inc
jl
cmc
inc
pop
movsb
icebp
pop
sub
lret
pop
xchg
xchg
bound
icebp
add
add
inc
psubw
pop
int
mov
cmp
sbb
adc
out
push
loopne
cmp
pushf
push
xchg
adc
jg
mov
outsb
mov
and
scas
lods
hlt
push
xchg
gs
sbb
mov
scas
dec
stos
pushf
jbe
mov
add
xchg
pop
mov
xchg
xchg
outsl
mov
or
push
insb
lods
ret
cmpb
push
psadbw
rcr
nop
cli
in
pop
add
ja
test
xchg
xchg
test
shlb
notl
pop
out
xchg
scas
dec
cmp
jmp
cs
mov
sti
jo
pusha
add
repz
cmc
outsl
call
cmp
ucomiss
pop
xchg
adc
add
int
add
mov
push
push
sbb
aas
cmp
dec
push
insb
xor
ljmp
das
les
fcmovnb
mov
xor
pop
icebp
and
push
cmpsb
fldt
aas
xor
push
jl
adc
int
or
or
jecxz
daa
sbb
mov
lods
hlt
pop
nop
stc
mov
fisttpl
cmp
mov
stos
icebp
or
int
and
push
push
mov
cmpsb
loopne
pop
jae
jp
fs
or
fstpt
mov
cmpsb
bound
ret
push
sbb
rcll
leave
insb
imul
cmc
std
pushl
decl
mov
test
pusha
mov
mov
aam
inc
es
andb
mov
lods
imul
jp
icebp
mov
pop
loop
mov
jne
add
jge
insl
sub
and
and
in
inc
clc
bound
loopne
dec
add
mov
pop
ror
mov
jg
cs
mov
sub
add
cmp
add
ja
scas
vmread
lahf
into
xor
xchg
cmpl
push
in
push
out
stos
ja
loop
pop
nop
ss
shrb
pop
add
sar
orl
jmp
add
in
std
call
add
outsl
pop
sub
fsubl
push
and
push
icebp
lea
sub
inc
pop
lret
inc
faddl
out
cmp
sbb
fidivs
hlt
out
jl
rclb
sarb
inc
or
and
addb
into
lret
pop
or
in
shlb
xor
mov
outsl
decb
nop
or
cmp
jmp
or
shrb
add
scas
jecxz
decb
es
nop
push
fmull
ja
outsb
and
inc
notb
mov
test
or
xchg
in
xor
add
xor
dec
pusha
mov
ret
sbb
loop
loopne
cmpsl
jp
popa
push
cwtl
sahf
adc
pop
les
inc
lds
ljmp
in
daa
mov
aas
mov
mov
aad
imul
loope
jl
push
in
aad
icebp
sub
cmpsb
mov
sub
in
iret
pop
adc
inc
xchg
adc
mov
or
ficompl
pop
adc
inc
rclb
jbe
daa
sbb
imul
leave
inc
std
pop
mov
outsl
mov
adcb
inc
and
out
mov
sbb
dec
ffree
cld
mov
adc
loop
jmp
mov
mov
jne
test
fbld
inc
push
push
sahf
sub
push
mov
push
inc
pushl
fstpt
icebp
adc
push
pusha
loope
in
push
mov
jo
lret
test
adc
adc
mov
into
xchg
mov
pop
mov
addr16
mov
mov
repnz
fdivr
lods
dec
pop
jmp
rol
data16
and
pushf
or
inc
inc
mov
inc
mov
std
scas
push
xchg
scas
test
sbb
push
and
xor
sbb
cmp
xor
movsl
lock
inc
cmp
mov
lods
mov
popaw
sub
and
add
data16
jne
push
call
jo
or
jo
dec
cmp
add
pop
pop
ljmp
nop
leave
cwtl
cmp
test
or
xor
or
inc
bound
jo
in
je
clc
mov
pop
sbb
push
bound
out
addr16
jne
mov
or
cmp
or
jl
cmpsl
daa
aad
repnz
stos
addl
cmc
fisubrl
add
mov
jb
lock
repnz
ljmp
in
adc
jg
push
mov
dec
call
xchg
and
pop
adcb
negl
fnstsw
rolb
fs
cmp
sub
sub
out
mov
mov
xchg
push
lret
addb
mov
sahf
movsb
mov
repnz
or
xor
add
mov
imul
add
push
loop
add
jo
xor
jg
mov
jb
sarl
mov
outsl
addr16
mov
fbstp
pusha
pop
inc
mov
cmp
ljmp
mov
dec
orl
and
xor
push
push
aaa
sahf
xor
pop
in
add
jae
mov
mov
mov
sahf
lds
bound
mov
jno
fdivs
ljmp
and
decl
movsl
cli
pop
pop
push
mov
mov
outsb
shl
jg
cld
adc
ds
xor
jl
or
js
in
sub
pop
lret
aas
mov
jecxz
test
loop
pop
push
push
mov
ss
jo
es
in
add
hlt
jbe
sbb
inc
cs
mov
int
xchg
inc
aam
mov
in
pop
pusha
inc
sar
ja
cs
cwtl
je
out
stos
cmp
xchg
int
push
das
dec
lock
mov
test
push
les
sbb
decl
xchg
ds
mov
mov
pop
inc
xchg
pop
aaa
pop
jnp
stos
add
lret
and
ret
mov
mov
sbb
adc
call
repz
in
or
or
add
jns
shlb
push
in
xchg
pop
ljmp
rclb
pop
mov
rclb
loope
ljmp
or
push
xor
mov
test
int3
jge
outsb
jo
orl
out
mov
mov
pop
imul
cmc
scas
mov
cmp
push
add
std
lcall
loopne
push
mov
into
dec
arpl
or
lret
pushf
stos
sbb
sub
movsb
push
xchg
mov
insb
dec
sub
or
push
stos
inc
out
lcall
push
cmp
mov
xorb
add
jae,pn
incl
sbb
xor
adc
js
pop
xchg
mov
jbe
icebp
scas
cld
adc
fidivrs
ds
jns
flds
and
or
cmovge
push
dec
in
pop
push
pop
cmc
push
cmp
popf
cmp
push
mov
cmp
imul
sti
add
mov
jo
mov
rclb
adc
cld
cli
fisttpll
sbb
push
lcall
andl
and
ret
lea
ret
cs
mov
sbb
dec
inc
bound
fcoms
ljmp
jo
mov
mov
or
dec
cli
push
add
hlt
add
adc
movsb
sub
mov
sub
mov
std
outsl
cwtl
shrb
movsl
xchg
fbld
pop
add
bound
clc
aas
xchg
enter
ss
rcrb
shlb
inc
pop
or
xor
push
jno
dec
push
mov
sti
adc
pop
pop
mov
sub
rcl
ja
leave
lret
mov
dec
dec
in
je
sub
sub
add
imul
xlat
adc
idivl
xchg
sbb
sar
inc
data16
pop
jle
lods
sti
pop
cwtl
fwait
xorl
push
int
les
pop
lock
shlb
ja
mov
mov
dec
add
fnstenv
fidivrl
dec
int3
mov
fs
call
mov
mov
cltd
lds
inc
jo
push
xor
or
decl
inc
hlt
insb
and
jnp
jbe
mov
pusha
mov
sbb
decl
pushf
jge
inc
sahf
mov
mov
jno
jmp
sub
mov
out
inc
cmpsb
cmp
or
mov
out
xchg
mov
xchg
cmp
lahf
popf
xor
test
jg
and
cmp
inc
add
rcl
je
xorl
fbstp
jp
cmp
xchg
push
in
xchg
test
xchg
lret
andl
sub
mov
mov
lods
call
dec
sbb
fmuls
dec
mov
cld
mov
mov
or
push
and
movsl
pop
hlt
adc
mov
push
xchg
stos
sti
icebp
push
or
scas
mov
popf
rcrb
or
push
inc
pop
xor
lcall
pop
lret
mov
xchg
mov
fs
scas
fnsave
int3
in
bound
xchg
jle
stos
adc
and
pop
xorl
call
mov
jl
mov
ficompl
and
cmp
roll
mov
xor
xlat
and
fstps
sti
incl
orb
je
add
sub
jmp
stc
mov
fistpll
adc
jg
jne
mov
aam
inc
dec
lock
push
mov
hlt
repnz
sub
sbb
mov
xlat
ss
push
add
test
sub
add
jmp
inc
jae
fs
addr16
rol
cmc
imul
jle
mov
xchg
cmpsb
lock
dec
rclb
into
popa
mov
ret
xor
mov
inc
nop
mov
cmp
xorl
dec
add
and
cmp
aas
leave
inc
xchg
and
jns
iret
loope
enter
pop
or
idiv
inc
add
fidivl
xor
pushf
mulb
in
jo
sarl
loope
mov
pop
enter
jbe
jge
add
shrl
xor
out
sahf
cld
test
sbb
mov
cmc
les
jge
xor
pop
cltd
and
ret
add
cmc
in
and
or
mov
mov
fiaddl
aas
pop
and
dec
sub
ds
insl
add
daa
pop
fwait
mov
jg
enter
inc
fcompl
add
push
add
mov
cltd
loopne
pop
ss
jg
mov
ss
mov
test
sub
cmpsb
scas
mov
jl
std
test
test
aam
or
xchg
add
inc
dec
cmp
mov
push
cmpsb
popf
rcll
stos
cmp
dec
mov
pushf
xchg
clc
jg
push
aad
insl
or
lock
call
sbb
fimuls
mov
fcmovu
js
fdivrl
push
add
iret
inc
ficomps
push
inc
ret
decl
push
sbb
scas
adc
daa
push
sbb
scas
pop
call
popa
std
sbb
adc
stos
jl
lcall
or
pop
aam
and
jbe
push
loopne
rorl
and
jnp
mov
or
mov
jns
cmp
push
push
pcmpgtw
xlat
loop
adc
stos
mov
mov
test
cltd
mov
sbb
das
jl
xchg
clc
mov
pop
xchg
sysenter
imul
mov
out
out
jl
push
or
or
fisttpll
std
adc
mull
out
pop
std
pop
je
mov
jg
hlt
jle
jae
jno
pop
xor
mov
pop
add
jg
aad
jnp
aam
loope
outsb
aaa
push
bound
cmp
or
jmp
mov
mov
inc
mov
fisubl
decl
mov
stc
inc
std
outsl
outsb
in
or
imul
hlt
jp
jg
scas
inc
adc
nop
ss
scas
dec
add
jg
push
ret
pop
add
adc
and
jle
mov
adc
jbe
xchg
sbb
test
mov
addr16
sbb
testl
call
sbb
ss
or
xchg
mov
fcmovbe
fdiv
add
push
lods
scas
inc
mov
mov
xchg
jb
shrb
inc
aaa
push
mov
pop
pusha
push
cld
sti
rclb
mov
jne
xlat
shlb
js
adc
ret
push
dec
popf
pop
push
outsl
sub
mov
add
mov
cld
rolb
sti
or
ror
mov
add
xlat
inc
nop
mov
fiaddl
popf
push
adc
ss
sub
rcrb
xchg
jp
xor
out
push
addb
mov
and
xor
lret
or
cmp
xchg
mov
and
psllw
lods
std
inc
mov
lcall
out
pop
mov
jg
mov
mov
or
js
xchg
loop
mov
push
movsl
push
stc
sbb
add
test
cmp
push
push
aas
inc
loop
inc
test
in
add
cld
mov
sbb
sarb
shll
mov
test
and
push
icebp
je
cmpsl
into
jecxz
push
or
aam
lods
jo
sbb
clc
mov
push
add
xor
stos
sbb
pop
cmp
les
std
pop
mov
adc
lds
inc
insl
jecxz
sarl
cmc
add
mov
leave
cmp
out
enter
jle
adc
repz
cmpsl
rcl
add
jp
add
pop
sub
cmpsl
xchg
fmuls
out
ljmp
mov
sbb
hlt
ds
push
mov
push
push
in
pusha
sub
inc
fisubrs
repnz
xorl
insl
dec
scas
or
xor
cmpsl
fimull
test
xchg
xor
mov
push
push
pop
pop
movsl
jmp
mov
mov
movsl
push
arpl
jo
ljmp
inc
adc
jecxz
sub
pop
jae
in
xchg
inc
cmp
mov
daa
ds
out
stc
adc
loop
mov
jns
add
inc
or
pop
subb
mov
dec
out
push
loop
pusha
bound
mov
xchg
pop
or
test
bound
decl
mov
insl
and
mov
inc
jl
add
cld
aas
popl
inc
xchg
mov
or
push
jl
scas
js
outsb
pop
sbb
inc
test
mov
mov
sbb
pop
xor
fsubl
shrb
pop
or
jecxz
mov
mov
sub
enter
dec
jle
cmpsb
decl
roll
cs
add
sub
fnstsw
sbb
cmpsb
push
mov
and
divb
stos
lods
cli
jg
add
xor
imul
cmp
sbbl
imul
push
sub
xor
jmp
icebp
add
jno
rorb
sub
add
loope
push
imul
clc
test
cs
xor
mov
aad
or
push
cld
mov
push
lret
jecxz
in
or
and
xor
decb
aaa
mov
pop
movsl
mov
mov
jbe
push
cmp
dec
sbb
shrl
scas
vmaxps
push
in
nop
mov
fsts
mov
inc
lds
hlt
je
mov
aam
dec
rclb
mov
ror
xor
jnp
es
dec
scas
insb
xchg
dec
pusha
fimull
xor
push
mov
lock
push
loopne
push
inc
sub
daa
outsl
inc
outsb
jl
inc
lock
test
mov
aad
shlb
add
or
jo
xchg
mov
outsb
inc
jno
in
adc
in
stos
aaa
xchg
or
das
outsb
xor
dec
inc
xlat
sub
rcrb
mov
mov
lret
or
loopne
inc
cmp
mov
lock
sbb
or
add
into
pop
and
insb
sbb
cmp
jo
gs
ret
mov
rorl
add
pop
nop
mov
pop
ud2
adc
adc
out
popf
inc
enter
sahf
sbb
add
cmp
mov
scas
inc
roll
jp
jbe
push
outsl
push
pop
inc
lret
ds
ljmp
sbbl
leave
outsl
ret
and
fstpl
jle
idivl
imul
sbb
sbb
icebp
mov
or
mov
enter
adcl
push
jo
xchg
add
aas
unpckhps
adc
dec
or
je
mov
cmp
cwtl
out
in
mov
sar
mov
loope
pop
repz
jge
add
adc
adc
push
pop
iret
or
fdivl
hlt
and
push
jge
decl
push
push
in
repnz
fidivl
je
hlt
push
and
xor
popa
in
or
or
ret
outsl
push
imul
push
cmpsl
cwtl
lock
dec
loope
mov
mov
inc
adc
xchg
or
std
xchg
xor
mov
das
cmpsb
inc
inc
jbe
fildll
jmp
pop
ljmp
adc
jno
cld
and
cmp
cs
cli
mov
repz
jle
sti
out
adc
cwtl
lret
insl
sbb
sbb
inc
push
leave
and
in
jle
test
xchg
data16
lock
movsb
cld
inc
dec
das
outsl
or
hlt
sub
xchg
push
inc
cmp
ljmp
aas
lds
rorl
or
jb
idiv
add
lods
pop
jl
adc
addr16
ret
xchg
fiaddl
incl
sahf
test
xchg
repnz
xor
pushf
das
mov
ficoml
jp
inc
xor
in
mov
xchg
add
incb
fcoms
rorb
pop
outsl
cmp
xchg
lret
lods
sub
movsb
ds
add
rcrb
jb
mov
pushf
xor
pop
mov
mov
scas
jns
pop
mov
jbe
mov
fsubl
jg
cmpsl
xchg
stos
lock
push
push
scas
mov
push
ret
lea
lods
jg
icebp
or
pop
lcall
cmp
mov
mov
add
add
and
dec
inc
rcrl
pop
inc
test
jne
xchg
inc
dec
pop
or
mov
mov
mov
adc
push
rclb
jbe
pop
push
mov
sbb
fidivs
or
pop
push
jmp
add
movsl
cmpsb
clc
jmp
and
pushf
fs
mov
jne
inc
inc
cmp
mov
fwait
mov
pop
and
sbb
lods
call
popf
out
sbb
sub
sub
inc
adc
mov
dec
jb
movsb
push
xor
push
fucomi
cmpsb
cs
mov
stc
dec
scas
scas
js
ja
ljmp
in
jge
dec
xchg
or
or
pop
cmpsl
mov
fistpll
cmp
test
loop
or
inc
push
js
jb
push
jl
mov
mov
add
std
add
xchg
push
mov
ficompl
mov
adc
push
pop
stos
call
ret
cmp
dec
addl
lcall
in
pop
cli
xor
mov
rcrl
push
pop
sbb
ret
or
rorb
cmp
adcl
pop
xchg
jg
push
pop
push
cmpsb
mov
mov
cmp
lcall
lock
call
cmp
mov
lret
pusha
test
dec
xor
lods
cmpsl
test
jp
mov
repnz
out
jne
inc
adc
inc
cmp
mov
ja
mov
mov
and
mov
push
inc
pop
adc
jp
ror
mov
shll
lcall
xchg
xchg
adc
lods
mov
adc
sub
jb
add
jg
movsl
rcrb
mov
clc
sbb
mov
mov
mov
inc
pop
xchg
push
js
push
xor
adc
or
push
stos
ds
loope
inc
les
xor
pop
call
decl
packsswb
and
mov
movsl
push
test
mov
sub
sub
psubsb
movsl
mov
cmp
cmp
fs
pop
mov
pop
fidivl
repnz
inc
rcr
inc
push
ret
in
add
out
push
adc
jbe
jg
pushf
rcrb
cwtl
add
icebp
lock
jg
mov
fdivrp
insl
pop
add
stc
fcompl
sub
int3
addb
test
cwtl
test
pop
popf
insb
mov
fs
lock
lea
data16
into
mov
inc
pop
add
insb
clc
dec
push
stos
clc
aas
test
push
adc
jge
cmc
clc
jp
sub
mov
or
and
mov
call
push
xlat
xchg
jle
lds
adc
pop
lock
ljmp
decl
or
bound
pusha
mov
jo
ljmp
popa
inc
test
push
mov
movb
insl
aas
inc
fsubr
ficoms
push
dec
sbb
and
xchg
scas
push
jmp
mov
es
js
test
push
stos
call
and
mov
loope
jge
retw
xchg
cmp
and
or
cmpsl
lds
lock
js
les
xor
clc
sbb
xor
push
and
popf
jns
pushl
cmp
dec
xchg
int3
mov
inc
movsl
enter
outsb
scas
cld
xchg
sbb
loope
lods
lea
movsb
fidivrl
nop
out
and
je
mov
inc
ljmp
dec
sbb
lds
nop
cmpsb
push
mov
pusha
sub
imul
mov
fsub
imul
insl
pop
rcl
dec
mov
sbb
and
mov
rolb
dec
xchg
fucom
jg
adc
std
mov
sbbl
xchg
rcrl
mov
jg
xchg
push
sub
repz
jp
aad
or
bound
rcrb
sub
xchg
jmp
ljmp
push
in
pop
aas
lods
cmc
imul
pusha
or
push
in
stc
adc
pusha
lret
and
push
fs
js
and
ds
push
cmpsb
hlt
inc
fwait
addb
xor
jge
xchg
lods
and
cwtl
jne
inc
in
out
bound
test
jmp
outsb
test
pop
lcall
mov
xchg
into
ret
pop
mov
mov
jl
xorl
pop
daa
cmc
cmc
movsb
or
ret
clc
or
sbb
xchg
push
push
test
mov
js
das
notb
idivb
xor
jl
lods
in
mov
push
js
call
mov
adc
jg
or
jecxz
dec
rcrl
lock
fdivs
cmc
jg
and
mov
pop
inc
dec
adc
jbe
cmp
fimuls
push
in
aam
add
sbb
ss
hlt
xchg
rcrb
xlat
and
xchg
mov
adc
andb
fdivs
incl
add
adc
data16
aam
xor
pop
dec
xchg
mov
jo
mov
jg
mov
das
mov
cmp
jl
or
jae
xor
jle
jle
lock
es
popf
lcall
rcrb
call
aam
dec
dec
scas
daa
stos
les
lahf
xchg
movsl
je
push
cmp
test
jg
sub
add
add
push
scas
in
in
xor
inc
mov
and
test
scas
mov
hlt
xor
mov
push
mov
push
jmp
xchg
adc
shr
xchg
gs
out
xchg
div
or
loope
or
mov
jp
jne
cmp
adc
adc
xor
and
and
mov
sub
pop
mov
stos
decb
dec
test
add
jo
std
iret
cld
push
hlt
stos
mov
push
cmpb
jnp
and
dec
pop
sbb
xchg
fs
dec
mov
call
aam
loopne
pop
pop
push
popa
sbb
sar
adc
fisttps
shlb
sub
xchg
iret
dec
les
mov
mov
jb
push
data16
xor
repz
aaa
aad
cmpsl
xor
xchg
cmp
loopne
push
mov
fisubrs
sahf
jo
xor
daa
sub
mov
ss
or
xor
sub
imul
outsl
sbb
sub
pop
out
mov
rcll
test
sbb
sbb
add
adc
pushf
jo
mov
jle
adc
mov
xchg
fimuls
inc
adcl
and
and
cmp
movb
mov
div
add
sub
inc
jecxz
or
mov
cmpsl
xor
in
in
in
repz
fld
subl
xor
mov
loopne
js
loop
xor
push
test
out
pusha
mov
imul
pop
adc
rolb
sub
rorb
sub
cmp
pop
cli
or
out
lods
cmp
push
imulb
jmp
xchg
mov
pop
dec
inc
or
hlt
repz
jbe
cli
inc
dec
mov
shrb
sbb
pop
xchg
loope
fisttpll
push
cs
cmpsb
int3
cmpsl
fcomp
add
ljmp
sub
aam
and
push
jns
xor
push
adc
lret
sub
mov
icebp
push
or
cwtl
ret
add
adc
sti
and
mov
sub
add
add
test
clc
jg
and
clc
or
cwtl
add
shlb
ss
mov
and
mov
bound
loope
push
out
or
rcrb
jecxz
sub
shr
xor
mov
adc
sbbb
mov
or
adc
xor
es
icebp
mov
repz
stos
xor
icebp
sub
cmp
popa
push
out
call
ljmp
test
js
inc
into
push
add
pushl
and
cli
test
shrb
loope
jecxz
and
lds
fucom
jmp
mov
scas
roll
xchg
std
aam
pop
mov
cltd
dec
sti
loope
mov
xchg
mov
fistps
mov
inc
adc
je
add
out
jns
xchg
std
mov
rclb
add
imul
and
movsl
filds
or
mov
xor
mov
shl
push
loope
pop
xlat
mov
sub
movsb
jge
scas
adc
fsts
popa
mov
movsb
add
das
data16
arpl
int3
lods
or
cld
roll
mov
idivb
loop
jp
pop
roll
add
sti
sub
xchg
pushf
cmc
cmp
pushf
orl
ds
sbb
enter
rclb
mov
mov
dec
call
imul
adc
loope
loope
repz
test
sar
roll
daa
jne
fisubrs
add
subb
les
pushf
les
fidivs
cmp
adc
inc
push
popa
pop
dec
push
decl
pop
add
mov
mov
jno
mov
fisubl
clc
stos
cmp
push
or
insb
movsl
into
xor
sub
pop
or
not
sub
dec
jg
push
std
pop
negb
nop
add
sub
xchg
cmpsb
push
cmc
orl
cmpsb
mov
or
mov
es
sbbl
rorb
xchg
lods
pop
and
mov
inc
cld
mov
pop
jns
mov
outsb
packsswb
adc
and
cli
ret
pop
add
push
or
sti
ret
iret
lods
mov
fistpll
push
add
lcall
arpl
sub
aam
in
fcomip
loope
int3
push
push
enter
jbe
cmp
adc
mov
push
jle
test
jno
std
mov
shlb
mov
dec
daa
cmp
xor
and
fmull
jmp
sbbb
ja
ret
call
ss
fdivl
cmp
or
in
inc
push
inc
daa
rorb
and
sbb
lds
push
bound
jo,pn
jl
push
xchg
loopne
pop
test
cmp
add
aas
fisubrl
jbe
jle
jb
fsub
std
stc
popa
sahf
sahf
cld
xchg
stos
insl
dec
dec
adc
adc
push
sahf
add
ja
jne
mov
jns
scas
xchg
in
or
push
mov
clc
lcall
add
movsb
cld
push
adc
movsl
push
push
pop
push
mov
push
bound
ret
fadds
pop
aas
push
push
jb
xor
out
pop
hlt
shll
cmpsb
add
lea
sbb
fucomp
sub
xor
mov
dec
int3
les
jg
cmp
imul
pop
dec
in
sti
cmp
push
pop
sarb
in
add
in
shl
jno
fwait
xor
add
stos
rol
add
imul
lea
outsl
in
jle
push
mov
sbb
and
inc
xor
outsl
fnstenv
lods
daa
mov
decl
loop
xor
in
fisubrl
fldl
jle
in
mov
ret
mov
mov
push
adc
std
xor
je
jmp
push
rolb
jo
les
xchg
jmp
dec
pop
push
or
pop
add
addl
dec
mov
xchg
out
xchg
inc
jnp
xor
and
sbb
sbb
add
shlb
sub
std
mov
rcrb
adc
pop
inc
ds
rclb
aaa
push
in
push
js
jle
pusha
push
push
cmp
arpl
pop
ljmp
mov
cmpsb
or
fiaddl
ljmp
inc
mov
stos
jno
dec
dec
divb
mov
fwait
jbe
pop
mov
ja
xor
mov
xor
push
sub
scas
sbb
bound
das
rol
rol
cmpsb
ret
ret
fsub
jecxz
add
insl
push
add
flds
dec
xchg
icebp
and
push
stos
leave
sar
jo
mov
les
mov
rcll
mov
add
push
pusha
ss
pop
insl
in
icebp
or
add
loop
xlat
loope
xor
xor
scas
pop
pop
mov
and
bound
es
mov
out
adc
lods
adc
movsb
push
js
addl
inc
data16
xor
mov
cwtl
jne
add
jne
push
push
cmp
push
mov
add
aaa
test
mov
aam
movsb
and
in
sar
mov
ja
inc
and
add
je
xor
sarl
push
andl
rclb
sub
push
or
sbb
pop
ja
or
stos
icebp
fs
push
or
dec
mov
adc
mov
sub
cli
cld
lret
sub
sbb
inc
xor
pop
sbb
std
in
aas
xchg
mov
mov
mov
pushl
stos
rorb
push
mov
int
jbe
mov
ss
mov
lcall
push
pop
lret
rcrb
cmp
ror
or
test
or
shrl
daa
je
shrb
test
jg
cmp
pop
and
or
jecxz
adcb
stos
pop
cmc
jmp
sbb
pop
inc
inc
dec
shll
push
jmp
sbb
call
scas
imul
mov
add
push
lods
mov
jge
stos
loopne
data16
mov
pop
mov
xchg
and
push
int3
std
pop
and
fidivl
adc
push
into
out
repnz
hlt
xchg
pop
pushl
pop
daa
adc
in
or
fsubr
jle
mov
jb
imul
outsb
pop
fistpl
cmp
inc
pop
aad
jb
cmp
lock
outsb
ss
pop
pop
popa
adc
pushf
mov
clc
xor
popf
dec
hlt
lahf
mov
fsubl
nop
mov
pop
pushf
es
iret
shlb
add
push
xchg
jge
hlt
sbb
add
mov
clc
mov
pop
mov
xor
cltd
xchg
je
jnp
lods
fldl
mov
mov
jbe
xor
hlt
dec
pop
ret
popl
stos
idiv
fsubrs
or
dec
movsb
icebp
jmp
aad
out
addr16
mov
dec
gs
mov
push
add
mov
sbb
push
scas
test
flds
inc
ja
popl
push
movsl
sahf
inc
mov
add
mov
jo
jne
xchg
or
adc
jg
rorl
mov
adc
cmpsl
pop
mov
cwtl
loope
adc
icebp
xorl
das
add
clc
sub
mov
sbb
out
push
xchg
imul
push
add
orb
dec
mov
fiaddl
ljmp
jae
mov
mov
prefetcht0
dec
and
adc
sarb
adc
xor
mov
mov
push
inc
out
in
in
lret
or
test
or
or
test
cli
jo
mov
adc
xchg
push
xchg
leave
dec
or
sub
jecxz
int
hlt
movsl
addb
je
cmp
or
inc
cmp
lea
or
lock
mov
pop
mov
mov
mov
bound
mov
outsb
add
insb
inc
jnp
jne
aaa
mov
ficomps
cltd
scas
or
mov
es
or
xor
add
test
pop
inc
mov
mov
xchg
insb
cmpsb
pushf
mov
xor
xlat
cmp
les
cmp
cmp
sbb
mov
jp
adc
in
in
aaa
mov
cmp
jecxz
call
cmp
call
loop
das
andl
xchg
cmp
popa
add
add
dec
out
stos
jne
jmp
jmp
mov
pop
stc
mov
je
adc
arpl
dec
movl
in
pop
inc
cmp
adc
stos
lea
jne
dec
mov
pop
jno
ret
pop
hlt
jg
add
adc
test
imul
outsl
movsl
daa
aad
adc
mov
adc
cld
mov
icebp
push
push
cwtl
and
lcall
mov
movb
jno
clc
mov
adc
mov
add
sbb
adc
xorb
loope
sbb
scas
lcallw
sub
pop
cmp
cs
js
pop
sub
and
mov
jnp
push
test
xor
cld
aas
cwtl
dec
outsb
subb
loop
fiadds
and
loope
ljmp
pop
pusha
inc
test
outsb
pop
and
mov
je
or
and
mov
stc
mov
push
lods
test
mov
pop
and
leave
and
imul
push
loopne
in
rep
jbe
call
jnp
fdivl
jge
adc
sbb
add
cmpsb
mov
lods
or
sbb
pop
and
push
int
inc
xchg
nop
cld
loop
rcl
xor
fcmove
push
test
xchg
cmovb
or
pop
aas
dec
scas
fcomps
nop
je
les
mov
push
adc
pop
dec
repz
aam
mov
cmp
ss
xor
stos
sti
ja
sub
cmp
adc
xchg
pop
or
inc
xchg
push
in
jo
mov
cmp
cmp
or
push
cmp
ret
sbb
scas
push
mov
sub
cli
add
in
loope
ja
ret
ret
mov
inc
push
push
push
push
xchg
jl
lcall
push
xchg
repnz
cld
sub
es
rcrl
lcall
adc
movsb
dec
pusha
daa
leave
rcrb
push
jmp
mov
fistpll
mov
ljmp
shll
nop
call
icebp
inc
ret
pop
sbb
pop
pop
push
stos
push
shrb
inc
mov
imul
add
decl
shr
icebp
mov
sub
xchg
dec
adc
js
movsb
jne
das
sbb
incl
sub
mov
sub
negb
adc
xchg
mov
jae
push
xchg
mov
nop
pop
push
add
push
sarl
jno
setl
mov
mov
xchg
inc
xchg
dec
push
loopne
sub
inc
stos
sub
inc
sahf
enter
adc
push
sbb
aam
inc
loopne
int
les
js
test
mov
div
test
vpsrld
das
or
outsl
imul
cld
repz
fists
js
lods
pop
jno
out
pop
ret
jae
xlat
sbb
sti
sbb
pop
mov
dec
inc
clc
adc
scas
pop
aam
into
jns
ja
daa
push
xor
xlat
popa
adc
test
push
ljmp
shrb
mov
rorb
or
adc
aas
jp
sub
sub
inc
out
mov
cmp
push
add
outsl
dec
enter
sub
cmpsl
cs
push
scas
rol
dec
add
inc
inc
dec
popf
mov
call
andl
dec
xor
shl
jle
aad
ja
cmp
mov
popf
lds
or
mov
cmp
or
stc
and
sti
add
test
fsubl
sub
xchg
jno
lods
aaa
std
or
fdivrp
imul
adc
sbb
xchg
and
mov
cmp
lret
fdiv
fwait
inc
in
popf
jno
pop
fisubl
rcrb
ds
pop
cmpsl
push
js
jl
outsb
dec
mov
jl
enter
and
loope
pop
lock
out
movsl
imul
xor
sbb
out
push
jge
loope
dec
cmp
inc
or
scas
loopne
stos
mov
or
and
test
call
adc
pop
pop
xchg
dec
test
repz
push
mov
cmp
ss
jne
rclb
jno
pop
jae
int3
repnz
fwait
jb
jecxz
xchg
stc
jo
leave
sbbb
pop
pop
mov
fisubl
sarb
int
cltd
ljmp
cli
pop
xchg
push
jl,pn
push
inc
or
pop
mov
push
add
dec
shr
test
xchg
lock
lea
loopne
ss
leave
decl
sub
pop
mov
add
sar
inc
int
je
add
and
dec
cmc
add
push
lret
loopne
rolb
jb
add
pop
fistl
add
pop
ljmp
cmp
decb
mov
test
das
adc
inc
jecxz
lock
mov
cmp
add
bound
mov
lock
sbbl
test
jg
je
in
rorl
call
mov
inc
add
or
int
inc
mov
dec
es
inc
add
mov
arpl
push
js
fadds
inc
loop
inc
mov
imul
push
cmp
mov
xor
cli
jmp
out
push
rcrl
xchg
xchg
jmp
lcall
and
shl
mov
sarl
inc
pop
lds
popa
sbb
pop
mul
cmc
add
mov
addr16
cli
movsl
lahf
xchg
jmp
js
gs
or
iret
adc
test
popa
mov
pop
mov
pop
cltd
jecxz
sahf
push
iret
jl
mov
faddl
inc
out
outsb
sbb
andl
push
sbb
pop
push
push
test
adc
pop
xor
aad
pusha
mov
insl
aas
adc
dec
xchg
in
mov
outsb
or
pop
and
push
xchg
cmp
fsts
sbb
push
pusha
pop
or
std
xchg
jp
mov
clc
popa
xor
lock
sub
cmc
jns
push
mov
mov
incl
adc
ss
mov
jbe
push
icebp
mov
aad
test
insl
jecxz
inc
mov
inc
rcrb
push
inc
adc
mov
and
scas
test
or
adc
push
sub
loopne
pushf
bound
insb
add
cmpsl
xchg
mov
fst
adc
jo
shll
mov
push
ss
jns
cmp
addr16
and
xchg
das
test
cmpsb
and
add
dec
ljmp
mov
jmp
mov
leave
inc
xor
or
pop
inc
push
lcall
mov
dec
dec
mov
add
push
jl
outsl
outsb
jecxz
or
mov
stc
adc
ljmp
in
enter
cmpl
fs
cli
sbb
iret
xchg
push
pop
xchg
mov
mov
push
int3
adc
push
std
insl
xchg
scas
mov
push
xor
cwtl
rcrb
adc
jp
dec
pop
adc
sbb
les
arpl
fnstcw
cmp
pop
xor
xchg
std
cmp
popf
jo
fcoml
lret
fiadds
sbb
jl
rcl
inc
clc
push
xchg
fwait
cmovno
xor
ret
mov
cmp
js
push
and
xchg
ret
hlt
fiaddl
xor
push
push
mov
xor
out
lcall
cmpsb
xchg
or
add
insl
inc
mov
xchg
inc
push
pop
push
ret
sahf
jge
dec
adc
outsl
adc
jge
cmpb
out
jg
cmpsl
decl
xlat
dec
xor
mov
mov
xchg
xor
ret
xor
xchg
lea
mov
adc
aaa
mov
jo
push
add
lods
fdivrl
mov
sbb
mov
add
jno
adc
cmp
add
outsb
sub
dec
cmp
push
mov
fisttps
pop
leave
xor
ficompl
or
push
jmp
mov
push
jge
jnp
das
xchg
dec
ss
push
sbb
setne
push
mov
adc
cltd
lods
scas
jae
sub
test
out
int
xor
fwait
les
mov
and
jo
push
ret
add
xor
ret
decl
or
sbb
mov
or
movsb
lret
aam
cmc
lahf
inc
jnp
clc
loope
imul
ds
jmp
inc
adc
sbb
cmp
out
fistpll
push
jmp
lea
mov
sar
jne
dec
je
leave
cli
sub
jg
pop
mov
lret
xor
inc
shl
xor
pop
sub
dec
cmp
das
pop
mov
popf
add
hlt
add
repnz
cld
jp
inc
fwait
orl
adc
mov
iret
call
arpl
fcomps
push
dec
in
gs
jmp
test
mov
push
mov
push
inc
cwtl
inc
jp
cmc
push
daa
inc
push
repnz
movsb
sbb
pop
jo
cmp
pop
js
xlat
popf
add
loopne
mov
fcomp
mov
dec
inc
pop
rolb
pop
addl
and
loopne
fcoms
scas
pop
xorl
sub
push
clc
jg
fcoms
subb
adc
clc
mov
ret
loopne
push
push
sbb
lock
pop
jg
sub
xchg
cwtl
sahf
ss
outsl
sbb
bound
jbe
decl
dec
jmp
xor
add
sub
cmc
ljmp
sub
int3
insl
or
fisttpl
pushf
test
push
test
push
das
adc
pop
mov
lcall
incl
xchg
aam
push
or
pushf
add
push
cmp
lret
mov
mov
push
push
mov
es
push
aad
ds
dec
sbb
aad
hlt
cmp
jl
push
or
out
aas
faddl
mov
int3
sbb
call
dec
mov
mov
push
inc
lahf
les
mov
repz
push
aad
push
es
xor
inc
mov
movsb
mov
dec
pusha
push
sbb
and
add
push
addr16
aad
clc
adc
iret
mov
lock
pushf
mov
outsl
sub
jle
jo
shll
dec
jecxz
insb
dec
out
xor
div
push
repz
sahf
sub
arpl
je
mulb
scas
fiadds
adc
rcl
js
fwait
inc
jp
xor
mov
inc
jl
mov
and
and
cld
lods
std
sub
pushl
ljmp
sub
and
sub
mov
cwtl
ds
rcl
pop
xor
pop
cli
cltd
cltd
and
rcrl
jp
adc
imul
scas
in
xor
sbb
xlat
xchg
sbb
es
fsubs
cmp
jmp
jbe
cmpsb
dec
in
rclb
pop
pop
mov
adc
fcmovnb
sbb
je
dec
cmp
and
into
pop
call
dec
mov
add
scas
cmpsl
mov
ffreep
jnp
xor
mov
movsl
out
xchg
fldcw
fyl2xp1
jle
or
insb
rcrl
push
or
cmpsl
cmpl
test
test
call
add
cmp
fdivs
inc
test
data16
loopne
cwtl
pushf
mov
fldl
jecxz
adc
rcrb
cs
pop
loope
gs
lock
dec
pusha
sub
aas
sbbl
adc
in
jp
dec
mov
and
mov
incl
mov
xlat
enter
pop
adc
test
jo
aam
push
inc
cli
jns
xchg
incb
lods
sbb
xor
mov
je
adc
popa
enter
jge
popf
push
mov
xchg
pushf
mov
xchg
call
pop
jge
cmp
xlat
sbb
inc
sbb
inc
sub
in
jmp
mov
inc
jge
pop
mov
fwait
sbb
les
mov
mov
cmp
into
mov
mov
push
push
lods
push
inc
frstor
add
call
imul
mov
push
cmp
mov
movlps
pop
push
jmp
jmp
xor
push
mov
jae
mov
rol
inc
and
call
loopne
and
jb
rcrl
xor
out
hlt
jp
mov
and
jae
or
ficomps
push
stos
cmp
sub
lds
pop
cmp
jecxz
adc
xchg
or
repz
cmp
insl
ret
aas
xchg
pushf
or
add
in
mov
inc
ret
xor
mov
inc
sti
lea
aad
or
pop
push
mov
dec
loopne
xchg
pop
mov
and
inc
call
mov
ljmp
push
in
jecxz
repnz
sbb
mov
popf
push
lods
int3
rclb
adc
dec
push
lock
mov
dec
inc
test
or
lahf
mov
stc
mov
jecxz
adc
adc
push
sbb
popl
aad
lret
scas
jge
adc
mov
jnp
inc
adc
jo
xor
jg
ds
test
push
cli
cli
push
ds
in
pop
das
cli
xchg
jl
xchg
mov
mov
xchg
inc
pop
icebp
stos
bound
xor
mov
mov
add
fcompl
mov
fstpt
leave
stos
in
loope
xchg
je
scas
jp
push
dec
inc
inc
out
jne
cmpsb
sub
adc
andl
dec
cld
push
in
ljmp
outsb
mov
mov
mov
pop
fbstp
mov
bound
xor
roll
push
mov
dec
test
shlb
mov
mov
aas
fmul
cld
test
mov
push
ljmp
sub
add
gs
jecxz
pop
cmp
jne
je
dec
add
ret
jg
test
jb
adc
xor
push
pop
adc
gs
xchg
insb
mov
scas
pop
fdivl
mov
cld
inc
jbe
push
fistpl
or
loopne
sub
mov
xor
mov
jnp
incb
fistpl
cs
lcall
outsb
stc
call
push
fisttps
sub
jb
fsubrl
jo
lahf
data16
dec
call
repz
loopne
dec
repnz
pop
mov
xor
fs
jo
pop
push
cmp
or
fmull
shrl
pop
adc
clc
scas
gs
add
sbb
gs
inc
fwait
sbb
imul
pop
mov
jmp
lods
adcb
xchg
ficompl
mov
xchg
inc
and
add
mov
lods
mov
push
enter
sahf
cmp
push
mov
in
cmpsl
stos
mov
adc
add
clc
aaa
loope
enter
jbe
or
rorl
bound
pop
decl
xchg
jmp
cmp
push
cmp
mov
xchg
adc
clc
add
leave
inc
push
js
mov
ss
pop
mov
movsb
sahf
and
and
fwait
mov
inc
cwtl
xor
icebp
push
push
fwait
inc
or
lret
mov
cmp
pop
ficomps
inc
ja
mov
cmc
xchg
repz
call
mov
adc
call
cmc
ja
idivb
mov
add
test
mov
push
mov
or
mov
movsb
and
js
and
imul
inc
mov
mov
sub
aad
and
sbb
stos
jle
sbb
inc
lcall
sub
and
stc
and
xchg
mov
cmpsl
adc
loope
aam
jg
cwtl
cs
mov
fadd
or
clc
call
xlat
test
dec
sbb
in
or
scas
incl
push
add
cs
push
mov
dec
mov
sub
sub
inc
nop
stos
hlt
sar
xlat
jne
mov
mov
push
lds
add
hlt
das
or
mov
or
sbb
pop
cli
cmc
xlat
test
popa
push
pushf
inc
shrb
in
in
push
repz
dec
daa
mov
cld
mov
and
cmpsb
js
pop
lock
shr
daa
ljmp
jl
andb
xchg
xor
push
dec
lea
lcall
adc
jmp
sbb
in
sub
insb
pop
mov
hlt
xor
out
adc
xor
or
sahf
or
mov
ret
loop
push
add
shrl
test
push
dec
outsl
roll
test
ss
js
loop
lcall
insl
or
sbb
icebp
rol
jg
or
movsb
push
aad
loopne
push
mov
out
push
popf
adc
cs
mov
xor
xchg
xor
add
xchg
mov
mov
ret
push
loopne
xlat
push
dec
mov
pop
into
in
push
and
mov
add
fs
xchg
and
or
and
or
add
cmp
loopne
aad
push
push
add
and
mov
inc
push
pop
mov
dec
jecxz
push
jo
js
inc
cld
decb
sub
imul
jl
jecxz
pop
cwtl
int3
xchg
mov
or
xchg
push
adc
les
leave
pushf
jle
cs
add
push
cmp
pop
mov
loop
jo
rolb
test
mov
dec
push
into
lret
sahf
xor
jle
or
js
adc
aam
adc
das
in
imul
add
and
cmp
xor
xlat
xor
pop
jmp
push
ret
test
jno
sbb
pop
xor
mov
add
dec
arpl
ja
pop
data16
loopne
cmpsb
push
mov
jnp
pop
or
fists
and
test
add
aaa
jl
xchg
clc
in
xlat
repnz
int3
clc
fidivrs
stos
mov
outsl
out
orl
repnz
lods
mov
mov
dec
or
cmc
jp
cli
xchg
and
js
loopne
add
dec
leave
loope
cltd
jl
cmp
push
jg
rorl
mov
and
push
push
inc
pop
add
cmp
pop
push
mov
adc
pop
aas
mov
mov
repnz
and
ret
int
pusha
xor
lret
jp
push
xchg
aam
inc
cmp
and
pop
mov
mov
lcall
and
cmc
loope
in
std
xlat
mov
push
inc
roll
jp
sbb
int
pop
add
cmpsb
push
stc
pusha
dec
loop
and
std
popf
adc
dec
push
adc
xor
ret
or
cmpsl
shrb
sti
mov
pop
or
jle
gs
adc
or
ds
icebp
rorl
sbb
imul
mov
jp
xchg
movsb
inc
push
insb
dec
and
js
or
push
inc
stos
popf
hlt
sbb
lock
je
jle
cs
test
lea
cmpsb
inc
and
pop
popa
outsb
sub
in
rcrb
test
xchg
jl
popf
adc
int
push
push
xor
into
orb
ljmp
sbb
pushf
push
divb
cmp
cli
fstpt
les
xorl
icebp
rolb
je
test
or
or
repz
movsb
pop
mov
andb
mov
rcll
movsl
in
sub
scas
sbb
pop
nop
dec
sti
push
sbb
lret
jp
push
icebp
das
push
fsubrs
xchg
push
int
hlt
mull
mov
jmp
ret
jbe
aad
add
int
aas
sbb
add
xchg
clc
ss
mov
inc
jl
movsl
push
mov
sbbb
push
lock
das
lods
sbb
mov
or
mov
fcomps
jg
sbbl
cmp
daa
push
cwtl
gs
icebp
or
imul
addl
lods
xor
add
lds
and
and
xor
adc
sbb
sbb
aas
mov
movsl
jo
fisubrs
int3
mov
test
push
xchg
mov
call
call
ror
mov
fstl
cld
addr16
ljmp
jg
push
xlat
cmp
fists
push
xchg
shll
jmp
das
pushf
imul
test
mov
out
add
pusha
add
in
inc
ret
fcomip
fwait
shl
das
sbb
out
push
dec
cltd
les
dec
dec
cmp
call
popf
outsb
repz
and
or
jle
xchg
dec
push
mov
pop
js
je
mov
adc
pop
in
je
dec
fucomip
out
sub
push
mov
xlat
in
pop
nop
ds
js
out
js
mov
push
xor
roll
adc
xchg
push
mov
mov
jl
jp
pop
leave
sbb
xor
cmpsb
sbb
cmp
in
bound
dec
pop
out
xchg
dec
mov
cmp
stos
xchg
ret
scas
jnp
scas
les
test
nop
xchg
ret
insl
push
cld
dec
jp
in
xorb
test
or
jmp
or
enter
add
push
lcall
cmpsb
aaa
std
das
mov
sub
mov
jle
js
sub
cld
lods
push
add
sahf
popa
inc
call
shlb
cmp
ficoml
repnz
ret
jne
xchg
dec
sahf
icebp
dec
pop
cmp
js
pmaxub
js
xor
div
sarl
arpl
scas
add
and
fcoms
push
mov
add
adc
js
add
adc
jmp
ja
push
adc
gs
push
inc
cmpsl
mov
xchg
xchg
aaa
push
cmc
jmp
lds
xor
cmc
inc
pop
xchg
sbb
cmp
pop
out
adc
outsl
mov
push
scas
or
shrl
clc
mov
inc
or
lock
ja
cmp
and
ljmp
lock
pop
add
mov
je
mov
lock
jo
push
jecxz
xor
push
mov
loope
imul
xchg
mov
das
sub
sbb
mov
out
push
sbb
adc
cmp
orb
mov
dec
fsubr
movsb
push
int3
cmpsl
sahf
sub
lods
jb
std
push
aaa
addl
push
dec
loopne
aas
lahf
push
push
js
push
pusha
fldt
bound
jl
nop
pop
jecxz
jg
out
iret
flds
adc
inc
jnp
fmuls
andl
data16
mov
xchg
lock
jg
das
in
aaa
sahf
jmp
loop
bound
stos
pop
mov
mov
cli
loop
sub
lock
icebp
stc
pop
fs
push
cmp
xchg
test
sbb
pop
dec
add
aaa
xor
sub
sub
loop
pop
add
or
fcmovne
aaa
mov
sbb
mov
inc
inc
jle
push
sbb
shrb
and
dec
clc
cmpsb
pop
rolb
daa
ds
lock
push
mov
jbe
xchg
pop
daa
pop
or
dec
or
fisubl
add
sbb
mov
lods
adc
cld
fwait
pusha
lret
sarl
jg
js
mov
inc
pusha
push
mov
ljmp
ds
add
add
jb
add
dec
add
xor
pop
pop
imull
enter
insb
cli
aad
push
cmpsb
pop
bound
jecxz
xor
es
fdivs
arpl
xor
push
push
mov
xchg
or
or
dec
mov
mov
pushf
xchg
clc
push
mov
cmpsl
subb
std
pop
lea
rorl
push
lock
inc
fcomp
cmp
loope
sub
outsl
cld
aas
inc
and
xorb
cltd
cs
rcrb
add
mov
test
rcll
xchg
cmpsb
inc
rcrb
andb
dec
fadds
jle
cmp
and
addl
inc
dec
ss
xchg
inc
xor
sbb
jg
adc
mov
xchg
jns
fldln2
je
arpl
pop
xor
cmp
shlb
bound
movd
sarb
jns
fisttpll
xchg
cmpxchg
popf
enter
dec
mov
clc
cmp
arpl
xor
push
in
sbb
cwtl
cli
fistpl
mov
xlat
fs
hlt
add
jb
add
fcomp
lea
fdivr
sub
cmp
repnz
sub
cmpsb
sbb
ss
sti
push
and
sub
outsl
and
or
cmp
jmp
xchg
xor
cmp
sbb
out
xchg
inc
xor
in
sar
loopne
mov
imul
mov
mov
mov
and
rcrb
jp
in
incl
adc
popa
hlt
ljmp
rorl
jno
popf
sub
dec
ret
push
mov
sar
dec
mov
adcl
data16
das
inc
jae
pop
push
lds
add
push
dec
xor
or
xchg
and
jg
bound
pop
pop
je
cli
adc
outsb
push
ljmp
loop
xor
aad
pop
and
dec
cmp
push
movsl
adc
pop
loopne
outsb
sbb
int
cmp
push
icebp
dec
lds
mul
sbb
cmp
sbb
xchg
cmp
jl
jb
imul
pop
jo
sbb
out
loop
sahf
cs
jo
cmp
dec
aam
icebp
mov
ds
ret
add
in
jo
cwtl
lcall
mov
outsl
add
cli
sbb
pop
mov
sbb
cmpsb
sahf
and
pop
jg
pop
mov
or
mov
jmp
jmp
jno
cmp
js
jmp
or
scas
aas
fcomi
mov
cwtl
or
inc
aas
adc
roll
out
faddl
hlt
shlb
aaa
insl
stc
sub
lods
cmc
das
push
xchg
dec
shll
cmp
and
aas
dec
and
pusha
jmpw
dec
movsb
dec
mov
cmp
dec
xor
and
mov
ss
jl
mov
cli
mov
lds
cmp
mov
test
pop
into
clc
lods
mov
mov
arpl
jecxz
test
push
sbb
jge
pushl
clc
daa
jno
es
inc
adc
cli
call
fcmovnu
test
mov
jb
scas
pop
mov
xchg
sub
cmp
or
xlat
in
sbb
into
or
mov
push
jae
push
mov
invd
adc
les
push
cs
mov
xor
ret
test
mov
mov
insb
xorl
inc
push
xchg
fsubr
mov
cli
dec
test
jg
ret
aaa
xor
out
mov
fwait
push
cmc
stos
loope
or
xor
gs
xor
or
sbb
add
int
inc
rclb
ficoms
lock
mov
cmp
aaa
add
out
lods
out
cmp
push
fcomi
loope,pt
jne
mov
cmpb
lret
xor
xor
and
aad
sbb
je
pop
in
repz
add
push
fidivrl
test
push
add
pop
mov
sub
insl
xchg
popa
inc
popf
call
popa
test
jb
repz
xor
mov
mov
sbb
push
and
ljmp
ss
sub
xchg
mov
ljmp
repz
mov
fidivl
push
push
pusha
sub
add
scas
push
fstpt
add
sbb
andps
lock
adc
movsl
add
dec
jmp
sti
mov
std
mov
dec
fsubs
mov
inc
push
addr16
outsb
jmp
inc
add
jnp
fcmovbe
fwait
out
daa
cmovo
push
mov
cs
sub
pop
pop
outsb
mov
jbe
imul
add
lcall
xchg
pop
fmull
sbb
jmp
notl
in
jae
jge
les
subb
pop
ljmp
jno
sub
xchg
sahf
outsb
faddl
insb
or
jle
adc
mov
stos
push
jb
jecxz
pop
mov
jnp
xchg
pop
mov
mov
xor
sbb
aaa
push
push
or
mov
fwait
insb
mov
mov
lret
clc
mov
out
imul
bound
jae
adcb
pop
cmp
int3
insb
lds
push
mov
movsl
adc
fildll
ret
int
leave
cld
aad
sub
not
out
and
cs
push
sub
fistl
inc
sbb
and
daa
xchg
push
sbb
inc
mov
sbb
adc
xor
sub
movsl
lea
nop
pushf
rcrb
fwait
sub
lahf
dec
ss
adc
push
pop
push
push
mov
mov
orl
sbb
jecxz
mov
mov
dec
and
pop
xchg
js
inc
shlb
xor
add
pop
mov
std
outsb
dec
pop
cmpsl
data16
bound
imul
cld
add
push
xchg
leave
movsl
sar
and
addr16
rcl
jg
fwait
inc
and
push
or
ss
pop
inc
ljmp
rol
mov
aad
xchg
sbbl
push
add
leave
es
dec
vcvtsd2si
mov
mov
jmp
mov
scas
inc
outsl
out
imul
pop
inc
pop
xor
sub
mov
add
into
mov
jg
jmp
cmp
mov
repz
lods
mov
mov
inc
scas
xchg
jo
mov
mov
rcrl
das
imul
addl
cld
scas
incl
dec
mov
sub
push
pushf
jns
jbe
cmp
test
jg
adc
test
sbb
shll
jp
ljmp
jno
cmpsl
in
out
scas
xchg
jb
pop
out
adc
orb
jae
mov
xorb
inc
and
les
in
mov
pop
lods
add
sbb
outsb
stos
inc
adc
mov
test
stos
jne
adc
pop
cmp
js
mov
cmpsl
iret
sbb
fdivrl
sbb
push
add
ret
aam
stc
jmp
loope
jp
xorl
ret
cld
and
mov
call
push
pop
and
jo
mov
push
pop
divl
add
sahf
xchg
loop
imul
push
adc
les
fiadds
orb
xchg
jo
rcl
and
mov
xchg
or
pop
cwtl
cmc
sub
in
dec
inc
rorl
ss
jg
cmp
bound
add
loop
out
or
pop
movsb
negb
inc
loopne
shrb
loop
push
lock
xchg
sub
test
in
dec
xor
aam
add
rcrb
adcb
cmp
lret
repnz
shrb
cmp
add
or
cwtl
pushf
xor
pop
subl
xchg
mov
iret
idivl
xor
jl
data16
ss
fldenv
inc
fnstsw
push
pop
lods
mov
loop
mov
insl
test
mov
pop
cmp
mov
or
mov
or
outsl
mov
or
mov
or
insb
outsb
mov
sub
sbb
sub
xor
push
xchg
jle
adc
movsl
pop
sbbl
xchg
mov
dec
xorb
pop
pop
sub
fiaddl
je
push
nop
sbb
dec
loop
inc
pop
pushf
mov
mov
mov
loopne
add
daa
pop
out
or
adc
sub
fidivs
sbb
sbb
rclb
push
pop
and
ss
mov
mov
or
xor
sub
add
push
xor
loope
pop
cs
mov
xchg
hlt
sub
xor
popa
cltd
xor
cmp
mov
ljmp
scas
add
push
sbbb
jmp
lock
sbb
jg
jmp
jne
xchg
push
or
icebp
push
sbb
pop
aad
jb
adc
outsb
testl
call
dec
loop
or
stos
jno
subl
addr16
pop
mov
out
dec
hlt
dec
push
inc
rorb
push
mov
daa
sbb
cltd
pusha
popa
nop
rolb
fimuls
inc
iret
icebp
or
in
sbb
fcos
pop
sbb
aam
out
sub
push
lcall
js
cmc
subl
loop,pn
add
inc
jp
mov
cmp
xor
pop
aad
mov
das
lods
jmp
sbb
jb
lds
sbb
data16
xchg
inc
scas
mov
lret
push
insb
jle
or
rol
cmp
je
pop
push
lcall
push
mov
adc
cmp
insl
les
pop
xor
ljmp
bound
fbld
cld
inc
xchg
cld
dec
add
inc
cltd
lods
ret
add
xor
js
sub
fcomip
inc
dec
xchg
jno
adc
aaa
insb
in
add
icebp
enter
jecxz
cmc
inc
mov
in
sbb
jp
lcall
lcall
push
cmc
push
cwtl
ljmp
jp
sysenter
dec
add
lock
jnp
daa
jle
inc
sahf
adc
mov
ja
lds
xor
rdmsr
decl
lea
fcoml
adc
xor
fsubrs
fs
mov
sub
mov
adc
or
add
cltd
push
add
jecxz
ficoml
and
neg
pushl
popa
clc
test
std
lods
mov
or
xchg
and
cmp
int
jmp
mov
jbe
lods
loope
sbb
jo
out
cmp
testb
loop
sub
sahf
and
pop
xor
sub
push
push
and
je
test
and
push
rcll
fcmovnbe
sti
and
loopne
fimull
mov
scas
and
jno
cmp
test
test
or
mov
scas
push
in
pusha
lcall
aad
mov
out
adcl
adc
push
in
xor
shl
xchg
in
insl
mov
add
pop
cmpsl
mov
mov
stc
sbb
clc
mov
sbb
cmp
mov
test
push
into
xchg
mov
and
fld
les
sub
dec
mov
lahf
out
mov
jbe
adc
push
mov
imul
mov
dec
pop
daa
pop
nop
enter
leave
xchg
jmp
test
push
sbb
test
mov
stos
inc
cs
mov
mov
cmp
call
mov
aam
push
popa
imulb
xchg
pusha
push
nop
mov
xchg
es
outsl
xchg
sbb
enter
xchg
pop
jbe
add
test
xchg
add
mov
shl
scas
adc
jecxz
pop
add
inc
ljmp
sarb
je
jmp
dec
imul
repnz
jne
jg
std
jo
shl
xor
rorl
add
push
inc
mov
xor
inc
es
mov
push
inc
hlt
es
xchg
test
mov
loop
xor
icebp
mov
aas
add
or
cmpsb
jle
hlt
pop
inc
in
push
rcrb
mov
or
pop
fidivl
cmp
push
lahf
sub
ljmp
jae
xchg
nop
mov
imull
lods
xor
dec
sbb
pop
xchg
jo
fucomip
push
std
into
or
insl
pop
in
mov
xchg
add
mov
push
cmp
sub
shrb
fwait
xorps
add
dec
xor
cmp
cli
test
pop
iret
xchg
push
rcll
shrb
rcrl
fcomp
inc
enter
cmp
nop
jo
mov
cld
mov
pop
xor
je
mov
mov
push
or
xor
mov
lds
enter
cld
notb
scas
dec
inc
adc
pop
ds
mov
fstpl
mov
inc
outsl
fidivrs
xor
ds
or
fbstp
cmp
fsubp
fisttpl
add
js
fstpt
bound
xchg
inc
lcall
mov
in
inc
daa
and
inc
xchg
js
xchg
lcall
std
sbb
dec
jb
pop
jp
rcl
push
clc
cmp
cmpsl
dec
mov
int3
mov
or
sbb
mov
and
jo
icebp
stc
xor
jmp
movsl
out
xor
jl
inc
dec
adc
pop
or
imul
adc
and
pop
sub
ret
stc
int
cltd
std
pop
xchg
data16
xor
jne
imul
int3
fldenv
mov
sub
jne
pop
mov
je
inc
outsb
xor
mov
jecxz
jle
xor
sbb
ja
xlat
mov
or
out
and
cltd
sub
fidivl
fyl2xp1
std
mov
pushl
xor
xchg
sahf
cltd
rcrl
adc
adc
xor
cs
roll
dec
aaa
fsubs
mov
mov
shll
mov
jne
mov
rorb
lock
xchg
dec
hlt
mov
fdivs
popa
pop
inc
push
sbb
lahf
xor
jg
hlt
push
in
sub
add
jmp
adc
movsb
pop
aam
add
pop
push
push
jg
add
mov
push
cld
add
inc
test
mov
sti
mov
dec
adc
inc
jl
clc
pop
add
dec
sub
add
clc
clc
pop
popa
cmp
pop
cmp
cmpl
push
add
cmp
loop
cmpsb
in
mov
xchg
add
pop
xor
popf
cmp
sbb
pop
or
mov
mov
mov
jae
adc
mov
test
mov
mov
mov
jb
cmp
sub
and
inc
ss
out
call
insb
pusha
add
iret
add
mov
das
shl
lahf
lods
dec
push
pop
rcl
adc
mov
add
dec
cmovbe
pushl
xor
rcrl
gs
push
xchg
ja
pop
jle
dec
xor
or
les
add
jnp
dec
mov
mov
jg
mov
addb
mov
mov
xor
in
inc
dec
xor
pushl
xor
lock
fisttpll
sbb
fwait
jne
jae
sub
xlat
ret
sti
inc
xor
jecxz,pn
popf
jecxz
and
dec
add
out
push
shlb
gs
insb
into
cmp
movsb
daa
cmpsl
adc
test
mov
mov
and
les
mov
idivb
cmpsl
nop
pop
dec
icebp
stos
pop
cs
mov
add
es
ja
hlt
dec
mov
jp
mov
push
sahf
das
icebp
rolb
cmpsl
push
sub
add
sub
icebp
test
jl
sub
fsubrl
sbb
push
jecxz
js
xor
out
xchg
fstps
pop
mov
ret
push
dec
or
jae
push
fcomps
sti
enter
movsl
rorl
fnstenv
sbb
or
mov
sub
push
pop
popf
dec
jo
cmpsl
mov
jl
mov
add
mov
insb
adc
push
pushf
and
adc
cmpsl
pusha
xor
pop
jmp
sbb
mov
push
adcl
mov
sti
or
inc
daa
lods
xor
ja
sar
movsl
mov
lods
test
repz
scas
call
repnz
mov
adc
pusha
stos
lock
push
push
test
xchg
scas
leave
insb
jae
lahf
mov
cmp
add
int3
push
hlt
dec
mov
cmp
insl
cmpsb
idiv
fwait
jbe
add
ret
aam
rorb
jns
shrb
fwait
nop
mov
xchg
ret
aaa
or
push
sub
ffreep
mov
pop
inc
jae
std
inc
sahf
jl
sub
push
adc
mov
lods
mov
mov
nop
cwtl
fwait
adc
adc
sbb
xchg
fsts
dec
movsb
add
push
xchg
and
in
das
and
enter
cmpsb
fwait
add
inc
fcoml
stos
gs
and
ljmp
hlt
je
clc
push
xor
push
cmpsb
negb
push
cwtl
cwtl
jae
mov
pavgw
xchg
mov
or
js
sub
bound
mov
sbb
push
pop
lods
add
fxam
jo
cmc
fildll
push
loopne
sbb
sub
aad
mov
xor
sar
inc
mov
cmpsl
dec
xchg
aaa
iret
aas
jp
dec
fstp
xchg
mov
out
pop
xor
lock
incb
push
or
call
sbb
movsb
sbb
sahf
jecxz
cmpb
aam
shlb
sbb
pushl
jo
cli
fwait
adc
stos
and
js
adc
popa
inc
sub
lods
mov
arpl
sahf
sub
cmc
je
aam
mov
push
dec
jecxz
mov
cmp
jg
push
sub
scas
jb
sahf
popf
pop
loopne
int
and
aas
mov
icebp
fidivs
xor
rdpmc
ret
inc
push
gs
fisubl
arpl
adc
sbb
or
inc
jb
mov
xlat
aas
adc
push
mov
fldcw
fs
fwait
mov
and
andl
inc
int
aas
add
fnstcw
jbe
mov
ss
sub
jecxz
loop
sahf
addl
adc
stos
xchg
xor
add
jns
jae
sar
mov
imul
dec
insl
pusha
xchg
or
shll
xchg
call
js
js
inc
push
push
push
xor
sub
adc
into
test
push
stos
sub
pop
fbld
xor
imul
pop
stos
ljmp
mov
cmpsl
cltd
or
mov
mov
xchg
ja
jg
idiv
add
cmp
jg
addr16
dec
push
aaa
test
pushf
adc
repz
cmp
inc
lods
lock
or
adc
xchg
mov
cmc
xor
add
and
insl
test
inc
leave
imull
and
inc
xchg
ror
or
mov
cmp
cli
cmc
das
lcall
mov
loope
jl
and
push
sbb
or
out
inc
pop
arpl
call
rorl
addr16
insl
jo
hlt
xchg
sahf
mov
jp
aad
aaa
scas
adc
inc
cmp
pusha
mov
push
test
jne
subb
push
loope
pop
xchg
aas
in
xor
push
lcall
xor
adcb
shll
inc
iret
movsl
adc
sti
xor
enter
sbb
ss
add
mov
dec
stos
sub
ljmp
fwait
add
je
jmp
adcl
xchg
sub
imul
mov
push
lock
xor
in
cmp
push
sti
fprem
incb
ljmp
testl
fs
cbtw
sub
call
cmp
mov
inc
repz
loopnew
adc
push
scas
out
into
sahf
dec
sti
mov
rclb
jbe
sbb
xchg
xchg
ss
outsl
dec
lea
sbb
les
push
push
xchg
test
xor
loopne
aaa
popa
xchg
xor
adc
pop
and
xchg
fs
push
imul
sub
pusha
pusha
pop
mov
pop
lahf
and
jg
sti
fwait
imul
jecxz
lcall
fs
insl
xor
xchg
mov
mov
mov
mov
jns
jbe
pop
cmpl
insl
js
incl
test
clc
cwtl
inc
sub
jmp
dec
inc
mov
sbb
pop
lea
aaa
xchg
inc
jno
inc
sub
unpckhps
leave
cli
mov
add
sub
je
mov
push
aaa
lea
jo
fcoml
std
adc
jle
pop
and
adc
shlb
or
xchg
test
inc
cld
add
dec
stos
push
aaa
mov
aam
lret
jecxz
push
pusha
lahf
sbb
push
xchg
es
fcomps
push
adc
mov
out
inc
aas
ja
pop
loope
push
cmpsl
jne
sbb
pop
daa
insb
incl
xchg
cmp
jmp
cmpl
dec
dec
add
aaa
clc
outsb
xor
dec
mov
sbb
fidivrs
cmpl
fiaddl
dec
ret
imul
lds
jo
mov
sub
shrl
push
add
sbb
clc
pop
add
mov
std
sub
shrb
xor
or
aam
pop
cmp
jbe
add
aaa
cmpsb
aaa
pop
pop
dec
push
ret
mov
les
xchg
pop
call
hlt
pop
jmp
ds
mov
cmp
cmp
shlb
jno
mov
std
out
or
nop
dec
lcall
inc
test
push
fisubrs
incb
jne
arpl
ljmp
jbe
add
jmp
stos
pop
sbb
mov
inc
push
push
dec
mov
mov
sub
pop
add
pop
setg
ljmp
jmp
sub
pop
lods
xchg
pusha
cmc
rorb
mov
shrl
pushf
popa
fsubrs
dec
adc
push
aam
clc
dec
loopne
pop
stos
cmp
jo
sahf
mov
in
push
jmp
sbb
cmpb
ror
or
call
cs
adc
cmpsb
push
push
call
inc
jge
ret
in
daa
and
xor
das
enter
mov
sbbb
stos
fadds
test
lock
pop
dec
rolb
int3
mov
adc
lcall
jecxz
hlt
sub
pop
dec
dec
lods
cld
call
pop
sbb
fucomip
pop
pop
lcall
leave
jbe
mov
xor
in
int3
test
and
sarl
mov
mov
test
cwtl
sbb
dec
ja
or
jle
sahf
sbb
mov
outsl
cmp
jne
push
shlb
add
loopne
pop
or
iret
pop
sub
push
outsb
jmp
lea
mov
mov
insl
xchg
je
jo
sbb
mov
sbb
test
sbbl
add
inc
pop
cld
aam
loope
repz
add
movsl
jnp,pt
mov
std
push
loopne
sub
mov
mov
inc
cmc
and
incb
nop
pop
pop
push
fbstp
cmp
roll
mov
popa
pop
jmp
pop
leave
mov
lods
es
mov
shlb
scas
or
add
mov
mov
adc
sub
add
ljmp
lea
mov
fs
mov
or
and
sbb
test
mov
scas
stos
and
and
jns
push
pop
in
movsb
hlt
bound
xchg
lret
inc
hlt
xor
imul
aas
push
mov
mov
std
fdivl
movsb
imul
push
nop
cmp
fimull
fiaddl
and
and
cltd
mov
filds
cmp
in
dec
mull
enter
or
sub
cwtl
or
out
fsub
in
rcrb
push
into
cmc
xor
push
sbb
clc
adc
orl
shlb
adc
aas
nop
nop
sbbb
cwtl
outsb
dec
jae
pop
and
cld
nop
pop
je
jno
cmp
jo
cmpsl
lock
dec
xchg
adc
sub
xchg
sbb
sub
std
decl
cmp
int3
filds
out
add
les
or
cmp
sbb
inc
loopne
add
incb
jl
pop
jns
xor
mov
or
sub
lock
out
imul
and
jl
rcr
push
movsl
ja
lock
and
inc
sub
pop
js
pop
dec
scas
sub
xor
ljmp
cmp
movsl
adc
adc
jmp
dec
jbe
dec
dec
nop
call
scas
fdivl
push
mov
inc
xchg
incb
dec
push
mov
dec
jb
xchg
rorb
repz
fs
dec
cwtl
mov
out
out
and
notb
into
call
mov
mov
mov
inc
pusha
dec
imul
adc
mov
inc
push
sbb
addr16
mov
shll
iret
pop
xchg
lret
lods
sbb
jg
mov
xlat
jb
cwtl
cmp
cmp
lods
lret
out
loope
arpl
stos
enter
sarb
pop
jl
cmp
sarl
out
stos
out
mov
push
inc
test
and
fdivs
in
jbe
add
mov
pop
sahf
xchg
add
cmp
imul
jno
inc
adc
jb
call
mov
stc
cmpsl
subb
xor
lods
cmpsb
cltd
pop
mov
cmp
sbb
sar
in
loop
mov
push
inc
enter
sbb
mov
adc
xchg
in
popf
add
xor
adc
inc
pop
push
movsb
inc
and
ja
daa
adc
call
dec
pop
xchg
cmpsb
inc
fistpll
lods
cmp
adc
dec
lds
cmpps
mov
pusha
push
jg
xchg
add
push
fiadds
aam
dec
sbb
sub
add
cmp
pop
add
and
pushf
mov
or
push
jl
stos
jo
pop
pop
pop
jb
and
sbb
or
cmp
lea
xor
sub
enter
icebp
jg
sarb
jns
movsl
sarb
add
lcall
lea
push
loope
xchg
ret
push
xor
pushf
mov
outsb
pushf
mov
inc
jae
pop
out
outsb
cmp
sbb
add
nop
or
cmp
loopne
mov
int3
push
into
sahf
rcrl
out
push
ss
adc
dec
mov
push
fistpl
pop
inc
adc
cmp
jg
xchg
movsb
xchg
add
arpl
mov
call
call
xchg
add
pop
dec
dec
or
sbbb
cmpsb
cmp
lcall
std
mull
xchg
add
addb
test
mov
in
dec
push
sahf
aas
test
sub
or
inc
ss
adc
cmp
add
push
jl
ds
xor
add
outsl
jle
hlt
mov
xchg
leave
jne
shll
jecxz
test
pop
jg
jmp
xor
add
mov
lock
mov
sbb
jnp
sub
sub
outsl
jg
insl
mov
mov
mov
add
mov
cmp
jmp
xchg
mov
es
aas
cmp
jg
xor
inc
pop
mov
jno
sub
js
cli
xor
cmc
sbb
or
xchg
add
jge
push
loopne
out
or
dec
leave
mov
sbb
inc
push
test
dec
mov
ds
fdivs
jmp
mov
ficomps
and
daa
push
mov
lock
mov
inc
bswap
in
cmc
push
jecxz
pop
out
roll
jns
incl
sbb
and
xor
sahf
in
jo
ljmp
adc
lock
push
stos
mov
jo
ret
mov
fdivr
aas
rolb
int
jl
js
inc
add
mov
aam
fcomip
xchg
sti
in
insb
or
scas
outsb
push
std
push
test
adc
idivl
mov
pop
mov
dec
in
movsb
lds
mov
cltd
bound
fidivrl
sbb
aas
int3
mov
icebp
jmp
sub
jle
ljmp
mov
mov
push
insl
aad
inc
insl
dec
stos
loopne
rcrl
lock
adc
jnp
and
sar
add
movsl
clc
aas
and
test
pushl
ficoml
dec
jae
es
test
adc
sar
stos
pop
pop
mov
inc
pop
mov
inc
addr16
fmuls
orl
les
je
loopne
ror
xchg
imul
xchg
add
mov
xor
push
inc
mov
adc
cld
jmp
mov
lcall
stos
mov
xor
mov
je
stc
mov
enter
int3
inc
pop
pusha
adc
setge
popa
and
int
loop
and
push
movsb
inc
ljmp
and
push
mov
or
clc
scas
loop
jle
fisubs
or
lock
outsb
clc
ja
loopne
push
mov
rolb
add
insl
push
inc
jecxz
mov
inc
mov
inc
dec
mov
sbb
sub
sub
movsb
ret
out
jl
cmp
xchg
adc
jmp
test
push
lds
fisubrl
sbb
fnstcw
sbb
movsl
mov
fnsave
add
mov
aad
add
fwait
mov
dec
lea
sub
push
lock
pusha
xchg
dec
dec
loope
mov
outsl
data16
inc
aaa
dec
ffree
fnstenv
fs
push
lcall
movsl
in
lods
mov
lcall
mov
and
movsl
sbb
movsb
inc
outsb
mov
test
pop
push
ljmp
add
sbb
inc
shrb
xchg
ds
sbb
or
sub
jo
adc
push
aaa
lock
mov
pusha
popf
mov
setl
jo
mov
mov
nop
daa
jno
pop
cld
cmp
popa
add
adc
push
out
pushf
ljmp
lods
mov
mov
outsb
int3
icebp
unpckhps
xor
shll
cmp
js
inc
ret
cmp
bound
rorl
decl
inc
mov
je
mov
movsb
jmp
mov
cmp
clc
jg
push
cli
rolb
push
jl
and
mov
inc
in
ds
int
xor
dec
imull
adc
xchg
mov
sbb
rcrb
insl
in
lods
mov
hlt
xorb
lret
scas
call
les
jnp
ss
std
sti
jb
pop
out
cmp
hlt
and
push
or
mov
push
test
cmp
je
pop
cwtl
or
jl
outsl
mov
ljmp
jae
stc
add
push
dec
dec
adc
ljmp
popf
pop
sub
ljmp
sahf
inc
inc
jecxz
sbb
incl
outsb
pop
mov
rorb
mov
je
xor
pop
cwtl
ret
jmp
jg
dec
fsubrl
sub
xchg
outsb
fs
mov
jl
push
call
sbb
hlt
cmpsb
jmp
ds
dec
mov
xchg
add
repnz
mov
incb
shlb
xor
pop
sbb
cmc
jmp
sbb
xor
push
outsl
mov
xor
xor
mov
jg
sahf
or
sbb
dec
add
movsl
incb
xchg
pop
xchg
std
cli
dec
aam
ret
mov
push
fisubrs
push
or
push
test
or
clc
aaa
or
fmul
jl
add
les
or
or
mov
mov
add
lods
in
mov
sub
push
jg
dec
daa
pop
mov
fcmovb
jae
mov
adcb
imul
sbb
xor
cltd
fs
jmp
test
push
fistps
push
or
push
mov
sub
sarl
and
jg
jae
sbb
mov
cwtl
rorb
sub
jmp
pop
add
loop
jns
cmp
jmp
scas
pusha
mov
shrb
pop
add
fisubrs
or
inc
adc
popa
or
sahf
push
insl
xchg
adc
mov
mov
pop
out
pop
roll
jl
es
xor
in
inc
jae
pop
cmp
test
mov
adc
pop
add
sub
fistpl
test
sbb
aam
mov
cmp
cmp
and
ret
daa
addb
jns
sbb
pop
int
stc
mov
lret
and
scas
clc
clc
mov
adc
push
lds
push
xor
mov
cli
scas
add
mov
scas
les
es
dec
sub
std
jbe
das
push
mov
subl
imul
mov
fisttps
mov
test
xchg
pushf
mov
cmp
sahf
ret
pop
xlat
jge
inc
mov
cmpsb
stos
adc
inc
mov
fiaddl
xchg
dec
cmpsl
testb
ja
mov
or
push
or
jne
xchg
push
out
sub
sbb
das
mov
cltd
adc
sbb
nop
pusha
xor
xchg
lcall
adc
pop
dec
mov
sbb
sub
adc
les
mov
js
mov
sbb
mov
jne
xchg
push
mov
aad
inc
jl
scas
xor
jg
inc
or
cwtl
daa
cmp
int3
and
add
aam
pop
cmc
sbb
aas
add
dec
inc
or
fldcw
adc
jp
mov
inc
pop
cli
add
enter
call
rcrb
adc
shrb
and
pop
sub
sub
or
cmp
or
sub
mov
ret
test
pop
pop
jne
ljmp
std
scas
cmp
mov
imul
adc
pop
mov
jb
pop
jmp
aas
add
jecxz
mov
out
and
xchg
adc
test
rcll
ss
stos
loope
pop
sbb
mov
lcall
pop
cwtl
in
neg
arpl
cmp
adc
fcomps
pop
add
repz
sub
inc
and
mov
outsb
and
mov
imul
fldenv
push
jnp
or
fdiv
xlat
mov
push
push
sub
rorb
pop
pop
xor
stos
int3
aas
aam
mov
roll
cli
mov
mov
stos
dec
int3
jl
ret
rorl
sbb
inc
fcmovnbe
xor
lret
repnz
aaa
pop
xor
dec
sub
sahf
ja
pop
sar
mov
sbb
push
mov
jne
loopne
add
jno
int3
aaa
jbe
xchg
aaa
stc
jp
loope
cli
adc
xchg
xchg
test
mov
add
and
clc
pop
push
hlt
movsb
lret
out
test
inc
xchg
xor
add
or
nop
push
mov
push
jecxz
in
mov
shrl
dec
adc
sub
cli
out
pushf
pushf
pop
in
adc
sar
adc
inc
dec
jmp
sub
mov
cmovle
push
repnz
imul
jp
jp
aas
ss
cmpsb
xor
outsl
xor
std
scas
cmp
enter
add
sbb
leave
push
fs
adc
adc
cs
cli
mov
dec
pushf
sub
pop
sbb
pop
in
push
jbe
out
sub
int
inc
out
iret
bound
les
push
loopne
pop
xor
insl
push
push
loopne
xor
sbb
dec
mov
mov
mov
mov
out
daa
or
inc
inc
push
mov
loop
aaa
in
adc
stos
sub
cmc
push
dec
push
and
idivb
or
adc
mov
or
inc
pop
mov
xchg
rol
jg
gs
sbb
into
sahf
jno
stos
adc
mov
addb
lcall
adc
inc
sbb
mov
cli
mov
mov
push
push
adc
mov
test
mov
adc
cli
std
fs
xlat
loop
jle
sbb
popf
dec
insb
fistpll
sbb
mov
sub
xchg
test
jg
inc
mov
cmpsl
sub
ljmp
aam
shrl
xchg
test
test
aam
iret
xor
sbb
into
hlt
hlt
jno
add
mov
sub
push
dec
push
jp
inc
sbb
popf
orl
in
or
jmp
mov
jecxz
pop
outsb
xchg
and
cli
stc
mov
div
mov
push
adc
jne
outsl
push
mov
int3
pusha
test
lahf
mov
jecxz
rol
popa
pop
je
pop
mov
inc
inc
fdivl
cmp
out
jle
loope
call
cmp
rcr
pop
sbb
push
dec
in
cld
push
sub
call
lret
js
das
push
dec
sbb
xchg
std
inc
adc
mov
dec
xchg
inc
xchg
fsubl
mov
cmc
lock
push
cs
jo
fdivrp
jno
loope
pusha
adc
lock
jno
mov
dec
pop
outsl
loop
std
fwait
mov
cmp
ds
sbb
data16
push
lret
add
aam
inc
mov
xchg
test
dec
rclb
imul
stos
imul
ret
ss
adc
icebp
push
jno
frstor
je
dec
filds
xchg
out
xchg
or
call
femms
mov
clc
jmp
loopne
je
jno
add
sbb
call
pushf
test
lcall
std
scas
push
or
cmp
cmpsb
dec
mov
sub
lret
cmpsb
out
jb
push
std
roll
xchg
pop
int3
sbb
call
add
shrb
xchg
sub
add
lods
aaa
jl
push
movsb
enter
out
cmp
push
push
dec
pop
andl
xchg
pop
xchg
pusha
dec
repnz
shr
cmpsb
mov
inc
loop
mov
in
mov
xchg
sbb
sbb
imul
adcb
xor
push
test
mov
rcrb
mov
push
out
mov
scas
pop
enter
popf
mov
mov
xor
xor
or
xchg
jl
pop
pop
aaa
int3
ret
insl
pop
prefetchw
hlt
lret
xchg
movsl
ja
sarb
add
mov
fs
cmp
or
lcall
sbb
popf
mov
or
sbb
xchg
sarb
ror
mov
dec
xor
jno
insb
or
xor
cmpsb
mov
xchg
test
lret
call
or
leave
xchg
aas
pop
mov
cld
jo
xchg
cmp
add
out
jle
mov
inc
divb
scas
dec
hlt
mov
sahf
je
dec
cmc
sbb
push
cmpsb
std
bound
pop
pushf
je
xor
movsl
mov
xchg
pop
je
out
loopne
xchg
push
pop
inc
out
notb
test
pop
lcall
fwait
ret
in
cmp
insb
dec
fucomip
jne
or
sub
shl
add
inc
push
push
inc
adc
lock
cmp
stos
cmp
cwtl
pop
and
pop
aas
loopne
pop
pop
push
cmp
testb
scas
in
cmp
les
ret
jmp
inc
pop
stos
and
xchg
xor
lods
fidivl
in
sarb
rolb
adc
mov
fmulp
add
push
inc
sbb
push
mov
push
mov
mov
gs
or
ja
xor
inc
repnz
lret
lods
or
cmp
add
int
cmp
das
test
push
ljmp
fisttpll
xorl
jb
sbb
cmp
vorps
faddl
jmp
dec
xlat
inc
mov
outsl
adc
inc
dec
push
pop
dec
aas
clc
incl
fcomps
stos
gs
test
cmp
xchg
nop
sub
inc
fsub
jno
pusha
test
ret
cvtps2pi
jae
inc
iret
pop
in
lret
stc
pop
rol
mov
movsb
xchg
sbb
mov
shll
add
xor
cld
int
lods
push
shl
push
pop
mov
fisttpl
ret
loop
sbb
jno
ljmp
loope
adc
mov
adc
popa
mov
push
lret
inc
pop
push
sub
aam
jg
data16
and
mov
roll
push
hlt
fadds
jecxz
xor
fldenv
shrl
fdiv
mov
mov
popa
sub
jmp
popf
lods
leave
inc
icebp
aaa
add
lds
add
inc
inc
or
inc
fmuls
fadd
getsec
fnstsw
cmp
and
aaa
and
ret
subb
out
das
clc
and
int
jae
addb
hlt
sub
test
fdiv
push
call
cmp
cli
xor
stos
popa
add
sub
std
outsl
mov
lods
jns
negl
test
clc
or
pop
xlat
mov
jge
jp
leave
jo
cmp
andb
loope
push
leave
adc
sub
jecxz
pop
or
cmp
sar
or
pop
sub
sarb
xchg
call
dec
push
mov
mov
scas
aas
or
mov
cmp
inc
in
aas
cwtl
bound
clc
jns
push
ljmp
or
jl
mov
jg
add
mov
decb
push
jp
clc
mov
add
mov
insl
cmp
push
inc
xor
push
enter
adc
in
sbb
std
pop
add
inc
mov
xchg
daa
leave
popa
in
test
sub
dec
fwait
cmc
call
push
mov
xchg
lds
aaa
dec
fidivl
in
sbbb
xchg
test
int3
movsl
std
dec
pop
mov
pop
dec
in
add
lea
test
mov
jmp
icebp
aad
addr16
ljmp
jg
sar
pop
xchg
dec
enter
xlat
mov
push
lcall
es
cmp
push
mov
jge
das
inc
and
mov
push
es
jmp
incl
mov
sbb
jg
lahf
xor
pop
add
stc
scas
mov
je
lods
js
mov
mov
std
pop
cld
lret
inc
in
rcl
sbb
and
mov
mov
popf
imul
popaw
xor
xor
cmpsl
pusha
xor
cmp
mov
aad
inc
popf
or
test
cmc
mov
imul
add
and
adc
movsl
pop
out
movsl
mov
mov
and
in
mov
and
dec
mov
push
iret
pushf
fiadds
or
jns
pusha
or
jmp
push
xor
jge
cld
fnstsw
and
dec
loope
jne
xchg
jns
xor
cld
popa
popf
fcomp
test
jle
mov
inc
dec
mov
adc
fs
in
stos
mov
lcall
inc
cmc
jg
sbb
shll
mov
xor
cmp
cs
jg
dec
insb
in
push
add
filds
stc
js
fmull
test
cmpsl
xor
pop
pop
scas
lret
jne
or
lods
ss
pop
les
insl
call
enter
popf
ds
and
stos
and
mov
cld
iret
ds
or
xchg
lea
sar
sti
test
mov
lea
pop
inc
clc
adc
in
inc
dec
mov
jnp
popf
cmc
sub
sbb
leave
roll
add
push
jecxz
inc
sub
jmp
adc
pop
mov
icebp
xor
fsts
mov
insb
ljmp
pop
inc
push
add
incl
sbb
pop
xchg
jle
xor
icebp
out
pop
dec
lea
xchg
aad
push
or
orb
sarl
jge
sub
mov
cli
fstpt
mov
add
mov
popa
stos
push
shlb
sbb
jb
add
loop
out
mov
int3
push
sbb
repz
mov
fldcw
mov
add
jmp
hlt
add
mov
pop
idivl
pop
test
adc
inc
insb
cmpb
ja
pop
scas
pop
mov
jl
push
xor
lods
pop
sbb
pop
push
call
divl
sbb
test
mov
pop
stos
dec
push
xchg
mov
inc
lahf
mov
shlb
lock
push
cmp
rcrb
xchg
dec
out
inc
movsl
xlat
lret
jmp
xor
inc
fstpl
mov
rcrb
aas
sbbl
sahf
lds
lret
push
sbb
sub
in
add
data16
mov
not
pop
xchg
cmp
sbb
int
lret
inc
mov
mov
mov
sub
pop
cmp
sarb
pop
ss
mov
ret
sub
fiaddl
sbb
div
cmp
mov
push
add
aad
cli
in
scas
inc
cli
mov
adc
mov
mov
andl
jmp
setl
dec
cs
cmpsb
js
xor
sarl
into
mov
ss
test
add
in
fnsave
sarb
icebp
sbb
fidivl
and
pop
stos
iret
pop
jns
push
gs
push
mov
xlat
aam
out
lcall
sub
inc
dec
icebp
aad
inc
pop
ja
jl
cmp
mov
mov
lea
push
std
ret
mov
je
rcl
ficompl
arpl
cmp
movsl
add
mov
jg
cmc
or
dec
and
push
vmread
add
out
pop
lods
sbb
adc
push
movsb
dec
and
sti
mov
movsl
popf
mov
mov
jp
shlb
or
inc
add
pusha
bound
ret
je
or
adc
cltd
fsubrl
shlb
stc
sub
lsl
stos
cwtl
leave
jo
shr
add
adc
fmuls
aaa
and
jno
sub
pop
repz
xor
in
jle
pop
orb
adc
cmpb
adc
xchg
lods
push
ljmp
out
push
adcb
push
inc
imul
cmp
ss
loop
mov
outsl
lahf
push
pushf
jl
lret
push
rclb
mov
sbb
mov
movsl
daa
aaa
nop
cli
fidivs
jl
aas
xchg
imul
jle
mov
sub
scas
xor
xor
fxch
or
adc
dec
push
gs
pop
add
add
lcall
imul
lock
xchg
mov
sbb
cmpsl
lahf
jbe
stos
adc
mov
gs
cs
in
dec
rorb
in
jg
pop
xchg
fists
fisubrl
inc
jno
sub
data16
cmp
cmpsl
jno
push
popf
add
xor
jno
arpl
mov
andl
or
push
shlb
icebp
sub
xchg
mov
adc
sahf
pop
fcoms
sub
inc
imul
or
cmp
aas
mov
js
xchg
add
cwtl
xor
adc
in
jns
pop
cmc
lcall
or
push
sbb
xchg
mov
inc
lcall
xchg
fcos
stc
test
repz
je
mov
pop
test
pop
xchg
cmp
add
cmp
adc
ret
test
sbb
lret
pop
or
dec
mov
and
mov
aas
adcl
dec
push
jge
xlat
mov
lock
or
arpl
push
sub
xchg
jo
decl
push
mov
mov
or
push
xor
jb
call
xor
dec
pop
out
dec
push
repnz
sub
roll
subl
mov
xchg
cmp
xchg
push
cli
enter
push
fisubs
add
insb
xor
add
in
pop
xchg
mov
xor
mov
pop
adc
test
rcrl
mov
das
js
mov
xorps
add
cli
cmp
inc
dec
stos
repnz
fucomip
jecxz
lea
dec
add
in
xlat
adc
or
movsl
jne
dec
test
and
cmpsl
movsl
in
sub
mov
mov
add
xchg
scas
movsb
and
sbb
mov
mov
inc
aam
das
xchg
loopne
xor
repz
mov
jecxz,pt
mov
jno
fidivs
inc
insl
std
push
cmp
cmp
prefetchwt1
insb
and
shrl
cli
test
mov
sbb
ret
push
and
loopne
or
fsubrl
pop
nop
inc
icebp
pop
addl
cmpsb
xor
xor
cmc
mov
ret
pop
mov
add
shll
mov
cmp
jge
jns
cli
and
dec
jbe
push
ljmp
leave
sbb
lods
arpl
xor
push
pop
push
jmp
mul
filds
cmp
divb
imull
pop
lret
imul
cmpl
sbb
popa
ret
movsl
add
outsb
mov
mov
lods
sub
pop
jne
add
adc
call
cmp
cld
mov
jae
popf
test
push
pop
scas
jmp
es
fiadds
aam
inc
out
aas
adc
test
mov
lcall
jns
sarl
popa
inc
std
pop
clc
mov
repnz
and
call
rolb
lahf
jg
push
mov
bound
sub
cmpl
ss
dec
loope
inc
in
mov
aam
jg
cmpb
sub
push
sub
outsb
lret
das
xchg
loope,pn
cmc
adc
xchg
push
inc
out
xchg
dec
sbb
push
int3
sbb
mov
xchg
xor
pop
mov
inc
lds
mov
out
or
hlt
sub
add
in
and
idivl
ficoms
call
fiadds
stos
nop
xor
rolb
lcall
mov
inc
mov
ficompl
mov
xchg
adc
xchg
mov
cmp
or
fstpt
js
cs
cmpsl
aam
das
insb
add
add
jg
xor
dec
pusha
pusha
pop
mov
jae
add
jbe
xorb
push
outsl
call
dec
rcll
pop
outsb
and
into
xor
movsb
sar
jne
sbb
in
and
pop
mov
sbb
popa
or
leave
dec
clc
xchg
cmpsb
sbb
add
cli
in
movsl
xchg
movsl
or
sarl
outsb
cmp
dec
push
insl
outsb
add
outsb
sbb
or
push
insb
pop
or
lcall
shrl
mov
scas
out
neg
js
orb
inc
into
cli
push
jp
mov
adc
fldcw
sbb
imul
in
dec
in
mov
int
data16
cmp
xor
jecxz
push
add
sti
das
outsb
add
pop
pop
inc
jns
mov
call
test
pop
sahf
daa
sub
push
mov
mov
inc
movsl
cli
mov
mov
loop
pop
push
stos
insl
pop
sub
lret
mov
add
loope
adc
xchg
icebp
out
cwtl
adc
and
xor
sub
leave
fsubp
jmp
iret
jmp
pop
mov
xchg
mov
cmpsl
xchg
jmp
mov
pop
sahf
inc
and
mov
mov
add
cli
call
popa
popf
lods
js
xor
and
je
push
pop
add
add
jne
scas
xor
dec
push
mov
or
jmp
sbb
xor
or
adc
rorb
or
leave
call
add
sub
xchg
adc
and
xor
loopne
imul
jo
xchg
push
out
cld
lcall
lea
lods
and
xchg
inc
clc
add
fcomp
in
in
jecxz
mov
das
pop
mov
test
aam
lock
xchg
icebp
jno
arpl
lock
cltd
sbb
mov
movsb
aam
push
bound
or
mov
xchg
iret
pop
dec
test
mov
loop
add
scas
mov
xchg
shl
mov
addr16
in
inc
push
sub
inc
cmp
lods
pusha
sub
gs
test
out
push
jecxz
jnp
pop
dec
mov
loop
stos
inc
addl
push
divps
pop
popa
add
jo
lods
sub
cmpsl
sti
mov
adcl
sub
arpl
inc
mov
lods
orl
mov
push
sbb
cmp
push
enter
test
loop
lods
movsl
inc
pop
jp
lods
cmpsb
pop
jl
jmp
push
flds
loop
rsm
sahf
sub
sub
lcall
mov
add
pop
sub
xor
insb
cli
dec
fdiv
loopne
pop
cld
or
call
sbb
test
in
pusha
push
daa
js
hlt
out
push
mov
adc
mov
imul
lods
add
push
ss
outsb
rep
mov
orl
jl
xchg
sub
mov
xor
xchg
ss
jmp
repz
jmp
pusha
mov
lea
orb
js
adc
xor
adc
test
movsb
jo
out
ja
or
adc
fisubrl
test
pop
add
out
popf
mov
inc
mov
std
fwait
pop
xchg
xchg
shlb
push
add
out
jle
and
push
mov
push
lods
loope
cltd
xchg
sub
xor
lock
pop
fwait
inc
push
bound
mov
pop
pop
fcmovbe
fwait
inc
shll
sub
lods
daa
in
jns
shrl
mov
cmp
decl
int
sub
es
xchg
mov
lods
sar
out
sti
lret
mov
scas
pop
adc
pop
fidivrl
mov
movsl
cltd
pop
in
imul
movsb
test
push
mov
xor
or
cmp
jo
sbb
jo
cmp
jecxz
sbb
lcall
dec
arpl
incb
ficompl
xor
sarb
mov
das
aaa
and
mov
sub
jge
lock
push
pop
push
pop
add
pop
pushf
inc
jns
or
cmc
xchg
xchg
mov
jg
fdivrs
movsb
adcb
mov
stc
jge
test
repnz
movsl
outsl
dec
movsb
adc
or
aam
rorb
add
mov
stos
xor
push
or
outsl
cwtl
pop
fimuls
cmpsb
jbe
pop
lea
push
inc
rclb
jne
cmpl
jg
call
jno
lods
std
sbb
push
pushl
data16
sbb
scas
sub
xchg
mov
cmp
pop
mov
test
shlb
icebp
mov
ds
stos
push
ja
fs
jae
in
scas
pop
sub
jo
sub
pop
cmp
jns
cmpsl
sub
or
cmp
push
add
rcrb
pop
stc
stos
out
fs
dec
lahf
xlat
and
add
icebp
pop
adc
lods
and
push
mov
mov
pop
aas
loop
dec
daa
add
mov
inc
bound
lock
adc
ljmp
mov
std
rolb
cmp
cld
scas
jp
mov
mov
sahf
push
leave
aaa
adc
or
pusha
je
add
scas
mov
sbb
bound
add
hlt
push
scas
pop
or
xchg
lret
cmp
push
add
stos
arpl
xchg
adc
shll
xorl
sbb
xchg
add
mov
mov
or
in
je
xchg
bound
test
imul
pop
sbb
mov
jmp
and
adc
xor
fsubl
jbe
sub
jae,pn
pop
xchg
in
les
jmp
out
xchg
mov
dec
mov
ficoms
sbb
sbb
addl
cmp
ljmp
mov
addl
in
imul
dec
test
cli
pop
mov
rcrl
push
movsl
jnp
in
ss
push
pop
fwait
add
les
leave
xor
inc
adc
sbb
fwait
jo
pop
loope
and
movsb
mov
inc
or
clc
mov
xor
stc
inc
or
pop
nop
in
and
insb
jno
mov
incl
sbb
inc
call
fsubrl
cltd
loopne
push
int
mov
pop
cmpsb
out
ret
xor
add
xchg
xchg
cmp
inc
lcall
cmp
in
jg
ljmp
lock
lea
xlat
mov
xchg
mov
fdivrl
or
in
dec
mov
jle
insb
test
inc
mov
jo
pop
sub
stos
enter
jne
int3
fst
pop
scas
fwait
mov
loop
leave
scas
sub
push
push
insb
push
sub
fidivl
pop
xchg
loop
into
rcl
ret
lcall
or
fldz
jg
lods
cmp
filds
inc
adc
sub
daa
andb
sbb
mov
loope
sbb
outsb
sub
sahf
imulb
push
fwait
fs
repnz
fnstenv
call
inc
dec
push
cltd
sub
dec
mov
dec
fucomi
dec
lret
cltd
test
ljmp
adc
lods
mov
sbb
and
add
fisubrs
push
jl
insl
sbb
dec
popa
jb
subl
pop
ficomps
and
xchg
fs
cmp
cmp
lcall
std
decl
xchg
mov
push
sbb
ljmp
movsb
pop
mov
sub
push
jnp
add
xchg
jl
shll
mov
push
jg
sub
test
xchg
js
sti
pop
dec
pop
jo
pop
push
gs
cltd
inc
mov
call
insb
pop
movsb
inc
sbb
adc
in
cmpsl
hlt
in
mov
outsl
test
rol
cmp
dec
inc
mov
aaa
fwait
sar
jb
jae
lds
lods
push
xchg
mov
gs
sub
notb
or
fstpl
push
cmp
das
push
lcall
inc
pop
mov
mov
mov
adc
sbb
clc
inc
add
movb
repnz
sbb
pop
cli
insb
ja
cli
dec
addr16
mov
cmp
insl
push
repz
adc
dec
scas
push
inc
enter
mov
sarb
dec
jne
xor
daa
xchg
lret
cmp
inc
adc
ror
inc
leave
je
cmc
popf
ss
push
xchg
push
and
scas
fwait
lea
fxch
dec
rcr
add
shlb
pop
in
and
pop
hlt
sbb
lods
js
mov
jno
aad
mov
mov
pop
pop
inc
jge
popf
cmpsl
xchg
mov
stos
or
push
outsl
push
push
cmp
filds
jnp
sbb
ret
pop
sub
test
insl
or
icebp
xor
mov
inc
dec
dec
imul
xchg
imul
lock
hlt
sarb
sbb
and
push
mov
popf
pop
loop
gs
mov
std
insb
mull
je
add
imul
iret
xor
lds
xor
cmp
and
xchg
push
inc
or
shrl
xchg
rcrb
mov
test
pop
pop
imulb
pusha
xor
xor
aam
imul
lods
pop
call
sbb
add
hlt
pop
xchg
fistpll
push
adc
and
std
loop
sub
lock
or
or
pop
cli
lcall
pop
xchg
ror
pop
in
into
dec
cmpsb
dec
test
or
push
or
sbb
mov
and
lock
or
sub
mov
xchg
mov
inc
in
or
cwtl
push
leave
inc
and
dec
clc
fistpll
jno
test
inc
cmpsl
scas
adc
mov
mov
mov
fisubs
jo
add
lds
xor
push
add
test
mov
in
incb
sti
cltd
mov
dec
or
xchg
test
scas
push
push
shr
jno
ret
push
sbb
movsb
lods
or
and
mov
cmp
adc
roll
mov
sbb
jne
jo
cmc
aas
jo
rorb
ret
add
and
sbb
sub
inc
loope
jl
sbb
sahf
inc
xchg
mov
insl
imul
jmp
repnz
test
cwtl
ret
test
iret
pop
aaa
jp
pop
daa
outsb
je
sub
or
loope
outsl
jle
inc
push
dec
insb
clc
or
jne
push
mov
sbb
xchg
lcall
stos
cmp
out
mov
jne
pop
das
jmp
mov
sti
rcl
or
fbld
lret
xor
or
iret
int3
jns
ss
push
cmp
inc
scas
adc
pop
icebp
add
jmp
lock
insl
loopne
test
push
xor
clc
popa
shll
mov
stos
mov
push
or
ret
lods
push
add
popf
andb
xchg
es
cld
fiaddl
jge
jle
jae
xchg
cwtl
dec
cltd
fs
and
sar
xchg
cli
cwtl
push
pop
sti
adc
mov
fwait
inc
loopne
add
ds
inc
out
mov
out
mov
sbb
imul
into
sbb
push
pop
add
or
xor
mov
dec
movsb
mov
ja
sbb
adc
jbe
inc
xchg
jbe
ficoms
push
pop
aam
std
sub
enter
sbb
and
jl
add
out
loop
pop
pop
mov
cwtl
popa
cltd
push
pop
addr16
insb
pop
mov
pop
movsb
mov
pop
mov
aad
mov
imul
jae
mov
incl
mov
inc
add
cmp
fstps
or
mov
loope
lcall
mov
or
dec
jle
test
sub
cmp
sbb
cmp
popa
std
jne
test
ret
ret
dec
dec
xchg
lock
mov
sbb
in
fsubrp
lret
xor
xor
imul
fs
rorl
mov
jg
mov
sahf
adc
push
loop
mov
mov
sub
push
sbb
negb
xchg
adcl
mov
imul
pop
lods
inc
out
sub
push
pusha
xchg
popa
ljmp
mov
or
xchg
loopne
xor
popf
cmp
xchg
imul
loope
fcomip
pop
and
cmp
sub
rorb
jp
mov
dec
pushf
incl
loopne
mov
pop
mov
shll
add
call
andb
jo
orl
pop
incl
test
push
lret
inc
mov
loopne
fimuls
push
fwait
mov
subl
mov
dec
in
cs
fdiv
pop
adc
or
mov
dec
outsl
sub
sahf
fisttpll
mov
dec
bound
daa
add
adc
sbb
push
fs
das
mov
imul
lods
imulb
push
int3
lahf
call
in
fiadds
cmp
das
shlb
je
movsb
test
data16
out
test
add
shll
popf
loop
mov
sbb
push
dec
jne
inc
pop
sbb
or
dec
rep
lea
std
dec
clc
cmp
or
jbe
sbb
sub
stos
and
arpl
pop
sbb
pop
js
iret
ds
pop
mov
lods
notb
aaa
xor
lock
out
dec
add
pushf
sub
outsb
cld
flds
in
out
jo
sbb
inc
out
aaa
sar
inc
imul
int
jp
idivb
adc
or
add
gs
gs
loopne
imul
pop
xor
mov
cmp
jg
xchg
test
xchg
or
cld
sub
mov
rclb
push
imul
push
enter
pop
aam
inc
sbb
mov
test
movsl
xor
or
inc
mov
push
lods
mov
push
mov
loopne
lods
xor
ljmp
fildl
mov
jae
push
and
add
loope
ljmp
cltd
pushf
mov
adc
sub
mov
idivb
test
in
mov
jge
push
divb
mov
adc
outsb
mov
xor
test
sbb
mov
movsl
cmpb
pop
jno
xchg
cmp
push
mov
cmpsb
mov
xchg
mov
clc
and
decl
popa
pusha
insb
push
pop
int
out
stc
dec
rol
adc
pop
adc
stos
or
ljmp
push
sub
pop
adc
aas
mov
les
insb
add
or
cmc
cmp
jl
xor
ja
in
das
inc
movsb
cmp
arpl
test
adc
mov
jl
fstps
pusha
mov
not
lcall
sbb
fs
add
aam
xlat
movsb
mov
incl
lock
push
push
int
jg
mov
inc
ss
out
inc
lods
fistps
inc
pop
mov
std
decl
xchg
mov
je
add
mov
jl
dec
pop
fldenv
das
cmp
adc
outsb
xchg
add
pusha
jne
mov
sub
lret
mov
and
lea
sbb
jp
decl
sub
shrl
dec
xor
mov
inc
jmp
call
aas
adc
jnp
icebp
jmp
jbe
popf
adc
ret
push
setae
mov
outsl
xchg
and
inc
xor
imul
js
testl
jp
testl
clc
rcr
shll
dec
cltd
xor
repnz
push
pop
arpl
xor
push
mov
sub
cmc
xchg
jnp
sti
nop
call
push
movsb
icebp
rcrb
lds
test
and
inc
mov
jns
add
aas
mov
push
sub
jp
cli
inc
call
sbb
incl
shrb
mov
bound
xchg
sub
adc
outsb
adc
scas
fidivl
jp
mov
xor
adc
movsb
adc
add
fimull
out
cmp
push
cmpsb
sbb
jno
dec
sbb
xor
test
aam
mov
ja
push
and
or
cmpsl
pop
sub
dec
push
in
xchg
sub
pushaw
mov
decb
push
cld
mov
rcrl
aad
dec
rolb
out
push
imul
int
add
push
cmc
lods
pop
cld
addr16
in
cmp
ljmp
sbb
adc
call
add
xchg
loop
jae
or
outsb
mull
adc
push
fstpt
mov
sub
dec
loop
bound
add
jecxz
adc
shlb
pusha
out
stos
push
in
push
jnp
mov
adc
jnp
pop
push
adc
pop
dec
sub
jb
mov
jo
or
aam
mov
xchg
jge
das
arpl
stos
lret
jl
pop
xchg
insb
enter
fistps
sbb
adc
mov
loopne
jmp
je
shrl
jno
dec
inc
out
mov
movsl
in
xor
ljmp
aad
popf
mov
xor
pop
js
or
rcrb
icebp
sbb
mov
lcall
cmp
add
sub
repz
xchg
into
lcall
jg
cmpsb
pop
enterw
dec
jl
outsb
dec
outsb
lock
cmp
sbb
xor
les
pop
ficoml
arpl
lock
sbb
jne
xchg
mov
ja
dec
xchg
cmp
aam
mov
cmc
in
dec
out
cmp
sub
add
aas
add
out
dec
jge
and
inc
sub
nop
aad
jg
shll
call
in
pop
shll
ljmp
rcrl
xor
fdivl
mov
insl
sub
pop
daa
data16
subb
dec
push
jnp
and
rcll
adc
cmc
stc
xor
jp
lret
jno
in
iret
sbbl
mov
xor
lods
mov
in
inc
pop
mov
lea
sub
cmc
xlat
fcoms
sub
inc
xor
mov
loopne
xor
mov
lret
rorb
lds
mov
mov
fisubrl
add
pop
leave
sbb
jecxz
sub
mov
cltd
mov
out
notb
xor
cmp
js
popa
push
pop
inc
cli
push
pushf
cmpsb
aas
dec
xchg
fdiv
xchg
subb
fs
iret
in
cwtl
jo
mov
pusha
jmp
fimuls
pop
insl
push
enter
icebp
and
pop
adc
rcrb
push
cmp
ret
scas
cmp
mov
pop
lret
pop
add
pop
xor
sbb
inc
outsl
jg
inc
add
lret
shlb
lret
int
test
aad
fdivr
fistpl
xchg
sti
fisubs
mov
jno
aam
cs
and
add
cmp
lcall
cmp
outsl
fistpll
pop
sub
dec
cmc
push
sti
xchg
mov
in
sarb
fisubrl
shrb
cmpsl
cmpsb
int
xor
inc
fadd
sub
push
pop
pop
fildll
ucomiss
dec
fsubl
ljmp
or
pop
and
push
pop
push
stc
jns
push
jecxz
imul
ljmp
mov
inc
in
fwait
jg
ja
inc
fwait
sahf
fnstsw
addl
xchg
push
in
jmp
mov
jl
insl
xor
push
shl
push
mov
mov
adc
or
or
stc
add
lods
dec
dec
ret
push
xor
std
adc
push
fs
mov
xchg
js
jecxz
imul
ja
cmpsl
xor
xor
aas
cmp
adc
orl
nop
push
lods
mov
and
cli
popf
flds
inc
mov
mov
lods
xor
mov
jmp
inc
loop
ljmp
sti
cmc
out
dec
stc
push
jbe
jg
mov
mov
inc
pop
lods
xchg
enter
sbb
jmp
xor
adc
call
dec
mov
jno
aam
pop
psubusw
and
pop
neg
push
push
cmp
mov
sti
test
daa
and
jbe
test
cli
sub
xchg
mov
pop
or
loopne
mov
repz
js
push
movsb
xchg
jno
mov
sbb
insb
sbb
lock
jnp
cmp
or
adc
add
roll
jmp
sbb
sbb
ljmp
cwtl
jno
leave
mov
movsl
inc
add
test
cld
jg
mov
mov
mov
inc
pop
dec
xor
add
mov
testl
push
cmp
cmp
test
call
stos
push
ret
mov
pop
es
mov
xorb
lds
push
cli
adc
pusha
jo
jmp
push
push
inc
pop
out
outsb
lds
cmp
adc
addl
mov
jae
pop
cs
add
push
inc
loopne
push
pop
not
ficomps
inc
subl
fldt
sbb
test
and
inc
shl
das
pop
dec
test
mov
xchg
and
push
popa
pop
sub
fistl
movsl
jle
push
outsl
loop
xchg
or
add
enter
or
mov
or
rorb
lods
xchg
inc
scas
add
fidivrs
mov
xor
push
push
add
aam
dec
inc
stos
mov
cmp
and
add
jns
adc
sub
mov
adc
inc
xor
push
stc
adc
ficoms
outsl
or
leave
fdivs
dec
and
into
cmp
jp
movsl
add
push
cld
adc
lock
cs
cld
mov
jmp
adc
push
mov
xchg
mov
cld
jo
in
fsubrl
jle
sbb
mov
adc
fmuls
xchg
rcrb
dec
add
xchg
or
repnz
insl
out
ret
cmp
loop
rolb
mov
add
mov
nop
pop
rcll
sbb
lea
clc
orl
lea
mov
inc
lahf
inc
idiv
cmpsb
inc
faddl
out
mov
mul
inc
std
fistl
dec
sub
fs
push
push
enter
dec
sar
and
mov
int3
adc
sbb
insl
mov
mov
fcom
mov
cltd
mov
ret
out
sub
sub
xor
dec
add
add
inc
faddl
add
lds
je
mov
and
imul
sbbl
dec
clc
and
int3
add
adc
loopne
stc
xchg
mov
mov
push
pop
ljmp
mov
push
inc
cmp
cmp
subl
mov
adc
jge
pop
hlt
aam
icebp
mov
xor
push
sbb
out
add
lds
fs
vcvtsi2ss
sbbl
fstpl
cmp
xchg
repnz
out
sbb
push
pop
je
cmc
cltd
ljmp
pop
inc
mov
sub
test
dec
cmp
inc
ja
sbb
aas
fsubs
cmp
fnstenv
inc
scas
arpl
and
xor
push
mov
adc
jb
inc
jnp
xor
shlb
dec
push
sti
incl
xchg
dec
xor
stc
jae
sub
pop
adc
test
enter
pop
popf
sbb
movsb
int3
outsl
jnp
or
outsb
sub
outsl
xor
out
ljmp
push
mov
scas
or
fs
add
scas
ja
clc
mov
cmc
mov
les
push
cld
sbb
cmp
sbb
aas
inc
sbb
mov
test
ss
inc
jl
sub
decl
sbb
icebp
movsb
shlb
fmuls
xchg
and
mov
mov
cmp
les
add
sbb
dec
jmp
jo
sarl
test
cmp
es
xlat
ret
push
jp
jnp
dec
mov
xchg
data16
pop
dec
loopne
dec
repz
imul
push
push
xor
imull
mov
sahf
ror
das
mov
inc
pop
push
inc
int
dec
or
pop
cwtl
push
jne
stos
loope
cmp
mov
clc
push
dec
adc
push
cli
xor
xchg
xchg
pushf
std
sbb
or
adc
push
adcl
push
lret
hlt
cmp
sub
sarl
test
lret
inc
dec
mov
mov
ret
cmc
or
lret
pop
fs
inc
ret
inc
hlt
cmp
outsl
aam
fildll
popf
mov
xor
inc
loopne,pt
push
push
mov
out
in
pop
call
sbb
outsb
cmc
mov
call
sub
cs
rcrl
add
in
cmpsl
push
data16
pop
insl
or
cmc
adc
int
decl
cmp
icebp
mov
add
lock
dec
xchg
hlt
jp
add
pop
popa
loopne
add
xor
pop
or
adc
sub
ret
pop
inc
jo
xchg
and
orb
jecxz
inc
test
clc
mov
call
sbb
add
dec
mov
cld
jg
xchg
push
dec
push
data16
or
ljmp
xchg
loopne
cmp
bound
cmp
decl
out
clc
out
push
dec
jns
cmp
sbb
sub
jecxz
inc
gs
cmp
cs
push
jo
fstp
inc
push
aas
fs
jle
in
sbb
mov
sbb
xchg
sahf
jle
jno
js
mov
dec
fdivrl
pop
mov
test
xchg
int3
pop
cld
rcrl
out
insl
stos
inc
into
shlb
sub
and
roll
xchg
dec
jle
mov
jbe
or
nop
adc
fmulp
cmp
or
jg
loop
inc
push
sbb
daa
dec
std
mov
fmull
add
faddl
fdivl
mov
stos
jl
inc
sbb
adc
add
push
xlat
push
dec
pushf
insl
in
in
inc
cmp
mov
push
pop
dec
pushf
rclb
add
insl
cltd
sub
xchg
arpl
rcrb
jecxz
fisttpl
roll
push
add
clc
or
data16
jo
icebp
mov
sub
out
sbbb
jp
or
add
fisttpl
ja
jne
pop
pop
sbb
push
or
aam
sbb
cmp
icebp
loop
sbb
mov
jp
add
hlt
aas
aaa
mov
sub
xchg
test
mov
inc
icebp
lahf
imul
jg
sub
punpckhdq
or
aam
dec
ljmp
push
jb
adc
xor
jmp
loope
dec
cld
jg
aaa
add
test
sahf
mull
xchg
push
test
jecxz
sbb
xor
int
aad
add
mov
push
push
xor
mov
incl
lea
test
dec
repnz
jp
push
fsubrs
ffree
lea
and
clc
push
push
sbb
leave
insl
data16
clc
je
movsb
addr16
and
push
enter
popa
insb
push
lcall
mov
xchg
pushf
popa
inc
xchg
rcr
les
stos
into
movb
mov
push
xchg
pusha
push
jo
loopne
pop
inc
sbb
sub
stos
mov
rorl
imul
out
out
pop
jb
and
mov
aad
rolb
test
jl
insb
pop
mov
sbb
js
fs
movsb
mov
push
dec
fcmovbe
xchg
xchg
dec
inc
pop
insl
out
or
or
outsb
push
stos
lock
dec
addr16
dec
ja
fwait
pop
lock
push
pop
and
les
xor
out
jmp
test
or
mov
pop
mov
mov
insb
idivb
cwtl
adc
testb
xchg
cltd
mov
insb
adc
push
cld
add
cmpb
dec
push
push
xor
movsl
push
sbb
push
push
fwait
mov
mov
add
sti
jg
xor
or
xchg
xchg
xor
or
daa
lea
ss
mov
pop
movsl
aaa
inc
call
xchg
jg
cwtl
xchg
pop
and
mov
push
mov
sub
clc
ficoml
nop
sti
cmp
clc
mov
pop
ja
xchg
aas
pop
lahf
sahf
cmpsb
rcr
lods
jns
out
ljmp
jg
mov
jg
jl
cwtl
dec
mov
and
in
pop
popf
sub
das
pop
addr16
lahf
dec
jl
imul
cmpsb
xor
or
adc
in
xchg
push
xchg
int3
mov
scas
scas
enter
xlat
jp
or
cmp
inc
adc
or
mov
imulb
xor
jmp
and
add
lret
push
push
cmpl
loop
in
movsb
ja
inc
adc
sub
ja
xor
in
mov
cs
fisubrs
jo
imul
lret
cmp
hlt
push
pusha
int
push
inc
cmpsl
sbb
ja
aaa
jbe
mov
adc
dec
inc
cmpsb
das
ficompl
cmpsb
push
pop
ljmp
and
adc
push
std
aam
enter
inc
ret
add
popa
mov
movsl
call
mov
and
dec
push
loopne
iret
sbb
jb
push
push
idivb
add
add
lahf
xchg
push
sbb
sbb
and
xor
dec
jg
les
sbb
pop
rorb
mov
lods
sbb
decl
inc
in
adc
add
or
or
cmpsb
xor
fcomps
pop
jne
jmp
es
js
pop
cmp
pop
or
xor
lock
sub
pop
cmpb
data16
inc
shl
cmc
mov
mov
push
sub
scas
scas
dec
cld
ja
or
adc
push
push
and
mov
scas
cli
jns
add
or
je
jb
dec
ss
pop
das
add
jb
mov
shll
addb
mov
sub
pushf
nop
inc
outsl
ds
push
fwait
mov
cmpsl
sbb
pop
xor
push
add
push
jnp
sub
fstpt
cmp
mov
je
jge
insl
cltd
imul
mov
pop
cmp
inc
leave
sbb
loope
dec
test
rcr
sbb
clc
mov
popa
push
pop
xchg
mov
add
roll
js
lahf
fwait
or
add
adc
xlat
mov
fwait
push
pop
aas
sbbl
imul
cmp
test
les
outsb
push
leave
jne
jnp
cwtl
lods
fwait
dec
pop
mov
sub
adc
bound
or
add
loop
jle
xor
xor
xor
push
xor
xorb
lds
inc
mov
mov
cmpsb
sub
jbe
gs
loop
rcr
cmp
mov
inc
lock
sbb
loop
adc
out
lcall
out
push
loopne
outsb
lret
push
out
dec
frstor
loop
add
loop
dec
test
mov
sbb
add
stos
sahf
mov
jp
mov
mov
push
fsubp
mov
lock
loop
orl
test
fnstenv
loopne
movsb
outsl
iret
dec
popf
jmp
pop
xor
shll
add
out
sbb
ret
add
push
sub
mov
inc
xchg
xchg
add
xchg
ss
and
pop
ret
sbb
ljmp
ljmp
mov
cmp
outsl
dec
int3
mov
pop
test
dec
sbb
jp
pop
inc
call
bound
or
sbb
sub
pop
clc
sub
push
je
pop
inc
std
mov
cmp
shr
repz
pop
jle
and
je
stos
clc
das
or
lods
and
sub
loop
sbb
mov
rolb
fbld
pop
shll
sub
cmp
jns
loop
sub
pop
or
imull
mov
dec
call
cmp
clc
push
rcr
jns
js
es
xchg
enter
arpl
loop
inc
loop
movsb
mov
mov
fimull
fisubrs
adc
loopne
popa
mov
bound
fdivrs
lret
les
and
bound
xor
movsl
or
xor
loop
jb
sti
push
and
push
mov
add
leave
xchg
push
popa
mov
lds
jge
xor
pop
mov
mov
out
insb
add
clc
mov
dec
mov
inc
push
shrb
push
adcl
sbb
stos
sbb
insb
je
data16
mov
jne
push
jnp
add
test
mov
ret
rcrb
sub
xchg
loopne
push
loopne
inc
xlat
sub
push
call
xchg
pop
ss
mov
ljmp
mov
pop
data16
jb
add
outsb
cmp
lods
mov
cltd
hlt
mov
movsl
adc
faddl
pop
pop
inc
test
adc
ret
imul
pop
push
inc
add
add
inc
or
sbb
push
in
stos
jb
repz
pop
movsb
movsb
mov
jno
jl
idivb
push
outsb
int3
inc
mov
jg
and
lods
stos
mov
sub
or
xor
push
out
pop
outsb
popf
and
mov
mov
mov
mov
mov
dec
sub
cmc
cmp
jle
bound
insb
fxtract
mov
and
test
xchg
hlt
xlat
incb
test
add
adc
jge
das
and
xchg
ja
jecxz
movsb
out
adc
hlt
sub
jbe
adc
fsubs
dec
je
push
mov
mov
std
cwtl
mov
push
mov
hlt
aaa
ja
rclb
inc
es
jno
lahf
in
lcall
mov
add
sbb
pop
and
pop
popf
clc
imul
inc
movsl
sub
pop
adc
ret
shlb
lods
add
test
adc
pop
cmp
mov
stc
jb
and
test
stc
jmp
decl
mov
cmpsb
and
mov
fcompl
adc
cmc
pushl
mov
ljmp
insb
repnz
jecxz
loope
pop
mov
dec
ss
xor
jno
or
jmp
loope
insl
mov
pop
or
repnz
in
cmp
push
xlat
ds
ds
pop
loop
rolb
test
arpl
daa
or
or
sub
out
cmpsl
hlt
jmp
dec
aad
add
imul
ljmp
fldt
int3
fnstenv
ja
bound
mov
stos
shrb
fdivrp
pop
sbb
ror
popf
inc
pushf
icebp
mov
or
jmp
or
incl
js
fucom
cmpsb
dec
cmpsb
leave
mov
aas
loopne
stos
subl
jg
in
repnz
addr16
and
test
ret
and
pop
stos
mov
xor
sbb
aad
xchg
out
dec
xchg
repz
jbe
sub
cmp
cmp
sub
cli
enter
mov
cmp
jmp
pop
jmp
imul
mov
test
sbb
hlt
pop
sub
adc
fcoms
fldt
jnp
and
aad
into
push
ljmp
push
insb
pop
or
icebp
mov
add
adc
scas
and
jbe
jecxz
movsl
xchg
mov
int3
testl
mov
outsl
mov
lahf
mov
sbb
xchg
fidivl
pop
pop
cmpsl
mov
pop
outsb
or
fsubrl
push
xchg
mov
push
into
in
lock
add
xor
pushf
je
mov
es
dec
jo
les
fdivrs
push
js
orl
lahf
std
push
xor
orl
sub
nop
call
stos
rcl
incl
pop
push
mov
dec
sbb
lods
movsl
pop
addr16
and
jmp
mov
mov
adc
stc
outsl
andb
lcall
mov
pop
jl
sbb
xchg
fs
cli
mov
cmpsb
or
mov
cmp
fnstcw
sub
mov
push
mov
cmp
mov
inc
faddl
mov
cmp
ffree
mov
adc
ret
inc
adcl
jg
xor
xchg
mov
pop
movsb
push
pop
in
roll
out
sub
jno
push
jg
fsubr
lcall
cmp
aaa
fists
or
push
and
add
push
jmp
nop
cmpsl
dec
sarb
sub
mov
mov
adc
lock
test
test
mov
shl
adc
hlt
jg
enter
fisubrs
sbb
and
xor
jp
clc
aas
jg
sub
icebp
fmull
cli
dec
mov
mov
sbb
lret
sub
scas
mov
outsl
add
int
ljmp
adc
cmp
lock
fcomps
cli
test
mov
movsb
push
xchg
add
inc
sti
jg
js
mov
insb
hlt
outsl
xchg
xchg
xor
ljmp
dec
inc
cmc
add
inc
stos
test
popf
and
ja
push
add
add
sub
push
dec
or
out
add
mov
push
data16
inc
imul
lods
clc
and
push
not
in
pop
push
enter
orl
aas
test
rol
xchg
arpl
jno
xchg
aad
push
bnd
and
clc
mov
dec
pop
icebp
mov
jae
mov
dec
push
pop
bound
mov
ud2
pusha
mov
imul
mov
jb
pop
pop
push
mov
inc
lcall
sbb
jge
lods
push
push
cli
inc
mov
xchg
mov
or
pop
xchg
push
sub
lcall
hlt
cmpsl
insl
pop
mov
add
push
dec
and
les
test
les
sub
push
pop
shlb
test
xchg
scas
dec
adc
call
sbb
jge
into
test
jmp
fisttps
mov
lea
in
shl
pop
lcall
mov
call
mov
add
or
inc
xorb
cmp
mov
mov
jmp
or
fnsave
jp
pop
insl
and
adc
clc
inc
adc
adc
push
adc
aas
lock
sub
pop
mov
jp
inc
cmp
mov
orl
cltd
dec
jmp
and
fdivl
add
stc
subl
jg
dec
int3
push
addb
imul
notl
inc
pop
or
incl
dec
xchg
stc
push
aad
adc
call
mov
stc
ljmp
push
fucomp
ljmp
mov
jne
xor
testl
je
and
shr
sbb
pop
pop
mov
gs
inc
inc
cmpsb
mov
repnz
ja
lcall
cld
xor
mov
adc
xlat
in
xchg
cmp
jbe
subl
fidivs
nop
lahf
insb
decl
or
stc
fisttpl
sbb
jp
push
stos
cmp
jg
cmp
leave
push
dec
jno
jbe
xchg
test
popa
pop
or
sbb
outsl
jle
mov
inc
fsubrs
sbb
movsb
aas
jecxz
mov
push
add
daa
dec
inc
sbb
mov
arpl
orl
jne
mov
mov
sub
cmp
pop
fistl
clc
jg
scas
sbb
push
xchg
mov
sbb
mov
stos
inc
outsl
out
loopne
shr
int3
jmp
nop
pop
aas
sbb
mov
sbb
jo
subl
cs
popa
cmc
add
rorl
imul
jecxz
sbb
icebp
pop
add
mov
filds
loopne
test
mov
das
xor
cmp
imul
add
jl
ljmp
movsb
and
jmp
and
cmp
or
aam
lock
ret
repnz
fsubs
call
xchg
ret
mov
pop
push
cli
and
hlt
cmp
cmp
popa
idiv
pop
fwait
jne
aas
jg
lea
adc
mov
je
sbb
lods
adc
femms
subb
xor
lcall
fdivp
cmp
leave
dec
push
pop
inc
mov
xchg
inc
outsl
xlat
cmpsl
insl
ljmp
in
out
mov
push
idivb
sti
lods
xor
out
clc
out
xchg
loopne
int
aas
mov
out
and
pop
add
call
fsubs
and
push
popf
mov
adc
cli
or
mov
lock
jp
addr16
or
jmp
pop
ret
jo
icebp
mov
ljmp
sbb
fsubr
cmpsb
call
dec
ljmp
dec
jo
or
or
icebp
or
fadd
push
pop
fwait
dec
push
in
pop
push
fs
xor
pop
testb
shl
adc
xchg
hlt
mov
or
sbb
idivb
ja
fisubl
scas
div
xor
push
xor
mov
enter
push
in
pop
ja
mov
sub
insb
mov
jecxz
add
test
fdivl
icebp
out
lea
rclb
aad
jns
int
js
ss
lcall
loop
movsb
daa
clc
add
movswl
pop
ficoms
jge
pop
dec
add
push
bound
aas
lods
cwtl
pop
movsl
mov
sbb
frstor
cmp
mov
xchg
dec
lcall
popf
sbb
jmp
lcall
popa
sbb
jmp
add
cmp
out
jp
or
outsb
lea
jp
icebp
and
pushf
mov
pop
mov
sub
mov
or
fcmovbe
daa
ret
dec
out
and
ror
les
scas
fwait
ja
jbe
lock
xor
dec
pop
sub
loop
shl
fldt
ja
push
pop
addb
mov
jp
adc
inc
sbb
adc
sub
push
aad
adc
out
inc
adc
mov
and
xchg
out
push
lret
pushf
push
sub
lock
ret
mov
sub
clc
sub
imul
js
aam
ds
mov
or
das
ljmp
lock
and
pop
int
in
ja
add
mov
rorl
mov
jle
push
inc
lcall
test
xchg
lods
push
subl
push
test
push
cli
lcallw
pop
push
cmp
mov
jbe
loop
scas
je
pop
add
add
fcmovnbe
pop
out
pop
loop
shl
adcb
xor
pop
dec
das
fs
loop
je
xchg
push
jp
mov
add
fdivrl
mov
jmp
imul
or
mov
nop
stos
mov
cmc
xchg
gs
pop
lcall
popa
inc
stos
insl
mov
shll
fwait
cmp
loop
jbe
cmp
gs
daa
and
xchg
mov
movsb
outsb
pop
mov
mov
jmp
push
fdivp
insl
and
hlt
and
mov
mov
mov
mov
nop
andl
daa
mov
incb
out
aad
movsb
mov
in
stos
sub
push
push
stc
xchg
flds
add
or
dec
orb
lock
imul
scas
lds
jbe
cltd
ss
cmp
add
cmp
mov
test
das
idivb
aam
shrb
jp
add
mov
testb
pusha
iret
push
daa
or
xchg
cmp
out
add
lret
cs
call
add
and
jmp
cltd
gs
sbb
enter
xchg
sbb
stc
inc
rclb
cmp
and
push
cmpl
mov
mov
pop
js
ret
mov
sahf
cld
cmp
jp
inc
push
bound
mov
cmpsl
mov
xorb
xor
mov
jbe
xor
push
cmp
pushf
out
sbb
ret
mov
mov
xor
call
pusha
xchg
jne
mull
sbb
pop
and
pop
into
sbb
xor
cmpsb
fcoml
lea
int
and
ss
addr16
test
xor
fstpt
outsb
xchg
inc
pop
mov
inc
jbe
cld
sti
incl
mov
movq
add
sub
cwtl
mov
out
dec
pop
psubd
cltd
rolb
repz
inc
and
aam
iret
les
hlt
stos
mov
pop
push
dec
sbb
sbbb
xor
adc
cli
mov
sub
leave
add
cmp
lret
shrl
mov
scas
and
push
roll
mov
mov
repnz
cmp
shll
aaa
and
mov
or
mov
jg
in
fildl
pop
jno
movsl
sbbl
cmc
ljmp
js
dec
and
int
nop
shr
insb
dec
or
pop
push
add
jmp
pop
inc
jecxz
jne
test
mov
cmp
dec
dec
cmpsb
inc
adc
dec
cmp
jmp
inc
cmp
out
mov
insb
pusha
cwtl
inc
rolb
sub
test
xchg
adc
outsl
add
test
inc
xchg
adc
xor
pop
les
dec
pop
sbb
sar
adc
adc
nop
leave
mov
push
outsl
and
test
stos
movsb
dec
decl
xchg
shrl
andb
clc
jmp
subb
and
rcll
or
dec
mov
addl
lahf
fnstsw
sbb
out
jno
add
push
cli
add
mov
loop
daa
movb
add
jnp
lret
jecxz
xchg
xor
vpshufhw
xor
ljmp
jae
in
push
adc
sbb
in
cld
aas
cmp
test
pop
add
xchg
pop
mov
ret
ds
mov
hlt
popf
das
mull
jo
lods
xor
push
sub
scas
ret
lahf
xor
out
in
add
popf
dec
adc
fdiv
adc
lods
scas
jbe
sti
hlt
stos
push
lds
out
jl
call
test
fadd
cltd
subl
lds
les
pop
jmp
adc
mov
aam
gs
push
mov
ret
jae
xlat
or
stos
hlt
lret
aad
movsb
cmp
mov
in
pushf
lret
fmuls
sbb
sbb
xor
incl
adc
movsb
aam
inc
push
idivl
mov
popf
clc
xor
push
cmp
sarl
mov
or
dec
lahf
sub
inc
add
out
push
pusha
fisttps
jp
adc
das
and
cmpsb
mov
pop
mov
sbb
clc
out
jo
fstps
fs
sbb
push
push
sbbb
imul
cmc
imul
les
into
stos
mov
mov
shlb
sub
lea
out
mov
subl
jne
test
pop
je
push
cli
aaa
sbb
or
adc
mov
add
lea
pop
mov
insb
jmp
lock
lret
movsb
test
or
fwait
sysret
pop
mov
lock
dec
sub
sbb
into
jl
jp
stos
cmpl
push
xor
popa
inc
mov
mov
lods
mov
aad
in
xor
cwtl
adc
inc
lcall
xor
imul
pop
add
jo
adc
js
int
dec
jge
dec
mov
pop
cwtl
jp
push
pop
or
mov
arpl
push
repnz
dec
inc
outsl
adc
jg
or
std
cs
movsb
xor
pop
inc
push
push
jns
dec
cltd
cli
stos
cmp
add
push
adc
rcr
ljmp
and
sbb
jle
pop
les
test
in
loope
mov
pop
jmp
mov
mov
push
pop
cs
xor
xchg
add
lods
adc
addb
jg
push
testb
and
imul
popw
xor
clc
pop
clc
test
push
into
jmp
data16
mov
jl
jbe
nop
sub
test
jno
in
add
inc
xorb
cmc
mov
mov
dec
jmp
pop
push
adc
xchg
in
mov
jg
mov
fs
ds
xchg
dec
sub
adc
sarb
xchg
push
fadds
pop
out
bound
xchg
sbb
inc
js
pop
pop
fwait
ljmp
ret
ds
jb
int
xchg
jns
add
loope
jg
mov
pop
sbb
push
sar
scas
ss
push
into
pop
gs
in
jg
pop
mov
and
loopne
arpl
ljmp
js
fimull
push
inc
push
mov
mov
ficoms
dec
or
mov
sarl
rol
fs
push
repz
scas
pop
add
ja
jg
push
insb
jg
data16
icebp
js
xor
popf
cltd
fidivs
mov
loopne
cmp
jbe
std
mov
loope
sbb
and
loop
dec
rorl
xchg
pop
xor
mov
decb
rolb
add
pusha
sti
nop
mov
pop
sbb
mov
incl
loop
mov
outsb
inc
adc
cli
lret
insl
xor
mov
and
dec
enter
jge
mov
popa
int
push
jb
mov
inc
je
out
bound
mov
fsubrs
call
sub
pop
mov
insb
mov
xor
lret
mov
xchg
xchg
adc
hlt
call
adc
flds
bound
out
mov
es
inc
sbb
xchg
xchg
fldenv
jg
imul
stos
loopne
in
ss
fldt
data16
mov
pop
rclb
addl
jmp
mov
je,pt
xchg
and
outsb
les
lcall
pop
add
aam
and
shll
in
clc
inc
dec
sbb
test
je
xchg
sbb
push
or
pop
sub
sbb
mov
out
mov
xchg
lock
shrl
cmc
xchg
sub
xorb
stos
clc
mov
xlat
jp
mov
push
lods
and
mov
push
pop
mov
cmpsl
dec
pop
jp
enter
jge
sar
arpl
andl
sbb
mov
pop
pop
inc
xchg
idiv
rcrl
pop
sbb
notl
add
jg
push
xor
adc
call
rcrb
mov
fdivrl
lock
sub
test
das
mov
pop
jge
rcll
jb
dec
add
sbb
pop
and
popf
inc
int3
xor
cltd
dec
out
pusha
lods
xor
push
pop
and
into
popl
or
jl
xchg
push
cmc
popf
push
lcall
pop
loopne
and
sahf
out
inc
aaa
push
or
in
dec
adc
pop
push
je
ret
push
test
mov
loopne
cmp
sahf
data16
sbb
fstps
adcb
sub
lods
inc
add
lret
out
jne
sti
fisttps
dec
push
fnstenv
test
add
xchg
pushf
jecxz
or
mov
call
mov
dec
fisubl
pop
dec
pushf
cmp
popf
adc
cmpsb
sbb
jnp
lods
rol
daa
loope
nop
sbb
pushl
rcll
cmova
data16
adc
outsl
mov
mov
cmpl
xchg
sbbl
pop
or
dec
mov
cwtl
sub
mov
scas
cmc
out
fcmove
outsb
ret
inc
sub
mov
icebp
inc
scas
push
js
add
sbb
imul
add
xchg
ss
xchg
sbb
cmp
cmc
shlb
mov
fstps
xor
clc
mov
mov
and
ja
mov
jecxz
mov
push
cld
adc
out
cmp
sbb
cmp
jle,pt
scas
stos
dec
lods
cld
leave
mov
in
jle
les
push
leave
andl
rcrb
imul
aad
jbe
jp
fdivrl
imul
and
pop
mov
sub
jo
sub
aas
mov
push
fsts
cld
nop
pop
adc
in
stos
push
es
das
sbb
ja
xchg
stc
lock
test
and
sahf
leave
sbb
adc
mov
push
ss
movsb
dec
outsl
mov
add
sub
jnp
std
pop
pop
mulb
in
and
lods
jmp
mov
pop
lods
orb
xchg
test
call
inc
push
cmp
inc
or
mov
lret
fnstsw
push
or
cmpsb
or
movsb
ja
leave
push
or
pop
int3
stos
cmp
subl
dec
lret
mov
incl
mov
movsl
cmp
push
gs
push
sbb
dec
bound
aas
pop
sbb
or
hlt
cmc
cmc
out
and
les
sub
mov
call
icebp
mov
push
stos
pop
sub
and
xchg
jnp
or
push
js
icebp
pop
daa
jl
lds
inc
lahf
jecxz
push
mov
aad
inc
sbb
or
dec
mov
movsl
adc
js
sub
gs
sarl
jge
cmpsl
jle
adc
xchg
push
lds
icebp
scas
pop
mov
push
pop
ljmp
jp
sub
push
mov
inc
icebp
and
xchg
iret
fwait
mov
dec
ret
cmp
push
xchg
mov
jmp
mov
cmp
add
push
or
xor
pop
sub
pop
xor
push
pop
les
sarb
xchg
mov
lcall
fimuls
mov
jno
adc
outsb
ficompl
ss
mov
lret
notb
inc
mov
adcb
sbb
clc
push
dec
insl
adc
das
xor
xor
dec
mov
ror
xchg
rorb
aam
jp
adc
push
fcomps
and
cwtl
nopl
ret
es
push
pop
sub
mov
or
pop
mov
out
icebp
or
mov
sbb
bound
pushl
loope
mov
imull
aaa
cmp
mov
inc
dec
pop
jnp
mov
jae
pop
pop
movsb
add
xor
hlt
dec
std
mov
jb
cmp
lds
jp
sub
lcall
icebp
stc
inc
push
mov
push
dec
or
sar
test
repnz
lods
into
jmp
fmull
pusha
int
xchg
xchg
inc
push
lret
js
ret
repnz
negl
aas
std
mov
cli
pop
sbb
inc
push
and
je
scas
sbb
sbb
loopne
or
add
out
mov
sbb
or
lret
lods
xchg
mov
lods
aaa
das
mov
or
lock
mov
enter
add
inc
cmp
hlt
stc
pushf
sbb
inc
movsb
fdivrs
xor
pop
js
xchg
repnz
push
adc
and
inc
sub
xor
mov
ret
jb
inc
popf
push
ret
fwait
pop
enter
sbb
jmp
mov
outsb
mov
xchg
jo
xor
xchg
push
or
jecxz
ret
mov
xor
mov
push
enter
xor
cli
jecxz
mov
bound
test
insb
fucomi
adc
int3
cmp
cmp
rorl
hlt
enter
fidivl
lea
dec
int3
jbe
frstor
pop
jno
mov
mov
clc
js
jp
adc
bound
outsl
add
les
dec
test
cmp
mov
addr16
xor
lds
mov
inc
push
or
pop
mov
or
pop
mov
dec
add
mov
mov
pop
cs
push
lock
lcall
jbe
mov
mov
loopne
arpl
and
imul
or
xchg
pushf
aad
sub
sub
pop
cltd
les
push
clc
pop
jo
cmpsl
sarl
cli
sub
jno
add
push
mov
sub
sahf
and
dec
mov
jecxz
mov
sbb
ffree
lea
orl
lock
cmp
ret
enter
inc
notb
mov
popa
xor
sbbl
lods
or
sub
hlt
push
ss
mov
fsubp
enter
lock
mov
add
add
pop
cs
mov
sub
sbb
xchg
xchg
push
mov
mov
das
lahf
imul
imul
mov
mov
bound
pop
jle
fwait
out
dec
sub
movsb
lahf
fists
sub
jo
movsb
movsl
pop
pusha
cmc
mov
data16
js
lret
cmp
jmp
int
int
mov
aam
push
fcoms
mov
push
pop
movsb
icebp
xor
pop
jp
test
inc
popa
or
push
push
loop
jecxz
jge
cmp
sti
pop
lds
sbb
pop
cmc
xchg
mov
std
pop
sbb
push
mov
sar
xorb
loope
in
push
xchg
jp
inc
in
lds
jbe
clc
fdivs
out
or
iret
loopne
pop
xor
mov
outsl
xchg
lock
sarb
jle
arpl
adc
out
notb
mov
roll
dec
int
lock
pop
xorl
or
cmpl
xchg
cmpsl
mov
inc
das
mov
cmp
sub
or
dec
sbb
dec
ffree
out
pop
loop
dec
lcall
jle
dec
dec
sbb
inc
mov
mov
incl
iret
adc
or
push
data16
xchg
repnz
jg
xlat
and
loop
inc
mov
lcall
mov
push
icebp
rcrb
sub
je
push
cmpsl
push
repnz
mov
and
jo
inc
in
ret
int
mov
and
insb
adc
stos
aam
add
incl
popa
movsb
test
mov
mov
inc
jns
popa
adc
div
in
loop
je
jb
xor
out
scas
sarb
std
push
pop
or
sahf
dec
sub
add
mov
pop
es
cmp
mov
inc
sbb
mov
push
scas
cmp
mov
loop
jmp
sbb
xchg
fwait
push
loop
std
lods
xchg
lods
test
lock
mov
ret
mov
pop
fimull
test
pop
imul
push
ljmp
xor
test
movsl
jae
in
lahf
shlb
fldt
repnz
sbb
dec
int3
mov
sub
jge
in
movsl
push
dec
aam
mov
popf
xchg
inc
jl,pn
push
pushw
inc
leave
pop
jmp
cmc
out
dec
mov
xchg
sub
fadds
sub
insb
pop
inc
push
clc
lcall
gs
cwtl
js
pop
adc
or
test
push
mov
test
ss
inc
loopne
sarb
rolb
cld
lods
adcl
sbb
outsb
mov
aaa
or
mov
and
rol
fcoml
imul
call
into
xor
dec
cmc
sub
and
sbb
mov
or
cmp
jne
inc
lock
in
fistpll
xchg
xchg
adc
and
and
push
lret
movsb
jg
pop
shll
lea
inc
aam
loopne
ds
or
and
insb
mov
lcall
int
aad
jae
mov
add
pushf
push
orb
ret
push
movsb
lock
mov
loopne
mov
test
xor
dec
inc
cmc
dec
fwait
sbbb
in
sbb
cmp
mov
decl
clc
xor
mov
xchg
ds
sbbl
jg
jb
lods
push
sti
mov
shrl
addr16
or
jg
ret
arpl
xchg
inc
push
xchg
and
mov
sahf
sbb
andl
loope
add
aam
push
aam
jmp
and
sbb
inc
dec
mov
and
mov
xchg
or
push
sbb
xor
pop
fdiv
sbb
xor
add
lcall
jg
icebp
fdivr
outsb
out
add
stos
adc
in
lret
sarb
mov
xor
xor
outsb
sbb
shlb
adc
jge
js
rolb
clc
push
clc
cmp
call
mov
mov
or
and
jno
out
aad
lods
std
in
addr16
mov
negb
sarb
sti
outsl
shrb
add
scas
adc
jb
js
sbb
jge
ret
inc
scas
jg
add
or
inc
ret
dec
jmp
lcall
dec
and
addr16
sub
pop
test
lods
and
xor
jbe
jmp
cli
test
xor
das
scas
dec
mulb
les
or
ret
sbb
cwtl
les
mov
push
loopne
int3
sahf
mov
mov
add
mov
push
add
aad
aam
jno
test
xor
lods
rclb
mov
mov
mulb
shrb
int3
or
lods
iret
in
mov
inc
repz
cmp
or
ficoml
jne
and
xchg
cld
mov
mov
hlt
inc
dec
jg
ss
sbb
or
xor
inc
ret
pop
scas
add
mov
sub
jne,pt
loop
add
andb
jp
in
test
fisubs
pushf
cltd
mov
fsubl
fisubl
add
cs
add
movsl
faddl
sbb
pop
pop
xor
ss
ret
loop
push
insb
add
and
rcrb
pop
addb
jmp
outsb
ret
and
gs
mov
sbb
adc
xor
or
push
pop
add
ret
shll
push
lds
xchg
cli
mov
loope
mov
icebp
mov
addl
and
push
and
cmp
pusha
icebp
xchg
or
sahf
mov
add
sbb
pop
add
jge
rorl
shl
mov
gs
repz
mov
fidivrl
test
pop
adc
xor
fcompl
mov
shl
into
dec
push
test
loop
sub
call
lahf
es
push
xchg
popf
jns
test
inc
or
push
add
inc
jbe
adc
or
push
or
mov
jne
lock
bound
and
inc
inc
dec
int3
sbb
sbb
xor
add
xchg
clc
dec
pop
cmp
movsb
push
mov
pushf
cmp
mov
ds
int3
push
or
pop
sbb
popf
jmp
push
pop
mov
test
sbb
jecxz
jmp
pop
divb
add
push
nop
or
dec
add
insb
scas
xor
cmpsb
mov
popl
jne
mov
add
xor
jmp
xchg
adc
es
jl
leave
mov
test
call
push
push
cmp
add
js
lcall
outsl
dec
push
arpl
sub
cmpsl
dec
xor
movsb
leave
jmp
test
push
push
rorl
aaa
or
push
add
call
push
out
inc
dec
add
pop
add
push
cmp
jl
in
sbb
cmp
or
xor
jae
jo
icebp
lock
mov
lods
xor
pushf
sahf
pop
and
mov
xchg
inc
xor
outsl
cmpsb
mov
popf
add
push
test
sub
or
mov
in
stos
jg
push
sarb
stos
xor
sbb
andb
cmp
in
push
out
imul
jmp
cld
mov
movzbl
push
aad
aas
fstps
mov
cmpsb
and
bound
sub
fwait
into
pop
in
sbb
sbb
xor
lea
sub
mov
loopne
push
inc
sahf
inc
into
ds
addr16
dec
cmp
loopne
xchg
mov
lods
movsb
mov
cmp
mov
sbb
push
cld
push
and
pop
lock
lahf
stos
shll
push
mov
mov
and
aad
inc
rol
movsl
testb
pop
sbb
xchg
int3
push
or
inc
pop
inc
pop
cmc
pusha
inc
dec
dec
filds
cli
cmp
ds
xchg
mov
push
loop
rcrb
dec
jo
aam
mov
push
loop
mov
lahf
shlb
rcrb
sbbb
out
pop
inc
mov
and
dec
imul
mov
inc
dec
rol
push
stc
das
lds
and
enter
jle
xchg
jnp
rcr
inc
jne
push
and
jp
out
add
cmpsl
fmuls
dec
std
mov
sub
fnstcw
daa
xchg
fdivrp
pop
inc
sub
daa
loopne
lret
dec
rcrb
pop
jle
loope
pop
mov
sbb
fadds
movb
loope
sahf
inc
pop
imul
or
mov
add
ret
push
inc
pop
fisubl
jle
inc
dec
xor
lret
inc
fistl
cli
sbb
sbb
insb
repz
cmp
xchg
call
xor
push
dec
mov
ret
mov
addl
bound
scas
addb
pushl
hlt
testb
mov
clc
data16
cmp
push
or
mov
loopne
jp
push
loop
and
dec
lret
cmpsl
sbb
stos
aam
pop
lcall
or
cmpsb
jne
std
lods
sub
stos
hlt
sub
mov
fildll
or
pop
pop
mov
pop
xor
add
add
shll
adc
dec
rdpmc
and
ja
neg
shlb
test
sbb
das
pop
mov
mov
jg
cltd
adc
je
subb
push
add
adc
pop
dec
jmp
xor
push
or
lcall
adc
ljmp
sbb
aaa
lds
inc
hlt
cmp
sbb
push
lods
jae
dec
std
outsl
mov
loop
jg
or
jl
scas
add
stc
sub
popf
shrb
inc
or
loopne
mov
pop
cli
mov
cltd
fwait
pop
lret
mov
pop
test
jbe
push
xor
scas
lods
inc
lea
divb
mov
cmp
mov
xor
cmpsl
jl
aam
pop
sti
or
adc
stc
adc
out
decl
stos
adc
scas
lahf
mov
je
pop
scas
mov
xor
xorb
mov
aaa
mov
fidivl
or
fnsave
jbe
loop
insb
loopne
xor
cli
mov
and
push
or
ja
jecxz
pop
pop
jg
sahf
incw
mov
jae
repnz
jmp
mov
jp
xchg
divb
xchg
pop
sub
mov
aaa
shl
inc
adc
lret
lods
dec
xchg
imul
mov
sub
out
xor
out
sbb
sbb
inc
cmp
aas
push
out
pop
fwait
lret
dec
sbb
xlat
xchg
fmuls
int
xchg
pop
mov
mov
mov
imul
push
pop
mov
addb
jecxz
jo
rorl
sub
and
daa
mov
sub
adc
lahf
scas
jo
cmp
mov
cmp
iret
xchg
or
pop
bnd
or
aaa
sub
outsb
adc
scas
inc
sub
sbb
lea
and
imulb
jo
or
push
imul
popa
xchg
hlt
das
lea
sbb
popf
imul
adcl
jne
loopne
loopne
mov
add
add
test
cmc
test
sti
jg
shrl
outsb
fcoms
pop
sbb
inc
push
add
jne
and
jae
sbb
or
mov
les
and
out
popf
sbb
pop
sbb
mov
mov
mov
jmp
mov
std
icebp
daa
xchg
adc
test
jecxz
cmpsb
jle
notb
adcl
cmovno
jecxz
and
popa
inc
pop
into
fdivrs
data16
jo
je
loop
inc
mov
cmp
sub
int
xor
cmp
lods
lock
inc
cwtl
cmp
test
dec
mov
test
test
pushl
mov
repz
and
pop
fwait
mov
test
jg
mov
sub
sub
andl
inc
cmp
mov
daa
outsl
xchg
xchg
scas
std
rcr
dec
cmp
lret
mov
add
mov
pop
pushf
inc
lret
and
je
fidivs
or
xor
out
xchg
imul
inc
or
jle
loope
xchg
sbb
pop
adc
mov
cmp
pop
stos
push
xor
xchg
mov
popa
pop
mov
std
mov
lods
cmp
sahf
sbb
pusha
add
cltd
mov
iret
and
call
mov
sbb
cmp
mov
add
ljmp
loopne
mov
aad
das
xchg
fprem
loop
lds
inc
scas
in
fcoms
adc
push
add
jo
cmp
ret
pop
outsl
icebp
jg
adc
mov
es
jp
aas
push
les
inc
lods
inc
xlat
roll
push
and
push
in
sbb
sub
dec
iret
jb
pop
jb
inc
rcrl
mov
or
fisubs
pop
loopne
pop
push
les
addr16
and
and
push
les
es
aaa
pop
and
push
fadds
mov
sub
ret
cmp
jno
lret
int
and
mov
test
aam
pushl
imul
sub
jl
sub
xlat
fs
or
xchg
mov
xchg
fidivrs
lods
dec
stos
pop
or
loopne
dec
jbe
and
or
inc
inc
rorl
xchg
xchg
mov
int3
movsb
inc
inc
push
push
out
cmp
cmp
clc
nop
add
call
cltd
lds
cli
and
push
sub
mov
fistl
das
mov
mov
cmc
js
cli
ss
sbb
sub
mov
popa
mov
lock
inc
push
cwtl
mov
add
int3
addb
pushf
mov
push
add
in
in
daa
in
scas
add
test
in
in
inc
pusha
or
cmp
fimull
jb
dec
push
mov
xor
popf
or
adc
pushl
inc
je
incl
das
add
fbld
fcmovnb
push
and
cmc
outsl
test
test
sarl
or
repnz
jl
out
mov
adc
mov
jb
call
sbb
mov
cmp
adc
lock
lock
pusha
or
pop
test
jns
lcall
pop
push
daa
inc
ljmp
dec
sbb
jns
cld
pop
dec
hlt
xor
fadd
add
push
lock
push
fdivp
mov
xor
in
adc
jo
dec
mov
movsl
outsl
jmp
into
adc
sar
or
cmpl
dec
clc
jmp
jo
sbb
inc
push
mov
mov
push
mov
add
push
in
loope
testb
aaa
cs
aad
jb
cmp
inc
pop
fidivrs
or
push
js
sub
ljmp
xor
jl
pop
cmp
cmp
cmp
mov
ljmp
adc
sbb
movsl
inc
mov
loope
test
std
jmp
rorl
ss
test
repnz
mov
xor
je
adc
pushf
ss
call
stos
ljmp
ljmp
in
test
sar
push
clc
xlat
inc
in
dec
mov
icebp
mov
in
fsubrs
stc
in
xchg
incb
mov
cmp
mov
jnp
decb
mov
mov
dec
push
frstor
pusha
lock
sbbb
pop
push
or
rcr
inc
adc
out
mov
jg
ss
fbld
jnp
cmp
lahf
xor
or
xchg
hlt
jns
pop
ljmp
mov
in
inc
mov
nop
das
pop
pop
lret
aad
aam
sub
shlb
pop
sbb
push
adc
leave
fnstenv
sbb
mov
insl
or
loop
cmpsl
pop
push
mov
repnz
icebp
ds
adc
cmp
data16
lret
lahf
enter
or
push
cmp
pusha
imul
stos
xor
add
inc
mov
push
mov
sub
popf
mov
incl
and
outsb
xor
pop
jg
lret
lock
pusha
xchg
lret
jno
pop
shl
adc
dec
sbb
xchg
lret
lahf
push
jecxz
adc
push
shlb
lret
repz
and
loope
inc
in
loope
insl
pop
dec
add
cmpsb
pop
pop
inc
call
aaa
fmull
pusha
aam
data16
sti
je
clc
insb
push
jecxz
nop
sbb
data16
xchg
pop
iret
dec
ficoml
ljmp
js
arpl
addb
lcall
fsubl
jne
or
add
aas
mov
cs
out
xchg
jo
xchg
mov
cltd
clc
and
jmp
call
mov
adc
jg
lods
ja
inc
cmpsl
mov
dec
add
push
rcll
add
sbbb
cltd
fisubl
jg
inc
adc
inc
pop
andb
cmp
lods
mov
add
xor
test
cmp
adc
outsb
push
std
sub
mov
mov
out
addr16
sub
frstor
or
or
xchg
push
and
add
push
sahf
rcl
enter
leave
aam
fistpll
rcr
pop
ret
js
xor
icebp
imulb
jnp
cwtl
push
shlb
mov
and
test
push
call
xchg
lock
insl
movsl
push
cli
push
lds
das
setne
and
pusha
addl
sub
add
xor
les
popa
and
pushf
inc
push
mov
push
shrl
ret
inc
insb
insl
pop
mov
faddp
es
or
out
call
mov
sub
or
into
gs
add
std
inc
orl
mov
mov
add
push
and
jmp
adc
cli
out
adc
sarl
mov
cmp
shll
or
adc
push
and
xorl
js
sti
aaa
inc
or
cld
incl
pop
inc
mov
xchg
fsubrl
fldl
inc
pop
mov
xchg
mov
mov
rol
lahf
iret
enter
cmp
enter
sbb
and
pop
mov
addl
or
inc
lods
mov
cmp
lods
cmc
mov
movsl
mov
or
stos
sar
call
sub
xchg
add
pop
pop
xchg
and
cwtl
ljmp
es
pop
mov
rorl
test
cwtd
xchg
fisubrs
adc
fst
pop
add
push
inc
and
sbb
das
fldt
sub
cmp
mov
leave
cwtl
mov
mov
and
inc
or
ret
mov
or
jo
shlb
andb
mov
pop
clc
mov
adc
clc
jmp
push
sarb
jnp
mov
mov
mov
push
or
push
mov
popa
cmpb
jp
mov
push
shlb
lods
ss
mov
or
dec
stos
mov
push
pop
xchg
fnstenv
out
ljmp
mov
lock
jecxz
ds
jg
test
xor
xor
dec
subl
lret
push
movsb
inc
mov
push
aas
sbb
aad
clc
inc
lods
out
mov
jmp
lahf
or
inc
push
ret
cmc
xor
xor
pop
push
cmp
pop
mov
orl
pop
je
mov
pop
cli
push
ljmp
xorl
pop
lods
jmp
outsb
cli
xor
cmp
xchg
js
push
push
push
sbb
sbb
sti
arpl
sub
out
jbe
mov
cmp
mov
repnz
xor
fistps
fsubrs
pushl
mov
sub
js
sub
xor
xchg
aas
cwtl
pop
aaa
mov
push
jp
and
pop
cli
imul
adc
shlb
movsl
cld
sbb
ljmp
clc
cmpsl
ljmp
adc
dec
stc
cmpsl
ljmp
push
scas
ja
int3
mov
push
adc
out
push
rcrb
bound
pushl
test
jmp
xchg
xchg
mov
inc
mov
adc
and
mov
push
xor
cli
jge
mov
ret
or
sbb
dec
shlb
pop
sbb
fcoml
ja
ja
jb
jmp
mov
pop
ret
fcomps
dec
int3
scas
add
dec
mov
inc
movsl
ret
sbb
dec
add
dec
dec
ret
js
xchg
mov
sbb
shl
les
jmp
push
rolb
jmp
cmp
in
push
hlt
test
inc
sub
mov
jp
scas
add
dec
push
loopne
sub
scas
sub
jne
pop
or
xchg
loop
mov
test
pop
clc
fldt
and
push
pushf
mov
ret
sbb
push
jo
jo
nop
hlt
xchg
fnstcw
or
mov
jmp
testl
test
or
jle
outsl
test
cmp
inc
and
push
sahf
xor
incl
rcrb
xchg
mov
cld
out
mov
clc
adc
jecxz
mov
pop
pcmpgtd
aas
xor
pop
add
sub
cwtl
or
test
icebp
or
rcl
cmpsl
push
jmp
repnz
sar
subl
in
jb
push
call
pop
fstl
jl
das
sbb
jg
push
mov
mov
fstpt
out
mov
xchg
push
pushl
call
mov
pop
jnp
pop
or
movsb
xchg
test
cld
int
push
adc
push
enter
or
jmp
mull
cltd
rcrl
pop
clc
daa
jo
pop
test
mov
pop
xlat
scas
inc
xor
and
mov
into
or
cmp
loop
rclb
lret
push
in
sub
into
andl
add
sbb
pop
mov
sar
sub
jb
lret
hlt
push
std
lahf
jbe
inc
sub
test
ja
push
inc
or
imul
pop
dec
push
mov
mov
int
sbb
adcb
movsl
and
ljmp
decb
test
mov
mov
loope
jns
adcb
lds
outsl
aaa
xchg
lret
pop
sub
jb
dec
imul
jge
mov
dec
in
add
sub
xchg
aam
mov
add
jne
bound
jmp
les
mov
and
adc
rcrb
cmp
mov
scas
inc
mov
push
pop
mov
dec
test
ja
loopne
in
pop
xor
jae
adc
ss
in
notb
das
dec
shrb
mov
into
lret
repz
sbb
jl
movsb
iret
add
or
nop
in
jbe
dec
add
mov
mov
mov
rcr
or
xor
rcll
das
rorl
call
pop
add
jns
rorb
adc
pusha
adc
adc
xlat
icebp
or
xchg
push
les
test
mov
jae
mov
mov
sub
aam
cmc
or
arpl
sbb
jbe
push
pop
and
pop
imul
loop
dec
dec
mov
dec
outsl
jnp
jb
mov
scas
push
mov
jne
mov
xor
sub
xor
xor
adc
inc
imull
sub
mov
push
mov
rcl
mov
jecxz
sub
jo
scas
mov
push
das
mov
add
test
loopne
jnp
cmc
jo
pop
or
stc
cmp
xor
repnz
jno
mov
adc
mov
add
ss
mov
mov
mov
fisubs
test
adc
mov
or
div
jge
test
rcrl
push
andb
push
ror
pop
incl
out
test
je
inc
inc
add
xchg
sbb
test
lea
out
ja
fbstp
jo
test
sub
add
pop
mov
stos
mov
rep
xor
in
test
or
mov
call
cltd
and
push
pop
dec
pusha
lahf
adc
pop
out
mov
jle
lahf
jmp
mov
sub
leave
and
lods
shll
xchg
inc
cld
call
mov
sub
mov
cmpsb
rol
cmp
imul
std
or
ljmp
sub
pop
cld
and
push
xchg
push
mov
mov
mov
movsb
mov
sbb
clc
mov
mov
aad
cs
xchg
dec
fs
daa
mov
and
jmp
aad
in
mov
pop
adc
jo
push
sbbb
and
je
fidivs
push
daa
adc
push
mov
push
out
lcall
mov
xchg
jo
gs
xor
add
idivb
jns
fidivl
test
arpl
jge
aad
mov
lea
mov
add
add
cmpsl
addr16
sbb
jo
mov
push
jmp
movsb
push
cld
adc
scas
jp
push
mov
mov
test
jg
jo
jo
and
jne
inc
and
and
popf
pop
xlat
push
aas
in
shlb
xor
addl
rorb
sbb
mov
inc
in
clc
push
div
xor
out
loope
dec
dec
fsubr
dec
xlat
add
sbb
outsb
cmpsb
repz
push
shll
push
push
dec
and
and
jb
loop
mov
jb
cmpsl
xor
push
mov
pop
xor
xor
pcmpgtw
adc
jo
arpl
jnp
hlt
add
js
cld
sbb
inc
out
adc
dec
or
insb
icebp
mov
les
inc
push
jbe
jl
lcall
lahf
je
inc
cltd
push
loopne
aas
push
mov
rol
jne
mov
cmpl
mulb
frstor
pop
test
xor
xchg
fnstenv
cltd
faddl
sbb
mov
in
repnz
jg
sgdtl
sub
xor
js
dec
xchg
sbb
lcall
out
shll
pop
pop
clc
mov
pop
mov
cli
dec
leave
inc
andb
and
jae
or
xor
mov
out
dec
add
sbb
arpl
lcall
mov
imul
cli
pop
xchg
jmp
les
sar
mov
imul
jo
push
sbb
sahf
add
sbb
mov
push
inc
ret
outsb
in
aad
js
push
sub
mov
inc
dec
cmp
aas
jnp
rol
imul
jg
pop
mov
mov
stos
add
testl
lock
push
jmp
add
std
mov
cmpsb
rorb
add
iret
xchg
mov
stos
clc
xchg
cmp
es
push
cmp
sbb
xlat
pop
mov
push
imul
add
push
test
xchg
inc
inc
sub
push
mov
push
flds
fsts
je
add
cmp
cli
ficompl
xchg
stos
mov
xor
js
sbb
int3
inc
and
xchg
jo
or
in
inc
or
push
push
cmp
bound
popa
pop
out
scas
xor
pusha
jecxz
and
incl
pop
iret
push
pop
movsl
add
push
and
ret
pop
nop
in
cmp
dec
ret
jle
and
sbb
sub
loope
sbb
incl
fnsave
adc
sbb
andb
xchg
test
addr16
adc
push
stc
aas
mov
das
inc
movsl
sbb
jg
loopne
lock
inc
fs
add
xchg
hlt
fists
cwtl
pushf
lahf
flds
sub
aam
add
mov
jbe
cld
imul
pop
test
jne
sub
xchg
out
das
sahf
hlt
fisubs
and
arpl
sahf
data16
xchg
decb
ss
test
stc
add
sbb
jg
lods
and
imul
fisubl
sarb
mov
enter
push
and
or
shlb
scas
xchg
mov
pop
faddl
loop
mov
cmpb
push
mov
xchg
cwtl
xchg
or
xor
xchg
mov
dec
jl
cmp
rorb
sub
xor
pop
inc
add
mov
xorl
mov
movsb
push
call
repnz
std
or
xchg
jle
pop
push
pushf
out
jne
sahf
add
pushl
pop
push
cwtl
mull
insb
jne
loop
adc
jnp
pushf
dec
cld
aaa
mov
adc
push
into
xchg
outsb
enter
subl
inc
dec
mov
mov
pop
dec
push
cmp
loope
mov
es
mov
xor
mov
fists
and
mov
aam
je
pushf
fs
stc
pop
lret
xlat
xchg
sub
stos
aad
add
sub
xor
xor
mov
fs
sub
test
stos
add
cmpsl
sub
inc
or
or
and
out
and
and
lods
push
lahf
mov
add
sbb
das
mov
jecxz
and
pop
xor
fcom
mov
xor
and
enter
adc
dec
add
lret
clc
push
inc
mov
pop
cmp
inc
fisttps
bound
adc
adc
clc
subl
imul
pop
mov
mov
filds
stos
daa
mov
mov
sbb
cmpsb
inc
cmpb
lds
push
jl
rolb
pop
popf
sahf
add
clc
jmp
push
aaa
insb
push
push
scas
scas
xor
and
icebp
incl
jmp
fwait
xlat
xlat
out
repz
cmp
mov
inc
inc
test
out
clc
push
aas
adc
mov
cmp
mov
mov
repz
push
icebp
call
pusha
jmp
adc
icebp
cmpsl
imul
dec
mov
les
movsb
pop
cmp
or
mov
jg
ret
stos
dec
push
imul
add
lea
push
sbb
inc
scas
inc
pusha
cmp
mov
sub
aad
enter
sub
sbb
inc
xchg
mov
jno
adc
sbbb
mov
and
std
sub
ss
sbbb
icebp
stos
jl
cmp
pushl
std
call
cmp
nop
shll
loopne
loope
pusha
xchg
test
lahf
or
add
and
pop
rclb
adc
sub
lock
inc
das
cmp
mov
adc
inc
lcall
lret
xor
push
loop
dec
dec
and
or
roll
sub
pop
inc
jne
fmull
sbb
subl
mov
jns
test
mov
lahf
mov
xor
stos
int
decl
and
loope
add
stos
inc
and
pop
lods
mov
incl
add
aas
arpl
stc
test
pop
jp
movsb
adc
adc
or
fldt
push
and
mov
sbb
fs
fwait
stos
scas
dec
data16
scas
addl
out
loope
shll
stos
mov
sub
jo
add
or
cmp
jg
push
dec
dec
ret
mov
into
push
into
lcall
cld
lods
sub
enter
adc
loop
add
aam
fistl
dec
mov
push
das
or
shlb
mov
push
sub
xchg
and
sbb
dec
stos
stc
push
pop
test
sub
sbb
pop
mov
or
push
imul
sub
sbbb
test
mov
sub
clc
loop
sub
cmc
or
std
and
inc
scas
cmp
sbb
arpl
mov
call
std
repz
decl
and
adc
aas
addb
sbb
mov
add
xor
push
outsl
jg
into
or
mov
enter
push
adc
inc
fisubrl
pop
cs
ret
stc
xchg
mov
sbb
sbb
or
sbb
xchg
xchg
cld
loop
mov
inc
cmp
je
nop
adc
in
test
push
les
push
ret
jp
mov
test
fiaddl
pop
stos
xchg
divl
clc
jg
iret
ret
sbb
cs
std
add
out
stos
cmp
mov
mov
mov
jp
and
push
fdivl
jae
jne
add
fwait
aaa
inc
sub
ljmp
fs
dec
jp
mov
in
jg
and
cmp
pop
std
dec
sbb
dec
or
push
inc
aas
pop
pushf
sub
into
jbe
mov
outsb
inc
test
lret
les
push
cwtl
scas
test
aas
clc
ret
insb
movsl
sbb
push
leave
fcoml
xchg
std
push
aam
mov
mov
div
pmuludq
and
lds
mov
cmc
adc
push
dec
in
sub
inc
adc
add
subb
adc
inc
pop
nop
js
sbbb
xor
test
cmc
and
gs
mov
loopne
add
push
and
mov
xor
ja
pushf
fcoms
pop
int
fs
adc
inc
mov
ret
fldl
dec
xor
sbb
je
and
cld
push
sbb
scas
or
sbb
movsl
mov
decl
scas
or
ja
bound
pop
mov
jns
dec
cmpsl
mov
push
rorl
out
mov
mov
push
jecxz
scas
int3
adc
iret
call
pop
ljmp
mov
pop
lock
sub
nop
jnp
mov
cmp
aad
jo
stos
adc
jl
xchg
mov
mov
filds
pushf
or
cmpl
pop
fsubrs
dec
or
icebp
scas
addb
or
jnp
adc
or
jbe
sbb
jp
mov
rcll
sbb
nop
xchg
inc
sub
and
mov
fsubp
arpl
xor
outsb
xor
mov
test
fbstp
enter
add
rol
mov
add
mov
jp
icebp
movlps
push
add
xor
add
int3
cmp
jle
xchg
cltd
out
mull
push
or
cmp
outsl
adc
sub
add
jg
incl
push
jne
lds
stc
mov
dec
pop
fistps
dec
jb
inc
sbb
sarl
add
adc
mov
adc
fnstsw
cmp
xchg
idiv
lods
pushf
mov
sbb
fadd
outsl
incl
sub
mov
bound
mov
fildl
daa
adc
pusha
or
in
xchg
lret
adc
sbb
outsl
andb
fcmovb
pop
mov
data16
sti
js
jno
cmp
daa
sahf
fdivs
filds
ret
sarl
xchg
and
fdivl
push
pop
push
fcomps
ret
loop
cmp
xchg
fwait
aas
stc
sbb
fisubrs
mov
cmc
test
in
push
mulb
rcll
mov
or
cmp
lock
and
popf
enter
loope
ds
fistl
adc
cmp
fs
movsb
sub
stos
subl
jmp
pusha
js
pop
inc
data16
push
lods
and
adc
sub
aas
push
addl
mov
or
ljmp
jge
out
ret
mov
aas
insl
jle
pop
pop
cmc
mov
sub
int3
mov
mov
ljmp
lcall
add
adc
or
loope
and
rcll
je
dec
shrb
inc
mov
xor
xchg
mov
inc
shll
test
lret
rorb
push
mov
cmp
decl
aam
inc
les
adc
adc
cli
adc
jecxz
dec
sahf
les
cmp
inc
mov
sub
cmpsl
or
cld
pop
cwtl
fstpl
jnp,pn
add
mov
mov
add
pop
rorl
add
or
in
int3
rcrb
dec
fiadds
jl
or
xchg
in
std
jg
push
pop
repnz
pop
aaa
in
mov
add
sub
jg
xchg
mov
mov
cmpsb
test
push
adc
xor
arpl
inc
sub
pop
ljmp
mov
popa
cltd
jo
sbb
xchg
cld
sub
or
movsl
jmp
movsb
stos
ja
jmp
je
dec
cmp
mov
mov
outsl
lahf
mov
xchg
sarl
push
pusha
pusha
add
daa
xorb
add
lcall
fiaddl
lcall
mov
jge
sbb
add
jg
ds
dec
dec
bswap
inc
xor
int
ret
dec
xadd
xchg
cli
cld
jbe
data16
ljmp
outsb
into
add
cld
jg
inc
gs
dec
mov
sbb
adc
mulb
lods
push
sbb
sbb
call
cmpsb
shlb
xchg
adc
cs
inc
fidivrs
int
add
add
xchg
sbb
ja
mov
adc
push
insb
lods
jmp
mov
cs
sub
and
cs
push
dec
scas
js
insb
add
fcmovnb
les
cmp
loopne
dec
in
jge
sub
push
and
aam
add
inc
jae
jne
push
fisttps
lret
pop
cmc
push
mov
stos
mov
idivl
inc
inc
std
push
xor
imul
jp
ret
rcrb
jmp
faddl
scas
rolb
sahf
push
cld
imul
xchg
fdivrl
insb
in
les
test
negl
xor
or
shlb
int3
and
aas
test
aas
cmp
test
xorl
mov
mov
aas
mov
push
stos
std
add
loopew
adc
xchg
push
scas
pop
mov
dec
lock
ss
loope
add
mov
lret
in
xlat
inc
xor
push
pop
adc
adc
pop
mov
pop
jle
insb
dec
scas
push
pop
or
fs
and
pop
xor
mov
imul
sub
mov
jle
iret
lods
xchg
xchg
mov
mov
nop
push
sti
insl
dec
pop
adc
out
push
xchg
xchg
and
cwtl
shrb
mov
and
shlb
fldl
add
or
push
add
pusha
push
and
stos
ljmp
cwtl
je
jg
and
test
movsl
es
sub
call
cmp
jne
mov
aaa
pop
push
push
data16
rcrl
test
lahf
movsl
loop
mov
call
xchg
loop
popa
imul
scas
or
sbb
jbe
scas
or
mov
and
cmc
jp
push
add
daa
fdivs
sub
das
jg
aam
rol
dec
pop
js
lret
lea
mov
xchg
movsl
push
push
and
mov
ljmp
jp
mov
cmc
dec
xor
nop
dec
sbb
mov
pushf
xchg
jl
adc
adc
fsubr
decl
sub
sub
xchg
push
dec
cli
add
add
fimull
stc
inc
test
inc
sbb
dec
pop
ja
cli
xor
test
xor
push
lds
ss
mov
into
add
push
in
lret
pop
jb
rclb
xor
inc
add
test
dec
ljmp
ja
xor
cmc
stc
add
fnstsw
jno
lahf
rolb
pop
aaa
mov
xchg
pop
mov
or
cli
popf
mov
adc
gs
movsb
outsl
inc
call
jbe
sbb
cwtl
sub
adc
mov
xchg
and
jl
mov
and
xchg
xor
and
negl
jmp
lds
pop
test
lret
loopne
aam
rol
cmp
xchg
sbb
add
jl
adc
adc
aas
or
add
jmp
sbb
dec
testl
int
outsl
cmp
stc
mov
cli
sti
ror
pop
iret
out
pop
stos
fdivrp
push
jecxz
xor
das
pop
mov
or
leave
and
pop
push
dec
call
aam
mov
dec
icebp
add
jbe
ficompl
in
cwtl
int3
pop
je
aam
movsl
repnz
push
fcoms
imul
movsb
pop
cmp
jp
ja
repnz
adc
adc
pop
pop
loope
add
hlt
repz
cmp
add
xor
out
xor
ret
xchg
in
outsl
jb
pop
jnp
jle
lock
add
sbb
or
sub
mov
enter
adc
push
xchg
cmp
lods
sarl
cmp
sub
push
add
into
jle
aas
je
out
test
hlt
pusha
sar
and
push
mov
cmpsb
insl
mov
push
sti
mov
cwtl
stos
dec
cld
jbe
sbb
xor
mov
in
jne
loop
incl
cmpsl
cltd
cmp
movsl
mov
es
das
adc
decl
cwtl
outsb
inc
fsubrs
je
lret
aaa
call
mov
push
addr16
adc
idivb
imull
sub
inc
cmp
cmp
lods
jmp
data16
sbb
push
and
div
inc
sub
in
idivb
jmp
imul
adc
inc
mov
jl
pushf
cmpsl
dec
shl
mov
add
add
cmpsb
lret
xor
flds
fildl
testl
add
mov
je
and
loope
cmp
mov
cmp
adc
das
inc
in
je
inc
and
lret
xchg
fwait
lock
mov
inc
push
nop
fiadds
push
divb
sub
sub
lcall
mov
sahf
sbb
cli
fists
jle
xlat
sbb
repz
mov
sbbl
sub
lret
or
mov
push
cwtl
sbb
xchg
pusha
add
jecxz
in
jbe
cmpsl
add
mov
movsb
test
sbb
fists
sub
call
repnz
inc
push
pop
ss
adc
xlat
lret
mov
push
sub
jle
repz
lds
jle
rclb
inc
cmp
test
push
jmp
cmp
push
test
or
mov
xchg
adc
lock
iret
push
mov
js
inc
jnp
push
inc
orb
sbb
pop
out
pop
jp
mov
pop
mov
lea
das
ret
nop
ss
dec
sbb
dec
ficoms
xor
dec
add
cs
mov
jae
scas
imul
jg
inc
mov
loope
adc
sti
sub
test
int3
mov
lret
push
call
and
lds
xchg
filds
pop
js
or
push
lock
sub
pushl
and
nop
push
and
shrl
pop
call
pop
dec
movsl
test
pop
and
aam
dec
pop
cltd
out
push
cli
out
pop
mov
rolb
add
xchg
sbb
or
scas
repnz
mov
addb
add
js
mov
xchg
lods
scas
lods
add
and
mov
adc
xchg
or
mov
clc
cmpsb
loope
fs
push
xlat
std
insb
inc
ljmp
and
inc
call
ret
xlat
jb
push
test
or
int3
aam
pop
mov
mov
sbb
outsb
xorl
lret
jle
imul
mov
loop
pop
pop
mov
call
lahf
int
mov
imul
dec
inc
in
ret
shll
mov
mov
pop
lods
and
pop
nop
mov
mov
jnp
rol
inc
ret
aas
inc
in
inc
into
lock
or
mov
test
push
dec
mov
cmp
sbb
fildll
imul
stos
jbe
mov
rclb
cld
mov
pop
push
pop
sub
ljmp
push
and
addr16
in
je
pusha
fsubrp
in
das
mov
and
rolb
repz
jb
add
add
xchg
cmp
insl
mov
addl
mov
xchg
and
rol
mov
cmp
ljmp
aam
shll
mov
imul
mov
mov
cmp
test
cmp
test
jmp
and
ret
mov
adcb
bound
inc
push
roll
test
decl
add
jne
sbb
add
andl
cmpsb
push
incl
xchg
jnp
xor
lds
aam
add
ret
jmp
xchg
pop
lcall
ja
les
mov
aam
lock
mov
and
stos
outsb
xor
or
lcall
fcomps
test
jmp
jns
ss
jmp
dec
xor
mov
lcall
popa
adc
push
shll
test
and
sbb
arpl
out
ljmp
adcl
popf
loopne
fs
pushf
adc
sub
adc
cmp
aas
int
ret
cld
js
xor
aam
xchg
mov
nop
pop
or
lret
leave
xor
or
mov
divb
jae
mov
or
scas
and
push
call
add
jne
out
xchg
pop
adc
fmuls
hlt
icebp
sbb
push
or
int3
cmc
dec
enter
and
xlat
and
inc
pop
sbb
push
outsb
pop
cmp
stc
dec
xor
mov
push
adcb
sub
jecxz
sahf
ljmp
and
insb
adc
add
lock
mov
lock
add
mov
rcr
rcrb
mov
xchg
xchg
movsl
adc
mov
push
stos
ljmp
xor
test
pusha
lea
int3
xor
cmp
imul
mov
insl
scas
movsb
int
outsl
mov
into
mov
jo
orl
jne
sub
mov
scas
xor
jae
pushf
in
dec
xchg
dec
pusha
lea
mov
inc
jge
imul
cmp
test
jecxz
mov
inc
rorl
sub
stos
popa
push
cmpsl
scas
xor
rorl
int
mov
mov
cmc
push
in
aas
dec
jmp
push
cmp
enter
lods
and
mov
adc
pop
add
inc
xchg
jp
rorb
repnz
add
je
shr
sbb
cld
int
sbb
lret
je
pop
push
cltd
jg
loope
or
mov
mov
inc
std
add
in
and
lret
repnz
push
jno
adc
xor
cwtl
cwtl
out
pop
push
xchg
popf
pop
shr
adc
sub
dec
sub
addl
jb
iret
mov
aad
jg
outsb
in
loop
dec
jle
call
or
pushf
sub
ret
xlat
mov
fs
lret
mov
jg
sub
xor
jne,pn
lods
popf
cmp
decl
jge
sub
rcrb
jns
pop
add
das
test
push
imul
int
repz
lahf
sub
lcall
mov
push
stc
push
pop
cld
mov
imul
loopne
jp
lret
push
pop
ret
popl
inc
push
fadds
cmp
xchg
mov
aad
adc
push
adc
sbb
add
push
popa
push
mov
ljmp
pushf
out
cwtl
jne
cmp
jecxz
add
loopne
ljmp
mov
sub
or
into
idivb
sbb
push
hlt
or
add
sahf
lahf
bound
xor
mov
cli
jo
jge
or
jg
push
or
adc
fistps
xchg
or
sub
ja
popl
repnz
inc
pop
test
xor
cmc
mov
pop
jns
add
rorb
lods
addl
sar
add
sub
push
mov
imulb
dec
xor
inc
filds
mov
rorb
cmp
inc
push
rorb
repnz
and
imul
jno
mov
jl
adc
bound
xor
xchg
clc
mov
add
cs
in
bound
cmp
push
loop
es
pop
lcall
inc
lret
sbb
shlb
jne
hlt
pop
leave
xchg
xchg
arpl
sbb
push
fildll
xor
mov
sub
sahf
fs
aad
sbb
dec
movsl
or
lret
addl
nop
aaa
and
xor
mov
xchg
orl
pop
lret
mov
adc
push
imul
ds
lahf
mov
ljmp
mov
jns
or
and
xor
jge
adc
mov
adc
cltd
dec
pushl
addr16
adc
dec
sub
jo
cmp
das
mov
aaa
lods
pop
mov
mov
adc
xchg
ds
cmpsb
pop
and
add
add
ficoms
lock
sti
sub
xchg
sub
mov
ret
out
pop
cwtl
ret
jns
popa
sub
xchg
leave
dec
pop
xchg
movsb
cmp
stc
adc
xchg
jno
hlt
pusha
push
xor
int3
pop
dec
mov
mov
sub
mov
loopne
xor
cmc
and
sbb
dec
add
add
push
add
aas
enter
fcmove
jnp
xchg
inc
aad
js
cmc
adc
hlt
or
cmc
adc
push
orb
push
push
jne
xor
cwtl
test
xor
in
or
shl
pop
lea
addb
test
fildll
dec
lret
jg
bound
sbb
adc
or
push
inc
in
push
outsb
incl
mov
dec
test
push
pop
shll
mov
fisttps
add
loop
mov
cmc
cmc
call
and
enter
imul
ja
test
testl
pop
mov
ljmp
pop
roll
aad
or
scas
pop
pop
push
pop
sahf
fmul
mov
sbb
add
andl
push
jl
fcomip
movsb
mov
add
es
mul
sbb
or
les
cmpsl
or
enter
shrb
mov
fwait
int3
hlt
or
aam
push
les
mov
adc
das
mov
add
sbb
cmp
std
push
lret
sbb
jp
fsts
xor
adc
push
das
add
enter
cld
jbe
test
inc
pop
cli
xor
add
mov
sbb
push
cmp
xlat
out
rcr
xchg
jmp
sub
rorb
dec
pop
ret
scas
mov
loopne
std
xchg
push
lcall
ljmp
fisubrl
and
jp
jp
test
mov
ljmp
jl
mov
sub
fcmovbe
xorb
mov
xchg
lret
xor
hlt
jge
loope
and
xchg
jae
inc
adc
insl
enter
lcall
pushf
insl
pop
nop
outsb
jmp
jno
pop
scas
cmp
pop
sbb
or
imul
and
dec
sub
pop
cld
call
cmp
cld
dec
negl
dec
xchg
lcall
hlt
cmp
push
push
cli
test
lahf
je
sar
or
mov
mov
and
push
jne
cs
je
or
push
jl
imul
xor
push
cld
add
pop
in
out
imul
out
cli
std
mov
push
ja
shrl
dec
xchg
xlat
shlb
sbb
enter
xchg
cmp
outsb
js
call
inc
mov
adc
sub
lods
fisubrs
fmulp
cmp
sbb
jp
add
xor
je
and
rcrb
data16
jge
loopne
sub
push
insb
lea
loope
pop
mov
pop
fcmovnb
push
ret
push
sub
cmpsl
inc
mov
ret
pop
sbb
inc
push
dec
test
fs
dec
sbb
mov
pop
add
ret
popf
call
mov
enter
sub
insl
xchg
nop
inc
push
rclb
cmc
cmc
jo
out
ljmp
inc
push
rcl
dec
add
es
jb
ret
ljmp
mov
mov
adc
pop
inc
pop
sub
and
add
push
js
scas
pop
rorb
imul
mov
jae
sti
inc
daa
mov
push
imul
cmc
pop
mov
testl
dec
sbb
xor
in
mov
std
xlat
mov
mov
xchg
mov
das
sbb
xor
shl
mov
inc
movl
mov
xlat
arpl
sub
orb
mov
sub
pop
lock
cmp
daa
push
ret
jl
addl
shll
bound
fdivs
and
incb
xchg
push
or
jmp
xlat
mov
loopne
sbb
push
pop
cmp
ds
dec
and
xchg
lcall
inc
icebp
movsl
leave
mov
inc
mov
dec
or
xor
jecxz
insl
and
mov
loopne
sbb
aaa
cmp
mov
pusha
push
xchg
icebp
fbstp
inc
clc
push
and
cmpsb
iret
adc
repnz
dec
xor
adc
es
xchg
call
lds
sbb
cs
loopne
push
and
inc
mov
xor
ret
insb
cld
loopne
pop
cld
push
lods
and
push
lods
scas
mov
bound
stc
ret
incl
and
jle
fwait
das
mov
in
scas
and
inc
popa
mov
and
xchg
incb
rorl
int3
popf
jno
or
push
xchg
push
add
fstl
scas
adc
addr16
jne
ret
int3
adc
add
mov
jecxz
iret
rcrb
dec
ljmp
push
lea
cld
mov
sbb
xchg
mov
cmc
iret
insl
test
lds
gs
test
add
movsl
ljmp
mull
mov
lcall
xor
dec
aaa
adc
sub
sbb
insl
xor
xchg
mov
add
mov
push
dec
pop
sahf
ljmp
lret
cmpsl
dec
js
sub
push
cwtl
mov
jmp
mov
push
and
mov
push
add
ss
addl
mov
jb
mov
xor
adc
les
xorb
js
ret
xlat
jl
xlat
shrb
push
and
insl
push
sub
xor
test
inc
xlat
sahf
shl
xchg
enter
ret
test
inc
xchg
and
les
lods
or
xor
add
stos
push
mov
mov
inc
ss
inc
loopne
adc
lock
add
adc
addr16
je
mov
xchg
add
decl
pushf
mov
sbb
movsl
es
xchg
sbb
fsubs
push
mov
adc
mov
andb
push
push
mov
dec
ss
mov
xor
cmp
xchg
push
add
jmp
pusha
and
dec
pop
insb
std
test
cmpl
stc
and
sub
shlb
sub
jmp
push
insb
push
and
adc
sub
mov
addr16
shrl
or
mov
jp
sbb
mov
scas
shll
loopne
mov
jno
mov
arpl
mov
xchg
sub
inc
pop
in
cmp
aam
cs
xchg
or
scas
out
clc
sbb
push
xor
jnp
add
jno,pt
nop
push
lcall
pop
or
mov
test
in
lcall
xlat
or
pop
cld
cltd
arpl
adc
test
jecxz
cmp
cltd
add
lods
decl
lcall
pop
imul
mov
inc
lahf
iret
call
dec
sub
mov
ficoml
imul
push
push
lods
jmp
and
inc
lds
cmp
scas
fnstsw
or
push
test
push
aaa
fcomps
aaa
cltd
std
movsb
das
rcrb
jns
iret
fsubrl
or
cli
mov
add
lds
sub
pop
imul
cli
xchg
cli
repz
std
adc
and
jae
movsb
or
inc
cli
aad
xor
icebp
scas
jg
je
fucom
lds
fstpt
and
aam
pusha
pop
and
mov
pop
xchg
xor
jno
push
ffreep
rcll
in
jns
xchg
dec
cmc
ljmp
in
cmpsl
fwait
pusha
inc
imul
pop
pop
dec
into
jecxz
ss
or
add
movsb
dec
dec
imul
dec
paddusw
inc
inc
iret
es
sub
mov
push
hlt
mov
dec
or
andb
pushf
cs
cs
push
lods
inc
clc
mov
repz
xor
sarl
js
push
cmp
sub
fiadds
push
xor
lods
dec
lods
mov
push
ljmp
fs
mov
pop
xchg
adc
mov
ljmp
repz
sbb
push
testb
scas
mov
pop
mov
movsl
jmp
fldt
mov
xchg
cli
jl
dec
lea
cmp
test
aas
push
cmp
arpl
adc
lret
and
adc
stos
decl
fisubrl
notl
mov
idivb
mov
call
push
mov
xor
in
test
stos
add
data16
push
dec
mov
or
fidivs
pop
xchg
cmc
leave
insb
push
jle
xor
psllq
jmp
out
mov
stos
push
xchg
and
std
es
test
lods
stos
xchg
add
mov
mov
push
cmp
lret
aam
inc
jne
decl
fstps
cltd
lds
popa
movsb
and
loopne
aam
into
aam
popf
jne
mov
in
pop
loope
movsl
movsl
pop
add
sbb
xchg
lods
adc
iret
jmp
mov
pop
adc
sbb
fs
lahf
and
rcrl
push
jae
cmc
mov
je
dec
inc
add
pop
xchg
xor
decl
mov
stc
inc
add
jns
cmp
test
or
loopne
jbe
adc
in
mov
jecxz
jp
mov
aaa
mov
cs
sbb
mov
outsb
dec
jno
cwtl
loop
ljmp
mov
clc
cli
or
sbb
xlat
pop
shlb
adc
push
push
ret
jg
xor
je
inc
jl
push
shll
ret
popa
or
or
mov
fistpll
mov
mov
int3
test
shlb
inc
scas
xor
fistpll
dec
insb
push
push
sbb
and
lods
and
xchg
clc
jg
jp
fstps
jae
cld
xor
mov
mov
cmp
mov
call
outsb
jg
or
jno
out
cs
sahf
js
lahf
aas
dec
jle
shrb
sub
mov
hlt
repz
test
arpl
push
cwtl
daa
sar
xor
cmc
cld
cmp
dec
push
pop
imul
jno
jmp
xchg
pop
aad
jnp
fstpl
repnz
aam
hlt
sub
adc
fnstenv
and
dec
lods
jo
push
scas
adc
pop
aas
pop
loop
scas
sbb
add
adc
inc
ljmp
xor
repnz
cmpsl
xchg
add
pop
in
shlb
movsb
sub
dec
movsl
pop
mov
cmp
mov
call
insb
or
or
movsb
rolb
adc
add
bound
jge
cmpsl
out
std
push
add
adc
hlt
inc
jmp
in
movsb
mov
mov
int
ss
ss
testb
test
dec
movsb
pop
in
frstor
or
out
cs
push
dec
fs
xor
add
shl
mov
loope
sbb
cmc
jmp
addb
xor
mov
incl
movsb
xorl
add
add
or
mov
xchg
fisubl
cmc
add
dec
fwait
rcl
push
push
sub
ljmp
faddl
or
or
mov
out
shlb
add
pop
mov
fisttps
jae
aas
inc
and
sub
jo
or
les
or
clc
cmc
lods
add
out
gs
dec
sbb
rcrb
je
adc
push
sbb
mov
insl
sti
add
pop
push
lret
fisttpl
fisubrs
xchg
push
sbb
nop
sahf
movsb
push
sbb
incb
rcr
push
gs
and
fcoms
cmpsb
ja
xchg
push
and
inc
fildll
pop
and
jne
mov
cmpsb
adc
pop
movsb
sarb
adc
pusha
shrb
aad
adc
das
jp
jne
dec
out
inc
mov
shrl
loop
stos
xchg
test
xor
sbb
cmc
mov
mov
adc
divb
daa
jae
shrb
push
adc
dec
inc
loop
test
insb
inc
cs
mov
flds
cmp
and
outsb
sbb
mov
cs
sbb
les
inc
inc
push
clc
or
pop
push
push
in
jmp
ljmp
push
insl
cli
inc
sbb
test
sbb
lea
cmp
dec
pop
pop
mov
inc
adc
shlb
bound
lret
adc
out
incl
mov
xor
pop
test
pop
loopne
stc
mov
stos
pop
test
jns
mov
loop
es
pop
inc
out
ss
xchg
adc
outsb
push
out
mov
pop
mov
out
bound
jge
or
push
mov
cltd
repnz
int
or
push
or
data16
leave
mov
aam
cmp
mov
sub
bound
stc
and
inc
scas
adc
push
in
xor
add
sbb
je
pop
call
mov
mov
xor
in
mov
xor
xor
mov
lock
popa
push
cld
adc
ja
mov
xchg
add
mov
and
add
lods
cs
xor
jecxz
pop
xor
xchg
ja
lock
mov
lods
xor
xlat
lock
int3
adc
mov
test
cld
push
addb
out
inc
cwtl
add
lods
ret
add
fiadds
fwait
shrb
sub
cmpsb
xchg
rcrb
cmp
xchg
test
stos
inc
xor
icebp
push
push
sub
bound
mov
dec
mov
outsl
std
fnstcw
pop
pop
push
sub
push
test
mov
sti
pop
mov
xchg
ds
movsb
aas
dec
push
push
mov
jne
jl
adc
outsl
cs
mov
jne
adc
bnd
mov
mov
sbb
sbb
or
lcall
pop
mov
addr16
sub
cmp
push
aas
mov
cmp
clc
pop
jl
stc
pop
hlt
xchg
xlat
dec
pop
adcb
add
inc
jns
clc
in
sbbl
fldl
sarl
sbb
loopne
cld
xchg
sbb
xlat
xchg
pop
cld
inc
jg
lret
out
js
and
mov
in
rcl
mov
mov
push
rcl
inc
push
and
pusha
push
loopne
pop
xchg
fs
fsts
ljmp
repnz
adc
xchg
mov
imul
xchg
push
jge
aad
mov
xchg
int
outsl
jne
andb
in
jae
pop
test
pop
or
ljmp
inc
and
adc
std
fnstenv
fwait
inc
test
sbb
into
and
mov
gs
sub
push
push
inc
fadds
jecxz
sbb
sbb
es
jnp
pop
rorb
mov
loop
js
setno
xor
js
pop
lock
leave
dec
push
dec
cmpl
lea
fmul
lds
bound
add
jo
sar
shlb
inc
or
xchg
push
test
xchg
outsl
sbb
loope
popf
dec
popf
mov
movsb
insl
lock
or
cmp
outsl
mov
mov
test
pop
cmp
cli
sbb
xlat
mov
and
mov
inc
sbb
aas
inc
xchg
fimuls
adcb
pop
push
das
dec
mov
scas
sub
add
aam
xor
xchg
jecxz
cld
jb,pn
movsb
shrl
jb
add
mov
or
pop
sbb
in
xor
movzwl
dec
call
ja
push
fisttpl
jecxz
rcl
sbb
cmp
scas
fs
fildl
xchg
fld
xchg
cld
push
adcb
pop
sbb
mov
mov
mov
pusha
or
xor
fwait
stos
jmp
fisttpl
cmpsb
xchg
push
pop
xchg
ret
stos
and
ret
inc
mov
jecxz
sbb
jp
xor
mov
add
push
xchg
xor
xor
paddusw
pop
pop
adc
adc
add
in
mov
lods
pop
jnp
jb
push
jl
xor
dec
push
cmp
mov
lods
je
pop
push
mov
mov
ljmp
out
mov
sub
jnp
jno
shll
movsb
fadds
shlb
aam
cmc
xchg
mov
pop
push
pop
cmp
into
inc
add
scas
sub
mov
pop
fisttpll
fld
cld
fcom
test
dec
dec
mov
add
jge
test
add
fs
dec
dec
cmp
lods
jp
fs
xor
mov
mov
jno
out
jo
movsb
mov
mov
jno
jp
or
test
sahf
int
mov
adc
or
jg
lods
mov
dec
fidivs
mov
jbe
std
sbb
nop
pop
mov
push
cld
insb
fmulp
repnz
aam
push
push
int
adcb
nop
mov
push
push
pop
js
sbb
es
sbb
pop
cltd
sub
aaa
sbb
popa
cmp
xchg
push
pop
test
lock
pushf
sti
test
cmc
fisttps
dec
cmc
jle
loop
or
push
mov
dec
jae
idivb
adc
sub
loopne
adc
mov
subb
sbb
jl
and
mov
push
jle
pop
inc
jecxz
imul
ret
cmpsl
popa
mov
shr
cmpsl
mov
xor
nop
movsb
cmpb
sar
mov
popa
cmpsb
clc
and
loope
sbb
xor
aas
shlb
mov
gs
shlb
cmp
fadds
movsb
sbb
lock
popa
enter
jb
jge
shlb
mov
stc
push
inc
add
aaa
or
jnp
adcl
jne
xor
push
push
inc
xor
out
cmpsl
xorl
aas
dec
jle
ljmp
int
rcrb
sbb
mov
dec
inc
push
pushf
adc
lds
sahf
push
xor
cs
in
jne
pop
pop
xor
push
jae
lea
pop
bound
add
dec
pushf
dec
inc
adc
cmp
ja
roll
lcall
push
loope
push
add
or
mov
shrl
adc
js
adc
pop
mov
cmp
in
loope
sub
push
inc
or
call
mov
and
into
mov
or
xorb
call
fists
fs
jge
data16
or
fcmovnb
clc
mov
nop
jle
pop
inc
mov
adcb
jnp
popf
lea
fcomip
lds
inc
sbb
push
enter
lret
fdivs
adc
xlat
cmpsl
cld
sub
imul
sub
pop
mov
add
insl
fisttpl
nop
push
insl
js
movsbl
sbb
push
call
lcall
push
adc
hlt
stos
orl
mov
loopne
stc
mov
stc
sbb
inc
dec
add
inc
movsb
ss
xor
dec
or
xor
js
push
push
inc
inc
nop
jecxz
add
jg
es
dec
dec
adc
mov
mov
xchg
fistl
sub
jmp
sarb
adc
negb
loope
ja
xchg
jmp
aas
enter
inc
add
inc
inc
inc
in
sub
dec
xchg
fcom
push
xchg
cmp
mov
or
push
scas
out
mov
mov
out
cmp
push
jne
orl
sbb
xchg
shrb
sbb
pop
lods
pop
daa
mov
decb
clc
mov
pushw
xchg
pop
mov
ret
jb
mov
popa
pop
xchg
push
in
mov
inc
inc
aad
push
inc
jmp
js
and
mov
sti
shr
test
fildl
cmp
inc
push
mov
adc
push
sub
sbb
dec
cmpsl
and
sbb
arpl
push
hlt
sub
adc
xor
sbb
stos
icebp
xchg
jl
ds
lock
pop
cld
mov
mov
adc
in
push
mov
dec
les
scas
xor
sbb
ljmp
fwait
jle
xlat
adc
or
sub
mov
pop
pop
pop
or
mov
mov
or
push
or
jge
out
stos
adc
jnp
pushf
sbb
ss
adc
fisttpl
xchg
jge
sbb
and
and
jo
adc
test
dec
addr16
ds
and
aaa
lea
push
testb
ljmp
std
out
sbbb
jle
data16
inc
mov
bound
mov
rolb
or
mov
mov
xchg
sbb
inc
push
lahf
xor
jle
fld
and
mov
xor
sbb
jo
ret
xchg
and
jmp
xchg
shlb
xor
add
pop
push
add
mov
and
cli
call
test
movsb
dec
sbb
xor
and
inc
sub
cmp
lret
inc
pop
push
sub
stos
in
push
mov
fwait
push
pop
ja
aad
xchg
pop
ljmp
jbe
mov
into
mov
push
fwait
lahf
sahf
mov
divl
out
push
out
xor
push
adc
ss
sub
inc
mov
pop
mov
mov
shrl
xchg
pop
lahf
or
scas
or
aaa
outsl
ja
ret
push
ljmp
pop
xchg
mov
xchg
xor
adc
push
fists
push
testl
xchg
test
adc
jnp
adc
adc
and
mov
adc
aaa
sbb
test
outsl
push
test
sbb
fdivl
cmp
jle
mov
add
shrl
js
icebp
bound
aas
cmpsb
sub
mov
lret
mov
icebp
lcall
lahf
jp
stos
data16
imul
cmp
sub
xchg
aas
sub
dec
pop
cvtdq2ps
outsb
cmpsl
mov
js
test
mov
movsl
jp
mov
mov
xor
sbbl
or
adc
jmp
sarb
dec
outsl
inc
call
pop
xor
lock
sbb
jb
fiadds
mov
cli
std
orl
push
and
mov
stc
int
push
pop
rorb
push
jns
inc
cmp
mov
xor
mov
jecxz
add
push
mov
and
push
lea
bound
push
mov
push
push
dec
divb
scas
loope
es
loopne
lock
sti
scas
faddl
lahf
fs
js
loop
insb
hlt
inc
push
mov
ret
inc
cmp
fistpll
or
add
aas
cmpsl
cmp
pop
or
repnz
push
or
mov
dec
add
add
sahf
xchg
push
adc
imul
mov
cli
push
add
enter
lea
xor
fs
add
push
dec
xor
xor
cmp
push
xor
jl
icebp
and
testl
and
pop
pop
fcmovu
mov
xchg
add
outsl
pop
xchg
rclb
pop
xchg
call
dec
lock
mov
mov
aam
or
mov
outsb
xor
mov
add
test
add
xlat
shlb
cmc
aad
mov
pop
mov
dec
in
inc
xlat
and
pop
add
push
sbb
push
test
pop
pop
jl
dec
leave
pop
sub
inc
cld
or
pushf
xchg
fbstp
cs
sbb
bound
cltd
or
push
cmp
adc
fisttpll
fidivrs
testb
dec
mov
sbb
push
enter
mov
inc
sbb
push
sarl
cmp
test
mov
dec
mov
or
ficompl
mov
fstpl
decl
push
push
jge
xchg
loop
mov
and
sbb
push
sti
push
stos
insb
ljmp
out
xor
jmp
insl
hlt
mov
mov
mov
jl
out
and
jmp
movsl
and
add
movl
cmp
in
stos
add
mov
clc
test
cmp
dec
dec
lcall
imul
cmp
mov
pop
shll
mov
xchg
push
lock
fiaddl
adc
push
insl
fdiv
mov
rclb
shlb
filds
add
jg
pop
les
rcr
stos
movsl
inc
mov
mov
js
testl
loopne
cmp
test
push
inc
call
push
out
lods
dec
pop
adc
pop
cmp
ret
std
movsbl
shrl
xchg
push
or
sub
dec
xor
movsb
flds
fdivr
push
insl
ficoms
xor
icebp
std
add
aas
icebp
xor
popf
insb
mov
dec
in
insl
sub
mov
mov
stos
pop
sbb
movsb
inc
mov
jmp
in
dec
je
movsb
lock
icebp
pop
sbb
xchg
dec
loop
fwait
xchg
arpl
sbb
scas
mov
push
jmp
jmp
xchg
cmp
adcb
jbe
lods
outsl
movsb
or
aaa
mov
xor
xchg
inc
js
push
sbb
cmp
incl
js
andl
mov
dec
or
jne
stos
mov
mov
lods
scas
mov
lock
push
xor
mov
adc
hlt
lods
mov
xchg
dec
xchg
pop
inc
daa
adc
ja
imul
xchg
xor
popl
push
testb
xchg
in
cwtl
daa
xor
lods
cmp
movsl
adc
jmp
mov
ret
mov
adc
pop
cmp
idivb
mov
aad
rorl
dec
cmp
lret
xor
push
adc
sbb
cs
je
adc
mov
rcr
jnp
and
sar
test
cltd
pop
mov
inc
adc
arpl
mov
xor
jne
shlb
xchg
lea
decb
xchg
ror
mov
cmp
push
lock
sar
out
cmp
add
inc
gs
push
inc
insl
sub
rcll
dec
mov
call
jno
jb
xchg
das
inc
or
push
stos
iret
xchg
fidivl
sub
push
cmp
pop
push
es
or
xor
std
ret
mov
les
loop
pop
cmp
rol
add
cltd
ret
sub
push
incb
fiaddl
ljmp
aaa
jb
daa
push
test
add
daa
aaa
movsb
jmp
cmp
cmp
mov
inc
mov
mov
adc
pop
lahf
aas
mov
jmp
mov
mov
ret
into
cmpsb
incb
mov
fsubrl
adc
cmpsl
push
pop
call
pop
test
or
daa
cmc
dec
inc
mov
shlb
cmp
adc
pop
xlat
push
fiadds
pop
dec
sub
rclb
and
adc
pushf
in
aas
gs
test
data16
pop
inc
jns
lds
or
mov
loopne
dec
push
out
mov
decl
add
das
popf
cli
mov
sbb
cs
ljmp
mov
enter
mov
jno
sub
fsub
push
dec
aas
leave
jg
mov
out
jp
frstor
int3
sti
rcrb
push
mov
scas
xchg
fistpll
daa
sub
cmp
and
movsb
inc
jae
lahf
push
fimull
test
pop
jp
mov
in
scas
sbb
jnp
jp
push
inc
setns
and
ret
fnsave
scas
mov
jecxz
arpl
cwtl
add
sbb
inc
mov
ret
push
js
loop
xor
arpl
test
movsb
jecxz
xchg
mov
mov
sbb
mov
push
pop
pop
fwait
xchg
test
adc
cmp
add
cmp
cld
lcall
or
ret
sbb
jns
mov
imul
lahf
mov
rorb
adc
movsl
dec
shrb
stos
push
lret
and
int3
push
stos
shll
dec
ficoml
mov
mov
xor
pop
sbb
fcoml
clc
cmpsb
jo
fwait
imul
cmp
mov
rcl
js
jo
mov
fs
sbb
dec
cmp
cmp
ljmp
jmp
mov
dec
stos
aad
movsl
jo
mov
rclb
jns
mov
mov
sbb
pushl
xchg
nop
sbb
data16
push
aam
ljmp
daa
dec
es
inc
jecxz
hlt
jg
add
pushf
dec
mov
mov
pop
test
and
shl
and
test
xor
mov
mov
xchg
adc
sbb
push
je
lock
and
sbb
inc
mov
sbb
insl
or
xchg
out
sahf
ss
in
ljmp
cld
dec
lds
xchg
sub
push
sbb
mov
sbb
mov
test
repnz
jg
add
fimuls
rcl
pusha
cmp
and
popa
pop
xor
push
mov
xchg
mov
enter
pop
dec
cmp
dec
bound
aaa
mov
and
sub
gs
adc
aam
xor
test
jge
lret
mov
jmp
xchg
loopne
pop
popf
lods
and
dec
push
mov
mov
out
adc
jo
in
inc
xor
ja
int
into
push
int3
out
push
rcll
popa
add
pusha
ret
cmp
sbb
jg
xchg
dec
add
cmpsl
push
xchg
jl
arpl
inc
popa
inc
lock
subb
hlt
cmp
jno
cli
rorb
mov
push
lds
mov
fldl
dec
xchg
sti
mov
shl
clc
jb
mov
pop
sbbb
icebp
cwtl
popf
dec
sub
mov
mov
mov
mov
or
xchg
mov
sti
fstl
loop
jge
sub
repz
pop
mov
scas
cmpsl
sahf
mov
jp
mov
sbb
dec
or
cs
cmp
and
aam
mov
xchg
mov
testb
mov
mov
mov
jns
cld
lds
data16
into
and
inc
mov
pop
push
out
and
mov
inc
daa
push
jae
push
cld
add
scas
ljmp
mov
popf
rcr
jle
stc
ljmp
mov
inc
pusha
mov
jle
and
lock
movsl
das
sbb
pop
add
loopne
loope
pop
ljmp
inc
je
adc
jmp
lret
lret
inc
lret
mov
xor
and
fadds
test
and
cwtl
mov
rorb
inc
mov
lea
xor
roll
or
test
inc
mov
rol
roll
sbb
movsl
mov
jecxz
xor
ljmp
jmp
jle
ds
fs
icebp
mov
lea
bound
jb
shrb
pop
aaa
icebp
push
adc
lahf
fcomps
ret
pop
push
mov
scas
adcl
mov
mov
repz
cltd
fs
adc
stos
jp
iret
in
js
lods
inc
or
mov
outsb
ss
loop
fiadds
imul
jae
mov
sub
or
xchg
rcrb
fiadds
call
inc
xor
ljmp
inc
incl
test
xor
out
mov
pop
xor
push
imul
mov
std
rorl
cmp
lret
dec
inc
fisubs
cmp
int3
bound
lock
sbb
pop
incb
popa
inc
call
cmpl
ss
sub
xchg
gs
in
push
ds
jge
add
ljmp
subl
clc
es
pusha
xor
push
adc
add
xor
movsl
aad
aad
cmp
lahf
les
mov
in
push
mov
int
adc
sub
xor
nop
leave
int3
pop
call
xchg
add
xorb
rcrb
pop
xor
movsb
push
push
jge
jle
outsb
test
mov
out
cmpsb
mov
cmp
sbb
jg
ret
inc
fs
xchg
fmull
or
mov
mov
insb
push
mov
in
add
mov
sub
lahf
xchg
pusha
test
and
lcall
jnp
lock
icebp
sub
cmpb
sub
loopne
xchg
jbe
subb
loope
or
xchg
repz
add
inc
mov
or
inc
ljmp
stc
cs
cld
js
sarl
push
jns
ljmp
and
aam
call
xor
push
loopne
jle
xor
sbb
iret
int
in
test
xchg
cltd
outsb
aaa
lods
ret
cli
xor
pushf
adcl
and
add
xchg
out
mov
add
pop
and
dec
inc
cmp
movsl
loopne
dec
ja
leave
push
xchg
pusha
push
add
je
test
aaa
sub
repz
pop
mov
add
sbb
int
cmp
jbe
ds
adcl
cld
psllw
rcr
add
lea
cmpsb
mov
jge
sub
aaa
insl
pop
push
into
cwtl
push
arpl
iret
cmpl
addl
inc
outsb
dec
call
fnsave
dec
push
sbb
pop
ret
je
das
icebp
sahf
dec
jmp
cwtl
adc
cwtl
xor
in
push
push
adc
mov
and
jae
inc
mov
or
call
ret
push
test
jmp
call
aaa
mov
pop
sub
lock
aaa
mov
enter
inc
mov
or
inc
incl
sbb
in
cmp
mov
jmp
jecxz
cmp
push
movsl
jmp
rcrl
or
loope
inc
ljmp
cmp
mov
inc
mov
or
jp
in
dec
mov
test
pop
push
mov
inc
stos
imul
xor
pop
add
add
lahf
or
loopne
sub
outsl
jnp
or
sahf
lahf
cwtl
sub
adcl
jmp
mov
es
aaa
push
push
scas
dec
sarl
push
mov
sub
aam
outsb
imul
mov
insb
sbb
or
or
lcall
movsl
cmp
dec
xor
out
aam
jbe
bound
andl
in
jecxz
sbb
mov
add
ljmp
xchg
jl
mov
adc
in
inc
cmp
push
andl
fisubrs
mov
mov
iret
mov
xchg
pop
mov
test
cmp
cmp
mov
lods
mov
dec
mov
jp
es
cmpsb
nop
popf
ljmp
cmp
xchg
jnp
por
and
orl
mov
loop
mov
dec
gs
loop
jb
push
push
cmpsb
mov
add
mov
inc
jne
xor
aam
mov
xchg
cmp
pop
aas
cmp
hlt
push
and
pop
mov
sbb
jp
incl
shl
insl
pop
popf
adc
lret
leave
imul
mov
cli
stos
dec
xchg
mov
push
ljmp
notb
mov
mov
or
mov
push
inc
pop
shrl
into
imul
aas
movsb
inc
test
bound
inc
mov
fmul
out
pusha
lds
add
pop
jl
jg
jle
js
jl
pop
adc
loopne
mov
xor
dec
js
dec
inc
adc
insl
sbb
adc
fucomi
sbb
std
add
stos
inc
inc
test
cmpsl
dec
jmp
cmpl
in
push
popf
inc
cmp
add
ficoml
lcall
negl
fisubs
jle
cld
adc
sub
add
gs
cltd
outsb
aam
fidivs
inc
aam
andb
dec
js
into
imul
lahf
inc
ret
or
jae
stos
test
lock
mov
int3
call
push
add
enter
js
mov
sbb
mov
pop
leave
cli
sub
cmpsl
fcompl
push
push
fstps
push
pop
push
pop
addr16
cwtl
dec
add
pop
jle
fidivs
jl
dec
nop
movsb
inc
dec
pop
jnp
and
add
fnstcw
mov
aad
popf
mov
push
cld
test
push
sub
mov
cwtl
xchg
xchg
or
mov
and
std
inc
cmp
xchg
push
in
stos
sar
mov
and
push
sub
ds
mov
mov
stos
arpl
ljmp
loopne
push
enter
sahf
inc
out
jae
push
shrb
loop
scas
loop
in
push
and
or
std
push
lcall
dec
lods
mov
ret
fwait
xor
stos
xorb
and
pop
outsl
cmp
nop
scas
push
jo
movl
dec
mov
add
imul
add
pusha
and
or
or
loopne
and
cltd
pop
jge
clc
sub
les
jl
ljmp
setle
sub
pop
cs
and
xchg
popa
fcmovb
test
sub
sbb
pushf
pop
in
xchg
mov
test
inc
mov
mov
cmc
lock
dec
sub
pushf
int3
mov
loope
adc
cmp
lahf
push
jmp
sbb
mov
cmpsb
shll
cmp
jo
dec
divb
pop
clc
pop
cmpsb
je
rcll
or
mov
outsb
cmp
sbb
loope
mul
fwait
loop
dec
push
mov
clc
out
cmpsl
lods
outsb
dec
mov
ja
test
mov
stos
leave
push
mov
or
pop
popa
and
or
clc
or
lcall
mov
pop
orl
pop
aaa
hlt
jg
clc
jno
fnstsw
imul
clc
es
mov
mov
ja
mov
mulb
inc
popa
sub
push
loopne
pop
hlt
mov
push
or
loope
lea
mov
sub
push
cmp
jp
mov
sub
aam
imul
add
or
scas
ret
das
es
test
mov
cmp
loop
push
shlb
repnz
aam
push
gs
mov
stos
sbb
or
addr16
fldenv
sbb
stc
mov
js
xorb
inc
dec
stc
mov
addl
bound
mov
into
stos
arpl
cmp
mov
jp
cmpsb
inc
cmp
nop
or
xor
popf
cmp
mov
xchg
sbb
inc
rclb
sub
iret
aam
shrb
push
leave
repz
inc
andl
push
outsl
lahf
sub
inc
sub
xor
push
aam
sub
push
test
adc
pushf
mov
push
cli
movsl
fstpt
inc
cmpb
add
mov
in
push
push
jno
add
xchg
pop
pop
mov
mov
push
mov
inc
fld
daa
in
and
imul
mov
jmp
dec
hlt
rcrl
cwtl
ss
ss
repnz
ljmp
jecxz
jle
or
popa
scas
sbb
lock
add
mov
push
scas
mov
movsb
mov
mov
cmpsb
xor
imul
or
pop
arpl
jle
cltd
mov
test
addr16
fidivrl
sub
pmuludq
pop
or
js
mov
filds
add
aaa
jge
sbb
je
into
cmp
into
sbbl
test
sub
stos
test
mov
ljmp
sar
daa
dec
inc
out
xor
das
mov
inc
loop
add
pop
inc
cmp
inc
pop
icebp
push
jle
or
and
movsb
mov
flds
ljmp
mov
fs
xor
lods
pusha
lcall
nop
data16
cmpsl
stos
ljmp
popf
insb
pusha
adc
shlb
adc
js
mov
push
ljmp
mov
or
pusha
incl
mov
leave
mov
adc
or
pop
shrl
or
mov
mov
xor
pop
leave
jmp
cs
pop
push
imul
cmpb
sbb
or
mov
mov
add
sbb
push
test
in
push
std
rolb
sub
jecxz,pn
cmp
nop
or
call
adc
add
adc
dec
pop
outsl
sub
or
pop
iret
rorl
cmp
dec
add
cmpsl
jle
lds
jle
shll
xchg
xor
or
mov
inc
int
shlb
jp
add
push
movsl
aaa
aaa
ret
sti
sub
bound
lock
hlt
cmp
mov
arpl
mov
inc
jbe
mov
pop
sub
mov
or
iret
popf
jg,pn
ret
outsl
inc
push
dec
popf
rorb
xchg
or
jl
rcll
xor
adc
jp
mov
fwait
cmc
mov
daa
out
and
push
decl
dec
mov
ja
in
fwait
mov
or
inc
imul
outsl
lret
adc
int3
mov
sbb
iret
daa
dec
jecxz
shlb
sub
icebp
mov
push
lea
addr16
xchg
xchg
mov
lcall
loopne
push
jmp
rcrl
jnp
aad
mov
mov
notb
mov
jge
push
cld
inc
pop
add
xchg
in
push
jb
adc
pop
ds
adc
adc
jp
cltd
xchg
sarl
xor
push
xor
adc
jno
ljmp
add
mov
mov
fdivrs
push
lods
pop
inc
pusha
or
outsb
and
dec
rcr
xor
cmp
lcall
nop
mov
sub
cmp
ret
les
push
std
xor
inc
stos
adc
sub
mov
jge
adc
loop
pop
hlt
pop
xchg
js
decb
cmpsb
aam
mov
ja
nop
add
imul
divb
mov
xchg
pushl
and
out
out
inc
add
scas
mov
lea
loope
test
into
xchg
loop
pop
dec
sbb
xchg
pop
pop
push
popf
orb
divb
push
adc
iret
sub
adc
or
pop
mov
dec
mulb
ss
pop
mov
push
mov
pop
mov
add
aaa
addb
mov
xor
mov
lock
or
ret
mov
or
and
cld
dec
call
inc
out
sbb
push
pop
inc
mov
add
mov
sbb
mov
ret
std
lods
jne
mov
fdivrp
stos
adc
sub
dec
xchg
or
fdivl
xchg
adc
loop,pt
lcall
cld
aas
into
mov
fnstcw
sti
pop
jno
bound
icebp
jbe
inc
loop
cli
jecxz
push
mov
adc
add
outsw
in
ds
push
imul
adc
mov
iret
sub
inc
pushf
mov
or
or
xchg
int3
mov
bound
jge
push
xor
mov
sahf
mov
fs
movhps
pop
jbe
loop
mov
and
pop
rcrb
adc
xchg
push
fnstsw
sub
dec
xchg
sbb
inc
mov
or
adc
dec
mov
and
mov
or
xchg
adc
in
pop
inc
and
andb
jbe
test
xchg
inc
push
divb
push
pop
imul
xor
outsl
rcrb
dec
daa
jbe
xchg
xor
mov
sahf
gs
rcr
add
push
hlt
adc
xlat
ss
cmc
loop
out
cmp
dec
ja
inc
mov
dec
push
repnz
mov
sbb
outsb
clc
or
adc
mov
xor
subb
mov
lret
shlb
pop
push
movsl
lods
mov
cld
out
mov
adc
mov
inc
bound
scas
dec
or
cmp
add
decl
pop
and
xchg
mov
mov
add
sbbl
pushl
out
nop
fs
mov
loope
and
mov
enter
pusha
inc
les
xchg
test
cmp
pop
scas
adc
int
push
dec
les
sub
push
bound
outsl
sub
adc
push
adc
push
bound
roll
pusha
jo
fcmovne
mov
ss
add
shrl
sbb
push
xchg
and
ret
mov
push
xor
ds
push
add
stos
aas
addb
data16
cmpsl
mov
xchg
dec
add
daa
cmp
ss
push
in
rorb
push
sub
pop
stos
mov
push
dec
and
pushf
add
arpl
cltd
sbb
xchg
push
sbb
ret
adc
iret
inc
push
fimull
andb
inc
cmpsb
popf
in
pop
adc
imul
sub
xchg
rcl
add
push
mov
shrb
mov
out
js
in
push
push
insl
or
les
incl
test
jl
mov
test
jne
pusha
cli
adc
lret
or
add
mov
inc
dec
cmp
xchg
push
add
ljmp
lods
cwtl
sbb
push
decb
scas
into
lret
movswl
andb
int3
sub
out
pop
sbb
sub
sub
xchg
lock
cmc
mov
cmp
add
aad
xor
lds
sarb
cmp
push
aaa
out
stos
js
cld
adc
adc
xchg
jp
sti
bound
jle
ret
cmpl
lahf
ss
xchg
jg
sbb
xchg
insb
call
subl
int3
sarl
pop
shrl
dec
cmp
popf
jbe
mov
xor
mov
push
and
or
jecxz
sbbl
js
pushf
xor
mov
mov
and
add
sbb
sar
inc
xlat
or
push
xchg
mov
adc
subl
jnp
push
cmp
jb
dec
xchg
insb
std
fistps
or
xchg
arpl
aad
add
cmp
add
mov
push
jno
inc
arpl
imul
push
pop
add
add
mov
popf
inc
rcrl
and
dec
clc
sbb
push
adc
jbe
hlt
cmpsb
sub
xor
decl
xlat
push
ds
jbe
lods
xchg
jl
subl
xor
pop
subl
lea
jmp
adc
sbbb
mov
push
push
pop
dec
xor
dec
testb
mov
into
orb
xchg
mov
push
ljmp
roll
fisttps
mov
mov
loopne
dec
rclb
aas
and
repz
push
or
mov
shr
aam
and
test
mov
mov
fcoml
sbb
add
xor
icebp
loop
dec
xchg
or
mov
pop
mov
int3
data16
xlat
or
and
add
lds
jb
lods
fsubl
mov
xchg
add
mov
pop
jb
sbb
mov
fildll
fdivrs
mov
push
adc
aas
mov
pop
out
lcall
int3
xchg
pop
add
mov
ret
push
mov
sbb
dec
aas
sbb
enter
data16
mov
enter
lods
inc
rcr
dec
jecxz
sub
dec
les
cmp
xchg
mov
push
adc
clc
push
fwait
cli
lahf
icebp
outsb
xchg
xchg
vpunpcklbw
sahf
pop
mov
rol
es
push
sub
lret
jg
or
xchg
or
aad
mov
pop
xchg
ret
push
or
loop
push
outsl
jl
filds
cmp
imul
mov
divb
pop
xchg
rcr
arpl
xchg
shlb
jne
adc
cli
orb
and
pusha
jns
js
ja
dec
sbb
and
or
add
scas
loop
cmpsb
sbb
sbb
daa
push
cli
sbb
repnz
faddp
in
jbe
shr
or
test
pop
or
mov
test
or
rol
add
push
pop
adc
adc
subb
sbb
and
cld
push
sub
mov
and
mov
cmp
hlt
pop
sbb
pop
gs
mov
xor
loope
xchg
jno
sub
fprem
inc
mov
dec
dec
daa
pusha
sbbb
mov
out
loop
inc
jo
jecxz
int
lea
adcb
jg
sbb
xchg
sahf
out
sbb
and
add
jecxz
leave
adc
cld
pop
test
iret
sub
and
insb
ret
scas
loopne
lock
aaa
scas
std
sub
daa
lods
lods
pusha
dec
push
std
mov
inc
js
mov
sbb
sbb
adc
les
sub
xchg
loope
cmpsb
sbb
cli
push
sub
jp
aas
loopne
popa
inc
loop
das
push
cmp
pop
mov
adc
mov
test
mov
xor
cmpsl
pop
aas
dec
clc
sbb
lcall
rcrl
call
aaa
popa
sbb
addr16
out
sub
push
mov
pop
out
adc
call
sarb
xchg
mov
or
shlb
hlt
xor
inc
leave
jecxz
push
test
shrl
xor
lret
inc
insl
cltd
stc
out
push
subl
pop
xor
dec
fucom
push
push
add
sub
jmp
xor
jno
adc
mov
loop
lock
sbbl
cmp
or
add
dec
and
push
mov
cmp
add
loop
out
push
and
pop
jmp
jo
lds
pop
pop
cmc
mov
push
test
cmp
and
daa
insl
in
xchg
push
pop
lret
inc
push
fwait
fwait
push
or
ss
mov
jo
out
mov
fs
aas
test
icebp
xchg
sbb
sti
adc
out
xor
jg
sub
vmovss
dec
in
clc
and
iret
lods
push
push
mov
sbb
in
cltd
scas
ret
aad
push
stos
or
ficoms
lea
cmp
addl
ja
dec
inc
push
jmp
loope
out
or
mov
jle
dec
jg
jo
fadds
imul
sub
call
js
int3
jo
rorb
jg
xor
insl
mov
cmpsb
jl
aad
cs
mov
push
sub
filds
sbb
and
cmpxchg
push
sbb
clc
dec
movsb
xchg
mov
daa
push
das
lidtl
add
xchg
and
push
adc
in
das
fldenv
lock
push
sbb
fs
xor
repnz
mov
iret
or
or
call
or
or
call
bound
xlat
adc
pop
or
cltd
mov
jmp
lcall
jecxz
mov
sbb
push
cmpsb
lock
pop
mov
out
inc
ret
mov
mov
sub
cmpsl
cmpsb
in
and
pop
cmc
out
dec
dec
lcall
lds
xor
out
and
add
mov
and
mov
je
adc
addr16
mov
jmp
lock
in
movsb
cmp
push
mov
pop
add
frstor
iret
stos
jecxz
orl
push
stc
ljmp
pop
mov
cmp
rorb
mov
insb
jg
and
sub
inc
add
add
pop
sub
test
scas
sub
nop
sbb
popf
test
test
dec
cmp
and
fdivp
roll
xchg
in
mov
add
mov
ljmp
in
outsl
and
xchg
jp
in
push
insb
dec
and
fstpl
fdivp
stc
and
loopne
dec
pop
adc
test
and
cwtl
movsl
andl
mov
jae
out
push
xlat
movsb
in
stc
ss
adc
push
add
popf
add
fdivr
fildl
jo
sahf
jb
mov
adc
test
add
in
je
dec
mov
pop
inc
adc
or
repz
clc
cmp
loop
push
xor
push
cld
pop
pop
sub
shr
movsl
sub
mov
hlt
cmp
and
push
push
popf
imull
cmp
popa
sub
or
and
pop
jbe
inc
xlat
mov
mov
mov
rcl
fisubrl
fsub
fbstp
in
push
pop
orl
sbb
pusha
xchg
cmp
sbb
pop
movsl
das
mov
test
dec
in
call
jbe
aad
or
insb
out
push
and
rorl
outsb
xchg
inc
mov
dec
inc
sub
or
and
sbb
bound
sbb
cmpsl
pop
ljmp
mov
insb
push
xchg
pop
insl
add
scas
test
pop
mov
sub
incl
iret
add
or
enter
gs
test
cmp
pop
shr
ja
lock
mov
adc
filds
xlat
rcll
xchg
jge
loop
gs
jle
and
dec
cld
lahf
pop
cmp
and
dec
sbb
bound
inc
inc
pop
cmpsl
mov
xchg
outsb
lahf
jl
fildll
test
xchg
jge
inc
dec
fbld
dec
cmp
rclb
mov
pop
test
cmp
inc
faddl
sbbl
das
mul
cmp
or
pusha
inc
mov
dec
jle
adc
and
ljmp
ret
clc
les
inc
jmp
dec
mov
fcoml
data16
icebp
sub
lods
xchg
add
hlt
push
xor
and
push
test
test
xor
loopne
mov
shll
mov
or
into
pop
sub
cmovl
sbb
les
aaa
rcrl
stos
cmp
cmpsl
push
add
mov
ret
xor
test
cld
sub
inc
nop
xorb
xorb
jp
inc
out
mov
push
add
test
aam
jg
fcmovnbe
adc
aas
mov
adc
push
loopne
or
cmpsb
dec
insl
sbb
add
rcrb
xorb
lret
jb
test
inc
add
aas
aas
lds
loopne
mov
dec
call
pop
stos
and
fst
arpl
push
and
clc
dec
fsubr
cli
aas
test
mov
or
scas
outsl
mov
leave
insb
inc
loopne
xchg
cmc
loopne
orb
dec
shl
test
repz
imul
mov
mov
mov
jge
jecxz
movsl
sub
cmp
or
mov
mov
push
shrb
js
jb
test
insb
cwtl
addr16
sbb
aad
push
sub
cmp
clc
outsl
int
cld
test
pusha
sub
add
adc
rclb
lea
fs
cld
cmc
mov
jne
in
or
mov
dec
inc
pop
ds
sahf
and
loop
dec
cmpsb
shrl
and
jmp
push
lods
out
loopne
insl
push
hlt
push
or
add
fwait
xor
jmp
xchg
add
stos
call
push
fldenv
add
jb
jecxz
lret
imul
push
arpl
popf
fildl
push
jnp
adc
mov
cld
mov
gs
imul
cmpsl
mov
ljmp
scas
cmp
mull
pop
mov
push
out
in
dec
sti
call
les
adc
int3
mov
call
int3
push
add
mov
inc
adc
test
aaa
mov
sbb
and
lock
inc
loop
jp
rcrl
fisubl
xchg
shll
data16
push
mov
dec
sbb
jecxz
lock
bound
mov
adc
stos
test
inc
sbb
mov
aam
mov
xor
pop
lock
into
dec
aam
or
enter
lret
test
cmp
aas
movsb
adc
sbb
sub
sub
daa
inc
pop
cmp
mov
xor
mov
sbb
add
roll
test
inc
add
lret
jno
test
add
lods
push
cli
push
imul
rorb
mov
sbb
jecxz
test
or
lock
ljmp
mov
jno
movsl
pushf
rolb
pop
or
pop
in
lea
outsb
clc
stos
push
inc
inc
cmpsb
insb
popa
ljmp
xor
fdivs
push
inc
lcall
imul
in
gs
cmpl
cmpsb
jo
outsb
div
loop
add
or
loopne
mov
or
push
push
std
loope,pn
loope
or
hlt
ljmp
inc
xlat
in
mov
pop
jmp
push
mov
add
stc
push
shl
lcallw
ljmp
xchg
lds
pop
xor
fiadds
pop
xchg
out
sbb
sub
push
test
inc
mov
fldl
cmp
jge
jns
lcall
jns
mov
jb
shl
dec
mov
in
push
rclb
or
jo
adc
inc
cmc
je
lret
into
cmpsb
xor
lds
adc
push
mov
xlat
loope,pn
jp
fldcw
hlt
adc
cmpsl
out
or
ficoml
lds
mov
mov
inc
sbb
fcoml
insb
aaa
or
rcl
adc
std
sbb
jo
imul
addr16
outsl
ret
mov
test
ret
in
test
pushl
rorl
js
xor
xchg
gs
aas
cli
ljmp
popa
dec
movsl
shr
test
cmp
add
sahf
ja
dec
cwtl
lock
mov
cmc
jecxz
in
push
cld
inc
cld
gs
add
lahf
sbb
and
aad
fwait
aam
jle
jg
or
shlb
mov
or
jne
cld
outsl
jmp
jg
push
clc
rcr
inc
or
mov
xlat
adc
jp
pop
fwait
pusha
or
in
das
mov
pop
js
lcall
cmp
lahf
sti
mov
mov
pop
push
sub
test
incb
fdivr
gs
xor
imul
and
lods
xor
dec
jl
xor
or
fiaddl
outsl
insb
push
add
or
xor
cmp
sti
inc
sub
das
push
gs
jae
out
and
dec
jns
pusha
xchg
outsl
aam
rorb
arpl
lods
je
stc
aam
adc
dec
push
test
adc
iret
sbbb
movb
and
lock
pop
cld
je
xor
mov
inc
aaa
out
or
inc
rcl
and
cmp
adc
jmp
or
shrl
negb
inc
sub
push
pop
lret
je
fcoml
mov
xor
fdivr
push
das
sahf
sbb
fwait
xchg
or
scas
add
push
outsl
iret
in
dec
shrb
loop
call
adc
loopne
lahf
jne
sub
aam
aad
out
add
jb
mov
inc
lcall
mov
les
inc
pop
mov
mov
test
js
ret
sub
shrl
inc
cmp
test
out
inc
and
xchg
fs
rorl
movsl
leave
lock
sub
scas
rol
mov
adc
pop
pushf
sub
push
mov
mov
mov
aad
aad
inc
sbb
adc
jo
js
stc
push
lock
outsl
cld
bnd
jle
ja
jmp
ljmp
fadd
add
pop
ss
mul
xor
mov
push
cmp
ja
dec
cwtl
leave
ret
loope
jne
sub
dec
lock
xorb
jmp
jg
dec
dec
test
in
into
ja
sbb
out
sbb
outsb
data16
iret
insl
popa
jecxz
xchg
dec
fldcw
push
or
ret
lcall
cmc
mov
xchg
inc
in
repz
adc
push
bound
rcrl
push
mov
call
sub
dec
mov
stos
insl
cli
flds
jnp
and
aaa
xorb
push
xor
mov
popf
cmp
jnp
add
adc
fidivl
mov
mov
jmp
sti
cmp
mov
add
sub
mov
cmp
pushf
arpl
mov
adc
inc
sub
lcall
mov
pop
sub
xor
dec
aas
mov
std
lahf
in
jno
add
push
add
push
mov
cmc
inc
xchg
adc
and
push
out
or
jecxz
pop
mov
test
jo
leave
and
sub
jecxz
cmp
jmp
ss
fisttps
out
push
xlat
jne
add
push
jae
cmp
test
addr16
leave
fildl
pop
and
imul
push
lcall
mov
mov
mov
jnp
aaa
icebp
addr16
in
lea
inc
iret
icebp
or
test
std
fldt
and
push
xchg
dec
mov
mov
xchg
mov
gs
icebp
push
hlt
mov
pop
mov
cmp
jne
add
lret
push
mov
stc
sbb
icebp
fistps
clc
inc
jmp
sub
mov
cmc
xchg
fwait
inc
cld
outsl
in
mov
fnstenv
dec
push
leave
scas
fs
sub
mov
lock
loopne
mov
ds
and
out
cmp
ds
pop
int
ss
out
lock
js
bound
outsl
imul
push
inc
mov
push
adc
add
jle
or
inc
call
push
xchg
cmp
add
addr16
pop
lock
add
subb
cmp
adc
add
sbb
neg
adc
dec
sub
jmp
lahf
cld
push
xlat
xor
sub
inc
jmp
push
enter
and
inc
jb
inc
push
adc
decl
repz
cli
js
mov
inc
hlt
xor
add
add
or
or
clc
fs
ljmp
scas
sbb
call
clc
fstps
repz
sub
movl
outsb
cs
push
clc
pop
fistpll
add
push
push
push
ss
xor
push
push
push
call
lods
pop
fisttps
insb
xor
ja
lock
adc
call
outsb
pop
loope
ret
divl
push
push
xorl
push
push
orl
cmp
and
pop
push
pop
xor
inc
inc
data16
jmp
mov
mov
mov
xor
cmp
loopne
pop
or
inc
pop
inc
insb
pop
sbb
mov
subb
popf
inc
mov
popa
cs
outsb
les
stos
inc
add
sbb
fbstp
xor
xor
gs
dec
xor
sub
and
and
arpl
rol
adc
not
sub
jmp
push
jle
incl
push
fcomps
mov
imul
sub
call
addb
and
jno
pop
pop
icebp
sbb
xchg
jns
notb
lret
xlat
add
clc
xor
bound
jl,pn
adc
pop
xchg
push
adc
inc
push
cmp
push
jg
pop
dec
push
pop
aaa
push
cmp
call
adc
imul
not
jmp
addb
push
in
push
flds
jl
xor
jae
subb
enter
jmp
sub
sbb
adc
ficomps
fisubrs
push
imul
cmp
call
adc
lock
popa
adc
cwtl
jns
mov
add
or
and
call
ss
push
jecxz
nop
repnz
add
int3
inc
push
fmuls
aam
jo
sub
call
repz
bound
sbb
jbe
xchg
je
inc
rorl
mov
inc
sbb
pop
daa
adc
add
cli
inc
fsubrp
cmpsb
jg
iret
nop
inc
dec
pop
adc
jmp
cmp
inc
push
fnstenv
cmp
or
push
adc
push
push
aaa
lock
hlt
inc
in
daa
fs
push
push
xor
and
inc
jbe
push
pop
or
or
into
pushw
mov
in
push
push
push
xor
adc
call
sarl
not
jmp
push
cmp
mov
je
data16
hlt
jl
js
fidivrl
sub
flds
fisubs
cmp
dec
push
pop
out
mov
jb
sub
imul
pop
xor
sub
mov
mov
in
push
dec
fcmovu
popa
ficompl
cmp
xchg
inc
jmp
loop
jg
mov
jmp
testl
adcb
outsb
ret
jbe
xchg
lds
push
and
sbb
sar
xchg
sbb
inc
adc
neg
add
jge
add
call
filds
dec
push
mov
adc
sbbl
sbb
dec
ja
cmove
mov
imul
call
rcrl
aam
pop
and
mov
sbb
lock
leave
nop
sbb
ficomps
pop
jg
cmp
int3
sbb
cmp
cli
dec
push
mov
push
push
xor
fildll
add
call
push
jo
inc
or
scas
ljmp
inc
inc
pop
xorl
mov
sub
ss
push
jno
inc
dec
addr16
adc
out
dec
pop
leave
lcall
push
push
hlt
mov
or
fisubl
loop
or
icebp
add
and
adc
jg
addr16
adc
shrl
inc
negl
ficompl
inc
sbb
dec
ret
int3
add
leave
ret
dec
mov
insl
mov
sub
and
es
sbb
mov
pusha
pop
add
inc
xor
xchg
stos
aas
or
xchg
push
xor
cmp
xor
push
dec
data16
gs
testb
xor
cwtl
dec
lcall
push
adc
inc
push
out
sub
mov
fsubl
in
pop
out
push
jno
push
dec
dec
push
shll
pusha
xchg
outsb
push
cmp
ret
ret
out
cld
jnp
inc
call
shrb
addl
outsl
jp
clc
xchg
cmc
outsl
bound
mov
stc
std
shl
addr16
push
js
shlb
push
ss
mov
pop
push
subl
dec
icebp
mov
pusha
push
cmc
adc
dec
inc
add
inc
sbb
mov
xchg
lock
jmp
push
or
pop
jmp
loopne
clc
or
mov
not
sbb
push
lea
inc
int3
xor
cmp
xor
aaa
mov
mov
dec
in
mov
addr16
xor
sub
mov
test
jno
shr
ficompl
dec
jmp
add
cmp
in
add
mov
pop
pop
inc
xorl
dec
jae
sahf
dec
add
adc
jg
adc
inc
dec
push
in
or
into
inc
add
mov
lock
dec
jmp
jg
xorl
insl
popa
je
push
pop
push
dec
pop
test
call
pop
xchg
ficompl
jo
movsb
dec
mov
insl
push
dec
cs
mov
dec
neg
xchg
dec
push
stos
or
cli
insb
nop
imul
push
mov
push
pop
push
js
cltd
jne
adc
aas
lea
stc
call
cvttps2pi
push
inc
jno
inc
cmp
aad
cmp
jo
inc
ja
clc
push
fsub
or
imul
das
push
out
dec
mov
dec
enter
push
dec
or
jne
push
gs
scas
push
mov
cmp
and
clc
push
into
hlt
fucomi
sbb
incl
lods
cmp
cli
add
neg
mov
adc
subb
lcall
clc
jp
decl
je
stos
mov
cld
popa
and
add
insb
lahf
sub
cli
add
subb
mov
jp
aad
dec
mov
pop
or
and
push
push
into
js
push
jbe
addr16
push
pop
hlt
push
jecxz
not
jp
pop
mov
testl
xchg
inc
gs
inc
out
outsb
loopne
das
stc
cmpsl
push
push
sub
add
loop
rol
les
jecxz
ficomps
push
imul
mov
je
lods
loop
shll
outsl
add
cld
mov
mov
fidivs
inc
insb
imul
inc
sbb
inc
inc
adc
dec
inc
out
pop
hlt
xor
pop
add
stc
inc
dec
pushl
mov
dec
icebp
mov
addb
dec
not
mov
adc
inc
sub
lahf
xchg
pop
es
push
and
push
imul
inc
call
fisttps
inc
dec
jp
dec
add
pop
jmp
loopne
push
cmp
call
jecxz
push
add
inc
pusha
loopne
test
cmp
cmp
dec
data16
mov
faddl
sbb
addb
pushl
icebp
aas
push
mov
cmp
stos
xlat
adc
or
xor
scas
aas
pop
rolb
ds
insb
inc
inc
xchg
dec
stos
and
out
jo
and
and
push
cmp
loop
mov
fs
js
push
push
jbe
mov
push
mov
mov
fwait
jno
lods
in
sbb
shr
sti
call
cmp
mov
jne
pop
xchg
add
xor
imul
xchg
cmp
or
xchg
cs
or
je
xor
call
dec
push
pop
sub
cmp
js
cmpl
dec
in
push
out
mov
sbb
popa
jle,pt
scas
push
push
xchg
bound
push
dec
jle
xchg
inc
dec
addr16
push
xchg
cld
pop
cld
rclb
or
or
dec
outsl
xor
ret
sbb
cwtl
sbb
in
gs
or
fs
add
out
sub
in
xchg
add
xor
cltd
mov
xor
pop
lahf
call
inc
dec
adc
test
push
dec
and
in
pop
out
int
push
adc
cmp
enter
decl
div
fcomip
xlat
rorb
mov
je
mov
add
adc
addb
jle
dec
ss
mov
push
sbb
push
js
insb
push
call
loope
sbb
incb
xor
push
addb
dec
adcl
fistps
xor
sahf
and
js
sub
sti
pusha
pop
inc
imul
hlt
js
jl
xlat
ret
push
or
xor
scas
pop
lcall
fdivs
push
xor
in
mov
rolb
inc
push
mov
out
jo
pop
push
push
push
mov
mov
push
movsb
push
push
add
dec
add
xor
cmp
add
test
test
hlt
jno
or
push
out
incl
cld
lock
hlt
jmp
daa
mov
push
jne
sub
call
push
js
adcb
jo
xor
mov
lods
lret
push
xor
cmp
fcoml
loopne
jns
lock
lcall
jb
push
out
xor
add
notl
mov
xor
inc
dec
pop
xor
sub
dec
mov
fildll
sub
dec
add
pop
adc
sub
jl
loope
insb
sbb
fisubl
stos
dec
testb
cmp
or
scas
push
pop
dec
inc
ja
inc
popa
outsb
ss
push
cld
jns
call
sbb
add
push
adc
sub
jmp
rcrl
ficoml
sbbb
add
xor
jmp
sbb
push
inc
aam
mov
jecxz
js
dec
dec
loopne
aas
cmp
push
and
fdivrp
jbe
mov
lret
push
iret
divl
cld
push
sbb
negl
add
nop
sbb
scas
les
movsb
push
dec
test
push
dec
sbb
cmp
aaa
jb
inc
pop
not
sub
inc
shrb
cmp
je
inc
int
push
pop
imul
in
inc
dec
data16
inc
or
sub
ds
xor
rorb
nop
mov
pop
rcll
leave
inc
out
jo
push
loope
push
imul
ja
sbbl
sbb
rorb
jb
inc
add
jmp
fldenv
insb
push
lods
arpl
repnz
dec
sahf
int3
cwtl
dec
sub
mov
divl
in
cmovb
pop
enter
rcrl
icebp
jmp
fimull
pusha
adc
sub
lock
sbb
mov
loopne
jg
andl
sub
pop
sbb
popa
mov
mov
in
pop
xchg
push
dec
stos
mov
push
ja
aaa
xor
icebp
mov
fidivrs
das
pop
xor
incb
lret
cmpsb
fisubrl
push
jb
pop
mov
cmpsb
rorb
cmp
icebp
xlat
xlat
push
loope
inc
add
ficomps
fsubrp
data16
jo
shlb
sbb
inc
fiaddl
dec
sbb
push
push
add
out
lds
mul
call
add
jbe
sub
push
inc
enter
test
dec
jne
inc
jecxz
lret
sub
rcr
not
adc
idivl
inc
ret
loopne
adc
neg
dec
orb
xchg
pop
rclb
ret
push
enter
popa
pop
call
inc
mov
pop
mov
sub
test
jae
jo
push
loopne
inc
push
notb
pop
push
push
clc
adc
je
xor
push
clc
sbb
mov
fistpll
lret
xor
pop
mov
out
imull
notl
jecxz
dec
xor
lret
loope
add
sbb
add
sti
cmp
rclb
popa
ja
dec
mov
enter
cld
push
inc
cmp
movsb
mov
jle
jl
push
dec
je
dec
xor
call
fidivs
and
push
scas
outsl
dec
dec
jns
sbb
pusha
add
addr16
imul
cld
insl
je
sti
addl
jmp
sbb
push
clc
push
test
and
xor
cmpsb
jo
icebp
jg
adc
inc
sbb
sub
ds
push
cmpsb
shrb
cld
mov
xchg
and
dec
imul
imul
push
xchg
jmp
sub
iret
jmp
aas
mov
clc
std
mov
push
sbb
pop
int3
xchg
lret
wbinvd
pop
cmp
pop
imul
or
in
stos
push
mov
add
xchg
std
sbb
cwtl
sbb
jb
jle
fistps
addr16
sbb
push
push
jl
push
mov
pop
xor
inc
sub
xor
orl
inc
adc
stos
out
shll
dec
fwait
mov
xor
shll
aaa
popa
jns
add
arpl
adc
call
and
out
outsl
add
mov
inc
test
sub
sub
mov
pop
fdivr
pushl
aaa
popa
push
adc
leave
imul
lret
add
add
dec
cmp
call
lahf
lcall
sbb
repz
stos
pop
imul
mov
xchg
sbb
add
pop
stc
cld
insl
xor
pop
psubb
jg
or
ljmp
or
inc
inc
mov
addr16
mov
inc
psubq
imulb
insl
add
sbb
xor
decl
int3
sahf
lahf
mov
inc
aad
xchg
xor
nop
push
mov
push
ss
aad
add
std
cmp
mov
pop
sahf
xchg
cmp
imul
or
jg
or
pop
lods
data16
and
or
jg
into
and
hlt
jecxz
sub
and
mov
int
mov
aaa
aas
movsb
jmp
sub
sar
sarb
loopne
pop
aad
push
cmp
std
pop
pop
in
add
aam
je
icebp
lcall
sub
movsb
addr16
cwtl
add
mov
push
sbbl
pushl
xchg
sub
sbb
rcrl
dec
push
push
divb
mov
lret
mov
ljmp
pop
clc
notl
or
cli
mov
cld
sub
add
mov
push
sub
lcall
cmp
inc
popf
out
ds
lcall
std
imul
cwtl
and
mov
icebp
in
divl
bound
popf
jno
add
lcall
adc
sub
sbb
push
std
andb
in
cld
mov
mov
lret
mov
fdivl
or
push
and
fidivrs
fnstenv
add
scas
pop
push
sub
inc
insb
adc
cltd
dec
push
lock
or
adc
xchg
call
xor
fxch
clc
pop
cmpsl
lods
fcmovb
daa
xlat
fisttpl
xchg
pop
lret
pushf
nop
fwait
scas
sbb
add
xor
inc
mov
or
push
clc
xor
movsb
pop
adc
clc
push
insb
add
and
decl
pop
pop
inc
arpl
pushf
in
rcr
xchg
icebp
and
aam
sbb
mov
orb
stos
cltd
push
imul
pop
cmp
xor
pushl
cld
aad
loope
sub
shl
inc
ret
push
pop
adc
movsb
pusha
add
in
lcall
aaa
dec
icebp
add
xor
fidivrl
je
mov
std
mov
dec
pop
test
gs
cmp
outsb
in
dec
push
push
rclb
or
xchg
mov
fcos
push
push
fsubl
jge
in
xor
mov
cmp
lods
jb
fsubrp
cmp
mov
sbb
imul
mov
lcall
add
mov
xor
into
lock
arpl
rorl
out
jmp
and
inc
and
mov
dec
std
ja
aam
lock
dec
mov
push
pop
clc
pushl
rorl
inc
sub
and
add
call
call
inc
inc
push
xchg
pusha
dec
mov
int3
icebp
leave
aam
bound
insl
adc
mov
rcll
stos
insl
js
call
sbb
mov
xchg
aad
fwait
popa
jecxz
fbstp
pop
mov
jle
lahf
lret
loope
xor
jg
outsl
pop
loopne
push
pop
pop
in
sbb
imul
gs
aad
mov
sahf
adc
decl
inc
dec
mov
cmp
rcrl
stc
add
inc
ret
decl
jl
jnp
pop
mov
orl
xchg
sbb
adc
jge
push
decl
and
dec
push
test
jecxz
data16
lds
repnz
insl
or
mov
sbb
push
sub
push
arpl
dec
ljmp
in
mov
mov
icebp
rcrb
cld
jle
insb
in
xchg
cmp
cmp
bound
mov
das
test
push
jg
fs
sbb
inc
out
in
adc
or
aad
add
push
mov
lods
in
fwait
data16
icebp
lcall
out
push
outsl
xor
or
mov
jno
mov
mov
call
out
in
cwtl
hlt
adc
cmp
mov
sub
pop
shl
cwtl
out
rcr
cmp
pushl
std
sbb
arpl
pop
mov
push
loop
hlt
add
mov
lcall
xchg
ja
xchg
cld
push
jecxz
jmp
or
xchg
xchg
cmpsl
dec
int
push
test
loop
cmp
popf
xchg
into
add
sbb
scas
dec
add
mov
mov
sbb
rorb
dec
mov
cld
enter
jge
es
incl
sub
adc
repz
add
mov
push
dec
fistpll
int3
ja
fs
mov
shrb
pop
sbb
out
xchg
mov
test
data16
sarl
xacquire
jg
lds
ret
sub
clc
aas
lds
mov
pop
adc
shlb
sbb
out
out
addr16
test
ljmp
mov
or
test
ret
int3
dec
sti
add
adc
call
mov
xchg
lahf
xchg
rclb
aad
out
mov
push
test
sub
scas
arpl
aas
lahf
mov
and
jge
dec
or
adc
shlb
mov
outsl
dec
aam
imul
jmp
shrb
inc
int3
or
in
cli
data16
mov
clc
outsl
fistpl
roll
ss
ljmp
incb
outsl
sub
dec
sbb
scas
add
cmp
mov
lcall
js
push
sbb
add
icebp
popf
imul
hlt
incl
dec
lock
movsl
std
aas
jnp
sbb
ss
jg
inc
int3
xor
xor
in
jb
ficomps
xor
ja
jb
inc
enter
gs
pop
decl
ljmp
inc
sub
inc
je
lret
xchg
dec
push
les
pushf
sbb
out
cli
call
or
xor
es
jno
add
leave
insb
icebp
lcall
adc
mov
scas
xor
pop
std
mov
dec
fnstenv
std
call
pop
outsb
je
or
repz
xor
iret
mov
vxorps
pop
or
mov
test
call
cld
loopne
shll
js
lret
ret
add
repnz
mov
dec
fildl
out
cmp
and
shlb
cld
repnz
pushf
xchg
pushl
popf
jg
out
jb
hlt
sub
loope
add
sahf
enter
std
in
decb
adc
int
pop
xor
out
push
mov
sbb
inc
ficomps
push
decl
push
mov
pop
and
in
ss
movsb
sub
mov
repz
push
decl
and
pushf
sbb
ss
clc
add
dec
jmp
adc
es
cmpb
mov
dec
in
lcall
mov
cmp
push
imul
mov
in
mov
decl
and
aad
lods
aad
jl
stos
mov
ja
int
ljmp
push
es
dec
pop
dec
icebp
mov
push
cmc
inc
mov
adc
scas
clc
decl
lock
es
stos
xor
and
mov
sbb
popf
mov
lcall
arpl
mov
cmp
xchg
fimull
popa
dec
inc
sub
inc
push
call
mov
mov
popa
mov
imul
andb
pop
mov
dec
xlat
mov
jmp
hlt
jmp
cmp
inc
fdivrs
adc
cld
push
sti
dec
sub
cmp
ljmp
mov
mov
mov
daa
arpl
divb
lds
push
xor
or
pusha
pushl
std
mov
pop
add
mov
cmp
xchg
dec
sbbl
decl
pop
cmp
dec
lahf
repz
cmpsl
inc
rcr
call
mov
popf
stos
mov
ja
subl
les
add
incl
xchg
inc
arpl
jle
std
pop
sbb
adc
movsl
push
add
pop
add
cmp
jecxz
adc
sub
into
iret
lcall
sub
scas
sub
jl
xchg
lods
push
pop
jp
js
sti
mov
test
ljmp
xchg
jae
add
cmp
insb
cld
in
rep
jb
ljmp
cs
decb
lods
fidivrl
and
cmpsl
cwtl
mov
inc
inc
and
inc
add
jg
push
imul
sub
xlat
mov
pop
and
jge
dec
xchg
lcall
bound
cmpsl
lret
fldl
adc
aas
daa
inc
dec
pop
imul
ljmp
rcr
clc
add
lock
pop
and
pushf
incl
cld
pop
or
jbe
pop
jae
std
mov
inc
jle
out
shl
pop
push
xchg
call
and
sbb
stc
cld
sbb
push
pop
fs
mov
imull
enter
sub
incl
push
hlt
push
xlat
sbb
gs
xchg
mov
jmp
outsl
xchg
sti
jle
lock
insb
jecxz
stos
test
es
call
enter
inc
dec
dec
cmp
or
loope
movsl
loop
fsub
inc
jmp
loop
les
loopne
jo
imul
sahf
or
mov
bnd
push
bndldx
mov
inc
push
mov
cmc
mov
pushf
adc
ss
sar
adc
add
das
rclb
test
ret
dec
xor
xor
call
outsl
mov
mov
cmp
stc
fisubs
pusha
and
fs
rol
ljmp
std
pop
dec
in
aaa
sbb
cmp
mov
adc
repz
in
sbb
lret
adc
movsb
fs
xchg
xlat
nop
sbb
enter
nop
incb
fnstsw
pop
dec
push
dec
into
mov
aam
pop
sarb
punpcklbw
push
fstps
imull
jmp
test
sub
cmp
pop
arpl
jnp
lret
inc
push
jmp
and
mov
hlt
cld
pop
imul
push
push
and
stos
es
cmpl
cmp
ljmp
xchg
cmp
data16
cmp
fcmovb
rol
dec
adc
jne
cwtl
mov
fists
out
call
repnz
adc
mov
push
jo
aad
sub
icebp
xchg
xchg
in
leave
cmc
jecxz
imul
pop
repz
clc
ljmp
xchg
and
pop
arpl
roll
xchg
lock
mov
repnz
lcall
sub
and
daa
inc
fs
outsb
cmp
add
jns
mov
mov
mov
repnz
push
pop
xor
jae
xor
inc
cld
jg
xor
notb
push
cmpsb
xchg
data16
xchg
sbb
lcall
cmpsb
dec
test
aas
add
sub
dec
insl
push
mov
insb
lcall
loope
sbb
dec
inc
bswap
sbb
push
pop
push
test
jge
dec
pop
xchg
ljmp
jg
inc
insl
aad
lret
sub
mov
std
fldcw
fs
push
jg
gs
outsl
cli
ljmp
adc
fld
push
and
or
pop
dec
cmp
xchg
ljmp
xchg
sbb
fucomp
or
pop
mov
add
aad
into
adc
fwait
mov
inc
cmp
mov
jle
dec
in
add
dec
xchg
pop
leave
pop
adc
or
data16
mov
mov
stos
push
push
jg
fcoms
fs
jns
sbb
mov
xor
sbb
push
stos
lcall
loop
popa
cmp
mov
jnp
adc
lcall
sbb
decl
dec
imul
dec
lea
pop
jae
addr16
xor
jl
jae
xchg
aam
push
xor
inc
mov
dec
mov
pop
into
push
cmp
adc
add
or
mul
sub
inc
xorb
jg
mov
adc
jo
rorl
push
pop
incb
fcomip
out
cmp
imul
adc
std
call
arpl
pop
data16
fwait
mov
xor
jle
jbe
jg
out
push
dec
mov
cs
cmp
out
inc
fsubrl
ljmp
lcall
adc
hlt
xor
out
or
fs
add
or
dec
imulb
lods
enter
xchg
push
ror
dec
addr16
icebp
xchg
dec
into
push
aaa
mov
jp
incl
inc
repz
inc
adc
repz
and
scas
jg
ret
cmp
ss
mov
je
sub
lahf
in
rcr
push
cmp
add
adc
mov
and
xchg
icebp
push
sbb
mov
or
pop
xchg
and
fstpl
inc
ljmp
rolb
jae
or
cmp
inc
dec
push
shrl
adc
cmp
icebp
fwait
shll
push
pop
inc
sbb
cmp
pop
shrb
aas
pop
movsl
adc
and
jb
dec
lock
mov
mov
movsb
movsb
stos
push
jns
sbb
jmp
pop
test
jmp
jg
decl
addr16
xor
orl
insl
push
mov
sbb
xor
mov
cmpsl
lcall
movsb
mov
mov
fildl
repz
pop
cmp
push
dec
push
pop
push
cwtl
or
push
inc
aam
mov
mov
pushl
dec
mul
lods
dec
xchg
addb
das
push
stos
into
jge
icebp
jp
sub
pop
cmpsb
sub
jg
mov
lcall
decl
shll
cwtl
pop
data16
cmpsl
xor
fucomp
xlat
out
mov
in
stos
std
push
outsb
push
jmp
in
push
sbb
cmc
lcall
mov
stos
sahf
jbe
aam
lret
test
decl
lea
cmp
jo
xor
mov
dec
sub
jecxz
dec
scas
push
test
mov
ljmp
push
adc
push
stos
decb
jecxz
sbb
jno
cmp
jmp
and
mov
loopne
inc
rolb
je
fadds
push
lds
sub
or
mov
mov
pop
test
jge
loopne
mov
outsb
add
pop
xor
xchg
test
jmp
rcll
and
jp
daa
xor
fbstp
sar
inc
cmp
call
imul
ja
add
sub
push
jo
loope
or
and
pushl
daa
push
pop
leave
mov
or
pop
xor
aad
ljmp
push
or
or
xor
pop
jne
xchg
sahf
xorb
xlat
adc
jg
dec
push
sbbb
cmp
pushl
sbb
fisubrl
mov
push
pop
rclb
push
dec
insl
pop
inc
push
sarb
sbb
fwait
cld
lock
adc
daa
cli
pushl
frstor
lcall
jl
xchg
fsubrs
mov
sbb
ret
dec
dec
mov
ret
mov
incl
sub
push
xchg
popf
mov
fildl
dec
jmp
lcall
sub
bound
repz
or
dec
xor
sti
daa
decl
sub
pop
mov
dec
mov
pop
and
push
mov
jmp
adc
xchg
lcall
inc
out
insl
push
sub
outsl
push
inc
cmc
shrb
je
sub
and
sbb
inc
pop
pusha
jnp
daa
lret
lcall
iret
adc
jmp
stos
or
inc
mov
popa
fists
dec
push
in
mov
incl
or
les
setge
push
mov
xor
inc
clc
fcomip
sub
fbld
adc
and
out
rorb
mov
jnp
adc
sbb
decl
mov
cmc
mov
jne
or
xchg
mov
add
filds
xor
sbb
sarb
pop
xor
cld
add
call
jl
bound
imul
loope
test
aaa
fcom
inc
cld
lcall
mov
xchg
out
mov
mov
nop
push
outsl
shl
lods
daa
fwait
adc
push
add
lcall
les
gs
sbb
insl
sbb
jg
push
and
shlb
inc
data16
in
loopne
push
sbb
xor
jmp
pop
mov
inc
subl
add
test
push
pusha
mov
push
mov
push
int3
int
add
push
lret
pop
push
mov
gs
jmp
nop
decl
xchg
bound
adc
mov
mov
sbb
xchg
push
mov
lock
ljmp
jmp
push
xchg
rorb
call
jo
call
mov
testb
ss
sarl
dec
divl
out
stc
callw
xor
fwait
decl
xlat
lret
mov
pushf
mov
test
pop
cmc
aas
pop
or
jns
les
xchg
cwtl
mov
jns
sbb
jmp
aas
push
pop
and
pusha
mov
mov
gs
decl
add
push
out
movsb
cmp
dec
jmp
xchg
out
adc
cmp
loop
aas
addr16
in
mov
iret
mov
fucomi
leave
jmp
adc
call
incl
stos
mov
sub
mov
sub
aad
and
sub
arpl
mov
cmpsb
mov
lods
icebp
repnz
push
cmp
aad
stc
push
dec
xor
shrb
add
cmpsl
aad
ljmp
pushl
insl
sub
bound
cmpsb
cmpsb
mov
add
and
ss
sar
out
cli
mov
sahf
jo
xlat
loope
add
lret
insb
mov
mov
add
es
xor
stc
pop
paddd
sub
outsb
jg
in
mov
out
stc
rcll
cmp
addr16
out
mov
ss
daa
jmp
ja
mov
lock
test
lcall
add
inc
mov
lcall
lret
test
mov
pop
out
ret
push
repz
mov
mov
mov
cmp
std
incl
cmp
mov
movsl
sub
les
mov
mov
ljmp
and
dec
mov
adc
shrb
in
cmpsl
mov
outsb
or
pushl
std
xchg
and
xor
popf
mov
jecxz
mov
dec
inc
lret
jmp
sbb
sbb
jge
adc
or
jmp
in
cwtl
jbe
jmp
jmp
lret
fdivrl
decl
stos
loope
xor
mov
sbb
loopne
call
lret
mov
clc
ljmp
mov
aad
and
loope
push
cmp
sub
mov
push
push
leave
pop
test
inc
dec
inc
fs
pop
lahf
test
xchg
mov
pushl
cmpsb
paddd
sub
xchg
cmpb
cmpsl
call
fstps
add
lcall
add
lahf
mov
int
enter
rorl
jge
sahf
mov
call
push
cmp
xor
stc
ljmp
jecxz
inc
aaa
jo
scas
outsb
cmp
push
inc
jmp
jns
ja
cli
test
jb
aam
out
or
adc
mov
adc
lods
pusha
stos
mov
in
push
or
mov
ja
outsl
xchg
jo
mov
pushl
add
imul
cli
jmp
sbb
subb
mov
lcall
jae
or
sahf
test
jo
dec
cli
in
push
cmp
mov
push
sub
xor
sarb
fwait
repz
imul
mov
xchg
jmp
fsubrp
notl
das
cmp
lcall
movsb
add
cmp
fwait
add
rcr
push
mov
lds
pop
loope
sub
mov
ss
ja,pt
mov
bound
pop
bound
dec
mov
inc
vphaddbw
popf
rcl
aad
jmp
jnp
adc
clc
jno
outsb
cmp
cmpsl
xchg
enter
push
lds
dec
cld
pop
cld
inc
ss
pop
ds
jmp
sub
ffreep
inc
mov
pop
sbb
jae
ss
lcall
arpl
or
fldl
and
sti
test
ret
popa
jg
dec
pop
add
imul
inc
adc
sbb
mov
inc
lods
xchg
jge
fimuls
add
adc
mov
ret
push
lret
mov
adc
lcall
lock
jne
cmp
aaa
out
repz
lcall
push
mov
xor
adc
pop
mov
int3
pop
cmp
mov
and
jg
fucom
ret
shr
cli
sub
pop
push
or
lcall
jg
sbb
or
mov
nop
inc
dec
int
jo
repz
dec
or
push
adc
pop
mov
cmp
push
xlat
in
sbbb
mov
ljmp
pop
mov
xchg
lahf
mov
mov
and
sub
xor
push
sar
ja
call
std
ja
pop
and
out
lock
pop
push
pop
push
pop
std
mov
jmp
aam
sbb
ss
insb
ja
pusha
push
dec
lea
pop
mov
call
cmp
jge
dec
adcl
scas
clc
cmpsb
fwait
leave
pop
mov
xor
or
push
mov
arpl
jmp
mov
adc
ss
subl
sbb
mov
call
std
pop
cwtl
adc
xor
inc
pop
pop
stos
xchg
mov
lcall
popa
decl
mov
ljmp
subb
iret
and
incl
lods
or
sub
ss
adc
sbb
daa
adc
push
clc
add
dec
jmp
das
fildl
cmpsl
cs
outsl
cmp
out
icebp
lods
sub
subl
jmp
cmp
andl
dec
jne
std
xor
cld
inc
mov
fsubp
jmp
adc
rcll
dec
loop
jmp
cs
sarb
mov
gs
mov
outsl
dec
sub
divb
add
pop
mov
fsubr
clc
vmovaps
incl
adc
leave
gs
popf
test
inc
add
repz
sbb
xor
data16
ja
mov
call
loopne
xor
push
insb
cmp
xchg
pop
push
aaa
and
jmp
xor
clc
sub
or
or
sti
jmp
mov
imul
imul
mov
dec
xor
popf
push
pusha
push
test
pop
push
mov
dec
and
decl
fsubp
test
mov
test
fwait
push
xchg
insl
ljmp
dec
lahf
arpl
sub
lcall
adc
scas
test
or
push
rolb
call
lcall
or
call
and
out
arpl
shlb
mov
or
mov
inc
pop
adc
cmp
jge
xor
and
mov
int
jmp
fiadds
inc
cmp
insb
inc
hlt
aaa
cmp
outsl
into
fsubl
mov
pop
cli
adc
insb
dec
push
cwtl
xorl
pop
lcall
xchg
sub
cli
add
loopne
xor
pop
test
popa
out
adc
es
jmp
pusha
jbe
sub
pop
sbb
adc
sbb
lcall
mov
jl
mov
ljmp
ret
stos
mov
dec
jns
xchg
stos
testb
push
ljmp
test
mov
mov
push
popf
sbb
std
pop
and
xchg
mov
mov
popa
sub
push
add
dec
lcall
cmp
inc
bnd
ret
into
in
int3
in
imul
sub
adc
rcr
mov
stc
push
push
mov
xor
sbb
out
cmp
subb
pushf
inc
xor
mov
ljmp
movsb
gs
stc
fildll
add
loope
dec
push
or
ljmp
inc
ljmp
sar
repnz
repnz
or
enter
es
pushw
jecxz
sub
dec
call
jge
bndldx
mov
cmp
gs
ss
and
push
jg
dec
insb
sbb
inc
dec
mov
xchg
dec
cld
adc
mov
sti
add
call
inc
ja
xchg
sbb
scas
call
mov
aaa
cmp
cmpsb
ss
mov
inc
addr16
or
xor
adc
lock
pop
inc
aas
mov
mov
cld
aad
test
cmc
mov
aam
ficoml
hlt
pop
push
push
push
insb
ljmp
xlat
fucomp
cltd
push
fisubrl
sbb
stos
arpl
mov
fldcw
dec
ss
out
ljmp
imul
pushl
out
in
xchg
and
adc
push
popa
shrl
xor
sar
fcmovnu
mov
stos
xor
mov
mov
add
stos
sti
mov
mov
fdivr
ljmp
sbb
xor
cmp
mov
jg
cs
popf
jle
sahf
inc
addl
ss
int
inc
decl
push
aaa
mov
xchg
popf
in
sti
fisttpl
add
jg
js
adc
xchg
pop
adc
ffreep
xchg
shr
ficompl
ret
mov
jmp
push
cmp
mov
lret
stc
xchg
jbe
or
dec
pushl
packuswb
hlt
dec
movsb
mov
and
es
fistpl
mov
lods
dec
jns
xchg
xchg
push
mov
xor
lret
ljmp
fwait
mov
jmp
incb
test
ss
xor
mov
mov
mov
movsb
push
aaa
leave
mov
cmp
sbb
jg
jle
xor
sarl
in
mov
adc
out
mov
fdivrp
pushl
jnp
imul
jmp
mov
adc
sbb
dec
ss
pop
or
jnp
roll
push
mov
call
int
or
pop
jmp
xor
popf
ret
mov
push
gs
add
push
xor
stos
popa
inc
push
mov
leave
mov
or
decl
enter
or
adc
add
mov
mov
add
stc
dec
aas
dec
lock
cmp
dec
sub
bound
xchg
out
ja
fidivrs
ja
out
loope
gs
push
lods
dec
insb
fcmovbe
mov
jmp
in
pusha
and
outsb
sub
pop
pusha
imul
mov
decb
or
stos
push
test
cmp
jmp
pop
hlt
jg
cmp
call
push
jl
push
mov
jbe
enter
fbstp
push
popa
fidivrl
mov
push
jle
xchg
outsb
jg
lock
inc
loopne
fists
pusha
pop
dec
pop
sahf
jae
js
lcall
or
rcl
repz
inc
subl
lcall
mov
enter
cs
cmc
xor
cmp
ss
xchg
mov
xchg
cld
mov
mov
pop
aam
push
mov
sub
stos
inc
push
jg
mov
sbb
sbb
ja
test
in
ds
mov
les
push
enter
and
decl
repnz
arpl
xchg
mov
add
jg
arpl
into
mov
or
je
jo
push
xor
dec
mov
ljmp
mov
ss
movsb
ret
and
pop
cmp
aas
jno
popa
lods
out
jg
jmp
cmp
pop
sub
cmpsl
and
out
inc
adc
add
cmp
pop
std
out
sbb
mov
push
sub
adc
fildll
movsb
sbb
and
incl
fwait
pusha
ret
mov
hlt
mov
decl
lret
ds
inc
lret
imul
ret
sub
fidivrs
decl
rcr
rolb
repnz
fcmovu
pop
sbb
push
cmp
test
or
jno
mov
push
out
rcrb
sub
es
add
inc
xlat
push
rol
enter
out
mov
sarl
scas
adc
ljmp
mov
inc
mov
cli
pop
cld
test
lea
add
incl
cmp
xor
ja
call
test
mov
into
addr16
int3
add
mov
adc
xchg
shr
rcll
popf
mov
ss
or
in
push
movsb
mov
dec
inc
lcall
call
icebp
mov
outsb
xchg
xor
pushf
pop
bndldx
sub
aas
call
lcall
mov
pop
mov
xor
jg
mov
mov
dec
pushl
ds
filds
adc
push
insl
insb
shrb
les
add
insb
push
lock
ljmp
and
mov
jg
lcall
stc
ss
lcall
inc
leave
xchg
mov
js
cmpsb
jg
fsub
test
icebp
sub
jne
data16
pushl
pop
push
add
add
in
mov
jnp
sarb
inc
xchg
sahf
outsb
lock
or
jb
mov
lret
inc
enter
sti
lcall
adc
in
mov
pop
push
mov
mov
ja
push
cld
fcomip
pusha
or
orb
xchg
sti
or
inc
rcrb
dec
jmp
add
xlat
pop
jne
idiv
stos
sahf
ljmp
in
leave
std
and
pop
leave
inc
ss
xor
decl
inc
arpl
xlat
xchg
ljmp
pop
inc
push
sahf
fstpl
pop
insb
push
int3
movsl
mov
mov
mov
mov
push
jmp
cmp
jmp
scas
mov
cli
jnp
das
sbb
pop
outsb
orb
gs
icebp
fildll
cmp
call
jbe
push
loop
add
mov
dec
push
dec
push
sub
fbstp
cmp
nop
pop
jns
mov
adc
pop
loope
fmulp
fcmovnu
rorl
imul
jg
push
push
rclb
fninit
clc
pop
in
lahf
insl
ret
sbb
sti
add
or
inc
cmp
call
cmpsl
push
push
imul
mov
sub
jmp
mov
cld
ljmp
jae
and
bound
pushf
and
cmc
xchg
push
aas
es
nop
cli
jmp
mov
push
or
xlat
mov
jg
mov
bound
fwait
mov
out
xor
or
inc
sub
pop
popa
insb
push
test
mov
push
sbb
add
push
aas
push
mov
sbb
cmp
jg
cmp
mov
sbb
adc
jg
mov
xchg
cmp
fildll
insb
icebp
adc
jno
std
mov
mov
sar
loopne
leave
inc
lods
sbb
xor
cmp
lcall
jp
cmp
lds
mov
iret
mov
or
pushl
fsubrs
repnz
clc
arpl
xchg
jno
fcomip
js
jne
sti
mov
hlt
sbb
dec
mov
and
sub
outsb
mov
push
int3
mov
mov
cmp
in
out
sub
imul
mov
incl
mov
daa
sub
or
add
xchg
mov
cmp
sbb
int
daa
jle
incl
pop
imul
push
add
push
push
cwtl
popa
clc
repz
xchg
pop
mov
lret
xchg
or
shll
movsb
add
dec
repz
insb
sub
cmp
adc
add
pushl
std
cmp
mov
orl
cs
xchg
sahf
scas
ljmp
push
jmp
mov
pop
aaa
cmp
pushl
ljmp
fmulp
fstps
or
fisttpl
aaa
loop
insb
sarl
push
mov
scas
cmpsb
rorl
loop
lods
inc
mov
push
call
xor
nop
xorb
jbe
add
xor
dec
call
scas
aas
ss
jnp
sub
out
dec
ja
dec
sbb
shlb
jl
push
fcomip
dec
sbb
dec
mov
and
pushf
jmp
xchg
lea
iret
ljmp
push
mov
xchg
and
push
pop
dec
push
sub
cld
sub
clc
mov
sbb
testl
mov
fcomip
incl
arpl
mov
pushf
daa
dec
sub
ret
push
xchg
imul
sub
sbb
rolb
dec
ljmp
push
jg
push
and
or
lods
iret
lret
inc
push
cwtl
enter
or
inc
lcall
arpl
mov
movsb
jnp
cmp
out
fs
daa
xor
loop
dec
jge
mov
or
mov
mov
cwtl
pop
adc
jg
mov
push
adc
lock
stos
std
daa
cld
mov
mov
mov
pop
std
in
repnz
std
cmp
stos
popf
dec
and
bound
mov
push
cmp
cld
std
movsb
insb
ss
cmp
mov
stos
sub
mov
push
cli
shrb
std
ret
dec
lcall
sbb
inc
push
pop
mov
xchg
out
mov
iret
ljmp
pop
xor
movsb
dec
jg
clc
and
ljmp
dec
jae
mov
jo
pop
push
pop
mov
lea
in
sbb
or
xchg
jnp
lods
and
xchg
jb
mov
out
jmp
lcall
lcall
dec
out
in
jnp
fwait
mov
jp
cltd
cwtl
pop
addr16
adc
pushf
rol
mov
cwtl
and
ljmp
mov
rcr
movsb
scas
outsb
movsb
lods
mov
rorb
add
decl
imul
lods
mov
pop
repnz
jg
pop
sbb
push
lret
cmpsb
mov
fstpt
mov
fcomip
fbld
popl
inc
pop
cltd
call
das
cmp
mov
jmp
jns
cltd
push
das
mov
ljmp
lret
mov
js
loopne
insb
cld
fisubrs
sbb
fs
jp
pop
pushf
or
pop
push
sar
ljmp
mov
in
jmp
sub
pushw
jne
adc
test
sub
test
clc
xchg
insb
mov
dec
mov
push
movsb
mov
cmpsl
lock
fldt
decl
ret
or
pop
repz
pusha
sbb
js
fwait
in
xchg
std
sbb
out
mov
pop
inc
dec
push
mov
xchg
mov
add
fs
pop
test
sbb
jae
loop
pop
test
add
or
push
fists
clc
call
insl
or
push
incl
mov
push
ret
push
popf
mov
decl
xor
imul
push
adc
call
pop
inc
dec
call
mov
out
cld
lcall
mov
decb
decb
inc
xchg
call
mov
incl
orb
sbb
out
xchg
inc
idivb
jne
xor
in
push
add
insl
stos
push
push
jmp
cwtl
aaa
push
and
fldcw
lcall
mov
shr
mov
inc
ds
imul
leave
dec
jae
pop
mov
cli
jg
inc
mov
dec
push
push
cltd
dec
test
bound
cmp
test
sub
push
shrb
lret
fucomi
sbb
lods
xchg
mov
hlt
call
std
outsb
std
mov
test
pop
rol
popf
stos
xchg
pop
or
xor
mov
inc
decl
add
test
cmp
jne
sbb
es
push
jns
lcall
into
stos
mov
pop
mov
or
push
inc
dec
cwtl
int
mov
ljmp
xchg
pop
in
mov
xchg
sub
lret
cmpsl
jg
pop
pop
rcr
clc
add
aam
filds
sbb
xchg
and
fs
jno
cmpsb
jl
mov
call
or
dec
out
push
or
data16
repz
add
into
fld
pop
test
in
push
jmp
or
pop
mov
in
addl
mov
lock
xchg
sahf
sub
cmp
pop
fbstp
jo
ficomps
push
mov
mov
aaa
shlb
loope
push
lret
push
xchg
test
pop
fcomip
jg
cltd
lock
insl
dec
out
and
xchg
mov
jl
inc
inc
mov
pushl
add
or
insl
je
jne
enter
sbb
cmp
and
fsubl
add
pop
cld
pop
jl
jge
fsubr
or
xchg
incl
mov
inc
pushf
adc
dec
addr16
insl
cwtl
ljmp
push
xchg
js
mov
dec
push
jo
sbb
cmp
lret
pushl
movsb
ret
jo
xor
lods
dec
sub
lea
insb
mov
push
outsl
push
sub
and
out
dec
mov
les
and
notl
loop
mov
mov
cmp
nop
jo
out
jbe,pn
ror
ljmp
in
jmp
test
movsb
ds
pop
not
aam
in
push
sbb
sbb
push
pop
pop
mov
and
jp
or
lret
add
lock
rorb
dec
cmpsl
test
rcll
cwtl
pop
lcall
push
jg
xchg
mov
jmp
xlat
adc
cmp
jmp
cmpsl
xchg
xchg
jns
jl
mov
inc
rcl
jp
xor
jmp
cmp
int
mov
into
scas
mov
pop
rolb
add
cmpsb
dec
gs
jge
sbb
aas
popf
leave
das
pop
add
add
mov
call
mov
add
pushf
pop
lahf
insb
cmp
jle
adc
loope
mov
mov
push
imul
jg
out
inc
mov
xor
mov
mov
or
pop
cmpl
jno
movsl
out
add
call
jmp
in
popa
es
out
in
in
lock
ja
dec
adc
ret
into
cmpl
pop
lock
pushl
push
data16
jge
imul
jg
dec
aaa
inc
xchg
jb
add
xor
dec
xor
inc
mov
inc
aam
adc
loopne
or
jmp
xor
and
jle
inc
or
scas
ret
or
pop
pop
mov
nop
push
cmp
mov
mov
push
jmp
aas
dec
sbb
push
mov
adc
mov
and
pop
andl
jle
jno
pushf
mull
ljmp
inc
andb
inc
dec
fcoml
push
pop
add
in
adc
and
lods
inc
test
or
and
cmc
adcb
push
hlt
cmpsb
mov
ss
cmp
mov
jmp
jecxz
mov
pop
fsubr
out
or
xchg
shrb
jecxz
adc
ljmp
mov
adcb
mov
mov
adcb
xor
mov
pop
add
xchg
push
and
rcrb
or
xor
out
fists
and
cmc
xchg
aaa
mov
insl
mov
pop
lock
inc
cli
dec
bound
aam
ud0
decl
popf
iret
xchg
mov
add
cwtl
cmpl
lds
js
insb
pop
and
or
fbld
dec
decl
adc
dec
movsb
js
psubsb
call
and
pushf
dec
push
pop
adc
cmp
cmp
add
repnz
mov
jno
loop
movswl
call
mov
mov
lods
sub
add
pop
inc
push
inc
push
js
mov
push
mov
dec
add
ljmp
movsb
lcall
in
lret
xchg
test
mov
fistps
in
scas
in
test
cmp
dec
jae
push
fcmovnbe
cmp
rorb
adc
addr16
pushf
decl
mov
lcall
mov
fbld
das
push
fnsave
pusha
leave
nop
push
pop
flds
inc
push
mov
sbb
stc
sub
fidivl
dec
cmpsl
xchg
leave
aam
inc
cltd
adc
je
jnp
add
sub
bound
cmp
mov
cmc
shrl
fisttpll
pushl
hlt
das
daa
movsb
push
mov
sahf
je
int3
popf
jne
popf
mov
add
dec
push
js
xor
inc
or
lds
stc
std
or
xchg
out
test
mull
je
aad
sub
cs
mull
or
cmp
and
mov
mov
dec
add
jg
aaa
inc
mov
or
or
pop
sti
xchg
jnp
xor
lcall
inc
mov
call
jb
stos
test
call
adc
pop
add
ja
mov
stos
push
sbb
fsub
pop
hlt
scas
fs
sar
sub
add
sub
sub
iret
push
shl
mov
loope
or
jg
rcrl
sahf
mov
mov
push
lcall
movsl
lahf
and
dec
jbe
ja
incl
movsl
mov
xor
jo
clc
jl
gs
mov
xor
cltd
mov
sub
push
jae
test
pushl
cwtl
insl
sub
daa
test
lret
mov
bound
lret
stos
lahf
cmpl
dec
pop
icebp
push
jnp
cmp
cwtl
rcrb
sbb
add
insb
xchg
out
shl
outsb
adc
clc
imul
mov
pop
popf
stos
sbb
ljmp
inc
xor
mov
in
push
xchg
dec
and
fld1
repz
mov
cld
cmpl
iret
movsb
lret
xchg
fnstenv
repnz
lock
incl
adc
stos
mov
cmpb
mov
inc
cmp
push
movsb
push
sub
out
clc
lods
mov
into
les
mov
nop
orb
push
sbb
lock
fninit
sub
jg
and
add
aam
jo
mov
inc
out
mov
idiv
out
clc
mov
sub
sub
jg
cs
lods
shl
in
inc
mov
mov
jmp
test
ret
sahf
test
mov
mov
and
dec
xor
aad
mov
lahf
rcr
mov
jnp
mov
data16
push
imul
shl
decb
xor
add
inc
mov
and
push
mov
mov
repnz
addr16
jmp
xor
inc
imul
jp
push
in
cmpsl
sbb
aas
add
sbb
push
fdivrl
adc
clc
incl
pusha
pop
push
ficomps
int
into
pop
add
arpl
movsl
mov
mov
jmp
mov
sbb
movsb
pop
stc
bound
bound
loopne
sbb
addr16
pushl
hlt
scas
dec
mov
loope
push
cmp
sbb
adc
test
adc
mov
push
jmp
add
nopl
pop
jae
push
popa
mov
cmpsl
jns
outsl
pop
daa
mov
or
and
fdivrl
push
popa
pop
int
lret
out
insl
into
pushf
mov
scas
sti
adc
outsl
js
inc
sbb
mov
dec
lock
pushl
sbb
addr16
pop
rorb
popa
xor
rcr
mov
pop
adc
add
or
dec
int
sbb
repz
out
push
insb
loop
cli
test
inc
int3
sbb
arpl
imul
das
and
std
jg
lcall
cmp
jb
in
xchg
push
incl
and
in
push
shlb
jge
popf
push
repnz
jg
fiaddl
push
inc
sub
popf
pop
arpl
mov
cs
mov
decb
loope
xor
sahf
cs
jns
jbe
xchg
mov
shl
or
xchg
push
lock
xor
jge
mov
fbld
popa
movsb
aaa
xchg
mov
insb
ja
icebp
jg
std
jg
int3
dec
mov
cmpsb
das
fmul
xor
js
mov
clc
outsl
cli
filds
push
ret
jo
aaa
sub
arpl
clc
and
jg
out
pop
ret
lret
cmpsl
mov
mov
or
mov
out
sub
fwait
dec
subb
xor
fimull
out
out
pop
xor
sbb
or
lods
adc
decl
sbb
jns
push
mov
imul
std
jb
lret
push
roll
lret
fstl
inc
pop
orb
inc
push
pop
sbb
pushl
dec
mov
mov
push
loopne
sbb
movsb
cltd
xor
test
orl
pop
or
or
sbb
subl
xchg
lahf
push
sub
push
push
push
adc
das
cli
incl
pop
and
in
dec
pop
stos
adc
cltd
add
sub
push
jmp
push
jne
mov
sub
in
jmp
dec
repnz
cmp
ja
add
dec
loopne
pop
repz
mov
aad
lahf
std
jg
mov
cwtl
sub
push
outsl
mov
incl
cmc
fnstsw
cli
decl
lds
sub
mov
lds
cmp
ljmp
dec
mov
mov
mov
mov
test
push
mov
popf
lahf
or
and
push
mov
rcrb
out
test
loope
push
sbb
sub
lcall
js
movsb
nop
es
rcrb
sub
adc
dec
push
stc
mov
fnstsw
or
push
add
mov
push
push
ds
xchg
negb
jl
ja
push
lcall
pop
adc
inc
cmp
js
mov
cld
ljmp
das
jp
jns
sbb
jg
int
and
rcll
in
divl
inc
push
cmp
outsl
jp
nop
pop
out
test
aam
lcall
repz
icebp
outsl
or
xor
fwait
les
mov
inc
pushl
les
stos
sbb
cwtl
dec
fwait
and
push
das
and
pop
gs
mov
das
jmp
inc
movsl
sarl
stos
test
ja
lret
scas
mov
adc
clc
scas
mov
cmp
inc
jae
sar
jg
mov
cmp
es
add
inc
dec
test
sub
lahf
dec
ljmp
bound
and
jle
js
mov
mov
mov
lcall
ret
test
cmpb
sub
or
sar
or
and
insl
sub
imul
call
xchg
jecxz
push
push
adc
jmp
jle
ret
es
xor
sub
mov
xchg
mov
and
lods
ljmp
mov
add
jns
lds
fdivr
jae
addr16
push
xchg
cwtl
sub
jg
lcall
enter
out
inc
fadds
sub
std
or
push
mov
outsb
jle
loopne
repz
xor
incl
clc
gs
cmp
jb
pusha
mov
lods
lods
inc
ss
mov
addr16
jbe
xchg
sahf
or
push
decl
sbb
dec
mov
or
cmp
gs
inc
shrb
add
pushl
cld
addr16
mov
lret
cmpsb
gs
ret
je
subb
ljmp
cmpsb
inc
cmp
cmpxchg
cli
out
adc
or
arpl
test
imul
stos
push
sar
das
clc
call
push
push
out
lock
mov
jne
stos
adc
push
in
decl
mov
sti
mov
test
daa
xor
xchg
adc
mov
xchg
cld
adc
sti
mov
xorb
sub
jg
mov
mov
fdivr
icebp
mov
fs
divl
or
lcall
mov
sar
xchg
mov
inc
add
inc
cmp
inc
data16
push
cmp
call
repnz
sub
or
push
dec
ljmp
decb
jg
lcall
je
xchg
and
sbb
stos
mov
xlat
jno
test
jg
incl
mov
sarb
loope
std
cwtl
mov
aam
sub
sbb
ljmp
sbb
dec
pop
popa
int
xor
sbb
mov
mov
mov
out
clc
and
pushl
inc
in
mov
sarb
fstl
inc
inc
dec
loopne
cmp
call
add
or
shl
push
fsubrp
mov
push
fxch
jg
call
decl
iret
jmp
mov
mov
incl
and
lret
lock
sbb
mov
jae
push
test
xchg
sub
in
xchg
shrl
jmp
dec
and
push
imul
lret
stc
ss
cmp
idiv
or
lods
and
cld
add
mov
addb
inc
int3
xor
pop
and
fcomip
decl
mov
aaa
stos
out
lds
adc
bound
mov
test
lcall
jne
popa
popa
andb
jg
test
cli
mov
mov
cmpl
xchg
mov
ljmp
sub
inc
sub
sarl
mov
or
loop
mov
shl
idiv
jg
or
aaa
sub
and
mov
push
push
lcall
lods
pop
jo
adc
or
jo
push
sub
adc
cmp
imul
mov
call
nop
xchg
test
mov
call
push
xchg
mov
and
incl
cmpb
cli
jecxz
gs
into
scas
bound
adc
or
and
sti
rcll
fsubrs
mov
push
dec
pop
inc
mov
jae
pop
or
in
lcall
iret
mov
mov
mov
push
stos
fwait
cmp
or
lds
jbe
xchg
mov
clc
dec
sub
push
loopne
inc
loope
and
pop
cmc
or
jl
xchg
mov
pushf
sub
std
sahf
popa
mov
clc
dec
sahf
pop
pop
arpl
mov
push
test
iret
sbb
push
sub
cld
or
jmp
pop
aad
xchg
lahf
jg
in
or
loope
jmp
sub
xor
insb
xchg
mov
sub
pushf
push
dec
int3
lahf
insb
ret
mov
lods
mov
out
test
das
adc
mov
ficoml
stos
mov
fucomip
hlt
lret
or
cmp
pushf
sub
lods
std
ljmp
insl
jns
cmp
dec
sbb
sbb
lds
mov
push
xchg
cmp
ss
ret
sbb
pushf
mov
cmp
out
nop
lods
cmp
pop
pop
ljmp
jmp
std
jmp
xchg
xchg
adc
jbe
into
cli
sti
inc
xchg
dec
fdivrs
ret
and
sbb
fsts
jg
les
add
negb
decb
cld
lcall
and
push
fdiv
lret
adc
in
jle
lods
jmp
xor
sbb
loop
xlat
addl
scas
movsb
add
imul
add
ss
fnstsw
mov
rcl
es
ljmp
or
add
mov
loope
mov
sbb
cmpsb
jno
push
pop
mov
ds
dec
test
mov
dec
aas
xor
clc
pushl
orl
shr
xor
mov
dec
cltd
cmpsb
js
nop
jl
orb
mov
dec
mov
and
and
sbb
cltd
push
pop
xchg
push
xchg
jmp
xchg
and
adc
loop
push
push
push
push
mov
pushf
dec
inc
and
fneni(8087
jb
jmp
xchg
outsb
adc
negl
rcr
xor
jl
sub
sub
push
imul
out
shufps
test
jp
repz
cmp
pushl
xorl
gs
push
push
and
inc
fstl
ja
mov
push
mov
loopne
cmc
leave
add
cs
add
pop
int3
push
xchg
sahf
mov
pushl
test
bound
inc
mov
jns
cld
into
lods
mov
nop
adc
outsl
clc
repnz
sahf
sub
sub
lods
mov
push
cli
push
jg
sub
in
icebp
inc
inc
cmp
clc
ljmp
pop
je
aad
dec
bound
loopne
adc
lcall
enter
ss
int
ret
lock
imul
cmp
daa
mov
call
sahf
mov
sti
dec
cmp
rclb
orl
mov
clc
incl
movsl
mov
mov
daa
xor
xor
fists
push
xchg
cmpsb
outsb
jns
pushl
movsl
dec
mov
lcall
mov
mov
lret
call
mov
xchg
fwait
sub
hlt
aas
lcall
xchg
cmp
xchg
cs
sbb
aam
sbb
mov
mov
inc
cmpsb
sbb
test
mov
cwtl
xor
ja
sbb
push
fcmovnb
iret
negb
lock
pushl
or
ret
shlb
roll
mov
inc
inc
push
bound
lcall
fistpll
mov
and
jb
and
and
cmpsb
sbb
and
jecxz
sti
ljmp
negb
push
imul
adc
mov
js
ljmp
stc
push
and
aad
dec
and
iret
mov
aaa
jle
pop
arpl
stos
out
push
adc
daa
ds
push
and
inc
push
sbb
xor
filds
or
push
push
jmp
in
inc
push
iret
outsb
stc
andl
pop
cld
inc
xor
rorb
scas
clc
mov
push
or
xchg
jae
rcll
iret
pop
fists
into
push
push
cmp
jb
enter
jmp
decl
pop
mov
xchg
into
xchg
cmpl
jae
fwait
pop
int
push
dec
lret
jg
cmp
fwait
lahf
test
lods
fdivrs
decl
jg
icebp
pop
out
xor
lea
popf
pop
push
std
pop
pop
sub
xchg
int
jg
jg
cmpsb
decl
adc
cmp
clc
cmp
push
push
clc
add
scas
mov
mov
mov
repnz
xorl
mov
ja
xor
into
ret
stc
add
push
lcall
xor
cwtl
rolb
test
push
mov
mov
imul
pusha
scas
pushl
iret
ds
sub
stos
clc
push
dec
xchg
mov
push
xor
je
dec
addr16
sub
dec
loope
and
push
cld
lcall
and
inc
movsl
jnp
shll
iret
jns
xlat
sbb
xchg
fs
push
push
std
pop
or
aas
adc
adc
sub
ret
int3
sbb
cmp
cmp
or
jmp
icebp
iret
je
in
jl
and
dec
and
notb
and
push
out
lock
lret
mov
ja
ds
jg
add
icebp
push
lea
jp
push
jne
dec
pop
ljmp
mov
lret
out
bound
add
fisttps
and
xor
je
jbe
lret
xlat
pop
xor
loope
xor
ljmp
sahf
pop
xor
pusha
or
jnp
jns
mov
lea
fnsave
movsl
inc
and
loop,pn
mov
out
out
xor
sti
mov
jle
jle
add
pop
shlb
lcall
xor
mov
push
int3
xor
pop
movsl
cmpsb
pushf
out
add
mov
icebp
jg
xchg
rolb
cmp
xchg
outsb
lahf
cmp
out
aaa
jmp
loop
aaa
cld
lcall
loope
pop
and
pop
and
xor
mov
incl
add
daa
das
adc
or
lahf
pop
adc
je
and
ftst
into
cmp
push
mov
ljmp
jge
dec
test
lock
push
or
push
ljmp
rolb
cmp
lea
add
sahf
sub
xchg
mov
push
jp
push
imul
popf
sar
inc
mov
or
imul
and
inc
test
or
add
fisttps
sub
daa
sbb
scas
inc
test
inc
sar
incl
es
cli
add
stos
push
addr16
gs
popf
cmpsl
mov
push
ss
jg
sbb
or
ss
xchg
mov
and
sahf
sahf
into
fsts
jmp
scas
sbb
push
push
pop
xorb
inc
add
mov
add
movb
outsb
dec
outsb
jmp
xor
jmp
aad
hlt
jb
sub
adc
inc
dec
push
ja
push
lcall
jo
fs
adc
lret
mov
add
and
or
lea
scas
jl
jo
jns
and
mov
dec
into
movsb
lods
ljmp
sbb
jg
jo
jns
test
in
mov
pushf
push
inc
cmp
pop
jb
jb
arpl
or
jp
nop
ret
or
inc
dec
inc
fstpl
xorl
inc
int
hlt
pushl
push
pop
and
pop
dec
out
clc
sahf
mov
div
adc
fs
dec
test
imul
dec
scas
bound
call
repz
lods
jo
xor
push
push
push
push
mov
sub
incl
mov
push
pop
inc
push
push
push
cmpsl
pop
insb
iret
xchg
jmp
shll
into
mov
insl
fdivs
mov
mov
adc
and
sub
dec
cmc
test
lcall
sub
mov
insb
fidivs
mov
nop
fwait
bound
clc
popl
decl
or
adc
pop
sbb
and
std
push
sub
out
cli
jg
out
pop
mov
pop
das
and
xor
cli
js
ret
lret
sahf
iret
or
mov
push
pushl
or
xchg
out
in
xor
xor
push
decl
fs
jl
cmc
add
js
in
xchg
cmc
stos
test
call
test
daa
fs
push
mov
lcall
jns
xor
cmp
mov
movsb
push
outsl
iret
and
int3
push
ficomps
cmp
sar
inc
cmpsl
jl
pop
rolb
xchg
xor
gs
lock
rol
nop
dec
jne
out
sub
jg
bound
in
stc
mov
mov
out
cli
fs
out
in
cmpsb
mov
mov
ljmp
aad
mov
pop
add
test
pop
icebp
mov
add
ficoml
xor
in
push
lods
js
cmp
and
decl
imul
ljmp
das
cmp
jge
and
jb
cmp
enter
std
or
dec
incl
mov
into
sbb
xor
mov
add
ret
dec
ss
test
ljmp
pop
repnz
cld
push
int3
push
dec
cld
mov
fwait
jbe
inc
xchg
sar
stc
push
inc
lock
andb
out
clc
mov
ljmp
sub
xor
fiadds
decl
pop
push
adc
jnp
xchg
fwait
adc
sbb
js
add
mov
sar
call
mov
rcrl
lock
incl
andb
pop
cmpsb
sbb
xorb
mov
enter
mov
jg
mov
in
in
popa
cltd
ret
mov
push
out
dec
mov
cwtl
jg
add
push
xchg
bound
mov
scas
cli
pusha
inc
loope
jp
dec
aaa
xor
push
adc
adc
insl
xor
jae
stos
lcall
jo
mov
fdivr
neg
dec
stc
jb
and
pop
data16
in
mov
adc
frstor
aas
xor
xchg
movsl
cli
imul
das
or
out
sub
xor
push
pop
push
scas
lcall
negl
jp
mov
push
and
sbb
or
push
push
mov
push
js
cmp
and
jmp
or
lret
stos
or
cmp
in
jg
and
imul
jae
repnz
pushl
mov
sub
cmc
or
fldenv
cli
mov
pop
int
push
add
mov
adc
loope
xor
popf
and
jl
inc
int3
scas
xor
shlb
bound
mov
dec
nop
pop
incl
sbb
out
pop
cmc
pop
stc
and
xor
imul
xchg
xor
call
jp
xor
ret
imul
insb
push
idivl
jecxz
ljmp
mov
mov
xchg
sub
push
adc
push
cmp
pop
ret
clc
jmp
sub
mov
ljmp
and
inc
sub
inc
imul
adc
fcomi
pop
adc
testl
mov
mov
ljmp
pop
xor
aaa
push
pop
outsb
jns
stos
aas
sbbb
add
fildl
sbb
incl
cld
sub
sti
pop
in
js
sbb
sbb
insb
push
in
into
and
fcmovnbe
push
add
jnp
jbe
mov
lret
mov
cld
add
push
push
rorb
push
push
inc
lea
xor
jmp
lcall
cmp
pop
dec
ret
sub
add
pop
inc
mov
jmp
xlat
cmp
faddl
pop
int
mov
and
mov
adc
ljmp
dec
push
stc
imul
call
push
out
loope
cmp
and
push
iret
cld
aaa
pusha
mov
cld
sbb
fwait
cmpsb
mov
fwait
adc
and
dec
ficompl
incl
mov
loop
into
insl
and
sbb
and
dec
push
add
hlt
ljmp
test
jmp
or
ja
inc
lods
add
aad
mov
xchg
pop
dec
xlat
rcrb
daa
jne
pop
xor
lcall
sub
xchg
add
popf
sbb
loope
rolb
or
mov
and
cmpb
mov
loop
sub
das
sar
es
xor
jle
sahf
shrl
pushl
xchg
test
mov
daa
jae
ljmp
cmp
push
out
mov
shlb
dec
in
ficomps
sub
pop
call
insl
push
add
out
movsl
cmp
cwtl
add
loope
arpl
incl
mov
cmp
out
jecxz
clc
or
push
sub
mov
je
xchg
mov
andl
gs
inc
mov
fcoms
lahf
call
call
dec
add
push
jecxz
adc
jb
push
and
in
sbb
or
sbb
push
and
xchg
lock
mov
fcoms
clc
lods
cmc
xor
cmp
pusha
dec
or
nop
inc
sbb
test
fmull
push
fmull
mov
pop
imul
clc
lret
jmp
jb
decl
xchg
inc
outsb
jmp
repnz
rcrb
mov
mov
inc
stos
or
xchg
push
and
aas
dec
imul
mov
and
pop
mov
out
stc
out
mov
dec
shlb
stos
imul
in
movb
call
ljmp
outsl
sbb
enter
xchg
adc
xchg
push
pop
adc
std
mov
gs
ret
fcomip
sbb
mov
fistps
outsl
jl
fidivrl
popf
call
ret
xor
dec
lret
mov
xchg
jle
jb
mov
fwait
pop
dec
pop
dec
or
cmpsb
cmpb
mov
push
jecxz
mov
leave
mov
inc
daa
lcall
pushl
std
push
mov
lea
fisttpl
sbb
inc
push
fdivr
decl
pop
lods
push
jge
jne
mov
ret
jmp
mov
push
and
dec
jl
cli
mov
cmp
and
rorl
pop
fsub
decl
mov
jl
test
mov
mov
pop
dec
inc
icebp
ljmp
xor
pushf
adc
cmp
sub
ljmp
xor
ljmp
xchg
into
sbb
xchg
jns
push
pop
sbb
cmp
push
push
cmc
rclb
aaa
cmc
sahf
sbb
popa
lods
mov
mov
aad
dec
inc
rcll
lret
push
fistl
mov
mov
xchg
loopne
xlat
aas
cmc
cmp
fxam
mov
lret
and
pop
gs
pop
enter
dec
mov
decl
dec
fcomip
fbld
add
pusha
pop
mov
addr16
outsl
xchg
push
arpl
ret
xor
mov
sbb
mov
es
shlb
jg
dec
iret
adc
push
call
mov
xchg
and
mov
lcall
js
pop
lcall
ss
xchg
lahf
outsl
add
test
cltd
adc
lret
pop
cmc
call
testl
push
out
mov
mov
das
fs
shll
cmp
mov
ret
int
das
into
inc
data16
sub
bound
push
mov
fucomp
push
push
pop
loop
xor
lahf
xchg
mov
mov
fwait
hlt
jne
add
sbb
jle
mov
mov
insl
xor
sti
inc
mov
icebp
stos
sbb
or
jg
loope
jbe
jp
cmp
cmpsb
int3
sbb
mov
lahf
adc
shll
dec
xor
jp
sub
pushl
mov
mov
xchg
xchg
jp
bound
mov
or
inc
fbld
dec
sbb
mov
fs
mov
icebp
jbe
pushl
xchg
jle
mov
jno
cmp
push
and
xor
xor
and
cld
mov
and
pop
adc
mov
push
dec
adc
repz
call
dec
es
cmp
fldcw
or
and
fucomp
xchg
dec
dec
inc
inc
leave
push
adc
lea
jbe
fsubs
bndldx
ljmp
jo
mov
insb
mov
jmp
push
pushf
std
ljmp
cmp
mov
sysret
adc
mov
das
scas
pop
add
insl
es
and
call
xchg
jle
sbb
shrb
dec
lahf
lea
cmp
imul
mov
lret
pop
ret
clc
add
ror
pop
std
rcrl
mov
mov
fmull
pop
gs
mov
push
push
int
xor
decl
or
push
or
mov
push
jl
mov
lret
pop
popf
xchg
mov
cmp
or
outsb
fistpll
or
fs
in
sub
loope
mov
pop
sbb
dec
gs
decl
mov
sar
stos
imul
popf
test
imul
pop
and
pushl
insl
adc
adc
fbstp
nop
mov
sub
jb
cmp
out
push
cld
insb
xchg
inc
adc
mov
pop
adc
loopne
ds
pop
paddw
lcall
rcl
pop
pop
hlt
roll
ds
nop
cs
aam
mov
es
and
add
popa
cltd
xor
jg
or
or
bnd
sub
xchg
mov
mov
ret
mov
jp
mov
xchg
sub
sbb
dec
pop
mov
ljmp
add
clc
repz
cwtl
popf
test
jmp
mov
loope
xor
ljmp
add
adc
scas
cmp
jp
mov
lret
inc
nop
lcall
mov
push
fcmovnu
jb
adc
sub
faddl
jmp
das
jp
lods
mov
pop
mov
or
insl
mov
and
jo
ja
xor
insb
clc
mov
lcall
repz
addl
jg
mov
cmc
pop
xor
data16
test
cmp
push
pop
cmc
sub
xchg
inc
ror
push
loopne
pushl
mov
mov
loopne
mov
xchg
ror
hlt
jns
iret
call
xor
pop
movsb
mov
pop
pop
rol
rcl
dec
dec
add
lret
xor
lret
insb
cmpsl
fcomip
ljmp
sbb
dec
es
jl
pop
adc
dec
add
push
and
in
lahf
popa
mov
push
dec
into
mov
jbe
jae
mov
sub
jp
push
add
stc
mov
pop
movsb
stos
bound
push
xchg
out
mov
push
icebp
xor
sub
adc
sub
std
outsl
xchg
pop
addr16
jle
imul
les
cld
jnp
jecxz
test
or
add
sub
pusha
sbb
subl
mov
push
andl
ja
xchg
and
cmp
std
shlb
pop
mov
sub
mov
or
adc
lcall
push
lods
clc
inc
fisttps
push
mov
and
add
jae
mov
mov
sub
repnz
fldenv
sbbb
pushl
pop
cmp
mov
loop
cli
sbb
ret
inc
xchg
xchg
mov
loop
cld
mov
fnsave
je
dec
sub
pushf
lods
push
sbb
add
ljmp
fidivl
repnz
movsb
sahf
es
mov
jge
imul
or
pop
inc
dec
cmc
repz
movsl
cltd
call
ja
fs
sub
jmp
sub
mov
dec
clc
add
test
decb
add
xchg
pushf
pop
mov
decl
sub
insb
popf
icebp
dec
mov
fwait
inc
das
and
mov
mov
pop
loopne
scas
mov
xchg
popa
pushf
fs
push
cmc
sub
aaa
cmp
cld
lcall
incb
pop
and
jle
sub
js
andb
or
xor
cmp
and
cs
adc
pop
repz
or
add
inc
xlat
jmp
cmc
scas
addr16
lds
push
andb
aad
xorl
incl
rorb
into
push
popf
int
or
adc
into
sbb
mov
fsub
add
push
bound
fdivrs
fmull
stos
add
sub
xchg
stos
ljmp
arpl
fidivs
pop
scas
mov
push
dec
mov
fdivp
xor
dec
leave
add
decl
cmp
aam
cmpsb
inc
push
daa
jp
or
imul
gs
lcall
adc
adc
faddp
test
jg
fdivrl
mov
xor
sbb
test
rorl
push
daa
jmp
add
loop
aas
das
xor
mov
loope
adc
jle
incl
cmp
or
imul
adcl
push
sub
lret
inc
sub
arpl
decl
in
jmp
out
fisubl
movsl
call
cmpb
sbb
jecxz
adc
test
xor
nop
dec
jnp
cld
xchg
aad
clc
ljmp
rcrl
fwait
ljmp
imul
clc
mov
sbb
adc
xor
push
and
incl
mov
sbbb
add
fistpl
inc
xor
orl
call
loopne
aaa
arpl
sbb
loop
push
adc
mov
lret
dec
cmc
push
ljmp
dec
in
inc
mov
mov
dec
loopne
jecxz
pop
mov
incl
pop
addb
inc
inc
dec
aam
mov
xchg
pop
mov
xchg
sti
push
test
jg
inc
jl
arpl
jo
test
and
sbb
ljmp
or
inc
inc
dec
mov
pop
pusha
inc
inc
mov
jle
lcall
fiaddl
pop
sbb
xchg
cmp
stos
sti
and
movsl
inc
les
stc
ljmp
xor
loope
cli
int3
rcrb
loopne
jg
call
ficompl
loope
xchg
dec
cli
incl
push
sbb
repz
jnp
and
inc
add
and
pop
stos
dec
xchg
mov
imul
ja
shrl
in
add
imul
fbstp
add
rcrl
sbb
mov
mov
mov
jg
fwait
lea
je
ljmp
cmp
ds
jp
out
iret
mov
rolb
ss
push
add
cmp
sbb
mov
add
std
push
and
jmp
xor
call
mov
in
cmp
ds
ss
clc
sub
lods
in
xlat
sub
and
arpl
jmp
mov
insl
mov
nop
pop
jae
push
push
xor
or
push
cld
ljmp
inc
loop
stos
call
shl
in
or
cmc
dec
movlps
clc
mov
push
test
inc
popa
testb
ds
lcall
or
mov
fsincos
xlat
inc
call
fists
lcall
sub
sbb
mov
ret
mov
jecxz
stc
mov
push
imul
cmpsl
cmp
ljmp
push
mov
mov
leave
hlt
jle
and
test
jecxz
mov
mov
and
or
js
add
and
je
mov
test
pop
lret
add
inc
ljmp
ljmp
inc
iret
je
outsb
fwait
movsl
mov
es
sbb
adc
xor
mov
in
or
pushl
repnz
inc
and
sbb
dec
popa
push
stos
inc
xchg
mov
ljmp
inc
sub
into
inc
rcr
jne
sbb
mov
int
lds
dec
mov
nop
adc
dec
cmp
out
clc
ljmp
adc
sar
loope
inc
nop
ficomps
inc
loopnew
clc
data16
test
incl
jmp
icebp
mov
push
adc
sbb
mov
jg
xor
je
push
in
push
add
stos
sbb
pushf
cmpsl
add
fsubs
ljmp
xor
bound
add
daa
popf
cli
mov
inc
ftst
jp
shrb
mov
push
test
rolb
mov
jg
fcomip
add
and
rolb
inc
clc
cmc
jns
adc
jb
cli
ljmp
pop
pop
push
mov
push
pop
and
inc
loope
dec
add
shlb
push
inc
inc
lods
cld
jg
dec
mov
cmpsb
ljmp
call
sbb
mov
sbb
push
cmpsl
fsub
scas
push
mov
sti
mov
lcall
push
xchg
popf
mov
cmp
xor
push
and
ret
push
in
and
decb
mov
dec
cld
fisubrl
outsl
fisttps
and
incl
stos
mov
aad
adc
or
xor
dec
cmp
inc
jns
cmc
movb
mov
mov
stos
repnz
arpl
pusha
imul
fldt
mov
sbb
sbb
xor
lahf
sti
jg
or
mulb
add
in
call
mov
mov
lods
xchg
pop
adc
dec
mov
sbb
inc
push
dec
popf
lahf
add
test
pop
or
adc
ljmp
sub
add
mov
je
out
repnz
stc
sbb
ja
fcomip
stc
adc
xchg
stos
mov
jae
add
les
pop
inc
das
ss
xlat
insb
clc
incl
daa
dec
jecxz
hlt
mov
sub
and
xchg
push
push
and
mov
cmpsl
mov
enter
fbld
push
into
aaa
fwait
test
rol
adcb
aas
dec
pop
mov
cs
pop
enter
incl
sti
xchg
faddl
in
jge
imul
or
popa
in
pop
or
adc
push
xchg
cli
cmpsb
inc
jnp
cld
lods
mov
loop
outsb
mov
in
mov
push
xchg
xor
add
mov
lcall
icebp
ret
rcrl
dec
mov
incl
movsl
jne
xor
leave
aaa
stc
jle
mov
sub
cmc
pushl
cli
fbstp
ja
imul
das
outsb
int3
cmp
push
mov
pop
adc
aaa
std
xchg
cmp
ss
push
popf
add
pop
push
dec
push
pusha
std
jg
lcall
fcoml
je
add
nop
ret
outsl
repnz
mov
jb
mov
movsb
push
imul
adc
fmuls
adc
mov
call
insl
cmpsl
push
mov
sbb
and
push
or
and
add
call
jge
stos
inc
mov
fxch
sub
call
jno
test
stc
fcomip
lcall
or
push
xor
idivl
sbbb
ret
cwtl
cltd
icebp
lcall
shll
dec
sub
xchg
add
aam
orl
mov
or
jbe
push
cli
push
pop
mov
inc
lahf
fcomip
lcall
popf
push
arpl
mov
sbb
ds
pop
mov
call
je
lahf
pop
lcall
rorb
mov
adc
cld
and
icebp
lcall
imul
enter
hlt
push
fsubrl
push
jb
jmp
int3
xor
lret
push
cli
outsl
into
std
or
arpl
fdivrl
mov
or
cltd
adcl
sub
inc
push
inc
cmp
dec
rorl
jns
lret
lcall
or
movsb
cmp
insl
mov
scas
mov
ret
call
fists
aaa
dec
push
rcl
hlt
xor
dec
or
dec
sbb
mov
cld
push
data16
mov
imul
out
fidivs
or
jg
icebp
aas
dec
fcmovnu
push
add
das
sub
testb
lods
or
stos
inc
sub
sbb
cli
pop
roll
push
push
aas
mov
pop
cmc
lock
popf
dec
cli
shl
pop
jmp
addb
and
pop
out
xchg
jae
push
stos
mov
mov
mov
fwait
jp
sub
fistps
jmp
nop
test
std
push
std
push
push
xor
jb
cli
cld
jno
fdivp
mov
lea
jbe
clc
jl
shl
jne
icebp
jp
rcl
das
rorb
lahf
arpl
inc
sar
call
lock
xor
inc
fisubs
or
fwait
add
inc
push
out
decl
lock
xor
adc
mov
sub
pop
adc
xchg
or
incl
xor
icebp
xchg
fildll
test
testl
jg
mov
inc
jg
jg
and
loope
js
cltd
out
or
mov
push
cld
fdiv
jp
roll
loop
enter
rcrb
cmc
scas
adcb
ds
in
push
cld
sub
jmp
mov
pusha
jns
divl
cmp
sar
call
add
xchg
mov
mov
dec
sub
jg
test
adc
aas
xor
sbb
filds
adc
ror
imul
fdivrp
jle
sub
cmp
outsl
jp
movsl
pushf
pop
int
and
test
call
decl
pop
mov
cmp
sub
in
decl
bound
mov
add
shll
fnstenv
mov
jo
push
xchg
dec
dec
mov
out
jle
adc
inc
lret
out
fwait
mov
addr16
xchg
mov
js
icebp
sub
mov
out
cli
incl
ds
xor
sub
pop
out
push
out
pop
leave
push
mov
cs
mov
xchg
cs
fs
adc
scas
cmc
cs
pushl
sbb
je
jnp
lods
mov
lods
test
test
jmp
adc
sbb
ds
insb
stos
xchg
and
mov
ret
pop
dec
add
cmp
and
call
incl
orl
lahf
pusha
ljmp
aaa
addr16
cmpb
test
cwtl
mov
push
inc
push
sub
mov
fstpl
je
mov
incl
sbb
jo
adc
sbb
jecxz
negl
xchg
adc
mov
jg
sbb
xchg
pop
mov
adc
sub
jbe
pop
jns
out
mov
dec
out
call
pop
pop
nop
repz
test
fbld
imul
ljmp
bound
sbb
ret
dec
xorb
hlt
out
icebp
dec
cmpsb
push
in
xchg
out
mov
lock
xchg
ljmp
xchg
sbb
jg
sbb
push
jle
pushl
rorb
insl
or
in
ds
sbb
fimull
std
fldpi
sbb
push
lods
cs
fbstp
mov
push
pusha
mov
cmp
inc
xchg
test
mov
fildll
outsb
cmp
and
dec
inc
ja
data16
mov
lds
cli
lcall
cmp
lret
int3
sbb
inc
sbb
adc
into
clc
cmc
in
xchg
inc
inc
mov
jmp
sbbb
sub
sbb
imull
push
mov
cmp
dec
imull
fidivrs
outsl
clc
pop
icebp
pop
clc
and
sbb
addb
fnsave
xor
lret
ljmp
push
mul
arpl
ja
xchg
mov
mov
hlt
fcomp
rorl
fcomip
mov
test
jl
xor
dec
xor
dec
out
dec
cld
sbb
push
xchg
ljmp
clc
and
push
dec
ljmp
xchg
fsub
icebp
in
loop
sub
ljmp
scas
lods
mov
leave
and
sub
xchg
push
push
pop
scas
push
lods
cmp
cmp
jmp
mov
test
lods
mov
dec
fsts
sbb
adc
ljmp
fwait
adcl
or
decl
pusha
mov
adc
leave
pop
pop
dec
rcrb
jnp
out
aas
cmp
ds
jp
stc
mov
lods
scas
sub
mov
les
or
ljmp
aaa
in
ds
outsl
stos
outsl
xchg
jnp
enter
insl
jns
popa
dec
insb
es
jg
dec
inc
cwtl
sub
lods
int
ret
out
fidivs
fmul
push
xlat
add
imul
ljmp
iretw
imul
jmp
pop
pop
je
dec
hlt
inc
push
pop
and
test
enter
jecxz
scas
ljmp
pop
insb
test
inc
pop
stc
cmp
sub
out
ljmp
out
inc
sbb
jbe
pop
dec
shlb
sbb
out
sbbl
ret
lcall
movsl
push
jne
jne
movsl
xor
mov
xchg
mov
or
sbb
xor
incl
sbb
mov
mov
popw
or
fsubl
loopne
jbe
ja
adc
dec
das
push
push
stos
xor
addr16
test
jae
add
aad
loopne
pop
rorb
inc
xor
cli
out
push
jns
fs
mov
sub
fbstp
mov
or
mov
xchg
sbb
push
pop
mov
out
push
push
shrl
cmpsl
pop
gs
sub
jmp
in
adc
pop
shr
negb
sub
cmpsb
mov
dec
pushl
mov
ret
int
cmp
lock
jb
outsb
and
mov
aaa
test
pusha
mov
or
gs
sbb
push
ljmp
push
push
mov
mov
fucomi
cli
adc
clc
cwtl
test
je
scas
cli
pushl
mov
or
inc
and
inc
dec
jge
jmp
mov
jp
rcr
pop
popa
pop
mov
pop
mov
pop
pushf
dec
movb
jae
scas
jp
jg
or
push
sbb
imul
lret
test
lods
add
dec
jne
cmc
jmp
out
or
xor
xchg
ret
leave
mov
push
sbb
push
incl
jns
cmp
test
dec
loopne
nop
mov
mov
sbb
fcomip
ljmp
and
inc
mov
adc
std
pushl
pop
mov
call
clc
cmpsl
popa
les
dec
xor
or
mov
xor
xchg
insl
mov
negb
in
out
cmp
adc
out
sahf
addr16
cmp
push
cmp
ret
sbb
cli
add
mov
decl
xchg
icebp
pop
fwait
inc
ss
cli
les
ficoms
imul
sub
push
xchg
fldcw
pop
lds
sub
popa
ja
lcall
les
lds
sarb
dec
inc
das
push
inc
or
ret
jnp
call
mov
sub
mov
push
dec
lock
xor
jg
lock
in
jge
out
push
mov
icebp
jno
push
test
sahf
nop
xchg
les
ljmp
or
add
int3
daa
ret
fwait
mov
adc
fwait
decl
lock
gs
in
cmp
pop
jne
xchg
outsl
inc
mov
mov
mov
lock
and
inc
xchg
sti
in
mov
sti
jae
cmpsl
fcomip
decl
lea
fidivrl
and
or
sahf
dec
mov
jbe
or
cld
and
sub
inc
jle
sub
xchg
lock
add
test
movsb
mov
adc
dec
jg
dec
int3
jne
test
orb
sbb
push
pop
xchg
ss
filds
sbb
dec
add
cs
sarb
lret
add
or
mov
invlpg
es
push
insl
mov
mov
adc
push
hlt
cmp
fwait
lock
cmc
mov
xor
jmp
mov
push
data16
dec
mov
or
decl
lea
adc
sbb
nop
pop
push
mov
sbb
addr16
xchg
xchg
lcall
aaa
decl
dec
jbe
or
sub
xlat
push
adc
dec
cmp
xor
mov
incl
scas
jno
jecxz
dec
rorb
sub
pop
scas
push
xorb
enter
ljmp
call
call
test
in
push
sbb
fwait
iret
or
jge
lcall
pop
or
cmc
mov
imul
cmpsl
icebp
mov
data16
jmp
push
leave
addl
fmull
notl
mov
sbbb
je
loope
sub
lcall
lds
repnz
sahf
push
loope
cmp
insl
push
dec
inc
sbb
aad
or
pop
aaa
mov
xor
daa
imul
clc
push
or
arpl
int
jg
push
cmc
imulb
mov
fwait
cmpsl
mov
or
in
adc
fiaddl
ss
sbb
sub
roll
xchg
ja
pop
mov
mov
call
xchg
leave
xor
lock
insb
ret
or
cmp
and
dec
dec
mov
shlb
sbb
jns
test
pop
push
fsub
mov
rorb
sar
clc
add
movsl
or
pop
sbb
pushf
scas
xchg
adc
xchg
aad
ret
call
jae
in
decl
push
mov
jg
loopne
ftst
xchg
sub
out
cmp
push
or
xchg
mov
aam
es
and
aad
clc
jmp
cmp
test
adcb
pushf
test
arpl
int3
dec
pushl
scas
sar
icebp
mov
pop
xor
inc
out
jae
add
lock
aas
negl
clc
cmp
sahf
add
fcompl
pushf
cmp
rcr
inc
pop
inc
mov
vpsraw
incl
xor
sub
cmc
imul
incl
inc
fstl
hlt
adc
insl
in
insl
sub
scas
iret
repnz
outsl
mov
push
xchg
push
adc
adcl
add
xchg
stos
test
pop
mov
cs
jmp
test
arpl
adc
jl
mov
insb
xor
and
loop
or
clc
push
sahf
sbb
jp
lds
jmp
jle
loope
sub
jmp
sbbl
test
loop
push
test
jmp
xchg
push
decl
sub
mov
adc
mov
jmp
shlb
cmpsb
jmp
xor
lods
ja
mov
mov
jle
arpl
outsl
or
call
xchg
cmpsl
cmp
sbb
jno
sub
or
ss
jg
sub
enter
and
repz
adc
addr16
push
mov
cwtl
mov
pop
int3
or
fildll
xor
and
ds
repnz
incl
push
mov
aad
ljmp
mov
bound
sahf
cmp
call
lea
addr16
mov
adc
or
daa
stos
scas
cli
mov
sub
mov
mov
xor
fisttpll
lea
jnp
ja
shll
jae
andb
stos
or
mov
pop
mov
jnp
ljmp
cmp
mov
pop
addb
xchg
leave
mov
repz
adc
mov
push
es
popf
scas
mov
decl
sbb
sarb
dec
dec
mov
stos
mov
cmp
test
decl
sub
add
ret
fwait
cli
mov
or
xorl
cmp
lods
popf
adc
mov
pop
loop
rorb
xchg
mov
enter
add
mov
xchg
push
xor
jnp
sti
test
mov
movsb
lcall
cmp
mov
lret
dec
xchg
mov
mov
notb
and
pushl
jp
outsl
ret
sbb
aad
and
xchg
mov
je
jbe
rorb
pop
aas
gs
mov
jg
mov
and
lds
jo
in
ljmp
pop
out
add
repz
sub
insb
iret
outsb
sahf
inc
scas
cli
jmp
in
mov
xchg
push
push
push
and
mov
jmp
out
pop
and
xchg
rol
cli
loopne
scas
movsb
cld
call
cmp
cwtl
ret
add
or
cmpsl
or
lods
add
das
push
popa
cmp
mov
xchg
ss
loopne
fstl
es
popa
insb
out
lret
decl
lods
test
jecxz
rol
repnz
fistl
jl
addr16
dec
adc
jno
aam
mov
jmp
hlt
call
sahf
icebp
icebp
fnstcw
stos
popa
push
jae
movsb
cltd
loop
iret
ficoml
sub
cmp
dec
pop
pop
imul
mov
div
xchg
mov
ljmp
fs
xchg
push
cmpsb
ja
push
sbb
idivl
dec
outsl
add
jle
pop
imul
push
cld
sti
inc
xchg
and
vpsubb
lods
js
and
xchg
jne
or
ds
mov
mov
pushf
jmp
fildll
sbb
inc
jns
jmp
outsl
jae
push
jg
fdivs
cmpsb
das
xor
adc
mov
pop
fsubl
aad
loop
pop
xchg
repz
push
add
adc
mov
loop
repnz
xor
stos
jae
dec
push
arpl
lcall
mov
hlt
xchg
mov
add
inc
cmc
out
xchg
sbb
sahf
dec
and
xchg
enter
cld
ljmp
mov
dec
inc
addb
ret
xor
pop
outsl
jne
aam
pop
addr16
push
xchg
sahf
lret
mov
mull
aaa
sub
add
jg
call
rolb
sti
aad
jp
mov
sbb
dec
mov
mov
xlat
or
in
inc
cs
dec
gs
lods
jae
test
mov
std
ret
lock
and
or
negb
ret
sti
push
fldcw
or
pop
cmp
call
jb
lret
jne
mov
adc
push
mov
push
or
nop
xchg
jg
lcall
pop
jns
in
cltd
dec
mov
imul
inc
rolb
dec
mov
je
ljmp
ret
cli
rorb
daa
call
decl
and
dec
fs
dec
sbb
inc
mov
and
cmpsl
sbb
xor
incb
cld
lcall
jbe
pushw
xchg
dec
ret
xor
inc
out
scas
bound
sbb
decl
in
jecxz
jno
insb
test
sbb
or
ss
add
ss
es
imul
daa
add
std
adc
cmc
cwtl
lret
rorl
mov
cmp
ljmp
inc
cmp
sbb
pop
movsl
clc
stc
cmp
sub
loopne
adc
aaa
movsl
inc
hlt
or
pusha
push
fs
mov
test
add
in
cmp
rcl
push
mov
or
or
mov
mov
mov
dec
dec
sbb
orb
loope
scas
test
enter
mov
call
jge
sbb
or
addr16
and
sub
sub
ljmp
xor
fildl
in
sbb
lahf
sbb
inc
sahf
loope
add
incl
xchg
dec
lock
fldcw
scas
sub
shlb
xchg
imul
sbbl
adc
incl
mov
loopne
jno
and
ss
push
pop
mov
mov
or
xlat
mov
in
lea
dec
test
out
cli
incl
js
mov
jb
lock
lds
xor
xchg
fcoms
cwtl
insl
ljmp
cmp
repnz
sub
ds
ja
jmp
cmp
pushl
push
ljmp
xor
dec
mov
pop
fs
mov
in
xor
mov
std
incl
inc
cmp
dec
jno
orl
inc
jmp
imul
mov
lock
xorl
les
and
ljmp
push
sbb
enter
gs
cltd
jge
test
out
cmp
aad
bound
ljmp
rorb
scas
test
mov
sar
push
fcom
adc
pop
out
test
imul
orb
nop
rolb
imul
das
js
shlb
mov
decl
adc
insl
jecxz
xchg
cmp
ja
fincstp
lcall
and
call
pop
scas
imul
or
pop
loopne
fnsave
or
jg
int
dec
pop
fldl
mov
lds
incl
out
dec
push
jg
dec
lret
mov
xchg
insb
jge
inc
loop
mov
and
popf
lods
jno
cmp
outsl
xchg
nop
adc
inc
int3
rcll
lret
push
in
sub
popa
imul
xor
pushf
popa
jmp
mov
in
cli
out
out
and
cli
pop
ja
mov
aam
push
ja
fdivrl
dec
cld
decl
in
dec
push
and
cltd
cmpsl
push
scas
call
faddl
outsb
js
jl
mov
js
sar
lcall
mov
or
pop
test
outsl
sub
test
mov
mov
push
and
ja
ss
std
mov
jl
fsubrs
rorl
sbb
adc
pop
fisttpl
cmpsb
xchg
stos
enter
call
jg
loop
aas
les
xchg
stos
pop
fstpt
push
js
ja
lea
pop
pop
dec
sbb
cmpsb
pop
lret
ss
ljmp
std
lret
sub
data16
or
ja
cld
mov
sahf
and
lcall
pop
mov
decl
jne
push
lods
mov
jae
cmp
lock
mov
xchg
sub
mov
mov
repz
inc
xor
sbb
mov
mov
sbbl
scas
into
add
and
push
arpl
pushl
jb
mov
jl
nop
iret
pop
popf
push
cwtl
or
arpl
mov
cmp
jnp
mov
dec
adc
and
push
cld
jg
add
mov
fwait
int3
loope
out
pop
and
mov
stc
rcrl
mov
pop
outsl
sub
sbb
inc
xor
push
popf
lcall
mov
sub
hlt
sahf
nop
push
cwtl
and
fldt
sahf
test
movsb
int3
gs
pusha
cmc
and
sub
mov
ds
notrack
rorb
push
int3
sub
movswl
jmp
jns
mov
cs
or
incl
xchg
test
call
and
sub
scas
adc
in
call
mov
inc
sub
ret
sub
aad
push
pop
mov
dec
ud0
push
sbb
fisttps
mov
dec
test
popa
push
inc
cwtl
mov
jmp
mov
xor
es
bound
mov
jmp
fstl
cltd
and
aad
orl
mov
fsubrp
sub
decl
mov
mov
stos
adc
cmp
add
inc
out
das
and
add
pop
imul
adc
test
idivl
push
hlt
adcb
cmpsl
jge
mov
adc
out
in
sbb
sbb
push
pop
fcomi
les
out
hlt
cmp
rorb
loopne
xor
or
or
jns
arpl
inc
gs
rolb
mov
test
xor
shll
inc
push
pop
das
out
or
mov
inc
dec
jb
mov
cltd
lods
lea
shll
ficomps
sub
xorb
jg
push
sbbl
stos
in
pop
mov
cmp
or
pop
dec
cmp
shlb
into
or
loope
mov
call
mov
mov
and
sub
ret
ss
lahf
fistpl
adc
rcrl
mov
loope
test
sti
sub
inc
lcall
adc
dec
push
dec
mov
orl
or
cmp
mov
dec
pop
ljmp
shrb
push
sub
pop
and
out
in
dec
ss
mov
inc
mov
dec
fwait
pop
or
mov
fadds
add
pushl
adc
and
filds
jmp
lock
shld
mov
jle
add
ljmp
lods
repnz
and
push
test
push
cmp
pop
push
bound
mov
mov
dec
sub
in
dec
jo
push
cmpsl
mov
nop
adc
adc
lcall
mov
jmp
xchg
add
lea
stc
pop
rol
mul
jbe
push
cltd
dec
mov
call
cmp
jne
jmp
push
and
test
ds
call
out
dec
or
jno
ljmp
je
inc
in
aaa
rorb
sbb
std
icebp
in
loope
ss
mov
incl
test
sub
push
mov
fwait
and
jg
lcall
mov
incl
jge
sti
pop
xor
xor
jmp
inc
enter
arpl
adc
pop
xor
mov
js
scas
mov
xchg
loope
jae
mov
cmp
cltd
cmp
inc
and
jns
rcl
aas
loope
notl
jmp
adc
add
aas
cmpsb
mov
inc
dec
test
push
loopne
xor
out
push
push
insl
ljmp
xchg
test
int
mov
xor
fsts
mov
pop
data16
pcmpeqb
lock
fsubrp
mov
fcomi
or
dec
sbb
dec
jmp
orl
inc
loope
ss
jne
ss
cmp
pop
dec
jae
call
lret
mov
jle
movb
outsl
pop
inc
dec
int3
rclb
cld
movsl
xchg
incl
stc
xor
xor
sub
pop
popf
push
or
fcomp
lds
sbb
ljmp
fiadds
sbb
xor
push
ljmp
pop
inc
inc
sub
pop
inc
inc
addb
ss
cli
add
popf
incl
sub
jle
cmc
push
clc
call
jmp
adcl
xor
gs
jo
adc
dec
push
jb
pop
ljmp
or
mov
jl
testl
iret
adc
pop
and
test
mov
lods
pop
and
push
fistps
sub
xor
push
lods
inc
sub
mov
stc
test
push
std
jmp
pop
xor
xchg
pop
jg
stos
dec
lret
mov
adc
call
add
and
xchg
sbb
leave
popf
bnd
jb
xor
daa
pop
sub
movsb
cmc
lret
inc
sbb
por
roll
into
out
jmp
sub
mov
sarb
adc
mov
dec
addb
fidivrs
clc
mov
push
mov
fstpl
jbe
fildll
out
outsb
pop
xchg
xor
sub
push
inc
or
mov
in
mov
jmp
xor
adc
mov
mov
sbb
push
rolb
pop
push
dec
push
stos
popf
outsb
jne
in
ljmp
ret
adc
ret
shll
scas
pop
adc
adc
mov
inc
and
jg
pop
add
roll
pop
mov
mov
and
push
call
fnstcw
repnz
call
inc
sub
pop
jmp
in
insb
outsb
xor
sarl
ret
and
mov
jnp
cmp
mov
es
mov
shl
sbb
xchg
pop
or
mov
movsb
xor
outsb
enter
ljmp
lea
jns
lret
mov
dec
xor
xor
popa
push
pop
aam
rcl
testl
lea
incl
popf
test
mov
test
adc
shll
sahf
push
cld
cmp
inc
fldt
xchg
mov
sub
std
mov
adc
das
call
adc
xchg
leave
stos
pop
sub
adc
incl
adc
lock
aas
movsl
incl
lock
imul
jg
in
mov
sbbb
in
shl
and
ljmp
xchg
into
mov
mov
repnz
mov
rclb
pop
repz
daa
out
push
mov
sbb
int3
mov
xor
mov
neg
sbb
push
leave
shrl
mov
cld
leave
sub
stc
adc
mov
imul
adc
and
jle
aad
ss
adc
ss
cmp
push
or
iret
inc
dec
sbb
out
jae
mov
das
adcl
sbb
bound
in
inc
jmp
mov
xchg
movsl
jmp
gs
sub
cs
mov
int3
fisubrl
cmc
lcall
add
push
xchg
mov
bound
fildll
test
mov
sbb
jb
sbb
xor
movsl
fcoml
cmpsl
xchg
incl
mov
out
fidivl
xlat
movsl
mov
arpl
lcall
push
inc
pushl
cld
push
or
mov
inc
orb
dec
inc
movb
add
push
pop
lods
pushf
mov
and
cmc
jg
out
xchg
cltd
jno
inc
cmp
mov
adc
mov
and
addb
das
jecxz
sbb
stos
and
call
pushf
cmp
cmpb
lock
rol
pop
xchg
cmpsl
inc
pop
inc
adc
inc
clc
mov
sbb
jg
loope
scas
push
orb
int3
sub
jo
mov
orl
push
jbe
sarb
adc
xor
dec
adc
jnp
lea
clc
lahf
xchg
cs
inc
xchg
and
add
and
arpl
cmp
xchg
add
filds
and
int
push
loopne
pop
pop
mov
mov
aaa
or
ucomiss
fwait
xor
ss
jmp
add
mov
scas
push
and
pop
movsb
xlat
adc
pop
jecxz
add
push
sbb
cwtl
sar
in
shll
mov
jmp
mov
mov
pop
cmc
push
or
sarb
test
cmp
pop
pop
mov
stos
stc
into
push
pusha
dec
outsl
mov
bound
aam
add
and
subb
fisttps
and
stos
adc
xor
ljmp
xchg
ret
call
cwtl
mov
mov
cmc
fisubs
cmp
jg
fcoms
out
pop
push
pop
pop
pop
cmc
pushf
cmovbe
pop
xor
add
cmp
mov
jl
je
dec
add
cmpsb
xlat
addr16
outsb
mov
cmp
jmp
aam
roll
das
jnp
xchg
xor
pop
ret
sub
mov
loop
sbb
push
repnz
scas
jle
xor
aad
das
jae
dec
jp
sti
mov
cld
outsl
dec
adc
fwait
outsb
lock
sbb
lret
cmpsb
mov
fstp
out
xor
sbb
cmpsb
xchg
jmp
and
mov
push
inc
push
fwait
add
mov
or
fimuls
lret
pop
dec
or
test
dec
pop
or
mov
pop
out
and
jl
push
xor
pop
test
ret
call
xor
inc
testl
mov
data16
popa
sbb
inc
mov
icebp
jo
movsb
sarl
xor
call
daa
push
stos
lcall
aas
or
mul
push
push
add
cmp
scas
in
loopne
dec
or
sbbb
cmp
aad
adc
imul
stos
mov
push
mov
sub
and
pop
inc
add
lock
sbb
bound
imul
pusha
call
adc
pop
cmpsl
jmp
hlt
stos
aad
jo
imul
stos
out
pop
pop
sub
mov
ljmp
icebp
xchg
sub
cmp
cli
cld
js
sbb
test
sti
jl
mov
icebp
jnp
out
stos
lods
jns
push
sub
adc
notb
lods
clc
and
dec
sub
enter
add
sbb
js
lea
ja
pushf
xor
jp
lds
adc
in
mov
xor
cmp
xor
xor
sbb
pop
test
repz
sub
sbb
xchg
into
lock
jnp
insl
push
sbb
mov
pop
or
add
xlat
sti
push
push
dec
push
jle
fnstenv
mov
addr16
mov
mov
push
pop
pop
sub
adcb
mov
outsb
mov
popa
jg
and
mov
jg
push
mov
lods
add
jo
mov
lret
dec
or
jmp
jns
out
lods
xor
push
jmp
push
cmp
loop
push
sbb
fcoml
lret
gs
push
mov
lea
dec
push
pop
pop
lcall
std
jg
out
jbe
in
and
or
mov
je
cmp
cwtl
jne
sar
call
inc
test
mov
push
push
push
pop
mov
mov
imul
mov
pop
cmp
jg
iret
xor
mov
test
fdivl
mov
movsb
les
adc
push
cli
cs
jecxz
ds
inc
int
push
into
popa
addb
addr16
das
clc
pusha
xor
das
mov
adc
test
stos
test
int
scas
xlat
inc
mov
loop
push
mov
adc
mov
xchg
pop
and
push
test
or
xor
fistpll
dec
cmp
push
add
aam
pop
cmpsb
mov
push
sub
mov
adc
push
lret
rorb
sub
jmp
insb
pushf
mov
jp
movl
ja
adc
mov
lods
xor
jb
adc
or
lods
rcll
cmp
adc
js
mov
mov
sahf
jno
lea
inc
mov
mov
call
movsb
pop
mov
cmc
pop
jl
rorl
push
xor
shl
xlat
jae
test
xor
jnp,pt
les
pop
push
jno
adc
sbb
mov
sbb
mov
mov
or
jmp
jmp
or
sbb
pop
cmp
jmp
mov
lods
fcmove
push
je
test
or
hlt
lock
xchg
xchg
add
pop
loop
adc
sarl
outsb
clc
daa
mov
mov
mov
mov
and
push
mov
cmc
and
pop
push
enter
push
cltd
and
stos
aad
push
xlat
int3
sbb
inc
scas
and
mov
pop
lcall
push
clc
sbb
sub
rclb
jecxz
std
cmpsl
stos
dec
lods
cmpsl
lods
add
push
mov
mov
incb
xor
mov
inc
inc
add
cmp
and
jb
push
lock
sbb
jmp
inc
push
or
scas
stc
mov
sbb
push
dec
dec
fistl
mov
adc
les
push
aad
lock
xchg
lret
mov
incb
push
dec
xchg
rorl
pop
cmp
dec
mov
push
test
test
popa
xchg
dec
adc
xor
cmp
mov
in
and
imul
lock
lock
push
lock
cmp
mov
ret
aam
nop
jecxz
pop
int
adc
push
add
pushf
sbb
pop
mov
call
cmpsl
stos
insb
outsb
xchg
inc
movsl
scas
es
push
sub
cmp
push
insb
cltd
daa
bound
pop
fidivl
add
mov
fdivr
in
rorb
push
cwtl
pop
subl
pop
dec
add
in
xchg
and
sub
nop
fistpl
dec
lret
test
add
xorl
add
fdivs
call
xor
jns
nop
movsb
scas
lret
push
incl
in
sub
pop
iret
inc
fdivs
hlt
jo
mov
icebp
sti
ret
pop
sbb
icebp
dec
push
repnz
dec
pop
stos
call
jg
icebp
dec
jno
dec
inc
icebp
mov
test
ret
push
dec
inc
mov
push
je
pop
mov
mov
andl
cmp
movsb
sarb
jecxz
mov
add
cmc
js
test
mov
xchg
mov
sbb
adc
movsb
mov
sbb
pop
les
inc
je
push
xor
xor
je
pop
in
test
insl
shr
jbe
les
jns
cmp
aad
aas
cltd
mov
movsl
jle
mov
fstpt
rcrl
outsl
enter
bound
repz
ret
mov
movb
or
xor
jae
nop
stc
mov
shrb
sbb
adc
or
xor
cltd
adc
notb
jae
or
add
out
jne
mov
mov
leave
pop
inc
jae
pop
dec
pop
xchg
popa
shrl
shlb
cmp
daa
divb
cli
push
dec
pop
mov
cli
scas
push
sub
jle
fbstp
jno
stos
fiadds
mov
inc
fimull
sbb
loop
pop
scas
pop
lret
mov
push
std
testb
dec
mov
dec
aad
inc
inc
xchg
sub
add
jmp
sub
enter
daa
inc
xlat
and
mov
insb
stos
fisttpl
jle
or
test
loopne
mov
cmp
xchg
cmp
ljmp
cs
loopne
mov
repnz
jecxz
repz
push
pop
imul
jg
in
hlt
out
lret
cmp
insl
xor
call
movsl
je
add
in
insb
loop
pop
imul
lea
cwtl
inc
xor
enter
aad
cld
cmp
fildll
shl
mov
cwtl
inc
jbe
cmpb
add
cmp
xor
cmc
dec
push
int3
mov
or
inc
xchg
mov
lds
jne
sbb
nop
xchg
out
lock
sbb
es
clc
sub
pop
decl
cmpl
add
xchg
push
int3
add
push
sbb
inc
std
lret
cmp
xchg
call
stos
test
hlt
inc
cmpsb
aas
call
mov
das
outsb
loope
xchg
call
xor
cli
mov
push
in
pop
out
movl
cmp
ds
mov
sbb
cmp
mov
pop
pop
or
js
les
pop
cmpsb
or
pop
mov
ret
cmpsl
xlat
jg
fnstcw
mov
xchg
push
les
into
ss
lcall
add
pop
inc
sbb
jle
or
pop
mov
jge
adc
out
cmp
subb
pop
adc
mov
test
test
ljmp
cwtl
in
mov
pop
inc
cmp
and
xlat
cmp
ret
adc
enter
clc
push
xlat
rol
iret
aas
stc
mov
jle
dec
enter
rcll
gs
cld
call
rep
in
mov
ftst
adc
clc
mov
fwait
xor
pop
add
pusha
insl
stos
jo
test
loop
aaa
cwtl
pop
cmpsl
mov
or
fldt
mov
fstps
or
mov
testb
jg
popa
shll
pop
inc
xchg
xchg
and
sarl
adc
sub
cli
clc
stos
fidivs
adc
fmul
dec
or
push
xchg
dec
pop
hlt
stc
aas
lods
leave
inc
outsb
xlat
sarl
xlat
lock
in
dec
pop
mov
xorb
pop
cld
loope
inc
aas
push
ja
jg
mov
push
jae
ds
add
or
data16
lock
push
adc
xchg
cmp
mov
pop
pusha
rcl
mov
fdivp
out
gs
scas
mov
and
ss
adc
shrl
pop
mov
sub
adc
mov
fiaddl
test
fbstp
lea
sbb
nop
lahf
mov
push
mov
mov
mov
adc
inc
xor
call
jp
rcrb
pop
cmc
cmc
adc
imul
xchg
out
xor
add
xor
dec
add
jl
repz
add
mov
popf
lea
aaa
mov
cmp
mov
test
sbbl
int
lret
js
stos
dec
add
shll
jl
push
and
jp
jge
push
xchg
push
sbb
push
jl
mov
sti
stos
inc
pop
add
xchg
jg
xor
mov
cmp
std
fidivs
sub
popa
ret
dec
mov
mov
sub
je
jne
mov
out
jns
and
mov
out
in
jo
scas
sub
lods
mov
popa
mov
shll
push
mov
mov
mov
sub
sarb
shrb
mov
repnz
repnz
jo
push
shll
mov
test
filds
lea
fisttpl
ja
mov
data16
jge
sahf
loopne
or
enter
inc
je
push
movsb
xor
or
cs
jae
shr
or
mov
xor
mov
push
cmp
adc
jmp
or
mov
sub
adc
xorb
mov
xor
sahf
cmp
adc
jo
mov
jle
inc
jbe
cmc
or
jp
sbb
mov
call
xchg
pusha
cmpxchg
lea
das
cmp
bound
pop
cmpsb
adc
cli
rcl
or
push
enter
and
hlt
cltd
cmp
dec
and
shrl
and
mov
push
inc
inc
mov
adc
adc
cld
cmp
pop
mov
xchg
orb
divl
ss
imul
int
inc
fbld
inc
push
sbb
jp
jg
aas
sub
or
das
sbb
data16
movd
lcall
loope
push
fnsetpm(287
dec
enter
cwtl
rclb
insl
xor
rcr
sbb
outsb
pushf
scas
ret
pop
and
push
and
loop
gs
jne
sub
xor
or
add
mov
out
pusha
gs
xor
mov
sbbl
outsb
jle
pushf
adc
ja
dec
fdivrl
int3
scas
sbb
int3
mov
dec
das
jno
pop
mov
cmp
mov
fstl
sub
push
mov
mov
outsl
jp
add
and
imulb
jno
pop
or
dec
jns
sub
sbb
fbld
sbb
fimuls
pop
or
mov
call
cmp
lcall
or
xor
in
xchg
out
jle
rcrl
test
js
cld
push
sbb
cmpsl
dec
inc
cmp
addr16
out
xchg
mov
sbb
mov
pop
jmp
dec
dec
mov
fucomp
outsl
fsubs
push
mov
xchg
hlt
adcl
jne
sahf
notl
adc
dec
jle
loopne
xor
sbb
dec
lret
das
jp
ljmp
jno
fldt
hlt
rorb
stos
vmovntpd
adc
mov
cmc
enter
in
mov
cltd
jl
mov
cmp
clc
test
cmp
jle
cmpl
push
enter
movsb
call
mov
cmp
insl
mov
mov
jb
pop
dec
xchg
jne
jl
cli
push
aas
outsb
lahf
jg
hlt
int3
int3
dec
loop
jae
cmpsl
fistpl
mov
add
push
iret
hlt
dec
in
add
clc
movsb
mov
jo
cmp
push
inc
outsl
subl
xor
sti
cmp
pop
adc
rcl
xor
or
aaa
dec
or
push
or
icebp
test
mov
ret
push
push
pusha
cmp
addl
ja
mov
mov
mov
jo
ljmp
dec
lea
stc
add
ds
fwait
ss
test
jae
test
lods
nop
fdivrl
add
aaa
into
add
out
sbbb
add
push
cmpsl
daa
add
push
ja
into
xchg
sub
loopne
sbb
mov
mov
lock
repnz
or
mov
pop
dec
dec
stos
or
aas
in
mov
test
in
push
jp
push
sub
in
dec
dec
int
fcmove
in
pop
mov
cmpsb
addb
jp
dec
dec
pop
inc
sbb
iret
and
or
push
push
ljmp
rcl
insl
cvtps2pd
fisubrs
ficoml
ljmp
loope
push
call
aam
push
mov
mov
stos
push
fbld
mov
inc
shrb
aaa
dec
fists
icebp
xchg
lods
xchg
outsb
iret
mov
fsubrs
sar
dec
sub
jbe
jg
mov
adc
and
test
aaa
rorl
lods
cli
stc
jmp
lock
pusha
dec
lods
mov
jbe
xchg
loopne
sahf
inc
mov
or
push
inc
sbb
push
jmp
lock
pop
inc
lcall
in
sub
pop
fdivr
pop
in
push
rcrl
cmp
std
push
dec
pop
xor
push
push
fildll
xchg
lret
lds
adc
inc
in
inc
and
inc
push
sub
dec
mov
sub
nop
nop
ljmp
dec
pop
clc
xor
add
imul
push
cltd
and
sub
and
movsl
jg
sbb
mov
sub
add
sbb
inc
fbstp
pop
jo
sub
shll
into
adc
pop
mov
iret
push
mov
jp
int
insb
push
xchg
xchg
loope
shll
adc
cmp
fs
add
lock
test
cld
pop
xchg
xchg
cs
mov
testl
std
push
mov
push
push
lock
dec
push
add
push
nop
int
or
notl
pop
enter
or
push
mov
dec
sarl
or
shll
imul
jge
fnsave
fdivr
push
fstl
sub
adc
pop
or
ja
push
stos
dec
outsb
dec
cmp
xchg
xor
xor
or
xchg
mov
mov
call
test
scas
mov
push
sar
xchg
or
inc
xchg
fidivrs
cmp
dec
les
ret
add
xchg
nop
or
xor
lcall
movsb
pop
jno
add
push
jl
sub
or
cs
rcrl
div
xor
jo
out
pop
xlat
lea
scas
outsl
aad
cmp
jmp
movsl
pop
js
lock
les
js
inc
lcall
sub
and
mov
fwait
les
je
xchg
stc
inc
push
pop
inc
cwtl
mov
xlat
sbb
ss
adc
popf
add
or
dec
ret
sub
imul
mov
xchg
rcrb
stc
hlt
jle
lock
jl
das
and
nop
jns
mov
sub
aam
dec
sbb
pop
aaa
loop
mov
mov
jb
sbb
xchg
out
aas
loop
outsb
nop
adc
test
inc
dec
push
mov
imul
jg
scas
pmuludq
lret
mov
fs
adc
mov
xor
inc
stos
push
add
jnp
into
pop
xor
cld
jmp
push
push
pop
imulb
pop
add
movsb
loopne
and
dec
xlat
xchg
and
test
jb
push
mov
push
subb
dec
sbb
pop
stos
ret
dec
add
push
aam
orps
adc
jno
push
lret
pop
and
sub
gs
xchg
scas
and
out
xor
push
inc
negl
je
xchg
push
repz
or
cli
dec
xor
sbb
lretw
mov
jl
negl
fisubl
mov
hlt
inc
cmp
mov
mov
lea
ret
add
mov
mov
adc
xchg
jo
mov
mov
mov
pop
mov
orb
xor
push
lods
mov
pop
mov
cwtl
add
dec
dec
and
js
dec
stos
stos
pushf
adc
jp
imul
inc
add
nop
into
fistpll
aad
cmp
and
sub
jmp
insl
xchg
pop
cli
pusha
shl
jl
aad
sbb
test
sbb
mov
pop
sbb
into
dec
fisubrs
rsqrtps
sbbl
les
dec
add
add
jg
xor
in
push
mov
ljmp
sbb
sahf
push
or
mov
in
clc
jp
mov
and
push
mov
jl
pushf
or
cmp
xchg
cmp
xchg
add
in
push
jg
dec
xchg
jmp
roll
pop
or
sbb
jno
adc
cmpb
into
aaa
out
pop
stos
and
xor
sbb
cld
pop
fmull
jb
jge
andl
loopne
in
mov
adc
push
out
sbb
out
call
inc
mov
sbb
pusha
pop
adc
adc
in
cmp
cmp
ljmp
ljmp
pop
sbb
mov
and
add
push
xchg
xchg
nop
xor
test
dec
inc
pop
mov
das
sub
ror
rcrl
sar
and
and
or
lock
add
lods
sbb
cmp
adc
out
mov
jno
pushf
shlb
pushf
add
outsb
aam
push
loopne
mov
mov
mov
dec
bound
adc
and
sbbb
dec
call
fs
inc
ja
pop
xorl
push
cmp
mov
cmp
in
push
xchg
ror
push
adc
pushf
ret
jge
lods
sub
mov
dec
push
jo
lock
cli
test
shrb
or
xchg
add
push
shlb
je
lret
call
int3
dec
setge
mov
inc
aad
add
jle
sbb
mov
pop
fucom
adc
sbb
pop
icebp
push
xchg
mov
pop
xor
mov
xor
lcall
sub
xchg
imul
mov
imul
jne
sahf
adc
xchg
push
cmp
into
xchg
xchg
fwait
jmp
test
sbb
push
and
mov
mov
imul
add
and
pusha
cli
filds
pushf
repnz
in
xor
les
stos
and
fcomp
mov
sbbb
jmp
mov
mov
ja
cli
push
dec
push
daa
in
or
mov
mov
mov
or
sbb
lods
cmp
nop
xchg
mov
pop
roll
sbb
mov
mov
in
inc
mov
cld
leave
mov
mov
jp
lret
pop
and
mov
jbe
inc
inc
pushf
xchg
mov
inc
sbb
add
jg
call
cmp
fs
lea
mov
cwtl
cmp
pop
std
sub
mov
sbb
out
xlat
fs
xchg
aad
add
cmp
pusha
int3
mov
icebp
or
ret
fmuls
lcall
jl
leave
inc
loope
cld
pop
mov
fldl
dec
push
push
or
jecxz
pop
orl
stos
push
adc
sbb
in
xor
inc
lcall
pop
sub
pop
scas
fisubs
push
pop
sub
xchg
jge
jle
xlat
xchg
in
add
lea
js
pop
push
mov
jg
dec
je
mov
sbb
dec
fwait
mov
cmp
popa
hlt
or
gs
loopne
es
sub
dec
ljmp
mov
scas
cmp
addl
aas
les
jno
cmp
xchg
es
mov
xchg
adc
test
lahf
mov
mov
push
cltd
popa
sbb
inc
cli
popl
push
ja
push
leave
fsubl
and
push
inc
mov
xchg
subb
jp
pop
shll
sbb
push
push
lret
mov
lds
cmp
les
imul
lcall
js
mov
jne
cmp
mov
cmc
cwtl
mov
dec
cmp
test
push
in
ret
decb
xchg
push
addr16
aam
in
xchg
mov
or
sub
rol
dec
inc
inc
dec
pop
jl,pt
sbb
mov
jp
cmp
adc
hlt
addb
dec
loopne
imul
test
movsb
push
scas
aad
cmc
popa
mov
sbb
xor
les
mov
and
repnz
sbb
test
sbb
xchg
push
push
lods
lods
sub
inc
mov
mov
shr
xor
popl
das
sbb
sub
sub
dec
mov
stos
std
movsl
mov
and
sub
in
adc
pop
cltd
sub
mov
lock
or
xor
mov
push
ja
push
lock
subl
mov
mov
rolb
rclb
std
addl
into
clc
aaa
push
cmpsb
aas
ret
or
push
addb
ret
es
addb
mov
xchg
mov
add
aas
mov
dec
sub
or
pop
sub
jmp
nop
imul
xlat
fdivrs
cmp
adc
mov
adc
mov
adc
icebp
xchg
pushf
cmp
jbe
mov
jb
test
cmpsl
xchg
dec
mov
stos
out
inc
int3
push
xchg
jno
inc
outsl
or
incb
test
pop
jns
or
mov
loop
subl
loop
push
in
popf
fprem
and
aaa
mov
iret
mov
push
sub
cmpsl
sahf
mov
icebp
lods
test
ljmp
enter
clc
inc
jne
push
dec
inc
sahf
loop
xchg
daa
aad
pop
jnp
push
rolb
clc
mov
imul
js
add
pop
xor
ficomps
loope
in
mov
fnsave
xor
mov
test
inc
insl
popf
out
in
lods
cltd
data16
sbb
mov
dec
xor
push
or
dec
cmc
push
js
pop
add
inc
adc
cmp
into
enter
add
ret
sbbb
pop
lock
in
lcall
xor
fiadds
negb
std
stc
mov
jmp
out
push
jo
lock
jge
scas
insb
and
lds
mov
aas
bound
cmp
push
icebp
push
hlt
mov
incl
cmpsb
sub
xchg
or
mov
push
aaa
subb
pop
or
mov
ss
pop
in
outsb
ss
pushf
test
pop
inc
movsb
mov
in
mov
andb
hlt
mov
scas
fs
addr16
out
subl
jb
dec
inc
rcpss
mov
test
sbb
inc
adcl
and
cmp
xchg
jmp
ss
ret
mov
dec
push
idivl
aas
in
pop
push
out
dec
jnp
dec
mov
and
push
lcall
ljmp
dec
cmp
rcrb
jecxz
fsub
xor
pop
sub
sub
lock
jno
or
test
cmp
add
clc
iret
rorb
cmp
jns
ljmp
sbb
push
mov
jno
jp
flds
loopne
popa
or
mov
mov
imul
ss
faddl
stos
bound
jne
inc
outsl
jb
incl
dec
sbb
jmp
and
hlt
out
mov
or
mov
inc
inc
inc
jnp
push
sub
xor
xor
or
mov
mov
pop
mov
int3
js
push
jmp
push
mov
xor
pop
dec
adc
testb
pop
xor
jmp
adc
inc
jle
ljmp
xor
lahf
mov
jo
pop
jmp
fisubs
sub
lods
fwait
and
mov
call
inc
dec
pop
cmp
adc
jle
icebp
test
les
test
aam
inc
and
mov
pop
pop
pop
lods
push
push
mov
jp
or
and
mov
inc
test
lsl
test
xor
icebp
inc
inc
nop
call
cmp
push
mov
mov
add
ja
subl
jecxz
dec
sub
pop
scas
loopne
cld
lahf
popf
in
dec
jg
mov
lret
insl
adc
and
aam
pop
xor
int
add
xchg
push
stc
xor
rcrl
jne
jge
mov
cmp
sbb
cltd
mov
sub
mov
mov
ljmp
pop
lahf
lret
js
inc
das
cmp
shl
or
jns
dec
popf
rolb
loope
inc
adc
cmp
sbb
mov
jns
aad
add
aaa
sbb
in
int3
cld
lahf
lcall
dec
or
nop
fbstp
shrb
cli
data16
mov
cld
mov
call
xlat
push
fidivs
imul
ret
divl
dec
add
ds
adc
or
add
push
xchg
sbb
jge
bound
xor
adc
insb
cmp
sbb
or
lods
hlt
dec
iret
add
jl
decl
sarl
cmpsb
xchg
scas
jle
lock
cmp
xor
mov
mov
shll
adc
cmpsl
and
fisubrs
outsb
or
sbb
sti
dec
xchg
enter
mov
push
jo
shrb
xchg
add
jecxz
pop
mov
in
inc
mov
sbb
push
daa
dec
push
ds
push
in
daa
lock
xor
or
pop
in
adc
bts
scas
jmp
orb
mov
pop
xchg
push
insl
decb
repnz
xor
stos
adc
in
fisttpll
adc
adc
test
and
sub
leave
in
std
lods
and
xor
pop
mov
pop
push
das
arpl
add
push
or
mov
dec
jecxz
adc
mov
add
pop
lea
jle
mov
lahf
daa
mov
xor
popl
or
stc
cmp
sub
shrl
fcmovu
push
sahf
daa
out
ret
nop
push
int
test
nop
xchg
jle
movsl
ret
push
mov
cmc
adc
mov
cld
jno
push
adc
sbb
fadd
je
push
aad
mov
push
inc
fiaddl
aad
repnz
shl
or
and
xor
xor
and
cmpsb
loop
cmp
rol
push
arpl
mov
mov
xchg
mulb
xor
fcomip
dec
mov
pop
movsb
jge
jno
push
movsb
icebp
jo
pop
scas
lods
mov
in
mov
mov
mov
ljmp
cmpsb
xlat
pop
out
test
cmpsb
bound
adc
dec
xchg
xor
dec
jae
or
pusha
movb
sbb
mov
pop
add
lahf
cmp
test
ret
sub
test
sub
xor
cwtl
or
cli
movsb
add
std
decb
imul
cmc
and
stos
mov
loopne
lahf
mov
jl
push
pop
jecxz
cmpsb
pop
fcomp
sbb
ja
mov
lahf
inc
mov
mov
aad
loope
xor
in
mov
jmp
push
daa
lock
mov
xchg
mov
dec
dec
jl
enter
xlat
pop
ret
mov
jb
mov
ror
rolb
sub
add
inc
imul
mov
insb
cmp
wrmsr
leave
cli
cmovb
in
sub
push
inc
arpl
les
shll
mov
xchg
out
mov
cmp
scas
fnop
jg
or
xchg
jle
sub
lods
sarb
out
cmpsl
scas
and
lret
xor
or
xor
jle
pop
mov
push
add
icebp
pop
cwtl
fwait
push
ljmp
pushf
jae
fcompl
pop
xor
mov
in
sbb
cmp
roll
int
fstl
cmp
mov
sub
dec
imul
movsb
das
sahf
add
ds
orl
loopne
xor
jne
adc
repz
adc
js
mov
sti
and
imul
inc
push
add
xor
xchg
lcall
outsl
sbb
mov
in
ljmp
lcall
cmc
jg
dec
sbbb
mov
mov
aam
mov
mov
jmp
or
mov
sub
add
movsb
push
mov
daa
subl
icebp
aas
addb
jle
mov
test
vcvtpd2dq
clc
dec
test
inc
cmp
imul
iret
mov
test
inc
mov
cmp
cmp
rorb
cld
mov
lret
sbb
je
jp
sbb
sti
xchg
incb
js
xchg
call
mov
orl
and
cltd
mov
pop
mov
and
je
icebp
iret
jle
filds
xchg
jmp
orl
dec
sbb
dec
fs
xchg
mov
cmp
sub
movsb
loopne
mov
jb
loop
clc
add
in
cmp
pop
xor
das
pop
push
push
lock
adc
aam
mov
aad
test
mov
adcb
jmp
jge
mov
push
add
mov
lret
shlb
fadds
adc
jmp
and
and
inc
lock
int
dec
stc
cmp
jl
or
xor
repnz
add
fsubs
cld
or
daa
out
movb
mov
cmc
lret
dec
add
mov
push
popa
xchg
sti
insb
cli
pop
push
leave
push
or
sub
test
adc
aam
add
out
cli
adc
push
push
push
repnz
fwait
or
pushf
jle
xchg
hlt
adc
movsl
dec
mov
pop
call
cmpl
lock
std
push
cmp
in
and
es
add
adc
mov
adc
cmp
xchg
data16
ficompl
sbb
iret
add
outsb
xlat
arpl
sbb
xor
jb
mov
sub
mov
adc
lcall
fldcw
stos
sub
pop
cmp
inc
adc
lcall
push
cmp
sahf
xorb
mov
pop
mov
mov
cmpsl
mov
outsl
xor
cmp
fcomp
clc
insl
mov
dec
add
cmp
insb
and
mov
hlt
test
mov
sub
clc
data16
adc
ljmp
imul
lret
scas
sbb
shr
pop
adc
imul
icebp
stos
fidivs
hlt
lret
dec
cmp
adc
fnstsw
mov
inc
or
fwait
insl
fidivs
sbb
scas
cmp
dec
pop
das
mov
pop
imul
fnstsw
lcall
xor
jo
sbb
inc
fdivrs
shl
lea
aaa
mov
test
or
pop
cmc
cmpsb
jno
loop
mov
xchg
cld
lret
push
dec
pop
lahf
jp
mov
pop
mov
mov
xor
test
loopne
subb
movl
push
outsb
mov
and
rolb
test
pop
mov
and
xchg
add
push
pop
repz
and
test
cmp
enter
stc
xchg
pop
jmp
jmp
push
sbb
and
pop
stos
pushl
xor
stos
jle
or
test
push
fs
jecxz
sub
push
inc
scas
add
pop
inc
add
mov
icebp
fildl
jle
mov
outsb
and
add
mov
aam
mov
lcall
in
out
sahf
cmp
mov
outsl
xor
inc
aam
ret
fidivl
pop
pop
jo
or
pushl
push
lock
cmc
jmp
adc
xchg
stos
mov
out
movq
sbb
test
sub
rorb
js
aas
cmp
inc
out
sbb
or
cmpsb
xchg
jl
ret
lods
addr16
clc
pop
les
mov
lock
fwait
sub
mov
xorl
cmp
aam
sub
ret
mov
pop
inc
repnz
fistps
mov
insb
inc
cltd
adc
lock
pop
in
or
ss
or
movsb
adc
insl
dec
xchg
movl
aam
fs
lds
dec
inc
ja
cmp
outsb
xchg
dec
jg
ss
sti
sub
daa
push
lahf
adc
mov
push
xor
lcall
mov
into
scas
dec
movsb
mov
pop
test
adc
into
ret
jmp
push
fs
loopne
ljmp
sbb
dec
xor
lcall
movsb
mov
ja
xchg
fmuls
push
push
or
xchg
mov
or
xchg
repnz
test
inc
adc
call
xchg
call
rcrl
les
mov
push
mov
xchg
or
and
lods
insb
push
cmp
jo
out
lcall
test
pop
insb
mov
push
xchg
mov
ljmp
pop
xchg
out
push
adc
xchg
lods
push
flds
or
xchg
pop
loop
cmp
sbb
in
js
pop
adc
xor
lods
inc
fsubrl
fidivl
or
mov
jmpw
popl
pushf
cmp
jp
fimuls
cs
xlat
inc
orl
notb
mov
pop
pop
add
or
data16
sub
xchg
add
push
aam
adc
outsb
mov
negb
fstpt
out
or
inc
jg
cltd
adc
inc
pop
scas
mov
inc
dec
mov
cmp
shr
cmp
push
stc
mov
add
and
aas
adc
jp
jl
sub
fidivl
push
pop
mov
gs
mov
mov
mov
pop
adc
ret
mov
mov
inc
pmovmskb
cmc
imul
and
aaa
daa
cmp
call
test
out
adc
mov
icebp
lea
pushl
popf
stos
dec
addr16
sbb
xor
addl
rcr
cli
pop
fcomps
jno
sbb
cmpsl
mov
dec
inc
push
push
les
outsb
imulb
add
jb
lret
jge
jp
call
mov
mov
jg
dec
rcll
fiaddl
rcrb
dec
fnstcw
jle
mov
push
ljmp
push
gs
pop
pop
pop
add
sub
push
rolb
and
xor
fdivrl
jo
mov
div
aaa
sbb
jle
cwtl
ret
xchg
mov
mov
cmpsl
je
call
rcl
jp
xchg
dec
mov
push
into
lret
insl
jo
filds
dec
lcall
cs
and
jge
movsb
xchg
jmp
repz
arpl
daa
pop
mov
jle
ror
xor
loopne
fs
xorl
adc
xchg
imul
push
addb
jno
adc
xchg
pop
sbb
addr16
mov
loopne
sub
adc
bound
ret
sarb
insb
jmp
mov
or
mov
daa
sub
xor
sbb
cmp
mov
leave
out
stos
hlt
or
test
dec
xlat
and
pop
pop
mov
jb
add
lcall
dec
push
lods
stos
lea
jg
popa
fimull
sbb
push
dec
sub
popa
adc
add
mov
push
xor
sub
push
sbb
inc
inc
cmc
outsl
add
push
and
inc
add
sysret
mov
cs
mov
daa
shl
ja
call
movb
sub
cld
cmp
add
and
xor
cmpsb
dec
jp
mov
sbb
loopne
add
adc
lea
add
push
xchg
out
xchg
dec
clc
int3
sbb
arpl
push
aas
js
rcr
test
and
orb
fdivs
cmp
sarb
fisubrs
xor
fdivr
comiss
sub
xchg
pop
insl
inc
lahf
in
dec
lcall
loop
movsb
xor
push
fldcw
addr16
decl
dec
sub
dec
sub
cmp
sub
hlt
data16
xchg
pop
pop
mov
jg
inc
jne
pop
imul
add
sbb
push
jp
cwtl
xlat
add
lcall
jmp
pop
jbe
lds
xchg
fucomi
test
add
or
ljmp
xchg
mov
push
daa
pop
rcl
lods
in
rorl
gs
packuswb
sub
or
inc
in
jecxz
movsl
loop
jne
and
adc
mov
mov
jno
stos
pusha
adc
push
lock
rcrb
insl
into
adc
imul
or
push
jmp
aaa
cmc
aam
sbb
daa
testb
jp
mov
iret
cli
inc
jl
adc
jmp
daa
rcrb
subb
xor
mov
sbb
push
or
in
icebp
inc
sbb
test
imulb
mov
stc
and
jnp
out
gs
adc
xchg
clc
fcmovnbe
mov
mov
fistpl
jecxz
fsubr
lret
rcrl
scas
fdecstp
leave
test
mov
add
fadds
and
into
mov
and
dec
cmpsb
xchg
loop
xchg
mov
jg
lock
mov
push
push
adc
jmp
push
iret
cmp
mov
cwtl
push
push
cmp
dec
ret
leave
and
cmpl
jo
jae
int3
mov
push
dec
xorps
notb
add
cmc
cld
orl
stc
orb
push
ljmp
sbb
lar
add
cmp
add
pop
sub
ljmp
mov
sub
ret
ret
sbb
xchg
jp
test
popf
cwtl
jne
mov
in
outsb
mov
ret
ljmp
jmp
and
and
push
xchg
lcall
lea
mov
dec
jmp
push
loop
test
sbb
dec
xchg
adc
mov
mov
dec
dec
mov
sbb
in
mov
loopne
xchg
fucompp
mov
xchg
aas
jg
jg
outsl
shl
sub
and
inc
pusha
mov
popa
adc
scas
lods
scas
lcall
xchg
mov
fsubl
add
xchg
add
lods
test
ss
daa
mov
xchg
mov
js
shr
repnz
je
mov
call
repnz
outsb
push
in
lds
adc
lock
nop
cwtl
int3
and
icebp
js
outsl
mov
rcrl
dec
or
fdivs
add
push
push
xchg
movsl
icebp
mov
popf
and
dec
stos
pop
sbb
pop
jle
test
sarl
push
in
bound
xlat
sub
mov
pop
push
xchg
outsb
mov
inc
pop
mov
leave
test
xchg
sbb
out
adc
in
insb
das
cmp
jecxz
xchg
pop
lds
jbe
xchg
ljmp
ja
mov
push
inc
mov
lods
aaa
push
xchg
inc
cmp
outsb
add
inc
pop
dec
fcoml
push
mov
cmp
add
shlb
lock
jne
test
cmpsb
and
mov
les
pop
pop
bound
push
adc
sbb
mov
ljmp
movsb
pop
fiadds
out
add
daa
push
nop
dec
push
test
pop
inc
sarl
cmp
mov
sub
xchg
cmp
jo
and
adcl
or
in
dec
mov
iret
push
popf
lods
xor
decl
rorl
idivl
and
or
and
pop
icebp
sub
jp
inc
call
jns
xchg
enter
adc
mov
xchg
jnp
rcll
cld
jle
aas
fwait
pop
jl
lods
or
mov
aaa
sbb
cli
bound
xor
aam
incl
ret
inc
xchg
jne
xor
jmp
cmp
clc
mov
mov
push
pushf
stc
mov
cmp
es
daa
xor
mov
stc
dec
stos
dec
push
lods
xor
mov
adc
in
push
mov
lahf
hlt
call
cwtl
mov
xor
rcll
sbb
pushf
jb
ret
adc
and
stos
scas
mov
ljmp
or
mov
push
pop
mov
fcmovnbe
pop
int
pop
loopne
xor
dec
subb
pop
fdivs
and
push
js
testl
aam
lds
adc
jecxz
pop
jge
bound
and
out
cli
dec
js
sub
ret
xchg
xor
sti
test
mov
mov
dec
test
push
xor
inc
cmp
negb
mov
rcrl
jle
push
ss
push
lods
jl
pop
aam
mov
inc
add
mov
cmp
in
popl
mov
inc
inc
sbb
cmc
sar
out
repz
cmpb
mov
leave
loope
cwtl
adc
scas
lock
mov
hlt
in
ds
shrb
xlat
out
sbb
or
stos
sub
ret
aas
lock
lret
mov
cli
movsl
imul
hlt
cs
push
lea
pop
lods
mov
sti
cmp
pop
and
call
xor
push
je
or
mov
mov
mov
scas
sahf
cld
adc
and
aas
push
decb
test
xchg
add
cmc
push
push
sub
outsl
clc
or
int3
push
data16
xchg
addl
inc
les
pushf
cmp
ds
lahf
push
je
lds
pop
push
cmpsl
js
es
mov
sbb
lds
or
mov
sar
sub
sbb
adc
pop
pop
mov
xchg
inc
sub
cmp
inc
xchg
lea
dec
xchg
and
fdivrl
cli
scas
daa
mov
fbld
pop
notb
mov
add
xchg
ret
mov
push
cmp
enter
mov
or
orb
lcall
pop
jae
mov
inc
aam
jle
lcall
aad
mov
ja
insb
test
imul
mov
jge
mov
add
jmp
icebp
pop
mov
sub
rcrl
pop
rol
inc
mov
mov
in
scas
pushl
and
mov
stc
xor
je
aam
xor
xchg
mov
sub
daa
adc
xchg
out
mov
pop
adc
push
incl
enter
fstps
push
push
pop
mov
adc
decl
xor
pusha
sub
and
xchg
movsl
mov
cmc
jo
inc
and
mov
jg
mov
sarb
ljmp
dec
pop
cmp
sbb
outsb
xchg
mov
ljmp
pop
xor
and
test
pop
add
xlat
test
imul
jo
arpl
sub
daa
and
hlt
enter
xchg
lds
xor
frstors
push
dec
sbb
mov
lods
rorl
xchg
adc
mov
punpckhdq
or
insl
mov
mov
xchg
xchg
call
popf
push
sub
les
cmc
js
pop
lods
xchg
mov
movsl
xchg
pop
insl
pop
lods
ljmp
lods
and
outsl
fisubs
test
and
into
push
decl
push
dec
xor
clc
dec
xlat
cmp
sbb
xor
mov
dec
jg
jae
cmp
scas
add
adc
jb
fs
xchg
and
icebp
xlat
insb
lret
loop
jecxz
mov
jb
cltd
cwtl
add
in
pop
pop
cltd
xor
aaa
jno
lods
das
dec
jp
lods
gs
popf
mov
imul
pop
sbb
mov
cmp
cwtl
inc
add
mov
inc
repnz
pop
and
jmp
jmp
cmpsb
leave
ret
fmul
inc
in
sbb
sub
shl
push
lret
js
pushf
lret
outsl
or
mov
dec
cwtl
dec
outsb
inc
mov
ss
xchg
mov
call
andl
stos
pop
jo
bound
xlat
scas
pop
and
out
jle
data16
mov
aas
movsb
sbb
test
jp
or
jg
sbb
lods
lock
sbb
pop
adc
mov
fbstp
cmp
xor
scas
ljmp
cld
addl
mov
pop
xlat
add
xor
mov
insl
clc
or
lret
int
xchg
dec
movsb
jns,pt
adc
cli
cmp
std
outsb
jae
pop
icebp
adc
cli
adc
mov
lcall
mov
mov
les
test
jecxz
add
jno
in
xor
sbb
lds
mov
dec
fcomip
sub
pusha
je
or
xchg
mov
loopne
mov
pop
pop
xchg
inc
lea
jmp
cmp
rorb
cmpsl
cmp
loopne
cli
xchg
pushf
stc
ss
icebp
push
dec
aas
sbb
idiv
xchg
inc
mov
jmp
rorl
sarl
cmp
push
inc
mov
in
push
mov
mov
and
repnz
insb
push
push
mov
out
mov
sub
popa
loope
aad
push
add
jno
jge
mov
out
and
push
popa
dec
dec
out
hlt
ja
push
out
sub
push
dec
stos
out
sbbl
test
out
or
mov
sahf
push
pop
jp
roll
in
loope
pop
jo
mov
push
add
add
inc
mov
popf
mov
xlat
cmp
shll
std
pop
and
fdivl
push
push
pop
scas
xchg
push
outsl
cli
pop
xchg
js
mov
sbb
or
and
xor
xchg
or
cmpsb
sahf
outsl
aaa
test
push
mov
orl
rcrl
pop
xor
clc
je
and
popa
mov
xchg
dec
dec
mov
js
out
cmp
fs
movsl
sbb
roll
fcomps
mov
sti
inc
jecxz
push
inc
inc
cld
sti
jo
mov
ds
cmp
ja
rcl
es
ret
js
sub
xchg
adc
rcrb
or
mov
sbb
jnp
dec
xchg
xor
rcl
shll
inc
movsl
data16
jle
jo
test
inc
shll
or
or
push
push
lahf
cmp
xchg
cmp
mov
adc
xchg
xor
inc
lret
mov
aaa
mov
xchg
pop
jge
pushf
sbb
mov
aam
pop
cwtl
adc
hlt
push
pushf
push
jnp
push
mov
push
int3
xor
jne
ja
cli
clc
cmpsl
push
and
jp
popf
fwait
pop
sbb
insl
sub
push
add
jns
icebp
hlt
insb
pop
daa
inc
jle
aam
stos
mov
xchg
iret
fcomp
jge
adc
jne
mov
add
insb
mov
ret
push
icebp
xchg
sbb
jle
push
roll
and
xchg
into
out
mov
hlt
sbb
jne
bound
fldln2
xchg
adcl
mov
push
fisttpll
or
cs
jecxz
psraw
jl
xchg
cli
jg
mov
push
and
int
mov
pop
lahf
mov
ds
sub
sbbb
or
dec
xchg
sbb
and
dec
cmp
ljmp
addl
mov
mov
mov
push
inc
adc
add
sti
mulb
cmpsb
stc
push
popf
ljmp
mov
lcall
shlb
clc
lcall
pop
pop
xchg
iret
leave
cmc
mov
mov
mov
bt
test
sbb
jbe
int3
dec
push
inc
add
in
fildl
scas
mov
ss
ret
jecxz
loop
movsb
push
or
inc
nop
and
dec
cmp
lock
or
aaa
sub
lret
push
mov
cli
stos
pop
call
add
sbb
aas
push
push
ja
sub
cmp
xor
out
jle
add
cli
inc
test
mov
fisubrl
fwait
repz
push
or
scas
push
ss
pop
sbb
es
pop
mov
pop
xchg
arpl
ret
xchg
or
cmp
fs
pop
sbb
sub
or
out
or
push
cmp
inc
ja
mov
xor
lea
jmp
subl
sbb
xor
test
lcall
xchg
xor
subb
shll
ret
dec
out
add
pop
mov
popa
sbbl
lahf
data16
cmp
jnp
adc
jp
scas
cs
faddp
add
pop
or
pop
outsb
in
sub
and
add
ljmp
add
mov
in
gs
mov
or
jnp
pop
xor
and
jo
incl
and
ret
cld
out
test
add
jmp
scas
popa
fists
push
mov
push
pop
pop
add
and
out
dec
push
lret
adc
dec
rol
outsb
mov
and
outsb
lret
shl
mov
and
fldcw
pop
jecxz
call
lcall
rcll
pop
dec
mov
xor
fwait
cmp
scas
dec
std
cmp
inc
xchg
lods
loopne
sbb
es
insl
fwait
jnp
ret
ja
je
out
mov
pop
lahf
loopne
ljmp
clc
fwait
pop
inc
pop
adc
cwtl
add
xchg
mov
xlat
cltd
popf
sub
push
inc
sub
push
mov
iret
xchg
add
out
add
dec
jnp
ror
repz
push
and
xor
pop
inc
and
cmpsl
stos
call
pop
lods
jbe
sub
adc
std
mov
sti
aas
int
je
add
out
xchg
ljmp
xor
sub
inc
clc
mov
or
or
cld
scas
xchg
sub
mov
int3
dec
cmp
stos
pop
sbb
sub
filds
mov
pushf
sbb
mov
fsts
lods
jnp
cmpsl
xchg
mov
xchg
out
fbld
fdivs
ds
mov
icebp
scas
shlb
cwtl
cld
decl
cmp
popf
push
sbb
cmp
sbb
jle
xor
mov
movsb
out
add
in
das
popa
test
push
loopne
test
stc
addr16
xchg
mov
fsubr
outsl
call
sbb
push
arpl
clc
popa
sub
xchg
out
fisubl
sbbl
ljmp
or
arpl
inc
fsubs
sbb
ljmp
xchg
loop
dec
and
lock
xchg
repnz
pop
aaa
xor
cmp
adcb
adc
div
stos
adc
inc
adc
dec
mov
nop
xor
push
cli
mov
adc
jae
aaa
jae
popa
jp
shrb
ret
cmp
pop
adc
add
lcall
sub
js
or
inc
popa
pop
lods
cli
push
mov
jb
adc
push
sub
inc
mov
loope
add
sbb
imul
sbb
push
outsl
mov
sub
sbb
out
xor
pop
pop
cmp
add
mov
pop
jo
stos
ljmp
mov
mov
inc
add
shl
movsl
or
inc
ret
inc
cltd
bound
divl
ja
mov
loop
das
mov
sarl
stos
cmc
pop
idivb
mov
or
dec
pop
mov
jmp
imul
inc
lret
ljmp
adc
xor
add
fucomip
sub
inc
insb
xchg
cmpb
insl
addb
inc
aas
mov
insl
std
loopne
and
dec
push
out
inc
mov
cld
test
inc
mov
pushf
mov
or
orl
hlt
scas
sub
loope
scas
mov
enter
cli
nopl
rcrl
inc
pop
mov
pop
sbb
es
ror
ret
mov
xchg
and
divb
pop
xchg
push
out
fwait
jge
lds
int
dec
fistpl
push
shlb
gs
sbb
push
dec
sbb
popf
push
cmp
mov
jg
arpl
cltd
xor
cmp
push
adc
sbb
outsl
cmp
mov
push
scas
in
mov
add
mov
addr16
inc
shr
adc
cwtl
jo
push
test
jge
dec
jge
dec
sub
rorb
sub
sub
outsb
jg
mov
fstp
sahf
scas
push
xchg
add
mov
mov
pop
xchg
mov
mov
sbb
fdivrl
sbb
jl
adc
rdmsr
jnp
mov
iret
subl
xor
ret
loopne
pop
xchg
cmp
icebp
mov
mov
jne
jg
mov
test
divl
push
push
and
orl
mov
punpckhdq
sbb
es
rorb
mov
in
clc
call
out
jge
pop
or
rorl
jno
mov
jo
pop
cmp
ja
fildll
divl
pop
push
ficoml
push
jno
std
and
add
gs
mov
movsl
dec
push
mov
cmp
push
push
sub
imul
jb
pop
add
cmc
bound
cwtl
ficomps
cmp
add
int
lock
mov
daa
push
push
mov
ret
dec
push
test
jecxz
xchg
mov
add
clc
jo
cld
jae
jns
nop
mov
xchg
adc
mov
out
fidivrs
mov
and
mov
scas
outsb
mov
fwait
dec
sbb
daa
xlat
aaa
fsubrp
push
in
jp
or
sarb
sahf
mov
push
insb
xor
xor
js
popa
jg
hlt
nop
mov
xchg
fucomi
stc
icebp
xchg
xor
outsb
lods
fsts
xchg
scas
dec
jp
movsl
mov
add
mov
aam
cmpsb
in
sub
push
push
data16
lcall
rcrb
mov
sbb
inc
sbb
insl
dec
cmpsb
sbb
jb
mov
fcomip
mov
mov
pop
cmp
fs
pop
mov
les
add
decl
ret
shll
and
int
inc
mov
mov
loopne
pop
loopne
cmp
sar
adc
pop
aas
xchg
cs
pop
lret
loopne
xor
jp
fisubl
xor
scas
xor
adc
sbb
lds
pop
int
pop
add
mov
lahf
nop
mov
and
dec
aas
sbb
and
test
lds
dec
cmpsl
shll
dec
mov
test
scas
mov
aas
pop
sbb
clc
push
in
ljmp
call
fstpt
xlat
jne
fucomi
mov
subl
lcall
loopne
ror
mov
jp
bound
push
xchg
dec
xchg
je
scas
loop
jmp
into
pop
mov
xor
stc
rol
dec
lods
xchg
xchg
add
outsb
shll
das
mov
into
cmpb
add
xor
push
not
lds
mov
popf
cltd
cmp
xchg
mov
loop
mov
cmp
sbb
test
push
cs
das
mov
add
cwtl
mov
and
fstp
mov
fisubrl
adc
mov
push
fbstp
outsb
movsl
pop
mov
loopne
bound
sbb
sub
add
sbb
decl
lret
pushf
xchg
pop
icebp
aad
insl
push
jo
fxch
cli
pop
xor
push
lods
cld
imul
negl
or
dec
shr
push
test
push
mov
dec
lret
stos
rclb
mov
clc
cmpsb
inc
lea
scas
dec
mov
push
std
mov
cmpsl
jne
fsubl
adc
xor
inc
push
lods
sarb
out
dec
sbb
int3
testl
push
lock
mov
mov
out
cmp
aas
lock
xchg
lock
mov
stos
sbb
test
mov
imul
outsl
ss
sub
das
clc
jbe
jge
stos
frstor
fs
ljmp
xchg
arpl
rcll
mov
dec
sbb
push
inc
jmp
je
and
ret
mov
sti
fsubr
cmp
test
wrmsr
imul
or
lock
ljmp
mov
in
lods
arpl
add
sub
mov
push
mov
arpl
in
add
mov
subb
dec
lahf
sbb
jg
daa
hlt
or
gs
push
test
pop
mov
mov
inc
bound
mov
int
loope
sti
sub
frstor
in
jno
out
push
cwtl
fwait
mov
mov
xor
pop
xor
add
pop
add
pop
andl
or
xor
xlat
cld
stos
or
cwtl
dec
xchg
xor
adc
int3
and
clc
mov
imull
jb
ja
dec
push
dec
icebp
test
shr
data16
sub
xor
imul
stos
pop
outsl
adc
xchg
lods
out
inc
pusha
pusha
adc
mov
in
sub
push
enter
repnz
movsb
loope
xor
cli
cmpsb
js
sub
pop
mov
fwait
xchg
jmp
clc
pop
mov
and
push
xor
rol
call
push
jns
inc
xchg
mov
or
das
js
cwtl
movsl
jb
sti
adc
enter
pop
lret
jne
push
aam
loop
sub
mov
push
das
dec
sbb
mov
mov
clc
cmp
push
mov
inc
lock
int3
int3
dec
hlt
inc
cmp
inc
popa
mov
loop
jge
push
mov
add
addb
dec
jp
ljmp
cmc
loop
repz
stos
lods
je
xorl
lock
cmp
test
insl
sahf
adc
ss
js
push
pop
push
jne
lods
xchg
mov
push
dec
add
out
lcall
mov
and
hlt
push
adc
mov
movsl
dec
mov
stos
imul
xorb
lock
push
pop
mov
cmp
clc
xor
stos
in
inc
mov
jmp
add
dec
into
test
dec
sub
cs
pop
ss
xchg
repz
jno
nop
lret
shl
mov
jb
mov
or
jns
jb
xchg
push
xchg
aam
cmp
sub
aas
xor
leave
mov
mov
mov
test
mov
mov
sub
inc
xchg
std
pop
stc
xorl
call
pop
sbb
test
xchg
insb
inc
daa
std
dec
jmp
lods
rcrl
cmp
cmc
dec
pop
ljmp
sub
rorb
pushf
aad
mov
popf
hlt
mov
mov
or
push
or
mov
push
cmp
mov
pop
add
jns
test
sbb
cmc
pop
bound
dec
cmp
sahf
sahf
sahf
shlb
sub
dec
jp
mov
mov
pop
inc
cmc
subb
loopne
ljmp
iret
fcomp
mov
inc
loop
dec
push
sub
mov
and
mov
fsubl
sub
pop
cmp
mov
xchg
cmp
sar
inc
ss
andb
es
mov
rcll
mov
cmp
push
ss
mov
adc
cmp
xor
aad
scas
jle
outsl
rorb
leave
cwtl
adc
ret
addr16
nop
inc
mov
std
outsl
add
pop
add
sub
insb
jle
mov
mov
sbb
and
outsb
xchg
repnz
push
cld
or
or
mov
xchg
cld
dec
test
int
sbb
adc
adc
jne
shlb
pop
testb
inc
mov
pop
in
xbegin
imull
mov
loop
mov
cmp
fs
xchg
cmp
outsl
push
lods
js
sbb
add
adc
aad
sub
push
std
out
push
cli
sub
add
add
sbb
inc
pop
sti
icebp
sub
loope
cmp
pop
or
xchg
sub
outsl
imul
push
and
cmp
push
adc
jge
ret
xlat
sbb
inc
scas
push
ljmp
xor
insl
cld
jp
jle
adc
daa
jecxz
cwtl
js
pop
mov
bound
mov
int3
push
xchg
mov
aam
mov
mov
lock
mov
cmpsb
aaa
pop
jbe
shl
rcll
jecxz
pop
push
addl
sub
daa
insb
popf
inc
inc
jl
and
rcrl
pop
sbb
std
jg
out
rcrb
mov
cmp
hlt
aad
mov
sbb
hlt
out
sbb
adc
adc
mov
push
add
mov
sbb
xchg
lahf
lcall
cld
repnz
and
jbe
dec
into
inc
pop
sbb
cld
xor
add
cs
inc
sub
push
lods
jge
mov
clc
cmp
sbb
inc
icebp
or
int3
add
and
divb
mov
das
push
fisubrs
dec
ss
mov
mov
and
and
lods
sub
pushf
add
and
mov
jb
lret
imul
pop
jle
adc
inc
repnz
dec
inc
ja
jecxz
dec
mov
mov
inc
outsl
jg
rclb
scas
outsl
clc
pop
inc
dec
pop
mov
mulb
ljmp
xor
pop
pop
cmc
xchg
sub
lcall
xchg
push
adc
mov
rcrl
mov
out
xlat
push
aad
sub
and
pop
clc
jg
je
add
fcmove
pusha
daa
xchg
repz
sbbl
pop
xchg
sbb
jl
clc
sbb
and
mov
jo
push
add
jns
jne
mov
outsb
sbb
mov
inc
cmp
out
pop
inc
shrl
xor
loopne
test
lret
int3
xor
cmpsl
xor
mov
xor
sub
add
and
daa
xlat
jl
insb
test
push
adc
test
cmp
out
xchg
test
iret
out
xor
pop
or
mov
and
fcomip
cmp
test
cmp
jno
pop
cs
xor
lods
jle
ljmp
add
lret
push
insb
mov
xor
scas
push
and
push
mov
lds
and
iret
xchg
push
ret
sbb
or
out
push
lods
add
jb
rcrb
and
cld
arpl
incl
leave
cmp
call
inc
push
pushf
mov
scas
pop
jne
adc
dec
cli
daa
test
popf
mov
xchg
mov
hlt
inc
pop
inc
gs
add
mov
cmp
push
jg
inc
inc
sti
mov
fidivrs
fcoml
adcb
xchg
vcmppd
xchg
popf
shl
push
rcrb
jne
js
jo
sbb
dec
sbb
fimuls
insl
sbb
or
mov
mov
sub
addr16
sbb
push
xchg
mov
cwtl
mov
xchg
fmulp
fisttpl
imul
dec
mov
icebp
push
adc
xchg
into
jnp
pushf
pop
push
sub
aaa
dec
testl
ret
adc
cli
xorb
lret
into
incl
cmp
inc
mov
into
add
mov
and
jl
sbb
add
add
add
jg
xor
pop
cmp
dec
pop
aad
cmp
jge,pn
jle
sbb
stc
repnz
pop
adc
push
cmp
or
pop
sbb
dec
aas
dec
mov
mov
ds
mov
and
push
fldl
cmp
mov
cli
jmp
cmpb
fildll
pusha
add
lds
dec
add
cltd
push
sbb
and
pop
push
movsl
bound
mov
jno
xlat
scas
sub
or
and
fimull
mov
mov
xchg
das
and
outsl
test
xor
nop
push
sbb
loope
lret
movsl
mov
shl
fbstp
aam
cltd
hlt
xchg
jo
jnp
cmp
hlt
xor
cltd
in
int3
mov
fbstp
and
add
dec
das
push
out
lcall
loope
mov
jne
mov
std
adcl
add
or
mov
scas
push
pop
in
in
std
mov
sbb
and
les
xor
mov
pushf
bnd
push
and
jbe
cs
outsl
mov
and
or
loop
js
pop
cli
out
mov
stos
push
daa
lret
shrb
ja
stos
and
jne
imul
fdivr
push
mov
dec
xor
int
push
ja
out
mov
fiadds
ds
out
xlat
les
jno
movsb
sahf
pop
loope
scas
mov
dec
clc
scas
orl
push
sbb
cmp
or
mov
pop
sbb
sub
loope
outsl
call
popf
pop
mov
shll
lahf
dec
sbb
cmpsb
imul
in
insb
or
mov
jae
clc
clc
fisttps
sub
xor
js
mov
sbb
or
push
and
stc
popf
push
inc
cltd
sub
cmp
arpl
adc
mov
sbb
sub
or
mov
mov
and
cs
clc
aas
pop
sar
inc
xor
in
lcall
mov
insl
inc
xchg
jecxz,pt
pop
pop
adc
add
ss
inc
xchg
es
xor
js
out
ja
xchg
xor
scas
inc
adc
sbb
and
leave
lock
loope
and
outsb
into
ret
or
loope
mov
mov
push
cs
mov
sti
pop
mov
or
nop
mov
push
popa
clc
addl
push
xchg
xchg
sbb
ret
decb
sarb
pop
jp
leave
sbb
xchg
xor
adc
jnp
mov
fsubrs
sub
lea
jecxz
mov
xchg
pushf
outsl
cli
dec
add
cmpsb
pop
add
data16
add
ja
inc
mov
decl
cltd
dec
dec
and
mov
adc
pop
hlt
jne
mov
out
pop
adc
insl
sahf
dec
add
inc
fistpll
jmp
lock
jle
les
and
inc
pop
add
push
loop
mov
cmovl
lock
cltd
repz
outsl
jno
jns
test
sbb
dec
cmp
repz
mov
ss
cmp
adc
add
cmp
incl
test
pop
sbbl
stos
scas
loopne
dec
push
xchg
divl
cmc
fstpt
push
sbb
lret
and
mov
cmp
insb
pop
sbb
aad
inc
repz
or
iret
jge
shrl
arpl
mov
enter
lahf
pop
jl
dec
js
aam
push
ja
aam
scas
movsl
mov
dec
sbb
rorl
push
iret
dec
test
push
xorl
or
mov
cli
adc
subl
insb
and
aad
adc
xchg
jns
push
xchg
adc
adc
clc
loopne
mov
xor
push
xor
loopne
cltd
imul
xor
push
icebp
dec
lret
push
or
testb
adc
lds
rol
pusha
pusha
pusha
jbe
bound
ror
sbb
inc
mov
or
fsubr
call
lods
ja
dec
lods
stc
incl
mov
adc
pop
jmp
js
adc
cs
cltd
cmpsl
mov
fs
lods
hlt
sahf
xor
and
mov
mov
sbb
cmpsl
mov
lcall
mov
xor
mov
bound
pop
xor
jge
and
imul
hlt
scas
xchg
push
out
jl
push
outsl
sub
in
frstor
sub
jmp
pusha
push
mov
cs
xor
and
xchg
cmp
mov
ficoms
inc
cmp
mov
cmp
incl
ficoms
ja
push
repnz
dec
js
adc
or
pop
subb
ja
les
mov
filds
pop
pop
dec
xor
ds
ds
adc
pop
add
adc
sbb
xchg
bound
mov
ret
or
in
mov
inc
and
adc
shlb
sbb
add
cmc
sbb
adc
inc
inc
aad
mov
cmp
cli
jl
scas
rcrb
jbe
fimuls
les
and
bound
xlat
mov
and
in
fwait
xchg
aas
pop
xchg
mov
lods
scas
ret
push
sbb
sbbb
push
int
and
movsl
push
ret
fnstenv
les
call
xor
mov
sbb
lret
dec
fiaddl
push
sahf
adcl
movsb
leave
push
dec
mov
clc
add
mov
shll
add
mov
insb
dec
inc
incl
daa
jecxz
out
pushf
fsubs
cmp
pushf
frstor
mov
mov
xchg
and
add
pop
sbb
and
pusha
mov
lock
addr16
mov
jp
loopne
out
mov
jne
push
pop
dec
or
fidivrs
jbe
iret
aad
pop
rclb
xchg
sbb
push
cmc
divl
mov
or
mov
ja
ret
test
and
cmp
mov
push
into
lcall
sbb
xchg
ljmp
fimull
cmp
jnp
mov
lea
shl
outsl
cmp
insl
jecxz
int
pop
add
xchg
aad
cmc
cmp
std
pop
jle
mov
add
movsb
sahf
scas
mov
cs
cmc
mov
ds
adc
rolb
pop
fstps
cwtl
cmp
add
xlat
lret
adc
xor
imul
adc
cwtl
jl
clc
or
cmp
sub
test
lcall
sbb
sbb
xorl
cmpb
dec
xchg
mov
mov
filds
xlat
repz
mov
or
or
and
inc
push
or
mov
bound
ljmp
jecxz
dec
pop
loop
push
dec
push
loop
or
test
stos
ficoml
push
dec
mov
out
sbb
pop
icebp
pushf
jbe
jbe
repnz
inc
sub
mov
inc
inc
rolb
pop
loope
hlt
ds
jns
ljmp
scas
cmp
dec
psubw
mov
sbb
xchg
ja
sub
lock
ret
mov
xchg
cld
mov
faddl
push
ret
mov
xchg
incb
cmp
add
jg
xor
test
gs
fwait
mov
orb
imul
adc
or
cwtl
pop
add
mov
nop
fisttps
push
mov
rclb
sub
imul
test
sub
ja
dec
adc
inc
popf
jne
out
xchg
cmp
pushl
insb
in
push
mov
outsl
push
in
mov
mov
fisttpll
push
loope
das
mov
jl
imul
scas
jle
inc
push
adc
pop
pop
inc
mov
push
or
mov
jne
pop
sbb
stos
jno
clc
dec
loop
cli
sbb
shlb
je
add
xor
fwait
dec
or
cmp
aas
dec
cld
pop
in
sub
shll
test
clc
addb
testl
mov
dec
cmp
push
ret
adc
out
add
cmp
pop
jne
stos
icebp
pop
loopne
fisubs
jecxz
into
cmp
and
push
out
enter
xchg
adc
or
gs
mov
inc
fcomps
test
mov
jmp
pop
js
xor
or
jg
sbb
cmp
sub
test
out
dec
add
and
push
or
xchg
cld
imul
mov
imul
sti
sub
mov
jo
add
aas
adc
jo
stos
push
movsl
mov
mov
call
loopne
lret
xor
mulb
or
rclb
inc
cmp
cli
ficompl
ss
mov
loopne
in
cmp
adc
out
syscall
fstps
loope
loopne
out
push
and
mov
cmp
orl
vhsubpd
stos
pushf
pop
cmp
cli
pop
push
and
lods
jnp
call
out
xlat
inc
and
jnp
and
in
pushf
cmp
lods
or
test
jge
sub
adc
ret
inc
lahf
or
cmp
jnp
scas
jbe
je
out
jmp
ret
add
shll
xchg
aam
sub
cmp
or
mov
scas
cmp
clc
mov
outsl
jo
mov
xchg
sub
push
int3
and
push
jp
inc
or
cmp
mov
popa
add
push
push
mov
clc
push
subb
push
mov
xchg
mov
inc
pop
push
icebp
and
clc
clc
xchg
stc
and
sbb
pop
fdivrl
incb
pushf
test
lock
jnp
jg
adc
jne
mov
js
addb
cmp
rcrb
fisttpll
add
sbb
xor
hlt
dec
jmp
or
adc
and
pushl
imul
cmp
pop
jp
out
cmp
cmp
repz
push
push
lock
push
movb
cmp
or
push
inc
sub
repnz
pop
or
loop
jl
add
and
icebp
dec
jecxz
mov
inc
xor
popf
ret
pop
mov
mov
mov
addl
inc
sub
lods
ja
ficoml
pop
out
inc
int
mov
cli
hlt
fxch
aaa
xor
cld
call
cli
sub
push
std
loopne
mov
ja
mov
out
mov
stos
jg
ljmp
iret
js
sub
push
adc
pop
and
sbb
std
iret
ret
insl
lods
std
pop
cltd
pop
sbb
rcrb
and
mov
aaa
cmp
stos
add
mov
test
adc
aad
push
mov
push
fldl
loope
add
popa
mov
inc
pop
sbb
xor
mov
push
jns
test
mov
push
loop
push
xor
cs
arpl
push
leave
add
pop
icebp
aaa
jne
push
push
cltd
repnz
mull
sbb
cmp
movsl
ljmp
mov
out
jp
mov
scas
pop
clc
jp
sub
mov
xor
and
mov
pop
ljmp
lcall
loope
sub
test
mov
scas
sub
inc
jecxz
inc
int3
stc
pop
call
pop
scas
push
inc
pop
hlt
cmp
loopne
out
and
fisttpl
sar
push
movmskps
and
mov
rcll
mov
aad
daa
fwait
adc
inc
inc
xlat
xchg
mov
sbb
pop
sti
pop
jge
or
dec
out
add
cmpsb
add
sub
jge
sbb
cmp
cmpsl
pushf
movb
lret
or
scas
cmp
or
std
sbb
ret
ret
mov
inc
jecxz
jl
push
pop
hlt
jbe
cmc
push
push
into
inc
mov
stos
cmpsb
mov
jg
shll
icebp
xor
aam
mov
loop
mov
int3
jo
pop
pop
daa
sbb
add
fdivrl
add
addl
mov
add
lret
xlat
in
add
ss
mov
leave
and
test
jne
sub
push
mov
push
dec
mov
xchg
hlt
cmp
jo
push
lds
mov
fcomps
push
cmpsl
xor
fcomi
int
daa
xchg
mov
sti
imul
rorb
test
cmp
daa
pusha
or
mov
daa
mov
pop
ljmp
xchg
int3
cli
cs
sbb
or
mov
pop
nop
sahf
sbb
sbb
test
adc
dec
mov
dec
push
inc
fisttpl
pop
cmp
je
or
aad
inc
inc
push
pop
mov
aad
mov
pusha
and
mov
fcompl
add
mov
mov
xlat
mov
sbb
sub
jmp
jl
insl
aam
pop
adc
test
add
mov
sbb
dec
mov
pop
xchg
adc
jmp
idiv
leave
xchg
scas
bound
push
test
mov
push
mov
loop
add
out
sub
xor
movsl
pop
cmpsb
out
xchg
fnstsw
inc
sub
roll
inc
xchg
add
mov
xchg
push
cs
andl
xchg
xchg
imul
loopne
mov
into
mov
addl
aas
dec
mov
test
pop
cmc
pop
pop
jmp
mov
adc
lret
mov
or
push
pop
add
pop
mov
dec
or
mov
hlt
incl
xchg
push
mov
nop
lock
jnp
push
fistl
fidivrs
cwtl
dec
movsb
hlt
jmp
ss
rcr
push
xor
dec
pop
adc
mov
iret
or
pop
lock
ror
xchg
shrl
icebp
adc
inc
insw
dec
inc
andb
jg
lahf
mov
or
sbb
mov
sbb
leave
fisttpl
push
loopne
fcmovb
dec
pop
and
xor
out
sub
lcall
xchg
jno
sti
pop
jecxz
les
push
inc
pop
cmp
or
jg
xor
sarl
pop
in
mov
mov
pop
cmp
jecxz
loopne
rcr
ror
and
fnstenv
test
mov
fs
test
sbb
add
pop
ret
pop
call
mov
push
outsl
xchg
in
inc
aam
mov
pop
xor
mov
ljmp
sub
mov
xchg
popl
pop
mov
fisubrl
enter
xchg
cmc
jg
data16
pop
fsubs
xchg
and
outsb
and
dec
fisubrl
cmp
cmpsl
xlat
repnz
imul
fucomip
lds
lea
movsl
inc
push
xchg
aad
aas
or
sbb
rolb
mov
mov
cmpsb
and
mov
loop
xchg
jge
jns
out
out
xchg
arpl
jle
mov
mov
pop
dec
cmp
push
les
inc
pop
sbb
xor
jecxz
rolb
push
cs
shlb
adc
jge
sti
inc
xchg
or
lcall
push
clc
pop
clc
fidivrl
movsl
push
add
cmpsb
cwtl
imul
sahf
push
stos
and
mov
and
insl
xchg
dec
clc
pop
mov
dec
xor
out
push
add
push
insl
push
call
ret
cmp
add
cmp
jecxz
lods
jae
shll
scas
jmp
jp
push
push
es
js
test
pop
incl
xchg
add
nop
mov
lods
add
mov
jnp
mov
in
jmp
mov
cld
wbinvd
test
into
xor
popa
aam
adc
fisubrl
lret
jb
imul
out
jecxz
cmp
jo
sti
adc
push
shlb
lcall
and
lcall
xor
adc
sbb
ljmp
push
sub
pushl
in
pop
jge
stos
xchg
stos
test
or
sti
stc
jno
push
pusha
fiadds
pop
in
mov
dec
cmp
add
sbb
sub
jo
sbb
bound
pop
push
add
push
loopne
fisttps
xor
incl
mov
ja
jbe
mov
outsb
or
dec
adcb
push
sub
push
daa
pushf
fs
aad
adc
dec
popa
jbe
mov
inc
mov
out
mov
lock
xchg
jo
or
ja
outsb
add
cld
adcl
xor
aaa
popa
add
xor
test
sub
into
mov
or
dec
dec
inc
sub
mov
xor
lahf
icebp
jmp
ret
sti
loop
pusha
mov
dec
call
push
mov
push
xor
pushl
pop
inc
push
dec
inc
dec
adc
push
loop
call
pop
mov
jmp
xchg
adc
push
gs
cmpsb
push
adc
cwtl
jmp
fstpl
adc
leave
clc
jno
scas
fisubs
into
jle
xchg
and
pusha
movsb
dec
jmp
dec
ret
gs
mov
sbb
and
movsl
push
sbb
call
test
pusha
add
cmp
mov
pop
cld
cmp
test
inc
xor
add
mov
dec
clc
adc
orl
and
mov
ret
pop
jae
xchg
xor
stos
push
popf
add
cmp
stc
fldt
cmc
cltd
cmpsl
xor
dec
pop
mov
mov
js
mov
dec
xchg
notl
icebp
out
add
test
mov
jae
les
lahf
ficoml
test
xor
inc
pushf
jg
aaa
and
and
fisubs
jg,pn
sar
fistps
je
lods
mov
adc
repz
std
ja
test
outsl
popa
push
and
push
mov
xchg
push
push
scas
outsb
negl
fidivrl
fucomp
fs
dec
sarl
ljmp
cmp
xor
sarl
add
jmp
ljmp
jae
icebp
push
jae
jecxz
jns
mov
aam
sar
aad
push
adc
shl
nop
xor
ficoms
cmpsb
push
ds
std
call
jp
jmp
or
or
loopne
dec
cltd
lcall
xor
stc
decl
popa
pop
arpl
imul
pop
xchg
adc
cmc
sbb
mov
cld
cmpsl
mov
adc
lahf
and
jg
int3
inc
add
pop
mov
pop
inc
cmp
or
jg
and
scas
int3
pop
gs
inc
call
mov
mov
insl
rol
call
cmp
sbb
pop
mov
fdivl
mov
mov
out
cmp
ffreep
jg
mov
es
cld
mov
pop
cmp
sub
aaa
add
ja
and
lock
scas
fcoml
inc
scas
jl
jo
jl
ret
push
xor
rcrl
loop
adc
enter
inc
xchg
inc
int
push
cmpsb
adc
jle
jb
ret
fidivrl
imul
inc
xor
xchg
or
push
insb
pop
mov
and
stos
mov
mov
ss
ret
xor
add
andb
notl
dec
daa
insl
push
pop
into
es
rcrb
bnd
iret
and
dec
mov
sub
sbb
stc
and
push
cli
hlt
aam
mov
lock
loopne
loope
andl
das
xchg
push
push
sub
inc
sbb
outsl
pop
pop
pusha
sarb
subb
pop
xchg
movsl
out
push
add
inc
dec
test
xchg
mov
dec
adc
out
sbb
in
test
popa
sub
shll
mov
push
push
inc
call
xadd
mov
or
and
fldt
sub
ds
cmpsl
fidivl
mov
clc
ljmp
jp
mov
and
adc
pusha
push
and
cli
jp
in
sub
mov
mov
xchg
test
xor
imul
loopne
sbb
or
lds
pusha
gs
jp
mov
cmpl
xor
outsb
mov
mov
js
cs
cs
lock
mov
mov
outsb
mov
sarb
gs
inc
and
stos
sbbb
cli
jb
push
out
cli
cmpsl
nop
and
insb
movsl
xchg
mov
movsb
xchg
mov
push
filds
jmp
test
mov
aaa
and
ss
pop
mov
stc
cmc
icebp
mov
cmpsb
push
sub
add
insb
jl
out
pop
add
push
fdivrp
add
add
jae
cmc
mov
aas
or
pop
sbb
push
pop
add
pop
lcall
xor
xlat
dec
sub
adc
ljmp
jle
mov
add
add
sarb
adc
push
inc
add
loop
sbb
and
jno
aam
mov
jmp
cmpsl
test
subb
jb
adc
int3
ret
inc
push
out
or
pop
cs
das
add
or
fistps
call
jp
fistpl
dec
push
aam
adc
sbbl
mov
shrl
jl
mov
cmpb
xchg
mov
rcll
dec
aaa
mov
xor
or
cmp
jecxz
dec
loopne
aam
mov
std
aam
mov
in
jns
and
inc
out
mov
dec
mov
push
inc
cs
inc
pop
add
loopne
nop
push
add
sbb
int3
iret
div
int
push
hlt
subb
fistl
std
ret
mov
cmpsb
add
adc
push
or
stc
pop
jg
pusha
gs
fucomp
fsubs
and
or
test
xchg
push
jle
icebp
mov
mov
std
jbe
aad
stc
imul
sbb
clc
sbb
call
mov
xchg
mov
test
outsl
and
cmp
enter
fstpl
or
popf
or
call
hlt
sub
mulb
adc
sub
add
fwait
loope
dec
dec
movsb
jg
lock
test
push
xor
sbb
test
mov
test
add
out
adc
incl
mov
mov
mov
ficoml
lea
sbb
mov
add
xor
mov
rcll
and
jnp
mov
je
mov
decb
imul
and
and
jge
lret
loop
stc
jl
jno
pop
pop
inc
inc
jp
pop
inc
add
jmp
adc
nop
sub
cmpsl
hlt
mov
imul
lods
push
pop
xor
mov
mov
mov
pop
pop
dec
ret
or
mov
and
push
xchg
arpl
add
call
dec
xchg
push
movsl
inc
cmp
scas
or
cwtl
push
je
dec
cwtl
fldcw
decb
inc
ss
fadds
subl
cld
push
push
cli
push
call
roll
fsubrs
pop
ljmp
mov
arpl
imul
imul
xchg
scas
clc
sti
lods
xchg
ss
lds
sbb
les
xor
xor
aaa
xorl
sub
cli
jecxz
pop
push
insb
pop
outsl
daa
push
add
cmp
gs
je
or
cmp
add
scas
ret
aas
mov
and
mov
mov
sbb
dec
add
inc
in
push
icebp
bound
and
or
mov
scas
cmp
movb
outsl
xor
push
rolb
movsl
add
mov
cltd
and
xchg
adc
cmp
cmp
or
cmc
jb
mov
scas
mov
push
loope
dec
xor
mov
lret
inc
mov
ljmp
jle
jbe
add
add
movsl
mov
mov
dec
inc
add
lahf
mov
sbb
mov
subb
inc
add
xchg
ljmp
aas
jno
movsb
mov
push
test
in
mov
mov
xchg
dec
nop
mov
dec
shr
jmp
mov
aas
fstpl
mov
pop
outsb
add
das
inc
xor
pusha
loop
lods
pop
pushl
and
ljmp
ficomps
sbb
insb
xor
test
pop
pusha
lock
cmp
mov
mov
lcall
fidivl
sub
fiaddl
jle
jnp
jbe,pt
jo
sbb
push
ret
jae
jmp
in
test
adc
and
push
pop
stos
fmul
loope
sub
adc
sub
xor
icebp
stos
shlb
pushf
inc
not
push
xor
pop
gs
dec
into
mov
hlt
repz
xor
mov
cmpb
cmp
or
ret
lcall
dec
lret
jmp
sub
dec
xchg
in
mov
or
out
push
mov
cmp
pusha
sti
mov
cmp
jp
xor
or
fsts
add
fucomi
jl
je
stos
sbb
fsubs
movsb
mov
divl
loop
test
and
int3
mov
jg
int3
xchg
inc
mov
mov
mov
lret
es
jecxz
xchg
jo
inc
pop
daa
test
xor
inc
out
mov
stos
cwtl
subl
sbb
out
push
jb
jo
test
scas
ret
xchg
fwait
jg
push
ficomps
pop
lods
cli
outsl
jle
inc
lret
repnz
mov
and
mov
sbb
fwait
xchg
scas
movsw
mov
lcall
mov
loope
dec
ss
mul
rcrl
test
or
sbb
pop
pop
push
jg
das
dec
cmp
ss
and
push
cld
pop
cld
outsl
test
mov
xor
cmp
pop
fldl
or
jge
test
jmp
jno
jl
in
sbb
mov
xchg
jmp
dec
xlat
add
inc
jg
fwait
add
add
movsl
sbb
ja
into
movsb
xor
call
mov
mov
arpl
iret
jmp
jmp
mov
addb
xchg
repz
mov
dec
repz
inc
cmp
xchg
xor
cmp
xchg
add
inc
dec
xor
jo
in
das
cmp
mov
push
jge
loope
aas
dec
add
mov
inc
bound
pop
pop
jne
repnz
jnp
rcrl
push
addl
scas
jmp
roll
inc
push
xchg
gs
pop
dec
scas
push
xchg
or
sub
sbb
pusha
mov
pusha
pop
sub
cmp
jbe
pop
xlat
insl
jbe
sub
cltd
sbb
sbb
adc
xor
es
mov
pop
mov
arpl
push
mov
mov
ljmp
mov
hlt
mov
rol
xchg
inc
sbb
stc
or
jns
sbb
jge
movsl
jb
jecxz
notb
imul
lods
mov
xor
xor
incl
mov
sub
aas
test
xchg
ds
ret
inc
adc
jmp
mov
cli
inc
xchg
push
out
imul
add
pusha
push
dec
pop
pop
outsb
add
and
ja
shl
sbb
or
dec
or
lock
push
sub
mov
sbb
dec
inc
imul
push
xchg
ror
sub
fcomps
das
clc
mov
bound
fsubrp
xchg
jo
lods
lea
push
cmpsl
mov
push
fcomip
push
dec
jge
test
imul
xor
imul
push
pop
lea
xor
pop
aam
push
aaa
cli
mov
inc
scas
sahf
mov
pop
cld
adc
mov
cmp
or
adc
lds
cmp
cmp
jne
push
rep
xor
jne
and
addl
mov
inc
aad
mov
in
adcb
and
cmc
lahf
fnstcw
push
push
sub
or
pop
and
enter
add
jbe
bound
out
jge
ret
gs
xchg
jno
pushf
out
jp
and
adc
mov
dec
cmc
mov
mov
inc
mov
mov
rcr
cmp
mov
mov
filds
iret
nop
outsb
adc
adc
stos
xchg
and
mov
mov
jl
push
loopne
insb
stc
out
mov
dec
add
incl
mov
cmp
jmp
vcvtps2pd
sub
pop
ljmp
and
mov
cmp
lock
jg
fistps
arpl
inc
scas
push
jae
sbb
pop
jmp
lahf
jmp
cmpsl
fs
xor
jns
sub
mov
push
inc
inc
jmp
mov
sub
mov
sub
outsb
or
shrb
adc
xchg
mov
test
lock
aas
mov
jge
cs
nop
std
pop
push
xor
fisttps
lock
test
mov
xlat
cs
pop
mov
out
cmc
pop
sbb
sub
adc
loopne
add
inc
cwtl
inc
lcall
or
mov
xlat
adc
testl
cmp
jae
repnz
out
pop
outsb
mov
out
mov
arpl
push
xor
cmpsl
add
pop
or
movsb
or
push
int3
sbb
fstl
mov
pusha
and
adc
fsin
cmp
leave
mov
mov
xor
call
andl
pop
arpl
mov
mov
mov
testb
insl
dec
adc
jg
loopne
js
and
push
mov
loopne
jb
mov
inc
dec
fdivrp
daa
stos
push
shrl
movsb
stos
or
add
mov
inc
sbb
and
sahf
into
pop
adc
orl
loop
mov
inc
jmp
in
mov
or
or
push
and
mov
testl
das
daa
mov
add
mov
pop
dec
push
mov
or
aad
sub
lds
dec
mov
and
or
push
or
popa
mov
sti
mov
mov
xor
popa
sbb
stc
outsl
in
mov
ficompl
add
xchg
xorl
push
add
mov
test
into
adc
xchg
add
add
xchg
jnp
jmp
dec
or
rcrb
xchg
cmp
sub
orl
dec
fimull
out
push
andl
xchg
cmpsb
out
and
push
std
xorb
lock
icebp
push
push
push
mov
cld
pop
sbb
xlat
lock
loop
ss
mov
sub
mov
cmpsl
push
or
inc
mov
cld
pop
leave
hlt
sub
mov
dec
lcall
xor
xor
pusha
or
pop
pop
repz
cwtl
hlt
pop
xchg
pop
mov
mov
add
pushl
add
clc
cmpsl
mov
pop
mov
xor
jno
sbb
pop
lahf
sti
add
add
add
sub
or
fisttpl
jg
mov
ret
push
in
add
adc
les
out
ficomps
call
cmp
lret
bound
cmp
aaa
add
into
test
add
out
clc
fneni(8087
mov
sbb
sub
xor
push
icebp
test
add
adcb
dec
and
jecxz
and
je
mov
adc
push
jmp
add
out
addr16
fwait
outsl
push
xor
mov
dec
loop
pop
ljmp
jge
xchg
add
pop
les
push
fidivl
jbe
mov
lahf
mov
add
fisubrl
fimuls
pop
add
or
into
lea
push
jl
fmul
jle
and
sub
add
add
add
insb
insb
adc
pop
add
fwait
out
inc
jg
lcall
mov
jbe
lret
movb
and
mov
jne
fs
mov
add
jle
inc
mov
jge
and
imul
adc
ret
das
xor
aad
in
stos
xchg
fisttpl
psrad
add
adc
mov
fs
xor
test
add
add
fcomip
add
mov
adc
cmp
std
scas
cmp
lock
add
and
sub
or
add
popa
add
add
add
ljmp
enter
mov
dec
xorb
pop
mov
jae
mov
ret
jg
cmpsl
out
fnsave
stos
jb
frstor
incb
ret
add
push
insb
sub
add
popf
mov
ret
adc
and
in
xchg
or
movl
adc
pop
lock
mov
insl
adc
lcall
add
outsl
xchg
addb
mov
jle
fldt
adc
push
xlat
out
or
add
push
pushl
inc
xor
sub
add
outsb
loopne
addl
or
sub
jl
lret
jmp
xchg
stos
push
add
add
ja
jbe
and
lret
and
insl
mov
ret
stos
mov
sub
clc
loope
cmpb
movsb
add
sarl
inc
movsb
jge
inc
mov
cmp
test
push
adc
sbb
idiv
and
pop
divl
xchg
out
or
jg
add
add
lcall
xor
or
mov
jnp
loopne
roll
add
mov
pop
cmp
icebp
mov
leave
sub
add
lcall
cld
fmuls
popf
outsb
jno
xor
push
sub
rcrl
push
hlt
nop
call
push
testb
jg
add
std
dec
add
xor
adc
add
xor
nop
xor
test
ficoml
xchg
fiadds
outsl
pop
loopne
and
jmp
cld
sbb
fsts
in
dec
shrl
xor
fbld
xor
out
insb
dec
and
inc
rcl
sub
inc
push
in
test
test
sub
dec
cld
jne
add
jg
fs
loopne
ret
loope
jg
mov
and
gs
pop
addl
push
mov
int3
rcr
inc
int
add
push
test
jo
repz
dec
sar
push
jnp,pt
pop
ss
nop
fstpl
stos
icebp
add
and
jg
inc
or
pop
outsl
loope
mov
fiaddl
shrl
js,pn
jg
add
not
inc
das
inc
and
sbb
scas
and
imul
pop
push
xor
xor
add
pop
icebp
push
push
rclb
fsubs
mov
pusha
inc
imul
mov
lret
sbb
aad
scas
push
shl
jg
inc
jo
rol
std
xor
hlt
incl
dec
dec
mov
int
pushl
jmp
jg
mov
ljmp
jnp
push
add
insb
push
loopne
dec
ljmp
ret
jnp
or
inc
pop
pusha
lock
jbe
pop
cmp
add
je
mov
push
nop
dec
xor
outsl
inc
jmp
cmc
adc
add
ss
inc
inc
xor
dec
test
lock
xchg
sub
lcall
loop
or
inc
repnz
sbb
fists
adc
out
popa
mov
div
fsubrs
js
out
rorb
xor
add
pop
and
stos
sbb
add
inc
lcall
lret
and
test
lods
add
cmpb
loopne
add
mov
je
nop
smsw
lahf
ljmp
outsb
sbb
mov
cmp
gs
jmp
cld
js
pop
cli
dec
jb
cmpb
add
cbtw
inc
clc
dec
or
mov
push
es
sbb
sub
loope
test
fisubs
lret
rcl
mov
loope
jne
rcrb
or
lahf
fdivp
mov
pushf
dec
pop
cmpsb
test
xor
dec
jmp
daa
jb
sar
pushl
fcoml
popa
push
int
pushl
cmp
push
inc
or
add
mov
xchg
add
pop
rcrb
movsb
mov
cmc
add
jmp
ja
adc
and
dec
inc
cmp
ljmp
fs
mov
ja
popl
adc
iret
call
add
add
decb
mov
cmp
xchg
inc
adc
inc
subb
aad
sbb
jmp
je
push
pop
xor
cld
out
inc
jne
pop
fiadds
pop
iret
std
adcl
jle
mov
jge
test
arpl
rcr
js
and
daa
add
out
push
add
push
test
and
and
ljmp
js
hlt
pop
pusha
out
sbb
jmp
mov
jbe
cld
add
enter
test
adc
pop
jl
mov
cmpsb
add
and
pushl
xchg
sbb
jge
xchg
jg
ret
mov
fs
insl
mov
lock
mov
movsl
inc
cld
push
scas
scas
dec
inc
es
add
cmpsb
cmpsl
test
cmp
push
push
cmpsb
pop
dec
mov
or
adc
mov
test
pop
mov
aas
fs
fucom
mov
popa
enter
ret
test
push
mov
lret
aam
clc
pushf
sti
mov
cmc
lcall
ja
enter
insb
add
xchg
xchg
jmp
and
pop
jge
push
inc
mov
ljmp
mov
fstpl
mov
add
adc
ljmp
adc
mulb
cmp
jnp
fdiv
incl
dec
and
jl
jp
cltd
sbb
jecxz
lea
scas
nop
sbb
mov
xorb
mov
or
les
mov
lods
xlat
add
movsb
pushl
xor
cmp
arpl
lods
jle
dec
std
inc
mov
jo
mov
inc
fs
rcll
in
or
mov
aaa
sub
das
inc
push
sbb
jno
icebp
cltd
sbb
ljmp
cmp
cmp
sub
sub
adc
fmuls
lods
xchg
jp
movsl
aaa
incl
push
mov
decl
xchg
cwtl
jo
mov
add
inc
popa
mov
jno
adc
and
incl
mov
add
les
les
mov
mov
aam
addb
or
pop
in
lcall
jmp
cmp
in
ljmp
lcall
lock
dec
dec
sbb
pushl
mov
or
jbe
popf
and
andb
jno
mov
sti
sbb
adcb
cmpsl
ljmp
mov
mov
xchg
out
js
pop
int3
loopne
xchg
add
or
fwait
pusha
cltd
xchg
cmp
or
cmp
pop
xor
inc
cmpb
pop
sub
adc
add
dec
das
clc
aas
cmp
sub
push
cmpsb
mov
in
inc
lods
fcomip
fbld
sbb
pop
nop
aas
add
repz
notb
jl
stos
push
jns
mov
ret
add
in
pop
fstl
in
rorb
cmp
test
add
cmpsl
mov
clc
mov
cmpsb
das
push
js
mov
test
sbb
or
mov
sub
decl
jo
push
or
push
adc
add
lahf
jno
aam
xchg
fs
add
decl
xor
pop
insb
push
adc
xchg
ds
mov
lcall
push
insb
xchg
pop
add
or
popf
test
add
sub
test
sbbl
rcr
pmaxub
lcall
xor
inc
mov
daa
mov
ret
add
cmp
sbb
in
xchg
pop
insb
mov
pop
push
dec
sub
or
push
mov
or
into
sbb
scas
clc
jne
jecxz
sub
cs
test
je
xor
clc
popf
push
enter
sub
jb
pusha
js
jns
les
mov
add
dec
add
adc
lock
fistps
in
stos
sub
lods
mov
pop
sub
fwait
scas
mov
adc
jbe
push
mov
mov
mov
stc
fldl
jo
aas
mov
pushl
aam
push
or
xorb
leave
roll
xchg
xorb
pop
sbb
mov
into
and
pop
in
lret
cmp
cs
call
xchg
and
sti
pop
addl
adc
call
std
call
inc
mov
pop
je
popa
and
jle
aad
inc
push
and
mov
and
shll
jle
push
mov
lret
data16
push
jg
xchg
ficomps
rorb
push
adc
ja
lods
mov
jecxz
incb
stos
inc
loop
add
xor
inc
adc
jbe
push
repnz
loopne
ljmp
sbb
addb
jno
sub
sbb
mov
jg
dec
sub
aad
push
repnz
fwait
sub
sbb
cmpsl
pop
add
pushl
or
xchg
mov
and
loope
in
jno
stc
add
mov
or
push
idiv
movb
add
fs
outsl
jg
sub
fmulp
iret
ljmp
aad
and
movsb
test
decl
add
rorl
pop
dec
lds
or
adc
adc
push
jl
lock
loopne
adc
add
mov
dec
ja
add
sub
aaa
std
jg
mov
loop
dec
sbb
cli
pop
xor
add
mov
gs
pop
and
iret
add
addb
mov
add
pop
push
icebp
jmp
pop
and
xchg
rorb
dec
mov
adc
dec
lock
mov
cmp
lret
add
or
cld
mov
adc
lahf
call
push
js
add
inc
frstor
mov
push
jmp
add
adc
ss
and
mov
into
gs
mov
adc
decl
push
bound
stos
add
cmp
cmc
push
gs
jge
cmp
jns
push
fsubr
movsl
ja
dec
loop
cld
pop
cli
push
pop
add
push
xchg
xor
dec
jg
movsb
pop
scas
fmuls
cmp
aas
or
add
sbb
jbe
lods
jmp
or
test
lock
and
mov
test
or
stos
mov
xor
cmpsb
mov
sarl
mov
jmp
outsb
mov
aaa
xorb
rorb
add
sbbl
jecxz
ja
ror
mov
mov
pop
inc
sbb
mov
out
lock
add
add
test
jnp
add
dec
scas
stos
sbb
shrb
xchg
test
sbb
dec
mov
xor
xor
inc
adc
js
nop
pop
pop
cmp
das
les
sub
filds
inc
clc
gs
outsb
inc
sbb
pop
rcl
add
movsl
cmp
popa
addl
cmp
and
pop
inc
push
aaa
ljmp
add
jmp
or
pop
mov
jl
jl
or
or
lcall
xchg
pop
push
dec
scas
inc
pop
inc
jg
insb
insl
les
dec
ljmp
pop
rolb
fwait
aaa
add
inc
push
xor
mov
mov
jb
push
test
adc
push
push
insb
loope,pn
cmp
mov
sarl
mov
sbb
push
pop
sub
sbb
in
jl
add
push
dec
add
call
adc
cld
data16
shr
jnp
xor
xchg
inc
push
bound
jle
incl
jg
pop
pop
fcoml
cmp
int
xlat
call
les
inc
jae
into
jns
inc
sbbb
or
or
and
fucompp
xchg
and
xor
mov
mov
test
outsb
push
sub
add
ret
sbbb
jecxz
incl
js
hlt
inc
lds
mov
pop
fadd
or
test
push
inc
nop
pop
jge
gs
sbb
mov
sub
mov
push
test
push
or
addb
dec
jb
xor
in
push
or
rolb
push
insb
adc
jmp
repnz
in
imull
push
or
mov
loope
fstpl
sub
adc
push
or
sub
movsb
clc
add
in
call
loope
popa
fdivrs
mov
and
add
dec
xor
stos
add
jg
shrb
ss
ficoms
sbb
and
and
cli
lcall
ljmp
or
sbb
lods
pusha
pop
push
pop
mov
cmc
jbe
xchg
xchg
sub
xor
lret
std
test
mov
aad
inc
ss
nop
inc
xlat
sbb
pusha
push
push
and
test
gs
cld
mov
xor
fwait
jo
testb
jg
push
mov
pusha
sbb
jno
adc
das
push
pushf
insl
ds
mov
je
inc
mov
cmp
push
pop
scas
int3
add
cmc
add
sub
dec
mov
dec
testl
mov
fwait
jb
pop
ljmp
sub
insb
loop
fcomip
or
popa
mov
in
pop
pop
popa
ss
jecxz
mov
cld
hlt
incl
repnz
int3
ds
jne
leave
daa
arpl
mov
push
push
cmp
lcall
idivb
sbb
mov
roll
ret
cs
lock
push
inc
cwtl
movl
jge
pop
sub
ret
xor
cli
pop
pop
fdivrs
push
mov
into
insb
dec
mov
adc
mov
pop
sahf
out
insb
mov
and
bound
ret
pushl
incl
add
arpl
pop
adc
outsb
fadds
sbb
push
test
mov
clc
add
fisubl
inc
push
aam
arpl
push
adc
xchg
dec
mov
and
cmp
mov
mov
aam
push
add
mov
out
int
or
mov
cmpb
gs
lcall
in
jp
push
and
ret
xchg
xchg
mov
add
dec
sub
jno
loop
mov
repz
mov
pusha
inc
inc
jle
sub
jg
lock
inc
shlb
xorl
xor
or
test
add
fs
nop
ljmp
pop
jg
xor
inc
dec
pop
and
inc
call
cli
aam
call
xor
jl
bound
dec
lods
push
adc
scas
into
cs
cmp
outsl
stos
inc
push
in
mov
call
shl
stos
loope
push
fldl
pusha
inc
nop
push
test
orl
cmpsb
xorb
push
daa
inc
cwtl
lods
add
jmp
mov
movsl
mov
sbb
je
fcomps
jmp
jmp
test
mull
pop
sbb
inc
ljmp
popa
push
jne
mov
dec
or
loop
sbb
sbb
aaa
pop
inc
pop
jp
or
mov
xor
testb
sub
imulb
in
rclb
or
jge
fcmovb
repnz
mov
push
ret
sbb
mov
ds
sbb
stos
jg
in
in
jno
stos
cltd
test
add
sahf
and
add
rorl
insl
pop
mov
sahf
add
shlb
inc
ret
adcl
fs
lcall
jmp
lea
sahf
pop
loop
iret
dec
pop
inc
dec
mov
cmp
std
or
ljmp
cli
push
inc
fldcw
arpl
xor
ljmp
jl
cmp
and
pop
push
inc
in
cli
sbb
mov
adcb
push
nop
dec
and
push
mov
sarb
cmp
add
jl
and
add
stos
and
lods
icebp
scas
push
push
or
inc
and
xchg
pushl
andl
push
out
rcr
repnz
push
jl
or
mov
lcall
push
cld
mov
cld
cld
shll
outsb
xor
adc
vmaxsd
lods
sbb
push
sub
pop
push
popa
scas
pop
cwtl
xor
movsb
sub
lret
roll
mov
and
jbe
mov
mov
incb
add
sub
ret
stc
cmp
adc
add
xchg
add
and
add
cli
hlt
fwait
imul
and
icebp
test
add
outsl
paddsb
rcl
lcall
sbb
fildll
mov
add
les
loope
subb
sbb
enter
jg
jp
push
jmp
test
jle
lcall
repnz
dec
jecxz
add
jl
fbld
add
pusha
push
pop
adc
loopne
cwtl
andl
test
ds
push
jns
imul
push
xor
inc
outsl
fidivs
fisttpl
in
bound
jne
jg
xor
cmpsl
sbb
movb
mov
std
cli
jg
enter
mov
mov
pushf
test
dec
hlt
clc
or
pushf
push
jne
xchg
lahf
cmp
fdivrs
insb
stos
push
or
aad
xor
add
iret
dec
incl
or
int3
lods
mov
lods
and
test
icebp
xor
sbb
push
xchg
or
std
add
jo
test
jo
aad
push
cmp
icebp
incl
or
xchg
pop
add
pop
iret
cmp
push
mov
cmp
hlt
mov
xorb
add
mov
ja
cmpsl
ds
add
nop
inc
xor
jbe
jmp
stos
add
cmpsb
sbb
inc
dec
pop
and
add
inc
pushl
test
push
pop
mov
bound
popf
nop
mov
pop
xchg
push
mov
bound
bound
add
pop
lds
and
jmp
pop
push
pop
jp
inc
insb
adc
mov
cmp
adc
mov
shlb
xor
adc
inc
fnstenv
or
add
adc
pop
pop
jbe
repnz
ljmp
sub
fcomps
in
loopne
das
and
daa
push
or
bound
js
xor
mov
mov
loopne
dec
add
xlat
sub
outsb
pop
push
in
lods
nop
cmp
push
jp
and
dec
jl
cmp
cmp
clc
outsl
mov
cmp
add
mov
and
sarl
imul
and
push
push
rol
in
sub
call
lret
loope
stc
sahf
mov
and
shrl
insl
lds
outsb
lock
outsb
insl
add
xor
mov
sbb
mov
sbb
insb
add
ror
enter
jo
scas
ds
cmp
inc
dec
pushf
call
add
rcr
jmp
push
sbb
test
sbb
icebp
cli
jg
movsb
test
add
mov
sarb
scas
dec
and
verr
cmpsb
sarl
mov
mov
pop
and
enter
mov
adc
inc
pop
ds
or
fmuls
adc
cmp
xor
jae
dec
jnp
fcmovbe
loope
lahf
add
cmp
push
rorl
cli
daa
dec
je
xchg
or
daa
mov
fiaddl
clc
mov
push
or
pop
inc
sahf
das
enter
mov
fimuls
std
inc
pop
aaa
shll
cld
push
mov
xchg
rcrb
nop
lret
imul
pushf
adc
loope
mov
ds
mov
jg
cmp
push
cmovns
out
shlb
add
shlb
pop
add
outsl
xchg
leave
dec
and
aas
lret
sbb
jmp
jo
cwtl
sbb
lret
xlat
add
sbb
mov
jae
loop
cmp
gs
incl
add
inc
fdivp
jno
mov
mov
mov
leave
xchg
pop
loope
enter
sub
rorb
fnsave
call
and
xor
dec
sub
ret
lahf
pop
mov
sbb
mov
mov
adc
dec
jge
dec
lea
push
add
add
ret
add
sub
or
push
cltd
xorl
xor
fstpt
mov
push
pop
mov
sub
adcl
test
pop
std
pushl
insb
movb
pushf
insb
sbb
cmp
jnp
and
cmp
add
mov
fistl
cmpsb
push
add
rcrl
mov
rcrb
inc
das
out
imul
add
push
add
xor
jg
cmp
push
movsb
mov
pop
sub
mov
add
mov
pop
mov
mov
fiaddl
std
push
or
das
ss
ret
push
shlb
sbb
iret
pusha
and
lea
out
push
je
mov
xor
pop
and
push
dec
lds
popf
sbb
mov
sbb
push
dec
or
aam
cwtl
add
ljmp
jbe
or
add
scas
movsl
shlb
lock
dec
roll
aad
or
push
mov
aas
les
jge
rcr
cs
sbb
leave
fs
call
push
inc
jno
pop
mov
in
xor
inc
push
pop
leave
mov
push
insl
cmp
mov
out
cmp
enter
xchg
cmp
pop
hlt
outsl
mov
fldt
test
test
pop
xchg
push
and
jl
rolb
js
push
pop
xchg
cmp
rcr
cmp
lret
jecxz
dec
jecxz
lahf
pop
out
sub
xchg
add
sub
fisubs
add
fdivrs
dec
lods
dec
lcall
out
aam
out
jmp
jae
aaa
sbb
adc
sbb
int
pop
fisubs
enter
dec
mov
bswap
mov
or
pop
mov
mov
shrb
add
cld
stos
push
add
bound
in
mov
out
pop
scas
mov
xchg
dec
clc
fwait
or
adc
pop
add
icebp
xchg
gs
lods
iret
nop
push
mov
inc
mov
fmul
and
unpcklps
leave
sub
inc
lock
decl
xchg
mov
pop
nop
lock
es
testb
insl
cmp
subb
dec
ret
or
jg
mov
push
xchg
adcb
pop
pop
shrl
push
or
mov
aaa
cmpsb
fwait
xchg
decl
pushf
leave
das
pop
or
leave
mov
pushl
jmp
jge
add
in
std
ljmp
adc
sbb
imul
mov
pushf
fcompl
push
loopne
cmc
mov
sub
jp
rcrb
and
mov
in
push
jmp
mov
es
lods
push
rcrb
jg
shll
hlt
sbb
push
mov
pop
ret
inc
inc
call
mov
jae
es
call
add
push
jg
fiadds
mov
mov
push
add
outsb
pop
lods
loopne
jne
xchg
and
inc
pushf
pop
stos
mov
test
scas
daa
mov
fcompl
pop
bswap
jbe
jg
inc
scas
mov
or
ljmp
jae
xchg
cmp
call
and
int
mov
in
push
dec
jnp
es
je
mov
sbb
jp
test
mov
and
sub
outsb
fwait
push
addr16
call
or
pop
push
outsb
notb
mov
fsubrp
push
or
into
dec
out
sbb
in
fdivrp
mov
lods
int
cmp
fwait
pop
dec
and
xor
mov
aad
and
test
pop
scas
cmp
js
mov
iret
cmp
fdivl
sub
ljmp
fstps
xchg
pop
cmp
pushf
jnp
lcall
ss
jg
add
data16
lods
into
shrl
shl
je
mov
sub
mov
mov
push
pop
cltd
sbb
mov
sub
pop
imul
pushf
std
shl
dec
inc
jl
dec
inc
sub
jg
mov
mov
and
adc
lods
out
lods
fsubp
xor
divb
loope
sbb
mov
stc
inc
insb
fidivrs
gs
sbb
cmpb
lods
dec
lods
je
mov
popf
out
incl
into
popa
data16
inc
jnp
stc
mov
mov
push
sarb
pop
inc
or
mov
and
cmp
call
test
add
shlb
clc
jge
lret
cld
mov
cli
or
pop
cs
pop
ljmp
add
and
sbb
mov
in
aam
mov
inc
aas
mov
sub
push
rcrb
hlt
xor
arpl
movsl
fdivr
mov
mov
ret
sub
mov
xchg
fsubrs
aad
xor
jo
mov
es
ljmp
add
dec
xchg
ss
sub
fcompl
or
sub
mov
loopne
pop
fdivrs
inc
add
cli
push
xchg
pop
enter
adcl
pop
fwait
or
addr16
inc
xor
mov
mov
ret
push
nop
sbb
jmp
xchg
add
lods
aaa
push
jp
popa
mov
sub
and
sub
lods
fwait
outsb
or
subl
lcall
repnz
push
enter
fwait
push
sbb
testb
rolb
xchg
push
jae
pop
pop
push
shlb
inc
sub
jge
subb
mov
or
add
lods
push
or
in
inc
adc
xchg
xor
jb
and
es
jg
jecxz
hlt
xchg
icebp
lret
push
inc
jbe
mov
into
mov
mov
lock
dec
rcll
xor
push
dec
test
pop
mov
aaa
mov
jle
jnp
jle
lods
movb
mov
out
pop
pop
ret
outsl
fimuls
push
enter
mov
mov
test
ss
sub
clc
pop
fwait
shrb
inc
mov
loop
mov
test
and
xchg
dec
mov
popf
mov
lods
aas
xor
dec
test
in
cwtl
xor
lea
int3
fsubrl
roll
hlt
dec
leave
fidivl
inc
fdivrs
adc
jg
or
pop
mov
dec
sbb
xor
inc
inc
dec
or
xchg
lock
cmpsl
add
aad
loopne
bound
pop
mov
mov
fsubl
push
ret
xchg
cmpsl
iret
inc
sbb
fisttps
push
sub
jnp
mov
dec
loope
dec
mov
dec
xchg
inc
mov
add
aad
cli
call
pushf
cmp
xor
stos
insl
loopne
xchg
cmp
xchg
addr16
fimuls
ret
int
cwtl
outsl
js
ds
outsb
adc
and
mov
push
rcl
push
clc
insb
dec
or
add
fsubl
sub
cmp
pop
and
das
les
inc
into
scas
lahf
lods
pop
shlb
add
inc
lds
pop
push
mov
mov
es
cmp
and
aaa
or
lahf
testb
pop
lret
add
test
daa
call
add
xor
pop
jae
cmp
xchg
lock
dec
stos
int
and
rclb
rorl
aam
sbb
out
inc
out
xchg
mov
mov
add
pushf
mov
mov
insb
fsubrs
mov
pop
lret
add
in
inc
dec
loopne
imul
in
and
insl
jl
xchg
imulb
push
xchg
push
ds
dec
call
scas
test
and
sbb
or
fdivs
mov
pop
mov
ja
movsb
push
xchg
pop
out
mov
mov
push
movsl
xor
scas
pop
hlt
fstpl
rorb
movl
xor
test
idivb
xor
cwtl
mov
dec
flds
jnp
repz
int
jg
push
push
pop
xchg
les
pusha
push
mov
push
mov
add
sub
mov
jmp
inc
sub
aad
loope,pn
dec
popa
hlt
mov
div
dec
or
loopne
mov
imulb
loopne
inc
push
and
es
loopne
loopne
pushf
inc
adc
add
cmp
sub
mov
or
sbb
clc
std
ss
hlt
out
movsb
xor
hlt
mov
jle
ret
dec
mov
adc
les
add
lods
or
push
push
xor
cmc
stos
push
and
pop
fiaddl
xchg
mov
xor
fdivrs
das
loope
sub
pusha
dec
ljmp
push
mov
mov
aad
add
add
call
je
lret
jo
bnd
mov
cmp
mov
rcr
mov
sub
cmpsb
sbb
mov
fiadds
fcoms
aaa
inc
les
and
add
ret
test
adc
push
and
push
mov
lods
out
ja
or
ds
sub
sti
mov
mov
aas
out
aas
mov
mov
sbb
add
lock
dec
sbb
jo
and
xor
hlt
xchg
bnd
imul
lock
push
cmpsl
or
arpl
fwait
mov
daa
cmp
inc
or
push
mov
and
mov
lock
loop
sbb
or
push
add
mov
push
mov
push
in
pop
scas
enter
fdivs
rcll
in
or
jb
in
dec
xor
scas
dec
add
push
lds
std
push
mov
cli
xor
add
and
fadds
inc
cmp
fadds
lret
in
fimuls
pop
jmp
sahf
nop
add
pop
mov
leave
stos
es
mov
or
inc
pop
nop
jecxz
xchg
bound
mov
fs
andb
loopne
or
add
add
or
iret
cmc
outsl
js
add
fs
adcb
push
add
fbld
sub
pushl
testb
add
pop
inc
cwtl
fidivl
sbb
loope
xchg
push
dec
sub
ljmp
std
xlat
sub
das
pop
pop
and
clc
mov
xchg
xor
in
ljmp
jg
in
push
pop
jmp
adc
loop
add
jo
mov
das
cmpsb
add
imul
popa
adc
jl
sub
jnp
adc
sub
xchg
ja
mov
mov
fbstp
addl
popa
or
pop
cmpsl
mov
sti
sub
aas
andb
das
movsl
gs
cmp
or
outsb
push
int3
mov
xchg
jb
sbb
shr
cmpsb
pushf
sub
ljmp
adc
adc
pusha
jae
fisttps
mov
pop
inc
add
adc
rol
inc
out
aam
sbb
hlt
inc
ret
adc
push
or
inc
mov
inc
pop
pop
mov
aam
sti
dec
int
mov
lcall
ds
cmp
add
or
mov
adc
sbb
or
pop
xchg
inc
xchg
add
cmp
mov
hlt
aam
cld
cmpsb
mov
icebp
fs
xchg
dec
scas
scas
sbb
aam
mov
ljmp
jae
adc
stos
mov
rclb
sarl
cmpsl
lcall
jne
sbb
push
das
js
insb
add
push
pop
push
sub
pop
mov
jnp
pop
shlb
iret
mov
mov
inc
and
xchg
mov
ljmp
lock
pushl
inc
incl
call
lock
add
push
repnz
sti
fldt
fwait
std
and
popa
out
sbb
lret
sub
mov
movsl
stos
enter
lahf
inc
xor
mov
and
push
and
mov
cld
and
int
loopne
mov
movsl
jmp
inc
dec
xor
fadds
call
int3
or
insb
or
decl
lods
inc
decl
andb
fwait
mov
pop
sbb
les
add
or
pop
adc
dec
xor
hlt
push
push
incl
cld
jle
insl
xor
mov
or
xchg
sub
cmp
pop
lock
jle
jmp
mov
jnp
jmp
pusha
call
icebp
and
inc
jmp
ret
pop
dec
addr16
push
pop
xlat
add
clc
lahf
lcall
jmp
add
jmp
daa
lods
mov
xor
inc
mov
cmp
cmp
pop
push
add
scas
xor
jge
call
push
cmp
mov
adc
push
incl
pusha
test
jbe
inc
pop
jmp
mov
or
flds
add
cld
inc
sub
shrb
std
enter
adc
jg
mov
xor
pop
push
sti
add
mov
outsb
sbbl
push
sbb
jl
jae,pn
jnp
addb
imul
divb
inc
enter
inc
sbb
and
mov
mov
inc
shl
sbb
cmp
in
push
jge
sub
mov
adc
or
cmpsl
ljmp
decl
jg
das
xor
xlat
ds
popf
outsb
push
xor
jl
cmpsl
in
call
or
jl
add
mov
or
sti
mov
sbbl
cs
xchg
push
enter
outsb
push
fdivs
mov
call
xor
out
or
cld
out
mov
imul
xchg
popa
mov
mov
cwtl
jb
out
jns
iret
mov
icebp
fildll
enter
in
cltd
loop
jl
sbb
ja
fimuls
sub
lcall
jg
ficoml
xor
adc
cmpsl
data16
scas
lods
cmp
ljmp
mov
xchg
lcall
mov
gs
lret
mov
int3
mov
adc
decl
nop
cmp
inc
inc
xchg
pop
sub
pop
cmp
cmp
inc
cmp
inc
cltd
fmuls
and
mov
gs
add
les
clc
out
add
or
decl
add
add
xacquire
or
inc
lret
push
dec
add
inc
movsl
add
pop
sbb
stos
mov
inc
jmp
mov
push
out
jmp
sub
push
repnz
push
aam
outsl
pop
data16
sete
xchg
or
aaa
and
nopl
jmp
fsubl
mov
aad
rcrl
clc
adc
repnz
add
repnz
xor
add
pusha
ss
add
add
jo
and
xor
push
shrl
adc
push
mov
loopne
adc
into
fistps
adcb
hlt
jp
cmp
call
cmp
mov
sub
rolb
inc
nop
adc
aad
test
xchg
loop
jae
rsm
andl
xor
push
sbb
xchg
xchg
sub
dec
sub
add
mov
mov
jecxz
push
ja
or
aam
test
out
dec
lock
imul
clc
cs
jp
push
fcoms
add
pop
mov
ret
rcrl
fsubrs
test
push
mov
xchg
add
push
gs
ds
movsb
mov
add
add
or
mov
jg
lock
push
sub
add
sbb
outsl
mov
or
shlb
add
cmp
test
pop
jg
add
xor
lea
push
sbb
cwtl
pop
mov
mov
inc
sbb
out
bswap
outsl
sbb
call
xlat
decl
jns
mov
pop
repnz
jp
cmp
out
fdivrs
mov
sub
shll
pushl
adc
cmpsl
cmpsl
mov
fwait
dec
sbb
int
aaa
inc
fisubrl
jne
pop
or
test
jne
or
mov
mov
xor
cmp
and
inc
mov
mov
mov
test
decb
subl
movsb
mov
ret
orb
inc
inc
ljmp
clc
mov
repz
aas
xchg
push
mov
xchg
push
rorl
call
test
add
cmp
xchg
add
jns
test
push
les
ror
loop
add
adc
push
and
cmpsl
dec
aad
sbb
mov
loope
lahf
fiadds
inc
loopne
dec
loope
mov
outsl
fstpl
sub
icebp
cltd
or
pop
xor
scas
xchg
clc
stos
ficoml
mov
and
stos
lock
aaa
test
fiadds
scas
int
stos
andl
imul
nop
fs
push
inc
rcr
icebp
xchg
ret
in
push
cmp
adc
push
popa
push
xor
or
aas
cmpl
sub
test
dec
hlt
fsts
cld
add
lock
rcl
in
pop
jl
pusha
jl
lds
js
dec
sub
jp
clc
fwait
sub
out
data16
pop
dec
ja
cmpsb
xchg
adc
push
jmp
inc
popfw
das
inc
xchg
icebp
incl
shlb
push
cmp
lods
mov
pusha
lcall
fldl
dec
push
cld
inc
mov
aam
inc
sbb
cli
stc
jb
xor
jo
loop
pop
lods
adc
push
lods
lret
ljmp
add
push
andb
pop
add
test
ljmp
outsb
adc
sbb
adc
sub
incl
lods
psubw
and
pop
xchg
into
sbb
jmp
popa
scas
xor
mov
imul
sbb
or
pop
mov
inc
xchg
pop
sub
or
mov
sbb
cwtl
sub
push
add
dec
pop
fbstp
jmp
mov
pop
xchg
or
sub
test
pushf
inc
mov
dec
xlat
les
dec
xor
ljmp
mov
roll
sbb
pushw
dec
mov
jo
sub
push
test
cmp
sbb
push
andl
pop
inc
es
imul
mov
insb
mov
pop
outsl
sbbb
mov
jbe
ljmp
cld
push
or
mov
lock
clc
pop
pushf
push
pop
std
lret
sub
jo
test
mov
xchg
pop
addr16
lods
push
std
jmp
adc
cltd
sbb
add
fstpl
loop
pop
test
and
fistpll
add
mov
xor
ljmp
pop
hlt
or
push
push
aam
fcmovnb
push
fdiv
arpl
dec
arpl
pop
test
push
mov
mov
xorb
adc
test
xor
mov
push
imull
mov
add
in
cld
add
pushf
pop
push
sub
cs
mov
in
dec
imul
loope
lahf
xor
decl
mov
rcll
pop
mov
pop
pop
inc
add
imul
sub
xchg
mov
sahf
push
dec
pusha
dec
shl
jg
dec
mov
xor
mov
or
lret
jle
es
push
into
jnp
xor
jg
testl
test
or
mov
inc
xchg
pop
mov
iret
mov
cld
pop
insb
fsubr
push
adc
cwtl
sbb
incl
jge
repnz
in
cmpsb
fstpl
test
xchg
or
dec
clc
lcall
pop
lods
dec
sub
push
jp
js
jg
sub
sub
adc
repz
movsl
dec
push
incb
loope
mov
pop
in
test
out
mov
push
fs
mov
cmc
cld
jmp
push
xor
in
dec
xor
scas
insb
adc
out
ret
ljmp
sbb
or
adc
sub
pop
lcall
sub
add
iret
mov
cwtl
push
jmp
push
xchg
and
lock
lds
jbe
clc
lcall
leave
shrb
out
mov
push
or
add
xchg
js
out
cmc
cmp
outsb
xchg
jmp
adc
negl
mov
out
xchg
shll
imul
pop
mov
cld
div
cmp
sbbb
nop
xorl
mov
jecxz
das
loopne
in
lcall
or
jp
inc
add
ret
inc
sub
aad
or
loope
mov
movsb
mov
lea
adc
jo
insl
mov
incl
mov
shll
lock
lahf
jne
xchg
jmp
inc
shlb
jo
lods
lret
push
aaa
rol
adc
xor
rclb
add
je
inc
cmp
ja
mov
movsl
fildl
jmp
dec
repnz
mov
sub
jmp
mov
push
mov
clc
lcall
add
and
cmp
mov
sbb
fstps
in
clc
in
incl
cwtl
ds
aam
insb
aaa
inc
fisubrl
jle
loopne
scas
mov
jp
fstl
add
adcl
push
lock
pop
xor
add
dec
pop
push
mov
out
js
mov
dec
push
pxor
incl
mov
imul
mov
pop
add
mov
cmp
sub
fidivrl
pop
xchg
lcall
add
or
pop
push
mov
clc
roll
jno
lock
jg
outsb
aad
in
push
jge
mov
push
aam
jl
push
dec
jb
push
das
out
fwait
cmp
js
int3
mov
cmp
sarl
incl
inc
out
and
mov
nop
mov
out
inc
push
add
call
ja
pop
dec
loop
cli
xchg
jno
mov
add
or
mov
cwtl
mov
ljmp
subb
mov
push
cmp
data16
inc
iret
inc
sti
call
test
mov
aas
add
hlt
adc
sub
xchg
push
shrl
push
repnz
pop
dec
sbbl
xchg
out
push
jg
out
jecxz
push
jb
xor
cmp
enter
lock
mov
push
pusha
push
xor
scas
hlt
mov
cmp
lods
mov
sarl
mov
rolb
mov
filds
insb
lcall
shll
xchg
or
cld
or
sub
jb
sub
adc
lea
mov
out
js
or
push
xchg
jge
adc
jae
and
mov
nop
cmc
pop
pop
inc
add
inc
sbb
std
lret
test
push
jg
jmp
and
fwait
lea
push
popf
mov
or
jp
jmp
add
xlat
and
sbbb
mov
orl
inc
or
cmp
cld
add
pop
or
std
add
dec
mov
mov
outsl
addb
call
cli
pop
cmp
in
jns
push
jbe
add
adc
fnstenv
or
push
mov
rcll
and
xor
jns
cltd
decl
cmpl
dec
aaa
pop
and
inc
or
test
pop
jle
ret
and
rcrb
xchg
and
test
testb
andl
out
xchg
sbb
push
loopne
jg
bound
adc
popa
aas
sub
jns
add
jne
cli
inc
sub
mov
fsts
lcall
or
lcall
repnz
cmpsl
aam
inc
clc
lock
shlb
cmp
aas
sub
and
push
xchg
or
arpl
stos
sub
add
sub
sub
mov
ss
icebp
adcb
or
rcrb
lcall
jg
fbstp
push
mov
add
or
inc
andl
lea
je
inc
or
notl
popf
add
repnz
out
pop
dec
lahf
dec
or
mov
fldenv
mov
data16
cmc
mov
xchg
lods
xchg
rcr
aaa
out
andl
dec
dec
out
inc
fwait
push
cmpsb
pusha
inc
cmp
clc
cld
incl
add
inc
mov
imul
add
movsb
dec
je
and
push
mov
add
pop
pushf
push
sbb
pop
scas
xchg
mov
inc
mov
push
rcrb
or
mov
call
mov
xlat
scas
cmp
ret
fisubs
lods
xlat
addps
sbb
pop
add
insb
in
rolb
mov
dec
lret
adc
inc
push
sti
ljmp
mov
push
pop
jge
mov
pop
cmc
push
jo
mov
mov
ret
add
outsb
add
xor
loopne
push
loopne
or
jp
sub
xor
push
mov
xchg
cmc
ja
rcl
in
fsts
nop
mov
out
mov
adc
insb
cltd
repnz
fdivr
xchg
cmpsl
mov
ret
imul
lcall
mov
pushf
ret
jno
shr
hlt
or
and
mov
pop
pusha
cmc
mov
inc
cmpsl
sbb
mov
cmp
jle
call
rcrb
sub
sbb
or
cld
ja
fcompl
int
inc
loop
mov
pop
clc
push
leave
in
call
mov
aaa
add
jbe
mov
mov
daa
or
clc
pop
les
jle
mov
scas
cli
sub
nop
test
sahf
mov
arpl
cmp
decl
push
ret
lahf
dec
jno
aas
pop
cs
lea
adc
fcomip
push
cli
and
sub
daa
adcl
fcmovu
les
leave
cmp
lods
repnz
les
cmp
mov
js
int3
adc
mov
ss
rorb
add
pop
mov
js
mov
mov
adc
stos
popa
nop
mov
popf
cmp
jmp
dec
rclb
fld
adc
push
add
fcmovnb
aaa
adc
pop
gs
test
and
dec
test
test
mov
push
pop
mov
pop
jp
test
out
mov
jp
call
mov
dec
imul
pop
ficoms
dec
les
pop
and
jg
sahf
repz
mov
stos
cld
dec
cli
mov
nop
xor
das
adc
sub
jnp
adc
pop
add
mov
loope
cmp
mov
cmp
clc
mov
loopne
cmp
inc
mov
pop
mov
adc
int3
popa
lods
aad
cmp
inc
sti
mov
mov
jg
mov
lock
lahf
scas
out
les
fwait
or
mov
es
dec
movsl
cmc
mov
add
sub
jae
call
jle
decl
out
testl
or
pusha
mov
sbb
vmovaps
clc
cmpsl
loopne
xchg
jnp
sub
push
jo
cwtl
mov
lcall
jp
push
fwait
jns
xchg
adc
loop
pop
ds
push
inc
push
clc
dec
pop
cmc
xchg
leave
and
pop
orb
xchg
or
fbstp
jb
repz
ret
mov
pop
or
scas
popl
inc
sub
or
mov
push
cmp
pop
outsl
clc
lcall
inc
bound
xlat
js
pop
and
scas
inc
icebp
lea
mov
out
call
xor
ret
xchg
lods
test
xor
mov
push
lret
cmc
stos
sub
push
repz
jg
incl
jp
aad
cwtl
pop
sarw
pop
adc
gs
mov
push
pop
mov
lret
pop
adc
fsubl
out
sub
inc
and
push
jle
and
incl
rol
fidivrs
jl
test
in
xorb
inc
and
sbb
icebp
or
int3
or
xchg
sub
js
push
mov
je
inc
jbe
and
cld
add
popf
popf
das
dec
inc
das
ss
movsb
sbb
pop
xor
call
mov
mov
fnstenv
pop
push
out
mov
xchg
cmc
jnp
push
mov
or
rol
lock
inc
push
xchg
repnz
decl
mov
negl
push
pop
xor
jo
fcoml
sar
mov
clc
lods
or
xor
lods
cwtl
daa
les
ljmp
dec
mov
mov
pop
push
popa
lret
scas
ljmp
dec
aad
stc
sub
mov
stc
jnp
jno
loopne
mov
mov
nop
push
dec
xchg
decb
daa
jg
test
cmp
punpckhbw
decl
and
xchg
pop
shr
jecxz
stos
out
aam
aaa
int
push
inc
or
or
out
xchg
popa
mov
sarl
pop
insl
inc
cmp
and
push
shll
mov
pusha
je
mov
or
incl
cld
lret
imul
mov
daa
rorl
mov
push
cld
xchg
add
cmp
test
cmp
sbb
loopne
sub
test
cmpsl
mov
jb
jmp
lahf
rclb
loop
sti
jmp
mov
sti
and
cmpsb
lock
ffree
xor
push
push
pop
out
mov
pop
es
xchg
mov
mov
sbb
add
cli
jbe
add
jb
cld
inc
xchg
mov
sti
ss
movsb
sahf
pop
lock
call
inc
movsb
adc
push
int3
pop
sbb
push
mov
out
mov
mov
cmpsl
std
and
cmc
les
mov
xchg
xor
shlb
ljmp
inc
in
int3
push
pop
into
pop
mov
cmpb
insl
sbb
inc
add
fcomi
mov
or
push
push
pop
mov
gs
mov
mov
outsb
pop
or
push
shll
mov
lea
fmuls
cld
icebp
mov
inc
arpl
add
cwtl
aaa
xchg
rorb
or
mov
pushf
push
insb
mov
xlat
jae
add
ljmp
ljmp
imul
das
add
dec
ficoml
mov
les
mov
mov
inc
cltd
mov
in
add
inc
out
out
fsubs
pop
cmp
push
pop
and
mov
push
mov
incl
mov
mov
leave
mov
hlt
push
jl
mov
out
out
dec
out
adc
and
aad
jmp
out
sbb
sbb
stc
pushl
mov
jg
push
sti
mov
xor
movsb
pop
dec
inc
fistpl
jns
xchg
xchg
mov
push
les
andb
iret
fs
js
std
lcall
stc
cmp
imul
cs
cmp
dec
add
cmpsl
jmp
sbb
xor
pop
insb
sbb
and
lock
fistps
loope
sahf
add
jp
dec
fs
subb
loopne
push
nop
mov
sarb
pop
and
lcall
movsl
in
nop
mov
cld
jne
add
movsl
scas
pushl
cs
bound
pop
cmc
jmp
lahf
hlt
ret
lret
daa
xchg
inc
push
jle
mov
les
decl
jle
sbb
mov
adc
fwait
adc
loopne
sub
jo
and
decl
dec
jmp
je
pop
xchg
imul
pop
mov
movsl
push
jbe
inc
lret
and
aaa
cwtl
popa
jno
hlt
xchg
jb
sti
mov
stos
sub
jbe
lahf
popf
cli
push
pop
sub
or
aam
inc
pop
scas
mov
mov
jmp
popa
fs
clc
incl
hlt
ljmp
mov
and
mov
cmc
adc
and
xchg
icebp
call
mov
insl
fs
loope
das
adc
dec
push
inc
stc
push
sbb
inc
jecxz
movsb
in
out
lock
xor
sti
pop
or
sbb
aam
pushf
test
out
int3
jecxz
test
inc
jmp
lock
sub
loop
test
pop
arpl
mov
dec
imul
jle
sahf
xor
pop
and
int
ljmp
loopne
movsl
inc
stc
iret
std
sbb
fbld
push
bnd
pop
rorl
push
rcll
in
push
inc
push
mov
cwtl
mov
pop
lcall
into
inc
jge
mov
movsb
mov
rolb
je
imul
pop
cld
cmc
test
icebp
xchg
cmpsb
push
jae
leave
std
loope
pop
mov
fs
mov
bound
aaa
ret
mov
cld
mov
add
int3
orb
mov
push
add
lcall
jecxz
inc
in
mov
hlt
jg
fbld
dec
test
sbb
inc
lcall
push
aam
jnp
imul
daa
ljmp
out
xor
loopw
mov
push
loope
lret
pop
cli
jg
popl
outsb
xchg
clc
int3
xchg
repnz
inc
jmp
je
sub
fcompl
idivl
lods
outsb
test
aad
sub
bound
pop
cmp
lock
mov
sar
sbb
fiadds
ficompl
lock
pop
cmp
lea
hlt
incl
cmp
ljmp
pushl
call
sbbl
pop
lret
cmp
stc
cmp
sti
clc
jmp
cs
or
lods
jbe
jmp
inc
cmp
jecxz
cmp
mov
js
xor
xchg
jmp
cs
mov
pop
mov
adc
loopne
decb
mov
pusha
loop
js
ret
out
jbe
mov
push
je
push
sub
outsb
mov
adc
add
stos
popf
leave
sbb
mov
data16
rcll
push
dec
mov
mov
xor
xchg
push
pop
frstor
out
stos
and
xchg
jmp
movsb
lods
push
shrl
bound
fwait
pop
inc
adc
push
adc
incl
or
mov
mov
repnz
cmp
outsb
movsl
push
jle
cmc
add
adc
mov
push
mov
adc
clc
lcall
fdivl
jmp
cld
or
dec
ljmp
mov
addl
mov
xchg
cmp
enter
jmp
les
or
lcall
stos
fcmovbe
jecxz
push
pop
imul
and
sbb
in
jo
xchg
adc
or
imul
push
cli
call
sbb
dec
sahf
xchg
mov
xchg
inc
sbb
repnz
test
push
jbe
mov
sbb
and
into
bound
shlb
dec
mov
pop
cld
js
mov
mov
lret
lret
adcb
pop
outsb
rolb
dec
call
mov
and
pop
push
pop
rcrb
sub
cwtl
imul
ljmp
jae
add
js
push
mov
jno
js
mov
popf
and
pop
lock
enter
pop
sbb
ret
jno
das
clc
push
or
cmp
inc
xor
scas
cli
push
lods
sub
fucomip
cmp
repz
mov
sub
jg
hlt
pop
movsb
imul
andb
in
xor
xchg
xor
out
stos
rolb
call
insb
xchg
pusha
lahf
jg
push
mov
xor
mov
jg
cwtl
icebp
mov
jmp
jnp
push
mov
xor
ds
ret
pop
mov
iret
incl
lds
loop
fiadds
jmp
add
or
movsb
iret
sub
mov
jg
mov
sahf
pushf
iret
xor
lret
mov
cmp
sbb
movsb
lds
rol
dec
out
aaa
cld
scas
arpl
mov
cmp
pop
push
lods
push
mov
hlt
inc
sub
clc
sarb
cmp
out
xchg
push
push
pop
xor
jl
rcl
fdivs
xor
scas
dec
cld
mov
xorb
and
cmp
ret
jg
push
jns
push
cli
xor
aam
data16
adc
xchg
lods
aam
inc
addr16
dec
jno
mov
xor
rcr
iret
or
jg
push
dec
bswap
in
inc
aam
sbb
and
scas
mov
sub
push
inc
lret
dec
out
mov
cmpsb
mov
cmp
ss
divb
aam
mov
add
aas
ret
or
popa
push
arpl
push
andl
or
pop
test
ja
popa
inc
dec
pop
ret
ret
sub
push
stos
cmp
mov
mov
xchg
pop
pusha
std
arpl
cmc
mov
das
mov
push
divb
mov
pushl
mov
fimull
mov
mov
sbb
test
clc
daa
addb
lahf
add
insl
jl
push
in
push
cld
inc
push
mov
aaa
xor
mov
adc
inc
call
jg
outsl
fsubrs
or
aad
xchg
mov
je
pop
dec
movsb
pushl
pop
orl
dec
or
loop
je
cli
inc
push
popf
sub
xlat
pop
outsb
aas
jo
ljmp
call
jge
movsb
stc
test
hlt
test
cmpsl
jmp
push
mov
dec
pop
fistpll
rcrl
je
adc
daa
imul
push
dec
repnz
leave
xchg
push
iret
adc
cmp
inc
sarb
push
and
adc
ret
mov
xlat
adc
adc
push
lcall
mov
rcrl
inc
xor
lret
test
pop
xchg
mov
fwait
sub
jo
add
in
test
mov
add
decb
or
inc
call
faddl
dec
pop
test
mov
aad
sbb
jle
pop
sub
adc
inc
sti
mov
aas
test
in
insl
iret
adc
icebp
jbe
pushl
pop
lcall
fdiv
inc
cmpsb
adc
push
int
pushl
push
pop
ficompl
leave
xor
popf
push
mov
fbld
hlt
loopne
rcrl
fbld
adc
fdivl
lea
fwait
test
jbe
sbb
lcall
pop
add
xor
pop
mov
sub
ljmp
jmp
repnz
loop
push
jae
mov
lock
push
mov
mov
jae
es
cld
dec
lret
sbb
dec
inc
sar
es
fwait
outsl
pop
mov
fsubrl
mov
imul
inc
scas
subb
pop
xchg
mov
inc
push
mov
cmp
push
sub
push
sbb
fucomip
add
std
inc
mov
paddb
xchg
mov
adc
jo
cwtl
xchg
pop
push
cmp
mov
lds
mov
into
mov
add
adc
std
xor
je
xchg
js
call
rclb
cmp
mov
pop
aam
scas
lods
ljmp
call
test
stc
lds
or
pop
cmp
jg
pushl
mov
mov
jp
imul
lcall
sub
mov
mov
jno
popa
and
mov
inc
mov
fwait
fwait
leave
lods
jbe
or
call
scas
nop
iret
mov
nop
mov
imul
mov
inc
clc
xor
ss
mov
iret
stos
sub
lea
adc
mov
incl
mov
mov
lods
movsb
cmpsb
out
lods
bound
movsb
mov
xchg
test
mov
xor
jp
popa
hlt
jnp
es
inc
pushf
mov
loop
push
sbb
mov
sahf
imul
unpckhps
notl
push
test
pop
hlt
mov
or
adc
ljmp
andl
ljmp
cmc
mov
mov
sbb
int
xor
out
divl
push
movsl
imull
hlt
pop
lcall
push
xchg
pop
pop
inc
imul
add
pop
cmc
or
mov
mov
mov
mov
loop
jg
ret
or
dec
jns
scas
decl
cli
push
sub
push
fistpl
push
sub
shrb
and
cmp
adc
adcb
mov
sub
dec
mov
sub
pop
inc
mov
jl
stos
sub
repz
xor
test
and
call
data16
push
lret
test
or
or
jp
stos
cmp
lea
mov
xor
mov
xor
cmp
je,pn
sbb
mov
mov
mov
jbe
mov
sahf
inc
dec
fimuls
bound
mov
inc
cmp
and
push
jb,pt
sbb
and
ss
std
mov
jb
in
jo
lds
jmp
test
jb
sub
sti
jg
in
pop
leave
jne
cs
rclb
decl
mov
loopne
ljmp
cli
rol
sbb
loope
fists
fiadds
sbb
mov
movsb
and
pop
sti
mov
mov
sub
testl
ficoml
jns
mov
cmp
pop
dec
jge
mov
dec
fildll
int3
inc
addr16
dec
nop
pop
xor
adc
lcall
or
xchg
mov
cmpb
or
pop
fnstsw
cmp
add
push
mov
in
testb
sbb
out
push
sar
ljmp
push
aas
addr16
es
lret
pop
cmc
insb
push
repz
mov
filds
xor
pop
dec
ljmp
mov
push
enter
inc
xor
and
shlb
hlt
arpl
mov
push
fcmovnbe
mov
clc
call
xchg
mov
and
mov
pop
sub
mov
sub
pop
clc
shlb
cli
sbb
fcoms
call
iret
mov
adc
jl
fwait
pop
xorl
dec
or
gs
icebp
fimull
mov
or
stos
scas
inc
add
xchg
push
enter
cmp
pop
andb
and
inc
cmp
mov
push
or
add
sti
ret
xchg
cwtl
push
mov
cld
mov
mov
jb
ss
inc
mov
sarl
add
mov
inc
mov
xchg
sbb
mov
cli
in
mov
fdivrl
int
or
or
mov
inc
push
test
cltd
fadds
mov
scas
sbb
pop
dec
sub
sub
sub
mov
jg
call
fidivs
aas
repz
ss
dec
sub
xor
add
dec
xlat
lds
icebp
js
je
dec
push
jbe
imul
in
push
addr16
pop
sub
or
xor
cli
lret
pop
idiv
xchg
push
and
wrmsr
xor
cmp
jne
jle
inc
daa
or
rcrb
in
mov
dec
add
xchg
jecxz
mov
sbb
jecxz
stos
or
mov
sub
cmp
shld
out
sub
idivl
aam
or
cmpsl
les
subb
xchg
jmp
call
negl
mov
pop
aad
cmp
and
or
mull
adc
sbb
imul
repnz
cmc
pop
add
test
push
dec
mov
mov
test
push
outsb
xchg
xchg
decl
stos
push
loop
in
into
cmp
out
xor
cld
mov
mov
jmp
cmp
add
clc
decl
inc
pop
or
xchg
nop
mov
adc
push
les
ftst
call
je
je
insl
rcrb
and
imul
dec
sub
cwtl
mov
cmpsl
mov
inc
aas
mov
push
fbstp
rcrb
outsb
aas
lret
and
out
mov
add
pop
cwtl
cmp
cltd
jns
int
cmc
mov
dec
out
sub
xorb
xor
mov
mov
decl
mov
jg
sbb
sub
lret
mov
popf
push
dec
jecxz
jmp
mov
push
aas
sub
loop
jp
lcall
cmp
cli
push
pushf
xchg
mov
mov
jbe
icebp
decl
gs
scas
push
push
mov
add
and
icebp
aad
push
jg
out
mov
sar
pop
jle
loopnew
and
cmpsb
inc
insl
xor
pop
leave
mov
fcom
or
filds
int
push
sbb
xor
out
push
scas
fistpll
cmp
or
std
jle
lahf
mov
jp
divl
mull
mov
callw
jmp
pavgb
insb
jne
repz
mov
push
sub
fistpll
insw
pop
xchg
mov
rcrb
rclb
cmp
and
xchg
inc
add
mov
push
cmp
jno
xor
mov
cmp
xor
pop
out
pop
mov
cli
ljmp
xchg
aaa
mov
aas
rolb
clc
mov
cmp
mov
inc
ret
jnp
push
mov
inc
adc
loopne
mov
xor
sbb
push
inc
mov
aam
add
ret
jmp
dec
fcoms
push
out
or
adc
add
inc
cmp
clc
fidivrs
jmp
push
push
push
pop
and
lock
inc
pop
es
test
adc
mov
movsb
loopne
cmp
cwtl
xchg
cmc
adc
pop
repnz
cmp
jg
mov
mov
aam
mov
adc
or
shrl
xor
in
sarb
xchg
inc
mov
call
add
add
lret
jl
pusha
mov
mov
or
aad
and
mov
mov
lret
xchg
sub
mov
xor
push
pop
test
lcall
xchg
add
movsl
sbb
inc
orb
in
mov
je
jg
push
push
add
imul
mov
loop
orl
test
or
pop
test
enter
imul
popf
mov
hlt
cmpb
cwtl
xor
and
inc
push
mov
cmp
in
ja
adc
dec
mov
push
push
or
mov
and
inc
sti
mov
sbb
dec
inc
mov
lret
pop
sbb
test
rolb
in
sbb
cld
cmp
inc
sbb
pop
xchg
push
mov
cmpsb
pushf
push
mov
lock
clc
lods
and
decl
icebp
push
ficoml
push
dec
mov
decb
jg
dec
push
add
and
pop
sbb
push
mov
mov
subb
sub
incl
cli
sarb
jno
cmpsb
rclb
inc
mov
ja
hlt
sarb
and
mov
cmp
arpl
dec
fcoml
or
int
xchg
xor
jg
test
negb
adc
dec
xchg
pop
xlat
stos
icebp
fists
je
push
fsubrs
adc
repnz
push
in
mov
mov
cmc
rcl
les
jg
push
dec
sbb
pop
idivb
in
lods
mov
jmp
paddsw
xchg
imul
lock
mov
mov
dec
mov
mov
jnp
movsl
fbld
lods
adc
lea
inc
lods
int3
outsb
and
and
pop
cmp
fidivl
sub
cltd
jb
dec
adc
outsl
cli
cmc
sbbl
push
xor
cs
into
cmpl
inc
sahf
pop
mov
jne
popf
xor
ret
sar
push
cli
lods
sub
dec
xchg
mov
jl
scas
sbb
enter
mov
xchg
imul
outsl
mov
adc
add
mov
mov
ret
sub
mov
lock
mov
sahf
jge
adcb
mov
outsb
ret
xor
rol
sbb
shrb
add
mov
or
sbb
push
mov
repnz
mov
push
test
or
aam
jbe
js
adc
aam
lret
or
js
es
push
sbbl
mov
icebp
stos
mov
movsb
mov
xor
cmpsb
jmp
scas
mov
dec
jmp
enter
cmpsb
adc
lock
imul
cmp
push
mov
clc
outsb
push
sub
test
scas
jb
mov
pop
dec
loop
out
add
jg
scas
call
mov
fistpll
pop
pushf
xchg
ljmp
cli
mov
cmpsb
insl
popf
cmp
mov
icebp
jg
mov
and
inc
das
sahf
aas
inc
xor
lods
adc
adc
fdivl
or
xchg
push
scas
rcl
ficoms
xchg
jle
out
orb
xor
push
repnz
pop
hlt
call
xlat
add
lods
xchg
push
cwtl
test
insl
or
push
sbb
decl
nop
lcall
sbb
out
out
cli
fwait
jle
xor
sbb
add
hlt
push
xor
stos
into
mov
jns
shll
push
in
dec
pop
jno
adc
lods
jecxz
sti
dec
push
fbstp
mov
lret
mov
pop
outsl
sub
mov
lods
mov
mov
mov
in
ljmp
jmp
arpl
xchg
sub
mov
mov
xchg
sub
fwait
and
sbb
cli
adc
xchg
loopne
or
aaa
push
xchg
pop
stc
xor
push
sbb
cmp
aas
bound
jbe
test
mov
shl
outsb
pusha
lds
insb
mov
arpl
dec
sarb
pop
xchg
loop
out
add
lret
pusha
cmc
pop
aas
test
ret
dec
les
out
jae
xor
out
adc
pusha
out
inc
mov
call
dec
cmc
inc
cmc
mov
adc
bound
mov
and
inc
mov
call
adc
push
dec
lock
xor
adc
add
pop
and
addr16
jmp
push
mov
xchg
out
push
js
cmp
in
out
rolb
sbb
dec
sbb
push
jmp
rorb
dec
ret
inc
dec
mov
jns
movsb
adc
in
iret
mov
leave
push
mov
shrb
sbb
jle
shlb
or
fidivrl
data16
pop
or
inc
fsubrs
shlb
clc
mov
sbb
jge
mov
iret
mov
mov
xor
pop
dec
mov
mov
mov
inc
lcall
cld
pop
mov
ret
lahf
inc
cmc
out
push
sbb
adc
lea
js
adc
call
cmpsl
fsubs
jnp
test
cwtl
mov
les
addr16
loope
aas
cld
hlt
or
cwtl
jnp
mov
pop
and
xchg
xchg
fsts
pop
clc
das
jo
mov
stos
lahf
dec
jg
in
scas
cmp
cwtl
jg
movsb
ljmp
push
inc
in
mov
and
mov
jg
outsl
xor
push
jbe
sub
fs
jecxz
pop
mov
aaa
ss
cmpsl
lods
loop
decl
and
cmp
cmp
push
or
pop
fimull
pop
mov
shll
cwtl
and
or
xchg
ds
lcall
insl
fmull
subb
jge
push
rcrl
jmp
loopne
shlb
call
mov
cmp
lahf
or
xchg
aas
mov
dec
jmp
add
aam
out
xchg
jnp
aaa
push
pop
movq
hlt
adc
cmp
lods
or
das
push
aas
rclb
nop
mov
lret
scas
out
or
lock
xor
cmp
xor
pop
sbb
add
inc
xor
jecxz
sub
js
imul
lods
jmp
icebp
je
xlat
mov
mov
or
lcall
shl
pop
jl
push
std
ds
cmp
fcmovnu
rcr
cld
mov
int3
nop
stos
jnp
add
sbb
mov
cmp
clc
clc
dec
lahf
or
loopne
pop
insl
and
rorl
std
inc
pop
mov
adc
pop
shlb
iret
lock
mov
jmp
les
aad
call
pop
adc
in
test
incl
ret
and
inc
or
stos
scas
and
int3
movb
test
pop
jg
test
fwait
xchg
shlb
mov
je
or
cmp
jo
mov
adc
and
mov
inc
mov
jb
and
fisubs
stos
rclb
jecxz
nop
repz
adc
sub
ror
out
idivb
lods
popa
pop
sbb
push
adc
mov
outsb
xchg
les
daa
xor
popa
add
gs
mov
cltd
jnp
inc
cmp
xchg
outsb
lahf
mov
movsl
inc
dec
mov
or
test
int
sbb
jo
jecxz
sub
sbb
mov
das
bound
out
scas
stos
stos
js
rol
outsb
popf
les
aas
cmp
jg
or
mov
je
vcvttps2dq
or
xor
pushf
sub
jmp
out
cltd
lret
repz
mov
cwtl
xchg
xor
pop
mov
xor
sub
shl
ss
cmp
jno
daa
mov
js
sub
mov
stos
jbe
mov
fwait
cmp
lods
mov
lods
js
enter
cmc
mov
inc
xchg
jg
adc
lcall
shl
mov
pop
cmc
sbb
and
sbb
cmp
xor
movsl
ljmp
xchg
xchg
jg
loopne
cli
dec
fstps
aad
mov
lret
pop
or
out
inc
mov
ljmp
inc
push
adc
decl
scas
mov
cmpsb
mov
or
jle
pop
push
cwtl
pop
shlb
inc
ror
rorb
fcmovbe
decl
mov
or
cmp
xchg
mov
es
dec
aam
orb
fbstp
mov
mov
xchg
das
mov
pop
dec
pop
jne
lods
push
mov
pop
dec
or
pushl
std
jmp
aaa
mull
in
out
ds
and
shrb
or
das
push
cmp
or
movsb
clc
and
fcmovne
adc
or
insb
mov
add
mov
jo
jp
add
mov
cmpsl
fcomi
cmp
sahf
rcr
nop
sub
add
or
mov
js
push
xchg
mov
sahf
jae
push
mov
jmp
inc
sub
pushl
mov
push
add
xchg
ss
out
fwait
stc
and
scas
inc
pop
clc
cmp
fucomp
mov
and
das
mov
mov
cmp
xor
ljmp
loopne
inc
dec
icebp
mov
out
pop
ss
dec
pop
std
adc
jmp
std
inc
das
xorl
push
int
test
inc
sub
push
ret
popa
call
nop
add
dec
jmp
faddp
mov
pop
insl
push
push
push
roll
pop
and
add
xor
clc
xchg
filds
jb
in
pop
or
sti
sub
mov
jo
xor
cld
cmpsl
fucom
pop
dec
xchg
xor
call
popa
sti
fisttps
dec
insb
jnp
data16
in
inc
jmp
pop
fisubrl
popf
dec
hlt
in
push
ss
push
mov
mov
add
lcall
lret
jl
push
pop
mov
fwait
ret
in
fnstsw
adc
fldl
pop
push
push
lods
leave
lcall
and
inc
test
lds
pop
pop
mov
dec
mov
push
movsb
adc
pushl
and
or
adc
or
xchg
incl
push
sub
lea
jp
movsl
std
jmp
or
xchg
call
cmc
ljmp
adc
mov
fists
mov
sbb
std
lcall
jl
hlt
sub
jno
cmpsl
and
fisubl
out
cmp
jg
or
cli
mov
mov
ljmp
out
subb
loopne
mov
xchg
dec
xor
inc
hlt
fstpl
pop
jb
and
jno
fcmovb
jnp
and
repz
adc
fildl
sbb
mov
rcll
shlb
jmp
sar
fprem1
sarl
cmp
outsb
rorb
es
sbb
jb
cwtl
mov
aaa
xchg
fsubrs
cmp
jg
mov
or
call
clc
aaa
sbb
pop
ret
je
pop
jo
mov
sub
popf
push
aad
cmp
inc
ss
push
push
dec
inc
mov
rol
aaa
pop
ds
mov
push
loop
sti
mov
lret
pop
fst
or
or
jg
push
imul
fcmovu
push
sbb
in
xor
pop
or
and
in
lds
push
fnstsw
pop
std
cmp
test
scas
mov
adc
rcrl
iret
sub
pop
flds
enter
add
sbb
jb
fidivl
sbb
or
adc
rolb
and
mov
jmp
into
scas
aaa
repz
das
add
shlb
add
scas
out
and
jb
in
rcrl
or
mov
fdivrs
cmp
lods
push
aad
enter
sub
mov
loopne
jl
clc
jl
dec
adc
incb
sbb
and
jmp
pop
sbb
rclb
fildll
inc
inc
inc
movsb
cmp
xor
push
loope
mov
xchg
test
test
scas
in
jmp
jns
dec
sbb
jb
lods
js
xchg
add
mov
push
imul
div
dec
mov
push
mov
dec
xchg
push
lret
cmpsl
mov
jmp
push
lcall
outsb
mov
cld
add
pop
xchg
ja
jb
xchg
mov
pop
aaa
jl
add
inc
dec
push
lret
stos
inc
sub
xchg
jecxz
fs
shll
pop
jle
jp
mov
fldt
sti
sbb
add
nop
push
mov
sbb
clc
cmpsl
xchg
xor
sbb
rcrb
jle
mov
clc
xchg
or
mov
cs
push
lret
or
nop
push
cld
popf
shlb
inc
daa
pop
fdivr
aad
mov
pop
push
incl
rcrb
pop
jnp
dec
addb
pop
sbb
repz
mov
jb
pop
movsb
push
mov
add
int3
mov
push
add
test
ds
cli
jg
mov
mov
push
addb
insl
fnsave
into
imulb
stc
add
orb
ds
sub
rcr
sbb
loop
out
add
jbe
mov
dec
sarl
mov
xchg
cmp
ds
mov
adc
jo
test
sub
fisttps
fisttps
scas
adc
or
imul
movb
aam
mov
dec
in
mov
jg
adc
pop
and
inc
stos
xor
ror
adc
sahf
push
ljmp
dec
add
mov
mov
jecxz
std
push
push
xchg
pop
push
dec
sti
cmpsl
gs
adc
mov
mov
jnp
fdivl
fwait
cmp
leave
test
aas
jecxz
lock
jmp
enter
es
cmp
out
mov
test
jbe
rolb
xor
in
ret
xchg
jmp
xlat
pop
xor
push
ja
cltd
fnstcw
lea
fwait
xchg
lret
or
sbb
and
mov
aad
xor
dec
mov
push
mov
nop
mov
decl
loop
jno
sub
leave
test
adc
jp
ss
jae
inc
mov
sub
subb
pop
pop
pop
pop
push
mov
sbb
sub
xor
bound
popa
dec
mov
and
popf
movsl
and
mov
cli
pop
push
notb
or
decl
mov
aaa
cmp
rcr
lret
cmpsb
ljmp
clc
mov
repnz
xchg
stos
sbb
outsl
pop
ret
sbb
pop
fcmovbe
xchg
pushf
je
aad
and
jbe
mov
cmp
jecxz
imul
call
movsb
mov
mov
aas
cli
in
ljmp
and
pop
jnp
xor
test
into
add
std
jmp
adc
scas
xchg
adc
ret
mov
out
sub
lcall
adc
incl
test
ds
inc
enter
inc
add
sbb
into
loope
dec
aaa
adc
icebp
jmp
les
xor
jp
dec
and
daa
sarb
enter
les
push
push
jb
adc
push
dec
jp
cld
js
mull
incl
cmpsb
movsb
pop
aaa
and
ja
sbb
fwait
jecxz
out
hlt
mov
pusha
loope
int3
sbb
dec
loope
scas
mov
push
mov
gs
jb
cmpsb
enter
cmp
faddl
cmpsl
adc
pop
mov
sbb
in
lods
jo
ss
fs
inc
mov
sub
cmpsl
add
inc
test
incl
and
loopne
xchg
popf
xor
jo
cld
or
push
mov
xor
mov
add
test
das
xor
stc
mov
push
add
cli
fwait
jle
push
lret
loope
cwtl
xchg
jmp
and
popf
inc
sbb
pop
outsl
adcl
push
enter
sub
inc
or
rorb
les
mov
cli
rcrl
adc
fisubl
rolb
add
cmp
in
push
dec
mov
add
or
jne
xor
fidivrs
ljmp
push
mov
inc
xchg
mov
loopne
jno
cmp
stc
or
push
in
sub
push
pop
fistpll
test
repnz
shl
sub
push
sub
adc
scas
lods
int3
jbe
cmp
test
insb
ljmp
hlt
push
mov
loop
incb
sub
fcomip
ljmp
push
cmpsl
insl
stos
out
dec
leave
xor
test
pop
or
inc
mov
or
sbb
xor
lret
jp
rclb
aas
movsb
and
enter
adc
mov
cwtl
sahf
mov
stos
insl
lcall
pushl
aad
sarl
or
les
dec
jne
in
loopne
nop
inc
lock
sahf
dec
and
mov
sbb
xorb
scas
mov
mov
into
add
mov
lods
loope
mov
pop
sbb
enter
or
mov
pusha
cmpsb
mov
lahf
lret
leave
std
dec
or
mov
jno
subb
sbb
push
push
mov
mov
aam
testb
pop
xor
stos
inc
call
dec
lock
out
rorb
or
in
xor
ss
xchg
add
jns
in
push
sub
add
ja
cli
fldl
push
rcr
and
lds
lock
and
mov
jmp
ret
fucomip
dec
inc
dec
adc
pop
in
mov
fisubrl
mov
loop
shr
or
sub
hlt
dec
jg
loopne
popl
ljmp
lcall
mov
std
jns
adc
pop
test
addb
mov
add
add
mov
outsb
lods
rcrb
dec
xchg
frstor
daa
mov
fadd
lret
stos
stos
sbb
ret
pop
into
and
inc
adc
xchg
pop
mov
mov
int3
mov
adc
out
je
mov
or
sub
sahf
jmp
push
jb
push
jge
mov
push
push
out
xchg
mov
jae
sbb
jg
and
jmp
mov
shl
jmp
call
js
dec
pop
fsubrs
cld
lahf
inc
push
lret
jmp
push
cmc
aad
loop
mov
xor
jecxz
dec
inc
inc
xchg
dec
inc
jnp
xchg
imul
fildll
je
add
add
pop
push
sub
and
mov
push
push
and
mov
push
fbld
pop
pop
loop
leave
dec
addb
jge
xor
stos
fs
ljmp
jo
cld
clc
shrb
sbb
sub
shrb
mov
incl
mov
ljmp
lock
out
daa
ss
or
ret
push
ret
int3
adc
and
push
icebp
incl
cmp
in
repnz
xchg
sbb
xor
clc
fcomip
decl
std
cs
sbb
mov
and
cld
aaa
fstps
icebp
les
dec
mov
dec
cmp
or
dec
ljmp
mov
hlt
sub
pop
mov
mov
insb
rcrb
sbb
push
sbb
sbb
mov
and
test
loopne
xchg
pop
mov
dec
pushf
pop
clc
mov
cmpsl
jne
jg
repnz
dec
add
adc
sti
inc
lods
push
insb
in
aaa
xchg
dec
roll
xorb
movsb
ljmp
xlat
xchg
mov
ret
test
xchg
dec
xor
push
and
repz
addl
jp
dec
fcom
lcall
aas
mov
dec
mov
or
inc
popf
lock
pusha
xchg
popf
out
clc
fcomip
shlb
lahf
mov
mov
repnz
add
bound
push
lods
cmpsb
test
mov
dec
push
pop
jns
and
mov
push
scas
out
arpl
jle
jmp
imul
pop
iret
arpl
pop
mov
incl
aaa
cld
stos
mov
dec
movsb
mov
xor
pop
rolb
xor
adc
std
jp
fstl
push
jb
rorb
movsb
inc
fxch
inc
xchg
inc
jmp
mov
mov
lret
call
xchg
insb
push
lods
xor
cmp
pop
jne
xchg
jp
push
repnz
data16
clc
andb
mov
mov
call
adc
pop
cs
sub
insl
stos
mov
jo
out
fdiv
lods
dec
adcb
jb
jbe
repz
andb
daa
into
jecxz
out
std
xchg
jno
std
and
rorl
cmp
movsb
adc
sub
aaa
mov
xchg
push
sarb
jg
or
shlb
add
test
into
push
jge
test
add
xor
fldcw
xchg
fmuls
push
std
lcall
xchg
jae
mov
aas
push
ret
scas
or
sbb
adc
sti
lret
insb
mov
sbb
ret
and
mov
std
call
imul
gs
fisttpl
stos
xchg
hlt
pushl
insl
lock
ss
decb
sub
mov
and
mov
or
cwtl
sbb
lcall
and
push
psubd
ja
jne
les
aam
mov
jmp
loop
add
outsb
push
sub
ljmp
sahf
subb
xchg
scas
sub
inc
mov
mov
cmpsb
pop
lods
xchg
xor
lds
and
out
xlat
sti
push
sub
incl
aad
sahf
adc
call
sbb
out
push
pop
or
or
add
nop
dec
sub
sbb
ss
adc
daa
in
out
xchg
call
dec
jg
and
jge
add
clc
das
pop
ret
pop
es
test
pushl
lret
mov
fisubl
je
xorb
add
loop
dec
sbb
rcr
mov
mov
pop
xchg
jae
adc
iret
fsubrl
cmpsb
cmp
jo
insb
push
lds
jnp
subb
inc
rclb
push
sub
add
add
xchg
out
cli
scas
mov
cmp
pop
in
inc
mov
jge
rorl
mov
cld
movsl
stos
xor
movsl
in
push
sarl
dec
loop
sti
cld
lcall
mov
cmpsb
imul
mov
add
cmp
cmp
pop
decl
sbb
mov
cmpsb
dec
shl
sub
dec
cmp
pushl
fadds
notl
fidivrs
jns
sbb
repnz
cmp
pop
xchg
test
push
int
xor
cmp
inc
pop
pop
sti
cmpsb
incb
fs
fcomip
mov
mov
xlat
insb
aaa
pcmpeqw
mov
mov
in
adc
jmp
add
mov
test
js,pt
cmp
pushf
stos
lcall
jo
jmp
stos
and
sub
cmpsl
icebp
imul
ljmp
xchg
js
test
lods
sahf
sbb
xchg
jbe
jecxz
sbb
addr16
cmpsb
lcall
aam
mov
add
xor
xchg
dec
insl
icebp
in
cmp
filds
adc
mov
out
mov
mov
leave
jns
jecxz
push
mov
std
call
je
leave
mov
jl
mov
mov
mov
or
loop
mov
add
and
adc
pop
int3
mov
jg
out
test
daa
cli
jecxz
icebp
push
clc
out
push
cltd
ja
in
mov
pop
je
lock
inc
pop
test
les
jbe
adc
push
lcall
mov
subb
mov
adc
add
stos
pop
mov
scas
push
icebp
mov
stos
outsb
xchg
rdmsr
push
lcall
insb
ljmp
lcall
sub
dec
mov
adcl
cs
pop
std
ja
mov
aad
inc
ljmp
idiv
cmpsb
cli
out
cli
lds
fs
in
outsl
out
shr
adc
ss
cmpb
mov
jl
inc
std
ret
pop
cwtl
ljmp
std
rcll
into
sti
loope
adc
lcall
std
rol
movsl
insb
fnstsw
fildl
cmc
cmp
mov
mov
shr
rorb
stc
push
cli
xor
das
out
sbb
insl
or
xchg
mov
fistpll
push
inc
pop
in
or
lahf
popa
xchg
cmp
andb
xchg
jge
push
pop
inc
push
pop
xor
adc
loop
add
push
xchg
cmp
lock
mov
xchg
testl
jle
test
pusha
cmp
into
mov
outsl
outsl
es
pop
imul
mov
inc
ljmp
adc
cmp
test
mov
sub
lcall
decb
adc
pop
icebp
test
mov
push
lods
push
mov
pop
std
fildll
es
scas
movsb
add
xor
clc
test
adc
mov
mov
aas
ja
fs
jb
into
mov
insb
pop
push
mov
cmp
loop
bnd
sub
lock
push
testl
inc
jmp
lcall
lock
and
dec
xchg
call
xchg
clc
lcall
int
jp
les
mov
add
ljmp
add
sbb
pop
sbb
lock
mov
test
jmp
jg
xchg
cmp
aad
cs
fcmovnu
lret
or
test
repnz
xchg
lcall
mov
loopne
std
xorb
stos
sub
fsubs
mov
and
outsl
icebp
mov
stos
lods
aam
imul
sarb
loop
xchg
jns
dec
adc
adc
mov
hlt
sub
out
or
jge
iret
aas
dec
clc
call
cltd
inc
sti
pop
and
pop
aas
xchg
inc
push
pop
add
incl
inc
js
add
sub
cmp
repz
dec
pop
jge
jno
outsl
add
jmp
push
shr
popf
outsl
cmp
push
outsb
std
jo
dec
arpl
adc
inc
dec
gs
inc
pop
inc
cld
ljmp
loopne
sub
fmull
movsl
and
clc
adc
dec
test
cld
incl
jg
dec
shrl
push
scas
ret
mov
test
jg
sub
iret
in
pop
mov
adc
mov
pop
and
pop
push
idivb
mov
aas
aam
rol
adc
jae
aam
fisttps
fimull
scas
sbb
sub
int
fs
je
dec
or
ret
inc
lahf
mov
fisttps
stos
cmpsl
adc
or
inc
pushl
jp
mov
scas
sub
push
fdivl
sar
out
sub
xchg
movsb
push
mov
mov
inc
or
adcb
das
or
add
out
jno
hlt
fstpt
and
test
mov
fiadds
adc
movzbl
mov
popf
fwait
xor
pop
mov
dec
pop
std
lcall
rcr
mull
xor
nop
repz
loopne
rolb
xchg
push
pushl
hlt
mov
add
scas
add
rcrl
ljmp
loope
dec
lret
sub
ja
jge
add
outsl
outsl
mov
cmp
push
fnstenv
xor
mov
mov
or
sbb
ljmp
inc
push
mov
inc
lock
leave
xlat
cmp
cli
jg
sub
xchg
push
fsubrs
stos
pop
fwait
hlt
inc
nop
pusha
jmp
cmp
stos
pusha
gs
cwtl
mov
icebp
nop
scas
popf
jg
test
inc
and
jnp
push
mov
xor
ljmp
or
mov
mov
push
enter
sahf
add
mov
fdivrs
stc
inc
gs
sahf
outsl
loope
ja
ja
push
jae
imulb
insl
sbb
call
stos
into
adc
jp
xor
sbb
add
dec
lcall
pusha
aad
jmp
xchg
cmpsb
pop
mov
push
lret
cmc
jg
adc
out
les
jns
push
sub
push
mov
mov
sub
orl
jge
inc
inc
loope
insl
test
cmp
jle
mov
jmp
mov
and
pop
adc
aam
adc
sbb
fstpl
call
inc
iret
ret
fsub
or
jl
outsl
dec
push
es
js
add
pop
pop
xchg
outsb
fcmovu
and
or
inc
fldl
inc
cmc
fs
movsb
shl
call
lods
bound
sti
push
push
inc
outsl
decl
jp
mov
xlat
aad
aam
movl
jle
cmp
std
pop
hlt
sbb
fldt
dec
movsl
inc
mov
mov
dec
xor
add
pushf
or
or
push
filds
jnp
sahf
xchg
and
jmp
cli
decl
call
and
inc
jb
icebp
cmpsb
fisttps
call
in
pop
into
hlt
inc
decl
lcall
mov
push
aaa
cwtl
clc
pop
lock
mov
and
pop
jne
pusha
test
mov
or
pop
adc
jnp
jns
sbb
mov
cmp
cltd
repz
stc
lods
sub
clc
jmp
jbe
test
mov
pop
fcmovnb
xor
lock
insl
adc
dec
jp
shlb
pop
mov
pop
xchg
dec
jne
add
ljmp
incl
call
jae
sbb
xchg
add
push
pop
cltd
dec
cli
call
adc
pushf
jae
in
and
outsb
jns
aad
xchg
scas
jmp
or
push
in
leave
mov
outsb
or
mov
push
sahf
pop
pop
shrb
gs
mov
dec
test
pop
push
mov
stos
dec
cmpsb
fwait
dec
push
ss
lea
mov
call
repnz
xor
lods
popf
gs
iret
xchg
jno
jg
fsubs
orb
ljmp
mov
je
out
lods
mov
into
nop
pop
push
push
std
mov
mov
shll
mov
jg
dec
xor
pushf
xchg
push
dec
sbb
jg
lcall
jge
lods
inc
mulb
dec
icebp
lds
incb
xchg
div
sbb
in
loope
pop
stos
dec
aas
shrb
fstl
pop
ss
je
orb
fisubrs
in
das
loop
cmp
outsb
idivb
or
jp
and
jns
xchg
and
mov
or
fnstenv
jb
pop
std
mov
addl
cmp
test
sarb
fmull
imul
mov
jg
jo
lods
outsb
add
xorl
filds
or
pop
in
xchg
and
and
pushf
pusha
xchg
stos
cmp
ja
call
mov
lods
adc
pop
add
data16
sbb
mov
cmp
mov
scas
push
xchg
mov
pop
rclb
int
add
xchg
mov
or
cmpsb
cmp
insl
adc
xchg
cmp
test
lea
stos
fmuls
push
inc
cmp
and
decl
idivb
sub
scas
ljmp
iret
fldl
fstpl
sbb
or
loope
rcr
loopne
mov
int
or
and
mov
popa
clc
movsb
roll
push
mov
sbb
cli
jbe
js
inc
jo,pt
pop
dec
dec
outsl
insb
push
test
dec
xchg
in
lret
xchg
scas
test
xchg
fucomi
mov
mov
mov
out
cmp
sbb
mov
xchg
sub
jl
imul
test
aad
stos
fisttps
call
xchg
insb
jmp
lods
sub
insb
pop
inc
dec
loop
ja
out
mov
gs
mov
pushf
divb
pop
cld
mov
shlb
mov
mov
cmp
mov
pop
hlt
stc
pop
repnz
sarl
mov
push
add
adc
imul
lcall
push
xchg
in
or
ret
popa
pop
dec
adc
and
pop
shlb
sbb
notb
adc
dec
cld
pop
ljmp
xchg
rolb
jp
xor
lds
pop
jge
mov
mov
cmpb
ljmp
aaa
lcall
sbb
fisttpll
test
push
leave
mov
call
or
sub
test
lret
adc
addl
insb
mov
std
push
xchg
mov
out
loopne
add
loop
cmp
push
data16
inc
arpl
data16
or
cld
jg
jae
stc
loopne
imul
in
fs
jmp
push
and
arpl
mov
into
mov
clc
sub
pusha
fcoml
out
orb
jns
mov
sahf
dec
enter
add
hlt
jg
xchg
loopne
enter
pop
icebp
popf
push
out
mov
inc
fdivl
loopne
xchg
mov
push
mov
into
stos
sub
dec
sub
jne
jns
push
movsl
filds
push
in
lods
xor
ja
std
nop
jae
ds
hlt
sbb
out
adc
out
dec
mov
mov
dec
sub
push
fs
push
mov
movsb
aad
out
cmp
sub
inc
jmp
add
cmpsl
dec
add
out
push
popa
jge
dec
popf
scas
xchg
sub
adc
les
mulb
leave
inc
aaa
push
divb
call
sbb
jnp
pop
jae
xor
incl
and
mov
popf
cld
add
push
dec
stos
lods
stc
adc
movsb
lds
xchg
push
or
pop
popa
cmc
xlat
aam
sbb
mov
cmp
scas
or
lret
jnp
push
sub
xchg
mov
mov
pop
inc
inc
fdivrl
lcall
shll
insb
iret
pop
out
repnz
push
xchg
enter
das
cli
push
in
adc
pop
cli
dec
hlt
mov
push
push
and
or
push
inc
iret
mov
aad
mov
leave
dec
push
sbb
pop
mov
mov
loope
xchg
and
sbb
dec
cmpsb
add
xchg
aaa
xor
mov
mov
pop
adc
ret
ja,pt
orb
das
xor
out
xchg
add
cmp
and
insl
mov
mov
pop
push
jge
movsb
sub
mov
mov
mov
adc
add
jg
call
pushf
pop
pushf
adc
inc
pushf
push
test
jg
nop
das
cmc
mov
shl
fwait
mov
and
mov
fbld
pushf
sldt
test
ret
cld
add
add
pop
loop
jne
xor
fs
loopne
stos
dec
test
pop
orb
stos
pop
leave
or
jg
test
loop
aam
bound
xor
fsubs
movsb
cwtl
fs
fidivl
push
xchg
call
out
mov
jbe
xlat
sbb
sbb
mov
iret
xor
cld
rorb
add
clc
jb
sbb
popf
bound
stc
xchg
cmp
pop
ficompl
push
and
xchg
repz
cmp
xor
jns
shrl
test
cltd
lock
rol
out
adc
lds
repz
jo
jnp
add
inc
lods
mov
cli
adc
ret
ljmp
loopne
lcall
mov
addr16
cmpsb
jo
add
icebp
ljmp
lods
cmpsl
call
ja
jne
insl
leave
push
aad
std
mov
sbb
push
int
fidivrs
add
mov
data16
jle
sub
lret
icebp
lcall
or
pop
outsl
fcmovb
dec
fcoms
icebp
pop
cld
pop
jo
xchg
stos
mov
push
mov
sub
inc
pop
stos
js
shlb
stc
mull
aam
adc
les
jnp
mov
add
mov
outsb
hlt
ljmp
push
fnsave
fsubrs
pusha
js
aaa
icebp
push
pop
ja
imul
je
daa
fdivl
sti
out
ss
jae
sbb
add
mov
out
jbe
popl
cmc
scas
jp
adc
push
mov
mov
mov
lcall
mov
dec
jbe
aaa
jp
fcmovb
or
sub
push
sahf
sti
vmovsd
imul
ljmp
jno
repz
jno
xchg
mov
das
or
in
adc
pop
mov
das
call
cld
pop
hlt
push
iret
dec
add
jbe
rcrb
lea
pop
add
nop
jg
jle
fwait
or
or
pop
out
int3
lea
cmp
cmp
inc
ljmp
and
fsubrl
cmp
mov
gs
xchg
ret
outsl
jo
aas
aad
movsl
data16
pusha
in
imul
dec
cmpsb
shll
aam
xchg
inc
movsb
jp
cwtl
orl
testb
pop
sti
jne
push
xor
hlt
ljmp
push
icebp
test
or
test
mov
leave
adc
inc
fs
pop
mov
jg
mov
fdivrs
dec
add
add
and
and
adc
jg
dec
adc
int3
ret
fucom
pop
ljmp
int3
call
adc
mov
and
pop
cmp
in
sarl
dec
or
sub
xchg
sub
insl
loop
pop
mov
aaa
push
jg
sbb
aas
sbb
sbb
fdivl
and
repnz
dec
or
push
pusha
pushf
bound
add
jo
dec
ljmp
or
xchg
aad
js
in
inc
inc
push
xchg
fistl
aad
fsubs
nop
cmc
ret
dec
icebp
enter
mov
repnz
mov
adc
inc
dec
sub
and
pop
cmp
xor
scas
es
lods
sub
sub
push
repz
ljmp
lcall
push
stos
call
lcall
mov
out
mov
pop
rolb
add
sub
aaa
decl
decb
lods
sub
ret
push
dec
xchg
xchg
lods
fdivr
lcall
jmp
movsl
bound
mov
lds
lret
pop
ja
in
fcomps
push
xchg
je
push
into
lods
mov
ficomps
push
mov
test
cmp
lods
shlb
loop
add
jmp
push
les
cmp
test
stos
pushl
jmp
pop
sbb
or
mov
dec
mov
cmpl
inc
inc
lods
sub
xor
add
sub
sbb
sahf
fwait
lcall
mov
ljmp
fcmovnu
les
les
adc
push
in
aad
push
ljmp
sbb
xor
daa
mov
fisttpll
inc
add
jb
lcall
cld
mov
pop
lcall
fisttps
dec
xchg
mov
add
rorb
cs
xchg
dec
xor
pop
or
adc
mov
xor
incl
or
fstpl
je
lods
xchg
or
iret
test
mov
sbb
sub
mov
pusha
pop
outsl
std
pop
xor
mov
mov
add
loopne
sbb
or
ja
sarl
insb
repnz
fiadds
sbb
add
lods
das
jp
jns
sub
cltd
xlat
xor
jmp
xchg
scas
sbbb
jmp
sbb
and
inc
inc
cmp
and
outsl
cli
decl
or
dec
leave
icebp
jge
mov
pop
add
xor
inc
jmp
lcall
sbb
and
or
ds
add
add
insb
adc
test
mov
jecxz
js
jg
inc
nop
lcall
pop
dec
inc
das
je
mov
cltd
fsubl
fldt
xchg
lods
ljmp
cmp
push
outsl
add
iret
lret
fstps
adcb
jmp
xchg
mov
ljmp
sub
cmp
add
pop
out
and
sti
sub
cld
adc
nop
dec
in
inc
mov
xor
loop
into
inc
pop
add
mov
xchg
mov
fnstcw
add
mov
inc
sub
rolb
inc
or
fs
clc
mov
xchg
mov
out
jo
cmp
outsl
data16
xchg
jg
inc
dec
add
add
jl
xchg
cmp
cmpsl
fwait
pop
sub
lcall
xchg
shrb
pop
jmp
fs
add
jle
and
imul
out
cmpsb
pop
icebp
decl
shll
lods
ret
lods
popa
cld
mov
hlt
repnz
cmpsb
rcl
cmpsb
adc
pop
icebp
dec
cld
cmpsb
jg
shl
orl
sbb
ret
inc
cmp
cmp
aaa
inc
and
jb
lret
repz
lock
sbb
mov
es
jl
lcall
lcall
clc
inc
loopne
iret
out
fistps
ljmp
ss
loope
push
es
mov
push
fcomip
inc
sub
mov
jle
xorb
adc
jle
ljmp
stos
ret
or
mov
mov
icebp
sarb
cltd
mov
hlt
jle
jg
mov
mov
fcomps
das
clc
pop
cs
enter
cli
aaa
std
bound
jg
lods
fdivrp
lods
dec
xorl
push
aas
or
mov
jbe
clc
insl
and
xlat
mov
sbb
lock
bound
jnp
sti
loop
mov
sar
xchg
and
add
mov
aam
mov
push
pop
add
xor
in
dec
insl
jp
pop
inc
std
aas
sub
hlt
dec
jg
in
xlat
in
jg
sub
arpl
bts
dec
outsl
mov
stos
sbbb
jg
pop
imul
lahf
xor
jne
pop
push
sub
adc
das
sbb
jg
sub
imul
mov
cmp
xchg
div
inc
arpl
ds
pop
add
rolb
pop
mov
outsl
mov
jno
add
ja
inc
jge
das
clc
adc
cmp
lds
dec
pop
push
pop
fcoms
mov
cli
decl
out
sub
mov
jmp
add
or
ss
scas
xchg
cmpsl
jp
sarb
out
mov
xorb
es
inc
ljmp
adc
cwtl
ljmp
xchg
and
cli
push
add
xor
or
mov
adc
fwait
outsb
scas
and
bound
jmp
scas
mov
fcomps
popa
jl
mov
jmp
jmp
cmp
loop
shl
jecxz
mov
xchg
test
out
outsl
inc
leave
insb
xchg
subb
push
add
fcompl
xor
in
inc
clc
pushl
inc
xchg
pop
leave
mov
aam
mov
test
sub
sub
loopne
inc
ret
test
call
ret
dec
int
hlt
push
mov
cli
fldt
ds
push
mov
xchg
xor
fmulp
test
jmp
movsb
mov
dec
mov
das
popf
adcb
mov
jmp
das
sahf
cmp
imul
sbb
stos
decl
mov
mov
lcall
dec
inc
sub
and
jnp
cmpsb
sar
jmp
filds
pop
aam
push
sub
mov
je
les
ja
jg
add
push
ja
jo
ja
nop
pop
inc
push
mov
add
sbb
mov
cmpsb
daa
js
cmpsl
fisubrl
les
std
push
mov
xchg
ret
adc
je
imul
stos
sbb
xchg
dec
cmp
fimull
cld
pop
push
cmp
call
addr16
cmc
mov
fistpll
divl
fsub
rol
xor
add
pop
in
inc
or
pushf
add
or
mov
stos
sbb
push
leave
sub
out
mov
sbb
rcrl
sbb
dec
sbb
xor
out
mov
inc
std
sbb
fwait
push
ds
add
pop
mov
add
in
out
jp
sub
mov
xchg
icebp
or
out
testb
jb
mov
fildll
xchg
xchg
dec
test
stc
add
inc
jg
in
bound
pushf
jne
icebp
cmp
adc
mov
iret
in
outsl
add
pop
inc
add
js
fsub
mov
cmp
psubq
mov
xlat
push
leave
mov
pop
adc
das
push
mov
or
jg
rcrl
inc
xor
mov
dec
cmp
test
push
test
mov
push
or
scas
clc
mov
jo
and
enter
cmpsb
movsb
adc
stos
insb
mov
jb
addr16
roll
xlat
jecxz
sar
and
mov
rcl
pop
mov
cmc
icebp
pop
es
in
add
les
adc
sbb
loope
and
loop
pop
push
xor
insb
ljmp
lods
stos
mov
pop
sbb
pop
jo
jne
loop
or
and
jo
mov
js,pn
or
ret
push
adc
sbb
loope
jae
or
cwtl
mov
add
lcall
pop
sbb
lods
imul
xchg
cmc
pop
mov
or
sbb
mov
lea
fisttpll
lds
mov
int3
pop
jnp
jnp
out
ret
mov
pop
test
outsl
or
sbb
clc
sbb
lret
adc
fcomi
cld
jmp
sahf
inc
lret
pop
outsb
mov
out
ror
add
push
or
std
cmc
leave
xchg
ljmp
or
nop
jg
out
mov
sahf
sub
cld
pop
fs
adc
mov
pop
and
add
cs
int
idivb
push
cltd
or
lar
dec
jg
rcl
jp
insl
std
into
fmull
ss
cmp
dec
je
dec
mov
lock
ret
outsb
mov
jbe
fmuls
cmp
iret
sub
push
test
cmpsb
sbb
jle
movsb
push
loop
pushl
adc
aaa
arpl
mov
decl
mov
iret
jge
icebp
subl
imul
call
ss
decl
inc
cmpsb
shll
psubsw
dec
add
push
push
cld
mov
icebp
mov
add
ret
adc
ficompl
sbb
ja
dec
fisttpll
fwait
sub
push
push
sub
push
aas
sub
pop
imul
pop
imul
sub
add
dec
xor
inc
cmp
jne
xor
inc
repz
lcall
sub
jecxz
movsb
fidivrs
test
rorb
xor
jbe
sub
pop
mov
pop
xlat
dec
add
inc
and
ret
gs
inc
xchg
push
push
lahf
mov
mov
xchg
mov
and
jl
out
jo
xchg
or
jmp
loop
out
in
lods
adc
shlb
dec
fdivl
es
or
jge
dec
cltd
add
icebp
cli
push
std
mov
and
mov
dec
loope
sbb
mov
ljmp
lods
sub
in
in
fwait
sub
inc
rcl
dec
decl
clc
enter
pushl
sub
int3
add
push
mov
xor
jbe
fiaddl
push
fwait
inc
jl
adc
jp
add
repnz
ret
ljmp
xchg
dec
sbb
inc
ss
xor
pop
inc
xchg
test
adcb
incl
jmp
pushf
pop
adc
jne
add
sub
and
nop
push
popl
ret
mov
cmp
test
mov
jo
xchg
and
add
in
jecxz
leave
pushl
dec
lods
clc
lcall
cmc
dec
cmp
and
jne
inc
push
loop
inc
inc
cmc
push
sbb
ljmp
jbe
sbb
push
push
inc
stc
mov
in
jae
dec
test
arpl
movsl
fs
sub
rorb
pop
inc
or
les
mov
imul
das
les
cmp
icebp
stos
jle
movsb
push
add
fimull
pcmpeqb
and
push
cli
and
pop
in
ret
out
daa
push
les
cmpsb
xchg
and
and
pop
and
std
xorb
sbbb
iret
push
dec
call
stos
xor
jne
enter
pop
icebp
pop
insb
out
clc
outsb
and
inc
push
aaa
insl
imul
sbbb
loop
sbb
mov
or
call
orl
iret
mov
jbe
sbb
fwait
jl
popf
pop
cli
or
pinsrw
and
imulb
enter
vpmacssdql
loopne
enter
ljmp
std
xchg
cmp
dec
push
mov
xchg
cli
sti
or
inc
notb
lret
mov
dec
sbb
ljmp
call
cmpsl
jnp
jns
test
and
jbe
add
push
out
movsb
xchg
inc
cs
inc
daa
mov
mov
sbb
notl
mov
push
pop
push
pop
push
cld
mov
pop
ljmp
sbb
adc
js
jp
inc
or
shrb
push
in
xor
js
inc
or
call
or
and
fdivp
rorl
popa
mov
pop
movb
push
popf
and
mov
clc
decl
push
movsl
dec
mov
mov
dec
pop
sti
movsl
add
pop
pop
sbb
arpl
cli
mov
scas
ds
out
sub
pusha
add
mov
imul
dec
inc
enter
int
cmp
ss
mov
out
xchg
jge
add
ljmp
xor
dec
cwtl
push
cwtl
pop
pop
movsb
loop
add
je
or
cmpsl
sbb
cli
loopne
pop
sub
sti
pop
pop
push
fdivrl
sbb
out
add
incl
nop
mov
outsl
cmp
mov
xchg
jne
jo
test
stos
xor
jno
xlat
jb
call
mov
les
push
xor
cmpsl
cmpl
lods
aaa
and
add
jle,pn
inc
mov
xchg
jp
pushf
push
outsb
clc
sbb
in
std
xchg
jl
or
lods
or
call
dec
push
scas
pop
jnp
jge
jo
and
lcall
lea
popa
and
fstpt
pop
mov
cltd
xchg
gs
mov
notb
mov
and
jg
xchg
repnz
sbb
pop
jmp
leave
push
in
orb
bound
cld
inc
lock
out
rcrb
mov
sub
call
mov
incl
jg
dec
push
sub
cmpsb
mov
mov
lock
mov
add
mov
add
and
push
and
ret
dec
sbb
jae
push
lea
lds
cli
arpl
fidivs
ja
jl
bound
sub
pop
add
push
and
push
into
jge
adc
arpl
stc
jmp
sbb
out
or
mov
in
das
loopne
in
adcb
push
negb
pop
pop
test
sub
ja
xor
xchg
jbe
inc
enter
cmp
pop
cmp
test
shlb
sahf
mov
out
aad
call
push
aam
aad
adc
jo
mov
cs
ljmp
sub
or
mov
cmc
decl
sub
imul
adc
lret
popa
xor
lcall
mov
fistpll
and
test
lea
enter
std
inc
ljmp
call
aaa
jnp
cmp
leave
cmc
or
into
leave
xchg
pushf
push
lds
fsubrs
mov
fstpt
sahf
dec
mov
jmp
adc
mov
pop
cmpl
subl
and
jg
pop
push
pop
cmp
fistl
and
dec
and
cltd
inc
sahf
rorb
pop
push
xchg
lcall
gs
fcomp
add
mov
fwait
mov
pop
mov
in
movsb
pop
xchg
add
mov
mov
ret
add
adc
icebp
imul
push
mov
ja
cmp
jecxz
push
mov
xchg
test
dec
insb
and
sub
mov
jle
sbb
rcr
fidivrl
fidivrs
sbb
or
dec
das
or
sahf
pop
test
sbb
mov
pushl
popa
loopne
loopne
dec
xchg
clc
sbb
sub
push
mov
ja
movsb
lods
jne
sar
jo
pop
mov
mov
fisttps
test
mov
popa
je
repnz
mov
clc
mov
arpl
jle
push
add
les
pop
inc
loop
mov
aas
inc
cltd
mov
inc
mov
pop
mov
mov
or
and
out
adc
jl
inc
jno
adc
adc
repnz
push
and
push
inc
pop
loope
pop
insl
pop
negl
dec
xchg
test
fldt
cltd
lods
out
insl
adc
mov
and
dec
ljmp
and
mov
mov
call
jbe
mov
imul
xchg
bound
pop
jne
jbe
pushl
inc
xchg
int
cmpsb
rorb
lea
jl
sbb
inc
icebp
ljmp
push
cwtl
aaa
push
repnz
lret
and
mov
into
add
fcomps
push
cmp
dec
sbb
cli
movsb
add
mov
decl
popf
add
pop
inc
jnp
fists
sub
insb
push
cmp
and
divl
push
leave
sbb
jecxz
xchg
add
cmp
and
jle
addl
js
stc
les
adc
ljmp
outsl
fsts
lret
fwait
pop
sbb
movsl
lods
mov
cmp
sbb
decl
shl
in
ds
mov
add
ljmp
cmp
pop
out
clc
mov
xor
out
mov
pop
or
bnd
and
mov
mov
or
cmpsl
ljmp
jmp
popa
xor
mov
mov
sub
lds
mov
insb
insb
rcrb
pop
ds
mov
fwait
ds
outsl
pusha
xor
loopne
clc
jb
fdivrs
movsb
jno
sarl
and
mov
ljmp
xchg
or
mov
xchg
popa
pop
cmpb
or
lds
adc
sti
or
pop
cwtl
inc
aam
mov
ds
lods
repnz
sub
aad
xor
xchg
jmp
xchg
lahf
pop
inc
cmp
fdivr
call
mov
repnz
inc
xor
adc
in
je
push
jmp
cli
mov
jge,pn
xor
lods
sbb
mov
test
movsl
js
int3
lods
xchg
fildl
mov
fsubrl
pushl
les
or
test
or
jg
test
push
adc
lds
fadd
push
int3
cwtl
pop
cltd
aas
out
mov
mov
push
call
push
nop
je
adc
fdivs
mov
cwtl
repnz
xchg
fldenv
and
nop
inc
shrb
add
mov
adc
popf
shll
and
lods
and
outsb
rcll
into
js
test
sbb
sbb
mov
mov
std
push
add
or
sti
push
inc
add
pop
mov
mov
ret
idiv
sbb
scas
ss
cmp
jl
je
push
xchg
inc
jg
call
lock
lcall
mov
dec
pop
push
mov
fmul
xor
mov
test
push
xchg
push
inc
aaa
pop
jle
std
decl
out
fcoml
fistpll
jmp
cmp
lds
push
popf
or
cmpsb
int3
pop
loop
pop
cld
fcmovne
das
adc
dec
and
xchg
outsl
lret
repz
call
inc
cmp
and
mov
std
call
adc
test
xchg
test
insl
pop
push
jle
adc
and
add
mov
lds
add
es
add
popf
inc
mov
outsb
add
nop
nop
xor
cmp
shll
mov
jle
jge
jg
ret
loop
xchg
mov
dec
add
push
movsl
shll
mov
pop
xchg
inc
stc
aas
push
sbb
test
inc
jp
rcrb
lcall
sbb
cmp
rcrl
imul
adc
inc
cmpsl
push
or
xchg
sbb
dec
cmp
lcall
loopne
push
dec
sbb
push
mov
mov
sahf
adc
in
mov
push
mov
lock
inc
ss
fwait
xor
icebp
fisttps
testl
jne
iret
xorl
ljmp
mov
push
pop
and
jns
inc
mov
xchg
xor
sub
add
pop
loop
aad
dec
xchg
push
loop
adc
movsl
push
dec
aam
imul
test
adc
insl
addb
push
iret
mov
fcmovnu
mov
cli
movl
fs
int3
mov
dec
test
mov
or
jl
sahf
and
add
jmp
shl
lock
iret
xchg
pop
pop
shlb
bound
cld
xchg
stos
dec
sub
and
bound
jmp
fcomip
jg
mov
subl
jae
out
subb
outsl
clc
roll
ja
sbb
jl
add
repnz
fcomip
clc
ret
ss
shll
push
cmp
ds
pop
push
and
mov
lret
scas
and
inc
stos
fs
jnp
pop
fs
jbe
fs
decl
push
mov
sbb
ja
shlb
in
incl
xchg
sbb
stc
xchg
push
dec
add
test
mov
pop
fistpl
loop
push
add
scas
or
sbb
inc
and
loopne
pop
ljmp
dec
es
int3
pop
pop
pop
jns
mov
pop
xor
addr16
add
jp
sbb
jno
sub
xchg
out
fdivl
sbb
mov
inc
jl
movsb
pop
jecxz
jp
lcall
add
pop
imul
push
inc
or
cltd
icebp
add
add
sbb
pop
mov
pop
add
pop
inc
hlt
push
movsb
sub
xor
hlt
or
test
lret
ror
xor
adcl
inc
push
pop
sti
fisubl
sub
mov
call
sbb
pop
xor
push
ja
push
cmp
sbb
jne
jb
push
lret
pop
inc
push
out
in
mov
int3
mov
call
jbe
sbb
int
mov
sarl
jmp
insb
dec
pop
and
sbb
push
fisttps
add
dec
xor
xchg
push
mov
cmp
ljmp
shlb
add
pop
push
push
ja
jmp
fists
add
or
or
test
cld
mov
dec
and
push
mov
pop
mov
inc
or
sahf
xor
dec
les
in
cmpsl
call
pop
cmpsl
into
jb
sub
stos
lret
mov
roll
scas
popa
add
cwtl
bound
es
or
mov
ljmp
mov
push
addl
fstpt
jp
loop
mov
and
mov
out
cltd
and
pop
lock
ret
or
xchg
cwtl
xchg
scas
pop
or
pop
push
pop
incl
cmp
push
jl
sub
lds
xchg
add
mov
stos
idivb
push
inc
mov
pop
dec
loop
stos
jge
daa
xchg
out
sbb
jbe
aas
loop
rcrb
test
out
mov
jge
test
jg
sub
add
jbe
sub
xor
xor
aaa
repnz
cli
sahf
test
fstpt
repz
out
fistpl
es
test
cmpsb
lret
pop
add
push
cmp
mov
xor
lret
mov
add
lods
sbb
xor
lcall
loopne
stos
aad
daa
sti
cmp
mov
add
fwait
or
insb
lods
movsl
pop
push
leave
ljmp
push
ficompl
push
and
mov
mov
addr16
push
iret
xor
imulb
rcrb
insl
mov
iret
add
arpl
insb
mov
or
xlat
std
sbb
dec
mov
pop
cmpsb
hlt
mov
mov
incl
jb
inc
sub
sbb
add
inc
std
iret
dec
lahf
push
cmp
ljmp
dec
pusha
or
call
pop
jl
outsl
inc
push
pop
sbb
mov
jg
loop
adcl
into
out
insl
loopne
sbb
stos
and
iret
xchg
and
jb
dec
out
inc
lock
jnp
clc
pop
ss
adc
sub
adc
push
aaa
adc
push
ret
sub
insl
jmp
xor
cmp
fcmovne
add
jg
out
clc
fldl
jnp
stc
dec
call
or
mov
jl
les
fucomip
shlb
cld
dec
jle
fimuls
data16
je
loopne
inc
adc
lret
stos
icebp
loopne
mov
leave
hlt
xor
js
inc
mov
mov
test
pop
jns
or
jmp
add
cli
push
cmp
or
into
mov
ds
call
cld
fstps
mov
iret
xchg
push
addb
ret
fdiv
inc
enter
adc
jg
sub
sahf
mov
pop
inc
adcl
out
adc
jge
clc
lcall
pop
push
icebp
sub
jno
pop
and
push
test
mov
cmp
es
pop
mov
adc
les
fwait
rcll
jae
inc
fbstp
mov
inc
push
push
mov
ljmp
jle
jno
fwait
mov
scas
rcr
sbb
xchg
xchg
cmp
inc
rcr
popa
movl
lock
push
stos
push
pop
cmp
xchg
cmp
mov
shlb
jb
inc
addr16
pop
push
cmc
cwtl
mov
mov
xor
in
xor
pop
or
loopne
xchg
add
inc
cmp
fwait
clc
lods
adc
andl
add
xchg
jae
and
mov
lcall
mov
inc
cmp
mov
mov
add
femms
and
jmp
sub
pushl
ds
lret
ret
inc
pop
xor
pop
push
out
insl
lock
pop
adc
cli
adc
std
mov
aas
std
inc
mov
lds
cli
dec
movsl
mov
lds
ret
adc
jmp
into
xlat
mov
fldt
mov
or
outsl
lock
cmp
scas
dec
dec
shlb
sub
mov
scas
cli
incl
gs
add
cltd
movl
fsin
ljmp
cli
xor
mov
ffree
pushf
lea
cli
mov
out
in
ljmp
jbe
mov
outsb
gs
xor
sbb
js
sti
pushl
cltd
xchg
fdecstp
xchg
and
pop
add
mov
nop
test
add
cmpsb
pushf
dec
xchg
mov
sub
mov
lahf
stos
xor
pop
pop
xchg
cwtl
xchg
rcrl
add
add
dec
mov
notl
movsb
jg
push
repz
pushl
fidivrl
xchg
pushf
fs
hlt
and
xchg
call
les
sbb
out
cmp
push
cmp
pshufhw
iret
and
test
imul
movsb
mov
xchg
push
jne
push
cmovo
push
mov
xchg
mov
xor
or
insl
jne
ljmp
mov
andl
loop
loopne
bound
faddl
fldz
cmp
fs
push
rol
adc
push
jbe
rcll
cli
pop
xchg
decl
mov
adcb
clc
add
push
mov
xlat
jg
loop
add
fistl
popf
call
jg
and
sbb
xchg
leave
jae
fcmovu
or
push
cmc
jmp
lods
xor
inc
adc
fadds
scas
inc
push
pop
clc
lock
dec
es
or
jl
out
adc
das
push
adc
push
sahf
or
cmp
jg
pop
enter
or
scas
lcall
ja
sbbl
mov
xchg
leave
icebp
les
jge
mov
push
iret
jns
or
stos
sarb
add
pop
rcr
sbb
je
or
mov
mov
loopne
pop
xchg
rol
pushf
fs
in
dec
rcr
lret
adc
dec
mov
ret
sbb
mov
and
and
push
lret
bound
bound
mov
xchg
enter
xchg
int3
lds
hlt
lea
xchg
dec
mov
lods
scas
cmp
xor
cld
dec
jno
sub
rol
js
int
pop
pop
leave
mov
sar
jg
stos
ficomps
fsts
stos
jb
or
out
mov
jl
pop
outsb
jle
pop
rcl
ficompl
bound
jg
dec
test
dec
repnz
pop
adc
mov
dec
sbb
adc
and
lahf
scas
sbb
cs
pop
jo
jge
movsb
incl
loop
out
mov
jns
test
push
fcoms
cmpsl
add
pop
push
or
jo
sbbl
pop
popa
and
jns
xchg
sub
arpl
lret
lret
aam
sbb
repnz
mov
xor
or
jmp
xchg
bound
dec
pushf
ss
push
rcrl
mov
outsl
repnz
xchg
std
dec
inc
pop
mov
mov
jmp
sub
movsl
sub
fisttps
pop
cmp
mov
xchg
fs
aad
addb
imul
push
push
lock
cmp
xchg
pop
mov
sbb
push
xor
inc
in
jmp
rcll
and
xchg
lods
aas
xchg
pop
sub
push
sti
dec
aam
jmp
mov
psrad
dec
pop
aad
xchg
out
sbb
xlat
mov
ljmp
repnz
lcall
inc
daa
ficomps
cmc
testb
aad
int3
push
cli
pop
cmp
dec
xor
jg
dec
sbb
dec
push
call
ret
pop
dec
stc
mov
mov
decl
pop
divb
and
idivb
lods
clc
cmpb
subb
call
inc
dec
mov
mov
add
adc
xor
push
dec
clc
and
mov
cli
mov
xchg
dec
mov
loope
pop
bnd
arpl
sahf
mov
mov
fcom
cmc
adc
rorl
push
repnz
lea
and
shlb
lds
mov
aad
mov
ficomps
pop
mov
fcoms
mov
sbb
fisubl
xor
or
je
and
lcall
xor
add
iret
das
cli
lcall
hlt
sub
adc
fildl
stos
inc
test
lcall
add
loopne
jmp
xlat
jecxz
outsl
cld
ja
aaa
adc
out
cld
call
jne
push
shlb
mov
imul
add
out
and
bound
sub
or
dec
add
mov
shl
incl
mov
int3
test
outsb
cli
pop
cld
int
scas
xor
add
xlat
xor
psubsb
popa
cmpsl
icebp
out
mov
inc
xor
and
fbstp
jmp
xchg
jle
sub
and
dec
mov
lret
mov
pop
loopne
mov
inc
out
pop
loope
cmpsl
mov
mov
sahf
push
rorl
test
enter
loope
sarl
in
ret
cmp
push
cmpsb
mov
pusha
jno
jl
stos
and
jae
in
aad
fwait
jge
test
sub
push
pop
arpl
pop
mov
lcall
mov
push
mov
in
inc
scas
mov
jo
add
mov
in
push
leave
cmp
and
call
lret
inc
in
ss
mov
ja
jp
mov
cld
mov
fidivrl
call
mov
ficomps
in
push
lcall
and
push
rcrb
movsl
xchg
dec
mov
dec
ljmp
cmp
mov
mov
mov
stos
jmp
jecxz
sahf
pop
rol
ljmp
fs
lcall
xchg
cmp
mov
pop
pop
cmc
test
dec
dec
out
xor
jbe
lds
call
ret
enter
inc
push
enter
shr
sub
test
clc
decl
ret
mov
sub
js
jg
cmp
enter
test
outsl
aam
push
outsb
jmp
inc
lock
dec
adc
dec
inc
mov
add
cmp
scas
cmp
add
xchg
dec
add
ss
das
popa
rcll
add
mov
aad
std
or
test
cld
movl
jg
imul
testl
lods
inc
xchg
addr16
mov
ljmp
adc
xchg
dec
out
bound
lds
sahf
jnp
rolb
cmp
mov
pop
jne
jb
lock
jp
pusha
dec
insb
dec
mov
pop
nop
mov
lock
aaa
inc
stos
dec
mov
pushl
dec
push
ss
cmp
out
mov
sbb
mov
push
xchg
movsl
lods
pushl
add
pop
dec
out
fs
hlt
mov
pop
and
cltd
add
notb
cmp
loop
decl
mov
hlt
dec
les
mov
fwait
pusha
test
jg
std
adc
fisubs
idivl
sbb
pop
enter
loopne
call
pop
dec
cmpsb
pop
mov
and
lahf
sub
call
pop
push
pop
cmp
add
or
out
add
mov
adc
inc
push
repnz
mov
pop
mov
orb
incl
dec
je
jno
ljmp
sti
add
jmp
adc
sbb
adc
push
idiv
sub
mov
scas
out
mov
lcall
inc
and
scas
sub
sti
jmp
call
adc
sbb
jbe
call
sbb
dec
jge
sbb
dec
push
pop
and
jge
pop
lcall
arpl
sub
fstpl
dec
sub
in
sahf
lods
addr16
adc
mov
pop
sti
mov
and
pushf
faddl
mov
inc
adc
cli
sub
lods
mov
pushf
mov
push
sub
fcompl
cli
insb
pusha
cld
mov
dec
push
nop
pop
pop
das
add
sahf
popf
ret
mov
add
lret
pop
add
mov
adc
pop
pop
or
sub
aas
cmp
ret
outsl
lahf
mov
repnz
dec
jbe
jle
push
cmp
std
decl
dec
push
adc
jge
js
dec
clc
aam
pop
mov
cld
outsb
lret
add
jbe
jmp
or
mov
pop
inc
push
inc
lock
pop
inc
sti
fidivrs
bound
adc
ljmp
fldenv
aas
arpl
pushf
cmp
test
sub
ja
iret
insb
call
out
cmp
sti
lock
mov
scas
cli
outsl
cmc
cli
mov
pop
mov
movsb
cli
ficomps
push
aad
sti
lods
xchg
jl
and
dec
mov
sbb
rolb
jmp
or
aad
jle
dec
movsb
pushl
aad
inc
out
das
out
and
int
in
lea
or
addr16
and
fildll
fsubp
sbb
jnp
pop
lds
gs
jno
jo
mov
inc
add
mov
dec
adc
neg
pushl
fdivr
mov
insl
out
mov
adc
subb
adc
mov
frstor
push
jo
cmpsb
in
jle
cmp
rcrl
aad
xor
repnz
shrl
pop
out
xor
les
rcrl
mov
incl
cmp
bound
sbb
scas
cmp
push
or
cwtl
arpl
test
sub
or
ljmp
jo
in
scas
adc
imul
pop
call
lcall
jns
add
push
loope
pop
mov
int
sub
faddl
loope
arpl
or
rorb
mov
les
aam
dec
mov
test
loope
cwtl
pop
movsl
lcall
add
adc
dec
jmp
add
and
loopne
out
fcomps
cld
aaa
cmp
mov
mov
out
mov
sbb
pop
sarb
xchg
rorb
cli
lcall
xor
stos
retw
lcall
mov
inc
shlb
call
fists
or
jp
rclb
clc
loope
sbb
sub
sbb
subb
xor
mov
sar
inc
mov
inc
mov
pop
pop
scas
out
fbld
lret
out
adc
gs
call
sub
aas
inc
jo
mov
add
gs
pop
or
inc
sahf
rcrb
call
lcall
popa
daa
cltd
arpl
inc
out
rcr
mov
cld
sar
outsl
mov
mov
js
pop
cmpsb
loop
push
dec
and
lret
fisubl
mov
sub
mov
cs
jbe
es
aaa
add
xor
in
data16
sub
incl
jle
shl
loop
lds
mov
add
arpl
aam
mov
sbb
xor
dec
add
rcrl
inc
adc
into
pop
push
pop
call
add
pushf
sbb
shll
pushf
into
add
cmp
adc
pop
push
dec
push
ret
mov
sub
mov
jb
int
mov
mov
pop
add
dec
popa
xor
out
adc
xchg
cmpsb
push
inc
data16
fadds
sbb
xor
sahf
push
pusha
fwait
shl
in
jno
ljmp
jle
dec
in
jecxz
add
sbb
mov
sub
adc
mov
dec
nop
mov
test
das
aaa
test
sub
jmp
sub
mov
mov
shl
test
push
and
xorl
out
aas
adc
push
flds
les
outsl
cmp
sbb
inc
pushf
dec
push
push
stos
jmp
ja
das
cli
adc
out
jae
sbbb
jnp
sub
movsb
push
into
pop
icebp
pop
lods
sbbb
scas
iret
push
sub
out
push
std
outsl
mov
xor
cmc
or
and
and
and
adc
pushl
std
pop
fld
out
fptan
gs
sti
pop
aas
ret
repnz
inc
pushf
inc
push
fwait
mov
loopne
addb
cmp
sbb
mov
out
stos
out
nop
lock
aaa
std
mov
push
aaa
inc
sbb
adc
shrl
inc
into
test
pop
sarb
add
jbe
inc
sbb
ret
aas
pop
mov
cmp
add
jg
test
add
cmp
cli
sbb
popa
mov
stos
sub
loop
dec
push
scas
jle
mov
arpl
out
mov
mov
cltd
xor
hlt
push
sbb
fwait
subl
adc
imull
fsubrs
imul
and
shll
mov
mov
jne
xor
scas
ss
mov
incl
addr16
pop
xchg
scas
add
pop
aam
mov
sbb
test
lahf
jne
out
call
add
fdivs
mov
cmpl
mov
or
cwtl
mov
pop
jmp
js
mov
mov
imul
ja
mov
mov
lods
pop
adc
es
pusha
mov
jg
hlt
aad
mov
push
inc
and
aam
pop
inc
call
dec
pop
iret
out
cmp
inc
loope
pop
in
out
bound
xchg
pushf
add
add
jnp
jl
in
push
mov
out
cmp
add
loope
and
lcall
fnstcw
ss
mov
in
sub
loopne
sub
dec
in
mov
inc
adc
sub
inc
fsubrs
adc
fcmovb
data16
xchg
pop
out
and
sbb
popa
nop
add
divl
fwait
xor
mov
gs
std
mov
popa
or
stos
dec
in
ljmp
push
push
rcrb
lret
sbb
je
inc
imul
jl
sub
mov
jecxz
ftst
xor
push
and
xchg
dec
add
das
imul
push
xor
cmp
adc
pop
pusha
loopne
out
cltd
add
bnd
mov
test
mov
mov
sub
mov
push
sub
enter
lea
in
pushf
insl
pop
cmp
dec
xchg
cmp
inc
addr16
xor
xchg
sti
push
push
lds
push
jne
clc
enter
dec
into
dec
test
sub
aas
orl
cwtl
cmpsb
popa
adc
mov
repz
orl
ret
xor
out
outsl
and
jl
jb
jno
jp
dec
inc
gs
pushl
out
mov
aas
mov
jnp
push
std
mov
pop
jle
dec
lcall
mov
jg
lea
test
loop
sub
adc
sbb
nop
mov
sub
lahf
ret
add
fsubs
clc
sub
mov
adc
mov
dec
mov
mov
mov
fnstenv
xchg
into
add
push
pop
imulb
stc
int3
icebp
xchg
mov
cmp
std
dec
fcmovnu
shlb
clc
mov
push
ds
lods
js
pop
hlt
test
or
mov
xchg
clc
xchg
cmpsb
fs
mov
xchg
ljmp
icebp
xor
mov
sbb
aaa
pushf
das
sbb
mov
insl
jo
aas
add
pop
sbb
cmc
xchg
push
and
adc
cmpsl
subb
and
notb
mov
cld
sub
mov
cld
out
int3
sbbb
adc
mov
or
add
sbb
sahf
pop
add
push
inc
or
pop
sbb
fildl
add
nop
push
out
or
xchg
or
pop
and
sbb
xchg
int
adc
xchg
leave
dec
add
cs
cld
fs
pop
mov
addr16
jp
stc
dec
fistpll
or
jecxz
sub
xchg
xor
mov
sbb
xchg
mov
cmpsb
icebp
pushf
sbb
clc
jg
and
cltd
or
call
cltd
xchg
or
mov
dec
mov
gs
das
push
xchg
mov
insb
push
arpl
mov
arpl
ja
push
adc
pop
cmp
rorb
cmc
or
jo
cli
mov
into
inc
inc
mov
push
sbb
jo
push
cld
fsub
sbb
inc
stos
mov
mov
dec
push
icebp
and
scas
mov
into
xchg
out
mov
pop
test
aad
adc
push
sti
adc
mov
mov
scas
pop
and
jg
xchg
adc
push
sub
rcrl
adc
fdivrl
ficomps
xor
xor
jbe
call
sti
push
xor
sbb
pop
cmp
xchg
mov
push
ret
sub
inc
movsl
leave
ret
cmp
cmc
pop
pop
mov
scas
or
lcall
pop
pop
add
mov
test
xlat
dec
xor
push
push
int3
std
subl
lock
pop
xchg
adc
pop
icebp
mov
jg
dec
mov
ret
mov
pusha
scas
cs
push
inc
or
mov
mov
push
andb
ficompl
out
xor
cld
jns
in
rorl
mov
mov
xchg
inc
push
call
aam
and
push
inc
rolb
pop
aam
fwait
add
mov
frstor
aaa
cld
fcomip
mov
rolb
mov
or
into
scas
jecxz
add
ljmp
les
jbe
mov
lods
inc
incl
or
leave
test
pop
inc
adc
push
pop
mov
scas
cli
pop
adc
imul
mov
mulps
lret
sub
sbb
movsl
push
jmp
loop
xor
cmp
lods
filds
lock
aam
add
cwtl
mov
into
mov
and
call
out
es
test
cs
jmp
iret
sub
lahf
mov
jle
sub
aad
jo
mov
cmp
enter
or
jl
ror
xor
jmp
loopne
jg
sub
sahf
push
jp
fwait
stos
push
fisttps
sub
xchg
adc
ficoms
mov
mov
push
inc
pop
pushl
lcall
ja
jp
or
enter
sub
adc
decl
ret
loop
mov
adc
repnz
push
mov
adcl
sar
pop
inc
out
jle
lret
mov
add
sub
inc
adc
sbb
pushl
jge
cmp
mov
push
aaa
jno
mov
decl
xor
hlt
jns
cmpsb
fisubrs
popf
jmp
mov
stos
pusha
loop
mov
mov
in
pop
mov
mov
add
pop
push
fs
ljmp
cli
call
lea
inc
mov
pause
inc
pusha
xchg
inc
jg
mov
xor
out
loopne
aas
stos
sub
decl
cmp
divl
data16
jno
sub
popf
mov
or
leave
in
xor
pop
ljmp
mov
leave
dec
and
repz
xor
lcall
sbb
sbb
dec
es
mulb
in
je
pop
mov
dec
mov
push
aam
cwtl
lcall
cmc
jg
inc
jnp
mov
ret
or
daa
cmpb
jmp
inc
outsl
cmc
out
inc
xorb
decl
inc
test
or
mov
decl
pop
outsb
dec
jle
sub
sub
dec
jmp
inc
outsb
mov
cmc
cmpsb
aad
sbb
jle
inc
sub
cmp
mov
inc
fldt
fs
or
mov
sub
lret
cmc
gs
imul
lcall
xchg
lahf
nop
or
adcb
nop
shl
outsb
add
in
repz
push
enter
hlt
sub
ljmp
cwtl
movsl
dec
add
cld
ljmp
hlt
push
mov
dec
pop
enter
push
ret
stc
push
pop
dec
nop
addr16
outsb
mov
or
js
stos
popa
repz
daa
inc
inc
arpl
ret
and
rcl
xchg
mov
repnz
sbb
mov
scas
loopne
enter
popf
push
sbb
mov
aam
dec
sub
cs
adc
das
sarb
xchg
sbb
push
cltd
mov
mov
fldl
inc
decl
mov
mov
lahf
cli
in
fldenv
xchg
decl
or
xor
mov
sti
cmp
in
lds
mov
ss
in
jmp
aaa
in
sbb
stos
incl
imul
in
add
pop
add
dec
cld
or
je
adc
mov
fisubrl
test
sub
sub
aaa
sub
int3
adc
scas
add
out
mov
sub
les
xor
jns
add
sub
outsl
clc
aaa
inc
dec
shr
scas
out
xor
outsb
xchg
test
mov
repz
push
pushl
pop
dec
pop
pop
xchg
outsl
xorl
aam
cltd
call
push
fwait
dec
mull
push
mov
leave
inc
call
out
fldt
std
decl
imul
ficomps
call
shrl
ds
aam
jae
in
decl
cmpl
push
sbb
sub
out
add
mov
test
es
cmpsl
frstor
cld
push
insb
cmp
int
adc
add
push
addb
cwtl
clc
xchg
sub
cmp
cld
jmp
push
mov
xchg
mov
mov
aaa
sbb
mov
dec
out
jb
cs
in
insl
hlt
mov
adc
sbb
shr
and
subl
jg
jle
mov
lcall
cmpsb
out
inc
or
sbb
xchg
dec
cli
aaa
dec
mov
cltd
xchg
fs
mov
rclb
mov
mov
jb
fucomip
inc
imul
pop
stc
push
cmp
sahf
mov
test
test
stos
add
jmp
movsb
add
pop
fwait
ljmp
mov
mov
cltd
shrl
ret
dec
mov
call
daa
sub
adc
insl
rcr
daa
outsl
pop
in
lahf
dec
mov
push
clc
outsl
xchg
repnz
pop
leave
xlat
out
call
push
mov
fs
test
les
outsl
pop
mov
sbb
push
mov
lea
pop
or
pusha
sub
nop
adc
insb
mov
xchg
xchg
into
sahf
cmpb
cmp
sbb
and
pop
mov
sbb
orb
sbb
xchg
add
aam
clc
lret
inc
pop
adc
scas
adc
dec
loop
inc
ljmp
pop
inc
pop
add
jne
ret
insl
lods
mov
or
lret
push
mov
decb
rolb
mov
popf
mov
sbb
push
nop
mov
cmp
out
jl
sbb
or
lcall
push
mov
jnp
mov
repnz
pop
movsl
push
jmp
sub
adc
fnstsw
icebp
mov
cmp
fnstcw
inc
jmp
mov
bound
mov
sub
inc
push
imul
and
xchg
push
dec
mov
lds
xor
pop
xchg
mov
ds
incl
push
xchg
mov
dec
lahf
test
sti
and
ja
aaa
fildl
mov
andb
pop
mov
push
fs
out
lds
xchg
add
mov
and
jp
test
mov
ja
pop
cmpsb
sahf
repz
pop
push
aam
call
dec
mov
inc
jbe
ja
adc
enter
nop
jge
xor
call
pop
xor
xor
lcall
inc
in
dec
pop
pusha
sbb
pop
pop
dec
inc
scas
mov
int
pop
mov
insb
lahf
loopne
sahf
or
push
sbbl
push
das
or
incl
mov
add
shlb
test
jb
cmp
in
push
dec
int
insb
fcompl
lock
adc
or
test
xchg
dec
xor
test
mov
mov
inc
push
ret
mov
cmp
adc
or
mov
xchg
push
mov
push
outsl
add
xchg
and
xor
adc
inc
or
ret
inc
fbld
fildll
sti
xchg
gs
hlt
lret
and
fildl
loop
out
sbb
mov
adc
mov
jle
pop
add
gs
stos
adc
or
test
inc
out
mov
divl
sbb
mov
jno
add
scas
das
lods
or
pop
add
cli
mov
push
or
bound
fistps
jmp
cmc
mov
cmp
insb
inc
lret
nop
rorb
clc
fildl
fcmovbe
pop
sbb
xchg
cmp
sbb
jle
lods
pop
insl
scas
jp
lahf
loop
aam
in
mov
inc
ja
and
mov
sub
jmp
repz
popa
jns
push
scas
div
call
add
mov
cmc
and
and
mov
pop
stos
das
adc
sbb
sbb
js
or
scas
mov
inc
inc
fcomps
add
sbb
clc
push
sbb
bnd
adc
inc
leave
rcrb
je
pushf
aam
inc
scas
mov
scas
jbe
fisttps
dec
stos
push
mov
fxtract
roll
push
es
sbb
sub
xor
push
cmp
sahf
js
pusha
push
sub
pop
dec
and
std
pushl
push
jb
pop
test
inc
and
lcall
mov
jns
lcall
cmc
adc
cmp
lret
test
clc
fsub
rorb
cli
fwait
xor
stos
xchg
sbb
mov
lcall
dec
shl
jge
dec
and
not
xor
sar
test
mov
or
jg
lcall
mov
fisubl
mov
decl
jl
fldcw
ror
cmpsb
fs
mov
fcoml
jg
mov
lods
push
aas
iret
jle
gs
pushf
lret
jns
sbb
pop
add
pushf
cmpsb
mov
mov
test
aad
cmp
outsl
popf
cli
scas
jae
inc
stos
jle
push
lock
scas
into
les
mov
fcomip
inc
insl
push
mov
ficoms
jo
cmpsl
insb
mov
outsl
clc
aaa
cld
push
shrb
push
sub
mov
out
scas
lea
push
arpl
dec
ret
xlat
xlat
jp
mov
in
loopne
xchg
or
test
imul
mov
push
loopne
icebp
ret
test
push
inc
icebp
in
lods
inc
testb
outsl
cmp
outsl
nop
test
std
shl
xchg
pop
xor
ljmp
push
mov
push
lret
insl
or
mov
nop
xor
das
xor
dec
sbb
idivb
pop
push
mov
out
add
fldt
jecxz
jae
jg
mov
out
pop
pop
loopne
stos
mov
sar
xchg
inc
dec
ljmp
and
test
popf
push
dec
incl
sub
aaa
scas
add
pushl
jbe
sbb
or
jmp
or
xor
dec
adc
jne
cmp
frstor
mov
sbb
mov
mulb
dec
jecxz
ja
dec
loope
sarb
adc
ds
sbb
inc
test
dec
out
mov
or
inc
scas
adc
cwtl
pushl
cmp
or
test
xchg
jno
sbb
and
into
xchg
in
xor
lret
cmc
repnz
mov
mov
mov
dec
ja
aam
cmp
ljmp
cmc
jne
push
test
add
fcom
cmpsb
addr16
adc
fnsave
fildll
imul
push
mov
inc
ds
ljmp
fs
add
daa
xorb
jnp
shlb
mov
sbb
sbb
mov
mov
adc
fisttpl
xchg
mov
cld
lods
orl
pop
mov
adc
mov
jmp
mov
jmp
pop
js
test
adc
mov
scas
shl
inc
jnp
stos
lods
pop
mov
jae
cmp
dec
iret
mov
out
mov
out
xchg
inc
add
jo
enter
push
or
push
inc
jb
pusha
mov
aaa
push
push
out
outsl
mov
jl
shll
ret
fcomps
sub
or
mov
dec
xchg
mov
jg
mov
jp
out
and
adc
inc
push
xchg
add
scas
mov
lods
out
cmc
xchg
sarl
jg
dec
add
cmc
ds
hlt
data16
jl
stos
lods
ja
dec
add
in
rcrb
pop
jno
xchg
xchg
movsb
icebp
jmp
pop
call
push
cmpsb
test
xchg
daa
push
in
sub
push
inc
pop
sub
cmp
das
xchg
movsb
mov
xchg
xchg
mov
or
inc
ficomps
push
xorl
sub
jo
decl
ret
scas
aas
cmp
and
outsl
aam
mov
pop
add
scas
xchg
shl
out
fadds
movsb
scas
cli
jecxz
popf
or
sbb
or
jmp
lock
pop
adc
cli
in
jle
push
pushf
test
pop
ds
fnstsw
pop
arpl
jg
fdivs
cmpsb
jge
iret
daa
sbb
aad
sbb
int
lea
or
push
push
sub
jmp
loope
sbb
cmpb
cltd
pop
push
mov
comiss
add
mov
xchg
es
shr
sahf
inc
push
pop
xchg
fldt
mov
xor
in
ds
fcomip
sbb
jae
mov
mov
lcall
cmp
inc
cmp
sub
push
lods
jns
loope
dec
xchg
push
call
cld
in
fiaddl
and
fnstsw
test
inc
fimuls
scas
mov
scas
and
inc
add
mov
dec
fiaddl
lea
jl
lahf
shlb
jne
outsl
pop
neg
cmp
les
test
mov
sub
fdivp
or
mov
and
and
decl
and
cmp
cmpxchg
push
fbld
rorl
or
sbb
adc
fisttps
inc
push
push
fwait
push
adc
loope
jg
pushl
pop
and
xor
fdivr
jge
pop
mov
jmp
jmp
mov
xchg
loopne
outsl
xor
inc
push
imul
adc
and
inc
fcoml
jecxz
mov
sub
lret
mov
loop
push
or
inc
push
cmp
or
lahf
add
test
jmp
iret
push
loope
into
push
sbb
cwtl
inc
call
repz
sbb
xchg
js
rcrb
outsb
ss
jmp
and
add
ss
ja
icebp
mov
shll
push
sub
mov
test
dec
out
es
pop
push
loopne
cmpsl
inc
test
scas
inc
pop
lcall
jnp
add
pop
arpl
mov
scas
push
es
dec
sub
xchg
sub
ljmp
icebp
int
stos
pop
add
cmp
dec
add
gs
nopl
call
jns
pop
fildl
mov
cld
aad
adc
out
clc
dec
pop
push
inc
dec
cmc
sub
cmp
xchg
stos
adc
fldl
shr
insb
jmp
fcomps
sub
jecxz
decl
jmp
clc
xchg
je
adc
pop
sub
les
push
orl
inc
out
jnp
or
es
jo
cld
or
loopne
push
push
mov
shl
push
xchg
pop
sbb
in
pop
pop
js
inc
pop
push
enter
xchg
pop
loopne
lret
aas
dec
sbb
cs
out
push
adc
clc
iret
adc
subb
stos
push
les
cld
push
xor
insl
sahf
mov
add
rcrl
popf
or
mov
xchg
cmpl
adc
int3
push
test
jb
imul
cwtl
jl
je
or
jp
mov
mov
or
cs
ret
fs
adc
out
mov
fidivrl
mov
je
pop
cs
test
push
outsb
mov
mov
mov
jne
mov
push
jg
jo
xchg
xchg
out
lret
xchg
out
cltd
inc
xchg
addr16
ljmp
pushf
sub
das
in
stos
int
cs
dec
xchg
iret
inc
sub
out
pusha
cli
or
adc
mov
test
out
mov
fisttps
mov
das
push
add
dec
push
push
stos
movsl
std
or
xorb
pop
cmp
subl
hlt
sbb
mov
js
add
fists
shlb
add
adc
insl
je
aas
aaa
hlt
jnp
sub
push
mov
stos
or
mov
inc
insb
clc
data16
inc
loop
fsubrs
ljmp
sub
jg
imul
adc
add
pop
mov
fisttpl
or
repnz
imul
mov
mov
test
lret
sub
pushl
bound
inc
lahf
sub
mov
push
lea
mov
shl
insb
sub
add
pop
out
add
mov
out
sar
add
cli
and
jb
aas
jl
cmc
pushl
or
xor
in
insl
sbb
cld
sub
lods
pop
scas
sbb
cmpsl
xor
push
movsb
sti
cmpsb
adc
push
xlat
in
lret
je
add
mov
ds
adc
cs
cmp
stos
bswap
add
nop
incl
movsl
rorb
adc
mov
pop
popl
mov
dec
push
mov
mov
inc
mov
mov
call
fiaddl
incl
push
sbb
lods
sbb
mov
push
cmp
and
pop
jb
inc
into
xchg
sub
pop
cld
scas
cli
mov
popf
dec
out
sub
ret
fisubrl
inc
pop
cld
and
addb
loopne
inc
xor
aaa
mov
xor
enter
fdivp
movsb
and
lods
xor
fldenv
mov
jmp
and
adc
bswap
mov
jae
push
aam
mov
lods
ds
mov
jo
cmp
mov
rcr
jnp
or
nop
pop
push
jbe
imul
gs
xor
and
std
ljmp
call
cwtl
adc
jne
cmp
xor
aas
gs
test
or
insb
xor
sarb
jmp
push
inc
xchg
mov
js
or
push
rcr
and
les
add
repz
aaa
sub
imul
jle
sahf
lcall
mov
lret
pushf
loope
push
xor
ror
incl
pop
outsb
cltd
inc
mov
xchg
sbbb
fidivrl
mov
xchg
lods
call
mov
out
loop
push
call
fwait
testb
xchg
or
xchg
js
incl
ret
pop
add
test
push
iret
cld
adc
cld
lods
jbe
xchg
or
push
lods
int
lods
stc
jmp
shl
hlt
pop
jb
gs
pushl
adcl
cltd
mov
out
sub
pop
hlt
ljmp
shrb
loop
sub
int
dec
push
fmulp
jnp
enter
std
xchg
dec
mov
addl
sub
insb
jmp
or
mov
xchg
fst
imul
mov
mov
sbb
cwtl
and
filds
call
xchg
lods
dec
xor
lds
rolb
mov
out
clc
je
in
pop
mov
mov
imul
ljmp
decl
nop
imul
or
lcall
nop
push
int
ja
xchg
cmpsb
enter
shlb
outsb
push
mov
xor
inc
cli
or
lods
iret
sbb
push
insl
jmp
dec
dec
jp
loop
das
mov
in
add
sub
cmp
jbe
aam
xchg
aam
add
dec
jl
jl
xchg
ret
fsubrl
jns
push
mov
mov
fcompl
push
scas
add
push
xor
ljmp
pop
mov
inc
lcall
jle
xor
ja
sarb
ljmp
inc
sbb
xor
sti
mov
js
movsl
jecxz
popf
xchg
ret
call
inc
push
nop
popf
xor
sbb
leave
jo
loop
xor
shll
les
ljmp
das
les
fs
mov
push
cmpsl
inc
jge
and
js
pusha
out
add
push
mov
into
icebp
repz
dec
inc
dec
aam
aad
xchg
jnp
in
pusha
outsl
push
mov
lret
inc
pop
push
mov
dec
lcall
mov
test
int3
loopne
sti
ja
mov
pop
inc
xchg
ret
addr16
and
sbb
add
test
pop
insl
out
add
cmpb
sti
pop
mov
or
mov
je
int
jle
xchg
mov
divb
mov
cltd
pop
or
pushl
adc
sbb
push
adcb
xchg
push
flds
in
mov
mov
mov
push
pop
dec
pop
sbbl
hlt
or
in
ret
add
mov
lahf
sbb
jp
movsb
hlt
cmpsl
sbb
test
xchg
add
inc
cs
incl
push
push
adc
sub
dec
test
hlt
cmp
fsub
jno
rcrb
adc
adc
jbe
adc
jge
insb
pusha
pusha
push
ds
jae
pop
into
xchg
and
lcall
mov
mov
lcall
mov
add
lcall
out
out
and
dec
loopne
daa
scas
ljmp
mov
testb
adc
jne
push
cmp
outsb
sar
mov
inc
mov
fidivs
adc
pop
std
jp
xchg
sbb
roll
icebp
gs
pop
dec
inc
xchg
clc
jg
adc
int3
fnstsw
mov
fwait
mov
test
mov
shlb
fs
fwait
cmp
mov
mov
cwtl
rcrl
in
mov
jg
lock
mov
mov
pop
in
lods
sbb
ret
jnp
or
std
mov
inc
inc
xor
decl
lods
inc
mov
dec
lock
sub
cmp
in
pusha
xchg
out
mov
mov
push
jecxz
pusha
cwtl
sbb
inc
loope
faddl
xchg
fsubrs
test
and
inc
scas
repnz
jl
sub
popf
mov
jle
mov
push
ds
dec
add
jmp
pop
mov
mov
or
push
xor
repz
sbb
adc
incl
sbb
push
sbb
rol
gs
sub
and
and
fisttpll
xchg
or
push
loop
push
pop
fiadds
aam
call
loop
js
movsb
jg
dec
cli
addr16
xor
mov
rcl
jl
xchg
inc
test
push
cmp
imul
cmp
xchg
xchg
dec
and
inc
inc
movsb
jg
lods
fcomip
add
into
dec
add
ljmp
push
push
xchg
push
jmp
inc
out
lods
enter
cld
iret
sbb
pushl
mov
adc
jae
add
pop
shrl
stos
repnz
xor
jbe
pop
icebp
mov
stos
out
loope
arpl
jecxz
inc
out
jbe
int3
imul
push
aam
aam
mov
in
jge
pop
aas
je
ljmp
dec
clc
decl
xchg
ds
call
insb
push
ud1
mov
inc
mov
addb
push
mov
xchg
call
mov
adc
push
jns
mov
or
jl
dec
or
scas
ljmp
or
gs
or
xor
lahf
sbb
jmp
clc
and
in
or
mov
rolb
lcall
mov
sbb
stos
inc
sub
pop
pop
loope
or
fwait
pop
jl,pn
ljmp
bsf
call
bound
sub
rcrb
insb
lea
jmp
call
lret
mov
lcall
dec
pop
jnp
pop
xchg
test
dec
and
pop
gs
ljmp
subl
mov
lods
scas
jb
jmp
jl
ret
and
xor
js
inc
inc
fbld
enter
pop
popa
lcall
out
push
add
aam
mov
xchg
ds
push
xchg
mov
add
sbb
rcr
dec
sbb
into
cwtl
notl
xor
mov
into
es
clc
mov
test
movsl
jb
and
outsl
ja
rcr
sub
cmpsb
outsb
orb
mov
xchg
or
dec
jb
test
xor
mov
std
jle
sub
mov
jle
pop
pop
xchg
mov
mov
movsl
pop
jne
push
pop
mov
or
add
cmp
xchg
mov
sub
shll
lods
mov
scas
in
pusha
test
clc
rcrb
mov
push
idiv
movsl
sub
jo
idivb
pop
push
rcl
iret
inc
mov
mov
cmp
sahf
xchg
and
into
add
and
cs
leave
clc
out
mov
jl
inc
cmp
jle
mov
mov
addb
int3
cmpsl
test
movsb
out
clc
fidivrl
loope
out
pop
insb
nop
hlt
add
incl
popa
mov
mov
cwtl
sub
test
and
xlat
les
pop
adc
out
shlb
cmp
fsubrs
xor
mov
cmp
lcall
and
lret
and
mov
loop
aas
sbb
cld
jnp
push
cwtl
in
xlat
and
push
sub
mov
xchg
jg
out
sub
lea
outsb
sbb
sar
scas
ret
adc
jo
dec
push
sbb
dec
push
or
xorb
out
pushf
incl
sbb
mov
and
insl
add
fmull
push
jns
ja
inc
cld
and
notb
add
push
cmp
clc
push
lret
dec
xor
jle
add
xchg
inc
push
pusha
pusha
jae
daa
test
call
psubusw
fstpt
sub
jge
roll
test
mov
lods
inc
cmpsb
sub
call
mov
hlt
pushl
push
cli
fs
mov
rcrb
out
cltd
cmc
inc
adc
rorb
pushf
mov
mov
mull
xchg
pop
cld
mov
jg
pop
adc
fs
xor
mov
clc
jno
jbe
pop
in
add
xchg
aam
sbb
xchg
sub
out
orb
mov
movsl
jge
pop
cmp
or
and
das
xchg
popf
xor
pmulhuw
pop
cld
pop
in
jmp
cmc
loop
ret
enter
lods
or
frstor
pop
xor
mov
stc
and
orl
aam
sahf
mov
lods
js
cld
mov
loopne
xchg
aad
adc
jp
cli
xchg
and
sub
mov
adc
adc
jge
fcomip
or
into
pop
ss
inc
movsb
sti
aaa
sbb
inc
into
adc
ja
neg
inc
repz
mov
es
das
clc
jg
sbb
addr16
add
pusha
inc
sub
mov
inc
cmc
xchg
insb
cld
push
xchg
stc
mov
mov
fcomip
sbb
adc
or
pop
mov
fld
mov
test
out
test
aaa
loop
ret
fdivrs
lds
jne
fwait
inc
mov
and
xchg
mov
xchg
fistpll
and
repnz
inc
divl
jg
call
loopne
cli
in
je
lds
divb
sbb
jnp
ss
scas
inc
ljmp
in
mov
jl
ret
xchg
lcall
mov
das
pop
push
bound
xchg
pop
mov
test
jmp
int3
jno
xor
or
inc
fcmove
jle
push
pop
jge
es
mov
or
popa
mov
push
adc
scas
jmp
jecxz
cld
cmpl
dec
scas
mov
push
mov
xchg
push
push
cmc
bound
dec
movsl
lret
repnz
mov
dec
loop
pop
ljmp
cli
incl
pop
xlat
rorl
xor
dec
mov
stos
dec
cld
sub
leave
sbb
cmp
sub
pushl
test
test
mov
call
jmp
sarb
xor
pop
icebp
lcall
xor
mov
in
mov
lds
lret
and
pop
insb
jg
sbb
cmp
clc
push
sahf
or
clc
ja
out
adc
test
stos
mov
add
lock
addb
lret
mov
cmp
or
add
xchg
xchg
mov
mov
pop
cs
test
jnp
push
in
mov
rcll
push
dec
lds
mov
add
mov
and
mov
lea
mov
loop
pusha
cld
and
add
movsb
or
loopne
sbb
scas
clc
push
mov
sahf
dec
sahf
cmp
cmp
xor
nop
ss
xor
lahf
push
fs
ja
mov
xor
fs
push
xchg
jl
pusha
lret
inc
jnp
stos
mov
inc
cmp
sbb
pop
jle
leave
pop
les
push
jne
and
out
pushf
mov
mov
das
cwtl
sub
xchg
mov
sub
sub
dec
ljmp
mov
in
mov
lahf
arpl
cmp
js
arpl
lcall
sub
jge
int3
int3
loopne
aaa
cmpl
cs
pop
cltd
adc
xchg
push
push
outsl
mov
aam
test
sbb
mov
cmp
jl
je
push
adc
add
or
xchg
adc
ja
lcall
aam
and
jg
jns
push
sbb
sahf
pushf
xlat
popa
cmp
loopne
mov
outsl
clc
jl
in
pop
dec
dec
fwait
roll
arpl
cmp
ljmp
xor
insb
rcrl
test
push
jbe
fiadds
xor
xor
pop
lcall
cld
xchg
mov
cmp
xor
outsl
mov
sbb
mov
jg
jae
mov
adc
mov
lds
mov
dec
mov
jg
ja
clc
mov
push
pop
in
clc
jge
add
incl
jb
mov
nop
lods
xorl
out
clc
pop
and
mov
add
sbb
test
aam
loop
lds
sti
sbbl
sub
xor
jle
jg
decl
aad
in
or
pop
andl
call
mov
or
push
js
lods
jo
add
out
push
jle
mov
pop
lds
inc
daa
xor
shlb
movsb
mov
mov
gs
and
cmp
sar
decl
push
aas
call
pop
jns
dec
pop
mov
push
sarl
fiaddl
add
push
jl
pop
cmc
mov
xchg
repz
xchg
dec
sub
ret
sarl
jmp
aad
push
add
xchg
xchg
loopne
and
inc
mov
lret
imul
pushf
jae
int3
jmp
stos
sbb
test
out
cmp
inc
rcr
in
xorl
ficompl
enter
adc
fdivl
cld
ljmp
cli
ja
dec
sbb
les
mov
insl
ja
jne
inc
xchg
lods
and
pop
scas
popa
stos
push
clc
shll
ja
mov
lea
inc
ds
mov
push
xchg
cli
jg
insl
mov
jmp
rorb
sub
adc
mov
test
ror
xor
aam
add
sub
mov
mov
adc
adcl
pop
out
js
fwait
push
sub
and
ljmp
lret
add
add
add
and
push
xchg
pop
insb
mov
jb
call
fisttpll
sar
cmp
dec
lods
pop
call
xchg
mov
nop
push
sub
push
and
lea
jns
pushf
cmp
stos
inc
js
mov
insb
arpl
sub
ljmp
push
aam
mov
jecxz
dec
cmpb
jmp
pop
cld
and
fiaddl
out
inc
mov
jae
cmpsb
notl
out
sbb
push
shlb
dec
ss
fldcw
out
cmp
outsb
loopne
sub
mov
sahf
push
xchg
js
outsl
sub
jecxz
out
sbb
std
push
insb
pop
popf
add
add
loopne
ret
out
stos
and
incl
ror
nop
int
or
add
outsb
dec
and
stos
dec
mov
scas
pop
arpl
stos
aad
test
stc
push
xchg
movsb
xor
arpl
mov
jg
mov
cmc
pop
sarl
subl
xchg
scas
cltd
in
and
ja
clc
aam
repz
cmp
incl
ljmp
ljmp
iret
insb
jnp
add
sub
mov
std
outsl
push
and
or
adc
cwtl
xchg
fwait
pop
or
sub
nop
xor
aas
insb
nop
outsl
pop
cwtl
or
dec
xchg
icebp
call
sbb
push
out
xor
lcall
inc
push
jno
dec
mov
and
mov
jmp
cs
enter
fidivrl
adc
mov
adc
orb
sti
fstl
in
mov
pop
jo
jmp
lds
add
xorl
lea
and
insl
jge
data16
ds
cld
pop
or
popf
outsb
cli
call
aam
rcll
aad
pop
sub
mov
mov
call
incb
fwait
insb
dec
jg
lods
mov
pop
jbe
lcall
sub
pop
cld
out
das
pop
cmc
mov
xor
jno
push
mov
imul
fdiv
sbb
imul
sbb
xchg
sar
mov
push
fidivrs
adc
out
jae
jno
lahf
decl
inc
lods
cmp
dec
adc
clc
jae
jecxz
enter
jle
and
adc
into
xlat
addr16
jecxz
pop
jge
lret
mov
cmpsb
test
cld
add
int3
mov
inc
adc
fistps
push
dec
xchg
repnz
push
jge
xor
mov
out
mov
inc
in
pop
cmp
adc
jmp
add
jns
nop
inc
push
bound
mov
mov
int
dec
ljmp
push
or
lret
shlb
fldl
call
add
es
andb
pop
iret
and
mov
jb
push
in
outsl
test
dec
iret
mov
mov
in
stos
arpl
mov
sbb
hlt
fcmovnu
push
flds
or
movsl
out
pop
xor
lock
add
mov
mov
loop
cld
lcall
push
push
add
mov
rcl
insl
stc
inc
in
into
sub
mov
ss
outsl
imul
dec
inc
push
andl
sub
dec
ss
shll
jg
and
sub
adc
inc
mov
and
icebp
push
popa
jmp
arpl
inc
pop
mov
pop
xchg
insl
ret
mov
sbb
stc
and
in
imul
jns
incl
addb
mov
iret
dec
lret
pop
jmp
or
or
mov
sbb
fbld
adc
add
xor
and
cwtl
xor
xor
iret
add
movsb
xchg
incl
inc
xchg
popa
inc
lea
out
dec
jne
mov
jl
push
jne
aad
lcall
pop
cmc
and
sub
xchg
out
sbb
inc
decl
dec
jmp
fwait
dec
js
pop
sar
repz
lods
inc
ds
popf
add
fcmovnu
sbb
dec
mulb
cli
sahf
dec
icebp
rcrb
hlt
leave
push
in
sub
jge
jge
fcomip
call
mov
aaa
stos
dec
xor
sub
inc
lret
xchg
cli
ljmp
cmp
push
fstps
cmp
mov
mov
scas
mov
das
sahf
and
scas
sbb
fs
sahf
ds
and
mov
dec
popf
jmp
xor
mov
dec
call
call
aam
push
inc
mov
pushf
loopne
sbb
mov
push
pop
and
xchg
fistps
or
stc
fbstp
or
cli
jbe
stc
fwait
sub
jg
ds
aas
add
jb
mov
xchg
ja
dec
das
xor
cmp
cmp
enter
pop
mov
cmp
test
add
sbb
and
cs
or
fisubrs
sarl
sti
fsubrl
sbb
push
or
xchg
dec
js
inc
add
cltd
sub
mov
daa
mov
rol
mov
adc
dec
cmpsl
inc
outsb
div
scas
pop
int
ja
pop
hlt
mov
mov
loopne
mov
test
cmp
int3
jb
rcl
cmp
sub
jmp
sub
clc
lods
stos
scas
pop
lret
pushf
push
in
jl
loop
movsl
jb
dec
mov
lret
inc
dec
jmp
cmp
jmp
add
in
mov
stos
xor
pop
cmpsl
pop
cmp
enter
ja
loop
push
jne
pop
mov
rcrb
lret
fdivrl
pop
stos
sbb
jg
imul
jecxz
movsb
aad
test
stos
inc
ljmp
inc
or
movsb
ja
sbb
dec
outsl
mov
mov
pop
push
sbb
icebp
jne
lcall
mov
stos
sbb
lods
add
fadds
dec
lock
and
sbbb
rol
loop
fsubs
adc
frstor
jg
pop
repnz
jb
jmp
adc
mov
cmpsl
push
iret
mov
or
sub
clc
loop
int3
repnz
inc
les
scas
push
es
sub
arpl
mov
vpsllw
sub
cwtl
push
faddp
incl
aam
jo
outsl
fists
add
cmp
xor
and
stc
in
lcall
add
lcall
cwtl
mov
and
mov
stc
repnz
cmp
add
and
jmp
pop
sub
out
adc
and
xor
cmp
sbb
xor
adc
cmpsl
aam
add
push
fcomip
lcall
test
pop
mov
sbb
inc
jns
sub
ret
mov
lods
filds
inc
scas
jle
inc
inc
jae,pn
adc
cld
mov
mov
dec
ret
xor
or
fbld
adc
in
pusha
adc
loop
mov
and
mov
pop
jnp
push
shrl
mov
aas
decb
mov
dec
lcall
fistpll
mov
loopne
insb
outsb
mov
fbstp
cmp
dec
aas
fcoml
ret
sbb
imul
pop
nop
push
leave
std
out
sub
jbe
jnp
add
mov
data16
or
jg
cmp
xor
cli
decl
clc
repz
dec
lret
mov
dec
test
mov
jnp
fcmovnu
sub
adcb
stos
lods
imul
imull
push
mov
dec
xchg
inc
clc
pushf
imul
sbb
pusha
js
mov
hlt
mov
aad
mov
xor
sbb
jge
and
jmp
ficoml
adc
cmp
fcmovb
icebp
cwtl
inc
cmc
or
inc
fwait
incb
jne
dec
mov
aam
push
adc
and
pop
dec
incl
fistps
ljmp
std
fcomip
sbb
stos
or
dec
aam
jno
or
ss
jge
dec
es
incb
fldl
aad
out
insb
jle
pop
push
adc
in
ljmp
add
push
push
xchg
cmpsl
dec
dec
pop
loope
add
lcall
lahf
jle
sbb
mov
outsl
cmp
mov
or
call
pop
add
pusha
jbe
addr16
test
inc
add
incl
push
inc
lds
and
fstpl
cmpsl
aam
stos
dec
sub
mov
inc
pop
int3
adc
jl
fistpll
adcl
adc
or
in
or
xchg
outsl
pop
jecxz
dec
jl
pusha
not
mov
fsubrs
pop
mov
arpl
pusha
add
outsb
lcall
inc
adc
aam
adc
outsb
fcomip
out
cli
ja
fidivl
sub
dec
add
jg
rcrb
pop
inc
loop
jge
mov
pop
push
push
loop
es
int3
jle
mov
sub
sbb
outsb
lret
cmp
addl
decl
sbb
xchg
pop
ret
cltd
inc
jmp
aas
add
xchg
cmovo
std
jmp
xor
adc
mov
scas
mov
push
adc
test
inc
dec
les
cmp
mov
cmpsl
jns
xchg
and
das
adc
cmp
jnp
and
pop
jg
mov
and
dec
outsb
mov
jmp
mov
aad
push
imul
xor
push
pushf
inc
adc
outsb
inc
inc
lcall
outsb
jae
and
lahf
dec
push
call
or
call
shl
cmpsb
jne
test
cmp
mov
cwtl
push
aad
test
mov
shlb
das
jne
nop
xchg
bound
add
loope
fnstcw
js
ficoms
dec
cmp
dec
clc
filds
cmp
xor
sbb
push
call
es
gs
ljmp
outsl
js
test
rolb
pusha
cwtl
xchg
cmpl
loope
sarb
add
fcomip
in
mov
sub
add
fcoms
xchg
int
hlt
lea
sbb
or
jb
dec
sbb
push
and
bound
push
adc
popa
lret
clc
das
mov
out
xchg
cmp
mov
jmp
push
rcll
bound
sbb
insl
int
jbe
ret
push
mov
ja
out
shl
out
arpl
inc
jbe
or
hlt
ja
dec
mov
push
xlat
jmp
dec
mov
dec
jo
push
scas
aas
fldt
dec
mov
fcmovnu
ret
clc
mov
cmc
mov
jmp
jno
cltd
mov
pusha
pop
sbb
xor
pop
jae
out
mov
sarb
in
xchg
and
inc
sti
out
mov
fnsave
add
mov
std
inc
jb
jg
jg
stos
cmp
mov
pop
pop
xchg
push
adc
ljmp
lcall
dec
ja
push
iret
and
dec
repz
xchg
es
test
cmpsl
sub
repz
mov
xchg
shrb
fcomip
jle
cwtl
jmp
lret
aad
fbld
mov
jne
arpl
ljmp
clc
xor
jno
cli
cmp
mov
mov
dec
inc
sar
outsl
cli
jge
subl
xor
popf
and
loop
adc
testb
aam
stos
andl
pushl
sbb
and
add
and
gs
je
shrl
call
loop
mov
or
mov
fcoms
sbb
and
push
add
out
idivb
ja
mov
int3
mov
lret
jbe
popa
sbb
xchg
pop
and
sti
jl
push
xchg
ljmp
inc
lods
sbb
or
xchg
mov
adc
scas
repz
inc
and
dec
sbb
mov
pop
loop
pop
inc
sahf
mov
xorb
mov
and
sub
cmp
inc
test
sub
movl
into
jecxz
scas
out
jne
push
fisttpll
jle
loopne
movsl
rorl
push
test
xchg
shlb
mov
sub
mov
sub
mov
nop
add
aaa
ja
stc
or
push
in
pop
scas
clc
sbb
je
inc
ds
cmc
rcl
test
outsl
nop
lods
sub
inc
rcrb
nop
inc
ds
mov
idivb
inc
cwtl
jae
cmp
daa
enter
xchg
pop
mov
or
jmp
call
movsl
adc
pop
outsb
je
inc
mov
fiaddl
xchg
cmc
insl
aad
mov
inc
popa
pop
nop
clc
pop
lds
leave
or
push
popf
lock
movsl
mov
mov
jmp
aad
mov
xchg
mov
add
lcall
mov
es
enter
test
mov
dec
dec
sub
outsl
jnp
jo
mov
aas
push
mov
pop
xlat
add
adc
sbbl
mov
push
movsb
shr
jne
adc
adc
lods
out
adc
cwtl
test
xchg
or
imul
fbstp
enter
lods
fisubs
xor
ljmp
and
add
jle
sbb
fcoml
inc
cmp
das
pop
ds
pop
addl
mov
aas
fimull
sti
pop
aad
mov
into
decb
mov
lea
fcomi
dec
jl
cmpsb
decl
fcmovnbe
jmp
imulb
push
mov
push
sarb
sub
loopne
xchg
dec
ret
aaa
sbb
or
mov
and
insl
or
jg
nop
push
xor
push
pop
adc
stos
call
xlat
negl
aam
jl
pop
cmc
xchg
lcall
jbe
adc
bound
loopne
or
inc
xchg
in
adc
add
adc
mov
xchg
clc
scas
inc
into
add
movsb
sbbb
sub
sub
xlat
sbb
mov
sub
mov
clc
jb
xchg
arpl
or
in
or
cltd
fisubl
or
sbb
xchg
and
pop
loopne
mov
cmpb
xchg
int3
jo
fdivl
pop
cmp
jb,pt
mov
add
repz
mov
xor
pop
dec
les
cmp
sub
and
idivl
std
enter
dec
ss
xor
mov
jl
nop
stc
aaa
pop
shrb
jns
add
sub
inc
call
inc
hlt
pop
addb
mov
scas
adc
call
mov
cmpl
incb
adc
mov
scas
sbb
leave
mov
fs
dec
cs
mov
and
sub
xchg
pushf
fcmovbe
fsubl
pop
loopne
sar
stos
lret
mov
pop
test
xor
pop
lock
adc
jo
imul
dec
add
fcomps
xchg
xchg
jne
lock
or
mov
sbb
add
into
sub
jg
xchg
fstl
and
daa
or
js
loopne
shll
add
hlt
jnp
and
bound
adc
pop
insl
js
and
xor
xor
ja
cs
movsb
push
mov
std
pop
inc
ss
push
dec
inc
loop
sti
int
mov
stos
xor
xor
pop
xor
loopne
stos
insl
mov
sbb
or
add
test
sub
in
test
loope
xchg
mov
sub
imul
xchg
incl
inc
mov
xchg
jno
mov
in
push
pop
push
xor
aaa
sbb
and
jp
ficomps
decl
cli
pop
sub
lret
mov
jle
stc
cmp
into
xor
add
add
pushl
mov
inc
xor
adc
repz
xor
or
mov
lock
fbld
cwtl
mov
fnstenv
pop
sti
cmp
xchg
sarb
inc
sub
js
cmp
add
pop
or
call
push
call
jne
jp
repz
xor
stos
mov
fbld
mov
sbb
mov
sbb
pop
mov
adc
lock
xchg
pushf
shrb
mov
push
dec
arpl
mov
mov
into
popf
mov
add
popa
iret
sub
adc
adc
mov
rolb
add
adc
pop
mov
sub
fldt
leavew
cmc
jns
mov
inc
mov
mov
mov
enter
out
and
sbb
insb
sti
roll
loopne
push
cmc
mov
mov
dec
add
fidivrs
adc
into
add
inc
dec
ret
inc
jmp
or
adc
lods
inc
mov
push
bound
scas
xor
pushf
ret
inc
outsb
jge
mov
or
adcb
fdivp
jmp
push
push
rep
adc
mov
push
rcl
push
inc
test
pop
rcr
lock
sti
mul
movsb
insl
dec
inc
xor
jle
mov
insl
jl
push
xor
out
add
das
clc
scas
shlb
cmpsl
cmp
insb
pop
leave
inc
in
negb
addr16
sbb
lcall
lock
pop
add
fstpt
mov
and
cmp
push
scas
mov
mov
stos
inc
lret
aad
stos
pop
aaa
or
mov
aam
push
ja
mov
sub
pop
inc
sar
call
ljmp
add
fnstcw
jge
jmp
mov
fcomp
xor
lods
mov
xor
jmp
cs
jp
shll
stc
or
decl
push
loope
mov
xchg
call
xchg
int
sub
push
mov
ret
pop
lret
fwait
sbb
ret
sar
pop
leave
into
push
mov
iret
add
dec
lahf
ret
jle
push
or
and
mov
pop
lret
mov
hlt
sub
repnz
inc
jae
or
mov
pop
push
clc
cmp
movsb
jne
lret
or
add
std
sub
je
push
mov
dec
jno
pop
mov
add
xor
call
and
or
push
lret
cmc
lcall
pop
cld
pop
ljmp
shll
jns
jno
jg
mov
cmc
xor
inc
pop
mov
in
mov
icebp
pusha
subb
inc
repnz
sub
inc
out
adc
cmp
icebp
insl
popa
dec
je,pn
mov
jae
incb
pop
rcrl
lods
xstore-rng
cmpsl
rcll
add
sub
push
mov
push
aaa
sbb
insb
loop
scas
idivl
fisttps
fldl
sub
dec
push
pop
and
lods
jg
fdiv
xchg
and
scas
pushl
stos
cld
shl
jns
std
ss
xor
sub
or
mov
mov
sbb
lock
add
clc
mov
push
mov
pushl
adc
daa
mov
sub
add
ret
scas
xchg
fildll
pop
jle
add
in
dec
call
pslld
mov
cltd
push
cmpsb
mov
xchg
pop
and
push
xor
xor
dec
cmc
or
jb
pushl
std
test
mov
jecxz
cwtl
xor
fs
insb
ss
cmp
pop
loop
or
sti
cs
or
inc
push
pop
adc
pop
cmpl
sub
fbstp
mov
or
push
negb
mov
mov
adc
sub
inc
sbb
in
test
aas
mov
mov
cld
ja
xor
jmp
faddl
sub
push
jmp
dec
cmp
adc
movsb
test
xchg
xor
adc
mov
frstor
mov
movsb
loopne
scas
lods
mov
xorb
rcrb
jg
mov
xor
xchg
ljmp
dec
sbb
mov
jae
mov
pop
cmp
sub
out
mov
pop
push
pop
or
mov
add
or
jg
jbe
sub
shll
scas
das
or
pop
aam
shl
sbb
and
xor
mov
mov
xchg
add
dec
xor
fstps
inc
sbb
push
inc
call
and
rolb
push
daa
loopne
fcompl
adc
clc
mov
sbb
pop
imul
clc
sbb
and
or
movsb
mov
dec
pop
and
sub
jg
dec
xchg
xchg
pop
cmp
push
and
cmc
xor
dec
ja
xchg
mov
mov
aam
scas
addb
fld
push
mov
idiv
decl
or
cmp
cmp
pop
stc
jmp
sbb
mov
and
mov
in
mov
int3
rcr
lea
fidivrl
bound
inc
enter
dec
stos
mov
gs
pusha
jmp
sbbb
js
in
neg
das
or
fiadds
xchg
mov
mov
mov
pop
adcl
dec
pop
or
mov
or
xchg
pusha
movsb
pop
pop
rcrb
mov
cli
inc
ljmp
cmpsl
fistpll
je
subb
aaa
fadds
sbb
pop
into
aam
fstps
out
lcall
sub
push
sbb
dec
xchg
xor
outsb
xchg
add
dec
repnz
xchg
bound
dec
je
lock
scas
lret
jnp
scas
lock
fadds
xchg
cmp
adcb
push
or
rcr
dec
in
xchg
in
addr16
stos
pop
push
mov
sub
mov
das
les
add
mov
cs
fildll
add
push
pop
inc
aaa
mov
in
xor
in
lods
add
adc
lcall
xor
xchg
out
add
jnp
movsl
inc
imul
pop
sub
mov
mov
lcall
add
inc
aas
insb
incl
dec
mov
insb
push
lds
adc
mov
fsubrs
out
pusha
cmp
inc
jmp
dec
cmp
das
clc
out
cli
mov
test
pop
insl
imul
inc
push
jae
lret
dec
cmp
cmp
adc
out
rcll
mov
test
sahf
js
scas
sub
es
lahf
xlat
stc
stc
scas
mov
jmp
push
push
in
mov
ja
mov
sbb
roll
iret
push
inc
cmpsl
pop
fbstp
dec
dec
push
dec
pop
cli
cs
scas
je
ljmp
xlat
pop
or
xor
je
xchg
jmp
out
and
mov
push
inc
jmp
test
add
jge
adc
nop
xchg
xchg
pop
test
mov
mov
mov
mov
out
mov
popa
dec
xlat
adc
repnz
or
pop
mov
adc
call
jmp
pop
mov
mov
push
pop
cmp
gs
xchg
push
pop
ss
int3
cltd
pop
and
cmp
dec
inc
je
daa
add
dec
xchg
lcall
lds
mov
rorb
stos
xchg
test
dec
std
addr16
repz
add
ljmp
or
pop
push
daa
stos
testl
ja
in
les
loopne
xchg
ret
push
inc
sbb
jns
mov
ja
jg
lcall
fcmovbe
xor
mov
mov
inc
mov
xchg
mov
call
ror
sub
inc
jp
lret
and
loopne
dec
push
or
jbe
hlt
or
fbld
mov
test
mov
mov
js
or
dec
lds
mov
mov
pop
mov
mov
pop
pushf
pop
cmp
and
bound
in
mov
jbe
mov
repz
mov
pop
mov
fidivs
int3
imul
jno
mov
pop
inc
or
mov
push
inc
push
add
pushl
sub
push
or
fisttps
loop
sbb
call
stc
and
fwait
cltd
xchg
cwtl
jecxz
push
cld
jmp
daa
inc
sub
or
push
inc
or
push
pop
repnz
cmp
popa
adc
lods
cmp
push
scas
sarl
es
mov
cli
les
out
sub
mov
pop
and
jmp
lds
push
cmp
lods
arpl
dec
sbb
sbb
push
pop
jo
pop
push
stc
or
jmp
mov
int
aaa
push
xchg
dec
jo
sbb
movsb
das
clc
in
incl
in
or
dec
push
and
adc
inc
lock
incl
mov
shlb
mov
fists
stos
pop
inc
push
push
sbbb
mov
adc
jae
aaa
in
push
and
outsl
inc
or
or
inc
decl
jne
enter
enter
popa
pop
cli
mov
mov
repnz
xchg
cmpsl
pushl
jle
cmp
mov
mov
cld
icebp
outsl
xor
aas
pop
jno
hlt
jae
push
sub
call
cmp
add
shll
jno
mov
aas
and
lret
addr16
dec
call
cmp
mov
cltd
mov
cltd
xchg
loopne
and
in
dec
mov
mov
dec
mov
add
or
jae
daa
push
push
jg
lcall
pop
sub
sbb
mov
fists
ror
jmp
sbb
cmpsb
fdivl
xor
sarl
faddl
icebp
adc
mov
mov
adc
add
lcall
ljmp
xchg
pop
das
or
cmp
sbb
fmull
outsl
cmc
or
mov
sbb
and
sbb
cmpsl
lods
and
sub
mov
shl
mov
sbb
in
lods
sub
dec
push
xor
ja
mov
add
sub
andb
sbb
jg
and
cmp
rcrb
ss
icebp
pop
in
cli
jg
movsl
insb
jb
mov
xor
shrb
mov
add
inc
dec
jbe
femms
sbb
push
outsb
fildll
inc
and
addb
jg
add
shrb
jge
jge
add
and
test
mov
arpl
lret
sub
cmpsb
adc
push
jne
push
sub
dec
loop
and
fdiv
and
xchg
lock
inc
das
sar
into
pop
in
shl
jae
jno
inc
inc
mov
lock
adc
add
cmp
movsb
decl
pop
imul
mov
xchg
lcall
push
jb
ret
lock
scas
mov
fs
dec
mov
cmp
add
popf
arpl
mov
jp
lock
scas
push
dec
das
clc
push
lcall
out
xlat
adc
xchg
add
xlat
int
out
nop
mov
hlt
outsb
add
jbe
mov
cmp
push
xchg
shrl
mov
xor
test
insb
mov
std
pop
insb
adc
jns
bnd
bound
pop
mov
fidivrl
mov
int
mov
pop
ljmp
inc
arpl
andl
call
mov
sbb
jge
push
cld
xchg
mov
cld
adc
mov
iret
out
mov
insb
loopne
leave
mov
mov
lcall
out
sbb
ss
jge
inc
jg
aam
je
adc
cwtl
mov
xchg
lods
xchg
and
and
mov
cmc
xor
and
fbld
mov
addr16
sub
mov
inc
fldt
cltd
pop
ficomps
or
ljmp
adc
filds
mov
mov
xor
add
pop
scas
les
int3
call
lret
push
add
lea
pop
sub
mov
js
fisttps
iret
push
xchg
cli
jmp
inc
cmp
hlt
imul
int3
dec
push
mov
sub
or
decl
and
xor
sarl
pop
movsb
dec
mov
mov
ljmp
sbb
fistpl
outsb
mov
push
jno
iret
stos
lahf
xorb
enter
out
push
pop
pop
pop
repnz
jmp
imull
xor
sub
mov
fsubr
or
mov
and
xor
movsb
addr16
stos
add
xor
adc
outsb
adcb
or
xchg
cmp
nop
test
jo
jne
aas
sti
cmc
mov
mov
jo
cmp
mull
mov
mov
mov
push
mov
jg
mov
sbb
fcmovb
xor
inc
cmpsb
icebp
scas
cmp
mov
bound
pushl
lcall
mov
pop
leave
mov
stos
decl
sub
or
or
fiadds
ficompl
pop
dec
orl
mov
dec
scas
movsl
jne
or
in
out
lds
push
sbb
sub
stos
fnstsw
xor
lds
xchg
mov
sub
jmp
inc
dec
incl
xchg
cmp
xchg
xchg
out
add
jg
sbb
xchg
mov
cmc
mov
icebp
xor
cmp
pusha
add
mov
je
push
push
xor
loopne
insb
jecxz
roll
pushf
lret
test
dec
or
inc
mov
inc
inc
ficoms
loop
sub
popf
out
cmp
fisttpl
div
mov
loopne
jge
call
sar
ficoml
negb
addb
inc
mov
ljmp
pop
mov
cmp
xchg
push
push
jns
int3
in
test
cwtl
mov
hlt
mov
push
adc
mov
add
mov
add
fists
mov
add
incl
jecxz
ss
push
or
push
xor
outsl
cli
sub
mov
push
incb
sbb
lods
sub
pusha
dec
and
stos
into
push
dec
call
cmp
pop
sub
xchg
and
adc
les
xchg
mov
pop
dec
or
add
push
or
mov
push
popf
push
push
or
push
cli
lea
dec
rcll
or
fwait
push
cmc
incb
push
leave
shlb
pop
fstps
cmp
lcall
jecxz
pop
adc
out
push
jo
cwtl
pop
add
adc
mov
std
fstl
es
incl
dec
xchg
mov
clc
mov
push
fisubrl
outsb
cltd
in
push
nop
or
inc
inc
add
pop
and
mov
shl
std
inc
dec
out
jns
into
cwtl
in
dec
mov
and
mov
xchg
fbstp
inc
data16
adc
xchg
sarb
rorl
jmp
lcall
or
stc
push
lock
mov
mov
mov
or
aad
nop
sarl
sbb
testb
les
mov
dec
mov
mov
or
mov
rcll
or
lods
aas
and
cmp
popa
jmp
aaa
call
push
cmpsb
add
and
pop
fdivrs
push
or
jae
push
and
mov
cmp
lcall
iret
aas
mov
mov
jg
xchg
sub
aaa
pop
xor
lock
mov
cmp
into
xor
jg
sbb
add
js
push
ds
mov
jo
add
ljmp
imul
mov
mov
mov
sti
jg
sbb
jno
mov
ds
aaa
test
adc
cmpsl
ret
out
push
adc
xchg
mov
loop
sbbb
hlt
push
cli
inc
cld
out
lock
xor
stos
mov
es
lcall
jo
mov
fs
ret
lea
xchg
xchg
lret
rcl
daa
ficomps
cmp
add
or
dec
pop
push
sbb
insl
mov
fisubl
add
mov
fbld
clc
mov
push
jg
popf
push
fidivrl
stos
sbb
fisttps
popa
or
js
or
pop
mov
jns
add
mov
and
mov
inc
stos
xchg
ret
fisttps
lcall
jae
push
clc
pop
out
pop
sbb
mov
fidivl
std
push
clc
incl
sbb
data16
adc
add
jae
pusha
out
adc
jb
push
int3
shlb
jecxz
inc
rcrl
cli
pop
lcall
lods
aad
sbb
incl
dec
mov
push
movb
ljmp
adc
push
lock
aad
pop
xchg
or
push
dec
adc
fbld
fucomip
dec
or
pop
notb
mov
call
notb
jns
xchg
mov
push
push
mov
mov
jnp
or
std
lds
push
sub
jns
call
rcrb
add
jne
rcrl
mov
add
cwtl
data16
cmpl
nop
dec
iret
push
fidivl
jbe
pop
fsts
mov
dec
jl
hlt
cld
data16
imul
sub
push
pushf
or
push
mov
push
ret
dec
and
lods
inc
adcl
test
mov
or
movaps
pop
outsl
enter
shlb
xchg
dec
xchg
sahf
or
lds
add
stos
mov
adc
add
push
ss
cld
ja
clc
scas
sub
fs
sti
jmp
jmp
dec
ljmp
mov
cltd
mov
dec
dec
int
xchg
inc
lock
je
jo
loopne
mov
ds
sbb
pushl
inc
xor
movsb
hlt
loopne
test
into
and
and
ss
push
fwait
mov
jle
mov
mov
xor
jmp
scas
lea
outsb
or
mov
add
adc
in
mov
mov
add
mov
je
mov
divl
cmp
pusha
jmp
mov
lods
out
clc
or
inc
leave
bound
add
repnz
out
mov
mov
jl
jo
ljmp
dec
jb
fiaddl
movl
pop
pop
mov
hlt
es
adc
or
jb
test
pusha
cli
out
adc
js
lods
ret
in
fucom
xor
aaa
rcl
out
mov
ss
call
shlb
js
cmp
std
adc
inc
or
cmp
inc
push
mov
imul
cmp
fdivrl
ss
ljmp
and
ja
out
mov
test
dec
jmp
sbb
push
mov
jb
pop
lahf
dec
adc
popa
xlat
xor
sub
out
mov
lds
ffreep
pop
mov
jmp
inc
add
cld
mov
pop
sbb
scas
incb
dec
addb
dec
in
jl
xchg
int
mov
sbb
out
adc
loop
imulb
push
ljmp
and
movsl
call
cmpsb
xchg
adc
mov
movsl
stos
add
imul
bound
insl
add
sub
lcall
xor
or
dec
hlt
xor
inc
mov
aam
lock
sub
or
adc
ljmp
aad
mov
and
xchg
xchg
xchg
out
std
popf
sbb
pop
movsb
jb
lret
mov
xor
dec
or
hlt
pushf
jg
push
add
aas
push
stc
pop
arpl
pop
pushf
jle
mov
push
push
dec
or
add
imul
pop
sub
jo
jl
pushf
adc
hlt
cli
out
sbb
fs
xor
cmp
mov
dec
mov
insb
pop
mov
or
xchg
add
rorb
jg
jg
sbb
out
dec
mov
lahf
dec
sahf
inc
mov
adc
mov
sti
int
mov
push
or
adc
mov
mov
mov
jne
adc
pop
ljmp
divb
dec
lahf
mov
adc
sar
incl
or
or
fwait
pop
or
inc
aaa
xor
faddl
enter
push
add
mov
jmp
movsl
flds
xor
mov
push
xchg
xor
mov
fiaddl
mov
inc
ljmp
mov
out
in
lods
shll
lret
jle
mov
imul
loopne
lods
testb
in
xor
inc
and
subl
dec
int3
dec
sbb
push
or
xor
push
hlt
jg
test
dec
pop
dec
sbb
leave
out
mov
fistps
jg
jnp
and
mov
mov
in
xchg
or
jb
sub
addb
mov
in
xor
cmpsb
mov
fldt
adc
in
pop
and
cli
ljmp
repz
xchg
mov
fldl
add
push
pop
stc
repz
popa
leave
inc
add
cwtl
xor
xchg
in
mov
das
dec
not
cld
lds
jecxz
adc
movsl
sbb
mov
sub
dec
gs
or
out
or
outsb
pop
inc
and
push
mov
decl
fsubs
cmp
aad
xchg
mov
imull
outsl
dec
cmp
clc
mov
fistl
lock
xchg
movsl
decl
sub
push
aaa
jle
test
dec
dec
dec
dec
andl
add
insl
jecxz
pop
fisubs
daa
lcall
jge
inc
xchg
jmp
xchg
sahf
push
xchg
push
mov
fistpl
pop
lods
insb
push
inc
or
add
insb
cmp
push
ficoml
mov
roll
push
je
outsl
cwtl
pop
pop
pop
or
clc
call
xchg
dec
lcall
inc
sub
pop
add
mov
aam
sbb
insl
rolb
movsb
cmp
or
mov
add
movsb
xlat
or
pop
out
mov
sbb
pop
pop
in
push
aad
mov
repz
dec
dec
clc
mov
test
ja
push
dec
sub
clc
enter
xor
jg
std
adc
ss
mov
and
ss
loop
pop
dec
loopne
sub
movsb
adc
add
mov
jmp
xor
imul
sbb
ja
fwait
dec
nop
sbb
hlt
jge
inc
test
pushl
out
mov
jns
mov
fdivr
sub
dec
adc
jle
mov
clc
adc
cld
mov
es
inc
add
push
push
out
neg
sbb
sub
mov
jecxz
ja
push
push
mov
fwait
movsb
stos
add
jle
pop
out
mov
sbb
lcall
in
cli
pop
iret
lods
insb
push
and
es
jmp
aam
and
sbbl
sub
adc
mov
adc
jb
outsl
add
sahf
mov
sbb
jg
ret
mov
ret
pop
cmp
push
sub
out
ret
pop
mov
ja
push
aaa
and
push
cmp
in
ret
jle
sbb
sti
test
popa
and
mov
flds
sub
pop
icebp
scas
add
mov
scas
test
xchg
ljmp
imul
call
push
cmp
cltd
or
jl
pop
pop
push
pop
fs
shrl
outsl
mov
inc
aam
loop
pop
sub
dec
inc
stos
cmp
push
dec
push
std
dec
out
add
xor
mov
insb
pop
cmp
inc
stos
sahf
fwait
call
mov
adc
cmp
pop
lahf
xchg
xlat
mov
cli
and
fstpt
pop
sub
jge
jmp
sub
add
subb
test
cmp
and
mov
push
jmp
or
testb
xor
call
jecxz
cmp
ja
jle
sbb
adc
mov
hlt
and
sub
jo
dec
xchg
loope
dec
jb
inc
mov
cmp
ja
xchg
jl
or
fwait
cmp
and
cmp
add
mov
cmp
inc
mov
xor
popf
std
cmpsl
cld
clc
lds
cli
add
stos
aas
pusha
subb
inc
jl
inc
sbb
rcrl
rcll
rorb
dec
loop
or
add
fistpll
dec
in
les
xor
outsb
pop
daa
xchg
mov
ljmp
pop
push
cwtd
pop
sbb
and
ljmp
fisubs
xor
notl
rorb
pushf
fbstp
cmp
inc
sbb
mov
imul
push
dec
push
jbe
aaa
adc
test
pop
cmp
mov
dec
adc
scas
xchg
pop
mov
sub
loope
test
decb
clc
cltd
xor
fcompl
int3
push
arpl
lret
mov
push
cwtl
mov
add
pop
pop
xor
stos
or
adc
xor
loop
scas
fdivr
mov
outsb
divl
stc
mov
aas
add
lcall
ret
pop
fcmovbe
inc
jns
shrb
movsb
push
mov
mov
les
rclb
cmp
jp
cwtl
mov
aaa
or
mov
push
pusha
cmp
or
cmpsb
sub
dec
ljmp
std
cmp
ret
push
jne
inc
pop
les
ret
les
pop
les
cld
jle
lods
je
insb
leave
lahf
mov
jl
lret
nop
sahf
fnstenv
stos
ror
jo
or
push
jg
movsl
call
pushf
jg
leave
sarl
bnd
lret
add
mov
and
xchg
ds
dec
fbstp
in
dec
shrl
fisttpll
pop
stc
fsubrs
pusha
inc
and
pop
movsl
jl
jl
sbb
jp
sbb
clc
rclb
js
push
and
dec
cmp
mov
pusha
out
mov
xor
pop
scas
jno
and
or
jg
adc
mul
pop
adc
dec
std
jp
mov
bound
xchg
repz
cwtl
sbb
adcb
or
sar
pop
sub
cltd
shlb
pop
lock
pop
test
ljmp
or
add
xchg
add
sub
add
inc
cwtl
test
es
jl
lret
add
incl
xchg
aas
in
loopne
leave
cld
inc
outsl
ds
cmc
lds
outsl
jbe
movsl
pop
sbb
push
ja
and
xor
inc
push
lock
xor
sar
push
inc
into
cld
or
lret
push
les
sarl
dec
push
icebp
adc
and
sbb
pushl
add
or
leave
or
dec
push
decl
pop
push
xor
push
js
icebp
lret
ljmp
cs
lret
jne
adcl
lcall
xchg
in
gs
or
inc
push
cmp
ds
pop
inc
mov
out
decb
mov
data16
aas
andl
cwtl
pop
inc
add
cli
mov
ret
adc
sbb
jg
lds
pop
pop
xchg
fwait
inc
popf
rcrl
push
popa
jecxz
ss
js
fwait
push
ds
push
adc
mov
push
xor
ss
push
lahf
jns
or
ja
sbb
ss
sahf
xchg
movsb
cmpsl
ret
mov
ret
inc
pop
int3
sub
aaa
dec
rolb
mull
addr16
stos
ljmp
clc
mov
shll
mov
jo
xchg
xor
xchg
test
add
and
inc
icebp
mov
mov
jmp
dec
mov
xor
push
and
mov
pop
ja
push
sbb
call
fwait
pop
mov
cmp
sti
lahf
add
jo
lret
imul
in
pop
out
sbb
sub
xchg
call
sbb
and
leave
xchg
shlb
sub
pop
repnz
stos
xor
inc
sub
add
lock
and
cmp
lcall
jle
outsb
xchg
push
push
in
pop
mov
dec
outsl
mov
mov
xchg
xchg
add
mov
iret
nop
pop
jno
sub
pop
mov
and
mov
cli
rclb
stos
and
mov
jo
cmp
add
push
shrl
adc
cltd
push
lret
call
cld
add
fisubrl
adc
mov
fstpt
icebp
mov
inc
out
push
ds
lods
shrl
inc
aaa
dec
shlb
dec
jmp
mov
push
sti
or
cwtl
jns
shrb
std
mov
pop
in
cmpsl
mov
mov
and
clc
fidivl
movsb
daa
push
clc
cmp
adc
je
je
jmp
xchg
xor
pop
nop
pop
lret
cli
scas
and
pop
push
mov
pop
xchg
mov
push
js
jmp
fmull
xlat
add
push
mov
stos
pop
cld
imul
stos
dec
cmpsb
out
movsb
lea
test
adc
xchg
push
mov
cmpsb
das
in
inc
rcrb
out
pop
std
or
mov
aam
cmp
fcomps
mov
pop
or
ret
push
push
int
jnp
rcrb
and
aam
adc
into
cwtl
inc
or
sbb
cmp
jo
inc
add
outsb
adcl
inc
outsl
fdivr
scas
inc
icebp
push
and
adc
push
push
sub
fdiv
jle
mov
cld
mov
jnp
in
jb
enter
clc
int
cmp
push
ret
adc
cld
cmp
inc
mov
test
mov
mov
pop
lock
in
mov
pop
int3
xchg
or
imul
pushl
aad
cmp
inc
push
mov
add
push
or
clc
aas
stos
cld
cmp
rclb
aam
cmp
cli
stos
mov
cld
lret
mov
inc
imul
out
js
cmp
mov
xor
cmpsb
dec
pop
stos
decb
jl
dec
cmp
or
arpl
lret
adcl
cmp
xchg
adc
adc
stos
out
fisttpll
fwait
pop
in
addb
push
insb
mov
xlat
sub
xchg
mov
daa
jae
pushf
popa
lods
jo
jns
xchg
pusha
negl
xor
loop
push
mov
les
push
aaa
ljmp
inc
adc
adc
arpl
xchg
pusha
es
mov
cli
mov
out
sbb
push
and
xchg
lcall
incl
xchg
lcall
sub
jmp
xor
lock
incl
sbb
lock
xchg
jg
aas
into
mov
add
push
mov
das
cmp
or
add
push
sbb
imul
mov
movsb
fimuls
jmp
repnz
gs
pop
xchg
das
jb
mull
pop
or
xor
mov
inc
mov
and
addl
or
jne
sti
add
push
fwait
hlt
aaa
mov
sub
fs
hlt
or
and
scas
xchg
xchg
cli
mov
ret
sbb
leave
xchg
hlt
fwait
add
hlt
daa
ret
sub
shrl
aaa
ljmp
jg
enter
inc
cmp
mov
cmpsb
mov
hlt
pop
mov
push
push
loop
ja
cli
enter
sbb
negb
mov
js
movsb
sbb
ret
jp
add
mov
xchg
xor
mov
jmp
push
ljmp
pop
cmpsl
cmp
inc
sbb
push
pop
out
mov
insl
lock
inc
shlb
add
mov
out
rcl
in
fnstcw
outsb
mov
scas
je
xchg
in
out
sbb
inc
lret
cmp
mov
or
pop
aaa
lret
popf
and
xorl
cmpsl
or
scas
cli
popf
mov
inc
shrb
sbb
pop
and
lcall
mov
jb
or
mov
or
mov
sar
sahf
dec
sub
cmp
push
mov
popf
sub
fcompl
in
jl
xchg
mov
out
xchg
movsl
cld
aam
negb
loopne
aad
mov
jmp
inc
nop
xchg
push
sahf
sahf
mov
jb
xor
mov
test
adc
jle
out
mov
inc
pop
ss
or
inc
xor
jnp
in
add
bound
sahf
push
inc
aad
jge
outsl
mov
test
fsubl
outsl
xchg
mov
push
push
sub
outsl
add
nop
fucompp
mov
fildll
faddp
es
or
iret
data16
jmp
push
mov
inc
or
or
dec
jne
mov
aad
clc
cmp
outsl
inc
inc
call
and
jne
sbb
pop
push
ret
cmp
add
mov
in
lahf
sub
inc
mov
mov
pop
push
sar
add
cli
lea
loop
ljmp
rorl
xchg
jbe
fistpl
jecxz
sub
xlat
pop
adc
fcmovbe
incl
das
pop
dec
faddl
and
xor
int3
test
push
test
jo
popa
std
add
push
jb
lds
push
xchg
sbb
pop
push
jo
or
mov
cli
ljmp
inc
rcr
or
sub
into
in
and
cld
icebp
sub
cmp
sbb
xchg
push
cld
push
ss
lret
sbb
xor
cmp
sub
sub
inc
loope
sub
and
mov
add
adc
lret
push
and
popf
int
insb
das
dec
out
cs
sahf
sti
pop
mov
sbb
cmp
push
mov
leave
in
lretw
aaa
and
and
mov
lds
lret
xchg
inc
jle
divb
jno
push
add
leave
inc
dec
sbb
jl
sbb
add
or
lock
inc
or
xor
shll
mov
cmpb
aam
das
clc
jg
inc
hlt
outsl
push
lcall
push
ficomps
ret
insl
in
data16
mov
pop
lcall
fiadds
xchg
pop
incl
sub
sbb
mov
mulb
test
jae
push
xchg
addr16
movb
mov
vfnmsub231ss
mov
cmp
pop
loopne
loopne
and
cwtl
dec
inc
pop
mov
pop
imul
ret
adc
inc
xchg
leave
mov
xlat
push
ljmp
xchg
mov
mov
out
cmpsl
ljmp
or
pop
dec
adc
sbb
js
xorl
clc
sahf
fcomp
imul
add
pop
add
push
lcall
push
pop
jecxz
aad
repnz
call
loope
fisubrs
ljmp
pop
mov
jg
mov
and
out
xor
xlat
push
jno
sbb
popaw
test
mov
and
lret
adc
mov
add
xor
decl
out
js
call
mov
ss
or
sti
push
pop
gs
cmc
scas
xor
pop
js
ja
std
aam
dec
scas
movsb
hlt
pop
fldl
or
shrl
inc
je
jp
mov
std
cmp
jp
loop
mov
mov
xchg
push
jl
loop
xchg
adc
imul
pop
mov
fdivrs
add
cmp
lods
sub
xor
pop
cmpsb
inc
into
incl
cli
dec
test
jb
pop
sahf
dec
pop
stos
fcmovnb
aaa
inc
mov
push
xchg
add
or
jl
dec
scas
mov
test
ljmp
mov
ljmp
push
cmpb
sar
mov
cld
sbb
hlt
psubd
test
iret
pushl
ret
fnstsw
gs
outsb
dec
push
xor
sub
cld
stc
stc
sahf
pop
jmp
inc
es
es
imull
fsubrl
js
push
ret
and
sub
ja
push
sbb
sarb
lret
mov
pop
ret
sbb
jecxz
cld
call
in
jo
jle
int3
fcoml
mov
scas
insl
add
mov
repz
mov
int3
mov
pop
rcr
cmp
mov
and
mov
jne
scas
outsl
add
fisttps
mov
out
mov
mov
bound
int
sub
pop
xchg
cwtl
and
adc
lcall
adc
xchg
cmpl
fs
xor
fstpl
out
jge
icebp
pop
psubb
fimuls
or
in
ss
jmp
shrl
fsubrs
or
inc
fwait
lock
jg
nop
mov
out
call
insb
inc
add
idiv
adc
mov
pop
xchg
outsb
push
mov
stos
js
sar
fwait
push
add
or
xchg
testb
sub
lods
mov
push
das
rclb
shrb
or
mov
mov
inc
sub
adcl
push
adc
mov
and
add
and
out
test
jle
inc
fs
add
out
or
cli
fucomip
or
jbe
testb
add
icebp
mov
loopne
cmp
pushf
xchg
movl
jne
call
mov
das
clc
pop
lret
popf
xchg
mov
data16
cmp
mov
inc
and
mov
ljmp
arpl
pcmpgtd
xchg
shll
insl
or
add
enter
into
bound
jbe,pn
adc
call
popa
cmpsb
fsubs
outsb
cmp
sub
fs
std
jae
mov
lods
inc
push
mov
push
push
add
aaa
ret
decl
pop
iret
pop
xchg
inc
clc
jg
dec
dec
mov
sar
pop
lea
and
mov
mov
fistpl
mov
inc
jmp
push
stos
pusha
cmpsb
call
add
cmp
or
sub
mov
xchg
clc
pop
mov
sbb
mov
cmp
outsl
loopne
decl
jo
adc
push
or
dec
xlat
clc
jmp
mov
adc
mov
mov
pop
pusha
ucomiss
and
jmp
daa
cmc
data16
xor
sbb
sbb
mov
pushl
sahf
pusha
mov
aam
sbb
mov
inc
push
jle
dec
in
inc
addl
lcall
jb,pn
xchg
cli
or
stos
jg
cli
in
aam
scas
out
ja
outsb
push
clc
stc
mov
addb
outsl
inc
dec
or
add
fldt
mov
xor
pop
test
push
scas
lods
mov
decl
push
dec
add
jnp
les
arpl
cmp
dec
jmp
std
inc
jo
xorl
test
xor
cmp
adc
sar
aaa
and
xor
repnz
lds
call
xchg
fs
and
movsb
insl
jne
fcmovnu
sub
insb
jp
dec
iret
cs
jl
and
test
movsb
jmp
or
lahf
adc
movl
les
add
and
popf
xor
xor
das
mov
jp
pop
je
aam
xchg
push
push
popf
les
cmc
add
fdivrl
outsl
adc
lcall
stc
pushl
jmp
xor
jle
pop
fsubr
ss
add
cli
nop
roll
andnps
xchg
dec
fsts
pop
lock
mov
xchg
dec
in
sahf
sbb
cli
ss
in
add
xchg
fwait
test
decl
popf
and
adc
sbb
sarb
mov
sbb
pop
cwtl
inc
jo
jge
lret
jle
cmp
sahf
mov
icebp
dec
stc
jle
add
das
shrl
popf
cmp
inc
push
mov
int3
inc
xchg
jg
test
jb
jl
mov
lods
xor
push
xor
ljmp
punpckhbw
fstp
pusha
fisubrl
cmp
fsts
repz
xchg
divl
fistl
mov
cli
lahf
pop
xlat
cltd
cmpsl
sbb
ficoms
mov
push
sarb
sbb
sahf
or
jae
aas
orb
inc
or
sti
fisttpl
and
add
sub
out
cs
mov
out
bound
mov
and
scas
pop
inc
pop
sahf
out
xchg
addr16
out
shll
pop
aas
push
xor
dec
push
shll
dec
xor
cwtl
clc
loop
nop
cli
repz
mov
or
mov
and
inc
fnstenv
push
jmp
rolb
dec
cli
mov
sbb
dec
fwait
jnp
jl
sbb
push
pop
lcall
cli
sub
sahf
push
int3
into
lcall
das
cmp
ljmp
sbb
xchg
ljmp
test
test
ljmp
jo
lods
add
pushf
mov
jle
and
mov
pushl
mov
cmp
clc
call
fdivrs
mov
mov
sahf
fwait
loopne
ficompl
aad
lcall
icebp
mov
aaa
adc
xor
xchg
mov
lock
xchg
or
jno
lock
jecxz
sarb
pusha
idivb
test
out
mov
xchg
bound
xor
call
out
stc
movsb
cmc
cmp
inc
lods
mov
cmp
pop
cli
sub
decb
cmp
jle
clc
jnp
mov
mov
ret
addr16
addl
dec
in
or
jmp
sti
pushl
in
cmpsl
adc
pop
sarl
and
pop
inc
filds
mov
test
sub
mov
add
or
dec
dec
jne
mov
mov
sub
mov
dec
ret
sbb
mov
cld
ret
pop
dec
jg
idivb
cltd
add
sbb
jmp
aam
jno
sahf
negb
inc
jecxz,pn
add
test
outsb
cli
push
adc
fidivrl
aaa
hlt
std
stos
pop
jo
mov
nop
xlat
jae
mov
jno
xor
jge
lock
sub
icebp
add
adc
ljmp
imul
addb
repz
test
pop
push
ljmp
jle
das
cltd
jge
shll
test
test
jne
mov
adc
js
in
mov
xchg
or
mov
mov
cmpsb
sub
mov
jecxz
pop
or
sbbb
add
rol
out
dec
push
or
call
fbld
cmp
add
mov
mov
fdivrs
std
mov
lret
dec
cmp
insl
sti
pop
aam
jg
aam
fwait
incb
fwait
mov
sub
push
pop
out
addr16
push
cmp
jp
sub
jl
xchg
aad
imul
repz
add
out
scas
pop
aam
ja
mov
mov
fildll
addr16
and
rol
data16
sub
sbb
pop
lcall
clc
sbb
sbb
cmp
jmp
sbb
repnz
dec
sbb
adc
sbb
popa
cld
inc
clc
dec
andl
cmpsl
dec
or
loop
shrb
popf
mov
or
jmp
mov
sub
and
rorb
pop
sbb
add
rorl
popa
mov
lods
cs
inc
xor
jbe
lret
ret
lea
dec
cli
push
dec
loop
das
repnz
xor
xchg
xchg
outsb
dec
pushl
fcoml
mov
add
cwtl
mov
arpl
add
adc
sbb
insl
mov
out
loope
in
hlt
xchg
jge
mov
call
repz
inc
incl
leave
inc
adc
cmp
roll
jge
mov
push
movb
inc
sar
add
daa
jmp
iret
hlt
ret
bnd
jbe
aad
outsb
movsl
call
addr16
in
sarl
scas
in
sub
pop
and
daa
adc
js
roll
test
pop
push
movsl
ss
mov
xor
test
or
fs
subl
or
add
gs
je
out
mov
movsb
lret
fidivs
push
icebp
mov
mov
sub
lods
imull
stos
lea
jb
test
popa
std
pop
and
sbb
adc
jg
jle
sub
add
xor
pop
adcb
xchg
inc
lds
or
adc
lock
xor
outsb
sbb
mov
addb
lcall
sub
insl
pop
and
adcb
jg
cmc
pop
dec
xchg
cltd
cmpsb
pop
repnz
sbb
and
mov
or
jge
bound
stos
in
pushf
cmpl
add
dec
repz
dec
push
lret
mov
sub
scas
mov
pop
loopne
loopne
push
mov
pop
cld
rcl
xor
and
push
pop
call
ss
or
shr
or
cwtl
popa
or
aaa
adc
mov
int3
dec
ret
lret
arpl
insl
ljmp
inc
dec
lret
sbb
out
adc
sub
push
sbb
cmp
adc
enter
stos
mov
ljmp
mov
into
addl
mov
xchg
jp
jmp
push
mov
fs
inc
mov
and
test
lds
repnz
mov
cltd
lret
nop
jns
or
mov
dec
add
sti
xchg
mov
gs
lcall
nopl
xchg
cmp
dec
lea
ffreep
dec
jno
rcrl
fsubrp
fisubs
push
sbb
ss
leave
loope
xchg
push
lret
sub
jp
fcmovnb
filds
pop
out
cli
int
fldt
dec
mov
adc
js
push
rcr
xchg
lods
std
inc
out
sub
aad
int3
test
mov
shll
scas
cmc
jo
jg
les
sarl
iret
add
pop
out
sub
add
sahf
imul
fcompl
mov
ljmp
adcb
les
cs
xor
insb
js
inc
jg
mov
int3
xor
lock
in
xor
and
hlt
aad
hlt
fwait
call
shrl
or
mov
sbb
pop
and
call
loope
ljmp
fidivrl
cltd
xchg
xor
add
xor
fisttpl
rcrb
xchg
pop
push
insl
in
sub
push
lea
dec
push
push
lock
dec
ja
stos
sbb
daa
pop
jle
loop
jbe
pushl
std
loope
aad
daa
cmp
push
repnz
inc
in
pop
jnp
or
roll
mov
gs
int
loop
sbb
mov
mov
xor
std
mov
dec
ss
aad
sub
loope
jae
sub
push
mov
movsl
dec
or
push
enter
jb
xor
call
jmp
jbe
and
cld
enter
jecxz
jmp
cmp
xchg
adc
mov
jl
push
outsb
pop
dec
mov
call
adc
and
fdivrp
jg
scas
test
addr16
jne
jnp
inc
lods
adc
loop
jmp
dec
push
inc
int
pusha
test
and
filds
add
scas
mov
jb
cmp
xlat
or
ret
push
shrb
dec
xchg
and
or
test
jg
pushl
push
in
inc
push
inc
xlat
pushf
dec
mov
jmp
fstpl
outsl
pop
pop
ja
clc
outsl
ss
mov
cmc
and
pop
xchg
incl
mov
pop
stc
call
mov
mov
nop
ficompl
pushf
repnz
jns
or
sar
mov
mov
push
mov
std
movsb
pop
or
mov
mov
jg
inc
xor
add
pop
push
sub
shll
cli
icebp
sbb
push
jo
add
in
cmc
or
out
lret
adc
aam
in
insb
or
mov
test
icebp
jne
add
les
xlat
jg
push
adcb
and
jg
add
subb
filds
pop
lods
sarl
adcb
into
mov
mov
das
cld
in
filds
aad
inc
or
jecxz
mov
ja
pushl
sub
nop
jb
xlat
ljmp
adc
mov
xchg
jne
mov
shr
dec
xchg
push
jb
jp
fcoms
arpl
cmc
mov
in
or
jmp
cltd
xchg
or
inc
dec
fldenv
sub
scas
cli
ja
es
in
inc
cli
rorl
insb
sbb
pop
pop
insb
ljmp
push
scas
sarb
jg
push
pop
sbb
and
pusha
cmp
and
xabort
lods
decl
mov
into
sbb
outsb
add
call
popa
dec
push
imulb
andb
dec
loopne
dec
das
pop
xor
fcos
jmp
push
pop
cmpl
adc
xchg
shr
ljmp
scas
pop
or
pop
xchg
je
push
inc
push
fcomps
rcrb
xchg
insb
test
aaa
add
xor
xchg
call
xorl
in
cli
push
dec
mov
xor
jae
xlat
outsb
cmp
les
dec
dec
sbb
pop
nop
sahf
pusha
popf
dec
mov
aad
jae
outsl
lcall
dec
mov
jno
cmp
mov
lods
movsb
out
xchg
shl
shll
cltd
inc
outsb
idivb
ljmp
test
mov
sbb
adc
cmpsl
stos
pushf
sahf
push
jg
stc
jno
jecxz
std
inc
jo
aas
shl
pop
lods
lods
mov
and
pop
lock
scas
cltd
push
pop
movsb
lods
out
and
jne
iret
adc
push
addl
sub
inc
or
mov
inc
ljmp
imul
mov
cli
jmp
popa
ljmp
ds
nop
mov
loope
mov
mov
or
cli
outsl
cwtl
jmp
scas
stos
dec
std
jbe
call
mov
push
xchg
dec
mov
sti
call
dec
stos
mov
stos
xchg
lea
push
inc
sbb
fdivs
push
sarl
adc
jl
dec
or
mov
std
in
fs
test
test
mov
test
or
cmp
ljmp
decl
call
movsb
stos
cld
popa
push
xchg
bnd
mov
adc
out
and
icebp
jns
jmp
pop
ficompl
in
fs
mov
cld
mov
lcall
negb
mov
outsb
jmp
and
loopne
xor
inc
call
mov
aam
movsb
cltd
loopne
cmc
pop
test
fs
rcll
aam
pusha
jmp
stos
dec
xchg
mov
int3
mov
push
fucomi
jns
outsl
xor
pushl
out
xchg
bnd
out
or
aad
jmp
sub
shlb
pop
jecxz
aad
adcl
mov
xchg
xchg
pop
mov
iret
test
leave
xor
int3
cli
mov
jb
jmp
add
adc
hlt
inc
dec
jg
clc
call
sbb
mov
push
dec
je
xlat
pop
sub
adc
or
stos
ss
inc
jl
inc
or
pop
cmpsb
ljmp
call
les
fists
inc
adc
sarb
xor
decl
pop
xor
in
fcomps
pushf
and
incl
mov
lret
sarl
jns
sbb
incl
jl
sti
subb
pop
popa
jb
icebp
outsl
scas
sub
pop
or
sbb
jmp
jmp
jo
cmpb
cwtl
adc
push
or
sub
adc
int
mov
pop
or
xor
cmp
cmpl
sub
add
jg
pop
shrd
mov
mov
pop
pop
or
bound
incl
dec
add
stos
adc
mov
and
enter
push
lcall
sub
push
jecxz
into
rorl
imul
movsl
mov
sbb
mov
loope
aaa
sarb
bound
movsb
in
stos
mov
mov
jg
pushf
jmp
adcb
bnd
cmp
lock
mov
mov
jns
cmp
test
or
sar
xchg
xlat
pop
cli
incl
addl
sbb
mov
out
xor
xchg
pop
mov
rorl
mov
incl
mov
std
jle
push
mov
add
mov
pop
insl
jl
daa
push
out
inc
jmp
scas
test
adc
mov
sbb
or
call
push
movsl
fsubs
xchg
xchg
inc
cwtl
jbe
das
call
jmp
incl
movsb
mov
push
in
test
ljmp
inc
lock
mov
stos
xchg
jno
push
mov
in
dec
in
xchg
jae
or
popa
cltd
ret
aas
dec
es
or
lret
jp
test
aam
adcb
add
xor
cmp
add
pop
mov
cmp
cmpsb
mov
pop
fcompl
loopne
inc
push
popa
mov
fwait
scas
mov
lahf
or
nop
mov
loopne
loop
or
pushl
shr
cmp
mov
inc
sbb
pop
in
push
sub
shlb
inc
iret
fistpl
subb
test
pop
loope
mov
push
jl
decl
sar
lahf
pop
daa
and
dec
dec
pop
js
stc
into
dec
fcmovu
sub
inc
or
call
test
jo
les
mov
mov
scas
mov
popa
pusha
mov
mov
insb
mull
loopne
inc
or
ds
xchg
dec
dec
sbbl
test
pop
mov
adc
sbb
mov
fwait
dec
add
lcall
push
lods
cli
hlt
call
lods
mov
int3
inc
shll
xor
pop
xchg
sub
xchg
cwtl
jo
notl
loop
rcl
or
bound
or
xchg
mov
cmp
push
add
jl
sbb
je
repnz
xor
lock
and
clc
mov
das
call
iret
pop
test
xchg
insb
insb
mov
shlb
pushf
mov
mov
push
inc
popf
push
mov
jno
sarl
popf
and
mov
mov
mov
mov
ja
pop
add
rcrb
lods
shll
scas
sbb
lret
or
movsl
add
push
mov
pushf
jnp
mov
add
and
filds
imul
fists
lock
std
fnstsw
add
mov
xor
ljmp
push
in
xchg
mov
sbb
scas
ds
je
and
mov
dec
stos
push
dec
cld
cmp
aam
xchg
sar
mov
decl
ljmp
cli
enter
sahf
imul
out
mov
xchg
dec
mov
loope
shrb
add
mov
and
addr16
adc
sub
loope
push
jno
mov
mov
sbb
rol
repnz
lahf
fistps
loope
mov
dec
fs
sub
rcl
cmp
mov
inc
ret
jmp
pop
push
test
jae
xchg
mov
and
outsl
cmpsb
xor
cmp
fisttps
add
or
ficomps
push
fistl
addl
cmp
cmp
mov
cli
cli
es
jno
cmp
sub
dec
xor
add
dec
das
sub
hlt
out
push
cwtl
adc
cli
xlat
adc
test
add
insb
mov
das
je
mov
ss
imul
in
dec
ljmp
jbe
aaa
or
pcmpeqd
gs
out
add
mov
into
imul
xlat
sahf
cmp
sti
push
les
fadds
mov
test
rcl
bound
sbb
mov
mov
xchg
add
cmc
stos
adc
mov
sub
add
stos
cmpsl
and
jecxz
pushf
test
fcmovne
lcall
cld
mov
daa
dec
repnz
lods
lods
mov
scas
jae
pop
test
mov
cmp
pop
xchg
testl
cwtl
pop
pop
lock
push
xchg
jp
inc
stos
insb
jle
clc
mov
jmp
shll
movsb
push
es
ljmp
pop
inc
mov
and
mov
testl
mov
imul
mov
cmp
pusha
and
cmp
ret
xor
jno
pushl
sub
add
cs
mov
adc
mov
iret
xchg
ja
and
test
sbb
push
pop
pusha
std
pop
das
pop
ja
hlt
xor
outsl
scas
test
jp
sti
pop
pop
imul
adc
leave
stos
sub
xor
push
add
lds
sub
xchg
stos
popf
fildll
pushf
push
cld
in
mov
dec
es
sbb
fucomi
or
jne
aad
add
pop
mov
pop
mov
incl
add
inc
inc
push
fsub
lcall
mov
out
add
pop
xor
clc
lods
push
jmp
sbb
inc
outsb
jge
pop
jne
pop
push
int3
clc
jg
iret
out
movsl
pop
push
je
dec
ret
out
outsl
add
outsl
xchg
pushf
push
push
insb
dec
out
test
test
sbb
into
mov
and
ja
shlb
or
push
incl
mov
add
xor
cmc
push
mov
inc
xchg
arpl
int3
mov
push
into
jle
repz
push
dec
repnz
daa
xor
push
push
sbb
cli
fidivs
add
stos
xchg
clc
jbe
outsl
pop
test
mov
mov
ret
push
rclb
pop
and
cli
sub
call
rcll
xor
movsl
in
ljmp
pushl
shrb
push
jo
mov
dec
ja
es
pop
ret
clc
or
mov
sub
mov
and
cmp
std
rcl
decl
mov
mov
call
push
and
mov
rcrl
adc
fimuls
sbb
push
mov
dec
jb
lods
or
fdivrp
inc
nop
sahf
add
mov
or
push
stc
fisubrl
mov
std
les
add
jns
into
insl
sub
insl
mov
dec
fwait
out
ljmp
icebp
jp
out
push
ret
and
pop
pop
adc
sub
mov
mov
shld
xor
cmpsb
sbb
int3
xchg
jg
stos
inc
in
mov
add
mov
inc
movsb
std
jbe
push
sti
ret
nop
inc
mov
dec
xchg
push
test
cli
out
scas
jo
mov
add
adc
movsb
jg
and
jb
or
xor
fs
push
mov
adc
jb
ljmp
and
decl
xor
sbb
or
mov
add
dec
ja
rorb
jb
xchg
test
std
daa
xchg
pop
test
mov
mov
repnz
inc
pop
cli
and
adc
mov
hlt
pop
xor
scas
xchg
fcompl
dec
ss
pop
pushf
out
adc
mov
push
pop
fwait
pop
sub
sub
mov
jae
jecxz
fmull
bound
sub
adc
pop
popa
or
pop
add
adc
cli
rorb
pop
in
aaa
mov
stos
pop
imul
cmc
dec
ljmp
in
xchg
or
cmp
jb
push
mov
sar
pop
imul
sbb
test
pop
std
push
mov
lcall
mov
mov
push
sub
pusha
fdiv
repnz
xchg
int
aam
test
call
mov
or
jge
mov
push
cmp
aaa
pushf
sbb
stos
xor
pop
push
jg
out
mov
xor
int
push
xlat
push
mov
pushf
gs
mov
or
jg
imul
ss
stos
outsb
push
shll
int3
incl
sti
jo
imul
insb
sbb
stos
lret
lock
call
cld
outsb
xor
sbb
push
or
es
jb
sbb
lcall
xorb
cmpsb
push
movsb
jg
cmpsl
lret
inc
or
mov
cmpsb
jge
jge
aaa
cmp
mov
jno
jle
in
or
pop
sbb
and
pop
cli
mov
jge
iret
and
call
mov
and
sbb
testl
inc
xchg
mov
fidivs
mov
divl
subl
loop
jg
push
ret
mov
mov
test
add
stos
push
add
and
mov
xchg
xor
popf
push
cmpsb
or
pushf
jl
mov
lock
mov
fwait
aad
pop
push
int3
mov
cmp
and
lahf
fwait
add
incl
pushf
push
sub
popf
add
inc
shl
or
pushl
sti
fcoms
aaa
dec
dec
mov
addr16
mov
cmp
mov
push
stos
std
or
call
test
cltd
mov
clc
mov
jmp
loope
xor
and
pop
push
dec
add
fbld
stos
jnp
push
cmp
inc
js
outsb
insl
fidivl
and
lock
iret
stos
mov
ss
mov
fidivrs
dec
and
stos
sub
ror
sub
jne
in
jmp
stc
decl
fcoms
push
lret
ret
int
sub
mov
andl
mov
sbb
mov
adc
inc
cmp
sub
cli
pop
sbb
dec
xchg
add
ficoms
sar
fwait
push
dec
or
pop
and
test
jmp
pop
inc
ret
call
pop
and
sub
xchg
loope
test
sahf
adc
dec
and
std
push
push
pushf
jg
pushl
int
lcall
loopne
fwait
subl
clc
cmp
es
repnz
pop
imul
pushl
sbb
sub
cmpsl
fmul
jecxz
push
jge
push
cld
or
mov
mov
sub
jl
xor
fbld
int
in
add
shr
ficompl
jp
and
xchg
pushf
filds
jp
ret
aam
aad
mov
imul
push
inc
mov
xor
cmc
sub
test
lcall
dec
pop
add
stos
ds
shl
mov
pushf
inc
pop
xor
icebp
call
and
or
out
and
mov
inc
pop
pop
lea
fisubl
test
rcrb
decl
outsl
sbb
add
pop
mov
fdivl
leave
pop
push
and
ja
int
pop
popf
jae
and
jnp
push
and
ds
popa
push
jg
daa
pop
xchg
movsb
arpl
mov
adc
or
lret
sbb
sbb
mov
pop
inc
jne
push
sbb
xor
mov
sti
adc
sub
dec
movsl
pop
add
xchg
shrb
pusha
cmp
cmpb
dec
push
arpl
outsl
lcall
mov
add
insb
pop
les
inc
rcrb
mov
call
stc
xchg
cmc
daa
jne
out
jnp
mov
mov
push
std
xor
inc
cmc
stos
cmp
ljmp
out
repz
lahf
ficomps
in
pop
fcoms
mov
dec
push
cli
inc
mov
in
push
or
and
iret
jns
popf
push
pusha
mov
shufps
ljmp
popa
or
adc
outsb
fadds
ljmp
mov
nop
lods
mov
data16
hlt
dec
mov
inc
dec
decl
sub
xchg
push
loopne
xor
mov
cmp
inc
gs
adc
cmp
mov
outsl
popf
hlt
adc
loop
sub
dec
orl
enter
fdiv
pusha
xchg
or
clc
mov
jmp
add
dec
adc
dec
mov
loop
std
jno
inc
es
cmp
or
mov
ficomps
call
pop
in
or
sbb
ret
iret
jne
or
and
out
push
and
jae
pusha
in
push
cmp
pushl
jge
test
sub
xchg
pop
hlt
outsb
mov
lcall
jl
and
add
inc
add
pushf
jo
mov
lea
dec
xor
mov
mov
scas
ljmp
xorb
loopne
mov
outsb
sahf
cmp
lock
pop
leave
sub
scas
xchg
jg
push
daa
jno
and
dec
sbb
sbbb
mov
or
add
adc
les
push
mov
clc
adc
in
into
pop
fadds
push
dec
test
push
push
sub
cli
les
pop
ret
into
mov
ja
imul
and
adc
jp
dec
and
jg
test
ficoml
mov
adc
lods
movsb
imul
fcomps
and
cmp
fprem
scas
clc
sbb
ljmp
jecxz
enter
mov
inc
ret
jns
insb
arpl
cld
inc
cmpsb
push
dec
sbb
sbb
push
aaa
add
inc
adc
cli
das
rolb
jo
push
out
stos
scas
insb
cmpsb
add
mov
pop
and
add
adc
movsb
pop
xchg
inc
sub
lcall
flds
das
loop,pn
daa
mov
rorb
push
imul
xchg
mov
lret
test
mov
adc
xor
and
shlb
ljmp
je,pt
ss
xchg
repz
mov
inc
jle
sbb
jb
push
adc
mov
add
pop
xor
lahf
lret
sbb
cli
mov
mov
and
mov
jbe
test
or
lret
lds
add
dec
ja
notb
dec
repnz
call
adc
fiadds
ljmp
test
adc
pop
fistpl
or
pushl
mov
inc
fiadds
fisubs
mov
out
jae
repnz
popf
jg
adc
mov
cmpb
and
add
dec
incl
adc
add
xor
or
mov
hlt
push
jp
xor
pop
lret
adc
je
mov
mov
push
inc
mov
mov
cld
fbstp
jg
movsl
xchg
repz
mov
les
jge,pt
mov
jno
gs
insb
push
hlt
fists
jne
dec
push
pop
sub
cld
test
popa
xorl
pop
cld
xchg
test
rclb
and
mov
fcomip
ja
xchg
xlat
or
imul
notb
xchg
adc
dec
pushf
jp
cli
call
push
pop
cli
jne
dec
cmp
arpl
arpl
mov
cmp
and
xchg
pop
adc
fcompl
mov
and
dec
leave
fsubl
je
cmc
imul
ret
mov
scas
xchg
ljmp
cmp
aam
xchg
jle
int
push
ret
dec
mov
lcall
dec
pop
sarb
aaa
sbb
movsb
movsb
add
add
js
ret
push
and
mov
jg
mov
in
or
inc
orb
mov
sbb
outsb
leave
insl
dec
mov
jl
dec
cmp
fisttps
mov
mov
shrb
lock
jg
out
in
dec
inc
sub
outsb
sti
xlat
or
mov
sub
ret
imul
mov
int
lock
nop
mov
lods
arpl
out
ljmp
pushf
push
scas
test
js
cmp
test
jecxz,pt
ss
xchg
movsb
xchg
les
lahf
jg
and
xchg
cmp
das
notb
arpl
mov
inc
dec
mov
jg
loop
xchg
add
ss
iret
inc
sti
inc
jg
popf
xchg
icebp
ss
insb
and
mov
push
mov
cmp
adc
icebp
pop
stc
jae
xchg
test
decl
cmp
pop
xchg
dec
fnstenv
in
mov
and
andl
pusha
xor
pop
js
xchg
loop
add
push
xchg
cs
jge
jb
stos
fwait
pusha
cmc
jno
add
aad
stos
mov
popa
mov
or
push
subb
ds
decl
movsb
sbb
pop
loop
dec
imul
clc
test
cmp
imul
jmp
incb
roll
push
sub
loopne
clc
sub
shr
cmp
jg
push
jnp
add
mov
lcall
jmp
sbb
cmp
mov
jb
mov
subb
adc
mov
dec
std
mov
test
test
push
nop
sar
pop
mov
lret
mov
inc
adc
xor
hlt
xchg
push
outsb
adc
dec
filds
ja
addl
jmp
mov
inc
pop
sbb
cs
call
arpl
xchg
mov
call
popa
scas
xor
pop
fadd
sub
roll
call
mov
mov
sub
movsb
or
mov
pop
adc
mov
imul
adc
mov
lock
in
clc
sub
mov
cmp
ret
inc
mov
ret
cld
lds
xchg
icebp
mov
je
rcll
jo
imul
push
adc
leave
add
loopne
out
cmpb
sub
sub
xor
lods
mov
push
or
inc
std
mov
or
jg
fisttps
mov
movsb
stos
mov
fldcw
fstp
mov
mov
aad
lret
dec
rcr
xor
pop
adc
cmc
or
jg
pop
icebp
fsin
fstpl
lea
imul
pusha
incl
rorl
jbe
test
in
fdiv
ja
mov
popa
fwait
mov
pop
inc
and
jmp
dec
les
xchg
cmp
outsl
dec
adc
insb
inc
sti
jo
pop
scas
pushf
arpl
fcoml
cmp
addr16
and
push
dec
loopne
inc
push
ss
das
fmull
in
jo
push
clc
scas
in
mov
lcall
sub
mov
filds
pop
dec
andb
dec
sub
mov
mov
pop
lahf
ljmp
push
push
jg
xor
jl
mov
ljmp
xchg
cmp
xchg
sub
jae
cld
jo
aam
fsubr
aam
jle
xor
jns,pn
insl
imul
push
jae
xlat
les
fistpll
lock
aaa
adc
je
push
sbb
inc
sub
in
inc
ret
adcb
lock
lods
mov
fwait
mov
inc
lods
clc
xchg
dec
xchg
fwait
dec
pop
popa
mov
sbb
mov
cmp
popa
sti
mov
leave
inc
and
pop
xchg
sub
incl
pop
jle
mov
mov
pop
xor
adc
adc
lahf
and
push
push
in
mov
icebp
inc
xlat
mov
pop
clc
push
out
mov
cmc
outsl
mov
sbb
mov
mov
rolb
jg
loop
xlat
xchg
je
hlt
mov
fstps
jecxz
inc
sub
jbe
fnsave
test
mov
inc
xchg
test
fcoml
sub
pop
jg
call
sbb
sbb
pop
mov
and
jg
jne
push
mov
daa
scas
cli
or
push
pushf
leave
int3
mov
fwait
inc
cmp
dec
or
gs
sbb
mov
lock
das
ret
pop
and
jmp
jge
mov
push
aas
and
cmpsb
xchg
cmp
and
clc
stos
and
sbb
ja
mov
mov
scas
pop
push
mov
or
es
fsub
mov
insb
mov
nop
dec
cmp
pop
pop
scas
add
out
cmp
sub
push
xor
xor
shrb
test
jns
sbbb
and
cs
out
push
jge
sub
std
int
sub
push
rcrb
jo
ds
incl
stos
mov
jbe
cmp
or
fisttpl
ret
or
insb
dec
in
dec
imul
add
fistpll
lods
rcrl
pusha
sub
data16
rolb
xor
decb
negl
jae
in
push
roll
stos
jae
pop
push
imul
shl
mov
xor
std
push
adc
or
cli
mov
movsl
inc
loop
inc
std
outsb
adc
js
movsl
fwait
sarb
mov
pop
mov
cs
orl
jno
xchg
sub
sbb
sbbb
mov
sub
test
insl
mov
or
xchg
or
outsl
and
icebp
inc
add
pop
mov
sub
pop
mov
dec
dec
ret
push
inc
dec
inc
dec
nop
push
mov
add
xchg
inc
imul
leave
sbb
and
leave
cmp
push
dec
cmp
mov
fidivrs
dec
sbb
aam
xor
or
stos
mov
outsl
inc
rcrl
sub
movsb
push
lahf
mov
mov
xor
sub
testb
sbb
inc
inc
jb
push
jg
cli
sbb
cmc
adc
dec
dec
or
and
dec
enter
push
adc
mov
ljmp
push
cs
cmp
adc
dec
cmp
clc
inc
mov
mov
outsb
pushl
std
daa
inc
cmc
pop
sub
push
xor
test
sahf
mov
inc
loop
pop
mov
mov
movsb
xchg
cli
pop
cmp
sub
add
add
aad
push
pop
insl
loop
sub
pop
rolb
and
decl
xchg
shrb
xchg
sub
pop
add
or
repz
mov
icebp
stos
inc
jmp
pop
push
jbe
rcr
lock
aam
dec
or
sbb
insl
les
jmp
decl
or
adc
orb
dec
jnp
xor
dec
dec
xor
fnsave
call
inc
aaa
inc
shll
lds
pop
out
add
adc
incl
out
clc
or
aaa
and
push
sub
xchg
xor
lock
cwtl
jg
outsb
add
rcr
ja
sahf
int3
push
paddq
mov
push
sub
sbb
push
mov
jl
add
and
lcall
fsubr
decl
jge
movq
push
idiv
mov
pushl
mov
cmp
adc
loopne
jo
push
push
adc
incl
add
or
insl
dec
push
adc
enter
inc
fstpl
call
repnz
mov
dec
cmp
lds
loopne
sbb
aaa
pop
movsl
jnp
int3
rorl
inc
cld
imul
xchg
je
mov
cli
mov
jmp
add
cs
cmp
inc
iret
inc
pop
ret
xchg
cwtl
sbb
cmpsb
es
mov
and
decb
cli
mov
punpckhwd
scas
add
jnp
gs
mov
loopne
mov
mov
ljmp
sahf
mov
push
mov
in
adc
addl
shl
xchg
test
ss
ljmp
cli
sbb
jp
jle
or
hlt
addl
jmp
sub
test
in
pusha
scas
pop
xlat
rolb
lcall
inc
pop
inc
sti
inc
mov
imul
ljmp
mov
mov
js
imul
ds
ret
das
inc
jne
popf
fisubs
daa
pop
pop
lock
mov
xor
inc
aas
sbb
jle
ja
loopne
sbb
push
into
cmpsb
xor
cmc
dec
fs
divb
or
test
and
es
mov
mov
push
in
add
incl
shrb
mov
sbb
sub
out
aad
lcall
sub
jmp
jge
ds
push
icebp
stos
aad
mov
mov
dec
leave
xchg
inc
xchg
mov
loopne
imul
push
push
mov
rorb
adc
aaa
std
inc
cmpsb
insb
cmpb
sub
dec
mov
cmpsb
loope
inc
mov
xchg
mov
add
adc
fadd
out
fdivr
jge
iret
lret
dec
cld
dec
add
movsl
ss
mov
cmpsb
outsb
imul
scas
jl
cli
cld
or
ret
stc
scas
or
push
ja
mov
jecxz
pop
add
cmc
decl
xchg
mov
call
sti
rorb
stos
insl
lds
or
fstps
lock
stc
mov
out
xor
jb
pop
add
mov
jge
pop
or
mov
setns
or
jne
cli
jbe
mov
aaa
les
push
bound
fstpt
jg
ljmp
add
movsb
pusha
push
or
sbb
jno
pushl
in
jns
mov
mov
sti
mov
pop
mov
adc
pop
jae
sbb
dec
sbb
dec
pop
sbb
cli
cmp
sub
je
pop
in
xor
cld
push
nopl
xchg
xlat
enter
xorl
clc
out
data16
jmp
xorb
xchg
mov
int
ret
and
jb
adc
movsb
rclb
cmc
int3
mov
xchg
incl
cld
stc
fsubrs
loop
dec
jb
addb
popa
lods
cld
rclb
sti
sar
ret
imul
push
pushf
cmpsb
pushf
fnstenv
arpl
cmpsb
aas
stos
decl
fildll
subb
insb
inc
jnp
mov
jmp
jmp
cmp
sbb
std
ljmp
sbb
sbb
sahf
cs
cs
call
add
cwtl
dec
mov
xor
lcall
mov
ret
mov
and
int
lea
ficoml
lea
les
mov
out
push
dec
pop
mov
popa
testb
jae
clc
decl
adc
cmc
push
cmpsb
mov
stos
xor
jae
add
insb
decl
push
jge
xor
cltd
inc
mov
dec
mov
mov
mov
xchg
call
sub
adc
pop
push
inc
int
dec
cmpsl
fsubl
icebp
mov
pop
xor
or
lret
inc
pop
xchg
mov
push
les
ficoms
jne
stos
lods
mov
sar
or
fsubs
ds
cs
cld
fildll
add
pop
inc
lea
adc
mov
pop
imul
add
mov
call
pushl
fdivrs
inc
stos
in
or
ds
ds
dec
xchg
ds
inc
mov
cmp
mov
es
jg
test
pop
es
popa
cmp
fildll
sub
test
in
fidivs
sub
xchg
test
loopne
cmpl
mov
cmp
xchg
pop
dec
lds
or
decl
or
sub
adc
jg
sbb
ja
insb
pop
push
sbb
pop
and
mov
cmc
outsl
or
inc
xor
pop
js
call
pusha
fcmovbe
fsubl
jo
mov
or
std
testb
jno
cmp
idiv
sahf
lods
decl
imul
repz
stos
adc
xchg
repnz
fwait
cmpsb
sub
cmc
scas
or
in
adc
mov
push
or
rorl
push
daa
cli
pop
mov
mov
pop
push
add
sbb
mov
xor
fsubrl
call
hlt
mov
cmp
push
mulb
jnp
aaa
lret
adc
pop
inc
ja
call
cmp
xor
mov
jnp
xorl
insb
pusha
pop
scas
mov
mov
ret
dec
mov
dec
pop
and
pop
push
jo
lcall
scas
push
out
mov
mov
aaa
insl
xor
jnp
inc
pop
push
ficoml
inc
xor
mov
cmp
pop
arpl
lock
push
outsl
fildll
pop
inc
rcll
js
mov
pop
pusha
ret
pushl
scas
or
lods
es
mov
vcvttsd2si
sub
js
and
mov
addr16
sbb
sbb
xchg
fwait
mov
push
ja
stc
jns
cmp
stos
add
mov
clc
sub
adc
or
mov
gs
cld
ds
cwtl
cwtl
aaa
pop
nop
hlt
decl
imul
pop
jle
inc
and
cli
mov
dec
insl
dec
xchg
sbb
in
xchg
pop
insb
adc
in
or
xlat
mov
subb
mov
fs
or
fs
inc
pop
push
sbb
sub
test
inc
ss
add
enter
fsubr
outsl
rclb
pop
pop
rclb
cmp
fldcw
hlt
int3
xor
mov
mov
scas
mov
sbb
dec
pop
mov
xchg
cmp
pop
loope
int3
imul
xor
jmp
and
mov
inc
ds
clc
or
mov
mov
popf
ret
add
icebp
test
jo
jg
dec
scas
push
xor
clc
popf
data16
call
dec
sbb
cmp
jg
icebp
nop
xchg
mov
in
popf
mov
sahf
insb
ret
dec
repnz
jg
scas
pop
sbb
sahf
cmpsl
pop
mov
mov
lock
adc
and
add
loop
cmpsb
cmp
into
cmpsl
adc
adc
das
dec
mov
pop
xchg
push
aam
sub
popa
std
mov
mov
incl
aas
mov
shrb
or
lods
add
ljmp
xchg
sub
fnstsw
movsb
in
adc
outsl
or
dec
sub
aad
fisttps
scas
ja
adc
add
and
cmp
arpl
pop
cmp
mov
fwait
jns
in
std
dec
dec
mov
push
ss
push
imul
sbbb
mov
cld
incl
push
sbb
jne
fstpl
sbb
cmp
outsb
and
imul
iret
jnp
stos
lods
fcmove
shl
out
into
fdivs
addr16
sub
adc
adc
inc
addr16
mov
outsb
sbb
in
adc
mov
mov
movsb
lock
pop
pop
jge
push
fidivrl
das
mov
js
sti
mov
pushf
call
push
pop
push
and
cli
push
fdivrs
mov
sbb
xchg
pop
xchg
loopne
xorb
fsubl
sub
and
jmp
mov
je
adc
and
rcrb
cmp
test
sbb
jbe
shll
fwait
or
jne
jbe
mov
inc
jnp
adc
lock
imul
dec
imul
push
loop
sbb
adc
pop
and
js
insb
mov
loop
inc
js
mov
inc
mov
decl
sbb
push
mov
or
aaa
cld
fisttps
adc
je
loope
add
cld
push
faddp
push
mov
add
int
adc
fistl
pop
aaa
fsqrt
cmp
mov
sub
fisubs
jg
push
xchg
stos
xor
pop
and
loopne
push
sub
or
fildll
mov
dec
lcall
mov
bound
mov
xchg
daa
jle
lcall
cmpsb
cmp
popa
mov
iret
scas
imul
sbb
incl
pop
sar
lcall
stos
inc
cltd
add
addr16
pop
adc
fdivl
addl
out
das
pop
sub
pop
inc
push
fnstsw
out
sbb
les
sub
pushl
push
aas
push
sbb
push
aam
cmpsb
outsb
cld
xchg
arpl
adc
jb
sbb
aam
mov
push
pop
pop
fsts
xchg
fiaddl
add
push
dec
ja
dec
dec
mov
pop
pusha
das
add
loopne
sar
test
dec
add
sbb
dec
in
push
mov
add
cmp
repnz
outsb
out
pop
hlt
or
lods
mov
add
test
mov
ss
jl
xor
jp
sbb
hlt
ljmp
int3
xor
or
push
pop
fisttpll
xor
add
imul
orb
imul
jl
push
repz
sbb
or
mov
pop
ljmp
dec
out
mov
push
iret
push
std
pusha
loopne
inc
mov
or
inc
or
incl
xchg
push
ret
adc
lock
or
sbb
sub
cmp
add
js
or
loopne
jg
mov
test
mov
out
jne
dec
out
add
jno
cmpsl
push
cmp
aad
rcrl
lods
es
mov
mov
inc
xorb
mov
pop
jge
push
push
outsb
fistl
push
hlt
xchg
aam
jl
or
mov
ret
jb
loope
pushl
add
jno
cmpsl
aas
inc
in
push
sbb
jle
push
inc
fmuls
mov
incl
mov
xor
out
add
sbb
inc
dec
dec
vshufps
jg
es
data16
pushl
idivl
xor
xor
fsubr
mov
jo
add
cli
mov
push
mov
das
clc
add
mov
jge
or
sub
sub
fcmovnu
sbb
pushl
jno
cmp
ret
adc
shr
icebp
mov
or
sti
das
adc
dec
lcall
dec
push
rclb
mov
xchg
loopne
jmp
int
es
ss
mov
ljmp
pop
sub
push
xor
insb
lock
stc
jge
popf
mov
pop
nop
cld
aam
cmp
push
cvttps2pi
sub
lcall
jae
or
xor
jl
and
incl
and
lds
xor
jo
pop
jne
in
cli
mov
push
ds
jmp
lock
mov
xchg
sarb
dec
add
test
and
jbe
in
pop
enter
mov
test
or
mov
inc
fldl
in
pop
pushf
aad
ret
fbld
hlt
sub
das
xchg
loopne
cmpsb
into
inc
mov
fsubs
cld
xchg
adc
cld
inc
loopne
lock
das
adc
mulb
adc
cli
add
sbb
mov
sub
cmp
popa
xchg
inc
mov
fcoml
call
push
add
mov
adc
pushf
cmc
sub
mov
xchg
push
push
cmp
cmp
dec
mov
or
xchg
push
out
mov
mov
call
add
imulb
mov
negl
sub
pop
and
jp
xchg
je
flds
icebp
mov
mov
push
push
cmpsb
jecxz
rcr
xchg
cli
add
sub
jp
push
dec
mov
pop
les
push
xorb
mov
or
cli
pop
pop
add
jmp
sub
pop
add
ss
cmp
dec
jae
xchg
mov
lock
and
push
or
and
adc
andl
adc
xchg
jg
jno
dec
nop
jnp
add
push
sarl
movsl
xor
ljmp
in
gs
stos
sbb
jle
sbb
sbb
fdivl
pop
and
xor
pop
cld
and
inc
popa
std
sbb
push
popf
popf
scas
push
push
pop
dec
bound
movsb
cmp
push
in
mov
call
into
mov
cmp
pop
add
sar
std
negb
mov
cmp
std
xor
dec
cmpl
push
cmp
inc
out
xchg
std
jg
icebp
add
or
mov
int
insb
shrl
sar
icebp
data16
push
push
and
sbb
icebp
sub
aaa
dec
xor
cmpl
cmpb
pop
hlt
out
ret
out
call
jge
push
jg
inc
outsb
out
das
nop
or
fwait
das
jmp
js
rcr
add
mov
das
adc
mov
mov
pop
das
cli
jmp
repnz
mov
rclb
int
sub
testb
fildl
pushl
inc
push
mov
test
pop
mov
lods
adcb
outsl
inc
jbe
jo
int3
lds
mov
das
pushf
push
loop
mov
and
mov
movsb
in
insb
lret
shl
fldl
arpl
fadds
cld
mov
fcompl
and
icebp
push
xchg
and
or
add
sub
mov
add
push
cmp
sti
xchg
jp
and
mov
shlb
sbb
sbb
jbe
ljmp
mov
mov
cs
pushf
adcl
push
lods
and
test
xor
add
push
pop
mov
cltd
adc
dec
xlat
and
push
adc
in
lods
movsl
sbb
sbb
fidivl
add
or
sub
pop
lcall
mov
mov
sbb
fdivrp
lds
xchg
out
ljmp
sbb
shlb
mov
mov
sub
imul
xchg
imul
roll
in
cmp
inc
pop
call
xchg
jne
dec
jne
jo
cwtl
decb
lock
jecxz
jne
push
mov
into
ss
data16
pop
roll
aad
dec
or
mov
sub
imul
filds
pop
push
add
mov
mov
sub
xchg
cmc
fbld
mov
inc
ljmp
push
inc
push
test
iret
xchg
mov
and
insb
ret
mov
shll
adcl
out
mov
lods
jg
insb
pop
inc
cmp
ja
inc
jnp
mov
mov
pop
mov
add
call
loop
ja
lret
or
pusha
xlat
popf
xchg
stc
cmc
jg
inc
dec
pop
aad
sub
daa
dec
sub
cmp
in
fidivl
ds
decl
fidivrs
mov
jmp
xchg
std
repnz
addr16
cli
pushl
add
jl
jecxz
cltd
arpl
js
dec
mov
inc
clc
outsb
xchg
pop
aad
push
xor
rorl
push
pop
hlt
decl
jg
fs
add
rclb
fiaddl
in
dec
adc
mov
std
pushl
pop
mov
jae
inc
mov
and
cmp
push
and
ljmp
add
sub
cmpsl
ljmp
inc
fisttps
popa
jae
dec
jne
nop
rorb
call
orb
mov
mov
mov
mov
mov
imul
push
mov
gs
sub
scas
jp
shll
scas
cmp
dec
mov
mov
xor
mov
inc
xor
sub
mov
pop
dec
pop
push
xchg
loopne
sbb
lcall
push
fsubs
jns
xor
lods
sbb
xor
inc
mov
inc
test
mov
mov
fnsave
loopne
push
and
xchg
cli
or
mov
inc
cli
jb
pop
hlt
shlb
int
popf
aam
xchg
movsb
add
push
jecxz
hlt
push
cli
inc
clc
mov
fadds
mov
jae
xor
pushl
mov
pop
lods
iret
mov
adc
xchg
aad
push
imul
jno
sbb
cmp
xor
outsl
clc
stos
jl
inc
xor
inc
addl
ret
ficompl
fwait
test
aam
repz
jno
add
mov
arpl
and
test
xor
jnp
sub
call
mov
push
xchg
push
test
jg
sub
xchg
cmp
sbbb
and
pusha
push
mov
xchg
inc
icebp
mov
hlt
incl
dec
add
mov
sbb
lods
dec
add
adc
loopne
test
dec
mov
inc
out
cs
jg
sahf
out
and
cli
inc
pop
xor
xchg
and
bound
xor
or
lods
shlb
cmp
les
rcll
fbstp
xchg
xchg
add
ret
sbb
frstor
cltd
fisttpl
and
negl
xor
mov
fsubl
lret
mov
lret
mov
mov
call
aas
push
addr16
ss
ds
hlt
cs
mov
mov
es
std
pop
mov
pusha
dec
int3
outsl
out
cmp
scas
das
es
aad
imul
sbb
lahf
das
push
icebp
xchg
xchg
loope
mov
xor
jg
adc
nop
lret
push
negl
fldlg2
dec
aas
mov
pusha
hlt
insb
sti
pop
out
xor
daa
rclb
loope
push
into
sbb
aaa
mov
fstps
lcall
push
test
testl
dec
dec
dec
add
push
mov
mov
in
shlb
inc
pushf
stc
sbb
loop
addr16
cld
decl
nop
movsl
xor
xchg
pop
sbbl
mov
pushl
cli
loopne
and
std
adc
dec
cmpsb
pop
fadd
adc
and
loope
sub
mov
out
cwtl
mov
inc
pop
mov
xchg
push
inc
push
xchg
inc
or
cmp
ljmp
or
or
cmp
pushf
popa
dec
or
jg
or
cli
aas
fs
fwait
sub
lcall
inc
push
xchg
mov
xchg
inc
sub
dec
outsb
cld
daa
pop
ret
pop
inc
push
imul
aad
xorl
add
xor
dec
mov
pop
xchg
mov
stos
cwtl
cmc
pop
jg
aas
aaa
or
dec
sbb
aam
jbe
enter
adc
adc
iret
test
sbb
daa
add
sbb
or
rorl
dec
jnp
jmp
dec
sub
push
add
sub
mov
mov
jge
bnd
mov
jo
lcall
je
mov
les
cmc
lahf
push
cltd
jns
add
test
call
mov
mov
clc
repz
push
out
enter
ljmp
fsts
pop
fld
pop
mov
insl
in
and
adc
sbb
jg
arpl
call
xchg
shl
enter
fsts
xlat
pop
add
jo
out
xchg
and
xchg
push
sbb
sbb
ja
js
rcrb
mov
std
das
fsubs
mov
mov
mov
push
in
enter
decl
es
xchg
mov
mov
cld
sub
xchg
call
sbb
cmp
inc
lods
sahf
pushf
adc
or
cmpsb
addb
pushl
pop
xor
pop
ss
popl
xchg
ds
pop
and
es
push
dec
sub
test
hlt
outsl
cli
lcall
cmp
enter
hlt
sub
sti
xor
scas
clc
adc
mov
ds
sbb
sbb
add
out
fnstsw
mov
dec
or
cmp
out
add
push
inc
sti
dec
out
xchg
mov
icebp
and
inc
mov
pushf
out
xchg
pop
push
aad
pop
jnp
push
insb
xchg
sahf
sbb
dec
cmp
inc
sub
cmpsb
ljmp
dec
inc
mov
addr16
mov
xor
aaa
adc
clc
sub
pushl
xchg
mov
data16
in
mov
mov
repnz
ds
and
cwtl
stos
mov
jae
sbb
jg
and
rcl
sub
out
data16
cmpsl
and
xchg
decb
sub
incl
cltd
add
lds
mov
sub
xchg
out
pop
hlt
andb
fistl
mov
xlat
jle
dec
add
lcall
mov
adc
cwtl
lcall
cli
jle
cli
cwtl
ficoml
fnstsw
addr16
dec
mov
pushl
pop
mov
dec
pop
and
adc
shl
je
jecxz,pn
sub
pop
push
sarb
inc
in
xchg
icebp
jno
mov
and
and
stos
add
push
lcall
out
fistps
cmpsb
daa
scas
cmpsb
mov
fiaddl
fldenv
inc
out
into
or
pop
call
xor
mov
jg
fcomip
add
das
push
orb
aas
int3
out
decb
dec
out
jg
test
mov
sbbl
jl
in
repz
call
push
jp
xlat
sahf
add
fnsave
cmpb
jg
movsb
sar
sbb
sahf
in
mov
sar
pop
shlb
sbb
faddl
mov
aaa
inc
jb
sub
stc
dec
cli
leave
aam
fsubl
stos
clc
insl
popf
fdivr
mov
pop
loopne
xor
sbb
dec
mov
aam
dec
push
pop
sub
pop
pop
lcall
pushf
push
lahf
fistpl
and
fisttpl
in
clc
aaa
enter
jecxz
addr16
outsl
js
cmc
cli
push
lods
add
push
xor
jl
sub
fbld
dec
add
xor
into
sti
fwait
jle
lods
addl
jb
pop
sub
aaa
mov
in
add
mov
ret
lds
lods
push
mov
push
pop
movsbl
xor
adc
loopne
pop
in
add
pop
repnz
inc
xor
sbb
adc
cs
mov
xor
in
aad
lock
dec
sbb
dec
into
jp
icebp
sbb
jbe
pop
cmpsl
incl
fs
pushl
lret
stos
push
ret
popa
lret
shrb
cmpsb
es
cmp
mov
out
or
imul
fdivr
popf
and
fcmove
shl
mov
ljmp
std
int3
or
rcrb
adc
out
loop
mov
cmp
jmp
inc
or
js
pop
add
mov
add
mov
test
jg
or
cmp
xor
aaa
push
xor
cmc
jl
test
js
xor
jmp
jecxz
cmp
add
mov
ret
and
adc
pop
add
sub
ret
ret
mov
loopne
mov
push
ja
mov
xchg
ror
leave
cmp
jmp
mov
aas
adc
jo
xchg
xchg
adc
sbb
mov
push
cmp
cmc
mov
test
or
aaa
movb
fimull
add
xor
cmp
faddp
or
and
stos
cmp
pushf
add
push
cmpsl
inc
jl
insl
xchg
pop
fdivrl
insb
jae
stc
arpl
add
sbb
lock
mov
xor
add
fbstp
pushl
inc
and
push
in
test
xchg
inc
mov
fisttpl
movsl
jae
decl
cwtl
inc
sub
clc
xchg
xchg
jmp
aaa
mov
movsl
mov
xor
jg
lock
push
lods
out
out
xchg
xorb
mov
xchg
cmc
and
js
loopne
cmp
jmp
sbb
mov
cmpsl
in
insl
into
pop
dec
xor
mov
mov
cmp
jecxz
sbb
pusha
mov
test
xchg
inc
or
outsl
sub
addr16
rcrb
mov
jmp
pop
fists
pop
cmp
push
movsl
pop
or
add
inc
dec
or
idiv
mov
fildll
mov
ficoms
std
outsl
cli
scas
inc
mov
call
sahf
bound
loope
jl
lock
test
pushf
mov
pop
clc
lcall
add
daa
cmp
fs
lods
in
pop
decl
cwtl
outsl
pop
inc
jo
sti
jecxz
jg
incl
jne
aas
xchg
test
xchg
arpl
into
mov
mov
or
pop
jecxz
bound
xchg
mov
ja
push
stos
jne
pop
fs
add
shr
mov
jb
push
cli
out
inc
in
decl
jge
bound
dec
mov
add
jg
fidivrl
pop
bound
nop
mov
adc
sbb
jmp
jge
repz
inc
fisubl
dec
xor
jg
movsb
pop
loope
xchg
call
incl
add
out
jle
scas
testb
mov
jge
fisttps
add
decl
jbe
imul
mov
loopne
dec
jg
add
and
shrl
jnp
push
adc
sbb
mov
pop
push
cmp
lea
mov
mov
ljmp
cmp
cltd
arpl
cmp
xor
xchg
lret
xor
hlt
pop
lcall
ficoms
xor
dec
and
test
xchg
push
ljmp
lahf
ret
xchg
push
cmp
xchg
repnz
std
leave
popa
cltd
es
inc
std
incl
adc
test
rolb
js
xchg
cmp
ret
jo
jns
or
mov
dec
js
and
lahf
and
adc
div
cmp
out
repnz
push
pop
incl
rcll
mov
movb
sbb
jp
leave
fstp
adc
outsb
sti
pushl
add
scas
stc
bound
cmc
movsl
and
push
cmp
repnz
clc
pop
ljmp
mov
and
mov
aam
aad
jg
sbb
ret
or
push
cmc
xor
pushl
adc
clc
cmp
out
fwait
movsb
les
add
sub
and
sahf
int3
fucom
repz
fcmovu
hlt
filds
add
mov
inc
inc
mov
and
fs
adc
mov
aaa
mov
cmp
push
out
jne
sub
pop
or
push
fidivrl
lods
lcall
hlt
jle
pop
fcmovbe
adc
xchg
inc
cmpsl
inc
sbb
imul
ds
addl
icebp
xor
adc
aas
pop
cmp
aas
cmp
ljmp
xchg
add
repz
scas
sub
mov
or
popf
jg
jecxz
mov
xchg
mov
mov
shl
test
shrb
jg
cmp
jbe
lea
addb
xor
in
daa
fisubs
push
cmp
icebp
iret
push
adc
mov
xor
sbb
jmp
faddl
into
jnp
mov
cs
dec
stc
cmp
mov
inc
mov
jg
lea
add
mov
dec
mov
addr16
xchg
out
clc
fisttps
add
cmp
les
add
stos
imul
pop
divl
andb
mov
add
scas
jnp
pop
cmp
decl
pop
or
loop
stos
mov
std
faddl
add
repz
js
or
cli
add
adc
push
pushf
js
adc
adc
jg
fisubrl
repz
mov
mov
adc
mov
xchg
fidivl
in
or
mov
cmp
sti
sbb
cmp
sbb
xor
icebp
into
decl
adc
cmp
clc
in
mov
bound
push
xchg
ficoms
lock
fldenv
pop
mov
adc
sbb
pop
mov
enter
lock
jmp
sub
pushf
xor
lds
dec
pop
pop
mov
mulb
jmp
icebp
dec
push
movsb
or
push
icebp
stos
scas
call
add
push
test
pop
ret
pop
pop
in
std
ljmp
push
out
movaps
and
enter
mov
sub
pop
and
mov
ljmp
ja
adc
xchg
scas
incb
dec
xor
cltd
out
and
mov
pop
inc
nop
outsl
push
jno
mov
out
mov
movsl
aas
dec
push
mov
ret
xchg
push
sahf
jb
mov
mov
cmpsb
fbstp
cwtl
inc
jecxz
sti
out
or
fbld
std
cmp
ret
inc
fisubs
repnz
xor
sub
jb
loop
call
xor
push
das
mov
push
dec
add
in
jg
jmp
dec
sbb
cmc
lret
sbb
test
ficomps
and
adc
sub
pop
dec
push
push
shr
pop
fs
mov
fildl
out
and
mov
pop
mov
daa
pop
xchg
mov
movsl
rorb
or
faddl
pop
mov
xchg
mov
int3
inc
inc
pop
test
mov
inc
and
dec
cmp
mov
pushf
loop
adc
rdmsr
into
hlt
add
pushf
enter
add
mov
push
jg
push
sbb
es
inc
push
mov
xor
test
xchg
xlat
frstpm(287
mov
call
outsb
es
daa
dec
cmp
scas
fimuls
or
lcall
or
rorl
cld
neg
sbb
and
jg
inc
in
imul
xlat
call
lds
and
add
push
dec
stos
fdivs
lret
cs
ja
into
sbb
fsubs
jo
js
fadds
fldt
sub
mov
nop
imul
sbb
ret
jae
pop
adc
rclb
daa
xchg
dec
or
jmp
into
mov
stos
ret
push
test
mov
lret
mov
add
lods
push
push
inc
dec
rol
outsl
inc
dec
mov
xchg
lds
pop
fstpl
jmp
outsb
adc
dec
push
decl
sub
mov
pop
sub
lods
es
bound
sar
jmp
mov
sar
dec
mov
cmpsb
pop
mov
cmpsl
out
jmp
pop
mov
mov
inc
sub
movsb
fs
stos
push
pop
add
lcall
jle
mov
lcall
sub
jg
out
xor
dec
inc
int
subb
adc
mov
inc
jle
clc
mov
and
vmovaps
out
sub
and
mov
scas
repz
inc
out
ja
cmc
outsb
push
pushl
jmp
jnp
inc
cld
call
hlt
sbb
dec
or
cli
lret
push
mov
push
call
jmp
jbe
repnz
xor
jbe
cmp
jg,pt
add
sbb
sti
push
dec
sub
sti
or
es
push
out
test
or
push
jl
jg
xchg
pop
ds
xchg
add
sub
sub
mov
imul
xor
shl
lahf
pop
out
andb
ja
cmc
pop
and
push
in
mov
mov
repnz
stos
movsb
scas
aas
push
je
xchg
clc
fisttps
jle
jp
ret
or
xor
mov
xchg
sbb
cmp
dec
jecxz
fsubs
cwtl
mov
test
divb
test
gs
mov
das
mov
mov
fld
add
mov
mov
fadds
imul
lcall
js
ljmp
jecxz
cld
cmp
imul
das
orb
scas
push
cmp
add
mov
push
mov
dec
cld
stos
pop
or
shlb
sub
pop
in
ljmp
mov
data16
cld
pop
or
popf
add
cmp
cmp
pop
lods
js
scas
add
adc
cmp
sbb
cld
jo
pop
dec
jp
jno
jg
xor
subl
adc
js
xchg
cld
pushl
pusha
loopne
fcoms
mov
adc
lods
jbe
push
addr16
mov
pop
add
adc
jmp
pop
hlt
mov
mov
cmp
ret
pop
cmp
pusha
sbb
out
lods
jnp
rcll
decl
sar
mov
jmp
and
xor
sti
jae
jg
ljmp
cwtl
mov
sub
and
mov
or
sbb
sub
xchg
or
lret
add
push
dec
lahf
push
dec
outsl
cli
mov
fwait
imul
int
pusha
or
sar
cmp
cmp
dec
sub
jne
add
fcompl
cli
out
stos
sbb
xchg
sub
sub
test
sbb
dec
cld
push
clc
arpl
pop
addr16
mov
dec
test
cmc
jg
mov
int3
fwait
in
inc
adc
scas
dec
lods
push
incl
push
mov
sbb
subb
les
mov
sti
pop
lahf
jo
mov
and
dec
mov
adcl
or
je
aam
daa
enter
mov
into
jg
pop
or
fs
cmp
fs
popf
jg
sub
imul
jp
push
adc
aad
cmp
push
cwtl
push
cmp
loope
push
adc
lret
xchg
addr16
push
rcrb
pop
mov
hlt
jne
add
pop
inc
sbbb
roll
out
or
mov
mov
insb
push
test
jnp
and
test
mov
sbb
aam
hlt
loopne
or
add
pop
add
push
jo
pop
xor
and
icebp
push
bound
out
std
aas
clc
inc
jne
loope
jo
fidivs
fucomp
mull
cli
adc
sbb
mov
test
scas
add
jo
std
mov
pop
lahf
lcall
adc
roll
xchg
rcl
jg
and
jo
ret
mov
pop
scas
cli
lcall
push
xor
sahf
xchg
jae
cmp
add
shlb
clc
lock
or
sahf
cltd
out
mov
inc
popf
mov
outsb
sbb
add
in
lock
fbstp
testb
push
xchg
pop
pop
les
lret
xchg
push
fidivrl
or
movsl
ret
inc
je
jp
out
inc
ljmp
jle
add
sbbl
add
dec
test
gs
inc
into
adc
popa
fimull
out
cs
mov
push
adc
pop
mov
in
pop
cltd
jne
test
dec
and
insl
xorb
cmp
jg
andl
and
mov
adc
das
bound
push
dec
jp
popf
jg
test
nop
in
mov
pop
hlt
jecxz
or
les
mov
adc
fidivrs
pushl
mov
and
inc
lahf
mov
lret
mov
std
dec
adc
loope
fildll
loop
mov
icebp
out
psadbw
dec
fcomip
ja
inc
pop
xor
or
mov
cld
lcall
int3
adc
outsb
add
mov
fldenv
out
xchg
dec
jmp
fs
cmp
jnp
inc
sahf
je
out
clc
bound
mov
divb
ja
stos
cmp
mov
inc
nop
outsb
xchg
push
int3
imul
mov
jl
pop
out
xchg
push
push
sbb
daa
aaa
insb
mov
dec
out
movsb
pop
dec
mov
mov
or
jmp
stc
iret
pop
shll
or
fidivs
push
push
stc
js
mov
fidivl
mov
and
clc
scas
cmpb
jg
lods
mov
ljmp
sbb
push
daa
ret
inc
fs
test
xor
dec
jecxz
outsb
push
sub
add
repz
mov
pop
ss
dec
sub
xor
mov
loopne
sbb
iret
lcall
add
outsl
clc
add
cli
pop
push
lods
sbb
cmp
in
push
aaa
fld
lcall
push
pop
cmp
mov
ljmp
mov
cmpsb
mov
shlb
inc
fldl
sarb
mov
ffree
pmaxsw
daa
std
rorl
cmp
sub
clc
aaa
inc
mov
push
into
in
fnstcw
pushl
push
sub
or
pop
push
add
jl
adc
sub
jecxz
aam
mov
dec
cwtl
mov
mov
push
imul
idiv
hlt
mov
and
js
mov
add
dec
out
xchg
not
shrl
shlb
mov
lretw
jg
hlt
movsl
and
and
jge
movsl
jnp
jle
pop
cli
or
pop
ss
xchg
sub
popa
insl
aas
stos
jbe
pushf
xor
pop
and
and
sbb
jg
pop
xor
add
jb
jmp
cmpsb
cmp
push
lock
out
call
js
xchg
ss
insl
scas
jg
mov
jno
insb
jg
xchg
and
and
mov
mov
mov
mov
cmp
popf
mov
das
adc
fs
test
sar
stos
stos
jle
decl
in
cmpsb
loopne
xchg
ror
cmpsb
and
in
shll
shlb
adcl
jg
pop
mov
and
icebp
popa
sbb
mov
push
xchg
ret
outsb
rolb
mov
jl
ljmp
cli
in
push
pop
inc
and
xchg
lret
jno
adc
xchg
xchg
push
lds
lahf
inc
pushf
jbe
pop
sbb
sbb
mov
pop
push
int3
fidivs
push
add
hlt
insl
and
test
jl
push
adc
fucomip
mov
movsl
or
pusha
mov
clc
idiv
nop
iret
das
dec
inc
inc
mov
xor
movsb
in
iret
pusha
fistl
clc
pop
inc
and
pop
rolb
loop
sub
sub
push
inc
jns
leave
call
mov
in
in
orb
in
jns
mov
cld
out
adcl
sub
xor
out
mov
fdivrp
dec
jecxz
push
movsl
mov
cmpsl
fidivl
push
lcall
xchg
aas
xor
nop
and
sub
and
addr16
into
add
add
outsb
cmp
adc
leave
imul
fstl
rorl
dec
fsubrl
popa
std
xor
mov
aaa
xchg
dec
mov
lock
push
mov
sbbb
es
call
adc
rcrb
popf
adc
mov
cld
push
notb
mov
jecxz
mov
test
mov
xchg
iret
push
pop
ljmp
sub
arpl
in
icebp
sti
dec
sbb
insl
sub
adc
cmp
jmp
paddd
stc
fcmovu
and
jnp
mov
sbb
sbb
inc
jecxz
out
rorb
shlb
mov
iret
inc
pop
pmovmskb
call
add
lock
aad
das
nop
ret
push
mov
call
dec
jo
cmp
outsl
out
push
sub
les
sub
xor
adc
lcall
lock
arpl
out
mov
stc
in
jb
lcall
jle
ja
dec
outsb
push
sub
xchg
xor
notb
sub
fs
adc
out
loope
loopne
xchg
or
push
inc
sub
outsl
add
sar
mov
test
cmp
ds
xchg
idivb
cmpsb
pushl
sbb
adc
mov
xchg
xchg
mov
inc
sti
les
mov
jmp
dec
mov
inc
jnp
inc
and
jg
pop
sarb
in
std
adc
xchg
std
add
or
ret
push
jo
inc
or
push
adc
mov
cmp
ja
pushl
mov
lret
or
xor
or
hlt
add
shlb
fwait
jle
es
clc
mov
mov
ljmp
jo
xchg
aas
jle
mov
cmp
dec
mov
and
pop
push
push
int3
aad
mov
mov
hlt
push
jmp
mov
aad
and
imul
fsubrs
fsub
xor
lock
jg
hlt
push
jecxz
xlat
call
or
enter
out
icebp
and
bound
jmp
pop
iret
push
and
fistpll
mov
pop
ss
xchg
mov
cmp
je
xchg
sub
decl
mov
jnp
pop
inc
arpl
xor
pop
mov
cmp
mov
pop
lcall
in
and
mov
jno
sti
or
std
mov
scas
and
popf
jge
cmp
test
cmp
aaa
jge
jmp
mov
sub
push
lcall
aas
repz
jns
and
aas
jb
imul
loope
ficoms
lcall
hlt
nop
xor
cmp
scas
sbb
cli
sbb
sbb
movsb
sub
scas
cmp
daa
push
cld
cld
xchg
add
mov
jmp
dec
inc
push
sub
inc
xor
fsubs
pop
mov
adc
lds
mov
jbe
mov
fidivl
inc
jmp
pop
pop
flds
mov
iret
scas
outsb
cmp
add
subb
clc
jp
add
es
push
or
imul
incb
subb
pop
or
sbbb
jmp
push
cmp
scas
xchg
add
pop
ja
add
mov
sbb
add
jns
lods
mov
das
clc
incl
jmp
and
daa
rorb
and
push
mov
sarb
fs
call
negb
jp
push
ljmp
adc
jb
cmc
ljmp
roll
rorl
mov
pop
sahf
test
mov
xor
sub
in
lret
enter
pop
inc
std
or
out
fidivs
arpl
incl
sarl
jno
fiaddl
adc
jecxz
mov
inc
mov
std
add
outsb
or
movsl
bound
gs
inc
adc
xorb
or
push
test
sahf
stc
mov
push
xor
mov
dec
dec
sub
inc
std
push
mov
leave
jecxz
dec
inc
cmpsb
pop
jns
cmp
pushf
mov
mov
ljmp
cld
cmpl
movsb
dec
repnz
cmpsb
xor
jnp
push
xchg
sbbb
call
pushf
inc
ja
fbld
data16
insb
mov
pop
mov
xchg
ret
pop
sbb
fdiv
push
xor
push
int3
jo
mov
pop
iret
mov
insb
data16
cli
adc
lods
xlat
push
sub
xchg
outsb
dec
mov
outsl
pushf
js
sub
lret
xor
mov
stos
cltd
jl
push
leave
clc
pop
sub
sub
mov
fs
rorb
in
xor
fwait
or
mov
pop
test
in
into
mov
sbb
ss
add
fs
arpl
cli
mov
jecxz
xchg
jno
push
andl
adc
jg
incl
or
jns
jbe
inc
mull
jge
xchg
decl
aam
jg
js
jg
arpl
outsl
lea
fadd
sub
push
or
jg
js
insb
pop
lcall
hlt
js
push
in
jae
ret
cmp
ficoml
js
jecxz
aaa
stos
mov
rolb
push
incl
sti
rcrl
punpckhbw
mov
call
jmp
fsubr
in
sbb
fmulp
or
xchg
inc
sbb
movsl
fcomip
mov
mov
add
pop
or
adc
adc
cmp
pop
pop
xor
inc
sar
mov
into
popa
xchg
add
out
loopne
xchg
add
jle
dec
dec
cmc
mov
add
scas
clc
jp
and
sbbb
xlat
dec
sbb
daa
adc
sbb
and
jmp
cld
or
mov
in
xor
mov
sbb
outsl
sbb
sbb
in
mov
mov
das
loop
or
inc
jg
jne
fwait
stos
mov
lds
lds
test
lods
dec
mov
insb
loop
push
popf
movsb
jo
and
mov
sar
pop
popa
mov
mov
sub
outsl
js
mov
popf
sahf
xchg
cmpsl
xlat
add
mov
or
jne
pop
out
test
out
call
fsubrs
or
in
mov
ds
int3
loop
mov
cmpsb
incl
repz
enter
out
jecxz
pop
dec
ljmp
stos
and
jb
idiv
call
or
dec
adc
add
and
inc
out
sub
cmp
sbb
cs
inc
xchg
lds
test
loope
cmp
push
xor
xor
mov
lret
fisttpl
jl
stos
jae
ret
xor
or
mov
adc
scas
je
aad
dec
aad
aad
xchg
pop
xlat
fmuls
cwtl
jl
pop
pusha
nop
cwtl
or
outsl
lock
push
lret
test
das
incb
mov
lcall
scas
jmp
jl
dec
jb
cwtl
push
mov
pusha
adc
jno
xor
pusha
mov
mov
aam
jae
jp
inc
dec
idivl
cmpsb
pop
xchg
cli
dec
movsl
movsl
mov
ret
ds
xor
push
addr16
mov
sbb
mov
adcb
adc
and
mov
mov
or
add
pop
push
push
push
jg
and
or
pop
inc
add
sub
enter
lahf
add
cmp
or
mov
add
jg
scas
push
dec
loopne
cltd
pop
mov
xchg
aad
rolb
push
add
or
insl
repz
fstps
jmp
movsl
rclb
ret
jmp
fimuls
mov
pushf
fucom
pop
mov
sbb
pop
mov
xor
insb
les
dec
mov
push
clc
push
push
popl
sub
loop
xor
aad
xchg
sbb
mov
adc
std
mov
push
cmpsl
mov
jbe
je
xlat
mov
lcall
clc
inc
dec
jae
lods
adc
jg
dec
sub
cmpb
mov
mov
call
lret
cmpsl
rclb
add
ljmp
jle
js
ret
pop
dec
mov
orb
xchg
dec
sbb
adc
sbb
and
add
imul
pop
cmpsl
and
mov
subb
pop
fisubl
aas
orb
test
cmp
fcomp
sbb
inc
addb
jns
add
and
scas
fiaddl
insl
push
inc
cmp
pop
mov
jmp
fwait
out
cmp
or
cmpsl
into
movsl
sub
arpl
sub
jmp
sbb
add
mov
add
dec
sub
jbe
adc
in
or
mov
add
inc
out
ljmp
xor
bound
jl
roll
pop
icebp
lcall
push
pop
pop
mov
div
out
adc
xor
sub
add
jbe
fsub
pop
mov
orl
xor
adc
mov
call
add
stc
add
cmp
adc
jge
mov
fisubl
lcall
pop
shlb
xlat
xlat
pop
shll
and
and
in
pop
in
les
mov
cwtl
push
rcr
clc
sbbb
icebp
xor
xchg
icebp
outsb
dec
push
sbb
push
movsl
test
outsb
push
or
mov
enter
jg
stc
dec
nop
pop
daa
adc
jge
data16
dec
incl
cmpsb
add
sbb
pop
loopne
aas
ret
sar
repnz
ret
repnz
dec
dec
lret
lea
pop
incl
sub
xchg
inc
lds
in
mov
pop
aaa
sbb
jg
or
push
push
inc
es
ret
pop
adc
xchg
sub
adcl
pop
subb
loope
xchg
mov
xor
xor
stos
std
lcall
cmp
sbb
rcrl
shll
dec
add
jb
das
rcrb
and
cmpl
cmp
test
cltd
loop
xchg
insl
pop
cmp
and
call
xor
dec
fwait
jns
cmp
es
mov
incl
neg
fsubrl
out
lds
pop
pop
dec
ret
out
es
or
lcall
xchg
stos
shl
repnz
imull
andb
push
clc
aad
pop
std
ja
cmp
call
outsl
fcomps
add
out
push
sub
mov
or
ljmp
enter
and
imul
ljmp
outsl
mov
jmp
xor
pop
and
xchg
cmp
sbb
sub
mov
add
add
jg
repnz
ffreep
sub
cmc
data16
adc
xor
not
int
test
cmc
sbb
out
out
adcb
outsb
or
pop
dec
push
popf
xorl
and
out
ret
sbb
insb
ljmp
std
sub
mov
out
push
lock
inc
cbtw
mov
cli
inc
decb
scas
lret
push
daa
hlt
pop
mov
mov
push
call
cld
jmp
lea
jmp
mov
sub
pop
jle
xchg
jp
std
adc
inc
adc
mov
ljmp
sarl
push
pop
int3
mov
xlat
pusha
ret
stc
mov
push
jp
movsb
mov
repz
loope
fadds
push
outsb
mov
dec
cmpsb
cmp
test
fldt
roll
mov
mov
testb
adc
cmpsl
fildll
into
push
and
loop
jmp
out
bndstx
ja
jns
and
cmp
cltd
int3
ljmp
mov
mov
xlat
cmp
inc
fidivs
insl
pop
pop
sbb
push
insl
cmpsl
inc
cmp
aaa
dec
cli
pushl
movsl
out
subb
push
cs
adc
ja
pushf
out
loopne
push
sub
fstl
mov
je
pop
je
ljmp
pop
in
sbb
mov
jge
xchg
fnstenv
sub
jg
adc
cwtl
stos
test
jmp
fdivs
xorl
movsb
outsb
pusha
inc
inc
std
mov
jmp
aas
hlt
int
jno
inc
fldpi
jmp
or
jne
cwtl
and
pop
adc
xor
jmp
dec
jmp
nop
push
inc
les
lret
pop
xchg
fcomip
dec
add
cli
lods
rorl
inc
jb
test
cs
jge
clc
incl
add
jnp
imul
cmp
mov
and
ljmp
cmp
je
jo
adc
lahf
dec
mov
adc
push
pusha
test
testl
adc
clc
push
fdivr
jmp
out
push
xchg
loop
decl
sbb
sbb
popa
mov
jl
pop
jns
add
incl
sub
sarb
dec
idivb
dec
ss
test
mov
push
dec
xchg
lods
mov
popf
enter
inc
in
mov
and
data16
ljmp
mov
adc
scas
jg
pop
std
mov
fs
xor
test
std
scas
xor
jo
jb
push
adc
shll
bound
lds
mov
cmp
xorb
out
fwait
inc
mov
dec
jle
mov
mov
add
cmp
cli
jmp
sar
inc
cmpsb
int3
ds
das
iret
rcrb
or
incl
lods
in
jae
mov
jb
dec
int
in
xor
jae
incl
mov
popf
sbb
rorl
jmp
hlt
mov
mov
inc
xchg
cmp
imul
mov
call
aaa
mov
roll
imul
shrl
sbbl
xor
outsl
mov
add
ljmp
mov
xor
gs
stos
or
or
pop
pop
loopne
xor
jle
pop
std
sbb
push
icebp
shrb
add
cmpsb
or
imul
sbb
jmp
or
inc
mov
or
popa
xchg
mulb
jecxz
insb
ss
icebp
ljmp
orb
cmc
sbb
mov
or
call
testl
notb
dec
jmp
xor
lods
sbbb
es
ret
fs
sbb
je
lret
loop
inc
pop
cli
or
out
pop
call
or
mov
movsb
sti
loope
ljmp
not
xlat
push
test
mov
clc
out
es
outsl
cli
and
xor
add
add
xchg
lods
lock
fldl
or
shlb
mov
jnp
ret
pop
outsb
cmpsb
jg
insl
sahf
mov
mov
pop
dec
xor
stc
cmp
ja
lods
adc
inc
es
scas
std
xchg
push
fldt
or
in
cmpsl
inc
ror
cli
mov
mov
test
lods
xorb
imul
add
push
push
je
sar
mov
jbe
imull
mov
xchg
or
stos
cltd
mov
loope
scas
stos
mov
jge
xchg
xor
mov
addr16
movsb
cmp
add
adc
dec
mov
xchg
jne
out
movsl
fwait
decb
sbb
outsl
mov
inc
adc
into
xor
sub
leave
aaa
mov
testl
sbb
sub
and
mov
scas
ss
clc
pop
hlt
mov
push
pop
out
ja
out
adc
jno
mov
xchg
jl
and
sbb
rcr
push
xor
in
mov
les
popf
mov
pop
mov
mov
ljmp
call
shl
in
lret
shl
and
adc
push
fcomip
call
bound
xchg
mov
push
dec
imul
sbb
out
pop
cmpsb
lcall
data16
push
xor
dec
xchg
xlat
loop
cmp
sbb
lock
data16
sbb
mov
pop
adc
adc
jae
mov
pusha
cmp
push
xor
add
add
jb
push
mov
imul
add
js
mov
jg
and
jno
fdivrs
mov
or
shl
mov
sub
ss
jl
repz
add
decl
pop
sub
test
sub
in
cwtl
sbb
add
or
imul
push
mov
jae
add
or
xchg
sub
mov
inc
icebp
decl
imul
xchg
ret
inc
arpl
aas
jmp
mov
dec
nop
xchg
jmp
ret
outsl
clc
mov
ljmp
scas
jmp
add
jmp
jns
pop
loope
ljmp
adc
dec
xchg
jp
lock
sbb
decl
jo
lcall
aam
fidivs
mov
sub
mov
hlt
aam
test
movsl
dec
or
sub
jg
push
mov
scas
fldcw
mov
or
xor
adc
mov
fdivl
gs
dec
jae
mov
cmp
sub
aad
dec
sbb
xchg
cs
stos
call
mov
adcb
mov
loope
adc
mov
lcall
and
frstor
jecxz
ljmp
push
fisttpll
movb
shl
mov
push
xlat
lret
imul
bound
aam
aad
and
lock
sbb
outsl
add
dec
sbb
pop
cmp
mov
hlt
outsb
mov
data16
or
shrb
aad
decl
xchg
pushf
icebp
xlat
mov
adc
jno
mov
hlt
jg
xor
xor
and
sub
dec
popf
data16
add
jmp
and
mov
xchg
mov
push
jmp
xor
mov
fsubs
lds
mov
mov
pop
add
push
dec
cmp
mov
mov
inc
jp
inc
sub
push
ss
inc
dec
xor
inc
adc
jb
cmp
pop
mov
mov
sahf
js
adc
leave
push
lahf
sub
pop
leave
loop
cmc
dec
inc
mov
int
ffreep
xchg
lret
cmp
stos
movsb
mov
in
adc
ret
jl
loope
jae
pop
std
dec
test
jecxz
pop
mov
or
mov
adc
pop
mov
pop
test
enter
es
shr
mov
outsb
mov
mov
cs
popf
add
or
push
mov
popf
cmp
lods
adcb
mov
jbe
mov
in
subl
imul
xchg
xchg
xchg
pop
pop
hlt
ret
pop
cmp
or
mov
jl
test
pop
push
aad
cs
xchg
jbe
ret
push
jle
cld
pop
and
or
ret
int
loope
ret
rcrl
mov
cmp
sbb
ljmp
cmp
xchg
dec
cltd
sbb
lds
js
movsl
imul
mov
lods
mov
cld
or
jns
pop
inc
into
ficompl
cmpsb
fmuls
jg
outsb
ds
scas
xchg
movsb
mov
mov
and
jbe
in
int
mov
dec
test
hlt
jmp
push
mov
shrl
xlat
and
lcall
outsl
lock
movsl
lahf
dec
sbb
out
inc
or
pop
push
mov
fs
xchg
out
outsb
popf
mov
cmc
or
cwtl
movsb
push
ja
aad
rolb
call
out
inc
stos
jo
push
mov
jns
lahf
push
mov
daa
out
cmovl
pop
js
outsb
iret
dec
je
test
rolb
pop
jg
sbb
sbb
mov
aam
add
pushf
leave
aad
pop
sbb
test
add
jbe
jno
jmp
add
sbb
adc
add
je
inc
call
addr16
test
ljmp
aas
clc
jb
ret
xlat
js
cmp
jae
jmp
fbstp
js
push
fwait
sbb
cpuid
clc
dec
push
nop
cmp
in
pop
sbb
dec
js
jb
pusha
add
jl
cmpsl
push
cmpsb
outsl
add
out
mov
and
or
jge
scas
insb
xor
sub
pop
movsl
push
adc
popf
push
jne
decl
and
sub
mov
cltd
fs
add
ljmp
enter
adc
adc
lret
mov
mov
andb
inc
pop
cmp
or
cmc
xchg
add
das
fs
mov
mov
jmp
add
sub
sub
jo
pop
clc
pop
andl
adc
mov
into
adc
add
sbb
pop
xchg
sub
mov
jb
dec
daa
cmp
xchg
pushf
cld
pushf
and
in
lds
mov
out
mov
sar
cli
es
leave
inc
imul
mov
jp
jecxz
dec
hlt
gs
xchg
ljmp
aaa
movsb
call
fildll
in
in
pop
mov
stos
shrb
jne
je
cwtl
shl
mov
lea
fbstp
xor
push
sahf
xor
int3
pop
insl
dec
ljmp
fisttps
in
push
jmp
xor
in
pusha
cmp
test
repnz
js
xchg
lods
test
mov
test
mov
inc
add
cmp
adc
hlt
rcrb
adc
test
loope
cltd
addr16
and
adc
xor
pop
xor
jmp
lds
movsb
sbb
ja
clc
jmp
daa
andb
mov
add
outsb
and
mov
sub
push
adc
add
cmp
sar
or
aaa
fldl
fiaddl
pop
lods
sbb
dec
out
fdivrs
loopne
add
xor
pop
xchg
adc
dec
xor
xor
jo
stos
fucom
loop
es
or
ret
mov
test
mov
aad
cld
push
pop
pop
jp
aad
mov
test
fbld
repz
imul
addr16
loop
cld
sub
incl
jg
rolb
and
pop
shrb
pop
fimuls
xor
aad
fcmovb
fmull
in
in
sbb
addl
fsubl
jp
ret
or
ja
loopne
mov
stos
cmp
enter
pop
out
pop
or
inc
pop
push
fldl
add
push
xor
outsb
mov
add
jb
iret
inc
stos
sbb
sub
mov
decl
cmpsl
inc
mov
lea
dec
pop
cs
push
call
dec
add
adc
adc
xchg
test
xchg
sbb
xor
scas
add
stos
std
sbb
xchg
insb
ds
jno
es
fidivrl
xor
push
mov
adc
xchg
cld
dec
incl
sub
dec
fisttps
mov
sbb
mov
cli
call
xchg
push
adc
mov
jmp
clc
popa
dec
cmp
add
scas
push
sub
add
fldln2
out
dec
je
out
push
testl
test
dec
jmp
mov
leave
cmp
lret
or
add
stos
incb
sbb
arpl
cld
stos
xchg
hlt
cmpsb
cwtl
nop
nop
push
repz
cli
pop
mov
fcompl
pop
add
ret
fadds
cmpl
cmpsl
jle
call
mov
loop
add
jnp
scas
fst
rorl
sbb
jg
lods
or
insl
sub
pushf
cmp
jbe
xlat
mov
bound
outsb
mov
outsl
mov
add
rcll
outsb
and
out
lahf
mov
in
ret
sahf
clc
mov
mov
dec
mov
aam
push
scas
cmp
xchg
add
and
stos
outsb
xorb
sahf
inc
out
jmp
pop
push
and
int
jmp
enter
inc
loop
cmp
iret
mov
cmc
leave
mov
lcall
adc
push
test
mov
ja
push
bound
add
inc
imul
xor
dec
add
idivb
push
jne
inc
pushf
call
cli
jno
sar
or
xchg
imul
sbb
cld
mov
add
outsl
mov
shlb
mov
or
clc
data16
xor
dec
cld
mov
inc
movl
adc
in
add
jne
xor
dec
shr
lahf
fsts
pop
lret
add
pushl
mov
outsb
or
push
movsl
dec
je
mov
mov
lcall
sub
add
cmovae
incl
aad
es
addr16
push
add
scas
test
fidivrs
montmul
cmpsb
cmpl
insl
in
neg
mov
mov
js
flds
xchg
std
filds
inc
pushf
mov
js
pop
adc
mov
jno
push
pop
enter
bound
inc
std
jmp
lcall
xchg
push
and
ret
mov
lds
lds
mov
jb
add
lock
sbb
jnp
repz
popa
outsl
xlat
incl
lcall
int3
lods
popf
stos
sbb
nop
bound
fcomi
push
mov
cmpsb
push
xchg
ljmp
xchg
jnp
pusha
sbb
mov
push
xchg
lock
push
ds
clc
mov
cltd
xchg
mov
pop
and
xchg
subl
inc
cmc
daa
shrb
outsl
pop
xchg
mov
dec
and
addl
mov
mov
adc
fwait
ss
iret
dec
repnz
push
xchg
hlt
sub
aaa
add
aas
fisubrs
clc
cwtl
jno
clc
sti
xor
nop
test
add
jp
jmp
out
mov
ja
ss
adc
xor
fdivl
adc
inc
enter
lods
mov
sbb
lock
fmull
cmp
clc
jg
ret
jae
call
and
cmc
in
lret
dec
out
xor
frstor
adc
popf
mov
aaa
push
mov
outsl
punpcklwd
inc
clc
addl
and
inc
std
and
cmpsb
aas
mov
ljmp
pop
xlat
mov
jecxz
cmpsb
pop
sahf
outsb
int
xlat
xor
xor
fbstp
pop
cld
movsl
mov
dec
jae
mov
iret
jge
cwtl
pop
push
repz
cmp
inc
rcrb
mov
repz
dec
lock
pop
cmp
je
xor
fmulp
insl
cld
jg
daa
outsb
fwait
out
es
push
lret
mov
stos
mov
fldcw
in
xor
divl
push
mov
and
std
xchg
incb
mov
or
cmp
add
inc
push
repnz
cmp
ficoms
and
mov
dec
adcb
sahf
scas
xchg
and
hlt
xchg
sub
movsl
and
push
popa
loope
jecxz
mov
cmc
cmpsb
cli
sbb
mov
push
aad
dec
xchg
sbb
xor
fisubrl
int3
popa
and
xchg
mov
mov
push
pop
pop
fs
mov
mov
and
outsl
pop
add
insl
lods
push
cmc
cltd
call
jg
inc
sub
dec
scas
in
dec
xor
xor
mov
xor
ja
test
jno
insl
push
data16
dec
fwait
dec
cs
call
leave
lods
popa
movsl
ja
or
sub
cmp
fisttpl
in
xor
mov
xchg
mov
testb
lock
pop
loopne
mov
cld
or
sbb
rol
and
cmp
shrb
imul
movsl
pop
ss
lret
and
sbb
push
pop
popf
jp
leave
cmp
nop
repnz
xchg
jmp
xchg
pop
dec
ret
cmp
or
out
outsb
xchg
test
out
pop
mov
pop
mov
fcoml
sbb
add
clc
add
xchg
shrb
iret
xchg
push
add
punpckldq
push
popf
jmp
call
mov
mov
sahf
popf
adc
in
sbb
lock
aaa
subl
sub
sbb
insb
xor
test
mov
ss
mov
lock
arpl
std
ljmp
lret
push
ljmp
js
push
lahf
fldl
or
mov
sbb
sub
scas
mov
cmp
gs
adc
std
decl
popf
push
cmp
roll
xor
lcall
push
movsb
push
int
xor
orps
xor
lahf
movsb
xchg
fisttpl
cmp
lcall
pop
pop
lock
popf
push
ja
adc
test
rcll
popf
cs
repnz
mov
mov
in
lret
pushl
sub
mov
push
pop
pusha
icebp
dec
xchg
daa
mov
pop
adc
scas
in
adc
out
repnz
rcrb
mov
xchg
mov
pop
cmp
cvtps2pd
xor
pusha
fmul
xchg
sbb
inc
xchg
lock
mov
pop
inc
shll
daa
out
popa
dec
jnp
jmp
push
fnstenv
push
rcrl
fists
cmpsb
push
icebp
ljmp
sahf
pop
xor
andl
xor
pushl
dec
ljmp
push
add
cwtl
add
sub
xor
jmp
jae
push
xchg
leave
sbb
test
inc
ljmp
pop
fcoml
push
xor
dec
call
jbe
int
jne
cli
mov
jb
subb
testl
lcall
or
outsl
inc
out
inc
mov
push
in
mov
mov
incl
mov
pusha
aad
sbb
inc
inc
outsl
mov
addl
jge
dec
inc
add
pop
lods
or
push
shl
cmp
add
nop
jmp
mov
mov
sbb
xchg
pop
mov
adc
call
std
fcompl
push
xchg
out
repnz
mov
xchg
pop
sbb
int3
xchg
test
mov
adc
jmp
popa
dec
cld
jp
lea
loopne
push
mull
adc
ror
fisttps
pop
mov
and
push
push
cld
ljmp
mov
pusha
jecxz
pop
loop
sbb
in
inc
adc
push
cmp
mov
push
push
addr16
das
sarb
mov
clc
and
pop
xchg
test
data16
xor
enter
dec
pop
pusha
dec
jg
stos
loop,pt
ljmp
or
xor
test
outsb
mov
mov
jnp
jns
jg
mov
pop
jo
ficoms
test
pop
aaa
add
stos
xor
addl
js
jae
aam
jp
fbstp
or
or
je
xor
jbe
pusha
repnz
andb
int
popa
stos
inc
std
bound
add
fwait
mov
into
push
add
cmp
repz
data16
add
mov
clc
incl
push
jae
dec
add
imul
xchg
das
inc
push
mov
xor
incl
dec
dec
movsb
or
aas
pop
lret
aad
andl
and
sbb
mov
adc
cmp
fists
jp
mov
jbe
fildll
or
in
xor
lea
xchg
out
xchg
add
mov
outsb
pop
mov
je
les
js
pop
test
pushl
jecxz
add
ljmp
push
inc
stc
sub
inc
aas
out
cmp
scas
jmp
cwtl
mov
lods
cld
ja
shll
adc
mov
push
xor
mov
xchg
adc
mov
arpl
in
daa
sbb
lret
arpl
into
mov
rcrb
cmp
nop
les
hlt
scas
cli
outsl
incl
jmp
pop
add
or
hlt
lock
shr
lcall
mov
cld
mov
insl
scas
daa
jle
test
mov
pushf
and
daa
xchg
movsb
jg
add
decl
dec
and
iret
ficoml
fbld
mov
pop
out
mov
lock
jmp
inc
imul
mov
frndint
cmp
fbld
mov
push
js
test
sahf
jl
aaa
out
pop
repnz
lea
sub
movsb
jmp
cmc
sbb
xor
and
lahf
ja
jg
dec
cld
pop
pop
inc
nop
cwtl
lahf
sbb
and
imul
inc
or
shrb
clc
mov
cmpsl
pop
pop
std
in
sbb
add
mov
scas
inc
ljmp
mov
and
ret
and
subb
mov
ds
cli
add
or
xchg
js
inc
test
pop
sub
add
ljmp
cmpsl
mov
sub
aad
fisubl
popf
push
lock
mov
test
lret
adc
mov
iret
add
mov
mov
add
jmp
aad
lcall
rcrb
sysenter
ret
mov
jg
fsts
sbb
pop
stc
mov
repnz
xchg
pop
iret
cmp
call
mov
pop
cmp
mov
adc
lds
testl
mov
das
jbe
mov
mov
scas
adc
mov
inc
ja
lea
dec
aam
or
call
fdivr
xor
push
pop
sub
movb
pop
rcr
cmpsl
scas
pop
aad
lcall
xchg
cmp
mov
cli
ss
push
push
cmp
enter
sbb
out
sub
cmc
inc
mov
sub
add
aam
subl
or
jae
cmpsl
push
sti
insb
jmp
sub
push
or
lods
mov
inc
cmp
push
mov
out
push
es
ljmp
add
push
and
pop
mov
lahf
mov
inc
dec
lcall
jo
addb
cmp
or
cmp
pop
and
clc
decl
xor
xor
scas
cs
frstor
subb
mov
test
dec
lahf
pop
sbb
lret
jle
jmp
jmp
cwtl
rorb
bound
pop
ret
lods
movsb
pusha
ss
push
test
sub
in
jbe
shl
dec
shlb
inc
push
filds
sbb
loopne
sarl
mov
test
test
in
fcomip
ljmp
cmp
test
or
pop
xor
xchg
mov
sub
test
in
pop
dec
scas
push
ljmp
adc
test
movsl
imul
sti
sub
jecxz
inc
sbb
iret
stos
adc
cs
mov
clc
test
inc
lret
xor
enter
mov
dec
add
mov
or
lahf
push
cmc
lcall
add
inc
and
cld
and
mov
jb
cmpsb
faddl
jle
push
mov
in
fwait
dec
add
push
or
insb
pop
cmp
cmpsb
cwtl
pushf
loop
ds
push
pop
push
stos
sbb
jp
pushf
adc
mov
aaa
movsl
loope
push
add
inc
movsb
outsl
sbbb
lea
push
int
lock
cmp
das
add
push
cmp
lret
jmp
add
push
jecxz
aad
call
push
jmp
or
decl
push
jp
xor
lods
lods
jns
mov
std
lahf
inc
jae
mov
lret
out
inc
xor
sub
cs
incl
hlt
int3
or
popa
and
idivl
mov
rcll
xchg
pop
mov
into
bnd
pusha
mov
std
or
ss
dec
fistpl
fs
sahf
inc
pop
add
cmpl
adc
mov
sbb
cmpsl
aad
shl
sar
jg
mov
jne
int3
rorl
lods
cmp
nop
push
pop
xchg
int
fcmovu
xor
sbb
pop
cmp
addr16
xchg
lods
mov
add
mov
mov
sbb
inc
xor
mov
lcall
jae
lret
or
jno
div
in
ds
jg
js
mov
or
mov
cmp
xor
cwtl
js
sar
xchg
and
mov
xchg
xchg
cmpsl
addr16
jle
sbb
shrl
lods
sub
orb
add
pop
xchg
int
dec
pop
outsb
push
mov
lock
push
stos
dec
decb
sub
mov
ljmp
ljmp
mov
sub
xorb
cmpsb
adcb
push
dec
push
mov
mov
addl
push
mov
sub
or
or
mov
ffreep
test
cmp
inc
jp
leave
sub
out
rorb
pop
clc
jmp
push
add
sub
mov
inc
clc
jmp
cmp
shlb
mov
xor
inc
nop
je
xor
mov
rcll
lods
ljmp
sbb
xchg
mov
xor
sbb
scas
stos
mov
in
adc
xor
fcomp
lods
mov
insl
jns
xchg
negl
sbbl
inc
aas
sbb
iret
adc
in
fadds
movsb
fisttps
xchg
test
xchg
xor
sahf
outsb
mov
add
cmp
aaa
aas
cmc
pop
xor
jmp
test
lcall
stos
pop
test
sbb
dec
xor
jg
mov
jl
pop
dec
jnp
mov
add
push
inc
call
pop
dec
fisubrs
add
cmpsb
mov
outsb
stos
and
adc
pop
gs
in
mov
mov
xchg
fbld
ljmp
js
xchg
fcom
clc
pop
stos
test
dec
jg
test
inc
and
lock
mov
xor
adc
sub
jle
mov
pop
lods
popa
jne
lock
dec
call
jg
cmp
dec
pushl
adc
insl
ljmp
sub
push
mov
mov
dec
pop
stc
push
movsb
push
mov
movsl
je
adc
mov
mov
sbb
sbb
aad
in
scas
push
cld
mov
repnz
mov
or
daa
jbe
add
sbb
bnd
test
pop
jns
dec
or
xor
dec
test
xchg
push
aaa
fsubl
fs
jnp
jmp
dec
dec
inc
cmp
ss
and
shll
dec
hlt
filds
inc
rorb
and
js
movsl
idiv
cmp
push
jle
sbb
lds
into
inc
ret
data16
arpl
jmp
xor
pop
add
lcall
rorb
ja
dec
ficoms
int
push
call
pop
xor
sar
fcomi
mov
sbb
mov
or
pushl
pop
sahf
add
jno
mov
push
fiaddl
hlt
arpl
repz
mov
jg
dec
bound
cli
jmp
and
phaddd
rolb
inc
sbb
cli
pop
cld
push
adc
fcoms
sub
push
movsb
or
ss
inc
inc
mov
cmp
pop
push
bound
dec
out
mov
scas
pop
inc
or
and
shr
mov
cmpsb
fbstp
cmp
or
jp
sarl
enter
pushl
mov
sub
movsb
daa
adc
out
pop
mov
jmp
movsb
lret
jecxz
add
or
and
xor
push
pop
add
cmp
lods
ljmp
mov
hlt
inc
mov
xchg
scas
sarl
pop
mov
fwait
insb
fadd
jge
mov
data16
repnz
push
es
cmp
hlt
cwtl
mov
pop
fmuls
xchg
mov
dec
repnz
jb
xchg
mov
mov
incl
pusha
xor
rol
mov
mov
call
sbb
mov
ljmp
int3
jg
pop
push
pop
and
sub
es
dec
inc
sbb
mov
mov
mov
pop
cmc
cmp
adc
out
divl
test
or
sub
lock
xchg
out
jmp
cli
daa
ds
ljmp
movsb
in
dec
push
and
cs
or
ret
idiv
ljmp
and
push
orb
in
aaa
xchg
mov
inc
xor
dec
je
jb
push
pop
test
pop
fwait
xor
cli
lcall
sub
insb
xor
xlat
ja
mov
pop
sub
pop
scas
outsl
and
mov
aad
jecxz
dec
cmp
or
fbstp
mov
and
jge
sub
cld
push
in
loope
scas
fistpl
test
pushl
clc
aas
mov
fimull
out
cld
jl
add
pushf
out
adc
popa
xorb
imul
test
les
std
decl
pop
mov
enter
mov
pop
fimull
jg
add
testb
insb
fimull
inc
jmp
out
adc
fistpl
sbb
andb
jmp
adc
dec
and
lahf
inc
lret
inc
sub
shrb
and
jecxz
test
incl
insb
imul
adc
and
fs
pop
xchg
aaa
cmp
movsl
and
mov
xchg
mov
dec
ljmp
jl
xchg
aad
lret
sbb
leave
jno
addr16
adc
or
dec
sub
xchg
sub
repnz
xchg
cli
mov
xchg
sbb
push
sbb
sbb
fwait
sar
incl
sbb
xchg
icebp
xlat
adc
push
jecxz
daa
test
movl
jecxz
jmp
dec
xor
call
cmpb
push
mov
pop
dec
cli
cmp
lods
repnz
fcoms
lock
inc
or
idivb
add
jg
out
push
mov
rorb
bound
mov
xchg
lods
add
sbb
mov
movsb
dec
push
xchg
cli
jle
jnp
cwtl
cmp
imul
mull
push
loop
ljmp
sub
push
xchg
cmpsl
or
mov
inc
mov
dec
xchg
in
lret
sub
pop
popa
mov
sub
lcall
sbb
adc
mov
ds
cmp
xor
ret
loope,pn
adc
pop
cmp
push
aaa
nop
dec
loope
fbld
lea
enter
dec
ja,pt
clc
adc
xchg
insb
jmp
test
adc
sbb
mulb
std
jmp
scas
aad
aam
fisubrs
jae
lret
mov
mov
add
xchg
shrb
lods
xchg
clc
mov
xchg
int
mov
or
add
stc
std
std
dec
dec
mov
aad
stos
jg
pop
push
test
je
push
jo
daa
inc
or
cli
insb
inc
pop
push
push
push
decl
cmpsb
mov
filds
mov
outsl
popf
jl
jg
notb
fwait
or
data16
xor
and
mov
enter
add
jo
fcomip
mov
or
push
mov
cld
sub
mov
pop
sbb
inc
sub
inc
dec
pushf
in
mov
daa
add
inc
scas
iret
sbb
sub
sbb
or
cmp
hlt
addl
popl
movsl
mov
fsubs
inc
sbbl
ljmp
and
insb
repnz
push
sbb
je
pop
push
div
sbb
ss
ficoml
scas
nop
add
movsb
movsb
sbb
es
div
popa
cmpl
mov
jl
movsb
add
leave
cmp
cmove
add
push
dec
inc
cltd
mov
lcall
pop
dec
add
outsb
jmp
pop
sbb
mov
ja
adc
mov
cltd
cmpsb
jmp
stc
pop
adc
or
lods
pop
cltd
jl
xor
sbbl
jle
stc
test
rclb
mov
mov
stc
nop
ds
les
push
or
out
iret
jp
das
fdivs
adc
adcl
ljmp
cmpb
and
test
adc
ret
decl
add
mov
push
idiv
popa
xor
in
mov
cs
les
cmpb
or
sub
incl
shl
xor
js
test
les
inc
mov
int
push
aas
arpl
mov
dec
lock
mov
loope
mov
sub
or
cmp
sbb
push
push
movsb
push
shl
ret
mov
pop
loop
cmp
test
mov
mov
xchg
ss
enter
movsb
jo
ss
mov
cld
mov
aas
scas
push
imul
cmp
mov
push
aas
addl
xor
cs
pop
cmp
jb
fistpll
jo
out
cwtl
jg
xchg
int3
dec
out
andb
jmp
xor
xor
inc
sub
movsb
jg
negb
cmpsl
popf
sbb
ss
iret
jge
js
inc
mov
mov
ret
lcall
hlt
insb
stc
dec
pop
jnp
adc
and
shr
push
test
mov
das
dec
jae
fnstcw
adc
dec
pop
ljmp
popa
pop
pop
lret
or
add
fbld
outsb
jb
imul
jp
jecxz
js
and
stos
js
into
xchg
jnp
jnp
pop
adc
pop
sub
decl
les
mov
adc
mov
mov
inc
ljmp
push
fbstp
test
incb
push
xchg
test
xorb
mov
not
call
bound
mov
ror
fdivl
dec
test
jns
jg
cmp
aas
mov
xor
iret
out
mov
mov
pop
xchg
pop
add
pop
hlt
ljmp
in
leave
mov
adc
mov
push
jge
or
fcos
pop
pop
ljmp
shrl
xor
das
adc
xor
pop
pop
and
inc
cmp
jp
in
mov
aad
jb
mov
or
pop
mov
rcrl
pop
push
xor
inc
sub
cmp
mov
ds
mov
inc
mov
stos
decb
outsl
in
sub
out
outsb
sub
les
jae
scas
jg
cmpsb
ja
in
mov
fisubl
jp
dec
out
jl
inc
insl
mov
inc
push
jbe
pop
xor
ret
inc
xchg
push
pop
test
or
ljmp
jb
and
testb
adc
and
pusha
movsl
push
push
or
pop
loopne
mov
xor
mov
sub
call
mov
aaa
ljmp
sub
ljmp
icebp
out
dec
in
xchg
mov
ljmp
mov
jl
dec
aas
cli
and
lahf
test
or
sub
movl
inc
stos
fdivp
cmp
cmp
sbb
or
sahf
test
push
mov
pop
lret
xchg
popf
fwait
cmpb
or
clc
push
mov
sub
or
loopne
fimuls
loopne
mov
jmp
lret
push
ljmp
je
cmpb
mov
rcrb
aam
pushf
dec
arpl
leave
add
inc
jmp
scas
mov
and
push
jp
shl
and
xchg
sub
xor
movsl
cltd
mov
arpl
andl
cmpsl
adc
cmpsb
jg
dec
sbb
jbe
xor
pop
jl
ljmp
dec
push
out
push
fcom
insb
mov
aam
jo
enter
jno
js
mov
testb
sbb
fcoml
sar
es
iret
movsl
mov
leave
pop
sar
sbb
pop
mov
lret
or
lret
adc
aad
sbb
pusha
mov
inc
mov
mov
jl
and
sahf
cmp
insb
pop
sub
outsl
add
aad
shlb
lret
ret
inc
push
jle
dec
adc
jae
aaa
dec
cli
pop
mov
or
or
arpl
test
aad
decl
leave
xchg
outsl
xchg
in
scas
cs
xchg
rolb
imull
hlt
cmp
decl
xchg
add
push
gs
mov
and
dec
popa
int3
hlt
sbb
or
test
mov
fsubs
nop
sbb
aam
jecxz,pn
push
cld
inc
push
inc
fstpl
add
leave
in
es
lcall
push
push
sub
xlat
cmp
dec
mov
mov
and
aaa
mov
fucomp
mov
test
scas
xor
fcomip
fucomip
cmp
cmpsl
fwait
inc
push
insb
dec
nop
lret
jmp
hlt
stos
stos
push
loop
pop
out
inc
cld
lock
cmpsb
inc
das
cli
pushf
sbb
xor
dec
dec
test
push
ljmp
sub
jae
in
adc
jbe
scas
out
ret
pop
mov
lahf
jne
repz
ljmp
mov
dec
pop
in
mov
out
js
ja
pop
imul
insl
popa
pop
lock
or
adc
orb
js
sub
lea
aad
loopne
je
push
mov
ljmp
adcb
shrb
mov
add
test
xor
lcall
ljmp
adc
fcomps
data16
inc
cmc
nop
divl
das
mov
sub
jl
inc
aas
adc
push
outsl
xchg
or
mov
cmp
inc
mov
lock
mov
jg
inc
jbe
push
ds
xlat
test
add
lods
mov
in
lret
sub
lcall
cltd
lahf
xchg
lock
fnsave
sahf
xchg
cmc
xor
rcl
push
mov
loopne
out
insb
rcrb
sbb
in
inc
or
hlt
or
sahf
lods
lock
fmul
mov
or
jmp
push
std
jae
sarb
dec
std
das
adc
xchg
dec
inc
jnp
sub
push
add
mov
stc
or
lahf
cmpsl
xor
ret
fidivl
push
jg
cmp
mov
jl
mov
gs
add
inc
std
mov
lcall
fstpt
ret
dec
jno
jne
in
mov
mov
sbb
std
mov
jle
nop
fs
leave
cmp
inc
jg
jg
adc
mov
aam
add
push
shrb
xor
fdiv
dec
lcall
dec
or
pop
or
jb
inc
ja
xchg
std
pop
call
mov
subl
aad
jg
add
std
dec
call
in
nop
fsubs
pop
rcrb
sbbb
lods
mov
pop
adc
sbb
add
xor
mov
enter
ja
mov
loope
adc
fistps
and
jmp
mov
cwtl
rcrb
jnp
and
add
std
sbbb
iret
arpl
test
push
mov
ja
xor
fwait
scas
in
scas
fidivrs
xchg
mov
rcrb
cmp
xchg
dec
pushw
ja
or
mov
out
es
and
std
jp
lods
mov
outsl
mov
fucomip
jbe
xchg
movb
push
jg
sbbb
mov
pop
and
out
push
rolb
push
jp
into
adc
push
xchg
sahf
mov
or
mov
add
fisubrl
pop
pusha
loopne
test
mov
adc
jg
push
adcb
ret
addb
or
mov
sub
xchg
add
or
inc
in
sti
xchg
xchg
mov
leave
dec
xchg
jb
push
lds
into
cmc
nop
cli
push
push
xchg
aad
enter
lock
cmp
sub
adc
fcmovnu
int3
mov
inc
insl
daa
jne
rorl
cwtl
fdivrs
das
nop
fwait
adc
enter
imul
adc
mov
aam
fs
les
lcall
addr16
pushl
shlb
jle
cmp
in
call
add
push
cld
mov
or
mov
pop
or
jl
in
fmuls
pushl
or
mov
lret
cli
sub
dec
ja
popa
out
cmpsl
fiaddl
xchg
pushf
test
mov
push
and
cmpsl
test
scas
jbe
mov
jno
add
pushl
std
iret
aam
xlat
xor
stc
inc
xchg
adc
push
xor
ret
incl
dec
in
aas
daa
test
sub
jl
popf
mov
mov
loopne
addr16
fisttpll
fsubrs
xchg
out
pop
lea
ljmp
popa
rcrb
push
test
insl
inc
dec
sbb
icebp
ljmp
push
fbld
jecxz
pop
data16
cmc
js
push
sub
cmp
lods
mov
fdivrs
stos
sub
push
fbstp
push
fcoms
ljmp
daa
aas
std
in
cltd
pop
lds
mov
out
movsl
pop
cmpsb
mov
fs
xor
fidivrs
xchg
fisubrl
js
div
lock
cld
xchg
xchg
push
cmp
fbld
or
mov
ljmp
mov
bound
mov
imul
mov
add
pop
cmc
sbb
mov
adc
dec
jns
sbb
fwait
sub
into
inc
mov
add
imul
shlb
push
fldt
mov
push
lds
aaa
outsl
push
je
or
movb
das
test
rorl
pop
sub
jg
fcoml
std
dec
adc
call
xchg
dec
ljmp
fcomp
popa
dec
pop
mov
hlt
mov
dec
sub
inc
movsl
test
mov
pop
clc
mov
sahf
pop
leave
and
fstps
cld
mov
ja
filds
mov
in
and
movsb
push
xchg
pop
lds
sahf
xchg
idivb
mov
insl
cmpsb
sbb
stos
lock
mov
jne
cmc
xchg
gs
jg
arpl
adc
adc
mov
hlt
iret
or
loop
sub
into
mov
std
ja
xchg
xchg
stos
in
and
sar
jg
ficomps
dec
in
push
test
test
mov
or
xor
pop
in
push
stc
xor
cmp
xlat
push
loopne
and
int
aad
add
pusha
movsl
add
ffreep
xor
jg
popa
inc
mov
bound
or
mov
fs
insb
ret
pop
xor
add
filds
jmp
mov
jle
cwtl
dec
push
sub
fwait
insl
cld
jb
xchg
pop
lcall
stos
pusha
jns
lock
push
leave
xchg
sti
jge
cmpsl
or
jne
cmpsl
sub
add
add
dec
or
repz
cmpl
sbb
jl
and
or
pop
test
add
add
push
jo
sbb
push
push
sub
sub
and
pop
push
adc
in
int
movsb
repz
fyl2x
xor
fwait
xchg
inc
jmp
push
pop
or
mov
in
out
sub
and
adc
sbb
lahf
push
ja
pop
fs
ljmp
mov
push
inc
mov
mov
push
xchg
aas
and
pusha
add
xlat
inc
sbb
cs
mov
pop
xor
lcall
fists
scas
in
outsl
loopne
mov
inc
mov
js
mov
inc
sub
pusha
inc
clc
outsb
add
or
mov
lods
or
leave
mov
sbb
jg
stos
mov
xchg
sub
jecxz
push
scas
std
add
mov
sbb
xchg
faddp
xor
ficoms
insl
out
outsl
cmp
stos
inc
add
sbb
pop
pop
cli
mov
ja
jge
cmp
inc
cmp
aam
ljmp
icebp
pop
and
dec
jge
stos
mov
js
dec
mov
rolb
sbb
std
ud0
push
pop
add
jnp
cmpsb
addr16
and
or
rclb
jg
cmc
stos
push
xchg
popf
popa
jg
add
das
add
leave
xchg
sub
notl
xor
je
and
push
mov
cld
jbe
jne
pop
xchg
pop
nop
lret
movsl
adc
scas
js
cmp
scas
add
movsb
mov
ret
pop
pusha
fcomip
ljmp
add
fbld
loop
lods
mov
mov
sahf
mov
jge
pushf
dec
ret
xchg
insb
jnp
leave
sbb
sub
xor
push
mov
pop
pusha
ljmp
xchg
in
jle
shlb
lock
jge
fidivs
dec
inc
push
xorb
jae
clc
dec
pop
push
imul
sbb
and
jg
inc
add
and
pushl
and
leave
es
or
into
push
sarl
cli
lcall
mov
mov
xor
push
popa
in
and
decl
pop
test
add
push
repz
xor
xchg
sti
xor
push
pop
dec
aad
dec
inc
hlt
out
cmp
cmpb
or
jnp
insb
test
rcl
jno
aas
xor
leave
jo
fcomip
sub
mov
xor
out
bound
test
jbe
pop
insl
cld
out
jl
cmp
shrb
xor
imul
xchg
out
jp
xor
loop
xor
lcall
adc
dec
or
outsl
mov
inc
andb
add
std
push
daa
aam
mov
popf
add
repnz
incl
lods
or
xor
push
aad
sahf
cltd
les
stc
jo
ud0
add
loopne
cmpsb
mov
xchg
sti
inc
pop
and
sub
jle
popa
push
addr16
call
rcrl
test
pop
dec
cmp
mov
addb
fs
arpl
xchg
jno
push
pop
enter
std
jns
push
jle
push
pop
mov
fidivrl
subl
mov
or
out
xor
shrb
xor
pusha
xchg
shr
lods
jge
cld
push
push
out
popf
rcrl
inc
decl
lock
out
mov
push
fsubl
dec
xchg
add
xor
add
mov
mov
mov
mov
fcmovne
mov
lcall
je
jp
stos
or
in
ja
pop
xlat
pop
or
adc
data16
sub
mov
fcompl
jg
jle
inc
dec
mov
int3
movsl
mov
mov
jg
aam
mov
push
pop
sub
les
pushf
or
jmp
sbb
rolb
mov
jg
pop
xlat
pop
lods
aad
fimuls
ljmp
test
pop
sbb
lret
scas
sar
sub
dec
call
stos
mov
dec
mov
bound
movsb
insb
clc
das
push
cld
test
lock
scas
sbb
lcall
or
fdivrl
pop
fdivs
and
mov
fcmovbe
lea
out
jle
jg
jmp
std
mov
pop
lahf
push
push
int3
cmpsb
rol
mov
stc
int
cmp
and
pop
inc
ret
neg
mov
and
faddp
mov
inc
pushaw
sbb
bound
lcall
push
lock
xchg
insb
cltd
inc
lea
in
daa
clc
js
jno
inc
std
cmpsl
pop
nop
not
imul
ret
subl
pop
sub
adc
xchg
loop
xor
mov
mov
add
icebp
hlt
into
movntq
out
add
sub
pop
cmc
pop
cmp
or
jg
ss
sbb
adc
fnstsw
stos
sub
iret
icebp
cmp
cwtl
jb
inc
add
and
xlat
ret
sbb
movsl
sub
cmp
mov
hlt
mov
cwtl
push
pop
mov
push
inc
ljmp
mov
xchg
enter
sbb
adc
or
pop
loope
rorl
xchg
test
sbb
negl
xchg
mov
mov
jo
cmpsl
decl
or
shlb
add
jae
adc
mov
pusha
pushf
jge
add
ja
push
inc
xchg
movnti
add
decl
sti
fcomip
test
dec
cli
add
testb
adc
cmp
in
cli
pop
pop
loop
neg
inc
mov
mov
dec
filds
icebp
incl
xor
pushf
fcompl
outsb
aad
in
mov
hlt
xchg
jns
sbb
jmp
adc
ja
sbb
pop
in
sub
je
push
pop
mov
sbb
stos
push
mov
pushl
sub
or
je
and
ljmp
addl
pusha
mov
and
popa
xchg
mov
iret
lret
pushf
and
push
aas
les
sub
mov
push
adc
mov
bound
jo
mov
roll
xor
imul
push
cwtl
mov
inc
and
jle
into
sub
loope
push
mov
push
mov
lret
sbb
jbe
pop
inc
fsubrl
arpl
adc
sti
jecxz
or
and
mov
nop
cld
mov
ret
das
into
ret
or
lea
inc
jmp
cmp
loop
jmp
push
js
adc
jb
cmp
or
jecxz
push
cmp
insl
and
and
subb
insb
call
loop
push
lea
xchg
movsb
pop
xchg
in
pop
mov
dec
pop
jmp
ds
roll
push
mov
mov
dec
mov
xchg
sub
adc
inc
jg
sub
incl
adc
lcall
mov
jge
ja
adc
or
and
jne
mov
mov
mov
pop
movsb
pop
and
std
in
mov
mov
test
scas
sti
clc
add
ljmp
aas
jb
dec
mov
scas
jns
xor
stos
jp
rorl
cli
adc
sahf
inc
cmpsl
cmp
add
inc
xchg
mov
xchg
lcall
int
sbb
pop
clc
stos
mov
mov
test
pushf
lea
push
je
outsl
cli
lcall
xlat
inc
jg
mov
dec
sbb
outsb
aas
add
stc
std
jg
test
lret
push
out
xchg
mov
int
xchg
xor
xor
sbb
enter
lods
out
cmp
inc
fildll
loop
pop
mov
sub
ljmp
rcl
lret
in
xlat
push
scas
ret
sbb
jb
cltd
loope
je
mov
hlt
sbb
push
pop
sbb
push
rclb
or
outsl
stos
fmulp
pop
and
test
test
pop
subb
bound
mov
sub
pop
lock
cmpsb
adc
pusha
sub
cli
lcall
pop
inc
mov
push
jnp
scas
out
fs
outsl
inc
imul
fnstenv
pop
pusha
adc
dec
cmp
adc
aad
xchg
pushw
push
scas
inc
lds
lock
or
ds
lret
pop
mov
out
add
mov
xchg
mov
push
call
pop
mov
pop
and
cmp
jmp
mov
add
mov
xchg
inc
icebp
xchg
sahf
add
xchg
mov
fdivr
cmp
leave
mov
mov
add
cmc
and
inc
data16
and
incl
popa
mov
jae
pop
ljmp
fs
push
sti
loope
push
cmpsl
or
xor
popa
iret
cld
pushl
push
push
xor
mov
cmp
jo
mov
fstpt
dec
mov
cwtl
mov
adcl
ljmp
jle
mov
ffree
push
iret
cmpsl
pop
mov
inc
mov
mov
xchg
jg
xor
out
mov
mov
dec
out
std
lcall
pop
cmc
pop
mov
xchg
mov
mov
inc
and
add
cmp
sbb
mov
lret
or
lret
and
xor
rclb
cli
call
inc
sub
dec
cmpl
jg
fwait
scas
mov
out
lods
mov
xor
sbb
out
repz
pushl
cltd
pop
stc
imul
xor
dec
push
arpl
push
push
cs
sbb
daa
je
arpl
xchg
loope
rcl
in
movsl
mov
and
sbb
repz
mov
fcoml
push
or
dec
inc
rcrb
lcall
jmp
outsb
push
inc
push
sbb
xlat
mov
push
add
push
in
sub
imul
adc
aaa
jne
roll
or
jp
mov
leave
push
add
in
add
in
jp
cmp
rcrl
and
std
outsl
movsb
out
sbb
cmp
sbb
enter
or
add
push
xchg
icebp
cmp
sub
daa
lock
repnz
cmp
insl
dec
mov
mov
inc
mov
xchg
mov
icebp
ljmp
ss
lods
jl
mov
rorl
xorb
mov
dec
xor
dec
inc
cwtl
sbb
jl
in
fcmovnbe
mov
adc
add
sub
jns
outsl
jg
daa
cmp
adc
les
sub
add
lods
adc
or
cmp
jbe
push
gs
pop
sub
adc
adc
jle
push
test
push
sahf
sbbb
ds
dec
inc
xchg
mov
mov
repz
movsb
movsb
adc
or
std
sbb
mov
ret
push
sbb
mov
test
adc
std
xchg
pop
data16
pusha
leave
or
push
or
data16
jg
dec
push
enter
inc
pop
roll
insl
xchg
mov
sub
mov
push
push
mov
hlt
or
sbb
dec
cmc
jmp
push
in
mov
imul
lret
cmpsl
repnz
or
cmp
ja
addb
add
dec
inc
add
adc
inc
sbb
jae
inc
jno
cmpb
loope
fwait
push
call
xor
push
lock
call
pop
clc
jl
loopne
insl
arpl
sbb
ret
mov
pop
pop
sub
decb
xchg
dec
xor
dec
fldl
outsl
aas
mov
fnsave
mov
aad
mov
push
in
jmp
mov
jg
mov
ljmp
jns
cld
dec
or
dec
hlt
cmpsb
ljmp
mov
lret
mul
loopne
inc
inc
or
jg
mov
mov
sbb
mov
xchg
pop
sbb
mov
cmp
dec
daa
mov
add
stc
push
std
out
cli
xchg
xor
sub
cld
add
and
shl
mov
inc
inc
rolb
cli
or
mov
mov
inc
rorb
shlb
mov
mov
jbe
push
sahf
push
cmp
mov
mov
int3
push
or
push
xchg
add
ljmp
aam
or
in
mov
xchg
sbbl
jle
stos
mov
sub
sbb
fs
jmp
loopne
fildl
jbe
inc
push
jns
mov
xchg
jl
leave
or
rolb
pop
in
mov
jbe
xchg
scas
imul
and
lret
adc
push
fs
push
fmul
pushf
rcr
mov
mov
inc
insb
xlat
mov
push
sti
dec
sub
ljmp
es
loop
mov
dec
dec
mov
pop
push
sbb
xchg
stos
stos
dec
inc
rcl
in
pop
call
or
adc
jge
dec
lock
enter
ljmp
xchg
aad
pushl
test
xchg
cmp
xchg
pop
iret
cltd
pop
lods
inc
cmpsl
mov
ds
sub
push
leave
imul
and
repnz
sbb
int3
mov
and
xchg
pop
jle
fcomip
adc
push
popf
jp
add
pop
std
mov
sti
aaa
sahf
push
mov
loope
mov
loop
decl
cmp
dec
fldt
push
inc
jecxz
pop
xor
and
dec
xlat
cld
or
and
sbb
imul
mov
movsb
push
repnz
mov
xor
shl
cmp
pop
sbb
pop
or
pop
sarb
clc
pop
push
fs
adc
xchg
sar
shlb
call
out
xchg
mov
test
xchg
cwtl
inc
or
fmulp
cltd
imul
aaa
shl
in
pusha
call
xor
xchg
sbb
data16
repnz
mov
inc
mov
and
inc
inc
cmp
pop
mov
push
addr16
sub
xor
xor
or
xchg
add
mov
xchg
mov
adc
dec
or
add
mov
and
testb
jg
das
push
cmp
push
xchg
add
sar
sti
pop
enter
xchg
loop
sub
dec
mov
int
mov
call
rol
push
push
mov
dec
movsl
add
cmp
xor
jmp
call
jg
mov
sub
cmc
shr
loopne
test
shlb
lcall
adc
and
jae
bound
pop
mov
or
lahf
fs
xchg
in
shl
into
popa
adc
js
or
ret
dec
jmp
sbb
dec
call
or
inc
outsb
cwtl
in
adc
cmpsb
scas
data16
pushf
pop
pushf
add
mov
mov
xchg
or
mov
dec
inc
push
movsl
movsb
mov
inc
repz
sub
jle
outsl
daa
push
pop
push
push
imul
icebp
pop
sbb
and
pop
cmp
data16
mov
jae
movsl
mov
popf
mov
inc
fnsave
xor
cld
xchg
das
into
and
pusha
and
iret
push
shrb
adc
test
lock
mov
pop
add
pop
fadd
adc
clc
pop
cmc
cld
push
cld
es
test
or
cmc
adc
lcall
lods
pop
jl
push
cmp
xchg
mov
push
sub
cmp
push
movsb
mov
in
mov
call
inc
adc
sub
inc
loop
jmp
dec
shl
push
fs
or
dec
mov
push
adc
int
cmpsb
movsb
arpl
fmulp
cltd
add
rolb
ret
shr
cli
add
mov
xor
fs
or
int3
xchg
pop
ja
sub
jecxz
or
lcall
shlb
scas
mov
push
xor
adc
fnsave
jo
loopne
insb
dec
mov
std
ljmp
jl
xchg
aaa
push
mov
and
fs
and
scas
pop
inc
icebp
mov
cwtl
adc
inc
inc
push
mov
lods
lea
xlat
pop
push
jb
loopne
cmp
xorl
xchg
mov
int
dec
dec
or
mov
testl
xchg
or
mov
adc
int
outsl
dec
adc
cmp
jmp
dec
mov
out
cmp
cmpsb
sub
enter
call
movhps
call
mov
addr16
enter
loopne
mov
pusha
divl
ss
adc
mov
sub
cmc
stos
xchg
adc
and
inc
or
or
insl
aad
es
push
pop
push
sahf
aam
out
push
sbb
xchg
sub
imul
jecxz
fisubl
in
dec
jnp
pop
pop
loopne
lcall
rcrl
mov
insb
mov
lods
aas
sbb
pop
pop
sbb
add
push
jg
shlb
repnz
fmull
fisubl
out
cmpsb
add
mov
cmp
int
mov
enter
push
mov
inc
mov
pusha
xorb
ret
lea
cli
push
jno
pop
mov
mov
insb
mov
mov
les
cwtl
pop
inc
jmp
iret
std
mov
daa
inc
jmp
push
fdiv
mov
insl
jp
push
sahf
out
daa
pop
movsb
out
ficoms
jo
push
test
sub
popa
jmp
lods
mov
ja
or
fbld
mov
dec
pop
adc
scas
cld
dec
pop
in
out
daa
xor
fisttps
jne
in
xchg
clc
adc
sub
in
inc
outsl
or
dec
pop
xor
subb
and
jnp
pop
xor
scas
fdivl
hlt
mov
xor
sub
ror
mov
sbb
clc
mov
outsb
clc
fistpll
or
xor
jne
pop
ds
insb
cmp
ljmp
fldenv
pop
mov
mov
ljmp
pop
mov
and
lret
sar
pop
hlt
lahf
adc
push
and
jno
jge
cmp
shr
test
call
mov
mov
imul
push
mov
das
jp
mov
sbb
pop
nop
push
les
inc
xor
rcrl
ror
mov
decl
insb
das
adcl
mov
movsl
scas
xchg
sarb
stos
dec
std
ljmp
push
in
mov
jno
bound
adc
cld
incl
in
add
cmpsb
dec
cmpsb
mov
ficoms
notl
icebp
cmpsb
cld
xor
dec
cmp
bound
and
push
aam
or
xor
pop
cmp
lcall
ret
std
cmpsb
mov
mov
cli
das
repnz
mov
call
cltd
push
jmp
pop
mov
pop
dec
xchg
sar
mov
mov
fcomi
jne
hlt
test
cmp
xor
aam
jl
out
xor
lds
xchg
sbb
das
incl
inc
inc
xchg
jbe
pop
je
jae
jbe
sub
mov
pop
loop
lret
dec
mov
in
repnz
jmp
fcomi
and
xor
jno
sbb
mov
insl
repnz
mov
cmpsb
idivl
pusha
push
inc
and
decl
enter
dec
xchg
sbb
leave
mov
pushf
add
enter
call
fwait
xchg
rcrl
imul
xchg
xchg
push
mov
cltd
outsb
cld
add
jbe
lds
xchg
jp
mov
hlt
jmp
fists
xchg
pop
bound
aad
repnz
add
and
add
lods
adc
mov
dec
add
scas
jmp
das
nop
push
inc
mov
aad
dec
inc
fisubrl
fnstcw
xor
scas
lahf
jnp
repnz
aas
popa
cmp
insl
imul
movsb
dec
add
test
mov
fildll
cmc
jns
subl
inc
es
xchg
outsb
sar
sbb
frstor
daa
xor
insl
mov
mov
test
hlt
decl
or
push
pop
mov
pop
mov
arpl
mov
rorb
lods
adc
add
or
cmp
add
and
sbb
lret
jmp
ljmp
xorb
shlb
add
mov
dec
xchg
clc
adc
jno
and
mov
xchg
xchg
out
mov
push
or
gs
or
mov
adc
aaa
sbb
mov
and
mov
push
dec
jae
dec
call
xchg
pop
daa
jmp
stos
inc
je
lods
lods
xchg
inc
inc
sub
adc
xorb
push
loopne
cli
jmp
mov
in
ja
xchg
pop
enter
jg
hlt
ja
lcall
mov
adc
ds
fstps
or
sar
pop
ret
jl
les
shll
jp
jb
lahf
outsl
dec
pop
ret
dec
test
idivb
sbb
jmp
push
jp
or
add
aas
or
mov
roll
cmp
repz
incl
jbe
imul
dec
out
xchg
adc
imul
icebp
inc
add
test
mov
push
hlt
sub
jp
mov
call
pop
and
ljmp
cmp
ss
jl
jge
mov
pop
incb
adc
les
out
jo
lock
aad
jno
sar
mov
test
push
lahf
push
push
js
mov
loop
fs
cld
pop
lock
in
cmpsb
inc
xchg
sbbl
and
and
xorb
andl
mov
or
pop
or
push
adc
lcall
movsb
jg
or
inc
lods
mov
sbb
and
daa
dec
dec
in
mov
jae
jae
pop
mov
adc
ljmp
or
shr
out
subl
xchg
mov
subb
push
jle
cmp
pop
mov
clc
fucomi
gs
mov
jns
mov
sub
into
mov
out
cmpsb
pop
mov
mov
ljmp
or
in
aad
and
scas
mov
xor
mov
call
adc
dec
pop
stos
fcmovne
xchg
in
fmulp
fistps
fiadds
dec
loopne
mov
sub
pop
rclb
loopne
sbb
icebp
int
push
push
jg
xchg
dec
adc
out
movsb
ja
jo
fldenv
outsb
pusha
out
test
ljmp
icebp
mov
movsl
mov
mov
jo
faddl
cmp
mov
aas
loope
and
dec
sarb
loope
clc
fbld
es
cmp
cmp
pop
sbb
sbb
add
pop
mov
scas
es
stc
rclb
sahf
sub
push
sti
lret
decl
lock
sbb
mov
aam
xor
cmp
ljmp
addr16
jbe
out
xor
sbb
cs
jge
loopne
fwait
sahf
fsubrs
fimull
sub
mov
jmp
mov
rcrl
push
cwtl
mov
mov
jno
into
jmp
cli
fildll
cwtl
bound
and
pop
ret
lock
ss
sarl
mov
in
cmp
xchg
dec
push
mov
ret
cltd
xchg
test
sub
std
ljmp
push
lds
mov
push
shll
mov
movsb
pushl
push
push
lock
repnz
push
ja
call
mov
ret
sub
cli
jnp
rolb
les
sbb
fnsave
aad
ret
and
std
jb
fidivrl
adc
mov
push
mov
test
test
jl
and
imul
leave
data16
out
jo
jg
sahf
inc
cli
or
jge
mov
mov
das
das
rcrl
and
loop
aam
mov
mov
jmp
leave
movsb
shll
push
add
inc
lods
enter
lcall
stc
pop
icebp
pusha
inc
and
addr16
das
data16
rep
fs
scas
mov
mov
aaa
or
cli
das
rorb
mov
xchg
hlt
mov
sub
or
push
push
push
mov
xor
js
add
push
cmp
fstp
popa
sbb
cmp
shlb
outsl
ja
pop
mov
add
test
xor
mov
dec
mov
add
mov
jecxz
lea
push
add
and
or
pop
sbb
xor
and
outsb
xchg
mov
sbbb
or
push
pop
push
outsb
sti
or
cwtl
cli
adc
test
mov
add
ficomps
xchg
cld
mov
lret
sub
mov
mov
pop
adc
icebp
or
dec
cs
fsubr
jno
in
stos
enter
in
sbb
mov
cmp
mov
mov
sahf
cmp
sahf
sub
add
jp
mov
mov
mov
ljmp
jnp
out
or
repz
jns
cmpsb
scas
adcb
pop
inc
add
out
pop
adc
inc
arpl
mov
pusha
inc
sti
inc
push
jbe
cmp
cli
int3
jmp
dec
ljmp
ljmp
add
xchg
xchg
lahf
ljmp
sbb
sbb
sbb
add
and
jle
call
mov
push
inc
xor
in
call
add
hlt
sub
lods
sub
or
adcb
mov
into
mov
sub
sub
or
hlt
out
inc
out
dec
or
scas
mov
insb
loop
lock
inc
sbb
ljmp
inc
loope
ljmp
ljmp
cmp
nop
add
xchg
xchg
xchg
incb
xor
nop
sub
adcb
cmp
jo
push
xlat
pop
ljmp
das
imul
pushf
incl
mov
push
sbb
cli
das
mov
fwait
test
add
adc
sbb
and
xchg
dec
stc
inc
and
in
mov
and
and
pop
cmpb
mov
xor
sub
dec
subl
lea
sub
inc
xchg
aaa
pusha
mov
mov
ja
cmpsb
jbe
mov
push
lock
sub
loop
push
jp
cmp
enter
xor
ja
xchg
sub
push
inc
ljmp
scas
lcall
std
filds
scas
imul
dec
and
scas
mov
subb
cli
inc
arpl
xor
jb
xor
mov
mov
lds
jg
push
sbbl
mov
cmp
inc
mov
rorb
int3
test
call
inc
outsl
inc
insl
jp
xor
mov
sbb
into
decl
and
int
cmp
scas
push
icebp
lods
outsb
jmp
and
mov
icebp
adc
mov
push
jle
repnz
lods
call
clc
mov
loope
aad
cmp
mov
mov
inc
iret
or
std
call
test
mov
or
mov
les
pop
mov
inc
adc
ja
mov
jae
cwtl
adc
jp
sub
daa
add
fists
dec
test
icebp
pop
jl
pop
aas
sbb
leave
mov
ljmp
pop
stc
cmpsb
xchg
push
sub
and
jg
inc
lods
add
inc
cvtps2pd
xor
mov
push
jbe
call
xchg
mov
mov
lret
mov
fiaddl
jg
decb
mov
out
jne
xchg
hlt
ret
jecxz
mov
call
les
adc
push
test
pop
dec
push
pop
adc
movsl
xchg
push
mov
pop
mov
pop
mul
outsb
dec
mov
sbb
ffree
test
add
test
xchg
ljmp
mov
sub
xor
faddp
lret
scas
andb
mov
fisubl
mov
adc
sbb
outsb
pop
xchg
jb
adc
mov
daa
lods
or
cli
push
xor
pop
cmc
stc
pop
test
out
mov
movsl
aas
jle
xor
push
xchg
jle
movsb
int3
insl
dec
mov
pop
call
lds
jne
sub
mov
movsb
sbb
rol
sahf
xchg
int3
fsubrs
sar
mov
aam
inc
dec
test
mov
push
jae
int
ljmp
mov
and
outsb
ds
add
jb
cld
add
lea
and
es
jbe
mov
dec
test
inc
cli
mov
daa
mov
in
push
pusha
mov
jb
mov
clc
nop
push
add
mov
fildll
mov
je
or
dec
loopne
leave
vdivps
xor
cwtl
addl
fidivrl
xchg
hlt
fisttps
inc
push
cmp
jge,pt
out
fiaddl
jp
jns
cmp
mov
add
sbb
popf
testb
dec
jb
rorl
pop
outsl
mov
xor
add
xchg
mov
adc
aaa
pop
into
call
ds
mov
test
xor
imul
adc
lods
sbb
jl
sbb
adc
and
ljmp
push
mov
fildl
lahf
mov
out
pop
cmp
fwait
cld
std
lods
inc
sahf
xchg
inc
decl
jp
lret
cmp
mov
mov
sar
call
lods
cmp
pop
std
inc
mov
addr16
pop
loopne
jp
pop
xchg
ss
add
push
clc
outsl
mov
lcall
mov
or
stc
jmp
jno
jmp
fwait
xchg
inc
and
in
aaa
cld
pop
mov
dec
sbb
rorb
fldt
in
mov
shr
cli
stos
andl
adcb
enter
mov
mov
out
pop
xchg
into
pop
je
adc
push
mov
call
xchg
ror
cmp
xchg
dec
push
add
ljmp
insb
inc
sub
imul
imul
mov
xor
push
push
cs
mov
imul
mov
in
cwtl
adc
pop
and
mov
or
fwait
clc
loopne
fadds
fstps
xchg
iret
pop
add
and
scas
fsubs
mov
das
or
ljmp
dec
mov
dec
andb
gs
hlt
test
int3
orb
pop
xor
mov
rcrb
ljmp
out
fisubrs
push
iret
jg
sub
pop
push
rorb
jne
mov
push
jae
sub
sti
or
mov
jno
pop
adc
xchg
out
pop
out
jmp
outsb
rclb
lock
pop
int
xchg
sbb
das
mov
sub
shl
jo
outsl
pop
popa
jecxz
inc
incl
lea
sahf
daa
fstl
add
jbe
subl
inc
mov
out
clc
lcall
das
mov
sbb
faddp
iret
mov
pop
mov
fisttpll
sbb
jmp
xor
xchg
adc
jnp
add
loop
fsubl
xor
mov
fstpt
hlt
inc
dec
mov
sub
sub
sub
inc
jne
aas
fsubr
js
jbe
repnz
sub
outsl
nop
gs
loop
ret
or
mov
call
inc
shlb
xlat
mov
pop
aad
in
dec
push
call
lret
xor
jp
gs
mov
push
cld
fwait
movsb
div
leave
adc
int3
xchg
mov
clc
aaa
std
incl
pushf
pop
sahf
cmp
loop
call
mov
cmc
insb
dec
pop
aam
cmc
incl
repz
cmpb
add
pop
pop
xor
mov
adc
mov
cmp
mov
ds
jp
mov
inc
push
popa
rclb
adc
call
lods
repz
cwtl
cmp
ficompl
enter
jg
fdivr
pusha
movsl
cltd
mov
sbb
aas
jl
sbbl
nopl
jnp
sub
xchg
out
mov
and
ja
je
push
outsb
gs
xchg
scas
mov
jg
or
out
imul
push
mov
adc
xor
add
in
sahf
jge
ss
negb
pop
lds
cwtl
mov
mov
rorb
or
add
mov
sub
dec
loop
cmp
dec
cwtl
pushl
pop
sub
ss
dec
outsl
adc
pop
jns
mov
lea
mov
insb
scas
iret
jbe
adc
mov
add
out
mov
lock
sar
enter
dec
mov
mov
jmp
inc
add
xchg
loopne
mov
add
fwait
lea
js
aad
jb
xor
les
mov
mov
and
cmp
jl
int3
les
js
mov
jo
idiv
scas
add
mov
mov
jns
cmpsb
mov
pop
mov
cmpsb
cmp
push
xchg
lods
xchg
pop
negl
push
notb
pushf
xchg
lock
lods
loopne
pop
int3
push
lcall
fwait
mov
dec
or
xchg
jmp
ret
push
lds
cmp
aas
ret
jp
stos
xor
push
iret
in
dec
cld
call
sub
cmp
mov
addr16
pop
xchg
cmpsb
jg
fdiv
in
stos
add
jae
cltd
aam
dec
dec
sbb
sbb
out
sbb
fbstp
xchg
dec
pop
das
mov
fstpt
lcall
and
dec
jmp
cs
pop
mov
mov
cs
mov
jbe
out
adc
cmc
call
ss
sahf
push
or
das
test
lea
addr16
pop
sub
pushl
mov
inc
ret
inc
inc
push
insb
sub
xchg
sti
mov
xchg
fildll
dec
out
int
repnz
jg
add
mov
pop
scas
icebp
push
out
cmp
mov
and
adc
lcall
call
sti
outsb
jb
xchg
mov
ss
push
mov
test
cmpb
push
fcomps
sbb
xlat
into
xchg
sub
iret
aad
mov
jp
out
ret
push
xor
and
test
cmp
and
movsb
outsb
aam
sti
mov
push
adc
pop
mov
push
xlat
ret
inc
and
xor
rclb
lcall
jbe
cmp
sarb
push
imul
dec
jmp
push
out
or
ss
add
inc
inc
in
call
out
orl
dec
xlat
pop
adc
in
pop
jl
and
fidivrs
dec
xchg
rorb
or
into
cmp
mov
in
fs
dec
mov
sahf
inc
cmp
pop
add
insl
sarl
je
ja
aam
sub
das
sbb
dec
mov
ja
rcrl
addr16
scas
lock
push
outsl
addb
xchg
or
mov
mov
movsl
movb
loopne
and
push
cmp
pusha
sub
test
ja
js
call
rcrb
ficoml
sub
xchg
lock
mov
push
lcall
lods
inc
push
xor
fdivl
mov
leave
add
test
and
cmp
push
jg
mov
jmp
jg
fildll
rcr
in
std
inc
push
dec
orl
mov
hlt
mov
mov
xchg
dec
popf
push
fstp
mov
jns
push
adc
cmpsl
pop
pop
xchg
mov
repz
out
orb
test
adc
mov
inc
and
ljmp
std
xor
lock
sub
pop
lods
imul
mov
pushl
or
add
imull
cmp
and
outsl
shlb
pushf
in
das
cmp
pop
mov
push
andb
in
jecxz
sbb
sub
dec
xor
add
inc
scas
adcl
cmp
ljmp
push
or
subb
dec
les
ss
std
mov
xor
inc
addb
out
jmp
in
pushf
mov
xor
or
inc
adc
movsb
add
mov
push
dec
sbb
jae
jp
xchg
ljmp
in
flds
sub
fmulp
pop
dec
push
dec
ds
inc
inc
mov
in
sahf
push
xlat
jmp
add
or
mov
fwait
inc
enter
in
aam
jg
in
and
adc
mov
cmp
jno
xor
xchg
in
mov
mov
push
and
dec
jmp
push
jge
enter
adc
add
fs
mov
pop
inc
pop
insl
pop
outsl
mov
ljmp
lret
ret
mov
and
aad
repnz
clc
jmp
jnp
cwtl
xchg
pop
enter
sbb
pushf
out
pop
sub
cmpsb
std
mov
pop
out
xchg
or
scas
add
and
fwait
fwait
jmp
movsl
mov
sahf
pop
pop
or
xchg
jae
jmp
lahf
fistl
ret
mov
jl
xchg
push
add
add
inc
mov
ret
xchg
adc
ss
push
in
jae
or
incl
mov
repz
ret
sbb
xchg
mov
sub
adc
mov
or
fcoms
xchg
ljmp
mov
addr16
hlt
cmp
dec
mov
or
fimull
ret
mull
jne
sti
push
ja
into
pop
pop
dec
sbb
fsubr
pcmpeqw
jg
lock
lock
adc
xchg
test
icebp
dec
mov
and
xor
and
mov
push
sbb
adc
rorl
dec
cli
add
mov
js
push
fldt
jae
adc
pop
add
mov
xor
pop
mov
jae
push
cwtl
imul
xchg
lock
inc
fiadds
sub
cmp
scas
xchg
rorb
mov
idivb
pushl
add
in
movsb
js
pop
xchg
pushl
cmpsl
jae
cmp
fldt
inc
mov
and
inc
imulb
or
cltd
adc
out
in
dec
sbb
notl
cmpsb
icebp
jnp
ss
movsl
loope
inc
pop
pop
mov
sbb
les
lds
popf
fwait
enter
fimull
ja
adc
cwtl
mov
lret
incl
dec
fs
mov
mov
insb
sub
stc
jmp
pop
stos
fcomip
pop
in
int3
ja
xor
ficomps
shlb
ret
adc
cmp
fildll
add
mov
lcall
outsl
insl
loopne
jg
sub
jmp
push
pusha
adc
repz
push
fbstp
jg
pop
push
rcl
sub
and
and
ljmp
ja
nop
out
popf
adc
xchg
andl
insl
sbb
call
or
imul
repnz
and
or
les
sbb
sub
cltd
out
je
push
out
dec
in
jg
jae
sti
in
push
outsl
cmc
sub
push
pop
cmp
fst
loope
push
mov
pop
mov
push
pop
ret
in
add
pop
add
fdivs
ss
pusha
mov
scas
xchg
cs
mov
in
sbb
fcmovbe
out
inc
push
pop
pop
aam
pop
dec
inc
pushl
nop
out
mov
dec
loope
test
insb
xchg
mov
call
insb
sbbl
mov
lret
add
test
clc
hlt
pop
lret
out
mov
pop
in
push
repz
popf
ds
scas
jmp
inc
test
mov
fnstenv
int
and
ljmp
decb
mov
scas
dec
insb
cmp
jnp
mov
inc
rcrl
mov
test
clc
and
incl
cld
jecxz
in
lds
outsb
push
inc
fdivrs
inc
rcll
fnstcw
sub
xchg
out
mov
lods
ljmp
fisubl
js
sbb
xchg
leave
mov
mov
repz
pop
push
enter
outsl
ret
enter
std
ja
dec
mov
lock
inc
and
sar
dec
xchg
hlt
mov
mov
mov
adc
call
movsl
add
jp
test
and
mov
mov
mov
pop
mov
push
sbb
fs
scas
aam
enter
fwait
insl
pop
sbb
inc
loop
jnp
xor
push
inc
xchg
enter
les
jle
ss
insb
je
mov
and
sub
rolb
lock
or
out
cmc
loopne
dec
inc
mov
inc
sbb
push
xchg
jo
jecxz
mov
inc
inc
pop
sbb
pop
imul
cwtl
pushf
sbb
pop
call
mov
xchg
notb
jecxz
cmp
jmp
cmp
mov
testb
das
mov
fsubl
loope
inc
aaa
add
or
aaa
hlt
outsl
inc
jmp
mov
pushf
and
inc
sbbb
lods
call
daa
test
jg
pop
add
mov
dec
sbbl
cmp
das
ret
and
pusha
gs
mov
fistpll
fcom
push
xor
incl
in
inc
cltd
push
sub
pop
test
fdivs
movsl
adc
lock
mov
mov
loop
xchg
dec
push
inc
adc
sub
test
das
lret
xchg
out
inc
leave
and
adc
and
inc
cs
or
addr16
sahf
push
aad
sub
jge
test
notl
adc
iret
jp
nop
mov
and
sbb
mov
mov
out
loop
push
add
dec
adc
add
stos
adc
or
inc
ss
jnp
scas
fsubr
jl
mov
outsb
inc
xor
in
jno
mov
mov
jle
cmp
sbb
cmp
dec
mov
out
addl
frstor
push
mov
bound
mov
inc
jmp
add
into
pop
pop
scas
mov
into
cmp
add
adc
inc
mov
int3
sbb
in
add
dec
pop
lock
rcrl
pop
shl
es
pop
pusha
jle
sbb
and
out
or
les
sar
loopne
aam
mov
mov
jo
sbb
sbb
loope
sahf
lret
mov
jl
adc
js
shlb
stc
mov
add
ljmp
repnz
popf
ret
jg
push
nop
je
lods
imul
push
loop
mov
sar
incl
sysexit
inc
lahf
cmc
add
dec
mov
mov
imul
aas
mov
push
xchg
fcmovb
xchg
loop
outsb
xchg
mov
jne
inc
ss
ljmp
orb
xchg
mov
jb
jo
pop
call
pusha
xchg
sub
call
pop
pop
pop
enter
mov
lahf
data16
aaa
or
ljmp
cmp
or
mov
push
jg
testl
xchg
aas
enter
loopne
pop
push
insl
dec
gs
out
dec
push
xchg
cmpb
inc
rcr
xchg
test
int
jbe
push
roll
nop
sub
mov
daa
xchg
adc
std
cmp
fld
out
popf
cmp
test
or
adc
gs
jg
add
cmp
sbbb
or
pop
pop
pop
fdivs
gs
fcoml
das
mov
clc
pop
inc
dec
xchg
in
push
and
dec
jecxz
insl
lock
dec
push
jae
mov
test
aam
and
fnstsw
pop
xor
add
decl
and
push
mov
jmp
xchg
cld
dec
or
jmp
sahf
out
add
cli
ficompl
test
arpl
repnz
test
cmc
sbb
mov
loope
cmc
lcall
dec
loope
add
inc
cltd
pop
dec
mov
loopw
sub
hlt
call
mov
mov
mov
out
jmp
push
inc
fildll
mov
cltd
cmpsl
fs
call
and
jecxz
popf
mov
mov
stc
xor
push
sti
sbb
mov
xor
xchg
mov
sar
decl
clc
gs
add
xor
cmp
pushl
ror
pop
jmp
orb
mov
sub
aad
mov
daa
in
mov
cmp
inc
fldcw
bound
test
pop
jmp
loop
sahf
mov
idiv
jmp
pop
sbb
jns
dec
ljmp
sub
dec
adc
aam
popa
popa
inc
xchg
jp
and
out
mov
or
mov
push
push
js
daa
fidivrs
sti
jle
or
dec
pushaw
push
xchg
es
cmp
dec
call
bound
outsl
fistpll
jmp
mov
xor
push
and
stos
dec
fcoml
jbe
mov
outsl
jg
arpl
out
push
enter
cmpsl
jnp
outsl
jne
inc
movsb
jle
or
xchg
lcall
push
xorb
aam
jne
sub
loope
dec
xchg
addb
ror
xchg
cmc
fbld
rclb
push
pop
inc
fdivl
cmp
mov
xlat
addr16
adc
or
sub
jns
lcall
sub
mov
es
xlat
lea
popa
std
push
pop
movsl
cmpsl
cmpsb
jb
fisttps
push
es
push
std
shrb
outsl
cli
push
pop
sbb
mov
outsb
and
out
fnstcw
xor
push
ret
movsl
xor
mov
xchg
loopne
loope
add
fisubrs
mov
das
and
int
test
pop
test
xchg
push
jg
push
ret
ror
cltd
dec
daa
loopne
xorb
cmp
imul
out
and
adc
mov
push
dec
cmp
inc
xor
sbb
mov
jo
jmp
cmp
ljmp
or
push
xchg
cmp
decb
jne
mov
fcmovbe
popf
pop
stos
push
push
addr16
xchg
dec
test
add
mov
ficompl
inc
int3
sub
rcl
int3
adc
mov
xor
and
mov
sti
fwait
push
hlt
stos
pop
and
xchg
imulb
cmp
add
sub
rcll
jmp
int3
fwait
sub
adc
ret
divb
shll
mov
fldl
xorb
push
flds
sub
fisttps
lds
ss
mov
ja
jmp
mov
das
rolb
cmc
pop
xchg
lea
fwait
pop
call
lcall
mov
mov
in
lock
lahf
sub
push
pop
mov
mov
lods
push
cmp
or
ds
pop
add
into
outsl
or
push
cmc
push
aam
shll
cmp
icebp
and
and
and
es
ficoml
loope
nop
mov
and
mov
xlat
jecxz
dec
shll
pop
fcos
outsl
or
outsl
xchg
xchg
mov
mov
daa
loope
cmp
cmp
mov
inc
mov
sbb
push
les
mov
pop
xor
fidivrs
lea
pop
jmp
push
das
push
cmp
jmp
decl
cmpsl
xor
lcall
xor
pop
mov
dec
mov
loop
out
ja
push
inc
popf
shrb
mov
mov
dec
fs
xchg
dec
or
jmp
ja
movsl
dec
inc
xlat
movsb
test
xchg
ficoms
inc
int3
mov
jbe
mov
mov
xchg
cmp
xor
stc
notl
push
inc
pop
pop
ljmp
pop
or
aaa
out
sub
xor
pop
or
or
sbbb
je
xor
gs
loope
in
rcrl
jmp
fmuls
adc
mov
mov
mov
out
cli
adc
adc
lahf
pop
stc
inc
int
jge
pop
lds
loopne
mov
jle
in
lcall
mov
cld
aas
xlat
mov
inc
shlb
xor
out
xor
das
ljmp
leave
dec
mov
mov
dec
stos
push
icebp
jg
ds
test
fidivrl
cmp
clc
xchg
adc
imul
mov
sub
push
or
add
jle
pop
in
jge
stos
jecxz
pop
jge
inc
fstpt
mov
ds
jno
pushf
arpl
mov
rorb
lcall
popa
enter
ljmp
sub
mov
push
pop
push
xchg
xlat
sub
icebp
sbb
test
das
push
mov
loopne
dec
je
pop
pop
dec
repnz
jb
and
movsb
cmpsb
bound
jmp
jmp
mov
cmp
adc
or
andb
push
movl
mov
ljmp
sar
clc
sub
mov
stos
push
addr16
dec
mov
jg
enter
pop
int
nop
ljmp
imul
push
mov
mov
fldl
popa
push
add
and
rcl
pop
pushf
pop
test
mov
clc
and
add
jg
push
or
or
push
pushf
cli
adc
xchg
push
enter
in
mov
cs
jle
daa
pop
pop
inc
jb
out
sarb
cs
sub
fcmovne
xchg
adc
inc
outsl
push
sbb
insl
fisttpll
jg
es
mov
or
add
jmp
and
add
jge
outsb
rorb
add
adc
xlat
sub
lock
stos
lods
sbb
clc
out
jbe
mov
push
fdivr
shrb
push
add
jae
push
add
mov
daa
ret
and
rcr
push
repnz
push
push
cmpsl
test
sbb
ljmp
inc
das
xchg
mov
sti
jge
jp
jmp
or
mov
and
mov
popa
mov
int3
mov
outsl
cli
loopne
xor
cmp
fwait
pop
add
call
hlt
add
mov
sbb
call
lods
add
push
jle
je
fs
jbe
imul
test
jbe
std
xor
lock
pushl
lock
inc
jg
fisubrs
lods
or
pop
pop
subl
call
repnz
mov
loope
push
jg
testb
andb
push
pop
clc
xchg
inc
daa
pop
std
call
cmp
xchg
ds
sbbl
stos
cmp
nop
cltd
out
sub
ss
test
inc
mov
sub
sarb
and
xchg
xchg
in
mov
movlps
pop
xchg
or
mov
adc
cld
ljmp
add
dec
fistl
cmp
out
jb
mov
mov
jns
repnz
dec
inc
imul
ljmp
or
movsl
nop
add
cmp
dec
in
or
das
xor
xchg
mov
inc
aam
mov
fstps
jb
sub
mov
mov
sub
mov
jg
bound
cmc
mov
test
xor
dec
jnp
pop
je
mov
stos
inc
lock
push
push
add
mov
ljmp
xor
xchg
mov
xchg
mov
xor
call
mov
in
xchg
and
sbb
mov
mov
cmp
mov
add
gs
cli
mov
dec
dec
jnp
subb
xchg
pushl
xchg
mov
js
fwait
sbb
call
pop
push
push
jo
mov
mov
adc
pop
movsl
pop
mov
mov
mov
nop
aam
adc
nop
scas
ja
mov
out
cli
adc
jmp
cmp
and
fcompl
mov
inc
imulb
dec
sub
lahf
stc
lret
bound
and
divb
in
cwtl
test
call
adc
call
out
cld
outsl
and
xchg
push
mov
fdivrl
adc
cld
jmp
jge
repnz
push
xlat
mov
xchg
hlt
call
arpl
mov
dec
push
lea
testb
std
and
sahf
adc
cmpsb
mov
out
adc
or
cmpsb
mov
mov
gs
push
or
mov
test
or
jle
push
jp
jmp
pop
hlt
push
mov
fwait
test
push
mov
loopne
xor
cmp
or
lock
aas
cmp
cmp
mov
cmp
outsl
imul
jno
pop
inc
enter
xor
loope
fldt
xchg
ljmp
mov
pop
ficoml
add
sbb
cwtl
ss
cs
and
sti
cmp
mov
arpl
jle
lret
mov
push
push
xchg
add
mov
test
push
push
push
dec
js
xchg
stos
and
cmpb
inc
push
test
adc
xor
ret
cmp
inc
xor
and
add
add
add
sbb
fs
mov
sub
popf
mov
push
jecxz
sub
stc
ljmp
int
sbbb
cs
call
ficompl
out
fs
mov
cmp
fmul
push
jl
xor
orb
cmp
push
ss
aad
repz
arpl
ret
out
inc
in
adcb
mov
xor
or
in
or
push
mov
push
aaa
addb
sbb
scas
lcall
mov
pop
push
jo
push
ds
mov
jecxz
roll
mov
mov
xchg
lcall
and
jns
or
sub
adc
hlt
inc
cs
pop
clc
inc
push
sbb
push
out
inc
incl
cli
pop
jbe
outsb
sub
in
mov
push
or
das
cli
stos
addb
sahf
out
cmp
fs
dec
cli
lcall
inc
mov
or
sub
outsb
jns
pop
leave
cli
aam
loope
fisttpll
lock
mov
aad
mov
movl
push
mov
xchg
add
cmp
push
shlb
pop
ret
leave
hlt
jmp
jb
pop
jo
scas
xchg
sbb
lea
sbb
jbe
cmc
jg
cmp
sbb
add
jg
in
adc
mov
or
stos
xchg
push
xor
mov
mov
imul
sbb
dec
out
dec
pop
stos
mov
mov
jb
push
lret
call
sar
ljmp
inc
sti
pop
xchg
cmp
pop
cmpsb
dec
ss
outsl
insb
cmp
int3
sub
or
xchg
sbb
push
inc
dec
lcall
cli
dec
test
bound
ficoms
inc
lcall
into
mov
jle,pn
push
nop
or
push
pop
mov
sub
and
into
cmp
fcomip
lcall
sbb
mov
sbb
test
jecxz
cmpsb
ffree
xor
xor
jg
pop
stos
in
orl
mov
mov
outsb
sbb
mov
loop
dec
or
ret
xor
pop
xchg
sbb
scas
jg
push
sarb
scas
shll
dec
mov
call
fs
orl
pushf
aaa
movsb
xor
push
or
mov
jns
mov
mov
call
cmp
mov
data16
pusha
std
dec
push
xor
inc
and
shlb
repz
jg
bound
outsb
xchg
imul
adc
xor
jne
mov
icebp
or
jg
jb
mov
loopne
decl
outsl
pop
adc
inc
out
out
xchg
leave
sbb
push
dec
inc
int3
lcall
fiadds
adc
fdecstp
and
fbstp
jmp
mov
sbb
std
sbb
das
lahf
les
inc
fists
ss
cmpsb
out
in
push
and
dec
xchg
xchg
test
sub
cmp
xchg
mov
notl
int3
sarl
add
or
ret
sbb
mov
add
cmpsb
mov
addr16
cli
or
xchg
ret
cltd
pop
in
pop
mov
mov
lcall
scas
xchg
xor
lcall
push
mov
lds
fcomps
ret
mov
add
and
lods
ja
stos
mov
mov
jp
and
ja
push
or
jg
in
loopne
shlb
xchg
lds
xor
addr16
movsl
fwait
ljmp
push
ret
add
nop
out
fdivl
pop
mov
fildll
pusha
mov
out
mov
inc
notb
xchg
orl
enterw
and
jg
rclb
jae
setno
imul
xchg
push
sbb
fidivl
loopne
ds
dec
and
jae
jae
push
jge
pop
nop
pusha
push
loopne
push
xor
pop
push
outsb
ror
inc
js
idivb
mov
and
sarb
les
mov
mov
cs
cmpsb
cmc
xor
inc
pop
adc
es
out
and
lahf
fs
loopne
fadd
ficomps
add
xlat
in
lcall
ret
adc
out
jb
outsb
fcomps
int3
subb
adc
repz
inc
ljmp
mov
orb
aaa
cmp
ds
fldt
pop
sub
inc
or
jo
repnz
or
push
adc
mov
int
dec
fidivrl
and
aaa
scas
incl
add
lret
dec
bound
lahf
loop
push
cmp
ljmp
or
les
mov
aam
rclb
and
sbb
std
aaa
push
adc
in
add
xor
incl
repnz
mov
jnp
sub
jp
push
pop
push
add
or
ror
lcall
pop
jl
pop
out
es
push
or
mov
jo
fistl
sbb
icebp
mov
sahf
cwtl
cmc
fbld
lds
lods
pop
hlt
inc
pop
repnz
lcall
mov
outsb
lret
dec
imul
cmp
stos
pop
sub
pop
xor
stos
cs
cli
lcall
idivb
daa
fdivrl
int
mov
or
loope
shrb
test
cmp
inc
add
in
mov
ljmp
jo
loop
dec
or
or
out
clc
pop
and
jg
inc
rcl
and
pop
aaa
fisttpll
inc
out
je
xor
sub
in
mov
add
pop
insl
xchg
call
fbld
push
mov
aad
bnd
inc
orb
ss
dec
in
cs
dec
inc
mov
fwait
inc
mov
scas
mov
pop
imul
jne
cli
decl
movsb
add
sub
sbb
pop
test
decl
loop
mov
dec
mov
fidivrs
inc
or
cwtl
fisubrl
lcall
sub
je
cmp
daa
mov
and
mov
inc
mov
pushf
push
addb
lcall
pushl
push
sbb
mov
mov
mov
decl
mov
sar
mov
clc
das
shll
jb
inc
jle
mov
sti
pop
xchg
push
push
lret
jb
xchg
jle
rcr
jg
and
jmp
jns
fwait
aas
mov
xchg
in
push
xchg
adc
test
pop
ljmp
push
pop
aad
les
lea
jp
xlat
ud0
jmp
lret
push
dec
xchg
dec
and
rorb
mov
out
xor
fcom
adc
jle
clc
inc
outsb
jp
stc
dec
push
mov
movsb
sub
mov
push
sub
into
sub
repz
jg
test
loop
pop
inc
je
test
dec
pop
ljmp
add
fildll
push
loop
cli
cmc
ret
dec
adc
scas
or
popa
push
xchg
es
iret
data16
fdivrl
ds
pop
negb
xchg
je
add
cli
out
imul
add
decl
cmp
std
mov
inc
mov
adc
call
stos
or
nop
xchg
mov
mov
push
mov
sub
inc
or
mov
decl
lcall
sti
cmpl
add
es
or
mov
pop
mov
js
add
pusha
cmc
dec
xor
dec
in
push
shll
hlt
cs
jge
ljmp
stc
dec
cmpsb
dec
add
push
lret
arpl
xchg
inc
int3
pop
adc
push
ss
pusha
frstor
shll
int
xor
ljmp
pop
int
jg
xlat
test
and
mov
jno
jp
lea
jle
push
push
ror
loope
sarl
jp
shlb
fstpl
add
xor
orb
fsubrl
incl
dec
fisubs
add
into
idivl
lcall
movsb
repnz
xor
xchg
lods
pop
xchg
xchg
incb
shrb
stc
in
fldl
inc
ret
xor
and
call
xchg
adc
mov
mov
pop
test
sar
pop
loop
movsl
fidivl
stos
popa
movsl
mov
ret
ljmp
push
push
mov
mov
dec
dec
popl
arpl
push
dec
insb
and
clc
incl
mov
mov
in
std
sub
jecxz
xor
pop
xchg
jp
mov
test
clc
adc
adc
pop
std
pushl
loopne
int3
repz
in
pop
mov
aaa
xor
ljmp
icebp
pop
inc
andb
pop
xchg
pop
mov
sbb
jg
xchg
adc
sub
out
ljmp
pop
iret
adc
adcb
enter
dec
and
negb
bound
gs
mov
mov
pop
dec
fwait
es
jmp
xor
decl
je
scas
iret
adc
xor
jge
movsb
push
dec
mov
or
decl
xor
lods
test
mov
push
pushf
test
lds
test
mov
push
pushl
cmp
add
je
xor
aas
or
sbb
cmpsl
xor
movsl
out
jg
dec
fidivrl
or
pushl
xchg
push
mulb
idiv
in
jno
int3
jp
inc
pop
mov
and
fs
mov
pop
push
test
clc
sbb
and
mov
ret
rorb
mov
xor
mov
sarl
fadds
mov
jg
scas
stos
mov
mov
xor
jae
jmp
lret
adc
inc
test
inc
pop
add
pop
je
lret
mov
aam
scas
fcomp
cmp
xchg
and
and
jo
push
mov
ds
mov
nop
and
mov
add
negb
add
pushl
jmp
js
out
out
and
out
and
scas
lcall
fwait
dec
xchg
mov
je
imul
cld
dec
sub
mov
jg
fwait
or
mov
jno
loope
push
lock
ljmp
and
pop
cwtl
sub
cli
push
test
push
jmp
outsb
inc
lret
leave
rorl
fnstsw
imul
cmp
xchg
sub
push
shr
ljmp
add
xchg
jae
sbb
cmp
cmp
mov
xorb
cwtl
ret
inc
loope
testb
and
sahf
imul
sub
mov
ds
pop
adc
mov
pop
push
jno
xchg
pop
push
lret
pop
icebp
mov
sub
sub
out
outsl
pop
cmp
sbb
lock
or
inc
lcall
bound
outsl
mov
mov
add
inc
push
gs
int3
push
push
mov
sti
jg
stos
jp
aaa
popf
xorb
xor
xchg
push
mov
in
insl
je
sbb
dec
cmp
lods
fcomps
mov
mov
fwait
or
out
xor
jl
mov
ret
insb
ss
push
mov
ss
pusha
lods
outsl
lods
movsl
add
popa
in
or
sub
mov
sub
pusha
adc
clc
sbb
push
cld
icebp
mull
hlt
es
rcl
in
cli
pushl
je
mov
or
dec
inc
out
push
inc
arpl
cld
call
js
xchg
inc
or
pop
idivb
inc
push
jo
inc
popa
mov
and
jg
pop
or
fcomip
push
cli
adc
loop
into
cltd
pop
or
rcrl
fadds
loopne
mull
lods
jno
paddusb
ja
lcall
call
add
adc
mov
xchg
inc
outsl
dec
enter
ss
idivb
and
pop
mov
pop
mov
push
add
xor
out
cmp
call
pusha
jg
xlat
sub
and
dec
ds
pop
repz
ljmp
nop
mov
pop
sbb
scas
pop
mov
push
fdivrs
insl
pop
adc
inc
cld
jmp
sub
mov
hlt
sbb
fdivr
out
nop
jno
lea
repz
fcomip
loop
mov
or
jb
lret
popf
loopne
ljmp
jl
sub
jl
loopne
ret
mov
ret
cli
mov
rorb
mov
mov
jne
dec
push
jo
mov
add
call
inc
dec
repz
loop
mov
rcrl
or
movsb
ds
pop
nop
inc
pop
mov
incl
sub
jmp
insb
or
cli
cmp
sub
ljmp
call
or
mov
xchg
outsb
ficompl
add
clc
mov
push
gs
and
cli
inc
movsb
incl
adc
call
pop
gs
test
push
es
cmp
outsl
mov
jne
test
into
mov
dec
push
or
aas
cld
inc
mov
movsl
andb
cmp
sarb
sub
test
ret
mov
cmp
lret
or
rcrl
adc
inc
dec
pop
nop
inc
push
imul
popa
cmp
mov
adc
repz
pop
push
lock
push
adc
cli
inc
lea
shrl
fldenv
sub
andb
inc
or
insb
popa
pop
push
sbbl
push
arpl
call
cld
stc
add
jb
inc
ss
sub
lock
inc
dec
jno
add
mov
lods
jo
jg
push
sbb
shr
push
sbb
dec
mov
or
mov
pop
icebp
popf
aam
fwait
pop
pop
sbb
cltd
ret
xor
ja
mov
bound
loope
inc
int3
sub
or
push
mov
fs
dec
das
inc
into
loope
test
test
dec
fsubs
pop
cld
inc
je
ret
iret
arpl
xchg
cmpsl
std
ljmp
sahf
rcr
dec
jecxz
mov
pop
stc
test
and
scas
pop
outsl
cli
pushl
xchg
int3
repnz
add
je
inc
cmc
std
push
sub
sahf
dec
pop
in
ljmp
push
cld
daa
push
pusha
mov
std
jg
inc
jmp
loope
sub
test
mov
cmp
cmc
jg
adc
arpl
pop
call
mov
inc
fsubr
xor
add
dec
xchg
cwtl
js
ljmp
jp
jl
inc
dec
push
insb
add
push
xlat
add
adc
mov
add
rcrb
cli
push
ret
movsl
test
call
loopne
pop
xlat
testb
mov
call
dec
push
dec
cmp
cltd
popfw
sub
sbb
outsb
mov
mov
jnp
addr16
cld
add
inc
in
rcl
pop
lods
or
movsb
and
push
xchg
push
xchg
lcall
mov
in
orl
in
jbe
fptan
mov
sahf
xchg
rcrb
mov
add
cltd
mov
xor
lret
dec
jg
push
enter
dec
xchg
in
rcll
outsl
mov
clc
enter
or
sahf
sbb
jns
mov
mov
mov
in
add
mov
cmpsb
cmp
adc
sub
inc
js
iret
fidivs
and
sbb
mov
subl
xlat
imul
mov
rcll
jg
adc
mov
sbb
mov
stos
inc
pop
pop
mov
push
clc
push
nop
mov
loope
jbe
bndldx
into
adc
call
pop
push
or
jmp
stos
lods
fstps
dec
or
aas
xchg
jne
sbb
data16
xchg
and
cmpsb
std
push
inc
sub
into
push
cli
pop
ljmp
or
ficomps
or
add
mov
or
loop
pop
lock
sub
sbb
dec
out
shlb
sbb
aam
mov
cmpsb
adc
xchg
xorb
add
lock
or
test
subl
mov
cmp
cmp
jg
stc
inc
call
mov
jb
dec
and
inc
inc
movsb
cmp
aas
mov
xchg
add
mov
push
dec
xchg
pushl
mov
add
mov
mov
jmp
mov
jnp
mov
pop
dec
sti
je
adc
jns
sbb
mov
and
mov
xor
mov
push
inc
sti
pop
jns
inc
into
cmpsb
adc
dec
ds
jo
ret
inc
jb
inc
mov
inc
lcall
pop
sbb
adc
and
cld
incl
inc
push
psrld
bound
lock
jg
fidivrl
ror
cwtl
xor
stos
add
ss
loop
sti
sti
pop
jmp
pop
adc
xchg
jmp
sbb
mov
jl
jmp
dec
movsb
enter
inc
add
loop
cmp
pushl
sarl
loope
dec
sbb
loopne
mov
filds
sub
hlt
es
negb
push
pop
push
jge
rcrb
mov
hlt
nop
jo
or
call
xchg
scas
popf
dec
add
xchg
scas
outsl
jno
xor
call
test
clc
or
mov
lock
ljmp
xor
ljmp
rclb
pusha
cld
ret
lret
pop
insl
inc
sub
push
dec
xor
call
pop
sub
sbb
mov
mov
in
pop
cmp
push
ret
ljmp
sbb
xor
fucomp
mov
jg
mov
mov
mov
fst
int3
movsl
js
loopne
clc
dec
adc
roll
imul
mov
incl
lods
xchg
clc
gs
xorb
mov
cmpsl
in
mov
jmp
mov
or
inc
xorl
out
xchg
inc
mov
fildll
pop
movsb
pop
int3
lods
cmp
int3
insl
imul
gs
jo
call
sbb
push
jns
mov
push
push
inc
push
aad
jp
cli
ja
pop
jp
push
lret
push
jl
push
mov
out
nop
stc
js
cltd
mov
or
repz
ffreep
or
cs
int
jg
push
cld
mov
js
inc
or
mov
fs
add
pop
push
jle
and
outsl
pop
sub
xor
sub
outsb
jno
out
ljmp
mov
xlat
test
mov
jmp
cld
mov
mov
sub
cmp
xchg
pop
push
ret
mov
pushl
out
out
ja
dec
mov
aas
cmp
call
loop
push
pop
inc
mov
mov
cli
jmp
dec
rorb
jno
jp
sub
cmpsl
decl
sbbb
mov
cmc
lea
ret
rorb
and
scas
ljmp
je
into
movsb
xchg
cmp
lock
movsl
inc
bound
and
cs
mov
pusha
push
loop
nop
jmp
mov
cli
and
sub
jg
push
ljmp
sub
rol
mov
aas
add
pop
jmp
stc
mull
adc
int
xor
sub
pop
cli
imul
hlt
xchg
dec
cld
jmp
fstps
fisubrs
in
mov
enter
incb
filds
enter
dec
divl
push
push
xchg
sbb
push
shr
in
inc
mov
sub
jae
pop
adc
cs
fcomip
jbe
lahf
inc
fcoml
sbb
sti
fimuls
jb
mov
lods
iret
shlb
pushf
sub
push
ljmp
lret
jno
add
mov
jl
mov
repz
repz
sub
xchg
push
pop
mov
mov
xor
xor
mov
push
lock
idiv
in
arpl
bound
inc
push
add
inc
add
inc
pusha
decl
xor
lea
or
or
addl
cltd
cmp
loopne
inc
inc
dec
pop
push
cmpsb
sbb
sub
jmp
shll
pop
inc
mov
mov
bound
xchg
dec
dec
enter
pop
cld
jg
push
inc
mov
adc
gs
out
adc
std
jge
jl
push
and
int
lods
mov
cwtl
add
mov
or
test
fnsave
mov
rorb
pop
hlt
jmp
jmp
and
sbb
jnp
imul
jbe
rclb
inc
mov
loope
and
dec
cmp
stos
inc
add
cmp
decl
xor
or
insl
mov
mov
jae
mov
inc
pushl
pusha
int
jp
pusha
dec
push
lods
jge
mov
sub
and
out
sub
js
mov
popa
cld
incl
cmp
push
xchg
shlb
repz
pushf
cmpsb
mov
jmp
push
add
pop
xchg
es
dec
mov
or
pop
or
call
daa
mov
cmp
decl
ljmp
shlb
add
adc
pop
cli
out
subb
cld
jae
add
push
stos
jbe
cs
stos
add
push
enter
pushl
loope
jg
mov
arpl
mov
add
adc
addr16
pushf
sbb
sbb
jnp
xchg
mov
fcomps
adc
ja
cltd
pop
sahf
nop
aas
push
inc
addb
es
filds
scas
in
lods
outsl
inc
sbb
and
add
ljmp
mov
cli
or
scas
push
fiaddl
pop
icebp
or
pop
mov
mov
mov
mov
lcall
mov
and
push
pop
sub
pop
in
stos
sub
rcl
add
add
push
add
mov
and
in
jno
lahf
sbb
xchg
cmp
decl
xor
mov
jg
loopne
push
pop
lods
xlat
push
sub
inc
nop
clc
add
in
xor
aam
pop
out
cmp
enter
push
and
pop
idivl
cmp
les
cmp
ret
jle
imul
sub
jecxz
xchg
loopne
pop
movsl
fcmovb
dec
mov
xlat
outsb
jmp
daa
call
mov
subl
shll
pop
mov
lret
les
or
pop
xor
test
cli
dec
mov
jbe
lea
ljmp
ja
cld
jg
add
dec
pop
mov
sahf
test
dec
stos
mov
call
test
mov
int3
sub
adc
clc
xlat
cltd
pushf
ljmp
jl
addr16
or
dec
add
sbb
mov
push
rol
decl
inc
std
xchg
xor
dec
push
jns
add
out
add
and
sbb
fimull
mov
inc
lds
sti
pop
int3
adc
xchg
loopne
lods
add
mov
sbb
out
cli
adc
xchg
gs
lret
dec
ljmp
insb
or
aam
and
test
addl
loope
pop
gs
pop
jg
dec
mov
and
sub
push
mov
and
inc
or
and
es
adc
outsb
popa
std
aad
ljmp
pop
cli
in
jg
loopne
outsb
dec
stos
out
fimull
cwtl
inc
fdivl
jno
add
mov
test
pushl
lods
cwtl
or
and
ret
testb
enter
clc
jb
mov
mov
xor
jl
push
and
mov
ret
cmp
or
jmp
and
mov
fwait
push
stos
xchg
cmc
pop
mov
dec
mov
std
iret
dec
js
mov
fcmove
lret
clc
out
cli
lcall
inc
sub
outsl
adc
bound
xor
pop
stc
rclb
int3
push
fcmovbe
out
lcall
mov
jg
pop
inc
mov
fiaddl
push
andb
int3
movsl
cmp
ja
in
stc
pop
pop
out
inc
mov
cli
outsb
dec
stc
fwait
mov
scas
mov
iret
lock
add
cmp
inc
push
sti
ljmp
push
jo
mov
push
dec
mov
es
repnz
jg
fwait
stc
test
push
mov
or
jle
call
loope
adc
les
decl
mov
stos
out
out
repnz
idivl
cmp
ficoms
mov
addb
xchg
push
incl
xor
xchg
jne
lret
xor
decl
lret
xor
cwtl
mov
mov
loop
movsl
add
sub
cwtl
jle
hlt
movsb
pop
xlat
lods
sub
pop
mov
lcall
repnz
xchg
lock
jo
mov
add
jne
jle
push
jp
and
incl
pushl
xor
cld
lods
xlat
out
aam
mov
dec
xor
pop
outsl
sub
sub
mov
pushl
daa
loop
or
lcall
mov
add
sbb
add
popa
test
adc
fst
icebp
or
aam
xchg
outsl
out
jmp
imul
addl
mov
psubw
in
and
mov
pop
mov
dec
mov
xor
rclb
mov
inc
pusha
push
fcmovnu
in
sub
lret
mov
add
sub
ljmp
mov
jecxz
xor
cs
mov
sbb
mov
push
jmp
test
clc
pop
les
movsl
inc
pop
ljmp
cmpsb
popa
decb
xchg
jbe
add
mov
hlt
not
sbb
xor
lcall
jo
test
push
sbb
cmpsl
icebp
fisubs
fnstcw
das
aas
shlb
aam
jg
jg
and
and
cmp
mov
mov
daa
or
cld
decl
inc
mov
sub
shrl
mov
ljmp
repnz
push
push
and
stc
stos
cltd
testl
pop
mov
mov
shll
fcomi
not
dec
roll
std
cli
jmp
imul
adc
mov
and
cmpl
mov
scas
mov
dec
pop
in
out
add
addl
pop
orb
push
push
xchg
cli
pushf
mov
sub
pop
push
adc
out
mov
jnp
xchg
sub
xchg
xchg
das
movsb
adc
pop
adc
jb
pop
cli
and
sub
cwtl
sbb
clc
incl
mov
stos
jmp
and
test
jns
lcall
mov
je
push
or
leave
push
pop
jmp
ljmp
stos
fsubrl
aas
out
in
mov
xchg
mov
in
outsb
pop
dec
pusha
xchg
and
pushl
xor
pop
fcmove
dec
push
je
or
mov
jg
movsb
mov
mov
aaa
lods
mov
mov
fisttpl
jge
push
add
sbb
popa
mov
fnstsw
jne
scas
xchg
cmc
addr16
cmp
xchg
add
and
jg
sub
add
cltd
dec
push
jecxz
or
lock
cmp
add
daa
shlb
mov
js
je
call
call
pop
xchg
clc
lret
mov
mov
loope
pop
inc
add
scas
or
lods
and
pop
fistpl
and
ds
push
scas
pop
aaa
push
cs
pop
leave
jae
sub
add
fiadds
rcll
push
jnp
adc
ret
lock
idivb
mov
mov
cmc
insl
cmp
push
lahf
pop
push
jl
add
xor
jb
lahf
sbb
inc
mov
mov
loop
adc
test
negb
out
push
jl
xor
loopne
jg
and
mov
xor
sub
fmulp
xorl
add
or
adc
mov
inc
push
mov
inc
lret
stos
popa
cmc
ljmp
dec
test
clc
inc
fcomps
fbstp
ss
les
mov
lds
mov
fidivs
or
mov
pushl
adc
hlt
lods
addr16
ficoml
jmp
or
inc
mov
xchg
cmc
cld
into
out
mov
stos
jecxz
fistps
cmpsb
cmp
lods
cld
or
jno
xor
fcoms
in
into
lock
out
sub
push
sbb
mov
jl
jmp
stos
mov
jb
scas
add
out
out
sbb
leave
cmp
xchg
inc
cmpsb
js
sub
pop
loope
arpl
stc
pop
enter
jmp
pop
cmc
jg
fadds
das
and
mov
dec
popa
add
jg
dec
or
repz
mov
mov
sbb
and
bnd
adc
mov
insl
cmp
pop
icebp
fcompl
popa
pop
in
scas
sahf
out
sub
mov
jmp
xor
in
jg
add
outsl
clc
adc
jl
insb
push
mov
and
pop
fmulp
xchg
mov
int
pushf
repz
ljmp
flds
out
xchg
jp
lret
test
pusha
xchg
xchg
pop
lret
pop
in
push
cld
inc
fistl
out
icebp
inc
mov
cmp
inc
dec
xchg
lret
sbb
aam
lock
test
movl
adc
pop
jp
out
or
scas
mov
push
add
jp
add
ljmp
pop
add
imul
dec
sub
mov
jns
aam
fisubrl
jnp
adc
rclb
repnz
jg
pop
and
lock
ret
xchg
add
into
out
repnz
sub
cwtl
xor
clc
xchg
or
icebp
sbb
in
jne
jecxz
and
adc
int3
jl
ret
push
aam
les
fdiv
lcall
pop
lds
pop
sub
xchg
pop
rcl
xlat
lret
pop
cmp
cmc
pop
aam
cld
mov
push
cmpsl
rcl
mov
pop
jmp
or
xchg
mov
scas
sar
out
vpmacssww
jns
mov
sbb
dec
xor
ret
test
das
rdtsc
aaa
pop
imul
movsb
js
xchg
adc
loopne
or
cmp
jne
shll
test
aaa
dec
cli
scas
cmp
mulb
enter
dec
sub
jg
mov
insb
inc
out
xor
mov
jne
jae
add
xchg
popa
and
push
push
sub
sbb
lcall
sub
xlat
sbb
xor
adc
stos
push
loopne
mov
pop
clc
dec
ret
decl
stos
push
movsl
addl
sub
icebp
xor
test
lock
jmp
mov
divb
js
insb
dec
mov
shrb
adc
movsb
lret
sarb
sbb
daa
repnz
mov
mov
jg
imul
or
sbb
leave
jecxz
jg
sbb
and
and
popf
mov
movsb
push
lret
cmc
push
cmp
dec
icebp
int
outsl
ljmp
cmp
sbb
pop
mov
test
jno
adc
sub
jp
jecxz
loopne
push
inc
push
add
push
imul
pop
sahf
mov
fsts
add
clc
out
push
push
push
jecxz
push
sub
cmp
mov
shlb
cld
cs
mov
adc
outsb
inc
je
xor
inc
std
push
lods
jb
ljmp
js
insb
gs
pop
cmc
xchg
lock
hlt
rcll
outsl
adc
push
adc
mov
pop
sbb
into
cmpsl
xchg
xchg
sbb
pop
enter
push
sub
and
jg
or
fists
jl
mov
ljmp
jge
test
stc
fldt
pop
sarl
add
loop
inc
ja
loopne
test
rcl
sub
pop
sub
pop
subb
aam
popf
push
notl
dec
ss
scas
js
xchg
and
cmp
test
push
movsl
xor
push
mov
jge
fbld
repz
jo
lret
pop
pop
mov
adc
aas
mov
rcl
sub
hlt
hlt
pop
std
inc
add
leave
xchg
aaa
or
jmp
dec
inc
popa
cmpsb
cmp
cmc
int
enter
popf
add
mov
pushl
jecxz
xchg
or
sub
lds
cmp
or
scas
and
pop
sahf
cmp
int
lcall
add
dec
dec
hlt
push
ret
stos
mov
inc
inc
pop
sbb
in
pop
cli
ja
call
lret
dec
dec
add
lahf
cmpl
dec
outsb
pop
xor
adc
das
clc
jno
xor
dec
xchg
aam
daa
xchg
lods
fistl
popa
test
mov
sub
test
loope
negl
jg
lret
fsts
push
mov
fdivr
pushl
jo
adc
lea
and
xchg
pop
mov
push
mov
and
lods
fwait
or
mov
sar
outsb
je
vaddpd
push
mov
ljmp
and
or
pop
push
pop
mov
ficoms
xchg
add
cmp
out
gs
sub
jo
push
sub
outsl
and
xchg
xchg
rol
retw
std
decl
dec
dec
xor
fwait
daa
xchg
sbb
mov
out
push
aaa
out
popf
dec
ljmp
jecxz
pop
mov
cmp
bound
dec
movd
das
mov
mov
xchg
jp
push
stos
jno
ficomps
lcall
out
aam
inc
std
dec
sub
in
and
aaa
mov
clc
ljmp
cli
or
inc
adc
xor
es
stos
cmp
mov
pop
cwtl
inc
aaa
ljmp
mov
out
or
and
mov
aam
inc
cld
pushl
mov
inc
jecxz
aad
in
sub
incl
scas
mov
sti
clc
inc
sub
push
lods
jns
push
pusha
push
mov
adc
xor
or
fdivrs
pop
mov
xchg
test
sbb
clc
push
ret
xor
incl
cld
ja
mov
clc
pusha
dec
xor
ret
xor
xor
add
sub
sub
ljmp
repnz
mov
incb
aaa
cmp
inc
cmpsb
mov
stos
lcall
dec
nop
insb
pop
insl
add
bound
jg
mov
ds
mov
cmpl
mov
dec
sar
cld
je
jbe
loop
mov
in
mov
popa
mov
adc
sub
shrl
icebp
outsl
data16
movsl
xor
inc
popa
pushl
jg
and
pop
mov
cmp
lds
jg
pop
xor
ja
mov
mov
or
cmp
sti
aas
std
in
lahf
dec
rcrl
xor
mov
lds
mov
fildl
mov
addb
mov
xor
std
fs
add
xor
add
pop
cmpsl
outsb
inc
pop
sahf
fmull
sbb
fistl
in
xchg
stos
push
or
cltd
mov
into
mov
gs
adc
mov
insl
lods
clc
call
aam
in
sbb
jbe
lret
push
test
adc
pop
cld
inc
dec
mov
jecxz
out
lea
fdivrl
test
pop
xchg
pushl
cli
sbb
shrl
je
inc
mov
jae
out
add
xlat
scas
int
and
lea
xor
cmpsl
add
lea
mov
aam
jg
fmuls
sub
nop
mov
xor
push
adc
hlt
ret
bound
pop
outsb
xchg
mov
call
leave
dec
push
rcl
test
push
stos
loopne
hlt
push
hlt
dec
jmp
jp
inc
ret
add
push
loop
adc
mov
xchg
clc
mov
push
mov
mov
cli
scas
pop
imul
shrl
or
imul
fisubrl
mov
push
pop
push
xchg
push
loope
sub
in
cltd
push
ret
xchg
inc
mov
jno
sti
icebp
xchg
inc
mov
sbb
pushf
loopne
lcall
xchg
push
loop
push
inc
jae
add
sbb
jg
add
out
dec
cmp
shlb
mov
pusha
mov
out
inc
lcall
mov
mov
fistpll
inc
lods
int3
mov
sub
pop
cld
push
test
data16
sahf
jbe
daa
daa
pop
jle
ffreep
fwait
jbe
sbb
pop
decl
incb
lds
lret
mov
and
mov
ss
addb
icebp
xor
mov
mov
push
sub
fsubrs
push
insl
gs
sbb
and
xor
mov
push
jb
pop
jo
jle
mov
or
inc
add
dec
adc
jmp
cmp
ficoms
cld
jg
jl
js
adc
or
jbe
and
stos
push
mov
inc
mov
fisttps
sbb
outsb
xchg
test
add
and
std
ljmp
fcompl
add
std
add
xor
rol
xor
mov
cmp
xchg
cmp
js
sbb
mov
mov
inc
jl
sbb
test
mov
pop
adc
mov
cmc
jmp
gs
push
jo
push
mov
xor
dec
xchg
push
daa
cmp
or
movsb
push
adc
sub
or
mov
pop
fs
scas
or
push
aad
js
cmp
jg
test
cwtl
xor
cmp
mov
aaa
mov
lret
sbb
test
mov
js
out
repz
std
incl
je
mov
cmp
addl
icebp
ret
ljmp
xlat
imul
mov
cmc
sub
adc
sbb
mov
mov
inc
ret
ret
mov
loope
jg
jmp
adc
mov
pop
jae
xor
jmp
add
add
mov
mov
push
adc
mov
out
or
fcoml
inc
aaa
movsl
push
shlb
adc
ljmp
cwtl
cmp
popf
xchg
cmpsl
daa
out
push
popf
in
jl
incl
inc
sbb
fwait
jno
in
inc
loopne
subl
cmp
sbb
inc
mov
mov
adc
mov
mov
mov
add
inc
test
add
mov
ljmp
add
jg
pop
xor
outsb
fsubs
pop
pop
sahf
jno
cmpl
movsl
std
fisttps
jmp
adc
mov
shl
xor
scas
cli
fisttps
addb
cs
sti
lods
and
call
cmc
sbb
lahf
loope
xor
xor
cmp
hlt
mov
leave
mov
jle
fxch
pusha
sbb
ljmp
lds
mov
sbb
sahf
xchg
out
ljmp
jne
lods
mov
pop
inc
scas
pop
into
cmp
aad
cmc
hlt
sbb
aas
mov
loopne
push
ficoms
and
insl
movsb
hlt
add
gs
pop
mov
cmp
push
dec
lret
xorb
aaa
push
pop
pushf
and
ss
in
xchg
roll
dec
stos
ficomps
cld
scas
sub
cli
filds
pop
fdiv
mov
push
out
add
fs
popf
and
lock
push
mov
pop
out
jmp
test
std
pop
lods
xor
movsb
scas
and
mov
jle
pop
outsl
dec
call
jp
mov
xchg
sub
cltd
imul
pop
jecxz
adc
pop
jl
push
in
dec
ljmp
add
insl
incb
sub
fdivp
sbb
inc
mov
and
scas
mov
ja
jnp
pop
pop
lds
addr16
mov
jg
icebp
jbe
or
cmpb
inc
add
mov
mov
mov
xor
ljmp
sub
xchg
aam
call
xchg
push
loopne
ljmp
shl
mov
sbb
dec
lcall
psllq
cmp
lea
push
lds
jecxz
cmp
push
lock
mov
in
mov
sub
adc
lds
bound
mov
adc
stos
imul
lahf
int3
push
shrl
mov
stc
add
jg
in
cltd
jns
mov
mov
subb
decb
in
je
dec
js
fsubrl
call
rclb
mov
add
out
dec
decl
and
testl
pop
push
ret
fnstsw
rcrb
mov
decl
fldl
pop
and
addr16
mov
mov
ljmp
out
fwait
push
mov
jne
jns
jb
adcb
sbb
stc
in
xor
pop
inc
in
jecxz
pop
mov
mov
popa
lret
cmp
sbb
cld
loop
cli
das
inc
fisubs
insl
stos
and
xchg
mov
rolb
adc
xchg
insl
or
adc
jg
xchg
sahf
lea
cli
cmpsb
insl
xor
jbe
dec
pop
xchg
cmp
lar
add
adc
lods
pushl
sbb
adc
call
jmp
clc
and
jp
mov
adc
pop
test
out
cli
incl
lods
adc
xor
js
rolb
xchg
adc
pusha
nop
int
das
push
push
test
ljmp
js
mov
jns
js
cmp
shl
aam
aas
or
sbb
sbb
mov
mov
jg
and
jnp
adc
sbb
rcr
loope
or
sar
mov
inc
scas
addb
loopne
ja
add
in
sti
rol
pop
and
orb
sub
jbe
outsl
xchg
fsub
jnp
pushw
lahf
subl
aam
fimuls
loop
ss
cmpsb
faddl
xor
mov
roll
jmp
inc
loopne
ror
jl
and
dec
dec
sub
mov
mov
aaa
cmpsl
xchg
cmpb
cmp
pop
sar
or
insl
jecxz
or
fs
pop
cmp
movsl
das
mov
pop
rorb
inc
mov
imul
fsubr
pop
cld
mov
pop
hlt
inc
scas
jb
mov
lods
insb
popa
adc
pop
inc
pop
lahf
sbb
test
add
and
dec
add
ret
add
in
scas
xor
jmp
stc
andl
iret
push
add
lods
sti
subb
repnz
mov
gs
popa
and
push
into
ljmp
xor
push
mov
inc
lods
or
mov
cltd
xchg
inc
inc
pushl
cmp
cmp
push
jg
rcl
adcl
ss
mov
jmp
mov
mov
mov
cmpsb
add
mov
adc
pop
movsb
jb
cs
xchg
mov
jg
inc
call
adc
lret
add
inc
adc
or
lock
jb
popa
push
lds
ja
jp
outsb
lret
scas
pop
imul
push
push
pop
pop
repnz
rolb
fwait
and
or
or
xchg
or
cmp
push
xor
push
xor
into
dec
je
add
dec
out
add
icebp
pop
sub
lea
adc
ljmp
jo
push
adc
jge
call
rep
ret
add
decl
inc
and
aad
xor
ljmp
sub
adc
outsl
add
cltd
cmp
imul
add
cli
sbb
fisttpl
push
ret
add
add
mov
insl
lock
push
pusha
mov
cwtl
call
or
fdivl
and
nop
mov
sarb
call
lret
pop
mov
push
mov
icebp
scas
subb
sub
push
pushf
push
mov
push
dec
push
cmpl
push
out
xor
ja
push
fcom
jbe
or
fbld
jmp
pop
and
das
popf
pop
or
pop
sbb
sti
sbb
cli
fists
jbe
lahf
push
sbbl
aaa
xchg
xor
push
iret
clc
xchg
or
clc
in
or
dec
and
mov
hlt
loopne
cmp
shrb
adc
decb
out
sbb
mov
push
inc
sub
xchg
mov
or
in
sub
test
lock
and
ficomps
call
and
jl
inc
dec
cmp
sarl
cmc
incl
mov
fwait
mov
mov
call
or
add
push
jb
jns
inc
js
call
mov
aaa
repnz
or
movsl
xor
dec
das
popa
sbb
pop
adc
ds
push
cwtl
insl
test
cs
or
lahf
adc
dec
xchg
sbb
mov
or
jnp
and
push
sub
enter
mov
push
pop
push
int3
sub
fstpl
xor
jge
sub
fcoms
adc
sbb
ficoms
dec
xor
hlt
ljmp
add
outsl
mov
dec
shl
clc
mov
ds
lcall
popa
icebp
jns
decb
inc
push
and
push
adc
int3
faddp
add
jl
je
shl
pusha
push
mov
push
popa
lock
lcall
push
mov
add
jl
cltd
mov
mov
jns
jnp
call
iret
outsb
cmp
in
cs
dec
lods
inc
add
clc
or
repnz
cs
xchg
out
mov
push
in
inc
push
sahf
movsl
jae
add
sarb
mov
xor
mov
sub
lds
fdivp
enter
call
in
push
jle
mov
stos
pop
mull
bound
jg
mov
xlat
sbb
jge
push
add
push
add
stos
or
clc
xchg
inc
pop
aas
add
popa
adc
or
mov
adc
inc
loopne
pop
out
mov
dec
out
mov
cs
scas
adc
cmc
daa
lahf
addr16
xor
lcall
add
sbb
add
pop
push
xorl
es
je
pushf
inc
or
xchg
popa
sub
push
hlt
inc
inc
into
scas
add
push
mov
enter
adc
inc
std
call
mov
dec
cmpsl
scas
rolb
insb
dec
push
in
mov
lcall
dec
mov
fistl
sbb
mov
sbb
add
pop
sbb
out
leave
fwait
insl
ljmp
push
imul
sub
cmp
ljmp
clc
add
cli
nop
pop
clc
test
mov
pop
inc
outsl
clc
fisttps
pop
pop
mov
mov
mov
lret
adc
mov
pop
dec
jno
div
xor
fisubrs
divb
mov
xor
clc
sbb
xor
xor
cltd
dec
cmp
mov
mov
les
int
aaa
pop
cmp
cli
jle
mov
data16
mov
pop
inc
fcompl
repnz
and
push
cmp
lock
int
call
jmp
mov
cs
andb
fcoms
sub
sbb
fmull
in
pop
xor
mov
pushl
pusha
cmp
pop
imul
cmp
pusha
outsl
cli
lcall
mov
or
cmpl
inc
mov
fwait
cli
push
jo
jb
mov
stc
out
or
add
cltd
ret
jmp
pushf
pop
in
and
pop
out
mov
jo
outsl
or
int
imul
test
decb
jne
stc
push
push
sti
push
pop
out
popa
jge
test
jg
jbe
insb
or
es
sub
jl
push
mov
incl
je
mov
insb
cmc
js
andl
push
stos
push
stos
cmpsl
push
push
xor
insl
shl
lcall
jle
push
xor
iret
jbe
fmull
pop
mov
jg
mov
or
jle
fs
sbb
inc
add
outsl
xchg
jl
fcmovne
pop
or
testb
and
outsl
cs
scas
cld
mov
cmp
stc
lods
pop
or
sbb
out
aas
sub
xor
add
out
out
int
imulb
pop
mov
pop
inc
cmpsb
xchg
jae
pop
mov
ljmp
mov
int
int3
daa
outsl
push
pop
int3
movsl
push
scas
inc
jg
sbb
pop
lea
dec
dec
inc
mov
mov
inc
cmp
fcompl
inc
mov
negb
adc
imul
pop
out
nop
into
stc
dec
mov
dec
jge
rorb
inc
sub
mov
cld
ljmp
dec
xchg
mov
and
pop
xchg
fisubl
enter
aaa
sub
movsl
insl
push
cmp
in
fadds
inc
incl
cli
jmp
mov
frstor
divl
leave
mov
mov
in
test
fisubs
test
or
cld
or
cmc
lcall
pop
dec
sub
mov
and
mov
ret
pop
cwtl
cmp
or
out
dec
fsubrl
lock
cld
inc
pop
sub
lret
pushl
mov
insl
adc
pusha
std
add
ljmp
or
fisubrs
and
sbb
push
mov
mov
sbb
jne
sub
aas
stos
call
or
xchg
push
jg
xor
adc
bound
iret
push
mov
or
imul
push
mov
pop
xchg
mov
icebp
fmull
lods
dec
sbb
cmpsl
xchg
pop
lock
in
add
clc
cmp
pushf
clc
mov
pop
pop
or
cmp
div
mov
lahf
ljmp
incb
jle
jns
in
test
add
clc
int
inc
adc
sub
call
adc
icebp
and
push
cmp
mov
fildll
mov
mov
rcll
push
int
jge
jl
icebp
scas
add
sar
stos
cmpsl
push
rcrb
loop
sbb
jl
adc
push
daa
cmp
or
leave
mov
mov
sbbl
ljmp
out
mov
stos
lods
in
mov
hlt
pop
mov
and
mov
xchg
and
cmp
pop
pop
dec
xchg
mov
imulb
cld
pop
push
jp
shrl
pop
pop
xor
out
pop
dec
adc
out
call
dec
push
pop
daa
cmpsl
mov
cld
int
jmp
fcompl
cmp
dec
ss
adc
scas
ljmp
mov
and
lock
call
xchg
jg
out
ljmp
inc
cmc
add
xchg
pop
out
aad
dec
cld
xchg
insl
push
inc
jmp
scas
cmp
divl
in
fmull
pop
aaa
outsl
in
xchg
dec
dec
sbb
mov
push
into
jae
push
std
cmpsb
dec
ss
xchg
sarb
mov
mov
pop
cmc
mov
mov
xchg
sub
pop
out
fdivl
aas
lods
cwtl
pop
dec
ljmp
imul
cwtl
pop
loopne
mov
jp
sarb
push
and
adc
adc
jg
addb
call
into
mov
push
xor
and
mov
mov
into
sub
cmp
mov
push
cmc
incl
movsl
jl
mov
push
dec
shlb
outsb
and
mov
sbb
decl
dec
ss
clc
dec
popa
lret
sbb
pop
pop
mov
sbb
cli
dec
insb
arpl
xchg
mov
jnp
testl
mov
enter
mov
cmp
sbb
push
bound
ljmp
adc
push
or
testl
mov
mov
das
ljmp
in
mov
mov
sti
jmp
mov
dec
arpl
lahf
mov
mov
out
out
call
mov
mov
leave
cltd
icebp
inc
mov
sub
popf
popf
xchg
sub
test
mov
lds
mov
std
lcall
je
jl
ljmp
loopne
push
inc
iret
and
cmp
xor
or
sub
data16
out
pop
pushf
loope
push
push
aaa
inc
sarb
andl
ret
in
mov
js
mov
divl
test
mov
xchg
and
repnz
add
mov
and
jmp
loop
imul
add
push
cmp
mov
xchg
mov
mov
cmpsl
popa
or
jmp
jb
loop
cli
imul
negb
push
add
aas
popl
or
les
fwait
push
lcall
or
xor
gs
stc
sub
or
insl
outsl
xchg
outsl
xchg
outsl
insb
iret
or
popa
ljmp
sbb
fsubrs
jne
adc
pusha
loope
cmpsb
ret
pushf
stos
call
jno
sub
sbb
pop
xor
xor
stos
cmp
outsb
mov
into
decl
dec
icebp
pusha
mov
das
pop
mov
bound
int
incl
mov
jle
stc
fisubl
add
xchg
call
or
xlat
pop
lods
sbb
lret
fistpl
or
ret
mov
sbb
mov
int3
movsb
arpl
mov
add
stos
cltd
push
and
adc
shr
inc
les
stc
cmp
imul
lcall
inc
or
push
ljmp
xor
push
mov
mov
dec
fdivs
ljmp
xchg
fs
flds
test
mov
decl
sbb
add
ds
call
inc
lret
inc
sub
mov
clc
imulb
mov
rorb
push
sub
ljmp
outsb
mov
outsb
xchg
jmp
add
cli
sbb
in
lret
cmpsb
shlb
ret
mov
testb
add
dec
outsl
pop
cmp
mov
jno
cmp
stos
xchg
std
sub
js
push
hlt
out
push
add
fdivs
pop
out
sahf
lret
add
mov
sub
and
xchg
lcall
loop
outsb
xchg
out
dec
add
xchg
data16
sbb
lahf
xchg
ja
lods
pop
or
adc
inc
clc
dec
or
mov
cld
loope
outsl
inc
mov
mov
inc
lcall
sbb
and
outsl
and
push
jp
jg
mov
dec
pop
sbb
enter
pop
jge
scas
xor
cwtl
stos
and
call
pop
add
test
adc
pop
data16
aaa
dec
shrb
fisttps
xor
push
mov
add
ljmp
pusha
ret
jmp
lods
scas
rcl
xchg
int
sbb
ljmp
cld
test
clc
decl
outsl
fadds
mov
mov
pop
sbb
lcall
push
adc
push
test
adc
test
pop
movsl
decl
dec
mov
sbb
test
insb
fwait
sbb
and
xchg
pusha
mov
pop
adc
cmp
add
jns
out
popa
ficoms
xchg
cmp
mov
insb
aam
mov
in
pop
negb
inc
std
enter
imul
outsl
adc
pop
fbld
mov
es
das
and
sub
mov
rolb
mov
jmp
push
scas
jo
cmc
sbb
pop
sbb
mov
shrl
sub
aad
rolb
lock
pop
out
sub
jnp
movsb
sahf
cmp
cmp
or
shlb
loopne
stos
inc
mov
shr
sbb
unpcklps
aaa
nop
push
or
fsubs
jbe
inc
push
lock
xor
push
or
jbe
aaa
mov
cmp
inc
or
imulb
das
inc
divb
scas
leave
stos
add
add
mov
xchg
jnp
mov
ret
pop
mov
pop
cli
cmp
incl
adc
popa
and
test
pusha
rcr
btc
sar
lahf
pop
lcall
pop
push
inc
cmpsl
imul
pop
inc
cmp
mov
aam
pop
lock
mov
push
add
add
inc
sub
or
xchg
test
sub
push
je
mull
cmp
out
xchg
jbe
pusha
inc
jno
pop
mov
negb
cwtl
sti
loop
fimuls
mov
lahf
push
hlt
lcall
mov
cmp
outsl
mov
test
push
xchg
ds
fs
cmp
fnsave
xchg
es
add
mov
mov
push
ja
jecxz
ja
fisubl
jecxz
dec
lcall
inc
jmp
xchg
or
imul
lcall
jno
jmp
mov
cmp
adc
icebp
fimuls
aaa
mov
lret
inc
aas
xchg
xor
call
decl
push
popf
jmp
inc
push
jo
or
gs
add
es
dec
es
lds
pusha
hlt
mov
cld
cmp
cld
mov
push
sbb
pop
add
cld
cmc
lcall
mov
enter
shl
cltd
stos
xchg
or
sub
or
jmp
in
je
call
pop
pop
scas
mov
mov
mov
hlt
jecxz
sti
mov
stos
mov
ss
push
mov
jnp
lret
cli
mov
cmp
data16
dec
push
clc
fidivrs
push
dec
sub
stos
mov
jmp
mov
imul
insb
pusha
arpl
jecxz
lock
out
mov
pop
out
xchg
ja
movsl
rorb
gs
jae
mov
mov
fwait
incl
jmp
and
sbb
addb
popa
jl
test
mov
xchg
adc
lcall
and
aas
xlat
subb
lcall
pushl
sbb
mov
mov
stos
and
push
mov
repz
and
add
in
push
adc
incl
pop
mov
jb
ja
popa
xor
sub
insl
xor
je
inc
cmp
jns
filds
pop
in
data16
cli
push
xor
lcall
or
rcr
push
jb
imul
sbb
xchg
hlt
lods
orl
icebp
xor
pop
cmpsl
add
std
subb
dec
pop
ret
test
fidivs
filds
lret
je
xor
scas
clc
adc
test
sbb
aas
movsb
je
dec
jae
and
mov
dec
mov
cmp
pop
mov
mov
mov
push
pop
mov
das
loopne
xchg
hlt
jmp
mov
cld
jmp
push
mov
testl
das
clc
mov
pop
in
sbb
pop
into
sub
aaa
pop
loope
xchg
inc
xor
in
std
sub
js
stos
mov
fistps
xor
ljmp
call
push
sub
test
mov
mov
pop
jg
adc
mov
test
jp
repnz
cltd
add
push
mov
push
xor
cltd
nop
pop
xor
arpl
outsb
jb
dec
sbb
mov
cmpsb
mov
add
clc
imulb
ljmp
data16
jg
push
mov
mov
add
push
pop
pop
add
popf
cmp
cmp
mul
das
sub
pop
into
lods
int
pop
stos
push
mov
outsl
pop
pop
mov
rolb
lcall
mov
int
dec
pop
push
callw
cltd
jl
cmp
loopne
push
pusha
test
daa
pop
jne
push
vmaxsd
cmp
faddl
mov
and
cmpsl
and
mov
call
cmc
mov
add
cld
ficomps
test
int
or
push
push
dec
js
push
push
dec
test
lds
inc
int
cmp
call
stos
fdivrp
fwait
mov
xchg
mov
xlat
out
jp
pop
inc
leave
add
sub
push
stc
ss
xchg
test
gs
mov
xchg
std
jg
xlat
sbb
cmp
stos
lock
add
push
or
stc
imul
jmp
fsub
sub
lock
js
mov
test
aaa
adc
pop
outsb
inc
cmc
xchg
fdivl
add
fs
cmp
neg
ljmp
loope
lock
out
inc
pop
dec
dec
sub
ja
aam
pop
xchg
mov
aaa
adc
and
jl
push
scas
add
pop
nop
cmpsb
gs
mov
push
aas
sbb
xchg
mov
insl
push
sahf
mov
inc
dec
mulb
decl
inc
push
sub
xchg
xchg
sub
je
std
mov
lcall
cmc
pop
test
scas
cs
push
scas
dec
mov
pop
fdiv
paddq
xor
pop
push
in
fcmovu
dec
adc
mov
cmpsb
ret
popf
fsts
imulb
imul
mov
loop
test
push
fistl
lcall
nop
add
add
test
mov
xchg
adc
jmp
sbb
fnstsw
dec
mov
rcll
pushl
pop
iret
std
pop
cmp
jle
es
inc
cli
sub
mov
outsl
pusha
push
gs
dec
inc
addr16
sbb
test
pop
xchg
test
es
loopne
loopne
das
call
clc
and
cli
std
mov
stc
aas
repnz
nop
daa
dec
out
ljmp
pop
jmp
cmp
mov
jge
adc
inc
jb
mov
sbb
mov
pushl
daa
xor
rorb
enter
dec
adc
mov
sarl
jl
stos
dec
fdivr
push
inc
jp
bound
xchg
lcall
mov
dec
jae
jb
xchg
idivb
jmp
add
mov
stc
push
cli
jmp
mov
jge
mov
hlt
shl
jo
fcomps
cmp
jb
jle
addr16
xchg
addl
fisttpl
pushf
icebp
shlb
cli
jg
sbb
mov
sub
pushl
hlt
shrl
pop
push
add
push
xchg
cwtl
repz
out
les
scas
push
sub
out
clc
or
xor
and
cmp
cli
lods
adc
ljmp
stos
xchg
bound
or
mov
lea
in
push
das
stos
jle
ljmp
or
jl
je
xchg
les
stos
mov
inc
push
cmp
jmp
sbb
test
lea
mov
pop
sub
dec
add
xchg
jo
push
sbb
bound
xchg
mov
mov
push
pop
mov
jns
and
dec
pop
jge
pop
lahf
in
jg
or
lea
repnz
insl
inc
hlt
mov
ljmp
fcoml
mov
frstor
es
lcall
or
pop
cmp
push
inc
lock
incl
jmp
jns
jae
adc
push
or
out
mov
loope
fcmovne
inc
sbb
jl
adc
mov
push
mov
inc
inc
xlat
out
ret
mov
dec
cld
ja
cs
sub
pmaxub
and
std
aaa
adc
push
or
les
jb
scas
mov
cmp
adc
or
mov
cmp
cmc
shrl
cmp
addb
xor
pop
rcrb
and
and
data16
aam
test
sbb
mov
add
clc
fbstp
ret
adc
dec
repnz
call
xor
cmpsb
lods
lcall
push
inc
or
scas
adc
add
pop
or
lds
lock
mov
adc
adc
xchg
incb
loope
adc
inc
sub
add
enter
fadd
test
cs
mov
jb
lea
add
jne
insl
mov
mov
notb
fcomps
adc
mov
xor
jp
mov
pop
fiaddl
mov
push
mov
out
aas
dec
add
xchg
pop
ret
pop
add
mov
clc
fmul
hlt
dec
push
call
enter
pop
jbe
in
pop
lcall
mov
sbb
icebp
add
adc
jl
je
mov
rcrb
jge
ret
jb
shl
lea
inc
addr16
xchg
push
or
jg
ret
imul
adc
enter
test
push
aaa
into
jmp
push
xchg
dec
decl
mov
hlt
push
lret
decl
jo
pop
mov
lcall
mov
adc
xchg
fstpl
jg
bound
ret
popf
data16
mov
lods
popl
jg
sub
fsqrt
sub
mov
call
dec
jmp
and
pop
scas
or
inc
jne
mov
jg
inc
sbb
jg
outsb
pop
push
pop
hlt
data16
or
cmpsb
aam
xchg
and
sub
ljmp
or
daa
dec
les
jg
cmc
mov
test
insl
ret
cmp
jnp
mov
hlt
pushl
lahf
test
jno
stos
sbb
scas
sbb
insl
insb
decl
jl
jl
jae
push
add
sarl
xchg
lods
call
sbb
cmp
cmp
cmp
ja
stos
jnp
inc
scas
adc
pop
or
addr16
cmpsb
or
sbb
out
in
jno
hlt
into
jo
insl
addb
in
lcall
xor
inc
enter
ret
adc
pushw
mov
xor
or
lret
clc
jg
ret
cs
jle
popf
push
sbb
lods
inc
lahf
xchg
cli
fimull
pop
mov
sahf
adc
stos
and
ret
cld
clc
iret
and
push
mov
inc
push
sub
popf
push
movsl
fwait
pop
sub
rorb
popf
test
cmp
in
mov
filds
mov
divb
pusha
int
ljmp
icebp
out
nop
dec
lds
insb
loope
out
repz
sbb
add
clc
push
out
out
cmp
call
mov
mov
xor
xor
lret
mov
sub
push
insb
cmpsl
in
inc
stos
push
test
pop
mov
pop
enter
mov
cmp
mov
sbb
hlt
pop
adc
jns
loop
inc
inc
leave
lahf
mov
pop
scas
aaa
dec
push
flds
iret
jno
inc
cs
push
and
ss
aaa
repnz
orb
iret
xchg
lahf
les
or
inc
mov
xor
and
fdivrs
pop
push
sbb
cmp
sbb
mov
scas
in
pop
dec
xchg
cli
pushl
or
mov
mov
idivb
xlat
xlat
fs
xchg
adc
call
xor
fs
in
mov
imul
add
jns
incl
pop
pusha
aas
sbb
int3
jbe
in
mov
push
andl
pop
je
fisubl
dec
xor
xchg
jle
mov
cli
sub
mov
push
or
pushl
test
xchg
jp
sbb
mulb
xorl
loope
rcll
pop
dec
rcr
push
push
jo
sbb
pop
data16
adc
jnp
cmc
fsubrl
movsl
sbb
push
fst
pop
ljmp
xchg
ds
xchg
push
out
cmpsl
push
jl
jne
in
sbb
sub
cmp
mov
stos
out
mov
decl
outsb
out
idivl
xor
push
cmp
inc
push
ret
sub
mov
subl
dec
sub
push
dec
cmp
xor
adcl
xor
xchg
sub
xor
add
sbb
ja
jl
repnz
bound
cmp
das
loop
mov
les
xchg
or
imul
test
inc
and
fldt
clc
leave
int3
pop
hlt
xor
imul
jg
push
ret
jmp
lcall
outsb
data16
std
rolb
inc
xchg
sub
mov
scas
aaa
repz
xchg
lea
mov
push
ret
pop
aad
fnstsw
dec
cld
stos
mov
loopne
xor
les
mov
push
mov
adc
movb
outsl
jne
pop
stos
loopne
popf
pop
mov
cmp
rcll
int
vpsubsw
dec
std
pushl
add
incl
adc
scas
mov
daa
cli
mov
add
pop
add
lret
test
mov
std
lock
arpl
dec
stos
sub
les
inc
aad
call
jg
aad
sti
xor
cld
mov
sbbl
and
dec
jecxz
and
std
fnstsw
call
xor
cwtl
xchg
or
movsb
fdivrs
push
clc
pop
mov
sbb
stos
insl
add
jl
push
and
sub
xor
jle
mov
push
movsb
or
push
jmp
inc
sahf
sbb
in
sti
pop
sub
jno
popf
add
out
call
and
fcompl
ja
push
lds
push
lock
xorl
jbe
push
sar
jmp
xor
stc
daa
lahf
xlat
jl
loopne
into
lret
mov
fimuls
jecxz
outsb
cmpb
jmp
push
adc
out
pushf
sbb
je
shl
sarl
adcb
insb
sarb
adc
pop
cli
lea
lcall
inc
mov
ficompl
and
decl
cltd
sbb
pop
mov
aam
test
jg
insb
lcall
jbe
imul
adc
cmpsl
add
nop
sbb
lahf
sbb
adc
xorl
adc
into
jo
mov
cmpsl
xchg
movsb
pop
push
xor
sbb
cmc
mov
jne
mov
mov
mov
lds
addr16
rorb
add
decl
cltd
in
push
adc
add
test
aas
sahf
and
lods
pop
jo
mov
sarb
push
push
jg
call
test
mov
lahf
xor
repnz
out
test
dec
and
daa
rcrb
inc
push
dec
lcall
sub
pop
xchg
mov
aas
inc
ljmp
mov
push
movsb
cmp
mov
mov
jg
or
outsb
pop
xchg
insl
jns
out
decb
sbb
mov
mov
and
adc
decl
enter
int3
pushf
inc
cmp
loope
aam
fildll
push
sub
mov
cld
lcall
or
clc
and
push
popf
add
jp
mov
movsb
mov
lcall
and
call
mov
inc
dec
dec
mov
aaa
push
mov
stos
test
add
push
or
jmp
test
and
out
lahf
cld
mov
scas
push
mov
add
aam
sub
pop
cmp
stos
dec
ds
enter
push
sub
xor
pop
xlat
fisubs
loopne
mov
clc
outsl
cmp
in
jae
jp
orb
mov
and
stc
push
adc
xor
push
std
jg
sub
mov
movsb
xchg
mov
lock
adc
pop
sub
push
popa
dec
insl
jnp
xchg
xchg
inc
ret
outsl
ljmp
popa
pop
fmuls
mov
xor
add
mov
mov
or
push
xchg
adc
pop
jg
rorb
xchg
push
sub
fs
into
out
jmp
hlt
out
cli
mov
imul
xor
cld
mov
fbld
rcrb
jo
incb
pop
outsl
js
fcmovnbe
aas
lock
jmp
add
pop
push
xor
mov
mov
pop
movsl
jp
mov
pop
mov
add
xchg
int3
cmpb
fisttpl
jle
adc
sar
imul
jle
xchg
pop
repz
jg
test
mov
adc
fcmovnbe
dec
negb
lahf
xchg
lock
push
or
xchg
jecxz
add
mov
les
xchg
cltd
xor
add
sti
cltd
mov
xchg
inc
sbb
adc
dec
bound
sub
add
cs
lcall
pop
in
test
cmp
inc
cld
stos
inc
call
push
int
pop
imul
bound
pop
mov
aad
loopne
add
decl
pop
cmp
pop
dec
xchg
leave
imul
decb
pop
mov
adc
out
jo
stos
sub
cmp
pop
fnsetpm(287
in
cwtl
lds
fisubs
fimuls
aam
lcall
dec
mov
xchg
sbb
sbb
jne
mov
add
xor
xor
push
pop
mov
xor
mov
aad
jno
and
mov
jg
add
ss
loopne
or
fidivrs
or
mov
repnz
incb
or
pop
lock
pusha
test
jne
out
xchg
push
sub
add
xchg
mov
mov
fstpt
mov
pop
sub
pop
jae
iret
jno
add
roll
or
mov
and
out
nop
mov
scas
imul
pop
ljmp
call
fistps
jo
mov
aas
js
es
mov
lcall
ljmp
sbb
dec
jo
pop
gs
ficomps
add
sti
push
jmp
pop
sbb
mov
xor
adc
add
sub
fbld
jl
into
cmp
xor
daa
push
push
test
mov
sbb
push
aad
pop
aam
rcl
add
mov
add
mov
jno
mov
xlat
cmp
jmp
test
mov
jge
fcomip
decl
lret
sbb
pop
fld
lcall
pop
cs
pop
adc
cs
cmp
add
call
xor
movsl
push
mov
popw
inc
repnz
lock
ret
and
xor
out
dec
ljmp
push
sub
cmp
fbld
rep
push
aaa
jbe
loop
aas
imul
or
repz
dec
jbe
xlat
xor
mov
out
stc
dec
mov
cwtl
xchg
cmpsl
je
sbb
inc
ret
and
jg
inc
cli
mov
xchg
lret
mov
push
add
cmpsb
inc
mov
popl
fisubrl
and
scas
xor
xchg
mov
pop
cltd
mov
aam
mov
pop
rcrb
adc
push
cld
lcall
loopne
hlt
pop
scas
repnz
shlb
in
ds
mov
stos
push
mov
icebp
ja
les
and
or
sub
fcomip
mov
jnp
pop
mov
les
sub
fwait
push
lods
call
in
sarb
mov
fimull
out
outsl
test
jg
xor
pop
iret
lahf
push
pop
mov
loopne
enter
call
dec
stc
in
in
mov
ja
into
loope
adc
stos
js
cmp
add
xor
inc
dec
pop
pop
bound
aam
inc
cwtl
mov
gs
add
call
leave
fistps
add
push
nop
cmc
sbb
jg
xchg
fdivr
jg
lock
inc
call
addl
mov
dec
adc
jae
std
mov
pop
mov
rep
xchg
fstps
and
fldt
test
testb
divb
pop
decl
inc
sub
jp
pop
mov
shll
nop
fisttpl
push
in
clc
incl
push
fildl
sub
repnz
and
inc
cmpsb
hlt
addr16
mov
lahf
mov
or
xchg
out
mov
mov
jns
pop
imul
pushl
andb
icebp
imul
or
push
jge
insb
push
addr16
sub
js
add
stos
pop
sub
in
lods
xchg
stos
jle
push
sbb
mov
dec
cwtl
inc
jp
cmpsb
push
lcall
imul
rcll
insl
adc
add
adc
call
ret
jl
and
fadds
fildl
pop
mov
and
leave
roll
mov
cld
ljmp
push
shll
mov
ds
mov
icebp
cmp
mov
jl
sbb
jg
psrld
xor
inc
xchg
arpl
inc
in
xchg
sbb
mov
fstps
pop
cwtl
je
push
imul
shlb
out
aad
mov
jge
hlt
jmp
mov
add
push
jle
sub
loopne
dec
outsb
jno
mov
clc
movsb
fs
clc
int3
and
jnp
jns
in
ss
test
test
sbb
or
ja
pop
lods
js
addb
imul
movsb
mov
loop
lret
incl
fiadds
aad
jg
and
lds
aas
jle
mov
mov
jno
and
sbb
ljmp
fadds
scas
xchg
lret
test
add
ja
leave
sbb
add
fidivs
ja
mov
fsubs
aaa
sarb
mov
or
and
sti
xor
cmp
xchg
sub
xor
in
movsb
add
shlb
inc
xchg
lods
and
sahf
jecxz
sbb
mov
sbb
scas
subb
mov
add
mov
mov
bnd
mov
mov
test
f2xm1
pop
push
jmp
jge
addr16
lods
jmp
idiv
ljmp
stos
pop
cmc
xchg
inc
push
lods
add
inc
enter
fs
mov
push
pop
repnz
jmp
dec
popf
fwait
xchg
mov
aas
cmpsl
cmp
cmp
inc
push
shl
xchg
mov
movsl
bnd
jcxz
scas
iret
and
lcall
scas
mov
push
dec
sub
decb
test
cmp
test
ret
movsb
fimuls
std
stos
call
cmp
sub
xor
adc
scas
xchg
mov
scas
mov
adc
pop
lcall
mov
push
in
loop
cmp
push
sub
mov
jmp
test
lods
pop
das
std
dec
fcomi
pop
imul
sbb
jb
aaa
ret
add
cmp
sbb
andb
jg
xor
divl
cmp
je
incl
inc
mov
pop
jmp
add
pop
adc
ja
push
imul
out
fiadds
sbb
outsb
fisttpl
cmpsb
scas
push
push
mov
or
xchg
mov
add
incl
jno
and
enter
adc
cmp
call
dec
jl
push
cmp
cmc
clc
lahf
adc
xor
popf
sar
test
mov
or
cmc
jmp
sbb
mov
cmp
int
fsubs
mov
mov
das
cmp
mov
loope
mov
popa
fimull
ret
fwait
out
push
sub
push
pop
xchg
mov
add
pop
sbb
xchg
cmpsl
int3
outsb
push
jecxz
mov
test
movsl
adc
mov
pushf
push
sbb
insw
test
sub
clc
push
pop
pusha
in
mov
aas
jg
dec
mov
out
add
mov
mov
jg
fadds
cmp
mov
in
orb
mov
mov
sub
xchg
mov
cmp
iret
adc
icebp
incl
pop
aam
mov
fidivrs
iret
pop
jnp
sub
xor
add
aam
adc
hlt
stos
add
ja
xchg
jnp
icebp
rclb
inc
mov
aas
xchg
hlt
pop
daa
out
inc
ss
addl
xchg
addr16
movsl
jmp
jbe
js
push
out
pusha
pushf
psubb
ret
js
cli
leave
xchg
cmpsb
sub
inc
dec
dec
decl
shr
iret
scas
pop
mov
mov
push
add
add
fldcw
fucomp
pop
pop
ljmp
pop
sbb
and
cld
jecxz
push
inc
sbb
xchg
cli
in
decl
or
pop
pop
push
push
aad
add
negb
cmp
decl
movb
add
mov
sarb
push
aad
aad
pushf
mov
imul
sbb
rcll
shll
sahf
add
mov
mov
mov
xor
or
decl
cmp
test
xor
movsb
inc
imul
mov
call
mov
jb
popa
in
pop
pusha
enter
popf
pop
test
ret
int3
pop
dec
fs
jg
pop
and
sub
mov
mov
mov
jmp
inc
push
sbb
push
xor
push
aam
or
es
jp
cltd
push
and
pop
test
out
cli
push
jle
lods
movsb
pushf
adc
mov
clc
inc
in
xor
or
out
xor
cltd
test
cmc
nop
inc
mov
xchg
lahf
test
push
sub
xorl
and
sbb
cmp
cwtl
cli
jg
shrb
and
lods
push
out
sub
mov
loope
pop
mov
sub
add
mov
xor
pusha
ret
ficomps
fldenv
std
into
call
hlt
push
outsl
icebp
icebp
es
nop
hlt
xchg
jbe
jns
ja
shrb
in
add
mov
add
fiadds
loop
mov
push
push
scas
mov
mov
cltd
test
push
cmp
pop
nop
insb
fmull
push
arpl
inc
fildll
xchg
cmp
cld
pop
test
hlt
jmp
out
and
mov
mov
ljmp
out
and
out
sbb
mov
addr16
mov
incl
mov
pushf
sbb
call
xor
call
dec
sub
mov
jno
pminsw
inc
mov
xchg
dec
movsl
call
call
cmpb
mov
xor
push
ss
outsl
sub
lahf
jge
movsl
jmp
and
aas
xor
cmp
imul
gs
dec
mov
arpl
lods
jo
call
or
insb
jecxz
gs
sub
test
mov
xor
lcall
mov
mov
addr16
jp
lcall
fisubl
in
xor
popf
push
ljmp
jne
push
and
push
dec
cmp
dec
loop
std
jmp
sbb
popf
bound
pop
jne
mov
scas
cmc
lcall
push
mov
bound
pop
lret
nop
sbbb
fs
mov
incl
sbb
xor
fidivl
mov
cld
xchg
inc
out
clc
push
adc
lods
imul
repz
bound
xchg
and
pop
and
int
fildll
cmpsl
xchg
mov
jp
fisubrs
test
ljmp
adc
mov
out
lret
es
cld
cwtl
cmc
cltd
sub
mov
jb
and
cmp
fwait
xor
inc
clc
in
add
fdiv
push
lods
cmp
lock
mov
sbb
jg
push
xor
jp
ljmp
pop
rcrl
call
sbb
mov
adc
insl
inc
outsl
mov
push
jge
icebp
pop
xor
xchg
adc
orb
add
stos
sub
fisttpl
aam
push
jno
mov
sti
mov
je
push
push
and
roll
sbb
cs
in
lret
clc
or
push
dec
call
and
pop
or
test
lret
xchg
pop
mov
clc
imul
xor
mov
inc
jge
dec
mov
mov
scas
imul
aaa
js
sub
test
cmc
cmp
lds
dec
test
lret
and
cmp
popf
ret
popa
test
out
clc
xlat
into
push
out
into
adcb
jp
sarl
repz
aas
insb
adc
pop
xor
mov
push
mov
sbb
inc
inc
testb
push
dec
clc
mov
inc
stos
or
rorl
enter
call
inc
push
cmp
or
sbb
jge
lcall
ret
pop
xchg
inc
add
mov
inc
adc
cmp
or
add
and
mov
mov
sarl
in
xlat
test
pushw
mov
fnsave
cltd
aam
lods
push
stos
sub
cltd
cmp
jbe
in
bound
pop
hlt
sbb
ret
iret
mov
mov
andl
fs
sub
ljmp
pop
ds
inc
clc
ljmp
xor
stos
or
pop
mov
sbb
push
xchg
cmp
adc
push
and
or
pop
scas
mov
out
push
xchg
mov
jle
rcl
mov
daa
pop
jne
cld
lcall
ret
xor
dec
mov
mov
ss
fbstp
sarl
je
or
lods
jno
insb
imul
incl
sbb
inc
int3
rcrb
int3
imul
rolb
shrb
push
es
mov
clc
daa
and
mov
or
pop
cmp
nop
inc
mov
mov
jnp
in
xor
adc
faddl
mov
int3
ja
or
cs
sbbb
pop
adc
mov
hlt
add
jb
sbb
pop
int3
jg
cs
mov
add
sbb
je
out
ljmp
pusha
frstor
jbe
gs
dec
das
jg
jmp
pop
ds
insb
push
dec
inc
movsl
xchg
jmp
and
push
dec
sbb
fisttpl
iret
cmp
inc
mov
sbb
inc
repnz
testb
add
mov
and
outsb
lods
mov
cltd
clc
pop
dec
lock
cwtl
push
fsubs
clc
mov
stos
mov
cli
ret
cmpsl
cmc
add
mov
movsl
jmp
movsl
lods
pop
cs
xchg
enter
filds
adc
roll
std
push
cwtl
pop
jg
pop
es
pop
xchg
call
push
fstpl
std
mov
fcmovnbe
sarb
adc
xor
xchg
movsb
adc
or
mov
sub
addr16
inc
ljmp
mov
inc
add
loopne
or
filds
stos
jno
cld
rorb
inc
push
je
inc
testb
xor
adc
pop
fcomip
pushl
sub
adc
pop
movsl
lahf
cmpsb
test
lcall
cs
fldenv
mov
stos
xor
xor
cmc
and
jecxz
xchg
add
jo
fnsave
xchg
rorl
sar
or
out
popa
icebp
daa
stc
lods
fs
fnsave
mov
cmp
jg
out
jmp
int
adc
inc
xchg
bound
sub
imul
xchg
es
decl
adc
sbb
cld
aam
cmp
decl
and
adc
shrb
pop
pop
or
add
fstl
xchg
std
xor
ret
mov
inc
dec
movsb
jg
mov
or
mov
jae
xchg
adc
mov
and
pop
inc
mov
incl
test
sub
mov
cld
pushl
xor
cmp
cmp
and
pusha
nop
jbe
lret
mov
cmp
jg
inc
out
or
xlat
das
adc
out
pop
jge
pusha
pushl
adc
les
push
mov
pop
sar
ljmp
inc
sbb
xchg
jne
sub
std
dec
clc
push
cwtl
shlb
orb
mov
ret
enter
adc
sub
fwait
test
mov
jmp
les
out
ret
outsl
sbb
jp
push
ljmp
jecxz
ja
rcr
jae
lds
fisttps
aaa
std
outsl
or
jne
pop
lds
push
adc
xchg
fcoml
jle
loop
rcrb
mov
decl
sar
subb
clc
cmp
push
jmp
sarl
pop
xor
mov
test
shlb
push
mov
decl
push
icebp
adc
jb
in
repnz
jl
cmp
mov
lea
ret
xchg
pop
cmp
insb
or
mov
movsb
push
sbb
pop
push
jo
mov
mov
mov
aaa
or
fimuls
xor
aaa
loopne
jo
pop
pop
jl
sbb
push
or
arpl
lcall
call
xorb
or
sub
jge
add
inc
out
mov
mov
sbb
pop
inc
or
icebp
or
scas
inc
ffreep
mov
push
inc
cmp
js
cmpsb
out
shll
js
xchg
in
sub
lods
jg
cmpsb
lea
hlt
add
std
std
mov
mov
scas
and
loop
je
pop
call
inc
xchg
mov
jbe
xor
mov
mov
mov
xor
inc
pop
ss
jg
and
push
stos
imul
orb
adc
loop
push
xor
dec
jecxz
pop
and
inc
inc
mov
outsb
sbb
movsl
call
add
outsl
adc
mov
mov
mov
jg
xchg
ret
out
call
and
pop
scas
jno,pt
arpl
int
mov
idivb
jecxz
add
in
push
mov
xchg
outsb
mov
add
lcall
xchg
pop
lret
outsb
outsb
jg
sub
and
sbb
in
clc
pop
add
push
jecxz
jle
ss
and
fisubl
or
cvtdq2ps
in
mov
and
mov
inc
mov
jp
js
cmp
inc
aam
loope
cmp
jae
jnp
insl
inc
pop
mov
lcall
or
jae
syscall
data16
mov
inc
leave
dec
ret
adc
xor
push
call
mov
out
enter
and
add
ss
data16
movsl
cmp
iret
xchg
sbb
add
jg
shlb
add
movsl
mov
add
cmp
cmp
jno
or
add
dec
imul
xchg
xchg
data16
xchg
add
jle
psubq
jbe
mov
mov
dec
les
xor
cli
pushl
clc
adcl
call
mov
fcmovbe
cmp
mov
lods
adc
jg
or
xor
outsl
mov
aad
mov
test
sbb
pop
xor
js
mov
sbb
jle
sbb
cmp
mov
or
mov
xchg
xchg
movsl
addl
mov
adc
xor
add
movsb
add
push
add
popf
xor
addb
mov
inc
and
push
icebp
out
add
outsb
mov
jle
fildll
jb
mov
fs
incl
mov
shl
stos
repnz
in
mov
filds
mov
lahf
fists
int
cli
outsl
loope
rolb
jmp
shr
sub
cld
cmpsb
test
out
push
test
shlb
inc
cmp
pop
push
divl
mov
cmp
aam
xchg
imulb
sbb
add
lods
test
out
mov
shll
cmp
or
lcall
xchg
pushl
xor
ds
pop
stc
xor
mov
stc
fimuls
and
inc
dec
das
mov
cmpsb
js
int3
dec
jnp
lods
jno
cltd
sti
sbb
nop
addl
xchg
cmp
push
or
test
or
mov
sub
sti
cmp
jmp
movsl
daa
jp
fldl
jno
outsb
in
test
jmp
pop
push
dec
sarb
cmp
mov
adc
ja
xchg
rorb
fs
scas
adc
adc
push
pushl
mov
inc
sub
icebp
test
mov
adc
xchg
andb
prefetchw
orps
push
mov
lcall
fldenv
leave
cwtl
add
in
test
inc
mov
fwait
jne
in
out
xor
xor
mov
add
cld
pushl
push
jge
cmp
jl
mov
xor
dec
mov
incl
pusha
mov
and
leave
in
xor
pop
and
out
add
push
push
je
adc
mov
inc
movsb
mov
lahf
stos
inc
sub
mov
sub
cmpsb
loopne
test
out
pop
pop
pop
sbb
jmp
jecxz
call
xchg
add
sub
pop
lahf
add
shrl
push
jle
les
adc
push
divl
lock
cmp
jbe
scas
pop
ret
jg
pop
xchg
fisttpl
shrb
mov
std
pop
pop
int3
mov
mov
scas
push
pushl
test
fcoml
and
jg
shrl
mov
pushl
imul
pop
dec
inc
push
je
mov
jne
mov
in
inc
and
push
enter
dec
or
jg
call
and
lods
mov
int
mov
movsb
jmp
and
and
aaa
out
sbb
ljmp
inc
mov
cmp
xlat
fistpll
addl
sbb
call
xchg
popa
pusha
xchg
and
push
adc
xchg
dec
test
push
dec
xlat
mov
mov
pop
pushf
mov
dec
inc
mov
mov
mov
fsubl
test
add
sub
stos
lods
add
pop
mov
lcall
jmp
pop
and
mov
mov
jno
jno
lcall
ljmp
clc
add
and
rcrl
inc
cmc
popa
call
or
in
lret
mov
mov
push
bnd
in
xchg
lret
out
lock
lock
cwtl
lahf
pop
mov
test
xor
shrl
arpl
popf
pushf
pop
fs
pop
add
and
fstpl
mov
sub
call
inc
clc
pop
mov
repnz
xor
add
loope
inc
ljmp
dec
bound
sub
xchg
faddp
andl
jecxz
nop
mov
cmc
cmp
bound
xchg
fcoml
clc
mov
mov
lods
xor
dec
cld
mov
xchg
pop
mov
sti
insl
lcall
xor
ret
mov
jp
incl
push
fnstenv
fcmove
or
mov
fisubl
inc
call
sahf
cmp
aaa
and
sbb
xor
adc
push
fdivp
std
push
sar
movsl
lcall
lods
lcall
out
int3
xor
out
mov
push
adc
push
cmc
std
repz
cmpsb
ret
ret
cmpsb
add
call
push
loop
fldcw
mov
jo
pop
roll
and
jb
nop
in
enter
sbb
mov
adc
cmc
pushl
or
push
out
and
iret
lahf
fsts
inc
in
aaa
out
ljmp
sahf
mov
das
into
dec
jecxz
sub
and
ficoms
and
mov
inc
mov
push
cs
xlat
adc
xor
mov
xchg
icebp
in
mov
jb
inc
cmp
shl
jp
push
jmp
sbb
aad
xchg
push
mov
int
test
jbe
ret
loope
cld
pushl
test
mov
dec
xchg
push
adcl
dec
jbe
repz
ja
les
adc
pop
or
add
pop
adc
mov
mov
mov
mov
mov
movsl
or
mov
xchg
je
inc
or
adc
pop
fcoms
push
inc
xor
add
popf
lret
xor
pusha
cli
sti
add
mov
fcomip
fiadds
or
aaa
or
lcall
lret
jp
inc
adc
push
lahf
inc
or
data16
and
push
xchg
sbb
xchg
jge
mov
jo
out
mov
or
mov
in
sub
arpl
mov
nop
mov
insb
mov
adc
or
test
clc
mov
pop
inc
decb
cmp
and
sahf
mov
ja
add
push
fxam
dec
movsl
out
lock
xor
cs
mov
xor
pop
sarb
mov
push
call
mov
pop
rorl
das
push
ljmp
pop
icebp
xchg
sub
stc
dec
sub
inc
xchg
dec
ss
cmc
incl
out
push
icebp
lahf
aam
push
ror
jl
js
pop
loopne
js
and
pop
mov
call
fdivr
pushl
in
jle
push
lahf
mov
nop
pop
pop
into
into
sub
jge
add
xchg
mov
movsl
ja
jle
cmp
popa
std
add
and
adcl
cli
aaa
xor
cltd
add
ret
jae
xor
mov
popa
mov
mov
sbb
pop
enter
mov
enter
mov
mov
jne
jbe
ret
or
repz
sbb
pop
sbb
mov
and
push
decl
mov
sbb
pop
push
jmp
xor
rcrb
test
jmp
jns
fcomps
enter
jmp
lods
incl
xor
push
sub
sub
push
jbe
sar
call
pop
addr16
clc
sub
mov
push
sub
lret
popf
push
push
testl
dec
push
mov
mov
mov
mov
adc
lods
enter
cmp
sub
addr16
push
incl
mov
int3
mov
lods
test
div
fsubp
mov
cmpsb
mov
push
xor
imull
jno
loopne
pop
push
or
divl
jnp
push
jo
aaa
adc
cli
cmp
mov
lcall
aad
test
ja
or
ret
sbb
xor
jp
aad
xchg
add
outsb
cld
popf
outsl
stos
popa
ljmp
stos
inc
inc
jno
lock
into
cwtl
jle
push
jmp
cs
xchg
pusha
push
stos
xor
ds
mov
or
rolb
mov
je
cmpsb
shl
pop
or
or
mov
sub
dec
inc
mov
in
aad
mov
popa
inc
push
roll
adc
popf
xor
pop
ret
lcall
xchg
hlt
pop
cli
decl
push
lcall
xchg
movsb
adc
roll
fistpll
int3
lock
jb
cs
ret
mov
lcall
jmp
into
dec
push
mov
ljmp
lahf
aas
mov
mov
mov
mov
les
cmp
stc
push
rol
lods
or
andl
imul
mov
cmp
stc
jmp
inc
fs
sarl
addb
pop
je
or
cld
jno
xor
push
dec
scas
mov
fstl
push
rcrb
insb
repnz
test
jg
test
mov
cmp
mov
movsb
filds
js
mov
mov
add
pop
jp
sbb
mov
popf
decb
mov
outsl
lods
loop
shrb
cli
cmp
mov
mov
pushl
add
pop
int3
ret
js
enter
inc
mov
lcall
push
cmp
pop
sbb
mov
cld
gs
gs
andl
fucomi
jg
fs
dec
jmp
jae
addb
xchg
test
decl
aam
pop
pop
and
movl
fnstenv
ret
push
pop
ret
xchg
lds
les
push
sar
es
mov
xchg
call
lcall
aaa
adc
xchg
bt
jg
pop
ja
pop
push
cmp
rclb
mov
pop
sti
pushf
or
das
add
ret
xchg
pop
sti
pop
sub
dec
mov
inc
add
repnz
or
lcall
adc
adc
jecxz
clc
lods
loope
mov
add
les
in
loop
push
and
adc
or
xchg
mov
shlb
xor
and
push
jo
inc
jle
jecxz
mov
push
cld
push
adc
or
adc
inc
cmp
scas
add
pushl
daa
imul
sarl
clc
mov
cmp
pop
pop
cli
mov
push
push
lea
pop
jl
pop
sbb
lahf
inc
add
sub
pop
decl
mov
xchg
or
popa
xchg
push
sbb
inc
lcall
and
and
call
dec
push
clc
cmc
ret
int
aad
dec
and
add
sar
push
mov
and
cs
fisubs
sub
mov
fmull
int3
rorl
out
mov
fildll
call
rcl
push
sub
dec
xchg
sub
pop
jmp
push
add
pop
adc
dec
sbb
sbb
lock
jmp
cmp
sbb
xchg
inc
sub
inc
adc
sbb
dec
sbb
scas
clc
jl
movb
into
sub
out
jmp
lock
push
nop
aad
sbb
divb
mov
inc
jge
mov
sbb
ret
scas
sub
ljmp
call
pop
mov
call
adc
mov
push
mov
adc
incl
jne
ret
out
daa
jge
and
stc
cmp
mov
loopne
or
out
pop
jmp
xchg
pop
bound
rolb
xchg
lahf
pop
dec
rorb
lods
add
inc
mov
xor
outsb
push
ss
add
mov
pop
stos
clc
call
scas
mov
out
fsts
insl
push
sub
icebp
jmp
cltd
mov
mov
das
push
fwait
mov
mov
lret
icebp
pushf
mov
push
mov
ja
mov
inc
sti
popa
iret
mov
shl
push
inc
fmuls
loop
xchg
popa
jmp
adc
test
stos
pop
xchg
call
daa
mov
mov
fbld
add
std
sub
mov
push
xor
add
jne
xor
mov
add
shrl
insb
in
xchg
mov
mov
int
push
data16
pusha
add
xor
scas
adc
pushl
arpl
dec
add
jbe
stos
mov
aas
jmp
inc
cs
and
bound
push
cmp
or
and
lds
sbb
pushf
lahf
mov
bound
ret
jg
push
mov
jne
lock
xor
adc
add
inc
add
inc
add
inc
stos
push
sbb
jns
loopne
pop
cld
sub
ljmp
mov
xor
ret
scas
dec
pop
es
das
sub
clc
ljmp
dec
sbb
popf
and
bound
mov
clc
mov
nopl
mov
std
insl
push
ss
pushl
pusha
je
jl
push
xchg
stos
push
cmp
pop
push
fcomip
or
or
in
pop
imul
or
cld
inc
jmp
jecxz
mov
xor
test
dec
add
insb
loopne
add
inc
cli
mov
jne
jmp
hlt
addr16
mulb
inc
fdivl
adc
stos
adc
inc
sar
lods
out
mov
cmpsb
and
lcall
cmpsb
mov
clc
jbe
inc
test
lcall
mov
int3
rorb
sarb
inc
jbe
and
xchg
add
decl
push
cmpsb
dec
scas
add
cltd
data16
xchg
adc
les
mov
fisubrs
test
arpl
mov
ljmp
inc
outsb
cmp
xor
stc
sub
jo
scas
insl
loope
jno
dec
stc
push
xchg
cwtl
xchg
pop
cmpsl
jbe
pusha
cmpsl
add
xor
add
call
in
inc
out
mov
aaa
sub
lock
clc
sti
xchg
leave
jmp
pop
push
push
and
xchg
sar
outsl
adc
jmp
sbb
add
int3
inc
mov
adc
push
mov
xchg
cmp
sahf
xlat
jbe
cwtl
in
xor
add
incl
int3
mov
shld
sahf
xor
jbe
outsb
fnstsw
daa
add
sbb
data16
lret
xor
in
jb
sbb
lock
adc
cwtl
xchg
cli
jge
icebp
scas
cli
cmp
add
jo
shrb
pop
and
mov
cli
test
mov
add
jae
outsl
in
stos
ja
les
and
and
xor
insb
add
jg
inc
fimuls
push
mov
pop
out
mov
scas
inc
mov
mov
into
sub
cmp
lcall
mov
adc
inc
movsb
imul
dec
cld
pop
shr
xchg
enter
loopne
sbbb
jp
mov
sbb
in
icebp
bound
cmpsb
mov
mov
insb
repnz
dec
nop
imul
push
xor
pop
mov
adc
call
lea
pop
pop
cmp
lret
lret
cwtl
xchg
mov
xchg
lods
aaa
mov
adc
lret
mov
sub
stos
xlat
call
mov
jae
push
aam
add
lods
or
jns
out
mov
or
pop
movsb
stos
dec
adc
pop
mov
mov
or
sub
mov
xchg
lahf
insb
lahf
iret
jg
adc
mov
stc
cld
mov
movsb
or
gs
cmpsb
add
negl
sarb
lock
jg
in
mov
pop
test
mov
fistpll
or
aam
hlt
decl
addb
dec
mov
dec
push
das
inc
xor
in
scas
lock
jl
cs
pop
mov
jl
lcall
outsl
shlb
inc
icebp
jg
ljmp
mov
incl
repnz
and
in
mov
loopne
ja
sub
enter
and
adc
dec
je,pn
jns
adc
xor
in
sub
sbb
movsl
cmpsb
hlt
mov
jmp
pop
filds
sbb
outsb
or
mov
ljmp
ficoms
jmp
rorb
insl
xor
out
adc
adcb
jle
dec
pushl
mov
or
mov
xchg
outsb
cmp
decb
jns
push
pushl
cli
mov
ss
push
jl
sar
aam
push
jae
xor
aam
clc
or
push
xchg
test
fiaddl
jo
les
incl
push
dec
sub
push
push
cmp
fcmovnb
push
cli
data16
pushl
fsubrs
into
lds
xchg
jne
and
pop
int3
adc
in
fisubs
mov
pushl
lret
cmp
scas
dec
je
push
xor
lcall
push
lret
sbb
pop
push
mov
int3
adc
add
jbe
pop
sub
aas
cmpsl
sub
mov
inc
jecxz
cmpsl
add
aad
add
xchg
mov
jle
sbb
xchg
jns
jb
in
push
in
jg
mov
movsl
mov
xor
jl
sub
adc
sub
decb
sbb
scas
mov
mov
mov
jns
sahf
ds
inc
inc
subps
cli
out
and
rcrb
adc
stos
aam
pop
incl
adcb
xchg
mov
movsb
push
mov
or
xchg
dec
ljmp
lcall
cld
inc
movsb
add
mov
sbb
push
mov
or
mov
dec
pop
push
jl
adc
inc
incl
sti
loop
cmp
sarb
int3
stos
mov
incl
push
inc
push
cmp
cld
mov
decl
jns
sarb
inc
or
mov
mov
jno
cmp
sbb
loopne
scas
inc
or
pusha
push
leave
and
pusha
pop
cld
cmpl
jg
mov
xchg
dec
sahf
jae
mov
out
xor
das
pop
dec
call
lcall
mov
mov
ret
mov
pop
orb
leave
loope
sub
stos
xchg
cmp
sbb
decl
stos
jmp
push
int
pushl
stc
loopne
mov
pop
and
test
lret
lret
std
jg
xor
mov
incl
pop
pop
mov
inc
in
sbb
mov
imul
outsl
jae
icebp
fistps
into
add
in
ja
cli
imul
rcrb
into
or
stc
decl
pop
xorb
mov
cmp
sbb
xor
data16
pop
es
lcall
dec
lcall
scas
push
add
shlb
inc
jl
shlb
cli
in
sbb
mov
sbb
inc
out
pushaw
dec
pushl
dec
mov
gs
or
ss
push
dec
dec
lcall
sbb
bound
incl
pop
loopne
testl
inc
cmp
cld
xchg
shr
mov
jmp
sbb
stc
lcall
push
sti
mov
jnp
and
popf
xchg
inc
inc
out
mov
pushl
cld
ljmp
mov
dec
xor
add
mov
das
rolb
sbb
mov
jmp
add
fwait
jg
and
cs
int3
xlat
push
and
pop
sbb
xor
dec
pop
push
push
xchg
popf
jp
add
adc
pushl
add
pop
push
popa
push
or
and
int3
xchg
aad
dec
push
or
push
jo
scas
push
jmp
out
cmp
push
into
pop
mov
loopne
mov
imul
call
aas
jno
mov
xor
jb
stos
and
push
test
pusha
add
sub
pushl
mov
add
ret
sub
xor
scas
xchg
test
inc
jl
sarl
js
nop
mov
call
push
cmp
repz
repnz
mov
pop
lods
rclb
or
mov
fdivr
add
pusha
jle
and
stos
pop
adcl
xlat
mov
in
je
sbb
mov
stos
dec
sub
jl
loope
adc
lcall
and
add
dec
add
in
js
repnz
pop
call
out
in
mov
add
cmp
pop
sahf
xlat
es
sub
aad
mov
fsubrs
jnp
testb
out
mov
loope
inc
push
enter
or
xchg
sbb
cmp
loop
imul
stc
mov
fidivl
add
pop
lods
xchg
xlat
imul
test
push
jmp
add
cli
pushf
test
ss
mov
cmp
popf
fs
xchg
shlb
xor
dec
out
or
dec
fistpl
bound
je
mov
fildl
lods
mov
mov
add
bnd
adc
insb
andb
mov
hlt
jns
sbb
test
sbb
xor
in
je
jge
or
out
xor
std
call
xor
lret
fs
mov
mov
xchg
adc
js
fnstcw
and
add
mov
pop
adc
leave
mov
jp
fnsave
sbb
fwait
call
cld
inc
into
or
shlb
mov
xor
mov
xor
push
out
mov
inc
lret
inc
inc
in
sub
jge
test
out
or
xchg
sbb
ljmp
sub
lock
sbb
adc
addr16
cli
pop
fadd
sub
sbb
scas
push
aam
jge
pushf
sbb
dec
insb
idivb
sbb
insl
lods
xor
test
dec
mov
jge
lods
fcmovb
mov
xchg
pop
jg
push
cld
das
dec
pop
push
push
mov
es
and
scas
sar
incl
std
inc
mov
clc
test
dec
inc
cmp
push
fcoms
loope
add
inc
push
xchg
xor
sbb
xchg
and
inc
mov
or
sub
mov
in
in
cli
mov
rcll
rcll
inc
xchg
sarb
scas
lcall
and
mov
test
cmp
sub
push
inc
add
inc
aad
addr16
dec
jbe
inc
movb
fdivr
fsubrl
ljmp
and
add
insl
fdivs
mov
add
clc
mov
jnp
add
add
hlt
inc
dec
xor
test
and
test
pusha
sbb
inc
sbb
dec
cmp
push
mov
lcall
pop
mov
ret
ss
repz
xchg
mov
decb
cltd
sbb
movsb
mov
std
dec
fnstenv
mov
pop
and
mov
cmp
jl
xor
sti
insl
dec
insb
adc
sar
enter
and
repz
cmp
imul
cltd
sbb
call
jl
into
add
or
jnp
mov
fdivrl
test
mov
jb
adc
pop
mov
mov
mov
and
gs
decl
daa
popa
mov
cwtl
daa
filds
stos
loopne
lret
add
fcoms
sub
mov
jne
xchg
jo
pushf
adc
lcall
sub
inc
movsb
xchg
shrb
cmp
jno
cmpsb
lcall
rclb
js
sbb
enter
mov
sub
test
add
outsb
ljmp
add
adc
dec
mov
call
int3
push
aam
lods
push
lock
lock
push
pop
sbb
hlt
xchg
adc
sub
sbb
mov
popf
add
dec
sub
js
or
mov
out
cli
scas
push
jp
test
mov
mov
xchg
mov
push
or
push
inc
add
sbb
inc
fsubrs
stos
gs
out
ljmp
test
xor
dec
adc
iret
mov
je
sbb
dec
loope
ss
ljmp
icebp
jg
sbb
in
es
pop
andl
nop
scas
sub
mov
hlt
push
sar
push
sbbl
jmp
cs
outsb
mov
nop
and
and
ja
fisubl
mov
sub
and
or
fs
jl
leave
push
enter
or
cmp
jns
cmpsb
pop
push
call
lret
cwtl
adc
mov
outsl
sar
in
lahf
adc
imul
lods
xchg
pop
cmp
insl
jb
add
decl
or
push
std
sub
jbe
aad
add
push
jle
cwtl
cmp
hlt
inc
stc
xchg
cmc
stos
inc
mov
pop
add
imul
hlt
mov
jle
push
pop
pop
or
sub
ljmp
rorl
shlb
cltd
sbb
addr16
mov
mov
sub
popf
dec
cli
push
hlt
cwtl
mov
ficompl
mov
popf
dec
mov
clc
inc
adc
sub
jge
call
inc
or
rcrb
cmpsl
scas
mov
stc
sbb
sub
aas
adc
clc
jb
scas
add
daa
push
ljmp
fiaddl
out
lds
inc
xor
fnop
je
inc
insl
roll
mov
mov
test
imul
jle
mov
popa
loopne
sub
ss
xchg
add
pop
call
ret
push
mov
cmp
es
add
mov
push
sbb
mov
adc
pushl
jbe
aam
aam
pop
scas
popa
repnz
in
ds
and
push
push
fists
popa
les
mov
repnz
test
mov
ljmp
sahf
jg
mov
lock
rol
mov
hlt
js
xchg
dec
mov
incl
cmp
xchg
mov
lcall
test
subl
jle
add
mov
adc
mov
add
sbb
enter
mov
or
push
fwait
sahf
mov
scas
add
movsl
mov
cmp
add
insl
or
pop
add
sbb
adc
xchg
push
decb
cmpsl
inc
std
pop
lock
into
mov
add
inc
stos
adc
sbb
shrl
repz
sub
jp
jne
push
mov
stos
sbb
and
dec
loopne
test
dec
xor
fstpl
std
or
das
inc
add
push
mov
fcoms
mov
call
mov
pop
pop
mov
or
je
and
sub
imul
clc
dec
test
int
dec
jmp
cli
jnp
movsb
xchg
das
repnz
scas
aad
mov
sbb
fadds
sbb
mov
addb
loope
add
mov
pop
jae
push
mov
mov
jb
movsl
mov
mov
or
lcall
dec
mov
jo
dec
xchg
les
incl
jbe
data16
imul
and
leave
ss
shlb
std
decl
sbb
or
adc
mov
adc
pusha
repnz
push
jne
and
or
push
fldl
mov
lea
inc
movsb
call
flds
sbbb
sbb
push
dec
pop
mov
mov
jmp
daa
aam
lock
das
or
cltd
shlb
mov
enter
jmp
in
adc
sub
outsl
push
push
aas
out
mov
jne
jg
loope
and
std
mov
mov
dec
fneni(8087
cmp
mov
xchg
mov
in
ret
push
inc
adc
roll
fs
mov
jmp
mov
ljmp
es
out
and
dec
shll
or
incl
ds
in
aad
cmp
pusha
mov
and
dec
daa
push
inc
mov
pop
push
ljmp
mov
mov
in
and
ljmp
call
sarl
int3
sahf
lcall
and
sub
push
ds
push
stc
data16
mov
sub
sub
inc
adc
mov
decl
xchg
pop
es
add
ds
mov
loope
xlat
pop
cwtl
repnz
incl
and
mov
jp
sti
test
or
lock
adc
cmp
and
jl
mov
mov
mov
adc
in
xchg
test
mov
rcll
dec
push
push
cld
mov
cmp
pushl
loop
or
and
sbb
sub
lcall
fldt
sbb
dec
pop
adc
inc
in
aad
jge
inc
push
je
call
mov
mov
loope
or
decl
ss
pop
jb
inc
push
inc
mov
mov
pop
mov
xchg
or
ja
stos
sbb
push
fstpt
js
incl
push
in
ret
mov
popf
nop
je
aam
add
xchg
fwait
jl
pop
mov
fcoml
icebp
add
push
add
fisubrs
mov
stos
adcb
xor
leave
or
xchg
fdivrp
ljmp
dec
mov
pop
cmp
cmp
xchg
js
inc
arpl
push
popa
les
inc
call
sbb
cmp
or
mov
pushf
daa
mov
jb
mov
add
mov
iret
sbb
add
lahf
or
das
add
fimull
pusha
jmp
call
xor
adc
je
mov
incl
nop
call
lea
push
pop
xchg
stos
js
mov
rol
ret
xor
in
mov
push
fs
scas
inc
daa
xor
jb
xor
movsl
mov
pop
mov
inc
faddl
arpl
jl
imul
arpl
pop
mov
jo
cld
fidivrs
dec
cmpxchg
call
call
sub
fstps
les
mov
push
and
into
hlt
jae
and
jp
ljmp
rorl
cli
cmp
and
sbb
std
pop
dec
fcomps
inc
pop
jp
in
es
aam
fbld
in
dec
test
sbb
sbb
outsl
lods
xchg
lret
outsb
pop
mov
ljmp
inc
mov
mov
pop
pop
rol
push
inc
jmp
add
stos
xchg
xchg
xchg
mov
and
dec
inc
dec
mov
mov
ret
lret
lea
xor
push
jge
decl
clc
in
jne
sbb
push
in
cltd
in
jg
mov
mov
xchg
loopne
jge
xor
jg
pop
pop
add
leave
es
dec
test
sub
outsb
mov
in
fwait
ret
mov
mov
jnp
std
jmp
xor
add
data16
dec
je
sub
jg
or
xor
iret
cli
or
cmp
imul
pop
mov
lret
in
mov
enter
das
stc
jge
jne
orb
and
sbb
icebp
xor
int
push
rorb
mov
fsubp
rolb
rolb
jg
push
iret
push
loopne
aas
popf
jg
mov
pop
dec
inc
add
cli
push
enter
andl
dec
adc
xchg
scas
and
into
scas
clc
fldcw
les
scas
mov
dec
add
ret
sub
test
add
dec
and
xor
jg
push
add
out
inc
cmpsl
sub
insb
xor
insb
dec
mov
mov
jmp
xchg
mov
pop
rep
divb
push
dec
and
jbe
aas
out
inc
adc
jno
xor
ljmp
xchg
push
out
rcr
out
jle
test
xchg
cs
mov
sub
clc
daa
testl
and
fsubl
push
incl
dec
or
sbb
test
icebp
jge
jbe
ljmp
xor
jbe
dec
lods
mov
push
push
fs
pop
mov
and
mov
scas
pop
mov
loope
cld
decb
dec
ret
push
pop
dec
loope
bound
out
roll
jo
jno
inc
das
loop
push
jae
mov
mov
sti
scas
xchg
int3
sub
or
sub
imul
and
mov
inc
ds
ds
rcl
pop
scas
xor
xor
pop
and
pop
insb
int3
mov
sbb
inc
inc
decl
adc
fidivl
cmpsl
sbb
icebp
lds
es
push
jg
and
sahf
sub
lcall
ljmp
icebp
test
ret
ds
gs
hlt
ljmp
insb
scas
mov
movsb
int
lods
or
je
push
lds
dec
cwtl
rcr
xchg
xchg
mov
cmp
jmp
pop
mov
fsubr
aam
test
adcb
inc
and
std
out
enter
mov
dec
jo
aam
mov
in
icebp
mov
mov
mov
hlt
testb
lret
int
jb
jns
mov
or
dec
and
and
aam
insb
push
in
hlt
in
xchg
and
filds
mov
aas
call
arpl
mov
adc
js
decl
mov
pop
movsb
mov
push
lea
test
or
out
dec
mov
jnp
and
inc
add
inc
sub
out
adc
fisubl
jmp
dec
mov
or
adc
push
push
sar
fisttps
leave
iret
mov
int3
in
mov
sahf
mov
sub
lock
je
sbb
sbb
out
clc
daa
dec
jbe
and
into
in
adc
add
fwait
add
jne
push
cld
jg
js
fcmovbe
repnz
and
dec
jnp
pop
mov
mov
pop
ret
push
fidivs
push
pop
add
outsl
shr
inc
mov
test
sub
es
mov
mov
or
out
xchg
es
mov
outsl
cli
mov
xchg
test
rcrl
and
push
jmp
dec
pusha
data16
movl
push
insb
in
stos
sub
or
sbb
sbb
or
std
pop
jbe
jle
adcb
and
jno
mov
idivl
insb
and
mov
cmp
inc
jbe
sti
js
cmp
aaa
jge
push
xchg
ffree
push
aaa
mov
push
push
aam
fimuls
jecxz
fisubl
mov
loope
pop
hlt
cli
lea
outsl
pop
xchg
push
and
idivb
add
aad
inc
gs
xchg
mov
fidivs
movb
jl
pop
hlt
sbbb
cmp
outsb
sahf
and
pop
sub
or
pop
sbb
cmpsb
shrb
pop
add
pop
cmp
sub
pop
adc
test
xchg
into
rolb
mov
decl
pop
jle
sbb
inc
pop
mov
pop
and
les
cli
mov
sti
aaa
cmp
mov
add
push
jo
and
decl
sti
stc
rep
aas
stc
in
fistpll
push
jmp
pop
or
and
stos
es
insb
and
mov
les
pop
pop
cmp
jecxz
push
add
das
mov
outsb
push
dec
das
or
add
mov
stc
jg
movsb
stc
ds
test
lock
iret
dec
fstpt
fildl
cwtl
add
sahf
xchg
jle
cmp
scas
pusha
call
std
or
sbb
rcl
daa
imul
fdivr
icebp
add
xor
sub
cwtl
and
inc
hlt
dec
mov
inc
insl
sahf
dec
xchg
cwtl
jge
push
push
popa
orb
test
xchg
ror
dec
lock
and
aaa
mov
pop
jnp
les
shlb
inc
or
outsb
shlb
cwtl
iret
inc
rcrb
loop
inc
sbb
lret
mov
cmp
xchg
mov
addr16
ljmp
mov
push
and
xchg
mov
and
add
xchg
scas
clc
fisttps
hlt
add
jl
mov
xchg
sbb
vmovd
in
incl
cmp
xchg
xlat
mov
fcmovb
movsl
shrl
cld
div
xor
dec
add
mov
dec
inc
adc
fildll
ja
adc
stos
sub
mov
jmp
mov
jns
je
pop
push
jne
jmp
mov
movsb
lahf
jns
enter
mov
sub
add
cmp
mov
mov
mov
push
ljmp
fdiv
fcom
in
jbe
mov
sub
inc
test
pop
sbb
test
imul
jl
push
les
int
in
repz
jg
movsb
loopne
lret
cmp
jno
inc
movsb
or
or
incl
clc
fsts
cwtl
or
arpl
xchg
mov
dec
inc
jmp
js
and
in
fsubrl
mov
pop
mov
adc
sub
ss
stos
jp
les
in
and
push
fcmovnbe
inc
ss
push
add
rorb
das
push
inc
je
decb
outsl
shlb
in
sbbl
mov
dec
loope
push
or
cmp
mov
hlt
jmp
ds
xchg
jl
mov
popa
ficoml
xor
pushl
jge
mul
into
mov
enter
lcall
dec
fmull
jbe
mulb
les
pusha
lock
ja
test
pop
mov
xchg
pop
sub
add
push
or
or
mov
pop
pop
mov
cmp
lcall
out
pop
in
xchg
test
jl
xchg
lock
fbld
ss
jp
sbb
in
in
int
jne
stos
das
push
pop
pop
outsl
cmp
dec
sti
jns
push
pop
std
push
sub
test
push
adc
mov
pop
jmp
cmpsl
jae
cmpsl
jle
fs
pop
or
inc
or
sub
pusha
sti
push
pop
xchg
arpl
jmpw
xchg
fstps
je
clc
daa
sbb
loop
inc
mov
outsl
sub
shlb
repnz
push
mov
add
cmp
mov
mov
incl
push
inc
jo
pop
inc
imul
cmp
xchg
adc
lock
fisttps
adc
aad
sbb
mov
insl
dec
popf
cltd
shrb
lret
mov
out
ret
and
lock
icebp
hlt
push
mov
cmpb
decb
or
stos
jecxz
push
aas
inc
push
decl
sub
imul
out
push
iret
out
add
jmp
fs
push
or
subl
xor
sub
mov
mov
scas
inc
cmp
pop
insl
nop
fildl
in
sbb
in
mov
adc
xchg
add
loop
stos
mov
mov
and
imul
adc
sar
mov
mov
pop
std
sub
mov
jge
in
es
push
repz
xor
push
sbb
mov
dec
outsl
das
push
negl
ret
lock
rcr
lcall
ss
mov
daa
shrl
mov
cmp
pop
and
cmpsl
xchg
stos
ds
xor
incl
mov
pushf
or
addr16
movsl
push
lock
add
incl
fsub
pusha
inc
pop
pop
xchg
adc
rcrl
cmp
aad
insl
sub
push
sub
dec
ljmp
cmp
aad
icebp
jmp
and
push
adc
inc
ffree
ss
lods
in
aaa
aad
scas
cmp
sub
inc
lock
dec
xchg
lock
nop
xchg
add
adc
hlt
pop
sbb
std
out
inc
test
adc
lds
push
pushf
insl
call
pop
jo
aam
call
lods
cmc
clc
pusha
sbbb
push
jns
jno
lds
stos
push
add
push
mov
pushf
enter
lds
cmc
mov
sub
pushf
xchg
rclb
pop
and
cltd
fidivrs
lcall
ds
mov
aas
pop
mov
ficoms
adc
sahf
idiv
lcall
xchg
and
test
sahf
adc
jb
mov
or
dec
mov
ljmp
jecxz
clc
cmp
dec
gs
pop
jbe
fsubrl
mov
movb
sahf
jns
hlt
sbb
push
jb
ret
mov
pushl
mov
std
sub
push
add
fists
lods
or
sbb
sahf
xor
xor
pop
popf
cli
cmp
or
jmp
loopne
xor
aam
lods
fidivl
inc
js
pushf
push
out
clc
lcall
loopne
in
adc
lds
mov
push
push
aas
out
clc
ljmp
aad
push
pop
shrl
fistps
arpl
das
inc
loop
pop
inc
jae
sub
incb
pushf
sahf
mov
jg
stc
es
fisttpll
sete
add
sbb
xor
pop
std
ljmp
dec
mull
lcall
in
mov
cld
mov
sub
std
jl
xlat
xchg
incl
pushf
push
sbb
cmp
cmp
or
decl
adc
mov
mov
imul
mov
imul
fcomip
rcr
popf
out
ss
adc
or
mov
xor
xor
fbld
insl
mov
scas
std
push
cmp
fdiv
jecxz
cmp
cmp
dec
pop
dec
jecxz
jp
sar
lcall
sbb
xor
xor
pop
iret
xadd
fldl
push
aam
mov
jp
out
popl
jecxz
movsl
out
aam
jmp
icebp
inc
or
repnz
or
or
sarb
sahf
or
and
cmp
ja
insb
xchg
jnp
aam
push
adc
fistpll
pop
mov
mov
lcall
mov
loope
pushl
push
pop
lock
std
negb
and
scas
lea
subl
jecxz
xor
in
test
or
fldl
push
push
mov
das
push
push
into
ficoml
adc
jl
loop
push
or
or
pop
inc
mov
cs
push
push
cld
cli
shlb
dec
cld
or
push
inc
lods
dec
fcompl
jg
sub
mov
scas
gs
test
jg
adc
and
pop
sbb
mov
pop
dec
shr
push
js
sbb
xchg
lcall
xor
xchg
cmc
xchg
mov
push
mov
int3
lods
add
sahf
fs
push
xchg
pop
jg
or
out
sbb
lret
push
test
addr16
mov
lods
pushf
and
pusha
adc
decb
test
cmp
xchg
or
lds
pop
mov
mov
pop
faddp
cmpsb
aaa
pop
push
inc
mov
je
or
popa
lcall
mov
sub
imul
xchg
jbe
xchg
or
add
test
push
clc
call
pop
mov
jbe
xor
sub
insb
mov
shl
cmpsb
jg
mov
loop
inc
cs
fstpt
in
mov
mov
sbb
aas
mov
call
mov
jge
sbb
hlt
ret
inc
mov
sahf
push
push
dec
fcoml
cwtl
sbb
pop
cli
jg
push
adc
ficomps
imul
notb
and
dec
mov
push
jbe
sub
and
rorb
dec
out
addr16
xchg
roll
pop
loopne
lret
inc
inc
in
hlt
out
lock
mov
rol
jg
or
lret
and
das
clc
mov
ret
lods
fstpt
adc
mov
int3
jns
sbb
xchg
adc
mov
fcoms
jmp
jge
lcall
into
je
rsm
xor
mov
insl
or
loopne
jecxz
jo
sbb
stos
lods
fiadds
pop
mov
mov
pop
mov
std
mov
mov
std
and
fs
inc
cwtl
xchg
outsl
mov
fs
lcall
repnz
mov
shrb
cmp
fcmovb
add
dec
pop
out
add
adc
adc
fsubrl
pop
inc
dec
outsl
or
cmc
pusha
jne
sub
sub
jb
cmp
jno
sbb
ret
jg
loopne
mov
xlat
stc
sbb
xor
add
lcall
mov
dec
shll
sbbb
lea
inc
jecxz
dec
xor
jae
add
dec
sbb
or
popa
push
test
jns
mov
jp
jle
push
sbb
fsubl
ljmp
sub
pop
mov
call
sub
test
or
xor
aaa
sbb
add
pusha
hlt
std
dec
into
add
jne
push
in
test
sbb
fnstsw
sub
sub
cmp
jbe,pt
lock
xchg
pop
or
loopne
cld
jg
adc
add
js
cld
mov
lcall
add
inc
outsl
jp
xor
insl
adc
add
sbb
cld
aam
cmp
ss
lods
inc
mov
outsl
andb
cwtl
jb
cmc
mov
fldt
dec
out
mov
cmp
xchg
out
inc
dec
nop
mov
add
lcall
ficompl
clc
push
outsb
mov
fbld
mov
es
iret
icebp
ds
adc
lahf
mov
lock
dec
mov
mov
xchg
clc
lcall
mov
cmc
movsb
adc
and
sbb
pop
lods
popf
out
cmp
mov
pop
inc
inc
loope
inc
mov
mov
hlt
sbb
int
sbb
dec
dec
fcoms
ljmp
or
movsb
shl
mov
and
mov
jecxz
and
cmp
lods
lret
sahf
outsl
dec
in
in
rorl
loop
je
mov
jns
imul
add
fnstsw
inc
add
adc
fwait
cld
jg
or
cmc
fdivs
push
pusha
mov
lods
cli
dec
pop
pop
sar
add
scas
out
inc
push
cmc
and
out
sub
push
dec
and
mov
shl
jb
sbb
aaa
ret
xor
pop
ds
jns
push
ret
icebp
das
cli
pop
fildl
fimull
mov
aaa
std
inc
or
cmp
xchg
js
add
fcoml
push
loopne
pop
pop
xchg
adc
jle
sub
scas
fistpll
fstps
mov
add
jb
loop
rcl
xor
mov
cld
ljmp
jmp
pop
or
hlt
sbb
jbe
push
nop
inc
aad
sub
jl
mov
cltd
xor
xor
dec
sub
scas
orb
scas
add
pop
mov
xchg
xor
add
sub
lock
push
pop
and
lcall
adcb
jo
mov
cli
push
jp
push
xchg
ret
addb
add
mov
dec
div
out
xchg
les
adc
cwtl
addl
jae
mov
arpl
ljmp
cs
or
inc
jmp
aam
xchg
popa
mov
and
mov
jbe
in
and
cmp
bnd
loope
jle
incl
mov
lret
fiadds
dec
sub
xrelease
outsl
dec
mov
mov
out
dec
sub
or
inc
popa
mov
gs
sub
cmpl
mov
in
mov
stos
loop
lret
pop
pop
loopne
push
filds
and
popa
push
add
jmp
in
mov
lret
jae
and
xlat
lods
iret
call
and
inc
cmp
bnd
ljmp
xlat
mov
dec
cwtl
bound
pop
cltd
sub
adc
and
dec
adc
and
call
push
fnstenv
pop
ja
mov
cli
pop
cmpsl
popa
mov
inc
cmp
jnp
pop
xchg
cmp
mov
and
mov
cld
push
out
jg
aad
cmpsl
pop
leave
clc
xchg
or
and
jg
sbb
ljmp
add
and
jmp
stos
xchg
les
int
clc
or
jle
or
push
leave
or
mov
push
ja
lea
jg
cmp
dec
loop
sbb
das
and
into
jbe
mov
sbb
xor
inc
xchg
mov
test
adc
xor
leave
dec
adc
and
decl
and
test
jle
dec
notl
clc
loopne
loope
push
mov
fcomip
call
movzbl
stos
outsb
inc
adc
jg
cli
cmpsb
sti
push
inc
or
mov
jbe
int
loope
xchg
jnp
insb
lahf
lock
idiv
ja
pop
aas
imul
int
out
stos
aaa
pop
out
mov
cmpb
jg
inc
fsub
lcall
fildll
cmpsb
lret
push
scas
xchg
cmc
add
lahf
movsl
into
mov
pop
sbb
sbb
repz
movsl
subl
incl
pop
pop
testb
push
push
mov
sub
mov
xchg
lods
pusha
scas
mov
cmpsb
jnp
xchg
iret
cmp
mov
aas
xchg
dec
js
dec
or
cmpsb
in
rorl
pop
test
pop
mov
decb
sbb
cli
fcoms
std
dec
call
adc
mov
mov
mov
fs
mov
ret
sub
in
cwtl
fimuls
jbe
push
dec
std
add
sahf
ret
dec
sbb
repz
pmaddwd
mov
xchg
shlb
dec
xchg
sub
movsl
shll
ret
and
std
sbb
sub
jl
jb
add
fnstenv
or
sbb
dec
cmpsb
das
and
cs
sub
cld
test
ljmp
sub
arpl
jmp
clc
mov
pop
cmp
in
pop
ljmp
andb
xor
jae
ret
leave
or
ja
jg
adc
dec
push
push
inc
aaa
stos
lcall
divl
mov
roll
or
movsb
in
mov
inc
in
lcall
adc
fstpl
rorl
lret
lcall
popa
add
cmp
adc
outsl
addr16
and
imul
jl
jo
push
mov
lahf
inc
pop
adc
ss
decl
and
popf
push
ds
lret
std
fucomi
xor
sahf
dec
and
xor
movsb
jge
adc
lds
push
xor
adc
mov
pop
test
scas
mov
pop
mov
dec
pop
mov
leave
pop
test
loopne
pop
xor
ret
or
pop
movsb
xor
lods
mov
fistpl
pxor
arpl
push
inc
cli
mov
add
mov
js
inc
mov
cli
cmp
sub
mov
shll
jns
iret
addr16
mov
xchg
inc
mov
dec
sub
imull
jle
fnstsw
mov
mov
imul
int
call
int3
or
xchg
pcmpgtb
add
ret
iret
pop
jo
cli
call
in
and
xchg
mov
mov
cmp
cmpsl
cs
cmc
decl
test
stos
test
sarl
inc
out
int
sub
sbb
push
clc
pop
ret
and
aam
jnp
mov
cwtl
xchg
dec
ret
jae
mov
out
lret
pop
dec
xchg
lss
enter
xchg
add
cmovbe
dec
cwtl
cmc
flds
xchg
add
pop
mov
ret
dec
data16
cmp
movsb
aam
call
jmp
add
or
mov
outsb
arpl
jns
adc
popa
jecxz
lods
mov
scas
dec
dec
bound
sti
add
xchg
add
popf
into
xor
adc
dec
mov
sub
jne
hlt
and
dec
pop
lret
push
dec
data16
movsl
and
ljmp
mov
notb
clc
pop
cmc
outsb
sarb
hlt
movsb
stos
lret
scas
push
cli
mov
jg
jmp
or
fcompl
mov
lods
gs
pop
add
mov
les
imul
sti
jnp
dec
inc
dec
js
add
and
xchg
lea
mov
pop
fsubrs
pushf
add
pushf
jmp
push
or
mov
cmp
lock
clc
lcall
roll
push
and
xor
test
data16
adc
jo
movsb
in
push
pop
xchg
sbb
pop
orb
scas
mov
jg
push
lock
jne
mov
mov
xchg
enter
leave
nop
shrb
les
mov
pushf
idivb
mov
outsl
stc
and
mov
inc
iret
push
test
insb
jbe
fsubs
lods
das
xor
cmp
fistpll
icebp
divb
ds
cmp
push
cmpsl
push
js
and
negb
test
ror
push
push
test
decl
adc
leave
xor
mov
jle
mov
mov
outsl
and
jge
push
add
push
mov
loopne
icebp
add
push
add
jo
jg
loopne
daa
sub
std
add
jo
xor
jp
cltd
dec
push
jbe
lret
cmp
mov
out
or
insb
stc
sbb
mov
push
inc
out
inc
push
dec
cmovo
decl
pop
sbb
pop
push
push
stos
je
add
inc
xchg
imul
mov
fiaddl
pop
dec
scas
cmp
jmp
adc
adc
or
cmp
rclb
push
rclb
aam
pop
scas
jg
ljmp
fucomi
inc
xchg
mov
cmpsb
push
dec
popa
shrl
lcall
outsl
cmp
pop
ljmp
pop
dec
dec
fisubl
data16
xchg
lret
mov
jg
pop
pushf
mov
mov
pop
fnsave
subl
inc
mov
and
aas
ret
add
dec
subb
ss
mov
add
lods
ja
sub
hlt
out
sub
hlt
ss
fsubrp
cmpsl
add
leave
xor
lret
push
call
adc
jg
aam
mov
mov
mov
rolb
and
pop
sbb
loop
mov
lret
xchg
aaa
pop
xchg
xchg
scas
hlt
shlb
fsubs
pushf
jmp
mov
and
inc
pushf
jge
xchg
pushf
test
ja
inc
inc
filds
push
add
adc
add
mov
shr
sub
mov
adc
pop
out
cmpsb
les
subb
ja
pop
cmpsb
and
lcall
fs
pop
inc
dec
xor
mov
cmp
dec
in
sbb
pushl
cmp
or
popa
movsb
and
pop
fcmovnbe
fdivrs
and
jo
pop
lods
lcall
pop
ret
xor
test
mov
push
dec
pop
insl
push
mov
mov
add
ss
mov
sbb
rcl
adc
add
mov
mov
shlb
jmp
rolb
icebp
stos
sbb
lods
fbstp
cmp
sub
ss
push
aaa
in
mov
cld
cld
loope
add
ss
lret
pop
ja
incl
ss
das
jp
sbb
adc
aam
push
cli
and
mov
mov
fmulp
jle
mov
in
ljmp
test
sbb
and
xchg
sahf
sbbb
out
mov
xchg
adc
call
pushf
iret
fwait
adc
inc
decb
movsb
cld
jo
daa
rol
mov
aas
cmp
ljmp
push
push
pop
int
sub
push
mov
cmp
scas
dec
add
dec
dec
icebp
jb
mov
sar
pushl
pop
push
mov
mov
std
push
repnz
push
fcomp
test
sub
dec
wbinvd
pop
jecxz
sbb
mov
adc
pop
idivb
mov
bound
pusha
xor
aaa
jb
ret
leave
aas
or
sbb
adc
cmp
pop
jae
sbb
mov
add
das
xor
pop
fwait
sbb
add
xchg
popa
out
push
in
into
pop
dec
lahf
mov
mov
test
fs
mov
pop
shrb
add
lret
cli
mov
xor
pop
in
lret
pop
dec
dec
out
loopne
or
icebp
xorb
mov
add
mov
pop
enter
pushf
pop
mov
or
mov
fcmovnb
call
mov
dec
adc
pop
pop
lret
push
call
inc
mov
clc
and
mov
cld
in
push
add
lret
xor
inc
pop
mov
test
mov
ljmp
std
leave
jo
orl
inc
mov
in
leave
jecxz
int
mov
add
mov
push
cld
jnp
cmc
adc
stos
call
sub
jl
loopne
int3
orl
cmp
decl
ss
xor
mov
adc
jle
rcrl
pusha
stc
lret
add
push
jb
dec
or
inc
bound
scas
cli
ja
dec
dec
mov
dec
and
mov
pop
xchg
insl
sahf
sti
sub
adc
les
cmpsb
ljmp
lock
loopne
enter
or
or
movsb
xchg
pop
cmc
into
jl
repnz
out
inc
cmp
in
insb
aas
ret
aaa
inc
repz
lret
xor
mov
cli
mov
stos
dec
cwtl
jae
pushf
fisttps
push
cmp
lcall
and
mov
decl
and
stos
outsl
mov
jp
sbb
jo
shlb
jo
push
push
push
clc
lcall
mov
in
inc
xchg
push
or
sbb
xchg
das
inc
cmp
cmp
std
jg
lahf
add
mov
lahf
or
subb
push
mov
add
mov
xor
sub
fisubl
negl
lods
scas
pushf
jge
xor
icebp
push
and
adc
lds
mov
out
mov
jae
mov
pop
mov
fucomp
cli
cmpsb
cmp
filds
sub
inc
jbe
cmp
insl
mov
je
sbb
push
decl
jle
popa
mov
push
stos
add
mov
mov
xchg
pusha
in
sbb
std
scas
push
add
fcoms
jge
jg
addr16
js
lock
cmp
sub
call
push
add
fucomip
aad
push
fildll
push
shr
inc
sbb
ljmp
sbbl
xchg
inc
jle
mov
stc
adc
call
cmp
inc
xchg
add
jno,pt
adc
dec
or
stos
sbb
ret
adc
jg
adcl
iret
pop
cld
mov
push
ret
mov
adc
or
shll
lock
jg
or
nop
scas
stos
jmp
dec
ljmp
mov
push
xor
loopne
aam
push
les
lock
sbb
mov
mov
jbe
std
das
es
sbb
ficoms
mov
jnp
xchg
mov
push
lods
insl
xor
decb
or
mov
lods
push
sti
push
mov
inc
ljmp
clc
or
inc
pop
cs
in
gs
cs
jle
mov
mov
sbb
inc
movsb
mov
pop
lea
or
add
xchg
ss
push
push
mov
xchg
jle
push
in
dec
sahf
or
incl
dec
jg
mov
out
and
cwtl
lret
xchg
iret
or
push
sub
inc
mov
clc
xchg
and
add
xor
adc
mov
xchg
fdivs
add
mov
popf
fildl
xchg
pop
decl
mov
inc
hlt
lret
ja
jnp
sub
outsl
adc
jmp
push
stc
bound
scas
or
fisubrl
mov
cmp
test
mov
xchg
sar
lcall
imul
and
lds
outsb
int
push
and
and
ljmp
inc
pop
xchg
ss
jnp
sbb
xor
stos
add
push
jb
mov
ljmp
jb
and
dec
inc
es
clc
jl
xchg
sub
ljmp
mov
inc
repnz
out
rcll
cmpsb
pop
ss
insl
out
fldl2e
add
cltd
mov
sub
lahf
push
hlt
xor
xchg
pop
mov
mov
sarb
sub
dec
fdivp
pop
xchg
dec
dec
pop
rorb
jnp
inc
loopne
pusha
push
mov
and
jg
int3
xor
jp
xchg
jbe
cwtl
shl
mov
pop
dec
push
fistpl
bound
or
cmpsl
ds
and
psrld
arpl
cs
in
push
daa
xchg
ret
jne
pushl
push
data16
daa
cmpsl
cltd
aas
lcall
mov
fists
jnp
sbb
fdivs
je
movsb
outsl
aad
incl
int3
sti
cmp
int3
aaa
loopne
xchg
in
jge
leave
and
xchg
call
test
test
popa
mov
insb
clc
mov
js
imul
mov
mov
cli
popf
inc
sarl
dec
jns
rorb
cli
push
sbb
push
out
inc
into
popf
rclb
mov
nop
sbb
mov
sbb
das
test
dec
sbb
stos
add
roll
imul
pop
and
lret
lds
mov
inc
nop
adcb
shr
mov
sar
lcall
push
outsb
frstor
mov
push
rorl
pop
and
aad
pusha
jae
mov
test
cld
push
pop
aam
pop
mov
mul
fwait
pop
dec
inc
cmp
sub
inc
shl
pop
sbb
outsl
or
mov
loope
out
testl
jb
je
aad
push
pop
int
ja
ds
div
dec
ja
aam
adc
jb
in
js
mov
pop
shlb
fcmovnbe
decb
mov
cmp
lods
cltd
inc
ret
movsl
adc
fcoml
or
aad
mov
mov
shl
incl
sbb
ret
push
and
mov
sahf
xor
movsl
out
mov
mov
add
ljmp
sub
aam
mov
mov
jp
dec
mov
add
fstpt
jecxz
push
cmp
outsl
xor
pusha
fs
add
fnstcw
inc
arpl
addl
fcomip
sarl
fs
sub
mov
mov
mov
je
push
push
rclb
inc
nop
push
jmp
into
xchg
aaa
std
jg
or
fstl
and
sbb
jo
popf
stc
push
or
cld
mov
sbbl
int
xchg
dec
test
xor
jmp
call
jge
loope
jg
scas
dec
je
orb
push
jg
sub
push
adc
js
inc
mov
sub
adc
xchg
lock
incl
add
and
sahf
in
and
ja
shll
aam
repnz
cmpsb
mov
ljmp
inc
hlt
scas
ja
in
dec
adc
test
push
divb
jg
and
xchg
stos
pop
icebp
jmp
sbb
or
cmpsl
mov
filds
dec
dec
insl
xchg
sarb
mov
cld
add
xchg
rolb
jge
jne
xchg
sbb
cli
push
push
or
pop
xchg
test
js
push
jge
push
mov
pop
mov
cmp
xor
loop
stos
pop
mov
scas
jnp
stos
cld
cs
cmp
xor
icebp
nop
add
adc
fbstp
mov
mov
inc
loopne
jg
or
jp
jg
cmc
ljmp
ret
mov
sub
jg
lods
pop
lods
ret
fldl
outsb
arpl
fstpl
lcall
xchg
add
je
rol
sub
repz
xchg
cltd
push
xor
je
cmpl
or
clc
filds
enter
mov
xchg
push
sbb
test
repnz
loopne
xor
pop
and
in
inc
mov
les
mov
out
lods
fdivp
ljmp
shll
scas
aas
jnp
repnz
in
ret
jge
ss
clc
jg
xchg
dec
and
jg
push
mov
xor
pushf
inc
cmp
and
pop
xchg
mov
pop
iret
lcall
cld
add
shll
xor
xchg
lods
rorb
sbb
xchg
imul
pop
into
cmpl
fcomip
mov
ja
push
and
mov
loopne
call
mov
pop
ljmp
idivl
pop
cwtl
mov
das
add
mov
jg
movsb
fisttps
pop
cmp
dec
xchg
enter
rcrb
add
shl
aaa
add
xchg
jo
jae
pushf
pop
pop
negl
push
cwtl
pop
pop
push
xchg
das
jg
insl
sarl
dec
cmp
das
and
je
aaa
inc
es
pop
sbb
repz
dec
xchg
mov
xchg
inc
test
sub
icebp
xchg
es
xchg
inc
mov
ret
xchg
movsb
mov
sbb
dec
stc
jb
ret
pop
cld
daa
mov
mov
pop
movsb
sub
fbstp
dec
xchg
ret
add
lock
sub
mov
pop
hlt
mov
mov
in
insl
pop
ret
mov
xor
clc
enter
jns
nop
scas
or
fidivl
mov
xchg
repnz
push
rcll
cld
or
sahf
or
mov
out
mov
sub
cmpsb
or
add
je
xlat
mov
lret
dec
arpl
sub
fs
rclb
lcall
mov
outsb
push
lods
out
sub
mov
aad
push
sbb
pop
pop
adc
fimuls
pop
cmovnp
cmp
add
or
cld
sub
mov
dec
sbb
cmp
sti
push
lret
mov
or
loop
push
add
or
mov
leave
mov
add
sub
mov
mov
outsl
and
sub
lock
mov
popw
mov
imul
hlt
mov
pop
mov
inc
add
add
pushf
sbb
mov
out
pop
incl
jecxz
arpl
sbb
cmp
cmp
es
push
test
push
jne
push
xchg
mov
loop
jbe
addr16
call
imul
xchg
fstps
push
outsb
adc
jmp
push
or
lahf
dec
xchg
xlat
sub
add
jle
sti
push
push
pop
outsb
lods
pop
lods
mov
push
cwtl
add
mov
adc
xor
je
xchg
sub
out
aam
lock
jg
xchg
pusha
divl
push
outsb
or
addr16
inc
loope
or
js
or
adc
shl
bnd
ret
lret
cli
in
sbb
jl
test
fdivrp
xchg
dec
js
ja
arpl
imul
pop
add
sub
lcall
inc
xor
scas
lock
and
xchg
dec
push
daa
jnp
jp
sbb
dec
lods
mov
movsb
xchg
add
mov
nop
movsl
decl
inc
or
pop
mov
je
fnstsw
and
dec
push
and
or
pushl
mov
stos
pop
cmp
cmp
incl
and
mov
mov
aas
push
hlt
insl
call
cmp
push
xor
sar
jge
xor
pusha
add
std
and
sbb
pushl
fwait
inc
ljmp
and
into
adc
ficoms
outsb
ljmp
inc
clc
repz
add
push
mov
mov
lcall
inc
push
mov
lds
pop
inc
xchg
dec
lock
je
push
add
es
rcrb
mov
movsb
mov
mov
ret
sub
enter
lods
lret
sub
ret
jecxz
push
mov
or
push
fs
dec
into
dec
je
cmp
fmuls
fcomip
ret
dec
cltd
mov
add
jecxz
adc
test
mov
lahf
mov
stos
mov
out
and
add
push
pop
xor
cld
mov
xor
xor
data16
decl
stos
mov
mov
fidivrs
cld
mov
push
xchg
mov
dec
mov
call
and
stos
dec
sti
shll
test
pop
mov
scas
sahf
jmp
xor
mov
sahf
ss
pop
xchg
jmp
mov
imull
dec
sub
repnz
into
cmc
pop
clc
add
into
xchg
or
outsl
add
lods
sub
decl
roll
pop
pop
imul
ret
aad
pop
jmp
std
jmp
cmp
pop
pop
xchg
adcb
jle
fildll
adc
dec
aaa
push
cmp
outsl
scas
test
inc
or
bound
nop
out
clc
addb
incl
es
add
sarl
scas
ja
out
mov
push
dec
fucomp
mov
sbb
xchg
mov
fwait
cli
test
jg
mov
popf
xor
in
dec
adc
pusha
mov
inc
jg
mov
cli
jo
or
jnp
jnp
test
int
icebp
cltd
stc
das
lea
movsl
mov
push
inc
aad
add
adc
jb
xchg
mov
shll
sub
int3
push
pop
sub
clc
stos
push
adc
js
cmp
aas
imul
or
inc
dec
push
mov
inc
adc
xchg
xor
push
and
mov
fs
insb
fisttpll
push
cmp
mov
ss
faddp
cmpsb
xchg
ficomps
sbb
hlt
sbbb
ljmp
dec
or
les
cmp
ret
imul
ja
pusha
call
dec
mov
hlt
mov
mull
pop
fsubl
cs
ret
sarl
sub
pop
pop
xor
mulb
mov
add
pushl
sbb
lcall
cs
pop
sbb
aam
and
pop
daa
xchg
push
lahf
ja
sub
sbb
adc
cmc
scas
mov
push
in
cli
ljmp
mov
mov
xor
ss
inc
fisubrl
pop
test
in
pop
fmuls
fmul
mov
pop
mov
pop
xchg
xor
loopne
sub
imul
or
pushl
hlt
mov
bound
sbb
dec
fisttpll
subl
jmp
sbb
inc
mov
xor
inc
pop
test
ret
aad
adc
pop
mov
repz
dec
cmpsl
add
pusha
adc
jg
dec
dec
mov
dec
data16
addr16
cmpsl
xchg
loope
pop
or
lcall
das
clc
cmpl
hlt
push
xor
fsubr
cmp
cmp
dec
sub
dec
lcall
sub
or
sahf
xor
pop
lock
incl
adc
out
ljmp
in
data16
dec
push
adc
jg
pusha
std
adc
adc
jp
loop
das
cmp
jmp
lds
lock
push
je
outsl
push
ret
pusha
jge
enter
push
mov
sbb
jge
push
fwait
ret
adc
lds
xchg
cmp
mov
ret
inc
out
adc
xor
cmpb
cmp
leave
bound
stos
jmp
jecxz
sub
mov
fisubrl
call
lea
stc
loop
inc
sub
xchg
add
divl
inc
sbb
hlt
incl
and
mov
jnp
fisttps
or
inc
adc
jns
xchg
add
jg
jg
mov
sbb
cmp
push
cli
int3
xchg
in
dec
lcall
lods
jb
cmp
nop
sbb
negl
xor
push
xor
outsb
inc
pop
outsl
mov
stc
sbb
push
pushl
imul
movsb
inc
pop
xor
jmp
mov
dec
lods
or
cli
decb
sub
movsl
mov
jg
orb
or
adc
hlt
mov
add
push
mov
sub
jl
pop
pop
js
rcll
mov
dec
dec
mov
jbe
push
inc
loope
pop
hlt
adc
pop
jmp
clc
or
push
push
sbb
jmp
cmp
sbb
cmp
mov
cwtl
aad
push
inc
cs
rcrb
jo
stos
mov
outsb
xor
push
and
mov
cmp
sahf
fiadds
pop
pushl
and
popf
add
pop
icebp
add
mov
data16
incl
cld
mulb
xchg
mov
push
cmp
add
cld
aam
sbb
inc
add
int
sbb
adc
popf
dec
jno
lea
call
push
xchg
mov
jg
cmc
nop
mov
xlat
nop
dec
mov
mov
popf
jmp
fs
push
stos
inc
outsb
mov
fisubl
fdivrs
jp
lcall
lods
aam
sbb
push
mov
test
subb
mov
ja
inc
ficoml
nop
sti
push
cmp
ds
or
jbe
xor
outsb
jmp
mov
shll
imul
mov
js
repnz
add
push
fsts
sbb
and
lret
or
add
mov
mov
add
sub
aad
xchg
nop
dec
dec
jns
sbb
mul
test
inc
mov
out
adc
fwait
sub
insl
enter
je
push
lret
cltd
addl
jae
push
pop
mov
cwtl
ljmp
adc
scas
nop
hlt
inc
imul
sbb
insl
mov
inc
ljmp
jmp
push
lcall
mov
mov
cmc
and
pop
jnp
sub
ja
push
dec
clc
pop
add
push
je
js
push
icebp
or
in
mov
out
jns
js
pushf
les
ret
sub
dec
mov
leave
pop
push
fcmovbe
and
jl
fld
inc
cld
or
ret
nop
jp
iret
repz
scas
jg
xor
inc
subl
lock
add
sbb
cmp
shrl
fildll
loop
hlt
jg
jle
and
ret
push
dec
out
xor
leave
js
frstor
cmp
mov
icebp
lea
sub
inc
ljmp
lea
inc
std
test
jecxz
inc
imul
mov
pop
movsb
sbb
subb
adc
data16
fbstp
jmp
mov
cltd
and
mov
pushf
mov
xor
repz
lds
jo
push
aaa
loopne
call
inc
sbb
push
and
jbe
outsb
ret
xchg
lock
push
outsl
iret
mov
mov
sub
pop
addr16
add
cltd
sbb
sahf
imul
pushl
ret
fimull
in
cmp
sub
hlt
mov
je
push
mov
pop
dec
dec
js
cmp
andb
in
insb
cli
pop
fwait
mov
jl
outsb
xchg
ffree
pop
sub
or
test
sub
in
aam
mov
and
cmpsb
lret
xchg
pop
rcrb
sub
loop
insb
jo
jmp
dec
add
adc
or
cmp
add
dec
push
enter
in
cmp
dec
add
or
cmc
ljmp
pop
add
jnp
mov
sub
mov
mov
in
pop
hlt
push
movsb
pushl
outsl
mov
mulb
lret
test
jmp
or
cmp
mov
lea
inc
outsl
es
rorl
cld
outsl
sbb
mov
or
or
cli
jnp
incb
push
push
push
xchg
imulb
mov
mov
test
jne
movsl
movb
xchg
mov
push
pop
movsb
xchg
decb
cmpsb
cmpsl
cld
lcall
test
arpl
pop
lcall
das
cmp
std
xchg
dec
sbb
gs
jmp
call
cmp
xchg
cmp
test
inc
xor
push
cltd
clc
or
mov
in
sub
ljmp
jg
je
and
bound
into
scas
cltd
arpl
pop
pop
ret
shl
cmp
ljmp
int
add
ret
aad
test
jns
xchg
rcrl
movsl
aad
fists
loop
cmp
sbb
aam
shrl
shlb
cmp
test
fcom
sub
daa
clc
mov
cmpsl
mov
push
mov
fwait
loope
jmp
push
fcomip
adc
repz
push
flds
adc
or
sub
jmp
cmp
mov
xchg
cmpsb
add
adc
shll
sbb
add
rcll
ljmp
movl
adc
mov
cmpsb
xor
jo
and
jle
into
cmp
outsb
cli
mov
mov
xchg
push
pop
and
inc
decl
xor
mov
and
data16
jbe
jp
js
mov
jge
das
shrb
dec
push
sbb
sti
inc
mov
aaa
or
fs
jbe
adc
fildl
outsl
cltd
inc
rcll
fidivs
scas
jp
lock
dec
cmp
pop
loop
sbb
mov
je
cli
jne
rorb
adc
out
fsubs
jbe
xchg
lock
incl
shl
mov
mov
xchg
lock
mov
fcomi
sbb
dec
in
cmpsb
jmp
mov
out
add
jmp
cmp
mov
cwtl
dec
je
cmp
jns
js
cld
call
lret
sub
xchg
pop
aas
push
sahf
jo
lret
lret
xchg
pop
nop
xor
add
inc
sti
pop
cmpsb
jmp
pop
mov
rcrb
push
pop
xor
xor
or
cwtl
lock
cli
and
jnp
in
cmp
pop
or
xchg
ret
jl
orl
out
xchg
lret
icebp
adc
inc
cwtl
dec
push
cmp
push
call
lock
scas
add
jg
out
mov
movsb
sub
push
scas
rcr
jae
lods
jo
push
adc
jmp
decl
fidivl
add
stos
in
ficoms
in
adc
sub
sbb
xchg
jecxz
clc
mov
pop
nop
les
push
inc
mov
sarw
aad
movl
aas
call
fstpt
adc
lret
mov
dec
cmp
enter
cmc
cmc
mov
lock
mov
es
cmp
adc
test
mov
add
pop
pop
push
mov
push
movsb
movsb
bound
and
mov
fwait
and
cmp
fsubs
and
lea
cmp
pop
pusha
inc
add
pop
cmpsl
loop
clc
mov
jnp
aad
push
push
xlat
mov
mov
push
in
pop
push
rcrl
mov
push
xchg
in
pushl
jmp
insb
jbe
mov
xchg
pop
outsb
push
jno
stos
mov
in
dec
and
clc
cld
pop
loopne
pop
les
ljmp
mov
xor
ret
stc
leavew
test
dec
add
je
jb
xchg
sub
add
ljmp
and
movsb
xchg
adc
lcall
sbb
lcall
xchg
ja
aam
pushf
fidivrl
or
mov
inc
push
popf
inc
pop
mov
dec
mov
sub
inc
cli
cld
loop
cmpsb
cmp
push
pop
mov
mov
sbb
dec
repnz
shrl
mov
in
dec
sub
sbb
jb
loope
sbb
sub
cmpsb
in
cli
enter
fistps
std
fildll
sbb
arpl
insb
mov
mov
sbb
inc
cltd
jnp
pop
or
jb
push
cld
adc
xchg
inc
fmuls
movsb
mov
call
mov
movsb
cmp
pusha
add
enter
fistps
shlb
bound
lret
pushl
jp
stc
xor
out
aas
in
notb
ljmp
pusha
push
icebp
cwtl
mov
scas
out
dec
scas
cmp
push
cmc
push
cld
mov
stos
sahf
movsb
mov
out
add
jg
xchg
js
cmp
es
push
jbe
jle
add
cld
decl
pop
jns
loope
cmp
and
inc
test
cmp
std
cmpl
fbld
jno
decl
mov
lock
bound
mov
ljmp
sub
pop
xchg
rorb
data16
xlat
add
mov
mov
sbb
ret
ljmp
xchg
into
loopne
es
xchg
fdivr
adc
repz
icebp
push
xorl
mov
mov
dec
pop
sbb
jl
jg
sarl
xchg
sub
daa
push
mov
push
cmpsb
mov
pop
into
out
sub
mov
mov
push
inc
mov
loop
add
test
jb
jmp
inc
pop
mov
int3
pop
inc
cmp
push
and
test
add
jle
mov
lret
sahf
outsl
inc
outsl
jecxz
popa
dec
jns
dec
loop
sbb
push
dec
mov
vxorps
ja
fnstsw
lock
icebp
and
nop
xor
mov
in
fdivr
jno
inc
inc
inc
loop
mov
push
decl
lcall
mov
jo
cmpsl
bnd
xorl
inc
mov
mov
mov
sbb
xchg
cs
cli
outsl
xchg
icebp
mov
pop
ss
push
fs
decl
scas
repnz
pop
fs
sbbb
outsb
pop
sub
mov
jp
cmpb
mov
add
iret
repz
ljmp
test
pop
loopne
inc
pop
cltd
xor
and
mov
lret
les
nop
pushf
and
gs
clc
aas
mov
lock
xchg
jecxz
xchg
stos
mov
imul
stos
out
ret
inc
push
lret
decb
jae
sub
cli
pop
mov
adc
pop
popa
push
mov
adc
sbbb
mov
inc
sbb
xchg
push
cmpsl
cmp
or
add
dec
add
test
cmc
cmp
jg
shll
adc
scas
clc
insl
cltd
xor
inc
jg
add
sbb
cmpsb
lods
adc
cli
push
hlt
xor
decl
ss
das
shlb
jb
push
sti
dec
aas
cltd
sbb
dec
add
jle
aad
shrl
xor
test
inc
dec
add
mov
mov
cwtl
fsubrl
fdivp
xor
clc
loope
insl
dec
clc
mov
nop
ret
add
xor
xor
mov
add
add
ds
stos
repnz
decw
aas
jb
fimuls
push
ror
es
cld
inc
cld
decl
lahf
outsb
scas
inc
lock
inc
mov
fcos
scas
jp
in
or
out
rclb
outsb
adc
jle
lods
push
dec
outsb
lcall
sbb
adc
ljmp
sbb
dec
push
scas
sub
out
sti
ds
fbstp
sti
imul
or
inc
arpl
dec
mov
or
sub
mov
sub
and
out
mov
xchg
pushl
and
inc
inc
add
in
or
inc
pop
call
js
aad
xorb
xchg
mov
add
movsb
iret
lock
xor
aaa
mov
mov
sbb
jne
mov
pop
into
jp
outsl
cs
cltd
aaa
mov
add
sub
out
jl
mov
jl
fistpl
push
pop
jbe
mov
lods
mov
rcr
cmp
je
call
push
inc
adc
or
movsl
xchg
or
popf
les
cmpsb
xchg
mov
pop
or
js
jge
mov
pop
and
add
push
std
jae
xchg
lea
cwtl
xor
enter
pop
cwtl
cmp
inc
cmp
mov
dec
inc
pop
outsl
pusha
mov
sub
mov
ret
pop
xor
add
mov
ret
sub
sbb
in
sub
cli
lcall
pop
movsb
cmp
stos
cmp
jmp
ljmp
jge
popa
cwtl
jp
out
adc
addr16
mov
add
dec
out
mov
pusha
adc
int3
pop
push
jae
ss
int3
inc
xor
adc
aas
pop
cmp
fdivrp
mov
sahf
jne
sbb
push
sahf
imul
cmp
mov
stos
cmc
lcall
cmc
shrl
sub
pop
pop
cmp
imul
mov
mov
bound
shll
cmp
xchg
inc
lea
arpl
enter
les
fcmove
lret
add
pop
jbe
add
cmc
mov
test
mov
pushl
jp
pop
popa
or
or
add
ljmp
int
jnp
mov
xor
push
rclb
adc
pop
idivb
jg
pop
hlt
add
les
test
nop
rcrl
decl
jecxz
mov
ds
data16
lods
ja
mov
fs
xor
mov
aam
movsb
xor
call
xchg
outsb
addl
lcall
popf
pop
dec
ljmp
adc
push
mov
imul
ljmp
lret
dec
sbb
jns
lahf
sub
inc
je
dec
popa
dec
mov
cmpsb
pop
sub
bound
xor
cmp
roll
rorb
popf
loop
add
mov
aaa
stc
xchg
daa
clc
mov
lods
fs
mov
loope
sub
das
lret
or
jmp
xor
add
add
ret
lods
ss
or
dec
std
scas
ss
outsl
aas
lea
xchg
outsb
jle
xchg
jecxz
and
out
pop
jo
mov
ss
pop
fildl
es
push
scas
std
inc
cld
pushl
mov
mov
xor
pop
sub
mov
pushl
or
cmp
std
cmp
bound
daa
sub
addl
push
pop
xor
pop
xor
fildl
call
push
imul
loopne
xlat
movsb
jl
in
pop
jecxz
fsts
xchg
jge
mov
cmpsb
mov
dec
arpl
ljmp
roll
xchg
push
scas
insl
testb
clc
lcall
or
dec
or
cwtl
dec
dec
adcl
add
test
xlat
jmp
orl
jge
mov
mov
cmp
dec
add
fsubp
jp
mov
fisttpll
push
icebp
cmp
decl
pop
mov
mov
mov
cmpsb
add
fdivrs
inc
nop
cmpsb
mov
jmp
movsl
push
aad
jmp
hlt
ret
out
dec
lcall
push
movsb
jmp
pop
pop
push
cld
gs
xchg
add
inc
mov
inc
in
pop
push
repnz
sub
xchg
and
lods
pushf
ret
cmp
pop
push
test
pop
mov
mov
adc
popf
ljmp
jb
and
jmp
decb
bound
and
lcall
in
repnz
push
ja
push
xchg
lods
dec
dec
rclb
sbb
pop
push
push
push
hlt
push
ljmp
and
das
pusha
cmp
push
add
pop
pop
cmc
mov
mov
call
pop
cwtl
mov
xchg
lcall
insl
sbb
adc
mov
sti
dec
cmpsl
aad
into
and
ja
or
pop
push
iret
xor
xchg
decl
jg
ja
inc
sub
lret
jbe
test
stc
fxch
incl
push
pop
mov
xor
movsb
fnstenv
pushf
test
bound
pop
iret
and
inc
add
rcll
dec
jl
filds
out
dec
ljmp
leave
ljmp
jecxz
jo
pushl
mov
jmp
test
mov
fcomip
cli
jb
aaa
inc
jg
icebp
fistps
mov
mov
jno
fisttpll
ja
es
mov
pop
ret
lods
sbb
cltd
out
dec
add
lret
pop
out
negb
xor
lcall
out
loopne
fldcw
mov
jae
fs
imul
sub
icebp
xor
fwait
xor
sbb
call
fists
icebp
call
dec
mov
pop
sahf
scas
jle
jl
mov
pop
pop
or
pop
jg
into
mov
lea
test
inc
mov
sar
push
decl
cs
mov
bound
mov
rorl
push
cli
cmp
jle
lock
add
test
xor
sub
in
adcb
sbb
jp
adc
aas
cmp
push
lods
in
loop
or
adcb
push
cmp
add
test
sbb
lods
loope
flds
int
jg
into
insb
js
push
or
movl
lcall
out
movsl
int
shll
mov
ret
add
pop
cmp
push
rclb
mov
rclb
fisubs
sub
and
dec
dec
icebp
pop
push
inc
shr
dec
mov
std
add
fmul
cmp
cmp
cmpsb
leave
add
repnz
imul
insb
jno
dec
rorb
pushf
push
bound
inc
push
aaa
push
xchg
cli
sub
mov
and
mov
pop
hlt
mov
mov
scas
mov
or
sub
xchg
mov
xlat
aad
shll
mov
sub
in
jl
xor
repnz
enter
aaa
or
cli
inc
enter
das
push
mov
fmull
jg
call
ret
cmp
sub
mov
jnp
rol
loopne
inc
mov
sub
push
push
push
push
push
pop
jle
jp
mov
lcall
iret
sbbb
subl
mov
inc
add
mov
loopw
add
or
call
clc
mov
aaa
shl
adc
and
adc
push
adc
jg
mov
subb
xor
filds
aaa
ficoml
jecxz
in
scas
sub
cmp
or
pushf
addr16
pop
out
mov
and
pushl
call
dec
dec
aam
mov
cmp
push
pushf
gs
sti
cmp
or
pop
insb
cmp
popa
add
xor
or
cld
lcall
cmpsb
data16
sarb
mov
shrb
inc
and
in
rcl
cmp
movsb
loope
pushl
or
incb
lret
mov
adc
sbb
sub
sbb
add
adc
mov
aad
xchg
sbb
lea
mov
aad
rorl
ljmp
ljmp
ret
inc
xchg
icebp
jnp
xchg
push
adc
fbld
out
sub
testl
mov
inc
xor
cs
popa
push
sahf
xchg
aas
adc
or
aas
inc
adc
sbb
sarl
pop
xor
or
push
cmp
fidivrs
pop
cmp
int3
lcall
lret
pop
fs
dec
inc
imul
jbe
icebp
push
mov
aas
add
jl
in
lods
movsb
add
adc
add
divb
and
xchg
or
cmc
lods
sub
sub
movb
mov
aad
pop
add
jnp
mov
popa
sbb
xor
ficoml
push
or
sub
clc
pop
add
call
jl
add
fnstsw
jl
in
xchg
or
mov
push
out
cli
lods
nop
mov
pop
jb
add
jb
fisubrs
mov
sub
and
out
jb,pn
mov
push
xorl
add
pusha
or
push
and
test
sbb
cltd
dec
push
jmp
dec
adc
push
movups
mov
fisubs
jg
cmp
push
adc
mov
hlt
loop
sub
mov
inc
add
and
dec
or
sbb
fidivrl
testb
push
cltd
add
dec
je
inc
mov
push
in
outsl
add
mov
rcll
jne
xchg
xor
std
iret
test
repnz
mov
and
or
out
enter
pop
mov
cmp
dec
arpl
dec
inc
add
lcall
sbb
mov
out
out
jb
aad
ljmp
sbb
repnz
bound
ss
add
add
adc
push
add
loopne
loopne
insl
movsl
movsl
add
rcl
or
pop
enter
ret
fmuls
stos
sub
es
fmul
adc
test
mov
pop
shl
in
mov
inc
clc
inc
dec
and
mov
ss
cli
popf
push
mov
xorl
lods
arpl
outsl
push
cmc
xchg
cmp
ja
ja
data16
mov
loop
sbb
enter
sub
pop
ss
stos
decl
addr16
inc
pop
lods
adc
cmp
xchg
movsb
mov
lcall
dec
movsb
nop
inc
lea
add
shll
push
adc
sub
xorb
iret
jae
cwtl
cmpsb
inc
sub
orl
pop
data16
inc
pop
sbb
cld
scas
jmp
sbb
mov
pop
stos
push
outsl
shlb
push
insl
ljmp
ret
xchg
jno
inc
orl
dec
fstpt
lds
out
ss
subb
popf
aaa
pop
sti
in
test
inc
test
mov
cs
nop
add
sub
mov
in
jp
loope
sub
dec
lret
xchg
gs
xor
adc
pop
and
push
adc
pusha
loope
fadd
iret
jb
inc
jae
push
xor
sbb
or
cmpsb
jne
mov
mov
sub
sti
je
sbb
push
xor
dec
test
stos
pop
and
mov
or
push
and
decl
mov
pop
popf
add
jno
gs
cld
add
inc
xor
cmp
inc
daa
jo
fcmovb
call
outsb
jge
push
lds
inc
adc
cmp
cli
push
inc
notb
mov
fcomi
and
sbb
jg
test
sbb
cmpsb
mov
shll
sti
rcl
sub
mov
jno
mov
sub
ljmp
cli
mov
sub
push
adc
xchg
imul
push
scas
mov
stos
xchg
adc
pop
xor
mov
test
push
ss
inc
popf
andb
popf
jle
jg
sub
cmp
lock
repnz
pop
xchg
mov
sti
xor
dec
pop
pushf
jp
icebp
inc
ret
stos
enter
inc
loopne
pushf
mov
decl
sar
or
cmp
rcr
push
das
sub
cld
icebp
cld
fsts
xor
inc
and
xchg
iret
std
xor
push
mov
add
jle
rcll
movsb
ja
inc
xor
imul
cs
mov
mov
es
sub
sarl
loop
out
mov
hlt
das
sbb
hlt
xchg
inc
inc
lods
jg
sbb
dec
pop
loope
fildl
push
and
dec
xor
mov
push
neg
and
pop
cld
xchg
or
mov
imul
scas
hlt
lds
mov
sbb
ljmp
push
rclb
lock
xor
lcall
xor
js
add
add
and
or
jmp
cmp
push
jp
cltd
and
ljmp
mov
jmp
add
cmp
cmp
adc
jge
scas
leave
mov
leave
arpl
loopne
jmp
aam
cmpb
sbb
rorb
push
adc
in
repz
inc
cs
hlt
mov
add
jp
xchg
push
shl
cmpsl
pop
and
filds
cmp
mov
cmp
ss
popf
cmpsl
mov
or
push
or
jle
or
pushl
fwait
mov
mov
call
xchg
dec
loopne
repz
repnz
mov
sub
pop
xor
adc
mov
stc
adc
adc
add
leave
push
jo
sub
imul
jbe
nop
and
in
mov
xchg
insb
hlt
sbb
and
sub
test
mov
lret
shlb
dec
aam
xchg
jge
adcl
incl
pop
iret
fcmovu
mov
sbb
cmp
and
push
xchg
insb
and
fsubp
test
in
sbb
dec
loope
sub
mov
lahf
es
jmp
stos
sbb
push
mov
lock
out
mov
ret
push
idivl
xchg
movsl
dec
inc
push
cld
ljmp
mov
pop
aaa
mov
das
jo
mov
xlat
das
cwtl
mov
push
in
test
ss
in
jg
inc
cltd
popf
mov
cmp
xchg
pushf
jbe
rcrb
pop
ret
inc
ret
call
push
fisubl
push
mov
jp
mov
incl
pop
cmp
jle
dec
mov
ss
inc
adc
ror
mov
xorl
insl
fstpt
imul
jp
mov
push
dec
adc
pop
xchg
andb
daa
adcl
cltd
std
cmpsl
or
shlb
pop
insb
test
lret
lcall
mov
loop
inc
mov
cmc
dec
das
push
push
sbb
add
arpl
mov
add
sbb
and
pop
hlt
mov
pop
cmp
sbb
xchg
fs
add
dec
sbb
pop
xchg
xchg
jmp
aas
adc
cmpb
mov
sub
fwait
inc
and
leave
lret
jo
xchg
outsl
fistps
mov
int
inc
adc
push
fwait
leave
test
push
push
xchg
jo
sub
pop
push
adc
cwtl
loop
fisubrl
sub
pop
clc
pusha
cmp
mov
js
sbb
pop
out
nop
cli
mov
jle
mov
inc
bound
shrb
sub
in
fisubrs
repnz
xchg
or
push
dec
jmp
sub
std
push
std
mov
stos
pop
jp
mov
out
lcall
rolb
inc
js
dec
mov
pop
adc
ljmp
sti
jmp
test
sbb
mov
dec
je
shrl
fists
fidivs
adc
cmp
cmp
andl
cmp
out
pushf
ret
sti
cmp
pop
mov
jo
pop
ja
inc
jle
fs
push
add
out
xor
cmpsb
or
ret
cld
clc
sti
pop
mov
mov
ljmp
decb
mov
dec
fldpi
js
out
outsb
inc
addl
and
mov
xor
std
clc
push
lahf
jno
ja
sub
dec
cmp
fwait
mov
loopne
add
cmpsb
mov
push
jl
mov
or
pop
mov
sbb
jl
lods
aad
outsl
scas
test
sbb
test
clc
add
cmp
ds
push
roll
pop
fldl
lahf
and
push
mov
scas
fdiv
fidivs
sub
call
cld
push
cmp
cld
dec
and
pop
cmc
and
cwtl
xlat
mov
aad
je,pt
aam
lcall
mov
mov
call
clc
daa
cmp
aam
mov
cmp
push
adc
call
movnti
fildll
xor
aaa
pushf
jb
notb
outsl
adcb
mov
or
sub
cmpl
pop
iret
sub
mov
mov
int3
dec
jmp
mov
or
mov
xorl
mov
or
ja
gs
pop
fs
pop
fs
xchg
out
shll
ret
mov
sbb
jl
lods
and
cltd
ljmp
shlb
jo
stos
loop
std
cmc
fwait
dec
lods
mov
loopne
or
mov
ljmp
jg
push
pop
movaps
jmp
mov
and
call
mov
int
cs
mov
push
or
arpl
sub
rcr
and
xchg
inc
testb
rcr
sbb
dec
rep
xchg
pop
mov
mov
decl
mov
jne
dec
js
int3
gs
dec
call
mov
nop
add
mov
cmc
mov
fnstsw
adc
lret
in
jge
stos
and
inc
push
addr16
push
pop
clc
pxor
or
ret
pop
cmp
jo
lcall
sti
xlat
stos
push
in
fistpll
push
mov
xor
jmp
dec
mov
cmp
inc
les
mov
mov
popa
movsl
mov
cmp
sahf
push
ljmp
mov
inc
add
push
fisubrs
cmp
mov
std
and
les
lret
fimull
cmpsb
test
push
fwait
stc
hlt
or
gs
repnz
pop
data16
outsb
cmp
ljmp
fdiv
push
push
push
std
call
sti
lcall
lock
ljmp
ja
out
js
mov
bound
sbb
xor
mov
xor
shl
stos
mov
test
mov
fadd
fisubl
clc
add
mov
or
or
sub
xchg
stos
aaa
incl
pop
jae
mov
and
add
incb
pop
outsb
cmc
loope
xchg
push
mov
out
jg
mov
cmpsl
idivb
ret
or
sbb
and
sub
dec
sti
pop
mov
cld
nop
fsubrp
ja
test
mov
filds
mov
test
sub
jge
lds
xor
jle
cmp
dec
jmp
fcomip
cltd
inc
movsb
test
inc
jb
cmp
arpl
adc
aaa
pop
ljmp
pop
mov
pop
sub
gs
outsb
push
clc
add
sbb
adc
filds
ror
cmp
jmp
cld
ficomps
xchg
push
pop
adcl
repnz
and
pop
dec
clc
ss
stos
adc
mov
push
xor
mov
aaa
std
mov
mov
popf
pusha
negb
loopne
pushl
fwait
pushf
cwtl
shlb
mov
xchg
push
cmpsb
xchg
pop
rorb
clc
inc
mov
out
lea
shl
loopne
je
fwait
dec
pusha
gs
repnz
decl
in
sahf
fnstenv
jg
mulb
xor
lcall
repnz
mov
pusha
add
jmp
cli
jns
data16
add
test
sub
call
push
imul
in
mov
mov
addr16
daa
icebp
fstpl
add
xchg
dec
or
cmp
fstl
clc
popf
xchg
loopne
incl
rclb
push
adc
stos
or
dec
sbb
in
add
or
sub
sar
test
xchg
lds
mov
or
push
iret
nop
jge
jg
es
testl
xchg
in
xchg
fbld
aad
push
test
cmc
lds
xchg
pop
mov
in
mov
pop
mov
cwtl
out
jnp
cmc
incl
xor
add
add
dec
cmc
mov
lea
pop
pop
and
call
xor
xchg
loope
xchg
mov
xchg
gs
sahf
cmpsb
inc
sbb
pusha
mov
sahf
imul
adc
mov
lcall
xor
sub
fs
xor
lods
pusha
push
into
rclb
fildll
cmp
ret
imul
or
inc
sbb
push
xchg
mov
incl
push
lcall
mov
imul
cli
scas
hlt
mov
mov
xchg
rorb
jg
imull
mov
jg
push
jl
inc
stc
pop
loope
imul
incl
jne
into
xorb
inc
loopne
or
xchg
in
fsubl
test
push
sub
pop
jo
repz
push
push
icebp
push
xor
cwtl
icebp
sbb
adc
lea
daa
cld
mov
sub
enter
xor
inc
jl
jp
test
aad
push
push
mov
pushf
test
mov
fdivrl
nop
js
sub
mov
pop
inc
outsl
xchg
test
mov
pusha
lods
sbb
and
mov
enter
iret
in
push
arpl
movb
sub
enter
xor
inc
sbb
mov
mov
adc
push
cld
scas
loop
das
mov
sbb
lret
jl
cmp
push
jae
push
push
pop
or
es
and
xor
mov
loop
in
aaa
fnsave
rcr
push
mov
test
pop
aas
daa
mov
jne
mov
mov
xchg
or
dec
mov
or
clc
js
add
addr16
sub
xor
mov
or
test
cmc
xchg
repz
ljmp
sbb
stc
dec
inc
cs
fs
rol
cli
popf
xor
add
lcall
fnstenv
and
add
mov
mov
ja
add
in
mov
lods
push
dec
jb
call
sbb
iret
push
test
jecxz
inc
leave
fdivrs
mov
mov
iret
mov
popa
mov
out
loope
lcall
add
add
jns
sti
fs
cs
ljmp
aas
dec
dec
jmp
addl
shrl
movsb
cmp
mov
pop
pop
dec
les
push
and
ja
adc
add
add
aad
jbe
cs
popa
ljmp
aaa
push
mov
jle
shlb
pop
or
sub
jo
sbb
jle
push
or
test
ja
mov
jne
mov
push
int3
inc
addl
push
lret
repnz
arpl
add
and
test
cmp
std
add
test
jle
push
pop
xchg
iret
push
in
jp
mov
sarb
cld
add
lcall
mov
dec
inc
xchg
xorb
pop
stc
lret
test
lcall
cmp
filds
outsb
imul
aam
pop
push
pop
cmp
rol
jg
mov
dec
fisubs
mov
cli
js
imull
aam
pusha
fs
loope
xor
hlt
or
decl
add
aaa
popf
and
or
sub
vunpcklps
call
xchg
fisubs
pop
sbb
mov
cmpsl
push
mov
sub
in
push
loope
pushl
loopne
leave
into
clc
cmpl
lea
inc
pop
mov
mov
inc
push
xor
pop
cmc
call
mov
mov
out
scas
adc
push
jp
mov
mov
clc
decl
dec
add
xchg
rolb
and
in
das
imul
xchg
mov
mov
or
std
sarb
xor
lcall
jle
cmpsb
jb
cltd
out
or
pop
fs
mov
pop
mov
das
rorl
das
data16
mov
push
mov
test
cmp
outsb
insb
std
mov
xor
in
jmp
mov
push
nop
ret
jg
mov
jo
out
cmp
outsb
out
stc
fadds
imul
daa
test
hlt
pop
inc
mov
cmp
push
inc
sub
hlt
pop
stos
xchg
sbb
mov
jl
rclb
es
rorl
insl
jb
lea
push
or
push
lods
push
and
out
lock
inc
xchg
sbb
sbb
xchg
stos
fmull
push
cli
xor
cltd
xlat
sbb
pop
lcall
adc
add
std
push
mov
jle
repnz
sub
incl
call
jmp
test
test
mov
incl
imul
mov
xchg
mov
xlat
jb
in
enter
cmpsb
jno
sub
add
xchg
decb
mov
add
loopne
aad
jle
push
jns
ja
adc
inc
jecxz
mov
test
pop
cmp
jmp
mov
mov
fcomip
pop
sub
push
rclb
add
and
out
mov
dec
cmp
inc
pop
inc
dec
cltd
push
dec
sbb
adc
sarl
mov
mov
mov
ljmp
test
leave
add
test
movl
int
roll
lcall
stos
and
xor
mov
fs
inc
jg
add
cwtl
dec
ss
xchg
nop
xor
outsl
push
int
loopne
or
mov
pshufw
push
mov
nop
xlat
cmpsl
test
dec
inc
fiaddl
outsl
fstp
add
loopne
decl
jb
sbb
mov
cmp
test
mov
mov
jo
rorb
pop
incl
and
inc
mov
fdiv
fsubs
add
pop
cmc
cld
mov
lods
movsb
add
aaa
test
mov
xor
sbb
sbb
inc
sbb
mov
pusha
mov
pop
pop
inc
xchg
mov
or
sbb
jecxz
or
iret
pop
fnstsw
lods
inc
pop
ljmp
fs
push
ret
mov
jno
stc
dec
ret
jb
add
inc
inc
xor
popa
int3
mov
xchg
sub
mov
inc
xor
sbb
cmp
in
inc
lret
inc
sbb
repnz
xor
pop
sub
push
jge
cs
test
std
cmp
popa
ret
xchg
ljmp
mov
in
mov
adc
popa
imul
lock
hlt
mov
jecxz
in
jno
jmp
lds
int
jnp
push
or
sub
enter
pushl
cld
mov
inc
jae
ja
cli
add
jg
loopne
dec
sbb
pusha
lcall
in
xchg
lods
cmp
xlat
pushf
js
stos
movsl
cli
mov
lahf
or
sbb
xor
pop
lock
mov
lret
sub
jne
adc
scas
mov
jo
in
push
inc
jbe
or
sbb
sbb
adc
push
or
stos
mov
call
and
push
sbb
adc
out
and
loope
xor
sbb
call
sti
adc
push
xorl
mov
sahf
ja
cmp
push
lret
in
les
or
imul
inc
sbb
lahf
pop
pop
fs
call
loopne
push
mov
mov
mov
les
lret
clc
mov
add
push
push
inc
sbb
jae
ss
xor
fildll
cld
adc
dec
lret
lods
lret
mov
in
push
out
lcall
aaa
ljmp
sbb
jp
es
dec
decb
inc
nop
loop
add
xchg
ljmp
pop
mov
add
adcb
bound
dec
pushl
incl
popf
repnz
jo
pop
inc
lods
dec
cmp
or
rorl
rorl
std
jne
push
mov
loop
pop
xchg
jnp
xor
sbb
in
cmp
xchg
mov
cmpsl
and
hlt
sub
movsb
xor
xchg
push
dec
in
jbe
inc
std
call
inc
fcom
sub
adc
fwait
jp
mov
sbb
inc
jge
sbb
push
cmp
jns
mov
call
sub
or
jne
add
or
inc
mov
add
dec
push
pop
lret
jecxz
lret
repnz
daa
mov
mov
in
test
push
lock
xor
jl
loop
flds
rcll
ret
xchg
loope
jmp
in
add
fcos
jg
xchg
mov
push
xchg
cwtl
cmpsb
rclb
scas
mov
daa
jecxz
roll
fdivr
jg
mov
push
inc
imul
jp
leave
add
add
xor
mov
push
xchg
jmp
pushl
jg
inc
lahf
test
cmp
dec
cs
mov
fmuls
test
clc
mov
shll
std
xchg
or
pop
lock
pop
mov
mov
decl
or
or
cmc
inc
push
pushf
lret
mov
mov
cmpsl
xor
sbb
pushf
xchg
xchg
add
test
or
push
out
mov
jg
push
iret
bound
bound
push
cs
xor
fnsave
test
cmp
ljmp
aaa
jmp
sti
rcrl
cltd
xor
sti
pop
mov
call
pop
insl
pop
lock
xor
and
jbe
pop
ret
or
out
add
stc
mov
inc
dec
and
out
mov
insb
or
es
inc
xchg
cwtl
xchg
or
push
aad
aad
rcl
movsl
daa
pop
cli
shr
dec
mov
fcos
pop
jge
push
and
lods
ja
or
and
icebp
pushf
dec
mov
incl
into
pop
and
in
dec
inc
call
idivl
mov
jp
les
mov
jnp
push
outsl
pop
dec
xor
fdivs
cmpl
dec
mov
mov
fcoms
repz
fs
hlt
inc
and
push
cvtpi2ps
mov
inc
daa
inc
loopne
aad
enter
push
out
mov
xchg
in
mov
push
movsl
inc
cmc
ljmp
sub
test
xor
subb
cmp
jno,pt
jo
test
mov
inc
movsb
imul
dec
rclb
lcall
lods
inc
or
in
jnp
or
lods
xchg
and
call
bound
adc
or
lods
sbb
mov
or
scas
xlat
dec
lret
loopne
pop
pop
stos
rcl
clc
decl
fcmovnb
jmp
mov
push
pop
int
jb
test
out
sbb
bound
fistpl
pop
push
jl
mov
sbb
add
mov
pop
inc
int
hlt
jns
and
dec
scas
cmp
push
adc
cmc
decl
push
es
xchg
or
sbb
push
jmp
fadds
inc
std
rcll
mov
jg
incb
fcoml
mov
je
dec
call
add
js
and
repz
dec
xchg
add
fstpt
xor
jmp
cmp
icebp
mov
adc
aas
adc
pop
xorb
push
fistpll
std
test
bound
sbb
ds
sub
xchg
xchg
sub
jg
push
sbb
clc
sub
mov
cmp
or
inc
fucomi
in
in
shll
sub
jg
pop
fistpl
test
iret
inc
fldenv
cmpl
pop
mov
sub
das
lods
nop
pop
mov
in
shll
out
lret
pop
outsl
pop
cld
test
movsb
jbe
fisttpl
push
in
adc
push
push
push
xchg
jns
in
fisttps
fwait
mov
lods
inc
mov
mov
lea
mov
mov
gs
fs
cmp
ljmp
pop
test
and
xor
clc
outsb
std
inc
loopne
adcl
out
fcomip
das
sbb
pop
sarb
or
in
sbb
test
jbe
daa
xlat
sbb
xor
adc
jmp
in
push
daa
in
pop
dec
push
jp
js
sbb
mov
cmpsb
ret
jl
lock
xor
test
xor
xchg
incl
jno
jecxz
lahf
insb
sarl
add
mov
pop
sub
sbb
ds
xor
jge
sti
addr16
loopne
inc
xor
pushl
test
mov
icebp
pop
xor
or
test
jmp
clc
dec
pop
data16
inc
mov
inc
pop
mov
adc
lret
cli
lret
sbb
loopne
insl
mov
lret
fdiv
pop
enter
in
lea
cmp
mov
roll
adc
pop
pusha
jl
mov
je
repnz
push
jb
leave
js
mov
sub
cmp
push
push
inc
inc
test
push
push
out
test
jmp
addr16
sub
sub
or
ljmp
cltd
push
adcb
inc
sub
xchg
mov
xor
add
popf
orl
mov
mov
jb
xchg
cltd
cwtl
into
sbb
aaa
shrb
mov
mov
pushf
or
fcomps
rolb
mov
mov
mov
add
mov
out
inc
aam
cwtl
fisubrs
subl
sti
sub
outsl
xchg
or
add
inc
ja
pop
rcl
pop
push
movsb
xchg
add
mov
lods
shll
add
clc
cmpsl
dec
fisubs
xchg
sub
decl
pop
jae
push
push
in
sarb
js
jecxz
xchg
pop
in
push
jecxz
adc
pusha
cmpsb
jbe
ret
fistpl
loope
or
push
js
stc
cmp
adc
add
mov
in
or
dec
pusha
daa
add
pushf
js
incl
add
in
jo
inc
rorb
adc
repnz
xchg
imul
inc
pop
pop
cltd
scas
clc
sbb
repz
push
sbb
or
cmc
xor
stos
subl
inc
ds
ffreep
fwait
and
pop
sbb
mov
inc
js
lods
ret
push
add
in
mov
mov
sub
repz
pop
adc
push
sub
sbb
bnd
push
push
pushf
sbb
ss
lcall
sbb
xchg
mov
shlb
in
decl
sbb
xor
jge,pt
sbbb
dec
rol
jg
sahf
scas
xchg
xlat
push
insb
and
mov
fbld
inc
push
orl
add
fcompl
mov
add
mov
mov
clc
sub
aam
insb
sbb
in
loop
or
mov
mov
pusha
xlat
cmp
cs
call
lcall
xchg
imul
mov
mov
stc
push
mov
jle
lds
loop
push
std
ret
add
push
lahf
pop
lock
dec
dec
hlt
fisttps
test
xor
pusha
dec
test
pushl
add
fstpl
xor
cmp
inc
sti
addb
xchg
decl
cmp
pop
sti
aam
addr16
xchg
dec
pop
inc
mov
push
push
out
and
cwtl
lods
xchg
cmp
adc
or
sti
addr16
mov
xchg
popl
repz
aad
lea
in
sbb
pushf
insb
xchg
mov
sahf
mov
pop
ret
mov
ja
lahf
inc
xor
adc
mov
loope
cwtl
adc
adc
incl
ljmp
pop
pusha
jmp
movsb
mov
cwtl
pop
sub
fists
jge
pop
dec
sub
loop
outsb
mov
bound
pop
jp
lret
sub
jb
fsubrs
jae
test
ja
stos
inc
pop
js
test
mov
xor
test
out
add
push
mov
or
xchg
loopne
add
adc
mov
jns
cltd
faddp
dec
arpl
popa
addr16
insl
daa
pusha
movsl
ljmp
and
jmp
ljmp
addr16
mov
pushf
iret
stos
pop
pop
sti
loopne
insb
iret
inc
outsb
xor
lcall
inc
xchg
fdivr
outsl
add
push
fidivl
popa
pop
je
or
cli
int3
add
pop
stos
jbe
ret
jp
cli
fisttpll
mov
mov
out
insb
or
pop
fimuls
jnp
imul
pop
mov
ljmp
jo
scas
cltd
rcl
sbb
ret
xor
push
movsl
sti
out
jbe
fnstenv
mov
aaa
outsb
and
mov
shl
ret
inc
sub
sbb
lea
cmpsb
cmp
inc
jg
mov
or
gs
fistpl
clc
xchg
or
cmp
lds
decb
sbb
xchg
or
decl
loop
pop
mov
xlat
sub
sub
add
mov
in
cwtl
out
mov
sar
sub
ds
push
jb
mov
rcr
popa
ljmp
mov
or
jle
aad
nop
lcall
xchg
fisubrl
fcompl
imul
loope
mov
ret
and
sbbl
cwtl
mov
pop
ljmp
movsb
sub
decl
xchg
into
jl
dec
inc
mov
cmp
add
incl
xor
cmp
or
xchg
cltd
test
dec
mov
in
push
mov
or
rcrb
or
fldl
clc
inc
inc
dec
sbb
aam
dec
dec
clc
in
and
cli
push
inc
mov
bound
xor
lret
push
push
in
aad
insl
in
pushl
bound
xor
xor
push
xchg
adc
in
dec
popf
pop
mov
rcll
mov
lods
jmp
cmc
push
push
enter
aam
inc
adc
mov
inc
fsts
xchg
scas
stos
icebp
mov
ljmp
mov
pusha
jecxz
and
idivb
gs
aam
test
push
outsl
dec
xchg
dec
aam
xchg
insb
cld
jg
inc
movsl
mov
push
fnsave
enter
mov
or
pop
cli
stos
fisubrl
push
or
js
sbb
fldt
adc
stos
cld
loop
int3
ret
lahf
rol
jl
adc
movb
xchg
icebp
dec
adc
adc
mov
dec
push
push
pushf
stos
or
ss
lcall
push
jo
adc
lods
sub
adc
faddl
mov
das
push
movsl
dec
mov
in
push
cwtl
outsb
push
mov
xchg
mov
adc
cs
ret
arpl
pusha
jp
in
in
sar
das
lcall
xorb
in
ret
push
push
pop
mov
xchg
pusha
sbb
sub
jge
lock
call
mov
imulb
push
orb
sar
sahf
adc
jmp
pusha
jg
jae
mov
aaa
push
cmp
inc
cmpsb
pop
aad
push
dec
sub
xor
mov
mov
dec
mov
cmp
push
fcmovnb
and
mov
inc
dec
pop
mov
push
add
fisubrl
test
inc
mov
xchg
dec
mov
in
testb
jbe
add
call
mov
pop
dec
repz
pop
lcall
inc
cmp
pop
sarb
test
sbb
cld
fidivrs
cmp
ljmp
cmpsl
mov
imul
adc
mov
and
lcall
cmpsb
mov
clc
push
sub
mov
mov
cmp
sub
stos
mov
mov
xor
sbb
out
in
pop
mov
clc
call
imul
fsubs
pop
dec
mov
orb
ror
cli
fwait
or
scas
outsl
dec
test
mov
aaa
imul
xor
andl
cld
insl
and
in
or
mov
xor
xchg
imul
and
add
mov
movsb
icebp
pushl
out
cs
xchg
push
dec
inc
adc
pop
fistpl
adc
stos
decb
xchg
sarl
in
es
xchg
or
and
pushl
sbb
inc
lcall
jnp
cmp
jge
leave
mov
daa
or
call
jo
decl
push
out
repz
inc
inc
mov
inc
lods
sbb
adc
xchg
xchg
inc
imulb
xchg
mov
inc
enter
cmp
test
divl
xchg
mov
lcall
sbb
jnp
icebp
adc
in
xor
lock
sbb
aam
ljmp
stos
jge
mov
jns
pop
cld
xorl
les
dec
decl
enter
cld
xor
std
xor
xorl
and
shl
repz
rcrl
mulb
mov
call
lea
fmull
or
popa
cld
mov
jbe
ljmp
xor
push
inc
rcrl
sbb
dec
ficomps
xor
add
dec
xchg
decl
xchg
pop
cld
stos
xchg
xchg
rcr
in
xor
jp
push
push
add
jbe
pop
or
enter
fidivs
xchg
jp
inc
and
ljmp
ret
sti
adcl
mov
insl
jo
movsl
or
lcall
test
and
lods
loop
ss
fisubl
lcall
jge
ljmp
outsb
addb
int3
pop
std
sub
call
add
xor
push
lcall
jne
cli
pop
insl
or
mov
or
jl
jl
loopne
lock
ljmp
loop
xor
mov
jo
or
mov
and
or
jge
insb
adc
push
arpl
mov
cs
scas
dec
daa
inc
cmpsb
push
int3
fs
cmp
cmp
es
stc
add
inc
lcall
out
xchg
fsts
xor
push
mov
pushl
in
push
sub
call
cwtl
cli
mov
insb
mov
dec
std
pushl
mov
add
js
jge
out
adc
xor
in
cmp
pusha
lds
adc
lods
addb
stos
cmp
fidivrl
dec
test
sub
xlat
xlat
ljmp
ror
je
loope
push
dec
scas
rolb
fsubrs
cld
cmp
push
pushl
pop
scas
push
aas
loop
mov
pop
dec
mov
mov
and
mov
add
lahf
stc
inc
andb
imul
ljmp
or
mov
push
fnstsw
xor
jmp
popf
clc
out
pop
mov
jmp
xchg
pop
push
and
lock
push
pop
xchg
adc
mov
xchg
outsl
cli
dec
stos
jmp
in
fs
ja
inc
movsb
in
push
mov
sahf
ss
or
lahf
in
mov
fldl
lcall
stos
mov
lret
or
cli
push
fildl
push
pop
jecxz,pt
and
ljmp
jb
jb
sbb
xchg
or
mov
cwtl
loopne
out
pushl
cmp
clc
inc
dec
sahf
int3
ret
jmp
adc
push
pop
test
mov
inc
add
cli
call
stos
mov
jno
cld
mov
in
lcall
inc
add
and
lret
mov
popl
xor
outsb
fwait
gs
jnp
int3
out
in
cs
sub
sti
mov
pop
and
inc
sahf
lock
fmull
hlt
or
inc
sbb
xor
pop
cmp
mov
xchg
xchg
cmpsl
je
fnsave
movb
lahf
enter
sub
xor
test
repnz
insl
add
sbb
or
repnz
jno
cli
mov
loopne
in
lock
dec
inc
fnstcw
scas
addl
popf
mov
sbb
inc
ret
stos
icebp
dec
ljmp
mov
out
pop
lock
cmp
jle
and
fisttps
cmc
inc
mov
hlt
add
sbb
ret
out
es
pop
aas
incl
shl
dec
mov
dec
test
imul
mov
repz
add
jne
clc
pusha
mov
flds
inc
or
ljmp
cmc
dec
test
fadd
or
stos
mov
adc
hlt
jp
out
lds
pusha
mov
pop
inc
cmpsb
mov
loopne
inc
push
and
iret
adc
nop
lcall
loop
push
rolb
add
addl
outsl
ss
mov
outsb
sbb
fidivrs
jo
mov
mov
stos
movsb
cmp
lods
stos
mov
and
shrb
sar
negb
lds
cli
fcomip
jge
and
lods
push
into
push
jl
dec
ja
es
jno
fwait
cld
add
call
mov
mov
fsubl
pusha
aad
aas
adc
jg
jno
adc
mov
es
jmp
in
rcr
jg
xor
or
and
mov
arpl
fdivs
sbb
adc
jp
fbstp
mov
jmp
rorl
lcall
lea
int3
imul
cmp
int
xchg
xchg
arpl
flds
sbbl
sahf
sub
cmp
jb
sbb
mov
insb
and
rcll
cmp
loopne
nop
mov
clc
or
loope,pn
inc
jle
hlt
test
lcall
fldcw
sbb
shrl
or
aas
sbb
in
or
and
xorl
hlt
mov
pop
sahf
sbb
fmull
incl
out
jne
push
lret
jbe
jb
out
jns
mov
iret
cmp
ja
fldcw
fisubs
std
jns
adc
xchg
insb
insb
and
pop
jg
pusha
xor
cmp
push
std
filds
jle
das
xlat
lock
mov
daa
mov
push
fmuls
jecxz
lcall
js
mov
lahf
and
push
out
mov
iret
cmp
xor
shl
imul
sbb
xor
fnstsw
int
push
je
mov
inc
nop
sub
jg
inc
insb
inc
sub
js
pop
pop
out
ja
mov
mov
sbb
lcall
lods
aam
rcll
inc
test
jbe
add
ret
jmp
jmp
rorb
xchg
inc
jecxz
aaa
pop
pop
xor
xor
fbld
or
jmp
mov
sub
test
inc
jp
out
push
repz
push
xor
adc
and
bound
push
mov
inc
xchg
sbb
inc
mov
dec
adc
cmp
push
push
es
cmpsb
mov
shr
dec
jo
loop
pop
cld
push
sbb
pusha
lods
out
dec
cmp
sub
xor
cmp
dec
or
cli
cmp
mov
mov
divb
add
aad
sub
lods
ss
or
ljmp
cmp
loopne
fdivrl
sar
nop
bound
dec
push
pop
cmp
push
rcr
push
adc
jl
ljmp
js
jg
int3
fmull
mov
xor
jp
push
pop
sti
je
addr16
rorb
cs
incl
jl
test
adc
cmpsl
cs
jg
push
mov
popa
addl
ja
push
xor
out
mov
mov
push
xchg
jl
lods
sub
dec
pop
xor
xlat
daa
test
pop
sar
pushl
sub
and
test
lret
mov
cli
mov
clc
fnstcw
inc
addr16
clc
ljmp
stc
rcrb
out
mov
jg
adc
dec
shrb
cmp
push
js
icebp
pop
ljmp
lods
xor
add
or
cs
mov
add
insl
mov
es
add
xor
loope
ror
scas
pop
mov
inc
cmc
pushl
clc
dec
mov
cmp
addl
xchg
push
mov
xor
out
cmpsb
dec
imul
push
dec
fistl
jmp
and
mov
jbe
xchg
add
and
mov
dec
fwait
movsl
jb
pop
ror
cltd
ljmp
gs
ret
jg
lock
pop
aad
jns
arpl
imul
dec
imul
lock
sbb
ljmp
pop
scas
stos
xchg
jge
fnstenv
hlt
or
subl
and
ljmp
sub
int
sub
mov
sub
loop
je
test
or
add
decb
insb
data16
je
adcl
pushfw
pop
inc
dec
ljmp
add
data16
movsl
aaa
push
rsm
or
scas
pop
sbb
popa
lods
cmp
dec
mov
or
repz
mov
insb
rorl
and
or
adc
push
sub
push
push
es
mov
cwtl
insb
inc
mov
jge
sub
push
xor
insb
loope
jbe
fsub
lds
hlt
fwait
test
mov
cmpsb
out
mov
ljmp
in
mov
test
dec
cmp
cld
mov
xor
stc
out
sbb
push
sbb
lcall
push
outsb
sti
pop
jo,pt
leave
jne
xchg
aas
inc
test
fcoml
push
bound
adc
adc
cmpsl
cli
push
cmpb
inc
jnp
inc
cs
scas
enter
xchg
pop
dec
sti
pushf
daa
inc
es
xchg
pop
or
mov
and
xchg
fsubrp
decl
push
mov
pop
push
clc
stc
int3
mov
std
cmc
mov
push
dec
mov
push
push
xchg
mov
dec
outsb
mov
ret
dec
push
xchg
mov
sbb
cmp
xchg
pop
and
enter
sub
xchg
mov
or
sbbl
pop
int
insb
xor
cmp
fisttps
xchg
imul
stc
mov
jle
lea
dec
and
inc
pop
js
lcall
mov
incl
adc
sbb
call
inc
imul
iret
call
in
aaa
out
jmp
sbb
clc
js
int3
mov
pop
sahf
sbb
jno
push
sbb
cltd
mov
xor
movsb
lock
decl
lock
xor
mov
incl
in
test
ret
add
mov
aas
ljmp
sub
fwait
mov
inc
pop
clc
jl
pop
or
sbb
or
out
xor
leave
das
int3
push
xchg
rcll
into
push
push
and
subl
rol
fisttps
sahf
fisubrl
into
xor
fsubs
subb
jl
mov
mov
pop
je
pop
int3
lods
sbb
inc
sarl
jle
std
lods
cld
jmp
shr
jnp
mov
lcall
aas
fcom
jg
ss
pop
and
push
inc
wrmsr
lods
xor
fcomip
das
loop
fcmovne
pop
fs
test
adc
dec
lea
enter
pop
inc
cmp
std
sub
mov
mov
pushl
les
scas
xchg
sbb
mov
decl
popf
cld
push
mov
sarb
lahf
add
in
icebp
sbb
ss
cli
jg
mov
out
or
pop
or
jmp
and
push
ret
lret
fsubp
shlb
mov
mov
xchg
cli
addr16
lods
mov
dec
pusha
aad
test
add
insb
mov
loope
pop
sbb
lcall
pop
cwtl
outsb
xlat
add
int3
jl
ficoms
mov
loope
ss
idivb
testl
push
mov
xchg
fildl
inc
xor
push
das
stos
movsl
lret
xor
lcall
sbb
mov
loope
lahf
jnp
push
sbb
dec
in
ds
ljmp
int3
push
je
inc
loop
insb
out
or
dec
mov
dec
sbb
loopne
jmp
pop
hlt
loope
mov
pusha
xchg
mov
and
mov
sti
jo
mov
add
or
lcall
sbb
push
cld
imul
sbb
pop
mov
scas
mov
mov
cmp
hlt
stos
xor
jge
mov
inc
mov
inc
arpl
mov
push
fcomps
adc
xor
mov
lea
mov
shlb
cmp
ljmp
sub
push
stos
fbstp
pop
dec
ret
ds
cmp
cwtl
out
shlb
loop
loope
in
ljmp
sti
xadd
sbbb
jo
int3
jae
outsb
nop
clc
mov
imul
sbb
jbe
pop
call
in
es
test
test
xchg
incl
out
out
xchg
mov
loopne
cmp
and
adc
rcl
ljmp
add
ss
or
scas
jp
adc
nop
stos
mov
mov
xor
jns
jne
jno
add
jecxz
out
jge
lcall
and
inc
mov
lods
shrb
and
daa
inc
add
inc
mov
leave
or
test
lcall
addb
push
sbb
pop
cld
push
icebp
adc
cmp
jecxz
loop
and
shll
cmp
cli
mov
mov
subb
jg
sbb
mov
lcall
mov
call
push
shll
push
mov
cmp
lock
rclb
mov
jl
add
mov
xor
add
popf
cmp
cli
out
and
es
fldt
fisubrs
repz
lahf
out
inc
jbe
mov
cs
bound
or
mov
sahf
sbb
mov
mov
pop
add
dec
pop
ja
movsl
lret
mov
or
pushf
mov
jge
movsb
mov
lea
mov
or
movsb
dec
testb
int
jo
push
shl
mov
std
nop
xor
mov
bswap
repnz
cmpsb
insl
cs
fldl
push
scas
jecxz
sub
faddl
pushf
mov
mov
pop
mov
lea
or
incl
mov
movsb
cmpsb
jae
inc
dec
icebp
fcmovnu
add
in
or
jg
inc
cmp
ss
mov
xchg
pop
inc
mov
jo
jp
adc
lret
in
or
out
sub
mov
dec
cmpsb
fs
cld
sub
add
out
and
jne
test
jbe
out
push
mov
push
or
ljmp
enter
aad
mov
push
sti
das
pushl
pop
fcompl
lahf
movb
setae
pop
ja
or
push
cld
cmp
inc
mov
sarb
jmp
mov
push
loopne
lock
mov
mulb
push
mov
adc
sub
inc
push
out
adc
jno
xchg
xchg
leave
fdivs
les
jns
add
jmp
jge
pop
rclb
lret
loope
dec
mov
mov
mov
and
add
pop
sub
sub
leave
ud0
sub
add
aam
pop
cmc
ss
add
scas
sbb
xchg
xor
in
push
int
mov
ljmp
rclb
push
imul
inc
fdivr
jg
test
pop
outsb
sahf
stc
jmp
cltd
pop
cs
xor
mov
mov
rolb
jo
sub
adc
jae
dec
and
ret
sbb
clc
pushl
or
call
xor
sub
fxtract
in
psraw
jmp
jo
ror
cs
push
arpl
int
inc
repnz
cmc
je
mov
stos
mov
in
sub
mov
ljmp
movsl
stc
bound
adc
adc
cld
pop
in
push
aad
cmp
cmp
ret
hlt
test
xor
lcall
fidivrl
mov
sub
rolb
call
pushf
dec
pop
pop
push
push
das
mov
dec
pop
xorb
dec
andb
mov
jp
adc
mov
and
cltd
mov
call
inc
hlt
mov
pushl
aam
cmp
push
xchg
mov
push
mov
lcall
mov
xchg
xchg
cmp
push
fimuls
jno
clc
popa
dec
jb
ds
rolb
push
cltd
imul
mov
inc
sub
fistpll
movsl
clc
sarb
je
and
repnz
std
and
xchg
je
cwtl
mov
and
pop
push
int3
sub
scas
test
fstpt
repz
lret
jns
in
jbe
call
rcll
loopne
cmp
mov
icebp
sub
push
rol
fcompl
sub
vmulsd
adc
pushf
adc
push
adc
fwait
mov
mov
or
pop
push
push
bound
rorl
cmc
xchg
sub
int3
rol
fbld
inc
push
pop
dec
add
lahf
negb
outsl
mov
mov
cli
test
addb
pop
add
sarb
enter
call
mov
and
cld
mov
and
xchg
stos
push
sub
add
inc
ss
sbb
aaa
addb
jb
add
pop
scas
stos
pop
decl
mov
test
je
lcall
add
adc
jmp
stos
push
frstor
or
std
xchg
inc
fistpl
in
subl
testb
popf
psubsb
stos
mov
stos
adc
sbb
cli
adc
aam
jg
outsl
sahf
inc
shrl
adc
push
xchg
andb
dec
inc
mull
dec
clc
pop
and
push
hlt
daa
scas
mov
aad
xor
shrl
aas
inc
mov
xlat
adc
jp
lea
jp
pop
inc
sub
pop
rcrl
in
clc
lret
test
inc
ret
ret
adc
addr16
jl
out
ljmp
adc
das
ja
test
mov
addr16
xor
sub
dec
pop
push
push
stc
sbbb
mov
dec
cmc
mov
test
pop
inc
movsl
pop
mov
and
sbb
cmp
dec
push
xchg
imul
clc
mov
loop
xchg
cmpsl
cmp
pop
adc
sbb
into
pop
std
jg
add
into
imul
loope
mov
and
es
sbb
add
mov
outsb
mov
sahf
mov
sbb
cld
les
jo
mov
mov
mov
dec
or
decl
imul
adc
mov
clc
adc
jne
add
decl
pusha
push
stos
push
bound
xor
lock
xor
in
push
aaa
sbb
cmp
jl
out
jg
outsl
in
and
test
das
or
leave
mov
jns
incl
mov
call
add
call
sbb
ja
lret
dec
mov
movsl
sub
std
push
loop
in
or
aad
subl
add
push
lcall
out
sbbl
add
add
iret
stc
test
lcall
popf
mov
sti
cmpsl
stos
dec
iret
sahf
xchg
push
dec
loope
and
pop
fstl
ret
call
inc
mov
jecxz
xor
test
jmp
pusha
les
fs
and
int
mov
call
pop
hlt
cld
push
aaa
mov
inc
test
scas
bound
and
sti
sti
or
push
jg
or
or
fs
pop
hlt
sti
inc
aaa
loope
mov
sbb
inc
fwait
dec
popa
mov
ljmp
mov
stos
bswap
pop
gs
ljmp
aaa
xor
nop
fst
stos
idivl
jmp
jl
fcoml
int3
aad
jo
jo
incl
dec
fcoms
imul
push
pop
add
rcrb
icebp
or
cmpxchg
cmp
ljmp
sbbb
dec
inc
movsb
xlat
jns
bound
stos
pop
pop
jg
add
repz
dec
adc
xor
test
sbb
and
call
cmp
repnz
subb
fbld
push
cmp
movsb
push
sti
lahf
shll
push
xor
jne
pop
adc
pusha
movsb
cmp
adc
and
loopne
xchg
imul
jg
jnp
imul
lcall
mov
xchg
ret
scas
call
hlt
test
es
cmpsb
dec
jecxz
jmp
xchg
fs
in
roll
inc
imul
ret
lock
int
mov
sbb
fildll
sahf
xchg
and
ret
mov
out
jp
push
insl
add
xor
subb
push
push
rcll
cltd
or
lcall
and
pushf
mov
jb
jmp
out
mov
cli
pop
lcall
lcall
scas
enter
fcoml
out
dec
xchg
jbe
xchg
je
or
popa
pop
int3
pop
lcall
ret
aam
insl
and
mov
pop
and
jge
mov
jg
mov
jecxz
jp
lret
sbb
inc
enter
jg
int
push
outsb
insb
into
fistps
pop
mov
xchg
add
sbb
adc
ja
push
pop
or
movups
inc
rorb
gs
xchg
jo
enter
std
xor
inc
inc
cmp
pop
xor
lret
dec
add
mul
lods
push
call
lods
enter
mov
jae
or
pop
sub
cltd
mov
dec
movsb
cs
dec
lds
testb
aad
in
cmp
cmp
sub
sub
mov
call
aaa
pushf
hlt
icebp
mov
jae
sbb
ficoms
test
ja
sbb
int3
mov
inc
push
jp
jg
mov
jne
or
nop
push
rolb
push
push
fwait
xor
out
test
inc
arpl
mov
hlt
add
pop
lcall
mov
scas
and
das
insl
inc
sub
pop
mov
bt
aaa
pop
in
mov
sbb
cld
mov
or
sarb
jne
imul
scas
xchg
outsb
jb
push
pop
jb
push
jne
push
ljmp
daa
pop
testl
daa
stc
or
dec
dec
or
adc
add
push
dec
push
xchg
jge
fistpl
cmp
mov
in
fs
fdivs
add
pop
inc
and
sbb
incl
icebp
sbb
xor
lods
adcl
xor
and
ljmp
lock
jmp
shrb
loope
push
enter
stos
gs
ret
cmp
or
out
mov
decl
cmp
add
pop
push
jne
loop
iret
shrb
add
xlat
ret
inc
and
dec
sar
sub
mov
fdivr
cmp
jecxz
and
pushf
pop
lock
incl
jl
adc
mov
cmp
pop
cwtl
dec
inc
mov
cld
mov
into
inc
xchg
or
hlt
in
fsubrl
jne
jns
filds
nop
imul
inc
testb
xlat
pop
gs
pop
mov
dec
in
scas
rcll
pop
rcl
dec
mov
ffreep
pushl
adc
sahf
cmp
inc
sbbb
or
mov
fisubs
das
aaa
inc
lcall
mov
test
or
cmp
lods
lret
mov
sarl
add
adc
mov
adc
movsl
imul
subb
call
inc
mov
outsb
or
jb
test
sub
test
inc
sbb
fstpt
mov
jp
jo
pop
xchg
test
pop
test
loopne
rcr
and
jno
cld
clc
pop
dec
or
addr16
mov
iret
add
inc
ftst
or
arpl
mov
dec
out
mov
mov
mov
aaa
xchg
and
or
sub
sub
les
test
lret
pushl
or
pop
fidivl
mov
lret
sti
shll
stos
adc
add
icebp
fsubl
in
cmp
shl
enter
ljmp
push
cld
lcall
mov
ljmp
or
push
and
xor
jbe
into
out
inc
add
ret
orb
and
jg
push
stos
test
mov
push
int3
pushf
scas
fdivrs
lret
outsl
mov
nop
mov
mov
sbb
subb
dec
pop
inc
xor
ljmp
jge
jecxz
mov
push
adc
push
add
xlat
call
xor
loopne
mov
push
xchg
pop
sbb
xchg
arpl
mov
pusha
cmp
dec
sub
stc
call
std
sub
adc
clc
jmp
sub
mov
addr16
mov
test
sbb
cmp
sbb
lods
out
outsb
dec
adc
lods
sbb
rorb
int
movsb
mov
lcall
gs
je
mov
mov
inc
push
or
stos
or
jmp
sbb
loope
fildl
jne
adc
and
sbb
das
mov
mov
dec
jg
or
dec
mov
ljmp
ljmp
pop
mov
mov
cwtl
xor
inc
cld
outsb
and
imul
jg
sbb
gs
loope
adc
mov
sbb
int3
jb
inc
es
fistps
add
sti
incl
and
cmc
mov
mov
inc
push
mov
sar
jg
rcll
clc
lods
xlat
jl
mov
dec
ja
pop
mov
cmpsb
clc
in
inc
jno
sbb
clc
mov
aam
es
cmpsl
clc
xchg
decl
mov
fildl
push
repz
xor
int3
push
fcoms
loope
jg
jbe
mov
dec
addr16
shlb
mov
jmp
inc
test
and
pop
xchg
in
ja
lcall
int3
fildl
jnp
outsl
out
fwait
mov
mov
xchg
fistpl
ljmp
pop
mov
or
adc
clc
cmp
push
aam
int3
pop
jl
dec
mov
in
lahf
scas
xchg
std
outsl
mov
mov
sarl
mov
cli
jg
icebp
mov
rcl
hlt
mov
jmp
loop
cwtl
mov
add
insb
int
enter
or
shlb
fstpt
or
cmpsl
in
push
ljmp
jbe
sbb
test
push
push
sar
push
cld
push
in
adc
lcall
mov
cmpsb
pop
insb
loop
imulb
jl
loope,pn
add
clc
ds
xor
push
inc
push
cmpb
jo
push
jecxz
movsl
lcall
stos
test
imul
add
mov
outsl
mov
int3
jle
mov
mov
lock
jg
aam
xchg
mov
aad
int3
lock
jbe
test
lret
outsb
pop
test
mov
in
dec
jmp
mov
cmp
and
mov
in
inc
pop
jge
adcb
je
test
scas
mov
and
out
repz
or
into
in
add
jg
ret
stos
testb
push
xor
jp
and
pop
push
lcall
sub
pusha
inc
fnstcw
pop
pop
push
rclb
and
dec
outsl
sub
dec
jb
sub
mov
adc
pop
jnp
pop
pop
jmp
mov
in
cmpsb
sub
and
clc
cld
cli
jg
andl
pop
adc
push
outsl
daa
in
inc
adc
mov
out
push
ret
add
dec
xchg
out
fs
push
dec
cli
mov
pop
dec
enter
int3
orl
inc
jo
xchg
push
cvtpi2ps
jle
scas
adc
push
hlt
jb
push
sbb
inc
mov
movsl
lahf
cmp
lcall
xchg
imul
aaa
dec
inc
repz
push
sti
popf
movsb
pop
sub
mov
pusha
or
push
push
jmp
dec
jns
in
call
ljmp
scas
insl
ret
inc
mov
and
inc
stc
ret
sahf
es
push
sub
mov
xchg
out
aaa
lahf
push
push
push
mov
fucomip
fs
jl
push
jmp
mov
lds
cs
jae
int
cli
dec
adc
cmp
jecxz
loop
fisubrs
jle
lahf
jmp
ljmp
cli
mov
ss
fmull
or
mov
jmpw
mov
mov
ret
outsl
inc
or
cmpb
xor
repz
bound
mov
stos
jl
lock
inc
mov
adc
lahf
inc
dec
fstpt
adcl
std
or
ss
or
ret
in
ljmp
xchg
hlt
sub
adc
jae
scas
aaa
add
fs
ljmp
fidivrl
push
decb
loopne
xor
or
cmovs
scas
imul
test
dec
idiv
das
ret
xor
sub
cmp
insl
aad
xor
adc
sar
push
cmpsl
imul
add
cmp
sbb
mov
xchg
adc
jnp
mov
std
call
xor
fmuls
inc
repnz
add
mov
lods
xchg
iret
mov
mov
lcall
outsb
mov
mov
mov
add
pop
divl
rolb
xor
pop
fldt
stos
stos
lcall
xor
fisttps
pop
xor
dec
sbb
push
testb
or
pop
xchg
das
cmpsb
jbe
outsl
adcb
aad
icebp
dec
mov
dec
rcr
out
add
push
push
shrb
rorb
add
jmp
repz
in
in
in
xchg
mov
rol
push
incb
sbb
pop
das
outsb
imul
xor
xchg
inc
cld
into
stc
ljmp
xchg
pop
xorl
fcomip
add
imul
pop
pop
jmp
and
mov
dec
cmpsb
or
jmp
sbb
or
cmp
xchg
mov
dec
mov
push
lock
mov
sub
adc
call
fstl
mov
pop
je
mov
out
ljmp
jnp
pop
fucomi
cmp
sarl
mov
lock
dec
xchg
fneni(8087
scas
pop
push
add
ja
andb
pop
ss
cmp
int
and
mov
lret
fisttps
pop
hlt
sub
imull
std
call
out
dec
int
mov
ljmp
jg
push
and
and
insb
aas
xchg
mov
popf
xor
push
add
mov
or
sub
push
cmp
incl
cmc
push
les
rorl
and
cmp
insb
cs
xchg
loopne
or
or
fs
sub
test
int
and
aas
inc
and
sti
lock
jle
flds
stos
test
outsw
or
jg
dec
adc
in
test
jae,pt
jno
fbld
ljmp
inc
ljmp
adc
cmp
and
and
inc
aam
arpl
das
clc
inc
xor
mov
inc
insb
jmp
filds
aad
dec
test
mov
es
dec
popf
iret
mov
push
fnstsw
imul
xlat
test
pop
in
cmp
adc
inc
or
ja
jge
inc
loopne
icebp
and
adc
add
xlat
pop
int3
and
sbb
xchg
pop
push
mov
jne
sub
fisttps
mov
xchg
push
stos
inc
sarb
xchg
into
ljmp
adc
ljmp
or
cmp
ds
push
imul
pop
les
push
pop
lock
pop
ljmp
adc
push
xchg
adc
sar
scas
clc
std
cmp
adc
sub
adc
and
lds
incb
and
fs
stos
lret
xor
adc
add
call
into
mov
loop
pushf
xor
mov
pop
mov
fwait
cld
push
jecxz
fwait
pop
jle
add
mov
out
cmpsb
dec
and
insl
mov
mov
aad
fsubs
incb
shlb
and
adc
popa
pop
mov
incl
test
inc
and
mov
xlat
jl
icebp
mov
clc
inc
push
inc
sbb
and
pop
xchg
call
stc
fdivrs
stc
xor
rolb
pop
fisttps
ret
dec
imul
jmp
cmp
add
or
cwtl
icebp
aad
cmpsb
and
subl
int
jg
jg
adcb
lods
mov
mov
add
int
mov
nop
cli
jmp
bound
inc
lds
out
xlat
xchg
rorl
call
add
clc
in
push
xor
or
cmpsb
push
fwait
sub
clc
leave
mov
jns
pop
add
pushl
mov
popa
in
cmc
sti
inc
push
ret
xor
pop
decl
inc
cmp
add
push
into
stc
inc
ficoml
push
cmp
push
jne
loop
sbb
lock
enter
test
stos
clc
mov
jle
pop
xor
mov
sbb
mov
inc
sbb
pop
test
fcmovne
push
outsb
leave
shr
sub
rorb
sub
push
insl
cli
ljmp
fiaddl
jmp
iret
enter
pop
or
mov
pop
pop
push
and
fstpl
gs
push
out
xchg
stos
ja
les
sbb
jbe
sarb
flds
add
mov
aas
fwait
aam
into
inc
daa
push
adc
jge
push
mov
push
jg
mov
and
shlb
dec
mov
cmp
bound
arpl
aad
es
mov
sti
mov
pop
jge
add
idivl
sbb
or
mov
push
iret
ficomps
lcall
adc
mov
jp,pt
push
test
pop
stos
aas
xor
cmp
xchg
pop
adc
dec
mov
jnp
subb
mov
jl
adc
test
pop
insl
sbb
je
push
sbb
cli
aam
sti
adc
inc
cld
scas
adc
xchg
mov
jecxz
int
add
lret
iret
sub
add
sub
jnp
inc
insb
jp
push
test
or
icebp
std
call
sahf
repz
push
inc
mov
xor
cld
lcall
adcb
jo
cmp
xlat
loope
ljmp
repz
sub
std
or
add
rclb
mov
fucomip
mov
or
in
cltd
add
mov
mov
push
test
jge
adcb
lcall
fcoml
pop
in
inc
pusha
test
cmpsb
dec
jl
xor
cmc
lret
or
hlt
jne
es
cld
jg
pop
mov
mov
out
shlb
push
fcomps
mov
jns
jle
or
cmpsb
movb
xlat
xchg
cmc
pop
sbb
fnstsw
test
movsb
jg
dec
adc
mov
mov
or
pop
cltd
push
pusha
add
mov
sbb
sbb
sub
outsb
fs
add
out
and
aaa
lahf
fdivrs
ljmp
jno
movsl
loopne
loope
inc
pop
in
jp
mov
stos
sub
in
dec
nop
inc
xchg
fucomi
rcrb
mov
adc
ljmp
xlat
inc
enter
adc
pop
sub
push
xor
sbb
lcall
or
leave
inc
add
repnz
aad
push
lea
adc
popf
mov
pop
inc
mov
xchg
or
xor
test
repnz
cmpsl
mov
or
outsl
jo
mov
fbstp
test
mov
cmp
jne
push
inc
mov
sub
cmp
loopne
mov
call
and
pop
mov
add
dec
roll
fldcw
mov
xchg
enter
pop
mov
fbld
repnz
inc
scas
shr
push
or
shl
int3
jno
sbb
ds
or
popf
inc
jno
icebp
pop
ret
mov
cmp
add
lahf
int3
push
std
cmpsb
ja
lods
add
pop
jbe
outsl
mov
cmpsb
mov
cli
pop
fs
sub
dec
mov
aad
into
lods
lds
mov
popl
push
jbe
jecxz
icebp
add
iret
and
fs
fs
xchg
and
and
xchg
shlb
xor
jg
sub
push
mov
mov
decl
cmp
test
or
fscale
jns
adc
rorb
in
rcr
sbb
add
jmp
xchg
sub
jle
out
jns
jg
adc
dec
mull
or
or
cld
pop
out
mulb
and
aaa
inc
mov
add
rorb
mov
xor
inc
stos
push
adc
decl
sub
pop
cmpl
push
in
jge
push
xchg
pop
popf
xchg
mov
call
cwtl
push
out
lcall
sti
mov
and
bound
mov
push
ja
notb
xor
outsb
movsb
inc
mov
xchg
sub
ljmp
data16
add
adc
ss
test
adc
out
es
sbb
ret
sbb
xchg
sahf
push
and
cmc
mov
dec
cli
cwtl
add
mov
jg
dec
testb
jmp
add
lret
shld
pop
es
xchg
mov
or
inc
out
mov
scas
call
fildll
add
push
cld
pop
out
pop
dec
fnstenv
mov
mov
sub
inc
fsubs
add
mov
cld
pop
mov
push
and
xor
imul
scas
inc
sbb
push
ss
cltd
aam
push
shrl
dec
push
mov
adc
mov
push
fildll
xlat
pop
scas
pop
lods
xor
jecxz
sub
mov
shll
fwait
clc
decl
jo
push
cld
cld
mov
fucomi
jle
mov
mov
mov
xor
sbbb
or
mov
mov
pop
test
sub
fdivs
and
das
add
movsb
and
pusha
outsb
or
xchg
lahf
sub
popl
dec
fnsave
mov
mov
mov
das
add
cmp
sub
jmp
fldenv
cli
pop
mov
aam
xor
shl
or
mov
mov
enter
mov
and
pusha
scas
js
mov
xor
mov
pop
fcomip
aaa
xchg
insb
xor
pop
xchg
rorb
inc
mov
push
push
ss
stc
stos
cmpsb
adc
clc
xchg
adc
movsl
dec
xchg
fwait
in
pop
into
cmp
das
pusha
imul
dec
addr16
push
or
pop
xor
push
push
incl
add
sbbb
xor
das
movsl
pusha
into
insb
and
inc
aaa
imul
clc
sbb
aaa
push
mov
fisttps
decl
dec
mov
hlt
pop
outsl
pop
arpl
pusha
movsb
push
mov
adc
add
cltd
mov
xor
sti
test
dec
add
js
add
xchg
and
mov
inc
jnp
xchg
loop
push
add
pushl
dec
fwait
movsb
dec
cmpl
lcall
xchg
loopne
cmp
fimuls
ljmp
xchg
mov
lret
fs
dec
imull
inc
xchg
push
adc
adcb
mov
pop
loop
rolb
test
lcall
xor
out
lahf
aad
fadd
mov
adc
cwtl
pop
add
test
jl
cmpsl
sbbl
xchg
sbb
mov
ret
sbb
add
fcompl
ss
xchg
mov
ret
jp
pop
cmpsl
adc
mov
loopne
ljmp
push
inc
imul
pop
insl
std
and
mov
mov
jg
cli
sub
pop
mov
mov
pop
icebp
and
xor
hlt
fnsave
incl
fdivrs
and
std
jbe
or
push
ljmp
pop
xchg
jno
add
mov
std
scas
clc
lcall
cmovp
mov
aad
enter
cld
xchg
repz
xchg
jne
inc
andb
das
pushf
push
ljmp
mov
cmp
cmp
cs
mov
pop
and
rclb
mov
jg
incb
mov
push
mov
int3
out
test
pop
decb
mov
jno
push
jno
pop
mov
repnz
fwait
xchg
pusha
push
ret
mov
mov
and
mov
mov
inc
dec
lcall
cmp
mov
jns
fidivl
mov
popa
std
sub
xor
adc
js
xor
sbb
xchg
cltd
ficoml
xchg
inc
popf
xchg
push
gs
pushl
and
enter
dec
movsl
test
out
and
scas
cli
add
aad
and
enter
pop
outsl
mov
repz
call
in
int3
daa
ds
nop
ja
push
jmp
mov
sar
call
inc
imul
xor
push
popa
mov
lods
aas
aam
call
inc
and
xchg
cmp
add
iret
hlt
int
lock
jbe
jno
rolb
mov
sbb
rorl
mov
add
test
clc
cmpsl
mov
inc
mov
sar
fcmovnu
bnd
pop
add
test
cmc
ja
fstl
fmull
outsl
dec
sar
add
mov
jns
mov
sub
inc
loopne
das
pop
pop
sub
inc
jnp
testb
mov
or
call
and
cmpsl
jae
xor
notb
cmpsb
mov
push
sbb
out
mov
loopne
jl
sub
pushl
cs
mov
jnp
add
subl
pop
int
xor
inc
mov
inc
add
add
in
scas
adc
push
repz
xchg
add
lock
or
pop
andl
test
leave
add
mov
dec
xchg
inc
mov
aad
loopne
jb
and
push
jecxz
dec
jge
fsts
cli
fcmovnbe
lds
les
rorl
sbb
in
js
or
lods
add
mov
loopne
mov
das
cmp
cmc
scas
mov
in
outsb
add
sub
pop
cli
lcall
fimuls
inc
loope
mov
push
mulb
ljmp
xorl
popa
dec
out
adc
in
sbb
mov
xor
enter
and
mov
test
es
push
outsl
add
mov
outsl
xchg
lea
and
in
xchg
or
push
mov
jno
fs
cmpsb
mov
dec
decl
push
in
adc
shrl
mov
ret
jge
jmp
sub
adc
nop
lcall
enter
jg
shll
cmp
dec
mov
xchg
cmp
sarl
pop
xor
push
or
cld
add
jnp
and
negl
pop
lock
fsubrs
out
add
insw
xchg
sub
mov
xchg
push
lcall
or
sbb
fs
sbb
shll
push
push
out
add
jmp
ljmp
bound
push
fwait
or
inc
cmp
into
xchg
jbe
fsubs
mov
clc
sub
inc
and
inc
shrb
shl
ja,pn
xchg
je
std
xchg
xchg
mull
into
in
xor
jns
pop
int3
dec
sub
xchg
jle
jg
dec
cmpb
mov
jmp
mov
xor
imul
push
loop
pop
icebp
pushl
mov
jl
iret
adc
mov
jg
sbb
sarl
cmpsl
mov
sahf
aaa
fldenv
fcmovbe
push
pop
lcall
aas
pop
nop
shrb
jge
and
or
sti
test
lcall
mov
cmp
xchg
mov
inc
mov
and
push
not
bndstx
icebp
cmpsl
pusha
jno
lods
xchg
jb
shl
out
push
mov
add
fst
lea
push
aam
adc
mov
gs
imul
jae
test
inc
stos
adc
cmp
adc
fwait
loopne
pop
imul
jl
sbb
movsb
add
shlb
mov
pop
test
jmp
fsubrl
lea
and
aam
xchg
mov
in
cmp
add
xor
ljmp
repnz
data16
mov
cmp
fsts
pushf
cmp
cli
call
movsb
lret
mov
movsb
aam
jge
or
and
jne
sbb
test
inc
repz
push
out
mov
call
pop
mov
std
lods
mov
jb
dec
mov
loope
or
push
movsl
push
xchg
sbb
pushl
cli
ret
cld
fsubrs
push
lcall
pop
and
xor
add
in
sub
sbb
test
mov
movsb
fwait
arpl
dec
inc
mul
jns
inc
fcomps
push
je
xchg
inc
test
xchg
clc
inc
dec
xor
stos
cmp
scas
es
mov
lret
into
and
ds
jbe
sti
xor
int
popa
jl
ja
adc
jnp
sbb
adc
pop
push
jmp
decl
mov
cmp
mov
enter
aaa
lods
pop
dec
sub
lock
call
jecxz
mov
in
adc
dec
adc
xchg
adc
cltd
adc
dec
add
push
lds
mov
dec
push
dec
pop
xor
pusha
fmul
mov
lret
xor
push
inc
movsl
sub
cli
bound
outsb
mov
pop
lock
repz
cmp
push
popa
pop
cmp
dec
mov
nop
mov
in
inc
jae
cmpsb
outsl
xor
fs
into
inc
sbb
dec
rorb
pop
fisubrl
cmp
mov
xchg
jl
or
dec
cmpb
movsl
push
bound
fs
popa
ret
int3
cltd
lods
out
sub
lock
cli
jno
sti
pop
and
loopne
ja
jmp
out
pop
adc
mov
lea
scas
mov
shl
lea
add
das
cli
out
test
xchg
fadds
pop
mov
mov
dec
inc
push
test
xor
movb
out
push
xchg
shl
cli
and
push
inc
or
dec
je
add
cmp
sub
lcall
nop
pop
xor
stos
push
add
xchg
and
mov
aam
xchg
push
in
aas
rol
dec
shlb
and
mov
push
fs
push
out
jno
leave
ret
loopne
stos
mov
repz
push
cmp
mov
fists
adcb
sahf
xlat
or
mov
jb
notb
jmp
mov
inc
shl
decb
sub
push
jns
hlt
mov
push
shlb
sub
add
xchg
adc
mov
jecxz
es
loopne
pushf
fimuls
cmpsb
or
rolb
dec
mov
dec
subb
cs
mov
out
and
sbb
ret
and
mov
rorl
je
rorb
lock
cmp
fists
decl
add
and
data16
push
insl
idiv
push
dec
fdivrs
int3
xchg
and
mov
cmpsb
cmpl
fstps
cli
cmp
adc
mov
pushl
negl
iret
xor
push
bound
lcall
push
jno
jb
movsl
outsl
cmp
fcomip
pushl
mov
add
lret
es
mov
mov
lcall
in
aad
jns
sbb
inc
cmpsb
loop
movsl
push
dec
adc
cwtl
mov
jmp
rcrb
push
push
ja
aas
jo
ss
dec
jb
push
mov
mov
bound
jge
fs
bound
or
cmp
xchg
das
dec
int
movsl
pop
jae
loop
rorb
cmp
and
adc
into
decb
shr
into
ljmp
jmp
orb
xor
or
jae
pop
hlt
decl
add
sub
jo
dec
fistpl
push
js
rolb
in
dec
nop
es
lods
sbb
cmp
dec
das
dec
jecxz
hlt
push
xor
dec
loopne
mov
cltd
pop
mov
inc
add
inc
es
pusha
icebp
mov
fisubrs
lahf
xchg
dec
cwtl
push
pop
shrb
outsl
jp
jg
mov
mov
mov
inc
cld
and
dec
push
jne
data16
jb
fimull
cmp
ret
fidivrs
lods
add
jg
test
insb
jbe
and
push
insl
imul
ss
jmp
jl
jecxz
leave
fmul
xchg
xchg
cmp
mov
mov
jge
mov
dec
xchg
fmul
bound
test
jg
inc
inc
jmp
bsr
fldl
sahf
add
inc
cmpb
pop
mov
les
fcmovnb
shrl
clc
cmc
lret
cmp
or
mov
inc
mov
mov
sbb
insb
ljmp
in
jno
push
dec
cli
clc
outsl
push
jb
clc
or
lods
mov
ss
inc
jbe
shr
int
adc
push
lods
push
sub
test
xlat
repz
mov
hlt
lret
and
sbb
sub
test
adc
outsl
imul
add
lret
ljmp
clc
pop
loope
clc
mov
cwtl
mov
push
mov
add
jp
lock
lret
loopne
lds
and
or
cmp
cmc
daa
cmp
fcomip
outsb
into
dec
fs
roll
stc
les
popa
and
cwtl
test
icebp
pop
cld
das
pop
imul
in
jmp
fidivrl
or
inc
pop
add
pop
and
idivb
sahf
pop
shll
adc
sub
jl
popa
push
adc
mov
mov
sbb
stos
rorb
cmpsl
mov
push
in
in
add
mov
stos
mov
arpl
ljmp
test
out
lock
mov
in
adc
divb
out
cmc
fcompl
mov
and
dec
xchg
pop
mov
mov
fbstp
adc
fadds
std
jmp
clc
cmp
ficoml
stos
ss
int
adc
daa
cmp
add
test
fisttps
pop
mov
mov
je
xchg
push
enter
fwait
popa
popa
xchg
push
decl
inc
sub
inc
decl
test
mov
sar
xchg
sbb
dec
ss
int3
mov
xor
push
in
imul
data16
jg
hlt
mov
push
imul
jae
lea
add
mov
pushf
jmp
data16
imulb
lcall
aam
clc
ljmp
std
and
pushf
test
loope
push
lods
jae
mov
lcall
pushf
insb
in
jge
iret
jo
mov
mov
jne
pop
add
js
ret
adc
mov
push
add
dec
mov
mov
clc
jnp
inc
xlat
push
inc
addr16
dec
dec
xchg
incl
insb
imul
cmp
push
add
sub
cmp
pop
andl
sub
or
adc
enter
mov
xlat
divb
test
mov
and
xchg
scas
clc
js
pop
fisttpll
cld
mov
les
mov
push
jle
movsb
dec
repz
xorb
adc
jg
das
pop
std
sbb
out
sbb
cs
mov
aaa
inc
imulb
xor
push
mov
add
test
pop
fwait
jo
clc
jo
jmp
insl
jns
jg
add
jno
pop
clc
sub
and
fistpll
and
pop
sbb
mov
popf
stc
int
xchg
jno
sbb
aas
test
dec
lds
ds
not
enter
call
jo
hlt
adc
sbb
es
jl
push
mov
xlat
scas
mov
push
or
jae
lcall
int
ljmp
int3
mov
jb
or
dec
insl
jmp
ljmp
push
xor
sub
daa
lock
xor
idiv
xchg
sbbb
mov
test
call
dec
or
dec
sub
mov
mov
or
je
push
cmp
pop
push
adc
clc
ret
mov
int3
cmpsl
mov
xor
jl
pop
jo
movsb
enter
dec
das
push
lock
clc
mov
gs
xor
faddl
push
test
lcall
sub
jl
fdivrl
ss
movsl
stos
pop
lcall
repnz
dec
shrb
loop
pop
jg
jle
movsl
dec
mov
out
decl
out
test
ret
not
mov
adcl
sub
mov
in
add
xor
pop
mov
decl
inc
push
adc
lret
adc
push
mov
jbe
enter
xchg
cwtl
mov
imul
add
call
addl
pop
aaa
outsb
sub
xor
jns
sub
out
pop
jge
test
xchg
leave
sbb
bound
sub
test
push
sahf
je
inc
adc
mov
mov
jb
xchg
jle
cmp
aaa
pusha
bnd
clc
push
fnstsw
push
in
rcl
add
loop
pusha
clc
add
sbb
ror
rolb
jp
inc
imul
imul
jmp
pop
inc
stos
pop
hlt
push
mov
cs
mov
fisttpl
fidivs
mov
cltd
lret
ss
lock
sub
inc
sub
leave
sub
shl
cld
lock
std
push
insb
scas
inc
sti
or
xchg
jle
shll
jmp
add
xor
add
adc
shll
inc
into
ja
mov
xor
push
je
add
push
jp
push
mov
repz
test
loopne
push
ret
repnz
dec
xor
outsb
stos
lds
fists
inc
sbb
inc
hlt
call
dec
jp
xor
inc
dec
mov
orb
or
add
movsb
repz
aam
adc
cli
push
lret
mov
sub
xorb
mov
lcall
scas
mov
imul
mov
cmpsl
sub
test
cwtl
ffree
jmp
adc
jg
and
pop
xchg
xchg
xor
jg
mov
or
or
inc
mov
add
test
add
mov
pop
repnz
add
push
dec
rolb
test
xor
mov
push
push
sbb
cld
outsb
fimull
addb
es
call
popl
push
arpl
jmp
or
bound
jge
stc
fnstcw
dec
mov
mov
test
int
lea
inc
xchg
or
inc
jmp
bnd
xchg
shrb
push
lcall
mov
sub
adc
aas
pop
mov
cmp
adc
push
decl
mov
pop
idivb
dec
stos
and
sub
outsl
fisttpl
cmc
and
add
stos
divb
pushl
xchg
mov
cmp
pop
bound
cmp
push
sub
lret
mov
lret
adc
aam
out
mov
pop
call
das
cmpsb
mov
xchg
cmc
pop
stos
mov
mov
das
xor
ds
adc
gs
and
sbb
cli
bound
push
cmpsl
and
inc
test
sbb
push
push
repnz
adc
jae
and
push
or
leave
out
pop
incb
pop
js
or
je
xchg
pop
hlt
fsubl
pop
dec
loope
lcall
add
xchg
dec
xor
sar
jp
sbb
mov
clc
loop
hlt
mov
add
mov
adc
adc
add
nop
std
pop
push
adc
mov
aas
mov
stos
out
clc
jg
std
xor
arpl
popf
xchg
sbb
inc
in
pop
gs
xchg
call
sbb
rcl
das
or
pop
inc
fcmovnb
in
dec
repnz
mov
rclb
movsb
xor
mov
push
das
call
cltd
les
sahf
or
jg
dec
cltd
in
mov
mov
test
cmp
mov
movsl
into
mov
xor
xorb
lock
inc
gs
fisttpl
das
jae
cltd
push
and
ljmp
dec
loopne
jp
aaa
jns
dec
les
pushf
or
bound
adc
sub
mov
and
aam
nop
addr16
add
stc
out
adc
sbb
pusha
ds
jp
push
aad
xor
cmpsl
test
jmp
adc
stos
fs
mov
mov
mov
and
movsb
or
xor
push
sbb
mov
xor
inc
les
jmp
add
lahf
in
adc
ja
sti
imul
pusha
les
or
icebp
sbb
cs
test
xchg
fimuls
push
enter
mov
enter
sbb
and
je
xor
mov
nop
jb
lcall
xchg
xlat
cmp
rclb
or
jg
lea
xchg
mov
hlt
mov
subb
out
and
jg
aam
test
fwait
jg
mov
ds
lret
mov
mov
lret
int
pushf
adc
leave
test
ss
int
xchg
loope
mov
dec
arpl
movsl
mov
mov
jg
clc
pushl
aad
push
aas
out
lea
xor
push
jl
push
movsl
fimull
les
cmp
incl
xchg
adc
loopne
push
outsb
mov
loope
aaa
rclb
ret
rcll
ja
push
insl
cli
pushl
cmpsl
out
popa
adc
packuswb
push
mov
sbb
out
cli
push
test
jnp
arpl
pop
mov
push
jnp
cmp
sub
cld
mov
adc
mov
jl
dec
sub
mov
jmp
jae
pop
arpl
fisttps
mov
inc
fs
shll
push
adc
sbb
scas
mov
jbe
incl
imul
inc
cmp
xchg
enter
add
sbb
mov
imul
xorl
jno
in
xor
pop
ljmp
pop
loop,pn
or
test
outsl
or
in
push
dec
cmp
pop
mov
lret
jmp
sub
sub
pop
push
ja
push
xchg
jmp
pop
js
mov
mov
lea
popf
push
add
iret
aaa
cld
outsb
or
popf
pop
xor
sti
adc
enter
clc
adc
xchg
adc
repz
jp
mov
into
xor
shlb
add
lcall
test
push
pop
xor
mov
shrb
loope
mov
out
inc
in
push
icebp
push
xor
movsb
dec
or
shrb
fcoms
pop
jns
xchg
push
roll
cmp
in
xchg
hlt
ss
or
jmp
add
lds
sti
ret
xchg
call
shl
pop
fcom
push
cld
mov
xchg
add
add
inc
int3
out
mov
xor
mov
inc
push
int
jg,pt
push
mov
popf
test
add
call
adc
repnz
xchg
in
xor
xor
jg
jle
xor
les
xor
inc
mov
mov
inc
push
sbb
xchg
hlt
pop
shlb
jecxz
mov
dec
or
fsubl
mov
dec
push
dec
pop
movsb
call
test
mov
jno
mov
cmpsl
pop
out
or
lcall
rcll
daa
mov
in
mov
and
mov
jb
gs
add
sar
and
dec
xorb
mov
ljmp
aam
les
inc
jmp
sub
movsb
fdivrp
push
call
push
push
inc
bound
inc
fcoms
inc
sahf
sub
test
idiv
push
mov
inc
bound
xor
ljmp
ficoml
ss
mov
inc
out
in
out
std
lcall
xchg
push
jns
aas
clc
add
xor
pop
fistps
push
sub
mov
outsb
outsl
insl
sub
ljmp
push
cmp
mov
pop
kaddb
push
repnz
xchg
adc
cmc
pop
xchg
sarb
bound
es
movsl
seta
in
mov
mov
cmpsb
mov
testb
mov
add
fwait
inc
or
mov
cld
ja
cmp
pop
xchg
sub
js
scas
and
push
cmp
mov
push
add
pop
cmpsb
ljmp
clc
mov
jno
les
cmp
roll
xchg
fbld
decl
mov
out
jp
pop
fistpl
loopne
add
pop
mov
lret
xchg
mov
mov
outsl
xchg
sub
push
push
cmp
jp
push
adc
addl
sbb
adc
inc
push
add
mov
das
mov
adc
mov
mov
div
fidivl
test
dec
and
push
sub
and
jbe
dec
clc
mov
data16
divl
adc
push
insb
clc
push
or
fcoml
cmpsb
pusha
push
or
push
pushl
out
push
hlt
fldl
inc
sub
mov
movsb
jbe
filds
lret
push
jecxz
out
xchg
sti
mov
xor
mov
mov
adc
cmp
js
cli
mov
pop
iret
push
mov
insb
movsb
jmp
inc
mov
fisttps
insl
test
shl
push
shlb
int3
add
pop
das
mov
cli
stos
fucomp
stos
mov
les
push
mov
cs
in
pop
xchg
and
movsl
jns
lcall
mov
mov
sub
repnz
or
ljmp
xchg
xor
mov
loop
pop
sbb
mov
stos
adc
sbb
mov
lds
jbe
mov
push
mov
jmp
dec
nop
mov
inc
sbb
int
push
jbe
ljmp
fs
inc
stos
into
inc
and
xchg
or
out
jl
xor
cmpb
mov
xchg
mov
jmp
dec
push
mov
pop
xor
arpl
push
imul
push
sub
movsl
sbb
xlat
and
and
xchg
jle
jg
and
xor
and
or
add
mov
ss
les
xchg
lret
jne
xor
jbe
jl
fs
pop
cwtl
inc
inc
lds
sub
incl
mov
sbbb
pop
incl
sbb
xchg
decl
cli
gs
pop
adc
mov
pop
mov
out
stos
jle
daa
or
add
jg
incl
jne
or
unpckhps
dec
or
stos
or
test
ss
in
ja
jg
bound
xor
cmp
data16
movl
stos
jle
adc
orl
jg
incl
cmpsb
daa
xchg
jl
mov
cmpsl
push
push
dec
or
fwait
ret
inc
lods
cld
fwait
cmc
mov
call
lcall
and
sbbl
dec
jb
lock
test
xchg
lcall
sbb
push
and
decl
sbbb
push
mov
mov
xchg
add
pop
or
jge
mov
dec
mov
mov
iret
pop
adc
fildl
mov
xchg
testl
cmpb
into
loope
sub
dec
in
outsb
lret
jbe
cs
out
iret
addr16
push
idivl
pop
cmp
pop
icebp
ljmp
pusha
lahf
inc
jge
movsb
decl
bound
push
test
jae
jp
push
mov
sub
popf
in
in
int
xchg
imul
subb
sbb
ljmp
mov
mov
loope
addb
dec
jnp
lock
icebp
in
lret
xchg
or
push
test
cs
push
mul
sub
js
mov
int3
lods
jb
adc
clc
nop
mov
insl
xchg
hlt
lcall
test
sub
push
xchg
jo
mov
add
sarl
add
es
pop
gs
test
push
dec
mov
loop
cmp
sub
insb
pusha
movsb
inc
stos
jb
inc
mov
mov
cli
outsl
push
xchg
loopne
push
mov
clc
outsl
adc
adc
mov
push
xor
add
imul
pop
scas
cwtl
fs
jecxz
call
pop
and
push
sti
out
out
stos
add
fcoms
lods
mov
mov
loop
lret
lret
mov
or
arpl
test
push
xor
ljmp
inc
xor
jo
pop
ds
lds
or
mov
cld
mov
xchg
mov
cmp
into
mov
mov
jmp
xor
inc
mov
mov
mov
pop
push
cmp
push
in
insb
and
call
sahf
lock
repnz
add
adc
inc
mov
cli
jb
jg
data16
or
loope
iret
sbb
push
int
ljmp
add
in
setle
pop
inc
loop
sarl
incl
jge
xchg
pop
cmc
cld
inc
mov
cmp
jo
xchg
clc
push
fcoms
push
jno
dec
mul
loop
sbb
or
ret
lret
add
ljmp
xchg
xor
adc
out
adc
mov
sub
and
loop
repnz
adc
dec
mov
call
aaa
jle
aaa
cli
in
push
mov
or
push
data16
xchg
imul
push
xchg
ss
jg
inc
push
add
mov
cli
call
rep
jl
inc
arpl
sub
add
insl
lds
xchg
pop
out
or
jb
xorb
xchg
pushf
int3
sbb
push
push
cli
dec
pushf
xchg
and
stc
jns
scas
mov
into
dec
loop
cld
push
cmpsl
nop
fstpl
fwait
jnp
dec
xchg
cmp
jecxz
pop
dec
cld
pop
jns
xorb
filds
push
es
jns
sbb
jg
lods
jnp
rcrl
push
pop
mov
mov
mov
stc
lock
insl
inc
lcall
cmc
pop
adc
bound
xchg
ja
jmp
je
aaa
cld
iret
pushf
aas
fists
and
adc
add
ja
inc
rolb
cmp
pop
lret
jmp
add
clc
nop
out
fwait
scas
ret
xchg
arpl
push
cmpsl
ret
loopne
test
xchg
sar
jg
xchg
fnsave
in
rcrl
in
sbb
xchg
das
xchg
repnz
scas
les
fdivrs
mov
inc
sbb
inc
xchg
decl
stos
ret
out
or
lcall
cltd
add
or
outsl
repnz
test
dec
sbb
ss
mov
frstor
stos
out
xor
lret
sar
push
cli
add
cmpsl
fs
clc
sti
inc
enter
dec
repnz
cmpsl
and
add
cmp
out
pop
xor
jns
int
leave
add
mov
ret
cmpb
les
aas
push
pushf
cld
jg
insl
inc
lret
pop
out
ds
push
loopne
in
popf
pop
or
fadd
lods
je
sbb
rcll
clc
mov
int3
test
scas
sub
sub
push
push
cwtl
sub
js
das
mov
mov
mov
iret
iret
cltd
mov
push
arpl
mov
lea
and
sbb
es
ljmp
sbb
fsubl
incl
xor
pushl
push
mov
cli
and
stos
cmp
add
push
pop
mov
fwait
idiv
negb
idivw
sbb
inc
fcmovbe
and
inc
lock
jg
push
aam
mov
mov
adc
idiv
std
jmp
push
xchg
dec
and
fstpt
insb
lret
mov
jmp
add
sub
pop
mov
cmpsb
dec
push
es
sbb
add
in
fcomps
push
cs
lea
mov
inc
inc
xor
cmp
adc
scas
inc
add
adc
aaa
cld
mov
adc
lret
je
nop
sub
pop
icebp
add
decb
mov
ds
push
mov
in
sub
push
dec
and
ss
adc
cmpsl
add
jnp
lods
fdivrp
adc
lea
push
cmp
test
imul
test
xchg
subl
loopne
pusha
and
adc
ficoml
mov
cwtl
cmp
outsl
clc
out
mov
sub
test
ds
sbb
cli
pop
std
pop
lcall
ljmp
popa
inc
jge
or
mov
add
adc
and
gs
mov
std
ljmp
dec
inc
cld
idivb
imul
xchg
cmpsl
popf
in
and
insb
pop
cltd
mov
mov
push
mov
test
cmp
mov
cmc
ljmp
push
mov
push
rol
ffree
incl
ret
push
pop
mov
inc
pop
mov
mov
push
addr16
ret
icebp
push
and
imul
fldt
pop
test
inc
and
aam
sar
pop
jl
adc
push
stos
ret
fsubs
pop
push
mov
popa
ret
cmp
das
mov
movsb
inc
pop
fwait
xchg
fdivl
ds
loope
lcall
outsb
sahf
cmp
inc
dec
sti
loope
int
push
call
mov
lods
pop
pop
cmpsl
incl
in
lret
xor
dec
sbb
adc
lods
pop
jg
shll
scas
xchg
mov
and
orb
sub
add
push
es
pop
outsl
fildl
sbb
inc
or
sti
imulb
jbe
or
or
push
mov
fs
insl
dec
xchg
dec
xor
or
mov
sbbb
aas
jb
jne
sarb
scas
fimull
std
and
bound
jge
pop
mov
mov
decl
mov
lcall
dec
and
push
repz
ret
dec
push
jg
mov
data16
test
lea
ss
out
and
add
and
push
bound
out
movsb
jle
js
and
ljmp
sbb
dec
xor
dec
sbb
mov
adcb
xorb
incb
ljmp
rcrb
sbb
jmp
icebp
and
adcb
sbb
cmp
cmp
mov
mov
and
jle
mov
nop
mov
sbb
fwait
dec
loopne
stc
cmpsb
jno
xor
push
inc
dec
mov
sbb
leave
movsl
mov
je
stc
pop
xchg
decb
testb
dec
push
sahf
inc
or
fbld
jge
dec
and
xchg
in
xor
flds
or
rorb
aam
inc
loope
out
sbb
gs
lahf
adc
and
jl
mov
inc
add
cs
lcall
scas
inc
sbb
fdivr
incl
cmpl
mov
js
xchg
jnp
dec
test
or
imul
mov
mov
fsubs
jg
inc
cmp
sbb
stos
jo
popa
jne
sti
jbe
jbe
mov
and
xchg
push
xor
jmp
jnp
ror
jge
test
sub
loop
sbb
push
adc
push
testb
push
or
loop
cmp
push
push
aad
movsb
dec
adc
das
jge
add
mov
pop
test
nop
incl
adc
in
ss
mov
sbb
mov
outsl
clc
ljmp
stos
xchg
xor
cmp
or
xor
add
das
in
sub
jno
dec
cli
jg
mov
andb
pop
or
xchg
filds
mov
jbe
insl
cmc
icebp
and
ljmp
xor
inc
xor
insb
imul
out
pop
sbb
stos
inc
sahf
loop
out
outsl
clc
incl
sub
scas
and
in
mov
xchg
jo
into
pushf
lret
decb
cmp
pop
mov
cld
stos
test
jmp
outsb
mov
pop
and
sub
loopne
mov
call
popa
lock
mov
scas
lcall
aaa
push
cmp
mov
pop
call
push
xchg
xchg
inc
dec
daa
push
sbb
push
jo
ss
mov
cwtl
sar
iret
aad
jno
fldcw
inc
add
addb
add
test
mov
mov
jge
mov
add
dec
les
inc
popa
aad
or
xor
cli
fbld
ret
out
movl
adc
mov
ljmp
or
xchg
mov
cmp
ret
dec
jg
adc
mov
std
xchg
mov
aam
mov
frstor
pop
call
mov
push
je
ret
inc
mov
mov
jg
and
or
and
and
andl
dec
and
pop
lock
stc
dec
cld
gs
aam
outsb
pushf
inc
mov
mov
jmp
lock
mov
inc
fmulp
call
dec
cmp
decl
das
cmp
in
inc
test
dec
mov
push
faddl
subb
loopne
popf
mov
lock
fstl
inc
push
test
in
repz
incl
fldl
lods
mov
and
clc
dec
adc
pop
shrb
adc
mov
sbb
scas
ljmp
movsb
loop
fs
pop
dec
mov
cmp
pop
push
out
sub
jno
inc
xorb
int3
ds
jg
js
imul
pop
jbe
dec
imul
inc
rorl
adc
inc
popf
mov
fiadds
imul
sti
mov
movsb
adc
imul
jbe
mov
sahf
adc
sub
mov
lock
das
pop
negl
or
or
mov
mov
sti
or
and
hlt
pop
cmp
inc
mov
clc
incl
loope
sbb
nop
mov
pop
out
mov
call
pushl
inc
aam
test
out
in
and
aaa
cli
add
or
jmp
push
push
or
cmp
cli
pop
pop
icebp
inc
inc
addr16
cmc
cs
xchg
pushf
insb
pusha
out
rcrl
add
outsl
std
test
std
push
outsb
repnz
mov
popa
outsb
sar
lcall
push
and
nop
dec
sub
imul
jmp
scas
add
pop
adc
mov
jo
jl
sub
pushl
fwait
jb
jmp
push
aaa
add
cltd
jge
mov
lods
adc
or
add
pop
lods
sub
shll
add
lods
call
int3
shrl
inc
sti
inc
insb
in
cmp
sub
jbe
push
cmp
int3
jae
nop
xchg
mov
mov
pop
int3
jge
sbb
loope
fcomip
mov
push
movsl
out
push
lods
testl
mov
mov
sub
lret
and
ret
fbld
pusha
xor
pop
and
dec
jl
sti
sarl
inc
mov
sub
inc
pop
int3
les
add
subb
outsl
sub
mov
out
andl
popa
mov
xor
mov
int
xchg
scas
lea
adc
push
scas
push
std
icebp
enter
clc
incl
jl
ficompl
cmp
int
jmp
adc
es
fcoml
icebp
xchg
xchg
xor
mov
cli
cwtl
mov
adcl
test
add
incl
aad
xchg
gs
test
mov
ss
cltd
mov
call
retw
push
add
jns
sbb
stos
adc
fmul
xlat
mov
xchg
dec
add
push
push
mov
cmpsb
push
loope
mov
sub
fsts
repnz
das
rol
sbb
push
xor
loop
lcall
jnp
cmp
mov
lods
xchg
bound
mov
es
inc
outsl
out
pop
icebp
inc
decl
lcall
add
pop
adc
fdivr
sbb
int
pop
mov
bound
insl
filds
outsl
pop
push
cmp
and
mov
aad
daa
jl
mov
pusha
std
or
mov
imul
clc
call
mov
daa
lahf
out
fnsave
mov
add
subl
out
rcr
cmc
sbb
sbbl
push
insl
ret
xchg
cmc
aaa
add
push
sbb
orb
imul
xchg
leave
adc
in
sub
mov
jbe
mov
add
add
dec
cmp
fcom
stos
push
inc
add
add
or
test
dec
aad
inc
adc
sub
movsb
ret
icebp
push
push
movsb
add
add
jno
jmp
or
mov
adc
add
cmc
decl
mov
and
stc
sbb
and
xor
pushl
sbb
bound
dec
into
icebp
aas
dec
mov
inc
lea
fildll
cltd
insl
sahf
xor
cmp
mov
mov
adc
cmp
stc
lcall
jne
push
cmpsl
mov
sbb
push
int3
mov
les
ss
mov
jp
fldl
inc
push
inc
cwtl
push
xlat
cmp
call
add
les
lret
xlat
inc
or
mov
add
int3
cmp
rcl
scas
loop
adc
push
mov
aad
and
jns
add
push
push
xlat
pop
jle
jg
in
push
mov
fnstcw
inc
fsubrs
outsb
sub
pop
mov
cmp
jns
imulb
loope
push
out
add
outsl
adc
pop
in
jae
dec
aas
aam
test
sub
inc
push
xor
add
fcomps
mov
mov
loopne
xchg
mov
std
cmp
das
xor
aas
cltd
and
pusha
movsl
push
cmp
cmp
cmpsb
mov
lcall
movsb
jns
jp
xchg
xchg
push
adc
jns
movsl
fcoml
rcrb
jg
bound
outsl
pop
cli
out
shl
push
sbb
push
cmp
dec
cwtl
lcall
pop
fistpl
outsb
push
test
fidivs
adc
pop
push
fcoml
push
or
sbb
sub
jmp
gs
cmpsb
lds
xchg
lcall
pop
jg
adc
arpl
dec
mov
enter
popa
stos
sub
mov
ret
pop
mov
in
imul
lret
xor
push
jl
xor
fs
jecxz
jg
pop
nop
pushf
out
mov
mov
ss
pop
pop
mov
dec
in
mov
pop
shrb
lcall
sub
into
imul
cmpsb
cmpb
fstps
adc
and
sbb
mov
jl
push
mov
incl
bound
lcall
mov
movsb
mov
jnp
jo
stos
call
lods
push
cmp
sti
scas
jg
mov
inc
clc
jecxz
sub
push
xlat
jg
xor
pop
xchg
imul
and
mov
dec
xorl
sub
shlb
mov
mov
outsl
jp
inc
cld
and
popf
out
fs
add
fs
int
mov
or
push
fwait
outsl
leave
mov
pop
pusha
add
jb
mov
dec
adc
xchg
enter
add
fsts
adc
sub
mov
jmp
pop
jnp
aaa
sbb
andl
push
movsb
mov
je
aam
cmp
stos
sbb
stos
sub
filds
sahf
xlat
mov
popf
ja
call
dec
cli
pushf
and
pop
stos
sub
enter
jae
pop
hlt
js
cmc
cmp
mov
lahf
or
push
or
fildl
bound
outsb
cwtl
or
sub
inc
pop
xor
xor
sbb
movsb
pushl
call
ja
mov
pop
ss
loopne
fcomps
and
xchg
jmp
dec
xchg
xchg
sbb
lret
sbb
push
xchg
sbb
inc
add
cmp
clc
xchg
or
cmp
scas
sub
daa
cltd
testb
mov
push
out
stos
inc
ss
aas
jmp
jmp
sub
pop
fdivs
and
and
pop
nop
out
cli
gs
inc
sub
mov
aad
sbb
jmp
fsubr
cwtl
shrb
pushf
inc
adcb
and
cld
push
ret
inc
sub
aad
aas
inc
inc
cltd
data16
or
add
loop
fldt
out
dec
ja
insl
cwtl
call
mov
cld
fnsave
xor
loop
test
lods
js
outsl
mov
mov
rcrb
sub
xchg
jp
add
or
push
std
stos
jbe
pusha
lds
aaa
mov
dec
sub
lret
push
pop
xor
sbb
incl
stos
mov
out
mov
movsl
adc
call
and
adc
dec
je
cs
xchg
ljmp
call
pop
fs
pop
and
mov
xor
hlt
push
cmp
je
fimuls
mov
aas
mov
push
pop
cli
pop
mov
ss
jg
sbb
adc
sbb
outsl
lock
repz
icebp
pop
sbb
mov
sbb
shlb
xchg
lock
shrb
jae
mov
inc
movsb
int3
jg
and
adc
imul
xchg
mov
sub
jbe
sbb
test
fdivrp
jne
mov
pushf
adc
sub
sbb
repnz
mov
push
test
scas
std
jmp
adc
outsb
mov
jmp
or
fistps
rcl
adc
add
cmpsl
cld
fwait
je
mov
decb
outsb
jg
push
or
fcoms
push
ja
popa
jo
and
jno
mov
push
jno
inc
hlt
lret
dec
add
mov
cmp
push
adcb
and
mov
out
rcll
sub
lock
xchg
or
mov
jg
push
mov
mov
push
push
in
xor
ud1
sahf
lahf
push
pop
mov
sti
lret
pop
hlt
shlb
leave
xor
fdiv
lret
outsl
daa
xchg
sub
mov
in
fists
or
in
je
adc
and
cli
xor
mov
bound
xor
cltd
mov
cli
jg
sbb
lock
jae
adc
repnz
xchg
jnp
dec
call
jb
icebp
out
mov
repnz
push
loop
jg
lds
and
adc
pop
xchg
xchg
push
pop
lret
jb
pop
incl
jmp
fisttpl
inc
jb
pop
dec
fimuls
call
out
mov
or
fldenv
pop
jl
das
js
inc
mov
mov
mov
ljmp
div
fwait
sub
add
mov
jecxz
pushf
xchg
mov
cmpsb
call
test
sbb
pop
pop
pusha
fwait
out
loop
movsl
inc
xor
and
cmc
lcall
cmpsb
or
or
out
gs
aad
enter
jnp
imul
decl
sub
ljmp
jns
push
dec
xor
cwtl
in
daa
flds
push
es
icebp
mov
mov
xlat
xchg
out
arpl
loope
mov
outsl
sbb
test
push
jmp
mov
add
in
push
imull
xchg
clc
cs
lods
outsb
jecxz
push
fisttpll
mov
mov
xchg
sub
push
dec
out
arpl
cmc
cmpsl
dec
xchg
dec
add
in
call
inc
xchg
adc
ss
add
dec
sbb
sbb
jmp
add
into
mov
loopne
fwait
aad
push
in
scas
or
push
subl
adc
lcall
stc
aas
cmp
xchg
rcrl
cmp
add
orb
cmp
xchg
je
mov
jl
fnstsw
adc
add
xchg
push
js
jmp
cmp
pusha
cmp
xchg
les
daa
xor
add
lock
sbb
cld
jg
mov
cltd
mov
inc
mov
stos
mov
xor
push
pop
outsb
lahf
sbb
ljmp
jecxz
les
loopne
inc
std
decl
or
sbb
cmpl
mov
cmc
add
lcall
iret
jae
out
fnstcw
stc
insl
xor
jno
cld
repnz
subb
jecxz
cmpsb
mov
dec
push
sub
lcall
push
icebp
sub
dec
stos
fmuls
fcompl
fstps
mov
jmp
lds
pop
decl
gs
ss
xchg
mov
or
lret
cmc
insl
popf
mov
sbb
fldpi
jg
ds
jecxz
dec
push
insb
mov
sbb
cmp
stos
xor
and
pop
sti
sti
adc
aaa
add
cmp
out
cmp
ss
insl
roll
js
aam
pushf
add
jns
cmpsb
xor
jmp
push
and
jbe
adc
loope
es
les
faddl
lods
ljmp
push
repnz
pop
adc
cmp
mov
lcall
popa
mov
imul
add
rcrb
repz
and
push
stos
push
popf
and
mov
cld
add
testl
xchg
lods
pop
inc
cmp
fbld
pop
aaa
scas
shl
imul
cmp
data16
push
cmpsb
cmp
test
xor
and
pop
pop
add
dec
std
xor
sub
std
bound
sbb
ds
cmp
cld
pushl
stos
dec
cld
je
jp
or
out
adc
pushf
fmuls
adc
push
mov
es
push
xlat
jp
xchg
mov
pushl
or
out
fdivrs
stos
jp
and
daa
and
mov
mov
xchg
jb
shrb
xchg
in
or
xchg
mov
test
addb
fs
jg
repnz
cmp
or
jne
subl
add
sub
push
js
add
lcall
pusha
sub
pop
jp
cmp
mov
sub
jne
mov
sbb
imul
mov
lret
rcll
inc
cs
pop
ror
and
clc
dec
dec
repnz
call
or
pushl
pop
addr16
sbb
jge
sti
jno
in
xchg
ja
cmp
mov
sbb
mov
pop
sub
push
xchg
inc
xchg
add
sub
movl
sub
push
call
xor
cmp
adc
dec
sub
imulb
pushf
fcmovbe
mov
push
cmp
ja
xor
sar
cmp
std
sbb
std
add
sbb
inc
adc
xor
sbb
ljmp
clc
add
rcrb
test
loopne
xchg
jge
test
sti
and
repz
outsl
js
flds
js
pop
cmp
mov
outsl
fmul
scas
or
xor
addb
pop
jge
sub
and
inc
fcoms
jg
cmp
xor
idivl
mov
fbstp
mov
imul
or
cmp
inc
shll
enter
pop
cld
mov
repnz
pop
imul
push
dec
cli
mov
ljmp
jb
sub
mov
dec
nop
mov
mov
inc
mov
xchg
jbe
imul
mov
aam
xchg
jmp
jb
adc
cli
sub
xor
lods
xchg
push
push
stos
sub
movsl
lret
out
rol
incl
cld
or
ds
sbb
mov
lahf
mov
test
xchg
dec
pop
fsubs
lea
daa
pushl
aaa
imul
inc
js
cmp
out
lcall
call
lods
inc
jp
test
pushl
jge
nop
xchg
rorb
add
pop
pusha
cmpsb
pusha
mov
sub
lahf
xchg
dec
incl
and
faddl
xchg
mov
sahf
mov
inc
jp
lock
lods
dec
mov
pop
jp
adc
jg
pop
push
sbb
jl
push
or
jbe
shl
jg
xchg
pop
sub
dec
fidivs
xor
aad
pop
lahf
ret
cmpsl
jb
jg
outsb
popf
lcall
test
cmc
pop
jb
pop
cmp
adcb
xchg
enter
sub
out
jns
push
cmp
in
hlt
and
lret
lcall
mov
mov
cli
push
mov
dec
mov
sahf
lcall
xor
mov
or
test
scas
add
add
cmpsl
idivl
mov
cmpsb
push
push
clc
cmp
call
stc
aaa
outsl
pop
cmc
push
int
cli
in
data16
or
cmp
sub
fisubs
sub
push
dec
sbb
mov
aas
outsl
dec
leave
sub
std
cmp
sbb
pop
movsb
fwait
sbb
inc
into
ja
std
decl
xchg
icebp
sbb
fisubrs
sub
push
adc
rcl
insl
and
gs
inc
stos
scas
in
xlat
cli
stc
xor
out
and
adc
cmp
or
dec
push
or
popf
jle
mov
sub
sub
cltd
cmc
sarb
fwait
cs
out
xor
jmp
mov
and
testl
add
and
out
xor
sub
in
dec
dec
fnstcw
push
arpl
incl
scas
clc
int3
sti
pop
mov
push
add
ss
pop
dec
std
mov
dec
mov
jl
decb
gs
mov
mov
test
aaa
sbb
fisttps
mov
xor
aaa
jbe
push
lds
jge
nop
cmpsb
pop
mov
cmpb
std
xor
mov
mov
or
andb
pushf
inc
nop
out
cmp
dec
mov
mov
stc
stos
xchg
shll
dec
or
xchg
sbb
mov
mov
int
ret
push
rcrb
nop
lret
sub
mov
xchg
lock
xor
in
icebp
scas
and
iret
adc
or
adc
fcom
test
jo
or
mov
shll
fstp
je
in
dec
int
jo
xor
mov
lcall
ja
jecxz
adc
lret
mov
mov
dec
push
mov
xchg
mov
jl
pusha
cld
mov
cmpsb
sar
ret
inc
outsl
dec
mov
jecxz
aam
out
mov
pop
inc
out
std
stos
call
imulb
dec
mov
cltd
lock
je,pt
cs
out
sbb
and
add
pop
test
mov
push
mov
adc
dec
adc
pushl
push
cli
popf
or
mov
dec
repz
mov
pop
or
pop
pop
and
mov
insb
add
movsb
shl
adc
inc
fistl
pop
adc
imul
cmp
mov
lcall
scas
imul
lahf
mov
adcb
gs
pop
dec
xor
ss
stos
sbb
jno
push
xchg
movsb
jg
pop
loopne
cmp
js
push
bound
addr16
pop
cmp
sahf
outsb
mov
ficomps
pop
push
or
xchg
and
mov
jecxz
sarl
jl
xchg
je
lock
in
sbb
sbb
lret
out
inc
arpl
sbb
pavgb
ljmp
shr
jne
sbb
cmpsl
adc
mull
push
es
mov
jl
aas
xor
ret
mov
jecxz
cmp
mov
sahf
jg
pop
js
mov
lock
dec
js
jl
decl
dec
jecxz
insb
mov
fnstsw
xor
xlat
push
add
cmp
icebp
fbld
inc
icebp
mov
scas
loopne
test
adc
mov
rcll
pop
inc
cli
jg
xor
jne
cmp
pop
sub
ret
mov
repnz
pop
js
aad
andb
shlb
popf
push
lret
pop
mov
jg
pop
push
idivl
idiv
incl
cld
mov
pop
loopne
imul
testb
insb
dec
adc
fldt
stos
cmp
mov
sub
dec
imul
call
incb
inc
sbb
das
add
or
mov
fs
pop
popl
mov
pusha
mov
pusha
and
loope
jne
sbb
sub
scas
loope
sub
mov
add
pop
sarb
push
cld
outsl
mov
adc
or
sub
aam
je
xchg
xorl
movsl
jbe
mov
rcll
mov
add
fcomps
mov
mov
das
stos
dec
aam
lret
and
hlt
fucomp
pop
push
push
nop
mov
jne
inc
nop
popf
add
insb
lock
mov
mov
dec
mov
ljmp
mov
add
xchg
xor
push
jo
imul
mov
mov
add
dec
or
loope
push
cmc
pop
and
insl
cld
and
mov
fdivp
adc
mov
ja
aaa
sarb
sbb
or
decl
and
es
lret
mov
pop
jno
in
mov
mov
jg
xorb
jnp
push
out
sbb
hlt
sbb
sub
xchg
mov
clc
pop
jmp
and
jecxz
push
jecxz
mov
pop
clc
cld
and
mov
xchg
add
xchg
dec
filds
outsb
arpl
cld
ss
xor
test
inc
cmp
in
mov
pop
shlb
ja
pop
lock
lock
xlat
mov
xchg
incb
rorl
das
aam
ja
push
fdiv
int
or
xor
sub
jg
add
sub
mov
jae
push
and
scas
xor
aas
add
mov
xor
pop
dec
mov
xor
sar
icebp
mov
lcall
lret
cmpsl
in
inc
shlb
push
jg
enter
jle
xchg
add
enter
icebp
mov
lcall
mov
jecxz
cmp
ret
mov
push
stos
out
mov
mov
ret
mov
xor
sub
push
lret
cli
int
fnstsw
loop
lahf
out
dec
testl
test
dec
stos
in
push
adc
jns
jne
push
xchg
pushf
xor
mov
repnz
inc
mov
repz
mov
sub
push
std
or
lret
fs
adc
cli
jl
inc
jge
out
sub
xor
mov
mov
call
test
mov
lcall
push
mov
add
arpl
sbb
mov
and
xchg
int3
test
popa
jmp
sub
sahf
mov
popa
mov
xchg
addr16
cmp
mov
xchg
je
in
scas
fbld
pop
xor
mov
sub
xchg
mov
inc
dec
jl
push
fcomp
pop
ret
cmc
jmp
iret
xlat
gs
loopne
stc
inc
neg
flds
sub
ljmp
insb
cld
std
add
sahf
xchg
mov
iret
jmp
inc
idiv
xlat
xor
sub
jecxz
ret
rcrb
shrl
test
adcb
xor
addr16
popf
repz
or
xlat
mov
mov
adc
inc
mov
inc
loopne
jg
cmp
cmp
jge
push
out
sbb
jns
clc
and
ja
inc
sti
pop
mov
mov
test
je
mov
xchg
cmpsb
test
dec
jmp
dec
inc
cwtl
or
mov
fsqrt
decl
adc
lret
adc
inc
repz
out
adc
jmp
fsub
sbb
xchg
pop
mov
push
call
mov
xlat
or
xchg
push
push
push
pop
pop
imul
cli
in
push
sub
push
test
xchg
or
dec
call
mov
sbb
inc
ret
incl
add
dec
mov
inc
jecxz
movsb
ds
es
scas
pop
clc
stos
dec
xchg
sub
push
lods
dec
or
pop
push
jo
mov
arpl
or
pushl
cmp
xchg
push
mov
cld
loope
sbb
in
mov
pop
dec
lret
or
cs
xor
cmp
pushf
shrb
repz
sarb
daa
gs
mov
xchg
pop
clc
and
in
push
loop
test
incl
inc
inc
addr16
push
mov
mov
inc
subb
mov
inc
inc
into
xchg
adc
mov
mov
or
pop
inc
xchg
lock
sub
cs
jle
andl
test
shrl
loopne
ljmp
xchg
call
and
xor
pop
xchg
popa
std
push
outsb
aam
rclb
loop
aad
and
mov
dec
inc
cmp
fldt
push
out
dec
or
mov
jno
dec
ljmp
je
scas
inc
adc
cli
movsb
and
xchg
lock
dec
xchg
data16
rorb
mov
push
dec
jg
inc
mov
imul
out
orb
bound
pop
repnz
fs
sub
push
pushf
stos
out
dec
mov
push
pop
imul
xchg
lea
xchg
mov
or
mov
decl
adc
jp
lahf
xchg
subb
lcall
dec
cmp
test
cmp
inc
sarb
dec
sbb
shl
and
ss
das
mov
jp
scas
out
pop
jbe
in
mov
mov
or
mov
dec
mov
push
decl
test
push
cmc
dec
lods
mov
jmp
jl
sbb
xchg
loope
ja
stos
and
dec
sbb
mov
pop
jnp
pop
cmp
call
test
mov
test
clc
mov
sub
mov
sbb
movsl
jecxz
xchg
jle
cmp
pop
jg
mov
iret
idivl
sbb
and
andb
dec
cmp
subb
je
lock
mov
out
jae
popa
test
ss
bound
jle
mov
rcr
lock
int
test
or
std
fsubrp
lods
add
cld
mov
pop
inc
lods
cwtl
inc
push
js
mov
popa
jo
cltd
xor
fcomip
dec
bound
cld
push
mov
popf
fcmovnb
lcall
mov
cmp
or
xchg
add
cmp
es
cld
xor
lret
push
jl
inc
arpl
test
add
call
sbb
lahf
dec
and
adc
imul
loopne
pushl
test
bound
inc
ljmp
jae
pop
adc
xchg
sar
call
sarb
mov
push
iret
adcb
gs
lods
bound
dec
inc
sahf
adc
mov
mov
aaa
fists
jp
mov
jmp
fisubrl
mov
cwtl
lcall
test
mov
xor
inc
mov
lock
insb
xchg
outsl
xchg
rorb
das
pop
icebp
pushl
and
pop
pop
jecxz
loope
push
pushf
popa
lret
mov
in
call
adc
xor
push
pop
inc
dec
pusha
or
jne
sub
rcrl
loope
addl
push
push
inc
lahf
mov
sub
sub
cmp
mov
pop
mov
inc
add
push
lds
xchg
mov
and
sub
and
enter
ret
push
jle
cmp
lret
lds
inc
adc
dec
mov
fwait
or
mov
mov
incl
sbb
shlb
xor
xor
divl
stos
jns
int3
iret
mov
xchg
addr16
pushl
roll
add
inc
in
sti
pop
dec
loope
fimuls
js
hlt
sar
jmp
mov
pop
xchg
int3
xchg
les
push
call
mov
adc
cmp
test
jmp
mov
push
pop
mov
cli
sbb
mov
insb
mov
sub
fimuls
das
sub
push
mov
sarl
and
pop
jno
fs
shll
mov
dec
rcrb
mov
stos
cs
push
cmp
cmpsb
mov
into
adc
dec
inc
arpl
mov
sub
pop
scas
mov
jg
sbb
shrl
jmp
movsb
mov
lock
adc
mov
push
std
mov
cmpsl
xchg
and
adc
xchg
adc
cmp
ljmp
in
es
insb
in
add
mov
addr16
scas
inc
out
fidivrl
fwait
push
adc
imul
ret
xchg
inc
ljmp
xchg
xchg
mov
in
jge
sub
pop
ljmp
sub
and
mov
add
or
call
andb
sbb
decl
ret
mov
dec
sbb
test
jge
pop
test
mov
hlt
les
fdivrs
push
cs
cmc
scas
addl
push
mov
cli
pop
sbb
data16
pop
fsts
sti
or
out
push
fstpl
fistps
dec
adc
shr
or
popl
sub
dec
outsb
add
cli
adc
sub
cli
cld
mov
sahf
mov
insb
daa
mov
in
add
add
jl
idivb
or
pushf
je
clc
addr16
mov
or
mov
pushf
cld
int3
adc
idiv
push
cmp
nop
sub
or
jp
cmc
movsb
cmpsb
and
pop
ss
mov
shl
pusha
sbb
xchg
incl
sahf
out
cmpl
rcrb
push
mov
shl
into
mov
jb
clc
sar
add
lock
add
push
icebp
ljmp
clc
cmp
jg
lahf
nop
addr16
pop
jo
pop
cmp
push
pop
cli
xchg
push
loop
mov
jne
xlat
add
test
enter
mov
inc
movb
add
mov
movzwl
cli
addb
data16
pop
pushf
std
dec
loope
scas
sub
fildl
mov
or
lret
xor
mov
and
cmp
push
or
fcomi
jo
jo
cli
adc
sbb
stos
mov
outsb
inc
sub
cmp
ja
sub
setns
out
inc
add
jnp
push
or
cmp
movsl
inc
mov
jmp
push
push
mov
pop
out
scas
xor
cmp
and
mov
or
inc
loope
sbb
xchg
sbb
mov
jg
mov
mov
lock
mov
jecxz
mov
push
jle
add
push
imul
inc
cmpsb
int3
mov
out
cmp
adc
mov
and
testb
ficompl
dec
movsb
inc
dec
xchg
pop
out
add
add
call
fisttpll
addl
sarb
pop
icebp
lods
lret
ds
rcr
add
cs
mov
daa
mov
lods
call
add
push
repz
mov
cmp
jg
mov
push
enter
push
or
sbb
mov
in
or
das
cli
jge
mov
xor
dec
adc
rolb
leave
fnstcw
bound
pop
leave
push
fimuls
jmp
pop
in
inc
and
sbb
inc
repnz
lret
outsl
cmp
sbbb
scas
nop
lds
inc
cmp
add
hlt
aas
sbb
push
rclb
nop
scas
push
adc
test
jg
sahf
or
mov
jecxz
mov
cmp
dec
ds
add
add
jg
mov
int
adc
aam
cli
add
movl
in
gs
pop
aad
ror
std
das
cli
decl
mov
push
pop
lods
sbb
rcrb
mov
aam
orb
xchg
add
jmp
dec
mov
ljmp
cmp
mov
sub
adc
das
adc
push
sub
cmc
push
push
or
inc
jmp
stos
fwait
or
xchg
cmp
mov
rcrb
ss
and
and
stos
mov
sbb
cwtl
andl
scas
jmp
enter
mov
add
jp
lcall
je
outsb
insl
sahf
in
dec
shrl
lock
out
test
insb
cli
shll
std
inc
jne
cmp
jne
dec
lcall
mov
fsubl
dec
or
jecxz
jle
mov
xor
xchg
packuswb
fs
xchg
movsl
jge
adc
mov
je
cmpb
push
out
outsb
sub
lods
pop
outsb
and
fcomip
pop
decl
into
xor
movb
mov
roll
inc
push
je
add
jo
orb
stos
sub
jno
loopne
inc
scas
ret
jecxz
aas
inc
cli
nop
cmp
push
inc
andb
or
mov
add
xchg
xchg
negb
lock
xchg
test
mov
push
out
clc
jmp
pop
cwtl
mov
mov
movsl
fsubs
pop
and
inc
jne
hlt
and
mov
mov
cltd
in
imul
stos
inc
mov
xchg
pop
imul
dec
jp
mov
fisubrl
sbb
adc
ljmp
sub
add
xchg
in
out
aas
jo
xor
mov
push
xchg
fcompl
es
mov
xchg
mov
pop
add
pop
or
mov
ljmp
sbb
out
mov
lock
cltd
jbe
jno
xchg
push
lods
mov
imul
pop
mov
lret
add
cltd
lds
ja
nop
cmc
push
mov
addb
cmpsb
pop
inc
fists
mov
clc
jmp
nop
pop
adc
mov
lahf
xchg
mov
jg
mov
mov
dec
sbbb
int3
fiaddl
jno
sbb
cmpsb
or
adc
ds
ljmp
add
jg
mov
pusha
xchg
xchg
and
mov
and
push
in
ds
mov
mov
sbb
idiv
mov
cli
adc
xchg
push
cmp
ret
test
in
enter
repnz
mov
xchg
mov
cmp
fwait
ds
out
adc
int
mov
jg
stos
lds
add
adc
call
xor
fcmovnu
cmp
xorb
mov
loope
pop
cld
cmpsl
push
push
leave
test
loop
int3
leave
addl
jle
dec
negb
push
pop
lahf
dec
fdivr
push
pop
pop
sub
mov
sub
loopne
lret
sbb
ljmp
and
pop
mulb
sub
and
adc
outsl
mov
jge
xchg
jae
cmp
lods
or
fcomip
icebp
pop
std
stos
mov
fstl
sub
sub
inc
xor
fisubl
jns
xor
dec
jecxz
push
incl
cmp
mov
adc
int3
inc
leave
fistl
dec
jp
xlat
ja
inc
mov
dec
out
sub
push
clc
fwait
incl
fdivl
cmpsb
push
dec
cmp
loope
int3
push
aaa
jmp
jns
subb
sub
xchg
jle
js
fcoms
je
into
insl
sub
stc
insb
or
rorl
into
lcall
lret
cmp
and
ljmp
jmp
pushf
dec
mov
test
scas
dec
lret
jb
pop
lock
xor
xor
sub
lods
call
addb
xlat
scas
xlat
fmul
enter
ret
aad
ss
repnz
cmp
sub
fisubs
clc
dec
jmp
not
loopne
stc
lahf
pop
out
xchg
inc
imul
aaa
pop
or
mov
ja
dec
mov
out
je
xor
adc
repnz
daa
rcrl
sbb
xchg
ret
jns
insb
std
filds
inc
sti
out
dec
jmp
cmp
jge
inc
in
jno
adc
pop
in
and
jg
imul
aas
repz
rolb
test
int3
pop
cmc
cmpl
push
out
popf
or
call
std
or
les
pop
sbb
sub
and
jo
into
cmpsl
mov
xchg
add
add
jg
lcall
and
in
test
ror
add
das
jo
fsubr
mov
incl
mov
aam
pop
scas
jle
sbb
lods
inc
lods
ficoml
or
pop
pop
repnz
xchg
or
mov
sub
lock
add
addr16
inc
iret
dec
mov
fildll
fldenv
repnz
dec
and
dec
jmp
jae
movsb
mov
sub
daa
cs
jge
inc
or
ljmp
xor
push
jg
gs
js
lods
outsl
push
shr
add
sub
nop
jbe
scas
pusha
loop
test
incl
or
sarl
adc
shll
add
jmp
rcrl
lcall
and
aaa
sub
mov
imul
mov
clc
fistpll
das
mov
mov
jne
mov
pop
pop
push
test
shll
add
ljmp
add
sub
iret
pop
popa
pop
aam
xor
shl
adc
rcll
push
push
nop
decl
inc
jecxz
mov
or
out
lea
push
mov
pop
cs
cs
ds
cmc
movsb
fstl
add
add
cmp
jae
fwait
loop
dec
ja
clc
aaa
and
mov
addb
xchg
lret
ffree
ss
js
fidivrs
loopne
mov
jg
cmp
cmp
loope
pop
push
mulb
jae
or
rolb
xor
outsb
fistpll
mov
dec
dec
pop
xor
push
addb
stc
repnz
jl
ret
mov
mov
mov
out
inc
dec
data16
gs
outsb
test
jl
jge
xor
insl
mov
mov
sarl
jle
adc
xchg
jl
and
push
cmovs
pop
mov
lock
sarb
jg
orb
xchg
cmp
loopne
dec
push
imul
pop
and
or
icebp
pushl
sbb
outsb
add
xchg
rcr
bound
dec
int
fs
subb
bnd
mov
fdivr
fildll
push
xor
jmp
sub
push
xor
xor
pop
and
and
lods
jne
es
dec
ja
lcall
push
and
out
cs
je
inc
xchg
pop
xchg
repz
sarb
jns
jno
push
outsb
lock
jle
je
clc
dec
hlt
pop
dec
push
sbb
inc
sbb
mov
sbb
sbb
lcall
int3
pusha
xchg
pop
pop
xor
mov
lret
test
mov
mov
dec
ss
ljmp
data16
dec
enter
push
pop
cmp
inc
dec
fidivrl
lcall
jp
out
adc
add
xor
xchg
xchg
lods
jecxz
xor
cltd
pop
jge
push
js
lcall
call
pusha
movsl
jne
xor
sbb
call
fs
icebp
sub
mov
and
call
jg
mov
das
xchg
sbbb
stos
mov
ret
jns
and
pop
push
xor
jp
or
fs
jl
scas
aam
mov
mov
outsl
inc
xchg
test
dec
dec
sub
mov
adc
ret
lahf
cs
xchg
aas
inc
inc
cwtl
call
ret
pop
fnstenv
loopne
push
rorl
idivb
lahf
and
mov
mov
cmc
pop
fwait
outsb
insb
mov
mov
pop
cmp
pop
dec
gs
or
pushl
xor
leave
cwtl
cmp
aad
dec
les
cmp
lahf
cmp
mov
clc
mov
sbb
inc
add
fldt
outsb
in
xor
mov
mov
push
jp
aaa
adc
dec
clc
jne
and
scas
jg
mov
fwait
pop
cmp
sbb
dec
pop
mov
sub
pop
lahf
and
mov
sarb
or
cmp
dec
popf
xchg
out
push
divb
mov
adc
or
jae
cmp
in
push
push
xchg
movsb
aas
pop
insl
cmp
push
adc
mov
mov
cmp
mov
jg
or
rcrb
push
mov
aaa
pop
clc
jmp
or
pop
stos
mov
ja
sahf
mov
rolb
push
adc
mov
fistl
outsl
mov
sub
mov
scas
inc
stc
lds
mov
adc
stc
adc
sbb
test
xor
jge
in
loop
xchg
mov
out
jg
sub
xor
mov
fsts
pop
aas
xchg
ja
test
out
xchg
fdivl
mov
mov
stos
xor
int3
pop
or
popf
cli
pop
pop
js
push
pushl
xchg
movsl
lock
fstl
js
or
aaa
cld
jg
sahf
add
mov
movsb
push
je
add
fs
lret
decl
pushl
nop
mov
mov
xchg
or
incl
cmp
mov
mov
aam
fcmovnu
cmp
movsl
mov
lock
or
inc
or
fmull
or
insb
mov
jg
shl
in
fistps
mov
decl
js
xor
jl
das
xchg
lret
daa
enter
jmp
in
xchg
aas
pop
lea
xchg
add
pop
mov
dec
sub
and
lods
jbe
scas
into
cli
lcall
cs
mov
mov
mov
daa
clc
mov
jl
xchg
jecxz
ror
add
adc
lcall
xchg
jno
mov
xor
jge
adc
mov
cmc
push
outsl
int
out
scas
outsl
clc
in
cmp
ds
mov
out
sub
insb
mov
jg
leave
xchg
cltd
sub
dec
fwait
jnp
push
dec
into
xor
pop
pop
jmp
std
out
push
pop
mov
pushf
popf
push
scas
cld
mov
cmp
xor
je
add
sbb
fstp
or
es
lds
cs
add
dec
cld
cwtl
sbb
cltd
inc
ja
mov
mov
sbb
test
filds
sbb
inc
dec
dec
push
and
xchg
xor
test
inc
mov
scas
ss
add
jl
mov
pop
addb
adc
jle
decl
sub
hlt
es
clc
daa
and
enter
aad
jbe
fnstsw
movsb
mov
or
pushf
dec
cmp
inc
aaa
hlt
push
insb
std
lcall
xchg
rcll
jnp
add
inc
mov
or
sar
mov
stos
subl
xlat
lock
fwait
pusha
mov
jae
sbb
sahf
xorl
jae
mov
icebp
jge
sbb
ljmp
and
push
mov
test
shll
ret
pop
inc
xor
insl
xchg
add
mov
out
mov
xchg
rcr
mov
pop
mov
lcall
js
cs
jns
jle
push
out
loop
jl
aam
cmpb
jmp
iret
inc
jo
cmpsl
in
mov
scas
pop
das
lar
add
jg
pushl
xchg
int3
adc
add
jnp
lods
ret
bound
push
imul
out
jne
mov
xor
leave
aam
inc
aas
rorw
out
shl
and
hlt
jg
aad
xchg
fsubs
mov
out
pop
iret
loop
push
sub
pop
fsubrs
and
jle
mov
cmpsb
jo
sbb
pushf
jp
cld
ljmp
jno
dec
inc
adc
sub
cmp
jle
outsb
in
or
lock
lods
shrb
outsb
loope
or
or
ss
ljmp
jmp
adcb
mov
xor
xchg
mov
std
in
ljmp
sbb
data16
sbb
cmp
jae
jge
dec
mov
cmp
hlt
aaa
mov
sbb
xchg
mov
ja
test
cli
add
clc
or
jecxz
sub
dec
jl
xchg
cmp
push
pusha
mov
ficomps
jns
add
lds
sbb
jb
cld
popf
sub
in
xchg
sub
dec
ror
imul
in
imul
out
jo
inc
imul
jbe
mov
stc
shlb
int3
lcall
sti
add
int3
test
mov
push
popa
push
std
sbb
xor
jnp
jg
cli
das
cmp
popa
jae
xchg
xlat
lret
xchg
loopne
jb
adcl
inc
dec
pop
xchg
adc
adc
repnz
push
mov
jno
xchg
cld
ljmp
cltd
cmp
cmp
in
jp
sbb
sbb
jg
into
dec
pop
cmp
or
ja
add
xor
push
mov
or
dec
inc
cmp
insl
cli
out
out
mov
es
ljmp
cmp
dec
jg
pop
mov
loop
push
inc
ja
ret
sbb
sahf
mov
insb
das
cli
adc
std
or
dec
scas
ret
inc
fmul
jo
test
dec
fidivs
cltd
lock
out
mov
out
fisttpl
mov
arpl
mov
mov
testb
mov
bound
cld
ret
mov
mov
mov
roll
dec
lahf
cmpsb
jle
ret
xchg
push
inc
mov
es
push
adc
xchg
popa
hlt
adc
fistps
sahf
call
out
mov
lcall
push
sti
popa
in
out
jge
mov
dec
sbb
fdivl
fsub
movsb
jg
mov
jo
dec
ss
rol
inc
mov
decl
inc
clc
mov
outsb
repnz
orb
pop
cmp
sbb
adc
cmp
mov
xor
push
xor
insl
in
mov
push
repz
pop
aaa
xchg
scas
dec
stos
add
adc
imul
xchg
insb
popa
out
ret
dec
ljmp
call
xchg
mov
rsqrtps
pop
shll
enter
sub
sub
and
push
push
out
and
clc
mov
inc
mov
les
icebp
jp
pop
mov
inc
lods
add
and
mov
xor
inc
clc
es
test
mov
cld
jmp
jbe
hlt
scas
sub
mov
inc
add
popf
in
pusha
in
adc
mov
in
mov
fcomip
adc
insb
popf
pop
int3
int
stc
mov
repz
xor
insl
mov
incl
adc
mov
ret
sahf
icebp
stos
ljmp
dec
sub
lret
pop
in
out
mov
mov
fildl
rcrb
mov
add
xor
fadd
popf
pop
std
lds
out
adc
mov
outsb
add
aam
xchg
mov
call
in
les
inc
dec
stos
int3
gs
test
rcrb
sub
nop
adc
xchg
hlt
jno
inc
mov
cld
mov
out
add
dec
lds
test
mov
cmc
rclb
sbbb
lock
pop
sub
mov
movsb
aas
mov
leave
xchg
inc
enter
cmpsb
push
sarl
adc
pop
xchg
xchg
cld
ss
cwtl
pushl
fsubrp
inc
xlat
orb
cwtl
sub
pop
ret
and
inc
add
addl
ret
mov
repnz
lds
cli
xchg
or
push
inc
and
mov
icebp
les
adc
call
xchg
xchg
lods
cwtl
lret
add
adc
nop
jae
rcrb
jg
push
mov
inc
cmp
iret
dec
and
xor
or
pop
loopne
or
addr16
cmp
mov
push
push
pop
rcrl
int
mov
sbb
fsubr
mov
syscall
ret
inc
insl
xor
out
xchg
mov
xor
cmp
jge
int
data16
xchg
mov
fbld
cld
xor
add
out
movsl
jg
ljmp
icebp
sbb
xor
dec
or
push
xor
mov
jno
add
fnsave
sbb
incl
pop
mov
aaa
rcr
add
dec
xchg
rcll
sarb
or
das
rcrl
decl
rcr
mov
out
hlt
xchg
mov
sbb
stos
mov
xorl
pop
jo
scas
in
js
dec
fs
mov
xchg
xchg
sbb
icebp
sbb
lcall
inc
adc
cmp
add
mov
sbb
cmpsb
cmp
cli
clc
int3
sub
xchg
jl
sub
in
lcall
or
adc
push
push
inc
xor
lcall
cli
shr
pop
lahf
push
mov
xor
pop
popl
scas
cwtl
jbe
or
xchg
and
je
fs
incl
mov
sbb
push
xchg
fildll
popa
ljmp
and
test
push
add
test
sbb
pop
cmc
icebp
fwait
xor
push
ror
imul
int3
cmp
pop
mov
push
mov
or
mov
sar
pop
dec
loope
aas
clc
gs
jle
inc
addl
adc
in
jg
inc
mov
test
hlt
incl
mov
test
cmp
outsb
pop
add
mov
inc
inc
mov
pop
mov
ljmp
push
add
loope
xchg
pop
sahf
insb
mov
cld
add
fcompl
xchg
fwait
xchg
or
enter
mov
pop
dec
movsbl
cmp
call
cltd
dec
mov
pop
jmp
sub
sbb
mov
popa
clc
movsb
ljmp
daa
into
sbb
mov
pop
push
sub
xor
js
mov
pop
mov
cld
jg
in
out
cmpps
out
lea
mov
jg
test
mov
loop
jle
xchg
out
xchg
jno
sahf
and
daa
scas
aad
cmc
dec
sahf
sbbl
pushl
fnstcw
enter
out
clc
mov
jo
clc
cmc
ss
mov
pop
jge
ss
mov
xchg
adc
dec
cmovb
push
xor
sub
fidivs
jl
mov
call
mov
divl
xor
pushf
mov
or
pop
and
push
sbb
or
sarb
jg
mov
jo
fndisi(8087
jne
pop
std
or
xchg
repz
push
add
or
decl
or
or
das
pop
ret
sub
inc
fistl
clc
popa
jmp
push
dec
push
fildll
into
push
add
jge
ds
call
xor
sub
push
into
mov
mov
arpl
stos
jns
jo
repnz
int3
rcr
cmp
push
push
popf
les
ds
dec
iret
aaa
pop
push
inc
jb
daa
push
std
sbb
push
dec
dec
or
mov
add
fisttpl
ja
push
jo
aad
lea
clc
adc
mov
mov
sbbl
jg
pop
dec
cs
and
xor
cmp
inc
dec
mov
ljmp
out
ss
cmp
cltd
mov
xor
in
xor
inc
inc
pop
incl
sbb
dec
cmpsl
lock
mov
sub
cmp
jbe
sub
outsb
inc
add
loopne
in
add
xor
mov
sbb
pop
add
push
int3
loop
sbb
pop
push
stc
sbb
cld
mov
and
sub
xchg
jecxz
xlat
movb
xlat
inc
jo
inc
inc
leave
inc
adc
xchg
pop
mov
in
ss
inc
add
mov
fists
cmp
stc
stos
adc
lahf
stc
popf
add
pop
shl
pushf
add
sbb
push
dec
sar
call
add
outsb
popa
lods
cmpsb
iret
insb
push
les
insl
pop
data16
push
push
int3
dec
cmp
push
mov
mov
push
pop
push
jg
inc
ss
mov
imull
mov
adcl
aas
sbb
mov
icebp
outsl
jne
insl
cs
push
pushl
aas
ret
cld
jmp
mov
mov
pcmpeqb
je
jecxz
adc
mov
mov
sbb
fisubrs
clc
mov
incb
mov
out
xchg
mov
in
jo
inc
cmp
xor
movsl
dec
pop
sar
mov
push
sbb
mov
incl
decl
stos
add
ret
adc
adc
push
leave
in
ds
imul
insb
decl
jo
sub
into
or
subl
cmc
adc
mov
mov
cmp
adc
add
mov
nop
popa
jp
jl
cmp
push
mov
dec
fsubrl
pop
mov
ret
mov
std
call
nop
lds
out
neg
push
cmpsl
mov
sahf
pop
and
jl
pushf
fimuls
or
int3
lock
mov
push
xchg
and
decb
shll
adc
adc
jecxz
fisttpl
mov
popf
add
pop
inc
enter
pop
sub
test
push
lock
lahf
sub
inc
jg
dec
mov
in
sbb
movsb
mov
sub
pop
inc
mov
cli
dec
sbb
out
mov
fadds
call
push
sbb
ss
addb
cmp
fistps
cmp
dec
dec
loopne
dec
sets
add
out
push
insl
lods
push
loop
andb
adc
xchg
cwtl
lret
pop
and
ljmp
test
out
bound
push
stos
pop
jl
faddp
adc
push
or
mov
mov
int
enter
dec
and
pop
mov
icebp
psraw
dec
xor
outsl
xor
cli
jmp
movsl
push
dec
cmpsb
outsb
sub
mov
mov
incl
je
and
sbb
popa
pop
ss
jle
mov
sbb
adc
xor
sahf
ljmp
out
pop
in
mov
push
into
push
shrb
idivb
lret
out
sbb
pop
fimull
imul
xor
mov
mov
sub
aaa
std
adc
xchg
mov
mov
incb
xlat
daa
popf
pop
aam
mov
push
sar
sbb
subl
sub
in
adc
mul
xor
adc
push
aaa
jb
scas
sbb
and
decl
lret
cmp
repnz
push
shll
xchg
cld
mov
jmp
cli
incl
cld
outsb
cmpsb
xchg
mov
out
in
push
mov
test
hlt
js
sub
insl
jp
popa
push
mov
out
lcall
sub
and
jmp
push
lods
pop
stos
sti
das
xchg
aas
sub
pushl
cmpsl
dec
pushf
push
bound
sti
inc
adc
sbb
jmp
mov
imul
sahf
xor
test
decl
pop
test
push
cli
jae
push
lahf
loop
aad
fwait
cmpsl
sahf
incl
es
aad
loope
lock
test
outsb
add
jno
out
mov
out
cmp
pop
js
je
add
jg
mov
xlat
sbb
jns
fbld
fadd
cmc
xchg
rorl
lcall
das
loope
pusha
and
js
pop
out
jo
call
sbb
dec
lret
imul
stos
mov
inc
or
fildll
add
jmp
in
repz
mov
sub
sbb
jg
test
jl
movsb
cmp
lock
inc
sub
lods
jnp
adc
nop
sar
adc
fisttpll
adc
sbb
and
and
mov
and
ja
push
mov
mov
inc
push
ljmp
js
or
subb
ljmp
outsl
ds
fmull
lock
xorb
xlat
jo
sub
inc
dec
sbb
repnz
lock
cmp
jl
ja
ret
shll
push
lret
mov
sar
test
ret
inc
gs
std
push
imul
dec
daa
dec
and
stos
dec
std
jg
mov
or
mov
push
or
sbb
popa
sahf
push
add
incl
sub
pop
hlt
cli
jns
push
jecxz
push
ret
jg
mov
adc
add
dec
adc
lock
inc
insl
out
repz
ret
sub
or
std
mov
fnsave
mov
and
add
daa
into
sbb
pop
mov
mov
mov
gs
mov
pop
xor
cwtl
stos
pusha
data16
push
pop
pop
std
in
pop
mov
add
cmp
lret
das
cmc
fwait
test
jg
xchg
or
loopne
imul
out
xchg
lret
or
mov
fdiv
incb
sub
pop
and
add
sub
stc
pop
out
int
jle
out
cwtl
inc
pop
or
mov
xor
or
cwtl
mov
inc
mov
mov
std
pop
dec
jp
outsb
clc
pop
push
jg
cli
mov
sub
and
push
or
or
mov
bswap
js
xchg
icebp
mov
movb
mov
jb
jb
adc
bound
xor
jb
pop
cli
incl
jle
dec
jae
pop
es
les
test
jg
push
std
xchg
dec
xor
outsl
ljmp
ljmp
jbe
add
adc
push
dec
mov
lcall
test
mov
sub
inc
xor
pop
or
and
js
arpl
inc
shrb
mov
out
push
cmp
gs
imul
inc
mov
insb
hlt
cltd
rolb
call
mov
inc
mov
cwtl
push
dec
inc
test
aaa
fcoml
fwait
cmpsb
mov
sbb
inc
aad
in
inc
hlt
inc
stos
jle
fistps
cmp
bound
mov
jno
ret
add
ret
aaa
cwtl
mov
mov
mov
sbb
and
sbb
das
cwtl
mov
mov
dec
mov
ret
pop
rclb
sahf
insl
negl
push
sbb
xchg
std
call
lcall
iret
lret
inc
mov
fistpl
mov
sbb
fildll
xchg
mov
imul
xchg
mov
lret
in
repnz
sub
out
jnp
in
pop
cld
stos
push
xchg
and
cmpl
add
lahf
rcl
ret
lock
es
cmp
inc
sar
das
sub
jnp
into
pop
mov
cld
push
lahf
imul
jg
xchg
xchg
dec
add
sub
cld
xlat
mov
into
mov
jle
mov
stos
cs
mov
adc
mov
dec
std
out
add
or
add
adc
mov
fcompl
cmpsb
inc
jbe
and
loopne
clc
sysenter
imul
lcall
outsl
adc
in
or
cld
adc
cmp
sbb
adc
lea
adc
inc
ljmp
hlt
adc
scas
out
push
fidivrl
jg
xchg
mov
movsl
stos
mov
shll
fucomip
addr16
jb
out
pushl
dec
outsb
test
ret
lods
and
rcrb
xchg
call
iret
shl
push
lcall
xlat
pusha
pushl
lcall
ja
xchg
jnp
jo
lock
ss
cmpsb
mov
cmpsb
sub
cmpsl
pop
jle
fwait
clc
jmp
cli
mov
mov
jb
jge
adc
jl
popf
mov
les
push
sbb
fwait
add
pop
and
and
movsb
push
xor
jp
sub
ljmp
push
mov
pop
cmc
outsb
call
shl
or
loopne
xchg
fsts
jg
xor
jnp
xchg
add
out
cmp
aad
cmp
xchg
dec
dec
test
mov
add
hlt
jge
mov
jmp
insb
add
icebp
decl
sub
dec
test
jmp
and
jle
bound
loopne
fs
cmp
push
sbb
sahf
inc
les
pop
push
movsb
out
jo
les
fisubrs
mov
mov
cs
movsb
fdivrp
xor
lods
stos
mov
jo
inc
std
cmc
stos
or
in
xchg
outsb
inc
and
pop
sub
dec
std
xor
add
icebp
jg
shlb
xor
adc
ret
je
xor
xor
xchg
adc
test
jg
sub
pop
jo
lods
xlat
inc
adc
out
cmc
pusha
negl
or
clc
sbb
insb
inc
adc
std
mov
outsl
clc
dec
sub
icebp
mov
jo
xor
jg
push
xor
and
mov
xchg
cmp
pop
in
sbb
das
adc
mov
xlat
dec
xorb
call
nop
leave
mov
add
lret
cmc
ror
ljmp
lods
pop
mov
pop
mov
fcmove
inc
fldt
jge
dec
cmp
fs
or
pop
insb
call
pushf
jg
inc
mov
nop
xchg
sub
mov
test
cmp
ror
in
sbb
and
das
mov
pusha
bound
and
jecxz
mov
divb
insb
and
lods
popf
cld
cld
xchg
sar
lahf
or
push
les
shll
shrl
sti
jg
repnz
jl
addl
mov
les
pop
sbb
lcall
jmp
mov
dec
pop
pop
cli
xlat
addr16
sub
push
ret
ds
jg
mov
insb
dec
xchg
ret
das
and
mov
stos
sbb
scas
xchg
mov
dec
scas
push
cmpsb
push
ljmp
pop
or
pop
add
pop
into
xor
scas
mov
rorb
nop
pop
jne
lods
stos
and
mov
std
rcll
rcrb
ret
test
lock
xor
cmp
scas
lock
cmp
or
int
push
out
adc
mov
sub
shlb
jg
mov
pop
test
dec
ss
add
pop
or
outsl
xor
xchg
xlat
iret
cmp
mov
decb
sbb
xchg
nop
sub
cmpsb
aas
lods
les
nop
dec
mov
mov
xor
icebp
pop
jne
cmp
ficomps
pop
div
popa
mov
test
arpl
icebp
mov
jle
push
ret
int3
pushl
adc
sub
dec
push
mov
adc
and
pop
push
or
clc
jmp
xor
sarb
dec
cmp
lret
sbb
mov
push
add
add
xchg
fists
dec
add
adc
aam
adc
orb
enter
fistps
in
add
mov
gs
sub
lret
clc
pushl
inc
xchg
and
in
rclb
mov
jo
fstps
aaa
mov
push
int3
out
ja
sbb
cli
sbb
fnsave
mov
xchg
sti
dec
inc
adc
ss
adc
shlb
jmp
in
lahf
push
lock
jno
call
push
cld
mov
adc
test
mov
ja
xchg
sbb
ss
rol
enter
data16
adc
lods
jb
arpl
pusha
push
pop
jle
int
fadds
fistl
aad
pop
sbb
addb
jle
ljmp
pusha
mov
movsb
inc
sbb
sbb
push
jp
movsl
add
inc
insb
and
roll
fisubrl
sub
adc
and
jmp
and
mov
out
inc
xor
and
cmpsb
sub
sbb
idivl
add
sub
loope
sbb
add
mov
aas
outsl
out
cli
mov
movsl
ds
inc
sbb
fwait
sub
jnp
pushf
cmc
dec
negb
inc
mov
into
pop
mov
mov
sbb
stos
insb
inc
fdivrl
add
push
test
outsb
ljmp
pop
shlb
add
lods
and
out
into
xorl
sub
xor
stos
hlt
imul
cld
pop
iret
xchg
ret
xor
test
into
js
or
jle
loop
or
or
jmp
cwtl
sbb
lea
fucomp
clc
popa
adcb
mov
and
jg
in
cmp
lods
mov
gs
in
in
xchg
cmp
sub
mov
insb
out
aam
mov
js
hlt
aaa
dec
shlb
mov
sbb
push
and
call
fdivr
xchg
jge
mov
sub
and
or
cmc
daa
test
into
inc
mov
fists
scas
rolb
add
test
and
adc
in
pushf
xchg
mov
cwtl
mov
xchg
inc
cld
in
orb
lret
mov
roll
push
daa
shr
xlat
pop
mov
fisubrs
adc
mov
sbb
mov
ret
or
call
loop
mov
out
and
mov
xchg
int
out
mov
jae
jecxz
or
stc
js
push
ret
xchg
clc
rol
and
xchg
pushf
std
jecxz
or
or
negb
mov
jle
dec
mov
out
mov
sub
rorb
lret
sub
mov
lcall
je
mov
mov
mov
pusha
loop
and
mov
mov
out
and
or
mov
mov
mov
sub
das
ss
and
lods
or
jg
ret
out
mov
mov
inc
sbb
inc
sub
pop
xchg
jle
xor
jl
ljmp
mov
pop
cli
push
jne
lcall
pusha
inc
sbb
fcmovbe
push
mov
movsl
ljmp
jmp
mov
xchg
rorb
sub
jmp
adc
inc
mov
loop
mov
pop
lcall
jle
aaa
or
dec
mov
jmp
add
mov
xor
mov
bound
xchg
test
sub
pushf
add
fcoml
or
gs
push
test
cmpsb
stos
add
sar
out
mov
lcall
dec
dec
in
orb
rcrl
and
xchg
in
sbb
xchg
mov
test
xchg
lock
mov
mov
ret
lock
mov
mov
jp
mov
es
stos
aam
xlat
shlb
mov
sarl
dec
out
in
movd
test
jg
xchg
push
dec
pop
cs
lds
rorl
xchg
in
xchg
and
hlt
add
inc
sub
scas
push
movsl
test
push
cld
ljmp
pushf
mov
xor
sub
jmp
adc
mov
data16
sub
divb
ljmp
cli
fildl
xor
inc
lods
mov
fiaddl
arpl
ljmp
sti
dec
inc
sub
movsb
mov
sar
je
inc
sub
subb
adc
cmp
mov
mov
sbb
jne
test
xorl
es
inc
fdivl
pop
inc
or
push
jns
insb
and
mov
push
jg
movsl
or
call
gs
sbb
ljmp
lock
mov
movsb
ficompl
pop
adc
adc
lock
scas
movsb
sti
mov
mov
jbe
add
xchg
test
fnsave
rcr
mov
cmp
fdivrl
fists
cmp
dec
lods
jg
loopne
cmp
and
test
pop
fwait
mov
adc
push
fcompl
and
clc
adc
filds
jle
pop
adc
lret
push
ja
les
dec
fstl
xor
daa
int3
adc
iret
in
ljmp
cli
pop
icebp
fstl
and
outsb
mov
pop
rclb
xchg
fiaddl
xor
adc
imul
sarl
mov
adc
inc
add
test
gs
mov
ret
es
pop
sbb
dec
xchg
cmp
sub
xchg
mov
cmp
xchg
je
cmpsl
add
mov
imul
fidivs
mov
fdivrp
jg
in
sbb
data16
pop
xor
jecxz
sub
iret
xor
test
out
or
hlt
arpl
sub
call
cmp
adc
cwtl
cltd
movsl
movsb
xor
ds
loope
pop
push
add
xchg
jo
lock
sbb
sub
mov
das
cmp
sahf
rcll
aas
sub
mov
addl
mov
push
cltd
xor
lcall
push
pop
lcall
insl
scas
pop
sub
mov
int3
scas
lock
sbb
mov
jle
mov
sub
insl
sti
loop
pop
dec
adc
bound
mov
mov
push
inc
mov
xor
cmc
xchg
add
pop
ret
inc
insb
mov
rcll
push
add
shrl
inc
sbb
cli
mov
jnp
mov
pusha
loope
popa
lods
mov
and
xor
mov
lcall
sub
jg
stos
ljmp
test
jns
mov
jmp
mov
pop
adcl
das
adc
fsubr
in
imulb
jns
push
packuswb
push
lcall
push
fcoms
call
loop
lret
or
push
and
or
jo
and
sbb
inc
push
lea
pop
pop
adc
or
ret
mov
pop
and
rcrb
cld
pop
loopne
push
mov
xor
mov
insl
les
add
sbb
rcrb
repnz
nop
lds
jg
test
cmpsb
iret
les
pushf
cmp
ret
sub
add
pushl
mov
inc
lcall
icebp
pushl
pop
cli
xchg
int
cmc
imul
test
inc
fdivrs
lcall
mov
pop
lock
stos
fisttpl
add
jecxz
cmp
dec
loopne
shlb
rcrb
arpl
enter
call
sub
push
pop
sbb
sbb
out
add
adc
pop
xchg
push
repz
loop
jg
test
mov
dec
std
pop
fwait
pushf
mov
or
rorl
std
adc
fld
subl
add
mov
mov
orl
out
sbb
pop
out
adc
add
and
adc
mov
mov
fs
or
jg
icebp
fdivr
push
popa
xor
xchg
push
and
jmp
sub
ja
out
inc
dec
decl
lret
dec
mov
aas
or
mov
xchg
push
test
lock
ss
or
push
adc
inc
ficoms
jae
stos
pop
data16
std
or
mov
and
dec
fwait
cmc
fst
sub
jge
pop
sub
daa
mov
push
add
std
popf
xorb
imul
dec
push
jl
inc
cmpsl
into
xchg
rcll
cli
incl
jge
pop
mov
repnz
out
cmpsb
cmp
add
push
dec
sti
pop
fcmove
push
pushl
xor
jl
lret
pop
loope
cld
insb
inc
cmpb
ljmp
mov
pop
xchg
imul
call
cmpsl
add
pop
subb
cli
outsb
ljmp
inc
jmp
dec
and
stos
or
fcmovne
orl
les
mov
ja
mov
jl
mov
pop
cld
jo
sbb
mov
imul
xor
enter
scas
mov
aaa
pop
mov
mov
push
sub
and
repz
scas
in
pop
cmp
sub
outsb
jge
stc
xor
in
repz
lret
jne
mov
inc
loopne
fld
or
pop
rclb
icebp
decl
sti
sbb
sbb
mov
popa
add
or
mov
incl
test
fidivrl
push
lds
int
int
fstl
cmp
jno
pop
repnz
imul
inc
int
xchg
sbb
lahf
dec
call
and
pop
lahf
testb
mov
adcb
dec
xor
push
stc
clc
cmp
add
add
pop
ss
jne
jle
push
sbb
pop
insl
xchg
icebp
test
jl
outsb
mov
mov
pusha
fadd
addr16
mov
adc
mov
in
fwait
lcall
xchg
mov
rcr
cmp
sti
fadds
fildll
inc
es
or
stc
lcall
aam
outsl
outsl
mov
aaa
sbb
movsb
ja
cmpb
inc
call
sub
fninit
cmc
mov
jecxz
nop
jo
push
jl
mov
mov
jle
mov
enter
data16
pusha
pop
xor
or
mov
pushf
mov
push
insl
jg
es
repz
cld
and
popf
mov
sub
gs
sahf
loopne
arpl
adc
lret
push
shl
fbstp
test
xchg
lods
fs
mov
xchg
lret
push
fcoms
roll
cltd
jle
cmp
fdivl
loopne
jp
insb
dec
scas
mov
subl
mov
addr16
inc
ljmp
jns
jl
or
jae
pushf
sub
mov
outsl
ja
pop
mov
mov
push
call
scas
inc
jp
lahf
dec
adc
negb
loop
out
push
iret
inc
ficomps
xchg
ret
cli
into
outsl
add
loopne
stos
outsb
jne
pop
cltd
push
jecxz
xchg
mov
arpl
xchg
push
mov
dec
sub
cmp
sbb
mov
shrl
movsb
or
pop
or
pop
jae
mov
mov
call
fcom
ds
jmp
pop
jmp
ret
shr
loopne
mov
ja
cmp
ret
xchg
clc
in
jno
shlb
adc
adc
pop
pop
pop
dec
fwait
addb
dec
add
lds
mov
inc
lods
jns
ljmp
ret
enter
ljmp
and
and
mov
dec
push
pop
gs
jge
add
lock
mov
or
int3
insl
inc
fldl
mov
mov
cmpl
test
add
adc
inc
sub
push
in
incl
xor
jae
rolb
das
rclb
pop
cli
jne
clc
lret
js
mov
clc
or
fimuls
add
mov
mov
outsb
fidivrs
mov
add
decl
outsb
cltd
mov
in
jne
sar
pop
cmpl
sbb
mov
adc
icebp
mov
cmp
addb
xchg
mov
jg
mov
pusha
mov
fcoms
xchg
movsl
mov
jle
push
mov
jbe
jecxz
jmp
fdivr
add
lcall
mov
mov
lea
icebp
mov
in
mov
fstl
cmp
jbe
or
call
fwait
hlt
daa
lret
rorl
aaa
sub
arpl
incl
dec
popw
adc
dec
nop
fiadds
lcall
cmc
sbb
fnop
outsb
push
cli
dec
ljmp
push
xor
cs
pop
call
add
decb
and
popa
and
and
fs
xchg
fdivr
frstor
adcb
cmp
xor
adc
mov
out
jl
jg
hlt
fwait
out
lods
lods
add
fwait
pop
pop
into
cld
es
std
jmp
push
mov
jg
jl
neg
aaa
cmpb
out
pop
outsl
push
imul
cmp
mov
sbb
rcr
sbb
mov
push
dec
sbb
adc
cmp
and
clc
das
jle
pop
or
hlt
ljmp
push
and
mov
cli
jmp
lock
xorb
mov
push
jnp
lcall
inc
insb
mov
inc
pushf
and
lcall
repnz
lcall
jle
mov
ror
sub
jno
jl
jecxz
cwtl
adc
out
jno
jge
test
ds
or
pushf
cld
mov
or
cs
sbb
fcomip
add
outsb
adc
mull
or
ret
iret
enter
pop
insl
add
ljmp
lret
scas
pop
mov
pop
and
xor
les
pusha
aam
sbb
mov
pop
inc
movb
jl
icebp
loope
cmp
fisubs
xor
pusha
mov
jne
repnz
adc
mov
les
inc
add
mov
push
stos
insb
mov
rolb
sub
mov
loop
imul
rcrl
xchg
sti
shrb
fldl
inc
pop
push
adc
mov
test
in
add
sub
cmp
iret
mov
xchg
pop
mov
js
sbb
cli
das
clc
xchg
dec
data16
cmp
mov
pop
fisttpl
lock
in
push
movsb
rcrl
lcall
call
inc
cld
mov
idivb
jne
dec
push
mov
fildll
mov
jle
lock
jmp
xor
fsubl
pop
mov
pop
decl
pop
jbe
lock
jnp
inc
nop
int
mov
cmp
movsb
inc
arpl
pop
sbb
fwait
mov
push
pop
incl
xchg
jg
push
scas
inc
ja
fists
inc
aaa
inc
mov
inc
dec
cld
dec
jbe
push
ljmp
mov
out
dec
jg
and
movsb
ljmp
adc
icebp
decl
data16
cwtl
loop
dec
fidivrs
decl
mov
clc
les
lahf
scas
adc
push
and
popa
cmp
movsl
lods
stos
mov
cmp
jg
stos
pop
sti
xor
ljmp
loop
xchg
and
xchg
ljmp
ss
pop
inc
mov
pop
or
add
fisttps
jmp
out
inc
stos
jge
leave
adc
fnstcw
out
es
arpl
repz
mov
lret
xchg
adc
mov
clc
ficomps
cmp
ret
jmp
mov
arpl
push
hlt
inc
push
dec
sti
addr16
mov
push
mov
ja
addr16
sub
inc
mov
push
aas
leave
std
bound
jmp
mov
mov
add
adc
xor
and
pop
loopne
stos
mov
je
mov
mov
imul
pop
mov
ret
pop
mov
xchg
scas
dec
dec
xchg
dec
scas
decl
aas
je
ret
push
pop
int
and
ds
lods
sbb
stos
les
jmp
sbb
cmp
das
fstpl
sti
out
lds
decl
loop
and
cs
pop
push
cmp
jg
repnz
jl
or
jmp
outsb
dec
push
popa
aad
out
xchg
inc
mov
rcr
push
push
rorl
xor
xor
pushf
xchg
cltd
movsb
ret
outsl
mov
ljmp
movsl
pushl
lock
cmp
add
sbb
sub
outsl
clc
sbb
mov
push
hlt
push
mov
xor
dec
shlb
mov
dec
mov
outsb
mov
mov
sbb
add
mov
pop
xor
mov
iret
lds
dec
decb
adc
mov
jg
call
mov
in
xchg
scas
jnp
out
mov
dec
xchg
stos
dec
mov
pop
jl
lahf
in
clc
call
mov
push
push
cmp
repz
aas
adc
dec
rcll
call
mov
ljmp
loop
aaa
jge
lods
xchg
push
arpl
pop
add
aas
rcl
insl
in
dec
jo
jb
pop
pop
into
jg
mov
sub
lods
inc
xchg
loopne
test
test
aad
insl
je
enter
lret
jo
xchg
cmp
and
jl
dec
or
cli
and
cmpsb
mov
mov
fbstp
inc
xor
ret
mov
std
int3
andl
adc
sub
mov
fmuls
mov
fidivrs
xor
ds
mov
ss
cli
in
add
sub
sub
fwait
jle
add
xchg
aam
jl
fwait
ss
fnsave
into
in
in
jle
mov
mov
test
inc
clc
pop
mov
fdivs
and
imul
cmpsb
add
add
das
cmp
and
rcrb
std
sahf
jns,pt
add
push
pop
jb
pop
and
popf
dec
testb
dec
or
add
jp
pushf
dec
xor
scas
push
mov
pop
icebp
adc
dec
jnp
iret
sub
jbe
mov
mov
test
aaa
add
pop
dec
dec
dec
rcrl
call
cwtl
nop
les
add
imul
mov
and
into
cwtl
lahf
mov
iret
xor
pop
call
nop
in
out
insl
lcall
rcll
idivb
lods
scas
add
sarb
lcall
push
xor
js
jge
ds
add
icebp
out
dec
fcom
in
adc
jbe
inc
fldenv
cmp
stos
and
idiv
push
lcall
loopne
xchg
jb
pop
in
adc
cmp
sbb
cli
test
test
pop
push
clc
add
xchg
push
mov
jmp
push
decl
pop
jle
cmp
mov
into
xchg
sahf
dec
imul
loope
jne
adc
fwait
jbe
inc
push
mov
bound
in
mov
mov
ret
jno
stos
cltd
jle
scas
pop
gs
mov
adc
xlat
xor
mov
scas
mov
incl
daa
adc
pop
loope
inc
cmp
add
std
fdivrp
sub
popa
sbb
jne
mov
adc
cmpsl
inc
cli
decl
mov
xor
cmp
ljmp
call
adc
shl
pop
subps
out
xor
pop
out
lcall
repnz
aaa
dec
ret
hlt
jp
pop
lret
out
xor
mov
into
adc
lret
xor
mov
outsb
sbb
mov
and
dec
sub
scas
test
push
jge
mov
mov
out
into
inc
decl
in
cli
dec
jo
fistpll
jb
lods
mov
add
push
lock
cli
jmp
cld
outsb
aam
lods
cs
sub
repnz
mov
jmp
call
xchg
sub
adcl
mov
jp
adc
push
sbb
data16
mov
cld
pushl
pop
mov
cmp
in
sub
cmpsb
shll
adcl
mov
lret
nop
hlt
addr16
incl
imul
push
cmpsb
scas
cli
jmp
stos
sbb
push
mov
call
or
xor
incl
lds
mov
test
jg
jno
mov
cmc
xor
add
and
jb
movsb
and
aaa
push
sub
setle
pushl
push
pop
pop
call
les
xor
dec
in
test
mov
mov
ljmp
add
pop
xchg
pushl
ds
das
in
push
inc
xchg
aaa
sbb
loope
push
mov
into
sbb
or
cs
hlt
push
cld
jmp
inc
arpl
pushf
inc
mov
es
arpl
pop
mov
or
enter
cmp
jb
ja
inc
in
std
push
cmp
pop
dec
mov
imul
loopne
lock
nop
loop
jmp
in
sbb
pop
lods
inc
cmp
pop
mov
sahf
scas
push
sar
ljmp
and
xchg
test
cmpsb
push
add
mov
lret
sahf
push
xlat
test
and
mov
sub
xor
mov
xchg
aam
cmp
push
push
daa
mov
adc
aad
insl
fcomp
cltd
push
ret
movb
xchg
inc
nop
mov
aam
repnz
or
ljmp
pushl
dec
out
xchg
int3
fwait
imul
stos
or
movsl
inc
mov
or
pop
xchg
or
xchg
mov
xchg
pop
cmc
cld
and
jle
adc
jo
mov
out
test
sbb
loop
xchg
fldt
in
mov
lods
mov
pop
sub
aad
xchg
xor
scas
cmpsb
sar
loopne
sbb
sub
nop
shll
push
jg
or
movsb
mov
xchg
fidivrs
mov
negl
and
ds
xor
inc
pushf
popf
mov
mov
cmc
inc
or
or
insb
pop
clc
lahf
fs
cmp
push
xlat
sbb
add
or
and
add
int
jg
or
mov
mov
pop
aas
adc
decl
cmp
jle
pushf
hlt
enter
decl
insb
jge
push
gs
lret
imul
adc
fcmovb
lahf
mov
mov
adc
andl
outsb
inc
jno
ret
lcall
add
push
or
push
xor
jmp
in
js
mov
push
inc
mov
push
mov
js
andb
pop
cmp
les
rclb
rorb
jns
popf
leave
mov
lock
icebp
jl
in
dec
movsb
xchg
jl
bound
cwtl
mov
pop
in
mov
push
sub
add
psubw
jl
cmc
stos
add
adc
das
inc
pop
sub
call
or
ficompl
and
xchg
mov
cmp
out
sarb
mov
or
rclb
xchg
lock
pushl
xor
bound
loop
mov
add
fisttps
out
in
ret
fidivrl
outsl
lret
ret
pop
adc
ljmp
aam
repz
xchg
nop
mov
das
push
or
pop
data16
outsb
add
pop
std
pop
lret
stos
in
int3
loop
pop
xor
sub
mov
inc
jo
movsb
pop
mov
lock
loop
or
repz
sub
xchg
movsl
ss
cld
or
roll
cli
push
mov
xchg
dec
ja
stos
xor
stos
dec
mov
dec
pusha
lcall
cld
adc
xchg
cmp
xor
sti
jmp
movsl
iret
imul
inc
xchg
call
pushl
stos
push
push
push
dec
hlt
imul
push
inc
cld
ljmp
xor
jb
enter
sar
cmp
push
inc
dec
push
lock
mov
fiaddl
out
leave
mov
xor
jg
popa
mov
adc
test
sets
and
sbbb
jbe
sbb
inc
pop
outsl
clc
pop
xchg
lods
jbe
fildl
push
mov
rorb
sub
push
push
cld
incl
ret
test
jp
sbb
out
andl
aam
lret
jo
jge
mov
int
pop
inc
cs
sbb
repnz
add
adc
or
cmp
sub
popa
aad
inc
jle
lahf
sbb
jmp
stc
repz
lahf
jne
dec
ljmp
pop
xchg
cwtd
lret
cltd
pop
mov
call
std
inc
repnz
in
push
or
pop
scas
inc
mov
daa
jnp
subb
jns
dec
insb
sti
mov
jl
sbb
pop
ret
push
repz
loop
sahf
subb
ret
push
sbb
mov
jg
cld
repz
sbb
aas
cltd
dec
cmpsl
mov
sub
mov
ljmp
fnstcw
outsl
mov
hlt
xchg
lcall
dec
scas
add
or
cwtl
adc
scas
cld
sbb
jmp
push
mov
in
subb
mov
push
push
cwtl
sbb
xchg
outsl
outsl
clc
push
loop
sti
pop
cmp
dec
test
rclb
test
popl
xor
mov
fdiv
lock
clc
movsl
mov
push
dec
sub
or
inc
loopne
xchg
mov
mov
bound
enter
ljmp
adc
mov
fstps
xorb
nop
mov
ss
sbb
cld
mov
pushl
aaa
push
cmp
pop
mov
push
mov
sbb
aas
popf
test
jno
insl
xor
add
xchg
lcall
incl
xchg
mov
fdivrs
or
and
leave
shlb
icebp
cli
ljmp
fs
dec
jl
dec
sti
jae
mov
add
xchg
ret
ljmp
nop
add
aaa
cmp
test
inc
lret
in
sub
addb
les
jg
out
lods
and
in
fbstp
les
stos
dec
and
fldl
stos
pop
xor
jbe
mov
fcmovnu
icebp
jecxz
jbe
ficompl
dec
ret
sub
jns
sar
lcall
adc
iret
sbb
jne
cmp
popl
outsl
mov
inc
lcall
cmpsb
ljmp
jno
jmp
std
and
lret
jg
sub
mov
dec
pop
stos
push
dec
sti
xor
out
push
fs
jo
scas
inc
lret
pusha
mov
ss
int
mov
push
fistps
add
add
in
mov
loopne
repnz
inc
test
add
rol
aad
clc
out
and
das
xor
js
push
mov
int3
xor
fldt
push
lcall
xor
lcall
or
daa
add
lds
fisubl
ret
ljmp
pop
aaa
jp
jge
fwait
sti
adc
inc
jg
test
jae
int
pushf
loopne
sbb
pop
cmc
sub
iret
cmp
sbb
sub
sub
repnz
xor
cmp
or
add
dec
xor
or
add
cld
mov
mov
aaa
xor
orb
cld
mov
int3
ljmp
mov
stos
aam
inc
outsb
adc
fimuls
sbb
mov
je
add
call
xorb
push
push
xchg
mov
and
pop
or
xor
sub
and
outsl
and
pop
push
nop
fildl
pop
pop
out
mov
xchg
into
ljmp
addb
shlb
icebp
incl
movl
xor
insl
adc
or
ret
das
adc
fbstp
sub
cmp
sbb
jl
mov
mov
add
clc
fwait
dec
pop
push
pop
jo
clc
incl
in
sbb
lock
dec
les
iret
out
mov
into
add
fwait
and
pushl
jne
mov
lods
cld
enter
test
pop
jecxz
mov
xchg
mov
mov
das
loop
cld
incl
xchg
pop
adcl
incl
icebp
lret
push
jbe
mov
repz
scas
xor
dec
test
push
inc
add
cmp
xchg
dec
or
loop
cli
sbb
mov
in
push
fwait
xchg
inc
movsb
idiv
adc
jl
mov
nop
hlt
jo
jo
aam
jmp
sub
in
sbb
sbb
imul
inc
dec
repnz
sbb
sbb
scas
lea
sub
out
push
cmp
dec
inc
xorb
decl
mov
mov
fdivr
scas
jle
push
sti
xor
mov
cld
cmpl
clc
hlt
ljmp
jo
je
fwait
mov
mov
movsl
lea
aas
push
test
insl
jmp
xor
in
sarb
inc
add
push
sar
aaa
add
dec
push
scas
popa
dec
nop
adc
sub
jns
mov
pushf
push
dec
adc
xchg
and
outsl
mov
xor
std
aad
cli
mov
and
push
or
enter
aaa
sub
xor
loope
sbb
mov
cs
popf
sbb
push
popf
ret
sbb
mov
in
xor
dec
ss
dec
cmc
mov
lock
test
add
in
mov
cwtl
dec
in
data16
lock
arpl
fdivr
decl
cs
aaa
xor
xchg
sarb
mov
adc
inc
add
dec
in
in
cmp
adc
mov
sahf
mov
es
fstpl
mov
sbb
das
inc
rorb
mov
add
or
int
xlat
test
jge
pop
test
jbe
mov
add
outsl
mov
pop
xchg
cmp
push
pop
loope
or
or
mov
arpl
fadd
jnp
xorb
add
fucomp
cli
ja
aam
imul
out
ljmp
imul
outsl
clc
fcmovnu
lock
push
fcmovb
inc
fwait
lret
negb
lret
sub
mov
fbld
lcall
inc
mov
jl
outsl
call
jbe
dec
movsb
xor
sub
das
mov
jmp
jge
ret
scas
sub
jae
call
inc
xor
into
mov
test
popa
repnz
jecxz
in
iret
ja,pt
sub
incl
in
sbb
push
cmp
jae
scas
test
lahf
mov
push
pop
hlt
xor
leave
arpl
cmp
lock
outsb
lock
out
scas
or
loopne
jmp
jnp
fwait
int
sbb
test
call
mov
popa
repnz
mov
push
stos
xor
ds
cltd
hlt
pop
movl
cld
test
sbb
bound
std
jg
dec
dec
xor
scas
mov
lret
inc
cld
push
cmpsl
cld
jmp
inc
pop
je
movsl
xlat
jns
sub
push
sub
call
aaa
std
push
mov
lds
mov
xchg
pop
daa
push
push
mov
add
jmp
test
popf
mov
jg
sti
lods
push
pop
mulb
aas
call
jno
xchg
adc
ljmp
jg
lret
fwait
mov
and
sbb
or
aam
sub
jecxz
sbb
rdpmc
in
push
mov
shl
and
movsl
mov
mov
jecxz
mov
dec
sarl
shl
sbb
add
mov
jns
nop
rolb
in
dec
in
incl
mov
in
xchg
xchg
dec
pop
mov
sahf
arpl
mov
rcl
sbb
aad
mov
jmp
sub
insl
xchg
pop
pop
lock
stos
sub
aad
inc
fsts
sub
mov
subl
test
ja
jae
or
rcrl
jg
adc
pop
add
jns
mov
scas
mov
sbb
or
cmp
ljmp
aaa
sbb
xchg
hlt
cltd
movl
mov
dec
shll
cmp
mov
fnstenv
dec
jle
xchg
jge
andb
xchg
jg
pop
and
scas
je
mov
adc
popa
mov
mov
in
in
sub
imul
das
clc
jno
pop
mov
ret
mov
daa
ja
fcmovnb
test
xor
ret
jb
push
cwtl
idiv
lcall
jns
adc
fimull
repnz
jne
test
mov
jno
inc
jg
loop
ljmp
dec
iret
pop
shrb
mov
pop
pop
cmp
daa
xor
jecxz
mov
clc
jecxz
mov
adc
rolb
jbe
ud0
out
test
inc
mov
pusha
mov
cs
cli
sbb
lods
fstl
hlt
adcl
sti
xchg
movsb
hlt
jg
push
push
pop
push
sub
jns,pt
lcall
add
icebp
in
xchg
or
jle
pushf
hlt
cmpsl
test
dec
dec
pop
repnz
push
dec
xchg
mov
dec
push
fwait
pop
nop
xorl
jnp
decl
jle
gs
pop
push
cmc
stos
pop
cli
ja
jl
mov
sar
pushl
lret
dec
stc
data16
and
fdivl
sbb
pop
ror
aas
xchg
cli
andb
or
and
fisubl
lret
sub
mov
jp
jbe
add
push
jg
xor
pop
scas
shl
shrl
sub
stos
push
mov
pushf
js
test
xchg
sbb
orb
aam
jo
fnstsw
movsl
adcl
jg
push
xchg
dec
test
add
or
cmpsb
pop
test
push
in
into
gs
and
orb
out
ja
pushf
ljmp
jp
dec
dec
jle
jns
add
push
hlt
pop
adc
mov
loop
outsb
lcall
cmp
lods
fdivrl
sbb
mov
fwait
inc
cltd
cli
mov
jne
test
pop
es
js
xor
adc
and
push
lock
jnp
pop
not
hlt
inc
push
call
addr16
and
jo
dec
lods
sub
jmp
inc
cmp
nop
sub
lods
jno
push
sti
aam
das
movsl
out
push
dec
adc
dec
out
call
push
mov
aas
es
in
nop
dec
mov
dec
sub
xchg
push
mov
out
push
jnp
mov
ret
idivl
pop
push
cmpsl
push
sub
cld
cld
inc
push
add
pushl
enter
sub
pop
xor
cmp
sbb
xchg
sub
dec
mov
cmp
mov
loope
sub
xchg
xlat
mov
cmpsb
sbb
mov
or
lcall
fcmove
les
popf
scas
sbb
and
or
sbb
fldenv
xor
mov
loop
test
jle
cmp
jo
jp
inc
arpl
add
pushl
sub
mov
jnp
push
fimuls
dec
pop
rcrb
repz
movsb
mov
lret
loope
lock
sahf
mov
mov
inc
xor
push
jmp
jg
push
adc
ffree
mov
int3
or
mov
cmc
mov
movsl
lea
ret
jnp
stos
sbb
fwait
leave
xchg
lret
call
push
add
mov
adc
sbb
fwait
popa
xchg
xor
mov
enter
mov
dec
mov
jns
or
in
and
push
aad
cmp
and
enter
in
imul
or
cld
xor
movsb
stos
test
xchg
call
cmp
decl
andb
jns
testb
addr16
test
out
cli
aas
xchg
mov
or
push
add
mov
lcall
sbb
fdecstp
ficoml
test
and
sbb
fcmovnb
ljmp
mov
adc
fcmovb
test
jmp
inc
push
ror
cmp
sub
in
out
test
ljmp
jb
or
mov
pushf
cmp
inc
mov
sbb
mov
out
mov
push
push
sar
lcall
mov
ljmp
stos
arpl
ja
pop
inc
mov
fadds
pop
sbb
mov
gs
xor
pop
lcall
push
aad
pusha
mov
mov
inc
jnp
inc
sub
call
jp
loop
xchg
hlt
inc
lret
mov
inc
scas
shlb
lock
outsb
jbe
pushf
xchg
jl
jae
test
fimuls
push
xor
les
sub
out
sbb
outsl
test
dec
cmp
nop
gs
fwait
jle
sbb
xchg
lahf
mov
cmp
sub
popa
call
xchg
pop
mov
and
gs
test
enter
xlat
stos
xchg
mov
add
xchg
cld
in
sub
push
cmpl
ds
mov
movsl
xchg
aad
and
jo,pt
dec
fs
orl
mov
fdivs
fmuls
scas
lcall
or
jp
js
pop
xchg
inc
dec
pushf
sub
pop
cmp
and
pop
or
add
cli
mov
sub
inc
or
cmp
dec
out
xrelease
sub
ja
gs
mov
mov
fcompl
in
xlat
mov
cmc
adc
push
and
mov
xchg
sub
fmulp
inc
xchg
popf
push
mov
sub
rcl
dec
stos
jo
and
mov
pop
hlt
xchg
push
shlb
xor
sbb
enter
je
mov
ret
mov
pop
xor
xchg
and
mov
push
ret
or
sub
dec
pop
push
push
mov
fwait
sub
call
pop
stc
sub
cmp
test
fdiv
enter
xor
inc
pushf
orb
fistpl
daa
xlat
jbe
and
sbb
lods
jp
mov
or
in
test
in
in
aam
jnp
nop
decl
jo
lock
cld
pop
xor
add
mov
rorl
imul
pop
xchg
lods
decl
adc
cli
jl
in
xor
cmp
leave
jp
sbb
mov
and
sub
and
inc
jnp
cs
lahf
dec
decl
lock
and
addr16
cli
push
pop
movsl
jbe
ud2
test
mov
ficomps
cs
scas
xchg
sbb
mov
test
ljmp
std
into
jl
xchg
push
jmp
in
push
adc
or
cs
mov
jg
inc
and
out
jle
aaa
insl
and
ljmp
xor
push
aad
add
jo
mov
cli
mov
sti
cmp
sbb
into
and
pusha
or
clc
inc
sbb
aaa
pop
cmp
scas
fdivr
rol
pushl
out
jae
in
sub
xchg
xlat
jecxz
push
dec
push
adc
into
sbb
dec
push
inc
jp
lock
test
lods
popa
xchg
out
push
and
rcrb
add
fisubrs
in
mov
jae
pusha
lock
outsl
subb
mov
xor
pop
xlat
pop
call
test
xchg
pop
adc
dec
dec
ljmp
std
mov
dec
or
mov
cmp
pop
cmp
mov
repnz
insl
xchg
xchg
rclb
pushf
jl
xchg
mov
xor
pop
sub
mov
push
cld
testb
push
mov
add
loopne
jg
push
xchg
call
sbb
sbb
fdivrs
or
incl
into
sbb
fisttpl
fldcw
negb
int
shlb
jo
hlt
dec
lahf
mov
cmp
or
out
or
sbb
scas
sbbb
shrl
pop
fdivrs
add
xchg
push
clc
mov
bnd
mov
clc
lcall
fwait
jp
dec
pop
mov
sbb
push
pop
and
pushl
shrl
repz
pop
and
sub
fs
filds
xchg
test
imul
mov
jg
mov
es
mov
jl
lock
inc
ljmp
push
jle
stc
sbb
loop
fimull
inc
inc
out
mov
and
nop
mov
or
adc
mov
jp
pushl
pop
push
cmp
ljmp
movsl
jmp
adc
pop
sub
pop
and
push
in
xor
pop
mov
mov
push
sub
mov
jg
cmp
mov
mov
iret
orb
fcomps
lods
xlat
fdivp
stos
movsb
fsubl
mov
sub
pop
push
mov
jmp
lret
pop
xchg
xchg
lock
push
or
jmp
pop
hlt
fpatan
push
cmpsl
mov
fdivrs
int3
jmp
add
pushl
jl
inc
inc
out
xchg
push
ljmp
test
push
rclb
cltd
sbb
cli
cs
mov
mov
adc
lods
popa
sbbl
mov
pop
mov
inc
cmp
jbe
xor
pop
jo
out
shll
or
push
aaa
std
ljmp
add
lahf
xchg
xor
ficoms
dec
decl
stos
push
bound
push
popa
mov
cwtl
xor
jno
fidivrs
add
je
xlat
int
cli
cmp
jnp
jg
lret
stos
sbb
das
mov
mov
pop
add
dec
sbb
scas
testb
aam
pop
clc
mov
ficoms
cmp
cmpsb
int
test
bound
sbb
ss
push
sub
rorb
popa
and
scas
xor
pop
jg
push
push
pop
jne
filds
mov
shrb
dec
mov
or
fwait
sbb
add
mov
hlt
scas
adc
sub
clc
jns
nop
cmc
call
insl
inc
jecxz
xchg
shrw
clc
std
dec
loop
mov
lods
or
mov
jg
movsb
cmp
mov
push
adc
inc
call
mov
mov
push
xchg
lods
mov
mov
nop
pushf
loop
sahf
dec
ret
test
mov
or
jns
inc
push
pop
push
push
out
add
dec
mov
dec
xchg
cmpsl
or
incl
aad
add
iret
inc
mov
push
cmpsb
sub
movsl
je
dec
icebp
fistpll
call
jmp
daa
mov
jle
xlat
fisubrl
inc
sbb
es
or
add
pop
push
dec
mov
jle
xchg
xchg
movsb
or
test
add
push
decb
sbb
call
pusha
cld
and
mov
mov
cld
pop
movsb
divb
aaa
cmp
cli
orl
xchg
mov
aaa
add
push
js
dec
add
movb
ja
push
xchg
test
push
pushf
stc
loopne
cmp
cs
shlb
insl
mov
test
cmp
pop
fcoml
out
or
lock
pop
out
mov
add
lock
clc
pop
or
repz
push
incl
mov
insb
fcompl
add
cld
xchg
in
xchg
dec
sbb
jne
pop
sub
pop
lock
mov
arpl
movsl
pop
sub
sbb
add
lea
push
out
adc
mov
divb
aaa
dec
popa
xor
shl
push
push
push
icebp
dec
mov
rcr
pop
inc
push
gs
add
xor
lock
jmp
fcomip
xor
jp
pop
and
mov
fstpt
jg
int
jo
movsb
xor
pop
add
adc
xchg
mov
push
adc
test
xchg
movsl
int
in
dec
sub
cs
sub
out
and
test
cmp
movsl
imul
fistpl
push
push
add
fbld
outsl
aaa
das
movsl
test
daa
add
pushw
ret
incb
loopne
dec
sahf
fdivl
fists
inc
ljmp
cld
push
inc
push
mov
in
mov
xor
js
pop
clc
daa
sub
pop
or
inc
repnz
lods
adc
sub
dec
imul
mov
call
hlt
lds
xlat
mov
dec
inc
in
std
jg
sti
outsb
neg
jp
mov
sub
xor
pop
or
xchg
ss
pop
push
xchg
fdivr
lcall
push
pop
insl
push
jmp
sbb
shll
bound
mov
mov
mov
xchg
filds
mov
and
int
pushl
hlt
out
movsl
sbb
jle
and
pop
insb
inc
inc
mov
xor
test
lock
mov
dec
xor
xchg
add
loope
add
jl
inc
clc
pushl
push
data16
in
pop
sti
repz
or
repnz
sub
and
sub
je
pop
sbb
and
mov
decl
cmp
int
lea
pop
or
lods
adc
scas
pusha
hlt
pop
mov
add
testb
push
mov
adcb
int3
sub
sahf
loop
nop
mov
mov
mov
or
jecxz
test
mov
xor
pushf
nop
ret
call
ljmp
mov
jle
push
jb
add
add
lret
ret
xor
cmp
jmp
dec
test
rcrl
mov
lock
sbb
sbb
add
jb
into
subb
xorl
sbb
sbb
cld
pop
cwtl
lock
pop
sub
sbb
in
test
jecxz
movsb
inc
out
push
jo
cmp
cld
push
xor
xorb
sbb
mov
adc
clc
sti
cmpsl
jl
inc
cli
imul
mov
jno
repz
adcb
pop
lock
das
sub
pop
pop
cmp
pop
pop
sti
shlb
or
incl
xchg
pop
push
in
mov
push
into
ljmp
cli
pop
jbe
addr16
fwait
mov
nop
dec
popf
lahf
xor
enter
call
xchg
sbb
xchg
xor
pushl
int
mov
call
adc
pop
or
sbb
test
hlt
cli
arpl
pop
and
cmp
pushl
jle
xor
sub
out
cmp
test
call
push
aam
pop
mov
cld
and
sti
mov
jge
lds
in
gs
repnz
in
pop
ret
mov
xchg
sbb
aaa
std
lcall
or
movsl
inc
xchg
cmp
scas
add
shr
mov
fs
sbbb
mov
push
pop
push
insl
mov
jg
dec
jb
hlt
icebp
add
lret
hlt
ds
pushl
scas
aaa
insb
mov
imul
jp
adc
arpl
scas
mov
std
mov
loop
add
adc
mov
xchg
mov
mov
fisubrs
std
jmp
insb
insb
clc
jmp
xchg
shl
inc
xchg
ds
pop
inc
inc
jne
dec
and
fbld
enter
mov
adc
inc
sbb
jnp
shrl
inc
insl
int
decl
insb
jge
arpl
not
movsb
xor
sub
add
lret
mov
mov
sbbl
xor
dec
mov
jnp
rcr
call
jmp
dec
add
pop
mov
cmp
insl
mov
push
loop
hlt
lock
cmp
cld
filds
lahf
pop
dec
dec
ret
inc
or
cmc
mov
add
dec
mov
addr16
dec
ljmp
xor
xchg
jae
aaa
fidivl
ror
repnz
and
sub
dec
lock
aam
add
jg
sub
call
mov
mov
pushf
repz
sub
test
mov
push
call
pop
scas
popa
sub
es
insb
int
jns
test
mov
dec
pop
pusha
push
ss
hlt
into
lods
fisttpll
sahf
mov
inc
inc
xor
or
sti
in
cmp
xchg
fidivrs
sub
jmp
or
xor
jae
push
mov
outsl
dec
push
cmpsb
sbb
jecxz
pop
jecxz
jg
dec
and
nop
lret
dec
jg
cmpsl
mov
nop
subb
push
incb
subb
scas
mov
rorb
decb
pop
or
dec
sub
movsb
push
sub
dec
sub
cld
lds
mov
pusha
jbe
cld
lret
pop
into
pop
cmp
fcomip
decl
cmp
add
jecxz
inc
out
inc
out
xlat
jb
jl
and
ljmp
jne
std
stos
mov
jp
add
push
movsl
or
jg
sub
lcallw
frstor
push
jg
fidivrl
icebp
les
push
adc
fsubl
push
add
ja
push
shrl
add
ja
sub
ficompl
add
jp
fbstp
repnz
push
adc
add
push
mov
ja
sub
dec
adc
ret
lods
enter
adc
and
adc
jg
in
cmp
mov
hlt
int
inc
cs
ret
jmp
stc
cmc
sbb
sub
ss
mov
cmp
jg
or
add
mov
insb
cld
xchg
je
repz
mov
mov
in
push
mov
inc
jle
mov
fcmovu
sti
push
add
mov
lahf
movb
jp
daa
mov
pop
ret
mov
hlt
jg
mov
inc
xor
aad
mov
jo
lock
ss
push
sar
push
hlt
xchg
outsl
into
adc
orb
sub
hlt
in
adc
add
lcall
nop
sahf
hlt
jp
xchg
push
fnstenv
call
dec
xchg
loopne
sub
jo
jg
lock
inc
int
inc
les
test
jg
cld
fisttps
lret
call
pop
mov
jo
lahf
cs
add
inc
mov
std
fbstp
dec
aaa
imul
mov
test
jmp
ret
cmp
fsubrl
popa
pop
mov
mov
jb
mov
mov
jp
pop
push
int
add
in
insl
gs
xor
test
sti
jb
lds
into
nop
enter
jmp
sbb
and
out
mov
lahf
lock
fucom
sub
dec
popf
adc
mov
aaa
lods
push
ljmp
jae
push
fucomi
mov
imul
add
cwtl
pop
mov
fbstp
notl
das
xor
sub
aas
movsl
mov
rep
movsb
push
mov
repz
jo
stos
stos
decl
adc
mov
push
fidivs
call
push
std
add
cmp
xchg
sbb
mov
pushf
mov
ljmp
or
int
push
pop
call
lock
mov
xor
out
mov
dec
or
popa
inc
xchg
rcrl
push
movsl
ja
test
enter
sbb
jg
es
push
repnz
mov
add
int3
xchg
xor
push
mov
pop
icebp
mov
and
fdivrl
ds
data16
lcall
jg
fadds
push
loop
into
movsb
pop
cltd
sarl
sbb
mov
sub
xor
cld
jg
xchg
lods
jg
iret
jno
je
inc
inc
fmull
fnsave
mov
std
dec
jmp
pusha
pop
or
xor
push
mov
and
pop
aam
ljmp
sub
dec
cs
cmp
outsl
ss
push
aas
and
mov
xlat
mov
sub
jg
aad
shr
lcall
cmp
sbb
or
repnz
sub
jmp
leave
xor
decl
subb
clc
mov
jo
pop
mov
xchg
outsl
xchg
out
jle
xor
std
cmpsl
push
sbb
subb
or
hlt
adc
pop
and
fstpl
or
push
imul
pop
xchg
outsb
xor
scas
jp
rclb
jmp
xchg
movsl
enter
mov
xchg
sbb
leave
clc
and
decb
push
ja
dec
xchg
xor
pop
pusha
dec
inc
sbb
or
mov
dec
cwtl
subb
cmpsb
into
imul
jno
push
pop
movsl
xorl
pop
mov
or
cli
in
shrl
pop
imul
insb
and
imul
popa
fmulp
es
add
mov
push
incl
xchg
stc
dec
hlt
adc
pop
xchg
jns
pushf
in
mov
jmp
test
adc
mov
dec
adc
pop
inc
ja
mov
xchg
jecxz
loope
jecxz
xchg
ret
mov
outsb
lgdtl
xlat
sub
dec
orl
fs
xchg
jbe
and
sarl
or
jg
and
mov
cwtl
das
bound
lahf
adc
pop
push
inc
cltd
jp
imul
sar
xor
call
sbb
jo
mov
mov
leave
rcrl
loopne
ja
fisttpl
decl
xor
iret
mov
lea
inc
sub
ja
add
lock
push
das
and
or
pushf
sub
popa
inc
pop
add
mov
xor
fisttpll
pop
xchg
imul
and
ret
clc
ja
shl
shl
mov
jecxz
popa
or
pop
xchg
loopne
pop
scas
add
pop
stc
sub
adc
or
hlt
or
and
adc
int3
mov
js
xchg
call
inc
and
push
jle,pt
mov
inc
push
in
adc
movsl
pop
shll
hlt
adc
cmp
jo
insb
cwtl
inc
mov
call
cmpsb
cmpsb
and
or
cld
call
fisttps
fstl
lret
fildl
test
shrl
js
pop
and
decl
mov
xor
cmp
mov
testl
mov
mov
sub
in
outsl
data16
jecxz
jle
cmp
or
sti
adc
ss
ljmp
xor
xchg
stos
add
mov
mov
and
xchg
lock
in
sbb
add
bound
or
mov
gs
mov
pop
iret
xor
mov
xor
jae
cmc
jg
jnp
and
testb
dec
and
aaa
dec
mov
add
jl
pop
mov
hlt
sbb
fisubs
jne
ret
pushl
xchg
xor
mov
test
popa
mov
incl
in
xor
call
lcall
je
jnp
fimull
xchg
aad
mov
fiadds
bound
pop
mov
cmp
andb
sbb
add
push
dec
mov
decl
mov
cmpb
mov
add
xchg
in
sbb
xchg
decl
sub
lret
out
mov
adc
xor
or
sbb
fsubrs
pushf
mov
mov
push
mov
xchg
pop
or
sbb
xchg
push
outsl
rcrb
aad
mov
fisttps
movsb
or
adc
mov
mov
inc
int
push
mov
lcall
idivl
sub
movsb
cmp
pushf
and
push
shll
sub
mov
out
in
mov
add
adc
xor
cmp
push
in
lret
inc
jp
out
pushf
push
popf
out
incl
cmp
fmull
repz
jmp
cwtl
xor
out
mov
andl
push
nop
dec
add
loope
xor
sub
push
xchg
gs
adc
xor
outsb
fsubs
adc
adcl
add
push
xor
lock
and
test
call
dec
mov
dec
frstor
mov
shlb
mov
inc
rorb
push
or
jg
call
rcl
addb
sbb
dec
inc
xchg
mov
xchg
jmp
lret
adc
call
lcall
test
jecxz
out
dec
cli
or
push
mov
and
sub
pop
ljmp
sub
ljmp
inc
outsb
mov
pop
in
imul
xchg
xchg
ret
push
nop
cmp
movsb
pop
dec
movb
inc
mov
or
inc
adc
into
clc
gs
lahf
push
add
fidivrl
cli
and
xchg
and
inc
loope
cmpsb
pushl
cli
and
push
loop
sti
dec
pop
lods
adc
arpl
hlt
out
push
movsb
cli
sbb
lret
pop
lods
adc
dec
add
mov
dec
call
int3
mov
repz
pop
lds
sub
jg
insl
std
xchg
add
jnp
ret
jb
sub
add
adcb
fidivrs
mov
lea
mov
inc
out
xchg
je
sahf
call
sub
out
or
mov
add
in
out
dec
mov
xor
or
repnz
mov
lods
les
pop
add
fistpll
dec
cmc
aam
sbb
mov
pushf
sub
and
adc
adc
jnp
in
imulb
jae
nop
lods
or
xchg
mov
bound
icebp
dec
adc
cmp
fsubrl
stos
mov
lret
rol
lret
je
mov
cli
dec
or
dec
xlat
loope
push
mov
loopne
mov
push
std
add
and
dec
in
and
aad
inc
pop
cmovs
int3
lahf
pop
hlt
pop
repnz
lds
insl
inc
pusha
test
clc
dec
push
or
inc
sub
add
aam
push
mov
ficompl
outsl
cmp
push
idivb
in
jne
add
add
inc
in
arpl
jle
sbb
icebp
push
loopne
xchg
rcrb
loop
lods
bsr
lods
cwtl
add
or
sti
add
push
ret
xor
lret
pop
je
popa
jge
jl
jne
push
std
popf
adc
mov
and
scas
xchg
leave
out
inc
loopne
adc
dec
imul
aas
mov
aad
adc
pop
sahf
jg
mov
add
pop
push
sbb
push
pop
hlt
xor
xchg
inc
ret
ljmp
fsubp
mov
popf
mov
xor
dec
mov
cmp
jg
sarl
mov
fs
push
mov
pop
insb
out
sbb
sbb
push
xor
pop
sbb
outsb
mov
pop
scas
in
add
mov
pop
pop
sub
ret
mov
mov
dec
sbbb
icebp
push
jbe
jo
add
mov
cli
pushl
ja
fdivrs
jbe
pop
insb
lock
mov
inc
push
faddl
mov
mov
ljmp
roll
push
and
dec
mov
mov
decl
jecxz
mov
jmp
adc
push
jmp
or
stos
add
imul
jl
test
mov
ret
nop
jp
insl
call
orl
insl
fidivrl
call
mov
cmp
xlat
or
mov
push
jns
aas
mov
push
cmp
pop
gs
lock
jg
ja
dec
dec
repnz
imul
mov
ffree
jle
fistps
adc
outsl
and
subl
sti
call
jp
push
ljmp
fnstenv
jnp
sar
add
popa
sbb
inc
mov
lcall
mov
adc
pop
xchg
call
loope
aaa
into
jo
push
jmp
mov
dec
sarb
add
sub
xchg
ljmp
adc
lret
mov
pop
je
add
test
test
jne
jmp
mov
pop
clc
jmp
fbstp
jnp
cmp
inc
hlt
adc
decl
adc
mov
mov
lret
cmp
adc
mov
pop
sub
rclb
adc
mov
push
aas
pop
inc
lds
mov
aam
sbb
inc
adc
push
jne
leave
js
lcall
lock
jae
les
mov
xor
mov
push
pop
lods
mov
mov
mov
sbb
xor
pushf
jl
movsb
mov
jecxz
nop
jne
or
dec
sub
jg
mov
adc
sbb
jne
mov
shlb
cli
mov
ss
ret
cmp
inc
cmp
add
jg
das
jp
xchg
or
push
rcr
push
mov
pop
cmp
sbb
adc
sbb
mov
jmp
pop
scas
mov
into
cmp
imul
sub
and
fisttps
or
fbld
shlb
lock
je
mov
cmp
add
stos
xchg
mov
arpl
push
jbe
fmuls
add
pop
ljmp
cli
add
imul
adcl
cmp
out
pop
fsubr
loop
bound
add
filds
push
push
mov
fldcw
sbb
mov
imul
dec
ja
icebp
sets
and
push
dec
mov
inc
add
mov
push
sbb
shlb
mov
int
out
in
call
testb
jge
test
sbb
repnz
adc
inc
ret
mov
mov
fwait
sbb
pop
shr
inc
rorl
push
sbb
lods
xchg
fcomp
mov
mov
mov
mov
mov
ljmp
and
mov
daa
push
hlt
loope
xor
fs
add
aad
test
lcall
jg
xchg
fwait
imul
push
bound
dec
mov
jecxz
imulb
fs
fildll
movsb
inc
jbe
dec
dec
loopne
xchg
adc
dec
jmp
das
cmovns
pop
repz
out
cmp
clc
imul
pop
jg
cs
imul
add
fsubs
sub
mov
jecxz
fucomp
xor
cmp
loop
or
mov
mov
stos
add
xchg
out
xor
pop
sarl
cld
incl
xchg
xchg
das
lret
mov
add
scas
xchg
mov
mov
mov
sbb
dec
pop
xor
add
bound
rolb
iret
and
cli
mov
ds
or
mov
jae
sub
daa
xor
js
shrb
incl
pop
jp
add
lods
mov
or
rcr
je
pop
mov
loope
out
ret
pop
mov
jl
scas
mov
or
pop
mov
nop
cmp
mov
push
adc
jo
add
dec
cwtl
std
push
mov
sar
push
test
and
push
dec
popa
cmp
scas
je
mov
push
xor
les
decl
test
push
inc
adc
add
jb
jg
orl
or
test
int3
push
add
pop
sbb
fisubrl
cmpsl
push
cmp
add
ret
pop
mov
jbe
dec
loop
cli
aad
jl
fnstcw
add
out
out
and
faddl
stos
int
jmp
or
push
andl
pinsrw
test
mov
pop
xor
rorb
ja
and
jb
fdiv
push
dec
sbb
inc
sbb
test
and
dec
push
or
sbb
iret
mov
add
mov
cmp
data16
mov
pop
cmp
rorl
and
mov
subb
fsubs
mov
int
xor
xchg
or
icebp
or
test
mov
imul
outsl
sbb
xor
sar
incl
je
add
push
shl
mov
mov
movsb
mov
pop
aaa
add
dec
sbb
push
sub
in
outsl
out
lcall
mov
jnp
ja
jmp
iret
sub
aaa
jecxz
decl
push
dec
je
sbb
fsubp
daa
cld
aad
decl
inc
in
loop
ret
add
pop
test
sahf
pop
in
ljmp
push
lcall
jl
sub
jecxz
mov
add
lods
push
sbb
fwait
shlb
xor
enter
add
imul
sar
insb
pushf
lds
lea
inc
aaa
pop
pop
icebp
das
test
gs
cli
xor
mov
ss
mov
or
sar
mov
mov
nop
fs
jg
xchg
sti
add
mov
mov
outsb
jmp
mov
cld
fdivl
mov
cwtl
in
movsb
rorl
rcr
in
add
cli
pop
xor
out
or
or
and
mov
inc
jmp
xchg
lock
add
notl
iret
mov
cmp
xchg
or
test
in
xor
js
xchg
decl
lock
ja
xchg
push
clc
idivl
inc
jnp
call
adc
sbb
cli
jbe
call
inc
shll
xor
clc
aam
jb
shl
testb
push
push
ret
outsb
repz
ljmp
jmp
cmp
mov
loop
repz
inc
jae
sbb
fsubl
jnp
iret
insl
lods
pop
dec
pushf
mov
sar
decl
jmp
add
push
sub
xor
ljmp
ficomps
pop
outsb
add
in
in
sub
sub
pusha
loopne
icebp
fst
ficomps
shll
movsb
ud0
lock
das
add
inc
cli
adc
decl
xor
cli
sub
adc
mov
clc
pop
movsb
sahf
sbb
sub
addr16
xlat
rolb
mov
int
insl
int3
fcompl
fbld
xchg
dec
inc
push
out
bound
aad
add
or
ljmp
cmp
mov
jb
into
and
pop
rcrl
lock
push
dec
rcrl
cmp
dec
cmp
aaa
sub
mov
lcall
adc
std
xchg
push
inc
pop
outsb
ljmp
js
pop
lret
fldt
int3
inc
push
sbb
lods
ljmp
gs
mov
push
adc
adc
pusha
std
mov
jnp
mov
add
cmp
clc
sbb
out
or
sbb
inc
xchg
inc
andl
inc
stc
pop
jnp
ljmp
and
gs
dec
enter
aaa
fsub
fwait
pop
push
cmp
xchg
and
mov
jmp
arpl
out
stos
dec
add
adc
adc
cmp
test
ljmp
and
clc
lcall
cmp
outsb
add
sahf
sub
cltd
sub
cmc
pushl
jle
mov
dec
sbbl
mov
xor
add
xchg
icebp
lods
dec
inc
nop
adc
das
adc
mov
pusha
xlat
and
loop
lret
mov
xor
popa
ljmp
aam
loopne
dec
mov
popa
mov
mov
push
push
sahf
out
jne
gs
or
aam
mov
in
jno
aaa
insb
in
sbb
stos
idiv
idiv
ljmp
mov
je
fidivs
mov
rcrb
je
sbb
ljmp
and
cli
mov
ficoml
mov
jne
in
adc
lock
call
jmp
adc
ds
mov
mov
incl
mov
fcmovb
cmp
push
ljmp
repnz
shrl
jb
add
jno
icebp
cmp
mov
inc
jae
dec
mov
mov
mov
cmpsl
mov
loopne
adc
pop
inc
push
and
dec
add
or
jg
or
mov
dec
pop
lret
cld
push
push
fstl
cli
push
rcrb
cmp
movsl
mov
dec
sub
ss
decl
pop
outsl
fcoml
shrl
inc
pop
xchg
xor
pushl
mov
sub
push
fdivl
out
psrlw
test
hlt
add
mov
cmp
dec
aam
es
adc
xchg
push
lret
adc
xor
pushl
loop
pop
mov
adc
rol
fimull
scas
fmul
mov
add
jmp
idiv
ja
ljmp
xor
pushf
push
jle
aam
rorb
pop
jne
int3
dec
cmc
rorb
mov
dec
repz
push
inc
pop
fs
into
lret
in
push
xor
sbb
xchg
pop
pop
or
hlt
or
decl
dec
xor
push
aam
pop
or
scas
adc
cmp
insb
mov
lcall
or
adc
loopne
xchg
outsl
inc
out
int3
pop
scas
pusha
xchg
stc
fdivrl
sub
fisubrl
xchg
jne
andb
decl
orl
dec
jecxz
fdivrp
adc
add
xchg
ret
sbb
mov
jl
scas
mov
sbb
fistl
das
push
jnp
scas
mov
fsubl
adc
mov
push
xor
push
inc
ret
xor
popf
repnz
dec
sar
pop
mov
ret
add
sub
xchg
gs
int
pusha
sahf
call
add
dec
and
loope
jge
data16
adc
cltd
test
jg
decl
lret
adc
dec
in
aaa
push
and
jp
sub
push
shl
lret
ret
or
mov
sti
pushl
outsb
das
pop
add
and
ljmp
ret
mov
adc
fldl
shrb
popa
pop
jno
push
das
stos
xchg
sbb
scas
inc
adc
rcrl
adc
rolb
dec
mov
insl
and
pusha
sub
pop
mov
adc
cld
lcall
std
sbb
mov
push
pop
inc
in
je
imul
pop
and
and
loop
fidivrl
lcall
jne
or
add
jmp
lret
inc
scas
les
leave
sar
stos
pop
arpl
xchg
and
movsl
cmp
pop
sub
and
adc
pushf
sbb
xorl
mov
add
pop
in
out
inc
and
pop
out
clc
testb
pop
lock
push
roll
mov
cmp
fs
xchg
dec
mov
mov
cmp
cwtl
pop
sbb
xor
stos
test
mov
es
scas
cwtl
cwtl
imulb
inc
enter
jl
jo
xor
add
fstpl
mov
pop
fstpt
fs
sub
pop
les
rclb
mov
call
sar
inc
add
and
and
push
pop
mov
push
xor
loopne
push
loop
jmp
jg
fwait
insb
fiadds
inc
dec
shl
inc
into
xor
dec
fisubl
popa
sbb
mov
lock
add
cld
jmp
add
xor
sub
dec
outsl
orl
hlt
sub
jno
jg
mov
ds
mov
sub
mov
stos
sti
sbb
cwtl
mov
push
bound
ds
incl
adc
loop
mov
sub
mov
les
jp
test
ljmp
sub
std
enter
out
ljmp
jg
call
mov
sub
push
sub
xor
js
pusha
inc
mov
sahf
sub
sbb
push
inc
sahf
loope
push
jg
lcall
loop
leave
pop
roll
movsb
jp
xorb
mov
loopne
into
mov
std
dec
ss
pop
mov
jno
js
jmp
add
lahf
adcb
mov
jb
xchg
je
iret
pop
scas
gs
cltd
jmp
pop
stos
mov
adc
jg
dec
jle
jmp
nop
ljmp
lods
mov
add
lcall
push
xchg
xchg
dec
rcll
adc
in
mov
lcall
aam
lret
pop
jp,pn
and
jl
mov
adc
out
jp
stc
rolb
inc
push
ljmp
mov
fiaddl
push
clc
test
jmp
call
sub
mov
call
cwtl
leave
pop
mov
and
std
jmp
sub
das
adc
mov
dec
cmpsb
stos
xchg
scas
lcall
add
jmp
test
jg
jg
imul
daa
mov
mov
call
push
pop
add
stos
cmp
adc
sbb
popf
xchg
imul
sbb
incl
lcall
sub
in
inc
fstpl
push
filds
call
jae
jae
loopne
std
sti
ret
fwait
sbb
mov
inc
lcall
mov
enter
sbb
pop
or
mov
out
add
sbb
lcall
das
sub
movsl
xchg
sbb
cld
orl
xor
inc
ret
lods
add
adc
es
dec
shl
sbb
mov
test
mov
adc
call
jmp
mov
daa
adc
aas
cs
inc
sar
outsl
inc
cli
cmpsb
xchg
or
xchg
add
mov
aam
xchg
mov
loope
mov
fbstp
push
push
scas
xchg
hlt
add
movsl
mov
push
ret
decb
cli
cmp
cmc
imul
lock
jg
sub
iret
fcomip
sub
mov
mov
enter
or
add
pop
imul
or
push
fcmovu
fnstcw
mov
outsl
and
pop
pop
fmulp
jg
inc
push
cmpsb
stos
loopne
add
dec
xchg
push
dec
fildll
sub
inc
and
cld
fistpl
fsts
ljmp
push
cmpsl
filds
pop
cmc
cmp
pop
and
sub
ljmp
nop
jb
push
and
mov
decl
sub
sahf
jb
xchg
xchg
aad
and
ljmp
sbb
push
and
loope
jne
cmp
xchg
xor
pop
xchg
xor
mov
test
mov
or
mov
jle
push
ss
adcl
scas
popfw
fnstcw
cli
jg
rolb
mov
sub
jns
adc
pop
lods
xor
daa
pushl
pop
aas
push
addr16
test
adc
fcomip
decl
idivb
rcrl
mov
xor
xor
jle
xor
sub
pop
sbb
aaa
bound
jb
nop
aad
ret
jg
cmp
mov
ljmp
mov
movsb
mov
sub
test
xchg
dec
aas
int3
cmp
add
and
mov
sub
cld
mov
xor
pop
push
mov
jb
xchg
cmp
mov
adc
mov
inc
pusha
mov
mov
or
inc
lds
push
add
jg
add
aad
mov
mov
std
add
outsl
pop
mov
mov
mov
mov
inc
pop
xor
mov
cli
decl
push
aam
rcrb
fwait
les
clc
bound
shll
cmp
repnz
mov
jae
dec
stos
pop
movsl
call
scas
cwtl
cltd
or
jmp
lods
fisubrl
ljmp
xchg
add
ficomps
les
xor
or
mov
jmp
aas
xchg
jmp
xor
cwtl
filds
ficoml
outsb
in
lcall
ret
mov
out
add
mov
out
mov
add
ret
clc
push
out
call
mov
test
dec
adc
aam
push
dec
mov
pushf
mov
or
xchg
pop
jle
es
push
loope
dec
dec
jecxz
ljmp
pop
sbb
cmpsb
dec
adc
cmp
in
xor
add
pop
jne
mov
jg
pop
lods
sbb
and
test
fists
in
cs
and
mov
bound
inc
or
mov
xlat
cwtl
fidivrs
push
sbb
das
push
cmc
xchg
xchg
sub
sbb
push
stos
mov
xchg
xor
mov
cmp
inc
enter
pop
fstl
push
inc
ljmp
push
loopne
adc
xchg
lods
testb
daa
call
mov
inc
inc
cmp
pop
les
rolb
lcall
inc
lea
adc
mov
stos
xlat
imul
mov
xchg
pushl
and
ss
or
hlt
lret
test
movsb
push
dec
pushf
and
xor
call
adc
cli
fs
adc
test
sbb
mov
lods
movsl
cmp
fdivr
push
in
push
sbb
sub
jmp
adc
push
add
es
dec
mov
pop
inc
sbb
insb
aaa
enter
pop
add
lret
mov
add
and
adc
jp
mov
push
push
push
je
and
adc
gs
push
pop
adc
jle
or
das
clc
fisttps
arpl
imul
in
jne
aad
leave
fldl
test
call
jne
clc
and
dec
in
or
xchg
adc
jbe
dec
xchg
shl
xchg
sbb
cltd
inc
sbb
and
mov
push
cmp
fidivl
das
xchg
xchg
shrb
enter
jg
pop
jns
sahf
xchg
idivb
imull
jge
ss
cmc
in
pop
dec
add
adc
sbbb
outsl
es
insl
add
das
xor
test
shrb
pusha
aaa
adc
ljmp
and
mov
int
xchg
imul
xor
mov
sbb
sbb
pop
lods
or
decl
incb
cmp
pop
out
outsb
fcomps
pushf
rcr
repz
mov
jl
sub
hlt
jbe
loop
into
jns
jecxz
cmp
std
out
hlt
icebp
rcl
imul
andb
pop
or
out
add
mov
cmpsb
inc
leave
dec
dec
fcomi
add
cmp
jl
adc
decl
sbb
inc
xor
jmp
mov
enter
jl
push
and
inc
pop
imul
sarl
dec
notb
cmp
adc
lcall
and
push
dec
jne
inc
push
jnp
push
imul
loope
xor
dec
mov
cmp
sub
popa
xchg
outsl
clc
cmp
or
and
mov
mov
lock
xchg
dec
jg
mov
inc
pop
inc
sub
aam
and
push
push
pop
ret
mov
jecxz
pusha
xor
adc
rcrl
sbb
fdivr
xchg
incl
jg
in
pop
cmp
adc
adc
mov
push
adc
loope
imul
jle
pop
sub
in
loope
sar
or
jmp
sbb
jns
pop
dec
sbb
inc
ret
pop
jg
add
mov
pop
add
mov
jg
add
xchg
push
jp
and
sub
push
or
sbb
dec
pushl
jl
and
lahf
arpl
pop
int3
loop
sbb
cld
mov
inc
sub
iret
mov
or
loopne
out
push
and
lods
mov
mov
lods
sbb
adc
fs
push
lcall
and
jg
pop
sti
sar
mov
out
xchg
outsl
or
call
popa
nop
jecxz
cld
jo
es
lock
ljmp
cmp
push
bound
push
mov
fildll
add
pop
leave
andb
faddl
roll
inc
add
pop
fnstsw
outsb
movsb
sub
add
jne
pop
or
mov
cmpsb
sub
outsb
test
sub
xchg
inc
dec
mov
cmc
fs
data16
add
out
mov
mov
dec
rcrb
cmp
mov
in
mov
cmpsb
cmpsb
ja
ret
and
push
cmc
sbb
mov
push
xor
sbb
cmpsl
mov
out
jo
xchg
jmp
incl
imul
inc
jb
inc
mov
xor
pop
mov
incl
cli
loope
and
jb
jmp
inc
pop
daa
push
push
cmpsl
adc
add
incl
jp
xor
adc
outsl
or
dec
mov
insl
mov
test
mov
test
jg
or
data16
sub
out
pop
sbb
dec
adc
lcall
inc
adc
subb
subb
sub
or
mov
dec
xor
and
fmuls
repz
mov
or
mov
dec
sti
sahf
arpl
and
cwtl
outsb
sbb
sbb
int3
cwtl
ret
enter
jb
fidivrs
or
mov
pop
loope
pop
sbb
ljmp
xor
jne
adc
arpl
push
fisubrl
jb
push
adc
aaa
les
cs
push
jge
ljmp
ret
lret
ret
and
pop
mov
pop
cmpsb
mov
fmul
pcmpeqb
out
inc
rcr
mov
xor
sbb
xchg
loopne
ficoms
dec
jg
sub
stc
shl
sbb
fldt
loopne
fcomip
jmp
push
in
sbb
les
stos
sub
mov
in
fnstenv
sbb
or
xchg
or
mov
lods
aam
inc
pop
ret
push
pushf
call
adc
out
call
incl
adc
push
mov
inc
clc
pop
push
neg
int3
fildll
adc
nop
jg
loopne
push
sbb
mov
push
add
sbb
cli
jb
aam
pop
lods
jo
lahf
data16
push
popf
sbb
ljmp
subb
pop
adc
pop
jle
int
or
jg
lcall
push
inc
hlt
dec
cmp
push
je
aam
mov
jnp
aad
sbb
xor
cs
andb
xchg
push
push
pop
fbstp
loope
leave
je
pop
inc
lds
add
add
iret
mov
hlt
fwait
je
cmpsl
adc
into
dec
clc
bound
adc
jno
imul
and
mov
mov
repz
xor
sub
pop
xchg
cli
decl
dec
sti
xor
inc
out
cmc
icebp
aaa
cli
pop
cmc
out
xchg
fcomi
dec
or
dec
mov
or
or
mulb
pop
rorb
cld
into
pop
jo
bswap
or
das
out
clc
fnsave
xor
mov
cmp
je
aas
hlt
mov
add
jmp
mov
jecxz
mov
aad
fsubrs
negb
hlt
mov
pop
push
add
push
in
arpl
test
dec
push
sub
clc
push
loop
xor
push
mov
pop
divl
add
jg
push
xor
adc
dec
setl
filds
cmp
mov
out
jo
jecxz
cmp
fs
dec
aas
out
sub
push
fldl
es
pop
adc
jmp
push
icebp
fidivrs
push
mov
popf
xchg
lret
adc
add
js
dec
js
push
fwait
adc
sbb
test
inc
lcall
cmp
and
inc
jg
fcomip
jge
push
aad
aam
lods
xor
adc
cmp
aas
lret
call
pop
lea
call
shlb
movsl
int
mov
pop
adc
adc
loope
adc
mov
dec
insl
fucom
xchg
mov
sahf
xchg
cli
imul
or
pop
popf
test
push
aad
or
jg
mov
mov
mov
pop
out
mov
lea
fbld
popa
rcl
xchg
pop
loope
mov
add
mov
stos
sbb
mov
je
movsb
je
dec
cmpsl
lods
or
inc
aad
hlt
shr
aaa
mov
dec
push
imul
mov
es
or
mov
into
popa
stc
push
loopne
pop
adc
cli
and
dec
jmp
mov
cmc
fcmovnb
xchg
jp
and
sub
adc
mov
sbb
jmp
fstpt
cmpsl
lret
sub
test
pop
hlt
je
or
inc
pop
push
jg
mov
shll
out
push
gs
and
into
fwait
or
incb
popf
dec
xchg
das
pushl
pop
pusha
sbb
js
sbb
testl
call
adc
jmp
push
pop
fidivs
movsb
icebp
push
mov
adc
jno
inc
arpl
lds
add
scas
add
lahf
mov
mov
mov
or
cmp
iret
mov
out
mov
mov
call
data16
popl
mov
movsb
je
ret
push
adc
and
lcall
mov
jbe
shrb
inc
add
pop
jae
inc
out
dec
lea
jo
jg
dec
mov
push
jp
jo
pushf
or
in
int3
dec
stc
test
aaa
fcmovnbe
notl
mov
enter
sub
sub
push
lret
xchg
cld
pop
das
push
xor
push
lret
fcmovnb
leave
and
dec
push
outsl
les
clc
or
mov
xchg
push
mov
cmp
and
push
xchg
push
inc
mov
inc
adc
pop
pop
shrl
mov
imul
pop
push
jl
test
mov
and
push
into
les
aaa
stos
mov
or
filds
outsb
add
xchg
scas
es
adc
pop
sahf
mov
mov
cli
push
cli
loope
imul
and
mov
mov
ljmp
in
jl
andl
inc
add
fwait
xchg
shll
push
outsl
and
sbb
cmp
repz
and
ljmp
pop
inc
and
aam
shl
cltd
push
ljmp
cwtl
xor
popa
adc
rolb
mov
sti
mov
fdivl
xchg
pop
aaa
imul
lret
out
testl
rorl
dec
lods
sbb
js
ljmp
jno
imul
and
add
jge
outsb
cmp
fiadds
int3
lods
in
push
inc
cmpsl
insb
bound
ret
jg
sub
adc
pop
add
jae
stc
cmp
fdivr
loop
rcrb
inc
lret
mov
leave
jp
cmp
lahf
jbe
jp
jno,pn
mov
and
inc
rol
insb
loope
pop
hlt
nop
out
xchg
and
mov
insb
inc
stos
int
xchg
mov
call
mov
ljmp
lods
ja
pop
jmp
jp
sub
cwtl
jbe
fildll
adc
repnz
push
cwtl
or
or
dec
mov
jle
negb
cli
jmp
enter
sbb
sub
pop
inc
cmp
jb
dec
inc
aaa
mov
call
mov
cmp
pop
loope
push
inc
stos
mov
jmp
lods
ret
xchg
adc
iret
cmp
ror
mov
ljmp
js
push
mov
out
adc
outsb
xor
push
shll
sub
js
int3
fs
loopne
aad
mov
outsl
mov
in
add
out
cmp
and
fistps
xor
sub
decl
push
add
icebp
or
adc
add
lods
lds
xchg
fnstenv
clc
mov
xor
xchg
push
pmulhuw
stos
xorl
mov
add
ja
scas
sub
pushl
mov
or
pop
fildl
and
mov
mov
cmc
jbe
loop
stos
into
test
outsb
stos
int
call
dec
mov
loop
mov
cmc
call
dec
stc
fmuls
push
xchg
or
mov
pop
lods
mov
frstor
cmp
aas
xchg
jbe
inc
or
roll
lea
adcl
popa
and
mov
push
xchg
dec
sub
sub
loopne
ljmp
in
movsl
mov
stos
aad
or
ret
jns
dec
cwtl
arpl
arpl
cli
movb
scas
fadds
pop
clc
mov
hlt
mov
mov
sbb
sub
test
into
and
incl
inc
jb
sub
cmp
mov
pop
mov
inc
push
push
jbe
inc
lcall
std
aaa
adc
mov
loope
and
pop
clc
outsl
xor
adc
std
sbb
scas
gs
pop
or
jo
je
add
add
ret
fsubrl
cli
xor
dec
adc
insb
sub
mov
idivb
hlt
insl
es
cmp
nop
lods
sbb
jne
or
aas
mov
mov
sbb
nop
in
pop
sar
scas
ja
cli
andb
add
inc
mov
fimull
cltd
idiv
or
imul
pop
roll
dec
ja
sarb
in
dec
stos
and
in
ja
add
decl
add
lret
mov
mov
jecxz
ds
loope
scas
inc
mov
stos
jp
sub
mov
aaa
mov
adc
dec
pxor
cli
mov
push
xchg
iret
lods
sub
pop
enter
xchg
xor
jo
sarb
mov
xor
and
push
daa
xlat
push
shll
loopne
adc
aam
aam
clc
pop
mov
test
loop
sub
mov
sub
push
mov
jmp
or
inc
or
mov
jp
iret
pop
ja
mov
jnp
daa
add
lcall
vmovups
test
ss
fidivrl
xchg
mov
movsl
xchg
pop
mov
repnz
sbb
mov
push
cltd
cmp
lea
sub
jae
mov
fisttps
mov
push
cmpsb
and
and
rorl
push
inc
cmp
adc
jg
inc
js
ljmp
ja
fld
inc
sbb
mov
ss
inc
sahf
movsb
movsb
inc
in
dec
cmp
mov
jle
test
xor
std
into
jnp
rcll
in
ljmp
mov
fsts
out
imul
and
mov
inc
push
aad
cwtl
ret
adc
cmp
adc
ja
in
push
lahf
aaa
pop
out
cmpsl
movsl
push
daa
mov
out
and
inc
mov
push
pop
pop
mov
loopne
inc
popa
or
addr16
sahf
jbe
test
pop
popa
inc
or
nop
lds
mov
popf
lea
out
xor
rorb
shr
ror
jns
push
inc
jne
dec
mov
push
paddq
pop
rorl
xchg
and
pop
das
push
push
mov
jno
out
cli
fstpl
in
adc
nop
add
shrb
pusha
out
cmc
jg
inc
pop
ficomps
xchg
jae
sahf
mov
lds
push
cmpb
decl
adc
mov
fcoml
fistpl
cmp
clc
cmp
repz
popa
pop
dec
addb
cld
adc
mov
idiv
fbstp
test
xchg
or
jp
jb
rcll
ds
popf
outsb
ret
lock
fsubrl
sub
mov
rolb
or
push
divl
daa
push
pop
lock
por
and
call
push
xchg
xchg
mov
lods
ja
push
mov
lds
test
cmp
sub
mov
xor
push
push
out
push
push
jmp
and
inc
scas
sbb
aam
cwtl
out
mov
testb
lcall
adc
js
push
shl
test
pcmpeqb
ret
jg
jo
aas
mull
lret
shrb
pushl
dec
js
jmp
sahf
shrl
in
clc
xchg
movsb
cmp
sahf
dec
pop
cmpl
pop
dec
inc
out
push
icebp
jp
in
sub
pop
cld
pushl
inc
adc
or
inc
shll
cwtl
push
inc
push
pushl
out
insb
sbb
das
nop
movsb
mov
and
mov
xchg
lcall
adc
aad
cwtl
jmp
mov
fimull
cmp
mov
xlat
out
mov
scas
cli
push
push
cli
pop
xchg
mov
loop
push
jge
xchg
push
mov
nop
pop
in
fistpll
popf
inc
sub
mov
mov
jg
mov
into
xchg
ret
cmp
or
ljmp
add
insb
dec
inc
movsl
adc
xchg
lods
out
push
cmp
test
jmp
jns
es
jmp
rcll
mov
cmpb
mov
or
fstpt
outsb
mov
test
mov
outsl
and
dec
inc
or
outsl
imul
pop
jmp
sbb
divb
sub
out
in
mov
repnz
fdivs
fwait
jg
les
int3
mov
cmpsl
sarl
mov
add
insb
stos
add
addr16
ja
out
xchg
sub
aas
sbb
sbb
shrb
and
sbbl
test
jbe
xor
jmp
or
popf
jbe
xor
mov
sarb
sbb
inc
pop
mov
mov
cwtl
popf
or
test
push
insl
into
sbb
pop
jbe
loop
pop
je
xchg
fdivr
pop
cmp
movsb
call
pop
add
pop
cwtl
imul
ja
mov
lock
gs
cltd
enter
icebp
mov
jg
push
or
addr16
fisttpl
xchg
data16
mov
fidivrl
mov
dec
fwait
adc
inc
scas
mov
cmp
mov
or
lcall
xor
jnp
jb
sub
dec
mov
mov
xorb
jg
jno
incb
jbe
rolb
aam
cmpw
aad
xchg
adc
mov
xchg
loop
xchg
push
xor
stos
lahf
add
dec
lcall
or
test
inc
adcb
cwtl
pushf
cmp
in
data16
imulb
cmpsb
scas
xchg
scas
jl
pop
or
aad
jmp
fidivrs
addl
nop
xchg
jns
adc
cld
add
sub
popw
xchg
xchg
decl
sub
int
xor
adc
xchg
enter
bts
pop
add
pop
pusha
sbb
and
sbb
xor
mov
decl
add
les
sub
jns
add
test
cltd
dec
cld
pop
std
xchg
sub
xchg
xor
inc
push
xor
fdivs
dec
cltd
pop
scas
add
mov
enter
das
clc
decl
cwtl
cmpsl
subl
jge
dec
je
push
jbe
cmp
pop
sahf
push
out
push
pop
adc
insl
mov
mov
pop
popa
std
cmpsl
stos
lods
mov
out
fadds
dec
push
push
out
or
in
adc
jle
mov
test
int3
das
sbb
out
ss
xchg
mov
ds
arpl
stc
sbb
and
shl
loop
xor
aas
movsb
xor
mov
push
mov
out
clc
loopne
shrb
xchg
cmp
gs
cmp
jle
or
add
push
popa
inc
xchg
jne
ljmp
icebp
stc
outsb
dec
push
int
hlt
pushw
push
xchg
sar
lahf
jnp
loop
call
sarb
jle
push
nop
mov
adc
jecxz
cld
xor
clc
xor
sbb
mov
pop
mov
lret
adc
mov
lret
jg
jp
and
scas
mov
popa
mov
gs
push
pop
les
test
pop
jp
sbb
push
lds
jge
push
jns
and
push
xchg
mov
jecxz
mov
and
fisubrl
add
add
fidivrl
xchg
repnz
loope
fwait
fildll
pop
repz
adc
jg
test
xchg
arpl
faddl
mov
icebp
or
lea
mov
mov
movsb
pushf
out
xor
scas
sub
xor
js
fldl
xchg
cmc
fwait
mov
fdivrp
clc
dec
mov
cld
into
cli
mov
push
jecxz
jg
sahf
aaa
in
push
lcall
jno
mov
ss
sbb
jg
adc
stc
mov
enter
pop
jmp
test
add
jb
lret
add
bound
ljmp
and
aad
dec
loopne
incb
adc
loopne
shll
push
sahf
fucomp
cmp
push
xor
cs
mov
pushf
xor
pop
pop
push
das
push
bound
es
mov
lahf
push
add
xchg
aam
lock
cmc
sahf
movsb
mov
jae
pushl
inc
scas
jl
cmp
mov
popa
stc
xorb
adcl
cmp
jl
ret
scas
adc
xchg
movsb
stos
aam
mov
mov
mov
lcall
mov
cmpsb
lcall
sub
adc
xlat
jl
ljmp
fisubl
pop
sub
loope
fcoms
and
dec
icebp
mov
push
in
jp
movsl
ja
popf
daa
bound
add
pop
mov
sarb
in
popa
call
push
fcmovbe
jo
ljmp
pushl
push
mov
repz
mov
push
push
jmp
mov
mov
adc
mov
cmp
mov
lods
pop
pop
cmpb
jnp
rclb
pop
js
sbb
scas
adc
mov
stc
mov
mov
sub
int
je
cmovle
push
ljmp
jge
js
ror
sbb
pop
icebp
ljmp
or
fcoms
cmp
pop
xlat
popa
cmpsl
pop
push
sbb
adc
jne
jle
and
add
pop
ret
add
fsubrs
push
test
in
nop
or
adc
inc
adc
cmc
enter
unpcklps
and
sub
add
out
inc
or
mov
mov
fisubs
mov
pop
ja
mov
fstpt
xchg
xchg
add
adcb
outsl
or
lcall
pop
cli
jle
mov
and
sbb
js
idivb
adc
cld
and
outsb
mov
cmpsl
or
decl
dec
lea
leave
or
xor
sahf
dec
stos
sub
sarl
ret
scas
cmp
mov
fimuls
ret
pushf
sub
cmpsb
cmc
jg
sti
sbb
jne
hlt
xchg
into
out
xchg
cmp
jbe
jecxz
or
out
sbb
jl
push
and
or
mov
test
mov
jne
sbb
loopne
jg
mov
mov
movsl
test
xor
or
inc
pop
adc
mov
adc
mov
xchg
jbe
adc
leave
and
jns
cltd
mov
jno
ljmp
sub
ljmp
and
lahf
jg
jae
ret
scas
cmp
push
fwait
cs
lcall
out
push
clc
inc
and
jnp
rcrb
add
mov
or
fdivr
andb
lahf
test
int
orb
lahf
scas
repz
xor
mov
mov
pop
dec
mov
test
orb
test
scas
cli
int
xchg
int3
insb
and
es
neg
aaa
cmp
sbb
div
fistl
sbb
pop
cmp
xorb
icebp
fidivs
daa
pop
inc
les
test
stos
test
add
xchg
fists
push
sahf
sub
jno
popl
aas
sub
xlat
and
cmpsl
and
pop
sar
cmpsb
je
cmpsl
xor
add
xchg
mov
test
push
test
xchg
fisubl
dec
mov
outsl
sbb
ficomps
fimull
scas
imul
pop
cld
xor
leave
push
or
ss
sub
sbb
inc
mov
jne
aaa
cld
and
pop
insb
adc
push
test
cmc
inc
add
inc
cli
mov
dec
pop
xchg
enter
aam
incl
out
xor
xchg
test
pop
popf
sub
ss
fwait
jg
stc
std
lret
push
sub
ds
fidivrs
pop
stos
pushf
mov
int3
xchg
mov
adcb
rorl
and
or
pop
clc
fnsave
scas
bound
inc
cmp
movsl
hlt
push
cld
add
addr16
pop
cwtl
cwtl
sub
iret
incb
mov
jne
inc
sahf
sbb
sub
dec
push
add
sub
push
scas
test
pop
int3
xlat
push
lods
inc
inc
dec
jg
mov
nop
mov
call
enter
orb
js
les
insl
xchg
push
in
pusha
mulb
jg
mov
ja
inc
idivb
jno
int3
push
jne
je
les
pop
icebp
stos
test
scas
and
les
mov
lret
ja
dec
inc
in
addr16
hlt
out
add
imul
outsb
xchg
test
pushl
add
dec
in
fstpt
cmp
enter
push
jno
aad
sbb
stc
mov
xchg
push
bound
sti
ja
ret
pushf
fiadds
jp
sbb
mov
lsl
jg
shr
es
inc
adcb
or
mov
clc
push
xchg
int
push
lret
add
sbb
xchg
push
mov
cld
mov
cld
xchg
lods
stc
xor
jg
jecxz
dec
dec
clc
icebp
loopne
pop
loop
adc
les
cli
outsl
mov
mov
inc
sbb
pop
shrb
mov
sbb
add
cld
ljmp
cwtl
add
pop
cmc
sahf
ja
sub
clc
adc
pop
lock
ja
mov
frstor
push
mov
jp
push
ss
decl
dec
fidivs
adc
icebp
stos
testl
lods
out
ja
lahf
test
call
push
cmp
or
andb
and
and
out
cli
sbb
arpl
cmp
fwait
jg
lods
push
out
out
gs
call
dec
jns
aaa
out
fistpl
mov
jg
mov
addr16
sub
cmc
mov
popf
push
add
or
and
inc
inc
in
jb
dec
shlb
ljmp
inc
leave
and
int3
add
mov
hlt
out
rcll
and
jbe
jmp
lea
dec
aad
stos
out
sub
adc
out
sbb
inc
cmp
out
mov
data16
jg
jg
hlt
adc
mov
mov
pushl
rorb
dec
xchg
test
and
mov
xchg
popa
jecxz
loopne
stos
mov
dec
call
adc
lods
push
mov
mov
cmpsb
or
mov
insl
std
cltd
push
lahf
das
mov
or
push
test
call
dec
pslld
andb
aam
nop
enter
ret
decl
xor
mov
cmp
lea
mov
nop
je
dec
add
lcall
aas
adc
push
hlt
inc
std
cmp
movsl
cmp
add
cmp
pop
adc
cld
xchg
cmp
mov
cmpl
pop
pop
adc
cmpsb
ss
push
out
ficoms
stos
outsb
cmpsb
cmpsb
stos
jp
sbb
pop
movsl
xchg
es
add
outsl
mov
icebp
aaa
and
mov
aaa
icebp
jae
out
test
decl
pop
pop
dec
mov
shrl
jno
xor
fdiv
or
lret
clc
outsl
lock
sub
adc
jge
jmp
dec
pop
mov
and
push
pop
cmp
jbe
xor
lock
loopne
fimuls
xor
add
add
xchg
jo
enter
xchg
cmp
jmp
pop
std
mov
pop
lods
stos
bound
jg
loopne
push
mov
rcl
pop
fstl
add
call
int
packssdw
bound
sar
jmp
shll
int3
xor
test
out
sbb
ret
jns
xchg
sahf
jns
xchg
fcomps
nop
pusha
jle
mov
lods
mov
test
int
aaa
std
mov
addl
repnz
insl
in
and
sbb
cmp
pop
inc
scas
mov
fwait
mov
test
cmp
loop
pusha
cli
lcall
sbb
ret
fldcw
push
insl
jne
jmp
push
test
add
ja
jp
mov
mov
mov
fdivrp
push
jp
jo
add
jb
lods
rcrb
adc
cwtl
loop
sbb
out
adcl
sub
add
jg
je
bound
xchg
out
cld
sbb
das
icebp
xchg
movsl
mov
daa
test
imul
stos
sbb
or
call
pop
les
es
jmp
jl
inc
mov
ss
jno
xor
orl
sbbb
mov
push
mov
jg
push
insb
pop
or
in
push
cmp
mov
xchg
xor
pop
pusha
lock
incl
push
xchg
movsl
dec
test
push
ret
add
xor
and
fbld
jge
loop
outsb
scas
sub
rolb
insb
es
call
cli
cmp
jbe
into
repnz
fbld
ret
or
mov
loope
xchg
or
ret
xchg
cmp
test
cmpsb
scas
or
call
cwtl
mov
ret
clc
sub
cltd
xor
cli
ud0
inc
imul
pop
fnstenv
fld
fcomip
jmp
add
or
mov
cmpsb
loopne
push
mulb
cmp
lock
inc
sub
test
mov
lcall
sub
xor
lcall
popa
mov
mov
cwtl
lods
ljmp
test
sbb
sbb
mov
push
daa
icebp
sub
push
jl
loop
incb
mov
je
jle
dec
jge
stos
jmp
popf
mov
sbb
mov
insl
or
sub
into
push
dec
pop
daa
xor
out
fildl
stc
loop
or
xor
adc
mov
inc
inc
inc
jg
and
push
popa
mov
push
ja
fildll
jnp
jns
test
add
test
test
mov
xor
ljmp
add
inc
lcall
mov
movsl
int
sbb
std
sbb
xlat
inc
mov
nop
mov
fildl
mov
cli
pushl
mov
dec
addb
loop
jae
pop
jbe
adc
cmp
ljmp
dec
add
add
stos
jno
xchg
sub
cmp
or
incl
mov
inc
cltd
adc
mov
movsl
movsb
and
jmp
pop
popf
jb
pop
xchg
adc
jl
pusha
outsb
cmp
mov
sbb
cwtl
or
mov
mov
gs
sub
dec
mov
adc
or
or
add
sub
cmp
cmp
mov
lret
push
xchg
mov
imulb
or
insb
in
bswap
ret
xchg
inc
mov
jecxz
dec
inc
jnp
call
pop
ljmpw
or
repnz
xchg
xor
in
pop
xchg
cmp
push
test
call
adc
jmp
adc
jecxz
push
out
push
cld
pop
push
adc
shrl
jecxz
and
je
enter
imul
push
xchg
add
push
rol
cmpb
adcl
mov
add
in
mov
idivb
fmulp
push
fs
loope
mov
aas
mov
sub
lret
mov
mov
inc
xlat
dec
jbe
imul
aas
add
pop
xchg
pop
mov
mov
fcompl
adc
mov
fimull
sarl
cmp
xchg
testl
clc
pop
xchg
sbb
aam
and
jecxz
es
in
mov
lret
movsl
add
inc
pop
sbb
addr16
adc
shr
ds
pop
shll
dec
scas
dec
dec
pop
jae
testb
lcall
jg
xchg
call
xor
dec
lock
filds
in
mov
lods
push
mov
adc
int3
mov
cmpsb
xchg
cmp
adc
pop
int3
pushf
xor
aas
pop
push
sarl
or
and
mov
sub
fildll
ljmp
mov
testb
mov
sbb
push
xlat
cmp
inc
cli
jg
jno
fwait
pop
inc
cmp
jns
jmp
jmp
andl
cli
xor
jo
cmp
das
dec
test
adc
lcall
push
add
rolb
test
adc
mov
rorb
mov
push
mov
inc
mov
xchg
out
cli
das
add
add
stos
xchg
insl
sbb
int3
icebp
mov
jmp
sti
decl
fisttps
adc
jmp
scas
jecxz
xchg
lahf
mov
and
push
fdivs
push
sbb
lods
dec
xor
inc
call
jle
dec
mov
and
andb
jno
or
repz
mov
gs
or
inc
frstor
mov
push
cld
incl
inc
rorl
cld
mov
or
lods
insl
inc
inc
in
inc
popa
call
imul
mov
call
aas
mov
rolb
dec
pusha
pop
add
mov
addb
adc
cli
jmp
loope
push
ss
repnz
pop
and
roll
scas
jp
jecxz
jl
xor
mov
in
push
mov
dec
xor
pop
push
cmc
call
mov
inc
hlt
jno
sub
je
repnz
aad
xchg
clc
pop
cli
push
add
lahf
test
insb
jecxz
lods
fcom
sbb
ret
push
or
dec
pusha
adc
sti
scas
pushl
sbb
sbb
pusha
xchg
mov
scas
lcall
sbb
and
cmp
in
ret
outsl
inc
cmp
sbb
mulb
push
popa
hlt
popl
pop
rcrb
dec
mov
daa
pop
add
andb
mov
sar
adc
lods
ljmp
call
xchg
cwtl
push
test
icebp
hlt
ljmp
or
aaa
sbb
fwait
icebp
xor
or
pop
fs
mov
dec
dec
xchg
pop
cmpsb
out
mov
orl
arpl
mov
and
incb
aam
adc
mov
xchg
stos
jmp
sahf
insb
mov
adc
adc
dec
lret
loopne
imul
adc
adc
pop
inc
gs
repnz
mov
in
jno
icebp
icebp
push
cwtl
test
push
mov
mov
addb
pop
mov
push
ficompl
fistl
das
clc
cmp
sub
out
adc
cwtl
ja
aad
pop
and
les
int
pop
in
movsb
xor
jmp
mov
das
scas
or
jmp
js
lcall
xor
insb
mov
sub
xchg
sbb
add
push
test
out
add
aas
pop
push
fmulp
aas
out
clc
inc
jnp
jbe
shrb
fidivrs
fcmovu
mov
lret
adcb
sub
shr
fmuls
int3
jg
or
rcrl
imulb
int
or
in
lret
lahf
lods
mov
jns
mulb
jae
ljmp
pushf
repnz
jns
fidivrs
xchg
shrb
in
outsl
gs
or
xor
push
cs
mov
cmpsb
push
cmp
pop
cmp
shll
add
ja
jnp
into
les
adc
xor
lahf
gs
enter
sbb
push
aam
aaa
nop
cmp
filds
cs
aaa
mov
test
jl
in
out
mov
rol
js
lock
repz
es
cmp
mov
in
out
ret
push
add
mov
mov
push
and
in
int
jle
pop
testb
adc
daa
dec
or
mov
pop
cmp
dec
add
mov
pop
in
add
fisttps
or
lea
mov
aam
dec
aas
adc
push
test
into
mov
cmp
push
mov
pushf
movsl
mov
push
pop
lds
and
std
pop
pop
sub
jg
fistpll
pop
pop
ss
and
cmp
adc
mov
dec
rorl
iret
insb
mov
mov
pop
clc
inc
mov
mov
sbb
js
pop
cmp
decl
xor
data16
xor
xor
mov
fstps
repnz
push
pop
pop
repnz
jo
in
fmuls
jbe
mov
inc
adcb
xchg
imul
add
in
cmp
push
rcr
jbe
js
insb
call
cltd
cli
incb
fldcw
popa
adc
and
sub
push
in
in
mov
add
mov
push
adc
stos
pushl
cld
dec
cwtl
mov
jno
sub
mov
inc
lds
ret
fiaddl
lock
xor
and
xchg
and
adc
fisttpl
clc
or
mov
arpl
fisubl
into
or
shll
iret
mov
cld
add
movsb
cltd
movl
js
sbb
inc
jg
mov
pop
lods
cwtl
mov
jmp
mov
or
dec
pop
test
mov
mov
je
sub
aas
movsl
mov
subb
sbb
fnstenv
lret
shll
lods
fcomip
popf
popf
xchg
pushf
and
daa
push
cwtl
inc
xchg
xor
lock
orl
rorb
mov
icebp
add
fbstp
sbb
lahf
jno
negb
cmp
mov
and
push
out
clc
rcrl
xor
xor
rol
stos
jmp
mov
xor
int
scas
out
and
cmp
ljmp
bndstx
push
mov
dec
std
or
xchg
lahf
out
inc
mov
jge
add
push
add
mov
and
push
cmp
aaa
filds
cmpsl
push
loope
and
sbb
xchg
mov
nop
inc
mov
xor
cmpxchg
repz
xchg
lret
cld
fmull
hlt
mov
and
jg
xor
sbbb
in
adc
hlt
sbb
orl
lock
pusha
mov
jg
push
push
loope
adc
stos
pop
xchg
mov
repz
mov
stos
ret
or
ret
data16
jbe
xchg
into
leave
or
mov
or
fadds
ljmp
in
add
lds
je
and
xor
inc
dec
add
xor
xchg
mov
mov
es
movsb
ljmp
mov
xchg
sbb
pop
dec
std
mov
pop
test
lods
mov
ss
mov
fs
dec
out
insl
in
xchg
jecxz
inc
pop
push
push
jg
adc
enter
incl
push
and
jmp
outsl
adc
jnp
sub
add
jp
inc
cmp
push
cmp
jg
rcrb
outsl
mov
mov
mov
xor
js
xchg
xchg
or
push
movsl
push
mov
pushf
add
addr16
mov
mov
pusha
xchg
mov
cld
adc
addr16
mov
push
jg
mov
das
jle
inc
aas
xchg
aam
test
pushf
sub
subb
mov
mov
push
or
mov
addr16
dec
mov
xor
jbe
movsb
xlat
hlt
mov
idivb
pop
mov
adc
pop
xor
or
leave
sub
mov
xchg
pop
lock
ja
push
cli
xor
add
dec
pop
js
pop
aad
data16
push
inc
jne
adc
pop
lock
dec
ffreep
jle
mov
lret
fistps
hlt
icebp
ljmp
jle
leave
and
xor
adc
sarl
fildll
mov
sub
pop
cmc
sub
jmp
ret
out
cmp
aam
leave
jno
xchg
sbb
je
int3
xlat
cmp
jecxz
incl
bswap
or
sbb
mov
rorl
lcall
out
popl
jmp
push
in
adc
filds
push
push
or
xor
xchg
imul
dec
push
icebp
popf
and
push
movsl
cmpsl
inc
and
ret
clc
loopne
mov
shlb
push
dec
stc
fsubr
dec
or
jge
add
xor
dec
pop
and
pop
mov
ljmp
push
lock
xchg
mov
inc
push
jg
mov
dec
xor
jge
addr16
stos
or
sbb
or
shl
dec
inc
xor
ficomps
les
cmp
and
adc
sub
jecxz
call
xchg
adc
mov
aad
inc
xchg
xor
mov
nop
mov
jg
push
scas
pop
mov
xor
push
or
xorl
pop
pop
inc
lahf
cltd
ret
enter
mov
inc
jl
ljmp
lods
int3
es
jmp
mov
out
cmp
pop
loopne
decl
rcr
dec
loop
sub
cwtl
cmp
cmp
repz
adc
icebp
xchg
dec
or
stos
or
dec
push
lret
push
mov
incl
xchg
mov
test
clc
loop
out
jbe,pn
fsubs
sbb
xlat
ffree
cmp
or
pop
mov
nop
mov
xchg
sar
daa
pop
jo
sbb
add
push
or
jbe
mov
xor
and
push
lods
es
xchg
dec
fwait
movsb
pop
movsl
clc
int
imulb
mov
out
xchg
xchg
inc
pop
aaa
js
addr16
decl
xor
ss
push
push
mov
push
es
push
adc
fldt
mov
mov
cmp
sbb
xchg
in
rolb
pop
cwtl
into
sbb
dec
pop
mov
fdivrs
dec
or
pop
pop
mov
call
shll
dec
jge,pn
jnp
xchg
sub
ud1
mov
xchg
push
or
std
mov
call
cmp
dec
jnp
jp
enter
inc
adc
aaa
out
jno
or
cld
jg
jp
mov
inc
js
popf
xor
xchg
push
add
cltd
outsb
outsl
dec
cmp
sbb
push
aaa
push
testb
cmp
cmp
mov
cmp
cs
or
lock
push
cld
or
jmp
arpl
repz
xchg
mov
jns
xor
adc
sbb
sbb
lcall
mov
xchg
dec
dec
mov
icebp
iret
xchg
mov
jp
add
push
mov
mov
enter
push
jae
mov
push
xor
cltd
or
fucom
sti
lods
icebp
jo
xchg
lds
call
jge
xor
int
fcoms
adc
das
pop
mov
xor
outsb
push
mov
push
ds
push
adc
lret
and
outsl
mov
test
aas
int3
inc
mov
hlt
adc
pop
pop
sar
decl
fxam
je
insl
inc
incl
leave
and
mov
xor
mov
push
stos
lods
data16
mov
cmp
decl
lahf
mov
mov
divb
or
sbb
sub
lcall
addr16
inc
mov
inc
in
inc
shrb
scas
adc
xchg
lods
nop
outsl
ret
aam
add
mov
dec
cmp
inc
outsl
andb
add
lds
std
xor
sbbl
add
pop
pushl
pushf
dec
ja
stos
add
subb
mov
ret
cmp
add
mov
adc
xchg
je
sbb
lods
das
call
int
mov
dec
mov
lcall
or
cmpsl
xchg
call
rep
and
ds
add
cmc
pushl
cmpsb
push
adc
inc
fldt
pop
mov
mov
je
cmc
ljmp
test
pop
std
por
cld
lea
enter
or
dec
dec
jge
aaa
jne
dec
ret
pop
dec
sbb
sahf
decb
cld
pop
cmp
mov
pop
mov
inc
dec
xchg
pop
pop
enter
call
bound
out
mov
arpl
add
mov
jae
adc
cmp
cmp
lahf
repnz
push
and
sub
fidivl
sbb
bound
lahf
mov
and
rcrl
popa
dec
pop
xchg
aas
add
or
enter
pop
lods
shll
jno
out
xchg
jo
dec
out
arpl
cmpb
data16
jle
lock
fcmovb
dec
sbb
dec
dec
pop
subb
fwait
lock
and
or
lods
dec
push
lds
clc
pop
xchg
jl
cmp
scas
arpl
inc
add
call
and
mov
cmp
aam
js
mov
mov
fcmovnb
pop
fisubs
es
aam
jmp
jmp
mov
mov
hlt
jg
int3
out
add
mov
loop
pop
enter
aaa
fld
pop
shlb
pop
and
ja
fcomip
lret
incb
mov
mov
or
jg
mov
pop
fstpl
fs
fidivl
sub
mov
loopne
inc
mov
jecxz
nop
mov
cmp
inc
std
jno
jg
cwtl
shlb
jl
or
adc
ljmp
shrl
ss
dec
in
rcll
cmc
mov
pop
push
decl
and
mov
mov
mov
fwait
mov
popa
fcomps
adc
loopne
dec
movsl
mov
test
imul
xchg
xchg
inc
or
jbe
pop
mov
fdivrl
andl
test
sbb
adc
fcomip
sbb
ljmp
dec
test
ffreep
or
int
icebp
mov
pop
scas
mov
add
movsl
je
stos
movsb
ja
mov
fs
xlat
cmp
push
lock
pop
or
xchg
xchg
movsl
xchg
mov
das
js
movsl
lahf
mov
fs
loopne
mov
jno
xor
loop
jo
je
mov
je
xchg
push
ds
jl
in
imul
fnstenv
adc
incl
sub
cli
dec
jbe
clc
adc
clc
mov
lds
adc
jg
cmovle
mov
or
jnp
ljmp
pop
jl
mov
nop
pop
mov
and
sub
push
mov
stos
ljmp
mov
and
in
sub
push
ja
fidivrs
mov
cld
decl
adcb
hlt
sti
lcall
xchg
dec
sub
aaa
and
test
ds
gs
dec
outsl
clc
pop
add
fimuls
les
and
jb
mov
insb
clc
rol
outsl
shrb
cli
dec
fisubl
adc
lock
pop
std
push
loope
sar
int3
push
mov
pop
xor
mov
lcall
sub
jge
lods
jo
cmc
ja
and
push
cmp
cmovb
adc
sahf
sbb
loope
iret
jnp
push
push
cmp
xchg
fsub
repz
inc
test
mov
mov
and
push
xchg
mov
cmp
mov
cmpsl
or
mov
cli
mov
fcomip
cmp
pop
jp
xor
cmp
mov
xor
inc
std
mov
mov
movl
int
aaa
cmp
or
jmp
adc
adc
les
xchg
cmp
or
mov
fdivs
in
inc
in
dec
inc
les
jmp
test
xor
or
fldcw
push
shlb
fwait
jg
dec
xchg
add
cmpsb
sbb
or
mov
lods
fcoms
addl
lgs
sbb
push
cld
pop
jno
inc
sahf
jo
call
outsb
call
mov
and
jge
pop
sbb
das
dec
rcrb
cmp
xchg
sbb
push
mov
pop
lock
pop
test
cmp
xchg
popa
out
int3
or
bound
or
inc
es
adc
pushf
fidivrl
popa
addb
sbb
dec
push
xchg
inc
or
cld
inc
xlat
inc
cmp
sbb
push
clc
sbb
pop
decl
out
push
mov
cmp
lock
inc
cli
jmp
out
orb
lock
shlb
add
inc
mov
lods
cli
mov
cmp
test
imul
lock
ss
add
pop
hlt
ret
lods
jns
gs
jae
sub
pop
xchg
lods
in
push
out
inc
jno
ret
into
fsubl
adc
bnd
mov
jo
int3
in
pop
out
jb
cmp
xor
sarl
and
pushf
fmuls
jbe
rcrl
pop
fidivs
idivb
clc
push
adc
adc
dec
inc
mov
test
xor
incl
in
pop
jecxz
dec
js
ja
les
cmpsb
dec
mov
mov
xor
mov
inc
inc
lock
sub
push
mov
xchg
xchg
rorb
ljmp
jg
dec
xchg
lock
int3
in
in
sti
and
jmp
mov
ficompl
mov
stos
into
mov
test
or
push
in
add
mov
out
das
sub
and
sbb
in
add
mov
and
push
push
es
insl
test
and
pop
jp
dec
nop
jbe
in
fbstp
arpl
decl
adc
outsl
add
ljmp
loop
mov
mov
js
sbb
push
mov
cmp
fimuls
enter
adc
clc
lcall
pop
or
push
fdivp
icebp
loopne
jg
and
xchg
popa
ret
mov
mov
shll
mov
mov
mov
into
adcb
lcall
inc
and
xchg
mov
jge
dec
push
sub
pop
mov
hlt
pop
jg
pushl
sbb
dec
add
dec
lret
jns
in
push
lods
repz
mov
sub
ljmp
subl
cwtl
jns
pop
test
jecxz
jb
mov
fnstcw
nop
adc
sub
mov
sbb
or
pop
push
mov
xor
loop
push
outsl
adcb
shll
mov
sub
jno
enterw
pop
js
stc
bound
es
cli
push
mov
cli
sbb
fs
xor
lea
cmpsb
mov
inc
add
loopne
lea
cmp
fsubs
or
fwait
test
mov
outsb
cmp
jo
lock
add
nop
mov
mov
jnp
fmul
in
adc
stc
fucomi
fs
pop
aam
xor
and
xor
inc
push
inc
cli
out
popa
in
jo
xchg
in
pop
fdivr
gs
mov
cmpsb
sub
arpl
sub
xchg
xchg
cmp
jp
or
aad
ret
inc
jne
xor
pop
sahf
xor
movsl
cli
rolb
repnz
cmp
cmpsl
test
and
mov
decl
in
xor
xchg
lcall
test
mov
xor
jnp
lret
hlt
cltd
mov
pop
icebp
pop
xlat
pop
outsl
clc
lds
f2xm1
xchg
adc
mov
aaa
shr
mov
movsb
add
sbb
adc
or
mov
cmp
mov
push
insb
cmp
mov
shlb
in
fcomip
lcall
and
scas
and
inc
outsb
xlat
pusha
call
mov
jp
dec
lods
sbb
sahf
shr
shll
jnp
mov
jmp
leave
pop
in
es
scas
mov
cmp
cld
decl
jmp
out
ret
sti
and
mov
jecxz
add
lods
popa
es
xor
leave
mov
out
insl
xchg
test
cmc
jmp
icebp
xchg
mov
insb
push
push
int3
xchg
pusha
mov
in
stos
adc
xor
fdivp
es
ljmp
sub
mov
fsubs
movsl
mov
ljmp
dec
dec
stos
mov
mov
and
jae
rorl
mov
enter
fdivrs
lcall
out
sbb
cmp
cmp
pop
pop
aad
inc
js
mov
mov
or
mov
fcoml
jp
pop
push
out
data16
jb
lcall
rclb
or
add
insb
loop
dec
stos
or
fs
lret
mov
jmp
fcomip
sbb
nop
aad
mov
int
out
jge
decl
push
push
xchg
dec
sbb
mov
test
nop
jns
hlt
mov
pop
outsl
scas
add
mov
pop
subb
pusha
mov
aam
movsl
pushl
loope
loope
jae
int
pop
inc
sub
jmp
dec
std
or
jns
cld
ret
lods
pop
rcr
or
mov
adc
decb
cmpsl
sub
aad
shrb
lcall
push
lcall
and
push
jne
mov
mov
repnz
lds
gs
les
loope
mov
test
dec
pop
sbb
inc
mov
cmpsb
hlt
and
push
pop
and
mov
push
xchg
dec
adc
or
mov
xor
enter
add
decl
dec
push
pop
xor
stos
lods
sbb
pop
inc
test
mov
imul
pusha
jg
or
fs
cmp
in
push
fcomps
adc
decl
loop
fists
pop
cld
stos
and
pop
xchg
movl
push
loop
fs
jo
std
hlt
jg
test
jbe
mov
dec
aaa
dec
fs
mov
icebp
cmp
pushl
ret
movsb
mov
push
repz
jl
mov
jo
inc
inc
pop
sbbb
sbbb
xchg
jo
incl
sbb
std
adc
inc
aad
into
jb
mov
cwtl
pop
cmc
call
pop
and
das
and
mov
jg
lock
clc
daa
or
mov
adc
loop
into
jge
cli
mov
mov
nop
mov
call
xchg
je
ficoms
mov
inc
jnp
mov
sbb
fisubl
out
pop
add
lcall
inc
push
cs
gs
sub
add
push
dec
dec
xor
mov
pop
rorl
clc
jg
and
sbb
call
test
and
xor
test
mov
push
and
mov
stos
lcall
sub
int3
inc
imul
jecxz
pop
xor
xor
je
push
sbb
mov
cld
jge
insl
daa
insb
cmp
repnz
pop
add
outsl
mov
pushl
add
clc
push
xchg
cmpsb
pusha
mov
ljmp
push
gs
clc
incl
ret
push
roll
jg
mov
add
xor
cld
jmp
cmc
aas
pop
lock
loop
das
ss
xor
mov
inc
mov
mov
decl
outsl
xadd
sarl
into
sub
xor
jecxz
push
movsb
inc
dec
jge
push
jo
add
push
hlt
mov
popa
dec
scas
aam
and
sbb
inc
inc
fldenv
add
std
repnz
mov
ret
not
lcall
mov
movsb
xchg
aam
pop
pop
in
nop
decb
add
mov
popf
mov
mov
mov
in
hlt
ffree
pop
out
cs
out
mov
sub
xor
adc
jo
mov
ljmp
cwtl
or
push
clc
fstpl
call
mov
cmp
pop
dec
rorb
adc
sub
push
into
pop
fs
cmc
or
mov
mov
repz
mov
cmp
fbld
lods
mov
jecxz
push
push
inc
ja
aas
xorl
in
push
out
xchg
sbb
stc
sbb
loopne
lcall
bound
pop
push
pop
lahf
jno
daa
jmp
int
push
nop
js
cmp
cmpsl
scas
pop
loope
out
mov
and
decl
pop
pop
and
fists
push
or
jge
xor
dec
in
xor
add
mov
inc
push
aas
lret
testb
in
cwtl
jecxz
test
clc
icebp
aam
xor
dec
in
xorb
arpl
fimull
hlt
sbb
dec
lea
aaa
fsub
xor
imull
lcall
xchg
dec
cltd
fadds
xor
pop
pusha
in
ljmp
inc
in
mov
inc
pop
movsb
ss
lcall
movsb
fldenv
pop
lock
cmpsl
stos
fs
pop
icebp
clc
xor
fcmovb
or
les
sub
test
pop
dec
aaa
mov
mov
sbb
mov
cmp
scas
mov
pop
dec
jbe
test
jb
pop
pop
mov
xor
aad
mull
xchg
cmpsb
repnz
mov
or
adc
test
js
lret
jp
stos
lahf
sbb
fwait
loope
out
les
xor
mov
mov
loop
lcall
and
cmp
movsl
dec
jmp
pusha
call
push
rcrb
andb
test
mov
sbbb
pop
xchg
xchg
add
push
cmpsb
addb
push
adc
sbb
cmp
decl
sbb
add
scas
in
shl
and
loopne
std
fbld
adc
xchg
jge
jno
les
mov
ret
add
lods
mov
jmp
mov
je
xchg
xchg
out
adc
push
outsb
mov
push
push
and
xchg
mov
pushf
icebp
mov
fdivrl
out
pop
push
test
dec
jg
lret
add
mov
cmp
ret
and
mov
cli
call
sub
test
sahf
divb
cli
xor
mov
sbb
negl
add
and
loop
xor
in
pushl
fcomps
push
sub
pop
test
xlat
sar
mov
js
scas
mov
stc
jo
or
je
loopne
push
movsb
inc
mov
pop
push
out
push
xor
dec
pop
mov
out
in
xor
or
negb
bnd
shl
dec
pop
dec
jmp
jp
incl
mov
in
adc
cmp
push
in
jmp
addb
jae
add
sub
jecxz
push
outsb
iret
cmp
and
test
call
lock
mov
and
jbe
imul
int3
lock
rcr
clc
dec
int3
in
mov
cmp
xor
mov
push
xchg
clc
jecxz
std
dec
xchg
addb
fs
mov
lcall
mov
inc
je
push
fldl
sub
popf
movsb
add
lcall
fdivrs
adc
ss
jb
mov
imul
ret
mov
jne
aas
push
adc
das
xor
cmp
sub
adc
pop
mov
es
repnz
cmp
inc
push
adc
ret
aad
ja
mov
loopne
and
mov
xor
dec
adc
push
lock
adc
jo
mov
sbb
aaa
mov
xchg
call
cmc
xchg
leave
mov
jbe
shr
xchg
jg
xchg
jp
mov
fcomp
or
mov
dec
push
arpl
out
lds
jecxz
hlt
movsl
stos
push
repnz
scas
popf
cmpsl
daa
sarb
lcall
aam
mov
xlat
pop
sub
or
xchg
jecxz
xchg
xor
dec
clc
out
pop
sub
test
mov
mov
jg
scas
mov
add
push
add
lea
data16
dec
loopne
incl
push
xor
push
outsl
inc
dec
popf
repz
fs
xchg
sub
ja
out
dec
aaa
mov
sti
add
xor
arpl
xor
jno
pusha
sbb
fs
jb
lds
or
insb
repz
cmp
add
inc
in
sbb
mov
xchg
xchg
aam
ret
sub
lcall
or
mov
imul
xchg
imul
fsub
push
cmp
pop
jo
mov
cmp
sarb
out
mov
outsl
mov
pushf
push
sub
insl
xchg
addr16
fwait
cs
bound
adc
les
pop
xchg
push
in
roll
mov
xchg
test
inc
test
mov
dec
sahf
loopne
std
ljmp
orl
bound
xchg
mov
vzeroupper
std
mov
add
mov
mov
adc
decl
mov
arpl
add
or
scas
arpl
rcrb
call
pop
jg
pushf
push
pusha
icebp
enter
mov
or
add
imul
sub
jmp
mov
mov
jl
mov
push
jae
daa
roll
int
ret
cmc
je
pop
leave
xor
sbb
xchg
mov
and
push
mov
call
fwait
sub
dec
insb
mov
sub
sbb
cmpb
sbb
aas
out
sarb
hlt
out
js
inc
subb
xchg
shll
mov
cli
ret
or
push
std
push
adc
jb
mov
mov
jg
xchg
sub
clc
sub
dec
lods
cmp
add
sub
pop
clc
jecxz
pop
and
outsl
sub
adc
jno
out
xchg
shrl
ret
adc
cli
ljmp
push
ficoms
sahf
push
add
movsl
mov
xchg
xorb
push
cmp
sub
sbb
xchg
add
pop
adc
je
divb
jmp
jg
aaa
mov
and
lcall
loope
outsl
jno
xchg
mov
add
loope
sub
jl
dec
clc
cmpl
sbb
jg
dec
adc
pop
push
dec
jnp
xor
cmpsl
dec
lahf
movsl
jle
dec
into
and
or
jbe
jge
jg
add
cmp
pop
mov
lret
inc
imul
outsl
inc
add
or
mov
decl
in
xor
xchg
fiaddl
ret
and
inc
aad
xchg
push
rcrb
ss
push
movsb
in
jbe
outsb
sbb
inc
nop
in
jg
cli
shll
sarb
jl
or
pop
mov
cmpsl
sub
push
test
adc
cmpsl
testb
push
out
push
inc
mov
sbb
cmp
add
add
xor
mov
mulb
out
and
sub
xor
jns
imul
hlt
fdivs
sbb
sbb
inc
in
bound
push
pushf
mov
call
pop
dec
ljmp
fcmovnb
in
or
sub
or
hlt
xchg
sbb
lcall
clc
jg
add
jmp
inc
jbe
and
scas
pop
loope
outsl
sbb
inc
insl
lods
mov
mov
movb
push
je
xchg
fadds
sbb
sbb
call
jge
test
js
dec
xchg
daa
fbld
imulb
fcomip
push
push
sub
pop
nop
mov
mov
push
inc
add
loop
inc
and
adc
or
mov
jbe
sarl
or
pusha
psubusw
jbe
jecxz
xor
sub
insl
inc
add
pop
push
lods
les
and
in
mov
loop
popa
cltd
std
inc
adc
mov
xor
jg
mov
aas
jbe
mov
adc
adc
sub
cmp
ret
addr16
xchg
mov
sub
pushl
scas
data16
hlt
adc
sbbb
xchg
pop
xor
jmp
and
mov
sub
outsb
xchg
jmp
inc
mov
decl
fwait
aaa
std
les
mov
jle
dec
sbb
cld
and
mov
inc
decb
pop
aam
std
jns
data16
xchg
divb
jo
addb
in
clc
ljmp
adc
jb
orb
mov
xchg
pop
lods
fstpt
pop
push
inc
mov
and
add
jmp
cli
das
add
xor
dec
pushf
call
sub
jg
fimuls
mov
fs
mov
add
in
pushl
push
jo
mov
pop
add
es
or
mov
decl
jne
fidivrl
outsb
push
loop
cltd
cmp
xor
das
clc
in
aaa
sbb
push
aaa
pop
fsts
mov
jg
sbb
mov
pop
bound
les
add
out
lods
pop
pop
movsl
sbb
jb,pn
lea
inc
xor
std
mov
psrad
jo
dec
mov
add
and
mov
fcomip
jg
jns
lods
push
test
pushf
std
ss
sbb
inc
aas
jmp
adc
pop
jnp
sbb
jle
add
in
dec
mov
mov
jl
call
pusha
mov
push
sub
sub
adc
cmp
roll
out
jp
gs
adc
mov
mov
mov
pop
jl
pop
add
enter
cmp
loopne
xor
sub
push
sti
xchg
cmp
and
sbb
sub
jp
std
into
or
dec
inc
push
push
aam
icebp
ljmp
mov
sbb
cmp
xor
cmpsl
and
xchg
mov
inc
or
add
int
pop
and
xor
jnp
in
outsb
adc
cld
int
sbb
mov
and
rclb
or
sub
xchg
out
mov
push
aam
mov
mov
inc
int
lds
dec
push
cli
in
decb
mov
stos
mov
mov
dec
push
aad
mov
cli
inc
lcall
mov
call
dec
repnz
ja
pushf
dec
add
jg
les
or
xchg
fld
mov
pop
fdivr
mov
test
insl
insb
inc
aam
mov
ljmp
js
or
gs
mov
fcmovne
add
lods
adc
icebp
decl
dec
xchg
outsl
sbb
xor
ja
loopne
cmp
add
stos
sub
push
incl
xor
xorl
scas
xor
cld
call
mov
jns
mov
cmc
mov
jge
lcall
ret
push
addr16
mov
fstpt
adc
in
lock
ss
ljmp
and
imul
jbe
pop
lods
mov
sbb
js
xchg
jp
cwtl
pop
aad
or
and
orl
pop
cmc
cmp
fadd
pushf
enter
adc
add
mov
mov
mov
addr16
ror
push
adc
popa
les
xchg
adc
mov
jg
call
es
mov
cwtl
stos
mov
inc
dec
inc
xor
xor
lods
sarl
popf
cmp
pop
pop
cld
mov
sub
push
subl
fs
hlt
jmp
js
bound
popf
scas
pop
inc
adc
and
and
adc
out
xchg
xor
add
iret
xchg
dec
fprem
test
sbb
leave
clc
add
and
test
hlt
decl
mov
and
call
push
scas
push
add
repnz
incl
sub
incb
inc
jmp
push
mov
push
sbb
ljmp
adc
ret
shll
lods
gs
xchg
lret
sub
jg
push
jo
cld
mov
dec
ljmp
in
jecxz
or
hlt
outsl
clc
fcoml
outsb
cs
and
pop
test
fwait
dec
dec
dec
pop
les
test
add
loopne
cmpsb
lret
jl
ljmp
mov
mov
mov
dec
shl
mov
ljmp
push
addb
adc
adc
mov
dec
shrb
ss
lock
xchg
pop
test
call
jg
xchg
xchg
sbb
jne
outsb
fwait
push
mov
outsb
test
lock
pop
adc
out
xchg
sub
mov
push
and
pushf
movsl
neg
sbb
xchg
dec
repnz
pusha
mov
sarl
mov
in
xchg
cs
mov
pop
bswap
in
clc
pop
sub
or
pop
test
cmpsb
sbb
and
test
and
imul
cld
jg
loope
es
fidivs
mov
xor
jmp
mov
pop
xorb
lods
pop
mov
add
and
sub
sarb
adc
lcall
push
out
clc
scas
mov
test
sub
jnp
orl
rorl
and
xchg
cmp
pop
xor
nop
fiaddl
loop
mov
fstpt
inc
pusha
jg
decl
inc
lock
test
cmp
xor
xor
pop
call
adc
jg
pop
fiaddl
inc
or
mov
insb
sbb
push
or
nop
cmc
cmpsl
sub
stos
inc
cld
call
sahf
adc
sbb
call
dec
jecxz
cmp
addr16
fidivl
jg
data16
ss
mov
js
xchg
push
jmp
mov
jne
sub
and
es
cli
pop
leave
push
mov
cmp
adc
shlb
icebp
sub
sbb
imul
sub
lret
push
mov
outsb
clc
fwait
testb
fisubl
in
pushf
je
jg
faddl
movsl
cmp
lock
push
arpl
das
out
pop
fadds
xor
ljmp
fisttpl
ret
and
xchg
xchg
dec
icebp
push
lret
xchg
jne
addr16
fwait
ja
push
mov
push
xlat
insb
cmpb
fidivs
out
adc
ss
das
mov
lds
insb
add
sahf
add
adc
inc
pop
mov
fmul
push
sbb
or
icebp
call
rcrl
or
out
lock
mov
sbb
insl
inc
mov
dec
scas
sub
or
and
mov
sub
jno
inc
sbb
pop
lods
inc
sub
jg
inc
and
fimull
fimull
pop
stos
fwait
cmp
aam
pop
mov
mov
adc
pop
out
mov
pop
sbb
xchg
jmp
mov
mov
cmpsb
fs
test
lcall
or
clc
mov
outsl
sub
fbld
std
jmp
mov
pop
daa
fs
in
add
and
call
call
push
pop
loop
rcrl
sub
xor
jp
mov
sbb
dec
dec
ret
lret
push
mov
loopne
test
mov
test
sbb
out
sbb
or
js
cld
push
mov
add
cltd
nop
scas
dec
jg
push
arpl
push
lcall
test
cmp
xchg
mov
mov
mov
cmp
jge
cs
movsb
mov
test
cld
call
inc
adcb
push
icebp
sub
cmc
cli
dec
cmp
mov
push
mov
fsubrl
or
decl
inc
stos
in
sub
std
inc
pushf
mov
data16
int3
sub
jg
ja
cli
xchg
mov
cmp
lcall
jg
add
sub
and
adc
pop
xlat
mov
cmp
ja
mov
loop
inc
and
push
fisubl
fwait
sbb
mov
aam
push
sbbl
cwtl
mov
fsts
ljmp
lahf
mov
add
test
test
je
pop
insb
mov
rcrb
in
outsl
ljmp
add
std
mov
rcr
jb
test
lds
aaa
stc
movsl
cmpsl
mov
mov
lea
jle
test
fldl
incb
jae
mov
fidivs
xchg
or
cmc
push
stos
loopne
mov
lahf
cmp
ljmp
and
pop
xchg
pop
xchg
mov
mov
loopew
add
cmpsl
adc
cmp
pop
ss
fistps
xor
xor
dec
mov
lcall
nop
pop
and
int
add
jle
aam
adc
pop
std
jg
imul
outsl
sbb
pop
stos
fsubrl
sub
clc
loope
adc
daa
sub
xor
icebp
add
mov
pop
lahf
std
int
lcall
dec
jg
push
cli
call
adc
jle
pusha
mov
testb
push
mov
cmp
cmpsb
push
out
mov
xlat
mov
lods
jo
pop
mov
xchg
pop
mov
ljmp
es
cmp
cltd
sub
pop
sub
mov
call
and
add
les
add
or
scas
mov
mov
adc
ljmp
clc
add
jge
cwtl
scas
cmp
xchg
cli
testb
jmp
cmp
mov
and
gs
xchg
shll
cmp
les
mov
pusha
rol
adc
cmp
jle
push
cld
cmp
sub
out
push
and
outsb
add
jge
or
fiaddl
push
mov
cmpsb
sub
je
or
aas
add
mov
sbb
xchg
stos
jmp
inc
adc
movsl
mov
jg
test
push
inc
and
push
test
push
cmp
mov
jg
and
orl
mov
sub
and
mov
mov
mov
outsl
aam
inc
lret
int
xchg
mov
cmc
pop
pop
clc
incl
or
lods
std
loope,pt
mov
cmp
add
mov
int3
and
loop
push
out
mov
xorb
les
dec
or
dec
add
decl
jle
dec
xor
daa
dec
sub
mov
xor
jns
push
lret
in
pop
adc
push
into
test
or
pop
mulb
cwtl
in
test
jg
sahf
cmp
je
out
mov
incl
pop
add
movsb
push
loope
inc
loop
sub
and
sub
mov
cwtl
data16
scas
mov
jle
popf
and
les
jg
mov
adc
cmp
xchg
jns
shll
jno
xor
adc
out
xchg
bound
out
sahf
dec
or
je
sbb
sub
js
into
cmp
adc
in
jns
loopne
or
jl
fstl
in
fildll
leave
add
mov
jne
incb
pop
int
sbb
sbb
in
loop
loope
sar
pop
cltd
adc
les
pop
imul
mov
divl
out
sub
mov
mov
fs
ljmp
hlt
xorl
push
sti
out
test
fisubs
mov
cmp
jg
inc
sbb
inc
cltd
cli
jp
aam
les
dec
inc
adcl
adc
nop
lcall
filds
cmp
cli
popl
or
mov
decb
cmp
test
ret
fs
int3
iret
push
repnz
and
sbb
frstor
lods
fdivr
adc
decl
fistl
jnp
cmpsl
pop
dec
mov
jecxz
pop
cmp
loopne
lcall
fwait
or
mov
es
hlt
adc
sub
faddl
mov
lcall
cmp
dec
mov
xchg
iret
pop
imul
push
push
lret
call
and
jecxz
sahf
test
shlb
cmc
sbb
jg
dec
push
pop
data16
push
movsb
pop
movsl
cmp
insl
cmpsl
ret
sbb
in
xor
cltd
push
jp
jmp
pop
lock
mov
jge
mov
daa
push
je
fistpll
dec
add
xchg
and
adc
jp
or
sarl
decl
mov
rcrl
nop
add
or
adc
sti
or
sub
int
cwtl
loop
inc
ret
jge
mov
outsl
in
dec
xor
ljmp
mov
xchg
ljmp
inc
repnz
hlt
daa
movsb
insb
mov
jl
fwait
dec
sub
cli
push
pop
or
fstl
enter
icebp
and
sbb
shl
inc
xor
dec
mov
mov
into
hlt
aaa
fisttpll
repnz
stos
push
cmc
or
ljmp
lret
shrb
inc
pop
jbe
lahf
gs
sbb
mov
enter
or
xor
rcrl
pop
scas
mov
mov
pop
add
icebp
cwtl
push
pop
into
inc
fwait
push
gs
cmp
faddp
fcoml
push
dec
mov
stos
jmp
or
push
shll
or
jo
clc
inc
add
pop
or
mov
in
jle
cmp
inc
rcr
xchg
aam
dec
mov
rcrb
repz
pop
rolb
fst
adc
jnp
incl
dec
sbb
loope
out
adc
mov
and
stos
inc
mov
xchg
cli
xchg
fidivrs
shll
push
out
in
imul
fneni(8087
fcmovnu
inc
lret
andps
cld
js
jl
adc
sbb
jbe
cmp
sahf
call
pop
leave
shl
xchg
pop
pusha
arpl
bound
or
or
mov
mov
add
lret
ljmp
dec
adc
cmp
push
dec
das
or
js
aas
mov
fbld
mov
cmp
add
mov
repz
je
add
push
aas
xchg
mov
dec
adc
sbb
test
and
jp
popf
ljmp
inc
cld
xor
jp
movsb
aas
jb
aas
scas
cld
push
cmp
pop
icebp
pop
cmpsb
sub
mov
mov
jecxz
cmp
xor
inc
lret
add
jbe
pop
jae
popa
in
ljmp
pop
push
dec
nop
xor
jp
mov
jae
rolb
cmp
fbld
and
mov
scas
jg
xchg
xchg
dec
xchg
sbb
push
inc
les
or
push
and
push
mov
sub
xchg
lea
push
lahf
loopne
mov
pop
mov
loope
mov
je
dec
adc
sbbb
lret
lods
sbb
mov
inc
fimull
adc
sub
in
add
add
mov
xchg
xchg
mov
or
dec
loop
push
and
push
jnp
push
xchg
daa
addr16
rol
clc
pop
add
cld
sbb
loope
jg
rcll
mov
outsl
fldenv
push
sarb
lahf
icebp
out
mov
nop
xor
sbbl
pusha
jg
or
sub
mov
hlt
insb
xor
pop
sub
out
add
idiv
mov
cltd
mov
add
inc
jmp
mov
ds
divb
repnz
inc
sub
es
ljmp
ret
insl
add
cmp
clc
pop
scas
mov
fldl
jle
test
pop
cmp
add
xor
test
ljmp
mov
dec
aad
ja
sub
sbb
or
ljmp
jb
in
in
mov
mov
in
adcl
fldenv
and
orl
in
popa
daa
pop
or
ljmp
mov
popf
int
ja
cmpsl
mov
fisttps
outsl
addr16
stos
mov
mov
push
push
ss
pushf
pop
xor
or
jnp
dec
push
in
xor
inc
inc
inc
decl
mov
addr16
mov
leave
test
adc
aaa
sarl
call
pop
xchg
xor
and
jp
vprotq
pop
out
sbb
cli
or
add
sahf
pop
clc
cmc
jae
lods
decl
lock
mov
daa
rcrb
add
push
adc
pop
das
frstor
inc
or
out
mov
rolb
imul
cmpsb
icebp
pop
sub
add
insb
out
pop
idivb
mov
lea
in
bound
dec
cmpb
xchg
icebp
jg
pop
push
rcrb
push
sub
stos
mov
sub
test
xor
add
add
cltd
jl
jge
addb
stos
fcomip
mov
out
hlt
das
push
test
je
pushl
dec
xor
add
dec
push
cmpsb
aam
xchg
xchg
test
pop
xchg
clc
push
mov
sub
in
push
jmp
xchg
pop
mov
jno
loope
sub
arpl
incl
adc
int
push
dec
jecxz
add
cmpsb
sbb
jmp
sub
jb
arpl
cwtl
movsb
and
xchg
cmc
pushl
adc
push
mov
icebp
scas
dec
xor
in
std
aam
lcall
mov
sub
mov
insb
cld
inc
orl
push
hlt
lcall
jecxz
cmc
ja
mov
mov
inc
add
test
ljmp
xor
push
lcall
lret
inc
dec
cmpsl
out
decl
cltd
inc
arpl
inc
pop
leave
xchg
cmp
fadds
inc
xlat
ja
sti
out
adc
or
pop
xchg
inc
jne
push
sbb
or
jg
jp
cmp
mov
jnp
push
lods
xor
push
push
add
jmp
sub
in
pop
mov
push
aad
dec
iret
lcall
cltd
popa
ficoml
sahf
sbb
pop
popa
icebp
xchg
xchg
ljmp
push
inc
adc
addr16
pop
lods
jbe
cmp
push
into
clc
jno
hlt
scas
mov
cmp
mov
sti
xchg
stos
inc
push
addr16
stc
call
clc
call
fistps
shll
sbb
sub
jge
jg
cs
dec
xor
popf
fidivrl
and
jnp
mov
fwait
scas
es
inc
leave
orb
or
inc
repnz
and
and
imull
fsubl
loope
test
int
cs
mov
call
std
mov
cli
cltd
aad
mov
and
dec
mov
scas
sbb
daa
mov
push
and
sbb
clc
sub
data16
mov
pop
xor
adc
pop
clc
mov
dec
sbbb
cmp
decl
xchg
pop
insl
mov
fs
in
lcall
cmp
sbb
popf
dec
arpl
jmp
cmc
jne
rorb
adc
test
cmp
sbb
sub
or
pushl
push
xchg
mov
sti
shll
fwait
xchg
push
xor
int3
mov
fisttps
pop
sub
jne
aaa
xor
jno
mov
pop
hlt
in
mov
out
fwait
mov
sub
inc
rolb
cmpsb
or
in
jmp
mov
ffreep
mov
shrb
jg
add
das
xchg
jo
cmpsl
lcall
add
mov
jo
call
frstor
decl
push
cld
mov
addr16
and
jp
add
sarb
pusha
jl
and
arpl
sub
jg
jg
add
jns
jle
mov
dec
imul
stc
mov
push
dec
shll
in
fucom
sub
test
hlt
lods
mov
pushl
iret
push
ret
sub
jb
test
and
ljmp
and
gs
cltd
stos
shlb
adc
pop
aas
inc
or
subb
mov
sub
ret
mulb
jo
mov
call
or
inc
jbe
mov
xor
sbb
scas
loopne
aam
test
movsl
lret
popf
lcall
out
or
fisubl
or
xchg
inc
in
data16
mov
lcall
loop
fdivp
inc
push
icebp
ret
and
xchg
iret
xchg
nop
xchg
lods
xchg
mov
and
or
mov
push
mov
out
inc
mov
push
loopne
xchg
fimull
lret
sbb
mov
fcmove
mov
insl
push
pop
test
xchg
cmp
lods
jle
mov
pushl
mov
mov
addr16
mov
es
add
cmpsl
loopne
xchg
pop
dec
jle
enter
xor
jge
sub
dec
cmp
pop
or
call
mov
jae
adc
rclb
inc
add
decl
mov
jmp
loopne
ljmp
jbe
roll
pop
movsb
adc
ret
je
push
sub
cli
inc
sbb
testb
jo
inc
std
rolb
loope
addr16
cmp
inc
sbb
aam
xor
sub
jne
adc
mov
pop
and
sbb
ljmp
push
adc
leave
loope
push
adc
push
push
ficoml
int3
add
incl
xchg
repnz
outsb
shlb
xor
les
inc
hlt
cmp
outsb
pop
mov
xor
xchg
pop
ss
adc
or
inc
push
ds
xor
jmp
sbb
or
inc
pop
mov
mov
daa
mov
popf
push
and
add
scas
test
inc
dec
clc
pushl
push
mov
xchg
insl
mov
cwtl
les
push
add
pop
aam
outsl
test
fwait
dec
cld
lea
lahf
data16
push
movsb
dec
scas
push
mov
push
sbbb
dec
sar
jnp
addr16
imul
out
ds
mov
pop
test
mov
xor
sub
adc
std
and
xchg
lret
xchg
dec
or
xchg
in
movsb
insb
arpl
fbld
clc
push
mov
jmp
dec
pop
cwtl
fstps
hlt
cld
mov
out
test
push
inc
jl
mov
stos
sar
jno
push
pusha
inc
hlt
mov
js
insl
cltd
es
inc
dec
sbb
jp
mov
ljmp
pop
and
jb
out
mov
or
cld
sbb
jg
pop
jo
arpl
ja
sarl
fsubl
inc
sbb
aas
mov
shrl
or
sub
cmp
push
dec
dec
lret
dec
lret
es
add
repz
mov
jo
cmp
mov
shl
or
cmc
out
ss
jg
fidivrs
dec
pushf
lahf
mov
fdivrl
mov
sbb
add
mov
leave
fs
cmp
sar
mov
adc
mov
in
mov
fdiv
lret
mov
xor
sub
xchg
inc
xchg
pushl
and
js
jg
mov
shlb
ljmp
or
loope
ja
imul
xor
sbb
add
pushl
cltd
je
ss
xchg
fcoml
inc
add
dec
popf
fldenv
or
mov
and
js
mov
dec
insl
das
xor
add
push
fsub
push
sti
in
mov
jl
testb
mov
dec
xor
mov
aam
int3
sbb
std
push
mov
clc
dec
cwtl
int3
les
sarb
loopne
inc
leave
or
jecxz
adc
pavgb
mov
cwtl
in
fistl
cmp
je
cmpsb
test
lcall
or
pop
xor
push
jo
inc
jne
jbe
cmp
inc
pop
jne
aaa
dec
xchg
pop
mov
push
pop
or
lods
clc
pop
xchg
outsl
jg
bound
xchg
scas
and
imul
or
jmp
push
push
scas
shlb
sbb
xlat
sti
in
popf
cmp
pop
out
jae
mov
add
addl
cmp
decl
mov
inc
push
inc
pop
sub
pop
xor
xchg
add
sub
push
icebp
subb
call
outsl
add
ljmp
mov
pushf
mov
adc
or
test
std
jecxz
decl
push
push
inc
sbb
adc
das
cmp
inc
cmp
out
frstor
jg
in
js
test
outsb
mov
outsb
adc
xchg
mov
imull
push
inc
xor
ficomps
cmc
jne
lea
loop
popw
adc
ljmp
xchg
jne
testl
add
gs
inc
clc
aam
loop
sbbl
lcall
mov
out
cmc
popf
jbe
mov
push
adc
add
xchg
xor
cli
push
je
lods
push
jge
movsb
in
aaa
push
add
call
rcrl
or
call
bound
adc
clc
andb
mov
mov
push
inc
fistpll
in
fdiv
leave
nop
push
pushf
fs
js
xlat
fdivr
mov
xor
out
push
mov
call
xchg
add
bound
jl
mov
insl
adc
mov
mov
adc
adc
jo
out
sbb
sub
jg
inc
decl
adc
jb
cs
sti
out
and
shlb
loopne
ljmp
push
lahf
pusha
push
es
aaa
sar
sbb
lcall
mov
mov
hlt
int3
pop
cmp
jbe
mov
fstps
lock
outsl
cmpb
and
aas
lea
aam
mov
into
cli
adc
clc
inc
lds
inc
imul
out
roll
xor
dec
in
js
hlt
ljmp
rorb
lret
jmp
mov
call
js
inc
loopne
pop
mov
addl
fwait
fs
adcl
pop
jns
jecxz
call
jg
cmp
sub
mov
inc
fmull
and
fistl
xchg
mov
xorl
adc
dec
mov
lcall
js
mov
out
stc
lcall
push
mov
mov
adc
lahf
fisubrs
cmpb
push
scas
inc
in
mov
xchg
pop
and
fimuls
pop
bnd
out
mov
movsl
push
pop
inc
mov
es
or
addr16
dec
mov
nop
nop
or
std
sbb
cmp
mov
dec
mov
ljmp
dec
cltd
sbb
inc
cmp
sti
fistps
push
pop
out
add
andl
add
inc
ret
decl
jp
dec
cmp
in
fs
adc
xchg
or
in
inc
call
dec
clc
mov
jmp
fs
jns
das
mov
jne
dec
loope
mov
sbb
dec
insl
les
pop
lea
sbb
pop
mov
outsb
loop
imul
int3
loope
sbb
mov
cmp
pushl
shr
popa
sub
mov
in
xorb
add
mov
leave
pop
js
loop
cld
pop
mov
scas
adcl
dec
cli
sub
imulb
or
lods
xchg
out
into
pushf
add
or
sub
pop
lds
add
cmp
lds
inc
cmp
jb
inc
xchg
jmp
call
push
and
out
shr
pop
out
and
fstpl
test
shlb
lods
pushf
mov
mov
pop
out
adc
repz
dec
cld
inc
pop
cli
jo
out
sbb
jg
push
imul
inc
ss
jecxz
movsb
mov
xchg
cld
sub
incl
pop
stos
cmp
jl
imul
mov
xor
test
ds
rcrl
cmpxchg
movsl
add
cmp
decl
add
adc
ror
xor
fisttps
into
sahf
mov
in
inc
mov
xchg
jp
add
lcall
movl
lock
mov
rcrb
pop
test
jge
push
lock
push
inc
push
push
insb
subl
fbstp
mov
outsl
fisubs
cmp
push
xor
shr
jp
or
fbstp
cmp
lods
jbe
sub
imul
sub
fstpl
aaa
sbb
jmp
jns
jne
out
lret
cmp
iret
int3
imul
ljmp
addl
test
mulb
popl
add
adc
loopne
cmc
sbb
outsb
lods
cmpsb
out
dec
clc
jmp
je
fdivrp
fwait
add
xchg
xorl
or
mov
jno
faddl
mov
sbb
ljmp
or
clc
cld
decl
fists
pop
leave
scas
mov
mov
jne
lock
dec
sub
pop
xchg
or
pop
bound
js
fcoml
sub
outsb
rcr
test
fldl
loope
lret
mov
cmp
pop
mov
jg
cmp
pop
out
rorb
out
aad
cmp
sub
cli
pop
mov
fwait
popa
push
das
mov
scas
add
xor
jl
pop
jg
stos
add
cmpsb
lods
into
mov
and
sub
cli
scas
clc
dec
into
adc
shrb
rcrl
je
pop
push
mov
fadds
js
out
testl
outsl
cmp
das
cwtl
stc
jo,pt
in
pushl
jae
je
sub
ret
rorb
xchg
add
cmpsl
pusha
push
out
out
adc
call
scas
jne
pop
cld
xchg
pusha
cmp
es
cmc
xchg
adcb
push
mov
das
mov
push
adc
mov
lahf
mov
pop
cld
mov
mov
stos
test
lods
pop
mov
pop
xor
pop
lock
cmc
out
or
aad
add
adc
bound
movsl
and
xlat
cmp
fstl
jge
add
adc
jne
xchg
scas
sahf
in
dec
xchg
call
js
inc
pop
jge
ret
cmp
into
mov
inc
add
lods
sti
jle
or
cli
and
leave
rol
fsubs
pop
arpl
jno
push
pop
sbb
lret
mov
ljmp
aad
rolb
jbe
pop
fs
push
in
mov
sub
daa
inc
xchg
in
adc
sahf
sub
or
decl
sbbl
aaa
subb
fcompl
push
ss
fwait
push
mov
mov
stc
xchg
add
icebp
shlb
nop
divb
or
adc
adc
sahf
ljmp
movsl
into
daa
inc
xchg
call
call
dec
fwait
mov
sahf
pop
popl
sbb
xor
mov
ds
int
and
add
test
stos
cmp
es
xor
mov
sbb
cmc
push
jbe
cltd
sub
inc
outsb
data16
mov
andb
out
je
les
mov
adc
jbe
movl
push
clc
jmp
inc
inc
push
insb
xchg
inc
mov
scas
mov
insl
push
mov
std
mov
xchg
or
jecxz
mov
pop
lahf
cmp
inc
mov
or
or
enter
or
lea
xchg
cmp
xor
negb
dec
fldcw
sbb
rolb
cld
pop
pop
data16
test
mov
fstpt
nop
fstl
inc
fiaddl
push
arpl
data16
leave
aaa
push
cli
sub
fmuls
xor
mov
push
push
or
or
xor
test
test
mov
into
ret
sub
jle
add
mov
xchg
add
xchg
mov
pop
xor
daa
jg
and
inc
imul
dec
push
test
rclb
mov
sar
cmp
arpl
xchg
mov
inc
fsubl
pop
mov
or
cmc
pop
inc
cmp
outsl
pop
jns
addr16
and
or
decl
xchg
leave
dec
pop
inc
push
cmpsb
fmull
movb
into
mov
inc
lret
sub
aad
enter
mov
adc
leave
decl
mov
push
repnz
jnp
push
cmp
mov
sbb
cmp
iret
sub
aaa
cld
cmp
in
aas
leave
push
scas
mov
mov
adc
add
stos
test
and
nop
incl
sub
in
cmp
sub
ret
push
fdiv
call
call
pop
jl
cmp
int
push
fbld
and
or
dec
pop
adc
sarb
test
mov
mov
js
ficompl
mov
ja
addr16
iret
push
lret
cmpsb
es
call
xor
ret
bnd
into
inc
repnz
mov
int
or
clc
int3
fstp
cmp
sub
aam
mov
jle
sarl
xor
push
andl
adc
in
clc
stos
inc
sarl
cs
inc
arpl
scas
mov
jp
sbb
addb
sti
and
push
push
loop
push
loop
xchg
push
add
stos
inc
xor
sub
mov
daa
cs
mov
loop
pop
mov
stc
clc
outsl
cli
mov
xchg
adc
jbe
loop
js
lds
and
push
lcall
inc
pop
pop
xlat
and
scas
test
xor
xchg
xor
cs
mov
or
push
fsubl
movsl
push
popf
cs
dec
jb
push
mov
enter
lock
loope
pop
negb
loop
fs
or
incl
sahf
mov
ffree
mov
and
push
or
xor
scas
in
les
scas
mov
and
sbb
and
or
call
sbb
lret
pop
mov
in
mov
ja
mov
lods
jl
ss
sbb
pop
inc
mov
stos
adc
cmp
cld
push
xchg
enter
xor
xchg
idiv
jg
jmp
stos
outsl
std
mov
add
cmpsl
sub
dec
subl
mov
cmp
rcl
pop
icebp
xor
jns
or
adc
sbb
mov
les
lcall
outsl
test
das
test
xchg
or
pop
push
aaa
mov
sbb
pushl
fidivl
sub
dec
add
mov
sub
sbb
faddl
data16
das
and
ds
cmpsb
lcall
rclb
ror
clc
push
mov
scas
aam
or
add
sbb
cmpsb
pop
stos
fistps
inc
dec
mov
cmp
xor
or
movsl
inc
test
in
cli
add
xor
aaa
imul
addl
pop
mov
pop
inc
inc
fcmovnbe
cmc
shll
adc
fadds
jg
adc
cmp
call
mov
ss
daa
leave
pop
xorl
hlt
call
xchg
push
sbb
js
cltd
pop
lret
push
push
dec
cmpxchg
push
lahf
dec
sbb
ljmp
push
xchg
or
xchg
cmp
lock
incl
jae
mov
mov
dec
mov
push
iret
imul
das
clc
sbb
xchg
sub
mov
call
inc
push
inc
push
shll
test
jecxz
mov
shrb
insl
inc
fcmovnb
dec
fstpt
ds
fcomi
std
inc
xor
ljmp
cmpsb
jb
in
jb
add
jbe
ja
xchg
dec
mov
push
jnp
cli
mov
xor
sbb
aad
mov
out
add
cwtl
and
push
fcomip
mov
push
sub
and
scas
sub
out
sub
xchg
test
add
push
call
or
aaa
sar
mov
cmp
cli
mov
fistps
mov
xor
mov
mov
lock
fisttps
add
insb
jl
ret
in
rclb
mov
cmp
add
les
cmpsb
mov
cmp
aaa
xchg
sub
cs
adc
and
sbb
test
clc
push
push
imul
loope
mov
adc
decl
arpl
out
sbb
test
adc
sub
inc
das
mov
out
adcb
std
mull
imul
mov
mov
sub
push
enter
push
imul
add
push
movsb
adc
cmp
or
std
and
js
fst
lret
cmpsl
mov
lcall
jl
xor
ja
adc
dec
scas
push
inc
out
stos
idivl
add
mov
decl
fisubrl
fisubs
call
test
scas
sbb
push
cmpsl
pop
cmp
ret
sub
add
sbb
cmc
jg
aaa
cld
mov
aaa
mov
push
ret
sbb
fdivl
mov
test
mov
xchg
call
adc
push
mov
push
sti
sub
mov
pushf
push
in
rolb
cmp
pop
dec
mov
jne
ljmp
push
adc
loopne
pop
iret
sbb
adc
pop
rcll
mov
add
subb
push
push
or
mov
push
loope
adc
fldl
or
pop
inc
xchg
mov
pop
adc
cmp
xor
mov
fisubl
mov
sbbb
fisubrl
and
add
xor
mov
movsl
aam
int3
shll
jg
or
or
je
xor
xor
jge
push
lcall
into
pusha
test
sub
xor
cmp
add
faddp
por
dec
add
jmp
ret
shlb
or
iret
cld
mov
sub
jno
fimull
cmp
mov
push
xchg
outsl
mov
inc
loopne
cmpsb
stos
fwait
ja
imul
jg
scas
sbb
jge
add
mov
shr
and
daa
pop
mov
xlat
adc
stos
jae
pop
and
pop
fcmovbe
bound
jg
pop
jnp
add
enter
add
out
inc
fisubl
pop
push
mov
and
add
push
xchg
xchg
add
in
dec
pop
push
mov
pop
shlb
fwait
lods
call
stos
jg
sub
or
cmpsl
ljmp
fs
imul
mov
enter
orl
jge
jmp
sub
decl
div
scas
ds
inc
aaa
or
dec
call
ljmp
add
adc
cmp
jmp
out
inc
imul
test
jp
aad
in
adc
outsb
inc
push
and
mov
xor
pop
or
xchg
out
rcll
sub
mov
mov
loopne
inc
add
std
jge
das
clc
mov
into
fs
mov
jecxz
pusha
pop
and
adc
cld
sbb
pop
inc
js
adc
xor
addr16
loopne
fildl
aaa
fcomps
push
addr16
std
add
aad
mov
pop
mov
in
cmp
jmp
sbb
xor
mov
mov
pop
incb
mov
pop
divb
popf
addb
in
mov
rcr
cmpb
int
nop
cmc
add
pop
outsb
stc
inc
dec
push
stos
sub
pop
cmp
lcall
pop
xchg
test
hlt
lcall
pop
xlat
pop
adc
lcall
outsl
loope
jg
mov
aad
xlat
lahf
incl
mov
adc
mov
cmp
jg
es
cmp
in
dec
mov
sub
mov
movsb
ja
imul
xor
into
lcall
jg
fcmove
xor
int
cmp
jg
pop
xor
cli
icebp
inc
cmp
sti
pop
dec
push
and
mov
mov
mov
jecxz
ret
push
decb
xchg
jge
dec
shl
lock
ja
sbb
pushl
std
push
jecxz
inc
ret
sti
mov
adc
mov
outsb
cmp
rclb
call
adc
loopne
ljmp
push
dec
icebp
and
mov
lret
xchg
push
imul
mov
loop
push
mov
jo
xor
fcoml
test
or
jecxz
xor
mov
cmc
incl
les
pop
and
pop
add
incb
fmuls
popa
xor
sbb
aam
ljmp
nop
jb
cld
ja
das
sbb
std
add
mov
jg
push
mov
negb
imul
pushf
mov
sar
dec
and
iret
dec
ja
pop
rorb
loop
fstl
jae
shl
pop
fcom
popa
mov
loopne
cld
pop
xchg
adc
hlt
dec
pop
mov
fcomip
jmp
incl
jno
add
icebp
xchg
adc
leave
shl
jns
sub
pop
mov
sub
std
xchg
push
mov
ret
ljmp
xchg
and
fwait
test
aaa
xchg
js
mov
mov
mov
cmp
decl
pop
xchg
jmp
rcll
addr16
test
mov
adc
and
addb
mov
pop
inc
loope
das
je
mov
leave
cmp
mov
add
xchg
mov
or
sbb
das
xchg
or
pop
orl
jmp
mov
add
aas
adc
pop
adc
mov
inc
xor
ljmp
fiadds
out
test
test
fwait
dec
cli
lcall
bound
pop
daa
inc
jge
jne
xor
inc
lea
lock
xor
sub
sarb
pop
xor
test
jne
daa
pop
nop
add
ja
pusha
loop
test
push
popa
enter
inc
aam
sbb
and
lock
in
dec
adc
add
lcall
in
hlt
dec
jb
jmp
jne
mov
loopne
sarb
das
sub
decl
cmpl
fisubrs
dec
push
add
popf
inc
ds
pop
outsl
das
jmp
fwait
dec
call
in
in
fildll
sbb
xor
repnz
or
inc
or
decl
mov
addr16
jmp
sbb
xor
xchg
mov
shrb
mov
pop
push
xchg
and
das
clc
and
pop
cmp
nop
scas
movsl
add
in
psllw
jmp
and
call
jbe
in
fwait
inc
jns
lock
pop
push
cmc
adc
loop
lcall
lea
loopne
mov
lods
mov
jmp
xchg
js
or
pop
cmp
cmp
clc
lods
jp
mov
data16
fistl
push
mov
fs
sub
mov
vpunpckldq
daa
sub
out
jo
cli
pushl
testl
jle
hlt
das
add
nop
xchg
sub
push
add
pop
stos
fs
jge
cmp
lret
pop
xor
dec
lahf
imul
pushf
decl
pop
mov
daa
outsl
test
jg
mov
enter
lock
jns
adc
popf
xor
cmp
outsl
movsb
hlt
loop
imul
mov
das
int3
call
pop
adc
pop
mov
gs
jmp
es
dec
and
inc
sbb
hlt
mov
mov
inc
xchg
pusha
lret
adc
lcall
cltd
xchg
cmp
aam
jnp
push
push
push
mov
ljmp
jbe
lock
pushf
pop
aas
aam
mov
addr16
shll
aaa
pusha
add
jmp
inc
xor
cmp
fmuls
std
jmp
shrl
icebp
out
pop
imul
and
nop
hlt
sbb
fstpt
fwait
ljmp
push
mov
pop
arpl
mov
push
jns
cmp
pushf
mov
in
adc
mov
inc
loop
push
pop
pop
repnz
outsl
idivb
dec
shr
test
movsb
sahf
xorb
dec
jno
pushl
adc
xor
nop
stc
sbbl
lret
or
lods
xor
inc
imul
js
scas
pop
inc
inc
mov
aas
add
pop
add
int3
xor
mov
pop
sar
addr16
dec
xchg
push
in
jbe
clc
ljmp
jg
lods
das
ljmp
fbld
rcrl
test
inc
lahf
or
mov
loop
jmp
mov
cli
fisttps
add
stc
rorb
xchg
vmovhps
inc
mov
push
push
or
outsb
int
pop
push
pop
testb
ja
outsb
jge
cmp
es
push
iret
scas
or
es
and
mov
nop
adc
mov
add
into
inc
jmp
jg
leave
jb
les
or
ljmp
lock
cmpb
lds
push
jecxz
mov
emms
and
jbe
jmp
aaa
pop
or
sub
xchg
dec
xor
pop
xchg
lret
lods
jmp
int
repnz
jl
jl
aaa
xlat
xchg
mov
icebp
scas
add
dec
rclb
add
adc
gs
or
inc
cmp
orb
lods
mov
jg
neg
ss
scas
mov
in
adc
dec
lahf
fsubs
out
fldenv
jb
lods
enter
cltd
xchg
insl
cld
decl
lods
cld
xor
pop
xor
sub
cmp
jne
cli
jmp
add
cmc
hlt
movsb
pop
aam
fistpll
xchg
pop
mov
es
add
cmp
pop
in
dec
mov
pushl
dec
pop
pop
mov
inc
cmp
push
lcall
fdiv
out
adc
inc
dec
pop
xchg
aad
loopne
sub
iretw
or
and
decl
mov
sub
sbb
push
pop
sub
adc
dec
mov
jmp
fisttps
jecxz
fcompp
out
xchg
and
sub
push
movsb
andb
ja
mov
repnz
sub
mov
jg
push
mov
inc
xchg
jge
jne
movsl
push
jmp
mov
aam
arpl
test
mov
ffree
push
clc
and
push
out
xor
add
xchg
out
sbb
rcl
pop
stos
push
mov
dec
adc
mov
xchg
sub
inc
mov
mov
ja
cmpsb
cmp
lcall
push
jmp
lcall
add
xor
inc
cli
adc
add
out
aaa
xchg
ret
pop
mov
lock
add
pop
outsl
insb
push
mov
sub
cmpsb
mov
movsl
or
call
xor
daa
ret
xor
cmp
and
scas
rcrb
cmp
mov
adc
int3
xchg
sbb
pop
fs
xchg
inc
mov
hlt
dec
lods
popf
pop
adc
sub
or
jle
fdivl
insb
lea
fadd
dec
add
lret
mov
out
pop
fs
push
inc
add
ja
ljmp
mov
sahf
inc
outsb
popl
cmp
mov
into
pop
mov
hlt
pop
test
push
mov
cmc
xlat
les
and
shrb
data16
jg
xchg
jo
pop
push
pop
inc
xor
gs
cmp
jae
ss
jp
push
rcl
hlt
mov
or
mov
cmpb
dec
enter
mov
cld
jp
sub
ja
or
add
shrb
outsl
hlt
adc
and
outsl
jp
testb
cmc
bound
or
in
pop
mov
pop
mov
push
call
test
jmp
inc
jmp
cmp
inc
mov
cmpsl
stc
outsl
mov
jge
and
mov
stos
add
xchg
outsb
mov
aas
scas
scas
mov
orb
mov
or
in
sub
or
inc
pop
clc
jl
in
jo
nop
je
jmp
push
push
imul
push
out
or
call
cltd
hlt
roll
addr16
clc
in
sbb
hlt
pop
lcall
lret
je
nop
ljmp
dec
xor
movsl
imul
roll
dec
call
dec
adc
testb
or
ljmp
ds
add
and
and
int3
loope
stos
jge
jo
stos
mov
mov
add
add
xor
sub
pushl
dec
call
cs
mov
iret
bswap
ret
es
jle
aaa
daa
lds
addb
xchg
in
lcall
push
cli
test
les
pop
dec
ja
loop
loope
push
dec
dec
mov
mov
sbb
fisttps
mov
shrb
out
pushf
cld
icebp
sub
adc
iret
add
int
sbb
jne
test
pop
sahf
jecxz
push
incl
cmp
inc
cli
ljmp
int
mov
mov
and
mov
orb
jbe
jbe
jl
sbb
xchg
push
dec
mov
rcr
and
add
add
mov
out
and
incb
ss
in
dec
push
ljmp
movsl
cli
mov
sbbb
or
jp
sub
lahf
inc
cwtl
adc
lock
out
jp
add
jnp
xchg
fwait
lahf
cltd
add
ljmp
lcall
fildl
ret
or
jle
or
and
xchg
dec
pop
sub
int
jb
jmp
or
adc
call
cmpl
insl
adc
pop
inc
out
js
adc
push
or
loopne
sbb
popf
cltd
cmpsb
mov
cmpsb
lods
test
inc
mov
clc
jg
add
imulb
inc
xor
sub
and
stos
sahf
push
dec
push
sbb
and
stc
loope
ljmp
push
out
leave
addr16
mov
xor
iret
cltd
xchg
stos
flds
pushf
int3
sbb
xchg
fcomip
or
cmp
les
shll
inc
adc
add
mov
fsubl
aaa
lahf
into
bound
inc
mull
mov
dec
mov
imul
aad
test
mov
cmp
mov
shlb
fdivrs
xchg
jbe
pop
xor
adcb
jg
enter
leave
jecxz
jbe
jns
pop
adc
gs
xor
xchg
sbb
push
in
outsl
sbb
and
ja
pop
inc
mov
xchg
push
adcb
push
dec
and
mov
jno
push
xlat
mov
jne
push
add
dec
popf
dec
lock
cmc
push
lock
push
xchg
pop
gs
add
insb
xlat
cmp
jl
add
out
mov
mov
sub
gs
add
pop
icebp
mov
mov
iret
sub
add
jne
stos
add
xor
and
mov
leave
data16
popa
and
mov
ret
jle
xchg
clc
mov
addb
lods
add
ljmp
add
xor
and
sub
add
mov
sub
jg
or
popa
cmp
rcrb
and
incl
cmpsb
push
loope
pop
jo
fnstcw
add
pop
gs
jno
fwait
cmpsb
arpl
sbb
imul
cmc
sbb
repnz
mov
call
and
movsb
lcall
xor
loope
cmp
pushf
nop
icebp
jg
xor
mov
insb
gs
push
aaa
sbb
fs
pop
add
dec
pop
insb
notb
pusha
push
mov
jmp
xchg
xchg
lods
mov
lock
mov
ffreep
pop
xchg
pushf
dec
sub
push
lret
jle
push
cmp
aas
push
jp
pop
insb
mov
cs
cmp
mov
ljmp
lahf
pop
rcr
shll
push
push
adc
ror
je
out
xchg
hlt
incl
add
or
lods
or
cmp
add
push
fsubr
dec
movsb
adc
addl
mov
dec
fadd
jne
pusha
dec
loopne
ja
clc
jo
inc
or
in
mov
sub
mov
data16
rorl
mov
incb
in
jecxz
rorl
and
sub
push
inc
js
and
jle
ret
dec
push
js
inc
xor
insl
js
jl
gs
jg
sub
lock
mov
dec
out
add
repz
sbb
cwtl
aam
das
jle
negb
rolb
or
pop
pusha
hlt
jg
jmp
jae
stc
jle
sub
add
call
les
aad
sub
dec
nop
push
jns
outsb
sub
and
lods
les
dec
pop
sub
outsl
push
ret
pop
lret
dec
jecxz
imul
out
cmp
std
jge
ficomps
jbe
sahf
cltd
hlt
into
push
rcrl
mov
jae
sub
lahf
inc
lea
clc
lcall
in
cmc
out
lcall
mov
sbb
push
mov
aad
inc
aas
xchg
xor
mov
inc
or
fldt
cli
sar
fwait
xor
pop
out
dec
int3
mov
xor
add
popf
rorl
movsb
aad
fs
dec
cld
in
movsl
arpl
pusha
push
aaa
flds
jp
int3
mov
pop
rolb
mov
cmp
jmp
dec
bound
xchg
cmp
mov
mov
pushl
xchg
aas
inc
pop
cld
addr16
sti
movsl
popf
mov
mov
mov
adc
sbb
test
xchg
dec
mov
loopne
jmp
xor
cmp
dec
pop
add
outsl
les
ja
out
fsubrl
mov
rcl
dec
push
loop
int
mov
scas
push
mov
jo
ficoml
pop
cmc
mov
mov
dec
mov
cmp
fimull
in
dec
loopne
xchg
dec
push
lcall
int
sub
loopne
loop
data16
xor
xchg
ret
fnstcw
mov
test
scas
mov
psrld
xchg
fs
jns
jmp
hlt
mov
clc
lcall
orl
dec
inc
mov
mov
rcl
imul
mov
lret
jbe
cmp
call
pop
push
insb
and
adcl
rolb
sbb
rclb
hlt
inc
jbe
das
add
idivl
adc
sub
add
pop
jmp
imul
pop
jle
addr16
push
xor
loop
rol
cwtl
repnz
mov
inc
and
ret
inc
pop
dec
cmpb
jae
adc
or
dec
mov
jle
add
push
addb
adc
mov
adc
cli
xchg
pop
insl
adc
negb
or
push
add
aas
mov
hlt
jne
popa
outsl
cmpsb
mov
lock
jae
jnp
push
mov
pop
pop
shlb
loope
mov
add
icebp
mov
test
fdivrp
lcall
jp
cltd
pusha
rorb
lahf
or
push
sahf
ds
jmp
or
dec
mov
mov
add
pushf
insl
sbb
and
cmp
pushl
xchg
add
xor
adc
fmulp
outsb
sbb
bound
mov
ficoms
or
mov
aam
test
mov
arpl
dec
ljmp
sbb
push
rcr
push
add
sbb
and
push
xchg
adc
inc
xchg
sahf
push
cmp
in
rcl
or
push
mov
cmp
and
das
cmp
scas
loope
xchg
jle
inc
and
xchg
popa
fdivrs
incl
push
andl
enter
mov
sub
outsb
sub
dec
dec
pusha
or
insb
jmp
add
decl
add
ja
mov
icebp
stos
ret
fwait
pop
cmc
mov
lods
sarl
mov
push
pusha
cld
push
cld
jg
jmp
dec
inc
scas
pop
cli
cli
inc
mov
sti
jp
sbb
outsb
hlt
shll
pop
lcall
call
rorl
xchg
mov
fwait
inc
pusha
lock
ljmp
sar
xor
je
and
enter
lods
cmp
mov
pop
fsubrs
dec
test
cmp
lock
adc
aam
jge
jne
cmp
jge
or
es
ficompl
add
hlt
cltd
popf
jbe
xchg
mov
or
je
lret
ljmp
pop
idivb
xchg
in
in
popf
scas
mov
xor
cmp
dec
xor
inc
stos
sti
in
sbb
pop
cwtl
add
ret
cli
mov
in
xchg
ds
fbstp
adc
ret
fdiv
ret
lret
mov
decl
xchg
mov
and
call
mov
mov
daa
data16
mov
das
pop
pushf
sub
mov
and
leave
inc
test
cmp
push
mov
push
clc
lods
das
aad
gs
sub
mov
outsl
ds
pop
out
mov
loopne
push
xchg
movsb
add
push
sub
aaa
imul
mov
out
ja
lds
push
sub
jmp
add
or
repz
mov
outsb
adc
outsb
add
mov
jp
mov
sbb
lock
orb
sbb
add
mov
decl
and
leave
add
ret
mov
mov
arpl
cmpb
mov
lcall
fcom
push
rolb
incl
or
fcmovb
mov
mov
mov
mov
jp
pushf
xor
adc
je
imull
mov
mov
loop
adcl
fbld
push
mov
sbb
dec
push
push
in
cmc
out
icebp
aas
inc
xchg
adc
inc
insl
pop
ss
incl
pop
in
or
jae
mov
sub
movsl
loop
or
loop
mov
das
xchg
rolb
xchg
add
movsb
xchg
cmp
mov
or
pop
imul
cltd
jmp
hlt
push
std
test
mov
clc
add
cmp
aas
das
xor
incl
adc
push
jo
outsl
sbb
decl
inc
pop
mov
pushl
add
pop
les
pop
inc
into
shrb
insb
or
or
lds
je
mov
inc
push
push
jae
xchg
cmp
outsb
loopne
decl
pop
pusha
and
ret
call
stos
dec
jo
dec
inc
movsb
mov
jg
lcall
jbe
in
add
out
sbb
inc
add
push
movl
add
in
push
sti
mov
sti
subb
sub
and
adc
sub
stos
rorb
sub
clc
fildll
adc
imul
mov
push
lcall
jmp
inc
push
cmc
data16
fs
ret
mov
pop
mov
loop
sub
mov
enter
and
xchg
stc
inc
adc
and
divl
mov
push
mov
je
mov
jg
push
push
pop
jl
into
das
sub
mov
out
adc
bound
scas
mov
mov
aas
xchg
adc
pop
lahf
imul
inc
hlt
or
lcall
sub
xchg
gs
or
aam
lret
mov
mov
pop
enter
lahf
or
scas
pushl
cmpb
jnp
and
mov
mov
inc
cld
es
cltd
inc
ss
in
fidivl
jno
hlt
jmp
cs
cmp
aaa
rol
lcall
or
sbb
mov
stc
cmpsl
fld
sub
fdivrs
cmc
lahf
jae
ss
xchg
hlt
int3
or
sbb
ja
pop
iret
jnp
xchg
dec
jne
notb
outsl
scas
inc
dec
movsb
dec
jg
imulb
dec
daa
stos
outsl
adc
cwtl
dec
fmulp
push
and
sub
jnp
push
ljmp
dec
inc
mov
push
loop
cmp
insb
xchg
dec
or
inc
das
mov
add
scas
cmpsb
js
test
les
dec
loope
add
mov
mov
pop
inc
mov
fsubs
or
push
xor
xchg
sbb
lret
xchg
mov
dec
sbb
inc
jge
sbb
incb
dec
andb
rsqrtps
sub
and
jle
pop
cmc
mov
push
cmp
or
mov
fdivs
popa
mov
mov
fisubrl
dec
push
outsl
pop
xchg
clc
sbb
aaa
mov
lds
add
rcrl
jle
xchg
cli
pop
sbb
add
std
jmp
xchg
mov
out
and
jns
sbb
pusha
sub
inc
and
jmp
xor
jp
mov
pop
jg
mov
mov
aam
jb
jl
and
aad
inc
mov
jge
jnp
push
mov
xchg
cli
mov
hlt
mov
test
mov
adc
lahf
cmp
lea
cmp
ljmp
lock
inc
repz
mov
icebp
pushl
and
call
es
xchg
cmp
ret
sbb
inc
add
lcall
ss
cld
add
cmp
daa
lea
pop
into
jmp
shr
adc
push
hlt
sar
or
push
push
arpl
lret
lods
test
xchg
mov
nop
xchg
add
push
cmpsb
daa
insl
mov
decl
inc
push
add
cltd
push
ret
lods
sbb
mov
test
hlt
push
loopne
cmp
mov
jmp
pushf
clc
pop
out
stc
mov
imul
mov
into
arpl
loope
icebp
pushl
push
fwait
jmp
decl
stos
pop
jp
mov
loope
movsl
imul
icebp
fstl
sbbb
sbb
sub
cmc
cs
lret
aad
sbb
mov
jge
aad
pop
inc
inc
jmp
adc
mov
pop
mov
pop
push
incl
hlt
sbb
addr16
test
out
cld
ljmp
lcall
je
pop
xor
es
cli
call
mov
fisubs
sub
pop
aad
dec
push
clc
sbb
adc
sti
stc
out
mov
xchg
sbb
xchg
out
popl
mov
ret
scas
sbb
loop
cs
mov
stos
inc
std
jmp
sbb
or
mov
mov
xchg
push
shll
xor
and
lret
incl
sbb
subb
cmpsl
pusha
dec
imulb
add
pushl
jae
mov
pop
adc
adc
sub
add
jg
fs
popf
shlb
mov
movsl
iret
inc
pop
loopne
fwait
or
push
cs
out
sahf
mov
arpl
int
mov
mov
int
bound
push
orb
loope
int
outsb
xor
imul
xor
jae
and
leave
aad
xchg
ljmp
popf
pop
mov
adc
xchg
cmp
mov
aam
pop
sbb
mov
pushf
and
mov
cmp
loop
lods
and
mov
xor
fmuls
aad
add
push
fbld
adc
mov
rcrb
idiv
push
or
arpl
push
sti
fidivl
xlat
dec
jmp
mov
ret
sub
call
xchg
lret
sub
sbb
iret
xor
rorl
xorps
cld
sbb
aaa
sbb
mov
ljmp
pushl
out
jle
xor
adc
in
lret
sub
add
ljmp
xor
inc
mov
sub
xchg
sub
adc
sbb
mov
test
call
adc
test
test
incl
mov
ss
mov
clc
jl
sub
notb
int
pop
test
inc
ret
scas
bound
jnp
ds
std
dec
sarl
pop
sub
or
aam
cmpsb
jmp
std
push
test
aam
mov
ja
push
aam
jbe
rcll
loop
rcr
inc
js
leave
sub
out
mov
xchg
rcll
fstps
call
enter
scas
jle
sbbl
jg
ret
outsb
lcall
neg
sarb
push
jno
jg
popa
mov
dec
cld
adc
loop
xchg
mov
cmp
xchg
ret
mov
test
jp
mov
sbb
addr16
lahf
outsb
pop
inc
sar
das
pop
mov
fistl
jl
push
sbb
cs
cmpsl
and
pop
pusha
pop
icebp
call
fxch
mov
xchg
cmp
add
sbb
mov
jecxz
adc
movsl
add
addr16
clc
lods
ljmp
out
popa
jo
loop
ljmp
push
mov
shrl
out
out
pop
sbb
lods
or
in
je
xchg
mov
jg
dec
fstpl
lea
jne
pushf
rorb
push
in
mov
std
or
add
inc
or
mov
adc
inc
mov
rorb
mov
pop
fwait
clc
and
jo
add
pop
popa
jecxz
inc
insl
aam
inc
cmp
jno
jl
push
stos
jmp
sub
push
ds
ror
pop
nop
cmpsl
stos
jle
hlt
test
dec
mov
inc
push
xor
movsb
jmp
mov
jecxz
mov
inc
insb
push
dec
ds
pop
mov
subb
xlat
push
mov
jecxz
add
invlpga
hlt
leave
dec
jnp
leave
push
mov
jb
mov
xorl
hlt
pushl
push
cmp
mov
test
out
jmp
je
into
cmp
flds
or
inc
hlt
sbb
cmp
xor
lods
pop
mov
pop
mov
enter
insb
xor
mov
or
xor
mov
aam
inc
and
jmp
js
jl
aad
test
incl
inc
sbb
shll
xchg
mov
xchg
sub
and
lcall
mov
push
push
stos
fsubrs
mov
and
sbb
or
test
jns
xchg
mov
mov
outsl
pop
add
inc
sbb
lcall
ljmp
loopne
out
lcall
shll
sar
mov
and
pop
insl
cltd
jl
ror
jno
cmp
call
test
cs
incl
test
mov
xor
insb
mov
jo
pop
int3
mov
xchg
lods
jmp
mov
adcl
sbb
subb
xchg
testl
mov
or
inc
lock
and
inc
cmp
in
push
pop
pusha
test
mov
push
push
mov
sbb
sub
js
jmp
imul
jge
fwait
and
aaa
xor
pop
fwait
sub
add
test
fcompl
pop
push
adc
cld
out
adc
push
dec
cmp
lret
int3
sbb
add
sar
call
mov
adc
outsl
mov
xchg
ss
xor
ss
cs
loope
aas
jle
xchg
jecxz
sbb
xchg
aam
out
cmpsb
test
add
movsb
add
jbe
cli
bnd
pop
sub
sbb
cmp
push
mov
pop
add
out
shlb
insl
push
int
mov
pop
sub
mov
xor
mov
punpckhbw
cmp
xor
loopne
cmovs
mov
jg
cmp
cld
imul
and
stc
sub
es
in
popa
inc
pop
cmc
outsb
ss
xor
dec
or
fwait
sub
insl
aam
add
sbb
outsb
or
add
and
stc
jle
add
xchg
rcl
lods
pop
mov
jb
dec
jecxz
jg
mov
add
std
mov
or
mov
dec
lcall
and
negb
rclb
dec
sub
pop
mov
push
add
or
sbb
test
outsl
cmp
out
fiadds
clc
shl
mov
adc
fbld
jne
sub
popa
jp
fimull
sbb
push
es
jns
in
mov
ret
mov
push
or
hlt
and
shlb
push
stos
lds
aam
outsb
clc
fstl
dec
je
dec
in
adc
dec
addr16
jg
addr16
push
xor
pop
int3
movsb
push
pop
bnd
lds
xchg
lods
xchg
sti
cmp
insb
inc
mov
lods
inc
gs
push
lcall
mov
jg
and
mov
sub
or
cld
mov
inc
inc
pop
mov
mov
iret
cld
sbb
pop
adc
mov
aaa
std
aaa
xchg
mov
outsb
xor
mov
movl
and
jp
shr
mov
or
out
xchg
add
nop
enter
repz
lret
inc
lcall
cmp
add
jmp
or
ret
in
jg
or
fucomip
dec
stc
repz
jnp
ret
clc
mov
cmpsb
push
ret
add
and
pop
push
xlat
pop
fcomip
jne
insb
dec
mov
push
fnstenv
sub
and
push
add
cli
push
push
add
popa
cmp
jecxz
add
xor
sbb
cmp
out
daa
ja
rcr
pop
xchg
push
sub
adc
mov
cmpsb
jns
xchg
gs
jnp
mov
out
and
push
add
jno
imul
je
in
push
pop
pop
call
das
xchg
dec
popw
cmp
cmp
fs
je
repz
or
insl
test
and
out
stos
std
adc
mov
dec
fcomip
cmp
fidivrs
loop
sbb
inc
cltd
and
iret
int
arpl
dec
iret
add
xor
in
in
invd
call
cmp
out
cmpsl
or
push
sbb
push
mov
mov
pop
aaa
les
adc
sbb
incl
xchg
repz
jecxz
sbb
sub
pmulhw
decl
fdivrl
xor
filds
outsb
out
shlb
out
test
mov
inc
and
imul
mov
push
inc
incb
pop
cmp
dec
cmpsb
cmp
mov
mov
pop
inc
inc
aad
cld
pop
cs
loope
out
clc
jnp
fistpl
shlb
imul
jmp
lret
and
cmp
test
fdivr
scas
nop
mov
fwait
jmp
dec
aam
xchg
mov
shll
out
xchg
iret
in
and
xor
mov
call
mov
cli
leave
movsb
lahf
fadds
add
vpmaxub
shr
out
mov
je
scas
jmp
xor
adc
sbb
add
or
jne
pop
xchg
cmp
sahf
cmc
pop
add
sub
push
clc
cwtl
dec
aad
ljmp
sti
add
cld
jg
push
pop
xor
mov
or
sahf
dec
mov
dec
mov
mov
ljmp
push
cld
test
jne
les
loope
jmp
xor
adc
mov
pop
or
insl
in
mov
or
lock
mov
mov
jns
stos
pop
js
jg
mov
mov
js
sub
jp
lods
pop
notb
or
or
lods
rcr
out
pop
adc
xchg
sbb
dec
test
add
shl
jnp
mov
loope
lods
fmull
inc
pusha
mov
jnp
outsl
or
sbb
pop
out
mov
call
sub
stos
pop
pop
stos
and
out
aaa
les
sahf
ret
mov
inc
jl
call
adc
scas
data16
xor
cltd
js
sbb
pop
xchg
pusha
cld
jg
jp
movsb
or
adc
push
call
push
push
bound
mov
pushf
inc
loopne
test
cmp
mov
jp
sub
scas
ljmp
xchg
mov
frstor
loop
int3
in
fmull
cmpsb
aaa
pop
push
ret
clc
int
out
cmp
bound
jl
mov
xor
scas
gs
xchg
int
inc
stc
repnz
ljmp
or
movhps
adcb
out
cli
jo
or
and
mov
cmp
fisubrl
jo
push
or
pop
jbe
pusha
pop
scas
pusha
into
sti
dec
hlt
inc
sbb
sar
pop
ror
xor
js
ljmp
in
push
mov
pxor
xchg
sahf
mov
ret
or
inc
movsb
adc
jnp
cmpsl
test
orb
sub
call
insl
sub
bound
or
push
pop
ljmp
ljmp
cmc
xor
orb
in
les
or
sar
mov
pop
mov
out
jbe
in
mov
sbb
cmp
xchg
dec
sub
push
cli
jp
dec
cmp
push
ret
icebp
rclb
int3
add
popf
mov
fdivrl
cmpsb
call
xchg
adc
or
xchg
fmuls
mov
sarb
in
sub
fsub
mov
gs
dec
jp
pop
inc
add
ljmp
push
sub
xor
xor
xor
add
rdpmc
xlat
out
cli
dec
ljmp
inc
add
jle
stc
nop
mov
dec
repz
xchg
pop
pop
call
and
sti
xchg
es
loopne
mov
jns
dec
push
pop
jle
sub
lods
movsb
idiv
das
xchg
lock
shlb
int
cmp
adc
inc
push
ljmp
sub
inc
sub
cs
sbb
dec
mov
loop
out
clc
jmp
jns
mov
adc
inc
popa
subb
outsl
ret
add
xchg
mov
push
add
lcall
ds
push
lds
sbb
call
test
cli
cld
lahf
hlt
sub
and
lods
lcall
jns
lea
dec
jmp
push
pop
sbb
sbb
pop
inc
fstpl
xchg
dec
test
xor
inc
or
add
je
adc
xor
mov
pop
leave
mov
and
loopne
lcall
imul
stos
mov
iret
push
pop
lock
mov
mov
or
adc
cmp
cmp
mov
pop
push
xchg
mov
xor
mov
loopne
fwait
sarb
enter
and
and
ja
fists
sbb
add
cmpsl
rcrb
test
dec
push
cwtl
lahf
lahf
aam
inc
mov
cld
dec
jmp
gs
jl
lahf
and
fdiv
decl
inc
xor
lock
fsubrs
add
cld
mov
fs
pop
sub
jo
mov
cmp
popf
xchg
xor
loope
push
xlat
add
fs
cmp
mov
cli
incl
dec
mov
daa
enter
in
jp
mov
adc
pop
sbb
cmp
and
ljmp
pop
shrb
mov
rorl
ljmp
nop
sbb
pop
adc
jg
cmpsl
pop
aam
pop
js
lock
jg
ljmp
test
shl
js
xchg
jmp
xor
jp
les
add
rclb
and
ljmp
out
popa
mov
pushf
pop
subb
cwtl
fcoml
gs
outsl
cli
and
dec
imul
cltd
add
sub
mov
pop
xlat
decl
test
notl
mov
movsb
xorl
incb
dec
inc
jmp
dec
mov
ljmpw
mov
out
clc
ljmp
lds
int
sub
in
cmp
push
add
mov
jle
pushl
jns
shrb
std
jg
lret
jg
add
push
or
jbe
and
scas
push
shlb
stos
stos
mov
scas
sar
outsl
and
mov
loope
push
fcomps
mov
pop
fs
call
scas
dec
out
xchg
xlat
adcl
mov
mov
pop
jae
push
jecxz
cld
fildll
mov
cmp
iret
pushf
divb
push
jne
mov
leave
addr16
sub
inc
ja
adc
in
jl
cltd
les
icebp
cwtl
fiadds
js
sub
adc
push
push
les
jmp
adc
cmp
icebp
fstl
push
daa
mov
lods
jmp
mov
cmpsb
add
pop
in
pop
push
mov
push
cld
outsl
sarb
clc
jp
cmp
stos
imul
sbb
mov
aaa
fcmovb
lret
adc
imul
popa
shlb
and
inc
ja
xchg
scas
xchg
ljmp
fistl
jbe
mov
cld
push
ljmp
inc
aas
jl
incl
fcomps
enter
loope
lcall
mov
pop
add
outsl
lods
fbld
popa
int
iret
push
ljmp
pusha
loop
push
aaa
inc
mov
aaa
dec
ret
add
cmp
fiaddl
aad
roll
into
pop
xor
inc
jne
xor
fildll
loop
cmp
cs
popl
lock
sahf
cmp
or
outsl
xor
hlt
clc
in
jne
and
inc
or
outsb
adc
adc
sahf
dec
cmp
lcall
aad
inc
mov
or
fbstp
cwtl
shlb
sbb
stos
and
hlt
call
mov
mov
nop
mov
popa
lret
adc
cmp
and
add
gs
xchg
jbe
inc
imul
inc
leave
lock
pop
sti
mull
jbe
inc
dec
les
loop
push
dec
add
outsb
cmp
mov
loopne
xchg
pop
and
jae
rcll
jmp
test
ss
mov
push
mov
aas
outsb
scas
mov
bound
jmp
ljmp
push
flds
fs
and
adc
mov
aad
movsb
or
jl
jg
sub
outsb
pop
cmc
daa
jns
inc
mov
addr16
lods
inc
cmpl
rcr
mov
incl
dec
ret
test
fs
cmpsl
adc
lcall
xchg
cld
call
fwait
push
test
xchg
ret
jbe
fisttpl
mov
pop
jo
data16
mov
mov
fistpll
inc
cmp
mov
test
iret
mov
gs
jg
jnp
test
mov
mov
es
test
jmp
icebp
adc
mov
mov
outsb
cmp
adc
jp
mov
ret
dec
mov
add
mov
out
clc
call
inc
sahf
pop
mov
xchg
adc
jne
adc
mov
daa
idiv
jg
push
test
repnz
lea
testb
jle
in
rcrl
fidivs
cld
in
jo
les
dec
xchg
scas
pop
and
mov
scas
adcb
lcall
in
aad
or
mov
int3
mov
add
js
mov
test
aaa
push
ret
jecxz
or
imull
push
cld
mov
pop
jno
lret
in
mov
jg
clc
jno
jp
or
imulb
add
xchg
hlt
xlat
push
or
sbb
adc
and
xor
test
cwtl
rorb
jno
sub
outsl
add
or
xchg
scas
mov
lcall
fs
popf
es
ret
add
lods
add
mov
pop
xchg
sti
inc
popf
in
cmpsl
or
dec
sar
fists
xchg
xchg
sbb
lret
cmp
loop
or
pop
or
or
sbb
aad
mov
stos
arpl
scas
stos
mov
inc
lret
daa
pop
les
pop
push
dec
push
push
out
mov
adc
mov
mov
lcall
test
push
sbb
pop
outsb
ljmp
inc
xchg
add
scas
xor
mov
popa
jo
jg
and
js
or
mov
imul
decl
or
out
and
mov
pop
insl
repnz
fdivr
mov
outsb
nop
xor
xor
aaa
sub
jmp
sbb
arpl
xchg
adc
sbb
stos
sbb
out
push
dec
rorb
sbb
data16
jge
dec
xchg
adc
ret
aam
bound
mov
ds
push
or
hlt
adcb
int
cmp
xchg
mov
incb
cmc
jno
inc
lock
das
movsb
mov
add
call
leave
pop
test
xor
sbb
test
jl
stc
inc
das
clc
mov
push
jns
add
or
cmp
lds
add
insb
cmpsl
ja
jo
inc
xchg
push
mov
clc
in
mov
decl
mov
adc
shlb
adc
and
pop
jp
movsb
aam
xor
fwait
and
roll
inc
dec
adc
lcall
mov
jle
hlt
popf
ds
add
pop
sbb
icebp
inc
out
lret
jo
jle
xchg
dec
shrl
add
jmp
js
fucomi
cmc
xchg
out
pop
inc
adc
and
push
pop
lcall
mov
dec
fs
fsub
arpl
adc
or
adcb
cli
jg
pop
jnp
ficomps
push
in
ret
dec
loopne
insb
pop
pop
sbb
or
decl
sbb
es
mov
leave
lret
pop
push
mov
dec
std
jmp
sbb
aad
xchg
fistps
pop
or
jno
js
pop
xor
jmp
pop
push
mov
lock
sub
push
ret
and
fimuls
sbb
rol
cltd
push
ret
pop
out
and
xchg
cmc
incl
cltd
or
sbb
imul
add
sub
push
adc
jp
lds
jno
push
orb
adc
jg
cmp
adc
sbb
xchg
mov
pop
jnp
rorl
mov
xor
dec
dec
out
outsl
push
xchg
sub
inc
jbe
cs
add
mov
test
xor
lcall
push
push
lods
push
mov
lahf
mov
test
mov
in
push
mov
adcb
cmpb
sub
aam
inc
pop
stc
insb
xchg
adc
lcall
mov
jb
mov
inc
scas
adc
stos
xchg
daa
nop
and
lahf
xchg
ja
movb
push
sub
mov
clc
call
popf
scas
fmulp
test
inc
lcall
popf
test
hlt
sbb
sbb
movsb
mov
lcall
mov
sub
movl
jbe
cmp
dec
pop
jae
mov
add
pop
sbb
pop
xchg
out
adc
sar
cmp
xchg
jb
push
sti
lcall
sub
sbbb
fcomip
lcall
or
pop
arpl
sub
lret
add
pop
out
es
cli
lcall
pop
pop
push
std
push
nop
test
popf
ret
hlt
jmp
les
add
cmpb
dec
aaa
pushf
jns
sub
test
xor
ljmp
fildl
sub
sub
movsb
jmp
push
sbb
test
sbb
fwait
in
cmp
mov
mov
cwtl
push
idivb
jg
fs
in
aaa
in
test
pusha
call
nop
faddl
lret
xchg
push
jge
fbld
push
mov
add
insb
adc
out
adc
loope
in
int3
adc
cmp
fistl
sar
stc
in
or
pop
add
sub
jne
mov
decl
pop
lret
stos
pop
pop
test
cmp
iret
pop
test
and
add
int3
sbbb
lahf
outsl
mov
xchg
cmp
push
sbb
fadds
cmp
mov
imul
iret
push
add
pop
ljmp
decl
popf
inc
xor
nop
int3
cmp
fcompl
lods
int3
cltd
aam
cli
subb
mov
mov
mov
and
lods
mov
ret
cmpsb
or
lock
jg
bound
insl
xchg
call
sahf
add
decl
test
leave
jb
pop
out
sbb
addr16
dec
cmp
lds
fldl
cmp
lcall
dec
sub
movsl
xor
mov
sbb
jle
dec
aad
decl
push
xchg
sub
xchg
iret
push
addr16
pop
cmc
daa
adc
jecxz
fcomip
jns
pop
in
pop
mov
adc
pop
lret
rcrb
fcmovnbe
cmp
pop
test
hlt
dec
jl
out
xor
cmpsb
mov
jmp
add
push
mov
and
jnp
xor
dec
testb
or
popf
incl
push
int
push
push
pop
sbb
or
adc
sar
mov
cwtl
notb
mov
adc
sahf
jle
inc
pop
je
fs
popa
pop
inc
sub
add
rcrl
push
mov
loopne
jmp
xor
xchg
jl
mov
xor
out
mov
pop
out
mov
add
cmp
lds
into
hlt
lock
mov
sbbl
cmpsl
ljmp
rcrb
xchg
and
push
test
or
fiaddl
filds
lock
fisttpll
std
pop
ja
push
js
jns
cli
jne
insb
inc
fsubl
incl
rorl
subb
ja
ret
cmp
or
inc
jecxz
add
pop
int
notl
je
mov
in
bound
iret
lret
push
jns
stc
adc
rorb
out
stos
loopne,pn
sbbb
aam
movsl
adc
decl
push
scas
xchg
inc
dec
sarb
repz
push
mov
das
fdiv
sbb
inc
js
cmp
repnz
dec
jo
addr16
sub
push
rcll
das
mov
cmc
imul
and
inc
ljmp
decl
cmp
fs
push
jg
mov
mov
inc
lods
clc
inc
mov
incl
jb
mov
iret
outsb
arpl
gs
sbb
scas
ljmp
mov
pop
and
loop
pop
and
mov
inc
sub
mov
push
or
fwait
test
add
cs
scas
xchg
loopne
test
cld
dec
jns
pushf
bound
incl
mov
jmp
test
std
inc
sub
mov
sar
mov
in
repz
into
push
inc
out
or
mov
jecxz
sub
mov
sbb
pop
test
iret
cmc
and
daa
sub
addl
test
inc
and
bound
jbe
xchg
mov
xor
adc
push
xor
and
sub
xor
mov
mov
repz
push
sti
mov
call
fisttpl
adcl
fwait
outsb
subb
scas
stc
dec
push
lock
mov
xchg
sub
and
jg
mov
mov
pop
int
fwait
cmpsl
movsb
jb
mov
sbb
add
xchg
xor
xchg
xchg
jecxz
out
xor
push
push
adc
cltd
paddusw
jmp
fsts
xlat
rcrl
push
in
dec
dec
push
pop
stos
xchg
dec
xchg
imul
push
dec
idiv
push
mov
sbb
pusha
mov
cld
jecxz
cmpsl
test
add
add
xchg
sub
xchg
mov
or
fiadds
gs
cmp
call
and
adc
mov
mov
ljmp
mov
jle
loope
dec
fcomi
cmpsb
test
mov
arpl
fwait
sub
shrl
inc
pushf
xor
mov
aaa
loopne
or
push
jge
mov
call
aas
add
xchg
cmp
iret
pop
adc
or
mov
outsb
xor
jb
cs
pop
lods
loopne
jg
stos
push
xor
sbb
xchg
push
xchg
xor
cmpsb
stc
rol
or
push
scas
es
fstl
lock
clc
mov
pop
inc
xchg
sub
add
or
pop
add
out
cmp
and
push
adc
jo
aad
bound
js
movsb
or
das
iret
mov
mov
sbb
xlat
sbb
negb
pop
or
pop
sub
fbstp
leave
imul
or
cmp
cmp
and
jbe
ljmp
add
push
ljmp
mov
in
mov
aam
mov
or
jmp
rol
fs
push
mov
cld
mov
xchg
xor
add
popa
and
std
ljmp
push
data16
rcr
sub
imul
cld
shl
leave
jae
xor
mov
rolb
test
lea
adcb
fadd
xchg
test
call
adc
cmpsl
cmpl
mov
mov
in
lcall
and
mov
shll
mov
inc
mov
pop
lock
cli
fiadds
push
dec
out
fidivrs
pop
scas
xchg
push
cld
pushl
push
and
aam
xor
ds
mov
jb
sarl
pop
les
sub
das
clc
push
mov
cs
and
out
fildl
cmp
push
jns
add
push
insl
cld
in
scas
mov
jmp
lds
ja
inc
jae
lea
mov
cmp
fwait
jecxz
sahf
fisubs
test
pop
xlat
mov
dec
cwtl
mov
mov
popa
and
icebp
xchg
mov
incl
mov
inc
xchg
adc
ljmp
pop
and
or
sti
shll
cld
decl
pushf
inc
cmc
sub
xchg
test
pushf
pop
fwait
jg
xorb
ret
aaa
add
ljmp
adc
inc
push
jle
lds
mov
fs
mov
jns
in
adc
lock
sub
inc
or
stos
nop
pop
shlb
fiaddl
jmp
sbb
dec
outsb
xchg
mov
push
icebp
lcall
jne
jo
xor
push
mov
xchg
jns
jp
jle
pop
orb
lods
push
std
pushl
or
push
xlat
movsb
dec
or
bound
imul
cli
lcall
sbb
push
movsl
sub
push
les
push
nop
adcb
push
add
insb
ja
decl
loope
add
insl
jbe
lret
ljmp
mov
ret
dec
jae
pop
mov
rcrb
push
shufps
aas
cmpsb
mov
jo
or
test
inc
pop
sarb
movsl
or
sbb
or
repz
add
imul
xchg
push
outsb
test
pop
imul
push
add
rcrl
jge
inc
data16
push
std
cmpsb
fildl
je
ss
out
mov
mov
mov
test
imul
div
xchg
test
xor
sub
sti
sub
lcall
adc
sahf
xchg
push
iret
add
pop
add
in
cmp
mov
push
movsl
in
xchg
test
or
nop
fimull
loopne
pop
xchg
mov
cwtl
andb
push
fbld
cs
fwait
xor
roll
rorl
dec
push
rolb
inc
ficoml
push
imul
xchg
or
call
fisttps
add
and
stos
loopne
pop
cmp
push
lahf
xchg
pop
push
pusha
fbstp
insb
lock
push
inc
cwtl
push
sub
test
mov
pop
and
pop
ds
and
mov
inc
js
xchg
outsb
orl
rcr
cmc
bound
test
jo
jp
or
ss
fcoms
bound
adc
movsb
cmp
and
ret
adc
jp
popf
movsb
movsb
sbb
cwtl
cmp
stos
and
jecxz
or
inc
sbb
enter
add
imul
fmuls
out
outsl
fldcw
xlat
lods
lret
lock
cmp
adc
ljmp
or
mov
ja
sub
out
repnz
icebp
lahf
test
and
pop
jg
push
movsb
stos
jb
cmc
jae
divb
dec
xchg
pop
jo
jg
sub
dec
adc
aad
push
pop
mov
sahf
sahf
cmpsl
dec
movsl
outsl
call
mov
pop
pop
lret
adcb
and
and
add
xchg
daa
jbe
insb
mov
cmpsb
or
xor
movsl
sahf
adc
scas
inc
pop
int3
jb
pop
std
outsl
clc
cli
pusha
cmp
mov
push
or
ja
syscall
pop
dec
add
mov
cmp
cmp
shrl
cmp
gs
cmc
jge
jae
stos
cwtl
mov
aaa
sbb
filds
add
inc
shlb
push
js
int3
dec
cmp
frstor
xchg
mov
cwtl
cli
ficoml
cld
or
jbe
push
iret
dec
cmp
mov
push
push
aad
outsb
jne
inc
xchg
or
sub
outsb
lds
push
pop
inc
mov
pop
gs
jle
dec
xchg
cmc
adc
lock
lret
sub
jp
lret
mov
sbb
mov
fs
fldt
mov
int3
lock
aaa
cld
cmc
mov
fs
jae
jg
mov
xchg
shll
in
movsl
enter
aas
dec
ret
ror
aas
push
jp
jle
sub
scas
sbbl
pushl
sub
jle
jmp
xor
lds
aaa
xor
mov
inc
fildll
jg
sqrtps
mov
and
xchg
inc
rcr
incl
and
sbb
adcb
jns
ja
jmp
cld
jg
stos
scas
ror
movsb
dec
gs
sbb
loope
or
jl
or
ret
subb
jbe
loop
cmpsb
add
cmp
cmp
rcrl
lods
test
adc
scas
add
mov
jge
sub
jno
popf
in
xlat
or
and
inc
or
jbe
push
setae
sti
pop
xor
pop
addr16
lcall
inc
aaa
xchg
xchg
sbb
dec
xchg
filds
or
lcall
sub
test
call
hlt
xor
mov
test
sbb
mov
lods
rep
shlb
cmp
loop
xor
fnsave
mov
jmp
cmpb
lds
out
sbb
clc
push
movsb
push
shlb
int
adc
push
fldcw
xchg
mov
mov
inc
and
in
cld
orl
lock
call
lods
push
dec
inc
subl
jmp
push
js
fwait
hlt
mov
pop
xor
scas
dec
lds
mov
fidivrl
pop
add
mov
mov
inc
repnz
fisttps
decl
int3
mov
and
fmuls
ljmp
mov
lds
push
inc
xor
adc
fcomip
data16
out
mov
xor
aas
loopne
subb
es
aaa
fbld
push
lcall
pop
fwait
outsb
sbb
hlt
adcl
mov
lcall
cmp
mov
pop
sbb
pop
xchg
jb
loope
pop
xchg
sub
inc
xchg
jl
inc
jg
mov
ja
sub
mov
aaa
roll
mov
mov
call
stos
test
xorl
das
ss
cmp
inc
adc
sbbb
fmull
fildl
pushf
xchg
inc
mov
pop
je
ror
push
ljmp
fcom
inc
pop
fs
test
inc
sub
ljmp
jnp
shll
xor
orl
cmp
popa
call
jmp
adc
mov
fwait
mov
ja
push
cmpsb
mov
add
loopne
loop
movsb
mov
mov
and
movb
push
xchg
repnz
fld
es
mov
aaa
fistpl
mov
out
loopne
mov
xor
cmp
jg
sbb
icebp
mov
xchg
xor
insl
push
jne
fisubs
or
dec
jbe
sub
or
mov
inc
cmpsb
in
decl
stos
daa
jmp
mov
int
icebp
insb
sbb
jo
call
add
in
sar
mov
or
or
inc
mov
jmp
ret
out
sbb
dec
jge
popf
sub
cmp
scas
inc
decl
cli
bound
scas
leave
mov
push
std
incl
or
cmp
jbe
aam
lds
out
push
nop
push
es
mov
fcom
cmp
jne
insl
sbb
cmp
movsb
sti
adc
mov
mov
inc
cmp
sub
call
mov
movb
mov
xchg
call
cld
add
lret
or
decl
or
inc
movsl
mov
pusha
xchg
add
mov
or
insl
dec
xchg
fiadds
cs
mov
xor
ret
shrl
insb
push
jge
sbb
jle
outsl
cmp
repnz
icebp
sbb
pop
ljmp
or
push
or
jge
out
cli
cs
lock
mov
push
xchg
mov
cs
jne
nop
pop
mov
dec
mov
cmc
jno
pop
add
dec
and
xor
mov
mov
stos
xor
std
sub
cmp
out
cmp
jo
adcb
xchg
leave
ret
jl
repnz
les
sbb
fucomp
fiadds
xor
lcall
insl
and
add
or
in
pop
jl
jmp
mov
add
iret
fmuls
or
mov
fcomps
in
outsb
popa
iret
sti
loope
cmp
xchg
lcall
mov
jle
rclb
jle
movsl
sahf
mov
ret
fstl
fdivr
mov
jp
jns
xor
jbe
sbb
lret
insb
adc
jp
xchg
lea
aas
test
sub
mov
add
cmc
and
rol
dec
cwtl
pop
inc
adc
or
outsb
sub
fmull
inc
retw
push
dec
add
hlt
ljmp
cmpsb
add
adc
and
test
jecxz
mov
xchg
adc
movsl
lock
fmuls
bound
or
sub
or
mov
xor
add
test
pop
lret
mov
xor
sti
scas
loopne
cmp
inc
in
jp
test
fsts
call
clc
xchg
jl
imulb
aaa
std
cli
lahf
xor
repnz
stos
add
pop
fnstenv
xchg
sub
movsl
xchg
mov
outsl
cli
adc
xchg
imul
repnz
or
adc
cltd
and
dec
ret
mov
inc
pop
test
imul
push
stc
jne
mov
daa
into
mov
test
stos
incb
sbb
push
das
jp
fnstsw
pusha
cwtl
jmp
jae
push
sbb
dec
ds
xor
push
gs
outsb
lcall
add
movsb
mov
and
inc
dec
data16
loopne
or
mov
in
cmp
jge
into
rcll
scas
les
in
or
jg
pop
cmp
sbb
ret
aas
es
shrb
out
pop
push
push
and
dec
mov
mov
jle
or
and
inc
popa
adcl
jg
pop
scas
mov
aam
sub
loopne
dec
sub
or
dec
outsl
sti
and
mov
pushf
and
frstor
ljmp
ffree
mov
cs
bound
jp
push
orb
ret
pusha
mov
jmp
fidivs
test
pop
mov
popf
mov
xor
mov
add
ljmp
and
xor
xor
test
sub
adc
push
mov
popf
imul
xchg
std
pop
cld
iret
scas
inc
xor
test
into
int3
xchg
xchg
pushl
sbb
popl
adc
mov
sbb
jecxz
jg
mov
mov
fstl
and
mov
into
dec
mov
jge
mov
fmuls
adc
jmp
cltd
in
popf
fimuls
pop
inc
call
jne
mov
movsl
aad
and
mov
call
xchg
repnz
ldmxcsr
jmp
addl
pop
sub
lea
incl
subb
popf
fs
mov
inc
xchg
sar
sub
int
add
and
jg
insl
push
push
stos
xor
inc
dec
sub
loop
jg
adc
daa
clc
sarl
xor
out
add
test
push
sbb
lret
into
in
xchg
xor
ljmp
stc
mov
pop
mov
inc
out
pop
xchg
in
cli
sub
ret
push
insl
mov
mov
andb
xor
push
or
add
mov
es
mov
js
pop
daa
and
push
insb
jmp
and
push
imul
cmp
add
pop
dec
sbb
iret
push
mov
adc
mov
call
lahf
sti
je
dec
jae
xor
mov
rcrb
hlt
cmpsb
aam
imul
ljmp
hlt
jo
push
pop
fsincos
data16
mov
or
pop
movsb
add
es
decl
ret
call
insl
ljmp
push
dec
cmp
mov
out
dec
add
mov
push
aad
negl
scas
lea
jns
sbb
ret
das
lods
pop
mov
stos
lahf
adc
or
jns
lea
sarl
movsl
stos
movsb
outsl
ljmp
mov
int3
imull
ljmp
mov
push
pusha
jl
mov
add
rolb
push
test
lcall
repz
xchg
inc
popf
out
dec
sub
lahf
cli
fisttpl
or
sub
dec
xlat
jae
xor
out
faddl
arpl
mov
fwait
call
inc
dec
xor
xor
lea
fildll
xor
int
fistpll
pop
test
scas
mov
in
pop
add
out
and
movsb
pop
enter
int3
xor
cmp
sub
aad
cmp
dec
and
jg
pop
inc
mov
mov
in
out
andb
loopne
insl
adc
mov
mov
or
or
dec
imul
rcll
pop
in
mov
loop
fisubl
add
or
ljmp
das
inc
int3
faddl
jmp
icebp
push
and
sarb
mov
xor
mov
mov
sub
pop
dec
dec
aam
mov
xchg
push
push
gs
adc
fldcw
jo
insb
cmpsb
pop
mov
subl
inc
jle
clc
and
mov
mov
rorb
lret
into
inc
lcall
movsb
or
and
fstpl
out
mov
xchg
jnp
cld
stos
call
std
mov
fsubl
les
incl
add
sbb
sub
dec
pop
hlt
sahf
fwait
lds
adc
stos
neg
push
ss
decl
lret
lret
lods
jnp
push
xchg
addb
cmp
inc
leave
cli
rcrb
add
dec
mov
pushl
xor
or
in
cmp
pop
pop
ret
cmp
mov
mov
lcall
ds
mov
push
dec
cmp
sbb
sub
xor
data16
jb
push
js
adc
shl
pop
and
add
in
stos
in
stos
jl
imul
ljmp
js
push
ret
cltd
lcall
data16
jp
pop
mov
sbb
or
aas
addr16
movsb
jne
push
std
push
mov
dec
test
push
jb
int
xor
out
jnp
inc
pop
lock
sbb
in
jecxz
repz
inc
loop
clc
fnstsw
rorb
lock
push
mov
incl
or
xor
movsl
jne
addl
mov
add
mov
adc
push
sbb
xlat
push
xchg
jno
fsubrs
shlb
sbb
xorb
xchg
inc
xor
jmp
das
mov
loop
lods
fld
dec
mov
push
jl
les
fs
rcr
inc
or
jg
pop
inc
popf
enter
mov
add
adc
adc
ret
or
inc
xlat
mov
jo
imulb
sub
sbb
sbb
xor
data16
out
arpl
pusha
nop
hlt
incl
mov
push
add
mov
stc
les
sbb
inc
rcrb
inc
push
outsl
sahf
ljmp
adc
push
mov
out
arpl
mov
sbbb
or
push
leave
fsubl
add
aas
lcall
pop
and
fwait
in
jns
enter
fisubrl
gs
add
lock
into
inc
loop
add
pop
prefetch
or
dec
mov
or
mov
cmc
adc
popf
jmp
mov
hlt
push
repz
xchg
outsl
pop
jne
xchg
les
lret
cmp
add
pop
loop
sbbb
clc
push
and
call
jmp
mov
inc
push
rcr
mov
xor
xchg
xchg
bound
aad
loop
mov
dec
jmp
mov
cmc
cli
js
pop
push
clc
or
hlt
sbb
mov
adc
insl
mov
xorb
jmp
sbb
lcall
push
ss
clc
bound
pop
push
and
lds
mov
jle
ffreep
mov
or
sbb
mov
mov
jg
pop
mov
cld
sbb
daa
test
je
fmull
clc
add
pushf
jae
jg
add
rcrl
ja
dec
aas
mov
inc
out
mov
inc
xchg
shrb
jnp
cmc
rcll
jmp
shr
adc
pop
sbb
nop
jg
ss
int3
ss
pushf
jb
dec
out
cltd
mov
pop
nop
mov
sbb
test
adc
loope
idivb
ret
inc
push
xlat
jmp
out
fadd
cmp
cmc
xchg
and
and
decb
jmp
lret
inc
fcomps
dec
ret
cli
xchg
lods
mov
mov
push
lret
jp
cli
mov
or
outsl
or
insb
sub
and
jecxz
test
outsb
fwait
clc
pop
add
call
push
cld
mov
rol
or
cmp
inc
pop
jmp
pusha
bnd
xor
mov
xchg
pop
or
aaa
lock
std
stc
mov
cmp
enter
cmpb
out
mov
or
push
push
in
out
mov
int3
mov
push
mov
sbb
adc
pop
repz
es
scas
dec
clc
lret
lret
inc
pusha
xor
lods
imul
cmpsl
lret
xor
sbb
add
call
ljmp
add
adc
sbb
std
test
and
das
mov
cmp
xor
adc
sub
mov
pop
cmc
incl
add
out
push
popa
nop
adc
add
shll
or
push
sbb
and
or
ljmp
cmc
fildll
out
mov
pushf
js
fmuls
cltd
xor
int
cwtl
xchg
adc
inc
push
test
adc
test
xor
add
outsb
inc
lds
icebp
call
mov
mov
push
sahf
xor
add
es
sti
aas
sti
dec
xor
xchg
clc
add
xorl
rcrb
in
rcrl
rcll
push
cld
je
insl
int
ja
mov
jle
test
add
test
ds
mov
test
push
jnp
scas
mov
inc
dec
jbe
add
pop
cmc
inc
inc
push
adc
pop
mov
mov
xor
adc
mov
test
into
or
mov
adc
add
mov
sti
xor
nop
jae
xchg
inc
je
or
push
roll
push
dec
scas
out
test
ja
inc
movsb
jo
jp
in
pusha
bound
xor
hlt
filds
ja
rcrl
jo
jmp
and
pop
enter
lret
mov
das
fildll
or
push
xor
sbb
pop
mov
push
xor
mov
sbb
inc
lods
adc
push
popl
dec
test
or
pop
movsl
mov
stc
clc
rcll
mov
mov
lock
lea
inc
test
lcall
stos
push
je
push
jg
or
mov
sub
xchg
sub
xchg
scas
or
fnstcw
lret
ljmp
sbb
jne
mov
ret
out
cli
incl
std
rcr
mov
pop
fdivrl
aam
in
js
cmpsl
mov
xor
push
push
lcall
pop
pop
pusha
out
popa
xchg
mov
jmp
into
fcomi
stos
and
adc
adc
test
roll
jmp
cwtl
push
aam
or
sub
mov
pop
cmp
fcomip
push
loop
popa
jge
mov
sbb
mov
or
xor
sti
popf
mov
sti
inc
mov
sub
js
inc
incl
and
mov
aad
mov
filds
cmp
jmp
lods
fucom
sub
add
lcall
jg
les
mov
adc
sub
and
sbbb
cmc
nop
in
aas
fidivl
jmp
pop
mov
pop
xchg
sbb
sub
ljmp
jns
push
xorl
test
dec
xchg
jge
cwtl
enter
push
dec
mov
dec
and
mov
sub
mov
mov
pop
iretw
mov
inc
sbb
lock
cltd
lock
shlb
and
out
push
pop
cmp
sub
call
mov
incl
xchg
dec
shl
pop
mov
cmp
outsl
loope
push
aaa
jmp
jmp
jno
jecxz
les
pop
mov
scas
nop
lock
pop
cmp
imul
xor
jge
jno
in
insb
mov
cli
ljmp
add
add
lock
jae
jo
jns
pop
sbb
rolb
enter
pop
xchg
mov
push
jge
pop
iret
mov
xor
lea
sbb
push
cmpsb
mov
outsb
in
rcl
dec
rorb
insb
sub
call
push
xor
pop
test
push
pusha
pushf
mov
popa
aam
mov
int3
mul
imul
cmc
call
jg
mov
sub
scas
push
mov
xchg
and
mov
sbb
push
jmp
test
loope
cmp
mov
cmc
iret
cwtl
call
cmp
ds
jg
pop
sbb
xor
aas
pop
mov
stos
pop
movsb
add
lods
das
clc
dec
push
shll
mov
jl
push
inc
mov
pop
cmp
add
mov
rorb
and
sub
aad
rcrb
xor
push
jle
and
jl
pop
das
push
enter
sbb
loopne
add
add
lcall
orb
sbb
jp
fwait
decl
push
sahf
dec
push
test
sbb
ror
mov
test
push
jmp
jnp
movsl
out
neg
sbb
punpckldq
test
outsl
fcoms
cmp
sbb
nop
jbe
sub
popf
mov
xchg
mov
incl
jne
lfs
mov
ljmp
mov
into
mov
sub
incl
dec
ftst
cltd
in
jo
jmp
jmp
sbb
call
jl
sbb
or
ret
pop
sti
lock
js
xor
lods
outsb
mov
push
xor
mov
cmc
int
clc
or
sbb
sti
pop
push
popa
out
pop
mov
push
incl
or
pop
inc
sti
fcompl
dec
inc
cmp
mov
mov
pop
push
test
xlat
adc
push
adcb
clc
mov
sub
fidivs
inc
subl
std
jg
mov
scas
sub
xchg
jae
lock
call
pop
add
cmp
aam
jg
rorb
pop
daa
adc
sub
sub
fdivrs
stos
cmp
push
in
sbb
pushl
mov
data16
dec
or
outsl
push
pushf
push
push
pop
sarl
cli
fwait
cli
jg
nop
or
sbb
cmpsb
lock
out
fiaddl
lods
push
add
mov
mov
mov
xlat
dec
fs
xor
in
rol
sbbb
clc
pop
adc
cs
pop
push
jno
call
and
in
mov
fldenv
rcrb
xor
enter
mov
decl
sub
dec
pop
test
inc
jle
xor
sbb
daa
cmp
jecxz
fs
pop
push
push
cli
aas
push
test
dec
and
jg
fcmovb
shlb
inc
shrb
outsb
ret
fnstenv
stos
dec
mov
scas
mov
pushl
push
out
bound
inc
mov
add
in
lcall
add
pop
add
sub
adc
or
inc
pop
lods
push
lret
sbb
push
xor
push
ds
imull
cmpl
hlt
stos
push
scas
pop
pop
int
popa
sbb
in
jmp
mov
cmp
pop
inc
fisttps
mov
ss
decl
outsb
popf
xor
pop
inc
lock
aas
aaa
xor
add
repz
push
or
inc
adc
pop
cli
mov
ficomps
mov
push
pop
bound
cmpsl
sbb
movsl
repz
xchg
repz
mov
scas
ret
movl
mov
pop
out
mov
fxch
xor
lods
mov
iret
mov
push
push
sarl
jno
push
inc
xorb
and
pop
mov
mov
loop
insb
or
data16
dec
cli
jmp
sbb
ljmp
push
jp
dec
cld
ljmp
dec
jecxz
jge
rcrl
lock
push
or
adc
iret
add
ret
pop
int3
das
cltd
mov
sub
das
push
fs
jp
inc
add
fsubp
aam
test
and
out
cld
call
lahf
loope
jge
pop
insl
outsl
in
sub
pop
pop
mov
lods
inc
push
ret
mulb
fstpt
lea
std
mov
mov
fdivrp
push
insb
pop
push
call
pop
ss
mov
stos
mov
arpl
jnp
lods
adc
mov
mov
lds
fwait
cmp
jecxz
xor
cld
or
inc
call
sbb
mov
xor
pop
adc
aaa
add
cmpsl
sub
test
ret
adc
fisttps
cwtl
shlb
fbld
int3
stc
scas
cld
int
test
mov
iret
sub
xchg
cmp
fcomip
push
xchg
xchg
mov
lcall
mov
or
sahf
test
jle
cmc
mov
aad
push
or
sbb
lock
jmp
or
cwtl
adc
lret
dec
mov
imul
rcrb
scas
cmp
push
add
popa
fadds
xor
jae
enter
test
cmp
sub
jmp
gs
jns
ss
out
scas
daa
ja,pn
jmp
sbb
addr16
mov
ret
cmp
dec
jg
rolb
repnz
xchg
jp
fs
ss
shrb
fdivp
push
dec
popa
enter
mov
fidivl
mov
les
lods
lea
jle
fadds
pop
in
mov
mov
sub
lahf
dec
pop
mov
inc
xchg
cli
fbstp
mov
sbb
icebp
leave
dec
shlb
cltd
cltd
shlb
roll
inc
cld
xchg
dec
shr
xor
cmpsb
mov
clc
ljmp
lods
shll
sub
cmc
fldl
xchg
dec
push
cmpsb
jge
hlt
add
jecxz
xor
or
pop
inc
mov
dec
inc
call
into
cmp
cli
orb
std
cmp
fldt
fisttpll
mov
xchg
test
jns
sbb
add
sbb
arpl
icebp
xchg
add
jns
mov
push
cwtl
in
sub
sub
call
inc
xchg
or
xchg
or
mov
adc
jb
call
or
das
pop
mov
dec
pop
dec
ja
mov
mov
movsl
mov
and
adc
or
and
mov
fidivrl
add
bound
orb
cmp
sbb
adc
fisttps
insl
mov
js
cmp
cmpb
outsb
add
into
sub
add
sub
adc
mov
lret
xchg
cmpsb
pusha
into
xchg
test
nop
cmp
fstpl
loopne
insb
add
push
pusha
lock
or
std
es
fs
mov
xchg
add
mov
mov
int
stos
push
addr16
jnp
sbb
rcrl
shrl
das
or
push
mov
add
call
jne
lahf
adc
insl
push
push
cli
repz
pop
ja
dec
test
pop
mov
clc
call
hlt
cmp
and
orb
fs
call
fwait
cmp
mov
push
repnz
jne
and
xchg
es
in
popf
dec
dec
shrl
in
inc
mov
xchg
mov
popf
xor
cli
call
test
outsb
dec
clc
fidivrl
push
mov
mov
push
loope
xchg
xor
lds
and
cmc
insl
stos
dec
cld
pushl
xor
mov
or
fsubrl
leave
or
rclb
pop
incl
loop
insl
pop
hlt
loope
jge
or
aam
cli
test
std
lock
add
fcmovne
xchg
mov
imul
das
sbb
std
pop
and
dec
lahf
lret
pop
dec
into
cmp
cli
mov
pop
xchg
inc
adc
es
rcll
pushf
lods
ss
pop
ja
push
add
cld
pop
pusha
pop
jp
aas
cmp
mov
fildll
scas
pop
hlt
add
out
imul
int3
shl
mov
loopne
cwtl
call
mov
icebp
clc
inc
pop
sub
add
inc
out
sbb
loope
or
cmp
imul
enter
or
lret
xchg
int3
roll
and
adc
bound
ljmp
fcomp
and
cli
sbb
insl
xchg
add
mov
cltd
fidivrl
xchg
xor
lea
cmp
mov
add
xchg
jp
popa
inc
cmp
mov
push
sbbl
xor
stos
xchg
rcr
fwait
push
xchg
imul
in
out
sub
arpl
mov
jecxz
jge
arpl
push
in
cld
cld
sbbb
out
ljmp
cmpsl
jp
push
lods
cmpsl
xchg
test
loop
xchg
leave
cmp
pop
hlt
pop
dec
mov
lods
mov
lods
inc
lds
sbb
lods
cmp
xchg
mov
ret
push
lock
mov
mov
inc
dec
addr16
shlb
xchg
xor
xchg
movsl
imul
mov
mov
push
xchg
out
push
sbb
es
jmp
fimull
loopne
aad
fadds
into
dec
lret
sbb
mov
xor
cmp
lea
and
mov
bound
clc
lds
jo
mov
imul
jg
adc
jns
inc
xlat
arpl
xlat
cld
stc
push
pop
movhps
aaa
std
das
js
ret
fidivs
nop
inc
lds
pop
pusha
and
lcall
xor
lcall
sbb
cmpsb
fcompl
mov
adc
mov
push
mov
idivb
outsl
aad
in
mov
dec
out
js
and
test
xchg
ss
sti
js
fidivl
imul
aas
add
adc
call
jne
fildll
or
lret
push
ret
jbe
outsb
jmp
pop
jnp
es
mov
cmpsl
clc
pop
hlt
clc
inc
jp
cmp
lods
data16
or
cld
incl
dec
push
sbb
adcb
leave
clc
cld
bnd
mov
call
inc
push
std
fcomip
sub
inc
shll
xor
add
fdivrs
dec
lcall
je
aas
adc
jb
add
nop
xchg
adc
dec
adc
incl
outsl
movsl
rorl
dec
jmp
lcall
sub
or
mov
rcrl
fidivrs
shrl
call
pop
add
ja
incl
fidivrs
enter
add
xchg
pusha
sub
int
sbb
enter
fstps
jmp
lahf
daa
and
out
lcall
imul
subb
fsin
lcall
pop
pop
testb
and
xchg
jle
js
jg
xor
pop
and
outsb
sbb
lods
push
fidivl
outsl
lret
xchg
push
arpl
nop
aam
hlt
leave
mov
popf
stc
pop
or
fistpll
cmc
icebp
imul
lods
jns
imull
push
inc
mov
cwtl
mov
mov
cwtl
push
rcl
stos
mov
mov
adc
test
mov
add
in
jb
into
mov
decl
das
popa
xchg
mov
cmc
jmp
pop
pusha
std
mov
mov
enter
fisubrs
and
mov
fwait
mov
mov
hlt
pop
or
aaa
adc
jne
arpl
pop
lods
les
ljmp
mull
data16
sub
sbb
out
fnstcw
adc
adc
fbld
fldt
cmp
js
mov
adc
pushl
popf
mov
in
lods
ljmp
fsub
js
xchg
repz
dec
lcall
mov
jecxz
fbld
stos
cwtl
mov
sbb
jp
ljmp
mov
dec
imulb
mov
test
jmp
cmpb
mov
cwtl
inc
pushf
sahf
mov
data16
mov
cmp
add
push
xor
jp
mov
imul
inc
jae
mov
pop
cld
call
es
shll
dec
sbb
testb
aas
andb
pushf
xchg
mov
sahf
adc
decl
or
ffree
sbb
clc
dec
jmp
mov
out
mov
lahf
call
cli
or
or
lcall
pop
inc
lcall
adc
jg
je
mov
cmpsb
or
cmpsb
mov
ss
decl
ret
outsb
in
fs
cwtl
push
or
call
popa
cld
jg
adc
xchg
pushf
stos
les
cwtl
adc
jae
mov
xor
mov
dec
sbb
xchg
mov
ja
sbb
aad
and
jmp
decl
push
data16
push
movsb
lods
inc
fs
xor
mov
ffree
add
lahf
test
aad
and
sbb
push
mov
lahf
mov
push
push
add
pusha
xchg
stos
and
pop
js
dec
xchg
and
pusha
dec
mov
jle
mov
mov
mov
xlat
xor
popf
aas
mov
or
and
add
add
pushf
xlat
xor
xlat
enter
dec
xchg
out
jnp
xor
scas
scas
add
smsw
movsb
clc
push
movsl
fbld
std
pop
cmp
jb
or
jb
in
dec
pop
fwait
mov
dec
fisttpll
cmp
mov
rcr
ds
xor
out
xchg
add
push
inc
cmp
lahf
add
iret
decl
mov
sub
sub
cld
adc
sbb
popf
aaa
jne
adc
mov
sub
in
js
dec
or
scas
mov
inc
sub
addb
divb
push
das
pop
xchg
lock
adc
pop
sbb
cmp
push
mov
fwait
std
push
inc
jg
cmpsb
int3
mov
adcb
pop
push
lock
ja
cmp
dec
xor
jle
dec
mov
lock
cmp
dec
pop
loop
pop
mov
aad
stos
pushf
mov
pop
push
adc
sub
jb
test
mov
cld
cmp
jmp
pop
sahf
jg
cwtl
into
mov
jl
insl
jp
adc
mov
roll
stos
aaa
scas
dec
jnp
push
push
push
cmp
aaa
jecxz
subl
lcall
mov
in
inc
sub
cmp
sti
es
in
push
test
xchg
mov
xchg
outsb
test
sbb
ja
mov
cmpsb
xor
jle
adc
call
sbb
and
cmp
test
and
ja
and
sub
jb
hlt
cmp
mov
incb
mov
dec
mov
test
cmp
stc
int3
jg
xlat
ljmp
push
inc
mov
mov
cmpsb
rolb
push
cli
call
ljmp
pop
call
pop
lcall
adc
xchg
clc
sub
sarl
jge
add
pop
incl
cmp
in
push
push
sti
cmpsl
add
aam
subl
shrl
cmc
pop
xchg
mov
shll
clc
ljmp
daa
inc
mov
popa
mull
jg
and
push
sub
cmp
dec
inc
pop
pop
mov
or
daa
and
mul
ret
aas
mov
mov
push
adcl
add
in
cmpsl
loope
pushl
dec
cwtl
sbb
je
jne
clc
pop
cli
cmp
cs
xchg
lea
dec
test
test
ljmp
xor
push
mov
popf
stos
loop
lret
inc
nop
subb
mov
daa
bound
jmp
pop
outsb
cmp
lcall
and
adc
and
pop
adc
fs
jmp
pop
mov
mov
add
sbb
setns
loop
mov
cmp
rcl
imul
xor
mov
call
mov
push
fwait
jp
decl
out
mov
ljmp
in
lahf
and
mov
add
xchg
pusha
pop
andl
cwtl
clc
jge
mov
gs
dec
push
ret
lods
add
ss
je
test
cs
mov
mov
pop
js
pusha
jmp
or
mov
movsb
adcb
xchg
shl
aaa
mov
lods
sbb
je
add
decl
ljmp
xchg
ja
mov
lret
pop
inc
adcb
or
dec
add
or
cmp
push
push
out
clc
xchg
add
inc
inc
sub
imul
adc
mov
cmpsb
add
js
xchg
scas
pop
cmp
mov
jecxz
dec
decl
outsb
repnz
xchg
scas
aaa
ret
enter
mov
dec
ja
gs
or
movsb
jl
add
ja
ror
fwait
jb
mov
jbe
add
add
and
push
push
imul
daa
push
cli
daa
lock
out
mov
out
pop
cmp
inc
inc
push
jp
pushf
add
sbb
mov
mov
cwtl
pop
sbb
repz
and
mov
adc
jl
or
aaa
jl
pop
and
xchg
jmp
shlb
adc
cmp
outsb
jl
adc
inc
pop
inc
mov
pusha
ss
mov
les
mov
sbbl
add
add
pop
push
fcmovnu
pop
ss
push
das
aam
mov
insl
pop
mov
ret
mov
mov
je
sub
loope
fs
add
dec
jp
arpl
test
call
lcall
movsl
pushl
imulb
lods
pop
sbb
arpl
xor
decl
in
aas
test
lock
gs
rcll
incl
stos
ds
loop
push
push
shll
ret
sbb
pop
hlt
ds
fmuls
inc
in
leave
fucomp
adc
dec
sub
or
cltd
pushf
leavew
cli
xor
adc
push
mov
jge
test
out
lods
and
aaa
or
aad
xorb
test
hlt
insb
dec
out
js
add
popa
inc
lcall
or
cli
cltd
jge
fsubr
scas
js
mov
insl
sub
test
loopne
popa
jecxz
incl
dec
dec
stos
and
nop
cmp
dec
lcall
mov
fisttpll
iret
lret
clc
push
leave
mov
idivb
xchg
cs
xchg
dec
sub
mov
into
stos
mulb
ljmp
inc
mov
jg
xor
aad
jg
outsl
mov
scas
dec
sub
sar
pop
or
lcall
sahf
test
lods
mov
adc
cmpsl
cmp
and
out
inc
addr16
in
into
ljmp
xchg
cli
mov
pop
into
add
inc
or
push
mov
and
call
test
nop
in
mov
popf
and
icebp
ja
jne
mul
adc
push
push
clc
fwait
mov
cmp
xor
or
mov
adc
out
mov
sti
dec
push
pop
inc
loope
std
into
stc
xor
sbb
data16
jge
jg
sub
dec
subl
mov
adc
sar
jne
or
pop
js
pop
and
pop
mov
cmp
ja
adc
xchg
pop
insl
aad
jnp
sbb
dec
into
scas
sbb
or
ret
lret
cmp
push
shlb
iret
push
sbb
test
shrb
mov
loope
pushl
sbb
out
jp
ljmp
clc
cmpsl
mov
xor
jg
ljmp
adc
xlat
arpl
add
mov
mov
pop
fwait
aad
lds
pushf
loop
cld
aas
andl
adc
mov
leave
xlat
mov
pushl
daa
pop
or
enter
out
sbb
in
mul
pop
outsb
ss
rcrl
push
clc
call
sub
cmc
test
mov
stos
push
mov
sub
xchg
pop
jo
movsb
popl
addr16
pop
int
inc
push
loopne
movsb
ljmp
jp
mov
into
pop
mov
push
lock
ljmp
xor
sub
mov
xchg
push
movsl
stos
dec
cmp
sbb
imul
imul
pop
mov
mov
dec
add
dec
xchg
cs
cmp
out
cmp
pop
mov
jl
mov
stos
popf
fcmovu
jg
push
lock
shl
incl
pop
mov
dec
in
add
sub
jge
lcall
loopne
and
inc
xlat
lahf
push
imul
sbb
or
lds
or
cwtl
dec
sbb
mov
lcall
cmpb
xchg
mov
jle
rcl
mov
cld
lods
loopne
pop
xchg
push
scas
test
jmp
adc
inc
xorb
and
or
mov
or
stos
idivb
out
mov
push
cld
xlat
jp
icebp
xlat
jecxz
mov
cltd
mov
jg
rorl
testl
jns
add
add
dec
mov
fwait
imul
in
adc
dec
mov
leave
into
adc
cli
jg
xchg
cwtl
inc
lret
ret
mov
mov
add
mov
mov
xchg
and
sub
jle
imul
out
test
jmp
cmc
movl
int3
aaa
and
jmp
cmpsb
ljmp
inc
call
cmp
push
test
insb
test
fs
push
aaa
sub
mov
movsb
mov
jp
jno
jmp
addr16
dec
or
add
jg
or
xor
lods
loop
and
pop
or
addb
mov
lods
hlt
dec
cltd
cmp
add
cld
lods
pop
stos
jg
inc
xbegin
scas
stos
mov
mov
and
imul
fnstsw
pop
sub
iret
mov
sbb
add
div
xchg
dec
pop
or
inc
popf
adc
loop
xchg
jmp
enter
repnz
mov
aas
sub
je
andb
movsl
outsb
cld
adc
stos
out
mov
inc
push
push
into
mov
push
aad
aam
test
ret
or
mov
icebp
inc
xor
pop
dec
mov
fldcw
push
ret
das
sub
add
call
clc
adc
sub
les
dec
mov
sbb
xchg
mov
cmpsb
clc
cmp
scas
mov
xchg
mov
mov
cli
enter
fmuls
mov
xchg
fdivl
stos
lods
adc
cmp
aad
mov
mov
jp
test
faddp
filds
js
aas
sbb
mov
ds
pop
data16
push
inc
cld
lds
ljmpw
mov
stos
or
call
mov
mov
and
popa
add
inc
adc
sbb
leave
jne
enter
jle
fsub
mov
stc
andnps
leave
push
addr16
or
out
add
jmp
icebp
pushl
scas
mov
sub
push
cmp
iret
hlt
sahf
aam
ror
lahf
gs
out
outsl
fadds
pusha
in
or
xchg
jmp
jns
xchg
sub
pop
xchg
ljmp
add
cmpsl
mov
int3
out
jo
inc
inc
dec
divb
nop
adc
cmp
jge
test
xchg
xlat
adc
test
lods
jg
dec
and
das
mov
jnp
fisubl
or
adc
lds
mov
pushl
xor
jp
sti
push
xchg
and
xor
jg
mov
sbb
sahf
sub
pop
mov
cli
sub
push
insb
inc
in
pop
and
xlat
xchg
insb
pop
pop
out
es
addr16
pushf
decb
test
adc
out
push
insb
cli
mov
mov
aad
adc
mov
movsl
insl
cld
hlt
mov
push
and
push
pop
iret
jle
dec
dec
rclb
sar
movsb
xlat
std
jg
cltd
sbb
data16
xchg
xor
out
xchg
inc
mov
stc
js
inc
fdivrl
pop
lods
jns
das
insb
mov
xor
je
inc
jl
mov
jae
ret
aad
dec
dec
dec
addb
clc
gs
jg
add
mov
adc
scas
and
jg
gs
or
pop
sarb
stos
loope
fildll
mov
push
out
jbe
mov
fidivrs
mov
and
addr16
jbe
and
jmp
push
clc
mov
pop
adc
out
test
xor
xchg
bound
push
cmp
addr16
inc
popa
call
sub
dec
mov
push
daa
lock
or
add
pop
call
ljmp
loope
mov
mov
hlt
bound
ret
cld
jno
mov
pop
ret
shl
in
in
dec
lock
push
ficoms
in
bound
insb
adcb
inc
mov
cwtl
jo
cmpsl
fucom
repnz
call
sbb
and
inc
cmp
ffree
enter
jp
sbb
rclb
addl
jne
jbe
cmp
pop
jmp
cmpsb
outsb
jl
enter
sub
add
cmpsb
lods
and
js
cld
popa
scas
pop
mov
xchg
stos
loope
shlb
outsb
mov
std
mov
mov
rcll
mov
jns
jle
lea
mov
jmp
cmpsb
pop
xorb
push
mov
adc
ljmp
aam
or
mov
inc
iret
lds
lods
cs
dec
ljmp
mov
jge
add
adc
pop
pop
mov
lahf
sbb
in
push
test
in
xchg
push
cmp
repnz
out
xchg
mov
ret
ds
mov
das
clc
dec
xchg
loopne
or
jns
stc
mov
stos
mov
add
cmc
lahf
mov
mov
push
outsb
test
sbb
outsl
mov
mov
xchg
out
sub
cmc
psrad
repnz
aam
int
jb
movd
push
mov
and
dec
cmpsl
sbb
insl
and
jnp
out
xchg
andb
js
fdivr
mov
sti
sbb
inc
movsl
jle
and
inc
scas
sbb
popf
and
ljmp
clc
push
mov
adc
ror
cmpsb
lods
arpl
movsb
mov
test
push
sub
sbb
xor
jg
mov
jp
mov
jae
xchg
ret
adc
movl
cmc
cmp
adc
out
xor
or
daa
icebp
test
sbb
sbb
divb
jl
lcall
xor
incl
fcmovnb
xchg
jns
sti
sbb
and
dec
enter
test
mov
shlb
pushl
push
ret
bound
mov
ret
cmc
mov
xor
jae
sti
inc
mov
or
add
sub
lods
into
mov
cmp
jge
dec
or
push
xchg
mov
int3
xchg
fdiv
repnz
inc
pushl
cld
push
pushf
cmpsb
out
daa
rcl
ljmp
cmp
jns
fstl
cwtl
sbb
sub
scas
loopne
push
inc
mov
stos
lcall
pop
movsl
sub
cmp
jg
movb
xor
ret
mov
inc
frstor
cmp
cmp
add
aas
je
es
nop
shrb
mov
fdiv
inc
sub
test
push
mov
enter
addb
mov
es
dec
sbb
and
test
das
fidivrl
lret
aam
cltd
and
mov
sar
jg
pop
add
ljmp
inc
sbb
das
xor
loop
pop
push
dec
pusha
out
ljmp
cmp
aad
orb
pop
mov
xchg
jmp
jmp
cmp
les
inc
movsl
rorb
out
xchg
inc
pop
loop
sbb
xor
and
fidivs
test
aaa
pop
cmp
add
cmpsl
dec
cmovo
loopne
mov
cli
dec
mov
out
jg
push
jg
sarl
and
incl
inc
outsl
scas
cwtl
xchg
fs
mov
cmp
or
icebp
out
movsb
sbb
les
mov
lcall
arpl
adc
cli
insb
mov
stos
pop
imul
jmp
mov
fdivr
pusha
mov
cmp
rcrb
inc
adc
sub
push
mov
ja
loopne
sub
push
inc
cmpsb
and
inc
lock
xor
or
sub
inc
xchg
cmpsl
inc
pop
cmp
test
mov
or
out
cli
das
js
or
cld
mov
mov
push
std
push
cli
packssdw
icebp
in
out
or
movsb
jne
in
mov
push
ljmp
fsubrp
pop
scas
and
adcb
mov
sub
adc
popa
jns
std
xor
inc
or
hlt
push
push
les
add
jne
sysret
push
insl
mulb
movsb
inc
and
sub
mov
clc
pop
std
xchg
into
rorl
xor
ret
aaa
jge
sbb
ljmp
jge
pop
out
js
xchg
sub
mov
push
cli
dec
xor
pushl
std
in
icebp
sub
bound
jp
dec
inc
pop
or
sbb
pop
adc
icebp
incl
sub
lret
push
jno
sbb
cltd
xchg
insl
cmp
dec
nop
and
repnz
pusha
pop
or
decl
mov
aad
push
cmp
cmp
jbe
pop
out
push
or
decl
inc
sbb
inc
das
pop
mov
pop
jg
dec
jmp
je
inc
daa
rcrl
iret
mov
pop
lock
shlb
inc
push
fidivrl
aam
in
xor
xor
adcb
pushf
test
test
adc
dec
and
mov
test
add
mov
cmp
pop
rcrl
xchg
add
decl
pop
mov
fcoml
jo
arpl
push
mov
cltd
sbb
fadds
icebp
push
hlt
push
or
push
mov
push
out
es
imul
std
or
push
add
outsb
mov
mov
cmp
xchg
ficoml
sahf
in
inc
xchg
or
sbb
mov
xlat
inc
adc
pop
sbb
rolb
jg
pop
add
sti
and
lret
aas
inc
test
sub
xchg
mov
dec
fldl
xor
imul
push
sbb
mov
jge
mov
jnp
aas
mov
rorb
loop
pop
jg
sbb
jne
or
xchg
or
clc
insl
ret
enter
int3
pop
sub
jg
cltd
dec
mov
pop
mov
pop
les
xchg
movsl
mov
push
sbb
repz
add
stc
insb
mov
in
sub
mov
std
aas
shlb
popa
push
or
and
insb
xchg
xor
xlat
test
cmpsl
dec
ficoms
inc
clc
jb
pop
movsb
idiv
nop
mov
lods
push
adc
xorb
test
aaa
push
cmp
cmpsb
fistl
inc
mov
and
inc
scas
xor
nop
and
movl
pop
ret
fcomip
decl
outsl
sahf
mov
mov
into
shlb
dec
out
mov
xor
pop
mov
add
subb
or
sar
jmp
or
lea
xor
inc
push
mov
mov
push
incl
int
clc
andl
in
jle
rcll
push
push
decb
xchg
insb
bound
adc
sub
stos
addr16
push
push
les
push
shrl
loope
jae
mov
and
shl
xchg
les
dec
incl
in
test
outsl
mov
adc
cmp
jno
fisttps
pushf
inc
xor
pop
pop
sar
jge
mov
test
ret
or
jo
inc
imul
call
sub
mov
sbb
rcrb
aad
xchg
mov
xchg
int
cmc
loop
mov
xchg
cli
mov
mov
mov
sbb
pop
int
sub
pushf
mov
sbb
out
lret
pusha
repnz
mov
xchg
or
sbb
test
aad
enter
shl
js
sbbb
mov
std
adc
data16
das
outsl
add
mov
addr16
adc
sub
fstps
mov
or
ret
sahf
mov
out
fiaddl
mov
xchg
decb
int
repnz
lcall
inc
movsb
outsb
push
hlt
mov
sbb
pushl
or
mov
or
mov
sub
aas
xor
movq
mov
fidivrl
cmp
pop
adc
dec
addl
jb
mov
inc
xor
cmpsb
lock
jmp
cmp
adc
shlb
cmpsb
push
not
popa
lea
js
ljmp
out
pop
loope
int
jbe
enter
xlat
mov
inc
mov
xor
inc
inc
ljmp
cli
mov
push
cmc
scas
add
lock
or
xor
mov
cmc
fldcw
cltd
sbb
adc
stc
jecxz
sahf
or
jmp
mov
cmp
jmp
cmp
test
pushf
aaa
adc
incl
xchg
xor
dec
rcrb
or
mov
sub
mov
mov
inc
lahf
push
lcall
pop
or
cs
pop
aam
in
pop
out
arpl
cli
inc
lea
add
lods
js
outsl
fwait
nop
xchg
push
xchg
out
gs
rolb
inc
sarb
shrb
cld
mov
aam
push
decb
xchg
xchg
scas
inc
push
mov
loop
outsb
in
addl
in
sub
stos
push
in
sti
std
pushl
xor
mov
daa
repz
dec
add
xchg
lock
pop
fs
shlb
mov
push
ljmp
pop
sub
movl
ret
out
ror
bound
xor
and
mov
ljmp
sub
mov
jns
insl
mov
cmc
hlt
mov
xor
loop
push
and
jp
pushf
addr16
dec
cld
ja
pop
dec
xor
jbe
ds
adc
and
sub
jne
push
fisubl
in
arpl
test
cli
mov
out
out
pop
or
lcall
es
inc
xchg
scas
and
shlb
outsl
add
jg
loop
and
xchg
std
lds
xchg
jbe
adc
aaa
inc
sbb
inc
lcall
orb
ja
push
mov
mov
add
xor
dec
jle
mov
rol
jmp
fcomp
shrl
lcall
jmp
in
shlb
stos
mov
push
jo
nop
sub
addr16
int
out
clc
adc
test
xor
push
mov
cltd
adc
jmp
xchg
jp
sbb
mov
mov
cld
incl
icebp
sbb
xor
xchg
aam
jecxz
mov
pop
mov
popf
pop
inc
pop
dec
fucom
push
das
stc
adc
int
sahf
sbb
clc
es
cmc
dec
es
aam
cmp
or
mov
ljmp
push
fisttpl
out
roll
cmp
into
cltd
xchg
pop
dec
lock
mov
outsl
push
push
cmc
sbb
mov
pop
cld
fwait
mov
push
mov
mov
leave
sbb
cli
xchg
or
push
ljmp
cli
and
xchg
jl
aam
gs
lret
add
inc
or
std
add
movsb
cmc
mov
es
inc
adc
scas
lock
and
into
lret
or
hlt
mov
bound
adc
push
push
int3
xchg
push
cmp
jg
ret
adc
sub
sbb
dec
push
xchg
lods
gs
jg
popa
jl
or
sarl
mov
add
fists
stos
jbe
sahf
outsb
jmp
jns
shll
sbb
ljmp
add
mov
mov
pusha
xchg
jo
push
std
test
repnz
pop
sbb
mov
add
lret
cli
jg
popf
adc
add
pop
mov
aad
clc
lcall
sbb
fs
jg
jecxz
adc
lret
mov
adc
sub
js
loopne
mov
add
inc
aas
pop
sarb
aas
xor
xchg
in
lcall
out
shll
cmp
icebp
dec
sbb
sub
jle
incl
xchg
mov
mov
mov
adc
jg
mov
mov
pop
rolb
das
xchg
push
lcall
and
pop
and
je
fidivrl
into
add
outsl
and
div
inc
stos
push
jns
pusha
ss
pop
in
pusha
or
sbb
outsl
mov
or
xchg
push
pushf
pop
loop
idivl
add
loopne
nop
test
xor
pop
dec
cltd
cmp
loopne
nop
add
das
xor
sbb
adc
pusha
lods
into
xor
aam
jmp
test
insb
sbb
adc
lock
call
push
aad
sub
dec
insb
jb
cmp
sahf
fisttps
push
dec
out
test
xchg
sub
or
daa
std
sub
add
lods
ror
subb
into
clc
fiadds
mov
loopne
cwtl
mov
loop
mov
in
xor
jp
pop
cmc
add
mov
mov
pop
clc
jg
mov
adc
mov
fdivrp
push
dec
bound
addr16
mov
repnz
or
rorb
push
pop
das
mov
dec
sub
push
hlt
fcomps
movsl
notb
jg
push
test
add
out
nop
stos
movsl
mov
int
mov
jmp
mov
mov
jle
sbbl
inc
lock
sbb
or
outsb
test
incl
ffreep
mov
les
pop
jl
pop
fstpl
dec
mov
incl
stos
xchg
cmpsl
lret
jo
lret
lahf
mov
and
jns
loop
cmp
pop
pop
and
popa
rcrl
push
pop
mov
hlt
nop
shl
pushl
repz
mov
js
add
aaa
or
or
inc
jae
push
clc
gs
adc
ss
push
jmp
mov
inc
sbb
subb
jmp
data16
mov
movl
ljmp
test
mov
mov
inc
sbb
adc
lcall
ss
in
loopne
xchg
jl
mov
cs
adc
inc
das
ror
incl
ss
je
jge
sub
add
aam
lea
mov
jmp
push
add
ljmp
pop
shlb
cld
xlat
repz
dec
je
fcom
loope
mov
lock
aad
mov
fistps
not
scas
dec
insb
inc
rol
jmp
lret
lcall
mov
or
xchg
fcoms
out
dec
sti
push
pusha
shr
push
jns
fidivl
enter
ret
mov
pushf
sahf
js
cmpsl
fisttpll
dec
jno
nop
dec
xlat
decl
sub
in
bound
mov
add
ja
fnstcw
mov
xchg
mov
adcb
aad
inc
shl
ja
fadds
fdivrs
xor
xchg
cmp
adc
adc
lret
sahf
add
xchg
call
cmp
sbb
cmpsb
mov
push
cmp
pushf
aaa
mov
push
fcomip
lcall
in
stc
mov
push
or
pop
cmp
mov
in
push
lods
pop
out
mov
fcmove
jmp
rcr
pop
clc
or
xor
aad
icebp
bound
scas
add
jo
push
sub
mov
lods
out
pop
cmp
sbb
fistpll
repz
jnp
inc
gs
aaa
rcr
pusha
pop
mov
out
mov
mov
incl
sub
or
movsl
sbb
and
insb
paddsb
mov
out
js
jp
cmp
xor
lea
aad
leave
push
sahf
fsqrt
scas
test
xchg
sbb
in
lcall
mov
scas
and
mov
dec
notb
pop
cmc
push
arpl
add
call
push
dec
orl
lcall
pushf
insb
sbb
rclb
data16
mov
push
fs
cmp
test
das
xor
cmp
sbb
or
xor
adc
push
or
mov
adc
push
mov
fwait
xchg
mov
sub
pushf
inc
cmp
mov
sbbb
inc
lods
hlt
sub
shll
les
mov
jo
aam
shll
mov
adc
sub
je
push
dec
call
xchg
faddl
xor
mov
jnp
push
out
sarl
test
pushf
pop
and
mov
pop
add
int3
arpl
mov
push
stc
loopnew
adc
cmp
out
cmp
fdivr
aaa
cld
lahf
dec
add
push
nop
cli
lret
cld
mov
xor
repz
divb
fadds
cmp
mov
jo
mov
jnp
sub
dec
fcoml
cmpsl
dec
scas
mov
mov
adc
adc
jno
out
cli
aaa
adc
test
push
xchg
into
pop
push
pop
mov
jbe
insb
dec
rclb
test
icebp
adc
inc
pop
daa
jg
mov
inc
fmulp
scas
jg
hlt
add
rcrl
std
stos
outsl
cs
adc
sub
or
int
in
cwtl
or
fbstp
fimuls
add
inc
incl
clc
cmc
pop
sar
orb
mov
sub
push
loopne
pop
xor
mov
pop
mov
decl
arpl
enter
cli
xor
into
pop
insl
xchg
rorl
cmp
lods
in
mov
pop
lret
sbb
inc
fnclex
adc
push
dec
xor
das
mov
cmp
cmc
orl
xor
lods
adc
or
shrl
mov
jnp
fwait
sbb
rcr
and
pop
shlb
xchg
mov
mov
je
adc
mov
aaa
into
test
push
mov
fstps
jg
push
mov
xor
lea
mov
xchg
pop
jnp
out
lret
aam
call
loope
movsb
inc
out
out
stc
sbb
mov
lmsw
cwtl
and
cmp
or
mov
pop
cmpsl
jne
rcll
fstl
mov
in
mov
adc
incb
arpl
inc
xor
xchg
into
push
push
push
pushl
es
sbb
push
mov
cmp
ljmp
rorb
pop
pop
xlat
scas
sbb
mov
ds
test
in
filds
into
add
movsb
cmc
cwtl
fdiv
sbb
fcomip
test
aas
jp
pop
in
pushl
iret
pop
gs
loop
pop
sbb
incl
adc
jg
pop
mov
test
je
cmp
hlt
push
fistpll
call
into
outsb
push
xor
fsts
les
clc
or
nop
add
fs
xchg
or
push
ret
insb
std
rorl
mov
cld
into
je
add
sbb
xor
incl
cwtl
push
mov
sbb
fnsave
rol
mov
outsl
popa
push
push
ret
dec
or
xchg
orl
pop
jge
decl
or
sub
mov
add
xchg
xchg
mov
cmp
sub
into
lcall
push
add
inc
cmc
inc
frstpm(287
adc
push
inc
add
fisubrl
mov
sub
or
pop
mov
gs
pop
jle
clc
rol
sbb
movsl
popa
sbb
in
mov
mov
arpl
xchg
push
icebp
lcall
loope
sbb
sub
xchg
int
lock
sub
popa
xor
lock
mov
push
clc
sbb
cltd
push
dec
repz
dec
xor
stos
lds
dec
mov
push
cld
incl
mov
mov
rcrb
xor
mov
mov
or
mov
repnz
push
ljmp
mov
mov
loopne
jecxz
arpl
inc
cmp
push
std
dec
mov
mov
push
sbb
jo
mov
lock
lcall
pusha
adc
int3
push
jl
dec
xor
test
stc
sar
xor
inc
mov
hlt
mov
pop
mov
arpl
sub
xchg
cmc
das
cli
int3
in
shlb
pop
data16
ficompl
mov
or
sbb
add
jle
test
test
adc
int3
pop
mov
xchg
outsl
call
mov
mov
icebp
call
pop
mov
jmp
jmp
imul
mov
fsub
fisubs
xchg
les
inc
ljmp
sbb
adc
sub
dec
mov
rorl
decl
add
sub
sub
outsl
xchg
cmpsl
lods
movsb
mov
mov
and
adc
push
jmp
aad
jno
bound
xchg
lods
pop
pop
icebp
enter
mov
add
dec
or
add
mov
mov
inc
scas
pushf
push
xchg
clc
or
in
jns
mov
adc
loop
movsl
sub
ret
jmp
push
mov
lea
adc
jb
test
inc
mov
xchg
fdivrl
enter
lahf
fldcw
cmpsl
or
inc
nop
fldcw
clc
mov
icebp
mov
sti
les
mov
push
js
adc
adc
push
mov
push
add
push
fstpt
lods
mov
js
js
xor
and
mov
and
pusha
mov
fstpt
push
in
test
repz
hlt
push
aaa
ljmp
decb
sarl
push
sbb
jmp
jge
sbb
dec
iret
pop
or
sbb
clc
cmp
scas
push
insb
pop
ret
int3
or
sub
ffreep
mov
xchg
stos
push
pop
test
cmp
bound
inc
pop
cli
push
add
jge
push
jmp
leave
lods
sbb
sbb
decl
pop
xlat
outsb
mov
lcall
in
and
push
mov
inc
out
fistl
xchg
add
out
and
and
xor
fisttps
bound
add
fwait
inc
mov
cmp
fdivs
fwait
stos
xor
add
call
push
test
inc
pop
popf
xchg
cs
pop
mov
xchg
repz
adc
dec
in
inc
mov
bound
cmpsl
scas
push
jne
add
mov
push
fs
je
add
icebp
cmp
pusha
cmpsl
dec
cld
mov
aam
cli
aas
rclb
and
pop
sub
and
fldenv
jmp
into
xchg
leave
cltd
xor
adc
mov
push
sub
call
jecxz
xor
sbb
repnz
jb
jg
mov
xchg
test
sbb
call
mov
scas
jo
adc
les
pop
push
inc
test
xchg
sbb
call
lret
pop
mulb
mov
cmp
xchg
dec
lcall
loop
mov
fstpl
cli
incl
adc
movsb
adc
push
es
shll
sub
cmc
pushl
sub
mov
out
mov
xchg
test
pop
mov
test
add
lcall
pop
dec
pusha
int3
xchg
lcall
and
sub
or
dec
dec
inc
mov
aam
add
push
sub
stos
popa
enter
call
cmp
ds
and
and
xor
sahf
jg
adc
jne
out
aas
xchg
pop
hlt
add
sub
xchg
xor
das
or
das
add
decl
add
aam
add
sahf
ret
mov
mov
jecxz
js
push
in
adc
jne
icebp
sbb
lcall
lock
arpl
fcomip
call
inc
cmp
aam
pop
insl
scas
add
popa
add
divl
adc
icebp
mov
std
clc
and
ljmp
mov
and
mov
xor
xor
push
out
lds
lods
insb
pusha
add
mov
lcall
and
inc
add
iret
inc
fs
or
sahf
lods
xchg
and
scas
jmp
nop
aad
arpl
mov
ja
xor
dec
xor
dec
pusha
gs
lock
cmp
cmp
xchg
dec
lock
out
lret
cltd
mov
sub
jno
mov
cmp
test
int
inc
in
mov
les
decb
push
cmp
sar
in
ret
adc
mov
push
in
mov
scas
xor
jmp
lcall
xchg
jb
dec
jmp
sarl
cwtl
push
fisubs
add
pusha
loopne
add
test
ds
ja
cli
cmp
shl
das
filds
and
orl
scas
add
xchg
incl
cli
scas
scas
inc
insb
mov
sub
fwait
sub
push
es
out
pop
lock
sub
fdivp
lahf
mov
in
arpl
inc
jo
push
pop
xchg
jno
in
popl
pop
lods
jl
mov
xor
mov
andl
cmpsl
dec
loope
jns
mov
pop
sub
insb
xchg
loop
aaa
sub
fwait
negb
cmp
je
mov
mov
test
mov
negl
jge
clc
ret
mov
mov
adcl
insl
jb
js,pn
aas
enter
rolb
sub
adc
or
cmp
mov
or
icebp
mov
shlb
adc
cli
pop
sub
bound
sbb
adc
cmp
add
push
mov
xchg
sbb
dec
cmpsl
scas
push
fildll
call
ljmp
and
lcall
sbb
jl
jmp
pushf
decl
enter
xchg
push
xchg
out
xor
mov
cli
or
iret
fbld
adc
rcrl
cmp
mov
pop
or
jle
and
dec
aam
push
adc
jne
fsubs
dec
enter
lret
inc
pop
add
popa
mov
or
lods
push
pop
inc
incb
fistl
fisttps
lret
out
and
adc
mov
adcb
cs
out
fxch
sbb
frstor
mov
into
dec
nop
popf
jo
repz
rorl
call
nop
mov
sub
jle
adc
adc
es
cmpsb
mov
cld
inc
data16
adc
or
push
jmp
pusha
adc
push
repz
mov
pushf
push
lods
xor
fdivrl
add
stos
int3
add
js
xor
nop
push
mov
pop
cld
std
add
out
mov
sbb
call
xchg
push
cmc
lds
nop
adc
fucomp
cwtl
mov
adc
shlb
fwait
cltd
dec
leave
push
push
and
xlat
iret
cld
cmp
cmpb
and
pop
or
rcll
add
cmp
and
movsl
cli
popf
mov
inc
cld
sub
lods
jmp
fwait
xor
push
ret
cmpsb
cmp
dec
xor
int
and
pushl
pop
add
imul
jns
xor
xor
sub
roll
arpl
sub
stos
jns
hlt
jo
jge
lret
outsl
in
decl
test
divb
loopne
inc
ljmp
push
cmc
mov
cmpsb
xor
sarb
stos
inc
cltd
adc
cltd
or
lock
add
xor
jl
lret
ljmp
sub
in
push
idiv
inc
mulps
and
int3
enter
push
es
or
sahf
cmp
cli
popa
or
xchg
pushl
cld
cs
mov
call
jne
mov
inc
jno
adc
sbb
daa
push
lcall
imul
mov
pusha
int3
xor
fs
push
sar
shll
pop
loopne
cs
fdivr
jg
ror
popl
inc
xchg
addr16
dec
gs
leave
sub
jle
xchg
in
out
mov
inc
jp
push
mov
adc
sbb
xor
call
mov
les
rcl
jg
or
or
stos
or
push
shlb
imulb
xor
lahf
and
pop
aad
lods
add
sub
jp
cmp
loopne
ljmp
xchg
enter
repz
pop
cmp
mov
inc
out
pop
push
movsb
test
int
hlt
scas
shrl
adcl
inc
jo
fucomip
xchg
xor
cs
or
insl
pcmpgtb
push
and
xchg
idivb
pop
leave
sahf
bnd
and
push
jg
xchg
insb
js
ja
add
jae
add
scas
push
cld
push
aam
pushl
negb
and
mov
inc
inc
add
cmp
mov
dec
aam
out
and
psllq
cmp
pop
lock
or
sbb
sub
add
icebp
and
fsubrs
stos
pop
push
mov
repz
dec
daa
shrb
push
pop
sub
pushl
loopne
push
jp
in
outsl
fisubl
jge
push
jno
sbb
andb
mov
cltd
mov
inc
loop
cmp
stos
mov
pop
js
mov
inc
pop
mov
push
add
and
ret
aad
hlt
lret
fisubrs
mov
xchg
jl
adc
adc
add
mov
and
fs
mov
shrb
leave
inc
fmull
push
xor
mov
sbb
pop
ss
shll
fdiv
in
mov
js
jecxz
cmp
push
jns
adc
cli
inc
xchg
cli
mov
or
adc
mov
decl
ret
out
add
add
cli
lods
lods
scas
inc
mov
mov
inc
das
jmp
sub
fsts
pop
push
jle
pop
sub
cmpsb
cmp
mov
sbb
fsubrl
fidivrs
dec
shlb
sbb
movsb
pop
ljmp
xor
lods
mov
jno
pushf
dec
data16
sub
cmp
xchg
mov
and
rcl
xchg
adc
test
cld
inc
xor
jl
cwtl
inc
xor
jecxz
mov
jge
ss
jg
shll
push
add
es
or
call
push
addb
xchg
xchg
pusha
and
xchg
lds
add
inc
mov
jle
mull
outsb
xchg
mov
push
das
aam
lods
loopne
sub
lds
leave
cmp
jbe
das
xchg
test
jge
popa
daa
lock
cltd
pop
push
adc
pop
mov
mov
or
aas
jmp
in
mov
sti
pop
lock
sub
test
push
fwait
push
xchg
inc
jp
ss
mov
outsl
cli
mov
out
mov
js
test
test
std
dec
enter
incl
sahf
stos
mov
xor
shrl
sti
push
rcrl
stos
in
mov
push
flds
ljmp
mov
mov
mov
sbb
inc
add
popa
inc
clc
dec
sub
ret
inc
daa
mov
mov
add
test
cmpsl
sbb
mov
cld
insl
jg
cmp
std
mov
icebp
mov
inc
dec
ljmp
aad
int
jge
rolb
pop
js
or
push
jns
enter
mov
and
mov
andl
push
push
mov
lea
ds
lock
mov
mov
ljmp
jle
lock
clc
mov
js
int3
dec
mov
sbb
and
call
repnz
add
movsb
dec
js
pop
ds
sbb
sbb
into
pop
addr16
or
sub
xor
out
mov
xor
shll
test
jae
scas
pop
js
push
cmp
loop
jo
rcrb
decl
lock
pop
scas
out
add
aam
fimull
les
push
lret
adc
ljmp
es
outsl
jae
mov
pop
movsl
int3
push
pushf
out
mov
call
das
jo
xchg
inc
pop
negb
cli
jmp
mov
leave
jl
ficomps
jecxz
xchg
popa
stos
fdivr
or
pop
add
ja
add
sbb
pop
pushf
add
cmc
cmp
push
inc
push
ss
mov
jg
popa
mov
mov
mov
xor
pop
cmp
clc
jg
repz
hlt
mov
xor
pop
clc
out
je
cmpb
js
test
mov
dec
push
fscale
dec
ret
adcl
cmpsl
leave
call
pop
rcrb
push
mov
xor
cmp
cmp
adc
incl
les
icebp
dec
dec
sub
leave
push
movsb
add
daa
decl
je
mov
jno
adc
dec
pop
push
inc
jbe
loopne
loop
popf
cmp
jo
jne
inc
cltd
and
mov
insl
ljmp
shrl
shrl
sbbb
cmp
movsl
jnp
jecxz
scas
subb
mov
xchg
or
jns
decl
in
inc
cmp
movsl
insl
lret
inc
pop
je
clc
sub
aaa
loopne
sbb
xor
inc
sbb
push
ret
xlat
jmp
lds
test
imul
add
dec
scas
add
outsb
movsb
inc
cmp
adc
xchg
mov
in
push
push
add
pop
insb
mov
mov
fsubl
lcall
in
mov
jmp
push
push
test
mov
mov
jl
sbb
stos
mov
in
adc
mov
add
aam
das
movsb
dec
push
ficoml
test
fcoms
movsb
jbe
outsl
outsl
pop
xorb
bound
cltd
cltd
or
dec
jo
stos
fnstenv
leave
jp
pop
jp
cmpsb
mov
inc
clc
rcrb
sbb
cmp
icebp
ljmp
sarb
jnp
ds
xchg
call
xor
dec
push
fnsave
push
adcl
decl
push
mov
jne
pop
jb
mov
dec
jo
push
jmp
sahf
lcall
pop
test
mov
in
pop
mov
push
add
ja
clc
fisubs
loopne
imul
imul
das
rorl
push
mov
fs
in
sbb
icebp
sbb
xchg
inc
jns
sub
stos
pop
and
aam
or
in
aas
in
or
xchg
cmovle
xor
jg
xchg
and
enter
inc
sbb
adc
xchg
ljmp
adc
imul
call
jl
popf
pop
lret
cmp
mov
lock
fmulp
cltd
xor
cli
jmp
call
fisubrl
popf
fnstsw
mov
pushf
out
fidivrs
je
push
int
mov
add
fistpll
mov
push
int3
jle
fs
ret
adc
mov
fstpt
shl
insb
sbb
sar
pushl
xor
shl
mov
jp
mov
pop
cld
out
mov
add
bound
lret
sbb
mov
push
js
ljmp
push
adc
fisubl
aad
stos
cs
je
xor
jbe
into
pop
sub
mov
inc
pop
xchg
cmp
mov
mov
mov
mov
lods
and
inc
cmp
cmp
jle
rorb
jg
es
inc
xchg
push
pop
fwait
xchg
mov
inc
cmp
xchg
jg
push
push
push
jbe
mov
mov
mov
xchg
mov
mov
sahf
inc
out
repz
movsl
in
shll
adc
lock
push
lock
sub
clc
roll
or
out
out
mov
int3
imull
outsb
in
fnstcw
and
xlat
test
js
add
cmpsl
aas
xchg
sub
scas
shl
jle
fstl
mov
sub
iret
adc
mov
adc
xchg
cld
pop
lcall
jg
ljmp
push
pop
idivl
fistpll
and
repnz
xchg
mov
cmpsl
testl
rol
add
dec
insb
scas
mov
and
ljmp
fsubrs
ret
imul
stos
sub
ret
int
popf
repz
icebp
daa
shl
idivb
insb
jo
outsb
pop
add
fstl
jo
xchg
nop
in
lock
addr16
mov
ss
and
in
lret
out
movsb
sub
incl
insl
jge
jne
mov
jnp
in
xchg
sub
call
sarl
pop
dec
lcall
sub
pop
icebp
fs
fsubl
and
cmpl
inc
sub
jp
js
cmpsb
stc
imul
out
icebp
negl
cmc
or
arpl
out
mov
add
pushl
push
pop
and
pop
add
mov
in
pop
pop
out
outsb
cmpsl
sub
fdivrs
sbb
in
pop
adc
sub
push
cmpsb
and
push
jl
ret
add
ljmp
sbb
test
outsb
mov
xchg
scas
jl
inc
jg
dec
insb
inc
clc
adc
cwtl
repz
clc
xchg
xchg
decl
xchg
mov
aam
fisttps
popf
xor
dec
lods
cmpsl
fwait
xchg
aad
scas
insb
outsb
adc
dec
pop
fcomip
pop
jo
aam
xchg
sub
or
sti
outsb
icebp
adc
es
jg
add
xlat
aaa
push
pop
les
or
mov
imul
mov
movsl
push
jb
or
mov
dec
jge
inc
es
or
adc
and
add
rcl
mov
mov
ret
adc
add
jle
out
add
sub
inc
das
leave
adc
or
das
sub
jl
dec
sub
and
jns
xor
movsb
sub
lock
lcall
push
out
cwtl
loop
cmpsl
loope
scas
jns
xor
pop
or
rolb
adc
pop
rorl
xchg
xchg
fwait
or
loopne
stos
dec
iret
lds
decl
pop
xor
jns
fnstsw
jmp
dec
xor
mov
mov
jo
test
pushl
push
adc
imul
pop
fcmovb
jo
fucomi
test
scas
xor
add
add
fcomip
out
les
lods
enter
adc
adc
lock
cld
std
push
scas
mov
and
or
lock
ret
fistpll
or
inc
fistl
and
loop
cmp
mov
push
loop
push
push
sbb
out
lret
ret
or
cli
adc
cmpsl
mov
adc
cmc
outsl
xchg
add
fnsave
sbb
pop
push
jae
ljmp
add
lret
jo
leave
inc
rcrb
lods
mov
stos
mov
aam
shr
addr16
ljmp
jp
call
inc
not
mov
xchg
loope
fcmove
sub
jno
sub
push
repnz
push
xchg
mov
enter
push
inc
ficomps
inc
aam
lds
nop
mov
or
jge
nop
mov
addl
xlat
fxch
adc
pop
inc
popf
add
das
scas
addb
daa
sbb
push
stos
ret
stc
fadds
das
ljmp
clc
jg
mov
hlt
es
adc
sbb
outsb
std
add
lcall
repz
test
sbb
test
sub
jle
sbb
mov
clc
mov
scas
out
inc
rcrl
hlt
lret
add
fsub
pop
das
mov
cmp
xchg
movsl
call
mov
icebp
rolb
push
jmp
cmp
fisttps
gs
incl
push
ss
xchg
inc
sbb
sub
adc
filds
xor
pop
and
dec
in
adc
xlat
mov
dec
insl
sbb
mov
ss
fdivr
and
add
xchg
add
dec
xchg
loopne
or
xlat
pop
cltd
pop
and
ja
jmp
out
lcall
inc
rorb
mov
or
sbb
clc
fsts
fdivp
call
jae
addr16
cli
xchg
ja
mov
sub
arpl
imul
lea
movsl
das
and
jnp
xor
jo
lods
xchg
sbb
cli
ja
pop
js
sarl
push
test
pop
inc
icebp
incl
jne
inc
test
pop
jecxz
rol
mov
ss
lock
push
sar
decl
jns
int
pop
stos
sub
pop
clc
xchg
pop
push
cltd
ror
pop
inc
popf
call
aad
dec
mov
jle
sbb
jbe
mov
dec
mov
cld
mov
mov
cld
scas
cli
mov
push
int
shlb
lea
push
std
decl
cmpsb
push
aad
dec
cwtl
sbb
mov
mov
incl
dec
xor
mov
test
jns
add
popf
rorb
push
hlt
or
shrb
rolb
inc
pushl
decl
orb
cltd
xchg
pop
pop
dec
add
push
cmpl
add
or
es
ljmp
dec
jb
jno
test
push
cmp
add
jg
mov
lock
xor
push
push
cmp
es
popf
mov
and
or
cs
mov
jmp
fildl
idivb
fbld
xchg
mov
cli
les
ss
xlat
stos
in
xchg
jne
dec
sub
icebp
mov
adc
movsb
hlt
adc
push
in
addr16
or
pop
pop
incl
loopne
push
clc
fdiv
lods
jbe
hlt
fnstenv
xchg
or
jno
incl
ljmp
dec
loop
mov
mov
imul
inc
rol
or
push
scas
jge
scas
fisubl
mov
ret
nop
enter
pop
fs
mov
es
cmpsb
sahf
icebp
imul
lret
xchg
out
sahf
iret
mov
cmp
inc
jg
inc
pop
ljmp
test
sbb
pop
enter
dec
icebp
imul
cmovae
inc
or
push
ficoml
jg
adc
push
sub
lods
lahf
and
rcll
decl
cwtl
xchg
dec
push
inc
push
sahf
sub
push
mov
pop
das
mov
jecxz
in
jae
cltd
in
xchg
adc
in
adcb
lret
rclb
aad
inc
jb
xchg
pop
nop
push
xor
cmc
es
insl
push
and
pop
cld
outsl
push
in
xor
xor
cmp
lea
decl
outsl
lods
inc
xchg
pop
icebp
dec
add
or
adcb
cltd
out
mov
dec
pop
jno
mov
and
fs
mov
xor
test
inc
repz
lds
in
jl
jecxz
insl
add
ljmp
mov
test
inc
hlt
xor
xchg
push
movb
dec
mov
unpcklps
cld
inc
nop
popa
or
das
xchg
ss
jb
pop
push
push
lret
mov
call
push
inc
push
xchg
cwtl
sbb
adc
icebp
les
push
mov
jbe
mov
into
nop
cmpsl
leave
jo
inc
daa
bound
sbb
push
aas
or
xchg
pop
scas
xchg
jbe
and
or
sbb
ljmp
repz
bnd
adc
sahf
xchg
mov
das
sbb
roll
sti
popa
sub
pusha
lret
je
push
cmp
mov
mov
in
add
push
pop
pushf
fadd
fisubrs
and
inc
iret
test
jae
enter
add
sub
decl
inc
mov
outsb
cmpsl
cmp
in
xor
in
jg
add
xor
push
jns
push
xchg
fisttps
nop
inc
xlat
jp
dec
movsb
cld
or
xlat
xlat
pop
hlt
push
popl
xor
mov
sbb
mov
adc
pop
clc
filds
mov
sbb
inc
push
mov
mov
rclb
shrb
xchg
xor
sahf
and
push
and
inc
xlat
incb
into
push
or
mov
aaa
std
inc
inc
xlat
daa
push
lcall
sbbl
and
adc
pop
sub
call
cmp
test
mov
data16
jecxz,pn
pop
xchg
sub
fistpll
fs
cmp
mov
out
imul
rolb
cmc
repnz
add
or
out
mov
mov
push
dec
pop
inc
sub
cmp
shlb
mov
fcmovu
mov
cld
aas
es
push
push
cwtl
sahf
mov
sbb
pop
arpl
adc
in
ficoms
mov
out
cmpsl
clc
sub
idivb
adc
inc
pop
call
das
mov
cwtl
negl
push
fwait
xlat
shll
pusha
and
lds
or
fdivr
xchg
sarl
inc
fldenv
push
cltd
mov
mov
fs
jnp
xchg
mov
dec
cwtl
xor
push
adc
js
jl
iret
addb
test
pop
xchg
aam
adcb
dec
es
adc
ret
and
or
std
adc
add
jns
sbb
pusha
int3
xlat
test
inc
fsubrs
push
cmp
dec
add
xchg
push
rorb
sbb
jnp
jae
pop
sarl
push
push
inc
repnz
jg
out
lock
hlt
lea
ljmp
xor
mov
xor
shlb
xor
add
jp
pushl
lret
shrb
sbb
jns
mov
fwait
or
das
cli
lock
mov
push
cli
pop
test
cli
ljmp
test
sbb
jns
xchg
stc
lods
out
test
call
mov
rolb
xchg
dec
xchg
hlt
dec
and
dec
add
loop
test
xchg
pop
icebp
mov
mov
add
mov
in
dec
fadd
dec
xor
pop
into
lret
inc
mov
mov
clc
sbb
loopne
test
mov
and
cli
in
dec
xchg
xchg
jmp
inc
stos
xchg
aaa
rol
rorb
mov
add
mov
mov
fs
negl
incl
jnp
lret
call
outsb
xchg
jle
ss
and
add
pop
cld
mov
test
xlat
clc
fldenv
jno
lock
push
add
jl
addr16
mov
push
jmp
sbb
cmp
cld
ret
sub
mov
dec
mov
mov
inc
mov
insb
mov
mov
xor
and
push
or
jnp
mov
incl
push
loopne
fsubs
fldl
or
adc
inc
mov
xchg
cmp
insl
jl
dec
repz
out
jnp
fcomip
out
mov
movsb
dec
ljmp
mov
cwtl
add
lock
mov
fisubl
dec
pop
mov
js
xchg
adc
fildll
in
sbb
push
jecxz
lcall
inc
ljmp
je
fcmovnu
cmp
orl
cwtl
fs
sub
dec
scas
mov
mov
cli
lcall
mov
sbb
dec
test
rorl
adc
aas
inc
jle
jae
xor
xchg
sbb
test
xchg
nop
dec
inc
hlt
or
jae
mov
in
test
pop
testl
inc
aas
mov
stos
adc
leave
push
aad
pop
inc
mov
and
mov
jl
insl
std
decl
or
test
repz
jns
add
dec
mov
das
fisubs
scas
sbb
inc
pop
lods
cltd
sbb
adc
stos
aaa
push
pop
sub
call
ret
push
lahf
push
xchg
fimuls
adc
ljmp
xchg
aaa
mov
jmp
mov
mov
ljmp
jecxz
and
mov
or
andb
das
cli
add
test
into
pushf
dec
xchg
inc
jnp
movsl
sbb
roll
xchg
ja
movsb
out
lcall
cmp
jle
rol
sahf
fidivrl
test
bound
ret
enter
lcall
pop
mov
fidivl
jmp
inc
sbb
pushl
testl
and
fwait
sahf
inc
jmp
sahf
xchg
cmp
incb
push
test
notl
les
jb
adc
and
je
dec
hlt
sbb
push
test
sub
sar
jge
jo
fwait
insb
into
push
jge
jno
pop
inc
aaa
loop
add
leave
mov
mov
inc
int3
fs
sub
lcall
scas
inc
pusha
xchg
ret
test
jl
mov
pop
loope,pn
pop
cmpsb
enter
cmp
in
sub
jge
sbb
cmp
fisttpll
xchg
sub
mov
add
mov
loop
push
and
rcrb
enter
pop
mov
lret
mov
pop
sbb
xchg
fisubrs
repnz
cmc
pop
enter
inc
cmpxchg
jecxz
test
pusha
enter
fbstp
jns
or
sahf
jns
lods
dec
and
dec
cld
dec
xor
push
push
mov
pop
cmc
ja
fcomip
dec
sti
add
lea
std
aaa
push
lock
push
inc
mov
inc
cld
sub
and
sbb
test
iret
mov
push
int3
aad
mov
cmp
pop
fdivr
in
inc
lcall
pop
sub
aad
sub
or
push
clc
pop
cmp
dec
pushf
dec
ljmp
add
ja
leave
fs
pop
push
test
mov
rolb
enter
movsl
mov
stos
aaa
hlt
add
push
jle
add
imul
ret
push
xchg
inc
nop
pusha
push
cwtl
or
xchg
out
jne
scas
popf
fsubs
push
ret
xor
div
fisttpl
in
mov
sar
ljmp
xchg
dec
pop
js
push
adc
int3
clc
and
sbb
test
cmp
cli
ljmp
push
push
popf
int
scas
add
insb
mov
pusha
or
sar
xchg
xchg
into
ja
mov
mov
push
out
xchg
mov
scas
add
mov
movsl
sbb
mov
add
movsl
adc
je
pop
add
scas
mov
xchg
jnp
call
xor
ljmp
pop
das
stos
cmpl
fwait
dec
jecxz
pop
dec
pusha
dec
or
and
or
lods
out
jl
mov
xorb
mov
cmpsb
and
decl
xlat
dec
insb
inc
push
push
push
mov
xlat
cwtl
push
cs
fisubs
pop
push
pop
jno
xor
dec
fimull
popa
jecxz
mov
pop
cmpsb
jns
add
fwait
sar
xchg
push
pushf
mov
mov
in
imul
cld
pushl
and
cmp
fs
addr16
pop
pop
xchg
add
mov
jbe
es
js
sti
lcall
add
push
jb
and
inc
cwtl
mov
push
stos
sub
pop
cltd
int3
cmp
out
and
and
das
test
cmp
sbb
xchg
test
orl
lret
data16
dec
fs
ljmp
push
xor
fstl
hlt
div
cs
fnstenv
aas
xlat
lret
dec
nop
aad
cmpsb
outsl
adc
cmpb
pop
jmp
push
gs
xchg
push
sbb
jle
pop
data16
rcrb
rcl
outsb
sub
fs
and
jg
jb
mov
jmp
jmp
cmpl
adc
sbb
jg
enter
cmpsb
push
sbb
mov
lds
insb
cmpsb
cwtl
add
pushf
aas
push
outsl
pop
xchg
ljmp
cli
cmp
push
xor
fs
lcall
and
mov
popa
adc
lar
dec
push
add
decl
jno
push
pusha
dec
ss
sub
xchg
lods
jecxz
mov
pushf
mov
pushf
jge
mov
rcl
push
sbb
decl
jp
int
add
std
fstpt
bnd
decl
bound
or
popf
jns
adc
xchg
mov
jne
in
add
pusha
std
sbb
dec
shlb
inc
xchg
ja
test
cmp
dec
shll
xchg
xor
pop
mov
or
ljmp
arpl
out
imul
das
pop
std
ja
cli
jmp
test
add
push
in
scas
fwait
push
inc
aam
mov
cs
mov
mov
cld
mov
aas
arpl
jl
std
call
mov
addl
sti
ret
aad
es
jmp
mov
push
arpl
cmp
lcall
rcrl
adc
shl
shrl
stos
xchg
jmp
jg
inc
and
addr16
test
testb
cmp
rcrb
leave
fsubrl
add
sbb
int3
xorb
arpl
scas
cltd
cmp
pop
stos
lret
daa
cmp
push
std
lods
cmpsb
into
push
aam
inc
insl
sahf
xchg
in
test
stos
push
cld
cld
jnp
es
adc
mov
scas
jmp
sbb
sub
sbb
cli
push
dec
cmp
adc
jo
xchg
jbe
push
lret
jno
sub
imul
lcall
sub
dec
inc
sbb
pop
push
popa
ljmp
or
pop
xchg
scas
cli
mov
scas
add
shrb
sbb
out
rorb
inc
subb
fistpll
xchg
stc
jp
mov
mov
dec
cmp
fwait
lods
in
stos
inc
subb
dec
loope
sub
pushf
adc
gs
jmp
xchg
jo
gs
cmc
and
pop
mov
jle
cmp
divl
out
xchg
nop
rol
rclb
pop
xor
mov
sbb
mov
jge
fidivs
mov
test
mov
sar
stos
inc
je
xor
xchg
cmp
or
ja
stos
xor
sbbb
clc
jbe
pop
cmp
sbb
je
push
mov
or
icebp
outsl
xor
sbb
pop
mov
adc
decl
push
outsl
insl
pop
aad
push
sub
andb
cli
pop
add
mov
pop
loope
scas
adc
push
dec
pop
cmp
call
movsb
cmp
fildl
dec
orl
pusha
ret
std
jmp
sahf
sahf
mov
push
hlt
add
inc
out
xlat
cmp
mov
cmpsl
jb
lret
inc
adc
adc
into
pop
jecxz
jmp
ret
xchg
push
and
in
rcll
scas
ds
mov
mov
mov
or
incb
push
mov
cmc
xchg
jle
push
sbb
insb
pop
repz
decl
pushf
pop
test
pusha
stc
mov
lcall
scas
cli
lahf
and
aam
jecxz
loopne
ljmp
pop
cmp
in
test
js
pushf
shl
clc
mov
mov
movsb
pusha
xor
or
cmpsb
cli
inc
or
mov
fsubl
cli
jno
add
mov
hlt
js
fistpll
aam
imul
out
sub
enter
lock
ret
xchg
sahf
insl
mov
cmp
into
or
sbb
neg
sbb
clc
mov
xlat
fmul
and
push
pop
out
test
inc
mov
fst
cmp
adc
incl
pop
lods
inc
inc
jg
push
xor
sub
sti
push
xlat
xlat
xchg
adc
mov
fwait
push
adc
shr
xor
sub
fs
jbe
push
scas
clc
icebp
stos
and
mov
or
test
inc
aad
outsl
sbb
jp
jae
cmp
push
pop
bound
andb
decl
add
mov
imul
mov
sbb
push
scas
imul
mov
ficomps
mov
xchg
lcall
movsb
push
incl
imul
pop
addr16
sti
enter
in
xor
movsb
test
movsb
in
mov
dec
outsb
mov
cmp
xchg
in
jg
ss
lods
cmp
stos
add
inc
mov
mov
or
lods
jns
mov
cld
mov
jp
sar
mov
les
idivl
add
test
pop
push
mov
sbb
imul
adc
pop
or
aas
test
loop
or
fwait
add
pop
mov
in
mov
jg
in
mov
lods
clc
sub
stos
sub
xor
loopne
addb
inc
idiv
imul
push
fadd
and
xchg
subb
mov
cmpsl
lds
fbld
or
lock
hlt
and
push
pop
je
add
ds
mov
call
addr16
push
add
mov
inc
cmp
sub
fisttps
push
and
and
imul
aam
inc
sub
add
test
test
mov
xor
fwait
shlb
jb
aam
mov
xlat
adc
sti
sub
cmp
sti
div
sbb
adc
loop
clc
xchg
xchg
test
jno
sar
outsl
test
fs
inc
loop
inc
and
inc
jl
and
ljmp
xor
ljmp
shl
xchg
xor
mov
mov
stos
shrb
pop
inc
movsb
jp
hlt
cmp
std
mov
int
sti
cld
ljmp
push
or
pop
xor
lods
xchg
mov
xor
or
pusha
ljmp
push
popf
jg
les
and
dec
jb
das
push
ljmp
test
pop
inc
jno
adc
jnp
cli
rolb
jge
jle
fwait
sub
cwtl
scas
adc
mov
decl
loope
pop
dec
stos
mov
testl
dec
adc
jno
mov
pop
ljmp
lds
fnstenv
add
ret
ss
pop
test
pop
pop
mov
lahf
push
hlt
mov
lret
mov
repz
loopne
cmp
nop
push
mov
daa
je
or
cmpsb
sbb
ja
sub
lock
cmp
stos
movsb
cmp
call
data16
ljmp
clc
or
inc
sub
mov
xchg
and
add
pop
mov
call
test
cwtl
or
add
aas
adc
mov
rcrl
adc
cmp
shl
bound
dec
inc
subb
xor
mov
orl
stos
pop
sub
or
sti
inc
sbb
leave
orl
out
jo
cld
fildll
mov
test
pop
repnz
adc
mov
rclb
mov
lods
mov
pop
clc
lcall
adc
mov
aaa
mov
dec
loope
cmpb
dec
mov
dec
or
pop
jg
push
add
push
test
mov
or
ret
inc
dec
aad
mov
push
fs
and
outsb
lods
or
pushf
icebp
adc
jns
insb
or
push
in
leave
inc
sub
adc
fmull
cmp
cld
and
xor
mov
pop
stos
or
rcr
test
shlb
xor
push
or
int3
jecxz
stos
sahf
repnz
cli
push
xor
testb
mov
and
aaa
xchg
ret
mov
push
inc
mov
jae
xchg
jecxz
jns
fwait
outsb
adc
std
icebp
cmp
test
xchg
popf
adc
inc
aaa
lcall
jmp
jmp
xchg
jo
sbb
lret
jle
repz
xor
fldt
push
pop
mov
jne
mov
ss
mov
decl
and
mov
push
movsl
cmpsl
add
das
mov
cld
icebp
xchg
loope
jne
and
jl
pop
cmc
pushl
sub
jge
pusha
jno
push
add
jb
test
negb
jmp
pop
ja
popa
cmp
imul
xor
cmp
jg
cld
inc
test
sub
nop
xor
insb
sub
cmp
ja
or
sbb
jb
cmpsl
aas
movsb
sub
xor
nopl
clc
dec
inc
mov
punpcklbw
pop
push
add
call
inc
popa
sbb
adc
xchg
push
jno
gs
imul
pop
rcll
jo
shll
stos
mov
inc
mov
test
stc
in
out
sahf
aaa
inc
sub
pop
pop
les
xchg
scas
inc
cmp
push
push
jae
and
inc
imul
adc
push
sbb
loopne
repz
ss
aam
or
sub
pop
inc
loop
div
jecxz
inc
fcmovne
sub
sarl
sar
sub
aaa
loopne
cltd
enter
aam
cli
mov
shll
mov
addr16
inc
sbb
adc
cmp
push
int3
lea
cmc
call
outsl
loop
inc
stc
xchg
or
xchg
or
mov
cs
lahf
pop
jmp
sub
jg
sub
pushl
stos
jge
or
inc
lret
divb
xchg
or
test
push
mov
jp
mov
cmp
dec
nop
mov
add
sub
out
add
cmp
out
lods
sbb
mov
push
imul
jle
push
into
pop
cmp
mov
xor
xor
mov
or
aaa
cld
out
push
pusha
lea
into
add
out
lahf
stc
into
or
test
ljmp
xchg
add
test
hlt
fs
xchg
jle
int3
mov
decl
xlat
xor
imul
inc
bound
movsb
dec
mov
mov
insb
inc
pop
imul
pop
in
mov
decl
ret
cmp
rorb
imul
repz
idivb
call
scas
out
inc
or
xor
ja
stos
cmc
adc
subl
cwtl
test
sub
hlt
cmpsl
mov
sbb
inc
push
cltd
mov
or
mov
outsb
add
clc
mov
dec
mov
push
add
push
stos
bound
xor
popf
out
sub
or
mov
outsl
clc
fld
pop
in
sarb
shlb
dec
sub
and
xchg
lods
test
cmp
sub
push
jns
inc
cld
mov
sbb
xor
shrl
jg
mov
jns
dec
test
sbb
leave
pop
cld
mov
adcb
lock
push
jnp
jo
dec
push
mov
div
scas
xchg
mov
enter
adc
sbb
ljmp
adc
stc
je
pop
xchg
mov
xor
xchg
stos
adc
std
pusha
xchg
lds
jno
loop
jg
fldcw
cltd
in
or
inc
ficoml
fisubs
ljmp
faddl
pop
test
jmp
mov
push
dec
inc
xchg
pop
xor
xor
jb
jmp
cli
gs
sub
mov
scas
movsl
sar
cmpsb
outsb
adc
hlt
into
add
ds
xchg
in
sub
and
fwait
jbe
lret
jle
lahf
test
outsb
pop
testl
or
int
out
iret
test
aaa
call
mov
jp
scas
sub
push
dec
xor
fadd
dec
in
inc
loopne
lods
cmp
mov
xchg
hlt
inc
sbb
cli
decl
in
jne
roll
cli
lret
jg
xor
gs
inc
add
mov
lods
int
xchg
mov
cmpsb
mov
xchg
js
not
pop
mov
sub
call
xchg
xchg
jae
mov
xchg
lods
mulb
mov
and
cld
divb
outsl
insb
fsubr
sub
movsb
pop
fimuls
pop
or
pusha
pop
jmp
aad
clc
out
push
and
sbb
adc
and
mov
movsl
hlt
mov
jp
ja
scas
add
jbe
clc
jg
adc
rcl
sbb
call
inc
jge
cs
mov
jbe
and
jo
fistpll
out
and
divl
mov
fs
mov
pushl
std
mov
and
lahf
roll
lret
cli
dec
mov
jp
in
xchg
push
es
sbb
hlt
and
cmp
in
pop
dec
repz
out
pop
xchg
mov
sbb
sar
adc
sar
sub
sbb
repnz
in
mov
jo
cld
cmp
sti
popf
das
mov
sbb
stc
lret
rclb
fbld
repz
ljmp
cli
aaa
cmp
jecxz
sub
test
mov
mov
insl
inc
test
inc
ljmp
cmpsb
mov
add
inc
jno
add
sub
int
sbb
add
clc
pop
popa
inc
imul
jo
dec
pop
or
pushl
mov
jg
daa
out
lret
lcall
add
test
decl
add
lahf
cmp
imul
clc
pushl
push
inc
lds
cmp
pushf
sub
js
frstor
push
cwtl
lahf
pop
xor
xchg
cmc
jmp
xor
or
in
or
inc
or
scas
out
lret
call
ja
loop
mov
out
add
ljmp
jmp
fdivrp
xor
rclb
dec
dec
incl
mov
lret
cltd
dec
mov
std
push
push
jns
dec
xchg
inc
mov
lret
cli
inc
inc
mov
loope
cwtl
jp
and
popf
xchg
add
jnp
xor
jmp
xchg
push
adc
and
out
xchg
push
cmpsl
xchg
sub
mov
xor
sub
ret
xor
sub
orb
xor
cmp
mov
mov
jo
push
pop
clc
aas
call
in
pop
adcl
add
fisubl
jl
or
push
cmpsb
scas
iret
or
lock
jp
clc
daa
push
push
xchg
pusha
loope
daa
mov
ljmp
test
mov
inc
jo
sbb
cmc
mov
jmp
inc
test
jmp
sbb
xor
mov
cmp
ljmp
mull
incl
dec
movsb
mov
stc
push
ffreep
out
mov
xchg
jmp
loop
mov
cmp
and
add
pop
xchg
fidivs
dec
ret
dec
cmp
aaa
mov
les
mov
dec
jb
mov
add
push
adc
inc
push
test
bound
int3
push
sbb
out
pop
inc
jle
xchg
pop
push
subb
fcomip
scas
int3
add
jnp,pt
xor
rolb
lock
mov
subb
push
or
sub
cld
jg
add
mov
dec
lods
cmp
std
sahf
std
lods
das
nop
je
scas
mov
xor
jmp
jg
or
and
fldcw
mov
jge
fbld
mov
mov
xchg
stos
and
pop
notl
dec
inc
test
or
loop
out
icebp
cmc
fldenv
cld
pop
and
xchg
add
push
faddl
jecxz
jl
mov
mov
push
sub
jne
mov
sub
and
mov
push
mov
mov
incb
mov
push
mov
cmp
dec
jo
or
jns
repz
cltd
push
inc
repnz
scas
or
add
out
stos
or
es
add
mov
pop
or
xchg
mov
add
cli
jmp
jne
cld
or
rorb
enter
nop
dec
sbb
pushl
insb
xor
pop
sub
mov
iret
aad
out
xchg
mov
lods
nop
ja
sub
sub
mov
push
inc
int3
out
pop
xor
fwait
xchg
js
fbld
adc
and
push
fidivrl
mulb
push
int
das
stos
adc
pop
rclb
fsubs
dec
cmp
test
add
dec
and
pop
das
xchg
scas
xchg
lods
out
dec
pop
cmc
lahf
sbb
adc
push
jb
mov
dec
pusha
mov
jg
jbe
pop
and
sub
dec
jge
jae
test
xor
movsl
inc
loopne
cli
rcrl
and
mov
ror
cli
mov
pop
xor
xor
popa
ljmp
dec
imul
aaa
frstor
test
dec
xchg
sahf
addr16
jle
es
pushl
test
sub
js
jg
mov
lret
pop
pop
or
shl
rolb
mov
fldlg2
xor
data16
shrl
push
bnd
add
dec
aaa
lret
movsl
xlat
jo
jge
sub
out
sbb
and
andb
test
fimull
xor
and
inc
mov
lcall
push
cmp
rcr
fcomip
cs
add
inc
int3
dec
cmp
imul
mov
dec
mov
lcall
adc
imul
cmpb
pop
sbb
idivb
ss
hlt
aas
sbb
fadds
es
out
jae
xchg
xorb
cmp
inc
add
out
mov
bound
dec
and
pop
or
jmp
imul
and
fisubrl
movsb
mul
inc
iret
jns
jbe
adc
or
jl
fnstenv
mov
daa
pop
sahf
ss
adc
mov
aaa
and
xchg
mov
push
add
sub
sar
push
aaa
sahf
mov
pop
and
outsl
jp
pop
xor
pop
test
push
scas
mov
push
aam
push
pushf
sub
add
out
js
mov
pop
outsb
pop
xchg
sbb
jg
mov
add
inc
mov
inc
push
inc
aad
and
dec
adc
sub
mov
pop
mov
fs
rclb
test
xorb
mov
pop
shl
xor
in
pop
mov
incl
lret
xchg
pop
and
xchg
lock
leave
cld
repz
bound
and
jae
mov
sbb
out
xor
dec
pop
pop
cli
sbb
xchg
lds
xchg
ljmp
pop
mov
or
add
dec
fildl
in
jg
addb
outsl
and
push
add
xchg
pop
xor
shlb
ja
inc
inc
incb
mov
jg
mov
push
push
push
cmpsl
mov
hlt
and
test
mov
mov
popa
imul
adc
push
mov
jg
scas
repz
lahf
aad
xchg
inc
std
dec
jl
inc
sti
mov
dec
push
lock
mov
adc
push
pop
dec
rdmsr
sbb
ljmp
mov
adc
sarl
mov
cli
gs
icebp
loopne
lret
xchg
data16
mov
pop
out
out
inc
pop
addl
push
rclb
or
dec
jnp
rolb
add
hlt
jg
jo
xchg
rcl
shll
clc
mov
jae
in
and
adc
pop
ret
pop
ret
adc
mov
or
pop
dec
ljmp
repnz
push
or
lods
int3
jae
ret
jge
xchg
incb
or
cmp
arpl
push
incl
test
add
push
imul
movsb
mov
or
mov
mov
mov
jmp
pop
mov
adc
inc
push
mov
or
js
das
cmp
test
adc
xorb
mov
in
imul
test
insl
mov
out
cmpsb
sbb
popa
mov
jmp
pop
dec
js
in
xchg
jbe
in
mov
jmp
rcrb
cltd
lods
cmp
cli
dec
ret
sub
adc
dec
dec
xchg
push
lret
adc
cltd
clc
outsl
stos
lods
adc
and
std
mov
or
lcall
mov
add
mov
leave
jne
lea
movsb
push
pop
outsl
mov
shld
movsl
and
jle
pop
hlt
jg
cltd
mov
arpl
adc
xor
lahf
fsqrt
mov
ja
mov
add
lds
hlt
movsl
std
les
fcoml
inc
xchg
dec
cmc
pop
push
mov
sub
dec
loope
jo
xchg
jmp
sub
pop
xlat
loopne
pop
and
fdivs
pushf
aas
cmp
or
push
push
push
xor
xchg
scas
mov
jl
scas
sarb
jo
lods
mov
ja
shl
ja
or
mov
pop
xchg
fcomip
scas
sbb
mov
arpl
sub
push
jbe
sub
mov
push
pop
fnsave
ficoms
push
icebp
inc
jmp
mov
pop
mov
adc
jl
in
cs
ds
out
xor
dec
jecxz
sbb
mov
pop
cld
add
jl
xchg
or
mov
std
mov
inc
dec
aad
movsl
cli
ret
fdivrl
psadbw
dec
push
jae
lahf
enter
test
fcomps
scas
aam
test
lods
adcl
dec
sbb
dec
jne
xor
mov
mov
jg
and
add
arpl
pop
jnp
pushl
xlat
scas
ror
gs
inc
ret
sub
pop
mov
or
add
sub
sub
je
cmpsb
pop
aas
dec
pop
test
mov
sub
fwait
pop
jno
dec
mov
adcl
jmp
sub
push
inc
jg
mov
push
mov
das
cmpsl
fiadds
ficomps
pop
repz
scas
dec
lods
mov
in
cmpsb
outsb
mov
inc
adc
sbb
loopne
dec
mov
xchg
pop
add
orl
imul
je
sbb
fdivs
xor
dec
adc
ljmp
rcrl
loope
mov
push
shlb
push
cld
sahf
and
pop
into
incl
or
sub
out
fwait
mov
push
add
or
mov
insb
sub
sbb
loope
loope
mov
std
mov
or
adc
into
mov
mov
dec
outsl
and
mov
inc
imul
popf
fistps
add
add
fbld
and
push
ljmp
out
and
xor
stc
cmp
imul
popa
loopne
dec
out
outsb
inc
loopne
xchg
outsb
mov
jl
jle
and
insb
push
cltd
pop
lret
or
adcl
adc
nop
cs
sub
mov
mov
mov
ret
call
xor
addr16
adc
push
cld
cmp
out
shr
les
js
sub
das
dec
mov
cmp
gs
cmp
cmp
mov
jb
add
inc
clc
repnz
xchg
push
pushf
and
pop
cld
cmp
mov
jb
push
stos
clc
fbld
mov
fnsave
shlb
sbb
pop
inc
lahf
lods
inc
jmp
adc
sbb
mov
xor
pop
inc
clc
add
dec
imul
iret
sbb
adc
mov
ret
in
sbb
andl
xor
sbb
cmpsl
push
push
jl,pn
mov
mov
fcoml
xchg
into
sub
les
scas
lret
ja
cmc
test
call
sbb
in
daa
mov
mov
sbb
cwtl
or
dec
inc
lods
mov
mov
pop
or
fwait
in
cmp
ljmp
inc
cmpsb
rcr
lcall
push
call
out
inc
mov
jns
aam
mov
repnz
sbb
subl
mov
bound
std
lret
mov
adc
jp
mov
imul
cmpsl
push
data16
add
call
ret
out
sbb
ret
add
cmc
sub
enter
mov
call
ja
jae
inc
jl
sbb
xor
mov
ja
mov
pop
mov
inc
rcr
idiv
decb
push
mov
ret
popa
shll
ss
inc
and
stos
lds
insl
pop
testb
push
fcmovbe
sbb
std
sub
fcompl
cli
dec
pop
push
stos
jb
lcall
jb
xor
push
or
jns
mov
xchg
mov
pushf
subb
das
sbb
insb
xor
lea
pop
adc
mov
jns
mov
fs
add
jg
pop
popa
xor
mov
sti
shrb
mov
cwtl
mov
or
cltd
clc
jmp
xchg
add
jmp
or
scas
fcomps
and
pop
jbe
mov
cmpsb
sti
in
mov
xchg
test
inc
or
arpl
mov
push
gs
arpl
add
xchg
loope
addr16
rcll
adc
fdivrp
push
sub
push
shll
sub
jns
pop
xor
jo
out
jbe
mov
test
fistl
mov
ss
shrl
push
mov
int3
scas
repz
pop
pop
es
hlt
scas
sbb
lock
in
loope
add
dec
test
lea
dec
cmp
sub
ljmp
not
inc
fwait
xchg
popf
outsb
mov
adcb
sub
mov
mov
sbb
out
mov
jg
dec
xchg
frstor
dec
mov
pushf
sub
mov
sbb
decl
lret
in
cmp
fadds
add
jns
sub
aaa
ljmp
dec
shlb
rcll
cmp
icebp
addb
push
jge
in
enter
dec
xchg
add
xchg
stos
aam
out
sub
xor
jle
fmuls
inc
jg
dec
pusha
cmp
scas
aam
cmc
pusha
mov
xchg
rorb
mov
sbb
add
shl
scas
pop
rorl
push
mov
mov
ret
mov
cwtl
data16
xchg
and
mov
testl
add
xchg
xor
sbb
ds
mov
cmc
inc
push
jns
sub
cld
pushf
jge
jns
out
sbb
and
mov
jns
mov
push
jnp
mov
rclb
inc
jg
mov
jle
xchg
loopne
xchg
or
ret
pop
sub
cs
mov
mov
jg
cs
in
fwait
mov
sbb
and
mov
jg
xlat
push
jo
jne
test
mov
dec
pop
mov
mov
inc
or
cltd
adc
cld
dec
sub
mov
mov
cmp
fnstcw
mov
adc
into
aam
inc
jp
adc
lcall
imul
dec
sub
sbbl
add
jg
dec
sbb
mov
bound
in
cwtl
outsb
nop
mov
mov
insl
das
adc
cld
sbb
lods
or
pop
xor
lds
es
sub
out
add
lret
push
js
adc
mov
dec
andl
pop
aaa
mov
pop
inc
push
bound
mov
adc
enter
pop
ljmp
push
xchg
jns
dec
call
inc
cld
stos
jle
cmc
in
mov
xchg
xchg
and
sub
push
cld
jl
cld
ret
cwtl
scas
add
sub
icebp
xlat
jb
sub
ljmp
fsts
lods
mov
scas
notb
adc
dec
pop
xchg
xor
add
lcall
adc
and
push
push
sbb
test
mov
or
sbb
repz
test
gs
lcall
add
sbb
iret
enter
leave
inc
lret
out
imul
aad
lret
xor
sub
clc
pushl
or
mov
cwtl
test
pop
popa
cmpsl
stc
push
pushf
cld
or
dec
adc
cwtl
stos
push
pop
mov
jo
loop
dec
jge
inc
mov
inc
gs
cmpsb
aas
stc
push
xor
dec
rcll
add
add
mov
add
sbb
call
sbb
fnsave
shr
icebp
scas
cli
fistpll
mov
fcmovu
mov
jg
hlt
das
lcall
cmpsl
pop
add
test
pusha
pop
loopne
aam
jle
inc
cltd
xor
sbb
dec
into
push
add
cmc
cmp
xchg
xor
cmpsl
xor
in
movsb
mov
dec
imul
mov
mov
das
inc
sbb
or
pop
mov
loope
jnp
xchg
pop
mov
or
rorl
movsb
adc
mov
fimull
lock
aaa
xchg
sti
mov
int
mov
aam
fs
mov
push
negl
test
pop
jo
and
and
js
in
fistl
xchg
dec
dec
lret
pop
lods
pop
jo
pusha
mov
push
push
sbb
xchg
lock
xchg
dec
std
mov
enter
inc
aas
inc
xor
pop
shl
and
pop
lcall
pop
enter
pushl
loopne
enter
rol
cmc
add
push
jg
out
pop
mov
and
ljmp
fmul
test
jle
mov
pop
adc
mov
pop
mov
and
cmp
pop
xor
adc
cltd
fs
sbb
aad
or
cltd
add
ljmp
loopne
es
adc
jge
mov
jb
scas
cmpsb
in
adc
pop
inc
inc
dec
push
outsb
das
xchg
test
or
les
jle
cmp
mov
adc
aas
push
cwtl
xor
jo
jl
inc
adc
lods
repnz
jg
adc
out
pop
or
fistpll
pop
fstpl
cli
ds
jbe
xor
nop
sub
js
jg
inc
jb
sti
sarb
jp
adc
mov
mov
aaa
cli
push
or
jmp
sub
inc
adc
adc
loopne
pusha
mov
fidivl
jmp
xorl
imul
test
jge
aad
cli
xchg
ret
push
cmp
repnz
ficompl
outsl
push
pop
adc
dec
icebp
cltd
lds
scas
fdivrs
cmp
push
in
jbe
test
sahf
cli
cmp
sar
pop
adc
and
fsubl
js
popa
sbb
pushf
xchg
int
mov
pop
icebp
mov
das
cli
outsl
fucomip
sbb
lods
aad
icebp
dec
inc
xchg
outsb
jbe
push
test
mov
mov
pop
loope
in
scas
test
in
mov
fldt
fs
push
xchg
sarb
gs
repz
aaa
fs
mov
fchs
dec
mov
push
dec
ljmp
popf
lock
cmp
jmp
std
incl
sbb
push
sub
ds
pop
xchg
xchg
dec
stc
lods
jbe
cltd
xor
loopne
jge
lods
pop
aad
sub
mov
pushf
sub
xchg
cmp
add
inc
psubsw
dec
outsl
mov
mov
push
icebp
fnstsw
call
push
dec
pop
ret
jo
jp
dec
sar
repz
dec
pop
ja
hlt
push
pushl
lret
int
mov
clc
adc
push
push
xchg
mov
fdiv
push
aas
sub
adc
mov
ja
test
push
sub
inc
outsb
out
and
enter
out
lret
and
pop
pop
ja
xchg
mov
in
pop
lods
add
notl
or
push
mov
sub
in
mov
or
rcrb
mov
mov
mov
and
je
loopne
mov
out
dec
jle
mov
jl
aaa
mov
and
xchg
sar
adc
xchg
sub
mov
and
mov
or
push
ds
xchg
dec
orl
dec
pop
sarb
and
sar
add
rolb
cwtl
push
mov
xchg
ret
outsl
add
cmp
aaa
sub
push
clc
jg
and
dec
and
filds
mov
fwait
lcall
jbe
pop
inc
xor
cmpsl
ss
lock
outsl
adc
inc
mov
mov
clc
scas
mov
call
outsb
js
sub
lds
cmp
sbb
xor
in
pop
clc
mov
jne
pop
mov
push
pop
ss
adc
nop
lock
jl
inc
or
mov
std
outsl
sub
out
loopne
push
mov
rol
hlt
adc
aaa
into
orl
push
adc
mov
push
and
je
cwtl
inc
das
test
xchg
sbb
cmpsb
pop
mov
or
sbb
fwait
push
in
out
stc
jno
stos
and
insl
adc
fildll
or
xchg
mov
mov
jbe
push
pop
pop
fs
xchg
mov
or
inc
fwait
cmp
sbb
dec
lods
mov
pop
mov
filds
and
test
ja
shrl
test
jno
mov
aaa
scas
mov
lods
aam
and
lcall
and
mov
lea
inc
or
lock
in
stos
call
mov
incb
jge
mov
sbb
ret
daa
or
nop
adc
dec
test
nop
mov
test
sub
sub
push
cmp
mov
inc
add
aaa
xchg
mov
fiadds
ljmp
mov
jnp
dec
nop
gs
fcomp
fistpll
out
cmp
ret
adc
push
add
scas
std
sahf
jl
mov
cmpsb
push
sub
xchg
ja
adc
lods
adc
and
aas
in
add
jmp
cmp
dec
rorl
inc
lock
mov
rorb
ret
push
rcr
call
hlt
mov
je
ficoms
ret
das
jmp
das
xor
add
mov
in
aaa
add
mov
pop
dec
inc
shrl
dec
mov
or
xchg
xchg
inc
adc
icebp
scas
cli
call
push
and
ss
push
push
mov
ret
testl
mov
insl
add
xchg
sbb
or
mov
jno
loop
js
cld
sub
pop
or
inc
mov
cmp
sarb
pop
sub
mov
lret
adc
ljmp
in
cld
aas
adcb
and
test
pop
mov
cmp
out
pop
mov
adc
push
insb
and
scas
add
mov
pop
in
inc
or
dec
mov
push
xchg
and
mov
mov
adc
xchg
mov
mov
xlat
mov
push
inc
xchg
shrb
pushl
mov
pop
sbbb
pop
and
mov
mov
cmp
jno
pop
dec
cld
call
adc
cld
jb
pop
push
lret
jno
jo
loop
sbb
sub
sub
add
lock
nop
sub
fdivr
cmp
lock
mov
push
cld
divl
clc
test
xchg
xor
jno
test
adc
mov
xor
and
mov
imul
stos
jbe
push
in
out
mov
push
dec
and
incl
cmp
jg
rcrl
pop
sub
mov
js
outsl
loopne
adc
hlt
incl
pop
mov
in
and
adc
pop
add
xor
pop
loope
push
stos
test
ljmp
lret
int3
outsb
xor
stc
or
add
test
lcall
mov
cmp
scas
clc
ljmp
test
cli
jb
push
sbbl
mov
repnz
fldt
sub
sub
mov
xchg
scas
cs
pop
pop
stos
inc
xor
rcll
aad
cld
scas
call
enter
jbe
dec
add
push
into
enter
pushl
push
inc
outsl
xor
test
daa
imul
popf
incb
dec
mov
xchg
ljmp
pop
mov
push
lods
call
pop
push
add
xchg
push
or
or
or
dec
inc
sbbl
inc
mov
call
xchg
xchg
and
mov
add
push
int3
subl
out
or
add
fists
push
movsb
dec
ja
adc
fnsave
jle
add
and
ss
test
lods
fwait
out
inc
iret
and
sbb
or
add
jns
das
cwtl
pop
addr16
cltd
fstl
add
and
lcall
adc
cltd
jl
mov
jecxz
lret
ljmp
fs
cwtd
sub
xchg
rcrl
mov
xchg
xchg
cmp
leave
popf
adc
mov
jno
push
shlb
in
jne
cli
add
cmp
adc
push
lock
cld
push
test
lea
push
jnp
cli
xchg
jl
mov
and
xor
jecxz
outsb
testb
into
sub
fcoms
dec
out
jp
pushl
enter
pop
cmp
add
icebp
xchg
dec
in
movsb
add
mov
jecxz
ljmp
mov
dec
sbb
repz
and
clc
into
ja
pop
aad
repnz
popl
aad
adc
std
mov
adc
jg
inc
or
enter
hlt
stos
fdivrp
sbb
and
inc
sbb
ljmp
mov
adc
jo
test
xchg
mov
pop
pop
sbb
pop
push
dec
adc
push
cmpl
sbb
int3
xchg
mov
loop
xor
xor
sbb
scas
cmpsb
jp
cmp
adc
call
mov
adc
xchg
movsl
mov
mov
fwait
cmpsb
jle
fidivrl
cmp
std
mov
rcl
or
push
mov
shlb
pop
lcall
cwtl
in
cli
rcll
leave
pop
outsb
idiv
fimull
lods
pop
dec
jno
je
xchg
add
pushl
mov
push
jae
addr16
roll
add
dec
mov
in
pop
add
ss
insb
jb
divb
es
das
insb
sbb
mov
bound
sub
outsl
xor
mov
jbe
or
and
mov
ljmp
sub
dec
xchg
mov
shrb
dec
add
insb
cld
push
fstpl
mov
stos
and
cld
jne
roll
push
scas
or
mov
adc
lret
xchg
lret
jns
mov
inc
adc
lcall
push
push
xchg
test
leave
scas
es
stc
push
test
rol
ficoml
sbbb
mov
push
std
jg
fdivr
out
fimull
inc
xor
adc
dec
rcrb
pop
mov
incl
adc
ds
shll
xlat
jl
add
fldenv
push
fcmovnb
mull
inc
jnp
dec
int3
push
sub
and
jle
mov
jmp
xchg
or
sbb
call
lcall
out
xchg
and
gs
xchg
add
push
push
int
mov
jg
mov
push
add
decl
and
jle
jno
lret
cmpsb
xchg
pop
mov
pop
push
loop
pop
mov
loope
mov
xor
enter
ret
lods
imul
aas
xchg
aaa
out
rcll
pop
mov
and
lods
nop
addb
jnp
add
sub
dec
in
or
push
dec
sub
mov
mov
lods
icebp
ret
pop
pusha
xor
cmpsb
xorb
pusha
stos
aam
sub
cmc
mov
xchg
sbb
xchg
jle
fbstp
hlt
loop
mov
cmpb
xor
test
push
call
aam
xor
or
bound
xor
addl
in
jns
and
ja
dec
test
xchg
mov
lods
incl
mov
out
dec
inc
mov
inc
xchg
popa
adcl
incl
or
call
mov
jg
std
xor
cmp
popl
cld
lods
push
pop
loopne
aam
outsl
js
mov
dec
jb
mov
inc
scas
pop
sub
inc
clc
fadds
jmp
pop
dec
mov
test
js
inc
mov
movsb
mov
xor
subps
ss
sub
dec
insl
sub
lcall
xor
mov
push
mov
dec
dec
pusha
in
xchg
and
cwtl
test
push
mov
lods
xchg
test
jl
mov
mov
ljmp
ljmp
xor
cmp
push
add
mov
xor
leave
push
call
fst
sub
call
lret
and
rorb
arpl
xchg
and
cmp
mov
inc
dec
lret
sub
pop
cli
push
icebp
das
adc
sub
push
jp
add
add
ss
adc
in
ret
pop
adc
xor
mov
mov
scas
push
adc
sbb
xlat
cmc
in
jg
mov
shll
fsubs
popa
insb
inc
add
push
adcl
sbb
or
adc
loop
std
pop
cld
clc
sbb
fidivl
and
aaa
fwait
sbb
push
cmpl
jmp
jle
mov
jecxz
jmp
test
int
cmp
mov
or
add
iret
adc
test
push
mov
push
out
ds
mov
add
cmp
inc
or
adc
out
mov
dec
loop
cmp
lret
xor
lds
mov
mov
repz
cmc
push
fsubrl
stos
push
or
xchg
inc
loope
inc
and
fwait
and
fistpl
les
adcb
pusha
lea
popa
jmp
mov
mov
mov
mov
aas
xor
shrb
inc
fidivl
jg
iret
mov
in
adc
jo
inc
jae
movsb
xor
ss
int3
jmp
xchg
jbe
cmc
jmp
xorb
imull
cmpb
lds
cmp
sub
into
loopne
cmpsl
or
into
pop
cmp
pop
push
movsl
pop
add
jnp
iret
scas
and
test
ret
in
cli
xchg
mov
shrl
pop
adc
add
outsl
cli
mov
scas
push
movsl
cmp
pop
lods
int
add
mov
cwtl
pusha
pop
mov
mov
jo
or
loop
bound
fnstsw
cmp
mov
inc
loope
sub
clc
jg
mov
jno
inc
push
cltd
mov
fdivs
or
inc
mov
push
or
aas
repnz
mov
mov
xor
cmp
add
lcall
mov
mov
das
jge
mov
sub
mov
out
out
pop
insl
and
lock
js
cli
aad
add
mov
aam
cmp
cmp
ret
adc
pop
lcall
andl
std
jbe
mov
push
test
into
addr16
cmpsb
and
test
add
hlt
jo
lods
xor
lcall
xchg
aaa
loope
cltd
sbb
jb
shlb
inc
mov
das
js
insb
lock
push
or
lock
jb
xchg
pop
stos
mov
sub
mov
sub
or
cmp
pop
and
push
lahf
push
jne
inc
jecxz
cli
sub
mov
mov
sti
sub
rorb
pusha
loop
sahf
jl
push
add
bound
mov
pop
pop
sahf
mov
scas
xor
cld
js
xor
xchg
lods
add
je
or
sar
pop
jo
push
push
xor
push
out
dec
test
xor
mov
add
ret
push
sub
fcoms
xor
ud2
ss
mov
and
cmp
mov
cmp
movsl
sub
int3
daa
jo
xor
dec
adc
loopne
sbb
faddl
fmull
enter
sbb
scas
sub
aas
mov
nop
gs
test
fwait
cmp
out
mov
adc
jmp
cwtl
push
mov
cmp
mov
pushf
cmc
std
and
bnd
loopne
mov
sub
inc
push
pop
push
sub
cmc
xchg
adcb
arpl
push
push
test
addl
or
and
mov
insb
mov
je
fmull
lock
incb
pop
je
dec
push
into
xor
jle
push
xor
cs
cmp
addl
neg
dec
jno
mov
pop
lret
xchg
iret
dec
les
mov
inc
insb
cmpb
cmp
pop
cltd
dec
loop
jb
mov
js,pn
adc
and
test
jle
aaa
sbb
push
mov
jecxz
leave
xor
push
std
incl
popa
pop
push
push
pop
icebp
inc
lcall
dec
add
orl
aaa
add
into
mov
mov
das
enter
or
dec
pop
xchg
ljmp
mov
sub
ss
in
or
call
jl
and
fwait
ss
repnz
sub
or
cld
jbe
aam
clc
lahf
sbb
andb
sub
xor
mov
sbb
sub
call
pop
sbb
sbb
testl
outsl
shlb
dec
fs
jg
cmpsb
and
fbstp
mov
dec
or
inc
cmp
cmpsb
outsb
shr
adcl
mov
imul
xor
adc
outsl
push
jge
jbe
cmp
pop
cld
push
out
outsb
loop
outsl
inc
xchg
test
sbb
lret
cwtl
mov
js
xor
negb
cmp
in
dec
in
jae
ss
jp
adc
movsb
xchg
jae
decl
mov
inc
push
arpl
pop
mov
in
lret
outsb
fistpl
or
incl
xchg
lds
dec
decl
imul
lods
cmpsb
mov
mov
loopne
or
nop
int3
push
rorb
push
movsb
fcomps
daa
scas
test
mov
addl
fcom
nop
and
or
or
dec
mov
pop
jmp
ljmp
stc
jl
cltd
ror
add
cmp
jecxz
lahf
decb
stos
jp
hlt
cwtl
push
inc
push
cs
xchg
movsb
and
mov
popf
xor
add
pop
pop
jae
data16
or
xor
jle
mov
mov
jge
add
sub
adc
scas
mov
inc
lock
mov
cmp
fs
pusha
out
xchg
add
or
push
dec
dec
aad
pushl
jl
mov
aad
pusha
push
cmp
stc
clc
insl
and
lock
nop
into
sti
cmc
call
xchg
repnz
push
jl
decl
jg
ds
in
push
pop
imulb
inc
xor
mov
test
jae
cwtl
cmp
enter
insb
pushf
popf
bound
insl
fs
mov
testb
inc
fimuls
mov
pop
pop
mov
sub
clc
ljmp
cmpb
mov
push
jecxz
insb
loopne
lds
adc
mov
pop
jle
inc
adc
je
jns
mov
jle
pop
add
and
lea
aaa
cld
add
or
dec
jnp
xor
and
mov
mov
test
pop
xor
mov
and
imul
lcall
mov
jl
outsb
out
jns
aaa
rcll
jae
test
add
punpckldq
xorb
es
movsl
mov
sbb
fwait
fs
loop
xor
das
mov
mov
jge
dec
add
mov
sub
imul
movsl
daa
dec
add
sbb
pop
or
hlt
and
addb
pop
mov
rcrb
inc
pop
cld
addr16
fcoml
imul
out
cmpsb
xor
test
aad
push
mov
xor
xor
jnp
sar
push
js
das
andl
mov
cli
or
mov
roll
or
loop
loope
mov
movsb
push
pop
into
inc
cmp
mov
mov
xchg
mov
xchg
out
and
pop
rcl
scas
sub
inc
cmp
adc
bnd
pushl
adc
and
cmp
inc
push
fidivrs
dec
dec
data16
sub
xchg
lods
pop
nop
es
jmp
xor
pop
fiadds
or
sbb
mov
add
push
xchg
dec
pusha
lea
mov
outsb
mov
adc
iret
loopne
int3
into
scas
outsl
mov
mov
mov
and
call
insb
xchg
out
add
es
aaa
fidivrl
dec
ja
xchg
or
out
sub
sbb
lock
fistl
ds
inc
xor
fbstp
test
push
lds
xlat
jo
scas
aas
loop
mov
xchg
mov
dec
xor
mov
lods
sub
sub
adc
mov
filds
pop
out
and
adc
lock
and
or
push
ds
push
mov
pop
mov
in
push
call
inc
pop
push
and
mov
add
out
test
lret
add
cwtl
xor
ss
lock
es
pop
call
test
xchg
decb
adc
jle
cli
divl
cs
xchg
fists
cmp
lcall
stc
mov
and
xchg
sarb
cmpb
dec
or
adc
and
sbb
pop
push
xchg
insb
imul
mov
call
lods
filds
jmp
sbb
push
jg
test
fisubl
adc
cmp
xor
icebp
cwtl
push
outsb
and
jp
mov
mov
aaa
jno
xchg
clc
fcmovnu
pusha
jge
insb
pop
out
repnz
loop
push
je
test
cs
sbb
add
jg
fwait
call
push
sub
js
adc
test
jnp
rorl
xor
push
pop
hlt
call
pop
add
push
sub
and
enter
mov
inc
sbb
cwtl
jge
int3
loope
push
ss
lods
xor
push
arpl
adc
aas
xor
out
ss
mov
lahf
nop
cmpsb
call
jg
add
mov
sub
icebp
stos
add
pop
sbb
rclw
xor
loope
out
mov
and
adc
dec
xchg
dec
outsb
cmpl
or
stos
sub
mov
into
jecxz
outsl
and
hlt
gs
push
out
repnz
orb
mov
mov
jbe
lock
stos
test
pop
es
mov
add
mov
mov
dec
loope
emms
ds
out
rolb
ljmp
lcall
leave
cs
data16
xchg
xchg
push
dec
and
add
jne
call
and
outsb
imul
decb
filds
mov
inc
xor
iret
out
rorl
pop
jae
repz
shlb
bound
mov
fnsetpm(287
cmp
int
pop
inc
stos
imul
fs
icebp
out
fdivs
fistpl
mov
mov
add
movsb
lcall
sub
lods
mov
mov
hlt
xchg
push
ret
jl
popf
rolb
and
pop
lods
call
into
sub
je
lcall
lds
cmp
mov
xor
xor
dec
sti
mov
rcrl
sub
mov
ljmp
outsb
adc
lret
dec
sbb
addr16
mov
inc
sub
repnz
push
push
icebp
movsb
int3
pop
inc
inc
enter
adc
call
cltd
push
and
sub
fcmovnbe
aad
add
aad
loope
out
jb
push
loop
aas
push
inc
sub
insb
scas
int3
lods
popf
adc
xchg
inc
xchg
mov
addb
dec
sbb
adc
inc
aaa
andb
fs
roll
push
pop
loop
jno
xchg
jmp
repz
pop
out
insl
pop
mov
pop
push
stos
dec
push
jne
jne
lock
aas
mov
rcl
and
pop
add
mov
xor
rorb
sbb
stos
cltd
hlt
js
mov
orb
incl
adc
jge
adc
gs
xchg
cmpsl
lods
ret
pushl
std
pop
pop
popf
adc
cmp
movsb
fcoml
sbb
pop
fstp
sahf
idivb
add
movsl
add
sahf
sarb
cli
push
lcall
das
mov
sbb
pop
stos
add
jnp
ss
das
sahf
mov
sbb
test
cmp
sbb
outsb
mov
std
stos
xor
aas
fimull
imul
clc
mov
adc
inc
in
mov
repnz
mov
push
in
in
push
aas
inc
int
push
push
adc
jl
shlb
and
adc
jecxz
stc
fdivr
fwait
push
sahf
stos
lds
mov
pop
xchg
mov
push
js
xchg
xchg
incl
sar
ja
sbb
daa
movsb
and
inc
call
inc
xor
xlat
or
dec
jge
nop
pop
jns
xchg
cmp
orb
call
aaa
leave
push
inc
xor
cmp
fnstcw
cmpsb
xchg
pop
mov
into
aam
pop
push
lock
xor
and
pop
lcall
jb
daa
xchg
pop
cs
repz
jbe
hlt
js
push
jno
xchg
adc
rolb
aaa
mov
call
xchg
jb
dec
dec
add
mov
or
js
xchg
aad
in
aaa
mov
inc
add
pop
mov
ja
sarb
or
ss
mov
stos
pop
push
out
add
incl
test
lods
rcll
cmp
pop
lods
jmp
sbb
fstpt
inc
int3
inc
pushf
popa
cld
add
and
imul
cmp
add
inc
push
loop
mov
stos
mov
mov
dec
xchg
adc
mov
lret
cmp
fiadds
push
jo
data16
jbe
aam
loop
movsb
adc
aas
push
jecxz
and
jns
sub
mov
dec
nop
mov
dec
inc
divl
sub
adc
mov
sarl
stc
pushf
adc
or
sti
out
mov
push
add
repz
xchg
cmp
mov
cltd
jmp
shlb
ja
mov
pop
sub
xor
mov
cmc
scas
fs
sar
mov
sbb
or
cmp
add
mov
inc
jp
and
jb
sbb
sti
out
cwtl
scas
or
jmp
mov
mov
mov
or
jne
pop
fcmovb
aaa
cld
fnstenv
insb
imul
std
inc
jle
fisttps
push
in
out
adc
dec
pop
insb
push
cltd
mov
cmp
jp
adc
sbb
sar
add
cmp
cwtl
jno
imul
lock
test
clc
ror
mov
push
add
mov
stos
mov
jo
das
nop
xor
push
pop
xchg
or
push
outsb
add
mov
adc
repnz
hlt
or
pop
dec
cld
outsl
repnz
aam
mov
cmp
mov
add
pushf
mull
popa
bound
fisttps
rcrl
aas
cli
decl
incl
sub
push
in
into
outsl
ret
jl
push
adc
rol
mov
sbb
in
xor
xchg
lods
fdivrl
fimuls
rorl
cmpsb
out
jb
xor
mov
mov
stc
mov
aaa
jp
and
addl
or
and
inc
inc
out
xor
jno
pop
sbb
push
cmpsb
test
cld
dec
sar
adc
pop
push
movsb
scas
or
and
jne
add
pop
inc
call
pop
xor
inc
jmp
nop
je
dec
je
sbb
lock
cmpsb
outsl
mov
mov
imul
mov
orb
clc
ljmp
add
ljmp
add
shl
dec
ljmp
inc
pop
add
call
push
and
xor
sbb
cwtl
cmp
cs
js
adc
xchg
lods
incl
test
add
into
inc
sub
sbb
fstps
fwait
sub
cmpsb
repnz
stc
loop
cmp
incl
outsl
mov
add
cmc
sub
sbb
icebp
mov
jno
jnp
push
rol
outsb
enter
pusha
inc
add
test
in
or
shl
std
sahf
int
ja
xchg
loopne
lock
ret
fsubs
repnz
jge
ds
xchg
lcall
fistpll
or
loop
dec
lcall
or
inc
jnp
sbb
ljmp
fsubrl
or
dec
ljmp
js
add
add
xchg
pop
add
aam
xchg
mov
aas
mov
lcall
xchg
ljmp
enter
fstpl
outsb
inc
imul
pushl
insb
pop
cmp
or
les
test
loop
mov
sti
lret
notb
cmp
insl
rcr
cmp
repnz
ja
call
jo
jne,pn
push
scas
enter
add
or
fldl
xchg
xor
fsub
push
aad
mov
dec
ss
push
stos
int3
or
sahf
jp
das
adc
xchg
mov
shlb
add
std
inc
dec
pop
fsts
mov
xchg
inc
cmp
and
adc
sarl
sub
mov
outsb
push
and
sub
or
sbb
inc
adc
sbb
enter
sbb
ret
adc
push
jl
and
push
aam
mov
add
aas
rolb
and
push
mov
push
mov
mov
aam
or
push
add
mov
popa
mov
inc
cwtl
lds
adc
jae
stos
in
lods
mov
popa
pop
pop
pushf
stos
subl
in
pop
dec
loope
push
aam
cs
xchg
mov
xchg
xor
bound
mov
jnp
or
pop
adc
mov
loope
jl
lret
sbb
lock
jne
jmp
jo
repz
fidivl
clc
cld
jbe
or
mov
or
mov
mov
clc
cmp
pop
fs
lods
adc
mov
sahf
sub
xchg
dec
push
gs
adc
cs
mov
iret
mov
mov
push
and
popa
mov
fs
inc
bound
push
repnz
rorb
mov
leave
hlt
cmpsb
pop
out
movsl
loopne
sub
hlt
jnp
xorl
shrl
mov
scas
popf
pop
sub
push
dec
cltd
or
or
inc
dec
js
enter
mov
mov
out
in
test
xchg
je
inc
push
popa
jb
pop
and
mov
push
movsb
lahf
lea
cld
mov
push
loop
ss
mov
dec
and
dec
jnp
pinsrw
fs
lcall
push
xchg
lock
push
xor
cld
xchg
pop
adc
stc
jne
sbb
int3
loopne
dec
test
cmp
mov
cmp
inc
sbb
lods
ljmp
ret
std
xchg
push
push
mov
pop
aas
xchg
icebp
sbb
add
fcoml
jp
push
or
fbld
imul
mov
cmc
and
or
mov
add
movsb
cltd
cld
xchg
jb
xor
scas
add
repz
adc
xchg
fs
adc
jbe
push
mov
lcall
pop
js
popa
cwtl
adc
fisubl
inc
decl
mov
jg
jecxz
sbb
mov
ljmp
aam
mov
jle
mov
lea
call
jmp
mov
jg
inc
push
xor
in
or
lea
mov
xor
sub
stos
xor
stos
mov
ret
rclb
fs
or
fsubs
cmpsb
lock
mov
xchg
shlb
dec
jmp
scas
movsb
mov
xchg
daa
sti
inc
add
pop
mov
jne
shlb
xor
jge
clc
test
sbb
adc
mov
inc
inc
or
das
add
or
or
adc
in
push
inc
ljmp
and
mov
xchg
dec
int
pop
add
add
mov
dec
dec
sti
imul
shll
popaw
inc
and
mov
xchg
cmp
and
mov
lods
dec
add
xor
arpl
inc
xchg
mov
outsl
dec
and
mov
out
cmp
sub
shrl
sahf
in
je
into
clc
add
sahf
and
pop
sub
xchg
jbe
pop
inc
mov
push
scas
mov
fidivs
js
mov
and
push
sahf
dec
jl
add
sub
dec
lea
add
ss
scas
xor
and
xor
rclb
pop
jl
pop
js
cmp
idivb
jl
pop
or
jmp
xchg
cmp
icebp
mov
es
mov
rcll
jl
das
ds
push
cmc
fadds
sbb
orb
mov
push
imul
loop
dec
sbb
fld
and
push
jle
repnz
cmpsl
jb
ja
mov
aad
ja
lret
dec
inc
mov
pushf
into
add
je
sbb
enter
mov
enter
in
shrb
in
dec
push
push
fsubl
adc
or
fdiv
and
cmpb
out
cltd
cmc
cmc
mov
pop
pop
ja
rcrb
popa
aaa
push
out
ljmp
xchg
fs
adc
adc
mov
lods
sub
std
stos
mov
mov
les
enter
mov
add
mov
push
xchg
push
enter
lcall
xor
push
pusha
xor
and
mov
data16
ss
loopne
push
inc
hlt
and
add
sub
rol
cmp
dec
mov
mov
sti
cmp
jns
loop
mov
xchg
enter
push
pushf
jg
inc
aad
or
orb
jecxz
cmp
inc
jl
push
inc
std
sti
insl
jnp
pop
pop
fstp
mov
insb
add
mov
pop
push
ljmp
std
fsubrl
repnz
mov
jecxz
les
cmpsl
pop
xchg
mov
inc
push
add
ss
movsl
adc
pop
add
xor
pop
pop
aam
int
ljmp
cli
cmp
or
lret
mov
fistl
loope
pop
push
pop
in
dec
pop
xchg
inc
jmp
pop
sbb
cld
fcoms
push
or
lods
push
fstps
int3
push
push
ss
out
mov
or
jecxz
pop
inc
test
add
mov
clc
faddp
fsubs
cmp
push
cmp
arpl
or
pop
das
cmpsb
lock
pop
jne
jbe
lock
inc
test
hlt
jno
cld
cld
aam
hlt
in
aaa
je
xor
mov
push
cmp
dec
into
mov
push
ret
dec
mov
ret
movsl
in
seta
lcall
add
out
dec
mov
cmp
test
ljmp
pop
cli
add
pop
popa
add
pop
clc
adc
addr16
sahf
cmc
movsl
test
mov
sub
sub
pop
das
mov
movsb
imul
and
push
mov
mov
dec
xchg
mov
clc
sub
pop
adc
sarl
mov
sar
std
mov
test
daa
fsubl
sbb
popl
lahf
aam
lcall
push
fldenv
jmp
stos
add
stos
dec
fistpll
aaa
add
or
in
repnz
sbb
xor
inc
push
ret
inc
jle
insl
adc
fildll
movsl
mov
mov
cs
pop
cli
adc
push
insw
clc
or
test
mov
xlat
loopne
dec
mov
decl
add
aaa
sar
and
ret
or
pop
aaa
sub
test
and
sbb
ja
shr
movsb
fisubrs
in
jg
enter
lea
call
push
cltd
pushf
mov
sbb
cli
aaa
jne
sub
jne
and
xor
cmp
pushl
cmp
pop
scas
mov
scas
cwtl
mov
rcr
ljmp
outsl
add
imul
jne
leave
mov
loope
dec
pop
clc
or
sub
jecxz
scas
mov
jmp
pusha
pop
je
outsl
lret
incl
sarb
movsl
cmp
xchg
lcall
lock
cld
cld
je
dec
jbe
mov
popf
or
mov
mov
subb
jmp
sbb
test
add
cmc
inc
inc
out
adc
ss
cmpsb
pushf
movsb
imul
ljmp
mov
mov
out
pop
add
fcmovnbe
adc
mov
jne
jb
out
in
lods
and
mov
cmp
std
inc
rorb
cmp
add
dec
xchg
push
dec
add
dec
nopl
mov
bnd
pop
and
mov
inc
ljmp
add
int3
xorb
ret
test
mov
add
jbe
pop
stos
jno
flds
xchg
aas
mov
sbb
jo
das
cmp
mov
loopne
mov
push
or
xor
pushf
pop
mov
dec
test
dec
sbb
call
int
add
pop
ret
mov
sbbb
add
sub
and
add
push
jle
xlat
xchg
add
fimuls
jnp
dec
ret
fcomip
mov
lds
mov
dec
sbb
dec
push
in
test
cli
add
xor
mov
jle
sar
sub
sbb
in
add
lret
out
cltd
testb
xchg
aas
das
in
ret
or
dec
mov
hlt
sbb
pop
imul
jnp
or
xchg
inc
loopne
cs
adc
mov
fdiv
pop
ss
fmull
aaa
jge
les
sub
ja
fbld
stc
xor
arpl
jg
push
decb
mov
enter
and
lret
fdivs
incl
and
or
rorl
nop
cmp
test
aas
mull
mov
mov
fistpl
loopne
jb
aas
icebp
lret
inc
sbb
popa
pop
and
sub
pop
jo
jmp
jo
pushf
stos
cs
movsl
add
aad
ja
dec
mov
lods
pop
cwtl
xchg
inc
jge
push
imul
outsb
pop
jp
cmpsl
rorl
sti
adc
mov
jl
ftst
cld
es
clc
mov
push
lret
mov
push
ret
sysret
lods
mov
mov
or
imul
test
jbe
ficoms
cmpl
jo
jmp
sbb
mov
adc
stos
and
jmp
push
add
sub
fs
sbb
int3
xchg
loope
cmp
call
in
repnz
jb
aad
mov
sbb
daa
decb
insl
mov
sbbb
xchg
cmp
cld
mov
das
mov
mov
dec
xor
or
int3
cmp
pushl
int
lcall
inc
dec
dec
mov
or
add
cs
fcmovu
mov
aas
pushl
outsb
sbb
les
data16
or
pop
inc
and
sahf
imul
call
loopne
sub
ljmp
push
stos
roll
mov
fdivrp
add
sub
sub
lea
scas
nop
sbb
lds
mov
dec
jnp
xchg
pop
ja
mov
sbb
jne
cmp
or
or
inc
dec
in
mov
ss
mov
cmp
sbb
lds
fbstp
cli
call
jg
push
sub
sahf
cmp
mov
test
lods
ljmp
inc
jo
iret
jmp
inc
and
sbb
add
or
dec
pop
inc
xor
mov
push
stos
mov
mov
jne
cmp
or
cmp
and
nop
movsl
pop
push
pop
test
loop
cmp
test
andl
roll
stos
cmp
mov
cwtl
sub
pop
xchg
add
sti
fs
sub
scas
mov
mov
shlb
enter
and
push
or
ss
or
icebp
jmp
sub
lds
jno
shlb
ret
aam
fdivs
sahf
xor
mov
leave
or
pop
sbb
push
std
xchg
lret
and
and
dec
pop
push
imul
decl
adc
cltd
outsl
repnz
mov
or
fsubs
sahf
mov
inc
ljmp
cmpsb
gs
fsubs
mov
fwait
pusha
lock
add
pushf
rcrl
sub
and
push
sub
pop
dec
pop
out
push
mov
test
test
addr16
test
xchg
mov
or
inc
jmp
jbe
mov
push
lock
stos
sub
adc
lods
ss
in
or
in
or
inc
mov
mov
fucomi
pop
outsl
adc
cwtl
mov
dec
mov
jnp
xchg
and
mov
push
sub
popa
push
fisubrs
scas
add
insl
jl
cli
int
lock
xchg
inc
dec
icebp
sbb
lds
inc
mov
mov
sbb
xchg
inc
jb
push
mov
cli
dec
jecxz
cmp
sbb
ss
and
inc
inc
inc
andl
or
fdivs
or
dec
in
add
mov
out
cli
adc
idivb
xchg
mov
jno
sarl
insl
js
repz
jmp
cmp
pop
xchg
inc
inc
lret
out
sar
add
jp
push
push
lods
or
in
jns
sbb
cmpsl
xor
add
mov
xor
cmp
dec
mov
push
stos
mov
mov
outsl
mov
mov
dec
mov
dec
and
xor
xchg
pushf
ja
orb
lahf
bound
push
idivb
test
fimull
inc
jb
insb
outsb
stos
mov
cmpsb
test
roll
cld
rorb
fwait
dec
stos
test
in
test
inc
loop
insb
cld
sub
push
pop
out
dec
add
das
push
sub
adc
mov
mov
mov
jmp
mov
mov
and
dec
mov
clc
shrb
or
call
cs
jmp
dec
mov
imulb
loop
outsb
dec
pop
shr
fdiv
add
popf
push
data16
scas
adc
std
lahf
std
fisttps
pop
mov
sub
mov
pop
sahf
decl
loopne
inc
ret
pusha
pop
out
mov
std
out
mov
nop
push
dec
dec
stos
xor
dec
add
xor
aad
fwait
lcall
enter
popa
outsl
shlb
les
adc
add
cmpb
mov
xlat
outsb
les
xchg
mov
mov
xchg
jo
xor
add
mov
hlt
fisubrs
clc
fistps
loop
ficompl
pop
cmp
lcall
jle
ja
clc
dec
lret
jmp
inc
lock
mov
mov
jl
jo
loope
paddq
bound
jno
inc
cwtl
lds
push
cwtl
jg
mov
out
add
arpl
sub
push
lock
clc
xchg
lock
ds
outsb
pusha
push
test
cmpsl
cmp
jg
mov
hlt
imul
test
pop
mov
or
ret
add
jmp
nop
mov
or
pushl
adc
xchg
adc
or
add
outsb
sub
test
push
push
add
ret
popf
xor
xor
lds
icebp
or
insl
cld
sarb
sub
cmpsb
push
jne
bnd
mov
inc
add
pop
sahf
inc
jp
lock
fidivs
divl
pop
imul
rcr
add
mov
add
stc
mov
popf
jecxz
andl
add
jecxz
and
mov
lea
push
sarl
jo
xor
adc
xchg
in
lock
mov
adc
bound
cld
dec
or
pop
lock
fs
jo
lcall
ljmp
xor
pop
ret
nop
pop
cltd
mov
loope
call
mov
out
sub
xchg
cmpb
clc
into
sub
add
sub
adc
cmp
push
js
ficomps
ret
fcomip
sti
data16
or
jl
add
inc
mov
inc
in
js
je
push
dec
xchg
imul
jbe
add
aaa
push
push
cmp
push
pop
or
pop
cmp
xor
inc
mov
call
pop
mov
mov
gs
rol
pop
outsl
mov
pop
cmc
aaa
add
mov
aas
xchg
adc
and
loopne
fsubs
bound
sti
cs
testb
pop
xor
imul
test
jne
sbb
jno
in
jl
movsb
or
push
mov
inc
pop
push
cmp
fstpt
lock
in
or
and
jl
mov
shll
cmp
pop
test
inc
lea
and
jo
sbb
cs
sbb
push
jnp
xchg
mov
mulb
in
jmp
pop
lcall
testl
mov
ds
cmpsb
mov
jmp
repnz
push
pop
add
jmp
mov
xchg
popf
ucomiss
je
pop
xor
decl
jle
aam
lahf
xlat
mov
stc
and
sar
add
test
stos
jmp
ljmp
jecxz
fstp
mov
aas
sub
mov
test
test
es
outsl
mov
js
sbb
cmp
ret
mov
xchg
sub
andb
stos
add
jg
sub
mov
mov
and
cvttps2pi
sbb
fildll
das
pop
jno
xor
adcl
xchg
ss
mov
cmp
in
scas
adc
or
js
mov
adc
lcall
push
push
mov
xor
stc
iret
clc
jecxz
adc
xchg
sahf
out
adcl
sub
cli
jg
jg
sbb
sbb
pop
jg
scas
and
inc
fcompl
std
lcall
inc
sub
cmc
loop
subb
mov
rclb
adc
movsb
or
sbb
xor
sbb
fstpl
or
ret
mov
ljmp
push
imul
add
int3
dec
js
sahf
mov
pop
mov
lock
add
sbb
xor
mov
shrb
les
cwtl
dec
and
pop
gs
int3
jb
shll
xor
xchg
enter
inc
call
les
inc
outsb
mov
ljmp
add
fnstsw
cli
xor
andb
add
or
push
in
dec
test
and
in
ljmp
or
jmp
shlb
inc
movsl
lods
je
jmp
out
aam
fs
push
outsb
push
adc
bound
jp
mov
jmp
pop
cmp
inc
xchg
int
jbe
repz
lcall
andb
int
and
jg
mov
mov
cmpsl
cltd
add
fisttpll
cmp
lock
test
aam
dec
js
pop
sub
push
add
mov
fldenv
sbb
sub
nop
mov
je
push
push
xchg
pop
hlt
fists
push
dec
stos
and
aad
adc
cmp
fbstp
lods
pusha
mov
xchg
jg
add
sbb
mov
sbb
and
loop
or
sbb
scas
test
insb
cltd
inc
pop
lock
insl
call
sbb
aad
or
mov
jle
clc
jg
loopne
xchg
or
mov
ja
hlt
in
or
sub
mov
push
adc
mov
pinsrw
sbb
mull
or
pop
mov
int3
sti
aad
adc
iret
push
push
mov
xchg
jnp
add
mov
outsb
inc
nop
xor
test
lcall
fs
mov
loope
call
clc
les
jle
and
xchg
and
std
xorl
jbe
push
lret
mov
adc
xchg
out
orb
dec
mov
push
dec
clc
int
pop
push
into
cmp
mov
and
cltd
aam
cli
adc
push
fcmovb
and
insl
push
cmpsb
jo
fldenv
xor
pop
jnp
cmp
mov
lcall
das
or
sahf
hlt
fsubr
or
inc
shl
in
out
pop
push
jne
mov
sub
pusha
enter
mov
ret
adc
sub
lds
or
xchg
pop
sti
popf
xor
call
adc
jmp
mov
and
inc
and
and
ss
pusha
pushf
in
add
jg
cmpsb
std
fnstcw
hlt
and
add
iret
sub
or
push
les
ret
sub
jb
sub
ljmp
sahf
or
add
addr16
lods
and
call
mov
inc
add
xor
pop
cld
xchg
lods
pop
int3
dec
and
in
icebp
loope
pop
icebp
clc
sbb
mov
dec
xchg
xor
dec
cmp
push
arpl
cld
out
adc
jmp
icebp
in
lcall
mov
sbb
push
jb
verw
pop
ret
adc
jp
in
mov
jecxz
js
in
mov
cmpb
ljmp
push
inc
inc
out
in
mov
or
mov
out
sub
aas
pop
scas
fbstp
rol
mov
or
push
cmovl
jbe
sahf
push
insl
pop
fs
stos
lods
insl
mov
push
push
inc
sahf
jmp
cli
orb
and
adc
icebp
outsb
add
mov
sub
add
ljmp
and
mov
mov
out
lret
lods
into
pop
ja
lds
shlb
or
mov
inc
cmp
loope
es
lock
and
push
out
paddq
cmp
bound
hlt
lods
repnz
out
clc
jmp
test
or
inc
xchg
mov
cmp
js
jecxz
dec
jl
add
in
ja
ljmp
push
dec
or
lods
jmp
icebp
std
add
dec
shlb
cli
or
test
cs
xlat
ret
std
lods
lods
mov
xchg
jle
insb
arpl
jae
ds
ret
cmc
xlat
mov
fsubrl
mov
xchg
cltd
imul
test
mov
fnsave
lret
outsb
push
add
dec
xor
mov
inc
mov
jbe
mov
dec
xor
repz
sahf
movsl
jle
jb
rclb
fcoms
inc
lods
sbb
xchg
and
pushf
mov
sbb
xor
cli
das
pushf
jns
push
mov
mov
xchg
cmpsl
xchg
addr16
xor
lcall
les
cs
dec
add
js
call
push
lcall
jo
mov
decl
js
jno
lock
sub
jmp
inc
pusha
add
das
pop
cltd
mov
aad
loop
pop
sbb
loopne
mov
outsb
int3
rolb
arpl
scas
jns
test
outsb
inc
in
xchg
fdivrp
jmp
pop
cmp
pop
pusha
mov
lods
add
mov
inc
adc
or
cmp
sbb
xchg
cmp
out
into
lret
hlt
adc
mov
aas
fs
xchg
and
cmp
xor
mov
ret
inc
push
add
lcall
lock
adc
or
pop
inc
loope
cwtl
les
pop
rol
mov
lahf
xor
cmp
jb
int
cmp
clc
jnp
cmc
imul
push
in
leave
and
es
clc
ss
xor
mov
rorw
int3
cmpsb
dec
les
push
pop
xchg
lcall
push
fs
and
push
rolb
aam
addr16
inc
jl
cld
pop
adc
and
jg
aaa
jle
push
or
sarl
rcll
cmpsl
xchg
sbb
test
test
mov
push
ja,pn
xchg
mov
sbb
xchg
xor
cs
sbb
cmp
mov
jle
jg
dec
adc
repnz
jge
sbb
pusha
daa
mov
sub
cmpsb
and
pop
scas
fldln2
clc
jmp
mov
shlb
mov
jg
in
fidivl
stos
out
mov
adc
or
jns
push
add
test
pop
sbb
cli
add
test
enter
push
movsl
aas
inc
xor
cmpsb
pop
loope
mov
and
push
call
adc
mov
xchg
fdivr
jns
push
jnp
hlt
orb
push
or
xor
and
mov
push
outsb
pop
pop
fnsave
dec
pop
xchg
sub
idivb
fsubrl
imulb
ljmp
or
sbb
push
shlb
push
movsb
xchg
jbe
mov
lods
inc
push
pop
mov
xchg
call
and
clc
mov
add
xor
clc
pop
sahf
decl
cmc
mov
xchg
and
jnp
jl
test
lret
adcb
mov
in
pushf
push
sub
addb
dec
stos
sbb
std
mov
mov
stos
mov
mov
fdivs
lock
cli
pop
les
loopne
lock
test
in
mov
aam
xchg
mov
sar
nop
sbb
mov
and
popa
enter
inc
xchg
ja
mov
orb
pushf
movb
mov
aas
les
rolb
shll
aad
rcr
adc
lcall
gs
imul
imul
mov
push
push
fs
roll
pop
shlb
pop
jge
incl
lods
lret
lcall
sub
mov
ret
hlt
xor
enter
bswap
add
pop
sub
lock
push
decl
push
and
jmp
mov
fs
xchg
pop
cmp
cmpsl
dec
dec
inc
sbb
xchg
and
mov
scas
stc
push
jmp
or
cltd
dec
stos
cwtl
push
bound
dec
mov
int3
fmuls
mov
out
push
insb
push
dec
jne
sub
and
fbld
les
fdivs
data16
jg
test
xchg
xchg
add
xchg
add
xor
cwtl
push
rcr
push
adc
or
mov
push
int
push
je
push
sahf
nop
jmp
gs
xchg
pusha
jo
sbb
les
sub
dec
add
inc
inc
imul
jge
mov
xor
lcall
cmp
xchg
fsubrs
into
inc
fiadds
add
lcall
outsl
dec
std
loope
les
bound
pop
mov
popa
cmc
lcall
lods
cs
dec
clc
ret
into
repnz
push
dec
test
ljmp
mov
fisubl
hlt
adc
lods
popa
mov
aaa
inc
loope
cmpsl
cmpsb
lcall
and
test
jp
mov
lock
mov
dec
push
in
pusha
xchg
mov
jle
sahf
je
stos
test
dec
fimuls
movsl
mov
outsb
nop
and
cmp
jg
lea
mov
stos
in
aas
jp
mov
stos
and
or
fbstp
mov
out
xor
add
add
jbe
and
outsb
jmp
and
dec
or
sbb
dec
mov
ljmp
or
fcoml
jae
mov
xor
bound
movl
inc
aaa
lock
sub
fwait
pop
fists
lock
testl
ficoml
das
mov
push
outsl
mov
sub
or
jnp
adc
mov
fldl
push
std
aad
shr
push
xor
aad
pop
fwait
adc
stos
aaa
cmp
and
pushl
mov
fsubs
addl
add
xchg
mov
pusha
pop
sub
adc
lods
sbb
push
leave
outsb
mov
mov
push
imul
hlt
jle
into
outsl
leave
clc
ljmp
flds
push
inc
pop
pop
jg
add
cltd
sbb
enter
roll
adc
mov
out
test
mov
mov
push
dec
xor
cltd
lods
xlat
fisttps
es
sbb
jns
jg
int
add
sub
loopne
and
jb
mov
adc
fstpt
pop
adcl
inc
incb
cmp
test
cmp
push
push
stos
or
scas
cs
mov
mov
jo
repz
in
imul
xor
insl
xchg
dec
call
xor
dec
mov
mov
adc
pop
sarb
divb
cmpb
repnz
pushf
cwtl
fldl2t
ficomps
jecxz
mov
aam
xchg
cmpsl
inc
or
sbb
mov
hlt
push
dec
nop
sbb
ljmp
dec
jo
dec
es
jno
sar
pop
or
or
push
mov
and
inc
xchg
outsb
arpl
out
mov
pop
cmc
dec
jbe
push
leave
mov
movsb
cmp
jl
fidivrl
sbb
clc
push
or
je
call
nop
pop
rcr
sub
bound
cli
stos
or
jecxz
fdivrs
dec
mov
fnstcw
test
in
mov
mov
pushf
xchg
add
subl
adc
mov
in
mov
enterw
stc
inc
push
adcb
add
stos
popf
das
and
sbb
lahf
cltd
ljmp
outsl
pop
add
scas
mov
cld
xchg
xor
data16
mov
cmpb
cli
cld
ljmp
pop
add
cmc
mov
sub
lods
imul
push
mov
push
mov
xor
aad
subb
inc
dec
decl
push
xchg
in
jnp
enter
xchg
clc
rcr
mov
rorb
or
xchg
jo
xlat
pop
sbb
dec
jecxz
je
out
lea
call
jmp
jno
popf
pop
imul
mov
push
sbb
jp
and
inc
xchg
cld
jg
or
mov
mov
add
mov
jmp
pop
lock
ficompl
icebp
dec
fmull
idivb
mov
push
sbb
sar
jmp
xchg
into
pop
repz
add
js
popa
lret
out
pop
scas
fadds
sub
pxor
add
jg
lock
sub
pop
insb
leave
dec
fcmovnu
dec
sub
inc
enter
fadds
jle
mov
or
mov
mov
ljmp
pop
add
mov
in
fldcw
sbb
jecxz
je
mov
cs
sti
mov
mov
xchg
into
popa
adc
cmp
sbb
jge
add
fistpll
imul
pop
mov
scas
mov
scas
dec
sub
xor
jle
cmp
fldl
lahf
jo
shll
pop
dec
in
divb
cmp
add
shll
nop
mov
test
jg
jbe
or
mov
mov
test
fs
mov
xlat
in
dec
sbb
movsb
push
mov
popf
or
jbe
ret
dec
cwtl
xchg
sub
mov
sbb
push
cltd
xor
arpl
add
icebp
xor
scas
adc
std
fbstp
add
mov
cmpsb
clc
xchg
mov
pop
inc
mov
aaa
xor
xchg
pop
aas
pop
xchg
bound
jo
mov
stc
pop
jg
sub
add
mov
mov
cmpsb
call
sbb
jmp
cmp
pop
mov
les
ds
aaa
dec
mov
push
test
ljmp
mov
inc
jno
in
jg
jge
pop
add
pop
icebp
fildll
xor
fnstenv
mov
mov
ljmp
mov
fdivrl
inc
dec
mov
addl
std
or
fstpl
sti
ljmp
xor
mov
mov
cmp
aam
loope
jp
scas
in
cmp
push
js
in
push
lret
cli
pop
cmpsb
xchg
es
pop
stos
iret
pushf
fs
sarb
mov
enter
cli
cmpsb
int
sbb
push
inc
mov
pop
sub
stos
into
pop
pop
inc
jmp
es
mov
dec
sub
xchg
push
sbb
xchg
adc
add
xchg
mov
pop
int3
sbb
mov
mov
hlt
dec
stos
andb
push
cs
dec
leave
in
cmp
decl
mov
cmp
mov
out
xlat
mov
fs
pop
xchg
jnp,pt
mov
std
ss
mov
insb
jl
mov
pop
stos
adc
adc
lea
mov
aaa
mov
faddp
dec
inc
and
out
adc
xchg
pop
push
and
cld
mov
test
stos
scas
or
adc
fwait
sub
or
cmc
xchg
test
push
dec
mov
xor
or
inc
xchg
popa
pop
lods
pop
call
mov
call
xchg
dec
adc
xorl
leave
outsl
and
jg
push
xchg
adc
fdivl
and
or
xor
dec
and
pop
mov
cmp
sarb
mov
jge
data16
mov
jne
fcomip
xchg
movsb
jbe
push
shl
xchg
inc
jmp
test
lds
sub
ds
or
clc
or
jmp
ja
stc
ret
ret
fnstsw
mov
sbbb
inc
jae
mov
rolb
lcall
cld
xchg
cmp
sahf
ret
js
xchg
sub
xor
add
movsl
outsb
hlt
pushl
ficompl
xor
and
sti
xchg
cmp
push
sarb
mov
popa
push
mov
mov
xor
in
pop
loopne
sbb
inc
repnz
or
mov
pop
loope
mov
mov
test
lahf
dec
adc
mov
filds
jg
push
jb
xor
pop
fcomip
imul
mov
adc
movsb
in
pop
out
pop
add
inc
testb
add
adc
jno
jb
das
in
jg
cwtl
cmp
or
fwait
outsb
loop
nop
pop
push
test
dec
jne
sbb
adc
xchg
inc
ljmp
mov
adc
outsb
dec
cmpsb
xor
aas
mov
out
pop
sti
or
scas
sbb
hlt
or
bnd
cli
outsb
cmp
aaa
and
mov
icebp
bound
lock
pop
dec
jne
lock
dec
out
loopne
jl
das
adc
and
dec
lcall
lock
push
inc
push
sub
push
cwtl
js
push
das
mov
int3
clc
pop
sub
mov
mov
js
imul
je
add
xchg
inc
mov
cmp
mov
mov
dec
inc
sub
xchg
std
xor
in
mov
insb
mov
dec
ljmp
outsl
rclb
jle
push
cmpb
das
repnz
xlat
mov
loope
popa
inc
xchg
inc
or
into
inc
jl
xchg
mov
mov
mov
mov
and
cmp
dec
pop
mov
xchg
jecxz
cli
and
lret
ret
inc
pop
lds
jle
inc
lret
sbb
or
sti
add
fidivrs
xchg
pop
iret
sbb
cld
xor
jno
pusha
xchg
pop
dec
ja
repnz
or
add
in
cmc
imul
pop
mov
inc
imul
shl
in
clc
cmc
popf
je
out
lahf
fwait
push
cmp
sahf
lods
movsb
loopne
cmp
or
lret
and
lcall
in
outsb
cmp
stc
push
xlat
inc
xchg
or
movsb
fldt
lock
jae
jecxz
clc
push
filds
pop
sahf
imul
mov
cmp
xor
sbb
cli
clc
jle
or
push
and
subl
inc
mov
push
sub
sub
sti
sbb
mov
push
pusha
xor
gs
xor
lcall
mov
adc
push
cwtl
inc
fldcw
push
out
js
sbb
cmpsb
jmp
jl
outsb
adc
xchg
add
xchg
ds
push
imul
fidivl
aad
sub
pop
sub
sbb
jnp
out
leave
movsb
sub
xchg
adc
inc
sub
cmc
decl
mov
add
fnstsw
mov
aad
cmc
mov
mov
inc
push
mov
cli
and
scas
push
mov
and
mov
jbe,pn
cs
rorb
or
imul
pop
jl
push
adc
mov
mov
lods
xchg
or
add
sbbb
dec
int
xor
and
scas
mov
xchg
inc
xchg
in
xorb
adc
inc
xchg
hlt
rclb
mov
dec
ja
scas
push
mov
loop
add
ljmp
fstpl
fmull
loopne
mov
dec
add
mov
arpl
mov
test
cs
or
rcr
jo
mov
orl
and
std
das
mov
pop
mov
clc
rorl
fnstsw
lods
pop
add
cld
sbb
in
call
pop
scas
sub
add
insb
ret
and
pushl
adc
dec
jle
inc
push
jmp
add
inc
and
clc
push
call
scas
jl
inc
pop
push
inc
ja
dec
call
and
shlb
dec
and
clc
scas
mov
in
inc
lcall
std
aad
js
jg
inc
pop
icebp
jnp
pop
sarl
and
adcb
gs
jbe
mov
fwait
lea
sub
fldt
or
mov
ljmp
fs
dec
mov
jbe
aad
mov
aad
outsl
into
push
into
mov
mov
and
adc
adc
lock
fisubrl
out
mov
lcall
jne
out
pop
sub
or
out
jmp
xchg
mov
jo
mov
insb
pop
add
sbb
lret
leave
cltd
iret
push
aam
roll
pop
xchg
pusha
inc
mov
lcall
frstor
rolb
xor
mov
push
jp
mov
cltd
and
cmp
lods
call
call
movsl
enter
push
lret
outsb
or
push
data16
adc
or
inc
je
dec
fcmovu
test
mov
cmp
jne
jg
cld
and
gs
jmp
test
dec
push
loope
push
xchg
das
mov
push
cmp
xchg
sahf
dec
or
dec
xchg
pop
xchg
loop
mov
loope
push
dec
mov
ljmp
or
pusha
loop
imul
xchg
in
cld
mov
add
mov
sub
push
adc
ljmp
add
loopne
adc
inc
scas
out
cmc
lcall
out
pop
enter
pop
xchg
mov
jg
adc
sbb
pop
ret
outsb
lock
gs
inc
xlat
mov
fisubs
mov
jp
not
mov
aam
cli
cltd
push
inc
push
shr
push
lcall
loopne
dec
aas
movsl
pop
xchg
push
daa
movsb
mov
ja
pop
and
clc
push
mov
or
das
push
dec
jae
das
loopne
xchg
lock
sub
jb
ss
cmp
pushf
icebp
jmp
cmp
insl
ljmp
icebp
enter
icebp
shlb
test
mov
ljmp
pop
push
mov
push
push
and
jno
push
fildll
das
lods
jge
mov
push
add
pop
inc
shll
mov
adc
pop
and
sbb
sub
hlt
push
fs
mov
dec
push
js
and
mov
and
cmp
sbb
ljmp
lea
xchg
sub
mov
les
ljmp
std
jg
scas
xor
ret
test
es
xchg
xchg
push
je
insb
adc
stos
call
stos
mov
pushf
call
push
sbb
movsb
mov
cmpsb
inc
test
data16
fbstp
popf
sbb
jl
or
dec
xchg
bound
mov
cmp
outsb
push
icebp
and
test
mov
pop
or
loopne
lods
mov
divb
jne
and
add
mov
pop
dec
xchg
push
and
inc
clc
mov
mov
mov
or
pop
arpl
je
out
xlat
test
push
iret
in
rcr
jno
xchg
hlt
push
mov
push
mov
mov
add
fyl2xp1
lock
pushl
pop
hlt
fcmovnb
xchg
out
xchg
jbe
outsl
pop
lds
hlt
cltd
scas
pusha
mov
xchg
cmp
mov
incl
add
cwtl
adc
hlt
mov
ja
dec
mov
aaa
adc
inc
sarb
sbb
xchg
mov
jnp
adc
lock
movsb
pop
out
imul
and
mov
adc
xor
loop
jmp
jp
xchg
pop
icebp
sub
cmp
fcmovu
in
lret
pop
clc
mov
push
cmp
mov
push
ss
into
jne
jnp
dec
hlt
push
sbbb
fcomp
out
dec
arpl
push
sub
clc
sub
and
add
sbbb
push
mov
inc
or
and
hlt
pushl
xchg
add
aam
lcall
cld
or
cmp
cli
pop
ret
or
test
mov
inc
nop
in
fwait
mov
cld
xchg
les
and
jle
sub
sub
mov
je
imul
decb
aaa
or
imul
jb
pop
xlat
dec
clc
lret
and
pop
ret
xchg
pop
decl
mov
lods
lcall
mov
mov
hlt
sbb
into
fldl
xchg
sbb
push
mov
shll
stos
ret
mov
inc
sbb
dec
leave
clc
jg
xchg
repnz
sub
xchg
and
jbe
pop
dec
mov
xor
mov
rclb
pop
pop
fwait
adc
add
jg
dec
ljmp
xorl
push
out
iret
cwtl
movsl
scas
adc
jg
cmc
aaa
lods
dec
popa
mov
setg
xchg
push
dec
inc
mov
sub
sbb
repz
xchg
inc
std
ljmp
movsl
jl
cs
rol
push
and
btc
inc
andl
in
add
cmpsb
sub
dec
lcall
cli
jmp
cmp
adc
lods
in
add
adc
cmpsb
icebp
mov
ret
pop
mov
dec
and
jg
push
push
cmpsl
sub
mov
test
call
sub
dec
add
imul
lcall
add
rcll
andl
adc
mov
ljmp
pop
mov
pushf
sub
or
out
cmpsb
jle
or
sahf
dec
loop
roll
cmp
push
jo
cltd
fs
mov
movsb
push
mov
mov
and
pusha
movsl
rolb
in
push
std
cs
sbb
mov
lcall
data16
xor
jnp
movsb
mov
not
shlb
xor
add
fsts
clc
ljmp
imul
into
pop
fmul
sti
mov
xchg
xchg
xorb
fwait
popw
mov
in
and
les
add
daa
sbb
lcall
loop
and
sub
xchg
inc
fistps
mov
cmp
fnstsw
cmp
jb
test
adc
adc
clc
fcomip
mov
test
test
or
dec
add
popa
call
mov
data16
test
mov
mov
push
inc
test
roll
mov
mov
decl
mov
fsts
cs
and
and
push
sti
out
out
addb
ffree
adc
ja
add
sbb
xchg
outsl
movsb
out
sarb
and
fldt
out
and
ret
ljmp
out
inc
inc
imul
cmp
popa
push
sbb
add
or
inc
push
test
mov
xor
inc
les
inc
xor
loopne
cwtl
ss
add
mov
cmp
cld
stos
pop
jle
mov
in
in
jbe
dec
mov
out
or
call
mov
mov
imul
add
fstps
addr16
shrb
pop
add
dec
or
cli
lcall
jae
push
loope
fisubs
pop
ja
sbb
lock
aaa
and
or
hlt
push
inc
jno
ret
aaa
cmp
std
jg
adc
add
add
adc
jns
xchg
out
aaa
push
and
cld
js
pushl
lods
lcall
push
xor
jne
lcall
add
xor
jb
and
push
and
std
lcall
pop
jle
cmp
add
mov
push
cwtl
movsb
adc
mov
aas
in
in
mov
pop
sbb
inc
push
decl
cli
or
gs
mov
stos
in
xor
cld
mov
lcall
out
imul
sub
mov
gs
jmp
in
sbb
sti
vmovaps
push
out
mov
jle
xchg
icebp
popa
movsb
ret
mov
incb
cmp
mov
jg
mov
je
and
cs
icebp
imul
add
cmp
shrl
jp
pop
mov
cld
ffree
jg
outsl
dec
dec
inc
and
or
sbb
lock
xchg
lock
fs
add
das
clc
dec
add
push
imul
test
add
pop
mov
mov
cmp
fwait
dec
bnd
jno
dec
pusha
imull
xchg
mov
and
add
xchg
out
scas
insl
adc
inc
jmp
ljmp
loop
mov
mov
addr16
jle
roll
fisubs
dec
cmp
cmc
imul
dec
sbbb
outsb
push
sub
imul
notl
mov
or
jnp
shll
and
cmp
lds
ljmp
jmp
push
std
fisttpll
and
dec
ret
movsb
fcomps
mov
jo
lcall
aas
fistpl
ror
shrb
jmp
add
clc
int3
mov
mov
incl
add
push
and
and
lcall
adc
mov
ljmp
xchg
add
sbb
mov
icebp
add
loope
dec
push
jl
push
jge
push
js
push
rcrl
fistpl
mov
mov
push
dec
repz
sbb
add
dec
imul
dec
jl
pop
fsubr
fdivl
mov
mov
mov
push
scas
fwait
xchg
repz
mov
inc
imul
std
cwtl
jno
add
dec
aaa
setae
dec
ljmp
xor
push
mov
fnstcw
shlb
xorb
pop
cltd
mov
push
cmp
or
les
lcall
out
mul
fisubrl
je
mov
fldt
test
xchg
jg
lahf
adc
mov
fsubl
int
pushl
push
jne
jmp
outsb
call
mov
clc
cmp
ds
push
cmp
clc
dec
movsb
ret
subb
aaa
lret
jo
mov
scas
popa
pop
lahf
shll
cmpb
push
clc
lds
inc
les
mov
inc
mov
pop
pusha
xchg
enter
mov
pop
cli
xor
cli
jnp
jns
xchg
pop
sahf
add
pop
rcr
cmc
push
incl
test
jg
or
sbb
out
pop
push
inc
test
out
lock
mov
lea
ret
mov
push
data16
mov
cs
idiv
xor
sub
adc
test
stos
aad
xor
pusha
stos
aas
into
mov
insb
sbb
fs
sbb
nop
stos
pop
jb
incb
sub
mov
and
inc
sbbb
lock
pop
mov
pop
cmp
xchg
sar
sub
and
loop
mov
cs
add
add
dec
add
imulb
dec
cld
sub
push
loopne
or
add
inc
fdivs
xchg
popa
push
fiadds
jg
insl
adc
cmpsb
cli
rcll
mov
and
rolb
and
mov
out
clc
sahf
es
inc
xchg
mov
adc
pop
add
mov
repz
mov
mov
push
repz
mov
jl
subl
sub
in
pop
inc
icebp
pop
xchg
lret
ljmp
xor
sbb
ret
add
mov
pop
out
loopne
pop
out
jg
sub
test
jecxz
imul
loopne
clc
call
xor
add
jbe
stos
xlat
push
adc
int3
dec
xor
jb
mov
insl
hlt
orb
cmp
jg
add
int3
mov
sbbl
pop
mov
dec
adc
push
clc
inc
pmullw
call
rcrb
mov
and
scas
dec
xchg
cld
inc
sbb
dec
cmp
jg
mov
push
mov
inc
jae
pop
sar
cwtl
fidivrs
lahf
or
mov
dec
pop
pop
or
push
mov
lock
icebp
lret
pop
aam
psrld
xchg
lcall
pop
loopne
ljmp
pop
mov
sbb
jo
push
inc
add
fidivrl
pop
scas
mov
into
xchg
inc
ljmp
in
out
test
fcomps
mov
and
cwtl
inc
lds
lcall
fisttpl
das
sbb
xchg
pop
push
add
je
scas
mov
add
cmpl
pop
fimull
insb
push
stos
arpl
adc
sub
pop
shrb
ss
mov
rorb
add
pop
or
or
idivb
pop
cmovg
aaa
push
fst
add
or
ljmp
pop
sub
aam
sbb
in
sub
mov
inc
jbe
or
or
rorl
cmp
xchg
lea
or
cmp
es
mov
subb
ds
ror
mov
mov
scas
add
inc
or
bound
add
cltd
push
mov
inc
les
imul
insl
pop
add
xchg
push
in
dec
sub
adc
insb
jg
cmp
inc
sbb
sub
incl
fisttps
inc
call
sub
cltd
or
cli
inc
nop
mov
jle
jecxz
dec
cltd
es
add
std
test
psubusb
push
incl
add
fistps
imul
mov
out
mov
cltd
int
jno
stos
insb
outsb
pop
loopne
dec
stos
pop
dec
lcall
rcrb
cli
js
icebp
cs
lcall
sbb
das
xchg
adc
push
rep
outsb
and
sbb
push
xor
outsl
xchg
cmc
dec
xchg
mov
iret
mov
mov
ret
enter
push
adc
fidivrs
fxch
in
scas
js
mov
add
out
xchg
adc
dec
mov
roll
sbb
mov
hlt
adc
mov
stc
rep
fbld
adc
xor
inc
jbe
outsl
xchg
lods
fists
jg
incl
les
adc
das
pop
call
mov
pop
pop
cmp
aad
jle
aad
and
mov
fimuls
sbb
adc
loope
jne
push
jecxz
mov
push
pop
sub
jmp
adc
or
outsl
fs
mov
int3
jb
je
nop
xchg
aaa
fmull
add
scas
adc
icebp
jg
cld
xlat
pop
pop
cmp
call
xlat
xlat
pop
pop
arpl
dec
loopne
dec
or
repnz
push
cld
lcall
or
xchg
out
push
cmpsl
fsubrs
ja
out
jmp
inc
mov
ss
and
xor
call
xor
jae
out
fistps
jmp
or
dec
decl
lea
jmp
arpl
lret
adc
cmp
dec
and
inc
in
in
pop
mov
xchg
cmp
push
add
repz
pop
pusha
jg
mov
pop
stc
sub
adc
xchg
mov
sarb
fimull
or
or
push
sarl
mov
jo
cli
jns
mov
adc
mov
stos
push
mov
cltd
jmp
and
ljmp
jbe
cs
adc
mov
rorl
add
adc
cmpb
cs
aaa
xor
push
jp
jle
cmp
mov
nop
sub
cmp
mov
mov
push
fwait
and
int3
add
push
aam
mov
jp
and
sbb
add
inc
cmp
data16
add
cmpsl
loopne
mov
and
insb
mov
xorl
jo
push
sar
push
mov
jp
mov
dec
out
cmp
sub
mov
fnop
or
cmc
sbb
testb
adc
sub
mov
push
mov
bound
jg
pop
lods
and
call
mov
mov
and
mov
les
leave
mov
dec
test
jnp
pusha
jmp
je
xchg
cmp
ficoms
icebp
adc
test
cld
ljmp
data16
mov
mov
or
test
lahf
clc
data16
lds
add
js
jnp
loop
adcl
push
int3
add
and
enter
cmpsl
lods
inc
bound
adc
mov
setle
xchg
push
fimuls
mov
out
mov
loopne
pop
js
mov
insl
in
js
push
xlat
jo
ljmp
loop
lret
xchg
mov
adc
add
dec
push
adc
and
data16
jg
out
mov
or
sbb
jp
fdivl
mov
stos
stos
inc
push
jnp
inc
push
pop
aam
and
inc
sub
pushl
sub
inc
idiv
push
cmp
in
out
sbb
jne
or
add
adc
insl
add
ljmp
jl
insb
sysret
rcr
xchg
rcrb
sub
mov
pop
push
stos
clc
roll
push
pop
rclb
or
xchg
js
pop
rcr
sbb
rcr
inc
insb
xchg
mov
int3
outsb
jmp
call
xor
mov
into
and
iret
jnp
push
jg
out
cmp
inc
cmpsl
xchg
test
sbb
sub
or
pop
pusha
cmp
imul
sarl
int
mov
cs
icebp
mov
cli
aad
cmc
xchg
mov
insb
push
movsb
pop
xchg
push
mov
xor
push
test
out
inc
aad
pop
mov
sbb
imul
push
inc
mov
enter
ljmp
mov
xor
inc
lds
mov
mov
clc
fistps
inc
add
in
mov
cmp
aam
popf
mov
or
mov
mov
out
sbb
scas
repnz
jle
test
mov
mov
push
push
mov
daa
insb
fnstsw
jle
loopne
push
jecxz
fidivs
mov
xchg
xor
xchg
xchg
push
shll
inc
jnp
pop
cmp
or
mov
pop
mov
inc
lock
hlt
incl
add
lcall
dec
ss
add
lcall
jmp
adc
gs
mov
mov
ljmp
inc
mov
out
subl
inc
mov
mov
xor
pop
mov
pop
add
sbbl
fwait
push
sub
add
das
cltd
test
out
mov
mov
pop
fsubl
inc
or
out
clc
addb
test
xor
out
xchg
subb
jl
ficompl
outsl
mov
addb
add
sbb
cld
xchg
adc
jge
inc
sub
lock
add
add
shrl
xor
shl
mov
mov
fmuls
ret
push
or
ljmp
stos
pusha
fdivs
fbld
cwtl
sarl
or
insb
jbe
in
iret
cs
hlt
mov
dec
dec
fwait
jb
cmp
jg
sar
decl
pop
pusha
add
jmp
ja
or
or
sbb
lds
xchg
sbb
xor
xor
inc
adc
fmuls
cwtl
cld
insl
pop
dec
imul
pop
adc
dec
dec
add
clc
in
shlb
js
pop
mov
loope
aas
add
mov
fadds
int3
dec
mov
mov
xor
push
insb
or
add
add
adc
mov
jg
int3
mov
xchg
and
notl
push
jg
dec
lods
fmull
orl
push
aaa
cmp
jg
outsl
int
push
jbe
repz
xor
lock
fwait
inc
call
fnstcw
mov
mov
scas
sbb
add
cmp
out
int
mov
dec
sub
ret
and
mov
aaa
or
mov
cli
dec
mov
xor
adc
cli
or
cli
xchg
mov
mov
xor
mov
cltd
cmp
fstl
fdivp
cli
ror
xchg
mov
imulb
jmp
cmp
dec
adc
jmp
movsb
out
out
xor
jp
aas
pop
cmp
mov
movsl
test
or
lcall
jl
inc
cmp
and
pop
ficoml
jp
inc
pop
rorl
or
cmp
test
incl
push
fidivs
movsl
sub
jg
fdivrp
into
imul
test
daa
iret
out
lods
lds
jg
jmp
mov
iret
out
out
or
in
sbb
sti
cmpsl
cmc
sub
sub
dec
outsl
mov
subb
pushf
rcrb
jecxz
or
sub
call
cmp
xchg
dec
ja
dec
xor
jg
incl
add
stc
mov
ss
xchg
adc
repnz
or
bound
push
pop
xchg
cmp
fbstp
out
outsb
cmp
hlt
sub
inc
or
popa
dec
mov
dec
stos
dec
cmp
hlt
decl
stos
lock
fidivl
pop
xchg
in
test
loop
scas
aam
icebp
lret
mov
cmp
sbbl
xor
or
fdivrl
mov
cmp
into
or
add
and
lock
adc
jae
inc
sub
cmp
dec
mov
sbb
add
jp
jge
movsl
inc
les
push
std
cmp
dec
subl
push
addr16
mov
cmp
xchg
cmp
jl
or
xor
pop
lock
jo
dec
ljmp
cs
inc
jg
cmp
push
and
insl
shrl
movsb
shlb
add
push
and
push
mov
out
clc
mov
daa
bound
push
sub
xchg
dec
clc
jae
stos
ja
sub
test
add
push
stos
mov
std
dec
pop
adc
icebp
pop
fidivrs
xlat
sbb
sub
fstps
inc
xchg
fiadds
iret
fdivs
testl
mov
mov
inc
add
push
add
inc
sub
pusha
and
sub
push
sbb
add
das
jo
sub
xchg
cli
cs
or
jg
cmpb
or
ja
aaa
std
insl
pop
rep
loope
stc
das
inc
or
fisubrl
push
adc
fwait
in
push
inc
push
daa
or
cmpsl
push
movl
xchg
adc
adc
stos
popf
pop
ljmp
xchg
dec
loopne
lds
icebp
inc
add
cmp
sub
sub
sbb
int
or
cmpsb
mov
ljmp
ret
dec
sti
mov
lods
push
mov
xchg
cltd
addr16
int
imul
jb
add
ja
or
mov
xchg
fstpl
stos
add
pop
aad
or
push
sarl
lods
sub
jnp
or
outsl
loopne
push
fcoms
sbb
jge
sbb
rolb
icebp
jecxz
int3
sub
pushf
mov
cmpsb
cltd
gs
xlat
lret
inc
dec
hlt
dec
or
js
xchg
xchg
popw
sub
and
adc
add
sbb
hlt
jmp
mov
mov
mulb
imul
or
jae
ljmp
in
mov
xor
and
aas
pop
adc
incl
test
mov
or
cmpl
xor
push
cmp
pusha
frstor
ret
xchg
es
les
sub
ret
mov
imul
ljmp
fbld
outsb
roll
xchg
and
loop
cli
iret
es
aam
adc
bound
pop
das
jp
or
mov
loopne
jl
lods
mov
dec
xor
xor
lods
cmp
stos
arpl
and
add
rcrb
stos
cmp
mov
jg
sbb
mov
dec
mov
sbb
add
xchg
daa
pushf
ret
mov
out
sbb
and
xchg
lret
add
mov
add
cmp
push
testb
mov
mov
jmp
inc
ja
jne
xor
std
in
jne
insl
xor
mul
cltd
and
inc
sti
aaa
push
call
mov
cmp
ljmp
sbb
loopne
push
push
mov
pop
push
mov
mov
pusha
mov
cmp
pop
hlt
sbb
and
stos
js
pop
mov
hlt
faddp
cli
pop
jg
mov
insb
mov
test
mull
push
imulb
mov
lock
addr16
popf
lret
push
xor
xor
mov
mov
or
sbb
xor
jo
stc
mov
lcall
jb
jo
sar
fbstp
xchg
mov
decl
sarl
sub
loope
cmp
imul
mov
jmp
push
pop
mov
sub
int
out
shl
or
xor
sbb
js
sub
mov
lds
and
jg
mov
and
or
repnz
pop
aam
call
lea
push
push
out
ljmp
mov
cmp
gs
or
loop
adc
icebp
inc
xchg
fistl
cld
call
adc
xchg
jge
cltd
sub
pop
or
cli
icebp
out
clc
cli
jmp
pop
mov
orb
in
xchg
mov
mov
insb
or
cmp
mov
jle
mov
stc
sbb
mov
cmp
ficompl
push
xor
ljmp
mov
js
xor
fdivs
fildll
inc
fwait
rcl
fldl
aaa
xor
mov
mov
ljmp
cwtl
je
and
sub
iret
sub
cli
mov
fdivs
sar
out
pop
shrb
mov
test
pop
xchg
mov
ret
mov
out
and
jae
out
in
jecxz
loopne
js
sub
add
loopne
mov
mov
jge
dec
lahf
cmp
ret
call
push
jle
ret
jp
mov
jno
fidivl
inc
test
push
int3
sub
enter
add
nop
cmpsl
mov
fdivrs
mov
hlt
incl
mov
mov
orl
push
xchg
push
add
in
sub
jg
stos
and
cs
das
repz
out
mov
aaa
imul
imul
mov
into
inc
movl
rcr
mov
mov
call
fidivrs
lods
pop
adc
push
loope
sub
jnp
sub
pushf
or
pop
add
mov
xor
mov
leave
mov
mov
dec
ret
fnstcw
jnp
cmpsb
mov
jmp
es
cmp
xor
push
or
dec
sbb
aas
pop
rolw
sub
mov
lcall
inc
or
pop
mov
cld
xchg
dec
insb
pushf
jo
sahf
pop
imul
add
and
mov
outsl
jae
jp
pop
sub
out
scas
call
dec
xchg
inc
push
cli
inc
or
pop
das
nop
sub
stos
loop
insb
aam
lods
fistpl
dec
stos
inc
rclb
shll
popa
add
mov
out
dec
cmpsb
bound
js
aam
mull
mov
jecxz
inc
cmp
jg
shr
push
je
arpl
lea
xchg
hlt
jl
incb
adc
cmp
sub
lcall
mov
rolb
fprem1
dec
test
pop
fsubrl
cmp
dec
or
loopne
addl
outsb
pop
add
push
insb
sbb
xor
adc
push
hlt
pushl
mov
cmpsb
push
ljmp
push
push
bound
imul
clc
mov
add
outsb
mov
or
js
sbb
push
push
lea
sbb
jo
repz
inc
push
adc
icebp
fists
mov
xchg
shll
test
jbe
or
sbb
dec
jno
rclb
sbb
mov
adc
ljmp
pop
jns
popa
mov
dec
fistps
cmp
inc
and
inc
shrl
push
lods
add
call
out
push
icebp
jmp
movsb
pop
out
mov
rcll
mov
jnp
or
or
orb
fdivrp
iret
fldt
mov
lret
leave
pop
hlt
xor
movsb
pushf
push
mov
out
inc
ljmp
in
jl
push
mov
lock
in
jmp
pop
hlt
sbb
je
mov
xchg
cmpsb
dec
pop
xor
mov
loopne
sub
dec
pop
data16
mov
gs
xor
sbb
rcrl
sub
mov
xlat
add
xchg
mov
adc
xor
add
pop
cmp
sbb
push
adc
pop
lods
fimuls
fisttpll
mov
xor
mov
or
inc
inc
ja
stos
jbe
cli
inc
sub
mov
stos
xchg
mov
cmpsl
cmp
or
in
inc
sar
pop
leave
shlb
arpl
inc
aad
mov
hlt
or
lea
jo
lds
mov
cmpsl
push
sarl
jg
call
movsb
cmpsb
push
mov
jmp
jne
jge
xchg
sbb
xchg
rcl
aam
ljmp
add
out
lahf
sbb
cwtl
outsl
js
dec
mov
mov
xor
mov
movsl
sub
pop
and
mov
lcall
loop
imul
pop
mov
fdivl
jo
shl
jbe
lock
test
faddl
lock
sub
pop
pushf
and
mov
pushf
gs
adc
pop
icebp
adc
mov
lcall
enter
mov
std
jle
cmp
cmc
gs
imul
ret
jge
dec
enter
sub
pop
mov
xchg
jg
push
push
movsb
inc
scas
std
insl
inc
pop
cmpsb
sbb
std
dec
jge
and
xchg
sbb
cmpsl
pop
rol
pop
adc
mov
call
or
push
mov
loope
xor
incb
fwait
cmp
sarl
int
cmp
and
mov
mov
cmp
adc
mov
mov
push
or
ljmp
inc
dec
and
push
push
stc
mov
sbbb
adc
pop
push
aad
jmp
lds
nopl
icebp
arpl
lahf
mulb
xor
or
adc
lret
and
out
mov
add
and
push
mov
les
in
xchg
aad
dec
fldl
outsb
or
test
add
jmp
mov
xchg
cltd
mov
mov
fimuls
out
scas
xchg
clc
in
jnp
pop
pop
fst
pop
dec
sbb
ja
push
aad
adc
push
pop
sbb
dec
cmp
inc
movsb
cmp
inc
loop
in
pop
insl
scas
add
sbb
cwtl
mov
orl
dec
jbe
scas
jnp
inc
test
push
add
incl
call
scas
pushfw
sub
and
adc
fs
movsb
jb
inc
push
mov
mov
jb
inc
or
lock
push
xor
sub
inc
push
out
inc
call
inc
jne
pop
jge
sub
cwtl
push
cmpsb
stos
add
test
fidivl
icebp
rorb
dec
pop
sahf
adc
iret
in
xchg
scas
lcall
jb
sub
cltd
add
aad
dec
nop
es
push
iret
jnp
outsb
sbb
hlt
pop
addb
cmc
cld
dec
push
adc
xchg
stos
and
ljmp
imul
sbb
mov
cmp
lock
dec
mov
sbb
jne
fdivs
repz
ljmp
rol
cmp
aas
or
fwait
push
lcall
cmp
and
fbld
or
pop
cmp
pop
lock
sub
es
jno
mov
add
or
sub
call
jg
pop
pushf
fisttps
mov
rcll
decb
sbb
sbb
enter
sti
pop
loopne
push
pop
ss
mov
adc
mov
sahf
pop
or
sub
ljmp
mov
fwait
sub
lds
stos
pop
stos
es
mov
cmp
jg
and
adc
mov
pop
jle
incl
and
dec
mov
xchg
xor
data16
adc
inc
shlb
out
rclb
cmp
cld
sbbl
push
jne
pushf
xor
mov
dec
cmpsl
aad
hlt
push
fwait
push
stos
scas
test
iret
or
outsl
mov
dec
add
cli
xor
and
xchg
adc
fsubrl
sub
enter
mov
repnz
jle
xor
das
mov
jg
test
test
adc
cs
cltd
incl
cmp
insb
jl
push
and
nop
mov
xchg
ret
add
lds
adc
lcall
dec
mov
repnz
js
lcall
lcall
cmc
dec
fcoms
push
xchg
insb
pop
sar
ljmp
xchg
imul
lret
pop
pop
adc
mov
and
bound
mov
ja
jno
leave
mov
int3
les
mov
or
xor
daa
mov
mov
in
sub
cmp
add
dec
and
popf
fisubrs
push
pop
clc
mov
bound
or
int3
rol
das
es
loop
sub
lock
test
cli
aaa
push
stos
mov
cwtl
push
push
mov
lea
outsl
js
shlb
pushf
lock
outsb
inc
jnp
dec
mov
mov
sbb
in
imul
mov
cmp
adc
dec
mov
clc
push
sbb
pop
add
or
add
dec
js
cmp
aas
sbb
add
ror
cwtl
loope
mov
lds
pop
sar
xlat
mov
pop
in
int
xchg
cli
push
sahf
je
mov
pop
mov
push
add
les
ret
inc
push
mov
hlt
adc
mov
add
pop
cmc
lds
lahf
and
rcl
sub
pop
jl
xchg
add
mov
shll
in
pop
cli
inc
xor
mov
push
jg
pop
push
xchg
sbb
xchg
xor
mov
outsl
clc
fwait
in
popf
sbbl
sbb
xor
sbb
add
lods
arpl
int
pop
push
xchg
jne
pop
cmpsb
adc
sarb
or
pop
hlt
arpl
cmpsb
mov
pop
lods
movsl
shll
in
push
or
lds
mov
xor
push
jg
jp
ja
jp
movl
int3
sub
std
jl
fstl
std
cwtl
enter
into
loopne
fbld
sub
inc
and
or
or
aad
push
cli
lcall
dec
movsb
outsb
mov
or
dec
subb
dec
fcoml
dec
dec
mov
scas
call
inc
cld
cmp
push
frstor
fstpl
push
aad
rcrl
jle
xchg
test
adc
pop
mov
decl
cmpsb
out
imul
aad
les
sub
push
jo
cmp
call
and
outsl
push
inc
rcrl
dec
inc
lods
lea
jp
lret
pop
jo
mov
fnstsw
out
stos
imul
daa
loop
mov
and
or
movb
sub
xchg
sarb
pop
in
push
push
sbb
dec
jg
loope
dec
ss
imul
pushf
fdiv
out
js
lret
push
or
mov
jbe
xchg
and
cs
pop
xchg
cltd
pop
les
outsb
ljmp
jno
negl
pop
out
or
sbb
mov
jno
ja
add
sar
jp
inc
adc
xchg
cltd
clc
mov
test
loop
push
pusha
ss
movsb
xor
pop
ficoms
cld
mov
sar
sub
dec
fcomps
dec
call
inc
das
out
cmp
adc
sbb
add
in
aaa
mov
push
and
jb
push
imul
cmp
cmp
push
xor
xchg
cwtl
jle
jmp
add
in
les
call
dec
fistpll
cmpsb
icebp
out
cmp
push
bound
or
jns
stos
xchg
ljmp
mov
ljmp
push
pushf
cs
and
fsts
test
sub
sti
mov
negb
cltd
enter
pushf
mov
mov
icebp
add
ret
iret
or
enter
mov
sbbl
fldl
aaa
or
adc
loopne
fs
sbb
jbe
sbbb
sahf
loopne
dec
push
andl
jo
xor
adc
push
clc
imul
mov
shlb
pop
dec
shl
add
add
mov
ficoml
ljmp
cmc
movb
aas
add
cmc
sub
pushl
push
fs
int3
aad
mov
flds
or
in
mov
fwait
clc
imull
imul
ja
xchg
mov
lods
xor
out
arpl
hlt
mov
je
cld
les
popa
cmp
lahf
mov
mov
inc
insl
xchg
pop
sub
lock
pop
bound
xor
pop
popf
jp
dec
orb
push
in
xchg
push
inc
test
fwait
mov
pop
mov
dec
sub
testl
pushf
pop
dec
leave
movsb
lret
stos
push
pop
push
out
jmp
lods
push
pop
mov
and
cmp
sti
inc
xchg
mov
adc
pop
repz
mov
push
fnstenv
imulb
sub
ret
or
push
lcall
loopne
push
adc
pop
push
jb
pop
push
scas
xchg
mov
mov
addl
mov
data16
das
out
mov
xor
call
jge
clc
movsl
push
clc
out
orl
sbb
xchg
cmp
add
add
xchg
mov
call
or
xor
pusha
jno
cmpsb
pop
call
mov
push
outsb
fistpl
push
std
mov
pop
jb
mov
out
std
cmp
nop
mov
sbb
mov
les
inc
mov
fdivl
adc
push
jmp
test
adc
rorb
dec
cmp
mov
mov
daa
pushf
das
ds
call
cld
gs
push
inc
loope
add
shrb
jnp
pop
push
mov
sbb
add
xor
pusha
inc
push
vshufpd
test
pop
hlt
cmp
sub
into
cs
aam
mov
jg
mov
es
insb
mov
cmp
mov
or
pop
push
daa
stos
jl
mov
adc
or
frstor
out
arpl
inc
mov
enter
and
outsl
clc
cmp
xor
cmpsl
push
lods
lcall
pop
mov
or
ret
adc
hlt
in
push
mov
incl
xchg
mov
cmp
out
fists
or
jo
xorb
jmp
es
scas
cmc
ret
pusha
fwait
ret
shl
sbb
into
jae
aad
aam
fidivrl
xchg
mov
push
in
pop
push
sub
scas
adc
xchg
xchg
adc
test
xchg
and
sbb
bound
in
jno
ret
movsl
clc
incl
inc
xor
mov
mov
dec
sub
dec
sbb
rcr
cmp
cmp
xchg
inc
xor
jb
das
shlb
lods
jne
xor
pop
data16
push
dec
mov
cmp
or
cmpl
jbe
repnz
dec
ljmp
sub
sub
mov
mov
pop
add
popa
mov
pop
mov
lahf
lock
mov
jle
ja
scas
pop
dec
js
mov
mov
fs
je
jae
add
aam
andl
push
sub
addb
shll
daa
sub
or
dec
jl
pop
cmp
inc
xchg
push
sbb
scas
sbb
aas
test
inc
movsl
out
pop
pop
in
je
add
inc
sbb
mov
jne
incl
outsl
les
int
jl
pop
insb
and
jae
lahf
std
mov
lods
shrb
cli
xchg
mov
inc
adc
add
scas
mov
mov
or
pop
sar
sbb
jl
mul
repz
jns
sub
icebp
mov
or
std
dec
cs
sbb
xor
fiaddl
mov
push
fmuls
shll
mov
and
data16
mov
shll
jg
lods
ljmp
xor
fisttpll
xlat
imul
jns
xor
std
pop
jns
outsb
add
shlb
in
lcall
xchg
lahf
push
int
mov
loopne
mov
mov
dec
mov
insb
sbb
cmp
add
jb
xor
stos
in
mov
jae
push
insl
and
jg
test
sahf
adcl
fucomp
scas
test
or
mov
stos
mov
movsb
mov
repnz
das
mov
ficoml
cmp
outsl
push
add
xchg
pushf
inc
fidivrs
pushf
sub
sub
sbb
push
push
push
mov
adc
out
adc
scas
mov
adc
adc
aam
lock
fimuls
insb
pop
jge
mov
mov
out
cmpl
or
mov
xor
xor
ja
ja
and
xchg
add
fwait
out
lock
xor
test
andl
pushf
fstpt
pop
mov
xor
or
lret
cmp
cli
pop
mov
dec
mov
mov
js
jge
mov
popf
push
lock
ljmp
sti
neg
pop
and
inc
lret
jmp
lcall
sub
stc
lock
das
xchg
sub
inc
test
add
and
fcompl
pop
pop
movsb
shrb
mov
int
push
add
clc
or
push
jmp
xor
xchg
cmp
jg
inc
shl
mov
test
xor
sahf
mov
mov
into
adc
mov
outsl
lret
pop
icebp
ljmp
cli
int
lods
jmp
scas
pop
push
testb
mov
sbb
cltd
add
sbb
xchg
das
clc
mov
jb
loopne
test
and
cmp
sub
or
out
cmpsb
test
or
pushf
mov
in
hlt
sbb
pop
ljmp
in
push
jle
push
repz
pop
das
sbbb
decl
mov
and
inc
adc
push
xchg
insb
xchg
ret
sub
int
and
push
add
mov
and
adc
ret
fisubrs
addr16
pop
outsl
inc
push
sar
jg
jecxz
and
leave
ja
clc
stos
pop
into
cltd
sbb
pushf
aam
jb
pop
or
sbb
sub
out
xor
or
mov
jl
fbld
xor
mov
lea
push
and
ss
cli
out
leave
push
mov
out
clc
dec
pusha
ficoml
nop
callw
inc
add
mov
xor
inc
mov
add
loope,pn
and
lock
pushl
push
dec
hlt
adc
mov
and
jo
stc
repz
jg
adc
sar
inc
das
sub
addr16
movsb
mov
ret
push
dec
mov
daa
icebp
lea
lcall
mov
mov
mov
dec
xor
or
push
or
aaa
sub
xor
push
xor
movsl
das
mov
inc
inc
das
daa
adc
mov
dec
jmp
mov
mov
scas
push
shrb
lods
js
mov
mov
cmc
dec
cmp
rcr
aad
rclb
mov
clc
cs
fsubs
or
inc
iret
dec
mov
cmpsb
insb
cmpsl
ret
jns
add
jp
nop
xorl
scas
cwtl
mov
addl
xor
add
add
shll
mov
jecxz
xchg
xchg
aas
push
sbb
dec
jge
ret
dec
mov
pushf
lahf
mov
inc
out
pop
mov
lahf
fisttps
and
sbb
shrl
fs
rol
jl
adc
imul
je
sub
decl
adc
daa
xchg
dec
mov
or
cmp
mov
mov
lret
lcall
loopne
push
mov
mov
mov
xor
mov
sahf
dec
pop
in
lret
std
ljmp
pop
scas
syscall
pop
jo
leave
mov
push
mov
orl
add
mov
je
dec
std
or
mov
call
test
push
sbb
pop
push
add
jmp
imul
neg
add
mov
cs
insl
mov
lods
mov
cmovbe
mov
mov
lcall
sbb
popf
test
pop
std
or
lahf
jbe
mov
mov
in
ret
test
adc
and
es
and
sub
in
xor
jg
mov
std
or
jno
rclb
aad
bound
out
pop
xchg
inc
sbb
cmp
cmp
ret
xchg
lock
inc
loop
mov
loope
cmp
fs
loope
jbe
outsl
push
fdiv
mov
shll
mov
xchg
lcall
or
pop
mov
pop
xchg
sub
lods
ljmp
and
fldenv
add
pushl
iret
and
cmp
jle
xchg
inc
cld
mov
popa
loop
pusha
in
adc
lock
xchg
xor
fisubl
push
out
pusha
sub
push
push
or
xchg
iret
in
loopne
ljmp
popl
mov
xchg
iret
cmp
mov
cmp
or
adc
imul
pusha
push
fmuls
push
enter
popa
std
add
jmp
adc
aas
mov
inc
cmp
push
fisttpll
stos
jp
insl
or
mov
inc
mov
outsb
call
test
add
pop
lods
pop
xchg
adc
adc
das
fstl
mov
aam
pop
mov
and
xchg
lods
das
or
fistpl
inc
or
into
mov
and
pop
xor
popf
push
flds
or
adc
jg
or
clc
out
fmuls
jno
cmp
push
test
fs
lds
inc
stos
sub
les
adc
stos
add
lods
pop
fists
fadd
xchg
rorl
jae
jle
pushl
dec
mov
xor
xchg
cmpsb
inc
mov
and
push
or
push
push
fs
xchg
sbb
pop
mov
pushf
push
mov
out
add
jp
je
repnz
jl
imul
mov
jle
enter
or
test
mov
loop
in
lcall
insb
add
pop
nop
cmp
fistpl
push
xchg
test
jg
das
fsubr
out
mov
cmc
sub
inc
mov
arpl
fisttps
mul
enter
cwtl
jns
mov
sbb
sub
pusha
add
mov
pop
sbb
js
fs
pop
cmc
add
pop
jno
dec
mov
and
jecxz
adc
mov
dec
std
mulb
pop
sbb
test
movsl
lret
fisttps
pop
fmuls
mov
dec
inc
cmp
add
data16
cmp
pop
shlb
sbb
mov
in
filds
sti
mov
sub
lds
aam
mov
decl
inc
dec
insb
inc
jg
cmp
ljmp
mov
cmp
jl
sub
stos
rcrl
mov
mov
pop
lock
xor
cmpb
inc
mov
or
inc
and
pop
dec
jp
cmp
add
in
push
mov
nop
cli
jg
das
clc
loop,pn
sarb
ds
cltd
push
fldl
and
xorb
cmp
sbbl
jnp
sub
lock
add
and
cmp
xchg
jl
icebp
aam
adc
fbld
mov
loopne
push
cmp
sbb
and
inc
pop
test
fisttpl
push
pop
scas
testb
je
pop
call
mov
push
cmp
popf
dec
xor
push
incl
add
add
into
out
sub
jno
lock
and
lods
cmp
shl
xor
call
mov
adc
cmpsl
cmc
sub
fsubrs
incl
or
rorb
mov
and
sbb
decl
arpl
fwait
insl
mov
push
sub
shrl
setp
repnz
popa
insb
push
jle
ret
fs
and
xor
cld
sub
fbld
pop
lret
sahf
pop
je
sbb
add
es
icebp
cli
jo
jb
and
or
mov
lret
xchg
push
jg
xor
add
outsl
jg
lea
adc
repz
lods
mov
cs
lods
sbb
in
sbb
xor
mov
jle
push
jmp
jbe
lods
out
scas
iret
add
mov
mov
fsubrs
or
addb
ljmp
into
cli
xchg
cmc
mov
outsb
xchg
out
dec
sbb
sub
pushf
pusha
mov
jl
pop
incl
imul
lcall
cli
rcll
jae
add
jnp
sbbb
sub
ljmp
js
flds
cmpsl
pusha
sar
inc
mov
jb
das
push
rcr
loope
icebp
rsm
adc
orl
test
xor
inc
push
ds
mov
add
ljmp
xchg
addb
fists
popa
loop
negb
or
xor
test
jecxz
jg
stos
xchg
cwtl
push
movsb
lods
mov
jl
inc
test
sbbl
xchg
dec
pop
mov
sub
fmul
addr16
sbb
push
in
pop
push
pop
dec
xchg
insl
decl
pop
loopne
int3
xchg
lods
jbe
lods
or
or
in
pop
xor
std
mov
push
dec
iret
dec
or
mov
nopl
fwait
insb
push
xchg
jg
lcall
cld
mov
mov
add
sbb
cmp
enter
lea
cmp
stos
das
lds
xchg
mov
or
or
dec
fcomip
sub
jmp
mov
push
push
enter
sti
mov
push
jmp
adc
out
add
xor
push
dec
lcall
jno
jbe
in
jecxz
outsl
pop
dec
xchg
adc
enter
jne
or
scas
mov
cmpsl
shrb
and
add
pop
adc
sbb
lods
call
lds
out
nop
push
cwtl
jbe
cmc
lds
pop
and
push
mov
cmp
dec
cli
adc
into
sub
mov
jle
bound
sti
inc
lea
lods
or
dec
ss
push
adc
mov
inc
outsl
mov
ret
mov
ret
push
mov
add
idiv
inc
fs
cltd
adc
push
pop
jo
cmp
pushf
mov
and
mov
clc
decl
dec
js
in
test
addr16
movsb
icebp
divl
dec
xchg
cli
lods
jle
mov
mov
jg
popa
lods
mov
dec
hlt
bound
lock
push
mov
push
pop
inc
clc
jbe
movsb
pop
popa
outsl
movsb
and
sbb
add
lods
push
add
aaa
sbb
mov
lock
jg
pushl
sbb
push
pop
lods
sbb
fwait
mov
pop
aad
int3
sub
pop
jb
sub
lock
fsubrp
jle
inc
pop
inc
fisubl
movsb
pop
iret
loop
xchg
xchg
dec
rorb
js
xchg
mov
mov
add
shll
lods
call
aaa
movsb
add
stc
jp
insl
js
and
add
jmp
jb
xchg
imul
cltd
sarl
add
xor
roll
lcall
enter
jmp
mov
fucomi
mov
mov
nop
add
push
pop
movsl
mov
mov
fsubl
mov
sub
ja
lcall
mov
call
push
daa
inc
mov
and
sub
lcall
in
push
fwait
pop
mov
shll
lock
jle
lods
adc
repnz
sarb
and
mov
cmp
es
lret
outsb
add
mov
cld
jl
jno
and
imul
aam
pop
outsl
mov
cmp
and
adc
mov
out
insb
fs
push
clc
inc
jo
outsb
xor
or
push
jo
sub
out
cmp
dec
sbb
mov
and
das
mov
stos
lret
xchg
subl
lret
pusha
outsl
leave
ret
xchg
mov
shrb
std
xor
sbbb
loope
ret
cmp
sbb
sti
mov
ljmp
sti
sbb
sbbb
incl
sbb
sar
decl
push
imul
and
loope
push
sub
je
in
nop
lret
scas
mov
mov
push
jl
or
mov
add
aam
shrb
xchg
and
add
pop
cmc
test
sub
sub
cli
lcall
ficompl
push
lahf
pop
fistps
jbe
popa
adc
add
jb
mov
xor
in
sti
stos
mov
arpl
sbb
ret
imul
mov
inc
cwtl
es
mov
loopne
test
leave
adc
sub
sbb
jl
xor
jnp
hlt
decb
jle,pn
jnp
sbb
lock
add
rorl
sbb
aam
jbe
pop
call
add
data16
adc
es
das
add
ljmp
out
mov
outsl
les
and
jnp
in
pop
jae
ljmp
fisttpl
jnp
pop
jne
jl
mov
adc
cmpsl
jae
push
das
inc
mov
stc
scas
inc
rcrl
adc
pop
ret
mov
shlb
incl
iret
jne
jnp
jb
and
jg
pushf
xchg
cld
lcall
stos
or
mov
jno
mov
outsb
mov
mov
xor
inc
mov
cwtl
jp
ljmp
xchg
filds
movsb
fwait
xchg
rcrb
fdivr
insb
in
lret
inc
scas
inc
push
pop
ret
sbb
or
mov
outsl
adc
jg
mov
js
shlb
cwtl
movsl
dec
cmp
out
lret
icebp
iret
ss
outsl
lock
call
ja
fmuls
push
xor
adc
or
inc
mov
mov
mov
mov
push
inc
clc
fimull
mov
adc
mov
mov
dec
and
adc
dec
xchg
dec
incl
in
test
sbb
test
aad
call
jecxz
or
dec
test
mov
outsl
sbb
pop
sub
mov
imul
leave
int3
mov
and
pop
xor
sti
test
out
sub
lods
jmp
lea
test
lcall
add
pop
jo
mov
mov
cld
pop
imul
jne
jge
ss
or
lcall
or
icebp
fcomip
scas
push
sahf
cmp
cmp
adc
pop
or
std
sbb
stos
push
jno
test
clc
test
inc
sbb
scas
loop
gs
add
dec
and
outsl
mov
and
icebp
fmulp
clc
call
mov
cmp
stos
in
mov
in
push
jns
sti
fimuls
dec
je
add
cmp
dec
xchg
jne
sub
add
les
repnz
cmpsl
stos
push
mov
add
lcall
or
out
jne
sbb
jp
ret
cmp
bound
data16
cmp
mov
subb
ret
rcll
inc
dec
lret
ljmp
adc
leave
push
pop
int
fwait
mov
std
js
cmc
mov
inc
test
outsl
or
pop
sbb
cld
ljmp
xchg
nop
mov
xchg
add
int
sarl
popa
pushfw
adc
pusha
mov
arpl
mov
aad
xchg
bound
out
stos
aam
enter
incb
mov
nop
sub
test
and
aas
pop
icebp
mov
push
add
push
jns
push
inc
icebp
out
inc
push
es
mov
icebp
lcall
jo
out
push
dec
in
in
push
dec
ja
pop
test
lret
adc
cmp
rcl
lds
sub
and
ret
mov
sbb
pop
das
lods
aad
mov
aad
mov
jp
mov
outsl
sbb
lret
mov
pushf
popf
ss
daa
cmp
push
dec
cmp
cwtl
fsubrp
push
push
inc
fisubrl
push
jmp
dec
ret
cmp
xor
jmp
lcall
test
icebp
scas
sbb
loop
cwtl
idivb
push
mov
lods
aam
xor
push
and
cmp
inc
jle
or
dec
cld
bound
ljmp
mov
or
xor
jmp
or
cmp
in
mov
xor
or
sbb
rcrb
rol
and
repz
pusha
xchg
push
cmp
scas
imul
mov
mov
insb
nop
pop
xor
js
hlt
mov
cmp
dec
xlat
sub
xor
mov
repnz
inc
lods
sub
add
sub
das
bound
xchg
pop
mov
clc
push
pusha
cwtl
sub
subb
jno
or
or
ljmp
les
call
lahf
lods
mov
scas
adc
inc
add
add
add
inc
and
xlat
pop
fs
bound
cli
shrl
gs
jg
mov
inc
sbb
dec
incl
inc
in
push
leave
or
call
je
hlt
mov
inc
jbe
pop
dec
push
hlt
rclb
jbe
pop
fucomp
pop
mov
sub
insl
mov
inc
adc
outsb
mov
stos
mov
adc
dec
adc
push
mov
movsb
mov
inc
xchg
mov
push
incl
cld
fstl
lea
cltd
sti
pushf
fdivrl
cmp
mov
mov
mov
and
sbb
sbb
scas
push
mov
fs
mov
add
stos
lret
push
add
test
jp
fstp
xchg
xor
sbb
ret
cltd
cli
imul
or
xchg
inc
push
testb
in
ds
leave
nop
add
add
push
hlt
fnstenv
push
fsubrl
mov
into
cmp
ret
mov
jmp
js
mov
pushf
and
xor
xor
adc
sar
aas
mov
cmp
and
jns
and
mov
jg
inc
loopne
imul
pop
pop
outsl
into
pop
in
iret
cld
pop
repnz
add
inc
fcoms
xchg
dec
lret
movsb
imul
loop
cmpsb
jg
clc
add
jl
xor
lret
js
decl
pusha
into
mov
les
enter
cmp
push
pop
ret
fiadds
scas
fwait
aad
cmp
nop
les
loopne
push
add
xchg
mov
orb
push
scas
mov
lods
ss
dec
incl
mov
xchg
dec
les
add
sub
cmp
jne
ficomps
lcall
and
pop
neg
cmc
jg
movsl
xor
movsl
cmpsl
sub
setge
outsl
push
mov
adc
inc
jle
call
sarl
pop
mov
xor
test
out
mov
and
jbe
std
pop
das
cli
aas
sbb
dec
into
xor
sahf
xorl
jne
push
push
mov
insl
add
sbb
adc
add
xor
jo
shrb
lock
or
lds
ljmp
or
clc
cld
fmull
mov
scas
or
xor
push
out
dec
call
ljmp
hlt
decl
lret
jl
int3
inc
pop
xchg
fcoms
lahf
mov
or
mov
sub
das
movsl
sbb
adc
out
cmp
jp
push
sarb
inc
std
xor
fadds
jne
cwtl
insb
sub
ljmp
cmpsb
popa
or
test
mov
xchg
mov
es
clc
in
dec
daa
sbb
mov
inc
div
and
mov
idivb
test
and
xchg
hlt
mov
cmp
adc
mov
and
xchg
push
call
mov
scas
xor
add
lods
loopne
push
push
ret
dec
in
mov
pop
add
dec
dec
sbb
and
mov
inc
and
aam
cmp
test
fcmovbe
repz
xchg
xchg
repnz
ljmp
pop
in
outsl
xor
xchg
pop
pop
jnp
jge
pop
pop
push
pop
imul
out
cli
dec
xor
arpl
add
icebp
jle
or
lods
shl
in
add
mov
dec
aad
push
insl
mov
daa
hlt
shl
movsl
nop
call
mov
jno
and
push
cmp
adcb
inc
cmp
add
sub
nop
mov
dec
push
or
popf
mov
cmc
cmc
mov
sub
incb
sti
icebp
mov
dec
popf
sbb
mov
aad
push
mov
push
xchg
pop
sub
or
repz
inc
pop
loopne
cs
pop
insb
loope
mov
in
sbb
dec
cld
aaa
lret
pusha
and
or
adc
jns
add
add
push
or
or
test
test
inc
jb
loopne
sbb
jmp
fs
xchg
dec
ror
jl
sahf
inc
out
ljmp
jbe
xor
std
pop
or
cvtps2pi
out
inc
mov
decl
sti
mov
pop
out
inc
jae
aas
aaa
mov
test
push
sbb
push
stos
int3
test
ss
movsb
fimuls
outsl
jle
inc
adc
call
push
pop
add
pop
dec
ds
int3
stos
pop
dec
mov
add
adc
cld
ja
clc
ret
mov
or
add
daa
or
mov
mov
fbld
adc
ljmp
gs
xchg
adc
inc
jmp
cltd
cmpb
lcall
pop
cli
ficompl
add
adc
mov
sub
lods
jbe
cwtl
inc
inc
inc
lods
fsubl
jl
lock
mov
out
bnd
inc
shll
dec
cmp
xchg
aas
lock
aam
inc
sub
sbb
call
clc
push
enter
pop
cmp
icebp
pop
je
mov
adc
ja
dec
adc
pusha
xchg
sbb
testl
rcr
sarl
stos
jnp
cmp
push
es
add
fwait
outsb
or
add
lret
repz
outsl
cltd
adc
inc
add
pop
push
cmp
jnp
leave
and
lods
lock
inc
decl
xchg
pop
xor
fmull
shlb
jg
dec
ret
mov
nop
mov
add
cmp
std
filds
mov
out
jecxz
push
incl
stos
mov
dec
or
repz
mov
mov
and
push
adc
dec
mov
inc
enter
mov
dec
sti
jl
stos
jge
cmp
call
aas
lahf
aaa
xchg
mov
push
loop
jno
mov
roll
jb
push
sar
ror
pop
stos
push
dec
das
adc
ss
test
dec
xchg
fisubs
push
data16
ljmp
rolb
inc
cmpsb
lcall
xchg
cld
pop
bound
jg
mov
data16
mov
add
and
fstpt
fstpl
xor
lcall
cmpl
call
leave
shrb
dec
push
ret
inc
pop
jg
je
jle
sub
mov
dec
xor
push
inc
js
push
adc
fwait
and
lods
fimuls
dec
lcall
pop
clc
fstpt
and
outsb
shll
or
decb
out
jecxz
jle
cwtl
jp
pop
mov
mov
dec
fcoml
dec
test
dec
jnp
add
dec
lock
es
mov
orb
add
rol
aam
cmp
sub
add
data16
lods
cmp
cmp
xlat
xchg
ss
mov
inc
insb
cmp
xchg
jle
bound
mov
jne
clc
sub
add
xor
xor
subb
cld
testb
repnz
sbb
test
sub
pop
push
hlt
sub
push
mov
hlt
mov
popf
dec
cmp
mov
pop
cli
adc
clc
hlt
inc
mov
popa
fiaddl
movsb
scas
mov
std
shrb
push
mov
dec
adc
cmpsl
insb
cltd
or
and
mov
push
ja
flds
push
mov
add
inc
std
sub
iret
mov
insl
add
mov
push
cmp
cld
mov
mov
inc
pop
push
and
mov
push
and
and
pop
or
ret
in
icebp
and
jnp
pop
jbe
subb
div
mov
les
sar
inc
jo
jle
and
push
subb
and
inc
adc
adc
std
decl
and
cmp
dec
test
out
cmp
xchg
in
mov
jne
lock
mov
clc
popf
cld
hlt
popa
lcall
ror
and
inc
cwtl
and
inc
xor
inc
add
inc
or
push
movsb
das
xor
mov
sar
addb
inc
push
add
jle
push
int
sahf
xchg
movsb
pop
aad
lcall
fdivrp
mov
call
mov
stos
out
shl
decl
or
push
mov
sub
loope
dec
push
cmc
pop
outsb
cmp
push
imul
or
mov
ja
lds
test
les
dec
fstl
pop
pop
adc
insb
es
cwtl
or
aam
push
ljmp
icebp
rcl
int
push
adc
dec
add
and
icebp
pop
cltd
add
repz
push
xor
dec
add
movzbl
adc
out
add
outsb
ljmp
std
fistps
sub
push
bound
and
mov
inc
or
cld
push
and
mov
jmp
sar
mov
lcall
xchg
cmp
or
xor
leave
lods
ja
mov
sbb
enter
sbb
shr
icebp
scas
cli
fcmovnb
dec
test
add
popa
inc
mov
or
sub
test
mov
shlb
xchg
cmpb
fcomps
or
sub
mov
mov
xchg
mov
int3
lods
and
or
mov
add
pushl
pop
mov
jo
les
mov
jg
push
cmp
movsl
push
sub
fwait
jmp
push
imul
incl
popa
lods
adc
andl
sbb
mov
in
lret
sarb
popa
cld
gs
fbld
pop
mov
rcl
incl
loopne
sub
push
lahf
pusha
mov
lea
addr16
inc
pusha
movsl
insl
pushl
loope
loopne
ljmp
jae
adc
aas
pop
jo
mov
pop
mov
dec
cs
clc
push
cmp
es
mov
fidivl
sbb
jp
mov
inc
outsl
repnz
adc
call
dec
push
rclb
ret
push
mov
ret
xor
imul
outsl
ret
pop
jle
out
xor
aas
push
mov
pop
mov
fiadds
lea
cmpsl
les
popa
out
jb
loope
imul
mov
push
jns
add
pop
xchg
xor
cli
push
dec
or
mov
xchg
dec
adcl
add
insb
bound
cmp
test
js
loopne
dec
mov
mov
pop
stos
cld
jmp
lcall
and
sub
int3
mov
insl
movsb
push
fwait
cmp
cmp
or
push
and
cli
mov
dec
cmp
add
loopne
sub
orl
xor
mov
lock
xor
add
int3
fsubr
xor
or
push
sub
mov
jo
mov
xchg
pop
movsb
mov
inc
fwait
pop
pop
ljmp
add
mov
cmp
ds
add
adc
nop
pop
mov
mov
repz
es
adc
pop
arpl
push
out
call
sub
push
jp
sbb
cmp
daa
xor
push
inc
ds
fnstenv
shrb
loope
pop
add
les
bound
push
pop
push
xor
push
cmpsl
out
mov
fsubl
es
mov
scas
pop
mov
push
cwtl
pushf
addl
sub
lcall
cmp
and
adc
idivb
lock
lret
roll
lea
sub
adc
or
dec
dec
sub
clc
mov
inc
pop
es
xchg
pop
sub
repnz
lods
inc
repz
xchg
xor
inc
lcall
je
add
mov
andb
mov
inc
popa
or
out
and
mov
pop
out
sub
shl
in
f2xm1
push
leave
ret
fbld
push
jp
popf
mov
aad
decl
shlb
mov
pop
jg
outsb
sub
mov
xor
fdivrp
imul
fldt
mov
loope
sbb
push
push
push
push
subl
pop
and
jl
jg
mov
addb
push
xor
in
xchg
and
lcall
mov
xchg
add
pop
fidivrl
repnz
rol
sub
xor
notl
rorl
push
inc
jbe
cmp
ljmp
add
fldt
pop
lea
aaa
dec
mov
jno
adc
jge
sub
incl
adc
xchg
cmp
out
xchg
mov
dec
and
add
push
cld
jae
or
adc
out
mov
jo
shlb
mov
clc
pop
testb
fsubrp
sub
scas
call
idivl
cmpb
dec
jle
jle
or
mov
or
shll
ret
fiaddl
movsl
pop
sub
rcll
mov
mov
cli
push
mov
and
adc
fisttpll
jp
or
mov
xchg
sub
ljmp
mov
iret
scas
aam
pop
adc
xchg
sub
inc
outsl
lods
push
cli
in
leave
sbb
mov
insb
fdivs
in
ss
cmp
data16
pop
incb
out
pop
push
jle
clc
jmp
call
adc
jbe
pop
pop
out
subl
jnp
sti
mov
lds
insl
pop
sub
incl
in
pop
dec
inc
sar
push
popa
aam
push
les
int3
mov
enter
fwait
mov
imul
pushl
push
mov
int3
in
jecxz
jp
cli
mov
icebp
fdivs
inc
mov
mov
push
jecxz
push
sub
or
and
and
repnz
push
les
inc
lret
adc
lahf
adc
cwtl
nop
lock
pop
cmp
cmpsb
dec
scas
decl
negb
mov
cmp
shlb
fs
in
push
mov
cmp
ljmp
xchg
xchg
std
xor
adc
lcallw
jmp
mov
lods
movsb
lods
ret
mov
loopne
ljmp
cli
inc
mov
push
movb
addr16
lods
or
mov
and
cli
cmp
cmp
mov
rolb
push
adc
push
dec
clc
incl
adc
dec
mov
sbb
dec
jp
call
ret
sahf
cmp
pop
push
cmp
sub
cmp
ss
sub
mov
cmp
mov
push
jo
test
jg
ja
inc
push
mov
push
inc
ljmp
pop
jle
aad
pop
jg
or
decb
dec
mov
inc
push
incb
lock
lds
pop
inc
ds
ficoml
test
ljmp
pushl
adc
sbb
fimuls
sub
aad
xchg
add
jbe
or
aam
aaa
rolb
mov
add
mov
xor
insl
mov
fidivl
push
xchg
and
dec
sarb
les
xchg
fdivrl
lds
lcall
or
loop
pop
inc
les
xchg
cmp
mov
divb
stos
xlat
jg
cmp
sub
adc
cwtl
xchg
jle
add
out
jecxz
pop
pop
adc
lock
bswap
test
jge
pop
cli
mov
pusha
dec
mov
mov
sub
pop
shrb
ja
add
orl
aaa
cmpsl
ljmp
shrb
in
mov
enter
or
cmpsl
xor
sahf
movb
test
xchg
sub
ret
test
shlb
mov
dec
icebp
mov
mov
xor
popl
fwait
or
mov
dec
shll
test
pusha
loop
or
test
shlb
dec
push
lock
test
xchg
testl
cwtl
fmul
jle
cs
pop
mov
xchg
push
push
jbe
sbb
movsl
jge
cmp
push
sbb
out
loop
mov
ss
les
movsl
arpl
mov
jbe
inc
jge
and
sbb
test
jg
stc
cmpsl
inc
sub
leave
dec
jge
fmull
cli
mov
test
cmp
mov
push
jmp
xchg
or
xchg
pop
dec
sbb
shr
repnz
inc
in
jmp
cmp
in
cltd
lock
cmc
inc
das
xor
xor
aam
neg
jo
jo
jle
bound
xlat
push
sbb
mov
shlb
add
push
jo
xchg
mov
dec
out
xor
adc
xor
dec
sub
push
ljmp
or
mov
sarb
movsl
in
push
mov
xor
jno
xchg
mov
xchg
loop
scas
mov
repnz
js
xor
repz
in
add
cmp
pop
jmp
jmp
cmp
or
dec
inc
adc
xor
xchg
ljmp
sar
sbb
pop
inc
cmp
mov
or
mov
shrb
rcrl
int
sbbb
mov
adc
incl
mull
in
sbb
cmp
xlat
pop
call
mov
sub
aad
xor
repnz
push
sub
mov
mov
xchg
mov
stos
inc
std
pop
inc
data16
pop
mov
jbe
and
mov
sub
mov
test
cmp
mov
cmpsl
pushf
add
stc
enter
cmpsb
pusha
popf
nop
push
mov
dec
aaa
push
jle
mov
cmpsl
add
cmc
clc
lock
pop
in
xchg
in
dec
insb
dec
adc
fldl
push
stc
jae
jo
scas
outsl
cli
dec
dec
cmp
mov
cs
lcall
mov
mov
mov
mov
mov
movsb
cmp
ss
mov
cmc
stos
in
js
mov
mov
outsb
dec
jae
pushf
inc
lret
das
mov
xchg
out
ror
jo
outsb
adc
js
ljmp
mov
test
adc
dec
enter
inc
xchg
addb
divb
sub
xor
addr16
push
push
push
data16
fbld
add
or
sub
adc
jle
pop
pusha
decb
jg
sub
adcb
movsb
addr16
adc
aaa
sub
or
add
cmc
mov
push
adc
push
stos
hlt
nop
ss
in
ret
mov
fldl
mov
adc
add
icebp
add
loopne
cmp
mov
jmp
clc
outsb
pop
cli
frstor
jno
das
imul
out
inc
test
add
mov
pop
cld
or
inc
push
pop
push
push
jb
mov
lock
cmc
sbb
mov
inc
push
lock
push
aad
mov
jne
daa
ret
cli
pop
sbb
sti
xchg
dec
jo
testb
outsb
xor
icebp
lods
shrb
fdivl
mov
add
inc
retw
add
fs
mov
mov
adc
in
pop
and
fs
mov
mov
or
add
je
out
mov
sub
sbbb
scas
fwait
push
adc
ds
outsb
loopne
add
mov
rcrl
rolb
ljmp
sbb
gs
inc
aam
test
nop
sbb
and
add
push
or
rorb
jmp
mov
and
lods
jae
rcrb
sti
dec
lahf
mov
push
ljmp
add
inc
dec
jne
fcmovnu
mov
fwait
and
cmp
int3
sbb
decl
add
jae
insl
pop
icebp
lcall
dec
pop
clc
pop
jge
imul
jno
add
testl
mov
mov
ja
es
sbb
inc
leave
push
cmp
adc
addb
hlt
loopne
add
pusha
sub
repz
sub
mov
push
rorl
mov
jp
xchg
push
dec
push
pop
xchg
aad
sub
cwtl
scas
add
das
ret
test
dec
xchg
adc
stos
mov
addb
andl
xor
fsubrl
jb
ret
stc
xor
xchg
sbb
or
insb
add
jae
loop
mov
mov
push
cmpsb
inc
pop
ret
cli
push
ret
lahf
dec
and
mov
mov
cmp
xor
add
dec
mov
push
jecxz
add
pop
pop
add
jno
lret
add
jl
push
xor
adc
in
arpl
inc
push
loop
jg
xchg
pop
test
add
lds
or
jecxz
rcll
sarl
and
movsl
mov
lahf
mov
insl
jl
clc
repz
popa
mov
enter
sbb
dec
cmp
dec
into
ret
incl
aam
mov
mov
mov
mov
out
inc
pop
mov
stos
cwtl
pop
scas
clc
mov
lcall
or
movsb
fnstenv
add
out
das
pop
ss
xor
and
fwait
inc
fcompp
xor
xlat
xor
xchg
mov
jle
xlat
mov
sub
lret
xchg
aad
pusha
xlat
cmpsl
repz
stos
and
mov
pop
and
xchg
mov
xor
push
mov
das
or
stc
mov
cld
mov
js
jbe
add
movsb
and
fs
fmul
je
sahf
or
mov
xor
cwtl
cltd
roll
lret
sbb
call
idivb
hlt
mov
pop
mov
adc
pushl
data16
es
cwtl
fstpt
cmc
inc
aas
lcall
xor
sbb
sbb
aas
loope
jmp
jg
or
shlb
xchg
cli
push
pop
jns
sbb
lret
xor
aaa
cmp
rorl
or
pop
inc
ljmp
in
stos
into
hlt
jmp
or
test
popa
jl
cmc
mov
jp
test
sub
sar
ja
mov
addb
xor
leave
pusha
push
pushl
insb
adc
nop
jge
scas
test
scas
nop
hlt
filds
iret
pop
pop
cmp
shrb
xor
pushl
sub
or
es
pop
call
ss
or
cwtl
xchg
cwtl
and
test
xchg
aas
cli
fs
mov
aad
aaa
push
sahf
pop
sbb
aas
xchg
mov
xchg
inc
or
lcall
jmp
mov
mov
out
or
scas
mov
add
cltd
xchg
sub
cli
push
mov
fisubrs
mov
aad
sub
hlt
sbb
insl
cld
push
dec
and
jle
movsl
push
xor
sub
push
push
shl
ljmp
cld
scas
mov
jl
dec
sub
adc
or
jno
scas
pusha
scas
cli
das
cli
xchg
and
rolb
ficoms
jno
and
mov
mov
sub
into
out
xchg
dec
cld
mov
mov
add
scas
mov
xor
shl
loopne
or
cmc
lea
je
cli
imul
jmp
incl
pop
sub
nop
jg
sbb
pavgb
insl
cmp
and
push
sub
xchg
xor
jo
inc
dec
hlt
fisubs
mov
mov
lcall
adc
sbb
addr16
mov
push
pop
cmc
lcall
xchg
fcoms
cmp
fnstsw
adc
push
jg
mov
jecxz
ljmp
push
ficompl
dec
mov
cmp
cmpsl
adc
cmc
std
xchg
ret
into
and
ljmp
outsb
jbe
lcall
les
sub
mov
mov
mull
sub
lock
mov
out
adc
add
mov
push
outsl
mov
ss
out
mov
xor
fisubs
inc
sbb
call
and
add
and
mov
jno
stc
and
faddl
add
aam
add
scas
sub
fnstenv
fbld
jbe
mov
movsb
ljmp
xchg
aaa
stos
mov
cmp
rcrb
test
pushl
mov
shlb
pop
jne
inc
mov
adc
push
jmp
je
or
dec
jp
gs
clc
aam
mov
mov
xor
mov
inc
out
clc
or
arpl
sbb
xchg
sarb
xchg
fistps
and
jnp
adc
mov
cld
loopne
adcb
lock
fcomip
les
fcmovne
fabs
xorb
and
push
jb
inc
mov
or
out
es
pop
pop
xor
cli
decl
jns
mov
mov
push
stos
stos
push
sbb
loopne
call
adc
xor
out
dec
or
mov
push
popf
push
push
and
add
mov
mov
xchg
xchg
pop
push
gs
subb
cli
call
dec
dec
push
sbb
and
jno
mov
int3
popf
xor
xor
dec
out
adc
add
mov
mov
fistl
ljmp
dec
cmpsb
inc
test
and
lahf
bnd
lcall
aaa
mov
cld
jo
outsl
out
or
mov
jg
dec
call
ja
ret
sub
ljmp
ljmp
cmp
mov
fldt
xchg
dec
enter
mov
sbb
test
add
push
push
daa
addr16
and
into
mov
rcl
inc
data16
jo
aas
insl
fldl
jg
jmp
stc
loope
xor
xchg
sub
add
dec
or
clc
bound
sbb
mov
sub
fmull
push
and
pop
push
jmp
sar
push
out
cltd
movb
inc
repnz
mov
push
call
nop
mov
ja
movsb
fsubrs
and
or
mov
mov
push
rolb
out
mov
sar
fstl
mov
cld
mov
sbb
jmp
or
jnp
cmp
inc
pushf
cmpsb
nop
std
lcall
cld
inc
sarl
lret
and
push
ja
pop
andl
pop
inc
lcall
outsl
pushf
add
adc
in
or
jl
lods
pop
or
xchg
jle
mov
push
mov
ret
adc
or
and
icebp
imul
aaa
push
js
insb
mov
fsubs
or
incl
gs
mov
pop
repnz
add
fdivr
adc
bound
pop
gs
jbe
jb
dec
add
lea
mov
add
idiv
in
pusha
add
cmp
int
sbbb
insb
xchg
repz
mov
fsts
jmp
sub
mov
push
pushf
enter
aad
lret
or
sub
push
cld
add
jl
mov
adc
sub
xlat
inc
jo
sti
xchg
mov
addr16
sub
jecxz
popa
jae
mov
mov
sahf
fwait
ss
movsb
mov
data16
iret
lret
lahf
push
add
dec
loope
shl
mov
mov
jno
sti
jg
mov
and
jo
adc
sub
jo
xchg
inc
pushf
clc
pop
aaa
mov
divb
test
vpshuflw
push
out
out
nop
sbb
push
mov
dec
or
dec
mov
outsb
lock
std
in
xor
ss
mov
stos
imul
outsb
fldcw
and
jl
out
mov
bound
add
pop
sub
pop
and
idivb
cmp
mov
sub
lcall
push
xchg
mov
push
int3
aam
dec
and
jbe
fiaddl
je
lods
iret
pop
mov
out
ss
ja
sub
xor
dec
popf
cltd
sarb
mov
dec
push
mov
fs
dec
call
cld
aaa
lods
and
push
lock
repz
out
cmp
fs
ljmp
cmpl
lret
or
xchg
adcl
stos
sbb
mov
cltd
xor
ret
dec
xchg
sbb
addr16
mov
sub
and
sbb
mov
fcomip
mov
jne
mov
divl
outsl
stc
rclb
jecxz
mov
test
lret
mov
mov
out
les
in
mov
shrl
mov
dec
in
cwtl
lret
fcoms
push
dec
jns
fildll
loop
fidivrl
mov
and
movsl
stos
jmp
in
sub
shlb
incb
push
hlt
pop
pop
xor
scas
jle
filds
sub
psrad
sub
mov
es
mov
fs
inc
cwtl
mov
and
jg
ss
jbe
mov
fistps
leave
xorl
stos
clc
call
inc
and
fwait
nop
ficompl
jae
arpl
repnz
inc
inc
stos
hlt
jg
inc
dec
push
mov
push
mov
incl
inc
lret
pushf
pop
push
add
push
testb
fists
lock
cld
in
nop
xchg
iret
in
push
test
sub
jg
add
mov
loop
jo
lret
imul
jno
jb
pop
test
mov
je
gs
sub
jp
sbb
sub
adc
fmull
or
filds
jbe
adc
test
xor
shlb
xchg
out
mov
mov
call
mov
int
test
jl
pop
fsubr
mov
or
inc
sahf
push
and
negl
test
adc
pop
stos
jo
dec
pop
push
js
lea
lcall
and
xor
push
push
jae
cli
out
cmpsb
add
int
adc
loopne
cmp
mov
cld
mov
sub
mov
xchg
lcall
push
enter
push
push
popf
push
shrl
in
and
xor
mov
cmp
repz
shld
jg
insb
sbb
pop
and
jg
in
hlt
notb
mov
add
xchg
movsl
xor
jl
fadds
or
and
mov
fists
lcall
cmp
mov
xchg
lods
das
bound
call
stos
outsl
and
and
fmull
or
mov
aad
mov
mov
orl
mov
dec
fisubrl
dec
in
or
incl
jmp
test
js
jae
add
xchg
add
pop
subl
mov
push
or
dec
mov
adc
and
push
jo
add
mov
hlt
xchg
cli
mov
sbb
test
sub
mov
jl
jg
icebp
dec
shl
mov
ficompl
dec
stos
jbe
or
les
aaa
cs
lcall
jne
cmp
pop
xchg
cmp
jbe
int
sub
dec
ret
notb
int3
hlt
fnstcw
add
ss
cs
out
jae
mov
push
cld
mov
xlat
daa
stc
ss
xor
xor
mov
cmp
inc
cmp
mov
or
add
insl
loopne
xchg
bound
cld
fmuls
jb
inc
xor
shlb
pusha
movb
cli
mov
xchg
dec
mov
xor
fwait
mov
mov
loop
ljmp
lods
pop
jae
pop
inc
ret
cmp
frstor
jmp
outsl
add
pop
hlt
mov
add
pop
mov
mov
dec
jbe
lret
adc
adc
std
mov
lret
mov
mov
icebp
xor
dec
or
fsts
mov
xor
shrb
mov
mov
cs
add
fprem
mov
mov
aad
xchg
and
mov
push
xchg
sti
pop
sub
xor
aaa
arpl
stos
inc
aas
xchg
repnz
adc
jecxz
fs
mov
jae
or
inc
dec
hlt
pop
hlt
loopne
inc
das
xchg
sbb
ss
outsl
test
gs
mov
xchg
pop
xchg
pop
stos
and
das
cmp
orb
rorb
dec
lret
mov
or
sub
fiadds
in
dec
lahf
ljmp
mov
fsubrp
dec
pop
repnz
or
je
gs
pushf
lods
inc
mov
imul
mov
in
jmp
lods
add
dec
inc
ljmp
inc
sbb
push
fildll
xchg
ds
cmp
lods
push
les
pop
fists
scas
clc
pushl
add
insl
cld
filds
pusha
nop
mov
pop
test
pop
cmpsb
jno
outsb
lcall
xor
mov
pushf
sbb
in
sbb
insb
imul
mov
mov
outsl
cmp
std
aaa
mov
clc
bound
out
pop
mov
les
or
pop
cmc
cmp
or
test
lret
call
cmc
adc
dec
sub
xchg
in
add
add
cmp
mov
lcall
inc
mov
cmp
cmpsb
pop
inc
loop
sub
sub
shll
xchg
xor
call
push
loopne
jg
bound
inc
sbb
test
xchg
adc
sub
sub
rcrl
loopne
loopne
add
sbb
js
lods
inc
jecxz
scas
data16
adc
ja
xchg
ret
incb
push
ficomps
ja
or
movsb
dec
adc
outsb
xchg
sahf
xor
xor
cli
xchg
mov
dec
cli
ja
push
xchg
mov
aad
rorb
insl
jmp
out
add
push
cltd
adc
pop
adc
fs
scas
push
xchg
cli
in
decl
aas
outsb
in
inc
push
xchg
xchg
or
mov
or
mov
push
jp
pop
inc
loop
adc
imul
test
sti
cmp
dec
adc
mov
or
push
mov
or
inc
push
movsb
lock
ret
mov
mov
adc
mov
rcl
dec
shl
popf
adc
fisttpll
sbb
mov
push
sub
call
je
aam
add
push
pop
lock
cmp
jmp
inc
pop
and
cmp
repnz
lea
iret
jne
push
adc
sbb
notl
loopne
sbb
pop
pop
fstpt
pop
dec
test
lret
out
inc
jns
stos
loope
ljmp
data16
into
ret
sub
dec
mov
push
sub
or
call
push
and
pop
mov
insb
dec
pop
cmpsw
and
sub
xchg
pop
sbb
lock
mov
add
cmpsl
xchg
call
add
push
mov
add
call
daa
movsl
icebp
popa
mov
jnp
mov
in
mov
loopnew
push
mov
cltd
push
mov
push
jo
push
neg
jbe
mov
sub
adc
es
cmp
push
jne
aaa
std
addr16
leave
pusha
mov
jge
mov
mov
pop
xlat
scas
mov
mov
pusha
in
test
sub
mov
add
scas
sbb
jmp
push
xchg
popf
push
mov
cwtl
outsb
dec
xchg
xor
xor
repnz
pop
cmp
bound
in
aaa
adc
push
mov
out
out
hlt
and
cld
pop
or
sbb
sub
in
mov
pusha
loopne
cli
lahf
das
pop
fs
mov
inc
cmp
hlt
decl
push
adc
out
push
fistps
popa
clc
sbb
movsb
inc
xor
push
lock
mov
jno
xchg
js
jmp
loop
dec
pushf
ja
ret
das
shlb
pushf
insb
and
scas
sti
jb
testb
add
sub
mov
jg
decl
push
add
shlb
jmp
add
inc
fdiv
adc
adc
mov
sbb
mov
jecxz
cmp
push
sub
or
call
xchg
sub
sub
fisubrs
sbb
in
aam
cli
pop
inc
ljmp
dec
inc
push
add
out
mov
push
xor
add
icebp
call
mov
outsl
arpl
stc
mov
add
daa
sbb
gs
data16
in
jg
inc
std
push
jle
mov
lcall
adc
lcall
cmc
ds
push
mov
popl
xchg
inc
out
lcall
ss
fisubrs
addr16
xchg
mov
adc
fs
jmp
mov
mov
out
adc
cmp
ljmp
pop
cmp
leave
xor
add
lahf
stos
aad
mov
divb
addr16
in
or
mov
or
sbb
shlb
xor
fistl
sbb
out
and
adc
inc
sti
std
fsts
sbb
out
adc
add
aas
je
mov
nop
cld
int3
add
xor
adc
loope
cmp
sti
scas
roll
sbb
pop
sub
jmp
fwait
mov
call
jmp
fsubrs
or
sbb
ljmp
pop
mov
jmp
aaa
ret
dec
or
es
mov
add
mov
out
ja
stc
push
cmp
cli
mov
cmp
mov
les
loop
inc
jo
sub
adcl
xchg
test
cmp
fmull
push
mov
xchg
jecxz
fstl
bound
mov
mov
orb
inc
loope
add
ss
or
fildll
adc
ficoml
dec
push
loope
ds
fdiv
lcall
sahf
xchg
fwait
icebp
dec
aad
loopne
lods
ret
jmp
xchg
pop
sub
mov
push
icebp
hlt
sub
or
push
fsubrl
pushl
ficoml
mov
mov
nop
rcrl
xchg
stc
inc
jecxz
in
mov
xlat
or
mov
imul
mov
arpl
mov
mov
xchg
js
outsb
and
add
mov
cli
sbb
out
and
dec
inc
aaa
push
or
dec
or
sbb
in
out
sub
pop
ljmp
mov
push
sub
rcrb
pushf
pop
mov
adc
loop
icebp
mov
ljmp
mov
sub
or
flds
rclb
inc
push
es
xor
mov
cli
iret
movsl
xor
push
sbb
ja
inc
scas
fwait
push
lret
jo
fisubrs
mov
cmpsl
jo
adc
push
jbe
xor
dec
lods
test
imul
scas
jl
mov
mov
and
or
lea
jmp
adc
pop
sub
ss
int3
lcall
stc
int
fildll
adc
inc
inc
ret
mov
mov
push
shl
dec
adc
loope
fldenv
pop
insl
or
push
add
push
ffreep
cs
fwait
repnz
inc
jnp
jbe
ss
adc
inc
inc
xor
dec
mov
fstpl
mov
les
fs
mov
popa
pop
nop
repz
lcall
or
stc
xchg
jle
inc
testl
ss
add
adc
push
xor
sti
pop
jg
js
das
lods
ja
std
out
movsb
inc
aad
aaa
aad
shr
outsl
movsl
inc
stos
test
pop
rorl
cmp
mov
addr16
sbb
push
jg
and
add
adc
inc
push
pop
cli
mov
lahf
sbb
mov
imul
rcrb
shrl
and
aam
adc
xlat
cmp
call
mov
mov
call
mov
ja
cmpsl
fnstsw
inc
adc
jbe
adc
mov
adc
push
cld
mov
dec
into
imul
inc
mov
or
aaa
cmp
pop
mov
pop
cmpsb
mov
sub
mov
mov
subl
cli
xor
xchg
adc
fadd
or
or
mov
pop
xor
sub
adc
or
mov
lahf
xchg
xchg
roll
ds
xchg
sub
or
loop
inc
sbb
push
mov
mov
or
inc
icebp
cmp
sbb
push
push
pushf
push
in
sarb
sbb
imul
push
imul
pop
mov
xor
or
adc
ss
sub
lds
add
or
dec
loope
or
roll
cmp
xchg
pop
mov
aam
dec
mov
or
jle
xchg
shl
hlt
jmp
sub
xor
mov
stos
decl
adc
pop
lods
cmp
sarb
lock
mov
or
or
dec
sti
test
sbb
pop
adc
dec
iret
aas
add
fdivr
mov
lods
in
outsl
add
push
inc
fistl
cmp
mov
cmc
cld
sahf
mov
enter
dec
sbb
push
addb
ret
push
lcall
loope
hlt
and
xchg
mov
mov
stos
imulb
lea
adc
stos
jb
je
jnp
mov
and
pop
ret
mov
sub
in
cmpb
mov
jb
xor
cmp
imul
sub
clc
or
mov
enter
dec
in
or
mov
push
xchg
dec
xchg
jg
jns
mov
dec
subb
outsb
mov
outsl
add
mov
inc
xchg
xor
jmp
cmpsb
call
ds
mov
movsb
clc
out
xchg
movsb
xor
cli
sbb
cmpl
cltd
movsl
sub
mov
and
decl
xchg
jb
add
inc
sub
aaa
push
in
and
fldcw
sahf
movsb
imul
jp
shlb
outsl
sub
add
sarl
cmpsb
rclb
add
notl
lahf
xchg
inc
jle
jl
push
or
adcb
jle
mov
jmp
or
enter
incb
aam
aaa
cld
outsl
cmpsb
cs
pushf
aas
and
push
adc
xor
fsubs
pop
aas
sub
sbb
sbb
adc
sub
adc
push
jmp
stos
jmp
jne
inc
push
dec
enter
ror
fldcw
inc
mov
push
aaa
mov
ja
mov
addr16
push
inc
xor
sub
jbe
negl
lock
adc
and
imul
std
dec
aam
cmpsb
mov
or
in
mov
shr
or
decb
dec
outsb
add
or
mov
sahf
sar
das
and
in
gs
cld
adc
pop
pusha
std
fisttpl
test
mov
jmp
adc
loop
in
aam
jg
insb
in
xchg
ret
adc
lret
ljmp
sbb
pop
fisubrs
out
cmp
mov
sbb
lods
xchg
out
mov
mov
pop
loope
imul
fsubs
adc
mov
xor
xchg
mov
cmp
outsl
jp
pop
je
lods
cwtl
pop
int3
incl
jg
outsl
test
dec
xchg
fcmove
cs
jp
cli
push
mov
adcb
push
je
dec
mov
sub
jb
les
push
aad
dec
jmp
xor
rolb
imul
outsl
fwait
mov
xchg
cmp
int
xchg
add
cmp
call
fucomp
clc
ret
in
fwait
ret
pop
subl
js
js
pushf
adc
cmc
jmp
dec
inc
add
sbb
test
push
mov
and
adc
and
adc
je
sub
test
mov
dec
dec
pop
fcoml
lcall
jmp
test
pop
cmpsb
sar
push
loop
addr16
pop
mov
mov
and
cmc
or
addr16
or
inc
mov
aas
or
fbstp
incl
mov
and
adc
outsl
addb
sbb
fisubl
pcmpgtw
mov
xor
dec
enter
repnz
jns
mov
mov
mov
pop
jno
mov
pop
out
pop
mov
jns
and
out
add
inc
scas
test
lahf
cmp
pop
sbb
add
in
mov
sub
shrd
cld
incl
and
jge
xor
add
loopne
aaa
push
lcall
mov
fldcw
mov
inc
daa
cld
sbb
jae
das
mov
mov
xchg
movsb
pop
adc
cli
stc
add
js
call
dec
aaa
gs
or
icebp
popa
cs
fcoms
fbld
sub
out
js
sbb
in
adcl
pop
nop
enter
mov
cmp
test
ds
jne
cmp
and
out
xchg
push
mov
mov
cmpsl
jo
into
insb
mov
push
sar
pop
hlt
mov
or
loop
and
dec
clc
or
mov
jge
push
stos
fs
ljmp
hlt
shlb
xchg
addb
sub
cmpsl
stos
scas
rorl
add
mov
in
dec
cwtl
sbb
jg
pushf
mov
inc
fwait
mov
fs
add
into
add
inc
mov
jbe
mov
pop
addr16
lods
pop
lods
and
lret
inc
cmp
xchg
inc
outsb
scas
mov
mov
in
jmp
out
pop
push
mov
jg
jl
in
xor
scas
mov
and
add
push
push
sbbb
popf
scas
mov
decb
ret
or
xchg
lret
push
xchg
cmp
sbb
scas
es
lea
shlb
xchg
popaw
lock
mov
mov
pop
jns
imul
movsb
xor
pop
lahf
mov
outsl
clc
mov
fidivrl
scas
in
mov
test
adc
out
cwtl
call
xchg
fsubrp
cli
call
sub
fildll
out
ljmp
jmp
test
rorb
int
add
jecxz
das
push
lock
add
mov
leave
adc
imul
or
stos
stos
pop
mov
dec
jbe
stc
dec
or
or
in
xor
ret
mov
mov
test
imul
mov
pop
push
pushf
or
cmpsb
stos
in
ret
and
jbe
xlat
xor
mov
lea
inc
int
or
mov
incl
leave
cmp
sub
pop
xchg
add
and
sahf
mov
loop
lds
pop
push
out
jb
and
mov
mov
sub
inc
jg
push
mov
dec
bound
ljmp
out
inc
pop
rcrl
inc
das
sahf
cmp
inc
mov
les
arpl
mov
ss
ljmp
jl
dec
data16
push
push
cs
mov
xchg
jae
out
test
and
sub
sub
out
dec
lds
pop
inc
mov
mov
mov
mov
cmc
es
insb
lcall
and
xor
mov
es
in
mov
pushl
push
movsl
cli
decl
sub
loop
pop
sub
es
inc
data16
lret
jae
je
das
sbb
jg
dec
push
dec
cmpsl
notl
jae
mov
pop
and
pop
in
outsb
jmp
mov
pop
pop
icebp
xor
lock
sahf
sub
pop
sbb
cmpsb
loop
hlt
and
lret
sbb
in
stc
mov
cli
fs
fbstp
sbb
and
aaa
dec
push
push
mov
scas
pop
into
mov
arpl
push
call
sbb
and
test
inc
sub
adc
sarl
out
cli
push
pop
jbe
cmp
adc
es
sbb
dec
adc
add
xlat
pop
mov
push
dec
dec
jp
idiv
lcall
insb
sbb
cld
mov
push
xchg
js
imul
addr16
or
das
shlb
aam
fwait
nop
lock
dec
insl
xchg
pusha
pop
jg
ret
inc
add
aam
sahf
adc
xor
mov
dec
pcmpeqb
enter
fildll
sbb
jo
pmullw
sbb
pushf
scas
ljmp
js
jb
in
push
sahf
add
or
xor
jge
decl
pop
cmp
or
xchg
sbb
fsubr
inc
add
xor
fcmovb
test
mull
inc
ret
adc
mov
pop
inc
aaa
iret
daa
loop
clc
xor
gs
outsb
xor
lret
imul
movsl
lret
and
test
and
cs
jge
mov
in
enter
movsl
sbb
dec
cli
dec
dec
push
test
jne
mov
add
sub
inc
sbb
adc
push
jb
jge
adc
test
gs
mov
xchg
mov
call
mov
sbb
mov
fwait
jle
jmp
xor
pop
push
add
jg
adc
test
push
mov
xchg
pusha
adc
notb
xchg
inc
cwtl
and
pop
pop
stc
cli
xor
dec
shl
jle
das
add
mov
adc
out
in
cld
mov
push
mov
add
mov
iret
outsl
xchg
xor
leave
orl
lcall
pop
lea
xchg
pop
repz
bound
shl
xor
mov
je
mov
leave
repnz
mov
xor
lret
adc
xchg
scas
mov
imul
aaa
adc
mov
inc
hlt
rol
stc
mov
jecxz
xchg
inc
push
aas
xchg
mov
lahf
loopne
push
cli
cmpsl
push
dec
fisubrs
dec
xor
jno
call
push
lds
rol
xchg
cwtl
aam
fistpll
sbbl
jno
jbe
jnp
in
push
std
jns
lahf
in
mov
xor
inc
cmpsb
dec
mov
and
fadds
fildll
mov
jmp
dec
imul
xchg
or
jle
cld
pop
or
inc
add
cmp
add
sub
lock
xchg
shlb
inc
or
fbld
test
mov
add
movsb
addb
ljmp
jmp
ret
cli
call
lds
push
sub
push
sarl
sbb
stc
dec
mov
dec
test
adc
fcomip
pop
into
aam
movsb
mov
jns
cs
repz
ds
xor
inc
inc
aad
frstor
add
or
dec
mov
filds
jmp
es
ret
adc
cmpsb
outsb
cmp
movsl
mov
push
fwait
xor
movsb
pop
cli
fisttps
movsb
pushf
add
in
test
lcall
adcl
fadds
pop
cli
hlt
in
adcl
inc
stos
and
cmp
adc
ljmp
mov
cs
pop
push
rcrb
pushf
mov
mov
mov
mov
cmp
xor
pop
sbb
or
sub
xchg
insb
rcrb
nop
push
dec
inc
mov
dec
fcompl
in
and
xor
dec
lds
clc
cvtps2pd
shlb
in
mov
jmp
cld
mov
popa
lods
call
sbbb
or
out
jmp
ljmp
iret
bound
adc
pusha
sti
pop
adc
push
ja
sub
or
daa
and
xor
ret
or
adc
mov
jmp
push
mov
lods
mov
pop
test
inc
mov
out
test
ljmp
test
mov
inc
jp
aaa
jg
test
push
jnp
or
xor
mov
push
sub
sub
xor
xor
or
std
or
mov
into
xlat
and
xor
jg
inc
mov
daa
aam
pop
mov
orl
pop
pop
das
in
mov
and
pop
cltd
mov
and
mov
and
je
dec
pop
mov
bound
adc
jg
stos
jno
pop
jne
sti
mov
das
js
dec
add
ljmp
mov
lods
popf
lds
and
lea
mov
aas
mov
inc
sbb
std
call
pop
dec
add
ret
out
stc
jmp
and
movb
scas
xchg
mov
push
pop
inc
add
mov
ljmp
push
jl
and
cmpb
push
mov
decl
js
add
xchg
dec
mov
jmp
push
clc
scas
push
cmp
add
mov
and
lret
clc
or
ljmp
ljmp
testl
rcr
and
xchg
jbe
arpl
stos
add
fnstsw
sub
sbb
mov
jbe
xor
inc
imul
fldenv
arpl
pop
inc
or
frstor
enter
fwait
int3
or
inc
cmp
lret
ds
pushl
cwtl
imul
ljmp
in
ja
inc
add
mov
pop
jl
cmp
mov
or
add
mov
incl
loop
shrb
xor
or
sbb
aaa
push
inc
mov
in
jle
call
adc
ret
add
je
sbb
icebp
pop
ljmp
cmpsb
pop
and
pushl
mov
cmp
jecxz
rorb
jo
testb
fcoml
cli
mov
pop
ret
xlat
movhps
in
or
pop
inc
inc
ljmp
xor
xor
shr
cmp
inc
mov
add
add
shlb
pop
mov
out
dec
lret
data16
jg
push
nop
enter
in
or
ret
movsb
jle
repnz
ljmp
and
sbb
test
fwait
inc
lret
ds
mov
insl
jg
pop
adcb
les
xor
gs
addb
jbe
xchg
nop
incb
sub
sbb
clc
lcall
lea
js
inc
sbb
out
xorl
inc
in
sub
xor
push
sbb
lea
divb
pop
xor
rcr
or
xor
aaa
mov
ss
jle
push
jne
lret
pop
sub
fldcw
ud1
cli
mov
test
lods
loope
pop
lahf
inc
movsl
or
xor
xor
adc
rcll
arpl
ljmp
mov
hlt
scas
icebp
xchg
cltd
xor
and
inc
inc
pop
mov
mov
mov
aas
pop
sbb
clc
ss
jae
sahf
incl
mov
test
repnz
repnz
push
in
inc
add
icebp
ret
jb
push
sbb
add
mov
aad
mov
sahf
call
mov
lea
inc
pop
lret
rcrb
iret
aad
fwait
adc
movsb
outsb
incl
fwait
mov
ljmp
cwtl
cwtl
adc
movsb
or
aaa
cld
adc
xor
push
cltd
es
and
adc
cwtl
outsl
outsb
std
and
mov
test
xor
xchg
popa
fs
fwait
hlt
mov
and
xor
pop
lock
pop
mov
sbb
cmp
push
push
dec
push
lods
push
pop
mov
jmp
pop
lret
xchg
or
insb
fimuls
mov
inc
imul
or
lods
push
loope
out
lcall
mov
stc
test
dec
dec
mov
and
xchg
jge
in
push
aaa
pop
jg
pop
cmp
pop
pop
fisubl
shlb
cld
cwtl
cmp
fisubs
fcomip
and
push
mov
rcrl
mov
incl
fldt
cld
cltd
cwtl
cmp
or
add
scas
lds
call
or
ljmp
or
rcr
adc
mov
popf
scas
movsb
xchg
out
sub
and
fwait
xor
push
aas
into
push
mov
sbb
dec
sub
dec
sub
nop
imul
or
push
inc
out
clc
mov
in
pop
addr16
mov
cmp
add
outsl
in
gs
clc
sub
popa
xlat
mov
int3
nop
sbb
out
inc
stos
pop
push
mov
pop
fadds
fimull
test
and
mov
push
lret
lock
sub
and
sub
pop
mov
loop
or
cwtl
subb
mov
cld
mov
xchg
stc
loop
popl
roll
mov
cli
cmp
fadds
inc
icebp
fstl
lcall
and
xor
enter
mov
scas
mov
mov
mov
and
xor
inc
daa
fistl
mov
stos
xchg
push
mov
jge
enter
adc
mov
mov
push
ljmp
push
lods
pop
clc
xchg
rclb
and
nop
jns
cmpsb
cltd
mov
mov
sbb
xor
dec
outsl
jge
js
fstps
inc
test
es
jl
inc
hlt
pop
insb
cmp
call
inc
push
sub
fs
xor
rolb
int
cltd
aas
xchg
push
lcall
add
mov
cld
cli
leave
icebp
insb
nop
pop
or
sbb
inc
xchg
loope
in
jb
nop
insl
xor
fmuls
rcrb
dec
mov
push
mov
mov
lret
clc
inc
xchg
stos
pop
addb
inc
fildll
push
sub
ret
ljmp
test
mov
jg
xor
test
ja
fsubrs
repz
lds
in
inc
movsl
pushf
gs
xlat
cmp
hlt
dec
mov
inc
ljmp
pop
cs
mov
subl
adc
mov
dec
leave
mov
stos
out
or
adc
cli
je
dec
sbb
je
pop
mov
inc
jb
sbb
push
sbb
insl
stos
cs
insb
scas
fucomp
cltd
xchg
loop
inc
xchg
ret
dec
sbb
sbb
adc
lea
icebp
mov
mov
jb
dec
in
sbb
jmp
jmp
jge
mov
jle
mov
dec
push
cmp
ljmp
stos
es
xchg
ret
cmp
fisttps
rorl
jp
and
fildll
sub
xchg
test
sub
loopne
jmp
scas
add
sarb
inc
jecxz
pop
pop
xor
in
cmp
neg
mov
cmp
movsb
inc
clc
mov
std
mov
xchg
decl
pop
cwtl
scas
test
ds
jns
push
or
imulb
pop
lea
clc
cmp
cmp
jp
inc
addr16
dec
je
add
out
jl
lcall
and
pop
push
jbe
mov
dec
or
dec
loopne
or
std
shlb
dec
cli
add
jg
mov
insb
int3
add
dec
xchg
mov
addb
movsb
lods
mov
push
mov
xchg
xor
xor
scas
jle
out
pop
outsl
sbb
xchg
add
mov
xchg
mov
push
cwtl
int3
faddl
nop
or
aad
lock
mov
dec
dec
add
adc
pop
or
lahf
or
mov
stc
inc
fisttpl
and
movl
or
or
stc
cmpsb
xchg
into
add
pop
stc
cmp
hlt
ficoml
push
es
inc
xlat
sub
lock
push
repnz
and
adcb
jo
lcall
push
lret
cmpsl
xor
in
daa
filds
and
insl
push
xor
cmp
jg
xchg
mov
mov
jns
clc
out
cmp
sahf
in
cmp
ret
arpl
aad
clc
inc
outsl
fmuls
xor
and
mov
xchg
cld
jg
ror
pushf
fdiv
mov
add
mov
fdivrs
orb
push
decl
lret
cmp
sbb
jbe
cmp
or
pop
cmpl
pop
ficoml
lahf
call
mov
cmp
push
shl
jmp
loop
pushl
bound
lret
inc
inc
xlat
inc
mov
hlt
jge
and
lock
mov
pop
rolb
xor
adc
js
mov
add
or
dec
mov
jmp
in
leave
pusha
loope
cld
rcrb
sbb
lcall
shrb
ss
adc
or
cwtl
xor
das
cmpb
add
leave
insb
dec
xchg
xchg
ret
push
push
addr16
inc
dec
nop
enter
jnp
stos
xor
cld
xchg
int3
and
ret
jp
and
jg
inc
hlt
andl
xchg
mov
imul
inc
jae
ds
gs
dec
shlb
ja
shlb
fdivr
push
jbe
clc
or
inc
jbe
hlt
decl
cwtl
fs
cmp
mov
inc
mov
aad
dec
and
cmc
je
sbb
cmp
mov
xchg
pop
aam
test
outsl
push
cwtl
adc
rcl
out
clc
fwait
decb
cld
xor
mov
pop
mov
nop
mov
cld
mov
js
push
es
jb
scas
push
aad
inc
cli
scas
jg
sub
shlb
adc
add
int
push
pop
outsl
push
pop
out
int3
out
inc
cmpsb
pop
mov
push
jne
lods
adc
dec
mov
inc
ret
orb
pop
jbe
int
call
push
adc
push
inc
mov
mov
js
mov
incb
mov
movsl
pop
push
das
lock
ljmp
push
lret
mov
adc
or
lods
and
pop
out
notb
mov
callw
push
adc
fdivs
sub
es
mov
mov
jp
cs
mov
xchg
cli
xchg
test
stos
das
sub
adc
lahf
ret
in
pop
cmc
mov
in
sub
mov
xchg
mov
push
xlat
fucomip
mov
loopne
loope
mul
mov
bound
lcall
ljmp
outsb
aad
xorl
xchg
movb
pop
call
push
lret
pop
sarb
mov
outsl
xchg
cmc
aaa
pushf
or
sub
xor
push
imull
loop
js
cmpb
or
push
lods
add
arpl
lock
es
fwait
lock
ret
mov
dec
jnp
nop
loopne
sub
mov
dec
sub
and
test
jg
inc
sub
in
pop
add
insb
insb
mov
sbb
and
pop
cmp
fwait
push
dec
xchg
and
pusha
inc
nop
aam
idivb
idiv
ret
sbb
add
fcomip
enter
pop
cmpb
lods
jg
or
lds
mov
loope
aam
xchg
inc
push
push
jecxz
mulb
icebp
fistps
rcr
and
sbb
dec
and
adc
icebp
mov
fstpl
adc
arpl
adc
xor
mov
repz
jg
mov
xchg
cltd
test
add
lods
pop
and
adc
test
in
jmp
or
sub
xchg
push
jae
fistps
rclb
aaa
xchg
push
mulb
mov
cmp
or
xchg
rcl
insl
outsl
push
xchg
rcrb
add
jmp
cld
pusha
inc
cld
jmp
cmp
ja
subl
or
cmp
ljmp
js
fadds
into
repz
inc
hlt
ror
and
and
push
jns
test
inc
jecxz
stos
dec
inc
hlt
ja
mov
data16
aad
or
push
inc
nop
outsl
in
mov
mov
ss
lret
push
dec
and
inc
jmp
cli
test
lods
jo
xchg
in
jl
ja
mov
clc
push
sub
xor
cmp
std
jg
ljmp
mov
add
mov
mov
fdivrs
outsl
in
mov
sahf
mov
push
std
outsl
cwtl
ret
cmp
add
out
fists
ret
and
inc
cmp
loope
fwait
jnp
lock
daa
adc
out
mov
lcall
pop
sub
lods
stos
into
test
ret
cmp
inc
jecxz
lds
inc
enter
fildll
cwtl
mov
in
jle
nop
pop
or
or
icebp
pop
and
mov
cwtl
insb
lret
std
jl
dec
cmp
js
shll
push
cmp
jge
cmp
bsf
fisttpl
mov
fdivrs
arpl
les
scas
enter
sarl
inc
push
out
test
pop
pop
fildll
sub
lods
add
add
lods
enter
xchg
out
and
xorb
repnz
adc
push
aaa
addb
shl
xlat
mov
scas
jbe
push
ss
jb
es
cltd
pop
mov
stos
and
hlt
and
add
jecxz
or
sub
rol
in
sarl
lcall
xor
dec
jns
out
mov
xchg
cltd
or
fiaddl
in
adc
roll
addb
clc
loopne
lret
cltd
xchg
in
jg
call
xchg
sbb
cwtl
xchg
leave
movsb
pushf
xchg
ljmp
fs
inc
addr16
xchg
hlt
or
lcall
sbbl
lret
std
jle
cmp
data16
mov
outsb
push
jg
xor
ljmp
fs
add
shl
add
clc
sub
add
outsl
aaa
pop
bound
aam
mov
push
xor
sbb
mov
jne
test
jmp
cltd
mov
dec
or
inc
je
lcall
and
jne
pop
pop
pop
decl
les
push
js
mov
xor
adc
rolb
fdivrs
imul
clc
outsb
sub
loop
cmp
ret
popa
xor
mov
or
ljmp
aaa
push
jae
inc
xchg
push
mov
mov
data16
xchg
adc
xorl
push
inc
lds
mov
adc
xchg
add
pop
adc
add
jbe
fwait
mov
mov
jns
push
test
mov
addr16
or
dec
scas
test
or
sbb
and
and
popf
lea
fidivs
fwait
push
outsb
into
psubb
movb
aaa
mov
adc
jbe
hlt
cmpsb
mov
call
jns
or
sbb
push
sbb
or
loope
ja
clc
pushl
dec
or
call
arpl
xchg
lahf
test
dec
jp
ss
inc
test
mov
mov
dec
mov
nop
sbb
fincstp
sub
fldt
dec
int3
in
mov
lock
xchg
ljmp
mov
xchg
adc
loop
push
inc
enter
lock
loopne
sbb
bound
leave
bound
or
and
xor
mov
lcall
push
jo
decl
and
clc
stos
mov
aaa
loop
xchg
fidivl
xchg
mov
pop
adc
push
cld
or
sbb
inc
sbb
cmp
lret
stos
sub
mov
mov
stc
cmp
mov
fwait
cli
mov
push
mov
clc
lcall
shl
xor
ret
loopne
mov
pop
pop
xchg
xchg
call
aaa
fsubl
add
xchg
jo
ljmp
push
dec
add
cmp
lock
jb
imul
inc
push
inc
add
inc
pop
sbb
rcr
push
xor
push
sub
and
fisttpll
add
jmp
pop
push
inc
std
and
cmp
cmp
or
dec
pop
call
pushf
dec
sub
jmp
xor
or
mov
aas
and
stos
cltd
jmp
ret
push
popf
xchg
cmpsb
fadds
daa
or
cmpsb
xchg
fs
roll
sbb
dec
adc
ss
mov
cld
pop
leave
insb
xor
orb
jo
xchg
mov
lock
xor
cmc
scas
push
mov
jb
sbb
das
adc
xchg
mov
pop
in
or
push
fwait
inc
sbb
dec
int3
filds
loopne
sbb
in
xor
stos
cli
cmp
cli
int3
shlb
aam
test
mov
rcll
mov
rol
pop
stos
mov
mov
lcall
ret
lcall
push
scas
pop
cmp
enter
lods
jmp
rorl
xorb
mov
pushl
adcb
pop
sub
aas
test
idivl
inc
cld
pop
sub
out
xor
movsb
sti
aad
ficomps
mov
sbb
stc
repnz
das
sbb
add
inc
dec
mov
fiadds
repz
inc
or
jmp
push
imul
mov
jb
sti
or
cmp
ljmp
lret
pop
mov
imul
outsl
cmpsb
std
mov
aas
sbb
xchg
xorl
call
pushf
std
adc
xchg
jecxz
cmc
mov
sbb
sahf
push
inc
mov
rolb
sub
rcll
movsb
lcall
cmp
xchg
push
mov
cli
out
in
stos
xchg
dec
lcall
jno
mov
xchg
pushf
dec
jcxz
dec
jae
add
sbb
sar
push
cwtl
xchg
mov
adc
outsl
xor
pop
cmp
sub
push
mov
test
hlt
or
mov
jl
sbb
rclb
adc
cld
sub
shlb
mov
in
sub
lret
sub
mov
mov
cmpsb
addb
push
scas
jle
es
xchg
inc
mov
mov
or
loopne
mov
adc
dec
inc
xchg
cmp
bound
xchg
lock
or
pop
cli
ds
pop
cmp
push
in
jb
xchg
test
inc
pop
imul
fnstsw
stc
adc
sub
mov
xchg
movsb
dec
pop
xor
sbb
test
pusha
test
mov
aas
inc
xchg
in
cmp
cmpb
sub
scas
aaa
mov
adc
in
stc
daa
mov
adc
repz
jg
pop
loopne
cmp
imul
data16
adc
lcall
into
ljmp
mov
sbb
add
pop
fmul
loope
mov
ds
or
in
sbb
hlt
xor
xchg
jl
mov
pop
lods
ljmp
adc
or
pop
dec
sti
xor
ret
dec
outsb
fwait
jne
add
and
inc
repnz
scas
adc
jmp
xchg
sbb
daa
jmp
pop
adc
jo
and
or
adc
add
inc
jb
adc
xchg
lcall
enter
jmp
xor
cmpsb
and
ljmp
pop
xor
xor
scas
mov
call
in
or
fdivl
push
sbb
bound
popa
cltd
mov
lret
int
lcall
loop
cmpsb
stos
scas
jns
jecxz
xor
imul
mov
add
mov
pop
and
xchg
stos
sub
xchg
mov
xchg
das
mov
cld
jg
divb
stc
xchg
test
test
sarl
js
jle
dec
faddl
cmp
jnp
stc
and
out
adc
mov
orb
in
mov
cmp
out
or
jns
scas
mov
loopne
sub
push
orl
jecxz
cmp
sarl
sub
lahf
aas
push
mov
cmpsb
inc
adc
out
data16
data16
pop
inc
mov
loopne
or
stos
pop
sub
loope
inc
and
mov
push
cld
ljmp
jp
movsb
lds
lea
jnp
fdivr
int
sahf
sub
cmc
pop
subb
jmp
mov
ljmp
into
pushf
mov
lret
pavgb
add
fucomip
idivb
jp
and
mov
fs
add
das
negb
jecxz
stc
imul
and
std
or
mov
xchg
cmp
negl
mov
mov
sbb
and
pop
movsl
mov
pushl
xchg
mov
adc
pop
jl
sbb
jae
pop
and
scas
fbld
jb
pusha
shlb
mov
mov
daa
jbe
mov
loop
int
adc
dec
stc
faddl
mov
sti
ljmp
inc
inc
inc
rclb
sub
sti
mov
push
dec
cmp
mov
xchg
push
sbb
in
mov
inc
mov
scas
mov
movlps
push
mov
test
jmp
pop
sbb
mov
and
push
push
std
add
rorb
or
imul
leave
or
jmp
ss
pop
or
and
lods
addr16
dec
movsb
xchg
dec
xchg
push
push
ds
xor
add
push
jle
js
decl
or
adc
and
or
jle
push
clc
fsubrl
sbb
dec
xchg
shlb
pop
iret
sahf
cmp
add
loopne
or
push
pop
mov
movsl
sbb
sti
push
int
push
into
cmpsl
or
xor
sbb
rclb
hlt
and
jg
sbb
cld
inc
daa
xor
cwtl
enter
or
nop
pop
push
dec
lock
imul
pop
in
loop
cld
outsl
mov
and
adc
dec
in
sbb
sbb
dec
call
shll
stos
aas
and
and
inc
push
push
scas
mov
jmp
sarb
pop
pop
pop
sar
and
pop
hlt
pop
xchg
into
cmp
jl
mov
add
or
pop
and
or
test
ss
sarb
subb
fs
in
jbe
sub
cmpsb
jmp
cmp
dec
add
cwtl
add
idivb
pop
cld
add
adc
test
pop
sbb
jl
hlt
lret
mov
stos
in
icebp
repnz
loop
push
xchg
mov
test
fcoms
or
icebp
inc
nop
mov
idivb
ret
pop
or
adc
stos
filds
sub
fistps
es
push
fildl
push
or
adc
mov
mov
pop
hlt
and
jnp
push
out
jl
shl
sti
jle
mov
hlt
adc
adc
pop
xchg
inc
insl
mov
xor
lods
push
mov
push
inc
hlt
xor
or
and
push
in
test
idiv
pop
mov
enter
jmp
repnz
lahf
leave
jbe
mov
push
es
push
add
push
add
xor
push
jl
push
or
ljmp
jp
xchg
mov
cmp
mov
dec
ljmp
pop
xchg
xchg
sub
xchg
push
pop
mov
lea
mov
ljmp
test
cwtl
push
imul
jge
sbb
jno
pop
xor
sarb
or
inc
aas
ficoms
scas
inc
dec
mov
bound
cwtl
jg
inc
mov
fildl
cmpsb
xor
dec
and
repz
inc
call
dec
sub
jle
jns
nop
les
ss
mov
mov
add
or
or
and
test
xor
fwait
add
xchg
and
mov
xor
sbb
popa
movsb
ret
jae
cmp
sar
mov
ljmp
jb
xchg
out
icebp
daa
sbb
sub
movsl
fmull
xlat
insb
or
pop
sbb
add
push
sub
fisttpl
mov
mov
bound
xlat
add
push
sbbb
sahf
into
ret
push
decb
push
pushf
pop
cmp
ljmp
mov
loop
and
shl
cmp
and
scas
clc
push
fs
lods
sahf
sti
xchg
sahf
arpl
decl
mov
std
data16
cmp
shlb
scas
add
push
js
scas
incl
inc
orb
cli
ret
xchg
sti
call
mov
xchg
jne
jg
insl
stos
aas
mov
jae
scas
xor
out
jb
push
popf
mov
lret
in
jle
sti
fxch
je
incl
pop
idivb
xchg
jae
movsl
xchg
imul
cmpsb
mov
jle
pop
mov
dec
jle
lcall
int3
inc
jecxz
stos
rep
or
imul
push
fdiv
cli
dec
int3
test
inc
loop
loope
clc
fwait
dec
mov
out
mov
insb
outsl
ja
add
into
push
arpl
xor
repz
in
clc
cmp
adc
aaa
inc
jp
in
jns
insl
test
ss
push
js
cmp
pop
sbb
pushf
dec
cmp
out
cmpsb
icebp
mov
fistpll
jp
inc
lea
dec
dec
or
sarl
fmull
cmp
icebp
outsl
adc
inc
pop
fmulp
or
test
xchg
push
mov
movb
jg
pop
js
cmp
jp
add
mov
push
daa
xchg
fimull
pushl
std
inc
push
test
inc
fwait
mov
jno
xor
loope
insb
push
pop
imul
xor
ret
aad
mov
andb
ljmp
push
lret
icebp
outsl
and
sbb
lods
mov
or
inc
and
sbb
dec
scas
cli
xor
ljmpw
call
xor
loope
sub
jne
jae
icebp
pop
dec
xchg
es
xor
dec
clc
mov
adc
fwait
inc
pop
test
enter
xchg
xchg
dec
insb
push
subb
mov
pop
add
or
dec
add
leave
push
inc
inc
lock
les
aad
mov
shlb
mov
pusha
aam
loopne
in
mov
int
aam
aas
jp
ror
adc
pop
pushf
call
mov
js
call
fiaddl
sub
loop
std
rcll
rcrl
mov
dec
and
sbb
dec
ja
rolb
mov
scas
orb
outsl
shlb
push
mov
mov
dec
jb
cld
jg
shr
je
push
pop
sbb
andl
nop
into
add
push
movsb
rolb
inc
cmp
mov
cmp
xorb
stc
inc
nop
fneni(8087
add
xchg
cmpsl
sub
stos
incb
pop
push
cli
rol
call
adc
pop
xchg
test
sub
push
jle
xchg
xchg
xor
push
stos
outsl
clc
push
inc
loope
or
jge
arpl
sub
lods
ja
dec
rcrb
fisttpll
push
xchg
ljmp
mov
shl
stos
lahf
loopne
mov
push
or
dec
loop
ljmp
aad
add
psrlw
je
sbb
lea
push
ret
add
dec
jns
ljmp
insb
js
jno
addl
dec
mov
popa
dec
xlat
arpl
cmp
mov
jnp
js
jmp
out
xchg
mov
fcoms
movsb
mov
rorb
mov
cwtl
pop
ficompl
jbe
cmp
mov
ljmp
je
sbb
insb
xor
mov
sbb
ljmp
pop
pop
test
ficoml
test
mov
hlt
adc
icebp
insb
shlb
rorl
lock
loope
xchg
dec
mov
adc
pop
and
in
pop
pop
ja
ficompl
inc
jl
shl
mov
jae
outsl
outsl
and
cmp
mov
mov
jno
mov
push
xor
fsts
scas
sub
nop
xchg
fadd
lock
fdivrs
cld
xor
mov
jae
idivb
clc
pop
mov
enter
cmc
das
lret
outsl
mov
xchg
mov
inc
aas
shlb
inc
into
cmp
jg
fisttpl
out
rcll
filds
cmpl
loopne
cmp
rorb
jecxz
cld
pushl
nop
push
dec
and
mov
sub
pop
xchg
ds
pusha
mov
add
je
jb
add
pop
decb
push
adc
fidivrs
ljmp
lcall
cmpb
test
cmp
jno
fidivl
jns
call
sub
cmpsb
lock
inc
mov
mov
adc
jle
xchg
popf
pop
add
jl
movsl
push
ret
xor
mov
test
cli
dec
xchg
shlb
sbb
lret
cmp
push
and
jge
aad
cmp
pop
shrl
cmp
cmp
push
jbe
mov
pop
push
mov
rolb
decl
mov
or
add
pop
and
xchg
bswap
add
in
pop
fsts
pop
faddp
cmp
out
and
sub
push
inc
hlt
push
jno
inc
or
push
outsl
mov
push
cmp
ret
lret
mov
lds
insb
call
cmp
dec
push
fcmovb
cmp
fildl
or
leave
push
sub
cmpsl
xchg
rcll
jo
std
popa
push
std
movsb
jle
aam
loopne
pop
push
xlat
movsb
cmp
movsb
mov
adc
mov
or
and
jg
je
data16
push
inc
mov
enter
mov
fldt
fcmovb
loop
xchg
xchg
and
adcl
in
inc
fiadds
test
mov
sbb
lcall
loopne
mov
lahf
enter
aas
adc
add
std
fdiv
cmp
add
cmp
adc
mov
clc
js
xchg
test
add
sub
sub
sbb
shl
repnz
incl
adc
imul
fcmovbe
das
cmp
mov
jge
sahf
ss
xchg
clc
decl
int
nop
sub
inc
fwait
xchg
es
popf
or
aam
insl
scas
pop
sub
mov
xchg
hlt
push
mov
xchg
jg
sub
dec
js
push
sbb
cmpsl
sbbl
mov
xchg
jg
jp
enter
shll
ret
jo
xchg
mov
aam
fnstcw
sub
jg,pt
out
adcl
sbb
rclb
decl
fcmovnu
lcall
pop
mov
mov
cmp
lods
fdivp
hlt
stos
push
and
ja
lahf
mov
das
orb
and
repz
xchg
movsb
push
cmp
mov
inc
xchg
sub
movl
dec
out
cwtl
sub
or
inc
dec
fiaddl
mov
mov
lock
pop
jo
cmp
xchg
xchg
xor
ds
outsl
imul
icebp
and
pusha
ja
jecxz
or
icebp
and
cmp
jl
aad
sub
repz
insb
pop
dec
or
jb
xor
mov
fstpl
cmp
mov
xchg
xor
int3
jo
cmp
clc
pop
lret
imulb
pop
into
rclb
jbe
in
sub
cmpsb
inc
add
in
scas
insl
call
sbb
cwtl
lfence
filds
mov
faddl
in
or
jae
loopne
mov
insb
dec
fistpll
and
outsl
das
movl
xchg
scas
bound
in
mov
out
push
js
push
xorb
dec
lcall
dec
jb
jo
subb
sub
or
aad
xchg
add
lcall
jnp
popf
fdivrl
fcoms
xor
out
movsb
scas
dec
jl
into
jl
mov
loop
mov
adc
inc
or
cmp
dec
les
inc
loope
inc
orl
hlt
out
movsb
iret
dec
dec
xchg
ror
enter
decl
inc
or
jg
in
jbe
sti
dec
sbb
popf
lahf
jns
sbb
pop
clc
jmp
mov
or
mov
inc
cld
jmp
sbb
hlt
in
sbb
icebp
rclb
inc
lock
pusha
loop
cld
or
add
jb
data16
cli
out
adc
jno
in
and
sub
jg
push
lock
inc
jge
pop
add
jge
mov
jno
cmpsb
sub
mov
pop
rclb
mov
pushl
leave
add
loopne
mov
out
ret
shl
sbb
pop
sbb
mov
ret
adcb
int
scas
fwait
dec
pushf
fdivrs
nop
xlat
push
lret
sarb
aas
jge
push
int3
rcll
xchg
gs
shr
dec
mov
mov
mov
dec
clc
mov
push
std
pop
pop
adcb
pop
subb
jge
shlb
fcomp
mov
int3
and
inc
mov
call
ret
or
jo
push
ljmp
mov
cmp
jo
clc
mov
std
in
jnp
gs
cld
dec
dec
stc
je
pop
clc
sbb
xchg
cmp
mov
rolb
stos
incl
ds
imul
push
enter
cmc
push
add
cwtl
pop
cmp
jecxz
out
pop
and
aaa
je
jp
std
lret
push
or
adc
jno
dec
dec
pop
cmc
adc
dec
int
jb
cmpb
mov
outsb
lret
add
sti
sub
sbb
mov
aas
filds
adc
ljmp
pusha
adc
cmp
jns
negb
in
add
or
mov
sub
insl
pushf
jnp
jo
loopne
insb
add
mov
dec
dec
jle
filds
jne
pop
or
rcll
mov
scas
or
adc
xchg
clc
lds
push
out
sbbl
sub
fldt
lods
js
push
pop
cmp
dec
add
les
lret
or
jg
loopne
adc
hlt
inc
icebp
in
jge
mov
and
ret
push
or
cmc
push
sarb
cwtl
ss
aam
fistpl
divl
pushf
stc
jno
das
mov
dec
pop
push
adc
pusha
out
in
dec
xor
lcallw
add
jg
inc
scas
jnp
cltd
mov
sub
push
sbb
jnp
dec
sub
jmp
xor
icebp
xchg
adc
jb
push
push
fidivrs
cs
xchg
mov
mov
lcall
push
mov
out
sub
mov
jl
int3
fidivrl
sbb
sub
sub
cld
add
iret
cmp
fsubl
test
cmp
jae
or
test
cs
int3
xor
cld
movsb
repz
lcall
bound
sub
sbb
pop
mov
cld
andl
aaa
push
rorl
ljmp
sub
jmp
or
mov
sub
and
jnp
or
fwait
sbb
mov
fcomip
test
es
ljmp
push
dec
es
popf
subb
insb
or
mov
test
cmc
push
mov
mov
jae
hlt
sbb
xchg
inc
sbb
ljmp
scas
xchg
sub
push
push
scas
jbe
cmpsl
outsl
aas
xchg
pop
bound
rcl
int
out
jae
into
clc
jp,pn
add
clc
mov
cli
lods
inc
notb
cmpsl
dec
cmpsb
adc
les
sahf
out
mov
or
jmp
jno
adc
add
jle
push
push
ret
add
jns
pop
cltd
out
pop
or
stc
xor
inc
mov
mov
or
pop
and
mov
movb
in
push
and
repnz
jl
lock
scas
lret
jge
fistpl
mov
xor
mov
fldcw
sbb
mov
lods
cld
push
mov
cs
and
or
fmulp
in
cmpsb
movsl
mov
mov
xor
pushf
ljmp
ss
mov
into
pop
sub
or
jmp
cmpsl
repnz
out
mov
dec
mov
les
inc
sbb
sub
mov
ljmp
jg
add
cli
lds
and
add
mov
out
cli
push
inc
xor
popa
jp
xchg
xchg
jns
jo
or
popf
jmp
xchg
jmp
push
stos
movsl
jno
addr16
movsb
jg
test
jcxz
movsl
jo
jp
push
sbb
mov
mov
pop
sub
dec
mov
push
sbb
aad
hlt
gs
mov
std
mov
loop
xchg
adc
hlt
jno
jle
xchg
add
xchg
testl
test
adc
xchg
aas
es
ja
jns
sub
out
aaa
hlt
cwtl
dec
or
jno
sar
int
adc
cld
push
or
pop
add
pop
cmp
mov
jl
mov
mov
xchg
fists
adc
fimuls
cmp
outsb
daa
jecxz
ret
iret
fidivrs
cmp
imul
in
push
jp
decl
icebp
shlb
dec
pushf
mov
ss
mov
pushf
inc
fwait
sar
mov
lcall
pop
ljmp
push
cmp
mov
dec
sub
sub
fdivl
and
ret
aam
pushf
jmp
in
add
xor
in
mov
mov
ss
push
push
rcll
lods
or
fs
add
add
pushf
test
add
jo
pop
xorb
movsl
jg
inc
push
cs
and
cmp
cltd
js
adc
bound
dec
leave
and
cmpsb
push
fidivrl
xorb
jecxz
mov
popa
std
test
movsb
roll
lret
push
lds
mov
not
cmp
adc
dec
movb
jg
shll
cmpsb
or
insb
jne
push
xor
push
es
xchg
fcoml
or
mov
daa
mov
fucomip
add
orl
test
cmpb
xor
add
inc
mov
nop
mov
fcomps
bnd
pop
jmp
call
xor
xchg
idivb
fbld
subb
mov
pop
loope
ret
fs
out
pop
and
jg
xchg
clc
sbb
fiadds
cltd
mov
mov
aas
clc
in
fiadds
or
popa
xchg
sahf
xchg
add
jo
testb
lods
popf
mov
dec
sbb
adcl
cmp
pop
rclb
std
fldt
mov
insb
fidivl
test
iret
mov
jg
adc
aas
or
mov
xor
and
mov
mov
jp
in
cmc
or
lcall
jle
sub
lods
push
lret
inc
shll
sbbl
add
mov
cs
jecxz
incl
lret
jmp
in
add
add
push
mov
and
idivb
push
mov
call
pushf
icebp
outsb
push
pop
cmp
or
stos
insb
lds
loope
lock
lea
mov
mov
sbb
icebp
movsl
push
pop
movsb
fs
jo
stc
add
sub
push
mov
cwtl
lds
sub
jecxz
add
lcall
mov
dec
lods
sub
fisttpl
dec
ret
mov
add
sub
sar
call
cmpsb
in
lcall
sahf
or
mov
push
push
mov
aad
popf
and
std
clc
pop
xchg
icebp
aaa
mov
sarb
faddl
ficompl
test
inc
test
jmp
mov
add
decl
xor
inc
mov
jae
or
psllw
mov
in
loopne
and
or
sub
rorl
bound
jo
cmp
push
xor
jl
movsb
pushl
std
inc
out
mov
scas
lret
pop
lods
aam
xor
mov
inc
or
xchg
and
push
ljmp
mov
cld
adc
arpl
rolb
cmpsb
xchg
mov
insl
mov
xor
and
mov
out
push
clc
ja
insl
andnps
add
or
sbb
notl
mov
mov
or
push
pop
mov
pushl
cs
in
daa
push
or
js
rorl
clc
ljmp
push
jbe
xchg
xchg
or
popa
sub
addb
sbbb
cwtl
dec
lds
repnz
sub
loop
arpl
popf
jle
ficoml
mov
and
pushf
mov
stos
mov
ljmp
and
outsl
push
icebp
mov
ror
int
xchg
push
test
mov
ffreep
add
imul
std
lock
or
call
stos
nop
adc
decb
loop
pop
mov
loop
mov
pop
push
and
insb
inc
cmp
mov
and
repnz
xor
shll
int3
sbb
lret
add
sub
cmp
or
fistl
ja
fbstp
aaa
and
mov
inc
sar
out
mov
pop
mov
fnstenv
sub
lret
scas
sub
and
pop
dec
cmp
aaa
cld
xor
repnz
or
jg
test
sbbl
add
imul
mov
pop
add
mov
in
inc
pop
jp
out
and
ret
lods
pop
lock
movb
pop
out
pop
ret
bound
push
lea
jnp
mov
mov
cmpsb
pop
sbb
call
mov
in
into
shll
outsb
scas
cs
sub
clc
pop
lock
adc
popa
push
cmp
add
fisubrs
inc
es
sub
push
add
pop
inc
mov
out
mov
dec
add
enter
mov
push
sbb
ret
movsb
inc
js
stc
call
dec
jae
dec
mov
fbstp
ljmp
ljmp
sbb
test
mov
inc
sbb
leave
dec
adc
cmp
jbe
lock
shld
pop
xchg
inc
add
cmp
mov
mov
mov
cmc
decl
loopne
ret
or
adc
insb
push
sub
shrb
sbb
push
mov
out
ret
sahf
push
xor
mov
nop
lret
sub
mov
and
filds
push
in
mov
fiaddl
fwait
inc
and
scas
add
or
sbb
movsb
xor
jle
cld
in
jg
fildl
cmp
sarl
add
daa
mov
ja
pop
and
mov
test
jbe
js
aas
mov
xlat
xor
cli
inc
jb
push
loopne
sbb
mov
cld
lcall
lods
das
stos
inc
daa
xlat
sar
dec
pop
adc
clc
sti
pop
addr16
and
incl
jmp
data16
adc
loop
sahf
mov
cmp
stos
xor
inc
ljmp
mov
int
lcall
xchg
pop
mov
adc
sbb
in
sbb
jg
std
call
in
jb
daa
cli
lock
push
pop
inc
jne
mov
mov
adc
add
into
pop
std
test
add
mov
sub
inc
pop
sub
icebp
push
dec
popf
xor
call
add
clc
cli
xlat
push
cmp
int3
imul
in
cmc
cmc
cwtd
mov
prefetcht0
imul
roll
xchg
sub
push
sub
mov
cmp
mov
xor
lcall
leave
push
roll
mov
data16
ljmp
clc
inc
pushf
jno
mov
sbbb
push
imul
loop
cmc
cmpsb
gs
lret
cmp
add
cmp
fdiv
inc
pop
cmpsl
mov
or
push
cmp
xchg
dec
hlt
adc
insl
fisttps
mov
cmp
mov
imul
nop
mov
add
jecxz
and
inc
sbb
cmpsb
jg
push
jnp
mov
movsb
mov
cs
dec
xchg
in
mov
adc
push
xchg
xorb
push
pusha
pop
xchg
push
and
adc
jne
jbe
and
les
faddp
insl
mov
xorb
pop
push
mov
push
push
pop
sar
lahf
adc
out
mov
ds
lret
outsl
jb
or
js,pt
rolb
lcall
aas
cmp
cmp
outsl
outsl
adc
aaa
mov
mov
xor
adc
ret
enter
sub
fs
pop
mov
test
jns
out
mov
cs
shl
mov
add
mov
jg
push
daa
rolb
cmp
cmp
pop
push
pushf
xor
and
out
jmp
fdivrs
add
cmpb
fildl
push
clc
jg
pop
addr16
imulb
mov
jno
dec
pop
cmp
test
in
xchg
cmp
pushf
push
inc
data16
or
out
sub
sub
add
or
jae
sub
mov
pushf
cmp
push
test
mov
in
push
inc
cmp
pop
mov
hlt
mov
mov
out
decb
and
jns
xor
or
fwait
ret
jmp
sbb
repz
inc
mov
test
mov
sbb
dec
jecxz
xchg
push
ret
mov
and
push
jo
mov
jp
and
call
or
sbb
ljmp
fimuls
je
icebp
mov
sbb
addb
xchg
lock
das
jp
pop
push
fs
bound
push
sub
or
push
add
jns
call
inc
push
popf
bound
dec
sub
test
pop
xchg
mov
xor
dec
cmpsb
mov
gs
add
cmp
clc
push
pop
insl
or
xor
ss
ret
push
flds
sbb
cmc
sub
xchg
inc
movb
js
lret
cmpsl
pop
popa
xchg
icebp
jg
mov
dec
mov
dec
sbb
pop
sarb
enter
test
cmpsb
inc
or
mov
pop
jns
js
xor
testb
aam
xor
sarb
xor
mov
sbb
clc
lcall
mov
xor
adc
xchg
or
dec
repnz
mov
and
sub
pop
push
xor
jg
sub
and
and
pop
dec
mov
test
roll
pop
pop
rol
decl
dec
inc
int3
mov
bound
fdivrp
mov
pusha
sub
arpl
aam
call
pushl
dec
and
imul
loop
jae
pushf
mov
out
clc
add
fcmovb
add
mov
dec
in
push
sub
call
in
xor
inc
xor
test
sbb
cmp
imul
adc
das
xor
clc
or
aaa
and
dec
or
scas
cmpsb
fsubl
push
or
mov
add
mov
mov
mov
test
aad
jno
arpl
popa
xchg
outsb
fistpl
adc
out
push
data16
cmpsb
test
gs
and
cmp
ret
fists
mov
jl
xor
pop
stos
mov
jb
rolb
stc
loope
pop
aaa
jp
lds
lock
dec
adc
negl
loop
les
xchg
imul
mov
int
fmuls
push
sub
cs
sbb
add
scas
cmpsl
rcl
sbb
clc
ljmp
imul
scas
data16
mov
sarl
jmp
mov
movsl
xchg
ret
dec
or
fstps
rcpps
shll
sub
pop
les
popf
sub
inc
adc
cltd
jmp
aad
cmp
push
clc
das
std
test
lret
sbb
cmp
lock
mov
insb
sbb
add
push
adc
adc
in
cltd
leave
cli
jmp
dec
loop
dec
pop
dec
js
xchg
ret
inc
ds
dec
fdivr
notb
push
inc
mov
cmp
std
rorl
je
insb
cmpb
fwait
cli
pop
outsb
adc
or
loopne
lret
mov
out
dec
jg
test
fimuls
sti
jb
cmpsb
sub
pop
cmpl
aad
jp
loope
das
std
lcall
orl
pop
lods
ret
push
call
mov
jg
push
dec
add
loopne
cli
shlb
mov
daa
into
js
add
mov
clc
das
xchg
sbb
ret
ss
dec
call
cli
cmp
stc
push
mov
xchg
nop
rep
adc
sub
and
out
or
push
jge
add
add
or
leave
aas
xor
outsb
add
sbb
or
push
xchg
xchg
mov
xchg
lea
lahf
cmp
jg
dec
cmp
inc
fdecstp
xchg
pushf
mov
js
cmp
stos
sbb
fwait
xor
or
xchg
out
sub
dec
fisubl
inc
mov
outsb
sbb
push
jmp
outsl
aam
std
cli
jecxz
je
insl
add
cld
inc
dec
or
cli
pop
dec
movsl
push
test
and
test
add
mov
xor
sub
movsl
scas
xor
iret
and
cmp
insb
jns
insb
sbb
mov
push
dec
sub
cmp
or
sar
lods
mov
xchg
pushf
pop
sub
movsb
mov
ljmp
mov
mov
xorl
inc
sbb
shlb
int
stos
pop
xchg
pop
int
dec
push
ud0
lock
clc
xchg
adc
mov
std
mov
push
xlat
mov
imul
ss
jmp
in
inc
pop
or
push
cmpl
repz
icebp
mov
or
jg
lcall
call
or
xlat
cli
lcall
add
xor
out
and
mov
ror
les
stos
adc
xchg
xchg
hlt
mov
cld
cmp
in
dec
fcomp
insb
ret
or
mov
dec
add
adc
pop
in
cmpsb
push
add
mov
or
mov
adc
cmpsl
push
test
mov
sti
repnz
dec
insb
enter
mov
aad
pop
test
hlt
xchg
lock
cmp
sub
inc
enter
lcall
stos
hlt
inc
nop
push
xchg
stos
dec
scas
adc
sar
push
dec
enter
lret
jb
shll
inc
or
mov
bound
dec
cmp
cmpsb
stc
and
repnz
or
or
orb
aas
and
arpl
push
push
insb
nop
dec
cli
cmp
pop
mov
push
out
inc
pop
in
jg
xchg
sbb
mov
cmp
and
jo
rcr
loopne
imul
popf
mov
es
mov
xchg
push
jne
adc
das
or
aad
stos
ljmp
and
xor
popa
pop
or
sub
push
adc
sbb
dec
cltd
mov
or
and
pop
adc
sahf
hlt
jle
xor
fiadds
inc
addb
out
pop
call
loope
fsubl
push
sub
fldenv
add
imul
push
inc
or
and
sbb
sub
pop
mov
mov
and
dec
mov
fnstsw
out
push
sub
jnp
sub
sar
mov
sahf
adc
lahf
fdivl
and
movb
push
in
decb
sbb
adc
into
inc
es
or
sbb
into
mov
sbb
sub
aam
add
std
mov
lock
shlb
cld
mov
or
insl
cmp
sar
mov
sub
mov
jb
push
outsb
add
inc
ljmp
test
fsts
mov
pop
rclb
ss
cld
stos
fimuls
sub
jb
ljmp
insb
loop
xor
push
rcrl
fldt
test
mov
jbe
xchg
jb
sub
rcrb
outsb
add
das
sub
mov
test
pop
mov
jns
hlt
jnp
test
rolb
and
push
jp
fimuls
sbb
call
jb
push
push
or
sbb
faddl
or
inc
ret
ljmp
xchg
lock
pop
pop
mov
mov
adcl
hlt
push
lret
pop
jecxz
pop
icebp
pop
adc
ljmp
jl
xchg
icebp
ljmp
jne
pop
fs
xchg
inc
jl
lcall
in
subl
mov
jle
decb
rorb
jns
mov
stc
and
int
xchg
scas
aas
add
ljmp
mov
cmp
popf
adc
ss
scas
mov
push
cld
call
dec
filds
mov
pusha
xor
or
add
pop
js
or
and
cmp
inc
add
dec
mov
adc
pop
push
in
call
jmp
lods
adc
mov
push
fwait
mov
in
mov
lods
std
sub
nop
jecxz
stos
mov
mov
pushf
push
out
sti
out
clc
add
enter
inc
fsubrs
test
push
fs
mov
or
cli
xchg
mov
add
es
dec
xor
dec
rol
or
mov
popl
mov
ds
sbb
and
jg
cmpsb
sbb
in
mov
es
sbb
sub
movsl
and
add
decl
and
in
sbb
inc
and
sub
dec
mov
pop
test
inc
or
rcrb
js
out
sub
mov
lods
push
es
mov
lret
add
cmp
cwtl
push
stos
sbb
pop
data16
pop
scas
xchg
fisttpll
xor
fsqrt
ljmp
aaa
cmpsb
inc
sahf
dec
out
ficoml
pop
in
ljmp
or
pusha
or
mov
inc
aas
pop
sub
dec
mov
loope
inc
mov
das
mov
popf
jg
call
xor
mov
xchg
and
in
stos
nop
cld
mov
adc
sbb
hlt
lcall
and
mov
sub
fsts
or
in
xor
test
sarb
or
pushl
cmp
jl
ret
cmp
repnz
inc
pop
inc
xor
mov
fdivp
pop
pop
xchg
or
push
pop
cmp
mov
jbe
in
inc
addb
sbb
das
sbb
pushf
pop
pushf
lcall
ljmp
js
xchg
test
jns
xor
xchg
andl
test
insb
ja
or
jge
lret
outsb
inc
sub
jno
dec
into
push
iret
mov
dec
aam
add
sub
adc
push
call
dec
xor
sbb
fidivl
pop
pushf
or
jl
mov
pop
iret
pushf
cs
lcall
mov
dec
cmp
movsb
iret
mov
sub
cltd
xchg
cmpsb
ss
call
rorb
mov
jae
cmp
ret
push
fadds
push
out
mov
cli
fsubr
mov
xorl
repnz
std
mov
loopne
xchg
dec
fisttps
outsl
mov
mov
int
std
inc
rcrb
cmc
push
mov
ror
addr16
popa
pop
loope
mov
loope
loope
outsb
addr16
dec
das
add
lcall
in
or
or
cmc
add
push
xor
in
cwtl
dec
add
cli
incl
jl
and
aas
mov
fadd
pop
dec
rorl
push
sti
dec
addr16
add
mov
aad
lods
mov
andl
and
jecxz
xchg
xorb
or
sbbl
loop
push
negl
jg
pop
xchg
mov
mov
cmp
jb
mov
aaa
hlt
adc
or
xchg
ffreep
enter
push
cli
dec
sbb
iret
xor
xchg
popa
mov
xchg
cwtl
popa
fcoms
loopne
dec
cwtl
push
fldt
cwtl
jae
repnz
lret
push
mov
fildll
bound
mov
mov
outsl
mov
fiadds
dec
push
and
nop
cmp
mov
pushf
fstpt
mov
popf
enter
mov
pop
les
inc
mov
dec
imull
pop
inc
ljmp
orb
adc
push
sbb
jge
test
ljmp
jg
adc
sub
fsubrs
push
ret
mov
rol
pop
inc
clc
xchg
popa
mov
inc
xchg
adc
stos
mov
pop
adc
dec
mov
pause
out
pop
lock
sbb
aaa
cmp
in
cld
push
add
fucomip
mov
shll
pop
mov
pop
icebp
jmp
pop
push
mov
hlt
lods
rolb
lea
adc
push
jae
mov
jmp
adc
inc
pop
xchg
sub
sbb
xor
scas
cmp
jg
push
adc
xor
cli
out
mov
pop
pop
jecxz
ja
adc
push
les
mov
stos
fsubs
icebp
andl
inc
pushf
movsb
mov
addb
and
mov
test
mov
adc
adc
add
ret
lds
inc
nop
mov
pop
adc
push
js
push
sahf
out
lds
mov
jae
jp
or
xchg
mov
pop
xor
sbb
push
outsb
cmp
ffree
ds
pushf
cmp
or
mov
call
lods
jbe
add
mov
cld
mov
std
mov
jo
cmp
sub
and
dec
adc
std
jecxz
cmp
jne
loopne,pn
ror
jae
xchg
fisubrl
outsl
scas
mov
sbb
inc
dec
out
pusha
dec
rolb
lock
js
mov
mov
test
push
fs
mov
sub
sar
ljmp
imul
rol
fistpl
rcr
or
outsl
pushf
fdivs
les
pop
lock
jmp
adc
sar
in
xor
outsb
sbb
movsb
xor
xchg
lcall
inc
or
roll
leave
xor
xchg
out
cld
scas
movsb
lcall
call
mov
mov
pop
dec
add
and
ror
lea
cmp
mov
scas
clc
sbbb
add
sub
sbb
xor
jb
shrl
jle
and
hlt
je
push
push
mov
mov
cmp
cmpsb
inc
jae
dec
ret
mov
cmp
jg
ss
ficoml
mov
mov
adc
mov
rcrb
mov
or
lock
addr16
fidivs
lret
leave
or
les
in
ja
incl
subb
pop
nop
jle
xor
dec
inc
mov
movsb
sbb
ds
inc
xor
or
in
add
imul
rol
orb
jno
fcomip
in
jo
fstpl
push
or
fidivrs
ja
and
or
scas
rorl
mov
cmp
inc
nop
cmp
and
sbb
movsb
push
dec
sarb
and
sahf
rolb
fimuls
dec
lea
adc
cmp
xchg
push
sarl
jmp
cmpsb
xchg
pop
movsl
cmp
lock
push
push
or
mov
dec
sahf
jg
hlt
and
inc
mov
or
xchg
clc
lcall
icebp
or
incl
inc
pop
and
xor
xor
call
addb
cmp
add
mov
cmc
pop
lock
call
dec
fildl
outsb
add
adc
movsb
add
addl
cmpsl
sarl
outsb
mul
jg
pop
arpl
dec
loope
jl
incb
sbb
xchg
pop
pop
lock
inc
adc
ljmp
xchg
xor
add
lock
ret
mov
nop
jno
lock
fldt
nop
sbb
push
imul
ja
in
int3
mov
inc
cld
push
dec
mov
pop
adc
call
dec
sti
int3
add
iret
cmp
mov
cwtl
pop
dec
in
mov
sbb
aaa
mov
jno
ljmp
inc
jl
push
cmp
inc
xchg
mov
pop
rcrb
and
sti
and
push
int3
jb
lret
dec
jnp
add
sub
pop
xchg
sar
es
sahf
clc
fs
cmp
jecxz
mov
fldt
mov
sbbb
inc
loope
mov
xor
jg
ret
mov
inc
shr
pop
push
scas
inc
push
cmpsb
scas
or
or
mov
inc
adc
mov
es
inc
adc
mov
xor
sub
jg
mov
shr
subb
add
mov
adc
fdivp
incl
je
in
scas
mov
pop
inc
xchg
lea
or
pushf
add
insb
and
std
dec
mov
popf
shlb
push
xor
jp,pn
or
icebp
ja
xor
cli
rcrb
outsb
cmp
xor
clc
faddp
push
mov
fidivs
ljmp
jo
aas
mov
invd
cmp
dec
outsb
fisubl
aaa
jmp
es
sbb
pop
cmp
inc
jl
or
jb
daa
push
or
push
mov
data16
sbbb
xchg
fwait
out
mov
shlb
jp
mov
push
pop
and
fstl
dec
hlt
jmp
and
fldcw
subl
cltd
aam
mov
mov
cli
data16
jmp
notl
ss
jmp
mov
cmp
decl
imull
gs
pop
insl
ds
mov
das
push
or
jo
jp
sbb
or
sbb
out
mov
push
mov
imul
das
js
cmc
lahf
test
push
in
cmp
popa
bound
pop
ss
ss
push
and
out
jg
sbb
scas
push
jo
add
xor
incl
lret
sub
popa
mov
pop
imul
pop
movsl
out
sbb
adc
outsb
jns
popf
sbb
ljmp
mov
push
jns
xchg
rcl
mov
mov
sub
jl
in
call
aam
enter
xchg
jno
sbb
mov
mov
pop
movsb
cmpsb
movsb
mov
pop
std
mov
shlb
aas
fwait
push
cmp
leave
mov
call
loopne
xchg
and
jle
mov
mov
adc
lock
mov
stos
loop
mov
pusha
inc
aas
jmp
fisubl
mov
sbb
add
adc
std
add
or
js
dec
loope
scas
pop
dec
dec
dec
repz
outsb
jg
mov
cwtl
xchg
cmp
add
sbb
cmp
xor
clc
sbb
lea
xchg
shll
cmp
ljmp
imul
sbb
inc
sahf
ret
add
push
xor
mov
das
push
cmp
lcall
mov
inc
jmp
push
int
out
leave
fxsave
or
adc
mov
pop
adc
sub
out
or
pushf
hlt
aaa
jl
or
xchg
cwtl
shl
out
xchg
fidivrs
sub
and
dec
outsb
push
jg
cmp
inc
je
inc
push
pushl
lahf
outsl
les
icebp
gs
mov
jecxz
mov
xchg
out
in
push
sub
shl
mov
pop
xchg
loopne
or
xchg
push
or
jmp
mov
pop
push
pop
sub
push
xor
dec
add
inc
push
xchg
cli
in
xchg
push
lcall
lret
nop
test
adc
fdivp
rol
push
xlat
inc
or
cltd
aas
lret
jno
sbb
jg
xlat
sub
push
sub
adc
xor
out
add
adcl
pop
je
inc
xor
lret
jg
ss
or
push
cmpsb
add
push
adc
fildl
sub
sub
mull
movsb
clc
shl
cmc
pop
mulb
js
and
add
or
jle
mov
jmp
repnz
and
sub
jae
sbb
adc
xor
inc
mov
jo
push
inc
ds
sbb
fmulp
mov
loop
pop
movsl
add
xor
adc
add
adc
fstp
fiaddl
xlat
inc
pop
mov
test
ljmp
and
xchg
leave
jp
aad
adc
lcall
je
sbb
mov
pop
mov
js
imul
lock
sbb
shrb
insb
into
inc
call
xchg
jp
rcl
int3
mov
mov
jg
fsubrs
fnsave
mov
in
cmp
daa
inc
sbb
dec
adcb
add
subl
pusha
shrb
and
push
pop
addl
clc
add
mov
cld
decl
aam
sbb
push
xchg
lock
std
es
shlb
mov
and
dec
rorl
fdiv
aas
xchg
mov
sarl
fidivrl
or
dec
jnp
jo
xchg
jb
pusha
loopne
xchg
inc
std
add
call
mov
push
cmpsb
sub
xchg
test
incl
mov
dec
pop
dec
jecxz
scas
nop
dec
ret
pop
lea
jae
cmp
loope
lds
push
inc
cmp
ljmp
inc
inc
cmp
and
outsb
push
xchg
or
lods
add
mov
hlt
in
mov
mov
outsl
call
arpl
clc
jg
out
and
in
push
pop
clc
ja
sub
subb
xor
call
cmp
add
and
xchg
ret
repnz
adc
push
add
mov
clc
lcall
mov
jno
sub
and
sbb
push
pop
ret
int3
mov
and
stos
sbb
ss
mov
mov
mov
into
in
inc
shl
jl
faddp
rcll
push
into
sbb
lock
lock
scas
push
jmp
or
adc
stos
lds
push
cmp
dec
aad
mov
add
and
ljmp
test
cmp
inc
in
xlat
add
add
mov
fcompl
mov
es
cmp
ja
aad
and
shll
inc
inc
pop
data16
aas
or
dec
pop
lds
call
mov
or
test
and
jg
fs
add
subb
fcompl
lea
cmp
xchg
in
xchg
inc
dec
push
in
lock
cld
pop
xchg
pusha
jne
or
jg
and
push
mov
add
pop
lret
shrl
adc
cmp
mov
push
clc
and
ljmp
pop
or
pop
inc
push
cmp
lea
xchg
shlb
sub
pop
sbb
mov
jp
or
outsl
icebp
xor
xchg
subl
xchg
data16
xor
or
gs
enter
mov
and
hlt
xlat
add
push
adc
lahf
mov
movsb
xor
daa
ss
mov
and
jle
push
int3
movsb
imull
mov
imul
push
xchg
push
pop
add
pop
adc
inc
mov
lea
sbb
data16
xchg
jg
add
push
jae
or
icebp
pop
jg
cs
dec
jo
xchg
sarb
or
add
cs
mov
test
sub
pop
mov
in
and
and
incl
sbb
popf
push
pop
jg
int3
hlt
mov
adc
cmpsb
adc
movsb
push
dec
cwtl
jbe
pop
insb
call
push
mull
testl
sbb
filds
loop
outsb
and
fdivs
lds
xchg
jp
add
or
idiv
rcrl
scas
bound
daa
popf
push
pop
sub
fsubrl
incl
add
mov
pop
jp
idivb
pop
lcall
mov
sub
cmp
in
cli
sbb
pop
in
cltd
push
decl
xor
mov
add
mov
xchg
add
fisttps
mov
mov
icebp
push
dec
lcall
int3
mov
icebp
es
jnp
scas
xchg
pop
dec
mov
sbbl
fs
clc
pop
adc
lea
outsl
mov
mov
or
or
gs
rcrl
mov
test
cli
add
pop
jg
push
pusha
gs
shlb
fstp
idivl
inc
jbe
cmpsl
jge
add
jbe
jbe
jg
mov
jl
inc
stc
in
jno
cmp
push
aam
mov
jp
or
mov
pop
ret
jp
and
xchg
lcall
scas
add
pushf
insl
dec
movsb
xor
mov
sbb
sub
cmp
mov
cmp
inc
pop
loopne
ret
jl
jle
ja
dec
cli
loopne
insb
lret
dec
gs
pop
jmp
cmp
dec
insb
mov
adc
cld
and
es
aas
pusha
enter
ja
mov
cmc
dec
or
fcomip
outsl
cli
pop
dec
pop
daa
clc
inc
adc
pop
out
jg
outsb
cmp
mov
lods
sbb
fcomip
inc
hlt
xchg
mov
adc
lret
aam
jg
test
sub
into
pop
pushf
outsl
popf
cmp
and
push
orb
lods
adc
add
cwtl
rcr
push
xchg
incl
mov
les
cs
stos
dec
mov
leave
fisttps
lret
rcrb
sahf
aad
xor
or
test
dec
fprem
out
push
shlb
dec
or
add
xchg
or
icebp
lcall
xchg
out
mov
xchg
jns
jno
popa
repnz
icebp
inc
call
mov
inc
lods
push
inc
xlat
lcall
dec
std
pop
mov
pushf
rolb
cmpb
cmpsb
mov
in
fiadds
and
mov
cwtl
and
lret
das
xchg
jne
fdivl
and
sarb
pop
push
sub
aad
xor
outsl
ficoml
out
sub
mov
mov
sbb
loop
pop
out
into
jnp
pop
inc
nop
jp
xchg
hlt
rorl
nop
mov
dec
out
mov
sub
xor
out
test
movb
test
outsb
inc
pop
sbb
sbb
jle
cltd
cwtl
xor
sbb
stos
inc
filds
adc
cmc
mov
enter
mov
ja
pop
mov
xchg
fs
popa
lock
dec
hlt
out
add
filds
in
xor
add
inc
out
clc
pop
ss
test
pop
pop
or
sbb
loop
inc
push
xor
push
add
sub
ror
cmc
mov
scas
mov
addb
std
ljmp
test
bound
jne
dec
notb
out
test
push
test
xor
and
adc
xchg
lock
ret
xchg
sbb
aaa
loope
scas
shrb
prefetchw
sbb
add
and
xchg
popa
mov
xor
mov
mov
cmc
push
push
push
mov
fldenv
dec
loopne
decl
xchg
int
mov
mov
clc
mov
adc
adc
push
mov
mov
add
ja
jg
shrb
std
pop
inc
leave
push
jne
cmp
pop
jb
dec
int
and
fmul
or
sub
push
ret
inc
addb
add
inc
pop
sub
push
stos
sti
stc
mov
cwtl
or
mov
push
sbb
adc
push
std
mov
in
or
sbb
sub
jg
lods
out
or
fidivs
filds
jb
xor
cmp
pop
ja
pop
push
sub
adc
aas
sbb
jmp
incb
shlb
pusha
fucomip
fbld
mov
inc
loopne
lret
jne
int
ds
insb
and
cmp
decl
popa
popa
cld
mov
icebp
leave
inc
xchg
or
fld
pop
decl
ret
xor
ja
push
fldt
or
pop
test
mov
inc
jp
test
push
clc
inc
sar
sub
pop
fdivrp
push
cmp
adc
in
sbb
enter
jno
repz
dec
sbb
and
xor
cmc
mov
stos
push
or
xor
out
lret
fimuls
sbb
out
push
fsubrl
das
nop
mov
add
loopne
cwtl
sbb
jbe
pop
hlt
adc
aas
xor
mov
sbb
add
arpl
dec
aaa
fisttpl
jecxz
nop
mov
inc
sahf
jle
and
cs
mov
pop
aad
pusha
subb
pop
fucom
mov
adc
std
sbb
mov
shlb
add
cltd
test
pop
mov
push
fcompp
nop
mov
cli
cs
sbb
int
cld
pop
js
into
pop
add
call
fs
adc
dec
xchg
add
rcl
je
aam
or
push
ret
inc
repz
fcomip
imul
inc
iret
mov
repz
std
fistpll
fcompl
inc
insb
mov
sub
dec
enter
pop
dec
loope
jg
add
mov
sbb
js
inc
je
pop
fidivrl
xor
jp
add
mov
insb
pop
mov
stos
lods
in
inc
pusha
dec
mov
ljmp
popa
mov
jmp
or
loope
fcoms
or
jbe
sbb
dec
adcb
inc
testb
fisttpl
mul
js
adc
fdivs
shlb
sbb
fimull
movsb
shlb
lret
xor
dec
ret
cmpsb
dec
sbb
or
adc
mov
lret
mov
movsb
cmp
out
add
ljmp
mov
xchg
repnz
mov
mov
xorb
loope
ror
and
dec
aam
sub
mov
xchg
or
and
xchg
pop
ds
sub
sbb
mov
adc
cmp
push
repz
sbb
sbb
mov
stos
mov
aaa
adc
dec
add
pop
std
push
mov
xchg
and
popf
movsb
sbb
test
pushf
pop
pop
jno
call
decl
pop
sub
sbb
lea
divl
ljmp
sbb
dec
mov
cltd
mov
pop
fistpll
mov
shll
jbe
mov
pop
addr16
aas
stos
push
jne
iret
adc
cld
call
cli
jmp
mov
aad
ret
fdivrl
out
pop
jne
mov
cmpsl
add
sbb
lock
xor
mov
adc
test
dec
sub
scas
movsb
jg
jnp
mov
hlt
lret
mov
dec
and
jl
jmp
lds
pop
int3
or
iret
jnp
mov
negl
jnp
pop
xchg
pop
push
sbb
call
mov
sti
jmp
add
pop
in
sub
dec
shlb
gs
sbb
mov
push
mov
imul
fisubrs
fs
jp
xor
mov
out
mov
das
jp
jb
xchg
cmp
inc
dec
mov
movsl
jg
and
fisttps
rol
sub
out
sar
ljmp
mov
sub
pop
push
dec
mov
ds
push
dec
sbb
rcr
arpl
ds
pop
mov
push
outsl
fmul
lahf
jnp
and
dec
std
loop
fsubl
pop
push
mov
or
or
pop
or
outsb
adc
pop
sbbb
rolb
dec
dec
or
add
das
xor
sub
sahf
movsb
mov
icebp
mov
daa
dec
push
inc
movsl
pop
adc
sub
push
loopne
pop
jp
or
adc
xorb
push
or
ficompl
add
cwtl
lock
and
mov
pop
testl
pop
or
jnp
enter
mov
xor
jg
ret
xchg
add
cmp
fistl
cli
push
shl
movsb
icebp
adcb
mov
out
inc
mov
add
mov
push
ror
cli
add
testb
mov
mov
stos
pop
mov
int
sub
out
movsb
pop
jbe
test
or
mov
lcall
rcl
mov
es
xchg
add
add
out
cld
iret
std
or
movsl
stos
inc
sbb
push
lret
or
mov
int
mov
inc
imul
sub
das
clc
sbb
mov
es
fs
sbb
inc
mov
aas
xchg
clc
pop
inc
sarb
sbb
cmp
flds
xchg
add
hlt
xchg
daa
pop
xchg
jle
and
mov
fsts
inc
or
xorl
ss
jg
mov
dec
and
mov
fbstp
lret
push
fistps
xchg
cmpsb
mov
das
mov
cmc
jmp
cwtl
push
and
push
add
enter
and
or
and
sub
pop
cmc
xchg
push
fstpt
out
push
stos
rolb
push
jg
sub
push
pop
mov
pop
mulb
ficoml
xor
pop
sub
push
inc
stos
mov
inc
xchg
subb
popa
outsb
xchg
lods
xchg
sbb
ja
or
lock
ret
sbb
mov
lcall
inc
xor
adc
cmp
mov
repnz
sbb
jo
gs
jmp
lret
dec
or
sub
cli
push
cmp
or
sbb
cmc
mov
ja
shlb
sbb
pop
lahf
sub
fs
lcall
test
fcomp
enter
sbb
dec
es
cvttps2pi
or
adc
and
in
jae
aas
pop
in
xchg
jmp
cmp
xor
or
xor
incl
fwait
test
sahf
ficomps
mov
add
push
push
shll
jns
je
or
clc
decl
adc
pop
test
sbb
dec
xchg
lods
or
les
sub
dec
push
mov
dec
mov
adc
cli
pop
in
mov
in
outsl
cmpsb
mov
test
cmpsl
pushl
in
addr16
push
lods
pop
scas
pop
push
dec
xchg
inc
loopne
jne
incl
lretw
mov
xchg
or
mov
cmp
jp
sub
push
adc
fwait
mov
repnz
dec
cld
popl
push
xchg
pusha
cmp
stc
mov
add
lcall
ret
cmc
dec
pop
dec
cmp
xor
dec
dec
add
adc
ss
mov
fstl
dec
and
into
mov
lea
jne
insl
sub
rcll
jne
sbb
mov
xlat
out
xor
iret
push
adc
or
push
ret
add
mov
scas
add
sub
pop
push
push
and
decl
sbb
dec
jecxz
cld
popf
mov
xchg
jle
outsb
cmpsl
lock
testb
mov
push
xchg
adcl
mov
lret
mov
cmp
cmp
aaa
jb
mov
sub
push
mov
jg
sti
mov
xor
add
inc
rcrl
xor
ljmp
push
outsl
lock
loopne
adc
sbb
aam
cmc
fiadds
inc
sub
sub
decl
ret
addr16
lds
sbb
jecxz
add
hlt
sbb
fistpl
dec
imul
and
push
mov
mov
jg
fdivr
cmp
xchg
or
scas
sbb
inc
bound
outsl
xor
mov
xlat
out
xchg
bound
and
std
sbb
rorb
push
test
add
or
fldz
cbtw
lock
sub
std
xor
add
cmp
gs
cmpsb
ficoms
decl
xor
out
xor
pop
lock
mov
js
jl
stos
push
ficoms
pushf
push
pop
adc
and
call
pushf
insb
mov
lods
aad
sti
out
in
repz
pop
jmp
repnz
insl
adc
bound
in
test
pop
pop
repz
mov
sar
mov
bound
and
and
bound
mov
jp
sub
cwtl
clc
insb
sar
sbb
push
popa
call
daa
repz
ja
jle
sub
mov
cmp
das
rolb
mul
push
sahf
adc
in
sub
push
mov
outsl
mov
dec
xchg
add
jnp
mov
bound
or
jo
ss
xor
faddl
jbe
xor
imul
decl
jo
mov
and
aaa
lea
fwait
push
inc
push
sub
movsl
pop
fsts
cld
stos
push
int
stc
xor
fcomi
mov
pop
push
scas
insb
or
and
in
std
and
xchg
test
adc
adc
pushf
xorb
lret
inc
cmp
inc
push
or
call
mov
mov
add
sbb
fnstcw
jmp
lds
push
adc
pushl
cwtl
cli
orb
inc
adc
mov
sbb
aas
out
push
jecxz
loopne
mov
push
jge
test
push
fucomi
xchg
into
inc
xor
lcall
mov
pushf
jge
stc
fldt
fs
das
jnp
lods
popf
mul
frstor
or
jg
jo
sahf
add
cld
std
lock
jae
test
pop
stos
stos
fs
imul
rclb
cmpb
cld
pop
adc
adc
pop
fmull
xor
incb
out
inc
cmp
cwtl
out
and
push
sbb
mov
inc
lcall
aam
add
push
subb
fucomi
icebp
pop
loop
in
outsl
out
mov
je
jno
sub
test
in
mov
clc
push
insl
push
mov
jb
pop
mov
cli
mov
jle
push
mov
mov
lds
dec
adc
add
sbb
sub
cli
aas
or
mov
xchg
jge
fisubrl
hlt
jmp
pop
loop
mov
pop
lea
je
mov
pop
inc
xor
xor
call
mov
cmpsb
mov
stos
sub
sbb
js
les
mov
mov
inc
fs
xchg
stos
or
enter
out
movsb
fdivs
push
shll
cmp
and
mov
rcl
lods
adc
mov
sbb
mov
sub
inc
sbb
je
jae
rcr
jne
sahf
mov
mov
mov
ljmp
inc
xor
push
adc
push
int3
dec
cmpb
mov
dec
fidivrl
push
cmp
push
decl
gs
adc
jle
mov
das
mov
jb
ror
std
dec
pop
movsl
or
fs
push
movsb
ds
ja
inc
movsl
insb
mov
sub
icebp
cmp
sub
inc
pop
push
aas
adc
jmp
rcrw
mov
xchg
hlt
xor
mov
clc
outsl
les
mov
push
cmp
jo
stos
or
enter
sbb
or
cli
cmp
leave
push
hlt
xchg
inc
std
dec
mov
int
outsl
xchg
fdivrs
push
sti
int3
inc
or
dec
mov
mov
add
sub
add
sbb
inc
mov
ss
or
enter
in
inc
loopne
add
sbb
xlat
push
mov
icebp
test
lret
aad
es
xchg
mov
or
stos
ljmp
cmp
xchg
adc
stc
arpl
and
mov
dec
mov
mov
sbb
mov
push
sbb
mov
mov
cmpsb
sbb
sar
xor
jns
fisubrs
cmp
fildl
or
xchg
sub
pushl
mov
push
sbb
aaa
fdivr
pop
xor
out
icebp
scas
xchg
jle
sub
call
dec
add
push
movsb
sub
mov
flds
pop
hlt
sub
icebp
dec
jp
js
jg
movsb
push
or
lcall
mov
inc
jbe
iret
shll
sbb
loopne
cmpb
or
shll
fcomip
popf
rorb
mov
jmp
xchg
mov
fdivr
ljmp
outsb
test
lret
stos
ljmp
shll
and
sub
sbb
push
fwait
jle
insl
add
popf
in
sbb
cmpsb
lret
pop
es
insl
iret
mov
xchg
jbe
lods
adc
movsb
inc
cld
ja
and
jge
pop
lock
or
jg
call
xchg
dec
xor
ficoml
test
mov
pop
mov
in
nop
shlb
int
sub
aad
push
std
xchg
mull
inc
dec
sti
push
cmp
std
lods
cmpsl
dec
xchg
fwait
testl
adc
fs
or
cmc
pushl
mov
stc
loop
inc
mov
aaa
mov
mov
xchg
sbb
and
aaa
cld
enter
jno
push
adc
ret
lret
addr16
and
enter
hlt
jg
push
pop
or
xor
inc
inc
mov
movsb
test
add
push
mov
mov
inc
rcll
push
mov
mov
into
push
dec
hlt
adc
cmp
mov
dec
mov
pop
or
xchg
in
fbld
xchg
mov
inc
jp
insb
push
bound
or
ja
test
xor
pop
xor
stos
mov
cs
sbb
pop
cmp
int
xchg
xor
shrb
mov
bound
test
mov
fwait
jo
cld
xor
shlb
sahf
mov
fbstp
adc
loopne
pop
cltd
repnz
ljmp
jp
jecxz
fldcw
mov
imul
dec
lods
decb
scas
add
mov
mov
pop
lock
sub
dec
bnd
lret
cmc
into
inc
cmp
or
jno
jl
andl
scas
ret
pop
xchg
adc
or
add
mov
fbstp
sub
clc
jecxz
je
aaa
sbb
or
add
and
sub
idivb
mov
sbb
rol
adc
pushf
inc
mov
std
testb
nop
cmp
ret
in
inc
pop
xor
xor
inc
mov
push
ss
std
ljmp
push
sbbl
inc
dec
pop
ds
push
mov
sub
cmp
cmp
sub
adc
mov
push
adc
xor
or
inc
cmp
incl
popa
movsb
stos
push
and
mov
mov
mov
scas
call
sbb
inc
or
xor
push
pop
or
inc
push
and
js
mov
in
adc
jb
and
out
jbe
xor
adc
daa
decl
add
outsb
cwtl
xor
inc
jg
outsb
and
add
sbb
pop
andb
insb
daa
cmc
push
xchg
jns
imul
call
push
cmpsb
je
xchg
cs
push
movsb
dec
adc
xchg
jecxz
jnp
push
dec
mov
or
push
push
xor
lcall
ja
ret
mov
stos
mov
data16
xor
scas
add
inc
pop
mov
and
lcall
jae
js
mov
and
and
pop
mov
aad
js
sbb
shl
push
addl
push
imul
icebp
xor
loopne
sarb
test
pop
stc
pop
sub
lock
dec
into
adc
shll
faddl
jo
or
sbb
ja
fdiv
mov
inc
jmp
sub
jno
lcall
dec
adc
sbb
add
add
xchg
es
mov
jo
fbld
or
mov
mov
loop
push
outsl
pop
sahf
push
aas
gs
shll
sub
jo
shrl
add
xchg
jne
rclb
jbe
test
jle
inc
in
ja
in
mov
in
pop
push
xor
shrl
pop
jl
call
cld
mov
adc
xchg
jl
cmpsb
int
fstp
cltd
das
jecxz
push
lret
inc
sub
inc
mov
les
dec
imul
and
push
test
adc
sub
adc
mov
lahf
call
mov
test
adc
xchg
lahf
popa
xlat
mov
rclb
dec
mov
mov
fstpt
mov
sbb
add
inc
shlb
imul
xchg
adc
mov
lcall
add
incl
cmp
cs
mov
or
sub
inc
cwtl
add
inc
cli
add
mov
push
mov
jg
sbbl
cld
mov
xchg
jecxz
dec
adc
mov
nop
cmc
cld
fucomi
js
bound
jg
jle
sub
sub
lds
add
nop
pushl
movsb
fadd
mov
in
ror
fists
repnz
sub
insb
lcall
dec
fs
imul
sub
or
lods
push
jb
xchg
mov
xor
fld
push
ljmp
mov
sbb
int3
mov
mov
imul
xor
cmc
mov
out
insb
jns
xorb
out
fdivp
das
je
jo
mov
cltd
push
pushf
xchg
dec
fmulp
mov
ljmp
cmc
lret
dec
mov
or
jle
loope
inc
aas
push
mov
shll
pop
lcall
push
mov
pop
lds
fildll
je
rcll
lds
xchg
cmp
push
sahf
out
pusha
pop
and
aaa
pop
mov
sub
hlt
out
faddl
push
out
pop
cs
lcall
push
xor
stos
add
add
cmp
pop
push
push
aas
rclb
sbb
pop
xlat
add
roll
xchg
mov
repnz
shr
dec
ljmp
mov
push
out
lcall
fwait
stos
xchg
fstpt
out
or
imul
push
stos
test
iret
inc
mov
sbb
xchg
cmpsb
dec
dec
iret
movsl
mov
inc
add
decl
lds
pop
or
clc
cltd
sbb
adc
outsb
xchg
dec
enter
sbb
mov
je
mov
movsb
inc
add
mov
aaa
jge
lock
divl
stc
mov
insb
mov
cmp
in
mov
jno
and
js
mov
je
loope
pop
lock
jbe
call
xchg
cwtl
pop
xchg
mov
adc
insl
arpl
loope
push
mov
aaa
in
adc
xchg
shlb
push
out
fldl
les
adc
rorl
jmp
sub
mov
push
aam
leave
movsb
cli
lcall
add
cmp
popf
push
insb
pop
jno
pushf
or
mov
outsl
push
lods
out
stos
jmp
jle
mov
adcl
dec
adc
shl
test
lea
je
jp
dec
pop
gs
cmpb
inc
aaa
jecxz
inc
push
into
pop
cmp
nop
sub
add
inc
and
xchg
xchg
xor
mov
pop
mov
push
pop
roll
pop
bound
call
adcb
xchg
mov
mov
pop
push
out
xchg
push
add
js
sub
mov
loopne
aam
mov
mov
push
repz
mov
push
xor
bound
clc
mov
lods
jg
sub
int
daa
int
pop
sub
rolb
adc
lods
push
xor
adc
scas
filds
movsb
jb
pop
mov
sub
bound
adc
pop
movsb
test
jle
iret
mov
sbb
xchg
in
js
mov
jo
sbb
jg
nop
jo
iret
mov
dec
movsl
daa
pop
fiaddl
jl
imul
jae
flds
stc
lcall
mov
imul
repnz
out
dec
fwait
idivb
mov
push
inc
xor
sub
jg
xchg
pop
dec
inc
gs
fsubs
jnp
push
inc
push
cld
pop
popa
add
iret
sub
xchg
xchg
fcomip
mov
or
dec
mov
or
in
out
in
xor
and
sub
fdivrl
fistl
pop
pushf
adc
inc
pusha
cs
xchg
push
pop
jns
rcrb
jg
movsb
push
std
dec
and
inc
pop
andb
push
push
mov
idivb
rclb
sub
insl
adc
dec
bound
aam
out
push
xor
mov
push
inc
add
fdivr
std
sub
or
cmp
sub
sub
hlt
decl
call
push
mov
sarb
hlt
jno
es
mov
test
mov
sbb
incl
or
hlt
mov
and
cmp
loop
decl
mov
fildl
or
test
push
mov
mov
jb
test
push
aaa
scas
mov
xchg
sar
testb
dec
cli
ret
push
ljmpw
cmc
das
js
ret
mov
dec
adc
scas
mov
add
decl
mov
push
inc
icebp
test
mov
sub
xchg
or
sub
sub
jg
mov
and
inc
pusha
mov
inc
mov
out
rorb
sub
push
inc
rcll
repnz
mov
push
addl
push
scas
addr16
aam
pop
cmpb
cmp
inc
test
mov
pop
push
sbb
lock
cmpsl
test
aas
pop
sub
call
mov
and
stos
clc
fbstp
pop
push
inc
inc
xor
adc
ror
sbb
jmp
shrb
adc
cli
push
adc
jo,pt
xchg
call
imul
cs
fidivl
sub
iret
mov
mov
outsl
mov
mov
sbb
jns
inc
sub
push
popf
pusha
mov
test
jmp
push
sub
inc
adc
fistps
int3
fcomps
ficomps
inc
push
in
mov
pop
iret
mov
and
mov
cmp
mov
dec
pop
xchg
add
mov
pop
in
add
outsl
fdivs
dec
ss
add
mov
lcall
inc
fwait
jno
subb
aaa
xlat
inc
rcll
cwtl
clc
mov
mov
adc
sahf
ja
xor
cmpsb
adc
push
pop
or
xchg
xor
sub
pop
inc
lahf
outsb
adc
rolb
stos
add
add
jp
mov
int
and
mov
fildll
xorb
inc
mov
adc
xor
rcll
and
lods
sbb
jne
ret
push
sahf
mov
ds
movsl
cmpsb
pop
push
add
fidivrs
pushf
push
cli
scas
lea
mov
push
inc
sbb
ljmp
lods
fnstcw
mov
jbe
inc
mov
sbb
loopne
cmpb
aaa
mov
xor
stc
das
jbe
add
test
dec
loop
xor
enter
jle
push
jno
mov
pop
dec
pusha
shl
push
mov
mov
mov
shll
pushf
sbb
or
and
inc
push
pop
mov
lods
cli
outsl
adc
push
mov
xor
dec
xor
call
fcomp
mov
jle
lods
aas
nop
enter
bound
sub
ss
push
lcall
mov
add
fcompl
aam
std
lcall
test
and
ss
mov
pop
mov
jae
jno
pushf
loop
pop
or
pop
sub
jl
std
jg
xchg
daa
in
xchg
out
clc
fistl
push
subb
lods
mov
cmpsl
add
mov
mov
rolb
pop
xorl
jo
sub
cli
fisttps
out
jb
mov
mov
data16
adc
not
cmp
add
cld
cwtl
in
cmpsl
popa
mov
lahf
mov
sbb
sbb
cs
mov
pusha
nop
mov
jg
sbb
out
cwtl
sahf
or
and
mov
xchg
movsb
leave
jno
shrb
es
sar
je
lds
leave
push
jmp
shlb
push
xor
into
xchg
out
xchg
addl
add
mov
jle
jle
add
or
xorb
scas
sbb
jg
sbb
add
push
mov
call
sub
or
ds
cmpsl
jne
div
out
jmp
cli
jle
addl
xchg
cmpsl
gs
pop
xor
push
inc
stos
pop
jno
lcall
inc
test
adc
hlt
sub
push
mov
and
fdivrl
jbe
mov
push
sub
call
add
mov
mov
fidivl
pop
sete
cltd
mov
repnz
shll
dec
stos
data16
mov
and
or
push
dec
inc
pandn
sbb
jns
and
dec
jl
andl
out
es
push
xchg
scas
sbb
das
fcmovnb
mov
outsb
inc
or
lods
mov
pop
shlb
cld
pop
mov
xchg
add
or
pop
sub
jg
sbb
mov
ljmp
enter
cmp
lock
outsl
out
sbbl
rorb
lahf
xchg
dec
out
scas
cmp
fdivrs
clc
out
lcall
and
sbb
mov
mov
add
stos
mov
mov
or
jle
sbb
and
inc
fs
xor
insb
pushl
popa
mov
in
dec
push
aas
sahf
mov
sub
fcmovnu
les
or
and
jle
or
or
jp
cs
mov
hlt
test
xor
add
das
push
push
adc
test
aas
xchg
out
pop
adc
pop
rcr
lods
ljmp
gs
inc
pop
mov
lret
lea
mov
xchg
and
xchg
aas
rclb
daa
jg
rcrl
add
mov
mov
mov
cmp
cli
add
xchg
xchg
add
scas
pusha
jo
sar
or
data16
add
add
mov
and
mov
dec
dec
lods
cmp
add
mov
xor
hlt
pop
outsb
aam
push
sbb
aam
in
pop
push
jecxz
mov
xchg
jnp
adc
push
leave
stc
mov
adc
inc
pushl
mov
dec
lock
add
ret
fmull
cmpb
jo
pop
jno
addl
jmp
movsb
mov
inc
lret
push
push
inc
adc
sub
mov
addr16
sub
or
addr16
jg
or
pop
int3
push
scas
xchg
repz
sbb
sub
cmpsl
out
add
pop
xchg
bound
ficoml
mov
adc
daa
jecxz
jle
and
aad
jecxz
loope
push
xchg
add
mov
push
pushf
popa
je
clc
jg
test
add
cld
cld
sbb
out
dec
bound
add
push
or
push
mov
mov
mov
sub
rorl
cli
xor
les
mov
jbe
sbb
rcl
bound
cmp
mov
mov
xchg
mov
loop
push
rclb
jnp
in
sti
bound
push
repz
or
pop
mov
inc
mov
std
or
rorb
imul
gs
add
jmp
cwtl
addr16
and
pop
mov
xor
dec
popa
dec
sbb
dec
sahf
sub
addr16
incl
push
push
sbb
dec
push
cmp
scas
pop
test
inc
dec
cli
sbb
jg
xchg
in
in
popa
pop
jp
imul
xor
mov
roll
add
dec
mov
ds
out
adc
push
mov
cmp
jb
xchg
or
dec
mov
ss
adc
test
loopne
inc
pop
bound
popf
aaa
cld
inc
xchg
ret
sbb
decl
test
fbstp
mov
daa
fisubrs
mov
out
out
cmc
xor
call
test
push
sbb
ja
arpl
mov
inc
mov
daa
mov
in
mov
ds
push
adc
push
ficomps
fs
jg
lods
lods
ja
or
xchg
mov
sbb
cmp
jg
dec
pop
aam
sub
pop
fiaddl
ret
jmp
dec
outsl
or
mov
inc
cmp
test
ja
repnz
inc
and
das
pop
clc
loopne
sbb
in
test
mov
pushl
int3
jbe
lods
dec
stos
je
xchg
sbb
fstpl
dec
inc
mov
xchg
nop
push
scas
scas
xor
lcall
mov
mov
daa
mov
outsl
leave
jmp
movsl
push
dec
sbb
je
into
out
inc
hlt
cmp
jae
jecxz
add
sbb
call
lods
fwait
xchg
jne
and
scas
lcall
inc
jg
xchg
mov
jg
push
sub
jle
xor
icebp
sbb
and
in
movsb
mov
movsl
in
repnz
ds
push
xchg
or
push
fdivrs
push
repz
lods
imull
sbb
mov
fbld
aaa
out
rclb
cmp
xor
xchg
add
jo
pop
jl
sbb
les
cmp
pop
cs
cli
shll
scas
and
pop
adc
dec
inc
aam
mov
jp
xor
adc
mov
cs
mov
cmc
ss
and
cmc
gs
lods
adc
adc
cld
mov
push
cld
add
push
and
aam
ljmp
sahf
js
test
and
adc
ret
inc
repnz
mov
sbb
repnz
pop
data16
adc
ss
pop
add
stos
icebp
push
sbb
out
pop
mov
fldl
shr
dec
loope
inc
ljmp
lcall
sbbl
lock
jecxz
iret
cmpsb
add
push
push
or
mov
fbstp
sbb
stc
fsubp
ret
lods
out
insl
mov
cmp
scas
imul
dec
xor
push
xchg
push
decb
or
scas
popf
mov
pop
dec
add
popf
cmpsb
or
xchg
jbe
ljmp
push
addl
dec
lods
out
or
pop
inc
jne
mov
lock
dec
sub
and
jg
mov
inc
xchg
in
xchg
mov
pop
add
loopne
xor
hlt
dec
in
js
mov
mov
loop
or
add
lock
mov
pop
mov
add
mov
rcrb
sbbl
mov
jnp
mov
pop
cltd
adc
or
mov
mov
push
mov
pop
push
loop
sub
data16
stos
test
dec
sbb
cmp
jb
aad
daa
xlat
cmp
mov
mov
add
push
jl
lret
cmp
lcall
insl
xorb
daa
lods
pop
xor
push
push
sbbb
and
xchg
dec
xor
or
add
js
jmp
aam
daa
pop
pop
mov
arpl
jp
leave
dec
jae
sbbb
rcr
add
flds
loopne
jl
mov
or
mov
out
xchg
or
dec
push
jb
ss
loop
aas
movsb
sbb
or
mov
xor
fwait
pop
popa
mov
into
jmp
cld
fidivs
pop
test
lret
xchg
xchg
add
xor
push
daa
sbb
loopne
call
loop
ljmp
cmp
and
push
cmp
icebp
fwait
pop
jp
push
fnstsw
xchg
add
dec
fsubrs
fisubs
mov
sar
mov
stc
movsb
dec
outsb
sti
pop
sub
mov
adc
pop
jl
mov
push
fcmovb
sub
cs
xchg
cmp
stos
stos
jl
fs
push
int
sbb
lods
scas
pop
dec
sar
mov
in
and
sbb
jae
aas
add
dec
imul
sbb
adc
shll
mov
xor
add
clc
gs
int3
std
outsl
repz
push
cmp
clc
sbb
decl
lods
inc
mov
fiadds
sbb
pusha
push
fxch
inc
nop
push
and
xor
mov
insb
in
ret
in
mov
xchg
sbb
pop
inc
xor
add
mov
jp
push
cltd
outsl
mov
dec
and
filds
test
pushf
shll
mov
fnsave
in
mov
push
add
sbb
insb
mov
push
add
loop
punpcklbw
add
arpl
ja
or
and
xchg
cmpsl
cwtl
cmpb
cmpsb
std
aam
dec
in
pop
cmc
cmp
lcall
jbe
jne
insb
sub
es
pop
push
test
mov
or
int3
shlb
xchg
mov
pop
imul
outsl
cmpsb
outsl
jmp
imul
jp
and
ljmp
sbbb
lds
fbld
movsb
pop
ds
in
scas
mov
rolb
ja
int3
jg
sarb
cmp
add
jmp
sub
insb
int3
ret
mov
adc
add
dec
icebp
mov
push
or
scas
jle
aam
ljmp
call
clc
adc
xlat
mov
push
leave
xchg
inc
int
sbb
fcmovu
stos
lock
inc
jo
inc
add
push
loopne
and
int
icebp
leave
cmp
pop
inc
addr16
pop
cld
fwait
imul
in
loop
sbb
lods
clc
push
xlat
outsb
dec
xorb
fucom
push
lret
lcall
in
js
imul
pop
add
adc
call
cmp
mov
mov
test
mov
inc
ret
fsubrs
mov
repnz
push
and
xor
xchg
dec
negl
mov
cmp
cmp
xlat
mov
mov
and
cs
clc
xchg
or
int
movsb
pushf
movsl
or
or
ljmp
adc
sbb
mov
in
xor
in
bound
js
sub
fdivrs
fidivs
out
in
repz
jp
fdivp
xor
movsb
pop
sub
int
dec
jns
push
fdivr
mov
pushl
movl
shll
or
inc
sbb
adc
in
into
call
int3
dec
in
xchg
and
xor
mov
and
pop
push
sahf
pop
movsb
ror
loop
nop
cli
and
jns
in
mov
call
jb
jo
popf
ret
mov
jmp
js
mov
jecxz
jns
xchg
test
repnz
fisttpll
and
jb
xchg
lcall
shlb
pop
subb
jle
jmp
push
and
rcrl
and
adcl
dec
adc
shlb
xor
daa
cli
ljmp
xchg
lods
mov
shrl
call
inc
pop
pop
inc
mov
ficomps
add
or
idiv
outsl
mov
pop
pop
mov
std
xchg
imul
ljmp
sub
pop
jmp
in
mul
les
imul
in
mov
inc
add
ret
inc
mov
sub
cmp
inc
cmpsb
mov
pop
outsb
aaa
dec
or
and
dec
es
push
cld
pushl
xchg
fldenv
adc
arpl
jno
pop
in
cmp
adc
adc
pop
inc
in
lahf
popf
mov
cmp
rcrl
les
adc
dec
in
or
mov
cli
mov
mov
mov
mov
je
outsl
and
lret
jp
cli
ret
fcmovb
dec
lock
cld
fistps
sub
inc
dec
inc
pop
xor
aad
loopne
jecxz
fbstp
add
test
lcall
xor
in
push
mov
int3
mov
jb
cld
jae
push
cld
repz
add
call
mov
inc
stos
enter
cltd
xchg
aad
rolb
rcrl
xor
sbb
adc
pop
xor
std
adc
or
dec
jg
test
outsl
adc
inc
push
lcall
fidivs
mov
dec
add
xchg
xchg
jne
fbld
jmp
mov
push
add
out
jg
pop
pusha
dec
cmp
add
pop
ljmp
inc
ds
xor
cmp
push
subl
sbb
sub
iret
ljmp
inc
add
sahf
pusha
addr16
cli
dec
in
dec
jae
xchg
jg
sar
decl
cmpsl
cmpsb
mov
add
lock
rcrb
pop
inc
ss
push
sti
std
pop
add
cmpsb
aaa
cmp
jle
pushf
hlt
mov
scas
pop
int3
in
clc
xchg
and
hlt
outsb
rclb
sub
sbbl
pop
adc
movsb
repnz
jno
dec
stos
outsb
es
movsl
insb
call
mov
stos
pop
fs
mov
mov
lods
pop
mov
sub
ljmp
imul
cs
jecxz
pop
pop
jno
in
es
lods
inc
adc
mov
or
popa
adc
movsl
mul
out
mov
int3
mov
cmpsl
xor
jo
ret
std
fsubrs
or
out
cmp
scas
jp
pop
mov
add
sbb
inc
inc
sub
inc
jecxz
xor
es
aam
xlat
bound
enter
cltd
dec
leave
outsb
jge
sub
fadds
add
lock
push
dec
test
and
xor
pop
jne
jns
pop
rcrb
movsl
mov
in
mov
out
mov
rorb
loope
scas
test
jle
and
bound
sar
xchg
mov
xchg
cmp
out
pop
xchg
mov
jle
xchg
loop
xor
lds
push
leave
add
fldt
movsb
pop
xor
push
jne
mov
scas
push
sbb
int
adc
or
adc
pop
cli
xchg
fwait
nop
popa
xchg
js
adc
jle
cwtl
sbb
aad
jbe
mov
fwait
stos
push
xchg
xchg
test
lods
cmp
mov
mov
nop
outsb
mov
incl
repz
or
mov
lcall
aam
aaa
mov
jmp
callw
push
lods
das
pop
cld
xchg
out
fmull
xorl
push
aad
cmpsb
loop
push
mov
lock
mulb
insb
dec
mov
adc
ljmp
std
loopne
mov
pop
add
fisttpl
push
repz
push
shrb
outsl
or
es
mov
fs
scas
lds
jl
dec
imul
popl
mov
mov
orb
jg
dec
inc
push
loop
sbb
sar
jmp
sub
xor
pusha
mov
pop
lahf
mov
pop
jo
bound
fcoms
cs
lock
iret
hlt
push
es
ljmp
ljmp
or
xor
cmp
stos
mov
sub
in
adc
cmp
imul
pop
pop
pop
lods
or
idiv
filds
mov
push
inc
and
es
in
sub
ret
pop
inc
inc
fsubl
lret
sub
incl
lds
and
negb
and
mov
rcrb
ljmp
mov
jl
xchg
mov
add
sti
inc
rcrl
fsts
mov
sbb
mov
fwait
cli
aad
test
jb
sub
dec
stos
sub
push
rcrl
xchg
frstor
iret
mov
rolb
addr16
mov
insb
pop
mov
sti
push
mov
add
or
movsl
shll
incl
aas
adcb
push
adc
shlb
fistpl
in
mov
and
cmp
loopne
rcrb
ret
cmp
call
decb
clc
int
loopne
mov
pop
das
stos
pop
add
xchg
or
cmpsb
and
mov
cli
add
mov
push
xchg
sets
ficoml
cmp
mov
pushf
jg
loope
push
add
dec
in
fcmovb
add
xchg
js
aam
jle
xchg
adcl
daa
adc
enter
mov
lahf
inc
mov
or
push
xchg
cld
pop
mov
sub
mov
sbbb
add
add
movsl
adc
xor
inc
inc
xorb
pop
push
mov
cli
push
out
add
adc
stc
inc
bound
test
decl
aaa
jg
sub
dec
mov
lcall
fisubrs
and
cmp
xchg
sub
popf
jbe
dec
nop
clc
push
push
loope
lea
lock
inc
call
loop
cmp
mov
outsl
rcl
or
imul
mov
pop
dec
repnz
mulb
sub
inc
and
ljmp
inc
or
jg
data16
pop
dec
or
xchg
add
mulb
xchg
lock
cmp
loopne
adc
jne
cmp
mov
inc
add
ja
aaa
mov
mov
xchg
icebp
orb
push
mov
lcall
cmp
lods
sbbb
and
pop
mov
imul
add
das
adc
pushl
ret
xor
notb
mov
jmp
shl
and
call
sbb
and
xchg
stos
and
or
mov
jb
pushf
scas
jb
notb
fcmovbe
rolb
jae
dec
hlt
lcall
push
ret
shl
cmp
sub
call
dec
mov
lcall
les
mov
xchg
and
leave
daa
fs
jg
lods
pushl
loope
aaa
fiadds
hlt
shrb
adc
fisubrl
jmp
mov
or
mov
sbbl
rolb
or
mov
xlat
loop
add
cmpb
mov
lds
das
mov
filds
scas
and
inc
fstpl
xchg
sub
sub
push
sub
xchg
cli
or
cmp
xor
addb
std
push
das
insb
add
ljmp
out
es
lcall
mov
lock
icebp
adc
mov
test
pop
xchg
in
xchg
add
sbbb
fwait
and
and
iret
mov
aam
inc
push
xchg
clc
mov
ja
jg
addb
mov
rolb
push
add
addb
cmp
xchg
dec
dec
popa
jmp
pop
jg
repnz
push
xchg
jl
xor
inc
mov
enter
inc
cmpsl
lahf
pop
add
jae
fldenv
fnstsw
xchg
xchg
jae
sub
jp
xchg
or
mov
jns
aad
pop
pop
push
sbb
push
clc
dec
push
std
lahf
ss
mov
sbb
jmp
and
dec
and
icebp
mov
sub
ret
sbb
jecxz
hlt
add
into
out
test
pop
mov
sbb
xchg
and
push
sub
ja
das
dec
ss
jae
push
xor
in
sub
mov
push
jg
incl
daa
imul
jne
mov
pop
stc
cmpsl
sbb
lock
add
ja
imul
add
popa
sub
rcrb
std
lods
jmp
mov
xor
pop
push
int3
push
sti
jge
add
mov
jno
inc
inc
xorb
insb
cwtl
dec
out
lods
jns
arpl
push
stos
loop
cmp
xor
xor
xchg
mov
ljmp
and
sub
mov
push
inc
adc
fcom
mov
and
dec
fwait
or
add
pusha
rorl
add
fcmovnbe
inc
cwtl
or
push
fcmovnb
push
addr16
mov
jmp
outsl
stos
and
loop
fcomps
mov
xor
xchg
mov
sub
rcr
mov
lock
xor
out
adc
xor
pusha
enter
aaa
cmc
movsl
hlt
adc
movsb
jno
into
popa
jge
fadd
or
pop
dec
jmp
scas
push
xchg
out
add
pop
std
enter
lcall
pop
mov
dec
popa
rcr
inc
jmp
fwait
fdivrs
dec
mov
clc
js
les
cmc
mov
arpl
mov
ss
movsb
jg
fs
jb
sbbb
arpl
enter
mov
jnp
stos
fisttps
push
aad
scas
pop
xor
and
fmul
dec
pop
clc
call
jl
xlat
and
xchg
xchg
pop
dec
jmp
xor
cmp
and
ret
mov
ljmp
xchg
cmpb
mov
test
cli
mov
mov
pop
gs
jle
inc
dec
call
clc
call
popf
or
xchg
fisubrl
push
loopne
xchg
daa
and
sbbb
mov
sbb
jg
out
out
popf
sbb
imull
jp
jge
jp
jle
gs
out
and
ds
xor
sub
mov
xchg
clc
decl
cmpsl
push
jg
jb
push
adc
dec
lret
sbb
pop
mov
xchg
add
ja
push
int
scas
inc
xchg
test
rclb
test
add
nop
ljmp
shll
gs
sub
xchg
push
cltd
mov
adc
mov
cmpsb
dec
ret
fidivs
sub
lods
add
dec
lretw
jl
jl
push
sbb
mov
icebp
add
fs
lcall
shlb
jmp
cmp
push
fs
out
test
xor
in
test
add
mov
mov
incl
inc
mov
aaa
adcb
sbb
mov
andl
jmp
aaa
dec
xchg
jle
std
adc
jg
mov
ja
and
stc
mov
into
jge
add
pusha
cld
fisubs
dec
xchg
or
pop
push
call
ljmp
jmp
imulb
jne
js
leave
movsl
cmpsl
iret
into
arpl
in
pop
jg
pop
imul
jns
mov
test
aas
jecxz
cld
jnp
hlt
adcl
cmc
xchg
add
xchg
lds
mov
mov
xchg
jb
dec
enter
aaa
ficoml
mov
fucomip
iret
cld
mov
roll
adc
mov
xorl
out
sub
aad
rolb
push
add
cld
into
hlt
cld
pop
cli
dec
mov
jmp
jae
or
jb
andb
lods
sbb
cmp
scas
xor
inc
das
es
xor
ret
cld
pop
jmp
xchg
clc
ja
lods
pop
outsb
fsubl
roll
inc
xor
mov
imul
call
jle
insb
and
lods
push
lret
cs
mov
std
loop
fmuls
pusha
jp
lock
dec
dec
test
push
xchg
xor
test
sbb
std
aad
enter
in
mov
adc
lahf
xchg
add
mov
cmp
arpl
jmp
sbb
adc
mov
add
jp
imul
or
outsb
lret
ljmp
cmp
in
pop
push
push
xchg
jge
andl
pop
cmc
fistpll
je
iret
cmp
fsubl
sub
fdiv
lea
mov
pop
mov
jl
es
inc
dec
inc
inc
mov
inc
mov
in
cwtl
sahf
inc
pop
call
cmc
jecxz
cmp
test
mov
ret
mov
jg
nop
xchg
or
mov
icebp
jbe
sbb
in
jle
das
push
je
or
and
and
insl
xor
inc
dec
jg
push
idiv
fwait
mov
pushf
fs
or
inc
mov
lea
inc
push
mov
xor
sbb
jmp
or
xchg
pop
mov
in
fcomip
pop
push
mov
dec
mov
repz
dec
mov
add
enter
out
mov
imul
fwait
test
fcoms
andb
nop
fcompl
add
add
jmp
pop
push
dec
fiadds
add
jg
mov
sbb
mov
mov
sub
pop
mov
cmp
stos
repnz
sub
mov
cs
add
sbb
mov
sub
sbb
mov
pop
jno
orb
das
cli
decl
xchg
insl
mov
mov
or
loop
insb
cmpsb
lods
jmp
daa
ret
push
jecxz
pushf
adcb
dec
loope
decl
cmp
test
mov
or
xchg
dec
push
int3
xchg
inc
outsl
mov
inc
lock
jmp
aad
pop
cmp
pop
jns
adc
std
mov
cld
or
imul
shrl
shrl
jbe
cmpsb
out
push
sub
std
mov
mov
sbb
adc
xchg
leave
fs
les
mov
mov
cmp
inc
outsb
adc
xchg
xor
jno
lods
mov
add
cs
mov
add
lods
out
sub
lock
dec
inc
mov
cltd
cmp
jle
or
clc
add
mov
mov
push
nop
roll
xlat
xor
ror
sbb
out
push
adc
lret
scas
or
or
jmp
push
incl
jne
fistps
push
sbb
repnz
out
shll
add
adc
mov
add
mov
or
cli
cmpsb
cli
or
scas
out
ret
jbe
mov
das
push
fs
adc
imul
pushf
dec
test
adc
loopne
pop
xchg
dec
clc
push
lods
push
dec
cwtl
mov
in
or
decl
imul
mov
mov
insb
jne
out
mov
jecxz
xchg
mov
test
sbb
jmp
repnz
in
pop
sahf
jmp
pushf
lods
pusha
iret
incl
out
out
xor
mov
fadds
aaa
adcl
xchg
nop
mov
in
lock
subb
lcall
je
scas
push
inc
cli
jne
imul
mov
mov
out
mov
pop
adc
sub
or
sbb
dec
dec
aam
fwait
pop
dec
shlb
xlat
scas
sub
sub
loop
sub
clc
mov
xchg
fnstsw
mov
mov
cmpsb
ret
lods
outsl
in
cmp
shll
inc
jne
mov
adc
cld
lcall
jp
adc
aas
push
sbb
sahf
outsb
sahf
fsubs
inc
push
pusha
fsubrs
out
sbb
shlb
lea
pop
hlt
ja
int
cmp
sbb
int
and
xor
pop
cltd
add
icebp
inc
nop
inc
popa
xor
lods
rcrl
popf
mov
mov
sbb
addr16
cli
iret
and
mov
call
xor
sahf
mov
fimull
push
lret
mov
scas
mov
push
pusha
dec
pusha
cmp
sbb
or
inc
add
fstpt
dec
je
loopne
dec
ja
movd
fcoml
ljmp
ds
arpl
in
mov
jl
mov
lods
enter
in
add
push
lods
dec
je
mov
push
pop
mov
lea
cmp
mov
movsb
lahf
xchg
mov
jmp
jo
loopne
nop
jp
outsl
sbb
adc
mov
nop
add
cwtl
jmp
mov
lock
in
push
iret
add
test
mov
xor
ret
adc
incl
xchg
aaa
push
lret
int
and
in
inc
mov
push
pop
cmp
lock
jg
sbb
je
das
dec
jmp
fildll
xchg
mov
ja
jmp
gs
jge
cmpb
int3
in
adc
and
outsl
add
add
jb
cmp
and
stc
jle
js
fs
xchg
or
in
enter
push
incb
outsl
sub
xchg
jb
cld
lds
pusha
jns
mov
add
dec
filds
clc
outsl
pop
lret
inc
push
sub
jmp
out
xchg
inc
call
movsl
push
pop
push
sub
lea
dec
out
sub
call
sahf
clc
push
aas
je
add
xchg
add
mov
cmp
pop
xchg
mov
cmp
sbb
push
cmpsb
cs
loop
call
fiadds
cmp
not
cwtl
test
test
inc
ja
movsw
test
ja
cli
sbb
enter
or
inc
sub
pop
bound
clc
movsl
add
nop
jecxz
pushl
sub
mov
subb
cmpb
ja
icebp
fists
pop
mov
sub
aas
jge
call
loope
cmpb
mov
mov
jecxz
out
cmpsl
jnp
cmp
cltd
inc
push
push
jle
fsubrp
cmpsb
scas
lret
sbb
add
mov
ds
lds
scas
clc
push
sbb
push
cli
rclb
mov
jg
out
fs
insl
cs
cmp
push
cmp
rcrl
enter
incb
cmc
decl
les
push
daa
mov
orl
add
xchg
or
pop
adc
xchg
movsb
hlt
or
push
ret
testb
fisttps
xor
adc
outsl
pop
pop
ficomps
dec
adcl
dec
dec
pop
jp
test
mov
sti
stc
lock
xlat
aad
sbb
hlt
aas
pop
push
es
pop
pop
es
iret
cmp
mov
enter
cmp
and
pop
mov
jg
pushl
into
mov
inc
loopne
add
jg
cmp
out
mov
cmp
xorb
mov
in
xchg
mov
lret
movsb
sub
jbe
adc
mov
gs
dec
out
cmpsb
push
hlt
push
cld
pop
jb
test
clc
das
dec
enter
push
add
pop
pop
aam
fldcw
je
hlt
pop
idivl
loope
std
sub
andb
lods
inc
clc
fildll
pop
aas
lea
mov
and
inc
pop
dec
mov
inc
sahf
lret
pop
pop
js
daa
add
outsl
push
lcall
jbe
insl
dec
test
pushf
adc
cs
clc
xchg
xchg
in
mov
aam
mov
inc
idivl
sub
fsubp
sbb
mov
and
into
pop
out
mov
pop
cmp
adc
scas
lahf
inc
je
mov
add
xchg
mov
in
pushl
mov
cli
outsl
mov
and
mov
loopne
add
mov
fmuls
cmpl
or
and
xchg
mov
and
pop
add
mov
int
fidivrs
add
add
movsb
sbb
hlt
decl
rorl
and
scas
mov
or
scas
pusha
and
cs
adc
ljmp
jns
mov
lock
jg
push
fs
subb
push
cmp
sub
push
les
xchg
das
cmc
outsb
sbb
in
lods
lock
decb
add
test
ljmp
xchg
sarb
push
aad
jmp
pop
adc
test
lea
cs
mov
cmc
mov
push
sbb
lret
outsl
mov
or
shrb
ret
roll
mov
mov
fcmovbe
push
pop
dec
orl
jecxz
pop
xchg
lret
add
cld
ljmp
cmp
jno
inc
sbb
aam
fs
inc
aas
lcall
add
push
xor
jmp
inc
or
outsl
adc
mov
jecxz
mov
mov
mov
push
cs
xchg
pop
or
fnsave
jo
decl
lret
pusha
lahf
sahf
jecxz
fidivs
jnp
ret
fldcw
push
xchg
mov
mov
pop
jge
stos
fwait
push
sbb
sbb
lcall
sbb
mov
dec
inc
cmpsb
out
nop
leave
jnp
test
outsb
loope
cmpsl
out
adc
mov
cs
les
push
insb
lcall
xchg
js
mov
ss
loop
add
aad
mov
arpl
mov
mov
cld
rcrl
pop
or
pop
stos
adc
fcmove
lahf
loop
mov
push
mov
clc
or
in
clc
mov
pop
pop
in
shrl
adc
ffreep
clc
rcl
mov
into
jge
pop
or
dec
xchg
hlt
sub
push
je
and
inc
mov
cli
mov
dec
sar
pop
das
arpl
or
test
cli
or
test
orps
sub
popa
ljmp
out
xchg
mov
inc
pusha
rolb
shr
or
lret
sbbb
push
jo
pop
in
aam
decl
mov
pop
scas
mov
push
sbbb
jo
or
jg
in
sbb
push
mov
daa
mov
or
jg
lcall
pop
push
pop
in
pop
ret
lds
notb
or
jg
aas
daa
adc
push
sbb
mov
add
loop
mov
sub
lcall
ja
clc
jmp
stc
nop
push
in
jecxz
jle
in
and
ja
ljmp
xchg
mov
loop
sbb
es
addb
dec
sahf
pushl
ror
jnp
iret
pop
or
dec
lds
ljmp
shrl
insb
mov
push
adc
lcall
nop
and
xor
or
shrb
lock
mov
mov
repz
push
jg
add
sbb
mov
pop
bound
adc
cmp
sahf
mov
in
sub
hlt
mov
adc
and
popf
ds
mov
sub
cmp
add
fldcw
int
xchg
jle
mov
paddusb
and
scas
push
clc
xchg
sub
add
pop
ljmp
lea
ss
add
mov
jge
sub
out
clc
mov
xchg
sbb
or
fs
push
filds
fstp
cwtl
cmc
mov
dec
mov
sbb
cmc
outsb
loope
ja
sbb
cld
dec
mov
fwait
push
cli
sub
lock
fdiv
adc
xlat
cs
shr
leave
imul
dec
repnz
cmpsl
mov
inc
jbe
cmp
pop
int
cmp
daa
cmp
and
outsb
test
movsl
pop
movsl
cmp
dec
outsb
adc
push
xor
fimull
loopne
pop
xchg
loop
insl
mov
pop
mov
or
xor
fxch
and
mov
mov
lret
icebp
mov
popl
cmpsl
jnp
inc
lret
mov
fsts
add
adc
punpckhdq
add
add
scas
mov
pop
jmp
xor
icebp
cmp
jl
pop
cmp
ljmp
out
push
andl
hlt
pop
lret
or
xchg
in
inc
or
jge
test
inc
xorb
rorb
pop
fcom
lods
or
push
lcall
mov
xchg
xor
nop
xchg
fimuls
adc
incl
in
and
sbb
roll
pop
adc
add
dec
adc
shl
divb
je
adc
adc
mov
mov
fprem
aaa
hlt
pusha
pop
aad
and
insb
push
ret
repz
jmp
xor
mov
imul
mov
xor
pusha
inc
sbb
stos
mov
mov
cmp
stc
inc
push
loope
outsl
xor
enter
dec
sbb
xor
pop
cld
mov
cmp
mov
mov
sar
dec
lods
mov
or
sbb
mov
adc
std
out
adc
pop
into
cli
xchg
cld
push
sbbb
xchg
bound
push
mov
call
push
les
add
fcmovnb
xor
leave
cli
sub
cmp
cwtl
imul
jno
adc
jg
jge
ljmp
lock
mov
aaa
out
jge
push
jmp
fstpt
shll
imul
fdiv
loopne
orl
lods
jne
jp
mov
mov
rcll
pop
int
ficoms
cmp
cmpb
insb
pop
loopne
fcmove
cmpsb
add
xor
dec
adc
scas
js
test
push
out
pop
adc
and
nop
adc
cmp
out
clc
out
jmp
sbbb
mov
jbe
das
mov
lds
data16
cmp
push
xchg
sub
mov
add
pop
jecxz
inc
or
mov
test
mov
mov
jb
inc
les
cli
scas
xchg
mov
lret
add
add
fisttps
imull
lock
sbb
inc
fdivl
dec
addb
test
lcall
shll
push
es
cmp
sbb
lcall
mov
push
outsl
mov
add
subl
mov
jmp
jae
xchg
cmpsl
cmp
xchg
ret
push
jle
std
arpl
jl
cli
inc
test
in
out
sub
xchg
fiadds
gs
and
out
jle
stos
and
in
push
adc
sbb
repnz
int
lahf
jmp
adc
nop
or
add
pop
sub
or
rolb
lret
dec
cmp
sub
std
jg
xchg
stos
add
and
and
jg
ja
dec
lahf
add
jbe
xor
or
fcoml
fadd
add
adc
add
popf
add
jp
sub
in
xchg
cmp
add
scas
mov
cmpsl
es
add
pop
inc
cmc
lods
jb
cli
add
and
fildll
cmp
adc
push
imul
and
int
inc
cld
pushl
test
mov
inc
jg
push
inc
clc
jg
xor
inc
pop
cmp
cmp
fcom
dec
adc
jmp
add
loopne
sbb
jb
xor
mov
ss
pop
or
icebp
ja
ljmp
mov
mov
inc
mov
mov
pop
push
mov
xchg
mov
call
sarl
or
xchg
lds
push
in
mov
call
movsb
xor
loop
jge,pt
xchg
adc
push
mov
pop
std
outsb
adc
push
sub
sbb
pop
mov
aam
jmp
adc
and
push
sti
add
mov
mov
mov
lcall
add
movsl
rclb
lret
push
sub
lcall
mov
push
sti
loop
push
ds
pop
add
jle
pushl
xchg
jno
mov
dec
jae
fcompl
and
sbb
pextrw
in
andb
push
jg
inc
stos
xchg
dec
fdivr
dec
add
movsb
scas
jb
insl
rol
cwtl
outsb
addr16
movsb
outsb
stos
and
pop
sbb
inc
xchg
adc
pop
rolb
or
mov
bound
mov
lahf
lahf
out
in
jne
and
mov
add
mov
xchg
inc
pop
cmpsb
inc
pusha
ja
loope
or
pushl
jnp
mov
hlt
fstpl
into
inc
and
push
sar
mov
fcompl
jg
mov
out
inc
pop
push
xor
adc
movsb
mov
ja
aam
fcompl
cmp
jg
cli
push
add
jle
xchg
mov
pop
sti
mov
jmp
or
dec
aam
jo
mov
pop
lahf
or
add
icebp
movsb
dec
cs
insb
cmp
lods
mov
nop
hlt
insl
roll
inc
xchg
orb
repnz
lea
jo
mov
pop
pop
ljmp
sbb
add
mov
add
mov
push
aad
mov
mov
jno
or
test
sar
sub
into
push
sub
cwtl
fistpl
rcrb
ja
push
or
stc
dec
and
adc
push
cmp
jns
stos
das
adc
scas
or
mov
in
xlat
push
mov
loop
jg
add
mov
movsb
xchg
xor
aam
dec
inc
push
loope
and
ss
mov
adc
add
mov
std
repz
xor
mov
jecxz
stos
ljmp
sub
sub
mov
dec
sbb
xchg
mov
jmp
ja
adc
add
or
gs
lods
jbe
sti
sub
call
fwait
mov
iret
pop
pop
xlat
pop
cmpsl
mov
push
inc
sub
mov
mov
pusha
mov
push
int3
dec
jae
push
test
es
inc
inc
dec
fwait
push
imul
jb
shll
mov
lcall
push
cld
push
xchg
adc
jl
pop
pop
pushf
add
imul
aam
arpl
mov
mov
jno
push
pop
stos
mov
notl
mov
cmp
fbld
decb
pop
mov
mov
movl
or
pop
xchg
xor
stos
icebp
lods
icebp
push
ret
mov
aad
inc
or
adc
jp
inc
pop
scas
adc
xchg
mov
loopne
shlb
sub
mov
fnsave
mov
imul
popa
mov
jg
or
xor
xor
jne
xchg
ficoms
cs
jmp
out
mov
data16
add
hlt
aaa
sub
mov
adc
divb
inc
mov
rcrb
outsb
mov
incl
jecxz
mov
clc
repz
and
pop
jp
lods
out
and
in
popf
adc
mov
out
add
outsl
mov
mov
sbb
adc
aaa
ret
rolb
jno
add
inc
aaa
cmp
mov
pop
icebp
xlat
call
cld
xor
xorb
das
cmc
les
sar
add
loope
jp
ljmp
cld
call
or
sbb
ss
test
aad
inc
jp
loopne
call
inc
int3
inc
cmpsb
data16
dec
cmc
mov
loope
add
test
pop
in
ret
add
adc
push
into
sbb
inc
xchg
orb
idiv
cld
mov
inc
mov
add
popa
aad
jecxz
jbe
mov
dec
lods
int3
mov
pop
ret
fsubrs
sub
pusha
loope
jg
lea
test
dec
test
xor
inc
push
mov
mov
sbb
add
cli
scas
daa
lods
push
out
rorl
faddp
and
je
xchg
xor
fldl
inc
dec
cmp
and
insb
in
dec
fcmovu
jg
adc
dec
inc
mov
or
movsl
sub
xchg
cmp
inc
mov
push
mov
adc
mov
aam
fcomps
je
lcall
and
xor
pop
push
lcall
or
insl
add
cli
sbb
sahf
shll
jns
popa
xor
jmp
push
xor
pop
add
std
mov
and
rorl
adc
bound
decl
mov
loope
adc
sub
in
push
mov
fsubrs
mov
das
add
pop
xlat
ja
and
push
mov
in
or
jbe
hlt
loop
pop
dec
cmp
in
addr16
adc
xor
cmp
xchg
or
cmp
shr
jne
jnp
mov
rolb
cld
sub
mov
sbb
aad
std
and
push
sbb
inc
cmp
loopne
xor
call
es
lret
je
push
aaa
add
push
lods
leave
mov
jo
dec
mov
pop
mov
and
movsb
pop
std
sbb
int
push
pop
fists
cld
mov
xchg
shlb
popa
idivl
inc
nop
pop
lret
mov
pushf
lret
inc
jbe
pop
sbbb
clc
pandn
adc
push
mov
leave
loope
push
add
mov
je
mov
sbb
push
add
fnsave
xchg
lret
push
mov
push
jl
xlat
pop
inc
pop
pop
call
xchg
push
xchg
xchg
repz
sbb
clc
pop
in
jne
jb
and
cli
mov
push
mov
cmc
pop
into
add
fsubrs
sub
call
sub
aad
iret
ljmp
ss
jno
imul
ret
xchg
pop
pop
jo
incl
addb
out
je
lret
std
mov
cmp
lcall
adc
pop
push
add
mov
popf
jno
jnp
dec
mov
pop
add
outsl
sub
in
sub
add
push
jge
jbe
and
mov
add
inc
out
movsb
setnp
mov
lods
push
scas
xchg
sub
std
cmp
xor
subb
jo
fcmovnu
in
ss
mov
aas
and
pusha
or
jmp
ret
push
jbe
jne
outsl
repnz
decl
and
ja
mov
in
dec
mov
lret
cli
mov
enter
lds
mov
add
lcall
or
lret
rol
cwtl
addr16
xchg
push
sbb
test
stc
push
ja
mov
mov
push
std
fsts
pushl
stos
push
dec
clc
pop
rcr
outsb
outsl
xlat
ret
xor
test
stc
aas
pop
ficoml
call
lcall
je,pn
fstps
pop
repz
hlt
and
mov
test
mov
je
aam
mov
mov
outsl
xor
xor
test
push
xor
mov
out
xchg
cld
scas
dec
push
sub
push
push
push
lock
data16
sub
enter
and
and
dec
les
ret
pop
dec
loope
addr16
add
loope
jg
sbb
and
cmpsl
sub
cld
cmpsb
imul
jo
push
inc
push
jnp
xchg
sti
aam
fucomi
mov
repnz
adc
ss
adc
lea
and
incl
das
cmpsl
cmp
inc
inc
inc
xlat
mov
mov
lods
push
jnp
aad
xchg
dec
push
fcomip
and
rolb
mov
sub
jle
pop
shl
sbb
push
scas
inc
insb
inc
sahf
out
cmp
push
dec
sub
std
test
int3
and
int
pop
sbb
pop
mov
xchg
sbb
xor
stos
xchg
mov
cmp
inc
sub
rcr
loope
add
in
fcmovnu
outsb
or
outsb
lret
add
jmp
lcall
cld
in
pop
add
sbbl
hlt
call
insb
sub
mov
mov
sub
lcall
lret
dec
mov
pop
roll
dec
lcall
cs
insb
jle
xchg
shr
or
jno
and
jb
mov
xchg
call
lea
jbe
mov
es
mov
pop
bound
xor
push
adcb
stos
xchg
aaa
mov
jg
mov
or
sti
pop
sub
mov
clc
aas
sarl
xor
xor
jmp
mov
sahf
jp
inc
mov
enter
call
sbb
cs
fdivrs
loope
inc
cmp
cmp
inc
call
movsb
sub
push
lahf
sub
dec
test
or
ss
sub
cmpl
jo
adc
jg
cld
push
fildl
push
insl
cld
mov
mov
mov
sub
call
pop
mov
aad
cmpsl
test
ret
dec
decl
lock
xchg
push
pop
jle
jecxz
les
pop
mov
gs
sti
add
es
call
add
or
lods
lods
cmp
dec
add
sti
jb
jns
push
mov
stos
dec
std
dec
dec
inc
test
outsb
xchg
cmpsb
pop
mov
xchg
rcll
push
popf
loop
dec
inc
or
stc
enter
clc
mov
pop
mov
xor
lahf
xchg
inc
add
adc
in
xor
loopne
aad
add
sahf
loopne
push
sbb
shll
pop
or
push
add
sub
mul
call
clc
lcall
xor
and
and
mov
pusha
icebp
jbe
xchg
nop
xor
aas
ret
add
sub
push
clc
mov
mov
mov
push
sbb
lcall
add
cmpsb
cmpsb
add
lods
dec
cmpsl
xor
cli
fistl
lret
jmp
push
into
sbb
add
mov
and
mov
jecxz
lcall
xor
xchg
je
lods
popa
popf
cmpsb
call
xor
dec
adc
fists
push
repnz
mov
inc
lods
in
loop
mov
push
clc
pushl
test
in
bound
cmp
add
addb
add
insl
pop
jno
pop
sbb
pop
das
dec
cld
lcall
mov
mov
add
mov
jo
popf
mov
cmp
add
fwait
fs
adc
daa
jb
xor
incl
push
stos
outsl
add
cmp
fdivrs
in
xlat
notrack
and
fstl
pop
inc
mov
mov
jno
add
pop
xor
clc
jae
sahf
scas
dec
sub
fsub
add
incl
mov
mov
cli
push
push
xor
jg
mov
lods
jle
add
add
sub
mov
jg
cmp
xor
nop
outsl
insb
xor
jge
test
jl
jmp
les
adcl
sbb
push
fcomps
mov
add
loopne
xchg
jg
add
xor
aam
lock
mov
sbb
push
cmp
mov
sub
push
sbb
pop
adc
jge
ja
add
xor
dec
popf
cmp
xchg
stos
cmp
mov
adc
lcall
mov
dec
dec
cltd
push
outsl
nop
mov
mov
pop
dec
cld
stos
jp
sub
jp
add
aaa
pop
mov
aaa
or
into
popa
inc
shrb
ret
outsl
mov
mov
repnz
pop
inc
xchg
mov
sub
sub
out
cli
xchg
mov
scas
inc
enter
fwait
mov
out
mov
xor
add
mov
mov
mov
jb
clc
decl
out
pop
dec
cmp
loop
inc
movsb
push
cmpsb
add
adc
nop
mov
pop
xor
pop
lcall
cmpsl
mov
repnz
dec
notb
pop
and
mov
in
arpl
jns
mov
push
dec
inc
dec
shld
lods
int3
mov
bound
imull
lret
add
mov
mov
jmp
push
and
pop
jne
and
fimuls
push
js
mov
or
push
js
jne
cli
decl
cs
sub
sbb
pusha
add
inc
into
test
or
fcomps
cli
jns
cld
shll
scas
shl
incb
mov
xchg
icebp
pop
aam
push
inc
xchg
lahf
out
add
adc
out
js
mov
adc
jbe
sub
and
scas
orb
out
addr16
and
and
jns
fstl
sbb
and
adc
jg
mov
cmp
ret
mov
add
mov
arpl
out
jle
push
xor
mov
sub
dec
ret
int
sbb
sub
xor
lret
std
pop
hlt
scas
dec
xlat
xchg
adc
cltd
gs
movsb
movsl
lea
cwtl
fcom
sti
mov
pop
test
mov
adc
and
push
icebp
jecxz
cmc
jle
dec
mov
and
mov
xchg
adc
imul
add
sub
dec
inc
or
xor
aas
sarl
sub
add
and
adc
sbb
add
fidivrl
sub
repnz
ret
adc
and
xor
xor
filds
out
jge
lods
mov
add
dec
xlat
push
sbb
xor
adc
bound
es
movsb
mov
jge
mov
in
clc
mov
mov
adc
xchg
cli
pop
loopne
xchg
or
lret
iret
dec
cmp
ljmp
adc
gs
lock
loopne
jae
fcomps
outsl
repz
pop
push
test
andb
call
call
mov
popa
std
out
cld
stos
call
cmc
movsl
fisttps
std
xchg
cli
scas
lods
incl
adc
std
push
shl
ja
jecxz
das
xchg
into
xchg
lcall
adcl
aam
pop
clc
ja
or
jns
fildl
pop
es
mov
mov
adc
ficoms
push
ljmp
xchg
jp
fldt
sbb
pop
in
add
mov
xchg
insb
cld
ljmp
in
pop
loop
add
add
jg
xor
push
into
mov
push
xchg
inc
jbe
cmp
sub
and
add
sbb
lret
ud0
pop
sbb
sti
push
mov
movsl
jg
pushl
cs
cld
jg
loop
ljmp
shr
int3
mov
jp
repz
aaa
sar
push
push
lret
pop
call
jl
add
incl
xchg
push
jnp
and
jp
sbb
pusha
jg
jg
cmp
fmuls
fnstenv
xor
cwtl
xchg
arpl
cmc
jmp
mov
cmpl
jp
mov
xchg
es
xchg
jecxz
fwait
test
lcall
and
stos
fcmovb
std
jg
movsb
movsl
push
inc
stc
inc
mov
ret
pop
clc
jg
mov
inc
xchg
lahf
or
outsl
pop
outsl
scas
add
leave
pushl
push
outsl
add
add
or
or
jbe
xchg
ss
sahf
ret
repnz
mov
call
mov
add
and
popa
stos
cmp
rclb
fbstp
hlt
stos
pop
clc
cmpsb
fiaddl
cwtl
xor
dec
fs
xor
pop
xchg
push
pop
pop
and
incl
test
dec
std
add
jnp
test
into
cmp
iret
pop
jmp
cmc
ja
push
inc
sti
sub
sbb
andb
jbe
lcallw
mov
add
test
or
push
stos
cli
dec
mov
ret
inc
clc
add
outsl
xchg
mov
mov
inc
cmp
stos
fsubs
push
cli
pop
movsl
or
add
and
ljmp
add
in
sub
xor
sti
pop
add
mov
insl
mov
adc
imul
adcb
cs
ficompl
rcrb
mov
cmc
adcl
pushf
add
data16
mov
push
pushl
adc
add
push
sbb
inc
std
andl
mov
test
shl
mov
add
outsl
inc
adc
jno
mov
mov
or
andb
shr
adc
outsb
decl
cmp
dec
fcomip
roll
mov
arpl
and
leave
clc
test
or
add
test
popa
xchg
sbb
divl
call
pop
adc
fldt
aad
dec
in
fldenv
mov
lret
mov
outsl
subl
jbe
cmpsl
pop
push
mov
mov
dec
xor
pop
hlt
jbe
adc
pushl
js
sub
movsl
fs
adc
mov
ljmp
push
jne
jl
jnp
mov
icebp
cwtl
xchg
mov
cwtl
xchg
add
adc
and
shlb
aaa
or
push
xchg
jge
loopne
and
or
add
pushf
aam
call
jno
lcall
pusha
into
xchg
lcall
push
out
xchg
adc
ss
mov
adc
mov
pmaxsw
mov
jp
jmp
mov
ljmp
mov
mov
decl
add
shrb
aad
imul
sbb
es
into
sub
scas
mov
decl
int3
into
add
cmp
inc
xchg
leave
pop
test
pusha
inc
push
dec
adc
pushl
sahf
push
mov
mov
add
push
adc
popa
add
jg
fmull
fisubrs
or
in
outsb
decl
scas
test
sbb
mov
aam
rcrb
lret
xchg
addl
gs
push
out
lods
addr16
hlt
stc
dec
sub
lods
fbld
and
daa
jnp
movsl
xchg
cmc
ljmp
js
sub
pushf
inc
sub
outsb
outsb
mov
sub
pop
imul
add
cli
sub
das
out
and
jge
lds
sbb
pop
dec
add
aam
pop
jo
scas
fs
add
ljmp
xor
push
dec
jb
outsb
cld
in
addr16
and
cltd
add
cmpsb
fdiv
stos
pop
data16
fcomps
shr
jb
std
fiaddl
mov
jo
cltd
cmp
xchg
hlt
fbld
push
popf
cld
jle
mov
inc
sub
clc
sti
cmpsb
jo
lret
imul
outsb
in
lods
jmp
aam
sub
sub
mov
sahf
rorl
daa
incb
ret
sbb
push
out
and
shlb
jg
por
mov
jg
arpl
stos
loop
roll
xorl
xor
jg
ja
mov
pop
cmpsl
inc
test
mov
mov
stos
imul
lods
fidivl
dec
add
jl
xor
push
add
mov
jp
cli
ljmp
scas
xor
lods
add
mov
call
fcoms
das
test
add
pop
out
sub
mov
ja
clc
mov
pushf
cmp
test
idivb
in
mov
loopne
fwait
mov
push
push
jmp
sub
es
jecxz
lock
cmp
inc
sbb
fidivrl
mov
js
ss
mov
mov
pop
fdivs
or
fdiv
sub
cld
cmpsb
repnz
popf
cli
incl
data16
xor
lcall
lock
sub
jb
cmc
add
jno
sub
xchg
pop
fidivs
mov
cmp
sub
dec
xchg
jmp
sub
jg
push
add
dec
mov
pop
icebp
inc
sbb
inc
adc
mov
jl
dec
test
fnstenv
push
or
pop
call
cwtl
lea
imul
cld
mov
hlt
mov
xchg
xchg
jae
aam
push
cli
pushf
iret
shlb
js
sbb
xchg
mov
xlat
dec
sahf
mov
add
out
jmp
mov
aaa
pop
icebp
ja
orb
rcl
bound
xchg
outsl
push
je
int3
pop
fmul
adc
mov
test
scas
push
std
mov
out
incb
jecxz
inc
aam
sti
pop
and
sbb
sahf
dec
out
scas
out
rcrb
xor
cmp
ret
mov
dec
inc
lret
ljmp
push
flds
xor
mov
mov
cmp
je
sahf
cwtl
pop
fstpl
inc
push
outsb
adc
shll
out
test
shlb
dec
in
sbb
add
mov
adc
inc
jecxz
sub
jmp
pop
xchg
inc
sbb
cld
loop
popa
cwtl
and
ret
lods
pop
leave
sub
and
add
inc
cmpb
cmp
mov
shlb
lea
scas
xor
stos
mov
sbb
pop
fwait
mov
sbb
pop
das
xchg
in
imul
xor
decl
mov
call
mov
mov
pusha
loopne
and
test
add
ljmp
add
push
iret
dec
adc
es
les
test
push
pop
fcompl
hlt
or
inc
movsb
jg
ss
xor
sub
xor
and
pusha
and
fwait
loop
cmp
or
or
jmp
mov
or
adc
ljmp
test
add
mov
in
add
push
pushl
jl
pop
or
mov
hlt
popf
xor
stos
adc
test
sbb
pop
pop
popa
mov
push
pop
nop
cmp
jnp
movsb
xchg
push
incl
inc
test
inc
push
filds
pop
jle
dec
pop
cli
call
imul
jl
outsl
aas
popa
mov
cld
push
add
sub
jbe
mov
push
lret
stos
pop
in
enter
mov
dec
adc
lods
or
flds
imul
jne
sub
mov
scas
xchg
jb
bswap
loopne
das
mov
pusha
clc
das
mov
jno
sti
scas
out
dec
enter
call
rolb
mov
dec
testb
push
pop
mov
or
repz
imulb
mov
xor
lock
push
pop
add
dec
in
and
push
dec
pusha
sar
mov
add
mov
push
push
jge
fs
adc
leave
addl
sub
fdivrl
cwtl
push
fstpl
dec
es
pushl
into
lods
xchg
jl
hlt
or
inc
xor
xchg
cli
imul
sub
jmp
pop
and
popf
hlt
dec
mov
arpl
aam
pop
sub
fiadds
decl
les
jno
into
pop
jo
xchg
and
xor
scas
inc
mov
dec
sub
xor
mov
ja
xor
into
test
jnp
fsubrl
sar
filds
xor
pop
cmp
insl
shl
xchg
lret
mov
ficoml
or
dec
scas
push
jle
inc
fsubs
movsb
in
push
lods
sub
sub
pop
inc
or
ror
xor
shlb
cmp
jmp
xchg
inc
rcrb
loopne
orl
out
pusha
call
xchg
jge
incl
xchg
cmc
mov
xor
inc
pop
jo
sbb
test
lcall
movsb
test
xor
cmp
out
push
in
mov
popf
mov
pusha
xlat
mov
jg
mov
add
cli
fwait
mov
lret
sbb
dec
fs
adc
xor
jo
adc
rclb
shlb
and
push
inc
inc
inc
dec
jb
fcomip
jmp
cwtl
cmp
jne,pn
icebp
xchg
mov
and
lods
pushl
push
xor
outsl
cmp
mov
mov
push
cli
lahf
push
jnp
mov
sub
xchg
scas
adc
addl
pop
xchg
cmp
sbb
call
js
popl
int
jbe
aas
es
pop
add
sbb
mov
mov
add
test
fdivs
inc
popa
push
shll
dec
pusha
orl
bound
cld
add
lock
dec
loopne
iret
iret
mov
les
insb
fnstsw
add
xchg
cltd
iret
stos
cmp
pop
push
pushf
icebp
xchg
shrb
mov
lock
mov
cmp
sahf
mov
ret
jg
push
or
testl
ss
push
ficoms
je
inc
add
push
in
fsts
lcall
aaa
jge
aam
fadds
dec
or
add
ljmp
test
mov
xchg
inc
inc
jbe
jg
adc
test
out
add
add
mov
jmp
cmpsl
es
push
push
cs
movsb
fistps
adc
fs
sub
mov
aad
add
ret
incl
fdivs
ljmp
push
test
inc
ret
push
lds
xchg
and
fbld
add
push
insb
setno
imulb
ror
addr16
ret
inc
sub
movsb
dec
push
in
xchg
pop
sti
das
and
pop
adc
pop
xor
call
inc
inc
cld
cmpsl
fs
ret
jb
push
cmp
inc
loopne
clc
mov
pop
lock
mov
push
aad
mov
out
shrb
inc
fidivrl
pop
mov
in
sahf
mov
mov
loope
cs
or
shlb
rcrb
dec
pushf
aad
jl
jp
sbb
mul
xchg
popf
inc
mov
push
adc
push
pop
test
out
mov
and
sbb
lock
hlt
outsl
lock
pop
pop
and
call
xchg
add
mov
repz
pop
jnp
out
mov
pop
out
cmpsl
adc
insb
xchg
mov
das
adc
jecxz
sub
in
sub
jmp
mov
pop
loop
push
mov
xchg
std
lds
mov
cwtl
xchg
cmp
pop
icebp
ja
mov
jge
adc
jbe
jle
insl
fnstsw
pop
andps
insb
jo
mov
cmp
lock
cltd
out
pop
ss
jecxz
pop
jle
ja
cmp
adc
mov
inc
or
inc
jbe
dec
aaa
in
lret
gs
enter
add
notb
sbbl
data16
mov
sub
adc
push
or
jae
sub
fdivrl
rcrb
icebp
daa
fs
test
cmp
cwtl
jp
inc
jg
imul
pushf
pop
test
push
cmp
out
inc
fisttpl
fsub
bsf
cmp
inc
jg
aam
not
xor
fnsave
outsb
pop
mov
jno
hlt
aas
push
sti
dec
movsb
imul
mov
cmp
daa
outsb
les
and
in
call
movsb
or
stos
sub
xor
push
icebp
fwait
mov
mov
sub
ja
sub
xor
ja
dec
pop
bound
es
push
jg
lods
lcall
sahf
dec
cwtl
adc
inc
repz
out
sar
cli
fs
push
mov
inc
dec
jp
popa
enter
cmc
inc
mov
mov
enter
mov
jo
pop
xor
inc
subb
xchg
xchg
mov
and
sbb
icebp
or
gs
xor
lock
fcmovnb
xor
dec
call
lea
shlb
inc
or
es
or
and
mov
dec
cmp
jle
pop
sar
cwtl
adc
push
lea
ss
adc
sbb
and
in
mov
xchg
jno
sahf
repz
adc
ss
int3
cld
mov
scas
sub
mov
data16
adcl
push
inc
adc
movsb
pop
fisttpl
incl
sub
enter
hlt
nop
mov
scas
adc
outsl
xchg
and
popf
enter
testl
dec
loop
aam
mov
and
das
shrb
clc
in
repnz
cld
test
cmc
stos
mov
add
sub
mov
xchg
xchg
imul
or
mov
add
lret
pop
jne
aam
cmp
in
call
adc
dec
mov
je
outsb
mov
lret
sbb
cmc
es
inc
or
mov
sbbb
pop
mov
fidivl
xor
in
dec
cld
mov
pop
xor
sub
mov
inc
repnz
fisttps
pop
je
cmc
enter
cli
mov
xchg
arpl
incl
jg
subl
call
mov
sbb
add
int3
mov
call
adc
test
fisttps
inc
lods
add
mov
push
mov
ljmp
sbbl
xor
add
sbbb
and
das
clc
and
test
and
cs
int
adc
mov
or
pusha
imul
pop
jg
fcos
mov
sub
gs
jo
mov
or
stc
sahf
push
fldenv
test
push
icebp
aaa
std
mov
insb
fldcw
or
mov
and
add
mov
or
jg
ficoml
sub
inc
and
sub
call
es
arpl
or
and
gs
fnstcw
sar
ljmp
fwait
xchg
mov
push
les
icebp
cmp
outsl
add
pop
cs
adc
push
movsl
mov
hlt
aad
stos
nop
sub
loop
mov
std
adc
xor
jae
xchg
cmp
lret
fldl
dec
cmpb
pop
mov
cli
mov
es
inc
sbb
sub
inc
dec
add
test
shrl
int3
aas
in
in
inc
inc
jecxz
sub
call
and
rolb
cmc
jg
pop
pop
lods
shll
sub
jno
adc
push
popl
pop
mov
jo
gs
sub
or
ret
push
sub
decl
mov
ds
das
sbb
loope
in
pop
shrl
xchg
push
jmp
repnz
cmp
or
inc
lcall
fsts
push
push
test
and
mov
incl
push
mov
mov
nop
pop
add
jae
jmp
dec
ret
add
rolb
fdivl
fistl
fwait
outsb
jmp
cmp
out
loop
pop
push
xor
xor
jg
dec
add
jne
sub
pop
mov
scas
not
xor
cli
ljmp
stos
xor
push
mov
test
adc
pop
test
dec
jge
sub
test
in
jae
jg
mov
pop
inc
sti
loope
push
dec
in
imulb
repnz
or
and
or
jp
dec
pop
es
or
add
push
inc
ret
iret
inc
fisubl
mov
ljmp
jp
andb
adc
outsb
and
outsb
push
mov
sub
ret
and
jb
roll
sbb
popa
sub
or
pop
rolb
mov
xchg
stos
ja
push
mov
fdivl
mov
adc
sub
sbb
loop
adc
sbb
cmc
fimuls
and
stc
cmp
fwait
insl
sbb
jae
or
mov
aas
add
lret
jle
ss
shr
insl
out
add
jne
inc
mov
dec
pop
shlb
mov
icebp
jg
xchg
cmp
stos
fcomi
fsubr
mov
aas
mov
mov
jle
pop
imul
outsb
fbld
fistps
xchg
mov
and
dec
or
std
movq
push
push
je
cmpsl
pop
lcall
or
mov
and
andl
and
ret
fistpll
aaa
xchg
pop
frstor
and
outsb
popa
das
push
mov
fildl
fmull
or
fistps
out
mov
or
popa
mov
lcall
cmp
lret
hlt
sub
loop
xor
sub
insb
aaa
in
jle
icebp
cmp
fistpll
ret
int3
jle
fs
and
dec
movsb
lds
jg
fsubrl
or
mov
repnz
jecxz
add
or
add
push
xchg
mov
pop
and
adc
aaa
and
nop
outsb
call
int
lcall
inc
jae
and
daa
or
dec
mov
and
xchg
push
ljmp
dec
pushf
jae
pusha
inc
sar
and
aam
icebp
adc
mov
cmp
or
clc
mov
repz
lret
sbb
sbb
loop
inc
shr
stc
jmp
pop
stos
mov
fdiv
lret
mov
sub
pop
fisttpl
xchg
or
divb
lock
aad
mov
jne
add
inc
les
outsl
add
test
mov
add
mov
jg
ss
call
add
mov
ljmp
in
cmp
pop
push
fistl
add
push
cmpb
cltd
inc
cld
mov
enter
cmp
push
into
gs
popf
xchg
dec
inc
loope
data16
sbb
push
and
xor
aam
adc
dec
or
decl
and
add
mov
call
std
xchg
add
xor
mov
mov
daa
and
xor
dec
rclb
lret
mov
push
inc
loop
jge
or
cmp
dec
into
jb
jge
test
test
outsb
jp
insb
div
cs
jl
xchg
popf
sbb
or
push
lahf
das
inc
pop
fistl
pusha
adc
movb
cmp
decl
sbb
dec
cmpsl
dec
lcall
sbb
sbb
mov
imul
sub
stos
loope
cld
aaa
dec
jo
mov
cmp
test
add
data16
inc
sub
inc
div
lcall
adc
lcall
rcll
lods
adc
shr
jb
loope
loopne
add
cli
rorb
sbb
fbstp
xlat
lods
repz
pop
mov
outsb
add
fildl
loopne
mov
out
cmp
sahf
mov
and
pop
sti
mov
sub
nop
mov
scas
ja
xor
xor
mov
cli
push
mov
jl
lods
out
xchg
mov
inc
rcl
inc
bound
xchg
fisttps
daa
lods
lcall
cmp
movsb
xor
sub
push
and
insb
loope
mov
xor
idivb
mov
inc
ja
xchg
pop
sbb
fbstp
and
clc
mov
fbld
icebp
xchg
or
loopne
call
mov
and
int3
imul
jbe
xlat
aam
cmp
sbb
push
pop
or
pop
dec
sbb
dec
cld
dec
les
fs
pushf
int
push
mov
outsl
push
insl
adc
xchg
sub
push
push
push
lock
in
cli
out
cmp
repnz
inc
popf
in
and
lcall
scas
push
insb
push
inc
sbb
pop
and
rcl
insb
fstpt
std
inc
xchg
test
mov
add
jle
call
jmp
inc
sti
dec
xchg
fcomps
movsl
jo
sbb
and
fwait
pushf
cltd
fidivs
ljmp
into
sub
mov
add
mov
xchg
mov
pop
outsl
decl
orb
in
pop
inc
mov
outsb
cwtl
imul
mov
mov
push
cmc
cmp
decb
jg
jnp
out
mov
imulb
fcoms
mov
fs
or
faddl
fwait
lea
test
lret
cli
dec
push
pop
sub
stos
insb
std
lods
mov
es
out
pop
sub
adc
das
cli
jg
lock
or
out
test
shll
movsb
xchg
decl
jae
insb
les
xchg
push
lods
xlat
loop
stc
mov
cmp
push
insb
lock
ja
sub
in
sar
or
ja
jl
out
pop
ss
mov
pop
call
rcrb
adc
test
pop
lock
ljmp
popf
fcompl
xchg
mov
movsl
mov
cwtl
lret
ret
nop
dec
in
jb
add
jecxz,pn
das
pop
pop
adc
sub
mov
das
in
jge
dec
mov
sbb
cs
add
mov
into
aas
test
ja
sub
daa
sub
cmp
pop
or
lret
lcall
das
mov
pop
bound
pop
and
fwait
pusha
push
xorl
jg
add
leave
int
xchg
mov
jb
mov
scas
adc
aad
pusha
fs
push
fdiv
and
mov
scas
add
fmull
xor
cmp
or
call
pop
and
in
jmp
mull
jb
testb
sbb
fsts
iret
mov
imul
and
subb
aad
adc
dec
in
sbb
push
shlb
ss
addr16
xchg
mov
dec
inc
pop
or
int3
pop
sbb
fildll
into
pop
push
lock
popl
jl
test
popf
mov
vpacksswb
int
test
push
inc
loop
xor
pushf
mov
lods
fwait
decl
fisubs
cmp
sub
add
add
cmpsb
jo
imul
mov
jl
andl
jg
movsl
sub
add
leave
mov
mov
xchg
mov
loopne
jge
cmp
dec
mov
dec
mov
shr
clc
mov
je
out
cwtl
std
outsl
test
in
cmp
mov
jl
bnd
sti
pop
ja
mov
js
inc
mov
push
jbe
jle
add
pop
inc
cmpsl
jo
daa
xor
mov
adc
sbb
adc
pop
stc
push
lods
cmpsl
mov
or
jp
mov
dec
sub
dec
mov
jmp
sbb
mov
loop
and
add
test
mov
xor
pop
mov
push
xchg
sbb
fdivp
push
lock
subl
test
xor
mulb
enter
sbb
push
adc
xchg
in
scas
mov
ret
push
jle
mov
or
dec
pop
outsl
cli
adc
andl
cli
push
mov
lcall
mov
fdivrs
popf
or
adc
jg
mov
cwtl
fcomp
jmp
nop
mov
lcall
aaa
sub
or
dec
popa
mov
jmp
sub
fcomip
aad
sub
std
jg
pop
fwait
push
insl
fwait
sub
inc
test
call
int
std
xchg
xchg
enter
shll
out
adc
fimull
into
ja
push
pop
add
sahf
mov
ss
cmpsb
mov
xchg
fisttps
pop
jecxz
fistl
sahf
cmpb
inc
cltd
jl
cmpsb
in
sbb
mov
nop
fsubs
cld
idivl
dec
add
sub
ljmp
pushf
cmpsl
and
rorb
test
mov
stc
shrl
xor
jl
pop
add
jecxz
xchg
movsl
stos
dec
or
jl
fisttps
inc
push
orb
int3
inc
sbbb
mov
loop
out
mov
or
jg
stos
lret
mov
dec
pop
enter
popf
xchg
loop
les
mov
mov
add
sbb
aaa
adc
jg
inc
sbb
mov
adc
out
stos
stc
inc
push
lret
jecxz
adc
mov
outsl
cli
jb
xchg
hlt
adc
fwait
js
add
ljmp
jnp
push
sar
aaa
fisubl
mov
xchg
and
mov
mov
cmp
jmp
pop
hlt
cmp
jg
pop
and
in
mov
sarl
ljmp
std
popf
and
add
lret
xchg
inc
hlt
mov
scas
cmp
mov
dec
addr16
sahf
adc
xchg
pop
pop
ljmp
arpl
out
cmpsb
xchg
mov
mov
jg
sti
lahf
out
sti
mulb
mov
ror
mov
imul
daa
sub
mov
lock
fdivrs
pop
inc
push
or
push
pop
pop
xchg
and
insl
insl
and
sahf
cs
or
pushl
or
dec
cltd
pop
mov
xchg
sti
xchg
jmp
push
or
loopne
xchg
scas
ss
cmp
cmp
aaa
sbb
aad
mov
movsb
outsl
push
adc
push
std
push
cmp
xchg
gs
ljmp
mov
pop
inc
xor
mov
sti
pop
jns
jle
test
xchg
pop
ja
push
xchg
push
dec
dec
or
sbb
jne
sub
les
mov
fildll
outsl
jo
dec
sti
push
call
add
dec
xchg
icebp
sub
sub
and
aam
mov
in
push
jmp
xor
mov
in
scas
clc
pushl
cs
hlt
lds
imul
fisttpll
dec
mov
addps
fwait
incl
mov
sti
dec
inc
movsb
stos
and
out
clc
aas
orb
and
js
cmp
jecxz
pop
mov
pop
fisubrl
mov
mov
cmp
insl
test
inc
dec
jle
mov
bound
mov
ljmp
mov
mov
mov
in
pop
in
repz
rclb
std
daa
xchg
jo
cmc
mov
popf
jmp
sub
mov
addr16
xchg
fptan
cwtl
jg
push
gs
fbstp
outsl
cld
incl
call
outsb
hlt
xchg
mov
mov
ss
test
xor
jp
pop
scas
out
cli
and
mov
sbb
mov
cmp
dec
lods
xor
loope
jg
mov
and
enter
jle
cmovl
loope
dec
fdiv
xor
es
sbb
mov
push
inc
jae
ds
cmpsb
stos
sub
movb
or
nop
cli
add
enter
mov
mov
pop
xor
xchg
fcomip
outsl
sti
stos
add
es
fbld
loopne
pop
inc
mov
icebp
dec
or
bound
les
add
push
arpl
imul
dec
push
and
add
dec
pop
xor
test
test
lods
sub
scas
loop
call
cmp
add
dec
into
xchg
inc
mov
inc
cmp
cmp
pop
or
or
fsubs
fyl2xp1
xchg
cld
stos
cmp
outsb
sub
mov
lods
xchg
or
clc
mov
xchg
mov
dec
call
mov
xchg
dec
imul
dec
es
mov
xchg
inc
cmp
filds
or
cltd
dec
cmp
test
cmp
push
add
call
pop
jmp
and
pop
imulb
les
btcl
lcall
pop
mov
loopne
mov
std
pop
pop
add
xchg
inc
sbb
les
enter
xchg
ljmp
and
les
xchg
out
push
nop
addr16
dec
cmpsl
cmc
xchg
ds
and
pop
jg
jo
orl
jbe
movsl
pop
loope
and
jnp
cmp
test
dec
cmc
pusha
ret
jmp
mov
mov
adc
ret
add
je
loopne
sahf
filds
mov
jbe
pop
les
xchg
cmp
sub
out
jg
mov
popa
fwait
sub
out
xchg
pop
lea
or
cltd
push
scas
popf
xchg
shrb
sbb
fnsave
aam
incl
sbbl
dec
imul
movsl
jmp
rcll
jecxz
cmp
xor
sub
add
and
cmp
jne
jg
incl
push
inc
addr16
and
and
mov
leave
inc
jne
push
nop
ja
lods
add
inc
jg
gs
leave
inc
fdivrl
xchg
sub
pop
outsb
negb
sbb
mov
dec
adc
loop
fiaddl
mov
xchg
xor
push
xrelease
fdivrl
jg
popf
push
fmulp
das
test
hlt
inc
shlb
stos
clc
adc
lcall
pop
js
outsl
pushf
shrl
test
inc
hlt
les
sbb
aas
ljmp
cld
sbb
es
cmpsb
iret
jb
mov
data16
addr16
popf
and
scas
fwait
scas
and
pop
lock
nop
push
out
repz
aam
pop
mov
pop
fistpll
add
jmp
cld
sar
call
sbb
inc
pop
ret
jne
mov
sbb
mov
into
sub
out
in
jns
outsb
xor
push
repnz
nop
jge
insl
and
stc
lods
sbb
shl
add
jne
jmp
and
frstor
rcrl
inc
insl
mov
in
mov
pop
or
popa
jne
test
mov
sub
call
mov
enter
push
dec
repnz
pusha
mov
pop
sub
and
inc
pop
sbb
jo
pop
push
jl
push
fsubs
test
adc
dec
inc
lock
pop
and
sub
push
xchg
lds
sub
mov
sarl
mov
cmp
xchg
repz
adc
in
jmp
sbb
test
push
aas
push
lds
or
add
ljmp
sbb
inc
sbbb
xor
stos
dec
jl
or
push
ror
and
loope
out
movsb
mov
sub
aam
add
in
nop
test
pop
lret
pop
dec
int
xor
xor
cli
aad
jle
lds
fcoml
mov
std
popf
call
imul
lcall
add
cli
dec
xchg
hlt
jae
push
cmp
xchg
cmp
jl
mov
call
movsl
lods
add
pop
inc
cmpsl
sarl
add
int3
lods
jl
pop
add
into
hlt
push
mov
pop
cmp
xchg
pop
into
scas
shl
rcl
adc
std
pop
xor
jmp
add
decl
mov
insl
or
sbb
mov
mov
or
inc
scas
aas
js
fnstenv
sarb
into
mov
push
add
fcmovnbe
ret
add
lret
adc
sub
dec
sub
cmpb
and
inc
pop
in
andl
inc
rorl
or
inc
jbe
jecxz
jg
jb
jp
mov
push
ljmp
pop
stos
scas
fdiv
xor
push
cli
inc
loopne
adc
inc
stos
jecxz
in
in
inc
pop
mov
jg
mov
cmpb
sub
rorl
call
sub
cs
mov
push
pop
repz
ss
cltd
setge
adc
int
test
pop
inc
sub
stos
pop
lret
push
cmpsb
cmc
mov
push
cli
insb
add
add
push
mov
cld
sbb
lahf
test
jmp
jo
aas
pop
xchg
cwtd
dec
jge
lods
insb
je
xchg
lea
out
xchg
or
mov
xor
xchg
lock
xchg
xchg
fs
arpl
gs
aad
push
fcompl
jb
xlat
std
sbb
incl
lods
cli
push
pop
pop
leave
pop
call
pusha
push
xor
dec
mov
and
les
sub
xlat
sbb
xchg
fisttpll
rcl
pushl
arpl
int
mov
in
push
lds
push
out
es
jg
adc
inc
stc
sbb
jmp
cmp
ss
cmpb
sahf
icebp
popa
mov
sbb
jle
inc
addl
xorb
pop
xor
fdivr
mov
xchg
push
lock
dec
sub
xchg
push
inc
push
dec
xchg
ljmp
mov
cld
mov
mov
push
outsb
in
inc
popa
xor
jl
mov
test
mov
xchg
fstl
call
xor
shrb
mov
sbb
loope
xchg
pop
xchg
dec
xchg
mov
cmp
or
sub
dec
mull
icebp
xchg
mov
mov
xor
push
mov
and
sahf
imul
ljmp
add
pushf
xor
stos
ja
pop
lods
or
or
jmp
push
cmpsb
es
mov
test
mov
std
pop
cld
addr16
fstl
into
daa
fldcw
push
and
sub
and
ss
jge
sub
loop
xchg
ret
push
mov
aaa
outsl
sahf
or
add
test
out
decl
lcall
stos
mov
arpl
std
decl
data16
add
fwait
sar
mov
es
cmp
insl
faddl
sub
push
enter
idivl
sub
movl
xchg
aas
std
movsl
imul
dec
ljmp
push
mov
push
xchg
jp
fnstsw
mov
clc
lods
movsl
inc
aas
loop
addr16
movsl
pop
mov
inc
bound
inc
ret
jecxz
mov
xchg
ret
inc
into
adc
adc
hlt
shlb
aam
jno
mov
jb
dec
stos
shlb
ja
lcall
mov
cmpsl
mov
dec
push
test
test
fprem
movsb
movsl
adc
or
call
enter
xor
add
fistpll
movsl
mov
push
ja
fdivrs
incl
sbb
loop
and
aam
aad
not
cmp
and
adc
sbb
adc
mov
hlt
clc
mov
xor
or
daa
popf
andl
repnz
test
arpl
in
sti
mov
lock
mov
push
jge
add
fdiv
std
je
and
jne
jae
ret
fisubl
sbb
add
sbb
icebp
js
scas
nop
xor
sbb
ss
push
rorl
clc
das
pushf
fdivr
bswap
int
mov
push
xor
dec
icebp
and
pop
mov
cltd
xchg
sub
adc
in
fadds
lea
add
gs
iret
push
scas
sub
leave
xchg
pop
sbb
lods
js
mov
imul
or
addr16
jg
pop
dec
add
pop
dec
pop
inc
mov
sbb
inc
xchg
fnstsw
rcr
add
sar
or
add
loope
aad
xor
std
ljmp
mov
push
xchg
iret
sbb
cmpsb
fadds
jp
and
sbbb
jne
cmp
jge
and
cld
xor
or
cmp
fcoml
out
xchg
sub
xchg
and
jge
mov
out
pushf
dec
or
fcomps
shlb
lret
jns
or
pop
ret
cli
sub
sub
pop
sti
jg
mov
cs
jnp
push
stos
or
lods
and
push
cmp
mov
sbb
mov
je
dec
clc
incl
jp
pop
and
mov
popa
leave
or
or
and
lcall
adc
stos
repnz
xchg
xchg
notl
fistps
fxch
lock
lods
or
ficompl
imul
or
shrb
mov
jg
and
mov
adc
cmc
sbb
sub
std
mov
scas
fimull
pop
loop
js
mov
push
mov
inc
orl
mov
stos
xchg
cmpsb
xchg
push
cmp
cmpsb
jne
push
xchg
cmp
dec
cmpb
enter
divb
loop
fmul
aas
add
incl
outsb
pop
push
mov
hlt
jae
divb
pop
jo
pop
or
dec
sbb
cs
cmp
and
in
add
mov
mov
testb
dec
inc
je
cmp
stos
ljmp
in
shll
gs
rcll
sbb
dec
sub
cwtl
scas
add
icebp
mov
outsb
stos
adc
pop
jns
movsb
lcall
les
mov
or
add
pop
lods
sbb
into
pop
fisubs
mov
xchg
out
hlt
test
popa
mov
fists
xchg
setl
cmp
adc
xor
loope
adc
in
sub
xchg
aas
scas
adc
movsb
stc
add
out
adc
inc
in
mov
add
scas
out
xor
cmp
push
fs
sbb
icebp
xor
mov
rcrb
in
clc
addb
ss
bound
dec
jmp
lret
add
add
insl
std
repz
loop
dec
and
fists
test
aad
push
insb
jl
mov
imul
mov
fs
ja
shlb
dec
aaa
fdivp
cmp
in
mov
sbb
or
decl
int
std
adc
xor
stc
cwtl
icebp
mov
mov
cmp
sub
aad
lcall
call
fcmovnb
jno
in
xor
pop
push
lret
pop
and
imul
sub
jmp
and
inc
sub
jb
add
int
insb
ljmp
rcll
push
test
mov
jmp
jg
dec
add
call
cmp
lods
jmp
les
dec
cld
push
jno
mov
aam
cwtl
adc
mov
std
rolb
arpl
mov
cmp
repnz
fstpt
push
cmc
inc
test
sbb
jg
fisttpl
add
sub
leave
pop
jecxz
dec
andl
mov
pop
inc
inc
aaa
das
ja,pn
fdivrs
add
push
mov
xchg
int
es
xor
cmp
inc
popf
sub
add
fdivs
clc
mov
jle
out
daa
inc
xor
pop
add
test
stos
mov
enter
cld
mov
push
fisubs
clc
add
jl
shr
sub
leave
mov
cltd
cmp
repnz
mov
fdivl
ljmp
insb
ror
jno
cmp
ss
add
push
aam
loope
ds
loopne
pop
mov
xor
xor
mov
fimuls
mov
movsb
nop
in
push
push
inc
dec
movsb
adc
adc
clc
sarl
int
pushf
or
loope
pusha
pop
dec
cld
loope
dec
ret
loopne
js
ds
push
dec
and
lret
push
les
shrb
or
mulps
loopne
fildl
mov
je
call
movsb
test
dec
icebp
js
addr16
and
into
les
insb
lcall
mov
cmp
sbb
inc
sub
daa
sub
movsb
pop
jnp
fldt
fs
lcall
xchg
jo
call
cwtl
jmp
and
aam
movsl
push
xchg
or
or
das
dec
leave
ret
push
xchg
adc
sbb
clc
lcall
movsb
push
scas
cmp
stc
movsl
push
jg
cmp
cmp
negl
mov
iret
mov
pop
mov
in
notb
adc
test
idivl
mov
mov
mov
inc
divl
das
push
xchg
mov
add
mov
jbe
rcrb
inc
call
mov
mov
jle
inc
popf
pop
fimuls
adc
push
xor
and
jg
push
cwtl
jno
pop
lret
call
popa
gs
inc
adc
inc
and
movsb
add
mov
call
stos
jno
pushf
cmpsl
jo
sahf
stos
lret
add
lds
sub
pop
jge
mov
xchg
sub
push
cli
or
out
in
aaa
test
ret
outsb
xor
xor
test
pop
in
and
cli
mov
cli
dec
ja
xor
in
je
xor
sahf
xor
cmp
mov
mov
in
cmpsl
ret
imul
and
in
cmpsb
mov
xorb
mov
fsubs
pop
jae
adc
hlt
add
call
jb
ret
mov
jo
fwait
mov
adc
push
mov
lret
movb
scas
xchg
stos
inc
jb
jmp
imul
sbb
xchg
adc
fnstsw
push
ja
not
pop
fs
outsb
movsl
xchg
call
inc
loop
fdivl
mov
pop
inc
push
xchg
clc
sbb
call
rclb
nop
xchg
push
pop
mov
jge
inc
mov
cmc
pushl
cmp
mov
test
mov
mov
outsb
scas
inc
or
inc
adc
dec
or
pop
xchg
mov
pop
scas
jb
push
jbe
out
outsb
fsub
pop
hlt
call
loope
std
out
pop
or
inc
ret
jno
mov
pop
dec
dec
mulb
jg
jmp
push
mov
dec
divl
mov
aad
stc
imul
xchg
imul
inc
sub
lcall
inc
sahf
fstpt
xchg
xor
std
test
mov
dec
or
lcall
xorb
mov
jg
test
xchg
cs
lcall
xchg
xor
movsl
insl
fcoms
sarb
jmp
pop
fisubs
mov
cmp
and
decl
insb
shrl
push
ja
add
and
decl
cmp
daa
je
push
or
xchg
decl
je
fcmovbe
repnz
daa
stc
xchg
xchg
dec
push
add
outsl
clc
jg
xor
cli
cmpsl
sahf
lods
mov
shrd
dec
sub
adc
fdivp
mov
xor
and
jle
test
mov
sub
shll
movsb
xchg
repz
mov
push
lret
sub
pop
in
fcomip
and
add
sbb
sbb
cmc
push
ljmp
sar
pushl
out
lock
popf
inc
xchg
ja
pop
lock
test
mov
or
lret
hlt
sbb
addb
xor
orl
fbld
fildll
mov
jbe
xor
cld
sub
sarl
out
jno
xorb
mov
jl
add
jnp
add
or
sbb
incl
dec
lods
fcoml
out
mov
jmp
call
or
rorb
jo
add
sub
fstpt
adc
xchg
mov
test
adc
jmp
mov
pusha
test
mov
jno
cmp
pop
mov
and
test
test
add
lret
test
fxch
cmpsb
imul
add
mov
inc
jg
ds
push
or
inc
sub
cmp
sub
les
jae
lcall
outsl
inc
xchg
add
cmp
ds
lcall
dec
cmpb
fmull
mov
mov
xchg
fs
jle
cmpb
imul
bnd
je
das
push
pop
sar
xor
out
outsl
dec
push
lods
daa
cwtl
lahf
ds
ret
stos
dec
push
test
daa
popa
std
stos
pop
adc
fucom
mov
test
mov
mov
sbb
js
dec
std
fisubrl
add
cmp
lods
and
int
mulb
cs
clc
push
lea
cld
mov
cmp
jg
mov
mov
insl
mov
ja
or
lods
out
clc
inc
int
stos
push
xchg
pop
push
lods
loopne
push
mov
sub
mov
dec
push
push
cltd
dec
das
loope,pn
in
sub
mov
jg
pop
hlt
push
sarl
or
movsb
push
je
push
pop
rolb
sub
push
inc
jecxz
or
in
xchg
push
mov
clc
dec
cld
fwait
inc
rclb
jbe
xchg
cmp
shlb
mov
rorl
in
lret
mov
mov
pextrw
or
bound
aam
dec
dec
xchg
vmwrite
rcr
test
movsl
pushf
mov
adc
ret
cmp
adc
mov
xchg
or
aaa
inc
imulb
and
shlb
decl
ret
rcl
loopne
or
sbbl
and
inc
xchg
mov
xorb
insl
pop
std
mov
push
xchg
ds
xor
lahf
cmp
cs
aaa
cld
and
add
sub
jg
cwtl
inc
or
pop
pop
mov
xchg
idiv
fdivs
decl
inc
inc
scas
js
orb
leave
ret
adc
adc
cs
push
adc
insb
aaa
cld
mov
sbb
bound
push
lret
fisubrs
push
cmp
pop
push
adc
rorb
sub
xlat
loope
jp
sbb
mov
sbb
push
stos
cs
xlat
adc
loope
ja
lcall
pushf
adcb
popa
jg
lcall
test
adc
xchg
mov
push
dec
sbb
nop
jo
inc
jl
imul
add
sar
jl
pop
int
or
jbe
add
fs
adc
mov
and
in
incl
call
lcall
add
inc
add
popa
sub
enter
dec
hlt
enter
jno
or
js,pt
inc
pop
sub
popa
jge
mov
inc
jl
push
add
and
push
pushf
dec
out
ljmp
jg
or
inc
adc
lock
lods
adc
push
xchg
mov
jg
push
ret
andl
shll
pop
sub
jmp
and
pop
shlb
pop
dec
sbb
inc
pop
mov
ljmp
cmc
jmp
sti
sbb
mov
pop
mov
mov
mov
cmpsb
pop
push
notl
sti
jg
test
inc
sub
popf
enter
xchg
or
call
iret
outsb
fyl2x
cs
lcall
rcr
ret
das
js
addr16
push
mov
hlt
mov
cmp
std
or
and
aam
decl
adc
jle
scas
cmp
lods
mov
sbb
cmp
cmp
mov
sub
mov
sbb
pop
sbbl
push
hlt
arpl
lcall
ja
mov
or
leave
pop
mov
cwtl
jns
ljmp
push
xchg
push
insl
orb
pusha
or
pushl
aam
rorl
xchg
lods
jg
mov
jg
loopne
subl
adc
jecxz
jp
gs
push
movsb
int
adc
jecxz
bound
or
mov
mov
lods
rcl
imul
adc
jmp
cmp
arpl
push
xor
adc
sbb
sub
inc
int3
fbstp
subl
sti
push
nop
and
cmp
dec
sub
ja
ret
std
call
rcr
or
cli
xorb
rolb
dec
jl
xchg
xorb
insb
inc
inc
sub
ret
push
outsb
xchg
mov
fcompl
xchg
pop
jb
movsb
and
sbb
and
outsl
push
iret
iret
jge
movsb
ljmp
je
mov
mov
addr16
or
dec
mov
sbb
pop
mov
cltd
push
outsb
fildll
ljmp
lea
sahf
xchg
bound
fwait
cs
lahf
aam
pop
mov
jmp
inc
mov
dec
or
popf
test
pop
add
mov
gs
fwait
cmp
outsl
xchg
cmp
pop
jg
sbb
or
sub
sahf
xor
inc
jb
sbb
adc
sub
enter
mov
cwtl
nop
and
cmp
jg
pushl
int3
or
jne
cwtl
fmuls
fisubl
call
inc
ret
lods
cli
movsb
stc
or
and
add
inc
inc
ja
jle
filds
incb
mov
mov
scas
les
pop
sub
add
mov
dec
add
sbb
and
int
cmp
pop
adc
push
dec
rol
cli
enter
fbld
stos
xchg
insl
into
movsl
bound
xor
sbb
lea
fsubl
dec
pop
xor
icebp
ret
cmp
xchg
mov
pop
jle
adc
andl
mov
add
bound
out
jae
cmp
mov
fdivrs
jo
iret
push
dec
icebp
jo
ss
out
clc
out
pop
das
pop
dec
push
sbb
dec
xor
sub
sahf
adc
jge
mov
mov
testl
sub
mov
sbb
pop
adc
cmpsl
int
or
mov
add
int3
and
addl
cmp
icebp
incl
cmp
inc
push
mov
lods
cmpsl
xchg
scas
call
lock
dec
ret
pop
inc
inc
cltd
jge
mov
cmp
cld
mov
imul
outsl
je
stos
dec
stc
hlt
jl
mov
dec
pop
call
mov
xchg
and
aam
in
loop
or
cmpsl
jl
dec
call
cmp
iret
dec
lret
rcr
mov
jne,pn
int3
add
pop
mov
icebp
mov
test
addr16
add
mov
cmp
push
loop
mov
mov
add
das
pop
cmpsl
xor
aam
jae
notb
sarb
in
jno
cmpsb
pop
cmp
add
in
ljmp
std
adc
or
aas
inc
jl
pop
jbe
cld
ljmp
lcall
lods
ljmp
dec
add
mov
or
lods
mov
jp
std
incl
ror
jnp
repz
leave
dec
mov
push
push
xor
scas
ret
push
xor
sti
lret
inc
xchg
insl
mov
mov
and
and
dec
cmpsl
dec
dec
ret
outsl
int3
push
dec
stc
leave
adc
fnstsw
je
out
pop
ljmp
ja
or
jmp
pop
inc
or
jmp
add
mov
xchg
mov
rcr
ret
mov
hlt
ljmp
ss
ja
xchg
cmpsb
into
jecxz
xchg
repz
je
movsb
push
sub
insl
push
shrl
test
pop
fs
jg
fcoms
xchg
fcmovnb
rcll
bound
jbe
inc
ret
dec
and
inc
pop
cli
out
and
cmp
sar
xchg
xchg
or
mov
mov
mov
lock
pop
in
les
sarb
push
adc
jl
mov
jg
push
mov
daa
scas
orl
mov
insb
xchg
jmp
out
in
mov
test
inc
popf
sbbl
pushw
lock
add
dec
adc
jp
cmp
adc
addr16
cmp
xor
rcl
fucomip
sbb
subl
mov
cmp
add
mov
lds
inc
repnz
xchg
mov
mov
mov
ror
push
hlt
mov
ja
jb
pushf
adc
add
imul
hlt
popa
cmp
pop
inc
in
lods
shll
add
lock
add
xchg
aad
into
mov
dec
int3
add
jge
daa
aaa
xor
inc
fnsave
mov
mov
nop
ss
add
je
sbb
mov
insl
sbb
fwait
cli
and
insl
test
mov
mov
call
adc
cmc
repnz
gs
rclb
es
insl
ror
ret
mov
mov
jle
insl
push
mov
mov
xor
push
ss
into
mov
dec
dec
dec
test
push
or
mov
sti
cmp
aas
jo
pop
adc
bound
sbb
rcrb
adc
nop
push
mov
push
push
movsl
shll
les
scas
jnp
decl
out
lret
jl,pt
jle
pop
jo
push
pusha
xor
stos
add
mov
add
sub
jge
or
mov
stos
mov
mov
enter
add
push
into
fs
dec
mov
out
in
xchg
insl
or
movsb
jbe
or
or
push
cmp
stos
xchg
rcl
mov
pop
ljmp
lods
sbb
push
std
push
icebp
dec
adc
jg
add
call
btc
inc
inc
ds
cmp
ss
mov
aam
sahf
pop
jge
lcall
decl
or
mov
orl
add
add
sub
push
cwtl
popf
outsl
imul
mov
xor
hlt
jg
pushf
lcall
inc
adc
push
xchg
mov
lcall
add
inc
ret
dec
lret
sarb
xor
jnp
pop
sub
out
clc
pop
icebp
insb
and
sbb
jmp
pusha
sarl
loope
test
fcomip
ljmp
add
rclb
dec
cs
pop
ret
jne
xchg
cmpsb
adc
sbb
movsl
jle
shrb
xor
jmp
ss
sti
mov
into
inc
fldenv
pop
std
imul
xor
call
ss
inc
add
lds
add
mov
stos
pusha
shl
lret
mov
dec
loopne
pop
test
imul
out
dec
clc
ljmp
sbb
jle
pop
pop
enter
adc
inc
data16
or
or
shlb
lods
add
or
adc
mov
in
xor
dec
test
addl
mov
adc
pop
movsb
daa
ret
loope
cmp
in
imul
lcall
cmpb
sbb
int
dec
cmpsl
das
sarb
mov
push
mov
xchg
clc
scas
enter
mov
test
xor
mov
or
xor
iret
test
adc
jns
lock
xchg
mov
adc
push
dec
or
decl
cli
mov
mov
lds
ret
call
xor
loop
mov
xor
push
clc
fisubrl
lea
mov
dec
adc
decl
ljmp
or
push
add
mov
sbb
cs
div
incl
mov
mov
adc
out
daa
loopne
pop
ja
sbb
push
dec
mov
decl
das
push
ret
adc
push
mov
jo
cmp
pop
jecxz
pop
and
cmp
cli
xchg
movsb
call
pop
pop
cld
out
push
pushl
repnz
jle
outsb
dec
and
inc
out
imul
jecxz
add
aaa
sub
outsb
pop
inc
push
stos
push
lret
jns
jp
mov
aad
jp
push
sarl
jno
aaa
push
and
jbe
pop
or
adc
int3
aas
push
fisttpl
das
clc
outsb
in
int
mov
inc
and
lea
dec
sti
mov
lret
aam
data16
pop
jg
xchg
pop
sub
cmpsb
lcall
repnz
sti
leave
cmp
in
cld
dec
ljmp
sub
mov
push
inc
adc
shr
in
jnp
cmpsb
cmp
sbb
fwait
push
pop
and
mov
cs
mulb
arpl
outsb
xchg
xor
pop
and
fcmovb
clc
inc
mov
sub
cwtl
nop
adc
xlat
dec
std
add
sub
test
pop
test
addr16
add
ja
xchg
stos
mov
ja
jg
jno
cmp
out
lahf
aas
ds
aaa
push
bound
and
lock
jge
incl
cli
xchg
mov
insb
mov
pusha
and
sub
push
out
mov
and
mov
pop
add
stos
add
sub
jns
shll
dec
mov
call
mov
jl
sarl
cmp
fsubs
test
add
xor
or
push
pop
cmp
push
mov
mov
sbb
push
or
jg,pn
mov
mov
fs
sbb
aam
xchg
cmp
fdiv
mov
dec
stc
dec
data16
and
rcr
std
xchg
pop
push
jp
cmc
mov
rol
shll
adc
jnp
and
aad
xchg
mov
jo
pop
imul
push
rorb
scas
xor
mov
push
add
jnp
add
pop
dec
data16
fstpl
pop
add
fwait
ss
push
arpl
inc
mov
adc
fildl
cmp
xchg
mov
xchg
pop
mov
jp
pop
sub
push
inc
in
aam
subb
adc
cli
mov
adc
in
inc
pop
in
mov
mov
out
daa
cmp
frstor
stos
loopne
jno
inc
jno
cltd
fs
mov
scas
push
std
push
enter
insl
daa
mov
mov
adc
sub
aaa
cld
call
sbb
sub
add
pop
test
out
mov
ljmp
ja
push
adc
test
int
ret
or
cwtl
add
addr16
push
mov
movsb
push
dec
sub
or
adc
imul
and
and
das
xchg
in
fistpl
cwtl
sbb
push
test
test
push
jecxz
verw
mov
fcomps
idivb
insl
xchg
pushf
scas
rol
adc
cmp
sub
orb
jbe
enter
fcomip
sub
inc
and
push
loop
jle
ja
repnz
and
push
int
mov
mov
xor
stos
fdivrl
out
out
dec
shlb
ljmp
add
adc
jae
xor
adc
pop
mov
jns
xchg
fistpll
bound
adc
adc
inc
rorb
rolb
das
ret
mov
or
in
mov
sbb
mov
ds
inc
imul
clc
mov
inc
cmp
subl
dec
inc
ja
or
or
cmp
mov
or
fbld
pop
xchg
stc
jb
cmp
stc
sub
test
sbb
rcrb
and
pop
lods
cmpsl
test
pop
fdivrs
call
mov
xchg
add
adc
mov
xchg
xor
mov
lret
sahf
or
cmp
pop
imul
mov
mov
lods
lcall
pop
xor
popf
push
loope
repz
push
push
ljmp
lock
jp
add
adc
mov
xlat
pop
fldt
fnsave
pop
mov
imul
dec
sahf
add
std
add
lahf
les
gs
push
icebp
loope
inc
mov
push
jae
test
insb
popf
outsb
pop
inc
clc
in
jmp
xor
fdivs
clc
pop
lock
in
fisttps
cli
cli
das
mov
popa
sbbl
jne
and
adc
outsl
test
and
mov
ret
inc
sub
jg
cli
sub
pop
aaa
gs
jg
imul
psubw
xor
and
ljmp
daa
sar
xchg
aam
xor
push
rcrb
dec
insl
mov
mov
xchg
push
jnp
mov
add
sahf
mov
add
push
mov
xchg
loope
ss
pop
push
mov
or
mov
pop
addr16
xor
test
dec
shl
clc
enter
add
jae
mov
xchg
shlb
scas
shrb
fsubrp
xchg
insl
mov
push
sub
lcall
cmp
aad
nop
imul
dec
add
sahf
cli
fistl
loop
mov
jb
data16
mov
jmp
mov
or
int3
xor
pop
ljmp
mov
mov
fsubrl
dec
inc
sub
rorl
mov
sbb
xchg
pop
fstl
loope
out
inc
fmull
out
out
and
xor
inc
push
adc
ss
cltd
movsb
mov
mov
rcrb
jbe
aas
mov
dec
les
add
add
and
xchg
push
mov
and
fld
jne
push
jns
rorl
adc
mov
or
cmp
adc
jbe
rolb
test
mov
shlb
xor
mov
sbb
push
dec
pop
sub
ja
ficoml
idiv
mov
xchg
movsb
mov
inc
mov
mov
decb
je
lret
pop
sbb
add
mov
cmp
outsl
mov
shll
movsl
icebp
inc
add
adc
out
mov
sbb
sahf
fstl
sub
adc
in
sbb
pop
sti
push
xor
mov
loopne
ret
mov
xchg
cmpsb
add
dec
lahf
and
loopne
add
pop
retw
or
gs
icebp
decb
lock
mov
sub
lret
and
inc
dec
pop
das
or
mov
call
sub
es
aam
inc
lods
mov
movsl
pushl
sbb
outsl
xchg
cmc
jbe,pn
sub
jmp
and
mov
mov
cmp
jle
cld
push
rcr
icebp
shrl
sar
jg
outsl
out
icebp
and
mov
movsl
xchg
test
insl
aaa
insl
mov
xchg
jle
ljmp
mov
dec
push
data16
imulb
lret
dec
inc
push
das
shr
aaa
or
clc
clc
je
aaa
ret
mov
push
lods
insl
xor
enter
lcall
nop
xor
shlb
push
cmp
pop
mov
sbb
mov
push
nopl
out
cmc
movsl
jae
sbb
jns
adc
imul
mov
mov
testb
jno
xlat
or
pop
adc
cli
add
aam
adc
ret
adc
nop
dec
scas
pop
mov
popa
jg
lcall
push
setp
loop
inc
jge
xchg
jge
cmpsl
cld
jg
fisttps
pop
and
push
pop
xchg
cmp
xor
add
sub
loopne
xchg
sub
ljmp
adc
aas
lods
push
sbb
pop
arpl
loopne
fdivrl
cld
cmp
adc
pop
xchg
mov
ljmp
jmp
xchg
or
cmp
jbe
dec
sub
and
mov
inc
in
inc
lods
mov
mov
add
push
sub
and
outsb
jns
ret
dec
push
jl,pn
lods
dec
test
and
and
sub
sub
and
dec
fstl
jmp
out
mov
lock
lcall
js
pop
bound
mov
or
clc
push
lea
in
or
mov
adc
jns
subb
ljmp
lcall
popf
jecxz
das
xchg
fdivp
sbb
pop
imul
je
roll
dec
and
mov
mov
jnp
mov
rorl
pop
ret
mov
addr16
xchg
clc
ret
pop
dec
cld
scas
jg
scas
mov
mov
mov
jl
data16
add
or
mov
dec
frstor
mov
ljmp
hlt
fs
arpl
mov
mov
jecxz
or
jns
pushl
or
push
ret
fcoml
or
inc
fistl
push
je
and
fmul
or
adc
in
popa
stc
sub
test
leave
mov
xchg
lea
fdivl
scas
out
outsb
xor
cmp
push
jb
jmp
push
pop
jmp
std
mov
test
ja
mov
lret
xor
add
inc
nop
mov
test
or
test
gs
in
nop
out
xor
mov
subb
call
pop
decb
pusha
ljmp
sbb
pop
movsb
test
mov
jp
jmp
sbb
push
inc
ffreep
sub
adc
jmp
in
push
mov
loop
into
inc
mov
add
add
sub
mov
mov
fistl
cmpsb
cmp
je
int3
ret
insl
add
cli
stos
inc
push
sub
pop
xor
sbb
mov
jl
xchg
inc
and
inc
cwtl
daa
dec
dec
test
inc
inc
call
cmpsb
cwtl
sub
mov
in
xchg
lds
mov
inc
pop
rcl
stc
pop
fsubrp
xlat
add
jmp
add
mov
test
and
push
push
repz
push
enter
cmpsb
cmp
fdivr
cmc
mov
push
out
mov
sub
mov
sbb
sbb
push
in
xchg
imul
les
fbld
call
pop
xor
xchg
push
xor
dec
inc
or
pop
mov
gs
movsb
jg
xchg
mov
sahf
test
mov
mov
jg
outsl
popa
pop
mov
and
adc
dec
xchg
or
mov
sbb
push
call
or
mov
repz
mov
ret
mov
test
mov
sbb
push
test
in
dec
or
cld
lock
xchg
push
cld
push
aas
push
divb
xchg
or
lea
cltd
scas
pop
loop
sahf
arpl
or
jl
decl
jno
test
insb
fmull
sub
decl
dec
push
test
aas
je
in
pushf
or
stos
cmp
das
and
test
insl
and
add
mov
gs
adc
aaa
jg
mov
insb
xor
daa
mov
mov
xchg
out
add
fistpl
xor
cmp
mov
mov
mov
popa
lret
mov
cmovns
push
stos
mov
mov
inc
cmp
shrb
mov
jecxz
cli
pop
xchg
mov
mov
jnp
pushf
lods
mov
pop
mov
aaa
cld
fbld
jo
mov
push
lcall
js
stos
and
xor
add
inc
or
neg
cmp
dec
mov
cmp
das
test
xlat
or
or
test
fbld
mov
jle
repz
cmp
dec
adc
xchg
ljmp
pushf
sbb
sub
mov
out
jb
inc
mov
clc
cwtl
jecxz
cmp
sub
mov
std
cmpsb
mov
fcoms
out
cmp
leave
mov
push
mov
mov
mov
adc
pop
out
popf
and
scas
imul
pop
sbb
mov
push
jmp
inc
inc
pop
jmp
pop
adc
arpl
fiadds
cld
iret
in
scas
inc
xor
in
adc
sub
nop
int3
inc
shll
movsb
push
lcall
js
xchg
stos
scas
xor
mov
mov
inc
movsb
cmp
sbb
or
push
js
sbb
add
nop
into
pushf
sbb
in
call
inc
and
jp
fsubrp
ror
jle
shl
cs
mov
mov
sbb
sub
sahf
jge
scas
jle
mov
push
fidivl
negb
push
mov
test
ffreep
scas
das
rclb
call
and
push
sub
fwait
inc
call
sbb
mov
scas
pop
xchg
pop
leave
lret
dec
xor
push
adc
fldt
sbbb
outsl
subb
jbe
add
testb
xchg
pusha
adc
popa
xchg
repz
notb
scas
jp
adc
xchg
cmp
or
outsl
add
xchg
or
lcall
pop
outsl
mov
jbe
cmp
add
pop
loop
pop
movb
popf
ds
outsl
mov
clc
imul
aaa
lock
enter
jne
and
cmpsb
test
incb
rorl
jo
mov
push
jp
xor
mov
fsubrs
out
clc
jmp
imulb
cmp
call
mov
frstor
gs
les
jno
cmpsb
push
insl
push
mov
mov
mov
xchg
loop
rolb
movsb
push
test
mov
xor
xchg
cmp
clc
cltd
in
mov
adc
mov
out
add
and
or
rol
lcall
cmp
xorb
imul
jg
adc
sbb
adc
jo
js
jnp
sbb
dec
adc
ret
cltd
add
mov
pusha
and
clc
sbb
ljmp
adc
mov
call
push
aaa
dec
icebp
xor
cli
mov
out
jge
push
push
dec
jp
fwait
and
jg
test
mov
fildll
call
cmpsb
pusha
into
xchg
hlt
dec
or
testb
xchg
les
push
xlat
cli
lret
int3
mov
cmp
insl
mov
daa
rolb
or
notl
sbb
mulb
movsb
inc
sahf
inc
ds
aam
inc
fwait
push
stos
outsb
movsb
jo
leave
pop
sbb
sbb
lds
xor
dec
fisubrl
or
push
jl
scas
sbb
ljmp
sub
push
fistl
mov
fisubrs
mov
sub
pop
lock
jecxz
xor
pop
mov
pop
aaa
cld
out
clc
jge
nop
push
jmp
int
inc
inc
mov
pop
test
orb
pop
cmp
mov
mov
xchg
mov
in
fwait
push
fcompl
adcb
and
mov
inc
xchg
imul
xchg
adc
jg
cmp
inc
xchg
insl
dec
or
outsl
pusha
stc
arpl
int
jmp
enter
cmp
xchg
jns
rcrb
pop
call
insb
cmp
test
xchg
and
sub
push
aaa
push
dec
or
call
std
paddsw
test
movsb
ljmp
inc
sub
xchg
inc
xor
ds
imul
cmc
incl
stos
adc
shrb
repnz
push
int3
push
data16
xchg
mov
fmulp
or
pop
cmpsl
sar
je
mov
adc
sub
lods
xor
arpl
mov
xor
xchg
cli
dec
mov
ror
sub
or
pop
xor
cmp
lcall
push
pop
xor
fisttpl
std
pop
jge
daa
adc
xor
mov
popw
dec
jmp
mov
dec
mov
xchg
fisttpl
xchg
lock
jg
ljmp
xchg
pop
adcl
int
mov
jp
dec
test
icebp
jmp
inc
mov
cmc
dec
or
fisubrs
jecxz
test
idivb
pushl
sbb
iret
inc
in
clc
cmpsl
cmp
inc
cs
arpl
mov
repnz
sub
data16
fsubrl
mov
jnp
cltd
push
cwtl
jp
add
cld
mov
push
cld
mov
or
icebp
jg
aas
mov
cld
jg
sub
sbb
mov
push
or
cmp
enter
js
lock
pop
mov
and
ljmp
sar
mov
xchg
das
pop
loop
xchg
pop
pop
dec
das
in
push
scas
stc
shlb
push
add
lcall
lds
mov
movsb
clc
jne
push
cmp
test
outsb
std
xchg
jbe
shr
lahf
loope
jbe
and
add
jmp
pop
lds
sub
inc
xchg
mov
add
mov
cmp
rclb
sbbl
push
cli
mov
pushw
sbbl
lahf
sbbb
pop
xchg
scas
or
dec
jecxz
mov
push
and
scas
dec
jp
xor
cld
mov
cmp
pushf
hlt
jns
xlat
call
jne
sbb
repnz
fmull
ja
and
mov
or
addr16
or
mov
and
mov
or
push
or
xchg
rorb
xor
add
in
jo
pop
inc
sbb
iret
jle
ret
adc
test
popf
inc
jo
outsl
add
push
dec
or
ds
fsubr
ss
int
daa
dec
mov
xchg
jo
daa
sub
push
xchg
fsubs
mov
idiv
cmp
sahf
fbld
not
in
sub
mov
iret
mov
jbe
jmp
andb
in
and
out
and
cmp
push
mov
andl
lret
or
loopne
adc
pop
sbb
fnstenv
test
mov
ljmp
inc
inc
mov
push
lock
jg
mov
leave
dec
and
mov
pop
faddl
add
pop
popf
sbb
mov
aam
cmp
push
loopne
into
jae
pop
test
lcall
cmpsb
mov
or
mov
imul
jmp
xchg
inc
push
dec
cmp
push
popa
outsb
xor
das
mov
sahf
sbb
repz
addr16
sub
inc
adc
icebp
push
stos
idivb
pop
roll
test
sahf
ret
add
out
push
jb
and
jg
popf
jne
push
sbb
pop
xchg
jg
cmp
or
dec
and
lar
mov
push
lcall
push
lret
cld
jl
in
jg
daa
loop
loopne
hlt
test
jnp
cli
mov
jmp
cli
mov
dec
imul
mov
push
and
jbe
sysenter
ljmp
lret
mov
add
test
jmp
pop
cmp
fwait
pusha
mov
loop
pop
subb
bound
mov
popf
push
mov
ret
arpl
mov
xor
cmc
incl
xor
inc
into
loopne
je,pt
ds
hlt
call
aaa
jl
fcompl
mov
dec
push
push
gs
je
push
cltd
xor
sar
or
dec
mov
pop
or
and
jo
jns
dec
loopne
push
adc
add
int3
imul
aas
push
out
call
sbb
sub
push
ret
aad
scas
in
add
or
ss
fwait
mov
sarb
ficoml
ret
jg
loopne
push
add
fsqrt
pop
dec
cwtl
nop
mov
jno
insl
sub
pop
aam
cmp
stos
sub
dec
mov
adc
lock
adc
xchg
loope
push
mov
sub
jno
pop
jmp
iret
mov
movsb
pushl
cmp
aas
push
mov
xchg
push
xor
clc
mov
xchg
push
aaa
xchg
divb
sub
sub
icebp
negb
pushl
pop
out
or
icebp
or
adc
cmpb
mov
xor
sub
aaa
add
mov
fs
lcall
or
rorb
rcrb
mov
adc
xchg
push
pop
mov
fs
jg
xlat
or
add
mov
dec
inc
loopne
mov
arpl
dec
ds
cs
mov
dec
xor
out
ret
bound
adc
mov
sbb
inc
negb
adc
adc
mov
and
jmp
lcall
lods
out
cmpsl
pop
fistps
mov
push
js
sbb
pop
roll
sbb
mov
xchg
inc
insb
push
insl
idivb
lods
stos
out
pop
add
and
adcb
fidivl
std
ficompl
xchg
dec
sbb
daa
xchg
pop
inc
pop
add
sbb
push
scas
xor
inc
cmp
add
mov
jb
je
outsl
and
dec
jne
mov
mov
fwait
jle
stos
or
mov
mov
sub
adc
mov
or
push
xchg
jg
fidivl
in
cltd
scas
push
into
fisubrl
das
shr
ret
dec
ret
mov
nop
fmuls
inc
adc
pop
test
mov
nop
push
sub
rol
and
das
sub
in
push
and
shr
add
push
test
cld
lcall
jbe
movsb
inc
stos
inc
insl
mov
dec
js
es
sub
mov
fdivl
lds
cmc
loopne
lods
dec
imul
mov
adc
or
sahf
mov
lahf
mov
into
std
mov
loop
lcall
mov
push
jo
push
lcall
add
inc
push
add
lcall
test
pop
sub
cmp
add
mov
ds
jg
or
in
and
ficoms
mov
xor
lret
popa
mov
push
mov
pop
nop
sbb
fldl
mov
xor
xor
mov
out
mov
add
rcll
pop
push
xor
cld
adc
rolb
add
sbb
mov
out
xor
push
sahf
fdivrl
or
add
mov
clc
mov
cli
into
ds
ja
adc
dec
ret
lcall
ljmp
jecxz
add
pop
xor
lds
popf
mov
jnp
inc
nop
das
in
pop
clc
xchg
dec
dec
sbb
andl
add
pop
push
shlb
cmp
sbb
mov
mov
dec
xor
push
decl
outsb
in
pop
popf
push
cwtl
pop
dec
pop
es
pop
fnstenv
push
int3
adc
orb
test
lret
mov
cld
fistpll
add
int3
jae
xchg
mov
ja
mov
push
or
ljmp
test
jb
and
aad
cmpb
dec
shlb
add
repnz
and
sub
aad
std
sbb
insl
fs
loope
mov
movsl
lods
pushl
movsb
cltd
jae
sub
sbb
inc
std
test
sahf
mov
jg
rcr
lods
xchg
pusha
nop
sbb
lahf
add
mov
mov
lock
jp
sbb
pushf
pop
gs
std
fcomi
in
call
sbb
xor
test
test
ret
cmpsl
add
fstpt
data16
aas
mov
jecxz
jecxz
imul
leave
ret
inc
out
xchg
jle
rcrl
and
je
pushf
and
icebp
aas
loopne
cmpsb
sub
stos
popf
xchg
hlt
nop
push
mov
andb
add
sbbl
or
jne
clc
cs
mov
cmp
pop
adc
stos
adc
sti
loopne
ljmp
xchg
pop
ja
popa
pop
mov
jae
adc
cmp
ljmp
jp
mov
fisttps
loopne
mov
mov
test
dec
insl
jne
fisubs
decl
mov
clc
hlt
sar
inc
sub
push
dec
mov
in
mov
pop
push
cmpsl
popa
jp
fdivrs
cmpsl
scas
jecxz
cmp
mov
inc
dec
push
loopne
pop
jg
pop
mov
stos
mov
xchg
mov
push
mov
daa
and
jb
sbb
lods
ja
fisttps
lea
rcll
dec
stos
scas
mov
ljmp
inc
pop
out
rorb
jl
xchg
inc
cmp
pop
aam
mov
mov
test
shrl
iret
sub
or
pop
adc
outsb
xchg
mov
lcall
scas
adc
push
inc
stc
aam
fst
add
and
or
pop
lock
popa
adc
ljmp
cld
xorb
adc
cmp
pushf
dec
scas
add
pop
lods
lock
pop
mov
cmp
repnz
mov
ficompl
cmovge
jg
push
fbld
fsubs
insl
cld
stos
cwtl
pop
ret
scas
adc
daa
mov
mov
shll
imulb
jbe
in
jp
pusha
adc
inc
adc
sub
pop
mov
mov
movsl
pushf
loopne
xchg
push
rolb
ret
outsl
sub
cwtl
fidivl
lock
lods
stos
rorl
loope
pop
test
stos
lret
les
daa
mov
cwtl
mov
ds
xchg
out
test
mov
xchg
mov
jle
jecxz
js
mov
push
jg
sub
js
jno
outsb
es
jg
xchg
ss
rcll
dec
fs
cmp
sub
in
jb
int3
rorb
ljmp
clc
cmp
aam
gs
mov
decl
jecxz
enter
pop
stc
inc
scas
test
lahf
clc
test
out
into
addb
and
bound
xchg
mov
in
jno
ljmp
jnp
leave
inc
xor
cwtl
insb
add
jl
movsb
push
shlb
dec
ds
leave
and
popa
or
jb
mov
lcall
das
sti
xchg
mov
add
sub
test
movsl
loope
mov
je
sub
out
sub
push
test
movsl
ds
clc
fisubs
cmc
jg
push
add
mov
jmp
push
pusha
dec
xchg
mov
icebp
mov
pop
mov
pushf
dec
std
pop
rorb
push
scas
add
jmp
ss
ja
pop
and
cld
popa
cld
xchg
adcb
call
mov
dec
dec
cmp
insb
lock
je
ficoms
fisubl
sbb
cltd
inc
ljmp
or
jne
cs
fidivrl
xor
jle
mulb
hlt
cmp
push
movsl
push
jmp
sub
cmp
test
sar
aas
mov
mov
push
fistps
sahf
sar
jmp
add
cmp
inc
adc
nop
clc
jmp
pop
leave
fs
pop
jecxz
movsb
test
loope
call
jge
mov
sbb
xchg
repnz
sbb
cld
cmp
mov
movb
dec
inc
es
lods
jae
js
and
popf
jb
mov
aam
mov
ss
mov
add
mov
jle
ret
dec
jle
jecxz
mov
cld
outsb
pop
mov
and
mov
ja
nop
pop
push
dec
xlat
push
imul
sub
test
mov
les
rorl
sub
lods
sub
fdiv
cmp
flds
int3
pop
mov
test
scas
addr16
dec
mov
sub
jg
xor
popf
push
jge
movsb
pop
je
es
shlb
mov
loop
leave
in
jne
fwait
pop
mov
loop
test
movsb
dec
jae
pop
test
dec
popa
xor
dec
dec
rorb
into
jg
sbb
cmp
sub
xchg
jns
sub
jmp
mov
xor
in
or
arpl
add
push
pop
pop
inc
pop
inc
dec
jo
adc
mov
jbe
mov
sbb
shll
scas
scas
push
push
lret
push
clc
decl
cli
dec
xchg
outsb
cmp
xor
repnz
push
xor
mov
lret
jl
pop
pusha
js
adc
push
cmpsb
shl
mov
add
push
inc
push
shlb
or
test
enter
cmp
clc
fisttps
inc
or
int3
cmp
mov
mov
ja
or
push
lret
in
pushl
cld
stc
in
xlat
dec
mov
and
insb
roll
rolb
fdivrp
outsb
add
xchg
add
decl
xchg
or
sub
jae
lods
jns
lea
or
aad
imul
xchg
es
jg
rcr
or
jmp
clc
lcall
push
adc
pushl
into
test
loop
mov
dec
mov
in
sar
dec
dec
jle
sub
push
mov
pop
cmc
aas
add
stos
add
xchg
stos
jp
sahf
push
sbb
mov
mov
jmp
outsb
cmp
addr16
lock
or
in
fbld
pop
pop
in
nop
xchg
mov
pop
inc
add
sbb
jmp
pusha
and
aas
push
and
add
and
es
cli
es
ljmp
lcall
sub
and
cmp
mov
and
mov
xchg
xchg
into
out
push
cmpl
hlt
adc
pop
add
enter
cmp
pop
pop
in
mov
scas
adc
and
add
add
or
jp
cmp
mov
lea
shl
and
pop
push
mov
mov
pop
clc
call
dec
mov
cltd
cmp
or
xchg
sbb
adc
xor
dec
mov
stos
push
mov
shrb
push
xor
dec
xlat
fdivs
loope
pop
test
int
push
mov
pop
mov
ds
fdivs
cwtl
xchg
fwait
dec
mov
mov
loopne
ja
shlb
jo
or
cli
loopne
lods
aam
push
rcrb
in
movsl
fwait
lcall
pop
jae
repz
mov
outsl
out
xchg
mov
xor
xor
cmp
ficoml
decl
xchg
bound
pop
jl
lcall
jg
push
mov
call
pop
inc
inc
negb
lahf
jb
inc
loopne
mov
mov
test
sbb
cwtl
out
sbb
data16
or
outsl
ret
jo
cli
cmp
xchg
xor
sarl
ljmp
das
mov
mov
push
inc
ret
push
mov
add
pushl
in
mov
pop
inc
lds
push
addl
out
inc
rol
aaa
push
in
jo
sub
xor
jp
sbb
shll
mov
stc
ljmp
lret
fs
das
movsb
out
jg
lret
dec
aas
imul
or
jl
push
cmpsl
adc
mov
jg
push
push
push
into
scas
xchg
xchg
push
aaa
sbb
xchg
dec
jmp
inc
adc
jmp
adc
mov
xchg
sub
cli
lea
cmc
stos
jno
mov
fldl
mov
mov
insl
mov
push
sbb
add
cltd
aam
pop
adc
scas
cwtl
es
cwtl
pushf
cmpsb
jbe
lcall
stos
mov
lea
dec
stos
mov
cltd
or
nop
lods
xor
clc
stos
inc
inc
add
jmp
xchg
shll
popf
xor
mov
loope
lds
dec
jg
ret
daa
dec
pop
shrb
ss
sub
aaa
sbb
and
test
into
enter
lcall
push
pop
jecxz
lea
call
jl
out
pop
xchg
repz
negb
sbb
push
aas
movsb
inc
push
clc
rorb
ret
xchg
test
inc
jge
lahf
mov
xchg
test
ljmp
sub
xchg
fcomip
shrl
mov
and
push
pop
jg
insb
mov
loopne
leave
je
flds
ljmp
sbb
les
and
push
push
shlb
call
dec
adc
sub
ljmp
aaa
cld
ljmp
or
pop
sub
ja
sub
cmp
fwait
ret
js
ljmp
add
lds
cmpsb
pusha
data16
mov
add
push
push
in
lods
pusha
or
insl
add
push
lcall
cmp
xchg
arpl
sub
pop
or
adc
out
sub
scas
subb
test
push
jno
mov
out
sbb
cmp
cli
push
loope
loopne
pop
les
mov
cmc
test
pop
pop
std
enter
es
lret
aaa
lods
icebp
mov
fcmovb
ja
mov
dec
mov
out
adc
add
repz
pop
hlt
mov
je
pop
rcll
pop
or
jae
and
in
leave
out
cmpsb
and
push
cltd
pop
pop
rclb
add
dec
jo
cwtl
lea
mov
push
outsl
add
dec
call
fstpt
loope
cmp
repz
pop
insb
test
push
cwtl
ret
and
lcall
int3
out
in
lock
es
scas
sbb
arpl
dec
faddl
sub
and
popa
les
je
outsl
test
adc
mov
call
cmp
sarb
jge
fistpl
fisttps
push
push
popa
in
jnp
sbb
jno
out
xchg
aam
xchg
hlt
pop
das
outsl
movsb
pop
iret
mov
xchg
scas
jle
or
xor
dec
mov
je
mov
mov
mov
xorl
mov
add
test
add
inc
dec
jb
sbb
js
cmpsl
lods
pushl
push
mov
inc
jl
mov
pop
stos
jge
sub
mov
mov
imul
loop
repnz
pop
daa
mov
cmp
imul
jg
adc
lods
mov
stos
dec
adc
mov
jbe
pop
lods
sbb
fcomip
cmpsb
decl
add
xor
adc
push
and
mov
pop
lock
addr16
js
mov
add
stos
cmp
call
stos
aad
push
bound
dec
std
jg
and
cmp
jg
or
or
jb
out
ds
sub
sbb
add
inc
loope
inc
dec
clc
ficompl
in
int
pop
clc
lret
outsl
clc
mov
dec
decl
mov
lret
ljmp
ljmp
clc
jp
cmpsl
push
out
cmpsb
or
sub
xchg
lock
lock
and
jecxz
and
pop
scas
add
incb
int3
inc
cli
push
xor
cmp
int3
sahf
imul
lret
imul
icebp
in
shlb
ret
sbb
fwait
add
ljmp
xchg
or
jnp
sub
jl
dec
lods
lods
cs
mov
jae
je
scas
sub
sahf
std
sbb
xchg
push
repz
stos
add
mov
adc
dec
mov
or
mov
imull
jg
sub
jnp
mov
xchg
jb
cmp
lcall
add
adc
loop
mov
jecxz
jg
mov
jmp
and
add
dec
das
cli
jmp
and
dec
xorl
and
or
loopne
sbb
fneni(8087
incl
scas
jle
ljmp
fwait
ret
pop
mov
or
mov
lods
xor
xlat
add
xchg
cmc
rcl
mov
out
clc
lcall
or
pop
int
cmp
jl
int3
pop
pop
repnz
inc
sar
dec
popf
ja
push
jbe
gs
repnz
sbb
xchg
lods
movsl
mov
cld
incl
mov
mov
add
test
sti
loopne
inc
pop
xor
clc
mov
mulb
xchg
iret
sbb
scas
nop
cli
cs
dec
loopne
adc
mov
add
sbb
xor
xor
adc
lods
les
dec
cwtl
lcall
pop
hlt
in
shlb
cwtl
pop
mov
pop
call
pop
fmull
lret
paddusw
mov
push
loope
push
push
out
faddl
std
mov
insb
test
out
adc
jg
pushl
aam
jo
pop
ret
dec
cmp
cli
mov
loope
lock
inc
inc
and
inc
xchg
lods
ds
xor
fisttps
scas
xorb
cmpsb
jmp
sahf
sub
in
pop
pop
call
sarb
mov
add
inc
add
jbe
dec
sub
xchg
xorb
lea
push
adc
les
das
push
xor
lods
sub
lods
scas
push
mov
mov
les
repz
cmc
sub
push
sbb
inc
cmp
mov
mov
and
outsb
mov
ret
fadd
push
mov
jp
pusha
push
jo
jo
add
jle
xor
cli
cmpsb
adc
ljmp
lcall
jl
repnz
xchg
inc
pusha
cld
sbb
jb
lcall
or
adc
cs
fsubrl
lret
xlat
push
push
in
clc
adc
lock
jp,pn
xor
jg
fwait
mov
add
jle
movsl
pop
mov
lock
call
aad
mov
dec
sarb
pushf
adc
insb
imul
ss
fistl
pop
cli
cmp
stc
xor
mov
xor
das
es
sti
push
outsb
jge
add
imul
leave
fs
push
andl
sub
out
xchg
nop
pusha
mov
repnz
ret
push
push
push
dec
outsl
fsubr
push
mov
das
xchg
dec
es
sub
std
push
into
mov
hlt
fcos
inc
bound
push
mov
xor
das
lods
jl
test
mov
push
iret
jb
repz
insl
push
lret
inc
cmc
faddl
fwait
dec
ljmp
xchg
pop
cld
in
insl
mov
jg
ret
popf
add
add
lcall
and
sbb
cmpsb
icebp
mov
lcall
jge
shrl
xchg
inc
sbb
lds
sbb
rolb
insb
pop
pop
mov
push
add
mov
pusha
inc
ja
leave
roll
or
mov
mov
fcom
sub
mov
mov
addr16
into
insl
pop
cmpsl
bound
jmp
enter
sub
call
pop
insb
xor
cmp
pop
and
cwtl
inc
adc
aam
xchg
loop
inc
dec
out
pop
xchg
jge
adc
ljmp
inc
jb
jae
or
push
lea
pushf
jmp
mov
xchg
push
inc
or
cmpsb
je
bound
adc
push
int
or
xchg
xchg
mov
mov
push
xchg
mov
cmp
and
fsubr
ja
cli
scas
lret
cmp
jg
sub
mov
das
clc
cmp
lods
mov
lea
frndint
push
pop
pop
pop
sbb
sbb
cld
sbb
popa
mov
lcall
je
dec
outsl
pop
mov
mov
ss
out
fstps
inc
js
jecxz
dec
lods
dec
xlat
clc
adc
hlt
jnp
movsl
mov
lcall
movsl
insl
push
out
add
movsl
out
pop
call
fsubs
push
in
fidivrl
jno
incl
mov
mov
and
pop
pop
sahf
push
jbe
es
and
in
push
loopne
cli
ljmp
jmp
pop
dec
pusha
mov
inc
and
mov
dec
jmp
rorb
dec
mov
cmp
pushl
jle
fadd
bound
cld
loop
fmul
pop
mull
push
cmc
fsubr
sbb
mov
jmp
xchg
out
cli
icebp
popf
std
cmp
jge
dec
cmpb
mov
popf
ret
scas
jg
xchg
popa
xlat
cltd
jne
adc
push
mov
imul
ds
inc
lcall
clc
lcall
test
pusha
fwait
in
fmull
mov
pop
cltd
push
push
popa
test
mov
stos
sub
sahf
scas
cmp
lcall
rol
aaa
in
jae
mov
jo
dec
and
cmp
mov
lods
pop
lods
add
add
jle
pop
mov
fimuls
add
scas
lcall
test
mov
xor
pusha
adc
mov
lcall
or
aam
out
pushf
int3
pop
aam
mov
sub
adc
lock
jg
and
fisttpl
sub
mov
inc
rclb
loope
dec
scas
das
rorl
std
pop
in
es
adc
pushl
pop
out
aam
cmp
jbe
xchg
or
in
cmp
das
ja
scas
aaa
movsl
scas
push
sbb
jne
js
mov
push
mov
and
pop
or
sbb
and
xchg
jns
hlt
mov
or
pop
fisubrs
outsl
mov
and
dec
shr
inc
ja
out
sub
hlt
inc
jo
pop
dec
aaa
sub
pop
lret
sbb
arpl
push
push
mov
aaa
cld
sbb
je
inc
inc
std
jbe
ds
push
aaa
or
jle,pn
sbb
ficompl
test
into
cmpsl
test
pusha
push
sub
mov
shlb
mov
loope
add
enter
js
pop
sub
pop
dec
add
das
sbb
mov
cwtl
pop
fs
jp
in
jecxz
jb
sub
jns
incb
sub
sbb
mov
adc
push
dec
cld
jmp
jmp
xor
scas
sub
cmp
mov
movsl
push
mov
orl
lret
int3
add
sbb
pop
addb
ss
ja
das
into
dec
sub
add
push
sub
test
loop
pushl
sbb
dec
jo
rorl
movsb
arpl
xor
jmp
pop
out
fistps
mov
imul
cmpsb
incl
push
push
js
cmc
add
mov
and
hlt
sbbl
ficoms
push
inc
xor
ret
cmp
mov
push
mov
dec
sub
rcrb
ja
fwait
rcr
data16
xor
aad
cli
test
push
push
xchg
scas
adc
and
adcl
fildl
or
ljmp
popa
icebp
pop
or
ljmp
inc
pop
mov
jmp
shrb
mov
mov
sbb
jns
inc
jo
cmpsb
jo
sub
cwtl
cwtl
jb
sbb
mov
xchg
push
or
inc
scas
inc
loop
in
adc
xor
mov
je
test
movsl
xchg
mov
adc
decl
popa
push
out
pop
or
imul
ljmp
adc
push
mov
inc
out
mov
mov
je
loopne
xor
jmp
and
inc
rorb
pushl
and
xchg
lahf
push
cmpsl
cmp
inc
or
mov
inc
xor
fistps
icebp
and
xchg
and
stos
in
repnz
xorb
cwtl
loop
sbb
mov
add
inc
sbb
jle
inc
lods
shr
and
xchg
outsl
push
loop
movsl
divb
adc
jnp
daa
sbb
push
lret
inc
sub
jbe
dec
dec
sub
cltd
sbb
add
std
xor
mov
dec
xchg
sub
xorl
sbb
mov
es
fdiv
icebp
push
lahf
call
cwtl
loop
inc
fcoms
and
int3
push
push
sbb
decl
mov
pop
xchg
mov
adc
push
jg
mov
sti
inc
outsb
sahf
das
cmp
push
outsl
repz
mov
and
adc
mov
cmpsb
add
mov
or
or
jno
imul
enter
or
or
xchg
outsb
adc
out
mov
pop
mov
addb
dec
and
dec
roll
fisttps
repz
jmp
mov
decl
cmp
lods
cmp
out
mov
data16
mov
ds
and
mov
rorb
dec
stos
push
lea
inc
ja
adc
xor
adc
jnp
or
shll
mov
cmpl
jg
sub
sbb
mov
lcall
xchg
pop
lahf
das
sub
int
int
mov
sub
test
pop
mov
fmuls
int3
dec
ljmp
loop
xor
rsm
lock
pop
scas
jmp
add
cmp
cmp
lds
cld
decl
inc
int
movsl
and
cmp
mov
or
mov
add
mov
xchg
jge
insb
pop
sub
add
pop
lock
fwait
sbb
sbb
add
movsb
ret
popa
jl
pop
inc
loope
pop
push
mov
mov
clc
jg
add
pop
jmp
xchg
mov
cmpsl
std
out
add
lds
cmp
test
adc
dec
pop
fucom
or
fidivrl
fisttps
sbb
inc
jp
mov
xchg
xchg
xor
xchg
neg
pop
hlt
push
ret
xchg
xchg
lds
ja
add
inc
insl
fldcw
pop
test
xchg
call
in
aaa
adc
test
push
mov
mov
lcall
dec
test
fs
std
daa
xor
mov
and
add
cmc
push
sbb
xor
js
add
fs
call
adc
and
adc
xchg
jno
jecxz
mov
jg
hlt
cmp
lock
xchg
mov
mov
test
xor
scas
aaa
repz
scas
aam
loop
push
fs
jl
lea
jge
pop
fisttpl
inc
ljmp
out
mov
jnp
mov
into
mov
or
arpl
les
aaa
sub
out
mov
push
outsb
cmc
das
xchg
and
daa
lret
add
fcom
cmc
xchg
int3
mov
jg
adc
pusha
lahf
clc
cwtl
js
dec
mov
mov
cmp
insl
int
pop
mov
rol
int3
ja
mov
cmp
pop
in
mov
rcrl
mov
in
in
imul
cli
decl
addr16
testb
or
pushl
in
pop
cmp
insl
and
outsl
ljmp
push
xor
sub
clc
pop
movsl
dec
push
mov
push
mov
sub
repnz
icebp
push
andb
pop
push
dec
mov
shrl
cld
mov
insb
cs
mov
ret
fsubs
dec
adc
lock
loope
jmp
pop
sbb
lcall
push
mov
nop
out
xchg
or
movsb
jbe
incl
cs
or
push
jge
add
out
fstpl
stos
movsb
dec
test
adc
jns
mov
insl
mov
fsubrl
orl
adc
mov
in
filds
add
scas
adc
mov
sar
pop
cmp
ljmp
cmpsb
outsl
cmpsb
adc
in
xlat
out
shl
adc
and
icebp
cmp
mov
xor
mov
mov
xchg
lret
dec
lea
lea
iret
stos
aas
and
stos
jns
inc
dec
or
pop
push
dec
clc
testb
scas
push
sbb
or
in
push
stos
mov
aaa
or
push
fdivrs
dec
pop
sti
pop
fchs
lret
lcall
push
cs
hlt
adc
inc
inc
and
mov
inc
testb
lahf
cmpb
cmpsl
cmp
rcll
mov
shrb
mov
xor
add
jbe
push
mov
outsl
push
mov
sub
dec
cmp
mov
outsl
incl
lret
fsubrl
mov
out
out
mov
sbb
movsl
cmp
cs
test
in
xor
outsb
rcrb
adc
mov
test
pop
add
jg
clc
loop
jecxz
adc
mov
jp
fisttps
incl
push
mov
out
daa
in
push
imul
fdivs
sbb
push
repnz
sbb
jle
sbb
mov
xor
pop
add
lret
notb
mov
aam
rcrl
pusha
sub
ljmp
lahf
mov
orl
int3
and
xchg
pop
add
outsb
clc
call
loopne
cmpsl
out
inc
mov
test
push
aad
jbe
fidivrs
mov
adc
sbb
pop
mov
fs
and
mov
icebp
daa
and
xor
lcall
mov
push
in
clc
es
loope
sbb
loop
imul
push
lock
mull
xor
lret
jl
rcr
lea
fucom
stos
popa
inc
jns
mov
adc
enter
jle
jp
call
jne
js
mov
test
xor
mov
lahf
loope
adc
mov
incb
mov
mov
loopne
xor
pop
add
lock
les
xchg
test
clc
mov
movsb
jo
push
clc
pop
xchg
fstp
lcall
mov
mov
or
test
jle
incl
sbbl
loop
sbb
rcrb
enter
mov
xchg
pop
lcall
hlt
lret
xor
scas
cmp
inc
imul
add
ret
decl
out
cmpsb
mov
push
popf
repz
cmpsb
decl
cmpsb
sub
push
outsl
ja
dec
sbb
loope
add
ror
add
loopne,pn
pusha
rol
lahf
push
lcall
scas
inc
pop
or
cltd
jae
out
inc
clc
fistl
gs
or
incl
pop
mov
or
pop
ljmp
fbstp
call
add
pop
dec
lock
or
xchg
icebp
mov
mov
mov
fcmovu
jns
inc
push
popa
adc
cmpsl
test
adc
out
sti
or
pusha
sbb
retw
cmp
sahf
mov
add
dec
cli
add
daa
xchg
jmp
bound
int
lahf
inc
add
push
inc
das
and
out
xchg
mov
pop
sbb
push
bound
decb
mov
std
clc
ret
mov
dec
pop
push
scas
sub
jbe
jno
adc
dec
es
rcrb
cmpsb
nop
add
mov
fcoml
mov
gs
call
jp
dec
cld
mov
mov
jnp
popa
fstpt
push
pushl
add
cwtl
pop
mov
sub
mov
dec
inc
cmp
imul
gs
scas
mov
in
push
cmp
es
shrb
std
cs
imul
cmp
aam
mov
nop
hlt
inc
mov
aas
insb
js
loop
std
pushf
or
test
mov
fisubl
jg
lock
adc
jl
and
std
adc
sub
jg
dec
scas
fldl2t
iret
into
int3
test
aaa
push
or
repz
ret
imul
stos
negl
xchg
sub
fisubrl
in
loopne
addr16
xchg
xchg
adc
jo
jmp
pop
insb
lods
jnp
aam
incl
pop
in
cmpsb
dec
xchg
sbb
xchg
dec
pusha
dec
dec
and
lds
rcll
int3
inc
scas
subl
leave
xlat
int
ja
dec
int3
add
mov
sbb
xlat
cmp
repnz
fists
dec
fildll
cli
xchg
dec
sub
ljmp
mov
cmp
fistpll
xchg
inc
jg
xchg
fcomps
cmp
pop
int3
mov
stos
push
sub
jl
lock
inc
pop
and
push
outsb
inc
add
adc
pop
push
and
pop
mov
mov
imul
or
incw
xor
sti
inc
in
data16
mov
orb
hlt
cmp
dec
fists
test
hlt
nop
lea
incb
cmp
adcb
push
jnp
mov
ja
push
mov
dec
lcall
nop
push
repz
xchg
jnp
movsl
fildl
xor
pusha
aad
sbb
xchg
dec
hlt
inc
xchg
sbb
or
xor
dec
push
scas
mov
ljmp
cwtl
push
sarb
lcall
xchg
sub
fmull
cmpsl
cmc
or
jp
ljmp
jo
mov
or
mov
incl
pop
add
stc
jl
cmp
lods
sbb
rorb
fistpl
adc
hlt
clc
and
es
lock
inc
shl
push
dec
jg
fisubrl
push
push
mov
insl
mov
lock
jg
pop
ds
xchg
int
mov
push
pop
push
or
jns
mov
mov
scas
test
xchg
test
int
loope
sahf
sub
cmc
jle
adc
mov
adc
mov
ja
mov
test
test
dec
add
mov
je
cmp
lock
fucomi
fistpll
outsl
cld
call
ds
fcompl
pop
cmc
test
jg
movsl
daa
jl
push
cmp
enter
clc
cmp
rcr
inc
movsb
shrb
and
pop
outsl
xchg
or
dec
decl
cmpsb
sbb
out
loope
lret
inc
jle
jg
mov
cli
enter
movsb
add
mul
mov
sbb
nop
cltd
push
out
xchg
adc
jno
lret
clc
fs
mov
je
dec
insl
mov
dec
pusha
cwtl
lcall
jle
mov
xchg
leave
aaa
xor
push
push
mov
mov
fildll
rorb
push
cld
sbb
xchg
inc
insb
dec
add
movsb
leave
xor
jg
cwtl
pushf
pop
dec
xchg
pop
dec
jns
movsl
add
dec
into
imul
mul
shr
mov
sbb
add
add
inc
pop
mov
add
decl
pop
jo
test
fdivs
or
inc
inc
sbb
xor
cmp
add
add
sti
xchg
in
push
rcll
jle
test
jb
add
movsl
mov
and
mov
cmpsb
outsl
jp
filds
inc
jb
pop
ja
inc
mov
add
ljmp
push
jle
cs
filds
inc
xor
incl
or
mov
test
adc
popa
stos
or
xchg
in
cltd
js
iret
xchg
jmp
and
or
pop
adc
mov
xor
jl
inc
sub
and
inc
rcrb
ss
sbb
jg
test
test
icebp
cltd
nop
mov
outsl
inc
out
iret
push
scas
test
std
pop
xchg
dec
push
addr16
pop
dec
cs
sar
push
xchg
icebp
ljmp
ds
repnz
inc
jbe
pop
cwtl
pop
jge
js
pusha
ret
enter
scas
shlb
fs
mov
jbe
lret
aam
nop
pop
enter
mov
and
push
cld
add
js
test
xor
xchg
loop
ljmp
dec
xchg
jno
mov
cmp
mov
sar
movsl
or
xlat
cmpsl
lahf
push
mov
je
outsb
fwait
pop
mov
popf
pushf
stos
cmp
sti
mov
outsb
in
dec
xor
inc
xor
and
dec
dec
mov
daa
loopne
outsb
adc
xchg
dec
sbb
in
sbb
mov
ss
sahf
les
orb
inc
cmpsb
loopne
add
mov
jae
ret
fbstp
mov
sbb
imul
inc
cld
jg
je
fnsave
dec
mov
cld
push
test
aam
add
decl
sbb
fsubl
mov
sub
xchg
cmpb
pop
fdecstp
cltd
dec
add
pop
adc
pop
test
sbb
js
mov
inc
jmp
inc
mov
pop
jno
mov
pushl
pop
divb
sarb
push
ds
jno
pop
nop
mov
test
pop
data16
jl
add
or
mov
cmp
push
pop
or
insb
xlat
jl
ret
pop
out
loopne
sub
dec
sub
aaa
loope
out
mov
jmp
xchg
cmpsl
jo
in
push
xchg
adc
mov
aaa
push
push
push
test
fidivrl
jmp
outsl
xor
inc
cli
outsl
add
jg
decl
icebp
xchg
inc
arpl
pop
lss
pop
lods
call
lods
scas
jo
lock
es
hlt
pop
addb
fldt
out
cli
scas
cli
pop
scas
fldt
es
push
scas
add
scas
jnp
imul
fisttps
cltd
sub
push
sbb
movl
mov
jb
and
push
aas
ss
es
and
xchg
hlt
ds
outsl
sbb
mov
ficoml
add
mov
adc
popf
incl
xchg
aad
outsb
int
cmp
pop
mov
adc
fdivl
xchg
inc
mov
cmp
cmp
xchg
push
mov
imul
jo
or
ljmp
sub
icebp
repnz
es
push
mov
out
mov
add
ja
pop
cmc
ljmp
push
xor
imulb
stos
mov
lods
xchg
adc
pop
ja
mov
fisttps
add
mov
cmp
ljmp
decb
arpl
popa
ja
cmp
cld
cmp
and
cwtl
xchg
jae
fldt
enter
scas
cmp
push
xchg
push
mov
cmpsl
ss
aad
or
pop
xlat
push
or
or
js
popa
dec
mov
cs
mov
dec
mov
decl
xchg
mov
decb
fdivrl
fisttpll
inc
and
adc
rcll
mov
mov
and
cmp
js
mov
andb
movsb
pop
cld
fistl
test
insl
loope
movsb
ja
call
inc
hlt
mov
pop
mov
mov
into
cmp
mov
xchg
scas
mov
addl
incl
push
or
pop
cmp
xchg
or
jg
je
cmp
data16
imul
popf
mov
dec
dec
out
dec
rcrb
dec
cs
scas
lods
or
xor
push
mov
movsb
push
inc
inc
cmp
shlb
push
mov
sbb
jle
jg
cmp
xchg
mov
xor
jecxz
push
mov
xor
add
push
sbb
and
in
enter
cmp
mov
mov
pop
lock
adc
bound
inc
pop
lock
ja
xchg
push
call
push
pusha
push
pusha
fcomps
popf
jge
xor
enter
out
stos
insl
ljmp
cs
sbb
push
push
or
cmp
jg
mov
movl
jge
sahf
je
aad
lea
sub
sub
push
int3
push
pop
cmp
sub
in
fsubp
sahf
sub
loop
mov
ds
adc
rorl
xchg
icebp
stc
mov
call
push
addb
sar
cld
pusha
push
mov
jge
addr16
iret
mov
mov
dec
loopne
inc
push
push
lock
ljmp
scas
fildll
in
cmpsb
sub
cmp
outsb
fisttpll
frstor
cmpsb
aaa
push
xchg
fs
incl
sub
rorb
dec
inc
adc
decl
jle
push
movsl
inc
into
lahf
xchg
dec
repnz
repnz
xchg
and
mov
push
int3
pop
shl
mov
scas
popf
add
inc
test
ljmp
fsubrs
or
jns
and
lock
jg
push
das
push
pop
mov
aas
fcompl
inc
call
adc
add
xchg
imul
les
fnstcw
mov
icebp
sbb
mov
mov
sar
jg
daa
lods
lods
enter
ja
cmpsb
mov
arpl
push
adc
sbb
push
lds
mov
in
sub
pop
pushl
clc
pop
shll
lret
xor
outsb
or
iret
call
mov
mov
xor
mov
scas
push
push
cmpb
mov
fidivl
push
fimuls
inc
xchg
add
fsts
sub
xchg
rcr
inc
sahf
ror
lea
mov
rcrb
push
pop
xchg
jle
call
iret
pusha
cmp
push
andl
push
xchg
into
pop
and
outsl
data16
aam
clc
dec
mov
cwtl
mov
add
sbb
dec
xor
test
dec
or
insb
jae
cmp
and
inc
cmpsb
pop
mov
jl
roll
adc
testb
pop
pop
int
cmpl
adc
cs
shl
insl
mov
push
divl
mov
or
ret
xchg
lods
rorl
pop
cli
mov
sub
xchg
adc
outsl
fcmovnu
xor
fmuls
jl
gs
push
stc
sbb
movl
dec
test
xchg
inc
mov
fistl
mov
cs
adc
decb
test
cs
outsl
call
jmp
cli
and
ss
adc
jmp
mov
stc
arpl
dec
push
mov
and
sub
iret
movsb
mov
pop
andl
sahf
loopne
jle
scas
inc
add
and
and
add
jo
pop
add
mov
dec
jae
bnd
push
jo
int3
xor
fdivrs
sbb
out
movsb
pop
inc
cs
aas
add
pop
cmc
adcb
cmpsl
cld
shll
xchg
push
xor
pop
movsb
aam
pop
jp
ja
ljmp
sub
jno
or
inc
sar
cmp
int3
shll
pop
mov
mov
add
and
xchg
call
test
mov
push
sub
cmp
pop
lods
in
or
cltd
sub
popa
rorb
lea
repz
outsl
add
dec
add
cmp
add
pop
icebp
lea
sbb
in
mov
clc
lret
mov
push
clc
popf
push
leave
add
int
xchg
lret
int3
push
gs
outsl
ret
mov
jmp
add
daa
repz
ljmp
push
jge
and
xchg
adc
cmp
movsb
addb
pop
sub
out
mov
jg
stc
fimull
fcoml
negl
fildll
push
rcr
js
jp
sub
pop
mov
inc
push
lret
xchg
lods
aaa
push
cmpsb
fwait
pop
or
fbstp
adc
cli
ss
adc
fdivrs
xor
push
test
rolb
sub
js
dec
lahf
aam
inc
mov
pusha
popf
lahf
gs
out
es
fsubs
stos
mov
inc
mov
jno
and
in
lods
push
mov
mov
int
pop
push
mov
sub
xor
into
repnz
jg
test
insb
in
xor
sbb
sbb
inc
push
loope
ja
sub
fbld
pop
rclb
jno
pop
clc
jmp
sub
stc
mov
dec
sarb
inc
lret
adcl
or
mov
and
push
les
mov
ret
mov
in
lods
lea
mov
out
jns
into
std
aaa
or
clc
hlt
pop
pop
mov
mov
mov
push
push
cmp
mov
decl
aaa
xchg
cmpsb
add
cmp
ljmp
cmc
xor
mov
into
mov
call
loop
xchg
mov
xor
test
addr16
leave
sbb
lcall
call
jle
jno
lret
mov
inc
int
xchg
call
xchg
inc
cli
jg,pn
dec
in
notb
sub
pop
sub
idivl
xor
mov
jmp
out
test
sbb
nop
dec
andb
shll
in
mov
sbb
fbstp
mov
adc
push
sbb
nop
jns,pn
mov
adcb
and
decl
flds
stc
hlt
push
arpl
push
xor
pop
aam
xor
imul
jne
jnp
ret
shr
test
repz
das
mov
in
inc
xchg
pop
adc
dec
inc
inc
xorb
add
nop
ror
loopne
jb
inc
and
or
sti
pop
ret
repnz
or
lock
call
sbb
push
add
filds
shrl
mov
and
out
dec
xor
in
test
inc
stos
mov
pop
push
out
subb
add
roll
adc
xchg
and
js
mov
lret
fldl
ret
adc
jmp
shll
idiv
mov
ja
adcb
jecxz
sub
hlt
daa
data16
inc
mov
loop
jmp
pop
ret
fisubs
movl
xlat
inc
push
jg
fiaddl
sbb
push
fwait
repz
rorb
cli
lret
jbe
lods
int3
js
jae
xchg
push
or
push
adc
push
jo
and
xlat
cld
out
pop
xchg
ss
call
lea
xchg
lods
popf
js
adc
push
xlat
sub
xchg
lods
jmp
mov
jl
xorl
inc
push
hlt
cmp
test
add
mov
jmp
mov
adc
idiv
hlt
dec
cmc
inc
lret
mov
push
sub
call
inc
cmc
ds
icebp
in
adc
sub
mov
out
data16
inc
mov
mov
leave
mov
outsl
and
mov
je
cmp
dec
loope
or
inc
mov
fstpl
movsl
sbb
ret
sub
popa
decl
clc
testl
and
imul
in
in
ret
mulw
cmp
enter
mov
mov
outsb
mov
push
cld
push
push
imul
rclb
add
loopne
mov
aad
xchg
cli
fistpll
imul
movsl
and
sbb
push
dec
in
add
mov
aam
das
dec
rcrb
incl
sub
or
and
add
cmp
ds
or
pop
push
fsubrs
es
or
aam
pop
pop
data16
mov
insl
cld
decl
mov
scas
mov
stos
inc
pop
pushl
mov
pop
aas
sub
xchg
outsb
scas
icebp
stos
fs
rolb
dec
lods
shrb
mov
rorb
fs
push
insl
push
fwait
lcall
push
mov
jns
cmp
mov
cmpsl
add
in
adc
iret
gs
stos
test
lcall
ja
aam
out
jge
dec
xchg
incl
ja
adc
xor
fisttps
pop
pusha
shll
cmp
das
pop
mov
cmpb
cmp
sahf
add
aas
shlb
decl
mov
mov
xchg
push
sub
clc
call
jb
cld
xor
ljmp
ds
dec
mov
outsb
shlb
mov
leave
ljmp
insl
mov
sahf
and
add
out
push
jecxz
icebp
sbb
decl
aas
or
mov
aas
jae
test
mov
insl
sbb
or
jnp
mov
jae
dec
fmull
pop
cmp
scas
pushf
mov
sti
jns
hlt
cmp
lret
add
jno
adc
xchg
pop
icebp
popf
fbstp
dec
mov
test
push
clc
fcmovbe
inc
loopne
loop
dec
push
cli
int3
loop
xor
fcmovu
cmc
filds
and
stos
cli
in
push
int3
xchg
cmp
push
rclb
je
or
lcall
cli
push
jne
mov
cmp
sub
ret
sar
push
add
cmpsl
into
pop
insl
dec
stos
xchg
jo
add
fistpl
stc
jp
inc
push
jmp
push
enter
insl
cwtl
fcmovnbe
fcompl
sbb
jg
mov
sarb
mov
je
xchg
add
bound
inc
xchg
decb
inc
add
add
test
int3
or
fidivrl
fisttps
iret
mov
lcall
clc
mov
sub
sub
cld
sub
mov
xchg
mov
loope
add
lcall
ss
and
das
sbb
inc
or
cmpsb
push
aam
pop
push
dec
mov
sub
push
sbb
mov
mov
mov
ret
jg
xchg
hlt
jmp
loop
sub
xlat
lret
int
mov
jg,pt
mov
pop
mov
enter
sahf
pusha
test
inc
xchg
mov
adc
flds
int
ds
add
inc
mov
xor
mov
call
mov
mov
movsb
lea
add
inc
mov
mov
and
fcomps
push
out
in
scas
xor
out
jb
sbb
sarl
sbb
in
lea
mov
xchg
test
das
clc
das
sbb
push
ss
adc
add
repnz
aaa
fbstp
sub
xlat
hlt
ljmp
cmp
mov
jb
ficoml
jg
cmpl
movsl
aam
sarb
ror
mov
mov
cld
adcb
dec
ljmp
fwait
mov
loopne
and
dec
or
push
aaa
out
and
fists
sub
adcl
aas
dec
and
notb
push
pop
and
mov
xor
scas
fisubs
call
stos
push
push
adc
cs
push
xor
jns
sub
push
fcom
cmp
dec
xchg
inc
test
ss
dec
jmp
inc
push
test
or
jo
lahf
sbb
jbe
outsl
lcall
push
cmp
call
jno
sbb
cltd
inc
xchg
fsubs
scas
subb
sub
dec
mov
sub
add
and
mov
inc
sbb
lock
add
jbe
mov
xchg
scas
imul
gs
add
stos
shll
push
sub
and
stos
imul
inc
xor
clc
lret
in
repz
mov
ret
jg
push
push
or
adc
cwtl
mov
dec
or
push
stc
mov
mov
fisubrl
js
loop
push
je
test
movsb
clc
or
jb
nop
fcomip
mov
test
subb
aam
std
popa
push
adc
ret
outsl
cli
aaa
out
js
in
mov
andb
sub
je
and
inc
cmc
lret
mov
adc
sub
mov
mov
aas
es
xor
icebp
lret
fisttps
orl
int3
pushf
jne
sbb
out
xchg
fldl
ret
call
ljmp
cmp
pop
pop
xor
cld
mov
dec
out
push
sub
inc
fildll
xor
jae
cmp
jp
insb
adc
shrb
mov
es
fisubs
mov
xor
mov
in
jb
sub
cld
bound
fwait
rolb
dec
cmp
and
pop
cmp
sub
add
mov
cld
sbb
and
mov
mov
mov
cmp
push
pop
in
adc
gs
loopne
sarb
mov
lock
fcomp
out
icebp
ds
std
pop
mov
movsb
data16
sub
aas
push
in
jl
cmp
out
hlt
aas
mov
cli
in
fildll
loope
mov
sbb
jg
xchg
icebp
andl
cs
xchg
cmp
inc
push
sahf
fildll
cmp
sub
fidivl
pop
pop
cld
stos
js
loope
sbb
inc
mov
call
mov
inc
or
inc
cltd
sbb
call
push
rcrl
ds
popa
or
jo
mov
dec
sbb
mov
push
jge
sub
aad
xor
andl
dec
fiaddl
fwait
jle
fdiv
cld
notl
push
cmova
sbb
call
imul
nop
push
into
call
push
pop
outsl
push
scas
cmp
jmp
mov
pop
sub
cmpsl
insb
mov
mulb
les
test
mov
fadd
decl
or
or
mov
inc
cmp
pushf
jp
jnp
or
fisttps
repnz
scas
scas
sbbl
xor
int
mov
movsb
push
stc
ja
fcomip
test
lock
scas
lds
jae
mov
out
cmp
les
inc
stos
loopne
adc
shll
mov
mov
stos
addr16
inc
xor
cmp
push
add
mov
lret
leave
adc
push
adc
inc
xorl
xor
fildll
mov
adc
sbb
das
xchg
dec
jmp
pop
clc
jge
and
fadd
dec
add
mov
sub
outsb
roll
xchg
cld
add
hlt
in
decl
cmpsl
sub
sub
incl
jge
popf
lea
dec
push
test
xchg
test
subb
lea
mov
mov
cs
push
jnp
fmull
sub
out
fildll
push
sub
ljmp
mov
out
outsl
xor
lock
popf
dec
pushl
fcomip
rcrl
and
mov
dec
mov
mov
sbb
sbb
cmpl
ret
es
cmp
mov
mull
push
int
jg
or
orl
lock
ret
aam
lret
cmpsb
pushf
mov
and
dec
stos
pop
sar
outsl
add
insb
mov
ret
xchg
fwait
mov
xchg
shlb
mov
sahf
cltd
xchg
lcall
popf
aad
enter
pop
es
rcrl
cwtl
inc
cmp
mov
shl
xor
out
jae
movsb
sbb
shll
roll
out
int
cld
and
xchg
ss
cli
scas
cli
xlat
mov
setl
add
and
call
dec
ret
pop
adc
adc
xchg
or
insl
inc
pusha
subb
cmp
imul
sub
xchg
cmp
decl
sahf
shl
call
jmp
mov
nop
mov
inc
test
inc
ret
rcr
scas
sub
inc
inc
sub
orb
in
mov
jp
mov
and
fildll
add
pop
push
mov
and
mov
addr16
leave
dec
sub
dec
fwait
out
rol
clc
mov
js
xchg
nop
aam
sbb
arpl
clc
data16
hlt
ljmp
outsb
pop
push
pop
sub
pop
sbbb
push
mov
ja
push
pushl
std
add
je
repnz
in
inc
js
inc
inc
fs
mov
xor
incl
sbb
shr
jg
fs
cld
ljmp
scas
shrl
out
out
enter
insl
xor
out
cwtl
sbb
inc
mov
pushl
mov
add
push
sub
push
out
jmp
push
and
sbb
and
adc
push
int
cmp
jbe
pop
mov
jo
cli
gs
pop
loop
inc
ret
cli
std
js
out
add
shll
mov
xchg
adc
mov
mov
cli
arpl
test
adc
cmpsb
jns
stos
lret
jle
frstor
aas
call
lahf
adcb
jge
int
jne
xchg
and
dec
sbb
lret
xor
inc
jge
lret
sbb
ficoml
xlat
outsl
mov
pop
mov
mov
sar
in
jnp
sbb
adc
xlat
xchg
or
lret
cltd
loop
push
pop
cmpb
cld
inc
mov
test
in
sbb
loope
mov
push
inc
mov
inc
push
movsb
push
push
out
cli
jns
leave
sbb
pop
jp
mov
out
mov
inc
sbb
hlt
mov
aad
lcall
addr16
push
div
jns
wrmsr
xor
mov
pop
xor
mov
pop
fildl
addb
mov
xor
lcall
in
jbe
les
dec
xchg
mov
mov
push
ret
into
outsl
daa
cltd
or
js
outsl
jmp
scas
xor
adc
inc
pop
add
mov
hlt
outsl
ljmp
cmp
push
test
lret
cmp
xor
jg
movsl
cs
shl
mov
and
nop
jae
cmpsl
outsb
hlt
push
xchg
js
fdivrl
roll
roll
lret
cli
cli
and
pop
movsl
into
test
ja
pop
mov
xor
lods
je
sbb
inc
and
pushf
adc
in
std
data16
jmp
inc
ret
jecxz
add
stos
xchg
cld
jmp
cmp
idivl
sbb
outsl
in
es
pop
or
sub
inc
imul
mov
mov
enter
mov
jb
in
xchg
call
pop
mov
mov
ret
cli
std
std
or
cmp
call
lods
pushf
mov
and
test
rcl
fcoml
inc
hlt
ljmp
ds
loop
aas
xchg
popf
inc
sbb
daa
sub
jl
in
push
pop
lds
je
add
sub
or
bound
add
cmp
add
sahf
leave
std
push
daa
shrb
inc
inc
dec
mov
push
adc
in
fidivrl
add
ds
aaa
inc
inc
aam
cld
jecxz
add
dec
rolb
faddl
pusha
jmp
sarb
cmc
jg
dec
jbe
popa
push
out
mov
lds
in
dec
loopne
mov
push
inc
adc
fcoml
addb
cmp
or
cmp
test
jnp
mov
mov
push
testl
fnstenv
loop
dec
mov
jg
bound
cmc
xorb
push
cli
aam
fildl
mov
or
mov
inc
xchg
cmpsb
lea
or
arpl
fs
mov
ljmp
nop
dec
iret
fdivrl
adc
push
imul
ja
clc
push
pop
sbb
in
pop
jg
adc
xchg
sar
or
add
and
call
out
testb
addr16
mov
leave
int
mov
cmp
mov
out
or
or
aaa
cli
cmpb
imull
enter
cld
ss
push
dec
lahf
mov
shll
das
add
stc
std
pop
dec
fsub
push
lret
mov
in
adc
mov
or
mov
outsl
dec
andb
mov
or
mov
push
cld
adc
fwait
ret
fsub
xchg
lea
pop
je
jb
adc
pop
std
incl
xchg
fistpl
sahf
cmp
lcall
push
scas
jno
fmuls
jmp
pop
jns
xchg
xchg
adc
call
fldl
jmp
pop
test
xor
je
lock
movsb
mov
data16
nop
in
sahf
nop
sbb
scas
sub
or
add
sbb
scas
mov
and
cmp
pushl
inc
ss
cmpl
ret
mov
fwait
add
mov
mov
ret
ljmp
lret
push
js
in
push
sbb
mov
mov
inc
daa
sbb
ljmp
mov
xchg
cmc
pop
or
cmp
add
add
inc
in
out
out
inc
lcall
popf
xchg
push
emms
dec
scas
and
decl
imul
sub
pop
pop
xchg
imul
push
mov
add
dec
dec
push
movsl
mov
and
ljmp
mov
inc
sub
dec
mov
decl
and
pusha
inc
mov
sub
lods
mov
mov
cli
mov
outsl
int3
mov
pop
push
int
push
mov
cmpsb
and
jae
std
cli
jmp
sarl
xlat
pop
push
iret
repnz
test
mov
and
xchg
push
movsb
inc
lcall
out
fistl
and
push
cltd
icebp
ss
jge
xchg
jecxz
aam
iret
xor
mov
decl
mov
jge
xor
cli
popf
fs
subl
ljmp
pop
or
mov
rorl
sbb
or
clc
dec
adc
mov
mov
jmp
mov
sub
outsb
loopne
push
dec
mov
mov
loope
adc
mov
adc
dec
xor
je
std
pop
hlt
ja
mov
mov
rolb
shlb
rcrb
cmp
jnp
mov
mov
inc
xor
mov
xchg
cli
adc
xchg
das
fbld
sub
and
fdivr
xchg
sbb
shll
and
cld
ljmp
add
jmp
ja
cld
mov
fisttps
dec
mov
mov
xchg
push
mov
xchg
pop
xchg
push
and
mov
out
jle
push
stos
insl
pusha
sar
int3
scas
jp
fcompl
movsl
std
and
jno
clc
lcall
adc
les
mov
sbb
jno
shl
in
sub
loop
xor
incl
enter
ret
inc
shrl
push
dec
sar
stos
or
mov
nop
and
mull
cld
insb
and
dec
xchg
xchg
ljmp
clc
jmp
test
mov
mov
mov
ds
push
mov
push
inc
jo
or
das
inc
sahf
sbb
mov
es
mov
dec
into
mov
faddl
ret
sbb
in
sbb
lcall
gs
aas
popf
jno
sub
sbb
mov
mov
and
xchg
inc
jo
mov
or
mov
add
sub
mov
mov
ret
mov
incl
adc
add
add
fcomps
nop
lret
sub
dec
xchg
push
mul
adc
out
mov
adc
je
ja
test
mov
mov
jb
sub
mov
cmp
sbb
adc
lods
sar
loope
cmpsl
sub
sbb
xlat
ror
xchg
movsl
mov
xchg
lret
mov
add
push
loope
push
test
outsb
ljmp
xchg
in
addr16
mov
push
pop
push
ja
and
and
dec
mov
popf
sbb
jp
movsb
ljmp
cmp
pushf
sbb
or
insl
xlat
scas
call
jp
je
or
adc
lds
les
cltd
ret
pop
cmp
pop
adc
adc
shl
xor
idiv
push
test
aad
lret
push
jns,pn
dec
cmpb
dec
fimuls
mov
mov
jge
lock
mov
adc
aas
div
scas
sub
mov
ljmp
cmp
rorb
jp
push
je
ret
add
arpl
incl
rorb
sub
jle
mov
and
aaa
cmp
cmp
lahf
in
mov
lret
out
xchg
mov
jbe
xor
in
adc
jg
hlt
popf
mov
test
clc
add
in
test
lahf
out
enter
mov
pop
dec
jp
insl
std
ja
js
pop
lds
hlt
cmp
push
sub
pushl
jns
mov
and
stc
aad
xchg
dec
imul
fcoml
scas
in
xchg
mov
pop
inc
pop
out
mov
fwait
push
fdivs
jmp
dec
and
enter
adc
sub
testb
repz
scas
jecxz
xchg
sti
fisubs
jns
add
cltd
not
fs
pop
mov
cmpsl
cmpsb
xchg
jbe
or
jle
sti
or
daa
movsb
mov
pop
out
icebp
adc
push
and
sub
jg
fisttpll
mov
mov
scas
dec
inc
sbb
add
inc
pop
lret
push
lret
add
rol
mov
ljmp
js
mov
adc
inc
pushf
enter
cld
or
xchg
fildll
out
mov
js
decl
xor
fsts
jmp
lcall
leave
or
nop
test
scas
sub
and
mov
cwtl
fmuls
pop
jne
into
push
mov
mov
inc
iret
mov
ret
mov
fstpl
jp
nop
or
cmp
cmp
mov
jns
dec
and
cltd
cmp
xchg
stos
fcmovnbe
call
lret
xor
repnz
repnz
test
loope
out
mov
lds
jae
and
pop
es
clc
js
js
dec
cld
fsubs
adc
jb
jl
pop
mov
sub
and
jl
pop
testl
xchg
pusha
lods
lock
fucomi
mov
popf
xchg
push
cmc
add
dec
adc
jecxz
incl
cmp
outsb
dec
enter
inc
jmp
dec
xchg
int3
das
mov
mov
dec
dec
inc
mov
lret
shl
adc
xchg
jb
inc
mov
jp
fidivs
jns
push
mov
or
ja
cmp
mov
out
mov
cmovp
rep
sbb
fldenv
je
pop
add
pop
lcall
and
pop
jo
mov
adc
ljmp
dec
push
jo
mov
jmp
add
icebp
orb
nop
setl
clc
daa
imul
adc
jns
popa
fadds
inc
inc
mov
mov
mov
jg
outsl
divl
ja
in
xor
push
inc
in
addb
jbe
push
icebp
lret
fucomi
pop
imulb
pop
adc
mov
xchg
cwtl
mov
cmpsb
dec
dec
xor
shll
inc
add
rcrb
cld
inc
lret
mov
arpl
cmpsl
jb
ljmp
push
sarl
jl
mov
pushl
adcl
mov
xchg
pop
push
aaa
dec
inc
inc
test
xchg
adc
mov
test
xchg
sahf
je
mov
mov
dec
mov
aam
add
push
orb
clc
add
orl
dec
mov
cmp
jle
jg
stos
jle
xor
jns
ret
outsl
imul
lock
xchg
push
fiaddl
cmp
adcl
push
pop
or
dec
dec
outsb
sbb
cld
ja
cmp
mov
adc
pop
rol
stc
sti
je
pop
cmp
fbstp
xchg
movsl
xchg
cld
and
stc
sbb
push
push
mov
repnz
lcall
sub
int3
push
inc
inc
pop
test
pop
cld
sar
outsb
push
lcall
pop
inc
arpl
cs
cmp
cmc
inc
test
sbb
out
inc
dec
lock
fwait
aaa
and
lret
add
out
mov
js
mov
fisubs
xor
pop
add
fisubl
pop
pop
incl
sub
and
mov
dec
xchg
add
pop
adc
pushl
call
xlat
push
pop
sbb
add
jmp
lret
mov
mov
call
sbbl
mov
mov
outsb
int3
jno
repnz
add
fcomip
shll
pop
int3
push
inc
push
xor
pop
int3
add
ret
dec
sbb
add
notl
push
xchg
lret
iret
mov
es
pop
out
shll
pop
xlat
sbb
lahf
push
mov
jle
inc
pop
rcl
xchg
fdivl
outsb
inc
mov
int3
xor
xchg
mov
popa
adc
sub
and
push
out
mov
stos
ljmp
stos
sub
aaa
int
mov
roll
sbb
cld
and
mulps
cmpb
mov
mov
cld
cmpsl
nop
jg
adc
pop
xor
outsb
jns
mov
nop
in
mov
fucomp
xchg
cmp
fdivs
pop
push
std
lcall
enter
aam
add
xchg
aaa
mov
and
inc
xor
sbb
xor
pop
mov
dec
in
dec
not
rorl
fcomp
out
dec
repnz
daa
adc
sub
fisubrs
or
fistpll
dec
outsl
pop
cld
mov
je
xorb
jmp
mov
idiv
add
pop
inc
ljmp
enter
mov
outsb
lock
jl
pop
rolb
mov
hlt
sbb
push
fldl2t
sbbl
loop
sub
aad
jecxz
sbb
insl
ja
jg
ret
fiadds
sbb
xchg
jnp
jl
add
and
push
push
and
shlb
cmp
and
adc
xchg
xor
mov
inc
sbb
lods
popa
sub
sbb
sub
test
push
jbe
icebp
cmp
cmp
scas
jnp
push
jno
sub
inc
out
and
sbb
adc
pop
popa
jns
push
mov
dec
sahf
and
das
dec
jge
out
push
jle
jp
mov
bound
push
push
sub
test
popa
mov
mov
jb
cltd
cltd
push
mov
call
into
sbb
aas
popa
push
sub
sub
and
cmpsb
and
not
fisubrs
pop
or
hlt
shlb
cmp
gs
sbb
xor
push
pop
xor
rolb
mov
cmp
or
fsubrp
pop
bound
ljmp
lahf
add
lcall
fimull
pop
adc
pop
mov
test
jb
xchg
adc
je
mov
imul
call
push
int
jo
sub
add
xchg
mov
shll
sub
hlt
inc
ljmp
divl
repnz
or
or
cmpb
inc
mov
iret
dec
stos
es
stc
in
and
xchg
or
js
movsb
sub
add
mov
mov
pop
push
lret
hlt
push
orb
jle
enter
push
repnz
lcall
out
rolb
sbbl
xchg
rcr
jbe
enter
jae
and
shrl
fcomip
ljmp
lods
jge
andl
je
fiaddl
fs
pop
stos
jmp
popf
jne
pop
and
adc
lods
xchg
stc
dec
int3
xlat
jmp
fwait
insb
js
mov
std
sub
and
scas
sbb
sbb
add
sbb
sahf
mov
jg
add
jg
lds
out
hlt
outsl
dec
mov
mov
int
adc
lcall
push
cld
sbb
and
inc
mov
mov
lods
push
decl
pop
cmp
popf
inc
insb
aad
or
rolb
pop
mov
jmp
dec
ljmp
cmp
inc
popf
mov
clc
or
dec
sub
xor
insb
pop
movsb
test
mov
lcall
cmp
sbb
cwtl
lods
jg
mov
and
pusha
push
push
cmp
inc
add
sub
pop
loope
mov
test
xchg
dec
int3
mov
repnz
sub
lds
lcall
or
jo
xchg
cli
loop
lods
pop
jnp
stos
mov
and
dec
adc
push
jae
cmpsb
ljmp
or
call
push
cmp
ror
fs
add
mov
clc
lahf
sub
icebp
adc
sub
filds
lock
or
push
mov
sub
dec
in
mov
or
push
inc
aad
sbb
iret
or
fidivl
scas
pop
pop
insb
loopne
mov
lcall
sub
push
adcb
xchg
test
mov
cmp
pop
add
ds
adcb
mov
ret
jne
jl
sbb
push
sub
outsl
sub
add
pop
inc
popa
add
xor
sub
pop
or
popf
xor
mov
pop
and
push
sbb
jne
into
cmpsb
aam
test
ret
mov
cld
in
ljmp
pop
adcb
andl
pop
pusha
mov
dec
lret
cmc
das
xchg
xchg
mov
xchg
and
subb
or
mov
fwait
pushf
inc
sbb
in
ljmp
cltd
sub
xchg
sub
rolb
test
jo
pop
cmc
jg
xchg
call
scas
jp
lods
mov
pop
inc
mov
sbb
cmpb
and
dec
mov
fadds
xor
and
add
pop
jge
in
insb
mov
pop
mov
push
push
fs
test
js
add
loop
sbb
movsb
pop
rcr
mov
mov
pop
data16
mov
jns
jg
inc
add
fbld
fdivs
mov
std
xchg
mov
out
rcr
inc
pop
and
xorb
xchg
or
jmp
pop
push
aad
sub
sbb
jb
pop
mov
cld
shrl
pushf
push
inc
sti
out
mov
add
adc
cmp
and
lods
std
rcll
inc
or
ljmp
ret
jle
push
sbb
mov
mov
xor
inc
mov
das
xchg
fdivl
xor
fmul
pop
sarl
aad
ss
or
push
push
stos
shlb
out
insl
loope
lds
fldt
mov
rol
add
lcall
mov
mov
lret
cmp
out
add
dec
mov
mov
inc
sbb
mov
push
sbb
cwtl
cmp
xor
mov
inc
mov
jno
pop
pop
sub
aaa
mov
ret
es
incl
jle
sub
push
js
add
jmp
test
in
aam
lcall
loopne
cmpsl
mov
cmpsb
push
aam
lcall
mov
stos
mov
pushf
js
jg
cmc
in
mov
ss
sbb
push
sahf
mov
adc
pop
outsl
pop
jl
xchg
jp
dec
sbb
bt
push
pusha
cmp
xor
dec
add
jge
mov
lock
es
mov
pop
not
jnp
pop
in
cli
outsl
test
and
lret
call
outsb
aam
fldl
jmp
or
jns
icebp
clc
in
decl
pop
repz
aas
cmpsl
sahf
xor
dec
or
sub
ja
out
ret
mov
add
jbe
sbb
mov
je
fisubrl
mov
dec
int
icebp
loop
rcrb
fimuls
inc
or
push
mov
stos
mov
cmp
cmp
mov
addr16
out
or
mov
mov
and
out
addr16
pop
mov
lcall
and
push
push
in
cmp
push
mov
cmp
xchg
es
or
into
jae
mov
and
dec
push
aam
adc
andb
testb
mov
decb
int3
or
sbbl
das
cli
pop
stos
adc
jae
stc
xor
dec
sub
decl
push
mov
sbb
xchg
gs
xor
scas
cpuid
call
cld
and
clc
out
ja
shll
test
mov
mov
jno
cmp
test
lahf
stos
xchg
push
mov
std
pop
mov
adc
repnz
imul
clc
pushl
ret
jl
add
lahf
sub
movsb
mov
loope
shrb
jbe
sub
in
inc
jmp
ds
std
xchg
xchg
xor
call
and
repnz
dec
leave
xchg
adc
pop
mov
imull
stos
inc
ret
jge
out
insb
scas
cmp
fldl
int3
push
adc
out
lret
sbb
xor
fisubl
dec
jg
jp
sub
sbb
mov
pop
push
in
fists
dec
add
clc
gs
loop
popa
dec
mov
sar
xchg
xlat
imul
fbld
je
mov
repnz
push
xchg
mov
adc
adc
mov
adc
inc
inc
mov
fcomip
mov
cltd
mov
in
scas
imul
dec
xor
mov
mov
sub
movb
sub
std
or
rolb
push
popf
jb
mov
mov
sar
call
push
lock
test
pop
or
pop
mov
mov
cld
pop
mov
scas
fisubrl
adc
dec
js
roll
cmp
cmp
idiv
fcomip
scas
movsb
mov
mov
adc
enter
fstpl
test
ret
push
pop
inc
ror
hlt
push
call
pop
cmp
or
cmp
jae
jo
scas
and
repz
add
adc
scas
jle
sub
adc
mov
lcall
inc
mov
jne
test
call
adc
add
jmp
sub
call
insb
xor
sbb
cmp
repnz
aam
mov
mov
lods
movsl
and
leave
mov
mov
add
push
adc
mov
xor
mov
ljmp
sbb
jnp
inc
and
xchg
push
jne
jl
inc
jmp
cld
data16
jne
sahf
mov
sbb
push
add
scas
mov
ss
iret
or
out
adc
mov
mov
add
mov
inc
push
jae
mov
bound
shll
push
mov
xor
mov
push
inc
xchg
xchg
mov
ljmp
mov
sub
iret
xchg
push
jne
sbb
mov
push
cld
mov
sar
outsl
enter
mov
call
clc
or
loopne
mov
ret
ss
xchg
pop
test
fs
xor
mov
outsb
movsb
xchg
mov
or
es
or
inc
xlat
fstp
xchg
jnp
cmp
cmpsb
xchg
decb
pop
mov
lock
loop
fs
jp
sub
jmp
fadds
cltd
lahf
mov
mov
xor
in
jg
nop
pop
sub
pusha
imul
push
mov
ja
or
test
pop
aad
sbb
scas
pop
dec
cld
incl
or
int3
stos
in
and
push
jmp
jg
pusha
mov
enter
out
loope
pop
cli
inc
sbb
enter
stos
test
add
inc
dec
int
mov
in
in
and
mov
aaa
std
push
add
fisubs
inc
add
iret
pmuludq
jno
into
loopne
and
int
repz
lods
ljmp
scas
push
outsb
inc
xchg
or
push
add
jb
ljmp
and
xchg
fmuls
sub
mov
das
stc
push
stc
mov
rclb
push
cmpsl
or
xlat
out
scas
or
call
push
stos
sbbb
push
fiadds
cs
pop
cld
mov
adc
decl
sub
add
loope
mov
popf
sahf
pop
add
jno
sbb
jne
scas
dec
cmpsl
out
adc
adc
loopne
popa
cli
mov
aaa
ret
fidivs
xor
xchg
iret
and
fidivl
mov
sarl
pop
int
cmc
jmp
in
mov
xchg
lret
cs
jne
xor
out
cld
jg
mov
loop
xor
pop
enter
mov
or
dec
pop
or
imul
mov
fistpll
inc
pop
mov
jbe
outsl
sbb
clc
ss
out
jg
stc
mov
jge
stos
sbb
movsl
push
pop
xlat
dec
scas
jo
cmp
sbb
shlb
stos
cmp
inc
or
ljmp
lock
jno
jl
push
stc
lods
push
and
bound
jp
sbb
mov
fs
sbb
cltd
in
add
aam
adc
pusha
decl
je
or
inc
data16
pop
jne
push
sbb
fsubrp
sub
xorb
and
mov
fimuls
mov
xor
in
and
jae
lahf
pop
push
pop
orb
and
jecxz
clc
push
mov
mov
mov
mov
push
push
add
pop
std
add
lret
inc
repz
mov
hlt
leave
das
add
mov
cmpsl
das
outsb
mov
outsb
jge
fs
mov
ret
stos
es
pop
sbb
das
and
jne
cmp
aas
mov
mov
push
clc
aas
into
mov
cwtl
movsb
les
vmovlps
mov
fdivl
adc
stos
rcl
or
test
push
sarb
popf
aaa
clc
aam
cmp
sahf
mov
push
repnz
jge
sub
movsb
fs
xchg
sbb
ficomps
in
fst
out
loopne
clc
fisttpl
lock
loopne
pop
mov
scas
mov
mov
ds
jecxz
mov
test
lds
fdivrs
sub
dec
icebp
js
ds
mov
mov
xor
jle
adc
fiaddl
sbb
fcomps
push
repnz
in
loopne
inc
xor
xchg
and
sub
jo
sahf
out
push
push
clc
mov
les
xchg
mov
les
popf
mov
call
pop
imul
add
clc
cld
faddp
out
xchg
lcall
or
cmp
scas
outsb
scas
movsb
lods
int
push
dec
fcoms
or
push
pusha
mov
fwait
and
ljmp
jp
ja
ror
repz
jp
mov
in
adc
mov
scas
call
mov
mov
sub
and
pop
dec
sbb
dec
mov
aam
inc
cld
jl
jp
dec
test
mov
jge
sub
xchg
pop
sbb
inc
ret
sbbl
sbb
cmp
popf
ret
test
cmp
dec
mov
scas
push
jle
jmp
jmp
adc
add
cwtl
xlat
iret
shll
jb
mov
outsl
scas
lahf
pop
in
xchg
rorb
mov
fwait
mov
jle
push
add
xor
dec
cltd
push
jg
in
in
ljmp
dec
jo
cli
push
dec
scas
mov
cmp
mov
push
lock
imul
xor
push
dec
adc
decl
adc
xor
nop
push
mov
fidivl
test
incl
jmp
and
xor
xor
pop
adcb
in
and
cmp
insl
ret
cmp
jmp
mov
push
jbe
popf
pop
imul
hlt
ss
repnz
jle
inc
lret
inc
xchg
dec
jecxz
shrl
pushl
inc
into
lods
add
unpcklps
popa
cmp
fildll
and
das
repnz
inc
push
dec
sti
aaa
or
xchg
push
jne
imul
in
add
movsb
xor
pusha
lods
aam
xlat
ja
sub
dec
pop
or
push
test
inc
xchg
jg
mov
scas
rcll
dec
decl
das
push
xchg
push
jbe
mov
add
loopne
jno
push
inc
add
fisubrl
stos
ljmp
or
movsl
sub
int3
sahf
mov
xchg
dec
clc
xor
sbb
cmp
pusha
pushf
push
or
dec
nop
es
ror
pop
add
jb
lahf
jmp
and
mov
into
mov
sti
jp
pop
xchg
outsb
jmp
jle
aad
jmp
mov
outsb
lock
xchg
inc
xchg
and
mov
mov
jp
push
jp
cmp
out
in
das
scas
dec
sar
mov
clc
pop
push
adc
jbe
popa
lret
pop
cld
out
test
loope
arpl
mov
iret
mov
test
out
outsl
test
mov
in
inc
lcall
jne
data16
pop
mov
and
scas
push
int
ljmp
mov
lret
mov
xor
call
mov
icebp
xchg
ds
cmpsb
adc
dec
fmuls
mov
mov
ficoms
mov
push
sub
out
lock
pop
xor
clc
lea
jbe
dec
or
add
ficomps
leave
int3
sbb
mov
pop
hlt
add
movsl
cmp
jo
jb
clc
cmp
push
push
dec
pop
in
scas
mov
sarb
rcll
jp
mov
lods
ficompl
pop
dec
ret
and
ret
stos
mov
mov
push
mov
ja
hlt
int
incb
mov
test
push
push
pop
cmp
mov
sub
add
faddl
mov
cmovno
jp
push
or
out
adc
andl
addr16
std
jbe
sar
mov
add
in
subb
ljmp
pop
mov
mov
ljmp
xchg
inc
dec
repz
mov
fs
mov
jp
int3
test
cli
cmpsb
out
fs
and
leave
sbb
fwait
outsb
clc
ja
in
dec
jae
jge
cmp
clc
xor
clc
call
push
jmp
repz
test
enter
out
test
imul
pop
movsb
push
js
mov
xchg
mov
clc
cs
mull
dec
aam
and
jne
fstl
mov
xor
mov
std
push
cwtl
inc
imul
outsb
rcr
jnp
js
call
out
out
das
lahf
push
pop
ljmp
dec
js
pop
add
ljmp
pop
lcall
js
hlt
jl
inc
mov
hlt
inc
pop
mov
jle
pop
pop
sbb
xor
outsb
xchg
lock
incl
test
mov
pusha
dec
movsb
nop
jne
pop
jmp
dec
jb
xor
test
push
and
pop
lods
jo
push
fcomps
lahf
stos
pop
cld
call
cli
js
xor
je
jecxz
xor
xor
insl
repz
cli
lcall
mov
arpl
mov
mov
cmp
aas
cld
dec
call
push
mov
mov
mov
mov
popa
rclb
dec
nop
pop
jp
cmc
or
lods
dec
pop
xchg
mov
scas
adc
pop
in
adc
xchg
imul
mov
push
jl
das
inc
and
fs
pushl
std
sbb
pop
cli
jne
pop
ds
mov
adc
cmp
xchg
in
test
cld
add
pop
pop
cmp
pushf
mov
clc
call
negl
scas
outsl
iret
adc
lcall
dec
add
cmpsl
shll
mov
sbb
aam
call
ljmp
xlat
lahf
fwait
or
fisttpll
mov
movsb
lods
data16
xchg
sbb
lcall
fs
dec
iret
jecxz
in
push
adc
movsb
es
push
sub
fsubp
push
icebp
lods
xchg
loopne
in
scas
nop
mov
cmp
ss
dec
insb
sub
mov
clc
aas
cmp
xchg
mov
sub
push
fisttps
push
aaa
pop
push
in
sbb
addr16
adc
decl
ret
push
cmp
and
imulb
out
cld
mov
inc
mov
leave
and
xchg
xor
mov
dec
push
mov
inc
pop
inc
vxorps
inc
pop
mov
loop
cmp
movsl
mov
cmp
mov
push
in
loopne
fdivr
fbstp
mov
inc
mov
add
cmp
lock
roll
jle
or
jg
bound
sub
daa
jb
push
stos
push
xor
mov
out
pop
xor
xchg
sbb
or
xchg
sbb
sbb
pop
push
push
jb
loop
adc
fwait
out
add
clc
outsb
fcomps
out
xorl
xchg
cmp
pushf
pop
push
add
pop
stos
scas
jbe
mov
je
mov
pop
mov
xchg
xor
mov
pop
fdivrs
mov
mov
push
mov
push
push
cld
jecxz
nop
cmp
ljmp
inc
clc
dec
out
xor
jns
popa
std
loop
lock
cli
into
mov
jne
stos
aam
or
mov
mov
push
ss
or
shlb
int3
mov
mov
imul
jb
dec
sar
aaa
loope
inc
dec
hlt
les
ret
or
push
stos
out
sub
add
adc
cld
outsl
push
lea
out
movl
es
in
out
cmc
or
filds
push
inc
movsl
push
and
jge
mov
lret
mov
push
dec
cmpsb
ljmp
pop
fwait
ret
push
jne
sbb
lahf
push
dec
aad
and
cmp
sbb
addb
sbb
xchg
rolb
data16
insl
ss
sbb
ret
iret
imul
cmp
cmp
rorb
ljmp
cli
test
pop
inc
sbb
mov
imul
arpl
repnz
dec
popf
push
sti
decl
int
test
inc
andb
add
sbb
mov
fidivrl
orb
mov
xchg
mov
in
dec
add
cmp
inc
dec
fcmove
fwait
movsl
stc
mov
inc
jl
sub
cs
lock
pop
fwait
ss
roll
jg
fiadds
dec
in
cmp
sbb
jbe
add
lds
inc
data16
sub
aad
pop
inc
sub
cmpsl
pop
call
sbb
xor
push
js
adc
adc
mov
cli
adc
inc
leave
pushf
mov
cs
mov
call
in
pushf
push
sub
les
insl
xchg
sbbb
fmulp
jle
push
mov
mov
jge
mov
mov
fsubs
pop
mov
mov
sbb
and
mov
cmp
dec
jno
sbb
xchg
add
es
mov
push
jmp
lock
push
cmp
lahf
pop
dec
ja
jle
inc
jg
lret
sahf
lods
std
fildl
fcom
mov
data16
outsb
cs
das
jp
xor
mov
push
mov
cmp
mov
jg
frstor
shrb
push
push
out
adc
add
rcr
setg
xor
fistl
mov
pushf
cs
mov
jb
lahf
lods
clc
mov
jmp
cli
mov
mov
out
sub
call
mov
ss
mov
leave
lcall
addr16
test
xor
inc
add
scas
cli
incl
leave
mov
xor
enter
cmc
ljmp
push
mov
adc
mov
add
lcall
xchg
jg
cmp
aaa
in
push
popl
fidivl
push
hlt
test
add
or
loop
ds
clc
sub
dec
push
mov
aas
out
cvttps2pi
call
out
fmuls
sar
xor
mov
pop
jl
test
jle
fwait
ret
sbb
das
stos
adc
orl
mov
jle
xchg
jp
mov
insl
bound
outsl
xchg
mov
or
mov
hlt
or
mov
das
add
fucomi
in
in
mov
out
add
rclb
cmpl
lret
mov
sub
std
decl
shlb
pop
bound
les
dec
mov
sub
xchg
jg
add
es
loop
int
xchg
push
cmp
rcrb
lock
mov
sarl
jmp
mov
test
test
or
decl
sahf
test
ds
mov
icebp
xchg
jg
pop
call
inc
scas
sti
mov
ficompl
pop
pop
loopne
fdivrs
xchg
mov
pop
insb
add
jo
out
cli
inc
subb
adc
ljmp
sub
inc
andb
cwtl
push
or
mov
or
imul
lret
decl
ljmp
jecxz
jle
jle
sbb
jecxz
and
add
mov
popl
clc
incl
cmp
adc
ret
push
frstor
or
pop
push
imul
jmp
lcall
lock
out
popa
push
in
push
cmpsl
notb
push
xchg
mov
push
mov
adc
int3
cltd
xor
std
push
test
cmp
outsl
adc
cltd
sbb
rorb
ret
leave
inc
shlb
add
xlat
mov
bound
inc
sub
push
mov
lods
dec
sti
jbe
xor
cmp
jg
dec
fwait
inc
mov
mov
and
outsl
mov
call
and
pusha
fadd
popf
fiaddl
outsl
addl
jg
and
repz
or
mov
dec
cli
mov
orl
mov
and
push
add
mov
loop
jae
icebp
lahf
sub
pushl
cmc
push
and
loopne
dec
sub
and
inc
and
xchg
lock
rclb
inc
and
mov
xor
or
xchg
js
cmp
inc
in
mov
fstl
dec
mov
ret
sub
cmp
mov
sbb
add
js
jl
push
jo
jecxz
into
orl
adc
pushl
cld
enter
jecxz
leave
lea
push
imul
jnp
pop
outsb
orl
subb
and
sbb
adc
jmp
jge
pop
es
push
in
js
mov
add
cli
and
jl
add
dec
jmp
mov
pushw
aaa
xchg
sbbb
sub
loope
and
nop
lret
stos
cs
out
mov
dec
aad
fildll
test
mov
xchg
cld
decl
cmp
mov
cld
mov
mov
or
sbb
ss
mov
int3
dec
cmc
les
pop
jge
mov
imull
pop
inc
enter
fiaddl
clc
lcall
lret
dec
mov
add
jo
add
lock
ljmp
and
mov
and
shll
inc
loope
icebp
mov
repz
bound
ret
nop
loope
stc
jb
cld
popf
and
sbb
mov
insb
sarb
call
mov
bnd
mov
insb
rcr
jne
loope
fst
cmp
int3
mov
cmp
push
dec
in
shr
fcmovbe
lahf
scas
mov
mov
arpl
andl
sarl
push
mov
movsb
xchg
push
push
push
inc
add
clc
inc
imul
add
out
mov
decl
into
xchg
aas
lcall
mov
adc
add
inc
mov
sbb
add
inc
inc
out
jb
dec
or
movsl
mov
cmp
xchg
cmp
roll
inc
xlat
xchg
ja
fdivl
dec
into
adc
xor
pop
push
test
ss
sub
fs
fisubrl
jb
js
stos
mov
fidivs
cltd
pop
mov
add
adc
movl
outsl
in
scas
mov
ja
stos
inc
push
and
stos
out
les
divb
and
insb
dec
mov
or
mov
adc
lcall
loope
cmp
or
jp
aad
xchg
repnz
daa
add
outsl
cmp
xor
adc
adc
push
sbb
std
lock
jg
push
cmp
shrb
repz
xchg
popf
adcb
dec
shlb
in
mov
push
cmp
push
fmuls
xchg
pop
pop
jae
ds
sbb
lods
or
pop
movsb
xchg
cmpsb
cmpsb
jl
lds
and
hlt
cmp
and
xor
bound
stc
xchg
bound
cltd
mov
jp
push
cmc
aas
pop
mov
out
jbe
mov
cmpsl
rclb
lods
insl
in
out
add
inc
jecxz
sbb
lcall
xchg
inc
lcall
pop
in
stos
sbb
fists
mov
insb
pop
mov
inc
lods
mov
inc
jns
mov
xchg
jmp
mov
les
add
out
insb
inc
pop
cld
fcomip
int
add
daa
mov
pop
adc
push
pop
cmp
xchg
push
or
push
jb
jo
ficoms
mov
sbb
pop
out
popf
jmp
cmpsb
sub
hlt
and
sub
lret
push
dec
jbe
incl
jp
inc
jle
test
jecxz
adc
fbld
push
repnz
jle
add
sbbb
sub
mov
stos
test
das
les
mov
jg
fcompl
xchg
sbb
mov
push
dec
xchg
mov
dec
andl
pop
xchg
xchg
jno
inc
rcr
mov
mov
mov
push
dec
and
ljmp
adcb
add
and
push
outsb
inc
cli
fwait
xor
fistpll
fs
fistpll
add
xchg
dec
mov
outsb
lds
fsubl
cld
dec
mov
icebp
sub
andb
mov
push
inc
outsl
dec
jmp
out
cmp
in
mov
mov
cmp
pop
in
movsl
jmp
jbe
je
sbb
mov
push
push
xor
jmp
add
test
ljmp
lea
mov
mov
adc
ja
lock
inc
loop
jecxz
cmp
push
loop
mov
pop
ljmp
icebp
adc
add
mov
jb
inc
inc
cmpsl
lods
andb
cmpsl
flds
gs
mov
sti
lods
stos
adc
mov
test
mov
fbstp
rcrl
popf
enter
sub
mov
inc
rol
jl
lret
jle
mov
or
fbld
test
test
stos
dec
pushf
pop
jge
and
sbb
call
call
test
ljmp
cmc
fbstp
push
into
xorb
fiaddl
outsb
test
adc
clc
outsb
sar
and
xchg
fwait
mov
cmp
jecxz
hlt
call
iret
jbe
popa
cmp
mov
or
js
outsb
mov
subb
insb
sbb
xorb
scas
iret
call
icebp
pop
adc
imul
inc
loop
in
nop
pusha
fldcw
lahf
jl
xchg
inc
push
push
adc
cli
sub
push
xchg
dec
gs
cmpsb
repz
inc
cmp
cmpsb
pop
xchg
loopne
sub
cmp
push
fs
call
ret
sub
stos
rcll
sub
mov
add
add
aam
gs
lret
or
rcr
pop
into
mov
fadds
mov
ljmp
cs
jmp
ljmp
push
jp
adc
mov
cmpsl
xchg
iret
pop
push
insl
dec
enter
xor
cld
outsl
hlt
out
mov
ret
fistps
mov
clc
inc
mov
shr
fbld
fisubrs
cld
cld
shlb
sub
orl
decl
add
or
outsl
xchg
mov
leave
ficompl
pushf
rorb
mov
out
adc
cmp
ljmp
pushf
inc
push
ljmp
xchg
xchg
cmp
enter
call
hlt
xchg
aas
mov
push
sbb
fnstcw
adc
xchg
mov
pop
jl
cld
fwait
jle
sbb
cmp
dec
pop
cmpsl
inc
dec
mov
shll
test
clc
call
cld
cmp
pop
sahf
add
cwtl
or
aas
push
fisubl
xchg
pop
adc
mov
pop
push
inc
nop
sub
lock
jecxz
ja
sbb
in
cmp
sub
push
mov
mov
inc
insb
mov
nop
pop
int
hlt
adc
lret
aaa
mov
data16
mov
fstl
sub
cmpsl
int3
push
xor
and
das
add
sbb
cli
outsb
jmp
test
adc
hlt
inc
add
add
outsb
ret
bound
subb
les
lods
outsl
ret
loop
xlat
call
sahf
andb
inc
rcrb
mov
inc
sbb
jl
xchg
fsubs
or
adc
outsb
and
lahf
xchg
icebp
loopne
orl
sbb
xor
push
mov
push
xchg
fcoml
inc
or
call
mov
js
hlt
ljmp
movb
jmp
clc
mov
add
sbb
xchg
cld
daa
jg
jge
cmp
sub
cmpsb
cmp
inc
pop
inc
mov
mov
stc
and
jge
daa
mov
cmpb
adc
jl
cmpsb
mov
mov
xchg
add
cmp
inc
cmc
outsl
leave
andb
xchg
lods
decl
pop
push
ss
add
mov
outsl
inc
cs
lock
pushl
pop
sbb
sub
inc
sub
sbb
xchg
les
shl
ljmp
mov
jo
dec
iret
aaa
push
jno
jne
xorl
dec
adc
fucomip
push
inc
adc
or
mov
sbb
dec
addr16
sub
push
xor
or
inc
aad
xchg
xor
cmpsb
push
push
lock
dec
inc
clc
mov
in
inc
pop
jne
jmp
les
aam
js
les
stc
stos
mov
add
ret
lcall
fimuls
call
orl
insl
mov
incl
pop
cmp
jecxz
sbb
xlat
out
inc
xchg
and
sub
mov
mov
pop
outsl
xorb
mov
mov
sub
loop
icebp
call
pop
out
cmp
andb
lds
mov
ljmp
mov
iret
jae
ds
xlat
scas
mov
mov
pop
gs
imul
and
out
pop
and
mov
loop
push
xchg
dec
dec
ficoml
push
outsl
mov
lea
mov
xchg
fcomps
pushf
add
inc
insl
rol
mov
cmc
loop
inc
jecxz
or
lret
add
adc
push
clc
and
pop
pusha
jmp
jae
mov
pop
inc
jb
sbb
mov
mov
inc
cmp
pusha
subb
jl
fisubrl
and
or
sub
or
push
mov
inc
xchg
adc
inc
loope
mov
std
out
sub
movsl
mov
test
pop
cs
mov
jmp
cmp
lret
lock
mov
pop
adc
mov
or
cmpsb
mov
sbb
cmpsl
adc
arpl
dec
jnp
sbb
es
cs
aas
outsl
clc
or
push
mov
xchg
jle
das
subl
pop
jns
or
enter
popa
ljmp
xchg
jp
adcl
daa
js
and
mov
test
ss
and
sub
fwait
lods
and
inc
mov
xchg
pop
arpl
in
dec
inc
fwait
test
fstps
stos
dec
loop
insb
sub
lahf
pop
push
xor
cmp
ret
inc
adc
sub
jns,pt
push
or
add
or
test
adc
jg
outsb
add
mov
jnp
xor
cmp
push
push
cmp
dec
fisttps
insb
mov
xchg
jbe
cmpsl
arpl
je
cmp
je
incl
shrl
imul
test
pop
hlt
repnz
fbld
jb
fldl
pushw
in
jle
and
lods
fidivs
jne
ja
scas
clc
cmpb
lret
daa
sahf
mov
jnp
mov
xor
jno
push
dec
mov
and
outsb
je
push
sarb
lcall
stc
mov
mov
mov
push
mov
sbb
stos
mov
std
jmp
or
cmp
push
inc
and
xchg
insl
decl
and
ss
mov
jb
aam
inc
popf
gs
out
adc
loop
movsb
js
dec
enter
idivl
ret
push
dec
inc
mov
mov
test
jg
frstor
mov
divl
popa
lret
mov
bound
xor
xor
cmp
fbld
cld
mov
dec
rcr
in
cmp
les
cmpsb
in
jne
pushf
dec
cli
push
push
push
nop
out
and
insl
cmp
shrl
or
lds
rol
xor
inc
xor
mov
pop
filds
xor
jle
dec
scas
fsubl
inc
xor
das
ror
dec
inc
in
adc
mov
push
cmc
lret
pop
hlt
out
lahf
enter
and
cmp
mov
das
push
roll
movsb
data16
xchg
xchg
cmp
insl
push
adc
mov
jmp
pop
aaa
jge
lods
and
outsb
loop
pop
stc
decl
cli
mov
dec
ret
test
fisttpll
mov
pop
scas
mov
fisttps
or
pop
popa
dec
lock
scas
push
pop
fwait
mov
and
sti
xchg
jmp
push
inc
rol
das
cwtl
sti
clc
mov
cmpsb
add
pop
pop
xchg
mov
cs
outsl
adc
ret
or
ljmp
les
loop
sbb
pop
dec
mov
and
pushl
xor
xor
cmp
cmp
cltd
xchg
leave
add
add
dec
stos
xorl
into
cmpl
ss
fistl
lcall
pushl
push
inc
int
push
lcall
and
lcall
inc
xchg
push
jle
add
incl
sbb
jo
fwait
sub
xor
insl
mov
les
mov
push
push
in
cmp
cmpsl
mov
aas
test
xor
mov
clc
adc
test
imul
fwait
mov
std
lret
cwtl
pop
dec
xor
add
imul
mov
adc
int3
mov
push
jb
loopne
mov
ss
out
sub
pop
push
out
hlt
push
insl
push
sbb
js
or
sarb
push
test
inc
js
call
repnz
cwtl
decl
or
sub
js
inc
imul
pusha
clc
dec
pop
mov
decl
jmp
jle
jns
pop
xor
and
cli
sbb
adc
mov
sbb
in
mov
fidivs
or
xor
jge
push
repnz
mul
pushf
adc
sub
mov
incl
shll
shll
sar
sub
fwait
dec
stos
sub
jge
mov
push
rorb
sbb
iret
shll
push
shlb
lcall
and
leave
into
inc
pop
gs
cmp
mov
scas
add
sahf
sub
xchg
xchg
jle
jne
push
jg
cmp
xor
inc
lret
sub
jge
aaa
jb
sub
testl
fistl
cmpb
jp
sbb
icebp
stc
mov
les
mov
out
mov
ficomps
in
cs
sar
cmp
inc
xor
adc
imul
sub
loopne
pushf
push
decl
push
or
aam
pop
add
mov
inc
int3
fisttps
lods
aam
gs
dec
rorl
jg
jl
mov
mov
sbbl
and
ljmp
mov
dec
jbe
fsqrt
cli
test
aam
inc
out
jo
dec
dec
dec
adc
incl
sub
enter
mov
test
lcall
push
mov
es
stos
inc
adc
mov
std
mov
push
jle
fnstcw
pop
dec
bound
adc
jmp
cmp
fstl
push
xchg
andl
notl
jmp
loopne
std
int
pop
cld
stos
test
enter
xor
cmpsl
add
test
pop
test
ror
push
mov
rolb
cmc
es
add
xor
sti
popl
es
leave
adc
push
jne
jg
dec
dec
cli
add
ficompl
test
addr16
xchg
jp
mov
pusha
mov
xchg
cmp
cmp
pushl
clc
push
stos
mov
nop
pop
push
test
dec
adc
inc
xchg
fwait
push
xchg
lods
pusha
or
cmpsb
mov
or
jl
xor
xchg
jge
rolb
jg
pushf
push
xor
enter
inc
ret
sub
add
rcrl
sub
mov
sub
cli
incl
cld
and
mov
in
add
ljmp
sti
pop
mov
fbstp
mov
mov
pop
mov
cmpsb
ljmp
dec
sub
imul
pusha
sub
adc
cmp
dec
pop
push
data16
xlat
dec
imull
ja
nopl
mov
popf
xchg
or
dec
cmp
xchg
and
ret
sbb
lea
mov
loope
js
inc
dec
stos
sub
mov
imul
mov
call
cld
ss
hlt
adc
lcall
inc
stos
lcall
xchg
lods
fistps
mov
js
and
fcomi
rcll
adc
in
out
mov
lret
aam
or
mov
inc
mov
mov
or
call
loopne
ds
outsb
int
lahf
shr
enter
push
mov
cmp
sub
mov
pop
xchg
test
mov
mov
xchg
cmove
mov
jl
outsb
scas
aaa
xchg
fstpt
xchg
inc
fldl
test
jmp
popa
imul
mov
dec
pop
mov
incl
daa
jbe
sub
dec
and
dec
push
push
aam
lret
or
es
lcall
xor
mov
sub
stos
pop
adc
sbb
sbb
jp
add
jp
push
test
sub
lret
mov
jl
jo
jecxz
jg
mov
jg
das
aas
mov
xchg
jp
xor
add
jge
mov
pop
ss
jne
lcall
cld
add
adc
mov
xchg
mov
rcrb
inc
insb
push
push
sti
xlat
xor
and
repnz
outsl
push
test
jg
xor
jnp
dec
pop
and
decb
jnp
push
jne
test
mov
mov
addr16
imul
inc
js
dec
in
sbb
mov
cmc
mov
xchg
pop
sbb
clc
jg
bound
fucomip
mov
xlat
sub
scas
dec
loopne
test
js
jbe
sbb
jle
shrb
xchg
add
pushl
or
in
sti
mov
bound
clc
inc
loop
outsl
aad
dec
xchg
inc
inc
sub
popa
xor
mov
test
add
outsb
dec
mov
loop
repnz
mov
push
or
xchg
pusha
xor
dec
add
movsl
orl
mov
popf
mov
jmp
inc
fidivs
dec
mov
push
lock
dec
loope
push
mov
out
inc
dec
cmp
lcall
pop
xorl
fwait
loope
xor
clc
add
or
sahf
ret
inc
fstps
icebp
sub
push
scas
cmpsb
and
mov
jg
mov
icebp
jns
jb
mov
cmpsb
mov
dec
ljmp
cli
hlt
cltd
ret
and
cld
pushl
lcall
cmp
adc
imul
cmpb
js
or
mov
mov
movsb
pop
ds
imul
imul
sub
popf
adc
pop
icebp
lcall
xor
sub
mov
adc
mov
hlt
mov
out
dec
aaa
and
inc
add
fdivrp
outsl
cli
insl
jmp
lods
pop
shlb
inc
dec
and
and
push
cmp
mov
mov
dec
jmp
mov
outsb
add
mov
dec
fdivr
das
insl
xor
jg
xor
sbb
jne
ds
sub
mov
mov
cmpsl
pop
lahf
lods
stc
fcoml
loop
pusha
dec
sub
stos
lods
jne
sub
fisttps
mov
or
movsb
sub
loop
clc
mov
push
leave
mov
jle
jecxz
xchg
xchg
push
fimuls
out
out
cmpsb
stos
jg
xchg
xor
ljmp
hlt
aaa
std
fdivs
lret
aam
repnz
xchg
movsl
cld
out
bound
mov
mov
or
call
add
push
adc
inc
in
inc
aam
lods
aad
filds
jl
xchg
jbe
adc
jl
or
jg
add
jmp
inc
cwtl
adc
int
push
cmp
push
fcomps
sti
lret
lods
outsl
loopne
repz
push
ret
ucomiss
xchg
sub
movsb
cmp
rclb
jl
icebp
push
pop
enter
movsl
hlt
adc
push
ds
jg
add
push
or
pop
xchg
sub
jg
push
xchg
pop
mov
mov
lods
add
scas
mov
ror
loopne
outsl
pushf
sub
dec
xor
adc
cmc
mov
push
cmpsl
add
aas
loopne
mov
mov
es
xchg
cmp
out
in
fisttpll
mov
jecxz
scas
faddp
xchg
pop
shlb
loop
or
jbe
or
repnz
ret
in
pushl
cwtl
cli
pop
push
add
movsb
nop
push
adc
fdiv
jns
aam
or
arpl
imul
popa
mov
ficompl
bound
jg
adcb
ret
adc
mov
sbb
mov
jo
lret
cmp
decl
rorb
cwtl
mov
inc
cld
adc
fldt
loopne
cmp
adc
mov
push
sub
or
cmpsb
inc
data16
push
sbb
add
push
dec
or
sub
pop
jecxz
ljmp
lods
rol
push
call
xor
mov
inc
sbb
pop
sub
xor
cmp
cmp
flds
incl
mov
mov
mov
in
pop
fmuls
lods
incl
xor
push
insl
mov
out
xorb
push
ljmp
sub
imul
xchg
and
sbb
mov
mov
pop
cmp
jmp
push
sbb
mov
mov
je
inc
das
and
push
clc
ja
cwtl
std
cld
cmc
xchg
xchg
int3
fisubrl
ljmp
outsb
push
aad
int3
inc
ficompl
inc
mov
fwait
jle
add
daa
add
dec
pusha
mov
call
inc
int
jp
shll
inc
lret
adc
and
aad
incl
adc
cld
das
jns
pushf
sub
fisubs
mov
sbb
scas
movsb
push
inc
jp
ret
adcb
dec
pop
jns
cmpsl
in
xor
mov
pusha
dec
stos
fldl
cmp
popa
std
dec
or
call
cmp
mov
xchg
das
mov
xchg
nop
outsb
sub
push
hlt
cmpsb
loopne
aam
or
push
test
mov
dec
cmp
lret
xor
pop
xchg
or
cmp
xor
imul
cmp
scas
cmp
xchg
or
fists
decl
ret
out
add
ret
push
ds
cmp
mov
sbb
add
inc
mov
jp
sbb
gs
mov
decl
jge
mov
pop
jecxz
les
stos
xchg
andl
lods
cli
inc
scas
test
stos
dec
mov
outsl
fisubs
cmp
or
and
add
and
stos
insb
sbb
outsl
clc
mov
sub
outsb
cli
bound
test
jg
pop
or
jmp
int
xlat
push
pop
xor
push
add
dec
scas
sub
shrb
je
call
fisubs
add
imul
cmpsb
xchg
scas
pusha
or
mov
push
gs
or
jg
push
int3
lock
mov
sub
sbbl
test
pop
lcall
dec
push
leave
in
ret
int3
mov
mov
push
stos
pop
addb
and
sbb
mov
pop
cmpb
xchg
pushw
ret
cld
lock
decl
punpckhwd
cli
sub
aad
cmp
jg
push
jg
pop
jmp
lcall
mov
add
pop
push
out
stc
pusha
jg
lahf
xor
inc
sbb
subb
aaa
pop
enter
movsl
sub
adc
pop
or
clc
fbld
stc
ss
popf
leave
jne
xor
repz
or
xchg
ret
sub
adc
fistps
jb
mov
popf
mov
cmp
out
dec
inc
dec
mov
stos
testb
call
in
adc
divb
sub
push
and
or
idiv
push
sub
push
xchg
repz
repz
add
pop
pop
push
lret
jg
ljmp
pop
cmp
test
sub
outsl
lods
jmp
dec
cld
lcall
cmp
pushf
xlat
das
inc
push
add
pop
add
add
cwtl
pop
xchg
push
dec
pop
mov
or
sbb
adc
add
fcos
out
rcl
aam
lahf
lret
call
and
aam
cmpsb
xchg
push
or
fisubrl
and
xchg
mov
lock
inc
jecxz
mov
cli
dec
xor
fstpt
cmp
cmp
cmc
jmp
int3
repnz
gs
call
fsin
inc
add
lea
fmull
mov
ljmp
bound
pop
pushf
adc
hlt
iret
into
push
lock
adc
outsb
fwait
orb
sar
bound
orl
jp
out
fs
ret
sar
stc
and
sahf
pop
rcrl
and
lock
sub
inc
push
rsm
cltd
neg
adc
inc
repnz
add
andb
aad
pushf
xlat
sbb
sarb
or
jae
push
push
rcrb
mov
push
in
mov
pushf
pop
cmp
xchg
pop
mov
add
hlt
decl
pop
cmp
push
xchg
data16
and
cmp
pop
dec
cmc
xchg
test
fadds
pusha
mov
popa
cmp
sti
leave
xor
fisubl
push
jle
mov
cltd
aas
xor
mov
out
mov
ja
sbb
push
sbb
inc
push
and
je
int
add
daa
bound
add
push
fmull
dec
xchg
sub
ficompl
rorb
pop
jge
push
mov
sbb
out
nop
movsl
in
ja
mov
and
pusha
lcall
mov
pop
mov
fstl
xorb
pop
aas
insl
add
and
jmp
mov
enter
nop
push
movsb
jp
sub
sbb
push
mov
add
incl
cmp
jmp
push
push
adcl
jle
pop
and
fwait
repz
ja
fwait
sub
xchg
popa
xor
iret
mov
in
jb
or
inc
xchg
mov
dec
ss
add
lret
xchg
repnz
mov
or
fcoml
xchg
iret
insb
jecxz
loop
aas
fcmovu
lret
shrl
fdivr
jmp
xor
mov
cmpl
pop
mov
cmp
push
xchg
mov
xchg
outsl
loop
lock
movsb
leave
pusha
repnz
decl
sub
jge
push
jg
and
ja
clc
or
jecxz
jmp
pop
icebp
inc
push
mov
cmp
lds
jnp
daa
fs
pop
fwait
push
push
push
insb
outsl
aaa
add
into
bound
mov
aad
pop
icebp
rcrl
mov
dec
xor
lock
sarl
inc
cld
lods
cmp
sub
aad
xchg
cmp
add
into
icebp
cmp
pop
orl
cmpsb
clc
xchg
mov
dec
dec
or
bound
ss
sub
movsb
xchg
xchg
jg
and
lock
stos
inc
int3
push
cld
imulb
rcll
inc
js
and
loopne
xor
lahf
pusha
test
jne
in
jbe
in
add
lods
jle
mov
pop
add
popa
jae
cmc
mov
cmc
or
mov
or
ss
adc
mov
ljmp
mov
aad
jp
int
fwait
sbb
test
outsb
inc
xor
sbb
xchg
pop
repz
roll
add
stos
add
sahf
int3
and
jmp
cli
fistpll
xor
pop
stc
inc
pop
pop
cld
popf
shrb
sbb
inc
pushf
cmpsl
xchg
js
sub
lret
test
jbe
subl
lock
adc
add
lds
rol
cmp
lea
cmp
inc
aaa
cld
das
mov
lcall
jo
adc
or
ret
add
jp
imul
xor
jecxz
pop
fisubs
mov
js
xchg
sub
xor
pop
add
jl
out
rorb
sbb
inc
scas
inc
mov
dec
push
enter
ret
rcrb
fcmovnb
mov
dec
loopne
sbb
jl
out
int3
adc
cmp
jno
pusha
inc
call
add
push
lods
aas
in
pop
cmc
adc
and
in
add
mov
negl
jle
pop
testb
aad
jmp
pop
add
jp
int
sti
push
mov
jb
mov
push
and
jg
jg
cmp
sbb
xor
and
out
xchg
mov
movsb
outsb
or
lcall
dec
sub
push
sub
jg
push
jge
dec
aad
cmp
xchg
pop
sti
enter
icebp
pop
mov
bound
imul
pushl
cmpsb
sbb
sub
lcall
dec
pop
int3
insb
inc
dec
pop
outsl
leave
pop
cmpsb
mov
dec
inc
icebp
rcrb
add
mov
je
mov
and
pop
mov
inc
jnp
movhps
bound
mov
xchg
pop
adc
fs
loopne
pusha
stos
push
shlb
fiaddl
sti
out
xchg
push
jecxz
mov
xor
out
pop
aam
xor
movsb
inc
pop
sbb
lods
scas
cmp
and
mov
add
cmpsb
ret
lcall
add
dec
cmp
jl
push
sbb
aaa
pop
icebp
imul
stos
lret
pop
cmp
adc
ljmp
mov
int
add
cmp
loop
stos
in
loopne
outsb
repnz
lea
insl
ja
push
sub
or
xorb
jmp
push
aam
mov
cs
aaa
test
les
push
jne,pt
rorl
lea
push
decl
inc
lods
sbb
fcoml
cwtl
imul
cli
sub
test
xor
pop
cmc
pop
enter
pop
add
sbb
fistl
sbb
fistl
loope
mov
ljmp
leave
addr16
mov
xchg
hlt
addr16
mov
fsubrl
jg
hlt
insb
add
mov
test
insl
mov
aam
mov
sub
mov
mov
mov
out
sbb
adc
filds
cmp
mov
loope
les
cmp
jge
aad
inc
insb
pushf
mov
mov
mov
adc
cmp
scas
stc
pusha
test
fs
jbe
push
lods
add
fldl
dec
lods
mov
lcall
ss
mov
inc
push
shlb
je
push
jl
loope
rcl
stos
neg
fcomps
rolb
push
mov
test
std
mov
xchg
mov
mov
sti
jp
mov
orl
sahf
cmpsb
out
cmp
cmc
push
mov
fsts
sbb
lcall
mov
mov
ffree
lret
imul
cmp
xchg
jecxz
jp
pop
data16
cwtl
mov
xchg
lock
and
jb
clc
jg
mov
inc
ret
add
int
mov
icebp
xor
fisubs
adc
ret
mov
mov
outsl
and
adc
push
pop
lods
jne
cmpsb
outsl
mov
pop
cwtl
or
jmp
aad
mov
das
xchg
and
xchg
dec
mov
clc
mov
scas
add
adc
lret
mov
loopne
lds
test
dec
test
jle
leave
ja
mov
mov
out
das
lahf
sbb
lret
xor
cltd
loopne
scas
scas
mov
lods
mov
fcomip
enter
mov
mov
sbb
pusha
fnstcw
call
test
outsb
add
es
fadd
jb
xor
lret
mov
mov
sub
lret
jnp
movsl
or
ja
xor
mov
aad
push
sub
stos
push
sub
out
das
mov
decl
out
fwait
pop
lcall
jg
lock
outsb
imul
int3
pop
dec
fsubl
push
int3
ljmp
lcall
sbb
imulb
jb
xor
inc
mov
hlt
and
cld
xorb
repz
stos
inc
aam
outsl
jp
leave
pop
sti
shr
jbe
add
xchg
sbbb
cmc
jmp
dec
fcoml
cld
sbb
cmp
cmp
pop
mov
cmp
clc
jne
mov
pop
cld
lahf
add
xchg
dec
xor
jbe
popf
mov
cmpsb
incl
sahf
mov
test
cld
das
lcall
jne
jl
pop
adc
pop
pop
dec
adc
inc
jmp
lods
aas
sub
cmpsb
inc
jmp
and
xchg
cld
cmp
add
mov
test
sar
xchg
pop
ret
mov
incb
xor
lock
test
mov
jg
jb
inc
lods
stc
jl
push
xchg
cmc
and
je
je
pop
frstor
pop
sbb
ret
xchg
xchg
mov
mov
push
sahf
mov
addr16
bound
ljmp
pushf
or
sahf
outsl
sahf
imul
cmp
rclb
sarl
push
jo
add
dec
or
stc
lds
add
push
jl
ja
rol
addb
ss
or
out
getsec
sub
push
mov
sub
outsb
into
fwait
test
xchg
mov
mov
dec
scas
aas
push
es
hlt
mov
lock
and
push
xor
shl
or
mov
pop
mov
stos
in
int3
aad
pop
cltd
sub
mov
cmpsl
sub
cmp
gs
pusha
jo
sub
jg
clc
pop
shll
cmp
jno
mov
jg
or
push
testb
adc
mov
cmp
mov
add
loope
push
add
outsb
nop
int
mov
outsb
in
or
sub
cmc
leave
cmp
std
call
js
jmp
xchg
mov
pop
into
andl
imul
mov
add
ret
xchg
test
scas
mov
pusha
in
std
ss
popf
xchg
adc
or
fsubl
sbb
pop
mov
mov
sbb
in
scas
push
leave
adc
mov
cmpsl
mov
mov
or
data16
loopne
repnz
decb
and
ljmp
jmp
shrb
inc
fisttps
and
pop
mov
pop
add
ljmp
loopne
xlat
mov
mov
mov
repz
or
jg
rolb
fbld
shlb
mov
push
cmp
enter
hlt
xchg
out
add
sub
or
pop
ffreep
push
fildll
outsl
xchg
movsl
sbbb
mov
fisubs
push
mov
mov
dec
sub
aad
nop
mov
push
pop
shlb
inc
lcall
or
insl
jp
das
cli
dec
call
rcrb
xchg
les
or
enter
fildl
sub
in
xchg
aad
pusha
out
xchg
push
push
inc
lds
mov
idivb
add
push
fisttpl
add
jmp
sti
out
push
push
fidivs
sub
push
jl
mov
jle
loope
mov
add
sub
push
int
mov
mov
pop
movsb
pop
pop
push
fisttps
xor
xchg
mov
adc
fsubrs
mov
incb
sahf
dec
sub
xor
xorb
repz
adc
sub
mov
adc
push
push
pop
scas
mov
inc
pop
push
mov
sbb
pop
and
add
in
cs
das
shlb
pop
movsb
mov
ljmp
fimuls
mov
mov
popa
adc
mov
xchg
pop
out
adc
mov
loop
stos
or
pop
loopne
xchg
push
xor
inc
loop
shrb
inc
daa
push
call
mov
scas
sbb
sbb
mov
add
loop
xor
push
lret
aam
fucomp
int
imul
daa
jl
xchg
push
dec
adc
pop
or
cmpb
outsl
mov
shl
mov
cmc
mov
dec
and
mov
mov
push
ficompl
jecxz
cmp
add
add
lods
push
sub
xchg
mov
iret
test
or
xor
lock
mov
shlb
sbb
adc
pop
push
cmpsl
arpl
je
mov
decb
add
dec
pop
adc
out
add
das
mov
xor
push
push
loopne
and
call
aam
aaa
push
push
cld
insb
ja
add
and
shll
dec
xchg
test
push
cmp
push
aad
push
push
sbb
ds
ret
es
mov
fistl
loop
mov
test
int
mov
ljmp
jl
lea
mov
gs
adc
pushl
dec
sub
test
jle
imull
push
dec
push
jno
inc
rolb
and
push
xchg
pop
mov
jl
push
insl
cmp
mov
push
push
mov
fistl
insl
cmp
xchg
loop
push
mov
adc
xchg
mov
adc
roll
daa
dec
outsl
adcl
movsl
mov
dec
mov
push
and
outsl
test
into
xor
push
xchg
dec
or
cmpsl
test
cmp
clc
lahf
loopne
xor
scas
mov
dec
out
subb
icebp
cld
ljmp
lcall
mov
test
push
rcrb
mov
mov
enter
jg
and
xchg
rcr
out
jmp
fwait
jg
sbb
fstps
cmp
das
rcrl
xor
std
mov
jmp
mov
les
push
xchg
cs
xchg
sub
pop
out
push
sub
daa
imul
push
pushf
clc
ret
cmp
pop
jp
cmp
push
fistl
subl
insb
pop
jb
dec
cli
incl
push
and
es
dec
sub
jg
call
jg
cmp
loopne
adc
add
sti
mov
and
or
movsb
in
in
or
les
cmp
insl
loopne
jmp
lods
loopne
ljmp
fs
rclb
mov
shrb
adc
clc
insl
dec
mov
icebp
loop
or
dec
sbb
pushf
inc
inc
push
mov
test
outsb
adc
mov
dec
outsb
popf
push
cs
fwait
es
lahf
cmpsb
dec
stos
jle
es
mov
push
pop
jnp
stc
filds
or
outsb
out
sbb
sub
jg
or
mov
dec
adc
mov
push
add
sbb
add
fbld
mov
jle
loope
daa
movsb
xor
xchg
sub
adc
stos
dec
sub
int3
shll
out
and
sti
cmp
or
and
pushl
mov
fistpl
into
negl
fstps
sub
jmp
je
sar
es
test
adc
fnsave
inc
push
pop
popa
fsub
stos
mov
fimull
fidivrs
add
bts
movsb
aad
adc
cld
dec
sbb
pop
jbe
dec
stos
dec
dec
pop
gs
jns
pop
rolb
fmul
push
and
mov
nop
insb
das
pop
ret
mov
sbb
or
insl
pop
clc
sbb
pop
sahf
sub
ja
inc
int3
aam
cmp
jae
data16
push
js
sbb
fbld
add
xchg
mov
call
test
ljmp
jmp
jno
in
xchg
sahf
nop
xchg
mov
mov
hlt
das
jno
ljmp
mov
adc
and
cmpsl
in
sub
and
ret
dec
das
dec
pop
mov
xchg
fdivl
push
xor
bound
sahf
movsb
xchg
push
pop
nop
data16
push
ds
pop
outsl
mov
adc
push
dec
add
cwtl
sbb
cmp
mov
call
incl
xchg
ds
inc
add
fwait
mov
dec
add
jbe
jmp
stos
mov
dec
loope
cmpsb
stos
jp
arpl
insb
out
xchg
adc
lea
js
xchg
ror
adc
es
clc
adc
jmp
jmp
sbb
icebp
or
rcrl
in
sub
mov
call
popl
cld
mov
daa
xor
sub
ds
out
add
or
dec
push
xchg
xchg
sub
rorb
xchg
movsb
add
gs
ja
inc
mov
cwtl
out
bound
fdivrl
or
push
loopne
push
outsl
test
and
pop
adc
add
fs
insb
mov
adc
sbb
cmpl
mov
jbe
lock
adc
call
dec
dec
int3
inc
in
and
mov
dec
sbb
cmp
mov
inc
out
cmc
cmp
insb
imul
mov
push
mov
dec
push
aaa
push
call
pop
out
ljmp
or
sbb
pop
push
adc
cmp
mov
cwtl
cmp
push
gs
cmp
sbb
enter
or
sar
add
sahf
jns
xchg
je
dec
movsl
mov
sbb
pop
and
inc
cli
in
add
or
aad
pusha
sub
jmp
enter
loop
xchg
outsl
mov
repz
test
call
adc
add
popa
dec
fistl
inc
jmp
ds
xchg
mov
insl
mov
xor
sbb
filds
and
cmp
add
rolb
clc
cmp
fwait
test
push
ja
mov
enter
mov
pop
test
pop
arpl
outsl
cli
mov
add
mov
scas
int
inc
pushf
scas
pop
inc
or
add
stos
mov
and
jg
mov
mov
lods
lret
imul
sbb
shll
hlt
in
das
mov
inc
popf
stc
ret
clc
je
dec
outsb
je
dec
rcll
mov
repz
sbb
cld
jg
inc
loope
push
ja
je
mov
inc
push
das
mov
pushf
push
lret
cmp
or
jmp
stos
outsl
insb
lcall
insb
mov
call
int
xchg
leave
fs
mov
add
nop
push
mov
add
and
in
xchg
push
pop
cmp
clc
fbld
clc
sub
mov
sub
mov
push
sbb
cmc
sub
xor
cmp
inc
push
out
or
jecxz
out
ret
ss
incl
add
movsb
inc
repz
clc
sti
pop
sbb
out
daa
dec
and
xchg
ss
call
mov
mov
xorl
psubd
in
dec
jb
dec
clc
arpl
scas
mov
mov
xchg
rcrb
sahf
out
mov
ljmp
xchg
pop
mulb
test
add
mov
jg
inc
sbb
mov
and
movsb
cli
sub
pop
js
mov
pop
add
mov
cmpb
es
in
cld
fcmovnu
mov
stos
ja
sbb
push
into
fisubs
sbb
xchg
aaa
out
fcmovnu
jb
or
imul
pop
or
add
dec
mov
cmp
outsl
adc
lds
addr16
inc
inc
sbb
or
pop
inc
mov
mov
adc
and
insl
or
mov
dec
jp
jecxz
mov
push
add
cmc
add
cld
adc
or
adc
rcr
dec
dec
jne
pop
sbb
subb
andb
ljmp
mov
xorb
jne
decl
sahf
pop
jb
mov
fmulp
xchg
ja
add
pop
xorb
cmp
lock
fcomip
push
lret
dec
ja
icebp
pop
or
and
sub
push
shlb
mov
or
jne
lea
lret
inc
mov
rorb
movl
pop
inc
fsubrl
jno
repz
jb
jns
ret
xchg
je
les
arpl
in
pusha
push
xlat
cli
push
call
lret
cmpsb
and
add
push
dec
pusha
outsl
or
lock
mov
jne
xor
lea
jg
call
sbb
bound
cld
sahf
sbb
xchg
jb
pop
xchg
popf
mov
add
sub
or
aam
mov
incb
popa
les
clc
inc
push
fs
pop
ret
push
pop
jno
dec
pop
and
inc
rorb
sahf
icebp
adc
adc
xchg
mov
ret
lock
jbe
aad
add
pop
jl
inc
test
std
aaa
pop
or
dec
xchg
mov
push
mov
mov
sbb
push
in
push
sbb
sahf
dec
sbb
pop
sbbb
sub
mov
stos
js
push
mov
aaa
out
jmp
sar
push
push
mov
faddl
mov
decl
jecxz
pop
test
adcl
add
inc
dec
jg
cwtl
lahf
dec
and
sar
xchg
pop
add
dec
paddusw
insb
cltd
out
test
add
aam
les
scas
mov
out
push
icebp
and
mov
inc
xor
cli
and
lcall
xchg
icebp
pop
cwtl
std
fstpl
imul
test
sub
or
pop
sbb
int
fcmovnu
sub
data16
pop
fisubrl
test
dec
lds
outsb
leave
jb
mov
sub
jns
jo
adc
fst
push
lcall
or
or
pusha
clc
cmovs
or
arpl
dec
inc
scas
add
repnz
or
xchg
sar
lcall
xchg
mov
ss
add
clc
jns
adcl
push
pop
loopne
push
jo
out
or
ret
dec
cltd
jmp
sahf
adc
leave
adc
cmp
push
push
cld
jg
int3
outsl
dec
lods
mov
insb
xchg
pop
je
jg
jb
dec
cmpsb
jne
mov
aad
and
fcmovnbe
pop
inc
subb
push
push
adc
mov
enter
mul
arpl
fimull
and
mov
fcomip
decl
or
xchg
pop
cmp
add
mov
adc
insl
andl
arpl
inc
das
push
loopne
inc
addb
mov
inc
lcall
sub
and
fwait
aam
inc
push
push
repz
in
scas
mov
inc
cmp
xor
test
repnz
jg
jno
scas
inc
pop
cmp
mov
mov
jl
xor
hlt
popa
stc
add
mov
shlb
cmp
scas
sbb
orb
xchg
and
ja
data16
out
xchg
icebp
movl
sub
mov
insb
xor
add
shll
jnp
ss
mov
add
sahf
imul
mov
fs
outsl
inc
std
arpl
dec
cmc
cmp
cmp
xchg
mov
hlt
outsl
or
jo
loop
dec
inc
incl
jg
jecxz
dec
xchg
addb
sbb
in
push
add
jg
flds
lock
and
pop
push
outsl
mov
repnz
sbb
push
adc
mov
push
test
cli
mov
lock
loop
or
dec
outsb
sbb
in
call
xchg
xchg
mov
mov
fbstp
stos
or
mov
fldl
adc
lods
aaa
xchg
dec
jne
inc
push
cmc
aaa
jbe
addr16
dec
int
xchg
push
inc
add
inc
popa
jb
add
fiaddl
pop
lock
ror
idiv
jb
and
inc
cmp
lcall
or
push
dec
inc
in
pop
xchg
jo
mov
adc
das
cli
jmp
inc
jmp
testl
and
mov
ljmp
mov
dec
cmp
add
xchg
outsl
sti
sub
xor
mov
aam
loope
jo
and
and
test
sbb
subb
jb
andl
or
mov
jo
imul
test
mov
test
out
push
xchg
clc
dec
mov
push
jle
xchg
push
test
or
push
pushf
in
mov
stos
clc
jp
scas
dec
or
pop
push
push
push
mov
pop
ret
mov
aad
pop
outsl
dec
mov
sbb
dec
jns
cwtl
nop
call
mov
jmp
push
aad
fildll
ljmp
pop
stos
xor
pusha
rcrl
enter
push
inc
cmpsb
bound
pop
loopne
cmp
or
mov
orl
mov
stc
cmp
sar
shrl
clc
xor
jge
cmp
push
sar
arpl
push
dec
es
sub
cmc
fadds
add
sbb
sti
lahf
pop
les
adc
ss
mov
pop
enter
int3
mov
adc
ret
mov
das
xchg
int3
push
push
adc
decl
sahf
jae
dec
sbb
icebp
sar
outsl
xchg
stos
mov
into
sub
pop
cmc
call
cli
in
icebp
push
sub
adc
bound
push
lcall
dec
mov
neg
xchg
lret
adc
shrl
fdivrp
pushl
pop
push
push
pop
or
flds
adc
xchg
cmpsl
lahf
xchg
das
enter
inc
std
int
rcll
aaa
in
dec
pop
ja
cld
fisttps
mov
stos
cmc
and
fsubr
xor
imul
aaa
fcoml
imul
int3
xor
lret
test
mov
mov
insl
into
cvttps2pi
mov
pusha
in
std
scas
dec
ret
loopne
and
in
loope
insl
sub
sub
add
decl
sub
out
add
insb
fstl
and
jg
sub
pop
xchg
pop
fidivrl
pop
push
dec
inc
jmp
clc
inc
or
rep
or
dec
stos
aam
ss
insb
std
mov
mov
hlt
mov
jb
pop
testb
imul
in
and
or
popa
push
push
add
pushf
gs
decl
mov
das
cmp
mov
ljmp
test
mov
inc
mov
sbb
out
xchg
pushf
lcall
sbbb
aaa
popa
xchg
cli
std
jns
mov
daa
inc
jne
mov
pop
divb
outsl
jg
je
loopne
lods
jb
gs
out
add
pop
xchg
pop
sti
pop
ret
mov
mov
out
sub
dec
js
or
insl
xchg
bound
dec
xor
sbb
push
push
loopne
add
aam
fs
jmp
xor
mov
mov
movsl
pop
fsubl
bound
xchg
das
cli
ja
push
imull
and
movsb
clc
icebp
jp
jb
push
outsb
add
cwtl
call
push
lea
push
mov
pushl
push
mov
or
push
jb
mov
adc
stc
stos
fs
adc
sar
xchg
mov
mov
jg
jns
mov
push
mull
pand
outsb
or
push
lcall
into
aam
scas
jl
add
dec
and
outsb
pop
repz
sbb
lahf
pop
fdivrs
lea
shl
jecxz
push
xchg
test
dec
xchg
mov
dec
mov
fsubs
pop
loopne
nop
cmpsl
mov
fimull
ds
daa
xchg
scas
das
or
sub
lods
cmp
or
hlt
decl
inc
lret
jmp
xor
or
fs
cwtl
loop,pn
inc
jg
call
lea
pop
fldcw
arpl
fwait
push
sti
movsl
inc
mov
cmp
std
push
subb
pop
cmp
in
mov
jo
add
sbb
popa
loopne
aas
test
sbb
inc
mov
dec
sub
shlb
data16
add
ljmp
movsl
xchg
xor
sub
incl
mov
outsl
loope
jns
mov
pshufw
adc
jmp
sbb
das
push
xor
jbe
add
loop
mov
orl
or
adc
in
xchg
ljmp
incl
sahf
mov
ljmp
add
gs
fisttpll
pop
adc
aam
pushl
stos
jge
and
and
sbb
pop
cli
inc
xor
out
sub
jmp
lods
dec
adc
jb
jns
mov
sub
fprem1
mov
xchg
cs
push
fldcw
imul
cli
add
jg
mov
mov
jecxz
jl
addl
imul
mov
pop
dec
pop
fdivrl
insb
outsb
cld
cld
pop
and
mov
pop
add
or
pop
dec
dec
sbb
nop
push
sub
push
xchg
call
adc
cmp
in
dec
jns
cltd
dec
mov
cld
decl
popa
xchg
notb
sbb
jmp
aas
in
xchg
push
jmp
mov
sub
aas
jp
pop
divb
mov
mov
fwait
push
fcmovbe
stos
mov
mov
cmpb
hlt
jbe
imul
adc
rorb
ljmp
push
pop
bound
xchg
dec
inc
mov
fldenv
std
pushf
fwait
shlb
jbe
in
nop
stc
jge
test
bound
stos
mov
push
loop
jne
pop
pop
push
and
inc
adc
xor
lret
mov
fs
push
jo
pusha
js
lock
xor
sub
mov
stos
fsubp
adc
add
ret
sub
ss
ds
je
nop
dec
sbb
cli
jne
bound
scas
jp
loope
pop
push
shrl
xor
jb
lock
shrb
push
icebp
das
adc
jno
and
push
jno
xchg
movsb
incl
adc
pop
mov
cmc
jecxz
add
push
lea
sbb
je
adc
jne
dec
fwait
imul
cld
stos
and
push
mov
call
jp
fbstp
ja
add
shll
lods
clc
in
mov
jg
xor
xor
xchg
mov
push
out
adc
lret
lea
and
mov
hlt
scas
fiadds
repz
mov
inc
fists
pop
push
in
ds
mov
sahf
imul
add
xchg
jle
xchg
jmp
jmp
in
push
ds
inc
sub
xchg
loope
cld
inc
cmpb
and
sbb
js
out
push
mov
jl
or
cs
jg
out
add
cld
cmp
cmp
sub
jg
push
out
les
or
sti
call
incb
mov
push
sarb
sbb
dec
insb
iret
aam
in
shl
add
or
fcoml
scas
clc
inc
iret
nop
into
rolb
fisubl
iret
test
sub
or
jg
pop
mov
and
insb
push
jle
call
dec
add
out
outsb
push
lcall
std
or
xchg
inc
sarl
dec
repz
mov
inc
jne
fisubl
icebp
lcall
xchg
adc
push
mov
clc
mov
and
iret
pop
add
decl
gs
mov
popa
xchg
test
mov
or
dec
push
push
fsubrs
add
or
or
inc
mov
xchg
push
rorb
mov
sti
clc
fidivs
pop
ds
push
loope
clc
lcall
int
sub
pop
ds
lret
inc
xor
xor
sub
mov
addr16
xor
shl
mov
les
xor
mov
push
or
movl
or
or
cld
call
push
decl
arpl
outsl
add
inc
lods
repnz
pop
push
mov
adc
push
pop
lods
dec
test
dec
lret
cli
jnp
mov
pop
mov
xchg
pavgb
decb
fidivrl
dec
in
imul
ss
sbb
repz
rcll
mov
into
or
xlat
jae
enter
cmpsb
cld
mov
jo
cmpsl
lods
adc
add
jno
ja
push
xchg
cmpsl
mov
in
or
or
push
lock
mov
iret
mov
add
push
inc
outsl
xchg
pop
dec
stos
mov
outsb
cwtl
lret
sbb
add
and
mov
mov
push
jl
stos
add
or
nop
inc
leave
mov
clc
or
dec
loope
in
mov
inc
data16
pop
dec
std
arpl
cmp
pop
cmp
jb
pop
ror
push
jg
pop
int3
push
cmp
es
fbld
cmpsb
mov
andl
dec
jmp
or
sarb
adcl
stos
mov
mov
sub
lock
int3
mov
xchg
insb
movsb
push
or
jae
push
ret
xor
fdivrs
mov
out
out
dec
mov
and
pop
pop
mov
xchg
xorb
int3
rclb
pop
adcl
mov
loopne
xlat
fisttps
jge
arpl
out
mov
xchg
mov
adc
daa
aad
pushf
movsb
enter
insl
pop
mov
mov
and
fisttps
push
push
pop
pop
xchg
pop
pusha
mov
sbb
cld
lods
sbb
xchg
xlat
sub
xor
adc
xchg
addr16
rclb
xchg
cwtl
stc
mov
fstps
mov
ds
out
inc
add
jbe
sub
mov
cwtl
or
dec
xor
cmp
call
jle
daa
mov
popf
cwtl
xor
push
jle
sbb
jg
loop
insb
bound
clc
jge
in
xchg
outsb
add
sub
jle
sahf
lret
jecxz
std
cmpsb
jmp
mov
lods
jnp
add
ss
pop
lret
xchg
inc
loop
pop
mov
add
aam
cmp
icebp
mov
and
and
push
mov
cld
or
test
bound
jl
hlt
loopne
addb
ja
sbb
inc
jg
push
addr16
xchg
fs
cltd
xor
cld
rorb
add
add
loopne
jecxz
outsb
add
xchg
outsl
xchg
adc
je
mov
dec
fldl
pop
add
bnd
or
cmpsl
xor
and
push
in
dec
imulb
inc
test
mov
mov
pop
cwtl
dec
mov
jbe
decl
icebp
push
lret
pop
jle
xor
shl
jecxz
pop
mov
mov
pop
aam
movsl
rcr
sbb
iret
push
movsl
lcall
sub
mov
xchg
inc
xor
sbb
mov
lds
mov
stos
into
out
pop
cli
ret
jb
incb
sbb
in
cltd
nop
cmpsl
out
movsb
outsl
xchg
int
inc
std
icebp
cmp
add
sbb
adc
ljmp
test
cmp
stos
pop
or
decl
sub
or
es
rcll
outsb
bound
jbe
mov
jg
mov
pop
dec
mov
sbb
int
sub
incl
lret
adc
scas
mov
dec
xor
aas
insl
aam
cmpsl
mov
icebp
daa
ja
lcall
cmpsb
mov
fidivs
sub
push
out
sahf
sbb
cmp
inc
ret
fwait
icebp
jp
and
mov
and
mov
ss
outsl
subb
stc
mov
push
push
loope
push
leave
dec
loope
mov
bound
cwtl
pop
fisttps
out
nop
push
and
or
je
or
xchg
mov
lock
rclb
dec
leave
sub
jo
idiv
std
adc
push
adc
aaa
pop
data16
jmp
into
out
xchg
mov
mov
push
das
cli
ss
xchg
mov
or
imul
jmp
mov
ret
dec
imul
ds
das
push
dec
ret
ljmp
lret
std
adc
mov
inc
or
aad
dec
fmull
dec
sbb
or
loop
aaa
popa
movsl
cmp
cmpsl
lods
fcmovu
mov
mov
sub
outsb
ja
shr
adc
dec
mov
sti
stos
sub
mov
jnp
adc
std
cmp
lock
xchg
push
xchg
mov
sahf
frstor
scas
inc
fildl
mov
jo
sbb
jno
push
hlt
gs
xor
incl
mov
test
sahf
cmp
inc
lret
add
incl
repnz
mov
cli
lcall
imul
data16
lret
enter
jg
clc
mov
aad
mov
or
outsb
xchg
aaa
in
adc
adc
std
pushl
sub
or
push
fisttpl
into
sbb
xor
mov
sbb
inc
pop
out
and
lock
add
shlb
lcall
cmp
inc
aad
roll
pop
sub
lock
repnz
sbb
in
repnz
pushf
dec
mov
rcrl
sbb
data16
aad
add
ljmp
jle
adc
xchg
push
int3
pop
test
push
cltd
cmp
in
incl
rcrl
daa
les
scas
ret
inc
push
sub
movsl
mov
into
push
movsl
icebp
jl
mov
and
jnp
decb
mov
jmp
arpl
arpl
fisubl
inc
and
ja
call
add
aas
int
pop
push
xor
loope
mov
lret
mov
clc
mov
imull
push
xor
xor
outsl
mov
mov
js
lahf
gs
mov
push
inc
nop
loope
pop
stos
sub
mov
jne
pop
dec
aam
scas
or
shlb
in
sar
sub
push
int3
push
sub
pop
outsb
adc
std
or
cmpsl
je
dec
pop
mov
shll
sbb
add
push
lods
rolb
shlb
mov
inc
sbb
shl
or
push
or
cmp
data16
jns
push
pop
inc
jae
cld
idiv
in
loopne
jo
lret
add
cmp
jl
inc
out
movsl
hlt
inc
and
gs
call
ljmp
or
sbb
stos
jg
jnp
imul
xchg
jnp
rcrb
aad
and
dec
xchg
xor
sbb
fstpl
bound
cld
jge
negl
outsl
scas
inc
mov
out
loope
adc
das
rol
mov
sbb
bound
and
and
pop
or
sti
sbb
fcoml
in
or
push
test
mov
fdivrs
loope
lahf
cli
cmp
add
hlt
lret
repz
cwtl
jbe
js
dec
aas
cmpsb
out
ja
ss
ds
bound
lret
call
aad
xchg
out
lods
scas
clc
filds
cmp
and
sbb
push
popf
scas
mov
jge
nop
mov
push
dec
pop
xchg
inc
xchg
sbb
add
cmpsl
jmp
lods
pop
hlt
push
xlat
add
push
inc
lods
lret
mov
popa
xchg
adc
cmpsl
adc
lea
xor
cs
iret
jne
push
mov
pop
andb
pop
inc
mov
jb
xchg
test
lcall
fstps
dec
ja
imul
test
cs
jmp
sti
outsl
mov
sub
insb
jo
inc
mov
dec
cli
addr16
dec
std
inc
cmp
pop
nop
cmc
out
or
pop
xchg
outsl
cli
lcall
mov
pushf
mov
lods
dec
fnsave
int
push
out
shlb
nop
lods
test
cmp
sub
sub
adc
icebp
mov
fprem
iret
testl
insl
adc
int
shr
pop
jmp
jo
je
jg
mov
sar
out
sub
fucom
insb
test
stc
daa
cmp
push
incb
dec
jmp
push
lret
mov
mov
add
or
stos
sbb
inc
dec
insl
int
xchg
shlb
scas
push
es
nop
cmpl
inc
lods
pop
outsl
sub
jecxz
incl
mov
jmp
int3
adc
xor
mov
xchg
dec
xchg
adc
and
cmp
pop
jne
es
mov
jg
test
pop
mov
mov
imul
call
mov
jl
cmp
sub
aad
xchg
sbbb
fmul
jp
out
fmulp
shll
mov
sub
or
jbe
push
popf
movsb
out
cmpsl
dec
cmp
in
adc
es
lcall
adc
xchg
stos
push
cmp
jo
ljmp
push
add
out
add
lock
decl
dec
pusha
jmp
test
arpl
xlat
cmpsb
xchg
ds
sbb
lods
imul
dec
fsubrl
hlt
inc
dec
jl
mov
xor
xchg
mov
cs
lods
inc
in
jne
loopne
loop
rolb
cmp
mov
cmp
lcall
mov
mov
test
jg
test
cli
pop
push
push
mov
add
pushf
jg
fucomi
clc
pushl
ljmp
jl
push
movsb
jl
jmp
test
outsl
movsl
aaa
sbb
filds
in
sbb
fs
lret
mov
sti
repz
fcmovnbe
pusha
ret
sbb
inc
jmp
cmp
adc
insb
lock
cmpsb
mov
pop
or
inc
icebp
mov
mov
add
lret
xchg
jo
popa
inc
adc
out
push
data16
mov
aas
or
push
in
pop
or
pushl
ds
sahf
sbb
adc
popf
into
arpl
inc
push
rorl
ljmp
shrb
in
cld
loop
icebp
outsb
movsl
enter
inc
and
fdivrp
sbb
jmp
fldt
jmp
inc
push
daa
and
loope
or
les
test
aam
les
cmc
mov
and
inc
jp
and
lcall
cmp
mov
loopne
lret
popa
enter
cmp
mov
push
sub
xor
aaa
inc
rorb
adc
fcmovne
cs
adc
cmp
clc
aaa
mov
push
std
test
inc
outsb
adc
js
inc
or
sar
repnz
mov
incl
cld
ja
cltd
lods
outsl
sub
cmp
repnz
repz
pop
std
jmp
mov
lock
pusha
push
sarb
sbb
test
lahf
lods
mov
jmp
pusha
mov
les
pop
push
cltd
sarb
int
mov
lahf
mov
add
lret
cmpsl
mov
jo
sub
push
adc
scas
xchg
movsb
call
jb
shl
mov
mov
jge
das
inc
jmp
inc
std
scas
sbb
pop
adc
sbb
xlat
sti
in
sub
gs
dec
out
cmp
into
mov
adc
cmp
out
nop
lock
jl
adc
pop
adc
and
mov
rorb
cld
add
cmpsl
xchg
and
mov
rorb
pop
xchg
decl
mov
rorl
sti
daa
pop
dec
dec
mov
ret
push
hlt
dec
pushf
push
cmp
cli
pop
add
lds
lret
scas
lds
mov
fs
mov
xchg
pop
cld
mov
pop
dec
and
jnp
andl
mov
cmpsl
shr
and
push
and
pop
nop
shlb
xor
je
scas
ljmp
divl
js
lahf
lods
jg
or
adc
jb
outsl
es
sub
lret
adc
lock
sub
les
pop
pop
fsubr
insl
cld
filds
adcb
push
cmp
jge
jnp
fstl
xchg
negb
pop
cld
mov
enter
loope
dec
sub
mov
popf
or
decl
xor
cmc
mov
lods
lock
pushl
mov
aaa
pop
leave
pop
xchg
dec
sti
adc
sub
jbe
popa
adc
mov
popl
iret
stos
inc
xor
add
mov
xchg
icebp
negb
add
cs
cmc
jmp
rcrb
testl
jge
mov
pop
sbb
jp
addr16
jl
sahf
adc
push
lock
sarb
pop
pop
jmp
push
fmuls
sub
add
mov
push
sar
add
cmp
outsb
inc
xchg
inc
jecxz
mov
jle
cmp
mov
loop
and
imul
dec
add
call
xchg
dec
cmpl
or
arpl
mov
pop
gs
dec
mov
inc
std
mov
add
fsts
aam
sar
sub
scas
fimuls
mov
adc
fsubs
loopne
das
dec
dec
xor
xchg
sub
cwtl
out
jno
add
aas
sbb
mov
stos
inc
cld
sub
sub
cmp
and
push
and
mov
pop
sbb
mov
inc
hlt
insb
or
fcomps
les
hlt
incl
loopne
or
les
cmp
in
xchg
lds
fiaddl
rcr
xchg
push
xorl
hlt
pushl
sbb
or
stc
dec
add
jae
xor
outsb
imul
lahf
jmp
leave
sbb
outsb
jo
test
sbb
pop
inc
jo
movsl
push
shl
add
cmc
test
cmp
lcall
stc
rolb
pop
dec
je
leave
jo
and
mov
leave
push
push
ljmp
add
shlb
push
push
push
test
movsl
add
inc
sbb
xlat
fdivrs
test
jne
push
test
insl
ljmp
push
in
mov
ljmp
sub
outsl
lahf
pop
test
cmpsl
in
jne
popa
dec
call
and
andb
or
leave
inc
data16
out
and
cmp
sub
fwait
shrb
adc
fstl
fld
jmp
mov
cmp
mov
xor
cmp
or
mov
fwait
cmpsl
jp
test
movl
cmpsl
iret
sub
or
aad
call
movsl
fdivrs
iret
add
mov
cmp
lds
daa
and
cs
jp
cmp
mov
scas
ds
mov
dec
std
mov
int3
aad
jb
icebp
fildl
mov
mov
loop
loope
fcomps
jl
rolb
mov
cmp
adc
xchg
pop
inc
lds
sbb
rol
sbb
mov
xchg
lock
cmp
inc
mov
test
dec
push
pop
sub
cmc
push
adc
cmpsb
insl
mov
sub
sub
xchg
xchg
scas
into
and
test
into
mov
cmpsb
pushl
out
sar
sbb
test
enter
xchg
xor
mov
xchg
adc
insl
dec
shlb
cmpsl
ret
sahf
push
jp
cmp
mov
jle
add
pop
inc
mov
adc
xchg
dec
mov
mov
cmp
mov
cmp
sbb
call
dec
out
pop
mov
cld
pop
cmp
adc
lahf
push
or
idiv
mov
movsl
mov
push
sbb
mov
mov
sti
jg
sbb
push
or
adc
in
xchg
cmp
loop
sub
jg
ja
mov
js
jmp
outsl
scas
mov
scas
mov
loopne
mov
out
jmp
lea
jbe
imul
jp
das
jo
and
cmp
call
jmp
push
add
jl
push
test
add
test
les
jb
lock
rcl
push
mov
bnd
das
cmpsb
push
or
add
in
inc
bound
ss
mov
mov
icebp
aam
fdiv
stos
or
mov
mov
test
fucom
xor
push
sbb
lods
outsl
mov
aas
mov
add
and
dec
mov
iret
or
clc
xchg
adc
push
dec
lret
ljmp
ss
xchg
stc
inc
cwtl
sarl
scas
push
xor
add
cmpsb
inc
jne
loop
ja
jns
rolb
andl
push
lcall
outsb
push
push
out
xor
inc
subl
sub
gs
ljmp
mov
add
into
fwait
inc
mov
or
movsb
stos
out
das
loop
mov
cmc
cmp
lods
ds
incb
xchg
cmpsb
mov
sbb
call
adc
mov
xchg
test
fwait
fwait
rorb
std
xchg
jg
stos
out
jne
lock
and
jg
loop
lods
fs
mov
lds
or
jg
adc
loope
inc
adc
stc
dec
sub
adc
adc
xlat
mov
arpl
ror
xchg
inc
jmp
adc
xchg
scas
and
dec
add
icebp
int
popf
es
xchg
cmp
sahf
mov
lds
mov
mov
retw
jp
outsb
xor
inc
bound
inc
pop
add
push
std
pop
ret
pop
lock
orb
stc
fsubrs
and
sti
xor
and
push
loop
enter
mov
fdivr
es
mov
lret
dec
push
xchg
sahf
test
pop
lcall
lcall
cmp
push
push
xchg
dec
aad
sbb
call
adc
enter
dec
insl
and
fisttps
mov
cmc
clc
inc
mov
in
enter
inc
or
decl
stc
repnz
mov
add
aad
pop
cmp
xlat
scas
call
push
cmp
sub
sarl
mov
mov
jbe
gs
imul
adc
leave
xor
add
and
es
sub
xchg
jp
mov
push
jg
mov
mov
cs
mov
mov
pop
dec
test
mov
jecxz
pop
sub
xor
cmpsb
dec
mov
idivb
enter
or
inc
nop
clc
shll
jo
jmp
fdivrp
jbe
int
or
mov
enter
cmp
insb
dec
add
mov
add
push
rclb
jmp
stos
push
or
ljmp
inc
inc
int
hlt
push
out
nop
push
add
jo
dec
lods
dec
cwtl
xchg
lcall
dec
or
clc
mov
pop
push
mov
stos
push
jg
pop
mov
sbb
fsubs
inc
pop
inc
ljmp
out
inc
enter
sti
mov
xchg
hlt
cmp
mov
mov
dec
cmp
add
in
or
sbb
push
mov
jge
xor
sub
pop
mov
fnstsw
mov
inc
in
and
pusha
cmp
sti
mov
js
mov
add
pop
or
fsubrs
and
idiv
pop
or
lret
rcll
lds
jb
lock
xor
mov
dec
pop
sbb
outsl
and
pop
dec
pop
mov
push
dec
sbb
or
ljmp
adc
pop
dec
loope
inc
dec
dec
gs
mov
mov
sub
inc
outsb
xchg
out
ja
idiv
in
js
adc
mov
xchg
mov
or
inc
xchg
lock
add
fcomip
mov
fisubrs
scas
push
sarl
jno
lcall
jg
cmp
sbb
je
jne
pop
enter
imul
movsl
sbbb
jmp
add
sahf
lods
mov
add
cmp
bound
jno
addl
shrb
sarb
push
add
mov
dec
fildll
xor
jb
jae
dec
mov
push
std
inc
out
clc
xchg
xor
mov
insl
push
jl
jmp
inc
and
dec
cli
pop
insb
call
movl
mov
pop
lea
lea
nop
in
adc
jbe
inc
jmp
out
xchg
xor
xchg
mov
jns
mov
push
pop
sbb
adc
lret
shrl
test
mov
add
xor
repnz
xchg
cli
fisubrs
pop
je
ljmp
imul
jg
mov
jb
xor
or
rolb
push
cmc
imul
jg
testl
jb
jne
lods
scas
jmp
int
xlat
cmp
std
mov
lock
jo
sbb
push
push
movsb
shrl
popa
scas
sbb
aas
jecxz
dec
cmp
cwtl
rcrb
dec
bound
inc
sti
roll
clc
mov
push
cmp
jne
cmc
mov
jg
pop
shlb
movsl
mov
jge
call
and
inc
ret
pop
int3
xchg
sub
pusha
sub
fiaddl
decl
and
cli
inc
fldl
xor
pop
jbe
add
sahf
and
fcomp
mov
inc
in
popa
cltd
sar
out
mov
push
insl
push
mov
scas
cmp
mov
sti
cmp
mov
popf
jmp
mov
mov
jle
or
mov
pop
add
call
out
fsubrs
mov
out
fisttpl
sub
stos
cmc
aad
add
mov
push
shll
aaa
sarl
and
push
aam
mov
lcall
add
dec
aaa
std
incl
jp
mov
stos
add
jae
ss
in
outsl
and
jno
orl
icebp
scas
mov
xchg
call
add
out
mov
sbb
leave
icebp
sbb
inc
mov
out
push
decl
push
dec
sar
pushf
aad
or
pop
mov
ss
ja
xchg
dec
pop
or
insb
and
jmp
pop
and
jp
out
daa
mov
lret
add
cs
adc
int
mov
cs
mov
lock
lcall
adc
addr16
cmpl
lock
je
cld
dec
add
pop
mov
pop
bound
loope
incl
push
movsb
stos
sbb
dec
ret
call
cli
ljmp
mov
pop
rcr
mov
mov
cwtl
test
out
loop
setae
int
or
sbb
rorb
inc
add
hlt
iret
popf
cmpsb
mov
push
cli
mov
cli
loopne
push
loop
push
ret
rorb
or
jo
mov
popa
pop
mov
jle
jno
fs
cmp
push
push
xor
flds
lock
mov
push
ds
outsb
lcall
lcall
mov
cli
push
sahf
dec
je
xor
lods
inc
xor
test
adc
or
aas
and
test
mov
cmp
adcb
jmp
les
mov
xchg
ret
push
dec
lcall
jg
xchg
ss
add
mov
push
mov
inc
ja
pop
es
mov
insb
loope
out
orb
int3
mov
test
cli
mov
cmp
pop
or
lods
pop
sbbb
in
jne
jo
cmp
fistps
cmp
pop
fmulp
jo
fiadds
adc
cmp
add
in
pop
lock
ret
ss
mov
fwait
cmp
mov
ficoms
jg
fsubrl
jo
push
sub
dec
push
pop
in
xor
stos
inc
movsb
cmp
rcrl
or
xor
cmp
hlt
sbb
sbb
lods
stc
imul
inc
and
mov
or
arpl
das
pusha
adc
xor
push
stc
and
iret
pop
cmp
fdivrs
push
lcall
and
decb
es
gs
rolb
inc
es
and
sbb
dec
pop
lds
or
mov
mov
xorb
sub
ds
jbe
out
dec
jne
add
mov
clc
aaa
jo
into
mov
cwtl
xor
mov
jle
repz
sub
or
mov
aaa
mov
mov
jp
mov
jmp
or
jns
pop
xorb
push
xchg
test
clc
and
jg
inc
add
test
repz
dec
scas
xor
mov
adc
cmpsl
lock
movsl
cmp
aad
xchg
mov
fildl
fwait
mov
or
mov
subb
faddl
add
add
nop
fists
cmp
test
sbb
clc
cmp
sbb
stos
fbstp
xor
mov
decl
int
dec
mov
out
ds
jg
and
push
inc
and
and
mov
icebp
mov
jb
jns
push
pop
pop
call
ss
push
das
mov
nop
sub
lcall
push
and
jno
fisubrl
pinsrw
insb
or
insl
in
idiv
dec
or
mov
xor
aas
scas
out
mov
insb
pop
pop
ret
sub
mov
mov
mov
jmp
scas
adc
push
xchg
sub
xchg
lcall
outsb
cmpsb
mov
dec
fsubrl
dec
add
or
jg
jbe
pop
ret
imul
cli
ja
ss
mov
lods
push
push
jecxz
bt
dec
and
in
pop
pop
cli
repz
adc
lahf
fdivs
jns
subb
xchg
lods
in
inc
add
cmpsl
xchg
ds
inc
stc
or
fildl
js
inc
cmpsl
mov
xor
pop
xor
aaa
mov
sarb
arpl
in
scas
clc
fwait
out
mov
add
les
je
cmp
push
xorb
das
adcb
push
cmp
inc
movsb
mov
push
pop
pop
inc
rolb
int3
mov
imul
fwait
jl
test
mov
incl
mov
sbb
cwtl
imul
inc
jae
cmp
cmpsl
mov
pop
ret
fbld
movb
mov
add
mov
cli
aaa
jmp
xor
xchg
mov
mov
aam
decb
sub
add
shl
fnsave
push
mov
test
jg
adc
or
mov
je
add
xor
int3
inc
mov
or
pop
icebp
cmpsb
scas
cs
cwtl
fsubrs
in
popa
inc
das
pop
in
enter
pop
bound
jle
lea
notb
andl
xor
mov
push
sbb
sbb
loop
push
mov
push
mov
push
sbb
push
popf
nop
mov
adc
mov
addr16
jno
es
fidivs
into
sub
das
mov
hlt
mov
inc
push
mov
aam
psubd
cmp
sbb
test
dec
cli
inc
sub
cmp
jg
xchg
mov
mov
fnstsw
fistl
lret
push
popf
jae
inc
fisttps
dec
fdivr
pop
pop
dec
xor
xchg
inc
jl
mov
ds
jmp
enter
shlb
shl
ja
stos
xorb
mov
decl
addr16
adc
out
aas
xchg
push
test
aaa
nop
cli
xchg
fbld
sbb
pop
sbb
fiadds
jp
insb
inc
lahf
sub
mov
adc
repnz
out
push
repz
rcr
adc
or
call
aam
adc
pushf
sahf
push
std
subb
xlat
cltd
addl
nop
lea
pusha
fadds
insb
cmp
adc
pop
out
mov
in
xor
ret
pop
pop
mov
or
sahf
add
aam
lods
add
jo
xor
jg
jno
int3
shll
fisubrl
add
jmp
icebp
adc
jmp
dec
lcall
icebp
das
push
into
xchg
and
pop
push
push
sbb
outsl
shr
or
mov
shll
cmp
decl
push
dec
cmc
outsb
pop
cld
clc
push
push
shl
mov
inc
inc
ds
inc
push
mov
imul
call
pop
jg
loope
mov
aas
lods
dec
loop
cld
das
hlt
repz
into
aad
pop
xor
hlt
fistpll
pop
xchg
popf
jle
dec
jp
insb
gs
jmp
dec
mov
jnp
lret
cli
pop
pop
dec
and
jno
fwait
loope
stos
rcr
loop
mov
pop
sahf
out
mov
imul
adc
stos
hlt
scas
inc
cmp
in
and
xor
push
mov
dec
mov
fbld
int3
jle
push
jno
and
jmp
gs
cmp
cmp
sar
int3
and
jge
jmp
dec
pusha
and
pop
fisubrs
and
hlt
or
or
jl
pop
das
movsb
xor
movsl
ret
xchg
push
inc
lret
mov
or
lret
lcall
push
mov
xor
jnp
test
shrb
dec
movsb
xor
xor
and
cmp
pop
data16
cs
cmpsb
out
shll
test
ljmp
repnz
mov
int3
mov
leave
arpl
dec
pop
cwtl
enter
call
push
mov
rorl
das
dec
sub
push
into
out
lret
cmp
sar
cmpsb
add
cmp
xchg
jb
xor
jmp
clc
int3
fisttps
pushf
cmp
sahf
push
fildl
hlt
daa
or
inc
mov
ret
inc
dec
inc
cli
adc
inc
mov
mov
push
shrl
mov
fstps
idiv
xor
lods
mov
test
rolb
mov
cwtl
sub
adc
es
ljmp
or
das
fwait
jb
adc
hlt
xchg
and
ret
mov
mov
fcmovne
dec
es
or
js
add
mov
push
pushl
mov
pminub
sbb
mov
div
dec
add
jnp
out
adc
or
cmp
pop
add
cld
inc
jb
iret
xlat
xchg
insl
cld
push
ljmp
push
jg
sti
ror
fs
sbb
sub
push
push
mov
sbb
pop
cs
adc
lods
sbb
and
clc
in
call
jmp
jl
scas
mov
outsl
and
daa
pop
push
std
pop
mov
test
inc
je
sub
pop
inc
lods
push
shrb
sahf
iret
in
pop
push
mov
dec
and
loopne
sbb
test
ja
add
cltd
jp
imul
js
mov
iret
lods
mov
sarl
cs
xchg
les
mov
pop
dec
iret
fdivrs
rorb
sbb
arpl
vlddqu
mov
in
jae
lahf
ds
lods
shl
sar
fldt
jl
xchg
loop
outsl
bound
adc
ficoml
ds
mov
lods
leave
mov
cmp
testl
popf
add
push
cmp
cmpsl
jb
adc
dec
sbbb
dec
out
addr16
ja
pop
sub
sub
popa
push
xchg
enter
fnstenv
notb
hlt
xchg
sub
cmp
std
mov
outsb
inc
jb
cmp
xchg
xchg
add
jmp
push
jp
jo
mov
repnz
or
aaa
cltd
pushf
fdivrl
mov
and
js
jp
or
push
pop
fwait
cmp
dec
jae
lcall
jbe
into
pop
pop
sub
sahf
dec
jns
ret
lcall
xchg
jmp
jb
ss
nop
pushf
xchg
push
jge
movsb
cmp
mov
test
mov
pop
sti
jns
inc
pop
daa
dec
ret
ljmp
and
icebp
mov
mov
sbb
rcll
mov
push
lock
outsb
mov
pushl
int
fisubrl
movsb
xchg
jle
mov
adc
cmp
push
pushf
push
mov
sbb
mov
or
enter
aas
shr
cwtl
xchg
lea
rclb
mov
inc
or
test
cmpsb
pop
ss
jp
dec
mov
jmp
lods
push
mov
add
pop
and
inc
popf
xor
shlb
xor
in
mov
call
in
xchg
dec
sti
jno
fnstsw
cmp
sub
or
popa
xchg
adc
pop
sbb
ja
cld
pop
icebp
js
mov
addr16
adc
and
mov
cmpsl
pop
xor
in
sub
outsb
inc
lret
mov
test
out
xor
cmpsl
jl
test
adc
jo
fldl
and
clc
js
out
mov
jg
jle
sahf
inc
movsl
ljmp
lret
mov
dec
mov
push
int
xor
pop
xchg
push
aam
pop
ljmp
sub
imul
push
push
cmpsl
cmpsb
out
out
push
negb
inc
loop
push
push
sub
cmpl
adc
mov
ljmp
ss
add
in
stos
lods
mov
stos
fs
lahf
pusha
loopne
dec
aad
decl
mov
push
mov
jmp
xor
xor
pop
sbb
js
mov
lcall
bound
loope
inc
pop
mov
rol
jmp
das
ljmp
mov
test
add
mov
xor
inc
fsubr
push
rorl
or
xorb
xor
daa
lcall
cli
in
scas
test
testl
or
jle
rclb
xchg
std
dec
sub
lret
movb
loope
cli
add
lods
jg
ret
add
sarl
mov
lahf
or
jle
xor
jne
push
fwait
stc
pop
cli
push
lds
cmp
adc
push
jmp
enter
push
jle
push
shrl
inc
mov
dec
mov
jle
jo
push
in
mov
scas
xor
add
scas
lods
mov
test
sbb
push
or
js
lea
imul
pushw
xor
mov
xor
test
cmp
dec
pop
icebp
pushl
movsb
in
stos
in
adc
add
push
imul
in
jl
mov
sub
sahf
or
ljmp
dec
lahf
and
scas
push
daa
ja
jno
daa
popa
fistpl
decl
shl
adc
mov
add
movsb
sbb
inc
cli
mov
sahf
lds
cwtl
mov
push
pop
jbe
mov
dec
mov
pop
fstpt
lea
out
shll
adc
daa
xchg
dec
jmp
scas
fiaddl
jno
nop
adc
aam
std
jg
cli
and
push
inc
mov
lcall
arpl
js
scas
add
ja
js
fbld
aam
je
inc
add
aas
sbb
adc
pop
xchg
adc
mov
add
xchg
add
aaa
jge
loopne
pop
cmp
sbb
clc
ss
in
dec
jmp
mov
jmp
jmp
sbbl
add
adc
notl
ljmp
icebp
test
xchg
xchg
pop
jno
sub
sub
lcall
xchg
insb
inc
out
sahf
mov
into
les
shrb
or
push
adc
popf
mov
in
test
stos
loopne
mov
ret
pop
das
in
ds
pusha
popf
fmul
ss
xchg
inc
testb
or
jbe
pop
adc
mov
add
inc
cmpsb
xchg
les
cmp
inc
imul
and
cmp
cmp
push
fdivrp
mov
outsb
mov
jg
imul
sbb
jge
dec
fisubrl
ret
shll
icebp
jmp
mov
cmp
gs
mov
das
push
scas
insl
xor
lods
jae
push
jle
xor
xchg
pusha
dec
aas
cmpsl
insl
add
ja
inc
fs
xor
push
lock
lock
xor
repnz
mov
xchg
sbb
sti
cmp
movsl
call
and
pop
aam
test
call
sbb
std
xchg
push
jmp
lret
es
js
insb
jo
ljmp
je
movsl
sar
je
rclb
test
imul
ds
dec
sbb
sbb
mov
sub
cli
out
scas
or
mov
scas
ljmp
pop
pusha
cmp
in
stc
pop
decl
push
ficompl
adc
and
loop
sub
fisttpl
jne
mov
dec
mov
cmpsl
jo
rolb
sub
clc
scas
sbb
inc
dec
test
add
es
sarl
mov
stos
sahf
movhps
adc
pushl
push
repnz
mov
push
add
fs
inc
outsl
sbb
cmc
out
cmp
ljmp
pop
mov
andps
mov
push
int
mov
add
popf
jo
aad
incl
jb
dec
adc
and
scas
ret
outsb
das
mov
loope,pn
lcall
sbb
idiv
mov
dec
lea
dec
lock
lret
aad
jo
xor
mov
aam
jae
dec
ret
mov
cmp
sub
fisubrs
or
mov
test
in
jg
xchg
pop
cmp
addr16
xor
sbb
jle
mov
adcb
mov
nop
mov
mov
rorb
mov
loop
dec
pop
ds
dec
jp
je
sbb
mov
cld
mov
mov
cmp
shr
je
or
cltd
add
sub
icebp
mov
pop
or
es
mov
cwtl
and
je
add
jle
inc
int3
pop
inc
out
loope
dec
mov
fs
push
pop
sub
mov
ljmp
cmc
inc
out
xchg
stc
iret
add
and
std
or
scas
inc
dec
bswap
scas
xchg
in
or
and
or
push
stos
sbb
push
mov
cld
bound
xchg
stos
div
lods
lcall
adc
mov
ret
mov
xor
jb
ret
xor
push
lcall
incb
inc
adc
dec
fs
ror
fldcw
jmp
dec
out
aam
sahf
dec
inc
dec
add
sub
inc
adc
jno,pt
cli
call
inc
pop
or
mov
movsl
mov
and
ja
mov
mov
push
shl
pop
rcr
add
test
push
add
scas
jbe
jmp
push
dec
loope
repz
add
rcrb
push
js
xor
test
pop
mov
clc
les
cltd
pop
and
sbb
test
mov
push
fisubl
xor
inc
clc
leave
stos
mov
fisttpll
fstpl
lock
cmpsb
adc
or
lock
pop
jl
test
jno
shl
ret
stos
jo
out
sub
enter
jno
loopne
fidivl
das
mov
ss
sbb
lahf
sub
adc
fdivl
or
cs
data16
cmp
nop
js
jo
ss
mov
push
call
mov
or
outsl
sub
xchg
sub
pushf
pop
jmp
adc
xor
loop
mov
int
push
fwait
ret
push
sahf
cmp
pop
mov
dec
xor
xchg
decl
lods
gs
xchg
mov
pop
cmpsl
or
je
mov
adc
sub
test
insl
mov
cmpl
fwait
sbb
dec
inc
std
pop
sub
movsl
js
loope
or
cltd
dec
xchg
out
lock
cmp
popf
add
jge
pop
mov
pop
add
or
jb
push
scas
jne
cwtl
out
les
xor
mov
fdivrs
sti
cli
jge
dec
pop
aaa
cmp
push
into
popa
data16
and
iret
aaa
mov
pop
cmpsb
ret
bound
psubsw
pop
mov
add
mov
dec
loop
jmp
mov
jg
test
les
mov
sbb
clc
sbb
lods
ljmp
dec
mov
ja
pop
lds
sub
adc
pusha
add
fisttpl
xchg
out
enter
stc
pop
inc
fsubs
and
inc
sub
aaa
test
dec
setns
pushl
dec
adc
frstor
sub
fdivrl
jle
lret
bound
inc
lods
adc
pop
add
cmp
and
add
adc
lds
incl
dec
popa
negb
rcrb
sub
adc
jg
or
pop
add
sbb
xorb
xchg
jb
xor
mov
aaa
lods
fldcw
xchg
insb
push
popa
push
rorl
sub
decl
fsubrl
pop
aaa
inc
pop
pushf
adcl
fistps
hlt
ljmp
insl
jno
hlt
push
mov
sbb
push
mov
add
mov
xchg
cli
fiadds
fisubrs
clc
rclb
in
sbb
sub
pushf
and
incl
cmp
insl
into
and
cmc
push
jmp
or
mov
in
sub
dec
insb
cmp
dec
out
push
xor
mov
and
xchg
push
popa
add
xchg
sub
movsb
sti
cmp
cmp
sub
cs
or
lods
and
dec
sub
mov
mov
inc
mov
pop
loop
mov
lcall
jl
leave
and
movsl
incl
mov
stos
cmc
xor
jg
fwait
sbb
mov
mov
adc
sub
cmp
push
adc
dec
and
pop
and
or
es
shrl
push
bound
xchg
xchg
jle
inc
clc
mov
pop
mov
jecxz
std
sub
aam
xor
lds
stc
imul
mov
mov
mov
cmc
mov
inc
orps
jne
sub
cmp
in
pop
fstps
aas
jbe
mov
ficoml
cmp
lret
fcomps
jmp
test
test
and
aad
pushf
gs
test
popl
rcl
testb
fildll
mov
xor
add
xchg
sbb
xchg
lods
mov
dec
xlat
mov
mov
loop
xor
fcoms
push
in
sbb
and
add
test
cmpsl
fwait
imul
fcomp
int3
xchg
and
mov
cmpb
cld
pop
movsb
lods
cmpsb
mov
pop
popa
loop
insb
or
fs
push
sub
jmp
sbb
pop
adc
fistpll
movsb
or
mov
out
adc
fdivrs
ljmp
or
out
mov
or
rcl
pusha
mov
movsb
jp
daa
test
rcrb
add
ficompl
lcall
jg
jecxz
xor
mov
ds
mov
in
and
imul
push
insb
loopne
stc
mov
std
ds
or
push
pop
jae
push
pop
add
std
rol
rcrb
push
and
xchg
inc
dec
xchg
fnsave
pop
adc
pop
mov
loop
pop
sarb
std
rclb
dec
jo
popf
in
pop
fsubrs
aad
daa
mov
adc
scas
cmp
clc
mov
out
add
in
fmull
fildl
lret
xor
inc
daa
add
enter
jg
jmp
loop
mov
imul
decb
dec
gs
sahf
iret
sbb
shrb
lds
hlt
test
scas
mov
push
fdivrs
fs
push
sub
fdivrs
popa
inc
adc
and
push
mov
lock
adc
dec
pop
rcrb
xchg
aam
mov
bound
jp
xchg
inc
test
mov
mov
les
mov
jg
jle
pop
mov
gs
adcb
push
mov
ljmp
mov
dec
loopne
jo
pop
inc
mov
add
mov
rcl
int3
pop
ss
mov
jae
cltd
mov
mov
sbb
xchg
jnp
add
call
mov
push
pushl
mov
mov
xor
mov
jo
push
cmc
aaa
ljmp
push
xorl
mov
imul
pop
std
xor
mov
push
lock
lds
test
pop
cmpsb
mov
adc
jle
sarl
xchg
pop
xchg
pushf
mov
sub
xor
in
cli
dec
nop
ss
rcl
mov
mov
in
sbb
push
mov
or
cs
mov
sbb
std
imul
in
add
fisubrl
adc
add
pop
xor
int
jl
test
jbe
jg
hlt
call
sahf
mov
stos
sahf
pop
rcll
pop
adc
sub
xor
or
in
loopne
mov
jo
mov
lcall
mov
and
cmp
out
sahf
sbb
xor
icebp
das
rclb
hlt
mov
or
lret
dec
jno
inc
ljmp
les
call
xor
inc
std
ljmp
add
call
je
jnp
cmp
fs
clc
out
push
cmc
cwtl
sbb
scas
das
and
cli
cld
inc
ret
xchg
fisttpl
jno
push
push
jle
mov
imul
pop
mov
loope
bound
clc
incl
call
xchg
mov
adc
popf
cwtl
ds
mov
push
mov
movsb
xlat
push
stos
push
xor
cmc
outsl
clc
ljmp
pop
fisubl
or
test
mov
out
ljmp
inc
movsl
or
outsl
sarb
cmpsb
xchg
jne
mov
add
out
pusha
adc
xor
mov
test
insb
int
clc
and
inc
fldt
or
movl
pop
push
in
iret
fiadds
mov
inc
arpl
pop
sub
loope
push
fsubl
lea
and
xchg
push
mov
push
clc
mov
in
mov
inc
pop
jmp
mov
lahf
cmp
outsb
pop
je
push
orl
and
xchg
adc
lods
add
inc
push
mov
sar
test
mov
pop
adcl
push
rcrl
inc
call
decl
scas
aam
iret
push
xor
lret
jp
loope
adc
fwait
mov
aam
movsb
sahf
in
xor
inc
jbe
outsl
mov
xchg
clc
pushl
pusha
jg
les
pop
push
mov
sub
subb
or
push
sub
sbb
sbbb
xchg
fdivrl
sub
push
ficompl
seta
or
xor
sbb
repz
xor
jg
fistl
fisttps
xlat
mov
or
sbb
mov
mov
xchg
adc
sbb
mov
mov
jno
adc
adc
nop
xchg
inc
std
pop
test
or
cwtl
nop
js
dec
or
int
and
adc
pop
or
push
mov
lods
inc
hlt
pop
push
aaa
mov
cmp
rclb
push
adc
inc
mov
fsts
repz
nop
sub
mov
xchg
icebp
bound
mov
clc
xor
mov
mov
repz
lahf
pushl
push
xchg
push
lods
fldt
in
mul
aaa
inc
push
imul
inc
jecxz
imul
sbb
nop
shrb
mov
push
cmpsb
mov
loop
xor
ds
dec
adc
fiaddl
jecxz
lods
adc
mov
add
fwait
xchg
ret
rolb
jnp
jge
mov
sub
ljmp
sub
lret
shll
je
outsb
ljmp
adc
pop
pop
xchg
fistps
add
pop
dec
push
adc
mov
pop
push
lods
mov
shl
mov
popa
dec
fcomps
lock
orb
inc
test
cmpsl
incb
sub
lea
in
adc
rclb
cmp
cli
pusha
add
push
mov
and
jg
ljmp
xchg
mov
add
loop
nop
fimull
fs
out
jg
dec
in
adc
mov
mov
div
inc
sub
in
js
dec
scas
xlat
in
xor
mov
add
pushf
mov
sub
adc
sub
jmp
inc
adc
repnz
iret
xchg
hlt
js
pop
cld
jg
dec
aaa
int
outsb
inc
test
add
jae
repz
xchg
shlb
cld
or
rorl
lcall
pop
inc
clc
fisttps
xor
fidivs
mov
cmp
lcall
rolb
imul
dec
dec
fs
cmp
sarb
sub
add
sub
xchg
mov
call
les
icebp
pop
andb
sbb
mov
insl
orb
rcrb
add
scas
xchg
xlat
insb
mov
push
pushf
fidivrl
mov
orb
or
test
push
mov
les
sub
js
adc
jo
cmp
and
cmc
mov
out
shlb
add
das
xor
clc
mov
pop
pop
dec
ljmp
inc
add
add
leave
cld
mov
leave
mov
daa
ja
mov
pop
lods
dec
sbb
movsb
xor
sbb
xchg
inc
adc
and
push
inc
cmp
int
sbb
push
mov
push
gs
sbb
inc
in
mov
push
cld
icebp
pop
jmp
mov
pop
push
add
enter
fbld
icebp
ljmp
mov
cmpsb
hlt
ljmp
push
mov
sbbl
pop
insl
cld
call
clc
orl
out
push
xchg
mov
ja
testb
shrb
add
mov
cmpsl
mov
push
ss
and
je
jne
dec
push
xor
das
rol
std
jbe
inc
inc
pop
sar
test
mov
es
mov
and
add
mov
fidivl
lret
shlb
in
push
enter
mov
push
cmpb
test
hlt
or
call
cli
inc
jle
inc
push
js
mov
pop
gs
je
dec
push
fcoms
or
and
fisttpl
mov
xchg
or
add
ds
shl
pop
mov
sbb
mov
adc
mov
loope
negb
jae
js
mov
jg
aad
testb
ficompl
cs
jo
loope
jg
add
inc
insl
popf
push
cmpsb
adc
inc
adc
adc
cmp
repz
cmp
xchg
mov
fwait
clc
cld
insl
out
das
aam
push
ss
xor
stos
rorb
jl
test
add
xchg
insl
gs
mov
cmpb
add
ficoml
cli
sbb
pop
mov
mov
inc
lock
clc
xchg
cwtl
test
pusha
xchg
pop
adcb
add
adc
sub
xchg
mov
popf
loopne
lds
out
stos
sbb
xor
push
push
push
jl
cmp
cltd
fidivrs
in
push
cwtl
test
sbb
jge
pop
pop
jbe
aas
js
push
sbb
ljmp
jmp
xchg
outsl
xor
inc
arpl
stos
cli
pop
fsubrl
xor
mov
push
sbb
and
cs
and
pop
push
test
mov
xchg
lock
fldt
ds
pusha
dec
jge
shl
fadds
jb
movsl
mov
jmp
pop
movsl
dec
add
sarb
fisubrs
xor
push
push
push
add
adc
xchg
aaa
mov
push
lea
ds
enter
xor
add
fists
mov
pushl
jbe
push
out
mov
push
fcoms
clc
cmp
push
adc
sub
mov
loopne
clc
cmpl
cmpsl
mov
ja
imul
or
out
call
dec
stos
cmp
leave
ljmp
push
xor
lods
stos
js
dec
mov
xlat
sbb
ret
cwtl
hlt
push
jecxz
aas
lock
aaa
add
jmp
inc
bnd
push
jecxz
in
ljmp
xchg
or
test
jno
dec
pop
enter
push
xchg
push
adc
cwtl
sbb
sbbb
fcompl
test
addr16
pushf
mov
mov
add
jb
jg
aaa
out
pop
inc
sub
cs
rclb
std
add
repz
imul
xlat
pop
movsb
enter
xor
mov
scas
cli
sbb
aaa
jmp
inc
mov
dec
test
jns
shlb
jg
mov
jecxz
cmp
sbbb
mov
xor
mul
mov
shrl
fwait
pop
pop
into
in
mov
popa
push
and
mov
sub
inc
and
cld
fwait
jp
cmpl
call
xor
push
cltd
loop
loop
cmpsl
jg
xor
sbb
hlt
sbb
fsubrs
cmpsb
xchg
scas
fcomip
cmp
inc
jnp
inc
push
xchg
mov
sbb
dec
ret
dec
mov
or
xchg
js
and
mov
mov
shlb
fiadds
cld
dec
nop
mov
cltd
cmp
popa
out
ret
outsl
test
push
jg
add
mov
pushf
ljmp
or
js
dec
fucomip
pop
sub
push
fistpl
insl
lahf
aas
mov
mov
test
ret
pop
lods
in
or
sahf
jb
shlb
mov
enter
pop
jo
pop
outsl
sub
and
dec
mov
call
pop
and
lcall
lods
jo
arpl
shll
cs
or
imull
push
xchg
stos
adc
jb
shll
inc
add
push
and
push
inc
push
cli
adc
ja
js
or
aas
xor
mov
or
pop
cmovbe
decb
mov
xchg
fucom
clc
cltd
or
test
push
stos
pop
push
hlt
bound
js
mov
cmpsb
xor
push
mov
xchg
dec
roll
xchg
std
or
loop
lret
jbe
icebp
fcmovnu
xlat
pop
sbb
out
movsb
xchg
sub
fs
mov
jmp
cld
or
inc
mov
cmp
push
or
outsl
jmp
rclb
cmp
cwtl
cmpsb
out
mov
adc
outsb
cmc
loopne
jp
iret
scas
adc
add
adc
negl
out
movd
ret
rorb
loopne
dec
ret
andb
push
and
xor
scas
adc
jo
mov
pop
icebp
xchg
add
mov
push
push
or
sbb
or
push
xchg
stos
cmp
ja
sbb
xchg
stos
or
fiaddl
xchg
or
jge
sti
pop
push
inc
sub
mov
es
fs
in
cmc
call
sbb
imul
cli
out
sub
mov
sub
xor
lcall
sub
pop
xor
jno
xor
std
cmp
cmc
in
dec
mov
sbb
scas
frstor
sub
pop
pop
or
dec
push
pop
out
lcall
cld
mov
or
fidivs
jle
test
js
jg
xor
pushf
mov
cmp
adc
add
inc
or
ficoml
mov
jecxz
xchg
cmp
rol
aas
movsb
stc
ret
scas
das
shlb
jno
pop
jmp
testb
jbe
or
in
test
dec
pop
ljmp
sbbb
add
stc
shll
xchg
push
shrb
dec
sbb
decb
hlt
or
pop
movsl
fisttpll
pop
icebp
jbe
pop
sbb
repz
push
push
fcomip
jg
push
loop
repnz
fldcw
sbb
js
push
jg
or
add
imul
mov
test
dec
lret
std
out
xchg
test
mov
push
adc
pop
rol
jmp
nop
enter
decl
scas
int3
jb
scas
pop
xchg
pushf
lret
divl
mov
sbb
insl
pop
jno
bound
dec
and
mov
mov
inc
sbb
gs
ljmp
adc
jnp
js
add
das
dec
data16
sbb
cmp
incb
fsubrs
push
push
jmp
mov
jmp
mov
xchg
xchg
aam
sbb
frstor
insb
mov
jle
or
mov
and
mov
clc
repnz
jmp
aad
arpl
outsb
dec
add
mov
push
test
cwtl
xchg
cwtl
in
clc
mov
pusha
xchg
mov
mov
call
ljmp
push
xor
cld
bound
fmull
jns,pn
in
or
xor
insb
mov
arpl
mov
pusha
xchg
jno
insb
or
fiadds
adc
push
dec
push
lcall
add
je
pop
repnz
dec
sbb
loop
xor
in
pushf
popa
and
adc
scas
sbb
inc
scas
sub
inc
loop
xchg
pop
in
cmp
inc
test
jl
push
xor
jp
divb
and
push
pop
mov
mov
pop
lea
rorb
mov
outsb
addr16
iret
mov
aaa
icebp
scas
fists
lods
push
mov
mov
lret
xchg
inc
int3
adc
add
push
std
adc
jo
ljmp
leave
jb
add
jecxz
lret
inc
jmp
andb
or
jl
lods
ss
stos
mov
or
push
xor
pop
imulb
xchg
hlt
add
mov
outsl
pusha
cmp
mov
enter
dec
gs
jmp
inc
pusha
sub
fdivp
jg
aaa
sub
jnp
push
lds
gs
or
add
sbb
mov
fsubrp
inc
jl
mov
in
or
ljmp
imul
out
xchg
cmp
add
add
gs
leave
lea
jecxz
adc
aam
nop
mov
push
mov
add
adc
shlb
fsts
repz
add
pop
hlt
add
int
cmp
and
xchg
xchg
fcomip
dec
add
sub
sbb
mov
xchg
or
cwtl
test
sbb
dec
insb
jg
push
clc
fists
push
inc
cmp
loop
sbb
inc
jl
fwait
sub
aaa
push
push
cmc
jge
xchg
jb
test
jnp
adc
jbe
in
sarb
rorl
mov
out
or
and
xchg
lock
jg
pop
imull
mov
push
mov
pop
mov
adc
sbb
shl
sbb
add
in
mov
outsl
lret
mov
scas
jns
je
mov
fwait
gs
mov
ret
xchg
fwait
mov
bound
popa
inc
mov
sub
outsl
shrb
icebp
or
unpckhps
and
outsl
jo
add
ds
ret
scas
sub
jmp
or
push
jl
test
or
push
jecxz
ja
push
cmp
mov
sub
adc
test
mov
xchg
mov
mov
ret
add
mov
cmpsl
arpl
jmp
xchg
shlb
sbb
pop
and
fdiv
cltd
imul
mov
add
shll
das
fnstsw
sarb
push
mov
pop
adcb
xlat
scas
push
xchg
mov
inc
add
test
int3
pop
outsl
addr16
lret
pop
fsubs
cmp
mov
insb
pop
push
cmc
icebp
xchg
jge
aas
data16
aaa
add
ret
lahf
sbb
pop
cmp
ret
imul
ds
adc
inc
and
sub
stos
lahf
adc
mov
stos
push
push
int3
cmc
repz
imul
js
dec
add
pushl
decl
xchg
shr
jge
push
leave
cltd
std
popa
ds
mov
xchg
sub
dec
xchg
clc
ret
subl
jp
out
push
mov
nop
push
or
lcall
mov
push
mov
jp
hlt
stos
aaa
sub
lcall
fnsave
ret
das
mov
ds
inc
clc
and
sbb
mov
inc
lret
sbb
pop
aad
sub
sub
call
imul
mov
aad
add
sub
fidivs
rcrb
pop
pop
mov
cmpsb
iret
pusha
sbb
mov
mov
jg
dec
mov
repnz
adc
out
pop
pusha
cld
decl
jl
addb
cmp
cmp
jg
or
test
outsl
xchg
pop
sbb
hlt
lods
lock
js
mov
pop
shll
mov
jb
or
cs
sbb
fwait
dec
loop
movsb
pop
fsubl
cmp
inc
stos
call
push
subb
stos
ljmp
push
jle
cltd
xor
clc
mov
jmp
icebp
pop
std
adc
icebp
sub
loop
jne
mov
movsb
jns
dec
and
mov
aad
lcall
pushf
mov
jg
in
btc
lahf
add
pop
cmp
inc
jmp
ds
pop
sbb
out
push
rolb
jg
mov
ret
enter
ja
sti
pop
cld
divl
sti
adc
and
xor
jg
xor
push
jg
sbb
test
mov
mov
push
jns
pop
sti
and
test
sbb
inc
out
mov
add
or
inc
dec
inc
and
dec
push
pop
fmull
das
xor
incl
mov
js
dec
call
jp
pop
add
ljmp
or
cs
ljmp
and
bound
cmc
xchg
mov
pop
movsb
loopne
nop
inc
adc
jecxz
cmpb
cmp
jbe
incl
cmpsb
inc
int3
dec
adc
dec
add
aam
in
ljmp
call
pop
pop
adc
push
xor
cltd
push
mov
jmp
inc
sub
in
mov
xchg
pushl
dec
scas
push
mov
je
inc
loop
push
test
arpl
mov
ljmp
xor
outsl
lss
mov
fwait
or
in
test
fs
xor
fiadds
inc
clc
jecxz
sbb
sti
into
xor
lods
push
xchg
xor
adc
add
jg
sbb
dec
inc
fdivl
clc
rep
or
pop
cmpsb
xor
sbb
cmp
add
add
xor
ficomps
outsb
data16
sti
lcall
pusha
xchg
ret
int
xor
inc
pop
lea
fiaddl
push
push
dec
stc
pop
xor
fnsave
mov
mov
out
ficoml
push
outsl
movsl
mov
sbb
sbb
loope
insb
cvtps2pi
sbb
add
xchg
enter
pop
and
jo
mov
nop
mov
xor
push
pushf
out
outsb
imul
in
andb
test
push
lcall
pusha
mov
fdivp
clc
pop
pop
cmpsl
aam
mov
xchg
fucomip
cld
add
pop
rcll
mov
xchg
cs
rcrl
jnp
movb
aaa
fst
roll
mov
sub
sbb
fdivrl
jno
scas
pop
pusha
rorl
jle
sub
inc
repz
lds
xchg
mov
mov
leave
mov
aaa
pushf
fwait
pop
pop
add
adc
fmuls
and
je
pusha
cld
dec
jbe
lahf
orb
add
ss
icebp
jg
aam
aad
scas
aad
add
es
pop
nop
ja
pusha
mov
iret
add
jo
mov
lret
aaa
imul
xchg
in
stos
jl
test
xor
addr16
pop
decl
add
sbb
fiadds
fildll
inc
cmpsb
add
inc
stos
mov
inc
stos
xor
mov
mov
sbb
mov
or
mov
xor
adc
scas
and
push
and
rorb
mov
cmp
adc
dec
adc
mov
pop
divl
lahf
js
cmpl
pop
mov
test
frstor
leave
add
arpl
add
pop
mov
push
or
movsl
imul
mov
xchg
inc
or
and
push
pop
mov
lcall
mov
mov
xor
xchg
sub
jae
insl
jp
push
insl
jo
aas
sbb
xor
cmpsb
sub
icebp
jmp
repz
stos
scas
inc
movsl
jo
mov
sbb
callw
cmp
fwait
outsb
inc
fisttpl
dec
mov
xchg
dec
push
and
xchg
or
add
pusha
cmp
outsl
cmp
mov
push
jb
aaa
add
or
lods
jo
or
out
cld
jle
cs
nop
leave
mov
xchg
incb
mov
lcall
pop
test
jle
mov
test
or
inc
ljmp
xchg
icebp
sbb
or
dec
xchg
roll
dec
xchg
and
in
push
js
gs
adc
xor
cs
inc
jne
dec
pusha
and
call
pusha
adc
sbb
or
and
jg
mov
fsubs
adc
stc
xchg
enter
push
pop
jle
jl
mov
jmp
dec
pop
rcll
xchg
imul
mov
or
cmp
mov
fsubs
and
mov
cmpsl
jne
je
sbb
inc
push
xchg
add
sub
pop
rclb
mov
jo
and
xor
enter
cli
pop
push
add
push
or
inc
incl
mov
and
cmpsb
sbb
call
test
mov
add
mov
dec
mov
int
leave
mov
inc
lea
push
push
hlt
hlt
push
in
pop
or
inc
cmp
ret
cli
rolb
enter
push
adc
and
scas
shlb
mov
popa
adc
pop
std
add
xor
xor
push
inc
test
add
or
loop
mov
lcall
and
pop
inc
fwait
outsl
xchg
aam
insl
lcall
repnz
push
pop
mov
xchg
jo
enter
mov
xchg
mov
adc
push
insl
pushw
cmpsb
call
sarl
fcomp
sbb
addl
fidivs
push
or
add
or
fstpt
vmread
addb
push
push
scas
mov
and
daa
jb
jo
fists
mov
clc
mov
jp
jo
inc
push
lretw
sub
sbb
test
je
pop
xor
popa
in
fdivrs
mov
xor
mov
and
push
mov
fcomps
in
pop
mov
cmpsb
dec
cmpsl
subb
cld
cwtl
jae
loopne
pop
inc
sub
fcomps
insb
push
jmp
mov
dec
jmp
in
add
mov
jb
ljmp
pop
cltd
shlb
dec
cmp
push
push
or
inc
fucomp
mov
pop
imul
fmull
push
sarb
cmp
mov
mov
push
inc
and
mov
imul
jl
adc
adc
mov
pushl
sub
ret
mov
enter
lods
nop
daa
lahf
popa
sub
cld
add
stos
aad
jns
adc
loopne
mov
scas
stos
mov
cmp
dec
mov
data16
ss
pop
mov
add
movsb
mov
sti
in
sub
fsubs
sub
cs
jmp
fwait
and
adc
mov
cmpb
cmc
test
inc
pop
mov
sub
sub
mov
jecxz
stos
aas
sar
or
cwtl
mov
or
retw
inc
movsl
add
aam
adcb
inc
jecxz
add
jl
mov
push
and
shlb
gs
test
mov
test
push
test
dec
test
jae
fdivs
push
cld
stos
int3
es
and
inc
add
sbb
dec
sbb
jmp
sti
jp
shr
push
std
in
lret
bound
xchg
mov
test
push
in
gs
ret
mov
cltd
mov
pop
and
stos
jle
leave
xlat
jo
mov
sub
jg
test
inc
das
ds
or
test
dec
or
ljmp
or
or
push
adc
in
vpunpcklqdq
dec
or
pop
xchg
jae
fwait
jo
add
les
movsb
shll
add
pushf
stos
jl
push
mov
xor
mov
pop
shrb
inc
add
or
loopne
xchg
xchg
je
xor
jo
xchg
jmp
das
xlat
jmp
adc
and
and
cmp
lods
or
and
setno
pop
mov
lea
sub
xor
out
cwtl
int3
loopne
adc
push
mov
push
mov
dec
fcoms
push
push
mov
pushf
add
andb
cmp
jae
xchg
fdivp
mov
shrb
inc
inc
push
mov
data16
xorb
or
enter
jle
test
pop
adc
jmp
cmc
or
xchg
inc
xor
mov
inc
xchg
lock
mov
test
int3
call
jmp
inc
jmp
les
stos
adc
jno
pushf
xlat
nop
sti
add
enter
mov
xchg
lret
rolb
push
or
jl
inc
mov
mov
mov
rcrb
cld
adc
nop
mov
loop
add
adc
inc
lahf
std
add
adc
pop
add
decl
jmp
mov
push
lea
inc
add
enter
ja
lcall
pop
icebp
rcr
clc
jno
mov
xchg
jmp
dec
insl
outsl
jg
mov
orb
inc
mov
decl
mov
mov
bound
cmp
fwait
hlt
decl
repz
js
jb
stos
mov
ljmp
cmp
sar
or
sbb
lock
fcomps
mov
add
adc
scas
sbb
test
mov
xchg
movsb
add
push
pop
insb
mov
adc
inc
or
fldt
pop
mov
insb
jb
mov
xor
insl
shrb
fidivrs
incl
ficomps
fcmovne
xor
mov
fbld
add
hlt
ss
enter
mov
mov
jmp
dec
jnp
adc
imul
lcall
mov
aas
inc
adc
cli
loop
cli
sbb
sbb
cwtl
sub
mov
repz
hlt
lds
sbb
dec
pop
mov
aas
and
outsl
sub
or
pop
mov
cli
insl
lret
pop
gs
clc
jmp
ljmp
lcall
test
aaa
inc
movsl
insl
pop
jge
mov
xchg
es
ja
pop
sub
and
lock
xor
in
inc
xor
fildl
lcall
ljmp
cli
leave
sub
sbb
mov
lret
mov
loop
shll
ret
ss
pop
jbe
das
test
stos
bound
jl
shll
cli
mov
mov
fiadds
jl
jno
cmp
pop
stc
ljmp
into
push
cmc
mov
pop
jg
dec
jno
les
mov
add
repz
loop
push
je
sbb
clc
sbb
or
shrb
jl
adc
ja
sbb
push
or
sbb
push
or
or
loopne
or
jb
nop
les
ret
in
xchg
repz
jle
ret
lock
cs
sbb
pop
into
sbb
fisttpl
sub
xchg
xor
adc
mov
mov
incl
test
scas
pop
loope
sahf
xchg
push
pop
push
inc
adc
sub
and
adc
pop
clc
lahf
mov
cli
add
adc
mov
rorb
xchg
or
incl
mov
xor
int3
fisubrs
decl
movsb
inc
xchg
shll
je
out
sub
and
dec
test
stos
insb
mov
jg
dec
mov
mov
mov
cltd
add
lock
xchg
xchg
clc
xchg
fcmovb
cli
loopne
lods
pop
inc
roll
cmp
out
les
cli
jbe
sar
sbb
push
xor
call
cmpsl
es
jbe
filds
call
dec
mov
ss
dec
les
xlat
mov
loopne
push
imul
enter
xchg
cmc
or
push
adc
mov
or
push
jl
shll
cld
push
pop
movsl
mov
pop
dec
sub
ss
fisubrl
aaa
in
or
pop
push
ss
hlt
mov
test
and
pop
icebp
aad
lock
pushf
ljmp
sti
adc
mov
mov
iret
lahf
aaa
pop
inc
stos
sbb
sbbb
add
test
jg
cld
xchg
pop
pop
inc
sbb
sub
or
jbe
jne
call
sub
adcb
add
ss
cmp
decl
test
xor
push
dec
ds
fimull
scas
sub
enter
outsl
clc
push
rolb
cmpsb
sub
test
push
rclb
loop
js
dec
dec
iret
cmp
push
aam
daa
rol
add
pusha
test
or
pop
push
popa
or
push
popa
mov
into
pop
cs
mov
ret
pop
adc
inc
cmp
stos
mov
lea
mov
fdivl
subb
pop
mov
lds
mov
pop
leave
les
sbb
pop
outsl
loope
jle
mov
add
push
pushl
dec
stos
add
ss
and
pushf
fmul
fcoms
jmp
outsl
mov
xor
mov
inc
dec
lss
dec
cmpps
in
imul
dec
or
adcb
lcall
and
test
cmp
dec
scas
xchg
push
inc
mov
jg
cmp
repz
es
cmp
jg
das
push
mov
repnz
xchg
out
and
inc
fstpl
adc
push
je
or
insb
adc
cld
or
cmp
ljmp
mov
pop
or
xchg
rcr
mov
stos
inc
loop
and
push
jge
icebp
inc
push
pop
mov
sub
jo
push
mov
clc
inc
in
or
jbe
in
mov
jbe
and
outsl
cli
lcall
jne
mov
fwait
fiadds
pushf
out
sti
out
dec
sub
mov
sub
dec
push
sahf
es
outsl
testl
and
sub
or
les
sbb
js
fisubs
cmp
ret
rorb
addb
ss
cmpsl
pusha
jl
out
jge
pop
and
incl
cmp
lods
test
cli
popf
push
fidivrs
js
imul
add
fwait
in
xchg
adc
movsb
xlat
and
xchg
fcomp
hlt
xchg
pop
xchg
push
pop
pop
xor
pop
imulb
prefetchnta
push
cli
pushl
xor
popa
mov
js
test
cmpsl
push
lds
sbb
and
xchg
push
dec
cmp
loopne
out
jo
addb
add
inc
lcall
xchg
mov
cltd
inc
adc
adc
clc
pushl
std
jge
mov
test
inc
aas
les
sahf
jbe
pop
ljmp
push
mov
sbb
cmc
pushl
add
xchg
mov
and
leave
data16
mov
mov
sub
cmp
xchg
sub
movsb
insb
scas
xchg
test
dec
rep
push
aad
sbb
fstp
sub
lcall
mov
inc
idivb
into
popl
mov
pop
fidivl
movsb
mov
negw
xorb
insl
lea
jl
das
mov
sbb
es
inc
jl
inc
pusha
insl
inc
cmp
mov
mov
movsb
push
cld
aad
cmpsb
xor
je
pop
mov
ret
es
fadd
mov
mov
pop
hlt
fistps
push
sub
test
stc
and
push
mov
aaa
loope
jge
sbb
js
mov
int3
mov
ja
ljmp
push
es
clc
xchg
push
jl
fisubs
adc
sbb
lret
adc
or
test
or
pop
daa
cli
push
aaa
std
push
hlt
iret
jg
data16
mov
sbb
pop
std
notl
in
roll
add
sar
inc
daa
rcll
adc
push
call
stos
in
sbb
cmp
adc
jno
jmp
outsb
mov
mov
pop
cmp
ret
dec
mull
mov
inc
lock
push
pop
lahf
out
jmp
jo
sub
imul
mov
loop
inc
into
mov
dec
imulb
cmpsl
push
sbbb
mov
sbb
xor
mov
xchg
jmp
popf
sub
imul
clc
jg
hlt
insl
jae
push
xor
mov
xchg
inc
or
stos
pop
jno
sub
push
stos
push
mov
cmc
adc
and
clc
push
clc
push
xor
inc
sub
lods
das
jg
add
mov
pushf
lea
mov
push
rclb
mov
sub
add
mov
sub
mov
sahf
mov
divb
mov
loop
ss
test
pop
add
xor
scas
mov
incl
mov
shlb
scas
lret
incb
lcall
test
sub
jecxz
push
cmp
jmp
or
pop
xor
out
scas
imul
jbe
loop
jl
and
js
xor
xchg
iret
pop
cmpsb
ficoms
ffree
add
jle
pop
ljmp
sti
add
xor
xorb
sbb
pop
incl
dec
popf
cmpb
and
inc
mov
andb
cmp
mov
xchg
cwtl
sub
jg
jl
out
pusha
jnp
aad
rcrl
aaa
cld
dec
gs
insb
insb
pusha
fmuls
push
xchg
jl
fbld
movb
fcoms
mov
mov
sti
xchg
and
sti
pop
ret
enter
adc
cmp
fildll
mov
sti
xchg
test
add
out
sbb
mov
mov
sbb
jge
or
lock
sub
and
decl
xchg
es
sub
test
gs
fs
cld
mov
pop
enter
ret
mov
loopne
scas
push
in
in
xor
push
fstps
push
pop
push
add
fstl
push
push
mov
push
mov
jl
inc
sub
cmpb
mov
sbb
cmp
add
dec
enter
lcall
lods
das
repnz
mov
cmp
ret
xchg
pop
lret
fisttps
mov
xlat
xchg
and
cmp
jno
and
sbb
jne
lahf
ja
mov
shl
add
imul
outsb
lods
daa
dec
lds
push
jbe
push
daa
jg
adc
mov
rorl
xor
pop
dec
int
push
lods
and
imulb
adc
inc
cmp
int3
dec
cmc
push
aaa
pusha
ret
push
mov
int3
testb
insb
jg
cld
movsl
int3
jno
push
mov
dec
enter
adc
xor
add
mov
push
lock
sarl
repz
loopne
xor
jae
rclb
xchg
xlat
jg
sarl
call
mov
adc
and
lock
jp
jb
jl
jmp
shl
outsl
stos
xlat
add
add
pop
sbb
xor
fadds
imul
mov
je
out
sar
xchg
rcrb
cmpsb
push
dec
daa
cmp
sub
jg
xor
movsb
jmp
xchg
icebp
push
aam
and
sbb
ret
add
adc
mov
pop
mov
jno
add
out
xor
adc
jp
mov
inc
je
jno
lock
sbb
inc
pop
xchg
je
outsl
add
int
sub
mov
lahf
cmpsl
add
xchg
clc
mov
pop
call
pop
mov
mov
or
mov
cmp
jg
repz
add
mov
pop
jp
lret
xorb
ret
mov
xchg
and
shl
or
mov
jnp
mov
mov
sub
or
mov
decb
enter
lret
push
dec
cwtl
inc
mov
mov
jp
ljmp
jns
mov
es
mov
xchg
cs
and
push
mov
inc
les
cmp
cmp
jecxz
call
mov
jg
ret
mov
sub
sub
loop
ljmp
dec
jnp
jg
int3
or
mov
add
aad
test
icebp
or
mov
pop
lods
cli
mov
sbb
adc
stos
push
add
daa
xchg
add
cmp
cld
jge
aad
mov
data16
ja
xchg
mov
aas
push
push
cmp
sub
jno
mov
les
loope
mov
sub
xchg
inc
pop
aam
push
push
pop
push
aad
test
lea
aad
mov
gs
pop
dec
push
call
push
or
jp
push
add
lcall
add
add
jecxz
push
mov
lods
and
mov
sarb
in
pmuludq
and
and
dec
dec
negb
sub
lods
ljmp
add
decl
mov
in
push
cltd
insl
fcoms
mov
fidivl
sbb
in
aaa
into
xchg
dec
sub
cld
mov
loop
jnp
sub
cmc
add
or
movsb
sarb
out
mov
sub
jl
cmp
push
dec
out
cmpsb
mov
sahf
pusha
hlt
mov
adc
js
add
push
xchg
fs
jge
cmp
inc
andb
pushf
dec
into
out
jle
xor
test
pop
loop
loop
push
cmpsl
mov
inc
roll
jo
pop
mov
push
fiaddl
div
int
mov
cltd
pop
push
dec
lods
aam
jo
int3
jns
rol
aas
clc
clc
cld
out
mov
jmp
push
fistl
cld
and
in
jne
dec
hlt
jae
xchg
sbb
loope
ja
jge
inc
pop
lret
ss
sub
fs
sbb
xor
xor
sub
mov
or
mov
mov
test
xchg
mov
mov
roll
or
dec
out
mov
push
xchg
add
mov
jne
cmp
mov
pop
sub
or
mov
iret
push
jae
sbb
test
push
fisubs
add
ret
shrl
cmpsl
shrb
sbb
push
sbb
push
push
pop
pop
xor
and
ja
inc
jnp
dec
xchg
fisubrs
and
xor
nop
cmp
inc
sbb
out
lods
xchg
out
and
mov
or
es
pushl
xor
cmp
lods
mov
loop
add
sahf
es
in
sbb
mov
and
xchg
adc
adc
ljmp
call
adc
out
mov
adc
sbb
stc
adc
cmp
mov
fwait
test
loope
sbb
dec
shrl
jb
cwtl
xchg
fsubl
jbe
adc
sti
push
jmp
cwtl
cmpsb
and
in
rorb
push
call
xor
div
inc
shrl
push
jno
das
pop
lcall
inc
cld
fstpt
out
or
add
cwtl
clc
mov
orb
pusha
std
or
in
or
movsl
idivb
clc
decl
jne
int
mov
mov
inc
pop
xchg
push
or
or
jmp
or
mov
adc
push
ret
lret
aaa
xchg
pop
pop
cs
stos
and
xchg
mov
xchg
lds
push
into
mov
pop
xchg
call
popa
pop
add
cmp
cs
ret
sar
cmpb
xchg
pop
jo
data16
cli
sub
adc
mov
inc
stos
add
xor
jg
decl
add
mov
inc
xchg
jne
jae
sub
add
or
mov
push
lahf
rolb
xchg
or
in
daa
cld
jge
cmp
and
outsb
hlt
fsubs
test
shll
lods
lahf
ja
loopne
add
xor
call
or
jb
iret
mov
cld
incl
out
add
shl
stc
fwait
insb
pop
add
lret
lds
out
loopne
adc
push
mov
and
or
jb
mov
ret
inc
fcomi
or
pop
aad
lds
into
mov
je
pop
inc
xchg
sbb
or
popf
jp
inc
loope
outsb
jp
mov
insb
and
ljmp
mov
fdivs
in
mov
fsubr
incl
pop
xchg
pop
lret
and
mov
push
xor
push
sbb
popa
ja
xchg
fsubp
stos
or
loopne
or
mov
shll
or
inc
pop
clc
sbb
jp
mov
cmp
call
push
add
jo
adc
cld
pop
stc
into
orb
jo
xor
icebp
call
shlb
repnz
mov
pop
mov
leave
outsb
insb
push
pushl
push
jle
pop
loope
popf
xchg
pop
jnp
test
mov
hlt
mov
out
cmp
xor
jmp
cmpsl
mov
mov
adc
add
scas
clc
xlat
push
or
or
xorl
adc
stos
sahf
in
sub
icebp
mov
xchg
adc
and
push
ficoms
cwtl
xchg
in
dec
sarb
jmp
xchg
sarb
cmp
dec
cmp
adc
sarb
pop
push
push
sbb
jae
mov
mov
jbe
int3
mov
es
sbb
pop
adc
xchg
mov
cmp
add
fbld
loopne
lcall
sbb
leave
scas
and
add
mov
ret
sub
flds
adc
push
aas
orl
clc
insl
pop
mov
insb
mov
mov
dec
rcl
mov
and
div
sti
add
repnz
mov
push
xor
loop
ljmp
out
pop
mov
movl
arpl
cli
dec
icebp
aad
cmp
into
fstl
mov
or
fdivp
decl
or
add
test
push
jnp
sub
or
dec
ret
int3
ja
aam
push
cmpsl
clc
adc
mov
pop
pop
mov
and
addl
jg
push
dec
pop
js
or
ret
mov
add
mov
std
xor
imulb
je
push
xor
nop
mov
aas
push
inc
or
xor
cmc
pop
add
dec
hlt
inc
dec
xchg
jge
mov
mov
outsl
ret
jp
loop
sbb
adc
jns
iret
sar
decb
out
lea
jp
jg
je
dec
push
in
xlat
je
adc
mov
dec
insl
dec
mov
lea
xchg
xor
lcall
int3
loop
xlat
andb
mov
mov
orb
xchg
jge
es
testb
xchg
leave
test
jg
mov
or
decb
jl
jo
push
mov
adc
push
rorl
cmp
lds
push
pop
mov
jg
shlb
push
mov
das
xchg
lcall
iret
ds
xchg
movsb
mov
mov
add
clc
ja
cmp
js
push
ficompl
cli
cmp
pop
pop
inc
mov
stos
in
fyl2x
sbb
mov
sahf
inc
inc
lds
cmp
call
pop
push
xchg
or
call
mov
adc
dec
xchg
enter
jl
out
cli
fildll
xlat
or
pop
arpl
push
aaa
std
shrl
repz
cmp
cmp
add
sub
clc
xor
sbb
pop
push
aam
repz
mov
or
shrl
cmp
mov
mov
mov
and
sahf
mov
int
out
hlt
rcrb
in
mov
jg
xchg
imul
xchg
mov
cld
pop
mov
lcall
mov
and
sub
pushl
jl
push
pop
jp
adc
outsl
inc
sbb
imul
inc
into
aas
shrl
std
lcall
xchg
pcmpgtd
aad
lods
fbld
adc
fs
addr16
sar
lret
das
and
out
stc
mov
sbb
sbbb
fildll
mov
lahf
sub
xchg
das
cmp
mov
pop
inc
shll
pop
mov
call
sub
jno
mov
jo
inc
into
dec
inc
and
das
cli
out
inc
push
mov
clc
mov
xchg
js
ror
mov
out
add
rclb
mov
xor
inc
mov
cmpsb
aas
mov
outsb
lret
rorl
or
cli
fisubrl
fiadds
add
aad
sbb
sub
scas
push
insb
sbbb
cmp
mov
mov
sti
jecxz
call
adc
outsl
pop
in
jp
mov
sub
iret
mov
test
mov
cltd
push
xlat
aam
sahf
stos
push
outsb
pop
test
pop
aad
jae
mov
inc
dec
xchg
xor
mov
imulb
pop
icebp
arpl
call
dec
add
clc
enter
mov
adc
xchg
movsb
push
xchg
jle
ss
psrld
adc
outsb
testb
jnp
adc
xor
sbb
shlb
push
sub
pop
outsl
push
loop
mov
pop
jno
push
sbb
cmp
mov
out
mov
mov
mov
mov
insl
loop
push
je
jp
mov
lock
add
sbb
sub
or
lcall
or
xor
cmp
loop
packuswb
imul
xlat
mov
das
xor
add
cmp
sub
pop
fs
adc
mov
fisttpl
cs
inc
or
test
pop
jo
fisubrl
push
pop
push
enter
notb
das
and
lcall
test
lahf
in
mov
sub
icebp
es
lods
mov
sti
imul
movsl
sbbl
dec
loopne
jle
xchg
xor
xor
xchg
sub
mov
decl
and
or
xchg
pop
ret
fisubrl
ficoms
mov
fidivs
mov
jo
aad
cmp
jno
loope
stos
scas
xchg
add
out
test
and
pushf
mov
push
jcxz
sbbb
xchg
bound
xchg
ja
xchg
mov
mov
mov
mov
and
xor
xchg
popf
test
mov
js
pop
mov
loopne
cmp
xor
imul
js
jl
mov
lahf
mov
mov
loope
lret
lock
scas
lret
mov
xchg
mov
aam
loop
pushf
aad
out
imul
in
pop
js
js
mov
sub
aad
add
jae
mov
jl
das
jbe
add
jge
incb
add
mov
js
cli
call
cmpsl
pop
mov
mov
ss
sti
xlat
inc
xorb
xor
jg
movsl
sub
gs
insb
sbb
es
cmp
mov
adc
sub
popf
cs
shr
data16
ret
shlb
sbb
inc
jecxz
mov
add
popa
cwtl
pop
popf
dec
sarl
inc
mov
shlb
pusha
fistpll
adc
mov
inc
pushf
fidivs
cmpsl
jmp
fbld
cmpsl
jbe
push
lcall
mov
inc
imulb
mov
in
cwtl
ljmp
mov
sbb
scas
adc
and
movsl
push
decl
sbb
lahf
sbb
mov
call
loope
dec
mov
add
cmp
dec
sub
add
cmpsl
test
ljmp
adc
sti
popf
cmp
mov
add
outsl
cmp
xchg
nop
pop
mov
pop
insl
inc
jecxz
mov
dec
and
xor
rcrl
xchg
add
sub
scas
divl
enter
mov
push
popa
sahf
out
cli
out
xchg
pusha
dec
dec
xchg
adc
or
out
call
adc
add
xor
lcall
fisubrl
je
int3
sbb
clc
fwait
stos
fists
jecxz
nop
xchg
mov
lret
cld
call
pop
mov
nop
clc
lods
lret
adc
clc
fistps
xor
cmp
add
adc
push
or
mov
jg
xor
jnp
iret
xor
push
in
push
and
push
shlb
pop
scas
push
in
mov
dec
mov
in
ret
in
pop
cld
sub
into
insb
outsl
or
or
jo
push
movsl
inc
add
stc
sub
es
test
pop
popf
aas
or
cltd
mov
nop
stos
ds
sub
sub
jmp
call
sti
mov
push
sub
pushf
pop
sub
mov
mov
pusha
xchg
iret
and
adcb
out
add
xor
fmuls
push
loop
mov
and
push
cmp
pushl
jnp
es
es
push
rol
mov
xchg
mov
cmp
adc
inc
adc
orps
ja
dec
xor
pop
lock
inc
into
sub
cmp
sbb
lds
cld
sub
xorl
stc
call
icebp
mov
subl
hlt
cli
jmp
jbe
mov
dec
mov
mov
or
sub
shrb
xor
cmp
dec
lcall
pop
sbb
and
push
clc
xchg
sar
and
lret
cmp
data16
ja
out
mov
dec
rolb
in
aaa
jl
mov
imul
jmp
mov
sbb
lea
pop
pop
push
push
ffreep
dec
pop
popf
cli
arpl
mov
mov
sub
adc
testb
mov
stos
mov
xlat
lods
addr16
mov
cmp
js
mov
sarb
jmp
mov
push
and
sub
pop
cmpsb
jne
sbb
jns,pt
das
clc
decl
pop
dec
mov
adc
test
mov
cmp
sti
push
in
scas
xchg
push
int3
inc
inc
mov
movsb
das
mov
pop
mov
inc
popa
mov
adc
or
jns
mov
es
daa
in
call
push
lret
repz
adc
cmp
shlb
out
lcall
fsubrl
cmpsb
xor
out
andb
fsubs
push
into
test
call
jbe
cld
std
push
dec
sbb
push
push
lock
mov
cmpsl
push
hlt
cmp
jg
or
jmp
fiaddl
clc
lds
in
mov
dec
nop
les
dec
cmp
rcrl
shlb
cmp
leave
inc
lea
test
mov
movsb
lds
into
gs
mov
adc
scas
fdivrs
dec
cs
dec
std
dec
inc
lods
add
push
hlt
push
mov
test
mov
fstpt
cld
fwait
insl
jecxz
inc
jge
pop
sbb
repnz
or
daa
popa
jne
out
aas
add
iret
push
lods
loope
daa
cmp
inc
pop
inc
enter
push
pop
dec
lea
pop
cmc
xchg
push
gs
cld
out
hlt
movb
in
sahf
fcomps
lcall
pop
ljmp
mov
js
pushw
sbb
sub
push
add
out
js
test
xor
jl
aas
movsb
add
ja
js
mov
psubusb
xchg
cli
push
mov
xorl
sbb
movsb
xchg
or
xor
fldenv
les
adc
inc
clc
das
stos
pop
aam
push
cwtl
pop
push
clc
fnstsw
pop
or
jle
aad
aas
jnp
shll
pop
sub
shl
mov
push
pop
pusha
cmp
fldl
xchg
scas
cmpsl
fbstp
xchg
adc
dec
push
in
mov
dec
or
inc
pavgb
and
sbb
test
adc
in
clc
adc
gs
push
cltd
inc
mov
jecxz
jge
cli
and
popa
and
mov
ja
and
loope
pop
jne
fdivp
dec
pop
dec
xchg
sub
scas
ds
mov
dec
mov
mov
xor
mov
pushf
aad
push
cmpsl
add
pop
sbb
mov
aam
arpl
jp
pop
movsb
popa
inc
dec
aaa
lcall
lock
sbb
jae
add
jmp
fistpl
adc
insl
icebp
clc
pop
loop
aaa
and
push
cld
call
sbb
repnz
pusha
xchg
inc
or
mov
xlat
es
pop
hlt
xchg
loop
adc
add
xchg
stos
insb
sbb
jecxz
movsb
jno
movsb
sub
cmpsl
fildll
mov
xor
jg
mov
cmpsb
sbb
add
movlps
push
push
adc
les
inc
jge
pop
into
push
mov
loopne
dec
pop
loopne
dec
xor
sbb
mov
inc
repnz
adc
cmp
inc
sub
sbb
lcall
adc
lret
fldcw
std
dec
sub
push
mov
jmp
and
adc
jecxz
mov
movsb
sbb
mov
push
ficomps
addr16
loopne
push
inc
or
mov
fiaddl
aam
es
push
push
lahf
pop
sub
fstpt
xor
fsubrs
adc
je
mov
rcll
scas
clc
jne
xchg
pop
je
movsb
cltd
cld
out
xchg
rcrb
cmpsb
nop
lea
decb
xchg
cmp
xchg
sub
inc
das
loopne
mov
add
scas
or
loopne
sub
pop
mov
arpl
inc
stos
sub
sbb
or
cmp
sbb
rcrb
bound
cli
aad
xor
or
and
cmp
mov
pop
mov
add
cltd
sbb
xchg
cld
mov
pop
sub
fiadds
nop
push
add
lret
pop
adcl
andb
out
adc
pop
cli
movsl
in
add
push
jg
lcall
ret
iret
loopne
jle
or
xchg
clc
outsl
subb
fadds
fstpl
mov
mov
or
mov
adc
int3
bound
adcl
or
xlat
cs
mov
insl
stc
roll
adc
mov
enter
ficoms
push
repnz
mov
notb
or
aam
mov
push
or
add
mov
dec
jmp
push
bound
sbb
or
jl
or
push
pop
loope
call
jno
test
icebp
mov
movsb
xor
es
aam
xor
sahf
xchg
xlat
and
pop
push
movb
dec
pusha
inc
pushl
js
stc
adc
xchg
sbb
shll
aas
mov
mov
inc
ret
sub
mov
popf
xchg
jne
nop
xchg
push
cld
lcall
int
push
in
sub
dec
dec
mov
ja
sbbb
js
cmp
out
mov
xor
xor
dec
jp
enter
lahf
imul
xchg
fmuls
inc
push
adc
push
sub
test
add
push
rcl
jo
pop
mov
mov
jg
mov
imul
hlt
jl
cli
add
inc
scas
mov
test
adc
mov
xor
outsl
adc
jo
sub
sar
divb
xor
cmpsb
sub
and
jae
fistps
pushf
xchg
aam
lock
pop
lret
ja
fxch
sub
decb
cli
or
stos
dec
push
pusha
sub
fbld
add
mov
aam
push
dec
lret
xchg
inc
mov
sbbl
or
jmp
aas
pusha
inc
dec
pop
test
lds
lock
in
sub
out
stos
inc
sbb
lock
jno
adc
cmp
fsubs
xor
pcmpgtb
add
jge
mov
or
in
loop
xor
pop
jno
adc
and
fistl
or
mov
jae
sar
xchg
mov
fisubl
inc
out
nop
or
out
movsb
xor
inc
outsl
sub
pop
rorb
fwait
sar
stc
clc
or
imul
dec
push
cmp
or
or
cmpl
out
dec
test
inc
rcr
aam
addr16
loope
stos
ja
pop
pop
ror
mov
jae
pusha
dec
sub
nop
in
mov
fbld
dec
pop
pop
scas
icebp
std
or
insl
adc
cltd
push
dec
dec
dec
gs
jmp
les
lret
pop
ljmp
ficoml
jle
fs
test
jg
sub
sbb
ret
stos
in
xchg
lcall
jno
aam
cli
ljmp
out
adc
jg
inc
mov
push
mov
mov
jp
mov
loopne
xchg
js
lock
or
es
xor
add
dec
enter
or
cld
in
scas
jp
addb
cwtl
mov
pop
pop
filds
or
dec
add
sbb
mov
jle
clc
or
lahf
cmp
push
hlt
push
and
adc
dec
xchg
out
lret
jne
dec
mov
xchg
mov
cld
fldl
push
jecxz
iret
and
lcall
mov
fsubs
loop
mov
xchg
mov
imul
cli
fwait
inc
pusha
push
scas
sub
xchg
cmpsb
mov
ljmp
xchg
enter
or
xlat
fwait
jge
loop
outsl
push
mov
cmp
jne
adc
movsb
aas
or
mov
adc
in
inc
jo
cld
je
test
mov
jge
inc
rol
out
mov
add
rcrl
and
enter
jae
jl
mov
shrb
jb
cmp
mov
dec
call
lods
push
cli
fnsave
xchg
dec
lret
insl
loop
inc
jp
jl
pop
mov
mov
cwtl
push
or
inc
into
in
pop
pop
inc
fisubrs
fistpll
mov
sub
mov
mov
cwtl
mov
loope,pn
loopne
notl
aad
mov
and
mov
lock
popf
cmpb
ja
arpl
icebp
cmpsl
sub
shrb
call
sub
sbbl
in
push
cwtl
and
cld
mov
dec
sub
jmp
jns
pop
icebp
pushl
test
mov
flds
popa
adc
in
ret
jnp
loopne
add
push
xchg
mov
inc
adc
push
push
movsl
dec
add
and
sub
call
adc
out
inc
sqrtps
out
sub
adc
popa
cld
lcall
push
psubq
jb
and
movsl
jns
out
mov
aaa
mov
jo
mov
add
fildll
sub
add
rcr
outsl
test
pop
in
adcb
xchg
sbb
test
lock
jg
add
andb
stc
scas
mov
outsl
mov
das
pop
pop
cli
mov
dec
push
cmp
mov
push
outsb
pop
adc
hlt
cmpsb
testl
int
ss
gs
test
mov
xor
rolb
and
orb
mov
outsl
stos
faddl
fildl
pop
loopne
and
cmp
jb
cmp
sbb
mov
cs
pop
xor
mov
sub
jnp
cmp
xor
adc
adc
bound
mov
mov
xchg
jp
mov
jns
cmp
lahf
pop
inc
mov
add
imul
addb
adcb
push
shr
adc
outsb
push
sub
xor
movsb
dec
ret
ljmp
jo
xchg
js
jle
xchg
adc
int3
pop
shlb
add
or
ss
adc
cmp
mov
xchg
mov
jne
xorl
subl
mov
enter
sar
push
mov
out
xchg
hlt
cmpl
stos
ja
cs
push
rol
cltd
jae
cmpsl
ljmp
testl
mov
xlat
aam
sahf
mov
stc
das
aad
adc
aas
mov
lret
nop
pop
mov
clc
fdivr
mov
xor
andb
call
mov
fstpl
dec
jmp
pop
cld
mov
mov
ja
cs
mov
int
inc
or
repz
cmc
fdivrs
or
xor
adc
sahf
push
lret
cmc
push
movsb
mov
add
xchg
cmpsl
imul
cmc
stos
cmc
sub
inc
int3
and
addb
pop
pop
hlt
or
mov
mov
gs
push
and
call
push
mov
scas
and
xchg
ror
stos
pop
mov
pop
jle
inc
fs
js
lds
mov
pushf
sub
dec
cli
insl
pop
js
xchg
jl
rol
inc
outsl
into
in
lds
mov
loop
inc
pushl
sbb
cmp
push
mov
push
pop
xor
cltd
mov
push
hlt
fisttpl
ror
subl
aaa
dec
clc
mov
scas
xor
in
mov
pop
dec
mov
je
inc
loope
and
cmc
push
sbb
pop
sub
pop
push
pop
mov
jg
push
or
adc
addb
jb
or
in
outsb
sub
jo
push
push
push
insb
jmp
pop
cmp
out
mov
pop
and
icebp
in
mov
xchg
aam
paddw
jbe
hlt
leave
out
out
bound
inc
nop
sub
adc
lods
incl
in
sbb
dec
aas
lods
push
ficomps
les
pop
lock
loop
add
fdivp
call
fs
ud2
and
ss
cmpsb
cmp
jge
int
push
add
push
rclb
sbb
xchg
sub
mov
and
into
outsl
popa
mov
xchg
mov
lea
adc
mov
mov
sub
loope
add
cmc
mov
enter
mov
lea
fwait
insb
mov
rorl
scas
push
xor
mov
addr16
push
ret
fistps
xchg
xor
cmpsb
add
push
lods
rcl
js
dec
adc
imul
adc
adc
sub
push
je
push
icebp
lahf
loope
idivb
mov
repnz
test
xchg
pop
inc
inc
pop
addb
lock
or
leave
xor
test
inc
pop
xlat
xchg
and
pushf
bound
xor
outsb
push
nop
dec
add
call
add
add
dec
push
mov
imul
aaa
subb
mov
mov
test
rcl
push
jb
inc
mov
mov
cltd
xor
xchg
push
fwait
pop
cmp
mov
mov
mov
enter
sub
scas
rorb
rol
test
out
shlb
sub
push
mov
add
push
cmp
and
jg
adc
adc
push
jne
adc
out
sub
enter
rcll
add
jbe
jbe
sbb
scas
es
adc
push
jg
stos
xorl
std
call
dec
loopne
jb
mov
push
xchg
movsl
shl
insl
cmp
in
adcb
push
aad
jo
cmp
das
testl
adc
icebp
sub
movsb
mov
cli
sbb
sahf
movsb
jecxz
xor
xor
xchg
ds
sbb
int
mov
mov
xor
adc
dec
push
and
inc
imul
inc
push
add
arpl
clc
fidivrs
rolb
lock
test
mov
add
ja
mov
mov
lcall
jno
xor
push
push
rolb
dec
jg
lret
stc
xchg
sub
xor
jo
inc
mov
fiadds
add
add
add
jns
sbb
pop
repz
sbb
popf
xchg
pop
or
je
sub
frstor
xlat
push
mov
jp
pushf
xchg
subb
jo
inc
sbb
ret
and
add
adc
cmpsl
ss
cmp
pop
pusha
ljmp
in
scas
sub
lcall
mov
mov
arpl
cli
in
out
mov
and
or
insb
mov
inc
popf
adc
cmc
lods
fcmovnbe
push
add
lahf
fiaddl
push
xchg
cmp
mov
mov
sbb
adc
or
ljmp
addb
adc
loopne
sub
cmpsl
push
inc
clc
cmc
fidivs
aam
inc
add
sarb
enter
add
lock
out
aam
int
inc
pop
cmc
add
and
les
fdivs
mov
mov
cmp
mov
lods
pop
push
pop
loopne
push
cmp
shr
test
lret
dec
sahf
sahf
xor
ret
inc
scas
hlt
pop
adc
pop
cmpb
in
mov
jg
sbb
lcall
inc
mov
and
dec
imul
xor
repnz
in
test
into
and
jge
scas
les
push
test
push
mov
out
pop
or
xor
cli
rorb
mov
push
lcall
mov
je
jg
pop
cmp
mov
lcall
sbb
inc
pop
ss
pop
jne
mov
mov
mov
mov
sbbb
adc
dec
loope
cmp
jg
icebp
pop
adc
mov
ja
dec
cmpsl
and
je
out
insl
int
popa
std
cs
jecxz
dec
adc
dec
xchg
repnz
sub
and
adc
call
sub
push
sbb
mov
aad
cmp
iret
adc
out
in
mov
jno
xchg
push
cmc
xor
mov
cli
and
dec
stos
push
push
imull
and
loop
ljmp
icebp
jnp
out
es
sub
call
dec
mov
int3
lds
cltd
sbb
xchg
sub
xchg
mov
fs
push
push
dec
dec
ljmp
xchg
test
negb
outsb
inc
lcall
add
std
mov
pop
adc
jge
out
rorb
inc
pop
popa
and
jg
pop
mov
enter
call
inc
pop
jle
jge
das
clc
out
jmp
adc
dec
aas
xchg
lods
inc
xor
sbb
movsb
mov
call
fsubl
lods
push
jb,pt
lcall
mov
mov
test
out
xor
cmp
pop
sbb
incl
scas
jle
xlat
inc
enter
setle
mov
or
cli
call
add
sarb
dec
inc
and
jne
jo
je
mov
test
cld
inc
xchg
arpl
aas
inc
cmp
iret
je
jae
jmp
pop
pusha
xor
cmp
mov
hlt
clc
add
jl
lds
int3
pop
adc
and
push
ret
cmp
push
ret
dec
xor
hlt
push
hlt
fistpll
out
ja
mov
mov
data16
dec
xor
mov
cmpsb
movsl
dec
enter
leave
pop
sbb
add
sub
mov
sbb
push
clc
fisubrs
ss
ret
cmovle
fcmovnb
mov
pop
pop
lret
das
jmp
mov
jmp
ret
stc
push
add
jg
jmp
mov
aaa
jg
adc
and
jl
pusha
imul
int3
es
test
cmpsb
mov
aaa
xchg
scas
mov
add
and
mov
push
mov
pop
icebp
fistpll
cmp
xchg
xor
ljmp
xor
or
pop
push
rorb
loop
out
test
bound
jle
cmp
cmp
imul
movsl
das
inc
sbbl
xchg
mov
pop
mov
cmp
add
mov
xchg
fwait
out
push
sti
push
xor
sub
xor
cld
cmp
addr16
adc
add
xchg
dec
mov
sti
cs
pop
push
daa
bound
mov
or
hlt
cmc
or
call
xlat
sbb
xchg
sbb
or
cmp
dec
push
push
xor
imul
jg
add
out
xchg
stc
sbb
mov
lret
dec
mov
cmpsb
loope
or
sbb
pusha
pop
jbe
push
jns
iret
mov
and
jb
adc
or
adc
shll
rorl
push
dec
testb
cmpsb
xchg
ljmp
mov
adc
pushf
adc
mov
roll
loop
adc
adc
pop
adc
xor
stos
dec
cld
lcall
cmpsb
sub
xor
dec
fld
cld
pmaddwd
adc
repz
cltd
lret
push
cmp
cmp
xchg
cmp
shll
push
jge
push
xchg
mov
mov
xor
mov
test
fsubrp
mov
lods
ljmp
cs
push
add
insb
roll
dec
scas
rclb
loop
ja
pop
insb
lods
mov
sbb
mov
shll
jmp
negb
scas
push
lahf
or
loop
mov
add
push
xchg
xor
or
pusha
xchg
test
fcomps
and
sbb
sbb
mov
inc
jl
lods
lods
lods
aam
rolb
cmp
pop
or
popa
adc
and
cmp
mov
sub
add
scas
adc
mov
out
jg
incl
mov
enter
add
fsubrp
int3
inc
mov
wbinvd
or
test
dec
scas
jbe
mov
ret
xchg
cmp
jmp
inc
int3
jp
sbb
mov
fwait
dec
std
ja
push
add
daa
fistps
pop
jne
fsubl
cs
lcall
inc
xor
pop
push
loopne
cs
sub
popf
es
jge
mov
into
mov
ja
outsl
movsb
push
inc
fwait
sub
cmp
sbb
mov
sub
sub
je
hlt
mov
pop
sar
adc
pop
mov
push
je
shrl
jmp
cltd
push
jl
pushf
shlb
out
and
adcl
popl
mov
daa
cmpsb
loopne
sub
push
mov
push
sub
push
pop
hlt
jne
iret
outsb
xchg
hlt
mov
call
pop
ret
dec
clc
es
lret
xlat
jb
fnstsw
or
and
lods
mulb
cmp
dec
adc
aaa
jp
loop
mov
add
call
pushl
jns
divb
add
cmp
out
xorb
stos
mov
xor
jg,pt
mov
sbb
fdivrs
fcomi
aas
push
pop
jge
or
and
shrb
push
int
pop
hlt
incl
inc
mov
movsl
or
stc
outsb
dec
cmp
mov
outsl
push
or
mov
lds
in
loop
or
pop
bound
sub
mov
sub
xchg
ret
outsl
cli
cs
mov
sbb
add
or
and
sub
cwtl
mov
mov
sti
push
shlb
inc
stos
clc
cmp
test
sbb
mov
mov
loopne
pop
test
adc
adc
lock
sub
adcl
adc
stos
ficoms
xchg
aaa
imul
ja
imul
cmp
pop
cmp
or
pop
inc
mov
sub
and
sbb
xor
orl
pop
push
jg
pop
sub
add
mov
loope
icebp
arpl
fld
sahf
mov
clc
stc
divb
fnstcw
call
out
jae
ss
mov
mulb
addr16
shll
pop
lock
sub
mov
test
pop
data16
jbe
push
out
jo
cmp
fcompl
xchg
icebp
sar
mov
je
sbb
cli
dec
dec
call
call
adcb
pop
dec
movl
push
pop
push
and
jb
outsb
popa
jnp
imul
mov
xor
ficoms
push
pop
aas
movsb
mov
push
lcall
mov
testb
fsubrs
and
mov
cmp
je
push
push
pop
inc
push
aas
cld
jg
cld
jle
mov
adc
pop
scas
fiaddl
push
nop
test
adc
pushl
push
inc
jae
addb
test
lods
out
aam
jecxz
stos
cwtl
test
icebp
sbb
mov
ja
call
push
js
push
sub
outsb
js
mov
mov
lods
cmpsl
outsb
stos
push
loopne
inc
stos
imul
inc
push
push
xor
ljmp
pop
push
lods
xor
movsb
adc
scas
aad
xchg
push
push
fs
stos
lock
popa
add
mov
mov
xchg
mov
out
xchg
es
lret
and
xor
scas
clc
out
sahf
push
jbe
cmp
sbb
cld
jl
jb
dec
pop
popa
cli
in
sub
pop
mov
jle
mov
inc
dec
fidivrl
in
lock
or
loope
xor
pop
jo
leave
insl
lods
mov
arpl
ja
inc
push
xor
mov
xor
xor
sarb
or
pop
std
mov
add
or
in
pop
and
cmp
cld
mov
or
les
sbb
adc
mov
sahf
pop
divb
sbb
sub
inc
sub
mov
mov
or
inc
push
xchg
aaa
xchg
sbbb
lret
cwtl
lahf
and
cmp
push
mov
mov
lret
inc
addr16
jbe
std
scas
mov
insl
xor
mov
addl
outsl
pop
sub
push
pop
xchg
mov
cmc
mov
sub
mov
out
jmp
int3
xchg
orb
dec
mov
jmp
test
hlt
add
or
mov
inc
leave
out
pop
insl
loope
xor
mov
sbb
shrb
sahf
cmp
mov
cs
and
ljmp
fisubl
lcall
sar
jae
pop
mov
mov
pop
leave
popf
push
scas
pushf
mov
push
mov
ret
mov
push
or
ficompl
int3
xchg
jno
pop
or
or
lods
popf
and
dec
mov
xor
mov
cmp
fildll
mov
sarl
je
andl
cli
push
je
mov
roll
xor
sahf
popa
mov
dec
in
dec
cmp
or
call
mov
idivl
fiadds
subps
movsl
loopne
aaa
negl
dec
lock
mov
mov
call
inc
push
scas
es
jmp
and
loopne
decl
add
xchg
sbb
push
call
or
push
scas
push
std
imul
clc
lahf
xchg
pop
mov
lods
xchg
bound
mov
lods
sbb
cmc
mov
jb
in
scas
and
inc
and
repz
mov
mov
lock
cmp
stos
mov
jle
adc
inc
add
xchg
std
dec
cmp
pop
jae
adc
pop
push
sarb
aas
sub
cmp
jbe
iret
in
jmp
cld
or
xchg
icebp
cmp
adc
inc
inc
pop
sub
mov
loop
and
ds
jns
sub
insl
mov
lret
insb
rcr
xlat
or
mov
mov
ds
imulb
ds
dec
cmp
push
or
pop
xor
cs
lahf
fidivs
sbb
xchg
je
add
xchg
pop
adc
sahf
sar
sbb
sub
and
insb
jg
jne
test
xor
mov
out
ljmp
cwtl
mov
or
push
test
into
mov
adc
adc
icebp
xchg
pop
sbb
mov
push
inc
cmp
and
lock
cld
and
sbb
in
lret
mov
stos
dec
je
into
es
call
adcl
xchg
push
adc
sub
es
dec
inc
inc
mov
and
xchg
xchg
es
jg
lds
out
pop
pop
stos
push
mov
add
aam
mov
mov
push
adc
mov
rcrb
jmp
decb
pop
adc
push
push
insb
es
movsl
negb
xchg
or
push
and
cs
inc
jecxz
insl
ret
push
cmc
je
cli
inc
add
lcall
pushf
ss
push
sar
scas
rcll
cmc
subl
xchg
lahf
mov
sub
adc
jg
iret
fcom
dec
pushf
aas
xor
cs
out
xor
out
out
mov
mov
js
fcmovnu
hlt
daa
ret
enter
imul
jb
mov
pop
jg
dec
out
mov
incl
orb
cli
pop
stos
mov
inc
arpl
jle
jl
adc
jg
mov
rcrl
adc
sahf
fdivrl
push
clc
xchg
ljmp
mov
in
inc
adc
xchg
xchg
mov
in
test
ja
ss
es
inc
pushf
jmp
fistpl
mov
mov
add
andb
inc
mov
shrl
mov
cmp
adc
mov
mov
pop
insb
mov
push
aad
sub
fidivrs
lcall
mov
shr
adc
cli
inc
std
shl
fistps
sub
cli
int
into
mov
imul
adc
mov
frstor
clc
stos
mov
or
loop
std
cmpsb
popl
repnz
jge
loop
or
xor
mov
mov
push
sbb
aam
xchg
cmp
cmp
add
jle
cs
cmp
mov
sub
leave
fcoml
out
cmpsb
jmp
cmp
mov
outsl
es
aad
ret
das
fisubrl
fadds
cmpsl
mov
mov
add
sub
in
sbb
mov
mov
push
stos
orb
jp
cld
popa
fmull
push
cld
divb
inc
pop
adc
fcmovnu
or
push
pop
sub
jl
outsl
add
jl
loopne
adc
je
clc
frstor
jno
xchg
or
aaa
sub
outsl
sub
clc
outsl
dec
jp
cwtl
cmpsl
xchg
mov
xchg
xchg
mov
aaa
lods
std
fistpl
inc
add
cmp
lock
mov
filds
or
adc
mov
popa
bound
decl
mov
lods
iret
xchg
out
xchg
shl
mov
sbb
add
jp
out
cmp
fidivs
and
insb
jne
imul
sbb
push
pop
mov
sub
rolb
adcb
movsl
jne
dec
rclb
fucomip
test
jp
sub
movsl
and
sub
pushf
sti
and
lods
call
jge
stc
or
ljmp
pop
mov
sbb
sbb
dec
or
mov
jg
lock
inc
in
sahf
pop
insb
std
jle
loopne
push
mov
or
loop
push
fiaddl
lahf
test
int
dec
inc
int3
icebp
mov
lock
pop
jno
inc
insl
xchg
mov
stc
aaa
pop
adc
pop
mov
pop
cmp
scas
fldl
mov
mov
movsb
incb
push
ret
jae
and
cwtl
push
xor
mov
push
ja
js
mov
sub
repnz
cld
dec
mov
mov
sub
out
or
cmpsb
test
inc
ret
stos
aas
inc
sbb
sbb
incl
sub
jp
imul
sub
push
xor
hlt
sbb
das
daa
shll
push
pop
cmp
iret
in
rclb
xchg
mov
and
inc
fidivrs
stos
xor
mov
mov
add
in
test
rcrb
pusha
frstor
mov
mov
cmpsl
pop
mov
xchg
add
jno
outsl
dec
push
fidivs
xor
dec
cli
xor
movsl
sti
or
inc
out
xchg
ja
andb
push
lahf
cs
mov
lods
push
cmp
ffree
add
xchg
mov
ficomps
push
push
push
adc
inc
xchg
xor
mov
or
mov
mov
pop
loope
mov
jl
shl
mov
fdivrs
repnz
mov
push
aaa
mov
movsb
insb
cmp
ret
insl
icebp
cmp
movsb
mov
or
ficomps
hlt
into
add
mov
sub
imul
jl
push
inc
mov
lret
ret
xchg
adc
and
std
and
xchg
imul
xchg
ljmp
shll
adc
xlat
pop
cmp
pop
insl
xchg
leave
add
push
xchg
push
or
in
lds
sbb
jecxz
xchg
mov
mov
or
adc
fisttps
xchg
iret
hlt
lock
popl
fs
pusha
aad
xchg
pop
cld
outsl
mov
and
mov
std
mov
call
pop
and
and
pop
mov
addr16
xor
xchg
mov
adc
cli
jno
sbb
fbstp
call
xor
pop
mov
and
out
push
je
sub
call
fidivrl
ljmp
push
out
adc
outsl
jnp
iret
sbb
mov
loope
aas
add
cmp
rolb
jmp
mul
push
scas
mov
dec
lret
inc
dec
jnp
cmpsl
insb
and
imul
call
and
mov
add
jne
mov
popa
gs
ljmp
adc
shll
ljmp
push
push
fs
jne
mov
mov
movsb
push
push
mov
incl
adc
inc
pop
sbb
mov
and
xchg
fcoml
les
iret
add
adc
cld
jmp
int3
ljmp
out
push
cltd
push
adc
xchg
pop
je
add
insb
pop
cmp
imul
ljmp
adc
pop
add
and
pop
mov
fs
and
pop
cmp
and
cmc
and
pusha
push
mov
push
jae
shrb
push
pop
fstl
pop
shlb
pop
or
xchg
aaa
fs
mov
call
enter
jnp
mov
imull
test
aaa
sbb
pop
mov
inc
incl
mov
lret
pushf
rcr
cmp
imul
mov
les
cltd
mov
call
jmp
lcall
repz
and
es
adcb
mov
mov
mov
stos
jl
ss
mov
cmp
bound
adc
jae
or
adc
and
mov
mov
insb
cmpsb
sub
repz
xor
into
xchg
fiadds
jge
clc
pop
addr16
scas
es
pop
dec
ss
pop
inc
lahf
inc
loopne
cwtl
bound
orb
scas
clc
mov
jne
test
pop
add
mov
lea
cmp
cli
ja
and
inc
call
cmp
out
mov
out
aas
ret
outsb
mov
or
push
inc
stc
fs
adc
js
ret
cwtl
inc
iret
stos
jg
or
and
pop
xor
or
adcl
mov
aam
dec
call
xor
jbe
daa
mov
xor
and
cmpsb
jmp
add
daa
mov
call
mov
out
shr
mov
push
cmc
aaa
popf
push
or
pop
inc
or
ja
scas
cmc
incl
imul
adc
sti
push
cmp
mov
dec
pushl
pop
cld
incl
pusha
xchg
cmp
xor
fisttpll
out
sub
jns
pop
adc
push
into
push
sbb
add
incb
cli
adc
mov
ds
push
lock
xchg
mov
outsl
jno
stos
jg
inc
inc
adcb
mov
sbbb
scas
and
xchg
xor
test
and
xor
jge
ljmp
adc
outsb
sub
aas
ret
jle
mov
pushf
xchg
ret
and
jae
pop
clc
mov
mov
mov
jbe
rolb
jmp
out
cmp
fwait
inc
imul
out
clc
xor
push
je
dec
dec
psllw
aas
iret
stos
int
adc
jge
imul
sub
dec
xlat
cmp
sub
je
push
bound
mov
mov
rclb
icebp
aaa
jnp
mov
push
pop
sub
cmc
adc
push
dec
mov
lock
sbb
cmp
pop
fidivs
or
sub
adc
cmp
pop
push
lods
mov
shrb
jg
outsl
jp
fiadds
push
scas
fcmovnbe
or
mov
dec
pop
pusha
push
sub
cld
outsb
pop
xchg
mov
dec
sub
xor
dec
xor
cmp
mov
pop
jge
cld
outsl
mov
repnz
andb
xchg
mov
adc
inc
mov
repnz
mov
std
das
mov
loopne
jnp
aaa
icebp
cmpsl
xor
sub
xchg
mov
mov
or
loopne
cwtl
int3
mov
push
ss
mov
rolb
inc
mov
xor
imul
popa
ljmp
incl
mov
push
push
daa
outsl
cmp
lds
pusha
test
aad
fcompl
jno
fprem
mov
test
cltd
aad
cmp
sbb
push
fdivr
push
inc
jp
push
jbe
mov
stos
incb
lahf
call
mov
in
push
pop
outsb
jne
ljmp
ljmp
rcrl
and
incl
sti
mov
mov
xchg
jecxz
and
inc
repnz
inc
xor
jecxz
movsl
or
aaa
cld
lahf
add
scas
xchg
xchg
sbb
mov
xor
add
imul
cli
cld
shll
sbb
jno
aaa
cltd
jb
lock
mov
dec
jmp
sub
and
pop
ret
mov
cli
lock
std
cmp
and
jg
adc
pop
aam
jle
xchg
subb
pop
lret
lods
add
xchg
push
sbb
fidivrl
mov
pop
out
mov
aaa
testl
add
roll
pop
push
fwait
sbb
cmp
inc
mov
orl
mov
push
in
adcb
mov
xor
outsb
test
int
aaa
adc
hlt
pop
pop
pop
cs
fsincos
dec
push
and
pop
push
scas
sbb
fstl
lock
imul
mov
adc
js
lock
inc
adc
dec
inc
adc
xchg
clc
cmp
lods
rorl
jg
fists
jbe
jle
loope
mov
mov
mov
mov
mov
sbb
and
adc
icebp
call
or
aaa
pop
lcall
hlt
mov
xchg
jle
cld
decl
adc
sbb
inc
shll
pop
push
clc
dec
add
dec
cltd
push
push
incb
jnp
cmp
inc
or
neg
sub
ret
int3
pop
mov
cmp
adc
inc
push
jns
repnz
cmp
aas
dec
or
dec
add
push
cmp
adc
subb
adc
xor
adc
es
xchg
scas
xchg
arpl
cwtl
xchg
inc
clc
sub
or
push
mov
xor
xchg
fbld
and
rcr
mov
insb
pop
call
sub
or
dec
dec
push
hlt
scas
ss
adc
pop
sub
push
sbb
pop
rolb
scas
xor
cmp
mov
pop
sbb
adc
jge
push
test
enter
xor
int
mov
cld
jmp
mov
and
jns
icebp
cmp
and
scas
mov
and
jb
xor
lcall
add
fldenv
adc
ja
push
fsubr
fisttpl
mov
xorb
fldt
adcl
adc
pushf
mov
mov
loope
out
xchg
sbb
xlat
int3
mov
cmp
cmp
and
inc
pop
xchg
add
fistl
cmpsb
and
in
lds
adc
nop
push
in
cli
lcall
dec
pushf
imul
and
scas
mov
call
xor
lds
push
push
mov
ljmp
and
int3
dec
ret
stos
push
test
xchg
scas
dec
xchg
ficoms
pop
jge
mov
cmpsl
pop
fdivrs
xchg
fimuls
lahf
add
sub
inc
xchg
cmpl
jg
pop
adc
stos
xchg
out
mov
cmp
fldenv
xchg
enter
cwtl
pop
sar
jmp
inc
xchg
clc
mov
sub
arpl
incb
dec
jp
out
jns
pushf
fidivrl
push
lock
sub
or
fsubrl
mov
inc
into
jp
or
jl
fnstenv
test
adc
mov
cld
mov
ja
cmp
shll
jle
pop
mov
sbb
out
pop
push
jmp
lds
popfw
adc
dec
lods
outsb
dec
movsb
xchg
and
pop
cmp
dec
jl
push
mov
add
mov
outsl
cmc
mov
add
push
push
je
adc
decl
fisubl
jnp
adc
lcall
mov
popa
movsl
decl
mov
cld
sub
movsl
jg
adc
lock
pop
lods
jl
ljmp
mov
and
loopne
popa
pop
add
jp
hlt
lahf
mov
mov
sub
mov
inc
jmp
bound
mov
mov
js
cmpsb
fisttpl
cmp
or
mov
loopne
push
xchg
push
inc
cmpb
incb
inc
jp
jp
jmp
rclb
fdivl
call
fst
dec
les
sahf
mov
mov
xor
lds
es
jo
movb
insl
jp
fcomps
inc
fdivl
std
xchg
call
dec
outsl
sti
cli
stos
rorb
mov
push
std
hlt
adc
add
ffree
popl
jp
aaa
repz
pop
test
loopne
incl
pushl
xor
and
jmp
and
sub
sub
sub
pop
jge
test
lahf
inc
push
xlat
add
mov
dec
out
dec
mov
sbb
cmpsb
cli
mov
shll
sub
lret
and
mov
or
ja
xchg
lcall
inc
leave
mov
mov
adc
mulb
sbb
pop
inc
push
daa
sbb
ja
jo
shrl
fucomi
out
mov
cld
push
jp
pushf
into
mov
mov
mov
jle
and
cmc
test
rorb
jp
cld
mov
outsb
mov
mov
lea
icebp
call
push
scas
sbbl
mov
jle
loop
sub
jae
adc
mov
in
push
add
lcall
and
movl
push
fcomp
pop
xchg
fbld
mov
push
inc
rolb
pop
xor
push
mov
arpl
dec
movl
mov
sbb
push
or
pusha
or
lock
fadds
pop
loopne
push
je
test
aaa
pop
dec
jge
push
cli
xchg
mov
pop
mov
test
sahf
mov
loopne
pop
sub
mov
sbbb
sub
outsb
lods
ret
cli
xchg
js
mov
ljmp
cmc
fldt
aam
and
mov
and
in
sub
mov
inc
xor
sub
inc
push
adc
negb
mov
mov
add
mov
bnd
lods
outsl
xor
cld
pop
cli
popf
jb
jle
jnp
fists
jge
lcall
iret
outsl
out
push
ljmp
cmpsb
sub
mov
pop
lcall
sahf
test
xchg
je
aaa
xor
xchg
wrmsr
inc
mov
mov
lret
push
orl
push
scas
mov
fidivrl
xor
les
je
xchg
mov
movsl
imul
hlt
lcall
dec
sti
push
xor
mov
sbb
mov
xchg
mov
and
fdivs
clc
mov
sbb
lea
adc
gs
push
xchg
jle
decl
addb
ljmp
out
mov
cltd
pop
lcall
cmp
sub
lret
dec
dec
sti
add
cs
cli
pop
adc
push
cmc
inc
pop
movsb
jns
rcrb
push
pop
push
lea
fstpt
aas
mov
push
test
test
pop
addr16
xor
or
sub
in
sahf
lods
outsl
jbe
cli
xor
xchg
mov
mov
add
cmpb
sarl
lock
ret
xor
sub
cmpsb
outsl
push
push
sbb
enter
dec
mov
lods
xchg
pop
rcll
leave
in
dec
xchg
mov
roll
icebp
sbb
sub
push
add
xchg
add
jle
in
add
push
scas
jle
mov
outsb
scas
popf
push
push
push
xor
imulb
inc
pop
mov
cld
dec
dec
out
nop
push
loopne
xor
mov
push
jg
pop
stos
mov
dec
loope
lret
xchg
imul
repz
cmpl
cs
in
xchg
ds
sub
out
jo
mov
jle
divb
add
fildl
aaa
push
rcr
and
dec
mov
decl
xchg
push
lret
stc
xor
mov
mov
insb
fmuls
or
mov
ja
dec
add
inc
repz
shl
xchg
mov
js
adc
adc
cmpsl
push
sbb
xor
pushl
jl
and
rcrb
mov
clc
addr16
or
ret
fcompl
pop
adc
pop
mov
in
cwtl
jo
or
outsl
clc
loope
mov
dec
xor
add
lock
mov
out
in
or
in
mov
ss
notb
sbb
xchg
call
dec
mov
decl
pop
push
mov
and
xchg
jp
iret
cmp
js
cmp
cwtl
mov
cmp
cmpsb
cltd
cmp
push
mov
jl
cmc
sahf
cmp
mov
fcomip
mov
mov
fmuls
mov
push
insl
sbb
push
lret
insb
movsl
test
push
adc
jp
subb
mov
dec
xchg
cli
addr16
enter
out
mov
inc
mov
xchg
testb
in
mov
loope
int
rolb
add
mov
loopne
jns
mov
insl
lods
push
mov
cli
out
cli
mov
cld
xor
pop
jmp
or
ljmp
mov
sahf
mov
xlat
test
fbld
mov
xor
add
lahf
bound
push
pop
mov
pop
aaa
and
xchg
adc
mov
sub
xor
mov
pop
jnp
ret
aaa
or
add
pushl
es
sbb
jns
and
int
push
sar
mov
jb
push
xor
inc
mov
mov
dec
xor
lcall
je
pusha
fs
add
call
cmp
mov
pop
xchg
fisubl
inc
incl
decb
jge
push
outsl
inc
addl
xchg
dec
dec
xor
mov
mov
mov
out
jo
push
xchg
inc
add
sbb
out
sub
jg
mov
push
testl
jl
sub
sub
jp
pop
adcb
imul
pop
adcb
add
and
cmpsl
popf
xor
push
pop
ss
pop
inc
mov
fcos
call
pop
add
cmp
subb
and
or
jge
test
int3
popa
push
push
pop
add
push
dec
das
cmc
xchg
dec
dec
sub
mov
jecxz
mov
cmp
fdivr
ljmp
mov
ret
adc
mov
test
or
sub
nop
mov
or
aad
out
and
sub
xchg
xor
push
movsl
cmp
das
pop
popa
ljmp
add
mov
fwait
mov
test
test
cld
cmp
xor
mov
push
cs
or
jl
sbbl
fsubrs
aam
pusha
mov
aad
lcall
fs
in
mov
xchg
hlt
ljmp
cli
ljmp
cwtl
pop
pop
and
bound
mov
aaa
mov
movsb
rolb
xor
pop
push
jo
xor
dec
pop
cmp
pop
jp
cs
fistps
cmp
xchg
aas
inc
xor
test
adc
fstpt
mov
mov
dec
dec
loopne
mov
shll
es
pushl
adc
cmp
xchg
stc
adc
add
push
inc
cli
ljmp
out
add
mov
fs
sbb
repnz
lods
sub
adc
leave
inc
scas
pushf
mov
std
aas
scas
lods
and
pop
mov
adc
enter
mov
adc
push
sar
inc
out
sbbb
add
or
out
add
xorb
fs
dec
push
cmp
xchg
or
sub
and
outsb
adc
movsb
xor
leave
pop
xor
cmpsb
cs
in
inc
dec
push
and
push
cld
add
or
or
and
fwait
out
xor
sbb
mov
push
mov
icebp
mov
sti
mov
mov
pop
ds
es
out
mov
aam
stc
xchg
mov
sub
repnz
ror
aaa
fcom
sub
lock
sub
and
fcomip
mov
mov
inc
sti
xor
jg
loop
inc
xchg
mov
fs
sub
mov
jno
mov
xchg
mov
testb
mov
sub
mov
push
sbb
jbe
xor
sbbb
jne
mov
adcb
cmc
xor
jg
imul
and
jbe
mov
inc
lcall
stc
fstpl
inc
cld
mov
ffree
cli
sub
std
fbstp
sub
mov
xorb
xchg
sbb
insb
mov
mov
call
sub
dec
jb
arpl
dec
cli
dec
adcb
mov
adc
add
jbe
dec
mov
sub
push
outsl
mov
jae
loopne
nop
mov
adc
test
ss
mov
js
out
xor
dec
lahf
icebp
adc
mov
push
xor
xchg
idivb
mov
lock
cltd
jge
call
ret
push
into
nop
loope
test
jo
pop
cmp
mov
or
popf
mov
or
mov
insb
movsb
icebp
mov
xor
outsl
aad
cmpsb
pop
nop
cli
int
loope
ret
jge
pop
or
adc
jno
cmp
push
or
or
sbb
xchg
push
sbb
cld
ds
adc
inc
sub
mov
pushl
cmp
cmp
or
xchg
cmp
mov
movsl
jg
cs
loopne
addb
nop
push
fdivs
rcl
push
test
call
lock
jo
mov
popa
fwait
iret
test
fs
mov
mov
push
jns
in
test
incl
jl
or
adc
mov
jmp
out
xor
and
arpl
lret
outsl
sbb
mov
sub
movsb
test
clc
sub
cli
lea
fs
loop
and
scas
cli
add
jmp
mov
mov
shl
xor
gs
xor
fcomps
shrb
mov
fidivl
adc
push
repz
jmp
mov
push
jl
aaa
and
mov
or
mov
lcall
icebp
push
mov
sub
inc
fcmovb
fbld
lret
xchg
stos
xchg
out
loopne
incl
movsb
sub
mov
jp
mov
push
cwtl
popf
pop
xor
lret
sbb
and
mov
hlt
add
jg
mov
ret
in
gs
cwtl
xor
adc
or
mov
mov
daa
loopne
fs
dec
xchg
pusha
repnz
cmpl
ret
sbb
dec
xchg
cs
pop
mov
cmp
lcall
inc
or
xor
add
fidivs
cwtl
adc
add
jmp
add
mov
inc
push
test
push
mov
cs
das
jbe
inc
sub
testb
or
xor
jbe
cltd
and
jbe
mov
rcl
fbld
jo
dec
arpl
fcmove
loopne
mov
into
xor
cwtl
loop
decl
mov
leave
movsb
aad
pop
call
jl
lock
fcomi
ljmp
dec
inc
pop
icebp
dec
ljmp
cmp
aam
jmp
jo
mov
xor
pushl
outsb
mulb
leave
or
push
add
sub
lock
out
das
stos
in
pop
lods
mov
xchg
sti
jp
loopne
loop
and
mov
fnsave
rclb
push
mov
jbe
xchg
jbe
inc
aas
pop
and
jbe,pn
scas
and
inc
adc
into
sahf
pop
js
mov
jp
outsb
push
sub
aaa
lret
out
cmpl
ljmp
push
pop
inc
push
das
je
mov
test
shrl
or
cmp
loopne
decl
add
and
jp
fmull
pop
sub
in
outsl
and
adc
and
mov
rclb
incl
sbb
mov
xchg
imul
mov
mov
outsl
jmp
orl
mov
add
jge
jge
cmpl
les
jne
jbe
cli
imul
aam
sahf
stos
sbb
std
pusha
js
pop
and
shlb
sbb
cmpb
dec
xchg
and
hlt
mov
push
jae
aam
jns
mov
inc
roll
rolb
fimull
add
push
add
adc
and
dec
inc
test
clc
pop
xchg
xchg
insb
jbe
add
ja
int
stc
mov
xor
popa
cmpsb
mov
scas
xor
add
dec
out
frstor
rorl
push
mov
cld
and
dec
mov
xchg
clc
lods
ffreep
lods
loope
adc
movl
loope
or
mov
repnz
mov
inc
rorl
scas
push
jle
outsl
add
rcrl
movsl
jno,pn
repnz
fadds
or
data16
mov
pop
in
mov
cmp
mov
push
mov
nop
test
arpl
push
lahf
xor
mov
lret
rcrb
xor
shrb
cmpsb
xor
push
rclb
push
orl
xchg
stos
in
out
or
es
mov
inc
sarl
push
push
outsl
pop
pop
test
inc
icebp
add
mov
jmp
or
mov
cmc
sbb
mov
outsl
jmp
adc
cmpsl
adc
fbld
repz
cs
inc
lret
pop
mov
outsl
cmp
push
adc
mov
mov
incb
sbb
in
iret
mov
jecxz
test
jmp
mov
inc
cmp
dec
add
pop
push
sbb
pop
test
and
jle
pop
nop
adc
pop
dec
leave
xor
or
sub
mov
scas
jge
clc
adc
lcall
aas
mov
out
pusha
inc
pop
mov
sbb
mov
adc
int
mov
mov
jns
jno
call
mov
add
icebp
imul
aas
mov
pop
jl
lahf
leave
hlt
negb
lock
in
in
push
daa
mov
mov
fsubs
mov
fwait
inc
lahf
jge
cmp
scas
in
mov
xchg
mov
int3
mov
insl
outsb
push
imul
add
test
xor
test
dec
xchg
loopne
loop
dec
enter
jbe
clc
out
cmp
inc
jmp
outsb
sub
out
icebp
mov
sti
movsb
fdivs
pop
addr16
jg
jbe
fnstcw
xchg
jb
mov
icebp
adc
xchg
dec
lods
dec
push
xchg
inc
addr16
pop
push
in
pop
jmp
pop
inc
jle
add
fistpll
sub
mov
pmaddwd
mov
dec
jp
jns
out
push
sbb
in
push
and
cmp
cmp
push
inc
call
cmp
and
shlb
lret
and
pop
outsb
xchg
iret
push
stc
outsl
adc
in
dec
pop
fnstcw
cmpsl
inc
icebp
and
and
repz
fsubrs
inc
loopne
pop
cwtl
scas
ss
in
add
ljmp
loop
jp
sbb
xchg
data16
pop
pop
xchg
aas
call
push
shll
in
mov
fcmove
sti
xchg
insb
repnz
push
and
into
nop
fistpl
rorl
add
dec
xor
les
jge
cvtps2pd
data16
fcoms
scas
and
fs
xor
fisttpll
pop
ljmp
push
or
cli
mov
cmp
fnsave
arpl
cmpsb
add
lret
mov
jle
sbb
vmovsd
push
xor
fs
fildll
adc
and
imul
xchg
mov
frstor
sub
lret
push
push
sbb
sub
aam
lock
add
jecxz
sbb
loope
xchg
mov
lea
stc
jle
enter
push
inc
call
xor
int3
sbb
test
mov
and
subb
or
ret
std
xor
insb
sub
les
xchg
stos
lods
hlt
xchg
hlt
push
cmpsb
ljmp
lret
cmpsb
xchg
mov
shrl
rcl
pop
inc
pop
dec
into
xor
mov
sbb
inc
sbbb
or
dec
or
mov
or
insb
repz
andl
sbb
loope
ljmp
ja
lea
rcl
jbe
in
jle
icebp
cmp
call
insb
loop
fucomi
push
ja
stos
je
and
inc
push
jne
mov
and
pop
cmc
adc
pop
stc
lret
in
bound
or
dec
cli
and
dec
mov
iret
mov
testb
dec
jp
mov
push
nop
jae
xchg
mov
pop
jg
shlb
push
sub
incl
xor
andb
inc
imul
dec
int
aad
sbb
jne
mov
inc
test
add
data16
add
out
ret
ret
es
jb
leave
push
call
je
mov
loop
xor
ficomps
out
clc
fldl
fstpt
dec
clc
pop
mov
in
jnp
cld
sbb
jecxz
cli
push
mov
jle
inc
fidivrs
jb
xchg
push
out
cmp
pop
orb
cmp
mov
repnz
aad
cld
hlt
lock
sahf
in
shlb
cli
scas
pop
cmp
ret
jle
mov
mov
dec
pop
loop
inc
insb
sar
dec
std
pushl
in
pusha
or
outsl
add
fdivs
push
bound
mov
sbb
pop
insb
xchg
out
mov
and
test
clc
push
insb
gs
push
inc
out
stos
filds
pop
mov
arpl
xor
push
mov
das
cmp
hlt
fdivrs
xor
mov
aas
dec
mov
adc
push
jne
out
mov
mov
loopne
scas
adc
lret
xchg
fcoms
xchg
cmp
jbe
or
mov
adc
mov
and
mov
dec
stos
loop
sub
mov
aaa
ja
mov
mov
and
scas
jbe
mov
sbb
sbb
sub
pop
test
int
clc
decl
lods
pop
stos
dec
daa
xchg
xor
sub
sub
push
std
mov
and
fwait
and
sub
out
out
xor
repz
cmp
push
call
enter
jle
in
insl
jbe
mov
mov
roll
or
sbb
call
movsl
push
mov
dec
popf
int3
leave
push
ret
aam
decl
adc
jp
dec
add
arpl
jb
stos
xor
jl
xchg
push
test
loop
fwait
mov
out
cmp
dec
pop
hlt
out
nop
jbe
ret
mov
arpl
ds
ljmp
into
add
test
ss
ret
mov
pop
daa
fistl
pop
inc
fldl
fdivr
aad
jg
push
pop
jnp
call
andl
dec
sahf
stc
sahf
inc
cli
fstpl
mov
loopne,pn
lods
shlb
xchg
push
les
fstps
push
and
adc
sub
push
add
jg
xor
in
lock
sar
outsl
jmp
std
bound
test
xchg
xor
adc
mov
ljmp
jle
clc
jnp
shlb
mov
mov
mov
cli
xchg
sub
jg
leave
std
aas
mov
bnd
pop
jle
enter
jg
scas
test
repnz
out
jb
out
pop
jno
out
mov
dec
scas
cmp
mov
jmp
add
or
jmp
push
jnp
pop
xor
mov
and
push
xor
clc
incl
repz
jo
pop
lods
shl
dec
faddl
or
out
sub
jbe
inc
mov
push
cmp
jae,pt
outsb
pushf
fwait
cmp
mov
xchg
adc
dec
std
imul
push
jge
ret
mov
add
mov
aam
push
adc
call
push
mov
aad
pop
push
lea
pop
or
rorb
pop
hlt
push
add
js
out
in
push
mov
nop
pusha
in
push
cmpl
or
mov
adc
popf
jl
push
pop
in
mov
repz
lret
pop
fiadds
daa
cld
js
and
cli
fbstp
pop
pop
jp
mov
js
xorb
out
cli
cli
xchg
jecxz
in
sbb
adc
call
push
stos
dec
popf
call
dec
rcr
hlt
sbb
and
dec
shlb
adc
push
xor
in
sar
pop
dec
adc
xor
stos
mov
decl
call
pop
lock
stc
movsb
xor
add
add
fisttpl
dec
daa
fsubrs
mov
imul
add
pop
mov
sbb
lret
mov
adc
and
aas
xchg
sbb
cmp
fwait
sub
mov
cmpsb
stos
into
and
stos
pop
cld
lret
mov
dec
aam
adc
ja
add
fsubs
push
frstor
ret
xchg
push
incl
data16
rcll
insl
sbb
and
sbb
or
adc
in
cmp
clc
inc
int3
push
dec
xchg
jge
fwait
or
inc
es
sbb
nop
and
push
pusha
rorb
in
decl
xchg
cmp
mov
out
ljmp
sub
cmp
push
jae
mov
mov
adc
sbb
xlat
xchg
mov
mov
movsl
or
je
pop
stos
imulb
mov
xorb
arpl
jge
mov
sub
sbb
cld
adc
or
inc
nop
fisubs
inc
int
sbb
mov
xchg
push
cmpl
sti
mov
and
clc
push
scas
lods
xchg
cltd
sub
sti
cmc
decl
mov
xchg
jnp
sub
popa
or
mov
pop
mov
and
mov
xchg
or
fwait
movsl
push
lcall
mov
and
dec
ret
insb
int3
imul
push
in
and
xchg
add
dec
adc
lahf
decl
ds
popa
cmp
out
pop
inc
mov
inc
ss
sbb
lcall
gs
insb
cmc
jbe
xor
hlt
lret
push
ja
fbld
sbb
push
popl
nop
mov
xor
lock
and
jecxz
sbbl
or
mov
or
dec
fdivs
js
arpl
dec
ror
push
adc
fwait
test
sbb
pop
ljmp
cmp
and
pop
adc
movsl
dec
pop
mov
outsl
shrb
pop
addr16
xchg
movsl
jae
lahf
mov
pushf
imul
test
adc
inc
test
pop
cmc
aas
xchg
int
pop
mov
data16
dec
loope
or
push
xchg
xor
adc
add
mov
insl
imul
incb
nop
sbb
jg
sbb
jbe
pop
mov
out
adc
sbb
loope
mov
adc
lret
add
test
sbb
mov
push
add
hlt
add
lock
xlat
cltd
lea
mov
loope
xor
movsb
inc
mov
and
fwait
test
push
fstpl
mov
push
or
into
sahf
dec
add
jg
push
push
dec
gs
push
test
ficompl
popa
fnstcw
xchg
and
stos
idivb
test
sub
xchg
sbb
fcompl
sub
cmpsb
cmpsl
mov
lds
rolb
mov
xorb
push
sub
loope
negb
mov
xchg
add
js
mov
clc
fwait
stos
clc
arpl
dec
inc
out
andb
decl
int
repnz
call
cmp
ljmp
and
test
inc
or
lock
mov
inc
mov
das
and
pop
addr16
sbb
je
push
and
imul
dec
jmp
lock
fstpl
add
pop
push
cmp
mov
push
iret
lret
outsb
xchg
xor
outsl
push
mov
cmp
push
fildll
out
mov
and
jb
pop
mov
out
into
in
lea
dec
xor
inc
mov
pop
jmp
aam
icebp
sbb
xor
jle
aam
xchg
mov
push
popa
roll
add
ret
test
outsb
inc
sub
or
in
addl
adc
adc
fbld
dec
outsb
sub
sub
dec
cmp
jns
pop
hlt
pop
movsb
jmp
pop
mov
rcrl
or
je
mov
jg
adc
in
pushf
rolb
or
call
mov
cli
daa
in
popf
movsl
movsb
les
ret
stos
js
or
xchg
rolb
mov
fwait
push
lock
dec
jp
out
mov
xor
cmp
push
test
imulb
xor
imulb
jmp
rclb
dec
lcall
lods
in
pop
hlt
imull
sbb
popa
imul
rclb
testl
pop
push
push
sarb
clc
ljmp
push
out
xor
push
js
dec
and
sub
push
lcall
mov
xor
mov
mov
movsl
addr16
pop
mov
andl
inc
stos
cmp
mov
jo
pop
fimull
cmp
adc
mov
fwait
scas
jp
push
mov
inc
pop
cmp
cli
in
mov
sbb
les
mov
nop
add
push
pop
fs
or
add
dec
rcrl
or
sahf
pop
les
ljmp
mov
sub
hlt
in
fisubs
xor
pusha
aad
nop
jp
pusha
cld
pushf
icebp
cmp
or
imul
sbb
add
cmpsl
pop
pop
dec
cli
aas
cld
cltd
push
dec
loop
imul
or
sbb
cmp
es
pop
push
and
jp
lcall
fimull
xor
sub
push
sbb
cld
or
xchg
lods
sahf
push
sbb
cli
adc
js
cmp
adc
ss
cld
pop
push
pop
sbb
jl
cmp
lods
es
or
cmp
loopne
subl
stos
sub
mov
cmpl
inc
sub
ss
clc
fcmovbe
movsb
scas
nop
cmp
fdivrs
inc
xlat
mov
je
mov
add
popl
jp
push
nop
lds
mov
sahf
jle
mov
xor
dec
pop
adc
test
cld
lcall
pop
shll
mov
popf
sub
mov
add
ljmp
sahf
push
or
sbb
sub
push
and
push
push
xor
in
dec
cmp
and
insb
adc
adc
mov
sbb
sub
aaa
or
movsl
es
inc
jbe
stos
inc
stos
cmp
push
jmp
mov
scas
pop
aad
push
xchg
jbe
je
repz
mov
pushf
sub
lock
pop
lret
xchg
je
loopne
bnd
movb
outsl
clc
ljmp
push
pop
cltd
aad
leave
xorb
push
jle
movb
pop
lock
loopne
cld
xor
inc
mov
cmp
imul
sub
data16
lea
test
pop
test
xor
xchg
out
rolb
xchg
cmp
jns
shll
inc
mov
les
pusha
fcomip
testb
imul
inc
aam
in
cld
or
aad
adc
push
xor
xor
push
scas
jmp
shlb
jmp
clc
push
cmp
bound
aaa
call
fists
cmp
enter
dec
lea
or
dec
ret
stos
adc
ss
pop
imul
fadds
out
rcr
dec
pop
pop
add
adc
decb
jle
pop
fiadds
cmp
sbbb
add
andb
push
and
ja
pop
jnp
ss
int3
clc
aaa
sbb
adc
adc
call
stos
add
inc
orl
fidivs
lret
sbb
adc
test
scas
sarb
je
nop
je
cs
xor
push
sahf
fcoms
mov
out
pushl
mov
shlb
shlb
jg
inc
xor
sbb
add
adc
adcl
and
in
das
mov
div
pusha
push
roll
lods
jo
fsubs
and
jmp
ficoms
dec
jo
jb
add
and
loopne
mov
and
xchg
and
gs
jne
jle
xor
dec
mov
push
out
jge
cltd
sbb
mov
xor
rolb
stc
outsb
cmpb
jmp
inc
mov
std
lock
and
sbb
add
andb
hlt
stos
iret
or
jl
enter
clc
data16
dec
inc
inc
addr16
repnz
and
int
stos
rorb
jg
cltd
es
dec
inc
ret
scas
push
mov
add
push
sub
cmp
pop
jg
cwtl
pop
movsb
ja
add
lock
ljmp
sub
lds
adc
dec
enter
mov
jne
into
xlat
mov
daa
out
js
lods
ret
xchg
dec
adcl
movsb
mov
dec
dec
sbb
test
pop
pop
ljmp
loop
adc
xor
jle
fidivrs
test
fimull
insb
cmp
test
push
mov
xor
sbb
test
fsubs
fimuls
data16
jmp
inc
call
jp
lock
leave
inc
xchg
jo
and
sub
pop
bound
das
adc
xor
loope
fcmovnb
push
in
dec
mov
push
mov
fnsave
ret
dec
sub
inc
mov
out
aas
pop
pop
fmull
pop
add
lret
and
lods
orl
mov
jne
push
and
movsb
push
sub
cmp
je
ja
aam
pop
out
scas
xchg
xchg
insb
insb
push
hlt
pop
and
mov
sub
xor
sub
addl
add
mulb
push
std
cmpsl
loopne
push
notl
and
xchg
aaa
js
add
jp
and
testb
adc
or
enter
cmp
mov
mov
adc
mov
fcoms
mov
imul
sar
loope
push
xchg
add
cmp
mov
shrl
outsl
cli
lcall
cmc
sub
adc
repnz
sub
mov
popf
mov
sbb
xlat
or
inc
subb
pop
sub
fmull
or
scas
mov
stos
imul
lcall
fldcw
mov
in
fistpll
or
scas
xor
jg
imul
loope
sub
addr16
lods
adc
cli
insb
pop
mov
jle
mov
xor
sbb
adc
pop
mov
leave
jmp
int
fisubrs
ja
jle
sub
fists
push
pop
call
mov
jecxz
or
pop
bound
lret
lcall
lods
or
cmp
push
mov
movsb
inc
push
jle
add
rol
jmp
ss
inc
adc
sub
xchg
cwtl
js
pop
inc
hlt
insb
pop
mov
cs
add
push
pushf
push
movsb
sub
push
cmp
fsubrl
fiaddl
mov
fstpl
stos
insl
adcb
fwait
ss
fnsave
lods
xchg
movsl
inc
outsl
es
loop
ficomps
shll
lret
adc
ss
mov
out
xor
das
aam
es
push
fistl
stc
xchg
fldt
cmc
push
jbe
out
push
xor
pop
aam
inc
jl
or
js
adc
mov
movsb
mov
add
sub
add
stos
fwait
mov
lock
mov
fisttpl
push
lock
cli
mov
mov
out
jno
adc
leave
hlt
pop
cs
xchg
push
or
pop
sbb
cltd
into
dec
xlat
int3
rcll
inc
add
movsl
pushf
out
pop
jle
lods
and
dec
adc
aas
pop
mov
mov
sub
xlat
dec
es
hlt
mov
pop
std
xchg
lods
adc
adc
inc
pushl
sub
sub
decl
insb
rolb
xchg
stos
xchg
inc
pusha
adc
jo
fdivp
loop
sbb
dec
hlt
subb
ret
mov
mov
repz
sbb
daa
xchg
lcall
mov
into
incb
loope
fcoml
ret
cmpsb
or
sahf
jecxz
push
inc
lods
das
push
inc
sbb
idivb
inc
jae
addr16
stos
call
mov
xchg
dec
cld
fisubrs
in
sahf
imul
je
xchg
cmpsb
or
xor
dec
push
add
and
or
dec
inc
sub
push
cmp
mov
and
mov
call
aad
add
pushw
dec
test
insb
xor
sub
mov
sbb
movsl
xchg
inc
fs
and
push
aaa
std
jbe
xchg
xor
scas
cmp
dec
shll
pushf
in
sbb
pop
shlb
std
or
cltd
xlat
imul
aaa
ja
push
cmp
jecxz
in
push
add
wrmsr
mov
dec
jmp
lcall
mov
and
add
sbb
rcrb
les
dec
loop
out
mov
loop
adc
inc
sbb
fstpt
mov
mov
movsb
lret
cli
call
jnp
dec
sub
dec
ljmp
adc
mov
push
pop
scas
sti
pop
pushf
pop
in
lahf
or
jbe
inc
lods
mov
sbb
cld
cmpsl
cmp
inc
mov
inc
xor
xchg
and
dec
fmull
dec
loop
js
lret
test
cld
fwait
push
sar
xor
das
movsb
cmp
cli
out
ss
mov
pop
rcl
push
pop
loope
pop
insb
sbb
add
pop
stc
fdivp
out
jb
sahf
dec
dec
adc
hlt
mov
or
xchg
sub
das
mov
pop
pop
outsb
add
and
aad
xlat
es
std
cmpsb
mov
jmp
adc
into
dec
movsl
int
leave
xchg
idivb
shlb
imul
sbb
pusha
push
stc
test
lcall
decb
sbb
or
cmp
repz
lock
xor
testl
fbld
add
pop
mov
dec
lahf
xchg
inc
frstor
cmc
mov
ds
push
aas
jle
inc
lahf
bound
jnp
rclb
inc
mov
cmp
cs
push
adc
pop
fimull
or
lcall
aaa
inc
insl
mov
enter
cld
in
daa
in
xor
push
add
push
sub
inc
adc
rcll
push
fdivl
call
int
cmpb
push
sahf
inc
addps
or
imul
mov
stos
push
push
mov
outsl
incl
jg
shl
fcoml
rclb
nop
sub
sbb
in
add
add
xchg
lock
pop
pop
loopne
std
popa
xorb
push
dec
pop
ljmp
imulb
xchg
push
cmp
pop
jmp
stos
lock
pop
push
inc
loopne
enter
pop
xchg
cmp
fmuls
mov
inc
adc
mov
push
in
fisttps
mov
mov
in
hlt
push
rolb
and
mov
das
cmpsb
lea
mov
xchg
push
jle
or
icebp
in
push
push
inc
sub
xchg
imul
xor
call
cmp
push
mov
cmpsb
jne
mov
test
shl
sub
mov
pop
pusha
icebp
sub
cli
mov
pushw
out
mov
hlt
hlt
xchg
adc
je
inc
cld
popf
movb
mov
mov
xor
stc
mov
icebp
cmpsb
lods
sbb
inc
in
and
and
xchg
mov
lret
fistps
cmc
or
cmp
inc
mov
das
or
and
mov
outsb
jecxz
orl
mov
outsb
jg
jle
push
cld
movsb
lock
and
arpl
out
xor
mov
mov
fdivrp
inc
mov
cmp
mov
mov
cmp
sub
jmp
inc
call
cmp
clc
pop
iretw
xor
dec
pop
or
sub
push
dec
daa
adc
lds
dec
hlt
out
xchg
ret
mov
fldt
jp
push
push
pop
mov
pop
push
imul
fsubrl
cmpsb
mov
push
or
es
insl
and
push
xchg
mov
jmp
mov
hlt
push
sbb
mov
incl
sub
mov
fiaddl
fldcw
or
cmp
scas
repz
mov
mov
adc
nop
jne
push
push
int3
bound
jl
dec
jmp
cmp
fs
and
shlb
jo
sarl
xchg
dec
das
mov
sub
push
cld
adc
lahf
push
daa
out
lock
iret
pushf
pop
das
jmp
je
lds
cmpsb
fistpl
cli
cld
pop
mov
mov
or
fsubl
jp
iret
sub
sahf
js
movb
dec
add
mov
daa
gs
lods
das
sub
in
fcomp
jo
and
es
lea
shlb
in
xor
xor
mov
pop
xor
or
shl
jnp
inc
push
cwtl
js
ss
fwait
cmpb
fildll
cmpsl
arpl
xlat
lahf
les
cmp
sbb
mov
ljmp
out
test
add
stos
sbb
arpl
inc
jmp
dec
pop
repz
ss
stos
aaa
pop
pusha
std
test
bnd
insl
dec
push
addb
adc
out
lock
scas
int3
cmc
adc
mov
mov
add
nop
cmp
mov
notb
popf
sar
jbe
fcoms
sbb
lcall
and
mov
cmp
pop
out
sub
mov
mov
pop
cli
js
imul
test
int3
xor
lret
aam
push
ljmp
out
arpl
sbb
mov
data16
push
dec
xchg
push
mov
rorl
mov
icebp
dec
push
inc
outsb
push
xor
out
aad
bound
int
cmp
outsb
add
in
imul
sbb
mov
push
sbb
or
push
jmp
shrl
mov
pop
jb
adc
adc
loopne
lods
ds
pushf
xchg
lahf
movsl
mov
shrb
add
fistps
shll
mov
mov
divb
inc
inc
sub
test
sbb
loope
sub
fs
mov
push
mov
arpl
push
leave
mov
arpl
mov
scas
mov
mov
xchg
aam
inc
out
add
pop
cmp
pop
push
push
inc
shrl
pop
movsb
cmp
pop
cmpsb
sub
fldcw
pop
pop
cwtl
xacquire
cmpl
inc
loopne
pop
dec
sbb
fistpll
das
sbb
mov
mov
aad
fsubl
loope
mov
xor
mov
mov
inc
divb
and
sbbl
addl
ss
mov
ja
push
shlb
imul
jecxz
icebp
lock
ret
jecxz
add
pop
into
and
shl
jl
add
adc
push
mov
imul
mov
pop
neg
xchg
and
mov
mov
je
jmp
js
popa
mov
pop
add
dec
aaa
inc
push
or
or
xchg
fs
fcmovnb
inc
pop
sub
jmp
inc
les
pushf
mov
idivl
gs
push
in
dec
lcall
lock
pop
popf
xorb
shlb
fsubs
decb
fisttps
jno
and
sub
movsb
and
dec
les
cli
xor
pop
or
into
inc
push
ja
mov
xchg
pop
dec
mov
jb
mov
rol
jp
leave
pop
lea
mov
pop
mov
in
and
pop
pop
and
or
mov
stos
gs
mov
jg
cmpsb
call
cmp
and
sti
popa
mov
mov
fs
call
lds
test
add
into
inc
lcall
rcrb
and
mov
clc
push
ss
xchg
sbb
nop
jae
es
clc
jl
fs
add
mov
mov
cmp
adc
or
dec
cld
push
add
lock
pop
inc
iret
out
rclb
push
cmpsb
mov
aas
out
nop
lods
flds
test
mov
pop
mov
xchg
lahf
inc
test
pushf
sub
pusha
movsb
cld
xlat
in
gs
sahf
dec
xlat
mov
stos
stos
jns
xchg
mov
leave
xchg
js
pop
sarb
sub
jg
mov
cmpsb
adc
decb
fs
popa
adc
nop
mov
scas
xchg
mov
fcomip
push
sbb
push
out
fcomps
jne
or
push
insl
lahf
or
jae
clc
movsl
cmp
push
bnd
mov
into
ret
cli
mov
mov
clc
outsl
pop
sub
add
pop
pop
orb
pusha
jl
fildll
mov
testb
sub
mov
fwait
ds
mov
cltd
fdivp
movsb
inc
test
pushl
stos
outsl
mov
cmp
rcl
in
pop
hlt
push
push
shrb
jb
dec
inc
icebp
pop
rol
cli
adc
sarb
testl
add
scas
add
ja
repnz
fsubs
xchg
mov
outsb
xchg
clc
jg
push
lods
jnp
out
or
insl
sbb
inc
icebp
ja
cmpsb
inc
out
jo
jo
loopne
sub
ss
clc
addb
pop
mov
mov
cs
popa
push
cmpsl
jle,pn
cltd
popa
sbb
test
add
push
add
lret
push
xor
fcomip
dec
lds
popf
mov
test
pop
pushf
pop
shll
cs
data16
ja
cli
dec
cltd
movb
je
pop
push
add
out
lret
lcall
mov
fwait
sbb
in
lret
arpl
fidivrl
roll
and
das
dec
push
stos
lock
lahf
mov
movsb
movsb
pushl
push
fs
test
mov
jbe
mov
fildl
rcll
sub
xor
pushl
leave
jbe
or
push
into
cmc
dec
cmp
js
inc
adc
add
cld
add
mov
sbb
mov
push
jl
sarb
mov
insl
dec
outsl
lock
sbb
mov
pop
pushf
pop
pop
mov
sbb
push
adc
out
and
cmp
and
cld
dec
xor
popf
int
les
daa
or
inc
adc
loope
cmpsl
enter
loope
sar
mov
pop
adc
es
mov
sbb
jle
add
fwait
insl
and
cwtl
dec
xchg
test
in
add
add
push
sub
sbb
mov
or
pushw
mov
fcomip
fistps
or
pop
imul
subb
fisubrl
mov
js
push
aam
or
jmp
fistpl
fwait
or
cmp
and
sub
lea
add
mov
jg
insb
ss
push
mov
xor
insb
jmp
movb
inc
shl
cltd
jnp
data16
lahf
xor
decl
aas
test
or
mov
xchg
sbb
xchg
aas
inc
dec
cmp
pushf
ljmp
movsl
jg
subb
sub
in
adcb
hlt
out
mov
mov
sahf
inc
dec
es
xchg
push
js
rorb
inc
xchg
sahf
bound
test
adc
pop
mov
dec
in
jns
in
outsl
jbe
sbb
dec
cmp
push
mov
push
dec
and
xor
xchg
or
sar
inc
les
mov
mov
mov
test
push
add
push
inc
mov
mov
call
inc
sbb
mov
nop
push
stos
sarb
sub
dec
mov
vaddss
push
gs
cli
pop
jl
popf
mov
xchg
pop
push
cmp
cmpsl
jnp
and
rolb
cmp
inc
test
inc
lds
mov
cli
or
ror
lods
xchg
push
movsb
cwtl
loopne
decl
inc
jno
and
xlat
dec
mov
cmp
insl
sar
decl
lods
pop
and
cmp
jne
in
into
dec
fdivrp
push
cmp
fs
add
call
add
mov
and
adc
test
shrb
push
call
mov
insb
pop
mov
mov
sub
sbb
cli
addr16
les
xlat
js
cs
xchg
xor
push
rcr
cwtl
sub
es
xchg
push
cli
mov
test
leave
mov
fsub
out
cli
movups
cmp
decb
cmp
sbb
xorb
xor
sub
fistpl
xchg
icebp
or
cwtl
in
out
xor
popa
sti
jg
cmp
iret
xchg
hlt
outsb
das
scas
repz
add
dec
mov
xchg
imul
outsb
adc
inc
jge
stos
call
sub
and
push
movsb
loopne
pop
cmp
jl
in
lahf
jecxz
dec
imul
xor
sbb
jp
push
mov
sub
or
mov
fildll
loope
push
mov
xchg
das
and
ret
dec
cld
pop
lcall
pop
push
and
movsb
push
out
adc
add
std
push
or
das
ficoml
pushf
mov
jb
outsb
inc
stc
sbbl
sub
icebp
loop
lcall
das
movsl
sbb
hlt
out
ret
fwait
and
jl
xchg
add
pop
xor
call
popa
addr16
loopne
clc
fs
add
enter
int
mov
and
sub
mov
mov
fs
test
movsl
movsl
jo
mov
icebp
cs
pop
jne
out
xchg
cwtl
fs
xchg
jnp
test
sub
or
aaa
xor
lret
mov
pop
daa
xor
add
pop
test
push
mov
int
scas
push
mov
mov
test
cs
push
sub
xchg
add
aam
repnz
inc
mov
push
sbb
dec
stos
mov
mov
jo
test
addr16
decl
push
ret
pop
cmc
mov
gs
mov
xor
xchg
sub
rol
decl
push
adc
inc
sbb
xchg
cmp
push
mov
jae
sbb
push
movsb
icebp
xchg
xchg
leave
into
inc
fdivrl
popa
add
push
add
rolb
sub
shll
add
cmp
mov
into
jns
cli
das
mov
rorl
sbb
cli
push
sub
jmp
shlb
pop
repz
mov
sti
push
std
out
push
pop
pop
sahf
add
push
adc
mov
add
ljmp
les
lds
bound
imul
xchg
adc
add
sbb
je
sahf
mov
lcall
push
call
xor
mov
movsl
push
loopne
pop
add
cmp
mov
ret
dec
ja
mov
push
jl
cs
rorl
sarb
jns
popa
sti
cmp
mov
add
pop
pop
jg
loope
addb
lods
lods
data16
std
bound
sub
mov
push
cwtl
sti
mov
xorb
push
xchg
dec
cmp
out
ret
decl
pop
xor
scas
ljmp
mov
jg
pushf
insl
push
jg
mov
push
aaa
cld
mov
cld
ja
mov
cmp
pop
adc
mov
xor
pop
and
cli
subb
repz
cmp
orb
push
adc
in
inc
in
mov
shrb
in
ss
xor
mov
inc
and
adc
and
stc
mov
pop
mov
hlt
push
hlt
data16
stos
fdivp
push
mov
jns
lret
pop
mov
adc
push
shr
jg
and
enter
inc
inc
pop
movsl
aaa
imulb
inc
sbb
push
pop
andb
imul
pop
lcall
inc
and
cmc
aaa
mov
xor
cmp
push
pop
and
nop
outsb
sti
lds
adc
xor
jp
insb
dec
call
and
adc
jo
fstpt
lods
pop
dec
jp,pn
push
jno
xchg
push
sbb
cmp
daa
mov
decl
dec
in
jae
xchg
or
rolb
arpl
adc
fwait
inc
dec
std
xor
dec
inc
or
dec
shl
out
rorl
dec
mov
jmp
pop
cmp
lods
xchg
dec
mov
add
cmp
mov
push
lods
push
std
push
pusha
mov
movsb
cmp
ljmp
xor
scas
pop
push
and
enter
pop
mov
idivw
repnz
or
movsb
inc
jmp
sub
cmpsl
push
sahf
rol
in
je
pop
mov
add
sub
or
mov
inc
pop
adc
mov
mov
mov
and
icebp
xor
mov
push
jle
call
mov
subb
stc
imul
fcom
push
pop
xchg
outsb
ljmp
dec
ljmp
jl
iret
leave
adc
cli
and
mov
pop
fcoms
rclb
ret
fcomip
mov
ret
insl
imull
jo
ljmp
inc
sahf
mov
stos
cld
unpcklps
dec
sar
inc
and
or
daa
or
sbb
add
mov
call
lcall
xchg
add
stos
aaa
jecxz
and
jge
jno
mov
scas
mov
jl
pop
mov
imul
inc
adc
inc
sti
or
dec
les
lcall
mov
flds
mov
pop
sbb
mov
jb
sub
jns
stos
nop
xchg
jg
dec
fdiv
pop
add
push
pop
hlt
dec
insb
add
movsl
mov
and
mov
mov
das
and
lret
pop
add
sbb
call
sub
mov
ljmp
imul
stc
pop
ret
lds
mov
fadd
sub
inc
ja
mov
dec
mov
adc
ss
push
xor
mov
jo
popf
repnz
movb
push
adc
add
stos
stc
dec
sbb
test
scas
adc
inc
adc
ss
xchg
cs
pop
sub
ljmp
inc
jl
scas
fsubl
fsubr
stos
rorl
or
roll
jb
or
test
sub
xor
jg
and
lcall
pop
push
pushf
ds
jg
sub
cmpsb
subl
aad
add
lcall
pusha
push
adc
bound
sub
fwait
mov
std
stc
pop
ret
jb
test
dec
push
daa
adc
loopne
and
pop
dec
stos
cmp
fisubrl
mov
cmc
mov
nop
les
push
js
mov
loop
cwtl
mov
imul
clc
fs
xchg
xchg
loop
insl
clc
adc
jl
filds
jne
mov
jne
cmp
repz
dec
inc
dec
in
sub
les
lock
pusha
add
call
add
jp
fiadds
outsl
andb
stc
divb
clc
fcmovb
aad
or
adc
pop
jne
jmp
inc
and
cltd
lret
push
and
push
shrb
xor
mov
lcall
jg
aas
jb
pop
ret
pop
cmpsl
mov
sub
cmpsl
int3
cwtl
pop
jge
outsb
jle
dec
pop
dec
js
push
xor
mov
cmp
dec
js
or
rcr
inc
loop
mov
sahf
adc
mov
push
jb
in
pop
daa
orb
xchg
push
js
loop
test
addr16
call
xchg
fisubl
pushl
add
inc
mov
jle
mov
jne
cmp
sub
mov
mov
fidivl
call
shlb
pop
cmp
call
pusha
jnp
scas
mov
lods
xchg
popw
js
fwait
and
dec
pop
popf
lea
call
push
or
mov
mov
jb
js
cld
lahf
fsts
cmpl
into
xchg
cli
mov
out
es
jb
orl
push
xor
loope
out
push
mov
sbb
mov
sbb
incl
leave
scas
push
xchg
or
mov
mov
mov
mov
adcb
outsb
imull
push
adc
sub
loopne
mov
add
dec
jge
lea
mov
je
lcall
cmp
pop
mov
call
or
mov
mov
aad
cmp
dec
bsr
mov
pusha
enter
cwtl
mov
add
push
push
jnp
in
call
scas
clc
bound
cmpsb
mov
in
icebp
adc
pop
dec
nop
imul
inc
inc
loopne
cmp
inc
cmpl
pop
je
leave
pop
push
cs
lea
cmp
inc
sub
mov
mov
clc
decl
sbb
push
es
jae
xchg
cmp
mov
jle
push
inc
iret
es
adc
aad
add
lock
cld
fbstp
mov
add
fs
pop
in
inc
gs
pop
jge
lret
add
repnz
inc
loop
inc
push
mov
lock
adc
rol
decb
lcall
push
int3
adc
lock
pop
pushl
shl
fistl
lcall
lock
xchg
cwtl
jp
aad
jno
sub
or
outsb
cld
sahf
pop
push
mov
mov
jl
xor
mov
push
or
jle
jg
call
cmp
aaa
jbe
mov
test
dec
mov
adc
sub
dec
jge
movsb
fisttpl
mov
sahf
cs
mov
or
iret
iret
add
push
pop
mov
or
imul
sbb
mov
pop
je
xor
incl
frstor
cmp
out
add
sub
mov
sbb
mov
xchg
std
out
mov
sub
ljmp
mov
aam
push
mov
imul
xchg
ss
je
pop
lods
cli
add
jg
adc
out
cmp
pusha
push
jb
das
cli
int3
mov
fsubl
push
mov
or
push
inc
sub
mov
leave
adc
dec
sbb
add
test
cmc
push
sbbb
shrb
pushf
or
lds
clc
xchg
insb
inc
cmpsl
stos
fldt
xchg
leave
push
xor
and
jp
push
icebp
hlt
or
add
fnstenv
insl
cltd
jecxz
int3
hlt
xchg
sti
shll
xor
ret
pop
ret
sbb
enter
fldcw
aaa
je
mov
les
jle
ja
cs
lods
mov
ret
sub
mov
lcall
enter
push
les
scas
sarb
pop
sbb
loopne
xor
jle
mov
pop
push
inc
clc
dec
ljmp
cli
fidivrs
mov
push
inc
loop
data16
push
cmpsl
lret
in
sahf
pop
push
sbb
push
sar
int3
cli
sti
scas
push
mov
test
shrb
pop
adc
jp
nop
mov
add
add
stos
inc
inc
adc
adc
add
lcall
adc
mov
sar
mov
push
js
mov
aaa
jo
testb
dec
js
cmc
cmp
mov
and
dec
inc
outsl
mov
adc
push
rcrl
pushl
pop
inc
je
daa
popa
mov
push
cld
and
ss
and
das
xchg
test
insb
add
bound
rcrb
push
sbb
mov
movsb
ret
fadds
mov
in
mov
jmp
pop
and
push
mov
sub
jl
inc
push
outsb
dec
push
mov
push
fistpl
jbe
push
pushl
push
cmpb
sbb
pop
inc
inc
movsb
out
xor
fwait
call
mov
imulb
shll
sti
stos
inc
inc
in
pop
mov
stos
cmp
ds
fs
and
cld
imul
cli
push
push
call
pusha
ret
sti
jb
pop
adc
std
outsl
ljmp
mov
push
mov
jge
lods
xor
jl
imul
ret
mov
cltd
std
add
das
cli
popf
jecxz
push
jle
sbb
or
ja
data16
mov
sbb
clc
insl
xchg
push
decb
filds
sub
mov
mov
cld
sar
pop
adc
adc
adc
adc
sbb
sub
ror
mov
jne
pop
ljmp
add
or
dec
inc
fstp
add
iret
ds
dec
ja
pushl
mov
enter
mov
fisubs
lea
mov
cs
and
idivl
int3
repnz
cmc
dec
xor
jg
hlt
stc
out
pop
dec
fcmove
test
inc
int3
dec
sub
mov
das
xchg
push
leave
xchg
out
outsb
mov
add
js
mov
adc
cld
sbb
mov
ror
add
mov
inc
xchg
gs
repz
sub
jp
je
pop
inc
fisttpl
addl
or
cmpsb
xor
push
outsl
sub
mov
jno
lea
xchg
ret
pusha
sbb
rclb
dec
xchg
stos
adc
jne
mov
jbe
inc
and
mov
push
lret
sbb
jb
cli
les
jge
insb
movsb
mov
xchg
jle
clc
mov
push
in
pop
dec
mov
push
jecxz
xor
or
or
in
cmc
add
sbb
movsl
imul
nop
mov
sarb
mov
inc
insl
mov
lret
ljmp
aaa
push
xchg
xor
sbb
pop
pop
and
test
inc
popa
addl
cmpsb
xchg
adc
pop
mov
mov
gs
xchg
mov
sti
push
clc
imul
shll
adc
das
js
add
js
mov
jg
stos
decb
call
lret
mov
test
fiaddl
hlt
or
push
sub
fdivp
popa
cmp
sti
inc
jl
into
jne
push
sub
push
or
xor
jg
push
adc
pop
or
pop
inc
out
sbb
call
ljmp
sti
jge,pn
es
xor
adcb
pop
or
add
test
push
js
adc
fldl
jno
pusha
into
enter
jno
aad
adc
lds
adc
adc
mov
sub
into
or
mov
lods
add
push
pop
ret
inc
lcall
jno
js
or
pop
test
inc
das
push
ret
pop
fidivl
out
add
xchg
mov
inc
daa
cwtl
in
cld
movsl
lea
cmpsb
and
pop
push
es
and
out
push
lock
and
jl
leave
pop
mov
out
inc
jecxz
push
and
leave
and
ljmp
mov
fidivrs
inc
outsl
data16
dec
daa
ds
sbb
pop
cmp
je
mov
xor
sbb
outsl
jmp
loop
out
cmp
js
popf
xchg
test
dec
mov
in
scas
fiaddl
fsubrp
fstpl
fwait
out
cmpsb
inc
fcoms
loopne
add
stos
je
xchg
sub
ret
and
icebp
pop
sbb
arpl
dec
sbb
fwait
idiv
adc
mov
mov
shl
inc
inc
test
test
sti
cmp
adc
cmp
cs
and
hlt
pop
sub
add
pop
mov
ljmp
push
cld
fcomip
xor
sub
fwait
mov
mov
jae
lock
adc
fnsave
bound
mov
cmp
mull
inc
das
adc
mov
jg
push
int3
fisttpll
mov
pop
shll
mov
idivb
dec
cmp
loop
mov
xchg
push
adc
gs
sbb
adcl
inc
dec
add
aad
fldln2
pop
push
lock
lret
pop
ret
push
mov
enter
cmpsl
sub
icebp
aaa
ret
icebp
jnp
shlb
insb
ret
mov
xor
cli
jg
mov
mov
push
push
loop
or
sub
jle
push
xchg
and
and
rol
push
mov
xchg
xor
movsl
and
push
adc
rorb
imul
cmpsb
jnp
popf
xor
sti
lcall
adc
sbb
sub
mov
insw
cltd
add
push
mov
inc
xlat
insl
std
pop
inc
mov
cmp
call
xchg
xor
test
inc
lock
adc
sub
jg
test
pusha
sbb
and
jp
lret
sbb
add
call
jns
add
mov
xchg
mov
cmp
dec
sbb
in
les
enter
inc
out
jl
xchg
adc
cld
mov
inc
imul
or
out
sub
mov
dec
mov
mov
fsts
lods
mov
jo
sub
mov
ds
jg
fisubl
jb
aas
mov
jns
mov
mov
push
adc
les
lock
lahf
decl
or
cs
lcall
push
stc
mov
pop
jge
fnstenv
out
mov
call
push
pusha
call
cmp
dec
xchg
pop
fists
pushf
hlt
mov
mov
add
pop
mov
out
dec
jne
sbb
mov
jp
fcmovne
andl
mov
sub
mov
xchg
fistl
xchg
jo
test
cmpsb
inc
popa
loope
adc
push
int3
das
shrb
add
ss
mov
fnsave
mov
in
jle
push
sbb
sbb
cmpsb
sbb
push
sti
push
pop
leave
pop
mov
lods
sarb
cli
pop
loopne
pop
jns
cwtl
out
cmc
in
int
scas
xorb
data16
bound
movsb
and
ja
or
stc
roll
wbinvd
inc
lods
mov
mov
sub
cli
jbe
std
mov
xlat
cmp
push
scas
push
pusha
xchg
adcl
mov
aaa
push
mov
dec
dec
scas
outsb
push
mov
loopne
dec
adc
call
push
or
push
dec
jl
and
sahf
pop
sub
add
dec
push
scas
daa
pusha
sub
jecxz
arpl
mov
jb
xchg
pop
icebp
or
nop
push
xchg
jge
daa
mov
rorl
cmpsb
sub
mov
push
pop
dec
xchg
icebp
mulb
fsubl
ficoms
ds
fistpll
fcompl
pop
mov
xor
add
imul
lock
lret
scas
add
sahf
call
pop
lcall
incl
popf
inc
icebp
sub
das
mov
stos
in
or
fdivl
sub
inc
cmc
test
push
lret
mov
fcmovnu
cs
ss
dec
mov
push
arpl
decl
inc
jg
cmpsw
cmpsb
mov
or
or
outsl
or
or
jb
push
lret
fsubrl
adc
cmpsb
jg
inc
dec
xchg
push
jb
pusha
adc
jle
dec
pop
push
jl
inc
mov
mov
add
sti
dec
adc
dec
std
push
ljmp
loop
pop
mov
mov
hlt
aaa
dec
rcrb
aam
ret
cmp
scas
push
push
mov
fbstp
nop
pop
xchg
sub
fwait
popf
xchg
data16
dec
pop
and
cli
xchg
shlb
add
xchg
pop
nop
xor
insb
sbb
push
and
cmp
xor
clc
shrl
and
mov
daa
mov
sbb
or
inc
jg
insl
insl
adc
push
lods
mov
mov
xor
jbe
fucomi
xchg
cmc
andl
sbb
xchg
stos
pop
pop
mov
gs
push
dec
sarb
add
pop
or
cmpsb
outsl
xorb
jecxz
inc
pushf
fisubs
ds
mov
movsl
outsl
xchg
mov
inc
leave
cltd
and
scas
dec
sbb
fidivrl
xor
std
pop
hlt
jg
cwtl
scas
push
push
out
imul
push
add
jmp
pop
inc
xchg
ja
push
lcall
lods
and
and
mov
mov
adc
inc
or
jo
ljmp
dec
pop
mov
inc
fsubp
push
std
pop
xor
xor
mov
and
hlt
movsb
pop
rclb
mov
xor
sarb
mov
lods
mov
xchg
add
pop
dec
add
mov
xor
andb
outsb
clc
stos
cmp
and
mov
pop
cwtl
mov
inc
test
push
outsb
fcmovb
decl
adc
mov
ja
shr
cmpl
push
out
fadds
pop
std
out
clc
jno
fildl
or
pop
mov
je
mov
lret
aaa
add
decl
aas
imul
lock
popa
jne
out
mov
jmp
int3
dec
xchg
andl
jl
bound
lds
in
inc
dec
sub
jno
lea
dec
js
inc
and
jg
fsts
mov
pop
xchg
pop
mov
testb
std
incl
test
mov
adc
lea
or
jg
push
dec
add
cli
insl
lds
mov
adc
and
mov
stos
mov
test
inc
mov
pop
add
jl
jge
mov
cwtl
adc
movsl
mov
sub
aad
das
add
clc
jecxz
lahf
cmp
or
icebp
adc
inc
sub
decl
das
ss
mov
xchg
adc
incb
push
inc
pushf
push
sub
lret
ds
mov
adc
fwait
inc
call
shlb
dec
add
xchg
mov
cli
insl
aaa
xor
adc
out
clc
shrb
fbld
inc
dec
clc
xor
loop
incl
and
mov
imul
aaa
es
aaa
mov
test
loope
repnz
jg
pushf
sub
icebp
dec
mov
insl
inc
mov
pop
jmp
js
sbb
or
xor
adc
mov
mov
add
push
mov
loopne
int3
mov
enter
jecxz
mov
test
cltd
push
dec
sub
inc
push
icebp
addr16
push
sub
mov
fbld
arpl
cli
fdiv
jl
cmc
pushf
mov
sbb
lds
sbb
push
ret
sub
mov
aas
arpl
std
lods
jecxz
mov
xor
jb
rorb
or
nop
add
outsb
or
test
sahf
sbb
cmp
cld
cmp
sbb
movsl
jae
xchg
lock
lods
adc
and
je
call
bound
or
in
adc
cltd
xor
jmp
pop
xchg
popa
inc
mov
jp
mov
sub
aas
mov
jl
adc
sub
mov
lea
sbb
lret
push
xchg
test
cmp
sub
jbe
sbb
push
and
inc
push
clc
in
aaa
fwait
inc
pop
mov
dec
sbb
add
push
test
or
pop
loopne
add
add
cs
fldt
ret
pushf
pop
mov
add
dec
notb
popa
shr
xor
sti
and
xchg
adc
mov
ljmp
scas
cli
xor
in
fiadds
add
adc
mov
stos
or
push
insl
adc
sbb
jo
add
pop
push
mov
mov
sbb
ds
dec
mov
xchg
lock
call
imul
cmpsb
jg
std
das
fidivl
inc
fstl
mov
sub
lcall
add
add
imul
in
or
mov
ret
call
incl
sti
dec
pop
shll
jg
dec
and
mov
mov
les
sbb
jb
test
add
xchg
add
fdivrp
fcmovnu
mov
cs
repz
lods
in
xchg
add
and
pop
fwait
jp
inc
fldcw
jne
jp
divb
add
out
pop
sub
cmp
cmp
sub
jg
scas
xor
xor
test
push
mov
lock
insb
std
bound
hlt
sub
cmpsl
cli
pop
lock
xchg
loop
add
jne
fbld
add
leave
pop
lret
push
jnp
adc
dec
enter
pop
incl
ror
sar
xor
ret
sbb
push
push
cmp
inc
push
je
aad
xor
fadds
les
xor
stos
jmp
xor
jb
cld
bound
mov
or
mov
repnz
incb
mov
pop
mov
in
fcmovnbe
push
gs
sub
push
mov
testb
mov
mov
filds
rorb
jle
sbb
arpl
scas
decb
daa
int
sbb
dec
adc
push
leave
and
pop
incl
les
enter
add
fsubrl
pop
jne
and
inc
xchg
in
xorb
cld
mov
push
xchg
lods
outsb
ret
sbb
lahf
shrb
push
mov
mov
pop
mov
or
cmc
dec
fbstp
test
ret
fs
in
dec
and
incb
cmp
push
sti
xchg
pop
dec
int
faddl
or
sbb
mov
jmp
scas
dec
das
test
jo
scas
test
jg
push
inc
sbb
std
jnp
mov
jge
lock
push
adc
dec
mov
xchg
aas
push
repz
stc
add
mov
or
push
adc
lcall
push
pandn
adc
cmp
aaa
dec
jnp
push
xor
or
das
mov
adc
or
jnp
ljmp
pop
fiaddl
push
dec
loopne
mov
sar
mov
test
insb
dec
jg
fs
mov
scas
dec
in
mov
inc
cli
add
mov
inc
or
testb
inc
pop
aas
call
mov
outsl
js
mov
mov
insb
mov
xor
mov
nop
es
nop
roll
xchg
imul
popa
push
pop
loop
faddl
cmpsb
cmc
ljmp
out
mov
gs
adc
stos
ret
popa
cmc
in
dec
sbb
jmp
mov
incb
add
imul
scas
fs
jmp
pusha
mov
subl
mov
mov
pusha
mov
jne,pt
fstl
cmc
leave
hlt
popa
jno
aas
ss
or
add
shrb
jno
adc
loope
sub
xchg
test
or
pop
aam
cmpl
sti
clc
fildl
and
pusha
add
jge
push
sbb
fs
xchg
pop
cmc
out
orb
sub
pop
xchg
pop
jbe
add
notb
jb
xchg
nop
xor
xor
sub
mov
or
dec
xor
jg
mov
enter
rclb
mov
cld
push
mov
xor
or
fstps
outsb
dec
pop
xor
push
incl
sahf
fdivp
sar
cmp
sub
in
insl
test
cmp
imul
pushf
sahf
icebp
shr
les
dec
sahf
std
pop
pop
adcl
js
cmp
or
mov
push
ja
or
iret
pop
mov
loopne
mov
sub
push
pop
jl
mov
or
nop
fcmovne
pop
and
mov
ljmp
lods
inc
xchg
jmp
pop
inc
adc
cmp
and
cmp
xchg
add
lret
sbbb
je
test
stos
test
outsb
and
dec
add
in
sub
ja
pop
jnp
mov
sbb
cmpl
pushl
jecxz
shr
stos
out
inc
ja
dec
pop
adc
lahf
and
incl
add
inc
mov
jo
cmp
or
cwtl
mov
fistpl
data16
pop
jbe
pop
imul
jecxz
lcall
jg
dec
ret
aad
xchg
xchg
mov
mov
in
test
stc
jl
adc
pop
jmp
xor
jo
mov
subb
or
test
test
inc
pop
into
mov
adc
popf
fimuls
in
leave
xchg
push
sbb
add
or
jae
cli
lods
popa
test
fistpl
clc
or
enter
test
fcompl
pop
sarl
and
dec
les
insb
test
enter
pusha
pop
dec
jmp
lea
jae
cmpsb
or
shrl
call
adcb
movsb
in
ja
in
pop
dec
cli
pop
or
mov
add
mov
add
jl
or
iret
sub
stos
outsb
cld
int3
fists
inc
fwait
sbbb
mov
fstpl
dec
outsl
sbb
inc
in
jmp
je
xor
jb
fwait
xor
jle
out
lcall
adc
sahf
lcall
jle
cmp
mov
enter
adc
mov
icebp
mov
push
mov
xchg
and
aaa
xchg
cltd
or
xorb
push
and
dec
lret
mov
aas
xchg
fidivrs
in
clc
or
data16
inc
cld
cmp
jmp
xchg
mov
inc
mov
dec
and
sbb
fcomps
push
test
mov
push
pop
inc
pop
bound
jae
repz
testl
mov
mov
jle
jecxz
es
and
call
nop
mov
sub
icebp
aaa
pushf
sbb
mov
sbb
and
mov
mov
inc
lea
sbb
dec
inc
call
scas
jne
mov
sub
addb
inc
or
pop
cmpsb
mov
sbb
xchg
xor
mov
pop
icebp
movsb
sbb
in
test
add
jecxz
add
aas
and
jle
std
jmp
sbb
loopne
jg
pushl
out
aam
dec
iret
sarl
fisubl
out
xor
das
ss
pop
repnz
push
insl
xor
mov
push
add
pop
xchg
idiv
inc
out
and
xlat
cld
cmp
cs
push
xor
lods
cwtl
jbe
int
and
jo
mov
xchg
rclb
ss
in
test
mov
jo
jge
fcomps
lock
lahf
insb
xchg
insb
das
insl
out
cmp
add
xchg
test
push
cmp
xchg
mov
repnz
cs
push
mov
mov
vsubss
fldl
aas
xlat
rorb
ss
movsb
push
arpl
xor
lock
add
mov
pop
lahf
sub
shl
frstor
adc
jnp
push
xchg
and
lcall
and
pop
dec
adc
lods
stos
aam
ret
cli
popf
rolb
push
sub
icebp
jg
dec
ljmp
cmp
mov
je
sbb
fisubs
dec
movsb
lds
sbb
mov
adc
add
xchg
test
cmp
outsb
and
int
cmp
jle
and
nop
in
pop
jmp
je
mov
jns
jbe
jg
jbe
dec
mov
aaa
jne
xor
out
sub
mov
jl
in
call
mov
add
jle
mov
test
loopne
ja
xor
ja
mov
add
xchg
xchg
mov
clc
das
clc
int3
mov
pop
mov
mov
and
xor
ss
ja
mov
cs
dec
inc
out
arpl
outsl
ss
xor
aam
es
mov
insb
js
clc
pop
in
fidivl
sti
testl
push
mov
adc
dec
push
test
dec
outsb
fdivrp
add
mov
adc
lock
rol
jb
hlt
mov
xor
jbe
stos
cli
dec
add
mov
clc
mov
inc
jp
sahf
es
push
std
mov
outsl
inc
aas
mov
test
xor
mov
mov
sub
lods
nop
fucomi
notl
cmp
call
hlt
je
repz
sub
out
pop
dec
loop
nop
sbb
or
inc
jp
adc
dec
leave
adc
test
xor
aaa
std
ja
lods
add
pop
in
inc
add
push
push
mov
push
addb
push
pushl
ret
popl
mov
scas
lret
sbb
xor
loop
mov
jbe
lock
rclb
clc
lcall
lds
fcomps
addr16
mov
aad
cmp
or
lds
pop
inc
pop
adc
mov
imul
addr16
addb
jg
xchg
gs
adc
rorb
clc
dec
aam
in
pop
pop
inc
popa
xor
mov
scas
repnz
ret
fyl2x
mov
int3
and
clc
pushl
mov
lcall
outsl
popl
fdiv
lds
sub
or
call
or
fincstp
mov
and
mov
inc
aaa
ret
mov
ss
push
fdivrs
das
cli
adcb
dec
jle
scas
dec
inc
mov
shlb
lock
sbb
xchg
mov
aam
insb
sub
cmc
cmc
xchg
lahf
imul
sub
inc
sbb
pop
nop
test
sbb
or
sub
iret
shlb
sub
jbe
stos
pop
xor
dec
or
jae
fsubs
dec
jno
ret
xor
adcl
sub
test
cltd
rclb
mov
les
cwtl
jg
gs
outsl
mov
mov
icebp
sti
andb
subb
and
lcall
lret
jns
shll
mov
out
jp
xor
push
dec
and
mov
inc
cmpsb
add
test
cld
test
daa
ret
scas
shlb
mov
outsb
stos
lcall
pop
mov
loopne
push
push
fmul
notl
jl
inc
cwtl
add
mov
and
dec
stos
test
clc
icebp
cwtl
cld
add
sub
jo
xor
testb
repz
cmp
andl
dec
filds
and
cli
jns
cs
adc
les
cwtl
pushf
fsubp
dec
jl
dec
push
dec
sbb
dec
arpl
cmp
fdivl
xchg
out
cld
xor
aad
test
popf
xchg
jle
decb
sbb
imul
in
mov
sub
pop
mov
push
lock
es
outsl
add
and
movsb
lret
or
mov
xor
mov
mov
ret
mov
rcrl
and
hlt
test
jp
push
push
push
xchg
adc
mov
lret
stc
adc
mov
sbb
inc
mov
jnp
es
outsb
and
out
mov
adc
cmp
imul
push
dec
incl
and
pop
loopne
dec
add
repz
fldt
jnp
shl
jbe
or
jl
mov
dec
rolb
lock
gs
xchg
fmull
aad
sbb
pop
out
sub
adc
aaa
jno
jb
xor
cwtl
dec
insl
cmp
and
and
dec
adc
xor
and
ret
or
xor
lds
adc
sbbb
sub
js
stos
and
cli
push
stos
pop
adc
test
std
mov
mov
call
call
jns
rcll
xchg
xchg
mov
js
mov
mov
dec
mov
leave
jno
fstl
pop
sub
xchg
xor
push
clc
xchg
add
ljmp
fnstsw
cli
popa
cltd
sbb
shll
mov
mov
xchg
icebp
mov
leave
cmpsb
into
cmpsb
fiadds
bound
adc
in
movsb
sub
pop
mov
add
cwtl
xor
jg
jecxz
push
sub
dec
cli
sub
pushf
insb
stc
negb
lock
push
sub
inc
iret
popa
jne
pop
and
insl
sub
les
pop
xchg
outsb
adc
push
add
mov
std
inc
int3
push
cld
mov
mov
and
pop
hlt
xor
jno
adc
or
repz
push
mov
test
jg
add
mov
pop
push
adc
into
lods
call
ds
xchg
mov
and
adc
mov
aas
adc
les
sub
popa
sbbb
or
sbb
test
mov
scas
sbb
in
cmp
mov
jge
sbb
js
and
mov
jbe
pop
ret
mov
lcall
les
test
lods
jle
jmp
in
sbb
or
ror
into
inc
fwait
sbb
inc
testb
or
in
add
dec
cs
insl
lock
cmp
mov
and
mov
in
push
xchg
call
add
das
mov
pop
fnstenv
xlat
notb
lds
jl
out
pop
outsb
inc
test
add
cmc
jge
pop
or
inc
adcb
jle
push
xlat
hlt
shlb
pusha
filds
iret
fiadds
mov
or
sbb
or
cmp
pop
decl
and
ss
pushf
ss
xchg
gs
sbb
push
push
push
cmp
ja
adc
mov
or
sub
adc
sbb
sub
and
mov
xor
add
cmpsb
aaa
adcb
jns
xchg
dec
loop
push
xor
cmc
mov
rolb
push
xchg
incl
mov
pushl
sub
inc
dec
aaa
out
dec
or
xchg
sahf
pusha
stos
cli
clc
aam
sub
jle
test
inc
and
ret
or
adc
push
scas
or
adc
jmp
inc
sbb
clc
mov
in
jl
fldenv
push
popa
std
and
or
lahf
pop
or
std
mov
adc
stc
out
lcall
scas
sub
data16
sub
movswl
cwtl
mov
int
lcall
out
lods
dec
mov
ret
lahf
outsb
add
xchg
in
or
pop
lahf
out
inc
cld
ja
mov
or
xor
aas
movsb
ds
ret
jbe
mov
std
xor
ja
dec
fcmovu
pop
stos
cwtl
cmp
add
push
cmp
dec
add
rol
mov
fsubrl
not
sub
outsb
sub
xchg
cmp
inc
dec
xchg
ljmp
decl
ljmp
mov
sub
scas
aam
add
cmpsl
pop
loopnew
jp
jb
iret
pop
inc
in
lret
sub
dec
popf
xor
into
push
cld
sub
shlb
sbb
lahf
int
inc
mov
pop
scas
and
cmp
test
inc
inc
add
mov
adc
push
loop
movsl
mov
int
outsl
aad
test
dec
mov
cmp
sub
push
shrb
mov
pop
call
test
pop
bound
outsl
mov
push
pushf
mov
mov
dec
stc
sbb
fidivs
ret
shlb
insb
fcmovne
sub
jge
pop
inc
push
cmp
sbb
mov
fdivrp
jnp
jp
xor
fadds
sub
dec
pop
out
scas
mov
pushf
call
mov
dec
push
push
arpl
or
pop
aam
pop
mov
adc
imulb
test
inc
popa
push
test
push
in
add
mov
decl
adc
jae
lahf
push
mov
add
sub
aaa
nop
test
call
add
sbb
mov
dec
cmp
jno
sub
subb
pop
push
cmpsl
andl
adc
pushl
dec
in
adc
inc
sti
and
std
push
call
xor
fwait
aam
cs
sbb
add
mov
mov
cli
push
or
push
xchg
cmc
stos
imul
clc
pop
and
mov
ss
dec
mov
dec
out
cli
adc
lods
loop
xchg
mov
jge
repz
fnstenv
dec
outsl
clc
outsl
lods
test
lea
andps
clc
or
cmp
sub
pop
jae
sub
push
ret
cmp
test
call
std
mov
xchg
popa
mov
push
fildll
and
insb
xor
inc
pop
adc
into
dec
pop
dec
push
sub
cmp
ljmp
push
jp
cmp
and
xor
cmpsb
gs
mov
in
scas
in
or
sub
mov
dec
mov
push
sub
repnz
dec
adc
shrb
lea
ds
loopne
ds
pop
mov
ret
pop
or
leave
mov
sub
sbb
movsl
enter
gs
fs
jl
dec
jmp
in
pop
test
add
ljmp
call
fsub
add
cmp
out
add
mov
gs
jp
loopne
ljmp
hlt
pop
jecxz
cltd
clc
iret
xchg
mov
mov
stos
xor
shlb
nop
cmp
inc
in
scas
pop
mov
mov
xchg
les
sbb
jmp
sbb
pop
out
ds
mov
and
cli
jge
loop
call
pop
das
or
test
mov
sbb
bound
bound
mov
mov
and
and
sub
sub
test
push
jp
inc
fsubs
xorl
sbb
clc
dec
enter
sub
fcomip
test
push
or
mov
xchg
push
mov
push
je
aas
jns
mov
mov
fisttps
mov
pop
aas
lock
es
fwait
and
dec
mov
movsb
fidivrl
xchg
pusha
xchg
mov
ds
and
inc
sbb
push
enter
les
and
mov
sub
ja
mov
mov
dec
pop
push
sarl
pop
inc
pop
jmp
push
mov
push
das
push
jl
hlt
sub
shrb
daa
xchg
mov
rcr
inc
jns
or
jl
filds
js
shll
shll
and
mov
mov
outsb
dec
mov
adc
push
jbe
jmp
bound
es
inc
ss
mov
jge
xchg
movsl
sub
adc
stos
pop
fdivrs
in
fisttps
cltd
mov
aaa
jge
cli
lret
jo
dec
jne
loop
push
loope
sub
sub
xor
xor
mov
cmpsl
stos
pusha
push
repz
scas
adc
rorb
sub
aam
pop
aaa
cwtl
dec
push
mov
negb
pusha
and
mov
mov
and
or
andb
mov
popa
mov
push
mov
ja
iret
outsb
sub
fdivrs
sub
negb
sbb
mov
iret
mov
cmc
sub
subb
mov
popa
call
pushl
in
ljmp
lea
push
icebp
sbb
mov
add
out
fwait
pop
xor
cld
pop
icebp
push
out
in
fstps
loope
cmc
push
jle
movsl
dec
mov
lock
or
cli
add
fdivrl
dec
das
sbb
and
adc
inc
cmp
mov
lods
inc
js
push
repz
mov
call
sub
cmp
mov
in
je
and
fildll
into
cmp
lret
xchg
int3
sub
repnz
scas
dec
cwtl
cmp
inc
arpl
pop
fs
cld
out
clc
xchg
stos
test
ja
dec
jge
insb
cs
daa
fistpll
xchg
push
mov
out
es
inc
xchg
das
push
ret
bound
cmp
out
dec
push
ja
pusha
and
push
hlt
mov
mov
mov
into
pop
decl
push
mov
or
out
pop
jnp
loope
mov
arpl
rcrl
or
and
adc
pop
push
pusha
xchg
sbb
out
xor
push
push
out
pop
sahf
mov
mov
add
mov
mov
insb
mov
cmp
sub
and
sbb
push
pop
lcall
ss
pushf
hlt
mov
das
and
pop
sub
sub
cmp
lods
sbb
mov
mov
adc
xorb
cld
fistps
das
test
adc
and
or
mov
dec
nop
mov
sub
in
lret
mov
mov
lds
cmp
push
pop
fwait
inc
nop
lret
shll
mov
mov
fisubrl
xchg
stos
in
out
outsb
std
lcall
or
xchg
cltd
push
data16
mov
rol
lods
mov
lea
xchg
or
adc
dec
ss
xchg
icebp
pushf
jecxz
jmp
mov
ljmp
repnz
push
dec
testl
mov
jle
pushf
xchg
ss
cmp
andb
add
clc
fisubl
mov
fnstsw
jmp
aad
mov
lock
sub
call
andb
sbb
mov
lcall
dec
jb
loop
xchg
test
push
std
mov
clc
cmp
pop
cld
jae
and
js
push
xor
jbe
mov
push
test
cmp
xchg
jnp
int3
aas
jg
outsb
scas
fldt
push
and
inc
push
mov
xor
cmp
mov
mov
or
addr16
push
lock
sbb
ret
test
call
pusha
dec
fdivrl
and
sub
jns
andb
ret
cmp
pop
xor
in
push
in
xor
insb
or
arpl
push
dec
aas
lea
ret
adc
xor
inc
outsl
loop
cmpsb
mov
dec
test
aad
mov
fwait
jle
xchg
mov
rorb
les
ds
ret
clc
dec
orb
call
or
mov
sub
fbld
dec
sti
loopne
jae
pop
inc
mov
decl
dec
mov
lcall
aas
in
push
icebp
jbe
test
ljmp
cmpsb
flds
jecxz
cmp
add
lret
lea
jns
aas
aaa
add
clc
jg
xchg
mov
test
or
inc
insb
fld
add
out
imul
xor
jno
jo
adc
and
lods
jl
cmp
jmp
or
cli
incb
add
mov
addl
jl
das
das
sub
ja
and
nop
dec
out
inc
cmp
jnp
sbb
xor
sub
inc
outsb
mov
cmp
adc
mov
outsb
sti
adc
adc
and
adc
push
jge
data16
sahf
hlt
mov
pop
test
adc
mov
cmp
sahf
das
inc
idiv
push
pusha
pop
repnz
xchg
out
pop
push
mov
pop
or
pop
adc
sbb
stos
mov
xor
pop
or
call
out
push
vmulps
add
mov
jo
push
stc
popa
and
jmp
insl
push
clc
sbb
dec
cs
sti
cmp
push
jp
popa
inc
or
mov
mov
rcrl
xchg
fs
pop
adc
mov
add
loopne
pop
or
jb
movsl
mov
ja
mov
arpl
push
mov
les
jbe
mov
in
push
cmpsl
sbb
pop
mov
imul
mov
lcall
mov
nop
scas
jg
filds
jl
sub
in
fsts
lahf
push
push
je
sbb
inc
inc
fwait
xor
jmp
int
mov
repnz
and
es
mov
pop
mov
aam
rolb
sub
aaa
mov
lods
pop
dec
push
cwtl
cmpl
popf
jg
out
push
mov
xchg
dec
jb
cmc
fisubs
jno
popa
mov
inc
std
push
mov
scas
dec
cwtl
push
sar
cmp
scas
cs
xchg
dec
xor
dec
outsl
push
inc
sub
xlat
lea
cmp
leave
pop
je
mov
repz
mov
adc
stc
test
lds
pop
dec
jl
xlat
pop
aaa
or
cli
jp
pop
aad
in
rcll
mov
test
jb
ret
mov
daa
add
mov
adc
out
addr16
loopne
jl
inc
fcompl
into
mov
inc
lea
sbb
lahf
fstpt
fcoml
xchg
pop
and
lods
xor
and
lock
test
pop
nop
mov
sbb
mov
je
int3
insb
les
push
out
add
fbstp
pop
add
imul
outsl
sbb
jle
mov
sub
clc
int
mov
sbb
ret
ret
cmpb
and
lcall
add
ret
shrb
sub
cmp
xor
pop
movsb
push
dec
hlt
inc
idivb
cmp
sub
jno
inc
or
pop
push
cs
cli
pusha
jns
cmp
push
mov
hlt
mov
inc
sub
cmp
add
outsb
addb
pop
or
push
mov
sbb
ljmp
rcrb
jb
xchg
lret
jp
lcall
xlat
out
dec
push
mov
inc
dec
outsb
into
insb
cmova
ret
push
mov
int3
push
pop
pushl
in
test
popf
add
fnstsw
cli
xchg
sub
dec
pop
stos
jae
sbb
mov
mov
adc
fs
leave
mov
dec
adc
sbb
mov
pushf
mov
rcrl
popf
push
out
sub
push
addl
scas
mov
inc
pop
mov
cld
aad
cwtl
mov
or
nop
or
mov
push
push
inc
popa
movsl
imul
ficoms
ds
sub
pop
cmp
jge
mov
mov
sub
cmp
or
out
outsb
jg
shll
leave
movsb
shr
and
push
repnz
stc
adc
jmp
cli
shll
scas
and
sub
or
out
xor
nop
inc
jbe
jns
push
mov
push
cld
inc
inc
adc
add
sbb
pop
leave
dec
sub
fsubrl
lock
movsb
mov
pop
dec
mov
sbb
call
movsb
loope
fs
xchg
ret
add
ja
aad
out
xchg
mov
add
shrb
xchg
std
stos
or
hlt
mov
xlat
mov
cmc
negb
shll
xchg
xor
insb
stos
fucomip
push
push
stos
hlt
cmp
adc
adc
fildll
adc
sub
incl
hlt
and
jge
or
ret
mov
jg
mov
ja
in
push
inc
xor
loope
rcrl
hlt
jne
mov
sbb
cmc
test
push
mov
loop
xchg
cli
cmpsl
repz
xor
xor
aas
pop
and
mov
lock
and
push
cltd
data16
dec
jg
adc
addb
insb
and
sahf
lcall
jmp
pop
cmp
mov
jl
xchg
imul
lahf
or
call
call
add
jg
popa
outsb
sub
nop
negb
mov
insl
mov
lret
adc
pusha
sub
mov
adc
pop
clc
div
mov
adc
xor
xor
inc
add
jmp
push
cmp
jns
sbb
xchg
rsm
jns
pop
fsubrl
mov
sahf
lock
mov
loopne
dec
bound
jle
hlt
adc
ror
icebp
decl
dec
rcr
fdivl
repnz
popa
loope
pushf
out
ss
lcall
pop
mov
addl
xchg
jge
add
xchg
xchg
adcl
jmp
mov
mov
dec
mov
mov
xlat
mov
dec
add
je
add
push
xlat
add
rol
push
test
xor
dec
sub
fwait
mov
clc
push
cmp
add
clc
and
lea
push
out
cmp
pop
xchg
sub
xor
ja
or
jle
hlt
add
repnz
incl
and
cmc
lods
ret
pop
cld
pop
cmp
in
cmp
mov
mov
pop
dec
or
push
mov
cmpl
sar
subb
inc
pop
das
mov
sbb
inc
in
orb
jl
mov
xor
mov
shll
std
sbb
sub
inc
pop
arpl
outsb
push
xor
or
in
int3
outsl
push
xor
imul
inc
pop
push
nop
sbb
push
adc
adc
mov
rorl
mov
aas
lret
frstor
daa
inc
scas
aas
xchg
or
xor
xchg
fisttps
mov
cltd
nop
cmpsb
cmp
sub
pop
into
mov
in
or
test
mov
insl
pop
sahf
mov
aad
ljmp
mov
shr
or
xchg
or
mov
or
shr
cli
lods
jb
push
inc
movsl
lret
pop
sbb
mov
sbb
or
push
fs
sub
pop
jle
std
popf
xor
mov
xor
stc
mov
daa
lods
ja,pt
out
add
mov
fmulp
subl
push
dec
dec
jns
cli
lret
outsb
scas
insl
aaa
adc
xchg
es
rol
loopne
mov
outsb
fwait
movsb
adc
enter
jl
sarb
ljmp
add
into
cli
add
cmc
aas
xchg
or
sbbb
decl
ljmp
out
mov
inc
das
dec
mov
test
pushl
cmc
aad
inc
xchg
scas
dec
ret
dec
repnz
scas
lods
js
lcall
sub
cli
flds
aaa
decb
jg
loope
or
sbb
sub
or
mov
sub
mov
in
sub
gs
sarb
call
inc
mull
sbb
hlt
jbe
adc
daa
mov
ret
jno
push
jle
mov
dec
push
add
rcrb
dec
scas
or
in
jbe
add
daa
jb
cmp
decb
insl
pop
push
sub
insl
add
inc
xor
and
insl
cmpsl
int3
insl
std
ret
xchg
outsb
incl
dec
cli
roll
add
insb
mov
push
icebp
or
stos
pop
mov
and
pop
adc
mov
pop
shlb
mov
push
cmpsb
orl
add
movsb
jl
fdivl
sbb
ja
push
test
cmp
add
inc
mov
fildl
lcall
int3
cmp
fidivs
sbb
cmp
out
jl
cli
dec
enter
mov
push
pop
test
pop
es
cmp
int
jb
insb
xchg
sub
or
mov
aas
adc
inc
subb
push
cmp
or
in
loopne
inc
or
cmp
or
out
clc
sti
cwtl
addr16
pushf
mov
push
cmc
mov
ljmp
dec
mov
push
shrl
insb
xchg
mov
es
pusha
cli
fsubr
jecxz
call
ss
call
cli
and
test
push
fcomps
mov
pop
incl
dec
push
cmp
cmp
jl
mov
lcall
push
push
dec
jmp
mov
cmp
hlt
decl
xlat
pop
lds
data16
loope
leave
sub
sbb
jb
loopne
loop
dec
pop
stc
aad
mov
fwait
shlb
inc
pop
xor
dec
xor
sub
mov
fidivs
ds
call
mov
jb
inc
enter
or
push
cmp
sub
dec
cmp
insl
inc
mov
mov
sub
lcall
xor
sub
insl
adc
inc
cmpsb
and
mov
pushf
xor
mov
xlat
xchg
les
ljmp
fbld
sbb
jmp
call
mov
xchg
lret
push
mov
sub
add
loop
arpl
inc
xor
mov
dec
mov
mov
mov
cmp
adc
test
ja
cmp
and
push
and
outsl
pop
xchg
incl
xchg
int
cltd
mov
lock
loope
dec
das
jp
push
cmp
out
mov
daa
push
cmp
mov
xchg
dec
add
push
jbe
icebp
cmp
jne
mov
add
xor
xchg
jle
aaa
cmp
xor
cli
inc
push
pushl
jmp
add
loope
pop
lods
add
ret
sub
lock
push
fwait
shl
add
mov
popf
add
xchg
fs
test
pushl
mov
cld
sbb
xor
and
and
inc
decl
sti
pop
hlt
mov
adc
fimuls
das
inc
jne
dec
mov
mov
orb
fnstsw
imul
dec
adc
pop
xor
dec
xorl
stos
popf
repz
cli
adc
test
or
inc
push
pop
loope
cmpsb
cli
jg
xor
sbb
fimuls
jnp
iret
lock
int3
push
lea
gs
in
lret
cmp
push
jge
mov
jmp
gs
jo
pop
shr
bnd
sub
ljmp
pop
ret
mov
movb
cmp
mov
adc
adc
das
xchg
pop
mov
jne
jne
mov
cmc
ficompl
cld
aaa
sub
xor
add
and
shlb
in
je
jb
lahf
mov
lret
mov
cmp
cs
push
je
lock
loop
adc
out
inc
push
pusha
ss
or
push
fsubl
cld
sahf
outsb
and
outsb
outsb
sub
ja
sub
in
mov
sbb
or
insl
loope
clc
decl
insl
lret
or
lret
mov
sti
mov
cld
add
mov
or
push
add
mov
mov
dec
in
sub
lods
adc
pop
lahf
sub
test
rolb
cli
jl
pop
pop
out
ljmp
cli
loopw
subl
mov
sub
leave
ss
js
or
jno
movsl
movb
lock
dec
js
push
loope
das
push
jo
xchg
xchg
push
insb
mov
jl
mov
mov
pusha
shrl
add
pop
cmpsb
les
and
inc
lds
decl
outsb
scas
pop
mov
lds
push
stos
inc
add
mov
incb
adc
ficoml
outsb
fmulp
jo
cmp
cs
cmp
and
rorl
mov
and
adc
xor
mov
out
jg
xlat
xor
cmp
cmc
les
pop
push
adc
enter
add
dec
sbb
data16
mov
push
sbbb
add
out
jg
add
mov
mov
mov
dec
adc
out
ret
hlt
sarb
enter
pusha
jb
lock
lret
or
dec
dec
ss
pop
xlat
jecxz
lock
adc
scas
outsl
mov
incb
sahf
mov
sub
jg
cmpsb
lock
cmp
jbe
add
cmp
mov
dec
or
sub
dec
std
jo
mov
ljmp
daa
je
mov
imul
push
cmpsl
enter
scas
out
outsl
xchg
lock
leave
aaa
and
std
sbb
pop
xchg
les
movsl
ss
pop
fimull
add
test
in
jp
scas
mov
pusha
pop
push
cmpsb
jle
jb
aad
add
push
std
in
imul
out
in
scas
pop
mov
dec
jno
jbe
mov
xchg
fcomi
or
out
xchg
dec
aaa
add
push
mov
scas
insl
adc
and
fwait
sbb
imul
clc
or
into
mov
cmp
in
sbb
adc
fs
or
lret
call
icebp
inc
sub
pushf
mov
add
pop
pop
je
incl
xchg
xchg
ror
jmp
sarl
or
pop
movsl
decl
fsubs
inc
mov
inc
iret
push
test
out
hlt
mov
xor
adc
mov
or
aad
mov
add
inc
sub
lcall
and
pop
and
stc
add
orb
mov
shl
cmp
and
sarb
dec
ds
aaa
cmpsl
cmpsb
push
sbb
push
jb
clc
or
mov
xor
cmp
rclb
shrb
add
xchg
adc
push
jmp
out
mov
adc
shlb
test
aaa
mov
pop
xor
lret
aad
add
xchg
xchg
lcall
js
in
jns
fmul
add
insb
es
arpl
push
dec
xchg
movsl
adc
ljmp
push
pop
push
xchg
call
dec
add
mov
outsl
cmp
pop
xchg
movsl
cltd
leave
in
sar
mov
sbb
xlat
in
cmp
mov
loop
cmp
add
adc
sbb
jo
xor
mov
jno
mov
shrl
jg
cmpsb
mov
test
mov
pop
push
mov
xchg
lahf
push
xor
mov
pop
in
push
aas
cli
imul
and
mov
mov
inc
mov
ficomps
outsb
mov
std
adc
lret
mov
shrb
xchg
pushf
push
add
cmpsb
adc
fnstcw
enter
popa
js
ljmp
fidivrl
mov
add
inc
cs
dec
fcmovnu
push
cmp
mov
xor
mov
sub
in
cwtl
imul
inc
shlb
lods
loopne
cmp
mov
std
ret
aam
jbe
test
push
js
das
js
decl
movsb
mov
mov
add
and
inc
lds
mov
insb
dec
sub
jp
mov
fdiv
mov
shlb
jae
xor
dec
fistpll
dec
jl
inc
and
sti
sub
fldenv
dec
hlt
dec
push
gs
push
dec
sub
pop
lahf
ret
scas
mov
insb
stos
dec
sarl
push
adc
xor
rcrb
mov
popl
and
xchg
cmp
call
push
scas
insl
adc
xchg
push
mov
sbb
ret
push
jge
sub
pushf
out
data16
mov
xchg
jle
hlt
add
enter
push
shrb
ljmp
sub
pop
pop
dec
clc
sbb
fcom
pop
out
adc
push
cli
or
clc
jle
adc
sub
ret
push
jmp
adc
repnz
sbb
mov
popa
jbe
push
push
xlat
xchg
cmc
dec
ljmp
xor
and
pop
incl
xchg
or
jmp
ret
and
xchg
shl
in
inc
or
or
lret
jo
mov
lds
push
shll
push
outsb
mov
fidivl
xchg
mov
out
jp
fbld
fwait
mov
jle
dec
sahf
hlt
dec
fcmovnu
pop
cld
mov
xchg
cs
call
lods
in
ret
decl
es
add
jnp
jno
push
repnz
in
hlt
popf
add
mov
add
and
lock
push
hlt
jo
push
push
sahf
jg
je
sarl
lock
rcll
mov
mov
sub
cmpsb
xchg
cld
mov
mov
movsb
popf
mov
icebp
or
and
movsb
mov
add
xchg
add
jge
jg
fwait
jle
enter
divl
adc
in
xor
cmp
adc
sbb
in
test
incl
pop
movsb
or
xor
jmp
dec
mov
push
insb
xchg
xchg
pop
and
xor
adc
push
pop
popf
dec
jo
mov
jge
aam
lret
js
fsubrs
pop
cmpsb
xchg
stc
sbb
addr16
push
fs
inc
mov
addr16
xchg
pop
call
in
hlt
push
fadd
mov
dec
les
inc
mov
mov
testb
loope
popf
icebp
call
mov
mov
pop
icebp
es
divb
into
scas
les
clc
pop
dec
push
pop
dec
rcrl
cmp
lock
adc
adcb
pmaddwd
jbe
pop
sub
pop
mov
adc
test
or
cmp
in
andb
cmp
notb
pop
std
adc
inc
popa
in
pop
push
sbb
es
shlb
dec
and
outsb
mov
pop
out
cmp
es
xchg
out
dec
add
mov
adc
flds
mov
jmp
fwait
inc
imul
mov
gs
aam
lahf
daa
dec
dec
sub
es
push
adc
cmp
mov
pop
push
popf
hlt
lods
cmp
ljmp
lcall
sbb
mov
cmc
mov
adc
mov
or
data16
add
ljmp
mov
jb
inc
rorb
cmp
add
ret
push
cli
sub
es
and
fidivrs
leave
mov
mov
jae
lock
add
xchg
sbb
filds
and
or
ds
dec
and
and
loop
mov
sbbb
jb
mov
adc
hlt
jg
pusha
rorb
out
clc
inc
jb
insb
fimull
inc
insb
mov
pop
clc
je
fwait
imul
cmp
cmp
popa
enter
add
jae
lcall
xchg
flds
cmp
shlb
cli
mov
test
insb
outsl
jp
xor
stos
outsb
aad
mov
ja
xchg
fists
ljmp
in
mov
pop
cmp
mov
mov
mov
push
cmpsb
jne
into
cwtl
lock
scas
and
push
popa
sbb
shrb
jp
push
mov
push
jg
fcomi
or
sbb
cltd
sbb
aas
push
movzwl
lret
shrb
mov
fldenvs
xchg
sub
adc
decl
mov
not
ret
push
or
fcoms
ret
dec
loop
adc
add
jmp
imul
stos
dec
ds
cs
jne
mul
mov
dec
sbb
inc
shll
mov
pop
lcall
rol
cmp
or
les
xor
add
push
jp
popa
aaa
sbb
test
mov
lea
clc
lcall
cmp
fidivrs
mov
inc
cli
ja
mov
pop
cmpsb
mull
lock
inc
cmc
aad
xlat
push
loope
or
cld
pop
in
js
push
jmp
clc
sub
pushf
shrl
hlt
sahf
negl
xchg
inc
fsubs
in
add
xchg
enter
lods
and
je
pop
push
pop
popa
outsl
and
adc
data16
insl
jge
jl
lds
mov
ljmp
mov
and
push
arpl
enter
das
xchg
mov
jmp
ljmp
out
icebp
push
mov
icebp
icebp
insl
sar
int3
out
ljmp
test
movsb
xchg
push
sbb
xor
mov
or
push
pop
and
sub
xor
std
mov
inc
adc
fsubrl
lahf
add
and
clc
dec
jo
movsb
pop
mov
cmc
mov
inc
xchg
lds
and
sbb
pop
jno
dec
mov
jne
sahf
pop
call
bound
mov
mov
cmp
lcall
fs
aam
xor
movsl
push
inc
jmp
mov
adc
xchg
push
dec
cmpsb
into
jmp
and
jmp
mov
subl
daa
mov
xchg
inc
rcrb
mov
inc
mov
mov
fwait
xchg
sub
sub
dec
pop
push
or
add
jl
add
iret
icebp
jge
out
lret
push
test
lret
jg
push
lds
mov
ljmp
loope
or
sub
adc
call
scas
sbb
aam
jbe
es
dec
les
fdiv
dec
rclb
mov
mov
pop
dec
xchg
xchg
push
push
add
in
add
loop
push
pushf
and
sbb
insb
sbb
xchg
imul
adc
cld
clc
mov
lea
fldt
lret
test
std
dec
or
das
xchg
out
inc
pop
inc
lcall
xchg
or
cmpb
jnp
jo
jle
pop
gs
mov
sub
ds
jecxz
sbb
es
aaa
std
cmp
lahf
stc
or
push
xor
in
xchg
ja
and
lea
mov
call
mov
xor
dec
fdiv
fisubrl
mov
cld
xor
jne
pop
pop
xor
in
addr16
inc
lret
fistpll
adc
pop
lea
mov
xchg
sub
mov
xor
pop
xchg
subb
xorb
add
ret
jg
mov
jge
mov
mov
mov
xchg
stos
jmp
sub
aad
ror
sbb
popf
xor
adc
hlt
pop
pop
or
add
cld
cs
jbe
or
or
incl
loop
mov
or
sub
sbb
add
bsr
xchg
cmp
jp
dec
test
pop
push
xor
pop
jbe
mov
pushf
sub
push
cmp
pop
cwtl
outsb
and
xor
xchg
mov
adc
xchg
aad
clc
enter
iret
cld
cli
dec
adc
cld
xchg
jge
jmp
jo
cmp
lret
jb
icebp
aam
dec
mov
cwtl
addr16
sbb
dec
pop
mov
inc
daa
xchg
ss
add
imul
fmulp
dec
add
imul
xor
jmp
pop
pop
or
imul
dec
inc
pop
popw
mov
push
testl
dec
stos
pop
inc
aaa
test
and
loope
icebp
ficompl
fsubs
adc
inc
jle
cmc
ja
and
clc
je
hlt
add
movb
pop
lea
adc
aad
jle
sub
push
push
and
mov
adc
or
popf
es
sub
ljmp
fcoms
dec
add
jb
gs
mov
xchg
mov
or
insb
add
or
das
mov
in
test
cli
dec
sub
decl
ds
in
push
cmp
pop
mov
sbb
sbb
inc
dec
cld
push
clc
orb
lret
mov
mov
dec
xor
or
mov
insb
or
mov
sub
jg
pop
sbb
push
push
movsb
sub
adc
je
in
pop
and
call
lea
scas
push
add
ds
rcll
push
fbld
push
push
mov
stos
cli
or
test
lahf
mov
pushl
jl
xchg
call
and
cld
mov
inc
sbb
aam
hlt
push
jae
divl
inc
add
popf
repnz
lock
or
xchg
cmpsb
pop
lock
cmp
out
negb
mov
js
adc
cs
or
sub
cmc
xchg
pop
add
imul
mov
cmp
mov
clc
push
std
adc
sarl
pop
out
popl
test
js
pop
mov
or
enter
add
sub
cmpsb
bound
icebp
or
pop
hlt
test
div
xchg
fs
pop
in
pop
cmp
fcomps
scas
and
cmp
bnd
mov
mov
repz
xorl
out
movsb
xchg
sub
out
adc
add
fwait
jl
pop
ljmp
call
pushf
jp
mov
sub
sbb
loopne
movb
xor
pop
push
jg
and
pop
insl
xor
inc
inc
lcall
xchg
imul
ss
push
and
dec
ja
in
lcall
fcomip
pop
jne
pop
cmpb
ja
sbb
fsubs
or
insl
jnp
push
mov
dec
push
leave
fistpl
add
test
adc
push
call
sub
imul
mov
je
je
test
inc
sbb
mov
sbb
std
sarb
xorb
out
cwtl
ffree
std
std
pop
fadd
jge
pop
lods
pop
pop
add
cld
cmpsb
mov
rorb
and
les
xor
inc
mov
adc
xchg
rcrb
jl
cmp
cmp
cmp
sarl
mov
movsb
jg
lcall
pusha
in
xlat
cs
xlat
jge
add
or
add
arpl
ja
mov
test
lock
mov
int3
mov
and
mov
into
test
xor
mov
cmp
xor
filds
mov
mov
lahf
cmc
add
lods
cmp
out
mulps
mov
rol
pop
push
inc
or
rclb
xchg
mov
add
jl
sbb
xchg
xor
xor
inc
mov
pop
lods
cmc
sti
repz
cmp
scas
add
lcall
in
or
fisttps
inc
and
mov
mov
divb
dec
jb
sub
sbb
push
lea
ror
sub
fcomi
pusha
push
test
dec
das
orl
pop
dec
enter
inc
jno
dec
push
enter
mov
rcll
or
pushf
enter
jmp
jns
pusha
or
mov
push
cmc
cs
loopne
cmp
sub
sbb
int3
mov
aad
xchg
adc
test
into
add
or
jns
inc
inc
in
pushf
in
movsl
das
sarb
cmp
cmp
jae
pop
sar
fs
out
push
xor
and
push
jo
call
test
iret
aas
jecxz
jmp
adc
cli
fildll
inc
insl
mov
lret
inc
icebp
mov
or
mov
pop
mov
call
push
sbb
mov
addr16
xchg
test
scas
xchg
mov
mov
adc
adc
inc
mov
push
push
lods
sbb
scas
mov
add
fdivp
add
or
dec
adc
jge
jne
mov
add
xchg
inc
ret
cmp
pop
aas
jle
xor
add
pop
dec
imul
add
sub
pop
jl
stc
add
std
sbb
loopne
in
xchg
jge
adc
inc
xchg
mov
ret
cwtl
fnsave
call
test
cmp
test
fisttpl
fists
aam
orb
sub
clc
fucomi
mov
pop
pop
jne
das
cli
fildll
pop
lods
cmp
in
das
cwtl
jbe
lods
push
cmp
mov
jl
data16
xor
sub
rclb
adcl
xor
jb
mov
out
inc
daa
pop
adcl
loope
js
and
bound
and
insl
mov
dec
fmulp
aam
clc
adc
xorb
testl
lret
dec
outsl
js
add
clc
js
sub
int
cli
mov
into
pop
sub
push
ss
xchg
popf
shrb
sahf
rcrb
add
mov
rorl
ss
xchg
jle
pop
fsubr
push
cmp
aad
mov
mov
or
iret
adc
rorl
ljmp
push
cwtl
inc
fildll
out
pusha
mov
push
cli
into
and
subb
push
pop
stos
lret
cmp
stos
xchg
pcmpgtb
das
xchg
pop
mov
pop
sub
xor
roll
stos
repz
xchg
jle
push
adc
mov
mov
or
pushf
sbb
popa
mov
mov
jno
out
popw
lret
sahf
add
sub
inc
arpl
repnz
or
xor
sbb
ljmp
cmc
pop
divb
pop
inc
cmc
test
es
inc
movsb
mov
mov
cld
or
pushl
es
push
loope
leave
mov
adc
push
push
mov
popa
cld
jg
loopne
rep
fwait
sbb
divl
jl
ds
lea
dec
xor
fwait
test
je
or
jbe
push
cli
negb
ljmp
and
pop
dec
rcrb
rcll
mov
dec
push
cli
mov
cld
pop
sahf
js
iret
pop
pop
push
xor
mov
clc
push
add
push
pop
jmp
jle
ljmp
inc
aas
fadd
sub
mov
push
push
movsl
ja
mov
or
rorb
mov
rcll
mov
ljmp
aas
push
push
xchg
sbb
loopne
sub
cmpsb
jecxz
and
jno
mov
fldt
mov
sub
fwait
xchg
jne
fbstp
cli
mov
jne
call
std
lahf
sbb
in
push
int
test
cmpsl
mov
push
push
mov
and
mov
aaa
sub
pop
sahf
gs
push
dec
push
rcrb
lock
jecxz
je
insb
fiadds
lahf
jle
into
add
inc
pop
jge
es
in
sbb
into
roll
push
pop
aaa
pop
clc
xorb
jno
into
mov
cld
xchg
jmp
in
cs
mov
mov
adc
add
rclb
mov
ljmp
add
js
outsl
divb
sar
mov
fmul
fstpl
add
sub
dec
cli
fwait
cmp
pop
bound
ficomps
cmp
sub
imul
incl
cwtl
scas
adc
hlt
out
inc
lcall
push
dec
ja
repz
in
and
sbbb
out
or
fcoml
out
push
lret
shlb
cmp
fxch
push
cmp
shll
loopne
xor
push
fisttpll
test
ret
adc
test
movsb
xchg
sub
hlt
mov
jle
aas
das
rcrb
adc
popf
push
pushf
aam
aad
add
clc
mov
outsl
jmp
xor
adc
ja
push
lret
mov
out
dec
or
ret
or
inc
mov
je
sbb
scas
ss
jne
loop
mov
pop
es
mov
lea
adc
push
lcall
shrb
xchg
pushf
arpl
jo
outsl
int3
push
xlat
and
add
cmp
loopne
lret
xchg
inc
and
movsb
insl
rcrb
push
inc
hlt
inc
inc
loope
das
sbbl
and
imul
gs
insb
mov
aaa
add
ret
jle
into
jne
shlb
mov
repnz
jg
xchg
jg
outsl
in
in
xor
imul
push
xor
or
inc
pop
dec
into
cmp
dec
mov
sbb
daa
ds
gs
cmp
mov
enter
loope
ret
add
add
xchg
out
dec
sbb
pop
shrl
cmp
clc
adc
jl
test
leave
cmp
das
jecxz
lods
adc
jbe
sub
push
jg
xchg
into
cmpb
cmpsl
js
sub
mov
adc
xchg
mov
les
clc
outsl
js
and
fldl
mov
in
lock
test
push
mov
cmp
aas
sbb
pushl
aad
pusha
push
in
sub
ret
enter
cmp
mov
push
add
push
dec
outsb
ds
inc
pop
mov
push
jecxz
cmpsb
fstpl
dec
lock
lret
into
mov
stos
arpl
insb
int3
inc
and
cmp
das
mov
lret
hlt
mov
add
sbb
pusha
lahf
dec
je
repz
cmpsb
in
pushf
mov
lea
hlt
nop
push
sbb
dec
imul
aam
into
push
inc
jg
sub
inc
mov
aas
push
popf
pop
movb
sarl
mov
pop
aaa
roll
lods
cmp
xor
jle
pop
dec
orb
mov
and
fmuls
aaa
loop
lock
mov
pop
aam
or
xor
cmp
pop
mov
fidivl
cmc
imul
lahf
pop
call
roll
cmpsb
xchg
xchg
mov
mov
mov
repnz
and
add
insb
test
lcall
rcrl
cli
lock
push
fiadds
inc
aas
repnz
push
mov
das
mov
jb
xchg
mov
push
int
dec
inc
mov
and
lea
mov
adc
aas
or
or
or
jo
push
add
clc
int
add
mov
inc
cmp
and
push
and
push
push
in
cmpsl
test
and
jg
aas
insb
inc
enter
xchg
subb
jns
jge
or
jg
pushl
mov
and
imul
imul
sbb
sbb
int3
fwait
testb
jns
push
incl
sub
adc
sti
xchg
push
push
call
push
fdiv
cs
inc
fsubl
xchg
and
outsl
cld
cmp
cmp
fxch
call
adc
adc
fstl
insb
cmp
fisttps
jmp
lret
pop
rorb
mov
roll
sbb
nop
das
adc
adc
repz
loop
mov
mov
lea
stos
inc
sbb
dec
mov
in
ud0
sub
mov
call
inc
dec
mov
dec
loopne
fucom
mov
lret
mov
es
cld
dec
pushf
int3
notb
nop
leave
mov
call
mov
aaa
std
pop
push
push
inc
push
fwait
enter
jae
insb
xor
sbb
bnd
push
add
jmp
jp
aaa
inc
xlat
dec
sub
scas
xor
mov
imul
bound
mov
shrb
push
dec
jo
xor
sub
sbb
dec
mov
inc
fistl
das
or
shll
fs
ljmp
out
xor
stos
push
pop
mov
inc
push
adc
lret
aaa
cmp
cmp
icebp
int
xlat
push
imulb
insb
pop
cmp
fs
popf
inc
lret
gs
stos
cmp
mov
aad
popa
sar
jge
sub
je
mov
or
into
pop
push
xchg
xchg
sbb
push
scas
nop
mov
push
xchg
mov
xchg
mov
ficoml
pusha
adc
xchg
clc
mov
add
sarl
fsubr
enter
addl
inc
dec
decl
js
jg
cmp
insl
pop
movsl
cmp
sbbl
mov
jmp
int
push
adc
mov
xchg
repnz
sbb
std
cmp
xor
add
mov
iret
pop
cld
call
nop
sbbl
cmp
lods
dec
inc
xor
movl
ret
ret
ret
pushl
test
inc
cli
adc
add
add
outsb
mov
fisubs
xchg
call
inc
sbb
mov
xor
jns
and
add
adc
inc
pop
loop
loope
aaa
adc
pop
adc
adc
sub
xchg
or
dec
in
add
inc
shll
push
and
sub
ja
in
xchg
lock
pop
ror
jmp
movsb
outsl
subl
push
loopne
cld
mov
out
lahf
jl
dec
std
cld
outsl
popa
loopne
fnstsw
push
mov
mov
pop
xchg
call
xchg
jb
repz
dec
int3
adc
xchg
sub
push
in
aas
xor
test
loop
data16
sub
mov
push
xchg
cmp
out
pusha
push
inc
negb
cmp
jae
sbb
mov
and
and
push
clc
jg,pn
hlt
mov
out
push
std
subl
inc
adc
and
push
out
dec
fstpl
push
xorl
inc
std
aas
test
shlb
push
add
lret
jne
movsl
int
push
ss
and
out
movsb
ret
aaa
mov
and
inc
mov
bnd
insl
or
or
int3
xor
aam
ds
and
aad
or
adc
dec
and
mov
sub
xorb
mov
decl
outsb
lret
pop
xor
jae
add
lret
sbb
cmp
jo
mov
and
out
cmp
sbb
mov
xchg
cli
jbe
sub
test
push
adc
les
sbb
mov
mov
cmpsb
insb
les
addl
mov
mov
test
movsb
lods
aad
loop
imul
ljmp
pop
push
adc
cmpsb
cmpb
ja
shrb
rorb
jmp
mov
sbb
ljmp
clc
pop
pusha
je
mov
imul
std
decl
pusha
ja
pushf
fnstsw
mov
xor
ljmp
es
and
and
cmp
sub
xor
jo
sub
lahf
adc
fimuls
mov
jge
cmc
or
incl
nop
adc
mov
mov
push
xchg
in
stos
jae
jmp
adc
add
andb
orb
loop
sbb
mov
call
shlb
outsb
mov
repnz
cli
sbb
ja
push
sahf
pop
loope
sub
movsb
scas
in
mov
pop
ret
lcall
xor
js
gs
mov
fst
sbb
ljmp
testb
lds
hlt
lcall
out
xchg
jne
leave
pop
ret
imul
push
mov
out
sbb
xlat
and
fwait
pop
movsb
add
mov
out
add
subb
push
mov
jmp
out
cli
pop
incl
pop
fnstenv
or
lea
mov
xchg
adc
jmp
pop
divl
fidivrl
lret
mov
stos
stos
std
or
leave
and
mov
jne
scas
push
mov
test
xor
sbb
int
in
mov
pop
or
jle
movsb
repnz
lods
inc
ds
loop
andb
ret
xchg
icebp
sahf
mov
js
inc
outsb
loopne
jbe
fstl
pusha
lods
movsl
cmp
fisubrs
mov
push
pop
les
jg
add
or
out
roll
movsb
adc
lock
test
xor
rorl
dec
popf
sti
mov
or
xchg
add
mov
add
ret
push
or
push
aad
jne
push
ljmp
int
dec
adc
push
xor
add
inc
lahf
mov
sbb
movsb
ja
jo
rcrl
orb
sub
fistps
and
je
sbb
pop
dec
jmp
dec
jo
inc
lods
outsl
xchg
push
cwtl
inc
add
cmp
or
arpl
lahf
adc
leave
mov
xor
mov
sub
sbb
das
adc
add
sub
adc
or
add
mov
jmp
xchg
cmc
pop
js
fimull
xlat
adc
mov
decl
and
sbb
push
cmp
mov
stos
outsb
andb
push
mov
cmpl
cmpsl
in
in
mov
cltd
cli
fldcw
mov
jg
adc
ss
push
pop
loope
pop
fs
jg
arpl
arpl
lret
and
sub
clc
xor
xor
xchg
adc
sbb
addb
scas
pop
mov
hlt
dec
sub
xchg
shll
outsb
pop
scas
scas
or
hlt
or
outsb
mov
sbb
add
repz
pop
ss
mov
inc
jge
dec
inc
push
in
inc
shll
js
dec
and
inc
cmp
jg
fldt
xchg
out
mov
cltd
ret
ret
push
div
xchg
scas
add
pop
popa
cld
mov
xor
ds
sbb
mov
adc
pop
enter
in
or
out
enter
push
or
xchg
dec
jecxz
push
bound
add
jg
es
and
test
sahf
mov
add
decl
lcall
test
adc
out
aam
pop
mov
mov
insl
das
push
pop
dec
loope
aaa
fisttpl
cmp
repnz
sub
push
ja
gs
call
in
into
nop
add
fistpll
lea
ret
xor
or
andb
popf
jle
xchg
jo
fs
mov
decl
jne
lods
dec
or
and
fidivrs
stos
test
std
jp
or
mov
mov
push
icebp
mov
dec
in
ja
pop
xor
or
int
and
insl
sahf
add
int
and
std
nopl
mov
mov
or
call
pop
or
icebp
sbb
mov
adc
jge
cmp
sti
in
jne
adc
sub
call
cwtl
inc
and
call
incl
sahf
mov
cltd
jg
cmpsb
xchg
jbe
aas
scas
xor
js
xor
fwait
xchg
popa
jmp
cmp
mov
in
push
hlt
js
push
lods
cmp
leave
clc
dec
pusha
inc
xchg
adc
or
in
sbb
hlt
push
ljmp
xchg
hlt
rcrl
or
jmp
lods
cmpw
std
xlat
test
je
roll
push
sbb
sbb
incl
int
in
jne
out
subb
push
add
hlt
fistpll
test
cs
xchg
insl
sub
sub
mov
lock
xor
pop
sub
mov
or
sbb
je
sub
pop
pop
xchg
sbb
fbstp
jb
test
cmpl
push
test
xchg
nop
adc
aam
stos
push
xchg
popf
inc
clc
cmp
mov
in
inc
add
mov
icebp
pushl
in
aas
sbb
enter
ret
mov
mov
aam
mov
hlt
nop
pop
mov
loope
xor
pop
ja
inc
mov
cmpsb
jmp
popl
not
push
gs
mov
add
cmp
jnp
xchg
xchg
cmp
arpl
test
push
clc
scas
xchg
test
ss
dec
mov
out
nop
pop
mov
or
dec
imul
mov
call
adc
fbstp
out
fisubs
pop
loopne
add
sahf
iret
mov
adc
insb
scas
jl
pop
movsl
adc
push
lea
mov
fsub
movsl
pop
xor
mov
pop
add
call
mov
mov
mov
sbb
push
shlb
out
imul
sbb
mov
jmp
push
xchg
sbb
add
lock
rcll
dec
cltd
mov
mov
mov
sub
loop
cltd
out
paddb
cwtl
mov
imulb
movsl
lahf
rcrl
test
inc
sbb
sbb
lock
or
jo
xor
les
jo
xchg
mov
clc
neg
outsb
cld
cmpsl
lahf
mov
dec
out
cmp
inc
incl
movsl
mov
mov
jecxz
incl
sahf
pusha
xor
fucomi
cli
cmp
push
add
push
sbb
fisubrl
loope
push
sub
cmp
popa
push
and
add
insb
pop
loopne
or
pop
movsl
in
push
in
in
mov
pop
dec
inc
add
pop
arpl
scas
lret
jl
mov
push
cmp
mov
mov
push
loopne
dec
xor
fs
add
xor
enter
imul
ror
movsb
sbb
and
in
push
jg,pt
ss
hlt
mov
add
test
int3
pop
cmp
arpl
in
cmpsb
dec
xor
mov
or
and
lret
shll
xchg
hlt
push
push
sbbl
cwtl
ds
ds
xchg
inc
jge
sbb
ja
mov
loope
adc
jge
pop
stos
fimull
into
and
pop
or
cli
or
jbe
mov
pop
sub
js
ljmp
movsb
sbb
test
in
lret
sti
pop
add
ja
ret
or
sbb
adc
repz
sub
sub
add
insb
mov
out
pop
clc
scas
and
mov
pop
adc
mov
call
mov
or
jp
or
inc
pop
outsl
inc
scas
mov
jge
mov
and
add
cmp
adc
push
les
ljmp
aaa
mov
js
mov
mov
daa
adc
pop
dec
cwtl
call
lock
int
aam
inc
jl
mov
sub
pop
sbb
rorb
push
sar
pop
std
xor
cs
dec
jle
fsubl
mov
lods
test
imul
inc
push
jl
mov
jmp
sbb
fs
lods
cs
mov
push
mov
inc
inc
aam
sbb
outsl
xor
push
xchg
iret
aam
fists
and
pop
adc
cmc
aaa
mov
in
imul
push
insb
sbb
cmp
icebp
call
pushf
mov
ficomps
adc
jle
ret
lods
inc
inc
testb
lods
mov
cs
lcall
je
stc
jp
jne
in
addr16
mov
shlb
fs
push
jle
pop
or
aaa
std
push
jmp
enter
sub
push
loopne
cltd
xlat
or
fldt
ret
jp
sahf
dec
or
nop
dec
stos
sarl
ret
roll
jbe
daa
dec
pop
ss
cli
fcomip
arpl
aas
rol
sub
jno
and
pop
ret
test
mov
mov
mov
jge
aad
cli
mulb
test
xchg
inc
add
sbb
mov
pop
rcrb
scas
xchg
mov
popa
or
sub
xor
hlt
fwait
das
adc
jg
in
adc
mov
std
adc
loopne
adcl
sub
and
adc
idivl
jne
pop
xor
fcomi
cltd
cld
xor
inc
jl
cmp
and
orb
sub
pop
mov
push
dec
fdivs
xor
inc
pop
mov
incl
jge
sbb
mov
cmp
and
add
sbb
jecxz
loopne
mov
sbb
sti
push
sbb
hlt
sub
mov
push
push
hlt
aad
rol
push
pop
jno
bound
push
popa
ljmp
cld
inc
jns
mov
mov
pop
xchg
gs
inc
push
mov
loopne
fnstcw
call
adcb
xchg
lods
gs
out
dec
js
or
cmp
mov
lods
outsb
ja
sub
int
and
sbb
push
faddl
loopne
and
sbbl
es
or
ljmp
mov
mov
and
pop
roll
push
sti
mov
dec
sbb
mov
mov
jne
ljmp
pop
ret
mov
popf
sbb
inc
push
cmpsl
cmpsb
pop
inc
arpl
pushf
maxps
mov
test
ret
xchg
mov
rcrb
incl
mov
sti
pop
xor
aad
adc
push
mov
mov
adc
ss
add
pop
add
sub
and
repz
xor
dec
scas
add
lds
xor
mov
nop
push
dec
sbb
sahf
or
or
das
dec
sub
int3
inc
in
rorb
dec
lcall
add
hlt
push
push
fisttpll
rcl
cmpsl
mov
pop
and
sub
xchg
sub
leave
mov
fdivrl
xor
xchg
mov
imul
das
aam
lcall
push
pop
mov
or
push
mov
mov
iret
aas
and
pop
lods
pop
iret
or
in
aam
push
jmp
out
insl
mov
mov
add
fildll
push
es
pop
inc
rclb
cmpsl
aas
insb
jp
cmp
iret
inc
pop
and
mov
push
adc
or
or
or
sbb
imul
hlt
inc
fmull
xor
je
shlb
mov
mov
insb
adc
lcall
pop
repnz
mov
mov
cltd
sub
dec
cmc
sub
or
mov
pop
mov
cli
mov
out
and
jmp
add
lods
xchg
add
push
lahf
add
lds
mov
sub
js
xchg
mov
add
xchg
in
insb
fwait
decb
enter
or
insb
stc
in
pop
loop
fildl
aas
movsb
xchg
pop
ficompl
inc
incl
adc
mov
sahf
sub
stos
popa
std
push
mov
lods
add
lds
jecxz
add
or
xchg
mov
pusha
cmp
cli
popa
jo
mov
jle
test
aad
sub
xlat
cli
xorb
hlt
hlt
pop
loopne
es
jle
insl
push
shll
fwait
repnz
adc
xor
sbb
add
fildl
or
and
pop
inc
imulb
mov
cld
out
repnz
cld
decb
loop
aad
push
mov
lcall
stc
xchg
in
dec
clc
dec
mov
stos
push
in
aas
cmp
ret
sub
push
push
pop
cwtl
sbb
dec
sbb
or
das
pop
inc
subl
add
out
add
mov
and
in
mov
xor
imul
sbb
cmpsl
xlat
rorl
test
mov
cmp
jl
push
cmp
or
push
adc
and
mov
adc
cltd
mov
inc
cmp
jg
push
cmc
popa
daa
leave
clc
dec
rcrl
gs
dec
cmpsl
dec
es
ficoml
pusha
inc
sbb
sbb
mov
add
orb
xchg
decb
mov
lret
xchg
mov
jb
jmp
mov
std
jne
mov
bound
xchg
xor
jecxz
pop
sub
add
loope
int3
mov
mov
sub
jg
dec
sub
aaa
idivl
cmc
imul
sbb
cli
jne
ja
addr16
mov
and
pop
ja
fimuls
push
cmpsl
cs
xchg
jl
fists
mov
imul
lods
sub
add
pop
dec
or
aaa
mov
test
or
clc
insl
test
je
mov
pop
adc
rclb
adc
mov
pop
cwtl
push
sbb
mov
outsb
mov
inc
and
sarb
sarl
fcomps
fsubl
cmp
push
jecxz
mov
in
xchg
mov
or
xchg
push
aad
ret
xchg
and
cmpsb
pop
hlt
popf
push
mov
orl
ret
jge
test
scas
cmpsb
lret
mov
nop
popf
sahf
movsl
mov
lcall
xor
out
stc
adcb
mov
sub
mov
dec
pusha
aam
loopne
add
mov
push
jg
or
xlat
hlt
push
fisttpl
inc
lods
int3
mov
ss
cmpl
js
jecxz
jle
mov
mov
jmp
mov
pop
mov
out
xlat
paddd
adc
add
add
pushl
inc
test
and
dec
adc
data16
js
pop
sub
and
push
mov
add
fidivl
je
test
mov
insb
aad
mov
pusha
jle
aas
and
mov
stc
sbb
mov
pop
cmp
lcall
dec
divl
add
adc
stos
inc
push
mov
insb
mov
adc
dec
adc
fdivrl
fsubl
repnz
jmp
mov
int
pop
aas
int3
hlt
data16
adc
stos
mov
xchg
popf
mov
incl
push
push
fisubrl
shll
aam
repnz
inc
inc
xchg
mov
int
ljmp
jg
out
lods
in
std
incl
ficomps
sbb
sahf
push
or
pop
jno
pop
gs
push
lock
mov
stos
loop
sub
nop
gs
mov
lea
or
pop
test
out
push
adc
push
hlt
inc
xor
fwait
cwtl
out
rcrl
or
inc
cmp
into
jp
lea
out
pop
jge
int3
stos
jl
adc
aas
jns
rcrl
or
in
pop
sub
push
clc
jne
incl
xchg
adc
jns
lahf
jbe
jmp
add
sahf
and
ret
lods
pop
xor
in
ds
dec
mov
bound
fwait
filds
das
mov
in
sub
xor
inc
cmpsl
push
sub
adc
cwtl
xlat
inc
add
imul
ret
fisubrs
lret
mov
xor
jmp
sbb
incl
mov
pusha
mov
pop
pop
lods
mov
dec
roll
mov
fwait
and
pop
sub
push
jge
xchg
mov
rclb
popf
or
std
adc
or
jp
and
xchg
inc
cwtl
jbe
xor
lret
clc
imul
aad
and
and
add
add
mov
mov
mov
imul
in
repz
je
mov
out
xor
sti
push
and
xor
fdivrp
add
push
dec
stos
fs
cmp
adc
xchg
sbbb
aad
loope
rolb
jp
iret
inc
cltd
rorb
push
pop
dec
xchg
insl
cmpsb
push
xor
clc
pop
call
aaa
pop
pop
adc
xor
cld
pop
or
out
sbb
cld
mov
es
loop
aam
stos
sub
fbstp
int3
mov
nop
mov
xchg
or
mov
ljmp
xor
xlat
ja
dec
or
dec
ret
push
dec
pop
jle
mov
pusha
andl
mov
mov
ja
loop
mov
lock
pop
clc
ss
lock
adc
mov
je
jae
repz
rcl
mov
in
insl
shrl
mov
dec
mov
mov
mov
inc
inc
iret
mov
or
adc
xchg
mov
hlt
or
repnz
fadds
mov
iret
lcall
pop
lods
cmp
ficoms
repnz
dec
cmp
sub
sbb
fmull
sbb
mov
xchg
insl
push
adc
and
shrb
dec
xchg
cmp
mov
sbb
pop
xchg
js
xorb
xchg
enter
mov
mov
mull
jge
test
push
adc
outsl
mov
js
sub
hlt
ffreep
outsb
and
div
dec
jg
rol
jle
push
ds
cld
xlat
paddd
xchg
and
cmp
dec
pop
sub
inc
dec
adc
rcl
pop
roll
dec
cmp
idivl
jge
pusha
jge
xchg
outsb
xchg
and
lahf
xlat
mov
outsb
push
push
xchg
pop
ret
cli
lahf
sbb
xor
arpl
out
pop
leave
xor
add
sub
shrl
inc
jnp
sbb
and
push
out
int3
xor
popl
fwait
or
outsb
adc
dec
dec
clc
enter
mov
sbb
inc
lret
nop
dec
inc
adc
jg
mov
inc
dec
pop
inc
loopne
mov
sbb
daa
test
ss
push
mov
jnp
enter
xchg
cmp
mov
arpl
hlt
mov
mov
mov
push
dec
add
xor
hlt
jg
mov
xor
cmp
in
mov
roll
mov
ficoms
rcrb
jge
mov
fidivrs
mov
je
or
fildl
std
pop
data16
call
and
lcall
pop
lahf
imul
fs
ret
cmp
fs
ljmp
push
imul
mov
fcoms
dec
pushw
push
push
fdiv
adc
sbb
xor
mulb
lods
xor
sub
stc
fwait
sub
mov
and
ds
inc
lock
cld
fdivl
iret
and
fcomip
aas
rorl
or
loop
mov
mov
fdivrs
mov
and
fbld
cmp
inc
faddl
sahf
mov
pop
mov
sbb
adc
or
jmp
movsb
inc
jae
pushf
cmpsb
lea
scas
cmp
test
ret
aaa
insb
outsb
cmp
aas
add
xchg
cwtl
ret
nopl
loope
hlt
in
std
or
push
decl
inc
out
or
jae
inc
inc
or
fistps
add
out
jae
mov
and
jge
lret
cmp
mov
das
add
sbb
cld
pop
rcr
push
sub
aad
neg
xchg
cld
jg
cmp
xchg
inc
jge
int3
xchg
sahf
icebp
fwait
pop
ret
and
mov
ret
pop
ljmp
lods
enter
cld
and
cmc
mov
jno
aas
and
pop
add
pop
xor
shl
mov
lcall
inc
jb
xlat
in
mov
add
mov
test
jg
incb
or
fdivs
xchg
sbb
int
mov
sbb
inc
dec
mov
shll
fs
mov
mov
nop
jnp
sbb
sub
je
das
cmp
sbb
and
clc
enter
adc
in
ja
into
push
pop
std
repnz
push
and
jp
sub
ret
xchg
mov
pop
clc
dec
push
jmp
loopne
test
repz
xor
outsl
cmp
mov
cld
pop
push
cmc
mov
jno
mov
xor
mov
loop
jg
pusha
lods
xchg
inc
pop
gs
insb
or
or
and
jg
sbb
and
mov
pusha
mov
icebp
inc
lds
ret
js
aas
fs
pop
imul
test
mov
adc
inc
rcl
outsl
dec
mov
insl
mov
aaa
sbb
sbb
lahf
flds
push
ss
bound
shll
enter
and
clc
negb
xor
cmpl
movsl
pop
stos
ljmp
imul
into
repz
or
cmpsb
add
xor
mov
stos
xchg
ljmp
pusha
js
pop
inc
sbb
call
xor
dec
or
loop
incb
inc
xorl
bound
push
test
xchg
fwait
lahf
lea
pushf
sub
js
or
inc
imul
adc
out
push
mov
and
mov
jecxz
adc
sub
stos
pop
pushf
fstpt
mov
mov
adc
stos
cmpl
mov
imulb
inc
insl
adc
xchg
sarb
add
push
xor
popa
inc
pop
ja
outsb
lret
mov
adc
lcall
push
push
lret
lahf
cmp
pop
rorb
xor
inc
push
jmp
fildll
adc
pop
sub
xor
xor
add
out
mov
jl
push
push
sbb
fidivs
loope
jb
in
sub
xchg
add
mov
ljmp
xor
jl
aas
inc
dec
cmp
dec
orb
jno
maskmovq
testl
mov
xchg
cmp
mov
fists
imul
mov
test
mov
adc
or
shll
add
push
dec
cwtl
fisttpl
adc
sbb
jno
mov
push
gs
inc
lret
shrb
int
dec
lret
add
das
cmpsb
and
sbb
sti
lcall
push
rcl
shl
outsb
pop
pop
add
adc
adc
and
int3
test
xor
out
rcrb
xchg
in
in
dec
lcall
mov
dec
scas
xchg
test
stos
loopne
ss
inc
cmp
loopne
mov
into
aas
and
push
aam
xchg
push
push
push
cwtl
inc
or
pop
js
cmp
sarb
sub
test
jp
mov
imul
imul
mov
and
and
or
fidivrs
ret
cmp
mov
mov
mov
and
dec
insb
push
mov
outsl
pusha
mov
loopne
cmp
mov
dec
scas
std
mov
sbb
mov
std
test
insb
loopne
adc
xchg
popf
imul
cmp
mov
ficoms
pushf
insb
pop
fists
push
and
pop
and
scas
lea
faddl
push
xchg
push
push
fisttps
rcrl
jl
adc
add
dec
cmpsl
push
data16
call
sub
ret
push
xor
jno
lcall
aaa
cld
add
xor
in
mov
jbe
jbe
or
inc
and
repnz
jmp
add
insb
iret
insl
and
std
push
adc
idivb
mov
xchg
cmp
sahf
add
sbb
ds
imul
push
rcrb
mov
cmp
add
pop
cld
decl
lods
and
jg
mov
popf
enter
cwtl
add
xchg
sbb
mov
inc
ss
mov
sub
cwtl
dec
in
stos
mov
adc
ljmp
divb
pop
call
repnz
inc
mov
imul
sub
ja
mov
mov
push
pop
imul
fmull
add
xchg
or
mov
outsl
jle
jo
add
les
fsubs
aaa
ret
int3
push
or
int3
mov
inc
loope
loope
jbe
movnti
push
hlt
cmp
sub
sbb
movsl
mov
lods
loop
xchg
lods
hlt
pushf
in
sub
jb
push
test
mov
in
add
hlt
aas
add
cli
cmp
cli
jp
lret
les
clc
add
adc
subl
inc
or
lock
sub
inc
mov
inc
and
jg
je
fnstsw
pop
ret
loope
movsl
jmp
adc
loope
push
ret
scas
decl
or
xchg
sti
add
jae
stos
imul
cmp
push
jno
ss
call
jnp
outsl
and
pop
sub
and
xchg
in
xchg
sub
orb
jg
or
cwtl
int
push
int
xchg
add
or
je
push
sbb
gs
push
test
cs
sub
nop
je
sar
pop
in
push
cmp
push
and
pop
add
scas
mov
add
pushf
pusha
sub
or
dec
lcall
fisubrs
lret
xor
out
dec
bound
mov
jne
xchg
icebp
bound
repz
push
lret
sahf
pop
push
cmp
test
insb
repnz
mov
mov
data16
xchg
mov
adc
int3
xor
sahf
and
les
arpl
mov
mov
dec
aaa
shlb
pop
push
mov
adc
movsb
push
or
pop
loop
or
test
mov
in
xchg
sbb
rcr
sbb
lock
dec
scas
push
mov
mov
cmp
std
imul
pop
dec
dec
test
fstpt
jle
aad
or
xchg
xchg
push
sti
in
rorb
pusha
jb
and
loop
mov
jbe
rcll
xchg
mov
outsl
and
dec
sti
mov
pop
push
inc
je
xchg
mov
push
rol
sub
pop
icebp
loopne
cltd
js
out
jge
push
shlb
adc
clc
lock
in
jg
add
shlb
inc
inc
je
cli
and
sub
mov
add
idivb
mov
pusha
jne
nop
cli
pop
ds
lahf
xlat
mov
sti
sub
daa
add
std
or
xor
push
pop
and
lcall
pushf
jo
outsl
and
mov
stos
dec
imul
add
xchg
loop
cwtl
aam
in
inc
ret
push
stos
push
in
outsb
ds
mov
xor
mov
hlt
out
shr
push
int3
adc
aaa
push
out
fs
pushw
adc
out
aam
and
mull
or
fisttpl
jp
xchg
into
inc
enter
loop
jmp
outsl
test
popf
adc
and
iret
jno
sub
loope
ficoml
test
cmc
stos
xchg
fs
repz
mov
sbb
fbld
sub
mov
aam
sbb
cltd
jecxz
in
jp
jb
pop
movb
rcrb
push
mov
or
not
push
loope
mov
fidivs
mov
jg
push
cmp
fnstsw
test
jb
inc
ds
test
pop
push
or
in
repnz
incl
mov
cmpsb
mov
mull
add
int
mov
inc
push
arpl
cmc
lcall
push
sub
or
out
inc
loope
rcll
push
imulb
clc
scas
add
or
add
gs
push
sbb
inc
stos
push
xchg
jmp
std
subb
outsb
movsb
movsl
cmp
outsl
pop
scas
jle
sub
dec
xchg
repz
jge
mov
cmp
mov
jg
test
fsubl
cmp
mov
mov
sub
fstl
popf
fisubl
pop
out
push
dec
shll
push
xchg
clc
incl
pop
pop
or
xchg
xlat
int
cmp
or
ljmp
cld
jl
lcall
les
aaa
push
lds
xchg
in
ljmp
les
jle
jno
loope
adc
and
mov
cmp
sbb
ret
out
mov
insl
sub
faddl
jo
call
dec
xchg
jae
mov
and
inc
lods
push
out
outsl
sub
pop
cs
nop
cmp
jmp
insb
xor
and
mov
loopne
push
mov
jp
out
pop
pushf
xor
xor
mov
inc
testl
xchg
mov
jl
dec
sbb
outsb
cmp
mov
or
clc
xchg
sbb
cli
mov
pushf
inc
sahf
jno
xor
out
andl
cwtl
out
sub
jp
cmp
cmpsb
out
imul
shrl
movl
sahf
decb
fwait
sub
push
dec
pop
pop
shll
shlb
clc
xchg
repz
lcall
sub
sub
and
les
pop
inc
jne
test
xchg
loopne
stos
sbb
xor
lcall
pushf
mov
pop
cli
xor
clc
sar
mov
push
subl
add
gs
cltd
dec
jbe
push
mov
movsl
hlt
adc
pop
imul
mov
cmp
push
out
loope
pushl
ds
jae
mov
test
andb
jbe
cmpsb
mov
dec
ds
sub
pop
aas
pop
pop
sub
scas
ficomps
add
rcrb
xorl
push
push
jae
adc
out
add
ret
add
test
push
incb
cli
cmp
scas
or
pusha
and
scas
mov
and
fnstsw
xor
call
dec
xchg
pop
stos
ja
pop
sub
pop
jns
dec
mov
lea
dec
xchg
sub
das
add
jp
xor
bound
clc
movsl
push
int3
adc
sub
mov
sub
fdiv
cltd
leave
cltd
clc
pop
xchg
test
mov
jg
mov
addr16
ret
mov
mov
mov
int
inc
xor
xor
ljmp
andl
push
mov
arpl
fimuls
mov
jge
sarb
ret
scas
pusha
cmpsl
sbbb
cltd
pop
ljmp
mov
repnz
outsb
cmp
dec
dec
insb
cmpsb
or
hlt
add
add
es
xor
mov
or
psrlw
add
xor
xchg
leave
cmp
add
sbb
sub
mov
or
adc
pop
fcoms
push
dec
lret
sbb
loope
loopne
test
in
jge
and
insb
adc
js
fists
cmpb
out
lcall
push
mov
fmuls
test
orb
clc
jo
dec
rcl
jg
icebp
pop
lcall
pop
pop
jno
jae
inc
rcpps
push
aam
std
ds
xchg
pop
push
jnp
aaa
outsb
mov
sti
repz
addr16
rolb
lock
pop
stos
mov
ljmp
mov
jmp
sub
mov
les
cmp
test
add
jo
inc
bound
inc
cli
mov
jmp
mov
pushf
pusha
push
cmc
xchg
xchg
ljmp
pusha
loopne
rorb
inc
sub
mov
sbb
movsl
aaa
sbb
std
jmp
cmp
push
sbb
sub
add
add
fdiv
decl
mov
add
xchg
cltd
xchg
sub
sbb
jg
call
jo
push
and
dec
popa
or
sub
addr16
stos
or
fidivs
rcrl
jl
adc
fistps
and
xor
sti
cli
aad
xchg
nop
mov
xchg
lea
and
in
call
push
xchg
scas
inc
mov
mov
cmpsl
adc
adc
add
push
jge
and
mov
lods
es
pop
hlt
adc
incl
clc
movsl
pop
cld
pusha
in
ja
push
pop
mov
insb
es
subl
push
int3
push
or
aaa
add
or
jmp
jg
aad
pusha
pop
pop
inc
das
aaa
xchg
xor
cmpsl
adc
subb
adc
mov
mov
pop
mov
inc
in
fcoms
and
repnz
loopne
jno
dec
lds
jg
mov
xchg
push
cmp
xchg
insl
ret
fstl
popf
mov
mov
repnz
and
outsb
pop
popa
insb
das
mov
imul
and
leave
sbb
or
cmp
mov
es
and
ljmp
pop
adc
icebp
decl
addr16
enter
ds
aad
jp
push
inc
sarb
icebp
or
sti
xchg
int
incb
mov
lahf
mov
cmpsb
rcrl
fimull
cmp
subb
mov
jmp
push
add
rol
pushf
jmp
xor
or
andb
aam
jge
adc
add
dec
call
loopne
inc
fisttps
jno
in
sbb
aad
push
sbbb
sarl
dec
xchg
lock
sti
movsb
shll
sbb
enter
or
cli
sub
push
cmpsl
das
add
sar
cmp
adc
iret
cmp
ss
mov
dec
sub
insl
loopne
jecxz
hlt
inc
scas
fiaddl
add
adc
sti
repnz
mov
mov
test
jne
fdivl
es
mov
into
fsubl
jbe
adc
mov
outsl
movsl
mov
aas
loop
dec
pop
inc
sbbl
in
dec
ljmp
arpl
jge
nop
fsubrs
xorb
shrl
mov
test
mov
sub
je
clc
in
fisttps
std
dec
rclb
dec
cmpsl
push
xor
les
sub
push
or
lods
test
popa
int3
xchg
cmp
pop
adc
add
jecxz,pn
js
cmpsl
lods
ret
dec
mov
mov
jp
mov
test
andl
test
pushf
mov
outsb
add
insb
inc
push
xchg
and
fucomip
sbb
shrb
sbb
das
mov
ror
pop
adc
mov
aam
or
dec
mov
push
fisubl
and
adc
push
jp
cmp
mov
pop
push
shr
sbb
jge
jns
out
insl
jge
cmpsb
sbbl
and
xlat
test
push
mov
mov
sarb
repnz
pushf
iret
mov
pusha
pop
mov
stc
pop
fnsave
in
mov
xorb
lock
pop
cwtl
ficompl
cld
sti
jns
or
push
bound
test
sub
test
xor
xchg
cs
add
decl
pop
nop
loope
das
push
jp
aaa
test
cld
push
loopne
pop
into
loope
pop
mov
addr16
mov
scas
xchg
mov
fs
push
cltd
mov
ljmp
sbb
test
loopne
loop
inc
scas
fwait
stc
lahf
pop
pop
sbb
push
aam
les
sbb
ljmp
sub
adc
dec
loop
lahf
cwtl
aam
jecxz
call
push
pop
mov
mov
xor
mov
lret
in
sub
or
js
or
mov
mov
inc
mov
nop
ret
cmp
shlb
js
lcall
into
fs
xchg
sub
xchg
jg
mov
push
nop
push
mov
nop
or
test
fcmovu
push
sub
out
clc
int
lret
sub
stos
jl
cmpsl
sbb
jnp
jne
mov
outsl
add
push
inc
bound
jg
jno
push
repz
mov
out
gs
adcb
mov
fdiv
pop
decl
mov
pop
sub
pop
js
es
clc
pop
sarb
and
mov
xor
mov
adc
push
sbbb
fwait
outsl
aad
push
aaa
fwait
xor
scas
push
push
inc
adc
insl
inc
mov
je
std
das
mov
repz
bound
lahf
adc
clc
stos
sub
test
lods
xchg
ss
clc
inc
ds
fimuls
add
xor
mov
dec
mov
sahf
daa
push
sti
in
ror
and
incl
adc
outsb
loop
xchg
cmp
and
mov
enter
sbb
mov
jle
cld
sbb
std
fbstp
cld
out
lcall
jns
or
add
and
fimuls
aam
js
sbb
bound
les
test
insb
dec
sub
leave
and
sbb
mov
jmp
cmp
fistl
push
lcall
or
scas
sub
add
test
mov
inc
out
or
in
cmp
inc
adc
pop
inc
sub
adc
out
into
ret
add
push
sub
ja
push
push
cmp
mov
adc
movsb
push
dec
scas
jle
inc
add
clc
adc
inc
cmp
mov
dec
dec
sbb
push
lcall
inc
sbb
inc
cmp
mov
sub
addb
pushl
ja
mov
fidivs
cmp
aad
hlt
test
push
clc
mov
add
scas
addb
orb
pop
jae
js
add
cmp
or
jl
add
fdiv
xchg
pop
hlt
cmp
and
push
sbb
inc
lods
pop
adc
shl
enter
add
jg
jg
xor
repz
and
mov
jo
adc
inc
fwait
out
js
push
mov
shll
out
inc
cmp
hlt
andl
decl
sub
and
sub
sbb
mov
dec
test
adc
adc
or
pop
xchg
aaa
aas
add
pop
addr16
push
add
adc
sub
stos
lock
push
ss
repnz
hlt
out
lds
pop
cld
cmp
pusha
addr16
ret
pushf
mov
cwtl
sarl
xchg
ss
mov
scas
mov
scas
and
dec
mov
mov
mov
insl
add
dec
dec
push
insb
sbb
xor
popa
dec
bound
in
push
mov
pop
cmc
dec
lock
push
sahf
jb
and
popa
lcall
and
scas
and
jecxz
iret
adc
ja
mov
test
sbb
repz
addb
lcall
adc
jg
pop
adc
aas
inc
test
sbb
lcall
push
rol
add
aad
push
sub
push
sti
out
inc
in
mov
pushl
mov
test
mov
jmp
push
in
lcall
cs
push
fistl
xchg
out
cmpsb
in
das
xchg
or
call
shll
mov
jnp
cmp
mov
add
dec
ss
mov
sbb
fildl
add
cs
sub
push
push
das
sahf
xchg
mov
pop
sbb
ficomps
add
or
add
sbb
add
dec
sbb
aam
rorb
push
sbb
adc
call
aad
scas
mov
xchg
xchg
nop
mov
lea
mov
jns
xchg
sub
cmc
aam
pop
enter
jp
fistps
mov
push
push
sub
test
pop
inc
pop
fwait
push
fldl
call
push
stos
call
gs
pshufw
xchg
out
push
inc
mov
cmpsb
xor
xor
insb
or
xchg
jle
sbb
xlat
addr16
aam
loop
jp
aas
sub
ss
adc
dec
cmp
subb
fildll
stos
adcl
loopne
jbe
fmull
or
and
scas
cli
cmp
and
jmp
popf
mov
test
jb
inc
xchg
imul
int3
mov
in
pop
jl
push
shrl
fs
test
and
out
ss
pop
lods
xchg
mov
out
xchg
and
cs
cmc
ja
ljmp
pop
fstpt
out
mov
add
bound
jmp
lret
push
ret
cli
fwait
inc
cltd
xchg
or
mov
shrb
cli
mov
add
test
sub
jg
insb
fbstp
ljmp
and
int
icebp
lods
xor
xchg
xchg
adc
mov
mov
insb
adc
push
inc
adc
jmp
in
dec
mov
ret
fisttpll
inc
pop
clc
cmovs
and
inc
imul
sub
andl
mov
adc
test
jae
arpl
add
mov
mov
sub
add
or
andb
fildll
jmp
inc
std
cmc
in
xchg
cmpsb
dec
cmp
fmuls
ds
push
mov
adc
push
les
adc
sbb
test
ret
in
scas
pushf
mov
and
xlat
shll
jge
adc
inc
push
jmp
fildl
jns
lock
stos
insb
xchg
sub
pop
pop
cmp
xchg
enter
cmp
pop
xchg
and
cwtl
insl
mov
rcl
sub
sub
sar
outsl
and
popf
xorl
mov
cwtl
sbb
repnz
pusha
lea
loopne
jb
push
xor
add
js
fs
js
pushf
into
dec
fbstp
inc
insb
add
fnstsw
fwait
stos
or
aad
cmp
js
test
int3
add
rcrb
inc
cli
mov
hlt
scas
cli
test
sub
rcr
mov
mov
out
rclb
sub
shlb
adc
rcrl
push
jo
loope
or
lcall
cld
call
lret
cmpsl
call
dec
cmpsl
mov
adc
in
clc
mov
mov
int3
sub
sbb
mov
push
add
pusha
icebp
sbb
dec
fistl
push
fildl
sub
push
xchg
jo
xchg
std
adc
cli
mov
pusha
int
js
shrl
enter
lcall
sahf
test
mov
add
decl
adc
repnz
jo
jmp
nop
ror
dec
in
sbb
out
or
adc
xchg
xor
fildll
lods
pop
into
add
out
ss
addb
mov
cmpsb
decl
lock
ja
xchg
mov
std
cli
mov
out
jmp
jo
add
add
or
xchg
inc
or
and
jp
mov
mov
movl
push
push
sub
and
cli
icebp
dec
movsb
out
and
xor
gs
out
jno
repz
mov
mov
adc
pop
mov
pminsw
inc
sbb
push
notb
bound
push
push
add
sahf
inc
jge
mov
data16
orb
ja
cmc
jg
adc
dec
mov
or
rcrb
or
hlt
pop
repnz
cmp
cltd
lods
sub
push
dec
mov
push
or
push
out
mov
and
sub
les
in
test
or
test
imul
push
push
les
xor
pop
sbb
loop
xlat
inc
mov
incl
int
in
mov
xor
pop
stos
push
popf
ret
fistpll
add
mov
icebp
cli
nop
add
add
arpl
pop
pushf
sub
or
movsl
jg
adc
jbe
popa
stos
push
sub
sub
cmp
pop
adc
push
and
push
stos
std
fistpll
xor
sub
js
in
pop
sub
stc
xor
notb
js
rep
push
std
pop
adc
pop
pop
aam
dec
imul
xchg
test
sar
adc
rclb
cmp
ljmp
push
fdivrl
push
insb
ret
pop
xor
imul
dec
jno
call
scas
in
pop
addr16
mov
shrb
lret
mov
push
xor
add
aas
jbe
jge
dec
aaa
sbb
shlb
inc
adc
dec
rcl
cmp
push
inc
ret
ret
mov
push
dec
add
or
jo
ss
jns
cwtl
jb
mov
jae
jmp
test
add
movsb
fwait
cmp
test
pop
add
das
push
push
push
push
aad
data16
cli
push
mov
pop
xlat
xlat
adc
out
test
xchg
stos
xchg
mov
andb
mov
pusha
call
mov
sub
add
hlt
add
ds
inc
push
pop
add
sbb
mov
test
mov
pop
cmpsl
div
scas
xchg
add
cli
pop
lcall
adc
sbb
iret
lock
aaa
outsb
pop
sub
test
test
dec
orl
out
int
stos
ret
adc
dec
andb
hlt
sub
les
jecxz
mov
std
shll
aas
cmpl
fadds
mov
push
mov
inc
pop
test
fiadds
mov
mov
push
pop
lock
xchg
enter
sbb
lods
out
jle
xchg
andl
xor
aam
in
xchg
lret
add
fisttpll
push
sbb
cmpb
and
mov
fisttpl
ret
add
mov
mov
push
mov
sub
mov
xchg
daa
add
pop
mov
nop
out
cld
or
push
xlat
pusha
enter
mov
gs
pop
icebp
sub
dec
push
mov
jecxz
inc
and
test
push
fcompl
les
inc
adcb
lcall
or
inc
sub
inc
mov
cmp
ss
jb
fwait
mov
mov
pop
adc
lcall
or
cmp
jecxz
sti
mov
sub
pop
inc
jnp
sub
in
js
bound
xchg
mov
mov
mov
xor
daa
cmp
in
push
xchg
sub
je
mov
mov
fisubl
xorl
mov
mov
cmp
mov
stos
adc
stc
push
movsl
jl
call
fdivl
repz
mov
rorl
pop
inc
cwtl
jnp
cs
mov
aaa
sub
inc
xor
pop
xchg
mov
mov
aam
lret
cmp
inc
xlat
xor
mov
mov
adc
inc
pushl
fsts
lock
movsb
andb
mov
mov
ss
jne
cltd
loopne
fldl
push
dec
sub
icebp
sbb
lods
fcomip
or
cs
pop
or
mov
mov
sbbl
push
mov
adc
cwtl
xchg
lahf
xchg
mov
xor
lcall
es
jg
data16
mov
inc
and
jecxz
in
add
inc
shrb
clc
cmpsl
adc
lods
les
cmc
xor
and
loop
mov
hlt
aaa
orb
movl
pop
push
addr16
loop
jb
rolb
loope
cs
ret
pop
pop
sbb
lcall
lcall
push
jb
pop
aam
ret
cmc
out
add
pop
arpl
mov
sbb
sbb
hlt
out
sbbb
inc
cmp
dec
lret
sbb
mov
adc
inc
stos
ds
mov
and
sbb
loopne
xor
xchg
push
mov
iret
hlt
add
test
loope
xchg
insb
push
jb
lock
lret
repz
mov
adc
cmp
inc
mov
mov
pop
ret
out
or
pop
cli
cmp
outsl
xor
or
mov
lods
ja
add
or
bnd
mov
cmp
mov
cmpsb
inc
movsb
inc
call
cld
aaa
jmp
and
std
mov
call
adc
pusha
add
addl
or
mov
std
or
pop
sahf
cltd
mov
icebp
dec
mov
push
inc
sti
jecxz
pop
fnsave
mov
pop
fisttps
data16
jecxz
and
dec
and
movsl
and
jnp
fs
stos
enter
arpl
pop
jge
je
out
je
or
jo
gs
jnp
jmp
pop
sbb
push
pusha
rcll
cmp
clc
or
xlat
movsb
dec
hlt
mov
pop
mov
sbb
mov
sbb
mov
mov
xorb
jg
rorl
mov
pushl
sub
push
addl
xor
pop
dec
test
ljmp
xchg
mov
jmp
fldl
dec
loope
fbstp
sbb
push
lods
pop
scas
stc
cmpsl
in
xor
inc
pop
jmp
pop
pop
shll
mov
dec
loope
das
or
je
jae
push
lock
fidivrs
pop
mov
dec
fs
pop
out
movsl
fidivrl
jnp
cmp
sub
int3
pop
daa
xchg
in
jae
imul
rorb
xchg
push
inc
aas
jp
xor
clc
lea
inc
testb
movsb
nop
pusha
push
inc
mov
jl
push
sub
cwtl
cmpsb
push
stos
mov
call
stos
stos
cmp
pop
mov
bound
cmp
push
fcomi
mov
outsb
sahf
out
out
or
xor
jg
dec
call
fistpll
xor
pop
or
mov
sbb
imul
scas
push
hlt
mov
ja
loopne
jns
cmp
or
sbb
dec
jns
lods
loop
sbb
insb
adc
out
add
decb
sbb
iret
sarl
mov
lcall
popa
loop
loop
movsl
mov
fbld
and
pop
jl
or
std
jg
mov
stos
sub
cli
lea
lock
push
imul
mov
in
inc
clc
jmp
sub
loopne
xor
jg
pushf
mov
jmp
ds
js
push
dec
rolb
mov
adc
js
ss
inc
loop
add
clc
push
or
subb
outsb
lcall
cmp
push
movb
dec
frstor
daa
ds
add
repnz
inc
out
pop
mov
pop
outsl
adc
dec
test
fildll
push
shrl
cmp
add
ret
es
test
push
arpl
sahf
cltd
int3
push
aas
inc
aaa
test
ljmp
incl
fistps
or
and
fsubrs
loop
arpl
fadd
int3
movsb
cli
pop
adc
lods
xor
jp
mov
sti
das
xchg
push
xlat
div
jecxz
aam
mov
bound
xor
jns
in
incl
and
jo
iret
jbe
inc
out
imul
incl
jns
sub
test
jg
test
movsb
add
hlt
xchg
ljmp
in
decl
into
ja
adc
cmp
pop
movsb
jle
aad
les
pop
shll
mov
test
stos
out
xor
jne
ss
into
aaa
mov
andb
inc
xchg
adc
clc
dec
push
jmp
push
mov
shrb
jae
add
rclb
mov
int3
push
cld
decl
fbld
jle
sbb
imulb
sbb
fcmovu
out
sar
cmpb
clc
lds
and
jb
mov
or
scas
push
inc
loope
push
cmp
pushl
mulb
out
aam
cmp
mov
xor
psllw
sub
lods
mov
out
adc
fimuls
lock
inc
push
popf
xchg
decl
daa
lods
xchg
push
mov
stos
sbb
flds
mov
pop
jbe
sti
jle
andb
cld
jmp
mov
push
jmp
xor
ret
loopne
pminub
cld
add
loop
sahf
call
cli
sub
sub
mov
test
outsl
lret
in
fistps
into
out
mov
adcb
mov
xchg
in
aad
nop
orb
orl
outsb
or
lock
lds
jl
xlat
jmp
xlat
push
pop
cwtl
inc
aam
sub
xchg
sbb
cwtl
clc
aaa
inc
inc
and
addb
or
inc
add
jle
xchg
pop
push
test
and
ss
jl
pusha
xchg
adc
sbb
jmp
pop
jp
es
pop
loopne
popa
mov
push
gs
sbb
cli
pop
jo
fwait
xor
imul
sub
movsb
in
shrl
stos
mov
cli
nop
cmp
test
subl
xchg
or
mov
shlb
call
shrb
pop
jle
push
ljmp
cmpsb
lahf
aam
or
sub
jns
stos
push
ss
decb
adc
es
movsb
cmc
subb
sbb
mov
or
inc
std
das
lods
das
popf
repz
jo
insb
dec
frstor
ljmp
sti
ljmp
jae
js
xorb
sbb
pop
test
pop
inc
sahf
or
ljmp
xchg
stos
arpl
add
xor
stos
push
hlt
xchg
mov
xor
enter
pop
add
xchg
inc
push
jl
jl
lret
shlb
jge
jecxz
pop
divb
pop
cwtl
cwtl
clc
push
jmp
dec
or
aas
in
mov
or
mov
and
pop
and
das
push
jle
std
mov
cmpsb
jl
pop
aad
adc
pushf
out
mov
mov
lds
xchg
es
jge
add
xchg
lods
cmp
jnp
xor
sub
outsb
jns
stos
rcr
int
aaa
mov
js
cmc
aaa
push
scas
clc
push
enter
push
pop
adc
into
and
lcall
repz
into
pop
loopne
lret
pushl
dec
xchg
aad
mov
xlat
mov
test
pusha
ds
clc
cmp
scas
outsb
sub
ljmp
dec
adc
nop
std
ja
shll
mov
je
xlat
pop
mov
shrb
sarb
bound
mov
cli
scas
xor
scas
mov
cld
and
shrb
cld
push
cli
xchg
lahf
ds
lcall
adc
jg
movb
out
sub
push
es
adc
hlt
inc
fnsave
out
in
inc
mov
adc
or
inc
sub
andb
leave
ret
imul
stos
push
test
push
sbb
call
fwait
or
jg
insb
sbb
in
pop
xchg
les
movsb
int3
lock
shl
jmp
jns
pop
mov
inc
push
jle
add
push
adcb
push
xchg
xor
sub
jno
ffree
and
cs
rclb
std
sbb
std
mov
and
jp
mov
jle
hlt
cmp
add
jl
add
pop
cmp
cmpsb
shr
add
dec
leave
daa
dec
push
jl
mov
incl
dec
loop
loop
lea
or
insb
sbb
aad
push
xchg
lret
in
sbb
pop
pusha
fildll
push
into
std
cmp
adc
mov
fsubrs
push
shlb
sbb
mov
jmp
mov
push
sbb
clc
mov
mov
das
cli
lcall
enter
or
and
adc
add
icebp
pop
add
test
inc
mov
and
add
out
insb
shlb
mov
push
js
xor
icebp
push
dec
jg
ja
fstpt
jb
repz
add
scas
mov
lock
jle
mov
xchg
pop
pushf
jo
mov
jns
mov
and
ds
jo
jmp
loope
adc
flds
lods
dec
sti
and
mov
inc
imul
jg
inc
ja
jge
negb
lods
aad
inc
cmp
decl
dec
lcall
repz
and
hlt
enter
adc
pop
push
mov
lcall
orb
addr16
xor
inc
loope
in
aaa
xor
push
mov
inc
add
sub
and
mov
dec
mov
xchg
sahf
cmpsb
fstpt
jge
fisttpll
dec
fs
adc
in
mov
cli
mov
in
loope
mov
loop
add
in
insb
xchg
lcall
sbb
int3
mov
or
lods
mov
iret
push
or
inc
pop
add
dec
inc
pop
cld
cmp
daa
cmp
dec
xor
jns
fadds
int
mov
sub
cmc
lret
inc
stos
fsubp
inc
jle
hlt
adcb
pop
or
or
jle
sbb
and
ljmp
dec
adc
and
cmp
jo
div
mov
ret
shrb
and
out
lock
xorb
sub
mov
push
xlat
fst
xchg
sbb
adc
adc
mov
fwait
stos
mov
les
clc
jecxz
sub
mov
inc
xor
push
faddl
jne
je
lods
mov
sub
mov
inc
shrl
sub
xchg
inc
pop
lock
test
outsl
or
lahf
mov
mov
mov
fists
push
push
cmc
jge
xor
sti
mov
js
cmp
fsubs
outsb
mov
inc
sbb
enter
push
mov
cld
es
and
add
jge
daa
outsl
clc
or
xor
fstps
pop
sahf
jp
lret
mov
daa
daa
sbb
outsl
xchg
mov
dec
push
push
dec
sub
jo
inc
mov
ret
and
lods
testb
adc
outsl
lock
adc
dec
xorl
add
adc
push
sub
or
fisttpl
fmuls
shrl
adc
insl
ljmp
pop
insl
stc
jbe
cli
ret
sbb
daa
xor
lods
jae
dec
cmp
movsl
lods
sub
mov
fcoml
loopne
mov
sbb
movsl
push
push
cmpsb
push
xchg
rorb
mov
sahf
push
adc
pop
dec
mov
add
sub
or
pushf
rorl
scas
jmp
mov
stc
cmp
imul
hlt
push
xchg
sti
incl
mov
cmp
jmp
int
and
xchg
add
sbb
cs
orl
rorl
movsl
popa
mov
mov
fcmove
and
std
aaa
out
adc
in
cmp
cmpb
lock
popf
mov
dec
stos
decl
inc
jns
popa
mov
mov
add
xor
es
sbb
fs
push
sub
cmp
imull
cmp
rolb
pop
xchg
push
xor
lock
cld
cmp
push
subb
out
mul
push
out
add
inc
mov
dec
cld
dec
inc
xchg
push
in
movlps
xchg
lock
add
fcoml
and
adc
inc
testb
ljmp
push
jecxz
fmul
pop
sahf
ljmp
mov
mov
dec
push
add
adc
push
xchg
lret
mov
and
ret
push
mov
and
icebp
rcl
test
or
rep
cmp
loopne
out
hlt
decl
mov
pop
fisttpl
and
jae
faddl
call
pop
and
sbb
sti
push
xorl
pushl
and
outsb
add
in
aam
outsl
cli
decl
xor
fnstcw
cld
fsub
ret
sub
shll
cmp
sar
sbb
dec
jb
push
mov
inc
mov
loope
movsl
test
insb
pushf
pop
dec
lock
push
add
imul
adc
dec
mov
sub
outsl
in
xor
jb
fsubs
lds
roll
scas
std
gs
inc
add
jp
loop
test
jge
call
cld
pop
xor
mov
aad
push
pusha
sbb
push
pop
daa
adc
xchg
es
fcomip
mov
pop
shr
and
xchg
jmp
jne
push
mov
sbb
push
ret
adc
cltd
aam
repz
mov
fcomip
mov
jo
into
cmpsb
xor
add
loop
cmpsb
jp
push
sahf
leave
pop
xor
push
fiadds
dec
mov
sarb
mov
gs
stos
imul
sbb
mov
or
and
xchg
or
sbb
inc
mov
mov
mov
lahf
bound
jb
cmp
push
push
push
inc
testl
test
loopne
mov
shrb
mov
ljmp
pushf
es
jge
xchg
jne
jb
push
sbb
dec
js
or
jg
push
cmp
ffreep
xor
sbbb
push
and
jo
inc
mov
mov
stc
das
int3
and
sub
call
add
jecxz
add
jb
pop
jb
mov
pop
cltd
and
ficomps
xor
push
and
call
icebp
andb
or
add
aam
mov
test
adc
loope
pusha
or
hlt
cmpsb
sbb
sbb
xor
push
mov
add
out
or
mov
cmp
mov
aaa
push
loope
add
test
test
add
cmpl
pop
clc
pop
or
and
mov
sbb
dec
xchg
inc
sbb
cmpsl
inc
mov
mov
sub
lcall
adc
test
add
arpl
dec
add
jp
fs
cmc
pushl
lods
cltd
pusha
clc
xchg
sbb
inc
data16
add
scas
fsts
scas
ss
sti
sub
inc
dec
test
sti
lret
icebp
lock
incl
mov
add
push
cmc
xchg
adc
pushf
lahf
sar
push
mov
imulb
cld
seto
push
out
push
sti
int
aam
sar
repnz
pop
sub
je
cmpsl
scas
sbb
add
test
jg
test
sbb
pop
dec
xchg
xor
jl
jmp
pop
or
sbb
daa
sub
jnp
ror
mov
or
data16
popa
dec
mov
cld
repnz
mov
mov
sar
mov
lea
or
push
lods
lock
add
lcall
aad
int
aas
adc
xlat
enter
pop
add
popf
fcos
sbb
repnz
sbb
jg
jcxz
add
xorl
jbe
ja
testl
lea
sbb
repnz
and
lcall
lods
cli
sub
sbb
sbb
stos
ret
jns
rorl
fwait
loopne
lock
lock
aas
pop
loop
mov
pop
ficompl
and
test
std
inc
aam
arpl
xchg
xor
cmc
rcrl
xchg
and
dec
and
aam
cli
dec
jmp
add
sbb
into
test
sbb
shll
std
xor
movsb
loop
jmp
cmpsl
pop
jb
mov
addr16
dec
add
push
ja
dec
adc
sbb
out
in
push
mov
pop
push
les
mov
xor
jbe
sub
jg
sub
jecxz
sbb
sahf
sub
mov
pushl
and
sbb
mov
xchg
mov
into
mov
and
push
fs
cltd
stos
push
js
call
pop
mov
bound
jb
cmpsb
adc
sbb
mov
dec
sbb
mov
add
and
adcb
repnz
sbb
cli
das
ds
test
inc
push
push
add
movsl
call
in
iret
popf
lds
sub
or
xchg
in
adc
sbb
add
outsb
iret
aas
fwait
cmpl
xchg
std
sub
gs
fimull
lcall
mov
icebp
popa
or
add
lock
dec
mulb
mov
aas
pusha
cli
stc
xchg
in
lds
out
jmp
mov
dec
pop
mov
mov
data16
inc
push
inc
and
lods
mov
fisubl
jle
outsl
and
push
incb
mov
std
adc
roll
lock
jle
adc
push
pop
cwtl
rcrl
dec
and
out
lret
pop
sarb
cli
rcr
lcall
mov
push
mov
lahf
xchg
push
push
repz
bound
lcall
out
in
add
mov
stos
ja
mul
mov
je
icebp
inc
shrb
jbe
pop
inc
shlb
pop
mov
xor
or
mov
inc
add
xchg
lcall
sti
int
or
add
fs
lret
adc
sbbl
xor
repz
mov
xchg
xchg
xor
cmp
and
int3
inc
insb
sbb
adcl
lahf
ret
push
pop
shl
xchg
ljmp
pushl
cmp
divb
cmc
loopne
jecxz
add
scas
xchg
repnz
pop
dec
faddl
jnp
mov
xchg
out
scas
and
fwait
sub
or
xor
mov
loopne
sbb
sbb
clc
rorb
test
push
and
aaa
cwtl
in
jns
inc
mov
pushf
mov
push
stc
and
clc
das
push
jb
nop
movsl
add
or
in
jmp
sbb
lea
push
xchg
lock
ret
sub
stos
sbb
mov
in
ret
sub
xchg
dec
das
adc
das
xchg
sbb
push
fisttps
adc
repnz
add
cltd
xchg
lock
rorb
and
xchg
rorl
faddl
pop
sub
fsubs
outsl
jle
call
adcb
mov
mov
inc
out
pop
xchg
ss
cmp
cld
int
and
xorl
int3
test
sbb
add
jl
mov
pusha
mov
jmp
lods
jle
scas
dec
shrb
insl
push
jmp
outsb
pushf
sahf
mov
mov
xchg
adcb
adc
addb
mov
lcall
mov
imul
data16
daa
mov
das
mov
lock
addb
mov
cmc
decl
lcall
cli
cmp
ss
push
pop
stos
mov
out
xchg
loope
js
std
mov
sbb
aam
jg
and
imul
pop
pop
sbb
xchg
nop
ds
xchg
mov
out
push
pop
inc
cld
push
mov
mov
sub
push
jb
mov
jb
xor
dec
add
insl
imul
sub
lea
scas
ds
mov
iret
lcall
scas
test
and
imul
lahf
lahf
ja
loope
fnstsw
mov
mov
xor
sub
and
cld
into
mov
out
aaa
mov
inc
adc
mov
es
add
dec
or
pop
pop
movsl
jo
nop
xor
push
add
call
sahf
inc
xchg
dec
push
inc
popf
jne
mov
stos
push
call
sub
inc
out
sbb
pusha
cmpsl
pop
add
pop
add
shlb
rcrb
jle
mov
adc
scas
xchg
lcall
ljmp
sub
inc
fdivs
loop
dec
dec
mov
sbb
sbb
data16
rcll
adc
js
out
ss
jo
jb
imul
and
ret
push
pop
xorl
hlt
lcall
std
mov
cwtl
dec
mov
outsl
mov
push
aad
mov
insb
mov
notb
daa
pop
outsl
inc
mov
rclb
inc
inc
jp
lock
ljmp
mov
decb
sbb
and
xorb
add
pop
cli
xchg
outsb
arpl
rep
mov
pop
ljmp
sbb
je
cld
pop
into
mov
decl
je
dec
cmp
imul
xchg
std
cmp
loope
add
dec
shlb
cs
das
shlb
inc
mov
xor
xchg
push
push
mov
pop
cmc
adc
add
jns
push
cmpsb
push
cmc
jmp
pop
stos
notb
icebp
push
in
mov
icebp
jle
adc
aam
jl
xchg
and
bound
sub
sub
xor
sbb
add
push
test
lods
cmpsb
sub
or
out
clc
aad
fmul
or
mov
lods
jb
jmp
and
xchg
pop
int3
mov
add
jg
jae
xchg
sbb
insl
in
int
aas
dec
dec
push
repz
test
fldcw
push
sub
sub
lahf
and
and
xor
out
jp
mov
mov
mov
fisubrl
stos
dec
sahf
adc
cmp
lods
jle
mov
mov
add
imul
and
mov
scas
ffreep
cmp
das
add
in
or
inc
fnstcw
std
pop
push
add
ljmp
es
mov
and
jmp
cld
mov
xor
lret
cld
shr
out
shll
ljmp
lock
xchg
xor
pop
inc
fldcw
and
cmc
sub
fiadds
mov
rorl
jbe
int3
push
or
inc
push
clc
cmpsb
mov
pushl
in
or
inc
and
loop
push
pop
xchg
test
cmpsb
jo
xrelease
mov
and
cli
push
decb
fnstcw
mov
and
or
sub
lea
mov
fldenv
test
mov
out
ss
movsb
out
jg
lods
sbbb
dec
add
mov
sub
mov
pause
dec
rcrb
into
xchg
pop
dec
jne
inc
test
fisttps
test
xor
stos
inc
lock
lods
xor
push
mov
clc
or
lods
out
sbb
mov
push
dec
cld
pushl
adc
inc
cmpsb
sub
push
clc
mov
adc
je
mov
inc
data16
xchg
test
ja
xchg
mov
lods
adcl
jbe
mov
jns
lret
mov
lds
iret
out
movsb
cmc
sub
rdmsr
int
cmp
scas
xor
clc
jl
out
call
incb
enter
idiv
push
add
out
push
mov
movsl
fcomip
ss
add
sarl
ss
into
sbb
add
int3
outsl
or
pop
outsb
fdivp
pop
pop
and
cmp
mov
aam
rolb
xchg
in
insl
mov
decl
sbb
gs
pop
in
outsl
mov
mov
mov
daa
test
mov
addr16
cmp
xchg
loop
jnp
adc
fidivs
cs
or
xchg
push
fwait
or
ret
pushl
cwtl
shl
in
clc
mov
jno
xchg
in
outsl
pop
lods
xchg
ret
mov
mov
scas
fs
sbbl
and
pusha
dec
cld
push
adc
xor
add
push
or
idiv
incl
jle
insl
in
push
clc
pusha
cwtl
sub
xchg
jmp
inc
pop
shlb
loop
mov
sbb
mov
inc
add
in
add
adc
pushl
add
and
nop
mov
stos
fildl
mov
or
aas
scas
test
cmp
jecxz
adc
in
jecxz
mov
clc
pop
cmp
nop
ss
mov
movsb
pop
inc
add
bound
adc
cmp
aam
das
mov
es
out
jecxz
imul
leave
adc
test
push
popl
sub
std
lcall
scas
mov
sub
mull
popa
iret
and
fiaddl
xchg
sbb
stos
inc
jge
lret
cmpb
xor
dec
cld
lods
and
movsl
xor
jae
clc
sti
xchg
or
enter
adc
imul
fnsave
jl
sub
inc
ret
mov
lods
cli
mov
cltd
xor
pop
or
or
sub
mov
dec
lcall
pusha
mov
mov
inc
popa
add
adc
decl
inc
xchg
imul
jne
dec
jp
mov
xchg
pushf
and
mov
ds
lahf
decl
lret
in
shll
xchg
fwait
jmp
dec
mov
or
xor
aad
mov
push
pop
fcomip
mov
std
push
xlat
lahf
je
and
orb
push
push
push
int3
fdivs
push
das
mov
sbb
stos
scas
pop
test
aaa
xchg
inc
inc
mov
es
push
enter
test
ljmp
jecxz
add
cld
pop
call
or
cmp
outsl
icebp
cmpsb
mov
xchg
jmp
push
jno
aam
xchg
mov
or
enter
cli
lock
add
dec
pop
mov
nop
mov
mov
sub
mov
das
mov
decl
mov
or
ss
push
adc
rcl
pop
xor
pop
or
icebp
and
cld
sbb
outsb
cmp
fistpll
aaa
js
sbb
inc
neg
xor
xchg
mov
pop
adc
and
fwait
jbe
and
xor
lahf
decl
out
bound
mov
arpl
xchg
mov
mov
add
fmuls
pop
sbb
int3
inc
sub
out
out
int
add
es
shll
es
inc
sub
insb
jbe
xchg
loopne
adcb
mov
jne
cmpl
inc
ror
dec
out
adc
or
xor
jl,pt
scas
and
mov
dec
mov
adc
inc
mov
fnstsw
and
fs
mov
incl
popf
ljmp
repnz
mov
out
push
jo
adc
pop
imul
mov
popl
jecxz
fisubrl
and
or
enter
add
test
lods
push
incl
mov
movsb
pop
stos
daa
insb
mov
add
jbe
arpl
mov
adc
pusha
xchg
insl
stos
mov
cmp
sub
jp
test
mov
mov
test
push
inc
fldl
xor
dec
test
fdiv
decl
cmp
sti
lahf
mov
fisubl
jbe
neg
in
imul
cmp
ret
mov
sub
std
and
jae
or
sti
jmp
gs
jns
aad
out
inc
faddl
dec
fisubrl
mov
call
les
jmp
out
sahf
adc
push
sbb
cmp
stos
call
repz
repz
jmp
shl
jnp
pop
cmp
push
xchg
out
sub
in
dec
sbb
jmp
push
jle
sub
mov
pusha
and
push
ret
andl
pusha
orb
jl
fwait
jp
pusha
ds
je
mov
fnstenv
sbb
pop
push
addb
jne
cltd
push
outsl
scas
add
out
mov
or
inc
xchg
movsb
cmp
mov
out
popa
xchg
in
mov
ljmp
sub
mov
xor
xor
js
push
cld
inc
nop
push
push
dec
std
popa
push
or
mov
lock
push
add
mov
inc
and
icebp
or
mov
ljmp
or
lret
adc
xor
test
adc
pusha
fistps
dec
enter
pop
jl
xlat
cmp
xor
add
adc
lds
scas
inc
sbb
pop
adc
enter
mov
mov
jg
leave
add
iret
pop
out
mov
or
aas
out
push
xchg
mov
pop
movsb
push
jno
hlt
repnz
movsl
push
xor
add
pop
cli
jle
mov
sarb
dec
mov
mov
adc
mov
sti
decb
mov
test
jo
sub
push
cs
mov
cmpsl
cmp
insb
ds
sbb
clc
sub
jo
mov
mov
pop
pop
xor
pop
outsb
adc
and
xor
cld
loop
mov
rcll
and
clc
mov
fidivs
xchg
insb
cld
pop
pop
add
out
and
imul
xchg
fcmovbe
sbb
scas
cmpsb
movsb
nop
push
gs
pop
es
in
or
add
out
mov
push
add
jno
xor
decl
lret
sub
lock
fcoms
jl
nop
or
cmpl
jg
adc
pop
push
mov
cmp
adc
mov
cli
or
push
fisubl
add
loope
loopne
or
popa
jb
xor
insb
out
adc
mov
dec
fwait
xor
xlat
mov
enter
lods
push
dec
add
ficompl
inc
mov
mov
or
cwtl
xchg
icebp
decl
inc
fistpll
add
in
push
pop
dec
push
loop,pn
mov
call
pop
js
jle
loopne
and
pusha
add
and
jge
xchg
decl
jp
test
int
xchg
mov
test
xor
jnp
inc
or
xor
and
ljmp
inc
cld
push
fsubs
mov
enter
icebp
xchg
xchg
push
mov
sbb
mov
out
je
adcb
mov
jle
daa
out
and
mov
inc
cmp
mov
pop
inc
pop
repz
add
jg
enter
and
clc
or
in
xor
pusha
loopne
insl
pop
push
repz
inc
inc
fistl
and
mov
cli
fbstp
adcl
in
add
adc
mov
adc
fdivrl
mov
adc
out
jge
dec
jle
hlt
mov
filds
sar
jnp
arpl
jno
aas
push
mov
sbb
call
loope
jbe
or
sbb
mov
faddp
arpl
sub
or
loop
subb
iret
imul
shrl
dec
mulb
or
sti
pop
pop
arpl
xor
push
ljmp
cmc
ljmp
pop
pop
repnz
jno
out
js
pop
pop
push
pop
fisttps
movsl
add
clc
out
roll
pushl
jge
ljmp
adc
sub
pop
mov
jmp
int3
push
xor
hlt
fadds
scas
pop
jle
scas
scas
or
push
push
inc
mov
cld
dec
jo
mov
fwait
pop
push
sbb
jnp
pop
out
mov
inc
sbb
rclb
pop
icebp
sbb
dec
push
pop
je
mov
flds
pop
add
push
addl
mov
push
jnp
aaa
call
adc
call
enter
gs
rorl
push
sub
fwait
push
sub
jmp
into
enter
xchg
gs
and
fucomi
xchg
ja
and
xchg
mov
mov
lock
lret
push
fnstsw
add
xchg
leave
sbb
lcall
jae
test
imul
cld
jle
in
mov
add
testb
pop
add
clc
mov
jle
lds
push
cmpsl
sti
push
test
push
cld
into
inc
mov
pop
incl
mov
sbb
cltd
mov
xlat
int
pop
add
push
mov
js
ja
imul
mov
icebp
jl
mov
cmc
js
mov
mov
xorl
sarb
ljmp
js
dec
push
inc
jo
add
add
add
les
and
inc
push
xchg
fwait
dec
add
sub
xchg
call
outsl
scas
dec
jo
or
out
dec
movsl
outsl
outsb
push
jl
mov
jp
jae
aaa
push
cmpsb
in
push
scas
xor
lcall
xchg
mov
mov
pop
movsl
jne
scas
sub
popf
orl
cwtl
pushf
in
and
pop
fcomip
push
lock
das
xor
pop
inc
call
xadd
adc
loopne
cmp
push
cld
sub
lret
jecxz
jno
pop
adc
ljmp
mov
push
mov
adc
xor
ljmp
mov
clc
cli
loope
dec
adc
lds
imul
daa
add
cli
incl
push
xor
cmpsb
test
testb
es
mov
outsl
rolb
push
or
lock
out
mov
pop
or
cmp
mov
cltd
mov
push
rorb
pop
xchg
int
or
add
mov
add
gs
clc
lahf
mov
sub
test
popa
cld
mov
subb
add
popa
clc
pop
hlt
xor
sbb
rcl
sbb
insl
stos
or
adc
add
loop
mov
mov
in
sbb
enter
pop
loopne
ficoml
push
inc
sar
aam
pop
mov
xor
imul
or
call
add
outsb
test
xchg
inc
fcomps
mov
mov
cwtl
mov
cbtw
cmp
jl
xchg
stos
mov
repnz
adc
inc
cltd
data16
es
rcrl
sbbl
jmp
xchg
cmp
or
pop
dec
jge
xor
fisubl
adc
fdivr
adc
fwait
dec
sub
xor
clc
mov
mov
hlt
add
push
pop
push
inc
decl
pop
push
insb
cld
mov
inc
loopne
push
mov
dec
lcall
push
mov
or
pushl
pop
mov
jae
fwait
xchg
fistpll
add
add
sbb
loope
dec
jecxz
in
sarb
leave
add
repnz
pushl
cmc
pop
in
sub
subl
inc
leave
add
fistl
cmc
fsubrp
and
dec
and
mov
cld
cmp
xor
clc
add
mov
sti
xorb
pop
je
ret
sbb
clc
filds
icebp
xor
or
push
orb
mov
into
jle
jle
sbb
sub
cli
cmpsl
lret
ljmp
lcall
negb
pop
ss
pushl
sub
stc
adc
popa
sbb
sti
or
arpl
movd
lods
xlat
xchg
je
jb
insl
cmp
xor
push
out
out
sub
push
shr
adc
andb
ret
jmp
and
add
and
cmp
push
push
stos
sarl
mov
add
xchg
cli
ljmp
jnp
inc
test
shll
andl
jg
inc
and
pop
pop
xchg
sub
clc
jbe
or
inc
mov
xor
xor
cmpsb
stos
lods
out
ljmp
fnstsw
xchg
mov
sar
jg
dec
xor
xor
ss
mov
add
mov
xchg
add
mov
add
xlat
incl
imul
and
mov
lock
push
inc
push
push
ret
cmp
xchg
cmp
cli
ret
push
enter
test
clc
add
sbb
int3
push
add
stc
cmc
outsl
push
adc
inc
jle
shlb
add
push
enter
xor
pusha
or
jmp
test
rorb
loopne
add
add
fbstp
fstpl
inc
adc
mov
mov
xor
cld
sbb
lds
in
aam
xor
add
shll
das
mov
xor
out
incb
call
jmp
sub
push
pop
jmp
js
inc
ds
mov
mov
fcmovnb
push
loopne
mov
shlb
mov
cld
sti
xor
adc
loope
xchg
push
arpl
imul
or
cld
push
mov
cs
adc
stos
xorb
pop
and
pop
fisttpl
test
fistps
clc
test
mov
ljmp
ret
add
xchg
and
lods
testb
clc
ljmp
cmp
or
ljmp
leave
stos
adc
pop
out
xchg
cwtl
es
bound
xor
aaa
sub
insb
xchg
mov
xchg
mov
addb
ljmp
mov
pop
aad
adc
aad
add
push
sbb
cmp
loopne
test
bound
outsl
pop
cmp
xor
rorb
jb
aaa
insb
or
jl
mov
add
fwait
pushf
loop
mov
jle
lahf
add
push
adc
mov
inc
mov
icebp
adc
leave
je
je
xchg
adc
mov
and
jl
mov
xchg
pop
cwtl
cmp
pop
clc
rorb
jne
xor
lcall
push
mov
es
and
outsl
or
push
insl
mov
mov
in
hlt
or
jb
cli
mov
xlat
add
dec
jns
jg
fst
adc
cli
cmc
movsbl
mov
xchg
fisubrl
and
nop
or
xchg
int3
mov
mov
lods
mov
add
jg
lret
roll
xlat
mov
jecxz
xchg
mull
mov
xchg
inc
pushf
dec
sub
push
xor
lcall
or
lods
test
mov
mov
mov
pop
nop
jnp
xor
dec
je
icebp
ret
cmpsb
lock
stos
call
push
dec
dec
fbstp
or
xor
jne
mov
bound
lods
idivl
adc
or
lock
test
adc
jnp
sub
es
xchg
push
mov
in
cmp
fdivp
or
rorl
mov
xchg
in
incl
test
fnstsw
dec
and
les
sbb
adc
mov
cli
cmp
lcall
jle
or
hlt
scas
mov
ret
push
outsb
sub
cmp
lret
and
fists
sarl
lcall
push
and
scas
rol
and
jns
fs
jg
mov
pop
movsl
in
add
dec
out
fcomip
aam
inc
jge
out
add
xchg
jno
aam
dec
ret
mov
std
dec
push
pop
ret
add
lahf
jno
inc
sbb
sub
jecxz
mov
sarb
sub
insl
sahf
call
ljmp
loopne
pop
nop
jmp
jle
lods
insl
negl
jmp
addr16
xor
inc
fisubrs
lret
xor
mov
or
cmpsl
lahf
inc
xor
in
mov
cmp
hlt
xor
dec
incl
jle
aaa
and
fisubrl
mov
mov
mov
scas
jle
pop
sbb
incl
dec
sub
mov
cs
mov
and
dec
fwait
push
mov
mov
cli
add
add
mov
incl
rcr
or
cs
add
scas
cli
mov
pop
adc
or
xchg
addl
js
enter
in
sub
hlt
loopne
pop
scas
sarb
mov
enter
xor
mov
dec
jle
sbb
orb
int
jp
test
sbb
xchg
push
mov
adc
mov
shrb
jmp
mov
mov
loope
fbstp
cmp
test
mov
cmp
mov
icebp
pop
test
lret
addb
sub
cld
shll
pop
cmc
mov
xor
shll
jg
adc
jge
jge
js
xchg
inc
push
decl
mov
xor
adcl
lods
add
aas
and
or
aad
jl
insl
aad
pop
mov
out
add
adc
mov
loope
cltd
gs
dec
mov
push
insl
pop
add
inc
xchg
push
sti
or
cmp
push
lods
dec
mov
mov
loope
flds
push
xchg
push
imul
scas
into
cmc
xchg
jl
and
sub
sarb
mov
xchg
lock
xchg
dec
ljmp
jl
dec
mov
test
adc
jg
sub
pop
mov
inc
push
dec
mov
or
jge
pop
icebp
push
cwtl
lcall
imul
mov
in
andb
outsl
xchg
xor
push
pop
push
mov
push
add
lcall
mov
out
lods
shlb
inc
cmp
out
lcall
sub
imul
rcrl
subb
idivl
daa
push
pusha
das
outsl
push
pop
xchg
inc
xchg
add
add
and
aaa
ficoml
cld
in
into
icebp
sbb
xchg
pusha
test
and
or
sbb
xchg
cld
or
sub
pop
cld
mov
inc
jo
ret
in
outsl
add
arpl
sub
or
or
pusha
lds
ret
adc
ucomiss
in
sbb
mov
mov
inc
adc
repnz
push
sar
mov
add
jmp
sbb
or
add
add
lods
dec
push
push
inc
xchg
lock
push
push
fimuls
xor
fcoml
clc
incl
je
adc
add
jae
jne
aaa
and
mov
inc
loope
push
stc
dec
aas
mov
jmp
inc
cmp
lods
adc
lret
jg
pushl
mov
add
inc
mov
mov
js
test
les
dec
ret
call
sbb
and
add
mov
sbb
aad
arpl
mov
out
mov
or
dec
and
ret
add
insb
push
lea
add
decl
inc
rolb
int3
push
pop
sub
push
clc
repz
lds
xchg
push
push
scas
mov
jecxz
je
ficomps
dec
add
fwait
xchg
scas
mov
ljmp
pop
xor
mov
xor
push
roll
mov
decl
sbb
fldcw
push
sbb
int
mov
stos
pop
repnz
aaa
push
insl
or
push
imul
mov
test
xor
jmp
cld
lds
mov
or
shll
push
aaa
xor
sbb
mov
pop
sbb
xor
dec
imul
fiadds
jne
out
fiaddl
rorb
js
sbb
xor
pusha
fdivl
cmpsl
stos
inc
xchg
rclb
xchg
test
sub
ds
stos
test
sbb
or
push
xchg
pusha
call
fcompl
add
and
stos
scas
add
pop
shll
je
aam
pop
insl
xor
test
jmp
add
jmp
pop
push
jge
adc
call
ja
nop
dec
out
sbb
mov
mov
mov
push
pop
jle
das
sar
push
cmpsl
adc
out
fidivl
adc
sub
add
mov
ljmp
cld
outsb
push
int
stos
fstps
pop
mov
adc
inc
adc
daa
add
push
fsubrs
call
or
je
flds
in
push
jle
jb
and
push
js
outsl
or
stos
mov
add
cmpsb
dec
cmp
lcall
or
add
orb
mov
sarl
mov
jmp
leave
mov
test
cmpsb
xlat
or
or
add
jo
test
clc
hlt
xchg
js
pusha
imul
sbb
push
mov
icebp
push
shl
int
cmpsb
jmp
cmpsb
dec
push
mov
and
jge
or
xchg
cmpb
cli
rclb
notb
lea
repz
in
pop
imul
cmp
mov
cli
xchg
xchg
lock
xchg
mov
mov
mov
and
and
xor
mov
es
and
decl
stc
mov
icebp
sub
adc
shlb
pushf
push
mov
cmp
cmp
or
or
outsb
and
int
movsl
xor
adc
aam
mov
ret
lcall
mov
ret
xchg
jp
data16
sub
ljmp
push
incl
jae
and
pusha
in
leave
xor
adc
jg
push
adc
andl
das
in
notl
jmp
or
or
test
hlt
ret
mov
fiaddl
xor
xor
add
scas
decl
pop
jbe
test
mov
push
xchg
pop
add
add
call
bound
popa
jb
and
cmp
cmp
adc
add
or
je
fs
mov
rcr
mov
xchg
outsl
mov
in
dec
dec
hlt
loop
fcmovne
outsl
xor
or
cmp
push
jmp
and
or
jnp
mov
lcall
pop
fsts
js
add
lods
fwait
cmp
mov
aam
es
filds
jle
in
aas
ret
push
xchg
lret
dec
cmc
cmp
aaa
sbb
enter
adc
clc
aam
sbb
mov
add
pop
lods
aam
dec
xchg
out
data16
jg
aas
and
lods
and
call
sbb
push
mov
cmp
insb
hlt
decl
inc
lahf
call
add
dec
lock
mov
push
das
aas
xchg
loopne
call
push
ja
inc
inc
adc
out
sbb
fldl
jp
ret
arpl
add
jge
clc
push
mov
into
jle
ljmp
jbe
xorb
xchg
inc
jae
or
mov
adc
add
adc
pop
mov
sub
dec
cmp
sub
or
cmpsb
jle
in
mov
jecxz
dec
pop
pop
cmpsb
js
add
cli
ljmp
cmc
scas
js
sub
mov
adc
jmp
push
inc
jg
add
mov
cs
jbe
inc
icebp
or
cmp
add
add
insl
mov
repz
dec
jl
das
add
cmp
add
xlat
fmull
test
mov
ficompl
rcrb
int
jl
or
jmp
pop
jns
cmp
je
outsb
push
push
xor
push
add
xchg
pushl
add
mov
cld
add
fldenv
mov
lods
aam
inc
lret
lods
xchg
gs
cmpsb
jne
mov
out
cli
call
out
std
xchg
pushl
lcall
fisttpl
imul
inc
or
inc
sti
fmull
fidivs
dec
sbb
imul
js
lcall
push
aaa
mov
add
jns
aad
mov
test
cltd
sbb
xor
aaa
xorb
ljmp
lock
and
mov
les
pop
in
es
push
enter
testl
fstpt
fwait
jecxz
fwait
daa
rol
or
incl
or
out
aaa
lcall
xchg
pop
adcl
or
lcall
adc
sbb
incl
push
push
xchg
movsb
jns
ljmp
mov
ljmp
call
cs
pop
push
scas
and
in
mov
in
mov
pop
hlt
jg
dec
aas
mov
push
xchg
in
inc
or
sbb
cmovge
call
dec
aam
cmpb
dec
sar
in
imul
outsb
cmp
push
xchg
les
jp
jns
cld
out
xchg
out
inc
out
in
lds
xchg
lock
data16
fucom
add
shl
sahf
lcall
push
loope
mov
lret
pop
xor
stos
push
mov
rcrb
adc
pop
cli
cwtl
cmc
call
xor
movsl
sub
aaa
sahf
and
jae
das
dec
dec
loope
bound
add
stos
fwait
xchg
dec
xchg
fisubs
mov
ret
mov
gs
sbb
and
and
inc
add
pop
pop
push
clc
jnp
sbb
fidivrl
cmp
fldt
push
sub
inc
mov
xchg
lods
test
int3
push
add
arpl
movsb
mov
adc
pop
inc
add
mov
or
add
xchg
inc
pop
inc
cld
stos
inc
loop
dec
xchg
xchg
jmp
cmp
loope
push
test
xchg
fidivl
add
enter
sahf
jne
pushf
imul
sahf
and
xchg
cmp
add
cmp
mov
cs
decl
mov
fwait
mov
mov
jle
fs
mov
sar
or
ret
rclb
data16
jg
outsb
mov
daa
les
sub
sbb
cmp
cmc
fisttps
orl
or
ljmp
and
ret
and
dec
push
and
xchg
fdivs
ss
push
xchg
decb
adc
addr16
sub
cmc
call
jecxz
sbb
ss
cmpsb
or
test
push
mov
aam
pop
clc
push
mov
hlt
fwait
cs
icebp
std
ja
xor
mov
rcrw
mov
test
lds
jg
add
in
add
or
int
push
insb
lods
pushf
fs
lret
jp
aam
arpl
rclb
popa
add
mov
jl
cld
push
adc
push
call
cmc
in
mov
test
pop
in
jp
adc
fdivrp
sti
cmpsb
or
bound
dec
dec
imul
jmp
shll
mov
js
jl
dec
push
imul
icebp
sti
pop
loop
cld
fisttps
xchg
loopne
into
out
fmuls
inc
pop
lcall
mov
dec
add
mov
or
jle
mov
lods
arpl
ja
or
je
mov
lcall
mov
mov
test
std
outsl
xchg
dec
iret
or
loope
out
mov
out
ret
ret
ljmp
mov
inc
pop
mov
addl
mulb
push
jne
mov
arpl
adc
scas
sbb
inc
adc
push
xlat
sbb
cmc
mov
push
mov
adc
pop
add
cmp
testb
cld
mov
pop
test
and
add
jle
dec
cmp
mov
sub
xor
loop
and
ret
adc
xchg
inc
rcl
dec
xchg
push
mov
sti
test
push
pop
sbb
out
loope
add
orl
mov
pusha
dec
hlt
orb
mov
popf
insb
add
je
aam
mov
push
mov
add
add
add
aas
xor
lea
out
mov
jb
inc
xor
sbbb
movsl
push
pop
adc
sub
mov
mov
mov
jno
aad
fisubs
xchg
pop
lret
and
test
sbbb
sub
add
cmpsb
pop
or
adc
dec
cwtl
ret
cmp
mov
push
jne
ss
mov
sar
jg
push
and
inc
pop
bound
loope
testb
stos
xor
mov
aas
push
jp
or
mov
dec
pop
add
shll
fsts
xor
iret
and
cli
fcomps
xchg
dec
jp
dec
jae
hlt
inc
lret
lods
dec
jge
cmp
pop
in
adc
sub
lds
movsb
and
test
cmp
fsubs
sar
cltd
lock
paddd
popa
les
adc
adc
add
sti
xchg
stc
xor
add
xchg
adc
lods
cmp
test
and
cld
repz
push
and
decl
push
movsl
and
call
xor
jg
fcmovnbe
into
or
fnstenv
xchg
inc
sbb
mov
dec
fmul
mov
int3
cmpsb
inc
fs
push
jp
ljmp
insb
out
nop
add
dec
data16
adc
icebp
pop
jp
out
jge
mov
pusha
jge
ljmp
adc
and
ror
xchg
inc
sbb
push
jp
pop
inc
jge
mov
es
xor
mov
out
in
jo
and
jmp
inc
or
dec
push
cwtl
cs
cmc
mov
adc
jecxz
push
test
jl
stos
jno
pop
pusha
mov
cld
jae
mov
jg
mov
adc
jns
rclb
cmp
pop
fildl
and
sbb
push
stos
mov
rorl
pop
stos
xlat
xchg
mov
push
xor
mov
xor
push
or
imul
xor
lret
divl
jg
add
mov
push
nop
sub
adc
xchg
and
hlt
jno
addb
cmpsb
aaa
add
iret
jo
call
mov
cmp
or
insl
or
int3
xchg
icebp
out
xchg
push
push
aam
sbb
js
ret
adc
xchg
add
dec
pop
inc
stos
or
mov
out
in
push
sbb
fwait
pop
add
decl
jp
mov
dec
push
pop
mov
int3
mov
dec
mov
jo
in
pop
test
jmp
xchg
decb
movsb
jle
outsb
jg
and
mov
fs
push
or
pop
fisubl
cmc
lcall
sbb
nop
lea
dec
xchg
or
and
out
add
sub
push
les
mov
fnstcw
into
enter
jle
adc
xchg
xor
pop
cmpsb
xchg
xorb
fadds
lea
mov
cmpsl
xor
pop
push
out
cmp
fildll
data16
jg
xchg
or
jae
xchg
jnp
test
or
dec
mov
clc
idivb
out
push
push
cltd
mov
imul
test
outsb
xchg
mov
jbe
and
call
cmp
mov
fsubrs
push
push
jg
push
lods
fwait
pop
je
fidivl
sbb
scas
pop
es
outsb
ret
nop
pusha
jp
mov
rorb
inc
loopne
jl
mov
dec
sar
cmp
mov
les
jo
xchg
mov
mov
mov
inc
mov
cmp
inc
ja
repnz
jp
add
test
xor
add
lock
or
cmp
or
or
cld
push
adc
icebp
rclb
push
movsb
push
aas
inc
or
and
es
pop
insb
andb
movsb
sbb
jo
cmp
xchg
jno
mov
outsl
xor
decl
data16
dec
mov
dec
and
in
mov
testl
cmc
roll
pop
cmc
jg
cli
es
or
xchg
xor
dec
pop
sahf
sbb
adc
clc
mov
stc
es
popl
cmpb
pop
or
notl
fimuls
stos
incb
add
push
xchg
xchg
fs
pop
lret
sub
mov
movsl
pop
loope
ljmp
dec
or
not
push
mov
cmpsb
cld
inc
add
call
fstl
pop
int
jge
mov
cld
inc
add
in
fidivs
test
fbld
xchg
adc
push
adc
mov
loopne
jecxz
imul
mov
sbb
and
repnz
fbld
sti
mov
out
subl
inc
jmp
outsl
jbe
jnp
push
in
imul
dec
lret
daa
or
sub
push
xchg
js
and
das
inc
pop
test
mov
test
aam
xor
aaa
or
cli
xchg
push
scas
stos
ds
xchg
pop
xchg
mov
adc
or
adc
gs
xchg
into
mov
nop
add
cld
pop
pop
andb
hlt
stc
add
jbe
ljmp
dec
inc
cmpsb
xlat
mov
push
jecxz
cmp
cwtl
in
std
les
fwait
jmp
orl
mov
pop
lcall
add
push
sub
inc
jnp
inc
mov
mov
dec
and
lcall
cmp
jno
jnp
or
pop
out
jns
sub
insb
popf
mov
dec
aad
das
xor
in
aam
push
sti
mov
pushl
inc
test
sbb
arpl
cwtl
dec
dec
addr16
cmp
fnstsw
mov
fidivrs
xlat
std
push
movsb
sub
jg
mov
mov
movhps
popa
jo
cs
sarb
decb
into
xor
repz
push
js
mov
ljmp
mov
repz
adc
jecxz
jmp
rcl
push
lcall
pop
lods
inc
ja
js
loopne
adc
jnp
fimull
sbb
lds
push
data16
call
repz
pop
icebp
adc
adc
popf
fistpll
add
into
push
cld
cmp
out
cmp
mov
jns
add
push
pop
mov
aas
xor
push
lock
cld
mov
sbb
test
rcl
xorb
pop
pop
aaa
jl
mov
pop
adc
push
rolb
fstpl
imul
dec
fimull
cmpsb
inc
xchg
mov
add
subl
daa
push
jl
daa
adc
pop
jle
xorl
xchg
iret
mov
lea
std
stos
in
std
insl
ss
sub
pop
dec
ret
imulb
out
push
std
addr16
push
ficomps
jo
pop
lcall
mov
lahf
push
xchg
decl
add
jle
cmp
mov
add
cwtl
jnp
and
and
mov
cs
filds
or
imull
inc
les
inc
adc
filds
icebp
or
cli
cmp
push
dec
stos
jle
cmpsl
lods
das
xchg
add
mov
dec
ret
stc
andl
pop
mov
loop
add
ljmp
enter
mov
je
mov
shrb
cs
outsl
pop
mov
adc
addb
push
push
divb
pop
mov
mov
ds
lea
ljmp
out
stos
clc
js
push
cmp
push
rcrb
sti
lcall
lods
push
mov
fisttps
pop
cmpsb
mov
xchg
int3
cmpsb
cmpsl
sbb
fbld
lret
stos
xchg
cmpsb
push
mov
push
orb
push
shr
push
add
mov
decl
mov
inc
mov
jmp
sbb
ja
or
inc
or
fwait
pop
aad
jnp
bound
lahf
in
mov
cmc
xlat
add
shlb
mov
sub
mov
dec
dec
push
and
cld
stos
scas
pop
int3
jb
adc
stc
dec
std
addl
push
inc
cmpsb
popl
les
insb
xor
insb
jg
push
jl
jmp
sbb
icebp
out
mov
inc
mov
hlt
fistpl
and
arpl
ficompl
mov
das
test
xchg
jg
cmpsb
mov
je
inc
or
popf
cli
mov
popl
clc
fcomi
dec
scas
cmp
sub
outsl
adc
cmc
pop
mov
pop
mov
gs
std
ljmp
testb
xchg
aaa
sbb
xchg
int
push
or
mov
xchg
cmc
imul
push
scas
lret
push
divb
lcall
add
mov
mov
add
aas
es
add
std
ljmp
sarl
inc
jo
pop
sub
fimull
xor
pusha
mov
xchg
or
adc
cmpb
ss
andl
jmp
fdivl
and
loopne
xlat
scas
dec
jo
mov
js
dec
clc
incl
scas
inc
loopne
mov
cmp
inc
or
mov
cmc
insb
jns
dec
pop
fimuls
inc
leave
mov
jge
incl
adc
leave
jns
in
mov
cld
aad
pop
dec
sbb
push
pop
adc
add
fstpl
xor
inc
pop
jge
lret
push
aad
test
dec
xchg
call
js
xchg
mov
mov
dec
pop
js
js
adc
into
push
jp
hlt
aam
or
pop
sbb
arpl
mov
fwait
stos
adc
add
jne
mov
clc
fwait
cs
decl
xchg
mov
popl
cmp
enter
cli
test
icebp
sbb
jnp
lret
pop
mov
andb
js
dec
lahf
and
test
cmc
lea
lahf
loop
pop
and
loope
das
lock
xchg
sbb
movsl
fistpll
xor
fdivs
in
data16
repz
clc
push
cmp
adc
and
arpl
je
or
sub
popf
mov
adc
int3
cli
fistps
xor
call
cmc
xchg
sbb
aaa
aas
insb
xor
lret
pop
sub
sub
cli
inc
xchg
rcrl
sti
testb
cmpsb
mov
adc
sbb
scas
incl
add
xchg
js
mov
imul
shrl
jo
xchg
lcall
fsubrp
test
fwait
jns
jae
adc
inc
pop
mov
sbb
dec
or
add
pop
cmp
add
into
jae
jg
shll
xor
outsl
outsb
stos
sub
ds
stc
push
jecxz
sub
lcall
cmp
divl
je
mov
dec
dec
or
in
ds
cltd
les
cmpsl
lea
sub
enter
lock
mov
fstpt
in
cs
lods
add
in
inc
clc
dec
lahf
xchg
ljmp
outsb
hlt
je
movsl
repz
xor
dec
cmp
jp
jbe
cs
out
pop
lret
fbstp
push
sbb
cli
jp
mov
mov
xchg
push
into
jbe
sub
rorl
clc
stos
xlat
push
scas
push
popf
push
fcomip
xor
sub
in
iret
call
and
xchg
rclb
shlb
call
test
shlb
ds
aam
unpcklps
mov
inc
adc
jl
dec
mov
ja
xchg
cmp
sub
clc
and
jnp
ret
jbe
ss
ljmp
test
decl
xor
std
jg
mov
add
fldt
stos
lock
push
add
dec
push
enter
pusha
jge
add
aad
pop
cmc
add
clc
je
imul
stos
pusha
loop
mov
or
xlat
arpl
mov
aam
popa
movsb
mov
adc
ja
mov
mov
pop
and
sub
outsl
pushf
imul
in
push
xchg
mov
imul
out
pop
xlat
popf
sarb
cs
in
mov
pop
ficoml
popa
dec
enter
fadd
dec
pop
or
aaa
sar
stc
and
sbb
mov
rorl
mov
and
adc
cmpsb
pop
jae
jbe
mov
sbb
aad
fsubs
push
loopne
xor
jb
and
cmp
push
adc
fcmovbe
mov
dec
dec
je
push
movsl
ret
jns
pop
daa
push
or
dec
jg
dec
jge
adc
sub
ss
test
pop
rorl
jo
mov
aam
sbb
pop
inc
adc
inc
ror
xchg
into
jg
add
shrd
mov
fbld
jp
mov
xor
nop
cmpsb
lock
out
mov
aas
adc
adc
enter
clc
pop
scas
xchg
jo
lods
dec
xchg
cltd
js
es
cs
inc
lods
or
clc
sbb
mov
and
mov
sbbb
scas
shlb
lock
dec
lods
xchg
out
jl
test
out
loop
cmp
cmp
add
or
add
mov
lret
inc
and
xchg
test
sbb
rorl
xchg
mov
jl
das
pusha
xchg
popa
pushf
stc
lret
icebp
hlt
inc
pop
and
jno
inc
xchg
cmc
outsb
jmp
pop
or
mov
pop
fsubp
cmpsl
rcrb
add
cld
sarb
or
xlat
mov
cmp
aam
in
dec
pop
xorl
je
and
aas
out
inc
fldt
bound
test
fsubs
sub
push
add
das
add
jl
xchg
enter
mov
movsl
aad
loop
lds
dec
lock
inc
jo
pop
push
clc
mov
lcall
pop
inc
rcrb
push
in
add
outsl
pushl
mov
das
es
mov
mov
jl
aam
mov
ss
dec
out
cs
push
xor
mov
test
mov
jo
fwait
jnp
std
lds
hlt
mov
movsb
pop
jge
repnz
lcall
inc
adc
push
dec
push
adc
push
clc
lcall
dec
pop
jno
cmp
cmp
sub
xlat
imul
xchg
loopne
adc
and
call
jle
outsl
loopne
mov
testl
in
popf
push
sbb
pop
inc
movsb
mov
jg
imul
adc
icebp
test
sbbb
loope
ret
xchg
out
clc
es
pop
lods
jmp
mov
xor
xor
xchg
incl
fmul
jae
je
sahf
xchg
fistpl
pop
xlat
in
sar
dec
mov
push
jl
repz
cmp
push
jne
mov
jmp
lcall
add
pusha
xlat
in
xchg
mov
mov
and
jge
fxch
loope
test
xor
jmp
jg
test
push
add
jp
push
fistpl
push
and
in
sbb
out
int
or
movsb
out
out
and
rol
push
sub
cmc
xchg
mov
testl
xor
fwait
inc
ljmp
inc
push
mov
xchg
sbb
mov
and
aad
ljmp
ljmp
test
std
sub
mov
leave
mov
dec
add
add
cmp
cld
sbb
shlb
out
fcomi
jo
sbb
pop
fmull
mov
lcall
nop
lock
cmp
sbb
add
sbb
filds
call
sub
mov
enter
jns
and
test
out
bound
cmp
fbld
sbb
jae
iret
icebp
xchg
rcrl
aam
movsb
cmp
sub
mov
add
test
xlat
cmp
sbb
xor
call
iret
xlat
lods
adc
aaa
rolb
sub
inc
inc
cltd
xor
movsl
xorb
sbb
leave
push
rorl
int
push
in
push
push
pop
fs
and
push
std
mov
push
lret
push
fisubrl
stos
cmpsb
movsl
xacquire
icebp
in
ret
adc
cmp
fnstsw
push
fisubl
inc
ret
cli
decl
xchg
orb
mov
cmp
mov
mov
mov
mov
lods
dec
inc
dec
sub
jbe
cli
mov
mov
scas
inc
mov
movsb
cmpsb
adc
aaa
ja
xor
es
decl
ret
vmwrite
dec
dec
insb
add
and
pop
xchg
adc
jp
cld
mov
pop
cmp
dec
mov
add
xor
dec
fdivp
or
and
inc
xchg
nop
ja
call
cs
push
inc
xchg
adc
inc
mov
xchg
cmpsl
jno
dec
aad
ljmp
mov
jge
jl
pop
test
into
jp
push
dec
mov
ljmp
sub
mov
jmp
jae
aas
or
pop
push
movsb
pop
sti
mov
pop
adcl
clc
push
sbb
cmpsb
pop
mov
mov
dec
jns
pop
push
decl
rcrb
push
ds
fsubrl
popa
xor
out
inc
movsl
push
and
jo
mov
cld
sub
inc
inc
test
rolb
xchg
sbbb
dec
hlt
fistl
or
sub
sarl
jp
das
mov
push
or
add
sbb
jne
clc
lock
ja
jp
dec
push
enter
xor
sub
fbstp
mov
pop
faddl
movsl
pop
cmc
aad
fwait
inc
movsl
cli
cmp
pop
lds
jno
mov
shlb
pop
loopne
mov
add
mov
data16
insl
outsl
mov
in
add
push
inc
or
incl
mov
xchg
sbb
adc
cld
in
es
mov
fldl2e
xor
pop
cltd
insb
push
and
ljmp
andb
stos
or
sbb
jnp
icebp
scas
sar
lret
ficoml
mov
call
loopne
push
push
ret
push
push
outsb
mov
adc
sub
or
loop
jge
popf
mov
imul
push
cmp
dec
cwtl
xchg
xchg
inc
clc
pop
ror
push
inc
ror
lret
mov
jge
ss
jne
imul
pop
shll
add
push
in
or
int
cmp
pop
andl
cs
lret
inc
ss
push
std
jg
or
into
lahf
push
aad
pop
sbb
mov
jg
sbbl
ljmp
out
test
jg
and
insl
popa
data16
aad
in
cltd
aad
adc
enter
lcall
shr
pop
jecxz
sub
cmp
fistpl
jecxz
xor
push
or
pop
inc
dec
test
iret
out
pop
loop
negb
movsb
mov
xchg
add
std
dec
xor
pop
or
popa
subl
mov
rcr
mov
hlt
nop
jmp
inc
scas
xchg
outsb
adc
clc
jmp
adc
arpl
stc
jo
int
call
sti
mov
mov
bound
jne
std
out
pop
pushf
js
in
push
mov
xor
and
pop
dec
adc
xchg
xchg
push
ss
decl
or
cmpsb
cmp
and
or
loop
inc
jne
pushl
mov
enter
xor
movsl
mov
dec
movsb
mov
arpl
and
hlt
sahf
ja
sub
push
sub
mov
gs
shll
jo
xor
movsb
ret
clc
cltd
xor
cmp
or
xor
sbb
scas
xor
cmp
imul
and
adc
adc
add
mov
xchg
fiaddl
in
loop
adc
sub
add
lock
lcall
enter
out
mov
and
jae
push
pop
data16
push
cmp
push
ljmp
fs
or
hlt
bound
inc
and
sub
ss
loop
dec
orl
test
std
leave
rorb
pop
sub
aas
out
leave
sbb
xor
push
dec
rol
cli
faddl
test
and
cwtl
outsb
pop
sub
pop
scas
ss
loopne
xor
sub
xchg
mov
sar
jbe
adc
and
shll
pop
fwait
mov
adc
push
and
orl
jg
lea
in
sbb
jmp
jl
pop
hlt
cmp
out
fwait
ja
push
push
push
lock
es
xor
clc
ret
jecxz
dec
mov
scas
inc
mov
lcall
xchg
scas
jg
std
or
push
shl
call
cld
dec
dec
out
lea
fcmovbe
pop
mov
repnz
out
scas
add
push
push
xchg
cmp
icebp
jle
sbb
mov
cmpsl
std
cmp
std
pushf
add
cld
loopne
fistps
lds
push
xor
mov
sub
jg
int3
adc
addr16
insb
sub
outsl
pop
xor
mov
incl
cmp
lock
sub
cmp
add
mov
into
divb
mov
cmp
cmp
hlt
out
imul
sbb
fcoms
jge
sub
test
push
dec
in
jmp
xor
pushl
sbb
repz
adc
dec
lret
or
loop
and
or
jmp
mov
fldcw
mov
mov
in
sbb
mov
pmullw
decl
add
push
sbb
cmp
jo
pop
jp
loopne
out
mov
repz
push
add
pushl
add
add
cmp
or
cli
xor
hlt
inc
orb
sbb
inc
pop
inc
nop
sub
cld
and
std
adc
xor
arpl
mov
pop
sub
js
jmp
push
and
xor
je
sbb
incl
out
dec
imul
dec
or
cld
ret
pop
push
inc
loopne
jecxz
sub
push
orb
xchg
adc
stos
shlb
pop
jno
adc
ljmp
nop
scas
lret
fimull
ja
sahf
jae
pop
testb
pop
cld
mov
int
lods
sub
mov
mov
test
clc
int
and
ret
mov
or
jg
jge
jnp
stos
push
push
adc
pop
test
movsl
cs
mov
jb
or
out
arpl
pop
daa
call
subb
leave
int
or
daa
lock
cld
pop
icebp
cmpb
in
or
sbb
iret
sub
pop
mov
cmove
lcall
mov
es
pop
fisubl
bound
and
jecxz
in
add
cmp
jg
jge
addr16
dec
nop
lret
das
clc
xchg
aaa
loopne
xor
dec
xchg
inc
fisubs
sarl
adc
mov
jg
adc
push
push
rcrb
in
push
cmp
jns
jl
mov
mov
pop
jmp
cli
lcall
in
in
jne
mov
ficompl
push
push
call
cltd
xor
test
mov
cmpsb
sub
cltd
sbbb
je
es
mov
cmpl
and
gs
adc
movb
adc
aaa
std
and
and
jns
dec
xchg
or
mov
sbb
push
inc
enter
pop
int3
mov
pop
xor
inc
ja
mov
inc
rorb
cli
outsb
inc
lock
push
jno
ljmp
test
pop
lcall
jo
daa
dec
cli
pop
cmpsl
out
std
pop
lea
mov
sahf
jns
push
test
mov
inc
dec
bound
pop
into
ret
push
fldz
ja
les
dec
std
out
pop
aad
push
mov
hlt
aas
ja
xchg
push
push
dec
adcb
cs
clc
jnp
dec
lcall
or
mov
jne
xchg
stos
aas
push
cli
pop
jle
and
out
cmp
sti
test
incl
rcll
mov
std
add
sub
leave
sti
fcomi
mov
cmp
and
or
mov
add
xchg
sub
in
pop
mov
pushl
aam
jg
jp
add
mov
idiv
push
mov
jno
adc
shlb
outsl
jmp
push
enter
loop
jmp
pop
mov
iret
jg
mov
inc
or
leave
dec
insb
insl
repnz
dec
mov
mov
dec
push
jo
pop
testb
das
xorb
and
mov
lret
add
sub
fwait
cltd
or
push
and
rcr
es
dec
push
sbb
gs
push
pop
incb
outsb
dec
mov
test
ja
xchg
xorb
das
adcb
mov
adc
and
dec
ss
adc
ss
pop
inc
mov
mov
lcall
shrb
js
pop
loop
call
xchg
dec
lret
lods
mov
hlt
dec
dec
sbb
je
lret
stos
xchg
cvttps2pi
pop
std
test
dec
pushf
shlb
lcall
cmc
loopne
fimuls
jo
in
and
ret
nop
cld
pop
xchg
inc
add
dec
and
xchg
add
lock
mov
xor
cltd
jno
mov
std
ret
xchg
movsb
xor
decl
dec
mov
lods
cmpsb
repnz
aad
rcrb
mov
shl
fidivl
adc
and
pop
and
mov
lock
and
je
cmp
mov
out
xchg
jo
cmpb
fmull
insl
dec
dec
std
mov
fbld
faddl
xor
je
adc
push
cmpsl
aaa
lods
xchg
mov
dec
add
shrb
pusha
aas
inc
aam
repz
cmp
pop
lcall
jg
mov
sbb
jg
lock
in
xor
adc
dec
adc
xlat
xor
aaa
xlat
xchg
das
push
inc
and
push
mov
sbb
jg
push
push
dec
stos
mov
lods
sarb
movsl
push
lret
cmpsl
lea
xchg
jmp
mov
stc
push
sub
sbb
mov
stos
stos
pusha
in
lcall
mov
or
insb
pop
mov
std
sub
outsb
add
adc
push
dec
aad
push
sar
lea
into
cli
inc
cmpsl
fistpll
negb
mov
insb
jae
push
call
cltd
jbe
sti
mov
iret
pop
insb
jmp
dec
jns
sbb
sarb
fildll
pop
notb
mov
inc
xor
arpl
rorb
mov
cli
mov
shll
dec
or
pop
mov
shr
out
in
pop
sbb
cmp
cmp
cwtl
mov
aaa
sbb
clc
subl
rcrb
lcall
jg
repz
add
jg
adc
sub
fs
dec
xor
fsqrt
sbb
and
and
mov
jbe
stc
push
jecxz
cli
and
adc
repz
push
stos
js
inc
xor
aaa
sub
testb
push
lea
iret
je
xchg
cmc
out
aam
jno
jne
out
jb
adc
mov
out
int3
push
xchg
jno
testb
sbb
lods
les
xchg
sub
int
hlt
add
aas
xchg
pusha
loopne
jbe
sbb
out
push
mov
loopne
mov
cmp
popa
loopne
and
inc
cmpsl
xchg
fstpt
and
arpl
sbb
mov
aaa
pop
cld
pushf
fsubs
push
cld
fisubrl
xchg
stc
xor
fcoml
adc
pop
hlt
insb
mov
pop
mov
stos
dec
inc
test
ret
pop
mov
and
stos
jle
not
xor
sub
jmp
jb
inc
test
sar
js
push
ljmp
test
jbe
jae
movsb
imul
inc
push
mov
mov
pop
sub
dec
in
xchg
xchg
and
fsubrp
mov
out
rcrb
push
lods
lods
sbb
cmc
mov
stos
sbb
mov
mov
aas
stos
sub
push
test
cmp
push
pushf
movsb
inc
movsl
pop
mov
push
cld
nop
pop
mov
mov
jle
test
cld
gs
subl
adc
rcrb
mov
push
in
jge
sarb
ds
enter
mov
lcall
movq
shrl
push
clc
inc
das
icebp
dec
cwtl
cmpsl
or
add
fbld
adc
jle
mov
dec
rolb
mov
std
add
dec
adc
push
leave
clc
xchg
scas
fs
hlt
jo
mov
dec
jnp
sub
cmp
dec
mov
es
cmp
fs
addr16
push
sub
xor
adc
push
fwait
cmc
lahf
inc
sbb
hlt
enter
pop
mov
or
xchg
xlat
pop
movsb
jg
call
adc
cmp
loopne
scas
jle
add
cmp
icebp
push
jo
fbld
test
cs
stos
fsubrl
push
bound
dec
adc
push
cmp
mov
dec
pop
xchg
push
dec
mov
addb
cld
ljmp
sub
lret
jbe
and
outsl
addr16
lret
cmp
adc
dec
dec
pop
mov
pop
insl
call
movsl
rcr
mov
xchg
movsl
loope,pt
jno
inc
cmp
lcall
aam
xlat
push
xchg
icebp
jp
lds
lea
int
mov
xchg
xchg
mov
mov
jmp
stc
je
cmp
or
pop
mov
das
mov
hlt
fildll
scas
rcrl
shl
in
jns
sub
mov
stos
shl
adc
stos
sbb
std
out
add
mov
jecxz
dec
mov
jl
jg
adc
sbb
les
roll
pop
iret
ja
clc
fwait
push
push
pop
push
mov
adc
std
ljmp
mov
and
out
ret
sbb
rcrb
pop
push
rolb
adc
jg
icebp
mov
cmp
je
mov
jae
fsubs
inc
mov
pop
imul
repnz
add
sub
pop
cmc
decl
cmpsl
mov
or
cmp
ljmp
in
lods
inc
push
outsl
lret
sub
daa
sar
sbb
outsl
and
mov
mov
adc
mov
clc
lds
dec
ret
and
pop
lret
scas
out
adc
insb
leave
outsl
inc
ljmp
rcrl
push
or
loop
sbb
sbb
outsb
repnz
fisttps
push
cmp
enter
clc
jge
orl
insl
ds
adc
andb
lea
dec
out
das
mov
add
decl
pop
scas
fmull
push
mov
fs
pop
in
stc
pusha
pop
sbb
fbld
shrl
call
aad
add
cmp
sbb
xchg
sub
dec
ljmp
jmp
imull
mov
sbb
insb
es
jnp
cmpsb
mov
sub
lds
sbb
cmpsb
fisubl
loope
sbb
ja
outsl
aas
xchg
pop
shll
cmp
insb
pop
dec
jns
cmc
outsb
inc
mov
xchg
les
mov
hlt
inc
xchg
shrb
cmpsb
cmp
mov
cmp
add
jl
jl
xlat
cmp
dec
mov
add
xchg
pop
mov
push
ljmp
and
mov
out
in
outsl
clc
lahf
mov
incl
pop
ljmp
out
mov
arpl
ljmp
lret
cmp
adc
sbb
mov
add
adcb
inc
mov
jmp
jge
lods
jle
cmp
hlt
pop
jl
dec
daa
loopne
sbb
mov
adc
mov
scas
adc
sub
testb
movsb
or
xor
mov
jnp
xlat
mov
and
out
addb
int
adc
push
fs
jecxz
sub
imul
cli
push
sub
pop
push
dec
cmp
jmp
fdivp
ja
push
sbbb
xor
adc
aam
dec
pop
add
dec
jecxz
cmp
sbb
mov
test
inc
pop
aaa
xchg
dec
shr
in
xchg
mov
fcomip
xchg
push
push
jp
mov
lret
sbb
or
pop
daa
fcmovnbe
or
aad
dec
xor
sahf
cmpsb
pop
incl
fisubl
or
sub
sub
sub
lock
lock
add
fcompl
sbb
or
cmp
mov
mov
pop
xchg
cmp
imul
stos
xor
cmp
or
mov
imul
insb
jp
and
imul
in
cmp
or
ja
push
bound
inc
enter
in
pop
fwait
inc
push
cld
sbb
push
jg
push
push
xor
sub
out
push
js
mov
cli
pop
pop
add
jecxz
int
adc
add
or
repz
aam
mov
pop
push
movsl
shrb
incl
sbb
cmp
aas
call
jo
sbb
cmpsl
dec
ss
jne
xor
and
outsl
cmpsb
sub
or
les
jl
rolb
aaa
pop
xor
fsub
xor
fistps
rcrb
pop
fidivrs
xor
dec
fcmovbe
sbb
and
add
pop
shr
add
fisttps
fcomp
popf
ror
cmp
dec
pop
xchg
mov
icebp
adc
push
and
xchg
ljmp
test
mov
and
pop
lcall
loopne
push
xor
bound
aas
loopne
les
fstps
inc
pop
insl
pop
lahf
aam
xchg
mov
lcall
and
mov
and
filds
data16
mov
iret
mov
lahf
xchg
loope
sub
push
xchg
dec
pop
aaa
sbb
pusha
shrl
pop
push
and
xchg
pop
pop
scas
js
sub
hlt
or
pusha
pop
mov
mov
and
mov
cmp
dec
cmpsb
hlt
sbb
arpl
rolb
mov
pop
aas
sub
orb
incl
pop
mov
lahf
loop
xor
out
rorl
ljmp
dec
lds
gs
sub
test
pop
mov
pop
xchg
fcoms
fldt
mov
and
int
iret
pushf
sub
mov
pop
xchg
sub
and
sbb
pop
or
jbe
lods
loopne
inc
push
rorl
xor
and
dec
dec
lcall
lods
inc
xchg
pop
lods
dec
inc
insb
xchg
mov
mov
es
cmp
lret
pop
and
lea
mov
mov
add
mov
mov
mov
out
movsb
shrb
clc
ljmp
int3
jp
push
frstor
leave
mov
jp
rorb
mov
mov
adc
lcall
inc
in
mov
stos
inc
subl
std
jge
fs
xor
cs
sbb
pusha
and
insb
xchg
mov
data16
pop
shrl
fdivp
sbb
mov
inc
mov
nop
jmp
ds
loopne
test
pop
ljmp
cmp
jo
shll
jmp
adc
pusha
nop
mov
or
addr16
pop
push
mov
inc
and
adc
mov
sbb
add
or
lods
loop
jecxz
xchg
xchg
icebp
mov
mov
stos
mov
mov
adc
dec
jno
add
push
cmp
stos
add
xor
mov
mov
scas
and
adc
jmp
push
mov
inc
cmc
sbb
fbstp
cli
cmp
push
aas
or
jg
std
xchg
jecxz
into
sbbl
scas
dec
adc
mov
dec
inc
jp
imul
and
aaa
push
scas
aam
mov
xchg
dec
adc
push
mov
clc
out
mov
rclb
dec
jle
adc
push
mov
lahf
dec
adc
cli
xchg
xor
dec
push
jo
rorl
push
dec
ljmp
add
fldl
cmp
mov
popa
adc
dec
int
out
bound
fs
cmp
add
call
lcall
test
mov
aaa
sti
fdivrs
push
in
sbb
icebp
dec
dec
stos
add
cmpsb
cwtl
fstpl
das
xchg
fcoms
push
jecxz
jmp
clc
loope
push
in
jg
fs
jbe
aaa
iret
arpl
sbb
inc
mov
adc
dec
test
test
xchg
add
push
fisubrs
mov
push
lret
icebp
cwtl
xchg
xchg
xlat
dec
push
cli
filds
push
imul
fdivrp
adc
int3
push
pushf
add
aam
sarl
mov
push
imul
add
ror
fld
push
insl
sbb
in
adc
mov
mov
test
fbstp
sub
and
add
lea
out
pop
cwtl
jmp
in
mov
and
or
enter
pusha
in
mov
or
decl
mov
bound
inc
mov
pop
out
mov
fists
mov
or
jb
mov
add
sub
mov
sbbb
bound
outsb
mov
inc
add
add
sub
lods
mov
ja
pop
orb
mov
loope
in
rolb
scas
xor
pusha
sti
xchg
push
jno
xor
push
ljmp
pop
pop
ljmp
or
jge
inc
pop
inc
mov
unpcklps
or
mov
mov
cs
push
shr
test
pop
mov
xor
xchg
pop
mov
mov
push
inc
and
aas
xchg
sbb
movsb
cmp
insl
sub
jbe
cmc
dec
jbe
data16
fistpll
std
stos
lock
std
add
cmp
aad
sub
cmp
cmp
incl
push
pusha
xchg
inc
inc
jne
sbb
les
hlt
push
sbb
mov
nop
push
icebp
aaa
cld
decl
lock
jmp
xchg
repz
std
test
push
mov
xchg
mov
out
fs
jg
adc
fs
inc
mov
clc
shrb
xor
adc
push
lcall
int3
jns
or
adc
push
pop
jl
cltd
icebp
hlt
fwait
xchg
outsl
clc
mov
out
ja
mov
jle
hlt
mov
sub
lods
or
push
cmp
clc
add
xor
ja
enter
aam
in
clc
ljmp
daa
pop
pop
push
adc
fiaddl
mov
dec
es
mov
pop
int
sbb
add
mov
sahf
rcll
ljmp
lods
add
and
push
mov
fcompl
adc
adc
sub
pop
cmp
xchg
mov
dec
scas
out
dec
add
push
cmp
mov
push
jmp
jbe
push
jp
outsl
rcll
jecxz
xor
add
pop
outsl
dec
push
inc
push
clc
incl
dec
clc
dec
js
pop
lds
pop
and
outsl
nop
lret
sti
dec
lock
shlb
inc
cmp
xchg
fldl
mov
pop
mov
inc
push
jb
xchg
and
and
aad
or
and
mov
cmp
cmpl
fisubs
inc
xorb
test
mov
fadd
sbb
or
cltd
ss
aaa
cmp
test
pusha
mov
dec
out
gs
loop
or
sub
mov
fdivs
aaa
fdivs
sbb
jecxz
mov
fnstcw
xor
cmp
sbb
push
ret
mov
loop
movsl
popf
or
js
popa
add
and
gs
orl
sbb
pop
mov
or
mov
jecxz
cs
rorb
or
icebp
sub
cmp
loope
hlt
fucomip
and
call
mov
mov
out
cmpsb
gs
xchg
fsubr
push
mov
xchg
shr
push
inc
sbb
lret
mov
xlat
sbb
or
es
sbb
rcr
test
andl
lock
xor
stos
jg
or
inc
pop
test
jmp
lret
ss
pop
fsubs
lret
xlat
push
add
xor
mov
cmp
or
in
xchg
lret
lea
xorl
pop
cmp
stos
and
xchg
dec
xor
dec
in
dec
adc
mov
mov
cld
cmpsb
mov
dec
clc
pushf
xchg
filds
data16
mov
jb
jbe
mov
scas
aam
cli
mov
int
jno
loopne
jbe
int
or
mov
mov
cli
leave
das
mov
fmul
cmp
push
and
lahf
pop
xlat
int3
loop,pt
inc
fdiv
aaa
jg
mov
cmp
jecxz
call
out
cli
cmp
pop
mov
push
dec
ja
test
jmp
push
mov
mov
add
fwait
ss
clc
mov
pop
xchg
jnp
std
dec
dec
loop
mov
jne
cmp
mov
dec
cmpsb
test
jno
push
cs
or
push
mov
pop
aam
inc
mov
pop
fdivrp
or
jg
out
add
notb
neg
repnz
jp
cmp
leave
and
jge
sarb
pop
dec
loopne
dec
sbb
rorb
mov
outsb
push
arpl
and
mov
adc
sbb
jg
int3
add
out
add
mov
std
jmp
xlat
pushf
jl
xor
or
pop
pop
lock
enter
add
mov
fiadds
xchg
sbb
mov
in
push
inc
mov
nop
add
ja
cli
mov
decb
jp
leave
idivb
mov
scas
push
xchg
call
mov
cmp
mov
xor
adc
xchg
mov
lock
ljmp
jl
cwtl
out
push
xor
lret
jg
jl
scas
clc
f2xm1
stc
sbb
das
add
inc
xchg
jno
xor
in
sti
pop
shrl
pop
dec
pop
outsl
dec
push
outsb
ret
out
xor
push
xor
xchg
lock
push
jl
mov
xor
cmp
enter
loopne
dec
adc
mov
pop
jno
js
mov
bound
xchg
xor
jne
out
cli
lcall
popf
sahf
sbbb
ljmp
push
rclb
in
mov
jp
adc
dec
jmp
in
inc
or
pop
popa
jns
movsb
ss
call
add
test
test
mov
mov
xchg
adc
xor
inc
aam
int3
fwait
xor
out
or
mov
xor
int3
mov
sub
sub
xchg
push
clc
sahf
mov
pop
push
lock
sbb
pop
xchg
mov
rcll
push
push
xchg
decl
subb
xchg
subps
stos
mov
lea
xchg
popa
jns
fcomip
sbb
mov
xchg
push
xor
stos
clc
outsl
filds
mov
and
jg
stos
xor
jbe
or
add
out
lods
mov
decl
leave
into
cmp
jmp
jg
cmp
jbe
std
incb
aad
mov
aad
jo
dec
sbb
sbb
jmp
out
fs
mov
and
cli
sbb
data16
ja
inc
das
pop
lret
lahf
in
push
add
aas
push
sub
push
in
out
mov
xchg
aad
jg
lahf
fimuls
mov
and
or
aas
inc
mov
ss
aam
mov
pop
cwtl
test
rorb
stc
out
dec
loop
inc
and
dec
xchg
loop
adc
insl
mov
mov
out
mov
test
rorw
mov
sub
popa
cmpsl
sbb
cmp
notb
cwtl
sub
inc
sahf
clc
aad
cmp
push
loop
mov
scas
out
es
aaa
jg
xor
push
movsb
adc
adc
jecxz
xchg
ja
shl
or
xor
mov
imul
andl
dec
pop
pop
add
jne
int
push
jbe
mov
fdivrl
pop
mov
or
es
inc
aaa
mov
xchg
mov
ss
insl
push
aas
mov
mov
push
mov
cmp
adc
cltd
inc
xlat
int3
mov
jg
jg
xchg
mov
sub
xlat
sbb
mulb
and
fiadds
mov
ss
inc
fldt
mov
shrb
inc
incl
js
and
ljmp
ljmp
dec
xor
into
mov
test
mov
call
inc
push
add
jae
sub
call
test
push
pop
cmp
push
push
sbb
insl
popf
mov
push
jae
adc
outsl
inc
fprem
pop
xor
pushl
mov
cmpl
push
xchg
sub
pop
mov
fidivrs
fstps
push
and
pop
psubw
sarl
and
ljmp
xchg
sub
test
ds
mov
insl
jp
pop
aad
inc
fcomps
fdivr
jg
push
push
sbb
aas
xorb
addr16
mov
cld
roll
lods
jno
xor
mov
inc
or
cmp
imul
inc
sub
mov
loop
mov
push
pop
imul
dec
shlb
and
or
sbb
ret
ljmp
out
pusha
sbb
ja
dec
pop
test
or
mov
fcmovb
adc
data16
mov
stos
push
cmp
sbb
sub
jo
mov
sbb
push
fs
out
pop
add
insb
pusha
add
stc
xlat
scas
add
mov
pushl
inc
mov
xchg
ficoms
ljmp
dec
sub
mov
out
sbb
or
cmp
fildll
ret
pop
sub
outsb
xchg
adc
sarb
xor
incl
jnp
xor
fs
sbb
sbb
into
ljmp
push
ret
xchg
add
arpl
adc
outsb
cmc
sbb
push
or
push
adc
ja
fmulp
jae
xlat
test
mov
pop
inc
dec
dec
fcomi
rol
sbb
push
das
jp
or
int3
andb
loopne
push
or
dec
std
mov
js
mov
push
inc
xchg
cmpsb
add
or
es
mov
je
dec
and
jb
popa
pop
xchg
lcall
xor
iret
sub
mov
mov
pop
out
or
mov
pop
sbb
std
jg
xor
fldenv
test
mov
mov
sub
jae
push
int
jne
lock
fcomip
in
iret
rorb
mov
dec
clc
pop
outsb
shrl
dec
pop
sbbb
xor
dec
enter
cli
mov
scas
out
push
pop
adc
dec
in
pusha
mov
dec
cli
inc
adc
popf
adc
ja
mov
mov
mov
jg
fwait
inc
cmpsl
xchg
and
mov
decl
xor
lcall
mov
sbb
shl
or
divl
inc
ret
cltd
mov
cld
add
push
adc
and
adc
jo
in
mov
mov
pop
dec
jp
cmp
clc
popf
inc
bound
inc
test
lods
cwtl
and
clc
jmp
or
fdivrp
mov
sar
incl
jno
jg
sbb
mov
adc
call
xlat
call
cmp
dec
sbb
mov
cmpsl
in
cmp
mov
rcrb
cmc
sbb
pop
in
jecxz
cli
rorl
sbb
ja
sar
enter
in
pushf
nop
push
scas
push
gs
or
jae
push
jo
pop
test
repz
fstl
movsl
fidivl
ljmp
or
xor
inc
addr16
fcmovnbe
push
mov
xor
mov
lret
hlt
std
fistl
push
inc
mov
add
push
push
inc
out
out
push
inc
xor
orl
stos
sbb
mov
in
push
fistpll
shll
xor
cld
fs
mov
lds
xor
aas
sarb
int3
lcall
push
xchg
cmp
and
lds
retw
ljmp
sbb
jge
sub
add
inc
sbb
js
popf
mov
adc
pop
sbb
out
dec
add
xchg
mov
test
add
inc
jb
int3
xor
and
scas
shlb
das
popw
cmpsl
dec
ret
cli
mov
jo
dec
mov
and
shl
jg
lds
cltd
test
faddl
test
mov
xchg
add
add
out
and
cmp
icebp
push
es
repnz
incl
lds
jo
outsl
sbb
cmp
sub
push
fmull
out
xchg
icebp
aaa
push
lahf
in
jnp
test
mov
loop
aaa
pop
dec
into
movsl
stos
cmp
jp
jns
pop
inc
xor
sub
add
fsubp
enter
pop
jmp
hlt
cltd
out
and
mov
push
dec
lods
xlat
inc
scas
mov
fidivrl
mov
sub
cmpb
dec
pop
data16
inc
loope
js
dec
push
cmp
and
or
inc
mov
add
sub
mov
das
jb
pop
mov
pop
adcb
pop
sti
add
outsl
out
push
fs
jno
jl
adc
call
jg
imul
bound
rclb
fistps
lret
insb
fsubrl
lcall
xchg
fsubr
jno
sbb
xchg
lds
hlt
roll
cmp
outsb
and
cmp
decl
jne
ja
jb
mov
mov
loope
jg
push
sbb
jmp
jnp
stos
les
xchg
sar
stos
add
mov
rclb
js
xor
pop
ret
and
insl
dec
mov
lcall
sbb
and
mov
dec
push
popa
dec
push
mov
cld
fwait
push
fdivl
mov
mov
divb
mov
clc
icebp
mov
adc
pop
adc
popa
lea
mov
or
hlt
mov
and
shl
mov
pop
mov
mov
jecxz
cmp
fisubs
adc
in
adc
and
test
or
gs
mov
cmc
enter
xchg
cmp
mov
js
jb
lock
into
pop
adc
mov
add
mov
cld
push
xchg
rorl
cmp
sbb
loop
pop
test
test
insl
mov
jg
or
aam
cltd
mov
jo
inc
mov
inc
xchg
jnp
add
cmpsl
scas
call
lock
cld
outsl
jg
add
add
daa
mov
fistps
inc
in
scas
push
fisubrs
fsubs
dec
mov
stos
sbb
push
xorb
adc
jl
pop
add
out
inc
js
ret
mov
int3
aad
xchg
inc
dec
frndint
pop
xor
mov
test
jp
mov
repnz
ljmp
in
mov
cld
pop
out
loope
mov
pop
dec
mov
jmp
mov
and
jns
fwait
lcall
fmuls
in
outsl
or
inc
jo
mov
aaa
push
rorb
ret
jbe
inc
cmp
outsl
sub
mov
je
jl
lret
inc
outsb
or
nop
inc
aas
pop
clc
dec
sbb
push
pushf
or
fmuls
ds
es
mov
sahf
scas
cli
lcall
loop
and
shll
popa
mov
adc
mov
test
out
or
dec
lods
insl
test
scas
sbbb
fbstp
xchg
cmpsl
xchg
xor
insb
in
das
jnp
sbb
mov
inc
pop
xorl
lret
mov
jne
dec
sub
lods
jge
push
jecxz
pushl
pop
sub
cmpsb
in
call
call
mov
fisttpl
push
jge
loopne
pop
mov
or
sti
out
scas
and
inc
mov
fwait
and
dec
xor
fcom
pusha
jecxz
inc
mov
fcoms
jge
pop
pop
mov
int
lret
sub
aaa
test
mov
fs
fcomip
ret
clc
mov
and
pop
test
or
cs
shrb
and
ss
xor
ljmp
sti
push
jnp
xor
cs
sub
test
fbstp
je
fcoml
inc
mov
aam
add
outsb
faddl
add
xor
std
push
mov
arpl
pop
cmp
mov
xorl
lcall
dec
test
or
out
inc
imulb
inc
divb
cmp
call
mov
or
jge
mov
mov
movsl
jecxz
cld
mov
dec
and
nop
vmovhps
ljmp
inc
lahf
rclb
inc
adc
imul
pop
dec
sar
imul
xchg
aad
pusha
mov
add
mov
loope
call
scas
movsl
frstor
inc
lds
outsb
aad
sbb
stos
gs
xor
lea
pop
icebp
mov
cmp
rclb
test
push
decl
push
fdivrl
gs
movb
push
fcompl
mov
dec
sbb
stc
out
movsl
jb
mov
out
adc
push
movsb
push
mov
lods
ror
fildll
jo
push
mov
ds
imul
pushf
push
mov
pop
mov
push
into
cld
int
mov
lock
in
hlt
fildll
jns
adcb
mov
cld
lcall
push
test
pop
sub
xchg
ljmp
lret
jbe
test
leave
jg
mov
aam
or
cmp
nop
call
sbb
clc
fstp
imul
jo
jae
insb
mov
xor
das
fdiv
fisttps
mov
movsl
fisttps
add
repz
mov
jg
sub
out
mov
sub
mov
les
bnd
data16
clc
das
cli
insl
add
ja
push
inc
rcrl
or
add
push
sbb
fisttps
fs
jmp
mov
imul
data16
in
pop
mov
dec
stc
pusha
mov
jmp
fwait
add
pop
sub
inc
jge
aas
ss
sub
adc
cld
out
push
clc
adc
pop
aam
and
cmpb
aam
icebp
cmp
hlt
add
clc
movb
mov
sbb
xorb
das
shrb
aaa
add
mov
int3
aad
pop
test
shrb
lods
sub
int
addb
addr16
jecxz
fisttpl
mov
jbe
and
pop
loop
shrb
lcall
jno
cli
or
xchg
fists
xlat
ret
mov
sub
jne
shr
mov
push
dec
decl
xor
push
call
or
ds
fidivl
jge
push
push
or
or
fs
sbb
or
scas
orl
or
cwtl
repnz
test
or
sbb
ds
data16
fldenv
notb
add
adc
mov
dec
sbb
xchg
in
lods
cli
decl
push
jmp
fcmovnb
inc
movsb
add
pop
cmpl
test
inc
pop
hlt
int
shrl
iret
xchg
cmp
jb
out
pop
add
outsl
add
dec
rcrb
pop
icebp
stos
mov
jecxz
dec
stos
outsb
inc
ficoms
stos
push
das
inc
sti
aad
jl
jg
cmpl
or
jg
mov
push
shlb
mov
jl
mov
sahf
hlt
popf
push
in
adc
jo
mov
lock
adc
mov
nop
icebp
or
push
fsubl
jg
ficoml
divb
clc
jno
xor
jns
jecxz
sub
push
ficomps
and
jbe
ljmp
lret
sbb
sarb
mov
or
adc
mov
push
adc
xorb
xor
dec
loopne
or
stos
pop
xor
cli
loopne
int
cld
mov
dec
jp
rsqrtps
lahf
out
lcall
test
sub
push
dec
shrb
jmp
mov
popf
cmpsb
cmp
das
dec
enter
psllq
decl
shrb
icebp
push
mov
xor
mov
out
cmp
mov
jg
mov
call
or
mov
loope
dec
leave
testb
inc
add
dec
dec
hlt
adc
sub
jg
leave
cmp
lods
and
pop
jl
push
cmpl
or
pop
ret
xor
ds
mov
add
lods
clc
mov
fnstcw
ret
fcmovu
push
ret
dec
ret
sbb
insl
push
in
ja
inc
or
push
cmpsl
add
inc
sub
jg
jg
dec
or
js
mov
loop
vmptrst
aaa
in
pop
and
mov
jo
dec
loope
divb
arpl
inc
test
lahf
sub
ret
add
mov
pop
daa
cmpsb
cmp
mov
inc
decl
adc
xchg
xorl
mov
mov
subb
adc
imul
clc
jb
mov
jge
pushf
ret
mov
int3
jmp
iret
sahf
xchg
mov
dec
pop
jns
fidivrl
imul
mov
or
decl
mov
jl
mov
mov
cmp
stos
cwtl
std
pop
inc
add
das
adc
in
jmp
mov
sbb
aas
test
inc
fs
push
ss
cltd
test
mov
pusha
push
cli
ljmp
mov
jp
fwait
jmp
pop
je
dec
pushf
and
or
adc
incl
sub
ud2
jnp
nop
ret
loopne
mov
dec
ficoml
pop
push
mov
jge
jmp
add
mov
mov
es
aad
in
sar
pusha
loope
hlt
arpl
cwtl
pop
fwait
repz
inc
insl
in
lret
pop
std
out
mov
negl
pop
push
mov
movsb
add
adc
fcomp
stos
addb
out
inc
xor
xor
daa
addr16
cmp
mov
inc
push
xchg
sbb
push
sub
pushf
xchg
sbb
xor
lods
int
or
mov
aaa
push
ja
decl
popa
arpl
push
xchg
popl
mov
call
fisubl
add
orb
js
sti
ss
call
pop
xchg
je
or
ja
das
popf
add
mov
call
stos
call
popa
rol
fists
cmc
addb
jbe
inc
sub
test
mov
mov
dec
adc
and
lret
aam
bound
cmc
fldcw
inc
push
stos
mov
jle
daa
dec
test
adc
pop
inc
aam
pushl
inc
out
adc
sbb
cwtl
cmpsl
xchg
scas
sbb
sub
ljmp
call
insl
push
in
loopne
mov
fdivrp
mov
or
or
jge
call
xchg
mov
loope
out
xchg
xchg
ljmp
mov
inc
pushf
jmp
push
insb
stos
dec
pop
das
jbe
fdivrp
add
jmp
js
sahf
shll
push
leave
je
cld
dec
xlat
or
lahf
inc
popa
sbb
or
jl
push
out
or
or
mov
add
mov
cld
in
jmp
or
test
stos
sub
mov
push
push
outsl
fwait
lahf
inc
cmpsb
mov
sbb
rcr
inc
push
mov
mov
adc
push
xor
xor
call
xor
cmp
and
outsb
ljmp
push
pushl
pop
pop
imul
sbb
mov
sub
xchg
mov
dec
sub
dec
push
int3
pop
fs
mov
mov
xchg
aam
push
xchg
scas
mov
sbb
mov
jecxz
inc
dec
jecxz
xchg
fldenv
mov
and
add
clc
or
mov
add
mov
std
lret
sub
decl
call
mov
add
arpl
xor
clc
mov
pop
and
pop
xlat
and
addb
add
dec
fiadds
stos
fwait
xor
pop
lahf
sbb
aaa
lret
mov
les
lock
negb
mov
inc
jne
add
push
dec
insb
add
rcrl
push
mov
cmp
mov
in
imul
idiv
pusha
das
negb
mov
pop
adc
fidivrl
sub
addr16
push
mov
dec
sbb
inc
js
orl
mov
mov
clc
jecxz
jp
sti
pop
daa
outsl
ret
sbb
sub
pop
and
sub
cmp
mov
div
jb
jge
shll
mov
xor
incb
cli
dec
loope
fcoml
shlb
dec
aaa
jmp
jle
fidivs
insl
or
jl
in
fmull
stc
adc
pop
test
push
pop
mov
cwtl
ficompl
jg
push
lea
sub
lret
mov
cmc
stos
dec
add
mulb
out
push
push
mov
decl
mov
mov
loope
arpl
fs
scas
and
or
dec
mov
sub
mov
sti
orl
inc
clc
add
and
or
cmpsl
dec
mov
or
test
or
mov
inc
std
fbld
jmp
shll
jns
jg
or
mov
jnp
incb
mov
aas
jle
lcall
popf
push
xor
or
cld
decl
lcall
jmp
pushl
jge
cld
mov
je
adc
sub
aaa
je
mov
push
mov
mov
add
popa
adc
add
cwtl
divb
out
xchg
pop
xchg
lcall
or
loop
mov
push
mov
xchg
out
push
bound
mov
imul
jle
add
push
out
mov
paddusb
idiv
das
sbb
inc
dec
inc
aam
cmpsb
out
ja
ja
mov
add
jg
test
mov
test
add
xchg
movsb
mov
js
fistpll
xor
mov
adc
xor
sub
mov
xor
andl
mov
ds
push
jae
lods
subl
add
mov
push
idiv
incl
and
repnz
stos
lods
dec
data16
cmpb
pusha
nop
test
adc
std
inc
mov
mov
inc
adc
jns
inc
out
cwtl
xchg
lock
xchg
ljmp
dec
lcall
das
cmp
push
mov
lahf
sqrtpd
inc
xor
movsb
cmp
negl
sbb
add
in
ficomps
add
jo
out
jg
inc
push
scas
add
sbb
sbb
movsb
cmpsb
jbe
or
es
xchg
and
pop
es
lds
xchg
xlat
scas
clc
jmp
sbbl
mov
inc
xchg
sbb
fiaddl
adc
adc
pop
cmc
jno
sbbb
push
sub
mov
popf
and
out
pop
mov
cmp
sbb
daa
sbb
icebp
es
inc
xor
or
dec
lock
stc
push
add
lea
push
cli
inc
and
scas
mov
mov
in
incl
and
push
out
fs
icebp
out
pop
mov
mov
mov
sbbl
push
insl
cli
mov
cmp
aad
movsb
sub
fwait
into
clc
lcall
ret
jno
daa
add
ja
jnp
push
and
inc
ret
xor
movlhps
cmp
xchg
cld
in
adc
out
add
and
lret
lcall
cmpsb
inc
cmp
add
jle
stos
cs
mov
shll
arpl
sbb
cmp
gs
mov
mov
js
and
sbb
mov
bound
scas
imul
std
pushl
daa
inc
add
sahf
adc
xor
sbb
movsb
sub
push
xor
or
sub
mov
aas
sub
cmp
shrb
inc
arpl
pop
insb
mov
xchg
cld
xchg
mov
or
cltd
xor
push
push
pop
lcall
or
xchg
add
movsb
adc
add
xor
push
popa
es
jbe
inc
pop
ret
jle
pusha
hlt
pop
in
scas
clc
sbb
mov
ja
aaa
cmc
mov
sahf
ljmp
mov
sbb
sub
push
fidivrs
and
push
or
ret
mov
fmuls
inc
adc
cld
inc
movsb
sti
faddl
filds
rcl
mov
loopne
cli
in
sbb
pop
jmp
push
dec
or
into
or
int3
jbe
inc
lock
mov
jp
cwtl
xor
bound
mov
push
sbb
ficoms
mov
inc
xchg
cmp
enter
mov
iret
inc
pop
push
cli
jg
ja
fs
push
dec
dec
fstpl
adc
and
pushl
xor
push
jecxz
push
out
pop
lret
jmp
xor
lock
fdivr
incl
inc
popf
mov
subb
popa
clc
mov
mov
cmp
mov
push
nop
push
pop
rclb
pop
mov
aas
test
or
cwtl
bswap
pushl
sahf
in
loop
add
push
inc
or
cmpl
and
jmp
mov
out
or
outsb
ljmp
std
outsl
cli
lds
push
gs
lret
mov
daa
fiadds
mov
push
pop
ds
pop
jne
mov
bound
inc
lock
shl
inc
mov
add
fcmovnbe
cmp
xchg
repz
mov
pushf
adc
stos
arpl
push
faddp
out
aaa
xor
xchg
into
inc
in
add
scas
js
les
add
mov
mov
push
aaa
inc
mov
lds
cmpsb
dec
js
movsb
pop
or
hlt
nop
mov
fs
scas
je
jecxz
jae
inc
cs
dec
lret
add
or
pop
sbb
cs
mov
pop
cmc
dec
mov
mov
xor
and
add
add
jg
ljmp
rclb
pop
out
cli
int
mov
or
out
rcr
add
sbb
sbb
jp
lock
pop
loope
in
movq
inc
cmpb
je
idiv
xchg
xlat
add
movsl
mov
sub
push
cld
adc
sbb
cmp
dec
icebp
call
scas
cmp
aaa
mov
insb
push
clc
aaa
insl
or
jb
dec
sbb
cmp
sub
incl
inc
sub
shr
mov
lods
or
fbld
sbb
cmc
arpl
inc
scas
aaa
fcmovnb
bound
push
mov
lea
insb
or
ret
sbb
bnd
pop
sub
pop
push
and
pusha
scas
in
jbe
movb
ljmp
aas
not
sbb
cmpsb
mov
add
das
pop
push
add
sbb
fistpll
test
fcoml
dec
mov
clc
fisttpll
cmp
rorl
jne
testl
sub
sub
mov
mov
dec
call
fsubrl
mov
mov
pop
dec
sbb
in
adc
int3
xchg
sbb
cmp
stos
fmuls
dec
cld
inc
adc
push
or
aam
and
loopne
xchg
cli
fiadds
insl
shll
jg
push
adc
das
adc
call
mov
xor
jns,pt
mov
out
bound
jle
cwtl
pushf
outsl
push
dec
shrb
outsl
jl
pop
jnp
das
cli
stos
fcmovbe
imul
cmp
cmc
dec
mov
xchg
cli
cmc
movsl
outsl
jb
sbb
push
enter
iret
mov
mov
jo
ficoms
jbe
sbb
stos
inc
mov
addr16
inc
or
add
cmpsb
andl
add
or
call
xor
lds
ds
inc
mov
ljmp
mov
inc
pop
or
inc
pop
cmpsl
test
jb
std
add
inc
and
sahf
pusha
out
cs
lea
les
sbb
xor
jl
decl
mov
or
sbb
std
or
add
lret
scas
punpcklbw
pop
jl
cmp
xchg
stos
mov
dec
pop
push
outsl
cmp
std
jg
jnp
xchg
call
mov
test
icebp
dec
ljmp
push
loopne
mov
sbb
xor
and
aas
ret
mov
sbb
ja
mov
sbb
loop
push
xchg
out
movsl
scas
cmp
sbb
nop
ljmp
and
or
jb
pop
mov
in
enter
mov
lock
out
inc
je
inc
cmp
and
das
es
pushf
xor
test
es
imul
insb
aas
int3
add
popf
ficoml
out
push
pop
js
test
cli
inc
adc
aad
enter
adc
mov
mov
out
ds
mull
dec
leave
xchg
inc
repz
out
and
addr16
sbb
lret
pop
push
leave
out
jmp
stos
add
aaa
dec
shrl
es
stc
inc
push
mov
std
outsb
or
xchg
jbe
loop
mov
rcr
jne
orb
out
pop
inc
cmp
xlat
mov
shll
repz
cld
xor
in
repnz
xchg
jns
hlt
push
sbb
pop
hlt
cmpsb
movsb
mov
outsl
pop
jo
aad
aaa
fcomps
push
jp
pushf
push
push
outsb
lods
jl
subb
ss
add
out
jmp
adcb
call
aas
mov
jns
cmpsb
inc
icebp
ret
push
test
sub
push
rorb
cmp
ljmp
add
fcompl
ret
add
pop
jg
sub
lock
dec
aam
adc
loopne
ficoml
hlt
fwait
mov
insl
inc
lcall
idiv
xchg
popa
daa
into
clc
rcrl
mov
testl
mov
dec
sahf
cmp
inc
repz
je
inc
mov
cmp
mov
sbb
movb
ss
jae
daa
add
mov
mov
cmc
jp
pop
push
repz
shll
xchg
adc
xchg
aaa
clc
dec
xor
pop
adc
mov
and
xchg
pop
iret
insb
push
jbe
inc
and
std
jbe
xchg
addr16
push
push
mov
and
pop
test
xchg
dec
and
mov
add
inc
andl
mov
aam
and
jle
push
inc
aam
mov
add
mov
test
lahf
adc
add
les
cli
jae
mov
mov
fcomip
call
outsb
aas
cmpsl
in
mov
shlb
push
call
jle
nop
jbe
xchg
pop
push
lcall
add
out
mov
dec
or
mov
in
das
xor
cmp
arpl
roll
arpl
lods
dec
and
gs
ret
lret
cmp
lods
sub
jbe
loop
ljmp
push
cmp
cltd
cltd
and
shld
add
xor
inc
mov
jne
pop
test
mov
xchg
dec
cmp
adc
jb
loop
ret
out
jmp
pop
scas
out
test
ror
dec
sbb
mov
outsl
test
shll
rorl
adc
dec
pop
cmp
jb
mov
clc
pop
inc
xchg
ljmp
xchg
mov
mov
jp
push
jge
fsubs
popf
mov
mov
xchg
adc
or
setbe
test
clc
jne
je
dec
jo
fwait
sub
sarb
or
inc
mov
dec
mov
lret
js
test
sbb
sub
inc
test
and
ja
cmp
pop
push
mov
sbb
dec
jl
adc
pushf
and
cmp
inc
inc
jmp
repz
es
adc
pop
in
push
insl
mov
add
add
fs
sarb
add
mov
pop
mov
pop
sbb
cmp
push
dec
les
addr16
js
jmp
in
mov
pop
xchg
mov
jle
and
lahf
out
add
fdiv
jg
jecxz
push
fists
loop
mov
jbe
cli
mov
push
xor
aam
cs
insb
push
adc
mov
addr16
loope
call
fdivrl
mov
pop
sahf
scas
or
add
dec
shrb
add
inc
mov
incl
cmpsl
in
aaa
adc
outsl
mov
pop
xor
mov
or
jno
in
push
push
xchg
dec
rorb
adc
add
mov
ljmp
pop
aam
jmp
mov
push
out
mov
sbb
lcall
pop
and
add
fwait
jg
dec
std
push
cs
pop
int
jmp
xlat
ljmp
imul
leave
inc
rolb
incl
jg
xor
loope
aam
movsb
push
mov
les
outsl
xor
jl
push
sbb
jmp
decl
jb
adc
repz
out
movsb
mov
or
or
pop
mov
sub
in
dec
fbstp
xor
mov
stos
mov
or
lret
mov
inc
ljmp
iret
ss
sub
mov
add
push
int3
xor
mov
js
mov
nop
aaa
rep
sbb
popf
push
fs
cmpsb
push
enter
idivb
jle
rolb
dec
pop
je
imul
vhaddps
push
dec
push
and
lds
and
mov
decl
fistl
mov
push
inc
pop
faddp
or
decl
arpl
or
mov
orl
ret
add
or
aad
mov
push
pop
rclb
hlt
inc
push
jbe
lock
lret
add
sahf
sub
sub
or
jle
vrsqrtss
mov
sahf
roll
jg
dec
sbb
sbb
shl
clc
lock
add
mov
data16
mov
mov
or
out
add
or
filds
lcall
mov
lock
cld
sbb
mov
xchg
out
xor
cmp
roll
mov
cmp
insl
lods
test
or
js
lret
cld
ss
stos
xchg
and
sub
data16
jmp
shrl
push
arpl
es
bound
sub
sub
addr16
shll
adc
mov
mov
pop
icebp
or
js
or
or
mov
movsl
push
les
jg
pop
aad
cli
fstps
add
ja
movsl
add
sbb
icebp
into
mov
into
or
sub
popa
mov
adc
mov
add
mov
jp
mov
mov
mov
mov
imull
out
sbb
cmp
push
xor
fists
leave
not
mov
icebp
loopne
out
bound
and
fisubrl
or
push
fnstsw
repnz
outsb
dec
jne
out
pop
add
dec
int
xchg
sbb
add
test
arpl
loope
dec
adc
mov
insl
sub
dec
jp
jg
sbb
and
xchg
cltd
popf
adc
jle
pop
dec
cmp
or
mov
or
mov
push
dec
rolb
shlb
xor
mov
xchg
loop
xor
cmp
dec
jl
mov
mov
sarl
scas
lock
push
mov
lahf
inc
jecxz
mov
dec
cld
push
sbb
add
cli
aad
mov
rcrb
lahf
movsb
call
stos
mov
inc
dec
pop
decl
mov
lock
or
out
test
or
inc
sbb
pop
jle
adc
inc
fcoml
mov
bound
cmp
adc
xchg
push
icebp
cli
cs
fstps
push
cli
push
add
dec
push
lock
test
sub
sbb
or
fdiv
and
mov
cli
mov
fwait
sahf
movsl
add
pop
sbb
add
add
mov
data16
jge
mov
or
repz
in
adc
jmp
std
cmpsb
mov
dec
scas
xchg
in
jl
pop
pop
xchg
and
and
lock
adc
push
fwait
pusha
std
jg
cmp
lcall
inc
imul
mov
mov
or
div
in
int3
std
es
pop
push
in
aam
inc
xor
aad
push
push
in
les
vmovdqa
stos
test
enter
mov
imul
into
jle
ss
insl
dec
aaa
inc
leave
aaa
sahf
push
jle
icebp
mov
std
add
lock
scas
ffreep
and
hlt
lahf
pusha
fdiv
stos
cltd
roll
dec
sub
mov
mov
test
in
mov
lahf
lock
add
xor
out
xor
xchg
fsubl
call
testl
test
mov
mov
leave
push
addr16
adc
cmpsb
mov
add
mov
cmp
ret
repnz
sub
cltd
jp
ret
pop
jle
or
cmp
out
repnz
in
mov
pop
hlt
pop
add
mov
or
lock
pop
ljmp
pop
dec
cmp
roll
aam
mov
aas
js
stos
ljmp
adc
lcall
cmp
add
insb
mov
pop
push
cmpsb
stos
jl
data16
jno
lea
cmp
imul
pop
lock
int
lcall
call
cmc
mov
nop
pushf
or
inc
jg
std
shrl
mov
pop
push
inc
add
ljmp
mov
add
or
jg
out
sbb
mov
pushf
and
mov
push
sti
cmp
inc
incl
imul
dec
cmc
fsubrs
dec
jecxz
popa
inc
jl
pop
shld
es
add
into
ss
test
mov
inc
pop
repz
sbb
ljmp
les
jnp
jmp
mov
loopne
mov
daa
dec
sub
insl
push
inc
adc
popa
cld
mov
dec
stos
imul
jg
mov
push
sbb
call
div
jns
mov
sti
ljmp
dec
sarb
adc
xor
push
hlt
pop
decl
es
fnsave
out
xlat
inc
lds
bound
push
xor
cld
jecxz
scas
mov
cmp
xchg
test
xor
push
pop
xchg
sub
std
xor
mov
data16
xchg
ljmp
cli
jne
mov
push
stos
push
lret
pop
add
inc
or
icebp
fs
ja
insl
fdivs
pop
lds
adc
xchg
fsubr
sbb
add
mov
andl
mov
push
inc
sub
jnp
insb
pop
mov
das
mov
lods
xor
sub
sub
fs
shlb
out
sbb
bound
sbbl
outsl
jecxz
mov
xchg
sub
jg
mov
ret
ffree
and
push
scas
dec
lret
es
fisttpl
push
cmp
pop
lock
sbb
neg
dec
or
and
adc
sbb
xchg
movsl
jmp
add
pop
sbbb
and
cwtl
fs
cli
mov
sub
cs
ja
add
jge
and
inc
mov
mov
arpl
popa
lds
mov
insb
mov
mov
push
popa
dec
sbb
jl
mov
dec
push
sahf
mov
jne
mov
push
jne
inc
push
xchg
mov
es
je
jecxz
enter
jge
xor
loop
aas
testb
xor
stos
lcall
xchg
inc
sub
outsb
cld
xchg
bound
shlb
mov
repz
jmp
xor
push
rclb
pop
mov
sahf
add
mov
outsl
pop
lret
cmp
inc
mov
pushf
popa
aas
jg
orb
jl
mov
xor
loope
mov
add
xchg
and
xor
jl
sbb
inc
jae
shll
cmc
jg
mov
sbb
xor
mov
push
adcl
lock
dec
in
fisubl
adc
pusha
mov
std
cs
fidivrl
loop
adc
ret
sub
sbb
sub
push
lods
ss
jne
ret
out
push
and
dec
dec
ja
iret
dec
inc
imul
in
jmp
xor
and
out
js
popa
clc
clc
pop
adc
pop
xchg
lds
sbb
push
inc
test
jmp
pusha
mov
lea
adc
cmpb
nop
test
sub
test
jg
enter
cmp
fldt
sbb
call
icebp
push
push
test
rcll
or
and
iret
mulb
mov
mov
pusha
das
push
negb
jecxz
rclb
jo
outsb
imul
jle
jbe
scas
fisubrs
loop
ljmp
cmpl
add
fs
int3
pop
in
or
and
push
or
lcall
sbb
pop
rcl
lret
xor
rcrb
mov
jle
dec
push
movsb
lcall
ss
cmp
cmp
in
in
jecxz
lcall
jo
mov
jle
fmuls
loope
stos
dec
mov
in
sbb
dec
inc
add
mov
mov
push
jne
cmpsb
test
xchg
rclb
cmp
cmp
test
push
lcall
sahf
sub
add
adc
jnp
mov
push
adc
cmp
mov
jg
pop
xchg
mov
jle
add
repz
aas
dec
mov
and
cmp
stos
ja
adcl
lahf
aaa
pop
cld
mov
sub
cltd
jle
test
push
stc
mov
dec
jmp
or
sarl
lock
bnd
daa
push
aam
ds
mov
push
jbe
push
sbb
popa
in
mov
hlt
aam
repz
sub
inc
sbb
pop
jo
jle
rcrl
ret
aam
decl
push
call
and
sahf
xchg
and
and
inc
push
leave
rclb
jo
or
inc
pop
test
hlt
ljmp
cmp
add
xchg
jns
je
sti
and
out
sbb
adc
lcall
jo
dec
inc
xchg
xor
mov
pushl
inc
aas
or
shlb
push
mov
cli
cmp
aaa
inc
inc
dec
into
xchg
jl
pop
adc
pop
push
fadds
in
fdivp
mov
movsl
sahf
data16
inc
insl
mov
pop
pop
xor
jne
push
fdivr
xor
xchg
mov
cmpb
and
mov
sarb
stos
pusha
cld
decl
push
repnz
xor
xor
decb
dec
outsl
xchg
stos
insl
jecxz
outsb
sbb
cltd
sbb
push
test
negb
cmp
in
pop
add
push
push
movsb
fnstenv
shrl
jno
fdivl
cmp
shlb
mov
mov
add
movsb
cmp
rolb
fsubs
test
call
mov
pushf
imul
pusha
es
add
mov
outsb
loope
rcl
mov
lods
dec
xchg
cmc
push
bound
scas
mov
filds
mov
add
std
xchg
lcall
call
pop
outsl
cmp
lods
nop
js
dec
aam
add
pop
dec
loope
jg
sub
add
scas
cmc
cli
lods
loop
add
pop
lret
clc
scas
add
push
bound
sub
push
fwait
xchg
add
adc
out
jmp
dec
mov
add
mov
js
or
mov
xor
xchg
fldcw
sbb
ljmp
hlt
or
in
fiadds
nop
das
fchs
stos
mov
push
dec
test
dec
or
pop
or
push
out
jno
out
jns
rcll
or
mov
push
std
dec
bound
gs
inc
pushf
mov
or
push
and
mov
dec
add
lret
js
mov
adc
lds
push
cld
pushl
es
xlat
movsl
mov
mov
sti
test
pop
inc
push
mov
test
adc
mov
mov
test
pop
pop
push
dec
inc
mov
mov
push
mov
jo
and
test
test
gs
in
orb
andb
jo
nop
sub
cmp
int
mov
or
mov
loop
mov
inc
lret
add
mov
in
sub
xchg
jo
cli
xchg
test
jl
call
push
in
and
mov
pop
push
push
pop
repz
stos
pushf
xor
jo
or
loop
jnp
push
inc
adc
cmp
andb
xchg
pop
popa
outsl
call
inc
mov
push
xlat
std
inc
test
mov
pusha
pop
icebp
xlat
divb
inc
adc
push
aas
mov
bound
fistl
sbb
add
push
cmp
test
add
cmp
fdivs
cmp
push
sbb
dec
add
jge
mov
in
jg
pop
adc
je
imul
sub
xor
adc
sub
sbb
outsl
push
call
jne
add
pop
lock
mov
ds
or
ljmp
imul
jecxz
mov
enter
std
inc
adc
daa
push
or
xor
inc
add
fwait
imul
pusha
jbe
or
xchg
sbb
mov
pop
pop
mov
cld
repnz
cmpb
popf
adc
jmp
les
or
adc
jb
mov
lret
nop
hlt
lock
pushf
retw
inc
pop
js
pop
and
cmp
sub
and
lods
jg
ja
pop
imul
sub
jmp
shll
jecxz
test
add
and
je
mov
and
xor
inc
dec
movsl
jbe
or
decl
xor
mov
pop
dec
fmuls
lcall
mov
sarl
xchg
js
sbb
inc
push
sbbb
ljmp
arpl
std
stos
mov
rclb
cmp
shlb
mov
int
loop
lods
add
mov
and
mov
lods
inc
loopne
ljmp
ja
fdivs
push
stos
mov
add
push
dec
sub
mov
mov
aad
movb
and
xor
cmp
or
pop
mov
sahf
dec
cli
stos
mov
cmp
mov
jmp
ds
mov
push
mov
pop
jno
sub
adc
inc
cmc
pushf
lods
out
cld
fisubrs
dec
fwait
mov
mov
iret
and
insl
sub
inc
sbb
in
arpl
xor
push
lods
cmp
pop
and
jnp
push
adc
cli
pop
shr
insb
push
outsl
dec
paddd
pop
fsubrp
scas
or
es
sbb
mov
dec
loope
add
pop
mov
sbb
stc
xchg
cld
cmp
lcall
inc
in
imul
je
add
dec
and
push
mov
mov
es
jmp
dec
lret
mov
es
push
in
xlat
jns
lcall
xchg
jp
ss
sti
fsubl
cltd
xchg
scas
nop
jecxz
inc
movl
push
flds
mov
mov
sub
repnz
popa
sbb
sub
mov
dec
xchg
lahf
inc
xchg
cli
lods
sbb
call
mov
in
add
and
or
or
add
jg
call
pop
mov
add
jns
xor
add
mov
loop
dec
incl
xor
mov
int
mov
or
fnstsw
jecxz
adc
sbb
dec
icebp
ret
pusha
sub
fistpl
mov
fwait
mov
lcall
aaa
jbe
ljmp
xor
cmp
rcr
cmp
mov
test
out
call
je
pop
ss
push
or
mov
fisubrs
cmpsb
and
fs
push
pop
mov
or
shl
pusha
xchg
fwait
sub
fwait
nop
data16
outsb
rorb
sbbb
std
sahf
fs
notl
mov
stos
pop
push
cli
insl
movsl
movsl
adc
rclb
dec
in
std
mov
cmc
fnstsw
pusha
dec
pushf
pop
and
movsl
inc
sbb
sbb
jmp
xchg
mov
xchg
mov
sub
outsb
adc
clc
fwait
popa
test
dec
ficomps
inc
jle
mov
das
in
pop
cmp
movsb
insb
mov
pop
adcb
xchg
fbld
rclb
mov
add
call
ds
repz
ljmp
std
sbb
jbe
in
movsl
pop
loop
std
decl
in
addl
dec
and
clc
es
insb
insb
adc
pop
sarl
imul
shll
lea
mov
les
jle
inc
in
jno
or
shrl
xchg
jle
ss
add
test
pop
imul
pop
or
inc
stos
in
call
add
scas
push
push
inc
cmpsb
mov
loopne
cmp
pop
jbe
lahf
jecxz
call
or
dec
cmpsb
adc
das
push
ljmp
xchg
loope
cli
mov
ficompl
popl
inc
int
push
scas
das
inc
mov
pop
fucomi
faddl
jmp
ficoms
in
push
mov
jl
jno
sbb
push
rolb
push
fimull
push
cmp
mov
outsl
clc
dec
xchg
fwait
repz
out
lret
das
js
lret
push
add
ljmp
es
popf
in
sub
shll
sbb
mov
xlat
mov
dec
xchg
cld
pop
push
xchg
dec
sub
push
roll
out
add
mov
fisubrl
push
xor
dec
cmp
sub
fisubl
add
xor
sbb
sub
pop
fisttps
out
in
and
xchg
mov
gs
or
push
inc
or
jg
xor
dec
mov
clc
shr
es
lods
lahf
fidivrl
adc
adcb
mov
adc
sub
test
out
das
mov
jmp
mov
xor
mov
push
xchg
inc
mov
notl
xor
add
jno
adc
xor
fcompl
mov
out
popf
xchg
cld
in
das
pop
push
xor
cmp
push
fdivs
or
cli
xchg
ds
nop
in
and
mov
stos
jecxz
jo
or
xchg
jbe
es
push
fcompp
inc
xchg
mov
and
or
or
xor
dec
call
mov
push
negb
gs
pop
jg
mov
add
xchg
mov
cli
jl
jp
mov
je
movsb
shrl
cli
out
mov
insb
xchg
test
inc
inc
push
ljmp
test
xor
pop
adc
inc
pop
jle
shrb
dec
cli
mov
lahf
jl
out
dec
add
sub
in
jmp
jp
jle
cmpsb
sbb
or
sbb
sbb
xor
mov
es
fisttps
dec
ja
push
out
mov
fstl
dec
cli
fs
mov
adc
fbld
dec
cltd
pop
xor
adc
shrl
jb
icebp
ret
xlat
mov
mov
push
push
loope
pop
pushl
and
out
push
shl
jbe
push
arpl
inc
push
out
mov
movsl
fwait
xchg
jle
pop
push
sub
mov
roll
add
push
aaa
xor
test
movsl
imul
loop
add
addr16
lret
loopne
icebp
insl
aad
push
shr
hlt
out
jb
sbb
dec
push
rorl
lcall
lret
mull
mov
mov
fdivl
stc
cmp
scas
dec
jb
sub
adc
sbb
xor
add
push
ljmp
ljmp
in
sahf
loopne
aad
jg
dec
sbb
jg
loope
sbb
cwtl
mov
xor
add
dec
mov
xchg
mov
jne
rolb
add
and
lods
or
subb
scas
xor
jo
outsb
mov
in
and
cli
pop
push
adc
sbb
cmp
lret
shll
mov
cmc
decl
out
movsb
cwtl
cmp
cmp
into
in
imul
orl
cmp
and
insb
adc
loop
mov
inc
dec
cwtl
loope
dec
add
xor
mov
xchg
mov
ss
ss
jp
dec
loopne
int
fidivrs
in
dec
jns
xor
inc
mov
xor
sahf
imul
jno
or
pop
push
jno
repz
lret
icebp
in
or
push
ss
in
lahf
mov
mov
into
ret
ror
mov
in
pop
clc
cltd
add
sub
lret
sub
xlat
cmp
cli
shrb
xor
pusha
cmp
clc
mov
subl
sbb
add
push
lock
mov
mov
test
out
push
fimull
insl
call
into
pop
aad
sub
pop
into
pop
aam
push
push
and
popa
sti
mov
jne
addr16
cmp
sbb
sub
and
cs
mov
push
pop
imul
or
movsb
shl
dec
inc
cmpsl
sarb
ds
sbbl
sub
incl
aaa
push
lods
aas
sub
xchg
ret
mov
mov
lods
mov
or
sub
enter
inc
ret
dec
nop
xor
inc
and
idivb
insb
sbb
fnstsw
mov
ljmp
out
sbbb
popa
inc
insl
into
fs
test
and
dec
push
and
sub
jge
decl
cmp
adc
in
xor
push
cmp
mov
sbb
insb
push
adc
in
pushf
xor
outsl
pop
jns
in
push
addl
or
imul
lds
ss
fcomip
shll
insb
inc
iret
mov
pop
out
adc
lcall
push
dec
inc
dec
fistpll
push
mov
lcall
call
lea
decb
xor
jns
arpl
ljmp
and
push
mov
int3
mov
push
into
pop
test
shl
mov
lock
and
lods
adc
mov
leave
sbb
adc
lea
and
ds
mov
ljmp
sbb
ss
fildll
sub
das
or
xchg
mov
mov
std
rol
or
add
mov
dec
ljmp
movsb
ljmp
into
xchg
xchg
jp
cwtl
mov
lcall
scas
xchg
pop
mov
mov
mov
int3
or
xor
or
imul
jmp
shlb
xor
xchg
inc
xchg
push
ret
pop
sti
mov
sbb
loop
jb
arpl
add
xchg
xor
shr
cmp
das
jb
filds
shll
push
in
iret
pop
loop
cmpsb
push
shrl
cmp
or
mov
fsubl
cwtl
cmc
xchg
cli
push
pop
sbb
lds
ret
pop
outsb
jno
outsl
or
adc
and
sub
adc
scas
loop
jecxz
pop
push
sbb
test
push
adc
xor
lock
lds
sub
jecxz
int
adc
mov
rorl
sub
gs
out
cmp
adc
shrb
push
test
sub
in
xor
ss
sbb
xor
cmpsb
push
fbstp
inc
gs
test
sbb
jp
mov
cmc
js
and
rorl
inc
pop
push
scas
inc
insb
test
iret
fs
in
std
cmp
inc
inc
std
push
incl
aam
jle
pop
repz
cmp
rcll
sahf
push
pop
icebp
lcall
and
dec
jno
push
fsts
movsb
cmc
inc
adcb
or
and
jg
mov
add
xchg
nop
adc
dec
mov
aad
sar
faddl
xchg
dec
jno
xchg
mov
jae
fsubrl
cwtl
shl
inc
out
pop
cmpsl
orb
insb
repz
aaa
ret
test
sbb
push
add
adc
or
push
enter
jg
jne
aad
mov
data16
adc
xor
mov
in
cmp
repnz
in
sahf
out
xchg
movsb
push
orb
cmp
ja
addr16
stos
jecxz
add
or
cmp
xor
je
lcall
xchg
lods
idivb
inc
push
dec
test
add
shll
test
aaa
in
clc
fdivrs
cmp
stos
es
and
mov
mov
jl
cmpsb
addr16
das
lret
cli
cmp
std
add
push
repnz
jnp
sub
dec
das
xor
es
pop
daa
inc
pop
cmp
stos
and
ret
gs
fadd
mov
fbld
inc
jg
sbb
xchg
jb
ljmp
in
pop
mov
outsb
xchg
dec
adc
xchg
jl
ds
xorl
cld
jmp
xor
jecxz
and
sub
fistps
leave
incl
testb
ret
jge
sub
mov
lea
int
cli
pop
mov
jg
sub
es
imull
jae
xchg
fcomps
dec
dec
popf
cltd
sub
mov
fbld
mov
int
add
adc
cmpb
add
mov
or
push
xchg
in
test
mov
jge
and
xchg
ds
or
add
dec
fs
leave
mov
mov
adc
movsb
sbb
in
lods
mov
repnz
sbb
lret
pop
outsl
inc
adc
mov
mov
fidivl
imul
jo
lods
iret
mov
push
xor
lahf
push
mov
cmpsb
fadds
int3
sub
subb
arpl
or
mov
pop
mov
aam
or
xor
push
cld
fcomip
sbbb
lock
push
stos
xor
daa
inc
lds
push
arpl
fcomip
add
pop
je
dec
outsb
or
mov
and
adc
add
cmpsb
cwtl
mov
insb
xor
aaa
jecxz
pushf
hlt
fcmovu
adc
mov
dec
clc
lods
or
jmp
in
nop
leave
mov
je
cmp
mov
push
aaa
mov
mov
fwait
repz
push
inc
clc
and
mov
mov
out
ljmp
sarb
jmp
push
movsb
fistpll
and
das
sbb
and
sahf
sub
inc
outsl
fcmovb
out
push
test
gs
mov
ljmp
hlt
xor
shr
movsb
lds
movsb
dec
push
add
xchg
push
inc
xchg
or
stos
sub
insb
pusha
cmp
fwait
ds
lock
push
xorl
stos
imulb
out
loop
dec
data16
xchg
mov
mov
add
cmp
sub
push
mov
cmp
sub
dec
insl
sub
movsl
test
cmpsl
sub
das
xor
mov
cwtl
mov
lock
jb
mov
inc
cmp
jno
lret
push
push
pop
pop
call
xor
rcr
xchg
arpl
lret
xor
ljmp
pop
inc
sbbb
push
or
mov
mov
xchg
add
aaa
fwait
rcrb
into
test
push
lahf
negl
xchg
lds
loop
out
xchg
xor
into
jnp
cli
adcl
cmp
xor
push
xor
and
ret
mov
imul
push
or
insb
push
clc
in
mov
lea
sub
and
lods
push
cld
push
insl
or
out
jecxz
cmp
or
icebp
decl
xor
push
push
cmpsl
cmpb
fistpll
test
or
mov
inc
decl
pop
cli
or
and
fdivs
xchg
call
arpl
aad
movsb
adc
xchg
jp
xor
or
scas
push
insb
push
mov
fbld
out
popa
push
insb
mov
push
push
xchg
pop
cmpxchg
sub
dec
jmp
mov
and
test
ss
les
jmp
add
rclb
or
stos
mov
incl
lret
ret
pop
aas
mov
jecxz
clc
mov
shrb
push
adc
test
aaa
dec
ljmp
movsb
dec
into
clc
inc
or
dec
mov
pop
and
xchg
or
repnz
test
mov
mov
adc
pop
flds
mov
xchg
push
aam
cmpsb
dec
jle
cltd
adc
lret
mov
sub
add
les
loope
inc
push
lds
insl
cmp
clc
or
clc
outsb
imul
hlt
lcall
cwtl
mov
adc
sub
sub
loopne
adc
jge
dec
push
js
dec
push
mov
mov
outsl
hlt
mov
in
js
push
or
mov
adc
fcomi
loope
jmp
rorb
mov
test
pop
mov
lcall
and
jg
cwtl
push
je
push
adc
sub
enter
mov
std
fldl
ss
sub
pop
dec
call
sbb
or
mov
inc
outsl
in
shl
fstl
jmp
push
imul
and
movsl
jmp
test
fdivs
pop
add
mov
dec
ret
ja
jmp
loope
data16
dec
adc
iret
cmp
cmc
mov
movsb
movsb
jg
cmpsl
mov
out
or
pushf
mov
push
mov
xchg
xchg
adc
xchg
mov
cwtl
cli
inc
scas
icebp
mov
test
popf
mov
push
sub
fiadds
mov
ljmp
and
movsl
jmp
out
iret
ja
inc
xchg
sbb
dec
xchg
ret
decl
shrb
xchg
cmp
xchg
int
jno
cltd
fidivrs
leave
and
mov
add
jge
mov
ja
test
rcrb
loope
lret
nop
mov
icebp
lret
fisubl
and
mov
hlt
das
xchg
xchg
sub
xor
mov
mov
cmc
insb
mov
popa
adc
pop
xor
dec
mov
fidivrl
inc
inc
imul
scas
xor
sbb
addl
cmp
xor
mov
clc
sub
pushl
movsl
mov
jle
jl
shll
pop
inc
call
dec
pop
inc
sbb
orl
movsb
into
pop
lret
jne
adc
movsb
sub
and
push
faddp
icebp
mov
clc
dec
fidivrl
das
mov
aas
inc
shrb
xor
push
jge
adc
fbstp
jbe
mov
jnp
mov
sbb
outsb
jbe
fbld
ss
and
mov
fst
or
xor
pop
or
pushl
sub
xchg
adc
xor
inc
cmpsb
icebp
not
mov
and
shll
or
das
and
push
out
cld
loopne
lcall
std
dec
std
pop
fcomip
and
les
in
mov
push
mov
sub
int
jb
std
add
out
fstpl
push
mov
jnp
dec
fcoms
jl
movsb
mov
jp
cmp
scas
inc
adc
xchg
jmp
lods
out
les
cli
push
xchg
xor
jg
mov
ds
or
jae
mov
push
mov
add
sbb
add
aam
test
notb
pop
jl
insb
cld
dec
sbb
call
and
icebp
aaa
or
dec
inc
jbe
mov
mov
pop
fldt
iret
sub
movsl
adc
and
push
daa
out
inc
inc
popf
push
jl
inc
and
cmp
mov
pushf
and
movsb
xor
add
xlat
iret
inc
sarb
or
cmpsb
push
inc
mov
and
incl
cmp
mov
adc
pusha
mov
inc
add
ljmp
stos
mov
loopne
sub
cmc
pop
fildl
sub
enter
das
andb
out
and
or
mov
cld
jg
leave
cmp
mov
ljmp
push
pop
and
xchg
dec
xchg
inc
mov
loop
pop
jmp
mov
push
stos
outsl
sub
sbb
sbb
roll
adc
jg
cmc
je
inc
inc
je
stc
popa
std
rcrb
enter
push
dec
dec
push
mov
test
mov
mov
cmp
jecxz
jmp
nop
mov
sahf
cmpsl
sub
pushf
mov
pop
sub
int
fs
adc
mov
pop
les
sbb
shll
decl
and
loopne
or
xchg
fdivs
enter
or
dec
cmp
cli
andb
outsb
cld
mov
sbb
cltd
fmulp
lret
mov
lods
fisttps
mov
gs
loop
popf
sar
or
jo
ret
xor
jae
xchg
ficoml
mov
inc
cmpb
scas
imul
push
mov
lcall
jp
fs
cmpsl
mov
push
pop
xor
push
xchg
pop
repnz
mov
jbe
adcb
jnp
mov
adc
js
lock
push
xor
imul
jnp
imul
ja
fcoms
ficoms
pop
dec
push
pop
fs
leave
fstpt
jb
add
inc
xchg
lea
add
xchg
mov
mov
xor
out
jae
shrb
pop
les
daa
jecxz
push
arpl
loope
cmpl
jns
and
jns
scas
cli
ljmp
xor
cld
shlb
out
push
pop
cmp
pop
mov
call
out
mov
or
nop
in
aas
mov
pop
insl
nop
pop
lock
pop
and
jg
jne
inc
int
sub
scas
sbb
dec
jbe
cltd
mov
add
inc
clc
dec
subb
out
ja
pop
or
jp
loop
and
pop
loopne
scas
mov
loop
loop
xor
mov
push
push
adc
icebp
push
sub
xchg
and
scas
or
fisubrl
pop
icebp
pop
test
sahf
out
push
inc
mov
xchg
sub
mov
ja
push
dec
mov
jmp
shll
mov
insl
mov
mov
popf
shl
repz
pop
test
arpl
push
andl
pop
mov
or
lods
sbb
and
jno
sar
sbb
sbb
bound
lods
stos
push
inc
push
sti
fistps
cmc
out
or
cwtl
subb
ss
cmp
fnstcw
shll
xchg
pop
push
jo
std
cs
jg
sbb
mov
in
dec
inc
jg
cld
aaa
or
je
xor
clc
cmp
incw
and
std
iret
inc
inc
mov
or
icebp
dec
test
dec
mov
stos
mov
add
sub
pop
adc
bnd
xchg
decl
mov
in
je
inc
sub
call
inc
fadds
adc
mov
inc
xchg
cmp
push
push
arpl
adc
sbb
jg
in
cmp
ds
addb
jmp
or
mov
mov
sub
mov
push
rorb
lcall
call
out
ja
stos
dec
dec
rclb
add
cwtl
rolb
cli
gs
sbb
sbb
repnz
inc
lea
pop
adc
sbb
call
xor
jg
push
mov
sub
lahf
mov
in
aaa
add
test
xor
pop
fisttps
jbe
pop
in
nop
sti
sbb
mov
mov
cmp
cs
cs
into
outsl
add
jg
mov
fcomps
pop
mov
add
sti
mov
in
jle
dec
pop
sbb
fstp
or
testb
js
pusha
scas
fwait
pop
sub
loopne
xor
inc
rcrl
sub
decl
or
ret
scas
cmp
inc
test
gs
add
dec
bound
fs
xchg
movsb
jbe
and
jecxz
jmp
jb
xor
jbe
xchg
add
out
out
push
mov
js
fmul
fsubl
sti
test
fidivrl
int3
rolb
push
mov
incl
in
loope
dec
fwait
cmc
push
test
icebp
jmp
fs
stos
mov
add
std
cwtl
jg
or
int
imul
in
inc
ds
or
mov
adc
shl
sbb
sub
je
jg
sbbb
outsl
mov
fwait
ss
or
dec
sub
lcall
pop
add
mov
xchg
xchg
inc
sti
fdivr
xchg
insl
xchg
or
les
insb
xor
cli
and
adc
push
bound
jmp
fwait
in
fldt
int3
xchg
std
pop
inc
fdivr
ret
inc
loope
cmp
mov
std
cmp
insl
rcl
mov
imul
cmpb
add
daa
dec
cmpsb
sbb
outsl
mov
scas
jl
data16
xor
cld
mov
cmp
out
mov
movsl
ret
ja
sarl
loopne
adc
lods
fcomip
idivb
fcmovne
dec
fcmovu
fwait
push
jle
js
outsb
mov
test
pop
js
repnz
sub
out
or
mov
mov
lds
or
sbb
movsl
dec
mov
cmc
loopne
xchg
outsb
mov
push
and
sbb
cs
adc
jno
enter
push
rcr
lods
aam
mov
in
or
das
jp
jle
aam
insb
mov
shrl
lcall
adc
scas
xchg
mov
iret
data16
xchg
pop
sub
shlb
adc
or
dec
jmp
jl
mov
cmc
decl
mov
cli
xchg
out
add
pop
add
xchg
clc
lret
outsb
mov
popf
dec
loope
fisttpl
cmp
lcall
lret
adc
cmp
mov
adc
leave
popa
push
dec
movsb
js
cmp
mov
add
rclb
pop
bound
or
mov
fisttps
mov
sbb
lret
mov
inc
scas
mov
adc
inc
cli
and
mov
rorl
aas
mov
mov
inc
out
les
lods
mov
daa
adc
arpl
jns
mov
dec
jns
adc
pusha
xor
push
adc
jbe
decl
lods
push
pushf
out
pop
cs
je
enter
aam
fucomp
stos
pop
outsb
adc
lcall
push
call
lea
icebp
adc
shll
bound
scas
and
inc
or
mov
jmp
hlt
dec
xchg
inc
mov
test
dec
mov
divb
dec
repz
and
cmp
ret
rorb
mov
mov
add
lock
dec
jecxz
push
outsb
dec
faddl
popf
rorb
jecxz
ljmp
psrlq
xlat
inc
xchg
insl
jp
outsb
into
and
mov
stos
mov
push
out
js
das
les
sbb
loopne
scas
mov
lret
sbb
mov
rolb
push
jp
and
call
inc
cmp
adc
push
and
mov
ja
xchg
loop
lock
cmpsl
loope
pushf
outsb
fs
call
incl
adc
cwtl
out
or
test
lods
int3
sbb
sarb
pop
dec
lods
xchg
iret
stc
mov
popf
scas
and
fwait
out
int3
fadd
lcall
mov
aad
cld
scas
xchg
in
xor
mov
andb
and
scas
xor
xor
mov
dec
scas
enter
test
fldt
jae
in
jl
scas
add
jg
xor
cmp
loopne
dec
dec
mov
xchg
xchg
test
pushl
sub
mov
lret
lods
inc
add
inc
fistps
test
xor
call
imulb
and
out
test
sbb
xor
or
gs
and
out
in
push
mov
daa
pop
popf
rcrl
aad
lods
push
mov
das
cli
add
and
mov
jo
adc
pushl
stos
in
je
mov
stos
adc
sub
icebp
pop
and
xchg
dec
adc
xchg
mov
cltd
imul
roll
sbb
adc
sub
jno
sbb
in
sahf
subb
mov
mov
popl
cmp
in
cmc
add
mov
lcall
dec
pop
ljmp
mov
or
inc
xor
out
ljmp
aas
sbbb
in
push
dec
inc
leave
insl
mov
xlat
je
jg
nop
mov
dec
add
shrb
pop
sub
cmp
cmpsl
outsb
add
sbb
sub
mov
mov
aaa
cli
cmp
icebp
jg
sti
mov
jle
test
or
pop
out
fcmovbe
sub
pop
das
sti
dec
ret
in
pop
mulb
stos
dec
fistps
and
and
decb
jp
aaa
in
or
adc
std
or
ror
add
mov
insb
sub
push
js
pop
pop
into
xchg
mov
cli
xor
mov
call
cltd
add
jmp
cmp
or
lahf
pop
xchg
aad
subb
add
div
dec
pop
mov
adc
xchg
outsb
call
inc
loopne
sbb
adc
loopne
xorl
insl
enter
ret
push
xchg
and
inc
push
sbb
es
xchg
call
hlt
mov
mov
and
pop
push
add
divb
sub
popa
call
das
les
mov
cli
dec
shll
pop
cmp
dec
mov
data16
fisubl
xchg
lahf
cmpb
mov
fdivrp
fistl
mov
pusha
mov
imul
and
mov
dec
jbe
popf
xor
jo
retw
call
loope
mov
lcall
jmp
sbb
sub
inc
pop
clc
lds
jmp
out
jbe
mov
shlb
sbbl
orb
mov
mov
and
shll
or
mov
adc
pushl
enter
jnp
push
imulb
push
call
inc
cld
fadds
add
imul
sbb
xchg
inc
add
aaa
cld
push
outsb
mov
and
insb
imul
jp
adcl
inc
add
out
xchg
push
std
in
xor
jp
dec
sub
pop
push
mov
jg
mov
mov
test
jmp
mov
or
nop
mov
or
xchg
imul
out
push
fcomip
sub
jne
in
fwait
or
or
mov
in
ret
loop
hlt
int3
add
push
mov
decb
jnp
adc
insl
sub
stos
out
fcmovb
or
jb
test
adc
loope
adc
cmp
leave
sbb
fidivrl
mov
adc
and
cwtl
inc
stos
cmp
sbb
adc
sbb
jg
mov
xor
jl
loope
and
lcall
and
mov
iret
and
mov
jb
in
mov
push
das
and
sbb
mov
fisttps
sbb
imul
sub
out
subb
pusha
pop
pop
ljmp
and
cs
mov
in
fimuls
add
pushl
ficoms
xchg
xchg
jne
sbb
lds
adc
out
and
cmpsl
ss
mov
ret
mov
lret
stc
loope
cmpsb
hlt
ljmp
mov
and
inc
jle
jmp
mov
movsl
nop
ret
mov
loope
rclb
out
cmp
mov
jecxz
insb
int
add
sbb
push
lds
xchg
xchg
je
idiv
mov
mov
dec
mov
sub
xor
jmp
push
or
cmpsb
dec
xor
xor
incl
lcall
jge
adc
push
sub
das
mov
aam
mov
pop
pop
xchg
lret
push
fcomip
outsl
nop
fldcw
jo
add
cmp
sbb
push
xchg
mov
incl
lock
sbb
in
leave
xchg
inc
outsl
xchg
jl
mov
fcoms
xchg
in
aas
lea
sub
mov
push
xchg
shlb
and
fs
pop
cmp
mov
mov
dec
mov
sbb
enter
cmp
stc
cld
subb
andb
dec
adc
and
inc
cmp
jnp
jns
movsl
es
xor
shll
push
mov
or
nop
cmp
jmp
sub
sahf
lock
push
sub
add
jno
adc
fstl
out
std
mov
cmp
push
push
out
movsl
sbb
neg
or
pop
mov
sub
gs
jmp
inc
mov
xor
add
incl
pop
mov
fnstenv
push
iret
adc
cmp
jmp
dec
enter
enter
add
xchg
sub
outsl
and
data16
popa
in
lcall
pop
jl
push
fisubrl
mov
push
das
dec
ja
push
add
jno
mov
mov
cmp
mov
or
xlat
ss
mov
mov
dec
inc
adc
test
popa
sbb
jnp
aad
jne
shll
cltd
into
push
call
lock
jb
sti
cmp
jne
add
or
pop
mov
xchg
add
push
out
icebp
pop
mov
clc
sahf
insl
hlt
insb
xor
dec
fwait
cli
ljmp
push
pop
dec
mov
pop
or
lcall
jecxz
mov
mov
dec
lods
popa
sbb
inc
cli
cmpsb
jmp
mov
pop
jmp
clc
push
dec
loop
jmp
testb
sub
push
js
pop
fsts
sbb
dec
push
pop
cs
and
jle
mov
icebp
lods
mov
cltd
enter
cmp
fdivl
in
imul
decl
add
mov
adc
xor
call
xchg
inc
in
push
in
insb
dec
or
sti
jns
rol
pushl
jg
cmp
in
push
dec
lret
ss
filds
shlb
out
or
call
and
ja
mov
mov
ss
hlt
aas
insb
enter
jle
inc
cs
jbe
adc
aam
pop
loop
push
leave
lea
repnz
test
fwait
data16
hlt
add
inc
pop
rolb
std
cmp
pop
pop
cmc
cmc
lcall
sbb
je
sbb
add
add
or
loop
sub
aas
jno
and
xchg
dec
add
xor
xchg
or
pop
mov
fst
into
scas
push
push
push
jb
xchg
add
insl
lds
and
push
adc
fimuls
push
cmp
call
xor
sub
call
aam
adc
push
lods
lods
xchg
fdivrs
loopne
jmp
shrb
test
inc
sbb
jp
cmpsb
mov
jp
mov
pop
push
mov
leave
test
mov
pop
and
jae
les
aas
or
pop
cmp
popa
dec
push
and
pushf
push
mov
xchg
aad
mov
mov
mov
sbb
or
jg
aaa
cld
test
push
lret
cmpsb
mov
pop
outsl
jb
xor
fbld
cli
mov
movsb
mov
test
add
jne
mov
repz
xchg
addr16
jae
sbb
mov
push
or
ja
clc
mov
lahf
fsts
lods
mov
and
pop
mov
jg
ljmp
stos
popf
sbb
sti
es
std
inc
jg
pushf
add
testb
mov
pop
ljmp
lcall
push
pop
inc
fisubs
dec
push
ljmp
mov
popf
es
pusha
jge
or
pusha
jecxz
pop
mov
lock
cmpsb
outsl
dec
enter
mov
fldl
add
lods
mov
xchg
add
adc
xor
jnp
xchg
lret
fsubrs
sbb
mov
xchg
or
pop
jge
shlb
flds
push
add
mov
mov
cmc
jle
lea
lock
sbb
and
sbb
adc
dec
pop
mov
mov
das
add
ss
les
jg
stos
scas
dec
sbb
adc
and
sub
fdiv
sbbb
adc
xor
mov
push
adc
das
mov
div
orb
rolb
test
pop
adc
mov
les
pop
aad
cmpsb
jg
cs
ljmp
mov
pusha
jg,pn
pop
call
dec
jne
js
adc
mov
jno
inc
sar
in
pushf
push
dec
mov
cli
enter
fildll
das
arpl
mov
in
aad
cltd
xchg
mov
cmp
decl
adc
jnp
jle
dec
cmp
xchg
addb
push
mov
ja
ljmp
xor
loop
jb
mov
cmp
repz
into
incb
mov
ret
xchg
clc
cli
xor
add
push
dec
cld
das
lcall
jns
insl
adc
in
enter
sub
add
out
add
push
or
lret
xchg
mov
mov
mov
or
push
pop
loopne
jmp
sub
test
cli
or
hlt
jmp
pop
stos
cmp
es
xor
pop
jno
dec
stos
pusha
cli
pop
pop
add
xlat
aaa
pop
lods
out
mov
daa
inc
jno
sbb
push
mov
jb
hlt
sub
gs
mov
test
dec
mov
aaa
enter
add
outsl
mov
addl
sbb
das
sub
add
aaa
lock
cltd
xchg
in
jb
xchg
fs
jl,pn
fmull
cmpsb
es
lcall
loopne
hlt
sahf
jbe
or
sbb
inc
aaa
fcmovne
xchg
out
lods
mov
add
sub
push
jno
mov
and
mov
incl
lret
cwtl
pop
notl
out
out
cmp
out
pop
pop
cld
push
or
mov
cmp
mov
sarb
pushl
les
xor
jecxz
std
dec
adc
idivb
addl
cmp
xchg
cmp
fbld
sub
lods
dec
into
rcrl
pushf
xor
mov
sub
jecxz
ljmp
ret
wbinvd
mov
loope
das
fbstp
mov
add
xor
inc
mov
mov
loopne
pop
jle
inc
pop
cltd
aaa
dec
sbb
mov
mov
ja
cmp
jb
mov
cli
decl
push
xchg
leave
pop
mov
add
sahf
mov
adc
mov
jmp
sbb
inc
mov
dec
jbe
mov
or
shl
jno
fs
incl
enter
or
scas
fldl
add
push
or
sub
lcall
inc
scas
mov
sbb
call
pop
loop
ljmp
mov
testb
cmpsb
mov
sub
mov
aas
pop
or
jae
pop
lcall
and
and
pop
sbb
xor
ret
jg
or
inc
and
xor
ss
jg
ja
and
je
or
cmp
cmp
inc
ljmp
aad
std
xor
rcrl
push
inc
inc
xchg
pop
dec
out
push
add
push
xor
movsb
dec
outsb
jg
jl
pusha
mov
add
sar
xor
shrl
xor
cmp
dec
pop
adcb
jg
lods
movsl
fiadds
push
int
push
xchg
jl
movsb
sub
mov
ret
xchg
bound
mov
add
inc
andl
push
dec
cmp
outsb
add
aas
add
xchg
xacquire
ss
cltd
sar
adc
mov
jge
mov
lcall
xor
push
movsl
fidivs
cmp
mov
xorl
inc
jb
lods
jno
sbb
loopne
hlt
sbb
pop
shrl
mov
cmp
jle
pop
sub
add
nop
jmp
js
hlt
push
stos
pop
inc
ret
jo
mov
pop
mov
and
xchg
aaa
fstpl
jnp
cli
jp
aad
cmc
mov
push
pop
mov
enter
dec
loop
outsl
js
ljmp
fs
cmc
cmpsb
js
scas
sahf
out
ljmp
pop
movsb
sbb
cwtl
adc
lret
add
fcmovu
scas
stos
mov
sbb
outsl
adc
adc
cmp
sar
xchg
std
and
test
push
sbb
lret
mov
dec
adc
sbb
xchg
xchg
cltd
xchg
jle
sub
fadds
hlt
mov
hlt
xchg
int
push
push
es
fildll
add
xor
push
lock
mov
push
enter
sti
stos
in
ljmp
mov
cmp
cmp
or
add
jl
sbb
inc
ret
lret
cmc
mov
out
mov
sbb
inc
dec
mov
out
lods
push
cmp
fidivl
or
mov
add
adc
aas
or
mov
mov
out
fcomip
mov
cmp
imul
and
fisubrl
and
je
push
and
fstpl
ljmp
enter
xor
hlt
aas
cwtl
fdivl
mov
cs
inc
popf
mov
fmul
test
adc
adc
sahf
ds
aas
add
mov
sti
adc
scas
xor
fildl
push
pusha
js
les
clc
and
bound
pop
inc
sbb
push
lods
inc
cmp
popa
daa
in
xchg
jo
xor
lds
cwtl
sbb
xor
sub
decl
mov
ficomps
out
movsl
mov
lea
xchg
push
int
sub
pop
ret
add
pop
daa
dec
cmp
sarb
cmc
dec
pop
or
loopne
and
jno
lcall
negb
push
aad
lock
cs
and
mov
pop
ljmp
or
xchg
aad
in
xor
add
inc
shlb
inc
or
fisubrl
jbe
pop
jg
sarb
stos
clc
cmp
test
inc
jb
imul
push
icebp
push
popa
mov
in
lock
cmp
sub
mov
xor
test
lret
sbb
cmp
pop
nop
aam
add
mov
push
lds
and
gs
mov
addr16
lcall
cmp
mov
stos
ret
imul
shlb
test
aad
jle
fs
int3
mov
sti
lods
push
std
decl
inc
imull
jp
pop
lock
jg
cs
jae
sbb
push
loopne
pop
sbb
jo
sub
pop
mov
aaa
push
push
and
and
add
pop
nop
jp
ss
repnz
push
jl
lret
mov
xlat
dec
mov
jbe
pusha
sub
mov
cmp
test
stos
fucomip
clc
adc
movsl
cmp
xor
pop
lods
sbb
add
aas
pusha
or
lds
sbb
sti
aad
or
sbb
sub
pop
inc
mov
sub
shrb
rorl
outsb
ds
push
xchg
sbb
or
insb
xor
cmp
xchg
je
dec
ficoml
or
pop
cmp
fstps
pop
push
sbb
stos
fdiv
or
test
cmp
inc
loop
cmp
and
loop
xor
inc
lock
or
jle
fld
pop
dec
lock
or
or
mov
ja
out
xor
mov
push
pop
mov
jp
jae
fs
xchg
ja
ds
in
inc
call
or
inc
xchg
js
mov
sub
jmp
inc
stos
sbb
mov
out
mov
test
pop
insl
push
subb
lahf
scas
out
fstl
repz
inc
sbb
or
incl
or
and
in
cmp
pop
in
cmp
xchg
inc
or
pushf
xchg
xchg
push
das
sbb
adc
test
sbb
cli
adc
sbb
cmp
pop
jno
mov
adc
and
fidivs
inc
sbb
inc
jb
push
das
mov
add
push
xchg
mov
fs
cmp
mov
fwait
inc
adc
mov
pop
mov
je
mov
negb
incl
rorb
xchg
lock
lahf
xchg
pop
adcb
cmpsb
ljmp
gs
push
cmpb
mov
clc
dec
push
inc
or
push
mov
and
rcr
cmp
ret
mov
push
adc
shll
pop
call
inc
push
orb
xchg
xor
cmp
pop
dec
or
sub
inc
push
sbb
adc
pop
push
pop
stos
nop
or
push
lds
push
scas
pop
or
ljmp
mov
aad
test
cli
pop
hlt
jmp
andb
mov
pop
pop
mov
dec
cmp
mov
decb
add
mov
cmp
scas
arpl
test
pop
test
out
lcall
mov
xchg
jmp
add
mov
xor
lcall
cld
fcompl
in
lods
jne
adc
xor
xchg
cmc
mov
jnp
xchg
cmp
cmp
rorb
repnz
xchg
lock
cmc
decl
jge
sarb
popf
aaa
js
aam
ret
test
ss
cld
jb
pop
mov
and
gs
jo
or
jbe
sub
ljmp
inc
stc
sub
mov
aas
out
push
fdivrs
pminub
mov
std
shrd
test
dec
xchg
push
outsb
pop
cmp
xor
cmp
ret
mov
sahf
cmp
roll
addr16
outsb
repz
outsl
sub
loope
mov
scas
add
aam
test
lock
pop
rcll
mov
sahf
push
repnz
sub
scas
add
nop
push
cltd
ljmp
in
cmpsl
dec
xchg
popf
jns
and
aam
mov
movsb
mov
and
jg
xor
mov
cmpl
adc
in
push
dec
jge
out
ljmp
jbe
sbb
dec
mov
bswap
push
xchg
shl
ffree
mov
push
pop
dec
xchg
mov
stos
adc
loop
test
jne
xchg
jle
decb
rclb
outsb
enter
mov
leave
sub
outsl
xchg
movsb
xor
lret
adc
popf
sub
out
pop
mov
or
jge
mov
push
std
popa
or
jb
ljmp
lahf
sbb
shrl
push
push
mov
mov
loope
sub
add
or
pop
lds
pop
dec
scas
add
xchg
push
outsl
push
out
insb
pop
das
mov
mov
fists
pop
mov
fildll
adc
pop
jne
jge
mov
pop
clc
mov
sub
add
or
jg
sti
adc
mov
jmp
lods
pusha
xchg
dec
sahf
les
and
icebp
add
inc
sbb
mov
xor
les
adc
add
jne
loope
out
mov
pop
dec
test
cmp
pop
jo
mov
mov
fs
cli
push
ljmp
xor
movsb
add
or
out
push
mov
sub
add
fldt
fisubrl
dec
sahf
xor
lret
lcallw
incl
jecxz
shll
fidivl
arpl
mov
adc
mov
cltd
dec
mov
fwait
loopne
lcall
mov
lea
adc
xor
pop
jo
insb
scas
push
add
push
mov
es
pop
mov
nop
cli
call
mov
es
pop
das
jp
xchg
add
ljmp
push
push
movsl
in
fnstsw
add
clc
call
mulb
lcall
iret
cmp
xor
mov
xor
or
into
xlat
lret
lea
dec
es
dec
sarl
push
inc
cli
and
inc
call
call
mov
jg
sub
test
and
mov
inc
fbld
pushf
and
sub
fisubl
push
jo
test
cmp
js
adcb
clc
aaa
jmp
inc
cmp
xchg
test
add
jns
and
sbb
das
pop
fstps
push
cwtl
std
push
subl
mov
xor
sbb
jp
xor
adc
ss
adc
jg
loopne
push
insb
cli
inc
shlb
and
adcb
sub
jle
pop
fdivrl
push
mov
mov
push
daa
lods
mov
push
or
aas
adc
xchg
icebp
fbstp
and
lock
ljmp
cmc
in
stos
icebp
insb
data16
icebp
pop
jbe
push
es
incl
clc
js
push
popa
aam
jb
pop
mov
test
jmp
cmp
mov
push
mov
movsb
and
xchg
jo
jp
imul
lock
jecxz
push
pop
pop
icebp
orl
jg
rcrb
imul
mov
fmul
sbb
mov
je
add
mov
call
mov
nop
adc
cli
es
fs
jne
adc
pop
je
dec
les
or
lcall
mov
xchg
or
xor
inc
jnp
sahf
inc
fisttps
mov
adc
sti
jae
push
mul
hlt
inc
lcall
mov
outsb
stc
mov
jae
ja
xchg
mov
mov
add
jge
push
push
xchg
pusha
call
jge
xlat
mov
int3
loopne
dec
decb
insb
das
xchg
cmc
out
sbb
leave
fs
and
adc
push
add
xchg
incb
cmp
scas
rcll
jmp
jle
pop
arpl
test
jg
loope
xchg
jae
mov
arpl
cmp
jne
cmp
sar
mov
push
and
aam
lods
push
mov
mov
lahf
inc
or
mov
mov
clc
jmp
jg
leave
jmp
test
gs
push
int3
and
mov
rcr
dec
xchg
ja
lret
fadds
jg
fcomip
lcall
push
pop
push
xchg
out
sbb
popf
dec
imul
add
data16
sbb
js
ds
mov
call
jbe
add
push
mov
add
cld
cmc
aaa
push
xor
outsb
add
jg
cltd
and
sbb
aam
sbbl
jg
xchg
ljmp
mov
lcall
hlt
adc
push
lahf
xor
stos
push
mov
inc
push
cmp
sar
adc
daa
daa
cmp
push
pushaw
rcl
xchg
sahf
dec
sbb
mov
xor
in
lret
mov
gs
push
pop
leave
je
addr16
mov
sbb
xchg
xor
loopne
xor
call
sbb
in
add
mov
aaa
sub
pop
stc
mov
cmpsb
mov
inc
hlt
outsb
xchg
or
add
into
shrl
or
ret
movsb
sbb
mov
loop
jmp
mov
sub
mov
int
or
aad
cwtl
pop
cmp
idivb
mov
fdivp
fildll
pop
cs
icebp
add
out
mov
les
fsubl
cmp
sbb
test
fiadds
and
insb
sti
adc
mov
ljmp
mov
xor
push
cmc
xlat
mov
mov
pop
fsubrs
pop
ds
jmp
sahf
movsl
mov
xor
fsubrs
jbe
jle
cld
fldl
adc
jg
dec
mov
movsl
test
std
cltd
mov
push
mov
add
lods
andl
movsl
sbb
inc
insb
inc
gs
cmp
movsl
xchg
xor
pushf
push
dec
punpckhbw
pop
cmp
in
cli
lcall
mov
imul
mov
cmp
sbb
xchg
ss
push
scas
xor
hlt
add
push
data16
mov
lods
jg
fs
lods
pop
insb
faddl
movsb
adc
fnstcw
sbb
icebp
inc
roll
in
add
and
xchg
pop
or
sbb
dec
sub
stos
jae
adc
rolb
test
repnz
lret
mov
adc
xchg
hlt
adc
cs
jmp
cmpsb
in
icebp
pop
popf
pop
push
imul
push
xchg
push
and
int3
outsl
mov
inc
jo
pusha
fs
loope
cld
divb
lret
adc
pop
insb
sub
mov
bound
cmp
popa
fs
add
pop
addb
or
out
push
mov
enter
les
int3
dec
pop
dec
daa
pop
pop
dec
xchg
lcall
mov
movsb
loop
ret
mov
ja
add
push
subb
int
fadd
fwait
mov
in
mov
stos
jg
stos
or
sub
xor
repz
cli
cli
mov
sti
xor
xor
and
xor
push
in
scas
movsb
push
icebp
in
pop
sub
inc
je
or
decl
popf
scas
mov
or
or
push
cmp
mov
pushl
pop
xlat
xchg
mov
clc
jmp
cmp
mov
inc
cmp
mov
add
movsl
mov
add
in
insl
xchg
sbb
test
lods
mov
insl
loop
pushl
pop
pop
nop
fmull
and
jl
push
fldl
add
dec
inc
or
add
aas
in
sub
push
gs
decb
pop
icebp
pushl
inc
cmp
rol
neg
push
sbb
cld
incl
mov
or
mov
push
movsl
mov
hlt
out
inc
xchg
cmpsb
sub
icebp
xor
loop
data16
int
incb
mov
lret
pop
sbb
test
xchg
mov
std
lock
ss
jo
xor
enter
in
outsl
or
lods
add
push
inc
pop
mov
adc
aam
mov
cmp
das
or
icebp
pop
adc
test
dec
sub
repnz
sbb
fildl
sahf
add
in
pop
jne
jl
and
jl
stos
dec
mov
mov
es
inc
adc
add
sahf
out
push
std
cmpsb
aas
pusha
lods
xchg
cwtl
fldl
mov
fcoms
xlat
adc
andb
js
pop
in
cltd
pop
not
incl
ja
das
rolb
cmc
push
xor
idivl
or
lret
mov
movsb
jle
sbb
testl
push
sbb
clc
das
xor
inc
mov
jg
add
lret
fistpll
sub
imul
imul
cld
in
mov
xchg
js
xchg
inc
add
pop
cld
pop
mov
out
dec
std
leave
jmp
pop
aaa
sub
lret
mov
ficoml
clc
aas
push
mov
imul
jbe
fs
xor
ljmp
xchg
cmpsb
cld
rcll
jg
insb
mov
cs
int
mov
aad
lock
fdiv
ljmp
mov
sti
sub
jb
shll
js
sbb
pop
fs
jecxz
das
push
outsb
cmp
call
pop
scas
je
aam
mov
xchg
push
cltd
fcmovbe
stos
pop
cmc
decl
jne
mov
sbb
mov
pop
ret
push
arpl
ret
es
in
in
adc
icebp
pop
sub
das
adc
out
or
sub
insl
out
mov
jle
lcall
pop
mov
mov
cmp
into
sub
loope
testl
pop
mov
or
pop
cmc
aaa
out
mov
mov
mov
jecxz
inc
je
fdivrs
inc
imul
out
cli
cmp
push
es
add
jmp
jge
daa
sarl
mov
bound
int3
sbb
into
test
out
movsb
push
and
xchg
jmp
and
pop
xchg
or
sub
or
sub
push
ljmp
jo
je
cwtl
push
popf
cmpsb
add
rcr
ficompl
xor
cmp
pop
adc
sbb
pop
mov
or
sbb
mov
sub
enter
pop
sub
rcl
pop
xor
jo
addr16
mov
subl
pop
pusha
fbstp
mov
hlt
pushf
xor
enter
cmc
inc
lock
popa
insb
xlat
mov
out
add
scas
xor
and
incl
add
cmp
lea
xor
inc
mov
movsl
lret
gs
sub
test
loopne
pop
xchg
call
pushl
jb
push
fcoml
mov
incb
add
dec
lcall
cmpsb
pushf
push
mov
pop
jl
or
push
insb
push
test
push
mov
into
and
adcl
pop
jo
inc
out
aaa
mov
scas
outsb
mov
mov
fcmovne
pop
shrb
lcall
add
adc
repnz
mov
sbb
xor
loope
cltd
xchg
jle
mov
movsb
xchg
sbb
fs
mov
xchg
sbb
clc
clc
mov
inc
mov
adc
pop
sbb
fadds
or
imul
push
in
or
mov
sub
std
xlat
mov
imul
jp
jo
ds
push
jge
adc
cmp
jle
loopne
ds
or
adc
push
pop
sub
int3
shrb
jmp
cltd
movsb
jl
cmp
adc
sbb
outsb
xor
xor
inc
rcrl
mov
movsl
or
in
into
push
mov
aad
push
incl
out
cmpsb
fsubrl
jns
mov
pop
fsts
out
movsb
jo
loop
jg
imul
int
mov
sub
es
lea
lcall
orl
adc
adc
jge
xchg
cmpsb
push
lock
dec
mov
push
push
imul
inc
inc
push
cwtl
sub
xor
xlat
imul
xchg
cmp
inc
ret
pop
cltd
sbb
mov
repz
adc
xchg
jmp
pop
cli
test
xchg
out
and
fisttpll
stc
js
sub
jg
xor
lcall
movb
adc
dec
in
sub
test
cmp
mov
add
cmp
jo
andb
adc
inc
loop
mov
and
repnz
pop
inc
jl
incl
mov
test
ja
test
pop
mov
ret
push
fsts
jno
xlat
jb
hlt
leave
xor
stos
clc
sbb
out
ljmp
out
mov
data16
in
bound
mov
inc
loope
jo
adc
addb
hlt
incl
movsb
aam
mov
mov
movsb
adc
out
cmpl
xor
jno
incl
xor
jge
and
ret
adc
icebp
add
xor
call
jno
jb
push
notb
loopne
adc
es
inc
xchg
dec
pushf
adc
xchg
adc
xor
mov
packuswb
xlat
insb
scas
iret
adc
addb
pop
mov
lea
add
jle
push
sbb
pslld
inc
decl
lret
imul
bound
js
dec
push
cmp
js
arpl
std
inc
adc
sub
jg
movsl
fiadds
mov
je
mov
mov
xor
cmc
gs
sub
jg
push
mov
xchg
pop
ja
ljmp
jp
push
imul
mov
xchg
test
inc
cmp
mov
fidivl
push
arpl
ja
push
lcall
rcrl
js
inc
xor
pushl
cmpsl
and
sub
repnz
incb
cltd
mov
rcl
pop
aad
sub
mov
or
cs
out
xor
adc
std
jne
daa
std
ljmp
xchg
push
xchg
shrb
js
dec
je
lds
add
push
dec
xchg
pop
imul
mov
data16
mov
subw
mov
pop
xor
aad
test
sub
mov
push
mov
sub
add
cld
sub
sar
mov
loop
js
loop
jno
lods
mov
decl
and
pop
insl
inc
mov
sbb
pop
out
inc
cs
sub
lcall
ds
xchg
add
inc
orl
int
mov
mov
add
lcall
jg
or
add
iret
jle
add
lcall
int3
out
dec
inc
shrl
mov
cwtl
dec
push
mov
pop
xchg
xor
fwait
push
lds
jg
jl
push
lret
push
iret
into
dec
scas
mov
xor
sar
shl
pusha
mov
push
int3
xchg
js
sahf
mov
jno
into
xor
mov
jp
or
dec
push
jl
push
xchg
cmp
test
mov
fidivl
outsl
lcall
jp
in
scas
sbb
test
inc
cs
mov
mov
das
cwtl
int
imulb
adc
mov
add
jg
sub
test
sbb
aam
pop
xchg
mov
or
out
cmp
lods
icebp
imul
push
adcb
sbb
inc
push
mov
testb
sbb
arpl
cmp
mov
mov
ret
out
and
lcall
test
push
mov
rcl
push
lret
xor
call
pop
mov
dec
sbb
arpl
fnstenv
jns
out
aad
mov
repnz
enter
subb
lcall
jns
mov
add
addr16
adc
ret
push
es
mov
enter
pop
jp
js
js
ss
xchg
inc
mov
push
add
add
and
loopne
ret
das
ret
mov
arpl
jmp
adc
mov
ss
aaa
inc
mov
imul
mov
cld
incl
int
loopne
movsl
xor
cmp
repnz
and
jnp
adc
dec
lock
pop
mov
iret
call
mov
dec
jp
dec
out
push
mov
jg
and
dec
add
js
incl
pop
push
and
in
jl
call
outsl
push
fcmovnb
neg
sub
rorl
jp
or
mov
or
ja
mov
cmp
xchg
hlt
cmp
push
push
loope
dec
fcomp
adc
outsb
ret
inc
sub
fisttps
nop
in
cltd
sbb
es
ja
outsl
jp
cmpsb
push
jle
xor
jbe
outsl
imul
movsl
fadd
pushl
jle
hlt
cmp
mov
lret
pop
pop
popa
inc
outsb
push
iret
lds
orb
mov
ss
ljmp
pop
add
push
jne
popa
in
lods
sarl
lds
cld
addl
mov
scas
push
mov
loop
pmullw
dec
pop
stc
insb
popa
cs
xor
fcmovnb
fwait
test
mov
cmp
lods
jg
mov
jo
dec
jne
pop
inc
into
inc
out
stos
hlt
add
pop
adc
adc
ja
pop
jg
gs
ja
pop
jo
pop
push
in
std
adc
pop
cmc
push
xchg
outsb
out
push
push
int
movsb
jp
xorl
or
add
icebp
push
mov
or
or
jg
daa
jmp
xchg
push
dec
inc
sub
ret
fimull
adc
ja
ja
and
rclb
rorl
mov
lea
fldcw
ljmp
popa
mov
xchg
fs
jle
or
jbe
frstor
sub
mov
push
loopne
lcall
andl
jnp
jnp
push
shll
test
pusha
jg
lock
push
clc
add
stos
or
xchg
pop
ljmp
fbld
sti
les
daa
dec
or
sub
aas
mov
dec
pop
pop
cs
test
call
jp
movl
or
int3
popf
dec
push
xchg
ret
mov
dec
and
inc
add
jle
cltd
inc
lds
adc
or
ljmp
rcr
xchg
jb
mov
int3
push
loopne
sbb
push
jmp
adc
sarb
into
stos
sub
dec
and
pushw
outsl
or
xchg
lcall
jg
addb
popa
adc
mov
xor
xor
test
adc
cmovne
mov
decl
stos
jle
lods
sub
scas
jmp
rclb
push
pop
mov
in
adc
sarb
ret
pop
out
cwtl
out
popl
xchg
cwtl
cmc
or
inc
dec
push
pop
std
aaa
loope
jg
push
sub
pushaw
mov
jmp
adc
pushf
pop
pusha
adc
dec
jne
and
mov
lret
hlt
add
sub
inc
jg
cmpsl
insb
inc
lcall
cmp
std
mov
inc
add
cld
jo
in
jp
adc
pop
lcall
loope
mov
jo
clc
mov
shll
mov
mov
sbb
jbe
aam
mov
xchg
dec
icebp
pop
out
out
pop
sub
scas
out
and
dec
mov
or
push
mov
orb
push
cmp
rcl
dec
inc
test
lret
xchg
inc
pop
jecxz
aam
dec
std
sti
adc
push
sarl
inc
sub
iret
adc
sub
sbb
push
jns
cmp
sbb
inc
incl
inc
incl
stos
mov
lret
mov
es
sbb
cmc
sub
ljmp
clc
roll
icebp
xor
test
outsl
lahf
xorl
sub
inc
mov
jl
lods
inc
mov
xor
fnstcw
and
cwtl
sarb
jg
cmp
jmp
mov
sbb
mov
outsl
xchg
jp
jmp
stc
dec
jae
xchg
addb
mov
movsb
push
das
icebp
xchg
dec
icebp
pop
adc
scas
sti
inc
mov
outsl
pop
push
dec
rcl
mov
jb
mov
bound
push
sahf
mov
popa
outsb
pop
fildl
imul
sub
inc
mov
or
push
jo
inc
popf
les
arpl
and
sti
mov
lret
push
dec
cmpsl
mov
enter
xchg
popl
push
shrl
mov
push
idiv
xor
pop
movsb
sub
mov
xchg
dec
loopne
sub
jl
stos
pusha
mov
ds
sbb
inc
jb
mov
and
sub
jle
data16
cmp
xor
xchg
lods
aam
pop
call
enter
test
jl
mov
aam
jmp
insb
inc
in
mov
dec
nop
icebp
push
out
aad
test
clc
lcall
rcrl
mov
rorl
out
cmp
push
cli
daa
dec
jecxz
mov
lret
arpl
sarb
xchg
dec
out
sbb
push
arpl
out
repz
das
dec
dec
fs
negb
mov
adc
test
int3
lcall
out
test
and
scas
xchg
xchg
test
stos
jmp
jg
push
add
ljmp
inc
fdivrl
hlt
inc
scas
test
out
cltd
cmpsl
add
test
xor
loope
xchg
lcall
dec
imul
jmp
xor
cli
test
or
mov
add
cmpsb
xor
mov
hlt
inc
fnstsw
pop
pop
cld
adc
mov
adc
jmp
inc
push
mov
lahf
dec
fdivr
sbb
cwtl
out
cmp
fcomip
cmp
pop
int3
adc
lock
out
scas
and
xor
add
hlt
mov
mov
std
mov
sub
pushf
pop
in
sub
xor
sub
lret
fcomip
inc
cmp
and
jecxz
pop
std
xchg
mov
stos
mov
and
inc
loopne
xchg
push
mov
add
jg
xor
xchg
dec
mov
push
mov
sub
sahf
jae
pop
and
sti
arpl
addl
out
pusha
add
test
xor
popf
adc
sbb
sbb
xchg
push
xchg
fs
mov
rcrb
mov
std
xchg
sarl
lea
inc
adc
mov
sbb
and
sub
cmpb
lahf
ds
loopne
loopne
in
dec
mov
fcoml
and
jl
jmp
mov
test
ss
cmp
das
out
jp
xchg
sub
js
mov
sbbb
add
mov
lcall
and
inc
mov
xchg
sbbl
fs
clc
xchg
mov
incl
mov
les
in
sub
lock
mov
ret
stos
das
cmp
fs
add
fwait
hlt
mov
test
or
mov
inc
fidivrl
cmc
roll
dec
shrb
pop
jecxz
call
dec
xchg
out
js
rcrl
sbb
dec
mov
dec
add
adc
or
scas
orb
xchg
mov
shll
mov
push
adcb
lcall
stos
xlat
cs
pop
push
or
clc
andl
adc
xor
xor
sbb
mov
and
in
xchg
cmp
out
jno
outsl
pop
fstpt
mov
fmul
loop
mov
add
scas
aaa
jecxz
dec
rcll
push
in
push
loope
rcrb
cmp
js
mov
fs
testb
aaa
xor
jb
push
xchg
xchg
out
sub
cmp
cmp
and
ret
push
push
xchg
loop
lret
mov
pushf
dec
adc
push
bound
fsubrs
fdivl
or
cwtl
sbb
xor
mov
or
or
lcall
jbe
jno
and
jge
test
mov
clc
pop
inc
rolb
out
mov
dec
cmp
mov
inc
sub
lcall
mov
or
mulb
lcall
fnstsw
jo
mov
xor
inc
sub
pop
pop
les
sub
int3
les
cmp
adc
mov
pusha
and
dec
dec
outsl
fistps
testl
movsl
pushf
addb
pop
arpl
movsb
mov
add
add
cmpsl
fnsetpm(287
xor
mov
xchg
and
aam
js
jae
imul
mov
sbb
jmp
mov
sbb
mov
sub
dec
cld
decl
lds
mov
pushf
add
sahf
cmp
dec
stc
out
pop
adc
test
jl
dec
scas
add
push
dec
xchg
sbb
lcall
ja
fbld
sbb
out
or
rorb
pop
push
sbb
lock
xor
jg
lret
xor
adc
sti
adc
dec
jecxz
xchg
jecxz
rorl
stos
jnp
xor
ljmp
test
lcall
mov
or
outsb
push
mov
fisubrs
test
and
jge
sbb
mov
inc
les
sub
push
jge
and
xor
mov
xchg
dec
jle
loopne
pop
out
mov
push
jg
fwait
mov
pop
ret
ss
fisubs
roll
fwait
jge
xor
lock
aas
mov
mov
out
orl
scas
ja
cmp
int
mov
es
rcr
mov
sar
rorb
inc
sub
ljmp
xchg
or
sahf
cmpw
dec
xchg
add
rcl
pop
hlt
mov
jle
mov
push
xchg
mov
aad
push
or
jbe
dec
xor
sub
in
int
cli
test
in
out
push
and
sub
cld
xchg
fldcw
or
mov
jle
mov
lret
inc
push
cld
inc
lock
adc
add
inc
repnz
mov
clc
jmp
dec
mov
dec
sub
es
sub
lods
lcall
push
scas
negb
test
add
iret
cltd
jmp
dec
xchg
lcall
mov
cmc
mov
or
xor
popf
and
rorl
xchg
into
jbe
pusha
jne
add
add
insb
mov
decb
ljmp
in
inc
test
jle
jo
and
sarl
hlt
push
int
mov
or
out
es
jno
lret
cmc
shlb
or
ss
sbb
xorb
movsl
mov
ss
pop
adc
add
shl
rorb
sbb
popf
inc
es
or
fdivr
mov
lret
or
xchg
mov
ret
lret
jge
and
and
xchg
adc
leave
movsl
incl
icebp
das
fimull
sbb
mov
mov
jno
test
jle
test
adc
rclb
sbb
xchg
adc
movsb
jecxz
mov
cmp
xor
sub
cltd
outsl
mov
sarl
lahf
movsl
sub
xchg
or
sbb
mov
and
sbb
mov
dec
and
push
xor
pop
imul
lods
or
or
xlat
cld
ss
push
icebp
mov
xor
cmpsb
orl
out
lret
jl
pop
sub
je
jmp
ljmp
cmp
sbb
lds
and
lcall
cmc
cmc
cs
andl
orl
fs
fistps
mov
cmc
hlt
xchg
add
sub
movsl
push
and
mov
int3
lret
inc
andl
jecxz
mov
setb
mov
mov
cld
pop
rcrw
ljmp
decl
lcall
fs
push
mov
dec
push
insb
sbb
nop
adc
jg
adc
mov
mov
out
test
clc
movsb
xlat
repz
ds
sbb
sub
arpl
or
mov
addr16
cmp
clc
arpl
rclb
test
mov
lods
in
pop
cld
sbb
rolb
fs
push
cmp
icebp
stos
loopne
movsb
mov
mov
push
mov
aaa
shrl
and
cmp
icebp
cmc
test
stc
scas
push
hlt
scas
push
push
add
scas
js
inc
and
mov
pushf
out
xchg
mov
pop
push
mov
add
mov
xchg
cmp
out
int
push
insb
cli
scas
pop
cmp
push
pushf
fisttps
subb
int3
mov
lock
lea
ret
das
cli
jne
xchg
jg
out
adc
xor
or
loope
add
in
imul
das
ss
xchg
popa
xor
sub
sbb
jg
mov
pop
les
xchg
lahf
push
mov
mov
inc
insl
mov
and
insb
aas
mov
mov
dec
imul
out
outsb
mov
lahf
pop
mov
fcomps
rcl
xchg
hlt
sahf
push
inc
dec
mov
loopne
daa
sub
dec
imul
jg
ret
js
js
push
retw
mov
add
call
jns
shlb
pusha
lods
cmp
add
mov
ja
push
xor
stos
paddusb
push
cli
shlb
insl
adc
aaa
fcoml
je
iret
outsl
mov
stos
std
ljmp
adc
cltd
sbb
popf
add
push
movl
loope
mov
xchg
pop
push
dec
arpl
sub
cli
iret
ret
adc
inc
pop
repz
imulb
sbb
orb
in
ret
movsb
pushf
shrb
sbb
push
addl
insb
loope
adc
inc
or
bound
nop
sahf
andb
call
pop
jecxz
into
fldt
adc
arpl
and
push
mov
rcrb
cmp
mov
sbb
push
sbbb
lret
jno
in
bound
xchg
cld
xorb
rclb
adc
test
mov
lock
pop
or
pop
negb
mov
dec
data16
push
outsl
es
jg
mov
stc
push
mov
je
aam
pushf
pop
cmp
data16
inc
or
mov
adc
scas
add
les
cli
mov
inc
xchg
addb
add
xor
fwait
dec
notl
push
les
nop
out
iret
push
cs
mov
mov
add
mov
lret
filds
xchg
lret
pop
and
cmpsl
xchg
xchg
bound
rcl
adc
ss
xor
ljmp
sub
fldl
lret
cld
xor
aaa
cld
call
fwait
pop
shll
into
pop
push
outsl
jge
sub
jmp
in
dec
push
xorb
hlt
jecxz
mov
fisttps
cmpsb
dec
scas
pop
insb
pushf
and
mov
mov
dec
test
jg
jae
outsl
lahf
add
mov
xor
xchg
lahf
outsl
pop
and
sbb
pop
add
jecxz
jno
mov
jmp
hlt
inc
mov
pop
xlat
and
or
dec
frstor
movb
nop
sbb
inc
xor
cmp
ret
mov
add
lods
stos
fs
pushl
xor
inc
sub
stos
decb
and
pop
mov
cld
pop
sbb
dec
aad
shrl
mov
or
pop
mov
jg
sub
jecxz
and
insb
push
pop
sbb
dec
rolb
pop
nop
icebp
cli
inc
daa
fisttpl
pop
sar
sbb
fldln2
pop
repz
nop
es
mov
adcb
cld
push
mov
add
xor
les
hlt
and
loopne
loopne
fists
dec
leave
std
sbb
pop
sub
mov
pop
jge
lea
es
mov
or
arpl
inc
xchg
mov
dec
push
adc
adc
fldl
out
movsl
push
push
pop
ss
inc
aaa
aas
mov
xor
lock
ret
cs
cmp
lret
cmp
push
inc
pop
fiaddl
lods
sub
mov
mov
sub
mov
add
std
or
inc
fcoms
es
jbe
arpl
xor
push
add
inc
jge
pushl
out
xchg
dec
subl
dec
pop
sbb
xchg
xor
push
jecxz
pop
push
dec
cmc
in
mov
dec
fcom
js
cmp
add
add
mov
hlt
aas
inc
stos
cli
aaa
inc
push
sbb
insl
mov
cmpb
dec
or
imul
pop
add
fldenv
scas
mov
pmaxsw
add
es
imul
adc
xor
stc
icebp
mov
mov
into
xchg
outsl
push
ficompl
fwait
scas
fildl
add
xchg
inc
js
jp
xor
daa
sub
push
dec
or
pop
cmp
push
mov
sarl
mov
inc
loop
and
std
scas
or
xchg
inc
sarl
bound
mov
je
out
int
out
dec
jl
push
jmp
mov
enter
popf
and
mov
jmp
adc
push
notrack
push
fsubp
cmp
mov
xchg
incl
or
inc
sbb
xchg
cltd
adc
mov
jne
insl
inc
aaa
or
shlb
lods
sbb
jmp
inc
out
pop
imul
jnp
rol
sub
popa
hlt
jmp
and
call
hlt
inc
add
je
outsb
inc
ret
xor
add
sub
push
popa
fmuls
int3
in
and
ds
or
cmp
data16
int
rolb
idivb
push
jbe
jns
xor
cmp
adc
add
add
xor
dec
pop
jno
and
add
test
pop
ss
std
cmpsb
ljmp
sbb
mov
adc
movsb
test
mov
xchg
add
mov
lock
movsl
pop
dec
push
std
bnd
push
sub
jo
mov
clc
repz
mov
or
adc
decl
sbb
adc
ss
xchg
mov
rcll
insb
cmp
cwtl
cmp
mov
decl
inc
loop
pop
pop
dec
push
push
sarb
cltd
icebp
sbb
rorl
or
inc
mov
cmc
lcall
push
into
push
int
add
rcrl
mov
insl
rclb
inc
nop
test
adcl
fwait
and
sarl
mov
hlt
decl
pop
push
or
leave
inc
sub
imul
jb
sub
push
std
test
popf
xchg
sbb
sub
jnp
add
call
pop
pushf
add
xchg
xchg
or
mov
xor
mov
incl
mov
lea
out
mov
ljmp
jp
inc
aad
push
xchg
inc
les
xor
gs
rorl
and
icebp
addl
divl
mov
sbb
orl
or
ficomps
cmp
pop
shll
std
and
lods
ss
mov
add
pop
cli
dec
pushf
out
xchg
cmc
lock
mov
call
xchg
inc
je
lock
jb
nop
add
incb
cmpsl
lock
call
xchg
jb
pop
adc
out
cli
or
les
add
gs
push
and
call
or
and
cmp
and
mov
jbe
xchg
outsb
mov
mov
cmp
repnz
and
pop
and
mov
in
das
mov
insb
sbb
cmp
das
pop
or
sbb
icebp
pop
lock
ret
test
loop
dec
mov
hlt
shlb
icebp
es
mov
in
imul
call
repz
or
loopne
sbb
mov
adc
mov
push
pop
movl
adc
pop
sub
adc
xorl
stos
scas
mov
les
andl
push
xor
sub
inc
not
add
icebp
push
jae
data16
imul
dec
sbb
jp
fimull
lea
sub
icebp
popa
les
pushf
jle
ja
pop
inc
add
dec
add
fdivrl
add
pop
lret
mov
call
cmp
aam
in
push
push
fdivs
in
pop
dec
cmp
pop
dec
sbb
out
jmp
xor
dec
push
cld
mov
or
lods
int3
lcall
push
sub
inc
xchg
mov
mov
or
cmp
sbb
pop
into
sbb
dec
mov
stos
mov
and
mov
sbb
adc
mov
incl
mov
std
sbb
dec
ret
jnp
cmp
cmp
cli
cmp
add
lds
js
sti
ljmp
mov
push
fwait
std
cltd
ds
and
fimull
pushl
fcompl
pop
imul
les
sbb
xchg
test
out
incl
lahf
ret
rcll
data16
ret
cs
jle
add
dec
out
jbe
jge
ficomps
push
sbb
xor
in
sub
shl
addr16
adc
aas
jg
rcr
cli
jno
jge
loop
push
pop
hlt
jg
scas
enter
in
jg
jmp
xor
sub
xchg
mov
dec
cmpl
sahf
xor
cmp
jecxz
pop
mov
pusha
icebp
jb
xchg
ficoms
push
add
push
or
adc
mov
movsb
outsl
mov
call
dec
xchg
sahf
int3
cmp
js
aad
pop
pushf
adc
je
cmp
scas
scas
and
push
push
enter
mov
movsl
mov
inc
enter
outsl
add
inc
add
jg
xor
push
push
out
xor
sbb
xor
push
mov
shlb
int3
mov
ljmp
mov
das
and
pop
hlt
dec
mov
fwait
cmp
xor
adc
insb
mov
ljmp
push
pop
je
inc
adc
mov
mov
pop
xlat
xorl
mov
xor
sub
das
into
adcb
push
push
ret
pop
fdivrl
fs
lea
mov
sbb
cmp
lods
sub
or
jge
jb
ss
jmp
sbb
fidivrs
jecxz,pt
js
js
out
mov
push
sub
shll
repnz
pushf
scas
fisttps
cmpsb
add
inc
clc
pop
add
xor
in
data16
push
or
mov
mov
movsb
pop
mov
sub
pop
imul
loope
sbb
jle
shll
subl
adc
fcomps
sbbl
bound
mov
in
jnp
push
push
xor
iret
loopne
or
xlat
pop
cmpsl
mov
mov
push
mov
xchg
pop
shl
cs
adc
rcrb
jle
dec
jne
frstor
adc
push
aad
loopne
xchg
jg
add
fistps
cmp
xchg
stos
dec
adc
lock
cmpsl
and
out
jl
mov
lods
push
inc
fildll
call
cmc
aas
orl
xor
fnstsw
movsb
and
push
fs
icebp
rol
mov
test
daa
sahf
xor
mov
dec
aam
test
sub
mov
nop
sub
jle
xchg
es
or
lea
xor
fs
dec
jmp
push
adc
mov
out
sar
data16
pop
dec
filds
sub
in
inc
add
pop
sahf
sub
or
dec
cld
aam
fs
cltd
push
add
inc
sub
outsb
cmp
ja
insl
rcll
adc
or
sbbb
repnz
xchg
mov
scas
mov
ljmp
adc
fcmovu
mov
pop
movsb
aad
cmc
adcb
test
bound
loopne
int
xchg
xor
aad
cli
mulb
push
adc
ret
push
std
pop
les
mov
adc
adc
sbb
xchg
outsb
loopne
hlt
inc
dec
fwait
outsl
fs
jl
cmc
stc
add
ljmp
xor
cmp
stos
sub
adc
lock
xchg
lret
outsl
stos
cmp
jo
dec
decl
sbb
dec
mov
add
lods
mov
adc
clc
test
cld
aaa
fdivrs
ljmp
inc
push
and
dec
insb
xchg
loop
in
sub
push
add
jmp
mov
xchg
inc
mov
add
imul
aas
adc
out
cmc
in
aam
push
bound
icebp
push
dec
adc
test
out
loop
lds
jl,pt
inc
dec
js
mov
std
out
jne
shrl
push
pop
mov
or
scas
dec
roll
adc
pop
jo
lock
xchg
aam
pushl
xorb
cwtl
aam
incl
repnz
jns
or
dec
andb
add
push
pop
mov
cmp
call
push
fidivs
mov
pop
iret
cmp
rorb
pusha
sti
mov
insb
ss
aam
orl
adc
mov
lea
call
jl
xor
int
mov
push
sbb
add
pop
xor
in
xor
bound
loope
insl
dec
pop
jp
mov
xor
push
cld
sbb
mov
adc
cs
ljmp
lret
fstps
push
or
shlb
or
mov
rolb
mov
aas
test
pop
mov
call
jp
dec
add
or
push
sub
jmp
fsubrl
aam
aam
add
stos
mov
rol
fucom
add
or
std
inc
cmc
lret
mov
hlt
push
inc
ss
xchg
dec
fldl
decl
popf
pop
pop
pop
out
pop
cmp
outsb
adc
xchg
cmp
pop
mov
loopne
xchg
pop
mov
cmp
dec
and
mov
push
stc
mov
cmp
mov
neg
movsb
inc
push
sarb
clc
inc
jmp
inc
fldl
xor
leave
clc
incl
insb
std
add
cmp
add
pop
cmc
pusha
jmp
test
mov
xor
inc
clc
negl
and
rorb
dec
cmp
rcl
push
aaa
cmpsb
movl
aas
xchg
dec
inc
sbb
mov
scas
dec
dec
and
push
test
dec
std
decl
jb
mov
sbb
lods
inc
lcall
sub
out
icebp
stos
sar
mov
ljmp
cld
repz
ret
mov
in
add
rcr
imul
dec
jle
loop
pop
int
popf
je
mov
movsl
test
iret
call
pop
std
sub
sub
aaa
inc
mov
dec
movsl
mov
sbb
outsb
sbb
punpckhdq
aam
jp
mov
mov
aad
lahf
adc
mov
repz
out
inc
add
xchg
std
xor
mov
sub
cmp
aaa
lods
ss
push
in
subb
xchg
mov
pop
mov
cmp
ljmp
rol
icebp
in
bound
mov
movsl
test
push
cmpsl
outsb
call
in
lret
push
mov
dec
sbb
adc
jnp
push
cmp
ss
aam
jmp
jo
addb
or
add
and
roll
xor
stos
pushf
test
fdivs
dec
pop
push
lods
mov
lock
mov
push
decl
sbb
nop
mov
aam
xor
pop
lock
xchg
imul
test
in
mov
dec
stos
sarb
leavew
dec
scas
repnz
cmp
lock
jmp
test
jo
les
or
daa
add
or
aad
lcall
dec
mov
or
jp
and
pusha
pop
cld
sub
xchg
in
stos
scas
ret
pop
jno
loopne
fimuls
decl
pop
sbb
inc
xchg
rolb
add
shll
out
sub
pop
je
adc
lods
or
dec
cld
or
push
aad
ret
lods
or
push
rorl
sub
es
ret
inc
mov
ds
adc
clc
or
xchg
inc
sub
cld
xchg
insl
push
sbb
and
test
inc
stos
mov
insb
mov
xlat
cwtl
scas
mov
mov
jge
outsl
xlat
mov
xchg
dec
sub
jae
mov
or
push
dec
clc
inc
add
mov
push
jl
lock
in
in
mov
scas
roll
pop
decl
and
or
xor
pop
push
sar
scas
pop
stos
imul
add
jp
or
inc
out
std
mov
mov
push
int
jne
aas
mov
jg
nop
push
xchg
inc
fs
xchg
nop
mov
xchg
fdiv
sarl
adc
ljmp
adcb
fnsave
frstor
decb
xchg
xchg
mov
jns
mov
jg
add
xor
push
pusha
insl
cld
in
aam
cli
jg
les
lods
jge
andl
pop
iret
mov
push
xchg
cli
and
pop
ja
mov
into
enter
xor
mov
mov
jb
mov
fcoms
daa
fdivl
aam
scas
test
push
out
mov
jg
into
das
xchg
rcrl
ljmp
int
or
or
lds
push
cmp
mov
xchg
outsb
rclb
icebp
push
jne
inc
push
cmpsb
dec
and
rclb
out
mov
sti
pop
ret
pop
push
lcall
push
repz
movsl
mov
pop
inc
xorl
fisubl
and
inc
cmc
scas
movsb
jle
aaa
jns
xchg
push
daa
insl
stc
adc
sbb
adc
movsb
dec
in
insb
fidivrl
sub
fwait
repz
sar
sbb
insl
lret
pop
bound
inc
lret
or
test
fldl
pop
std
mov
sahf
inc
push
movsl
or
push
xchg
pop
cld
push
aad
movsl
insb
pop
push
inc
mov
mov
loopne
xchg
sbb
popf
js
push
push
fstl
xchg
sub
sahf
add
and
aad
mov
std
aam
mov
sahf
call
push
stos
sub
and
cmp
cmpsb
adc
cmp
scas
mov
mov
or
adc
mov
icebp
vpmacssdd
inc
push
filds
repz
cmc
xor
sub
add
mov
or
mov
bound
dec
jnp
loop
cmpsb
ljmp
cmp
push
shrb
dec
adc
mov
mov
mov
pop
fwait
pop
aaa
pop
jmp
adc
lods
jle
iret
or
in
inc
jmp
inc
in
xchg
js
ljmp
cmpsb
pushl
rorb
dec
mov
mov
adc
or
test
add
cmp
mov
mov
sbb
mov
inc
ja
call
enter
shlb
ljmp
int
fstpl
jno
mov
mov
add
test
pop
or
xlat
ret
cwtl
popf
sub
xchg
push
call
cmp
clc
push
enter
hlt
out
out
cli
call
cmp
shl
jmp
jo
std
or
outsl
ja
les
sub
icebp
lods
imul
dec
aam
add
out
icebp
inc
mov
cld
dec
fisubrs
cmp
jle
std
mov
imul
pop
outsb
repnz
mov
mov
add
dec
inc
rcr
aam
or
and
or
adc
repnz
inc
push
test
push
adc
and
pop
cmp
leave
jmp
fstl
cld
mov
ljmp
xor
fnstenv
lods
pop
hlt
incl
inc
out
movsl
jmp
pushw
fs
mov
aas
cmp
xor
sbb
mov
pop
and
out
js
fdiv
mov
les
loopne
push
push
jmp
adc
jb
shrb
arpl
inc
inc
in
sbb
or
jle
adcb
sarb
enter
pushf
cmc
mov
add
adc
sbb
loope
lods
xor
dec
lcall
inc
add
lret
add
insb
push
inc
mov
repnz
movb
push
mov
mov
mov
sbb
rolb
ljmp
dec
fidivs
lret
push
mov
push
mov
inc
pop
stc
js
test
push
pushf
mov
clc
mov
shr
mov
mov
cld
pop
jmp
call
sbb
lret
sahf
int3
pushf
out
movsl
psrad
push
jmp
test
mov
push
mov
adc
arpl
push
mov
sbb
icebp
push
repz
and
xchg
mov
pop
jg
dec
hlt
mov
leave
ds
in
push
popf
xor
and
xlat
xchg
sbb
in
in
push
add
in
mov
lcall
adc
add
push
jecxz
xchg
jmp
scas
lods
sub
mov
pop
lret
stos
incl
pop
adc
fdivs
lods
jns
insb
lahf
pop
mov
imul
inc
add
incl
push
test
dec
adc
mov
mov
mov
sub
cmc
divl
imul
xor
dec
or
adc
dec
test
dec
sahf
fcomip
dec
dec
inc
fwait
outsb
mov
test
shlb
ds
fbstp
inc
sbb
pop
pop
dec
std
mov
js
ret
and
das
test
xchg
jnp
adc
sub
inc
mov
movsb
jecxz
xchg
mov
cli
lret
push
cld
call
mov
xorb
lret
sbb
jnp
ds
mov
shr
cmp
incl
movsb
cltd
push
in
push
sub
add
mov
imul
in
clc
dec
or
xor
pop
add
sub
hlt
fdivs
inc
ljmp
xor
push
adc
pop
icebp
clc
ret
sbb
inc
push
in
adc
cli
arpl
inc
sti
sbb
pop
xchg
out
dec
lods
lahf
sarb
push
es
mov
mov
ljmp
call
mov
cmp
mov
je
shl
pop
dec
push
hlt
testb
xchg
adc
mov
cmp
aas
aad
mov
pop
and
inc
sub
sbb
cmpb
daa
pop
pcmpeqw
mov
xor
cmpsb
lods
add
xchg
pop
push
outsb
aam
adc
adc
adc
inc
mov
sub
lds
cli
add
addb
jg
cld
ds
aam
dec
fisubrs
or
movsl
aaa
add
or
fiaddl
pop
mov
js
icebp
jle
fnstcw
sahf
cmpsb
cmp
ror
clc
dec
cld
hlt
pop
sbb
mov
mov
stos
and
test
xor
push
call
add
adc
push
sbb
out
into
sub
or
les
test
add
jl
or
dec
jbe
and
fs
sbb
push
push
clc
mov
popf
inc
xchg
lock
jge
ds
ss
inc
loop
inc
orb
inc
rcll
ja
data16
and
xchg
nop
lock
std
xchg
ret
cmp
push
pop
addr16
in
das
push
andb
divb
adc
mov
mov
je
xorl
lcall
in
sbb
mov
cmpl
xor
sbb
int3
iret
lods
and
and
xchg
jp
and
or
movsb
mov
aad
stos
jp
sub
adc
push
dec
loopne
mov
dec
mov
cs
jle
enter
lret
out
outsb
rorl
rorb
aam
inc
jle
rclb
jp
inc
xchg
movsl
out
sub
int3
cs
pop
xchg
addb
ljmp
mov
jle
xor
cld
mov
xlat
push
ss
add
xor
add
dec
std
subl
mov
scas
je
out
xor
cld
mov
scas
insb
jae
fsubl
push
bound
aam
ljmp
xor
sub
mov
out
jno
ljmp
outsl
jl
push
scas
filds
loopne
int
jl
loope
aas
sbb
in
pop
stos
push
loope
push
test
call
sbb
xor
mov
add
enter
xor
outsb
clc
lret
jge
enter
outsl
xchg
jg
movsl
sbb
loopne
mov
and
pop
insb
icebp
pop
jle
pusha
mov
adc
push
ljmp
mov
cmc
movl
xchg
mov
jnp
iret
push
add
push
insb
mov
mov
inc
cwtl
and
int3
add
cmp
fildl
sub
cmp
rclb
test
rclb
and
in
lods
push
mov
mov
cs
jp
test
icebp
add
test
in
xchg
dec
dec
xchg
adc
mov
outsl
mov
pusha
cmp
adc
inc
adc
jg
jl
mov
mov
lahf
sub
dec
jno
test
ljmp
and
loope
xchg
ds
lds
cwtl
push
scas
and
loop
out
dec
mov
lods
repz
xchg
adcl
test
subb
addb
cmp
and
mov
xchg
in
jb
mov
mov
add
mov
push
add
pop
dec
sbb
xor
push
lcall
adc
rorb
push
test
mov
sbb
cmpsl
ds
mov
call
cmpsb
ljmp
or
cmp
jmp
jg
push
add
push
ss
and
in
lcall
divl
out
ds
jb
popa
add
leave
test
cmc
push
stc
or
pop
sub
pop
xchg
out
pop
adc
ds
es
mov
data16
insl
movsl
and
daa
loopne
cwtl
mov
aas
cli
jg
lock
mov
push
cmpsl
sub
stc
fwait
add
inc
jl
mov
aam
mov
imul
es
out
mov
inc
jle
cmc
sbb
inc
sub
dec
cmp
inc
dec
sbb
cmc
stos
fmul
ljmp
mov
ja,pt
and
ljmp
pop
mov
shrb
hlt
sub
sbb
jge
inc
int
icebp
das
test
mov
in
addr16
push
dec
loope
or
mov
pop
je
mov
sub
push
mov
shrb
sub
cs
cld
sub
and
sub
dec
shrb
ds
jo
or
ret
inc
clc
movsl
xchg
push
enter
decl
jo
inc
xor
mov
jp
mov
shll
inc
mov
lcall
xchg
sbb
pop
pushf
inc
mov
inc
fisubl
push
cs
hlt
lcall
cmp
mov
sti
aam
shlb
push
xor
out
sti
mov
or
stc
mov
push
mov
loopne
mov
pop
sahf
das
mov
dec
mov
subb
aaa
pop
clc
or
xor
cmp
fidivs
lock
sub
outsl
aas
jg
mov
inc
xor
sub
xchg
outsl
xor
inc
push
sahf
or
adc
ljmp
pop
push
xchg
push
fdiv
test
clc
mov
sub
and
mov
call
movsl
add
sub
cmc
insb
aaa
shll
lea
aaa
aad
scas
and
cs
lahf
jle
lds
mulb
adc
or
mov
mov
sbb
int
dec
sbb
imul
js
mov
in
xlat
xchg
add
lods
push
dec
xchg
into
xchg
pop
jo
mov
rcrb
pushf
stc
stos
jge
out
xchg
pop
adcb
loope
mov
xchg
mov
inc
sub
inc
je
lock
cs
jge
jg
orb
pop
stos
clc
lcall
je
pop
js
inc
jg
pop
push
cltd
mov
fdiv
popf
mov
mov
lea
fbld
loopne
sbb
pop
add
xor
movsl
sbb
mov
out
lods
pop
clc
fidivl
fnstsw
loopne
jne
or
scas
and
movsl
xor
and
cmp
scas
sbb
lahf
js
iret
push
push
xlat
pop
inc
cs
outsb
adc
stos
mov
subb
mov
dec
ja
out
dec
cmp
push
and
loop
das
ss
mov
inc
push
out
pop
or
movsl
jge
dec
dec
mov
icebp
adc
or
sti
lcall
ja
cmp
cmp
pop
push
cmpl
testb
faddl
fbstp
rolb
out
add
sarl
push
mov
test
dec
cld
shlw
decl
xchg
jge
int3
jmp
add
shrw
and
mov
rcrb
fcoms
ja
pop
xlat
fisubrl
scas
cwtl
cli
cmp
push
shrl
pop
movsl
and
pusha
dec
lret
arpl
or
cmc
repz
mov
push
das
scas
mov
or
inc
and
add
jg
push
out
adc
pop
jg
ljmp
or
adc
ret
xor
clc
out
or
sub
mov
xchg
mov
add
movsb
cmp
jl
lds
mov
jg
sbb
jge
lret
test
aaa
scas
ret
push
ljmp
mov
sub
mov
gs
outsl
loopne
pop
xor
xlat
pop
xchg
jge
test
call
and
add
pop
or
adc
push
sub
dec
clc
xchg
dec
cli
outsb
or
mov
push
mov
data16
mov
adc
and
lret
xor
jg
scas
rclb
inc
sbbb
mov
stos
mov
jg
sub
sti
lret
bound
dec
push
add
mov
adc
jnp
jmp
jo
jo
sub
clc
or
mov
sub
jne
rcrl
ret
pusha
cld
push
and
lret
and
push
bound
out
sbb
call
or
enter
adc
adc
insb
rol
dec
loope
jecxz
sub
ljmp
das
pop
fdivp
add
repz
lds
in
test
out
pop
mov
mov
add
repnz
pushf
stos
outsb
je
mov
inc
fistpll
mov
xchg
imul
lock
pop
jmp
dec
test
pop
xchg
adc
ror
mov
lahf
push
aaa
lahf
jb
call
push
lret
mov
pop
icebp
out
and
cs
lea
and
add
xchg
mov
cli
jnp
mov
ficomps
xchg
add
std
addb
out
lea
sub
mov
xor
xor
sub
jmp
lret
outsl
push
test
inc
enter
push
mov
or
and
xor
push
sub
jbe
push
insb
sub
cmp
insb
mov
mov
pop
xor
jns
xlat
inc
clc
mov
push
mov
jae
shrl
aaa
inc
adc
jge
ss
push
pusha
in
sbb
ljmp
and
test
xchg
cmp
cwtl
test
scas
movsb
stos
dec
jle
sub
or
mov
mov
into
bound
or
push
enter
shl
mov
test
stos
lock
and
iret
call
call
test
jp
mov
or
sub
in
or
mov
cmpb
dec
in
rolb
enter
outsl
lret
xor
cmp
imul
push
loop
scas
inc
cld
lock
inc
xchg
cmpsb
mov
jp
inc
subl
ljmp
push
sub
push
push
push
js
xchg
out
fcom
in
in
or
movsb
or
pop
sub
fwait
ljmp
test
ds
sti
inc
test
sbb
icebp
ret
les
int
mov
in
mov
loopne
mov
mov
stos
cmc
add
push
mov
mov
jb
in
mov
cmpsl
lock
pushl
cmp
xchg
cwtl
push
mov
pcmpeqd
sbb
into
arpl
decl
lret
sub
mov
sbb
inc
addb
enter
push
outsb
popa
int3
test
enter
icebp
mov
lahf
ret
xlat
loopne
ljmp
fldcw
add
stc
mov
jmp
std
push
push
adc
push
cli
movsl
stos
fs
pop
imul
mov
cli
mov
repz
fs
in
nop
jo
and
lock
incl
push
adc
adc
mov
daa
sbb
mov
or
inc
nop
sub
hlt
xchg
rolb
cmp
add
cmp
aaa
xor
mov
in
sbb
inc
xchg
xor
rcrb
arpl
ja
push
insb
xchg
icebp
addl
cld
call
xchg
and
xchg
mov
test
fs
loop
cli
mov
add
iret
xchg
lods
cs
rorb
filds
int3
mov
add
adcb
cltd
jle
dec
jmp
lea
add
or
add
scas
pop
mov
jmp
pop
clc
cmp
xchg
jne
xlat
mov
jge
fstpl
cwtl
cwtl
dec
sbb
cmpsl
insl
mov
shr
jb
inc
test
and
cmpsb
ret
cs
enter
filds
sbb
dec
aam
xchg
in
mov
psrld
hlt
shlb
sbb
mov
inc
mov
push
in
js
pop
sbb
jg
scas
xchg
repz
or
loopne
inc
cmpsb
stc
in
push
fbstp
or
div
pop
aad
aam
and
or
sub
mov
js
lret
ja
or
push
mov
cmp
jns
xor
push
lock
sbb
mov
sbb
mov
adc
inc
in
subb
imul
loopne
xor
jne
adc
adc
jl
sub
call
inc
push
cmp
mov
jecxz
outsb
dec
mov
dec
jle
push
xchg
decl
pop
test
std
bound
mov
das
mov
adc
mov
or
rolb
inc
cmp
adc
iret
sub
xchg
sub
pushf
xchg
lock
mov
xchg
rcl
in
jg
adcl
sbb
or
das
xchg
iret
jns
xchg
insb
cmp
inc
xchg
orl
xchg
jg
sbb
fidivs
outsb
jnp
in
popf
sub
add
push
jne
js
pop
pushf
mov
dec
mov
call
sarl
je
push
jns
out
fwait
cs
add
cmp
enter
sahf
fsub
cmp
in
push
pop
sub
ss
add
mov
pop
pushf
mov
mov
push
and
push
pop
mov
push
inc
xchg
add
lret
aam
mov
mov
push
fsubl
or
sbb
push
lcall
mov
jne
out
andl
cli
adc
into
add
sub
gs
push
aaa
adc
or
xor
or
fcoml
fbld
leave
outsl
cltd
jl
pop
int
rcr
push
add
dec
stos
lahf
test
dec
cld
push
fadd
inc
outsl
push
add
jbe
pop
mov
dec
adc
scas
add
cs
jg
mov
sbb
jle,pt
cwtl
cmc
lcall
and
mov
test
adc
inc
ret
dec
cltd
test
pop
cmc
das
mov
fcmovb
sbb
xchg
add
out
and
mov
mov
pop
cwtl
push
out
and
mov
pop
xchg
loope
in
pop
inc
ljmp
hlt
pop
jns
or
xor
add
or
mov
pop
dec
pop
call
mov
pop
jno
out
xchg
or
insb
stc
mov
jmp
add
in
scas
fs
sar
push
xchg
and
les
jo
xor
subb
inc
push
or
xor
jae
push
mov
sbb
daa
leave
mov
cld
sbbl
scas
addl
movsb
outsl
xchg
mov
jmp
jg
adc
repnz
jo
push
cld
cmpsb
ja
out
lock
dec
div
mov
cmpsl
push
adc
jmp
cmpsl
sub
mov
dec
mov
add
repnz
hlt
dec
jb
sub
xchg
das
jp
cltd
sub
mov
filds
out
push
call
fld
iret
dec
xor
mov
shrb
nop
sar
mov
clc
pop
dec
mov
std
push
mov
and
cld
inc
repz
ljmp
pop
push
sbb
xor
aad
xchg
lcall
jmp
movsl
mov
js
sbb
inc
test
jle
test
mov
decl
lret
push
or
add
enter
cmpb
inc
cmp
jbe
call
sub
pop
cs
mov
push
jle
adc
pusha
adc
jmp
out
push
push
faddl
xchg
push
sarb
mov
jmp
adc
in
in
push
outsl
xchg
jo
rcrb
push
or
add
dec
add
orb
movsb
mov
jmp
inc
mov
mov
mov
lock
ret
mov
test
mov
or
les
xor
push
ret
test
xor
xor
mov
dec
frstor
jo
movsb
std
enter
rorl
or
sbb
push
adc
dec
cwtl
clc
scas
sbb
fadds
aaa
std
out
stc
push
pop
and
jmp
mov
xchg
sub
int
lock
sbb
cli
or
mov
into
jecxz
inc
fisubl
and
dec
int3
rclw
filds
decl
xchg
push
or
sbb
in
xchg
push
stos
shll
push
outsb
iret
or
aaa
pop
imul
add
call
jl
mov
dec
adc
lods
inc
adc
cmpb
imul
pop
xchg
lds
test
xchg
xor
ja
aam
mov
or
cmp
stos
pop
mov
mov
loopne
sub
mov
xor
clc
mov
stos
in
ljmp
leave
xchg
pop
je
sub
cmp
jmp
and
daa
add
lcall
lods
add
push
setbe
aad
aad
decb
mov
fs
pop
ret
mov
adc
mov
ds
cmpsb
mov
sub
dec
ja
out
jg
push
mov
cli
mov
int3
test
ret
cmp
jo
es
outsb
enter
decl
push
cmpsl
xor
std
inc
adc
sti
into
sub
leave
and
cmp
xchg
pop
scas
xchg
fstpt
jg
cmpsl
jle
aam
movsl
shll
pop
pop
cltd
aam
jb
daa
add
sbb
in
jo
dec
jg
dec
mov
mov
into
mov
stos
cmp
xchg
sub
cmpsl
lret
cld
cwtl
pop
hlt
lcall
and
cld
cmpsl
or
pop
cli
cs
push
and
mov
testb
push
fcom
pop
add
jg
jo
fisttps
mov
inc
orb
xlat
movsl
shrb
fdivs
clc
jmp
dec
mov
cmp
and
jge
test
aaa
add
mov
mov
enter
or
mov
or
fnstcw
cmp
dec
push
shll
repnz
movl
sbb
pusha
mov
add
push
int
addr16
jp
push
pop
and
xchg
jo
inc
xchg
xchg
rolb
pop
je
ret
in
push
ljmp
ret
rolb
in
push
lods
mov
shll
mov
pop
shr
adc
cmp
pushl
shlb
dec
icebp
xor
sbb
and
fcmovnb
loop
xor
jg
dec
insb
jb
pop
sub
lea
call
inc
pushf
dec
cmpb
aam
arpl
xchg
icebp
jg
sub
mov
rcr
mov
les
cmp
mov
out
and
sub
push
jne
inc
andb
movsl
mov
sub
leave
jnp
dec
pop
ret
les
js
xchg
ret
push
sar
xchg
xchg
neg
movsb
sub
mov
inc
cmpsl
mov
movq
testb
popf
add
pop
call
jnp
fwait
imul
lods
pushf
pop
pop
pop
sahf
ffreep
xor
mov
aaa
jb
sbb
call
mov
cwtl
mov
jno
mov
popa
push
ror
icebp
add
lods
sub
lahf
stos
stos
inc
mov
cwtl
loopne
cmp
mov
pop
dec
cld
bound
jg
dec
sbb
fildll
xor
call
into
gs
mov
or
jnp
mov
loope
adc
ljmp
hlt
mov
mov
sbb
addr16
or
xor
xchg
xchg
hlt
daa
dec
pop
fldcw
js
or
repz
cltd
out
and
outsb
lods
xchg
pusha
add
inc
push
xchg
rcrb
mov
and
ret
push
data16
aam
xchg
lcall
mov
aad
mov
aaa
jle
jle
aad
sub
idivb
mov
cmpb
add
push
xchg
xchg
jle
imul
jae
cmpsb
adc
insl
cmp
or
mov
lret
test
sub
adc
sbb
inc
sar
jg
data16
push
mov
nop
aam
aad
ret
nop
popa
outsb
cmpl
shll
dec
fmulp
mov
inc
sti
outsl
push
push
gs
aas
fcmovnb
add
cmp
pop
out
orb
sar
inc
push
mov
icebp
ja
shlb
scas
bound
mov
xchg
mov
popf
dec
rol
stos
outsb
mov
inc
loope
or
inc
call
mov
outsb
mov
xchg
and
shrl
inc
cli
fidivrl
mov
enter
sar
test
dec
inc
mov
and
adc
adc
cmpsb
dec
bound
mov
sbb
sbb
dec
mov
prefetch
mov
mov
popa
pop
flds
sbb
pop
inc
popf
nop
ret
lock
repnz
mov
scas
mov
xor
xchg
fstp
cmc
aas
adc
dec
ds
mov
jne
ss
out
out
stos
rorb
je
or
or
hlt
push
movsl
jo
push
pop
ljmp
outsb
shll
mov
sbb
or
xchg
rcl
sbb
and
call
aam
fbstp
or
cld
mov
sbb
insl
pop
ss
mov
pushf
call
sbb
lahf
dec
mov
cmpsb
push
dec
in
push
leave
test
xchg
adc
xlat
incl
xor
mov
inc
mov
lock
int
adc
sub
ljmp
out
aad
outsl
std
in
enter
movsl
nop
push
jl
or
jns
adc
dec
cld
shl
sbb
das
or
outsl
clc
in
xchg
jo
gs
add
nop
fsubr
popa
sbb
daa
stos
pop
mov
arpl
stos
rcrl
rolb
sahf
fwait
jnp
lcall
cmpl
pop
sahf
mov
out
out
lds
cmp
das
clc
xchg
cmp
mov
loopne
jnp
inc
sbb
call
filds
fdivr
mov
add
xchg
int
xchg
mov
pushf
mov
jge
jg
aaa
mov
pusha
and
negl
lds
mov
clc
fwait
add
mov
mov
xchg
xor
pop
cmc
mov
clc
cmp
jl
pushf
sbb
out
mov
add
pop
fsubs
push
mov
or
push
add
or
ret
mov
mov
cmp
mov
fs
cmp
mov
add
push
sub
cmp
jg
decl
in
cld
xor
add
adc
iret
jl
cs
cmp
and
fs
inc
dec
stos
sub
out
pop
call
xor
loopne
adc
out
arpl
sbb
enter
jbe
in
add
fisubrs
push
stc
pop
lods
inc
inc
inc
cld
pop
push
cmp
test
jle
push
call
push
mov
xor
imul
cmpb
cwtl
mov
inc
call
dec
fmulp
daa
dec
add
aaa
add
aam
cmp
test
mov
jl
jo
add
jne
cmp
das
and
pop
push
jecxz
in
ficoms
movsl
mov
fldt
fs
or
das
jp
hlt
testb
mov
aaa
roll
cmp
jb
mov
xchg
icebp
pop
movsb
push
mov
sahf
jbe
cld
jmp
xor
aaa
or
fcom
cld
pop
in
mov
mov
cli
pusha
cmp
mov
popl
pusha
call
xchg
adc
inc
sub
aam
push
mov
leave
mov
dec
xchg
out
inc
aad
pushf
shl
push
jbe
cmpsb
aas
and
pop
and
add
sub
mov
pop
mulb
popf
and
jbe
movsb
dec
sbbb
je
mov
mov
shlb
popa
pop
mov
mov
hlt
stc
pop
mov
fdivs
or
mov
icebp
arpl
fisubrl
xchg
scas
add
cld
nop
inc
stos
stos
push
xchg
mov
xchg
xchg
insb
mov
jo
fstpt
dec
inc
and
cmp
je
and
mov
push
in
sbb
out
mov
stos
and
andb
adc
jl
pop
adc
inc
pop
shlb
xor
ja
and
sub
loope
les
cmp
inc
cli
cld
mov
scas
lock
add
dec
scas
add
mov
inc
sbb
fwait
sub
xor
fisubrs
mov
adc
push
pop
mov
push
pop
push
nop
mov
scas
mov
lret
aam
mov
add
lds
cmpb
push
xor
mov
pop
xorb
popf
adcb
push
mov
jle
addr16
sub
cmp
outsl
ficompl
push
into
jne
imul
mov
in
pushf
mov
pushf
inc
add
xor
inc
repnz
push
lret
mov
repz
test
inc
mov
stos
or
jo
add
fisubrs
inc
loopne
and
lcall
sbb
fstpl
push
dec
cmp
shrl
jl
test
jmp
sub
out
pop
adc
xchg
loopne
aam
sub
mov
cli
inc
pop
popa
sbb
scas
xchg
mov
leave
add
mov
sbb
aas
push
fdivl
xchg
mov
cltd
movsl
clc
aas
mov
cmpsl
adc
frstor
xchg
add
les
xor
mov
in
std
aaa
std
andb
add
loopne
xchg
or
jp
add
stos
xchg
and
repz
mov
push
lock
jecxz
mov
pop
ficoms
inc
mov
les
jg
dec
and
sub
mov
ds
push
sbb
mov
jo
mov
push
inc
aas
loope
inc
cwtl
sub
insl
adc
clc
movsb
stc
push
mov
or
cld
dec
xorb
mov
pop
push
fsubs
adcb
lret
movsl
inc
sbb
sub
jg
jns
mov
mov
ljmp
shl
push
adc
cld
shll
xchg
test
mov
int3
icebp
test
sbb
and
loop
mov
ja
mov
sub
rcrl
push
pop
and
adc
fs
push
pop
rclb
add
push
jbe
add
add
xchg
mov
mov
es
fs
hlt
test
xchg
lcall
ljmp
fiaddl
dec
and
jg
xchg
pop
sbb
andl
xchg
rcr
mov
iret
cmc
insl
sbb
outsb
ja
in
cmc
cmp
jne
push
dec
cwtl
jne
jno
mov
and
mov
xor
js
adc
add
push
xchg
xor
lock
inc
test
lret
mov
mov
fcmove
add
stc
idivb
or
test
pop
cmp
in
cli
jg
push
enter
mov
sbb
add
sub
sbbb
jmp
js
jge
pop
js
cmpsb
fcomi
mov
lds
gs
and
cld
sbb
idivb
and
rclb
xor
mov
je
push
sub
xchg
popa
dec
mov
mov
cmpsl
mov
incl
or
push
jmp
pop
aam
pop
push
movsb
ljmp
lcall
out
pop
cmc
sahf
sub
scas
sbb
xchg
push
inc
mov
sub
add
xchg
lret
fildl
lret
pushf
popf
add
icebp
sub
dec
xor
mov
ret
aaa
inc
cli
pop
xor
mov
in
pop
out
cmp
jecxz
sub
xor
test
push
mov
cmpb
cld
scas
fdiv
fsts
mov
jbe
add
and
mov
add
adc
xchg
cltd
or
dec
stos
es
lock
int3
jmp
jnp
scas
or
iret
test
mov
sub
shlb
aam
negl
lods
ljmp
pop
cwtl
jl
loopne
jno
jnp
dec
stos
sbbl
jmp
ret
or
sarb
cmp
push
sbb
fisubl
add
out
adc
jle
inc
add
call
xchg
repz
jge
jnp
jl
mov
adc
fs
out
cmp
mov
xlat
imulb
iret
je
inc
loope
xchg
add
mov
incl
lea
mov
jb
and
das
sar
fs
lret
rcr
mov
mov
sbb
cmp
arpl
outsl
push
dec
repz
xor
insb
cmp
push
in
popa
std
sub
mov
bound
or
insl
mov
dec
pop
int3
mov
sbb
aaa
sub
push
bound
fisttpll
lea
hlt
mov
aam
mov
inc
in
pushl
lret
xor
mov
mov
decl
rcrb
bound
loope
xchg
mov
or
sbb
dec
and
mov
or
fs
mov
mov
enter
into
div
or
cmc
dec
xor
ss
adc
push
out
cli
dec
mov
shrl
jge
add
lret
scas
dec
jg
cmp
std
arpl
sub
xchg
push
lret
pop
xlat
loopne
mov
pop
mov
or
es
aaa
adc
mov
mov
cmpsl
mov
and
out
add
dec
jnp
and
xor
in
mov
pop
test
addr16
push
ret
js
mov
movsb
sbb
pushf
ljmp
lock
jne
test
pop
insl
mov
push
mov
jae
jb
mov
lret
sbbl
lahf
xor
outsl
in
cltd
in
addr16
xchg
lds
pop
daa
xchg
ss
add
ss
add
loopne
add
shl
or
int
xor
ljmp
inc
cld
dec
enter
aas
mov
mov
push
pusha
jnp
pushf
sbb
and
std
mov
decl
cmp
fdivp
lds
pop
in
repnz
fsub
pop
inc
xor
mov
mov
xchg
scas
addb
pop
in
inc
jbe
iret
subb
inc
push
sbb
out
jnp
in
mov
jae
vcvtps2pd
dec
or
xor
std
jg
mov
leave
loop
loop
lods
pop
negl
fnstcw
jo
fcompl
clc
aas
mov
lret
sub
mov
xor
ljmp
or
or
pop
insb
idiv
lock
pop
out
aas
dec
dec
mov
jo
outsl
pop
sbbl
stos
scas
mov
loop
call
mov
imul
into
mov
push
fbld
icebp
subl
out
imul
sbb
inc
jl
pop
lock
inc
cmpl
push
dec
loopne
imul
pushf
fists
outsb
sbb
stos
outsb
pop
shr
xor
dec
fs
sbb
std
cwtl
sbb
mov
mov
dec
mov
and
ret
inc
xlat
jg
sbb
shl
push
cmp
xor
sbb
push
nop
xchg
imul
dec
fmul
data16
jb
jb
or
cmpsb
dec
adcb
std
out
clc
lcall
sahf
fnop
loope
insl
pop
push
pop
aaa
xor
jo
mov
les
push
scas
xchg
or
xor
fdivl
in
imul
xchg
xchg
jg
push
call
movb
jp
jmp
dec
inc
scas
add
inc
jg
aad
sbbb
adc
in
cld
ds
imul
and
pusha
fistpll
movsl
fcoms
push
mov
xchg
inc
mov
mov
cltd
cltd
aam
xchg
icebp
sub
pop
inc
xor
dec
test
mov
or
in
outsl
test
jbe
sahf
adc
push
cld
mov
sbb
ljmp
push
inc
jl
lcall
and
inc
dec
pop
mov
pop
clc
outsl
lock
std
out
push
mov
cmp
jno
incl
loopne
lret
aas
push
mov
mov
test
push
je
xor
insb
push
and
scas
sub
fnsave
int3
inc
sub
cmpb
loop
lcall
push
mov
pop
push
cltd
stos
out
cmpsl
test
pop
mov
andl
xor
test
sub
add
inc
add
imul
push
fisubrs
xchg
mov
mov
xchg
fld
call
inc
inc
xor
pop
lock
mov
push
mov
add
repnz
cmpsb
aam
lahf
and
xchg
aas
data16
popf
mov
loop
arpl
aam
stos
sub
mov
loope
cmp
ret
das
mov
push
fcomip
cmpsb
jg
pop
xorb
ja
cmpsl
out
les
mov
xchg
xchg
jo
subl
or
testb
xchg
call
insl
push
pop
push
test
fidivl
sub
push
pop
xchg
jp
xor
push
shrb
push
in
sub
lock
push
mov
push
push
clc
jnp
movsb
mov
out
push
mov
test
lds
push
ror
fisubrl
and
xlat
jg
mov
mov
insl
adc
mov
fimuls
or
les
adc
xor
xchg
xchg
jecxz
aas
mov
xchg
test
pusha
outsl
dec
add
push
inc
or
movsb
add
repnz
ljmp
enter
pop
cmc
adc
hlt
fcomps
jge
mov
pop
jp
jnp
mov
aad
pop
add
inc
push
adc
fnsave
in
cmpsb
in
out
callw
adc
adc
mov
push
sub
or
stos
in
shrl
aam
mov
jns
insl
clc
add
xlat
pop
ja
jb
xchg
sarl
sub
stc
sub
and
and
aam
or
adc
je
jg
jo
sbb
jb
decl
daa
std
push
cltd
adcb
dec
out
jo
ret
mov
test
xchg
cmpb
add
push
xor
pop
ret
mov
fdivp
sbb
fistl
cmpl
xor
cmp
mov
pop
shrl
mov
insb
int3
jno
pop
sub
popf
mov
xor
testl
jle
mov
ljmp
dec
and
lods
and
adc
faddp
jo
outsl
push
das
push
mov
push
push
call
jecxz
mov
mov
sbb
movsb
pusha
cmpsl
ljmp
loopne
cltd
xchg
push
jp
cmp
sbb
aam
subb
mov
cmp
mov
sub
dec
sbb
jbe
inc
pop
jle
pop
roll
or
cli
xchg
push
pop
or
mov
jae
dec
mov
icebp
lods
pop
pushf
andb
lods
cmp
rcr
call
fs
imul
stos
pusha
dec
and
inc
sub
loope
and
clc
and
mov
cwtl
add
xchg
xlat
xchg
push
xchg
xor
push
mov
lcall
inc
aaa
addb
jl
lret
out
or
addb
mov
and
out
mov
push
jge
int3
adc
jecxz
sbb
cmp
and
mov
xor
rolb
gs
inc
or
in
rcrb
and
push
movsb
mov
aas
fsubrl
dec
jmp
ljmp
out
pop
insb
stos
in
popf
mov
fs
adc
xor
negb
es
stos
jmp
jecxz
decl
mov
je
cs
loopne
mov
clc
and
push
xlat
push
ret
leave
xor
das
xchg
in
out
add
ficoms
sub
mov
push
xor
inc
mov
pop
stos
add
jo
adc
push
dec
ret
pop
xor
adc
adc
aas
or
mov
in
enter
jae
mov
out
xchg
dec
outsl
cli
outsl
mov
and
jae
cmp
pop
inc
orb
pop
lock
dec
outsl
adc
cmp
stos
shl
clc
ljmp
lock
in
inc
sub
cmpsb
fiaddl
mov
or
lds
insb
call
push
or
fildll
add
fisttps
out
jo
std
jno
lock
pop
inc
divl
dec
push
dec
jle
push
or
sub
pop
cld
mov
xchg
pop
mov
cmp
mov
lock
fldt
hlt
movsl
pop
lods
fdivl
pop
push
cmp
movl
fsubrs
enter
mov
outsb
mov
scas
jg
xchg
aad
jp
loopne
sbb
sub
enter
dec
jb
mov
add
sub
data16
fimuls
jge
insl
enter
dec
inc
in
lock
test
push
mov
or
movsl
adc
pop
pusha
test
shl
push
jmp
jmp
rclb
pop
lock
and
xor
push
fidivrl
mov
mov
pop
ljmp
shrb
mov
arpl
inc
mov
sub
aas
sbb
xchg
insl
mov
das
jl
sbb
mov
lahf
sarl
gs
xchg
out
and
dec
lahf
add
es
std
sti
icebp
dec
sbb
popf
mov
mov
cmp
movsb
dec
mov
mov
adc
mov
test
or
adc
stos
test
hlt
call
mov
add
sbb
add
dec
pop
js
xchg
mov
jmp
rorl
sahf
rol
jg
jle
stc
mov
rorl
cs
dec
lea
add
xchg
mov
jno
sarl
push
scas
shlb
popf
mov
xchg
dec
adc
aam
sbb
loop
insb
lods
scas
and
xlat
dec
jmp
decl
shll
push
mov
dec
mov
push
ljmp
xchg
adc
mov
dec
mov
shll
cmc
mov
ljmp
sar
add
xor
ljmp
lret
rolb
add
jno
imul
bound
pop
jmp
inc
stos
and
add
ljmp
push
dec
dec
scas
mov
adc
push
divb
loop
or
loope
jg
add
adc
push
or
pop
inc
dec
cs
test
sub
loopne
jmp
movsb
jl
add
test
jns
adc
lcall
adc
int3
je
mov
push
cmp
or
nop
loop
sub
inc
inc
add
dec
ficoms
pop
movsb
incl
mov
iret
sub
in
jo
push
cmp
cmpsb
test
mov
add
aad
mov
sub
add
cmp
jae
jp
data16
push
add
popa
push
pop
and
mov
ret
or
cmc
lret
lea
pop
sti
add
pushl
scas
aam
or
out
or
xchg
icebp
cmp
or
das
js
xchg
mov
inc
aad
sub
push
js
cmp
inc
jnp
xor
sub
call
ja
sub
dec
ja
mov
mov
push
and
or
js
repnz
jb
pop
or
mov
sti
add
pop
mov
dec
inc
xchg
pop
mov
add
push
sbb
ljmp
xor
push
sub
xchg
mov
adc
mov
aad
ret
and
aam
repz
xorl
sbb
inc
or
enter
pop
inc
xor
adc
and
nop
mov
fwait
or
or
push
sub
lcall
adc
daa
data16
jge
or
scas
sarl
sub
mov
xchg
sbb
and
mov
inc
aas
es
ja
dec
add
jg
insb
ja
ljmp
dec
pop
inc
mov
mov
test
xor
nop
jg
lds
add
mov
or
and
or
xor
hlt
sbb
sbb
loop
adc
scas
jg
call
stos
xchg
sahf
daa
mov
jge
jg
sar
lock
xchg
or
ficoms
push
or
nop
dec
cmp
and
mov
loop
sub
enter
xchg
lock
hlt
sbb
sub
sbb
inc
into
jb
mov
sub
aam
fmull
sub
sti
or
sub
mov
push
mov
push
mov
mov
loopne
or
scas
and
add
mov
mov
mov
sarb
add
mov
lock
inc
iret
movsb
inc
aam
sub
or
sbb
push
jle
inc
test
outsl
decl
call
cld
mov
or
inc
cmpsl
shrl
adc
add
sub
ljmp
les
add
mov
push
aad
mov
insb
add
addr16
shll
loopne
xlat
sub
inc
sub
xchg
call
les
inc
jnp
mov
out
clc
xlat
sbb
fdivrs
mov
inc
mov
inc
or
and
pop
fistps
jae
fcomip
jae
push
mov
xor
jne
into
sti
push
mov
fidivrl
sub
shlb
mov
sub
stos
aaa
xor
in
dec
call
fisttpll
mov
in
or
ja
push
iret
add
pop
jle
shrl
sarb
push
out
jp
add
scas
or
insl
ret
push
or
loop
pushl
loop
add
xor
mov
out
es
add
clc
add
jp
cmpsl
dec
sub
xor
push
mov
lock
fildll
notb
divb
repz
repnz
pop
hlt
pop
aad
pop
fiadds
aam
fsubrs
or
push
std
sub
push
bound
sub
into
sahf
insb
lcall
xchg
jae
sub
mov
les
lods
inc
add
addb
mov
lahf
cmp
enter
psrlw
cmp
add
push
clc
mov
jno
fwait
push
adc
and
sub
loopne
aad
or
lahf
lods
outsl
mov
sbb
and
push
inc
mov
lds
aas
fcompl
push
dec
out
xchg
jecxz
inc
xchg
imull
or
sub
cmp
push
or
sub
icebp
enter
les
xchg
xor
lcall
mov
inc
shlw
dec
mov
sub
lcall
incb
scas
xchg
cld
decl
pop
jg
in
sub
sub
pop
sahf
and
sub
push
imul
mov
mov
ljmp
es
jae
adc
js
jl
lods
clc
sbb
aad
cmpsb
divb
in
shll
rcrb
das
sub
insb
xchg
aam
xchg
mov
leave
movsb
pop
fwait
mov
ret
aad
enter
pop
lock
rorl
or
jnp
jo
les
push
xor
jle
fcoml
test
ret
stc
jmp
or
lock
mov
sub
std
pop
mov
je
cli
das
mov
mov
fbstp
sbb
push
lods
test
mov
ljmp
sbbb
mov
sub
lock
xchg
stos
pop
daa
lahf
and
aaa
rcrb
imul
jle
hlt
aas
fwait
xor
push
ds
jmp
jg
inc
inc
adc
in
iret
xchg
jae
lock
and
pushl
mov
adc
popa
bound
fcoms
les
outsl
add
cmp
pop
pop
adc
pushl
dec
pand
rorl
enter
es
aad
sub
mov
mov
adc
mov
or
adcb
repz
xchg
dec
jno
fiadds
pop
rorl
cld
cmpsb
cs
ss
jp
adc
fninit
sbb
xchg
add
lret
orb
repz
int
das
push
ds
idivl
mov
inc
add
subl
xchg
jl
in
add
out
xchg
cmc
xchg
and
jp
adc
cli
decl
inc
scas
lret
dec
lcall
fiaddl
inc
data16
mov
adc
test
mov
xchg
fsubl
loope
cmpsb
xchg
adc
sub
mov
dec
cmc
xor
push
dec
testb
mov
push
dec
or
ret
cli
in
outsl
adc
adc
cli
push
js
jge
add
insb
adc
mov
or
pop
inc
rorb
ljmp
div
mov
sub
pop
cmp
decl
in
out
lahf
repz
push
mov
shrl
mov
roll
fwait
les
jge
add
dec
sahf
je
lret
mov
repz
fstps
rclb
jno
sahf
push
aam
ret
and
push
jge
pop
dec
xor
ret
sbb
cmpsb
jg
mov
jge
mov
divl
push
or
rclb
ja
test
and
jns
xchg
sti
xchg
adc
push
sarl
cmpsb
dec
mov
fs
icebp
adc
imul
lahf
movsb
mov
sub
sbb
ja
or
adc
test
xor
daa
mov
icebp
jmp
adc
ljmp
adc
and
or
popfw
clc
cmpsl
sahf
push
add
roll
stos
sbb
stos
mov
loope
jl
hlt
lods
cmc
lock
add
imul
xchg
inc
dec
mov
shl
fwait
adc
sbb
jne
fdiv
inc
or
mov
sub
jbe
push
ret
pop
nop
push
and
and
aas
cmpsl
arpl
push
or
sub
js
pop
into
mov
incl
loopne
shrb
cmp
xchg
dec
or
stos
lret
adc
loop
fisubrl
jl
and
dec
lcall
mov
stos
mov
inc
cli
jns
pushf
ss
mov
repnz
dec
mov
stc
repnz
pop
std
mov
mov
aaa
xchg
push
sbb
mov
xor
vpminsw
push
shll
jbe
xor
fistpl
jg
fsubr
mov
test
imul
and
jo
outsl
cli
cmpsb
cmp
iret
inc
push
mov
xchg
stos
fdivs
mov
jle
leave
xchg
cmpl
insl
loopne
add
das
xor
ljmp
adc
cmp
int3
call
push
lock
jae
xorb
movsb
inc
out
xor
mov
or
insb
xor
aas
push
sub
inc
cld
mov
jecxz
es
jo
loop
add
mov
inc
fisttps
mov
cmp
aaa
dec
sarb
out
arpl
cld
jg
mov
test
dec
add
mov
mov
adc
fs
ja
jns
sub
add
inc
xchg
icebp
shlb
pusha
dec
cmp
orb
fisubs
outsb
and
pop
jo
sbb
ret
loop
and
pushf
xchg
sbb
loop
sti
mov
lret
mov
pop
es
sub
add
mov
ss
aad
sub
clc
clc
mul
cmp
inc
sar
or
pop
iret
xor
or
add
dec
subb
xlat
lret
cmpl
addl
and
orb
push
fadds
lcall
mov
lds
shlb
test
jbe
pop
movsl
mov
cld
stos
mov
pop
es
add
insb
add
pop
pmaxsw
sar
add
or
shrb
outsb
outsl
and
inc
sub
neg
sbb
xchg
std
decl
or
dec
mov
fcmovnu
jl
pushf
cmp
test
push
sub
div
sub
aam
xchg
jmp
orb
lock
sub
mov
mov
das
sbb
push
imul
adc
lock
xchg
jle
das
inc
cmp
pop
lcall
xor
xchg
add
pop
nop
sahf
jg
dec
sub
sbb
adcb
or
lods
xor
mov
leave
aad
jp
mov
decl
push
dec
mov
push
ss
pop
cmp
pushf
shlb
pop
sti
mov
sub
sarb
jns
movsl
pop
mov
sbb
xchg
mov
add
jae
adc
adc
mov
adc
mov
mov
popf
or
out
cmp
xchg
gs
add
icebp
dec
mov
cli
and
sbbb
sarl
aaa
test
sar
mov
stos
dec
fdivrp
scas
xor
push
or
sbb
incb
insb
cmp
outsb
jmp
pop
adc
push
addr16
xor
inc
les
rcll
outsb
and
sbb
fldl
dec
push
jle
dec
cmp
push
hlt
das
inc
rcll
mov
repnz
ljmp
out
mov
stos
imul
lods
jnp
dec
xor
mov
mov
sub
imul
call
mov
xor
jp
push
stos
sub
push
fisttpll
scas
sbbb
adcb
fdivrp
sub
lcall
es
add
inc
xor
xchg
and
cwtl
lods
sbb
adc
dec
pop
enter
ficoml
and
leave
jae
pop
cld
add
popa
stos
sahf
sbb
cmp
mov
push
lds
mov
rcrl
xor
scas
fsub
test
or
mov
jp
popf
stos
and
xor
jecxz
decl
xchg
inc
mov
xchg
add
sbb
push
cmp
jne
das
leave
ret
scas
pushl
inc
andl
mov
fadds
mov
sbb
pop
lock
xor
faddp
push
std
push
xchg
loopne
sbb
sub
pusha
pop
or
add
sbb
xor
test
cmp
xchg
fisttps
in
or
push
aaa
adc
xchg
iret
movsb
mov
xor
jl
inc
xor
loope
loop
ss
xchg
popa
mov
scas
push
lahf
adc
and
orb
pop
or
mov
sti
xor
jl
mov
iret
sbb
aam
mov
in
shlb
add
scas
test
clc
or
in
dec
cli
pushl
fimull
fcmove
stc
dec
in
adc
pop
xchg
jecxz
test
aaa
pop
ljmp
fisubs
sbb
scas
push
pusha
ret
mov
loope
sub
push
push
mov
jo
pop
rorb
add
movsl
mov
stos
ret
data16
mov
idivb
shrb
mov
jns
mov
cmp
out
push
dec
call
cmp
mov
and
jo
lcall
and
mov
jge
jge
out
and
jo
clc
adc
cmpsl
xchg
inc
je
mov
stc
sub
dec
ret
cmp
clc
and
mov
stos
cmc
adc
xchg
push
sbb
movsb
outsb
xchg
cltd
or
cltd
add
pusha
cmp
ret
mov
imul
stos
mov
dec
pushl
fcom
mov
dec
outsl
sahf
inc
push
pushl
jp
mov
sbb
imul
pop
inc
fidivl
loopne
inc
inc
out
jmp
or
imul
or
mov
adc
jno
enter
sahf
bound
mov
pop
adc
jp
call
lret
imul
and
ljmp
nop
ljmp
cmp
mov
ja
xchg
ljmp
rcrb
inc
shll
jl
pushl
push
sbb
mov
outsl
incl
or
sbb
or
jns
jbe
idivl
sbb
xorl
in
and
jmp
mov
mov
daa
jns
dec
xor
pop
push
notl
jg
rclb
rclb
out
mov
lock
sarb
dec
stos
cmc
pop
mov
int3
jnp
movsb
in
fsubrl
or
in
fwait
sbb
shlb
push
add
call
lock
xchg
data16
sbb
pop
inc
mov
insb
cli
shll
out
pop
push
adc
aas
or
loope
pop
int3
jbe
mov
mov
fmulp
push
adcl
lcall
sbb
pusha
pop
outsl
mov
inc
stos
or
bnd
cmpsb
xchg
cld
jae
std
aas
xor
push
xchg
fstpl
mov
mov
frstor
cmpsb
jg
sbb
jecxz
rorl
pop
inc
rclb
loop
or
repz
cld
out
cmc
or
xor
xchg
test
add
add
mov
pop
adc
adc
imul
xor
add
or
dec
dec
pushl
fdivl
repnz
jmp
or
push
lcall
jo,pt
dec
add
enter
pop
dec
clc
jnp
jo
mov
add
mov
inc
cmovg
loopne
ja
sbbb
mov
dec
orb
popa
xor
jae
pop
jmp
jno
pop
xor
add
rorl
dec
outsb
xor
sbb
inc
push
call
pop
cli
jno
sub
ljmp
sbb
aas
xor
xchg
mov
filds
pusha
jecxz
lea
mov
in
decl
test
popa
push
dec
inc
fisttps
shlb
loope
mov
add
mov
out
lods
or
cmpsb
lret
jns
icebp
lds
dec
or
mov
incb
adc
into
xchg
mov
out
test
cwtl
sub
jp
xlat
pushl
stos
adc
fcmovnbe
icebp
movsl
jns
dec
mov
jbe
jne
mov
or
add
sbb
or
clc
mov
adc
lret
jg
incl
in
mov
test
scas
and
cmc
pop
lcall
cmp
ljmp
fistl
lcall
mov
mov
jo
or
push
les
outsl
mov
call
dec
std
and
mov
xor
fidivl
mov
jne
mov
pop
sub
rcrl
jae
mov
adc
ret
mov
adc
and
stc
cli
inc
push
dec
sbb
aam
rorb
adc
sub
fisttps
xchg
sbb
loopw
ret
pushf
out
nop
cli
jg
icebp
push
outsb
push
pushf
outsl
movsb
add
mov
outsl
call
jno
inc
in
adc
loopne
sbbb
insb
xor
movsl
xor
insb
mulb
jle
fcmovnu
popf
ret
std
ja
fdivrs
inc
mov
nop
or
fs
push
pop
adc
xchg
xchg
jp
divb
pop
mov
dec
cmp
xchg
cmp
or
push
pop
fnsave
aam
and
leave
fistps
popa
push
ljmp
fdivl
xlat
xlat
es
loop
test
into
add
inc
mov
neg
xor
mov
jp
incb
pop
sub
hlt
cwtl
mov
in
in
lret
and
or
cmpsl
out
sbb
stos
mov
xor
js
dec
mov
clc
inc
clc
dec
lods
scas
sub
fidivs
add
sub
inc
aaa
cs
adc
xor
pushl
shrb
shr
push
pop
daa
out
fucomi
call
test
inc
pushl
repz
and
gs
cmpsb
fwait
add
pop
add
xlat
sbb
jne
pusha
jno
in
add
imul
pushl
mov
arpl
out
shlb
xchg
mov
fisttps
push
fstpt
mov
hlt
cwtl
mov
loope
adc
sbb
adcl
xchg
ljmp
int3
in
or
pop
outsl
outsb
adc
repz
push
int3
jl
jbe
xchg
mov
rcl
and
sbb
jl
add
push
adc
push
pop
lahf
jbe
mov
repnz
fistps
cmpsb
xchg
jo,pn
push
js
stos
stos
pusha
outsb
add
ljmp
mov
mov
push
sub
roll
mov
or
cmp
xchg
dec
jecxz
ds
xchg
icebp
incl
mov
out
push
addb
pop
mov
in
sahf
les
adc
and
cld
lea
dec
jecxz
or
dec
xchg
or
clc
sar
lcall
popf
add
outsb
mov
ss
mov
andb
fldt
push
jns
cs
inc
push
sub
cwtl
cmp
inc
inc
pshufw
push
sbb
jecxz
pop
je
sub
aaa
nop
and
lret
inc
jl
or
ds
push
test
stos
push
aam
div
dec
les
mov
sub
or
sar
in
shl
xchg
jecxz
rclb
addl
inc
insl
cmp
xlat
sub
dec
std
jmp
cwtl
cmpsl
mov
mov
repnz
mov
shr
call
mov
push
les
inc
mov
add
imul
pop
das
stos
dec
loope
mov
jo
mov
out
add
fwait
inc
xor
stos
jmp
hlt
sbb
xor
inc
daa
les
inc
incb
cs
cmp
pop
adc
push
add
pop
sar
lahf
outsb
mov
or
pop
aad
incl
dec
inc
pop
or
out
int
fmulp
orl
imul
mov
sbb
ja
imul
and
arpl
test
pop
jns
mov
add
adc
lahf
fsubrl
shrb
lret
inc
jl
stos
push
mov
cmp
inc
negb
push
lret
mov
shll
ret
shrb
in
lea
negb
ja
fistps
pop
mov
push
pop
aam
inc
pop
and
lea
sbb
pushl
add
xchg
pop
sub
push
loopne
cmp
and
imul
jp
in
fs
xchg
and
stos
jne
out
cld
outsl
loop
push
fdivr
pop
fwait
into
divb
repz
cli
xor
adc
jle
incl
inc
xor
xor
add
push
jmp
jmp
sti
inc
push
push
inc
add
push
clc
arpl
xchg
cmp
xor
ljmp
add
lods
mov
xor
cs
in
pop
mov
adc
decl
push
pushf
mov
sub
xchg
daa
push
test
or
rol
lea
lock
cwtl
in
pop
inc
mov
cmpl
mov
ja
pop
sbb
mov
mov
jmp
mov
cmpsb
mov
lods
mov
push
inc
lock
daa
xchg
mov
jg
mov
in
sub
cli
dec
sbb
or
insb
mov
andb
pop
sbb
or
aaa
out
ds
xchg
xor
pop
jg
adc
push
incb
and
popf
xchg
inc
mov
outsb
fcoml
cmc
orl
call
mov
clc
pop
and
dec
clc
or
pop
xchg
fs
jo
pop
cmpsb
cmp
rcrb
sub
lcall
cli
sub
repnz
out
jmp
movsb
xchg
in
ds
ss
decl
sbb
das
out
subb
pop
shr
cmp
inc
and
incl
cmp
adc
add
imul
mov
cltd
aad
or
adc
loopne
lret
sub
sub
lahf
loop
bound
sbb
cmp
lods
mov
jge
jnp
cmpsl
js
mov
jnp
mov
sbb
rcrb
mov
adc
pop
and
and
hlt
decl
mov
jle
jo
loopne
mov
jmp
jle
mov
xchg
mov
fdivrl
aaa
sbb
jmp
dec
sbb
adc
dec
push
jne
les
sub
mov
hlt
sub
outsl
adc
mov
fcomp
jg
call
cmpsb
enter
jp
ljmp
mov
fmulp
pop
aam
mov
into
fnstcw
inc
in
jp
std
add
es
divl
xlat
lret
pop
sbb
out
or
pushf
out
lods
push
inc
adc
pop
lods
xor
inc
mov
idivb
jg
xchg
ljmp
sub
enter
and
inc
jmp
hlt
in
in
jle
or
fwait
mov
mov
clc
cli
or
sbb
lcall
ds
movsb
cwtl
test
iret
popa
fsub
scas
decl
inc
std
mov
mov
add
loop
shll
adcb
sub
jnp
stos
sub
pushl
fdivrs
and
outsl
sbb
das
adc
mov
push
mov
sbb
pop
mov
fsubp
shrl
andb
inc
push
push
dec
xchg
adc
orb
fwait
neg
inc
negl
ds
adc
stc
movsb
xchg
and
cmpsb
std
push
add
push
add
mov
aad
stos
inc
je
stos
cmp
dec
cmp
ficomps
out
xchg
cwtl
mov
push
stos
icebp
mov
push
xchg
movsb
roll
push
aad
idivl
les
or
jle
sbb
cld
scas
lcall
lret
mov
add
sbb
xor
sub
cmc
pop
dec
push
js
jae
lcall
pop
inc
incl
scas
jb
cmp
cmp
fists
xor
lcall
adc
fisubs
nop
mov
je
ljmp
nop
test
dec
sub
dec
inc
int
or
xor
inc
fcmovb
jmp
ret
push
jle
in
fidivrl
cmpsb
fnstsw
sub
sub
inc
lahf
call
mov
dec
adc
pop
add
mov
jmp
dec
les
sub
cmc
add
pushl
or
xchg
jecxz
xor
mov
push
sbb
or
mov
je
iret
mov
lock
idiv
lea
cli
and
gs
stos
sahf
icebp
nop
pop
repnz
test
mov
movsb
fcomp
aaa
inc
rclb
adc
inc
xchg
test
mov
cmp
mov
repz
xor
sbb
mov
sbb
js
cmpl
sub
das
xor
imul
jb
mov
jle
dec
jg
xchg
jnp
cltd
mov
decb
ds
out
clc
pop
mov
popf
dec
pop
push
imul
out
test
call
iret
hlt
jbe
cld
jb
push
sbb
cmpsb
or
out
daa
adc
or
lock
mov
dec
or
es
fstpl
mov
fisttps
and
test
jle
call
sub
cmp
leave
and
fisubl
dec
js
inc
es
xchg
je
dec
je
je
in
xchg
xchg
imul
sub
inc
clc
inc
dec
fadds
xor
pop
cmp
loope
dec
inc
jmp
cmp
sub
ret
and
jnp
imul
cmp
loope
test
arpl
faddl
pop
dec
add
pop
lds
lcall
call
cmpsl
cwtl
push
insb
imul
mov
jb
push
lock
cld
jg
and
std
xchg
pusha
or
push
icebp
mov
mov
out
rolb
je
mov
dec
jb
adc
jmp
sub
decl
sub
cmpsb
add
shll
adcl
movsl
aad
jo
xchg
mov
dec
test
push
lret
scas
push
and
loope
add
adc
out
sarb
mov
pushf
aad
sarl
lahf
xchg
mov
sub
sbb
movsl
mov
lcall
xchg
rorb
js
and
shll
or
subb
test
and
pop
icebp
incl
sub
sub
repz
sahf
pop
add
pop
push
popf
call
into
dec
sbb
lods
in
pushf
mov
inc
rcll
test
or
fisttps
mov
mov
dec
xor
or
sbbb
fbstp
sub
lea
xchg
dec
sar
stos
stos
fildl
sub
xor
clc
fldl
dec
sub
ds
loop
mov
daa
sbb
jl
int
dec
lcall
fisubs
out
in
xchg
mov
inc
je
fwait
call
cld
stos
cmpsb
mov
cmp
in
test
cmp
cld
mov
stos
mov
mov
or
popa
cwtl
or
ss
xor
cld
cmpsb
sbb
call
movsl
pushf
ret
arpl
enter
jae
mov
call
ret
fwait
in
add
pop
lcall
jo
leave
lret
push
rorl
ficoms
pop
adc
pop
adc
icebp
sbb
out
xchg
loope
dec
push
mov
mov
call
jmp
daa
dec
out
test
xchg
rcl
add
and
pop
jno
sub
out
loop
daa
out
jno
mov
jge
pop
xchg
adc
rorb
ja
sub
popa
mov
xor
sbb
mov
jle
rcrb
mov
add
xchg
xor
cmp
mov
or
inc
icebp
aad
fdivr
mov
add
push
sub
or
push
xchg
insl
aam
aaa
jle
sub
cmc
push
jo
pushl
ret
mov
fs
push
dec
dec
fistpl
sub
mov
pop
xchg
test
xor
and
xchg
clc
jbe
clc
mov
add
pop
test
into
repnz
push
sbb
jge
push
mov
cld
fwait
sbb
cli
lret
adc
icebp
or
stos
or
in
or
std
movsl
clc
into
out
or
mov
and
mov
arpl
mov
pusha
mov
ret
xchg
sub
and
jg
jge
jnp
jge
pop
clc
push
and
in
divl
add
ljmp
out
jmp
or
call
jmp
jbe
loop
adc
ret
stos
xchg
lcall
js
jnp,pn
pop
inc
mov
push
out
jbe
add
pushf
popf
mov
sbb
inc
mov
cmc
push
cmp
int3
call
push
xchg
and
dec
mov
mov
mov
jge
dec
mov
dec
ljmp
stos
cmp
dec
jae
inc
cli
pop
sub
sub
cld
dec
mov
lahf
mov
adc
sar
hlt
mov
fistpl
cmpsb
test
arpl
pop
mov
movl
mov
dec
sub
cmc
or
cmp
jnp
or
xchg
sub
sub
adc
std
mov
push
aad
std
rdpmc
xor
imul
push
sbb
jmp
mov
lret
out
js
and
outsb
fistl
pop
imulb
ss
push
mov
inc
test
mov
clc
int3
aas
out
negb
jp
add
push
enter
cmpsl
andb
jne
inc
and
cmpsb
hlt
lahf
add
ret
rolb
pop
pop
xlat
and
or
pop
stos
aam
sub
pop
add
pop
cmp
movb
or
xchg
dec
dec
mov
lock
std
hlt
push
fucom
jmp
cli
jg
and
lds
rorb
adcb
add
pop
jns
mov
xor
mov
xchg
push
or
xor
fisubrl
call
leave
addb
push
xchg
sub
add
scas
testb
iret
dec
jne
dec
push
rorb
mov
nop
add
mov
loope
xchg
cmpsl
fistps
push
and
sbb
jno
inc
out
push
jg
xchg
iret
inc
repnz
orb
imul
lock
inc
into
push
inc
lcall
test
outsb
or
aas
add
xchg
add
clc
shrd
sub
into
cmp
rorl
inc
and
arpl
jmp
xchg
dec
cmp
mov
clc
jmp
movsl
mov
sub
or
out
mov
clc
imulb
jno
mov
xchg
cltd
inc
mov
incl
out
mov
dec
sub
imul
adc
fwait
shrb
adc
js
and
ss
or
or
or
mov
inc
jmp
jle
fcmovb
jno
jae
int
jmp
incl
adc
orb
adc
push
rolb
push
in
push
jecxz
sbbb
fabs
clc
rolb
aaa
push
test
push
mov
sub
leave
adc
test
push
and
adc
sbb
or
fildll
push
or
lods
fiadds
hlt
mov
insb
pop
inc
pop
out
and
movl
or
jecxz
inc
add
dec
fildl
repz
jns
fiaddl
lock
lea
push
jno,pt
fimuls
or
jge
or
add
out
mov
xor
fistps
pop
rorb
fisttpll
out
sahf
cli
ret
push
ds
out
inc
sbb
cmovo
lds
cmp
ror
in
xlat
insl
adc
loopne
pushl
xor
push
mov
cmp
mov
jmp
out
dec
pop
or
cmp
mov
pop
and
jae
flds
or
popa
bnd
xor
jb
sbb
ja
cmp
pop
mov
stos
mov
mov
mov
cmc
sbb
je
les
xor
pop
mov
and
cld
pushl
pop
pop
ret
lret
lret
jo
std
jg
aad
test
mov
and
dec
ds
in
and
icebp
xor
notb
cmc
or
or
ffreep
mov
js
pop
aad
testb
xlat
mov
xchg
lock
jmp
das
ret
call
lcall
in
cli
je
ret
pop
jp
stc
shl
pop
mov
cmp
or
enter
or
das
jo
fs
lock
lock
sar
repnz
sub
xor
adc
mov
cwtl
jge
push
sar
scas
xchg
ret
sub
jp
scas
mov
adc
test
adc
add
add
js
dec
mov
decb
or
mov
add
adc
leave
mov
mov
es
mov
repnz
inc
fistpll
nop
inc
mov
scas
add
clc
clc
xor
sbb
out
call
mov
xor
mov
mov
cmpsb
fmull
or
jg
or
add
testl
mov
int3
cld
dec
hlt
adc
shr
lcall
or
repnz
mov
jg
pop
enter
adcl
push
ret
adc
movsb
or
inc
sub
in
jle
fwait
push
std
out
data16
xchg
test
mov
inc
loopne
lods
repnz
rclb
aad
lahf
sbb
sub
into
jge
in
sub
decl
icebp
mov
lock
xchg
pop
pop
bound
or
movsl
stos
idivl
pop
mov
inc
fisttps
scas
stos
jmp
movsl
or
jmp
mov
mov
fmuls
ljmp
mov
gs
sahf
xor
mov
xchg
push
hlt
bound
or
add
sbb
xchg
cld
cld
jne
push
cmpsb
es
adc
cmp
stc
adc
and
push
test
sbb
mov
outsl
jg
out
pop
jle
mov
inc
fwait
and
loopne
jno
push
xchg
mov
vpshaw
add
mov
push
xchg
add
adc
mov
pusha
loopne
ficompl
add
pop
cli
mov
xor
mov
stos
jle
jg
lret
mov
lods
popa
cmp
pop
add
sub
jg
ficoms
fildl
add
leave
xchg
jg
push
popf
aam
mov
jnp
jp
add
popf
adc
inc
out
mov
mov
pushf
test
add
insl
test
aam
jle
sbb
pushl
les
xchg
aas
mov
cltd
nop
jbe
push
in
push
dec
adc
enter
movsb
les
cwtl
pop
adc
or
int3
ja
js
mov
rep
pop
insb
pop
mov
adc
xor
adc
out
push
sar
mov
fs
push
dec
rclb
stos
sbb
sub
jne
sub
in
dec
bswap
loope
mov
cmp
aam
mov
dec
cwtl
push
mov
pop
jne
ss
popa
mov
and
mov
subb
inc
inc
jge
fsubs
mov
filds
filds
nop
cmp
mov
xchg
je
repnz
out
adc
out
adc
adc
jg
sbb
in
sahf
xor
mov
aas
or
incl
add
sbb
push
or
mov
stos
dec
pop
and
cmp
in
into
loopne
or
pop
hlt
mov
movsb
mov
ret
test
pop
inc
push
xor
sahf
mov
andb
out
mov
out
and
cmp
pop
dec
int
aad
pop
push
sbb
lahf
mov
lahf
sub
push
push
incl
aam
mov
push
cwtl
enter
sub
das
je
outsl
int
mov
mov
data16
inc
pop
mov
and
popf
adcb
add
inc
and
sub
mov
fbstp
lcall
ds
es
das
adc
je
stos
outsb
stos
les
sbb
mov
push
test
bound
fdivr
inc
mov
mov
ljmp
fisttps
aaa
mov
mov
mov
fmuls
dec
dec
rcr
js
movsl
clc
filds
cmp
lcall
inc
sbb
xchg
lcall
inc
pop
sub
es
adc
mov
jmp
pop
and
stos
push
jo
cmp
movb
jmp
lcall
push
cli
sub
push
fwait
lock
inc
push
mov
push
cli
lret
xchg
mov
pop
sbb
sbb
fnstsw
pop
pop
lea
mov
pop
clc
clc
scas
jbe
push
inc
pop
inc
jmp
jl
dec
or
repz
cmp
cld
push
sti
inc
push
mov
mov
xor
decl
cmp
jb
pop
pusha
xchg
adc
xor
mov
int3
inc
in
or
push
pop
and
sub
in
push
jb
gs
imul
cmc
loop
sahf
xorb
adc
mov
ja
loop
adc
mov
mov
jnp
lcall
int3
push
adc
xor
and
call
and
outsb
rcrl
lea
ret
lods
push
mov
xchg
aam
add
lock
jo
nop
scas
iret
jmp
sbb
add
es
lcall
shrb
adc
fcomps
cli
jecxz
push
out
and
loopne
push
jns
ds
scas
popf
fnsave
fisttpll
xor
ret
decl
loope
popa
in
mov
fwait
push
add
cmp
xor
jnp
je
sar
mov
sbb
sub
cmpsb
daa
cmp
fbstp
adc
add
add
adc
add
cld
or
mov
icebp
lret
das
inc
mov
rorb
xor
rorb
inc
xchg
inc
in
dec
xchg
ret
push
je
stc
push
inc
adc
add
or
lcall
sbb
test
push
mov
testb
xchg
sub
inc
nop
pop
fisubs
cmpsb
jle
mov
rorl
mov
jbe
xor
pop
leave
sub
sbb
nop
sbb
scas
push
inc
pop
mov
push
rolb
add
test
fildll
aad
or
pop
ss
data16
clc
fistpll
add
popl
add
mov
in
cmp
jmp
movsl
pushf
jae
cmpsb
call
adc
in
psubsw
pop
ljmp
or
test
push
cld
add
sub
mov
test
jl
jg
fistps
movsb
inc
and
in
enter
push
lock
je
mov
xchg
andb
repnz
imul
adc
mov
xchg
push
jo
fistpl
cltd
int
shrb
sbb
stos
insl
sub
arpl
aam
ficompl
push
pop
test
sub
leave
loopne
mov
idivl
pusha
nop
out
add
outsl
push
add
rcll
jg
xchg
fmul
jo
pop
les
arpl
lds
mov
mov
addr16
xchg
mov
push
pusha
pop
mov
movl
cld
pslld
lock
fdivrs
inc
or
incl
dec
jecxz
shll
inc
mov
xchg
aas
mov
inc
out
loopne
xor
cmp
gs
lods
movsl
movsl
push
std
lret
pop
lcall
jne
lret
test
ljmp
or
inc
cmp
pusha
dec
rclb
js
out
ss
mov
test
add
cmpsb
push
mov
lcall
shl
into
notb
fildl
shrb
aaa
sbb
in
or
lcall
mov
push
testl
cmc
pop
mov
and
divl
into
clc
mov
cmpsb
imul
push
pop
ficompl
cmp
mov
dec
jmp
mov
mov
cmp
incl
shlb
sbb
sub
jp
aad
hlt
pop
jg
cmpsb
movsb
inc
jmp
pop
xchg
in
sbb
dec
aam
sub
call
fcom
inc
mov
movsb
mov
sbb
out
cmp
and
add
mov
ss
mov
or
mov
int
in
ljmp
or
jmp
pop
test
std
inc
insb
mov
fildll
xchg
and
aam
outsb
fs
jge,pn
filds
ja
fcom
frstor
add
stos
jbe
icebp
aam
subb
mov
cmc
ret
bound
pop
inc
or
inc
popf
cli
dec
mov
std
pushf
pop
out
xchg
jmp
mov
sub
lods
dec
cwtl
sar
or
bnd
sbb
hlt
sub
jecxz
inc
test
rorb
ljmp
lds
cmpsb
popa
adc
outsb
cmpsl
xchg
cmp
jg
ret
mov
mull
pop
push
hlt
pop
mov
fists
add
xor
push
or
mov
es
pop
pop
insb
adc
lret
imul
xor
ljmp
cli
jns
xchg
xchg
xchg
adc
dec
test
cmc
pop
cmp
ret
inc
loop
ss
mov
push
loopne
es
mov
loopne
xchg
pusha
inc
jecxz
push
shlb
icebp
push
ret
rcrl
push
scas
scas
out
aad
mov
sbb
es
insb
mov
out
jmp
push
loop
sub
mov
cli
add
decb
frstor
xchg
adcb
sbb
dec
mov
aad
lods
mov
mov
sahf
mov
decb
fisubl
pop
sbb
sahf
mov
mov
decl
dec
mov
adc
not
sub
adc
adc
mov
out
ret
inc
imul
insb
in
add
call
test
dec
pop
pop
fs
test
out
cli
jle
repz
fisttpll
xchg
xor
inc
movsb
insb
aaa
std
mov
mov
fxch
mov
fisubs
inc
clc
mov
mov
jae
scas
scas
inc
fsubrl
clc
inc
mov
pop
jbe
out
shl
jmp
jo
inc
inc
aam
or
fnsave
outsb
pop
lods
pop
pop
clc
and
repz
and
sbb
pop
push
inc
mov
mov
ret
dec
popf
jb
call
stc
leave
mov
inc
out
jne
lods
hlt
push
repz
sar
pop
lods
arpl
push
xor
in
stos
pop
mov
loope
sub
jb
xchg
inc
sub
push
call
cld
xor
and
data16
lea
lock
jnp
add
push
inc
push
dec
adc
adc
sbb
pop
iret
jae
test
pop
mov
dec
jge
push
arpl
cmp
mov
jnp
xorb
inc
leave
pop
pop
xor
fdivs
clc
pushl
pop
orb
add
insb
addb
stos
lods
pushl
cmpsb
lret
frstor
xchg
aad
pop
xchg
mov
shll
pop
sub
push
and
xor
mov
incb
fisttpll
sub
mov
xor
scas
push
in
cmp
adc
adc
inc
imul
sub
jle
das
cwtl
adc
in
push
jmp
sbb
pop
or
scas
mov
xchg
add
ljmp
cmp
int3
add
shll
rcr
ficompl
push
aas
pushl
in
icebp
and
inc
adc
xchg
push
repz
add
and
lea
rcll
cmp
js
push
outsb
pusha
inc
cmpsb
mov
push
lds
pop
pop
icebp
outsl
mov
xor
imul
incl
push
in
jbe
jae
add
fcoml
lret
adc
and
push
push
and
aam
hlt
dec
pop
hlt
cld
lcall
add
pop
and
lds
jno
loopne
sbb
dec
adc
mov
and
scas
out
mov
push
es
cmp
fidivs
or
ret
imul
xor
dec
int3
cmp
xchg
jo
cmp
lock
cmp
scas
out
xor
clc
sub
ds
inc
dec
cmp
cmpl
fldl
pop
shlb
imul
inc
movsb
enter
outsb
sub
movsb
lds
fiadds
jne
sbb
and
pop
loop
icebp
xchg
in
push
hlt
ret
out
outsb
rcrb
cwtl
mov
repz
mov
fcoms
cmc
aad
jg
in
mov
add
ds
out
cmp
fimuls
cld
gs
daa
xchg
xor
jbe
push
and
inc
std
cmp
and
mov
cmp
pop
mov
mov
dec
add
adc
sahf
xlat
lods
js
push
outsb
inc
jbe
sub
shll
in
enter
lret
les
sub
xlat
je
dec
add
ljmp
les
pop
loope
mov
sub
sbb
xchg
adc
cmc
ljmp
cmp
rorl
or
gs
testb
inc
xchg
into
or
ror
inc
scas
ljmp
sub
js
push
inc
inc
dec
adc
adc
xchg
mov
dec
rolb
cld
push
or
loope
das
adc
push
lcall
vxorps
lahf
decb
or
push
sbb
imul
addr16
cld
lds
shrl
mov
xchg
clc
sbb
hlt
xchg
jp
cs
sub
sbb
je
test
mov
enter
loop
jg
adc
int3
mov
lock
cld
ret
push
adc
decb
jbe,pt
mov
aam
sbb
ds
cmp
aas
mov
arpl
mov
ret
rolb
rcrb
dec
test
push
mov
lods
mov
call
pop
jge
mov
lea
inc
mov
addr16
outsl
flds
sahf
mov
mov
lock
stos
rcrb
loopne
pop
cmp
repnz
pop
fsts
lcall
outsl
sbb
pop
loopne
and
adc
xchg
inc
std
ds
lahf
adc
addl
rclb
inc
notb
pop
mov
add
aam
scas
xchg
mov
mov
movsb
inc
loope
pop
sub
lahf
cmpsb
mov
push
mov
or
push
outsb
push
or
nop
mov
cmp
xor
fwait
ret
sub
and
xor
jge
cmpsb
enter
loope
dec
pushl
mov
aaa
stos
jp
xchg
and
push
and
fnstcw
mov
aam
stos
jg
and
add
mov
or
int3
subl
add
rcrb
movsb
add
les
sbb
mov
jl
pop
int3
lret
jmp
cmp
lock
in
leave
jle
xchg
or
push
rcrb
pop
jne
ficompl
jg
cmp
and
in
inc
add
dec
pop
jnp
adc
lahf
xor
aad
ficoms
andl
or
pop
ret
aad
dec
es
out
dec
aam
cs
arpl
mov
inc
adc
sbb
push
pop
nop
sarb
insl
mov
mov
roll
and
das
xchg
jo
sbb
inc
dec
push
enter
jb
jb
fnstcw
add
xchg
mov
pusha
cmp
push
mov
jl
jns
mov
cmp
and
and
add
jbe
lock
popa
add
jle
test
mov
fists
push
add
push
lret
mov
push
cmp
pop
test
ljmp
or
push
mov
fcomip
pop
inc
pop
mov
fwait
cmp
mov
fdivs
and
adc
cli
push
lcall
jns
jecxz
cmpsb
fistps
push
xorl
lar
xchg
sbb
shlb
xchg
and
lock
sbb
push
stos
ret
mov
dec
and
in
fildl
add
adc
add
lods
jge
enter
call
xorl
loope
pop
and
mov
dec
xor
outsb
lret
sbb
sti
decl
leave
sub
jmp
inc
fiadds
push
jo
rcr
xchg
cmpsl
shrl
test
lock
scas
mov
clc
ficoms
jp
mov
xor
fstpl
mov
sbb
or
in
fadds
scas
movsb
mov
clc
and
jge
in
scas
ljmp
add
adc
add
mov
dec
pop
aas
ret
hlt
push
push
sub
aaa
fcmovu
ljmp
pop
push
adc
lock
rclb
mov
outsb
jl
adcl
add
xchg
ret
popa
ss
rcrl
lcall
sti
xchg
dec
and
sub
and
jo
jp
rolb
aaa
push
popa
jp
ljmp
and
in
adc
jp
leave
inc
js
jo
outsl
arpl
jl
sbb
les
mov
xor
push
pop
cmc
push
push
lds
ljmp
loopne
xchg
dec
sub
ljmp
mov
xchg
sub
push
add
fidivrl
add
out
fsubl
cmp
xchg
adc
pop
ja
pop
loop
mov
fsts
sbbb
outsl
insl
rcrb
xchg
repnz
into
lcall
idiv
imul
dec
dec
scas
jbe
orl
ds
push
sbb
push
fisubl
shll
fcmovnbe
in
mov
push
xchg
mov
inc
mov
and
adc
jne
dec
lea
mov
loop
mov
ret
inc
clc
adc
call
push
test
adc
cmp
pushf
add
sub
fstpl
jne
daa
test
pop
movsl
cwtl
jg
lds
mov
jecxz
das
aaa
dec
call
inc
retw
scas
in
fdivrl
xchg
shll
in
sbb
mov
mov
jmp
cmp
lock
sti
mov
scas
sbb
in
xchg
adc
dec
mov
xor
repnz
xor
aaa
jp
fimuls
jmp
adc
outsb
loope
and
dec
pop
clc
push
add
pop
xchg
ss
cs
dec
push
pusha
jbe
mov
push
inc
outsb
push
call
movsb
cmp
or
mov
inc
pushf
fnsetpm(287
es
imul
inc
mov
ret
inc
and
mov
mov
mov
loope
sub
insb
add
xor
mov
mov
cli
xchg
jo
out
mov
cmp
dec
add
mov
shlb
ljmp
lcall
add
xchg
icebp
add
ret
pop
sbb
mov
mov
sahf
inc
inc
cmpsl
clc
mov
xor
push
fsubl
insb
pop
scas
adc
rcll
ljmp
imul
sti
add
out
pop
pop
fildl
imul
sub
adc
or
mov
sti
fadd
mov
cmp
sbb
aas
and
fisttps
shlb
mov
ljmp
pushf
dec
xchg
push
int
je
inc
mov
fcompl
pop
push
pop
pop
addb
xchg
xchg
cli
test
push
into
xchg
mov
mov
jle
cmpsl
inc
rclb
pop
jl
jl
pushf
push
int
jmp
pop
mov
mov
jno
imul
xor
mov
pop
incb
call
aaa
and
sub
push
dec
or
mov
repz
data16
mov
jnp
dec
je
addr16
add
inc
lods
cld
out
cld
cmpsl
ja
pop
jbe
cmp
pop
dec
mov
incl
xor
stc
mov
jg
jbe
rcrb
or
subb
jecxz,pt
jmp
cmp
sub
scas
insl
es
lods
incl
ss
int
lret
aam
mov
loopne
mov
dec
jl
ljmp
mov
and
cmpsb
mov
mov
es
lods
ret
rorb
insl
adc
decl
and
mulb
xchg
out
dec
sub
push
dec
les
mov
femms
jb
jl
rclb
aaa
rclb
mov
jb
push
fdivs
outsb
out
or
lods
jg
jp
mov
add
add
pop
xchg
push
mov
mov
ret
movsb
les
or
insl
es
test
pop
rcll
push
fdivs
push
push
fbld
aam
sbb
lds
dec
mov
in
pop
lcall
jmp
adc
out
sahf
jnp
test
push
mov
add
sbb
scas
mov
outsb
mov
les
enter
cmpsb
daa
mov
and
xor
icebp
ljmp
mov
jo
add
pop
es
aam
xor
mov
inc
mov
aam
fildll
sub
pop
dec
pop
js
push
incl
imul
add
sbb
push
call
and
jbe
xor
ds
pusha
nop
fwait
xchg
mov
pop
hlt
xchg
clc
in
nop
out
push
dec
dec
cs
push
sub
jp
lock
sbb
test
mov
mov
push
and
fcmovnu
adc
call
inc
call
pop
rorl
out
push
mov
mov
fsubrl
loop
push
clc
stc
mov
movsb
incl
adc
push
pop
dec
cmpsb
icebp
stos
and
mov
push
push
dec
scas
cmp
pop
lret
ja
cli
scas
sbb
das
jne
ds
adc
and
inc
popa
or
adc
lret
pop
sbb
mov
jle
test
pop
or
or
adc
fisubrl
nop
mov
mov
or
or
mov
xchg
jge
push
adc
es
cmc
idiv
push
test
xor
and
xchg
cmpsb
fstpl
cld
fimuls
sbbl
and
xor
inc
pusha
xor
or
ljmp
fisubl
add
jmp
dec
sub
xchg
les
lret
or
fisubl
jle
out
cmp
push
sub
mov
js
hlt
loopne
xchg
dec
rcrl
cmc
jg
pusha
pushf
mov
ret
ljmp
fsubrs
pop
pop
popa
or
mov
in
adc
push
bound
add
fnstsw
inc
jmp
lret
dec
pop
xor
inc
pop
test
cmp
push
adc
jecxz
or
mov
pop
out
push
push
cld
mov
ret
aam
push
or
sub
pop
xchg
push
mov
pop
inc
std
dec
push
pusha
inc
xchg
hlt
lahf
inc
ss
cmc
pop
fdivp
call
int3
in
mov
xor
pop
xor
loop
push
pop
scas
mov
push
xor
pushl
add
xchg
pop
imul
jnp
gs
inc
jmp
or
dec
adc
adc
add
cs
or
mov
shrl
out
push
sub
cmp
mov
sub
sbb
and
lock
clc
adc
aad
test
andb
fbld
xchg
mov
movsl
sbb
jo
movsl
subl
sub
out
sub
mov
imul
xchg
mov
dec
in
addb
mov
mov
and
jne
jge
incl
lret
xchg
pop
mov
add
fidivrl
adc
lock
lods
fwait
movsl
add
xchg
or
mov
cmpsl
or
dec
addb
mov
test
insl
outsb
fabs
mov
mov
jnp
rcrb
dec
mov
xchg
fiaddl
jmp
cmpsb
sarb
xchg
xchg
sahf
jbe
pop
cmc
ljmp
push
scas
cmp
inc
mov
dec
icebp
push
pop
mov
xchg
negb
push
dec
clc
ffreep
enter
shlb
dec
pop
ljmp
xorb
jp
xor
inc
push
sub
xchg
pop
addr16
insl
pop
inc
push
cs
insl
mov
mov
push
cmpsl
xor
popf
jp
flds
ja
adc
jg
xchg
inc
mov
popl
fildl
cltd
sahf
js
sarl
ret
push
cli
inc
fwait
aaa
call
or
idivl
inc
mov
jg
hlt
cltd
pop
push
popf
add
mov
xchg
jmp
pop
imulb
push
pop
test
mov
pop
pop
dec
or
xor
pushl
nop
xchg
sbb
push
cs
jl
stos
lock
sub
aaa
or
mov
pop
add
cmc
push
sbb
ret
sbb
subb
mov
push
xor
mov
imul
sub
mov
pop
ret
xor
adc
dec
cmp
sbb
xchg
add
and
jmp
dec
cld
mov
sbb
fldl
das
lds
mov
aaa
mov
movsb
jl
outsl
push
lock
or
and
mov
inc
cli
jmp
adc
adc
xor
daa
xor
dec
jg
fldt
subl
scas
fsubrs
inc
mov
and
jo
inc
xchg
aaa
cwtl
inc
bound
loope
xchg
adc
movsb
cmc
xor
jge
xchg
cmpb
xchg
mov
mov
test
push
mov
dec
inc
xchg
addr16
idiv
out
fcoms
mov
scas
nop
dec
cs
sbb
dec
mov
xor
push
pushf
pop
lahf
insl
push
push
or
and
aaa
cld
mov
lds
imul
and
cmp
mov
outsl
sub
pushf
xchg
sbb
and
popf
stos
incb
adc
sbb
mov
test
cli
pop
adc
sub
orl
loope
ret
stos
add
and
mov
out
mov
xchg
rcrb
dec
pop
mov
mov
dec
or
pop
pusha
idiv
push
loope
pusha
mov
cmpsb
icebp
outsb
js
cmp
std
inc
jne
movsb
pop
xchg
loope
adcb
cli
push
xchg
aad
mov
rcr
dec
mov
xchg
push
dec
dec
scas
mov
sbbl
lock
clc
test
sub
jb
and
adcb
sar
scas
outsb
inc
mov
loope
ret
incl
pop
dec
mov
cli
lret
outsl
lahf
fisubrs
cmp
sbb
ljmp
pop
decb
cmp
push
push
movsb
push
sub
cmc
cmp
adc
or
neg
pop
ja
push
sbb
cmp
ret
inc
sbb
les
push
mov
std
outsb
imul
cli
xor
mov
mov
or
lahf
jo
or
fiaddl
mov
or
pop
lock
fcomi
movsl
adc
dec
arpl
add
sub
jg
test
aas
hlt
lock
scas
icebp
decl
rclb
xchg
or
mul
pop
add
movsb
lock
int
mov
ficompl
sub
std
jmp
out
outsb
sub
cmpsl
popa
popf
push
sub
jns
fsubl
std
push
es
mov
adc
push
lds
shlb
fisubs
mov
fistpl
adcb
fcoml
adc
mov
enter
das
in
mov
movsl
sub
fcmovb
push
mov
fistpll
loope
sarl
dec
lcall
jbe
mov
pop
xor
cmpsb
hlt
add
dec
jno
ret
or
xchg
sub
jne
cmpb
push
cli
call
or
adc
dec
mov
xor
fwait
decb
jne
stc
aam
mov
mov
xchg
push
lahf
data16
push
pop
shrl
mov
mov
mov
push
mov
sub
jecxz
out
and
ljmp
out
mov
xlat
push
cmp
inc
push
sub
ljmp
icebp
jge
jmp
xor
fisubrl
mov
sahf
inc
pop
icebp
out
sarl
repz
jge
sbb
jg
jo
cwtl
xor
mov
pushf
push
xchg
adc
insl
lahf
outsb
daa
addr16
lock
shr
dec
ljmp
inc
in
cmpsl
cmp
mov
jmp
or
xchg
cmpsl
gs
cld
add
xchg
jnp
adc
cmpsl
dec
pop
jle
mov
push
inc
xchg
dec
lcall
stos
add
bnd
call
out
lahf
dec
jge
sub
add
lret
push
mov
andb
orl
outsl
ljmp
loop
ret
jb
outsb
inc
pusha
mov
lahf
xor
out
cmpb
dec
add
iret
adc
jecxz
push
add
mov
inc
rcrl
icebp
movsl
mov
fsubrp
ljmp
mov
lea
cmp
or
dec
rolb
or
mov
aad
mov
push
ljmp
imul
jg
jle
mov
xor
out
mov
repnz
mov
sbb
testb
push
in
adc
pop
mov
sbb
and
cld
ficoms
fistl
ret
movb
loope
push
ficomps
dec
ljmp
adc
jnp
xor
out
imull
loop
dec
mov
lret
in
mov
pop
shrb
dec
leave
adc
sbb
xor
or
cmp
lcall
sub
jg
xor
iret
jb
cwtl
inc
mov
xchg
adc
sbb
cmp
mov
xchg
push
fistpl
mov
xorb
xchg
or
xlat
xchg
mov
pop
or
pop
cmc
jp
xlat
mov
sub
fs
in
into
push
inc
imul
ss
les
adc
dec
nop
add
pop
mov
nop
mov
outsb
pushl
sub
dec
loopne
pushf
jns
lcall
jno
jo
std
pop
call
fbld
mov
xchg
and
jnp
insb
les
cli
fistpll
jo
push
xchg
cmp
push
sti
stc
or
lret
icebp
jg
push
mov
in
out
push
je
cmp
push
int
sbb
fimuls
dec
dec
dec
ljmp
scas
push
aad
xchg
jne
aas
dec
not
dec
loop
sbb
das
add
jns
lods
stos
push
xor
add
xor
cmpsb
pop
and
nop
and
dec
clc
xchg
inc
jl
inc
ds
stos
in
mov
cmp
popa
or
push
push
sarl
mov
mov
ficomps
es
iret
cmc
test
in
cmp
mov
jne
repnz
cmpsb
sub
fdivrl
sbb
cmpsb
int
icebp
dec
fs
pop
lods
inc
cmp
push
call
test
mov
xor
adc
dec
mov
clc
mov
push
dec
inc
inc
and
or
xchg
push
mov
out
cmp
cmp
mov
cli
mov
les
out
push
add
dec
cli
out
add
mull
mov
mov
cltd
sahf
or
pushf
outsl
aas
lods
mov
xchg
aaa
insb
xchg
or
insl
add
stos
pop
andb
xor
mov
ja
pop
fisttpll
inc
mov
adc
lahf
pop
popa
add
test
movsl
das
ret
rcl
sub
and
cmp
inc
fcmovnbe
bound
jne,pt
addr16
mov
ljmp
xor
mov
scas
mov
add
sti
xchg
adc
pop
scas
sarl
pop
mov
push
mov
movsb
loopne
xor
out
fs
and
mov
mov
pop
ret
int
dec
pop
sub
mov
clc
pop
mov
add
movsb
sbb
pop
cli
sbb
stos
xlat
push
xor
in
rclb
fsubr
loopne
mov
adc
call
ret
lret
movsb
or
xor
sbb
bound
test
and
ret
lock
dec
mov
mov
add
xchg
jne
scas
mov
int3
ret
inc
dec
and
leave
pop
stos
xor
and
loop
jp
test
lea
add
out
aas
lcall
inc
pop
add
stos
adc
xor
mov
mov
movsb
adc
sub
adc
xor
icebp
add
out
and
add
fs
pop
or
pop
int3
xor
jg
insl
rolb
inc
push
test
lods
fwait
pusha
test
into
sub
sahf
ret
xchg
jp
sub
push
sahf
push
imul
sbb
loopne
xor
xchg
pop
pop
ljmp
cmp
mov
popf
push
mov
repz
cli
sub
adc
sbb
cmp
out
mov
mov
int3
fdivs
inc
mov
cmp
popf
add
or
nop
mov
mov
add
cmp
iret
xchg
sub
pop
lods
fistpll
icebp
xchg
sbb
rcrl
pop
add
fstp
adc
aad
pop
add
fcomp
das
mov
test
outsb
movsl
xor
cltd
jecxz
xchg
cli
cmc
movsb
insb
aas
jne
fcmovbe
sti
mov
ds
mov
jle
jg
push
mov
jp
inc
lock
pop
stc
mov
test
cmp
shrl
add
hlt
dec
add
pop
jl
push
stos
jne
mov
cmpsl
inc
sbbl
jmp
shl
pushf
pop
subb
lods
out
xor
xchg
pop
mov
ja
cli
adc
push
jp
adc
xchg
insl
jp
jo
in
shr
jmp
les
dec
int3
das
inc
lcall
push
andb
lock
xor
push
ret
hlt
int3
sub
adc
add
arpl
scas
inc
cmc
add
xchg
inc
inc
push
sar
incl
sub
insb
daa
mov
mov
jg
or
lcall
add
fdiv
pop
pop
leave
xchg
test
decl
cld
fidivrl
add
dec
fwait
int3
in
aaa
sbb
mov
ja
pop
jo
add
xor
incl
js
jne
mov
aam
xchg
mov
inc
lcall
scas
mov
sub
jne
sbb
xchg
mov
pop
ljmp
mov
cwtl
lea
es
nop
pop
push
insb
jecxz
bound
pop
jl
jns,pt
cli
push
add
xor
xchg
push
rcll
cmp
sahf
jle
dec
inc
out
cld
pop
jo
rolb
jno
sub
pop
je
xchg
test
push
mov
add
lret
or
loop
pop
adc
dec
dec
jb
shl
test
adc
arpl
dec
stos
push
mov
xor
adc
xor
push
mov
pop
inc
and
jle
ds
adc
js
add
enter
add
das
pop
aas
fbstp
add
test
xchg
mov
test
add
adc
or
outsl
imul
aad
or
mov
aaa
jb
pop
cmp
mov
fwait
shl
jp
push
push
ret
mov
stos
xlat
les
rolb
xchg
std
loope
xor
sub
lcall
js
lea
out
push
sti
cmpsb
sub
xor
mov
or
call
mov
into
lret
mov
mov
outsb
ret
mov
mov
cld
fidivs
lds
cltd
adc
pop
fnsave
and
js
les
mov
pushf
shrb
test
repz
scas
scas
adcl
push
mov
dec
jg
push
movsb
adc
shlb
jle
test
jno
pushw
or
pusha
sub
mov
inc
scas
inc
sub
inc
rolb
push
sbb
xchg
inc
sbb
loope
xchg
inc
dec
pop
xlat
pop
adc
push
mov
jae
push
push
out
dec
pop
call
test
pushf
add
lcall
add
xchg
cs
dec
mov
add
cmp
and
fwait
push
loop
cmpsl
sbb
imul
mov
icebp
out
sub
mov
lsl
xchg
inc
outsb
mov
mov
fstpt
cmp
sub
dec
push
adc
dec
arpl
aas
jnp
cmp
pusha
xor
jg
loop
les
lea
mov
aas
xor
movb
inc
jno
jmp
mov
cmp
dec
or
add
cli
push
sub
add
cld
mov
repnz
jns
jge
pop
lcall
mov
lods
call
pushf
hlt
dec
or
out
xor
jg
add
fnstenv
add
and
mov
pop
pop
imul
mov
mov
idiv
mov
jg
test
jp
fadd
mov
inc
and
add
cs
jmp
pusha
mov
xor
mov
insb
lcall
repz
adc
outsl
out
lds
and
pop
add
call
pop
xchg
jle,pt
xchg
scas
aaa
push
xchg
pushf
pop
les
pop
es
mov
mov
sub
js
cmp
nop
insl
inc
push
cmp
add
or
daa
std
enter
jg
andb
sti
clc
jmp
addl
mov
dec
sbb
push
cmp
incb
rol
lods
incb
dec
orb
sbb
xor
jno
xchg
dec
jno
shl
fldcw
dec
movsb
pop
sub
dec
jecxz
pushf
std
cli
jmp
lea
ret
dec
push
xor
call
push
cmp
or
lock
adc
xchg
mov
fdivl
or
enter
fwait
mov
push
inc
lahf
fwait
and
mov
sub
sahf
lahf
push
sbb
sbb
mov
jl
jg
xchg
adc
cmc
pop
insl
lret
inc
lods
fs
cmpl
std
out
xor
int3
jo
mov
mov
out
icebp
cmp
rorb
call
aad
cmp
test
lods
xchg
add
or
or
pop
lcall
xchg
sbb
outsb
mov
test
dec
lock
ret
hlt
popa
scas
movsb
adc
enter
xchg
push
mov
xor
mov
mov
cmp
in
mov
shlb
insb
jo
shrb
jbe
inc
ficoml
mov
cli
adc
jb
push
aaa
mov
dec
push
or
xchg
jmp
mov
stos
fdivp
out
sarb
rclb
dec
push
sahf
iret
mov
stos
mov
add
inc
dec
pushl
clc
mov
mov
shlb
stos
cmp
int
sub
ss
or
test
dec
jp
jp
jmp
adc
fnstenv
cmp
or
push
xlat
ljmp
loop
jne
or
push
adc
aas
lods
loop
xor
and
adc
loop
lret
xor
inc
and
pushl
lret
div
xor
adc
push
adc
add
lahf
ret
inc
pop
decl
pusha
je
fs
fbstp
fwait
std
repnz
pusha
loop
add
and
popf
jle
jb
push
iret
mov
fdivrl
cmp
ret
int3
aaa
in
inc
divb
xchg
push
loopne
pop
sbb
ljmp
cmp
xchg
push
fst
movsl
arpl
rclb
pop
jg
popf
mov
lock
cmp
andb
cld
xchg
xor
sbb
mov
or
movsb
and
sti
ljmp
adc
adc
push
push
adc
and
push
scas
push
ja
popa
mov
movsl
or
mov
sbb
sti
fisttps
adc
scas
cli
fnsave
pop
sub
xor
sub
xor
inc
outsl
or
sub
in
pop
jns
sbb
pop
mov
fwait
lcall
jle
stc
pop
ret
adc
test
jp
and
dec
dec
jg
mov
xchg
rcrb
pop
pop
jle
inc
es
add
arpl
cmp
les
or
outsb
jge
jle
mov
adc
dec
iret
mov
ficomps
roll
test
mov
push
push
bound
and
cmp
pop
dec
aam
inc
fsubrs
rolb
pop
mov
mov
loope
ds
lahf
imul
aad
sbbb
push
push
rcrb
and
pop
ja
std
adc
push
jmp
popa
int3
mov
cmpb
mov
jge
cmp
fwait
out
negb
jmp
mov
fwait
mov
div
dec
mov
jp
mov
lahf
cmpsb
mov
cld
out
sub
mov
sahf
in
or
clc
bound
mov
lret
fcmovnbe
das
push
std
imul
aaa
pusha
jno
add
lods
jg
lret
jmp
push
jg
sbb
ljmp
sti
push
mov
aaa
fstp
call
adc
icebp
pop
or
popf
sbb
and
jp
pushl
inc
add
scas
jb
imul
mov
inc
enter
inc
push
push
fwait
jle
adc
clc
inc
lds
pushf
push
mov
sahf
scas
cmp
and
or
push
dec
pop
sarl
jmp
sbb
mov
cmp
scas
mov
call
mov
jmp
xor
in
scas
adc
push
adcb
test
cs
xor
call
sbbb
adc
or
pop
movsb
pushf
push
bsf
push
shl
mov
hlt
nop
shlb
stos
or
or
push
es
cmpsb
lahf
jmp
jl
idivb
xchg
sbb
das
xchg
mov
test
dec
lcall
sbb
or
mov
call
push
dec
lods
sub
les
sub
pushl
fs
mov
sbb
dec
add
sbb
mov
sub
test
inc
push
fildl
and
shrl
js
push
mov
cltd
xchg
add
test
cmp
sbb
and
clc
adc
push
cmpsl
out
mov
mov
repz
xchg
hlt
pop
dec
mov
inc
or
xor
nop
ljmp
movsb
fcomp
call
and
ja
mov
xor
call
cmp
in
jg
add
add
and
cltd
jg
pop
repz
out
add
in
addr16
cli
mov
insb
pusha
sbb
dec
jg
xchg
mov
sbb
and
mov
sbbb
adc
into
rolb
rolb
xor
fiaddl
pushl
push
subl
test
pop
push
outsb
adc
les
sub
mov
pusha
lds
outsb
les
jnp
aaa
je
jno
mov
pusha
cs
cwtl
pushl
add
or
icebp
loope
testl
ficompl
mov
or
data16
sahf
mov
aas
movsb
sub
inc
popa
vcmpsd
inc
testl
lods
stos
dec
cmp
mov
sti
mov
lods
xor
xchg
and
xchg
out
scas
leave
mov
outsb
push
mov
pop
clc
mov
push
sbb
lret
rol
movsb
add
mov
adc
or
das
cmpsb
ds
icebp
sarb
rcrb
movsl
mov
fwait
sub
loop
sarb
pushf
cmp
es
mov
inc
add
mov
and
mov
xor
test
mov
sub
add
shl
jp
fidivrl
sub
jbe
jae
push
add
bndldx
jp
cmc
js
shlb
inc
scas
out
add
cmp
sarb
sub
push
out
pop
arpl
lock
fsubp
test
repz
pop
daa
lods
ljmp
jecxz
jne
jecxz
pop
add
xchg
daa
out
imul
mov
insl
rorl
and
or
hlt
inc
add
rolb
dec
test
out
stos
inc
rcl
fsubl
movsb
fcmovbe
loopne
mov
inc
pop
push
mov
add
clc
hlt
cmp
test
and
stos
gs
adc
adc
aam
subl
scas
add
sub
bound
cmp
mov
inc
ret
dec
ss
stc
fwait
push
xchg
faddl
repz
in
stos
fs
mov
mov
sti
sbb
cmc
sbb
ds
mov
lcall
lock
inc
push
or
jmp
mov
test
adc
fwait
cmpsb
fsubrl
clc
scas
test
repz
fnstenv
outsl
xor
dec
inc
insb
jne
loopw
fwait
xchg
in
jae
jp
xor
jo
dec
push
das
mov
and
sbb
push
loop
mov
movsb
or
cmovns
fildll
add
or
jle
add
push
push
xor
inc
dec
addl
inc
loope
lret
sub
cmp
js
add
sbb
mov
lcall
add
sbb
mov
add
cmc
andb
shlb
cld
sub
inc
jecxz
aaa
mov
xor
xlat
test
pusha
jns
shrl
popl
pop
sarl
icebp
fcomip
ret
cmp
andl
push
or
sub
call
pop
lcall
sarl
add
lods
pop
lock
pop
pop
cld
add
dec
sarb
adc
iret
out
sarl
inc
cs
mov
jg
mov
xchg
mov
mov
mov
mov
js
adc
aam
inc
icebp
jl
adc
lea
sbb
in
adcb
test
adc
mov
xchg
mov
jp
cmp
outsl
clc
out
push
sbb
or
adc
sbbb
dec
xchg
scas
xchg
mov
adc
paddd
clc
xor
sahf
mov
and
xchg
into
fld1
out
xchg
or
push
add
mov
mov
repz
adc
addr16
or
pop
sar
decl
push
mov
add
jne
mov
and
ret
sub
sub
cmp
loop
mov
mov
push
repnz
inc
out
pop
adc
enter
xchg
cs
dec
mov
xor
inc
xor
movsl
xor
or
cmpsb
jb
inc
jmp
cmc
ja
cmp
jns,pt
shl
outsb
adc
cltd
sub
sub
pop
xor
cmp
repnz
and
add
cs
xchg
cmc
repnz
mov
je
push
shlb
lods
and
pop
push
mov
push
adc
sbb
lock
icebp
xchg
sbb
xchg
xchg
and
mov
mov
lahf
mov
mov
push
or
sub
mov
sbb
push
lcall
mov
cli
push
js
sbb
pop
push
shrb
adc
add
cmp
fwait
sbb
ljmp
dec
jo
lea
int
es
mov
dec
xor
jmp
add
lods
xlat
ss
cld
ljmp
inc
data16
imul
xchg
loop
scas
xor
das
call
out
pushf
mov
aad
adc
jnp
xchg
pop
pop
in
test
jg
movsb
mov
in
ret
fwait
sbb
lods
dec
push
repz
mov
cmc
or
push
rclb
sbb
imul
testb
xlat
sub
sarb
xchg
add
xchg
outsb
sbb
push
sbb
sub
pop
icebp
icebp
jo
xor
cmp
outsl
push
clc
or
sub
outsb
decl
aam
enter
mov
dec
jbe
jne
or
and
jle
leave
pop
testb
add
lods
lods
mov
jae
xchg
ss
mov
xor
dec
xor
mov
mov
sbb
adcb
push
mov
add
push
outsl
into
xchg
jle
test
lret
pop
adc
ret
and
mov
sahf
jmp
pop
scas
mov
rcrb
jae
mov
std
test
sbb
pop
movsl
ret
in
jne
scas
and
jne
stos
mov
mov
inc
out
sub
aas
shll
mov
leave
es
cs
mov
das
cld
push
js
mov
stos
sbb
sti
inc
sub
lcall
inc
cli
inc
inc
push
nop
aas
push
scas
outsb
adc
outsl
pop
and
call
cmpsl
inc
aas
push
lods
and
mov
or
nop
xchg
inc
lods
sub
call
and
cs
jnp
fidivrl
sub
xchg
into
or
ds
sub
mov
jb
imul
stos
leave
mov
ror
cmc
subb
insb
sub
dec
sti
out
shll
loopne
dec
movsb
and
add
pop
cmp
cmpsb
push
mov
mov
xor
mov
outsl
mov
adc
icebp
adc
jb
mov
decl
and
int3
and
and
jl
movsl
cmpsb
je
fwait
push
lret
lcall
aad
xchg
cmc
inc
jmp
daa
lahf
ror
or
mov
sbb
jmp
push
push
xchg
loopne
inc
sub
inc
jmp
sub
mov
cmc
scas
in
imul
fbld
lods
mov
xchg
jno
pop
adc
in
jmp
or
nop
sub
push
mov
mov
mov
mov
pop
cld
mov
inc
dec
adc
push
loop
stos
push
cwtl
add
cmp
or
xchg
push
cld
mov
mov
push
lahf
fmulp
imul
mov
pop
imul
add
rol
jg
les
in
and
outsl
cmp
cmp
fsincos
daa
cli
movsb
ljmp
sbb
push
cmp
aaa
pop
std
outsb
inc
not
lret
inc
out
cmp
fs
xchg
rcrl
sahf
divb
jo
rclb
adc
jmp
ds
add
frstor
or
push
cmp
or
jno
jmp
dec
je
xchg
call
and
push
xor
jns
adc
or
pusha
add
lds
out
adc
das
rcrb
int3
pop
jle
leave
dec
inc
ds
nop
add
jb
stos
adc
xchg
push
sbb
insb
inc
nop
mov
jmp
outsl
subl
sub
ljmp
in
rorl
icebp
dec
jns
mov
xchg
aam
cwtl
jmp
popa
adc
adc
les
decl
mov
mov
jo
repz
lock
sbb
sub
sub
lcall
push
pop
lret
pop
pop
ljmp
incl
jge
div
cmc
loop
loopne
push
jecxz
push
enter
aaa
roll
push
mov
stos
push
xchg
insl
or
lods
jg
push
call
push
decl
rcr
ret
inc
outsb
in
jle
fstpl
pop
arpl
imul
or
shr
adc
xor
fnstsw
imul
mov
xchg
or
xchg
jns
push
and
cmp
arpl
mov
pusha
mov
dec
add
scas
or
aam
enter
jmp
lock
dec
outsl
xchg
outsl
and
pushw
and
inc
mov
data16
inc
orb
xor
sub
popl
mov
stos
loope
je
andps
cwtl
es
into
loop
xchg
inc
aaa
xor
and
adc
pop
sub
lock
lock
pusha
inc
inc
es
shr
ret
push
lea
aas
jbe
jg
push
icebp
push
in
push
mov
iret
fsts
xor
add
lods
mov
push
pusha
jl
aas
adc
pop
mov
js
fidivl
jae
mov
in
cmp
jg
xor
outsl
sbb
mov
shlb
test
mov
repnz
hlt
sahf
inc
popa
ljmp
mov
test
mov
add
adc
cli
and
gs
stos
sub
clc
push
icebp
cmc
sbb
test
imul
clc
add
fiaddl
mov
hlt
and
mov
inc
sbb
adc
jns
push
popa
jle
push
insb
and
sarl
push
lea
iret
std
sbb
inc
sbb
mov
fcomp
sub
xchg
or
mov
cmpsb
jp
arpl
mov
push
aad
inc
and
adc
in
xchg
cmp
dec
dec
cli
pop
shll
jle
inc
ret
mov
dec
xchg
movsb
or
add
add
testb
and
fs
shl
cld
outsl
push
push
sub
mov
insl
das
out
or
or
mov
inc
pop
inc
xchg
popa
adc
pop
fsubp
ss
lcall
pop
fs
gs
push
inc
sbb
or
call
imull
xorl
dec
push
xchg
pop
es
repnz
repnz
jp
add
clc
lds
imul
ror
arpl
adc
ljmp
lcall
mov
icebp
cld
mov
ss
hlt
mov
push
push
stos
push
sbb
lret
cmp
aaa
inc
mov
aam
sahf
push
aas
dec
xor
mov
mov
in
das
leave
jne
push
inc
pushf
xchg
mov
pop
push
push
sbb
mov
mov
scas
fsubr
mov
lea
jge
pop
xor
pushl
imul
aad
inc
pusha
stos
inc
or
iret
mov
ret
add
mov
and
pop
jmp
xchg
call
inc
inc
push
pop
in
into
ds
mov
jae
push
fimull
mov
pop
and
xchg
lods
andb
mov
and
fdivs
push
or
ja
les
gs
adc
mov
ret
xor
mov
xchg
jne
sbb
dec
or
insl
push
aam
adc
decl
and
loop
scas
cmp
jbe
int3
cmp
out
add
pop
jae
insl
incl
jmp
inc
mov
mov
cmp
das
jp
aam
or
fs
jbe
or
mov
add
sbb
jg
out
leave
push
mov
add
xor
xor
mov
and
mov
push
add
push
jp
lcall
pop
push
rclb
fldt
mov
aas
aaa
dec
rorb
nop
pusha
addr16
leave
pop
test
fidivrl
cli
das
xchg
repz
jbe
lret
dec
push
rcrb
out
das
insb
and
stos
and
in
mov
adc
mov
scas
outsl
xlat
outsb
pop
icebp
jae
ds
and
daa
fdiv
insb
push
push
aam
fcmove
or
ja
mov
add
je
push
or
pop
dec
loopne
mov
jns
cmp
sub
lahf
push
jmp
pop
cmp
cmpsb
jo
inc
data16
mov
mov
lock
jbe
sbb
xchg
lock
pop
mov
fbstp
add
jge
fbld
aad
xor
sbb
jg
adc
lcall
inc
or
mov
cli
rcrb
lods
dec
sbb
leave
push
shlb
lcall
inc
rorb
ret
mov
push
cmp
and
mov
movsl
mov
fs
int
cmpsb
out
adc
scas
jp
adc
cli
mov
sbb
cmp
ds
pop
insb
adc
mov
mov
jp
cmp
and
pop
and
add
cmp
loop
mov
adc
add
sbb
jb
inc
mov
jg
mov
int
out
or
sbb
dec
insb
fldl
pop
cmc
out
mov
xlat
inc
add
mov
test
ja
insb
xor
cmpsl
orl
dec
mov
sbb
or
int3
insl
push
out
dec
leave
and
and
cmpsb
xchg
push
xchg
mov
mov
dec
mov
test
inc
mov
mov
push
inc
out
rorl
fdivrl
sbb
aam
dec
jl
or
jnp
hlt
filds
sahf
es
inc
adc
stc
cmp
in
xchg
and
fs
ljmp
adc
pop
push
sbb
dec
daa
leave
sub
iret
dec
les
inc
sub
test
movsb
adc
mov
repnz
sub
shll
fcmovu
lock
sub
push
cmp
push
ljmp
shll
jns
fdivr
jge
sub
cwtl
inc
popl
pop
sub
sarb
cmc
sbbl
dec
movsb
pop
sub
sub
or
sbb
lock
dec
lds
adcl
mov
xchg
jp
fbld
push
shlb
mov
adc
sub
mov
mov
cld
dec
xor
ficompl
jo
outsl
xchg
loopne
lret
push
add
incl
push
rclb
stos
loopne
xchg
lcall
stos
adc
pop
dec
stos
cmp
lods
pusha
mov
jl
mov
xor
cmp
jg
insl
inc
or
mov
stos
bound
cltd
scas
xor
fisttpll
ds
cmp
nop
lods
fsubs
inc
sub
rcrl
scas
int3
push
push
rolb
fwait
push
jmp
push
imul
push
into
add
or
decb
testl
pop
imulb
mov
scas
rclb
aam
clc
or
push
popa
jne
sub
ret
mov
fisubs
mov
mov
dec
shr
fidivrl
sti
jo
pop
pop
fwait
fs
cwtl
mov
mov
mov
mov
ss
insb
je
and
adc
imul
and
mov
andl
sahf
test
call
mov
add
ret
addr16
pop
jg
push
repnz
cmp
dec
sbb
in
push
mov
aad
jg
jns
push
mov
stos
rcll
nop
out
mov
out
in
ret
cs
lods
outsl
call
mov
daa
outsb
xchg
cmp
lds
mov
mov
cwtl
and
pushl
lret
jne
iret
xorb
sbb
scas
dec
das
lahf
in
js
or
incl
xor
push
dec
aas
and
xor
xchg
add
ss
scas
xchg
jo
mov
push
pop
pop
pop
inc
enter
orb
push
clc
sbb
push
xchg
jle
jge
ret
jo
test
cs
xorl
scas
lcall
inc
mov
mov
dec
add
scas
pop
or
mov
subb
dec
subb
adc
sub
inc
pop
es
std
or
repz
jbe
gs
or
jnp
call
inc
loope
push
insl
lea
pop
aaa
lcall
lahf
lret
jb
xchg
or
mov
aaa
mov
jg
pop
loopne
out
adc
pop
cmp
movsb
jnp
fisubrl
xor
pop
fs
push
mov
adcl
xchg
sbb
mov
outsl
xchg
orb
mov
xchg
cld
es
ja
push
and
sarb
inc
shl
or
lea
and
pop
fs
movsl
lcall
daa
cs
mov
test
mulb
mov
and
test
push
int3
addr16
aam
adc
aam
cli
dec
call
mov
and
clc
and
adc
test
add
icebp
cmpsb
movsl
xor
mov
andb
mov
add
test
hlt
inc
mov
xchg
sbb
mov
rclb
pop
out
mov
inc
fs
ret
adc
xor
cli
cvtps2pd
stos
subb
inc
mov
mov
dec
pop
mov
bound
sbb
cmp
movsl
stos
out
ss
or
insb
pop
cli
mov
mov
cmp
fwait
sub
roll
xor
cmp
pop
mov
xchg
test
xchg
cmp
cmp
mov
dec
adc
mov
mov
in
add
mov
loopne
dec
mov
push
sub
insl
lods
mov
xor
leave
fsubl
out
inc
sbb
mov
sarb
in
ja
sbb
xchg
mul
jne
loope
shlb
dec
mov
cmpsl
stos
cmp
out
fisttpl
in
pop
lret
fcmovnu
mov
insl
test
add
push
inc
add
pop
fldt
aas
fwait
pop
fs
pop
call
clc
lock
es
inc
lret
cltd
inc
adc
lahf
aas
in
stos
idiv
sbb
push
in
push
movsb
pop
addl
mov
cmp
idiv
dec
push
cli
leave
dec
not
dec
bound
mov
xor
mov
mov
xor
push
add
adc
ds
push
push
js
in
shll
jg
and
inc
insl
xchg
test
dec
scas
add
or
lods
adc
test
mov
pusha
lret
sub
outsb
cmp
xor
xor
cmpsl
jbe
add
xor
lock
push
jo
test
stos
test
sbb
xchg
bound
addr16
jbe
push
add
jecxz
dec
repz
insb
sub
mov
mov
push
fucomi
jbe
scas
jp
mov
mov
pop
js
adc
ret
je
inc
adcl
xor
incl
pushf
sub
ret
xor
sub
pop
and
out
mov
sub
mov
xchg
js
imul
add
mov
into
stos
movl
sub
stos
mov
out
ds
jl
pop
sub
mov
jp
xor
iret
push
test
dec
les
mov
mov
jmp
dec
push
mov
push
lret
adc
clc
loope
add
sahf
xor
adc
leave
scas
adc
and
orl
or
cmpsl
test
ret
and
pop
clc
lods
lock
ja
pop
or
cmp
xchg
out
loope
test
push
divps
mov
inc
mov
pop
pusha
jg
sarb
pop
hlt
add
xchg
or
jl
adc
jge
jp
push
cmp
dec
mov
xorb
scas
mov
xor
in
mov
call
inc
ret
cmpsb
mov
enter
mov
mov
subb
lahf
mov
inc
dec
pop
jnp
imul
lea
lods
stos
popa
pop
add
or
es
std
dec
fimull
cmp
scas
mov
cmpb
sar
lahf
push
test
sbb
in
clc
incl
push
popa
mov
aas
imul
mov
stos
popa
sbb
stc
push
inc
rorb
loope
incl
ret
mov
lods
add
lock
test
shlb
das
adc
pop
enter
sbb
add
jl
cli
repz
pushf
aaa
push
jg
cld
xor
fstpl
aad
es
dec
sahf
mov
in
insb
jo
mov
mov
push
out
xor
pushf
cli
mov
fbstp
cwtl
out
jp
mov
push
dec
movaps
sbb
inc
push
clc
or
sbb
xlat
xor
icebp
das
test
aam
pop
scas
push
rcrb
add
push
shlb
jbe
add
mov
scas
push
scas
and
fldt
add
sbb
les
popa
lock
cld
data16
fcmovb
and
or
aaa
mov
xor
sub
stos
and
cli
cld
jno
stos
dec
cmp
sub
movsb
cli
leave
movsl
xchg
inc
aam
dec
imul
mov
mov
mov
pop
adc
push
repnz
pop
lahf
lds
js
movsb
in
mov
fs
rorb
or
call
cmp
pop
push
mov
rorb
push
fidivl
push
xor
test
pop
lock
adc
jnp
loope
inc
mov
imul
mov
jb
pop
aaa
mov
and
mov
cmpsb
cld
repz
dec
mov
fcom
push
int3
fwait
pop
rorb
scas
adc
cld
aad
outsb
outsb
test
adc
or
loopne
cmpsb
ljmp
stos
incl
fs
xor
faddl
lea
or
push
cltd
scas
xor
lss
data16
add
dec
sarb
sub
dec
xchg
jb
test
imul
xchg
stos
pop
pop
adc
es
lods
or
mov
xor
bound
stos
roll
sbb
mov
adc
sbb
adc
sti
cmp
jl
hlt
mov
jecxz
ficoms
inc
dec
jg
dec
adc
adc
inc
mov
push
add
dec
pop
dec
mov
arpl
xchg
arpl
jnp
pop
or
add
fists
mov
loop
push
cmp
xor
pop
movsl
pop
icebp
es
pop
xchg
jmp
jmp
mov
jb
xor
jp
pop
mov
push
leave
mov
ds
int3
shr
jg
loopne
push
inc
mov
or
mov
ret
add
cld
mov
or
mov
add
xchg
shl
out
popf
xchg
das
clc
out
xchg
loopne
mov
enter
mov
in
adc
add
jecxz
pop
test
aas
push
lcall
xchg
xchg
mov
sub
cli
ljmp
in
inc
and
stos
jns
lret
aas
sbb
mov
cmp
or
xor
mov
dec
mov
push
iret
push
cmp
les
loope
sbb
cli
in
mov
sub
sbb
adc
mov
cli
mov
mov
les
pop
lea
mov
stos
push
fcmove
sbb
adc
adc
fisttps
pop
out
push
into
sbb
stos
pop
push
hlt
cs
or
daa
leave
pop
and
push
pop
mov
inc
jno
xor
nop
shr
dec
mov
and
fadd
add
fnstsw
dec
push
movsl
xchg
jmp
pop
mov
fidivs
mov
aaa
call
inc
cmp
pop
pop
pop
aas
out
push
fildl
dec
test
ljmp
adc
push
stos
jge
sub
cmp
das
mov
std
sbbb
fadds
inc
sti
testl
mov
mov
cmp
jb
subl
cli
or
sti
sbb
enter
cld
ret
iret
jne
icebp
out
dec
dec
rcrb
sbb
lcall
lods
pop
or
scas
xchg
mov
lcall
fisttps
sub
mov
nop
mov
lds
xor
movups
cmpsl
jmp
in
dec
fcmovnb
pop
and
sbb
ret
push
imul
frstor
push
jmp
scas
stos
out
ficomps
sub
fs
push
iret
lahf
pop
pushf
es
cmpsl
movsl
sbb
loopne
sbb
xchg
cli
and
fstp
jb
enter
decl
subb
popa
bound
sub
jmp
push
incl
add
cli
pop
cs
sbb
mov
jae
rolb
cs
lcall
mov
mov
mov
notb
jae
rolb
sbb
jae
and
js
cmp
mov
adc
pop
leave
cmpsl
xor
jns
mov
adc
xchg
mov
push
sbb
movsb
test
push
push
cmc
addb
sub
xchg
into
sub
dec
clc
pop
and
icebp
push
jmp
lret
cmpsl
xchg
and
and
mov
arpl
dec
call
push
sub
hlt
jnp
inc
pop
inc
add
cmp
sub
mov
cmpsb
xchg
stos
mov
add
jecxz
call
mov
push
mov
sub
shrb
mov
nop
jle
cmp
mov
bound
dec
call
fiadds
xor
mov
jmp
inc
clc
pushf
scas
add
sbb
icebp
fsubrl
sbb
lods
dec
xor
into
fmull
jmp
int3
push
dec
sbb
dec
jg
cld
add
jmp
scas
pop
adc
movsb
xorl
les
inc
cld
xchg
dec
scas
dec
lret
int3
mov
out
clc
and
pop
popa
scas
shl
xchg
inc
arpl
rolb
insb
sub
and
mov
adcl
mov
xchg
arpl
adc
xchg
out
xchg
test
and
pop
adc
mov
push
xor
mov
inc
ss
insb
jbe
test
mov
fldt
cli
int3
mov
cmp
fdivrp
scas
cli
les
mov
fwait
iret
push
ds
mov
mov
hlt
jg
lods
inc
ret
cmp
dec
xchg
push
jp
sub
fs
fsubr
rcrb
loop
mov
shrl
and
in
or
adc
xorb
or
sub
cmp
cmpb
rclb
out
and
in
ficoml
mov
push
ljmp
ljmp
fimull
ljmp
mov
inc
jmp
cltd
mov
jge
pop
shrb
sti
stos
loopne
mov
mov
mov
pop
add
adc
repz
cmc
sbb
pusha
das
mov
sbb
test
call
lods
and
stos
ret
ja
rcrb
pop
xchg
adc
call
xor
mov
pop
fcomps
insl
bound
mov
je
stc
cmp
pop
sub
aas
sub
test
mov
jg
push
mov
test
push
sbb
xchg
and
mov
popf
test
ss
out
mov
mov
inc
cmp
addb
mov
sti
cmp
dec
inc
in
adc
cwtl
sub
pop
loop
add
add
jle
sub
es
dec
jp
hlt
mov
push
lcall
das
push
push
repz
jb
shrb
push
subl
sbb
sub
std
cmc
jg
ret
dec
cli
call
cmp
xchg
adc
outsb
sub
add
add
add
insb
call
fistl
in
sahf
sbbb
test
fwait
test
jl,pn
lea
les
mov
sub
push
pop
sarb
jo
and
mov
insb
cld
out
call
mov
mov
dec
push
jg
dec
fidivl
aaa
scas
sbb
ja
pusha
rorb
nop
push
cmpsb
xchg
mov
xor
ljmp
lcall
mov
stos
cs
scas
xchg
sbb
pop
loopne
xor
cmp
mov
push
out
test
fdivs
sbb
push
dec
mov
xchg
or
dec
pop
adc
ds
xchg
push
incl
outsl
lret
dec
mov
clc
dec
push
or
jo
pop
lods
or
adc
or
lcall
mov
push
push
into
sub
hlt
out
loopne
xchg
fisttps
sbb
push
loope
sub
mov
ja
lcall
outsb
test
adcl
sbb
adc
pop
mov
outsb
xor
push
xor
loope
lahf
lcall
mov
movsb
adc
add
in
into
xchg
in
clc
jmp
mov
and
lret
test
xor
pop
cmp
push
outsb
movsb
cmp
scas
xlat
and
andb
lret
cmp
mov
sbb
daa
mov
sbb
insb
repz
cli
dec
cmp
xchg
cmpsb
inc
adc
jo
cmc
fadd
adc
clc
add
push
mov
dec
mov
or
push
outsb
aam
fidivrs
cltd
shrl
xor
jle
add
or
fists
fsubrp
dec
icebp
mov
ja
mov
ror
jp
addb
movsb
dec
mov
insl
aam
push
xor
outsb
push
and
ret
cmp
push
sub
sub
mov
mov
mov
push
jmp
adc
lock
iret
jne
xorb
pop
push
sbb
inc
icebp
sbb
out
mov
push
ss
ret
scas
add
adcb
mov
adc
lcall
and
add
inc
xchg
inc
add
mov
loopne
and
xor
daa
stc
sbb
out
xor
jnp
das
mov
and
pop
je
stos
dec
or
pop
daa
pop
inc
and
add
popf
enter
cmc
jbe
sbb
jp
inc
pop
dec
rorb
incl
fstps
js
in
or
mov
test
ss
sbb
lock
dec
adc
scas
push
push
jge
mov
mov
sub
std
sbb
cmpsb
push
jbe
das
clc
pop
xadd
cmp
je
sbb
es
sbb
cmp
icebp
fcmovnu
mov
mov
jnp
dec
pop
xor
js
xchg
and
and
push
push
scas
pop
mov
aas
pop
sub
xor
loop
xchg
pop
data16
pop
in
add
dec
sub
push
or
outsb
lods
sub
js
add
repnz
mov
fcmovnb
mov
fildll
mov
mov
lock
das
dec
jmp
inc
jmp
es
aas
add
mov
dec
cli
fwait
add
shlb
stos
add
hlt
and
mov
or
mov
clc
icebp
pusha
inc
cmovs
inc
or
xor
bound
add
mov
jecxz
leave
lret
es
test
test
cwtl
insl
cmp
lods
jg
pop
aaa
subb
sbb
cmpsb
or
fdivp
divb
fidivl
fmuls
inc
imul
sbb
adc
pop
clc
das
xor
mov
roll
aas
les
pop
js
movsb
mov
inc
mov
push
xchg
adc
repz
cld
sbb
adc
outsl
mov
inc
cmp
adc
xor
jecxz
call
pop
pop
mov
std
mov
bound
test
adc
lds
mov
xor
mov
fwait
aam
push
mov
out
les
pusha
jle
icebp
lea
call
jecxz
mov
icebp
in
dec
or
jecxz
imul
nop
cmpsb
lds
test
adc
mov
les
out
add
iret
xchg
aam
sub
rcr
inc
dec
xor
lcall
data16
sub
sti
mov
push
adc
mov
insl
aam
call
lods
pop
movsl
es
and
cwtl
mov
add
xchg
lcall
loopne
call
outsb
stc
mov
rcrl
mov
sub
in
inc
ds
xor
jmp
dec
mov
incb
sbb
xchg
mov
sahf
mov
push
mov
loopne
lcall
jmp
movsb
imul
adc
xchg
mov
adc
ja
pushf
adc
ds
mov
pushf
cmc
pop
xor
dec
test
fstps
movb
iret
add
scas
int3
jb
jb
inc
cmpsl
cli
push
out
mov
lods
sub
sub
pop
push
lret
mov
or
hlt
lock
mov
ljmp
cmpsl
adc
into
add
adc
xor
sbb
jg
mov
movsl
cld
xchg
insb
rcr
adc
fmuls
jge
mov
add
xor
or
push
and
mov
jg
adc
mov
in
push
repnz
sarb
dec
push
rcr
xchg
decl
insb
mov
pop
sahf
stos
clc
fbld
ficoms
leave
call
add
pusha
jno
or
call
push
add
jne
out
loop
scas
mov
rclb
jns
repnz
mov
mov
jp
mov
stos
cmpsb
cltd
jo
mov
lahf
cli
inc
cld
int
pop
cmp
xchg
lret
mov
popf
test
clc
fstpl
mov
loop
out
aas
mov
cmp
mov
cmp
add
mov
pop
push
mov
mov
incl
sbb
add
xchg
sbb
lcall
xlat
lock
imul
and
ficoml
push
daa
or
fmull
cmp
addr16
divb
loope
repnz
xor
pop
lock
push
lods
cld
sar
xchg
pop
fcomps
js
fisubrl
xchg
or
sub
aad
icebp
adc
dec
popf
fs
xchg
sbb
and
decl
or
popf
sbb
push
adc
push
sti
sbb
fucomip
sbb
add
mov
les
mov
inc
prefetch
and
lret
pop
lret
clc
pushl
pop
ds
push
mov
adc
sbb
add
in
mov
xor
adc
dec
mov
pop
aam
decl
cmc
mov
mov
mov
xor
enter
lock
inc
jl
pop
mov
jmp
pop
and
xchg
and
inc
inc
sbb
sub
pop
rclb
mov
mov
in
js
mov
push
and
cld
cli
lds
jne
and
call
xchg
nop
xchg
ss
mov
mov
sbb
jb
sub
jge
mov
and
push
jle
mov
push
xlat
rorb
std
aas
rorb
adc
test
leave
lret
inc
mov
sahf
fwait
test
les
ret
dec
data16
lcall
mov
aam
cli
mov
and
sub
repnz
call
pop
jge
mov
mov
aad
push
jns
fsubrp
adc
jmp
sahf
xlat
loopne
sub
cwtl
mov
pop
sbb
outsb
in
dec
mov
clc
or
mov
xchg
xor
pop
imul
pop
mov
imul
cmp
xchg
inc
into
and
lock
push
insl
add
and
sbb
add
push
scas
jl
out
popf
lock
or
jg
nop
loopne
mov
pop
aad
mov
and
dec
and
jb
mov
jmp
cs
fldt
adc
jp
lock
mov
out
add
shrb
xorb
cmp
sbb
mov
dec
rcll
divb
pop
loope
lds
jne
stc
call
jmp
rcll
insb
sub
fstl
aam
sub
xchg
mov
jmp
test
cmp
and
and
call
add
jge
mov
adc
frstor
outsl
xchg
cmp
add
je
push
push
jne
push
pop
jo
outsb
pop
dec
pop
nop
cwtl
out
lret
cmp
jp
insb
inc
pop
dec
push
les
jg
leave
lds
dec
fnsave
pusha
cmp
loop
push
pshufw
js
loopne
and
imul
addr16
repz
xchg
mov
and
test
mov
repnz
pushf
cwtl
push
xchg
scas
mov
jae
hlt
sahf
mov
sahf
imul
xchg
jle
mov
rorb
mov
lcall
sbb
push
sub
jno
daa
pop
and
fstpt
fiaddl
stos
idivb
adc
sbb
xchg
nop
sbb
cs
lods
clc
das
add
data16
sbb
ret
dec
sbb
xchg
add
fs
xchg
push
fdivs
mov
mov
loopne
cmp
cmpb
and
push
xor
cld
aad
sub
xchg
enter
adc
sub
pusha
mov
int
mov
loopne
out
jns
sbb
adc
cli
push
pop
idivb
hlt
push
fdiv
add
popf
push
fildll
inc
sbb
sarb
and
fnsave
loopne
insl
insb
jecxz
push
mov
outsb
push
jg
pop
inc
int
das
cli
adc
cli
pop
cmp
lret
incl
outsl
ja
cli
fldenv
inc
or
mov
mov
loop
lea
cmp
scas
lcall
mov
cmpsb
out
roll
ljmp
xor
pop
sbb
xchg
ljmp
daa
test
imull
add
push
adc
mov
jmp
sbb
add
adc
das
xor
mov
loope
dec
inc
sbb
sub
mov
rcrl
and
and
int
xor
shr
arpl
push
insb
cmp
xchg
pop
hlt
aam
rcrl
jg
hlt
pop
push
insl
sbbb
cmpsl
pop
aam
mov
pop
xor
jmp
stc
push
adc
pop
test
mov
mov
pop
dec
add
pop
iret
adcl
cmpsl
cltd
xchg
popf
or
xor
jle
loopne
call
and
xchg
insl
mov
sub
cmpsl
dec
andb
push
outsl
or
loop
mov
mov
mov
pop
test
hlt
jecxz
insb
xlat
xchg
mov
ljmp
dec
push
lret
inc
and
dec
xchg
mov
pop
mov
push
or
stc
xchg
sub
jecxz
or
fwait
pop
xchg
ret
or
cmp
das
shlb
mov
clc
ja
pop
test
pop
lcall
cmpsb
pop
add
push
sbb
or
out
ljmp
mov
outsl
jmp
xlat
scas
cmp
xor
pop
sub
mov
push
mov
and
xchg
lcall
mov
xchg
add
sbb
pop
inc
sbb
mov
jg
push
addb
imul
int
and
call
cmp
popf
lea
fsubrl
in
sahf
mov
aaa
imul
jb
inc
pushf
insl
lret
clc
xchg
pop
add
mov
loopne
inc
dec
and
pop
icebp
xchg
xchg
inc
and
xchg
in
test
cmp
push
mov
insb
sbb
mov
mov
push
sahf
rcr
shlb
insb
mov
sbb
pop
add
push
or
and
mov
push
or
mov
lds
pop
push
imul
mov
sbb
jne
test
or
lock
ja
xor
idivl
sbbb
xchg
cmp
add
push
les
mov
aas
sar
ss
jae
shlb
jmp
clc
jne
or
das
aad
adc
lahf
xor
mov
mov
sub
ret
cmp
dec
aam
cltd
or
test
fisttps
insb
cs
jb
outsb
push
lret
test
test
push
push
push
mov
add
pusha
xchg
in
pop
xchg
mov
aam
jmp
add
add
loop
pmuludq
jg
adcl
inc
loopne
lret
mov
loopne
cmp
push
mov
mov
mov
xor
push
push
incl
sbb
in
daa
xchg
inc
pushf
fnstenv
push
inc
and
jl
std
popa
jno
jmp
dec
pop
sub
js
dec
inc
pop
xchg
ljmp
notl
std
andb
push
push
test
pop
xchg
lret
movsl
jbe
cli
push
ret
sbb
and
in
sub
push
fwait
xchg
iret
fisubl
mov
insl
pop
outsb
pop
mov
mov
xchg
mov
pop
pop
in
adc
jb
das
dec
es
jg
push
fisubrs
and
sbb
dec
fdivrs
insb
push
push
xchg
inc
test
mov
inc
sub
fs
pop
lods
adc
mov
sbb
stos
mov
popa
adc
aaa
push
dec
dec
push
cmpb
sub
xchg
scas
xor
ljmp
jecxz
pop
loopne
outsb
les
mov
clc
push
jmp
jl
jno
and
dec
test
loopne
mov
cmp
into
leave
push
jns
fisttps
adc
sahf
push
push
mov
mov
add
mov
cmp
or
sbb
add
mov
or
jne
xchg
push
sub
inc
xchg
icebp
imul
add
cmc
lds
insb
je
rcl
lods
pop
mov
xchg
sbb
sbb
adc
or
cwtl
stos
popa
push
je
scas
outsb
push
leave
or
inc
in
test
ljmp
in
shrb
sub
call
lea
test
iret
mov
push
lret
sub
nop
cmpsl
cwtl
ficomps
mov
and
cmc
cli
aaa
adc
adc
insb
je
insl
pop
or
lcall
lcall
mov
push
imul
fistps
inc
jg
shll
cmpsl
ja
stc
lock
jae
test
sbb
jge
pop
mov
inc
sub
add
pusha
and
cld
aam
mov
adc
push
hlt
inc
mov
sbb
sbb
rcl
sbb
ljmp
pop
push
iret
add
dec
jb
mov
jg
push
add
outsl
dec
shlb
pop
push
xchg
pushf
pusha
dec
add
fwait
loope
loope
imul
jne
cli
or
leave
mov
cld
ret
push
pop
xchg
pop
in
mov
loopne
mov
aad
or
shrl
and
inc
lea
cmp
idivb
orb
movsb
jno
lcall
test
mov
mov
mov
ret
dec
and
push
lcall
xchg
mov
inc
add
ja
xchg
mov
dec
and
mov
inc
adc
fdivrl
xor
sbb
cmc
sub
std
adc
sbb
pop
cli
mov
iret
clc
outsl
inc
adc
test
int
xchg
test
sarl
cs
mov
add
cmpsb
or
pop
jae
mov
pop
dec
enter
add
sub
int
mov
or
mov
mov
lods
dec
sbb
call
aas
out
and
bound
sbb
ret
cli
pop
loopne
ret
jl
mov
cltd
shll
cmp
cld
xchg
pop
decl
xlat
sub
pop
addl
int3
mov
mov
lds
shrb
test
fnstenv
sbbl
inc
push
mov
loope
mov
xor
add
cs
cld
out
dec
push
popf
adc
lock
push
mov
push
nop
jp
mov
inc
cmp
int3
or
gs
cmp
xor
addr16
scas
mov
mov
addr16
mov
idiv
mov
add
xchg
dec
mov
xchg
cmpsl
mov
rol
dec
inc
data16
js
decl
adc
dec
inc
idivl
jle
and
inc
and
cli
incl
nop
dec
hlt
adc
int
loop
xchg
push
out
shrl
test
adcb
std
fists
pop
pop
stos
mov
jp
clc
cmp
dec
int
f2xm1
jae
sub
dec
cwtl
les
loope
movsl
dec
adc
lods
nop
addb
xor
shr
adcb
sub
daa
and
cmpsb
fldt
jg
addr16
or
mov
pop
dec
xchg
and
in
decl
and
fwait
cmpsl
pop
push
mov
gs
mov
loopne
mov
add
lcall
push
lock
mov
sub
sbb
out
xchg
test
inc
and
jg
and
into
push
or
jb
push
push
dec
sarl
mov
dec
sub
sbb
push
mov
fldt
push
dec
jl
test
mov
add
add
sbb
mov
mov
cmpsb
xor
enter
cmpsl
movsb
aaa
cld
xlat
pop
mov
shl
push
mov
scas
push
repnz
movsl
push
mov
cmpsb
shlb
mov
out
adc
lcall
sub
loopne
mov
scas
jecxz
mov
cmpsl
and
xchg
mov
dec
jne
fcom
test
jno
repz
add
xor
push
out
faddl
push
push
aas
cs
leave
xchg
cwtl
jl
sti
or
js
add
cltd
cltd
into
or
adc
inc
lods
mov
sahf
mov
jmp
jnp
sub
in
inc
or
push
jle
push
mov
lret
push
inc
sbb
notb
outsb
lods
lock
dec
add
jg
fwait
adc
loop
push
or
popf
mov
enter
out
notl
push
inc
sbb
aas
sub
shll
inc
add
ljmp
outsb
mov
pushw
cmp
aam
or
mov
sub
cs
adc
sub
xchg
lret
aam
push
ds
pusha
pop
mov
lahf
stc
jle
lret
imull
clc
mov
cli
push
rolb
adc
jge
mov
in
or
pop
jmp
sbb
pop
sub
and
pop
xchg
inc
data16
or
jmp
sbb
xchg
ss
subb
or
pop
pop
test
inc
test
push
scas
mov
popa
or
jge
sub
addl
jle
jno
jo
lods
fwait
inc
cmpb
push
popa
sbb
hlt
sbb
sbb
xchg
std
das
insb
shlb
add
and
in
scas
pushf
lret
xchg
pop
es
je
cwtl
cmpsl
mov
adc
pop
add
add
fimuls
or
xor
jnp
pop
dec
cmc
jg
subl
add
shl
nop
sub
pushl
and
inc
mov
fcomps
incl
and
or
hlt
xchg
dec
and
movsl
cmpsl
mov
in
call
testb
les
cwtl
mov
nop
dec
mov
or
sahf
cs
loop
jno
cmc
cmp
mov
pop
stos
xor
jp
lea
inc
push
inc
xchg
cmc
xchg
insb
add
add
adc
test
popa
lret
cmp
xor
mov
call
sbb
lret
cmpsb
pop
das
test
push
cmp
lcall
xor
push
xorl
mov
ljmp
or
lock
das
mov
xor
fucomip
add
sub
jp
mov
sahf
imul
mov
test
repnz
out
insb
or
add
dec
and
test
jno
inc
ret
add
and
movsl
lcall
mov
or
mov
subps
insl
mov
int3
out
cmp
call
xor
call
pushf
xchg
scas
jge
mov
in
fcompl
or
push
or
xorl
pop
les
mov
cmpsl
ss
cli
aas
inc
daa
lret
inc
decb
push
inc
adc
loop
ss
cld
mov
xchg
loopne
mov
shll
and
adc
sub
jmp
fildl
jmp
aam
repnz
xor
enter
dec
in
ss
imul
call
mov
mov
push
jnp
jbe
inc
mov
xchg
mov
sbb
cmp
push
sbb
xor
xchg
out
adc
dec
xor
and
pop
jmp
hlt
lods
xchg
movsb
hlt
mov
inc
hlt
pop
jp
fsubl
bound
movsl
test
add
dec
mov
adc
fs
ret
shr
loope
jg
stos
mov
and
test
popf
cli
jmp
mov
in
xlat
in
fisttpll
movb
mov
pop
test
sub
sub
pushf
ja
lds
sar
mov
dec
movsb
ret
sub
cwtl
push
pop
cmp
repz
mov
xchg
adc
in
cmp
fmuls
lods
push
cld
pop
or
cmp
mov
push
lcall
inc
lds
push
add
lea
jb
in
aaa
js
push
js
add
push
pop
inc
jo
xchg
mov
mov
xor
pop
jp
aad
dec
add
pop
test
xchg
xor
aad
inc
pop
sub
mov
cld
xor
or
incl
ljmp
pop
add
mov
mov
xchg
outsb
mov
outsl
sarb
ljmp
adc
mov
and
adc
sti
jg
xchg
and
mov
push
pop
icebp
mov
or
and
mov
scas
mov
pop
lea
pop
in
xor
dec
push
mull
xchg
and
decl
jg
cmp
jge
movsl
repz
or
in
negl
out
mov
add
frstor
mov
clc
and
call
and
mov
xchg
add
add
xchg
movsl
cmp
mov
outsl
inc
shlb
cmc
lods
insl
ret
jae
mov
mov
mov
pop
nop
dec
cld
outsl
sar
push
inc
xor
adc
mov
ljmp
push
pop
push
mov
fmul
sahf
mov
rcrl
inc
dec
push
lret
push
dec
rcl
inc
popa
pop
cmpl
out
clc
mov
xchg
cmp
dec
mov
pop
pop
popf
stc
jle
dec
pop
incl
add
and
or
sbb
imul
hlt
aaa
inc
shl
lret
jge
mov
addl
out
push
testl
filds
enter
add
test
jp
add
scas
lods
daa
dec
xchg
popa
jb
arpl
add
dec
sub
jae
jne
xlat
mov
sti
adc
pusha
add
scas
mov
std
push
cmpsl
cld
fbld
cwtl
stos
daa
lock
rorl
enter
mov
rcrb
cli
aas
dec
sbb
lds
imul
and
ljmp
je
add
mov
push
fmull
hlt
fwait
ss
add
add
out
js
mov
in
call
mov
sti
inc
shll
push
lock
cli
ds
pop
push
leave
jle
add
mov
inc
and
mov
mov
dec
dec
mov
dec
cmpsl
pop
jmp
ret
add
pushf
cmc
inc
cld
jg
imul
test
jnp
mov
dec
call
mov
insl
add
xor
scas
sarb
adc
fdivl
and
shll
popa
scas
in
cmp
movsl
mov
xor
fisubl
sub
mov
cmpsb
test
add
add
ljmp
cmpsb
push
pop
aas
jne
mov
jle
in
jns
sbb
pop
jecxz
push
stos
mov
or
xor
out
ss
out
cs
cmpsl
cmp
push
fsubl
push
repnz
push
push
fwait
es
aad
lods
push
outsw
ss
push
add
fs
fadds
fstps
fwait
mov
cmp
xlat
inc
stos
cmpb
jl
jp
fistl
mov
lock
test
jmp
test
clc
mov
ret
sub
outsl
out
inc
mov
gs
jmp
add
stos
inc
add
xchg
mov
xchg
or
incl
into
mov
sbb
or
sub
ds
das
clc
lcall
pop
rcrl
shll
sub
xor
incl
add
lcall
add
mov
movsb
pop
or
adc
pushl
out
sbb
jno
fsubrl
cmpsl
cmp
jnp
inc
cmp
in
cmp
fs
add
aad
fdivp
idivb
icebp
imul
add
fucomp
or
jmp
int3
add
push
jecxz
sbb
sar
addr16
jne
inc
inc
or
shl
adc
push
pop
dec
outsb
in
add
add
lcall
sub
test
stos
pop
mov
push
std
cmp
mov
adc
fbstp
mov
inc
cli
and
ljmp
addr16
negb
push
mov
ljmp
dec
add
inc
cmp
mov
add
xchg
pop
pop
mov
mov
push
sbb
xchg
add
jne
ljmp
outsb
insb
mov
orl
enter
add
and
aad
inc
test
mov
aad
or
int
icebp
push
test
in
aam
iret
rcl
jp
and
pop
push
pop
mov
decb
add
ja
mov
or
cld
scas
das
movsl
inc
or
test
xchg
push
push
sbb
rcll
mov
test
xor
outsb
and
je
insl
dec
outsb
les
dec
je
mov
orb
test
out
xor
addl
xchg
push
adc
fsubs
in
or
pop
in
out
cmp
xchg
loop
sub
fs
jae
mov
add
mov
fsubl
inc
and
adc
cmp
inc
fcomp
dec
out
jmp
cmp
ja
std
ret
fwait
rorl
pop
repz
in
call
divb
xor
mov
pusha
cld
out
cmp
sahf
mul
lds
jge
lcall
push
fmull
mov
lods
outsb
jmp
bound
loope
push
sbbb
fwait
jp
aas
xor
outsl
fcomi
jg
cmp
mov
adc
ljmp
jbe
push
sub
in
mov
jle
das
enter
and
push
cmp
push
jg
mov
loope
xor
mov
add
mov
dec
cli
arpl
test
cwtl
pop
outsl
jno
and
lret
adcb
xor
jbe,pt
mov
insl
cld
mov
call
add
insb
push
inc
outsl
in
lods
subb
add
sub
adc
bound
or
out
ljmp
aam
sbbl
cs
mov
jb
add
arpl
sahf
out
adc
sub
mov
data16
insl
icebp
fisubs
xchg
mov
add
out
xlat
add
addb
fisttpl
and
jmp
xchg
mov
fs
cli
insb
mov
loopne
lea
rorl
ljmp
movsb
mov
fcmovnu
dec
sbb
add
or
inc
pop
fmuls
je
int
pop
ret
sbb
js
dec
cmc
mov
xchg
test
xor
mov
pop
jno
mov
adc
cmp
xchg
lcall
dec
push
sar
sarb
adc
mov
add
outsl
dec
push
cmpsl
inc
pop
pop
mov
sahf
bound
dec
push
jo
outsl
xchg
negb
ja
push
lret
push
rep
or
pusha
in
rclb
das
ja
adc
lock
jge
jecxz
jne
or
jne
inc
dec
jb
push
std
lret
add
or
scas
fadds
xchg
jno
xchg
mov
aas
rcr
decb
aam
ss
pop
mov
xchg
sbb
lea
mov
lret
shlb
pop
gs
dec
push
inc
ss
xor
cmp
inc
add
sbb
adc
pop
repnz
data16
mov
jbe
cmp
pushl
pop
ljmp
jle
sbb
mov
icebp
cmp
push
jg
fsub
cmp
and
pop
jns
add
aas
adc
icebp
test
pop
mov
ficoms
dec
add
fnsave
jo
into
lods
lea
xchg
mov
sti
idivb
iret
js
sahf
inc
xor
pushf
icebp
icebp
jbe
test
shll
jg
andl
push
mov
push
mov
lcall
push
dec
lods
inc
movsb
stos
push
and
pop
fbld
scas
inc
loop
pushl
and
pushf
pop
icebp
sbb
add
mov
cmpb
fisubrl
push
dec
fcompl
enter
push
aaa
sbb
pop
insb
mov
mov
hlt
rolb
inc
das
aam
lcall
cs
scas
lahf
mov
idiv
out
jg
mov
outsl
imul
and
lcall
mov
bound
pop
rcrb
ficoms
xor
add
rolb
add
lock
add
add
cmp
lret
mov
test
test
mov
imul
mov
loope
and
mov
lcall
and
leave
push
mov
pop
push
stc
jne
mov
call
inc
out
es
mov
mov
in
mov
add
fmull
lret
adc
scas
fcmovnb
push
inc
mov
hlt
shl
adcb
add
xchg
cmp
adc
jae
cltd
data16
xor
loope
jecxz
sbb
addr16
aam
icebp
lds
adc
xor
mov
push
pop
lret
dec
popf
jmp
sti
and
dec
xchg
inc
inc
fsubrs
and
ja
hlt
js
xchg
arpl
add
mov
sub
ds
add
andb
rsqrtps
xor
js
test
stos
xor
cs
lcall
test
ja
test
or
jb
loopne
cli
add
mov
fwait
loope
mov
aam
adc
mov
cmp
roll
sbb
filds
xor
lods
inc
push
sti
xchg
push
or
lcall
xor
cld
mov
jmp
and
sub
xchg
xor
ja
enter
or
inc
xchg
lea
mov
lret
inc
rorl
xor
clc
xorb
xchg
inc
insb
das
and
andb
fidivl
mov
cld
outsb
mov
inc
mov
aad
cld
push
in
or
jl
cmc
cs
pop
jns
das
jbe
outsl
cli
adc
push
das
add
stos
xchg
and
dec
lock
cmpsb
test
pushf
mov
mov
idiv
test
shrb
mov
jge
addl
jns
ss
add
mov
call
cmc
das
mov
not
add
mov
mov
pop
or
mov
mov
sar
imul
jne
es
mov
insl
into
xorb
les
aad
sbb
mov
inc
jge
outsb
mov
add
jne
push
jge
ret
pusha
loop
loopne
cltd
mov
lret
push
cmp
add
inc
lds
mov
dec
iret
adc
fcmovnbe
and
lds
outsl
pop
or
call
cld
ror
clc
incl
hlt
push
rclb
push
lds
jo
sbb
test
lods
push
mov
sub
jl
jns
pusha
mov
push
xchg
adc
cmp
ja,pt
lcall
movsb
inc
inc
jecxz
pop
popf
clc
jg
je
xor
push
sub
dec
sbb
cmpsb
aam
add
mov
push
sarl
jg
insl
push
popa
xchg
sbb
adc
outsl
cli
jge
add
aad
and
out
pop
data16
pop
shll
call
movl
pop
ljmp
or
jb
int3
movl
add
or
fmull
lcall
in
or
add
lahf
push
imul
xor
or
lahf
in
dec
push
lea
lahf
movsb
adc
jb
aam
inc
jl
cmpsl
sarb
mov
das
xorb
movsl
and
insl
aas
stos
jne
cld
sbb
cmp
ret
popa
das
sahf
cmovge
adc
mov
sbb
inc
leave
lods
fs
ret
push
sbb
imul
inc
fisttps
lret
xchg
push
aas
enter
or
fwait
and
insl
dec
in
loopne
sub
mov
mov
xor
mov
bound
dec
fldl
xchg
cmp
pop
xchg
mov
arpl
loope
add
daa
ljmp
and
jmp
icebp
loope
push
push
push
leave
pop
js
call
sbb
mov
mov
mov
cmpsl
fisubrs
les
test
rol
test
sub
sbb
imul
jnp
add
fwait
mov
idivb
mov
rolb
ret
decb
sbb
mov
push
adc
cmpsb
call
clc
shll
mov
es
add
push
gs
adc
mov
add
cld
or
mov
js
or
add
mov
fbld
xchg
xor
int3
push
stos
adc
les
ss
sbb
decb
inc
divb
sbb
push
lods
loope
adc
ds
mov
shlb
jle
jg
mov
xor
adc
cmp
push
and
jg
aas
jbe
in
aad
call
hlt
xchg
xlat
inc
sbb
mov
jg
push
mov
add
and
hlt
lods
cld
rorl
loopne
xchg
inc
clc
jg
dec
pop
add
dec
addr16
jp
rcrl
add
ret
pop
pop
xchg
bound
add
dec
add
loop
add
decb
mov
and
jg
mov
pop
inc
and
out
fiaddl
mov
imull
out
mov
fildll
cs
fsubrl
scas
imul
pusha
xchg
fs
xchg
xor
push
daa
std
inc
fiadds
mov
dec
shrb
daa
je
clc
cmp
jle
mov
xchg
mov
and
push
dec
pop
mov
mov
test
jge
and
add
pop
dec
jg
decb
inc
rcrb
sbbb
inc
and
cmp
enter
xchg
in
call
jl
mov
out
xor
mov
mov
imul
test
aad
pop
nop
push
push
ljmp
mov
xchg
mov
mov
mov
or
cld
push
dec
push
aam
dec
lds
adc
xchg
call
mov
fs
imul
mov
xchg
mov
jp
jge
mov
or
pop
xchg
pop
cs
popa
push
cltd
jge
js
jne
mov
adc
dec
mov
pushf
pop
pop
imul
cmp
test
adc
cmpsb
xchg
fsubl
notb
lods
adc
shll
and
xchg
pop
and
adc
fsubrl
pop
addr16
test
jno
aad
and
mov
movsb
ds
movsl
cmp
loopne
stos
sbb
cmp
adc
out
mov
adc
fwait
popa
and
add
mov
or
jge
inc
adc
or
mov
jl
test
dec
sahf
pushf
xchg
inc
test
xor
insl
ret
aam
adc
lcall
rclb
mov
inc
sqrtps
add
and
lcall
loop
sbb
jge
jbe,pt
aam
mov
jp
outsb
jl
enter
xchg
test
fsubr
add
cmp
sbbl
insl
loop
adc
enter
pop
hlt
sbb
ret
push
inc
lcall
push
push
push
add
fsubr
add
or
jnp
les
jg
push
mov
pusha
int3
imul
out
sbb
sbb
movsb
pop
mov
pop
push
dec
mov
sbb
dec
mov
add
movsb
fiadds
mov
push
fiaddl
lds
pushf
cwtl
push
sbb
lock
cmp
push
mov
mov
call
fcmovnu
jno
mov
in
aaa
push
push
hlt
pusha
cwtl
jnp
jno
stos
xchg
push
or
stos
pop
mov
faddl
orb
jno
pushl
loop,pn
adc
daa
ret
cmp
sub
jecxz
mov
dec
mov
sub
jle
mov
add
or
mov
out
lea
cli
adc
adc
fs
ret
cwtl
scas
xchg
sub
pop
push
push
mov
lock
mov
rol
js
cli
scas
mov
cs
jmp
movsb
das
clc
call
outsb
lock
push
dec
inc
stos
inc
hlt
lcall
mov
jbe
adc
push
push
mov
inc
outsb
mov
cmp
mov
sub
push
add
or
test
sahf
add
inc
adc
stos
into
rcl
inc
es
cmp
push
push
mov
cmp
push
cld
ljmp
bound
lret
test
popa
idivb
cwtl
add
lea
stos
push
add
idiv
incb
push
mov
xchg
dec
out
cmp
dec
lea
and
outsl
ss
outsl
pop
fcoms
pop
stos
sbb
pop
adc
in
pop
xor
add
lods
jmp
pop
inc
push
jg
test
cmpsl
dec
mov
js
inc
adc
testl
fdivrl
and
jb
lcall
dec
aas
add
vcvtqq2ps
jge
fisttpl
lods
js
fldl
and
jb
rolb
loop
ds
aam
popa
pusha
adc
pop
inc
sub
xor
inc
out
pop
test
into
int
les
sahf
mov
icebp
mov
dec
ds
pop
rolb
push
loop
loopne
jge
int3
mov
es
lcall
ljmp
add
xchg
ja
dec
mov
xchg
shll
sub
push
loopne
out
inc
jmp
jecxz
mov
sbb
daa
sub
cli
push
fstl
cltd
loope
movsl
icebp
or
insb
sub
sub
hlt
add
loop
add
shll
cli
shrb
or
push
mov
adc
inc
jg
xchg
mov
or
arpl
xor
sbb
cltd
jge
ds
rcrl
insl
lcall
mov
ljmp
sahf
adc
daa
dec
test
js
add
fbld
mov
pop
mov
mov
fidivl
cwtl
fisttpl
add
mov
movsl
xchg
or
leave
jnp
pop
inc
outsl
adc
aam
pop
decb
jp
or
sbb
jnp
testb
jmp
pop
sbb
jl
sbb
sti
repnz
pop
es
mov
add
mov
mov
adc
pop
std
int
mov
inc
stos
fiaddl
xlat
jp
lret
lcall
or
rep
ret
fdivs
jl
movsb
and
mov
mov
jb
or
mov
jmp
fsubp
inc
aam
cmp
xchg
rclb
mov
icebp
dec
mov
in
lahf
movsl
jge
xchg
sbb
jnp
adc
dec
xor
int3
stos
les
mov
mov
cli
fimuls
mov
int
pop
push
pop
insb
cmp
cld
xor
mov
sti
out
mov
and
arpl
dec
ret
dec
inc
test
add
mov
dec
xchg
inc
sbb
pop
mov
mov
cmpsb
lods
insl
int3
sub
andb
sub
or
in
jae
sub
dec
inc
in
xor
mov
adc
mov
sub
imul
adc
dec
outsl
xorb
sub
dec
pop
lods
shlb
data16
imul
enter
fidivl
xchg
jecxz
xchg
add
jg
jl
adc
ds
push
mov
fs
lods
mov
nop
jnp
popa
adc
test
or
mov
and
dec
sub
insl
or
mov
mov
sub
jp
fiaddl
test
lods
xchg
rol
iret
aad
loop
jle,pt
xor
sbb
shrb
repnz
decl
into
movsl
outsb
add
stc
les
rolb
xor
cmp
call
or
orl
or
jl
data16
xchg
pushl
incl
push
sub
fildl
ljmp
pop
push
je
xor
sbb
rorb
ljmp
cmp
jg
xchg
push
push
push
lcall
cmp
mov
enter
sbb
imul
call
div
adc
inc
mov
pushf
sbb
call
jle
popa
mov
lods
jmp
sbb
pop
or
and
outsl
mov
adc
pop
das
cltd
push
sbb
inc
pushl
fwait
pushl
test
push
sar
popa
push
mov
test
push
mov
ret
mov
adc
mov
ljmp
decb
jg
repz
in
ss
xchg
mov
jecxz
add
call
mov
outsl
cmp
outsb
pop
clc
mov
call
mov
xlat
jl
movsl
mov
push
adc
fucomp
inc
adc
repnz
std
dec
inc
mov
sbb
mov
divb
push
jmp
push
lods
sub
jnp
and
outsb
inc
hlt
sub
push
add
movsl
out
jle
loope
mov
sti
shlb
jecxz
and
rclb
pushl
adc
inc
sbb
mov
adc
jge
mov
xor
inc
or
lods
jmp
push
enter
outsb
dec
xor
mov
jo
sub
test
aam
rcr
sub
rcr
pop
lcall
jbe
outsl
and
sub
imul
push
movsl
das
lock
cmp
dec
adcl
test
mov
pop
jmp
scas
mov
cmpsw
loop
hlt
pop
outsl
pop
dec
test
jmp
and
mov
insl
pop
mov
dec
pop
cmp
add
mov
fwait
xlat
mov
cmp
jge
aas
test
in
inc
in
dec
sbb
push
daa
lods
movsb
xor
daa
mov
js
xchg
cs
ja
cmp
dec
cmpsb
decl
dec
ja
sub
mov
fisttpl
or
jnp
in
lods
ret
mov
lods
pop
dec
in
sub
add
sbbb
sub
scas
add
xchg
in
out
inc
bound
cmpsb
sar
stos
fisttps
sub
cmp
daa
sbb
cmc
scas
ljmp
shll
jns
mov
adc
cmpsl
out
xchg
mov
aam
movsl
aaa
icebp
jg,pt
roll
lcall
jmp
jle
or
xor
std
jns
mov
sub
andb
xchg
outsl
idiv
inc
push
jmp
inc
rolb
xchg
int3
push
adc
sub
jb
xchg
mov
add
popa
xor
xor
cmp
lcall
scas
mulb
rorb
push
mov
jno
push
add
pop
sbb
push
movsb
cli
aas
stos
or
and
dec
es
mov
mov
aas
into
icebp
push
xor
and
jmp
mov
sbb
pop
adc
mov
fdivrs
xor
and
loop
movsb
incl
xor
push
mov
cmpb
pop
jmp
pop
push
aam
jb
xchg
mov
iret
lcall
inc
leave
clc
cmp
repnz
adc
dec
fstpt
imul
jns
imul
stos
xchg
out
mov
hlt
dec
xor
inc
pop
sub
std
mov
mov
ret
das
push
test
sbb
repnz
in
jno
and
xchg
dec
imul
or
je
fs
lcall
add
pushf
cs
sub
fstpt
je
add
incl
stos
xchg
insb
cmp
push
mov
ud2
push
mov
mov
inc
xor
cmc
into
rcll
scas
or
jg
mov
adc
imul
mov
sub
adcl
outsb
jle
jmp
and
sub
lock
and
icebp
mov
sub
int3
lds
xchg
pop
mov
xchg
pop
mov
dec
sub
lock
inc
ss
jbe
mov
mov
je
push
call
adc
sbb
cmc
pop
add
mov
jne
popf
gs
gs
sub
and
mov
mov
popa
cmp
shrl
inc
out
add
aaa
stos
call
icebp
filds
jmp
cs
xchg
cli
add
dec
insl
es
sar
push
hlt
mov
jne
mov
test
cmp
jmp
mov
insl
sbb
outsl
jl
push
je
cltd
pushf
outsb
es
insl
xchg
and
es
and
push
cmpsb
cmp
outsl
and
add
cmovns
test
loopne
inc
clc
outsl
aam
pop
dec
ss
popa
inc
and
sbb
std
ficoms
mov
push
pop
add
fcomp
add
clc
cmp
lcall
inc
and
xor
aaa
fcomps
dec
pop
add
arpl
cmp
add
mov
sbb
fs
xor
insb
in
jg
cmpsl
jp
adc
xchg
push
mov
jb
mov
test
in
add
jl
mov
int3
ss
out
ss
pop
push
pop
mov
jmp
mov
and
loope
mov
leave
and
js
insb
aad
in
enter
in
bswap
xchg
outsb
lods
push
jp
push
inc
cmp
xor
stos
iret
dec
sbb
cmp
push
mov
das
clc
xchg
xchg
xchg
in
xchg
jae
inc
or
jno
jae
mov
pop
shrb
and
inc
ret
nop
repnz
ja
fisttps
jge
mov
jb
mov
stos
mov
adc
add
inc
test
dec
clc
push
xchg
push
sub
sti
mov
into
lods
pushf
ret
mov
outsb
lea
ds
stos
add
dec
mov
or
call
sub
jo
mov
inc
fbstp
mov
outsb
es
add
mov
pusha
data16
mov
pop
adc
loopne
cmp
mov
sbb
and
xchg
mov
pop
stos
loope
in
loope
cmc
in
rcr
loop
stc
and
les
mov
pop
inc
lea
or
mov
aaa
mov
pop
xchg
mov
les
xlat
cld
push
and
faddl
lods
adc
mov
lret
jne
loopne
inc
clc
add
mov
fistps
mov
mov
mov
mov
outsl
mov
shrb
pop
jecxz
stos
xor
push
mov
scas
jp
addr16
xchg
movsb
scas
jmp
aam
push
int3
rcrb
mov
inc
inc
es
mov
push
cld
bound
in
dec
inc
dec
mov
add
cs
ljmp
mov
sub
lret
repnz
xor
mov
fs
stos
add
test
inc
inc
popf
add
rorl
sbb
addr16
or
push
jbe
xchg
scas
dec
mov
cmp
or
fucom
adc
inc
add
pop
hlt
mov
jle
ret
sub
lcall
cmp
mov
rorl
repz
outsb
loop
arpl
push
xor
sub
and
jp
out
enter
add
outsb
xchg
inc
cmp
push
std
pop
lock
idiv
mov
fmull
mov
in
mov
fiaddl
es
pop
mov
jecxz
xor
loopne
mov
adc
cmpsb
mov
and
cmp
push
int3
pop
or
stos
mov
xchg
jge
aaa
sub
adc
xor
insb
mov
pushl
divl
push
mov
or
cld
fwait
sub
les
mov
cmc
inc
add
ss
imul
mov
shrl
xchg
nop
rcl
mov
or
lock
and
or
sahf
hlt
cld
nop
stos
pop
lock
fs
sub
xchg
ja
or
or
dec
adc
mov
fwait
push
push
in
cld
cld
mul
and
sub
mov
or
pop
pop
fildl
sub
jo
mov
aas
xchg
jl
push
movsl
enter
xor
jg
cltd
inc
fisubrl
dec
xor
and
cmp
jb
adc
mov
push
insl
and
ljmp
pop
pop
sub
dec
mov
sbb
mov
pop
loop
or
pop
fsub
sbb
fimull
cmp
push
add
fisubrl
add
decl
xor
cli
and
push
mov
lcall
pop
mov
cmc
dec
imul
imul
push
mov
repnz
adc
loop
fs
adc
pop
add
mov
call
pushf
xlat
adc
or
mov
push
push
dec
push
pop
adc
jmp
repz
ljmp
lods
sbb
and
mulb
into
iret
cmp
inc
push
cmp
rcrb
jl
pop
lock
dec
sub
rclb
lock
out
or
mov
mov
int
push
dec
inc
cld
pop
xor
jno
ficomps
mov
std
data16
sti
and
mov
out
cmp
arpl
sub
shrb
push
mov
adc
imulb
xor
aam
ljmp
fcoms
js
js
popl
push
ljmp
fbld
or
imull
out
sub
dec
lcall
decb
pusha
ds
sbb
mov
cld
sub
fadds
mov
loop
mov
bound
inc
push
and
mov
mov
mov
sbb
fs
cli
inc
or
xor
imul
cmp
mov
out
add
cmp
call
sbb
fcmovnb
adc
es
sbb
sbb
mov
lock
mov
mov
xor
nop
and
jg
jne
dec
mov
cltd
cmp
cmpsb
cmp
dec
mov
push
jle
cs
loop
inc
xor
mov
push
pop
xor
movsb
mov
push
lods
or
std
sarl
jg
sahf
mov
mov
xorb
pop
lods
mov
jne
in
mov
mov
mov
push
mov
adc
in
adc
add
inc
clc
pop
push
cmp
cmp
dec
decl
pop
and
lea
call
mov
bound
je
jecxz
sar
inc
clc
test
xchg
lds
mov
in
dec
ret
sbb
shlb
jnp
sbb
outsb
sahf
fmull
mov
loopne
mov
push
bound
adcb
and
xchg
pushl
les
popa
xchg
shlb
sbb
out
dec
sub
add
cmp
daa
jle
inc
jg
pop
in
inc
std
jo
mov
stos
adc
push
pop
lret
push
aam
stos
push
push
or
xchg
xlat
mov
mov
pop
dec
pusha
mov
adc
std
xchg
lret
add
loop
movsl
mov
and
je
mov
add
icebp
xor
or
and
fsubrs
fisttps
push
or
lods
pop
lods
xchg
fwait
mov
and
fistpll
les
rcr
or
pushf
cs
pop
sub
add
mov
sub
int3
pop
pop
dec
frstor
mov
hlt
xchg
dec
loope
std
dec
xchg
aaa
adc
mov
jl
inc
pop
pop
stos
cli
je
xor
lret
cwtl
imul
xchg
inc
push
cld
sbb
jmp
insb
aas
pop
aam
int3
imul
jo
js
jbe
push
fidivs
addr16
fadds
sbb
cmp
icebp
cmp
jo
decl
loope
mov
cwtl
or
lret
mov
enter
push
sub
jp
push
sub
mov
sbb
pop
lds
test
stc
mov
int3
icebp
ljmp
clc
cmp
stc
aam
aam
movsl
pop
ret
inc
lret
orl
jmp
mov
adc
ficoml
sti
rcr
push
pop
cli
fucomi
add
outsb
xor
jl
hlt
repnz
push
dec
scas
in
mov
daa
or
jg
cld
cli
mov
outsl
mov
add
ds
jo
sub
or
and
js
incl
scas
mov
mov
rolb
inc
jns
test
inc
push
push
xor
cmp
out
inc
stc
mov
das
add
inc
push
jle
fisubrl
pop
es
loopne
push
arpl
push
jne
popf
xor
shlb
aaa
or
pusha
adc
mov
fsub
les
dec
shrb
js
sbb
mov
cld
mov
pushf
arpl
scas
push
pop
hlt
xor
cmp
lcall
xor
mov
cld
and
jb
in
clc
cwtl
mov
cli
push
ret
lods
sarb
fs
test
xor
aam
jb
je
sub
mov
jg
dec
sar
dec
push
mov
in
pop
lods
jg
ficomps
lret
xor
cmp
dec
mov
jns
mov
inc
nop
pop
int
xor
xchg
dec
in
sub
jg
jo
cmp
or
mov
sub
nop
scas
mov
pop
adc
mov
add
clc
outsl
mov
cmc
lea
jae
movsl
insl
jb
hlt
popf
mov
adcb
stc
lods
jl
mov
mov
push
cmpsb
ret
ja
aam
mov
pop
sarb
lock
push
aad
inc
dec
cmpsb
sbb
ja
and
dec
sbb
ja
test
cltd
add
lods
test
pushf
cmp
jbe
jne
lret
movsl
xlat
mov
std
pop
sbb
jno
fimuls
pop
pop
inc
lret
int
mov
mul
inc
or
jmp
jmp
iret
cmp
dec
fiadds
test
outsl
or
in
cmpsb
pushf
adc
pop
imul
mov
std
mov
xchg
add
sbb
mov
stos
pop
and
mov
mov
xchg
fsub
mov
js
add
rcr
inc
xor
or
pushf
xor
jmp
into
lock
add
cmp
mov
cmpsl
iret
mov
xchg
ja
jg
sub
dec
movsb
cwtl
ljmp
test
jmp
xorb
cltd
xor
and
cmp
test
shrb
inc
imul
adc
lret
insl
pop
cmp
call
stos
or
test
mov
xor
incb
leave
clc
cmp
mov
rcrb
mov
push
jb
lahf
shlb
mov
dec
rcr
dec
bound
cld
flds
add
inc
mov
je
mov
lcall
lods
jae
cmp
add
adc
incl
movsl
icebp
lock
jne
sbb
cmpsb
dec
cli
sub
lret
enter
bound
test
mov
lret
js
mov
xor
lds
inc
imul
scas
popa
pusha
xor
clc
pop
push
adc
xor
pop
aad
lret
out
xor
mov
xchg
xlat
outsb
fmull
dec
popa
pop
mov
and
inc
shlb
mov
mov
adc
xchg
loopne
scas
mov
subl
mov
xorb
into
loope
push
sub
adc
sub
mov
sbbb
mov
cmp
loope
std
mov
xchg
inc
dec
mov
js
mov
dec
adc
sub
aaa
or
cmp
rol
outsl
ds
inc
and
inc
inc
leave
lret
sbb
scas
or
lahf
cmp
mov
or
jp
daa
pop
cmp
mov
sarl
mov
jle
rclb
aam
add
addb
jbe
jecxz
enter
cltd
out
and
pop
pop
inc
std
cltd
mov
jmp
ljmp
jle
icebp
cmpsb
fucomip
stos
xor
scas
pop
xchg
xor
pushl
inc
jne
nop
inc
nop
cmp
jnp
adc
daa
gs
or
push
pop
fsubrl
pop
jmp
push
xchg
aas
insb
lds
insb
cmp
andl
sub
pop
xchg
int
or
sub
adc
cmp
stc
xchg
adc
xchg
das
cli
scas
cmpsb
scas
mov
fisubrl
fstps
mov
data16
mov
cltd
inc
dec
and
call
xor
loopne
outsl
clc
and
xor
pop
mov
gs
cld
and
push
sub
in
jmp
push
sbb
dec
scas
inc
inc
bound
lods
fdivrs
bound
repz
inc
leave
loop,pt
and
fstp
out
and
cmpb
out
xor
out
mov
mov
add
js
and
pop
cs
popf
cli
pop
cmp
inc
adc
das
and
cmc
add
clc
idivl
lcall
pop
popa
xlat
out
pop
inc
xchg
aad
in
and
rclb
push
adc
jl
adc
in
mov
int
or
lahf
mov
ret
out
clc
xor
clc
int3
cmp
sbbb
das
mov
push
imul
ds
insb
mov
cbtw
imul
ret
jg
push
pop
inc
je
ja
dec
push
jns
pop
cs
scas
movsl
pushf
mov
or
sti
adc
lcall
sbb
dec
pop
jmp
jne
or
inc
sub
push
add
push
popa
mov
loopne
lahf
mov
mov
and
jp
cmp
adc
sbb
ret
lea
or
lcall
stos
or
cmp
mov
test
inc
add
jmp
pop
pop
imulb
cmp
push
push
cmc
inc
sahf
cld
xchg
int
jmp
push
pop
imul
in
xchg
inc
or
rcll
movsb
adc
andb
cli
cmp
sbb
lcall
fistpl
subl
ljmp
mov
test
ja
inc
sbb
in
fbstp
in
lcall
cmpsl
inc
out
sahf
mov
sub
cli
jbe
pop
pop
je
mov
ljmp
jl
push
test
xlat
aas
mov
pop
fwait
adc
idiv
pop
in
jo
and
stos
and
mov
insb
in
clc
or
xchg
jp
je
fcompl
push
fwait
jle
enter
jno
movsl
call
inc
add
xchg
mov
loopne
pop
jmp
add
pop
lret
mov
xchg
or
lea
sbb
or
ret
call
fwait
cwtl
sub
adc
cs
lods
cmc
incl
bound
loop
loope
loopne
repz
es
rol
movsl
es
js
loopne
inc
ja
inc
andl
inc
std
push
std
sarb
dec
scas
aad
mov
xchg
stc
and
mov
out
push
mov
sbb
xor
sbb
sar
push
push
cmp
rcrb
cmpsl
jae
lds
scas
mov
ror
mov
add
dec
insb
fdivs
imul
pop
hlt
xchg
call
push
xchg
pop
bound
sti
test
in
inc
push
xchg
cld
inc
dec
xor
cwtl
mov
dec
add
ljmp
test
call
loop
sbb
jo
push
fwait
jmp
scas
out
and
icebp
dec
add
inc
fists
inc
int
int3
push
ret
subl
adc
iret
xchg
movsl
es
cli
stc
lods
xchg
jnp
mov
sbb
int3
and
fs
adcb
mov
std
push
add
xor
or
bound
inc
cs
clc
pop
lock
inc
mov
push
adc
shl
daa
ljmp
pop
decl
jmp
sub
mov
and
sub
and
sbb
mov
movsb
or
mov
mov
and
mov
es
pop
inc
push
or
jg
aam
std
xchg
pop
push
inc
mov
push
cmp
arpl
and
jmp
push
out
mov
mov
cld
call
out
adc
je
je
test
dec
dec
xchg
jne
fists
or
daa
pop
xchg
sbb
xor
ljmp
repnz
mov
push
mov
dec
xor
or
and
mov
ljmp
and
or
cltd
das
loop
cmp
or
ror
mov
sub
add
fdivrl
inc
pushl
dec
loopne
outsb
inc
push
sbb
pushf
mov
sahf
or
outsl
xor
adc
nop
icebp
push
jne
cld
sub
add
jns
pop
mov
jecxz
add
mov
fisttps
xorb
stos
pop
sub
cmc
jae
mov
push
ljmp
enter
add
es
mov
rol
addl
mov
push
adc
call
dec
lods
inc
pop
jns
shll
inc
in
movsl
je
xchg
in
dec
cli
icebp
pop
xchg
pop
cmp
fildl
push
mov
xor
cmc
iret
add
das
jp
clc
sub
icebp
mov
fcoml
inc
cld
cmp
sbb
jne
inc
test
push
test
pushf
rclb
aam
std
shlb
adc
movsb
sub
mov
cli
sub
and
outsl
js
icebp
push
dec
mov
adc
and
cs
inc
mov
aad
mov
rolb
cli
cmpsb
gs
inc
sbb
mov
ds
mov
lahf
mov
insb
mov
test
cmpsb
or
jae
leave
les
repnz
mov
jo
jle
ret
jecxz
mov
cli
adc
mov
and
adc
movsb
push
decl
test
aad
dec
call
xchg
in
mov
addr16
mov
rclb
cld
lods
xor
jmp
add
xor
mov
cmp
cs
aad
mov
fidivl
pop
daa
outsb
dec
ficoml
inc
mov
pop
cmpsl
mov
xlat
outsb
or
jnp
test
fisubl
ljmp
sbb
mov
ds
push
icebp
aaa
cld
xchg
mov
lods
in
aas
mov
out
add
cmp
xlat
jl
sbbl
sahf
sbb
arpl
lret
mov
movsl
ret
and
aam
mov
cmp
fbstp
outsb
pop
fimuls
push
and
nop
jle
mov
fwait
enter
pop
cmp
cmp
push
xor
mov
inc
inc
pop
xchg
out
shll
movsb
jg
clc
push
jecxz
dec
test
negb
out
sbbb
sub
jle
jg
mov
rcll
inc
sbbl
insb
ret
and
mov
fadds
cld
sub
add
inc
movsl
rcrl
lcall
push
ss
sub
test
xchg
addb
or
mov
sub
repnz
sti
or
into
repnz
clc
gs
loope
and
mov
inc
and
mov
pushl
loopne
sbb
mov
adc
add
idivb
jb
shlb
pop
dec
dec
cltd
jo
ljmp
dec
repnz
push
mov
dec
fcomps
test
mov
cwtl
inc
bound
mov
push
dec
and
shrl
mov
cld
or
dec
dec
dec
stos
jle
add
mov
dec
cmc
in
aam
sbb
and
adc
push
ret
ds
xorl
inc
test
fadd
imulb
mov
jg
test
data16
int3
push
adc
jecxz
ljmp
adc
in
xchg
addl
inc
mov
cs
dec
cltd
stos
pushf
push
imul
add
dec
mov
stos
xchg
lods
sbb
pop
jle
or
adc
loopne
jnp
add
pop
sub
repnz
jecxz
mov
std
sbb
mov
pop
imul
and
dec
sub
sub
rolb
xchg
das
ds
mov
lock
xchg
mov
jle
xchg
cld
pop
adc
data16
xchg
test
jle
push
out
pushl
jp
cmc
and
cs
sub
dec
fcom
inc
icebp
pop
inc
out
shlb
pop
mov
add
nop
ds
movsl
jp
sub
push
loopne
push
adc
pop
fcomps
movsl
mov
nop
adc
sbb
adc
xor
pop
xor
into
and
pop
mov
mov
sbb
or
push
and
clc
int3
jnp
jnp
js
inc
test
data16
in
inc
adc
jl
xor
xchg
jl
adc
jg
iret
add
icebp
xchg
shll
cli
cmp
ss
bound
jmp
dec
mov
hlt
jmp
insb
jns
xor
mov
shlb
xchg
and
mov
jg
insb
std
rcrb
call
push
jo
inc
push
pop
clc
push
jbe
repnz
fbstp
jo
xchg
mov
popa
in
jge
outsl
shr
mov
idiv
dec
sbb
lret
mov
mov
jg
or
test
inc
test
aad
ljmp
mov
dec
rol
mov
sbb
xor
dec
fcoms
lcall
nop
dec
and
shrl
inc
lock
mov
push
mov
mov
dec
adc
clc
pop
ret
je
dec
push
jb
int3
das
nop
mov
and
stc
sbb
and
pop
xchg
mov
xchg
xchg
add
and
icebp
loopne
mov
jo
pop
decb
inc
fwait
adc
and
xchg
loope
dec
enter
xor
push
xchg
aad
lret
jecxz
cld
cmc
push
ds
adcb
cmp
mov
jb
aas
or
dec
addl
sti
jge
xor
push
repnz
in
lea
orl
cld
repz
repnz
inc
dec
sbb
icebp
aad
addb
push
dec
fs
std
fisttps
je
add
sub
mov
sub
roll
mov
aad
sub
mov
push
rcrb
enter
mov
adc
mov
jp
push
hlt
es
das
incb
call
dec
mov
jne
xor
gs
cltd
rorb
clc
cs
and
or
add
pushf
mov
or
sbb
fbstp
repnz
test
cmc
lret
inc
int3
fdivp
sbb
imul
ljmp
inc
or
jo
add
shrb
insl
stos
or
sbb
es
pushl
mov
ss
scas
push
mov
mov
call
fs
scas
cmpl
test
fists
inc
outsb
add
in
stos
loop
pop
popa
js
iret
dec
cld
scas
dec
pushf
xchg
cwtl
aad
push
fwait
pop
rorb
mov
xor
loope
loopne
inc
test
jle
cltd
jns
jl
les
adc
sub
push
or
or
es
popf
lods
or
incl
sub
cmpsb
rorl
fcomp
movsb
mov
push
int3
jno
ret
mov
fwait
pop
push
jmp
add
pusha
push
icebp
pop
icebp
add
ror
mov
push
cmpsl
shll
test
push
fdivs
xor
int3
jo
add
and
and
sub
pop
or
ss
jl
ffree
jbe
mov
test
sub
mov
stos
fdivrl
nop
and
sbb
outsl
movsb
xchg
orb
js
pop
add
ret
test
scas
mov
incb
enter
pop
sbb
insb
stos
clc
jg
repz
jp
adc
int
lret
jmp
out
sbb
fnstenv
xchg
jmp
lret
notl
add
rol
jmp
out
stos
and
pop
mov
jno
inc
sarl
dec
pop
data16
leave
cwtl
clc
cs
push
outsb
test
jns
ret
jmp
sbb
pop
adc
pop
loope
incl
jecxz
sbb
ss
stos
out
cmp
push
inc
pop
test
rcr
mov
add
enter
jmp
push
shl
push
or
jbe
cs
xor
test
decl
sub
mov
jno
xchg
ret
lret
out
mov
mov
inc
jecxz
pop
xor
dec
loop
cmpsb
add
jg
repnz
shrb
pushl
jl
mov
add
clc
add
fsubs
in
aas
insb
dec
and
fadd
lret
inc
test
pop
fnstenv
js
into
hlt
or
cmp
sbb
dec
into
pop
mov
sbb
sarl
fisubl
loopne
xchg
sarb
xchg
addb
push
pop
mov
push
hlt
lret
mov
push
sahf
mov
xchg
push
mov
aas
test
pop
ret
add
sbbb
sbb
outsb
pop
icebp
das
sub
push
push
xlat
sbbb
ret
ljmp
fcoms
pop
adc
pusha
xor
in
cwtl
ret
pop
lds
and
xor
jnp
jbe
xor
lods
pop
xor
mov
lds
mov
test
pop
stos
lahf
jmp
add
push
inc
es
pop
cwtl
aaa
mov
jmp
add
mov
stos
pop
mov
adc
jg
lods
xor
out
scas
loop
loope
and
clc
aaa
xchg
lods
xchg
das
mov
mov
std
cmpsl
mov
jnp
mov
popa
lods
lea
jg
fbld
jge,pt
testb
fcompl
arpl
sbb
xor
shlb
xchg
out
dec
outsb
push
enter
jnp
ficoms
inc
and
jbe
stos
imul
lea
mov
mov
and
pop
sub
add
mov
xor
in
sbb
dec
loop
dec
jmp
adc
imul
mov
or
pushl
mov
jno
xor
cmp
idivl
inc
lock
mull
ss
repz
insl
or
xchg
scas
push
into
mov
adc
outsb
int3
cmp
insb
xchg
bound
xchg
pop
clc
jecxz
cmovge
mov
mov
push
mov
ljmp
push
cmp
xor
push
mov
pop
pop
movsb
sub
filds
and
out
pop
mull
lahf
hlt
mov
stos
pop
mov
adcl
out
add
lcall
or
out
mov
xchg
inc
test
add
add
pop
sub
mov
mov
inc
sahf
into
dec
in
xor
add
scas
mov
xlat
into
je
or
mov
stos
filds
push
sbb
pop
scas
inc
rolb
decl
adc
cwtl
mov
dec
popf
out
fwait
lds
cwtl
clc
mov
out
lds
jmp
sbb
mov
pop
mov
pushf
pop
bound
pop
add
cmp
outsl
fs
inc
lods
fwait
ljmp
fwait
and
xlat
mov
addr16
push
out
cltd
push
push
pop
add
or
mov
xor
rclb
dec
icebp
insl
xor
outsl
out
mov
loop
or
ljmp
cltd
mov
scas
mov
xor
xor
aam
cmp
push
sbb
or
ss
push
lds
xlat
and
js
scas
hlt
or
and
mov
lock
push
mov
pop
in
xchg
add
and
fldt
xchg
pop
lret
test
dec
clc
das
lock
jmp
and
push
mov
push
jae
xor
clc
and
xchg
sti
fadd
mov
jo
ja
popf
push
or
ret
test
lret
or
pop
sti
aaa
pop
cmc
imul
or
sbb
hlt
out
sbb
lcall
push
pushf
inc
adc
shlb
adc
xchg
or
mov
fstpt
outsb
xchg
movsb
adc
cli
in
push
adc
nop
add
lods
cmp
insl
mov
decb
mov
enter
xchg
idivb
mov
xchg
jnp
test
jo
outsl
cmp
call
pop
sbb
sahf
shl
ds
cmp
int
not
push
faddl
bound
pusha
xchg
dec
rorb
push
and
adc
pushf
lock
out
je
and
dec
clc
sbb
mov
xchg
rcrl
xchg
lcall
push
clc
push
mov
ret
adc
sub
mov
pushl
pop
pop
cmpsl
adc
xchg
int
sbb
add
xchg
inc
inc
pop
mov
jle
mov
push
fisttpll
or
add
subl
xor
mov
shl
psrad
pushf
or
dec
xchg
pop
add
je
push
scas
js
dec
ds
mov
out
ret
push
mov
bound
hlt
jle
lahf
incl
adc
insl
cmpsb
push
push
push
or
push
pop
les
cmpsb
sbb
cld
and
cwtl
sub
mov
int
jbe
add
mov
adc
imulb
adc
popa
cld
ja
mov
repnz
jbe
lea
jle
cmc
push
lahf
jmp
dec
movsb
add
fcomip
popf
and
push
jl
mov
xor
or
cli
mov
push
mov
sarl
dec
adc
pop
stc
popw
jl
lea
imul
adc
es
ret
pop
loope
enter
gs
fisttps
hlt
push
daa
rcll
jecxz
sub
andb
cli
jns
aad
cmp
push
mov
inc
pop
mov
lcall
add
hlt
mov
data16
mov
cmpsl
add
mov
test
xor
mov
aas
xchg
mov
inc
cmp
or
pusha
or
in
mov
int
aam
pop
jne
add
test
jns
mov
cmp
add
mov
lahf
dec
pushf
xchg
fidivrl
mov
jo
sub
cmp
out
mov
fprem
mov
sbb
std
xchg
cltd
clc
mov
imul
sub
mov
jmp
sub
mov
xchg
pop
push
mov
loopne
mov
clc
clc
xchg
push
mov
and
and
pop
test
lret
xchg
clc
mov
loop
and
movsl
lock
into
pop
movsb
pusha
xchg
ret
aam
push
adc
gs
sbb
mov
mov
gs
or
mov
repnz
rcrb
loopne
lods
mov
test
ljmp
sub
ss
mov
jns
or
xchg
movsl
out
jp
loope
loope
sbb
xor
jmp
jne
clc
xor
rolb
aas
ljmp
ffreep
out
jno
psubd
test
repnz
mov
decl
cmp
mov
lods
cltd
xchg
jp
cli
xorl
or
sub
fimuls
adc
mov
dec
repnz
jecxz
add
mov
mov
fidivs
sub
cltd
stos
mov
test
sbb
adc
xchg
pop
mov
cmp
inc
inc
and
aaa
fidivrs
test
ret
xor
pop
rolb
mov
int
sub
lcall
pop
xlat
cmp
adc
push
xlat
xor
push
lret
lds
cmpsb
in
sbb
rcll
jbe
xor
aam
inc
add
xor
push
dec
lods
and
sar
mov
mov
push
cmpsb
hlt
inc
test
lods
push
mov
into
xor
jle
xlat
mov
test
dec
mov
adc
std
push
or
clc
push
int
jl
and
lods
sbb
jle
mov
xor
addr16
jp
push
call
es
xor
jne
lcall
repnz
aad
daa
jbe
inc
or
dec
ljmp
push
dec
lret
push
xchg
in
cld
jg
or
fld
test
pop
sahf
out
xor
shlb
inc
dec
add
icebp
gs
into
dec
std
scas
mov
push
arpl
add
int3
int3
iret
lcall
mov
mov
icebp
das
xor
dec
je
icebp
mov
outsl
mov
mov
repnz
adc
mov
mov
jge
xor
imul
cmc
inc
sub
ds
filds
or
push
sub
sub
les
jg
adc
clc
shlb
or
sahf
and
xor
sub
sbb
or
or
xor
js
dec
stos
add
mov
mulb
aas
das
movsb
cmp
adc
jecxz
jmp
push
jp
cmc
dec
sar
or
fists
decl
mov
repnz
xchg
mov
incb
bound
mov
shrb
mov
fiaddl
loop
fstpt
mov
jmp
aam
pushl
xchg
ret
sti
xchg
jne
push
ss
outsb
cmp
push
sbb
add
dec
jg
movsl
mov
pop
pop
xchg
dec
cmp
hlt
sub
or
jns
pop
jno
xchg
or
lahf
xchg
jmp
fsubrs
jno
ds
cli
xor
js
shll
xor
pusha
aam
add
lds
pop
sbb
lret
leave
stc
push
rcrb
loope
push
mov
jl
push
add
push
lock
enter
je
lods
and
dec
jge
fldcw
push
out
iret
pop
push
jmp
lods
push
lcall
xor
movsb
lock
loopne
jno
pop
out
shr
aas
std
ret
mov
mov
pushf
pop
and
cmp
in
jl
add
data16
pop
clc
and
xchg
loope
insb
lods
jecxz
lock
adc
repz
and
inc
jmp
inc
test
cmp
imul
ljmp
jp
in
mov
scas
push
mov
sbb
rcrb
in
pop
xor
rcrb
cli
jmp
inc
pushf
mov
ficoml
dec
test
jmp
jg
mov
ds
mov
adc
push
mov
lcall
fs
inc
test
adcl
fmuls
mov
jg
aaa
int3
xchg
mov
loop
into
cmpsl
fsubr
lret
movsb
or
mov
test
loope
adc
xorb
sarb
add
sub
rclb
cmp
fs
add
pop
lods
mov
sub
mov
loopne
pop
mov
mov
out
sahf
sbb
leave
pop
stos
mov
imul
push
into
out
inc
cmp
outsl
push
add
pusha
outsb
jmp
push
xchg
push
adc
aas
fs
in
mov
and
jecxz
inc
aam
dec
cmc
adc
add
imul
cmp
xchg
imul
inc
lock
xchg
jbe
sarb
or
cmp
into
rol
mov
fdivr
scas
inc
push
das
int
dec
aad
or
movsb
jb
das
js
in
push
sbb
jo
fistpll
and
xor
mov
mov
push
jp
sbb
sub
sub
xchg
addb
sbb
pop
mov
test
ror
push
rorl
inc
pop
icebp
ds
push
dec
cmp
stc
cmpsb
mov
rclb
hlt
subb
inc
push
sub
mov
add
cmc
sbb
aaa
aam
or
insl
xor
sbb
mov
jg
adc
lock
clc
mov
cmp
ret
into
stos
xchg
cli
or
outsl
sbb
jle
sti
repz
imul
std
pop
lock
pop
and
sub
bound
or
jmp
dec
loop
dec
and
pop
lea
leave
neg
mov
jp
ss
nop
pop
jle
dec
xorb
je
xor
les
sub
ljmp
sarb
cmpsb
push
sbb
mov
inc
and
int
xor
push
inc
xor
push
call
movsb
scas
jge
dec
sub
adc
outsb
insb
lret
xor
pop
pop
cmp
jl
and
mov
adc
jno
test
jnp
mov
xchg
ret
enter
sub
fisttpll
pop
cmc
inc
arpl
adc
sbbb
fstl
pop
rclb
mov
aaa
test
mov
xchg
sbb
cld
lret
mov
sar
inc
mov
mov
pop
dec
js
dec
andb
mov
aam
jge
imul
jo
cmp
iret
push
jp
ja
inc
add
push
call
cmpb
es
and
scas
ss
jmp
ja
cld
pop
pop
inc
je
adc
pop
nop
out
mov
sarb
js
shll
dec
mov
divb
jmp
inc
in
ss
fucom
cwtl
ret
adc
call
mov
xlat
pop
loopne
jns
ja
push
loopne
hlt
pusha
jecxz
aam
xor
movsl
imul
and
fs
fstl
xor
scas
pop
push
movsb
push
fs
aas
dec
outsl
dec
xor
sbb
and
and
and
movsb
leave
notb
sub
dec
or
add
adc
test
mov
mov
push
fstpl
pushf
mov
inc
inc
add
adc
rolb
mov
cmovp
xchg
pop
or
daa
mov
xchg
out
dec
push
mov
push
or
mov
add
loopne
mov
push
popa
out
cmc
decl
xorl
imull
shll
les
leave
outsb
add
incl
sti
fisubl
push
xlat
shrd
cld
mov
test
jbe
dec
jl
rcr
out
vphadduwd
stc
lcall
jg
cmc
ds
cld
mov
add
aaa
sub
or
mov
push
mov
xchg
push
addb
insb
int
ret
jg
xor
lcall
ja
gs
push
repnz
pop
incl
dec
call
inc
arpl
incb
cmp
push
push
aas
jne
jnp
adc
add
xchg
xchg
aas
ds
push
mov
jp
sbb
jbe
enter
sbb
fildll
cmp
mov
test
push
lcall
sti
fmuls
jg
cmp
push
js
jne
or
call
mov
push
popa
mov
stos
jmp
xor
cmpsl
scas
es
cmp
adc
lock
in
mov
sub
dec
les
jecxz
out
and
stos
push
inc
leave
mov
nop
nop
jae
sti
in
mov
sub
add
mov
sub
dec
mov
inc
jmp
imul
xor
cltd
inc
les
divb
loope
inc
lcall
add
dec
dec
jo
leave
jecxz
mov
pop
add
jg
sbb
out
sbb
fcmovne
aas
data16
lea
shlb
sub
ds
sub
leave
stos
mov
enter
mov
jl
mov
push
sarb
xchg
pushl
pop
mov
cltd
sub
ret
jecxz
dec
ret
cmp
mov
adc
rclb
rol
mov
xchg
stos
sbb
sbb
fists
adc
cli
sub
mov
mov
jge
pop
lock
or
add
adc
fbstp
dec
int
and
pop
arpl
add
addr16
adcb
pop
scas
lahf
mov
sbb
imul
cmp
inc
lahf
jl
popa
std
ljmp
sarb
fsub
iret
in
adc
daa
aad
push
mov
out
nop
mov
scas
pop
jae
jmp
clc
scas
and
pop
push
daa
ja
push
mov
clc
imul
push
cmp
fs
xchg
push
add
xchg
adc
push
call
inc
int3
pop
jo
in
mov
pop
dec
xor
sahf
xor
test
ret
lds
jecxz
mov
shll
clc
sar
adc
mov
and
rorl
std
jae
pop
inc
ficoml
jge
jb
jg
sbb
mov
mov
bnd
inc
mov
dec
pop
lods
pop
in
pop
xor
push
out
sarb
inc
cmp
inc
pushf
scas
and
test
mov
cli
cli
inc
ja
push
mov
cmp
es
xor
mov
add
jo
sub
or
jb
mov
decb
or
bound
in
pop
test
loop
mov
add
pop
mov
mov
add
leave
add
dec
movb
and
sbb
hlt
push
les
xor
popf
inc
add
xchg
test
adc
dec
rolb
rcrb
shlb
jp
mov
mov
jbe
jecxz
leave
int3
clc
loop
or
pop
xchg
mov
mov
nop
lock
pop
jg
xchg
jo
lods
jb
mov
clc
int3
or
incb
sbb
mov
sub
xor
lret
mov
ds
stc
pushf
jl
mov
nop
test
adc
pop
pop
push
push
xchg
xor
ljmp
cwtl
dec
std
fsubrs
stc
in
sbb
rorl
scas
inc
jnp
nop
sbb
loop
incl
decl
sti
xor
js
daa
cld
sub
mov
mov
adc
dec
xor
jmp
or
cwtl
push
cmc
dec
lret
sar
iret
push
insb
insb
sbb
add
cld
pop
pushf
cld
ljmp
aam
rclb
push
fldt
call
and
mov
and
sbb
ljmp
dec
push
add
ljmp
mov
mov
inc
mov
sbb
mov
notl
dec
cli
inc
dec
fwait
jle
sbb
lock
pop
insb
pop
push
enter
cli
xchg
inc
ds
lret
push
shr
cmpsl
jg
adc
push
dec
push
fiadds
xchg
sbb
or
mov
jmp
jmp
ds
dec
aad
movsb
decb
jne
insl
in
aas
stc
in
sbb
popa
popa
fsubrl
std
rcrb
out
lret
mov
es
cli
ret
adc
push
into
popa
jnp
rcrl
stos
adcb
pop
in
sub
jg
mov
subl
movsl
bound
aam
loopne
pop
jg
xchg
push
scas
xchg
fstl
inc
rolb
aaa
push
push
inc
std
jmp
aam
or
sarb
push
xor
fidivs
add
sbb
clc
sbb
pop
xchg
push
push
iret
outsl
adc
jp
scas
xchg
push
fldt
dec
add
mov
push
sub
cltd
and
mov
out
lods
outsl
rorb
icebp
loopne
shl
rcll
add
lock
pop
popf
ret
jmp
roll
loope
pop
mov
cmp
imul
sti
in
mov
dec
je
fiaddl
cmc
fisttpl
sbb
hlt
mov
pop
add
fsubp
stos
pop
mov
fbld
loope
cli
jb
sbb
fisubrs
dec
outsl
adc
sbbl
aaa
cld
mov
hlt
fdivl
jns
out
and
jecxz
lret
mov
clc
mov
xchg
rcrl
inc
mov
movsl
dec
test
in
add
add
mov
mov
shrl
jecxz
pop
pop
dec
adc
lcall
or
fsubrs
ds
xchg
aam
dec
add
or
pushf
push
stc
stc
pop
stos
push
insl
shl
mov
pop
jb
inc
mov
icebp
stos
cld
rolb
ss
pusha
in
iret
pop
lgs
xchg
mov
push
clc
lea
outsl
mov
sbb
stc
or
dec
and
or
shlb
pop
add
pop
cld
pushl
pop
ds
ret
rol
mov
in
xlat
imul
test
std
pop
loope
xor
les
xchg
test
inc
outsl
mov
inc
test
mov
pop
test
scas
ret
jns
mov
aad
call
jl
jnp
and
pop
jl
aad
and
xor
lods
mov
iret
jl
cmp
sub
jg
in
scas
mov
push
cmpsb
pop
movsl
pushl
mov
pop
arpl
mov
das
xor
jle
fcompl
inc
mov
fists
fsts
test
lock
mov
mov
test
rcrl
xchg
rol
cmp
dec
jp
push
sbb
popa
cs
and
and
in
push
jl
imul
outsb
lret
cli
push
adc
shl
fwait
and
je,pn
inc
aad
loopne
jmp
or
mov
pop
adcb
pop
test
mov
jecxz
pop
andl
adc
mov
test
and
cmp
mov
xor
and
imul
adc
push
push
sub
push
fidivrl
xor
sub
inc
jo
aam
lcall
lods
and
fisttps
jbe
or
adc
and
in
and
pop
hlt
lea
daa
lret
inc
cmp
mov
sbb
inc
mov
addr16
mov
lea
test
mov
scas
loope
add
in
sbb
enter
jo
mov
mov
jl
mov
cs
jno
sub
xorb
push
imul
pusha
std
into
and
xchg
and
out
int3
xchg
aaa
jl
dec
mov
jle
jl
out
mov
adc
cmp
mov
fbstp
and
jae
fwait
sub
cltd
adc
inc
std
mov
add
jae
mov
test
imul
lea
lods
jle
fwait
sbb
jnp
mov
mov
xchg
inc
mov
add
lcall
es
mov
aad
fmuls
mov
es
or
and
rol
sbb
cld
or
mov
mov
cld
das
mov
sbb
cmp
mov
stos
mov
sub
or
sahf
sub
or
jle
sub
in
xchg
cmp
sub
cli
push
aam
lods
cmp
enter
clc
mov
rcrb
mov
arpl
or
jmp
xor
push
dec
jl
fsubrp
clc
int
or
ret
jne
mov
push
out
or
pop
sub
mov
test
xchg
cmp
lock
add
bound
lods
sar
shrb
and
dec
inc
in
mov
and
test
jmp
push
adc
add
stos
sahf
push
dec
mov
in
fbstp
fldl
push
in
adc
sbb
ljmp
add
jmp
loop
test
out
je
sbb
sub
ljmp
push
or
cs
or
adc
cmp
addr16
fbstp
mov
mov
cmc
ja
incb
test
sub
nop
add
rcrb
sub
test
pop
mov
push
bnd
pop
mov
ret
jnp
jecxz
inc
mov
scas
loop
add
fstps
cmp
data16
push
mov
loopne
lock
ds
jg
sbb
orl
out
lret
pop
stos
fiaddl
cmp
xchg
cmp
js
sbb
xchg
je
outsb
ss
adc
jp
dec
dec
movsw
scas
adc
daa
gs
mov
mov
push
push
fwait
and
xor
jl
sbb
int3
sub
in
push
jns
inc
and
mov
push
add
and
subb
fstpl
add
and
fisttps
or
xchg
and
scas
clc
xchg
into
cmpsb
fcmovb
imul
xchg
pop
xchg
hlt
outsl
cli
jg
testl
xchg
xor
outsb
clc
nop
mov
js
test
scas
mov
xchg
and
jge
loopne
fsubl
ret
je
imul
rol
push
jo
jbe
nop
ljmp
add
mov
aas
mov
sub
pop
gs
jmp
test
outsb
les
pop
fdivrl
out
sub
pop
loop
pop
inc
cli
or
lods
enter
nop
ds
repnz
cmp
loopne
sbb
mov
fwait
out
push
add
or
pop
push
mov
and
je
in
mov
and
and
je
or
lock
adc
cwtl
ja
roll
std
arpl
out
test
adcl
inc
xor
mov
shlb
push
cmc
out
xchg
dec
mov
add
lahf
call
les
jnp
andb
in
xor
decl
ss
mov
add
mov
pop
sub
mov
mov
add
fcmovnu
xchg
xchg
sbb
sub
jbe
cmpsb
pusha
std
insb
push
aad
xchg
jb
mov
ja
pop
mov
mul
aaa
push
inc
push
call
fldl
call
xor
adc
or
inc
mulb
jle
fcmovnb
add
fsubp
fadds
clc
mov
add
xor
scas
xlat
and
test
cmp
dec
stos
push
mov
pop
fists
leave
mov
fdivs
ss
jl
sti
push
testb
cwtl
or
pop
sub
inc
or
insl
or
mov
es
cli
mov
clc
xchg
xchg
mov
loop
mov
cmpsl
outsl
pop
leave
pop
xor
stos
jl
cld
inc
jmp
xchg
adc
xor
loope
pop
inc
fdiv
sub
test
push
sub
push
add
sub
imul
jb
adc
jmp
orl
jmp
cmp
popf
fisubrl
aam
fcomps
sub
xor
xchg
inc
mov
inc
addr16
mov
test
xchg
lds
xchg
jns
add
aam
mov
andl
dec
adc
mov
cltd
outsl
lret
cmp
fsubrs
cli
pop
or
pop
xor
jmp
or
fldt
add
sub
incl
movl
adc
inc
decl
ficomps
test
shlb
jbe
or
sarb
pop
xchg
es
pusha
pop
dec
shlb
stos
call
scas
shll
or
sarb
ja
xor
testb
lret
test
in
leave
inc
test
add
cli
ss
mov
pop
mov
cli
clc
xchg
cmp
cmp
rclb
push
xchg
or
mov
ss
mov
add
cs
movsl
subb
adc
mov
adc
inc
mov
int
cmpsb
bound
popa
ljmp
int
decb
stos
inc
into
pusha
popa
add
sti
nop
mov
decl
jno
fnstsw
jmp
in
mov
popa
mov
or
movsb
aaa
xlat
pushl
pushf
scas
imul
cmpsb
into
out
in
arpl
and
negb
out
sub
mov
ret
jmp
je
adc
icebp
add
call
arpl
push
movsb
ljmp
dec
sbb
sbb
fcomip
les
aaa
insl
adc
js
mov
ja
push
xor
cmpsl
jle
add
roll
add
cld
lcall
js
cmp
sub
sub
adc
xlat
xor
mov
mov
jl
jnp
rcl
mov
lahf
inc
and
mov
cmpb
cmp
outsb
xor
cltd
add
insl
mov
add
orl
mov
nop
shll
or
addl
push
call
and
mov
insb
jg
xchg
adc
repz
jo
jae
pop
inc
and
sbb
pushf
dec
insb
loope
cli
in
dec
sub
inc
mov
and
cli
stos
orl
out
xchg
insb
sub
clc
nop
mov
xchg
test
sub
or
ret
mov
mov
pop
sub
lcall
add
ret
sar
push
cmp
adc
inc
cmp
pop
stos
xor
and
incb
xchg
and
cli
ljmp
add
in
pop
add
into
pop
adc
test
mov
mov
inc
inc
and
sbb
mov
mov
aas
mov
jae
cmpb
push
cmc
int
push
pop
inc
scas
sbb
adc
loope
inc
xchg
icebp
dec
lcall
and
cmpsb
push
pop
xchg
outsl
out
xchg
jo
test
addr16
dec
jecxz
xor
loopne
xor
aaa
jae
rcrl
call
scas
popl
dec
mov
mov
lods
mov
andl
or
hlt
pusha
fldenv
pop
add
add
sub
mov
and
sub
push
out
les
mov
jnp
cmpl
jle
inc
imul
mov
push
sbb
pop
or
cmp
cmp
sub
and
dec
cmpsb
or
sub
in
cmc
or
add
and
call
dec
mov
push
ja
mov
dec
push
mov
call
or
jp
fsubrs
push
push
inc
ljmp
adc
jl
adc
sub
aam
push
dec
in
adc
imul
add
push
std
fildll
insb
xor
test
mov
and
mov
pop
cli
add
and
mov
ror
out
xor
add
push
cmpsb
test
lock
dec
sbb
mov
push
or
in
dec
std
jg
testb
dec
and
ss
cmp
sbb
add
sub
fbstp
or
imul
popf
cmp
gs
jo
adc
fists
mov
int3
out
les
xor
pop
pushl
mov
add
ja
pop
jo
bound
mov
xor
in
add
pushf
test
xor
fldl
daa
and
push
data16
fnstcw
add
mov
or
cli
and
std
lea
add
xchg
sar
jbe
into
jge
and
cld
pop
lock
std
sarb
sbb
jecxz
lahf
xor
mov
pop
in
and
clc
test
inc
jb
sub
mov
push
rcrl
push
aam
out
mov
lret
dec
sbb
push
aas
cmp
or
jb
into
inc
dec
gs
pop
jo
xlat
jmp
push
clc
mov
in
sbb
or
mov
mov
sub
jmp
xchg
decl
jae
or
xchg
aam
outsl
in
push
xchg
nop
ss
jns
add
push
ja
ret
xchg
sti
and
mov
xor
xor
fsub
call
loopne
cmp
adc
iret
pop
stc
cld
stos
cmp
inc
loopne
test
mov
stc
lret
xor
incl
out
and
daa
add
fsubrs
mov
fwait
addr16
mov
add
add
outsl
imul
push
popf
mov
push
fwait
rorl
sbb
push
jb
and
lea
lods
loopne
call
icebp
insb
fisubrs
setne
incl
xchg
mov
inc
lods
jae
dec
rolb
iret
lods
das
xchg
lds
stos
push
pop
push
cmp
push
fwait
mov
and
test
jl
std
jg
fwait
repnz
xchg
int3
mov
mov
cs
into
push
lret
lea
or
push
mov
mov
cmp
sbb
mov
sbb
scas
clc
cmp
lds
or
jns
scas
lea
lea
cs
adc
pop
shlb
sbb
mov
push
call
scas
fucompp
clc
push
jle
xor
out
mov
adc
addb
jmp
push
inc
cwtl
sub
cs
sub
mov
clc
push
mov
push
loopne
fstps
sarl
jne
jge
test
js
addr16
adc
cmp
and
mov
cs
push
inc
fnstcw
and
adc
add
jg
fiadds
add
or
enter
pop
inc
mov
test
cltd
mov
fcmovu
and
mov
pop
cld
fstp
mov
clc
xor
jg
bnd
sbb
mov
pop
push
push
fisttps
fldenv
cwtl
iret
xchg
js
mov
stos
ss
in
ret
stos
and
adc
add
jne
test
push
dec
fcomps
mulb
sar
push
lods
pusha
les
out
iret
add
push
lcall
xchg
or
add
xlat
xchg
pop
dec
incl
xor
cld
add
dec
lret
sti
jb
jae
test
es
sbb
test
and
vpcomuq
xor
add
inc
sub
in
inc
test
push
mov
hlt
shlb
and
xor
outsb
jmp
ret
jp
sub
mov
mov
push
rolb
push
jl
shrb
push
pusha
lcall
rolb
inc
insb
sbb
js
adcl
sbb
loop
add
mov
mov
mov
mov
arpl
sub
jmp
pop
mov
mov
cmpsb
ret
cli
movsb
or
es
sbb
jb
xchg
push
pop
cs
call
sub
aam
dec
mov
dec
icebp
mov
ljmp
rcrb
shll
or
fdivrs
fld
mov
cld
sub
into
mov
inc
mov
bound
das
andl
inc
mov
cmp
lods
xchg
xchg
cmpsl
incl
jno
cmp
test
xor
mov
pop
outsb
cmpb
cmp
insb
push
mov
clc
jge
xchg
and
fwait
nop
mov
ficomps
push
outsb
xchg
push
stos
shlb
ds
jno
rclb
push
pop
das
add
or
fimull
hlt
pop
jne
out
mov
mov
or
jl
lods
pop
pop
pop
test
fisubs
sub
xchg
lock
xchg
sbb
cmpsl
scas
mov
jl
add
mov
adc
adc
cmp
cmp
mov
pop
mov
fwait
orb
imull
cld
and
aad
xchg
sbb
lea
cmp
mov
mov
inc
fdivp
dec
mov
imul
sub
stos
outsb
sbb
push
rcl
sbbb
lock
inc
inc
outsb
jg
mov
or
inc
idivb
sub
popf
lods
dec
rcl
and
movb
mov
test
jo
sbb
jbe
cmp
aas
inc
mov
mov
and
push
popa
mov
jg
push
sub
aas
pop
push
test
and
clc
std
add
mov
inc
call
or
add
das
mov
pop
imul
xchg
sub
aaa
fsts
sbb
and
fwait
repz
ljmp
push
movsb
scas
test
lock
pop
and
mov
rorb
or
les
and
sbb
pushl
sar
adc
clc
ljmp
mov
mov
xchg
rolb
jecxz
movsl
mov
cmp
sub
push
xor
add
outsl
xor
or
cltd
jbe
dec
xchg
push
pop
lahf
pop
mov
jns
inc
fs
or
testb
jmp
mov
jbe,pn
int
pop
mov
aam
push
ret
mov
xor
mov
testb
sbb
leave
bswap
repnz
jno
jmp
sbb
mov
ljmp
cmp
cli
in
movsb
pop
dec
lret
cwtl
dec
addr16
and
dec
in
les
push
imul
pusha
scas
cli
mov
xchg
add
int
or
mov
andb
decl
call
jmp
and
insb
push
adc
adc
mov
jmp
dec
stc
push
mov
jb
cli
cmp
push
loopne
xchg
outsb
sbb
or
dec
push
cmpsl
mov
cld
ljmp
pushf
ss
sarb
xchg
filds
add
jbe
push
xchg
mov
int
cld
fstpt
dec
jg
cmp
movsl
in
push
dec
cmp
add
xchg
ss
aas
adc
ds
dec
and
loopne
pop
jge
movsl
and
jbe
lds
or
xchg
leave
push
mov
dec
push
in
pop
lcall
xchg
or
outsb
sahf
in
sbb
aas
pushf
les
mov
pop
std
jmp
rcll
negb
mov
push
sbb
jl
incb
pop
or
jb
dec
fistl
jmp
jo
add
or
jnp
lahf
jmp
lahf
ror
loop
movsl
jge
add
inc
push
subl
stos
lret
icebp
pop
mov
fidivrl
jg
xor
dec
mov
dec
enter
aaa
mov
pushf
jle
xchg
subl
mov
into
decb
adc
mov
or
movsb
jo
jbe
jmp
sbb
sarb
sti
testb
cld
pusha
jge
mov
xor
fwait
cli
jbe
bound
jbe
int3
or
stos
inc
sub
xor
shll
test
mov
add
loope
or
add
adc
lcall
jmp
imul
movsw
xchg
lock
inc
cmpsb
outsl
pop
cmp
mov
roll
lret
decb
and
jns
notl
push
aam
push
jg
ljmp
lret
fs
jmp
pop
into
jecxz
cld
outsb
cmp
cwtl
inc
xlat
add
mov
pop
pop
test
mov
fnstcw
std
add
into
imul
aaa
inc
or
leave
inc
nop
push
cmp
leave
fnstcw
lea
adcb
jbe
xchg
or
imul
inc
mov
ret
adc
pushf
pop
fisubrl
sbb
or
popa
andb
mov
es
call
and
into
push
sub
and
mov
dec
sbbb
jg
cwtl
mov
mov
movsb
mov
lock
aam
sub
fcmovnbe
mov
dec
sub
jge
adc
xchg
std
adc
outsb
add
sub
dec
add
jb
out
daa
mov
ljmp
dec
neg
ret
lcall
dec
in
call
mov
dec
pop
mov
mov
in
fiadds
mov
mov
or
dec
cmp
inc
and
insl
sar
or
je
xchg
add
loopne
jno
js
push
cmpsb
mov
std
jmp
das
sub
cmp
fcmovnb
test
loop
ja
icebp
frstor
xchg
mov
popf
hlt
mov
clc
inc
std
inc
cld
cmp
push
data16
jmp
mov
fcmovne
adc
ljmp
xlat
xor
xor
and
or
mov
loope
cmpsl
lock
mov
mov
mov
shll
pushl
push
mov
rcl
push
hlt
cmpsb
pop
nop
ss
cmpsb
adc
pop
and
lock
imul
out
or
das
and
add
xchg
mov
and
pop
jbe
enter
mov
cmc
push
loop
mov
fiaddl
outsb
stos
inc
sub
aam
mov
push
mov
loope
mov
push
fnsave
stos
and
or
imul
push
in
lahf
dec
sub
pushf
test
add
adc
sarb
dec
adc
shlb
adc
dec
xlat
jo
loopne
inc
loopne
cmp
sbb
clc
call
insb
jb
dec
cmc
test
sbb
pop
inc
ja
test
xchg
xchg
imul
lret
add
inc
pop
sub
sbb
inc
loopne
pushf
pop
ss
test
push
cwtl
outsb
int
ss
in
fidivrs
lock
das
dec
nop
fsubs
aam
or
adc
mov
xchg
xor
jg
dec
push
xchg
dec
xor
dec
fwait
adc
jmp
addr16
jne
jle
ror
xchg
sub
pop
push
pop
jae
fistps
pop
push
mov
subb
scas
notl
adc
sub
mov
pusha
fiaddl
nop
out
dec
push
inc
aaa
repnz
shr
push
lcall
jo
subb
jbe
jle
dec
push
mov
push
mov
lcall
or
dec
dec
sbb
or
mov
sarl
dec
and
mov
push
mov
adc
push
jne
mov
hlt
jg
xchg
sub
mov
call
incl
push
negl
pop
or
xchg
dec
iret
clc
inc
sbb
and
popa
imul
sub
decl
and
sub
dec
cmp
imul
int3
pop
mov
mov
std
sbb
mov
gs
js
fadd
inc
or
dec
and
mov
test
mov
lods
test
aaa
subl
out
test
sbb
xchg
lahf
dec
in
xchg
jg
push
test
push
push
jmp
js
inc
test
xchg
lock
or
fs
hlt
xor
jmp
adc
les
mov
cmp
mov
or
mov
jmp
xchg
jb
daa
cmp
pop
push
movsb
mov
dec
dec
sahf
movsl
fs
cld
dec
in
test
jb
je
insb
stos
iret
outsl
dec
mov
shlb
xchg
push
lods
std
ja
ret
push
sahf
xor
pop
fld
push
in
mov
fdivl
fisubs
ret
clc
fsqrt
sbb
mov
add
sub
lcall
cli
jns
and
scas
and
jbe
xchg
xor
push
push
dec
xor
cmc
fdivr
push
rolb
imul
dec
jmp
mov
inc
lret
xchg
jmp
add
or
pop
jmp
and
jo
hlt
cltd
je
push
inc
sarb
test
addr16
add
sub
dec
jnp
jno
push
call
inc
sbbb
and
cld
lret
mov
mov
into
ljmp
jmp
xchg
jmp
jnp
fimuls
mov
fcmovnb
inc
nop
scas
push
mov
lods
notl
xchg
cli
mov
push
sarb
pop
jl
sbb
mov
mov
or
daa
dec
fsts
xchg
loop
jl
lea
push
inc
repnz
cmp
jg
push
pop
les
add
repnz
push
call
add
adc
into
ret
cwtl
pop
loop
lret
loop
push
xor
pop
and
test
js
shl
mov
push
je
pop
xor
xor
cmpsb
std
ja
push
sbb
xor
incl
cltd
mov
cmc
mov
and
add
dec
in
mov
adcl
mov
pop
add
aam
icebp
push
loope
stos
and
jle
mov
jecxz
enter
cmp
sarb
pop
es
cld
xchg
mov
dec
or
jge
ret
push
out
adc
dec
sbbl
or
movsb
push
fs
mov
pop
pop
clc
jne
jo
xchg
cmp
or
xlat
cli
pop
add
ja
sub
je
jg
leave
sar
adc
sbb
lods
jne
pusha
mov
cmpsb
mov
and
and
mov
cmc
stos
dec
popf
leave
hlt
repnz
test
or
xchg
mov
mov
loopne
pop
cli
add
int
lods
push
pop
mov
testb
fchs
cmp
lods
cld
dec
jb
xor
fdivs
or
mov
and
je
movsb
nop
and
xchg
rcll
lock
lahf
push
sbb
xor
vhaddps
mov
fld
adc
push
cli
loop
cld
lea
push
push
es
inc
ja
or
out
cmpsb
jo
sbb
lods
sti
adc
dec
xchg
icebp
lcall
iret
jecxz
lods
out
pop
push
push
cld
adc
out
and
loope
inc
testl
daa
ss
push
inc
mov
cmp
jmp
dec
or
fwait
push
and
into
xor
mov
in
aaa
or
push
inc
sub
jb
mov
mov
jo
loopne
rep
pop
inc
cwtl
jl
stos
test
mov
pop
leave
sahf
scas
mov
jl
pop
stos
pop
test
imul
jp
ljmp
and
pop
jge
xlat
push
jmp
mov
loop
imul
cld
mov
xchg
in
gs
call
cvtpi2ps
pop
mov
lock
sahf
insl
outsl
adc
call
mov
or
push
lock
cmp
mov
mov
mov
inc
sbb
in
push
pop
sub
decl
mov
test
mov
lods
fists
cmc
push
lcall
inc
cmp
lcall
dec
adc
test
mov
jge
cltd
lret
stos
imul
sub
cmp
and
jl
xor
pushf
das
push
fs
pop
inc
jb
in
and
scas
lahf
push
scas
or
dec
in
loope
xor
mov
mov
pop
mov
jg
mov
cltd
dec
jge
add
mov
ss
fbstp
ret
loopne
xchg
sarb
adcl
dec
xchg
icebp
mov
adc
add
pop
or
jle
xor
xchg
loop
pop
dec
fwait
mov
sti
adc
dec
movsl
gs
xor
pop
push
das
cli
or
mov
outsb
mov
inc
iret
mov
push
lods
adc
mov
mov
or
sub
rcrb
insl
jle
jae
and
sub
in
and
add
ljmp
into
clc
lds
pop
insl
mov
xor
in
and
jb
adc
fildll
adc
mov
and
jle
xchg
jmp
mov
push
dec
flds
nopl
stos
or
adc
and
or
jg
push
shrb
sahf
lods
orb
push
in
add
ret
rclb
lcall
out
cmp
ja
cmc
mov
or
outsb
data16
xor
out
mov
ljmp
and
mov
sbb
dec
sub
test
jb
dec
pop
sbb
test
jbe
andb
cmp
push
iret
test
mov
insb
jg
lret
sbb
ret
inc
mov
fsubrl
xor
repnz
aas
and
sarb
dec
sub
iret
mov
dec
ret
push
sub
inc
jmp
das
fistl
loop
add
sub
call
les
insl
mov
stos
xchg
je
xchg
leave
pop
mov
cmc
jl
fnsave
push
mov
xorl
bnd
lcall
scas
dec
dec
push
and
lock
and
pop
mov
test
mov
aam
lret
or
jl
pop
adc
fmull
add
shll
dec
imul
sub
ror
ja
and
xchg
inc
add
jge
jle
push
loop
stos
leave
leave
adc
mov
es
mov
xlat
adc
imull
movsl
or
mov
fisttps
xor
dec
movl
push
jge
fidivs
imul
dec
lret
mov
push
loopne
push
or
loopne
cmpl
jg
jo
das
lahf
js
inc
out
jo
incl
aad
push
or
clc
xchg
pop
sar
xlat
cmp
jp
scas
cmp
dec
fistps
pop
icebp
pop
jle
mov
jge
jmp
and
shll
jmp
xlat
call
add
cwtl
add
out
mov
push
mov
xor
mov
cwtl
adc
inc
ret
pushf
cmp
inc
add
inc
lahf
loop
lcall
out
sti
xor
std
mov
push
xlat
sbb
clc
movsb
lods
add
push
and
incl
adc
pop
jnp
pop
sub
mov
dec
mov
sub
mov
dec
in
lcall
call
add
pop
fcompl
push
out
pop
lcall
push
adc
or
xor
cmp
pop
movsl
aas
push
mov
push
dec
jmp
mov
outsb
rcl
sti
in
or
or
sbb
ss
addl
cmp
enter
add
ret
nop
push
mov
push
push
mov
aam
pusha
testb
or
dec
lods
push
fs
xor
jl
adc
and
ljmp
scas
cmpsb
ljmp
xchg
cmc
ja
sub
cltd
repnz
hlt
add
add
int
xorl
pop
dec
insb
in
add
inc
mov
fdivr
jmp
xchg
ds
push
xor
mov
mov
xchg
mov
repz
add
xchg
je
dec
xchg
lcall
movsb
and
dec
stos
inc
mov
andb
inc
repz
test
sbb
fcmovnu
icebp
mov
insl
lds
mov
inc
lret
sbb
jle
rcll
pop
pusha
or
cli
jg
add
fwait
push
mov
outsl
add
mov
mov
lods
imul
inc
xchg
sahf
mov
adc
imul
daa
pop
aam
popf
ret
mov
in
lcall
jl
sarb
inc
sbb
cmp
outsl
sub
gs
mov
jb
cmpsl
ret
push
xor
loopne
pop
jle
fcoms
stos
add
ret
aam
or
dec
cmp
std
pushl
mov
insl
mov
cmp
adc
adc
sbb
push
into
adc
or
sahf
int3
dec
mov
pop
hlt
outsb
fcompl
iret
mov
push
mov
mov
shlb
dec
je
push
inc
aam
rcl
adc
clc
cmpb
or
gs
push
jl
stos
jmp
jbe
add
add
and
sub
jmp
jmp
mov
sbb
pop
adc
add
into
inc
rclb
out
push
cli
popf
adc
test
add
cmp
dec
sbb
xor
xchg
sub
ljmp
aas
mov
sbbb
mov
cmpb
jnp
ja
mov
cmpsl
jo
mulb
and
dec
dec
push
push
test
and
leave
mov
add
ret
inc
dec
sbb
dec
cld
or
xchg
or
sub
sbb
xchg
imul
add
sbb
jnp
lods
xor
repnz
cli
mull
fsubs
andb
add
mov
fbstp
aas
mov
paddd
popa
and
insl
fisubs
xchg
clc
addr16
incb
icebp
scas
xchg
dec
add
cmp
pop
adc
inc
iret
rol
gs
jg
int3
cld
loope
popa
pop
sub
cmp
pop
lods
ret
ljmp
add
xor
cmp
pop
pop
lock
fnstsw
or
adc
movsb
lcall
cmp
ds
pushl
and
in
mov
std
sahf
pop
or
pop
xor
push
and
nop
adc
mov
xchg
jmp
jmp
sub
mov
incl
jno
outsb
jbe
push
mov
in
std
es
mov
fidivl
xor
mov
ja
xchg
mov
sub
lret
rolb
xchg
fldt
push
jmpw
lahf
in
dec
dec
mov
xchg
jno
push
mov
jmp
sub
push
mov
pusha
pop
fisubl
pop
xor
sub
and
lock
fcomip
add
sub
dec
push
xor
inc
jmp
test
sbb
xchg
add
cmp
jbe
dec
and
and
movsl
push
movsl
dec
mov
sahf
lcall
sarl
incb
cmp
imul
push
pushl
add
cld
mov
loop
rorl
jo
call
in
aam
or
rorb
pop
mov
jp
push
testb
or
mov
push
sub
jmp
jg
mov
sub
fcmovnbe
test
leave
aas
lods
mov
fs
mov
xchg
jae
xor
sub
add
jg
mov
inc
aaa
mov
mov
cmpsl
out
ja
xchg
and
fbstp
add
add
out
std
outsb
sub
fdivp
mov
mov
sbb
dec
lret
imul
mov
or
pop
push
cld
jp
add
out
jmp
jmp
dec
clc
das
mov
out
lock
pop
clc
iret
pop
data16
or
add
shll
lock
cmpsb
or
sub
sbb
mov
lds
enter
push
adc
push
cmp
lock
std
jle
mov
gs
movsb
test
clc
pushl
pushf
push
insb
sub
sub
xor
adc
cmpsl
jmp
jecxz
andb
push
jle
out
ljmp
shll
aad
xor
popf
pop
lcall
mov
bound
mov
inc
std
loope
add
xlat
icebp
aaa
arpl
notb
ret
leave
fs
sub
movsl
cmp
jecxz
pusha
stos
sbb
fisttpll
add
sahf
enter
sub
outsl
out
fwait
push
ret
adc
rcll
jecxz
enter
repz
rclb
sub
add
and
xor
mov
push
sbbl
fwait
outsl
and
add
xor
lods
ljmp
hlt
pop
push
push
inc
mov
movsl
loopne
dec
cld
jg
incb
cltd
cld
sub
fstpt
aaa
mov
cmpl
mov
mov
test
sbb
or
pop
iret
into
jmp
pusha
xor
mov
jecxz
test
incl
fiadds
and
push
loopne
mov
cmp
lea
mov
xlat
out
std
ret
xchg
xchg
call
adc
pop
je
scas
pop
adc
ljmp
mov
inc
xor
sbb
lret
fistps
mov
rorb
inc
outsl
mov
fcomp
lea
std
aaa
or
mov
mov
adc
or
icebp
mov
mov
xor
aaa
movsl
jg
xchg
sbb
shlb
jg
nop
jae
jne
jecxz
aam
jecxz
inc
push
pop
test
call
popa
loope
or
adc
mov
and
push
icebp
subl
jbe
push
or
fwait
ss
fdivr
nop
icebp
add
jmp
cs
pop
test
in
js
sbb
fstpl
fsubrl
mov
cltd
jne
data16
data16
loopne
mov
mov
scas
leave
xchg
sbb
jp
mov
inc
xchg
mov
les
pop
and
and
jle
inc
rclb
mov
add
lcall
push
cmpsl
pushf
ljmp
push
cmpsl
ret
mov
rorl
or
adc
xchg
fcoms
hlt
xor
add
call
push
mov
sarb
clc
das
mov
mov
js
jo
shl
ja
sbb
faddl
rcr
mov
clc
ds
jnp
aad
mov
loopne
inc
jo
loop
scas
xor
ja
adc
ds
ljmp
pop
mov
adc
and
xchg
add
mov
ljmp
cmc
mov
popa
cwtl
sbb
push
out
add
sub
nop
sbb
pop
cmp
adc
xchg
into
js
cmp
inc
xchg
std
push
xchg
ss
adc
insl
dec
jne
add
sbbb
mov
or
xchg
or
test
shrl
loope
ficompl
push
cmp
pop
adc
mov
mov
and
dec
and
ret
xor
outsb
push
loope
lods
sub
mov
add
scas
hlt
or
pushl
or
adc
and
das
ss
and
mov
adc
out
mov
cwtl
and
int3
notb
and
es
sub
or
xchg
ss
cmc
adc
sar
inc
mov
xchg
sbb
fstpl
sub
mov
enter
mov
hlt
mov
add
mov
dec
xlat
sbb
and
loopne
jbe
sbb
push
clc
jg
incl
js
dec
cmpsb
mov
cmpsl
bound
push
add
sub
dec
into
leave
js
lock
decl
jnp
repz
stos
sub
jp
jns
xor
and
push
push
mov
sarb
mov
and
popa
cmpsl
cmp
xchg
jnp
lock
in
int
out
inc
xchg
les
fisubl
mov
sbb
jp
jcxz
ret
jle
xchg
dec
call
in
outsl
pop
adc
adc
push
popf
push
or
lock
xchg
inc
dec
lods
pop
pop
les
scas
mov
or
mov
fiaddl
clc
incl
adc
ret
cli
or
push
mov
es
js
out
pop
dec
or
xor
dec
pop
mov
push
mov
adc
clc
shlb
adc
or
ljmp
push
pushl
sub
loopne
jge
addr16
insb
cltd
xor
imul
popa
dec
xchg
and
cmpsb
aas
mov
and
imul
sti
shr
pushf
add
jnp
push
clc
call
xor
testl
sbb
rcll
or
xor
insl
stos
shlb
rol
dec
adc
call
mov
and
mov
mov
xor
dec
std
aam
push
jp
push
mov
push
imul
ja
sbb
stos
outsb
mov
dec
dec
xor
pop
or
jg
sbb
int3
test
add
pop
xlat
mov
pop
dec
sti
mov
enter
mov
das
sti
cli
fsubrl
jmp
mov
dec
adc
xor
jg
mov
inc
mov
push
paddusw
pop
loopne
push
scas
mov
push
or
ss
int
fcoml
add
add
xchg
mov
sub
scas
add
push
test
xchg
fcoml
push
cld
pop
inc
jmp
rcl
fnstcw
sar
xchg
std
push
add
and
cld
pop
icebp
punpckldq
mov
test
add
pop
aam
pop
aam
sbb
dec
lcall
xorb
mov
ja
or
fdivrs
inc
addl
cli
push
shl
mov
bound
mov
movsb
mov
mov
push
sti
scas
fld
out
movsb
pop
roll
or
adc
inc
xor
and
cmp
xor
popa
jne
mov
pushl
cmp
std
popf
fsubrs
cmp
ret
clc
inc
clc
int3
or
add
mov
xor
pop
push
js
inc
jg
ljmp
mov
sti
inc
adc
aaa
xor
sbb
and
jne
cmpsl
fstps
or
add
xchg
xchg
jo
jns
adc
push
cmp
sub
jg
stos
push
cli
push
bound
loope
fcmovnbe
ret
mov
push
add
jecxz
cmpb
stos
xchg
jg
and
popf
fisubs
int3
pop
adc
pop
add
pop
lock
mov
mov
push
mov
cwtl
mov
std
decl
mov
sub
sbb
pop
lea
mov
jno
jl
sbb
std
addl
clc
pushl
pop
adc
mov
pop
dec
stos
dec
test
pop
hlt
pushl
mov
lods
lock
adc
gs
call
ja
xorb
shll
jmp
jne
cmpsb
fmull
sarl
or
dec
and
mov
xor
out
lds
fmuls
inc
cwtl
and
jb
pop
cld
mov
inc
ret
aam
and
stos
movsl
cwtl
fs
adc
add
bound
test
jns
scas
fildl
mov
cmc
adc
ljmp
and
movl
mov
xchg
aad
in
sbb
and
inc
popl
and
lret
sbb
lods
mov
jg
add
push
mov
mov
das
pop
inc
jg
xchg
mull
shll
arpl
fsubrl
ljmp
pop
inc
shlb
mov
pusha
pop
arpl
insb
inc
fsts
cmpsl
xchg
cmpb
or
cmp
adc
xor
cmc
call
icebp
jle
movsb
dec
xlat
xchg
pop
xchg
jo
add
es
push
fidivs
lcall
mov
mov
pop
inc
add
and
xchg
push
arpl
leave
dec
jbe
or
cmp
hlt
jle
sarb
or
mov
call
stos
mov
xchg
cli
or
test
jmp
push
fisubrs
lock
jp
leave
pop
adc
addr16
sbb
sbb
fistl
mov
xchg
cmp
sub
xor
lcall
pop
aaa
mov
jle
and
fdivp
div
mov
push
or
je
add
dec
sarl
rcr
lret
fs
test
mov
cli
clc
inc
out
mov
adc
std
mov
inc
gs
dec
xchg
xchg
mov
outsb
push
pop
push
mov
xor
lock
test
aas
popf
sahf
push
jne
mov
push
jb
push
jo
outsl
pushl
push
inc
js
mov
lock
cld
dec
aad
sub
fs
xchg
push
sahf
sbb
jo
or
jmp
insl
inc
dec
pop
jmp
inc
pop
cwtl
rcr
lock
and
dec
adc
outsl
std
add
inc
icebp
fsts
jg
aam
loopne
jmp
xor
test
test
shrl
inc
ljmp
jb
pop
lock
dec
lret
adc
jecxz
sbb
xchg
adc
fbld
rcrb
sbb
stos
push
fidivl
pop
jmp
dec
mov
or
lcall
jmp
xchg
mov
pop
mov
sbb
mov
sbb
jge
fimuls
sahf
ja
dec
mov
fldt
cmc
pop
push
in
jl
jecxz
testl
scas
mov
mov
jbe
dec
adc
sub
mov
hlt
sbb
lcall
rcrb
sub
inc
xor
sti
dec
cld
decl
mov
call
ret
aaa
testb
inc
pop
xor
sbb
cmp
lock
mov
out
cmp
xor
out
je
in
push
icebp
jne
mov
cs
insl
shll
in
xchg
sbb
decl
sub
dec
pop
and
dec
adc
cli
mov
mov
inc
lea
dec
stos
test
into
push
inc
add
test
jae
fisubl
rorl
rcrb
push
cmp
xor
iret
fisubs
int
add
mov
mov
std
jmp
sub
addr16
stos
or
std
push
jbe
decl
add
jl
fdivrl
loope
xorb
rorb
adc
push
mov
cmp
popf
sbb
or
push
sbb
repz
add
jo
clc
outsl
in
or
mov
mov
push
xchg
cmc
das
mov
and
adc
cwtl
cmpsl
lcall
dec
mov
sbb
mov
dec
das
adc
lea
mov
call
xor
mov
mov
sar
sbb
jo
inc
jle
lahf
mov
fdivl
sti
inc
cli
push
call
jae
ljmp
mov
dec
mov
imul
mov
orb
loopne
jbe
loopne
xchg
loopne
cmpsl
inc
call
jecxz
mov
pop
cmpsb
shl
add
mov
xchg
xchg
filds
jecxz
mov
cwtl
dec
idivb
aas
xorl
mov
mov
je
xor
mov
lods
jle
in
out
pop
hlt
jg
repnz
inc
mov
inc
fisttpl
decb
insl
mov
insb
pop
mov
shr
pusha
popa
adc
adc
adc
cmp
dec
pop
fidivrl
and
test
jmp
adc
clc
jbe
push
mov
cs
ja
sti
lcall
clc
mov
fcoms
sbb
daa
mov
clc
call
mov
cmc
or
mov
clc
sbb
sti
mov
test
push
xchg
jp
or
xorb
rcrb
pushl
xor
icebp
mov
rcrl
mov
adc
mov
mov
cld
outsb
push
jns
lea
rolb
sub
aas
inc
movsb
mov
cmpsb
sbb
mov
fistl
enter
fstps
cld
lcall
nop
mov
inc
add
push
push
arpl
or
aam
cwtl
push
add
fcompl
je
cmpsl
push
cmp
jle
and
std
add
lods
icebp
test
add
nop
movsb
test
testb
xchg
std
inc
push
push
and
and
divl
push
mov
fmuls
inc
lcall
movsb
popl
sub
cld
in
add
out
push
or
daa
jns
pop
jo
xchg
sbb
popa
xchg
cmc
pop
xchg
cmp
mov
lcall
sahf
jp
dec
loopne
out
cmp
xor
inc
adc
ret
mov
add
mov
cltd
and
adcl
dec
push
inc
xchg
fdivp
inc
push
pop
xor
aas
negb
out
dec
sub
shl
jnp
or
jne
inc
jnp
ds
xchg
ret
test
filds
sahf
testl
mov
jle
jmp
mov
loope
pop
and
push
jp
fisubs
lods
mov
push
aaa
stos
lcall
inc
or
aaa
xor
sbb
mov
dec
cmp
loope
jno
fs
adc
fdivrp
cmpsl
jle
mov
setno
or
cmc
inc
popa
mov
in
lds
lret
pop
das
les
dec
jl
adc
orb
shrb
ret
jmp
fistps
mov
lahf
cmp
or
and
out
push
mov
incl
ficomps
push
adc
sbb
jnp
cmp
xor
aam
ja
mov
xor
addr16
cmp
xchg
mov
mov
xor
jl
es
loopne
sbb
and
clc
out
push
xchg
sbb
jg
xorb
mov
dec
adc
mov
loop
das
push
popa
mov
sub
dec
sub
ret
mov
clc
mov
mov
or
add
jecxz
cmpsb
jbe
in
sub
pusha
outsb
and
pop
pop
fwait
insb
push
imul
adc
enter
cmc
frstor
sbb
int
lock
mov
cmp
dec
dec
xor
xor
insl
mov
call
mov
mov
sub
fsub
adc
lods
add
jg
jl
xchg
les
adc
mov
dec
pop
clc
cs
hlt
jno
push
fiaddl
xlat
mov
xor
icebp
es
addl
and
pop
sub
dec
xchg
xor
out
xor
pop
or
inc
push
imul
ficomps
cld
pop
movsb
dec
std
jnp
push
popf
pushf
les
xor
xor
cmpsb
scas
mov
mov
add
and
xchg
movsl
cltd
jmp
dec
jnp,pt
inc
in
jg
push
sub
out
cli
xchg
test
mov
cmp
and
arpl
mov
lods
sub
ret
outsl
and
out
mov
push
gs
inc
inc
jnp
movsb
aam
pop
fisttpl
sbb
push
sub
jg
pop
inc
lcall
sbbl
lea
sbb
pop
std
dec
iret
hlt
lods
add
dec
xor
nop
icebp
add
and
out
inc
popa
daa
sub
xor
add
bound
lods
push
and
ret
or
cmpsb
push
repnz
lock
jg
repz
jg
aaa
adc
pop
gs
adc
sub
pop
orb
test
ret
xor
hlt
cmp
push
xchg
xor
inc
dec
cld
push
xor
cmp
cmp
mov
mov
shlb
sub
sub
mov
sar
lcall
ret
aaa
sbb
ret
sub
mov
jge
push
adc
and
mov
pop
push
clc
icebp
mov
dec
xchg
inc
xchg
push
lock
pop
mov
xchg
nop
loopne
outsl
inc
push
add
fisttpll
sbb
loope
dec
insb
add
dec
ja
pcmpgtb
ret
push
in
mov
mov
dec
cmp
addr16
push
xchg
mov
ficoml
mov
das
loop
fwait
dec
mov
outsl
sarl
push
aam
cmp
push
movsb
sbb
push
cmp
mov
sbb
pushf
adc
addb
pop
imul
xchg
inc
sub
stos
jle
add
arpl
adc
aaa
or
push
add
push
test
sarl
aam
popf
repnz
xor
iret
test
movsl
sub
hlt
jnp
xchg
bound
adc
in
gs
inc
adc
into
fbstp
sub
mov
sti
push
lahf
adc
and
jb
rolb
or
pusha
arpl
adc
ret
xchg
scas
xchg
jae
dec
sbb
clc
sbb
xchg
fnstcw
movsl
call
dec
jge
push
mov
mov
or
stos
stos
pop
jnp
pop
cmp
aas
sbb
shl
mov
xor
ret
movsl
sti
popa
inc
pop
cmc
decb
cld
adc
add
sbb
adc
pmaxub
in
and
mov
sahf
cmpsb
aas
xchg
rorb
add
or
ss
ljmp
jnp
popf
fsts
xchg
icebp
mov
hlt
fistps
loopne
pushl
jge
stos
sbb
pop
sub
rolb
ja
adc
cmpsl
push
push
cmpsb
movsb
ret
repnz
int3
mov
and
and
inc
cs
call
insl
outsb
or
lret
test
cld
cwtl
mov
mov
adc
stos
les
scas
and
ljmp
aas
mov
mov
cmpb
in
mov
fisttps
sti
xchg
test
jbe
lods
xchg
fcmove
xchg
xchg
aam
push
inc
out
lret
adc
and
pop
cmp
dec
pop
sbb
lods
lds
nop
shll
je
decl
pushf
cmpsb
jo
scas
and
push
xlat
and
lds
mov
rclb
fistps
outsl
add
call
pop
mov
lods
push
jp
cltd
addb
rcrb
xchg
pop
ret
out
xorb
cld
incl
cmp
pop
fcoml
cmpsl
sub
lods
xor
inc
sbb
push
aaa
test
ss
and
fcoml
mov
pop
mov
mov
or
shrb
add
jp
dec
push
sub
loop
mov
les
mov
sbb
jo
push
gs
and
xchg
outsb
inc
cli
add
jecxz
pop
mov
ljmp
std
xor
xchg
jnp
pop
loop
movsl
or
bswap
xchg
push
popa
clc
mov
pop
add
stos
mov
ss
gs
push
push
mov
push
mov
mov
xor
aas
pop
pop
push
aas
add
enter
ja
decl
stos
fidivs
insl
cli
mov
jne
xchg
in
je
cmp
pop
add
popf
out
jg
sub
add
sub
pushf
dec
mov
mov
outsb
in
outsl
sbb
daa
repz
loop
scas
cmpsl
or
fwait
cs
sbbb
ja
xor
adc
ret
xor
dec
adc
xchg
dec
push
pop
jl
mov
add
leave
std
push
aas
cld
lret
or
and
lcall
hlt
aam
cld
sub
xor
sub
bound
or
cwtl
pop
shlb
js
xorl
jle
shrb
lahf
xor
fwait
inc
fiaddl
push
and
ds
stos
inc
std
leave
pushl
mov
cmp
sahf
hlt
shrb
jo
stos
mov
dec
data16
out
pop
lcall
and
jg
lcall
in
pop
jge
movsl
dec
cltd
push
mov
dec
cmp
pop
inc
sbb
and
inc
mov
sub
rorl
ja
pop
inc
clc
cwtl
push
pusha
ljmp
or
sub
sbbb
inc
xchg
xchg
pop
lret
xor
xchg
and
mov
jno
data16
test
dec
ss
mov
fnstenv
mov
fists
std
adc
xlat
cmpsl
cs
out
mov
je
cmpsb
stos
out
and
js
test
jl
and
and
sbb
pop
movb
push
call
xlat
paddsw
jg
sub
push
mov
mov
mov
rcll
test
scas
inc
enter
cli
test
dec
aas
cli
inc
push
xchg
in
loop
ljmp
loopne
mov
loope
mov
mov
cli
ret
loope
and
fs
lods
and
int3
loop
jo
sti
inc
add
push
dec
sbb
outsl
pushf
fwait
je
xchg
xchg
and
call
fcmovnu
scas
fs
je
sbb
xchg
shrl
ret
lahf
pop
fdivr
sti
add
imul
std
ljmp
pop
ja
sub
xor
jp
movsb
mov
xchg
lahf
int3
imul
loop
mov
lods
stos
and
jmp
lds
mov
push
and
lds
imul
icebp
lods
fistpl
rcl
add
sarb
ljmp
xor
and
xchg
cmp
dec
mov
test
nop
aam
fwait
lods
divb
xchg
xor
incb
mov
clc
mov
call
sub
aam
mov
xor
mov
es
testb
dec
aaa
adc
shl
cmp
and
fcomps
in
adc
repnz
fnstsw
call
or
pop
fists
das
sbb
push
insb
cmp
push
data16
jp
rcrb
jo
mov
loop
sbb
adc
push
stc
push
inc
xchg
cmp
jbe
dec
fwait
mov
aaa
stos
repz
aad
stos
xchg
aas
lcall
xchg
xor
mov
orl
adc
je
in
cmpb
lds
cltd
mov
icebp
xlat
popf
lcall
test
loopne
push
jne
jp
push
or
cmovae
ret
fmul
fdivl
mov
dec
fisttpll
cmpsb
mov
add
lods
jl
lods
cli
dec
push
jo
bound
sbb
cwtl
int
cli
pop
mov
inc
iret
push
jle
jo
xlat
mov
xor
sbb
or
mov
ret
sbb
orb
adc
int
sbb
cmp
mov
push
mov
loopne
mov
into
jns
jge
std
xor
push
out
lahf
adc
dec
std
push
mov
mov
rcr
scas
call
pop
in
stos
pop
decl
fstl
and
repnz
dec
jecxz
push
mov
std
fwait
lcall
pop
mov
push
xchg
dec
call
pop
add
inc
sub
add
push
filds
jne
mov
cmp
mov
inc
cmp
add
push
stos
xchg
decb
testb
jo
int3
sub
clc
or
sbb
lock
sbb
jp
sub
add
test
fsubs
jnp
subb
jg
push
fistpl
mov
lods
mov
test
scas
push
lock
shl
push
pushf
hlt
adc
les
adc
and
sar
or
popa
cmp
xor
aas
xchg
mov
xor
xchg
add
push
sti
es
out
inc
dec
sub
mov
mov
int3
cmp
mov
pushl
push
and
jne
or
sahf
xchg
mov
mov
inc
clc
add
mov
mov
sub
aas
das
lods
mov
rol
push
or
cwtl
push
adc
pop
decl
subl
out
inc
js
fucomi
stos
dec
pop
pop
popf
push
pusha
mov
and
xchg
pop
add
dec
lcall
push
mov
adc
push
fwait
cli
into
mov
loopne
mov
mov
sbb
push
xor
insl
mov
mov
das
mov
sub
orb
mov
fimull
mov
repnz
inc
and
subl
xor
xor
or
dec
adc
adc
in
mov
sahf
push
test
stos
or
test
mov
mov
xchg
adc
pop
add
mov
inc
popa
movsb
stos
in
mov
or
pop
cmp
lock
inc
aaa
loop
divb
adc
out
mov
cli
hlt
mov
aad
and
adc
aas
gs
push
add
mov
lahf
push
push
cmp
dec
ss
testl
push
popa
and
dec
dec
lcall
ficoms
lret
push
sbb
dec
mov
out
cmp
mov
pop
inc
xor
adc
outsb
mov
fabs
add
sub
loop
xorb
or
je
pop
sbbb
cmp
or
aas
or
adc
add
rcrb
leave
mov
or
js
repz
jge
or
call
icebp
ljmp
push
das
cli
call
mov
loopne
lret
ret
pop
lods
scas
rcll
add
bound
jae
cli
mov
mov
inc
push
gs
cli
dec
fmull
cmc
lock
dec
or
mov
icebp
mov
mov
js
push
addr16
inc
aad
mov
jae
sub
push
insl
std
cwtl
mov
and
xchg
loopne
add
mov
cmp
cs
xor
out
inc
jno
or
stos
adc
add
mov
jo
leave
dec
mov
sub
clc
test
jbe
cmp
or
outsb
dec
dec
push
mov
or
and
mov
inc
jecxz
std
sbb
das
sub
cwtl
leave
push
in
mov
xorb
xchg
ljmp
add
out
push
push
jnp
pop
mov
mov
int
sti
addr16
cld
int
movsl
sub
shll
insl
decl
mov
mov
xlat
cmp
lods
sbb
incl
mov
jge
stos
jo
es
test
push
mov
lret
sbb
mov
insb
cmpsb
repnz
or
add
pop
aam
sbb
lods
xchg
inc
mov
lahf
xchg
mov
cmpsl
in
insb
jae
and
lods
push
pop
cmp
orb
mov
stos
mov
loopne
push
fs
sub
adc
cs
push
mov
jne
pop
ljmp
jg
cld
es
aaa
sub
xchg
test
sub
xor
out
sbb
mov
lods
xchg
cltd
outsl
dec
push
mov
ja
pop
hlt
insb
and
inc
loope
mov
andb
cmc
pop
add
popa
repz
add
out
cmp
incl
and
push
std
inc
fcompl
movsl
add
jmp
mov
jmp
mov
xchg
cld
rcrb
insb
fadds
and
xor
sarb
cwtl
push
cmpps
pop
scas
jmp
hlt
in
inc
cmp
xor
inc
xchg
dec
mov
insb
stos
je
inc
cwtl
nop
xchg
das
clc
adc
pop
push
push
pop
subb
cs
or
add
xor
in
push
push
mov
push
push
pop
loopne
js
adc
jne
add
xor
stos
jge
stc
in
sahf
stos
jnp
sbb
pop
repz
jmp
inc
mov
jp
mov
je
pop
lret
es
cli
addl
leave
repnz
jmp
adc
jmp
dec
aas
faddp
mov
pop
pushf
test
lret
inc
xor
in
mov
mov
sbb
inc
xor
sub
or
sbbb
pop
pop
hlt
aad
pusha
std
jg
lahf
in
fcoms
in
inc
inc
and
cli
mov
test
pusha
jecxz
adc
or
adc
xor
adcb
sar
xchg
push
jmp
mov
fwait
pop
mov
xor
pop
add
scas
fmul
shrb
rolb
lds
pop
mov
fidivl
or
lea
push
and
xor
cvtdq2ps
dec
arpl
mov
pop
ss
push
test
movsl
cmp
add
or
sub
pop
cwtl
into
sub
stos
inc
jge
mov
mov
or
lock
mov
pushf
xchg
jle
mov
mov
cmp
fisubrs
xchg
aam
cmp
mov
orb
clc
cmp
add
shlb
aam
dec
rclb
inc
subl
adc
add
xchg
test
mov
xchg
sub
scas
xor
in
inc
fmul
push
repnz
loope
inc
decb
hlt
pushf
pusha
push
push
lods
aaa
imul
cmc
mov
pushl
mulb
adc
in
inc
dec
jmp
mov
inc
push
pop
adc
jo
inc
cmp
and
rolb
in
sbb
mov
push
mov
inc
xor
in
or
push
pop
cmp
xlat
jne
pop
je
out
xchg
xchg
test
inc
stc
or
or
mov
inc
or
fst
xor
xchg
push
addr16
add
sahf
mov
in
push
call
cli
adc
ret
inc
push
push
add
leave
enter
lcall
mov
and
pop
jnp
cld
sbb
adc
ds
sbb
or
inc
xchg
je
inc
mov
and
hlt
push
insb
jno
jle
dec
pusha
xor
enterw
mov
test
mov
pop
nop
push
xchg
and
sarb
movsl
lret
jno
pusha
pop
or
fcoml
sbb
call
jecxz
add
and
xlat
aad
push
leave
and
lea
xor
xchg
adc
sub
fistpll
jbe
cmp
int3
xchg
fsubrs
cmpsl
out
cmp
push
sti
shll
cmp
shl
xchg
mov
push
sahf
sub
insl
scas
mov
mov
int3
int3
xchg
test
mov
jg
and
mov
pop
icebp
xchg
lods
aad
fnstcw
push
mov
test
sbb
stos
icebp
push
in
inc
mov
xchg
movsb
mov
pop
mov
daa
mov
ud1
dec
movsb
outsb
insb
mov
data16
sbb
mov
decl
jnp
daa
rcll
fsubl
xor
pop
add
int3
inc
mov
xor
sub
aas
inc
or
dec
xchg
jbe
outsb
leave
and
adc
cmp
das
repnz
std
aaa
mov
sarl
dec
je
add
fwait
lock
dec
fstpt
bound
les
mov
adc
mov
sar
dec
testb
jg
inc
mov
add
xchg
jle
inc
mov
addr16
adc
es
mov
fsubrs
jl
push
add
mov
nop
call
pop
fwait
mov
negl
lret
negb
sar
loopne
scas
aad
xor
mov
mov
adc
es
and
mov
inc
clc
mov
loop
mov
dec
into
scas
mov
mov
mov
mov
negb
js
cmp
push
adc
or
sub
cs
mov
adc
sub
rorl
add
cs
or
push
xor
hlt
dec
inc
leave
sub
ljmp
pop
imul
fidivrl
in
xchg
lock
sbb
dec
push
or
ja
je
or
mov
icebp
mov
sub
popa
and
stos
jb
pop
and
fwait
xchg
aam
jmp
out
jbe
add
fimuls
lahf
adc
sub
cmp
fwait
je
xchg
incb
fs
popa
mov
mov
fcomip
mov
push
mov
xor
popa
int
stos
push
dec
rolb
dec
cmp
dec
cld
scas
test
push
mov
or
lret
aaa
pop
jo
xor
aam
sub
xor
movsb
or
jle
fsubl
jg
arpl
cmp
and
sbb
fbstp
sbb
sub
jl
js
add
loop
add
fwait
loopne
pusha
aaa
jns
pop
data16
test
lea
lock
xor
rorl
stos
lcall
in
hlt
sbb
hlt
dec
mov
xlat
cltd
insl
xchg
movsb
pop
push
sbb
push
bnd
ja
stos
xorl
in
or
pop
fsubl
rorb
pop
dec
call
and
mov
push
push
aad
clc
ljmp
push
pop
jl
imul
cmpsb
es
mov
mov
xchg
xor
clc
push
dec
movsb
mov
repz
add
loop
sarl
inc
inc
pop
sti
add
fisttpll
decl
cmp
jg
test
mov
ret
imul
cmp
mov
mov
sub
xchg
jmp
shl
mov
push
jns
mov
ljmp
insb
out
aas
push
ficoml
mov
pop
cmc
pop
fnstenv
adc
lcall
mov
inc
and
sbb
mov
scas
sub
scas
adc
jg
enter
mov
add
pop
sub
sub
push
aaa
mov
mov
rcl
ss
fistpl
mov
int3
sub
adc
repnz
sub
add
pop
test
mov
mov
aas
ffreep
push
cmp
xchg
adc
sarb
hlt
lods
pop
leave
inc
dec
jmp
pop
loopne
aas
jns
data16
rcrb
sbb
cwtl
loope
ds
pusha
xchg
cwtl
clc
sbb
xor
mov
jb
call
fdiv
mov
xchg
out
push
or
mov
pop
push
ds
out
clc
mov
enter
push
sub
iret
xor
orl
dec
jmp
add
pop
inc
inc
in
testb
sbb
mov
arpl
jae
pop
ljmp
mov
shr
mov
add
pop
imul
sbb
xor
clc
jle
scas
adc
adc
into
adc
test
shlb
pop
inc
jge
ret
rolb
mov
pop
push
push
xchg
pop
scas
push
sbb
push
call
adc
mov
rcrb
loop
inc
popf
jp
das
mov
inc
inc
in
hlt
jb
inc
pop
or
ds
inc
xor
cmpsl
imul
repz
jecxz
je
lock
inc
insl
or
jl
dec
cmpsl
jle
fwait
hlt
es
mov
push
adc
addl
jecxz
cltd
add
push
decl
lea
lods
addr16
bound
test
inc
inc
push
dec
mov
clc
mov
or
ljmp
cld
jbe
incl
std
repz
out
mov
push
int3
sahf
repz
mov
fcmovbe
movsb
push
notb
bound
mov
pushf
je
outsl
gs
rcrl
sar
mov
pop
sub
inc
cmp
or
pop
rcrb
mov
pop
xor
dec
pop
sub
dec
xchg
fsubrs
lret
cmp
mov
lahf
scas
push
adc
cmp
sti
movsb
mov
and
nop
movsl
ja
and
sahf
in
adc
mov
enter
movsl
cmp
inc
mov
pusha
movsb
fcomp
pop
cwtl
and
or
dec
movsb
ret
sahf
push
or
xchg
hlt
mov
push
and
fisttpl
lock
pusha
xchg
mov
mov
stc
adc
xchg
adc
xor
aaa
cltd
divb
xor
out
xor
lret
sahf
sub
sub
je
dec
jecxz
call
cmp
test
add
lock
shl
popa
test
popf
je
mov
fildll
lea
or
jb
and
add
mov
repnz
jle
fwait
shlb
inc
cmpsb
jo
cmc
add
inc
push
rcr
mov
lahf
mov
mov
xor
fimull
loop
xchg
mov
jecxz
push
cld
mov
loope
enter
scas
cli
mov
sbb
stos
cs
cmpb
ja
pushl
inc
cltd
mov
adc
pushf
dec
fisttpl
mov
fisubl
movsl
push
cmpsb
fwait
fnstsw
xor
cltd
jno
jg
cwtl
xorb
aad
outsb
and
xorb
out
push
or
decb
sahf
push
pop
sub
push
out
xchg
popf
and
push
cmp
push
repnz
mov
inc
push
test
imul
or
or
cmpb
sbb
fadds
push
call
sub
in
test
inc
add
push
movsb
inc
ja
cli
lcall
or
fdivrs
and
dec
mov
xor
loopne
andb
incb
popf
xor
and
xchg
mov
movsl
sbb
cmc
ret
cmp
lock
and
inc
incl
push
mov
jl
movsl
xchg
cld
push
sti
and
mov
xor
cmpsl
int
jge
fdivs
push
jo
orb
dec
arpl
cmpsb
test
sbb
dec
outsl
addl
adc
fdivp
jg
jg
stos
outsb
enter
clts
popf
ret
push
cld
adc
mov
jge
sbb
mov
int
icebp
decl
ljmp
loope
push
movsb
sbb
mov
mov
call
xor
add
mov
jp
aaa
lret
or
sub
cli
sbb
cmc
mov
and
test
mov
push
dec
mov
mov
out
jl
movsb
add
pop
add
cmp
fistps
adc
jge
adc
xchg
or
stos
mov
adc
nop
xor
and
push
adc
std
xlat
mov
xor
loopne
clc
aad
std
fidivrs
outsb
lods
jno
sbb
mov
lds
fists
cltd
cmp
clc
pop
test
xor
mov
pop
fs
jge
dec
cmp
insb
jo
mov
sub
adc
icebp
pushf
sub
decl
lahf
cmp
push
mov
jb
or
mulb
icebp
inc
jl
sub
cwtl
pop
imul
in
mov
test
push
cli
or
push
pop
daa
negl
jns
lahf
cwtl
xchg
je
cs
push
cmp
out
mov
add
mov
jp
dec
pop
ljmp
inc
and
iret
es
adc
xchg
in
ret
cmpsb
out
jmp
sbb
adc
push
pop
shrl
andb
les
shlb
mov
jp
idivb
adc
cli
lods
in
inc
loopne
ljmp
pop
inc
push
out
sub
mov
mov
adc
pop
push
cmpb
pop
loop
jbe
cltd
sub
aaa
insb
mov
fsubrs
fdivl
jg
cmp
out
scas
ds
test
ljmp
loope
xor
inc
stc
xor
lock
pusha
add
add
sti
stos
mov
test
adc
clc
and
push
xchg
pop
adc
jecxz
inc
outsl
add
jmp
je
loop
jp
out
mov
pop
ror
cli
pop
pop
jmp
call
pusha
in
adc
push
popf
fsub
add
arpl
xchg
cs
dec
mov
dec
aad
or
or
add
pop
and
inc
loope
push
idiv
inc
pusha
roll
shll
outsb
jge
xor
push
imul
push
push
scas
push
int
inc
or
and
push
dec
mov
mov
and
push
lcall
sub
fs
mov
push
std
movsb
test
inc
scas
mov
adc
mov
adc
das
lock
outsb
sbb
das
inc
add
pushl
xchg
push
or
inc
or
test
loop
pop
pop
jo
call
sbb
dec
lcall
add
loop
into
jg
jle
out
bound
scas
in
xor
les
out
out
add
mov
clc
call
icebp
adc
scas
jl
push
sbb
in
mov
jns
js
push
xchg
pusha
pusha
mov
pop
sbb
sbbb
loopne
in
rolb
ja
sbb
aaa
jl
movsb
xor
or
sti
in
les
cmp
pop
jno
push
xchg
call
jmp
and
adc
jb
movb
ja
idiv
mov
lret
ret
mov
push
add
add
fwait
enter
lea
lret
fdivrp
fcomip
sbb
fdivs
add
shlb
dec
shlb
xor
push
or
pusha
xor
call
mov
adc
mov
pop
mov
inc
shll
sbb
and
je
iret
mov
stos
and
push
cld
mov
sbb
out
dec
xor
ficoms
and
sbb
jl
bound
jmp
rcrl
jl
fcomip
aam
mov
rclb
mov
sub
leave
test
jge
mov
out
push
push
test
or
cli
push
repnz
mov
xor
lods
sub
cmp
or
push
int3
cmp
outsl
push
pop
out
inc
out
push
or
adc
js
jle
jp
mov
sbb
push
add
das
pop
mov
sbb
outsb
stos
adc
in
xchg
pop
in
mov
add
movsb
sbb
jmp
and
cli
xchg
out
jge
mov
add
cmpsb
aam
sub
push
les
std
outsl
push
xlat
jp
dec
jle
daa
push
pop
jp
or
scas
leave
xchg
pop
jmp
dec
lea
push
cwtl
mov
add
frstor
adc
cmc
imull
push
sahf
outsb
data16
or
add
mov
dec
jecxz
test
add
outsb
xchg
mov
cmp
push
icebp
pop
lock
scas
push
test
xchg
xlat
andb
out
inc
lods
hlt
push
jno
sbb
pushf
sbb
adc
pusha
int
lods
adc
pushl
sahf
or
xchg
or
pop
inc
or
sbb
or
test
in
out
xchg
sub
in
repnz
mov
in
fwait
mov
in
aam
or
push
sar
push
fistps
test
mov
es
in
hlt
mov
das
or
decl
std
sbb
sbb
jo
scas
adc
leave
cmp
aad
and
stos
xor
sub
jb
jno
dec
xor
out
in
addr16
je
in
call
push
sahf
mov
in
mov
fwait
pop
lcall
call
push
out
daa
rclb
push
inc
pop
shrl
std
clc
ljmp
lret
xor
mov
dec
adc
mov
mov
jg
ss
adc
je
repz
dec
mov
mov
test
jle
cltd
cmp
rcll
mov
ja
mov
fidivs
lcall
fildl
push
push
orl
xlat
push
insb
adc
pop
mov
push
jp
aaa
inc
fcomps
std
jg
sbb
sbb
leave
fdivrl
fs
mov
mov
ljmp
clc
push
pop
js
sbb
sub
mov
pop
inc
bound
add
inc
push
addb
es
cmpb
loope
aaa
pop
in
push
clc
icebp
cmpsl
movsb
cmc
fstps
fdivl
ljmp
loopne
out
inc
rcrl
push
push
xor
lods
pop
add
and
fisttpl
mov
icebp
stos
fimuls
add
shll
das
and
xor
aad
sub
sub
mov
lret
mov
mov
inc
jnp
cmpl
cli
call
sti
testl
enter
mov
stos
stos
pop
push
jge
add
out
push
jecxz
xchg
std
mov
dec
test
sbbl
sub
adc
xchg
mov
pop
mov
pop
cs
xchg
jbe
push
ret
decl
lods
jnp
and
jbe
iret
pop
shlb
shlw
and
cld
das
xor
cmp
int3
xor
pop
outsb
dec
loopne
out
inc
mov
jno
push
sbb
pop
dec
cmp
adc
jmp
int
in
imul
push
mov
dec
jecxz
jne
and
push
dec
and
sti
ljmp
das
sete
test
dec
adc
sub
or
dec
adc
jmp
xchg
mov
je
cmpsb
in
add
inc
inc
cmovle
cmpsl
fisubs
push
std
mov
jle,pn
ds
sbb
adc
pop
pop
push
sar
or
sbb
push
out
push
cmp
decb
lcall
scas
inc
sub
adc
mov
xchg
out
xchg
test
imulb
mov
or
lcall
adcl
pop
sbb
adc
inc
mov
jmp
icebp
cli
jbe
mov
adc
ljmp
stos
dec
les
rclb
push
pushf
mov
mov
adc
js
mov
iret
xchg
push
mov
and
cltd
mov
repz
xorl
and
pop
clc
mov
fdiv
pop
popa
pop
shlb
mov
cmpsl
mov
pop
je
in
pop
mov
pop
into
adc
or
fidivrl
inc
or
into
xchg
add
or
and
decl
jl
xorb
ss
mov
ret
lcall
inc
testb
cs
lods
or
stos
jp
and
sbb
cld
xor
enter
dec
pop
mov
jecxz
out
add
ja
push
inc
xor
lahf
out
lret
js
xor
sub
cmpsb
mov
push
sub
daa
cmp
push
sbb
cmp
in
add
adc
pop
push
int
xchg
sahf
xchg
adc
xchg
mov
mov
clc
fsubr
jne
cmpsl
outsb
xchg
jbe
inc
sub
adc
adc
es
xchg
push
push
cld
adc
into
jbe
jge
mov
pop
push
lock
pop
mov
iret
adc
aam
push
addb
cmp
out
xchg
xchg
add
in
mov
pop
mov
sbb
mov
in
adc
stos
jp
cmp
inc
js
mov
mov
in
mov
jmp
in
mov
xlat
loop
imul
mov
or
xchg
loopne
jp
jg
roll
pop
add
ret
mov
adc
inc
pushf
push
push
imul
sbb
cmp
pop
ret
push
mov
lock
mov
jb
jmp
mov
mov
push
and
fst
pop
pop
push
out
arpl
push
mov
dec
inc
add
and
mov
loopne
jb
adcb
repz
mov
dec
dec
mov
push
adc
aam
lds
xor
das
jno
lock
rcrb
call
int3
push
stos
data16
mov
adc
and
into
cmc
call
pop
clc
push
fdivr
int3
sub
cmp
mov
rcl
aaa
mov
lds
mov
xchg
sub
push
jg
outsl
mov
rcrl
outsl
push
sbb
lcall
in
mov
pushf
jg
push
sarb
sysexit
push
xor
gs
mov
das
add
ja
cltd
add
mov
cmp
or
adc
outsb
cmp
cmp
cmp
xchg
pop
loope
nop
sbb
loopne
adc
int3
push
fmuls
pop
jo
sbb
stos
or
and
push
inc
sbbl
fists
mov
cmpsl
xor
push
addb
jp
fdivs
stos
ss
sub
pusha
ljmp
sbb
push
scas
cltd
cmpsb
sti
pop
cmp
test
sbb
push
mov
lods
lret
inc
incl
adc
sub
push
mov
inc
lock
inc
aad
jo
xor
std
mov
ljmp
and
push
inc
mov
inc
test
shrb
push
test
dec
les
lock
movsl
adc
insl
cmc
fucomi
in
mov
mov
push
iret
pusha
cld
xchg
or
sahf
pop
test
xchg
mov
das
xchg
jne
sarl
les
mov
pop
adc
je
fsubrp
scas
inc
arpl
ja
lret
pop
cld
pop
dec
push
out
sbb
cld
or
jbe
or
out
mov
clc
sbb
push
add
sub
in
add
dec
cmp
lcall
xor
or
or
fimull
sub
cld
lcall
sahf
mov
lcall
fs
fisubs
insb
test
and
imul
sbb
stos
xor
or
das
sbb
out
mov
imul
sub
mov
sbb
cmp
inc
bound
sbbb
neg
sub
nop
sub
mov
push
sub
push
xchg
push
jb
and
faddp
lahf
inc
adc
inc
pop
sarl
test
call
mov
adc
dec
into
cmp
mov
fimull
mov
xor
push
or
mov
sub
inc
mov
xor
jle
mov
or
sbb
push
mov
addb
fsubrs
outsb
sbb
pusha
dec
in
loope
push
xor
movsb
jecxz
repz
popl
sbb
ljmp
mov
stc
sbb
cmp
adc
inc
or
cmpsb
xorb
cmpsb
push
xchg
and
fstpl
mov
add
clc
out
cs
lahf
cmp
es
ss
lods
or
mov
outsb
push
push
xchg
insl
inc
cwtl
cmpsb
daa
mov
mov
add
call
pop
jns
in
xchg
sbb
aaa
loop
gs
cmpsl
subb
or
decb
nop
fisttpll
in
mov
outsb
filds
inc
call
pusha
mov
es
int
push
xchg
decb
mov
mov
dec
push
sub
adc
into
cmp
js
nop
rorb
ljmp
sub
add
mov
rcrb
aaa
dec
push
out
lock
dec
inc
sub
je
sbb
test
in
jbe
push
pushf
push
adc
or
push
pop
dec
dec
cmp
jle
ret
mov
nop
jbe
hlt
mov
mov
jecxz
inc
lahf
aad
add
mov
and
insb
cmp
mov
hlt
pushl
imul
jmp
add
sub
cwtl
jle
call
fs
pop
addb
mov
pushf
jmp
push
mov
mov
mov
dec
ss
fistl
inc
adc
pop
jl
out
cli
in
stos
hlt
cwtl
aad
dec
xor
jmp
ror
mov
push
inc
xchg
scas
push
cli
jnp
xor
add
push
pop
sbb
push
push
pop
xor
inc
pop
lret
loopne
mov
mov
and
mov
enter
sbb
loop
inc
mov
fwait
in
fidivs
sbb
cwtl
cli
dec
in
mov
add
jo
push
xlat
arpl
mov
test
push
fbld
data16
xchg
jp
xchg
adc
sub
jl
sub
addb
test
shll
mov
xorb
ja
shlb
ret
test
les
adc
aad
icebp
scas
jp
push
jp
mov
or
lods
mov
jecxz
loope
jl
mov
leave
test
and
outsl
and
out
cmpsb
les
push
lods
mov
pushf
inc
test
enter
push
add
push
add
lret
daa
add
jg
add
inc
mov
ror
into
and
cs
sub
mov
mov
adc
or
and
or
mov
push
jo
pop
jl
std
mov
insl
dec
pop
ja
or
jae
int3
ljmp
hlt
or
push
fs
out
iret
in
push
idivl
push
cmc
aas
push
inc
mov
outsb
xor
dec
fildll
lds
pop
cmpsb
and
icebp
iret
and
data16
mov
inc
in
cs
aas
ret
cmp
or
daa
fcmove
add
cmp
sti
and
fsubrs
push
push
inc
loopne
out
xor
xor
cld
pop
sub
pop
ss
sbb
ret
mov
and
lds
inc
scas
mov
stos
jp
in
mov
add
lret
scas
notb
push
xor
push
xor
icebp
aas
and
test
mov
push
dec
dec
lock
pop
mov
insb
xchg
push
fdivs
fisubs
clc
cwtl
xchg
stos
fdivl
ja
adc
inc
mov
xchg
dec
rcrb
xchg
pusha
cmp
loope
cmpb
je
sbb
addr16
in
test
sub
pop
cld
mov
xor
lahf
js
sahf
sarb
mov
mov
mov
aaa
jne
out
les
pop
repnz
jg
xchg
xor
icebp
add
sub
and
mov
mov
call
sub
stos
decl
mov
cmp
daa
lods
sub
mov
ljmp
shrb
imulb
ret
lret
fwait
inc
mov
movsb
mov
call
scas
xchg
dec
call
clc
mov
loopne
std
fwait
lods
dec
in
dec
rclb
clc
xchg
xchg
negl
add
and
pop
sub
push
mov
sub
icebp
mov
repz
cli
mov
stos
icebp
decl
fisttpll
inc
jo
cmp
stos
pop
loopne
jmp
jl
and
xchg
mov
hlt
adc
cld
cmp
inc
sbb
xchg
rcll
int
jbe
dec
mov
pop
mov
movsl
bound
outsb
test
in
jmp
jmp
ss
fstpt
adc
xor
mov
sbb
jecxz
push
mov
bound
ljmp
sub
cmc
out
pop
cmp
mov
cmpsb
in
idiv
sbb
push
cmc
out
lods
push
clc
xor
mov
stc
dec
adc
cmp
xchg
cld
sbb
sub
xor
es
cmp
pop
inc
fst
movsl
std
imulb
mov
rcrb
sbb
mov
xchg
pushf
stos
cli
sbb
pop
mov
fisttps
test
add
testl
call
mov
enter
lock
clc
outsl
pushl
jno
push
xor
add
out
sub
outsb
inc
dec
loop
jnp
sub
dec
jbe
push
mov
imul
ljmp
cmp
gs
push
sbb
inc
insb
xchg
ljmp
mov
stos
mov
in
fldz
pop
xchg
mov
les
ret
fistpl
mov
dec
loop
decl
ret
ja
out
outsb
sub
repnz
adc
add
cmp
and
xor
push
outsl
lret
loope
adc
sahf
sbb
xchg
xor
inc
std
insl
or
xchg
pop
adc
aaa
mov
jo
sub
xchg
cld
addr16
xor
mov
loope
into
pop
pop
loopne
jg
rcll
mov
xor
pop
loopne
inc
ret
sub
lods
fmuls
inc
idiv
test
fdivl
rorb
add
pop
mov
jg
push
pop
fcomps
addr16
lock
shll
adc
cmp
das
or
arpl
push
inc
dec
clc
fdivrl
inc
mov
pop
testl
pushl
scas
ficompl
dec
loop
and
subb
scas
std
fs
push
jb
test
sub
das
dec
add
push
shrb
fbld
and
pop
adc
jb
daa
pop
sub
clc
cli
aaa
mov
shlb
fdivs
data16
scas
xchg
mov
jae
stos
add
add
mov
add
push
shlb
add
fbld
sub
jno
and
stos
mov
call
pop
or
call
and
xchg
les
or
sbb
pushw
sub
idivl
push
push
push
push
jno
movsl
or
popf
jp
int
cld
sub
xchg
pop
in
jp
into
pop
mov
rolb
cmc
sub
dec
xchg
loope
xorb
add
or
mov
mov
jb
push
loopne
jle
jb
daa
gs
enter
sbb
ret
dec
cld
movsl
pop
and
mov
lcall
cs
data16
test
add
les
jp
lods
int
divb
insl
mov
jp
mov
xor
fisubl
test
pusha
mov
sub
pop
mov
test
lcall
push
test
loop
rol
mov
add
mov
dec
or
sarb
mov
jne
ljmp
outsl
mov
out
pop
dec
ror
mov
mov
cmpb
test
push
jg
loop
sbb
sub
xor
nop
clc
jl
inc
lcall
mov
insb
lods
leave
ljmp
std
inc
movsb
cwtl
adc
pop
jg
clc
ss
call
mov
add
sub
inc
pusha
lods
sbb
testb
mov
cmpb
dec
fs
pop
cmp
call
pop
mov
jg
push
ljmp
dec
je
je
jb
pop
test
dec
or
test
cmp
push
or
push
mov
mov
lret
std
lds
incb
imul
cld
pusha
mov
shll
pop
xor
xor
sub
movsb
scas
es
call
mov
popf
clc
sub
jns
add
inc
inc
fmuls
fstpt
push
cld
inc
dec
dec
test
jg
decl
scas
inc
lret
or
pop
xchg
test
mov
mov
decl
push
ds
mov
push
mov
jne
dec
or
add
jo
clc
into
lock
mov
push
clc
inc
cltd
jne
daa
pop
outsb
jle
mov
gs
and
sbb
ds
add
test
push
pop
out
stos
and
push
xchg
lcall
sub
push
lods
push
lcall
pop
pop
pop
mov
cmp
in
sub
push
lcall
cmp
testb
mov
loopne
dec
arpl
scas
jecxz
in
mov
mov
in
aaa
fsubrl
jmp
out
fwait
mov
add
std
push
jmp
jne
mov
and
mov
xchg
insl
pop
mov
hlt
mov
jl
and
popf
loope
xor
loope
call
scas
cmpw
cmp
decl
das
ret
xor
push
inc
and
ljmp
js
lahf
dec
fdivr
cmpsl
mov
mov
fstpl
negl
push
popa
fnstenv
scas
jns,pn
dec
adc
push
dec
cli
pop
push
add
mov
dec
repz
cmp
jo
fiadds
jecxz
lods
les
movsb
pop
in
adc
cli
stos
adc
fwait
cld
cmpsb
int
insb
mov
mov
mov
outsl
pop
enter
push
pop
adc
pop
dec
dec
data16
inc
push
cli
jae
mov
xchg
in
fucomi
pop
and
stos
pop
push
pusha
movsb
jge
out
mov
or
jbe
das
push
cmp
iret
out
cmp
jge
inc
sarl
cld
sbb
cmpsl
pop
push
jg
ret
mov
addr16
xchg
out
js
sub
ret
gs
popa
or
jl
adc
insl
mov
mov
mov
pushf
ss
lock
dec
and
sbb
insb
rolb
push
lods
adc
cld
xlat
cmp
sub
pushf
iret
cmp
xchg
jae
mov
add
cli
xchg
imul
fcomi
out
pop
xor
ljmp
mov
test
cmc
or
es
or
cwtl
lods
sbbb
sub
adc
ljmp
inc
sub
mov
push
xchg
mov
or
mov
dec
xchg
sub
bound
sub
mov
push
pop
rorb
sub
mov
cmpb
or
and
jo
fwait
outsb
addb
push
daa
adc
jle
clc
call
pop
push
xor
mov
mov
mov
lcall
test
push
push
mov
fcomip
adc
sbb
rcrl
daa
mov
jle
loope
in
subb
ret
add
in
mov
cmp
mov
dec
sbb
push
push
adcl
nop
pop
lock
mov
fs
les
rcrb
call
sub
inc
push
add
mov
ftst
loope
decb
mov
inc
cmp
loope
xchg
rclb
fisubl
mov
xchg
hlt
decl
in
inc
out
lret
pop
aaa
stos
jo
and
cs
pop
ja
inc
jns
insl
jg
mov
pop
and
fwait
or
inc
cs
add
xlat
adc
sub
and
sbb
jp
jmp
inc
fdivl
out
aam
cmp
jbe
es
add
jno
mov
mov
in
mov
pop
pop
push
pop
sbb
and
sub
inc
cwtl
mov
in
ret
out
sahf
cmp
adc
outsl
push
idivb
cmc
aam
inc
jg
jmp
mov
push
mov
jg
into
js
add
scas
or
pop
mov
sbb
or
bound
shrb
insb
movsl
fists
mov
pop
pop
repnz
out
cli
mov
or
clc
std
or
mov
mov
jle
cmp
mov
jmp
lahf
fstl
push
cmp
jp
mov
repz
mov
gs
call
repnz
mov
or
das
clc
and
sbb
and
pusha
dec
rcrb
jp
cmp
daa
sub
iret
inc
add
inc
push
out
jl
imul
push
jne
lcall
fistps
mov
mov
fs
cld
cli
mov
xor
mov
es
test
inc
sbb
or
testb
and
sbb
ljmp
mov
lock
and
arpl
out
shlb
dec
or
fisubs
clc
jp
jno
inc
jbe
adc
icebp
les
gs
xor
cmc
and
mov
enter
std
mov
jnp
repnz
dec
addl
inc
lds
jge
mov
inc
adc
mov
lahf
or
adc
aas
cld
or
jmp
clc
xchg
fiadds
pushw
cld
sub
ljmp
pop
lods
adc
jnp
dec
imul
mov
mov
cmp
test
jg
loop
loopne
sbb
aaa
sbb
sahf
sbb
je
cmpsb
or
mov
scas
clc
cs
mov
add
xor
ds
jp
push
xchg
and
add
mov
push
sbb
cltd
and
test
andb
push
js
loopne
push
mov
mov
dec
incl
test
sahf
das
movsb
mov
push
test
scas
jo
jecxz
xchg
mov
in
mov
sub
aaa
lods
sub
inc
jge
mov
mov
cmpsb
sahf
or
jg
lcall
popf
mov
loope
aas
idivb
push
inc
pushf
outsl
ret
jg
pop
mov
xchg
mov
jge
push
fcmovu
jle
sbb
cltd
dec
aaa
pop
mov
inc
fdivr
fistl
adc
inc
mov
sahf
jl
pop
imul
and
add
sbb
bound
stos
pop
hlt
out
add
inc
jbe
xchg
pop
loope
aas
adc
repnz
inc
aam
lds
add
daa
sahf
repz
je
sbb
mov
add
mov
fisubl
mov
leave
xlat
rol
or
or
pop
xchg
and
dec
add
std
pop
inc
cs
lret
in
in
xchg
mov
mov
adc
cwtl
mov
xchg
jno
jb
std
inc
cmpsl
pop
push
push
mov
call
in
lock
mov
dec
lret
sbb
add
ljmp
or
clc
pop
jno
mov
mov
xor
nop
lcall
fs
mov
popl
test
inc
adc
mov
xor
jae
push
clc
fdivrl
scas
ljmp
mov
dec
lcall
test
sub
sbb
mov
jbe,pn
jo
push
dec
test
sahf
adc
iret
jge
pop
incb
out
add
xor
add
mov
addr16
insl
push
and
jg
or
js
rcrb
call
sub
add
mov
lea
push
or
lods
imull
xchg
push
lods
fdivs
or
cli
jg
icebp
push
jo
ljmp
pop
adc
jno
push
push
and
mov
pop
sub
jbe
fisubs
rcrb
imulb
lret
sub
or
clc
ja
sub
fisttps
dec
jle
icebp
cmpb
filds
xchg
mov
ljmp
sub
mov
dec
les
push
lcall
mov
mov
int
xor
test
jl
add
mov
or
xor
pushf
push
and
mov
mov
lcall
hlt
and
outsl
sub
xor
in
cli
int3
sbb
xchg
js
mov
lods
sub
je
sbb
sbb
pop
fisttps
ss
gs
sbb
fidivl
push
rol
das
inc
scas
fwait
lea
leave
je
popf
sbb
or
cli
mov
int3
fwait
adc
xchg
lods
mov
sar
in
and
jge
and
mov
xchg
inc
jmp
and
push
mov
mov
xchg
sbbl
sbb
ljmp
mov
cld
in
shlb
test
push
int
loope
and
mov
pop
dec
inc
pop
ds
sub
test
aaa
sahf
sbb
ss
decl
xchg
dec
repz
aam
sbb
adc
movsb
push
cmp
sub
jmp
nop
mov
adc
pop
push
ret
rcrb
scas
mov
das
addb
shlb
nop
iret
out
xorb
movsb
flds
or
add
les
rorl
bound
mov
and
mov
stos
mov
lods
or
add
aam
loopne
xorb
mov
fadds
add
xor
ret
inc
or
adc
mov
std
insl
and
imul
mov
pop
mov
sbb
jb
push
push
ss
add
stos
pushf
push
es
call
fidivs
cwtl
add
out
dec
cmp
xorb
sti
cmpsl
push
xchg
lds
rcl
inc
jl
cmp
mov
fcomi
addl
add
mov
mov
aaa
ret
repnz
aam
sub
popf
push
cmpsb
stc
aaa
insb
xor
loopne
mov
out
mov
sbb
push
ljmp
loope
dec
lock
hlt
shl
shll
ja
cli
imul
mov
push
hlt
iret
pop
clc
or
adc
xor
cmp
adc
ja
sub
and
push
movq
out
fmuls
les
mov
xchg
dec
fadds
mov
cli
add
cmp
dec
repnz
arpl
scas
rclb
push
or
push
call
lods
xchg
push
inc
xchg
insb
push
add
adc
stos
xor
shlb
xorl
std
mov
sub
mov
incb
xor
and
push
out
loop
insl
rcll
adc
stos
aam
mov
sbb
cs
jl
gs
je
je
push
pop
ja
push
push
ds
ss
ja
or
cmpsb
mov
xor
mov
les
ret
je
in
sar
mov
mov
dec
imul
inc
xor
or
sbb
ficoml
push
incb
cli
cmp
clc
bound
jl
jle
clc
pop
push
sub
or
cli
fs
out
push
ljmp
dec
sbb
das
mov
xchg
decb
xlat
mov
fwait
pop
jmp
xor
test
xor
or
mov
inc
bound
shl
mov
out
push
adc
mov
adc
dec
pop
adc
in
push
fdivr
ljmp
mov
push
mov
ja
sahf
mov
ds
xor
jecxz
popa
mov
mov
lret
stos
cmpsb
sarl
subl
push
lret
sub
add
xchg
out
adc
out
pop
and
xor
sbb
adc
push
or
dec
pop
mov
sar
or
push
in
fmull
sub
push
cmp
mov
mov
rorb
insb
bound
sti
call
sar
jle
fsubl
test
cld
xor
icebp
xchg
subl
nop
lea
sbb
adc
sub
ss
mov
jl
lds
std
sub
cld
cmp
les
gs
add
outsl
push
fimuls
mov
pushl
add
push
add
stos
lods
push
mov
ss
aam
mov
cmpsb
fs
loop
jg
mov
lahf
sbb
inc
out
mov
pusha
add
or
mov
push
out
addr16
and
cmp
subb
or
incl
icebp
fsubrs
add
outsl
mov
es
xor
push
dec
jmp
incl
leave
stos
lods
add
outsb
repz
xchg
pop
shr
fadd
add
pop
pop
sbb
ja
mov
cmpsb
inc
xchg
data16
popa
mov
mov
push
movsb
inc
xor
mov
jb
mov
xchg
arpl
cmp
mov
mov
add
pushl
jnp
pop
push
ja
push
fsubr
inc
push
mov
lret
bound
add
and
into
push
adc
cmp
je
jmp
in
jo
xchg
pusha
and
xor
cmp
xlat
dec
call
push
fmuls
xchg
add
ficoml
jbe
push
jecxz
inc
out
add
clc
push
inc
aam
add
adc
scas
pop
cld
xchg
lock
adc
js
insb
jle
pushl
adc
sub
jle
mov
sub
insb
sub
sub
mov
mov
mov
or
fstpt
ffreep
fucomip
adcb
fs
jo
scas
add
lahf
stos
aas
xor
adc
in
dec
adc
ljmp
lret
adc
inc
jno
jbe
mov
rcl
outsb
sub
popa
int
pop
test
and
pushl
add
sbb
mov
push
jbe
and
mov
ret
lret
inc
fildll
inc
push
xlat
movsl
sbb
aam
sbb
stos
push
adc
lahf
les
test
mov
mov
out
sub
ficoms
xor
insb
push
inc
clc
jg
mov
cmpsl
adc
jo
mov
xchg
ret
hlt
fbld
xchg
push
cmpl
sbb
fisttpl
jbe
jns
mov
mov
xchg
js
fiadds
jg
inc
push
jb
add
and
inc
aas
fidivl
inc
lcall
adc
dec
push
xchg
xor
xor
mov
mov
subb
decl
mov
je
into
test
inc
stc
dec
and
out
cld
sub
dec
sub
or
or
inc
pop
call
xchg
push
adc
xor
testl
mov
add
cli
pop
add
cmp
jbe
sbb
fbld
nop
xor
adc
dec
mov
fneni(8087
xchg
mov
jno
dec
mov
jne
mov
test
sbb
xchg
pop
inc
dec
inc
nop
mov
std
jg
lcall
inc
sub
sub
jecxz
add
mov
movsb
push
mov
add
insl
or
jo
daa
mov
lds
loop
pop
mov
outsl
fmul
stos
or
sahf
sub
adc
sbb
ja
lea
cld
sub
or
imulb
mov
pause
push
cmc
dec
xor
loop
aas
hlt
in
mov
mov
mov
out
add
mov
sub
cmp
jno
and
int3
jp
push
pushl
mov
rcrl
fsub
daa
mov
add
adc
pop
les
add
push
scas
fs
sbb
xlat
ljmp
dec
xlat
mov
int3
es
inc
mov
adc
push
and
xchg
dec
lcall
mov
ljmp
xchg
mov
hlt
daa
mov
in
pop
push
jp
and
mov
adc
xchg
xor
mov
add
fwait
fs
add
ljmp
xor
insl
xor
pop
scas
inc
pusha
pop
or
ja
and
in
jno
ret
and
or
jge
jns
push
add
and
inc
cmp
inc
cld
sarb
jbe
pop
popa
sub
rclb
out
out
stc
adc
aam
sub
jg
adc
test
sub
jnp
sub
mov
xor
pop
gs
mov
aaa
xchg
arpl
xchg
adc
xor
mov
mov
ret
jle
into
insb
fists
and
shlb
and
sub
and
mov
adc
scas
enter
mov
mov
addl
xchg
loopne
lahf
dec
in
add
sbb
cli
movsl
lret
xchg
jbe
cltd
adc
mov
or
inc
inc
mov
mov
orl
jmp
decl
push
loop
lahf
inc
icebp
movsb
fists
or
xchg
mov
cmp
fwait
add
int3
push
inc
ret
popa
xor
loop
mov
enter
jmp
stc
sbb
add
loop
int3
repnz
cmc
jne
sub
pop
dec
or
dec
xlat
lods
pushf
adc
insl
clc
inc
cli
insl
data16
mov
scas
mov
or
or
pop
out
and
push
push
inc
xchg
inc
mov
push
out
adc
sbb
sbb
push
mov
mov
dec
push
xchg
mov
lahf
pop
fwait
push
sbbl
clc
idivb
test
mov
into
addr16
jmp
or
and
out
xchg
jmp
sub
mov
mov
outsb
out
dec
add
ret
or
xchg
jnp
enter
cld
mov
andb
adc
xchg
sbb
push
pop
jb
fists
les
add
xor
mov
push
std
pop
or
sbb
incl
adc
pop
sbb
mov
dec
fbld
pop
inc
or
pop
fdivrs
jne
aam
cmpsb
pusha
xor
dec
daa
push
mov
arpl
call
or
sub
mov
inc
nop
enter
loop
mov
push
add
fstpt
add
sbb
test
mov
push
into
mov
mov
jg
incl
cs
nop
lret
push
in
mov
sub
xchg
int3
push
es
nop
std
and
cli
fisttpl
mov
adc
iret
add
jnp
push
pop
movsl
cmpsl
dec
les
jns
push
add
mov
dec
fnstcw
dec
addr16
cmpsb
cmpb
test
xchg
pop
mov
and
push
daa
jo
clc
lock
mov
xchg
in
cmp
dec
andl
rolb
insl
ds
outsl
xchg
jg
ret
js
cld
adc
push
inc
cmp
insb
pop
daa
movsl
and
adc
loop
psubusb
add
adc
jg
scas
scas
scas
mov
int
lods
cs
push
adc
push
xor
hlt
inc
adc
cmpl
xor
adcb
movsb
pop
in
fs
cmp
mov
call
and
test
pop
mov
cwtl
sbb
jp
scas
xchg
mov
dec
rcl
sti
outsl
fdivrs
ret
sub
shlb
mov
call
aam
ljmp
fisubl
xchg
cli
decl
cmp
xor
jp
adc
outsl
rorl
int3
cmpsl
das
ss
aam
mov
jle
pop
test
int3
pushf
mov
clc
decl
mov
mov
icebp
pop
ljmp
xchg
inc
jmp
ljmp
enter
lcallw
push
xchg
inc
data16
dec
or
addb
cmp
inc
cli
fwait
or
mov
or
add
movsb
xchg
nop
fwait
xchg
pop
shll
pusha
into
sahf
icebp
into
jle
test
xchg
loopne
dec
jge
movsl
push
cmp
and
xchg
inc
jg
or
mov
mov
mov
and
pop
sbb
mov
mov
popa
xor
sbb
add
sahf
daa
outsl
rorl
fistl
loope,pn
push
and
rclb
cli
and
dec
mov
pop
inc
sbb
scas
jns
pop
inc
je
shl
jmp
lock
loope
insb
cld
ss
clc
popa
cwtl
and
imul
cli
add
cld
inc
int
mov
inc
xor
jmp
sbb
xor
cwtl
pop
rolb
mov
jbe
dec
jp
adc
sub
mov
scas
mov
push
nop
clc
decl
negl
pop
push
fistl
das
ljmp
mov
mov
push
cli
push
sti
mov
pop
lahf
fcompl
int3
xor
or
shrb
rcrl
fcomip
xlat
dec
test
and
in
xchg
mov
cli
cmp
test
jecxz,pt
mov
int
jnp
and
mov
and
push
pop
add
clc
jecxz
dec
imul
mov
lods
fldcw
scas
hlt
mov
jmp
dec
sub
xchg
and
dec
mov
mov
mov
adc
xchg
add
xchg
fs
jg
sub
inc
adc
xchg
mov
mov
lea
fimull
or
inc
mov
push
xorl
insb
and
xchg
jo
jmp
scas
stos
fiaddl
mov
and
mov
pop
sub
sub
mov
sub
aad
data16
mov
mov
or
pop
test
push
or
cmp
ds
test
mov
sarb
xchg
push
rcll
lret
xchg
pop
inc
cmp
enter
sbb
add
push
mov
stos
sub
xchg
js
test
loopne
out
fidivrl
inc
in
scas
mov
xchg
mov
bnd
outsl
filds
icebp
cmp
or
aad
rol
jmp
mov
pop
out
cltd
test
rcrb
cmpsb
sbbb
adc
pop
push
or
int3
mov
sbb
imul
sub
add
pushf
jp
int
jne
pushf
sar
gs
and
les
mov
xor
adc
pop
test
scas
daa
scas
clc
and
ljmp
ret
outsb
jg
mov
aas
pushf
xchg
and
xchg
shlb
aam
dec
mov
add
cmp
jecxz
rcr
out
cmp
sbbl
xorl
loopne
andb
testb
mov
or
mov
sub
call
add
jae
imul
aad
and
mov
or
jg
arpl
pusha
leave
jne
cmpsb
rcll
pop
aaa
jno
add
xchg
adc
add
xchg
pop
jno
mov
clc
xchg
out
mov
mov
mov
sbbb
imulb
fwait
jle
mov
shll
mov
fisubrs
rolb
mov
pop
sbb
xchg
int3
dec
pop
sbb
lea
rol
pop
outsl
xchg
mov
lcall
sub
in
mov
push
in
add
imul
sbb
push
push
ficompl
xchg
shrb
fnsave
fisubrl
sbb
xchg
ljmp
mov
in
pop
jo
mov
mov
add
xor
push
jnp
scas
mov
jecxz
lock
pop
sbb
cmp
lahf
and
inc
jl
sub
out
pushf
lcall
pop
push
add
bound
loopne
push
hlt
mov
push
mov
cld
loope
cmp
or
rorb
mov
push
jg
jno
sbb
popf
in
add
lods
cmp
dec
mov
cwtl
dec
adc
cld
int3
cmc
ss
cmc
xor
push
dec
loopne
mov
adc
fmuls
xchg
stos
cmp
lcall
mov
les
mov
mov
mov
test
push
movsb
inc
push
loop
aam
decl
jnp
loopne
cmp
andl
sub
push
fadds
adc
jb
es
pop
mov
mov
shrb
add
dec
icebp
cmpsb
and
cld
mov
add
movsl
fisttpl
int3
jecxz
movsl
aas
push
adc
mov
push
jns
and
rclb
daa
popa
mov
adc
call
mov
jle
mov
test
sbb
push
mov
mov
outsb
mov
das
shrl
insb
pop
add
and
xchg
sub
mov
mov
lret
cs
push
stos
adc
imul
lock
push
rolb
mov
addb
inc
fcom
imull
dec
push
pop
jbe
mov
adc
repz
loop
cvtps2pd
pop
in
test
cwtl
jp
pushf
out
push
je
xlat
hlt
ljmp
gs
push
imul
mov
rcl
pusha
cmpsl
and
push
dec
ljmp
or
cmp
jo
cmpsb
call
jg
mov
pop
js
stos
lahf
inc
mov
icebp
mov
add
test
mov
cmp
subl
xchg
js
repnz
mov
mov
mov
movsb
and
or
cmpsb
sub
inc
pop
pop
enter
push
push
jp
push
lods
or
push
push
mov
shlb
movsb
push
pop
std
add
mov
dec
rcl
jbe
outsl
xor
cmp
sarl
mov
inc
nop
sbb
add
jnp
mov
mov
sahf
aas
inc
jg
jb
sub
mov
xlat
fists
dec
or
das
adc
daa
imul
call
repz
mov
xchg
xorl
mov
mov
adc
dec
fisttps
incb
cwtl
cltd
hlt
orb
lahf
mov
inc
and
xlat
js
fwait
xchg
pop
cmpb
cmp
cmp
xor
adc
push
jo
mov
adc
cli
pop
xor
jnp
out
mov
icebp
pop
insb
mov
inc
pop
test
cmp
inc
int3
xor
lds
imull
pop
push
add
and
push
stos
rclb
xor
and
mov
mov
and
dec
cmpsb
scas
jle
loop
movsl
dec
inc
pop
outsb
daa
f2xm1
ret
and
push
sub
push
incl
xchg
push
rcr
popa
mov
cmpl
mov
mov
mov
cld
xchg
dec
sub
cltd
pop
xchg
and
mov
movsb
cwtl
xor
shlb
cmc
or
pop
sbb
mov
sbb
jb
pop
mov
jle,pn
movsl
les
sarl
mov
rorl
out
cltd
jb
leave
enter
inc
and
sub
leave
pop
rolb
addr16
jns
push
push
jl
inc
jl
mov
aas
adc
scas
js
enter
and
inc
xchg
imul
xor
pop
out
mov
and
mov
in
xchg
adc
jae
or
bound
popa
inc
incb
fld
fldcw
add
cmc
sub
pop
xor
adc
jne
adc
loope
rcrl
popf
xchg
xlat
std
add
mov
ljmp
push
popf
mov
mov
sbb
jmp
push
mov
and
jp
xchg
sub
xchg
dec
dec
loop
pop
lods
popa
mov
cs
lock
jno
or
push
push
js
shrb
les
fsubl
sbb
xchg
test
lahf
inc
mov
push
push
inc
pop
mov
mov
push
int
filds
rolb
test
mov
aam
mov
jbe
aad
repnz
fadd
dec
movsb
mov
movsl
addr16
push
mov
lret
jbe
cmp
mov
je
popf
and
test
cmc
movsl
testb
ret
lret
sub
subl
inc
pusha
fisubrs
dec
pop
rcrb
mov
mov
inc
orb
js
rorl
lods
inc
adcl
jg
andl
mov
test
sbb
movsl
fs
lahf
pop
call
es
jmp
pop
jp
rcr
mov
adc
add
xor
out
and
mov
sub
xor
xchg
push
leave
fcmove
xchg
movsb
add
subb
cmc
fnstenv
mov
insl
call
insl
shrb
jne
stos
jl
jl
xchg
mov
or
stc
jae
cmp
pop
adc
jecxz
xchg
imulb
add
inc
jp
mov
movsb
push
lds
shl
lcall
loop
fistl
movsb
push
lods
pop
push
adc
jl
mov
add
fisubl
add
sbb
xor
nop
mov
lret
popa
adc
aaa
mov
pop
or
sub
and
mov
pop
enter
out
xor
push
or
test
subb
push
sbb
js
std
cmpsl
mov
mov
push
add
pop
and
jmp
data16
dec
arpl
jmp
and
stos
sbb
sahf
dec
dec
fldt
fcomip
pop
add
sar
vpmullw
mov
decl
fwait
jb
or
xor
mov
xlat
xor
or
bound
lcall
pop
cmp
outsl
and
jae
sub
insl
roll
add
sbb
das
sub
add
xorl
mov
jp
out
out
mov
insb
rclb
js
sub
mov
es
cmp
or
push
fmull
dec
adc
iret
cmp
jno
push
jge
mov
loopne
and
or
mov
aas
ljmp
fsubrl
fldl
movsb
inc
jmp
dec
push
jnp
js
sbb
ja
add
in
nop
jbe
ret
or
mov
std
aad
push
lahf
addr16
xor
daa
shlb
ret
incl
shl
loopne
imul
push
cmp
pop
jle
xchg
aaa
fadds
or
dec
stos
call
adcb
scas
shrb
push
cld
cld
pop
shll
in
jmp
push
loop
decl
sub
sarb
mov
add
icebp
xchg
push
mov
in
mov
clc
call
and
or
pop
xchg
clc
lods
loope
fildl
out
sbb
sahf
add
out
push
add
sub
out
or
xorl
adc
in
incl
adc
dec
lea
shlb
adcb
stc
scas
ss
mov
mov
cwtl
jle
gs
pop
std
test
cwtl
pop
adc
inc
pop
fildl
push
fsubrl
push
push
dec
or
xor
jmp
jmp
mov
movsl
loopne
push
push
rcrl
sbb
push
inc
push
or
xor
mov
cmpsl
movsl
sub
outsb
jl
xchg
stc
xor
mov
pushf
cmpsb
lret
dec
lock
std
lcall
sarb
dec
ljmp
mov
outsl
and
test
pop
sbb
cmpsb
fcomip
outsl
mov
jbe,pt
rcll
sahf
mov
xlat
shlb
push
adc
ss
push
ljmp
or
or
mov
gs
mov
push
xchg
sub
pop
or
shlb
dec
sbb
sub
imul
sbb
pop
push
aas
and
jecxz
mov
test
mov
xchg
out
nop
mov
jl
push
sarl
addb
pop
cltd
daa
loope
decl
cli
aas
ficompl
sbb
into
loope
mov
in
push
or
pop
dec
mov
pop
pusha
in
cli
adc
add
adc
roll
inc
push
test
or
mov
jg
pop
xor
loopne
das
mov
std
xchg
sbbl
gs
fwait
add
push
sbb
movsb
pop
in
xchg
cmp
das
mov
sub
xchg
icebp
pop
or
xchg
les
inc
ret
dec
cld
mov
push
clc
call
sub
insb
ret
cmp
lret
in
movsb
addl
decl
sbb
jno
pop
dec
dec
out
add
xlat
sbb
ror
jecxz
or
incl
mov
stos
adcb
lcall
aad
push
push
int
pusha
jle
sarl
hlt
adc
mov
mov
int
mov
sub
fs
fimull
pop
push
lods
fbld
push
stos
rcl
idivl
jmp
jb
loopne
les
fistl
arpl
jle
in
push
stos
mov
sbb
enter
add
mov
ss
dec
sbb
lahf
xor
cmpsl
mov
or
cmp
aad
push
push
sbb
sub
cli
fwait
and
movsl
stos
icebp
ret
pop
inc
xchg
mov
aas
rclb
push
dec
mov
xchg
push
push
sarb
cmc
decl
or
or
dec
xchg
ret
insb
mov
faddl
dec
pop
mov
cwtl
pop
mov
push
add
call
in
sub
push
xchg
insb
jl
mov
loop
out
inc
add
jge
mov
pop
pop
inc
and
pop
sbb
push
pop
xor
pop
insb
fs
add
test
insl
mov
mov
ja
or
fcmove
push
ret
cwtl
lret
and
and
enter
pop
push
sub
loop
push
ja
push
pop
inc
inc
xchg
dec
ljmp
int3
mov
popa
cld
imul
mov
mov
push
or
add
cmpsb
push
loope
ja
int3
or
jmp
imulb
daa
int
dec
add
xchg
int3
out
bound
jnp
jns
mov
cwtl
int3
mov
out
or
lahf
lods
clc
fildl
mov
sar
shll
pop
pop
xor
rorl
pop
sub
out
xor
lds
pushf
insb
les
mov
jg
mov
leave
enter
xchg
dec
add
scas
js
xchg
jmp
xor
fstpt
mov
arpl
and
jns
addb
jmp
nop
ds
mov
mov
inc
add
imul
inc
lret
push
loop
call
in
push
out
aam
push
mov
pop
test
adc
push
ss
test
popa
add
jg
lock
jns
push
aam
fbld
inc
and
jae
cmc
xor
fwait
test
aas
add
ljmp
mov
mov
fsts
arpl
shlb
scas
std
add
pop
mov
sbb
mov
cli
mov
or
lcall
ss
mov
call
mov
fdivp
sbb
push
orl
stos
mov
cmp
jne
lcall
cmp
mov
push
inc
loopne
sbb
inc
fnop
movsl
test
lock
pop
xchg
xchg
ja
mov
and
xchg
out
xchg
xorb
mov
shlb
imulb
xchg
push
cmp
fnsave
mov
pusha
or
mov
pop
test
out
sub
aas
cwtl
incl
jb
cmp
adc
jb
arpl
out
add
push
push
xor
jbe
fildl
mov
xchg
leave
mov
fwait
dec
std
pop
scas
mov
add
pop
inc
loope
mov
push
jmp
cmpsl
jne
sub
fidivl
adc
jne
jb
leave
ret
pop
es
jo
pop
xchg
or
ret
aaa
jb
pop
sarl
push
push
and
and
gs
js
cli
push
popf
pop
mov
mov
les
stos
mov
mov
aam
sub
mov
push
fcomps
lcall
push
and
fstl
and
jns
fstps
add
xchg
jmp
push
push
or
pusha
inc
xchg
bound
lock
adcb
dec
xor
ljmp
inc
inc
and
adc
push
das
in
push
lcall
jecxz
mov
adc
cld
mov
push
rcr
ds
lock
fldl
aas
je
lcall
les
push
inc
ficoms
push
lock
sbb
xchg
inc
inc
stos
fsts
jecxz
pop
mov
test
lods
jmp
sbb
pop
mov
stos
pop
mov
add
cmp
sbb
fsubl
push
andb
inc
clc
mov
ljmp
popf
inc
cld
lcall
pop
mov
xorb
sub
pop
xor
cmp
inc
xor
pop
outsb
cli
mov
lea
or
or
fisubl
mov
aas
xchg
mov
xchg
jge
decl
mov
sbb
mov
xor
popf
lret
hlt
jge
jne
mov
loop
lods
add
inc
mov
cmp
fisubrl
cli
and
pop
ret
aam
scas
out
adc
sub
cmp
data16
jb
sbb
pop
pushf
jmp
data16
and
xchg
lods
cli
xor
and
loopne
mov
mov
ja
clc
test
cli
mov
lcall
loop
or
inc
shrb
or
das
inc
shrb
loopne
push
sbb
decl
adc
inc
mov
sbb
mov
call
push
xchg
clc
mov
adc
insl
inc
decl
insl
cld
inc
xor
loop
dec
out
mov
add
adc
stos
jle
push
adc
fs
mov
mov
jp
pop
mov
push
enter
cld
incl
and
sub
lret
cs
insl
ljmp
cmpsl
fcomip
jg
push
outsl
inc
inc
jp
insl
cltd
enter
sbb
cmc
cmp
or
xor
mov
adc
xchg
std
lcall
sub
mov
lods
pop
adc
enter
add
pop
lret
insb
push
decl
out
scas
xchg
addr16
jl
icebp
mov
in
xadd
rcll
rol
leave
jo
adc
fbld
sbb
fst
into
jl
mov
stos
popa
lret
clc
mov
call
and
add
fdivrl
lock
sub
lcall
add
and
addr16
pop
test
inc
cmp
lock
hlt
mov
inc
or
xor
movsb
sub
mov
xchg
inc
sbbw
rorb
sub
testl
pop
or
pop
mov
ja
into
incl
or
push
lcall
dec
icebp
jnp
shlb
sbb
incl
andb
push
jge
dec
pop
or
in
mov
mov
std
jp
arpl
mov
mov
lock
stos
adc
insb
xchg
jns
mov
mov
cmp
push
or
or
push
bound
xor
mov
scas
adc
or
loop
std
pop
clc
lcall
mov
mov
mov
inc
fdivl
mov
std
in
mov
sar
and
lahf
fldt
mov
push
pop
mov
lahf
mov
js
clc
mov
pop
jo
sbb
mov
adc
add
inc
sbb
int
test
jnp
pop
stos
mov
lahf
and
cmp
in
addr16
inc
cmp
mov
cs
xlat
jg
aas
mov
dec
xor
jbe
mov
xchg
mov
jmp
pusha
ljmp
lock
mov
pminub
mov
jbe
lods
iret
or
fbld
jmp
xor
insb
add
into
push
xchg
and
lods
incl
loope
sbb
iret
pop
inc
mov
mov
add
push
mov
in
in
in
or
jg
push
outsb
mov
and
xor
cmp
xor
sub
xchg
test
std
pushl
mov
out
pop
xor
js
mov
sub
sub
call
push
cmc
scas
push
dec
ljmp
enter
and
movsb
and
movsb
or
aaa
adc
and
pop
xchg
subl
jmp
xchg
lcall
divb
jnp
outsb
mov
std
push
dec
and
ja
pop
add
cmp
mov
jge
mov
faddl
xchg
rcr
sub
pop
sub
loop
in
ljmp
sbb
sub
sbb
add
jno
jmp
bound
mov
call
fidivrl
fmulp
sbb
pop
inc
ds
cld
add
mov
adcb
add
in
mov
repnz
shrl
jl,pt
xchg
adcb
test
push
and
clc
and
sbb
mov
movsl
mov
add
sbb
jo
sti
cmp
pop
add
ja
or
clc
mov
jecxz
nop
xchg
int3
mov
ljmp
sub
cs
stos
xchg
lahf
or
and
sbb
cmc
pushl
xchg
sub
shll
and
mov
mov
cmp
dec
push
sbb
jle
pop
iret
or
test
cmc
push
sbb
jl
ret
fstpt
addb
clc
stos
or
sar
sbb
mov
dec
loopne
jge
imull
jmp
mov
int3
lret
adc
jp
jle
add
rcl
push
repnz
rcrb
inc
jmp
xlat
inc
incl
push
out
ss
mov
dec
adc
xor
lods
jecxz
clc
loope
ljmp
and
movsb
clc
test
add
pop
int
or
mov
dec
sbb
xor
out
je
mov
ds
cld
ljmp
add
ss
mov
adc
xchg
sbb
test
incl
in
cmp
aas
fwait
add
shlb
pop
jge
rolb
xor
inc
inc
xlat
push
rorl
test
repnz
movsb
pop
dec
xorl
aas
cmp
or
xchg
jg
jp
shll
lods
inc
cmp
cmp
dec
fdivrl
push
fadds
push
and
ficoml
fdivrs
add
dec
pop
sar
mov
insl
dec
lea
xchg
negb
fwait
sub
test
jo
jo
sbb
cmpb
and
out
ret
shufps
popa
popa
test
push
cld
jg
jne
icebp
loope
cmpl
mov
xchg
and
outsl
fisttpl
in
js
sbb
test
popa
add
lahf
sub
incl
push
ret
ficompl
decl
mov
notb
mov
fnstenv
push
xor
daa
adc
cmp
add
outsl
xor
mov
mov
cmp
jnp
mov
inc
repnz
stc
loope
adc
pop
icebp
mov
in
jno
jmp
push
mov
jnp
lret
xchg
sub
clc
int3
movsb
pushf
jmp
pushf
pop
pop
pop
adc
cs
and
fnstsw
mov
lods
push
cmpl
add
out
pop
movsb
sbb
xor
cltd
mov
jnp
cmp
imul
mov
int
iret
sub
push
clc
mov
dec
pop
or
cli
lahf
test
cmp
dec
pop
sub
pop
add
adc
aam
adc
xchg
in
push
cmp
inc
mov
and
data16
jb
cmc
fwait
dec
jecxz
mov
jno
pop
fstp
xchg
sahf
and
xor
cmp
cmpb
or
sarl
and
jecxz
or
xchg
roll
and
xchg
fisubrs
clc
ljmp
ds
sbb
incb
movb
jle
ljmp
push
add
jmp
add
or
mov
daa
outsb
jns
scas
add
add
adc
sub
xor
or
cmpl
cmc
jg
mov
push
xchg
jecxz
push
push
call
xchg
mov
stos
or
push
std
fucomip
adc
adc
mov
dec
dec
xor
mov
push
xchg
enter
mov
adc
repz
rclb
inc
sti
mov
mov
push
les
inc
xor
xchg
test
aaa
fdivr
imul
adc
mov
js
xlat
jae
mov
dec
std
rclb
subb
fadd
xchg
mov
call
stos
in
push
daa
dec
enter
sahf
decl
jne
pop
fwait
std
iret
xchg
sbb
aas
ret
pop
jbe
or
sbbb
pop
jecxz
xor
jne
fildl
cmp
jmp
popa
adc
adc
cltd
cmc
fisubrl
into
push
hlt
mov
push
mov
and
cmp
push
mov
push
cli
pop
lret
jp
cmp
rorb
icebp
jae
adc
cmp
xchg
sbb
pusha
cld
xchg
fisttpl
imul
xor
sub
cmp
mov
mov
into
xchg
gs
out
repz
sub
push
repnz
std
pushl
mov
pop
and
addr16
push
xchg
and
fdivp
decl
dec
push
ret
shl
mov
aam
cmp
iret
jo
push
mov
dec
sbb
adc
in
jno
clc
mov
jbe
mov
mov
sbbl
daa
push
decl
sub
pop
add
mov
adc
incl
gs
add
punpcklwd
mov
movzwl
xor
jb
pop
idivb
push
add
adc
and
lods
and
daa
sbbb
or
leave
push
xchg
pop
movb
pop
pop
fcmovne
dec
test
push
incl
in
and
xchg
cmp
push
notl
pop
lock
scas
jg
mov
cwtl
xchg
je
pusha
test
rorl
jbe
push
lock
pop
subb
stos
ss
pop
jns
xchg
cmpl
xchg
inc
inc
pop
or
mov
wrmsr
ds
mov
insl
loope
xchg
addl
js
mov
lock
lret
jp
addr16
or
pop
mov
xchg
mov
shlb
fists
cmpb
fs
iret
cmp
mov
les
and
aaa
adc
test
push
mov
fsubrl
jle
dec
adcb
test
jns
lret
mov
pop
sub
popf
adc
notl
add
repz
jle
fadds
or
imul
and
pop
pop
xor
jae
scas
hlt
jg
std
ljmp
jmp
cmp
movsl
rolb
clc
jbe
dec
fcoms
movsb
and
dec
adc
or
outsl
lds
outsb
and
ljmp
mov
jbe
pusha
pop
notl
mov
mov
sub
mov
push
std
mov
cltd
mov
mov
pop
decl
fnsave
push
add
inc
dec
mov
push
inc
mov
in
fstp
inc
test
push
sub
fisubrs
in
pop
pushl
sub
jg
pop
xchg
movsb
cmp
loopne
jl
nop
or
cld
unpcklps
icebp
negb
call
pop
jns
xlat
pop
xor
add
out
or
shll
push
pop
mov
cmp
test
add
pusha
lods
sbb
push
mov
les
mov
fdiv
sar
ja
add
sub
mov
ss
decl
fwait
pop
pop
push
stos
cs
imul
mov
xor
mov
xchg
pushl
pusha
aaa
dec
jle
jg
pop
xchg
loopne
push
and
je
into
je
sub
int3
test
or
adc
addr16
imul
fnsave
or
stos
pop
fldl2e
or
ret
mov
jecxz
loop
jbe
rclb
icebp
decl
dec
dec
mov
and
jg
lock
pop
xor
mov
jp
pop
in
incl
push
ds
sub
jg
pop
and
mov
xchg
jle
mov
rol
fcomip
mov
mov
adc
ja
loop
insb
mov
add
jecxz
push
push
pop
and
jp
cmpsb
jae
test
adc
mov
mov
mov
jo
mov
pop
pop
pop
cltd
scas
xor
shrl
scas
fbstp
jno
pusha
shll
call
std
wbinvd
or
jbe
dec
inc
dec
clc
pop
pop
sub
mov
fdivrp
pop
add
test
fiaddl
lea
cmp
adc
arpl
add
das
jmp
in
push
into
rol
movl
loope
lcall
mov
std
mov
rcrb
fisubs
movsb
insb
cld
cmp
popf
add
mov
hlt
mov
fisttpl
in
cs
lcall
mov
mov
imul
outsl
mov
inc
or
and
inc
push
push
fsubrl
mov
mov
pushl
lods
sub
icebp
push
pop
std
xchg
mov
addr16
fyl2xp1
add
sbb
fwait
mov
lock
add
xor
push
jle
add
mov
mov
lods
cmp
mov
js
aam
fwait
jp
cmpsl
mov
fs
loope
scas
and
push
xchg
decl
jl
movsb
gs
mov
push
fisttps
mov
cmp
push
dec
es
pop
sub
incb
cmc
mov
push
enter
imul
jecxz
jnp
mov
out
lods
or
cld
aad
jne
jmp
pop
rorb
orb
cmp
and
ret
test
mov
fisubl
pop
xchg
dec
sub
mov
mov
loop
pop
or
mov
insl
xchg
xchg
int3
xor
rcrb
dec
add
loopne
push
dec
cld
stc
fdivs
sbb
aad
or
decl
lahf
push
fldenv
cmc
aaa
jmp
sbb
cltd
lret
xor
inc
cmp
mov
pop
lock
push
jbe
cwtl
cmp
jno
xchg
insb
cld
mov
out
clc
je
add
int3
add
jg
push
mov
cmp
scas
clc
or
decb
jmp
enter
dec
or
cmpsb
je
outsl
ret
xchg
mov
popf
mov
shll
test
push
mov
mov
xor
or
pushf
cli
jmp
mov
aaa
cld
pushl
mov
rcl
sbb
mov
cs
xchg
bound
push
sarb
jb
popf
mov
cmpsl
bound
jnp
fstl
sbb
sbb
outsb
mov
xchg
rclb
lahf
clc
add
pusha
lock
mov
call
popa
outsb
adc
mov
cmc
fsubr
jl
inc
push
sbb
pop
jmp
inc
idiv
mov
leave
mov
pop
push
lods
dec
sub
sub
call
sbb
mov
bound
sub
lock
adc
or
ss
xchg
mov
loopne
cmp
adc
idivb
mov
dec
fadds
and
das
inc
aad
xchg
push
and
lock
cld
jo
div
push
rclb
imul
lahf
hlt
mov
xchg
fs
stos
fdivrs
ds
lcall
lods
sti
test
les
xchg
push
mov
lea
cwtl
dec
cmpsl
mov
leave
loop
loop
decb
lcall
dec
repz
lock
mov
ljmp
call
aad
push
ss
xchg
and
cmp
rcrb
xchg
stos
test
xor
pushl
sbbl
or
into
stc
shrb
xor
aad
aaa
jg
in
adc
bound
or
push
mov
jecxz
imul
lahf
sub
imul
sarl
mov
ret
or
push
or
scas
add
dec
cltd
cmp
dec
dec
xlat
push
add
pop
lcall
sti
ret
roll
lret
ds
lods
mov
sbb
js
xor
ljmp
and
daa
push
int
cli
fldl
inc
sbb
push
sbb
add
pop
pop
cmovns
and
test
cld
dec
loopne
rorb
jnp
movsb
adc
jge
push
roll
xchg
and
push
push
scas
cli
bound
jne
ljmp
mov
sbb
jmp
pop
fcomi
mov
adc
xlat
sub
mov
dec
xor
pop
xchg
fstpt
frstor
jle
dec
popf
sub
jg
mov
loopne
cmp
or
cmp
or
notb
data16
dec
mov
pop
cmpsl
outsl
mov
ljmp
sub
mov
pop
je
rcrl
mov
pop
add
jecxz
mov
sub
pop
dec
fucomi
xchg
adc
lcall
test
test
mov
cli
sub
push
pop
addr16
jle
mov
jmp
aad
decb
xchg
inc
mov
inc
loopne
add
pushf
sub
ljmp
dec
add
cmp
jl
push
mov
and
inc
clc
fidivs
and
cli
sbb
sub
fwait
push
jo
inc
and
dec
negb
gs
adcl
sub
mov
add
sbb
or
fs
in
loope
std
lcall
mov
jbe
xor
negl
aas
fildll
and
jmp
cmc
incl
mov
popf
enter
ret
sub
sbb
xchg
clc
das
lcall
adc
loop
sbb
movsl
popf
xor
cmp
or
pop
inc
add
and
call
pop
bound
scas
lds
and
pop
fs
cmpsb
and
lock
push
bound
jp
push
add
in
mov
sub
xor
mov
xor
dec
ret
push
jg
fsub
xchg
in
stos
push
or
aam
push
add
push
add
decl
xchg
xchg
leave
ja
dec
or
cmc
cld
cmpsb
sbb
lret
arpl
mov
loop
lret
add
adc
add
sbb
sub
imul
outsb
divb
out
pop
inc
lods
mov
push
unpcklps
cli
adc
imul
aaa
pop
mov
cwtl
or
mov
push
pop
inc
pop
inc
arpl
arpl
dec
adcl
ficompl
lcall
lret
das
jo
mov
loopne
add
mov
aad
fidivrs
jnp
sbb
jmp
mov
jnp
sbb
cmc
adcb
or
ljmp
cmc
add
lods
inc
add
div
outsl
enter
or
pop
movsl
xchg
fwait
or
pop
and
jbe
add
mov
int3
int3
push
outsb
into
aaa
fisttpll
mov
cs
int
ja
test
jns
pop
xchg
lcall
add
cwtl
sbb
dec
xor
mov
orb
movb
test
xchg
movsl
aaa
fcomp
out
scas
inc
call
adc
std
lock
daa
imul
cmp
cwtl
push
js
inc
adc
lods
notb
sti
fists
add
cs
inc
mov
fimull
std
jg
sub
inc
leave
sub
inc
daa
jg
mov
lock
jg
jb
mov
pop
lock
dec
sti
sbb
pop
or
and
and
sub
in
mov
inc
hlt
jp
jbe
cmpb
adc
mov
icebp
cmpsb
out
clc
xor
xchg
loop
jnp
inc
lcall
in
push
fstpl
cmp
ja
addb
pop
lock
mov
mov
dec
mov
scas
add
xchg
mov
mov
push
hlt
xchg
xchg
test
mov
mov
dec
mov
add
and
daa
add
mov
push
shl
in
mov
pushf
pop
lds
mov
jg
lcall
lcall
push
dec
inc
or
movsb
les
insl
andl
sbbb
sub
jg
dec
cld
lahf
pop
cmp
rcll
movsl
mov
push
add
jo
movsb
popa
mov
sub
int3
push
push
inc
xchg
int3
xchg
or
sar
stos
push
lcall
add
push
test
add
rcrb
and
cs
mov
push
and
pop
inc
add
jl
add
mov
pop
sub
cmpsb
stos
xor
mov
sti
adc
pop
or
imul
inc
mov
pop
adc
lcall
loope
movsl
jbe
sahf
lock
add
ljmp
dec
dec
cli
loop
mov
cmp
pop
ljmp
cmpsl
shl
mov
in
add
es
sub
incl
mov
lods
inc
push
xor
mov
insb
mov
add
push
enter
js
mov
and
sbb
ja
std
pop
mov
cmp
out
sbb
not
lods
xchg
ss
out
in
dec
js
dec
stos
push
and
rclb
pop
mov
fidivl
call
out
add
xor
insb
xor
push
enter
in
dec
nop
push
movsl
sub
sbb
addr16
ret
or
or
sub
mov
sub
or
gs
div
pop
test
iret
pusha
lret
lahf
fldt
and
lods
test
lcall
mov
inc
cmpsl
mov
inc
inc
roll
sbbb
repz
shl
loop
cli
mov
lea
and
push
decl
outsb
pop
rcl
ss
fsts
clc
flds
nop
cmp
in
mov
mov
xchg
aas
push
sarb
mov
sub
or
aaa
roll
pop
lahf
adc
xlat
ret
hlt
fs
add
cmovs
call
add
or
pop
jp
jl
ss
clc
adc
push
jle
call
and
outsb
pusha
outsb
xchg
out
lcall
popf
pop
dec
jmp
mov
sub
xor
adc
pusha
fdivr
ljmp
jle
sub
add
rcrb
pop
adc
xorl
lahf
sub
scas
xor
repnz
sub
pop
xchg
movsb
cmpsb
in
aam
mov
lcall
fisubrs
sbb
imul
insl
clc
es
outsb
cmp
push
ficompl
pop
dec
out
clc
jmp
adc
add
sbb
lods
push
mov
movsb
aaa
ds
test
jecxz
mov
outsl
aas
inc
jae
jl
or
jg
jb
pop
inc
mov
sti
mov
and
jge
pop
lcall
and
and
inc
xchg
stos
mov
iret
jp
mov
out
sti
mov
clc
cmp
push
pop
xor
insl
add
dec
je
cwtl
dec
rcr
movsb
mov
mov
lods
enter
jle
insb
gs
jbe
pushw
pop
push
int3
inc
out
mov
push
or
sub
insl
mov
pushf
sahf
or
icebp
test
shll
aam
les
push
push
fiadds
js
in
mov
jg
jecxz
xchg
repz
pop
cwtl
cmc
mov
cli
xlat
outsl
sar
int3
loop
mov
fstpt
cmp
lret
add
loop
outsb
xor
inc
sbb
mov
push
jp
mov
xchg
enter
imulb
mov
add
loop
jge
xor
nop
testb
fstl
fistpl
xchg
dec
mov
out
cli
in
and
xchg
mov
xchg
ficoml
repnz
rolb
out
test
pop
jne
sbb
mov
pop
ret
pop
mov
dec
clc
xchg
jmp
push
subl
int3
jne
das
xchg
out
mov
fdivl
aaa
adc
push
sahf
dec
les
mov
mov
xchg
je
sub
pop
mov
test
nop
cmp
in
add
jl
push
mov
adcb
sbb
sahf
cs
xlat
out
mov
dec
rcrb
stos
loopne
lods
adc
mov
cltd
out
add
pushf
jecxz
jne
jle
xor
add
repz
mov
sbb
mov
incl
sub
push
lret
idivl
mulb
int
call
or
pop
pop
mov
xchg
ret
dec
mov
in
test
cmc
push
jge
and
sar
mov
jp
push
jb
pop
pop
cwtd
fistpll
push
sahf
push
xchg
mov
loopne
sub
js
fcompl
int
sarl
call
arpl
push
sub
and
clc
fld
call
sub
mov
jmp
scas
jb
ficompl
mov
fldt
jno
insb
outsb
push
sub
or
sbb
ljmp
notl
cmpsb
mov
push
push
lods
mov
or
sahf
sub
repnz
adc
lock
popa
out
sahf
xchg
xor
sub
fadd
xchg
dec
loope
je
xor
in
shrl
insb
aas
push
shlb
adc
xor
dec
cwtl
imul
xchg
dec
pop
dec
sahf
push
and
pushf
sar
adc
xchg
cmpl
outsl
pushf
ss
xchg
sub
mov
inc
test
adc
ret
dec
add
adc
into
rcl
pop
push
lret
mov
jbe
in
sar
push
fdiv
and
push
push
mov
push
shrb
lock
inc
test
cwtl
xor
stc
movsb
bswap
cmp
ficomps
fsubr
inc
fisttps
test
in
data16
cmp
add
clc
or
jns
gs
xor
pop
lret
sub
cltd
mov
iret
push
xor
xor
pusha
lcall
xchg
notb
adc
ret
inc
popa
push
into
dec
mov
mov
inc
add
pop
aas
ja
adc
orb
incl
ljmp
orb
repnz
in
in
cmp
jb
scas
movsl
jns
cli
testl
mov
mov
add
cs
mov
jecxz
adc
fisttpll
cmp
xchg
sbb
xor
xchg
icebp
jmp
in
fistpl
cmp
sub
aas
sub
lods
icebp
dec
xor
movsb
push
xchg
lock
daa
or
test
aaa
mov
cmpsb
imul
rclb
dec
data16
roll
xor
emms
cli
scas
mov
in
xorb
xchg
inc
mov
fisubs
fs
mov
rcrb
sarb
testb
dec
mov
in
jne
cmpsl
inc
shll
fildl
test
push
cmp
in
mov
test
dec
bound
sbb
ss
scas
les
push
and
and
sub
pop
cli
adc
mov
pop
push
enter
out
jne
cmp
jg
scas
out
or
lock
xchg
jge
adc
push
fidivrl
xchg
pusha
clc
ljmp
xor
scas
inc
push
jg
pop
sub
mov
sub
addr16
imul
mov
dec
popf
cmp
jbe
inc
in
fisubs
mov
inc
das
in
jo
mov
lcall
jb
clc
jecxz
xor
mov
cmp
sti
xchg
xor
ss
stos
cmp
pop
inc
loop
xlat
pop
and
pop
push
out
stos
test
lret
aas
or
xor
out
cld
das
fcos
outsl
jl
sahf
inc
mov
xlat
clc
aaa
add
gs
cmp
dec
jb
shll
push
dec
clc
shlb
cwtl
add
inc
in
mov
clc
or
xchg
clc
ds
sub
addr16
sar
stc
add
aad
add
pop
jne
add
js
ljmp
negl
fmuls
xor
push
xchg
jno
or
lret
push
and
xor
jle
inc
xor
clc
popa
repz
xor
clc
mov
add
cld
add
repz
enter
lret
mov
cmpsl
or
pop
pushl
push
outsl
push
mov
inc
pop
test
clc
ss
clc
in
sarb
in
outsb
sbb
mov
fdivrl
add
lock
lcall
cs
sbb
dec
cmp
loop
sub
dec
pop
jg
ljmp
jmp
enter
push
dec
lods
fcomip
or
lods
insb
pop
bound
pusha
bound
xchg
ror
cmp
movsl
mov
inc
and
xchg
push
push
movsb
lock
mov
hlt
frstor
add
stc
add
test
ficompl
jle
test
jg
jmp
cmpb
mov
lcall
loop
xchg
lahf
add
decl
fstpl
insl
div
loope
shl
outsl
es
aam
ljmp
sahf
dec
pusha
das
add
sbb
pop
mov
add
fistps
data16
and
adc
inc
mov
loopne
mov
lahf
push
icebp
dec
or
rolb
dec
cmp
inc
dec
mov
bnd
mov
mov
xchg
jmp
inc
mov
lods
cmp
push
jl
xor
cli
sar
inc
enter
inc
ret
stos
rclb
std
or
adc
xchg
push
pop
mov
call
add
jmp
pop
xor
fcmovnbe
aas
pop
out
outsb
rolb
cwtl
pop
xchg
sbb
xchg
xor
jge
dec
xor
mov
cmp
sbbb
add
pop
sbb
cmp
jg
pop
lret
xchg
inc
adc
int
es
add
push
shll
add
push
mov
aad
mov
dec
imul
push
dec
cmc
cwtl
push
mov
lret
mov
add
mov
xchg
cld
test
es
jle
mov
int
pop
lods
mov
jno
call
call
mov
aad
cs
inc
cld
mov
movsl
fdivr
lods
mov
ss
and
lods
mov
pop
inc
xchg
cwtl
xor
mov
mov
mov
and
xor
adcl
add
push
mov
lahf
xlat
movsl
dec
push
lcall
ja
dec
lds
hlt
incb
jne
adc
out
vpminsw
imul
dec
dec
add
arpl
xchg
or
add
out
sti
leave
cltd
sub
insb
aam
fs
add
mov
pop
pop
jecxz
inc
xchg
mov
or
sub
pop
pop
testb
jmp
mov
cmc
int
into
fwait
sub
mov
int3
add
rcr
icebp
mov
dec
push
sub
or
hlt
pop
pop
adc
in
insb
imul
pop
ror
aad
lods
xor
jg
movsb
mov
pop
ret
ds
mov
call
ss
shll
jg
sub
imul
jmp
daa
subl
imul
mov
dec
fadd
fisubs
roll
add
jg
test
sbb
jb
cmpsl
xchg
xor
sbb
and
push
or
jmp
fucomp
shl
das
fmuls
movb
int
inc
ret
push
add
jp
inc
cld
jg
es
sub
sbb
nop
insb
aaa
and
inc
push
sahf
add
fs
dec
cmp
mov
enter
shl
pop
sub
imulb
mov
or
fmul
dec
inc
inc
push
rclb
add
mov
sub
mov
loop
in
sarb
dec
inc
in
pop
leave
cmovbe
xchg
cs
outsl
xchg
push
sbb
push
cmp
inc
push
cmpsl
enter
pop
in
mov
adcb
fsubp
decl
shll
sub
daa
add
pop
test
sbb
jo
lods
pop
pop
push
xchg
dec
fcmovnu
in
shl
cmpsl
mov
sti
icebp
inc
psrlw
push
lret
insb
ds
dec
add
js
decl
les
inc
std
pop
out
inc
sbb
jno
xchg
inc
add
or
lds
out
or
lret
out
daa
mov
mov
js
loope
jno
fcom
mov
repnz
sbb
loopne
out
cmp
rcll
mov
mulb
adc
stos
stos
push
mov
jg
repnz
fs
sahf
jg
pop
std
fwait
pop
mov
cmpsl
push
mov
movb
sub
lds
push
pop
movsb
mov
adc
sarb
mov
jnp
dec
mov
lahf
xor
sbb
xor
push
push
jns
adc
add
and
cmp
push
shlb
adc
add
cmp
xchg
fiaddl
xchg
ljmp
mov
or
xchg
mov
decl
lcall
xor
int
push
inc
outsl
fcomip
cmp
push
stos
xchg
dec
int
pop
into
ja
cmp
aam
or
ret
lods
lods
xchg
adc
mov
push
fld
xchg
sbbl
push
xchg
dec
mov
jne
clc
pop
add
cmpsl
sub
test
aad
lods
stos
pop
ret
or
mov
push
mov
push
movsl
inc
mov
sbb
mov
mov
in
add
mov
dec
cmp
mull
std
xor
sbb
hlt
lret
pop
pusha
ds
jo
mov
ror
jbe
push
iret
rolb
add
pop
sbb
push
pop
movsb
ja
ret
lcall
push
lds
mov
les
decl
mov
stos
call
add
add
and
and
jg
sarb
inc
insb
mov
fdivr
enter
rolb
stos
add
xor
das
mov
hlt
push
subl
pop
clc
pop
ret
dec
gs
mov
out
lret
adcl
repz
mulb
push
ljmp
mov
out
jno
push
repz
xchg
and
decl
sub
hlt
int
push
jle
sahf
push
mov
adc
xchg
add
out
shrl
cmp
test
stos
cmpsb
or
jmp
xor
das
xor
add
lcall
xchg
sub
sbb
fcoml
fidivs
push
pop
shrl
push
jle
cmp
dec
push
jo
test
loop
adc
imul
push
mov
lcall
or
ljmp
jnp
push
cmp
fwait
sbbb
mov
pop
mov
push
inc
mov
aas
sub
add
call
lret
pop
add
js
pushl
leave
dec
loop
decl
div
aad
mov
enter
pop
dec
mov
and
notb
aaa
cmp
ret
mov
fs
inc
cmp
add
push
movsl
inc
and
das
rolb
nop
int3
or
or
xor
mov
add
js
xchg
mov
cmp
nop
jl
sub
inc
mov
pop
add
ss
push
cmp
pop
and
xlat
push
test
push
push
lock
ljmp
in
out
sub
je
sub
add
and
pushf
push
mov
mov
pop
adc
lret
mov
je
jmp
rolb
pop
mov
repz
jecxz
call
or
add
mov
dec
pushf
cmpsb
jne
pop
sarb
push
test
jge
addr16
adc
fisubrs
add
mov
repnz
jo
mov
fbld
out
sbb
movsb
mov
pop
push
sbb
adc
dec
ret
jmp
mov
sub
insb
sub
clc
cmpsb
fcmovnu
mov
test
xor
cmp
push
std
dec
adc
pop
xchg
fsubrl
sti
jbe
and
popa
insb
mov
mov
ja
xchg
dec
inc
outsb
jno
jns
xchg
jle
sub
dec
xor
movsb
js
stos
clc
fistpll
and
cli
ja
test
sbb
inc
add
pop
sub
cmp
inc
sbb
rorb
outsb
push
repz
fcomip
lcall
insl
into
adc
sbb
outsb
addb
outsl
pop
mov
jbe
aam
ficoml
cld
out
scas
xchg
cmp
jmp
sub
and
and
sub
jg
ljmp
sbb
mov
sar
test
xor
adc
scas
cld
call
cmp
popa
inc
jmp
mov
xchg
cmp
test
push
and
gs
add
aas
push
leave
pushf
ds
cmpsl
dec
out
mov
shrl
xchg
xor
jns
mov
ret
pushl
jl
add
pop
pusha
push
adc
cwtl
or
jmp
jg
aam
jmp
jns
cmp
mov
cld
mov
cmp
adc
stos
aam
incl
mov
in
hlt
jg
rorb
jmp
popa
mov
push
and
cmp
pop
bnd
clc
outsl
cmp
jge
mov
notl
sub
xlat
fnstenv
push
pushf
fucom
dec
test
aaa
pop
inc
pop
cwtl
fisttpl
jmp
mov
test
mov
ljmp
sbb
xchg
xor
test
cs
sahf
add
and
push
cld
mov
sbbl
adc
out
movsb
xor
shlb
xchg
icebp
sub
inc
cmp
mov
pop
add
or
mov
je
in
stc
scas
cld
nop
scas
decb
inc
fiadds
mov
add
push
push
jmp
fwait
cmc
inc
sub
fidivs
mov
cs
rorb
das
cli
arpl
cld
clc
cld
bound
inc
cmp
scas
cli
inc
sbb
addr16
rorb
jo
jl
shl
sahf
or
mov
lcall
xchg
xchg
stos
jae
insb
lea
out
cli
in
pop
fld
test
mov
pop
add
scas
out
cli
add
add
lret
xor
stc
in
outsb
adc
push
xor
push
mov
mov
sub
loop
pop
lock
xor
loop
pop
jnp
shlb
mov
or
sbb
mov
je
rcll
fs
inc
mov
cs
sbb
pop
pop
dec
pop
enter
and
rcrl
mov
inc
add
sub
adc
aaa
adc
mov
mov
incl
call
scas
push
jecxz
aam
jmp
enter
jo
xor
hlt
rol
das
cli
jmp
xchg
mov
sbb
xor
xor
rcrl
fwait
ret
les
mov
cli
cli
in
mov
popa
mov
push
or
add
std
pushl
daa
push
aad
test
sbb
movsl
jmp
cwtl
or
es
xchg
sub
and
movsl
pusha
mov
dec
flds
fdivrs
mov
add
and
xor
xchg
dec
mov
call
add
movl
inc
enter
insl
push
add
jg
es
pop
les
cld
test
inc
imul
add
dec
mov
ret
mov
add
sub
mov
xchg
inc
in
aaa
std
lcall
js
aam
fwait
insb
jle
jo
shrb
in
mov
xor
addl
pop
cld
mov
iret
loopne
mov
sub
aaa
rclb
mov
fsubrs
dec
adc
pusha
shlb
mov
or
and
add
mov
dec
pop
es
clc
and
inc
xlat
psubusw
pop
rcrb
pop
or
sbb
mov
lcall
popa
int3
test
insl
cmp
adc
fiadds
adc
nop
ss
add
out
cltd
add
push
int3
das
movsl
js
orl
clc
pop
js
xorl
push
adc
rcrb
cwtl
push
lret
lock
sub
mov
sahf
xchg
pop
out
mov
rclb
clc
aam
mov
jp
stos
push
int3
leave
in
mov
pop
adc
fnstenv
insl
jp
sub
rcl
stos
or
push
cld
out
fdivl
mov
aad
sti
pop
cld
ds
xchg
jne
add
pop
push
gs
cmp
sub
mov
and
fistpll
insl
movsl
mov
aad
push
cwtl
dec
mov
xor
xlat
inc
push
sar
das
inc
or
test
movsl
and
in
adc
jmp
and
sub
daa
xchg
xchg
clc
icebp
fbstp
ja
and
pop
mov
add
adc
push
jb
loope
cmpsb
lcall
pop
enter
mov
leave
mov
push
js
test
dec
mov
call
adc
push
leave
mov
neg
out
and
js
push
mov
out
dec
adc
sub
out
cmp
mov
xor
fwait
sbb
enter
cli
cltd
sbbl
add
inc
fildll
or
pop
dec
test
cmc
loop
rolb
loopne
add
fwait
and
sbb
dec
pop
les
fisubl
repnz
pop
ds
add
ljmp
sub
clc
inc
aad
pop
clc
addb
add
mov
lock
adc
movsb
mov
dec
mov
rol
jg
imul
xor
ljmp
fstps
inc
inc
or
and
jae
jg
test
mov
ret
xor
push
movsb
incl
sbb
mov
outsb
cli
scas
mov
popa
mov
jnp
dec
in
ss
xchg
cmp
mov
sarl
xchg
clc
and
pushl
adc
divl
cmp
stc
cld
popf
nop
loope
sbb
xchg
popf
scas
test
or
jg
or
lock
mov
pop
and
mov
lods
pop
lret
repz
dec
std
inc
out
xchg
sar
mov
hlt
es
icebp
mov
sub
ljmp
mov
mov
or
or
outsl
sub
aas
cs
inc
mov
imul
andb
cmp
push
and
shlb
jne
cli
aaa
dec
xor
cmc
xor
xor
and
sbb
les
dec
in
call
icebp
inc
mov
pop
js
movsb
mov
incl
fcmovb
push
call
fldcw
dec
or
ljmp
es
in
push
rorl
mov
aaa
inc
xor
stos
int3
dec
or
sub
mov
es
or
mov
scas
push
push
fdivr
clc
push
call
xchg
insb
daa
orb
dec
cwtl
mov
dec
test
ljmp
int3
xor
push
push
mov
pop
sub
jb
mov
enter
adc
add
cmp
mov
and
push
mov
push
add
push
push
lock
ljmp
stos
shll
repnz
cmp
pushl
imul
rcr
gs
push
push
mov
inc
push
xor
cmp
std
mov
or
cli
ljmp
fcompl
lods
add
add
push
lea
dec
mov
lea
faddl
test
pop
daa
test
mov
push
mov
mov
add
lock
nop
dec
orl
loop
loope
add
sbb
add
dec
inc
mulb
adc
mov
inc
not
add
sub
mulb
je
decb
inc
cwtl
adc
mov
jmp
out
inc
sbb
outsl
nop
mov
out
mov
or
ret
clc
cli
popf
dec
idiv
mov
pop
cwtl
repnz
scas
pop
inc
stos
pop
js
sub
xchg
outsb
mov
pushl
fsubs
mov
cmp
insl
lret
cmc
xchg
out
loop
mov
lods
ds
mov
fidivrl
shrb
jb
dec
adc
jno
adc
fstps
sub
sbb
jge
mov
in
pop
lock
cmp
in
mov
out
fcmovb
inc
lods
je
pop
shrl
cwtl
gs
fs
testl
mov
push
stos
aaa
jo
xchg
inc
push
jg
jg
fwait
cmp
in
mov
jo
jnp
dec
sbb
and
adc
movsb
xchg
sbb
das
testb
scas
push
sub
mov
ficomps
call
add
sbb
cmp
inc
mov
call
ret
fdivrl
sbbb
pusha
mov
inc
ja
in
inc
adc
jle
dec
jecxz
xchg
cli
outsb
addl
pop
push
dec
rorb
pop
cld
mov
fisubrl
test
ja
mov
sbb
mov
aam
inc
jecxz
in
inc
pushf
or
mov
push
adc
pusha
mov
cmp
and
fstps
ficomps
cmpb
pop
ljmp
pop
scas
adc
stc
xor
icebp
rcl
pop
lcall
inc
cmp
xchg
cs
push
loopne
das
xchg
xchg
lods
add
mov
xchg
mov
or
rcll
xor
loope
jg
hlt
test
xor
or
mov
stos
mov
mov
pop
xchg
inc
jecxz
xor
jmp
psubb
push
shl
sbb
aaa
dec
sti
sub
jge
lcall
shlb
les
rolb
scas
cli
pop
into
add
sbb
outsb
jg
dec
inc
mov
mov
add
add
lcall
cmpsb
mov
int3
sbb
icebp
inc
xor
lcall
sub
rcrb
xchg
cli
or
mov
scas
add
aam
repnz
incl
decl
pushf
xor
and
jg
and
imul
add
push
jp
lcall
sub
stos
xor
out
pop
cld
xor
adc
inc
outsb
sbb
ljmp
mov
mov
adc
sbb
fisubl
sub
dec
cltd
sub
pop
add
fidivrl
mov
outsb
pop
mov
loopne
sbb
gs
pop
dec
mov
pushf
and
flds
mov
ljmp
mov
in
movsl
decl
mov
xlat
mov
adc
push
and
pop
pusha
jmp
xchg
ds
sarb
mov
jecxz
adc
vmaxpd
icebp
hlt
add
pop
push
aas
nop
mov
and
xchg
jno
cmpsl
mov
adc
in
push
add
sub
ljmp
jecxz
addr16
inc
adcb
jecxz
pop
push
dec
cmp
lea
add
push
add
int
cld
fidivs
mov
jo
int3
xchg
jle
mov
mov
shr
ror
dec
cmp
inc
push
es
push
loop
cmpl
fwait
popa
ss
repz
add
aam
push
pmuludq
sub
cld
and
xchg
mov
jo
jbe
mov
jno
mov
fwait
dec
lock
mov
bound
mov
rcrl
push
test
cld
xchg
mov
jne
mov
rorb
xchg
hlt
adc
xchg
mov
xor
sbb
add
jmp
ja
cmp
andb
cmpsb
push
jb
xchg
inc
fiaddl
outsl
adc
xor
test
cwtl
bound
xchg
mov
and
sub
ret
pop
ret
sbb
dec
push
mov
jg
les
and
fs
pop
in
xor
or
jae
fisubrl
inc
aam
sahf
enter
ljmp
pop
push
xor
filds
sub
jne
mov
popf
inc
lret
inc
lods
pop
or
mov
daa
mov
cmp
clc
fistpll
mov
jne
add
sbb
and
sub
andb
and
data16
std
incl
mov
xchg
popa
jp
jmp
xor
leave
pop
adc
insb
cmp
pop
and
pop
mov
mov
decl
sbb
mov
jecxz
xchg
pop
or
shlb
inc
sub
imul
cmp
decl
mov
xchg
push
in
testb
xchg
inc
scas
xor
decl
xchg
inc
loop
jp
xlat
je
les
push
mov
shll
xchg
decl
into
adc
out
pop
and
stc
jne
mov
frstor
and
add
cmp
mov
ja
fmul
jb
cmpl
aas
inc
jns
call
out
sbbb
jecxz
lahf
rcrb
pushl
adc
dec
out
xchg
repz
ret
js
pop
mov
xor
iret
pop
cli
dec
mov
hlt
repnz
jns
and
es
icebp
sub
fcomps
pop
stc
addps
shl
xor
pop
lahf
xchg
jae
mov
fiadds
mov
pop
call
pop
and
subb
movsl
das
mov
push
decb
jmp
repz
daa
sbb
out
int3
add
imul
int
dec
insb
test
mov
cli
jmp
es
pop
cmc
inc
push
xor
fwait
push
test
pusha
cmp
das
imul
xchg
pop
push
mov
aaa
in
or
sbb
out
sbb
cmpsb
or
adc
les
in
shrb
pushf
or
inc
cmp
ret
fbstp
push
into
fnstcw
cld
adc
mov
jnp
pop
cli
dec
or
shll
in
decl
ja
loope
xor
lods
sub
mov
xchg
lock
clc
out
cmp
ret
enter
inc
xchg
xchg
int
int3
out
aam
jl
cmp
sub
mov
ret
aam
fildll
in
adc
ss
repnz
or
fnstenv
sar
pop
gs
xchg
cli
movsb
xor
movsl
add
stos
sub
pop
push
push
movsl
out
decl
mov
mov
lret
xchg
inc
imul
test
push
inc
idivb
or
out
shrb
hlt
cmc
xor
call
mov
je
incl
add
dec
fisubrl
cmp
jb
in
sbb
ret
push
sbb
inc
inc
imul
dec
mov
and
jmp
push
mov
aaa
out
adc
sbb
lds
cmp
cmp
or
sahf
rolb
or
lods
and
and
mov
je
popa
mov
sbb
cmc
mov
and
add
fdivl
inc
jmp
cmp
ljmp
push
in
lret
shlb
and
clc
subb
and
hlt
push
xlat
call
aam
into
pop
insb
dec
jmp
clc
cmpsb
xor
or
jae
cltd
and
pop
pop
shr
sub
mov
mov
mov
aad
cmp
les
sub
adc
andb
push
adc
sub
add
outsb
push
stos
push
iret
in
gs
les
pop
bswap
fsincos
mov
cmp
popa
cmp
push
inc
push
pop
daa
push
sbb
rolb
loop
adc
iret
sub
xor
ss
inc
fdiv
cmp
xchg
rorb
mov
mov
mov
sbb
and
std
fwait
jmp
jo
rcr
push
or
lods
sub
loope
fisttpl
xor
rorl
mov
xchg
fcoml
inc
loop
rolb
fldl
mov
jg
decb
xchg
aam
add
pop
pop
mov
adc
add
mov
add
xlat
add
inc
xor
cli
push
fimuls
push
outsl
jb
jecxz
sbbb
mov
push
fdivl
movsb
scas
add
rcrb
in
mov
stos
adc
in
stos
std
mov
out
cli
dec
jne
jo
loopne
inc
xor
inc
test
jae
test
ljmp
pop
jnp
pop
cwtl
sbb
dec
mov
dec
test
or
call
and
xchg
and
pop
sahf
fcmovnbe
jb
sbb
arpl
cld
lret
imul
cmp
lods
jmp
incl
mov
sub
jnp
das
sub
add
fstpt
ret
ficompl
out
test
and
inc
inc
data16
sbb
dec
push
cmc
xchg
and
cmp
lods
jl
incl
daa
cmp
xchg
loopne
or
mov
loop
ftst
mov
add
and
out
clc
sbb
enter
mov
in
shlb
mov
aam
jg
hlt
xchg
jmp
jmp
divb
xchg
iret
jp
mov
dec
ljmp
in
mov
jns
mov
cmp
push
inc
arpl
hlt
or
in
mov
pop
fcmovnb
cmp
and
add
mull
xor
movsl
add
ret
cmc
enter
add
faddl
in
aam
inc
js
mov
sahf
push
pop
mov
pop
jmp
mov
in
test
mov
fcoms
bound
adc
cmp
sbb
into
mov
pop
ret
shll
fists
in
xchg
int3
pop
test
or
loop
adc
bound
cmp
clc
mov
mov
cmpsl
aam
lods
lret
dec
push
aad
daa
or
cld
pop
push
push
mov
mov
xchg
push
dec
inc
xlat
ret
add
sbb
or
rcr
test
cs
roll
fwait
and
mov
jg
cmp
adc
xorl
stos
and
lcall
cmpsl
sahf
xchg
add
leave
in
scas
out
imul
dec
andb
ficomps
xor
inc
shl
or
sar
jl
mov
sbb
clc
call
push
hlt
das
loopne
push
stos
and
popa
arpl
ret
iret
leave
xor
inc
mov
adc
adc
jle
mov
ret
orl
push
jne
or
cmpsb
daa
add
pop
pusha
popa
jnp
pushf
popa
dec
adcl
xchg
aam
rolb
mov
pop
lret
mov
xor
mov
and
flds
test
and
loopne
pop
inc
js
repz
pop
inc
or
ljmp
or
sub
pushf
mov
pop
mov
popa
ficomps
jle
xchg
add
nop
fmull
idivb
xor
outsb
jp
mov
mov
jle
int
mov
clc
out
cmp
cmp
lock
mov
jge
test
jg
fwait
add
out
and
pop
loop
and
rol
mov
pop
push
sub
lret
imul
push
or
add
sarb
mov
adcb
adc
mov
sub
hlt
imul
jns
outsl
and
dec
adc
test
pop
or
sbb
or
outsb
or
cmpsl
bnd
jg
aaa
loope
clc
ds
cmp
loope
mov
iret
enter
mov
inc
pop
sub
mov
sub
addr16
adc
loopne
sub
test
cli
cmp
stos
jo
fwait
pushf
rolb
mov
sbb
pop
inc
outsb
mov
mov
es
xchg
jl
test
ret
aas
push
sbb
ss
push
mov
mov
lods
dec
les
int3
jmp
ret
adc
dec
cld
add
or
push
or
shrb
pop
mov
sub
pop
aaa
insb
mov
push
outsl
daa
or
nop
mov
xor
mov
bound
adc
inc
pop
cmp
sar
xchg
icebp
or
xor
lcall
or
imul
adc
mov
mov
filds
cmp
fisubrs
sbb
mov
pop
dec
test
push
repnz
and
jg
inc
cmpsb
ffreep
jl
add
push
fcoml
xchg
mov
testl
cwtl
mov
adcb
iret
add
or
xor
ds
ss
sub
adc
adc
add
ficoml
cwtl
add
hlt
push
mov
inc
xlat
addl
inc
fdivrl
mov
fiaddl
cld
mov
inc
add
cmp
xor
lahf
pushf
sbb
lods
dec
cmp
adc
adc
add
cmp
adc
xorb
lahf
push
push
add
mov
jg
jnp
lds
js
add
dec
cmc
dec
decb
ret
outsb
xchg
inc
mov
out
scas
rolb
xchg
dec
inc
jae
cmpb
add
mov
xor
dec
sub
mov
out
cmc
daa
fcmovb
sub
enter
and
sbb
push
shlb
inc
int
adc
sbb
or
call
mov
or
or
sub
push
push
or
push
jp
cmp
mov
lds
clc
call
sahf
sahf
or
add
aad
cmp
jp
or
push
inc
ljmp
pop
loope
cmp
lret
push
inc
dec
add
out
cmpsb
cmp
out
fs
or
nop
call
in
pop
call
sbb
lcall
mov
arpl
leave
loop
ret
filds
lcall
lcall
add
cltd
je
les
inc
imul
insb
fdivrl
lds
insb
add
xchg
push
cld
data16
dec
lret
and
pop
inc
jb
dec
mov
adcb
push
cld
pop
dec
divb
jns
sub
and
fildll
push
fistpll
fldt
add
in
cmp
aam
imul
lahf
sarl
adc
fsubrl
mov
lock
call
out
cltd
sbb
pop
mov
loope
ret
xor
fs
mov
xchg
or
xor
out
jno
incl
les
mov
data16
or
lds
ret
pop
clc
cmp
jp
xchg
jno
mov
daa
adc
pop
mov
mov
pop
or
and
dec
aam
and
xor
das
cltd
les
enter
ficompl
xchg
rclb
rcl
adc
pop
cmpl
mov
lea
cld
pop
adc
lds
jbe
push
fsubrs
je
pusha
add
xor
dec
rcl
lcall
xchg
cmp
jo
cmp
movsb
mov
daa
add
out
sub
loop
rcll
iret
pop
and
das
xchg
adc
test
dec
or
lcall
popf
aas
mov
or
sbb
sbb
pop
xchg
add
outsl
loopne
inc
ret
lret
fs
sbb
add
lods
lods
decb
push
lds
adc
pop
xor
cwtl
ljmp
add
aas
lds
incb
xchg
sub
adc
inc
addr16
xchg
stos
jg
dec
xlat
mov
or
add
call
mov
cmp
mov
mov
cmp
lods
xchg
ljmp
test
mov
je
movsl
int
push
adc
dec
dec
adc
xchg
mov
fs
push
ljmp
mov
and
dec
cmpsb
and
orl
clc
pop
inc
fsubr
iret
pushf
std
test
ljmp
mov
incl
notb
loopne
adc
mov
notb
sbb
xor
fsubrs
icebp
popa
inc
rol
xchg
push
ror
pop
lock
sbb
int
push
aas
adc
pushf
ljmp
lock
jmp
test
out
in
xor
mov
imul
pushf
jge
outsb
sbb
ret
xchg
xchg
cld
dec
sub
sbbl
adcb
into
sub
add
les
js
mov
ret
sbb
popf
dec
cli
aaa
pop
mov
cmc
dec
inc
testl
inc
jmp
call
div
imul
mov
pop
pop
add
inc
or
push
push
mov
add
cmpsb
mov
lret
and
scas
mov
xchg
lcall
icebp
xchg
dec
mov
cmp
mov
pop
sti
aad
sahf
out
jb
insb
push
dec
cmpsl
push
and
inc
adc
insb
push
data16
lcall
shlb
or
rcrl
mov
iret
sub
out
mov
movsl
push
hlt
push
aas
and
ficoms
aam
push
and
inc
add
jbe
ds
stos
add
push
lds
or
dec
adc
mov
xchg
stos
or
cmpsb
xchg
aam
cmp
sbbb
sbb
push
test
push
sub
loopne
mov
nop
inc
clc
inc
lahf
sbb
sbbb
push
insb
test
scas
repz
mov
adc
mov
jle
or
xor
stos
insl
push
push
xchg
add
fisubrs
add
or
push
xchg
inc
push
clc
mov
incl
pop
dec
out
jg
push
jae
cmp
imul
movsl
es
fisubrl
pop
daa
add
das
and
cltd
fidivrl
sub
adc
push
mov
inc
xor
fildll
out
mov
jnp
jo
movsl
test
mov
cltd
out
inc
cmp
leave
and
xor
adc
xor
mov
in
pop
test
add
dec
mov
fcmovu
outsb
cmp
pop
mov
jb
sub
inc
cld
adc
push
add
loope
mov
mov
pop
pop
sbb
fbstp
jmp
ret
push
rcrb
aam
fadds
mov
aas
int3
mov
xchg
lcall
inc
aas
sbb
mov
and
mov
inc
stos
jmp
mov
decb
imul
pop
sbb
xchg
mov
test
xor
ret
jg
shl
ret
push
jmp
xor
mov
loopne
repnz
rorb
ret
xor
and
pop
sti
mov
cwtl
dec
or
sti
and
les
es
and
faddl
inc
jge
ficomps
aad
push
addl
outsl
leave
pop
rorb
sub
jg
jno
mov
stc
test
cmp
insb
jmp
bound
into
sub
push
sub
fwait
cmpsb
in
clc
sar
cltd
aas
jne
rcr
clc
add
sbb
inc
add
icebp
out
pop
jo
aaa
mov
dec
add
mov
jmp
stc
push
xor
mov
dec
ret
scas
lods
cmpsb
outsl
mov
xchg
ret
dec
pushf
imul
pop
movsl
mov
push
xchg
cmp
outsl
xchg
cmp
in
pop
out
rcrb
push
xor
test
inc
ljmp
into
mov
out
rol
pop
sub
inc
sbb
jl
mull
stos
or
lret
lea
push
or
into
gs
fistl
cmp
hlt
xor
movl
jecxz
out
and
in
cli
xchg
adcb
jg
cmp
jbe
mov
pop
call
pop
add
fs
xor
and
xchg
movsb
mov
lcall
movsb
call
ds
in
sub
cwtl
shrb
cmp
push
call
xchg
mov
lock
fwait
inc
xor
ss
hlt
sahf
aam
out
test
orb
popa
cmc
push
clc
inc
push
add
clc
cld
push
decb
and
mov
adc
outsl
inc
fs
cmp
push
cld
in
das
shlb
sarb
in
in
fs
rcll
or
clc
add
dec
nop
or
mov
sub
cmp
js
ret
rcrl
movb
add
add
sub
mov
lcall
pop
js
mull
mov
pop
mov
lret
notb
das
repnz
adc
xor
pop
add
dec
loop
dec
lods
sub
xor
movsl
test
mov
addb
pop
mov
cmp
inc
test
fistps
icebp
lods
fs
insl
fldl2e
and
sar
xchg
gs
inc
jp
ret
jns
js
jbe
aaa
mov
lods
lcall
lea
and
movsb
mov
scas
sub
int
lods
pop
and
lcall
sub
mov
lret
xor
sahf
test
imul
sbb
push
inc
and
jg
test
sarl
xchg
pop
pop
push
xchg
inc
loop
out
ljmp
jnp
adc
adc
pop
loopne
push
int3
mov
inc
adc
mov
xor
test
cmp
cmpsb
aam
mov
fcompl
cmpb
mov
push
lods
push
enter
push
xchg
and
sbb
mov
pop
in
adc
fidivl
aas
push
adc
lahf
ffreep
xorb
sbb
lret
mov
mov
repnz
ficompl
mov
push
daa
je
xchg
das
rcr
in
loope
add
addr16
mov
cmp
das
fcmove
push
jle
cli
mov
out
xchg
into
ja
dec
mov
movsb
jg
stos
je
xchg
daa
mov
out
cmp
ret
push
insl
mov
popa
imul
scas
sarl
pop
insb
mov
push
shlb
push
ljmp
orb
jecxz
nop
jmp
cld
cmp
xor
aam
sub
clc
test
leave
in
pushf
cmc
lcall
add
inc
jle
test
aam
orl
sbb
and
sub
sbb
cmpsb
ss
lret
dec
dec
mov
mov
push
lea
cmc
int
push
je
and
faddl
out
cld
push
rorl
rcr
mov
inc
or
scas
or
pushf
or
adc
add
in
cmc
ljmp
mov
adcl
jno
outsb
adc
adcb
push
lock
pop
sbb
xor
jns
movsl
sub
in
push
fsub
out
and
jle
xchg
push
in
push
sbbb
lods
mov
lea
cmpsb
push
jno
int3
in
fisubrs
inc
insl
std
incl
iret
jmp
rorl
insl
fisttpll
jb
int3
ret
popf
out
imul
gs
xor
cs
insb
add
jb
jne
mov
in
popa
insb
inc
adc
arpl
int3
sbb
add
outsl
call
imul
push
outsb
insl
popa
jnp
movsb
cmc
jo
imul
ss
jae
insl
push
imul
sub
gs
ja
mov
gs
push
push
subb
and
sbb
mov
push
bound
jae
daa
inc
outsb
mov
out
pop
jne
outsl
sbb
das
xchg
sti
fldt
rclb
mov
jo
outsb
push
repz
clc
cmovge
je
inc
jns
adc
imul
mov
pop
dec
push
insb
inc
inc
gs
fstl
bound
inc
jns
sbb
pop
mov
imul
js
outsb
outsb
sub
add
fsubs
subb
pop
inc
pop
mov
outsl
ja
inc
imul
push
sub
fs
pop
sub
adc
dec
ret
jbe
outsl
jne
dec
inc
jae
fcmovnu
pusha
xor
cmp
mov
inc
dec
inc
sub
inc
or
or
dec
outsl
fs
dec
push
ja
mov
or
inc
cmc
dec
popa
insl
adc
jo
pushf
inc
mov
mov
push
sub
jne
lret
fsubl
xchg
push
fisttpl
ja
jbe
mov
ret
in
jb
and
divb
mov
inc
push
push
imul
sbb
gs
insb
mov
loop
cmp
xor
sbb
insb
ja
fs
test
jg
push
insb
popa
es
sbb
lods
insl
outsl
mov
xorl
jp
jae
in
xor
sbb
popa
bound
arpl
sub
jns
cmpsb
mov
cs
mov
jnp
insb
push
fwait
lods
pop
in
dec
test
inc
push
test
call
sub
inc
fs
mov
adc
mov
test
push
jno
or
and
js
ja
arpl
push
ret
out
push
imul
or
sbb
pop
xor
inc
outsb
add
cmp
mov
inc
push
dec
add
add
mov
invlpg
add
sbb
daa
jo
push
adc
and
insl
sbb
add
add
add
adc
aas
mov
adc
adc
clc
adc
fmuls
xchg
pop
scas
clc
popf
or
adc
adc
push
cmp
fcoml
add
fcomps
xchg
add
testl
mov
js
dec
fcmovb
xor
adc
jo
push
dec
jl
out
push
pop
sbb
or
xchg
lret
mov
mov
adc
pop
into
dec
les
insl
out
dec
pop
shl
dec
jnp
lret
faddl
out
popf
bound
xor
push
lods
mov
shlb
dec
outsb
and
pop
daa
aas
adc
aaa
xchg
and
jae
add
inc
and
add
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
