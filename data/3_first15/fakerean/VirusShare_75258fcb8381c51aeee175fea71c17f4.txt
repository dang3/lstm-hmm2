sbb
add
mov
cmp
aaa
les
dec
testb
and
pusha
adc
pop
aaa
ja
stos
dec
mov
cmp
lret
xchg
into
ljmp
and
add
xor
sub
add
fmull
cmp
adc
adc
xor
dec
xchg
je
inc
pusha
in
ss
xchg
loope
jge
jp
mov
jle
jbe
mov
adc
dec
enter
dec
or
jo
xor
or
dec
jns
mov
movsb
or
into
push
inc
mov
hlt
jne
ljmp
mov
mov
bound
mov
inc
out
fbld
dec
add
jmp
js
jmp
in
pop
add
mov
out
push
push
xlat
dec
in
test
adc
and
pop
mov
lcall
push
inc
pop
mov
jo
fisttpll
jecxz
sbb
lds
lds
movsb
push
scas
pop
adc
pop
jl
hlt
nop
shl
mov
cmp
jne
inc
data16
aas
pop
add
mov
mov
and
cli
push
sahf
xor
sub
icebp
in
iret
xchg
aas
push
and
cmp
xchg
pop
int
and
arpl
fistpll
or
jge
icebp
xchg
repnz
mov
repz
sub
or
imul
bound
ret
inc
stc
clc
mov
push
mov
das
insl
lea
nop
jle
add
test
cmp
sbb
shr
jle
xchg
lods
pop
lock
jbe
mov
pop
jno
pop
sub
iret
dec
clc
jne
sti
repz
cmp
xlat
adc
mov
sti
mov
xchg
push
stc
lods
inc
ret
mov
fdivrl
pop
insl
mov
dec
or
data16
push
and
sbb
stc
test
sbb
sbbb
sub
push
lods
mov
shlb
sahf
xchg
mov
mov
test
xor
mov
cli
push
dec
add
push
jecxz
mov
sbb
pusha
ret
xchg
mov
out
and
fiadds
xor
int3
pusha
push
mov
inc
mov
or
push
cmp
ret
push
lods
xor
inc
mov
loope
or
int
jecxz
push
imul
repnz
mov
jmp
ficoms
and
sub
int
outsb
inc
pushf
sti
lahf
cmp
cmp
push
mov
cmpsl
dec
mov
cmp
call
dec
push
dec
push
bound
jb
outsl
sarl
std
mov
dec
clc
mov
inc
call
inc
popf
adc
fimull
nop
aaa
sub
add
fnsave
and
xchg
lock
xor
push
lret
lahf
clc
iret
mov
loop
mov
into
mov
xor
cltd
mov
gs
cmpsl
add
push
idivb
cs
gs
in
sbb
inc
jg
in
in
stc
adc
jno
mov
mov
loop
imul
push
cmp
bnd
aad
xor
imul
lods
sub
pop
nop
or
lea
add
pusha
mov
xchg
adc
add
bound
repz
sub
cmp
ja
and
jp
call
repz
lret
xor
sbb
push
inc
xchg
stc
inc
ja
hlt
shll
or
into
pop
in
lods
jp
fwait
mov
rcrl
xchg
xchg
and
fsubl
sbb
pop
dec
sbb
inc
xchg
or
ljmp
mov
imul
lods
subb
pop
imul
imul
xchg
sbb
jmp
loope
sub
lret
scas
nop
inc
shll
pop
cmc
in
mov
add
push
iret
jp
or
jbe
in
xor
fcomp
add
push
aam
sbb
pop
and
bnd
dec
jp
inc
xor
push
or
and
inc
xor
dec
mov
inc
dec
js
push
lcall
push
add
sub
mov
mov
jge
stos
adc
and
cmc
xor
xor
jae
jge
jp
leavew
add
cmp
cmpb
dec
add
rcrl
daa
jno
gs
stos
aaa
adc
mov
iret
out
cmp
push
ja
cs
out
pushf
mov
int
notl
xlat
lods
inc
arpl
lds
pop
nop
mov
sbb
inc
cltd
xchg
test
shl
pop
rorl
xor
jecxz
add
cli
sub
jmp
pop
ja
jmp
push
cmp
or
mov
imul
jg
ret
cmovbe
les
and
adc
ret
fstps
mov
or
inc
sub
cmpsl
sub
rcll
push
adc
test
gs
es
mov
cmc
inc
out
cmp
push
das
cwtl
test
sbb
or
inc
cmpsl
cltd
cmpsb
ret
push
lret
sub
pop
out
leave
xchg
mov
cmpb
out
std
push
inc
test
or
pop
pop
and
stos
test
jne
andl
cmp
and
cwtl
out
mov
mov
and
push
cli
subl
cmp
mov
jne
cmp
mov
or
lret
in
fdivrl
sbb
cmp
mov
and
icebp
pop
lea
pop
cld
xchg
push
sub
fwait
outsb
pop
gs
pop
sub
jae
rolb
add
insl
pop
adc
sbbl
and
aas
push
pop
lds
lea
test
leave
test
adc
jmp
dec
in
lret
fisubs
mov
jmp
pop
jge
push
rcr
aad
jmp
cmpsl
or
loop
push
cs
test
push
in
jle
and
or
inc
mov
sti
loop
lea
push
inc
mov
ficoml
clc
pop
xchg
cwtl
mov
sbb
scas
sbb
fwait
pop
loopne
xchg
dec
gs
movsb
pop
mov
das
cmp
inc
sub
dec
xor
jnp
lock
cmc
push
repz
fs
lods
and
ss
mov
pminsw
sbb
jge
dec
insb
add
pop
hlt
xchg
adc
pop
pop
mov
inc
call
mov
nop
inc
aam
mov
pop
iret
leave
jp
or
dec
fdiv
loope
call
pop
mov
sahf
data16
mov
add
adc
add
push
cmp
test
aam
cli
subb
xor
pop
lcall
not
pushf
cld
push
rclb
mov
loop
lea
sbbl
pop
xchg
mov
and
fldenv
outsb
push
out
test
adc
loop
or
jp
cs
lret
pushf
jne
or
xor
sbb
xchg
lods
in
dec
push
fisttps
push
or
sub
fwait
jne
pop
push
insb
outsl
xor
scas
cmp
addl
stos
pop
mov
adc
ja
je
lcall
or
pop
cwtl
fnsave
mov
jo
add
ret
mov
push
jp
sbb
jae
inc
pop
or
jle
popa
xor
mov
mov
xchg
test
sbb
scas
or
das
xor
gs
mov
fimuls
add
pop
aam
xor
repnz
into
pop
cmpsl
aad
push
cmpsl
mov
mov
xor
out
sbb
cmp
jns
outsl
in
andl
jo
cmp
mov
pop
enter
xor
add
mov
shl
in
aaa
or
hlt
in
xor
and
scas
inc
fildl
faddl
frstor
lahf
rclb
and
imul
sub
aas
sbb
jnp
jns
push
sub
bound
sbb
push
dec
out
mov
sbb
mov
cmp
fcomi
lret
mov
lcall
sbb
movsb
lds
dec
int
push
cmp
jg
xchg
jg
rolb
nop
fisttps
popa
mov
push
adc
jge
sub
fwait
mov
jge
pop
js
imul
movsl
and
xchg
cmp
cmp
inc
fstpl
ficoml
dec
aaa
rorb
mov
add
push
and
push
pop
dec
out
mov
stos
pop
into
push
das
inc
xor
adc
adc
sub
adc
out
add
adc
add
fsubrl
divl
or
std
hlt
mov
or
mov
or
jne
pop
inc
pop
xlat
inc
or
push
sarl
lahf
subb
insl
cmp
xchg
div
ljmp
ret
dec
push
mov
in
dec
push
outsl
ret
mov
xchg
xchg
lods
inc
dec
sarl
mov
pop
push
cmpsl
stos
shlb
jnp
lods
sbb
test
adc
outsl
lret
dec
pop
pop
outsl
jb
lahf
fisubs
scas
into
les
decb
jp
stos
shld
jbe
stc
icebp
sub
or
cmp
div
rorb
pushf
or
xchg
call
add
and
loopne
xorb
mov
or
cltd
sub
cltd
cltd
push
loope
sbb
push
mov
mov
mov
shll
adc
fistpl
cmp
daa
pop
int
pop
jle
loope
xchg
in
pop
push
mov
cmp
inc
outsb
enter
pop
mov
mov
cmp
dec
mov
sti
in
jl
mov
sub
push
or
jno
addr16
push
fwait
js
cmc
inc
pop
sub
pop
push
fldenv
sub
pushf
outsb
scas
or
pop
ret
cmpsl
xor
repz
sbb
push
leave
and
in
add
bound
push
ret
lea
inc
mov
pop
out
xchg
and
and
shlb
shll
xchg
dec
outsb
in
cmpsl
dec
pusha
jg
lret
loop
out
inc
cmp
daa
mov
jno
ja
outsb
sti
cld
sbb
out
sub
stc
mov
push
dec
jecxz
lods
loop
adc
xchg
loopne
push
into
rclb
cld
call
idivb
mov
jge
das
aam
imul
inc
or
xchg
subb
jb
testl
insl
idivl
decb
fimull
adc
popa
loop
fcmovbe
pop
jp,pt
scas
add
clc
clc
testb
inc
sub
mov
xor
add
or
sub
mov
fadds
stc
add
outsb
aas
rclb
cmp
add
xchg
xchg
shrb
or
push
movsb
and
pop
mov
lahf
fwait
push
mov
jmp
test
aas
sbb
shll
cld
fisubs
paddusb
js
ret
sub
stos
in
loopne
js
inc
mov
fdiv
fdiv
push
mov
stos
cmpsb
or
outsl
mov
pop
push
in
data16
pop
sbb
leave
lock
xchg
das
mov
add
inc
xor
jge
loop
push
jle
push
loopne
xchg
or
bound
mov
aas
cmpsb
push
mov
cwtl
push
lcall
mov
dec
xchg
jne
mov
pop
or
addr16
into
mov
test
push
mov
rol
cmc
icebp
mov
jp
sti
addr16
clc
push
xor
int3
add
inc
les
mov
aas
pop
or
lahf
inc
das
das
std
push
loop
lock
inc
jge
adc
lods
inc
imul
imul
mov
bound
jle
jne,pn
aas
xor
push
sub
fsts
sbb
jno
in
sub
js
jl
sets
mov
push
sub
sbb
push
dec
jl
aam
daa
mov
stos
test
outsb
js
cs
or
and
inc
jb
aad
add
mov
or
cld
jno
mov
push
mov
cmp
sbb
xchg
hlt
and
fsubp
ret
ds
roll
mov
lods
mov
xchg
or
jae
fiaddl
test
pop
outsl
xchg
jge
sub
scas
in
inc
clc
adc
jmp
push
testb
mov
in
push
adcb
jo
lret
lds
mov
and
add
or
sub
ret
xchg
ja
mov
ja
pop
cmp
nop
and
push
dec
xlat
ja
cmp
mov
and
sbb
ss
shll
mov
call
outsl
jb
cmpsl
fmulp
mov
das
pushl
dec
aas
and
and
shrb
sarl
adc
outsb
cmp
push
sub
and
out
mov
sbbl
pushf
pop
shrl
add
shrl
cmp
xor
jns
aam
jmp
push
mov
mov
push
push
ret
orl
in
sbb
mov
repz
insb
fadds
mov
sub
enter
mov
ror
dec
popf
cmp
xchg
test
out
bsf
xor
pop
mov
pop
xchg
loope
out
cmpl
imul
dec
fwait
cmp
cmp
fisubrl
scas
or
xor
xchg
jg
out
cmp
popa
rorl
push
sbb
jp
push
inc
mov
fildll
dec
in
xchg
push
outsb
inc
or
mov
xchg
xor
enter
adc
sahf
mov
cs
nop
pop
cmpb
rorl
popf
or
sub
mov
call
pop
xorb
mov
lds
or
bound
mov
loopne
out
adc
fucomip
cmp
xchg
xchg
icebp
mov
xchg
fs
test
out
gs
mov
les
pop
int3
and
jbe
pop
in
fucomi
inc
and
dec
sbb
inc
add
test
jmp
xor
dec
jg
call
lock
adc
xor
sahf
mov
jecxz
inc
cmpsb
popa
cmpsl
fldenv
jl
scas
inc
insl
ret
mov
je
cmc
mov
aas
dec
fnsave
js
or
push
cmpsl
mov
jns
mov
pop
dec
push
pusha
cmpsb
int
xchg
filds
loopne
pushf
push
iret
push
xor
sub
jge
add
pop
add
mov
pop
pop
fimull
xor
cwtl
shll
aaa
inc
mov
and
out
je
xorl
dec
lcall
add
inc
jae
fldt
fdivs
push
mov
mov
aam
xchg
imul
loop
cmp
and
adc
stos
imul
in
iret
lcall
je
xor
lret
pop
mov
imul
dec
repnz
dec
mov
mov
bound
jmp
daa
pushf
rolb
push
mov
lret
in
leave
inc
icebp
push
mov
cmpb
sub
cmp
mov
mov
popf
inc
or
cmp
push
push
cs
ljmp
or
into
inc
push
aas
out
out
sbb
inc
cmp
mov
fisubs
inc
pop
push
pop
mov
jg
cli
test
into
add
sbb
sbb
add
sub
or
pop
mov
ficomps
push
ret
or
movsb
mov
sbb
jb
mov
call
or
loope
sub
jno
icebp
sub
outsl
or
lcall
out
sbbb
push
push
call
pop
pop
pop
hlt
push
cli
in
pop
jnp
mov
addl
test
mov
std
cwtl
mov
xchg
sahf
vorps
shlb
xchg
rorb
xor
or
sub
inc
arpl
leave
mov
pop
mov
ss
jge
loop
in
dec
add
xlat
mov
or
loopne
insb
xorl
bound
ds
adc
fistl
loop
mov
fwait
out
sbb
in
ret
dec
stc
adc
push
pop
mov
mov
cmp
pop
js
stc
cltd
outsb
jmp
jg
jno
outsl
or
pop
lods
mov
fimuls
addr16
mov
jmp
and
call
inc
dec
sbb
stos
in
lahf
sbb
add
xchg
nop
ds
iret
xor
stos
popa
out
arpl
les
cli
mulb
adcl
mov
xor
imul
lret
les
add
dec
outsl
mov
inc
mov
scas
loop
les
mov
jns
push
push
bnd
les
vpaddq
or
push
pop
jecxz
leave
cmp
dec
mov
std
ss
pop
fsubl
xor
mov
loop
ret
gs
repz
andl
subl
fcmovnb
sub
inc
pop
add
cltd
mov
daa
bound
lret
pop
insb
adc
mov
clc
and
lret
ja
inc
push
sbb
fimull
mov
cmp
popa
insl
mov
add
fsubrp
jbe
mov
into
jnp
loope
adc
mov
popa
push
xchg
jge
call
mov
ja
sub
fdivrs
mov
adc
das
aam
push
int
sbb
push
lcall
push
gs
sub
imul
ds
mov
iret
int
daa
aam
sti
or
fisttpl
dec
mov
clc
push
push
or
mov
sub
das
and
fldt
pop
cmpsl
jp
jmp
jb
mov
aam
inc
sti
jge
lock
pushf
psubw
int3
in
inc
xor
ss
mulb
cmp
xorl
std
pop
mov
sub
add
lcall
test
pop
lahf
dec
lds
aam
ret
mov
push
jae
jnp
and
lcall
push
imul
xor
stc
xchg
aas
pop
nop
lret
addr16
int3
or
cwtl
cmp
mov
out
inc
insb
lret
push
cmc
and
stos
jl
mov
inc
inc
fsubrl
loope
lret
aaa
cmp
sbb
mov
pop
mov
mov
mov
gs
dec
and
push
imul
or
scas
les
sbb
and
pop
in
lret
mov
sub
push
mov
iret
gs
movsl
sbb
pop
adc
sub
aad
pusha
or
lret
lret
lcall
xor
cmpsl
popa
hlt
mov
fwait
jge
add
mov
mull
xchg
fwait
push
aad
pop
stos
xchg
out
mov
popf
push
cmp
pop
lret
sahf
aam
jl
lcall
rcr
pop
adc
lds
outsb
cwtl
dec
pop
adc
stc
mov
outsb
sub
shlb
sub
cwtl
mov
je
loope
stos
mov
xor
icebp
outsb
adc
jne
ljmp
in
push
aas
inc
dec
push
push
push
rcrb
xchg
dec
mov
sub
pop
dec
add
clc
xchg
test
xchg
iret
jne
add
jmp
xchg
mov
idivl
or
xor
mov
cld
cltd
cli
popf
in
cmp
cmpsb
fsubs
jae
mov
sbb
jnp
jecxz
imul
and
and
shll
jbe
xchg
aas
and
mov
push
out
cwtl
dec
mov
cmp
repz
push
push
sahf
test
rclb
negl
push
mov
xor
movb
and
idivb
sbbb
faddl
inc
mov
xchg
xchg
add
jo
mov
ljmp
and
jl
fists
mov
cmpsb
aam
es
jnp
outsl
pop
cmp
lods
out
mov
js
jae
fimull
scas
lret
pusha
jbe
aad
dec
adc
int3
dec
fimuls
clc
push
push
mov
mov
add
and
cwtl
in
addr16
xchg
sub
jge
imul
je
xchg
adc
fwait
inc
cmp
mov
cmp
add
repnz
lock
mov
adc
rcll
jno
movsl
push
lea
sahf
pop
or
sahf
popa
in
es
mov
nop
mov
adc
xchg
push
data16
mov
test
adc
imul
mov
cmpl
and
ret
add
les
mov
stc
mov
in
mov
mov
jmp
scas
test
decb
inc
ret
gs
pop
enter
push
cmp
jle
scas
daa
int3
dec
or
mov
and
leave
shl
sbb
pop
mov
popa
pop
jp
sbb
gs
leave
inc
stos
cs
push
arpl
xchg
out
repnz
sub
shlb
outsl
jo
xchg
femms
inc
insl
push
jno
and
stc
sbb
fcoms
cmpsb
xor
orl
sti
fidivrl
ret
jne
in
repz
or
adc
cmp
mov
and
xchg
test
call
fs
jle
jle
shr
es
ds
jecxz
cmp
add
sub
pushf
fstpl
into
in
adc
inc
cmp
mov
ret
out
or
lcall
mov
pop
push
cmpsl
mov
popf
loopne
lahf
loopne
lcall
scas
lret
cmpsb
rcrb
dec
in
sbb
ja
adc
push
aas
add
rolb
mov
cld
fistpll
adc
mov
push
xlat
fldl
xor
push
insl
mov
pop
mov
fs
addb
push
gs
cmp
and
and
stos
mov
ficompl
add
adc
sub
cmp
mov
sti
push
mov
lock
ret
stc
push
mov
sahf
testb
gs
sub
lret
je
addb
dec
cmp
xor
fcmovne
cwtl
inc
setae
sarb
cmp
sub
jnp
aas
aas
pop
out
fcompl
scas
andb
arpl
gs
insl
cmp
adc
test
mov
dec
leave
push
inc
sub
and
lcall
fisttpl
repnz
add
xor
loop
daa
push
test
push
ds
popa
mov
les
jp
mov
mov
adc
fneni(8087
arpl
lret
add
dec
jno
add
or
shrb
mov
js
sub
adc
inc
cmp
dec
and
std
enter
cmp
fs
push
adc
movsl
cmp
cltd
adc
lgdtl
cmp
inc
sub
sti
push
add
dec
cmpsl
xchg
cmp
mov
rorl
daa
insb
fwait
push
movsl
cmp
push
adcb
add
and
shrb
lods
add
out
data16
inc
jns
clc
and
outsl
pushw
jp
pop
cwtl
insb
int3
xor
std
js
xchg
test
sbb
xlat
je
daa
mov
jg
push
jle
lret
mov
int
xchg
aaa
cmp
jbe
cmp
test
jbe
push
ljmp
pushw
cmc
fsubrs
sbb
and
stos
jecxz
pop
outsb
sub
add
jmp
xor
data16
fcoms
lods
das
push
mov
ret
stos
pop
mov
or
jo
jb
ss
das
inc
stos
cli
dec
mov
sub
or
addr16
and
out
mov
inc
inc
mov
lahf
and
mov
jb
push
lea
pop
fstpl
xlat
lock
mov
jle
push
xchg
mov
adc
fistps
loop
and
jbe
adc
aam
jb
push
jl
jbe
cmc
js
cmp
xor
add
sbb
jbe
mov
pop
fisubl
push
xchg
jns
cld
or
lret
imul
and
and
cs
pop
mov
jg
pop
lods
xor
scas
dec
es
push
mov
cmp
rcr
pushf
addl
icebp
lods
add
iret
lock
stc
jae
imul
mov
outsb
push
cmp
std
lahf
xchg
mov
xchg
sbb
cmpsb
jo
and
clc
dec
lret
adc
adc
mov
dec
pushf
ja
subl
adc
test
xchg
cmpsb
je
xor
or
inc
cmp
shrb
lods
sub
and
pop
fsubr
jb
push
xor
mov
aaa
sahf
push
shl
int
mov
fsubs
shrb
lods
pop
fucom
push
icebp
inc
icebp
push
shll
aad
or
jmp
push
data16
cld
sbbb
pop
xchg
inc
arpl
xchg
xor
or
int3
ret
fldl
iret
mov
and
jmp
lds
adcb
out
inc
int
xor
jo
lds
mov
xlat
incl
gs
scas
popa
cmp
loope
xor
daa
xchg
inc
jne
fsubl
es
jae
adc
les
das
adcl
push
or
and
in
adc
loopne
mov
jmp
sub
fidivrs
fcomps
scas
jo
cmp
lods
mov
jae
ljmp
aad
mov
stc
repnz
mov
xor
mov
lahf
dec
push
dec
ret
xchg
insl
mov
dec
inc
imul
nop
int3
cmpsb
sub
xchg
jnp
loopne
jno
mov
inc
fwait
pop
mov
mov
pop
popa
mov
inc
lret
out
add
xchg
into
xlat
mov
repz
mov
rclb
cmc
jb
xchg
in
mov
dec
aam
iret
test
loop
jns
jecxz
cmpb
push
cmpsl
fnsave
outsb
dec
add
inc
adc
jg
push
daa
cs
imul
cmpsb
jp
and
inc
cmpsb
add
mov
sbb
decl
pop
mov
loopne
inc
aam
sbb
mul
and
and
std
in
mov
push
repnz
mov
fwait
shlb
adc
and
and
jle
hlt
fsubr
insb
dec
jp
mov
lods
test
jae
and
push
and
cmp
mov
in
cmp
mov
sbb
shll
or
dec
insl
inc
pop
movsl
pop
mov
ret
jge
sbb
dec
push
adc
xor
cmp
and
add
jge
loope
jno
push
dec
cld
xchg
mov
mov
pop
inc
iret
pop
or
adc
mov
shlb
push
popf
or
xor
adc
and
push
lret
xchg
inc
rcl
jno
adc
lods
leave
imul
adc
cmc
ss
jne
xchg
and
or
xor
aaa
pop
test
je
out
shr
int3
mov
dec
into
sub
inc
sbb
out
popf
arpl
adc
sub
xchg
fisubs
call
push
or
test
push
repnz
mov
jmp
inc
inc
sbb
push
ds
aad
mov
cs
inc
pop
sub
adc
dec
xchg
push
pop
sbb
xor
xchg
dec
and
ficompl
add
pushf
jb
test
cld
mov
into
and
int3
jp
enter
dec
jno
pop
hlt
add
repnz
cmp
push
push
xorl
pop
inc
push
std
push
sbbb
sub
lahf
add
das
mov
stos
mov
add
fstps
mov
mov
call
mov
inc
xchg
inc
gs
lret
imul
or
fimull
jecxz
pop
movsb
mov
lods
imul
mov
sbb
outsl
loopne
movsb
rorb
aaa
push
cmp
pushf
and
fsubl
sbb
aam
xchg
push
popa
sbb
outsl
jmp
cmc
push
mov
mov
cmovne
pusha
push
dec
das
jle
sbb
jmp
pop
pop
addl
dec
adc
push
mov
jae
in
stos
add
out
mov
fsub
mov
jns
movsl
inc
inc
lahf
popa
cli
add
scas
loope
dec
xchg
lods
push
sarb
pop
imul
mov
int
xchg
nop
lret
mov
jae
into
mov
repz
fists
add
push
cwtl
lret
xchg
cmp
in
and
jle
cs
aas
sbb
push
test
mov
xchg
fldt
lcall
nop
iret
inc
les
cli
mov
inc
flds
ret
xor
bound
ret
lods
dec
pop
pusha
push
xchg
lcall
xchg
imul
leave
mov
sbb
cwtl
ljmp
rcll
pusha
ds
les
loopne
jmp
pushf
ljmp
cmp
pop
mov
sarb
sbb
inc
enter
jg
jae
cli
mov
lcall
pop
sbb
jo
mov
popf
in
jl
fsubs
dec
icebp
push
push
dec
sbb
inc
sbb
lods
and
icebp
lcall
xchg
sbb
xor
mov
pop
bound
call
sub
mov
gs
int3
dec
loop
movsl
cmp
xchg
out
negl
mov
imul
divl
mov
or
jne
or
mov
jns
xchg
in
loop
or
pushf
add
pop
sbb
cmc
adc
pop
icebp
addb
sub
test
mov
loope
fstpt
ret
mov
bound
jns
fimuls
pop
push
sub
mov
push
mov
pop
cwtl
std
jnp
xor
cmp
push
pop
cmc
fistps
out
sbb
sbb
add
or
loope
loopne
aad
das
insb
xchg
daa
lcall
mov
add
sti
enter
xchg
lret
int
mov
rcr
hlt
popa
in
test
test
popa
roll
call
add
rolb
pop
jb
pushf
push
popf
cmp
mov
lods
movb
movsb
stos
es
and
pop
mov
int
push
popf
aas
test
xchg
test
aaa
mov
scas
or
mov
in
negl
mov
lods
fwait
xchg
fldt
or
es
lret
push
call
push
pop
and
jge
sub
lods
xchg
mov
es
je
xor
ror
mov
xor
popa
jg
arpl
addr16
mov
das
push
scas
in
arpl
lret
and
ljmp
repnz
nop
cmp
jle
cmp
imul
cmp
in
movsb
sub
popa
sbb
cs
push
mov
je
mov
out
jmp
shll
dec
mov
mov
bound
sti
cmp
mov
inc
mov
add
adc
inc
in
icebp
loop
fmull
lea
inc
into
inc
scas
aas
xchg
xchg
mov
add
and
dec
pusha
jmp
and
mov
pop
dec
xchg
data16
out
bound
out
test
adc
outsl
and
pushf
jl
mov
lret
test
pusha
sbb
jg
call
mov
mov
push
stos
jo
xchg
push
pop
mov
movsb
jge
rol
ja
out
adc
push
rcrb
lods
pop
mov
xchg
sti
in
jbe
loope
xchg
lret
mov
scas
sbb
or
je
pop
cwtl
lahf
pop
cld
jbe
lods
push
jno
fsubrs
out
pop
push
jge
mov
cmpsl
into
add
pop
cmp
shl
fcmovnbe
arpl
xor
mov
sti
movsb
sbbl
in
shlb
cmpsb
jecxz
push
jb
sub
push
mov
in
icebp
mov
and
xor
or
popa
pop
mov
jb
rorl
movsl
sahf
jge
pop
into
mov
sbb
xchg
add
sub
dec
in
adc
mulb
sbb
dec
lock
mov
popf
bound
test
pop
add
test
movsl
cmc
mov
mov
dec
inc
sysret
xor
jmp
fcompl
icebp
xchg
cmp
jg
xorb
das
fidivl
mov
idivl
mov
cmpsb
test
xorl
aaa
pop
push
inc
test
imul
lods
call
pop
adc
inc
fnstcw
pop
sbb
mov
sbb
mov
inc
adc
or
mov
cmp
xor
push
xor
xor
in
push
add
sbb
cli
sbb
lods
fisubs
sbb
cmpsl
test
dec
sub
arpl
xor
data16
icebp
cwtl
sbb
stos
cs
lds
dec
xchg
scas
cmp
ror
pop
movsb
jle
lret
into
lock
ficompl
cmp
sbbl
jb
push
insl
jnp
push
push
or
rclb
cmp
push
mov
inc
jae
icebp
sti
jo
rcll
iret
mov
xor
in
sub
int
movsl
dec
fldcw
sbb
sbb
xchg
xor
sbb
push
repnz
out
inc
mov
loop
fsubl
addl
pop
imul
xor
popa
add
cltd
in
xor
divb
cmp
xlat
repz
ret
gs
mov
ljmp
int
das
cmc
push
lret
sbb
and
mov
stos
mov
subl
test
jmp
adc
cltd
jmp
scas
dec
add
add
or
sub
jmp
gs
push
mov
dec
mov
cs
push
pop
lods
sarb
mov
loope
call
mov
ja
xor
sbb
insl
add
push
loopne
lret
pop
inc
pop
add
mov
mov
adc
cmp
out
ds
xchg
mov
cmpsl
cmp
pop
inc
scas
and
mov
sbb
push
mov
mov
cs
push
es
outsb
lcall
lock
mov
jb
ss
dec
push
cmp
push
leave
push
sub
xor
scas
loop
cmp
inc
into
clc
dec
stos
je
cmpsl
mov
mov
cmp
pop
in
and
adc
jle
mov
jge
jo
arpl
pop
in
pushf
aaa
pop
jecxz
into
stc
mov
clc
dec
aas
adc
sbb
mov
js
mov
in
jmp
add
mov
setge
sbb
lea
jle
mov
pop
out
notl
ret
cli
pop
subl
xchg
insl
add
mov
pop
decl
sahf
push
clc
in
insl
jns
inc
and
adc
out
in
cmp
mov
sbb
addr16
addr16
in
rcrl
ljmp
jnp
mov
mov
je
mov
cmp
mov
and
jle
out
jecxz
loope
andl
or
stos
mov
xchg
mov
push
dec
aad
nop
ljmp
pop
jle
mov
dec
jg
jb
pusha
cmp
jl
cli
mul
xor
xchg
rcl
jno
and
nop
jmp
psubd
mov
sbb
call
sub
mov
icebp
bound
xchg
inc
aaa
push
outsl
pop
mov
enter
pusha
pop
push
stos
sti
inc
mov
jnp
xor
pop
jbe
call
adc
jg
jae
cltd
arpl
lea
cmp
lods
pop
xor
sub
pop
push
jecxz
cmp
in
int
add
outsb
popa
outsb
cmpsl
xchg
out
cs
xchg
and
push
je
iret
add
push
mov
mov
adc
cmp
into
jnp
xor
rorl
push
ret
test
add
push
les
jge
lahf
push
jbe
xchg
cld
jmp
roll
stos
ficoms
rolb
push
repz
test
dec
ja
popa
mov
aas
mov
adc
xchg
outsb
dec
push
fwait
cmp
test
mov
sbb
and
cmp
cmpsb
out
jge
jg
xor
les
imul
cmpsb
xchg
rcll
repz
fs
jae
xchg
pop
xor
cmpsl
mov
adc
repz
rolb
jne
mov
pop
push
adc
xchg
or
mov
dec
sarb
mov
push
pop
rcrl
pop
jae
fisubl
mov
nop
dec
negb
fs
mov
jbe
ret
lea
in
fmull
movsb
add
cltd
xchg
les
arpl
sbbl
lahf
out
mov
out
and
aam
jno
pop
sub
add
xor
cwtl
mov
scas
xchg
mov
push
sub
jg
rorb
aas
repnz
dec
ds
out
movsb
xor
loop
sahf
cli
mov
xor
mov
and
pop
adc
lahf
pop
out
into
aaa
add
pop
je
xchg
enter
jno
jl
cmpsl
cmpsl
in
or
cld
push
je
mov
xchg
iret
jbe
cltd
lock
sbb
pop
xchg
int
add
mov
ficoms
mov
fcomps
lcall
add
mov
test
cli
inc
or
inc
into
mov
and
mov
sbb
stc
inc
fnstsw
cld
cmp
cltd
test
ja
xchg
loop
add
lods
insl
or
xor
add
aam
push
push
pop
xor
out
pop
test
cmc
fldenv
push
inc
sahf
jnp
sub
and
xchg
dec
cli
mov
push
xchg
fs
dec
cld
push
jno
push
mov
in
cmp
cmp
adc
mov
push
loope
push
fmull
daa
ficomps
insl
stos
adc
cmp
dec
aam
scas
dec
push
ja
inc
fdivs
popf
ss
andb
dec
cld
add
outsb
inc
out
sbb
aad
icebp
jno
mov
stos
test
jbe
sub
mov
imul
shll
dec
pop
lods
lret
jp
mov
push
mov
leave
jge
scas
sub
xchg
mov
sbbb
jmp
sahf
xchg
pop
push
insb
add
testb
xchg
jae
mov
mov
jp
and
das
dec
pop
xchg
or
jge
mov
int3
mov
rol
fs
cltd
jb
ss
inc
jecxz
sub
mov
adc
fsqrt
pop
pop
pop
mov
into
divl
inc
or
sub
mov
divps
out
test
inc
inc
pop
cli
xlat
ret
mov
adc
mov
mov
ffree
aaa
adc
ret
mov
inc
loope
pmuludq
xchg
lret
pop
sub
adc
ja
loope
push
stos
add
imul
push
mov
insl
dec
push
or
push
mov
fs
jbe
shr
pusha
mov
lock
leave
sbb
ja
hlt
and
cli
add
mov
mov
bound
js
mov
dec
mov
dec
out
outsb
ficoms
pop
push
dec
xlat
mov
mov
xchg
xor
and
xor
mov
adcb
mov
sub
lock
adc
repnz
in
mov
cmpsl
repnz
pop
cmp
cltd
cmc
movsl
test
outsb
imul
cmc
sbb
int
je
xchg
xlat
rcrb
stos
jp
jb
mov
mulps
xor
push
and
mov
in
ljmp
cmp
and
sub
xchg
and
xchg
fcoms
je
in
cmp
or
sub
add
or
sarl
mov
leave
adc
mov
and
jmp
inc
sbb
and
sub
into
jge
push
ret
es
cli
adc
xchg
inc
dec
mov
dec
outsb
call
xchg
fcmovb
movsl
adc
icebp
cwtl
lock
outsl
and
popf
push
cltd
xor
test
dec
dec
inc
xchg
sbb
xchg
add
inc
shll
adc
imul
and
mov
or
ficompl
scas
and
or
sbb
inc
xchg
pop
xchg
gs
push
mov
cmpsl
cmp
leave
xor
xchg
push
adc
outsl
lahf
pop
jb
arpl
xchg
imul
scas
hlt
ret
inc
fnstsw
in
dec
jecxz
mov
push
neg
sbbb
xchg
inc
jmp
shlb
ror
das
test
inc
movsb
fsubs
outsl
mov
inc
fidivrs
call
xor
cwtl
aas
cwtl
test
das
ljmp
cld
mov
gs
dec
lea
adc
xor
insb
mov
inc
mov
pop
mov
push
xor
js
js
frstor
push
mov
cmp
ret
or
jl
and
and
xchg
cld
in
cli
in
inc
cs
sbb
and
mov
pop
aam
pusha
or
frstor
ljmp
stos
mov
imul
add
pushf
idivl
sarb
jbe
mov
sub
mov
je
nop
ret
jmp
ss
mov
mov
lcall
cmp
jecxz
pop
lret
pusha
mov
das
lahf
int3
lods
imul
movsl
out
mov
dec
lock
test
leave
xor
dec
jnp
popf
aam
jne
cmp
sbb
scas
jecxz
adc
idivl
cmp
fcomi
pop
pop
xor
add
xor
xchg
ret
mov
addr16
push
aaa
idivl
xor
pop
and
push
sbb
sub
cmpsl
adc
push
and
bnd
sub
lods
sub
pop
js
les
xchg
jmp
xorb
inc
fcmovb
sub
testb
popf
loope
mov
cwtl
gs
and
or
out
adc
xchg
or
sbb
stc
icebp
mov
pushf
int3
push
es
mov
scas
dec
out
cltd
inc
push
shll
jecxz
cmpsb
push
imul
icebp
xor
mov
sbb
bnd
mov
pop
adc
jle
rcr
fsubrs
sub
out
add
int3
jnp
push
sub
and
jge
call
or
and
mov
in
pop
and
ljmp
cmp
subb
xor
mov
loop
in
lret
shr
or
push
mov
stos
test
nop
movsb
cmp
sbb
inc
mov
gs
mov
pop
pop
add
mov
loopne
sub
adcb
test
divb
cmpl
mov
loope
scas
sbb
je
mov
mov
sub
and
jecxz
push
stc
inc
arpl
sarb
out
jp
and
jl
lods
jmp
test
popf
dec
lods
lock
pop
les
pop
test
or
decl
push
dec
lock
in
push
xchg
mov
mov
pop
orb
shlb
outsl
repnz
push
mov
mov
jb
and
dec
lds
or
jmp
scas
sbb
subb
inc
xchg
outsb
stos
in
aas
cwtl
jb
dec
jae
in
or
dec
mov
inc
jp
or
ret
dec
fwait
push
fwait
in
sub
push
xor
inc
test
inc
adc
cwtl
push
test
bound
cmp
push
aad
pop
xlat
and
push
lock
lret
bound
dec
cmp
inc
jbe
dec
test
lcall
lret
inc
or
jbe
pusha
dec
push
loop
outsl
and
movsl
pop
sbb
idiv
add
popa
cwtl
aam
pop
fsubrl
or
fadds
and
mov
pop
fnstenv
testl
pushf
cmp
or
in
pop
xchg
pop
into
cld
mov
js
mov
out
adc
inc
and
inc
push
cmpsb
xlat
and
push
adc
xchg
loope
sub
vpsllw
fwait
sahf
out
lea
in
or
rcrb
pop
push
push
xor
jae
push
cmpsb
cmp
jne
pop
js
cwtl
sbb
mov
mov
inc
cmpb
mov
or
pop
js
dec
rcrl
pop
xor
mov
rorb
roll
cltd
imul
dec
fcompl
sub
sbb
jle
push
push
lret
dec
mov
cmp
or
test
out
sbb
pop
jmp
xchg
popa
mov
out
push
rcr
int
fcoms
xor
jge
packssdw
movsb
fs
sub
outsl
in
or
insl
adc
fnstenv
out
loopne
pop
push
ja
fidivrl
inc
mov
push
add
add
rcr
fadds
jmp
mov
loope
pop
testl
sbb
icebp
sbb
test
popf
mov
test
ret
mov
je
lds
add
ljmp
jns
pop
cmpsb
xor
gs
testb
jge
mov
mov
std
adc
pop
pop
lret
xor
insl
cmpsl
inc
lahf
mov
cmp
push
mov
jns
outsl
pushf
insb
xor
fbstp
out
out
push
imul
or
adc
clc
leave
cmp
dec
popf
imulb
mov
out
and
lock
or
ficompl
sub
or
cmp
sbb
add
out
sub
mov
outsl
add
decb
fisubrs
insl
rcr
stos
mov
das
and
push
push
xchg
or
insl
pushf
shl
pop
mov
aad
movsb
or
jae
adc
cld
mov
add
xor
push
mov
ficomps
jno
loopne
inc
jnp,pn
inc
mov
shlb
push
mov
lcall
xor
xchg
test
lock
fidivs
cmpb
or
push
xchg
stos
push
inc
ror
fadds
xor
in
mov
xor
cmp
js
mov
scas
mov
repnz
mov
adc
pop
mov
mov
and
push
mov
repnz
mov
cmp
dec
or
imul
test
shl
imul
outsl
lahf
addr16
pop
in
pop
lahf
xor
xchg
push
daa
std
daa
dec
iret
lret
inc
cmp
jno
fcompl
and
repnz
push
xchg
sbb
stos
int3
js
std
mov
orb
or
and
in
pop
mov
mov
xor
pop
gs
aaa
or
xchg
push
inc
sti
out
lahf
cld
mov
dec
lods
sub
lods
pushf
icebp
leave
jecxz
jle,pt
and
out
jp
std
pop
inc
loope
push
lods
push
fcomp
mov
cmp
cli
sub
ficomps
sub
aam
out
cwtl
cmp
jne
jb
frstor
dec
pop
xchg
mov
adc
ret
dec
es
nop
add
dec
dec
or
mov
or
sub
and
cwtl
pop
insb
pop
int
mov
sti
stc
jmp
cmp
insb
add
jge
mov
sub
mov
xchg
mov
clc
je
xchg
popf
inc
arpl
test
mov
jmp
pop
cmp
push
xchg
ret
jnp
xor
data16
xor
leave
fwait
mov
mov
push
xchg
or
loope
sub
jnp
pop
dec
lret
pop
cmc
sbb
ja
fstl
pop
adc
adc
sub
push
in
jmp
outsl
jmp
rorb
movsb
jno
das
pushf
add
xchg
insl
fdivrs
cmc
lods
int3
add
dec
dec
dec
repnz
dec
cmpsl
fiadds
outsl
sbb
mov
ret
cltd
pop
loop
mov
jge
cmpsb
negl
cltd
inc
rorb
cwtl
fdivrs
inc
sbb
mov
or
daa
jecxz
aaa
pop
ds
push
in
repnz
push
sbb
jno
popf
sahf
jno
inc
in
mov
add
mov
pop
sbb
mov
mov
adc
sbb
jl
sbb
lods
add
and
test
scas
fnstcw
leave
and
mov
jg
inc
lret
loopne
and
jmp
in
xchg
mov
mov
mov
movsl
repz
mov
mov
pop
inc
jo
dec
outsl
insl
fmuls
inc
adc
add
test
cmp
rolb
sbb
jmp
adc
loope
or
xchg
sub
sbb
add
std
pop
fs
jp
adc
loope,pn
or
clc
push
int
insb
daa
jg
aam
sub
sbb
or
stos
mov
movsb
xor
divl
je
iret
and
sub
xchg
jl
push
stc
add
scas
fdivs
stos
lods
repz
xor
imul
push
out
mov
test
push
icebp
stc
pop
fucom
dec
mov
les
sub
pushf
mov
xchg
aas
shlb
mov
mov
repz
xchg
mov
sbb
inc
pusha
pop
mov
mov
bound
ja
out
cmpsb
and
xor
inc
xlat
mov
sub
fbld
in
or
dec
pushf
xlat
inc
jle
mov
fcoms
sub
je
xor
jmp
mov
jns
sbb
push
mov
inc
push
mov
jg
aas
jnp
imul
sbb
sbb
push
hlt
mov
aad
imulb
addr16
cmp
inc
sub
jne
push
xlat
jb
int
add
push
fisubl
scas
adc
mov
xchg
add
cmc
xchg
push
push
addr16
dec
or
xchg
pusha
pop
test
or
fistps
rorl
sbb
mov
add
subl
xchg
cmp
ret
adc
adc
push
sub
lret
fsubl
and
cli
xchg
pop
test
inc
jecxz
xchg
xor
movsl
ret
pusha
sahf
in
cmp
cwtl
dec
fmuls
cmp
rolb
push
mov
and
fwait
hlt
aaa
es
stos
adc
repz
mov
clc
mov
push
movsl
scas
push
decl
sbb
inc
mov
pop
mov
xchg
ret
jge
mov
sti
push
push
nop
jbe
loope
mov
and
add
xchg
fisttpll
or
mov
arpl
pop
xor
cmpsl
xor
fldl
int3
mov
cli
xorb
loopne
mov
add
push
cmc
mov
jb
jo
cmc
dec
mov
jmp
out
in
dec
jo
xchg
xchg
mov
or
mov
pop
roll
insl
push
imul
lret
mov
sti
or
aam
xor
push
adc
xor
mov
push
test
sub
sbb
aas
mov
push
sahf
das
add
rorl
push
push
sbb
sysenter
pop
test
outsl
xor
cwtl
mov
stos
pop
mov
int3
ja
fists
stos
into
lods
push
inc
dec
stos
pop
ret
xor
mov
xchg
push
push
out
lds
mov
cltd
inc
push
outsb
hlt
mov
mov
jns
scas
rcl
cmp
xor
in
in
mov
sub
dec
cwtl
mov
xor
sahf
lret
xchg
test
jecxz
inc
cmp
clc
jo
outsl
roll
fsts
jle
es
out
mov
cmpl
mov
mov
and
cmpsb
sbb
sub
push
or
sti
addr16
cmpsb
and
push
dec
mov
xchg
pop
xchg
ljmp
fmuls
mov
xor
shr
mov
dec
pop
aad
loope
or
popf
jns
sbb
popf
adc
mov
inc
popf
mov
mov
movsb
sahf
les
lret
sahf
jmp
cmpsl
sub
dec
push
adc
negb
mov
dec
jae
sub
xor
or
into
cmp
mov
inc
js
pop
jge
xchg
loop
pop
iret
jbe
loop
or
push
stos
adc
dec
out
and
jcxz
adc
std
push
adc
aam
aam
xchg
sub
or
add
add
mov
out
addb
mov
test
bound
inc
xor
mov
add
adc
cld
lahf
add
xchg
loop
xor
and
nop
or
das
stos
js
shlb
bound
jl
inc
pop
cmp
mov
push
or
inc
dec
push
rcrl
cld
outsl
cmp
rcll
jb
jg
jnp
aam
lea
insb
lods
jae
add
push
push
loop
in
mov
pushf
mov
push
jl
mull
call
aam
out
mov
xor
add
imul
adc
in
xchg
flds
not
imul
push
rolb
cmp
mov
mov
jno
adc
mov
in
adc
into
fldenv
push
mov
call
adc
lods
push
cld
stc
sub
and
movsl
loopne
xchg
xchg
std
mov
subb
push
mov
outsl
pmaxsw
inc
pop
or
fadds
stos
sub
mov
add
mov
push
ret
xchg
xchg
in
inc
add
cmpsl
xor
test
and
movsb
cmp
inc
inc
movsl
in
inc
push
scas
jae
stos
repz
and
inc
adc
in
mov
out
leave
xor
rcrb
dec
int3
pushf
xchg
scas
jns
shlb
cld
jbe
sub
addr16
dec
int3
mov
mov
jno
mov
ljmp
xor
iret
add
dec
data16
mov
mov
mov
jbe
ret
das
jle
xchg
mov
lods
call
dec
test
shlb
pop
mov
idivl
xchg
push
arpl
xchg
mov
jmp
in
popa
aad
xorb
ja
les
dec
or
jl
rorl
ret
clc
and
xor
popl
xchg
sbb
hlt
jle
fxch
xchg
stc
gs
outsb
roll
movsl
xchg
in
rcl
or
mov
sub
arpl
out
mov
pop
jmp
cs
in
mov
pmaxsw
fmulp
js
or
andb
add
outsl
mov
fsubl
arpl
mov
xchg
rcrl
mov
cmc
adc
xor
out
das
jns
insl
sar
cmp
or
aam
or
pop
stos
mov
adc
sbb
add
fsubs
adc
out
stos
lret
js
es
aad
jns
iret
das
shll
sub
pop
ds
stos
cli
lods
or
lahf
adc
ret
sub
shr
aam
stos
adc
std
movsl
rcrl
into
cmp
lahf
pop
dec
popfw
xor
or
cmp
mov
push
shl
or
movb
pushf
pop
pop
call
inc
movsl
shll
mov
add
mov
push
mov
call
dec
jmp
imul
mov
scas
xor
dec
add
divb
and
data16
xor
ret
and
cmp
xor
xchg
insb
ja
popf
inc
out
adc
cmp
add
cmp
sub
arpl
jl
sub
mov
gs
aad
in
pop
psllw
ss
sub
loope
xchg
test
push
sub
stos
mov
ja
outsb
movsl
push
test
rcrl
dec
fisubl
mov
jne
jne
int3
stc
loopne
fisttpl
xor
push
inc
out
cmp
jae
or
arpl
dec
in
imul
xchg
cld
into
data16
mov
imul
insb
dec
or
or
bound
out
push
pop
add
and
cmp
repz
or
pop
push
cmp
aad
push
sbb
push
imul
test
in
je
push
cmp
nop
mov
cmp
insb
xor
es
push
bnd
add
shlb
mov
in
pop
repz
fstps
inc
test
jo
mov
lret
and
pop
sub
int3
popa
inc
inc
pop
je
movsl
hlt
inc
pushf
jne
jns
adc
stos
add
cmp
ret
mov
jp
repz
loopne
data16
adc
aam
test
roll
rcrb
lock
or
adc
pop
fcompl
inc
shl
xchg
stc
cld
mov
cmc
and
loope
and
andb
pop
scas
lods
and
mov
mov
std
xor
mov
dec
test
mov
sbb
fisttpl
arpl
push
mov
sbb
test
mul
ja
mov
aaa
pop
pop
shlb
test
les
lcall
lods
mov
iret
or
and
mov
sbbb
fisubl
cmp
jecxz
jnp
inc
icebp
into
imul
pop
test
subb
lods
xor
int3
xor
fiaddl
fstpt
ret
inc
cld
cmpsl
mov
and
into
mov
insl
cltd
add
fcoml
bound
arpl
popf
mov
cwtl
fsubr
and
clc
test
sahf
loope
xchg
mov
add
xchg
fidivl
daa
hlt
xchg
sbb
test
shlb
cmp
mov
sbb
jecxz
add
in
sahf
mov
push
lea
bound
push
ja
push
mov
sbb
add
xor
scas
pushf
xlat
cmpsb
data16
arpl
lret
ljmp
jae
gs
dec
mov
and
stc
mov
push
nop
fwait
dec
sub
mov
xchg
pop
sbb
in
jae
jge
out
adc
faddl
xchg
mov
adc
lea
xchg
cs
xor
adc
jns
jb
adc
call
push
addr16
push
lods
xchg
pop
loopne
mov
jge
addr16
stos
jns
xlat
mov
sbb
loopne
fmull
cmp
data16
pop
jg
icebp
mov
xchg
sub
mov
add
mov
or
jbe
cmp
test
rorb
ljmp
inc
lcall
jb
and
push
insb
gs
sub
xorb
ret
xchg
jecxz
push
arpl
icebp
xor
inc
add
mov
lock
mov
inc
outsb
cmp
imul
jo
xor
pop
repnz
fisttps
inc
popf
addb
nopl
lea
mov
cs
mov
enter
es
jo
sti
pop
cmp
mov
mov
add
mov
jle
jge
xchg
aad
xchg
cmc
mov
push
jb
cmpsl
jl
jp
cmpsb
fildl
gs
xchg
lods
pop
cmp
xchg
fldl
test
xchg
and
jl
mov
sti
out
insb
xor
jle
or
aam
stos
sti
adc
aas
bnd
xor
aaa
mov
adc
movsl
and
xor
cmp
orl
lea
adc
pop
inc
xchg
shlb
out
xchg
pop
ret
test
popf
testb
dec
xlat
sbb
jl
ret
inc
mov
jle
int
aas
insl
ret
out
pop
popa
flds
jl
mov
shlb
pop
lods
adc
in
or
dec
fsubp
adc
or
pusha
xor
add
adc
mov
mov
xlat
mov
in
idivb
adc
mov
xor
test
es
xchg
pop
inc
aas
xor
stos
jl
nop
divb
xchg
int3
pop
push
loop
shrb
inc
cmpsl
jp
pop
cmp
mov
sahf
xchg
movsl
inc
jl
add
dec
das
mov
scas
lock
bound
mov
mov
lods
mov
pop
sbb
loopne
int3
and
scas
push
add
cltd
stos
js
test
into
mov
in
inc
xchg
lods
hlt
or
arpl
mov
push
test
jle
jge
cmp
xchg
lods
in
test
jp
sbb
int
fdivp
cmp
sub
pop
mov
loope
cmpsb
xchg
add
bswap
stos
pop
pusha
mov
insb
push
add
sahf
int
inc
pop
mov
mov
cltd
cltd
pop
out
xchg
and
imul
dec
xor
gs
sahf
xor
or
imul
jecxz
sub
sbb
jb
stos
test
cmpsl
pop
popa
lea
ror
in
aas
and
mov
bound
aad
push
hlt
sub
mov
arpl
dec
roll
jne
mov
imull
xor
cmp
push
icebp
and
cmp
std
dec
mov
mov
lea
fs
mov
fld1
dec
mov
dec
fs
jmp
and
roll
jno
fsubrl
popa
mov
mov
nop
or
xchg
jnp
push
enter
rclb
daa
sbb
inc
mov
rorl
ljmp
cmp
imul
in
sub
fbstp
adc
stc
jle
fwait
data16
call
roll
popl
cmp
int3
cld
mov
in
insl
outsl
inc
mov
stos
rcr
mov
fstpt
lret
clc
imul
jo
xchg
lea
push
leave
mov
lods
aaa
es
sbb
xor
inc
or
jo
push
addb
in
push
cmp
cmc
jno
test
mov
jnp
and
in
cmpsl
push
mov
aam
jge
xor
sahf
ret
fnstcw
or
std
sti
data16
cmp
inc
or
insl
jb
stos
mov
mov
jg
fwait
nop
arpl
xchg
ficoms
sub
lds
mov
mov
mov
jns,pn
leave
ljmp
cs
stc
inc
inc
pop
push
repnz
mov
int
ja
arpl
dec
xchg
xor
aaa
loopne
add
je
clc
repz
or
sbb
ja
scas
push
sub
or
jg
pop
mov
in
sbb
cmp
std
inc
fsubrl
push
aaa
gs
cli
push
adc
scas
enter
adc
int3
inc
lret
divl
neg
call
or
aas
inc
xchg
fnstcw
lret
sbb
xchg
loop
imul
enter
hlt
and
xchg
push
cmp
or
mov
jmp
lcall
std
loope
fisubrl
icebp
sarl
test
adc
inc
xchg
and
mov
das
and
pop
cwtl
scas
fldenv
jnp
pop
and
jo
test
pop
jecxz
ja
or
cmp
add
dec
or
out
notl
pop
dec
out
push
mov
sbb
jmp
push
out
sti
push
dec
imul
lret
xchg
stc
mov
jecxz
xlat
lea
or
cmp
xor
mov
mov
stc
lret
and
mov
std
and
aam
lret
shl
jno
inc
or
movsb
imul
and
jbe
cmpsb
dec
mov
or
mov
pop
and
add
sub
popa
rol
add
rcrl
and
icebp
out
fnstenv
pop
cmp
mov
push
gs
fcmovu
subb
push
mov
dec
xchg
iret
inc
or
inc
jl
jg
xorl
mov
mov
jno
ror
pop
aam
out
inc
inc
or
dec
inc
pusha
insb
mov
setns
cli
lret
sub
repnz
jns
addl
dec
xor
mov
cs
ljmp
orl
pop
sbb
sti
out
divl
call
popa
mov
lods
ds
mov
mov
imul
push
jmp
jne
cs
mov
xchg
in
mov
and
or
inc
stos
jno
fs
mov
cmpb
call
repz
pushf
fwait
cmp
pop
and
clc
je
hlt
sub
mov
orl
cmp
push
push
mov
cmp
xchg
sarb
incl
out
add
mov
movsl
lret
push
aas
and
mov
xchg
sub
in
test
std
sbb
pop
cmpsl
jle
out
jmp
xor
lea
xlat
fimuls
dec
fidivl
sub
push
mov
xchg
push
pop
xor
out
mov
and
cmp
xor
xlat
push
pushf
iret
xchg
xchg
mov
and
cmc
xor
or
inc
push
jge
testl
addr16
lahf
push
and
adc
mov
or
mov
fists
ljmp
or
or
sbb
adc
jle
in
sub
inc
clc
fcmove
fcomip
out
cmpsl
ss
push
jecxz
jns
cmpsl
out
aad
xlat
jge
fisubrs
mov
jae
sub
daa
in
andl
fsubr
jge
cmp
cld
lds
sbb
jmp
dec
pop
cmpb
push
les
addr16
xor
and
test
arpl
jno
jmp
sti
lea
dec
rcl
lahf
fisttps
jle
pop
addr16
dec
cwtl
push
cmp
push
adc
sbbb
push
jmp
add
push
add
mov
out
jo
cltd
mov
xchg
enter
jle
xor
hlt
pop
jge
das
icebp
cmp
sub
out
sbb
in
and
mov
mov
mov
adc
jne
aaa
in
dec
mov
fcmovu
push
inc
stos
adc
add
jmp
sbbl
mov
inc
jg
les
loop
lods
cmpsl
lods
sar
scas
cs
and
sbb
sbb
adc
rcrl
data16
dec
mov
xor
dec
leave
or
dec
xorb
pop
mov
mov
push
mov
shlb
lret
mov
rcrb
in
data16
fnstenv
jbe
fs
xchg
in
dec
xchg
inc
iret
mov
jmp
leave
mov
mov
sub
cli
repnz
add
jge
movsl
mov
xchg
mov
xlat
push
jnp
popf
idivb
lea
fbld
sti
loop
xor
mov
aad
jne
lahf
jecxz
adcl
mov
incl
scas
fdivr
pop
push
xchg
adc
stos
mov
mov
adc
mov
lea
jg
jecxz
arpl
xor
cmpb
jb
arpl
or
cltd
inc
cmpsb
adc
outsb
mov
dec
xchg
clc
in
je
push
push
mov
sti
sar
insb
sub
or
sub
cmp
data16
mov
add
fmuls
jae
inc
ret
push
test
mov
cld
push
out
ljmp
pop
cld
inc
scas
jo
out
movsl
xchg
sbbl
cmp
das
mov
movsb
stc
testl
jmp
sahf
pop
sbb
cli
repnz
cs
xor
fdivr
inc
scas
mov
sti
popf
lahf
sbb
in
inc
push
inc
jecxz
mov
xor
sbb
int3
ljmp
in
negb
cmp
leave
xchg
jo
jecxz
out
mov
sbb
jbe
and
mov
mov
push
mov
in
pop
mov
insb
mov
pop
xchg
dec
test
aas
icebp
insb
xor
loopne
mov
loope
sar
xchg
pop
sub
sbbl
int3
or
pop
aam
push
push
ja
push
pop
push
xchg
mov
repz
movb
mov
in
cs
jno
jns
add
dec
dec
cltd
test
daa
xchg
insb
push
idivb
fidivrs
adc
mov
pop
hlt
pusha
xor
push
mov
test
push
cmp
out
jb
fcmovu
insb
cli
jno
shll
mov
sete
and
testl
add
mov
xchg
enter
in
push
dec
sbb
divb
add
xchg
lock
mov
fldt
mov
mov
sub
ret
testb
out
xchg
test
lods
in
cld
lock
or
pop
jge
pop
test
loope
in
cmp
test
pop
daa
xor
inc
test
cmpb
movsl
call
xchg
dec
sbb
push
mov
sti
mov
bound
and
mov
enter
lock
jp
loope
sahf
pop
sbb
cmp
jne
add
xor
xchg
add
xor
pop
mov
and
inc
mov
adc
stos
pop
mov
ret
cli
nop
mov
stc
xor
mov
and
pop
cmp
mov
or
push
cmpsl
ja
mov
je
cmc
jns
mov
shll
shrl
cmp
int3
sbb
push
leave
jo
lret
movups
gs
inc
xor
hlt
mov
pop
xchg
aas
cmc
lods
sub
dec
loopne
push
out
mul
xor
mov
mov
push
and
and
cli
mov
fistps
jmp
or
icebp
mov
xlat
out
pop
adc
mov
add
pop
push
call
mov
and
sti
sub
pop
js
lcall
and
jnp
and
in
or
push
fisubrl
in
sahf
inc
insb
iret
xchg
fcoms
cs
test
pavgw
inc
scas
lods
mov
xchg
pop
out
jl
repnz
sti
and
mov
cmpb
cwtl
jle
xor
adc
repnz
adc
mulb
pop
cmpl
in
cmp
xchg
jno
nop
xorb
mov
fdivrl
mov
xor
mov
xchg
icebp
push
xchg
mov
pop
aaa
fwait
subb
cmc
sbb
push
jae,pn
popf
fcomp
lcall
inc
dec
add
fistl
and
cmp
outsb
imul
shl
xchg
mov
loopne
aas
movsb
or
mov
unpcklps
add
rolb
aaa
sub
cwtl
cmp
outsb
decb
pop
cmp
aas
or
jge
sbb
dec
outsl
pop
xor
aaa
push
mov
mov
aam
jno
sub
mov
adc
push
test
enter
mov
xor
mov
lret
das
fs
fisubs
aad
loope
dec
dec
je
push
push
arpl
pop
add
nop
fildl
out
xor
dec
jbe
jecxz
pushf
sbb
popa
leave
jmp
sbb
das
or
aaa
push
push
inc
data16
xchg
jecxz
clc
lret
ss
aam
loope
jl
dec
pop
leave
add
add
mov
scas
jle
push
mov
std
sub
push
xlat
mov
xchg
arpl
in
test
mov
enter
cs
pushf
mov
jg
jb
xor
pop
and
dec
test
cmpsl
cltd
sub
sti
push
sbb
push
jecxz
cmp
jg
lods
addl
mov
int3
dec
fdivrl
dec
inc
mov
ficomps
hlt
aad
das
xchg
sbbb
jmp
pop
cmp
mov
mov
sahf
mov
push
sub
lahf
pop
or
inc
sbb
and
adc
xor
movsb
sbb
xchg
movsl
out
fstl
mov
orl
inc
leave
pop
aas
sub
mov
jmp
push
xchg
mov
sub
cli
dec
test
dec
sahf
loop
jg
aas
or
cwtl
rcll
sbb
jl
inc
clc
pop
sahf
outsb
aam
add
inc
in
jmp
stos
pop
int
cld
pushf
stos
sbbl
dec
dec
insb
add
cmp
rclb
and
mulb
push
je
mov
sub
ss
repnz
jbe
leave
ds
sbb
sbbl
xchg
arpl
mov
add
je
jp
dec
add
addr16
cmp
loopne
es
rcl
test
stos
in
sub
inc
pop
imul
mov
cmc
into
sti
mov
push
lret
test
inc
mov
pop
cmpsl
lahf
mov
xchg
push
add
ds
cmp
mov
mov
and
or
subb
push
scas
call
aam
and
fisttps
or
lds
or
fldcw
jns,pt
jmp
jmp
daa
mov
dec
xchg
adc
movsl
and
sti
add
das
or
jp
cmp
push
pop
and
outsb
xor
repz
into
mov
cmp
dec
xor
cmpsl
mov
sub
inc
xlat
mov
push
jecxz
repnz
ja
mov
imul
sub
int
mov
adc
inc
push
lds
push
push
mov
cmp
sbb
insb
fwait
call
lahf
pop
out
int3
cmp
cmp
popl
and
test
test
lcall
mov
imul
add
dec
mov
dec
insb
jb
cs
add
sub
inc
push
dec
subb
iret
mov
shrb
call
stos
dec
fwait
cwtl
out
out
sub
movl
sub
or
fwait
loop
xchg
or
lods
imul
sbb
mov
je
mov
or
and
js
fwait
xlat
frstor
aad
push
loope
sub
push
adc
mov
jge
insb
sub
xchg
sub
xor
movsb
adcl
xor
loopne
add
dec
ror
pop
outsl
aas
dec
or
ret
ret
outsb
daa
xor
fnsave
gs
or
hlt
ljmp
push
jge
or
fistpll
dec
xor
jg
jnp
cmpb
leave
leave
xchg
dec
xchg
daa
hlt
fs
cmpsl
xchg
push
dec
inc
jo
mov
inc
xchg
cs
xchg
mov
or
hlt
cmp
stos
inc
outsb
mov
push
xor
xchg
aad
sbb
pop
out
mov
jne
std
aaa
int
adc
jno
lock
add
pushf
push
into
push
popl
lret
mov
inc
adc
icebp
jns
push
ds
into
lea
test
sub
add
out
or
sub
ss
shrl
shll
repz
and
adc
in
xor
adc
lds
ss
xchg
cmpsl
les
lcall
mov
gs
ss
out
sub
leave
and
mov
pop
push
xchg
iret
stc
xor
mov
pop
pop
ror
hlt
push
and
hlt
mov
mov
push
mov
jmp
bound
push
jnp
or
mov
jmp
ret
aaa
xlat
mov
jle
test
adc
push
in
ss
out
ret
push
es
mov
mov
adc
in
push
repnz
sbb
xchg
das
adc
mov
dec
xchg
and
sbb
sub
cmc
outsl
push
repnz
popl
rorb
les
add
ffreep
scas
sub
ja
sub
mov
loop
addr16
mov
popa
pop
js
pop
das
xchg
pop
mov
push
sbb
lret
repz
mov
addb
cld
cmp
xor
repnz
insl
jle
push
and
cmc
pop
mov
js
push
or
jb
ret
push
loop
cmp
js
es
pusha
add
sbb
mov
jmp
hlt
in
or
mov
imulb
in
or
repnz
mov
mull
repz
addl
push
insl
jge
out
xchg
aas
dec
loop
out
jl
ja
in
dec
call
add
test
mov
add
lds
mov
movsb
mov
rcrl
jae
and
push
shlb
inc
ljmp
mov
pop
clc
out
icebp
dec
test
or
cmp
cmpsb
fwait
rcrb
pop
pushl
or
jno
mov
dec
inc
in
and
xor
fwait
stos
jmp
mov
dec
cmpsb
pop
rcll
mov
addr16
popa
cmpsb
mov
xor
adc
xor
xor
mov
xchg
sahf
mov
out
outsb
bound
lods
scas
idivb
mov
adc
sub
sbbl
add
or
lea
xor
and
sub
sub
in
sbb
clc
xchg
cmpsl
or
nop
xor
outsb
jae
rorb
mov
rolb
lea
js
into
or
ret
and
fidivrl
lcall
inc
or
push
push
mov
add
das
outsb
jnp
aad
call
les
jae
stos
es
movsb
pop
jo
popf
or
push
je
jg
sti
pop
inc
pop
rclb
mov
bound
sbb
jle
pop
fnstsw
outsb
lea
es
add
or
ror
scas
and
mov
imull
inc
in
xchg
push
xchg
popa
into
mov
jb
pop
in
xor
divb
xor
pusha
mov
and
rcr
inc
xchg
out
notb
push
and
jecxz
mov
xor
dec
push
mov
or
mov
ja
mov
arpl
cwtl
xorb
xor
notb
jg
scas
iret
in
scas
cmp
cmpsl
les
inc
stos
es
insl
cmpsb
inc
dec
pop
lock
loopne
addl
add
sbb
push
ret
subb
xchg
subl
pop
mov
daa
call
enter
loop
fmuls
xchg
icebp
aad
xor
cmp
xchg
mov
dec
adc
scas
out
test
in
mov
cmpsl
xor
int3
repz
lods
mov
inc
fcomp
mov
repnz
or
jp
lds
jle
jnp
jp
and
loop
negl
aam
cltd
out
and
mov
shlb
js
loop
ret
leave
sub
fcomip
into
fwait
dec
call
movsb
add
adc
dec
sbb
scas
adc
lahf
lods
cmp
fstpl
adc
pshufw
push
mov
pop
test
ja
stos
stos
mov
jl
orb
and
test
sarb
pop
imul
cwtl
push
xchg
clc
jbe
and
test
sarl
jg
pop
inc
add
jo
sub
lret
in
test
arpl
js
rclb
mov
xor
sub
int
out
cli
xchg
mov
sar
mov
neg
loop
aaa
mov
and
in
movsb
cmp
mov
fadds
lret
xlat
out
jno
fsub
fwait
lods
jg
pop
in
stos
hlt
sar
loop
cmpsb
lcall
repnz
push
into
les
push
mov
jle
mov
jns
inc
dec
mov
imulb
cmp
cli
jne
push
int3
lret
dec
rcrb
inc
sahf
xor
jmp
sub
std
mov
movsl
xor
add
or
loop
xor
push
xchg
aas
mov
cli
int3
mov
nop
cmp
inc
aas
lds
movsb
push
adc
push
out
push
test
fsubp
out
and
mov
inc
or
lret
and
xchg
cwtl
sbb
test
les
pop
xor
sbb
ds
mov
ficoms
mov
rcrl
cmp
jns
sti
and
mov
fwait
xchg
pushf
lock
enter
add
in
xchg
call
xor
shl
cmpsl
pop
push
movsl
shlb
mov
inc
jmp
push
cwtl
nop
push
jo
lods
push
lret
mov
sbb
mov
pop
outsl
in
jns
jp
and
adc
fisubrs
push
bound
arpl
push
hlt
mov
jbe
ret
mov
pop
stc
inc
cld
shl
jae
ja
fdivl
cmp
ja
das
sbb
ret
stc
inc
adc
push
iret
xchg
jle
lahf
hlt
mov
adc
push
adc
das
fcmove
test
rcr
xlat
bound
scas
sub
lret
dec
fiadds
push
fnstenv
add
xor
or
push
movsb
pop
or
icebp
xchg
inc
shlb
push
das
lcall
add
sub
sub
inc
in
popa
outsl
xor
addr16
sub
enter
cmp
icebp
pop
jno
mov
outsb
imul
xor
mov
mov
sub
and
mov
adc
sti
mov
pop
xchg
in
nop
sbb
adc
divl
hlt
imul
fsts
cmp
jo
js
bound
mov
test
insb
sub
mov
pop
out
js
idiv
xchg
out
jnp
xchg
xor
jecxz
jp
sbb
push
and
in
movsl
dec
sub
loopne
sbb
push
ja
out
jmp
int
dec
bound
inc
dec
cmpl
or
dec
inc
push
pop
lods
insb
dec
addr16
outsl
es
dec
adcl
out
cmpsb
clc
mov
in
rcl
fwait
push
push
mov
xchg
into
cltd
pop
not
shr
cli
das
jbe
cmp
ljmp
mov
ljmp
add
mov
and
adc
dec
jmp
cmp
cs
mov
xchg
ret
mov
stc
add
std
cli
cmp
cmpsb
add
xor
lahf
adc
fdiv
and
js
dec
dec
mov
jge
imul
pop
mov
fstpl
adc
mov
cmp
jb
nop
repnz
pop
in
cld
pop
cmpsb
movsl
push
xor
ljmp
aas
push
out
or
cmp
test
popa
pop
xor
dec
adc
das
stc
test
pushl
in
inc
inc
xchg
mov
sub
loop
fbstp
jb
aaa
sub
jecxz
push
in
and
out
fnstenv
pop
mov
mov
dec
subb
mov
mov
xchg
mov
adc
and
jnp
stos
pop
push
mov
pop
ja
add
sub
fildl
daa
pop
xor
mov
lds
mov
int
scas
fwait
jp
sbb
ljmp
push
jp
and
add
and
sub
push
test
divl
test
pop
scas
enter
pop
jle,pt
movsl
popa
lock
mov
cwtl
push
pop
mov
push
xchg
fstl
xor
fmul
ss
cmp
push
xor
addr16
cltd
push
adc
fsts
jne
mov
and
movsb
xchg
test
jae
push
mov
stc
daa
imul
and
mov
xor
into
jno
ret
adc
scas
fsubrl
inc
adc
push
sarb
sub
fsts
inc
jl
imul
push
xchg
shll
lcall
pusha
jbe
sub
mov
aam
fcoml
lcall
push
and
gs
dec
sbbl
lods
mov
sub
push
xchg
loope
sbb
lcall
mov
std
lods
mov
clc
ja
pop
adc
cmpsb
jge
or
mov
pop
mov
mov
addr16
gs
es
aad
pop
xchg
xor
rol
imul
mov
cwtl
testl
and
sbb
hlt
ficoms
jne
or
push
jnp
inc
sub
xchg
sub
jmp
loopne
rorl
ljmp
adc
mov
aaa
sbbl
cmp
lods
adc
sahf
mov
xor
cltd
jecxz
out
ret
xchg
repz
inc
notl
sub
dec
xlat
and
add
in
mov
sub
jle
repz
mov
dec
pop
in
aam
cltd
push
xchg
lea
pop
orb
lret
jno
mov
mov
cmpsb
bound
push
pop
sbb
push
outsl
pop
scas
popf
cwtl
cld
imul
jle
mulb
dec
mov
xor
decb
pop
into
fdivs
rclb
sub
xor
addr16
sbb
leave
iret
inc
cmp
push
cmp
fwait
fwait
stos
add
mov
into
es
cmp
jecxz
cmp
pop
orl
push
jae
dec
inc
or
call
push
pop
sub
ljmp
mov
mov
mov
inc
imul
xor
aaa
or
loop
ss
fadd
mov
mov
or
movsb
pop
aam
outsl
insb
testb
lahf
outsl
div
mov
mov
testb
mov
lahf
ret
mov
and
stos
les
cld
push
and
sbb
xor
xorl
daa
mov
icebp
jmp
fiadds
dec
aam
mov
push
ss
into
ret
add
loop
pop
scas
rcrb
cmp
inc
inc
sbb
insl
addr16
out
xchg
dec
xchg
aaa
aad
dec
int
rcrb
inc
and
mov
cli
cmp
int3
adc
rorl
push
push
repz
mov
adc
cmp
shlb
sub
fwait
cmp
nop
ss
or
sbb
mov
in
in
pop
xor
int3
dec
fsubl
aad
lock
rolb
imul
xor
mov
sub
outsb
sub
push
mov
aad
cmp
dec
fwait
sahf
arpl
outsl
jne
jmp
neg
daa
xchg
mov
popf
push
mov
or
jl
or
fpatan
mov
adc
addl
jecxz
ja
cld
dec
incb
sbb
fiaddl
int3
dec
or
push
mov
xor
mov
sub
xor
push
es
mov
dec
out
stc
in
or
xchg
cmp
loope
adcl
lds
cmp
jge
mov
ss
outsl
inc
outsl
cld
or
add
xchg
or
lret
shll
nop
pop
or
add
shll
mov
js
and
out
push
leave
aas
mov
ret
dec
lock
fsubrp
pop
add
dec
test
dec
push
pop
leave
clc
push
jo
subb
push
jg
roll
shll
incl
fwait
and
imul
jl
push
add
push
mov
loop
pop
imul
enter
lock
mov
lds
mov
push
or
cmp
add
subb
loop
ds
rolb
jg
dec
sub
and
imul
mov
push
pop
and
mov
gs
and
popa
mov
jecxz,pn
xor
repz
addr16
mov
popa
addl
push
mov
jne
inc
sub
gs
jns
add
cltd
pusha
sub
cmp
cmpsb
loope
sub
fucomp
icebp
add
inc
add
mov
xchg
push
inc
and
pushf
enter
outsl
push
insl
roll
mov
jecxz
popa
shlb
dec
add
jae
push
int3
jge
pop
add
sbb
outsl
cmp
pop
and
test
faddl
pop
adc
pusha
xor
pushf
mov
rolb
or
insl
ss
dec
pop
or
jne
push
jecxz
loop
inc
mov
movsb
or
cmp
incl
fstps
js
or
jb
xchg
pop
xchg
ret
lret
imul
aas
mov
fists
out
xchg
add
aaa
or
sbb
or
jae
push
sbb
icebp
inc
popf
int
mov
mov
push
mov
inc
xchg
adc
in
cmpsl
es
hlt
scas
aas
add
scas
stos
repnz
movsb
data16
mov
or
xor
adc
daa
icebp
cli
test
mov
je
mov
lock
stc
add
imul
out
adc
xchg
fcmovu
in
cwtl
fldt
stos
incl
call
loop
dec
jp
aad
xor
xchg
sbb
pop
adc
test
push
clc
sub
std
gs
mov
cltd
mov
movzwl
leave
pusha
dec
int3
fnstenv
push
mov
adc
sarb
iret
pop
jns
leave
pushf
out
cli
inc
sbb
mov
jmp
inc
push
addr16
fucomi
js
inc
jae
and
jge
flds
cs
cmp
inc
fcomi
pop
in
ja
add
ljmp
sahf
pop
adc
out
dec
xchg
or
shrl
aad
add
dec
sbb
cmp
dec
pop
mov
cmpsl
add
scas
loope
lahf
mov
fwait
call
nopl
mov
sub
mov
xor
adc
xor
jae
push
fwait
push
push
stos
pop
sbb
and
add
push
mov
xorl
pop
mov
lea
repnz
lahf
clc
cmp
dec
sub
out
mov
cli
adc
dec
out
stc
xchg
push
pop
mov
xchg
dec
stc
inc
rcrl
notb
stc
sub
decb
mov
xchg
xor
stc
movsb
sbb
sbb
sbb
pusha
into
dec
push
or
or
mov
into
in
clc
xor
pop
out
jmp
cli
repz
inc
mov
cmpsl
dec
pop
lcall
movsb
sub
dec
test
cmp
pop
jge
fnsave
sub
cmp
jl
leave
mov
push
fistpl
or
aaa
out
ds
in
scas
filds
adc
mov
fs
btrl
adc
mov
aad
pop
xchg
inc
jno
adc
jbe
clts
cli
pop
repnz
adc
cmp
lcall
sub
rorb
ljmp
and
xor
arpl
cmpsl
loop
or
cli
inc
inc
cmp
arpl
in
mov
xchg
push
dec
jmp
mov
jge
pop
test
mov
xchg
jno
fbstp
scas
xor
movsl
es
lahf
adcl
stc
mov
sbb
rolb
jp
insb
sti
fimull
ret
jbe
add
mov
fbld
mov
push
gs
out
xchg
or
push
sub
mov
pushf
inc
je
in
sahf
addr16
xor
fnsetpm(287
repnz
je
aam
jge
mov
test
sbb
pusha
outsl
pop
lahf
jmp
enter
or
cmp
lret
adc
jnp
cmp
mov
rol
jp
or
add
xor
or
xchg
or
hlt
xor
sub
ret
sbbl
adc
jbe
mov
inc
xor
ss
sub
int3
jbe
or
loope
cmpsl
sub
add
or
ss
out
jg
pop
stc
inc
mov
shrb
movsl
mov
push
fs
lods
lcall
jle
or
bound
rclb
js
scas
mov
js
mov
fs
pop
xor
rolb
xchg
test
cmp
sub
sbb
add
mov
pop
lods
int
push
addr16
fldcw
int3
clc
lds
sub
xor
nop
andb
hlt
pop
mov
dec
insl
jb
push
add
movsb
fmull
pop
stos
ret
sti
popf
pushf
or
shrb
movsl
aad
push
addr16
sti
push
pop
xchg
aad
mov
adc
shrb
pop
rcrb
xchg
in
cmc
and
sub
sub
dec
cltd
fisubs
clc
add
je
pop
pushf
bound
fcmove
push
outsl
sbb
inc
or
sub
mov
sarb
cmp
jae
popf
adc
pop
add
fsubs
jl
or
push
and
xchg
enter
out
std
int
mov
sbb
adc
dec
pop
cli
or
cmp
sbb
out
pop
shll
sbb
push
pop
and
cmc
dec
pop
int3
movsb
idivb
mov
das
out
xchg
iret
loope
or
das
out
lahf
call
cs
fucomip
scas
adcl
push
divl
jl
lret
sbb
popf
sub
dec
fdivl
stos
bound
jecxz
roll
mov
xchg
repz
fxch
dec
cmp
pop
out
lods
jmp
pop
fisubs
mulb
push
jne
adc
js
push
lods
mov
je
jmp
and
or
pop
xor
and
pop
or
pop
ljmp
add
and
test
xchg
insl
loopne
std
adc
jle
jns
les
cmpsl
sub
ret
cld
inc
mov
sub
and
pop
adc
or
mov
mov
lods
sub
stc
sbb
jmp
sbb
xor
mov
ss
sti
loope
icebp
add
cld
lock
imul
mov
sbb
test
xor
xchg
mov
fsubs
addr16
sarb
popf
fs
fsts
push
fsubrp
fsubs
icebp
xchg
fisubl
rcll
mov
aaa
xor
mov
xchg
jns
jae
inc
repnz
pop
inc
jne
xchg
mov
sbb
and
sub
or
jmp
lock
pop
cwtl
lcall
cmp
xchg
lcall
cmp
test
sbb
mov
sub
inc
enter
cmp
cli
or
adc
int
lods
imul
fdivrs
adc
jle
fisubl
insb
adc
imul
inc
cmp
mov
cmp
cmp
xor
push
repnz
and
mov
jge
inc
push
pop
add
jg
push
jg
inc
addl
arpl
mov
fidivl
pop
enter
loope
push
push
iret
ds
aaa
in
cmp
sti
mov
jecxz
jl
cmpsl
aaa
in
ljmp
loope
or
faddl
push
inc
roll
jae
popf
popa
cmpsl
or
xchg
ss
cmp
cmp
fwait
mov
sbb
cmp
add
test
out
movsb
aaa
aaa
aaa
pop
ret
dec
push
aas
data16
jns
mov
mov
outsl
xor
push
idivl
mov
loop
cmp
mov
testl
cmp
lds
or
clc
xor
xchg
inc
xor
ss
movsl
gs
or
mov
andb
mov
push
lret
stos
insl
adc
sbb
dec
movsl
lahf
scas
jecxz
cmp
test
fcompl
mov
pop
and
push
cmp
pop
aam
daa
lcall
mov
lret
adc
or
arpl
or
mov
test
dec
aas
movb
mov
push
into
adc
lcall
divb
insb
fidivl
loopne
les
scas
mov
push
cli
lods
adc
lock
or
cmpsl
mov
or
int3
jmp
lcall
stos
pop
es
enter
adc
mov
aas
clc
fisubl
cli
testl
dec
pusha
and
push
je
loop
xor
in
push
sbb
arpl
orb
shlb
and
pop
rcr
add
mov
mov
fwait
cs
mov
sub
cmp
sub
movsl
sbb
jmp
jecxz
or
mov
enter
adc
lods
orb
adc
sbb
cltd
push
dec
inc
jno
aam
dec
fsubr
pop
mov
shl
arpl
and
subl
outsb
mov
xchg
xchg
test
xchg
or
mov
add
cmc
push
std
add
xchg
cwtl
insl
mov
or
jno
bound
jp
jb
push
lret
push
cmpsl
aad
cmp
sarl
aam
es
pushf
fstps
jmp
lds
das
xor
push
inc
add
mov
int
inc
xor
adc
fcomps
mov
cmp
dec
push
and
adc
pop
dec
jns
mov
inc
movsl
mov
sbb
cmp
call
ja
adc
pop
cmp
arpl
lock
sbb
mov
cmp
mov
xchg
or
mov
out
repz
addr16
lods
aad
testl
in
in
cmp
pop
mov
and
imul
loop
outsb
mov
adc
mov
fucomp
push
xlat
int3
pop
loop
stc
repnz
lahf
fwait
xor
enter
test
inc
or
clc
sub
xor
xor
test
and
shrb
out
sub
pusha
mov
mov
stos
jg
pop
cmc
cwtl
fists
mov
sub
imul
push
imul
sbb
or
aaa
das
mov
fistl
push
int
add
out
mov
add
cmpl
scas
jne
test
fdivs
mov
or
adc
mov
enter
inc
jmp
lea
mov
pushf
and
jmp
out
loop
adc
int
mov
add
mov
jecxz
and
mov
lahf
xchg
jecxz
loopne
test
ds
popf
dec
mov
push
pop
dec
outsb
arpl
aad
insl
mov
pushf
mov
pop
mov
pop
mov
std
outsl
scas
add
add
mov
xlat
js
rorl
rcll
imul
jne
jmp
icebp
addr16
mov
clc
nop
pop
sub
aam
icebp
fdivs
roll
aaa
and
out
mov
rorl
mov
scas
inc
dec
push
rcrb
pop
xchg
gs
dec
ss
insl
adc
sub
sub
sti
mov
test
pushf
call
jmp
nop
mov
cmc
enter
xchg
outsb
adc
cwtl
bound
ds
cs
mov
jle
mov
jno
sbb
ja
stos
lea
cmp
xor
incl
push
outsb
mov
mov
in
xchg
shll
ds
push
sub
int3
test
clc
lock
add
xchg
mov
mov
dec
and
mov
jle
pushf
lock
xchg
call
xchg
mov
add
std
mov
out
addr16
jnp
bound
jl
jae
rol
hlt
inc
pusha
push
or
mov
push
pop
xchg
cmp
cmp
test
push
sbb
push
mov
adc
jne
popf
jl
jns
pop
inc
out
sbb
xchg
cmp
mov
andl
test
xchg
mov
lcall
xchg
cli
cltd
loop
out
dec
out
aas
mov
mov
or
dec
or
push
mov
scas
daa
xorl
icebp
cmp
pop
xchg
lock
aam
into
jb
xchg
mov
iret
sub
inc
inc
push
jecxz
mov
add
ja
mov
loop
mov
sbb
test
xchg
add
mov
call
dec
xchg
xchg
cmp
or
fisubs
adc
int3
scas
bswap
mov
in
fadd
mov
dec
and
and
leave
xchg
jge
test
cmp
and
mov
shrl
lods
idivb
movsb
out
icebp
jns
fwait
and
sahf
mov
sub
dec
hlt
sbb
popf
mov
fs
jnp
cmpsl
divl
subl
mov
cwtl
int
cmpsl
inc
mov
pop
or
jno
hlt
out
push
addr16
lret
andl
int
addr16
addr16
xchg
test
addps
xchg
pop
xchg
int3
push
inc
dec
mov
call
pop
or
pop
addl
xchg
cmp
icebp
add
test
ss
xor
in
call
mov
push
inc
repz
test
nop
lcall
bound
sub
mov
daa
in
lahf
popa
clc
jp
repz
test
out
push
fcompl
incl
lock
jl
movsl
mov
mov
imul
inc
jae
lods
mov
mov
out
in
dec
sbb
repz
pushf
or
test
ret
int3
loop
iret
xor
xchg
ja
sahf
incb
or
adc
inc
stos
xor
rcll
int
or
cmpsl
repnz
aaa
popa
cli
dec
cwtl
pop
lods
fidivl
jp
fnsave
stos
jae
popa
sub
mov
fstl
outsl
mov
mov
std
arpl
jb
lods
jg
in
lea
push
arpl
xor
or
and
sub
scas
into
addr16
cmp
xchg
imul
mov
movsb
in
add
mov
mov
scas
scas
mov
test
mov
fnstenv
gs
out
loop
xor
jnp
sub
mov
lret
mul
mov
js
fstl
test
dec
and
sti
jnp
mov
popa
cmc
lahf
movd
dec
adc
add
test
and
sbb
inc
push
jo
cmpsl
dec
mov
pop
sbb
mov
pop
sub
add
cmp
mov
rcrl
mov
inc
xor
mov
and
popf
fcoms
or
or
out
push
aam
inc
mov
cmpsb
push
sbb
or
mov
dec
dec
and
inc
repnz
mov
rorl
push
dec
test
push
and
idivb
jbe
push
pop
inc
pop
aas
popa
mov
scas
cli
pop
xor
xor
lcall
mov
sbb
shlb
inc
lds
sub
pop
dec
cmpsl
aaa
mov
jmp
test
push
xor
inc
adc
stc
test
dec
sbb
mov
and
xor
inc
xchg
xchg
lods
mov
mov
icebp
cs
in
push
lea
fs
jecxz
lahf
push
outsl
stc
stc
outsb
pushf
pop
outsl
sbbb
cmp
clc
addr16
pushf
mov
test
jp
add
mov
repz
dec
out
test
je
pop
mov
leave
movhps
xchg
add
jb
adc
ret
inc
mov
xor
mov
or
jg
mov
xor
push
enter
enter
or
xor
stos
subl
mov
add
push
sbb
xor
mov
mov
pop
out
int
mulb
arpl
cmpsb
popf
pop
daa
inc
cmpsb
lret
pusha
insl
jno
je
xchg
jns
aad
jmp
arpl
fs
sbb
arpl
add
outsl
push
cs
push
mov
lods
jecxz
sbb
insl
jns
cli
ljmp
fs
xchg
jno
add
and
enter
sub
fidivl
mov
jecxz
pop
push
test
mov
xchg
cmp
fldt
cli
sub
adc
sbb
in
mov
dec
or
cmc
call
and
jns
test
pop
push
sti
loope
in
mov
fisttpll
lret
out
nop
jl
test
lods
andb
insb
sbb
cmpsb
dec
repz
in
divl
mov
jl
xchg
xchg
std
dec
xor
filds
daa
or
test
pushf
inc
dec
clc
insl
mov
lods
xchg
xchg
sbb
jecxz
pushf
cltd
insl
and
xor
scas
lret
stos
mov
pop
cmp
add
stos
cmp
jecxz
pop
insl
push
aad
stos
cmc
and
les
fnsave
lcall
test
xchg
pop
mov
jae
loopne
imul
sub
fists
sub
inc
fisttpll
loope
repnz
mov
movhps
cmovp
sarl
and
cltd
arpl
lahf
mov
sbbb
inc
add
jmp
cmp
mov
hlt
fldt
inc
cmp
adc
push
cltd
lahf
sub
ljmp
jl
adc
in
nop
mov
xchg
jg,pn
bound
std
imul
fstpt
inc
mov
xor
psraw
shrl
lahf
or
cld
sbb
mov
fnstsw
xor
pop
out
lret
cmp
decb
lcall
cmp
sbb
mov
jp
cmp
pusha
xchg
ja
adc
adc
pop
xchg
shr
nop
call
xor
and
fidivrs
mov
jl
sub
cmc
pop
cli
ds
lcall
mov
mov
lea
add
fcom
push
sub
mov
jns
inc
icebp
adc
inc
loop
xor
sbb
jnp
sub
lea
popf
je
cs
jb
das
inc
fisubl
and
xchg
lcall
adcb
sbb
xor
inc
xchg
pop
add
lods
adcl
add
sahf
fmuls
mov
xchg
sub
fistl
cmp
add
jae
inc
mov
cwtl
fprem1
lret
xchg
lods
or
in
push
lahf
imul
or
ljmp
push
fs
inc
jge
mov
cmpsb
popf
xor
jb
iret
push
into
jecxz
and
pop
jmp
test
test
movsl
in
loope
aad
jmp
xor
xlat
outsl
iret
xor
inc
pusha
lahf
mov
dec
xchg
sarb
lods
xchg
lea
stos
lods
shr
ss
popa
mov
jns
daa
mov
test
dec
add
push
lock
ret
inc
sbb
into
jae
mov
fstl
addr16
inc
and
jecxz
je
imul
jge
insl
dec
jle
cli
iret
mov
ja
push
scas
jne
and
int
in
dec
sar
scas
add
and
push
addr16
mov
je
data16
or
out
push
fdivrl
xchg
insb
lods
mov
mov
lods
pop
xor
fimull
jp
mov
ljmp
mov
in
cmp
movsb
aam
push
shl
xchg
and
inc
xchg
cmp
es
lock
sbb
pop
push
cld
pop
les
mov
hlt
loop
sahf
lods
aam
or
xchg
xchg
insb
pop
xor
adc
and
inc
mov
dec
push
lds
xor
mov
dec
mov
and
or
add
and
enter
sub
jnp
add
mov
inc
sub
add
fdivrl
outsb
stc
mov
add
fists
dec
lret
pusha
rcrl
pop
arpl
and
add
fldt
movsb
xor
mov
sti
aam
pop
les
in
inc
sbb
aaa
nop
fsubs
cmpl
pop
stos
mov
test
push
imul
jne
mov
mov
pusha
mov
xchg
je
push
and
and
dec
es
sub
int3
aad
jmp
adc
jecxz
insl
out
shl
rorb
push
stos
test
test
adc
xlat
mov
icebp
push
jl
push
push
aam
or
je
jmp
xor
rolb
inc
movsb
cs
xor
sub
lods
inc
je
inc
cmp
jecxz
cmpsl
jge
and
sbb
test
jle
add
test
jge
xchg
inc
stc
and
les
dec
ja
mov
push
sbb
daa
popf
push
sti
hlt
enter
lods
sbb
adc
lock
mov
or
cwtl
stc
fcmovne
inc
in
xchg
scas
mov
dec
push
sbb
into
stc
jp
cmp
fs
cli
xor
push
xchg
loope
aaa
and
adc
xchg
les
and
cmp
test
xchg
sbb
test
jl
fs
loope
jns
scas
and
into
scas
fadd
push
hlt
out
lcall
mov
inc
mov
sbb
test
inc
push
xchg
jg
mov
mov
leave
xchg
mov
imul
inc
dec
mov
push
or
push
repnz
and
rorb
jno
and
mov
inc
leave
xchg
mov
fisubl
subps
sahf
push
mov
and
std
pop
push
pop
pop
loopne
and
mov
rcrb
stos
enter
les
divl
xchg
sbb
pop
fldcw
or
sbb
mov
rorl
testb
push
push
inc
or
sti
inc
gs
idiv
icebp
mov
iret
xchg
adc
scas
xchg
stc
scas
cmp
xchg
xchg
scas
fistpl
dec
hlt
lods
cltd
cs
sbb
push
xchg
xchg
inc
mov
subl
mov
pop
lock
divb
cmp
aam
mov
lahf
mov
push
inc
div
mov
stos
test
mov
fbstp
adc
lret
clc
xchg
xchg
ss
and
xchg
fsubrl
fildll
gs
fbld
or
cmpsl
imul
xchg
les
test
ljmp
imul
cmp
mov
mov
mov
mov
cmp
aas
mov
fwait
mov
adc
out
mov
adc
sbb
push
xchg
add
mov
outsb
repz
js
loop
mov
stc
leave
xchg
call
cmp
stos
cmp
sbb
fiaddl
pushf
cli
imul
and
push
adc
out
adc
fsubl
notl
mov
add
movsl
js
les
out
lea
and
popa
hlt
int3
adc
test
dec
call
sarl
aad
das
ffree
test
dec
xlat
fsubl
imul
shr
pop
xlat
test
out
repz
or
add
into
shrb
movsl
daa
inc
xchg
cs
lret
pop
rcrb
aaa
xor
decb
or
pop
cmp
popa
add
movsl
xlat
xchg
pushf
xchg
ficoml
enter
sti
fmuls
inc
btr
mov
leave
test
cli
repnz
mov
jo
call
add
gs
mov
ss
jo
ffreep
mov
rolb
and
bound
rorl
and
push
pop
lock
fldt
test
sub
pop
cmp
mov
jno
pop
cmc
cmp
and
sbb
and
aam
mov
xor
xlat
xchg
jo
faddl
scas
mov
insb
cmc
sub
sbb
aad
xor
pop
test
add
mov
pop
movsb
or
pop
fnstsw
sbb
mov
arpl
push
movb
sahf
push
dec
cs
fistl
dec
xchg
int
ret
jne
lods
sarl
test
iret
or
shr
jle
push
sbbl
inc
mov
loopne
out
nop
data16
xchg
adc
and
fiaddl
xor
movsb
mov
jle
dec
loope
in
mov
pushf
xchg
loope
aaa
mov
mov
andl
shll
push
into
into
int3
jno
sub
rcl
hlt
inc
aam
sbb
sub
je
push
pop
mov
call
mov
pop
lock
jmp
add
mov
dec
adc
sbb
cmp
jno
cmpsl
or
or
push
and
loop
mov
pushf
test
xor
call
test
in
jle
mov
xchg
mov
sahf
or
cmpsl
mov
ds
and
mov
aas
push
jne
xchg
add
push
xor
rcl
lret
aaa
add
mov
fnsave
roll
mov
or
sub
pusha
int
xor
fsubs
fst
dec
mov
xor
sbb
in
lods
pop
cmp
ss
xchg
dec
mov
jno
setno
out
mov
dec
sbb
sub
add
xchg
cmp
dec
dec
and
nop
scas
loopne
mov
jecxz
pop
outsl
sbb
popa
gs
shlb
test
int3
fldenv
aaa
xor
sbb
xchg
inc
stos
loope
idivl
cli
or
and
and
int3
mov
lock
mov
xor
shrb
stc
fs
xchg
out
xchg
in
icebp
adc
mov
cmp
test
xor
sbb
jge
pop
bound
mov
shll
fwait
push
ds
fisttpl
jecxz
aaa
repnz
xor
xor
scas
pop
lods
sbb
cli
add
xor
nop
push
xor
in
push
dec
lret
mov
adc
nop
push
add
divps
fnstsw
xchg
mov
mov
lcall
push
call
shlb
sub
push
cmp
jo
mov
dec
mov
pusha
sbb
iret
mov
fcompl
jnp
pop
test
xor
add
mov
in
clc
int
jl
mov
mov
jo
outsl
push
sti
jmp
fldt
pushf
adc
sub
stos
ret
jle
test
mov
je
cltd
ljmp
or
pop
fmulp
push
pop
fwait
and
dec
ja
test
sbb
movsb
das
mov
lret
dec
test
sbb
lret
mov
lahf
sbb
jns
adc
dec
jnp
loope
push
ja
pop
aam
jp
je
scas
inc
mov
and
in
fnstenv
sahf
jle
ja
pushf
mov
pop
sbb
sbb
and
shrb
pop
stos
ret
push
call
and
cmp
mov
cmpsl
lods
pop
xor
xlat
add
cmp
and
repnz
jg
into
pop
out
cmp
inc
pop
mov
xor
fs
pop
or
cld
fyl2x
jge
icebp
and
adc
movsb
fstpl
inc
fildll
rcr
push
sub
lret
xchg
mov
add
clc
fwait
cmp
pop
pop
inc
inc
bound
xor
and
insl
push
ret
jne
xchg
pop
push
sarb
xlat
jle
pop
imul
jl
mov
mov
cs
scas
lret
cmp
dec
or
mov
xchg
fndisi(8087
insl
sbb
fmuls
ds
repnz
mov
iret
dec
or
adc
lea
or
and
fldz
lret
jbe
scas
push
mov
pop
test
jbe
cmp
int3
fsts
popf
push
inc
mov
cmpb
dec
mov
inc
xchg
daa
dec
jge
imul
inc
xchg
outsl
psubusw
repz
mov
imul
imul
pop
mov
fabs
fninit
out
nop
jg
add
lcall
cli
mov
xlat
mov
pop
adc
in
jns
inc
pop
movsb
push
push
cltd
adc
pop
push
adc
outsb
pushf
sub
pop
rcrb
jns
mov
mov
std
dec
jmp
mov
int3
scas
xor
jbe
dec
bound
jne
scas
xor
mov
lock
cmpl
mov
sbb
push
cmpsl
xor
add
mov
xchg
stos
stos
addr16
sub
sbb
push
inc
jns
push
divl
and
cmp
addr16
push
xor
mov
cmp
inc
mov
imul
sti
shl
push
rorl
mov
xchg
dec
div
jecxz
aam
adc
inc
dec
pop
cmp
movsl
in
xchg
nop
sbb
mov
mov
fdivrl
lods
movsl
xchg
mov
test
jp
add
xchg
les
cmp
pop
mov
push
in
sti
push
xchg
lds
pop
and
cmp
push
or
adc
jb
push
jbe
filds
pushf
fadds
popf
ss
jns
daa
mov
mov
je
nop
xchg
js
or
into
cmp
xchg
jnp
lcall
add
and
sbb
clc
data16
sub
mov
ja
jbe
aaa
mov
stc
pop
mov
xor
pop
shrl
test
lods
fidivrl
imul
into
data16
insb
arpl
divb
mov
idivb
out
push
or
lea
xlat
and
pop
test
cli
sbb
loopne
mov
jmp
in
pop
fisubs
outsl
fnstcw
lret
cmp
sub
dec
fwait
popa
js
daa
ss
pop
insl
dec
rclb
fcomip
adc
imul
int
sti
mov
addr16
ret
enter
cmpsb
add
push
ret
into
cltd
xchg
sub
mov
fstps
adcb
mov
cmp
mov
and
sub
ljmp
cmpl
into
sbb
fstpl
stos
push
dec
jno
mov
mov
pop
stos
outsb
and
jne
pop
je
sbb
fdivl
test
in
pop
pushf
movsl
sarb
inc
ds
repz
clc
push
fldcw
les
aaa
lods
std
jnp
cmp
cwtl
testb
hlt
test
push
pushf
dec
fstl
cmp
repnz
call
dec
rorl
enter
sbb
inc
xchg
and
mov
and
fsubr
mov
add
inc
int3
mov
fdivl
test
push
outsl
pop
lods
ret
jae
aam
lods
lods
fnsave
adcl
mulb
popf
mov
xchg
shlb
mov
or
xchg
leave
pop
out
adc
xchg
cltd
sub
cmp
je
movsl
fsubrl
mov
jbe
loopne
dec
std
test
and
icebp
mov
je
mov
ja
sbb
xchg
icebp
imul
ret
xor
mov
and
or
dec
add
and
loope
adc
test
cmc
stos
xor
cmp
add
and
push
mov
inc
je
into
ss
cmp
sub
fldt
mov
ret
outsb
mov
xchg
and
dec
pop
leave
mov
add
movsl
in
loope
fidivrs
loop
sbb
dec
cmp
in
scas
push
mov
jecxz
adc
pop
in
push
aaa
cmp
push
in
sbb
or
cmp
jge
cli
out
lods
subb
data16
pusha
sub
pop
fs
sub
bound
lods
jl
dec
adc
lea
aam
push
popf
xor
enter
add
mov
sub
mov
leave
or
cmp
shll
pop
mov
fists
leave
hlt
rcrl
add
dec
xor
call
jne
fildl
sub
xor
clc
lods
dec
dec
stc
test
cs
div
repz
iret
out
sbb
stc
cltd
stos
xchg
mov
lret
inc
mov
out
push
data16
jecxz
or
jle
pop
push
sub
mov
data16
or
xchg
push
das
pusha
je
xchg
mov
in
xor
insb
mov
enter
pop
push
fldt
inc
imul
mov
popa
pop
mov
test
sub
sub
pop
movsb
fimuls
iret
loopne
push
mov
push
sbb
pop
push
sahf
jo
mov
and
pop
adc
jge
js
insl
mov
push
pop
mov
sbb
mov
or
data16
cld
scas
jb
sbb
rcll
out
adc
sti
out
rcrb
nop
adc
or
shrl
repz
pushf
dec
lea
out
mov
adc
and
es
lcall
jo
push
xlat
scas
push
push
dec
add
push
daa
sub
xchg
xlat
pop
adc
jae
pushf
xor
and
sbb
sahf
jmp
lods
aas
xor
inc
xor
pop
fnstenv
adc
add
lods
pop
jne
pusha
or
daa
jmp
mov
lods
mov
pop
sahf
out
out
sub
and
xchg
fsubp
dec
or
push
jns
mov
and
imul
gs
fidivrs
lcall
aam
lahf
mov
rorb
fmuls
sarb
sub
jl
push
push
mov
push
mov
dec
jo
lcall
mov
pop
in
xchg
insl
cmpsl
sub
arpl
sbb
sarb
mov
insb
mov
rolb
mov
inc
adc
pcmpeqd
lret
addl
jns
insb
xor
add
sub
mov
or
sbb
cmpsb
fs
popf
add
popf
push
test
sub
cmpsl
push
lcall
dec
xor
xor
mov
ljmp
loopne
pop
pop
inc
xor
adc
scas
loope
xor
je
adc
pop
pop
and
add
or
out
xchg
test
xor
subb
xchg
xor
repnz
insb
les
jle
lods
lea
add
and
inc
pop
arpl
inc
mov
push
test
stos
and
std
mov
inc
popa
mov
fwait
les
push
mov
jb
cmp
decb
and
or
and
mov
dec
and
jne
ret
dec
jbe
data16
cmpsb
ret
mov
loopne
pop
push
imul
jle
ror
mov
in
movsl
orl
mov
add
mov
pushf
sti
cmp
xorb
icebp
xor
mov
mov
in
in
mov
scas
insl
jl
ljmp
pop
pop
dec
pop
inc
push
mov
and
fists
xchg
adc
inc
outsb
xchg
add
xor
push
sbb
fsubl
fidivrl
js
mov
lret
imul
pop
sti
or
imul
ret
mov
push
cwtl
clc
jbe
push
cli
jb
dec
lahf
rcl
dec
in
pusha
mov
push
decl
sbb
dec
lea
pop
es
rorb
arpl
jmp
inc
fwait
pop
dec
sub
andl
setp
xor
imulb
pop
mov
stc
sbb
xchg
add
std
popa
repnz
insb
rcll
outsb
mov
jo
xor
add
arpl
jnp
sbbb
jno
imul
push
sti
scas
inc
mov
inc
sbb
sarl
jns
cmp
sbb
inc
inc
aas
pop
dec
xor
push
cmpsl
sub
jp
frstor
rolb
or
int
sbb
pop
jle
jmp
cltd
mov
adcb
push
imul
cmpsb
cmp
movsl
push
sub
xchg
jmp
or
jge
add
mov
adc
testb
dec
xchg
out
add
xchg
je
dec
inc
mov
xchg
cmp
gs
and
add
pop
stos
in
loop
ret
int
out
sub
push
adc
jle
ds
pop
aad
cs
cli
imul
mov
adc
jae
imul
addr16
xchg
fbld
push
push
aas
cmc
repnz
iret
pop
cmpsb
mov
aam
mov
sbb
push
xchg
cmpsl
dec
mov
ret
mov
xchg
lods
push
lahf
testb
test
cwtl
jno
mov
jl
adc
sub
fnsave
ljmp
pop
xchg
jg
xor
and
add
lret
jl
mov
mov
and
test
dec
jg
xchg
fidivrl
dec
jp
fwait
imulb
adc
sahf
cmpsb
xchg
push
cmp
cwtl
mov
dec
je
jb
cmc
jae
jg
xor
lock
xchg
mov
or
mov
sbbb
dec
mov
adc
jne
aaa
inc
lods
mov
mov
in
stc
jnp
cmp
repz
test
movsb
sub
or
out
inc
call
push
inc
iret
dec
cmpsl
add
jbe
enter
orb
aas
int
js
dec
jo
and
push
or
add
out
xor
or
mov
jle
sbb
das
data16
pop
ret
sbb
add
outsb
or
mov
pop
shll
repz
sti
imul
in
pop
negl
inc
fs
or
ja
addr16
lcall
loope
pushf
das
lea
rclb
dec
xchg
jl
daa
hlt
or
add
je
cmp
lods
inc
mov
rcr
adc
xor
or
dec
mov
sar
outsb
ljmp
outsl
add
sub
or
int
sub
mov
out
sbb
call
sahf
or
sub
in
inc
pop
pop
aas
mov
ja
cmp
in
mov
pop
cwtl
cmpsb
add
jo
in
jg
or
jmp
dec
mov
cmp
mov
test
in
xor
jmp
es
loop
inc
jno
jbe
insb
arpl
jne
mov
ja
nop
cmp
jmp
test
add
in
test
sbb
adc
inc
js
out
push
enter
push
jns
mov
fistpll
adc
lret
cmp
fisttpll
push
adc
movsb
mov
and
das
loope
sbb
mov
call
addl
mov
pushf
jmp
addl
aam
ljmp
inc
mov
pop
xchg
ror
and
xchg
inc
adc
xor
nop
push
xor
je
pop
cmp
sub
xchg
jae
cld
fisubrs
int
and
subb
sbb
pop
cmc
loope
push
fdivs
add
jg
sti
icebp
out
shlb
mov
dec
sbbl
jno
pop
popfw
cmp
jp
mov
nop
mov
cmp
arpl
and
xor
adc
mov
jg
ja
mov
subb
mov
aas
pop
xor
sbb
lret
lahf
stos
ja
ficompl
ret
cmp
sbb
pusha
push
mov
cmpsl
call
test
xchg
adc
fbld
mov
je
stos
pop
dec
fwait
shll
and
hlt
xor
cld
iret
cmp
mov
inc
xchg
mov
xchg
aaa
cmpsb
cmp
jno
sbb
inc
shll
or
xchg
mov
or
pop
dec
test
jmp
loope
notl
add
jl
mov
rol
push
popf
inc
xlat
paddusb
jns
testb
xlat
cmp
push
aam
dec
nop
cli
lods
adc
stc
fwait
pop
roll
xchg
and
cmp
cmp
push
cli
ja
jl
adc
repz
push
dec
subb
mov
and
lds
ss
outsb
mov
daa
clc
mov
rcrl
lds
mov
add
xor
pop
dec
cltd
ss
lahf
es
mov
jno
rclb
jo
inc
xchg
push
xor
jbe
dec
inc
inc
popa
jmp
call
sahf
xor
mov
ficompl
pop
idivb
mov
mov
xlat
icebp
xchg
push
xlat
rcr
sub
rorb
ficoml
fnstenv
dec
sti
leave
add
sbb
stos
jne
or
call
dec
lods
xor
mov
lods
or
bound
dec
les
jne
ret
jnp
fisubrs
mov
mov
pop
out
pop
push
decb
jne
mov
nop
sub
aaa
out
mov
cmpsb
sbb
mov
sbb
stos
pop
xor
jecxz
insl
stos
aas
jnp
loop
test
stc
adc
rolb
fcoms
bound
and
dec
dec
mov
mov
imul
add
lahf
and
dec
jne
adc
jae
cmpsl
lods
sbb
in
pop
ljmp
mov
xor
int
repz
aas
adc
stc
sbb
jecxz
cmp
add
lret
jg
mov
or
mov
je
jp
sbb
rol
jp
rorb
mov
icebp
cmp
mov
es
cltd
das
jno
fs
loop
daa
jns
test
fwait
adc
test
xorb
and
sbb
test
fbld
dec
fdivs
pop
mov
add
add
add
imul
fadds
xchg
mull
mov
cs
fildl
sbb
adc
je
lret
inc
rol
sbb
shrl
inc
push
jns
ret
pusha
push
xor
imul
addr16
stos
mov
cmp
mov
sbb
rolb
nop
or
jno
jge
popf
push
test
out
mov
push
mov
xor
cmp
movsl
ds
lcall
and
loop
push
mov
test
add
test
out
notb
sub
nop
adc
push
sub
subb
xchg
mov
dec
mov
inc
pop
rcll
xchg
pusha
call
divb
lret
mov
into
jmp
cmp
jo
stc
cld
xor
mov
fldenv
loopne
jo
push
mov
pop
dec
rorl
dec
fildll
shufps
cmpsb
pusha
cmp
out
dec
out
jl
cmp
stc
sub
xchg
inc
mov
subb
mov
inc
inc
add
fsubr
mov
mov
imulb
incl
lods
adc
mov
mov
jp
mov
jno
in
lcall
push
sub
pusha
adc
lcall
in
das
mov
fsubl
cmp
movsl
faddl
push
xchg
or
out
xor
jecxz
sbb
adc
and
pop
and
loopne
mov
insl
xor
add
mov
std
out
inc
pop
mov
in
mov
sahf
insl
or
out
push
jo
fucomp
ljmp
inc
cwtl
out
push
lds
push
and
mov
aad
das
ljmp
add
inc
cmp
mov
adc
mov
and
sub
or
pop
or
addr16
sbb
repnz
sbb
out
roll
jg
mov
ss
cmc
outsl
in
arpl
popf
pop
pop
out
stos
popf
push
cwtl
ret
cmc
dec
imul
js
out
cltd
pop
pop
fisttps
cmp
hlt
imul
js
add
add
outsb
movswl
sub
lcall
add
inc
sbb
add
out
mov
nop
mov
cmp
mov
fbld
icebp
xchg
xor
xchg
mov
call
iret
lcall
int
das
fcom
in
dec
pop
test
xor
mov
cmpsl
pop
aad
dec
and
lret
pop
mov
into
int
data16
ds
sahf
cld
out
mov
mov
das
addr16
inc
rolb
or
insb
iret
sbb
sub
popa
add
pusha
push
push
jg
and
xlat
lds
shlb
sub
or
and
out
stc
add
lahf
jno
mov
lahf
sti
push
stos
sub
xor
inc
and
mov
xchg
fldt
lods
mov
mov
nop
jmp
int
fs
clc
or
and
push
push
rclb
fmuls
cmp
jp
jle
pop
push
repz
cmpsb
lret
cwtl
bound
xorb
ja
ss
insb
sbb
mov
callw
fs
dec
aas
in
divb
push
enter
and
xchg
iret
out
cld
jle
sub
lock
ljmp
adc
insl
add
and
imul
pop
or
leave
imul
jb
mov
out
daa
sub
adc
mov
shr
test
mov
ja
shlb
test
test
adc
fsubrs
aaa
aam
insb
ss
cmp
cld
jb
xchg
mov
jmp
scas
in
jge
popa
ljmp
pop
mov
sbb
mov
pop
jg
mull
pop
adc
aad
and
xchg
fcomps
mov
bnd
lods
cltd
pop
dec
les
sub
into
lds
xor
xchg
sahf
movsb
lahf
ds
xchg
lret
loop
dec
mov
mov
int
cmp
jb
es
mov
fmull
iret
adc
dec
std
mov
inc
jge
add
xchg
lods
push
pop
add
mov
out
repnz
xlat
dec
adc
adc
jge
add
movsb
mov
popf
ror
icebp
mov
inc
mov
xchg
popf
sub
pop
adc
stos
into
cmpsb
fwait
inc
push
dec
inc
sar
ss
push
mov
xchg
push
pop
push
xor
add
repnz
cli
mov
jnp
inc
mov
cmp
mov
mov
push
dec
or
lret
cmp
jg
and
stc
mov
lock
lock
dec
xor
in
mov
add
pushf
std
cmpsl
mov
cmp
cs
and
xchg
sub
outsb
mov
leave
cld
inc
push
pop
lods
jo
imul
imul
ss
in
outsl
mov
or
and
je
add
or
out
daa
or
cmp
dec
lods
sub
popa
or
xchg
pop
sti
movsl
scas
out
cmp
jp
add
mov
push
push
std
test
lock
xor
out
adc
xor
ja
add
cld
and
scas
cmp
jge
pop
inc
mov
cmp
cmpl
ret
repnz
fstpt
int
sub
add
pop
xchg
icebp
lods
pop
fldenv
mov
repnz
or
jle
sub
inc
and
jne
lds
ds
push
out
add
xlat
popf
xlat
xchg
lahf
sub
mov
adc
subb
jne
cmp
sbb
jno
mov
jbe
scas
cmp
mov
xorb
pop
xchg
mov
ss
ret
push
icebp
sbb
cmc
mov
adc
mov
dec
or
mov
aas
mov
imul
jnp
dec
mov
add
or
push
inc
call
ss
dec
cmp
cld
movsb
stc
sbb
jns
adc
adc
mov
aam
call
test
dec
out
mov
out
into
push
adc
sbb
xchg
out
sub
xchg
fsub
pop
mov
mov
xorl
cld
mov
ficomps
jb
add
and
enter
hlt
pop
and
mov
cmpsl
in
dec
popa
sub
nop
stos
out
xchg
out
shl
adc
cs
jmp
and
sti
inc
adc
ljmp
arpl
jo
fidivrs
hlt
push
dec
aaa
and
dec
iret
jns
into
fdivl
cmp
xchg
jae
push
ss
negl
and
pusha
out
shl
in
outsl
push
sahf
pop
roll
mov
insl
lahf
pusha
mov
xor
enter
idivb
cmp
les
xor
out
adc
imul
or
push
cmp
xor
or
push
pop
ret
fsubrl
in
mov
mov
out
sbb
jecxz
int
jo
call
in
sub
pop
iret
push
movsb
adc
sbbb
int
mov
push
ja
fdivrl
lcall
pcmpeqw
xor
in
pop
push
out
rorb
stc
pusha
sbb
das
and
sub
daa
adc
lods
icebp
movsl
sbb
mov
xchg
mov
xor
sahf
push
sti
cmpsl
js
dec
mov
jle
movlps
adc
dec
cmp
xchg
lret
mov
ljmp
aas
test
push
scas
xlat
out
adcb
notb
ss
and
cltd
fadds
jge
popa
movsl
mov
xor
out
xor
pushfw
add
cmp
dec
sti
push
daa
aam
into
imul
icebp
jnp
aas
or
aas
scas
sahf
and
in
sahf
imulb
pop
fcomip
nop
sarl
push
popa
dec
jmp
out
aaa
movsl
cmpsl
xchg
mov
lahf
int3
mov
loopne
pop
enter
in
cmp
jmp
mov
pop
popf
adc
cs
arpl
push
inc
inc
sub
sbb
aas
mov
jnp
int
or
mov
stc
iret
daa
outsl
sub
xchg
adc
rcrb
lds
sub
jg
sub
jmp
iret
push
loop
lods
lret
ss
cmc
mov
in
ds
cs
push
lret
into
insb
sub
imul
ja
repz
jecxz
and
add
leave
sbb
and
pop
popf
mov
fs
mov
test
xor
push
jae
and
pop
xor
test
in
fsts
mov
jae
mov
arpl
dec
out
push
sbb
stos
dec
xchg
inc
hlt
cmp
enter
and
fstps
fisttpl
xor
shl
push
mov
shll
mov
jp
xor
int3
or
sahf
adc
jne,pt
add
cmc
push
add
mov
pushf
cmp
enter
in
sahf
jo,pn
loope
cmp
jbe
mov
sub
fcompl
test
filds
pop
out
jg
jl
push
fdivrl
inc
std
and
pop
push
ljmp
aaa
iret
push
loope
sub
daa
shrb
mov
pop
xlat
pop
in
repnz
jo
das
cltd
not
add
sub
mov
out
mov
imull
mov
data16
cmpsb
fsubr
adc
adc
sub
lods
inc
pop
sub
mov
sub
pop
cmp
andl
adc
ret
dec
jne
cmp
inc
test
loop
mov
cs
pop
leave
rcll
ja
stos
mov
mov
jno
scas
xor
and
imul
sbb
into
cmp
out
and
vdivss
jno
mov
adc
add
jecxz
enter
bound
repz
mov
mov
fldenv
inc
fs
mov
push
lods
outsb
xor
lods
inc
push
sub
push
pop
cmp
pop
xor
out
jbe
xchg
pop
imul
aas
je
test
add
imul
push
pushf
xchg
shrl
outsl
mov
or
outsl
pop
jbe
mov
cmp
mov
jno
mov
lret
rcll
xor
movsb
call
inc
mov
outsl
xchg
mov
push
mov
dec
addb
and
in
lret
sub
into
sub
fwait
mov
pop
push
mov
cmp
pop
add
inc
dec
test
add
in
jno
adc
mov
fs
fidivrl
sbb
notl
std
iret
movzwl
imul
cli
pop
mov
xor
pop
cmp
lods
mov
pop
sarb
jo
repz
push
test
lods
scas
cwtl
cli
jns
jns
in
es
push
jg
sbb
sub
inc
arpl
mov
adc
mov
shlb
push
push
pop
jne
into
iret
dec
arpl
cmp
bound
xor
or
aad
nop
or
xor
arpl
xor
xor
xchg
xor
jns
in
popf
xor
dec
lea
xchg
xchg
dec
xor
enter
jmp
bound
add
sbb
std
aaa
push
inc
push
xchg
je
mov
fstl
xor
shrl
ja
shrl
mov
sbb
mov
push
sbb
pop
pop
fnsave
mov
jno
and
in
mov
sti
shrl
xchg
addl
enter
fs
mov
aas
stos
arpl
ds
pop
add
mov
sub
stos
fidivl
ret
jbe
dec
sbb
jo
jne
out
stos
cmp
inc
xchg
in
stc
xlat
mov
notl
scas
adc
orb
add
mov
cltd
shrb
pushf
or
dec
out
es
mov
in
popa
cmp
fbstp
popf
push
out
jg
sbb
fwait
scas
jmp
jmp
push
subl
mov
imull
test
loopne
iret
xchg
pusha
movsb
mov
mov
insb
out
jle
jo
decb
test
mov
xor
adc
mov
and
cwtl
scas
notb
mov
aam
cltd
pusha
jecxz
xor
fldl
and
mov
js
pop
cmp
inc
aaa
shll
je
mov
test
jo
std
push
inc
sbbb
lock
jb
out
xchg
or
xchg
imull
push
adc
stos
mov
cmpsb
repz
sahf
aam
jbe
jge
insb
mov
mov
popl
and
push
loope
sub
sub
push
xchg
das
push
movsb
in
int3
push
enter
outsb
or
jbe
mov
and
jae
xchg
add
daa
test
icebp
or
pop
cmpsl
call
fiadds
sbb
iret
jnp
add
xor
jae
jge
sbb
loop
sbb
jnp
mov
hlt
je
clc
fsubrs
aam
loope
imul
cmp
shrl
cmp
mov
cmp
in
in
mov
das
mov
neg
dec
jp
cltd
outsb
inc
fldl
scas
fsubrl
in
xor
jmp
cmp
push
insl
dec
pop
adcb
mov
cld
sub
or
std
pusha
out
int
mov
pop
cltd
jp
fimull
or
cmp
lahf
jae
aaa
sbbb
fwait
lret
or
sbb
mov
lcall
xchg
push
inc
hlt
jnp
push
int
neg
xchg
lock
lock
in
shrl
enter
test
push
xor
cmpl
pop
xor
in
shrb
ja
in
fwait
popf
stos
test
inc
push
dec
faddl
xor
scas
notl
jb
fisubs
arpl
inc
outsl
xchg
ret
inc
xchg
stos
xchg
cmp
pusha
push
bnd
mov
mov
push
imul
call
outsl
and
add
dec
sbb
mov
shll
mov
push
rcrl
std
pop
xor
std
dec
mov
dec
mov
sub
xlat
jp
hlt
sahf
sbb
les
xchg
stos
or
cltd
rcr
lcall
mov
subb
loop
int3
sub
jns
and
xor
and
sbb
and
mov
in
inc
inc
dec
daa
jmp
xor
jle
jge
or
sbb
xchg
add
jmp
lret
cmpl
js
cmp
cmp
into
out
mov
adc
loop
iret
hlt
mov
push
aam
sbb
fsts
insb
fildl
add
fistps
pop
aas
push
sub
push
cmp
xor
xchg
sahf
mov
scas
cs
pop
xor
and
mov
dec
cwtl
out
test
lret
outsl
add
or
divl
xchg
xor
mov
sub
jecxz
sub
imul
insl
mov
lret
mov
cmpsl
jp
lea
mov
mov
popf
fildll
inc
mov
into
popf
mov
cmc
outsb
add
rclb
lcall
dec
cld
dec
pop
sbb
movsb
cli
push
add
jne
or
fisubrs
mov
out
mov
ljmp
sub
ds
xchg
push
mov
sti
lock
jmp
sarl
and
scas
mov
xor
adc
and
lea
aad
repz
fmuls
je
movsb
pop
jno
imul
push
add
movsb
das
aam
inc
jg
ret
scas
add
lahf
sbb
into
orb
ss
and
xchg
xchg
add
insl
not
adc
iret
sbb
push
mov
mov
mov
dec
dec
stc
int
or
cwtl
pop
es
mov
push
pushf
mov
lods
jg
mov
jecxz
loop
iret
sub
jge
movsl
mov
lret
imul
mov
xchg
mov
js
test
outsb
arpl
ret
movsb
push
add
jne
dec
ljmp
pop
fdivl
sub
sti
sub
daa
adc
outsl
cld
push
arpl
fcompl
and
adc
sub
mov
shrl
jbe
push
inc
mov
sub
jb
inc
aam
jae
cld
and
adc
mov
fmull
int
push
cmp
adc
and
dec
xchg
in
mov
xor
sbb
std
mov
mov
mov
and
scas
sbb
add
add
pop
lds
addr16
fidivrl
ds
sub
out
or
jb
repnz
ret
insl
es
in
push
ret
mov
add
push
mov
xchg
add
jg
fnsave
xchg
sub
pop
mov
cmp
pusha
cmpsl
fsub
pop
inc
in
and
les
jo
or
hlt
aam
ljmp
mov
adc
inc
ret
cmpsl
add
and
orl
js
fmull
mov
mov
movsl
add
aas
mov
leave
cwtl
fwait
int
inc
sbb
mov
xor
lods
lcall
lods
jge
push
nop
xchg
int
lahf
pop
es
jne
loope
dec
xor
add
pusha
push
lds
pop
push
fwait
and
sarl
xchg
rcl
adc
mov
sbb
mov
xchg
shll
ds
repz
mov
cmp
in
pop
ds
in
add
and
int
push
outsb
je
and
ja
dec
cmc
arpl
mov
gs
jp
pop
pop
mov
cmp
sub
inc
movl
aam
sub
cmc
and
jg
adc
lcall
mov
repnz
mov
jg
sbb
test
and
cmp
in
pushf
loopne
sub
mov
and
out
or
sbb
mov
subl
scas
arpl
xchg
mov
or
pop
pop
push
dec
sahf
clc
fstl
lds
fs
enter
es
enter
shrl
imul
loop
sar
lock
out
shll
in
push
and
sub
mov
shlb
ret
lret
xchg
outsb
cmpsb
daa
cmp
xchg
std
jge
insb
fwait
add
inc
mov
push
jecxz
pop
enter
mov
sti
popf
scas
inc
jns
test
pop
repnz
pop
mov
lds
dec
test
shlb
mov
popf
loope
pop
dec
push
jl
js
pop
or
push
xchg
mov
sahf
xor
dec
fwait
and
repz
mov
test
sub
pop
mov
push
mov
mov
in
pushl
hlt
testb
adc
jns
gs
cmp
cmp
dec
jecxz
pop
push
jle
lds
scas
into
aaa
imul
shrb
mov
fmuls
mov
sub
jno
and
inc
add
jae
shrl
cmp
push
adc
iret
jge
sbb
sub
pop
mov
mov
xor
adc
outsb
mov
and
cmp
push
jle
add
push
pop
jmp
popa
push
daa
inc
pop
popf
int
mov
dec
dec
jne
sbb
pop
ljmp
mov
sahf
sahf
cwtl
ret
sbb
xor
loop
push
sbb
and
jg
inc
shrb
jge
mov
cmp
add
aas
addr16
cmpl
sbb
jae
dec
aam
dec
xor
jbe
jle,pt
out
stos
int
int3
inc
sbbl
push
sti
mov
and
stos
xchg
fisttps
cmp
mov
mov
pop
pop
jb
pop
loop
flds
leave
inc
mov
jge
jecxz
sarb
out
test
xchg
mov
leave
mov
test
pop
or
repz
in
sub
test
dec
lds
ja
stos
ljmp
cmp
and
iret
icebp
aam
aaa
dec
jnp
mov
in
sti
jg
dec
or
pushf
dec
cld
clc
and
ret
mov
and
in
loop
jp
sub
xchg
cmp
cmp
leave
add
lds
mov
sub
jmp
jnp
out
mov
clc
xorb
adcb
fs
add
arpl
xchg
xor
loope
cmp
mov
cli
mov
sub
in
int3
mov
xor
js
sub
clc
int
sub
lds
inc
mov
sarl
mov
or
movsb
mov
lods
adcl
add
push
lret
pop
int
pop
and
adc
mov
cwtl
push
test
cmp
test
popf
pushf
movsb
push
pushf
add
pop
and
daa
cmp
inc
cmpsb
call
add
adc
push
iret
repz
fwait
imul
test
andb
adc
xor
add
test
or
repnz
inc
dec
arpl
pop
leave
js
jo
pop
adc
push
xlat
dec
shlb
lcall
imul
xor
fs
dec
sbb
add
rorl
xor
int3
and
mov
aas
add
ret
enter
cli
aaa
add
jnp
sbb
lret
ret
cltd
mov
xchg
xor
jno
or
mov
mov
in
cmc
add
mov
xchg
sbb
insb
push
pop
stos
sbb
orl
clc
jb
adc
xor
inc
outsb
daa
lock
cmp
adc
pop
movsl
imul
test
gs
xlat
add
push
adc
outsb
adc
subl
jnp
dec
popa
fs
js
inc
aaa
setnp
fistl
fwait
gs
xor
jp
movsb
fs
jp
mov
fistpll
jecxz
fwait
push
jmp
mov
sbb
cmp
fs
dec
movsl
adc
inc
xor
fildl
lret
pop
or
or
bound
and
jecxz
push
ss
inc
mov
xchg
dec
rcll
shlb
inc
mov
xor
test
lret
mov
repz
xchg
and
xorb
cmp
stos
cmp
mov
or
sbb
daa
add
in
push
divl
pop
add
les
push
pop
mov
mov
loop
enter
inc
iret
sbb
jne
dec
xchg
outsl
or
out
adc
push
adc
imul
sub
mov
adc
loope
push
xchg
mov
sub
hlt
int
xor
cli
fs
movsb
push
mov
cs
jb
pop
test
xlat
push
xor
mov
mov
outsb
out
inc
stos
loop
stos
dec
orl
mov
ret
testl
fdivl
out
lods
push
cmc
mov
in
sbb
lahf
mov
loope
xor
int3
hlt
pusha
cmp
mov
outsb
sub
in
aaa
add
test
cmp
mov
add
outsb
loopne
call
outsb
ficoms
test
shlb
pusha
add
jns
push
stos
sub
loop
mov
arpl
mov
add
lret
add
sbb
shrb
push
jecxz
test
adc
add
jbe
jmp
hlt
in
jns
mov
out
testl
jo
ja
sbb
xchg
mov
push
mov
xchg
pushf
std
mov
popf
jae
movsl
mov
aad
add
ja
xchg
scas
xor
xchg
divb
adc
std
insb
or
daa
sub
push
and
popf
cmp
popf
insl
push
ljmp
dec
lods
xor
push
test
enter
xchg
sti
fisubl
ret
jecxz
and
loope
add
stos
lret
sub
cmp
cltd
xchg
inc
popa
or
shrl
call
fs
pop
inc
xchg
or
dec
sti
lret
das
xchg
stos
aas
dec
shrl
adc
xor
mov
sbb
sbb
add
loopne
sarl
cmp
dec
xlat
outsl
sub
adc
and
mul
sbbb
out
mov
jmp
cltd
and
stos
inc
xchg
mov
add
outsl
sti
mov
jmp
xchg
inc
mov
iret
push
inc
mov
lock
push
scas
sub
mov
cli
cmp
dec
mov
je
and
cmpsb
mov
outsb
test
adc
adc
mov
movsb
xchg
or
fsubr
das
loope
gs
mov
push
les
pushf
fildll
sub
fs
push
sbb
arpl
push
push
mov
ljmp
jle
jmp
fmul
fcoml
mov
jbe
xchg
dec
aad
push
out
gs
sarl
sti
lock
cmp
bound
cs
and
sbb
mov
dec
adc
in
sbb
pop
repnz
mov
mov
or
imul
mov
mov
push
sarb
jmp
and
lock
inc
push
inc
testl
nop
lods
push
jnp
mov
push
sbb
lahf
mov
jecxz
fs
lret
insl
and
xor
dec
jne
mov
insl
jl
mov
inc
test
cmpsb
sbb
repz
insl
adc
mov
repz
shlb
movsl
cmpsl
cli
xchg
push
addr16
fbld
outsb
pushf
add
and
stos
add
pop
xor
repz
push
jb
adcb
jecxz
cld
jecxz
rclb
fstp
pop
xchg
ljmp
dec
or
ret
sbb
cmp
cmp
lods
ss
icebp
jp
pop
aad
loopne
xchg
ljmp
cmp
or
push
xchg
xchg
int
mov
adc
inc
cli
lock
out
push
shlb
jns
mov
shlb
push
adc
fistl
push
sbb
sbb
jne
jg
shlb
out
lea
ss
int3
jge
mov
hlt
cmpsl
decl
or
imul
cmp
and
loopne
addr16
lcall
mov
cld
mov
sbb
adc
add
mov
jl
cmp
iret
or
ss
xor
js
cmc
addr16
sub
out
push
push
addr16
add
cwtl
aaa
sub
jnp
jecxz
dec
jecxz
test
dec
push
pop
out
cmpsb
cld
dec
mov
fwait
adc
inc
mul
cmp
adc
test
mov
rcll
cmp
daa
pop
inc
xchg
jecxz
in
jnp
xchg
in
shrl
xor
mov
cld
xchg
inc
mov
push
mov
cmp
pop
cmp
fisubrs
test
fs
xor
bnd
cmp
sub
xor
test
mov
mov
cmpsl
xor
aaa
rcll
pop
jb
mov
out
in
mov
dec
roll
jmp
pop
jge
sub
lret
out
xlat
adc
mov
js
nop
jle
fwait
je
mov
mov
mov
inc
push
cs
ss
hlt
fwait
push
roll
mov
mov
lea
dec
inc
out
push
pop
push
lods
das
rcrb
or
js
cmpb
pop
sbb
lret
jae
outsb
cltd
icebp
mov
add
push
test
lahf
jp
or
pop
test
loopne
pop
cs
jp
push
sub
into
mov
out
inc
mov
movsl
or
out
xchg
cmp
test
push
in
jge
subb
shlb
or
or
jmp
jp
add
negb
mov
test
pop
fstl
popf
push
pop
push
or
out
ffree
cltd
and
and
notb
sahf
lahf
xchg
push
dec
movsb
std
xor
clc
and
pushf
mov
xchg
mov
mov
xchg
jno
or
cmp
push
mov
es
xchg
addl
or
aaa
ljmp
add
into
xor
mov
loope
cmp
inc
mov
push
stos
inc
add
inc
shrl
mov
sbb
fdivl
cmp
les
in
jl
outsb
adc
add
out
xchg
push
pop
stc
fwait
cmp
dec
push
sbb
inc
aam
aas
nop
orb
imul
iret
repnz
cmp
inc
jns
cmp
rcrl
push
sub
testb
inc
cmpsb
jbe
xor
ja
add
cltd
lret
lds
xor
cmp
fistpl
jo
rcrl
imul
ljmp
or
cmp
rcll
pop
sbb
add
push
mov
js
dec
repnz
sub
or
sti
insb
xorb
add
push
adc
and
mov
mov
and
rcll
adc
mov
cli
mov
fsubrl
mov
les
movsl
push
rcrb
iret
lret
cmp
enter
sbb
sbb
cltd
adcb
mov
imull
sbb
or
mov
sub
xorb
dec
xchg
clc
les
cltd
xchg
and
test
mov
push
les
int3
test
sbb
jp
repz
stos
lret
lock
ja
cmp
pop
or
push
xchg
js
mov
or
xchg
mov
pop
add
lcall
adc
inc
jbe
cmp
cmpsb
mov
loope
int
fildl
jae
iret
jb
inc
xchg
dec
fsubrl
leave
pop
push
lods
adc
js
pop
insb
aad
stc
push
mov
inc
inc
ljmp
jno
in
orb
inc
jno
lock
lods
sub
cmp
scas
movsl
loopne
mov
mov
test
ja
and
add
dec
in
mov
enter
icebp
pop
sbbb
lods
cmp
cli
jne
insl
fmulp
jae
xor
sub
jno
mov
repnz
mov
mov
pop
xchg
loopne
hlt
inc
rcrl
call
ljmp
not
shll
popf
pop
mov
fwait
enter
dec
fdivr
in
push
mov
mov
dec
mov
mov
sahf
rol
popa
dec
ret
outsb
and
fcmovb
fiadds
out
add
mov
mov
push
and
int3
into
push
mov
pop
stos
mov
test
movsl
sbb
adc
mov
andl
popa
leave
pop
sbb
xchg
subb
dec
enter
test
lret
xor
and
clc
pop
call
xchg
or
gs
push
pop
pop
fcmovnu
and
dec
and
mov
pop
push
fwait
fwait
dec
inc
mov
inc
imull
inc
rorb
push
mov
inc
aas
movsb
lods
cmpsl
ja
xchg
movsl
jbe
inc
rcrb
lcall
mov
decb
or
cmp
mov
dec
mov
mov
leave
sbb
mov
add
push
sbb
fistpll
popa
ret
nop
push
dec
sbb
or
aaa
push
add
sub
adcb
add
pop
dec
in
ror
mov
repnz
cmp
mov
and
adc
mov
jns
test
les
adc
or
bound
jne
ret
xor
push
arpl
mov
cmp
sarb
or
dec
adc
xchg
mov
es
mov
push
add
and
cmp
sub
push
xchg
shlb
dec
xchg
push
pop
scas
inc
xchg
cli
inc
int3
mov
stc
jle
mov
test
push
and
mov
mov
pushf
mov
test
ret
ss
cmc
lods
jl
inc
cltd
lods
stos
add
mov
cmp
push
sub
sub
rol
mov
pusha
out
pop
or
notb
test
jno
adc
ds
mov
pop
aad
fidivrl
loop
stos
add
aas
push
in
inc
mov
sub
cmp
mov
movsb
rol
push
sub
movsb
addr16
xadd
inc
jb
js
jae
jne
jmp
pop
add
jecxz
filds
inc
rcrl
or
cmp
and
fwait
int3
lret
roll
xor
and
add
ss
add
and
test
icebp
inc
add
push
rorl
out
clc
and
cli
addr16
push
adc
negb
adc
adc
gs
jnp
and
movsl
ret
fidivl
int
add
fidivs
loop
inc
decb
pop
dec
lcall
xchg
cmpsl
addr16
and
jo
xor
mov
lods
xor
in
and
int3
xor
dec
adc
scas
hlt
lret
pop
pop
jmp
mov
push
xorl
push
ja
jns
push
or
jnp
pop
ret
aaa
xor
pop
dec
sar
pop
xor
ficompl
test
call
mov
std
daa
mov
dec
and
addl
and
or
lods
imul
inc
inc
dec
dec
push
mov
ret
fadd
daa
dec
xlat
sahf
jae
xchg
jo
mov
mov
addl
cs
test
cmpsb
les
mov
pop
mov
rorl
mov
rorl
cld
or
pop
jb
jbe
daa
lret
out
bound
fwait
ss
lea
sbb
and
xchg
mov
in
popa
mov
fwait
gs
pop
xor
cld
test
cli
jno
push
bound
mov
cld
pushf
inc
inc
lea
ds
and
xor
xor
sub
push
sub
mov
movsl
push
outsl
fistpll
push
xor
mov
and
inc
push
pop
aaa
mov
gs
adc
jo
jmp
jecxz
dec
jns
adc
lods
movsb
add
jle
lds
mov
inc
sub
jle
sarb
in
movsl
xor
rclb
mov
push
test
js
inc
or
movsb
add
test
into
ljmp
pushf
jle
dec
mov
jge
movsb
xchg
out
jbe
imul
lock
popl
and
mov
jg
imull
xchg
inc
dec
pop
cli
loopne
insl
pusha
xor
lret
inc
dec
mov
sti
testb
and
inc
dec
sahf
into
lods
mov
ret
lods
or
arpl
pop
mov
out
mov
pop
mov
movhps
and
out
xor
ret
cmp
addr16
or
stc
xchg
fwait
je
dec
icebp
mov
rcrb
jp
ret
fsubs
inc
jnp
pop
or
adc
add
popa
jmp
inc
pop
add
dec
jns
push
pop
jne
and
pop
mov
add
mov
inc
jp
or
test
lret
lret
popa
cwtl
inc
bound
loopne
std
scas
fiaddl
jge
popf
or
pop
stos
inc
das
repz
and
jns
fistl
jno
repz
bound
lea
lret
loope
xchg
lock
and
cmp
pushf
inc
jns
test
nop
loopne
fidivs
cs
mov
and
shlb
xor
mov
adc
lods
mov
jge
out
scas
lods
push
je
aas
je
mov
daa
cltd
inc
lock
pusha
mov
arpl
dec
int
cmp
loope
fs
cli
jne
shrl
cmpsb
jbe
pop
cmc
fldcw
cmp
imul
pop
sbb
rorl
and
jns
lods
lret
xor
stos
rorl
insl
push
shrl
sbb
out
sbb
sbb
push
rclb
jo
xchg
sbb
mov
mov
push
fdivl
or
pop
cmp
jl
and
int
jecxz
sub
sub
sub
lea
loopne
imul
imul
mov
or
sbb
inc
adc
fcmove
push
add
call
adc
pop
or
add
mov
arpl
lcall
mov
faddl
stos
pop
dec
push
jg
leave
sub
sub
jo
add
cltd
inc
mov
inc
and
xor
sbb
jbe
data16
xchg
lds
in
xor
adc
sub
jecxz
jno
adc
ret
jo
or
fs
loopne
andl
mov
push
add
lods
xchg
movsl
xchg
divl
or
pushf
test
jl
xadd
xchg
adc
in
clc
jle
adc
mov
test
pop
xor
mov
jno
or
pop
cmp
movsl
push
dec
xchg
xor
pusha
jmp
outsb
sahf
cli
jne
scas
xchg
inc
adc
cmpsl
adc
push
rcrl
inc
sbb
test
into
inc
inc
movsb
arpl
test
clc
sub
xor
lahf
jge
decb
or
movzwl
mov
nop
and
pop
mov
sub
push
push
mov
adc
sbb
das
fnstenv
jne
mov
inc
and
movsl
fisubrl
jae
dec
les
das
std
cs
sub
jg
and
cs
jne
std
adc
add
sbbb
daa
cltd
scas
scas
sbb
mov
or
sbb
out
orb
fbstp
int3
iret
cmp
pop
push
in
stos
adc
idiv
test
ficoms
test
and
push
mov
in
jno
pop
push
in
and
jbe
mov
nop
push
fnstsw
jecxz
dec
shrl
and
jno
mov
mov
mov
popf
push
xor
aad
add
pushl
rcll
or
push
loope
bound
and
paddw
outsb
push
andb
mov
push
dec
pop
mov
lcall
es
icebp
mov
add
iret
mov
adc
in
mov
dec
adc
pop
and
push
adc
das
push
test
pusha
push
push
cli
fcmovbe
clc
data16
call
mov
gs
dec
les
mov
idivl
push
push
gs
jno
xor
lea
loopew
lahf
jbe
out
mov
ja
repz
movsb
xchg
fnsave
pop
sub
mov
sub
xor
in
shlb
loop
inc
cmp
out
push
pop
xchg
adc
dec
out
mov
or
dec
push
xor
inc
shrl
jl,pt
das
mov
dec
push
pop
call
cmp
fdivrl
test
pop
xor
sbb
add
stos
std
das
outsl
xchg
and
stos
and
out
jle
xor
pop
add
jb
frstor
fsts
or
inc
scas
add
std
mov
mov
sbbb
push
fwait
jns
mov
push
adc
and
mov
pop
jnp
jmp
mov
sarl
fs
pop
cmc
dec
mov
fstl
cld
inc
dec
mov
mov
adc
sti
daa
scas
dec
xchg
sbb
mov
cs
addr16
sub
cmc
cli
push
mov
sub
arpl
arpl
sti
neg
mov
or
cmpsb
xchg
stos
xchg
xor
and
into
jb
jecxz
mov
sarb
mov
loopne
mov
jae
xchg
sbb
addl
add
and
sbb
ret
stc
pop
rclb
test
adc
test
imul
cmpsl
ret
add
dec
data16
out
pop
sbb
hlt
sbb
and
int3
mov
call
sbb
inc
push
pushf
adc
dec
outsb
popa
dec
aaa
cmp
insb
xor
adc
inc
enter
xor
sahf
je
shll
mov
jnp
cmpsl
sbb
jg
stos
fadds
add
sub
mov
inc
push
mov
xchg
or
icebp
sbb
mov
or
fstps
or
fwait
outsl
popl
xchg
mov
add
or
pushfw
lock
stos
sub
mov
inc
mov
and
lock
sbb
add
xchg
shll
nop
xor
das
push
adc
lcall
subb
xor
cmc
jnp
xchg
stos
fdivl
add
sub
xchg
add
js
jo
or
pop
mov
into
popa
cmp
push
jmp
xchg
jmp
push
scas
sub
in
test
jle
enter
mov
xor
addr16
adc
cmovb
push
xchg
mov
shl
jno
mov
jmp
cld
gs
icebp
icebp
dec
fsubrs
enter
test
out
or
popf
push
mov
xor
pushf
loop
adc
pop
push
sub
adc
add
loope
xchg
inc
pop
js
scas
imul
mov
aam
dec
cmp
pop
push
mov
dec
mov
jns
sti
loope
xchg
fcomps
xchg
add
jecxz
dec
push
inc
xchg
inc
sub
loop
pop
inc
rol
push
js
mov
hlt
pushf
into
icebp
lahf
mov
lock
pop
sbb
mov
dec
iret
push
sub
add
sahf
and
inc
repnz
push
mov
and
jbe
push
or
xor
push
adc
jno
or
bswap
push
in
cmpsl
dec
ljmp
inc
sub
pop
ficoms
lahf
and
jge
out
sbb
bound
in
add
jb
sbb
adc
das
int
inc
mov
out
add
xchg
adcb
fcoml
loopne
ret
stos
ss
sbb
daa
lahf
or
jmp
hlt
fs
sbb
popa
mov
sub
test
dec
or
movsb
ds
addb
mov
adc
std
les
sbb
stc
push
lds
sub
inc
stos
or
and
pop
dec
sbb
in
xchg
sub
jmp
aam
daa
jb
neg
stos
aam
xchg
popf
sub
pop
jmp
addr16
and
out
inc
fcomps
andb
lea
fldl
sbb
lcall
cmpb
mov
or
enter
cmpsb
mov
sahf
aam
hlt
mov
stos
sbb
dec
xor
and
pop
xor
movsl
jecxz
push
mov
cs
shl
les
stos
shrb
lahf
sub
mov
fucomip
cmpsl
push
or
rorb
sub
and
xor
jns
gs
xchg
inc
push
mov
test
jae
xchg
xchg
test
mov
popa
push
negl
adc
mov
pop
popa
and
out
fsubl
xchg
dec
xor
add
sbb
arpl
add
cld
cmp
cmc
insb
jp
scas
push
popf
daa
pop
xchg
andb
or
lea
push
jl
inc
shr
andl
xchg
xor
daa
xor
arpl
pop
imul
test
mov
sub
fisubs
sbb
cld
add
jecxz
push
jbe
mov
lcall
dec
mov
insb
js
in
pop
push
add
inc
adc
clc
rorl
xchg
inc
cmp
adc
cmpsl
sub
adc
mov
dec
pop
dec
scas
fsubp
jl
scas
pop
jle
jns
sub
add
mov
sbb
sub
push
fwait
mov
mov
lret
in
cld
push
xchg
int3
cmpsl
sub
nop
inc
sti
imul
dec
js
dec
inc
flds
loop
mov
leave
and
testl
xchg
loopne
icebp
inc
in
xchg
sahf
xor
cmp
lcall
and
push
xor
clc
pop
pop
add
inc
xor
adc
fildl
pop
pop
xchg
xchg
cmp
popa
cmp
repz
inc
push
push
insb
pop
and
push
pushf
mov
adc
jbe
aad
cmp
dec
test
sbb
fcompl
int3
cli
sarb
sahf
outsl
xchg
or
aas
in
mov
add
lret
negb
pop
push
movsb
addr16
cli
cmp
sub
or
pop
loope
test
jo
jo
and
pop
xlat
int
loop
pop
fdiv
ljmp
je
inc
aas
adc
cmp
decl
jl
xchg
ficoms
hlt
xchg
cmpsb
jno
imul
test
scas
push
jno
pop
test
xchg
add
ja
in
in
repz
cli
jb
mov
lcall
lods
cmp
xor
pop
push
fisttpl
push
jp
int3
adc
sahf
jnp
shl
mov
incb
mov
fndisi(8087
jb
xchg
orb
xlat
decl
mov
sub
fildll
xchg
inc
fistpl
das
shll
sub
pop
jecxz
ret
loopne
xchg
cmc
mov
xor
sub
lret
jae
and
jnp
mov
xchg
dec
lds
jns
pop
jg
popa
hlt
imul
pop
push
jbe
ljmp
xor
aad
mov
imul
and
scas
popa
xchg
icebp
cwtl
frstor
mov
gs
repz
mov
pop
pop
rolb
inc
cmp
mov
mov
mov
add
fsubl
jle
sbb
bound
pop
cli
jecxz
nop
pop
add
xchg
inc
test
pop
jne
adc
pop
mov
mov
aad
cmpsb
xor
xchg
cmpsl
scas
lcall
into
xchg
cmp
push
idiv
xchg
movsl
lds
ja
dec
cmpsb
jne
mov
pop
jecxz
pop
mov
sub
pop
mov
and
mov
inc
cmp
pop
pusha
outsb
inc
fcoml
mov
dec
inc
fcmovu
fsubrl
sarb
mov
add
clc
add
addb
sub
xchg
xorb
imul
fstpl
push
pushl
push
xlat
mov
cmc
mov
xor
test
lods
add
pushf
rcrb
cmp
jge
adc
sub
or
scas
xchg
call
hlt
sub
ja
mov
loope
xchg
inc
in
lds
xchg
pop
push
ret
cmpsl
push
out
js
inc
lds
lock
icebp
push
sub
cmp
push
stc
cmp
sub
xor
or
aas
jmp
sarl
xor
fdivr
sub
inc
shlb
fs
cmp
lock
push
pop
mov
cmpb
cmpsb
bound
and
ret
add
out
in
jl
jp
lods
aam
imul
repnz
fnstenv
popa
jp
test
xchg
iret
pop
xchg
mov
xor
xchg
jmp
xchg
push
imul
pop
xor
insb
fnclex
sub
sub
dec
jge
xchg
mov
push
test
cmc
add
insl
cmp
mov
pop
call
cvttps2pi
dec
or
dec
inc
out
sub
scas
out
jl
fdivs
out
xchg
lahf
icebp
xlat
mov
sti
push
adc
dec
scas
cmp
pushf
lods
push
inc
pop
mov
rep
jo
daa
pop
jmp
int3
jecxz
or
adc
movsl
or
pop
jbe
paddusw
sbb
push
gs
mov
mov
insb
js
addr16
dec
or
mov
andl
adc
mov
ljmp
push
dec
aad
scas
ss
mov
aas
mov
arpl
xchg
ret
pop
inc
outsb
andb
sub
fwait
movsl
inc
fistpll
daa
mov
jne
test
push
insl
push
je
mov
push
pop
xlat
cmp
addr16
push
aaa
daa
addr16
sbb
out
rol
ss
ds
xchg
mov
clc
aam
xchg
cltd
out
loop
rorb
fisttps
dec
ret
stos
mov
popa
repnz
je
fmull
sbb
bound
mov
in
pop
shrl
jb
add
adc
xor
inc
add
inc
add
jb
push
and
adc
or
js
insb
jns
sub
cwtl
sahf
dec
and
sti
mov
stc
into
xor
icebp
xorl
jnp
pop
adc
iret
popa
inc
push
mov
ficompl
in
cli
or
mov
dec
push
test
fdivrp
push
jae
ret
jecxz
test
cmpsb
mov
mov
test
orl
mov
push
mov
negb
outsb
xchg
cmpsl
inc
inc
jae
inc
cltd
insb
cwtl
mov
pop
in
test
lret
xchg
je
jns
pop
pop
jae
push
ret
xchg
xor
mov
sub
pop
cltd
adc
popa
push
push
cmp
jae,pt
lcall
push
int
jbe
ja
pop
out
insb
call
ss
adc
sbb
lahf
dec
dec
xchg
cmp
fidivs
icebp
sbbb
test
pop
push
out
mov
dec
or
push
push
cmp
dec
out
pop
scas
mov
ret
ror
push
mov
clc
nop
aad
jo
jge
stos
push
push
test
pop
pop
dec
add
cs
mov
mov
and
inc
sub
mov
sub
adc
lods
fnsave
stos
sub
daa
in
push
mov
mov
movaps
push
lret
xor
adc
xchg
mov
test
sub
fsts
fnstcw
movsb
sub
loopne
or
jl
add
adc
repnz
lahf
aad
test
cltd
push
gs
sbb
fwait
lahf
mov
and
pop
add
xchg
mov
jae
pop
cltd
movsl
in
adc
mov
mov
rorl
incl
mov
pop
sub
cmc
dec
inc
sti
popa
and
or
in
add
int3
mov
pushl
in
popf
ror
jecxz
jns
jge
dec
repnz
in
idivl
ds
jecxz
das
push
std
pop
or
fwait
addr16
cs
popa
lock
and
mov
xor
mov
lods
in
clc
ds
aas
or
mov
xchg
and
jg
inc
pop
cmp
cli
push
dec
xchg
aas
jb
repz
fcompl
andb
and
fidivs
xchg
aas
fninit
sub
sub
mov
pop
test
pushf
pop
test
jbe
pusha
andb
mov
das
out
pop
mov
push
in
mov
lods
sbb
and
stos
int3
sbb
fcom
ficoml
out
xchg
xchg
cmc
sarb
scas
and
mov
adc
pop
sbb
adc
and
and
xchg
lret
lods
pop
es
jle
fcmovu
push
cmp
inc
mov
and
jbe
dec
stos
xchg
loop
xor
xchg
cmp
pop
rcrb
pop
pop
push
test
mov
pop
lods
into
shlb
adc
testl
sub
jp
into
xchg
mov
inc
mov
test
mov
movsl
lcall
or
lea
lahf
rclb
xchg
sbb
enter
jecxz
jp
cmp
sub
pop
pop
jb
insb
inc
dec
lds
lcall
lods
in
and
outsb
test
dec
cmpsb
jl
jmp
add
mov
aam
fisttpl
mov
sbb
xchg
mov
inc
paddsw
xchg
in
xor
test
add
jo
mov
inc
arpl
add
dec
cmc
adc
nop
data16
jno
mov
mov
std
push
lcall
adc
scas
xchg
jecxz
jecxz
xchg
dec
fnstcw
daa
daa
sub
jle
mov
xlat
data16
hlt
mov
jmp
ficoml
adc
pop
lcall
xor
sahf
sbb
push
cmp
fisttpll
or
scas
xchg
and
jg
scas
gs
mov
and
xchg
push
ja
adc
loope
xor
push
inc
aam
sahf
cld
imul
or
lods
jnp
scas
jecxz
cmpsb
cs
pusha
xchg
or
mov
pop
sbb
add
mov
scas
addr16
mov
xchg
arpl
roll
cmc
mov
or
dec
lods
pop
mov
clc
cmp
sar
jno
or
push
xor
mov
nop
cwtl
dec
xchg
int3
sub
gs
lea
add
cmp
jp
push
cmpsl
and
bound
leave
sub
je
sar
fcompl
sub
stos
or
aaa
data16
cltd
pop
xor
sub
fstl
in
stos
xorb
addr16
jne
mov
pushf
test
mov
lret
pop
xor
rol
aaa
jp
pushf
lahf
rorl
mov
outsb
cld
sub
pop
pop
and
xchg
jno
xor
leave
idiv
dec
jnp
jo
push
ja
sbbl
cmpsb
add
call
enter
mov
loop
mov
or
clc
push
lahf
cmp
mov
into
jb
stos
pop
push
stos
fwait
xor
mov
sub
xchg
outsl
adc
loopne
scas
xchg
cld
xor
dec
mov
std
scas
sub
out
push
xchg
insb
in
lock
pop
mov
in
mulb
hlt
xor
jnp
add
mov
xchg
xor
pop
into
sbb
loopne
mov
push
dec
inc
cmp
hlt
jno
mov
cltd
jne
iret
insl
sub
and
cmp
push
push
out
mov
lea
cmpsl
xchg
mov
fnstcw
int3
pop
adc
adc
adc
add
cmc
imul
add
and
movsl
mov
dec
test
imul
repnz
subl
lock
stos
iret
out
sub
negb
loopne
jmp
sub
mov
sti
inc
mov
scas
cmp
push
adc
stos
adc
sub
cmp
or
lods
mov
popa
dec
mov
push
adc
je
sahf
insl
shll
lods
or
push
cmc
xchg
push
xchg
pop
xchg
jl
movsb
cli
push
inc
arpl
addr16
xchg
pop
and
sahf
fwait
cs
mov
sub
repz
lahf
pop
in
lcall
pushf
pop
pop
jns
and
shrb
bound
xor
add
pop
add
out
sbb
insl
stos
outsl
adc
adc
or
movsb
mov
fldcw
imul
int
cmpsb
push
cmp
cli
iret
cwtl
imul
test
sbb
scas
sti
in
inc
or
xchg
cld
adc
pop
ret
insb
leave
jge
gs
sub
mov
in
mov
lret
push
or
repnz
sbb
hlt
fwait
xor
fwait
ljmp
mov
rorl
and
mov
cmp
jmp
mov
movsl
xor
insl
sub
jge
push
or
push
test
mov
adc
je
mov
jns
rolb
sub
subl
dec
and
cmpsb
cmp
scas
push
stos
mov
pop
xchg
push
push
or
outsb
ficompl
divl
fldenv
in
not
mov
mov
adc
int3
fnstenv
adc
ret
push
das
mov
repz
jae
ret
in
fs
mov
lcall
xor
nop
jl
inc
inc
out
out
pop
push
fbstp
addr16
out
in
jne
lea
mov
cld
ret
int
out
subw
pop
jmp
push
outsb
xor
pop
xchg
mov
dec
ret
inc
int3
cmp
into
inc
mov
scas
pop
daa
andb
and
or
mov
outsb
add
in
imul
pop
lods
jns
and
xor
xchg
jbe
xor
lcall
or
pop
out
test
cmpsl
into
and
xchg
stc
mov
test
jbe
jg
jnp
aam
div
jns
test
push
push
pop
pop
sbb
dec
jne
xor
sahf
mov
jg
cli
or
mov
movsl
jno
cmp
popf
pop
loop
je
popa
jecxz
int3
push
sahf
lahf
and
jnp
fiadds
rcl
mov
dec
push
xchg
lret
je
push
mov
mov
mov
cmpsl
mov
cmp
outsl
cmp
add
imul
push
sbb
popf
dec
in
xchg
rolb
out
jbe
test
and
pop
jns
xor
xor
lods
ja
mov
push
jo
mov
popf
jae
and
mov
les
push
bound
jb
dec
pop
add
out
imul
ljmp
pop
jp
or
in
mov
orl
psubw
addb
gs
cltd
xchg
push
sub
jp,pt
addl
and
inc
mov
std
push
mov
sub
imul
ja
or
xchg
pusha
movb
leave
es
repz
add
lret
jo
jno
sbb
push
push
and
cmp
adc
ret
imul
cwtl
add
mov
ja
adc
xchg
xor
cmp
jnp
sahf
pop
sbb
test
sbb
and
cmpsl
mov
jo
or
ret
xor
and
ret
jae
out
pop
cmp
test
adc
scas
shlb
insl
scas
jns
push
pushf
pop
mov
shlb
arpl
fwait
test
inc
push
sti
push
jmp
mov
fnstcw
enter
movsl
cmp
sbb
jb
icebp
ret
jno
fcoml
int3
imul
jle
dec
repnz
test
std
cwtl
insl
lock
adc
xor
outsb
outsl
mov
sbb
into
cmp
jp
test
mov
xchg
dec
mov
inc
or
les
cld
leave
mov
or
jl
mov
add
or
fmull
mov
push
dec
mov
movsb
ss
or
mov
frstor
xor
imul
int3
mov
lret
jo
sub
clc
add
pushf
inc
pop
push
int
and
ss
mov
jno
inc
push
je
pop
iret
test
pop
adc
inc
mov
or
in
dec
in
mov
in
cmp
mov
jb
inc
scas
and
adcb
test
or
mov
mov
lea
xchg
pop
cld
in
push
mov
or
shl
js
in
or
xlat
mov
push
je
daa
xchg
lret
jns
xchg
inc
add
xor
data16
out
shl
push
filds
xor
adc
repnz
jecxz
dec
movsl
fwait
dec
ja
pop
dec
mov
ret
push
xchg
push
mov
mov
sbb
in
stos
jmp
xor
negl
pushf
inc
and
cmp
stc
rcrl
je
out
out
ss
xor
mov
fists
lahf
or
lahf
test
mov
dec
outsl
adc
lds
xchg
out
jp
aas
loop
cmp
mov
mov
repz
mov
jb
jnp
clc
jb
xchg
popf
pusha
mov
mov
ja
fldt
xor
pop
mov
inc
pop
mul
mov
ja
aaa
jmp
pop
and
cmp
mov
dec
mov
lea
mov
or
movsl
or
movsl
dec
flds
das
in
ds
test
orb
pop
jg
jbe
push
das
mov
or
mov
inc
cmp
shll
jnp
or
add
mov
sbbb
int3
mov
pop
lods
inc
cld
test
cmpsb
ret
xchg
mov
jns
cs
cmc
repnz
cmp
cmp
mov
mov
pushf
shl
lret
and
dec
scas
pop
push
icebp
neg
mov
lret
push
stc
addb
jecxz
mov
fcmovbe
lahf
push
imul
ljmp
insl
fs
and
push
add
outsb
les
fs
cmp
jg
dec
sbbb
xchg
gs
int3
sbb
and
je
dec
clc
es
fidivrl
cmpb
fisubl
sub
loope
xchg
xor
ja
andb
les
inc
dec
mov
dec
cmpl
push
xor
adc
xchg
popa
pop
test
adc
sbb
or
or
xchg
sbb
jecxz
add
push
stos
xchg
jae
xor
and
xchg
insl
lret
cmp
xchg
or
or
loopne
adc
fldt
sbb
dec
jecxz
and
decb
push
hlt
mov
in
in
sub
insb
into
leavew
fsubs
lea
or
imul
add
pop
mov
xor
popf
outsl
add
push
or
sub
xchg
sbb
mov
in
mov
aaa
ret
cmp
xor
pop
fistps
lods
aad
mov
jae
jnp
loope
dec
jo
sub
mov
sbb
insb
mov
xlat
in
add
or
jo
arpl
cmc
and
stos
pop
dec
mov
lods
cmp
inc
inc
push
sub
negl
lret
jmp
and
adc
mov
sbb
and
stos
in
outsb
sbb
je
ljmp
addb
sub
mov
and
push
in
stos
ja
in
xlat
mov
and
or
pop
mov
xchg
mov
cld
pop
push
push
orl
cmpsb
mov
dec
xchg
mulb
add
addr16
loope
mov
sub
sarl
xor
mov
insl
add
test
sbb
push
jp
sub
add
jge
adc
decb
lret
sub
lods
mov
mov
int3
xlat
insl
faddl
idiv
xchg
adc
cmp
cld
movsl
jns
std
adc
das
sbb
xchg
les
pop
lock
inc
arpl
jno
test
push
cli
fcoms
pop
xchg
jle
push
jp
or
xor
nop
xchg
rorb
adc
rcl
shrb
repz
jb
adc
mov
fs
jmp
mov
cmp
jo
std
sti
flds
inc
or
adc
cmpsl
sub
and
mov
push
cld
pop
mov
jle
sub
and
push
fs
mov
incb
adc
sub
mov
scas
into
adc
push
cld
in
popf
cmpsb
inc
andl
mov
dec
loopne
fsub
sub
add
lcall
stos
movsb
ljmp
push
imul
insl
call
or
out
xor
pop
fsubp
xchg
dec
repnz
inc
mov
add
movsl
jmp
movsb
dec
inc
push
in
inc
lahf
jmp
out
rorb
lret
test
cmp
pop
repnz
adc
inc
in
mov
enter
in
xor
dec
int3
cmp
cmc
jns
test
pop
mov
repnz
pop
adc
mov
mov
test
xchg
lock
int3
int3
push
flds
xor
jmp
push
hlt
sub
call
les
loope
sbb
dec
mov
shll
sub
in
clc
xchg
xchg
aaa
jb
fucomip
cmp
nop
clc
xor
loop
jae
je
sub
sub
in
mov
fbld
repz
nop
mov
add
or
mov
sub
lea
inc
dec
jle
mov
mov
std
test
push
mov
sti
ljmp
xchg
aam
into
outsb
inc
push
cmp
cmp
outsl
ret
jecxz
fsts
hlt
enter
mov
out
insb
mov
mov
testb
idivl
out
stc
aam
jl
popf
xorl
and
ror
movsb
nop
sbb
cmpsb
mov
cmc
mov
dec
dec
test
mov
mov
addr16
mov
outsb
add
ss
cmc
add
mov
push
xor
pop
push
push
adc
in
push
adc
xor
movsb
aas
mov
adc
hlt
or
pop
mov
pop
sarb
mov
call
sahf
sbbb
sti
movsb
test
mov
or
into
xchg
fs
sub
jb
adc
push
mov
imul
lea
lock
divb
inc
push
pop
mov
ror
mov
dec
ds
push
mov
clc
aam
outsl
scas
notb
mov
inc
lret
xchg
nop
adc
cltd
fidivl
mov
into
push
test
mov
cmp
js
jl
xchg
into
out
adcb
push
jns
dec
pusha
lahf
adc
xchg
xor
arpl
insl
mov
or
rclb
loope
out
daa
sbb
jns
stos
in
mov
push
cmp
and
rcrb
test
xor
xor
and
mov
xor
jge
imull
push
adc
sbb
in
dec
sbb
xchg
push
sub
and
pop
subb
cltd
mov
sub
loope
jb
mov
push
nop
dec
push
adc
mov
adc
push
lret
xchg
pop
loopne
fs
in
fs
or
test
push
cld
jne
mov
ds
rcrl
add
dec
and
and
jnp
and
int3
out
out
orb
icebp
xchg
hlt
adc
mov
adc
ret
ds
ljmp
pop
repz
jae
xchg
push
loop
arpl
ja
and
test
mov
mov
cmp
cmpl
clc
jae
or
fstpt
mov
inc
test
cmp
jmp
xchg
sbb
push
jle
pop
js
sbb
and
xor
test
xchg
stos
jne
mov
mov
xor
push
sarb
xchg
dec
pop
sbb
adc
mov
pop
ret
mov
pop
inc
mov
scas
pop
push
add
add
xor
pushf
pop
cmp
movsl
xchg
cli
jb
int3
adcl
das
lret
inc
xorl
in
jle
insb
rorb
mov
aaa
cltd
not
xchg
cmp
in
cmp
repz
stc
sahf
cwtd
cmp
imull
addr16
xchg
mov
sub
lds
or
out
daa
and
cmp
in
std
js
push
inc
sahf
leave
stos
inc
inc
pop
xchg
stos
dec
dec
sbb
xchg
dec
scas
xor
leave
push
xor
out
in
imul
mov
in
xchg
outsl
jle
subb
xlat
xor
repnz
dec
ret
or
jp
mov
loop
pushf
fldcw
xchg
xor
in
xchg
in
std
adc
mov
sub
and
inc
popl
cmp
imul
movsl
jmp
clc
or
lahf
sub
and
pop
stos
inc
fiaddl
or
mov
cmpsl
jnp
mov
cs
nop
inc
pushf
push
test
push
cwtl
icebp
mov
iret
xchg
jge
ret
lahf
imul
nop
hlt
inc
jns
xchg
add
xor
dec
mov
mov
push
outsb
cmc
sbb
sub
sub
or
fnstenv
xor
out
fs
mov
pop
fidivl
xchg
jo
inc
mov
aas
xor
mov
aas
adc
or
sbb
testb
mov
pop
fimuls
push
fs
jns
daa
bound
fstpl
pushf
rcrb
adc
in
popf
daa
sub
addb
sti
jb
fnstsw
sub
xor
pusha
and
insb
adc
and
into
bound
push
xchg
and
xor
into
add
cld
push
xor
mov
and
sub
xchg
mov
lcall
lcall
stos
aas
data16
or
call
cmp
push
clc
push
pop
pop
cmpsl
insb
add
movsb
and
mov
aas
sbb
push
push
mov
mov
add
sub
iret
jne
sarb
je
and
icebp
pop
roll
lcall
dec
pop
js
out
add
xchg
sub
push
addb
xor
into
loopne
or
iret
jecxz
mov
dec
stos
dec
xchg
stc
fmull
pop
push
sub
cmp
data16
std
jecxz
inc
jo
icebp
std
dec
add
mov
das
je,pt
icebp
pop
icebp
dec
nop
or
aaa
dec
inc
cmp
dec
push
sti
lds
and
dec
fistpl
inc
aaa
push
rolb
mov
sub
popf
out
adc
pop
cmpsl
hlt
and
pusha
xor
sub
loope
mov
movsl
sub
out
add
into
js
pop
jns
fwait
cltd
into
cltd
jmp
shll
aam
cld
lods
aas
sub
or
xlat
inc
push
ficoml
in
sub
test
or
int3
es
mov
in
cmc
pop
movsl
dec
rcll
mov
xchg
aad
aam
sbb
jp
lods
ret
aad
inc
divl
nop
mov
sbb
mov
out
inc
dec
lods
adcb
sbb
cmp
push
lret
mov
cmpb
stos
mov
int
inc
out
xor
mov
mov
cli
je
out
mov
orb
jge
pop
mov
leave
mov
or
or
xor
push
addr16
push
sbb
lea
das
int
mov
dec
loopne
aas
mov
or
setp
sbb
add
push
xchg
mov
cmp
mov
adc
fmul
lods
aas
xchg
xchg
add
adc
mov
std
nop
cmp
jge
dec
subb
xchg
xchg
cmpsb
sub
stos
xchg
mov
xor
pop
cmc
popa
mov
addr16
in
mull
mov
xchg
testb
aaa
enter
lds
leave
push
sahf
sbb
jo
sbb
mov
cmpsl
or
adc
pop
cmp
addr16
xchg
scas
mov
pop
pop
jecxz
add
lcall
sarl
or
jae
fidivrs
or
xor
fldl2t
push
pop
push
add
ret
push
das
dec
xchg
dec
out
add
jns
sbb
lret
sub
adc
xchg
or
inc
push
inc
mov
fnstsw
data16
cmpsl
lods
ds
and
int3
dec
inc
inc
mov
cmp
push
pop
in
andl
fisttpll
sbb
adc
insb
xchg
jo
fmul
ljmp
aad
cmpsl
or
test
fwait
sbb
xchg
clc
lea
mov
jmp
in
mov
cmpsb
subl
lcall
jmp
sub
imul
movl
sar
pop
mov
inc
mov
adc
flds
xchg
mov
mov
mov
repz
sub
iret
cmp
repnz
scas
xor
dec
mov
add
nop
xchg
add
dec
jo
or
wrmsr
or
aad
and
rcrb
ja
push
xchg
add
sbb
out
xchg
adc
and
cld
rolb
pop
xor
int
imul
pop
movsb
shl
sub
das
out
add
lock
jae
enter
faddl
lea
std
jne
adc
push
or
out
cli
push
inc
and
mov
cmp
xor
push
dec
jno
in
mov
pop
mov
movnti
jne
push
js
in
dec
adc
push
and
xchg
sar
cmpsb
push
hlt
sbb
lods
fildll
sbb
cmpsb
inc
jae
dec
mov
xor
pusha
sub
pop
ficoms
dec
subl
xchg
out
rcr
fisttps
fstl
sbb
les
aam
idivl
push
mov
int
inc
aas
out
pop
xchg
jle
jne
mov
xchg
jg
rclb
sbb
adc
cmp
stc
aam
jge
fdivl
in
jp
xor
xchg
or
aam
pop
cmp
ljmp
sti
or
xchg
mov
mov
cmp
jg
testl
inc
aam
ja
sub
jp
xchg
pop
add
call
loope
rcrl
add
mov
lea
mov
and
ja
and
clc
fwait
push
sub
lock
cli
adc
shll
sbb
out
sbb
imul
ret
adc
mov
lock
outsb
clc
jecxz
dec
andl
ljmp
push
fisttps
scas
mov
lock
push
aad
mov
das
and
adc
jmp
mov
imul
in
jg
das
mov
dec
xchg
add
jp
jl
cmpsb
in
xchg
jecxz
sti
dec
mov
and
pop
mov
pop
add
sbb
loope
fcomps
fsubs
daa
jmp
fwait
jecxz
and
cmpsl
in
pop
pop
lret
das
lahf
push
lret
cmpsb
hlt
lds
fmull
push
insl
imul
jmp
lea
jg,pn
or
sub
fmul
movsl
jo
andl
pop
pop
and
push
gs
fstpt
imul
mov
mov
jo
or
sti
rep
notl
stc
les
xor
mulb
insl
mov
push
ss
inc
sahf
sarl
movsl
sarl
cmp
dec
and
jbe,pt
mov
pop
jp
cmp
mov
jmp
jae
mov
cmp
iret
sbb
inc
cmp
std
imul
daa
dec
insb
add
ds
xchg
or
ffreep
sbb
push
in
out
lods
cld
in
sbb
sarb
add
sub
jns
loope
lret
xchg
adc
in
push
ss
mov
dec
outsl
jge
rcrb
fsubrl
loop
adc
icebp
aam
dec
repnz
loope
adc
cmpsb
repz
aam
fld
stc
push
push
sti
loopne
shr
jge
scas
aaa
cmp
cmpsl
and
ror
xchg
out
insl
mov
fdivs
dec
int
insb
ficompl
aas
fists
lea
and
cmp
std
bound
icebp
repnz
and
and
jne
adc
push
xor
loopne
mov
sbb
popf
mov
loopne
mov
in
jnp
dec
scas
repz
ds
and
sub
dec
jle
sahf
jns
add
jp
mov
inc
push
mov
mov
xor
popf
or
ljmp
pusha
sbb
jge
repz
sbb
xor
enter
pop
push
movsb
scas
mov
dec
adc
mov
mov
jl
dec
movsb
inc
sti
js
pop
test
icebp
mov
ss
or
fadd
out
js
insb
and
shrb
sub
jmp
pop
aad
pop
or
adc
gs
xchg
test
adc
arpl
leave
fstps
mov
icebp
xor
push
mov
xchg
ja
inc
jno
std
aas
shll
xlat
jne
fcoml
adc
push
xor
outsl
cmpsb
adc
jmp
js
xchg
push
insl
mov
mov
mov
push
and
push
roll
lcall
push
cmp
sbb
test
push
cs
dec
or
mov
xor
movsl
mov
push
xchg
or
dec
or
pop
push
std
xchg
movsb
pushf
je
shlb
mov
pushf
pop
movsl
shrl
test
adc
mov
lret
repz
data16
rcr
and
xchg
pop
dec
aad
cmp
sbbl
in
mov
loope
cmp
mov
outsl
idivb
sub
pop
push
maxps
lret
test
arpl
test
dec
mov
andl
dec
fisttps
pop
and
mov
arpl
cmp
je
pop
pop
hlt
movsb
mov
dec
rcll
fwait
mov
dec
test
push
call
test
notl
mov
lods
mov
push
aas
cwtl
xor
cmpsl
enter
inc
lret
push
ret
inc
in
enter
pushl
and
mov
lock
imulb
iret
mov
jb
mov
into
sahf
pop
in
sbb
dec
out
inc
and
inc
ds
mov
mov
mov
dec
cmc
out
and
xchg
icebp
inc
sarb
sub
fcomi
push
push
div
mov
cli
lock
pop
mov
mov
sbb
out
inc
ret
add
ja
pop
orl
cmp
mov
or
enter
aas
mov
lods
das
or
inc
inc
inc
inc
sub
sub
cmpl
or
and
int3
mov
outsl
imul
adc
test
out
imul
mov
in
push
pop
stc
xchg
enter
mov
popa
add
cmp
cmp
cmp
or
fwait
cmp
push
xchg
sub
sti
xchg
inc
and
notb
or
sub
pop
insb
push
rorb
adc
fidivs
mov
cs
ret
les
test
and
dec
adc
ret
pop
insl
std
aas
dec
add
sub
das
and
cs
and
fidivrs
xchg
flds
or
fidivl
sub
push
out
rep
bound
adc
int3
pop
jl
lret
leave
fildll
jecxz
lret
out
mov
pop
decl
push
lods
sub
mov
inc
jmp
jecxz,pn
inc
mov
loop
insl
ljmp
pop
scas
icebp
xchg
cwtl
cld
cltd
add
in
int3
pop
cmc
mov
hlt
stc
dec
imul
push
icebp
in
push
and
inc
ljmp
xor
mov
mov
push
in
or
imul
mov
mov
jns
fidivrl
jne
adc
jne
mov
roll
and
push
gs
cmc
jnp
xchg
push
in
jo
lods
push
inc
mov
rcrb
xor
push
sub
sbb
js
push
mov
mov
xchg
rcl
cmp
jo
clc
pushf
pop
bound
fsts
mov
imul
frstor
cmp
add
out
add
movsl
push
inc
rep
xor
push
repnz
in
movsl
sarl
sbb
sub
xchg
lret
stos
testb
imul
lea
and
lods
add
sti
and
inc
mov
je
xor
fmul
notl
stc
orl
out
aad
ss
pop
jle
outsb
dec
insl
ds
popa
movsl
or
push
mov
sub
mov
ss
adc
jmp
sub
cmp
sbb
pop
adc
jl
pop
sbb
out
pop
lock
jl
repz
shl
out
xor
cmpsl
mov
push
lret
or
lock
mov
in
das
sbb
xor
nop
xchg
negb
repz
faddl
jbe
cmp
sub
dec
push
insl
mov
mov
sub
aam
in
cmp
adc
push
into
and
dec
mov
pop
js
mov
stos
sbb
fs
inc
incl
inc
xor
mov
stos
and
outsb
lods
not
repnz
and
fxch
jno
sbb
in
cmp
mov
adc
jb
enter
xchg
sub
xor
fidivs
pusha
hlt
les
jle
aaa
outsl
insb
mov
add
testl
pop
cmp
les
mov
bound
mov
push
sub
repnz
mov
fwait
adc
jge
pop
xor
pop
push
jae
pushf
push
xor
test
jno
add
cmpb
sub
les
lea
push
mov
pop
mov
or
jmp
dec
jmp
mov
mov
dec
cmp
stc
jp
sub
mov
aaa
adcb
push
lret
shll
fwait
or
and
sub
fiadds
movsb
loopne
push
jmp
mov
aam
sbb
pop
push
adc
dec
scas
rcr
push
inc
dec
xor
leave
loope
imul
call
mov
inc
mov
push
dec
mov
scas
jl
outsb
in
dec
sub
jg
iret
jg
lods
xchg
movsl
hlt
jbe
adc
into
xchg
push
scas
or
rclb
orb
scas
mov
mov
jg
sbb
lret
rcrl
cmc
mov
push
jp
push
ret
rol
xchg
cmp
xchg
pop
pop
sbb
int3
dec
call
insl
mov
xchg
imul
xchg
jmp
cmpsb
int
mov
es
pop
xor
mov
inc
fmull
ss
aam
mov
aaa
clc
lret
fidivrl
ret
cmpsb
ret
pop
fs
add
sub
enter
andb
movsl
out
and
add
mov
cmc
mov
and
lret
xchg
inc
ljmp
mov
in
jo
sub
adc
xchg
jno
xor
sti
daa
mov
sahf
cs
pop
jp
pop
jb
bound
mov
sarb
in
xor
rcr
xchg
mov
fdivrs
shrl
lret
mov
xor
dec
jle
pop
dec
lcall
ja
dec
cmp
pushl
stos
adc
dec
mov
jno
ret
dec
mov
sbb
fcompl
mov
pop
imul
fisubs
out
xlat
push
inc
jo
test
std
imul
mov
or
jge
insl
ficoml
popf
sarb
shlb
xchg
xlat
clc
es
xchg
clc
icebp
orb
push
mov
std
inc
pop
repz
mov
aam
adc
lea
addr16
ret
adc
mov
mov
fldt
insb
std
int
pushfw
xchg
and
inc
test
jo
mov
mov
cwtl
cli
inc
mov
dec
cmpsl
les
jl
enter
xchg
adc
outsl
mov
ret
mov
mov
insb
and
xchg
shlb
or
pop
push
push
hlt
dec
sbb
ja
js
icebp
and
add
push
pop
stos
icebp
inc
push
gs
dec
mov
sbb
mov
mov
ljmp
push
lcall
fiaddl
mov
push
lret
leave
dec
sbb
out
sub
jge
sahf
inc
cmp
inc
and
inc
lahf
sub
popf
or
fstl
or
pop
loop
rorl
sub
pop
push
fisubrl
or
mov
in
je
imull
in
lock
in
or
and
in
cmp
cmp
out
cmc
jne
jecxz
xor
push
xchg
out
jmp
or
in
es
mov
xor
xor
neg
push
jo
aam
cwtl
jp
push
and
addr16
push
sub
ret
imul
lcall
fcom
test
mov
out
push
into
add
sub
xchg
addl
sub
inc
pop
outsl
cmp
lahf
push
and
stc
aad
subl
lret
sahf
adc
cmc
add
dec
sahf
push
mov
inc
cmpsl
inc
push
loop
or
push
fisubrs
mov
pop
scas
stc
xchg
dec
dec
or
ss
pop
aaa
pop
xchg
les
push
sub
sub
mov
popf
pop
ss
es
fcoms
js
cmp
fs
cmp
shlb
loop
xor
inc
enter
ljmp
adcb
or
mov
in
sti
add
pop
gs
mov
push
mov
cmp
jae
dec
lahf
lods
daa
sarb
jbe
or
push
ret
cmc
insb
mov
fs
addr16
test
repnz
lods
sub
adc
dec
xor
pop
inc
add
push
aam
repz
lods
imulb
mov
jns
sub
mov
mov
in
inc
call
lods
ljmp
scas
loope
fiaddl
ficomps
sbb
imul
sub
outsb
jnp
jmp
rcll
jp
lods
into
jns
cmp
data16
push
outsl
dec
add
test
pop
cmpsb
and
dec
mov
in
xchg
sar
or
cld
js
mov
les
in
popf
stc
pop
lods
inc
xchg
xchg
out
sub
mov
jmp
fimuls
frstor
fs
ss
mov
mov
popa
sbb
loopne
mov
mov
mov
push
mov
jecxz
jae
sbb
xor
scas
inc
lods
popf
add
daa
mov
push
jp
add
and
jbe
push
ficoml
jb
or
insl
mov
jnp
xchg
ds
jb
cmp
mov
in
test
daa
dec
fidivs
cs
or
nop
mov
leave
cmp
inc
sbb
les
dec
add
sub
into
or
sarb
or
pop
fsubs
push
mov
sub
mov
push
adc
pop
outsl
rcl
cmp
fs
stc
ficoms
push
ljmp
pop
imul
repz
push
repnz
pusha
adc
mov
sbb
fdivs
mov
mov
cmp
fwait
shl
negl
jge
mov
and
test
and
arpl
lret
daa
fcompl
orl
rol
movsb
add
jl
xor
out
xor
hlt
test
cs
les
cltd
xor
aam
cmp
int3
mulb
mov
or
sub
pop
push
cmp
enter
add
js
je
pop
jo
and
repz
daa
lds
fimull
cmp
xchg
push
bound
aam
sub
in
negw
xchg
mov
jmp
xor
movsl
mov
dec
aad
jno
push
test
aaa
lods
loopne
into
lret
pop
pop
cs
iret
mov
xchg
mov
lea
int
pop
out
lret
pop
lcall
insl
jge
idiv
cmpsb
add
stos
call
mov
pusha
mov
scas
xchg
in
cltd
loopne
das
add
xchg
push
xchg
pop
dec
sbb
stc
sbb
jge
addl
or
dec
jle
or
mov
andb
mov
test
notl
aad
inc
adc
out
out
push
imul
xlat
inc
sti
inc
inc
adc
shl
clc
pop
push
mov
sub
dec
fxch
sub
sbb
cmc
sti
adc
repnz
cmp
bound
jns
xlat
test
cld
sub
mov
and
jno
xor
adc
outsl
divl
mov
sbb
push
ja
mov
stos
or
and
fnsave
inc
test
test
add
or
nop
outsl
int3
push
and
cmpsl
dec
or
jp
push
lahf
or
scas
addl
dec
sbb
jae
mov
sbb
test
sbb
jge
mov
jns
inc
call
shl
es
mov
sti
mov
cld
push
in
mov
and
loopne
cmpsl
push
xchg
loopne
push
sub
jae
mov
mov
fisubrs
cmpsl
loop
sbb
cmp
mov
cmpsb
sti
xor
sub
jl
daa
push
out
fwait
mov
dec
mov
cmpsb
pop
cltd
xchg
rcrl
dec
popa
cltd
xchg
shr
loop
inc
fistps
jg
mov
sub
pop
inc
jb
into
push
data16
sti
shlb
stos
je
popf
sub
outsl
jle
lods
sub
in
inc
loopne
or
mov
lahf
addl
pavgb
nop
movsb
add
add
xor
mov
pop
dec
sahf
jae
ret
or
xchg
bound
mov
push
jge
sub
add
cmp
mov
cmc
add
es
add
ds
fnclex
das
int3
dec
dec
popa
jae
pop
xlat
pushf
push
das
xor
and
dec
nop
hlt
cmp
stos
fsts
mov
cmp
cwtl
add
cmp
xor
out
pop
lret
push
mov
ret
xchg
addr16
push
daa
loopne
shrb
or
and
addl
mov
mov
push
and
lret
aam
mov
in
ja
mov
mov
mov
in
ret
lods
adc
cmp
cmc
add
cmp
out
mov
sti
cmc
pop
inc
dec
out
insb
push
sub
sbb
mov
lret
jbe
std
add
xlat
xchg
daa
mov
push
into
decl
sbb
cld
mov
mov
cltd
movsl
ficoml
xchg
dec
imul
sub
mov
clc
daa
stc
shll
mov
imul
adc
push
mov
lds
cmp
fstl
adc
cs
mov
mov
test
stos
dec
out
xchg
xor
fdiv
aam
sub
cmp
or
or
subl
pop
add
leave
push
sbb
sub
outsl
mov
loope
jge
sub
cltd
scas
xchg
int
or
test
pop
insb
lods
rol
or
inc
enter
jecxz
repz
movsl
imul
rcrb
loopne
inc
or
add
out
and
rolb
push
scas
jmp
inc
dec
add
jp
arpl
cmp
mov
out
push
mov
push
popf
inc
dec
cmpsl
cmp
xchg
in
push
dec
rcrb
mov
leave
mov
xchg
je
push
int
cmc
dec
xchg
lret
clc
jl
inc
inc
gs
sub
jp
cmp
pop
movsb
or
push
test
mov
push
mov
cltd
dec
das
mov
sbbl
and
fdivl
dec
lock
pop
adcl
test
repz
in
mov
out
lock
es
jns
xor
ficomps
or
loopne
lea
adc
or
mov
jg
jne
mov
mov
shll
add
stos
shll
loop
les
mov
stos
jns
or
mov
xor
push
push
test
sub
adc
or
imul
aas
pop
lock
into
stc
mov
scas
dec
in
vaddpd
sbb
or
jne
mov
pop
dec
push
fbld
and
std
xchg
jns
push
std
push
lock
lock
fnsave
xchg
xlat
test
rep
icebp
and
or
outsl
mov
aaa
and
mov
lods
sbb
adc
and
sub
dec
lods
add
pusha
es
jmp
out
dec
lret
and
xor
rcll
jge
adc
out
loopne
pop
dec
out
lea
mov
lret
sbb
enter
inc
es
je
push
xor
pop
mov
ret
test
sbb
mov
enter
jns
gs
cmp
xor
outsb
lahf
in
jl
jp
pushf
mov
mov
sahf
adc
and
cmc
fisttpll
jmp
out
mov
and
mov
xor
movq
call
xchg
out
xchg
or
add
jge
adc
jbe
mov
clc
cmp
aaa
mov
test
fcoml
fdivp
or
cmp
or
xorb
xchg
jnp
adc
in
sub
addr16
in
jle
add
or
jl
adc
rorb
test
arpl
lret
jg
leavew
ds
adcl
lds
aaa
xor
fstps
out
loope
scas
mov
dec
push
cmp
leave
pop
popf
jge
fsubrs
imul
repnz
inc
adc
xlat
jmp
cmp
pop
insl
xchg
mov
call
jo
or
aam
push
test
fadds
or
repnz
dec
call
int3
sbb
and
mov
adc
jmp
xchg
fbld
aaa
icebp
ffree
mov
and
cltd
loop
out
inc
inc
pusha
cmpps
mov
sbb
xchg
cld
sbb
sbb
jne
mov
mov
mov
sbb
cltd
test
jp
and
cmpsb
sbb
movl
xchg
addr16
dec
add
pushf
cmp
imul
fcoms
je
dec
shrl
sbb
std
mov
stc
popa
xchg
ja
or
inc
dec
aad
filds
xor
jae
or
xchg
mov
cmp
gs
pop
fwait
pop
sarl
cld
shrl
aas
lds
jle
mov
nop
movsb
pop
jae
pop
lret
mov
pop
shll
dec
fldt
je
inc
cmovp
lods
loopne
mov
cmp
aad
push
or
fistps
ret
clc
push
mov
push
test
int3
push
int
pop
lret
adc
inc
test
hlt
es
arpl
or
cld
add
in
fisubrs
insl
adc
add
cwtl
repz
push
push
mov
sbbl
jb
sbb
js
test
and
ljmp
cmc
test
and
push
push
in
mov
in
mov
out
outsb
pushf
xchg
jp
insl
shlb
subb
scas
inc
inc
stos
stos
jnp
stc
push
rorb
mov
xchg
scas
jle
mov
out
and
push
xor
jo
push
adc
xor
adcb
dec
test
in
cmp
hlt
jno
inc
das
pop
les
jl
cmpl
push
sahf
jnp
imul
pop
pushf
lock
pushl
popa
out
add
cmp
adc
xchg
mov
pop
jmp
shrb
or
mov
adc
push
daa
push
mov
fildl
cmp
push
scas
int3
xchg
sbb
insb
xorb
pop
mov
in
mov
mov
dec
js
mov
cmp
or
jmp
add
das
mov
xor
ficompl
xchg
aas
push
mov
pop
daa
daa
mov
daa
mov
push
pop
push
mulb
dec
int3
popa
popa
mov
int
mov
jecxz
ret
test
addr16
call
or
shrb
je
js
cmpsb
in
or
lcall
dec
mov
xchg
mov
stc
sub
and
mov
xor
dec
lcall
push
into
iret
or
ss
mov
lret
cli
mov
and
lds
inc
ss
int
pop
pushf
iret
push
mov
sbbl
in
or
adc
sti
notb
xchg
adc
mov
icebp
push
mov
push
scas
push
pop
xchg
fdivs
or
mov
rcrb
add
hlt
cmp
push
fldz
jbe
inc
pop
cmp
fnclex
jl
inc
aad
rorb
mov
rorl
xor
and
daa
mov
loop
xchg
dec
jmp
xlat
cmpsb
and
sti
out
or
loop
mov
imul
push
fldcw
loop
cmpsl
xchg
cs
push
jnp
lods
pop
mov
rcll
iret
sbb
scas
stos
iret
stc
out
mov
je
lcall
push
dec
cmpsl
pusha
lea
adc
jmp
mov
mov
aas
pop
mov
sbb
inc
enter
xor
ds
cwtl
incb
jno
xchg
scas
fistpll
movsl
adc
mov
add
jne
cmpl
ljmp
arpl
das
mov
push
or
mov
lods
out
jecxz
shr
xchg
push
inc
mov
adc
cli
pop
stos
cltd
insb
cmp
insb
cmpsb
push
movsb
sub
int
mov
pop
jae
pop
adc
push
add
sahf
add
jbe
iret
jl
mov
cmp
or
push
insb
inc
push
xlat
lahf
jo
int
out
pusha
das
cwtl
rol
dec
xchg
fsubrl
movsl
push
lcall
sarb
movsb
std
out
imul
dec
stc
mov
cld
sti
sub
add
fists
sahf
inc
icebp
dec
fcoml
dec
dec
out
mov
jb
ror
out
dec
push
mov
sub
mov
dec
xchg
das
mov
andb
mov
cli
add
mov
jae
dec
adc
mov
lcall
cmc
jne
leave
popa
cmp
fisttps
xorb
push
and
adc
test
stos
xchg
mov
pop
lods
in
inc
push
add
pop
xor
sbb
lea
in
push
imul
arpl
iret
and
xor
cmp
mov
pusha
pop
shl
sbb
in
subl
fnsetpm(287
xchg
mov
jle
mov
push
mov
movsb
inc
aaa
sub
mov
sti
pop
and
imull
cmpsl
push
sub
stos
push
push
or
push
dec
sbb
in
add
sub
std
xor
lret
lahf
sbb
inc
mov
sub
outsb
out
jecxz
stos
orb
idivb
cmp
or
call
lret
add
sbb
scas
in
add
push
icebp
in
pop
jge
sahf
call
in
ja
std
insb
adc
iret
mov
mov
cltd
aaa
pop
dec
js
cmp
cmp
lahf
ds
movsb
xor
sub
fnsave
xor
pop
push
jbe
mov
cld
pop
dec
xchg
scas
jle
jle
in
and
cmpsb
dec
xchg
scas
cmp
inc
stos
dec
lods
cli
jnp
mov
push
outsl
pop
xchg
xchg
jp
test
call
invd
nop
sub
ljmp
sub
and
pop
jae
and
pop
pop
incl
push
jae
std
cmp
jne
jno
insl
xor
inc
ds
cmp
jmp
pusha
push
push
xlat
lcall
cmp
jb
arpl
xlat
or
push
mov
xor
andb
cltd
neg
stc
lock
adc
sbb
test
cmp
cmp
or
push
pusha
jne
dec
and
cli
inc
lret
mov
negl
and
test
ja
idivb
int
cmp
popa
and
sahf
cmp
fcoms
cmc
mov
mov
imul
mov
lahf
pop
push
pop
lods
test
in
jmp
cmp
inc
mov
mov
xchg
pop
jo
cmp
xchg
hlt
bound
das
sub
daa
cmp
push
jmp
out
push
cmovg
subl
lods
jne
jne
cmp
insl
es
xlat
lds
ror
fs
push
ja
fdivl
cmp
jae
repnz
inc
scas
push
inc
inc
sub
dec
sti
push
jo
push
push
notb
les
lret
insl
dec
push
shrl
popa
sub
outsb
or
out
adc
mov
bound
and
mov
mov
dec
adc
repnz
dec
cs
jns
xchg
and
in
pop
cmpsl
inc
movsb
hlt
sbb
arpl
push
or
insl
mov
mov
cli
xchg
fld
shl
mov
das
rcrb
data16
pushf
cmp
dec
sahf
cmc
push
cmpsl
add
push
test
mov
mov
inc
adc
testl
popf
mov
stos
popf
scas
aaa
repz
negl
push
stos
or
clc
jle
pop
mov
lret
mov
and
outsl
bound
aaa
jo
sbb
ds
or
push
nop
and
ret
cmp
jle
into
ss
push
push
out
stos
nop
and
mov
jecxz
or
adc
out
xchg
dec
pop
adc
cmp
out
jp
insb
inc
ja
mov
mov
jle
and
and
lds
push
lcall
nop
mov
jmp
mov
sub
dec
adc
jno
lds
leave
jl
out
and
ficoms
mov
mov
mov
mov
popf
mov
mov
inc
inc
ds
loope
nop
pop
adc
cmp
int
jp
bnd
mov
adc
daa
adc
push
les
bound
movsl
daa
adc
pop
cwtl
sub
xchg
in
fstl
dec
mov
pusha
jne
insl
js
loopne
mov
lea
or
notl
mov
cwtl
iret
clc
cmp
sbb
jo
jle
or
fdiv
stc
aaa
cmp
jmp
rorl
ret
sbb
out
ss
dec
int3
repnz
outsb
fs
stc
pop
dec
dec
fisubrl
and
sub
add
mov
movsb
pop
mov
push
jl
out
add
mov
repz
sahf
xchg
push
test
xchg
loop
outsb
lods
int
cs
fwait
push
xchg
push
les
sub
sub
pop
mov
or
mov
push
iret
jbe
jp
jg
loop
out
jno
jge
xor
sub
inc
mov
mull
lcall
test
pop
add
xor
push
or
push
lcall
ds
sbb
rorl
loop
inc
ljmp
push
cld
pop
lret
mov
sub
jmp
sbb
xchg
add
dec
mov
add
lea
outsb
pop
push
xchg
test
pusha
movsb
cmpsb
xor
cmpsb
add
add
mov
jge
push
mov
push
popf
pop
and
mov
sbb
add
imul
add
repnz
pop
pop
push
xor
cmp
xlat
cmp
jge
outsl
shlb
and
fidivrl
cld
mov
dec
sti
outsl
cmp
add
adc
xor
jl
int3
test
cmpb
mov
fdivr
enter
xor
and
inc
sahf
mov
xlat
outsl
xor
or
push
call
add
jge
pop
out
cmpsl
sbbb
push
aam
mov
and
jns
jbe
sub
stos
and
push
aam
inc
test
cmpsl
pop
popa
lea
les
lret
jb
jne
fisttpll
add
xorl
cmp
xor
jmp
cmpsl
dec
sbb
mov
add
cwtl
sti
mov
and
fbld
nop
stos
cvtpi2ps
mov
fstps
aam
pop
repz
cmpsl
lahf
sbb
movsb
cmp
jns
jl
imul
or
not
mov
lahf
movsb
push
cwtl
jge
mov
enter
dec
sti
neg
mov
cmp
pop
outsb
out
arpl
pop
rclb
push
inc
adc
lea
in
fwait
cmp
inc
cmp
pop
dec
mov
out
and
sbb
in
cmc
not
sti
dec
cmp
jne
push
mov
dec
push
popf
or
xchg
pop
xlat
fisubl
lods
mov
add
inc
fists
sbb
push
outsl
sub
pop
mov
cmpsl
imul
pop
cmp
nop
jno
pop
push
push
and
arpl
hlt
repnz
sub
sti
push
dec
scas
out
or
mov
or
imul
inc
sbb
outsl
lods
shll
stc
cs
leave
ret
aam
add
stos
jp
mov
or
jb
pop
mov
inc
ljmp
mov
sbb
push
xlat
add
jmp
push
jge
lahf
and
movsl
xor
add
orb
pop
mov
shll
push
adc
sub
sti
dec
cmpsb
or
cwtl
rclb
rcrl
jo
lock
push
and
je
or
clc
mov
pop
xchg
mov
sub
test
pop
xchg
push
dec
jnp
add
pop
dec
shrl
mov
sbb
xchg
imull
outsl
xchg
pusha
jne
test
daa
fs
sbb
ss
xchg
aas
xchg
inc
xor
nop
rorb
dec
cli
mov
sbb
and
cmpsl
push
push
xchg
sub
jne
dec
mov
les
add
repnz
out
fdivs
dec
fstpl
popa
or
sub
mov
stos
push
and
lds
pop
lock
or
dec
pop
stc
fwait
jno
and
xchg
movsl
fimuls
pushf
cwtl
lahf
int
sbb
jno
orb
gs
dec
mov
fistpll
imul
addb
jo
pop
pop
fdivs
stos
pop
lea
jne
outsl
dec
subl
jg
arpl
outsl
jmp
and
add
dec
in
dec
push
loop
out
jp
lods
jmp
cmpsl
jne
std
loop
pop
aam
popa
test
and
cld
adc
sarb
lret
dec
jae
les
mov
mov
mov
inc
mov
cmp
inc
sbb
sbb
cmpsl
mov
pop
orl
je
jns
loopne
fimuls
dec
mov
mov
or
jnp
jne
jns
and
adc
cmp
fidivs
arpl
bound
in
push
std
mov
inc
sets
inc
jmp
gs
pop
lret
call
mov
xchg
hlt
or
in
pop
push
inc
bound
add
maxps
mov
adcb
xchg
and
push
dec
sbb
mov
je
pop
or
fildll
movsb
orl
xor
fwait
inc
lds
fwait
cmpsb
shrb
in
insb
xchg
cmpsl
stc
adc
lods
repnz
nop
ja
fimull
cmpsl
dec
pop
sbb
or
push
add
dec
stos
dec
and
xchg
cwtl
cmp
push
mov
into
cmp
repz
leave
jnp,pt
cli
mov
lods
sub
clc
popf
lcall
lea
sub
mov
mov
dec
rol
fucomi
jae
pop
ret
jae
ftst
jb
pop
xor
mov
ja
add
lahf
xor
xor
jae
or
jns
stc
xacquire
pop
fdiv
jnp
outsl
das
icebp
xor
mov
xor
and
xor
inc
jecxz
cmp
cmp
adc
ja
repz
jp,pt
repnz
mov
sub
dec
enter
scas
test
call
dec
pop
imul
push
sbb
es
jl
mov
nop
add
repz
nop
and
in
add
pusha
ret
jnp
sarl
xlat
mov
jb
out
push
mov
adc
push
xor
es
jb
arpl
fnsave
in
sbb
loop
daa
movups
add
inc
out
cmp
push
push
dec
adc
jmp
mov
cmp
scas
add
sub
outsb
sub
test
repnz
xor
xchg
push
lea
cmp
push
lret
leave
std
or
mov
push
out
addr16
inc
sbb
sub
or
pop
inc
cld
mov
sub
mov
mov
lock
or
shlb
push
add
mov
add
jle
push
mov
and
gs
in
arpl
push
cmp
stc
mov
and
nop
out
inc
das
fwait
adc
sbb
les
fwait
xlat
jae
sbb
out
in
add
lahf
pcmpeqw
cmp
int
arpl
xchg
incb
sbb
push
mov
xchg
fcom
jmp
cmp
mov
push
sbb
mov
mov
bound
aas
xchg
sub
jg
push
inc
push
dec
mov
dec
in
pop
xor
mov
cmp
sbb
adcb
jnp
ret
shr
test
add
lret
mov
mov
jnp
lods
cld
cld
outsl
mov
adc
out
xchg
add
idivb
jbe
repz
fwait
jp
div
lcall
dec
mulb
cmp
and
sarl
jbe
popf
in
jnp
popf
mov
insl
aam
dec
cmp
loope
cs
mov
arpl
enter
scas
ret
addr16
xacquire
adc
or
fs
inc
fcompl
push
into
pop
push
gs
dec
mov
stos
xchg
or
pusha
daa
and
pop
adc
cmp
jecxz
mov
pop
xlat
sbb
int
stos
and
scas
loope
imul
cmp
subl
cltd
dec
sub
aaa
and
jp
ret
and
cmpsl
fbld
ds
jmp
mov
ret
loopne
lods
mov
xchg
dec
imul
icebp
or
xor
pusha
enter
inc
mov
xchg
sbb
unpckhps
xor
mov
jo
jmp
repnz
aas
shl
pop
insl
decb
and
popa
or
shll
mov
xchg
je
fdivs
movsl
pop
pop
xor
dec
cmpsl
subb
inc
iret
scas
test
int
jle
ss
jp
test
sbb
ss
mov
pushf
sub
mov
shll
xor
fldlg2
insl
inc
pop
test
stos
test
aam
jge
lods
stos
rcl
inc
mov
lahf
imul
push
jle
cmpb
xlat
jbe
or
xor
std
pusha
inc
xchg
pop
jmp
push
out
shrl
xchg
fnstsw
lock
and
loopne
ds
shll
ja
push
loopne
int3
inc
fstps
sahf
aad
insl
jp
pusha
add
cmove
cmp
mov
jnp
je
push
pop
cmpsb
out
or
mov
testl
mov
sub
push
fdivp
std
mov
out
dec
pop
das
sub
pop
in
and
jbe
cmp
shll
inc
sub
sub
call
jnp
jmp
icebp
pop
rcrl
or
test
push
push
dec
and
push
sub
inc
push
and
pusha
fs
outsb
push
js
popf
jg
or
sbb
pop
loope
mov
or
xchg
ljmp
fwait
test
jns
add
jg
xlat
out
xchg
scas
movsl
cmp
test
and
mov
dec
rcrl
mov
sbb
pushf
adc
mov
hlt
testl
mov
int3
pop
pop
scas
ja
fxtract
ja
aam
cmp
push
jo
lods
xchg
adc
jl
cmp
jl
aam
aaa
xchg
or
mov
cltd
fiaddl
enter
pop
inc
fdivs
clc
outsl
aad
stos
sub
dec
mov
movl
mov
out
xchg
pop
adc
ss
ds
jp
cmp
inc
nop
incl
inc
rcl
jmp
pop
fs
stos
pop
int
out
pop
add
out
xchg
adc
xchg
dec
mov
fbld
or
scas
or
mov
les
sbb
loope
mov
repnz
mov
mov
orb
sub
add
cltd
scas
mov
aad
or
push
mov
pop
jns
pop
bound
or
add
ss
jecxz
mov
cmp
les
jp
pop
and
and
pop
cmp
or
idivb
add
das
hlt
call
sub
add
cmpsb
or
mov
pop
jo
sbb
adc
add
ds
jecxz
sarl
rorb
cmpl
or
mov
dec
or
lret
xchg
jmp
pop
xchg
popf
xlat
aaa
add
hlt
push
inc
popa
cmp
je
shll
inc
aaa
mov
in
fsubrl
mov
xor
mov
in
cmpsl
xchg
lock
mov
fdivrs
out
xchg
and
push
pusha
mov
mov
sbbb
mov
out
mov
rcll
fisubrs
inc
fcmovbe
pop
repz
scas
push
cltd
shll
nop
mov
icebp
inc
add
mov
daa
jne
aam
aas
call
stos
mov
ss
cmc
cltd
int3
psubd
pop
mov
dec
pop
scas
das
ret
jo
sub
or
mov
les
je
loopne
into
sbb
fsts
mov
push
dec
xchg
and
cmp
fdivs
pop
test
fldt
aam
adc
rolb
pop
lock
cmp
sahf
add
in
clc
jae
mov
xchg
pop
xchg
xor
xor
decl
jge
loopne
mov
push
sub
mov
push
int
test
and
sub
pop
inc
ret
clc
adc
inc
addr16
aad
out
bound
movsl
bndstx
arpl
inc
sti
dec
push
cmp
inc
bt
cltd
adcb
sbb
imul
adc
and
ret
pop
sbb
sbb
cmpb
imul
insb
rcrb
jecxz
inc
jg
into
fwait
mov
pusha
push
faddl
icebp
imul
add
cmp
mov
nop
nop
sub
call
or
sub
jae
and
mov
lret
ja
aam
pusha
sub
iret
adc
inc
repnz
jg
inc
js
adc
jo
xor
loop
sahf
adc
inc
push
xchg
test
test
enter
jl
mov
push
cli
shl
out
icebp
sub
shr
lods
lret
das
push
imulb
outsl
js
cmp
int3
mov
push
dec
push
out
jp
ficomps
aaa
ja
in
or
cmp
aaa
cmp
push
sbb
stos
sub
ds
out
iret
ja
scas
xchg
lahf
jbe
std
clc
push
sub
and
cmpsl
mov
daa
cmp
in
testl
and
fmuls
in
adc
jne
pop
pop
dec
and
inc
mov
xor
test
repz
sahf
add
test
imul
pop
inc
les
pushf
mov
aad
mov
mov
xchg
loopne
push
fcmovnb
mov
sub
push
mov
push
pop
mov
xchg
sub
rorl
pop
mov
cmp
test
mov
lods
push
aam
insb
lret
insb
inc
int
cli
mov
xchg
lcall
push
fisttpll
cmp
scas
and
lahf
jecxz
dec
xor
jmp
mov
mov
les
loope
filds
lahf
std
cld
cltd
mov
pop
inc
incb
pusha
fistpl
fmul
adc
fdivr
adc
daa
sarb
jnp
outsl
out
out
pop
shl
je
mov
pop
cmpl
inc
mov
lret
sub
jp
add
imull
push
mov
adc
in
pop
mov
xor
jp
pop
mov
icebp
jmp
jbe
inc
mov
fbstp
clc
inc
mov
pop
les
pop
leave
mov
mov
push
inc
adc
mov
lret
ljmp
push
enter
fsubs
dec
mov
jge
mov
sub
add
fldt
mov
mov
insb
ljmp
aad
dec
mov
dec
mov
fs
fs
in
jle
fidivs
adc
add
push
adc
lahf
outsb
add
or
pop
mov
or
mov
mov
rcr
lock
cmpl
bound
ss
xor
pop
jl
imulb
or
add
test
jbe
fisttps
lahf
add
sub
data16
adc
in
sub
jle
rcll
mov
xchg
jb
arpl
orb
jl
pusha
or
test
or
and
add
repnz
mov
movsl
in
mov
ja
xchg
xchg
fsub
xor
rcll
repnz
jmp
inc
xor
jnp
sub
into
push
sub
jg,pn
cmp
jecxz
push
es
pop
daa
outsb
cmp
repnz
cmp
sti
mov
xchg
sbb
fmul
ret
out
bnd
adc
jae
movsl
mov
push
push
sub
cmp
pop
lods
sbbb
xchg
inc
cli
add
push
pop
xor
mov
lds
mov
xor
into
sbb
sbb
scas
movsl
ja
stc
loope
xchg
cmp
xchg
sbb
xchg
gs
jecxz
fildl
mov
pushf
insl
repnz
push
cmc
cli
jnp
out
fists
ja
rcl
lret
pop
dec
cmp
xchg
xorl
pushf
and
je
sbb
lds
mov
and
das
scas
lock
dec
adc
lods
test
or
orl
sub
ss
mov
or
and
mov
mov
into
dec
mov
xchg
aam
loope
leave
popa
or
fdivrp
mov
nop
push
lahf
dec
push
push
jl
xchg
rcrb
les
xchg
push
stc
mov
or
add
sub
sub
daa
ret
push
inc
cmpb
xchg
andl
and
sbb
adc
mov
dec
fcoms
xchg
imul
icebp
dec
cwtl
enter
and
test
sbb
and
leave
jo
pop
and
pop
enter
ljmp
scas
dec
mov
iret
xor
cmp
add
and
pusha
pop
xor
mov
ds
pop
push
push
xchg
add
and
rorb
scas
jo
xchg
ret
in
sub
mul
sahf
icebp
fidivrl
pop
xor
adc
sbb
pop
adc
fwait
imul
cmp
push
inc
xor
aad
or
loopne
cmp
or
push
test
lret
daa
test
pop
push
and
outsb
test
add
loopne
jo
or
pop
nop
inc
test
inc
js
add
xor
dec
mov
repz
mov
lea
add
dec
dec
ret
in
in
dec
ficoml
sbb
dec
push
or
lea
jle
loope
xchg
jae
es
test
push
lea
push
push
adc
fcmovne
imul
add
adc
es
mov
mov
inc
inc
pop
inc
lods
push
cmp
and
jne
xor
in
sub
sub
popf
or
cs
lock
stc
sub
fs
fiaddl
adc
fs
fiadds
sub
data16
frstor
sub
dec
arpl
add
sub
adc
or
lock
push
push
mov
xor
push
cmp
xor
cld
or
notb
push
mov
mov
pop
psrlq
in
mov
jl
cwtl
test
or
imul
cmp
pop
add
outsb
loopne
ret
push
or
fwait
inc
push
sub
repz
out
jo
out
out
push
dec
xor
movsl
das
xchg
int
lods
aam
cmpsl
xor
icebp
xchg
outsb
mov
xor
jmp
and
adc
js
push
inc
sbb
push
cmp
add
jp
imul
sub
rclb
lock
adc
ret
sbb
loop
sahf
sbb
negl
ljmp
mov
and
cmp
stc
dec
ja
lods
repnz
sbb
xchg
cwtl
imul
into
movsb
dec
pop
pop
aaa
fdivrs
xchg
add
out
inc
xlat
aaa
or
scas
inc
add
in
out
std
insl
test
inc
sar
out
jo
out
push
int
add
call
jb
cli
dec
push
mov
out
sub
js
sub
or
fidivrl
stc
xchg
ljmp
cs
xchg
jo
pop
leave
js
sbb
mov
xor
stos
fs
jno
fldcw
or
mov
scas
clc
dec
sub
into
add
inc
fldl
xchg
scas
std
das
mov
and
cmp
xchg
mov
and
lods
jecxz
enter
and
fs
mov
das
dec
jb
subb
xor
xor
inc
jns
pop
add
inc
mov
sub
insl
ret
ljmp
insb
and
movsb
sti
and
test
shrl
adc
shll
ja
or
or
mov
mov
sbb
sub
add
fnsave
icebp
bnd
and
leave
hlt
fadd
fs
jl
and
cmovne
inc
les
xchg
lods
ja
pusha
add
test
enter
push
pop
cwtl
jns
mov
fisubrl
push
icebp
dec
stos
iret
inc
jp
sbb
jl
pop
lret
cmp
inc
adc
xor
dec
sub
jns
inc
jbe
testl
inc
push
das
cs
lea
add
mov
fbstp
pop
insl
sub
clc
dec
mov
cmp
inc
das
iret
cmc
rclb
pop
mov
xchg
dec
mov
sub
arpl
std
add
pop
pop
fsubrs
imul
gs
es
jne
ja
sbb
call
enter
xchg
fcoms
mov
push
cmp
lods
daa
fadds
adc
cmp
xchg
mov
in
jg
mov
cmp
xor
push
shlb
adc
out
psubsb
mov
dec
hlt
push
sbb
push
aas
and
sub
popf
aas
mov
das
and
sbb
dec
sbbb
aad
mov
sahf
jle
fcomip
in
or
xor
cltd
int
adc
cld
adc
xorl
xor
fiadds
popw
clc
orl
outsb
and
mov
jnp
sbb
jle
mov
adc
les
cs
push
mov
and
ds
das
je
push
fiaddl
add
movsl
int3
cmp
loop
mov
lods
cmp
out
das
iret
and
pushf
aas
daa
das
sub
mov
cs
addr16
sub
xor
push
lods
lcall
jg
cmc
mov
or
push
pop
les
push
bnd
mov
fwait
daa
jge
push
jbe
fcompl
mov
fnstsw
jecxz
jo
movsb
inc
mov
lock
ds
xor
out
adc
cli
addr16
inc
bound
cmp
xchg
int
sbb
mov
int3
andb
push
ret
sub
adc
stc
inc
fbstp
into
lds
jno
sbb
stos
xchg
dec
mov
rorl
jle
test
test
pushf
inc
iret
js
pop
fdivl
adc
mov
lods
dec
testb
movsb
mov
jecxz
dec
add
insl
and
dec
out
cmp
mov
jbe
push
mov
mov
mov
sbb
mov
into
notb
xor
xchg
nop/reserved
cs
aam
jge
mov
add
out
add
fcmovnbe
test
and
dec
gs
inc
or
les
inc
movsb
sub
xlat
or
sub
das
dec
rcrl
imul
loop
js
mov
fisttpl
stos
inc
ja
sbb
js
stc
add
mov
std
sbb
mov
enter
in
cwtl
mov
gs
mov
hlt
push
outsb
sub
scas
xchg
scas
std
or
mov
cmp
pop
mov
xor
ja
or
mul
pop
mov
inc
lret
mov
movsl
int
dec
jbe
xor
mov
mov
pop
push
int
add
adc
mov
adc
dec
xor
push
mov
mov
jle
insl
lcall
sbb
adc
jo
jnp
icebp
incl
das
sbbl
inc
dec
movsl
scas
jnp
mov
outsl
pushf
or
or
jecxz
pop
mov
dec
xor
out
fcmovnb
test
add
stc
in
cmp
push
loop
push
lret
adc
imul
js
mov
push
std
sub
sbb
dec
jno
ficoms
aas
mov
jg
imul
jns
or
and
jle
pushf
and
dec
sub
inc
jno
cmpsb
fmul
scas
add
mov
arpl
jb
ret
gs
cs
xor
test
or
sub
sarl
inc
jg
lods
aas
xchg
aam
jno
aaa
push
inc
cmpsb
sbb
cld
ja
getsec
inc
cmpsb
sub
pop
mov
sbb
fwait
pushf
fucomi
fs
dec
insl
xchg
ret
push
pushw
sub
mov
pop
mov
cmp
push
jb
push
call
out
dec
sub
pop
lock
pop
out
fsubrp
lds
mov
repz
inc
cmc
cmpsb
xchg
stc
or
lock
mov
call
ljmp
sub
fldenv
dec
add
sub
mov
dec
fs
pop
sub
sbb
cmp
arpl
xchg
xchg
das
cmp
pop
fdivr
or
popf
adc
in
jo
flds
cltd
jne
pushf
popa
repz
pusha
cli
rcl
imul
sub
push
xor
add
sbb
enter
add
ret
jp
add
mov
ffree
xor
xchg
xchg
nop
adc
icebp
rcll
pusha
or
daa
xchg
jmp
jno
out
xchg
sub
pop
ds
out
push
lock
jecxz
arpl
ret
mov
test
pop
out
outsl
lret
push
mov
pop
or
in
pop
lock
sbb
jne
clc
add
sub
out
arpl
fdivrs
fnstcw
ljmp
repz
je
jnp
inc
mov
pushf
add
jmp
xlat
or
jo
out
subl
push
movl
out
scas
neg
xchg
popa
call
add
loope
punpcklwd
mov
outsl
dec
cmp
xor
push
mov
inc
das
adc
or
cmpsb
aas
add
jb
dec
push
mov
mov
xchg
push
inc
jmp
xor
hlt
mov
sub
add
sbb
and
lahf
pop
int
mov
mov
inc
add
push
subl
or
lret
mov
inc
pop
cvtpi2ps
sbb
loope
lret
test
inc
mov
mov
jmp
mov
adc
inc
test
mov
adc
sub
xor
lahf
jp
pop
cs
mov
repz
pop
mov
dec
jl
icebp
inc
sbb
hlt
lea
mov
adc
js
stos
les
gs
ret
mov
lahf
dec
jnp
dec
shlb
and
adc
call
bound
push
shll
mov
lret
or
adc
fstpl
or
xor
bound
into
btc
xor
pop
dec
xchg
xchg
mov
gs
int
jns
push
push
cltd
pop
sub
dec
adc
push
jl
es
push
or
add
sub
or
fcmovnb
mov
sti
push
mov
push
outsb
in
in
ja
cltd
xorb
fdivrl
leave
dec
sti
inc
pop
jg
lret
movsb
push
aam
enter
stc
stos
add
and
stos
mov
jae
pop
push
lahf
xor
enter
fwait
rclb
jno
sti
in
icebp
adc
push
hlt
push
xchg
hlt
je
push
inc
cld
popf
hlt
mov
std
cwtl
xchg
xchg
stc
dec
and
mov
jg
sbb
push
das
shlb
mov
jle
dec
xor
push
lods
xor
out
insl
rcl
mov
and
sub
inc
fsqrt
frstor
pop
ss
push
sbb
incl
jmp
inc
pushf
pop
lea
xor
movsl
or
adc
mov
ret
bound
nop
jp
mov
sub
test
dec
jne
lods
aas
rolb
or
xchg
cmpsb
xchg
enter
je
jle
and
mov
scas
pop
add
push
in
scas
sbb
sbb
out
xor
inc
inc
pop
or
outsb
in
fnstenv
push
stos
dec
push
stos
push
inc
or
lods
ljmp
dec
gs
lahf
in
repz
shrl
loop
pop
mov
shll
jmp
add
mov
rorl
fbld
out
sbbl
push
sub
js
sbb
and
pop
popf
cmc
sub
sub
ret
push
dec
jns
loop
sub
enter
arpl
clc
sub
jb
stos
cmpsl
lods
lahf
dec
nop
mov
loopne
pusha
xchg
scas
clc
sbb
cmpsl
out
sbb
shrl
in
repz
popf
loope
daa
sahf
xor
or
mov
dec
out
xor
enter
xrelease
aas
dec
push
sub
add
jl
jb
mov
inc
dec
mov
insl
out
and
push
push
adc
pop
call
xor
mov
jl
popa
adc
and
mov
push
negb
inc
int
in
sar
mov
and
jg
mov
das
lea
xchg
and
pop
lods
std
xor
mov
inc
movsb
into
mov
cld
mov
add
inc
int
sbb
loopne
xor
shlb
aaa
stos
or
jbe
mov
inc
and
cmp
add
mov
out
jecxz
aas
incb
dec
lock
push
add
pop
fs
xor
pop
test
aam
cmp
popa
or
mov
inc
scas
inc
jmp
xlat
shrb
fs
fistps
in
dec
mov
fs
mov
mulb
dec
pushf
ds
and
enter
inc
jmp
cmc
lahf
inc
arpl
add
ret
mov
xor
addl
xchg
fwait
mov
sub
test
filds
xchg
decl
loop
xor
sub
in
inc
adc
mov
push
gs
pushf
repz
jl
jp
movl
xchg
stos
test
mov
mov
lret
sbbb
subl
mov
cli
cmp
jecxz
into
and
cltd
mov
add
arpl
call
jbe
pushf
neg
aam
sub
mov
push
and
out
add
and
jae
push
sbb
lock
and
xchg
xlat
cs
or
call
icebp
fcmovnb
lods
imul
mov
xchg
les
push
lea
sub
add
movsl
xorl
in
out
lods
mov
xlat
test
gs
sub
cld
add
or
test
dec
push
sbb
push
jl
add
push
shrb
jp
subb
cmpsb
cmp
jbe
std
jmp
mov
mov
sbb
xchg
or
cs
jb
addr16
jl
mov
sahf
push
jb
pop
xchg
sahf
mov
jp
lea
inc
jmp
push
mov
sti
leave
std
negl
jge
add
xor
insb
ljmp
jp
popf
popa
test
and
inc
lds
stos
xor
mov
in
lret
leave
jbe
ficoml
aaa
add
pop
jecxz
xor
clc
repz
sbb
mov
jae
push
cmp
hlt
enter
sti
lods
sub
cld
pxor
out
jnp
movsl
add
cltd
push
cmp
lret
cs
jmp
ss
popf
insl
aas
int
and
lea
jo
sti
adc
pminsw
sahf
pop
mov
inc
inc
cmpsb
inc
loope,pn
mov
dec
outsb
data16
sub
lock
xchg
mov
ds
add
pop
inc
ret
out
cmp
aam
mov
ret
add
mov
add
adc
cmpsl
in
enter
lret
inc
sub
dec
adc
add
out
fwait
xchg
xchg
les
icebp
dec
mov
xor
add
ret
sub
xchg
sub
lret
adc
test
sahf
mov
mov
or
fwait
movsb
inc
sbb
sub
in
mov
push
cmpl
in
inc
sub
jecxz
sub
xchg
xor
mov
jecxz
adc
repz
data16
ss
sbb
into
out
xchg
clc
sbb
dec
js
xchg
gs
int
sbb
mov
cmp
cmc
insl
push
scas
or
ds
jns
sub
insb
sbb
or
sbb
nop
sub
xchg
and
iret
cmp
xchg
data16
repz
xor
jnp
mov
cmp
dec
mov
pop
xor
sub
lahf
adc
push
pusha
lods
lcall
jne
dec
int
lods
daa
sbb
mov
lret
lea
or
mov
lea
mov
ret
icebp
aam
mov
aam
outsb
dec
pop
enter
inc
lods
das
sbb
inc
or
cmc
dec
adc
cmp
xor
aam
mov
add
dec
add
jnp
pop
mov
scas
xor
shl
fstp
das
xchg
push
jp
test
insl
pop
mov
pop
ret
push
lea
mov
pop
dec
enter
das
xor
out
sbb
lret
mov
jmp
loope
ljmp
push
fnstcw
stos
mov
and
pmaddwd
in
sbbl
lds
and
cld
jnp
jecxz
dec
add
aad
mov
lock
fdivr
nop/reserved
adc
int3
test
push
pop
push
call
mov
push
jl
repz
out
dec
lea
cmpsb
inc
add
std
int
push
mov
dec
mov
jl
pop
xor
mov
mov
cli
bound
adc
push
xlat
xor
clc
adc
xchg
mov
call
or
inc
stos
sbb
pop
movsl
cmpsl
jge
xchg
outsb
mov
adc
scas
fbstp
lods
and
and
xchg
sbb
push
jg
sub
xchg
pop
insl
fists
sti
add
frstor
xorb
cmpsl
mov
in
lock
inc
add
lds
es
and
push
jg
xchg
mov
inc
inc
push
xchg
lods
pushf
pop
and
cli
cmp
jp
xlat
xchg
jmp
aaa
loope
add
mov
mov
pop
inc
lds
cmpsb
std
nop
mov
stos
jnp
sbb
adc
loop
incb
es
cwtl
xchg
dec
jne
dec
in
push
cld
icebp
xchg
arpl
daa
out
mov
cmpb
out
ret
sti
jno
jle
jae
and
dec
sbb
pusha
cmp
pop
dec
ret
sub
cltd
xchg
mov
testb
movsl
sub
sbb
enter
sub
jbe
push
jge
xor
outsl
iret
and
adc
int3
add
pop
sub
jle
pop
mov
push
lcall
pusha
cwtl
mov
cmp
add
in
cmp
mov
loop
dec
cmp
mov
fwait
arpl
je
and
test
lret
jne
dec
pop
aad
test
nop
mov
imul
inc
sbb
push
outsl
xor
add
pusha
dec
adc
sbb
cmpsb
mov
inc
jnp
and
dec
clc
ret
imul
loope
js
inc
sti
jae
mov
and
fs
cmpl
imul
jp
movsb
movzwl
or
movsl
sbb
pxor
hlt
jne
inc
mov
loop
jb
aas
lock
lahf
std
pop
jno
sti
mov
ljmp
nop
push
lahf
cmp
jmp
scas
lcall
out
add
jns
xchg
ja
leave
adc
out
adc
mov
xchg
cli
les
mov
adc
popf
xlat
sub
out
cmpsb
ljmp
cmpsb
mov
repz
or
push
aas
push
clc
clc
enter
std
mov
push
mov
dec
xor
fadd
mov
mov
mov
pop
ljmp
xor
xchg
jecxz
add
lea
add
dec
dec
jg
cmp
pusha
stc
fstps
pop
ror
xor
mov
mov
movsb
xchg
jbe
in
and
ds
inc
sahf
js
mov
mov
push
andl
mov
push
jns
pop
mov
jl
push
and
jecxz
mov
sahf
pop
cltd
jle
xchg
cmp
sbb
mov
loop
cs
scas
lcall
mov
mov
in
adc
stos
add
inc
pop
fmuls
xcrypt-cbc
cmpsl
push
and
xor
sarb
xor
add
arpl
fwait
rorl
pop
loop
jl
push
cmp
and
fildl
ret
fisubs
fdiv
jp
pop
xchg
xor
mov
shrb
mov
push
jbe
inc
cltd
lcall
jl
test
inc
in
inc
mov
in
inc
xchg
mov
push
imul
dec
movsb
jno
fistpl
clc
dec
jle
mov
iret
pop
stc
shlb
mov
test
pop
inc
push
test
pop
cmp
jb
sbb
ja
ds
mov
shlb
jg
mov
jbe
enter
or
nop
mov
in
mov
sub
add
add
mov
popf
dec
loop
in
mov
repnz
stos
sub
cmc
sub
add
mov
adc
enter
dec
rorb
shlb
mul
xor
sahf
movsb
testl
sbb
test
insl
sbb
aad
sub
mov
movsl
sbb
cmp
cmpb
rorb
enter
aam
sbb
bnd
add
pop
shrb
into
fcoml
pusha
dec
mov
mov
pop
jns
push
stos
jns
push
sbb
add
data16
push
roll
std
mov
jp
xchg
mov
fbstp
jnp
repnz
lahf
stos
pop
out
dec
and
xchg
divl
cmc
mov
mov
addr16
xorb
movsl
scas
movl
ds
sbb
clc
cmp
stc
lret
push
popf
push
jmp
push
data16
add
mov
adc
rcr
test
rclb
dec
lea
ss
stos
cmp
mov
add
movsb
adc
inc
cli
mov
sbb
lock
mov
sahf
adc
outsb
sbb
inc
jle
inc
xchg
pop
movsl
enter
insb
and
test
push
and
es
mov
repz
sub
dec
sub
jge
je
outsb
pop
pop
add
loopne
adc
or
adc
js
mov
clc
add
jmp
out
leave
jne
cmp
ja
pop
or
int3
ja
stc
xchg
mov
ds
repz
mov
push
in
lds
and
xchg
cmpl
pop
inc
lea
mov
xor
lahf
dec
jp
mov
lods
xor
lret
mov
add
int
pop
dec
mov
jmp
inc
mov
out
jge
lret
fidivrs
push
cltd
pop
test
dec
rorl
and
leave
sarb
lret
xchg
das
addr16
lods
mov
test
adc
pop
out
mov
dec
mov
mov
mov
fdivl
cmpsl
cs
repnz
xchg
pop
call
pushf
inc
inc
icebp
movsb
cmp
dec
aaa
dec
enter
addr16
insl
push
test
xchg
xchg
addr16
dec
and
or
inc
xlat
rcrl
int3
xor
les
in
bound
jne
pop
lahf
add
leave
xlat
imul
aad
call
stc
adc
rcl
mov
mov
into
lods
xchg
jmp
fdivp
lds
or
and
addr16
cmp
int3
daa
test
adcl
xchg
mov
cwtl
insb
cmc
out
pop
inc
cmp
std
cli
sbbb
stos
popf
mov
lods
mov
jae
mov
xchg
cmp
pop
data16
mov
inc
add
es
aad
jle
jp
or
in
icebp
mov
das
dec
adc
movsb
push
movsl
xchg
leave
xor
ss
and
arpl
sbb
pop
repz
fcomps
inc
iret
inc
lcall
sub
pop
mov
mov
out
add
mov
lret
adc
xchg
sbb
jle
outsb
pop
aaa
push
scas
enter
pop
call
push
jg
or
or
sub
aas
mov
lds
and
rclb
cli
es
fmulp
mov
sbb
movsl
dec
div
popf
jmp
or
jbe
ljmp
sub
mov
roll
adc
test
push
popf
pop
arpl
mov
jns
iret
icebp
dec
and
jmp
inc
hlt
jae
into
inc
and
adc
lret
jl
pop
out
pusha
dec
loopne
rcl
shlb
movb
mov
ds
cwtl
into
out
test
jnp
xor
lods
imul
sbb
cmp
shr
mov
cmpsl
or
adc
clc
sub
fbstp
mov
or
pop
cld
and
movsl
into
jne
cmp
inc
cmp
std
adc
aas
xchg
push
adc
sbb
inc
push
xor
or
dec
lahf
push
out
jle
xor
push
pop
mov
jmp
xchg
sbb
movsb
imull
jle
mov
mov
mov
cmp
movsb
lods
clc
sti
icebp
cmp
jg
ror
xchg
adc
outsb
xchg
arpl
hlt
cmp
mov
inc
sbb
mov
cld
cmp
test
jge
outsb
roll
mov
ja
iret
dec
sbb
adc
push
stos
cmp
xchg
sbb
or
pop
jg
out
or
lds
lcall
xchg
pop
into
sub
pop
adc
jo
aad
mov
jp
sub
push
lods
xor
cmp
ss
stc
push
cli
sbb
mov
adcl
or
xor
cmp
shrb
shll
sub
sub
add
jp
lret
imull
lods
pop
jnp
mov
push
out
cwtl
shrb
cmpl
imul
js
mov
sub
mov
popa
popf
adc
scas
push
int
jle
dec
int
or
push
mov
cmpsl
pop
icebp
inc
pop
mov
test
cld
stos
sbb
mov
xlat
push
adc
push
or
jmp
int3
pop
clc
sub
sbb
xor
out
out
jecxz
test
cmpsl
inc
jl
lds
popa
push
imul
in
das
movsl
sub
dec
xchg
and
movsb
daa
loop,pt
cli
rcrl
or
test
pop
mov
hlt
cmp
gs
sbb
jno
loopne
pushf
mov
cs
test
xchg
insb
movsb
loop
cmp
xchg
std
dec
pop
test
pop
scas
inc
aam
je
jge
stc
loop
jnp
fdivrs
dec
mov
dec
mov
mov
dec
daa
shl
int
ss
xor
cmp
inc
push
ljmp
lea
jle
cwtl
mov
inc
xchg
adcb
sarl
push
inc
add
sbb
adc
repnz
add
push
or
mov
sub
je
notb
scas
sub
inc
and
lahf
data16
cld
loop
cmp
push
mov
in
je
jno
sbbl
mov
loop
sbb
sbb
xchg
call
push
clc
lock
sbb
cld
mov
imul
call
pushf
arpl
rorl
andl
dec
leave
lret
outsl
adc
pop
pop
dec
push
out
cmp
sub
in
fadds
and
mov
adcl
inc
jo
lods
hlt
rep
pusha
inc
test
add
jo
leave
push
or
test
or
stc
aas
shll
pop
lock
cmp
aas
cmpl
push
jp
push
inc
and
pop
leave
push
stos
leave
cmpsb
sub
pop
jns
push
adc
mov
dec
and
ss
orb
insb
xchg
sbb
xchg
fs
cmp
jecxz
pop
outsl
jno
jno
xchg
jno
pop
inc
orl
jl
xlat
mov
fucomi
mov
jle
jo
jl
sbb
dec
xchg
mov
mov
mov
add
into
mov
add
sbb
cmp
loopne
test
hlt
mov
mov
xchg
mov
xchg
pop
mov
repz
cltd
push
sbb
int
in
fists
push
adc
cmpsl
cmp
and
ret
inc
sahf
andl
divl
sub
dec
jp
adc
popa
fsubs
dec
jp
cmp
xlat
outsb
fs
sbb
mov
cmp
add
inc
fistps
and
adc
dec
push
mov
mov
sahf
in
push
or
jb
mov
xor
jo
mov
xor
xor
push
mov
addr16
sub
dec
ret
inc
mov
outsb
ret
test
jecxz
mov
mov
js
mov
leave
shlb
insb
fdivp
inc
pop
jne
sbb
ja
push
xorb
push
pop
push
xchg
and
fldenv
mov
cmovns
mov
xchg
lahf
mov
outsl
pop
lret
into
clc
lahf
cmpsl
dec
pop
sub
fmull
fisubrs
lods
dec
sti
imull
in
cld
ljmp
mov
dec
and
sub
cmpsl
add
cmpb
and
fidivrs
iret
sub
jecxz
jns
orl
aam
clc
push
jmp
xchg
mov
mov
dec
fists
stos
imul
ds
jnp
inc
outsl
and
arpl
arpl
push
frstor
addr16
arpl
sbbl
mov
jbe
add
xchg
repz
push
xchg
imul
inc
mov
or
xor
mov
rcl
cmpsl
nop
insl
imul
fcmovnu
insb
xchg
in
pop
sbb
and
cmp
cmc
movsl
test
sub
push
ljmp
mov
lahf
mov
in
jge
mov
cmp
inc
mov
rcll
mov
int
popf
add
sbb
mov
repnz
test
pop
push
stos
loope
sbb
cmp
add
nop
xchg
add
outsb
add
arpl
or
jg
lock
jbe
fsubrs
sub
mov
enter
iret
add
dec
or
inc
in
adc
cmp
mov
add
jnp
addb
mov
insb
mov
dec
lods
fdivrs
sbb
setb
sub
or
fpatan
fstpl
jns
push
sahf
divl
test
arpl
and
add
jmp
xchg
fnstsw
dec
int
cmp
mov
cld
pop
jecxz
testl
lret
jo
push
mov
sub
out
and
stc
push
sbb
fucomi
gs
andb
mov
xor
test
jl
xor
shrl
push
and
shll
sub
roll
out
push
or
or
sarb
pushf
dec
mov
push
xchg
cltd
dec
outsl
rorl
xorb
dec
cmp
mov
notl
fmull
addr16
push
outsb
cmp
js
adc
fisttpl
hlt
cmp
pop
add
add
sub
leave
push
pusha
or
shr
cld
imul
sbb
and
xor
cmpsl
insb
orw
add
daa
cltd
out
gs
out
push
pusha
sub
fimull
imul
lods
jno
fs
pop
cmp
ret
es
shlb
mov
jp
push
mov
fwait
cmp
mov
cmp
js
jnp
lret
call
inc
fwait
in
mov
repnz
add
dec
adcl
out
mov
loop
arpl
imul
inc
xchg
and
sbb
fisubs
xchg
cmp
add
cs
adc
mov
inc
add
sbb
scas
clc
push
dec
push
mov
xchg
dec
xchg
push
xchg
in
and
cmpsl
fisttpll
adc
mov
xor
lods
mov
pop
je
call
and
push
or
dec
xchg
and
lea
pop
jle
jg
jae
stos
jg
mov
iret
sub
xchg
das
data16
sub
fcomps
mov
mov
or
mov
lods
clc
cmp
fmul
aam
pop
cmp
pusha
xchg
iret
nopl
xor
jns
mov
push
adc
test
inc
std
sub
pop
les
jl
aaa
push
pop
fsubrp
gs
ret
fldenv
outsb
mov
sub
mov
nop
lret
pop
cwtl
rcr
pop
rolb
adc
jmp
nop
sbb
xchg
mov
inc
pop
push
clc
gs
and
mov
push
and
sub
inc
mov
cmp
xchg
fucomp
imul
shl
sahf
pop
jle
popa
shlb
push
xor
cltd
cmpsb
fld
pop
ljmp
mov
pop
xchg
pop
mov
push
cmc
ds
dec
mov
xor
xor
or
mov
adc
dec
mov
je
dec
xor
stos
cs
test
inc
mov
loope
nop
pop
mov
pop
fdivrl
pop
arpl
enter
pop
add
or
pop
push
add
sti
mov
and
out
sbb
jbe
xlat
call
loope
movsl
stos
pushf
lods
jno
sub
std
scas
cmpsl
jne
dec
lea
sbb
xchg
jle
pop
and
dec
sahf
mov
mov
lds
ds
xchg
outsl
ret
lret
cmc
es
cwtl
lahf
sbb
mov
xchg
imul
outsb
out
sub
hlt
retw
out
mov
addr16
or
sbb
fdivrl
mov
push
test
nop
rorb
test
aaa
cmp
sarl
insb
push
stos
pop
mov
fs
mov
cmp
cmp
outsb
mov
sub
retw
ljmp
mov
loop
push
pop
xor
push
addr16
jg
into
inc
cltd
xchg
mov
jg
fldcw
sub
jae
mov
mov
xchg
cmp
fnstcw
and
jne
xor
popf
jge
xor
jnp
mov
bound
add
arpl
mov
push
sub
stc
out
adc
ret
dec
imul
movsl
jns
lds
jnp
aad
mov
movl
lock
test
xchg
jns
cltd
pop
int
dec
mov
add
rcl
repnz
scas
repz
push
add
pmulhw
cld
loop
out
nop
cmp
popf
ret
sbb
xchg
pop
decb
imul
add
out
jo
cmpsb
mov
or
mov
cmovp
jmp
test
scas
jl
add
mov
adc
inc
imul
push
andl
jle
mov
rorb
int
outsl
adc
test
lea
dec
arpl
stos
fdivrl
push
pop
jb
xchg
jnp
push
sub
scas
mov
add
dec
scas
lret
sti
cltd
cmp
faddp
fidivrl
mov
sub
pop
out
lds
lods
sbbl
fcomps
adc
xlat
adc
clc
jo
in
push
cwtl
ja
inc
cmpl
dec
js
add
int3
fists
lods
ljmp
insb
outsl
inc
push
pop
add
les
test
les
mov
pop
xchg
cmp
push
pop
in
push
pop
and
mov
adc
notb
pop
adc
xchg
out
jno
jnp
call
icebp
pop
inc
nop
in
adc
pop
mov
push
adc
add
pop
fidivrl
xor
fstpl
sbb
cmp
cmc
aaa
addr16
xor
mov
addb
aam
ljmp
and
mov
adc
jbe
xchg
cld
pandn
jnp
mov
jns
mov
cltd
add
sbb
xchg
clc
and
or
or
add
xchg
adc
nop
inc
mov
shll
jp
xchg
or
add
dec
ja
negl
cmpsb
cmp
out
repz
mov
mov
lds
or
sbb
xchg
out
cs
push
iret
mov
add
jmp
divl
add
xchg
scas
xor
daa
imul
pop
shll
addr16
xchg
int3
mov
and
pop
and
mov
add
ret
lcall
jecxz
ret
sbb
fcmovnu
in
mov
add
ds
imul
movsb
cltd
je
fidivrl
push
push
jge
adc
mov
mov
mov
stos
dec
leave
fmulp
xchg
out
cmp
pop
dec
cmc
imul
xor
popa
lcall
in
jg
and
or
and
int
mov
mov
push
ficoml
push
cs
icebp
lret
fildl
xchg
xchg
push
shll
dec
cmovno
xchg
sti
dec
mov
das
stc
xor
lock
es
in
add
test
xor
mov
cmpsb
lock
pop
add
imul
jmp
add
les
test
mov
mov
in
loopne
jmp
pop
lds
cmp
loopne
mov
out
ja
push
inc
push
aaa
into
lds
addb
jbe
adc
push
mov
ss
pushf
or
inc
or
push
xor
shl
sub
cmp
test
push
push
mov
neg
lret
or
jne
daa
mov
outsb
mov
ds
sbb
aaa
jecxz
in
cmp
mov
cltd
or
pop
mov
ds
xchg
mov
aas
stos
ficoml
ss
std
and
lock
fdivrs
mov
pop
pop
repnz
lret
arpl
fidivrs
mov
mov
mov
inc
pop
pop
cmpsb
imul
push
dec
sub
mov
stos
fcompl
sub
repz
sub
in
sbb
mov
ds
subb
cmp
adc
pop
test
fsts
adc
xchg
mov
lcall
cmp
push
mov
jecxz
bound
sub
imul
nop
adc
cmp
pushf
push
out
out
lcall
jmp
pusha
idivb
in
sti
jg
mov
pusha
or
xor
addr16
sbb
xor
test
sub
push
or
in
mov
mov
mov
xchg
add
mov
int
jecxz
jnp
sub
sbb
pop
push
test
sbb
adc
mov
mov
jb
mov
push
dec
fldl
inc
xor
shll
xchg
out
stc
sub
xchg
movsl
gs
pushl
push
sub
push
push
gs
xchg
loope
movsb
push
and
dec
xchg
sbb
adc
sahf
mull
xor
fdivr
push
or
arpl
sub
xchg
cmp
mov
inc
sbb
test
sbb
scas
daa
rorb
mov
test
lods
loope
xchg
fstpl
jle
sbb
shll
in
lret
lods
mov
pop
jle
sub
in
cld
js
sub
pop
cmp
push
in
jbe
mov
mov
cmp
pop
inc
in
ja
in
repz
lret
inc
fstl
dec
js
mov
test
push
loopne
icebp
jne
mov
jne
scas
push
inc
mov
cmp
sbb
cmpsl
sub
cmp
imull
and
xor
hlt
inc
inc
sbb
add
dec
sub
cmp
mov
mov
int3
sub
xchg
jge
repz
incl
enter
mov
cmp
sub
mov
mov
stc
xchg
ss
scas
adc
sub
sub
jb
incb
xchg
jg
cli
mov
inc
cld
mov
loop
test
xor
push
std
dec
push
out
insb
push
ret
sbb
leave
xor
push
dec
ss
cwtl
lret
push
xor
jp
pop
scas
in
ret
cltd
jg
push
test
mov
aaa
cmp
pop
and
popa
ret
sub
and
jbe
stos
mov
mov
or
xchg
sti
shll
mov
inc
push
es
iret
test
leave
xor
lods
mov
hlt
push
lea
adc
loop
fmulp
pushf
into
data16
rol
jae
negb
mov
adc
leave
push
xchg
fistl
mov
or
cld
test
cmp
jge
lds
repz
cs
pop
and
addl
pop
mov
dec
adc
fimull
or
out
sub
sbb
lcall
dec
pop
out
mulb
enter
inc
cmp
and
loope
cmp
pop
xor
adc
mov
push
frstor
mov
daa
cmc
clc
test
ret
add
bound
shll
mov
rcr
pop
int3
inc
test
pop
in
jl
cmp
mov
sub
xor
sub
iret
jp
xor
inc
push
xchg
popf
jge
mov
scas
jns
icebp
andl
jl
leave
inc
sbb
out
mov
shll
sbb
mov
and
push
std
xchg
pop
notl
jo
mov
adc
fsub
scas
cmp
test
add
shrb
into
imul
xchg
jecxz
ja
fidivl
ja
cld
and
mov
sbb
inc
fcmovnb
in
mov
mov
test
inc
mov
mov
rorl
adc
cmp
js
and
lock
sub
push
sbb
xor
pop
into
push
roll
hlt
cmc
std
cmp
lahf
shll
mov
jecxz
movsb
dec
push
jmp
add
cmc
mov
pop
mov
add
xor
loop
mov
dec
and
ret
sbb
dec
or
xor
cmp
andb
adc
sbb
outsl
sub
addr16
adcl
sub
push
cli
mov
sbb
arpl
js
pop
inc
imul
cmpsl
stc
push
sbb
shrb
aam
das
or
inc
test
add
fistps
xchg
sbb
inc
add
popf
scas
scas
jmp
mulb
imul
sbb
inc
pushf
call
xor
dec
stc
push
push
sti
push
inc
push
insb
outsl
test
mov
pop
sub
test
mov
mov
data16
mov
orl
adc
pcmpgtw
test
hlt
cmpsl
xor
jo
jnp
fwait
mov
push
xlat
pop
lret
push
pop
es
leave
ja
icebp
cltd
jne
fnstsw
sbb
jno
loop
popf
xorb
out
mov
shrl
inc
mov
das
decb
xor
test
dec
fchs
jle
psubusw
pop
and
fldcw
or
jnp
pop
mov
push
cld
loop
pop
ret
cli
test
icebp
jmp
mov
and
mov
std
imul
aad
cltd
into
sbb
xchg
out
outsl
cmpb
mov
hlt
push
jne
aas
pop
in
xchg
int
addl
add
dec
pop
cmc
cmp
jnp
cmc
lods
aam
scas
mov
lds
jle
fistps
or
repnz
hlt
fists
gs
idivl
inc
clc
jmp
sbb
xchg
mov
xchg
andl
jb
out
daa
out
iret
imul
mov
outsl
mov
arpl
xchg
sbb
daa
ja
jae
leave
pop
inc
push
inc
push
jmp
adcb
cmpsl
clc
sahf
add
in
mov
jbe
sbb
add
sbb
jp
out
repz
lcall
test
sub
cltd
pop
bound
or
push
add
dec
or
mov
addr16
or
les
fidivs
movsb
fsubrl
mov
jnp
nop
mov
imul
add
mov
mov
pop
mov
push
jg
outsb
jae
xor
rclb
and
and
int3
cmp
push
push
mov
addb
out
lock
adc
stc
inc
pop
mov
mov
in
or
test
cmp
inc
jp
or
fldcw
enter
mov
push
pop
das
fsubr
testl
push
outsl
or
mov
lods
mov
mov
push
mov
add
sbb
lret
push
jne,pn
outsl
mov
xchg
push
mov
or
xchg
push
dec
sti
push
xchg
dec
jno
and
int
xor
dec
out
fistps
xor
mov
xor
push
fwait
je
push
inc
xor
jg
test
mov
sbb
cltd
push
mul
int3
mov
mov
mov
nop
xchg
or
sbb
nop
ds
js
push
push
dec
and
sbb
std
xor
mov
std
inc
add
xor
test
adc
adc
adc
xor
jne
and
pop
mov
sbb
push
data16
int3
stos
ds
cmc
and
test
mov
sbb
xor
icebp
push
sbb
xor
xor
adc
test
fsubr
fmul
push
sti
lcall
lcall
xlat
push
bnd
gs
cmp
pop
and
mov
rcl
dec
pop
dec
cld
or
pop
inc
add
rcll
adc
mov
cmp
pop
mov
mov
add
mov
lods
mov
pop
ja
pop
ss
movsb
xchg
bound
sti
testl
int3
mov
xor
push
mov
fcmovne
sub
xor
or
xor
mov
movsl
push
xchg
insl
xor
stos
mov
mov
push
push
xchg
or
jl
outsb
movsl
inc
outsb
mov
fsubs
xchg
cmp
xorl
pushf
jo
jp
sbb
mov
js
out
pop
inc
fst
int3
push
in
imul
sbb
js
int3
fmul
push
push
and
popa
xchg
mov
xlat
cmpsb
mov
jnp
xlat
rolb
out
hlt
aas
pop
ss
pushl
lods
pop
lret
push
vmovmskps
push
inc
lret
push
mov
xchg
xchg
mov
sub
sub
out
cmpsl
sti
in
sbb
fsts
aas
dec
and
cwtl
add
sub
adc
or
inc
rolb
push
mov
outsb
inc
sbb
mov
imul
or
mov
scas
add
dec
push
ret
sbb
daa
jmp
roll
sbb
ret
mov
out
pop
ret
test
xor
aad
jg
pop
sti
mov
shl
mov
jmp
jecxz
jae
lret
jge
add
scas
pop
insl
mov
lds
xor
adc
sub
shrb
cmc
stos
enter
mov
or
jle
pusha
ret
jo
into
in
pop
pop
push
or
and
test
push
and
or
xchg
in
movsb
mov
mov
sub
push
pop
push
mov
push
sahf
mov
sbb
jge
sub
jmp
aam
or
iret
dec
mov
ja
ss
pop
pop
adc
sbb
loope
mov
shlb
loop
stc
push
pop
ds
pop
xorl
inc
dec
and
mov
pop
mov
js
xchg
nop
push
dec
dec
inc
and
push
incl
je
xchg
jno
add
xchg
shl
fistpl
dec
push
and
mov
or
sbb
cmp
xor
loope
addb
xchg
and
shrb
xchg
lds
xchg
notl
std
lret
lods
insl
xor
xchg
mov
fidivrs
push
sti
mov
ja
fimuls
cltd
push
imul
lcall
sub
lcall
xchg
rcrl
pop
push
fists
push
bound
inc
inc
iret
and
inc
push
roll
push
jb
add
loopne
inc
aaa
pop
fsubl
or
loope
stos
mov
in
mov
lret
out
clc
mov
mov
add
shl
dec
outsb
mov
in
int
dec
jl
cmc
dec
pop
inc
xor
mov
and
add
leave
push
pop
gs
bound
mov
adcl
cmc
jo
jmp
cmp
push
add
es
lods
add
and
xchg
daa
fistps
ljmp
sbb
and
repz
mov
dec
or
pop
scas
stos
dec
push
add
and
movsl
mov
xor
in
lret
mov
pop
repnz
jns
cmp
inc
dec
lcall
sbb
out
lods
mulb
fcomps
xlat
mov
cmp
pop
adc
fsubrs
push
mov
push
pop
lods
rcrb
scas
push
out
loopne
pop
cmpsb
loop
and
dec
fadd
cld
mov
mov
sub
int3
jmp
adc
ret
enter
daa
ljmp
jmp
push
das
aas
sbb
inc
xchg
test
jo
xchg
hlt
or
mov
bnd
fiaddl
cmp
test
cmp
fs
add
shlb
adc
iret
push
jnp
pop
push
call
sbb
out
daa
ds
ret
cs
pop
ret
data16
sub
jb
enter
mov
push
cmpsl
push
mov
and
das
popf
xor
mov
xorb
loop
pop
scas
mov
jbe
cmp
xor
jge
xor
mov
jb
push
vmulps
cmp
fidivrl
jb
sar
lret
fdivl
cmp
push
pop
jecxz
and
xchg
cmp
sbb
adc
xchg
fsts
jae
ljmp
stc
fwait
jns
js
jg
stos
and
mov
push
sbb
fnstcw
fisttpl
mov
lret
bound
jno
xchg
mov
cmp
iret
int3
icebp
cltd
jge
xorl
repnz
loopne
cmc
add
in
sub
xor
mov
in
or
push
inc
sbb
in
mov
jnp
push
xchg
jge
sub
pop
fdivs
hlt
sti
push
gs
mov
or
or
jnp
lret
lcall
out
shl
mov
sub
loop
push
add
mov
inc
sahf
xchg
jo
pop
inc
mov
jo,pn
jp
inc
push
daa
insb
dec
scas
jmp
rolb
xor
test
fistpll
hlt
cmp
mov
imul
shlb
icebp
sahf
sub
inc
jno
sbb
mov
test
jmp
dec
sbb
insb
aam
scas
jl
test
clc
xor
pusha
iret
fptan
int3
xor
scas
pop
int
push
repnz
mov
lds
or
adc
cmp
mov
xchg
push
or
xor
lea
cmp
aad
cmp
xchg
mov
adc
jp
repnz
xor
or
std
scas
je
mov
in
xor
shlb
movsl
cmp
push
les
stos
shl
int
push
pop
pushf
jle
rorb
push
cmpsl
mov
clc
les
jnp
push
cmpsl
push
mov
sarb
xor
out
push
mov
pop
adc
aam
push
in
xor
or
and
push
mov
inc
pop
lret
push
imulb
mov
jl
frstor
xchg
outsl
xchg
clc
arpl
out
shlb
mov
push
sbb
mov
xchg
sub
fistpll
lea
sub
dec
or
cmp
dec
push
dec
pusha
pop
push
int3
fimull
fldt
stos
cld
pop
outsl
or
out
imul
inc
mov
outsb
pop
icebp
lret
ja
xchg
push
mov
test
mov
adc
sbb
mov
dec
out
sbb
cli
inc
nop
out
inc
pop
loopne
popa
mov
fsubrl
xchg
std
adc
push
or
loop
lock
pushf
cmp
and
insb
lret
fists
sti
adcb
int
inc
sbb
loop
sub
sub
fidivl
aaa
pop
cmp
sbbb
jecxz
and
jmp
inc
dec
out
xchg
mov
or
sub
or
mov
outsl
sti
dec
outsb
test
sub
xchg
les
and
test
scas
out
in
adc
movsl
setno
xor
jle
ss
popf
jl
repnz
mov
mov
repnz
mov
sub
cmpsl
inc
pop
fiadds
add
orl
push
rolb
dec
sbb
dec
pop
fs
out
in
popf
sub
xor
sbb
mov
xchg
int3
shrl
outsl
and
mov
inc
dec
push
push
nop
mov
loope
clc
cmp
push
out
leave
data16
leave
pop
mov
int
icebp
std
stc
or
inc
cmp
cltd
mov
lods
mov
aas
mov
loope
test
ljmp
cmp
mov
nop
pop
mov
pusha
test
fbld
movsl
pusha
lret
xor
cld
xchg
mov
inc
sbb
test
mov
scas
lret
rorl
push
mov
sub
shll
inc
imul
repnz
lret
dec
jno
in
lds
xchg
dec
loope
int
sbbl
inc
and
nop
gs
shrb
cmp
mov
fwait
jp
pop
pop
rclb
adc
push
je
xor
push
nop
std
je
icebp
mov
stos
leave
orb
sub
xor
xor
test
dec
push
jb
nop
movsb
pusha
or
sbb
loope
addr16
pop
test
xor
mov
push
clc
movsl
test
cmp
add
out
stc
movsl
out
xchg
cmc
jmp
push
notb
sbb
fiadds
pop
sbb
xor
sub
ljmp
ret
pop
nop
in
cltd
aam
inc
jle
sub
cmp
mov
sbb
push
icebp
das
call
fwait
push
aas
lahf
pushf
mov
jne
cwtl
or
pop
add
jbe
mov
mov
test
insb
jo
lret
dec
adc
icebp
shl
cmp
dec
push
jns
repnz
push
lcall
sbbb
push
gs
lods
dec
bnd
cli
jns
jecxz
imulb
dec
push
inc
les
xlat
scas
std
fcoml
dec
xchg
pop
sbb
ss
psubq
or
dec
ret
adc
testl
jmp
and
jbe
xor
aad
add
sti
dec
dec
dec
ja
scas
dec
fcom
ds
inc
enter
push
pop
cmp
outsl
jne
mov
xor
lods
push
lcall
sub
out
cltd
shll
das
sbb
call
cltd
leave
pop
xor
adc
shlb
loope
repz
es
dec
pop
fsubl
notb
ret
pop
add
std
test
sub
mov
fistpll
xlat
cltd
or
cmp
loopne
orb
imul
call
scas
mov
mov
inc
lcall
fnop
test
cmpsb
cmp
mov
jb
mov
frstor
mov
pop
sbb
jmp
jno
and
out
push
movb
and
jbe
movsl
add
jns
jl
sub
xchg
mov
mov
test
inc
out
shll
xlat
in
loop
pop
inc
jp
add
cmp
repz
or
mov
test
pushf
sbb
cmc
push
cmp
sarl
mov
loope
cmp
fdivrs
xor
mov
jae
xorb
pop
jne
push
mov
fnstsw
jecxz
xor
jae
push
in
popf
xchg
mov
das
mov
adc
pop
sub
out
and
lret
mov
fstl
push
or
push
dec
xchg
add
cmp
adcl
cmp
pop
insl
push
sbb
sub
fildl
lret
repz
test
popa
scas
jae
fists
or
push
dec
dec
sub
mov
int3
cld
or
daa
out
sarb
cwtl
jne
jns
xchg
mov
cmpsb
ficoms
and
or
jge
mov
pop
nop
sbb
fmulp
ljmp
xchg
shrl
clc
in
cld
sub
inc
es
xchg
cmp
pop
mov
out
push
insl
pop
dec
dec
enter
ss
cmp
jmp
cmp
jp
inc
mov
ljmp
insl
pop
pop
inc
sahf
push
cmp
int3
in
daa
popf
loope
leave
arpl
or
xchg
jo
movsb
sub
dec
punpckhbw
xor
pushf
cmpsb
inc
add
loopne
and
pop
je
dec
mov
sbb
xlat
clc
inc
popa
aaa
inc
mov
pop
movsl
repnz
sub
push
mov
into
cmp
push
hlt
scas
adc
lcall
xchg
rorl
or
dec
rcr
mov
ret
pop
xor
jae
push
bnd
loop
inc
mov
lahf
fisubrl
inc
ljmp
xlat
lret
push
push
cmc
push
adc
ja
test
or
repz
arpl
add
mov
dec
xchg
jecxz
xchg
dec
movsl
frstor
imul
push
lret
neg
inc
sub
sub
push
out
testl
sbb
lock
xor
gs
pop
sub
xor
add
mov
sub
dec
push
jno
pop
das
xor
cltd
cs
out
inc
daa
adc
cmp
mov
or
movsb
ret
inc
cmp
xchg
mov
fbstp
xchg
lcall
lret
xor
in
mov
aas
mov
jnp
fistps
xchg
iret
xlat
mov
dec
loop
mov
cmp
xorb
jl
xor
xchg
mov
xor
outsl
cmp
cmp
pop
mov
into
imul
fiadds
mov
or
mov
into
in
sub
lret
scas
cs
icebp
call
sub
sahf
push
lcall
and
popa
jno
pop
mov
les
fisttpll
push
dec
sbb
or
lret
fildll
pop
fdiv
bound
push
push
popa
sbb
int
sub
cmpl
xor
scas
adc
inc
adc
or
jno
mov
push
loop
shll
mov
xchg
ficompl
lea
sub
test
shrl
jb
xchg
xchg
add
mov
inc
into
inc
sti
and
mov
xchg
mov
push
mov
mov
std
movsb
fisttpl
lds
push
xorl
in
adc
jmp
mulb
push
les
cmc
and
ret
mov
movsl
cmp
lds
add
mov
mov
ljmp
mov
cmc
clc
mov
xor
pusha
das
out
cltd
mov
call
sbb
imulb
xchg
push
and
xor
jp
add
push
packuswb
adc
insl
push
loop
int
xchg
sbb
xor
add
bound
rorb
hlt
inc
push
pushf
repz
sti
test
jnp
fsub
subl
adc
mov
cmc
out
movsl
enter
shrl
lock
loop
in
into
loopne
test
outsb
or
not
inc
pop
jne
adc
stc
and
jns
scas
jge
mov
mov
jle
sub
sbb
mov
push
aad
loope
jp
paddb
fstl
or
jmp
hlt
shrb
out
push
das
enter
scas
xchg
push
mov
pop
fildll
stos
sub
shl
add
inc
dec
mov
lock
xchg
psubsb
fadds
test
nop
roll
js
mov
aaa
clc
fdivp
cmp
dec
and
std
scas
add
jmp
negb
dec
jle
sub
flds
int3
push
repz
imul
mov
addr16
loope
sbb
adc
enter
jecxz
insl
lods
sarl
mov
dec
xchg
stos
mov
ljmp
cltd
aad
sub
in
dec
add
fstps
ss
ljmp
jo
lea
pop
adc
mov
pop
mov
sahf
add
jle
mov
jns
into
mov
dec
jbe
cmc
adc
pushf
loopne
push
inc
push
xor
add
adc
mov
xchg
sbb
jge
ja
jno
hlt
out
cwtl
dec
or
add
inc
inc
inc
data16
cmp
lahf
std
aaa
lock
popa
ret
jg
push
push
popl
bound
dec
shld
lret
push
gs
or
inc
int
sub
adc
mov
mov
out
popa
data16
jb
push
popa
pop
cmc
mov
jo
push
arpl
push
lock
imul
pop
and
lock
rolb
sub
sti
xchg
leave
enter
aaa
sarb
fcoml
repnz
fidivrl
fwait
mov
stos
fmull
leave
addr16
dec
and
cmc
arpl
pop
in
ja
lret
bound
clc
cmc
adc
test
orl
adc
lods
jae
jmp
push
dec
ss
test
addl
aam
in
jl
xchg
mov
pop
pop
sbb
and
jnp
cwtl
mov
xchg
xchg
les
lahf
arpl
xchg
vpperm
orl
sub
pop
dec
addr16
or
mov
cli
or
rol
xchg
insl
gs
cmp
push
ds
daa
push
mov
dec
sub
and
mov
pusha
xchg
and
rorb
sbbl
addr16
mov
push
test
mov
dec
adc
fwait
int
cmp
je
lret
inc
pop
sbb
jp
fwait
mov
imul
or
xor
or
mov
mov
push
inc
aaa
insb
and
mov
sub
jecxz
mov
mov
jp
flds
pushf
mov
dec
mov
sub
mov
imul
daa
ja
xchg
mov
sub
inc
jmp
cmpsb
adc
into
sahf
pop
add
pop
data16
cwtl
pusha
dec
sub
mov
lcall
inc
cmp
push
adc
sbb
xchg
sub
push
sbb
add
mov
xchg
pop
movsl
repz
loope
les
sbb
dec
lret
int3
int3
xor
lds
dec
dec
lahf
sbb
scas
enter
into
adc
mov
sub
testl
out
nop
ss
int3
rolb
mov
lret
sarl
xchg
push
int3
cli
xor
aad
subb
jle
ds
into
cmp
adc
int3
add
sti
enter
outsl
lock
sub
xchg
jp
ror
lds
adc
test
xor
shr
loope
add
pusha
xchg
imul
in
popa
iret
stos
into
test
call
fsubs
dec
sti
nop
pop
push
mov
into
jecxz
out
inc
sub
inc
das
sbb
mov
ss
rcrb
fdivrl
and
pop
jecxz
je
pop
shll
dec
je
shll
adc
outsb
pop
pushf
push
ss
fiaddl
xor
mov
or
outsl
ds
scas
dec
and
shlb
pop
dec
adc
jns
and
jnp
mov
in
imul
mov
lahf
icebp
mov
nop
sti
ljmp
sarl
rcr
cmc
repnz
cltd
mov
repz
cmc
mov
sbb
pop
clc
cmp
inc
mov
inc
mov
and
stc
jp
xor
std
push
les
insl
push
out
xor
cmp
xchg
imul
jge
inc
lahf
lods
mov
cmp
jg
int
es
pop
popa
pop
and
icebp
mov
pop
aaa
outsl
rolb
inc
rcrl
fnsave
push
lea
repz
imul
out
mov
sarb
xchg
add
pop
inc
lods
sahf
adc
push
sbb
rcll
insl
cs
lret
mov
xchg
mov
adc
xor
stos
cmp
mov
mov
jbe
aad
das
inc
dec
js
adc
and
sbb
mov
je
bound
cltd
xchg
test
hlt
and
mov
sbb
mov
mov
cmp
and
outsl
int3
xchg
cld
mov
adc
dec
mov
mov
mov
sahf
dec
jle
adc
cmp
xchg
xor
mov
dec
pop
dec
xchg
jecxz
lret
leavew
adc
and
dec
mov
push
aas
jmp
inc
imul
lds
rol
repnz
shl
and
mov
push
in
jg
ljmp
push
lret
or
fimuls
movsl
cltd
sbb
jecxz
cmp
push
lcall
sub
push
jecxz
xor
fistl
dec
xor
shr
pop
xor
ds
add
fwait
out
jmp
dec
out
subb
cmovae
jne
enter
mov
cld
push
dec
cmp
lcall
add
ficompl
pop
mov
and
inc
xchg
dec
test
stos
ja
sub
mov
test
int
jbe
or
in
push
es
jbe
or
fcmovnb
sbb
add
leave
xor
daa
and
push
leave
adcl
mov
lret
movsb
out
push
pop
iret
sub
xchg
dec
dec
and
xchg
adc
or
jmp
cli
in
inc
jl
sub
cmpsb
push
enter
iret
mov
xchg
push
mov
adc
test
fnsave
adc
mov
adc
jbe
push
jmp
sub
test
mov
push
or
ret
push
pop
pop
cmp
push
psllq
ret
or
leave
sbb
jecxz
notb
inc
push
call
jecxz
cmp
inc
mov
jmp
cwtl
xlat
pusha
adc
shlb
loope
sub
sbb
addr16
lock
push
mov
add
subps
adc
lds
ja
nop
sbb
push
or
xor
iret
mov
adc
or
dec
jmp
xor
das
cwtl
pop
push
loope
mov
xchg
add
lret
sbb
aam
mov
push
sti
sbb
jae
fwait
js
xchg
mov
mov
sbb
test
repnz
lret
in
inc
adc
inc
mov
cmpsl
mov
sbb
jl
data16
je
inc
lods
repz
xchg
clc
imul
xchg
jge
dec
fldenv
sbb
add
cmp
pusha
and
jl
add
push
rcrl
adc
cmp
mov
mov
mov
push
mov
xchg
fidivrl
and
xor
sbb
out
ljmp
loop
scas
dec
int3
xor
lea
imul
arpl
add
pop
sub
push
mov
hlt
xchg
pop
adc
adc
pop
imul
iret
jp
int
xchg
daa
sbb
repnz
insb
iret
adc
sbb
lahf
dec
jg
fcoml
sbb
jbe
lods
and
repnz
inc
aam
movsl
add
mov
sub
xor
jnp
push
jle
and
push
fwait
clc
fnstenv
scas
lock
or
scas
cltd
dec
fbld
xor
icebp
imul
pushf
outsl
add
mov
inc
and
adc
or
jo
add
pop
jbe
out
sbb
sbb
nop
cltd
shrb
test
pop
inc
push
and
cltd
lea
push
push
jb
xchg
add
fdivs
add
loope
adc
enter
sbb
aam
mov
jno
lcall
cld
adc
sahf
mov
jns
pusha
inc
repz
sub
movsb
test
aam
push
jne
mov
pop
decl
call
dec
xchg
test
xchg
sbb
or
or
sub
jns
sbb
into
movsb
pop
xchg
cmc
mov
out
adc
inc
pop
add
test
xchg
mov
lock
mov
pop
fucom
jo
inc
or
add
rcr
push
pop
pop
out
in
push
dec
pop
sbb
int3
lahf
mov
call
xchg
xchg
fbstp
pop
jnp
lock
dec
or
push
or
mov
int
inc
out
std
mov
inc
adc
fisubs
out
mov
push
fwait
mov
cld
push
aas
mov
call
fcmovnu
scas
fisttpll
arpl
cmc
and
inc
movsl
mov
mov
fldcw
lahf
cmpl
in
mov
mov
jp,pt
jae
lods
arpl
in
fsubs
fs
das
iret
jno
nop
add
loopne
adc
cmp
hlt
ss
pop
mov
jle
or
inc
rcrl
pop
jbe
stos
and
insb
pusha
call
test
mov
inc
out
dec
pop
ret
shr
jnp
incb
insl
pop
or
mov
je
aaa
in
aad
push
into
adc
or
add
cmc
rcll
and
push
out
xor
mov
xchg
dec
dec
ret
push
lea
dec
xchg
fwait
lcall
movsl
sbb
enter
test
lock
mov
int
push
orb
incl
das
int3
inc
or
out
mov
cmovns
or
xor
out
mov
jge
incl
mov
dec
lahf
cmp
push
in
jnp
pop
movb
les
cmp
daa
adc
and
addr16
mov
xchg
lahf
stos
fs
pop
and
fisttpl
mov
stc
xor
cmp
mov
push
ret
inc
imul
sbb
push
fildl
dec
sbb
inc
out
pop
xchg
or
aaa
cltd
or
inc
es
or
or
enter
inc
pop
cwtl
adc
fs
dec
scas
inc
lret
iret
clc
addr16
aas
repz
cld
das
repz
add
jo
aas
clc
aas
loop
scas
push
mov
fwait
clc
and
xor
fwait
loop
adc
add
mov
inc
mov
inc
push
or
and
subb
pop
mov
inc
call
repz
aam
call
ss
imul
dec
xchg
add
jo
pop
ljmp
mov
sti
imul
addr16
sbb
aam
lods
mov
lret
jno
repnz
movsb
inc
pcmpeqb
cmpb
or
mov
inc
lret
in
movsl
out
lock
push
pop
mov
lods
sub
sbb
jae
cltd
imul
cmovb
push
popa
xor
xchg
nop
mov
cltd
test
shrb
test
pop
mov
lea
push
dec
aam
jp
or
mov
cmpsb
sub
stos
adc
mov
scas
ret
clc
das
insl
pop
cmp
xchg
subl
idiv
push
fcmovbe
dec
repz
add
rcr
lods
out
adc
or
loop
je
or
dec
insl
push
jp
sbb
push
shlb
mov
pop
push
dec
sbbl
sub
and
out
adc
mov
notb
sbb
inc
mov
lahf
lret
push
sbb
imul
cli
cmp
mov
ljmp
inc
push
pop
mov
adcb
add
xor
outsl
jbe
xchg
mov
xchg
push
sub
mov
xor
push
in
or
rcrl
subb
push
mov
nop
je
loop
jecxz
sub
lds
pop
rclb
cli
jne
mov
add
out
push
xchg
mov
mov
ja
loope
movsl
xchg
dec
push
xor
dec
xchg
add
xchg
jne
out
js
dec
sbb
arpl
and
jns
sub
and
xor
mov
mov
mov
jo
roll
dec
cmc
addr16
fbld
sub
adc
mov
pop
xchg
pop
jb
lea
imul
idiv
shll
lods
xchg
jae
push
inc
xor
sub
popa
ss
pop
or
sbb
xchg
rep
sarl
jmp
dec
or
inc
cmp
outsl
rorl
in
mov
cmp
fnstsw
iret
ror
lock
fcoml
pop
mov
outsb
lds
pop
xor
ret
xchg
sub
mov
test
fldl
push
hlt
in
pusha
jno
ficoml
mov
dec
fnclex
cmpsb
rorl
mov
jae
lock
pop
fbld
xchg
add
out
jno
xor
push
rorl
out
or
sub
pop
and
sub
shll
cmp
cld
sub
fs
xchg
es
jne
sub
xchg
and
fnstsw
sbb
orl
nop
int
xor
enter
into
and
dec
pop
es
sbb
pop
xor
pop
sbb
sbb
push
and
sahf
pop
dec
loopne
test
pop
sub
int
and
cwtl
pop
fbstp
mov
xchg
mov
out
inc
mov
iret
dec
sbb
clc
int
and
fmull
mov
adc
mov
pop
dec
xchg
les
xchg
dec
mov
sti
popa
pop
jg
push
sarl
les
pop
scas
sahf
push
fistps
pop
push
xchg
sub
lock
fnsave
pop
jg
lret
add
and
jge
xlat
fsubrl
push
in
orb
daa
popa
xor
cmp
xchg
leave
pop
cmpsb
inc
popaw
xor
mov
fimull
pop
sub
mov
lret
fmull
add
cmc
test
test
sbb
push
or
rorb
sbb
ja
in
pushf
push
mov
ret
xor
xchg
jmp
lock
enter
xorb
and
push
test
mov
movsb
or
mov
fwait
xchg
int
xchg
sbb
cmpsb
xorb
outsl
and
cmc
insb
mov
push
xor
and
aad
xor
xchg
imul
jo
and
push
fidivl
adc
loope
cwtl
loop
pop
cli
test
cmp
sub
in
jge
shrb
hlt
inc
out
les
xor
test
xor
and
adc
add
adc
inc
test
xchg
push
mov
dec
mov
mov
clc
adc
out
stos
stc
pusha
test
jnp
stc
pop
jmp
mov
xchg
testl
aas
mov
xor
and
mov
push
stc
fwait
or
inc
jg
sub
fs
bound
xor
cltd
jp
cmp
push
sbb
sbbl
inc
cwtl
div
into
rep
lods
popa
mov
int
and
movups
jb
dec
popf
push
inc
cs
pop
xor
mov
aaa
sbb
mov
sub
fistpl
arpl
jmp
cwtl
mov
and
adc
sbb
push
cmp
mov
out
dec
sbb
clc
jo
mov
dec
lock
popf
int
imul
enter
xchg
and
pop
lcall
outsb
add
and
out
shlb
cmp
lods
cmc
mov
out
les
push
mov
rcll
mov
sbb
loopne
std
clc
jmp
ret
filds
or
mov
pop
inc
fidivrs
xor
or
aas
dec
xor
std
out
add
add
bound
std
and
fisubrl
fdivrs
adc
pop
jno
sub
mov
and
pop
int3
into
xchg
mov
outsl
pop
bound
shr
pushf
out
mov
xchg
sub
mov
jb
pop
dec
call
inc
fwait
sti
add
pop
int3
mov
jle
or
test
addr16
sti
ja
push
cmp
lock
out
sub
push
and
or
mull
jo
push
jp
loop
popa
inc
loop
in
sbb
in
pop
mov
lea
icebp
push
loopne
sub
push
adc
cmp
shrb
xlat
ljmp
lret
cltd
mov
repz
inc
xor
push
push
out
scas
fcoms
fistpl
mov
in
lea
mov
fadd
xchg
clc
nop
into
shlb
pop
aaa
push
testb
pop
mov
xor
sti
xor
ljmp
sub
pop
lret
arpl
out
fwait
or
mov
xor
movsl
or
sbb
mov
mov
bound
scas
or
repnz
or
aaa
lret
mov
addr16
mov
shlb
xor
pshufw
jl
idivb
adc
bound
and
mov
sbb
aas
and
mov
popa
in
out
ret
je
fdivp
arpl
sub
out
add
cmp
subl
xchg
mov
outsb
fstpl
xchg
mov
loope
ss
imul
jo
pop
xchg
aaa
es
sar
adc
dec
mov
pusha
shrl
stos
jg
xchg
mul
and
lods
pop
stos
fcmovnbe
aas
inc
xor
test
dec
or
dec
dec
pop
sbb
sub
jno
cmp
outsb
jg
outsb
ret
xchg
jp
jo
test
ljmp
jmp
enter
in
out
pop
fldenv
pop
lds
dec
inc
pop
mov
shl
pop
mov
pop
jmp
mov
xor
lods
mov
xor
loopne
push
adc
or
pop
testb
fstl
sub
fcmovne
mov
push
lock
mov
push
pop
mov
or
loop
mov
jle
xor
or
sbb
daa
cli
dec
inc
cmp
xchg
dec
sub
add
mov
aad
aad
pop
ret
call
fidivrl
mov
in
add
jne
sub
push
rcrb
ja
cmp
pop
popa
into
sub
dec
faddl
dec
xor
fiaddl
int
mov
or
movsl
and
or
inc
ss
jecxz
daa
int3
pop
xchg
add
lea
les
add
dec
pop
je
outsl
push
xor
insl
sub
jecxz
shlb
mov
or
lock
jne
mov
cli
int3
mov
es
and
aad
mov
pop
push
xchg
mov
adc
shll
sub
mov
cmpsl
cmpsb
add
out
lods
xchg
jo
rsqrtps
mov
or
sbb
push
pop
mov
fnstenv
in
test
inc
sbb
adc
popf
mov
inc
adc
adc
loop
shl
pop
sbb
imul
and
pusha
imul
add
ret
mov
imul
push
xorl
in
and
fsubrs
mov
xchg
movsb
inc
ja
fmuls
xor
jg
inc
cmp
dec
addr16
scas
insl
dec
out
dec
and
test
mov
xchg
and
xlat
sub
fdivr
lret
cmpl
lea
xor
sarl
add
aas
xchg
mov
dec
incb
stos
sbb
scas
scas
decl
int
xchg
add
es
xchg
push
fildll
aad
xlat
push
je
out
cs
mov
das
pop
pop
in
cmp
jae
cld
jg
fadd
inc
fldenv
inc
pop
or
arpl
or
or
out
mov
mov
xlat
aad
or
sbb
repnz
jge
bnd
mov
xor
aam
add
test
dec
inc
adc
testb
sub
pusha
in
push
fisubl
dec
inc
mov
mov
mov
push
pop
inc
adcl
insb
cs
pop
movsl
xchg
mov
mov
xlat
dec
adc
pushf
insl
push
and
inc
pushf
pop
cmp
cmp
test
xchg
fistl
push
mov
pop
shrl
xchg
nop
dec
inc
push
ret
outsb
dec
inc
jne
in
ss
mov
mov
popf
jp
jle
sbb
movsb
push
out
repnz
popf
icebp
insl
sti
cmpsb
and
mov
cmp
mov
add
cltd
fs
mov
inc
inc
shrb
inc
xor
cld
or
fmul
test
dec
int3
das
test
cmc
push
out
ja
jmp
pop
jge
fcomps
add
sbb
shrl
sbb
adc
mov
or
mov
outsl
add
lahf
mov
pop
mov
sbb
std
js
mov
sbb
es
insl
and
ljmp
call
push
dec
sti
dec
mov
jne
or
ds
stos
bnd
jno
cmp
lret
dec
sub
xchg
pop
lcall
aad
adc
pop
xchg
ja
lret
imul
jae
cli
jl
lahf
stc
fisubs
dec
out
mov
sbb
data16
mov
pop
and
call
jno
bound
scas
outsb
test
imul
iret
dec
mov
dec
mov
fwait
push
dec
mov
adc
xor
pop
mov
inc
xor
out
jmp
and
xor
setbe
xor
mov
out
mov
mov
pop
stos
in
xchg
loopne
inc
int
ret
stc
fstl
cs
pop
sarb
insl
push
adc
pusha
jbe
cmovne
int3
clc
jno
fimull
test
mov
mov
xor
inc
mov
sbbl
cmc
xchg
push
xchg
add
sbb
mov
sbb
imul
mov
popa
notl
insb
jge
sub
xchg
ret
rorb
sti
cs
cmpsl
test
mov
adc
je
sbb
sub
cmp
movsl
sbb
push
xor
nop
std
sub
in
leave
xor
mov
aas
ja
xchg
rorl
jbe
stc
lret
sti
dec
xor
mov
iret
ror
fcoml
jmp
push
adc
mov
fadd
cmp
sbb
adc
mov
jne
dec
pop
leave
mov
mov
sbb
div
push
test
into
mov
fs
roll
icebp
fldenv
iret
pop
or
pop
loopne
pop
or
pop
pushf
ss
sbbb
sbb
mov
mov
sbb
cmp
dec
int3
pop
imul
adc
inc
movb
iret
hlt
sti
jle
mov
orl
lahf
add
and
pop
lea
adc
lea
aaa
out
and
cmp
imul
in
xchg
daa
fsubrs
add
jge
call
adc
sub
xchg
mov
jp
in
pop
lahf
bound
leave
mov
fs
scas
mov
sbb
cmp
jge
pop
out
adc
decl
dec
repnz
in
jb
fdivrp
mov
stos
repz
mov
lret
mov
sbb
jmp
xchg
pusha
outsb
dec
popa
push
mov
mov
jmp
in
jb
pop
nop
std
lret
mov
int3
add
sbb
les
movsl
or
pushf
pushf
popf
loop
push
dec
jnp
cwtl
std
es
out
sub
sbb
mov
fsts
rcr
xor
add
jecxz
pusha
xor
pop
xor
pop
loop
xchg
dec
sti
dec
dec
outsb
dec
je
mov
jno
push
pop
mov
cmp
sub
das
xchg
popf
out
stos
outsl
shlb
push
out
outsl
xor
push
mov
lds
xchg
inc
jno
cmpsb
jne
and
jnp
popa
sbb
mov
lcall
out
call
mov
sbb
hlt
mov
cwtl
fidivs
lods
mov
dec
and
xchg
cmpsl
pusha
xor
mov
mov
stos
das
mov
jnp
orl
mov
lock
xchg
sbb
dec
mov
test
enter
jge
dec
roll
xchg
add
inc
or
outsb
in
sbb
mov
push
pop
dec
sub
push
jmp
cwtl
rcr
jbe
jl
sti
fldcw
sbb
aad
dec
lea
sub
fimuls
sbb
mov
adc
pop
xlat
imul
xchg
lods
daa
push
fldl
pushf
sub
xchg
jg
sarl
cmp
lcall
and
jg
movsb
out
ret
inc
mov
push
aaa
imul
test
dec
mov
and
imul
outsl
inc
mov
cmp
add
fwait
ja
mov
cs
hlt
stos
sub
adc
std
icebp
in
cmp
inc
scas
std
jmp
loop
xor
or
push
pop
imul
mov
xchg
clc
sbb
sbb
aas
popa
xchg
lret
orb
and
leave
outsl
sub
cmp
jne
xchg
ss
cmpsb
repz
aam
out
inc
mov
push
cmp
mov
xor
mov
adc
and
lahf
xchg
pop
lods
lea
imul
jge
mov
and
ret
aaa
aam
sahf
cmp
cld
data16
in
popa
pop
scas
cld
xor
jns
notl
add
mov
cmpsb
loopne
aas
cmp
es
cmp
imul
xorb
or
repnz
popf
sub
jg
xchg
cmp
mov
ret
and
mov
das
adc
and
minps
push
jo
cmpb
lea
icebp
repz
and
xchg
and
mov
xor
cmp
dec
xor
adc
pop
inc
mov
fiaddl
add
test
push
mov
sub
into
sub
cli
inc
inc
mov
add
jb
xor
ficomps
sbb
inc
outsl
xor
enter
in
pop
mov
out
sub
push
dec
mov
std
push
lods
cltd
leave
mov
xor
ficoms
divb
fnstcw
aam
mov
adc
mov
ret
std
push
decl
inc
lahf
mov
push
mov
xor
xchg
cmp
mov
scas
xchg
cmpsb
js
pop
dec
inc
add
pop
ss
xor
mov
popf
or
aaa
pop
inc
in
sti
jp
sub
call
frstor
out
es
jle
imul
popa
sarb
mov
loopne
inc
inc
test
pop
xchg
sbb
jmp
fiadds
push
cmp
push
jns
mov
push
fcom
sub
xchg
xchg
je
outsl
movsl
repnz
xlat
push
jnp
jl
or
dec
and
mov
pop
aad
push
lret
shlb
and
daa
jns
pop
cmp
xchg
notb
cmp
xchg
push
rorl
push
sahf
add
xor
mov
imul
imul
sub
std
mov
mulb
xlat
lock
sub
push
sub
sti
sbb
mov
dec
xor
mov
int
lahf
sahf
pop
push
out
std
stc
push
xchg
push
mov
adcb
inc
mov
or
orl
cltd
xorl
int
mov
addr16
imul
and
jp
imul
push
test
out
stos
cmp
aam
mov
leave
imul
iret
cmp
aas
into
add
and
lret
mov
pop
std
into
inc
popf
and
lea
jns
sbb
repz
lcall
sub
mov
push
mov
mov
pop
out
insl
jb
ret
mov
cs
loopne
or
clc
movsl
adcb
pop
shrl
and
jbe
fisttps
aas
clc
ret
rcll
add
inc
outsb
pusha
in
pop
add
adc
shlb
jle
mov
sub
sbb
repz
pop
push
ljmp
lcall
sub
jmp
test
and
ja
aas
ja
sbb
imul
std
mov
xlat
push
fsubl
sbb
lret
adcl
add
ret
enter
cmp
cmp
rorl
imul
xorl
dec
xor
sub
xchg
sti
mov
jno
sti
cmpsl
push
mov
icebp
dec
or
fadds
or
pop
jne
rorl
ja
int3
inc
pushf
mov
notl
std
jmp
mov
hlt
cmp
aam
xchg
rcr
xor
lahf
dec
addb
jge
sub
insl
repnz
mov
inc
add
fwait
sub
ss
push
insb
repz
outsl
inc
testl
cs
in
sub
mov
call
ret
push
or
push
clc
pop
test
loope
jge
jae
insl
mov
mov
aam
ljmp
or
add
or
sarl
sub
int3
mov
jmp
mov
movsb
test
mov
jb
mov
loope
xor
or
rclb
mov
push
movsb
jge
jae
jge
fnstenv
xchg
fsubrl
out
jo
mov
nop
in
mov
jne
jp
cmpb
inc
cwtl
jno
repnz
pop
adc
dec
xchg
loop
ljmp
sub
xchg
xor
or
push
lods
mov
sub
inc
fadds
xchg
mov
lock
jecxz
and
push
movb
out
xchg
adc
scas
cmc
cmp
insb
test
shlb
push
push
adc
xchg
mulb
cli
cld
and
mov
movsl
icebp
int3
inc
cmpsl
cmp
lret
insb
xor
enter
imul
arpl
cli
pop
mov
push
mov
xchg
fidivrl
push
aas
add
xor
xlat
filds
mov
cs
sbb
jnp
pop
inc
inc
pop
add
dec
jne
mov
or
push
sahf
or
loop
lea
mov
push
xlat
adc
add
xchg
push
or
jl
lods
sub
loop
lock
jnp
push
out
push
js
sbb
push
dec
icebp
jg
add
jo
je
xlat
imulb
mov
dec
sub
or
xchg
dec
cltd
pop
ret
push
sub
andb
push
cmp
pop
mov
push
insl
ret
and
pop
loope
xor
aaa
cmpsl
fistpl
mov
add
popf
inc
mov
repz
lods
inc
mov
cmp
sti
fstpt
imul
leave
gs
repz
jg
mov
mov
clc
loop
adc
sub
cmp
repz
cld
lea
adc
fstl
nop
sbb
or
sbb
daa
jmp
push
addl
pop
inc
cmp
repnz
rcrl
fadd
pop
jae
ds
test
out
or
adc
push
xor
jg
daa
lods
lret
sbb
pop
push
cmp
or
cmp
lret
or
jne
and
mov
xchg
adc
inc
xorb
dec
mov
fisttpl
lcall
loope
xor
je
inc
jo
stos
mov
mov
repz
push
lods
outsl
xchg
jbe
inc
jnp
mov
or
cmpsb
adc
stc
js
mov
bound
cmpsl
int3
in
and
adc
arpl
xchg
mov
mov
mov
or
fistpll
fists
inc
jg
shll
push
cs
cmpsl
inc
or
mull
sub
sbb
cmp
xchg
imul
frstpm(287
mov
es
inc
fistl
lcall
xor
insb
pop
outsb
add
fs
mov
ljmp
xor
mov
movsl
inc
hlt
decw
out
xor
pop
ss
insl
sub
cs
xor
pop
sbb
jg
mov
jae
mov
fsubrs
and
mov
pushf
inc
ficoms
push
out
aam
in
sbb
jl
push
jbe
mov
mov
jbe
popf
pop
test
hlt
inc
jl
test
push
cmp
into
or
mov
decl
rorl
js
cmc
jae
mov
or
dec
dec
imull
loop
dec
jle
mov
fadds
addl
aaa
and
mov
xchg
mov
inc
cmp
xchg
addr16
leave
sbb
shl
xorb
mov
addr16
or
jp
push
andl
sbb
push
inc
pop
mov
cmp
push
xchg
and
test
lock
test
and
adc
test
xor
sub
scas
add
push
inc
pop
or
mov
popa
lret
or
xchg
push
enter
mov
and
lahf
lods
and
adc
ret
movsl
mov
loope
movsb
xor
add
ds
add
add
push
mov
add
subl
lret
sbb
mov
fstpl
jge
pop
cld
jb
pushf
cli
sbb
cmp
push
in
or
fists
cli
ljmp
sub
jae
mov
mov
ret
daa
adc
and
lock
xchg
popf
aad
mov
mov
mov
negl
lcall
mov
mov
cmpsl
in
xor
xor
mov
mov
mov
sbb
jno
sub
mov
push
js
inc
mov
mov
clc
jle
sarl
sub
sub
push
xchg
cmp
inc
mov
dec
icebp
pop
lods
pop
mov
rolb
push
dec
and
inc
xchg
xor
fnstenv
out
clc
pop
aaa
adc
pop
xchg
shr
lcall
xchg
insb
pop
int
stos
sub
sbb
adc
jo
push
cs
das
scas
inc
ret
les
push
dec
es
stos
fs
lret
adc
ss
mov
lahf
pop
std
pusha
pusha
call
ud0
adc
cmp
enter
mov
jg
fwait
dec
and
sbb
xchg
cld
jmp
insl
and
stc
aaa
pop
jl
lods
mov
jp
sarb
mov
xor
out
imul
sub
subl
pushf
loope
xchg
sub
ficoml
addr16
imul
test
mov
sti
lds
sbb
call
sbb
xchg
lods
sbb
lea
ficomps
mov
mov
xchg
shll
insl
arpl
sub
mov
jae
mov
xchg
in
es
cli
or
lret
in
fwait
cs
iret
movsb
mov
add
mov
mov
mov
scas
mov
jg
repz
xor
into
nop
and
push
jns
lods
pop
cld
pop
data16
sub
adc
rcrb
dec
inc
xchg
adcl
mov
dec
xchg
adc
xchg
push
imulb
lds
insl
adc
nop
sbbl
int3
dec
out
insl
mov
js
shr
repnz
xchg
inc
sub
mov
repz
in
add
inc
insb
dec
sbb
sti
out
adc
sub
jno
test
or
cwtl
repz
push
scas
adc
mov
imul
pop
xchg
jmp
and
push
mov
stc
cs
pushf
bound
add
sub
cmc
jno
xchg
push
mov
call
add
fs
loop
jb
sbb
enter
xor
pop
js
aad
jg
jmp
std
mov
imul
sbb
mov
leave
pop
lea
rcrl
or
or
stos
dec
stc
sbb
sbb
or
xor
lods
xchg
mov
dec
and
dec
repnz
mov
push
pop
dec
mov
pop
pusha
xchg
lods
ret
mov
scas
dec
test
dec
stos
lcall
cmpsb
outsb
in
dec
out
adc
arpl
movsl
es
sbb
popf
xchg
std
mov
mov
inc
mov
repnz
push
shrb
cmp
outsb
shlb
xchg
jecxz
clc
adc
jne
lahf
leave
mov
or
shrb
cs
test
xor
lret
dec
cwtl
andl
push
shrb
insl
test
pop
adc
and
mov
leave
sbb
sahf
mul
cmp
or
loopne
jbe
and
inc
leave
lods
inc
mov
aam
je
lret
pop
mov
enter
loope
adc
jle
push
out
ret
sbb
into
arpl
push
popf
mov
mov
xchg
mov
aas
jl
xor
mov
out
shll
or
ja
and
mov
jg
add
ss
dec
mov
xchg
xor
cmp
fwait
iret
mov
stos
dec
in
imul
xchg
sbb
mov
jne
mov
sbb
nop
xchg
jg
fldt
cmp
or
or
add
sbb
xchg
stos
test
ljmp
sar
jns
call
jns
jb
stos
movsb
call
cmpsb
jno
mov
mov
out
xchg
fimuls
cmp
pop
sub
fsubl
xor
jmp
into
jge
or
or
and
mov
sbb
pop
aam
aaa
call
mov
aam
jae
pop
dec
leave
hlt
push
inc
or
push
add
cmp
lahf
inc
call
test
mov
sbb
pop
aam
dec
mov
adc
cmp
call
ja
pop
leave
arpl
out
sarl
sub
xchg
lret
pop
lahf
push
je
int3
xor
push
adc
or
les
cwtl
cmp
adc
mov
imull
cmp
cli
cmp
jecxz
test
add
dec
add
jo
mov
jne
pop
test
aaa
dec
js
xor
mov
add
in
dec
flds
shlb
loopne
notb
cmpsl
and
and
cmp
hlt
push
pop
sub
rcrl
mov
dec
cmc
or
add
adc
push
or
mov
fists
iret
sbb
in
dec
dec
daa
xchg
aam
in
ja
pop
les
repnz
cmc
inc
dec
les
and
enter
imul
cltd
xor
lret
data16
movsb
mov
cmp
xchg
xor
fadd
js
mov
push
inc
ja
inc
and
shrb
sarl
notl
rcrb
aas
adc
or
std
fcompl
xor
fnstsw
dec
mov
mov
cli
inc
and
xchg
pop
push
scas
test
repz
fsubrs
xor
push
hlt
sbb
cli
add
cmovno
add
push
jp
mov
pop
jp
dec
fs
mov
outsb
add
cli
pop
pushf
imul
xlat
daa
in
aad
cmp
push
inc
inc
mov
and
out
xor
dec
ret
lock
rcl
or
mov
cmpsb
fldenv
sbb
or
mov
cmc
and
xor
jbe
push
mov
adc
out
jnp
xor
xchg
scas
push
jo
cmp
mov
push
xorl
push
lcall
loope
mov
ret
sub
add
cli
jnp
cmpsl
dec
jmp
mov
lds
push
cltd
add
pop
inc
das
pop
data16
xchg
mov
sbb
jbe
inc
or
add
jo
arpl
out
mov
xor
pop
shrb
lret
mov
in
jno
js
dec
sub
cmpsb
lret
movsb
pop
movsl
test
int3
jns
inc
push
int3
pop
jle
mov
ljmp
addl
mov
xor
xorl
push
aaa
int
insl
and
mov
and
mov
sub
sahf
xchg
push
push
lret
lret
pop
cmpl
inc
add
and
lcall
movswl
mov
xchg
pop
stos
movsl
lret
and
mov
cs
or
jns
mov
sub
mov
add
mov
xchg
sub
mov
rorb
adc
or
outsl
jae
repz
test
or
aad
ljmp
insb
pop
hlt
sahf
or
or
push
mov
adc
inc
sbb
mov
pop
scas
jle
call
push
repnz
sbb
mov
inc
pop
cmpb
lods
inc
mov
sub
out
adc
jne
stos
adc
popf
inc
repz
aad
pop
dec
movsl
push
xchg
xchg
daa
and
adc
mov
add
imul
bnd
push
sbb
sarl
mov
testb
rolb
inc
cmp
out
xchg
mov
fwait
jnp
or
jae
xchg
adc
adc
mov
push
jge
and
out
daa
sbb
adcl
out
mov
pop
movsl
iret
lock
jecxz
xor
cmpsb
inc
xor
fdivrp
push
cmpsl
mov
xor
out
into
or
inc
cwtl
outsb
pop
and
pushfw
adc
jbe
loop
mov
sbb
shr
pop
unpckhps
mov
out
fisttpl
pop
push
cmp
gs
std
pop
sub
stos
insl
xor
ficoms
js
xchg
jmp
mov
les
or
adcb
xor
imul
cli
xor
and
sarl
out
mov
cmc
repz
aad
pop
pop
addb
sbbb
outsb
xchg
adc
loopne
iret
mov
cmc
aas
push
xlat
jge
xor
cli
das
xor
push
xchg
mov
cs
lret
shlb
adc
or
push
mov
mov
sbb
js
xor
jno
imul
dec
inc
jae
push
test
cmpsl
jmp
lahf
adc
inc
ds
fdiv
insl
cmpsl
pop
call
test
mov
pop
cmp
loopne
xchg
sub
dec
rcr
add
ret
imul
sahf
and
pushf
xchg
xlat
mov
add
xor
ja
imul
lcall
jbe
adc
sarb
or
int3
cmpsb
out
mov
jl
ljmp
xor
xor
sub
sub
in
dec
rcrl
clc
arpl
cltd
mov
and
xchg
inc
xchg
jno
imul
sbb
sub
sar
or
std
sub
jg
xchg
sar
aaa
mov
aaa
xor
mov
inc
rdpmc
loopne
nop
jp
adcb
jl
jbe
out
cli
inc
pop
ja
inc
ret
cmp
xorl
rcl
xchg
xor
xchg
inc
adc
pop
inc
sbb
sub
stos
push
into
lcall
bnd
jb
xor
adc
out
repnz
test
cmp
loope
inc
inc
and
sbb
sti
sbb
pop
in
mov
xlat
lret
test
loope
sbbb
packssdw
mov
sahf
jl
test
pop
call
or
and
call
mov
jl
xchg
movsl
ss
in
xchg
mov
pop
inc
lret
sub
daa
mov
inc
jmp
mov
shl
pop
ds
daa
or
clc
push
mov
mov
lods
push
mov
aas
xlat
movsb
pop
fstpl
cwtl
je
cmp
fsubrl
lds
push
inc
mov
push
inc
shl
mov
add
xor
xor
movd
inc
scas
xchg
mov
or
sahf
sbb
loop
xor
arpl
mov
jae
hlt
xor
xchg
xchg
loop
fwait
sbb
outsl
mov
pop
pop
jmp
popa
mov
test
mov
dec
icebp
xor
in
inc
out
data16
adc
sti
sub
pusha
shlb
jnp
xor
xor
cli
lahf
mov
or
lea
inc
xchg
mov
je
sub
mov
enter
sti
sub
xchg
cld
xchg
xor
add
push
mov
push
in
scas
filds
in
stos
ja
sub
push
aaa
mov
ret
add
mov
cmp
adc
or
lods
mov
loopne
aas
bswap
addr16
xchg
pusha
imul
fisubrs
addr16
xchg
lods
pop
jnp
or
mov
and
sbb
sub
jg
scas
push
ss
jbe,pt
cmpsl
inc
repz
iret
movsl
int3
sti
mov
mov
fldenv
ja
xor
sar
mov
insl
sub
mov
adc
or
sbb
leave
repz
cli
mov
scas
add
inc
ja
out
ret
das
mov
fnstenv
imul
mov
lods
movsb
jb
cmpsl
push
cmp
dec
lret
or
in
xchg
jecxz
jno
js
cmp
xchg
rolb
mov
inc
mov
lea
lock
idivl
subl
test
sbb
cmpsb
nop
and
clc
cmpsb
sub
jae
cmpb
fimuls
jmp
fimuls
and
mov
mov
push
imul
out
out
push
mov
jle
inc
std
popf
insl
addr16
cmc
xchg
xor
sbb
and
jecxz
mov
dec
dec
leave
shlb
xchg
add
add
into
pop
in
cmp
mov
movsl
out
mov
xor
icebp
cmp
cwtl
push
push
xor
pushf
cmc
jno
test
in
fadds
cmp
cmp
jp
push
outsb
sbbl
mov
call
inc
pop
pushf
gs
jge
out
mov
lahf
je
inc
cmpsb
pop
push
fwait
imul
mov
insl
push
cli
and
add
shll
xchg
inc
rcrb
lret
adc
bound
popf
add
dec
orl
icebp
sbb
adc
mov
mov
jl
loopne
insb
jge
cltd
aam
and
ficompl
cli
imul
or
sub
dec
sub
out
sub
add
sub
jge
shll
repnz
and
ss
push
insl
lcall
or
js
popf
imul
cmp
mov
mov
lods
and
or
xchg
push
cs
dec
xor
jp
jg
adc
leave
dec
test
or
stos
rorb
sahf
shrb
xchg
cmp
jno
int
and
jae
xlat
pop
sbb
mov
and
lods
push
test
scas
adc
mov
out
pop
test
iret
ret
test
push
xor
push
dec
out
nop
sub
fsubrp
fnsave
sub
mov
xor
push
in
sub
movsl
or
scas
cs
mov
imul
lods
jmp
scas
lea
sub
sub
fldl
push
sub
leave
es
in
imul
lods
int3
dec
ja
push
mov
lcall
mov
sub
pop
imul
leave
inc
cmp
jmp
adc
stos
cmc
sarl
vcmpsd
addr16
cmp
add
lea
outsb
stc
lahf
mov
mov
lcall
out
pushl
clc
push
jo
jb
out
int
fdivl
pop
mov
xor
stc
cwtl
and
movsl
and
add
loope
mov
mov
rclb
daa
cmp
cmpsb
or
pop
scas
add
subps
imul
pusha
xor
hlt
sub
pop
fs
cmp
mov
inc
mov
aad
cs
xchg
xor
aad
into
dec
inc
sbb
jl,pt
push
hlt
pmaddwd
push
daa
mov
insl
int3
push
mov
push
mov
or
dec
xor
lds
inc
add
rorb
icebp
jmp
xchg
int3
enter
jp
lds
jbe
shl
adc
jecxz
bound
out
mov
sub
adc
and
dec
add
repz
mov
mov
inc
inc
rcrl
sti
enter
or
test
dec
mov
hlt
dec
fcoms
cmp
fdivr
push
lea
insb
gs
or
jb
sbb
push
aam
and
scas
sub
std
or
adc
fld
popf
push
xor
cwtl
inc
mov
loopne
cmpsb
xor
or
icebp
addr16
gs
mov
in
ret
fwait
aaa
mov
mov
jl
jle
mov
aaa
rolb
add
xchg
xchg
aad
dec
fwait
or
gs
test
rcrl
pop
loop
jne
nop
in
popa
mov
psubsw
mov
test
xor
mov
cli
pop
repnz
and
and
jge
and
js
popf
js
pop
loope
sbb
pushf
cmc
pop
cs
jge
or
test
shll
stos
dec
cmpsb
mov
bound
pop
xor
decl
pop
xchg
mov
data16
into
push
out
mov
mov
into
mov
in
jge
or
sbb
mov
push
and
subl
stos
sti
adc
fimull
push
sub
mov
in
push
cltd
push
ret
lret
inc
xchg
push
nop
dec
aas
mov
push
inc
shll
or
fbstp
rcrl
mov
push
cmc
shlb
test
and
cmpsl
adc
sub
flds
pop
dec
je
pop
decl
xchg
mull
lcall
jmp
or
lret
sbb
add
jge
in
mov
xchg
lock
sarl
and
test
fdivs
xor
xor
imul
div
sbbb
or
inc
or
or
or
movsb
pop
xchg
dec
enter
fimuls
or
and
outsb
push
and
and
pop
jno
push
ljmp
pop
jecxz
jae
jge
jo
shrl
jbe
sar
xor
fldenv
lcall
mov
pop
cwtl
mov
inc
addr16
push
inc
lds
iret
xchg
sbb
leave
fwait
jmp
insl
cmp
xor
pusha
pop
jae
sbb
push
adc
subb
enter
hlt
cmp
pop
add
cmc
xchg
inc
aam
repnz
push
mov
insl
jge
jg
inc
insl
ret
jae
push
xchg
std
insl
js
out
jmp
aas
sbb
and
push
push
fwait
repz
mov
push
xor
lods
repz
js
sbb
shlb
lea
xor
inc
cmp
mov
and
dec
adc
cmpsb
out
mov
lods
das
cmp
fldenv
addb
or
orb
scas
mov
sti
inc
push
test
add
jnp
std
cld
shrb
dec
pop
jg
jb
push
push
add
mov
imul
pop
or
adc
loopne
mov
lods
cmp
adc
fidivl
mov
xchg
jge
or
iret
mov
mov
mov
lret
xchg
push
rolb
mov
test
popa
pop
lods
pop
dec
push
int
incb
jae
outsb
arpl
int3
inc
mov
pop
testl
pop
rcll
pop
and
xchg
mov
sub
orl
jns
testb
not
xor
mov
add
lahf
adc
add
and
leave
fstp
lods
sub
addr16
ficoml
or
inc
inc
sub
sbb
roll
int3
iret
shlb
jne
enter
mov
inc
jecxz
repz
int3
out
jne
mov
pop
lds
add
cmp
mov
leave
loopne
xchg
pop
push
xor
xchg
fimull
stc
mov
inc
loop
sub
dec
fcomp
lods
mov
stos
adc
cmp
stos
jbe
sahf
loope
sbb
pushf
sbb
imul
pop
push
ds
and
lea
aad
shl
das
movsl
icebp
cmpsl
jns
adc
mov
rorl
aaa
cmp
icebp
mov
push
ret
pop
mov
push
jnp
jmp
lods
or
xor
out
sub
pop
mov
lret
mov
jae
insb
out
jle
jg
sbb
xchg
out
insb
dec
jno
sub
sar
ret
push
popf
adc
lret
popa
sbb
add
pop
inc
scas
mov
test
popf
ss
mov
push
dec
in
cmp
fbstp
mulb
mov
imul
jns
xchg
mov
add
pushf
dec
mov
pop
mov
cwtl
scas
daa
cmp
aad
jle
jmp
sbbb
test
ret
jo
xchg
ficomps
xor
div
dec
pop
jecxz
imul
and
aad
xor
add
mov
xchg
in
mov
mov
enter
sub
push
js
add
or
push
mov
cmp
pop
jmp
push
lds
gs
mov
xchg
push
mov
add
or
rorl
mov
and
push
movsl
push
dec
inc
clc
push
call
rcrl
stc
cmp
mov
lock
push
sub
push
sub
add
aas
pop
inc
aaa
mov
push
test
dec
xchg
out
sti
mov
into
dec
push
jae
xchg
out
and
out
in
cmp
cwtl
aas
sti
lock
xor
xchg
iret
inc
push
lods
je
shlb
clc
mov
jl
scas
cmpsb
repnz
dec
dec
outsl
pop
inc
popa
ss
ljmp
in
mov
aam
out
loope
scas
movsb
ss
mov
dec
cwtl
push
fistpl
negl
cli
pop
call
mov
pop
aam
cmp
mov
fbstp
dec
mov
jp
xlat
sbb
cs
jp
movb
inc
roll
popa
push
push
xchg
ret
jl
dec
jle
and
mov
cld
push
lock
ljmp
dec
or
mov
push
xor
push
mov
add
and
inc
rcrl
mov
scas
repz
sub
cmpsl
xchg
lods
mov
or
cwtl
fcmovnb
push
xchg
xor
mov
nop
mov
into
lods
imul
jno
inc
or
fsubs
lock
lds
mov
and
rcl
xor
imul
xor
xlat
imul
imul
idivl
mov
add
mov
int3
nop
mov
jmp
mov
or
push
aam
nop
xchg
mov
pop
leave
jge
or
in
scas
jns
push
repnz
push
testl
leave
sbb
xchg
repnz
neg
les
imul
sub
add
fcmove
inc
mov
aam
mov
aad
mov
sbb
clc
cld
jns
in
sbb
jno
popa
mov
dec
dec
mov
ret
sahf
pusha
xchg
std
mov
mov
sarb
mov
movsb
incb
inc
lcall
pop
test
imul
call
roll
bound
test
fnstcw
dec
out
mov
inc
mov
les
pusha
cmp
in
jecxz
ret
cmp
push
and
int
test
fsubrl
out
mov
pop
mov
and
js
stos
mov
fdivrl
push
movsb
sbb
repz
bound
mov
fists
scas
sbb
cmp
sub
je
xchg
sub
xor
fs
dec
daa
idivl
push
jmp
fadds
scas
cmp
push
push
mov
movb
mov
dec
repnz
add
sub
dec
sbb
out
xor
jecxz
cld
fnsave
sbb
push
and
sub
add
pop
push
pop
shll
sub
mov
in
and
cmp
lock
daa
jg,pt
add
dec
sub
popf
inc
mov
aaa
mov
jecxz
repz
out
enter
xor
sbbb
fs
lock
inc
in
xchg
pop
lahf
icebp
mov
test
rcrl
je
mov
inc
cmp
aaa
dec
fwait
adc
jns
ss
adc
xor
in
xor
icebp
pop
subb
in
mov
aaa
xchg
scas
add
or
mov
push
mov
mov
div
cmpsb
movsl
mov
ret
fmull
rcr
jno
das
inc
movsl
jnp
mov
loop
aas
fs
cmp
add
xchg
mov
add
sahf
cltd
movsb
cmp
inc
adc
outsl
xchg
mov
sbb
les
jmp
insb
nop
adc
dec
not
lods
shlb
movsl
xor
pop
pop
dec
cmp
lahf
adc
xor
not
lahf
test
inc
faddl
mov
pop
stos
dec
or
cmpl
sub
xor
popa
cmp
or
inc
nop
jle
ds
fucom
int
fldt
jns
daa
jl
cmp
mov
sub
add
xlat
push
add
inc
clc
mov
xor
and
int3
lret
inc
xlat
pop
rcll
mov
mov
xchg
ja
and
in
cmp
adc
jmp
jne
or
jmp
shll
cmp
popf
jl
mov
push
and
xchg
cmp
gs
xchg
pop
sub
repz
jle
hlt
enter
pop
stc
adc
pop
jns
sahf
in
test
xor
jb
int3
pop
or
rorb
cmp
sub
mov
push
sub
fbld
push
rolb
clc
rol
aad
mov
or
pop
addr16
jnp
leave
fnstsw
ret
ds
and
pop
sub
push
popf
dec
das
push
push
int3
adc
sub
lret
cmp
cmp
mov
mov
pop
inc
cmc
addl
mov
lret
pop
call
sub
cmp
add
inc
into
orl
pop
scas
pop
jle
xchg
bound
cmp
jmp
jge
rolb
movsb
and
jle
notb
and
adc
mov
inc
rcll
lds
jg
push
dec
fistl
or
pop
mov
movsb
fs
fstpl
adc
or
sbb
pop
loop
sub
ds
dec
add
fwait
pop
iret
push
int
int3
lret
cmp
pop
push
rcll
push
and
stc
push
pop
xchg
sbb
test
inc
imul
lds
aam
mov
mov
mov
ja
jb
test
or
add
and
enter
int
mov
mov
mov
push
stc
xchg
cmp
lahf
mov
in
jp
subb
jmp
out
jge
aam
xchg
pushf
cmp
data16
insb
imul
js
les
add
push
subb
and
test
jae
xchg
test
shlb
cmp
movsl
jmp
pop
push
and
mov
test
sub
insb
mov
je
repz
push
xchg
dec
pop
nop
pop
cld
loopne
lret
cli
and
xor
jp
ret
pop
or
mov
xchg
iret
lret
sbb
cltd
xor
dec
xchg
in
cmp
imul
fnsave
mov
fldenv
test
fldcw
push
xchg
int
sbb
jae
mov
inc
sub
xchg
xchg
sub
and
stos
mov
das
pop
sbb
push
dec
pop
gs
cmp
mov
fdivr
into
mov
xchg
or
lods
lock
pop
pop
out
xor
shrl
adc
shll
fstl
adc
and
lea
scas
xchg
mov
add
jle
lods
add
inc
inc
in
jo
fcmovne
adc
bound
cmp
xchg
push
clc
jle
xchg
rclb
mov
icebp
mov
ljmp
pop
lods
lods
mov
cli
xchg
popa
lahf
popa
or
jle
aas
or
scas
jg
inc
xchg
fstps
sbb
in
out
pop
insb
popf
lret
xchg
and
push
xor
or
ljmp
adc
sarb
or
sub
pushf
push
lret
enter
rol
add
jg
ljmp
test
fwait
adc
sarl
fdivr
pop
xor
popa
cld
pop
shlb
xchg
in
jb
add
mov
rclb
mov
pop
outsl
xchg
pop
and
gs
cmp
jae
ror
scas
and
pop
loope
and
xchg
lds
out
data16
js
icebp
mov
inc
sub
insl
cli
xchg
cltd
and
xchg
ja
mov
in
jg
clc
cmp
lea
add
jmp
mov
add
xor
rdtsc
out
fiadds
cmpl
mov
cmp
sti
jp
test
or
lock
push
sub
add
andb
dec
and
push
loope
sbb
bndldx
ret
jge
jecxz
or
mov
mov
lods
push
mov
hlt
xor
fildl
scas
jg
or
sti
sbb
fyl2xp1
dec
push
add
adc
xchg
dec
push
cmp
mov
push
dec
mov
jno
and
mov
movsb
in
subl
lret
adc
xchg
inc
out
add
leave
aas
sbb
std
jmp
cmp
cmpsl
aad
mov
rorl
mov
xchg
lock
push
and
sbb
cld
inc
sbb
xor
inc
xchg
xchg
and
pop
sub
test
push
jp
or
jno
dec
mov
pop
sub
shrb
repnz
cmc
leave
aaa
stos
cmp
push
or
xor
or
and
mov
ret
imul
fisubrl
jg
and
scas
cmp
cmp
inc
jl
add
adc
test
in
mov
insl
or
nop
push
out
leave
jnp
les
aad
cmp
jo
icebp
mov
mov
test
or
lret
push
dec
mov
mov
mov
push
jo
dec
in
sti
pop
ret
and
enter
jp
pushf
mov
mov
inc
xchg
xchg
js
push
push
aam
inc
daa
dec
jmp
leave
adc
out
adcl
dec
pop
adc
fisubs
cmp
cmpsb
push
inc
out
push
push
jo
nop
add
je
mov
mov
pop
mov
mov
gs
fmuls
ss
pop
pop
test
jns
xchg
xchg
inc
inc
insb
pop
out
enter
ljmp
xor
addl
lret
jnp
stos
in
mov
ss
xorl
test
mov
lret
and
aaa
push
sbb
fsubr
mov
jp
std
and
or
jl
xor
out
int3
insl
pop
hlt
into
dec
dec
inc
inc
filds
and
out
insb
lahf
sbb
mov
xchg
lret
xor
fnstcw
cmp
stc
cmpsb
jmp
gs
ss
lods
xchg
cmp
jg
sub
mov
jl
push
jns
push
mov
and
inc
sub
out
mov
xchg
mov
mov
xor
aam
adc
mov
jns
or
jbe
pop
pushf
cwtl
hlt
sub
mov
stc
cmc
pop
lods
and
push
jg
mov
or
mov
iret
repz
cld
pop
lods
mov
imul
nop
js
pop
sbb
sti
xor
jle
push
inc
push
ret
mov
mov
mov
cmp
push
out
pop
push
movsl
repnz
stos
xchg
sbb
dec
aas
xchg
adc
loopne
int
into
adc
xchg
arpl
adc
mov
fadd
pop
pop
jmp
sbb
or
sbb
jle
pop
aas
xchg
adc
rorb
xchg
mov
ja
adc
xor
lea
roll
pushf
jo
mov
push
lods
xor
dec
arpl
movsl
mov
stos
addr16
and
cmp
xlat
es
popf
rcrl
ror
hlt
mov
add
dec
das
cld
subl
cmp
sbb
pop
fdiv
inc
std
pop
imul
dec
and
mov
nop
pmaxub
mov
jb
shlb
mov
test
rolb
movsl
ret
iret
cs
xor
mov
jmp
test
lret
flds
outsb
pop
mov
into
mov
jnp
sub
add
xchg
push
ljmp
adc
pop
adc
jns
jne
lods
aas
push
or
scas
jno
shlb
enter
mov
adc
push
sub
pop
sbb
movsl
fwait
cmp
jp
jmp
jmp
cltd
sti
popa
addl
test
in
mov
rcr
ret
mov
pop
test
dec
jo
jb
fdivl
xchg
in
sub
test
add
sub
dec
mov
shlb
jecxz
sbbb
add
ss
in
add
add
test
fnsave
ja
push
fisubrs
fstl
add
nop
ss
or
add
ret
int
test
shrb
test
jnp
repnz
sbb
xchg
xor
mov
jne
data16
sbb
lahf
dec
sbb
add
push
enter
mov
inc
pop
cmp
push
and
aam
jo
mov
js
jg
mov
mov
dec
sub
mov
imul
lods
mov
outsb
in
cltd
cltd
mov
clc
pop
add
nop
in
shrb
mov
fstps
add
test
fcoms
ret
xor
insb
cli
mov
cmp
mov
leave
ljmp
call
jg
sbb
jp
sbb
jb
ja
mov
notl
in
into
shll
push
mov
ficompl
fmuls
out
jnp
jb
and
sti
jmp
inc
loop
mov
adc
mov
ss
sti
and
outsl
adc
sbb
enter
cltd
jnp
jmp
pop
mov
imul
out
inc
dec
rcl
inc
dec
add
mov
dec
movsl
inc
cltd
inc
unpckhps
dec
xchg
fisttpll
dec
cs
xchg
mov
dec
arpl
push
dec
adc
stos
mov
out
out
cmp
xor
popf
outsb
push
sbb
jbe
pop
pop
iret
mov
subl
jne
add
xor
push
sbb
stos
jecxz
fwait
and
add
sahf
sub
mov
andb
imulb
iret
or
in
sub
adc
jo
andl
cmp
push
fsqrt
loope
sbb
out
scas
movsl
push
test
bnd
dec
xchg
les
imul
sbb
cmp
inc
add
mov
ds
xor
mov
iret
insl
inc
mov
xor
fcoms
and
xorps
and
pop
scas
or
cltd
mov
mov
pusha
icebp
push
push
inc
aas
sbb
pop
and
setle
cmpsl
pop
mov
sbb
sti
pop
cmp
xor
push
idiv
pop
ret
jl
xlat
loope
cmp
test
push
mov
adc
fs
in
push
stc
mov
les
nop
in
xor
push
fcompl
imulb
shrl
xchg
add
arpl
shl
xor
push
adc
mov
fldl
push
mov
mov
rcrl
jg
movsl
pushf
mov
es
aam
mov
test
call
test
jl
mov
imul
dec
lea
push
sbb
mov
addl
mov
jbe
scas
add
inc
pop
ret
pop
addl
adc
adc
jb
push
and
imul
xor
add
test
cmp
adc
movsb
out
movl
xchg
jb
cltd
mov
push
cmpsb
and
pop
dec
ret
pop
idivl
sbb
mov
pop
mov
pop
pop
fdiv
pop
mov
enter
subl
jmp
int
lahf
mov
repnz
ficomps
movb
aam
mov
fwait
pop
or
imul
bsf
fwait
jnp
movsw
call
push
or
adc
pop
dec
ret
pop
jne
sub
pop
jle
jbe
add
pop
cmc
imul
adc
leave
jns
outsl
outsb
decb
xchg
decb
mov
aaa
mov
fnsave
fmuls
cmpsb
mov
std
adc
mov
les
pop
mov
addb
sbb
jle
cmp
pop
xchg
inc
xor
roll
inc
rcll
jg
push
sbb
ret
xchg
js
inc
inc
test
mov
sub
jmp
int
cmp
cs
sbb
inc
les
adc
mov
dec
nop
xorl
sbbb
cs
fsubrp
add
mov
mov
or
fwait
xchg
cmp
jne
push
mov
cmp
sbb
test
dec
or
mov
cltd
push
cwtl
outsb
push
push
dec
xor
jp
dec
scas
adc
or
int
sub
mull
in
push
aad
and
sub
pop
mov
mov
and
pop
movsb
sti
fisubl
push
add
out
cmp
ljmp
sbb
fs
jns
fldl
xor
test
xor
lret
popa
mov
nop
jp
fstpl
outsl
sbb
inc
movsl
inc
subl
mov
mov
mov
xchg
mov
rorl
cmpsl
add
or
dec
dec
filds
inc
test
pop
mov
ds
in
andb
add
mov
jo
test
inc
mov
jae
in
popa
daa
adc
stos
or
jbe
mov
icebp
mov
add
mov
xor
stos
gs
repnz
adc
dec
mov
imul
jmp
add
adc
dec
test
in
add
jge
cltd
rorb
mov
shl
nop
mov
mov
lock
xchg
out
push
jl
xor
jecxz
sahf
fstp
sub
push
pop
mov
orb
pop
mov
ds
jmp
ljmp
jae
stos
inc
out
push
push
push
pop
cmp
stos
enter
test
xchg
cmp
mov
es
push
fcmovnbe
out
inc
jne
flds
lock
inc
aas
scas
mov
fwait
jno
mov
or
in
lcall
mov
add
cli
jecxz
mov
dec
nop
dec
int3
pop
loopne
xor
repz
sub
mov
xor
hlt
lods
mov
popa
xlat
scas
cmp
clc
sbb
and
mov
mov
xchg
dec
arpl
mov
les
pusha
pop
sbb
mov
popf
cmp
pop
enter
cmp
add
push
xchg
add
mov
or
repz
jp
aad
test
repz
pop
mov
popa
faddl
push
loopne
repz
subb
push
xchg
mov
pop
push
call
mov
loop
das
mov
xchg
shrl
icebp
jl
in
push
pop
xor
adc
out
lods
addb
mov
mov
das
mov
fsts
jg
push
mov
add
mov
cwtl
test
mov
jb
call
ret
gs
loop
pop
cmp
push
push
cltd
mov
and
cmpsl
lret
in
loop
sub
jns
testb
cmp
push
insl
or
xchg
cwtl
mov
das
nop
and
xchg
loop
aad
cwtl
jo
mov
repz
std
scas
int3
imul
jae
sub
and
lock
les
repnz
cmp
rcrb
or
inc
repnz
cmc
jecxz
sbb
sbb
inc
imul
xor
push
dec
mov
push
std
mov
arpl
or
es
fists
lahf
adc
and
jge
les
push
mov
mov
sti
jnp
cli
popf
jmp
sub
mov
cld
ds
inc
sub
sahf
xchg
psrad
mov
orb
or
xchg
sbb
outsb
inc
push
shl
adc
cmp
xchg
jmp
xor
je
out
ror
mov
mov
cld
test
inc
xchg
test
je
mov
xor
shll
icebp
sarl
movsl
xchg
sti
and
into
mov
sub
pop
dec
inc
mov
xchg
shll
push
paddsw
or
test
xor
inc
dec
add
push
mov
std
push
jmp
and
add
inc
lea
bound
jb
jbe
fidivl
pop
cmpsb
inc
in
mov
test
xchg
jg
syscall
stc
pusha
sub
pusha
xor
out
daa
adc
imulb
lods
push
dec
data16
push
push
aaa
fs
xchg
pusha
push
sub
push
popa
das
das
repz
ja
inc
jge
xchg
mov
jns
sbb
lods
cmp
sbb
call
and
cmp
dec
push
fstl
or
rorb
pop
sub
mov
xchg
add
lcall
or
add
lods
xchg
movsb
mov
mov
hlt
add
fnstcw
imul
or
fdivl
filds
push
sub
aaa
push
pop
in
xchg
sub
aas
push
rcrl
repz
dec
aad
data16
cmpsl
jp
jno
fcmovb
push
sub
mov
aad
push
push
lret
dec
dec
repnz
xlat
movsl
hlt
or
or
lret
mov
mov
add
mov
ja
push
push
fsubrl
or
in
repz
jb
scas
jge
xor
mov
imul
in
and
cli
sbb
iret
mov
jbe
jp
fwait
adc
jle
dec
xchg
jb
cmpsl
in
cmp
xor
or
ret
fsts
bound
jl
dec
popa
or
cli
adc
lock
xor
insb
pop
sbb
inc
mov
push
pop
xchg
sbb
xor
dec
push
xor
gs
push
mulps
pop
inc
jmp
xchg
jp
mov
mov
in
xor
popa
jmp
mov
dec
imul
lods
push
adc
sbb
bnd
outsl
inc
fimull
dec
fwait
in
xorb
outsl
cli
in
js
cld
cmc
and
loop
fcomi
xchg
clc
mov
mov
icebp
mov
and
in
and
fnstsw
add
fisubrl
push
inc
pusha
push
ret
lock
mov
push
mov
in
and
pop
mov
in
fxam
push
cmp
jo
adc
fdivr
leave
xor
add
mov
mov
push
push
frstpm(287
mov
popa
rcrb
pop
jne
cmp
cmp
or
stos
fidivrs
stos
daa
rolb
dec
scas
pop
pop
rorb
and
inc
sahf
insb
jbe
in
sbb
adc
in
adc
lret
pop
out
cmc
jb
xchg
imul
or
lock
fwait
mov
xchg
push
pop
add
dec
nop
imul
and
sbb
in
mov
idivb
and
dec
int3
adc
sbb
negl
mov
mov
movsb
dec
mov
and
movsl
push
jb
xor
xor
dec
pop
lods
jge
inc
mov
dec
pop
jno,pt
push
rol
jno
jg
push
sbb
ret
and
notl
sbb
loop
mov
addr16
sub
test
fistpll
add
sub
mov
fsubrl
jne
cltd
int3
or
jmp
or
daa
mov
push
mov
std
test
nop
fcomps
cmc
lret
lds
sbb
std
test
push
in
sbb
and
sbb
xchg
sub
aas
sti
jne
and
fs
fisubrs
add
movsl
lret
or
out
xchg
scas
lret
data16
clc
leave
fbstp
xchg
sub
jmp
fstpt
sub
sbb
sahf
adc
or
rclb
mov
sub
stos
scas
pop
sbb
xor
leave
and
pop
inc
cltd
xorl
testb
lods
jmp
sti
pusha
cs
adcb
insl
or
fistpl
mov
pop
push
hlt
jmp
sbb
cmovns
adc
pushf
fsubrl
inc
nop
jnp
outsl
mov
pop
cmc
adc
stc
subb
pushf
int3
insl
push
jmp
jnp
xchg
sbb
jge
mov
inc
jle
call
mov
std
std
sub
push
es
test
inc
cmp
ss
lahf
jo
or
daa
xor
push
ror
insl
test
push
sub
pop
arpl
popf
and
cli
test
inc
cmpsl
in
lock
adcl
add
pop
cmp
ffreep
fsubr
dec
in
push
clc
movsl
jb
sahf
dec
mov
and
loop
add
arpl
lods
cs
ss
jl
movsb
je
or
ja
adc
out
cs
cmp
adc
or
dec
pop
pop
fmull
loope
dec
js
pop
inc
cmpsl
mov
and
adc
test
loop
cwtl
cmp
sub
cmc
movsb
xchg
dec
test
in
nop
inc
rol
xchg
pop
xor
jnp
pusha
and
push
in
cltd
je
mov
pushf
mulb
inc
pop
lret
fucomi
sbb
xor
push
pop
adc
pmuludq
dec
cwtl
pop
imul
jp
in
clc
xor
loop
cld
out
xchg
mov
lock
dec
inc
mov
fmulp
or
addl
adc
fbstp
lcall
lahf
stos
js
mov
inc
in
lahf
popf
outsb
mov
mov
pop
add
mov
fwait
sbb
ss
bound
sub
loopne
or
xor
mov
lock
stos
mov
nop
pop
add
dec
je
jae
or
push
mov
xchg
repnz
loop
xchg
out
sbb
jno
btc
clc
pop
dec
movsb
stos
pusha
outsl
cwtl
std
js
leave
shll
cmp
or
push
scas
ret
sbb
xchg
ret
add
loope
xlat
sahf
imul
xor
or
js
fstps
mulb
add
ret
lods
fisubl
or
int
sbbl
push
xchg
jmp
rol
outsb
pop
inc
hlt
cmpsl
outsb
popa
js
add
out
xchg
in
mov
in
or
lea
jecxz
pop
pop
sbbl
daa
and
xadd
fstpl
xor
in
addr16
out
add
leave
es
xchg
pop
aas
cmp
test
int
jmp
movsl
dec
pushf
dec
jecxz
je
pop
lcall
or
ljmp
cmp
aam
or
mov
mov
in
movl
test
scas
pop
dec
mov
jl
mov
sub
lock
or
ja
jle
fisubrl
shlb
stc
sub
pushf
andb
xorb
xor
cmp
mov
arpl
loope
fldl
mov
fldl
lcall
push
aaa
cmp
ljmp
pushf
loop
pop
sub
mov
std
fstpt
and
xchg
xchg
mov
scas
rorb
fs
xor
sbb
out
inc
and
cltd
push
mov
mov
lret
ret
mov
mov
pop
clc
xor
jecxz
sbb
mov
dec
push
push
mov
data16
scas
sbb
cmp
arpl
mov
cmpsl
test
inc
lds
fwait
xchg
shlb
adc
das
out
scas
push
andb
gs
dec
lahf
sub
pushf
fdivr
inc
mov
jl
sub
sbb
cld
cmp
pop
cltd
lods
mov
push
mov
arpl
cmpb
lods
xor
rcrl
xchg
loopne
mov
xor
cltd
stc
adc
jg
or
jg
inc
add
leave
xchg
or
sbb
jmp
add
sub
aam
movsl
icebp
xor
lods
dec
or
jl
mov
adc
mov
shrb
inc
arpl
adc
mov
inc
push
add
add
or
xchg
rcll
dec
pop
push
and
js
push
sub
test
sub
and
mov
cli
movsl
mov
lds
in
cmc
iret
and
pop
push
xor
shlb
loope
rclb
sub
mov
hlt
mov
mov
call
mov
lret
push
cli
repz
outsl
dec
es
ret
into
push
aam
rorb
xor
push
fbstp
sub
loope
ss
jbe
xchg
or
add
mov
mov
js
cs
pop
xlat
mov
in
lods
sbb
mov
out
in
push
pop
in
leave
enter
into
add
cmpb
je
dec
lahf
sbb
icebp
test
cli
push
int3
lret
ja
push
pop
fmull
js
popa
scas
loop
outsl
push
push
or
loop
les
pop
lea
pop
mov
mov
sbb
stos
xchg
pop
xchg
call
adc
clc
inc
int
popf
mov
cmpb
sub
rcll
jmp
ljmp
lea
jl
mov
gs
pop
xchg
aaa
mov
push
push
mov
hlt
push
mov
lret
push
pop
test
sub
and
sbb
sbb
push
in
das
and
fidivrl
pop
sub
xlat
shlb
ret
mov
xor
inc
mov
push
jp
xchg
in
xor
in
mov
and
loop
jg
lock
sahf
push
mov
inc
mov
jg
jne
imull
lods
ret
dec
rclb
adc
jne
cmpsl
xchg
sarl
xchg
dec
mov
shl
pop
dec
mov
fmuls
or
jp
or
in
pushf
fsubrl
sub
lret
inc
or
int
jne
jmp
negl
sbb
cwtl
xor
outsl
fldcw
mov
dec
loop
cli
imul
movsb
insb
add
or
sarb
inc
ds
daa
sub
call
js
aaa
clc
movsb
mov
cmp
adc
add
repnz
inc
or
jns
dec
adc
mov
je
jns
sbb
lcall
push
fs
pop
jbe
jb
mov
jb
je
pop
xor
dec
mov
mov
into
push
inc
filds
les
into
jle
xchg
pop
aaa
fs
lahf
add
mov
outsl
push
lds
jecxz
fmuls
dec
sbb
dec
jb,pn
xchg
lret
loopne
pop
arpl
lods
leave
inc
inc
mov
sahf
xchg
pop
out
test
mov
jno
sbb
add
insb
jb
sti
sbb
mov
inc
adc
sub
push
aad
rcr
add
shl
lods
inc
mov
dec
sar
adc
cmp
push
jo
stos
xor
leave
das
jle
push
pop
repz
inc
add
hlt
mov
mov
dec
push
call
test
xchg
jae
push
scas
mov
lds
xchg
stos
or
add
ret
inc
jae
shrb
sbb
insb
popa
push
and
in
add
and
add
xor
jg
daa
mov
rcll
cmpsw
pop
mov
adc
cmp
pop
cmpsb
xchg
sbb
in
insb
add
sub
inc
scas
mov
sbb
mov
dec
mov
mov
jl
pop
push
test
xchg
inc
mov
jb
clc
inc
cmp
sarb
xor
aas
movsl
lahf
cmpsl
cwtl
jo
inc
jne
test
mov
fadd
adc
xchg
push
aad
stos
jge
or
cmp
mov
or
adc
sbb
cltd
or
or
int
shl
or
inc
jne
inc
test
push
adc
inc
or
in
pop
sti
shrb
inc
dec
xor
out
test
and
in
adc
adc
ret
add
xor
mov
enter
dec
push
cmp
pusha
es
in
cmpsb
lcall
daa
stos
imul
cvtdq2ps
cmp
jns
mov
les
outsl
adc
fists
jge
and
mov
inc
cmp
push
mov
rorl
out
xchg
in
mov
loope
mov
pop
xor
ds
rcr
sub
fwait
adc
test
fwait
push
push
ret
data16
jne
divb
add
cmp
in
xchg
es
into
lea
fildl
xor
mov
pop
jo
lds
cmc
xor
mov
pop
pop
mov
mov
fnsave
ljmp
movsb
inc
int
sub
out
daa
mov
es
rclb
sub
adc
sbb
mov
cli
push
xchg
xchg
rclb
test
jnp
in
and
std
loop
and
jno
aas
enter
add
imul
movsl
add
push
push
jl
cwtl
mov
inc
xchg
mov
mov
push
pop
push
mov
movsb
xchg
xchg
jo
xlat
xor
push
sbb
icebp
aad
rorl
or
cwtl
jnp
dec
mov
insl
mov
mov
inc
push
add
mov
out
mov
cwtl
rorb
mov
aad
sbb
lods
pop
mov
movups
mov
aad
xchg
scas
cmp
inc
mov
lds
loopne
inc
and
fimull
mov
int3
cmp
inc
or
inc
xchg
jb
inc
mov
mov
mov
sbb
mov
xor
test
jo
div
add
popa
je
insb
mov
popa
lcall
aas
cwtl
repnz
adc
ds
lock
sbb
adc
insb
pop
mov
xchg
or
xchg
sub
paddd
aas
fisttps
push
push
sbb
call
insb
subl
clc
lcall
adc
or
xchg
and
dec
sub
call
addr16
push
loopne
out
or
push
adc
adc
or
pop
cmpsb
in
dec
sbb
dec
jo
nop
jmp
push
shrl
sub
mov
les
jg
jl
inc
aas
sub
xlat
fimuls
je
movsb
or
push
jno
cmp
sbb
in
sti
jge
dec
mov
and
movsl
pop
push
push
roll
lods
xor
mov
fisubrs
ds
mov
jae
lret
pop
lret
inc
jbe
cmp
scas
rorl
mov
bound
and
sbb
mov
jne
xchg
pop
mov
pop
dec
mov
push
push
rcrb
ljmp
jnp
mov
cmpxchg8b
popa
loopne
adc
sbb
pop
lretw
push
fcmovnu
popf
jnp
fisubl
mov
pop
sbb
push
sbb
jmp
xor
hlt
daa
xor
sub
dec
in
nop
sbbb
jmp
xor
sti
and
pushl
add
rorb
stos
sahf
sbb
divl
mov
fsubs
adc
dec
data16
jnp
inc
sahf
mov
xlat
fwait
loop
inc
pop
adc
sub
sub
mov
xchg
test
and
jbe
hlt
or
mov
adc
lcall
mov
scas
scas
iret
add
sahf
sub
in
push
jmp
and
jne
popa
mov
sbb
aas
or
and
jno
adc
push
inc
pop
test
or
inc
push
adc
or
xor
add
or
mov
out
cltd
stc
into
addr16
xchg
arpl
fildl
push
pop
stos
adc
push
inc
or
or
mov
xchg
jno
and
clc
mov
or
fmull
push
or
xchg
add
sbb
adc
jl
outsl
and
mov
sbb
shll
pushf
ja
les
jnp
cld
sti
pop
cmpsb
mov
sahf
mov
dec
push
orl
cmp
outsb
loop
mov
test
lods
mov
inc
dec
push
add
hlt
js
sbb
mov
cmp
or
and
mov
data16
shlb
clc
and
jb
addr16
into
pop
mov
push
push
imul
jp
push
out
arpl
pop
jns
adc
mov
movsl
frstor
pop
aas
aas
mov
addb
cmpsb
add
loopne
pop
pusha
xchg
xchg
mov
repnz
addb
push
mov
mov
fldenv
clc
aad
push
cwtl
pop
mov
cmpsb
lea
mov
xchg
mov
add
jbe
pusha
push
cmp
xlat
xor
or
pop
insb
jp
mov
aaa
nop
or
mov
push
jp
or
sub
mov
pop
dec
std
xchg
jmp
xchg
cmp
daa
inc
pop
fsubrp
mov
js
jmp
loop
lahf
shll
mov
push
into
ret
aaa
and
scas
push
mov
push
push
dec
or
in
daa
inc
pop
dec
scas
es
xchg
lds
xchg
inc
ljmp
pop
fwait
add
aas
in
jae
mov
inc
sub
enter
xchg
movsl
xor
bound
add
or
icebp
mov
das
das
ret
stos
sti
fsubs
or
jge
cmp
jo
dec
out
in
sub
mov
and
mov
in
mov
or
ljmp
xchg
imul
dec
fmul
sub
and
ss
mov
pusha
sbb
inc
sbbb
les
aam
in
or
add
insl
jne
je
repnz
int3
mov
jcxz
or
cmpb
clc
jo
mov
add
jecxz
add
sub
xorl
jmp
imul
imul
outsb
ja
xchg
scas
sub
test
lea
jae
inc
call
addr16
scas
jecxz
scas
aaa
stos
push
pop
movsl
add
fildll
dec
mov
sbb
ficoml
into
jle
fnsave
mov
ret
lahf
xchg
mov
or
in
cltd
mov
mull
mov
stc
adc
into
out
pop
test
inc
cmp
insb
xor
push
mov
mov
xchg
cmc
cmp
adc
es
int3
fwait
mov
xchg
jno
xor
bound
xchg
and
jg
mov
imul
push
jge
jecxz
lock
lods
cmp
or
subl
mov
and
sbb
xchg
stc
mov
stos
mov
cmp
jnp
loopne
aad
and
hlt
sub
imul
inc
jmp
cltd
and
mov
mov
adc
add
in
repnz
sbb
adc
imul
ljmp
xor
fcmovne
mov
rcll
rorl
and
jmp
jno
sbb
mov
scas
mov
rorl
and
sti
mov
mov
repz
xchg
cmp
arpl
adc
int
xchg
iret
sbb
push
ret
jecxz
mov
push
fnstenv
fildll
aaa
mov
cmp
sub
and
rorl
sbb
ss
stos
cld
mov
loopne
pop
lds
sub
inc
xchg
push
movsl
rcll
jge
cmp
jns
shr
xor
negl
push
xor
jo
lcall
sbb
push
hlt
scas
mov
bndmov
gs
icebp
lret
pop
adc
mov
jg
daa
and
popa
test
pop
pusha
inc
mov
adc
inc
cmp
cmc
xchg
ljmp
push
addr16
mov
jmp
pop
repz
xchg
push
and
aaa
dec
jge
and
push
push
xchg
xchg
cmc
sub
add
out
fstpt
add
and
and
dec
sbb
push
dec
mov
outsb
in
jge
mov
or
nop
les
dec
hlt
jbe
mov
mov
add
int
and
dec
xchg
outsb
jle
iret
int
test
testb
jl
arpl
adc
sub
cltd
inc
dec
mov
pop
or
rorb
jae
sbb
mov
popf
push
xor
dec
addr16
leave
inc
xor
stc
add
jae
fidivl
push
or
pushf
adc
repz
notl
fdivrl
lock
pop
call
js
outsb
xchg
nop
mov
sbb
cmpsb
mov
out
adc
out
lahf
dec
xor
es
shll
push
jno
test
mov
les
sub
add
outsb
inc
pop
cli
xchg
call
cltd
inc
mov
fistpl
int3
inc
cltd
aad
aas
imul
pop
insb
lret
andl
lock
mov
daa
inc
pushf
repz
sub
rcl
loope
mov
push
inc
sub
movsb
dec
xorb
mov
pop
or
je
mov
pop
ja
and
out
les
call
push
and
lods
mov
and
mov
ss
mov
and
movsb
test
push
or
movsb
dec
xchg
jae
dec
sub
js
mov
vunpckhps
leave
pushf
or
loop
fmull
mov
cmp
fwait
add
sbb
outsl
jbe
mov
and
mov
pop
xor
ret
cli
mul
adcb
dec
xchg
arpl
mov
clc
ret
inc
mov
mov
pushf
out
sub
xor
int
pop
pop
push
insb
aad
insl
mov
test
int3
lods
iret
lea
je
push
fildl
mov
ret
scas
mov
es
pop
xchg
xor
outsb
pop
jne
sub
dec
sub
mov
inc
ud1
aas
mov
cmp
or
sti
sbb
js
push
push
adc
out
les
in
jae
loop
add
std
cltd
ficoml
fstpt
in
aad
test
sub
and
mov
outsl
sti
inc
mov
je
push
fucomi
in
mov
jg
sti
pop
sbb
xor
insl
popf
fwait
mov
add
jl
sti
mov
xchg
das
leave
mov
and
ret
std
icebp
sub
push
mov
and
push
ss
into
sti
adcl
outsl
testl
mov
aas
xchg
jbe
dec
cmc
or
les
lock
sbb
addr16
mov
xchg
mov
inc
mov
mov
in
ret
dec
jae
jne
dec
out
or
aas
int
test
sbbb
add
test
dec
pop
push
mov
and
xlat
sub
pop
mov
std
jge
adc
xor
push
pop
xor
sub
je
adc
dec
movsb
ret
sbbb
push
mov
iret
out
insl
jecxz,pt
cmp
in
and
mov
jno
sub
mov
cld
mov
jae
repnz
sete
cmp
jmp
mov
ss
xchg
popa
clc
in
pop
aam
in
xchg
bound
and
inc
repnz
jns
lea
movsl
sbb
fidivrl
xchg
push
and
stos
mov
aaa
sti
icebp
xor
dec
dec
div
cmp
out
rol
xchg
insb
xor
cld
inc
cmc
xor
imul
test
pop
leave
negl
mov
mov
push
into
pop
xchg
jge
mov
push
scas
push
mov
rcrl
sbb
lcall
and
in
push
aad
push
pop
rcrb
jnp
pop
shll
xor
xlat
cld
sbb
popf
das
jb
xchg
mov
mov
nop
mov
frstor
ss
xor
das
nop
pop
push
gs
sub
push
test
inc
lock
mov
and
and
or
xor
pop
jmp
mov
pushf
and
jl
fbld
and
jl
mov
mov
in
pusha
sbb
and
lret
sub
fistl
adc
out
and
inc
dec
fnstcw
lods
pop
adc
inc
ds
push
test
and
xchg
pop
sub
ds
cmc
pop
dec
jne
cmp
inc
addr16
and
sti
ds
test
clc
mov
popf
cltd
out
stos
or
adc
mov
frstor
les
inc
lcall
fcoml
shll
popa
and
mov
push
push
arpl
out
call
cmpsl
jge
pop
or
imul
mov
fmul
sbb
xlat
test
jbe
jne
or
pop
movsb
bound
flds
xor
dec
in
jmp
test
mov
push
repz
adc
add
inc
test
or
jnp
fnstsw
xchg
int3
xchg
loope
pop
pushf
cmpb
scas
out
pusha
push
xor
idivb
fs
xchg
jmp
aaa
pop
enter
pop
add
int
and
dec
lret
ret
lcall
loop
out
ret
lret
xchg
pop
push
jmp
rolb
leave
rcl
imul
inc
jmp
lea
outsb
rorb
sbb
ds
idivb
hlt
cmp
scas
jl
push
data16
sbb
pop
jge
push
aad
or
fiadds
sbb
add
ret
insb
pushf
loope
xorl
mov
mov
xlat
popa
orb
mov
leave
adc
mov
lea
out
pop
inc
adc
mov
cs
xchg
mov
push
sbb
pop
sub
dec
cs
int3
and
sbb
out
add
out
mov
popf
inc
push
dec
jmp
pushf
jbe
gs
mov
das
bswap
bound
xor
inc
lret
pop
xchg
in
pop
andl
or
lods
and
xchg
test
sbb
in
jnp
adc
mov
ret
sbb
rcr
pop
xor
mov
mov
sti
movsl
push
pop
inc
xchg
xor
dec
arpl
hlt
xor
adc
or
push
or
add
out
stc
add
adc
add
daa
aad
xchg
je
test
xor
dec
test
in
jecxz
ret
mov
mov
mov
fs
mov
push
xor
pop
out
mov
mov
scas
mov
inc
std
inc
mov
mov
sub
cmpsl
push
cmpsb
and
fisubrl
stos
aas
ds
xchg
xchg
ljmp
add
aad
nop
or
sub
cmc
xor
xchg
mov
sub
pusha
jns
jb
shrb
in
std
add
mov
fcompl
dec
int
jmp
inc
lret
mov
xchg
push
inc
jns
fwait
inc
movsl
int3
dec
push
jns
sbb
scas
xchg
outsl
scas
loop
mov
and
adc
pop
adc
push
gs
inc
pop
movsb
xchg
push
cmp
lods
cli
xor
ret
mov
add
fsubrs
cmpsl
and
shl
loope
mov
sbb
push
daa
push
and
inc
shrb
in
into
sub
loop
pop
es
lods
aad
sbb
xchg
push
xor
xor
arpl
loope
or
xchg
xchg
add
or
push
jno
sbb
xor
sbb
push
cmc
fsubs
adc
mov
push
push
sbb
lock
mov
push
shl
addl
adc
jno
and
mov
adc
shrb
lods
sbb
jnp
mov
out
movsl
pusha
in
leave
ds
out
mov
and
mov
dec
cwtl
in
enter
mov
or
bound
inc
sti
lock
xchg
pop
cmpsb
pop
mov
nop
addr16
cmpsl
push
mov
pop
out
mov
adc
mov
dec
xchg
cld
ds
adc
out
iret
push
inc
push
fwait
add
or
push
dec
rol
dec
mov
add
mov
mov
adc
jne
sbb
ret
push
lea
out
test
stos
cmc
inc
jl
rcll
pusha
or
loop
popa
jle
sub
and
lret
pushl
mov
pop
in
popl
xchg
xchg
in
fildll
push
add
add
inc
mov
adc
jne
adc
ret
jmp
test
jl
and
sub
in
mov
mov
js
xchg
inc
sbb
cmp
or
cmp
adc
ja
add
pop
or
std
out
das
out
fimuls
insl
aas
insl
fists
xor
jae
add
shlb
adc
sbb
adc
aaa
pop
rorl
adc
dec
xchg
cli
decb
jbe
out
cmpsb
dec
sub
ja
outsl
data16
shlb
std
movsb
insb
push
int
mov
test
mov
call
push
les
repz
test
xchg
push
jnp
sbb
in
inc
and
push
scas
aam
sbb
lock
jae
pop
aam
push
mov
dec
adc
fnstcw
mov
inc
lock
jae
mov
xor
xchg
push
pop
jae
pushl
in
les
sub
and
mov
mov
sub
adc
rcpps
inc
add
hlt
mov
xlat
lea
sbb
mov
or
cmp
pop
pop
push
cmp
mov
pop
mov
shrb
loope
adc
jno
mov
mov
test
or
dec
xlat
dec
push
sbb
outsb
mov
mov
inc
sbb
pop
jns
xchg
ja
or
xor
push
pop
sub
int
imul
jbe
mov
out
in
add
test
div
push
int
pop
inc
sub
cmp
jae
inc
pop
repnz
in
roll
fcmovnb
out
dec
dec
push
inc
adc
and
ja
nop
push
cmp
adc
cmp
cmp
adc
popf
outsl
mov
movl
xor
jo
jne
pop
mov
adc
pop
hlt
hlt
inc
fidivl
pop
jb
int
push
mov
jnp
mov
inc
stc
mov
add
mov
fcoml
rcll
test
mov
js
fsubl
dec
add
pop
mov
mov
xchg
inc
and
xchg
icebp
ds
mov
ret
outsl
std
repnz
jnp
jo
xor
dec
sar
std
jle
fmul
jge
jle
dec
add
test
and
idivb
imul
mov
aaa
scas
mov
sbb
pusha
outsb
fwait
or
shll
or
sbb
test
lret
aaa
jnp
fs
mov
lea
addr16
sub
or
outsl
jle
je
mov
movsl
iret
test
add
js
inc
dec
push
cs
scas
ret
shll
jmp
ja
rcrl
jo
jo
shr
inc
pop
pusha
negb
scas
cld
aaa
push
dec
addb
gs
mov
adc
adcl
fiadds
adc
sub
xor
fwait
jecxz
ret
inc
fs
mov
adc
pop
in
dec
fwait
in
pop
pop
mov
mov
or
jmp
push
sub
and
mov
add
or
jecxz
jl
testl
push
pushf
scas
and
mov
ss
movsb
imul
push
imulb
mov
pop
stos
cmp
sub
out
xchg
xor
jne
xchg
push
lock
scas
test
inc
in
fs
inc
cmp
pop
arpl
outsl
fdivr
aaa
cmpsb
loop
add
pop
das
xor
push
mov
mov
dec
mov
fwait
dec
ds
sbb
mov
loop
fcmovnu
int
or
sub
adc
adc
or
xchg
int
sub
cmp
subl
or
das
loop
fadds
rorl
icebp
stos
and
adc
xor
stos
push
dec
xlat
insl
sbb
mull
loopne
mov
aaa
inc
mov
clc
xchg
out
cmp
mov
lahf
xchg
stos
fisubl
dec
cmpl
mov
jns
xor
fbstp
pop
push
mov
dec
mov
jno
mov
or
out
inc
inc
pop
inc
pop
mov
rorl
sbb
adc
test
inc
stos
lds
mov
lds
mov
test
and
xor
dec
mov
mov
cltd
mov
sub
inc
xchg
push
iret
jmp
or
sub
repnz
imul
cmp
mov
jl
aaa
sub
add
pop
xchg
inc
aam
pop
daa
out
xor
dec
ficomps
pop
popf
dec
pop
cmp
es
cmpsb
jbe
in
ret
xchg
cld
ljmp
xchg
push
loopne
loop
cmp
jo
mov
mov
fwait
mov
pop
inc
push
je
in
push
push
add
xchg
popa
jmp
mov
adc
sub
mov
adc
mov
fiadds
fdivr
adc
or
push
adc
fcomps
cmp
adc
pop
pop
or
pop
dec
add
add
addl
sbb
lahf
mov
leave
inc
mov
sbb
mov
dec
mov
std
das
les
in
cmp
cmpsb
lea
dec
xchg
test
mov
jbe
push
sub
or
xor
pop
xlat
mov
pop
mov
fs
out
pop
push
adc
out
xor
jl
or
mov
outsb
outsb
cmpsb
mov
ret
int3
leave
clc
add
test
adc
add
sbb
sahf
mov
add
insb
inc
add
sarb
ds
fmul
cld
sbb
mov
jp
pop
outsb
aad
pop
lcall
push
dec
lods
push
lods
bound
out
fstpt
push
js
sbb
ret
icebp
jecxz
cmp
push
sti
jnp
sub
sbb
mov
cmp
sbb
jecxz
adc
ss
jbe
mov
mov
fcmovbe
fadds
add
shll
mov
pop
jb
adc
aaa
shl
jmp
pop
in
out
pop
sbb
ss
std
arpl
mov
cli
pushf
das
mov
push
fs
push
inc
xchg
arpl
add
clc
pusha
clc
fcoml
rorl
out
inc
pop
sub
jo
mov
scas
xchg
xor
inc
cmpsb
add
jle
cmp
inc
sahf
sbb
iret
and
or
xchg
jne
icebp
insl
scas
mov
mov
aam
daa
mov
insb
sbb
mov
and
mov
xchg
lahf
cmp
jecxz
adcl
jle
push
sub
lods
xchg
add
jl
push
js
daa
sbb
mov
mov
test
mov
cmp
lods
ja
or
jg
inc
mov
push
popf
inc
out
mov
xor
mov
mov
xor
int
je
icebp
frstor
outsb
out
push
xchg
std
or
sti
inc
insb
out
scas
push
mov
bound
pop
pushf
fsub
push
in
nop
lret
xchg
fsubs
dec
cli
out
inc
ret
dec
inc
mov
dec
adc
int
arpl
mov
xor
xchg
add
adc
inc
inc
sub
mov
mov
lods
lahf
notb
mov
push
je
push
push
mov
xor
loop
push
mov
xchg
scas
dec
test
popa
int
imul
mov
shll
xor
or
xorl
adc
push
cmp
cmpsb
movsl
mov
les
or
daa
popa
push
pop
jb
pop
test
mov
xorb
popa
jge
ret
pop
bound
jle
jo
in
ss
pop
sub
pushf
jno
inc
stos
mov
fs
cwtl
js
pop
dec
sbb
cld
or
movsb
push
push
test
xor
lahf
xchg
sar
inc
dec
ss
mov
shrb
movsb
jmp
leave
gs
aam
shl
and
fwait
jo
sbb
pop
xor
rcrl
xchg
xor
jmp
pop
add
fdivrs
mov
mov
stos
lods
out
push
or
shr
inc
imul
aas
ljmp
std
scas
add
mov
xchg
add
in
inc
mov
xor
mov
jae
jo
clc
xchg
fstpt
push
adc
inc
int3
mov
lret
adc
pop
nop
movsb
cmpsb
mov
lock
cli
inc
jbe
cwtl
sbb
xor
lods
or
fildl
sub
inc
xchg
sti
rolb
test
hlt
movsl
sahf
dec
fcompl
add
in
pushf
push
dec
fnstenv
pop
sbb
cli
xchg
add
in
xor
data16
xorb
xor
lods
hlt
clc
xor
inc
push
xchg
jnp
mov
add
fcoml
ret
dec
jmp
negb
ret
sub
xchg
test
jb
jnp
sahf
shl
pop
or
and
ret
cmp
fsubp
out
xchg
sbb
mov
pop
add
outsl
mov
inc
mov
dec
icebp
and
xor
outsb
dec
in
xchg
sub
pop
loopne
gs
int3
icebp
sarl
scas
inc
jmp
jns,pt
fsubrs
cwtl
cld
sub
cmp
cmp
sub
mov
out
loopne
or
xchg
into
mov
call
push
int3
push
mov
movsl
mov
fbld
mov
jmp
repz
enter
rcll
loop
sub
addr16
lcall
cmc
dec
cltd
lcall
repnz
mov
adc
loope
stos
test
popa
cmp
mov
adc
addb
pusha
xor
movb
xlat
mov
xor
inc
out
mov
movsb
mov
cmp
sub
jge
lds
jp
in
inc
daa
adc
fsubp
das
mov
es
pop
jae
inc
add
rclb
mov
push
repnz
insb
sbb
and
mov
mov
ds
insl
inc
and
aad
sbb
std
lcall
push
push
adc
xor
mov
add
mov
les
pop
jmp
dec
xlat
adc
hlt
jbe
popf
add
icebp
or
jns
add
cmpsl
dec
sub
push
or
push
lcall
out
fildll
push
mov
lahf
imul
stos
sbb
int3
xchg
lret
rorb
aas
loop
jae
es
cmp
ret
adc
mov
xor
ss
sarl
add
mov
in
sub
out
adc
out
mov
je
pop
pop
in
int3
data16
les
call
cmp
insb
mov
cmpsb
sbb
mov
gs
stos
cli
and
es
fistpll
pop
xchg
fdivrl
andl
mov
pop
pop
mov
scas
aam
out
testb
mov
xchg
lds
repnz
not
xor
jnp
push
rcll
cmp
hlt
xchg
pop
jnp
dec
mov
data16
xchg
sub
push
sub
pop
dec
test
mov
mov
sbb
sbb
shr
jno
nop
xorb
jge
enter
repz
int
in
push
mov
outsl
pop
imul
or
jno
jnp
pop
xchg
cli
pop
sbb
lret
es
mov
jbe
sti
in
fisttps
jnp
and
lret
mov
jl
jae
clc
xchg
and
add
fstps
mov
pop
push
push
fmull
lods
jno
fimull
cmpsb
inc
in
fwait
jp
xor
push
movb
adc
push
ret
push
not
adc
xchg
push
add
cmpb
divb
jnp
int
rolb
arpl
aaa
es
mov
outsl
and
push
lahf
pop
mov
mov
in
cmc
movsl
xchg
push
mov
add
mov
sbb
addr16
pushf
pop
int3
fisubl
dec
das
xchg
lds
adc
iret
pop
sahf
jns
pop
std
into
push
add
sub
loop
iret
push
scas
cmpsb
pop
mov
fisubrs
cmpsb
cld
inc
add
cmp
sub
fmuls
xor
adc
push
hlt
mov
mov
adc
mov
mov
push
ret
inc
and
imul
mov
and
push
stos
cmp
mov
sub
push
push
scas
sti
jo
ror
pusha
jecxz
pop
mov
aad
sbb
repnz
lcall
lret
dec
cmpsb
ret
out
dec
movsl
push
sub
cs
js
stc
jg
jle
mov
xchg
andl
std
and
outsb
cmpsb
and
push
test
cmp
lret
out
push
ret
xor
inc
mov
adc
pop
mov
pushf
movsl
notb
mov
pop
aam
mov
daa
cwtl
bswap
sub
mov
movsl
jg
and
push
sti
inc
pop
xor
in
jb
xor
imul
std
pop
sbb
in
mov
stc
loop
mov
fcmovnbe
sub
ljmp
pop
pop
imul
leave
iret
loop
lcall
jecxz
nop
mov
inc
inc
imul
lock
xchg
and
fsubl
or
lahf
jae
mov
enter
in
jg
mov
jns
icebp
pushf
sub
adc
in
mov
mov
jecxz
add
repnz
pop
xchg
xchg
dec
or
sbb
sarl
and
xlat
cmpb
xor
mov
loop
pop
jae
cltd
jo
sbb
insl
pop
sahf
mov
arpl
push
cmpxchg
jbe
out
or
sub
popf
mov
adc
int3
cld
pop
loope
dec
ljmp
mov
sarb
sub
dec
inc
leave
mov
or
dec
push
lret
sbb
mov
jno
adc
or
popa
pop
mov
ret
jne
push
aam
jnp
mov
cwtl
lahf
mov
sar
jb
sub
ss
add
inc
insl
xchg
fstpt
inc
in
insl
hlt
loop
jl
mov
ja
sub
je
xor
xacquire
xchg
rcrb
fidivrs
mov
inc
aam
dec
cmp
hlt
fs
mov
add
out
xor
cmp
shlb
packsswb
cmp
cmp
orl
je
loopne
sahf
gs
xor
in
jg
mov
popf
test
pop
dec
and
test
pop
mov
in
fstps
lds
inc
mov
imul
aad
jns
imul
mov
sub
bound
jg
add
cs
fs
in
imul
loop
jmp
dec
adc
cmp
mov
fcoms
push
ljmp
add
xor
jne
mov
shlb
xchg
bound
push
inc
scas
enter
pop
aam
arpl
push
clc
push
jns
add
data16
out
popf
mov
xor
cmp
lret
out
lods
fldl
popf
adc
bound
sahf
into
into
cmp
xor
mov
and
or
mov
adc
sub
mov
xchg
xlat
push
rorb
scas
adc
movsb
aas
inc
cmpl
or
mov
pop
dec
mov
es
inc
or
mov
mov
mov
les
pop
in
ja
cmp
fcmovnbe
mov
hlt
cltd
mov
repnz
mov
pop
inc
ja
jo
sub
inc
mov
rcll
adc
jbe
cld
jno
add
add
repnz
not
add
jle
ret
insl
rcrl
idiv
out
or
test
pop
sbb
xchg
and
mov
jns
fsubrs
fstpl
pop
adc
add
pop
cmc
rcll
in
mov
popf
sbb
sub
xor
sbb
xorl
mov
or
or
test
jo
sbb
nop
mov
sub
jmp
mov
aam
pop
mov
and
jle
loope
sbb
xchg
lcall
jns
fnsave
xchg
repnz
aaa
out
and
icebp
cmp
ss
sub
nop
in
popa
fsub
pop
add
push
call
dec
xchg
jo
mov
push
decb
mov
aad
and
xchg
mov
mov
cs
repnz
repnz
mov
lock
lret
pushf
mov
ljmp
fidivl
stos
cmpsl
jle
mov
cwtl
mov
xor
loope
subb
push
in
push
or
add
adc
sub
lods
nop
rcr
sbb
jb
dec
pop
or
insb
jno
mov
or
push
lea
inc
pushf
dec
rcrl
popf
out
lahf
inc
and
nop
sub
inc
pusha
mov
test
fstps
enter
cmpsl
fucomi
mov
pop
sub
pop
daa
test
dec
mov
out
ss
cmp
xchg
mov
sbb
xchg
lret
pop
cmpsl
jg
sub
out
add
dec
sti
add
out
push
outsl
aam
daa
scas
notb
stos
mov
stc
cmp
cltd
out
insb
mov
data16
push
popf
mov
bound
ret
out
test
mov
pop
fdiv
xor
push
mov
adc
std
pop
aaa
std
out
mov
adc
daa
xor
dec
stos
das
lods
imul
fidivs
mov
lds
les
xor
adc
and
sbb
pop
add
ds
dec
adc
std
data16
rorb
std
jbe
mov
dec
out
in
ja
inc
xchg
inc
shrb
push
movsb
outsl
sbb
test
addr16
divl
stc
sarl
in
es
in
into
bound
pop
adc
mov
inc
jbe
movsb
or
aaa
dec
sub
fistpll
scas
push
insl
lahf
jecxz
pop
icebp
repz
mov
and
cmp
push
bound
inc
outsl
das
pusha
cld
jbe
ljmp
lods
fidivrs
gs
jge
dec
enter
jno
and
cld
mov
xchg
out
cmpsb
cltd
adc
jae
pop
fsub
or
add
out
push
jge
fistl
mov
repnz
jl
loop
xchg
js
bound
cld
adc
scas
jne
mov
mov
ficomps
mov
insl
mov
push
dec
jl
add
repz
or
inc
cmc
xor
js
fldcw
cmp
movups
iret
out
lcall
cmp
add
dec
push
lds
or
jne
adc
push
idivb
out
or
imul
stos
jb
fsubs
in
or
jnp
xchg
lahf
mov
push
xchg
sti
lea
out
pop
push
jg
push
in
test
sub
mov
dec
xchg
push
or
add
dec
or
xchg
jl
and
inc
fcoml
call
inc
rcll
fistps
je
test
or
mov
jecxz
sub
xor
cwtl
pop
stc
bound
and
je
xchg
leave
lods
xchg
mov
sarl
orl
mov
clc
xchg
aas
dec
mov
inc
mov
xchg
pushl
push
in
sbb
les
insl
out
jne
lock
in
sub
dec
and
mov
mov
test
addr16
int
das
add
or
ss
and
xchg
add
aad
fs
movb
jbe
lock
xchg
je
mov
adc
mov
movsl
cmp
xor
cmpsl
dec
insb
inc
pop
int3
add
cmp
add
stos
fadd
add
mov
mov
dec
movsl
xchg
or
mov
jmp
daa
daa
push
cmp
lea
xor
int3
ja
pop
inc
dec
mov
mov
push
lock
cmp
rorb
mov
xor
cmp
filds
test
mov
add
cmp
sarl
sub
cmc
js
ss
xchg
ja
mov
sub
pop
cmpsb
subb
shrl
pop
inc
dec
xchg
adc
sar
dec
ret
jnp
or
scas
imul
in
mov
loop
jle
mov
jns
xchg
pushf
mov
cmp
cld
dec
inc
pushf
cmc
xor
jne
adc
scas
lret
xchg
push
mov
mov
icebp
mov
mov
mov
mov
jl
in
and
addb
pop
movsb
aam
push
sbb
mov
fwait
lcall
fidivrs
gs
pop
int
aaa
push
loope
test
and
std
jbe
mov
sti
iret
pop
repz
shl
cmpb
dec
or
outsl
xor
imulb
sbb
xor
pop
pop
ljmp
int3
mov
add
sbb
xchg
mov
dec
cmpsb
lahf
lock
lcall
pop
dec
in
push
jmp
cltd
inc
notl
mov
push
adc
notb
mov
sub
loopne
push
dec
push
cmp
enter
inc
test
repz
and
mov
sarb
fstpt
test
fsubp
inc
xchg
jp
decl
mov
mov
fbstp
sarl
call
sarb
outsb
faddl
mov
call
jg
adc
or
aas
test
out
adc
and
push
in
xchg
push
dec
push
mov
outsl
in
mov
ficompl
jno
xor
push
rolb
xchg
or
mov
call
cmp
xor
mov
iret
mov
cmp
shlb
jnp
loop
xchg
mov
xor
xor
jg
addl
adc
popa
mov
mov
cmp
cld
test
ds
or
jmp
or
xor
cmp
push
cmp
mov
pushf
out
movsb
pop
sbb
jo
jmp
xor
call
mov
pop
pop
xor
mov
pop
aas
outsb
xchg
fwait
test
mov
stos
into
inc
push
push
mov
adc
fidivrs
insb
jae
add
mov
call
jns
movl
mov
out
cmpsl
ss
repz
fldt
adc
jae
fxch
or
das
rcl
pop
pop
inc
stos
call
nop
cmp
jb
jno
fstps
ljmp
xor
dec
or
or
push
gs
insl
insb
xchg
lea
push
and
mov
stos
pop
pause
dec
push
add
dec
out
test
and
adc
insb
mov
in
or
pop
sarb
outsl
aas
mov
fwait
jnp
sbbb
dec
fiaddl
fistpll
imul
pop
xlat
inc
or
je
test
xor
and
lods
add
cmpsb
aas
xor
cwtl
push
scas
mov
ret
insl
dec
xchg
popf
dec
jl
into
shlb
adc
cmp
movsb
pop
je
push
mov
inc
adc
push
mov
mov
jne
lods
adc
dec
imulb
jne
lcall
inc
cli
mov
xor
and
test
lcall
js
mov
push
xlat
orl
clc
jae
sub
dec
shll
xor
sub
fstp
mov
cmc
mov
xchg
push
mov
mov
ficompl
mov
xchg
daa
or
sub
nop
repnz
outsl
fnstcw
loope
adc
ss
sub
cmpb
push
push
lahf
bound
inc
repnz
mov
lret
movsb
iret
mov
fsts
sbb
push
lahf
pop
push
loop
cwtl
sub
fidivl
inc
fwait
pop
pop
xor
mov
cmp
and
jno
jnp
ror
jb
pop
nop
bound
or
sub
sti
ss
cmp
inc
adcb
cltd
fisubl
xchg
pop
fists
das
xchg
and
push
mov
xchg
aad
stos
mov
sub
pop
mov
sbb
out
lcall
cmp
loop
outsl
cltd
sbb
jne
popf
dec
sub
imul
xor
stc
out
sub
jg
int3
xchg
test
xchg
jo
push
ss
addr16
xor
add
aas
orb
loop
call
mov
dec
lds
inc
add
insl
mov
test
movsl
or
xor
sar
pushf
pop
and
xor
and
shrb
aad
rolb
movsl
hlt
sub
add
lock
inc
mov
xchg
rcrb
inc
cmpl
mov
cmp
jne
inc
repz
ja
or
push
and
ss
cmpsb
jge
repz
adc
mov
sbb
out
incl
add
mov
cmp
fs
cmp
sti
cld
in
mov
jbe
jns
insb
mov
lret
cs
inc
mov
fldt
leave
js
sub
adc
adc
out
add
mov
out
or
sub
sub
jge
shlb
push
adcl
mov
xchg
xlat
jnp
repnz
jae
rclb
ffree
ds
lods
or
cmp
mov
sub
leave
sbb
mov
out
or
xor
int3
adc
mov
sub
shlb
fcmovu
adc
andb
inc
xchg
rcll
adc
mov
in
push
mov
sbb
xchg
cwtl
shrb
sbb
add
sarb
adc
xor
aam
int
lret
cld
mov
adc
mov
pop
sub
xor
inc
mov
stos
adcb
add
inc
lods
adc
jb
sbb
and
in
sbb
pop
test
and
call
pop
or
popa
daa
in
imul
add
pop
lret
fsubl
or
lods
xchg
imul
iret
sbb
lahf
into
pop
cmp
sbb
loop
jns
sahf
rcrb
xor
mov
adc
insb
add
loop
sub
and
pop
or
lcall
leave
jb
ja
mov
xor
in
std
sbbl
sbb
lahf
add
or
lahf
xor
dec
in
sti
mov
rcl
pusha
cmp
add
inc
sbb
test
or
or
adc
scas
daa
leave
xchg
adc
lret
pop
andl
jne
addr16
pop
or
outsb
das
filds
jo
jno
test
add
mov
out
or
mov
rcl
add
and
lods
jecxz
pop
in
jmp
mov
adc
add
popf
mov
push
int
mov
push
xlat
addr16
pop
gs
jp
ss
fld1
jnp
dec
out
jae
bound
cmp
dec
in
mov
cmp
sub
mov
dec
fidivrs
push
mov
xchg
inc
repz
or
jae
cltd
mov
leave
scas
movsl
sub
pop
inc
xor
outsl
jbe
shll
mov
mov
imul
mov
es
inc
sbb
repz
push
subb
sub
inc
repz
mov
adcl
sub
fistl
fmul
je
pusha
popa
popf
or
jo
jecxz
sub
ljmp
push
roll
bound
clc
sahf
push
js
cmp
fwait
ret
lods
fdivrs
xchg
es
das
in
jno
loope
dec
and
or
mov
inc
into
repnz
jmp
popf
test
lds
adc
pop
and
pop
popf
repz
mov
pop
mov
fmull
cmp
inc
cli
jmp
pop
cmc
popa
fcmove
or
pop
sbb
popf
mov
dec
sub
es
imul
dec
fsubr
pop
xchg
push
adc
dec
mov
mov
movsb
insl
inc
mov
xor
fstp
inc
ljmp
sbb
inc
out
addr16
jno
inc
mov
xor
dec
daa
shlb
outsl
cmpsl
xchg
add
cwtl
mov
stos
hlt
add
popa
aam
jno
push
sbb
push
jo
jbe
faddl
mov
lods
addr16
jae
cmp
repnz
je
xor
sbb
adc
inc
cmc
add
imul
sub
or
fcoml
aam
cmp
adc
in
dec
out
adc
call
out
xchg
xor
lods
push
mov
xlat
testb
fsub
inc
cmp
and
je
sub
std
or
insb
push
daa
push
int
fs
sahf
pop
idivb
sti
ss
movsl
adc
pop
imul
clc
leave
repnz
push
jbe
add
repnz
pop
cmp
mov
icebp
out
and
xchg
sbb
xchg
mov
pop
in
int
decl
inc
adc
sahf
jmp
subl
mov
sub
es
push
inc
sub
jne
jns
pop
pop
mov
inc
push
adc
and
pop
xchg
stc
or
pop
mov
in
cwtl
dec
xor
and
mov
jns
sbb
push
or
push
pop
lret
lcall
jle
fstl
out
imul
insl
dec
fxch
mov
jl
insl
scas
push
and
xchg
insb
dec
mov
je
popf
mov
stos
adc
sbb
dec
outsb
test
enter
fcmovnu
aaa
out
cmpl
bound
or
data16
sbb
xchg
sub
add
fdivrl
xchg
mov
cltd
xlat
stc
jbe
es
mov
daa
fisttpll
stos
fstl
mov
fldl
cld
leave
mov
sub
dec
push
insb
or
mov
push
jle
sbb
xlat
adc
xlat
jg
adc
push
popf
cmp
leave
popw
dec
ret
and
xchg
stc
sub
in
pop
shlb
subb
inc
sbb
rcll
push
pop
cmc
arpl
or
ljmp
add
sbb
cmp
popa
nop
mov
jg
repnz
mov
scas
dec
pop
mov
mov
fisubrs
mov
and
in
mov
lcall
enter
shr
sub
mov
jb
ret
cmp
add
sub
mov
lret
xchg
xor
xor
sbb
push
icebp
lret
call
test
jno
fldt
and
jecxz
outsl
lret
out
shll
arpl
xchg
mov
xor
fdiv
cmpsl
shll
scas
add
mov
fs
rcll
or
imul
mov
test
xor
nop
jno
cltd
xor
inc
cmp
add
loop
xor
jge
stc
cmpsl
adc
lods
adcl
jg
jo
add
mov
lea
bnd
out
push
leave
out
jl
pop
mov
adc
add
xchg
hlt
push
outsl
out
hlt
dec
je
orb
mov
jle
ss
orl
add
int3
fcoms
cmp
push
sub
aam
fcmove
dec
adc
mov
in
sub
mov
jnp
movsb
js
and
fnstenv
mov
adc
sub
jno
jno
xchg
mov
lods
lds
sub
popa
xchg
shl
nop
push
cmp
out
fldcw
scas
cmp
adcb
ja
jl
stos
aas
pushf
jmp
je
xor
stos
mov
pushf
sbb
cmp
fstpt
jns
inc
std
mov
lcall
cs
in
nop
and
cmpsb
and
pop
mov
sub
outsl
jmp
or
cmp
or
jb
add
cmpsl
rcrb
mov
es
dec
inc
data16
lods
mov
mov
test
pop
jle
sub
fldt
in
out
xchg
push
addb
jge
mov
xchg
scas
inc
lods
mov
movsb
or
push
or
aas
divps
xor
and
inc
arpl
out
mov
into
mov
movsl
dec
cmp
add
pop
lret
push
loopne
mov
pop
lds
rorl
shrl
inc
dec
jl,pn
xchg
enter
mov
aas
adc
movsb
sbb
add
cmp
sub
scas
inc
addr16
in
pop
mov
popf
es
xor
idivb
arpl
adc
push
cmc
cs
dec
mov
dec
jno
or
dec
insb
add
pop
mov
mov
ja
add
test
push
hlt
andb
gs
les
jl
pop
pop
stos
pop
mov
enter
mov
sub
adc
add
dec
pop
dec
rolb
fistpll
outsl
push
data16
and
jnp
inc
in
jge
lods
and
push
jp
arpl
sub
jb
stos
pop
mov
lret
and
outsb
fmull
or
mov
fs
mov
xchg
or
mov
xor
add
sahf
outsb
add
and
out
popf
jb
cld
sarb
pop
mov
xlat
pop
push
adc
push
sbb
adc
out
ja
int3
mov
cmp
ret
push
std
push
loope
or
cld
mov
xchg
xor
sti
xchg
inc
sub
and
jecxz
scas
jo
mov
sti
clc
pushf
cmpb
jp
movsl
sarl
inc
movsl
mov
insb
shlb
insl
adc
jle
addr16
fisttpl
shrb
pop
lea
fwait
jae
sub
sub
ja
lret
movsl
push
daa
cmp
rorb
popf
subb
or
or
xchg
cltd
fisubl
das
mov
stos
in
cli
jp
lret
and
mov
test
or
out
jnp
fsubr
and
pusha
or
lahf
mov
push
pop
xor
inc
pop
rcrb
mov
push
jnp
cld
or
loop
bound
jne
cld
or
xchg
fsts
dec
xor
addl
add
and
fcoms
sbb
ret
jns
dec
lds
jmp
fucomp
adc
jle
sbb
push
sbb
fstpt
jns
int
lret
adc
and
outsl
lret
pop
fidivrs
cmp
inc
jg
or
mov
shll
das
cwtl
dec
or
sbbl
cmp
lret
sbb
std
out
dec
xchg
dec
pop
inc
mov
in
sub
jle
sub
mov
mov
outsl
xor
icebp
outsl
out
dec
lcall
clc
dec
xchg
aam
pop
pushf
out
es
xchg
add
cmp
dec
xrstors
add
or
aas
push
sub
and
shlb
mov
mov
and
fidivrs
lock
cmpsl
std
cmp
pusha
clc
dec
das
lahf
push
add
xchg
sbb
outsl
out
sbb
cmc
lods
mov
sbb
loopne
mov
jmp
repz
pop
pop
fimuls
xor
add
jnp
lods
and
mov
adc
out
mov
and
popf
out
mov
pop
add
jge
push
jns
jns
cmpl
inc
enter
fimuls
mov
inc
loop
adc
pop
jl
dec
sarl
xchg
lret
xor
mov
add
inc
call
insb
xor
orl
adcb
ljmp
xlat
fdivs
loop
xlat
sub
and
in
push
lds
repnz
jle
in
shll
adc
pushf
mov
fwait
cmp
jno
xor
int3
xchg
jg
fldt
clc
mov
add
arpl
pushf
cmpsb
mov
dec
aaa
stc
adc
xchg
fildl
repz
and
mov
lahf
andl
cmp
cli
mov
xchg
sub
sub
adc
lahf
mov
test
sahf
scas
ret
fs
dec
and
rorb
sbb
arpl
shrb
lea
fwait
enter
cmc
pop
jbe
dec
fnstcw
loope
dec
sbb
or
dec
arpl
lock
and
iret
pop
xor
imul
je
xorl
movsb
mov
xchg
dec
imul
nop
mov
adc
rclb
stc
sbb
cltd
jmp
xor
push
repnz
or
lea
out
sarl
dec
inc
scas
aas
pop
mov
popf
sbb
sarb
adc
sub
pusha
pushf
icebp
in
adc
and
roll
outsb
xor
mov
aaa
push
push
dec
rcl
cmp
mov
dec
sbb
clc
mov
push
mov
lods
jl
jns
cmp
movsl
ljmp
jno
in
leave
dec
sub
in
insl
pop
fnstenv
xchg
cmp
aad
aas
and
add
icebp
pusha
sbb
pop
mov
out
xlat
add
sarb
insl
ljmp
mov
mov
ret
cmp
adc
pop
lods
inc
adcb
aam
jo
enter
data16
jecxz
aam
and
mov
dec
cs
mov
or
bound
push
add
ja
mov
inc
dec
cmp
sbb
add
sbb
xor
lods
push
aas
stos
pop
lods
setns
jbe
pop
lret
jle
repz
sbb
sbb
pop
pushf
cmp
cltd
dec
cmp
lret
jg,pt
sub
rcrb
repz
ds
loopne
cmp
xor
movsb
rcll
inc
shlb
ja
sub
fs
xor
mov
pop
mov
stos
xchg
data16
leave
popf
insb
adc
pushl
aam
dec
lahf
xchg
rcrl
neg
idivb
xchg
sub
sub
push
xchg
mov
mov
xchg
cmpsl
cmp
cmp
ss
lret
pop
mov
sahf
iret
xor
ds
inc
mov
jmp
cmpsl
cmpsb
pop
in
lods
lock
jg
cs
sbb
notb
xchg
push
in
lcall
sbb
inc
test
ficomps
popa
fbstp
push
imul
sbb
clc
scas
pop
insl
or
cltd
repnz
iret
mov
negb
xor
cmp
fwait
mov
mov
adc
pop
xchg
ss
repz
mov
push
push
jl
and
lds
aad
mov
fmulp
cmpsl
fisubl
ds
rorb
mov
mov
ljmp
or
push
mov
enter
in
inc
and
push
xchg
cltd
into
repz
jo
adc
push
and
and
test
mov
mov
mov
mov
xor
inc
rol
pop
jl
imul
pop
mov
dec
dec
lods
xor
jbe
adc
cmp
and
mov
cwtl
mov
or
leave
adc
cmp
mov
dec
add
xchg
push
xchg
out
fs
mov
ds
movsb
sub
addr16
movsb
lock
out
mov
inc
jae
mov
icebp
sub
je
mov
cli
mov
cmp
and
mov
arpl
jnp
inc
add
mov
push
lock
sarb
cmpsb
push
sub
cmp
fldcw
ljmp
js
cltd
fildll
add
add
jl
mov
push
ja
stc
adc
xchg
inc
clc
test
daa
pop
arpl
insl
lea
cwtl
jnp
inc
xor
push
loop
mov
into
frstor
fldcw
and
jp
mov
outsb
lahf
fistl
and
push
lahf
xor
cmpsl
das
pop
mov
pushl
add
rcll
push
push
mov
and
ss
subb
adc
pusha
mov
xchg
sub
jnp
mov
or
and
jbe
mov
xor
stc
inc
cmp
cmpsb
xor
add
les
mov
repz
pop
popf
push
fbld
cmp
xlat
es
cmp
cmp
pop
mov
xchg
xchg
jmp
mov
sbb
repnz
cmpsl
xor
jl
jne
pop
mov
mov
in
fistpll
xlat
lods
fnstenv
lret
gs
fs
icebp
repz
movsl
out
xchg
fidivrs
icebp
cmp
hlt
or
jg
mov
idivl
add
scas
jmp
lock
rorl
and
mov
push
push
dec
sti
add
xor
aaa
lret
adc
xor
jg
inc
cmpsl
add
sti
fdivrp
ja
test
cld
imul
sub
mov
cli
mov
std
pushw
adc
cmp
jo
dec
xchg
pusha
lret
jl
mov
push
mov
das
in
dec
out
xor
mov
imul
stos
mov
sahf
std
icebp
movsl
in
lcall
mov
imul
shrl
paddb
jae
mov
push
movsl
inc
add
mull
xor
andb
and
or
out
cmc
iret
cmp
loope
mov
sbb
dec
cmp
pop
xchg
test
mov
inc
jb
dec
push
mov
push
jmp
sbb
repnz
push
sbb
mov
lcall
sbb
sahf
movsl
cmpsl
xchg
pop
out
inc
mov
fadds
xchg
xor
test
lcall
mov
add
mov
inc
rcrl
xor
jecxz
lods
mov
ret
sbbl
iret
or
nop
adc
sarb
pop
int3
mov
pop
xchg
lcall
sti
jns
iret
icebp
insb
test
push
mulb
mov
xor
jmp
dec
lea
xchg
mov
fiaddl
push
sbb
enter
int3
push
mov
jns
xchg
iret
jmp
pusha
cltd
loope
bound
imul
push
dec
mov
out
mov
ds
insb
cmp
stos
mov
push
icebp
stos
into
ret
push
pop
xor
mov
sbb
scas
push
ljmp
movsb
jmp
test
pop
cmp
jecxz
mov
sbb
leave
adc
and
cmp
adc
lcall
sub
jg
sub
test
jmp
cld
dec
ror
int
jbe
mov
sub
movsl
lds
mov
aam
fisttpl
push
jbe
inc
clc
int3
add
sbb
cltd
dec
push
call
mov
and
in
xchg
popa
add
push
xchg
sbb
and
les
or
insl
out
xorb
jbe
sar
and
mov
cs
mov
dec
jmp
dec
jo
ds
roll
mov
inc
insl
sub
ds
rcrb
add
pop
mov
cmpsb
dec
mov
nop
cli
scas
mov
and
repnz
repz
mov
sbb
call
enter
mov
popf
insb
in
ds
mov
je
push
rorl
call
outsb
bnd
push
dec
mov
test
add
cwtl
test
xchg
fldcw
mov
cltd
and
push
les
fldenv
jb
mov
clc
movsl
fldt
faddp
out
cmpsb
cld
xchg
jb
scas
inc
mov
and
scas
mov
jmp
jle
call
cmp
cltd
and
outsb
push
into
rcl
ds
dec
and
stos
sbbl
cmpsb
mov
mov
sahf
rcrb
xor
pop
push
aas
out
inc
iret
mov
jb
out
inc
lods
cmc
and
loope
cmpsw
cmpsl
arpl
rorb
loopne
push
xor
insb
daa
out
add
enter
inc
mov
mov
jae
push
sub
and
xor
fs
inc
inc
stos
fs
mov
push
je
out
aas
and
scas
push
ljmp
test
add
call
fsubrl
push
add
call
mov
loope
cmp
jge
dec
xchg
pop
les
xchg
push
xchg
sub
mov
mov
adc
arpl
test
cmpsb
das
push
cltd
lods
cmp
out
into
js
cmp
icebp
adc
adc
ja
imul
ljmp
jo,pn
mov
es
jp
push
rcr
std
and
shll
mov
je
push
icebp
mov
xchg
idiv
pushl
cmpsb
iret
hlt
cmp
in
jl
or
mov
cmpsl
xchg
cmp
test
in
add
pop
dec
inc
sahf
lahf
lret
loope
pop
lods
xor
and
ret
adc
sahf
jecxz
enter
sub
testb
or
add
inc
jns
mov
das
or
insb
push
sub
dec
inc
jecxz
jne
aaa
sbb
xchg
lret
or
dec
mov
cwtl
insb
mov
and
xor
decb
dec
jmp
stos
imul
push
or
xor
bnd
popf
dec
mov
pop
bound
dec
imul
pop
sub
ret
add
mov
aas
divl
int
fabs
mov
addb
loopne
je
add
insl
test
cmp
andb
das
fucom
mov
clc
mov
add
mov
pop
push
or
push
xor
jb
jno
roll
pop
push
test
pop
dec
jbe
cmpsb
adc
lret
add
xlat
cmp
xchg
push
jbe
rcrl
cmc
and
sub
enter
push
fists
inc
loope
cmp
pusha
mov
jle
dec
mov
cmc
pop
imul
dec
das
pop
lahf
mov
jno
mov
push
jl
js
add
mov
mov
push
pop
out
out
xor
stos
in
mov
jp
inc
loopne
or
sbb
aad
fsubr
add
adc
xor
add
cmp
xor
test
popa
std
jno
in
jno
lret
jecxz
fstpl
cli
enter
ljmp
and
jnp
inc
jg
cltd
mov
inc
xor
stos
sub
mov
test
arpl
mov
and
sub
inc
ljmp
cmovle
fsubrs
clc
jns
jae
arpl
orl
sub
sbb
notl
xor
les
mov
ror
add
dec
stc
dec
out
aad
cld
fistps
loopne
mov
mov
xchg
sbb
push
aaa
jge
shlb
push
mov
test
sbb
fildl
mov
iret
push
adc
mov
jmp
nop
jle
and
into
adc
and
cmp
jns
js
inc
rcrb
push
out
sub
fwait
clc
mov
icebp
and
test
loopne
hlt
jl
jbe
xor
jge
js
arpl
pusha
in
jp
adc
mov
inc
mov
cli
divb
add
jecxz
ljmp
pop
out
ss
mov
cs
adc
lock
and
sti
ror
mov
add
scas
insl
jecxz
and
out
incb
dec
fisubl
scas
icebp
dec
lock
sbb
adc
inc
in
xchg
test
push
push
mov
or
pop
and
mov
arpl
cltd
jnp
jno
subb
inc
dec
enter
rol
cmp
pop
add
mov
test
mov
bound
ror
rclb
mov
inc
adc
loope
jg
movsl
mov
pusha
jnp
pop
outsb
mov
addr16
inc
sub
lret
adc
dec
jecxz
jl
mov
inc
fstpt
aas
lret
push
push
popa
push
call
cmp
daa
pop
push
mov
fdivrs
or
aad
movsb
adc
sbbb
xorb
mov
cmp
adc
in
loopne
lret
inc
xor
and
stos
inc
lock
add
mov
repz
fsubs
sub
mov
lret
inc
lret
dec
outsb
cmpsb
in
dec
mov
ret
fildll
adc
push
pusha
or
xchg
mov
xchg
jne
rclb
xchg
cwtl
lret
push
cmp
mov
leave
inc
insb
mov
inc
stc
cmp
divl
sahf
cltd
lret
movsl
mov
test
movl
rcrl
imul
ljmp
outsl
mov
add
js
fdivr
imul
in
cmp
outsl
icebp
loop
inc
mov
mov
test
dec
inc
xor
xor
scas
cmp
loope
jb
hlt
out
xchg
fwait
add
sbb
xchg
or
sahf
mov
xchg
dec
inc
and
ficoms
shlb
dec
mov
mov
mov
test
cmc
cmp
mov
in
push
mov
out
pcmpeqw
jmp
and
dec
cli
dec
test
jge
add
jge
jmp
unpcklps
ret
mov
imul
mov
adc
rcr
adc
incb
lds
les
jecxz
push
sub
mov
dec
mov
loope
lcallw
mov
fwait
adc
fidivrs
aam
popf
jno
pushf
cwtl
xchg
sub
mov
popf
sub
mov
enter
bound
xchg
mov
ror
mov
adc
jns
fprem
das
mov
or
test
sbb
ss
cmp
sbb
xor
xchg
lcall
push
mov
pop
aaa
jns
fstpt
mov
mov
cli
shrb
pop
popf
xor
aam
movsl
dec
sub
test
pop
jbe
insb
into
test
rcrl
and
adc
push
fidivl
jmp
fwait
and
stos
sub
shrb
inc
icebp
outsl
and
pop
cli
outsl
jns
dec
mov
mov
movsl
jb
pushf
push
push
sub
push
out
dec
mov
daa
pop
pushf
push
lds
mov
sbb
arpl
sub
clc
mov
jle
shlb
popf
fstp
adc
dec
loopne
mov
pop
mov
movsl
jp
stc
mov
cmp
fstpl
pop
shl
fsubrp
and
insb
out
sbb
js
mov
mov
ss
int3
jmp
xor
movsb
cmpsl
or
jg
mov
sar
fidivs
lcall
mov
sbb
rcl
cwtl
fdivrs
mov
xchg
mov
and
xor
mov
out
add
mov
das
jnp
jns
fadd
cli
add
std
rcll
sbb
in
fwait
cmpsb
mov
xchg
lods
and
cmp
ret
push
jle
mov
js
mov
jbe
ljmp
arpl
or
adc
mov
or
scas
pop
jns
dec
mov
lcall
add
mov
xor
fldl
adc
xchg
and
insl
and
jns
pop
data16
or
mov
std
or
fdiv
lcall
hlt
out
mov
jl
and
mov
cmpsl
stos
movsl
pop
fdivrs
loopne
xor
or
fwait
mov
push
lret
sub
xchg
lahf
ljmp
sbb
cltd
add
sbb
push
dec
stc
das
test
leave
jbe
jnp
push
mov
pop
icebp
rcrb
sti
insb
pop
pop
sub
rcr
inc
inc
sarb
dec
lods
loop
sbb
jb
adc
lea
gs
scas
xor
out
arpl
int
push
in
pop
test
push
push
ja
rcl
scas
lar
xlat
push
mov
push
push
jg
jns
cmc
adc
mov
insl
push
mov
notb
lds
cmp
out
or
cmpb
popf
testl
into
test
into
aaa
dec
and
ljmp
and
adc
mov
mov
ljmp
stos
iret
in
or
pushf
inc
pop
inc
push
subl
fs
movsl
inc
cmp
push
scas
mov
inc
je
sub
mov
pop
dec
or
lock
ja
bound
popf
xchg
xchg
xor
lret
rcrl
aaa
enter
add
std
ret
dec
bound
and
inc
mov
dec
sahf
inc
push
mov
mov
xor
test
mov
into
pop
sahf
or
popa
mov
and
jo
mov
mov
adc
adc
sbb
in
sub
jg
movsb
sarb
cmp
mov
fisubs
fnstcw
pop
mov
fs
adc
pop
cmpsb
push
jb
aad
mov
adc
ret
popf
es
rorl
in
mov
ja
mov
es
repnz
js
cltd
cld
push
push
sbb
cmp
js
hlt
pop
bnd
das
insb
cmp
jl
sbb
adc
les
fdivrp
mov
out
cmc
mov
lcall
cmp
in
mov
xor
sbb
inc
pop
xchg
sahf
inc
mov
sbb
xchg
es
mov
aam
fldenv
movl
xchg
test
stos
ds
inc
xor
fsubl
ret
repnz
lcall
mov
dec
ret
mov
mov
mov
cli
inc
bound
das
repnz
jge
push
dec
cmpsb
xchg
pop
sub
jmp
cmp
cli
fs
scas
jnp
pop
ficoms
pop
add
scas
into
mov
divl
mov
or
stc
loopne
adc
mov
jmp
es
repz
inc
dec
xchg
out
mov
jmp
ds
dec
testb
test
aas
sub
jecxz
and
daa
cmp
enter
pop
mov
jnp
call
xchg
and
mov
dec
test
pushf
das
outsb
jb
lock
fmuls
lods
adc
rep
jl
loope
xchg
movl
enter
push
arpl
mov
mov
mov
aad
xchg
cwtl
icebp
cmp
lock
mov
cmp
inc
inc
sbbb
add
sarl
fs
and
xor
jns
daa
adc
int3
int3
dec
lods
pop
mov
xchg
mov
lds
cmpsb
mov
dec
adc
es
dec
push
xchg
dec
es
lret
popa
adc
stc
ficomps
rorb
and
in
movsb
jg
sahf
idivb
jo
mov
test
dec
xchg
dec
fcmovnu
jo
lds
cmp
mov
pop
div
push
icebp
push
mov
loope
data16
ficoms
dec
and
mov
ret
xchg
ret
push
jecxz
cmp
mov
jno
repnz
lods
cmp
fcomp
mov
jno
sbb
cmp
cli
push
loope,pn
push
sbb
sub
adc
outsl
add
jns
int
data16
add
sbb
int3
xchg
inc
fmul
mov
adcb
sarb
mov
sbb
scas
mov
dec
in
insl
sbb
mov
jmp
shlb
iret
call
das
adc
pop
mov
rcrl
mov
jne
xor
add
fidivl
divb
shlb
test
inc
rclb
xlat
xor
sbb
aas
call
or
jle
scas
cmc
adc
xlat
pop
rdmsr
clc
ret
ljmp
push
jg
dec
or
dec
add
fildl
mov
std
hlt
out
or
push
cmp
int
xchg
xchg
int3
pushf
sbb
xor
and
inc
fimull
rcll
aad
into
fidivs
adc
cmp
sti
jb
lods
jg
xchg
jbe
aam
insb
outsb
sahf
pushf
fucom
loop
xor
cli
pop
in
jne
out
cmpl
movsb
scas
and
aad
popf
pop
adc
mov
xchg
xor
push
aam
out
and
sar
addr16
sarl
push
push
push
fisubrl
rsm
mov
imul
int3
push
jl
fisttps
push
jno
xchg
xor
and
mov
xor
sub
adcl
fisttpll
adc
xchg
cmp
mov
andl
lret
dec
mov
dec
sbb
push
repnz
jb
in
jb
adc
cmpsl
xchg
mov
mov
stc
inc
loope
aas
inc
fcomps
ljmp
lods
xchg
aad
mov
insl
pop
xchg
jecxz
cs
fisubl
cmp
fnstsw
push
xor
popf
adcb
cs
hlt
jb
lods
cltd
adc
pop
aaa
out
pop
pop
push
int
pop
outsb
adc
pushf
jp
and
jl
out
and
sub
mov
pop
and
hlt
cmpsb
dec
sahf
sarl
xor
sar
lock
pop
dec
sti
cmpl
clc
test
ja
lcall
add
fdiv
mov
rorb
push
shll
lahf
iret
or
add
fwait
add
push
mov
pop
push
cli
add
xchg
mov
cmp
mov
xor
icebp
and
out
out
jmp
adc
jg
testl
push
shll
push
push
push
and
dec
pop
in
jp
in
push
icebp
cmpsl
sahf
push
pop
out
scas
dec
mov
test
lods
orb
subl
add
rol
aad
push
xlat
popf
mov
sbb
or
adc
int
sbb
adc
jmp
push
iret
inc
mov
adc
or
xchg
jecxz
nop
pushf
cli
inc
and
cltd
cmp
dec
outsl
scas
sahf
sbb
xchg
push
push
mov
dec
out
push
jae
leave
sub
jbe
mov
inc
in
mov
shll
sbb
mov
popf
stos
mov
subl
pop
push
cmp
es
fdivrs
add
out
push
js
cmp
and
sub
mov
test
jnp
push
insb
add
adc
neg
in
add
js
sub
mov
jecxz
jo
scas
add
roll
adc
loopne
shrl
aam
cmp
aas
in
scas
andl
jp
scas
mov
pusha
pop
test
das
enter
in
mov
in
in
inc
test
push
imul
sbb
jnp
xchg
sbb
test
rcll
push
fsubr
lods
pop
aam
mov
xor
add
sarb
push
bound
mov
pop
shlb
push
out
adc
jp
add
mov
inc
mov
ret
loopne
jl
cltd
cmc
arpl
jo
fstpt
push
data16
sub
mov
dec
or
or
adc
add
inc
iret
pop
mov
lds
ljmp
push
sub
cmp
fwait
cmc
lahf
iret
loopne
adc
jno
mov
mov
fs
sub
add
sub
mov
divb
jecxz
mov
fdivrl
pop
sbb
iret
dec
lock
mov
or
pop
dec
xbegin
mov
addb
inc
neg
sbbb
mov
cmpsl
faddl
mov
lds
movsl
xchg
leave
mov
add
mov
dec
adcl
daa
pop
dec
cmp
out
pop
daa
pop
ja
rol
pop
jae
xor
outsl
inc
adc
cmp
fistl
push
sarb
lock
nop
dec
sub
cmp
fsubrs
mov
mov
test
in
rcrb
fidivl
mov
mov
or
jge
aam
movsb
adc
push
cltd
push
cmp
aad
mov
or
xor
sti
sub
scas
movsb
xorl
aam
lods
mov
jo
daa
pop
push
xchg
xor
jmp
loope
and
lret
mov
dec
mov
inc
cmp
call
jge
loopne
dec
lahf
dec
stos
jle
pop
cmc
sbb
shr
mov
adc
add
incb
xchg
ljmp
rcrb
inc
loope
cwtl
sbb
pop
jecxz
mov
jecxz
call
mov
mov
lcall
aam
test
lock
push
xor
out
fistps
mov
dec
popa
mov
pusha
test
push
mov
ja
cltd
into
cli
cld
cli
arpl
add
xlat
dec
xchg
mov
test
stos
cli
shll
int3
xor
mov
or
sbb
add
cwtl
fldenv
ret
pop
add
in
xchg
int
push
fcom
dec
xlat
dec
sub
or
pop
out
jnp
pusha
mov
mov
or
pop
xchg
mov
push
loop
cmc
mov
pop
adc
mov
pop
jo
je
movsb
lret
ljmp
fadd
sbb
sahf
pop
daa
cmp
sbb
push
dec
jg
xor
push
fimull
sbb
adc
jb
cld
push
out
stos
jp
jle
xchg
test
jo
push
xor
in
pop
jb
jp
notb
push
or
sti
scas
stos
add
inc
es
fnstenv
scas
insb
sbb
mov
decb
adc
xchg
sbb
in
mov
mov
inc
cmp
dec
mov
push
jno
aaa
xor
ljmp
rolb
les
jae
push
lcall
jae
scas
cwtl
das
cmp
dec
mov
jnp
mov
sub
das
jnp
and
out
rcll
jo
or
push
xchg
popf
out
push
adc
mov
je
pop
or
mov
pop
int
pop
clc
lods
aas
sti
pop
jmp
xlat
aad
icebp
or
dec
in
imul
cmpsl
aas
jns
pop
sub
jecxz
pop
xor
aad
adc
mov
ja
adc
scas
loope
mov
fdivs
push
data16
mov
push
inc
mov
and
outsb
xchg
ret
mov
and
hlt
mov
hlt
js
leave
push
icebp
sbb
and
dec
loopne
in
push
mov
js
jnp
push
pop
pushf
aas
jmp
movsb
cli
pop
lods
sti
sbb
cld
je
adc
adc
icebp
cmpb
or
enter
mov
mov
int3
push
aaa
daa
call
fs
jno
xor
xor
outsb
loop
xlat
add
cmpb
je
sbb
xlat
xchg
lret
pmulhw
pop
xor
lock
iret
leave
push
xchg
test
xor
clc
in
jb
sti
and
dec
or
inc
popa
orb
in
aas
pop
movl
cltd
das
push
repz
rolb
negb
rcll
lea
lds
jp
xchg
popa
or
mov
mov
push
ljmp
scas
ds
or
lods
xchg
test
cmp
fwait
or
sub
pusha
lods
popa
insl
int3
lods
xchg
sbb
popa
push
jge
cmc
and
xor
jns
cmp
jbe
inc
or
push
cmpsl
and
ret
xchg
je
dec
mov
cmc
sub
sbb
sbb
ds
lds
aaa
pop
imul
mov
xchg
xor
push
stos
in
sahf
aad
push
fisubrs
imul
sub
lock
aas
or
or
shl
sub
sbb
sub
jge
pop
or
cs
int3
addr16
mov
or
enter
es
mov
shrl
cmp
mov
inc
dec
xchg
and
cmpsl
push
sub
xchg
not
ficoml
insb
out
dec
mov
mov
movsl
add
bound
in
and
mov
pop
in
andb
mov
push
mov
jmp
in
pop
or
lods
out
push
cli
je
mov
sub
cmp
mov
pop
mov
dec
dec
scas
xchg
mov
inc
stos
xchg
push
inc
or
jp
sub
inc
add
push
aad
xor
int3
imul
or
clc
pop
jo
test
nop
stos
jns
mov
xlat
repz
insl
dec
add
nop
xlat
mov
fwait
jno
pop
push
mov
pop
daa
fimull
mov
int
xchg
sub
addr16
mov
insb
mov
shll
push
scas
add
loopne
outsl
mov
sbb
out
jle
sub
dec
xorb
jg
sub
dec
cmpsl
arpl
mov
test
push
or
out
add
or
push
push
mov
outsb
std
adc
pop
mov
push
adc
insb
sub
cmpsb
loop
pop
rorb
fld
scas
scas
dec
leave
dec
movsb
xchg
lea
push
sahf
push
xchg
je
out
jmp
outsb
adc
dec
push
jmp
mov
or
push
int3
adc
xor
outsb
mov
outsl
aaa
iret
out
imul
and
or
js
cs
rolb
sub
aaa
hlt
fimull
push
outsb
mov
popa
push
into
mov
xlat
mov
hlt
fldl
lds
pop
jl
inc
stos
cltd
repnz
test
cwtl
pop
insl
pop
cs
mov
adcb
sbb
mov
inc
sbb
das
inc
mov
popf
add
pop
inc
mov
add
out
inc
inc
mov
sar
lods
pop
and
ds
fdivrs
loop
mov
jl
mov
dec
mov
pop
stos
mov
aas
pushl
and
adc
icebp
push
in
xchg
sbb
dec
stc
inc
lods
sahf
cmpsl
fnsave
xchg
cmpsl
fcompl
inc
add
loope
lods
mov
sbb
sub
lcall
loop
je
lea
lcall
jns
inc
lret
mov
cs
mov
out
andl
jb
dec
aas
into
jns
cmp
cmp
add
push
pop
and
mov
mov
sub
xor
push
jl
lret
xchg
dec
mov
cltd
mov
test
xchg
pushl
shrb
out
outsb
pop
push
inc
fisttpll
pop
mov
lret
popa
mov
or
pop
int3
fldenv
nop
pusha
xchg
cmc
mov
mov
testl
push
clc
sub
gs
scas
sub
out
into
pop
paddusw
mov
jmp
arpl
xor
or
mov
ss
test
sub
call
mov
test
and
lahf
mov
jmp
push
cmp
ret
cmp
outsl
adc
sub
sub
sbb
jno
lods
mov
out
xor
out
lret
pop
pop
mov
pop
or
jmp
popf
lock
push
mov
mov
xchg
and
lcall
inc
adcb
sub
in
mov
jmp
std
mov
cmp
adc
stos
mov
sti
inc
pop
sbb
xchg
push
test
popa
loop
cli
fs
sub
loope
loope
mov
mov
xor
addr16
aad
pop
dec
push
andb
pop
test
add
push
inc
pop
mov
mov
mov
pop
stos
test
ret
les
inc
dec
adc
lret
jge
mov
mov
aam
mov
ficoml
movsb
cmpsb
or
and
cmp
jecxz
lods
add
dec
mov
dec
dec
aaa
jle
pop
lds
rolb
stos
mov
push
in
xor
mov
out
jo
jnp
insl
subl
cmp
mov
jno
inc
add
fsubrs
push
imul
mov
insb
mov
jae
mov
jo
cs
roll
add
or
pop
add
push
cwtl
test
pusha
sbb
out
cmp
aas
mov
test
loopne
gs
dec
mov
push
dec
out
cmp
daa
scas
or
cld
dec
and
xchg
in
test
scas
mov
aaa
int3
mov
dec
push
sub
mov
js
and
hlt
mov
fwait
sub
push
dec
jge
repnz
and
sub
shlb
cld
xchg
pop
add
les
je
add
mov
and
fcos
das
mov
sbb
cmp
mov
mov
xchg
pop
push
arpl
std
inc
xor
aas
lods
xor
jle
bound
mov
adc
add
pop
cli
pop
inc
lods
add
in
rcrb
dec
gs
sarl
push
or
movsb
inc
dec
jne
inc
insl
inc
pop
xchg
aaa
or
mov
fcomps
push
or
xor
push
ret
cmp
dec
nop
sub
mulb
mov
lods
and
pushf
jp
push
cmp
cmc
int
xchg
dec
fidivl
sub
daa
arpl
mov
cmpsl
xchg
push
dec
addb
or
add
aaa
or
pop
lahf
lods
cltd
stos
std
jnp
dec
push
or
xlat
aad
loopne
decl
jnp
mov
ficompl
mov
popa
mov
outsb
inc
ror
inc
mov
scas
sub
scas
in
stos
xchg
mov
push
inc
mov
pushf
loope
mov
subb
jne
xchg
dec
xor
in
stos
sahf
dec
sahf
mov
xchg
jl
int3
out
sbb
data16
outsb
mov
pop
and
mov
ficomps
push
je
ljmp
pop
insl
pusha
jl
push
ss
sbb
xchg
lock
orb
gs
pop
movsl
xlat
dec
add
or
cli
loope
sti
fisttpl
movsb
or
movd
xor
push
and
pop
lret
xchg
bswap
popa
mov
cld
sub
loopne
test
pop
mov
mov
add
adc
jmp
inc
dec
jge
mov
sbb
or
inc
sbb
insl
outsb
out
inc
mov
loop
mov
cmc
imul
push
jae
and
popa
mov
iret
int3
fdivr
in
inc
mov
push
neg
lea
jmp
sahf
fs
dec
xchg
dec
ror
aad
clc
cmc
es
jp
sbb
inc
out
aas
aas
js
add
outsb
pushf
pop
add
push
insl
in
filds
sbb
bound
or
cmp
hlt
push
push
lea
xchg
jno
jb
imul
push
or
adcl
push
out
leave
inc
sub
jge
jbe
test
xchg
add
popf
pop
pop
popa
loope
or
shr
xor
leave
cwtl
punpckldq
and
sub
mov
stos
cmpsb
pop
xor
cmpsl
pushl
push
xchg
sahf
pop
and
fwait
add
pop
sub
or
test
cli
pop
mov
aas
inc
cwtl
dec
lods
cli
xor
cld
xchg
pop
cmpsb
add
push
push
ret
mov
movsb
add
ds
dec
repnz
inc
sub
sub
mov
mov
pop
mov
loop
xor
jge
rorl
jnp
adc
and
pop
cmp
dec
mov
dec
push
adc
pop
rcll
adc
fnstenv
dec
call
xor
out
out
mov
arpl
test
sarl
pop
push
rcll
cmp
leave
shll
int
test
sub
push
jbe
cmp
dec
into
aad
cmp
lcall
jo
call
mov
out
lods
push
shlb
jmp
cmpsl
mov
lahf
ds
lds
scas
inc
cmp
imull
pop
or
dec
js
push
test
in
xchg
rcrl
fsts
sti
sub
test
int
xor
shr
xor
dec
stos
fidivl
mov
enter
cmpsb
movl
pushf
mov
fmuls
pop
cmp
xchg
scas
fistps
loop
or
xor
adc
test
cmp
ja
cmpb
sbb
xor
mov
sbb
or
cli
inc
pop
dec
sbb
jo
lods
dec
cmc
add
xor
enter
aam
jb
into
mov
or
mov
icebp
sub
dec
inc
cld
aad
inc
xor
fcomi
push
inc
outsb
repz
or
add
data16
jmp
pop
mov
inc
dec
push
inc
sbb
xchg
test
into
unpckhps
jp
movsb
push
pop
cmc
out
in
inc
adc
bound
mov
call
xchg
iret
stos
add
jge
nop
pop
adc
adc
push
lret
dec
cmp
fcoms
mov
lds
push
push
cs
mov
shrb
sub
add
push
push
js
insl
repnz
add
push
adc
ss
lahf
inc
ds
pop
pop
pop
sarb
and
nop
jns
inc
cld
ss
movsl
xchg
mov
fimull
js
or
cmp
adcl
or
jae
mov
sbb
inc
inc
adc
movsb
pushf
mov
sub
pop
test
hlt
mov
adc
dec
repz
add
stos
test
stos
push
cs
stos
pop
or
jo
xchg
adc
cld
sarl
inc
lods
jo
mov
xor
and
aad
jp
cwtl
pop
add
ret
mov
scas
inc
cmp
cs
jp
std
fidivrs
cmp
in
push
cwtl
sub
inc
xor
mov
sbb
adc
add
sub
mov
das
jg
outsl
clc
rcl
mov
imul
jns
sbb
push
pxor
out
mov
shll
jns
aad
mov
test
dec
std
fiaddl
shll
jnp
out
mov
enter
jp
push
sbb
ljmp
pop
cmc
jg
out
fwait
aaa
add
mov
sub
leave
add
dec
add
out
sbb
mov
add
psubusb
and
sbb
dec
ds
sbb
push
addl
call
std
popa
nop
cmpsl
or
push
cmp
lahf
push
pop
and
cmpl
lahf
push
pop
cld
sub
and
movsb
mov
std
inc
repz
jl
push
push
cli
jp
lret
outsl
hlt
mov
iret
stos
mov
in
mov
jae
insb
sbb
dec
jo
test
mov
push
fwait
lret
sbb
push
sub
mov
lea
aad
push
pop
pusha
add
xchg
jge
lret
push
pushf
xor
lret
mov
pop
cltd
and
aad
imul
add
loopne
lret
ja
outsb
jle
pop
arpl
lock
divb
add
and
jne
sahf
insl
ljmp
inc
js
cwtl
mov
bound
and
dec
add
add
scas
mov
cli
sbb
shlb
jmp
dec
push
repz
sub
and
fwait
lods
loop
cmp
out
add
in
mov
imul
ds
cmpsb
scas
sub
adc
cmp
scas
cmp
jb
dec
mov
bound
stos
js
mov
xchg
clc
pop
dec
ja
mov
mov
leave
in
push
sbb
jmp
cltd
out
sbb
ljmp
jmp
movsl
scas
test
jp
cmpsl
shlb
inc
jns
push
add
mov
dec
adc
push
xor
shlb
mov
rorb
add
daa
sub
data16
insb
xor
sub
dec
mov
in
dec
xchg
push
dec
stc
xchg
push
andb
shrl
gs
jnp
dec
std
lret
xchg
xchg
je
jb
lret
push
jge
sub
arpl
jns
out
enter
cltd
fdivr
scas
pushf
jecxz
mov
cmpsl
inc
neg
jo
sbb
shlb
dec
and
lcall
daa
add
icebp
push
mov
into
cld
cmpsb
sbb
enter
add
adc
push
andb
mov
push
cmc
aaa
add
js
hlt
popa
fistpll
mov
test
jno
mov
push
dec
scas
adc
xor
mov
cmpsb
lcall
aad
ret
adc
sbb
add
push
icebp
xor
repz
push
in
outsb
xor
jb
sub
mov
mov
shll
cmpsl
cmpb
mov
lcall
jmp
pop
pop
xor
mov
fidivrs
test
test
push
mov
aad
push
xchg
lods
pop
push
push
sbb
pop
icebp
push
shr
mov
push
movl
ss
add
dec
stc
xor
and
dec
in
jge
es
mov
jbe
das
imul
icebp
loop
rclb
mov
jno
cmpsb
out
xchg
sub
cmpsb
xchg
popa
jl
dec
push
pop
cmp
dec
jbe
mov
mov
dec
cwtl
mov
mov
cmp
jb
imul
sub
scas
xchg
movsb
int
mov
cmp
stc
adc
mov
hlt
fnsave
loopne
hlt
incb
mov
mov
loop
out
pcmpgtb
pop
aas
xchg
xchg
or
sbb
mov
scas
xchg
add
call
pop
jb
int
cmpsb
ja
dec
and
mov
dec
das
inc
loop
push
lea
shlb
xor
pop
jb
sub
lds
push
mov
adc
sbb
rorl
and
dec
orl
add
cmpl
aam
rcrb
sbb
in
mov
mov
popa
sub
mov
aad
aaa
in
mov
aad
or
mov
inc
loop
sbb
leave
xor
clc
jnp
shl
xchg
es
xchg
in
xor
jg
jb
pop
cmp
add
out
fcomip
rcrl
sbb
mov
out
xor
jecxz
loop
pop
loopne
test
lret
insb
mov
pop
inc
or
add
lcall
sbb
inc
imull
jp
adc
iret
sbb
and
in
test
lcall
xchg
push
je
shl
test
push
shlb
cmpsb
in
cwtl
imul
fisttpll
sbb
es
mov
push
sbb
sbb
mov
add
jp
mov
scas
hlt
dec
sti
fidivs
push
dec
add
mov
ja
inc
enter
cltd
shrb
popf
dec
add
inc
push
cmpsb
pop
sub
mov
sub
adc
and
pop
call
and
xchg
xlat
sahf
push
rcrl
faddp
xor
dec
fildll
xchg
gs
stc
xchg
cltd
dec
repnz
std
xor
decb
loopne
xchg
inc
call
xor
lea
mov
imulb
sbb
into
jg
jno
lret
pop
cmc
lock
aad
dec
adc
clc
push
add
mov
mov
aaa
dec
outsb
daa
mov
adc
mov
cli
lea
adc
ja
and
dec
inc
or
dec
push
lret
mov
adc
je
out
fbld
xchg
mov
cmc
xchg
push
iret
cmp
addb
test
push
inc
lea
add
sbb
lcall
xchg
adc
xor
cmp
inc
inc
je
push
pop
ss
fmul
movsl
and
stos
rorb
lock
ret
pop
push
cmpsb
mov
adc
ret
imul
hlt
dec
sbb
inc
add
mov
loope
mov
sbb
push
orb
push
ret
cs
loope
rorb
inc
mov
push
shll
mov
jae
rorb
sti
je
test
push
push
hlt
dec
loope
dec
ficoms
xchg
es
fistl
ss
inc
pop
mov
xorb
mov
adc
test
rorl
push
lods
scas
fistpl
jnp
dec
or
ficoms
out
cltd
cmp
lahf
cltd
fs
dec
mov
loop
inc
arpl
test
sti
or
es
xchg
je
repz
out
test
pop
jno
push
xor
iret
push
daa
test
sub
stos
sbb
or
cltd
fucomip
outsl
adc
push
fldt
xchg
push
push
adcb
enter
js
stos
xchg
push
inc
pop
sti
or
pop
mov
in
pop
insl
ja
pop
cmp
push
insb
jg
loope
clc
lret
mov
stos
and
scas
pop
jmp
sbb
hlt
fnstcw
fcoml
xchg
inc
and
lods
push
aam
repz
sub
ficoml
jae
xchg
sbb
xchg
test
or
mov
or
pop
lret
push
fdivrp
xor
push
scas
hlt
mov
adc
sub
cs
sahf
pushf
cmp
adc
scas
dec
sbb
mov
pop
mov
outsl
jo
xor
loopne
movsb
addr16
pop
dec
std
outsl
lods
stos
xchg
in
mov
js,pn
cld
mov
push
ja
jmp
mov
ror
lahf
popa
shlb
insl
push
fbld
xor
add
mov
aad
sbb
inc
cwtl
jae
add
fucomi
sub
movsb
inc
outsb
sti
outsl
or
or
das
aad
xchg
push
bnd
imul
mov
or
xor
std
xchg
pop
xchg
into
jne
lret
push
pushf
pop
int
pop
push
sbb
rcll
andb
pop
fdecstp
and
jae
xlat
idivb
push
mov
cld
pop
sub
in
pop
cli
cmc
scas
outsb
ficomps
imul
xchg
bound
shrl
aaa
mov
and
insl
pop
add
aaa
es
test
add
cs
insb
mov
or
imul
pop
push
mov
lea
adc
jge
addr16
cmp
sub
jnp
loop
icebp
ljmp
scas
mov
call
mov
out
xchg
mov
sarb
lods
ret
mov
and
fs
ret
dec
cmp
sub
or
lret
inc
fwait
mov
xchg
outsb
popa
pop
hlt
lcall
sar
sbb
xor
sub
sbb
push
cmp
jmp
inc
and
arpl
sub
xchg
outsl
or
xchg
int
js
mov
push
add
sub
pusha
es
xchg
jecxz
popf
pop
in
or
push
outsl
sbb
clc
lods
les
mov
jae
loope
sbb
inc
sbb
add
add
outsl
dec
mov
or
jo
flds
mov
push
pop
cmp
mov
add
or
fsubrl
sbb
sbb
adc
mov
ret
jmp
mov
push
sbb
mov
ljmp
cmp
jl
in
gs
pop
push
mov
inc
scas
aad
fnstcw
xor
cmp
sbb
insb
andb
jle
and
jnp
mov
sub
xchg
cli
mov
mov
mov
inc
ftst
push
cwtl
jecxz
imul
push
mov
negl
mov
or
mov
push
mov
cwtl
lret
or
imul
roll
add
mov
scas
cmc
pop
dec
out
add
sarl
lret
imul
and
xchg
add
xor
push
push
push
enter
out
test
cmp
js
xchg
stos
sbb
mov
add
ljmp
xor
mov
sbb
mov
insb
mov
out
shrl
dec
scas
mov
mov
sbb
popa
fwait
inc
pop
insb
cli
aad
mov
pusha
mov
fiadds
push
vmovsd
das
pop
shlb
mov
pop
lea
popa
or
mov
cmp
mov
data16
push
pop
int
xor
pop
or
decb
inc
pop
mov
outsb
cld
mov
pop
int3
int
dec
cmp
repnz
pop
cltd
les
mov
ljmp
sub
or
sub
sti
fdiv
enter
mov
and
dec
mov
roll
fwait
mov
pusha
cs
insl
js
xor
aam
fisubl
scas
lahf
lret
cmp
pop
insl
js
lods
jb
pushf
mov
cmpsb
rorb
mov
lods
scas
dec
push
cs
push
insb
in
xorb
inc
adc
les
push
stos
fldl
jns
ljmp
test
repz
addl
xor
sub
jg
mov
inc
imul
inc
daa
stc
leave
rolb
jb
jl
loop
decb
cmp
push
sbb
les
in
sub
daa
dec
repnz
pop
mov
adc
cwtl
stos
xchg
xchg
jo
int
mov
xor
cmp
adc
test
ds
lret
cmovo
leave
cmovnp
cs
outsb
sarl
pop
ss
jge
mov
mov
add
jnp
das
cmp
inc
xor
adc
pop
xchg
xor
pop
mov
mov
xchg
into
lds
int
addr16
in
sbb
mov
push
jl
dec
scas
pop
ret
je
jnp
scas
push
cmc
sub
dec
sbb
sarl
xchg
lods
cmc
cmp
ja
pop
loope
ds
xchg
inc
xor
mov
bound
cmp
mov
or
or
iret
in
cld
sahf
stos
lea
mov
cmp
stos
xchg
and
push
xor
pop
dec
sbb
out
mov
push
scas
in
lahf
jle
cmp
mov
cli
or
push
icebp
out
pop
in
ja
push
jo
movsl
cmp
jne
cmp
popa
sub
outsl
adc
or
mov
out
jns
jae
dec
mov
mov
sbb
movsb
mov
rclb
fbld
mov
cmpsl
je
xchg
cmpsl
enter
fwait
add
jl
pop
ds
cmp
xchg
arpl
jbe
pop
fsts
mov
or
mov
in
outsl
push
jmp
jnp
inc
sub
fidivrs
dec
outsb
jae
enter
xor
mov
out
pop
psubd
mov
sub
fistps
scas
idivl
shlb
icebp
scas
sar
into
sub
add
in
push
cpuid
data16
lds
out
mov
scas
push
mov
aam
pop
aas
fs
icebp
or
push
out
sub
add
sbb
leave
mov
cmp
dec
adc
test
pop
push
mov
push
pop
add
inc
xor
lcall
scas
pop
and
lcall
pop
mull
xor
dec
push
scas
mov
pop
xor
mov
xor
lds
jecxz
pop
mov
testb
mov
jo
insb
sbb
xchg
mov
push
mov
subb
mov
mov
adc
add
push
in
dec
inc
cmpsb
cs
lods
add
lock
cli
cmp
rcr
push
add
test
insb
rcll
cmp
inc
lea
repnz
adc
loopne
jne
mov
popw
inc
popa
aaa
int
xchg
adc
ficoms
clc
cmp
pop
xlat
icebp
jb
lods
mov
push
movsl
clc
xchg
out
sub
sahf
sti
xchg
sbb
or
imul
sub
add
dec
dec
push
mov
gs
out
mov
int3
push
shlb
test
sbb
jne
inc
jecxz
aad
test
or
pushf
addr16
clc
imull
ljmp
push
inc
inc
xor
rcrl
sarl
pop
xchg
mov
pop
repnz
loopne
inc
fwait
ds
dec
mov
mov
fsts
jecxz
fwait
test
pop
iret
lahf
or
inc
test
sbb
fwait
and
push
movsb
fidivrs
or
sbbl
push
ss
jmp
popf
jbe
mov
mov
sbb
mov
mov
roll
and
sub
mov
repz
sbb
sbb
xchg
mov
mov
arpl
jp
pop
stc
and
test
icebp
xor
pop
dec
lods
jns
jg
jecxz
inc
data16
pop
or
and
mov
lret
xchg
xlat
add
outsl
fiadds
cmc
jnp
lahf
shlb
xor
sbb
pusha
js
adc
xchg
sub
imul
push
mov
rol
jecxz
cwtl
jns
xor
push
pop
mov
add
jbe
pop
cltd
insb
popf
lock
xor
sahf
scas
adc
lret
sub
push
aas
xor
hlt
aam
fst
pop
shll
int3
les
sti
jmp
push
xor
add
cmpsl
pop
jge
sbb
jmp
test
jno
xchg
testl
lcall
dec
negl
pop
lods
hlt
xor
pop
jbe
ret
sbb
and
insb
push
or
xor
pop
rorl
jnp
fiadds
push
xor
cwtl
or
mov
js
inc
sbb
pop
lahf
push
idivl
sbb
mov
ljmp
addr16
lds
fincstp
cmpsl
add
jmp
and
sub
mov
lcall
imul
inc
cmp
pop
jbe
sub
mul
loopne
fs
mov
scas
loope
jle
jb
pop
push
pop
dec
dec
enter
xor
sbb
pushf
decb
daa
fdivrl
lds
pop
imull
loopne
loopne
and
icebp
xor
mov
loop
adc
or
dec
or
or
mov
xchg
jns
jmp
xchg
cmpxchg
daa
and
jp
data16
nop
test
and
sti
bound
and
fwait
dec
adc
xchg
fnstsw
push
popf
lahf
daa
push
je
pop
out
int3
out
cmpsl
mov
cmpsb
and
and
shll
lahf
xchg
es
push
adc
sub
add
cmp
xor
and
and
and
push
dec
add
pop
sbb
pop
mov
sub
cmp
outsl
xchg
cmp
mov
test
aaa
pusha
cmp
ss
popf
rclb
sbb
into
inc
jl
lods
sbb
fld
mov
mov
sahf
xchg
iret
out
mov
xor
xor
ss
and
andl
sbb
dec
repnz
pop
scas
pop
ja
mov
or
pop
jo
push
fdivs
pop
and
fistl
add
jno
out
stc
adc
movsl
nop
jnp
sub
dec
adc
inc
dec
push
mov
push
push
cmp
cmp
lock
hlt
xchg
pop
mov
xchg
jb
sarl
icebp
fwait
cli
in
sbb
or
int
xor
fs
ja
fcmovnb
xor
arpl
push
xor
pushf
sub
adc
mov
das
pop
je
shlb
inc
nop
sub
insl
jl
adcl
add
repz
jnp
jnp
paddq
add
pop
in
or
scas
scas
pop
in
xlat
out
mov
add
lock
sub
jo
loope
mov
push
xchg
imull
scas
xchg
ss
inc
aas
pusha
pushf
xchg
mov
roll
jp
mov
loope
mov
push
lahf
pop
mov
jb
imul
les
in
out
or
mov
fcoml
rorl
dec
push
pushf
sarb
je
test
loope
cwtl
jl
sbb
xchg
mov
lcall
xor
and
sbb
repz
int3
outsl
std
sub
mov
gs
les
xor
mov
mov
mov
pop
pusha
pop
xchg
roll
les
cmpsl
pop
add
sbb
xchg
sti
mov
lds
ret
aam
fcmovnu
adc
mov
or
aad
inc
inc
mov
adc
aad
sub
mov
sahf
xor
jmp
cs
enter
aaa
mov
sub
fimuls
sub
adc
and
sub
sbb
xor
pop
jg
jl
imul
ds
mov
push
cmp
stc
xor
popa
repz
and
rcr
mov
ja
inc
addr16
mov
dec
dec
mov
mov
mov
and
xlat
std
add
mov
mov
sahf
mov
xorl
push
cmp
mulb
rcl
pop
data16
jns
bound
hlt
lds
mov
iret
push
in
into
add
shll
loopne
mov
sahf
cwtl
add
pop
inc
mov
in
sbb
cmpsl
dec
jo
cmp
add
inc
mov
pop
test
out
pop
dec
push
shll
dec
dec
ret
in
push
inc
jbe
les
xchg
or
fiadds
push
xchg
icebp
add
sbb
or
sbb
sbb
outsl
sahf
adc
add
inc
dec
add
cmp
inc
cli
in
push
push
sbb
ret
sti
fistl
dec
std
mov
cld
mov
lock
lock
std
inc
ja
out
cwtl
mov
mov
repz
fstpl
xchg
insl
pop
shll
ja
stos
pop
sub
lock
dec
mov
jns
test
test
sbb
ja
fxch
cmpsl
pop
fwait
jb
jmp
or
shll
and
movsl
cmc
push
rcrl
sarb
dec
push
lret
add
sahf
repnz
out
lds
pusha
jns
popa
mov
pop
jns
mov
into
xor
cwtl
dec
xor
shr
jl
mov
mov
pop
ljmp
decb
ss
pop
incl
push
ss
dec
push
lcall
ficoms
les
jl
push
loope
pop
and
cmp
cmpsl
aaa
fmuls
mov
cltd
mov
mov
mov
cmp
shlb
data16
ds
mov
xchg
sbb
push
xchg
addr16
mov
pop
cld
loop
xchg
and
jl
in
mov
sub
test
and
push
test
cwtl
mov
cmp
ja
pop
jae
dec
mov
into
cmpsb
and
sub
dec
push
aad
movsb
daa
mov
je
or
arpl
faddl
lock
in
jne
add
fldl
dec
mov
pop
xchg
bound
sar
jo
ds
sarl
addl
pop
mov
mov
mov
insb
ja
rorl
cmp
sbb
xor
xlat
movsb
push
nop
sub
and
pop
pop
aad
xchg
mov
shl
repnz
rclb
mov
lahf
out
subl
das
inc
sbb
cli
cmp
andl
fcmove
subb
pop
inc
dec
mov
push
loope
sub
mov
cmpsl
out
xor
iret
sub
sbb
cmp
lcall
pop
ss
cld
push
iret
mov
or
dec
xor
mov
sarb
pop
js
pop
mov
or
adc
or
lea
jp
jmp
stos
in
mov
inc
pop
fs
ficomps
cmp
in
and
lods
ja
lds
xor
mov
cmp
jmp
xchg
add
in
cmpsl
outsb
das
nop
mov
mov
pop
xor
jle
and
sub
add
jae
sti
out
jb
xlat
sub
lods
dec
inc
mov
sbb
rcll
and
in
ja
rorl
sbb
loopne
push
lock
lock
dec
mov
movsl
inc
sub
scas
dec
xchg
cs
out
arpl
je
xor
push
es
lahf
dec
xchg
add
push
adc
pop
lods
lds
hlt
or
cmp
add
addb
insb
mov
mov
int
sbb
sub
data16
mov
mov
sbb
pop
mov
jge
fcoms
and
pop
xor
call
loopne
icebp
ds
lods
push
cmp
jns
push
movsl
jmp
dec
add
ds
or
arpl
cs
dec
enter
mov
add
jecxz
ds
add
mov
or
fstps
js
popa
dec
and
sti
outsb
xchg
filds
scas
std
mov
rolb
les
outsl
lcall
clc
dec
xor
enter
movsl
mov
inc
add
insb
dec
enter
jnp
aaa
xchg
aaa
pop
cmp
fisttps
sahf
das
in
adc
sub
sub
pop
sbb
enter
shll
pushf
out
out
rol
mov
xor
sahf
in
sarb
or
and
cmp
aam
dec
sarb
enter
and
push
push
add
cmc
fcomps
or
movsb
cltd
fiaddl
cmp
out
mov
xchg
hlt
mov
out
or
xor
cld
and
ret
lods
in
jb
pusha
dec
aad
out
pop
aaa
xchg
push
mov
and
and
xor
jbe
adc
mov
xchg
ss
inc
and
imul
pushf
pop
push
push
out
inc
lcall
mov
cwtl
cs
or
ss
and
cmp
imul
mov
pop
ret
mov
push
mov
or
inc
std
push
xor
pop
stc
sbb
pop
add
xchg
ret
adc
jnp
and
adc
mov
xchg
cwtl
mov
scas
sub
and
daa
jmp
lret
pop
and
jle
adc
jno
mov
xlat
cmpsb
lahf
dec
pop
push
shlb
insb
les
bound
mov
sbb
es
test
fxch
or
mov
xchg
ja
filds
nop
loope
in
adc
insl
push
pop
cli
lock
and
sub
jmp
push
mov
fists
in
mov
jg
push
rep
or
inc
xchg
jo
clc
and
test
inc
xchg
sub
jecxz
dec
fdiv
xchg
dec
cwtl
sbb
in
push
pop
mov
jno
add
cmp
mov
in
push
lock
daa
sub
inc
lcall
mov
fwait
std
dec
in
mov
mov
sub
xor
add
test
cwtl
and
das
insb
imul
mov
adc
sahf
or
sub
in
outsl
testb
inc
cmp
dec
sub
push
inc
rcrl
inc
cmp
clc
in
js
jne
aaa
js
mov
jge
cwtl
sti
fsts
mov
sahf
cmp
das
push
aaa
fwait
add
lret
out
mov
divb
mov
mov
movsl
rolb
push
aad
add
cmp
adc
fldl
xchg
fcomip
sarb
icebp
cmp
mov
sahf
adc
or
or
sub
mov
fnstsw
xchg
pop
mov
call
lds
push
sbb
test
dec
int3
das
xlat
jo
in
sti
gs
lods
leave
add
test
xor
loopne
hlt
mov
mov
xchg
insb
sub
cmp
int3
adc
pushf
pop
push
sbbb
or
ds
mov
sarb
cltd
adc
pop
pop
push
mov
int
mov
insl
or
cmpsl
or
push
push
movsl
test
lret
daa
into
out
enter
cmp
cmp
or
repnz
mov
idiv
loopne
sti
stos
cmpsl
decb
lds
mov
mov
iret
aad
or
shr
lods
add
xor
jl
push
imul
push
push
mov
nop
movsb
out
sub
mov
out
push
sahf
and
inc
or
scas
dec
out
pop
mov
sub
jo
cld
adc
push
call
jg
aam
dec
lock
mov
xorb
push
scas
mov
sub
mov
sbb
andl
push
sbb
push
adcl
xor
mov
jnp
jno
cmp
sub
push
fldenv
dec
push
cmp
in
out
cmp
outsb
movsl
inc
mov
add
vcvttsd2si
mov
and
loopne
mov
add
adc
add
dec
call
out
test
jo
and
xchg
jno
push
adc
or
jecxz
mov
sub
ja
hlt
ljmp
jae
aaa
aad
decl
imul
cmp
mov
sbb
dec
mov
mov
hlt
rorl
mov
adc
mov
in
mov
hlt
jbe
arpl
or
mov
push
ret
cld
xchg
and
out
sbb
std
out
push
mov
iret
insl
mov
gs
adc
in
cld
lret
xchg
sub
sti
inc
int
fldenv
and
outsb
icebp
insb
dec
std
xchg
fldcw
or
int3
test
mov
jecxz
imul
subl
sub
xor
popa
lds
sub
repnz
mov
pusha
test
mov
push
dec
push
fisttpll
outsl
roll
fldcw
mov
xor
inc
roll
fs
jno
les
add
sbb
mov
adc
ds
mov
xor
adc
xchg
pushf
outsb
adc
aas
std
mov
sbb
cld
ljmp
pop
xchg
dec
sbb
andl
push
aaa
xchg
es
jge
pop
mov
in
inc
sbb
cwtl
add
shr
mov
mov
adc
call
jg
sbb
xor
adc
push
cmc
dec
sub
inc
mov
mov
gs
mov
push
outsb
loop
pusha
fmul
jno
stos
and
xlat
scas
mov
inc
dec
jl
push
scas
ljmpw
ss
out
popf
movb
lds
and
pop
jns
cmp
fistpll
testl
inc
or
xlat
cmpsl
imul
jnp
xor
inc
adc
inc
mov
sub
shrb
fsubrs
jp
push
sbb
popl
loope
and
dec
lock
sbb
xor
das
and
shrb
addr16
icebp
cltd
sahf
inc
cs
jecxz
fnop
xchg
sub
out
jmp
cld
negl
dec
push
fs
push
xorb
sub
mov
pop
mov
add
and
xor
pop
aad
mulb
xor
and
pop
mov
or
cmp
and
or
addb
jl
test
sarb
mov
and
push
add
ror
test
push
scas
xor
mov
and
test
cmpb
pop
aam
add
repz
test
jno
cmp
adc
push
decl
xchg
stos
in
popf
jns
add
sbb
sbb
sub
mov
mov
sbb
push
pop
cmc
jne
mov
pop
and
daa
in
enter
add
pop
mov
mov
jns
inc
stc
mov
jbe
add
pusha
adc
leave
scas
gs
aam
dec
shlb
cmpsb
jne
data16
rcrl
mov
mov
stos
das
fwait
jle
xchg
adc
xlat
dec
adc
dec
push
cmpsl
adc
push
lcall
pop
push
lret
xchg
adc
dec
mov
add
mov
push
repz
movsb
in
mov
movsb
je
jl
data16
fiaddl
inc
or
push
xchg
cld
mov
js
insb
cmp
nop
pandn
mov
dec
mov
pop
lods
push
cmpsl
test
loop
shrl
inc
pop
dec
cs
mov
dec
or
mov
jae
xor
gs
stos
stos
push
pop
testb
inc
xor
inc
add
mov
sti
mov
add
mov
lods
add
jo
adc
das
mov
call
pop
jge
cmp
cmc
sarl
icebp
xchg
fsub
sub
adc
xor
mov
lds
cwtl
cmp
sbb
pop
and
add
lea
jg
mov
jmp
or
push
or
sub
jp
or
lahf
addb
je
adcl
adc
movsb
push
push
in
adc
xchg
aam
push
jbe
jl
std
jno
pop
add
dec
iret
xchg
lods
je
add
dec
add
pop
cs
and
or
sub
inc
mov
inc
sub
lods
xrelease
cmpl
add
pushf
jl
sarb
jp
mov
stos
mov
mov
js
arpl
sarb
inc
and
push
adc
xor
push
push
mov
pusha
xor
int
mov
adc
daa
mov
sti
out
mov
push
into
add
dec
cmp
pop
xchg
jb
cmp
mov
push
pop
stos
mov
pusha
rcrl
jp
xchg
inc
sub
imul
fisubl
adc
adc
lret
push
sub
test
jne
cld
lcall
decl
xlat
pop
es
out
aaa
fbld
ss
jnp
mov
mov
lahf
sbb
out
add
test
movsb
incl
sbb
mov
add
sub
adc
out
hlt
push
sbb
xor
fcom
xor
push
dec
divl
stos
cld
mov
cmp
popf
pop
pusha
pop
sti
out
cmpsl
movsb
push
sti
pop
and
sub
mov
cmp
add
loope
sub
pop
add
jo
push
push
mov
repnz
push
fnsave
popa
stos
mov
adc
push
out
xchg
and
xlat
lods
in
lret
inc
ss
sbbl
push
mov
mov
nop
add
xlat
pop
lcall
push
mov
push
xchg
jne
mov
lret
mov
cmc
sahf
dec
sub
fstpt
push
pushf
push
push
xlat
je
int3
adc
aam
mov
push
xor
adc
outsl
mov
cmp
or
mov
lahf
xor
cltd
cmp
xchg
sub
mov
dec
mov
jno
sub
iret
sbb
lock
xchg
pop
xchg
jns
cmpsb
sub
pushf
imul
fistpl
push
into
stc
adc
xlat
xlat
xlat
rcl
lcall
cmp
cmc
rcll
pop
andl
dec
jne
cmp
xor
cltd
std
push
jo
mov
daa
sti
cli
out
jae
repnz
push
adc
nop
add
mov
addr16
stos
dec
pop
xor
int
xchg
xchg
push
outsb
out
and
dec
dec
aaa
jecxz
daa
mov
mov
repz
scas
push
mov
ljmp
mov
sub
dec
and
test
lock
xchg
cmp
repnz
mov
add
jle
or
jbe
pop
gs
mov
and
add
rolb
bound
jne
push
jg
jbe
not
test
pop
push
dec
icebp
cmp
push
cmp
stos
cltd
inc
fistps
fsubrp
mov
add
push
mov
out
push
mov
inc
xchg
push
mov
jp
hlt
pop
loopne
in
leave
xchg
mov
fwait
sbbb
mov
adc
sub
lds
in
xor
rcrl
push
sub
pop
call
push
sbb
xchg
in
shl
sbb
sbbl
cltd
les
cmp
xchg
cld
ret
push
dec
aas
inc
neg
and
nop
into
jns
xchg
xor
outsb
cwtl
and
pop
xchg
std
xchg
jno
xchg
or
lret
dec
or
hlt
or
and
and
mov
fs
and
pushl
add
addl
inc
sbb
add
cli
push
cmpsl
rolb
jp
or
ret
fmull
outsb
incb
jmp
dec
jmp
addl
inc
sbb
jle
inc
cmpsb
mov
lods
pushf
mov
xchg
dec
xor
sbb
jle
jo
fistpll
pop
and
mov
xor
addr16
aad
jmp
or
mov
cmp
mov
test
jae
outsl
and
sbb
push
test
jnp
pushf
cmp
mov
inc
cwtl
nop
jnp
daa
adc
jno
inc
cmp
nop
aam
adcl
jp
inc
pop
addl
sti
ljmp
and
shll
dec
fwait
adc
das
pop
push
imul
xlat
adc
pop
push
fldt
adc
push
imul
lret
in
inc
jp
pop
xchg
adc
xchg
mov
pusha
mov
mov
and
cltd
inc
jmp
out
pop
adc
insb
sub
jge
jecxz
and
mov
dec
and
mov
fcoml
popa
cmpsl
and
sbb
dec
shrl
adc
aad
pop
or
mov
stos
rcll
insl
fists
cmpsb
adc
jo
aaa
enter
inc
mov
dec
pop
cmpsl
mov
add
cmpsb
cmp
bound
mov
or
cmp
inc
out
pop
push
aad
add
cmpsb
repz
adcb
leave
jg
cld
sbb
push
call
rcrb
sub
xor
pushf
or
push
cmp
imul
mov
aam
push
jo
dec
test
adc
enter
mov
cli
fidivrl
cmc
mov
and
pop
test
aas
mov
pushf
enter
adc
xchg
mov
jno
aas
xchg
push
int3
pushf
dec
cli
out
out
loopne
outsb
mov
inc
sbbb
add
outsl
shr
mov
push
xchg
inc
cs
popf
cmpsl
mov
sub
loope
scas
test
mov
mov
mov
aas
insl
shrl
test
sub
push
dec
xchg
addb
mov
scas
mov
cli
push
in
das
mov
xchg
add
dec
sbb
imul
icebp
jl
fldt
inc
pop
ja
inc
test
fmull
mov
outsb
dec
dec
inc
negb
int
jnp
xchg
or
dec
xchg
lods
push
xchg
inc
sub
enter
push
ljmp
ds
inc
pop
sti
into
add
decb
lods
in
lds
out
and
xchg
leave
xor
add
xor
or
mov
lcall
pop
out
jp
fnsave
adc
daa
pop
shrb
jno
push
xchg
sti
lahf
xor
jmp
push
imul
dec
jle
or
pop
sub
lock
hlt
mov
ficoms
je
cmp
mov
sub
nop
mov
fwait
nop
fisttps
adc
enter
scas
mov
xchg
add
es
fwait
cmp
push
cmp
sbb
add
popf
data16
cmpb
movsb
xor
ja
or
stos
das
add
iret
incb
xchg
xor
pop
rcrl
pop
pusha
push
enter
ja
loop
stos
xchg
hlt
addr16
or
subl
mov
xchg
jbe
test
es
mov
pop
fs
add
sbb
xchg
xlat
sbb
cld
cmp
fisubl
push
inc
rclb
sub
sub
adc
mov
mov
outsl
cmp
jecxz
sub
and
stos
mov
orb
lods
fs
pop
les
adc
rorb
mov
fmulp
adc
out
in
pop
fucom
jb
aam
leave
mov
sub
xchg
mov
into
iret
daa
push
enter
inc
fs
fidivl
add
aaa
mov
fbld
jb
sub
rcll
not
jecxz
pop
out
jmp
xchg
bound
out
fwait
mov
and
out
or
outsb
test
lods
jge
stos
xchg
cmp
sbbl
adc
jae
and
cmc
adc
or
jnp
jecxz
mov
int
lgs
pop
sti
dec
negb
nop
jecxz
adc
cwtl
mov
inc
es
dec
dec
mov
pop
mov
repnz
fs
orl
mov
adc
push
bound
loop
out
clc
incb
out
pop
mov
movsb
sub
sbbl
cmp
je
movsb
hlt
fisttpl
scas
mov
and
rorl
xor
mov
je
movsb
flds
sbb
inc
loope
jmp
mov
pop
dec
adc
pop
cmpsl
push
jle
stc
cmpb
push
sub
cmpsb
andb
jnp
mov
cmp
aas
test
lds
sub
cwtl
push
mov
lea
pop
jne
mov
mov
add
das
arpl
dec
adc
cmp
sbb
pop
jle
inc
in
fsub
outsl
adc
xchg
mov
mov
rcr
out
js
repnz
push
andb
mov
ret
nop
loopne
lods
sbb
sbb
outsl
dec
enter
loope
fdivs
add
hlt
jg
sub
loop
jge
xor
pop
add
or
push
pop
repz
iret
mov
leave
pop
nop
mov
gs
mov
sub
popf
add
or
ffreep
jle
fwait
pop
das
xor
andl
scas
lret
mov
ficoms
mov
add
inc
adc
mov
out
adc
xor
xchg
icebp
mov
movntq
ror
xchg
dec
mov
or
jo
cmpsl
add
or
insb
jp
and
pop
xor
in
and
or
hlt
in
cmp
pop
xchg
cld
xorb
mov
enter
lret
mov
shlb
sbb
push
arpl
and
bnd
scas
dec
jnp
popa
int3
orl
sahf
mov
sbb
xorl
mov
add
shl
xchg
or
dec
inc
jge
push
out
mov
dec
push
inc
dec
fldcw
bound
ja
stos
out
jo
clc
aaa
mov
mov
roll
bound
insb
ds
stos
mov
lods
jnp
xchg
dec
xlat
inc
adc
mov
sub
in
idivb
dec
mov
notb
cwtl
adc
pop
sbb
or
ja
inc
sbb
lahf
div
jmp
ljmp
xor
dec
and
fldenv
andb
adc
arpl
mov
add
in
dec
push
mov
push
fmull
adc
jecxz
jle
test
int
dec
ret
dec
cmc
inc
test
stc
hlt
dec
mov
add
xchg
mov
fbstp
mov
movl
in
push
pusha
out
shrl
pushf
cltd
insb
enter
sub
movsb
imul
or
lods
cmpl
xchg
and
gs
xchg
test
cmp
xchg
bound
std
inc
stos
test
mov
pop
lret
mov
xor
cmp
test
jl
jmp
fwait
add
inc
xor
jno
push
adc
dec
rcll
cwtl
inc
insl
mov
icebp
mov
arpl
pusha
mov
ret
lods
jb
push
mov
cmp
push
xor
jle
jo
cmp
mov
xchg
add
stc
jno
xor
sbb
fnstsw
dec
and
gs
jmp
push
enter
test
push
add
sti
ljmp
xor
sub
dec
mov
xchg
fcomps
insl
imul
rcl
rorb
sbb
push
je
or
dec
jns
cltd
cmp
and
lock
aas
hlt
xlat
pop
pop
jns
lcall
pop
pop
or
pushf
adc
dec
orb
decb
and
ss
or
sbb
in
add
push
fdivr
jno
mov
imull
sbb
aam
jnp
cmp
and
rolb
mov
push
dec
arpl
push
mov
inc
ljmp
shll
lods
adc
lds
std
dec
jnp
mov
loopne
add
inc
out
and
loope
loop
daa
mov
adc
dec
sbb
xchg
mov
test
in
call
add
and
xorl
push
lahf
mov
sub
pop
outsl
sub
fs
fstps
pusha
sbb
int3
mov
outsl
stos
mov
jno
incb
mov
inc
ljmp
lods
sub
out
insl
int
sti
sbb
loopne
jbe
fadd
fcmove
cmp
xor
in
jecxz
test
aas
push
cmpsb
mov
adc
push
mov
loop
or
mov
sbb
jns
add
lret
mov
sub
sbb
sbb
or
lds
xor
adc
dec
outsb
push
insb
add
adc
dec
jge
bound
pop
mov
popf
ja
add
pop
or
jbe
test
mov
xchg
sbb
insl
jl
ja
jle
testb
push
out
pop
adc
jb
inc
inc
arpl
div
mov
sbb
jmp
fnstcw
jo
mov
cs
gs
repnz
add
push
jp
add
int3
adc
movsb
movsl
mov
and
jp
mov
adc
call
xchg
jno
jecxz
inc
lock
push
push
repnz
repz
cmp
aas
and
fcomps
mov
mov
xchg
sub
fcomps
adc
andb
loop
fsubrp
mov
mov
ret
mov
sbb
inc
pushf
ljmp
in
lcall
xlat
in
test
nop
jmp
mov
mul
bound
xor
mov
push
xchg
sbb
lock
jmp
push
pop
icebp
shll
push
sub
push
mov
int3
fs
hlt
mov
mov
push
jge
pusha
aas
nop
fiaddl
dec
fcoms
orl
stos
clc
fmul
push
cmp
clc
jbe
mov
inc
push
outsl
cmp
mov
push
js
test
jb
lock
repz
movsl
cmp
iret
out
push
sbb
test
lret
fnstsw
ret
jo
push
test
pop
and
insb
rcr
aam
jecxz
into
jbe
jns
dec
push
sbb
jno
leave
cmp
sbb
mov
add
sbb
ds
cmpsl
cmc
lahf
out
mov
lahf
ficoms
fildll
xor
push
push
js
pop
icebp
ds
das
fisubrl
addr16
mov
or
xchg
bound
int
test
mov
mov
vshufpd
mov
pop
sub
loope
push
pop
pop
xchg
pop
and
push
daa
into
mov
mov
xchg
pop
arpl
xchg
adc
pop
dec
xor
divl
jmp
test
mov
dec
mov
lret
std
push
xor
in
sbb
cmc
outsl
aam
jmp
xor
test
fs
les
loop
and
sbb
lcall
scas
vmovlps
hlt
mov
jns
scas
loope
fmulp
shrl
lret
out
sbb
xchg
pop
in
mov
xchg
out
mov
movsb
in
jbe
in
xor
mov
outsb
jl
call
dec
cwtl
stos
mov
lret
es
cmpsb
jg
out
sbb
xor
gs
in
jo
das
xchg
xchg
pop
bound
cmp
and
or
dec
dec
dec
stc
ret
test
cmp
leave
sbb
fistl
mov
int3
fisttpl
xor
xchg
jnp
cmc
mov
aas
adc
add
mov
pop
notb
leave
sub
call
mov
jbe
add
adc
mov
mov
dec
test
or
mov
xlat
xchg
push
cmp
aam
mov
xchg
push
dec
scas
lret
cwtl
loopne
loope
sub
in
push
in
in
jno
out
popa
mov
daa
lds
icebp
jge
aaa
adc
dec
mov
aam
cmp
jecxz
xorb
lods
outsb
stc
jo
or
or
cltd
dec
fistpll
clc
int3
mov
xor
aas
jl
xor
xchg
xchg
push
cmp
sbb
add
mov
lds
imul
popa
pop
mov
out
lock
in
cmp
xchg
cs
xorb
push
scas
int
mov
int
add
dec
inc
adc
shrl
push
jno
jb
jle
mov
and
cli
fucompp
cli
stos
cmpsl
and
mov
push
push
in
scas
inc
les
addr16
cmp
fstpt
and
clc
sub
sub
enter
pop
cmp
rclb
pop
out
xchg
adc
popa
push
push
fs
mov
lock
out
hlt
adc
test
xorl
mov
stc
sub
and
bound
jb
cwtl
pop
lods
dec
ja
ds
inc
insl
mov
pop
and
cmpsb
pop
mov
inc
andl
addb
mov
add
lds
test
outsl
inc
in
add
jns
push
adc
das
dec
add
cmp
addb
sub
jle
call
loop
icebp
add
scas
out
loop
mov
or
cmp
mov
cs
adc
sbb
into
push
jbe
outsb
lcall
xorb
or
push
int
jb
fnstcw
test
neg
fwait
dec
nop
cltd
mov
fwait
in
jae
daa
mov
cld
mov
xorl
pop
xchg
push
jge
jb
adc
jmp
cltd
mov
push
and
add
lret
mov
mov
scas
shlb
jbe
sbb
dec
lret
pop
or
push
es
fucomp
mov
xorl
add
pop
pop
stos
push
rcr
mov
push
adc
xchg
fistpl
shrb
pop
mov
mov
imul
loope
xchg
out
adcb
jno
push
pop
jg
iret
or
into
popf
movsl
outsb
push
ljmp
cmpsl
scas
loop
cwtl
mov
mov
lret
mov
inc
inc
lahf
pop
lret
add
lock
xor
sti
mulb
movsl
mov
xchg
pop
aam
xor
xor
mov
mov
movsl
sub
xchg
cld
ret
ret
push
mov
sti
or
inc
shrl
ljmp
clc
or
mov
lcall
cmc
jnp
jne
rolb
fcoms
xlat
push
lock
push
jb
repnz
cmpsl
and
in
pop
subl
or
cmpsb
ss
inc
mov
mov
out
movsb
xor
aad
or
and
fstps
cmp
dec
xchg
paddusw
cltd
inc
mov
push
repz
ret
jnp
cmp
divl
xor
outsl
insb
sbb
xor
inc
xor
or
xor
push
cmp
js
add
pop
jb
add
jg
add
cmp
and
add
inc
xchg
int
sub
lea
dec
pop
fimull
or
in
clc
arpl
cwtl
mov
stos
stos
dec
stc
adc
pop
int3
inc
mov
insb
notb
adc
mov
pusha
xchg
push
push
lea
cmp
push
mov
hlt
sub
jno
and
loope
jmp
or
push
mov
cwtl
sub
mov
xchg
imul
xor
inc
or
fadds
and
mov
shrb
push
dec
je
jne
loop
dec
andb
xchg
push
xchg
ljmp
mov
sbb
xchg
sahf
mov
daa
mov
imul
rcrl
push
dec
add
push
and
out
sbb
cmp
jle
test
scas
insl
fistpll
je
test
faddp
or
push
and
repz
and
inc
mov
cmc
mov
xor
add
jecxz
xor
hlt
dec
fs
out
push
daa
mov
mov
cmpl
bsr
push
fs
fsubs
cmp
out
xchg
push
pop
sbb
adc
loopne
mov
lods
js
xchg
mov
jb
dec
and
xchg
jle
insl
xchg
mov
clc
or
cmpsl
iret
xor
push
ret
cwtl
data16
mov
scas
sbb
inc
pop
out
inc
cmp
xchg
mov
dec
xor
and
adcb
inc
jge
std
and
ds
sbb
pop
pop
pop
gs
cmp
aam
inc
fs
shll
imul
jo
jl
jmp
cld
and
ret
adc
pop
loope
nop
fimuls
out
test
lret
xor
mov
cli
dec
sbb
push
les
in
in
xchg
rorb
stos
cli
sub
icebp
xchg
jl
into
sub
insb
repz
mov
xor
insb
out
sbb
in
lock
mov
jecxz
mov
pop
lcall
push
cmp
sti
xor
mov
mov
push
or
sahf
pop
daa
cld
adc
mov
cmp
enter
xorb
adc
xchg
aad
divb
dec
adc
movsb
scas
js
dec
das
pusha
fs
cmp
lock
mov
test
addr16
lret
jno
add
xchg
xor
mov
mov
jp
mov
shlb
and
cmp
gs
mov
fdivrp
addl
sahf
in
adc
mov
and
dec
les
negl
sub
inc
push
push
scas
fwait
jecxz
ljmp
adc
jns
test
xchg
pop
data16
fildl
or
jle
mov
sbb
dec
and
cmp
orb
inc
push
fnstenv
adc
ret
clc
dec
mov
sbb
inc
push
cmp
pop
push
std
push
iret
xor
js
addr16
outsb
dec
push
mov
dec
pop
mov
dec
xchg
push
adc
clc
dec
ja
les
mov
lea
mov
mov
mov
xor
fwait
lods
adc
test
dec
mov
mov
xor
stos
mov
xchg
in
and
cmpsl
jno
xor
dec
jo
and
repz
lahf
rolb
cld
dec
add
pusha
lods
xchg
sbb
pop
pop
repz
fisttpl
adc
or
or
lock
dec
mov
mov
sti
lret
mov
or
insb
mov
cmp
icebp
and
negb
arpl
jp
bound
int3
xchg
loopw
outsl
shl
je
aad
hlt
insb
into
mov
add
mov
test
jmp
mov
adc
rorb
inc
xor
dec
popa
arpl
mov
ljmp
shrb
lahf
stos
sub
xor
push
lea
fcomps
sub
adc
sub
push
dec
xchg
repz
mov
xchg
sub
outsb
inc
into
mov
push
test
inc
imul
sub
jo
pop
xlat
mov
cs
mull
scas
inc
and
in
jecxz
jnp
sbbl
sub
test
mov
or
xor
into
leave
inc
movsl
ds
inc
js
jmp
lock
repnz
mov
or
adc
adc
xor
mov
inc
sub
mov
ror
mulb
mov
inc
ss
int3
jle
leave
mov
cmp
sub
jl
push
add
into
stos
gs
out
in
icebp
mov
dec
out
mov
and
mov
sub
test
or
shr
arpl
int
mov
inc
pop
test
xor
jp
push
mov
repnz
dec
insl
cmpsb
push
pop
out
xor
pop
add
cmc
jno
xor
pop
pop
dec
outsl
js
sub
data16
add
xchg
rorb
int
adc
rcll
xchg
outsb
stos
mov
lea
cmc
xor
fs
and
sub
out
in
inc
cmp
add
js
int3
xchg
push
jnp
lods
mov
inc
inc
cmc
faddp
mov
jecxz
orl
sbb
jecxz
das
nop
xchg
pop
pop
lods
and
stos
rclb
add
xor
dec
sbb
adc
out
push
sbb
ficomps
sbb
sbb
xchg
cmp
mov
add
mov
sbb
xchg
adc
ss
or
je
in
inc
out
in
call
cwtl
sub
sbb
inc
int
sub
insl
dec
rcll
push
sub
cmp
push
scas
mov
popa
arpl
ja
mov
lock
mov
stc
xchg
inc
jecxz
and
mov
add
xchg
sub
push
test
xlat
iret
sub
cltd
les
jg
push
fsts
xchg
and
xchg
test
loope
aaa
mov
sub
stos
sub
pop
out
xchg
dec
push
lahf
and
xor
ror
icebp
xlat
test
mov
jle
pop
inc
popa
xor
std
pushf
push
cmp
cmp
push
push
inc
dec
fcomps
jb
pop
cmp
shll
cli
xchg
loopne
ret
add
xor
fs
inc
add
inc
push
mov
or
pop
sahf
add
leave
sbbl
in
fstps
jg
adcl
sub
adc
sub
push
testb
dec
neg
and
dec
movsb
pop
hlt
dec
xor
int
push
data16
xchg
outsl
stc
insb
mov
mov
lea
mov
outsl
mov
das
cmp
cli
and
push
loope
jbe
mov
add
mov
lock
jl
mov
das
add
nop
xor
mov
xor
or
jbe
cmc
je
cmp
add
jbe
jl
jne
push
push
js
call
fdivr
sbb
test
mov
int3
icebp
pushf
xchg
ror
mov
jae
adc
cmp
xchg
cmp
lret
dec
insb
dec
pop
dec
and
mov
aam
addr16
stos
or
js
jne
mov
inc
sahf
push
pop
leave
scas
cwtl
adc
in
sti
cs
gs
addr16
push
pop
icebp
es
cwtl
outsb
shr
ret
xlat
adc
pop
or
sbb
pop
cmp
cmp
add
pop
mov
lea
mov
ss
gs
xchg
sbb
mov
adc
movsb
push
pop
fcmovnu
jo
mov
cli
test
cmpsb
mov
leave
aas
dec
je
mov
push
movsb
cmc
pop
clc
das
nop
insl
insb
imul
inc
lret
and
nop
rcrb
jbe
aad
cmp
lock
or
inc
mov
and
movsb
pop
mov
dec
and
enter
xor
or
orb
jb
mov
push
xchg
jnp
jle
add
outsb
cltd
in
mov
arpl
repz
sub
aam
mov
pusha
push
mov
mov
push
cmp
ljmp
jmp
xchg
mov
aam
xlat
fnstsw
test
aas
dec
cmp
clc
sahf
add
mov
subb
divb
or
dec
xor
cld
enter
jmp
cmp
pop
jmp
pop
std
inc
loope
rcr
xchg
or
cmp
test
lds
arpl
xor
out
or
jae
sbb
sbb
pop
jne
sbb
imul
pop
xor
lahf
xlat
adcb
mov
subb
stc
leave
mov
jg
fildl
adc
inc
adc
ljmp
mov
aas
adc
arpl
shrl
es
adc
dec
push
mov
ror
or
mov
cmp
ffreep
ss
test
movswl
jp
jmp
mov
push
adc
push
sub
pop
sub
insb
cmp
cmp
add
scas
cmp
fildl
push
dec
and
test
lock
testb
xor
push
punpcklwd
inc
cmpsb
pop
ret
aam
rorb
sbb
ret
loope
mov
and
stc
imul
imul
inc
cli
fcom
push
mov
into
outsl
add
xchg
ja
test
in
lret
cmc
hlt
push
pop
inc
int
push
insl
shll
add
sub
cmp
out
imul
xchg
pop
adc
gs
inc
pop
roll
adcb
test
roll
insl
test
test
stc
pop
or
dec
loope
sti
add
aaa
jecxz
popa
aam
jns
cmp
xorb
rolb
call
mov
ljmp
mulb
mov
cmp
inc
std
fyl2xp1
sbb
jmp
popf
mov
clc
mov
sub
adc
cli
xor
inc
loope
add
aas
push
call
stos
or
or
ds
test
rorb
in
aam
jne
sbb
dec
pop
fnstcw
popf
lret
lds
ret
nop
jp
pushf
pop
fimuls
mov
xchg
adc
sbb
add
rcrb
ret
adc
adcl
or
push
hlt
mov
adc
sbb
inc
dec
out
mov
mulb
rcrl
scas
mov
xor
cli
sbb
loopne
ljmp
insb
add
aaa
pop
xor
pop
rcrl
jns
push
lds
icebp
ficomps
leave
adc
cmpsl
xchg
sti
ljmp
icebp
mov
je
sar
mov
jbe
fsts
mov
iret
jne
rcll
dec
jg
in
sarl
sbb
aam
push
cmp
stc
leave
nop
cmp
imul
xor
push
add
into
scas
jo
out
and
cmp
stos
in
ds
test
add
lcall
xor
mov
hlt
addr16
xor
lods
or
add
pop
jnp
jnp
insl
push
mov
mov
sbb
hlt
mov
ljmp
cmp
xchg
data16
decl
fwait
inc
xor
out
in
ret
cli
jno
addl
rol
dec
lea
cmp
add
push
mov
xor
add
mov
insb
jnp
in
mov
add
call
roll
mov
test
jl
and
pop
jno
dec
add
xchg
testb
leave
idivl
cltd
push
lods
mov
push
sbb
out
scas
repnz
hlt
adc
cmpsb
push
pushf
cld
call
sahf
pop
fcmove
pusha
push
mov
add
aaa
jl
add
ds
clc
ljmp
xor
dec
sbb
stos
mov
test
popf
daa
cmpsb
and
push
cmpsl
out
loope
adc
out
fmull
aaa
call
sub
ret
dec
push
and
jb
sarb
orl
das
fsubl
ret
test
data16
and
mov
dec
in
mov
cmp
xchg
pusha
mov
imul
inc
ja
dec
cmpsl
js
outsb
std
and
insl
sbb
jle
shlb
add
push
cmpsb
xor
into
cld
int
sti
or
mov
mov
cmp
push
push
mov
or
cld
mov
jg
fcompl
fmulp
dec
scas
dec
mov
pop
push
and
fwait
aam
shll
or
mov
adc
movsl
xlat
jo
std
lock
sbb
xchg
sti
sbb
mov
inc
xor
mov
lahf
dec
push
xor
sub
addl
outsl
imull
sti
adc
xlat
loopne
mov
test
lods
in
addb
mov
jo
addr16
mov
bound
das
xchg
push
mov
test
mov
stc
jecxz
inc
enter
push
xlat
fwait
sbbl
cli
pop
mov
das
sbb
fwait
xor
xchg
mov
cwtl
mov
sub
mov
push
lods
andb
push
push
in
cs
pop
jp
ret
imul
sbb
out
mov
int
rcrl
jge
sbb
imul
sbb
mov
rcrb
addr16
pop
pop
sub
test
mov
inc
outsb
popf
push
iret
jne
imul
mov
bound
out
mov
pop
shrl
imul
lock
ret
inc
and
mov
ds
mov
repz
outsl
adc
cmpsl
mov
popf
xor
outsb
push
pop
push
lea
add
stos
daa
inc
mov
xchg
adc
rcll
fsts
sbb
push
or
xor
addr16
stos
out
out
push
add
mov
add
cmpb
sbb
pop
je
scas
xor
mov
push
mov
mov
xor
cmp
mov
or
mov
aas
js
scas
xchg
lret
inc
call
repnz
xor
pop
hlt
mov
iret
dec
rolb
pop
ficomps
sbb
das
cltd
mov
or
adcl
clc
sbb
pop
xlat
adc
mov
inc
add
repnz
adc
js
daa
test
dec
mov
push
pop
adc
xor
js
out
jl
out
call
mov
adc
adc
leave
sbb
pop
sbb
jns
dec
loope
pop
jb
mov
sti
lret
dec
int
fiadds
mov
insl
sub
stos
mov
loop
adc
inc
fdivr
shr
test
fstps
lahf
add
mov
xor
sub
inc
jb
mov
fsub
mov
arpl
xor
xchg
imul
les
mov
sbb
and
leave
aaa
repnz
pusha
mov
imul
mov
sbb
lcall
fsubl
mov
mov
test
icebp
and
inc
mov
jg
mov
cmp
xchg
xchg
mov
push
arpl
je
ret
sub
dec
fwait
cs
cwtl
pop
lret
stc
lahf
adc
jg
arpl
jns
xchg
pop
loope
inc
rcrb
cmp
mov
pop
pop
imul
inc
jle
xchg
sbb
stos
scas
mov
cwtl
int3
arpl
movsb
lea
stos
mov
or
and
movsl
inc
outsl
enter
ffree
dec
adc
fnstsw
nop
imul
dec
mov
push
roll
or
or
popa
mov
pop
mov
je
fs
popa
jo
pop
addr16
test
out
into
xor
xchg
lret
adc
jg
fs
push
push
jnp
addl
leave
roll
pop
mov
inc
shll
and
movsl
sbb
test
push
es
incl
sub
and
dec
mov
cmp
sti
rol
test
cs
pop
cmp
arpl
jns
pop
jmp
cli
jg
xor
cwtl
loopne
das
in
or
sbb
cmpsb
sub
inc
mov
arpl
dec
loop
lret
or
cmp
loopne
and
cmc
fnstcw
mov
stos
cs
adc
inc
cmpl
pop
int3
fdiv
shll
mov
dec
push
add
aaa
ja
in
inc
sbb
imul
inc
aas
cmp
in
sub
fs
into
jle
lret
mov
sbb
js
jb
pop
cmp
into
inc
nop
jae
sahf
in
jmp
shlb
shl
dec
jmp
in
mov
iret
arpl
clc
xor
adc
jae
jmp
mov
ficompl
mov
jge
adc
push
leave
mov
mov
dec
push
adc
cmp
test
mov
arpl
hlt
cmpsl
ret
mov
sti
loope
xchg
lret
pusha
sub
dec
and
mov
dec
into
mov
mov
popa
popf
inc
loop
sub
xchg
out
cmp
icebp
aaa
repnz
lahf
imul
lods
je
das
cmp
add
push
pop
cs
xor
inc
sbb
fucomip
pop
outsb
ficoms
mov
aad
leave
or
sub
fs
popa
inc
fiaddl
imul
adc
adc
add
fldcw
push
movsb
jb
mov
push
call
outsl
stc
arpl
in
das
xor
inc
mov
lock
repnz
pop
aaa
das
imul
mov
xchg
xorl
mov
out
dec
pop
xor
pop
xchg
jecxz
rcll
aam
in
mov
cmp
xchg
addr16
push
xor
aam
stc
inc
mov
adc
mov
sbb
mov
dec
pusha
mov
push
ret
imul
std
leave
xchg
add
repnz
inc
loope
mov
cmp
cmp
adc
mov
test
repnz
pop
or
ljmp
sub
pushf
push
push
adc
pop
scas
inc
imul
cwtl
mov
stos
shlb
push
in
out
inc
xchg
call
loop
mov
sbb
fs
xor
sub
das
mov
lds
xchg
popf
push
xor
lock
xchg
stc
and
or
cmp
xchg
cmpsl
sbb
inc
and
in
adc
je
pushf
imul
and
shll
insb
fidivs
mov
sub
movsl
dec
lds
sub
inc
test
rcll
lock
sub
jns
js
xchg
cmp
aas
jb
add
decl
sbb
subl
push
or
inc
clc
cmpsl
mov
jae
sar
sub
je
loopne
aad
inc
adc
pop
mov
xor
inc
mov
fs
addr16
jl
dec
inc
mov
and
nop
xchg
cmc
inc
inc
rcr
mov
mov
in
pop
inc
xchg
jecxz
or
pop
xchg
pop
sub
dec
ret
gs
pop
mov
pop
out
aam
ss
mov
shll
xchg
mov
and
test
sub
dec
sbb
push
mov
in
add
add
scas
cmp
es
out
adc
jl
fimull
jno
jmp
push
cmc
out
dec
jbe
pop
cmpsb
cmp
es
xchg
cmpsb
es
outsl
pop
mov
cmc
sbb
sub
push
xchg
int3
or
aam
mov
inc
and
and
out
and
dec
loop
orb
fs
push
scas
jb
ret
fs
add
add
push
cmp
mov
int3
dec
lcall
loopne
pop
push
aaa
out
xchg
and
lods
or
inc
movsb
lock
imul
sti
out
add
cli
xor
imulb
lahf
dec
mov
mov
pop
pop
and
into
jg
dec
test
jp
add
xor
ss
mov
sub
xorb
and
mov
stos
fmulp
movb
adc
push
loopne
addr16
and
ror
bound
aaa
xchg
push
jmp
inc
test
jns
push
push
and
divb
into
fmuls
push
dec
xchg
aas
or
mov
xor
mov
sub
lock
dec
imul
inc
mov
gs
js
sbb
cmpsl
push
sahf
xor
jg
mov
dec
fwait
add
cs
mov
mov
xlat
lret
fstps
fcomi
ss
sbb
cmp
lcall
xor
push
xchg
mov
cmc
mov
and
ret
xor
push
jge
or
inc
outsl
and
mov
inc
pop
rorl
movlhps
das
aas
jo
jne
add
add
nop
xor
add
xchg
sar
xchg
lock
aam
lea
loop
xor
sub
scas
popa
in
arpl
adc
cltd
push
inc
aas
mov
sbb
daa
cmp
pop
and
dec
pop
sbb
cmpsl
adc
pop
mov
jnp
insl
xor
mov
push
sbb
xchg
and
mov
lods
in
lret
sbb
mov
mov
and
out
jge
jle
test
cmc
ret
sbb
mov
or
add
add
dec
lahf
int3
aam
cmp
mov
idiv
cwtl
inc
iret
adc
shl
jbe
das
push
jecxz
icebp
addb
jecxz
sbb
icebp
or
adc
mov
dec
inc
ss
sbb
mov
enter
adc
xchg
pop
dec
and
ds
lea
xlat
mov
sub
idiv
and
ljmp
out
cmpsb
fsubs
shlb
repz
pop
pop
adc
mov
loopne
loopne
rcll
aas
xchg
xchg
inc
loopne
mov
daa
bound
adc
mov
xchg
jmp
add
mov
pop
xchg
rcrb
leave
in
andb
lock
pop
xchg
mov
dec
cmpsl
ljmp
jbe
fs
ds
sahf
add
inc
vcvtps2dq
pop
mov
push
sub
icebp
lret
xchg
jmp
out
imul
push
jge
xor
rcll
push
aaa
jmp
loopne
insb
jbe
jg
sbb
out
or
cs
movsb
push
adc
sub
daa
mov
nop
pop
insb
mov
cmp
inc
clc
xchg
mov
dec
lds
cmp
cs
mov
pop
cwtl
push
jno
mov
outsl
or
in
or
rcrl
pop
mov
lahf
int
popf
add
dec
mov
aas
fisttps
dec
lahf
xor
adc
lods
mov
cmpsb
cmpsl
addb
mov
jns
xchg
insb
pop
or
and
aam
push
push
inc
std
sbb
jmp
mov
lea
popa
lret
test
bound
cld
fxch
or
sub
fbstp
pop
adc
xchg
lds
call
fwait
and
sub
mov
mull
mov
pop
les
xchg
pop
in
or
mov
outsb
idivl
imul
sub
sub
or
ja
gs
insl
cmp
or
mov
pop
popa
ds
mov
dec
adc
mov
in
clc
dec
and
jp
outsb
fisttpll
mov
std
cmp
push
and
and
and
push
int
inc
je
dec
sub
cmp
and
setl
push
stc
and
in
mov
pop
mov
cmp
dec
xlat
js
jo
jl
xor
pop
loopne
in
mov
loop
mov
aas
call
cmp
jg
cli
sub
je
test
cmpsb
mov
sbb
pop
pop
daa
push
jno
xchg
int3
test
xor
mov
bound
insl
mov
adcl
pop
add
leave
out
and
shll
and
mov
lods
insl
pusha
inc
push
ljmp
push
pop
add
sbb
mov
lahf
sahf
xor
iret
ds
fnstcw
push
ja
movsl
xchg
mov
shlb
aam
out
cs
insb
pop
mov
clc
imul
popa
dec
sub
xchg
loopne
xor
cli
icebp
sbb
cmp
xchg
cmp
mov
lret
mov
lcall
adc
jne
mov
mov
pop
sbb
mov
in
cwtl
push
movsl
fwait
stos
sti
push
mov
mov
xchg
vpand
fs
fildl
push
push
shrb
dec
mov
xor
rclb
push
aaa
add
mov
xchg
aam
arpl
mov
insb
jbe
je
or
and
xor
mov
jle
xor
and
stc
pop
fmuls
fnstsw
lcall
dec
test
fs
ret
mov
or
inc
cmp
or
js
fs
xorl
shll
jle
jg
mov
iret
inc
xor
arpl
repz
shll
int
or
iret
pop
cmpsb
shlb
cmp
mov
cmp
sbb
and
punpcklwd
imul
sbb
loop
cmc
and
pusha
push
and
sbb
scas
mov
dec
pop
cmp
mov
sbb
push
mov
pop
into
repz
add
pop
adc
popf
mov
adc
mov
out
out
fmul
cmp
iret
or
jbe
dec
xchg
cmp
andb
inc
push
mov
adc
jmp
cltd
add
lret
out
mov
dec
icebp
mov
stc
cmp
dec
inc
xchg
std
mov
sub
jae
mov
xlat
cmpsb
hlt
rcrb
jmp
mov
mov
mov
jae
data16
notb
data16
and
adc
addr16
fs
int3
je
popf
fs
pop
sub
inc
xor
lahf
push
and
xlat
mov
push
sbb
dec
adc
dec
fdivrs
out
aas
mov
fs
pop
scas
mov
lret
add
lret
aad
mov
xchg
icebp
pop
dec
lods
scas
pop
inc
gs
xchg
pushf
into
jno
xor
cmp
out
loopne
rorl
cwtl
and
subb
jnp
adc
ficomps
jo
jo
inc
imul
or
cs
popf
jnp
jo
ret
pop
sub
and
mov
int
mov
int3
pop
jnp
imul
xor
leave
aam
test
inc
dec
jnp
ret
mov
test
inc
jmp
sub
dec
jae
lahf
cmpb
test
dec
mov
xchg
inc
push
xchg
movsb
pop
iret
into
jecxz
xor
cld
pop
xor
inc
inc
push
dec
jnp
push
jmp
jp
sbb
add
jns
mov
cwtl
inc
sub
fldt
jae
pop
add
dec
mov
xor
mov
push
out
or
push
pop
and
repz
enter
sti
fisubl
sub
sub
and
shrb
inc
and
adc
fwait
icebp
jecxz
lcall
cs
arpl
data16
fmuls
subb
imul
adc
sar
aaa
setns
pop
shl
rcr
mov
mov
fs
stos
aam
xor
stos
andl
outsb
mov
loop
fwait
ret
adc
lahf
or
or
sbb
jb
and
jg
adcl
xchg
or
pop
cltd
aad
mov
adc
fwait
gs
or
ljmp
repz
es
mov
out
xor
ja
pusha
jne
rol
in
pop
rcr
fimull
imul
std
sub
dec
sbb
es
cmpb
out
fsubl
int3
repz
sbbb
rcrl
ror
adc
jnp
jp
repz
adc
inc
mov
rcll
pop
jp
inc
out
movsb
test
cmp
in
jo
xor
jae
mov
jno
pusha
xlat
cmp
inc
mov
sub
mov
aas
lea
adc
xor
jae
fsubrs
pushf
add
lods
imul
push
xor
test
inc
add
inc
sub
test
mov
xor
test
in
outsl
cmp
jbe
cs
fsubrs
inc
add
scas
mov
mov
dec
jle
add
std
scas
stos
leave
in
xchg
or
mov
bnd
jne
out
pushf
lods
insl
sub
cmpsb
call
lods
inc
mov
adc
jg
jns
mov
push
xor
push
clc
lods
loop
mov
push
lret
sub
popf
adcb
pop
orl
and
and
sub
inc
popa
push
and
mov
xchg
inc
jne
cmp
pushf
xchg
arpl
pop
adc
ljmp
xchg
sahf
mov
xchg
test
mov
inc
test
pushf
mov
sub
and
out
sbb
gs
andb
or
pop
mov
xor
jg
in
mov
arpl
sub
outsb
cltd
cmp
add
outsb
cmp
loopne
int3
push
sbb
xchg
xchg
mov
inc
stos
add
cmp
xor
fsubr
cmp
leave
xlat
and
push
lds
xor
mov
and
mov
cli
outsb
pop
xor
cli
sub
neg
or
repz
xor
cs
push
sub
rcrl
scas
jl
add
xchg
push
mov
mov
push
test
inc
lahf
sbb
jns
lcall
or
lahf
fs
jp
lret
rorb
rol
inc
xchg
das
divb
sub
loopnew
loopne
pop
mov
shlb
lock
in
cmp
es
sbb
jmp
in
mov
mov
jp
in
cwtl
gs
cli
dec
inc
mov
das
dec
jb
test
cltd
push
scas
push
or
xchg
mov
test
xchg
dec
add
mov
pop
mov
xchg
jle
xchg
cmp
fadd
mov
cmp
movb
rcl
das
cmpsl
xor
hlt
sahf
push
push
inc
les
popa
psllq
shll
movsl
stos
add
or
adc
ja
bound
mov
ds
and
aam
xchg
jns
lcall
je
jmp
lahf
push
push
loope
daa
sub
pop
add
int
scas
stos
pop
xor
sbb
pusha
adc
imul
imul
fs
out
push
mov
push
imul
scas
mov
or
xchg
imul
lcall
cmpsb
adc
js
repz
pop
push
aas
es
imul
push
cltd
jns
mov
fcmovnb
adc
stc
iret
loopne
inc
mov
jae
inc
cli
icebp
push
mov
jno
pop
jnp
lods
addl
pop
sarb
mov
mov
mov
push
icebp
sub
fdivrs
add
rolb
mov
lods
adc
test
mov
pop
xchg
xorl
stc
push
push
fldt
pop
mov
sbb
shlb
shl
std
flds
icebp
mov
pusha
lea
adc
subb
add
rcrb
sub
jl
mov
imul
imull
jb
xor
js
cli
fdivs
or
push
xchg
scas
arpl
pop
mov
or
imul
jmp
push
mov
js
call
cli
outsl
sub
popa
adc
or
mov
cltd
jo
in
test
cmp
test
movaps
int3
sub
push
mov
xorl
insb
and
inc
enter
adc
sbb
das
inc
ss
push
pop
push
xor
mov
dec
sub
pop
aas
or
adc
sbb
or
sbb
adc
add
hlt
sub
insl
lds
adc
cmpsl
mov
cmc
sub
in
mov
cltd
int
lcall
pop
lea
mov
pusha
push
test
in
pop
cmp
outsl
xchg
sub
in
fsubp
cmc
mov
divb
fldt
push
push
or
gs
jle
or
sbb
mov
sahf
out
push
pop
int3
mov
mov
adc
testb
js
mov
fcoms
sub
scas
dec
push
push
fistl
and
push
leave
push
lds
out
push
ds
push
insb
dec
cli
fistpll
and
xor
sub
mov
jmp
push
into
je
jecxz
pop
or
mov
or
xorb
pop
xchg
andl
push
dec
mov
rol
dec
imul
mulb
call
add
push
pop
jp
cmp
aam
mov
gs
push
and
pop
xor
pop
rolb
mov
inc
les
loopne
dec
and
ja
js
cs
stos
add
lock
stos
xlat
dec
int
jb
and
adc
das
mov
jp
movsl
loopne
dec
lret
jae
cmp
daa
hlt
ds
aam
addr16
test
scas
and
xchg
es
or
sarb
sub
aas
sahf
jae
sub
test
sbb
lahf
jle
sub
push
or
ds
loop
cli
sbb
jb
std
pop
ud0
push
push
jns
xchg
sti
icebp
mov
sub
cltd
mov
sbb
xor
or
imul
jbe
cmp
ljmp
adc
and
sub
jbe
dec
cmc
mov
test
jge
pop
adc
rclb
push
ret
insb
cmpsl
jnp
es
jns
loop
xor
inc
adc
ret
xchg
ss
add
test
cmp
mov
sub
xor
sahf
std
or
ljmp
shl
popa
sti
loope
cmc
out
ds
inc
shlb
dec
ja
in
xchg
orl
je
mov
enter
gs
mov
mov
sub
xchg
sbb
pop
or
addr16
out
cmp
cmpsl
jae
pushf
xor
cmp
lret
sbb
cmpsb
add
movsb
pop
sbb
sbb
sub
dec
nop
mov
scas
adc
inc
pop
mov
jmp
cmp
repnz
or
arpl
repnz
movsl
pop
or
xor
in
repnz
lods
subb
xchg
flds
test
in
in
cli
lahf
cmc
je
mov
punpckhbw
das
jb
mov
xor
sbb
mov
mov
sbb
pop
mov
jno
adc
lea
pop
inc
or
shr
sbb
add
inc
sbb
push
mov
jnp
sbb
mov
jg
arpl
je
insb
stos
ds
adc
es
fcomps
sahf
jne
xchg
mov
mov
sbb
cmp
mov
cltd
fsubrs
lods
and
int3
xchg
repnz
push
push
lods
mov
jle
xor
lds
mov
imull
sub
scas
mov
lds
fwait
inc
outsl
fistps
out
pop
lret
sub
outsl
dec
sbb
data16
inc
push
in
mov
movsl
mov
jl
imul
sbb
xor
jge
and
imul
mov
outsb
add
pop
leave
xor
push
adc
mov
lahf
out
xchg
lock
ret
sbb
bound
mov
jmp
cli
or
xchg
jbe
roll
jb
rorb
stos
out
test
xor
inc
pop
jl
jge
mov
dec
inc
aaa
decb
cmpsb
in
xor
pop
int3
mov
enter
cltd
out
mov
sub
out
push
ret
shl
cmp
int
cmp
loope
mov
aas
shll
xlat
cmpsl
repz
and
sbb
pop
out
jl
cmp
cmp
js
sub
or
or
cmp
mov
lock
mulb
imul
ror
shll
push
or
inc
mov
es
mov
or
sub
rcrb
lcall
xlat
jbe
inc
or
daa
and
sahf
adc
jle
pushf
dec
mov
jl
mov
cld
in
outsb
sbb
clc
lea
int3
push
sarl
js
cmp
jne
push
leave
pop
aad
rcrl
lcall
sarb
fbstp
inc
fidivs
stc
mov
mov
push
clc
push
inc
jge
sbb
dec
and
add
and
shll
iret
add
add
lock
ret
rclb
dec
ds
vmread
mov
fldenv
in
sbb
clc
jp
xchg
lds
mov
xor
loope
imul
je
cmpsb
push
ja
jmp
xchg
xor
jecxz
mov
inc
or
or
int3
lahf
xchg
xchg
or
in
adc
mov
pop
filds
inc
pop
sbb
xchg
adc
jecxz
jo
stos
jbe
ljmp
loop
lcall
out
inc
popf
not
in
rorl
add
lcall
shll
mov
insl
add
or
adc
bnd
out
mov
gs
xor
adc
adc
add
js
cltd
jno
cld
lock
or
lret
jb
sbb
in
xor
fwait
add
jmp
mov
xchg
inc
lods
mov
push
outsb
cwtl
ja
jg
call
pop
push
into
int
jns
jns
out
fs
arpl
inc
xor
mov
cli
test
xor
inc
sub
mov
icebp
pop
das
inc
imul
lods
cld
dec
sahf
dec
ret
mov
sbb
mov
jns
sti
js
imul
stc
popf
clc
cmp
lea
rol
mov
mov
xor
mov
loop
divb
loop
add
push
in
jne
sub
int3
push
inc
mov
fnstsw
push
fisttpll
xchg
and
add
sbb
xor
cmp
add
jo
repnz
pop
or
dec
in
mov
sti
xchg
pop
ss
jecxz
fdivl
or
js
push
mov
inc
lea
dec
push
nop
mov
repz
fwait
jecxz
inc
aaa
cli
popa
imul
dec
adc
shl
push
jo
hlt
or
xchg
pop
fsubl
mov
pop
or
out
sub
pop
test
mov
cltd
add
daa
sub
xorl
mov
xorb
insl
sahf
and
mov
std
mov
fwait
adc
or
sbb
adc
adc
test
movsb
sbb
pop
dec
stos
test
aas
stc
cmp
cs
xor
fwait
movsl
inc
jnp
clc
inc
jp
in
and
lretw
popf
nop/reserved
repnz
inc
mov
add
enter
xchg
jg
mov
out
leave
outsb
pop
icebp
sbb
cltd
rclb
rorb
mov
push
sbb
rclb
sbb
or
push
push
dec
int3
div
inc
jmp
xchg
es
test
sar
dec
xchg
xchg
jge
mov
mov
lahf
sbb
sub
push
mov
loopne
std
pop
adc
lcall
enter
cmc
and
inc
add
ss
lahf
jle
mov
fisttpl
add
pop
and
bound
pop
lret
mov
dec
aaa
add
les
inc
imul
in
mov
or
pop
pushf
popa
cld
leave
or
lods
mov
sbb
cld
lea
lret
pfcmpge
inc
cmp
js
mov
js
movsb
adc
fs
stc
mov
jecxz
dec
push
push
insb
popf
sbb
and
adc
test
fisubrs
add
jno
and
push
add
inc
fwait
arpl
ja
xor
lds
icebp
cmp
pop
fs
xchg
cld
pop
xor
addb
add
pop
xorb
push
cli
ja
arpl
jl
mov
or
hlt
ret
cltd
dec
mov
lds
cmp
jae
xchg
push
ljmp
mov
xor
loopne
lahf
mov
adc
dec
jb
pusha
jg
pop
push
int3
xorb
and
adc
xor
lock
popf
nop
push
pusha
jmp
out
cwtl
adc
adc
and
in
in
add
aam
outsb
rclb
in
adc
add
sub
cmp
cmp
pop
adc
fwait
push
fwait
cmp
movb
or
imul
or
jle
std
jecxz
mov
ljmp
popa
dec
cmpsb
sbb
lea
push
es
sahf
pop
call
xlat
test
or
sbb
test
lods
popf
push
int
push
and
xor
pop
loope
xor
pop
add
xchg
in
mov
mov
in
test
push
lds
loop
mov
inc
subl
xchg
or
cmp
sub
cwtl
xor
dec
adc
lock
push
mov
lds
xor
popf
mov
xchg
test
xor
push
lock
loop
add
icebp
cld
xor
das
outsl
xchg
mov
bound
sahf
cmp
lcall
lods
jno
call
out
mov
dec
enter
into
cmpb
fsub
iret
mov
push
sti
shrb
adc
stos
jle
movsl
int3
xchg
mov
ficoms
out
mov
xlat
cld
push
jns
mov
pop
ljmp
xor
dec
pop
popa
push
mov
xchg
mov
in
mov
lret
outsl
movsl
dec
and
inc
rcr
ja
imul
jg
mov
aas
sub
test
lahf
popa
pushf
pop
adc
int
jmp
adc
mov
xchg
jecxz
int3
cld
push
cmp
movsl
pop
scas
sti
test
dec
push
and
sbb
pushl
push
cmp
pop
add
jbe
mov
nop
dec
cmp
sbb
or
addr16
pop
pop
mov
test
int
pop
xor
xchg
mov
push
inc
cmp
inc
daa
inc
scas
push
mov
pop
data16
ror
movsl
adc
iret
mov
lcall
jns
fldl
es
pop
es
jmp
pop
dec
rep
leave
jecxz
outsl
lcall
push
sub
mov
lea
or
aas
js
cwtl
bndstx
out
ret
jecxz
push
or
mulb
mov
pop
xor
imulb
inc
out
addr16
addr16
xchg
ret
jle
sahf
jecxz
sub
in
jle
mov
shlb
dec
daa
gs
add
ljmp
dec
insb
insl
les
in
mov
jl
jnp
mov
mov
jo
icebp
xchg
imul
xchg
stos
insb
into
ficomps
mov
dec
leave
cli
test
cmp
and
xchg
out
maskmovq
idivl
fidivrs
cmc
xchg
sub
sub
mov
mov
dec
push
jns
inc
jns
lock
dec
test
mov
jae
and
mov
sti
jecxz
mov
lods
shrb
dec
pop
pop
mov
clc
inc
pop
or
sub
pop
stos
leave
mov
xorl
push
gs
fdivl
adc
notb
fadds
addr16
loop
add
push
pop
sbb
cmpb
push
arpl
push
stos
adcl
fwait
lcall
and
dec
sub
shr
push
add
jb
adcl
inc
mov
xchg
lods
add
jnp
pop
mov
xor
aas
mov
js
clts
fidivrl
cmp
and
in
mov
push
das
and
imul
cmp
xor
jb
mov
cltd
ljmp
cmp
dec
sbb
negb
push
loop
pop
push
push
frstor
pop
out
fsub
add
je
fisubl
loop
stos
ret
bound
lods
mov
pusha
mov
mov
dec
fbstp
fldenv
inc
inc
pop
dec
stos
mulb
test
cmc
xchg
insb
xor
jle
cmc
push
inc
scas
cs
fsubrl
jae
stc
adc
pop
test
pop
stos
add
aad
push
cmpb
sbb
addr16
leave
adc
icebp
in
pop
stos
leave
sub
push
mov
push
jecxz
inc
inc
sbb
and
sub
sub
sub
xchg
xor
cmp
hlt
dec
lea
adc
test
jb,pn
ret
mov
pop
pop
lahf
popf
jo
mov
shll
add
insb
aad
loopne
sbb
addr16
inc
lock
loop
enter
insl
cmp
syscall
data16
mov
mov
pop
hlt
in
mov
adc
loopne
ja
mov
andb
mov
push
sti
scas
cmpsl
stos
sti
stc
jg
mov
sahf
and
lods
or
sahf
test
loope
hlt
adcl
cld
sbb
ficompl
hlt
ja
dec
cmc
popa
mov
daa
and
sbb
push
aad
jbe
adcl
or
pop
and
inc
imul
xchg
push
fmuls
sbb
sti
arpl
push
dec
pop
dec
cmp
fwait
testb
lret
pop
pop
sbb
pop
ja
aaa
test
divl
add
orb
jg
pop
mov
and
call
out
mov
test
xor
push
sbb
mov
test
push
int3
or
fucomp
call
scas
inc
add
enter
pop
arpl
ret
shlb
pushf
cmp
xchg
push
mov
push
fiaddl
jbe
mov
lahf
push
inc
movsb
sub
frstor
xor
xchg
in
pop
daa
sahf
xor
pop
std
fisubl
enter
jae
inc
test
inc
mov
mov
and
xchg
add
mov
sbb
rcrl
lcall
pop
xchg
aad
sub
rorl
ljmp
sti
jecxz
mov
insb
and
pusha
push
sar
push
xor
push
shll
lret
xor
fists
cltd
inc
cmpsb
test
mov
and
cs
mov
mov
jmp
fsubrs
xor
xor
jae
lcall
cmpsb
jne
mov
jae
jns
sbb
or
fcomi
pushf
push
jp
int3
pop
outsl
imul
outsl
lods
push
rcrl
mov
xchg
mov
jmp
faddl
sub
pushf
push
inc
nop
adc
in
jnp
mov
enter
sti
cld
xchg
and
adc
iret
mull
popf
ds
cmp
andb
fadds
stos
pusha
icebp
dec
adc
clc
mov
mov
fcomps
cmp
cmp
push
sbb
add
enter
pop
xchg
cmp
inc
sar
inc
xor
loop
addb
jp
ss
pop
in
fimuls
loope
mov
jae
mov
ror
mov
imul
mov
adc
dec
aas
mov
sbb
or
and
ret
inc
mov
jge
lahf
fdivr
dec
int3
push
sbb
push
or
or
lahf
dec
out
orl
xchg
das
pushf
jns
outsl
jl
aam
xchg
xchg
pop
clc
dec
call
pop
sbb
jo
xchg
cmp
arpl
xor
push
enter
lret
xchg
out
sarb
sbb
pop
xchg
jo
dec
call
int
add
hlt
add
fwait
ja
call
lret
mov
mov
insl
xchg
aas
adcl
repz
shll
imul
dec
rcrl
stos
in
test
pop
ror
adc
jnp
cmp
mov
aas
sub
shlb
sahf
mov
and
inc
or
out
stos
add
ds
aam
in
daa
aaa
jns
frstor
int
push
cmpsb
repnz
sbb
fnsave
pop
arpl
push
shrl
sub
mov
or
loope
and
test
inc
dec
mull
inc
mov
imull
ja
add
pop
adc
xor
adc
mov
and
mov
cmp
push
adc
mov
dec
lret
mov
dec
xor
sub
shll
xchg
mov
mov
add
iret
mov
inc
jnp
add
dec
int3
sub
inc
shl
test
jns
test
ja
mov
ja
cmp
divb
inc
insl
insb
testl
fisubl
cmc
pop
in
enter
out
ret
push
and
sub
bound
test
sbb
stos
inc
subb
or
fdivrp
cmpsb
arpl
ja
cwtl
sbb
push
aas
scas
push
jae
cmp
sub
inc
out
movsb
mov
daa
clc
sbb
mov
ss
inc
sub
push
int
subb
mov
add
inc
andb
andl
fists
pop
mov
loopne
test
and
icebp
push
push
into
dec
bound
mov
inc
daa
xorl
jne
pop
cmp
mov
mov
push
jecxz
push
std
sbb
loop
arpl
inc
mov
push
cli
je
push
insb
pop
loope
aaa
mov
and
test
je
iret
xchg
iret
nop
push
shrb
xchg
dec
test
shlb
ds
rcrl
add
shr
inc
mov
inc
mov
dec
jnp
mov
cmp
jno
cmc
mov
inc
popa
xor
and
aam
sbb
ljmp
roll
mov
sub
xor
or
sub
pop
or
or
dec
ja
xor
mov
pop
loopne
fidivrs
push
cmp
fsubrl
xor
sbb
std
mov
and
mov
add
out
mov
sub
out
je
mov
lcall
or
add
xor
mov
inc
fdivs
push
shlb
or
add
dec
inc
mov
call
or
shll
xor
sub
lods
stos
sbb
jg
repnz
add
lcall
xchg
loope
lcall
mov
in
xor
jle
adc
dec
test
adc
cltd
cmc
jp
push
push
cmpsb
sbb
cmp
je
in
push
pop
lock
pushf
mov
xor
inc
out
ret
movhps
inc
adc
enter
push
jp
inc
imul
jg
sahf
addr16
idivl
lods
cld
insl
outsl
mov
xor
out
rcl
data16
fistpl
inc
into
aas
sti
push
rol
clc
sub
sub
lret
xor
xor
cmp
mov
in
push
cli
add
nop
xor
arpl
out
outsl
pop
push
xchg
add
mov
fldenv
cmpsb
or
outsb
es
xchg
pop
jle
outsb
pop
pop
inc
mov
push
testl
into
pop
int3
or
insl
adc
mov
jbe
push
data16
and
lock
inc
pusha
testl
cmp
pop
fs
add
pop
sub
sub
addr16
test
pop
es
jmp
int
mov
push
mov
adc
inc
pop
leave
dec
or
adc
fldt
xor
push
push
dec
mov
popa
inc
test
aad
stos
stc
mov
shl
jne
sbb
and
mov
insl
sbb
sub
mov
repnz
dec
push
ss
mov
mov
add
xchg
push
xchg
push
jae
and
mov
sbb
shrl
pop
jecxz
out
in
dec
cmpsb
push
adc
bswap
mov
mov
mov
lock
pop
hlt
add
out
sarl
out
in
aas
out
ds
push
jbe
lcall
shlb
adc
dec
ljmp
arpl
inc
dec
bound
rcrl
rorl
rcrl
je
xchg
and
aam
imul
shr
ret
jge
pusha
stos
fs
lahf
pop
jnp
popf
sbb
and
icebp
sti
jp
jmp
inc
lock
mov
pop
jnp
popf
scas
movsl
call
inc
ret
lcall
mov
mov
add
mov
sti
outsb
push
int
dec
psllw
mov
out
sub
push
js
rcr
mov
fsubs
inc
enter
push
in
jne
aam
sub
aad
xchg
adc
or
icebp
movsl
mov
sub
mov
imul
mov
and
mov
push
loop
stc
cmpsl
cmp
jae
push
shlb
neg
cld
iret
mov
mov
std
daa
scas
pop
jo
mov
dec
movsl
xchg
xchg
out
push
mov
stos
out
cmp
xor
sahf
xlat
dec
jge
sahf
jle
lcall
arpl
xchg
cmp
ljmp
mov
mov
mov
mov
inc
scas
push
cmpsb
into
dec
aaa
push
xor
inc
or
das
mov
movsl
inc
mov
cmpsl
shll
add
mov
and
xchg
pop
push
lcall
fmul
push
test
test
or
mov
js
pop
xchg
test
mov
xchg
xorl
lds
subb
jp
ret
mov
sub
pop
lahf
out
ret
add
push
test
add
push
pop
js
jmp
mov
popf
xchg
sub
or
add
fsubl
push
ja
add
add
fsubrp
or
ds
and
es
sub
mov
cmpsb
sub
pop
lock
aad
jne
mov
cmp
jbe
dec
addr16
shrl
lret
xchg
popa
test
dec
mov
dec
jp
xchg
or
out
xor
xor
adc
lods
mov
add
adc
enter
push
mov
mov
or
cltd
inc
xor
jns
mov
sbb
sti
rorl
cmc
pop
out
lock
scas
adcl
loopne
xorb
jne
fdivrp
flds
inc
xor
fxch
in
mov
js
xor
inc
mov
call
lods
out
outsl
pop
cli
dec
dec
mov
xor
outsl
or
cmp
cld
xchg
shlb
mov
xchg
sbb
push
loope
test
fsqrt
jge
add
aas
jg
mov
jbe
std
sub
mov
sub
aaa
orl
mov
sti
test
xchg
mov
data16
xor
in
stos
aas
mov
clc
pop
add
packssdw
rorl
jnp
push
inc
scas
lods
lds
loope
test
lds
aaa
adc
ret
and
es
leave
loop
push
xchg
or
bound
mov
adc
imul
lcall
int3
mov
loop
pop
xchg
fwait
ljmp
ljmp
arpl
lock
insb
cmp
push
mov
popa
repnz
imul
pop
push
dec
stc
adc
adc
ljmp
loope
push
cltd
shlb
or
lea
add
push
sbbb
js
sbb
loope
out
aad
insb
jge
mov
mov
or
movsl
jo
aaa
mov
pushf
xchg
push
iret
xlat
out
lret
add
jbe,pt
dec
mov
je
mov
push
aas
das
in
in
mov
jae
xor
push
lret
add
pop
rolb
add
mov
xchg
push
mov
mov
sub
push
adcl
pop
cld
cld
adc
jge
movsl
lock
jb
mul
loopne
mov
or
mov
mov
jle
pop
loope
into
shlb
mov
arpl
outsl
and
cltd
enter
cld
xchg
das
inc
das
fsubs
stos
sub
mov
push
and
insb
stos
adc
ljmp
fildll
jno
mov
stos
mov
mov
or
sbb
mov
xchg
add
sbb
pop
popf
es
cmp
bound
add
inc
dec
fwait
mov
cmp
xchg
shrb
mov
enter
jle
push
int
lcall
test
sbb
test
movsl
fnsave
pop
xchg
jmp
inc
adc
xchg
mov
inc
sbb
mov
inc
fs
push
into
dec
inc
std
outsb
adc
ss
outsb
fpatan
cmp
cmp
jecxz
pop
rcll
lods
fs
inc
mov
outsl
scas
sbb
sub
fucomip
ficompl
xchg
pop
dec
mov
sub
xor
xor
add
sbb
push
xor
aad
mulb
shrb
and
mov
push
lcall
out
add
xor
pop
shl
test
xchg
mov
test
loopne
sti
in
jo
divl
mov
js
nop
push
sub
sub
stc
stos
mov
sbb
int
fidivrs
popa
adc
hlt
int
or
mov
ljmp
cmp
pop
mov
test
add
xchg
stos
push
add
in
movsl
dec
lods
jno
stos
fstpt
push
xor
test
in
outsl
shll
and
fcmove
fsubrl
sbb
popf
andb
or
mov
jae
jno
and
or
push
cltd
lret
fmull
mov
das
dec
sub
scas
mov
pop
repnz
loopne
cmp
xchg
xlat
mov
dec
test
inc
fidivl
out
shll
or
mov
or
xlat
scas
pop
sub
dec
outsb
lods
cmc
stc
ficomps
xchg
hlt
sbb
into
out
out
mov
in
divb
mov
pop
movsl
cmpl
dec
neg
push
pushf
push
pop
push
shlb
fisubs
outsl
mov
cld
clc
insb
stc
add
lahf
push
scas
daa
in
and
or
ja
and
stos
and
cmpsb
sbb
hlt
repz
mov
cli
popa
rcrb
push
push
mov
xor
jo
adc
adc
mov
adc
mov
sarl
xchg
ds
daa
sub
push
test
negl
cmp
lahf
mov
in
adc
nop
and
mov
inc
cmp
jae
xor
decb
add
or
popa
bound
fisttpl
clc
das
aaa
xor
xor
int
mov
or
lret
cmp
sbb
mov
or
inc
subl
out
loopne
and
xchg
and
xor
insb
push
mov
push
test
lret
out
sbb
movsb
and
dec
adc
js
push
push
pop
jp
sbb
aas
popa
pushf
in
int
pop
jne
in
dec
notl
jno
xchg
mov
jmp
sub
sbb
lret
popf
mov
popa
sahf
fiadds
fdivr
adc
inc
sub
mov
shrl
lret
icebp
pop
add
or
inc
adc
or
clc
jnp
xlat
push
jbe
push
sub
sub
ret
cli
stos
fildl
insl
cmp
aam
aas
cmpsb
push
dec
daa
aam
sti
scas
mov
xchg
push
xchg
jl
fsubs
repnz
leave
cmpb
mov
pushl
leave
js
adc
xor
and
jo
sbb
lret
pop
rolb
jl
or
cli
sbb
push
dec
cmp
xlat
mov
insl
adc
fadd
test
mov
fwait
in
mov
std
pop
xchg
fsubrl
sub
lods
ss
orl
loope
pusha
pop
xchg
xchg
into
jp
pop
add
inc
inc
cmpb
lock
aaa
jmp
mov
js
sbb
dec
imul
ljmp
inc
loop
xchg
add
sub
loope
fsqrt
adcl
nop
xchg
shlb
sub
movsb
pop
sub
orb
iret
or
int
mov
xchg
ja
into
cmp
and
stos
lock
fidivrl
pop
loope
pop
adc
and
jo
mov
sub
lcall
xor
ret
mov
adc
add
add
mov
test
push
and
cmp
push
ds
dec
loop
or
inc
rcl
fstl
mov
lret
loope
cmp
hlt
mov
cld
and
inc
or
loope
test
mov
jp
std
ss
adc
call
sarb
xchg
push
dec
adc
sub
in
lods
clc
es
mov
inc
std
lock
decl
cmpb
in
pop
jns
into
imul
jmp
dec
fidivl
in
cmpl
repz
inc
pushf
movsl
lcall
and
mov
push
hlt
stc
jbe
ret
sarb
mov
sub
lcall
and
jae
push
in
pop
xchg
jmp
mov
mov
push
mov
invd
bound
fprem1
xor
mov
pop
jbe
lods
or
mov
adc
out
shll
sub
inc
movsb
xor
pop
fidivrl
mov
movsl
and
mov
xorl
mov
mov
lock
scas
insb
or
dec
cmp
add
mov
and
scas
adc
out
and
sub
mov
int
pop
sub
or
iret
mov
lret
mov
aad
cmpsl
mov
cmc
lods
dec
mov
pop
out
lods
hlt
mov
shrl
mov
sub
jl
push
out
loopne
dec
ds
inc
push
add
pushf
js
hlt
nop
mov
sti
stos
lods
daa
mov
out
bound
imul
scas
flds
cmp
lret
insl
stc
dec
filds
clc
js
cs
mov
xchg
in
cmp
ret
aas
push
jnp
mov
inc
xchg
xor
push
popa
pop
adc
out
and
sbb
fs
xchg
jb
dec
movsl
fiadds
inc
addr16
add
jo
fs
dec
mov
les
loope
xchg
inc
insl
imul
stos
fsub
stos
mov
dec
inc
xchg
pop
xor
add
les
test
pop
in
inc
cmp
in
inc
lret
scas
loopne
scas
pop
js
stc
cmp
xchg
sub
push
test
jno
or
dec
int3
mov
xchg
addb
dec
jmp
mov
pop
shlb
cltd
sub
test
test
cmc
or
unpcklps
ljmp
push
jmp
sub
mov
inc
pop
add
loopne
stc
rcll
add
fiadds
out
lcall
mov
dec
push
sub
adc
or
or
mov
lock
adcb
mov
jb
mov
mov
cmp
adc
jbe
pusha
adc
mov
data16
ljmp
push
inc
enter
jne
fnsave
pop
out
cmpsb
outsl
lds
es
mov
jp
cltd
or
jl
ss
orb
imul
fstps
push
jle
mov
add
jo
jmp
pushf
mov
rcrl
pusha
sub
push
xor
ja
pop
out
cli
lret
ja
pop
test
sub
sbb
pop
sbb
jl
mov
icebp
jbe
addr16
sub
mov
add
cwtl
sahf
roll
cmp
dec
push
pop
add
adc
pop
fwait
lahf
push
xor
iret
mov
jle
insb
jl
loope
fucomi
adc
jp
imul
sbb
jo
pop
insb
and
cmp
dec
cwtl
lea
xchg
add
call
mov
jns
inc
out
bound
push
divl
pop
and
pop
and
cmp
mov
imull
ret
xchg
js
lea
xor
sbb
dec
fld
stc
push
shll
pop
fistl
fldenv
or
lea
xorb
popa
scas
fistps
pop
lahf
sbb
mov
inc
rcl
inc
mov
dec
xchg
sbb
push
mov
mov
mov
cltd
push
adc
inc
repz
add
xchg
push
popa
dec
negb
cmp
fbstp
call
jmp
stos
divb
jge
test
movsb
push
decl
sub
xchg
or
push
cmp
aas
inc
mov
mov
ficompl
stos
xor
aas
pop
rolb
sub
fxch
cmpsl
jo
fcoml
repz
jnp
sarb
dec
or
imul
add
ds
in
daa
pop
bound
sub
mov
insl
mov
fwait
or
push
repnz
aam
lcall
or
sbb
fidivrl
or
ss
fiaddl
decl
mov
and
inc
pop
jne
cmp
push
mov
das
push
in
adc
mov
dec
test
scas
push
arpl
pop
dec
dec
xorb
pop
call
lods
stc
fldt
push
pop
je
jecxz
out
je
push
push
xorb
mov
aad
or
push
movsb
dec
jge
xor
out
in
pop
es
mov
fisubs
push
insl
mov
sbb
adc
mov
dec
dec
mov
int
sarb
sub
push
inc
enter
ljmp
xchg
je
ficompl
int3
pop
adc
cli
mov
ss
sub
or
sbb
lds
pusha
cmp
leave
into
pop
mov
mov
test
fwait
jg
push
test
decl
mov
test
jp
in
out
pop
mov
push
imul
jg
sbb
clc
addr16
xchg
out
js
dec
jecxz
ds
scas
int3
scas
jmp
stc
shrl
cmp
aas
arpl
sub
mov
mov
and
push
push
adc
ja
and
xor
or
xor
pop
mov
add
xchg
push
data16
xchg
mov
scas
add
lods
fmulp
dec
shlb
xchg
hlt
mov
xchg
mov
jno
std
pop
jl
iret
insl
or
xor
in
scas
cs
mov
pop
aas
jne
dec
mov
jecxz
cwtl
scas
lea
dec
stos
rcrb
incl
adc
std
and
fidivrl
mov
mov
push
push
out
add
sub
addl
fldl
mov
es
faddl
push
hlt
push
add
jb
mov
cltd
fisttps
mov
insl
rclb
rolb
call
bnd
in
outsb
addb
insb
inc
fildl
push
shll
xchg
lock
sbb
add
bound
dec
cmovs
insl
pop
jb
pop
ret
aad
push
cmp
aam
pop
cmp
mov
pop
repnz
mov
push
std
xchg
jns
cltd
pop
mov
mov
mov
sub
fwait
loope
xchg
stos
adc
push
fdivrl
in
mov
or
push
cwtl
adc
cmp
mov
or
xor
stos
cli
cli
test
ficoml
mov
inc
push
sub
lods
sbb
or
loope
mov
lock
ds
imul
adcl
pop
add
mov
xchg
xchg
push
pop
add
call
inc
adc
mov
cltd
push
push
jecxz
cmp
sbb
out
lahf
addr16
mov
sub
ret
inc
xchg
lahf
add
add
jns
cmpsl
inc
inc
push
scas
jge
subb
mov
xchg
pop
mov
sar
ret
cmpsl
insb
cli
lcall
cmp
fwait
movsl
mov
pop
push
roll
add
rorl
pop
adc
adc
or
pop
idiv
fnsave
outsb
push
ss
or
mov
cmp
loope
adc
jge
pop
in
xor
je
pop
mov
and
push
xchg
shll
xchg
adc
mov
mov
dec
push
xlat
push
mov
fsubrs
ret
lret
or
ret
sbb
gs
js
mov
push
setg
out
sbb
fcomps
xchg
orb
push
mov
test
loopne
mov
pop
pop
imul
dec
xor
in
pop
test
shl
adc
loope
cmp
jae
pop
inc
cli
mov
xchg
push
pop
mov
add
out
shrl
jae
mov
inc
addr16
xchg
xor
pop
jle
out
sti
mov
mov
sbb
sahf
cmp
cmpsb
inc
cmpsb
jp
push
sub
shl
imul
dec
pop
cwtl
mov
shl
repz
add
int3
push
inc
xor
sbb
and
aas
fmuls
scas
lods
sahf
lcall
sbb
mov
jnp
rcll
bound
loope
cli
and
jl
xlat
cs
mov
xchg
or
in
aad
cmc
arpl
data16
adc
nop
lods
and
pop
add
cmpb
mov
dec
xor
inc
imul
ja
push
out
shll
or
pop
sub
into
cmp
mov
arpl
cli
aas
and
out
mov
popw
aam
add
mov
lea
push
and
cmp
sbb
add
scas
cmp
adc
mov
fisttpl
mov
je
outsl
clc
jne
xchg
shlb
sub
dec
sahf
cwtl
js
in
aad
dec
inc
sub
and
xor
pop
shrl
jle
cmpsb
inc
jl
dec
cmp
pop
dec
xor
add
lcall
mov
aaa
xchg
adc
jae
jge
push
sbb
dec
pop
push
push
loope
cli
andb
and
push
xlat
sub
push
aas
mov
popa
arpl
cli
mov
mov
dec
addb
cwtl
jmp
fwait
push
jle
cmp
mov
and
ret
or
mov
pop
nop
aaa
leave
into
loope
xlat
cmpl
dec
push
xor
inc
push
shl
dec
xchg
jb
xlat
leave
mov
xchg
fsubl
jmp
mov
sub
repz
cmp
lods
sbb
push
xchg
cmp
adc
lock
push
push
hlt
cmc
nop
jp
ja
nop
lahf
insb
ret
and
sahf
inc
xchg
xchg
icebp
mov
inc
sbb
jb
add
push
pop
push
mov
inc
stc
push
jb
stos
popa
iret
or
pop
mov
cld
imul
lods
and
sbb
and
std
ficoms
std
xor
shrl
lret
shll
jle
mov
inc
or
mov
std
adc
xchg
testl
mov
jno
pusha
mov
mov
icebp
sbb
sbb
lahf
popa
pop
inc
jne
fwait
and
hlt
inc
outsb
sbb
mov
push
add
mov
push
fistpl
dec
pop
jae
sbb
jae
pusha
sti
mov
inc
pop
and
jbe
int
rcrb
cmp
pop
imul
ficompl
outsb
imul
or
aad
or
push
jno
jbe
and
dec
out
add
scas
cmp
in
add
cmp
push
mov
push
cli
mov
mov
cmc
icebp
pop
fs
out
dec
pop
jle
jge
xchg
add
cmp
mul
cmp
xor
sarb
pinsrw
jecxz
cwtl
cwtl
adc
mov
clc
ret
mov
pop
bnd
ret
xor
add
mov
ds
mov
sbb
bound
add
jmp
sahf
pusha
or
sbb
and
pop
stos
mov
icebp
mov
fidivrs
pop
jo
and
xchg
iret
sub
shlb
sarl
jg
push
stos
and
aad
fcomps
or
cmp
fisubrs
push
adc
xor
ja
xor
mov
fiaddl
adc
mov
iret
adc
jmp
jle
mov
jb
hlt
xchg
inc
jno
mov
sbb
push
pusha
popf
dec
insb
dec
jno
push
push
or
xchg
dec
adc
dec
inc
push
jl
lahf
cmp
push
and
sbb
adc
int3
jmp
add
imul
cmp
lret
notl
std
int3
add
addr16
jmp
push
dec
das
jb
jp
xchg
xchg
pop
pop
bound
in
fwait
lret
test
xchg
or
into
loopne
enter
insb
add
xor
arpl
mov
and
jp
pop
lret
cmp
stc
cs
test
jae
lret
add
adc
xor
rorl
add
fsubp
mov
fsubr
inc
sarb
imul
mov
add
or
push
jecxz
jns
mov
lock
mov
mov
test
mov
dec
test
mov
xchg
mov
leave
out
xchg
xchg
mov
in
sub
lods
pushl
xor
sbb
lds
xor
jecxz
sbb
adc
mov
out
adc
lahf
aaa
push
mov
jl
scas
pop
jge
pop
cmp
sub
test
xor
aas
mov
push
inc
hlt
movsb
rcrb
pushf
mov
hlt
das
sbb
outsb
push
pop
xor
sbb
xor
faddl
or
gs
mov
movsl
jp
push
in
pusha
sub
enter
sub
cmp
cwtl
addr16
ret
jecxz
xlat
inc
jl
negb
aam
pop
add
xchg
mov
pop
sub
push
rorb
sbb
popf
fimuls
xor
andb
pushf
imul
scas
add
pop
pop
jae
adc
std
int
scas
pop
mov
jne
xor
and
lahf
inc
xchg
jbe
cmpsb
mov
jge
mov
jg
mov
cmp
mov
dec
in
pop
aad
lret
inc
sbb
mov
mov
push
repnz
fld
xor
enter
in
arpl
stc
xor
mov
push
outsl
add
cmpsb
cmpsl
in
sbb
cmp
cld
dec
icebp
ja
or
xorl
cli
push
fiaddl
imul
dec
xchg
int
fidivrs
fiaddl
jmp
and
mov
push
dec
xor
dec
mov
dec
pop
fwait
adc
scas
xchg
loope
xchg
push
xor
aad
repnz
mov
mov
or
gs
int
roll
or
das
call
sarb
mov
rol
in
gs
cld
ret
dec
movsl
test
daa
in
clc
pop
std
popa
test
rclb
mov
and
and
loop
popa
mov
hlt
fnstenv
jbe
insl
lods
icebp
daa
and
imul
out
addb
push
sti
shrl
lret
cmp
inc
xchg
aam
insb
std
ret
dec
cmp
dec
and
rorl
adc
lods
push
daa
adc
push
push
shrl
es
add
cmp
adc
jl
ds
xor
sub
sub
mov
lea
mov
popa
sbb
mov
out
int
ss
pop
sahf
incl
mov
xchg
loop
jmp
push
sbb
scas
jns
xor
test
pop
push
fcomi
cli
push
push
dec
inc
sbb
push
cmpsb
adc
inc
rclb
cwtl
mov
push
add
mov
or
xor
outsl
or
xor
jbe
clc
push
push
fs
add
stos
imul
addl
in
jecxz
call
push
jo
and
jnp
repz
std
cmp
mov
inc
lret
mov
xchg
imul
jno
cli
dec
and
pop
filds
inc
cmp
sarb
movsb
cmpsb
bound
xchg
xchg
sarl
mov
and
jmp
sarl
cmp
incl
push
xchg
mov
test
inc
out
das
movsb
ds
xor
cmp
and
aam
pop
mov
adcb
add
sahf
cmp
cmp
aaa
pop
gs
std
sbb
push
adc
dec
negb
lods
and
push
mov
xor
xor
sub
mov
cmp
or
sarl
fldenv
fprem1
pushf
fucomp
xchg
or
dec
mov
test
cli
mov
subl
jno
dec
dec
enter
inc
rcrl
repz
pop
popa
pop
add
inc
xchg
out
clc
int
jnp
lret
mov
call
or
mov
xchg
icebp
fs
pop
or
das
add
stc
aaa
call
mov
cmp
scas
repz
adc
popf
jmp
jle
call
imul
iret
sub
sbb
jns,pn
fstl
sbb
fisubrl
push
sub
mov
js
repnz
cmp
shl
add
xchg
pushf
lahf
insl
inc
js
mov
jmp
loope
mov
mov
xor
and
xor
mov
add
sub
push
or
inc
and
clc
xchg
cmc
adc
in
mov
mov
cmc
inc
sub
pop
add
sub
mov
pop
fwait
inc
int3
xchg
arpl
dec
push
pop
adc
imul
aas
scas
push
mov
lds
xchg
cmpsl
pop
scas
jb
fwait
xor
mov
xor
mov
out
inc
pop
dec
loope
or
cltd
hlt
mov
rorl
inc
out
xchg
imul
inc
subb
pop
push
repz
inc
and
loop
add
js
pop
inc
xchg
dec
adcl
movsl
cmp
orb
out
iret
dec
loope
xor
gs
pop
dec
out
pusha
cmp
dec
loop
cmp
mov
cmp
inc
push
push
sbb
test
push
cmp
loopne
or
and
jne
xor
aam
push
arpl
cmpsl
sbb
mov
test
or
or
pop
mov
jb
inc
shll
ficoml
pusha
xorl
dec
cltd
dec
mov
cmpl
mov
popf
add
mov
mov
dec
mov
xchg
in
in
sbb
lods
push
mov
mov
jl
add
xor
pop
aas
pop
pop
sarb
repnz
adc
xorl
outsb
incl
jbe
movsb
push
mov
mov
cmp
outsb
loope
cmp
adc
cmp
daa
pop
push
enter
and
pop
std
and
fisubs
push
mov
lods
add
outsb
lds
push
pop
test
bound
jle
and
test
mov
nop
dec
xchg
repz
cwtl
xor
dec
adc
subb
mov
mov
sahf
iret
cmp
push
gs
and
xor
fidivrl
in
mov
sbb
test
daa
push
jae
out
jbe
sub
shlb
pop
jno
out
in
test
aas
push
rcr
into
push
sahf
mov
insl
adc
pop
dec
loope
insl
cmp
jl
and
repz
lods
int3
mov
aaa
repz
pop
adc
pop
test
xchg
fdivl
pop
leave
enter
mov
dec
push
inc
aas
pop
xchg
sbb
je
add
cmp
xchg
in
pop
sub
sub
aad
push
aam
cmp
test
pop
inc
popf
icebp
sub
fld
clc
ret
js
push
nop
ds
mov
daa
and
pop
adc
fstl
in
xchg
in
daa
push
cmp
out
add
mov
sahf
aaa
or
int3
inc
inc
pop
leave
xor
xor
cmovbe
mov
lock
mov
aam
test
pop
add
cli
shlb
fidivrs
outsl
or
in
lods
sub
xchg
or
jo
mul
adc
cmp
push
inc
shrl
lea
xchg
mov
nop
xor
aas
in
adcl
push
ficoml
je
fimuls
push
test
scas
ja
je
sub
or
sbb
loopne
lods
stc
pop
inc
and
add
inc
dec
dec
jl
test
dec
out
push
sub
dec
or
sub
scas
clc
cmp
ret
addr16
mov
push
sbb
jne
mov
out
jno
jns
xlat
cmp
xor
mov
dec
mov
add
aas
bound
push
cmp
jns
xchg
pop
sahf
dec
addr16
push
popf
xor
pop
mov
mov
enter
es
xor
cwtl
cmc
dec
inc
lea
xchg
out
mov
cmp
sbbb
jne
mov
mov
jnp
sub
xchg
xchg
inc
jle
stc
out
sbb
sbb
ret
fcmovne
daa
sub
nop
push
int
xor
push
dec
insb
xchg
stos
pop
xchg
rorl
add
xchg
stos
add
cmp
jns
pop
scas
icebp
or
pop
jecxz
int3
xor
call
xchg
mov
in
mov
inc
xor
cmp
lods
bswap
inc
mov
cmp
add
in
call
outsb
cmpsl
push
mov
stos
mov
mov
xchg
out
inc
ljmp
test
imul
shll
jl
push
cmpsb
and
frstor
adc
daa
int3
scas
push
inc
mov
mov
sbb
mov
cli
or
loop
rorb
inc
lahf
orl
stos
jbe
pusha
ds
pop
loopne
testb
adc
xor
sub
jne
mov
jo
repz
xrelease
cmp
mov
aas
cmc
enter
and
cmp
sub
push
cld
jmp
mov
cmpl
scas
imul
fwait
shlb
and
jbe
xchg
pop
es
pop
inc
decl
jl
xchg
lods
pop
xchg
loope
xchg
sti
and
add
out
lcall
imul
lock
stc
stos
add
sub
fimuls
faddl
into
push
push
daa
push
lea
shrl
cmp
inc
divb
cmp
dec
jecxz
arpl
dec
and
jb
shll
ret
dec
mov
push
push
int
inc
push
icebp
pop
lock
push
imul
into
loop
add
mov
sub
xchg
push
and
iret
dec
mov
in
xchg
and
stc
test
push
push
mov
jnp
jle
or
nopl
loop
jns
popf
mov
or
out
adc
cmp
mov
xchg
cmpl
insl
mov
lret
sahf
push
inc
out
dec
push
ss
int3
lods
orl
dec
in
fldl
add
faddl
test
stos
insb
fistps
loopne
je
lods
hlt
cmpsb
imul
add
inc
mov
mov
in
dec
cmpb
clc
lret
xor
iret
mov
andps
push
adc
mov
loop
mov
hlt
mov
sub
push
rolb
push
sahf
das
jl
and
cmp
mov
add
jle
dec
test
mov
inc
add
jbe
add
or
inc
int
cmpsb
inc
xor
pop
mov
stos
rclb
dec
out
cli
shl
pop
lock
jmp
daa
sub
cltd
cli
bound
es
jmp
pop
orb
sbb
scas
ret
enter
pop
lahf
testb
mov
aaa
les
fisubrs
icebp
xchg
ss
leave
sub
sub
pop
jl
jne
mov
nop
fstps
and
xor
test
fdivrp
bound
mov
dec
movsb
jo
iret
clc
jp
mov
das
insb
clc
sahf
mov
lock
sbb
iret
pop
inc
inc
pusha
push
adc
xchg
cmc
push
xlat
ret
and
inc
cmp
loopne
scas
cli
inc
nop
std
cmp
xor
pushf
lahf
jl
pop
lock
push
cmpl
add
adc
adc
mov
jmp
jg
mov
repnz
and
std
enter
cmp
movsl
xchg
pop
lea
mov
push
push
stos
lea
test
sbb
loopne
sbb
sbb
push
mov
pushf
push
shll
sti
mov
out
adc
jl
dec
sbb
lock
or
addl
fildl
inc
xchg
adc
in
push
inc
mov
fwait
xor
sti
mov
dec
test
mov
in
dec
loop
in
push
push
jno
add
sar
je
in
ja
jecxz
shlb
lcall
xchg
js
lods
mov
and
mov
xchg
sbb
aad
add
xchg
int
test
daa
mov
pushf
or
test
adc
and
mov
movb
inc
inc
ffree
flds
xchg
rcl
lret
push
cmp
dec
vpaddusb
jae
xchg
jo
popa
push
aam
and
xor
repz
xchg
fs
and
stos
nop
and
dec
cmp
arpl
sbb
or
push
mov
loopne
andl
push
fsts
fs
adc
out
pushf
sti
xchg
aam
sub
push
push
xlat
or
pop
add
dec
nop
cmp
pop
push
adcl
aaa
insb
es
sar
movsb
push
mov
rcll
js
mov
jle
pop
pop
add
adc
mov
xchg
lcall
push
pop
es
ljmp
xchg
mov
jbe
mov
inc
jbe
cmp
movsb
xor
jg
outsb
mov
add
icebp
mov
push
leave
inc
dec
mov
outsb
mov
cmp
add
test
jnp
pop
cs
jg
push
xchg
or
push
jecxz
imul
pop
and
hlt
std
xchg
jg
mov
mov
or
test
hlt
jp
push
addb
mov
in
push
xchg
cmp
cmp
test
cs
into
push
dec
sahf
in
push
xor
int3
pop
out
je
movsb
mov
sti
inc
add
lahf
lds
sub
adc
adc
stos
add
or
shl
repnz
sbb
push
ss
out
push
or
push
mov
sbb
xchg
testl
imul
ficoms
roll
test
adc
xchg
lahf
xchg
dec
mov
jge
movl
cmpsb
in
pop
sahf
sbb
andl
push
cmp
cld
int
popf
pop
xchg
lock
in
mov
inc
pop
push
dec
gs
push
lret
or
fsubl
cmp
cmp
pop
popf
jmp
xchg
adc
add
push
popl
dec
sub
dec
cwtl
shlb
fsubrs
mov
add
imul
jae
mov
test
rolb
jg
adc
jbe
in
leave
pop
cli
dec
incb
push
flds
icebp
mov
mov
mov
cmc
mulb
pop
sbb
jp
xor
jno
stos
xorb
cmpsb
out
xchg
int
popa
clc
movsl
out
dec
cs
test
mov
das
test
js
and
or
push
or
jno
popa
xchg
loop
xchg
scas
push
mov
orb
inc
out
cmc
adc
mov
inc
aad
in
inc
xor
bound
cmp
gs
test
pop
int
aad
jns
push
in
sub
data16
xor
mov
in
and
push
ffreep
movsl
push
pop
ficoml
inc
push
sbb
int3
adc
notb
std
sti
loope
adc
scas
mov
or
orb
outsb
outsl
add
jnp
sbb
cltd
jb
imul
xchg
mov
mov
enter
pop
js
pop
xor
loopne
or
push
inc
out
repnz
mov
xor
cmp
xchg
cmpsl
stos
push
lcall
push
in
sti
into
mov
cmp
jnp
in
mov
inc
xor
inc
cmpsl
push
inc
add
pop
inc
jae
pop
sbb
xchg
xor
imul
dec
dec
mov
cmp
rcll
icebp
xchg
das
mov
adc
sbb
sbb
dec
push
mov
fimull
jmp
add
mov
jecxz
dec
sub
inc
in
lcall
lods
push
and
movsb
out
fadd
xchg
cs
push
xchg
loop
test
sub
cltd
jle
sbb
lods
push
pop
or
ret
push
lods
int
and
les
push
pop
and
enter
jne
fcomps
or
xchg
in
hlt
ljmp
xor
pop
orb
sarl
sub
push
lahf
jmp
mov
mov
mov
std
xchg
pusha
popf
mov
aaa
pop
push
mov
out
pop
inc
sbbl
rclb
dec
andb
jp
and
inc
iret
loop
fnstsw
inc
cmp
out
or
sub
lahf
sarb
mov
js
pop
cmp
sub
push
mov
fstpt
push
inc
bound
jl
aad
cmc
adc
jg
stos
arpl
jl
and
rcll
or
sub
aam
arpl
mov
mov
add
jp
mov
in
sbb
xchg
loopne
out
inc
std
sahf
pop
mov
pop
jge
xchg
clc
arpl
xchg
adc
lret
add
mov
pop
fistpl
mov
pop
dec
mov
mov
sbb
aam
fldl
test
push
lock
jbe
dec
dec
xlat
shll
in
out
gs
dec
lods
lret
sbb
dec
cmpsb
cmpsl
inc
jo
out
repnz
adc
nop
loop
lcall
xlat
xlat
scas
lods
ljmp
xchg
lret
sahf
ds
push
leave
adc
lock
add
imul
pop
adc
dec
pop
cmp
aas
loop
sub
sbb
jmp
jno
imul
loop
je
pop
xorl
loop
stos
xchg
in
sbb
mov
or
into
outsb
scas
jecxz
imul
rclb
sub
and
add
dec
cmp
fbld
sub
push
in
push
andb
cmpsb
dec
dec
xor
aas
clc
mov
les
mov
lret
and
mov
lock
test
cli
sbb
sbb
inc
ret
jae
frstor
test
shrl
mov
shlb
dec
enter
sub
lock
insb
add
fnstcw
mov
aas
adc
inc
inc
lcall
mov
jmp
cmp
sbb
outsl
jns
push
mov
jl
sub
lea
push
jg
and
mov
mov
ja
lods
jmp
scas
pop
negl
sbb
bound
fadd
push
cmp
imul
jb
jo
cwtl
insb
sbb
lret
loop
fidivrl
mov
jecxz
xchg
in
das
out
cld
xor
inc
and
lahf
dec
mov
xor
pop
out
aam
fbstp
aas
out
in
std
adc
pushf
inc
cli
fs
movsl
pushf
push
cltd
aas
cli
cmp
sbb
stos
icebp
data16
inc
lret
sarl
inc
jecxz
add
das
mov
mov
and
adc
movsb
sub
mov
adc
dec
push
or
daa
dec
in
hlt
andl
popa
pop
faddl
mov
jle
das
xor
sbb
push
sub
dec
les
mov
lea
adc
fidivrs
jnp
xor
dec
jbe
mov
shrl
push
bound
pop
ret
push
jbe
stos
test
push
pop
out
add
dec
push
push
mov
popa
mov
negl
inc
cmpsb
fistpl
mov
mov
push
xchg
outsb
mov
test
sub
mov
mov
xor
lret
daa
mov
cmp
fmul
loope
orl
cmp
and
mov
test
aaa
mov
mov
cmp
out
adc
push
jo
add
add
mov
mov
sbb
mov
mov
and
jmp
test
iret
inc
and
in
and
fwait
ror
popf
jae
fdivrs
mov
mov
cmpsl
fistps
cmp
jecxz
out
and
dec
loop
je
lock
mov
adc
jb
inc
cmp
inc
sub
dec
fsubl
popf
or
and
fcompl
lret
ret
ret
pop
setnp
imul
xor
pop
jo
lcall
jge
les
dec
repz
stos
js
cmp
or
stos
push
shll
sbb
jae
mov
mov
fcmovbe
daa
lret
xor
lea
mov
inc
in
jae
push
cmp
and
fcompl
inc
dec
hlt
std
movsl
sub
lock
das
dec
nop
in
pop
adc
dec
adc
lea
lods
hlt
pusha
lcall
fdiv
push
inc
dec
ret
add
inc
mov
ljmp
cmp
inc
cwtl
cli
in
dec
mov
sti
lock
xchg
add
ljmp
fs
imul
imul
dec
inc
sbb
cmp
inc
fidivrl
in
cmpsb
pop
out
mov
and
popf
lret
pop
mov
fwait
jecxz
pop
and
iret
mov
mov
addr16
out
cmc
lcall
shrb
pop
test
xchg
dec
fimuls
sbb
movsb
cmp
pop
lret
out
mov
out
insl
ja
mov
mov
cltd
rcll
jge
lock
imul
add
xchg
pop
cmpsl
lret
pop
mov
push
cwtl
lea
imul
pop
xchg
in
notb
dec
inc
loop
cli
xchg
push
test
inc
in
les
test
repnz
dec
lret
inc
adc
lods
jno
jns
adc
xchg
aad
sub
add
sub
stos
jmp
mov
out
sub
and
pop
sbb
test
add
sub
mov
ret
jg
stc
push
pop
mov
add
jo
aaa
test
sub
call
loopne
mov
mov
ljmp
ja
mov
rsm
xchg
repz
sub
adc
inc
dec
mov
xlat
pushf
push
cli
mov
inc
lret
and
lret
inc
loopne
cli
push
push
pusha
arpl
jmp
jecxz
test
sub
aam
loope
xchg
ljmp
aad
into
pop
xor
js
sub
fsubl
and
outsb
mov
mov
and
push
adc
mov
jmp
inc
orb
call
daa
aaa
fwait
scas
cmovns
shlb
jnp
cli
cmc
xchg
mov
push
mov
cmp
popa
jp
fstpt
add
and
add
push
test
push
dec
popf
lods
pop
mov
lods
mov
xor
xor
sub
cmp
roll
push
out
mov
adc
pop
ds
scas
mov
mov
mov
and
outsb
and
jp
mov
and
or
subl
test
xlat
ret
popf
jbe
push
fwait
push
clc
jmp
sub
mov
iret
dec
popf
and
fdivrp
dec
movl
mov
xor
scas
or
ret
sub
fcomps
mov
mov
insl
test
mov
lea
arpl
inc
testb
cli
cmc
mov
out
push
xor
test
cld
call
jbe
inc
movsl
seta
xor
cmp
cmpsb
subl
add
push
pop
mov
jp
rcr
xchg
jnp
or
addr16
jp
stos
or
lods
out
fisttpl
inc
lahf
adcb
loop
popf
mov
push
ss
cmc
jno
lock
sbb
adc
das
dec
sti
mull
add
aaa
test
sbb
jmp
outsb
idivb
mov
jmp
mov
ret
cmp
ljmp
mov
pop
loopne
lock
mov
std
lea
jbe
mov
sbb
hlt
jle
ljmp
xor
fidivs
mov
aaa
lods
cmp
cmp
jbe
inc
push
xor
test
rcrb
inc
test
inc
cltd
imul
xor
bound
add
lcall
insl
pusha
mov
or
sti
mov
xor
test
mov
sbb
push
sahf
pop
mov
or
sub
mov
fwait
sub
shll
popf
cltd
dec
leave
xor
inc
enter
jns
mov
cmc
call
mov
outsl
movsb
in
int3
push
fimull
dec
push
sub
lods
mov
shlb
xchg
push
dec
fdecstp
push
mov
movsb
gs
inc
and
sar
fwait
aas
mov
mov
xchg
aas
jne
xchg
xchg
subb
popa
repnz
add
adc
mov
mov
pop
aam
bound
lds
dec
cmpb
xchg
sbb
fdivp
clc
jmp
hlt
mov
mov
dec
sbb
adc
mov
shlb
rorb
pop
loop
pop
mov
pusha
cmc
pop
ljmp
sub
cmp
pop
adcb
lods
push
xchg
bound
sahf
pop
and
cli
popa
cmp
hlt
mov
ljmp
lea
stos
daa
dec
int
sub
aaa
data16
jge
aam
push
sahf
xchg
xor
jl
push
and
hlt
mov
xchg
sub
sbb
sti
xchg
lret
xor
sbb
pop
cmp
in
jp
mov
cmpsl
cmp
enter
add
stos
sbb
xor
sbb
push
int3
mov
js
xchg
imul
xor
push
xor
outsb
fsubrs
pop
xchg
out
insb
mov
lock
inc
xor
jbe
fbld
fistps
iret
leave
rcr
xchg
dec
rorl
bound
ljmp
cmc
roll
jp
pushl
push
int
mov
jl
sti
push
aam
and
adc
icebp
add
adc
xchg
les
mov
insb
jne
in
sub
xor
push
jmp
mov
or
dec
in
adc
stos
jle
jo
in
jmp
or
mov
xchg
stos
in
xor
insb
jbe
pushf
and
sub
pop
mov
mov
ljmp
pushf
sbb
outsl
jae
and
add
test
out
pop
stos
or
mov
fwait
xchg
pop
insl
push
push
sbb
mov
inc
pop
repnz
jmp
imul
lret
sbb
mov
pop
sbb
jo
mov
dec
xor
xchg
cld
ret
add
test
xor
inc
pop
jnp
dec
xchg
sbb
inc
mov
dec
cmp
jmp
xchg
cmp
aaa
sahf
ja
lds
dec
loop
mov
sub
pop
inc
push
sub
add
cmp
jmp
pop
lahf
cwtl
subb
push
jle
mov
aam
int3
push
aam
stos
jo
out
cmp
test
or
faddp
cmc
cmp
cltd
iret
mov
pop
test
inc
mov
pop
push
leave
in
cmc
into
cltd
inc
ret
xchg
lds
test
sbb
or
xchg
add
lods
xchg
pop
ds
cld
xchg
lods
inc
loop
cmp
mov
jecxz
dec
gs
jmp
lret
test
data16
push
pop
rclb
push
repz
push
bound
out
add
cmp
add
scas
cld
jmp
xchg
jmp
sbb
mov
xchg
fnstcw
cwtl
jmp
cs
pop
mov
nop
inc
xchg
pop
mov
push
cmp
jecxz
adc
cmp
mov
mov
out
repnz
or
push
inc
pop
imul
rcrb
faddl
leave
add
jecxz
mov
sahf
cmpsb
out
ret
je
inc
mov
lock
jbe
mov
loop
inc
jno
and
push
dec
shll
cmpsl
orl
adc
sbb
insl
jle
daa
adc
xorl
push
mov
pop
mov
fstl
daa
ljmp
dec
call
mov
or
test
clc
lahf
outsl
mov
rclb
cmp
insl
lds
fistps
loope
jnp
push
outsl
outsl
and
cmp
cltd
in
mov
dec
fidivl
xchg
shl
xchg
adc
pop
mov
adc
mov
stc
inc
xor
dec
js
pcmpeqb
xchg
movsb
repz
jae
rol
fdivr
loopew
lods
rclb
push
pushf
sbb
lret
cmp
dec
sub
jle
cmp
xor
push
in
ds
xor
lret
or
adc
add
int3
dec
xor
in
mov
jl
das
push
daa
xchg
mov
ss
fcompl
push
and
nop
int
sub
sbb
add
andb
je
insl
xor
aas
lret
jecxz
push
call
out
fs
mov
xchg
mov
adc
pusha
ret
lods
sbb
push
mov
xchg
push
movsl
std
fadd
push
push
jmp
lcall
add
lret
shr
sub
dec
dec
sub
ret
inc
in
add
fwait
sub
mov
call
shlb
dec
inc
cmp
sub
push
dec
xchg
mov
fisttps
arpl
iret
xchg
add
adc
mov
or
sub
cmp
inc
fbld
cld
xlat
and
jmp
sbb
js
jns
outsl
aaa
cmpsl
popa
cmp
ja
mov
in
mov
das
out
into
xor
mov
int
xchg
dec
mov
js
jne
dec
arpl
jg
imulb
or
les
xchg
mov
outsb
orl
ret
pop
cvttps2pi
pop
dec
mov
clc
xchg
stos
or
or
inc
cmc
sub
repz
jp
jo
aaa
or
add
and
lea
sbb
jg
sub
mov
push
fstl
inc
xchg
xor
imul
xor
pushf
or
stos
pop
pop
adc
jne
xchg
sbb
in
pop
push
mov
out
lcall
ret
adc
testl
push
dec
mov
or
scas
mov
fstps
int
test
push
pop
inc
add
jae
push
pop
in
roll
arpl
sub
repnz
and
ss
dec
mov
dec
lret
js
jmp
aaa
cmc
pop
and
sub
pop
add
sbb
and
sbb
jmp
adc
call
pop
jmp
mov
fnsave
cmp
stc
mov
outsb
push
into
imul
testb
ja
pusha
aam
inc
sbb
sti
cmp
and
out
sub
icebp
push
popa
add
push
jmp
js
rcr
shl
clc
lahf
nop
lods
add
cmp
mov
cltd
ficoms
cmp
stc
int3
sub
bound
test
sbb
das
pop
pop
or
and
ret
std
mov
andb
inc
jecxz
jg
xor
jnp
inc
lcall
cmpsb
push
imul
enter
fs
xchg
and
jb
jbe
or
sbb
mov
adc
stos
pop
in
mov
or
lahf
fmulp
add
pop
int
scas
shlb
xchg
lock
ret
pop
cmpsl
test
test
jae
int3
scas
int3
jg
lcall
loop
call
add
cmp
stos
push
aam
xchg
hlt
cmpsl
stos
rcl
dec
je,pt
mov
dec
mov
insb
pop
jno
outsb
adcb
xchg
add
div
out
pop
insl
test
mov
jno
jg
int
fcoms
or
stc
nop
mov
pop
in
mov
mov
loopne
sbb
movsl
mov
jne
sbb
daa
or
add
sarb
pop
add
mov
sub
call
mov
dec
xchg
mov
lods
int3
ret
cli
and
mov
insb
cmpsl
sbb
into
xchg
nop
push
mov
inc
add
cltd
fidivl
test
mov
add
lret
cmp
je
push
xor
sbb
dec
pop
stc
jp
cmpsb
pop
mov
xchg
out
and
shl
xlat
in
repnz
xlat
loop
out
pop
or
xchg
cmp
stos
mov
enter
ja
mov
sbb
mov
adc
fdivrs
lds
jmp
pop
not
lea
stos
jb
insb
adc
cmp
cmc
add
fisttpll
mov
mov
loop
rcrl
daa
stos
push
sub
xrelease
sub
testl
and
fcoml
add
xadd
xor
bound
lahf
maskmovq
divl
jb
xchg
stos
xchg
leave
imul
out
ficoms
loopne
call
xchg
cmp
arpl
les
xor
fcoms
pop
sub
cmpsb
push
sbb
subb
add
popf
inc
inc
inc
sub
cld
mov
pop
push
mov
jp
cmp
dec
mov
or
xchg
lcall
dec
pop
xor
inc
jmp
mov
lahf
push
mov
cmpb
jl
sub
fnsave
stc
pop
dec
mov
hlt
or
mov
inc
dec
stc
sub
repz
fst
push
clc
and
scas
mov
test
lds
xchg
jmp
scas
dec
jns
aam
aas
je
sbb
jl
loop
push
push
fs
mov
jno
xchg
mov
ret
sbb
mov
icebp
xchg
imul
sbb
xlat
rol
loop
bnd
jno
lahf
push
mov
test
xor
xchg
mov
lds
adc
pop
pop
in
mov
daa
sbb
xchg
add
in
mov
dec
stc
inc
or
push
xchg
mov
int3
mov
mov
adcl
fsubs
dec
shrd
repz
cltd
sbb
xor
mov
aaa
xor
add
pop
push
jg
leave
outsl
mov
adc
xor
cmpsb
jge
cmpsl
movsb
fwait
and
jnp
push
xchg
cwtl
mov
mov
lock
inc
popf
push
lods
inc
out
lock
sarb
shrb
mov
seta
xorb
xor
lcall
jp
inc
out
pop
sub
cmp
mov
mov
cwtl
andl
test
out
loope
inc
or
pop
mov
mov
push
mov
jecxz
out
lret
stos
xor
push
pop
sbb
lret
and
xor
jp
dec
les
inc
loop
gs
lods
movsb
push
dec
or
popa
ljmp
inc
pusha
cmp
mov
dec
mov
aad
mov
xor
movsl
xlat
rcll
and
add
inc
icebp
cmpb
enter
andb
adc
lea
sti
adc
lods
or
jbe
leave
js
call
xchg
add
loope
movsl
xor
out
inc
shrl
fidivrs
push
sub
add
mov
mov
sarb
mov
repz
and
xchg
mov
pop
sbb
sti
and
push
outsl
les
arpl
add
sbb
and
mov
cs
push
cmp
xor
xchg
or
adc
mov
adc
mov
lret
mulb
fcmovnbe
and
cwtl
aam
lock
pop
bound
cmp
mov
jp
mov
fs
fcoms
in
cmp
or
aaa
fldcw
lea
int
rolb
jle
arpl
inc
xchg
pop
jl
pop
adc
das
add
mov
sbb
fbstp
ret
fsts
mov
mov
mov
jecxz
lods
add
add
in
xor
or
xchg
cltd
dec
push
mov
das
adc
mov
loope
out
push
cwtl
pop
out
lret
out
push
stc
lods
roll
mov
pop
mov
int3
adc
pop
mov
dec
mov
pop
jae
aas
dec
adc
cmpb
or
lret
xor
adc
jbe
xor
mov
push
andb
ret
stc
sub
fisubl
adc
adc
push
cmp
pop
orb
lcall
add
mov
aad
popf
jmp
xchg
or
repnz
dec
or
jns
cwtl
mov
psubsw
inc
push
adc
xchg
dec
sub
dec
sub
inc
xor
sbb
insl
outsb
shrb
cmp
xchg
cmc
movsl
xchg
pusha
sbb
mov
pop
push
sbb
sbb
jle
sub
add
test
pop
push
ja
data16
sub
fwait
jbe
pusha
mov
xor
xor
sbb
pushf
push
push
and
js
dec
pushf
sub
fadds
push
jnp
sbb
into
inc
loope
xchg
in
xor
call
xchg
mov
and
js
xchg
cld
scas
push
push
dec
shrb
and
pop
cmpsb
gs
xchg
mov
mov
cmp
fisttps
xor
pop
push
hlt
cmp
lea
sbb
andb
sub
sbb
sub
lock
mov
sub
xchg
aas
add
mov
jg
bound
sub
je
pop
and
fwait
dec
jge
mov
icebp
ret
add
sti
fildl
bound
daa
xchg
repnz
lcall
xchg
leave
out
shlb
jo
imul
jg
jo
insl
sub
pop
sub
enter
mov
fisubrl
add
les
pop
loope
cltd
add
rclb
lds
and
in
or
rolb
push
fnsave
fisubl
outsl
push
xchg
mov
je
sub
or
inc
dec
jbe
ljmp
hlt
lahf
add
xor
mov
dec
in
cmp
dec
int3
les
lods
dec
ljmp
in
enter
mov
hlt
je
mov
repz
jne
sar
lods
imul
loope
jne
cmp
cmp
sbb
pop
lcall
inc
mov
sbb
or
sub
int3
adc
mov
flds
jnp
js
or
pushf
or
cmp
inc
pop
mov
mov
inc
mov
imul
sub
out
or
hlt
add
rolb
dec
pop
pop
inc
not
cmp
xchg
loop
jle
stos
mov
adc
rorl
cmpsl
cmp
and
sbb
mov
mov
push
orb
test
xchg
mov
pop
jp
test
pop
xchg
sub
lock
and
fcomi
stos
repz
sub
mov
pop
int3
mov
dec
sub
mov
aaa
xor
repnz
test
jecxz
dec
adc
add
fwait
push
pop
add
rcrb
jae
pushf
adc
repnz
and
mov
dec
idivb
scas
xchg
loop
pop
xor
lahf
mov
cmc
cltd
jne
or
ja
cwtl
stos
and
dec
data16
xlat
test
push
inc
push
sub
movsb
rclb
and
mov
xchg
popa
adc
jp
bound
fxch
popl
es
mov
js
lods
jne
mov
sti
test
xchg
fs
add
fldcw
daa
cmp
mov
iret
lcall
inc
lods
adc
aas
pop
cmp
lock
lret
adc
jb
insl
ljmp
adc
xor
neg
xlat
add
dec
jmp
mov
add
add
cmp
inc
mov
inc
ljmp
cmp
cmp
cmp
negl
mov
inc
dec
fisttpll
dec
clc
sub
pop
int
sbb
inc
mov
hlt
or
jo
ss
fxch
mov
jecxz
or
ss
dec
xchg
lods
xchg
and
pop
in
xchg
pop
jmp
jbe
adc
int
mov
pusha
dec
sub
lahf
jg
sbb
sub
mov
xor
jg
in
push
testl
jle
dec
daa
ficoms
stc
clc
dec
lods
xchg
lods
mov
cmpsb
mov
out
adcb
and
icebp
or
inc
sbb
rorl
xchg
gs
pop
xor
lret
outsl
jl
lea
movsb
sarl
xchg
add
xchg
call
in
fmul
scas
ljmp
pop
fucomi
mov
xchg
rclb
in
dec
sahf
add
fstpt
mov
or
jl
mov
fdivrl
out
fsubrl
and
fstpl
cld
test
jbe
jg
sti
leave
xor
jl
inc
roll
or
hlt
imulb
dec
jne
add
les
push
mov
fwait
xchg
mov
ds
dec
or
addb
jnp
stos
in
xchg
inc
fwait
lock
leave
imul
mov
jle
jae
add
mov
lods
sub
pop
adc
add
shlb
mov
xor
rcll
pop
mov
xor
ds
daa
lret
or
push
cmp
jb
fildll
data16
outsb
in
arpl
in
cmp
cli
pop
sub
or
or
inc
pop
fbstp
dec
sbb
dec
mov
or
and
cltd
lcall
clc
enter
xchg
xor
loopne
cmp
incb
xchg
inc
pop
bound
sar
stc
mov
sbbb
enter
dec
xchg
ss
and
mov
pop
cmp
pop
adc
inc
push
cltd
mov
out
xor
lods
inc
dec
pop
enter
xor
enter
push
sbb
inc
sub
add
xor
push
adc
fmull
xlat
and
fcomip
int
sbb
pop
loope
xor
pop
movsl
push
jo
out
add
pop
and
xchg
cmp
xorl
pop
cmp
cmp
adc
adc
adc
push
inc
mov
mov
cmp
fcomps
outsb
cli
cmp
inc
mov
pop
jecxz
notl
add
xlat
aaa
out
jne
lcall
xorb
mov
popf
dec
jmp
mov
add
inc
lock
push
insl
shrb
adc
dec
lods
dec
xchg
loop
nop
je
push
or
fstps
dec
in
fcmovne
jns
imul
push
stos
ss
mov
insl
inc
and
lret
orb
pop
push
rcl
inc
nop
mov
lret
aaa
sub
sub
setge
pop
inc
lret
shll
popf
xchg
mov
cmp
xchg
or
adc
push
daa
iret
sbb
dec
adc
loope
push
mov
aad
mov
in
push
sbb
pop
xor
aaa
movsb
mov
or
addl
ljmp
loopne
clc
rol
push
enter
or
fsubrs
mov
mov
jae
jo
aaa
push
mov
iret
cwtl
cmpsl
mov
mov
add
push
test
mov
out
mov
iret
mov
popf
imul
fs
lock
mov
das
or
daa
cmpsl
mov
jg
or
push
mov
in
xchg
sub
icebp
sub
or
cmc
imul
pop
xlat
out
jnp
insb
sub
aam
sti
jmp
js
rcr
pusha
mov
add
jbe
jmp
outsl
int
gs
fldt
out
std
jae
sbbb
in
xchg
xor
add
fcoms
insb
test
push
jge
or
xchg
mov
movsb
xor
mov
sbb
xchg
fisubrs
inc
rcrl
stc
sub
hlt
mov
jl
mov
incb
popa
negb
lods
add
xchg
aaa
arpl
jnp
add
roll
bound
mov
and
dec
std
add
or
inc
loop
data16
sti
fld
int
and
push
sub
xchg
fsub
and
or
jo
push
call
shr
fistl
das
push
ja
lret
jo
loop
push
pop
push
add
loopne
push
loop
or
ret
js
fisubrl
mov
mov
rcrl
jne
repz
xor
out
mov
push
test
adcb
cmp
pop
fidivrl
and
mov
jmp
nop
xor
mov
pop
fnsave
nop
jnp
frstor
sahf
loopne
xchg
movntps
negl
ss
push
mov
dec
sarl
push
mov
sub
test
xchg
ja
pop
mov
mov
pushf
cmc
pop
cwtl
push
sub
call
pop
fcmovnbe
movsl
je
adc
add
sahf
inc
popf
mov
dec
hlt
pop
fucompp
das
std
pop
jae
js
inc
adc
les
test
out
pop
icebp
jno
adc
dec
sub
sbb
rcr
jbe
jns
sub
lahf
mov
mov
jge
and
out
leave
sbb
xor
rclb
adc
cmp
push
iret
cmp
push
cltd
cmc
mov
std
ret
es
ljmp
and
xlat
adc
xor
cmpl
inc
and
js,pn
roll
bound
outsl
mov
insb
shlb
lret
push
testb
mov
sbb
pop
test
test
push
mov
push
adc
push
push
stc
jl
arpl
dec
filds
jecxz
cmpsl
hlt
jge
pop
dec
imul
xchg
push
or
push
sbb
movsb
ret
dec
arpl
fidivs
inc
mov
mov
cmc
int
sbb
cmpsb
sbb
sub
jp
int3
jnp
jecxz
std
sti
adc
push
shrl
sbb
xor
mov
jmp
ss
pop
sub
outsb
push
push
je
fcmovu
out
pop
pop
dec
or
mov
cwtl
inc
outsl
lods
pop
xchg
icebp
adc
fmuls
fildll
adcl
sub
mov
jne
cmp
jl
into
cltd
adc
ds
mov
mov
jmp
orb
xchg
push
addr16
dec
std
mov
cmp
dec
add
jg
or
sbb
mov
or
pop
sbb
mov
roll
xlat
rcl
xor
push
jno
or
movsb
inc
jecxz
push
aam
stos
sub
adc
adcl
xchg
cmp
jg
or
jbe
mov
shll
mov
add
mov
loop
out
add
cmp
pop
cmp
cltd
rorb
outsl
or
shll
jp
push
adc
insb
inc
fisubl
int3
pop
enter
sbb
mov
sub
cmp
std
fcoml
add
cltd
xchg
gs
rcl
outsl
mov
mov
mov
mov
or
rol
xor
lods
adc
cmp
mov
dec
ds
mov
mov
and
in
xchg
mov
add
pop
shr
lcall
outsl
test
push
dec
sub
or
pop
jle
mov
stos
jns
mov
orb
cli
cli
scas
cmp
mov
sub
mov
loopne
movsl
inc
add
xor
xor
jns
cmovo
stos
dec
cmpsb
call
scas
adc
sub
cmp
cmp
adc
and
dec
sbb
jb
ret
aas
xchg
popf
dec
icebp
pop
xchg
pop
adcb
dec
pop
xchg
fs
add
pop
int3
ror
pop
inc
xchg
movaps
push
xchg
sbb
cs
mov
add
adc
mov
mov
push
cmpl
mov
adc
jl
push
test
xchg
lock
pop
xor
jnp
orl
insl
sbb
push
outsb
imul
pop
sbb
js
sub
inc
test
dec
fmuls
ss
lret
xor
les
arpl
sub
imul
mov
into
adc
lretw
lods
gs
aas
mov
leave
jp
outsb
insl
push
in
outsb
call
ja
mov
in
jl
fdivrl
ja
sahf
adc
std
fcomps
push
push
bound
leave
adc
lea
or
mov
add
or
cltd
hlt
insl
xchg
ret
jl,pn
xor
jecxz
std
mov
je
outsb
pushf
icebp
xchg
dec
or
cmp
mov
data16
inc
cmp
test
cltd
std
xor
push
mov
cmp
out
pop
mov
lahf
rcrb
loopne
mov
adc
jmp
pop
lods
int
test
pop
xchg
jle
mov
sbb
sbb
enter
mov
inc
ficoms
sub
mov
dec
jl
push
push
dec
aas
xchg
cmp
leave
lahf
shll
mov
fidivl
jne
mov
adc
push
push
jno
dec
xchg
or
push
in
fdivl
mov
push
pop
inc
movsb
aas
mov
sbb
aad
and
sbb
dec
xchg
popa
mov
out
add
movsb
mov
scas
jge
xchg
dec
add
rorl
loop
cmp
cs
fdivr
cmp
in
push
hlt
dec
jp
lret
xor
arpl
or
das
pop
mov
lret
lea
fmull
xchg
aad
mov
mov
sbb
repz
lret
insl
cmp
insl
or
xlat
ja
mov
pop
push
push
insb
fildll
pop
pop
fcom
lret
in
mov
push
lahf
cld
sub
mov
add
fsts
pop
mov
fwait
xchg
inc
fsubrl
iret
push
push
lds
inc
idivb
in
pop
sub
cmc
fwait
int
in
fs
push
enter
sub
jb
sub
dec
std
mov
add
ret
lret
hlt
xchg
jns
jns
inc
dec
stc
xchg
call
std
dec
dec
setne
fadds
lds
cwtl
jg
test
mov
push
ss
clc
inc
loop
negb
jp
jge
jp
xor
push
push
and
sub
jl
push
push
sub
push
push
mov
mov
mov
lcall
fnstsw
es
bound
push
sbb
fistps
insb
lods
addl
fcompl
ss
cmpsl
mov
test
add
cmp
pop
movaps
rcrl
sub
cmp
and
xchg
push
jecxz
repz
loope
movsl
ljmp
adc
dec
pop
pop
pop
inc
mov
add
jae
push
int3
push
add
int
test
addr16
sar
insb
leave
sub
movsb
jl
add
aam
inc
add
sbb
test
notl
mov
sahf
mull
lds
mov
pop
inc
push
mov
pop
cli
pop
lea
mov
mov
jns
mov
test
jae
jne
dec
and
fcompl
mov
lea
push
rorl
push
les
cwtl
in
dec
fisubrs
xor
inc
and
sub
or
test
pop
outsl
imul
out
sbb
dec
mov
mov
and
int3
xor
push
movq
cmpl
outsb
mov
std
xchg
cltd
scas
dec
adc
sbb
inc
cmc
incb
mov
jmp
ds
sub
pop
fsubrl
stos
lds
adcb
cmc
jmp
adc
dec
lds
sbb
sub
xchg
sub
dec
and
adcl
mov
out
div
int
and
sbb
push
shll
push
mov
xor
stos
pushf
xlat
mov
mov
in
test
sub
aad
lods
shl
les
xchg
jo
push
jae
lods
shll
orb
aam
inc
push
int3
cli
out
lcall
sbbb
outsl
ss
sbb
sbb
fistpll
sti
jo
call
rcrb
jmp
cmp
movsl
movsb
sbb
xchg
cmp
outsl
jge
push
cmp
xchg
aaa
cltd
pop
add
inc
faddl
pop
lahf
sbb
jb
cmc
mov
ss
xchg
loop
icebp
jnp
mov
jnp
lods
and
push
ret
add
aaa
je
nop
out
aam
adc
mov
and
stc
or
enter
jne
out
inc
lods
imull
popa
subl
dec
xchg
test
nop
dec
push
mov
cmpsb
decb
fucomi
fsubrs
dec
inc
add
call
push
jb
test
inc
sub
push
iret
sti
mov
or
pop
mov
fisubrs
jmp
ljmp
mov
mov
hlt
sub
sbb
arpl
xchg
mov
push
or
add
dec
fidivrl
addr16
pop
xchg
hlt
xchg
out
ret
and
imul
sbb
sub
lret
push
xor
movsl
push
into
sbb
mull
sub
dec
adc
mov
jmp
in
sbb
pop
and
inc
test
xor
aad
push
sbb
xchg
mov
mov
sub
xor
repnz
mov
sti
popa
scas
dec
enter
xor
jp
aad
jns
pop
lds
clc
das
sub
iret
std
mov
sub
push
cmp
xchg
xor
negb
test
mov
push
push
and
jb
mov
xchg
or
aaa
mov
cmc
imul
pop
push
and
imul
inc
jne
idivl
in
adc
jnp
inc
jp
dec
mov
adc
sahf
jb
out
push
xor
imul
dec
mull
pusha
add
rcl
mov
sbb
pushf
mov
xchg
popa
jnp
movsl
sbb
push
jmp
movb
std
nop
nop
push
iret
ror
jge
iret
iret
dec
popf
mov
add
ljmp
sbb
sub
ret
inc
mov
sti
loop
or
sbb
jo
movsl
fldenv
ljmp
push
inc
rcr
daa
lea
xor
mov
stc
xlat
cs
addr16
lahf
stc
sbbb
and
xor
pop
aam
push
out
pop
and
pop
sbb
dec
daa
adc
push
es
adcl
out
insb
push
jecxz
pop
mov
enter
mov
add
cmpsb
hlt
xchg
stos
jne
or
mov
or
loopne
mov
pushf
mov
stos
sub
mov
pop
or
fildl
jl
or
jp
sahf
sbb
jae
cmp
das
or
push
cmpsl
imul
adc
ret
xor
divb
jns
loopne
sti
icebp
push
lcall
call
xor
push
and
inc
xchg
int
push
pushf
mov
cltd
imul
mov
in
gs
mov
adc
add
insb
mov
orb
aas
outsl
dec
or
popa
adc
mov
mov
ret
in
adc
mov
cs
dec
xorl
iret
fists
and
push
sbb
loopne
adc
xor
lods
or
jbe
cmpsl
push
cli
popl
mov
and
mov
outsb
sub
sub
into
sarl
into
ret
cltd
sar
adc
lods
into
fisubs
sbb
fcom
shrb
scas
lret
cmp
filds
pushf
adc
int3
or
in
cs
nop
jae
fiadds
bound
xchg
and
pop
jp
pop
xor
clc
pop
push
mov
push
int
mov
fildl
ss
iret
jne
scas
sub
popf
sub
lcall
mov
inc
or
dec
push
pushf
adc
inc
mov
xchg
ds
aaa
popf
jnp
mov
push
movsl
jnp
and
fidivl
push
or
hlt
in
xor
add
xchg
iret
in
stos
ss
xchg
hlt
mov
xchg
or
jmp
cld
inc
or
pushf
repz
ficoml
push
lcall
pcmpeqd
xchg
dec
push
cmp
sbb
mov
and
out
sbbl
psrlw
nop
mov
ss
jae
push
rorl
or
mov
mov
data16
mov
pop
repnz
push
lock
ss
iret
jge
out
icebp
pop
inc
mov
xor
or
xlat
sbb
test
insl
or
jns
popa
ss
add
sahf
std
test
add
decl
jle
xchg
jl
mov
cmp
and
push
sbb
mov
shll
adc
adc
adc
cmp
push
rcl
mov
scas
in
sbb
and
and
orl
ror
xor
int3
cmp
mov
ret
xchg
or
popa
dec
jp
test
jp
test
xchg
lock
cmp
jle
or
fdivs
pop
or
aam
jg
dec
inc
or
ja
jbe
shrl
mov
push
push
sub
inc
notl
hlt
faddp
adcb
xchg
mov
xor
roll
or
test
inc
push
ret
js
and
push
test
jmp
sub
daa
sarb
adc
imulb
pop
add
xchg
loop
mov
es
cmp
cmp
ds
int
imul
movsb
inc
divl
test
imul
ss
jle
mov
or
in
je
push
cmpsb
int
mov
xchg
xor
imul
pop
shl
cmpsb
jmp
lds
xchg
notb
jl
xchg
push
movl
test
sub
mov
mov
and
mov
sub
or
jbe
fisubrs
jno
fidivl
pop
insl
mov
or
ja
pop
sub
pop
adc
push
shr
cld
fistpl
insb
pop
test
fwait
push
sub
xchg
mov
shr
mov
daa
or
sbb
shlb
arpl
add
lods
sub
mov
mov
mov
imull
sub
add
bound
addb
sub
push
pop
add
or
in
test
movsl
jne
push
sub
cmp
in
cmpsb
jmp
clc
daa
inc
inc
mov
or
pop
hlt
movsl
pop
out
inc
add
cmpsb
inc
ljmp
adc
pushf
rolb
pop
pop
jae
dec
std
cmpsl
jl
add
push
fcomp
or
xlat
inc
pusha
test
jbe
add
ja
xorl
mov
repz
out
out
fs
pop
xor
and
and
push
lods
repz
outsb
mov
gs
mov
jmp
push
movsb
jge
push
psubw
popf
xor
subl
scas
sbb
ficompl
sbb
ds
jno
xchg
sti
sbbl
shrb
lods
xchg
in
dec
xchg
dec
push
rcrb
insb
and
pushf
xor
xchg
sar
sbb
cmpb
push
js
mov
sub
fsubl
out
inc
xorl
xchg
mov
add
outsb
pushf
pop
sub
lea
inc
cltd
rcrb
mov
jno
inc
xchg
sbb
out
std
mov
xor
pushf
xlat
rorl
jnp
cmp
jge
test
dec
adc
mov
mov
jg
cmpl
into
sub
xlat
cmp
aas
daa
push
push
in
xor
or
push
test
inc
cli
sbbb
nop
pop
or
and
pop
add
fcoms
cmp
inc
and
adc
jo
and
aad
mov
push
dec
sti
jb
and
movsl
xchg
shlb
ja,pt
sahf
fwait
or
xlat
cmp
testl
push
jmp
out
in
outsl
outsb
jnp
test
in
cmp
test
push
outsl
jne
test
test
and
push
nop
js
xchg
imul
sbb
xchg
inc
adc
mov
sub
das
xchg
into
or
mov
insb
fadds
jb
push
jmp
cltd
add
pop
xchg
cld
jb
or
repnz
int
sbb
aad
pop
xchg
std
je
lret
testb
mov
push
andb
add
mov
xor
inc
std
sub
sub
mov
sbb
lock
mov
ret
add
lret
jo
xchg
les
pop
out
imul
jnp
cmc
mov
sub
add
mov
push
sbb
push
dec
mov
pop
insl
inc
scas
pop
adc
cmpsb
ss
imull
out
loop
mov
nop
fwait
je
push
fcmovb
fdiv
out
ljmp
mov
iret
scas
jl
mov
out
xor
dec
sub
imul
clc
loope
sti
loop
int
pop
ret
mov
negl
mov
add
lods
cmpsb
pop
test
jae
mov
xor
sahf
push
adc
idiv
jns
inc
icebp
push
xchg
in
mov
push
mul
sub
stos
das
pop
movsl
call
leave
and
push
lret
in
dec
out
xor
sbb
bnd
sub
pop
inc
daa
int3
and
xchg
je
or
pusha
call
jnp
arpl
or
inc
faddl
out
pop
lods
dec
sbb
adcl
mov
xchg
mov
shl
sub
dec
add
xchg
jnp
xchg
mov
lds
cmpsb
mov
or
jmp
or
pop
jno
in
xor
es
xor
lret
iret
es
fldcw
jle
jg
scas
subb
inc
or
jge
push
push
test
lcall
pusha
or
enter
lds
inc
jo
inc
fsubrs
or
xchg
jne
lods
pop
fnsave
js
push
or
cltd
sbb
les
xchg
cmpsl
pop
test
icebp
bound
jnp
mov
xlat
call
dec
cmp
push
push
cmc
push
fsubl
adc
xchg
pop
and
pop
push
mov
lret
or
inc
sahf
and
jecxz
aas
cwtl
cmpsb
mov
and
mov
arpl
movsl
cmc
dec
jbe
jle
sbb
push
dec
inc
and
sahf
pop
icebp
mov
mov
jle
bound
and
and
inc
and
sbb
mov
push
sbbb
adc
pop
inc
lcall
jnp
pop
xchg
ds
sbb
popa
xchg
sti
mov
mov
push
add
sbb
ds
xor
loopne
mov
imul
jae
cmp
mov
jnp
lret
jmp
dec
mov
inc
or
or
mov
sahf
cmp
sub
iret
cld
and
sti
jbe
in
movsb
mov
mov
aaa
cmpsb
fldcw
outsb
jbe
add
mov
and
or
popf
pop
cmp
mov
xor
iret
popf
add
push
das
inc
add
or
fsubrl
ficoml
arpl
fs
dec
or
addr16
cwtl
rorl
cmpsb
mov
mov
inc
enter
mov
insl
fildll
into
ret
in
xchg
ja
cmp
mov
jmp
or
mov
dec
mov
call
imul
nop
cmpsl
sub
int
and
or
push
cld
stos
push
dec
pop
dec
xchg
nop
push
xor
lock
push
xchg
cmp
imul
adc
inc
mov
xchg
inc
push
add
push
pop
mov
cmp
repnz
jns
jne
fdivl
mov
pop
lret
in
xchg
adc
sub
pop
aaa
mov
scas
pop
sarb
xchg
stos
lds
inc
jle
pop
add
xlat
sbb
arpl
ljmp
cmpsl
xchg
iret
inc
sbb
jl
mov
and
xor
or
or
sahf
and
add
lahf
test
jbe
lea
add
movsb
add
inc
leave
andb
xor
add
test
dec
push
add
xor
rorb
pop
push
clc
mov
cmp
inc
in
sub
mov
or
cmp
push
dec
ror
or
iret
mov
inc
jmp
loopne
std
cmp
out
pop
push
out
mov
out
mov
orl
fmull
out
fstps
and
jnp
shrb
mov
mov
sbbb
mov
dec
mov
ja
mov
mov
sub
cmp
loopne
ret
lcall
in
jae
testb
xchg
xorl
and
sbb
lock
mov
mov
adcb
dec
pop
into
psubd
mov
mov
dec
aas
sar
ja
mov
jno
cmpsb
pop
call
add
and
xlat
out
jae
fstpl
mov
outsl
inc
jae
cltd
xor
pop
das
lds
ja
ljmp
xchg
inc
add
xchg
and
shll
cmp
out
or
sbb
dec
lods
leave
and
nop
mov
or
shrb
sub
or
loope
dec
lods
insl
pop
shll
sbb
imul
mov
sub
lea
rol
rolb
sahf
jge
mov
je
call
dec
push
sub
int3
cmpl
sahf
jns
out
and
lcall
fistpll
lcall
out
push
inc
fadd
and
jae
dec
pop
cli
fldt
inc
lret
repnz
dec
fbstp
mov
scas
scas
xchg
ss
outsb
add
in
in
clc
inc
decb
out
pusha
xchg
hlt
es
push
xchg
icebp
mov
mov
lds
movsl
pop
loope
shll
rorl
insl
dec
int
cmp
int3
cmp
push
mov
nop
cmp
jmp
cmpsl
pop
test
adc
jmp
in
scas
jg
inc
daa
fcompl
cmpsb
xchg
add
pusha
icebp
repnz
xchg
adc
int
push
add
inc
les
sbb
push
sahf
orb
hlt
out
das
xor
dec
repz
stos
adc
mov
inc
stos
sbb
push
lcall
fsubl
popf
pop
leave
add
mov
push
adcb
rcll
rcr
test
sbb
nop
xchg
sbbl
xor
fcompl
cmp
fsub
mov
or
out
mov
test
dec
add
mov
adc
std
dec
test
xor
cmp
jo
and
sub
aam
hlt
push
out
and
pop
push
push
loopne
and
sbbb
loop
rcll
jle,pn
shlb
jnp
or
mov
arpl
cmpsb
cld
mov
lahf
and
imul
push
mov
xchg
rorl
adc
xor
and
fdivrs
dec
jbe
xor
mov
add
outsl
testb
inc
insb
data16
daa
out
iret
outsb
push
xor
rolb
add
cmovs
gs
hlt
mov
adc
out
pop
xor
jecxz,pn
lods
fiaddl
imul
xchg
pusha
outsl
nopl
cmp
push
and
mov
lcall
mov
pop
dec
fistpll
test
mov
test
ds
lea
push
and
int3
pop
dec
inc
and
shrl
dec
lds
dec
jns
add
fisttpl
clc
dec
fadds
jne
shl
pop
pop
mov
push
scas
lret
xchg
loope
mov
add
dec
cmp
mov
fsts
push
mov
mov
in
andb
cmpxchg
das
fcoms
mov
out
pop
nop
jg
jae
fnstcw
mov
add
xchg
mov
or
pop
jns
insl
ss
cmp
std
out
movsb
jns
push
push
mov
push
or
ljmp
lods
push
cmp
test
pop
ret
addb
iret
xor
out
mov
fdivrs
pop
push
fiaddl
adc
inc
scas
es
jmp
push
nop
es
jb
cli
cli
and
push
aas
xchg
add
popa
pop
ljmp
push
xchg
pop
es
adc
lret
xor
push
inc
stos
je
cmp
test
fs
adc
xor
negl
or
lret
insl
jl
int3
mov
mov
cmc
or
mov
pop
push
pop
jl
outsb
jge
mov
in
sub
push
ljmp
cvtps2pi
int3
movb
xchg
fwait
pop
fimull
pop
push
pop
jmp
lret
or
push
push
xor
add
inc
pop
jg
into
pop
ja
mov
int
push
lret
push
add
pop
sbb
mov
push
cmp
stos
mov
in
cld
in
pop
call
ds
mov
cmc
push
insb
aad
add
pop
sahf
adc
call
mov
ljmp
add
imul
dec
in
lea
shll
jne
ficompl
pusha
and
push
sbb
insb
icebp
jge
add
orb
clc
es
pop
add
or
jbe
mov
cltd
rorl
push
cwtl
jae
ret
jno
cmp
jbe
movsl
jne
sahf
cmp
or
jo
push
jo
in
mov
mov
movl
cmp
and
dec
jge
lods
or
popf
es
xlat
fildll
jne
jne
mov
or
cmp
sub
push
cmp
hlt
sub
cld
imul
pushf
xchg
mov
cmpsl
inc
xor
and
cwtl
sub
notl
dec
dec
enter
pop
jae
or
in
jecxz
das
pushf
testl
repz
mov
fidivrl
adc
add
sbb
lcall
int3
lea
fs
js
jo
pop
pop
test
dec
inc
mov
pop
data16
xchg
dec
repz
inc
nop
lahf
adc
addr16
dec
jo
fwait
lret
out
es
popf
insb
mov
adc
or
dec
test
subl
xor
add
fdivl
icebp
adc
arpl
or
inc
loope
add
xor
jno
jge
loop
leave
fs
xchg
clc
popa
sahf
or
and
jl
xchg
or
fsts
outsb
movsl
push
add
push
jae
push
jg
and
and
cmp
subl
jb
dec
and
mov
mov
test
lcall
mov
popf
cmp
mov
adc
mov
fimull
nop
out
ja
aas
and
scas
shll
jne
adc
cmp
fldenv
repnz
je
ret
hlt
push
out
movsb
lahf
sbb
add
jle
aas
cmp
cltd
add
jb
push
pop
and
jg
xor
popa
pop
inc
test
enter
out
aad
dec
or
inc
and
xchg
hlt
call
outsl
xor
inc
add
and
mov
sar
pop
nop
push
fildll
bound
xor
adc
add
mov
and
cmpsb
and
dec
shl
cwtl
popf
insb
mov
mull
add
decb
xor
xor
in
jmp
cltd
or
xlat
addr16
repnz
cwtl
xor
push
pop
iret
jg
bound
mov
pop
leave
nop
xor
mov
pop
mov
fwait
jg
inc
adc
mov
mov
sub
inc
sti
and
not
stos
aad
add
push
je
xor
pop
lahf
push
dec
leave
xchg
push
lea
sbbb
xor
mov
fwait
pop
sub
adc
or
cmpsl
mov
inc
jb
mov
in
stc
loope
push
jecxz
or
or
cmc
lahf
shlb
loop
and
push
and
sub
orl
cltd
mov
mov
cmpsl
fwait
jl
rcl
add
scas
cltd
push
test
sbb
sub
jmp
movsl
lcall
mov
cli
and
imul
add
insl
adc
inc
test
mov
push
mov
enter
loope
mov
jo
add
mov
out
test
sbb
iret
loopne
movl
lahf
add
sbb
test
pop
cld
adc
aas
in
sbb
loope
xor
push
int
sar
pusha
inc
cld
cmpsb
inc
dec
ret
mov
call
xchg
adcl
jle
xor
repz
mov
repz
rorb
jge
aaa
jg
cmpsb
leave
dec
mov
cltd
xlat
movsb
sbb
sti
jb
push
jae
jl
fmull
testl
or
sub
lahf
jg
mov
sub
mov
jecxz
sub
fsubrl
mov
jle
cmc
jmp
les
push
lods
mov
mov
test
enter
lret
push
add
sbb
xchg
pop
push
fisubl
xor
xchg
inc
mov
xchg
mov
add
iret
mov
insb
in
push
pushf
in
pop
leave
mov
mov
push
add
push
cmpl
xchg
out
cmc
inc
jle
mov
mov
mov
call
cmpsl
mov
cld
add
stos
mov
pop
dec
shl
in
dec
rclb
jecxz
or
inc
inc
mov
and
jo
cld
adc
daa
jo
ss
inc
jg
or
jmp
push
js
cld
cmp
int
pop
dec
pop
nop
xchg
inc
jl
jb
iret
xor
fiadds
mov
ja
mov
mov
bound
lea
lods
mov
dec
ret
les
iret
or
ret
popf
mov
mov
push
sub
stc
and
cmp
addb
pop
test
jae
mov
sbb
xchg
dec
xor
sbb
push
clc
adc
mov
add
pop
mov
and
rsqrtps
mov
pop
or
clc
mov
fdivs
stc
data16
xchg
scas
add
and
ret
dec
pusha
es
lds
push
xor
iret
cltd
lcall
subb
loop
dec
adc
cmp
add
cmp
negl
icebp
cli
adc
es
dec
lret
addl
imull
movsl
enter
in
arpl
icebp
pop
lret
in
shr
orl
push
stc
jecxz
arpl
out
pop
mov
inc
popf
inc
push
jo
repnz
mov
rcll
mov
pushf
push
mov
outsb
pmullw
pushf
sbb
push
scas
xchg
movsl
iret
lcall
das
loop
sbb
call
sub
lods
xchg
in
insl
jnp
push
aam
jl
dec
aaa
adc
roll
das
sahf
push
and
icebp
mov
imul
mov
pop
andb
cmpsb
pop
popa
out
dec
iret
sub
jmp
adc
add
mov
or
fmull
out
mov
adc
add
pop
push
pusha
pop
out
enter
fidivl
lcall
lahf
cs
jno
das
ljmp
rcrb
movsb
cmpsb
mov
sbb
outsb
mov
fists
iret
int3
lods
lret
frstor
adc
notb
loop
icebp
call
outsb
dec
cmp
cmc
enter
xor
jmp
mov
mov
inc
or
push
pop
gs
movsl
or
inc
imul
mov
popa
mov
fidivrl
arpl
pop
sub
aam
lahf
sub
movsl
rcll
xor
xchg
sbb
push
push
push
mov
xlat
rcrl
mov
jmp
stos
mov
ss
ror
fsubp
popa
lret
dec
fwait
in
xor
cs
int
push
loope
lcall
pop
fldcw
mov
adcb
loopne
mov
sbb
frstor
push
or
pop
add
fwait
xchg
inc
cli
adc
or
insb
or
mov
sub
les
mov
in
pop
jle
or
jge
mov
fimull
lret
pop
xchg
mov
outsl
scas
sbb
push
or
add
or
sbb
inc
jne
xor
or
cltd
xor
dec
sarb
std
and
pop
inc
adc
jne
mov
mov
out
mov
aam
cmp
aas
push
sbb
xor
sbb
sbb
flds
and
fwait
dec
ds
insb
gs
sub
adc
cmp
icebp
repz
and
cmp
adc
add
std
aam
jg
sbb
pop
adc
sbb
cmp
mov
je
testl
adc
add
sbb
stc
mov
pop
mov
fneni(8087
or
shrb
imul
pop
add
jl
data16
push
fsubrs
fnstenv
cmp
and
pop
fisttpll
mov
add
dec
lds
cli
sbb
dec
cmc
aad
lret
inc
inc
jno
aam
push
adc
sbb
aam
inc
push
jne
std
jb
repz
pop
push
add
jb
insl
xchg
jmp
sti
xor
out
jl
mov
aas
mov
dec
sbb
dec
hlt
fldenv
cmp
fistl
cmp
push
cmpsb
xorl
fs
push
and
pop
and
iret
mov
adc
xchg
xlat
push
sbb
jb
incb
movsl
daa
mov
sub
addr16
int
cli
gs
subb
sbb
xchg
lock
mov
mov
mov
add
fmuls
into
and
repz
dec
or
sub
das
inc
or
lea
push
mov
mov
ja
pop
xchg
fisubs
arpl
rcr
mov
cmp
ret
xchg
test
int
pop
jge
and
cli
pop
loopne
mov
loopne
cmp
xchg
add
scas
cmpsl
subb
int
daa
xor
sbb
and
pop
pop
push
sahf
test
cwtl
inc
jmp
xlat
or
adc
add
push
xchg
lcall
movsl
mov
sbb
sub
mov
lret
push
in
fists
notl
stc
or
jbe
jmp
adc
pop
rcll
imul
cmpsb
movsb
push
gs
fsubs
out
xor
sub
cltd
fisttps
mov
adc
not
pop
insl
jne
dec
in
push
divl
js
hlt
shlb
or
fs
std
xchg
sub
out
and
jb
mov
jle
pusha
mov
cmpsl
push
enter
loop
mov
jb
out
pop
jg
xchg
ljmp
xchg
jge
jle
xor
and
jmp
dec
push
cmovne
pop
lahf
fiadds
mov
dec
push
dec
and
jle
frstor
sbb
sbb
pop
loope
shll
stos
pop
mov
jne
jb
roll
shll
aas
outsb
mov
push
mov
cmp
xchg
test
ret
lods
mov
inc
pop
xchg
mov
out
shrb
repnz
movsb
jg
mov
push
or
mov
lock
dec
shrb
pop
gs
ret
cmpb
sub
pusha
repnz
ds
loope
sbb
popa
shlb
pusha
push
dec
xchg
xchg
adc
mov
call
jo
cmp
movsb
fnstenv
aaa
pushf
add
test
in
icebp
pop
push
jge
out
icebp
sbb
sub
rcll
ljmp
sub
imul
iret
sti
insb
adc
insl
mov
add
orl
out
popf
shll
popf
clc
dec
mov
clc
aam
mov
add
lret
xchg
stos
and
and
stos
xor
je
je
shrl
data16
stos
and
adc
imul
aam
sbb
bound
rcr
data16
int
xor
jae
dec
adc
lret
imul
pop
es
push
cmp
loopne
lea
loope
fidivl
dec
inc
inc
push
jae
inc
sbb
and
rcrb
ljmp
out
push
mov
sub
jae
push
adc
addr16
addb
jno
adc
jg
or
pusha
call
adc
js
movsl
jnp
loopne
inc
mov
pop
add
cmc
sbbl
pushf
loopne
adc
rclb
in
jno
mov
or
iret
jno
not
inc
inc
dec
out
mov
in
es
cmc
out
add
xlat
jle
fistpl
mov
pop
sbb
loop
je
jg
dec
sub
lret
das
cmp
dec
in
test
xor
push
xchg
xorl
sbb
sub
push
push
fisttpl
pop
stos
sarb
jecxz
pop
in
sti
outsl
data16
mov
stos
xchg
lcall
xchg
mov
outsl
das
inc
dec
dec
loope
dec
in
sarb
jno
out
sbb
adc
popa
and
jl
mov
je
ja
xchg
inc
push
and
dec
or
fwait
cmp
pop
mov
pop
dec
aaa
jg
jmp
xlat
sbb
add
arpl
mov
inc
fsubrp
movsb
add
movsl
add
outsb
outsl
xchg
xchg
jmp
xor
insb
arpl
lods
lds
cmp
stos
adc
lret
fcomps
outsb
out
cmpsl
add
imul
jno
ja
fcmovu
mov
popf
xor
push
cmp
mov
mov
fnsave
gs
and
inc
jae
std
mov
mov
cmpsl
clc
cmp
cltd
sbb
jae
sub
iret
mov
xchg
lock
pop
ret
fsts
mov
dec
sahf
xchg
pop
xchg
test
insb
inc
and
clc
add
jae
xlat
xchg
cmpsl
jp
cmp
push
ja
mov
mov
gs
mov
das
mov
mov
dec
addr16
loope
xchg
jp
aam
lahf
inc
fcompl
lods
pop
xchg
lret
xlat
mov
mov
scas
jns
pop
pop
xchg
xor
mov
xchg
push
mov
or
adc
inc
das
adc
or
or
decb
dec
repz
es
in
out
xor
insl
pop
scas
fdivrp
dec
popa
jmp
cmp
hlt
jl
js
jecxz
out
adc
mov
lcall
ja
les
xor
mov
clc
icebp
sarl
out
mov
fcomip
lods
addr16
push
addl
int3
ds
xor
out
mov
jnp
jecxz
shl
sub
add
cmc
and
mov
fsubrs
xor
pusha
mov
adc
lret
into
repnz
jg
ret
into
dec
fidivs
cwtl
xor
lret
jmp
dec
testl
adc
and
jbe
testl
dec
inc
or
mov
xchg
call
cli
mov
xlat
add
xchg
jb
rcr
orl
xchg
repz
cmp
out
jb
in
xor
idivb
cmp
mov
inc
in
push
adc
dec
loopne
mov
push
scas
cmp
xchg
cltd
add
nop
imul
jl
fldl
lret
inc
xchg
mov
addb
inc
cmp
xlat
fwait
aam
xchg
sahf
popf
add
subb
stos
jmp
ja
inc
jmp
loop
xchg
mov
ret
je
mov
mov
insb
xor
xor
xchg
pop
fsubs
test
scas
lahf
xor
xlat
iret
mov
add
add
xor
psubusw
insl
or
adc
fsubrl
push
int3
inc
jp
jp
in
das
push
jg
iret
movsl
push
les
xchg
push
int3
stos
push
xlat
outsl
test
addr16
aam
xor
leave
loopne
xchg
out
in
mov
sub
mov
in
in
mov
cmp
dec
clc
xchg
jl
xchg
out
jp
dec
jne
out
dec
dec
cmpsl
imul
push
or
and
adc
les
in
scas
push
inc
scas
xor
daa
sbb
imulb
daa
cmp
movsw
addl
in
push
adc
sub
orl
pushl
incl
lret
xor
sbb
movsl
icebp
dec
es
movsl
out
cmpsl
push
mov
lock
fldcw
ljmp
dec
outsl
sahf
cmpsl
mov
iret
ret
inc
dec
dec
push
daa
mov
and
rep
pop
add
cld
mov
pop
mov
pop
pop
dec
xchg
cmp
shl
clc
rcrb
sub
repnz
xchg
sbb
int3
sbb
push
sub
mov
data16
aas
incl
push
out
aaa
stos
mov
inc
stos
pop
push
jp
dec
insb
ja
scas
pop
lcall
xchg
int3
call
mov
test
jbe
xchg
push
inc
jg,pn
adc
dec
lcall
or
lahf
clc
int3
fnsave
imul
fstps
sbb
or
push
daa
mov
lods
ss
filds
adc
sub
scas
int
scas
insl
int3
mov
out
inc
outsb
test
xor
ss
ret
inc
mov
xor
cmc
xchg
inc
popa
call
fs
mul
pop
shlb
add
and
ja
in
repnz
mov
pop
xchg
ds
bound
movsb
jo
out
shlb
jp
sbb
xlat
cld
or
in
scas
rorl
fldt
cs
mov
inc
push
out
insb
lcall
out
mov
ret
xor
movsl
aam
xchg
ds
mov
ret
scas
roll
aam
pushf
xor
add
rclb
enter
stc
xor
fidivs
stos
mov
jmp
and
adc
fucom
push
insb
mov
xor
xor
lods
push
lea
xchg
iret
hlt
push
repnz
or
lahf
jne
int
icebp
jge
mov
adc
inc
mov
leave
andb
sbb
test
ret
daa
pop
rorb
loopne
test
dec
or
inc
and
push
jle
mov
and
jnp
testb
int3
mov
popf
jp
sbb
or
sarl
das
data16
in
inc
out
cmpsb
loop
in
cs
push
call
test
and
or
pusha
mov
mov
dec
pop
sti
mov
adc
adc
adc
mov
div
rorb
fs
es
and
or
in
daa
and
movsl
bound
jo
xchg
jo
jge
cmpsl
xor
in
cmp
jno
push
cwtl
addr16
sub
insl
xlat
mov
adc
pusha
inc
mov
mov
rorb
repz
cld
mov
cmp
xchg
cmp
inc
dec
stc
sbb
add
loopne
mov
out
fsubrs
mov
movsl
arpl
cmc
adc
rol
pop
and
add
and
maskmovq
testl
cmpsb
pop
push
or
fsubr
inc
fs
cmpsl
mov
pop
stos
mov
ret
or
xor
cmpsl
sbb
mov
shll
mov
push
mov
and
mov
adc
faddp
sub
lods
or
push
pop
push
movsl
jo
dec
pop
movsb
jle
xchg
mov
popa
adc
adc
push
lea
and
test
out
cmc
sahf
add
popa
mov
dec
adc
fcomp
mov
and
fisttpl
cmp
icebp
mov
loopne
lret
add
jge
imul
pop
arpl
lea
incl
and
or
push
xlat
pop
jae
mulb
push
aam
insb
add
out
lcall
inc
dec
loop
out
clc
sarl
mov
sar
push
sbb
push
loop
les
inc
mov
loopne
movsl
jno
or
or
outsb
adc
mov
mov
popa
xchg
outsl
or
je
pop
mov
dec
mov
test
in
jb
mov
outsb
lcall
sub
mov
ds
xor
mov
sbb
mov
aaa
imul
add
push
adc
adc
cmp
dec
shrl
data16
mov
aam
int
and
cmp
repnz
loope,pn
cli
xchg
fmul
and
imul
push
mov
jecxz
or
xchg
pop
mov
clc
into
insl
pop
roll
push
dec
push
mov
in
fcomps
push
in
and
jg
dec
dec
orl
xor
cltd
ljmp
test
adc
imul
jmp
sahf
jmp
test
adc
mov
arpl
cmp
fisubrl
fcoms
mov
sub
sbb
or
lods
xchg
ss
fs
nop
in
inc
push
pop
arpl
popl
push
inc
mov
movsb
test
in
or
out
xor
pop
mov
lods
adc
enter
inc
ret
cmp
pop
mov
loopne
stc
test
dec
cmpb
sub
scas
dec
fstpl
mov
or
fstl
out
hlt
mov
lock
repnz
mov
into
push
int
faddp
fdivp
xchg
dec
test
jp
out
cld
fstl
out
mov
xchg
cld
imul
pop
stos
rcll
shl
out
sub
or
xchg
and
jp
fcmovnb
daa
or
cmp
scas
push
call
jg
clc
cli
inc
add
jnp
mov
inc
jo
aaa
test
xchg
aaa
pop
cmp
inc
push
push
add
cli
mov
jl
aas
sub
push
stos
aaa
out
icebp
nop
xchg
inc
cmp
or
aam
ret
and
pop
pop
mov
test
mov
arpl
fistl
sbbl
inc
lds
inc
out
les
inc
test
imul
jns
nop
cs
cwtl
scas
mov
fisubs
repnz
lahf
mov
and
cltd
out
adc
mov
pop
jb
test
jnp
push
jg
and
or
jno
mov
cltd
ficoml
mov
adc
pop
test
push
ret
or
inc
mov
jne
rolb
mov
xor
in
dec
dec
and
inc
pop
mov
mov
mov
or
stc
es
pop
adc
dec
xlat
rolb
push
movsl
movsl
cmc
inc
cmp
xchg
jl
and
ret
mov
es
xchg
dec
adc
sbb
frstor
push
adc
fiaddl
into
repnz
sahf
orl
xor
inc
aad
fsubrl
fists
dec
xor
sub
repz
into
es
dec
out
jbe
pop
sbb
and
mov
lods
outsb
sahf
jmp
fwait
xor
icebp
lods
sbbb
outsl
jge
mov
mov
test
mov
loopne
out
xorl
jecxz
sarb
mov
int
mov
dec
int3
mov
cmp
cmp
aaa
out
and
lahf
xchg
sub
pop
or
jae
xor
xchg
pop
mov
das
lret
into
fwait
outsl
pop
insb
cmc
jns
sbb
cs
or
jae
and
jg
add
test
les
nop
stos
loop
jle
and
lret
push
mov
es
jmp
mov
mov
cmp
cld
ret
out
or
xchg
mov
push
jecxz
inc
fists
loop
push
insb
and
pop
mov
push
sub
aam
push
xor
xchg
and
cmp
lods
mov
test
mov
xchg
xchg
inc
and
sub
jl
xor
add
std
push
push
scas
testl
je
jl
sbb
das
sub
xor
inc
sbb
pop
xor
mov
mov
out
xchg
push
shlb
mov
cmp
lret
mov
iret
sbb
les
pop
sahf
add
xchg
movsb
and
push
adc
jl
enter
mov
xchg
adc
icebp
stos
loopne
add
push
add
aas
sub
mov
and
inc
std
aaa
push
in
bound
cwtl
or
int3
sbb
mov
mov
imul
add
mov
inc
cli
shl
ret
push
inc
movsb
cwtl
add
stc
push
fistpll
rcrl
sahf
stos
cmp
icebp
mov
cmp
push
push
xchg
pop
aad
pop
pop
sub
into
js
cmc
jmp
lods
int3
stos
add
inc
pop
cmp
std
push
xor
aaa
xchg
or
scas
or
cmp
and
pop
and
pop
outsb
dec
out
outsb
and
dec
and
shlb
pop
sub
cmp
aas
xchg
sahf
sub
cmpsl
inc
scas
arpl
or
fidivrs
hlt
bound
addr16
fs
or
dec
or
es
jae
add
js
sub
add
sahf
mov
cmp
pop
push
push
add
outsb
pop
outsl
repz
sub
sub
lret
mov
divl
pop
inc
pusha
and
add
dec
lahf
adc
mov
das
push
rcr
xor
aas
xchg
xchg
test
mov
scas
mov
cmp
jmp
movsl
add
mov
lods
adc
mov
aaa
add
pop
int3
test
sub
adc
rclb
out
into
mov
sub
mov
aaa
adc
jle
jp
xchg
pusha
out
mov
inc
and
cs
sahf
movsl
pop
xchg
aaa
test
lods
rcrb
jg
mov
je
or
push
clc
in
sbb
xor
in
ret
mov
adc
sub
and
push
leave
jmp
lcall
xchg
mov
aad
sbb
ss
xchg
fldenv
lret
lcall
xor
adc
mov
fs
mov
or
div
push
mov
sub
fwait
jg
imul
cltd
jnp
das
mov
sub
push
xor
cmp
dec
xor
jae
outsb
in
and
fnsave
ljmp
push
add
in
pcmpeqw
pushf
push
push
push
es
lahf
insb
test
fnstenv
cmpsb
push
or
in
out
mov
cli
popf
add
adc
mov
fidivrl
dec
dec
scas
lods
fwait
mov
adc
push
repz
jno
jae
es
fcompl
je
mov
lcall
cmp
dec
mov
outsl
icebp
pushf
outsl
inc
outsb
add
jmp
cmpb
push
jp
lock
std
stos
sub
add
lret
outsb
mov
gs
inc
add
inc
push
mov
cmpsl
repnz
jecxz
call
ss
dec
jge
mov
scas
add
stos
imul
push
push
mov
pop
inc
test
push
addr16
xchg
rcll
push
inc
xor
mov
pop
inc
sti
arpl
roll
xchg
aam
sbb
movsl
mov
mov
cmp
stc
mov
leave
push
and
push
dec
in
jne
mov
cld
pop
cmp
ja
jmp
push
sub
ss
or
leave
jle
mov
mov
rcrb
out
xchg
xorb
inc
mov
insb
dec
pusha
jl
xchg
push
push
push
cli
and
lods
nop
scas
shlb
sub
adc
cmp
dec
in
jle
push
je
sub
or
das
lock
and
sti
add
push
lods
pop
stos
fcomi
fsts
mov
sbb
push
fdivl
arpl
cmp
jecxz
lret
add
aam
jns
adc
sbb
mov
cmp
fbstp
inc
push
jg
mov
es
popf
pop
je
cltd
sub
fidivrl
orb
dec
icebp
adc
daa
pushl
ffreep
mov
sub
test
jecxz
adc
inc
mov
iret
and
idiv
mov
and
xorl
pop
sarb
adc
scas
jge
ret
mov
sahf
clc
fdivr
shrl
inc
xor
or
push
mov
loop
mov
adc
mov
loope
inc
dec
stos
xchg
push
fcoms
jo
xor
shlb
loope
inc
je
push
sub
push
add
push
dec
ret
test
or
in
ljmp
aam
jbe
pop
xor
xorl
dec
sti
push
ret
int3
xchg
sbb
fs
loopne
mov
mov
sub
test
rcl
repz
in
push
mov
push
nop
mov
or
loope
mov
mov
pusha
leave
pop
push
ljmp
es
cltd
xchg
jbe
jnp
in
lea
cmpsb
movups
cmp
mov
lret
mov
push
sub
sbb
mul
fldenv
std
jecxz
mov
scas
insl
mov
test
xor
inc
es
in
movsb
or
inc
outsb
pop
sbb
outsl
xor
sbb
dec
sbb
test
pop
int
repz
addb
mov
pusha
jb
xchg
outsl
pop
sti
mov
sub
mov
dec
popa
leave
ja
test
imul
mov
push
dec
imul
mov
xchg
xor
stos
mulb
repnz
jae
and
dec
cld
test
jb
pop
sbb
adc
lcall
jns
cmp
jns
mov
jo
in
fsubrs
loope
push
cmpsl
adc
fidivl
fists
mov
cmpl
out
sbb
xor
jnp
stos
ds
inc
mov
mov
and
movsl
loope
jg
mov
cltd
push
mov
push
push
xorb
mov
xchg
mov
addr16
mov
add
lods
cwtl
push
popf
push
lock
lret
pop
pop
jns
push
lea
dec
test
xchg
shll
out
fstps
inc
rcr
scas
jle
ljmp
push
lea
pop
jge
mov
mov
push
or
add
and
sarb
daa
test
cld
mov
stc
mov
scas
push
jecxz
add
into
cmpb
loopne
jne
lea
iret
dec
jno
stos
cmc
sahf
jl
bound
or
into
enter
mov
clc
cmpsl
dec
imul
sarl
popa
nop
adc
or
and
fstpl
push
cmpsl
dec
arpl
call
push
cmpb
sub
mov
cmp
adc
and
inc
movsl
ret
aam
out
leave
jp
xchg
in
dec
ja
out
jg
cmp
faddl
xlat
js
pop
jne
sub
add
jnp
sbbl
mov
xlat
dec
or
jp
lcall
arpl
or
pop
mov
mov
sbb
lods
xchg
mov
xchg
mov
or
sub
pushf
cltd
jno
mov
jge
addr16
loope
testb
sub
add
push
lret
cmp
mul
adc
and
jg
aaa
mov
ds
inc
cs
fwait
jnp
pushf
and
lock
jg
sbb
push
xor
fists
pop
mov
in
fwait
xchg
stc
or
add
out
push
sti
fsubrs
arpl
push
rorl
vmovups
dec
outsl
lea
sbb
jmp
lock
push
movsb
or
lcall
dec
or
lea
push
cmp
cmpsb
iret
loopw
cmp
bound
test
je
sub
je
gs
jae
jge
mov
test
es
dec
dec
push
lret
dec
scas
push
mov
int
scas
test
xadd
inc
add
sbb
cmc
mov
adc
sbb
daa
push
cli
and
mov
mov
dec
out
icebp
jg
fists
inc
imul
loopne
dec
cmp
in
outsl
sbb
mov
pushf
cli
jno
cmpl
mov
sub
inc
std
int3
cwtl
add
stos
push
push
jns
les
pop
enter
adc
jp
push
cs
sbb
jb
push
cmp
cs
mov
loope
jge
or
or
sub
xchg
ljmp
add
sub
jmp
jmp
rclb
dec
rcll
mov
dec
dec
shrl
add
and
dec
lret
mov
and
out
int3
inc
sbb
adc
pop
outsb
mov
cmp
mov
imul
loop
mov
and
push
cmc
mov
mov
cmp
dec
mov
sbb
sbb
add
dec
mov
sbb
addr16
ljmp
xor
adc
inc
or
xlat
adc
add
xchg
loope
jns
mov
sbb
and
fistps
jg
insb
cmp
jne
incb
jae
inc
lret
pop
iret
push
stos
inc
sahf
bnd
xchg
inc
and
add
xchg
pop
jbe
sub
test
lcall
out
dec
xor
push
addr16
pop
sbb
sub
or
xor
les
pop
rorl
outsl
jns
or
imul
add
pop
addr16
dec
or
adc
popf
jns
push
inc
daa
sub
dec
cmp
ret
out
cwtl
fimull
cmp
mov
insl
push
lea
sahf
dec
push
out
mov
add
dec
rolb
out
sbb
lods
leave
dec
movsl
mov
lock
gs
fdivrs
jl
jmp
push
adc
cld
inc
mov
adc
lods
lcall
push
pop
pop
xchg
mov
cmp
lea
mov
test
sti
sti
mov
dec
sahf
jb
sbb
inc
adc
or
xor
fldl
inc
sub
mov
mov
fnstcw
mov
gs
call
push
cmp
repnz
xchg
mov
ds
fldenv
adc
les
jne
mov
add
push
sbb
sbb
dec
push
sub
cmp
sub
mov
pop
out
fldenv
push
es
insb
fwait
or
mov
adc
arpl
mov
lds
gs
or
push
cmp
mov
fistps
sbb
xchg
dec
inc
divb
pop
cmc
xor
xchg
ja
lea
jne
ret
xor
xor
loope
pop
cmp
aad
fcomps
scas
pop
fstpl
jo
and
jne
xchg
pusha
ja
push
cltd
cmc
imulb
sbbl
in
dec
movsl
mov
test
int3
xchg
push
aaa
das
push
jne
adc
mov
dec
push
in
mov
fimuls
fadd
and
inc
insl
loopne
xchg
ss
shlb
push
jb
lea
pop
or
jecxz
les
mov
ret
mov
inc
and
push
pop
ljmp
nop
mov
outsl
andb
add
mov
bound
mov
xchg
stos
xchg
lahf
fdivl
cmp
fwait
sub
fildl
pop
es
mov
cltd
cmp
sub
mov
pushf
cmp
lea
and
sti
jge
enter
ret
or
je
rclb
xor
cmpsb
data16
pop
es
sub
push
in
cmpsl
pop
ja
mov
not
mov
jno
add
fistps
test
jns
xor
sub
inc
aad
adcl
or
xchg
cmc
call
mov
cs
test
cmp
lods
sahf
xchg
jno
in
add
lret
jae
lods
cs
xchg
rclb
lock
cmc
sub
loop
cmp
fcmovnb
nop
xchg
sbbb
jle
shl
mov
hlt
cmpsl
jmp
jne
mov
sbb
jg
bound
inc
jb
inc
add
mov
outsl
mov
mov
nop
int3
fsubrl
xchg
cmp
loopne
inc
sub
sbb
push
jecxz
lods
inc
insl
sbb
das
sub
ret
addl
adc
dec
xchg
mov
insb
xchg
rclb
pop
xchg
cltd
sub
pop
adc
pop
in
cmp
stos
sub
fldenv
loop
adc
cmp
dec
cmp
pop
xchg
xchg
xor
sarl
jae
mov
push
pop
dec
pop
add
sarl
xchg
stos
push
pop
inc
imul
jne
lods
mov
xchg
iret
test
and
insl
xor
pop
cs
ljmp
aad
loope
mov
pop
loop
sub
sbb
scas
stc
inc
jmp
xchg
and
mov
cmp
jmp
pop
xchg
les
testb
cmp
xor
sti
jmp
ss
lret
inc
ljmp
xchg
push
push
ret
dec
mov
arpl
loopne
dec
fs
mov
xchg
shlb
popf
jecxz
push
dec
pop
xor
add
cmpsl
mov
cmc
push
adc
mov
ret
xchg
xor
imul
inc
sbb
pop
push
gs
scas
fs
hlt
dec
and
pop
jbe
and
sub
push
pop
push
insl
sub
and
inc
clc
sarl
push
enter
adc
lcall
jne
push
pop
test
sbb
inc
mov
movsl
inc
test
std
or
mov
xchg
sbb
or
cli
ret
dec
pop
stos
insb
pop
xchg
cmc
pop
les
xor
xchg
mov
mov
jo
loop
and
push
jns
roll
addl
aaa
loop
inc
adc
test
fidivl
add
js
imul
xchg
stos
mov
or
loopne
movsb
in
movsb
stos
call
das
add
lcall
push
inc
in
xor
xchg
jbe
lods
aam
jo
pop
add
mov
call
ret
add
pop
clc
adc
notl
ja
push
ficompl
decl
xchg
les
push
or
xor
jmp
loope
xor
mov
adc
jmp
sub
out
xor
outsb
popf
das
sbbb
mov
adc
sbb
mov
gs
mov
or
mov
mov
add
add
adc
popa
ss
mov
mov
xchg
xor
mov
pop
add
lahf
fldcw
push
sti
mov
mov
push
enter
jecxz
es
pusha
fs
sub
jecxz
jb
pop
ljmp
imul
inc
push
rclb
dec
test
dec
pop
mov
popf
fwait
imul
clc
xchg
sbb
sbb
pop
clc
stos
xor
aas
dec
call
cli
xchg
addl
add
lret
mov
and
push
test
repnz
call
sbb
mov
ficoml
in
cmpsl
fnstenv
or
push
mov
push
inc
ljmp
mov
jp
and
pushf
mov
dec
in
and
cmp
fsub
mov
call
mov
das
add
push
sub
mov
adc
subb
pop
mov
pop
stos
std
lea
cmpsb
lock
pop
pop
test
fldt
aad
movsl
aad
mov
and
add
jae
pusha
cs
sahf
fmuls
pop
out
cmpsl
dec
popf
pop
xchg
into
sbb
mov
xchg
xchg
mov
cwtl
repz
jecxz
or
pop
adc
pop
test
ror
cltd
ja
inc
push
lods
ficompl
push
mov
inc
int3
sarb
nop
movl
insl
xchg
sbb
insl
mov
mov
push
sbb
pop
xchg
fwait
rorb
imul
jg
test
aam
out
pop
sub
push
sbb
xchg
or
lahf
add
cmpsl
loop
push
add
xchg
jmp
xor
adc
add
push
repnz
cmpsb
sbb
add
sti
adc
icebp
ljmp
std
pusha
adc
loope
adc
push
inc
outsb
or
daa
lret
mov
fisubs
pop
mov
test
and
and
fs
mov
loopne
imull
push
add
pop
aam
insb
ds
inc
inc
mov
ds
out
pop
xchg
das
pop
nop
cs
inc
aad
mov
scas
jnp
mov
cmp
and
jge
fs
or
inc
ds
lcall
ljmp
stos
cs
mov
pop
jge
push
addr16
dec
jae
pop
sub
sbb
ljmp
push
mov
mov
sbb
adc
cmc
into
jb
outsl
push
sbb
nop
imul
mov
pusha
push
fwait
mov
and
lcall
push
cmp
xor
push
test
fwait
dec
mov
dec
xchg
sbb
push
pop
sti
add
shlb
cmp
stc
movsb
and
daa
leave
popa
ds
fisubrl
xlat
jnp
and
daa
inc
and
xchg
fistpll
push
jns
xchg
jne
add
xchg
pop
add
xor
cmc
mov
mov
cmp
cmp
stc
in
adc
mov
sbb
inc
add
mov
cmc
dec
cmp
or
je
sbb
popa
add
insb
xor
and
cmp
shrb
stc
fs
mov
adc
cs
aam
loopne
shrb
xor
in
shl
cmp
xchg
bswap
sarl
out
sahf
xchg
mov
cmc
sbb
or
jg
data16
jp
in
and
xor
jl
add
outsb
aaa
and
icebp
dec
cmp
rclb
pushf
aas
cmp
imul
iret
fistl
out
ret
push
mov
pop
jmp
mov
aad
pusha
jmp
adc
dec
xor
mov
cmp
mov
fcomip
pop
popf
icebp
push
lret
mov
and
bound
std
pop
imul
out
push
rcll
xchg
movsb
ret
xchg
and
xchg
push
movb
nop
sbb
sub
orl
rorl
aad
incb
dec
ret
adc
push
repnz
loopne
inc
rcr
in
sub
xor
xor
dec
test
add
imul
dec
xchg
inc
orl
add
mov
jno
xor
bound
and
inc
js
xor
je
sbb
ss
mulb
mov
and
jno
sarl
jno
inc
adc
lods
fnsave
pop
jne
sbb
push
loope
adc
arpl
testl
push
inc
push
lss
faddl
pop
insb
int
fisubrl
in
inc
out
xchg
sbb
lods
sub
or
jo
gs
testb
pop
aad
je
mov
sarl
jp
cmp
fcompl
sub
fcomip
pop
sub
dec
sbb
jns
iret
test
mov
jecxz
cwtl
dec
outsb
xor
jmp
iret
mov
insl
cmc
or
push
cltd
and
aaa
jl
dec
push
icebp
cmpsl
cmp
sub
sub
repnz
sbb
jb
fsts
cmp
xor
push
fnsave
ret
fistpll
aaa
cmpb
jnp
pop
aad
lahf
xchg
xor
test
dec
and
mov
sbb
cmpsl
jp
in
daa
sbb
loope
roll
sbb
pop
sbb
test
sbb
test
inc
inc
cwtl
popf
xchg
cmpsl
mov
loope
pushf
pop
jns
pop
mov
sub
xchg
adc
sahf
sub
daa
cmp
inc
inc
pusha
sbb
gs
lcall
mov
cmovle
xor
das
push
inc
jae
rcll
loop
and
push
sub
mov
xchg
mov
mov
dec
std
sub
jmp
xor
push
xchg
test
sub
mov
sub
sbb
loopne
dec
add
add
cmp
dec
leave
jl
aad
dec
movsb
mov
cmc
or
xor
ret
xchg
data16
adc
sahf
test
stos
xchg
xor
add
adc
mov
mov
cmp
dec
std
les
fsts
lods
add
pop
jae
ret
jne
sub
std
or
gs
pop
and
movsb
pop
mov
jmp
pop
inc
mov
das
lods
ja
sub
cltd
pop
imul
aam
lret
aaa
sbb
iret
in
pushf
clc
je
xor
xor
add
and
rorb
pop
add
xchg
inc
cmpsl
cld
inc
xor
test
sarb
shl
inc
iret
push
cli
push
xor
mov
inc
mov
pop
jns
test
test
push
pushf
mov
fstps
imul
adc
push
inc
es
dec
jmp
adc
push
xor
and
in
dec
pusha
movsl
scas
push
rcrl
inc
pop
aad
mov
lods
or
xchg
testl
fldl
jl
mov
inc
stc
xchg
cmpl
mov
xchg
or
clc
pop
lock
jle
mov
push
add
mov
mov
pop
jae
insl
movsb
add
inc
push
hlt
jp
xor
scas
cmc
in
imul
lret
xchg
push
xchg
jecxz
int
movsb
aad
fdivrl
gs
mov
mov
gs
xchg
pop
addr16
fld
xchg
dec
jmp
andb
xchg
lcall
fwait
sub
pop
adc
std
xor
mov
outsb
mov
pop
push
pusha
mov
cmp
dec
fldl
push
mov
inc
cmpsl
xlat
bound
lret
lods
fdivr
mov
sub
fdiv
lods
mov
cmp
sub
pop
mov
dec
push
mov
cmp
call
test
jl
pop
scas
xlat
stos
fwait
sub
lahf
das
cmpsl
mov
jmp
shlb
inc
js
adc
rorl
push
mov
int3
xor
imul
outsl
cmp
mov
imul
inc
repz
push
sbb
imul
add
fists
mov
repnz
scas
sbb
rorb
mov
mov
dec
mov
test
add
add
pop
out
rcrb
push
and
jl
sub
sti
cld
lods
dec
push
mov
xchg
fldlg2
xor
or
pop
sti
push
pop
addl
and
arpl
add
add
jp
repnz
xchg
jmp
mov
int3
and
ss
arpl
clc
les
add
cmp
jns
cli
mov
in
pop
xor
cmc
faddl
stc
movsl
xor
sub
les
fucomip
sbb
dec
inc
out
aaa
mov
popf
cmp
or
std
jle
and
cmp
cmp
xchg
loopne
daa
jmp
cmp
sub
out
in
sbb
mov
cltd
jl
sahf
fistpll
add
stos
nop
cmpl
mulb
cmpsl
cmp
sub
or
pop
inc
add
cmp
bound
mov
out
das
pop
outsl
pop
jg
std
jle
jbe
in
arpl
xlat
loop
in
out
lods
cmp
lret
popf
ja
fwait
xchg
sub
jae
pushf
lcall
push
popf
icebp
cwtl
ss
imul
call
push
push
pusha
divl
inc
aaa
dec
sub
mov
xchg
js
mov
test
pop
or
inc
dec
jmp
insb
repz
cs
mov
shr
inc
movsb
or
and
stos
ret
inc
push
fdivrs
repz
rcrl
popa
or
scas
nop
add
mov
arpl
nop
cltd
test
orb
bound
das
pop
repnz
jp
mov
mov
js
push
and
jge
addr16
stos
push
jmp
negb
std
out
shrl
jae
sbb
loope
push
and
lock
pushl
jl
mov
bsf
test
negl
iret
nop
xor
sbb
push
add
pop
xor
stos
loop
bound
or
out
icebp
jno
mov
xor
xchg
and
mov
adc
outsb
inc
cmp
ja
adc
stos
jl
mov
fnstenv
out
cmp
cltd
movsl
gs
roll
dec
and
add
jb
popa
push
adc
fistps
dec
pop
sbb
outsb
or
add
loop
add
cmp
scas
stc
scas
push
int3
pop
inc
dec
mov
jo
pop
lock
fiaddl
push
add
or
imul
imul
pop
jne
mov
sub
or
mov
loop
sub
into
test
ret
cmc
pop
adc
imulb
cld
jb
pop
mov
inc
push
fldenv
or
shrb
popf
jle
xchg
idivw
inc
int3
out
add
stc
arpl
push
mov
inc
pop
shll
clc
test
mov
push
push
mov
push
jmp
testl
in
jo
inc
pop
mov
mov
test
hlt
mov
test
cmc
scas
test
mov
pop
or
addr16
adcl
arpl
andl
arpl
imul
rorb
iret
jne
enter
loopne
sub
jne
mov
cmc
js,pt
jl
dec
in
or
jne
out
mov
or
mov
dec
jb
xchg
push
sub
push
insl
fs
pop
or
inc
sub
adc
cmp
inc
arpl
cmpsl
pop
fstps
push
test
add
dec
aaa
pop
xor
out
add
fsub
divb
cmp
movsb
pop
fstps
addr16
bound
xchg
aaa
add
cld
cmp
mov
mov
add
jae
outsb
and
lods
sub
add
ret
in
sub
into
xchg
add
add
jmp
jmp
xor
subb
mov
dec
mov
enter
ja
pop
fs
loopne
add
push
cld
ss
aas
enter
and
sub
out
js
stos
je
pusha
into
push
in
lret
cld
push
sti
add
add
xchg
dec
push
sti
push
push
js
mov
arpl
xchg
out
inc
sub
shl
ljmp
inc
adc
pop
sbbl
inc
mov
sub
sbb
addr16
sbb
cltd
xchg
cmp
cmp
into
mov
cltd
daa
shrb
cmp
jno
cmp
rclb
adc
inc
mov
inc
fwait
repnz
test
lahf
gs
xor
xchg
sti
add
ss
lahf
cmp
jne
add
ss
int3
nop
sbb
mov
popl
mov
sbb
jmp
xchg
and
or
inc
call
cwtl
or
test
jno
int
int3
or
mov
push
mov
cmp
and
xlat
movsb
pusha
xor
cmc
test
addl
add
add
fs
aas
leave
sar
push
mov
js
mov
push
out
xor
inc
pop
shl
xorb
jb
xor
shrb
xchg
cmp
or
out
stc
into
cltd
int3
les
or
mov
push
push
cli
or
lea
sub
cli
addb
mov
subb
sub
jp
cmpsl
fwait
xor
imul
in
mov
rolb
or
add
in
mov
pop
aad
adc
and
inc
add
jnp
out
sub
sahf
es
add
inc
cld
fwait
in
cli
int
pop
add
mov
out
fimull
jae
fcmovbe
jae
cs
insb
mov
andb
add
and
sub
add
mov
pop
lret
rcll
xchg
mov
sbb
mov
ret
dec
push
or
and
pop
sbb
or
push
cmp
mov
aas
popa
out
and
pop
sub
add
lret
aad
cwtl
adc
or
fcompl
jns
lret
into
pop
in
daa
shll
les
sub
cmpsl
sbb
dec
imul
hlt
pop
cmp
cmp
rcll
adc
inc
adc
movsb
ja
clc
cmp
cmp
stos
das
stc
pop
out
and
jae
mov
shrb
jnp
xor
mov
cmpl
icebp
mov
sub
dec
bound
cwtl
jge
inc
pop
cmp
sub
movsl
mov
shlb
je
mov
jge
repz
fsts
push
fisubl
aas
sar
sub
dec
fmul
in
in
test
dec
sahf
mov
nop
hlt
inc
mov
xor
and
push
hlt
cmp
jbe
std
sub
mov
outsb
dec
xchg
and
jns
cmc
and
sub
int3
xchg
mov
stos
nop
jg
iret
dec
nop
xchg
mov
ljmp
inc
mov
movsb
pop
jle
lcall
fsubr
dec
mov
xchg
lcall
fxch
inc
es
jmp
add
or
mov
add
sub
icebp
sbb
in
outsb
inc
movsl
mov
cmp
jecxz
jp
lds
mov
insl
ljmp
pop
mul
jno
pop
rcrl
pop
in
sub
inc
arpl
xor
and
cmp
cmp
cmpsb
lods
xlat
in
es
jno
lea
adc
jno
es
adc
dec
jmp
int
adc
or
dec
pop
pop
adc
dec
cli
xor
xor
mov
test
xor
les
mov
nop
xchg
mov
cmpsl
in
sahf
out
push
nop
out
mov
xchg
out
cmpl
mov
xorb
and
pop
out
dec
shl
leave
xlat
or
ficoms
repz
lock
dec
sub
mov
cmp
or
gs
inc
or
cli
mov
cmc
cmpsl
xor
fs
fwait
fdivs
or
ret
js
adc
aam
push
mov
out
les
adcb
dec
jae
in
jle
or
xor
inc
inc
add
push
mov
adcb
movsb
in
push
add
fwait
push
ljmp
pop
loopne
sbb
lods
lds
cli
clc
mov
push
shlb
cmpsb
ja
push
xor
adc
stc
add
lods
cmp
push
into
pop
insl
sbb
sahf
sub
out
sub
dec
add
enter
dec
dec
cltd
mov
push
jmp
adc
sbb
xor
pop
rcr
adc
sbb
int
or
dec
rol
lds
fdivl
fst
fsubl
lcall
inc
adc
aaa
push
int3
lds
mov
arpl
aas
das
gs
jecxz
mov
in
xlat
test
iret
mov
call
inc
test
xchg
insb
cmp
push
xchg
imul
mov
mov
add
pop
sbb
jbe
out
mov
inc
sub
jne
adc
fcomps
pop
stos
test
rcrl
loope
es
adc
sti
aas
pop
and
jge
lcallw
push
jmp
daa
adc
test
push
jno
jmp
jge
ss
dec
dec
cmp
lcall
push
mov
push
daa
and
js
mov
adc
ret
sbbl
sbb
andl
imul
xchg
pop
inc
shll
adc
sarb
out
xchg
ja
cli
scas
ror
push
or
add
fs
jae
ljmp
loopne
push
xor
push
adc
push
mov
fnstsw
idiv
aam
cltd
imul
fsubrs
jne
in
call
fiaddl
add
push
pop
sub
inc
in
inc
in
out
lds
dec
mov
xchg
dec
movsl
jle
mov
mov
test
jne
dec
addr16
ja
lock
and
ret
sbb
pop
loopne
inc
push
jp
icebp
xchg
insb
sbb
sub
dec
add
aad
push
daa
cltd
inc
push
sti
xchg
lock
or
jno
fsubrl
sub
movsb
adc
stos
out
lahf
addl
cmc
pop
mov
imul
imul
mov
dec
pop
jo
enter
and
pop
lods
pop
or
lds
mov
jg
mov
out
lcall
lret
test
mov
push
sbb
mov
dec
lcall
adc
popa
xacquire
icebp
loope
mov
jo
stos
mov
mov
ficompl
int
jp
or
sub
dec
into
push
cmpsb
push
mov
push
sbb
mov
mov
sub
lods
aad
fcompp
imul
pop
jge
das
daa
or
mov
inc
cli
inc
icebp
pusha
cmp
fisttpll
sti
aaa
lret
ret
pusha
sahf
pop
jbe
stos
mov
pop
adc
sbb
out
cli
xor
jae
adc
shll
dec
add
sbb
and
or
cmp
jo
or
ja
ret
push
pop
add
jp
leave
push
jo
jnp
dec
cwtl
stc
mov
aam
in
fsubrl
test
shrb
insb
or
xchg
ret
cmp
pop
and
push
xor
call
test
inc
daa
push
stos
or
xchg
lds
inc
add
sbb
out
cmp
jp
inc
inc
sbb
and
pushl
or
popf
out
xor
add
dec
pusha
cld
cmp
or
pop
jg
ja
lods
lock
mov
lock
jmp
mov
scas
fbstp
mov
push
push
jp
inc
xchg
push
push
fsubl
mov
inc
call
cmp
in
aaa
addr16
xchg
into
inc
lods
jg
popa
icebp
cs
scas
xchg
add
mov
cmp
jmp
dec
loopne
mov
cmp
ljmp
cmp
push
addr16
mov
adc
pushl
xlat
pop
in
pop
mov
pushl
icebp
mov
adc
out
aam
js
cmc
pop
mov
lahf
xor
or
cwtl
inc
push
inc
or
les
mov
cwtl
rolb
ja
jp
push
aaa
adc
jne
push
not
out
call
loope
insb
rcrl
fprem1
shlb
lods
sarl
mov
xor
dec
xchg
into
sub
xor
push
cmp
xchg
data16
or
mov
pop
push
pop
or
cs
sub
mov
add
repnz
push
or
stos
cs
adc
imul
cld
movsb
out
out
popf
punpcklwd
mov
enter
dec
hlt
mov
jno
dec
sbb
loope
and
xor
loopne
pop
inc
mulb
add
sub
mov
push
pop
stos
sbb
leave
outsl
aas
push
insb
and
sbb
xchg
pop
push
inc
xor
test
ret
mov
out
mov
pop
int3
inc
inc
push
outsb
xchg
dec
cmp
mov
mov
std
xchg
push
sbb
rcll
pop
lds
jnp
inc
dec
cmpsb
and
in
lds
xchg
call
loope
push
lods
sub
into
add
lret
or
dec
scas
lods
outsl
cmp
inc
lock
daa
dec
or
pop
sahf
ljmp
pop
rcrb
pop
pop
dec
adc
insl
push
sub
ficomps
fimuls
nop
xchg
sbbb
sti
mov
ja
inc
sub
xchg
pop
xor
ljmp
dec
pusha
in
jbe
dec
jo
push
pop
push
push
lods
stos
mov
push
sub
fcompl
movd
jmp
dec
outsb
iret
mov
insb
fcomip
cmpsl
in
in
out
inc
lods
mov
mov
shll
popf
daa
add
mov
and
mov
sbb
fs
mov
out
repnz
cwtl
inc
xlat
lcall
cli
inc
mov
inc
sti
loope
std
out
dec
push
comiss
adc
mov
pop
sbb
lds
jle
mov
movsb
xchg
das
dec
idivl
imul
sbb
in
and
movsl
pop
popa
inc
cwtl
sbb
xor
imul
mov
jbe
jnp
fistl
clc
mov
out
and
jns
loopne
add
pop
pop
je
aaa
daa
cltd
sbb
js
and
mov
push
into
out
jp
adc
repnz
sbb
gs
push
je
inc
mulb
sub
sub
daa
mov
sbb
aaa
and
or
imul
ficomps
xchg
xlat
popf
lods
or
jg
xor
data16
ja
movsl
push
fs
in
adc
push
loope
add
mov
sbbl
pusha
lods
mov
mov
in
xor
adc
pusha
xor
inc
inc
fwait
rorl
sub
out
mov
and
xchg
mov
enter
imulb
addb
popa
pop
and
addb
mov
repz
insb
daa
pop
mov
mov
je
cltd
jne
inc
inc
fstpl
push
jl
test
and
out
mov
pop
mov
mov
cmp
in
xlat
ret
in
and
mov
fnstsw
mov
data16
jnp
mov
xchg
aad
jl
sbb
dec
hlt
push
push
clc
imul
movsb
cli
inc
or
ror
lea
stos
cmp
sahf
lret
sbb
int3
insb
mov
mov
insl
leave
js
pop
ss
xor
aaa
in
mov
adc
push
xor
popf
jle
dec
push
fld
rclb
jl
sahf
ds
cmp
xchg
dec
adc
pop
enter
icebp
mov
mov
jl
mov
jne
jne
out
sub
inc
shll
lods
cld
lcall
add
test
xchg
arpl
ljmp
push
jle
add
and
ja
pusha
mov
loopne
clc
sbb
or
sbb
xor
sti
loopne
jbe
adc
iret
jne
jle
dec
xor
das
sub
sbb
pop
push
jl
into
add
xchg
mov
mov
sahf
dec
inc
out
pop
iret
out
movsb
in
sub
jne
xchg
addr16
mov
sbb
sub
dec
inc
popf
stos
imul
or
xor
in
icebp
scas
push
movsb
cmp
or
nop
cwtl
jnp,pn
push
cmp
sub
push
mov
xchg
xchg
inc
inc
sbb
add
inc
push
push
fsubp
mov
das
or
inc
xor
nop
cmpsb
je
xchg
data16
jmp
xchg
movl
or
push
and
dec
dec
sbb
fldenv
sbb
outsl
cmp
adc
andl
cmp
cld
ficoms
xchg
sti
outsb
and
jecxz
mov
lods
cltd
mov
push
or
das
in
repz
inc
shrb
push
adc
sbb
xchg
jo
jo
mov
pusha
pushf
cmp
and
out
ljmp
xor
shlb
mov
in
lock
ret
sbb
push
xchg
data16
xchg
jbe
mov
push
and
xor
jae
mov
pop
fwait
jo
and
dec
push
adc
lahf
fwait
mov
repz
inc
jge
jl
das
out
adc
cld
cmpsb
and
lret
pop
pop
es
jnp
addr16
or
mov
dec
movsl
pop
jo
popa
insl
jl
lods
sbb
mull
mov
jno
adc
add
fnstsw
cmp
pop
arpl
lret
xor
jecxz
cmp
popa
xorl
out
test
mov
adc
mov
repnz
pop
mov
adc
dec
sti
and
jecxz
in
and
pusha
jl
ljmp
and
xor
xchg
dec
in
lahf
xchg
dec
sub
repnz
jbe
out
lods
int
dec
cmc
jns
arpl
xchg
out
pop
jno
ret
push
jbe
cmp
int3
lret
sti
inc
rcrb
fwait
cmp
add
or
lret
push
mov
sub
stc
dec
jmp
add
and
push
xlat
aaa
cmc
adc
push
cli
mov
dec
rcrl
fsubl
rcrl
inc
fs
mov
inc
test
andb
dec
data16
mov
in
into
push
or
and
mov
insl
rorb
adc
sbb
pop
inc
cs
mov
xor
sahf
dec
int3
xchg
xor
call
dec
adc
bound
andb
test
test
push
insb
push
lea
fcom
popl
clc
daa
scas
les
sahf
jecxz
sub
and
add
daa
jns
push
xchg
and
mov
out
loopne
mov
and
pop
dec
cs
aam
mov
aaa
jmp
xchg
loope
arpl
daa
pop
cli
pushf
add
leave
test
cli
sub
loop
adc
sbb
dec
add
cltd
sti
push
je
and
daa
pop
dec
add
imul
and
in
loop
mov
ss
int
cltd
mov
inc
mov
pop
xchg
fbstp
dec
mov
and
pop
fisubl
mov
fistl
mov
daa
xchg
push
movsb
lret
inc
cld
cmp
jmp
mov
into
call
and
ss
pop
dec
push
ljmp
or
sbb
std
adc
push
aam
lods
jns
pop
popf
sbb
push
xor
nop
cli
fidivrs
into
xchg
stos
sarl
dec
inc
or
scas
std
pop
popa
cwtl
xlat
fiadds
sub
pop
divl
cmp
xchg
dec
xor
sub
sbb
xchg
xor
cwtl
and
imul
push
sbb
inc
or
out
add
add
mov
adc
fld
fmull
xchg
push
fsub
clc
lock
in
out
in
cli
cmp
sbb
hlt
xchg
push
push
pusha
mov
repz
xorl
fisubs
hlt
stos
inc
mov
das
and
pusha
adc
adc
mov
push
mov
pop
xchg
aaa
adc
movsl
dec
and
or
stos
incl
adc
mov
bound
dec
popf
pop
xchg
add
sbb
fsubr
dec
repnz
dec
pop
push
sbb
jp
lcall
push
imul
mov
and
xorl
pop
adc
jo
jle
xchg
pop
pop
push
inc
aam
shl
cmp
fs
data16
xchg
push
pop
add
xor
jo
jge
aaa
aad
xor
cmpl
test
push
out
test
shlb
pushf
repnz
jo
and
sub
and
or
pop
xor
pop
jo
out
xorb
gs
push
mov
adc
dec
mov
cmc
mov
mov
pop
outsb
imul
movsl
cmp
int3
sub
insl
cmp
in
adc
and
mov
icebp
jge
lock
push
addr16
xor
stos
push
add
push
jnp
arpl
xchg
xor
adc
cmpsl
test
fwait
mov
loop
out
int
pop
cmp
adc
adc
jnp
mov
int
repz
mov
push
lret
pop
push
cwtl
sbb
mov
in
and
mov
jmp
xchg
call
cmp
data16
leave
adc
or
jg
sahf
mov
inc
ret
repz
inc
mov
add
loop
negb
pop
mov
jno
lods
or
imull
cmpsl
mov
and
scas
mov
dec
mov
jmp
push
in
cmpsl
lock
popf
or
test
sbb
xlat
jle
scas
fsubrl
data16
adcl
repz
mov
mov
xor
xor
mov
inc
inc
hlt
mov
out
mov
nop
mov
mov
xor
jmp
or
popa
ror
pop
and
dec
mov
pop
and
repnz
xor
xor
mov
adc
mov
or
inc
je
es
arpl
ret
or
fdivs
cld
xor
cmp
inc
hlt
jb
movsl
lock
mov
adc
inc
inc
mov
fs
pop
inc
mov
mov
enter
or
mov
test
xor
daa
cmp
ret
sbb
xchg
int3
adcb
sbb
shlb
mov
sub
and
or
cmpsb
icebp
hlt
shr
int3
cmp
scas
xchg
push
sti
mov
mov
pop
push
scas
mov
dec
inc
xorl
lret
mov
mov
pop
icebp
push
cwtl
pusha
aad
jno
orb
ss
push
cs
das
jne
sbb
icebp
mov
cs
cli
mov
movsl
mov
int
addr16
sbb
mov
dec
push
aam
add
and
or
stos
mov
into
out
or
sti
adc
clc
mov
push
lret
mov
test
in
pop
sbb
pop
aaa
inc
cmp
pop
inc
xor
mov
push
int
ss
cld
add
sub
and
bound
xchg
or
xor
mov
movsb
inc
jns
pop
and
cmp
pop
xor
pop
add
inc
push
adc
mul
cwtl
fwait
insb
mov
xchg
adc
sub
xchg
jmp
cmp
mov
cmp
push
pop
icebp
and
dec
push
xchg
mov
push
ficompl
mov
xchg
clc
add
ljmp
sub
and
int
sbb
mov
lods
pop
scas
das
xor
test
inc
jnp
push
mov
ret
mov
and
sub
rcl
inc
pop
push
push
gs
jmp
rcrl
inc
push
in
sub
mov
add
daa
push
insl
sbb
xchg
mov
jmp
jo
mov
adc
mov
js
pushf
mov
popf
sbb
or
ss
push
cmpsl
adc
mov
addr16
push
inc
lods
icebp
mov
sub
cltd
jae
cmp
xchg
aam
jae
fcomip
sbb
or
xchg
aas
cld
jg
fcoml
inc
jne
mov
pop
pop
mov
push
cs
sub
jbe
into
nop
sub
insb
mov
test
sbb
orl
aas
lock
push
xchg
out
jg
push
pop
inc
add
setae
daa
jl
push
push
jge
and
or
jns
lds
dec
aam
or
xor
loope
loop
shrl
sub
pop
lea
mov
jb
lcall
jle
icebp
daa
popa
pop
mov
sbb
out
arpl
push
insl
fwait
js
or
xor
pop
cmp
mov
and
mov
jo
sub
icebp
mov
adc
sti
iret
roll
leave
cmp
dec
cltd
clc
dec
scas
push
inc
into
stos
inc
cmp
pushf
aas
sub
mov
pushf
jmp
jge
push
pop
push
dec
adc
int
or
outsb
cs
stos
jle
mov
sbb
cmp
dec
sarb
pusha
push
lock
outsb
pop
shlb
xchg
push
mov
shlb
xlat
dec
add
sub
jle
add
cmp
in
mov
cmp
aad
and
jmp
xchg
and
push
dec
aas
push
pop
shll
ret
cltd
add
aas
imul
test
push
sub
cwtl
fidivl
xor
std
cmc
add
xchg
and
xchg
pop
fists
enter
xlat
aas
mov
int3
dec
aaa
mov
cmp
pushf
inc
mov
cs
xadd
iret
mov
pop
int3
repz
push
xor
adc
aas
sub
mov
imul
shrb
imul
add
adc
out
into
aad
cltd
imul
jo
arpl
pop
nop
xchg
and
push
xor
popa
aam
xchg
xchg
lcall
dec
in
jmp
push
pop
outsb
in
and
or
add
or
push
leave
mov
push
mov
xor
sbb
cmp
pop
mov
stos
cmp
call
cmp
into
jmp
xor
and
mov
lds
shrb
add
add
adc
xor
mov
into
lods
inc
rcrb
cltd
pop
jb
mov
xchg
xchg
mov
jg
mov
adc
push
jae
push
jle
pushf
in
pop
dec
push
pushf
negb
mov
inc
or
ret
stos
sbb
enter
xchg
cltd
jae
adc
ljmp
gs
mov
imul
imul
jmp
or
cli
ret
push
mov
fcmovnbe
or
mov
jmp
xchg
es
popf
imul
add
scas
lods
jmp
jp
jp
and
mov
xchg
push
jo
xor
add
xor
loop
lahf
out
mov
sub
and
fistl
hlt
pusha
or
push
push
pop
inc
loop
test
sti
add
repnz
cmp
imul
mov
pop
dec
mov
or
imulb
in
jge
cltd
xlat
ds
arpl
mov
sub
mov
mov
inc
in
mov
adc
xor
mov
cltd
stos
or
and
ss
mov
hlt
mov
in
shll
sub
push
mov
adc
jge
leave
nop
adc
loop
jnp
cmpsb
iret
div
xrelease
fstl
push
ret
dec
sbb
popa
mov
jne
xchg
pop
xchg
xchg
cltd
pop
mov
jbe
xlat
popf
fstpt
push
int3
ljmp
mov
addr16
add
lods
pop
or
repz
or
clc
subl
insb
inc
add
aaa
icebp
jmp
movsl
repnz
xchg
add
nop
test
jmp
std
dec
repnz
pop
push
adc
int
loopne
xchg
pop
add
xchg
add
cld
sbb
ret
xor
mov
adc
fists
jmp
outsl
mov
imul
mov
fcompl
xor
dec
jns
xorl
or
ja
adc
sarb
or
jnp
cwtl
stos
xor
pop
add
push
cld
mov
test
ja
push
adc
jp
out
aas
mov
xlat
jp
sub
lea
aad
cmp
sbb
icebp
cs
push
cld
in
ljmp
mov
jno
cwtl
sbb
xchg
push
inc
adc
xor
push
out
lahf
mov
fwait
dec
ror
xorl
insl
iret
js
cmp
mov
test
add
movsb
popf
mov
sub
mov
jg
dec
popf
aaa
dec
arpl
in
mov
add
xor
pop
mov
pop
xchg
pop
jecxz
xor
shlb
out
in
adc
xchg
shl
xlat
cmpsb
mov
mov
pop
jno
xorl
dec
fidivs
stos
mov
loope
gs
add
pushf
adc
les
in
inc
inc
lods
lods
and
lahf
add
cltd
jecxz
test
xlat
call
je
mov
lcall
scas
rorb
or
sbb
adc
minps
test
stos
std
cmc
in
inc
pushl
out
das
mov
cmp
aad
cmc
pop
pop
jae
cmp
mov
xor
mov
sbb
testl
test
test
lock
out
sbb
mov
aaa
in
fmuls
dec
je
jmp
mov
scas
mov
aam
mov
add
add
sub
fsubrl
fisubrl
out
vmread
xchg
mov
mov
mov
pop
mov
jecxz
mov
xchg
push
ret
xchg
loopne
jmp
data16
sbb
xchg
insl
das
nop
add
ja
data16
shll
movb
mov
mov
iret
jl
sbb
xchg
inc
mov
sbb
test
cmp
lods
add
xchg
in
jnp
ds
lods
cmpsl
mov
push
and
mov
dec
xor
ret
ret
push
push
mov
mov
sbb
xchg
icebp
lods
xor
sub
inc
pop
out
pop
cmp
sub
adc
xrelease
movsb
fidivrs
icebp
jno
jle
rol
repnz
arpl
cmp
subb
int
cs
pop
mov
jmp
mov
sbb
push
jl
cmp
xchg
sbb
in
jnp
faddl
or
push
je
lcall
and
mov
in
clc
mov
add
dec
mov
adc
jno
cmp
je
or
and
imul
addr16
inc
dec
ja
and
leave
adc
arpl
test
mov
jno
cmp
jae
mov
pop
push
int
fsubr
shlb
bound
xchg
mov
or
push
inc
subb
jnp
les
sub
push
mov
mov
pop
cmp
in
inc
inc
or
fcomp
stc
loopne
sbb
inc
push
jecxz
inc
mov
in
inc
enter
jae
sbb
dec
push
xlat
cmpsb
dec
dec
push
es
mov
sahf
push
pop
jb,pt
mov
add
dec
dec
fwait
or
xor
adc
call
les
mov
inc
push
push
stos
sarb
push
js
dec
push
mov
ja
sahf
adc
cmpsb
mov
rsqrtps
jae
jecxz
mov
ret
xchg
sub
inc
pop
sahf
out
xor
fdivr
test
daa
mov
ljmp
fldenv
stos
enter
imul
pop
mov
sti
push
push
scas
insb
mov
push
stos
sbb
les
dec
incb
sti
add
popf
int3
clc
sarb
mov
stos
jmp
and
add
push
decl
push
sub
sub
push
outsl
mov
fidivrl
mul
dec
lods
pop
mov
push
mov
test
dec
cld
lds
call
and
add
mov
jecxz
outsb
push
cs
xchg
divb
jmp
xchg
add
pop
fwait
dec
in
mov
fs
xchg
lock
dec
pop
inc
inc
pop
lock
rol
rclb
stos
jbe
push
dec
dec
lahf
lret
jae
pop
jno
adc
lock
adc
sub
lret
cmpsl
sub
jl
xchg
sub
jge
mov
sub
rolb
lret
push
or
pop
sub
push
jg
cwtl
ljmp
xchg
fwait
daa
popf
sub
rol
xor
daa
and
outsb
sub
inc
cmc
jnp
xorl
in
pop
ja
pop
sub
data16
fidivrl
xchg
push
shld
ljmp
call
bnd
pop
int
pop
imul
mov
sub
push
fsubrl
out
jp
and
push
imul
nop
aad
inc
xchg
test
test
sti
sbb
inc
xor
sub
cmp
xor
icebp
mov
add
and
pusha
adc
add
in
and
push
and
out
mov
pop
push
inc
js
fsts
jge
inc
xchg
pusha
mov
xchg
sbb
add
sbb
pop
or
insb
cltd
and
popf
pushf
pop
mov
out
cmp
cmp
outsl
aam
xchg
enter
dec
push
add
imul
movsl
imul
repz
sub
inc
inc
mov
mov
sbb
mov
xchg
popa
jge
enter
sbbl
loopne
and
shl
jp
fistpll
mov
sti
mov
fiaddl
adc
xchg
xchg
testb
push
mov
aas
fsubl
mov
cmpsb
lods
hlt
adc
test
jecxz
inc
rorb
add
repz
pushf
jmp
outsl
je
xchg
jp
frstor
daa
jle
mov
dec
or
jmp
cltd
mov
sbb
ds
ds
pop
sahf
movsb
js
insb
imul
mov
fstpt
adc
or
imul
jmp
and
inc
cwtl
inc
ret
xchg
lock
add
cmpb
or
xchg
jge
xchg
cltd
out
xchg
fwait
pop
shll
shl
ljmp
fisttpll
divl
adc
fwait
sub
push
mov
cmpsb
mov
push
xor
push
mov
push
mov
push
sub
out
mov
adc
add
mov
mov
adc
xchg
dec
sbb
testl
sahf
cwtl
add
pop
mov
and
lds
lret
scas
iret
jne
mov
push
unpckhps
int
pushf
cmpsl
mov
add
xchg
and
arpl
daa
cli
adc
sbb
ja,pn
subl
sub
cmp
icebp
sub
enter
dec
add
adc
sbb
pushf
xor
clc
btc
popa
aad
pop
int
mov
cld
inc
xchg
in
stc
lds
test
mov
jp
lds
insl
adc
and
cmpsl
and
mov
dec
fidivrl
mov
add
cli
daa
mov
xchg
les
dec
push
test
jle
cmp
push
push
insb
mov
cld
jb
lcall
in
mov
fisttpl
lods
adc
xchg
fildll
push
or
mov
sub
out
push
xchg
inc
or
jne
pop
xor
in
test
add
sbb
mov
das
cwtl
jae
aam
pop
add
xor
mov
aaa
stos
cs
enter
cmp
std
adc
test
mov
jne
roll
pusha
pop
dec
mov
iret
aad
out
data16
sub
mov
xor
push
jle
jmp
mov
fcmovbe
mov
sub
iret
ja
inc
push
pop
add
fisubl
push
push
call
jnp
jmp
xchg
add
repnz
inc
cmc
out
mov
cmp
int
stc
aas
sbb
lock
shll
inc
hlt
out
xchg
ds
xor
push
xchg
inc
jg
outsl
or
xchg
push
cmp
adcl
iret
and
and
mov
push
hlt
popf
fnstsw
xchg
test
test
sahf
or
cmp
dec
cmp
or
lahf
pop
mov
fwait
insl
lods
cmp
lret
in
movsb
lcall
ljmp
xchg
xchg
fs
jne
imul
add
sub
lahf
sahf
cmp
jg
jae
cmp
sbb
xor
das
insb
xor
lcall
jns
mov
dec
scas
adc
push
sbb
ret
cmp
ret
cmp
insb
stos
dec
aam
addl
shll
mov
scas
int
lock
jno
jne
push
popa
or
fists
insb
cmp
jne
out
adc
pop
adc
adc
nop
lret
jp
dec
mov
jo
shrl
push
ficoms
movsl
add
pop
add
dec
leave
fnstsw
mov
mov
push
push
fwait
mov
push
adc
inc
bound
cmpsl
data16
add
insl
call
pop
mov
inc
ret
xchg
mov
lods
mov
fmull
add
pop
mov
je
push
scas
lock
in
loope
sbb
sub
aaa
ficompl
fldcw
add
jnp
loopne
dec
and
add
incl
lock
aas
pusha
xor
gs
filds
sbb
and
imul
push
pop
fsubrs
aaa
in
jge
push
push
je
jns
call
dec
push
std
int3
aas
cmpsb
movsb
enter
cltd
inc
push
adc
sub
icebp
mov
pop
mov
loope
xchg
test
jmp
adc
test
push
xchg
in
mov
pop
inc
jnp
and
ret
xor
mov
ja
fldenv
js
jns
push
outsb
in
cmpsl
gs
jae
push
pop
outsb
pop
lock
adc
insl
int3
cmp
movsl
inc
or
outsb
mov
mov
dec
mov
inc
xchg
sub
xchg
pop
push
mov
dec
call
push
clc
outsb
cltd
xchg
jnp
or
sub
pop
dec
das
icebp
std
lods
xchg
fists
add
add
dec
lahf
sbb
sbb
jmp
loop
jge
dec
repz
jecxz
int
mov
call
clc
aad
mov
sbb
pusha
xchg
push
jmp
in
test
fidivl
push
shll
lcall
test
ds
je
in
mov
nop
push
repz
jae
jg
sbbl
clc
adc
fldcw
mov
ljmp
ret
adc
mov
push
aad
jecxz
push
mov
pop
stos
iret
fadds
ds
sti
jg
out
dec
xchg
mov
mov
pop
push
movsb
cmp
pushf
jmp
cmp
sbb
mov
cmp
pop
sub
cmpsb
jmp
fcomps
pop
inc
out
mov
xor
cwtl
fildll
jg
iret
sub
les
sarl
pop
jg
mov
sbb
mov
inc
ljmp
notb
mov
xchg
test
adc
add
js
push
mov
ja
and
pop
bound
add
mov
dec
jmp
jnp
int3
les
daa
jge
mov
xor
aas
test
sbb
mov
mov
jmp
cmp
ljmp
fiadds
and
dec
xchg
xor
int
arpl
pop
push
lds
mov
repnz
icebp
add
push
xchg
sbb
mov
lea
fdivp
mov
inc
fsubl
jnp
xor
dec
in
lcall
shrb
inc
push
xor
jno
xchg
ret
inc
dec
mov
and
call
dec
jbe
xchg
lods
sarb
pop
das
fdiv
push
sub
daa
adc
push
lods
vmovaps
sub
aad
mov
xchg
clc
es
sub
cmp
inc
scas
xor
loope
cwtl
xchg
adc
and
fmull
out
je
imul
push
rcrl
mov
adc
adc
or
jne
push
rorb
ss
loopne
iret
mov
test
fs
in
out
jno
xchg
xchg
lret
daa
dec
mov
mov
aam
fiadds
roll
push
outsl
mov
cmp
mull
or
jmp
xchg
or
jae
daa
lock
lcall
aam
leave
cmp
sbb
and
inc
cmp
orl
mov
fbstp
inc
pushf
mov
and
xchg
mov
sbb
jnp
or
mov
xchg
lods
push
lahf
or
clc
jg
xchg
movsb
dec
or
fildl
mov
ret
xor
or
out
sbb
sub
push
mov
pop
dec
mov
xor
or
sbb
pop
jmp
lahf
pop
inc
popa
out
xchg
jns
push
sti
jb
jp
mov
jmp
push
outsl
popw
cmp
mov
popf
test
push
sbb
stos
out
inc
inc
popa
sub
ja
out
inc
clc
add
inc
push
adc
loopne
incb
add
sbbb
out
or
sub
imul
das
mov
xchg
outsl
xor
dec
in
inc
cld
lock
lret
jmp
hlt
es
fdivl
fdivr
pop
fsubrl
jbe
jne
in
test
rclb
stos
cmp
xlat
or
int
add
sub
sbb
test
mov
cmp
jo
fs
xchg
inc
js
mov
add
jecxz
jne
xchg
cld
xchg
int3
lods
fmulp
pop
pop
mov
insl
push
sti
lret
hlt
repz
ss
adc
in
add
inc
xchg
mov
das
je
pop
out
fisubrl
or
sbb
frstor
fs
jns
mov
dec
int
cmp
insb
mov
jno
lea
mov
fdivrp
std
out
sub
xchg
add
cmp
pop
mov
pop
add
pusha
adc
cmp
pop
scas
rcll
fistpll
fwait
repnz
jg
dec
mov
in
mulb
fsubr
cld
outsl
lock
fsts
push
int
push
arpl
jge
or
adc
cli
fisttps
xor
insl
rcrb
outsl
or
mov
add
ja
std
test
ret
pop
jbe
in
sbb
mov
outsb
prefetch
or
add
pusha
lea
sub
xor
cmp
int
aaa
push
cltd
popf
out
pop
or
leave
stos
sub
aad
jnp
pop
repnz
mov
mov
dec
cltd
cltd
adc
orb
lds
fwait
sbb
cltd
xor
or
sarb
sahf
out
mov
fisttps
lret
sub
daa
push
lds
and
jge
jno
pusha
jecxz
jnp
push
jbe
mov
mov
les
and
cs
add
shl
pusha
and
out
dec
stos
pop
sbb
mov
inc
xchg
adc
subl
mov
push
test
aaa
ja
mov
pop
mov
hlt
movsl
out
rclb
test
int
pop
pop
mov
shld
xor
push
lds
repnz
aaa
pusha
testb
adc
add
mov
and
leave
cld
push
adc
ds
xlat
or
push
mov
push
hlt
xlat
cld
testl
bound
adc
aaa
adc
mov
adc
or
sbb
or
mov
pop
ret
out
add
dec
fstpt
inc
sbbl
push
sub
lods
xor
mov
sub
cltd
loop
clc
xchg
pushf
or
jmp
push
std
inc
test
jae
inc
popf
loope
add
lret
dec
sti
sub
ret
adc
mov
mov
jb
mov
mov
lock
in
sti
lcall
in
rorb
lahf
orl
test
dec
pop
adc
and
imul
and
ja
ret
add
mov
pop
fildl
nop
imul
inc
mov
inc
and
mov
cli
in
or
je
jecxz
std
fnsave
jo
push
and
mov
out
jecxz
in
pushf
xor
test
adc
loope
dec
xorb
out
jle
in
jl
aad
std
xor
inc
cli
aaa
sbb
add
xchg
xchg
cmpb
jo
jg
in
movsl
mov
pop
loop
aam
jmp
repnz
pop
sbb
pop
push
loope
les
jb
mov
jae
fmuls
insl
adc
cmc
jecxz
das
pop
aas
cmp
or
sti
push
cltd
stos
xchg
xor
imul
xor
jnp
pop
cli
je
pop
cmc
lea
push
imul
xchg
mov
push
test
inc
sub
out
lret
push
out
enter
jb
dec
add
stc
cli
jno
or
ret
mov
xchg
nop
sti
stos
or
mov
push
pop
leave
nop
ja
shrl
outsb
cwtl
xchg
ret
mov
fstpl
scas
sahf
loopne
push
mov
xchg
lods
xchg
adc
pop
aaa
cmp
nop
adc
sti
cmp
loop
inc
add
mov
iret
std
jmp
jle
jle
fidivrl
xchg
lret
test
xchg
mov
and
push
subl
xor
pushf
mov
fisubs
mov
fimuls
xchg
outsb
cltd
ret
xchg
inc
bound
es
add
aas
repnz
mov
faddl
pushf
jno
jmp
outsb
mov
loopne
int
in
les
mov
shr
pop
push
pop
mov
jns
add
dec
hlt
xor
subb
mov
push
in
dec
sub
gs
lret
in
sub
fadds
jmp
xor
mov
subl
dec
cwtl
mov
insb
sub
mov
mov
int3
clc
jle
sub
sub
mov
push
lock
mov
icebp
add
mov
inc
jnp
pop
loop
lret
push
fxch
or
jno
ljmp
adcb
std
imul
movsb
sbb
data16
call
adc
xchg
lahf
xchg
es
mov
xor
inc
xchg
sbb
inc
add
shlb
out
test
rcl
pop
add
sbb
add
pop
lock
and
mov
mov
mov
les
in
add
mov
fistpll
and
add
scas
scas
xchg
add
cli
loop
icebp
dec
in
sbb
in
nop
inc
aad
xchg
cld
and
icebp
push
pop
fdivl
add
mov
int
inc
insb
push
mov
adc
iret
jbe
das
out
cld
mov
inc
sarb
and
jge
test
or
jg
or
pop
lahf
jo
stos
pop
push
insl
jo
adc
test
mov
push
adc
xchg
push
sbb
out
xlat
js
add
fists
imul
popa
iret
pmulhuw
xlat
lcall
nop
push
enter
inc
push
cmp
xchg
into
pusha
pop
jnp
or
test
fimuls
xor
jl
dec
rolb
pop
push
arpl
adc
dec
fsubs
or
and
adc
sbb
fs
dec
stc
pop
mov
sub
repnz
jl
out
into
out
movsb
stos
pop
test
movsl
pop
and
imul
cmp
mulb
jmp
sbb
pop
jmp
add
imul
adc
stos
sbb
inc
jg
mov
movsl
out
scas
cli
jbe
loop
mov
addr16
insb
mov
in
mov
xchg
fimull
loop
nop
pop
inc
lret
popf
cmp
sub
sar
adc
movsb
test
cmpsb
pop
ja
xor
fwait
sub
cltd
mov
and
jae
mov
ljmp
adc
aas
call
out
cmp
lods
daa
inc
mulb
ss
sarl
jno
adc
jnp
fnsave
imul
cmpsl
hlt
mull
sarl
jns
push
adc
cmc
pop
push
andl
lock
lods
fbld
push
inc
mov
pop
shlb
jae
cltd
or
idivb
dec
xchg
repnz
cmp
loope
push
cmp
push
dec
or
xor
push
xchg
cwtl
hlt
jne
cmc
aaa
xchg
mov
sbb
enter
jb
adcb
and
push
fdivs
or
xchg
push
mov
xchg
cwtl
lods
xchg
test
sbb
xchg
scas
arpl
imul
mov
jecxz
aad
int3
adc
inc
fistpl
test
add
xchg
adc
mov
push
and
sbb
xchg
sub
in
lods
test
jno
int
sbb
mov
lock
jge
mov
pop
mov
and
insb
or
jno
mov
mov
adc
arpl
arpl
inc
sti
cmp
push
bound
cmp
jge
imul
mov
mov
imul
xor
cmp
dec
iret
call
jbe
mov
fs
pop
jns
xor
subb
shl
dec
dec
xchg
movsl
enter
mov
pop
sub
ftst
mov
nop
insl
pop
loopne
cmp
mov
mov
push
add
lods
insb
jp,pt
jge
ret
clc
or
lret
adc
in
inc
test
lea
out
das
cmp
fistpl
mov
shrb
mov
movb
push
jmp
insl
pop
lods
and
or
and
xchg
jg
add
mov
jbe
add
sbb
dec
lods
imul
cmp
push
dec
pop
add
sub
arpl
add
in
jg
rorb
dec
mov
xchg
or
jecxz
fwait
rorb
cmp
je
mov
aaa
pop
call
push
iret
pop
and
fcmove
aas
xlat
mov
loope
xor
sbb
lds
sbb
arpl
cmpsl
lret
icebp
mov
or
and
movl
lret
push
cmc
jmp
imulb
loopne
fnstcw
push
repnz
test
mov
clc
aad
stc
inc
pushl
mov
xchg
mov
out
mov
orl
test
adc
in
leave
out
popf
cwtl
pop
push
add
dec
pop
aaa
inc
jbe
lds
icebp
ficoml
cli
out
loopne
into
inc
int3
lods
mov
decl
xlat
mov
xchg
xchg
pop
lds
pop
add
jns
rcrl
xchg
lea
aas
ret
dec
ja
mov
jnp
mov
mov
fisubrl
mov
fidivs
mov
fidivrl
cmc
dec
xor
outsl
mov
inc
scas
mov
push
or
fisttpll
les
pop
pushf
add
std
loope
pop
fs
insb
stos
xor
scas
cs
ret
mov
adc
test
adc
sbb
jle
icebp
into
or
xor
in
jmp
pop
inc
and
popa
test
cld
mov
arpl
sbb
mov
dec
in
cmp
into
add
and
or
inc
lcall
mov
lcall
fnop
loopne
adc
in
fwait
adc
cmp
add
xchg
pop
out
mov
xor
in
int
out
into
std
negb
das
add
je
out
gs
sbb
or
out
fidivrs
mov
dec
xorb
xchg
call
cmp
push
inc
or
mov
push
dec
mov
mov
add
xchg
push
scas
mov
pop
dec
and
mov
xor
jp
mov
enter
jle
sbb
pop
dec
cmp
cmp
ljmp
fwait
mov
fiaddl
xchg
mov
shl
fcompl
ds
clc
das
stos
mov
push
in
test
mov
xchg
pop
jecxz
inc
xor
bound
mov
mov
inc
clc
stos
cwtl
mov
fwait
jl
insl
inc
nop
add
xor
lcall
sti
loope
mov
iret
test
inc
fcomps
or
cmp
cmp
fdivs
bound
test
xchg
mov
gs
pop
je
push
xor
pushf
or
test
mov
cmc
pop
test
js
or
jmp
stos
shll
jno
out
loope
sbb
adc
mov
pop
cltd
mov
mov
adc
mov
adc
jnp
sub
js
ja
fbld
jne
push
adc
dec
fsubp
and
mov
push
xchg
add
xor
movsb
lds
loop
std
or
aaa
mov
sbb
sbbb
hlt
jge
hlt
loope
scas
test
ss
std
adc
xchg
fcomp
into
hlt
xorb
xchg
mov
shl
sbb
mov
xchg
cmp
add
xchg
int3
and
repnz
in
jge
sub
ljmp
add
repnz
loopne
pushf
add
cmc
pushaw
adc
leave
push
mov
fsub
push
adc
imul
jbe
push
arpl
xchg
imul
outsl
fcmovu
lahf
xlat
sbb
inc
in
dec
sbb
cmc
call
or
cwtl
push
fcoms
mov
push
mov
arpl
mulb
xor
call
mov
xor
cmp
pop
push
mov
mov
dec
mov
xchg
inc
xchg
push
es
pop
cmp
xor
sub
mov
test
xor
int
mov
cmp
in
adcb
in
cld
imul
pop
inc
popa
xchg
js
and
outsl
xor
shr
xchg
scas
addr16
cmp
add
add
enter
add
nop
addr16
or
loop
jmp
fiadds
xor
inc
movsl
imul
es
mov
fldt
add
and
mov
test
add
cmpsl
popf
jecxz
imul
and
inc
sbb
xor
push
mov
xor
aaa
es
mov
push
pop
mov
stos
pop
fs
shlb
cmp
adcl
xchg
das
test
add
or
sahf
xchg
xchg
sti
ret
push
fstp
je
xor
les
stos
icebp
cmp
fwait
xchg
ss
into
sbb
fcompl
inc
jmp
imul
inc
enter
adc
dec
cmp
jle
or
shll
xor
xor
dec
add
int3
cmp
popa
jnp
lods
adc
stos
lahf
scas
cmp
sbb
jge
in
sbb
mov
arpl
push
adcb
xor
leave
mulb
xorb
stos
add
stc
ljmp
stos
cmp
cwtl
mov
inc
inc
rolb
scas
mov
bound
daa
in
sti
inc
sbb
push
dec
lods
std
dec
stc
mov
call
cmp
dec
in
ja
lret
shl
xchg
xchg
push
mov
mov
jge
inc
imul
rolb
sub
cmc
sbb
xor
pushf
fistps
insl
xchg
jp
jnp
scas
xlat
mov
loop
imul
arpl
out
lds
out
mov
sbb
cwtl
imul
enter
adc
cmpsl
mov
sub
mov
adc
inc
mov
ja
add
cmp
cmp
inc
lret
rorb
mov
shlb
jl
jecxz
ret
pop
stc
pop
sub
add
scas
jmp
iret
into
add
dec
arpl
inc
cmp
xor
xchg
daa
gs
icebp
sbb
filds
mov
ljmp
lock
loope
sbb
aad
push
xorl
lock
jg
mov
and
fdiv
mov
sbb
fwait
push
in
mov
imul
or
jmp
sub
enter
js
outsl
inc
lea
mov
dec
movsb
test
sarl
movsl
add
ficoms
lock
aad
bnd
add
jge
mov
fs
jae
ds
sarl
pop
test
enter
shlb
pop
add
and
sahf
fsubrl
pushf
insb
sub
jnp
push
mov
add
movsl
lods
inc
adc
loopne
test
sub
inc
sahf
loop
int
sti
xor
lds
mov
dec
lods
fucom
adc
inc
or
aaa
decb
leave
movsl
inc
cmp
rcll
test
push
sbb
and
push
sub
jmp
jle
loope
sar
idiv
movsb
mov
add
mov
repz
sbb
push
mov
dec
pushf
rorl
ss
test
lods
cmp
sub
xchg
enter
mov
leave
pop
inc
mov
test
and
js
mov
jge
lea
sbb
jbe
dec
lds
out
into
addr16
jg
mov
sub
cli
pop
or
sbb
or
pop
dec
sub
js
out
sbb
adc
fadds
jbe
cltd
add
sbb
arpl
aam
jge
or
adc
lea
cmc
pop
lcall
fs
jmp
jecxz
loop
testb
in
sarb
scas
or
pop
sub
movsb
fstpt
rcll
enter
sar
gs
mov
xor
jbe
loopne
xchg
inc
mov
mov
cld
pushf
in
pop
or
lds
aad
ds
repz
add
jg
lret
dec
pop
add
adc
rcl
jmp
inc
mov
or
push
add
jecxz
jns
das
ret
call
lock
sbb
negb
lock
popa
mov
inc
sub
dec
xchg
push
adc
push
cmc
insl
pop
xor
sub
pop
shr
or
addr16
lods
jae
xor
loope
lahf
cmpsb
pop
dec
mov
int3
incb
fcomp
sbb
pop
sub
push
add
insb
or
cmpsb
or
and
push
insb
inc
xor
inc
pop
mov
jmp
lcall
call
in
dec
repnz
in
and
xchg
xor
test
mov
push
cmp
mov
or
cmp
lods
mov
clc
pop
xor
add
pop
push
inc
mov
add
jg
stc
testl
test
push
mov
hlt
mov
dec
adc
and
pop
int
fisubl
mov
and
xlat
sarl
mov
mov
rcrl
dec
loope
pop
mov
push
icebp
and
mov
xchg
pop
fwait
dec
out
rol
or
lcall
pusha
fadds
shrb
pop
cwtl
mov
push
mov
popa
xor
pop
ret
loope
inc
std
jg
mov
test
jge
xchg
daa
clc
dec
xchg
mov
jmp
inc
xor
sub
insl
jl
ja
out
or
outsb
jae
xor
cmc
test
jl
cmp
not
lret
movsl
add
xor
mov
jns
iret
mov
fcompl
dec
xor
mov
nop
push
mov
jns
aas
enter
and
dec
std
mov
call
fld
pop
leave
pop
fwait
mov
push
in
outsb
cmpsl
daa
inc
push
shll
jne
mov
pop
in
add
jbe
xchg
fwait
mov
push
ja
mov
xor
ffreep
inc
or
outsb
lds
in
shll
mov
and
xlat
sub
pop
xor
lahf
popf
jle
jecxz
enter
cmpb
adc
and
dec
sbb
lock
xchg
inc
rcll
aas
push
mov
adc
mov
adc
imul
sbb
jg
les
xor
leave
rolb
out
sub
pop
loopne
in
andb
insb
jno
push
push
adc
mov
dec
xor
adc
xor
or
lret
sub
inc
sbb
outsb
test
and
andb
add
xor
call
adc
pop
or
outsl
es
loopne
xor
jg
sti
push
dec
pop
mov
pop
ljmp
dec
icebp
push
gs
xor
and
adc
scas
mov
mov
pop
xlat
sub
inc
repnz
insb
xor
cmpsl
scas
xlat
call
daa
nop
aam
and
inc
shlb
xchg
ja
sarl
into
or
int
pop
movsb
mov
aas
xchg
mov
jbe
dec
mov
or
ret
mov
inc
jmp
scas
bound
outsl
scas
and
mov
dec
cmp
mov
sbb
in
fdivrs
xchg
ja
and
fcmove
pushf
mov
pop
cwtl
mov
sub
outsb
sahf
movsl
pop
sub
adc
fistpl
sbb
jl
leave
cmpsb
fsubl
loope
je
push
xor
and
add
mov
sub
fdiv
xchg
ljmp
push
lret
xor
inc
wbinvd
xchg
push
xchg
mov
cmp
packssdw
dec
ljmp
fildl
jl
outsl
xchg
adc
roll
shl
cmpsl
mov
or
mov
rorb
fcomps
xor
cmp
es
shufps
popa
xchg
dec
addl
loope
inc
orl
jmp
sbb
je
sub
rcrb
cmc
fidivrs
inc
cmpl
jo
or
nop
outsl
mov
jmp
fisubrs
mov
jge
mov
call
push
jo
xor
lret
lea
xchg
cltd
cmpsl
sbb
lock
xor
sti
add
inc
mov
push
adc
jae
add
push
hlt
jno
ret
fwait
add
call
aas
push
lcall
arpl
inc
out
lock
or
adc
dec
aam
mov
fidivrs
aam
inc
add
sbbl
fnsave
and
addr16
add
adc
imul
rcr
mov
stos
push
imul
push
xchg
out
jns
sub
xor
in
sahf
in
out
cmpsb
ljmp
xor
sahf
mov
out
insl
push
or
xor
inc
push
cmp
pusha
fbld
aam
sbb
fcomps
jg
outsl
clc
cmp
mov
sub
inc
jnp
push
jmp
into
mov
outsl
rol
dec
je
xor
jnp
popf
in
sbb
sub
ljmp
pop
cs
sti
mov
xchg
in
cmp
loop,pn
mov
mov
ss
ja
or
xchg
mov
ss
adc
xor
aam
cmp
mov
sarb
sbb
push
adc
cltd
popf
testb
bound
dec
xchg
and
lods
push
gs
test
mov
dec
lahf
xchg
dec
inc
insl
inc
add
shlb
call
or
push
in
pushf
sbb
ljmp
add
movsb
cmp
pop
stos
out
out
lea
mov
dec
fs
cwtl
mov
cld
lcall
mov
dec
outsl
inc
inc
or
loop
sti
jge
dec
negb
std
jnp
mov
lock
lret
inc
movsb
cmp
in
add
or
std
out
mov
pusha
dec
adc
add
fwait
add
push
adc
adc
dec
inc
clc
inc
inc
mov
mov
cmc
sahf
fcoms
sub
sbb
dec
outsb
popf
lods
mov
outsl
push
cmc
loope
or
imul
imul
orb
mov
enter
push
ljmp
test
ja
cwtl
add
jo
scas
cltd
or
roll
out
dec
jmp
xchg
jne
inc
scas
pop
xor
push
sbb
pop
negl
dec
dec
xor
ficoms
ds
xchg
fxam
mov
xchg
rorb
scas
in
fsubs
sub
xchg
jmp
rolb
mov
jne
dec
adc
xchg
mov
movsl
add
pop
popa
pop
fcmovnbe
push
xchg
mov
out
pop
mov
push
jmp
dec
adc
nop
inc
sti
es
dec
shl
icebp
mov
shlb
mov
sbb
in
imul
xchg
xlat
out
cs
rcrl
pop
xchg
sub
pop
ficoml
xchg
imul
lret
mov
sbb
mov
imul
lds
mov
jne
aam
push
roll
cs
xchg
dec
sbb
lahf
pop
iret
cmp
in
movsb
mov
mov
jne
jne
push
mov
adc
sub
fidivl
sub
adc
leave
mov
sub
adc
mov
out
inc
mov
out
mov
insl
mov
inc
dec
pop
cmp
cmpsb
adc
in
adc
push
out
lea
mov
cmp
dec
pop
pop
fdivrp
push
imull
lahf
aad
movsl
stc
fldenv
push
dec
sbb
cmp
mov
das
add
mov
popf
adc
mov
inc
sbb
cs
add
xor
les
fs
push
xchg
mov
sub
sub
sub
sub
mov
insl
and
push
fcomp
and
push
xchg
out
xor
jo
imul
sbb
lds
outsb
in
lods
adc
std
and
dec
adc
jle
jle
add
inc
mov
daa
jl
daa
or
and
mov
js
add
sub
dec
fisubrl
iret
ja
imul
cmp
lahf
scas
repz
sbb
add
sahf
adc
or
jp
es
call
add
test
xchg
fisubrl
or
mov
outsl
inc
stc
sbb
enter
push
js
xchg
inc
mov
mov
jnp
out
jmp
movsl
xchg
iret
xchg
test
cmp
xlat
cmpsb
dec
xor
daa
xchg
xchg
int3
xchg
adcb
dec
cmc
push
mov
dec
movsb
mov
call
sbb
dec
andl
fs
xchg
sbb
sahf
lret
test
jle
pop
fnstsw
je
cmp
jl
sti
inc
pop
out
lea
adc
adc
adc
jbe
addl
movsb
lods
xor
push
das
pop
inc
loopne
push
loop
gs
aas
leave
xchg
inc
mov
push
and
stos
fiadds
pop
sti
sub
jg
loopne
call
mov
rorl
loopne
or
mov
cmp
cs
cmp
jb
cmp
data16
fs
mov
push
insl
dec
dec
stos
sub
add
dec
jle
int3
xlat
add
inc
das
loope
push
aaa
loop
jecxz
lock
imul
pop
ret
test
dec
adc
clc
xchg
jae
dec
xor
fldcw
cmp
fdiv
icebp
pushf
sub
in
ljmp
or
mov
data16
cmpsb
fmuls
ljmp
cli
jle
lea
stos
jecxz
cmp
testb
in
popa
or
das
cmp
ret
pop
jbe
adc
in
pushl
xchg
sti
push
sub
ret
ljmp
imul
repz
xchg
cld
stos
imul
aam
rcr
fldt
xor
mov
push
mov
or
xchg
mov
sti
call
insb
cld
sbbl
leave
lock
aad
repz
fiaddl
push
push
insb
sahf
push
xchg
ret
scas
movsb
scas
push
ficomps
into
mov
mov
or
mov
data16
repnz
adc
jnp
cmp
xchg
jp
sub
sbb
inc
insb
jecxz
test
cmc
stc
fisttps
fldln2
mov
xor
xchg
xor
xchg
jno
and
iret
shlb
add
mov
cwtl
or
jnp
jl
aad
xlat
daa
push
lea
lret
ficomps
pop
add
inc
xorl
cmpsb
dec
std
inc
xchg
sahf
mov
push
jle
mov
mov
aad
jae
gs
repz
cmpl
repnz
push
ss
push
mov
or
jl
push
jns
into
dec
mov
ficoml
push
cmp
fnstcw
cmp
mov
mov
inc
addl
cmpsb
xor
mov
and
dec
aas
inc
adc
leave
xor
inc
jno
sbb
sbb
sbb
cmp
arpl
mov
inc
sbb
cli
dec
push
fs
xor
and
out
cli
cwtl
fs
out
jb
mov
aad
movsb
aad
mov
dec
pushf
pop
and
in
xlat
mov
fstpl
mov
nop
pop
test
popl
sbb
jbe
jp
andl
fistpll
jno
aas
jns
xchg
push
imul
xchg
or
sub
rcl
in
pop
cmpsl
or
jge
ss
mov
cmp
flds
pop
adc
jb
sub
stos
aam
mov
xor
mov
hlt
pop
push
and
mov
push
jnp
cmp
les
push
cs
fs
stos
sub
jno
fwait
xchg
jns
add
xor
xchg
sahf
in
pop
std
lret
push
icebp
aad
pop
cmp
aad
push
or
pop
pusha
pushf
stc
popa
pop
lods
dec
pop
test
cs
xlat
sub
gs
std
divb
mov
gs
mov
test
sub
mov
xor
and
xchg
xchg
mov
call
aas
dec
popf
in
and
ficompl
xor
or
dec
pop
push
loopne
ja
outsb
sbb
push
in
lahf
out
enter
xchg
xor
adc
mov
imul
push
jbe
scas
movsb
jb
xor
mov
aaa
cwtl
jmp
xor
mov
test
xchg
sbb
mov
and
pusha
dec
je
pop
or
idivb
mov
sub
push
mov
sahf
movsb
stc
sub
rcrb
dec
or
lahf
bound
push
lods
ss
pop
insl
scas
hlt
mov
sub
pop
adc
call
rcl
pop
mov
test
adc
adc
test
cmp
pop
dec
gs
clc
ret
and
cmpsb
stos
cmp
xlat
or
lds
fsubs
dec
loopne
xchg
aas
or
jmp
subl
cli
and
out
daa
push
pushf
les
ja
dec
xor
jnp
les
das
bound
lock
cmp
xor
xchg
xchg
dec
adc
xor
into
das
fstpt
ret
stos
mov
into
mov
ret
mov
jg
ds
cs
pop
inc
das
cmp
cmp
shrb
pushf
cli
dec
mov
mov
cs
adc
xchg
xor
mov
sub
sub
pop
mov
xchg
mov
jnp
adc
sbb
cmp
je
divl
jno,pt
jae
loopne
push
lcall
xor
mov
inc
ja
push
daa
and
pop
insl
jne
fisttpl
aad
cs
notb
jns
xchg
and
movsb
mov
shlb
hlt
fs
push
or
jp
ret
sub
aas
repnz
jae
rcl
jle
push
lahf
fsubl
idivl
xor
cmp
neg
loopne
aas
fbstp
sbb
fldt
jecxz
decb
jns
adc
mov
xchg
adc
lret
lret
add
jle
mov
mov
jg
cmp
rcrl
pop
ret
adcl
sbb
push
leave
push
lahf
inc
clc
pop
out
mov
sbb
lahf
mov
xchg
loope
or
jae
std
loopne
in
mulb
es
rcrb
dec
jno
repz
push
xchg
inc
std
hlt
pop
jb
cs
add
jmp
nop
movntps
or
sbb
je
dec
insl
push
bound
in
movsl
jbe
dec
dec
sbb
inc
aad
aad
std
or
or
push
loope
scas
jmp
out
push
lods
jmp
dec
ljmp
fildl
nop
add
jg
aas
adc
adc
into
inc
sbb
mov
sbb
shl
es
test
cmp
sahf
cmp
push
mov
and
in
inc
add
sarb
jp
xor
jmp
fs
jbe
cmp
iret
sbb
shlb
bound
xlat
xor
sub
sahf
int3
add
inc
push
shll
adc
xchg
mov
adc
push
data16
inc
insb
adc
in
sbb
cmc
sbb
mov
or
testb
pusha
orl
loop
xorb
fstpl
jge
imul
clc
sub
or
xchg
in
orb
inc
mov
dec
jp
or
lods
jl
fucomip
rcl
cmp
adc
imul
andl
movsl
or
pusha
cmp
xor
and
sahf
mov
mov
lods
ja
adc
fnstenv
movsl
jae
std
pop
imul
cwtl
mov
scas
in
lret
int
aam
or
add
jbe
imull
and
aam
xchg
gs
lret
cmp
cmpsb
in
xor
mov
in
int3
cmp
or
in
inc
std
addr16
rcll
jae
or
xchg
aaa
out
leave
push
loop
or
fbld
sub
scas
out
xchg
lods
fistpll
lods
mov
arpl
das
dec
lock
sbb
fnop
ficoms
lds
call
sbb
jns
rorb
jp
aam
or
dec
xchg
out
jbe
hlt
into
les
or
scas
dec
mov
dec
push
bound
repz
jae
mov
xor
inc
xor
cmp
and
jmp
pop
xchg
out
les
mov
or
sbb
stc
lods
jg
push
into
sti
sbb
out
mov
inc
xor
cmp
dec
mov
and
add
das
insl
pop
mov
lock
cs
data16
lcall
leave
and
scas
jne
negl
fnstenv
loope
fcoms
pop
repnz
cmp
push
in
inc
inc
stos
inc
or
and
cmc
jnp
push
aas
movsl
lcall
inc
push
xchg
jae
lds
dec
imul
ret
inc
inc
dec
or
ljmp
mov
scas
hlt
stc
add
scas
popa
sbb
jmp
and
cmc
sub
inc
mov
add
mov
fidivrs
or
mov
jo
inc
repz
push
inc
cmovl
mov
cwtl
jbe
ret
dec
xor
xchg
and
mov
push
push
or
clc
xor
popf
sti
jp
cmp
xlat
into
fstps
arpl
xor
cmc
push
jecxz
movsl
pminsw
sbb
popa
ret
push
push
insb
es
sbb
sbb
mov
dec
subb
test
ja
xor
inc
loopne
outsl
push
inc
dec
ja
add
jmp
cmp
jecxz
scas
mov
aad
inc
dec
adc
dec
lret
cmp
pop
addb
dec
insb
daa
mov
lea
test
mov
inc
mov
and
mov
xlat
aaa
shrl
adc
rcl
xchg
xchg
aaa
lcall
test
dec
adc
or
lahf
aam
ret
xchg
pushl
nop
sub
mov
push
sti
lods
xor
insl
push
insl
push
cmp
lods
sti
mov
inc
mov
lods
test
in
jns
ljmp
lea
fstl
icebp
jae
lea
cmpsl
out
mov
xor
lret
push
shrb
mov
and
jne
out
outsl
xchg
pop
test
inc
repz
call
and
lock
fdivrl
mov
pop
xchg
push
inc
inc
sbb
xchg
lret
sub
push
push
push
add
lods
bound
mov
jmp
cmp
scas
jmp
cwtl
cmp
pop
out
lods
mov
xor
rorb
sahf
int3
arpl
addr16
add
sarb
js
enter
imul
aas
imul
mov
ss
sbb
push
cmp
xchg
pop
adc
inc
lods
movsl
shr
mov
or
arpl
jge
mov
push
mov
int
lcall
pop
ja
daa
ret
xchg
or
xchg
cmp
mov
sti
ljmp
xor
xchg
js
adc
sub
mov
sub
lods
lock
add
inc
jecxz
sbb
xor
mov
mov
sub
movb
push
dec
push
dec
xchg
aas
rcrb
fs
xor
insl
cmpsb
ds
imul
xchg
outsb
adc
xlat
adc
mov
fwait
sub
scas
add
ljmp
fwait
loopne
dec
mov
dec
cmp
bound
dec
push
mov
mov
lods
inc
out
pop
mov
shlb
cmp
gs
scas
dec
xchg
mov
dec
xchg
test
adc
lods
jo
pop
out
add
pop
sbb
sub
inc
cltd
jge
test
out
in
dec
mov
scas
jecxz
mov
shrl
notb
cli
es
ljmp
push
pop
mov
rorl
outsb
xor
mov
inc
xchg
call
test
mov
sbb
imul
or
push
and
jg
jnp
jb
call
mov
push
test
xor
inc
pusha
mov
or
sbb
mov
and
xor
loop
scas
xchg
dec
addb
pop
aaa
xchg
popf
push
int
in
jg
fsubrp
loope
xor
popf
inc
cmp
jg
fmuls
hlt
push
mov
pop
icebp
inc
inc
incb
clc
les
dec
mov
sub
dec
cs
jp
fwait
sbb
or
movsl
cli
lret
rolb
fnstenv
jmp
test
mov
sbb
int
pop
imul
add
mov
sbb
or
or
lret
inc
sbb
scas
ss
outsl
jns
cli
and
mov
xor
push
in
std
movl
cmp
imul
loop
out
sbb
cwtl
clc
icebp
iret
testb
sbb
stos
dec
shr
push
push
popa
loopne
push
repnz
mov
in
orb
rcr
pop
lret
in
fidivs
insl
pop
mov
xchg
jae
pop
pop
xor
xor
xchg
incb
xlat
push
ss
sub
dec
das
sub
fbstp
inc
jp
lret
lods
scas
mov
inc
mov
and
push
testl
ret
cmc
ds
jns
rclb
sub
inc
arpl
cli
hlt
fadds
fisubrs
adc
push
jno
cmp
adc
xchg
fsubrl
pop
pop
cmp
xchg
das
jbe
lret
mov
ss
xor
nop
push
sbb
lcall
pop
push
imul
xlat
inc
jnp
jecxz
mov
cltd
mov
fdivrl
mov
repnz
mov
js
psubb
dec
cmc
aas
pusha
outsb
sbb
imul
add
sub
test
sti
xchg
cmpsb
test
ljmp
lods
jns
fsubrl
inc
sub
out
sahf
sti
cld
movsl
jg
mov
mov
inc
cli
rorl
pusha
je
push
xor
lds
push
add
iret
xor
cltd
pop
lea
pusha
cmp
sti
pop
lahf
imul
popf
push
mov
add
pop
pop
fsubrs
nop
mov
mov
xchg
push
out
das
jb
ss
das
or
adc
or
adc
in
sahf
pop
mov
cmpsl
add
or
push
cltd
paddd
ret
adc
adc
sbb
mov
scas
or
push
adc
imulb
mov
jecxz
push
inc
jle
mov
xchg
jl
or
shll
pop
outsb
and
lret
enter
xor
das
mov
mov
adc
mov
xchg
mov
xor
add
cmp
xchg
repnz
xchg
lods
pop
or
dec
mov
jns
mov
in
jbe
inc
inc
or
lret
out
adc
pop
outsb
bound
xchg
or
mov
jne
popf
fnclex
nop
mov
imul
icebp
ss
or
scas
aas
shrl
nop
cld
insb
cltd
stc
add
inc
sub
sbb
adc
mov
and
xchg
jge
jbe
mov
ja
mov
fwait
sbbb
sub
loopne
dec
inc
jmp
pusha
out
mov
in
lods
cmp
cmp
pop
orl
imul
dec
cs
dec
sub
iret
jp
jne
shlb
hlt
cmp
xorb
sti
or
popa
cmp
cmp
or
dec
inc
lcall
and
insl
in
ret
mov
mov
push
addr16
xlat
repz
push
inc
and
insl
inc
push
and
mov
push
clc
push
cltd
clc
cmp
mov
adc
ficoml
add
gs
push
cmpl
pop
jns
cli
out
in
mov
cltd
movsl
and
cmc
cmc
push
iret
dec
sub
xchg
add
mov
dec
sbb
jmp
fiadds
and
mov
repz
jmp
gs
mov
add
pop
sub
repnz
lock
jae
ror
imul
mov
and
imul
jo
stos
cmp
lahf
movsb
cmp
jae
loop
movsl
inc
ljmp
pop
imul
push
mov
jae
jnp
xor
adc
out
rorl
dec
xor
out
mov
pop
sbb
xchg
rcrb
lock
jbe
data16
cmp
add
fs
xchg
es
imul
cmp
out
push
call
add
push
mov
sub
lret
xor
loope
jnp
adc
xchg
or
es
adc
clc
sarl
xor
pop
xchg
sbb
cmp
fldenv
pushf
mov
bound
mov
shrb
std
inc
mov
jae
xor
xor
popf
shlb
xadd
jne
dec
adc
mov
xchg
js
testl
cmpsl
adc
jge
popf
xchg
enter
sub
fisubl
or
into
and
mov
mov
nop
xor
ja
cmp
bound
stos
arpl
aas
insl
shr
adc
or
xchg
arpl
cltd
fst
jmp
inc
jae
mov
fs
add
push
xor
es
data16
cmp
into
mov
push
sub
rcrb
outsl
adcl
sti
dec
sbb
mov
insl
lea
insb
mov
jbe
inc
outsl
jno
movsl
decb
inc
adc
popf
mov
inc
movsb
addr16
outsl
and
shlb
xor
in
adc
xchg
or
and
bound
mov
fsubs
dec
je
sti
imul
fsub
push
bound
stc
fildl
in
aaa
jle
and
fisttps
adc
gs
std
arpl
mov
sub
fstpl
aas
push
sbb
inc
cld
inc
int3
pop
shll
pop
mov
and
filds
xlat
sub
repnz
imul
add
daa
cli
in
mov
aad
mov
lret
xor
and
outsl
pop
push
mov
inc
inc
call
mov
xchg
ret
popf
mov
enter
sbbb
inc
mov
add
out
dec
lahf
ja
fadds
jge
inc
neg
stos
mov
mov
jo
icebp
iret
sub
roll
leave
enter
aaa
inc
fwait
clc
das
sbb
and
aas
sarl
mov
and
mov
cwtl
pushf
adc
add
sub
popf
popa
jnp
cs
xchg
sub
cmp
sub
in
lahf
sub
add
sbb
push
and
in
and
subb
outsb
ljmp
int3
hlt
mov
add
prefetch
inc
lods
rcll
add
add
arpl
mov
repz
lcall
fisubrs
ret
mov
adc
js
lret
lret
jl
jmp
ficoml
inc
jecxz
push
sbb
movsl
push
lcall
movl
adc
sbb
push
aas
lret
sbb
mov
cmp
loop
into
mov
mov
cs
je
mov
adc
neg
and
jmp
rcr
jno
popa
in
sahf
or
stos
hlt
and
jmp
psrld
sti
or
and
lret
push
or
sbb
sub
dec
xor
in
mov
sbb
nop
in
scas
imul
inc
mov
pusha
mov
xchg
mov
sub
dec
or
cmp
loop
pushf
mov
ret
jb
loope
pop
loop
out
dec
test
adc
push
adc
iret
sub
cmp
or
loopne
cmc
pop
aaa
idivl
push
xchg
jmp
out
in
jno
out
xor
mov
fnstcw
sbb
mov
pop
stos
push
clc
add
inc
roll
jg
aad
repz
into
imul
sub
rcrb
into
pop
add
fldl
gs
insl
fcmovne
push
dec
in
inc
mov
bound
scas
adc
push
cmpsl
popf
mov
add
pop
clc
jnp
dec
ret
aam
sbb
adc
pop
loope
push
push
dec
cmp
and
xor
incl
sahf
adc
bound
jge
in
int3
push
pop
jo
xchg
add
mov
mov
sbb
or
loope
pop
adc
lea
jge
xchg
lmsw
adc
negl
inc
push
inc
int3
push
repz
inc
pushf
mov
dec
mov
push
sub
dec
add
mov
cmp
xor
mov
test
adc
cmp
dec
mov
push
mov
mov
loop
jp
dec
inc
scas
adc
jmp
gs
jp
and
add
out
cmc
in
xlat
int3
ljmp
fidivs
les
push
cmp
and
xor
or
xchg
pop
fdivrs
push
gs
mov
sub
repnz
mov
popl
aas
je
jb
pop
jno
hlt
das
pop
jp
aam
mov
add
lret
adc
dec
pop
daa
test
inc
sbb
js
jns
insb
nop
bnd
nop
sbb
ja
enter
cmovne
enter
mov
push
fsub
jo
cs
jge
lock
scas
xchg
int
inc
cmp
pop
pop
fidivs
in
fisubs
xchg
push
sub
pop
aad
xlat
loope
jne
shlb
mov
pop
dec
sbb
loopne
out
lds
lret
push
ja
rorl
mov
aam
pop
int3
mov
adcl
shll
cld
ret
adc
mov
les
jge
test
es
popa
push
cmpsl
idiv
mov
xor
xchg
add
data16
test
pop
push
and
jb
bound
in
int3
cmp
jne
clc
push
cmpb
pusha
stc
add
rclb
push
cmpb
cltd
xchg
dec
ss
pop
mov
inc
lds
push
push
push
xchg
inc
mov
push
mov
popf
pop
lcall
sub
dec
mov
cltd
cmpsb
xchg
imull
or
int
js
out
push
leave
not
push
mov
pusha
shll
fistl
mov
add
cmp
cmp
es
push
in
add
int3
into
fildll
and
pop
fs
sbb
sub
xor
add
aad
fisttps
jne
sub
ret
test
test
or
iret
in
mov
push
pop
orb
xchg
sub
dec
add
int
pop
mov
dec
mov
mov
dec
cltd
pusha
mov
aas
xor
div
push
mov
in
stos
or
adc
pop
sahf
xor
lock
imul
scas
push
rcrb
insl
add
jg
cs
pushf
imul
push
fsubrs
andb
stos
adc
jge
mov
xor
sahf
push
scas
out
mov
std
add
xorb
sbb
inc
sub
sti
mov
aas
jns
jae
pop
lcall
imul
inc
imul
and
cmpsb
mov
mov
sti
mov
push
inc
xchg
jmp
outsb
iret
les
mov
mov
xchg
and
push
mov
add
sub
inc
mov
rcl
push
ja
fiadds
and
pop
mov
push
push
add
dec
mov
pop
sbb
pop
imul
adc
push
lods
std
cmp
fisttps
insl
jnp
imul
cmpsb
cmp
aas
mov
or
lcall
xorl
dec
mov
sub
sbb
mov
scas
xchg
and
mov
cmpsl
aam
in
push
sar
or
imul
adc
pop
pusha
push
xchg
cli
icebp
lret
push
add
sbb
jbe
mov
jbe
daa
xor
gs
outsl
aam
sub
jge
push
notb
xchg
mov
popf
out
push
pop
mov
mov
daa
lcall
mov
adc
fisttps
adc
stc
sti
xor
sbb
push
imul
xchg
iret
xchg
add
jbe
pop
cmp
stos
cmpb
pushf
or
mov
pop
sbb
aaa
ljmp
inc
push
fcoml
pop
inc
popa
xlat
mov
out
dec
pop
insb
popf
dec
mov
arpl
push
mov
hlt
cmpsb
aam
pop
pop
insb
fs
hlt
icebp
lret
inc
test
out
push
lret
inc
shll
aam
inc
test
push
in
xor
xor
mov
jl
gs
in
xchg
aad
mov
jno
xchg
jae
push
mov
xor
pop
mov
ljmp
adc
push
mov
or
std
fs
pop
fs
aaa
imul
mov
fdiv
int
in
int3
fldcw
add
dec
cli
fimull
sar
iret
or
fiadds
popf
push
push
adc
sub
mov
call
and
inc
jge
dec
imul
movsl
mov
insl
sub
push
in
loop
xor
add
jl
mov
push
mov
xchg
inc
shll
movsb
dec
sti
pop
rcrl
add
clc
std
adc
das
cmp
call
out
add
jmp
addr16
inc
cmc
data16
or
imul
pushf
fwait
or
jecxz
mov
je
sti
cmp
mov
or
out
notb
or
std
mov
rolb
mov
pop
imul
pop
push
mov
call
xchg
fbstp
jmp
jnp
add
fistps
loopne
cmp
lret
in
lods
xchg
sub
or
jbe
mov
cmc
lret
and
dec
sbbl
mov
xchg
or
ret
shrb
cmp
lea
xor
scas
js
ret
xchg
xor
pop
rol
jl
test
mov
xchg
xchg
xchg
mov
mov
and
fldt
dec
lock
hlt
fcomp
out
fs
push
add
and
pop
cmc
jle
cwtl
std
jecxz
das
imull
sub
lock
leave
mov
cltd
mov
push
push
mov
jge
mov
and
fwait
lock
and
xlat
out
mov
xor
add
push
fcompl
dec
iret
adc
mov
stos
pop
shl
pop
jno
pusha
nop
and
xchg
mov
inc
mov
xlat
imul
outsb
and
mov
mov
pop
mov
mov
mov
mov
cmp
push
mov
mov
inc
push
test
outsb
cwtl
jae
and
test
and
mov
ljmp
call
mov
fidivl
jl
inc
stos
inc
push
shlb
call
ficoml
mov
fisubrl
hlt
cmp
fstl
adc
inc
sub
xchg
fldl
scas
ret
hlt
jae
inc
les
mov
mov
jp
xor
icebp
iret
test
sub
mov
or
mov
popf
inc
gs
mov
adc
lcall
icebp
sub
sbb
pop
cmp
sarb
or
pop
jo
inc
jmp
imul
dec
aam
push
or
sbb
cmpl
cmc
xchg
mov
push
and
xor
out
and
inc
xor
and
stos
popl
pop
pushf
ja
movsb
sub
aas
shll
daa
dec
mov
test
leave
imul
in
lret
xor
push
adc
popf
mov
sub
ja
mov
lcall
inc
push
add
cltd
or
add
mov
loope
sub
mov
outsl
std
cmp
dec
scas
mov
iret
push
adc
pop
sub
xchg
lods
adc
andb
pop
loop
mov
mov
xor
in
xchg
dec
dec
out
ljmp
pop
cltd
xchg
add
rclb
mov
push
jecxz
int3
sub
jae
icebp
mov
pop
xchg
loop
sar
and
inc
movl
cmp
fs
sbb
icebp
arpl
std
dec
or
sub
and
rolb
jle
mov
push
mov
sbb
push
xchg
xor
or
in
iret
clc
call
in
jo
test
xlat
stc
orl
fistl
pop
faddl
in
push
fdivrl
sahf
addr16
xchg
es
add
adc
aam
pop
in
movsl
cli
rorl
push
or
lret
adc
cmp
push
push
dec
sbb
mov
ljmp
pop
xor
cmp
mov
and
push
mov
sub
xlat
push
loope
loopne
rolb
stos
int
or
push
scas
cli
xor
pop
fidivs
push
lret
push
add
mov
add
out
insb
pop
lock
or
push
dec
insb
pop
jmp
xor
lret
clc
xchg
mov
dec
push
jb
dec
sub
mov
je
sub
dec
iret
adc
sub
and
fldt
fmuls
xchg
push
pop
iret
or
pop
hlt
repz
mov
push
adc
and
daa
and
sti
adc
lods
lods
call
ficompl
lods
insb
xor
jb
loope
stos
test
push
cmc
add
xchg
shr
insb
jle
or
xor
pop
dec
mov
sub
out
outsl
and
and
movsl
lds
stc
pop
lds
lret
aaa
mov
xchg
mov
push
adc
xlat
or
cld
xchg
sub
ljmp
sahf
jmp
cld
push
adc
xchg
popa
sub
icebp
add
mov
mov
ds
rorl
lea
pusha
push
popl
sub
pop
lret
imull
push
adcl
idivl
cmpsl
mov
sbb
test
sub
cmp
cmp
hlt
lahf
shlb
mov
aaa
mov
cmp
mov
lret
je
mov
fistl
cltd
and
mov
jae
xchg
movb
insb
sbb
imul
imul
mov
loopne,pt
sub
sbb
enter
dec
pop
cmp
js
jne
icebp
or
bound
pop
test
iret
and
mov
arpl
pop
mov
xchg
stc
cmp
mov
cli
mov
sub
in
ret
scas
mov
aam
into
decl
repz
pop
add
subl
mov
in
scas
push
ret
add
xor
loope
fmulp
jbe
xor
jmp
or
movsl
and
jecxz
push
inc
push
jecxz
lcall
out
loope
xchg
push
cwtl
mov
insb
out
push
push
or
ja
dec
dec
pop
loop
dec
ja
in
ljmp
outsl
loopne
scas
lret
dec
and
add
or
insl
dec
push
and
mov
jne
mov
aas
shll
test
lahf
mov
sbb
inc
push
into
and
jecxz
fnstsw
imul
roll
mov
pop
add
roll
push
mov
jno
mov
xor
jae
push
xchg
mov
mov
xorl
jns
imulb
sbb
xchg
and
mov
stos
sub
out
mov
xchg
lcall
adc
arpl
shll
cmpsb
mov
out
daa
arpl
adc
cmpsb
aaa
pop
lcall
insb
mov
lahf
cld
xchg
ss
xor
xchg
jns
push
sub
pusha
inc
jnp
lret
jmp
pop
jno
outsl
stc
mov
loope
mov
andl
out
data16
cld
mov
jl
repnz
mov
pushf
lods
and
aaa
or
cmp
test
push
lcall
aam
negl
or
push
xor
pop
push
mov
push
ret
mov
lahf
add
pushf
into
xchg
stc
push
lods
hlt
push
pop
mov
jge,pt
addr16
sub
mov
icebp
loope
insl
aam
pusha
out
nop
sbb
sub
sbb
fistpll
mov
les
jns
stos
cltd
mov
je
jge
aam
and
sbb
sbb
mov
mov
mov
push
pop
inc
cmp
pop
ss
mov
pop
push
out
out
xor
lret
push
andb
mov
cmpsl
jle
jmp
loop
push
jne
or
fdiv
dec
in
cmp
sub
sti
subb
pushf
call
mov
cmp
mov
and
inc
push
push
adc
mov
outsb
out
sti
fwait
stc
mov
js
adc
mov
push
mov
fcom
pop
lret
aam
lahf
jo
inc
fisttpl
push
lods
sarb
xor
rcrb
jno
idivl
add
iret
divl
xor
scas
add
bound
sbb
es
and
mov
ret
sahf
js
movsl
out
adc
xchg
insl
arpl
test
xlat
or
das
xchg
jmp
lods
cs
nop
xlat
lcall
clc
mov
in
imul
je
lea
imul
cli
insb
jae
jae
adc
mov
subb
push
jmp
and
cmp
cmp
push
mov
or
in
sub
test
loop
sbb
lods
xchg
push
jg
pop
pop
jne
cmp
and
pop
movsb
jns
xor
mov
nop
stc
mov
loop
rorb
push
jecxz
std
aad
movsl
or
push
mov
stc
cs
mov
ret
cmpsl
push
aam
push
sub
jmp
or
jmp
add
ja
int
sahf
dec
push
aas
lahf
add
jmp
mov
cmp
idivb
and
xchg
mov
add
jle
loop
mov
jo
pop
pop
and
mov
incb
sub
enter
push
scas
push
fildll
mov
repnz
clc
mov
jnp
stos
jb
xchg
adc
xor
out
inc
lds
xor
outsb
imul
orb
mov
push
int3
das
jb
mov
clc
js
movsb
imul
mov
mov
ja
or
enter
xchg
addr16
mov
lock
push
xchg
mov
pop
stos
movsb
xor
push
mov
std
cmp
ret
sahf
gs
lods
sub
mov
lock
pop
xor
and
popa
push
ds
pop
inc
and
mov
aad
mov
mov
jno
xor
inc
push
xchg
outsl
mov
sub
sbb
cmc
sub
pop
lcall
shll
xchg
pop
mov
adc
and
aaa
stos
pop
cmp
fnstsw
cmp
mov
sti
je,pt
push
xlat
mov
push
sti
mov
mov
pop
push
cmpsb
dec
mov
mov
or
pop
scas
pop
xor
xchg
pop
lods
mov
cwtl
in
jno
jne
or
mov
xchg
cli
add
mov
xor
pop
icebp
fsubrs
insl
push
das
xchg
addr16
lock
or
in
push
jno
mov
cltd
mov
dec
sbb
aaa
std
mov
in
mulb
mov
movsl
ds
shll
cli
push
data16
les
mov
mov
xor
lock
test
jle
dec
xor
out
push
pop
ljmp
repz
push
ficoml
push
into
out
fisubl
sub
mov
aas
xor
cmp
cmp
into
inc
int3
jns
pop
popa
aam
pop
or
lock
push
lcall
mov
xchg
mov
mov
hlt
add
in
in
jb
orb
arpl
data16
jecxz
add
xchg
stc
cmp
in
pop
int
pop
shr
dec
stc
sub
repz
int
mulb
cmpl
fwait
loope
jnp
jg
xchg
mov
loop
rorb
or
int3
sti
dec
insb
cmp
jb
out
adc
imul
fucomip
push
pop
fiaddl
xor
lods
clc
xchg
xor
xor
negb
or
je
sub
mov
movsb
lahf
jo
fadds
cld
pop
jle
inc
pop
sub
pop
xor
jle
dec
inc
mov
lahf
mov
xchg
repnz
push
jmp
mov
jg
adcl
lds
dec
pop
cmp
dec
mov
and
cld
in
xor
call
or
xchg
cmc
jmp
icebp
aad
cmpsb
pop
stos
pusha
pusha
or
lret
cmp
fdivrs
ret
xchg
push
cs
add
cld
repnz
leave
push
pop
pop
sbb
andl
cmpsb
iret
clc
sbb
ret
pop
outsb
icebp
fnstcw
jno
fadds
inc
cmp
test
mov
adc
sbb
jno
stos
inc
das
add
test
clc
ja
sbb
xchg
stc
push
sub
push
daa
dec
dec
jmp
push
ficoms
xchg
jns
fdivl
in
mov
cmp
mov
push
cmpl
insb
stos
jecxz
cmp
sub
adc
mov
lret
insb
jne
out
add
pop
jae
lock
lcall
in
xchg
jecxz
or
jge
mov
cwtl
decb
and
fisubs
adc
push
orb
cli
test
pusha
mov
push
add
std
cmc
jg
pop
aaa
mov
push
in
divb
or
test
mov
dec
or
dec
setae
scas
or
mov
lret
aas
jle
mov
jo
int
xchg
inc
aam
sahf
sbbb
movsb
lea
mov
adc
mov
incb
stos
or
dec
and
pop
or
xchg
inc
testl
jae
push
adc
and
arpl
pop
or
stos
cmp
pop
jne
ja
mov
xchg
cs
loop
push
cmp
cmc
lock
mov
or
adc
adc
daa
cmp
mov
push
sysret
mov
mov
subl
sub
jle
mov
sti
cmp
addr16
and
in
push
or
xchg
jnp
fsubs
popf
sbb
sbb
push
jecxz
xchg
pop
shlb
sub
mov
jmp
or
jmp
push
mov
mov
add
mov
sub
ja
aas
flds
sub
mov
push
and
enter
vunpckhps
addr16
outsb
test
insl
es
repnz
cld
inc
jl
inc
rcl
out
ret
xor
cmpl
xor
daa
mov
xor
xor
inc
imul
fwait
iret
inc
pop
inc
push
mov
aas
inc
outsb
test
push
repnz
jl
push
cmp
mov
and
inc
sub
jae
daa
pop
adc
mov
cli
int3
xor
lock
lret
pusha
in
sub
or
sub
negb
xor
jb
cmp
mov
nop
lods
sbb
push
push
add
and
imul
cmpsl
sahf
loope
bound
std
lock
pop
add
add
pop
jae
call
lds
mov
sub
add
stc
mov
add
push
inc
incl
jecxz
std
jp
cmpsl
out
mov
dec
inc
imul
mov
in
push
lcall
mov
push
mov
xor
xchg
cmpl
cmc
out
es
inc
stc
aam
arpl
mov
inc
and
jg
add
mov
jmp
push
ljmp
xchg
in
dec
jp
xchg
mov
ds
cmp
mov
bound
jo
test
pop
pusha
fwait
nop
sub
outsl
ret
or
or
lret
push
test
and
lret
cmpsb
data16
or
lcall
push
lea
fisttpll
push
shrb
and
shrb
ds
xchg
and
sub
cmp
pop
sbb
andb
cmp
lods
xchg
or
pushf
mov
push
xchg
rorl
test
roll
in
pop
cmp
scas
fwait
push
xchg
ljmp
mov
adc
mov
pop
in
aas
pop
subb
out
dec
add
xchg
movsb
mov
addr16
mov
sub
out
scas
fstl
imul
and
hlt
pop
into
bound
adc
mov
notl
jmp
push
jecxz
inc
pushf
jnp
pop
xorl
cmpsb
pop
ja
add
cmp
pop
pop
repz
test
sbb
mov
cmp
outsb
sti
add
xor
daa
mov
sub
in
bound
inc
fcoms
pop
decl
mov
hlt
scas
add
ret
or
mov
aaa
ds
jbe
mov
lock
pop
dec
andb
mov
push
cli
add
out
xlat
or
cmpsl
adc
outsb
js
jp
andb
sbb
std
cwtl
jb
sub
fmull
sahf
out
push
fsubrp
gs
sub
jb
lea
lret
call
pop
push
cltd
daa
mov
test
mov
repz
mov
jae
imul
out
mov
cmp
cmp
pop
sub
mov
popa
mov
or
cmp
mov
in
pop
sbb
fimull
popa
and
dec
xor
in
sub
icebp
add
fsubs
lcall
push
pushf
mov
subl
jp
insb
nop
cmc
pop
aas
dec
daa
xchg
jnp
test
jg
push
push
jecxz
roll
mov
xlat
popf
mov
fistpll
les
push
fistps
js
dec
shlb
cmp
and
lea
cmp
jg
push
inc
mov
mov
pop
aaa
push
dec
cwtl
push
shlb
dec
xor
adc
cmpsl
out
sub
std
add
roll
push
shlb
pop
sbb
and
loope
shl
pop
jmp
inc
imul
movsl
loope
icebp
sub
mov
add
insl
fisubrs
sbbl
addr16
lods
xchg
out
jmp
ret
and
pop
cmp
movsl
mov
pop
mov
movsb
adc
inc
aam
pop
xchg
pop
xchg
and
lock
paddusb
iret
jb
inc
aad
scas
sub
add
lcall
pop
cmp
fildl
movq
push
mulb
icebp
scas
icebp
mov
push
nop
xchg
lahf
mov
adc
test
outsb
ss
les
push
inc
adc
outsb
ja
sub
or
notb
dec
pop
dec
and
xor
pop
fstsw
int3
inc
lcall
out
pop
mov
jp
insl
out
sbb
outsb
inc
mov
orl
pop
pushf
aas
fisttpl
pop
ja
stos
mov
pop
mov
test
out
or
cs
in
xchg
loope
mov
imul
push
mov
in
call
les
lock
jle
adc
push
mov
aas
lock
sahf
xchg
jb
stc
in
pop
fwait
movsb
ss
mov
shrl
push
lods
and
xchg
lods
pop
js
loope
push
imul
inc
arpl
pusha
push
and
inc
mov
in
cmp
mov
mov
arpl
aaa
add
addb
push
mov
movsl
mov
pop
or
cmp
or
mov
lea
in
insb
aaa
rol
cmp
fs
jle
push
js
jg
mov
mov
dec
mov
fiaddl
mov
sub
test
xor
sub
add
subb
mov
ret
aas
cwtl
xchg
sub
cs
aad
psubsw
xor
add
xchg
ror
add
dec
or
orb
ret
pop
dec
cmp
pop
mov
nop
call
mov
xchg
lret
mov
sbb
std
mov
shll
and
in
xchg
add
xchg
add
stc
jns
or
mov
pop
mov
push
int3
scas
test
popf
xchg
les
scas
in
mov
cmp
or
loope
and
jne
jl
jg
lret
or
jmp
enter
ret
mov
sub
push
adc
dec
cmp
pop
lcall
mov
addb
ret
in
mov
popa
jle
xchg
hlt
mov
xchg
adc
cltd
sar
in
fwait
sbb
sub
and
cmp
jne
cmpsb
xor
xor
cwtl
cmp
mov
inc
test
jns
js
jp
clc
cmp
sub
lcall
add
xor
inc
xchg
dec
flds
push
pop
dec
lods
fdiv
mov
mov
mov
test
decb
out
jg
roll
dec
sbb
iret
xchg
in
shll
dec
xlat
xchg
daa
push
clc
es
stos
adc
lret
loopne
jp
xor
aas
test
insl
lods
ret
adc
mov
dec
pop
sbbl
pop
imul
pushf
adc
xor
rclb
mov
or
idivl
dec
cmpsb
mov
shll
movsb
add
mov
iret
ss
movsb
imul
dec
cmp
cmc
or
pop
sarl
jo
out
dec
xor
lods
push
jmp
inc
outsl
adc
subl
outsl
and
xor
mov
sbb
sti
push
mov
mov
inc
add
test
xchg
cmp
in
cli
add
or
bnd
cmp
xor
cmovae
jne
mov
cmp
mov
lret
and
cmpsb
ret
test
dec
pop
aaa
int
enter
jo
insl
push
jmp
or
xchg
sub
mov
nop
xor
nop
loopne
cld
test
push
sub
push
add
mov
cld
push
inc
xchg
sub
rorl
fdivl
sbb
or
inc
push
jge
cmp
mov
inc
jg
pop
hlt
mov
inc
sub
xchg
mov
sub
dec
mov
or
std
push
sbb
outsb
jno
push
stos
inc
adc
sbb
fistpll
lock
fidivrs
rcrl
stos
mov
mov
push
cmpsl
in
mov
scas
scas
rcll
out
inc
jmp
sub
enter
scas
lock
mov
pushf
jge
in
mov
outsb
xchg
movsl
and
outsl
push
inc
jl
adc
pop
cmp
call
call
sub
dec
xor
shll
jns
dec
xchg
and
lahf
mov
in
mov
std
loope
cmp
xor
lret
xchg
xor
dec
jge
push
cltd
stc
mov
cltd
sar
fldenv
and
sub
sub
xor
jg
cmp
nop
cmp
push
out
mov
aaa
adc
out
xor
sbb
adc
test
and
rcrb
push
pop
sbb
int
adc
data16
xor
loopne
add
inc
adc
mov
cmpl
mov
cmpsl
test
jb
xchg
rol
pop
shr
push
lcall
shr
cmp
rcrl
and
inc
push
iret
sbb
add
ds
data16
jecxz
sarb
or
push
push
jp
cwtl
andl
aam
xor
add
lcall
xchg
jo
push
jp
mov
xor
pusha
sub
pusha
mov
hlt
or
push
test
mov
pop
cli
mov
or
ja
fnsave
adc
sub
pop
mov
popa
dec
aaa
es
add
ds
dec
push
cwtl
jecxz
fwait
out
fs
mov
pop
outsb
mov
in
fadds
cld
int
jae
movsb
in
push
dec
mov
push
sub
jle
adc
in
f2xm1
or
aas
xchg
pushf
push
mov
fs
xlat
je
ja
mov
test
fldt
lods
adc
cmp
rcrl
add
push
rclb
adc
xor
cli
inc
js
mov
sbb
dec
in
sub
sub
mov
insb
jg
xor
mov
repnz
test
pusha
std
mov
lret
sbb
sbb
mov
push
negb
mov
imulb
mov
sub
aas
push
int3
mov
push
add
lcall
pop
or
gs
dec
and
push
clc
stos
push
data16
push
inc
mov
fsubs
jnp
cmp
xchg
add
or
mov
xchg
or
sub
adc
add
or
frstor
mov
out
daa
cmc
mov
inc
fldcw
aas
lods
out
cmc
sbb
sbb
cmpsb
enter
jbe
imul
xor
arpl
mov
or
mov
je
nop
xchg
mov
xorl
cmpsl
loope
and
std
sbb
int3
pop
jge
dec
clc
lahf
pop
in
and
pop
lahf
push
xor
sub
pmulhuw
jae
xchg
lcall
out
fdivl
pop
fs
cwtl
out
ljmp
je
test
dec
xor
jg
pmulhw
xchg
insl
pop
scas
push
cmp
pop
dec
jae
mov
and
ret
stos
xor
push
cli
test
dec
and
out
push
mov
jmp
je
test
stos
push
sbb
sub
push
sub
shll
mov
cmpsb
dec
clc
outsb
adc
adc
imul
xor
sub
xor
jge
sub
sahf
push
push
jmp
bnd
subl
xchg
dec
popa
flds
sbb
mov
test
insl
xlat
shlb
mov
nop
add
adc
mov
pushf
dec
add
sbb
aam
mov
cmpsb
xchg
inc
test
jmp
or
mov
mov
and
fwait
ds
loop
sub
enter
sub
xchg
icebp
ret
in
inc
mov
pop
cmpsl
out
xlat
adc
outsb
sbb
movsl
outsb
push
and
cld
xor
fdivs
fwait
mov
scas
repz
jb
mov
push
xor
sqrtps
mov
adc
cwtl
xor
add
js
lret
pop
adc
or
daa
mov
xchg
xor
insl
mov
call
sbb
lds
inc
daa
rclb
xor
push
sbb
cmp
pop
lret
cmp
imul
xchg
or
cltd
cmp
xchg
adc
jnp
in
loop
cmp
cmp
pop
fcomps
addb
mov
in
cmp
add
loop
aas
out
or
jne
pop
mov
or
cmp
dec
divb
pop
add
lock
push
lods
pop
and
mov
push
movsl
mov
lcall
jbe
out
adc
push
mov
mov
jp
pop
shll
jo
pop
sbb
fisubrl
mov
mov
sbb
stc
mov
test
xor
int
sub
ss
cmp
inc
rorl
push
mov
cmp
sarb
push
inc
inc
daa
push
fcom
and
mov
xlat
jmp
ja
mov
int
cmpsl
add
dec
inc
dec
testl
pop
hlt
mov
xchg
pop
adc
dec
adc
in
loop
or
cmc
inc
adc
mov
mov
sub
or
push
dec
and
mov
loope
outsl
xchg
fdivr
leave
push
add
add
retw
cmp
enter
nop
test
add
loope
pop
jb
xor
push
out
in
inc
add
ret
cmp
and
je
xorb
cmc
enter
add
cs
insb
testl
sbb
lods
sbb
mov
lahf
in
hlt
addl
and
cwtl
cmpsb
les
push
xorb
add
jle
in
sub
scas
pop
fcomps
repz
push
daa
mov
mov
jle
push
dec
or
mov
xlat
arpl
xor
mov
push
filds
ljmp
cmp
jnp
fildll
inc
clc
sbb
adc
sti
dec
jne
ljmp
jmp
or
xor
jecxz
cmpsl
cmp
ss
add
pop
add
ficoms
cmpsb
xor
leave
cmpsl
push
ss
outsb
xchg
add
add
popa
movsl
sub
sar
dec
sub
arpl
outsb
jmp
inc
add
addr16
cmp
sbb
fsubr
pusha
mov
shlb
repnz
ret
pushl
enter
or
xchg
dec
mov
test
mov
mov
andl
inc
mov
bound
adc
lahf
cltd
js
sbb
pop
dec
je
mov
mov
mov
sbb
std
jmp
ficoms
bound
jge
xor
inc
mov
ds
adc
xor
sbb
stos
ret
adc
mov
fbld
iret
addl
repnz
fildll
arpl
pop
lock
lds
out
jne
mov
xchg
or
in
add
ja
popf
push
pop
jbe
lret
xor
dec
mov
lods
xchg
sbb
xchg
push
test
fwait
sub
push
push
push
arpl
in
or
imul
ss
inc
sub
lock
push
pop
ss
cmp
push
mov
and
shlb
inc
add
pushf
lret
xchg
lds
xor
pop
fcomip
ret
mov
xchg
jecxz
pop
mov
clc
xor
es
push
jne
pop
lahf
push
sub
adc
aas
fistpll
add
out
scas
push
dec
push
mov
outsb
lods
adc
lret
xor
and
xor
fadd
mov
lods
push
sub
repz
repz
lods
rcrl
xorl
bound
sbb
mov
mov
xorb
int
add
outsl
mov
sbb
mov
sub
lods
popa
push
dec
in
mov
mov
xchg
mov
mov
mov
mov
push
jp
jle
add
leave
ret
daa
sub
push
shrb
into
cmc
decl
or
mov
jb
lret
ds
aas
lret
and
cwtl
cmp
pop
ja
rcll
mov
scas
jg,pt
aaa
lock
inc
lret
mov
mov
mov
xchg
sahf
dec
imul
jnp
shr
imul
cmpsl
push
or
outsb
and
dec
cltd
pop
pusha
pusha
mov
idiv
outsl
pusha
pop
rol
fcompl
xchg
xchg
jnp
inc
imul
stos
int
insl
pop
out
lret
outsl
mov
loop
scas
adc
out
mov
outsl
or
out
xor
add
sbb
pop
gs
insb
inc
inc
add
fisubl
add
inc
cmpsl
mov
lock
outsb
sub
mov
inc
lcall
pop
cs
jnp
mov
icebp
subb
and
frstpm(287
mov
mov
sub
repz
sub
jnp
sbb
xchg
mov
jp
dec
movsl
jnp
sarb
mov
divb
xor
mov
loope
leave
xchg
and
xchg
popa
inc
inc
jae
test
jmp
ret
mov
and
sub
imul
push
fistpl
push
xor
mov
loopne
jg
cltd
faddl
into
dec
ss
bound
aaa
pop
pop
iret
dec
in
in
pop
sarb
fistpll
sub
in
in
inc
jge
hlt
xchg
clc
dec
dec
dec
sbb
mov
shll
xor
call
in
xor
sbb
xchg
enter
and
testl
xor
sub
jb
rcrb
shl
leave
lret
in
ja
mov
inc
filds
insb
jb
pop
adc
in
cvtps2pd
das
mov
mov
adc
int3
push
or
stos
outsb
nop
adc
and
xchg
iret
xor
sbb
dec
jp
push
lods
fbld
mov
mov
or
cli
mov
push
popf
add
pop
push
add
out
popa
bound
cmc
arpl
mov
pop
pop
mov
cli
pop
movsb
pushl
jbe
scas
jo
es
jns
and
js
es
test
insb
int3
mov
adc
xor
shrb
rcr
in
jae
std
push
add
inc
adc
sti
movsl
inc
out
or
xor
scas
adc
pop
xchg
test
add
jno
xchg
or
cmpsb
add
imul
rorl
call
cwtl
popf
push
sub
sub
ret
stos
mov
mov
xchg
inc
adc
in
leave
inc
cs
adc
sub
cmc
mov
hlt
or
or
into
mov
pop
jp
mov
lods
ret
lock
jmp
into
cwtl
jbe
jg
cmp
clc
loopne
in
inc
mov
sub
lret
fcoml
icebp
inc
fmuls
int3
push
cmp
mov
dec
es
xor
xchg
mov
lods
push
mov
sbb
or
clc
xchg
mov
les
jg
sti
repz
sbbb
or
test
hlt
lcall
ret
hlt
adc
rorl
dec
inc
icebp
scas
and
mov
out
mov
push
and
push
add
neg
cmp
sti
and
and
and
jg
jo
lret
aad
xor
cmp
mov
lret
idivb
sahf
xor
int
in
cmpsl
xchg
int3
shrb
jb
je
add
lcall
dec
xchg
shll
push
and
mov
sbbl
cmpsb
nop
pop
mov
outsb
pop
inc
push
into
push
fistpll
push
mov
pushf
lret
mov
dec
or
xchg
pop
sbb
inc
ret
aaa
in
xor
sub
inc
push
pushf
lock
cld
es
mov
fisubrs
xor
lret
stc
push
cli
jle
adc
sub
lahf
xchg
add
lods
dec
push
rcll
push
add
fldenv
push
xor
mov
pusha
and
es
rcrl
in
sub
movsb
sub
mov
jo
adc
repnz
xor
mov
pop
repnz
sahf
hlt
sub
and
daa
ljmp
mov
hlt
push
loop
push
mov
mov
mov
push
xchg
das
adc
divl
inc
and
test
xchg
sbb
mov
pop
movb
dec
add
out
dec
xchg
mov
xor
push
in
cmp
pop
mov
imul
pop
dec
sub
jp
fildll
pusha
sahf
dec
popf
fs
jae
cmp
mov
adc
and
inc
adc
outsb
fcomp
out
push
loope
push
in
mov
shr
jmp
test
scas
ss
mov
push
and
xchg
and
xchg
and
cmpsl
movsb
out
pop
inc
inc
jecxz
xchg
and
lahf
mov
inc
popa
lods
dec
cmp
out
xlat
shlb
push
xor
inc
cld
je
jmp
lods
jb
outsl
jp
sub
pop
mov
cmp
jmp
sub
test
pop
add
and
test
loop
fs
imul
in
repnz
fs
in
xorb
gs
or
mov
jns
mov
test
out
jno
out
xchg
dec
addl
dec
lcall
ljmp
mov
pop
mov
sti
addr16
mov
jbe
insb
or
sbb
pop
pusha
pop
xchg
pop
or
sahf
pop
fisubrl
mov
dec
shll
inc
loopne
mov
add
faddl
inc
mov
testl
aam
or
bound
jmp
jo
xor
movsb
inc
dec
fstl
mov
mov
xor
pushf
vmovhps
faddl
rolb
and
mov
rolb
xchg
cs
fbstp
jbe
popa
ficomps
testb
xchg
sub
das
add
mov
pop
rclb
mov
pop
test
rolb
xchg
xchg
cmpsl
daa
and
je
jmp
cmp
xchg
mov
insl
gs
mov
sbb
addl
shlb
xor
dec
inc
arpl
push
out
or
in
cmp
push
mov
pop
gs
je
mov
pop
arpl
les
jl
test
in
in
imul
into
rorb
inc
push
fistpl
aam
or
addr16
imul
xchg
adc
inc
sbb
shrl
movsl
push
call
lock
xor
fbstp
fisttpll
jmp
dec
sbb
adc
or
push
jnp
inc
inc
dec
ficoml
aam
jbe
pop
push
xchg
fucom
outsl
adc
scas
xchg
test
pop
ljmp
sbb
pop
ret
adc
mov
push
sti
jo
push
orl
jmp
cmp
iret
mov
or
pushf
loop
pushf
mov
leave
dec
or
adc
outsb
cmp
std
loope
xor
fcomps
ja
int3
ror
inc
popa
cmc
adc
insb
in
out
outsb
je
outsb
pop
mov
and
xor
push
mov
movsl
test
filds
inc
inc
ret
pop
and
and
aas
testb
push
push
aas
jmp
xchg
jno
subb
jp
ret
xor
cmp
push
shrb
stos
inc
mov
in
dec
jg
cmc
inc
cmp
lds
xor
dec
cmp
and
xchg
bt
std
mov
lcall
sbb
cmp
setnp
clc
cmp
inc
inc
data16
pusha
fsubrl
sub
loopne
pop
stos
in
test
jg
add
fnsave
hlt
sub
inc
xchg
inc
test
idivb
push
and
js
sti
popf
repnz
sbb
xchg
pop
add
loope
or
dec
and
pop
mov
push
or
lea
xor
hlt
subb
insb
and
pop
pop
lahf
sbb
push
cmp
jl
mov
mov
xchg
pop
mov
mov
clc
daa
dec
inc
lcall
test
fists
icebp
push
out
mov
idivb
idivl
push
in
inc
sbb
xchg
ljmp
rcrb
push
and
out
cmp
xchg
or
dec
sub
shl
mov
inc
dec
pop
roll
orb
mov
mov
mov
sbb
outsl
pop
adc
jmp
mov
cs
ret
and
jae
repnz
out
fimuls
push
addr16
cld
jl
inc
scas
pop
add
jb
pop
mov
test
lcall
mov
mov
add
jnp
out
iret
or
mov
jl
fimuls
adc
mov
xchg
cmpl
insl
icebp
jne
inc
mov
sahf
adc
jnp
test
and
and
mov
inc
subl
xchg
and
lods
pop
mov
push
outsb
jmp
popf
mov
daa
mov
sub
inc
add
mov
dec
mov
into
dec
arpl
ja
nop
shl
pusha
lods
test
push
or
pop
std
xchg
fistpll
pop
fdivs
das
sti
mov
xor
shll
xchg
out
lret
in
enter
mov
testl
out
xchg
call
push
jae
stc
ja
cmc
mov
dec
movsb
sub
and
or
cmpsl
dec
mov
loope
adc
add
je
addb
addr16
dec
sbb
in
scas
jle
sub
testb
inc
inc
xorl
imull
sub
push
jge
inc
scas
xchg
dec
mov
pop
ret
mov
clc
jo
push
cwtl
jns
sti
loopne
pop
dec
lods
push
pop
xchg
add
mov
xchg
sub
mov
rolb
jecxz
cmp
jg
xchg
out
popf
testb
push
incb
test
sbb
or
cmpb
cwtl
sub
sbb
and
jbe
pop
fidivs
imul
lea
clc
cs
sub
lcall
xchg
adc
pop
jle
push
cmp
or
sub
push
jb
lds
mov
xlat
cmp
push
dec
dec
shlb
test
add
pop
mov
cmp
push
ret
push
adc
fcompl
sub
icebp
aaa
lock
loop
and
mov
sarl
fyl2xp1
xor
mov
adc
mov
mov
lcall
cmp
popf
loopne
dec
or
xlat
bound
sub
scas
ret
xor
sbb
jo
ret
in
xchg
pop
inc
dec
clc
mov
xchg
das
fiaddl
sbb
stos
subb
xlat
test
jge
test
jno
mov
adc
in
pop
fldcw
bound
scas
pop
pop
jb
sbb
fidivrl
jae
sbb
and
mov
mov
adc
sti
in
f2xm1
xor
int3
push
add
pop
fstpl
xor
push
cmp
dec
cli
pop
inc
xchg
xor
stos
fadd
xchg
fwait
aam
push
lock
adc
pop
mov
imul
lret
div
adc
neg
mov
pop
rcrl
insl
repz
in
pusha
mul
aas
lods
cmp
movsl
mov
or
pop
lock
jne
clc
add
jl
or
movsl
jne
xchg
test
mov
xchg
fimuls
pop
aad
loope
add
popa
and
lods
mov
shl
ja
sbb
lret
xor
adc
fmulp
stos
cmp
les
xchg
inc
cmpsb
fs
pop
and
dec
add
push
mov
mov
cmp
mov
adc
int3
push
sub
fists
lods
add
add
pop
adc
or
outsl
or
push
shlb
dec
outsl
mov
inc
xchg
clc
pushf
gs
adc
fwait
enter
dec
dec
fwait
jne
xchg
push
ljmp
test
cmp
mov
into
insb
jmp
aas
adc
xchg
rcll
lods
xchg
aam
add
leave
sahf
cmpsb
ljmp
push
addb
das
adc
push
push
pusha
inc
sbb
nop
jge
jge
dec
in
xor
pop
pop
inc
push
mov
inc
jg
add
sub
mov
cmpsb
mov
xchg
clc
pushf
incl
fisttpll
dec
rcll
jmp
jno
ret
and
mov
jmp
movq
jle
outsb
lret
or
mov
lods
sbb
shrb
in
test
js
call
jg
aam
cmp
mov
pop
inc
dec
xor
in
dec
push
in
sbb
cmp
jge
push
mov
ja
ljmp
pop
cmc
cmp
hlt
inc
nop
push
cli
pop
jnp
mov
pop
jg
xor
xor
leave
aaa
push
jge
pop
adc
xchg
cmpsb
mov
adc
bnd
test
adc
pusha
in
fcomi
sahf
sbb
pop
cwtl
shl
fisttps
test
dec
repz
push
repnz
mov
fiadds
mov
shll
ret
test
enter
or
push
adc
sbb
xor
ficoms
movsl
add
out
aaa
mov
cmp
mov
rorl
mov
lods
sub
fstps
ds
testl
ja
cld
push
cmpsb
push
inc
add
pop
into
frstor
sub
jno
in
popa
jg
cmp
pop
cwtl
mov
adc
in
push
mov
cmp
arpl
xlat
jge
xchg
ret
xor
pusha
dec
bound
mov
cmp
jl
add
fstpl
mov
inc
fs
push
lret
andb
xchg
mov
push
and
lret
and
int
iret
rorb
test
xor
fdivrl
pushf
xor
push
mov
pop
rorl
fcmove
mov
fmull
repz
iret
and
sub
ja
adc
pusha
inc
jecxz
and
or
jnp
mov
jo
outsb
cmp
icebp
int3
mulb
mov
xor
js
mov
jp
xchg
and
push
daa
pop
mov
loope
jb
scas
das
sar
mov
cmpsl
fcoms
arpl
mov
lret
push
mov
call
sub
movsb
fwait
jl
pop
mov
into
sub
pop
xor
jmp
cmp
iret
dec
pop
jecxz
test
lret
push
jg
pop
jne
int3
ss
lcallw
xor
rolb
jbe
out
push
sub
mov
mov
enter
es
test
or
mov
pop
mov
adc
sti
ljmp
movsb
mov
dec
add
out
inc
sbb
bound
push
in
lret
push
insb
and
and
add
pop
dec
sbb
mov
leave
inc
and
cmp
mov
sub
daa
push
ficompl
das
xchg
xor
mov
sarb
push
jae
sub
sub
cmp
pop
mov
div
ljmp
jne
sub
cmpl
shl
icebp
jge
jne
data16
test
cs
lret
pop
ret
dec
xchg
xchg
fdiv
aad
push
bsf
loope
add
xor
fmull
jl
outsb
cmp
and
mov
xor
add
aaa
inc
cs
subb
push
in
dec
jbe
stos
inc
daa
scas
lret
lods
sub
adc
insl
mov
stos
mov
sahf
divb
jecxz
movsb
sti
enter
loope
rol
dec
imulb
outsl
jp
out
dec
jg
icebp
ljmp
sbb
popa
rorl
adcl
loope
add
inc
shrl
call
ds
movsb
nop
push
sbb
addb
pop
in
or
xchg
ja
push
push
cmp
or
in
int
adc
movsb
daa
adc
sbb
push
mov
sbb
jecxz
mov
add
aaa
push
data16
push
cmpsl
ss
xor
xor
and
mov
adc
in
scas
cmp
mov
sar
fsubrs
test
and
js
lret
pop
sub
andb
out
es
decl
xor
bound
and
or
popa
or
jnp
push
lret
lcall
fs
fcmovnu
xchg
int
sub
out
fidivrs
loopne
sbb
push
dec
outsb
pop
mov
lcall
fnstcw
gs
iret
jmp
cmp
and
bound
add
sub
dec
push
dec
outsl
fs
and
lock
repnz
or
stc
aad
sub
or
mov
mov
fs
mov
insb
clc
sarl
sub
in
hlt
dec
mov
dec
stos
or
mov
lahf
xor
test
loopne
das
mov
iret
mov
add
aas
jp
ds
rclb
rorl
inc
inc
out
push
loopne
js
cmp
lret
push
and
jmp
cwtl
dec
jns
cltd
popf
out
add
lahf
sbb
pop
sbb
das
rorl
std
cltd
test
vcvttpd2dq
mov
inc
inc
inc
popa
gs
loope
fcmovne
sub
fwait
mov
call
loop
imul
rcll
cmp
pop
push
push
jmp
pop
mov
es
int3
and
cmc
mov
xor
xchg
pop
popa
jp
xchg
sahf
xor
incl
jnp
imul
ja
lds
lods
sub
inc
and
adc
ljmp
cmp
xchg
mov
mov
mov
or
lea
mov
xchg
fsubrl
xchg
je
test
fwait
push
testl
and
popf
fwait
pop
sbb
mov
push
mov
xor
int
stos
adc
int
mov
jae
cmp
jmp
lcall
imul
jecxz
mov
fprem
shlb
icebp
pop
cmp
sub
cmp
out
test
adc
mov
mov
test
jge
sub
dec
and
fiaddl
cmp
lret
pop
lods
fldt
xor
pop
aad
subl
and
pop
sbb
jno
fidivs
xchg
xchg
pop
loop
cmp
das
fwait
sbb
jb
xor
cwtl
stos
pop
test
pop
outsb
daa
pinsrw
std
daa
scas
mov
inc
stos
rorl
inc
fucom
lahf
clc
pop
sbb
add
mov
mov
cs
jmp
divl
popf
fdivrl
sub
das
mov
test
mov
jb
add
clc
xchg
lret
and
add
test
add
or
inc
push
or
int
jb
bound
test
test
adc
jge
jnp
int
cld
push
scas
aas
enter
cmp
mov
ja
rorl
mov
xchg
jnp
fsubl
pmaxsw
jmp
out
in
std
out
push
aad
dec
push
mov
cmp
jno
inc
mov
cmpsb
iret
jl
and
in
stos
dec
popf
shll
sub
push
clc
jge
pusha
mov
cmpsl
test
push
and
gs
scas
rclb
dec
je,pn
mov
in
dec
jb
adc
mov
xchg
mov
push
sub
test
cmp
adc
xchg
cmpsb
loope
pop
jno
jae
mov
push
or
jge
mov
lea
dec
add
clc
in
lret
neg
push
lods
enter
cmp
mov
fisttps
fidivrs
add
lahf
push
loope
jne
cmp
cmpl
les
fwait
mov
or
and
sbb
add
push
sbb
adc
loope
sbb
add
imul
push
pop
sti
les
adc
pop
mov
stos
into
and
pop
imul
aam
popa
xchg
rcrb
adc
sub
lea
shrb
sub
testl
add
hlt
iret
adc
jb
rolb
icebp
push
enter
loope
mov
rolb
jl
cs
insl
dec
popa
fisubs
push
mov
jg
pop
lea
push
dec
int
pusha
add
jle
adc
mov
inc
pop
icebp
pop
paddq
cmp
loope
dec
xlat
mov
dec
cmc
lods
cmp
rorb
inc
mov
xchg
add
cmpsl
inc
mov
inc
xchg
and
stc
mov
movq
imul
js
cmc
add
xchg
pop
lahf
shr
dec
pop
outsb
jmp
jmp
xorb
cmpsl
jmp
xor
sbb
fsubrs
cmp
mov
rorb
loopne
aad
jns,pn
push
les
push
iret
mov
jns
addr16
mov
or
pop
xchg
mov
out
outsb
call
add
and
push
das
fcompl
mov
fwait
sub
jns
bnd
data16
ret
ljmp
or
cmp
pusha
clc
adc
dec
xor
pop
test
mov
mov
std
jg
test
stos
test
out
sbb
es
lea
cmp
fs
jo
dec
lahf
fadd
cmpsl
xchg
pop
inc
mull
sbb
lods
int
add
push
xor
xlat
sub
dec
shll
xchg
mov
or
adc
add
in
sub
inc
out
push
sbb
cmp
insb
aaa
fidivrl
mov
sub
push
inc
scas
fs
adc
pop
scas
imul
jnp
jg
std
sub
clc
subl
mov
fsubr
sbb
mov
sbb
xchg
pop
test
call
pop
jp
stc
lock
jg
out
addr16
lcall
dec
lahf
inc
imulb
pusha
mov
popf
ret
cwtl
sbb
mov
pop
outsb
mov
sahf
addr16
adc
dec
and
pop
cmp
mov
test
cmpsl
mov
sbb
sbb
jmp
out
cmp
lods
xor
push
sbb
add
or
roll
mov
mov
and
aam
lret
mov
test
lock
popa
addb
mov
jp
cwtl
test
sbb
sbb
faddl
arpl
mov
int3
popf
sahf
jbe
mov
adc
fwait
sbb
xor
cmp
jbe
jmp
push
mov
inc
rcrb
mov
push
inc
ljmp
jns
call
and
sbb
push
mov
sahf
mov
push
or
jns
lods
adc
xchg
pop
dec
and
clc
inc
cltd
sarb
xor
lea
repnz
fdivl
jbe
push
mov
inc
mov
xchg
lahf
jne
mov
and
inc
ljmp
xchg
lret
insl
mov
fmull
movsb
stos
sub
adc
or
mov
inc
cld
mov
pop
stos
and
sar
cmpsl
das
pushf
mov
inc
push
push
add
lret
leave
mov
das
hlt
jbe
int3
outsb
xor
add
push
mov
popf
fsubrl
xchg
fwait
aas
mov
lods
jbe
mov
sbb
imul
dec
lcall
jmp
cltd
into
mov
inc
dec
fs
pop
fistpl
mov
mov
or
cmpsb
insb
pop
inc
cmpsl
popf
jle
pusha
iret
out
les
fisubs
mov
lods
lret
jmp
jecxz
stc
mov
adc
and
out
adc
fcmovnb
mov
and
loope
add
or
sbb
xchg
push
sub
add
cwtl
xchg
adc
loopne
iret
mov
jl
push
mov
int
dec
movntps
adc
push
test
push
hlt
or
scas
cmpl
adc
stos
repz
pop
iret
adc
sub
cmp
push
xchg
iret
cmc
add
test
adc
mov
leave
das
shll
jo
fcoml
test
push
xchg
aad
lds
lret
sbb
fstl
subb
dec
xor
or
leave
ss
nop
sbb
add
rcrb
add
xor
mov
in
mov
jg
push
dec
or
xchg
jle
cmc
cmpl
jp
pop
xchg
lock
imul
fcoms
cmp
int
lods
lret
jno
test
movsl
pop
dec
ds
fiadds
and
pop
test
push
into
mov
lods
jne
xlat
sbb
and
ret
scas
jae
jg
daa
inc
jecxz
xchg
xchg
dec
out
fimuls
push
mov
xchg
jno
mov
mov
xchg
sahf
xor
out
cmc
or
std
mov
in
les
daa
and
hlt
xchg
rorl
fisttps
negl
mov
leave
jo
in
jecxz
mov
inc
pop
xor
jmp
ja
movsb
gs
test
imul
dec
xchg
jb
add
bound
push
mov
not
sub
adc
dec
outsl
arpl
fxch
pop
jmp
and
xchg
mov
jo
jne
jmp
mov
ret
cld
sbb
jg
pusha
mov
rcll
mov
stos
mov
jbe
lcall
inc
cmpsb
in
jl
icebp
jp
push
xchg
mov
sbb
sbb
fst
xchg
popa
pop
lcall
pop
cmc
xorl
xchg
adc
fisttpll
adc
ljmp
add
sub
sahf
pusha
shlb
nop
sbb
xchg
rorl
daa
xchg
mov
lds
pop
fcmovnbe
ds
xor
xor
stos
jbe
push
sbb
mov
jno
mov
outsb
lret
out
fldl
cld
data16
pop
lcall
js
ret
xchg
sbb
mov
shll
cmp
sub
add
mov
fnstcw
shlb
subb
pop
idivl
imul
xchg
xor
adc
sbb
enter
dec
sbb
jle
fst
xorl
divl
lea
lahf
pop
cwtl
xor
mov
std
shrb
subb
xchg
xor
cmpsl
or
rorl
xchg
mov
orl
cmp
mov
mov
jp
mov
fists
mov
mov
mov
int
pushf
sub
popf
cli
pop
add
add
sti
dec
mov
jb
sub
push
andl
in
mov
movb
xlat
and
mov
xor
pop
sti
stc
int
test
push
fistpl
push
lea
xchg
dec
lea
icebp
pop
push
push
xchg
jne
aaa
call
pusha
stos
or
sahf
and
subl
xor
dec
mov
sbb
jle
sbb
rorl
dec
orl
out
shrb
sbb
nop
dec
sahf
idivl
sbb
stos
test
sbb
sahf
add
es
imul
fdivr
sahf
pop
das
push
mov
jmp
inc
movl
mov
out
adc
sbb
clc
add
lahf
push
stos
pushl
data16
xchg
cmc
repz
sbb
into
and
pushf
aaa
sub
inc
push
into
and
inc
lods
adc
jb
popf
jg
adc
sbb
push
xchg
cmc
pop
lock
into
cmpsl
call
sub
inc
test
data16
inc
or
jp
and
into
xchg
push
lods
mov
repnz
sub
sti
loopne
or
sbb
or
imul
loope
pop
xchg
xor
mov
fbstp
jnp
mov
pushf
ret
insl
pop
jg
je
adc
cs
lcall
mov
movsb
xor
push
mov
xchg
adc
jmp
setns
flds
arpl
int
sbb
add
mov
addb
mov
xchg
loop
adc
stc
and
sbb
into
or
mov
cmp
xor
xchg
cmp
gs
and
xchg
arpl
pop
inc
arpl
movsl
movsl
pusha
test
adc
jbe
adcl
aas
xchg
bound
jnp
outsl
jp
dec
lods
jmp
xchg
or
xchg
in
mov
inc
and
stc
aad
mov
pop
nopl
mov
jl
nop
cmp
dec
sbb
mov
push
sbb
pop
push
out
jl
mov
cmc
dec
lret
fnstcw
bound
mov
pop
fwait
mov
out
and
push
pop
jmp
adc
cli
xchg
in
pop
pop
inc
mov
inc
mov
jmp
mov
xchg
enter
imul
cwtl
fs
or
or
mov
push
pop
inc
gs
inc
imul
add
inc
and
popa
and
jecxz
pop
stc
pop
lfs
mov
imul
mov
mov
add
imul
fidivl
test
fistpl
lret
mov
mov
leave
add
test
xlat
mov
fs
or
scas
jge
pop
fcompl
cmp
inc
xchg
scas
movntq
add
mov
push
xchg
xor
filds
out
sahf
fstpl
rcrl
loopne
mov
jno
mov
hlt
clc
imull
mov
sbb
fs
xlat
es
xor
mov
lret
repz
repz
mov
bound
inc
into
or
xor
adc
inc
xchg
out
xchg
mov
out
cli
out
test
mov
movsb
mov
mov
sub
pop
xor
lret
rolb
push
lret
je
je
and
adc
jmp
xor
fisubrl
fmul
aaa
shlb
idivl
jg
insl
xor
roll
pop
sbb
clc
dec
dec
push
ret
cmp
fsubs
cmp
fidivs
dec
inc
jo
xlat
inc
inc
sub
adc
push
and
jge
sahf
adcl
cmpb
outsb
icebp
fcmovbe
aam
push
jae
inc
call
rclb
add
cmp
aas
es
mov
sti
std
push
fwait
jns
pop
mov
stos
xor
inc
pop
adc
aad
sub
add
or
or
popf
cwtl
add
jnp
jae
inc
ds
mov
mov
cmp
fsubl
jo
movsl
movsb
in
mov
add
cmp
jno
adc
or
jne
mov
hlt
divl
pop
mov
pop
sbb
movsb
cli
sbb
sbb
mov
and
rcrb
cmp
flds
adc
stos
and
das
insb
sub
cmp
and
inc
ja
les
shrb
minps
cmp
pusha
mov
out
addr16
xchg
fcoml
mov
mov
jmp
mov
push
in
subl
xor
aad
je
jb
inc
push
stos
into
adc
movsb
add
das
das
sbbl
inc
xor
jbe
aaa
leave
rolb
fucom
xor
sahf
ss
movsl
and
cs
or
xor
data16
mov
mov
in
mov
mov
es
movsl
ja
out
or
mov
adc
mov
in
ja
pop
cmp
std
shlb
cmp
call
out
sub
cltd
and
or
out
addr16
inc
mov
scas
jg
popl
sub
ret
push
mov
cmp
insb
sbb
test
add
cmp
inc
inc
mov
xchg
in
das
ja
cmc
addl
pop
jp
push
lds
movsb
test
pop
push
dec
es
popf
jle
jne,pt
rcrl
das
addr16
or
push
push
add
pop
mov
push
jg
dec
xchg
xchg
andl
mov
jge
pusha
fucomp
outsb
jno
cmp
or
push
push
sbb
mov
adc
sbbl
mov
mov
mov
fbstp
pusha
push
faddl
inc
int
add
mov
xor
xor
and
cmp
call
cmp
lahf
ss
xchg
pop
add
sub
mov
daa
stc
add
dec
xchg
aas
ret
mov
aas
and
jbe
push
mov
daa
jmp
fwait
xlat
pop
push
ret
lret
shll
shrl
aas
dec
aas
mov
mov
mov
add
aam
jo
mov
dec
mov
fisttps
stos
outsb
mov
fwait
sbb
inc
repz
add
fs
mov
mull
add
dec
clc
sbb
inc
jmp
shrl
sub
mov
enter
pushf
jmp
dec
jnp
adc
xor
push
inc
mov
inc
fldl2t
mov
sbb
pop
pop
push
lret
adcl
out
hlt
mov
lret
mov
out
cmpsl
or
dec
movsb
cld
cwtl
sti
leave
dec
xchg
or
dec
out
sbb
sar
and
pop
nop
inc
mov
daa
mov
rcr
test
dec
pop
mov
pop
and
mov
and
daa
push
movsb
pop
pop
fdivrl
into
add
fnstsw
mov
pop
std
movsl
mov
adc
aad
daa
dec
add
and
sub
cltd
daa
inc
std
test
lahf
out
push
jne
bound
repz
scas
mov
loopne
pop
mov
sub
xlat
jge
inc
aas
out
xchg
cld
cmpsb
aad
dec
gs
push
cbtw
addr16
sub
outsb
add
mov
into
pop
ficompl
rclb
lret
std
jo
ja
inc
nop
mov
test
mov
cmpsb
xor
xchg
mov
adc
ret
push
das
adc
adc
mov
les
dec
scas
xchg
mov
mov
sbb
pop
out
and
outsl
ja
scas
out
dec
jbe
push
xor
lret
mov
ret
jns
xchg
push
mov
test
je
xlat
imul
pop
cld
mov
add
clc
lods
xchg
sbb
sbb
push
stc
dec
loope
push
cmp
mov
fisubl
insb
jo
xchg
sbb
dec
add
mov
cltd
mov
mov
push
cwtl
movsb
push
add
sbb
xor
daa
fsubrs
push
inc
pop
addl
cmpsb
and
cmp
mov
outsb
fs
pop
das
jle
hlt
test
inc
dec
push
stc
int3
std
ret
in
call
dec
out
test
stos
dec
push
pop
lds
inc
jl
jl
cwtl
add
inc
out
sub
push
pop
out
add
jae
not
stos
xorb
jo
imul
jnp
cs
mov
aas
ret
rorb
cmp
cmp
sahf
frstor
xchg
stos
mov
mov
scas
fcomip
pop
sbb
cmp
mov
jl
xor
jnp
out
pop
pop
xchg
and
imul
lcall
mov
pop
and
jns
jmp
push
or
fldlg2
xchg
xor
es
jmp
lcall
nop
cmp
out
enter
jns
sbb
jne
fcmovnb
loop
add
in
movl
push
adc
mov
mov
jbe
cltd
jnp
jnp
cmp
jnp
lret
cmp
pop
fs
lea
fnsave
movsb
lock
push
pop
int
daa
std
fdivs
add
ficomps
sbb
sbb
add
add
mov
hlt
idiv
push
pop
andw
push
cltd
cmpsb
addr16
cwtl
dec
or
loop
lcall
fldt
or
test
ficompl
push
dec
addr16
loop
cmp
fsubrl
out
xor
cld
bound
mov
jmp
push
mov
js
jae
out
and
cwtl
scas
sub
xor
push
lret
xor
pop
or
sbb
mov
mov
enter
dec
cltd
gs
rorl
adc
insb
sub
jmp
pop
pop
sub
test
jl
out
imul
jbe
mov
mov
lods
bnd
sbb
dec
sti
test
popf
cs
sbb
fsubl
dec
jns
xchg
sub
repnz
inc
mov
ljmp
leave
cli
out
or
add
xchg
sbb
fmull
data16
pop
sub
xlat
push
cmpsb
sbb
shl
fisubrl
out
pop
pushf
addr16
push
push
jns
xchg
iret
jbe
xor
or
cltd
push
es
jns
dec
test
dec
test
cmpsl
movsb
int3
xchg
scas
add
mov
mov
cmp
popa
mov
mov
lods
and
std
enter
fstps
sub
or
in
daa
jp
movsb
cmpsb
ljmp
xor
adc
mov
les
mov
pop
gs
cmp
es
xor
and
insl
incb
jbe
ss
jnp
adc
dec
pop
xchg
xchg
bound
addl
repz
or
mov
div
fs
rorl
jbe
mov
lcall
pop
daa
dec
pop
into
stos
cmp
je
jmp
pushf
sub
imulb
faddl
in
inc
je
popf
pop
inc
mov
mov
rolb
vmwrite
push
jne
inc
push
test
or
lea
inc
out
jns
or
ds
push
pop
mov
sbb
push
pop
daa
fnstenv
mov
ret
mov
or
xorb
pop
test
inc
dec
mov
push
cli
aam
and
call
out
stc
and
fwait
test
mov
cli
in
fists
repz
cltd
xchg
rcl
adc
es
pop
mov
sbb
jne
xchg
pop
sub
lret
aaa
add
sbb
and
sbb
sbb
mov
push
incb
outsl
mov
popl
daa
repnz
or
xorl
out
and
cmpl
xor
push
and
mov
or
push
ds
cmp
ljmp
adc
sbb
jmp
ret
push
adc
popf
mov
loop
bound
imul
and
sbb
jnp
aaa
js
jl
mov
leave
push
jo
or
mov
in
inc
xorl
xchg
lahf
sbb
cmpsb
and
ficoms
push
orl
mov
repnz
repz
out
test
sahf
mov
out
inc
adc
repnz
lock
loope
xchg
lds
in
mov
pushf
mov
inc
jae
pop
test
call
cmpsb
dec
roll
push
enter
test
xor
rcrb
push
sub
and
shl
cmp
out
push
js
mov
jge
dec
test
cmp
jmp
repnz
ds
stos
pop
push
jecxz
dec
mov
push
mov
es
test
add
rcl
pop
cltd
adcl
or
enter
and
mov
push
mov
adc
cmp
mov
sbb
jnp
rclb
add
and
mov
lret
push
lret
pop
sahf
dec
add
rol
or
mov
idivl
mov
and
mov
in
stos
sub
icebp
mov
jo
movq
pop
sub
cli
jne
or
xchg
jb
test
dec
fcompl
dec
int3
sub
sub
adc
loopne
bound
out
cwtl
dec
addl
dec
xchg
enter
inc
jnp
and
addr16
inc
popa
loopne
xor
cmp
testb
cltd
sub
jb
lret
in
stc
dec
les
icebp
ret
pop
out
inc
sbb
mov
ret
lock
adc
outsl
fcom
andl
dec
inc
push
cmp
je
jle
addr16
xchg
shrb
add
mov
mov
jl
dec
push
add
jecxz
cmp
lret
push
movsl
data16
and
add
subl
push
mov
xchg
xchg
sbb
ja
jb
inc
loop
mov
xchg
js
adc
fimull
and
fmuls
xor
push
xchg
dec
or
dec
dec
dec
fisttpll
mov
dec
adc
sarb
fildl
cmc
pop
jno
sub
negl
and
icebp
or
push
mov
into
adc
stc
and
adc
xchg
adc
mov
in
inc
arpl
add
push
lahf
sbb
sbb
mov
in
sub
and
repz
pop
adc
enter
mov
stc
jle
pop
or
out
cld
mov
repnz
je
icebp
in
daa
fdivrl
or
adc
push
push
xor
bound
push
push
enter
sti
sbb
or
loope
xchg
vpsubd
cmpb
js
lea
insl
inc
shl
pushf
sbb
idiv
or
mov
jae
pop
subl
jmp
test
std
dec
int
xchg
mov
je
sti
loopne
lret
xorl
jbe
insb
inc
je
movsb
jne,pn
jae
push
icebp
imul
mov
xchg
xor
and
jbe
int3
jbe
or
fs
out
aaa
push
nop
sbb
popf
ret
addr16
pop
xchg
fdivs
icebp
ret
jl
cld
cmp
xor
push
mov
xchg
inc
pop
inc
dec
xchg
scas
sti
and
fists
repnz
or
popa
pusha
sub
mov
fidivl
shrb
inc
aas
nop
jne
les
cmc
xchg
popf
or
shll
dec
push
call
icebp
mov
test
bnd
or
mov
push
push
dec
mov
icebp
repz
xchg
mov
cld
cmp
mov
scas
ja
cli
adc
jbe
enter
aas
jle
dec
stc
mov
rclb
or
jnp
cmp
dec
jne
xchg
jo
rolb
aam
lods
fstl
ret
int
add
sub
push
mov
imul
mov
sbb
sbb
cmp
lds
test
enter
pusha
dec
push
es
push
lock
mov
dec
lods
mov
mov
or
aam
outsb
add
fsubr
popa
mov
and
out
inc
movsl
cmc
adc
sbb
stos
hlt
lods
pop
out
scas
mov
cltd
sbb
repnz
cli
xchg
movsb
pop
pusha
dec
shrb
jns
loop
push
dec
in
bound
bound
xchg
cmp
mov
xor
sub
dec
or
cmpsl
pop
repnz
mov
pop
pop
sbb
xchg
xchg
xor
fiaddl
mov
adc
push
xor
and
sub
ja,pn
cltd
lea
rclb
cs
mov
in
dec
cmp
push
pusha
sub
sub
sub
aaa
inc
call
mov
xor
jge
pop
sbb
lods
mov
sbb
cltd
or
sbb
cli
jge
jae
loopne
mov
push
mov
inc
mov
roll
ret
sbbb
inc
orl
popf
fwait
xchg
xor
cld
sub
xchg
je
mov
push
jmp
mov
movsl
or
repnz
and
jnp
sub
add
sub
in
sbb
xorl
inc
inc
sbb
mov
mov
test
mov
jne
xchg
push
push
test
adc
les
and
dec
push
scas
or
in
popf
call
ljmp
addr16
mov
xchg
fwait
mov
test
and
dec
jmp
popa
mov
sahf
push
sbb
push
fstpt
out
dec
jns
mov
dec
mov
mov
movsl
scas
fadd
or
push
addw
sti
add
repz
jb
xchg
loop
cmp
cli
insl
insb
push
in
stc
dec
dec
into
push
and
adc
fcompl
mov
pop
xchg
mov
jb
push
enter
push
sub
dec
pop
or
inc
push
ljmp
mov
and
out
loopne
movsb
cmp
cmpsb
les
push
cmpsl
sti
xlat
imul
enter
or
ret
add
test
or
push
jne
mov
inc
stos
add
pop
fs
mov
inc
je
xor
insb
pop
xchg
test
mov
ficompl
das
xchg
mov
mov
mov
cmp
lret
sbb
sarb
popf
fldenv
push
pusha
in
lcall
push
sbbl
inc
jmp
mov
lret
and
inc
imul
adc
inc
jg
imul
aam
and
mov
inc
and
pushfw
stos
into
ljmp
mov
in
fcoms
insb
adc
push
out
push
xchg
out
outsb
pop
cmp
mov
push
mov
inc
lods
into
mov
sbb
cmp
mov
xlat
outsl
es
mov
lods
aas
ficoms
ffreep
ds
mov
adc
orl
push
xor
fldl
xor
xchg
out
cmpsb
lods
mov
jge
push
arpl
movb
sub
and
rcrb
test
pop
stc
insb
and
sbb
jmp
enter
cmp
and
inc
sbb
xchg
pop
orb
out
mov
ja
sbb
cmp
movsb
mov
out
push
and
push
sbb
inc
cli
into
mov
ds
mov
or
cld
add
lods
flds
mov
divps
mov
icebp
jecxz
enter
xor
inc
ss
shr
pop
lret
xor
daa
adc
adc
faddl
push
jp
push
pushf
aaa
dec
xor
push
jne
daa
push
xchg
dec
adc
shll
lret
fwait
inc
mov
in
xchg
test
out
push
inc
mov
fsubrs
cmp
cltd
cwtl
dec
fucom
xor
insb
in
adc
stos
push
push
icebp
jne
xor
push
pop
call
dec
dec
cmpsl
pop
dec
es
jmp
xchg
pop
xchg
pop
mov
out
sbb
outsb
sbb
nop
aam
inc
jg
test
lahf
shr
loope
and
scas
frstor
stos
sbb
xchg
dec
pusha
das
sarb
sub
or
dec
push
xlat
mov
jno
out
jb
mov
ret
pusha
inc
inc
mov
and
into
icebp
push
xrelease
enter
divb
dec
sahf
repz
addr16
mov
adc
add
push
xchg
sbb
fidivl
fnstsw
notl
std
movl
sub
sbb
lods
inc
or
xchg
int
and
leave
dec
sub
ret
dec
cmp
mov
push
sbb
pusha
xlat
mov
in
jle
push
xor
clc
jns
xor
incb
push
out
data16
call
xor
scas
xchg
daa
aaa
mov
xor
sahf
lea
mov
sub
shrl
xchg
das
jbe
fimull
icebp
jae
cmpsl
iret
jne
in
and
fs
push
int3
jp
xor
mov
stos
or
enter
xor
arpl
cmc
clc
mov
and
imul
repnz
adc
les
fsubrs
cltd
aam
adc
popa
jbe
xor
or
fisttpll
fidivrs
addl
test
mov
insl
fidivrl
pop
out
xchg
dec
or
adc
push
add
out
enter
mull
pop
cltd
inc
mov
in
faddp
scas
and
xor
aas
enter
ds
mov
xor
dec
outsb
push
xchg
scas
into
and
ja
fildll
xor
std
jl
out
inc
test
push
push
cmp
or
pusha
into
movsl
and
inc
pop
cmp
xchg
lock
fisttpl
ret
mov
repz
mov
rcl
daa
or
es
out
inc
pop
xchg
in
cld
sbbb
ja
adc
mov
pop
cld
adc
jne
lea
add
scas
sub
in
or
or
cmp
and
mov
adc
insl
pmaxsw
mov
push
sahf
jb
mov
inc
outsb
and
sbb
xor
dec
pushf
mov
fwait
ss
pop
and
in
inc
mov
and
fucomi
mov
push
push
out
and
sbb
or
mov
pop
push
pop
adc
fimuls
idivl
fstpl
std
add
adc
pop
push
arpl
push
sub
push
add
test
repnz
std
scas
cwtl
push
mov
lahf
inc
mov
movsbl
pusha
sub
pop
stos
ret
jl
aad
cmp
int
data16
mov
inc
sub
inc
shll
aad
out
jge
adc
mov
xchg
inc
repz
stos
mov
loopne
in
jecxz
and
and
rorb
mov
jmp
les
jmp
xchg
int3
mov
hlt
push
dec
sarb
jnp
ja
in
loop
mov
xchg
push
pop
push
sub
xchg
je
cmpsl
int
sub
loop
lea
int
add
fmull
xor
jp
outsl
add
sub
cmp
jo
xor
subb
into
imul
push
push
adc
jecxz
mov
jle
push
pop
pusha
xor
adc
pop
clc
popf
inc
push
xorb
imul
call
imul
inc
adc
je
inc
jmp
or
nop
test
cmpsl
clc
loope
cmp
xor
stos
jl
sub
leave
push
repnz
mov
and
bound
xchg
ucomiss
cmp
xchg
xchg
ss
repz
int3
icebp
pop
loope
subl
sub
in
popf
scas
dec
imul
ret
cmpsl
xor
sub
js
xor
jge
es
xchg
movsl
je
jae
loop
push
ficoms
push
cmpsb
adc
add
xor
pop
in
nop
lds
mov
and
pop
lret
xchg
adcb
fmul
aam
or
lods
inc
mov
ds
sbb
test
cmp
imul
dec
in
xchg
pop
flds
jb
pop
mov
dec
jg
ret
notb
mov
test
jl
dec
dec
push
int3
adc
leave
push
out
hlt
inc
or
dec
daa
repnz
imul
sub
insb
mov
xor
sub
sbb
jmp
andl
xor
loopne
sti
test
insl
sbb
push
ds
jl
dec
xor
push
movsl
dec
int3
ret
cmp
test
je
fimuls
ret
and
sbb
test
scas
jae
cmp
rorl
lods
divl
in
mov
rcll
xchg
movsl
andl
popf
iret
aad
addb
add
aaa
push
xor
daa
je
loop
jne
inc
and
xchg
enter
cld
adcl
lods
add
and
loope
mov
mov
les
sti
subps
jno
pop
xor
jae
cs
lahf
flds
push
addr16
inc
or
add
xchg
push
into
pop
mov
dec
add
sub
nop
xor
fwait
xchg
dec
ret
loope
fldt
mov
or
xchg
mov
xchg
or
in
xor
mov
fnstcw
rol
adc
dec
dec
cmp
sub
repnz
test
sti
inc
cmpl
xchg
icebp
sbb
sub
std
xor
xor
loopne
push
inc
mov
jg
pop
cwtl
call
aas
xchg
push
sbb
adc
or
test
mov
lahf
xor
pushf
std
mov
lahf
out
add
call
mov
stc
shr
shl
divl
ret
insb
pushf
push
dec
push
cmp
arpl
sti
push
rorb
rcrb
dec
icebp
cmc
dec
aaa
ret
xor
sbb
or
jo
mov
xchg
xchg
icebp
fnsave
push
mov
fnstcw
shll
jp
sahf
cmp
aad
pop
add
pop
cmp
lds
push
sbb
pop
dec
imul
jnp
repz
sbb
jg
mov
add
data16
cmpsb
in
and
dec
loopne
leave
and
in
mov
xor
push
pushf
lods
pop
cmpsl
roll
nop
add
cmp
loopne
inc
mov
dec
and
adc
fwait
mov
mov
mov
daa
enter
mov
adc
mov
icebp
xchg
push
lcall
ljmp
adc
or
sub
mov
xor
loop
dec
and
or
jecxz
aas
push
dec
xor
push
test
or
sub
mov
push
jnp
xor
ja
loopne
paddd
jo
dec
imul
mov
add
mov
mov
xchg
sbb
in
inc
xor
out
lret
rcll
dec
mov
xor
and
cmp
aad
sbb
std
iret
aam
inc
sbb
inc
add
nop
pop
fucomi
stos
rcrl
sbb
lret
sbb
or
movsb
in
in
aas
pusha
mov
mov
sbb
addr16
shlb
scas
sarl
test
xor
outsb
dec
pop
jbe
dec
mov
ja
stos
popa
lcall
jno
in
in
ds
fld
xor
jns
add
xor
cwtl
pop
mov
sbb
fwait
push
add
mov
in
cmp
mov
fs
pusha
test
pop
push
push
mov
jle
bound
fnsave
pop
leave
adc
cs
or
loope
or
daa
es
loope
mov
sub
unpckhps
aas
or
movntps
jg
adc
or
hlt
cmp
enter
daa
xchg
push
jmp
or
insl
push
popf
lahf
adc
lds
adc
es
arpl
loope
lock
aaa
mov
and
mov
daa
jnp
rcl
dec
nop
adc
cmp
push
leave
ljmp
xor
test
fs
js
xorb
or
ss
fsub
out
fsubl
leave
gs
inc
push
mov
dec
cmp
adc
and
push
jmp
sbb
lock
icebp
inc
ds
or
sbb
dec
jno
dec
imul
in
fists
xchg
and
adc
out
jae
pop
out
pop
stc
aaa
sub
xchg
lds
xor
movsb
xchg
data16
mov
dec
loop
or
arpl
test
add
insb
sbb
mov
clc
movsl
or
icebp
cs
or
out
jmp
xor
cmpsl
adc
das
out
shlb
repnz
shlb
and
hlt
xchg
test
dec
mov
inc
stos
mov
insl
jl
pop
sahf
inc
imul
scas
jmp
fidivl
sub
jg
sarb
inc
lahf
and
jb
xchg
add
mov
xchg
add
stos
repz
dec
pop
in
mov
test
pop
lahf
nop
lahf
fwait
push
push
add
out
outsl
and
or
and
pop
mov
cmp
pop
stos
cli
enter
mov
xorb
dec
xor
js
push
pushf
rclb
sbb
adc
nop
insl
pop
mov
daa
mov
sub
in
lods
lcall
pop
cmp
lds
or
ss
loop
orl
push
cmp
mov
lods
adc
dec
xor
divps
leave
insb
popa
pop
and
jmp
pop
inc
lret
mov
jno
sahf
imul
sub
mov
jp
mov
jae
mov
or
and
or
lock
pushf
xchg
cmp
rolb
orb
out
popf
adc
sbb
sub
push
inc
stos
xor
das
shrl
repnz
push
lds
sar
loope
inc
sbb
jle
fdivrs
push
stc
cmpsb
fwait
push
mov
inc
das
test
dec
cmc
pop
es
jno
inc
int
ret
pop
daa
les
cs
mov
inc
inc
sub
jl
push
data16
pop
sbb
or
inc
inc
out
xchg
cmc
fstp
icebp
dec
dec
addr16
jno
pop
clc
rcl
inc
cmc
incl
jge
stc
cli
sub
pop
mov
loop
sbb
mov
aaa
dec
mov
js
sahf
mov
pop
or
test
popa
inc
add
movsl
movsb
in
scas
es
hlt
jbe
cli
xor
out
adc
hlt
repnz
jg
sub
cmp
or
push
sbb
mov
and
loopne
pop
call
mov
jnp
clc
fnstcw
enter
pusha
bound
shlb
daa
mov
push
jno
sahf
rorb
sub
mov
outsb
fistpl
mov
sub
hlt
rcl
shrl
cmc
or
leave
pop
xor
sbb
aam
xchg
inc
aaa
add
mov
frstor
fbstp
mov
ror
js
loope
mov
sub
mov
test
cs
imul
lcall
pop
dec
mov
cmpsl
faddl
in
or
scas
popf
mov
xchg
jae
pop
rol
pop
je
aam
and
adc
mov
cwtl
pop
ret
cmpsl
imul
dec
das
ljmp
rolb
or
xor
dec
orb
and
imul
jb
or
gs
leave
xor
jbe
jl
ss
rcl
imul
mov
roll
arpl
popf
lods
sbb
addl
cmp
gs
push
roll
mov
popf
pop
test
mov
sub
dec
jmp
jp
or
pop
lods
jo
icebp
inc
js
xchg
out
mov
je
test
sbb
out
sub
push
testl
xchg
ss
call
bound
nop
aad
mov
cmp
repnz
add
es
test
divb
insl
mov
xor
and
jl
data16
movb
mov
push
xchg
ficomps
mov
and
adc
loop
jle
rcrb
pushf
adc
gs
jae
and
lahf
push
adc
or
ss
imul
jle
mov
mov
hlt
jnp
sub
arpl
or
mov
hlt
prefetch
adc
rcr
add
stos
lcall
out
fs
mov
fidivs
and
das
adc
mov
cmp
mov
dec
outsl
push
test
or
ret
int3
lock
jp
flds
sbb
jecxz
cmpsl
push
arpl
mov
inc
int3
fldl
push
xor
bound
ds
push
mov
pop
or
mov
inc
adc
mov
cmpsb
ds
bound
movsl
push
xchg
add
test
cmpl
sub
insl
test
xor
xor
test
in
imul
sbb
iret
test
dec
adc
lods
or
lcall
xchg
pop
xor
sbb
je
rcrb
mov
xchg
adc
jp
movsb
or
lret
insb
push
dec
loop
hlt
cltd
dec
mov
jnp
or
lret
imull
setl
fbstp
orl
imul
mov
daa
jl
cmp
into
mov
dec
movsb
outsb
xchg
mov
test
fcompl
jb
aad
jb
sti
subb
push
out
cmc
mov
mov
dec
leave
xchg
inc
ret
xchg
pushf
rorb
lods
ficompl
mov
movsl
cmpb
shrb
push
jmp
insb
int3
xorl
push
mov
jle
sub
xor
pop
xchg
inc
sub
out
push
jmp
sub
pop
cmpsl
aad
push
loop
mov
clc
inc
shrl
enter
stc
icebp
mov
aaa
sbb
and
mov
pushf
gs
rorb
cld
cmp
dec
lock
jl
out
les
xchg
jecxz
mov
pop
xor
jecxz
leave
lods
fs
cmp
lea
in
iret
cmpsl
int3
sbb
les
jns
int
out
cltd
cmp
and
cld
loop
out
add
cmpsb
and
test
out
sbb
jmp
sub
xchg
mov
push
push
push
popa
enter
push
adc
ja
cs
nop
sub
imulb
rcl
cmp
fadd
mov
cmpsl
push
xor
ret
pop
lsl
push
nop
cvtdq2ps
jne
inc
inc
push
subl
mov
mov
inc
lods
dec
mov
repnz
call
fldl
popa
sub
fcoml
cmp
int3
or
jecxz
sbb
js
imul
xor
jno
lds
push
jo
cltd
cmc
std
fidivl
push
pop
in
pop
inc
cmp
and
pop
jae
jg
xchg
jle
mov
pop
dec
jp
cwtl
mov
in
inc
push
jnp
rclb
jae
lret
push
dec
mov
call
or
mov
cmp
fs
stos
pop
addr16
xor
outsl
jne
jle
mov
lret
sbb
outsb
sbb
fcomps
negb
push
and
lock
xchg
leave
out
inc
mov
inc
cmp
inc
pusha
fisttpll
loop
mov
mov
fsub
insb
and
pop
sub
dec
movsl
sbb
outsl
outsl
mov
test
xor
nop
sub
popa
cmpl
mov
in
outsb
push
xchg
sbb
and
loop
iret
loopne
sbb
js
fsubrs
popa
filds
xchg
jbe
mov
in
fdivs
mov
out
xor
inc
cli
xor
jno
adc
scas
dec
mov
iret
lds
xor
movsb
or
add
mov
add
cmpsl
ret
jge
push
jmp
adc
fucomi
or
push
jmp
adc
pushf
mov
xchg
je
dec
mov
testb
scas
add
add
inc
popf
sbb
and
fisubrs
cwtl
lret
fdivrs
lock
mov
and
enter
aam
inc
mov
sub
ficomps
push
adc
mov
mov
pushf
lcall
adc
sbb
xor
cwtl
push
dec
daa
out
fucom
pop
outsb
setb
ss
in
jle
popf
jecxz
lret
sbbl
push
mov
xor
fisubrl
test
lahf
xchg
push
pop
xor
repnz
fisttps
push
mov
or
xlat
and
or
subb
xor
xor
stos
dec
cmpsb
mov
das
jns
test
loope
inc
xchg
push
mov
bound
and
sub
sub
lea
mov
dec
lock
mulb
jecxz
iret
jb
xchg
adc
mov
xor
es
adc
outsl
inc
dec
fidivl
pushf
or
ds
int3
pop
fwait
xchg
mov
and
enter
pop
and
ds
xor
mov
das
lock
mov
adc
movsl
aad
mov
mov
dec
pop
bound
ss
ret
mov
pop
add
push
sbb
out
lock
add
inc
mov
hlt
or
pusha
shr
xor
and
repz
cmp
push
xchg
sub
rcr
xchg
pop
mov
popa
xchg
popf
xchg
cmp
clc
mov
or
push
fcompl
jmp
jp
aad
ret
nop
lock
popf
add
movd
pop
adc
in
mov
div
and
les
lods
and
sbbb
sbb
ljmp
lds
and
xchg
lock
pop
mov
stc
test
insl
clc
scas
insl
push
adc
pop
ficompl
sub
mov
loope
pop
push
dec
popf
es
mov
ds
not
ret
cmp
aam
inc
cmpsl
pop
lods
cmp
dec
jge
orl
loopne
jg
mov
adc
cmpsb
push
rolb
mov
sbb
movsl
lea
jbe
movsb
in
add
adc
test
in
test
std
cld
inc
out
jns
push
and
lds
sub
loop
orb
lcall
or
lds
call
int3
pop
push
lock
sub
sbb
aam
jecxz
and
or
pop
mov
adcl
jge
cmp
sbb
idivb
pushf
cmp
cltd
xor
inc
pop
add
shll
inc
imulb
stos
add
ficoms
adc
orl
shlb
gs
cmpsl
cmp
pop
push
xchg
mov
push
adc
negl
sbb
xor
out
jns
movsl
mov
into
fsubrs
movsb
xchg
jge
pop
dec
popf
jmp
pop
add
and
loope
mov
repnz
iret
sub
filds
shlb
pop
jge
call
or
mov
stc
test
stos
leave
test
push
fdivs
fsub
inc
xchg
mov
push
sub
and
fiadds
arpl
test
cs
bound
mov
sub
xlat
lcall
lods
decl
into
inc
sub
rep
sbbb
or
nop
loop
xchg
iret
jg
xchg
adc
and
push
leave
mulb
cmpsl
xchg
mov
adc
jecxz
int3
imul
out
sti
stos
movsb
or
adc
fucomip
jge
fiaddl
mov
push
and
pop
loopne
addb
adc
jecxz
jno
adc
dec
mov
xor
mov
push
xchg
sahf
movsl
pop
sub
dec
jbe
mov
or
cmp
rcrb
add
jmp
insb
xor
outsl
jae
sub
loopne
or
movsb
or
sub
sub
mov
test
movsb
cmp
fcoml
adc
ss
mov
ljmp
xorb
sub
cmp
inc
in
std
imul
xchg
ret
mov
hlt
sbb
xor
mov
scas
xor
jno
je
repz
outsl
ret
clc
jo
and
bound
inc
jmp
adc
push
xchg
mov
rcrb
test
lret
xchg
jmp
mov
test
movsb
aam
sub
jbe
jp
cmp
or
das
ljmp
jnp
xlat
mov
movsl
xor
push
lds
push
lret
stos
jb
popa
mov
jecxz
clc
cltd
add
hlt
xor
mov
xchg
jecxz
pop
bnd
lahf
ret
imul
inc
jbe
cld
xor
imul
repnz
and
mov
add
andl
add
mov
ficoms
daa
inc
leave
jb
mov
adcb
xor
repz
pop
xor
adc
push
inc
cwtl
js
mov
dec
stos
orb
insb
enter
mov
stos
xlat
jecxz
test
mov
ds
pop
push
or
pop
call
test
into
iret
xchg
std
pop
cltd
sbbl
out
push
push
jecxz
es
xchg
push
test
pushl
inc
mov
adc
push
add
push
push
cmp
in
in
std
pop
xor
mov
scas
loop
sub
test
imul
roll
jno
sbb
or
fmuls
es
adc
imul
insb
sti
xor
and
aam
popa
or
mov
imul
shlb
aas
gs
inc
icebp
sub
jmp
adc
push
lds
hlt
jp
paddd
data16
xchg
fmulp
pop
jne
inc
les
testl
jo
and
pop
leave
daa
rolb
add
mov
js
inc
testl
pop
push
push
enter
jge
stos
push
cs
inc
movsl
inc
or
rorb
mov
pop
cmpsb
inc
mov
mov
lea
sbb
adc
dec
jl
fdivrp
mov
aaa
in
daa
repz
mov
or
cmp
incb
or
adc
fnsave
or
inc
pop
mov
hlt
adc
xchg
dec
adcl
xor
in
xchg
pop
int
add
das
lds
mov
sub
mov
cmpsb
sub
xor
dec
mov
adc
xchg
aas
dec
imul
adc
and
adc
push
xchg
lock
imul
xor
dec
pop
adc
aaa
sbb
ljmp
dec
imul
dec
add
jmp
xchg
jb
sub
js
insb
aam
shll
sahf
incl
mov
xor
pop
inc
lock
jg
push
jne
mov
orb
outsb
inc
cld
cmp
adc
ds
vmovlps
cli
ret
popa
lahf
jl
mov
iret
xchg
sbb
sti
push
add
xor
xchg
push
scas
and
adc
fbstp
in
jbe
xor
sbb
push
mov
and
xlat
aaa
and
mov
sub
pushl
filds
dec
jnp
and
xchg
pop
fdivrl
loopne
dec
cli
in
cmp
mov
mov
out
pop
mov
incl
cwtl
mov
enter
cli
mov
add
xchg
inc
lcall
stc
outsb
arpl
sbb
aas
adc
and
cmp
loope
ret
sbb
push
fldenv
data16
mov
jo
mov
mov
cmpsb
jp
xchg
cmc
mov
dec
and
adc
sahf
add
je
inc
jmp
or
shlb
test
je
aad
inc
or
pop
cmp
cmpxchg
cmpsl
sub
aaa
stos
test
loope
pop
or
or
inc
out
lods
in
sbb
xchg
push
mov
pop
xchg
jg
lea
sub
sub
xor
push
push
pop
push
adc
adcl
pop
rcll
imul
or
add
test
push
insl
add
dec
gs
popf
outsl
bnd
push
in
fidivs
add
xchg
pop
fimuls
in
mov
jmp
add
pushf
stc
pop
xchg
ret
dec
mov
jecxz
cvtps2pi
ljmp
xor
ja
into
into
jno
sub
faddl
repnz
push
in
push
ret
jnp
cmc
aas
jmp
dec
in
pop
aaa
mov
xchg
out
scas
daa
stc
inc
in
js
lret
mov
clc
outsl
das
pxor
mov
push
cltd
arpl
roll
push
mov
pop
repz
cli
loope
push
jae
or
pop
scas
sti
dec
pushf
imul
popf
mov
or
pop
jo
add
imul
sub
es
movsl
adc
and
mov
out
cmpsb
test
sub
sbb
jb
mov
pop
add
out
adc
xor
xchg
outsb
inc
in
in
in
push
movsb
arpl
shlb
cmc
pop
popf
imul
dec
repnz
jno
or
in
pusha
adc
sti
int3
fstpl
sub
lods
or
jge
push
inc
inc
mov
ret
fcomps
sbb
cmp
cmc
push
sarb
pop
and
mov
aas
icebp
mov
subl
xchg
xor
mov
ror
cmp
loopne
adc
xor
mov
push
cmp
add
push
mov
mov
nop
inc
inc
loope
lods
cmc
out
adc
jae
or
sub
es
cltd
repz
ss
jno
and
mov
cmc
push
scas
xor
mov
aas
aam
outsb
add
and
inc
adc
fistps
jne
and
mov
push
mov
cmp
mov
ret
stc
xor
fisubs
and
xchg
cmc
mov
aaa
push
cwtd
sub
fiaddl
orb
dec
pusha
add
xorb
sbb
adc
jbe
xlat
push
pop
imul
sub
ret
sub
sub
and
pop
cpuid
push
sub
stc
loopne
mov
jge
inc
mov
mov
mov
test
mov
roll
out
and
inc
jno
pop
aaa
pop
add
jg
shrl
pop
ret
mov
ret
loope
stos
iret
and
test
jbe
js
mov
movsb
fdiv
push
push
dec
inc
jae
adc
shlb
addr16
push
push
or
lds
inc
data16
stc
sbb
enter
rcr
sarb
mov
pop
push
xor
add
daa
inc
imulb
mov
jb
mov
inc
and
aad
mov
jge
mov
sahf
pop
cs
das
jnp,pn
push
adc
mov
push
ret
pop
jmp
and
test
xchg
das
or
clc
lahf
sub
sbb
cwtl
mov
inc
sub
scas
adc
xor
sarl
cmp
stc
cmpsl
inc
inc
jecxz
xor
xchg
add
xchg
int3
push
loop
cli
mov
mov
push
imul
in
mov
sbb
repnz
insl
icebp
fs
je
pusha
pop
into
aad
movsl
test
aam
lods
sub
int
out
mov
test
mov
sbb
and
into
imul
mov
clc
mov
lcall
notb
lcall
sub
repz
push
xchg
pop
aam
adc
in
pop
fxch
push
std
mov
mov
mov
mov
or
into
sti
jbe
mov
mov
xor
into
push
enter
mov
xchg
mov
mov
pop
mov
or
cs
shll
shll
pop
movsl
loope
or
ja
mov
lret
add
in
xchg
lret
scas
mov
mov
arpl
insb
sub
pop
cmc
jae
int3
or
test
dec
or
xor
dec
imul
jl
mov
dec
add
jg
test
pop
inc
cmpsb
testl
pop
xchg
pop
icebp
cltd
pop
test
cmp
js
pop
ss
mov
inc
out
mov
mov
test
cmc
sbbb
sbbl
mov
in
movsl
loop
xchg
fmuls
popf
jbe
pop
jge
mov
or
daa
rcrl
jecxz
dec
negl
call
cltd
and
stc
mov
pop
xor
xor
add
in
scas
lret
lock
jb
mov
rcrb
mov
movsb
dec
loop
push
jb
sub
dec
dec
and
mov
out
push
pop
dec
cltd
sbb
jge
jmp
mov
mov
idivl
mov
sti
pop
cmp
cmpb
loopne
and
fcoms
jno
subl
mov
lods
mov
dec
test
fstl
into
xor
and
or
sub
mov
jp
push
gs
aas
data16
dec
mov
mov
je
pop
jo
jb
insb
xor
out
iret
jne
es
or
cmp
outsl
cli
cmpsl
je
test
mov
out
aam
adc
fisubrl
and
dec
mov
pinsrw
shll
les
ds
add
negb
incl
and
sbbl
lcall
insb
push
fnsave
xchg
mov
inc
popf
das
loopne
adc
rolb
roll
add
lods
cmp
push
sub
and
adc
icebp
jl
or
jge
incb
push
negl
gs
ss
dec
sub
fdiv
and
mov
push
inc
jl
insl
jle
adc
sub
int
sbb
fisubl
int
adc
std
adc
loopne
iret
sbb
cltd
stos
aas
lret
test
mov
dec
scas
cmc
mov
mov
lods
lea
mov
dec
leave
inc
mull
in
push
xchg
popa
mov
xor
negb
jecxz
xchg
jge
repz
xor
jb
out
cmp
mov
call
in
addb
out
movsb
mov
jae
cmp
test
mov
cli
cwtl
and
fs
xor
mov
mov
xchg
in
mov
jno
mov
test
std
xor
movsl
xchg
ds
mov
ficoms
jmp
lcall
imul
fildl
dec
push
fstpl
jb
sub
sbb
jne
out
adc
xorb
sbb
in
cmp
pop
lahf
pushf
mov
or
xchg
sbb
inc
jg
jle
fsts
adc
dec
sarl
inc
cmpsb
adc
add
mov
sbb
xchg
insb
sarl
setno
enter
adc
push
dec
mov
mov
dec
cwtl
mov
sti
mov
jmp
pop
insl
lea
cld
test
jge
mov
xchg
or
ret
and
stos
mov
fnstenv
push
imul
stos
dec
scas
jmp
jnp,pn
jecxz
mov
and
xlat
movsl
orb
or
jge
in
mov
xchg
mov
andl
test
int3
mov
test
pop
popl
lret
xor
push
daa
dec
scas
or
fnstcw
adc
out
lret
adc
es
jge
out
dec
add
inc
add
mov
sub
xchg
in
push
aas
push
gs
fnsave
push
fs
shlb
lahf
pop
mov
dec
mov
mov
cmp
mov
sbb
cmp
repnz
fld
pop
cmp
minps
dec
fs
and
cltd
mov
pop
cmc
scas
jae
xor
inc
fimuls
clc
outsl
adc
pop
ja
adc
rcr
jp
andl
out
cmp
imul
pop
cli
fs
push
xchg
stos
sarb
fcoms
loope
ss
data16
scas
loop
xor
scas
out
repz
sbb
ja
adc
jl
push
ja
fldlg2
shlb
sbb
std
rolb
jno
in
xchg
mov
xorl
mov
iret
cmp
je
dec
or
insb
mov
lds
xor
adc
popa
lods
outsl
and
cmp
mov
insb
ds
xlat
xor
xchg
call
mov
jmp
mov
sti
lea
push
addr16
insl
inc
setp
movsb
cltd
sub
xlat
imul
iret
lea
mov
aas
push
pop
jp
pop
std
cmp
push
repnz
fwait
xor
xor
pop
push
xchg
js
and
jns
subb
repnz
push
dec
int3
lret
enter
fisttps
mov
lahf
adc
mov
add
pop
pop
cmp
pop
mov
cmpsb
scas
lock
std
xor
xchg
inc
lock
js
pop
movsl
jp
ficoml
inc
inc
inc
adcb
dec
mov
pop
sbb
inc
out
fisubrl
cmpsl
iret
push
and
stos
movsl
loop
loop
inc
in
xchg
inc
popf
push
loop
iret
int3
cmp
cld
sbb
fwait
int3
add
pop
cmp
cmp
mov
addr16
sub
sub
sahf
std
or
adc
ss
out
xor
add
movb
pop
dec
aad
dec
aam
cs
pop
sarl
sub
cmp
xchg
hlt
adc
mov
stos
add
cwtl
xor
mov
mov
orl
cwtl
lret
push
popa
lock
cmp
test
movsb
adc
pop
push
nop
sub
aaa
dec
dec
dec
mov
ja
pop
cmp
js
and
pop
les
or
jnp
xor
mov
hlt
pop
mov
jbe
mov
in
leavew
jg
addr16
mov
nop
xor
das
insb
or
mov
mov
adc
fdivs
jmp
int3
sub
pop
pop
fimuls
in
in
ljmp
test
data16
xchg
xor
jp
int3
jg
movsb
and
adc
es
xor
sub
cmp
outsl
not
xor
sub
int3
rorb
sbb
enter
mov
icebp
jmp
mulb
add
sar
dec
sbb
or
stos
loope
clc
pop
out
mov
sub
mov
mov
or
int3
aaa
fs
and
push
imul
pop
nop
sbb
xor
fs
xchg
scas
sahf
inc
mov
cltd
addr16
aad
adc
inc
push
in
mov
pop
xchg
int
or
inc
rolb
inc
and
inc
lret
mov
xor
std
jg
xchg
iret
test
adc
xor
nop
out
sbb
jae
icebp
jg
jnp
adc
in
pop
enter
fstps
xchg
dec
xchg
add
stos
sbb
push
or
inc
ret
mov
sbb
mov
clc
xchg
loop
sub
cmp
pop
out
int3
ds
test
addr16
cs
xchg
in
sbb
scas
frstor
icebp
xor
or
test
pusha
sbb
shll
popa
fstpt
cli
xor
bound
jno
stc
cmp
mov
push
lea
shll
dec
xchg
ret
jl
mov
lret
sbb
inc
test
loop
loopne
push
icebp
and
jo
mov
pop
and
std
mov
jmp
outsl
jno
pop
cmp
mov
ss
pop
add
xchg
movsb
pop
dec
and
outsb
push
stc
xchg
sub
xchg
push
jns
adc
lock
das
dec
jne
add
cltd
mov
sub
mov
in
sub
ljmp
lods
sub
sbb
sub
jp
mov
gs
lds
test
lea
sbb
cmp
jg
xor
pop
clc
aas
jne
push
push
mov
pusha
aad
gs
push
inc
xlat
sub
inc
xchg
xor
mov
dec
or
sahf
jno
and
pusha
adc
jne
in
xor
sub
movsl
shl
pop
xchg
inc
and
jb
hlt
add
shl
and
dec
enter
cs
ret
into
inc
lds
jmp
faddp
outsl
mov
push
repnz
fst
sub
adc
push
jbe
and
imul
loopne
push
or
and
pop
repz
pop
testb
mov
xchg
fiadds
cld
lods
cli
adc
js
and
and
popa
outsl
in
inc
add
cmp
mov
dec
loope
mov
cld
rcrl
inc
scas
sbb
data16
ret
rolb
push
aaa
repz
loope
push
or
nop
gs
aam
flds
sbb
pop
mov
mov
std
je
mov
mov
test
xchg
stos
sti
mov
and
xchg
popf
orb
xor
sub
mov
incl
xor
pushf
xor
xchg
dec
jb
push
cwtl
aas
stc
cmp
mov
call
sti
cwtl
mov
iret
enter
mov
or
push
adcb
ds
aad
aas
cmc
xchg
icebp
dec
sbb
sub
lcall
pop
jbe
fldt
loopne
jp
cmpsl
push
hlt
jns
inc
cmp
mov
inc
jmp
mov
icebp
mov
jp
in
mov
dec
mov
ja
div
sbb
cld
inc
fdivrl
or
fs
cmpsl
mov
dec
orl
dec
insb
adc
cmp
cwtl
scas
out
and
aad
inc
push
cmp
sbb
je
in
dec
dec
adc
jp
dec
adc
out
sub
jbe
mov
lock
aam
push
stc
loopne
xchg
dec
ja
js
jle
jb
das
push
sti
imul
xchg
push
mov
lock
inc
dec
fisttpll
sub
fistl
out
mov
xchg
jle
outsb
cmpsb
in
stc
andb
push
pop
popa
movsb
inc
movsb
insb
push
loope
lcall
mov
bsf
xchg
dec
stos
ret
or
out
jae
jns
xor
or
movsb
ds
loope
sahf
inc
push
scas
adc
inc
icebp
mov
jne
mov
or
test
std
fcmovu
jb
enter
add
inc
test
pop
outsl
sbbb
ja
fcoms
repz
test
in
pop
fnsave
jns
aaa
ror
iret
cmp
add
test
inc
and
push
pop
xchg
clc
xchg
aas
mov
xor
jge
jle
xchg
and
adc
and
aam
aad
mov
push
dec
xchg
mov
and
push
int
jecxz
sub
sub
ja
int3
cmp
testl
out
or
or
bsr
and
inc
jp
add
fcoms
inc
sub
into
inc
orl
cmp
xlat
fwait
xor
mull
icebp
mov
imul
sub
sbb
insl
outsl
insl
inc
mov
ja
lcall
das
sub
lds
lret
fsts
bound
adc
push
mov
add
jl
cltd
mov
pop
push
scas
rolb
and
mov
movsl
shlb
out
adc
xchg
cs
roll
in
adc
pop
jge
imul
jbe
popf
xor
aas
xchg
pushf
push
lahf
sub
test
or
lods
xor
and
call
mov
rolb
cs
push
or
loop
adc
sarb
enter
subl
jecxz
popf
addr16
jge
dec
aad
bnd
stc
xchg
ljmp
int3
mov
ret
adc
add
rcr
or
lahf
jno
mov
mov
sub
xor
add
iret
jnp
repnz
test
mov
lcall
jnp
mov
movsl
imulb
js
cmpsb
ss
sbb
out
dec
test
push
push
data16
pushf
cld
loope
repz
pop
pop
rcl
adc
ds
ds
stos
jp
fistpl
xor
mov
mov
pusha
jle
scas
jb
fcoms
xor
and
ret
rol
mov
mov
jmp
dec
stc
inc
scas
lahf
inc
jo
lods
int3
or
xchg
mov
lret
rorl
outsl
push
mov
push
jno
stos
inc
aam
or
fwait
xor
xchg
mov
xchg
imul
lcall
inc
cli
lds
cmp
adcl
xchg
es
sub
adc
nop
push
pop
push
cmp
leave
scas
pop
fxtract
mov
or
scas
js
imul
insb
or
leave
mov
les
push
mov
clc
out
sti
pop
mov
pop
sbb
xor
xchg
sub
mov
jmp
mov
push
and
test
hlt
scas
xor
nop
into
out
push
mov
aam
iret
dec
mov
addr16
sbb
inc
cmpsl
lds
dec
adc
cmp
or
les
addr16
enter
rorl
sub
dec
or
inc
icebp
in
cli
gs
jno
pop
and
cmp
sub
rcll
inc
lods
sarl
push
jns
je
aad
lods
xor
dec
pop
les
inc
xorb
mov
orb
adc
jmp
test
clc
out
ss
mov
adc
out
pop
pop
xchg
mov
xor
mov
scas
cmp
push
in
pop
out
dec
lcall
bnd
push
pop
jecxz
sbb
inc
fmulp
arpl
arpl
shrb
push
ror
fidivrs
jae
jge
xlat
jnp
into
out
les
inc
and
fs
cmp
pop
loope
pop
jbe
dec
in
dec
or
cmp
fisttpl
aam
pop
out
bound
inc
push
lahf
pop
mov
push
sahf
outsb
mov
xchg
jmp
mov
mov
shlb
subb
sub
xchg
jp
xchg
and
repnz
pop
sub
fcomps
pusha
xchg
push
sbb
jge
adc
lret
jmp
loopne
jae
aam
mov
push
jns
jns
adc
sbb
or
mull
xchg
xchg
jne
shrb
sbbb
scas
mov
dec
lret
repz
nopl
repz
loope
cltd
inc
xor
xor
icebp
add
fdivrs
sub
insb
insl
cmp
movsl
or
pop
push
cltd
mov
mov
sbb
add
sbb
rcrb
add
mov
mov
xchg
xor
outsb
sahf
movsb
inc
enter
pop
adc
jno
mov
xlat
mov
cmpsl
xchg
add
fsubp
push
fldl
je
cs
pop
mov
sti
pop
je
mov
pop
ret
fcom
decb
and
js
lea
push
xor
ss
dec
hlt
lods
rorl
dec
pop
xor
loopne
daa
movsl
mov
jno
fstpt
into
adc
mov
add
inc
mov
xchg
inc
int
cmp
jg
push
jp
ja
fimull
outsl
lock
clc
ret
daa
fmul
mov
mov
repnz
repnz
pop
push
mov
fmull
pop
lea
sbb
leave
aas
dec
hlt
in
cs
cmp
push
aaa
cmp
add
mov
popf
jp
jl
ja
jge
scas
shrl
test
inc
cmp
ret
imul
push
cs
jge
iret
inc
mov
push
and
lea
js
out
icebp
mov
scas
xchg
mov
ja
shrl
loopne
lahf
jmp
jno
mov
arpl
xchg
add
ficomps
sbb
push
xchg
imul
inc
shl
mov
or
ja
pop
loop
aam
mov
gs
jle
mov
xor
roll
and
push
fwait
movsl
mov
xchg
push
mov
xor
scas
mov
nop
mov
outsb
sbb
cmp
add
sti
mov
xchg
mov
xchg
mov
sbb
mov
js
dec
inc
push
div
pushf
jae
pop
inc
mov
inc
mov
ret
aad
mov
adc
lret
insl
lods
test
inc
xchg
xchg
cmc
push
jl
cmpl
jg
imul
mov
push
sub
jbe
mov
sub
push
popf
mov
int
ljmp
pushf
rcrb
loope
lcall
fs
loope
lret
pop
mov
ljmp
mov
mov
subb
cmpsl
fst
sub
and
ja
fcoml
loope
inc
push
sbb
mov
xor
test
sub
add
pop
and
cvtdq2ps
jmp
jns
scas
out
movsb
add
clc
jge
ss
aaa
adc
inc
ds
cs
mov
addr16
in
in
lcall
loopne
adcb
arpl
jge
sbb
jl
dec
pop
mov
mov
pop
dec
loope
outsb
sub
test
outsb
or
xor
int3
mov
insb
and
sub
pop
out
cmp
add
aam
cli
outsb
or
and
fiadds
in
out
jnp
fdivrl
cltd
and
lock
jmp
xor
sbb
popl
lahf
xlat
pop
sti
dec
and
incl
adc
jmp
lahf
cmp
jne
or
push
rorl
cli
mov
xor
jge
pop
cltd
mov
fbstp
or
inc
aaa
fbld
lret
and
jo
xchg
shlb
das
int3
int
xor
outsl
push
xchg
addr16
sub
btc
xchg
mov
in
cld
cld
inc
scas
cli
shlb
mov
ljmp
mov
xchg
loop
mov
xor
push
or
xor
test
hlt
repz
jle
testl
scas
lods
sahf
adc
pop
cltd
stos
xchg
sahf
or
fs
xor
adc
fimull
ret
push
fcomp
adc
das
jecxz
mov
xor
xchg
dec
inc
aas
or
inc
or
sahf
pushf
popf
adc
adc
in
fcmovb
lret
fldt
or
xchg
jb
fwait
inc
std
sub
inc
dec
stc
pop
inc
insl
fcomp
push
cltd
xchg
push
lret
pop
xor
and
or
daa
push
inc
jg
pusha
pop
dec
fnsave
iretw
and
xchg
lret
roll
or
dec
mov
mov
jns
fldcw
push
sub
and
rcrb
iret
jb
fcmove
fwait
sub
mov
mov
mov
fmul
and
cmp
in
mov
mov
aaa
adc
data16
mov
psubq
pushf
addr16
aaa
arpl
pop
pop
push
iret
repz
popa
shl
insb
mov
lds
outsb
lcall
jno
inc
mov
jns
pushl
movsb
jne
dec
rclb
inc
insb
cltd
jae
push
aam
fdivrl
adc
enter
xchg
in
lea
outsl
mov
ret
mov
mov
loop
xchg
shl
mov
jge
mov
cli
aam
insl
int3
mov
mulb
add
mov
xchg
stos
mov
ss
data16
shl
loope
push
insl
lods
outsl
adc
cli
push
addr16
jb
cmc
daa
movsb
dec
insl
adc
sahf
and
mov
mov
dec
rcrb
mov
outsl
shll
outsl
cwtl
sahf
mov
lods
sbb
pop
push
dec
xchg
sbb
lds
cmp
pop
inc
sbbl
cmp
addr16
mov
add
sub
cwtl
push
mov
xor
pushf
xlat
fistl
push
mov
xor
jne
fistpl
mov
stc
fidivl
push
dec
movsb
cmp
dec
in
jae
fsubrl
inc
cmp
mov
sbb
adc
pop
movsl
ret
mov
sub
lods
pop
jg
leave
arpl
push
cmp
mov
addr16
ret
shl
mov
ljmp
sub
sub
inc
loop
in
lea
jg
pop
lahf
dec
jge
stos
jmp
pop
sbb
js
ljmp
mov
cmpsb
movsl
das
xchg
pop
sub
fidivs
or
mov
push
loop
mov
enter
cs
dec
sub
pop
inc
mov
cmpsl
arpl
pop
mov
push
xor
iret
andb
call
jns
js
push
jge
inc
clc
lcall
sbb
xchg
sub
fdivl
cmp
data16
in
jge
lret
test
ds
dec
mov
xor
mov
lret
shrb
cmc
fcmove
pusha
jnp
leave
mov
pop
push
add
mov
insb
dec
xor
cmp
xor
aad
loopne
scas
inc
insb
jl
and
push
clc
nop
and
cmpsl
and
lods
push
push
test
inc
jns
adc
fistps
ss
jns
or
push
les
repnz
or
xchg
call
insb
paddd
cmp
int
sti
cmp
out
out
inc
daa
je
movsb
dec
xchg
mov
pop
or
cmp
inc
inc
or
mov
mov
lcall
xor
mov
ss
adc
and
fstps
stc
stos
nopl
nop
xor
pop
add
mov
lods
cld
push
pushf
out
adc
aam
dec
cmc
in
pop
fisttps
push
popf
jp
pop
push
inc
sahf
mov
xor
push
mov
cmc
scas
dec
cmpsl
adc
add
les
incb
xor
mov
test
ds
xor
inc
test
fidivl
push
loop
inc
cmc
push
adc
rcll
or
sub
mov
mov
xchg
lret
push
out
cmp
aam
mov
sbb
sub
clc
repnz
sarl
xor
out
ds
outsb
inc
adc
or
out
int3
pop
fimuls
loopne
ficomps
inc
lret
mov
sbb
mov
popa
repnz
pop
push
js
mov
xor
cmp
gs
sti
stos
hlt
cmpsl
xchg
mov
push
jle
xchg
push
cs
and
mov
adc
test
lret
jl
mov
xorb
pop
jecxz
mov
xchg
mov
mov
jg
gs
dec
div
stc
mov
imul
mov
loope
xchg
xchg
and
nop
in
pop
les
xor
cmc
fbstp
pop
call
movsl
cs
arpl
mov
jnp
lcall
push
lret
sbb
and
cmpsb
scas
add
and
testb
cmpsb
loopne
aas
add
fwait
lods
test
cmp
loopne
test
aaa
fistpll
pop
in
pusha
dec
pushf
pop
in
arpl
dec
or
push
xchg
outsb
lds
push
ret
sbb
jno
xchg
push
insl
ret
jle
push
pop
mov
dec
cmpsb
jo
addr16
sub
adc
mov
aam
xchg
xchg
mov
inc
pop
xchg
arpl
mov
inc
mov
aam
xor
mov
adc
std
nop
inc
pop
loop
fildl
je
inc
xchg
cmp
cmp
mov
push
int3
jnp
dec
sub
mov
sub
aaa
divl
xchg
repnz
dec
lcall
cmpsb
movsl
sbb
sbb
mov
xor
nop
mov
das
aam
shll
push
mov
adcb
scas
xor
idivb
adc
mov
stc
inc
jnp
pop
add
inc
pop
loope
dec
or
in
jg
cmpsb
mull
jno
and
and
mov
sbb
add
insl
add
negb
mov
jg
inc
dec
scas
mov
outsl
int3
jnp
and
cmp
pop
mov
push
jge
xchg
mov
pop
jae
mov
inc
and
cmp
in
cmpsl
mov
mov
lds
jb
cmp
fmul
pop
xchg
cli
xchg
mov
orb
xchg
ja
cmp
sbb
fucomp
shll
icebp
cmpsb
fdivr
push
jge
enter
mov
test
loopne
pmullw
ss
adc
in
into
out
pop
mov
pop
xor
adc
sbb
adc
cmp
js
pop
lahf
mov
aad
int3
pop
lock
popl
iret
cmp
jle
or
int3
fcomi
jmp
xor
xor
and
add
stos
xor
mov
cld
mov
pop
pop
ljmp
cli
scas
mov
or
cmp
outsb
lds
lds
jge
clc
push
mov
xor
into
mov
sub
pop
xorb
fildl
loop
stos
mov
mov
movsb
inc
das
aam
daa
outsb
stc
sbb
sbb
mov
adc
xor
imul
jne
in
fists
insb
jle
cwtl
fs
popf
sub
push
loop
fdivrs
out
les
leave
cmp
mov
fdivs
jne
es
shll
lock
sub
aas
js
test
mov
lods
outsl
adc
pusha
divb
xor
fnstsw
cmp
lret
mov
shlb
adc
dec
fucomip
jns
not
lds
and
xor
mov
add
lods
or
mov
fsubl
xor
adc
push
dec
or
ret
sbb
gs
ss
leave
subl
enter
in
jecxz
fwait
jo
test
xor
mov
jg
inc
mov
mov
mov
mov
subl
fsubr
icebp
out
pusha
add
lods
enter
stos
test
push
popa
lods
cwtl
rorl
hlt
sbb
xchg
push
frstor
adcb
cmp
into
sub
push
je
ret
add
push
jbe
test
add
push
inc
divl
das
xchg
sbb
cmpsl
test
jno
mov
sub
negl
xor
in
std
andl
xor
cli
dec
clc
add
lods
mov
sbb
sbb
sbb
jge
lret
and
arpl
add
lahf
sti
or
ja
dec
jg
pushf
sbbl
stos
inc
adc
mov
cwtl
dec
or
mov
negb
dec
or
sbb
hlt
flds
push
xor
xchg
pop
mov
pop
clc
dec
js
and
sbb
mov
push
inc
cli
inc
jbe
jmp
les
mov
xchg
dec
out
in
lea
and
jg
pop
test
lock
inc
es
sti
subb
cmpsl
sub
ss
mov
sub
shrb
mov
repnz
test
inc
ret
in
mov
sub
aas
movsl
out
dec
cmp
adc
xchg
fucom
xchg
ljmp
cli
cli
or
jecxz
pop
cmpsl
xchg
notb
ja
mov
repnz
sub
sbb
repz
pop
sub
shll
jne
mov
test
test
add
jne
jno
mov
add
ds
and
sbb
iret
inc
pusha
lods
pop
and
fidivrs
cmpsb
es
lret
sub
fsubl
sar
add
inc
imul
sbb
jae
jle
fnstsw
pushf
andl
fcomip
push
xlat
push
mov
mov
cwtl
inc
inc
xor
xchg
shrb
add
leave
xchg
mov
mov
ret
out
inc
enter
xor
pushl
jl
jle
sub
std
lret
mov
bound
fsubrs
lods
out
sti
cwtl
xchg
inc
or
lret
or
fsub
aas
lock
jg
mov
sbb
jnp
or
mov
jae
pop
stos
push
daa
adc
cs
push
clc
fcmovnbe
xor
push
iret
dec
sbb
incb
popa
jns
insl
sahf
jno
xchg
idiv
into
int3
rorb
loopne
loopne
pop
jbe
cmp
popf
mov
aam
sbb
mov
xchg
dec
cmpsb
xchg
cmpsl
inc
pop
sbb
ss
adc
fadd
jecxz
ljmp
inc
mov
fldenv
dec
decb
cmp
addr16
cmp
ret
ret
imul
mov
lcall
mov
dec
cltd
std
cmp
fs
add
xor
dec
fdivr
and
lock
popf
and
xchg
test
fwait
inc
adc
cmp
lock
loopne
mov
add
outsb
test
arpl
out
adc
mov
jo
push
and
int
fwait
mulb
mov
mov
loop,pt
dec
repnz
and
mov
inc
imul
mov
jp
cwtl
imul
pushf
xchg
pop
rol
jbe
xlat
mov
push
push
cwtl
push
xor
lahf
shrl
or
xor
jl
shrl
or
popf
out
mov
popf
in
pop
idivb
rclb
adc
shl
int
adc
add
out
xor
int3
test
inc
push
jmp
out
test
std
rcll
call
pop
mov
les
xchg
je
pusha
in
jmp
add
inc
ror
ja
imul
xor
xor
fsubs
sub
je
js
cltd
jg
mov
push
xchg
sarb
fsubr
mov
inc
js
mov
lock
jl
jae
test
data16
xchg
and
repz
sub
inc
mov
push
loope
add
adc
icebp
and
xor
shl
outsb
pusha
adc
mov
xor
fmulp
mov
and
andl
sbb
or
scas
mov
push
fbld
add
nop
stos
jb
les
push
add
push
insb
pop
js
cmpsl
mov
insl
xchg
mov
pop
je
add
mov
data16
xor
inc
ret
sub
int
jns
jp
scas
ja
push
mov
and
test
push
adc
xor
lea
jb
push
jbe
lods
loop
test
jns
pop
cwtl
dec
fldenv
or
cmp
enter
stos
mov
mov
xor
addr16
ret
insl
movsl
push
push
mov
aas
or
or
jns
cltd
adc
mov
testb
leave
test
jno
mov
orl
shr
jo
mov
std
lds
sbb
sbb
jo
mov
mov
cmc
mov
das
dec
xor
mov
jae
stos
orb
clc
jp
cmc
sar
push
and
cltd
testb
adc
mov
addr16
xor
lods
imul
insb
mov
das
xchg
dec
jbe
imul
fs
mov
pop
pop
icebp
pop
sbb
scas
lcall
fcomps
push
mul
sahf
pop
sbb
jl
jns
and
inc
mov
mov
scas
sub
ds
daa
sub
pop
hlt
or
shrl
shlb
ror
xchg
pop
jns
mov
jge
jl
out
scas
loope
mov
loop
xor
xor
cmp
loopne
out
adc
xor
push
dec
in
push
ss
ljmp
je
inc
or
mov
fidivs
out
inc
mov
cmpsb
insl
enter
pop
in
dec
insb
inc
test
hlt
add
inc
mov
cwtl
push
dec
cs
mov
jnp
sub
test
loop
sub
ja
jns
mov
inc
cmp
mov
jne
or
push
xchg
shl
sbb
repz
pop
xchg
mov
test
fs
and
hlt
lock
insb
es
pushf
xor
inc
shlb
test
jne
test
out
dec
ret
jecxz
hlt
int3
mov
std
mov
sub
mov
mov
jecxz
stos
lret
cmc
insl
mov
jp
jns
rcrb
push
orl
mov
out
bound
or
xchg
dec
cli
adc
addr16
and
mov
or
cmp
jbe
sub
jmp
and
push
jp
cmpsb
xchg
sbb
add
and
push
arpl
xor
push
jecxz
fsubl
push
movsb
pop
inc
fs
pop
sbbl
rcl
cltd
out
int
insl
dec
out
xor
imul
das
mov
cmp
push
rcll
ret
adc
mov
add
mov
jecxz
push
dec
movsb
mov
dec
lods
jae
aam
cmp
jns
scas
add
jg
dec
lods
pop
fwait
adc
icebp
imul
mov
pop
sti
mov
inc
mov
xor
icebp
jl
sbb
jg
sub
or
les
aaa
fwait
cs
sub
mov
add
sub
arpl
cmp
jp
jecxz
add
lock
clc
mov
or
sub
push
push
pop
dec
dec
insl
test
ja
cmp
into
ficomps
xchg
cmp
sbb
pop
dec
stos
rclb
or
das
lds
cmpsb
loop
aas
jl
sub
in
add
mov
mov
sahf
sbb
test
or
push
fcompl
sahf
dec
pop
sub
jns
xchg
xchg
frstor
or
adc
mov
fsubr
stos
inc
xchg
cmpsb
pushf
mov
sahf
aam
mov
aas
sbb
sbb
rcrl
xor
or
or
add
cmp
mov
inc
push
ljmp
icebp
and
inc
lahf
mov
daa
mov
repnz
repz
xor
outsb
sti
test
jecxz
dec
out
mov
divl
fdiv
cmp
sbb
cmp
fucomip
xchg
roll
pop
xchg
adc
adc
in
lret
aas
mov
mov
pop
mov
js
fldt
mov
or
ret
in
and
pushf
imul
xchg
ds
pushw
mov
push
pop
es
jne
sub
pop
in
and
roll
in
stos
adc
addr16
mov
imulb
sub
or
repz
lahf
insb
xchg
fidivs
popf
mov
movb
sbb
cltd
addr16
cmp
mov
cmc
push
and
mov
xchg
jecxz
dec
cmp
mov
repz
cli
mov
test
outsl
xchg
in
pusha
cli
testb
add
sbb
pop
or
push
out
sbb
ja
aas
push
inc
rolb
pusha
adc
jb
in
mov
scas
cltd
or
lds
xchg
jle
pop
leave
hlt
ds
sub
outsl
aas
mov
call
rcrl
int
gs
xor
xchg
dec
lret
add
cld
sbb
sub
dec
xchg
repnz
adc
push
sub
cmp
or
push
jo
in
enter
mov
lock
loopne
mov
inc
pop
mov
mov
push
mov
out
lock
sub
popf
push
loopne
test
sbb
push
xor
repnz
out
push
or
pop
inc
lea
pavgw
in
scas
pop
sbb
sbb
mov
sub
mov
and
push
and
cwtl
sbb
scas
shrb
shr
xor
dec
mov
fldl2e
shll
xorb
cmp
test
das
mov
mov
jecxz
ficoms
push
lret
mov
js
aad
out
jnp
loop
rcll
mov
mov
push
dec
push
test
leave
xor
pushf
das
pop
icebp
inc
mov
arpl
mov
fsubrs
sub
dec
cmp
into
adc
xchg
push
xchg
xchg
or
or
cli
xor
mov
movsl
jmp
mov
call
xlat
pop
add
cld
enter
testl
mov
push
mov
lds
push
out
adc
push
aas
mov
ret
add
aas
xor
jno
jg
sub
push
stos
xor
sub
cmp
xchg
xchg
subb
jns
mov
ljmp
mov
aad
out
lcall
adc
ljmp
cmpsl
xor
xchg
aas
mov
jo
ss
test
aaa
jge
cmp
or
or
repnz
fcoms
scas
mov
sub
dec
jle
lret
fisttpl
aas
out
adc
sbb
fs
cmc
push
mov
fcoml
mov
sarl
addr16
sub
and
fimull
xor
dec
xchg
cli
adc
out
sub
push
add
jg
dec
adc
inc
pop
push
xchg
xchg
inc
sbb
call
decb
sub
cld
rcr
pop
cmp
xchg
cmc
pop
fimull
negb
mov
outsl
and
or
inc
test
aas
or
fstpl
ficoms
sub
push
xor
arpl
jb
cmp
test
aad
add
xchg
inc
adc
ljmp
fidivrs
pop
arpl
decb
inc
and
dec
lret
ss
int
mov
or
jmp
push
xor
pop
jnp
mov
insl
jae
imulb
mov
push
cmp
negl
adc
jb
cmp
mov
sahf
imul
or
imul
sbb
stos
pop
push
push
mov
pop
stc
shl
push
pop
int
pop
sub
fnstenv
adc
pusha
sub
or
inc
addr16
mov
xor
out
stos
mov
mov
mov
pop
insl
out
rcl
mov
inc
cld
mov
jo
popf
push
das
push
xchg
pop
imul
lods
mov
fcompp
and
xlat
adc
add
push
push
ds
cmp
adc
sahf
pop
pop
or
cli
fcomip
or
pop
mov
mov
inc
xor
stos
or
div
mov
xchg
or
ret
mov
nop
int
mov
bound
jl
mov
inc
sub
mov
mov
jp
push
and
xchg
mov
incl
setne
mov
jnp
sbb
jg
pop
pop
pop
mov
test
xchg
cli
xor
fstpl
out
aas
cmp
out
adc
add
push
inc
cs
loop
jbe
sbb
cmp
push
rcrb
fisubrs
sahf
cmp
mov
jbe
scas
pop
mov
dec
mov
sub
adc
mov
jb
call
ret
nop
mov
nop
xor
pop
ret
cmp
adc
loope
fs
fstpt
nop
fisubl
mov
cmpsl
ds
out
shll
dec
push
xor
dec
jg
push
movsb
push
and
sub
xlat
loopne
cld
lea
fiaddl
fists
mov
inc
jl
inc
lds
insl
aam
int3
bnd
in
sarl
push
xchg
int
jb
fbld
lahf
je
mov
dec
ljmp
imul
psraw
sub
dec
shlb
dec
push
test
and
mov
dec
jnp
fcoml
repnz
test
sbb
jne
fsubr
ss
cltd
dec
cmpsl
shlw
rorl
movsl
mov
and
imul
pushf
xor
pop
pop
das
repz
gs
gs
push
sar
adc
sarb
pusha
iret
fisubrs
clc
stos
in
inc
shrb
xor
xchg
jl
lods
xor
mov
mulb
in
sarl
mov
test
ljmp
mov
pop
and
mov
push
jg
sahf
fs
mov
cmp
lods
pop
jl
add
aad
and
jns
xor
cs
aaa
out
cmpsl
lret
adcb
dec
repnz
sahf
jl
mov
fdivs
push
mov
mov
mov
aad
add
in
or
bound
ljmp
arpl
rcrb
jmp
cmc
out
or
mov
or
jb
push
dec
leave
out
test
fsubs
outsl
or
pop
jo
or
mov
outsl
lods
faddl
inc
lods
jo
xchg
add
dec
test
dec
scas
and
into
mov
shlb
repz
pop
mov
idiv
decb
in
jo
push
jmp
std
mov
mov
loope
and
add
push
fiadds
adc
aam
sti
xchg
mov
jmp
incl
test
aaa
sahf
lret
cmp
enter
mov
and
js
sbb
rcl
js
pop
in
dec
outsb
repz
add
adcl
aad
and
mov
in
scas
popf
cmc
cmp
out
clc
xchg
fcoms
jb
xor
add
in
fdivs
dec
imul
mov
dec
lret
mov
xchg
xor
fxch
fdivrs
mov
lods
pop
das
invd
push
xchg
scas
fstps
test
push
test
mov
add
nop
and
imul
pop
test
fnstcw
pop
scas
rcl
pop
inc
mov
shlb
push
cmp
int
mov
iret
push
out
or
popf
js
push
icebp
cmp
int3
prefetch
leave
out
push
dec
pusha
mov
mov
in
pushf
lods
es
cmp
or
mov
out
scas
loope
sbb
inc
adc
scas
dec
sub
push
lds
clc
fmull
stos
mov
or
dec
out
xchg
jle
and
iret
adc
cmp
cs
mov
cld
xchg
stos
out
imul
sbb
inc
fists
shl
sub
jmp
mov
mov
pushl
push
pop
xor
jmp
out
mov
xor
jno
mov
adc
ret
sub
xor
outsl
fwait
mov
mov
mov
ja
xchg
scas
and
lahf
mov
fwait
rol
mov
aam
or
mov
out
pop
in
push
add
cltd
into
ja
hlt
dec
subb
mov
gs
jb
cltd
sbb
push
lahf
push
jecxz
push
out
or
inc
loopne
push
add
or
push
jg,pt
push
or
and
imul
push
xchg
es
or
xchg
jno
mov
push
sub
mov
push
leave
pop
in
insb
mov
pop
dec
mov
pushf
push
imul
divl
cmpl
sub
dec
call
sbb
data16
testb
sub
test
cmp
insb
sbb
push
adc
or
aad
mov
cs
cmp
sar
andb
in
mov
push
sub
mov
cmp
cmp
add
scas
push
fists
push
inc
call
call
sbb
lock
std
mov
repz
mov
jge
clc
sbb
jge
or
lret
cmc
sbb
xchg
and
shll
popf
testl
es
mov
into
mov
push
push
insb
jno
cld
push
inc
cmp
lret
sbb
dec
sub
push
jae
stos
dec
cmp
ret
dec
xor
aam
inc
stos
mov
xchg
test
add
sub
jae
and
xorl
cltd
gs
rol
mov
push
jl
add
jmp
adc
fistps
mov
and
repz
scas
repz
in
cwtl
mov
xchg
adc
xchg
testl
lcall
mov
andl
imul
clc
les
mov
js
test
xor
xor
xchg
stc
sbb
ja
cltd
push
cmc
or
adcb
cmp
pop
hlt
nopl
outsl
cwtl
sbb
xor
sbb
jl
mov
fwait
cltd
cltd
bound
pop
icebp
mov
xchg
loopne
jg
lds
sbb
jecxz
scas
adc
xor
fsubrs
es
pusha
roll
lds
fwait
stos
repz
xlat
adc
pop
in
cmp
movsl
mov
test
pop
xlat
dec
or
call
mov
inc
mov
pop
scas
sub
in
les
mov
xchg
rcrb
push
aaa
rorl
xor
mov
mov
rol
outsb
fcmove
xor
inc
ds
pop
jp
inc
pushf
push
in
push
jl
leave
pop
inc
xchg
mov
dec
cmp
mov
or
test
dec
pop
adc
xorl
and
ss
testl
mov
shlb
pop
jo
movsl
cmp
xlat
mov
fwait
mov
dec
adc
add
pop
xor
roll
sub
mov
idivl
mov
sbb
test
and
push
out
jle
push
lahf
jcxz
ret
mov
clc
sub
xchg
add
cli
xor
fs
lods
lahf
ja
ja
sbbb
in
push
stos
cmp
cmp
sti
or
sahf
inc
enter
pop
in
jmp
and
in
cld
mov
mov
mov
xchg
mov
push
adc
sahf
bound
jmp
xchg
repz
repnz
xor
mov
lcall
inc
cltd
cmp
gs
mov
dec
push
pop
xchg
jmp
sti
inc
inc
jno
lahf
ds
inc
fstl
xlat
mov
jne
pop
inc
je
sbb
mov
cli
outsb
push
fprem
nop
sbb
xchg
mov
loopne
lea
push
hlt
into
dec
push
and
adc
mov
nop
ja
dec
add
ljmp
out
add
push
sbb
jo
pop
xor
push
cmpsb
xlat
lods
test
mov
sbb
movsb
int3
mov
jg
or
clc
mov
mov
aas
leave
ljmp
loop
mov
sub
sti
push
jns
mov
ja
clc
pushl
roll
jg
xchg
cwtl
push
mov
cmp
sub
dec
lcall
fadd
sub
adc
into
into
or
inc
or
dec
sahf
andl
test
jmp
xchg
and
jbe
test
fcomip
push
mov
push
jmp
lret
movsb
mov
mov
cmp
xchg
adc
popa
pop
jle
pop
test
hlt
loop
sarb
inc
sub
sbbb
fcompl
in
imul
mov
test
sub
test
xorb
out
mov
push
sub
pop
mov
adc
loope
fcmove
in
hlt
lds
repz
out
mov
movsb
shl
cwtl
xor
add
mov
cmc
ja
xor
inc
cmp
inc
pop
rolb
mov
insb
outsl
mov
sbb
mov
xchg
sbb
push
mov
jecxz
inc
stos
shl
adc
jecxz
mov
mov
scas
jecxz
cwtl
clc
out
xlat
sub
ja
or
dec
and
jae
push
dec
movsb
jmp
gs
sbb
adc
jns
jmp
gs
jnp
mov
pop
int
mov
stc
push
xlat
push
mov
repnz
stos
xor
dec
cs
sbb
fistps
mov
gs
jb
jecxz
lds
inc
outsl
stos
jns
xchg
cs
std
aam
add
add
or
orb
ds
ss
xchg
jne
leave
and
movsl
fimull
inc
fcoms
jl
nop
mov
nop
mov
pop
sub
testl
mov
cmp
lock
jecxz
cmp
xor
aam
les
cmp
xor
aam
mov
aam
test
scas
out
xchg
das
cmp
pop
xchg
adc
inc
add
lea
test
aas
repnz
out
movsl
xor
cs
push
out
scas
aad
push
test
out
mov
sbb
mov
ja
fsubrs
int
mov
push
cmp
pop
xor
inc
xor
fs
mov
mov
stc
es
sahf
insb
pop
inc
or
inc
cwtl
push
mov
jecxz
imul
stos
arpl
or
mov
out
mov
movsl
and
jmp
jb
mov
fsin
xchg
or
icebp
jecxz
mov
fs
hlt
add
shrb
fwait
jns
lock
jae
into
inc
stos
es
mov
pop
xchg
or
outsl
repz
icebp
insl
test
add
mov
xorb
sub
int3
mov
mov
daa
pop
rorb
jmp
inc
shlb
movsl
arpl
mov
xchg
inc
or
push
inc
mov
pop
pop
xchg
insl
xchg
imul
mov
loop
gs
repnz
fucomi
lcall
scas
push
cmp
insl
out
xor
mov
mov
dec
mov
jmp
or
jns
lret
pop
cmp
adc
xchg
shlb
inc
mov
les
aas
inc
fucomip
inc
xchg
scas
mov
push
add
push
addr16
fstps
fisttpl
ss
inc
mov
mov
jns
out
cmp
scas
xor
in
adc
adc
ja
out
jl
push
adc
add
inc
stos
out
adc
mov
fnstenv
or
popa
pop
adc
test
push
dec
pop
shl
sub
int
fsubrl
icebp
inc
roll
adc
jmp
into
pop
aaa
inc
xchg
xor
and
jbe
and
test
std
aas
in
add
or
cmc
jae
sahf
jns
std
adc
or
les
mov
add
std
aas
das
xlat
dec
test
clc
xchg
fnstenv
out
loope
mov
pop
and
insb
add
sbb
pusha
or
push
testb
dec
jl
outsl
out
jmp
cmp
or
aad
fistps
dec
in
push
fmull
xor
sti
adc
std
ss
mov
mov
das
fdivrs
push
jo
hlt
cmp
hlt
loop
sub
jl
mov
in
sub
lea
jmp
loop
sti
pop
xor
in
adc
push
cld
mov
fidivrs
mov
add
inc
fldl
aam
lcall
xchg
cli
fsub
jo
inc
loop
or
loop
subl
xor
cmp
push
shr
mov
cmp
push
cmpsb
adc
xor
pop
fldl
stos
xchg
aaa
shr
fdivs
cld
je
pop
daa
fisttps
test
mov
inc
rcrl
inc
insl
dec
movb
fisubs
fmuls
les
flds
ds
sbb
push
mov
fnstsw
push
adc
mov
and
push
mov
cmc
imul
jb
sbb
das
dec
cli
mov
inc
sbb
or
addb
mov
popa
sub
cmp
xor
adc
jl
bound
iret
sbb
sub
outsb
jnp
sub
inc
pop
adc
jp
adc
sbb
fldenv
mov
xchg
mov
and
xchg
stc
leave
insb
mov
out
jbe
or
cmpsb
or
fcoms
call
nop
xchg
addr16
mulb
int
xor
xor
aaa
punpckhbw
in
daa
inc
jne
mov
rcrl
out
xchg
hlt
fs
sub
out
jle
scas
test
xor
xchg
pushf
dec
pop
mov
xchg
stc
sub
leave
sbb
fiadds
sbb
ret
mov
inc
jae
jo
ror
into
pop
or
mov
push
xchg
scas
imull
sbb
test
xchg
cmp
sub
cs
addr16
xchg
cmp
mov
repnz
cli
mov
insw
je
stos
aad
dec
cmp
push
mov
movsb
jbe
sbb
mov
int3
pusha
inc
jge
dec
mov
fdivrl
pop
cmp
lea
or
mov
push
hlt
and
cwtl
sub
into
gs
adc
or
xor
add
loop
lods
or
test
repnz
push
xchg
or
dec
xchg
mov
sti
jns
incb
push
stos
inc
pop
pop
jno
lods
xor
pop
or
push
rcr
popl
xor
sbb
cmp
mov
jne
push
dec
fisttpl
sbb
pop
rcll
mov
in
stos
enter
hlt
popf
mov
inc
mov
jg
push
ljmp
pop
icebp
dec
push
sub
aam
push
aam
jle
fs
sbb
fstps
aad
mov
lcall
jae
or
adc
push
dec
mov
into
cmp
outsb
ss
lret
adc
in
fstps
pop
aam
mov
test
ljmp
xchg
and
shll
adc
add
cmc
lods
jne
mov
xchg
aam
into
pop
adc
cmpsb
lods
fsubrl
mov
cmp
add
or
adc
or
jbe
std
inc
push
fs
popf
mov
cld
popa
cltd
test
mov
xchg
cli
neg
mov
stos
pop
mov
rcl
sub
sub
imul
sub
push
lcall
push
cmp
scas
or
mov
pop
inc
ljmp
mov
fcoms
fildll
mov
and
mov
stos
pop
and
mov
enter
inc
xor
or
cwtl
leave
in
mov
out
xor
add
pop
adc
inc
inc
mov
insl
and
adc
imul
jnp
cld
stos
cmpsb
push
std
mov
sub
pop
jg
push
ja
jp
or
int
xchg
adc
je
aas
xchg
icebp
insb
int
popf
gs
lea
ret
push
out
pextrw
push
outsl
inc
in
inc
jae
lret
pop
pop
pusha
sbb
xchg
jl
in
filds
nop
rcrl
pop
aaa
aaa
cmp
in
jge
jbe
lret
jle
cmpsl
in
cmp
bnd
mov
xchg
mov
adc
scas
mov
inc
in
repnz
dec
xchg
push
ret
dec
test
cmp
mov
int
cmc
mov
repz
mov
xor
es
add
jb
loopne
out
cmp
push
popf
je
insb
xor
mov
sub
adc
loope
mov
jp
out
xchg
jbe
mov
das
adc
test
xor
mov
bound
ret
cmpb
imul
mov
add
cli
lods
sahf
or
lret
or
and
scas
mull
adc
lahf
shlb
add
into
cs
lcall
cmp
std
ret
inc
repnz
mov
std
add
minps
inc
xor
dec
pop
sbb
enter
push
jb
sahf
fists
lods
fs
cmp
jmp
xchg
in
or
stos
stc
out
add
or
xor
or
mov
mov
test
cmpsl
hlt
dec
and
jb
out
inc
xor
xor
push
mov
xor
sbb
push
dec
lea
sbb
adc
bound
cmp
add
sarl
hlt
adc
in
xchg
mov
dec
lret
push
xchg
mov
aam
sarl
add
xchg
aas
into
add
cs
sbb
mov
inc
add
or
loope
cmc
out
sub
jmp
ficoms
inc
xchg
adc
mov
push
mov
add
pop
lcall
lcall
xchg
popa
sub
xor
popa
cmp
lds
icebp
jle
fbld
lret
adcl
das
xchg
push
xor
jnp
or
jp
dec
xchg
mov
and
out
adcl
dec
pusha
subb
cmp
dec
xchg
sbbl
das
lcall
loop
divb
sbb
movsb
fcompl
inc
bound
sbb
ret
xchg
sti
or
stc
jns
adc
mov
scas
ret
sahf
test
inc
adc
fs
lret
lock
and
fcmove
mov
stos
mov
in
dec
dec
jne
cmp
adc
ret
in
mov
inc
sub
std
cli
outsb
mov
mov
adc
sub
jecxz
dec
adc
push
push
ret
fmuls
bswap
sub
imul
xor
pushf
lret
mov
ja
pop
xchg
mov
cld
test
xchg
xchg
push
int
jp
pop
aad
lcall
push
fidivs
jb
adc
setae
inc
mov
mov
jb
mov
jne
test
push
in
jmp
push
add
add
inc
enter
pop
dec
sbb
and
mulb
aad
loope
inc
mov
cs
fstl
jo
and
inc
pop
xorl
jns
cli
lret
cli
jecxz
fisttpl
dec
and
xlat
mov
ljmp
pop
mov
mov
fimuls
arpl
insb
fimull
mov
mov
out
dec
push
les
arpl
push
push
push
inc
movsl
xor
mov
sbb
adc
stos
push
pop
lcall
xchg
xor
xchg
rcrb
push
inc
pop
ja
lahf
or
lods
mov
cli
push
ljmp
adc
movsb
imulb
cld
jns
jmp
pushl
jo
xlat
lods
scas
aas
fstpl
add
lahf
fdivl
xor
and
mov
jb
pushf
xor
xchg
inc
mov
mov
pop
mov
fcmove
out
adc
jge
loopne
xchg
loopne
sbb
push
fisubs
mov
xchg
mov
sub
repnz
xchg
insl
dec
pop
repnz
and
push
ja
xor
mov
in
mov
lods
push
sbb
cld
pop
sar
mov
sbb
push
loopne
test
or
pop
xchg
sbb
scas
int3
xchg
lcall
or
pop
cmp
in
push
mov
inc
outsb
movsb
lret
push
hlt
add
mov
loop
cld
xchg
and
stc
iret
mul
sbb
mov
mov
inc
pop
dec
pop
iret
mov
cmp
js
mov
aad
loop
cmp
call
idivl
out
fwait
and
and
dec
pop
cwtl
cmp
insb
push
fidivrl
pop
lods
xchg
sub
and
sbb
jnp
enter
xchg
dec
daa
mov
daa
add
push
cmp
ret
aad
push
lea
mov
sub
dec
gs
fldl
or
xor
mov
xor
lret
xchg
call
in
inc
out
aaa
dec
adc
repnz
mov
and
and
mov
stos
jmp
mov
add
mov
lret
cmp
dec
jno
pop
xchg
daa
test
mov
sahf
and
pop
pop
jnp
push
std
cmp
cmp
inc
push
pop
jae
push
push
push
ds
das
sbb
rcl
daa
push
fstps
nop
out
adc
pop
aam
scas
xchg
xor
xchg
or
mov
cmp
mov
pusha
inc
and
jmp
addr16
pushf
xchg
inc
adc
shr
cmpb
lret
cli
and
push
lret
pop
aaa
add
ljmp
mov
shl
cmc
dec
mov
cmp
push
cmpsb
mov
jg
jne
negl
insl
jle
mov
mov
lods
inc
mov
cmp
xchg
and
inc
lock
rclb
pop
repz
jge
daa
cmpsl
sar
push
ds
cmp
adc
test
add
in
cmp
mov
iret
or
sbb
outsb
fimull
fs
mov
jb
sbb
shll
push
mov
outsb
out
loope
xor
rcl
push
xor
shl
vaddsubps
and
sub
adc
repz
scas
jae
mov
mov
mov
and
or
or
sbbl
push
xchg
aaa
jp
jge
inc
inc
jp
subb
pop
pop
inc
mov
inc
pop
lods
dec
pop
jo
mov
cmp
fwait
imul
shrb
outsl
inc
pop
jmp
or
aaa
sbb
add
push
call
and
pop
pop
adc
fldt
xchg
mov
sahf
aaa
mov
lret
or
cld
and
mov
decl
adc
idivl
push
imul
sbb
std
in
shrl
shl
mov
xchg
sub
push
mov
or
movsb
and
and
sbb
add
or
fs
add
mov
lahf
addr16
add
jmp
jbe
mov
call
xchg
dec
mov
pop
mov
jge
mov
pop
mov
divl
idiv
jne
jmp
mov
jne
in
xlat
bound
fbstp
test
fldcw
loope
mov
out
cmpsb
test
fdivs
shufps
adc
jno
mov
pop
adc
lods
ja
lds
lds
lcall
mov
stc
movl
xor
and
cmc
mov
ficomps
ljmp
mov
inc
mov
jo
pop
fcomps
fistps
pop
sar
aaa
shlb
les
adc
in
pop
xor
push
cmpsl
and
add
jle
lds
adc
mov
ret
lret
push
adc
xchg
dec
cmp
mov
mov
pop
adc
fiadds
cmpsl
lods
push
pusha
stos
lods
cmp
icebp
fcomps
bound
mov
call
aaa
stos
out
mov
insl
inc
dec
stc
mov
mov
mov
rcr
mov
sub
jmp
and
test
daa
inc
mov
adc
loope
inc
mov
jnp
faddl
jno
adc
mov
mov
dec
iret
inc
loope
cltd
xor
ret
cmp
fildll
jg
arpl
adc
cmpl
arpl
jge
imul
jmp
lcall
cmp
in
in
xor
imul
out
fists
int3
rcrb
inc
push
outsl
and
and
int
cmc
scas
in
sbb
sub
in
hlt
xchg
jle
shlb
xor
repnz
pop
xchg
std
mov
dec
mov
add
push
and
pop
and
gs
sti
lea
pop
out
scas
xchg
imul
mov
xor
mov
ljmp
nop
push
loope
add
ja
xor
or
dec
jnp
roll
inc
push
jae
xchg
in
mov
xor
xchg
push
movsb
into
rol
mov
arpl
je
mov
push
dec
out
test
or
test
xor
dec
mov
repz
cmp
enter
cmp
mov
dec
leave
rcrb
push
pop
pop
xchg
dec
fildl
xchg
filds
fcoms
xor
add
dec
fcmovnb
add
fdivl
sub
cmp
emms
iret
pop
push
lds
mov
xchg
stos
inc
adc
fistpll
mov
daa
arpl
aad
xchg
xor
and
lds
mov
mov
pushl
sbb
sub
push
pop
scas
lret
jle
outsb
and
cmp
mov
cmp
ss
popf
xor
mov
pusha
out
push
addr16
jge
cmc
cli
cmp
lds
cwtl
inc
je
imul
or
orl
xchg
scas
mov
ret
jge
pop
sub
unpckhps
in
pop
or
lcall
lods
imul
mov
insl
insl
push
xlat
fsubrl
or
cld
lods
int3
loope
popf
mov
cmpsl
xor
rcl
jns
dec
shrl
data16
push
mov
gs
lahf
inc
sar
lcall
add
sub
push
mov
pop
mov
fcoms
out
pop
pop
mov
addr16
cmp
sbb
cmp
cmp
lods
push
or
shl
roll
vorpd
ja
xor
sti
jb
sbb
pop
push
and
inc
adc
xchg
notl
inc
sbb
xor
push
das
add
inc
hlt
test
and
pusha
push
fnstsw
out
xlat
pop
push
adc
outsl
jno
xchg
inc
and
inc
inc
pop
loopne
insl
bound
ss
pop
bound
hlt
pop
jne
jae
pop
pop
dec
das
fldcw
add
cmp
arpl
out
pop
mov
xchg
xchg
rclb
stc
jne
les
jp
jg
and
test
inc
dec
mov
pop
xchg
inc
adc
or
mov
mov
xor
mov
int3
push
je
pop
mov
out
call
and
inc
fiaddl
mov
in
pushf
lret
out
push
imul
data16
xor
mov
es
pop
pop
mov
sbb
pop
mov
in
sub
xor
lahf
outsb
sub
mov
pop
sbb
pop
aas
pop
repnz
shr
add
aam
inc
sub
lcall
ljmp
push
sbb
jnp
loopne
dec
sub
sbb
jge
ljmp
ds
mov
pop
or
aaa
cmp
scas
jns
rcll
push
lods
es
inc
sbbb
scas
fdivs
mov
gs
push
or
insl
fists
in
insl
cmpsl
push
mulb
mov
jmp
or
das
pop
clc
push
dec
jns
cs
pop
jmp
mov
jns
sub
mov
push
push
sahf
nop
cmc
inc
add
lock
jb
loope
adc
mov
jb
in
mov
or
pop
add
mov
clc
mov
push
stos
outsb
pop
ss
loop
mov
insb
sub
test
pop
cmpsb
xchg
fstl
mov
sbb
adc
fistl
mov
les
mulb
adc
sub
outsl
jno
scas
lahf
jne
test
leave
jl
push
gs
into
aad
xchg
push
jle
xor
mov
ret
dec
int3
popf
mov
jo
push
pop
mov
pop
repz
push
insl
fbstp
jne
xchg
cltd
in
cmc
push
jnp
push
fwait
add
jge
ret
sub
sbb
movsl
push
or
fwait
lret
xchg
cmp
loopne
pop
push
test
xor
cmp
loopne
pop
cltd
mov
das
fbld
jo
and
fwait
repz
mov
aaa
aad
pop
ss
fists
and
rcrb
aaa
xchg
xor
pop
loopne
in
or
jp
adc
jo
mulb
sbbb
stos
adc
pop
inc
sub
push
xchg
sub
mov
int
enter
call
mov
ds
scas
out
lds
cmp
inc
push
jno
je
in
in
andb
lods
icebp
fiadds
movsl
adc
adc
mov
jo
test
mov
testl
daa
and
int3
pop
arpl
push
test
cltd
mov
mov
bound
insl
jnp
push
sub
cmp
jnp
xchg
loopne
imul
jp
jnp
les
mov
xchg
or
and
lcall
in
cs
fcompl
mov
mov
cmp
push
xlat
popf
mov
jb
in
aad
pusha
or
lds
cmpsl
in
into
es
rep
jae
int3
mov
test
cmc
jg
call
or
mov
aaa
sti
jle
sarl
or
popf
xor
cmpsb
fwait
inc
sbb
stc
push
fstps
lahf
popa
dec
stos
iret
hlt
rorl
arpl
aas
popa
push
bound
loope,pt
inc
and
cwtl
bound
jl
sub
dec
insl
out
cld
fsubrl
xchg
std
push
int3
mov
cmp
in
in
xchg
dec
xchg
mov
outsb
aam
mov
jle
fld
xor
neg
shr
mov
jl
cmp
push
add
stos
into
ss
out
mov
sahf
fwait
pop
mov
enter
jecxz,pn
jl
mov
mov
xchg
jecxz
fistpll
mov
leave
xchg
sbb
sub
insb
ja
cmp
mov
data16
and
adc
jbe
test
or
jb
cbtw
jp
pop
dec
fwait
jno
jb
jns
pop
jb
sarl
xchg
lock
add
clc
into
pop
das
nop
int3
mov
pusha
icebp
sub
sbb
into
jl
push
xor
insl
mov
ret
xlat
adc
dec
xchg
out
jecxz
and
fnstenv
lock
mov
sti
cmpsl
loope
jae
outsl
and
and
mov
cmp
mov
test
push
les
into
dec
les
mov
xchg
push
cmp
inc
sti
std
pusha
mov
imul
in
iret
sub
push
sbb
jae
mov
repnz
xor
outsb
xor
adc
repz
dec
xlat
xchg
loope
inc
mov
pop
xchg
cmpsl
pop
dec
lahf
pop
pop
icebp
cs
pop
dec
mov
cmp
movsl
clc
add
jo
adc
push
lret
push
std
ljmp
jg
jmp
pop
out
jmp
mov
rcll
inc
dec
or
out
inc
test
nop
push
mov
and
in
data16
push
and
jae
xchg
imul
nop
jne
push
rclb
jmp
or
mov
sub
ret
mov
cmp
shrl
scas
pop
mov
pop
push
push
sti
nop
pop
push
int
call
pop
push
es
jge
pushf
cmpsb
rcll
sub
jbe
dec
pop
sahf
pusha
scas
loop
xchg
and
add
jae
push
std
xchg
add
imul
ss
or
pushf
push
sbb
pop
and
xchg
and
xor
cmp
and
flds
xchg
mov
incl
arpl
add
roll
lret
or
mov
and
sarb
sahf
push
dec
and
ljmp
mov
aaa
sarb
or
or
in
stos
pusha
sahf
push
jecxz
adc
out
aam
aam
cmp
mov
mov
mov
into
cmc
xor
add
push
or
imul
or
mov
sbb
jbe
pop
mov
addr16
xchg
call
icebp
sahf
xor
movsl
lcall
xchg
lahf
fcoms
dec
lret
movsb
dec
js
pop
fiadds
scas
mov
push
jno
scas
sub
out
add
mov
xchg
loope
test
mov
iret
and
and
mov
rolb
popa
fdiv
mov
adc
add
frndint
sti
mov
bound
negl
shlb
cmp
mov
arpl
cmpsb
sub
xchg
cmc
pop
push
inc
icebp
inc
add
sbb
cld
adc
push
aaa
pop
xlat
loope
data16
adc
push
stos
outsl
cmpl
imul
pop
mov
mov
xor
push
fiadds
adc
jnp
iret
add
adc
jo
pop
add
dec
loopne
xor
jmp
imul
clc
dec
adc
add
ljmp
pushf
add
mov
adc
pop
test
lock
xchg
mov
inc
pop
scas
adc
add
fistps
out
fs
jno
push
dec
push
andl
cmpsl
xcrypt-cfb
cmpsl
mov
fmull
movsl
push
xor
adc
cwtl
lahf
dec
cli
lret
mov
pop
sub
cmp
and
xor
daa
xchg
inc
jmp
pop
sahf
ret
int3
xchg
sub
popf
rcll
cmp
js
mov
popl
scas
jnp
ret
fiaddl
lret
sbb
mov
popa
jb
cmp
mov
add
imul
stc
stos
sbb
dec
inc
push
mov
xorb
mov
mov
out
in
push
les
jno
sar
jo
fwait
aad
js
ret
orb
stos
inc
cld
push
je
and
lock
sbb
sbb
or
cmc
call
insl
jecxz
scas
mov
dec
dec
sub
and
xor
hlt
dec
jmp
bound
roll
out
jns
jecxz
loope
je
sbb
mov
mov
ds
xor
adc
adc
mov
cmpsb
into
adc
and
mov
inc
mov
rcrl
push
divb
pop
out
pop
incb
sbbb
mov
sub
jl
mov
mov
dec
jae
les
add
scas
pop
mov
sbb
scas
movsb
stc
inc
sbb
dec
push
mov
sbb
xchg
xor
pop
arpl
dec
imul
xchg
mov
sahf
cli
mov
add
sbb
adc
sub
ficoml
add
dec
xor
dec
adc
cli
lods
mov
sub
sbbb
nop
push
aam
or
or
jns
scas
pop
xor
shlb
movsl
jnp
std
sub
inc
ret
lock
mov
aas
xchg
lahf
das
push
push
leave
dec
int
sub
mov
movb
addr16
mov
js
ja
pop
int
subb
sarb
arpl
pusha
fidivs
movsb
jl
mov
out
add
cs
xchg
jb
mov
add
and
ss
fsubs
js
mov
loope
mov
test
mov
nop
pop
and
push
and
jle
xor
out
cs
fimull
xchg
shl
jns
mov
adc
and
cmp
adc
ficomps
adc
filds
sbb
rcll
dec
ret
les
int3
push
mov
adc
in
repnz
jecxz
add
mov
rcrb
cmp
scas
call
inc
jnp
jl
fcmovnb
scas
dec
sbb
mov
dec
out
lea
add
jbe
and
lret
inc
dec
out
pop
add
xchg
mov
and
popa
sub
add
scas
xchg
inc
cmpsb
ja
shr
js
cld
call
xor
fnsave
sub
xchg
jb
mov
out
hlt
adc
push
lret
push
push
pop
pop
fmuls
sub
mov
or
xor
mov
mov
movsb
scas
into
scas
or
iret
jbe
cltd
push
in
inc
push
or
pop
pop
dec
aaa
sub
push
xchg
and
xchg
call
in
jle
lods
fstl
fwait
adc
cmp
in
jbe
iret
mov
in
pushf
loop
fcoml
jns
and
cli
gs
ffreep
sbbb
add
dec
sub
mov
sbb
mov
aas
popa
aas
cmp
mov
mov
int3
sti
cmp
imulb
jae
out
dec
cmp
sbb
xchg
sbb
lea
adc
lods
test
imulb
xchg
xchg
add
push
ret
pop
lret
mov
mov
jne
push
and
jo,pn
dec
mov
jbe
test
in
add
cmc
jecxz
push
stc
mov
inc
xchg
push
mov
into
stos
cmpsl
pop
cmpsl
cltd
call
lods
push
iret
out
lods
stos
dec
rcr
call
popa
lock
mov
xchg
ljmp
in
mov
aas
mov
dec
pusha
in
xor
fimuls
mov
cwtl
mov
push
jg
test
push
cmp
push
into
scas
push
fwait
and
mov
cmp
cltd
mov
ja
loope
mov
inc
sarb
fcoml
or
add
jo
cmpsb
and
jnp
dec
add
push
addb
and
or
mov
out
lock
adc
pop
daa
pop
imul
into
mov
mov
or
xchg
clc
ret
daa
fisttpll
add
cmpb
sbb
lret
int3
test
push
mov
push
fnstsw
push
adc
and
pusha
lretw
push
pop
out
out
in
daa
js
mov
bound
rolb
and
adc
gs
mov
imul
scas
out
mov
pop
or
pop
cli
push
mov
mov
outsb
and
push
mov
gs
lcall
or
stos
mov
mov
fisubs
movsb
dec
add
sub
icebp
or
dec
enter
xor
out
push
lea
mov
negl
ja
add
fst
addr16
lods
popf
shll
sbb
or
je
sahf
leave
out
and
push
push
jo
xchg
mov
or
xchg
or
xor
add
pop
xchg
aam
ljmp
lea
in
push
insl
xchg
dec
cs
xor
mov
mov
out
movsl
xchg
add
adc
dec
or
dec
mov
jno
or
sub
add
add
dec
or
fs
xor
or
push
je
mov
jecxz
arpl
or
or
testl
and
adc
mov
call
pop
scas
xchg
clc
ss
or
lcall
pop
sub
fimull
incl
xchg
data16
xchg
jnp
mov
shll
out
pop
aam
arpl
jo
xchg
push
lret
xor
xor
or
lea
jecxz
mov
cmc
xlat
ss
lea
rorl
in
js
ja
dec
add
push
sbb
adc
xor
add
dec
mov
mov
adc
ret
fisttps
mov
sub
sbb
jne
fistpl
gs
fists
adc
pop
jg
insb
cwtl
pop
mov
xchg
cli
push
pop
lret
sub
fs
or
or
pop
fimuls
enter
jge
cmc
and
les
les
dec
int
ret
xchg
lret
les
xchg
stos
lds
mov
or
inc
adc
mov
out
cltd
fwait
ror
fs
pop
lahf
and
adc
xchg
imul
xchg
inc
xor
add
xchg
mov
adc
adc
ret
and
aaa
sbb
mov
cmp
mov
dec
push
add
sbb
shl
or
and
xor
push
jbe
dec
push
ss
cld
inc
int3
lock
cmpsl
sbb
mov
fs
insl
and
jp
adc
mov
mov
push
test
fstps
in
jns
jl
test
mov
pop
push
gs
pushl
jp
xor
mov
jno
adc
cli
pop
out
mov
leave
xchg
xlat
cmc
adc
cmpb
outsl
and
push
push
cwtl
push
in
lds
mov
jecxz
dec
add
daa
stc
aam
pop
mov
sub
sbb
mov
loope
lods
in
or
mov
loope
cmp
or
mov
repz
mov
xchg
outsl
push
movsl
test
push
or
loope
popf
mov
nop
pop
shl
sahf
mov
cli
cmp
js
push
test
test
std
cmpsl
pop
inc
cmp
mov
pop
and
shlb
lods
icebp
leave
mov
cmp
jle
lahf
mov
lods
cmp
jmp
pop
xor
lods
leave
scas
arpl
cmp
sbb
lcall
cmc
add
adc
push
sbb
daa
insb
push
xchg
jne
pop
adc
int3
jb
pop
jnp
int
ss
je
nop
out
xor
dec
xchg
push
cmpb
or
mov
mull
adc
pop
pop
jne
mov
das
push
jl
dec
inc
push
je
cmp
dec
mov
inc
iret
rcr
sub
int3
mov
dec
fcompl
pop
imul
and
mov
inc
outsl
daa
jl
xchg
in
lahf
js
out
or
inc
loop
dec
ror
aam
insl
roll
jmp
js
dec
sbb
shlb
push
cmp
in
xorb
pop
dec
xlat
jae
pop
movsb
dec
ret
mov
xor
repnz
inc
mov
stos
xchg
lcall
stos
subl
ret
push
push
mov
imulb
inc
sub
aad
xor
adc
sub
jns
dec
adc
in
frstor
sbb
push
sbb
aam
pop
fcom
inc
lock
jle
sub
lea
push
out
cmp
int
loopne
xor
cmp
mov
sbb
mov
adc
dec
jne
and
repnz
clc
xor
pop
scas
jo
jp
insb
movl
pop
mov
or
loop
ret
test
cmpsl
inc
xorl
xor
xchg
add
aas
sbb
dec
sbb
or
jae
dec
cmp
sub
push
js
inc
addr16
sub
lods
test
out
dec
ss
nop
mov
dec
cmp
dec
xor
mov
add
add
push
add
jle
idivb
std
scas
or
lahf
jbe
add
iret
orl
push
jecxz
jmp
pop
adc
sbb
cmp
inc
mulb
arpl
lret
xor
push
pop
xor
adc
lock
cmp
loope
cmp
aas
movsb
adc
and
enter
or
js
lea
repz
ret
rorb
int
push
mov
bound
ds
stos
aaa
xor
cmp
pop
cmp
daa
xchg
cmp
jno
dec
pop
adc
mov
out
arpl
mov
adc
in
mov
xchg
or
outsl
int
xchg
dec
frstor
adc
popf
scas
xor
xorb
fidivl
scas
sub
or
inc
cmc
or
pop
xchg
pop
ret
repz
adc
jbe
push
push
dec
inc
sti
icebp
incl
lock
xchg
stos
shlb
mov
rcr
je
scas
in
xchg
les
dec
cli
fs
mov
cmp
push
xchg
push
jnp
dec
xor
insb
jbe
js
push
mov
outsl
sbb
ss
repz
adc
sbb
add
pusha
shlb
dec
cld
push
outsl
mov
adc
mov
mov
dec
jb
pop
cltd
pop
pop
xchg
insl
cmp
mov
xchg
cwtl
adc
push
xor
lods
cmp
and
xchg
aaa
aam
push
movsb
orl
lods
outsl
test
int
push
and
rcll
jg
push
int3
jo
dec
add
mov
rolb
push
mov
jl
ja
inc
pushf
adcb
fimuls
test
imul
pop
adc
je
in
jecxz
mov
jo
test
ds
jnp
and
mov
mov
stos
in
cmp
push
inc
adc
loopne
lods
or
push
aad
data16
or
fwait
sbb
mov
sub
adc
lret
push
pop
outsl
push
sbb
fsubl
sarl
pop
addr16
jae
xor
push
adc
popa
push
adc
sub
fs
test
push
push
inc
lods
and
loopne
test
mov
hlt
scas
jno
daa
incb
shll
es
dec
add
inc
mov
lock
incl
mov
push
mov
xchg
dec
xor
int
cs
dec
pop
mov
push
arpl
mov
movsl
mov
push
scas
ljmp
mov
repnz
adc
and
adc
sbb
sub
xor
stc
mov
arpl
pop
adc
imul
iret
subb
aad
push
scas
mov
dec
sbb
subb
cvtps2pi
fmul
and
mov
jo
pop
mov
ss
jnp
insb
jbe
fisubrs
jmp
outsl
loopne
orl
xor
mov
pop
push
pop
add
sbb
sbb
jnp
pop
adc
int3
xor
stos
outsb
mov
call
mov
dec
or
and
cwtl
out
xor
aaa
test
xchg
sub
out
fwait
or
and
cmc
fldt
lods
lcall
sub
push
dec
mov
outsb
ret
dec
out
sub
imul
mov
inc
mov
addr16
imul
jmp
clc
push
add
adcl
in
xor
jmp
dec
mov
pop
xchg
dec
in
lret
loopne
div
shl
pop
sbb
pop
jno
stos
sub
cmpsl
mov
sub
nop
mov
imul
push
dec
lahf
or
fistpl
xchg
ljmp
jmp
jle
insl
bound
lds
ret
xchg
pop
arpl
fs
ret
in
add
jp
addr16
out
stc
push
outsb
or
jge
pop
outsb
popa
jge
and
movsl
pop
pop
sub
dec
call
adc
shlb
xor
xchg
imul
adc
inc
test
sub
dec
push
mov
pop
ficoms
sub
dec
cmp
adc
sbb
scas
lods
rcr
xlat
add
push
les
imulb
push
jno
dec
stos
ja
xchg
out
test
mov
mov
dec
test
lret
arpl
mov
dec
filds
sub
jg
pop
push
cmp
xchg
call
jo
xchg
add
mov
imul
clc
or
push
xor
xchg
enter
clc
xor
pop
cli
inc
adcl
jecxz
sub
xor
not
roll
cmp
ljmp
fiadds
mov
aas
iret
call
ds
clc
ja
enter
cli
pcmpgtw
rcrl
ficoml
push
not
js
mov
mov
mov
push
jae
mov
jo
cld
adc
mov
stos
mov
into
in
and
inc
jmp
ret
cmp
rorl
jp
scas
notb
mov
mov
and
loop
inc
jg
sarb
into
in
stc
pop
mov
mov
xchg
adc
xchg
test
push
fsubrl
subb
sub
jecxz
cwtl
xchg
lahf
orb
in
daa
pushf
cmp
jo
mov
mov
outsb
movsl
cmp
enter
dec
test
mov
test
cwtl
mov
sti
mov
das
dec
out
aam
outsl
jle
sub
and
je
imul
rclb
adc
ja
sub
adc
mov
lea
cli
pop
aad
inc
mov
xchg
xchg
scas
out
or
stos
add
cmpsb
fcmovb
mov
add
mov
xchg
ret
mov
cli
das
ja
aaa
push
adcb
sub
push
insl
leave
lods
inc
mov
and
mov
xchg
mov
xchg
pop
out
nop
cmpsb
xor
mov
mov
enter
sub
cmp
aaa
repnz
jae
sbb
inc
dec
js
push
xchg
nop
test
jno
xsavec
repz
rol
hlt
or
mov
mov
add
adc
and
out
push
cltd
inc
fsub
jg
loop
jecxz
scas
test
cmp
mov
andb
mov
cltd
hlt
repz
mov
jge
or
push
mov
pop
rorl
daa
repz
les
inc
std
gs
ret
outsl
xchg
sub
popf
loope
mov
lods
repz
adc
pop
incl
and
pop
aad
lds
adc
in
fldcw
jmp
gs
push
int
push
and
pop
lret
add
jmp
mov
mov
movsb
jo
adc
jg
in
mov
sahf
push
roll
das
scas
and
sbb
mov
cltd
xchg
jmp
mov
adc
push
cld
adc
and
sub
xchg
cmpl
lahf
mov
jmp
arpl
outsl
in
or
ja
cmc
jo
push
mov
push
aam
and
sbb
jns
mov
adc
lret
and
mov
lahf
shr
lcall
or
jl
dec
mov
adc
push
push
push
sbb
loope
mov
xchg
dec
jae
ret
sti
add
add
sar
mov
iret
loopne
cmpb
mov
adc
inc
stos
mov
pop
pop
jle
sub
test
dec
adc
mov
pop
adcb
jl
pop
inc
or
lods
or
xchg
fs
pop
mov
mov
xlat
xchg
add
test
lahf
inc
imul
lahf
sub
das
dec
in
cmp
jmp
cmpsl
inc
mov
add
jl
jb
sti
xchg
inc
sub
sub
sti
dec
fxch
sbb
ds
int3
add
in
sbb
call
shll
ds
ja
sahf
inc
mov
sbb
int3
lahf
dec
jmp
xlat
inc
mov
push
movsl
int
jl
icebp
notb
adc
push
mov
arpl
dec
shrb
in
xlat
jnp
loopne
pop
xchg
enter
test
es
add
cmp
js
adc
xchg
or
push
lods
push
dec
repz
sub
ljmp
je
inc
nop
pusha
mov
fdivs
pop
mov
mov
cmp
mov
es
xor
loop
sbb
push
flds
inc
jnp
cs
movsb
insb
and
dec
in
ja
mov
adc
sub
in
and
lea
enter
hlt
inc
cs
fucomp
outsb
pop
sub
hlt
jnp
sbb
jno
xor
sbb
lods
dec
out
mov
sub
adc
mov
adc
cmp
loopne
pusha
and
scas
adcb
fdivl
and
test
fsubl
into
test
mov
movsl
mov
mov
jmp
cmp
mov
ret
cmpsl
repnz
lahf
jp
xchg
mov
inc
add
mov
mov
cld
xchg
cld
jle
lahf
xchg
lret
clc
xchg
inc
mov
add
xorl
or
mov
dec
lods
lret
lods
test
notl
jecxz
rorb
aas
outsl
mov
xchg
adc
and
int
scas
sbb
and
push
sub
cmpsl
push
jns
andl
js
jp
cmp
lcall
popf
nop
fdivrs
xor
rcl
data16
and
push
mov
dec
xchg
xor
imull
push
ret
in
adc
jae
lret
cmpsb
int
out
add
testl
fisttpll
cmc
jp
push
mov
sahf
or
dec
lea
jle
adc
dec
inc
jns
xorb
jecxz
cmp
and
mov
inc
inc
add
xor
outsb
cmp
sti
fucomip
mov
xchg
cmp
flds
sbb
inc
xor
cmp
and
jmp
cmp
xor
xor
and
push
cli
dec
mov
mov
adc
pop
lods
mov
test
dec
adc
xchg
dec
or
lock
ljmp
in
sub
shufps
addl
divb
pop
out
jno
sbb
es
leave
pushf
or
icebp
sbb
lds
int3
mov
aam
push
pop
mov
aam
std
bound
push
aas
mov
cmpl
lret
push
lods
lea
inc
enter
loop
repnz
pop
enter
xor
sub
mov
add
mov
add
push
enter
out
pop
jne
repz
mov
outsl
push
popf
cmpsl
adc
orb
fidivrl
stos
insl
mov
xchg
in
out
mov
lods
fdivp
int
cs
push
add
sub
stos
rcl
lods
push
in
push
xor
sub
or
call
aaa
xor
dec
iret
push
loopne
rcrb
into
outsl
lods
test
mov
roll
mov
js
push
scas
and
adc
out
add
cwtl
jno
adcb
imul
push
sbb
add
xor
sub
inc
mov
aaa
jmp
sahf
out
loop
daa
pop
jmpw
sbbl
adc
pushf
cmp
dec
xor
push
mov
shll
mov
inc
jecxz
ds
inc
insl
fs
out
das
stc
mov
dec
pop
push
cmp
and
add
push
sti
sub
jbe
aam
and
dec
jbe
rolb
cmpsl
notl
push
sbb
fbld
mov
cmp
out
loope
push
xor
mov
lods
xor
subb
loope
nop
add
in
fs
mov
pop
in
push
popa
in
mov
pop
xchg
adc
rcrb
ja
inc
jb
cmc
clc
or
es
adc
fimull
cmp
xchg
cmp
lock
and
push
hlt
mov
repz
adc
push
xchg
or
cmp
xor
push
xchg
lock
lods
mov
jl
hlt
fistps
xlat
push
out
jmp
or
or
clc
loop
icebp
add
xchg
or
xchg
shr
outsl
daa
pop
ja
sti
cwtl
lods
and
pop
xchg
cmc
mov
mov
cmp
push
and
leave
push
cmp
in
fucomp
mov
xor
mov
dec
mov
loopne
jbe
cs
and
js
pop
add
shl
daa
xchg
loope
mov
push
adc
add
or
jge
push
cwtl
insb
movsb
js
pop
dec
pop
inc
sub
std
sub
data16
sbb
jae
jnp
xchg
dec
out
push
bound
pop
xor
pop
and
outsb
xorb
in
sbb
pusha
sub
ss
cmc
dec
or
adc
rorl
in
test
inc
xchg
pop
dec
vmovups
cmp
dec
jno
xchg
xor
not
sub
and
into
stc
inc
xchg
fwait
jg
lahf
popf
adc
mov
xlat
push
sarb
jae
jl
xlat
je
aam
push
jno
xchg
adc
adc
push
sbb
popa
shll
pop
adc
xchg
and
cwtl
div
aaa
xchg
lea
fistl
push
shr
cs
cmp
test
in
push
mov
shlb
pusha
or
fcmovbe
xchg
mov
mov
mov
test
push
and
mov
dec
pop
lret
std
mov
xor
pop
sbb
push
lods
sarl
pop
push
and
xchg
dec
stos
inc
int
ret
cmpsl
xchg
xor
push
sti
cmp
andl
xchg
inc
into
repnz
lret
mov
xchg
mov
and
add
mov
pop
mov
cmpb
jge
cmp
test
and
mov
jecxz
jo
jns
and
pop
scas
decl
fists
xchg
mov
test
pushl
push
mov
pusha
sbb
das
xchg
jne
imul
in
test
into
mov
cmp
insl
sbb
sbb
lret
lods
mov
rol
inc
call
inc
cwtl
call
je
inc
jg
push
rep
dec
mov
lret
loopnew
mov
inc
insl
sbb
mov
lds
pop
add
pop
popa
sub
out
dec
fs
and
nop
clc
mov
fs
jb
xor
jne
dec
arpl
rol
pop
lret
and
cwtl
rclb
stc
dec
gs
cmp
iret
shl
cmpsl
mov
es
fmull
adc
shll
aas
mov
sbb
and
add
mov
stos
popa
mov
xor
push
outsb
pop
stc
or
adc
lds
xchg
jmp
or
add
sbb
lret
add
arpl
push
pop
xchg
pusha
jecxz
mov
ret
push
adc
add
pop
mov
test
sub
loope
add
aam
pushf
and
rorl
stos
lods
mov
sbb
sahf
mov
int3
mov
inc
or
sbbl
inc
pop
out
inc
xchg
mov
pop
sbb
inc
jg
mov
sbb
or
dec
cmp
rolb
cmpb
and
adc
iret
or
loop
int3
dec
mov
sbb
xchg
dec
sbb
sbb
mov
jae
js
clc
push
and
cli
push
leave
or
jle
push
mov
movsl
arpl
jnp
jmp
mov
jae
jg
cltd
add
je
dec
fldenv
das
mov
cmp
shll
cltd
std
gs
and
inc
add
mov
xchg
push
popf
sbb
adc
pop
fisubl
ret
mov
sbb
mov
xor
pop
mov
cwtl
jecxz
mov
inc
loopne
push
inc
mov
or
mov
les
xchg
pop
adc
sub
imul
in
mov
add
cmp
push
shrb
in
jg
xchg
bound
in
xchg
in
pop
out
mov
repnz
cwtl
insb
dec
je
inc
inc
cli
pop
sub
out
adc
subb
sbb
cmp
lcall
mov
out
rorl
or
aas
xchg
aaa
sub
push
xchg
cmp
hlt
push
pop
cltd
xchg
test
push
push
xor
shll
jle
pushf
cmpsb
fmul
xor
divb
add
lret
sub
insb
outsb
xchg
add
fs
leave
sub
or
loopne
xchg
arpl
xchg
popa
lret
push
push
mov
jnp
mov
cmp
enter
or
jmp
mov
and
enter
inc
push
sbb
pop
aas
dec
das
int3
mov
inc
test
sub
idivl
lods
lea
cli
push
sahf
fdivrs
hlt
in
lods
hlt
call
fmull
pusha
js
push
stos
cmp
pop
dec
sub
jns
and
push
out
inc
xchg
orb
and
aaa
sahf
data16
or
or
jbe
sbb
sti
and
jle
fistpll
xchg
xchg
rcrl
lods
fdivp
cwtl
jno
or
call
add
cmp
sti
cmp
cs
movsb
mov
mov
ljmp
arpl
inc
push
cmpsl
jle
xor
mov
mov
mov
inc
mov
loopne
repz
mov
loopne
mov
scas
dec
fmulp
mov
xchg
cmp
jae
lret
jp
inc
das
fwait
jmp
mov
inc
add
cwtl
rolb
jp
sbb
test
icebp
sti
addr16
sbb
sbbb
mov
dec
pop
dec
es
jbe
mov
test
in
int
popa
dec
pushf
xchg
push
scas
xor
xor
jb
dec
call
inc
jnp
push
fwait
lret
repz
sar
or
test
call
cmp
cs
addr16
incl
mov
decb
inc
aam
clc
movl
in
xor
jno
daa
pop
adc
mov
add
dec
aam
dec
sub
push
test
out
and
ja
gs
jns
pop
add
push
mov
xchg
adc
add
push
adc
lret
fs
cs
push
adc
out
pop
push
clc
ret
int3
repz
pop
jno
push
loop
cmp
inc
or
jge
cmpsb
inc
sub
adc
mov
int
cmp
scas
adc
in
mul
xchg
push
cmp
sub
add
pop
xchg
fisttps
aad
jae
adc
dec
cmpsl
in
repnz
lds
mov
cmp
outsb
data16
jns
in
aam
fwait
ljmp
ja
dec
movsb
outsl
cmp
addb
push
sub
cmp
nop
addr16
pop
dec
sub
ror
adc
je
dec
lret
pop
ja
arpl
stc
mov
inc
xchg
arpl
out
dec
mov
sbb
cli
add
scas
pop
sbb
pop
mov
jle
out
lahf
xor
icebp
imul
push
mov
inc
and
xchg
pop
and
jnp
int
push
arpl
inc
hlt
jge
jo
stos
pop
xchg
xchg
lock
jns
jns
lock
jns
arpl
mov
xor
insl
shlb
push
push
in
loopne
adc
mov
cmpsb
jecxz
clc
mov
ljmp
pop
mov
out
shl
jmp
fnstcw
cmp
and
adc
adcb
xchg
dec
repnz
imul
fs
call
mov
nop
fchs
push
rcll
push
sbbl
mov
dec
mov
lea
mov
push
cmp
mov
mov
mov
xchg
pop
or
sub
leave
dec
and
mov
outsb
push
inc
shrb
mov
dec
lret
test
inc
imul
enter
push
and
nop
leave
mov
stos
push
adc
vaddsubpd
adc
xchg
decl
push
cs
sbb
mov
push
pushf
push
mov
repnz
and
dec
in
out
pusha
dec
lret
dec
aaa
sbb
call
pop
int
add
xchg
pop
mov
stos
sbb
je
testb
mulb
rcll
sbb
add
mov
jl
repz
das
pop
pop
lret
loopne
sub
aam
and
lds
and
movsb
ja
sub
adc
lahf
rorb
fisttps
les
mov
xchg
fiaddl
push
scas
stos
bound
bound
lods
push
pop
ror
sbb
xor
xlat
jne
adc
test
jb
push
sbb
jp
fs
jbe
ds
cmpl
aam
enter
sbb
cwtl
ret
fs
pop
minps
addr16
cmp
mov
dec
gs
jge
icebp
ljmp
insb
jnp
cmp
xchg
sti
stos
loopne
push
add
xlat
push
jle
outsl
icebp
fimull
mov
loope
fcmove
xchg
push
imul
xor
fstps
sahf
or
sub
lret
in
lds
imul
sahf
movsl
sbb
mov
insb
sbb
enter
nop
adc
dec
out
mov
ljmp
xor
pop
mov
fbld
jmp
add
addb
lock
pop
movl
mov
ret
std
adc
imul
sbb
cmp
sbb
test
inc
leave
sub
jg
cwtl
pop
pop
or
mov
fidivs
xor
xchg
frstor
sub
ljmp
cmpsb
in
rcrl
sub
jecxz
out
mov
push
or
jbe
call
test
jbe
cmc
or
icebp
insl
mov
out
dec
xlat
xchg
xor
mov
cld
mov
es
add
push
and
push
xchg
rcrb
sub
rclb
popa
test
mov
pop
cmc
add
adc
ror
dec
fbstp
pop
dec
stos
push
dec
das
ja
cmc
xchg
hlt
adc
jmp
data16
rclb
add
icebp
out
bound
jg
das
cld
sarb
rcrl
jge
push
add
int3
sub
mov
cld
jo
out
ds
xor
jae
mov
js
stos
mov
arpl
or
stos
pusha
push
aad
jns
xlat
out
add
sub
lea
mul
jo
cmpsl
jns
inc
jnp
jo
inc
mov
lret
mov
mov
mov
push
adc
cmp
jle
jns
loope
dec
inc
fwait
pop
fidivl
xchg
xchg
int
cli
inc
add
in
sahf
lahf
shlb
dec
dec
mov
ljmp
int3
insb
pop
shll
sbb
pop
dec
cmc
in
outsl
dec
je
mov
js
outsl
outsl
je
mov
and
jae
sbb
out
pop
rcrb
xchg
fistpl
inc
sub
cli
mov
add
fstpl
sbb
rcll
xor
pop
xchg
mov
mov
jns
mov
in
pop
and
je
fldenv
gs
cmp
aaa
xchg
fimuls
cs
int3
sbb
add
stos
or
gs
rorl
mov
lds
pop
cwtl
sarb
mov
movl
test
adc
xlat
into
repnz
push
ljmp
and
cmp
hlt
sti
out
pop
scas
popa
movsb
sub
into
xor
loope
adc
fisubrl
or
cmpsb
roll
sahf
inc
xor
or
nop
pop
lcall
dec
arpl
popf
mov
add
rcll
pop
and
dec
jge
outsl
sarl
insb
jo
mov
out
cltd
or
mov
lods
push
xor
mov
add
xchg
mov
jmp
sub
enter
insl
cmpsb
daa
add
outsb
jnp
push
leave
dec
cmp
mov
dec
cltd
lret
add
push
cmp
lods
xchg
push
imul
fnsave
into
sbb
fsubl
repnz
mov
fcomps
shll
push
lret
js
xor
push
xchg
cmp
jp
push
mov
jo
xchg
mov
sub
jnp
and
aas
mov
outsl
out
dec
or
sahf
negl
sbb
pop
jp
iret
int3
addr16
aad
sbb
aam
sbbl
push
daa
fidivrs
dec
lds
or
dec
jns
int
in
mov
outsl
int
mov
dec
icebp
xchg
aaa
incl
subb
pop
dec
out
dec
cmc
popf
es
mov
mov
and
dec
xchg
inc
mov
push
inc
shll
inc
std
test
adc
lcall
push
mov
pop
xchg
and
pop
mov
lock
outsb
adc
fisttps
int3
sbb
cmp
mov
sarb
cmp
adc
mov
push
fmuls
pop
jne
aam
jge
idiv
inc
adc
push
lock
push
adc
add
cmpsb
jp
and
cltd
mov
mov
xor
mov
std
pop
stc
addr16
in
add
push
into
out
xor
mov
dec
js
insl
mov
inc
add
stos
cmp
push
inc
jo
push
mov
push
ret
xlat
loope
mov
sbb
mov
es
push
inc
xchg
stos
daa
jge
push
dec
cs
mov
jge
sbb
and
pushf
sbb
xor
jmp
outsl
inc
sbb
push
out
subb
xchg
stc
mov
mov
fidivl
pop
leave
push
lock
das
fmull
jge
jle
xor
jge
pusha
mov
sub
rclb
lret
sbb
mul
cwtl
xchg
or
lret
mov
aam
push
dec
pop
mov
int3
lds
clc
jp
mul
nop
inc
fstps
mov
pop
movl
sbb
sub
or
popa
popa
fisubl
xlat
ja
pop
xchg
idivb
outsb
imul
add
outsb
pop
lret
pop
lock
jae
lahf
cmp
fldt
into
mov
cmp
inc
ret
fwait
xchg
jmp
xor
dec
mov
into
sub
clc
sahf
sub
jg
mov
add
clc
cmp
xor
mov
daa
sti
mov
clc
imul
push
sahf
mov
andl
jo
inc
out
ror
xor
lahf
mov
lods
stos
push
dec
mov
and
or
aam
fmuls
ja
jno
dec
cmp
cwtl
jae
test
das
out
sub
mov
sub
out
pushf
in
faddl
mov
aas
aas
cmp
push
dec
inc
xor
sarl
ret
out
xchg
repz
fstl
ret
aaa
daa
mov
ret
pusha
shll
stc
adc
pop
xchg
mov
daa
fimuls
xchg
push
sub
fst
imul
movsl
or
adc
dec
cmp
int3
ja
rolb
sub
adcl
aam
rolb
xchg
jo
and
sub
mov
pop
lds
push
sbb
dec
sub
cmp
aad
inc
bound
xchg
inc
imul
xor
nop
imul
xor
inc
repnz
pop
lock
xor
jns
push
into
jg
inc
push
jecxz
mov
and
inc
ret
sub
iret
cmpsb
mov
sbb
xor
mov
mov
xor
inc
das
push
mov
inc
dec
push
bound
sub
insl
arpl
cld
in
mov
pop
fisttpl
aad
shrl
das
fdivl
ret
lock
and
add
adc
mov
xchg
pop
mov
or
push
scas
fcmovnb
andb
ljmp
movsl
mov
add
or
xchg
cwtl
add
xchg
mov
mov
test
das
daa
lock
popf
lock
pop
jecxz
push
lcall
hlt
mov
xchg
daa
das
push
lret
mov
std
test
sub
js
pop
outsl
pop
pusha
imul
icebp
enter
test
xchg
mov
shll
mov
xchg
xchg
cmp
mov
mov
pop
pushf
out
lods
or
es
cltd
cmp
lea
in
aas
dec
cli
ljmp
imul
pop
sti
add
push
pop
cmp
rcrb
pop
cmc
inc
aam
jo
loop
and
mov
push
or
loop
adc
outsb
fwait
stc
in
ss
push
fsubl
fwait
add
pushf
or
jecxz
lcall
and
adcb
fistps
sbb
sbb
rcll
movsl
dec
or
add
nop
mov
dec
mov
das
imul
roll
and
popf
lret
fs
or
popa
sub
dec
je
shrl
addr16
inc
mov
pop
sub
dec
pop
add
push
and
inc
subb
push
mov
gs
mov
sub
or
out
sahf
sar
push
jnp
lret
pop
repz
sub
mov
loop
pop
and
loopne
xchg
cmp
sbb
mov
mov
ds
aad
fwait
mov
stos
sbb
dec
int3
adc
shrl
cld
scas
jno
sahf
lods
dec
xchg
and
mov
movsl
push
sti
mov
lret
dec
lret
shl
repnz
jmp
push
fwait
jmp
sbb
add
mov
cltd
push
out
in
mov
xchg
sub
lock
pop
lahf
inc
pop
or
push
jecxz
add
stc
jmp
push
loopne,pt
and
cwtl
mov
sub
mov
pushf
aas
mov
shll
js
movsb
push
js
sub
jecxz
pop
jbe
jns
dec
shl
inc
mov
rcll
xor
and
mov
jl
aaa
orb
sti
frndint
ljmp
inc
xchg
in
cmp
pop
adc
and
mov
push
or
scas
cmpsl
dec
outsb
loope
aam
mov
repnz
xor
mov
mov
lcall
ja
insb
incb
dec
popa
sub
adc
movsb
movsb
jl
jb
dec
js
adc
sub
and
cwtl
out
pusha
popf
xor
insl
pushf
out
test
icebp
sub
xchg
sbb
sbb
push
outsb
xor
or
icebp
out
jmp
pop
xchg
frstor
mov
mov
es
mov
or
loop
adc
das
mov
out
dec
mov
iret
add
pop
push
in
jmp
pop
enter
mov
lahf
lea
sahf
fldenv
and
stos
jns
push
cld
and
rcll
xorb
shll
rorb
repz
cwtl
test
xchg
inc
pop
ret
adc
repz
xchg
leave
sub
or
call
lcall
sub
popa
and
mov
enter
test
xchg
pop
xchg
mov
add
fildll
sbb
xchg
bound
fnstenv
inc
inc
arpl
pop
insl
lret
clc
push
mov
into
out
adc
mov
cmp
sub
sbb
subl
xchg
mov
inc
ret
jg
lret
daa
lea
push
rcl
xchg
sub
pushf
add
pop
xchg
divb
jnp
movsb
outsl
fsts
into
xor
inc
xchg
stc
mov
mov
push
cmpsl
movsl
jp
adc
dec
idivb
out
sub
sub
scas
push
xchg
xchg
stos
dec
push
pop
pop
ret
dec
jecxz
pop
lahf
fsubrs
lahf
ja
pusha
outsb
lea
mov
es
loopne
psubq
inc
lahf
mov
lahf
jno
xchg
add
xchg
cmp
imul
pop
mov
mov
or
inc
mov
or
inc
add
inc
xchg
cltd
sub
lret
es
pop
cmp
popf
xor
adc
fwait
mov
adc
popf
ret
add
xor
mov
cli
mul
stos
ljmp
jb
inc
test
adc
sub
or
mov
cmpb
xor
loope
push
movsb
div
movsl
or
out
mulb
fadds
pop
in
out
mov
gs
push
lret
push
adc
mov
inc
stos
mov
outsl
ret
fsubrs
scas
popa
in
repz
movsb
icebp
das
ds
xchg
add
cmpsb
pop
dec
xchg
jle
xchg
and
lret
rorl
mov
fwait
mov
lahf
aas
dec
sbbb
xchg
clc
mov
mov
lods
mov
inc
xor
insl
pop
or
mov
lcall
xor
push
xor
pusha
loop
mov
ljmp
in
jo
cmp
lea
fs
ljmp
clc
jp
stos
in
scas
in
dec
and
mov
and
out
cltd
push
sbb
pop
mov
mov
jbe
lret
or
mov
pop
mov
cld
push
out
mov
jmp
jg
mov
mov
mov
sarb
ret
lods
xchg
or
test
xor
sti
xchg
sbb
dec
inc
lock
inc
gs
mov
popf
add
pop
es
cmp
jae
ficompl
vcmpss
adc
push
mov
mov
mov
mov
adc
mov
jne
loop
sub
jg
insl
xor
lea
shrb
or
mov
xor
adc
inc
push
add
cld
push
cmc
aas
adcb
adc
sub
dec
jmp
push
xchg
in
lret
xchg
mov
fisubs
adc
lcall
ds
inc
fwait
cmp
push
fiadds
pop
xchg
or
dec
sub
aam
mov
fwait
and
scas
push
rclb
cwtl
add
sub
loope
push
or
rcll
xor
lods
mov
mov
mov
jnp
pop
jo
ret
fisubrl
dec
scas
fbld
lock
mov
fldenv
jge
cmp
add
pop
adc
sub
dec
in
ret
and
pop
adc
loopne
adc
push
pusha
das
popf
sti
iret
int3
rcl
fsubr
xchg
dec
mov
or
mov
out
lds
ljmp
andb
mov
and
push
adc
iret
arpl
pop
idivb
jbe
insl
stos
or
sub
test
jg
repz
or
in
inc
mov
out
pop
sarb
int3
fs
mov
out
sbb
xor
and
pop
add
enter
and
mov
xchg
or
das
icebp
hlt
push
cltd
jns
insb
lahf
pop
dec
imul
and
add
push
mov
mov
pop
mov
fnstenv
std
xor
je
cmpsb
neg
fdivrs
lret
or
lea
xor
repz
sub
fsubl
in
dec
add
mov
push
fbld
fsubrs
pop
push
and
add
rolb
jnp
pop
lcall
or
jns
data16
pop
and
nop
push
cmpl
dec
repz
jge
pushf
xlat
or
shll
shrb
pop
mov
lret
cs
lcall
sub
jl
mov
lcall
mov
sub
out
pop
sti
je
repz
xor
cmp
mov
test
inc
sbb
mov
jp
movsl
mov
fs
jmp
cld
lret
pop
dec
cwtl
dec
ja
mov
inc
inc
pushf
mov
out
mov
dec
pop
idiv
lea
xchg
xchg
mov
scas
mov
test
nop
mov
mov
cmc
fbstp
add
fmuls
aaa
scas
popa
pusha
nop
ficomps
movsb
stc
gs
or
clc
mov
pop
jo
icebp
push
andb
scas
rcll
mov
negb
in
adc
sbb
leave
xor
mov
mov
nop
mov
xchg
mov
js
fcoms
mov
xor
rol
arpl
lods
lret
pop
sbb
mov
add
cld
push
xlat
decb
stc
aad
cmp
shrb
cmp
ljmp
inc
xchg
mov
mov
leave
outsb
icebp
and
pushf
sarb
pop
jb
repz
jno
test
mov
push
push
mov
mov
mov
shlb
insl
mov
mov
ret
cmpsl
lds
loopne
dec
mov
mov
jne
mov
mov
xlat
cmc
loopne
loop
mov
sub
mov
lcall
pop
xorb
mov
dec
or
cmpsl
mov
movl
jns
das
dec
and
cmp
jg
rorb
sub
mov
xor
pop
cli
cwtl
and
into
rcr
les
jo
inc
lods
cmp
or
fdivrl
sub
xchg
jmp
jecxz
clc
imul
inc
inc
sub
js
in
and
xor
stos
mov
push
mov
inc
mov
cltd
fs
andl
sbb
push
sbb
push
in
out
pop
and
mov
into
popf
push
xchg
jecxz
and
inc
call
out
jno
mov
and
xchg
pop
cwtl
mov
pop
xchg
or
pushf
or
mov
mov
rclb
jae
jge
out
addl
or
jg
sbb
or
cld
mov
into
jg
xchg
scas
movsb
inc
and
aas
out
hlt
mov
push
aam
or
pop
push
sub
lret
imul
ret
ljmp
lret
je
test
push
es
mov
mov
dec
or
in
push
mov
int
shll
iret
movsl
int3
ss
lret
adc
dec
loop
mov
adc
jb
repnz
inc
pop
mov
dec
xor
sub
movsb
add
sahf
adc
notb
sub
in
dec
les
pop
or
repz
push
popf
jne
pushf
mov
pop
push
in
and
push
les
stos
mov
sti
mov
data16
fcmovbe
popf
push
mov
mov
call
mov
popa
sti
and
js
cmp
pop
mov
cltd
test
jmp
aad
leave
adc
out
shlb
push
dec
push
jle
mov
xor
adc
push
cmp
jo
pop
sub
sbb
sub
dec
push
rcll
ja
cmpsl
sub
add
addl
jno
add
in
cmpsl
sbb
hlt
sbb
or
push
mov
xor
and
pusha
lock
xchg
cvtdq2ps
ficoml
pop
xchg
gs
je
push
inc
cmp
fldl
dec
js
ret
and
mov
fsubr
jb
mov
adc
pop
mov
fisttpll
sbb
dec
test
aas
pop
mov
cli
test
mov
mov
outsl
push
lret
int3
daa
in
fiadds
mov
sbb
push
out
mov
jb
fsubrl
xor
push
and
xchg
add
lds
int3
or
fldl
mov
arpl
mov
sbb
popa
jge
ss
rcrb
pop
mov
fiaddl
mov
dec
and
cmp
adc
stc
jne
xchg
lds
enter
mov
inc
pop
or
xor
lock
out
out
lcall
es
pop
add
jl
cs
scas
out
add
cltd
pusha
or
add
mov
cmp
popa
fistl
loopne
pop
jb
push
sbb
shrl
or
pop
sub
loop
sub
inc
xchg
loope
add
pop
imul
ljmp
ror
cmp
add
rcrb
rcr
and
push
bnd
jnp
adc
push
or
adcl
nop
ret
aaa
push
test
fcmovb
push
mov
fs
xor
adc
sti
pop
cwtl
aas
pop
movsl
and
les
cs
xchg
lret
sti
inc
and
dec
pop
jne
daa
loop
stc
mov
sub
and
ljmp
scas
mov
leave
adc
in
in
imull
sub
xchg
fdiv
gs
idiv
lahf
xchg
xchg
push
push
fildll
cwtl
inc
sbb
cmpsb
jne
data16
inc
mov
and
jne
in
push
cld
xlat
testb
daa
scas
popa
out
push
push
iret
and
mov
push
xchg
mov
cld
arpl
mov
and
mov
xor
cltd
ja
fadds
sbb
int
mov
xor
shll
add
or
les
mov
sarb
test
cmp
outsl
or
int
lcall
es
or
pop
in
test
fs
ja
dec
pushf
fidivrl
repz
cltd
cmp
dec
or
jmp
dec
popf
inc
or
inc
scas
lret
add
icebp
add
aad
mov
out
ret
mov
repnz
pop
negb
test
pop
dec
ss
lock
fisttpll
jno
into
or
out
das
xlat
daa
inc
std
adc
stos
and
in
fdivr
mov
pop
fcmove
adc
test
jge
movsl
aas
aaa
sub
fcomps
dec
imul
xchg
mov
in
dec
push
fcomps
dec
push
lahf
or
pop
fwait
rcr
xor
xor
add
cmp
sub
js
inc
jp
test
enter
push
xor
int
xor
lock
decb
sub
rol
push
inc
adc
ret
enter
cmc
jp
jb
test
scas
shlb
jno
xlat
xchg
push
les
mov
sub
pop
sub
inc
insb
cmp
jg
or
push
not
fnstcw
enter
stos
ljmp
shr
mov
test
hlt
adc
mov
into
arpl
cmp
push
mov
push
or
push
fcmovu
mov
dec
push
in
sub
add
mov
lock
mulb
sbb
hlt
pop
xchg
pop
lcall
rcr
cmpsl
ret
push
jnp
jmp
arpl
fistpl
cs
in
push
jmp
addr16
mov
in
xor
cmpsl
mov
mov
out
mov
movsl
sub
adc
adc
or
or
mov
mov
cmp
addr16
jns
jge
mov
ss
lret
mov
fs
pop
add
mov
xor
xchg
leave
xchg
scas
jo
dec
daa
push
gs
push
loop
mov
ds
fwait
xchg
into
inc
push
inc
inc
aas
out
mov
aam
or
repnz
mov
cld
jb
ja
lcall
out
adc
pop
mov
mov
aam
mov
xchg
sub
cmp
sub
test
add
insb
or
push
jbe
xorl
sbbb
sub
in
das
insb
jno
mov
or
std
fwait
cli
gs
pop
fsubr
insb
xchg
sub
aaa
ss
mov
movsl
jb
imul
cld
fistpl
xchg
js
insl
inc
and
sub
push
test
adc
js
cld
sbb
adc
pusha
adc
insb
in
xor
arpl
xlat
in
or
loopne
rorl
jno
ret
imull
lret
adc
xorl
sub
adc
das
mov
jne
shlb
mov
dec
mov
and
lret
mov
jp
xchg
and
xchg
out
fildl
lds
cmp
nop
loop
xor
shl
jne
in
cmc
sahf
je
inc
stos
dec
outsl
push
aad
sub
xor
pop
test
xchg
mov
jl
pop
push
pop
xchg
js
lret
sbb
lahf
add
and
fwait
cwtl
fcomps
ljmp
int3
cwtl
popf
xlat
cmp
sub
lret
cmpsl
jo
iret
cmp
sub
in
test
xor
mov
clc
cwtl
jns
rcrl
inc
pop
insb
add
lcall
adc
mov
ret
jne
jmp
adc
sbb
insl
pop
fbld
or
cmp
pop
insb
je
mov
inc
aam
jnp
pop
push
es
mov
dec
hlt
jno
push
shll
fsubs
das
dec
lcall
xchg
and
pop
sub
add
out
pusha
and
mov
dec
in
ds
lret
enter
movsl
dec
cld
imul
mov
js
div
fnstenv
pushl
shll
les
shll
mov
pop
mov
loope
ret
push
sbb
pop
cwtl
add
pop
cmp
mov
pushf
fisubl
inc
test
and
imul
mov
daa
roll
mov
add
into
cmp
push
mov
mov
mov
mov
jbe
cld
fldl2e
insb
adc
fwait
scas
pop
loop
out
rcrl
in
mov
nop
mov
push
and
das
mov
pop
loop
push
pop
pop
fisubl
push
dec
repz
iret
push
inc
sbb
xor
stc
push
jmp
mov
mov
push
je
inc
test
lcall
xchg
pop
jnp
pop
mov
inc
xor
push
or
stos
test
fcoml
psadbw
add
mov
es
mov
xchg
lea
loop
dec
xor
jle
xor
rcr
inc
inc
xorl
je
sbb
pop
xchg
mov
jmp
cmp
sub
mov
orb
scas
add
mov
ljmp
jg
jbe
sbb
xor
test
shrb
int
scas
sub
leave
xor
jnp
int
sub
in
je
adc
arpl
jecxz
out
lods
mov
mov
mov
int3
mov
cmpsb
jmp
hlt
jl
stos
push
insl
orl
sahf
inc
mov
lds
or
adc
mov
adc
popa
addl
int3
sbb
iret
popf
mov
loopne
adc
xchg
jecxz
cltd
dec
cmpb
dec
jno
dec
jno
rcrl
movsb
fistps
fwait
xor
push
insl
les
movsl
xchg
mov
imull
cmp
mov
jl
push
mov
sbb
and
fdivrp
int
pusha
xlat
movsl
in
test
mov
clc
mov
pop
add
pop
pop
or
dec
mov
or
ja
sbb
ljmp
mov
inc
into
adc
loopne
add
xchg
imul
xor
and
lcall
cld
scas
subb
mov
xchg
dec
xor
lods
scas
jns
mov
rorl
out
unpcklps
sub
les
cli
mov
in
mov
push
stc
push
idivl
pop
jnp
xor
xor
ss
mov
stos
ja
jle
xor
push
mov
jmp
into
and
pop
ret
lret
lcall
mov
jne
mov
jns
jmp
sbb
adc
mov
ror
jle
mov
cwtl
pop
xchg
add
jns
mov
inc
mov
pop
test
cmpsb
mov
add
arpl
and
or
mov
fbstp
inc
cmpsb
push
das
jmp
out
pop
movsl
and
dec
add
xor
mov
inc
imul
in
sub
jl
aad
cmpsb
jb
mov
outsb
ss
fisubrl
je
pop
mov
pop
sbb
cs
call
outsb
xor
loopne
and
mov
scas
aaa
test
int3
ljmp
sbb
dec
push
test
inc
add
lock
insl
inc
es
and
popf
sbb
mov
lock
push
je,pt
lea
xorb
inc
cmc
icebp
mov
jecxz
jle
int3
out
loopne
jne
push
push
pusha
dec
lock
cltd
popf
test
dec
mov
cmp
test
cli
fs
pop
mov
and
dec
insb
loop
imul
ret
inc
mov
add
add
mov
les
pop
adc
add
addr16
cmp
xchg
hlt
pop
mov
sub
test
dec
jmp
sahf
mov
mov
add
loope
in
ds
sub
pop
mov
inc
pop
lock
jns
sbb
push
flds
inc
movsb
lea
das
clc
dec
xchg
xor
stc
jnp
pop
cmpsb
fnsave
in
lret
add
mov
cmpl
iret
mov
out
loope
lods
cmpsb
jle
push
sub
daa
in
jno
fcoms
inc
fisttpl
push
xor
call
ds
pop
pop
jmp
or
jle
mov
pusha
insb
sub
aas
sub
daa
std
xchg
pop
xchg
jl
pusha
repnz
arpl
dec
mov
add
jg
std
sub
notb
js
mov
rcll
pop
bound
sbb
xchg
mov
pop
mov
add
cmc
push
out
pop
cmpsl
outsb
xor
rcr
sub
movsl
sbb
outsl
ret
hlt
shl
xor
subb
sbb
loopne
loop
jae
ss
push
movsl
mov
pop
pop
cmc
stc
adc
mov
jno
adc
xchg
mov
icebp
insl
pop
repnz
mov
stos
mov
lret
dec
ss
mov
sbb
aam
hlt
movsl
push
aam
mov
repnz
insl
adc
xor
sub
shrb
adc
rcrl
lahf
clc
dec
add
sub
mov
hlt
cwtl
dec
movsl
test
jbe
mov
cmpsb
jmp
aad
dec
push
rcr
in
shlb
subl
roll
push
test
int3
and
movl
add
das
sbb
xchg
loopne
mov
scas
push
jge
movsb
loopne
lods
cltd
lahf
xor
xchg
popf
xchg
call
xor
push
xchg
rclb
xchg
jbe
inc
or
movsl
ja
pop
hlt
test
gs
inc
sbb
push
xlat
insl
mov
adc
sub
dec
aas
int
pop
mov
mov
cmpsb
and
mov
imul
pop
xor
stos
add
mov
or
repz
pop
dec
xor
push
dec
icebp
sub
or
xlat
xlat
movl
xorb
xchg
xchg
or
push
dec
aam
shrb
sbb
cmp
xor
xlat
inc
fsubs
sbb
test
sub
loopne
or
dec
mov
adc
out
jb
cmpsl
jle
xor
cmp
adc
mov
int
aaa
mov
adc
xchg
inc
sti
testl
js
xchg
sub
add
into
mov
aas
repz
sbb
insl
mov
cmp
and
adc
arpl
adc
xchg
jmp
adc
jmp
and
push
inc
insl
xor
stos
ret
and
fwait
lahf
scas
or
out
or
sti
xchg
xor
add
repnz
mov
push
inc
mov
lahf
or
xchg
mov
sbb
test
cmc
add
dec
sub
sbb
sub
jae
or
test
hlt
inc
ljmp
mov
mov
xor
jge
gs
cmp
dec
pop
rorb
add
xchg
imul
fisttps
mov
jp
xor
push
fcoml
movsl
enter
movsl
and
adcl
sahf
aam
dec
das
add
sbb
mov
call
sti
xchg
imul
test
shrl
test
mov
jle
add
ret
sbb
scas
add
push
pop
ss
mov
jmp
cli
pop
inc
ljmp
dec
repnz
daa
aad
add
nop
sub
icebp
add
js
sub
mov
outsb
rcl
adc
push
push
cmp
mov
jmp
xor
xchg
dec
push
shrl
dec
iret
jo
mov
sbb
mov
je
sbb
mov
lret
subb
icebp
lods
pop
je
or
push
in
or
arpl
lods
dec
out
inc
gs
mov
rolb
sub
shll
dec
arpl
outsl
jg
sub
xchg
push
nop
adc
popa
sub
sbb
xchg
lahf
fists
jne
pop
sbbl
inc
xor
test
xor
pop
ret
insb
push
or
and
xchg
mov
inc
adc
and
test
push
mov
adc
jmp
push
in
mov
sub
pop
sbb
mov
xchg
jns
mov
mov
cmp
and
mov
jle
mov
mov
popa
cs
sarl
inc
inc
xchg
inc
inc
lods
sbb
jbe
mov
lods
mov
pop
push
icebp
pop
xchg
push
dec
dec
dec
cmc
add
dec
xchg
xorb
sahf
add
dec
dec
push
aad
dec
mov
mov
aam
bound
sbb
imul
xor
mov
imul
xchg
pop
xchg
xchg
xor
lahf
loope
pop
pop
retw
cltd
dec
bound
jno
lret
sarl
cmp
cmp
ja
clc
sarl
imul
xchg
sbb
out
es
ficoms
stc
rolb
repnz
inc
rcr
outsl
inc
data16
push
sub
adc
adc
fisubrl
and
ljmp
pop
add
imul
je
fnstsw
pushf
clc
inc
push
xor
xlat
fsubl
lock
addl
int
sub
sbb
xchg
mov
aad
lret
xchg
mov
mov
xor
jae
cwtl
xchg
out
inc
gs
repz
shlb
mov
mov
cmp
das
ret
or
fdivl
mov
jbe
inc
enter
fisubl
arpl
dec
push
mov
movsb
jb
repz
jecxz
out
and
xchg
add
movsl
mov
mov
cmp
inc
std
pop
cmp
arpl
loope
js
addr16
xchg
sti
sarl
in
mov
mov
js
pop
int
out
out
mov
jae
je
filds
mov
test
test
push
pop
add
jmp
aam
adc
lret
push
cmpsl
enter
adc
xchg
dec
leave
push
mov
xchg
xchg
out
mov
andb
add
popf
mov
cs
mov
dec
fistps
sbb
xchg
dec
in
shll
rcrl
xorl
pop
xor
pop
jnp
xchg
xor
xlat
mov
daa
inc
and
xchg
nop
xor
pop
xchg
mov
leave
je
lcall
mov
add
or
aas
testl
gs
out
mov
jg
faddl
dec
mov
cmpsb
jl
in
in
lcall
mov
push
jl
popa
or
pushf
mov
lods
lods
shlb
add
xor
jae
es
idivb
jle
hlt
ficoml
adc
mov
adc
xchg
and
bound
push
xor
and
sub
into
aam
jecxz
jmp
out
adc
dec
ja
jmp
pop
dec
test
shl
daa
test
inc
loopne
or
sbb
fcoml
xchg
dec
xchg
les
clc
and
sub
sbb
in
data16
adc
ljmp
cli
test
fstl
repz
test
sub
roll
sbb
xorl
mov
push
js
movsb
xchg
cmp
lds
xchg
pop
jp
jne
mov
leave
int3
loope
xor
cld
ret
and
inc
pop
ficoml
jge
pop
push
stc
lret
xchg
fs
dec
outsl
push
and
fstps
ret
stc
loopne
sbb
inc
xchg
or
cmpsb
out
mov
jle
outsl
mov
scas
out
int3
pop
or
xchg
ficompl
out
xchg
in
leave
cmp
xchg
xchg
xchg
sub
fwait
inc
push
mov
nop
push
push
imul
inc
pop
mov
and
mov
sahf
nopl
aad
add
mov
mov
xor
jns
sub
xchg
xor
pop
fwait
pop
call
lret
test
aas
idivb
out
out
call
adc
enter
sub
sahf
mov
mov
lahf
add
enter
inc
jmp
shl
fwait
jbe
je
adc
push
fs
popf
lcall
loopne
adc
pusha
ret
sbb
aam
jg
xor
ljmp
sbb
shrb
lock
stos
add
bound
iret
lods
stos
and
lea
negl
les
sbb
push
pusha
push
mov
jg
xchg
and
fcomps
and
mov
cmpsb
adc
cmpsl
cmpsb
lret
cmp
cmp
xor
and
iret
or
fisubrs
or
cli
mull
scas
leave
stos
lret
insl
test
imul
cmpl
je
add
cmp
mov
add
mov
es
dec
pop
dec
je
js
sar
in
das
adc
mov
fwait
cmp
jecxz
inc
push
push
fs
mov
iret
lcall
jno
adc
sbbl
pop
popl
bound
sbb
pop
push
cs
ljmp
negl
call
or
sbb
lods
pop
popf
adc
push
mov
and
sbb
adc
cmp
push
cmp
xlat
sbb
cmc
mov
insl
arpl
xor
das
or
xchg
iret
inc
mov
clc
sub
mov
pusha
int3
lret
xchg
inc
push
movsb
outsl
dec
xchg
addr16
push
shlb
push
or
filds
mov
mov
aad
push
loope
shrb
xchg
mov
and
movsb
stos
movl
add
mov
pushf
xor
jno
in
dec
mov
inc
lds
mov
jmp
dec
adc
in
mov
int
mov
push
cli
lcall
mov
lret
dec
cmc
mov
cwtl
xor
subb
adc
call
or
rorl
roll
lcall
mov
popa
cmp
add
je
jo,pt
mov
cmp
or
xor
inc
jmp
test
mov
jb
ret
sbb
sub
les
ficomps
pop
mov
rcrb
xchg
sbb
mov
adc
and
dec
mov
dec
mov
out
mov
jne
pop
in
xor
aam
push
inc
mov
call
jnp
int
inc
mov
xor
inc
ss
sahf
push
mov
ret
mov
xlat
xor
and
mov
in
adc
mov
shlb
fisttps
adc
push
mov
fstps
sub
jg
and
or
mov
ds
std
mov
aaa
sub
int
icebp
add
daa
outsl
mov
push
cs
lods
push
dec
cmpsb
jg
jnp
aaa
imul
push
out
ja
fs
dec
push
or
fdivrp
out
cmp
aad
dec
push
popf
sub
jecxz
xchg
jecxz
cmovne
iret
lcall
push
ss
daa
fwait
adc
pop
loop
jle
jg
adc
fadd
jle
addr16
in
ljmp
fdivp
testl
aas
dec
sub
cmc
js
and
and
push
xor
jae
dec
fists
call
ficoms
cmpsl
sub
push
fwait
mov
pusha
lcall
xchg
inc
in
dec
pop
mov
daa
push
jp
mov
ret
pusha
adc
jge
mov
popl
adc
das
ds
cmp
jns
or
lahf
sahf
add
fists
and
mov
jno
popf
jmp
std
push
pop
or
cld
xor
sub
jmp
outsb
adc
out
sub
push
mov
adc
inc
jle
xchg
in
pushf
add
push
and
imul
inc
aaa
mov
mov
cmp
fdivrp
nop
xor
daa
inc
lret
mov
pop
nop
push
or
ds
mov
outsb
jne
ss
testl
push
inc
and
and
and
xchg
test
rolb
cmp
push
or
mov
cwtl
scas
inc
loope
aaa
sub
jno
mov
out
and
andl
or
jg
dec
jle
mov
enter
add
or
and
cwtl
loope
call
inc
inc
mov
jne
sub
add
mov
dec
push
cmpb
and
shll
cmp
nop
pop
cmp
addr16
stc
jno
in
sub
shlb
add
pop
or
cmc
call
testb
jge
push
xlat
push
mov
lods
adc
loopne
sar
mov
enter
and
rcl
dec
in
gs
pop
sub
xchg
xchg
sbb
insb
shrb
data16
rol
push
mov
xchg
jne
cmc
iret
and
mov
iret
divb
adc
dec
rcr
ret
loope
pop
aas
dec
adc
jno
in
cmp
mov
das
fidivrs
andb
hlt
test
and
sahf
xor
cmp
mov
mov
mov
sbb
sahf
insl
jns
jl
jle
mov
mov
jle
jecxz
ljmp
test
mov
adc
lock
mov
push
rcl
mov
xor
das
dec
cwtl
ss
movsb
test
fwait
in
jl
dec
int3
pop
add
xchg
add
cmpsb
cltd
pop
push
xor
int
stos
loopne
addr16
push
dec
adc
sub
test
add
pushf
xacquire
in
insl
sbb
roll
ret
jle
ret
lcall
mov
add
dec
out
mov
movsl
xchg
jp
inc
popf
pop
push
xchg
mov
jmp
test
clc
or
mov
xor
push
add
es
mov
out
adc
cmpsb
filds
icebp
call
mov
stc
mov
fildl
and
xchg
push
ror
and
and
dec
shrb
ljmp
in
push
xchg
add
mov
cmp
pop
js
fstpt
sbb
ss
xchg
lahf
aad
sbb
lods
jne
into
and
inc
pop
scas
push
out
rorl
scas
fcomps
sarl
pop
mov
incb
out
pop
push
push
dec
cmpsl
into
sbb
out
rorb
loopne
mov
lods
mov
pushf
inc
ret
lock
mov
imul
add
insb
push
mov
in
aaa
inc
sub
push
mov
mov
outsl
lahf
and
push
test
nop
and
aaa
outsb
xchg
fs
popa
xor
cwtl
enter
sar
sub
decl
fildl
mov
pop
out
dec
xor
adc
hlt
mov
in
dec
fwait
adc
push
scas
dec
jae
xchg
repz
cld
xor
fistpll
xor
and
mov
adc
push
aas
lret
xchg
je
divl
arpl
adc
rorb
push
push
fiaddl
sbb
aas
test
fs
movsl
fnsave
test
addr16
movsb
push
or
fldcw
out
jbe
xchg
jp
bound
shrb
add
adc
outsl
xor
add
adc
call
sbb
aaa
cmc
inc
mov
scas
shll
and
ja
inc
mov
adc
cltd
dec
adc
popf
dec
sarl
jecxz
and
inc
lcall
push
lds
daa
and
add
mov
ret
stos
mov
pusha
inc
in
push
mov
pop
pop
cli
pop
pop
pop
int3
mov
mov
push
mov
fiaddl
es
fistpll
xchg
test
ds
jo
js
scas
and
cli
add
push
jmp
clc
jl
xor
pop
dec
aas
dec
inc
cmp
out
xchg
sbbl
test
push
out
mov
outsb
ljmp
insb
pop
fwait
rcrb
dec
push
dec
lahf
dec
aaa
push
or
adc
dec
push
mov
adc
and
mov
pop
fsubrl
sbb
xchg
rclb
adc
sub
fcoms
das
mov
push
xchg
in
scas
inc
leave
pop
aaa
dec
inc
jge
roll
outsb
cmpsl
scas
add
mov
or
push
cmp
pushf
jnp
nop
das
jb
push
or
ret
cmc
jno
fsubr
and
cmp
repnz
xchg
dec
test
ret
jno
and
or
inc
inc
jl
dec
mov
push
add
out
jmp
or
leave
push
sbb
xlat
imul
mov
or
adc
jae
test
loopne
lods
jge
push
cmp
mov
sub
imul
loop
mov
lods
ret
adcb
cmp
call
cld
movsb
xchg
ret
gs
inc
test
cmpsb
sub
dec
pop
dec
push
mov
xchg
sub
daa
aam
mov
fisubs
push
mov
dec
daa
sahf
test
mov
xor
cld
mov
popa
and
fcmovnu
cmpsl
inc
cld
cmp
flds
adc
insl
sbb
jle
clc
sub
imul
popa
fdivs
hlt
leave
push
xchg
pop
xor
pop
repz
cmp
ljmp
adc
fnstenv
lret
adc
inc
into
aas
dec
divl
out
lahf
xchg
fisttpll
pop
popa
lods
xor
push
stos
shl
cmp
insl
iret
iret
jae
mov
mov
aad
mov
in
mov
aaa
xchg
lret
cmp
cld
jl
arpl
dec
xor
addr16
inc
js
jbe
mov
jne
sub
pop
add
adc
xor
dec
pop
lods
rorb
int3
mov
sub
std
and
pop
cwtl
pop
dec
and
push
sub
clc
mov
or
mov
mov
xor
cmp
fimuls
or
cltd
loop
and
dec
into
sub
inc
lock
jmp
mov
insb
hlt
das
mov
mov
fnstsw
add
mov
adc
push
sub
insl
xchg
xchg
xchg
pop
adc
dec
jb
scas
icebp
loope
or
xchg
jo
jne
or
repz
shlb
xor
movsl
cmp
subb
lock
fs
adc
pop
push
hlt
mov
xorb
jbe
xorl
sbb
outsb
sub
jle
pop
fcoms
cli
xor
mov
rcll
add
shrb
sub
lea
jmp
hlt
lcall
xor
test
sbb
xor
into
pop
mov
int3
scas
sbb
sbb
pop
or
and
mov
fs
sub
jns
outsb
and
js
sub
fidivrl
sbb
cld
sub
inc
adc
xor
pusha
jno
dec
sbb
data16
jmp
mov
cmp
mov
push
fcmovbe
mov
add
dec
fcoml
outsl
ds
or
jb
daa
add
lret
cmp
xorl
and
sahf
and
jnp
and
pop
out
dec
sti
shll
decb
pop
cmpsb
jecxz
mov
lret
push
pusha
int3
adc
pop
inc
push
imul
push
lcall
sbb
mov
cld
in
jns
push
cmp
imul
cli
xor
dec
pmulhw
testb
or
jp
push
lock
loope
std
icebp
push
inc
test
pop
sub
shrb
fisubl
stc
sbb
push
sub
and
add
int3
push
into
sbb
movsb
rcrb
mov
sub
ljmp
pusha
shrl
fstp
pusha
mov
xchg
fcmovne
popf
inc
cmp
inc
inc
je
cs
aas
insb
or
xchg
orb
loopne
and
arpl
shrb
das
add
cmp
int3
loop
mov
add
int
push
or
sysenter
adc
push
adc
cmp
fidivs
xchg
lret
lret
adc
stos
frstor
or
pop
cmpsb
xor
outsb
jns
and
adc
repnz
pushf
mov
mov
lret
es
repnz
shr
les
mov
sub
movsl
mov
repnz
mov
cmp
ljmp
inc
pop
mov
mov
sub
and
ror
js
adc
push
jnp
scas
cmp
subb
test
aas
mov
pop
jmp
scas
inc
push
repnz
add
stos
outsl
push
add
fidivrl
pop
jbe
xchg
mov
xor
fdivl
dec
mov
mov
xor
test
out
sbb
out
shrl
cmpsl
sarb
clc
xchg
movsb
in
mov
jg
xor
dec
sub
fdivl
in
idivl
imul
lds
pop
or
aam
popa
jecxz
adc
xchg
repnz
mov
int3
cwtl
push
imulb
rolb
xchg
jns
xchg
mov
dec
lds
mov
jno
cmp
jecxz
out
in
mov
arpl
sbb
and
and
mov
fstpt
dec
dec
lods
push
shrl
repz
clc
outsb
sub
mov
jmp
inc
cltd
daa
movsl
push
xchg
push
in
ficomps
leave
cmpsl
jg
sbb
inc
ljmp
push
and
mov
clc
out
push
std
xlat
cmpb
sbb
shl
lahf
lods
std
and
xchg
and
vpsrlw
adc
movsb
mov
lock
mov
and
mov
lcall
test
lods
stos
sbb
insb
movsl
sub
in
data16
add
pusha
fwait
stos
push
addr16
push
scas
fs
jg
lcall
test
xor
js
mov
sbb
icebp
or
sbb
and
push
mov
into
jecxz
xor
jo
sti
or
imulb
addr16
rcrb
adc
imul
push
or
sbb
dec
jbe
fidivl
fidivl
movl
pushf
std
mov
int3
add
adc
idiv
add
xor
ss
pop
jae
dec
cltd
mov
sbb
dec
sti
or
lods
and
pushf
sarl
inc
lret
dec
arpl
imul
popf
push
or
cmp
mov
enter
push
mov
mov
rcll
mov
int3
xor
mov
aam
test
cmp
add
das
mov
add
cmpl
lahf
push
xchg
push
jecxz
aaa
icebp
jnp
mov
inc
jne
cwtl
pop
neg
mov
into
push
subb
test
outsl
and
inc
outsl
mov
jg
pop
pop
aad
jo
fimull
jp
cmpsl
daa
test
pushf
xchg
fcom
mov
movsl
fsubr
mov
mov
mov
ds
cmp
in
xchg
pop
xor
xchg
test
cmp
xor
or
leave
pop
xchg
adc
sbb
hlt
outsl
and
movsl
jae
mov
notb
or
imul
xor
sbb
xchg
inc
hlt
sub
int
and
std
and
inc
pop
ret
ret
dec
dec
jbe
jge
aas
cmpsl
jecxz
cmpsb
and
jo
sub
out
ja
push
lds
fwait
xlat
lea
mov
into
inc
adc
lret
fs
pop
jge
outsl
in
clc
rcrb
ja
sbb
in
push
cs
pop
lret
test
loop
inc
xor
cmpsl
xor
sbb
mov
sub
pop
mov
addl
mov
aad
mov
xchg
mov
daa
enter
insl
lock
jno
pop
mov
jg
sbb
pop
nop
pushf
dec
mov
sbb
iret
dec
stos
mov
scas
xor
pop
clc
and
push
dec
fsubr
ret
fidivrs
cwtl
push
inc
sbb
ja
jg
inc
lods
std
xorl
pusha
adc
mov
aad
insl
icebp
scas
or
aaa
shll
into
rorb
ds
jo
cld
dec
add
sti
and
xchg
and
sub
lret
push
aad
dec
lcall
sbb
dec
cwtl
cli
lcall
out
or
mov
jp
mov
enter
movsb
fildl
jno
mov
mov
cmp
ret
cmp
push
jo
into
sub
je
sub
cmp
imul
fisubrl
xchg
out
imul
lahf
nop
insb
push
xor
or
jl
cmp
popa
push
ljmp
loope
jp
cld
xchg
mov
ds
out
aaa
mov
xor
inc
in
fs
out
cmp
out
out
sbb
ds
cli
push
test
xchg
dec
adc
pop
cmpb
arpl
sbb
je
pusha
setp
test
loopne,pn
lea
sub
stos
sub
cwtl
sub
xchg
outsb
sub
push
inc
xchg
or
sbb
push
add
out
mov
bnd
stos
sti
bound
add
gs
sti
fdivs
sti
sub
sbb
lock
lret
test
lcall
fcompl
scas
andl
ror
fs
shll
jp
cmp
jl
cli
neg
ret
repnz
mov
jae
sub
or
icebp
dec
cmpsl
ret
cmp
mov
mov
orb
or
jg
enter
pop
ret
cmp
sub
jns
lds
mov
ja
fcoml
std
fisttpll
imul
jg
sub
mov
scas
sbb
pop
arpl
ss
cltd
pop
shll
mov
cmp
insl
in
and
scas
add
or
imul
test
mov
add
loopne
lods
dec
aaa
mov
push
jge
jmp
rcrl
shlb
inc
sahf
and
sbb
cmpsb
dec
in
jge
push
popa
clc
mov
pusha
arpl
call
cmp
out
jns
out
adc
in
rolb
sbb
cmp
sub
sub
fld
cmc
jae
loope
sub
cmc
dec
je
xchg
call
pop
lds
inc
nop
data16
jne
lock
jmp
imul
or
jae
inc
push
fisubrs
xchg
jp
ret
jne
arpl
sbb
lock
dec
push
stc
out
mov
imul
xchg
sbb
dec
fnsave
push
lcall
jge
inc
imul
repnz
cli
inc
xor
stc
mov
xor
mov
hlt
pop
and
jb
dec
cmc
sbb
cmp
rcr
xor
pushf
jge
lods
xchg
mov
mov
arpl
xchg
sub
sti
xchg
test
xorb
lcall
xor
push
js
mov
pop
jno
push
test
pop
mov
negl
pop
fldenv
sarl
xchg
movsb
xchg
jno
insl
jmp
pop
xor
pop
aaa
rclb
iret
xor
das
xchg
or
xor
pop
xor
add
lods
pusha
add
cmp
mov
cli
out
pop
ficoms
xchg
rcrb
into
xchg
mov
test
cs
or
xchg
inc
jbe
pop
push
nop
mov
in
pop
mov
rcrl
lcall
cwtl
sahf
call
xchg
xor
cltd
push
fisttps
xchg
sarl
scas
aas
dec
cli
jl
mov
outsl
xchg
cwtl
das
mov
jae,pt
xchg
and
clc
push
push
xchg
lock
stos
xor
push
adc
cs
ret
repz
push
xor
xor
dec
loop
push
fdivs
or
hlt
xor
jecxz
push
jne
scas
add
subl
mov
movsb
out
loopne
mov
in
or
inc
sub
pop
test
xchg
xor
cmp
add
xchg
push
stos
repnz
mov
push
cltd
aas
xchg
dec
inc
pop
rcrb
pop
mov
mov
push
push
aas
and
sti
pop
gs
jbe
js
mov
int
jne
pop
test
xorl
xchg
rolb
in
popa
scas
and
sub
dec
pop
outsl
or
iret
mov
imul
cmp
mov
lret
fs
cltd
loopne
xor
adc
inc
pop
push
xchg
lret
jno,pn
arpl
jo
mov
inc
out
int
adc
lods
es
add
inc
dec
mov
ss
or
pop
jmp
int3
jecxz
fnsave
cmp
repnz
scas
mov
mov
mov
push
dec
jp
std
clc
fbstp
jnp
pop
test
jg
dec
insl
xlat
inc
or
xor
add
xlat
gs
pop
push
out
repz
mov
adc
jp
arpl
das
sbb
inc
adc
mov
scas
mov
inc
popf
jg
cmpsb
jne
inc
add
ret
pop
out
js
lods
lret
shll
hlt
xchg
imul
pop
rorb
mov
jl
cmp
mov
es
mov
test
jae
lds
xchg
pop
aad
fs
sahf
xchg
xchg
shlb
mov
jge
mov
and
dec
imul
mov
fwait
and
js
call
dec
sub
xor
inc
lea
push
mov
roll
cmc
faddp
inc
arpl
and
and
imul
pop
mov
lahf
mov
jl
push
fwait
aaa
adcl
xchg
xlat
aad
jne
daa
subb
jg
or
lahf
daa
mov
aad
dec
adc
dec
or
sti
push
xchg
sub
hlt
jae
add
and
hlt
mov
xor
shll
cs
jb
ljmp
xchg
adc
int3
mov
cld
pop
adc
cmp
scas
mov
mov
dec
movsb
sahf
push
std
cld
mov
or
test
mov
mov
icebp
xor
mov
push
pop
xorl
mov
in
xchg
cs
clc
lock
xchg
test
lcall
cltd
pop
sti
push
inc
xchg
cmp
cmp
cmp
stc
and
lret
dec
bndstx
mov
cmp
dec
sub
cmpsb
or
insb
imulb
pop
mov
orl
push
nop
fsubrp
pop
inc
rorb
fldl
push
es
rcrb
inc
mov
adc
mov
mov
jne
jns
or
test
jo
imul
jne
pop
sbb
cld
pop
repnz
or
jmp
add
mov
sbb
or
xchg
xor
out
ret
sbb
push
loop
dec
cli
adc
rolb
das
lcall
or
nop
jle
cwtl
jg
xor
jbe
push
lods
dec
shl
lods
mov
loop
pusha
push
dec
scas
test
mov
push
xorb
incl
cltd
lods
stos
cld
aam
inc
adc
sti
daa
and
inc
in
pop
cld
xor
ret
dec
fwait
xor
xor
ret
or
dec
fdivr
hlt
movsb
lret
or
out
pop
adc
mov
lcall
cmp
sub
push
lods
jg
fistpll
es
shlb
test
adc
sbb
gs
out
sbb
icebp
fdivr
mov
or
rol
out
int3
cmp
pop
xchg
mov
mov
gs
lods
inc
je
jge
lret
inc
aaa
cmpsb
adc
xlat
dec
sar
xor
popa
fdecstp
aam
add
in
fidivl
pop
cmpsl
push
sar
jecxz
push
xor
mov
in
xchg
pushf
andl
repnz
xchg
mov
add
push
xchg
int
rclb
test
pop
mov
mov
addr16
cwtl
aam
inc
lahf
cmp
call
loope
jo
mov
out
jae
jg
mov
rcrl
dec
push
lret
and
mov
mov
push
push
lahf
dec
adc
mov
lea
dec
dec
jae
movsb
arpl
sub
ss
outsb
ljmp
sub
or
xchg
jae
xchg
mov
add
sbb
xor
stos
div
add
aad
cmc
dec
cltd
add
adc
or
or
mov
inc
push
das
loope
rcr
cmpl
scas
in
mov
cmp
mov
lahf
popf
aas
xor
out
movsl
in
and
mov
lret
movsl
push
test
mov
in
and
dec
sbb
inc
sbb
xlat
cwtd
mov
lcall
shrl
inc
jg
in
rorl
mov
sbb
int
and
imul
push
jo
stos
mov
stos
repz
push
cs
ret
add
dec
popa
shlb
push
fdivl
ret
arpl
or
enter
mov
cmp
nop
sti
pop
iret
mov
mov
dec
fistl
mov
pushf
je
sub
inc
mov
mov
aad
shrl
sbb
cli
into
scas
xchg
adc
ss
push
mov
ljmp
cmp
pop
daa
lods
testl
xor
mov
jg
cmpsb
sbb
arpl
sbb
roll
mov
loopne
in
lds
inc
stos
and
mov
add
sbb
add
or
adc
mov
cwtl
insb
clc
cli
add
jns
test
or
xchg
adc
imul
inc
pop
enter
popf
out
mov
add
cmp
sbb
daa
jg
adc
mov
mov
jae
inc
sbb
cld
pop
jbe
loop
clc
pop
cs
je
xor
mov
fmuls
or
xchg
movsb
scas
mov
rorb
jbe
into
cmp
xorl
out
pop
mov
push
stc
imul
test
loop
stos
pop
rorl
not
xchg
fnsave
iret
jl
inc
test
sub
sub
es
inc
lea
test
jo
pop
cmpsb
jg
or
iret
adc
pop
xchg
add
addr16
mov
dec
out
sub
lods
jne
mov
xor
ficoms
dec
aam
scas
push
test
cmp
ret
cmp
out
clc
test
dec
push
aam
cmp
dec
inc
outsl
adc
push
mov
cltd
scas
rolb
pop
popf
sub
fbld
push
hlt
ret
xor
dec
sbb
push
pop
ss
paddusb
mov
arpl
popa
pop
insl
rorb
inc
cltd
rolb
mov
push
push
call
je
dec
and
cwtl
jnp
mov
ja
fildll
push
sbb
pushf
stc
ds
ss
cld
and
dec
jmp
sbb
std
sub
xor
popa
mov
cli
aaa
mov
fs
jmp
dec
fwait
dec
aam
jge
divl
sbb
mov
mov
add
mov
sub
stos
daa
outsb
add
int
repnz
jp
fs
in
sbb
js
inc
cmp
dec
mov
pop
es
sarl
xor
bnd
xorb
negb
mov
fdivrp
cld
push
mov
mov
movsl
add
nop
or
pop
mov
or
dec
jp
pop
jns
cmp
outsb
shrl
shlb
loope
dec
dec
incb
in
sbbl
push
les
and
js
inc
notb
inc
sub
das
mov
rcr
stc
jmp
lock
loopne
data16
cmp
ret
insl
lret
push
mov
popf
or
outsl
pop
and
lahf
sub
in
insb
mov
pop
dec
adc
inc
cs
leave
and
adc
xorl
add
sub
xchg
pop
test
fwait
cmpsb
pop
mov
lock
adc
fcompl
mov
leave
or
jle
push
pop
jl
push
cwtl
fxch
and
shll
push
push
loope
or
sub
add
imul
mov
iret
or
adc
dec
and
test
das
dec
in
jb
mov
xor
mov
push
js
mov
mov
outsl
subb
mov
and
jbe
rorb
pusha
pusha
ljmp
mov
adc
sti
mov
jne
mov
jno
and
push
xor
leave
je
xor
pop
xor
add
loop
test
jnp
fidivs
jp
sbb
push
ja
add
dec
xchg
sbb
jbe
push
mov
inc
cltd
enter
jge
mov
xlat
popl
in
inc
js
add
sub
or
and
pusha
test
push
ret
ret
sarl
cwtl
add
les
jns
insl
xchg
adc
in
lahf
nop
mov
or
add
mov
pop
xchg
push
inc
dec
out
and
data16
sti
test
jp
bound
inc
mov
jns
enter
cmpsb
sub
add
mov
mov
sbb
loope
push
filds
fwait
cmp
pop
sbb
mov
push
mov
pop
xchg
xchg
cmc
stos
sub
mov
imul
mov
cwtl
daa
pushf
daa
out
xchg
ret
clc
push
lcall
push
out
cmpsb
repz
push
xor
push
sbb
aad
push
test
fstps
and
imul
xchg
lea
xchg
loope
stos
into
fwait
adc
pop
push
lahf
das
outsl
rcrb
xchg
inc
scas
ss
sbb
mov
into
add
push
mov
lret
xor
pusha
scas
xor
into
loop
aad
dec
jbe
popf
test
out
cwtl
jmp
imul
mov
fcomps
aaa
mov
sahf
jl
mov
jae,pt
push
push
incl
inc
sub
mov
sub
daa
or
fmulp
adc
inc
out
outsb
sub
push
inc
add
push
cmp
icebp
push
pushf
data16
sarb
mov
cmpsb
mov
or
mov
in
jae
cmpsl
popa
ret
dec
ja
push
push
mov
xchg
or
mov
cmc
lods
jle
or
sahf
stc
xchg
push
inc
es
or
push
push
xchg
repnz
push
push
xchg
movsb
dec
lret
jns
adc
in
mov
flds
sarb
lea
pop
mov
lock
mov
inc
pop
mov
adc
sub
repz
fs
std
adc
push
ret
rcr
jg
std
daa
in
shll
push
lock
pop
sbb
pop
ja
or
stc
pop
test
mov
mov
fs
stos
mov
in
fwait
daa
cmp
iret
adc
jno
add
add
mov
shlb
aaa
and
cmpsb
mov
mov
movsb
pop
inc
adc
pop
movsb
adc
pop
adc
ficoms
mov
nop
test
xchg
iret
mov
sub
mov
aas
out
ficompl
cwtl
jle
dec
stos
ror
pop
mov
out
mov
loope
sbb
add
imul
mov
inc
push
xchg
sahf
adc
inc
push
or
jo
imul
fwait
sub
and
das
cmp
fcompl
insb
cmp
and
cmp
outsb
rcr
add
shrl
and
jg
xchg
pop
movsl
inc
jne
jl
cmp
mov
fsubrl
fwait
and
js
push
lret
mov
das
fsubrs
sbb
xor
loope
pop
pop
adc
xchg
mov
and
sbb
jg
sbb
mov
cs
int
fldenv
les
out
iret
inc
shl
jmp
xor
or
imul
ljmp
ds
jbe
sub
add
dec
lahf
out
push
cmp
xor
push
out
mov
dec
fisubrl
data16
push
cmc
pop
leave
xchg
dec
loopne
stc
pusha
stc
pop
mov
jne
cmp
stos
add
xor
dec
mov
pop
lret
dec
jg
stos
jge
cmp
mov
xor
sub
mov
lds
jmp
scas
jo
loope
push
pusha
adc
outsl
nop
dec
fwait
xorb
testl
lods
rclb
sub
popa
mov
clc
sbb
fs
pusha
imul
insl
cmc
sbb
js
push
dec
mov
jecxz
sbb
mov
aas
ret
sahf
mov
cmp
or
sbb
das
lret
mov
cs
push
or
insb
ret
stc
in
fidivrs
roll
or
cld
jbe
scas
and
or
sahf
rorl
into
rolb
mov
cmc
repnz
add
int
xchg
pop
cmp
movsl
mov
xchg
sahf
enter
jo
add
mov
mov
loopne
int3
ljmpw
fsubs
insl
xchg
xor
imul
cmp
mov
jp
mov
fcmovb
notl
adc
adc
out
xchg
es
xchg
sahf
lock
insl
dec
sahf
adc
mov
cmp
jg
lds
daa
iret
xchg
scas
adc
and
add
into
mov
lock
in
or
pop
mov
iret
jb
div
jecxz
popf
sub
add
add
loopne
push
popf
xor
xor
loop
insb
push
mov
insl
sbb
sbb
or
lds
scas
nop
dec
mov
test
pop
add
mov
call
xlat
and
fimull
dec
mov
stos
mov
int3
in
pop
mov
and
mov
test
cmp
or
xchg
inc
push
in
arpl
sarb
stc
push
dec
push
xor
loope
add
icebp
adc
sahf
imul
mov
adc
icebp
enter
xchg
test
adc
into
cmp
loop
cmp
lret
push
mov
mov
test
in
pop
jg
or
pop
mov
rolb
jbe
into
cmp
pop
xchg
mov
or
add
push
lahf
ficomps
out
or
inc
enter
push
outsl
hlt
jbe
lret
sbb
xchg
xor
cmp
jbe
add
sub
scas
popf
sbb
sub
cmc
pushf
inc
xchg
jp
fcoms
popf
scas
jl
bound
dec
mov
inc
xchg
mov
mov
arpl
in
out
add
cmp
and
int3
pop
lock
movsb
push
scas
xchg
or
jle
outsb
cmc
push
dec
lret
cmp
aam
push
call
dec
or
mov
sbb
and
shrl
jmp
shlb
push
mov
jecxz
lock
orl
and
sbb
clc
sbb
push
cld
xor
or
dec
loope
mov
xor
insl
int3
or
add
sbb
stc
mov
pop
mov
pop
dec
fnstcw
test
rorl
scas
and
gs
out
sub
movb
mov
test
adc
inc
mov
insb
jbe
pop
mov
dec
cmpsb
fwait
dec
and
pop
fdivs
mov
adc
cmp
lahf
xchg
add
and
fdivs
jne
jo
loope
repz
repz
adc
push
aam
cmc
xor
mov
js
xchg
or
mov
adcb
iret
repz
lods
and
mov
dec
popa
push
fcomps
hlt
xorb
movsl
scas
pop
fcmovu
stos
aaa
sbb
xor
jg
mov
sbb
into
mov
adc
mov
sbb
inc
pop
or
pop
lret
xchg
imul
insb
inc
sbbb
push
sub
xchg
push
pop
mov
lcall
xchg
in
sbb
in
lods
xchg
adc
imul
cld
pop
inc
dec
lea
and
scas
jp
push
push
sbb
mov
xor
push
sub
pop
mov
stos
cwtl
jne
repz
and
push
sub
mov
inc
jne
fwait
ret
jns
dec
and
lret
sbb
pop
fldenv
in
inc
ret
inc
jae
mov
mov
mov
jge
inc
inc
mov
xor
arpl
popa
ljmp
lods
js
push
inc
xchg
stc
cli
or
inc
xlat
imul
xchg
int
lods
pushw
test
jbe
popa
xchg
adc
pop
push
mov
cmpsb
das
mov
outsl
cmp
inc
mov
andb
pop
mov
add
xchg
xor
xchg
cld
and
das
imull
and
test
rorb
fiadds
adc
stos
imul
push
dec
xor
xor
loop
jne
pop
or
mov
push
pop
xchg
xchg
lret
stos
imulb
add
inc
mov
mov
mov
xor
mov
fs
xchg
loopne
jle
inc
mov
xchg
packssdw
push
xchg
cli
ret
in
mov
int
lcall
loop
push
aam
out
pop
push
pop
testl
cld
ja
cs
mov
flds
fdivrs
xchg
push
aam
and
pusha
cmp
mov
aad
aas
das
mov
fisttpl
imul
gs
push
rcr
int3
mov
cwtl
or
mov
jo
mov
hlt
adc
or
mov
insb
mov
push
inc
bound
stos
ret
daa
adc
insl
mov
daa
sti
mov
pop
js
jo
or
std
inc
sub
popf
mov
push
std
xchg
push
ljmp
xor
push
and
jns
mov
adc
push
cltd
rolb
add
xor
je
ljmp
jbe,pt
xchg
sub
push
es
out
and
ret
rclb
jo
andb
pop
xchg
in
fldenv
and
cmp
imul
pop
and
push
and
push
cmp
pop
cmp
lods
xchg
notl
js
and
cmpl
push
mov
mov
stos
fildl
push
stos
xchg
mov
jmp
dec
lret
nop
repnz
sahf
pop
movsb
dec
repz
dec
sub
lret
cmp
ljmp
call
pusha
daa
xor
xchg
lahf
pushf
test
int
je
into
loopne
jle
mov
pop
cltd
and
jo
out
xchg
shlb
xchg
in
les
jg
insb
movsl
clc
mov
popf
push
add
sbb
add
mov
addr16
jne
pop
cmpsb
adc
inc
sbb
push
in
cli
test
ja
mov
in
into
pop
jo
fbld
sub
dec
mov
sbb
sarb
fildll
xor
and
out
loopne
push
xchg
adc
and
jl
ja
das
inc
cmpsb
sbb
loop
xor
add
aas
daa
inc
push
push
cmp
mov
lcall
push
pop
mov
push
test
mov
in
in
cmp
jb
stos
and
insl
sti
les
stc
fwait
aas
ljmp
and
cli
loope
out
and
imul
les
inc
jo
mov
push
add
test
jns
cwtl
movsl
jns
imul
inc
push
adc
and
push
pinsrw
sub
test
sbb
jmp
or
addr16
out
cmp
mov
adc
pop
jl
cmp
jmp
sahf
mov
outsb
cmp
sbb
dec
xlat
mov
and
mov
dec
fnstcw
aam
cmpsl
inc
jnp
test
notl
inc
mov
cli
sti
outsl
addr16
mov
xchg
xlat
ds
pop
popf
cmpsb
cmc
xlat
xchg
xlat
xlat
mulb
pop
repnz
xchg
sub
jo
jns
pushf
addr16
pop
int3
shlb
inc
outsb
loopne
cs
aas
inc
sbb
rcll
ja
push
cli
test
popf
inc
mov
fadd
out
stc
pop
subl
mov
cld
jo
pop
mov
in
or
movsb
pop
fs
inc
sbb
fisubrl
cltd
aad
mov
lods
sbb
mov
ret
in
iret
jge
shlb
jle
xlat
pop
xchg
icebp
xlat
dec
and
sbb
movb
popa
rol
mov
inc
or
test
and
clc
sub
pop
jno
mov
mov
pop
xor
int
and
and
cmpsb
sbb
pop
adc
fs
test
add
movsl
cmc
push
es
sub
shr
jne
mov
cmc
test
out
sti
or
cmpsb
mov
or
movsl
and
xchg
pop
test
jp
fsubp
jb
sub
fstpl
loop
int
shll
fisubrs
cltd
fdivl
cmp
cmp
jns
divb
dec
mov
out
cltd
inc
mov
mov
inc
test
lock
mul
lock
pop
mov
ret
mov
dec
pop
sahf
stc
js
mov
sar
mov
xchg
push
inc
jbe
sbb
out
cmpsl
mov
and
dec
xlat
jge
in
pusha
inc
and
mov
push
jb
and
movl
sub
outsb
addr16
adc
lods
mov
or
out
sub
fisttpll
rolb
xchg
mov
repz
hlt
into
sbb
arpl
inc
aam
mov
and
pop
jbe
bound
daa
cwtl
add
xchg
xor
xor
dec
clc
add
in
lea
imulb
add
pop
in
mov
xorl
pusha
jnp
xor
sub
test
inc
das
xchg
adc
inc
jnp
and
adc
lret
cltd
pusha
push
and
xchg
insl
or
std
movsb
mov
enter
xchg
jge
pop
mov
jo
or
orb
daa
into
vcvtsi2sdl
pop
xor
icebp
icebp
inc
add
or
repz
mov
sahf
and
xor
mov
ja
mov
gs
lea
dec
sbb
cmp
cmc
lea
pop
out
rcl
adc
or
dec
data16
fimull
add
xor
or
cmp
inc
lahf
push
sbb
aas
mov
icebp
push
std
mov
dec
loop
mov
icebp
ljmp
mov
shlb
push
jae
push
mov
xor
leave
insb
mov
jbe
imulb
dec
mov
popl
je
cmp
mov
cs
mov
roll
lret
sti
iret
push
daa
cs
adc
xor
xor
ret
xchg
dec
adc
repnz
cmp
xor
outsb
add
pop
or
ret
jmp
les
dec
push
mov
clc
jnp
pop
sbb
out
inc
test
fldpi
and
imul
add
mov
out
jmp
jecxz
test
pop
hlt
jle
pusha
iret
std
mov
test
stc
in
jno
push
mov
and
es
insl
add
les
add
adc
xlat
or
xchg
jns
mov
cmpsb
xrelease
sahf
out
cld
mov
leave
rcrb
mov
lea
inc
mov
loop
popf
out
xchg
imul
jl
sahf
out
inc
ret
cs
adc
mov
mov
mov
mov
cmp
jnp
and
sub
jo
jb
movl
push
cmpsl
inc
data16
leave
subl
aaa
daa
stos
push
add
dec
inc
arpl
ss
inc
mov
mov
and
inc
lret
sbb
ret
inc
outsl
addb
pop
mov
pop
stc
clc
mov
and
jmp
lods
xor
enter
fimull
jmp
inc
notb
and
push
push
mov
stos
mulb
pop
scas
pop
sub
mov
xchg
push
or
test
mov
testl
out
xor
outsb
mov
sbb
adc
xchg
cmp
mov
call
test
in
leave
sub
sub
xchg
out
out
mov
cmc
mov
mov
into
jecxz
sub
fldcw
test
je
shrl
or
mov
pop
sub
lret
mov
xchg
mov
or
cmp
adc
in
fisubrs
dec
add
mov
sbb
dec
hlt
xor
pop
shll
adc
xor
repnz
mov
xor
cmpsb
hlt
call
sub
adc
sub
xchg
fs
xor
pop
dec
lcall
dec
stos
lahf
push
cld
mov
sub
stos
mov
mov
shll
fwait
daa
in
cwtl
xor
ret
inc
mov
enter
test
mov
sbbl
jg
xlat
lcall
jmp
fcmovne
adc
out
mov
pavgb
addr16
fscale
movsb
mov
test
and
dec
pusha
pushl
sub
ficompl
cmpsl
jge
jo
mov
jg
pop
fistpll
scas
mov
cwtl
adc
mov
dec
ret
iret
scas
sbb
sbb
mov
icebp
test
pusha
mov
pop
sub
dec
mov
and
in
imul
adc
dec
dec
outsb
xor
icebp
jne
icebp
pop
xchg
lock
sti
cmp
xchg
aaa
lock
stos
pop
adc
and
add
ds
cmp
fsubrl
inc
lahf
push
xchg
add
stos
cld
add
sbb
mov
int
movsb
jmp
adc
adc
cmpb
addb
ja
out
push
pop
lahf
js
fucom
std
mov
sti
aad
push
fstl
pop
add
mov
mov
in
adc
mov
and
out
neg
stos
sub
mov
cmp
adc
mov
cmp
ret
outsl
mov
mov
pop
cmpsl
int
mov
mulb
insb
enter
stc
daa
ret
mov
pushf
out
and
mov
mov
cmp
adc
mov
pop
push
pop
sbbl
imul
cltd
fisttpll
dec
and
mov
push
xchg
xor
or
push
pop
sbb
lret
pop
stos
ja
out
aas
mov
xchg
xor
lods
movsb
enter
mov
insl
xor
inc
mov
je
test
xchg
push
inc
sbb
push
sarb
dec
bound
je
sbb
or
sarl
sub
mov
pop
sbbb
ror
dec
arpl
decl
and
std
pop
test
les
pop
pop
jle
sub
cmp
std
sbb
xchg
adc
jno
out
adc
clc
adc
clc
xchg
pop
stc
add
jecxz
loopne
mov
mov
cmpsl
cs
test
gs
and
popf
movsl
add
fisttpll
sbb
sbb
sub
jb
pop
es
adc
rclb
aam
mov
jo
jne
scas
clc
add
scas
add
push
fwait
mov
mov
pop
sub
lock
sbb
insl
in
xchg
arpl
sub
fnstenv
push
imul
cs
dec
dec
ret
rep
push
mov
dec
or
clc
jb
push
jno
dec
mov
jae
or
imul
in
cmp
incl
idivl
mov
sub
xchg
mov
shlb
lea
mov
cs
addr16
mov
into
cmpb
or
mov
scas
in
test
push
js
cmp
mul
ret
out
imul
imul
in
adc
pop
fsubrl
jbe
lret
xchg
scas
mov
std
sbb
jno
movsb
xchg
cmp
inc
adc
sbb
fiaddl
push
inc
xor
mov
fmul
orl
xor
mov
dec
xor
xor
push
dec
xchg
xor
cmp
lds
mov
into
out
popa
or
loop
sub
fnstsw
push
daa
pusha
insb
pop
lcall
leave
cmp
add
nop
pop
rolb
cmp
mov
clc
cli
cld
dec
stc
inc
ljmp
int
or
sub
adc
call
repnz
movsb
xchg
push
in
cmc
repz
mulb
mov
ret
inc
mov
xchg
movsb
jo
or
loope
xchg
cmpsl
rcrl
insb
loope
mov
hlt
and
adc
ljmp
dec
sub
pop
fisubl
cmp
inc
mov
daa
jmp
in
mov
mov
mov
mov
stc
lock
jnp
inc
or
lret
xchg
xor
in
jno
hlt
dec
mov
push
scas
dec
cmp
stos
out
fistpll
test
pop
mov
push
cmpsb
jmp
daa
sbb
xchg
jmp
dec
adc
fstl
lret
insb
je
into
mov
aam
repnz
xchg
mov
or
lcall
call
adc
pop
dec
and
data16
mov
aaa
out
sbb
in
out
rolb
fwait
pop
rcr
push
jae
xchg
rcrb
xchg
outsl
xchg
ja
jb
mov
inc
mov
sbb
in
std
mov
cmp
mov
ret
out
jbe
lds
jbe
and
orb
push
lahf
xchg
or
fwait
dec
pusha
popa
in
jno
lods
and
xchg
push
outsl
loopne
arpl
mov
sub
shrb
sub
out
in
enter
add
xor
mov
shll
mov
pop
or
xor
pop
jge
mov
sbb
shll
jle
and
insb
push
sub
insb
jecxz
cld
xchg
mull
hlt
std
xor
jg
repz
cmp
clc
push
ret
fwait
xchg
stos
lock
jge
push
inc
sbb
fs
subl
mov
pop
push
ret
push
ljmp
lahf
movsl
lahf
mov
scas
sahf
mov
ret
mov
inc
push
loopne
insb
mov
xor
lea
fisttps
mov
stos
cmp
imul
jne
mov
out
adc
jne
lcall
int
bound
pop
dec
mov
fiadds
xor
add
je
xor
mov
shr
stc
mov
out
push
jmp
jno
xorl
cmc
dec
fsubs
sbb
hlt
xlat
ja
or
mov
dec
or
addb
insw
stc
rorl
push
lds
dec
gs
testb
lea
inc
sub
lcall
lret
sub
push
cld
test
pushf
or
repz
jl
mov
stos
push
push
sti
and
and
stos
bound
jge
sub
mov
mov
ret
xor
daa
pop
fs
push
cmp
lods
aaa
cmp
std
in
add
cli
outsl
add
adc
xchg
jne
ljmp
jge
mov
cli
into
xchg
and
outsb
dec
fsubrs
add
test
inc
fsubrs
jae
push
ljmp
movsb
pop
mov
lds
push
dec
inc
pop
adc
cltd
jae,pt
ljmp
push
lahf
push
lahf
lods
das
scas
add
into
or
leave
adc
aam
push
mov
xlat
out
xor
stos
test
dec
mov
jg
jp
xchg
add
mov
hlt
mov
subl
gs
out
les
sub
push
jmp
icebp
xor
push
mov
xchg
fs
inc
aam
shl
mov
inc
aas
divb
std
fimull
mov
jp
xchg
in
adc
cmp
incl
test
mov
mov
fmuls
inc
add
data16
jne
jno
stos
push
mov
mov
into
lret
sbb
stos
cmpl
scas
addl
pusha
les
xchg
cmp
xor
fwait
dec
data16
inc
lcall
push
pushf
jecxz
out
shrb
jnp
fstpl
pop
cmc
shlb
test
or
cli
mov
ret
mov
dec
jmp
ss
and
test
jo
cmpsl
orl
popf
or
inc
shlb
fucomi
js
cmp
ds
mov
gs
sub
adc
int
pop
push
push
scas
or
add
cmp
cmp
clc
ret
xchg
repnz
popf
insl
jo
stos
loope
mov
jns
mov
pop
cmp
popf
fstpl
faddl
movsb
rolb
rorl
mov
repz
push
inc
fsubrs
sti
mov
sbb
negl
mov
sbb
mov
es
cmpsb
lods
fstp
cmp
inc
popa
inc
ret
ljmp
pop
pop
popf
jle
fwait
sbb
jp
icebp
mov
imul
cmp
mov
inc
insl
sbb
pop
cmp
push
inc
in
sahf
xor
xor
xor
cwtl
outsb
mov
ja
cmpsb
and
mov
test
push
mov
cmp
mov
adc
enter
xor
add
ret
popf
cmp
repnz
jg
jl
jl
adc
add
mov
add
fiadds
jno
es
push
cld
pop
add
cmc
std
arpl
inc
sub
ds
rorl
lret
ja
push
mov
mov
loopne
insl
lret
adc
push
lds
sbb
cmp
sub
dec
test
fcos
inc
ret
scas
in
hlt
repz
test
cmp
or
inc
mov
cmp
leave
je
jne
xchg
outsl
hlt
js
pop
mov
mov
sbbl
mov
mov
push
ds
xchg
popa
sbb
adc
out
cltd
dec
fbstp
dec
sbb
or
je
add
mov
fidivrl
jmp
icebp
cmp
adc
sbb
jne
sbb
mov
add
mov
add
out
mov
push
jae
lcall
popa
jl
push
call
cltd
and
decb
adc
adcl
aaa
ds
in
nop
scas
push
pop
aas
mov
sub
insb
inc
out
fstpl
fs
out
jb
push
movsb
sbb
adc
jecxz
mov
add
push
xor
xlat
pop
fistl
ficoms
and
push
xor
mov
ret
jp
nop
mul
sbb
fwait
add
pop
inc
incb
or
jno
xchg
imul
xchg
jno
or
xor
divl
jle
push
out
lcall
mov
pop
and
or
sbb
adc
add
dec
ja
sarb
test
lret
and
sub
addb
inc
mov
xchg
add
mov
lahf
xor
push
fmul
mov
cli
mov
dec
movsb
arpl
aad
in
hlt
nopl
mov
pop
sahf
add
je
test
inc
sub
ret
cld
mov
inc
dec
insl
mov
and
mov
call
inc
xchg
fadds
mov
sub
inc
jns
js,pt
in
scas
sbb
mov
and
xor
mov
inc
inc
dec
repz
or
movsb
xchg
js
xor
jae
movsl
lods
pushf
inc
dec
xor
sub
lods
bound
idivb
packssdw
lds
push
jnp
jge
jl
in
cli
sub
js
lahf
sub
in
test
mov
pop
xor
out
out
mov
xlat
inc
fisubrs
sbb
lea
out
aad
in
cmp
rcll
aaa
ds
in
adc
pop
pop
inc
and
push
addr16
jb
inc
xor
pop
in
imul
sub
daa
cltd
pop
nop
arpl
push
or
iret
pop
out
movsb
xchg
pop
stos
add
inc
es
std
stos
cmpsl
push
inc
dec
sub
push
dec
cmpsb
or
cmpsb
and
testl
lods
test
sar
outsb
pop
or
jge
inc
nop
sub
not
mov
scas
clc
arpl
mov
push
out
daa
mov
scas
fcmovbe
out
lcall
and
push
movb
and
vcvttpd2dqy
push
stos
dec
insb
adc
add
or
sbb
scas
ja
or
hlt
mov
jge
or
test
xchg
adc
out
cmp
nop
into
fs
sbb
push
add
test
ret
mov
cmp
push
popf
sub
pop
int
cltd
xchg
or
cmp
cmp
icebp
ljmp
inc
imul
sub
xchg
xor
int
fsubrs
jno
mov
loopne
scas
xor
sub
testb
and
jns
and
xchg
popa
fwait
mov
scas
push
push
iret
int3
xchg
fldl
loope
in
mov
add
out
xlat
pushf
fisttpl
mov
mov
stc
mov
jge
inc
fucomip
inc
cmp
push
pop
fbld
and
jns
movsb
xor
insl
pop
movsl
fs
inc
sti
test
xchg
loop
rcrb
mov
sti
fidivl
xchg
push
jg
cmpsl
jle
pop
loop
mov
je
lret
inc
fadds
pusha
adc
push
inc
mov
mov
scas
nop
cmc
sbb
je
lods
xor
sbb
mov
aaa
dec
pop
pop
lret
imul
clc
mov
sbb
xchg
inc
mul
mov
push
sub
lret
push
dec
cmp
cmp
pop
push
shrb
mov
mov
lea
int3
test
sub
sbb
fiadds
outsb
test
andl
outsl
imul
inc
sbb
lahf
mov
data16
iret
jge
lods
cld
aaa
push
xlat
or
xor
das
xor
mov
addb
inc
dec
push
je
aam
loope
scas
rcll
pop
adc
movsb
test
or
mov
mov
orl
sub
cmp
inc
test
cmp
js
pop
in
jne
rclb
fmul
inc
loop
popf
ffreep
out
mov
add
outsl
push
hlt
shlb
fstpt
xor
psllq
ja
xchg
vdivss
imul
cmp
inc
movsl
inc
and
ljmp
rcrb
aad
stos
popa
pop
lods
xchg
jns
push
cli
lret
inc
arpl
jp
xlat
cltd
jmp
pop
add
or
sbb
sbb
and
fnstsw
loope
data16
fmull
xchg
inc
cld
stos
xchg
call
mov
push
lock
stc
mov
pop
sub
push
cmp
sub
sub
jecxz
xor
test
pop
jecxz
adcb
add
cmp
mov
int3
rorl
inc
sarl
mov
add
dec
sbb
aas
in
stos
mov
loopne
sbb
pop
sbb
xchg
dec
or
les
pop
jae
mov
jb
pushf
lds
adc
imul
jbe
jo
mov
into
outsb
imul
jle
movsl
popf
in
sub
nop
sbb
ds
pop
jb
or
lods
inc
adc
jp
dec
pop
std
shrb
mov
jns
push
arpl
repz
stc
jne
mov
cmp
je
aas
jmp
clc
sti
cli
cld
dec
es
add
roll
dec
pop
mov
ret
in
pop
lods
add
lds
rolb
jmp
lret
push
arpl
clc
or
dec
cmc
and
fsubr
cmp
movsb
lods
push
mov
daa
xchg
aad
jb
mov
add
cmp
imul
jne
ss
mov
jp
cli
mov
neg
repnz
add
js
sbb
or
jno
fiaddl
mov
std
add
inc
or
in
push
inc
push
jmp
leave
repnz
enter
adc
shlb
cmpb
rorl
ss
push
xor
fcmovbe
mulb
sbb
hlt
fcmovb
pop
jb
sub
cmp
pop
fidivs
add
negb
shrl
test
fwait
or
ja
shll
es
inc
ja
dec
js
or
es
lods
mov
subl
push
xchg
insb
daa
jmp
loop
mov
xchg
inc
imul
incl
out
pop
cmp
push
jbe
push
out
sub
push
push
lock
sahf
push
push
xchg
push
cmpl
rcrl
sbb
and
lods
jmp
cmp
sub
adc
imul
xchg
xchg
push
mov
adc
clc
jo
push
sub
sbb
and
xchg
insl
in
mov
popf
sarl
inc
pop
sti
inc
add
loop
pop
push
sbb
xor
xchg
cmpsl
bound
scas
mov
add
fwait
ret
cmp
fwait
cwtl
sub
mov
cmp
das
shlb
mov
jge
cmpsl
jp
push
mov
push
pop
push
dec
lcall
out
and
push
sar
loopne
jg
cld
imull
or
cli
loopne
inc
fistps
movsl
xchg
mov
mov
repnz
insb
outsb
cmpsb
mov
xchg
dec
aad
ret
je
add
add
lock
push
aaa
sub
gs
add
mov
and
push
imul
dec
shlb
movlhps
shrl
push
ret
scas
fwait
cmp
pop
lret
sbbb
in
xor
lock
inc
sbb
jg
xor
mov
cltd
ss
out
test
addr16
imul
vmovhpd
fmuls
pushf
lret
test
jg
jo
xchg
sbb
cld
xlat
and
mov
mov
jae
outsb
fstps
jecxz
jbe
and
sub
pop
out
cmpsl
pusha
and
inc
cmp
xor
decl
inc
mov
push
daa
dec
lds
and
jnp
inc
call
sbb
pop
mov
xor
lock
mov
mov
int
mov
jbe
test
sub
outsl
add
and
aas
out
mov
les
shl
cli
jne
aas
mov
sti
scas
out
movsl
xlat
push
ret
xchg
outsl
cmpsl
sub
roll
adc
xchg
outsl
xchg
scas
cs
lret
jecxz
loopne
push
adc
popf
ret
scas
fildl
mov
dec
fs
mov
ret
and
inc
inc
adc
cmp
xchg
leave
inc
adc
clc
push
out
aam
les
inc
fwait
cs
pop
cmc
push
push
adc
sbb
adc
je
aam
aam
and
mov
cs
sbb
xor
dec
lds
inc
fbld
rorl
xor
xor
inc
rcr
sub
xchg
jae
mov
cmpsl
inc
and
sbb
sbb
cmc
cld
clc
fdivl
test
jo
jb
dec
rorb
mov
pushf
xor
imul
sahf
call
pop
pop
sub
adc
cltd
cltd
or
push
jge
inc
pop
idivb
pop
mov
outsl
push
outsl
scas
inc
in
shll
cmp
mov
xchg
int
mov
dec
cs
test
or
fxch
int3
aaa
xchg
cmp
sti
scas
sbb
jge
cmpsb
push
fcompl
inc
stc
out
and
inc
ds
test
xor
jae
ljmp
push
adc
icebp
and
add
aad
mov
mov
jno
sub
mov
mov
lahf
into
mov
mov
cmp
cli
cmc
stos
insl
and
lret
dec
push
add
mov
scas
and
fwait
cmp
subl
inc
xchg
fs
ficomps
cmpsb
ss
mov
mov
mulb
cmp
scas
repz
cmp
cmp
loop
mov
xor
ds
dec
jg
xor
stc
arpl
sub
cs
cld
add
and
mov
mov
mov
cmp
or
adc
push
fistpll
mov
les
pushf
in
dec
rolb
xchg
and
cmpb
push
push
psraw
iret
push
in
inc
jl
dec
in
sub
aad
mov
aaa
cmpsl
cmp
xchg
cmc
fwait
out
pop
xor
lock
lds
outsb
xchg
sub
mov
insb
cmpsl
nop
pop
fs
mov
jae
pop
pop
cltd
sahf
pop
popa
ss
fisubrl
xchg
pop
push
xchg
int3
stos
insb
jl
xchg
xchg
and
clc
xchg
data16
movsb
xchg
or
fs
jge
test
mov
arpl
xchg
sub
push
repz
fcompl
add
dec
out
mov
xor
mov
aaa
jbe
mov
in
or
push
xor
adc
sahf
sbb
cld
lds
lcall
add
cmp
xor
pop
les
push
lret
push
movsl
loop
sub
mov
add
scas
jo
test
and
or
aaa
jge
mov
gs
xchg
icebp
or
inc
cmc
push
inc
bswap
xor
daa
outsl
call
inc
add
xchg
dec
cld
mov
xor
das
inc
mov
xchg
mov
pusha
inc
xchg
sbb
push
outsb
and
das
push
and
dec
adc
sarb
mov
imul
repnz
adc
call
les
stos
iret
shlb
mov
stc
xor
pushf
pop
pop
adc
mov
and
adc
lods
pop
cld
mov
xor
sahf
fptan
mov
shlb
in
ret
loope
ljmpw
xlat
je
ljmp
fwait
lds
sbb
int3
pop
mov
push
push
movsl
mov
stos
jbe
pop
mov
jae
dec
and
lahf
mov
insl
push
ljmp
loope
and
mov
jmp
mov
shlb
out
jb
stos
aam
fcompp
stos
xor
aad
roll
roll
out
jmp
inc
loopne
test
aam
into
xchg
push
cmp
out
std
jno
sub
xchg
adc
in
cs
mov
sarb
into
sub
xchg
xchg
andb
test
or
das
ds
cmp
xchg
stos
pop
and
scas
movsb
pushf
insl
outsl
arpl
dec
cld
es
cmp
xchg
jo
xorl
xor
shrl
xchg
sbb
icebp
jns
loop
jo
mov
xor
inc
lahf
cmp
into
push
aam
out
icebp
cmp
cwtl
xchg
hlt
dec
in
sbb
mov
es
add
sub
loop
inc
pop
add
cli
lret
pushf
clc
addr16
imul
mov
cmc
push
xchg
clc
jge
stc
cmp
outsl
xchg
jno
pop
gs
add
mov
cmpsb
test
imul
mov
jl
mov
mov
mov
mov
jl
cmp
popf
xchg
mov
add
std
repnz
mov
cmpsl
sub
inc
aam
adc
iret
dec
movsb
pushf
cld
cmp
testl
adc
rolb
add
mov
icebp
and
xor
push
cmp
or
out
push
cmpsl
ja
push
test
jnp
jno
fwait
push
ficomps
mov
std
mov
cmpsl
lods
insb
push
xchg
into
mov
xorb
roll
inc
sbb
cmpsl
mov
adc
mov
dec
fwait
sbb
cmp
insb
ljmp
push
pop
jle
jmp
sarl
jo
or
loope
scas
sbb
loope
xlat
mov
mov
mov
fsubp
aam
jnp
out
add
jne
rolb
outsb
jae
inc
outsb
mulb
in
jno
data16
outsb
add
addb
pop
cmpsl
xorb
std
outsb
adc
or
mov
dec
push
aaa
push
xor
outsl
gs
mov
loopne
pop
inc
inc
lahf
aaa
xor
sbb
pushf
mov
je
xor
or
mov
fsubr
and
rorl
push
ret
and
mov
mov
cmp
cmp
mov
lcall
and
adc
into
jl
arpl
lcall
dec
xor
push
imul
xchg
ljmp
mov
adc
sub
loope
push
mov
pop
hlt
dec
test
pop
pop
add
inc
jns
and
jno
add
lods
out
rcrb
insb
ljmp
xchg
shl
mov
sub
xor
pop
jge
rcrb
out
lods
mov
pop
daa
imul
cld
insl
sbb
sub
movl
sub
enter
repz
mov
mov
cmpsb
xchg
adc
loop
mov
lea
movsl
adc
incl
je
rcrb
push
push
add
dec
push
lcall
je
into
fcompl
sub
xor
push
icebp
jmp
fucomi
cmp
test
adc
out
push
inc
fbld
and
cli
push
or
lods
or
in
pop
roll
pusha
les
xor
fisttpll
pop
repz
jnp
jmp
mov
aam
adc
mov
sbb
cltd
sub
stos
loop
sub
cmp
push
jnp
inc
fwait
mov
in
fidivrl
dec
push
ret
icebp
lcall
js
and
add
add
dec
push
lret
iret
fsubrl
pop
jae
dec
cmpsb
aad
ficomps
dec
push
call
inc
int3
cmp
mov
daa
enter
bound
cltd
cmpsb
fisttps
lret
sub
sub
fldcw
daa
inc
push
jmp
int
popa
test
xor
pusha
fnsave
in
jnp
cs
jle
aam
ret
jne
rcll
jne
aad
sti
mov
jg
cld
insl
lahf
dec
mov
mov
or
adc
sbb
je
je
in
cmp
cmp
outsl
or
add
or
es
icebp
aaa
add
mov
icebp
cld
cmc
jae
lds
inc
jp
cmpsb
inc
sbb
loope
push
xor
scas
sbbb
fnstenv
xor
pop
in
inc
loop
xchg
popf
pop
inc
xchg
xor
int3
dec
mov
sbb
mov
out
push
loope
punpckhdq
add
cmp
pop
inc
adc
mov
shlb
mov
enter
mov
pop
neg
lock
and
dec
not
dec
jmp
cwtl
mov
pop
xor
push
fidivs
imul
addr16
fcmovne
sarl
mov
add
popf
dec
dec
outsb
pop
mov
imul
cmp
stc
xchg
aam
dec
test
popa
mov
inc
sbb
stos
pop
addl
add
push
lds
or
lds
roll
pop
pop
jns
sbb
testl
repz
xchg
std
jno
pop
divb
fidivrs
gs
ljmp
push
lret
dec
test
es
mov
xor
movsb
xor
mov
and
mov
mov
xor
and
nop
in
ss
insb
sub
out
ljmp
mov
pop
std
or
jg
subb
call
out
jb
mov
or
jp
inc
xchg
lds
push
insb
daa
push
and
xchg
test
mov
lret
test
mov
stos
push
nop
push
inc
push
xor
fmull
push
jmp
shrb
xchg
lods
mov
sbb
insb
lock
ss
out
adc
int
jg
or
mov
lods
mov
in
xchg
xor
jnp
test
jo
xchg
mov
popa
dec
addr16
push
jnp
inc
inc
ret
mov
jns
cmp
pop
cmp
mov
mov
xor
mov
pop
pop
mov
jecxz
movsl
movsb
sahf
in
in
outsl
push
sbb
jns
push
xchg
outsb
sub
jmp
mov
je
push
and
lret
cld
push
mov
int
and
and
cmp
mov
insb
insl
dec
push
xchg
sub
xor
sub
aaa
je
mov
dec
push
push
arpl
jae
inc
outsl
push
adc
mov
repnz
repnz
xor
outsb
jge
fistps
movb
mov
inc
xchg
mov
loop
jle
and
or
or
mov
sub
cld
iret
pop
adcb
jle
xchg
mov
repz
js
cmpl
fwait
pop
mov
cmp
fcom
mov
out
mov
adc
dec
imul
or
push
hlt
mov
pop
xor
jg
push
lret
movsb
ret
inc
sarb
test
inc
and
xchg
ficoms
fsubl
fwait
or
jb
xchg
gs
int
mov
mov
adc
jge
leavew
inc
and
mov
push
nop
lods
out
mov
loopne
inc
adc
ficomps
nop
fisttpl
pushw
mov
push
sub
movsl
sbb
adcb
ds
mov
inc
pusha
pop
mov
xchg
xor
sub
pop
fdivs
or
inc
cld
cli
pushf
jg
pop
hlt
or
cmp
lods
insl
shlb
sbb
lea
aam
xchg
pushf
pop
lods
adc
ret
push
dec
cmc
or
lret
fbld
mov
cwtl
aam
push
dec
dec
inc
out
cmp
das
sbb
adc
idivb
cmp
lcall
dec
sarb
xchg
pop
lods
fdiv
cmpsl
dec
push
jecxz
add
ja
mov
popa
pop
xchg
imul
jmp
push
ror
sbb
or
test
and
outsl
js
ljmp
insb
sub
mov
fcmovnbe
xchg
mov
push
loop
push
adc
jmp
cmpb
ror
mov
adc
mov
mov
xchg
movsb
lods
jmp
ss
mov
cmpsl
in
loopne
addr16
inc
push
mov
dec
mov
pop
gs
out
mov
jecxz
daa
cs
cmp
cli
shlb
pusha
aas
mov
call
adc
fisubrs
xchg
push
shlb
lock
fs
mov
lret
jnp
jae
lret
out
push
fisttpl
adc
mov
pop
fisttps
mov
insb
jnp
push
jle
add
lret
scas
xor
push
mov
addr16
and
and
ljmp
rcl
js
cs
and
add
jno
or
icebp
mov
mov
arpl
inc
ficoml
out
fwait
cltd
rcr
add
call
test
lods
dec
call
int
lahf
mov
push
mov
cmp
mov
push
sbb
pushf
mov
lods
lea
pop
clc
xchg
ss
pop
iret
or
repz
push
dec
cmpsb
adc
scas
shll
mov
fwait
push
out
or
sti
xor
je
mov
popf
cmc
add
shlb
cmp
insl
mov
add
mov
push
movsb
xor
cmpsb
cmc
push
test
adc
inc
push
sarb
movsb
dec
fld
adc
out
cld
lods
sbb
jle
mov
add
sbb
add
popa
fnstenv
push
push
cmpsl
cmpsb
sub
jne
rol
loopne
mull
gs
xor
ret
addb
adc
inc
std
inc
out
je
outsl
dec
mov
xor
push
bound
lret
fidivrl
aas
dec
leave
mov
xor
xchg
fwait
outsl
mov
xor
mov
mov
sbb
lcall
jle
jbe
scas
dec
lods
rclb
call
cli
shll
into
jno
aam
add
xlat
dec
add
and
xchg
out
js
add
add
int
lods
inc
or
outsl
dec
push
sarl
xor
xchg
dec
jle
sub
aam
daa
jo
hlt
push
jecxz
sbb
pop
mov
pop
xchg
adc
cmc
mov
push
test
sbb
add
dec
and
in
mov
int
xor
sti
cwtl
xchg
lods
cmp
sub
adc
popa
mov
data16
push
mov
daa
sub
sti
lcall
jnp
sub
adc
or
push
dec
sbb
jno
sahf
in
adc
jecxz
ret
cmp
push
adcl
jne
xchg
rclb
ret
notb
rclb
mov
lds
sub
pusha
sub
add
sbb
in
hlt
jecxz
jl
push
and
cmp
mov
fs
out
fcmovb
mov
scas
fistps
js
ljmp
daa
sub
out
in
jne
mov
fs
lods
mov
cwtl
xor
push
pop
adc
outsb
inc
insl
xchg
movsl
aaa
lahf
sub
inc
outsb
push
call
pop
cmp
fldcw
cmc
syscall
sahf
cwtl
mov
inc
inc
sub
sbb
negl
scas
sarb
aas
cmp
movsl
es
pop
jo
jge
enter
insb
nop
dec
dec
ficomps
or
rolb
mov
pop
or
lea
cmpsb
pushf
and
cmp
out
jecxz
jo
mov
push
mov
or
cmc
mov
add
fwait
mov
dec
lret
push
scas
sub
mov
jp
rcrb
xorl
mov
sti
ljmp
jae
jo
lcall
cmc
adc
xchg
fcomip
or
mov
xor
push
inc
stos
push
movsl
cltd
rcll
nop
insb
mov
fs
mov
mov
ds
pushf
push
dec
fstl
int
leave
test
loopne
addr16
sbbb
pop
xchg
shr
mov
movb
xor
xchg
hlt
icebp
fs
leave
xchg
mov
repz
sub
repz
push
adc
shl
pop
in
mov
add
in
add
mov
mov
inc
neg
lret
ljmp
or
push
mov
xchg
sub
sub
lret
push
push
sbb
adc
adc
mov
jge
jae
fdiv
fcoml
adcl
mov
mov
sarl
fwait
arpl
mov
and
scas
cs
adc
rcrl
mov
pop
aas
test
mov
push
and
sbb
loopne
adc
aam
adc
fdivs
lods
mov
movsb
in
push
mov
add
call
sarb
adc
cmc
add
popf
push
jl
fnstsw
cltd
cmc
xor
xchg
lea
lods
imul
iret
aad
or
arpl
scas
stos
push
xor
add
lret
jmp
pop
sub
iret
mov
fdivp
dec
mov
outsl
pmuludq
dec
sbb
gs
shrl
xor
xor
rcrl
jge
jl
cltd
lods
hlt
xlat
jmp
cmp
mov
rep
mov
stos
repz
pusha
insl
adc
sub
outsb
fsubl
popf
es
dec
jl
shrb
jg
sub
xchg
int3
mov
stos
adc
xor
nop
xor
push
inc
outsb
xchg
inc
push
outsb
lret
adc
fwait
mov
inc
sbb
push
cwtl
push
cmp
loop
sub
adc
imul
pop
dec
cmp
leave
stc
inc
xor
or
xor
sar
mov
imul
insl
hlt
cmpsl
pop
xor
pop
ljmp
shll
adc
in
adc
hlt
pushf
add
in
cwtl
fdivrs
jns
pop
mov
in
mov
test
sub
lods
loopne
repz
popf
push
into
and
pop
mov
js
out
cltd
fldcw
in
push
pop
call
std
ljmp
or
pushf
les
lock
mov
xchg
push
jbe
ja
mov
mov
out
sub
add
mov
scas
mov
pop
ret
jnp
cmpsb
push
xchg
stos
and
dec
mov
call
sbb
das
fs
lret
xlat
or
inc
mov
or
xor
adc
mov
pop
and
cltd
xchg
or
ror
jb
mov
jecxz
push
mov
jno
orb
je
and
leave
add
test
pop
sarl
test
pop
adc
aas
loope
jl
and
jbe
pop
jno
mov
add
or
pop
lods
cld
jmp
lret
out
pop
pop
adc
fisttpll
ljmp
fs
add
je
andb
jl
jo
lods
loop
mov
jne
xor
pop
scas
scas
repz
mov
push
mov
ror
scas
jo
lcall
adc
inc
je
mov
add
or
pop
andl
inc
mov
xor
pusha
dec
ss
insl
aad
andl
mov
xchg
push
orb
jno
movsl
inc
mov
and
pusha
std
jnp
jmp
xchg
popf
fisttpl
pushf
cmp
inc
cwtl
leave
inc
xchg
out
jne
xchg
cmp
and
out
lods
mov
cmp
jae
rcl
and
pop
jbe
loop
mov
pop
xlat
xor
and
int3
or
addr16
repz
xchg
scas
das
mov
mul
or
sahf
lock
inc
add
cmp
mov
lea
sbb
or
lret
or
add
stos
dec
ret
dec
outsb
jge
shr
sbb
dec
mov
inc
push
lods
jb
pop
pop
push
neg
or
lds
cmp
ret
jge
push
call
pop
dec
xchg
push
arpl
sbb
in
sub
in
xchg
data16
lret
outsb
xchg
ret
scas
sub
xor
add
lods
hlt
adc
xchg
sub
out
sbb
out
stc
adcb
jg
cmp
pushl
xor
in
mov
mov
pop
rcrl
in
clc
xlat
lods
bound
lahf
adc
test
mov
and
sbb
push
add
xchg
ret
lds
int3
fcoml
aam
xchg
jge
testb
mov
xchg
call
or
pop
mov
outsb
clc
into
or
cli
jp
cmpb
in
int
dec
and
repnz
push
sbb
mov
and
sahf
xchg
rcrb
jg
hlt
int3
rcll
dec
sbb
loop
out
mov
dec
les
sbbb
test
arpl
scas
stos
outsb
out
jno
push
jnp
cmp
lret
out
pusha
aam
aam
mov
imul
sti
fildl
pop
out
xlat
out
xchg
popa
pop
push
xor
adcl
fdivrs
in
js
scas
mov
hlt
push
xchg
and
and
or
addl
add
leave
xchg
inc
fwait
pop
cmc
in
rdtsc
sbb
mov
or
lods
or
push
imul
inc
inc
and
divps
push
and
or
adcb
clc
pop
dec
xchg
jg
push
dec
insb
hlt
adc
call
ljmp
sarl
out
mov
out
xor
std
mov
mov
sbb
xchg
filds
or
sub
insl
ret
dec
pop
movsb
xchg
pop
pop
aad
xchg
mov
mov
ret
icebp
xor
inc
sbb
mov
mov
jbe
mov
pusha
pop
adc
pusha
mov
xchg
jne,pt
movsl
fistl
fildll
xchg
loop
out
push
cmpsl
sahf
jp
int3
mov
es
push
sub
outsl
inc
sar
jecxz
sahf
iret
jnp
mov
andb
mov
out
rorb
in
inc
xchg
push
dec
mov
jns
mov
dec
mov
das
cld
mov
pop
mov
mov
andl
scas
jg
cmp
dec
mov
mov
push
jecxz
mov
ja
repz
out
jg
sbb
fsubl
lcall
stos
cmp
stos
ds
iret
fstpt
rcl
adc
sub
or
xor
cmp
inc
adc
adc
adc
sbb
add
sub
ret
pushf
iret
sub
imul
call
sbb
mov
pop
mov
push
jbe
rorl
push
sub
inc
arpl
lret
lods
adc
pusha
and
cmpsl
popa
fst
xchg
mov
inc
lods
movsb
pop
aaa
push
push
lds
rclb
mov
out
adc
call
stos
test
jne
xchg
xchg
repz
mov
shrb
jl
andb
pusha
bound
mov
in
scas
sub
or
scas
out
filds
gs
dec
xchg
ja
cs
or
shll
fwait
sbb
nop
outsb
in
pushf
imul
in
int
sbb
lahf
mov
or
enter
jo
dec
or
mov
lods
and
stos
or
shlb
ja
jp
or
cli
add
pop
dec
xor
push
jl
mov
and
rcl
xor
rcrb
xor
insb
dec
mov
push
insb
push
cmp
in
mov
aas
mov
pop
nop
xchg
jno
insb
cmp
jecxz
movsb
pop
std
test
pop
jno
icebp
or
jno
pop
jo
inc
sub
jecxz
sub
inc
out
dec
xor
popa
sahf
sbb
leave
cmp
dec
lret
mov
out
sbb
mov
mov
ljmp
stos
lret
aam
pop
aam
shlb
mov
jb
pop
and
sub
and
rol
mov
mov
mov
cmp
sub
lods
jns
cmp
es
popa
popf
push
cmp
jb
negb
push
mov
adc
out
jge
sbb
sub
or
mov
imul
leave
fmuls
inc
es
xchg
fnstsw
scas
out
mov
sub
lcall
xor
pop
sahf
test
pop
xlat
nop
xchg
in
jnp
stos
dec
sbb
dec
dec
aaa
inc
lock
movsl
xchg
ss
lea
enter
push
mov
inc
push
mov
mov
sub
mov
sbb
xchg
or
iret
push
ljmp
fistpl
int
popa
pop
and
nop
ss
push
je
or
push
rcrl
adc
sbb
pop
cltd
or
fildll
jge,pt
inc
jge
dec
pop
cmpsb
mov
mov
lods
call
fildl
stc
and
cwtl
xchg
adc
inc
ljmp
mov
addr16
ret
push
repnz
cmp
lahf
add
outsl
cmp
xor
or
mov
xor
insb
aam
pop
lret
cmp
push
xor
neg
popf
out
lret
mov
sub
insl
push
das
popa
sbbl
insl
stc
mov
jp
xchg
adc
cmpsl
or
mov
mov
lock
pop
jb
aas
outsl
push
imul
loope
scas
fcom
fcomp
adc
stos
pushf
lcall
dec
or
push
mov
or
xchg
arpl
mov
loope
and
in
mov
clc
inc
jne
jg
test
cmp
inc
push
les
popl
std
mov
shll
jle
pop
test
std
add
popf
sbb
mov
std
mov
fdivrs
mov
outsl
jnp
loop
cmc
call
xorb
inc
pusha
bound
mov
pop
xlat
inc
push
sbb
pop
les
jg
adc
push
insb
add
and
outsl
dec
ljmp
or
jo
sbb
inc
notb
jmp
dec
out
xlat
xchg
mov
xchg
cltd
cmpsl
stos
das
repz
in
jb
adc
outsl
dec
adc
imul
adc
xor
xchg
ss
push
call
mov
pop
xchg
ret
xchg
ss
popa
icebp
pushf
clc
inc
andl
testb
scas
sub
mov
or
fstl
mov
mov
mov
movsl
jmp
icebp
lds
insb
push
fisubl
pop
mov
lock
push
add
sti
mov
dec
dec
mov
cmpl
sbb
out
ja
sub
pushf
dec
rcrl
cmp
dec
arpl
pop
ret
dec
xchg
pop
ljmp
xor
out
xor
mov
inc
xchg
xor
dec
mov
adc
fsin
imul
inc
scas
jns
pusha
lret
mov
or
xor
push
aaa
cld
bt
push
mov
xor
cs
cli
insb
out
pop
data16
imul
xchg
sub
pop
mov
inc
cmp
test
int
out
aad
in
sbb
clc
ss
xor
lock
in
ret
in
fnstsw
xchg
jmp
imul
aad
inc
movntq
pop
pop
mov
xor
lods
jge
adc
cmpsb
sahf
notrack
stos
jo
movsb
mov
and
xchg
dec
gs
sbb
fstpl
adc
xchg
mov
cmp
les
xor
stos
pop
xlat
xorl
cmovb
sbb
bound
cmp
fdivp
jecxz
sub
icebp
aam
leave
xchg
adc
int
or
pop
xchg
mov
add
jo
adc
movsl
cmc
cmp
pop
dec
or
adc
dec
addr16
push
aaa
inc
and
sbb
std
xchg
xor
sub
hlt
jbe
outsl
jmp
cld
insl
jne
xor
inc
into
dec
pop
pop
lahf
jnp
sub
jnp
les
rorl
stos
cmp
imul
pop
mov
cmp
jge
add
sub
xor
sub
adc
sbb
ss
fimuls
idivl
mov
gs
dec
in
push
mov
pushf
push
or
inc
sub
add
call
mov
aaa
jecxz
sub
cmpsl
mov
adc
jp
sub
xchg
mov
push
pop
out
inc
xchg
sbb
ret
jle
dec
imul
and
cld
lret
out
xor
dec
fadds
mov
hlt
cmp
nop
dec
sbb
in
leave
shrl
jno
test
jmp
insl
cmpsb
dec
cmpsl
fstpt
mov
pop
add
loop
mov
dec
push
adc
jl
loopne
mov
aad
jae
imul
inc
push
xor
sahf
pop
push
jbe
nop
sub
inc
clc
or
jge
loopne
mov
cmpsl
inc
add
sub
adc
and
lcall
sbb
rcr
pop
aad
mov
es
ds
ljmp
scas
adc
xchg
call
or
cmpsl
lds
roll
mov
and
xor
or
jnp
dec
push
mov
shrb
mov
adc
jnp
nop
fs
mov
mov
cli
add
mov
mov
cmp
pop
out
or
jb
xchg
das
aam
adc
scas
xchg
wrmsr
int3
sub
dec
add
lahf
aad
aas
daa
mov
iret
jg
nop
sahf
mov
mov
mov
testl
cli
out
mov
aas
inc
sub
inc
cltd
mov
sub
lds
pop
inc
and
xchg
aad
push
adc
bnd
fsts
pop
arpl
dec
imul
ficomps
sbb
nop
pop
add
cld
sub
clc
ret
xlat
mov
scas
add
ja
mov
push
dec
mov
xor
in
rcl
scas
scas
repz
aam
sub
dec
cli
stos
repnz
imull
fcomi
hlt
push
jl
bound
ficomps
test
pusha
pop
cs
push
pushf
xchg
shll
in
aaa
popf
lret
and
adc
fisttps
test
mov
mov
rorl
int
fildl
xor
int
imul
mov
mov
stos
lahf
dec
mov
sub
mov
out
or
push
ret
clc
sbb
into
jg
lcall
lret
cmp
idiv
sti
or
jo
jmp
mov
sub
daa
out
or
inc
mov
mov
fidivrs
mov
add
jb
sub
add
lcall
lcall
or
cld
cld
xchg
sbb
insw
xchg
sbb
je
adc
pusha
xor
jmp
fidivs
xor
insb
sub
push
out
sub
call
dec
xchg
arpl
xchg
push
xchg
sbb
mov
jb
dec
stos
inc
aad
enter
dec
dec
lods
ljmp
in
pop
jge
and
sub
sbb
add
pop
mov
je
scas
ret
push
lods
push
movsb
cmp
add
popf
pop
cmp
inc
inc
or
add
mov
dec
mov
mov
add
mov
cmpsb
frstor
xor
mov
testl
xchg
push
push
mov
xchg
mov
inc
jle
xchg
daa
stos
out
jmp
cmp
xchg
add
cwtl
fcoml
pop
sub
pushf
fldenv
adc
xlat
mov
lods
jno
dec
lea
cld
mov
and
aam
sub
cmpb
std
push
and
in
pop
stos
mov
mov
divb
scas
daa
in
jg
stos
bound
movsb
mov
sbb
call
mov
lods
and
aaa
mov
xor
jns
pushf
xchg
test
xor
or
sbb
add
int3
cwtl
cmp
jne
push
pusha
outsl
stos
dec
mov
call
dec
into
mov
sbb
or
sub
mov
sbbb
and
mov
test
add
cmc
mov
xchg
mov
bound
adc
call
lahf
xchg
ret
stc
aaa
ret
mull
push
shlb
push
out
mov
xchg
cltd
loopne
inc
icebp
dec
and
int
dec
fildll
mov
js
icebp
imul
jbe
adc
fistl
lcall
lock
mov
leave
or
jge
into
cmc
icebp
test
ss
js
fisttps
add
lcall
mov
ds
daa
dec
js
cltd
jp
aas
rclb
mov
mov
jecxz
int
xchg
dec
mov
push
mov
push
dec
into
lock
test
jae
xor
fsubrs
mov
jmp
pushf
pop
rcr
repz
pop
jne
mov
pop
xor
xor
call
cmp
out
or
insl
pop
push
stos
daa
push
cmp
das
fmull
out
xor
stc
daa
int
fimuls
push
cmpxchg
addr16
addr16
fs
arpl
lock
in
popf
dec
dec
jbe
sbb
lret
dec
add
arpl
xchg
jl
and
sbb
movsb
mov
jo
aad
in
ret
add
lods
loope
push
push
mov
adc
add
jp
out
divl
xchg
jno
or
dec
sbb
ss
shlb
push
inc
xchg
clc
sub
add
mov
stos
dec
pop
adc
xor
push
sub
pop
sti
and
and
pushf
sbb
push
cwtl
xchg
cmp
cmp
and
loope
cli
jnp
aad
jne
test
fistps
loopne
mov
xchg
divb
arpl
js,pn
inc
gs
jmp
nop
adc
push
adc
xor
adc
das
sbbb
fs
lea
lods
sar
prefetch
leave
pop
adc
adc
loop
idivb
adc
inc
subb
cmp
jmp
sub
sar
rcrb
test
sti
push
stos
shll
scas
shrl
mov
into
inc
enter
je
fldl
lock
adc
sti
inc
bound
jo
lcall
mulb
insl
fisttpl
pop
push
je
movsb
pop
pop
push
in
lods
popf
push
iret
divl
dec
xchg
adc
test
cltd
sbb
and
pop
xor
xchg
xchg
in
pushf
mov
insb
in
mov
mov
mov
jecxz
sub
mov
sub
jmp
fs
mov
test
jle
mov
inc
push
push
push
push
shl
add
outsb
mov
or
jae
jo
cmpsl
mov
bound
push
lods
cmp
es
xchg
mov
cld
sti
jle
pop
mov
out
in
dec
jno
xor
and
daa
sub
mov
jo
dec
out
int
sub
mov
jno
add
xchg
pop
into
sub
jno
push
lahf
dec
dec
repz
mov
ljmp
adc
sub
outsb
or
pop
xor
mov
fldcw
aaa
hlt
testl
dec
add
jge
int3
inc
and
mov
dec
insb
lock
das
fcoml
and
lock
dec
sbb
jl
xchg
mov
repnz
pop
xorl
loop
das
mov
out
sub
dec
int3
test
push
leave
repz
inc
scas
mul
mov
mov
imul
fnstenv
inc
in
push
xor
cwtl
xchg
fbld
lods
xchg
cmpl
adc
sub
sub
fiaddl
xchg
pushf
jne
pop
repnz
addr16
or
jg
mov
xor
enter
mov
push
sub
mov
out
cmpb
cmpsl
int
sub
xchg
sub
add
ffree
pop
out
dec
test
push
lods
lea
jae
es
mov
outsl
mov
roll
pop
mov
in
xchg
add
inc
and
xchg
dec
and
sbb
push
inc
call
inc
pop
loop
add
xor
sarl
mov
mov
clc
hlt
push
jl
xor
into
cmp
stos
and
sub
and
pop
mov
sahf
pushf
cs
push
jae
jge
mov
xchg
xchg
outsl
scas
mov
imul
test
cli
lock
enter
cmp
pusha
sahf
das
sub
ret
ljmp
jae
fsubrs
repnz
hlt
jnp
das
ss
add
pop
or
scas
stc
lret
jl
ret
xor
cmp
add
fistpl
and
insb
leave
push
lcall
mov
lret
mov
andb
sub
test
idivl
pop
xchg
in
push
and
jle
mov
inc
push
fcompl
repz
test
mov
cmp
adc
rorb
mov
aas
xchg
aad
jmp
xor
or
cli
or
and
imul
out
xchg
std
out
lret
jbe
arpl
sub
daa
cs
add
or
pop
jb
lahf
icebp
in
int
dec
and
aas
pop
lret
stos
insb
daa
cmpb
sahf
fmul
movsl
scas
mov
out
pop
push
stos
clc
mov
mov
pop
pop
dec
or
xchg
sub
mov
std
fdivl
les
push
into
xor
mov
out
cmp
cltd
lret
push
dec
jl
mov
cmp
pop
sbb
lahf
fwait
cmp
sarl
outsl
push
cmp
and
aas
push
or
dec
insl
pop
xchg
mov
push
jae
test
loopne
fdivr
movsl
push
mov
mov
xchg
xor
sub
lods
jns
lahf
vsqrtps
test
mov
jecxz
int3
jl
repnz
xchg
and
push
mov
rcl
arpl
cmp
sbb
ror
ret
cmpb
fwait
pop
lock
dec
dec
lahf
lahf
sub
xor
ds
scas
mov
sbb
mov
sub
or
jo
dec
push
jle
jge
ss
loope
jo
cli
inc
push
pop
ds
jl
imul
test
cwtl
stc
fimuls
out
cmp
inc
jne
push
lods
loop
in
call
push
sahf
push
and
ja
popa
push
mov
jp
sub
lcall
cmp
mov
ljmp
adc
cmc
rol
xor
jns
inc
or
aam
mov
shll
cmp
mov
jle
fwait
xchg
fsubrp
add
pop
in
mov
data16
lret
push
adc
ja
rclb
fistpll
pusha
cmp
ja
xchg
shrl
fwait
icebp
jb
sbb
lea
cld
rorl
mov
inc
jg
fmulp
cwtl
push
dec
and
cmp
xchg
arpl
repz
jg
or
and
stc
aaa
xchg
lods
or
and
mov
and
adc
adc
mov
dec
insl
rcl
int3
mov
in
jge
adc
push
jns
add
sub
mov
or
scas
stos
mov
pop
cmpb
cs
or
and
test
xchg
mov
jae
aad
gs
xor
jno
mov
mov
aad
add
andb
adc
inc
push
pop
dec
mov
jge
jnp
push
cmp
jge
jbe
fmull
ss
repz
pop
loopne
cmp
or
cltd
je
out
in
jns
je
loope
movsl
push
or
xchg
mov
adcl
cs
cmp
mov
dec
mov
mov
xchg
and
mov
mov
dec
mov
in
add
in
mov
mov
mov
mov
bound
xchg
mov
push
test
pop
mov
pop
movzwl
xor
xor
mov
pop
fwait
sbb
adc
fistpl
ja
and
xor
mov
seta
sbb
sub
pop
outsl
mov
lods
jne
mov
cld
sbb
test
std
or
pop
out
test
lods
sub
clc
or
inc
push
ss
xchg
xor
jae
cmpsb
mov
dec
rolb
mov
fidivs
mov
std
cmp
push
ret
inc
sub
int
inc
pop
fnstcw
add
jmp
or
fisubrl
aaa
fcomip
shr
das
dec
cltd
xor
mov
sub
shrb
jno
clc
mov
cwtl
stos
jmp
ficoms
in
mov
mov
dec
fdiv
xchg
or
or
add
jmp
stos
cmp
cmpsl
push
rol
in
mov
push
pop
xchg
pop
and
pop
jge
mov
movsl
test
dec
jp
jecxz
push
xchg
lret
jb
or
dec
inc
push
movsl
fwait
in
fdivrl
pop
scas
in
mov
adc
mov
mov
scas
cltd
js
xchg
sbb
data16
js
pop
lds
lret
jp
test
mov
loopne
or
add
xchg
loopne
and
out
loope
pop
mov
lock
and
adc
cmp
fcoml
arpl
fistl
or
pusha
jns
xor
jbe
xlat
pop
mov
push
push
test
mov
push
sub
xlat
rcrl
leave
fisttps
and
sbbl
loop
ret
adc
sub
xchg
inc
aam
cmp
lds
adc
test
push
gs
shrl
xchg
adc
mov
pop
stos
adc
mov
hlt
push
scas
sarb
push
and
lods
and
adc
sub
in
dec
sub
popf
loopne
js
xchg
xor
pop
push
sub
aam
cltd
iret
adc
insb
sbb
movsb
dec
sub
fcmove
mov
mov
lods
or
push
jle,pt
mov
test
jae
fildl
push
xor
in
jns
insl
negb
ret
xchg
divb
rcrl
pop
xchg
dec
mov
mov
loope
cmc
dec
xchg
imul
in
les
xor
sub
jg
add
iret
fiaddl
xchg
push
mov
test
cmc
or
push
jae
xchg
push
js
fidivl
and
sbb
cmp
xchg
test
cmp
loope
mov
out
push
mov
or
xor
cmp
mov
mov
jae
jne
cmpsl
mov
push
xlat
in
push
pop
fnstcw
test
fisttpll
dec
lahf
push
inc
aad
adc
push
fstps
pop
idivb
dec
xor
popf
test
dec
std
pop
pop
in
adc
in
test
int3
jg
pop
sbb
insl
cmp
addl
mov
adc
inc
push
pop
mov
jle
mov
xchg
jl
push
test
lds
cmp
nop
cmp
mov
pop
repz
push
sti
push
scas
jp
pop
gs
mov
push
xor
push
shlb
lcall
lea
fs
enter
adc
xchg
fiaddl
cmp
jg
jmp
std
dec
mov
loopne
fdivrl
je
inc
fsts
dec
adc
sbb
jmp
sbb
add
mov
flds
adc
cld
dec
rcr
test
adc
pop
xor
sub
push
sbb
jp
int
dec
out
add
xor
js
jmp
pusha
or
aam
psubusw
pop
insb
mov
movhlps
and
dec
test
dec
xchg
pop
mov
pop
cmp
inc
sub
outsl
sub
enter
pop
push
cli
jg
pop
jge
cwtl
mov
xor
hlt
mov
pop
cmp
vsqrtps
jb
lods
outsl
outsl
mov
fldenv
shrw
fsubl
repnz
xchg
in
dec
repnz
cltd
mov
sarb
push
nop
jl
ret
in
or
cs
addr16
inc
xor
mov
addb
mov
lahf
mov
addr16
push
lret
lret
movsb
das
or
adcb
cmpsb
outsl
push
repnz
adc
lods
dec
aad
ret
and
sub
mov
rol
stos
sbb
cltd
jno
mov
xchg
push
mov
popf
jns
and
mov
or
sub
loop
xlat
data16
jae
or
dec
aam
inc
sbb
stc
in
test
sub
lahf
in
mov
lea
sub
push
cmc
decl
dec
insb
push
lds
mov
cmp
and
sub
inc
ret
inc
push
jnp
call
inc
fcmovbe
push
jg
into
push
add
negb
aam
shlb
fldl
add
jmp
adc
int
ret
decb
std
cmpsl
imul
stos
jle
scas
icebp
sbb
dec
sub
dec
adc
xchg
fists
push
mov
sub
or
adc
and
scas
test
jl
mov
add
pop
movsb
inc
and
movsl
pusha
mov
loopne
das
xor
xchg
lret
and
add
xchg
outsb
fwait
into
add
test
je
popa
jne
fistps
ljmp
dec
mov
xchg
cmp
movsb
js
inc
pop
cmpsl
movsb
jge
loope
lea
stos
xchg
and
into
movntq
out
lea
lret
sub
aam
imul
out
lcall
fwait
ds
daa
push
movsl
fstpl
cmp
jge
and
push
sub
xlat
pop
test
repnz
sub
or
ljmp
jbe
into
bound
mov
cmc
pop
sub
xlat
mov
fisubl
out
nop
add
pop
xor
adc
inc
mov
adc
sub
cmp
xor
aad
pop
mov
and
adc
push
rcrb
dec
inc
dec
and
leave
dec
and
jne
jp
push
push
mov
stc
stc
mov
jo
sub
pusha
insb
addr16
cwtl
das
into
in
sbb
add
ret
xchg
fwait
fs
jecxz
xchg
jg
imul
shll
inc
pop
or
ljmp
add
push
adc
es
xchg
mov
hlt
xchg
xor
lret
out
inc
test
cmpsb
roll
push
icebp
adc
popf
ljmp
in
mov
mov
inc
or
lcall
out
pushf
out
adc
sub
rcrl
pop
ficoml
stos
les
jns
std
dec
cmp
dec
push
lea
inc
insb
ret
into
adc
sahf
add
pushf
rcrl
mov
in
enter
mov
mov
or
jmp
lods
imul
jp
mov
test
push
dec
xchg
insb
sbb
and
mov
jg
xor
push
sbb
out
dec
inc
inc
xor
inc
bound
xchg
lods
and
pop
mov
adc
test
repz
bound
xchg
dec
xchg
sbb
ficoml
pop
clts
out
testb
psllq
pop
fbstp
push
sub
jb
sub
test
test
dec
jmp
aas
jecxz
lret
jmp
mov
inc
and
rcr
inc
lock
cmpsb
jo
mov
stos
and
push
sbb
ret
inc
push
movsl
hlt
imulb
mov
push
jne
sub
shrl
movsl
inc
sub
cli
cwtl
or
add
lea
imul
fistl
cld
mov
ss
push
push
bound
in
or
add
push
jns
add
xchg
dec
js
xor
pop
xchg
or
out
push
imul
pop
aas
lea
mov
pop
mov
clc
adc
push
jp
jae
inc
push
adc
nop
mov
lret
xchg
push
into
pop
cmp
push
jge
mov
out
inc
mov
rcrb
dec
mov
clc
xlat
mov
testb
test
loop
lods
enter
add
shrb
sub
jp
pop
inc
mov
inc
cmp
mov
jecxz
fisubs
nop
ds
mov
mov
mov
or
imul
xchg
and
addr16
sub
inc
test
xor
mov
cmpsb
xchg
repnz
xor
adc
xor
test
sbb
and
adc
cltd
or
cmp
pop
mov
aas
jae
dec
inc
xchg
push
pop
jp
into
mov
xlat
mov
into
insl
mov
jge
mov
leave
xchg
xchg
pop
outsl
aaa
mov
loope
arpl
data16
dec
lahf
xor
aas
int
inc
stos
adc
fnsetpm(287
jmp
inc
call
jl
rolb
dec
iret
jmp
scas
roll
idivb
test
cmp
cmp
jb
test
loop
add
inc
test
mov
lcall
push
and
xlat
xor
mov
paddsb
mov
icebp
cmpsb
cmpsl
stos
dec
push
xchg
push
les
push
stos
sahf
pop
leave
test
mov
lret
jo
push
lret
in
inc
fwait
push
test
jl
scas
mov
mov
lret
stos
in
mov
add
and
rol
rol
sbb
cmp
sbb
negl
cld
sarl
jbe
inc
add
add
jbe
imul
jns
in
fldl
cmp
pushf
bound
jae
xor
out
pop
mov
mov
fdivp
inc
jg
jnp
pop
out
mov
int
int3
mov
aaa
add
or
mov
sete
cmp
outsb
aas
loope
out
jbe
sarl
loope
call
ljmp
jno
cld
pop
les
xor
jnp
sub
sarb
jns
and
repnz
nop
xor
mov
test
xlat
push
jle
dec
pop
pop
lds
and
push
mov
cltd
mov
adc
cmp
jp
dec
pop
fcmovne
mov
daa
mov
mov
mov
push
fucomp
push
add
mov
fidivl
xor
aaa
mov
aad
cmp
test
jp
and
jnp
or
mulb
sbb
pop
addb
data16
ror
aam
pop
adc
inc
imul
pop
arpl
add
adc
push
fdiv
add
iret
loopne
mov
in
hlt
int
inc
mov
pop
push
pop
ljmp
out
fnstsw
cli
and
jb
mov
adc
pop
leave
push
test
mov
xchg
ror
in
adc
lods
sbb
lea
mov
mov
cmp
push
push
mov
cwtl
push
push
and
outsl
repnz
stos
repz
fs
imul
mov
rorb
loop
and
xchg
sub
jae
cwtl
out
jae
scas
in
xchg
icebp
push
mov
in
sti
jge
lea
in
lea
mov
adc
pop
fstps
or
xor
push
xchg
adc
popa
aam
cmp
in
xor
pop
out
cmpsl
outsb
jle
mov
inc
popa
test
shrd
push
std
add
sahf
adc
jp
imul
sub
cmc
add
test
mov
cld
mov
aaa
pop
inc
adcl
mov
sti
mov
imul
fcoml
in
xchg
mov
repz
pop
adc
sahf
das
cmp
sub
in
add
ret
scas
adc
jg
jmp
call
js
sbbl
add
int3
inc
mov
jle
fildl
dec
les
and
jge
cmp
sub
insl
pop
cs
sub
lods
pop
je
dec
incb
ret
adc
xor
mov
sbb
inc
movsb
iret
pop
dec
lods
scas
stos
cmp
xchg
in
mov
push
call
xchg
stos
push
imul
ljmp
out
and
lret
nop
popf
lea
xchg
sbb
fbstp
push
aam
mov
das
fsubl
in
stos
test
xor
inc
ja
js
js
jo
lahf
aas
outsl
sbb
popf
and
ja
das
lds
or
mov
pop
inc
hlt
gs
push
call
jmp
fisttps
inc
je
pusha
jp
repnz
mov
outsl
jno
xchg
pop
popa
adc
fsubr
fdivl
and
call
push
inc
out
inc
xchg
dec
sub
pop
inc
iret
je
mov
add
movsl
mov
or
shlb
stos
adc
les
sbbl
cmp
loop
jle
repz
je
neg
jbe
add
jle
lock
push
xor
pushf
jns
push
jno
mov
es
sti
jg
xchg
jmp
mov
adc
jne
rorl
mov
mov
adc
inc
lcall
or
cmp
cmpsb
sahf
jbe
out
dec
jo
and
sub
pop
cmp
call
es
pop
mov
mov
cs
fidivrl
dec
push
faddp
mov
cmp
mov
adc
inc
orb
add
hlt
out
cltd
loop
sub
test
adc
mov
repz
xchg
psubb
mov
arpl
cmpsb
push
inc
icebp
cltd
hlt
clc
popf
dec
sar
xchg
loope
mov
adc
test
mov
inc
xor
sbbb
pusha
add
movq
and
cltd
sbb
or
or
data16
ret
mov
cmc
mov
fistpl
mov
sbb
mov
popf
push
ljmp
ss
jge
cld
aaa
inc
push
xor
and
jne
repz
les
ljmp
insl
test
out
mov
out
aam
ss
mov
pop
mov
mov
outsb
add
jae
les
fincstp
scas
js
mov
cld
pop
fnstenv
mov
pop
inc
divl
dec
mov
cld
push
mov
mov
loop
xlat
aam
das
jns
inc
cli
faddp
sti
lcall
inc
mov
mov
cwtl
xchg
xchg
in
xor
cmc
xchg
push
lods
sbb
cmp
test
mov
add
and
dec
dec
ss
addr16
imul
out
mov
add
stc
xor
cmp
int3
lcall
cmp
mov
jl
inc
rclb
push
stos
or
fnstsw
xor
xchg
mov
jno
pop
ljmp
nop
jnp
adc
addr16
jo
cmp
push
repz
xor
loope
xor
or
xor
repz
rol
leave
negl
jl
dec
fdivl
clc
sub
cmpsb
mov
je
imul
or
inc
out
rclb
sbb
jecxz
and
mov
movl
adc
rcrb
stc
jo
aad
ret
lods
scas
mov
and
inc
push
or
push
mov
cmp
inc
xor
fsubrl
push
movsl
push
pushf
xchg
and
into
mov
sub
fs
sub
push
iret
icebp
test
xchg
testb
pusha
push
fcmovne
or
ja
arpl
std
push
lret
ljmp
xor
mov
scas
sub
ljmp
into
shrb
les
fcom
inc
cmc
pop
adc
mov
cld
adc
idivl
test
sbb
jns
cwtl
mov
pushf
out
jg
insl
mov
pusha
mov
jg
pushl
pusha
shrl
test
mov
pop
les
xor
out
push
sbb
popf
jp
int
js
fstpt
in
lock
cmp
push
push
fidivl
and
les
or
and
test
movsb
dec
push
data16
add
push
out
aam
aam
ret
adc
movsl
ljmp
ficompl
dec
pop
or
roll
into
push
xchg
int
or
clc
imul
inc
inc
xchg
dec
addr16
cmp
ss
and
adc
lcall
mov
sub
in
jns
js
daa
clc
sbb
shlb
jno
lret
imul
push
xchg
orb
ficomps
fimull
xchg
push
hlt
insl
mov
notl
dec
lahf
addr16
jp
mov
jl
xchg
dec
pop
test
mov
sarb
push
inc
jo
mov
jle
pop
iret
and
xchg
in
fucomi
and
add
jae
adc
es
mov
sarl
mov
loopne
sahf
fadds
nop
mov
mov
repz
aas
pop
push
sbb
xor
in
cwtl
ret
sbb
stc
jmp
into
loope
cmc
mov
std
and
push
pop
add
or
lock
mov
cmp
gs
psraw
cwtl
scas
push
aas
or
mov
imul
cmp
movsl
and
ss
addr16
mov
aas
int3
and
mov
iret
mov
and
rcrb
and
les
test
jns
mov
inc
mov
ficompl
adc
jmp
add
xlat
jmp
fdivs
std
insl
xchg
loope
fildll
ljmp
in
loopne
ljmp
sub
popa
add
dec
int3
dec
insb
xchg
sub
popl
stc
ret
xlat
testl
dec
mov
pop
sahf
fs
loope
out
push
xchg
xor
xchg
xchg
pop
ret
pop
cmp
push
mov
subb
mov
sbb
or
sbb
mov
int
jl
das
add
mov
push
mov
or
cmp
sbb
sub
add
imul
inc
inc
add
push
or
xor
push
dec
inc
sbb
stc
inc
icebp
sarl
mov
push
mov
cs
iret
shlb
and
lock
xchg
setne
or
sbb
pop
repz
xor
adc
andb
add
push
xor
xchg
divl
and
mov
pop
push
cmp
lret
fisttpll
push
push
inc
nop
and
pusha
and
loop
xchg
push
jne
jnp
loopne
iret
and
mov
cmp
dec
test
cltd
int
mov
inc
mov
mov
or
pop
mov
push
ja
cmpl
mov
scas
and
hlt
mov
xor
push
pop
mov
pop
push
push
mov
cmpsl
jle
and
imul
js
add
push
insl
mov
int3
jp
fildll
add
sahf
xor
mov
lcall
mov
and
pop
int
test
ficompl
sbbl
push
pusha
cwtl
adc
ds
repnz
aaa
inc
sahf
aaa
aas
adc
xor
xor
push
leave
iret
inc
mov
dec
dec
popf
sub
lods
pop
push
cld
daa
and
mov
fwait
jne
jmp
pop
push
cmp
push
push
mov
push
mov
jg
imul
and
push
cmpsb
in
insb
fsubrp
out
sub
cmp
xchg
adc
fsubr
imul
ss
call
xchg
jb
loopne
xor
das
sti
loopne
fldt
out
pop
push
dec
daa
add
and
arpl
mov
pop
sbbl
insl
rcrb
or
inc
shrl
mov
or
or
fiaddl
or
mov
xor
adc
sbb
lods
rolb
jmp
jle
fcmove
and
insb
push
push
mov
lahf
sbb
xchg
ret
inc
stos
das
dec
clc
or
push
dec
jecxz
push
or
lahf
cwtl
and
jns
sub
adc
cmp
xchg
sti
jnp
xchg
inc
in
rolb
cmp
push
test
outsb
push
mov
ret
jae
ja
add
and
pushf
lea
xor
push
js
add
mov
push
mov
xchg
inc
or
repnz
jne
out
dec
xchg
wrmsr
jbe
addr16
mov
inc
and
pop
fs
test
into
mov
cmp
lret
sbb
nop
jle
adc
xor
add
in
mov
pop
mov
jne
and
dec
ret
push
scas
ds
mov
popl
cmp
arpl
lock
in
dec
mov
aas
sbb
push
sbb
aam
rol
mov
xor
std
stc
ret
loope
and
pop
std
fstl
inc
outsb
movsl
lods
xor
std
adc
xor
mov
andb
mov
xchg
mov
fs
sub
stos
jb
data16
lods
jmp
cmp
xor
push
das
call
cmp
iret
cmpsb
add
das
push
xor
jb
adc
ret
sbb
and
in
loope
outsb
push
cmp
into
xor
jbe
mov
rcrl
out
inc
mov
gs
fmuls
xchg
ror
add
mov
mov
test
cmp
out
scas
mov
call
mov
subl
in
outsb
hlt
mov
repz
sbb
jge
jmp
dec
xorl
out
mov
inc
cmp
out
adc
push
push
jle
cmpsb
mov
mov
xor
xchg
adc
mov
add
ja
push
cltd
fdivrp
sub
das
and
xchg
aas
sahf
popa
sti
xor
stos
push
lret
and
stos
push
mov
repnz
cmp
sub
xlat
xchg
mov
push
inc
loop
loopne
sahf
xchg
clc
cltd
add
jg
add
movsl
imul
cmp
cltd
push
pop
wrmsr
push
xchg
sub
and
in
outsb
pusha
jmp
shll
xor
jno
aas
daa
ja
rorb
ret
js
or
inc
lods
mov
test
mov
or
pop
jecxz
jb
pusha
jne
dec
lcall
stos
pop
fs
in
clc
rcl
stc
popa
mov
and
into
stos
push
cli
dec
arpl
shlb
jnp
and
adcb
in
sbb
std
add
outsl
sub
jns
popf
and
dec
js
and
sbb
sbb
loopne
ss
iret
out
jecxz
stos
shlb
jo
mov
int
std
lock
popa
xchg
inc
cwtl
sbb
add
jns
daa
or
jg
push
and
pop
mov
sbb
loop
imul
es
xchg
jo
mov
cmp
mov
push
cltd
and
inc
or
dec
sub
aas
pop
and
lret
lods
jl
je
test
push
insb
dec
xchg
insb
jne
shlb
movsb
test
lcall
push
loopne
or
jp
in
adc
aad
mov
sahf
in
and
push
stos
dec
lret
inc
aam
ret
adc
pop
mov
lret
popf
mov
cmpsb
adc
push
aam
xchg
aaa
int
add
cmpsl
jnp
mov
sbb
jp
jp
adc
mov
xor
pushf
mov
jae
push
and
call
cwtl
sbb
jmp
sarb
ss
inc
and
cmovge
mov
adc
pop
je
add
int
popa
std
cmp
in
movsb
add
mov
shl
movsb
outsl
jae
pusha
ds
inc
daa
mov
addr16
mov
lcall
push
outsl
mov
xor
inc
push
jae
fs
or
sub
lahf
sbb
cmp
and
in
pop
imul
arpl
add
and
add
pop
popf
mov
push
shll
nop
lock
lahf
dec
pop
repz
outsb
mov
scas
dec
mov
xor
push
add
in
mov
outsb
xor
out
xor
les
mov
push
out
xchg
adc
ficoms
es
into
sbb
adc
pop
mov
out
scas
xor
inc
cmp
mov
scas
and
pop
jb
inc
les
imul
xchg
arpl
ljmp
xlat
cmp
sub
cmp
sarb
mov
mov
les
jno
xchg
dec
out
xchg
daa
jb
add
aad
test
mov
movsb
out
dec
movsl
mov
and
inc
es
mov
arpl
sarl
mov
pop
imul
dec
stos
sub
in
stc
clc
fwait
sub
in
not
push
add
scas
jo
into
and
push
add
sarb
sub
xchg
pusha
out
stc
mov
in
mov
maxps
mov
daa
push
loop
push
jno
cmpsb
stos
fstps
xchg
shrb
test
loop
ljmp
in
cmp
xor
mov
adc
stos
js
push
and
xchg
pushf
mov
pushf
jns
jo
pop
cmc
adc
sti
scas
ja
cmp
inc
xchg
fincstp
mov
mov
and
cs
ljmp
xchg
pop
push
xor
stos
xlat
fwait
pop
mov
mov
push
and
adc
mov
fs
in
push
and
adc
shlb
js
nop
xchg
imul
sbb
cmpb
dec
dec
adc
jle
mov
jp
aas
cli
push
push
pop
push
sbb
adc
or
lods
ja
push
jecxz
push
fwait
mov
pushf
push
leave
ret
arpl
sub
mov
shlb
fistpll
mov
aam
cmpsl
jno
cwtl
mov
dec
std
divl
jl
xchg
mov
mov
je
mov
sarl
incb
jl
out
rol
sti
pushf
mov
popf
aaa
sub
fmuls
arpl
bound
stos
jne
mov
xor
adc
sub
into
stos
xchg
push
imul
adc
pop
push
adc
ja
cmpsb
cmp
lcall
std
rorl
cmpb
sbb
dec
aas
mov
ds
xchg
addl
in
or
sub
inc
push
push
adcb
insb
movsl
aas
inc
imul
scas
jno
nop
jmp
in
hlt
adc
pop
lcall
out
push
xor
push
mov
cmp
pop
dec
rcrb
and
lds
push
mov
call
mov
and
cs
sub
xchg
cmc
cmpsb
push
xchg
push
dec
xchg
das
lahf
mov
out
aas
aaa
in
ret
xchg
out
mov
lds
mov
mov
dec
mov
outsb
add
dec
xchg
sub
scas
out
dec
jbe
lret
adc
rol
cmp
xor
push
mov
pop
ret
add
insl
mov
and
fucomi
cmp
pop
cmp
test
leave
dec
pop
popf
test
in
sahf
xchg
jmp
add
cli
push
mov
jb
and
dec
int
mov
les
pushf
nop
repnz
cmc
in
cmpsl
and
pusha
pushf
xlat
call
sbb
cmpl
push
ss
mov
aad
pop
mov
arpl
stos
cmp
pop
adcl
sub
cmp
sbb
sbb
cmpb
mov
fmull
xor
lret
aam
cmovo
dec
pusha
rcrb
xchg
xchg
mov
fisubl
sti
jbe
push
addl
and
dec
or
xorb
pop
outsb
je
aam
mov
loop
iret
out
in
fstpt
jno
ror
sub
push
mov
or
jge
stc
rorl
xchg
mov
dec
xor
dec
sbb
lods
add
inc
ficoms
jle
add
fwait
pop
cmp
data16
vcvttss2si
es
loop
jne
sbb
pop
lods
stc
or
mov
add
sahf
sarb
pop
dec
mov
cmp
jmp
push
in
sahf
adc
test
jmp
jbe
xorb
insl
movl
dec
popa
call
mov
jge
stos
mov
pop
mov
or
jbe
adc
fisubrl
dec
pop
xor
std
aas
mov
iret
rcrl
sbb
loope,pt
arpl
mov
jg
ja
inc
xchg
pop
mov
inc
test
imul
push
inc
aad
and
pop
pop
arpl
jge
inc
xchg
iret
pop
fs
and
ds
ss
loopne
sub
pop
inc
and
jecxz
inc
int
xchg
jae
sahf
xlat
fcmovu
and
jmp
hlt
adc
push
xor
dec
fiadds
clc
in
mov
jae
dec
cmp
mov
cmc
mov
fdivs
xor
mov
insb
fcompl
mov
push
sarl
jo
leavew
test
add
xchg
xchg
fdivl
insl
movsl
lods
out
adc
jnp
jbe
fdiv
loope
imul
in
and
ljmp
outsl
mov
xchg
stc
mov
dec
cs
outsb
pop
cld
in
fcoml
mov
lea
cmp
iret
clc
xchg
mov
int3
xor
add
lds
adc
lahf
in
adc
ret
rorb
adc
loop
mov
xor
lret
mov
rsm
xor
mov
inc
ret
stos
or
lock
mov
popf
mov
testb
cld
add
test
stc
push
add
aaa
jp
sub
lds
xor
lret
jg
push
ret
jns
mov
daa
ss
xor
pop
repnz
in
cmp
sbb
ret
xchg
mov
iret
leave
add
insb
fs
fcmovnb
mov
sbb
stc
or
push
inc
lret
add
ja
adc
mov
stc
or
daa
inc
sbb
fnsave
stc
repz
enter
mov
lret
dec
lea
imul
xlat
jne
imul
push
dec
xchg
lret
arpl
sub
aas
dec
sbb
fstl
inc
jnp
jb
push
sbb
xor
stos
sub
fdivr
add
int3
mov
xor
fistpll
mov
hlt
int
hlt
jno
jle
mov
mov
xchg
adc
dec
int
mov
ss
std
add
jnp
movsb
jp
cmp
or
cmpsb
popa
mov
push
mov
rorb
pop
lea
into
jecxz
dec
pop
cmp
xor
or
or
cmp
xor
movsb
jmp
add
sbb
sub
pop
lods
mov
imul
mov
jmp
push
pushf
or
sbb
fdivs
sahf
in
mov
fisttpl
cwtl
xchg
adc
pop
adc
and
into
mov
sbb
test
data16
xchg
into
hlt
mov
daa
inc
lret
ret
jbe
xor
pop
xchg
ljmp
xchg
mov
pop
sub
fndisi(8087
lds
incl
repz
mov
xchg
jbe
jb
jecxz
dec
inc
inc
icebp
sub
in
xchg
fisttpl
out
repz
loopne
lods
ror
inc
inc
inc
dec
repz
xchg
imul
je
mov
out
jecxz
lds
pop
call
test
lret
jmp
in
movsb
xor
ds
stos
out
jg
int
gs
cmp
clc
xchg
jno
bound
shll
cmp
jns
out
pop
adc
pop
dec
pop
pop
lahf
lods
mov
out
adc
hlt
and
out
test
iret
pop
ficoml
adc
mov
aaa
mov
sti
xchg
push
xor
jbe
lret
dec
sti
fbld
inc
add
adc
ret
das
scas
pop
into
out
idivb
cmpl
test
pop
xchg
mov
xor
cli
int
nop
xchg
enter
adc
rol
psubsb
xchg
fcmovb
inc
test
in
xchg
loope
imul
sub
dec
movntps
push
and
add
mov
jl
pop
mov
pop
adc
dec
or
ljmp
dec
ficompl
adc
pop
pop
mov
mov
lock
xchg
pop
jg
push
inc
in
in
ja
movsb
sti
hlt
daa
push
push
mov
outsl
lds
jo
mov
stc
xor
jle
xchg
lret
test
sarl
or
cmpsl
dec
insb
add
mov
mov
popf
inc
xchg
push
movsl
lea
jno
aad
repnz
sub
ret
rcrl
stos
fwait
push
cmp
mov
mov
pop
rcrb
lret
jns
ss
jmp
mov
dec
scas
or
push
pop
sbb
jb
repz
jns
and
lods
enter
js
sahf
mov
adc
dec
jns
or
mov
mov
sti
faddl
inc
jp
fsubl
mov
add
mov
jae
mov
rcrl
xor
cmpsl
sar
rclb
bnd
and
jnp
and
dec
mov
push
ja
add
add
push
sub
jns
mov
dec
bound
sbbl
sbb
jmp
cmp
adc
cld
or
pusha
movsl
ds
dec
adc
inc
xchg
scas
dec
lahf
cmc
imul
cmc
add
push
ja
lret
loope
out
imul
jg
and
scas
add
push
in
icebp
lret
in
inc
push
mov
sbb
jno
push
fld
lock
rep
faddl
clc
sub
push
xchg
pushf
gs
stos
cs
enter
bound
cmp
xor
adc
xchg
mov
fisttpl
xchg
ljmp
sbb
jne
push
ret
jmp
icebp
and
push
cltd
aas
pop
xor
and
xor
dec
scas
and
cli
test
mov
sbb
and
and
aas
outsb
cmc
cmc
cmp
rolb
fcmovbe
mov
add
pop
and
out
pop
aaa
jg
or
movsl
xchg
loope
shl
or
mov
call
in
ja
test
push
nop
stos
and
mov
add
lods
jns
shlb
pop
mov
pop
dec
mov
imul
rcl
inc
or
js
jno,pn
stos
call
xchg
bound
push
jge
test
add
inc
repz
fsubrl
dec
sbb
xchg
vmwrite
mov
and
stos
mov
hlt
push
es
push
and
mov
cmpsb
data16
sahf
adc
notl
es
inc
fucompp
and
xchg
je
pop
push
xor
xor
jnp
hlt
cmp
cli
mov
push
mov
push
pushf
xor
cmpsb
in
push
in
jge
dec
hlt
sbb
adc
pop
sbbl
xchg
jb
imul
dec
sub
jmp
mov
lods
lret
in
rolb
or
push
shrl
lret
movsl
test
outsb
call
cmpsb
arpl
cmp
cmp
and
divb
cld
in
mov
aam
enter
sub
popa
into
outsl
add
xchg
ljmp
push
xchg
fimull
addr16
ss
shrl
stos
jle
cli
lret
dec
out
cld
or
pushf
jne
mov
std
clc
test
inc
sbb
scas
sbb
shll
ss
mov
cmpl
leave
mov
jb
sub
sub
hlt
sarl
ljmp
popa
icebp
mov
xchg
mov
pop
push
or
xor
sti
fnstenv
jl
inc
sub
js
and
jmp
aaa
aaa
das
jb
nop
mov
push
outsl
aad
adc
je
mov
or
dec
dec
bound
push
mov
and
sbb
out
jne
out
push
das
push
mov
outsl
pusha
or
loope
jecxz
jmp
int3
add
or
data16
fxch
outsl
dec
mov
jno
add
or
ds
mov
mov
mov
mov
mov
jno
pop
call
xor
pop
sahf
ret
jnp
setbe
cmc
fwait
fwait
push
mov
out
jle
arpl
std
shl
jmp
lods
inc
cmpsb
xchg
ja
inc
int
add
sti
push
or
inc
mov
add
je
push
mov
mov
sbb
lahf
pushf
test
mov
mov
dec
rcrl
sbb
xor
mov
push
dec
jae
shrb
cli
sub
addr16
popf
sbb
out
pop
add
cmc
das
aaa
mov
mov
test
xchg
cld
and
mov
dec
cmpsb
xchg
orb
pop
imul
xor
or
in
fnstcw
add
adc
push
aad
stos
xchg
in
and
sbb
xorb
push
mov
mov
mov
mov
sar
out
push
aad
dec
mov
mov
inc
push
adc
sub
mov
xchg
fwait
sbb
clc
jmp
std
sbb
ja
test
gs
cmp
adc
stos
fildll
xlat
not
inc
cmp
lret
sahf
cld
ljmp
mov
lods
push
push
or
repz
push
or
adc
rcll
stos
mov
lret
push
pop
imul
push
cmp
int3
fs
rcrb
mov
jo
into
jg
and
mov
push
push
fdivs
push
enter
xchg
xchg
gs
xchg
and
cmp
xchg
gs
pop
xor
pusha
push
pop
adc
mov
hlt
xor
lea
or
jns
lea
std
imul
cmp
xchg
in
cltd
pushf
or
int
mov
loop
jmp
ds
lcall
sub
pop
iret
fucomi
rolb
sub
push
add
push
fistpll
in
popf
fdivrs
std
into
pop
not
out
sub
xchg
cmc
scas
aas
mov
int3
negl
cmc
stc
rolb
xor
popf
imul
rcll
and
push
push
jge
sub
daa
push
jl
fcmovnbe
pushf
xchg
push
inc
ds
pop
xor
lods
push
xor
jge
fbld
cli
sbb
add
aas
and
push
stos
nop
jb
push
in
or
movsl
mov
popf
jo
sub
dec
xchg
xchg
push
jae
pop
push
scas
je
out
int
jae
pop
into
lea
mov
imul
dec
fstl
imul
xchg
or
push
jnp
and
lret
xor
jnp
xlat
push
xchg
xor
jmp
xchg
dec
mov
insl
jb
push
inc
cs
aam
mov
clc
mov
incl
or
sub
and
ja
int
stc
mov
push
cmp
or
and
sub
mov
cli
adc
cmp
dec
and
sbb
cmp
sarl
adc
outsb
jle
fisttpl
cmpsb
into
popa
popf
pop
cltd
out
bound
pop
addl
cmpsl
dec
sub
int3
inc
mov
jle
and
sub
call
push
loope
mov
leave
andb
loope
xchg
inc
push
cmpsb
sub
adc
mov
add
aam
inc
into
mov
into
jp
sbb
mov
xchg
rcrb
cmpsl
incl
mov
jg
pop
lea
add
insb
pop
mov
and
add
int3
push
cmpsb
repz
adc
add
cmp
cvtpi2ps
outsl
mov
adc
dec
fcompl
sub
sbb
shll
sbb
in
sub
mov
loop
mov
lret
jl
in
scas
mov
jbe
push
inc
add
pusha
cld
ja
jae
daa
pop
mov
std
addr16
mov
adc
pop
pop
inc
add
lea
in
mov
pop
mov
mov
push
in
jmp
xchg
fwait
pop
dec
push
cmpsl
cmp
mov
loopne
fwait
and
pusha
or
jmp
pop
in
push
cmp
in
out
xchg
push
popa
neg
push
xchg
dec
xchg
jecxz
ss
movsb
mov
leave
loopne
fnstenv
les
fwait
adc
in
mov
jge
imul
icebp
dec
sbb
out
ret
jg
hlt
mov
inc
xor
pushf
fldl
cmp
inc
and
and
cmp
dec
cmpsb
mov
lret
lret
sbb
out
inc
add
or
pop
fmuls
fldcw
shll
jae
ret
mov
lds
inc
inc
dec
ret
mov
sarb
dec
xchg
push
ret
and
xor
jmp
cmpsl
sbb
xlat
ja
cld
mov
jecxz
in
xchg
xchg
mov
test
clc
je
sub
inc
popf
imul
inc
xchg
pop
mov
lret
or
sub
mov
mov
cmpsb
lds
leave
jmp
nop
jnp
cmp
lcall
cmp
xor
sub
dec
fs
pop
lcall
in
insl
inc
xor
jns
out
jno
repnz
mov
xchg
xchg
push
cmp
test
fs
pop
popf
mov
push
stc
arpl
mov
or
loop
fwait
pop
cmp
pop
aam
popa
or
call
cmpsl
negb
sub
cld
xchg
add
repnz
xor
stos
mov
sub
test
adc
lods
rcrl
les
dec
or
mov
jae
dec
fistl
fsubrs
fs
mov
sub
xchg
scas
outsl
adc
mov
xchg
lahf
inc
adc
fwait
adc
mov
xchg
sub
mov
cs
adc
xrelease
jge
out
dec
pop
lcall
lret
cltd
mov
arpl
xchg
cld
aaa
cs
mov
xor
or
das
dec
shrb
and
mov
sahf
and
cmp
inc
and
sahf
mov
sti
xchg
pop
jne
xchg
mov
fists
cmp
iret
scas
lock
scas
nop
fs
mov
test
cmc
xchg
dec
adc
sbb
in
dec
sbb
mov
pushf
stos
sbb
out
adc
sbb
dec
dec
out
dec
adc
mov
js
and
cltd
or
sub
subl
inc
xchg
ljmp
cmp
ljmp
jb
jmp
sub
popf
sbb
movsb
jne
and
xor
data16
adc
jne
das
push
adc
mov
add
jg
cmc
xchg
jge
jmp
jno
sub
cwtl
out
mov
adc
cs
iret
mov
inc
inc
in
sbb
leave
jp
mov
pop
dec
shrl
cld
fcomps
aad
loope
fs
sbb
xor
dec
xchg
sahf
scas
push
in
jge
mov
xor
mov
popf
xchg
sub
loop
push
xchg
subl
fwait
sbb
mov
dec
les
dec
call
imul
sbb
pop
xchg
subb
shr
in
shrl
lret
add
mov
mov
stc
xlat
or
inc
xchg
xor
mov
clc
or
mov
pop
mov
into
xor
scas
mov
pop
mov
out
out
fsts
jl
add
jno
xlat
cli
filds
jl
ja
inc
cs
imul
movsl
jb
scas
add
lock
clc
fistps
repnz
adc
mov
mov
test
mov
and
leave
adc
imul
jecxz
xor
mov
cmp
cli
mov
jne
inc
push
sbb
add
xchg
das
lea
xchg
mull
lock
mov
add
jmp
bswap
scas
in
mov
les
rorb
sahf
jae
push
lock
dec
jecxz
sbb
dec
outsl
jno
out
push
shr
mov
das
sbb
xchg
addl
jae
test
icebp
fisubrs
test
mov
sbb
faddl
clc
mull
add
rorl
fidivs
push
jmp
push
in
lahf
psubusw
xchg
push
sti
sahf
das
test
fdivr
out
int3
rcll
jae
ror
xchg
dec
aam
or
pop
xchg
add
push
and
ucomiss
inc
jg
jne
arpl
lcall
into
test
imul
test
nop
pop
dec
dec
mov
addr16
movsl
jo
sub
cmovo
mov
cmpsl
or
lock
js
out
push
pop
mov
add
mov
rcl
inc
dec
mov
or
fisubl
push
mov
mov
rorb
xchg
fsts
push
jae
sub
pop
mov
mov
scas
aad
xor
add
icebp
adc
mov
adc
push
lret
in
andl
das
xor
pop
dec
add
adc
repz
andb
adc
out
mov
divl
mov
sub
mov
int
xor
or
push
negb
inc
or
int3
orb
xchg
jl
std
xor
sarb
sbb
and
pushf
adc
aas
sbb
ret
mov
adc
mov
out
cwtl
xor
xchg
test
scas
mov
or
inc
mov
int3
xchg
popa
push
xor
mov
xor
mov
clc
xchg
push
push
jecxz
gs
xor
test
in
inc
xor
adc
insb
out
mov
mov
fs
test
cmp
nop
mov
mov
or
daa
pop
and
mov
imul
inc
rcrb
jb
mov
dec
and
add
leave
push
xchg
lret
mov
cmp
add
rcrb
sti
shrb
lcall
push
pop
out
add
sbb
mov
mov
pop
in
fnstsw
nop
insl
jge
popa
jnp
dec
leave
push
cmp
sub
mov
push
daa
inc
push
pop
mov
bound
cmc
and
cltd
mov
jl
scas
sbb
jecxz
je
gs
div
pop
outsl
aam
out
lret
push
cltd
aad
mov
push
jbe
inc
cmp
es
mov
out
sbb
cmc
loope
cltd
in
scas
out
lods
pop
imul
add
pop
in
mov
loopne
orb
dec
adc
lret
add
repnz
sub
jbe
cli
and
add
dec
jne
cld
test
xchg
repnz
push
jo
movnti
jb
cs
mov
or
arpl
xor
mov
int3
inc
or
sbb
test
adc
mov
mov
ljmp
outsl
sub
mov
fs
mov
adc
scas
cmp
push
andl
dec
mov
pop
push
mov
adc
outsl
push
faddl
lret
stos
mov
mov
pop
dec
inc
jmp
sub
fisubrs
dec
imul
lretw
xchg
outsl
repz
adc
ret
fwait
xchg
negl
mov
popf
and
add
lods
push
dec
mov
sbb
int3
cmp
inc
insl
leave
insb
inc
xchg
stos
xor
xor
cmpsb
cmpsl
mov
lods
sbb
xchg
xchg
mov
sub
iret
incl
dec
repnz
andl
push
xchg
loope
js
inc
repnz
bound
dec
pop
push
in
pusha
ja
sbb
jmp
int
xchg
mov
fs
jno
inc
push
mov
stos
dec
in
repz
mov
push
ds
jmp
jns
mov
add
out
lea
fidivrs
insl
or
shlb
enter
inc
add
or
jecxz
push
ds
test
in
pop
or
xchg
lahf
jg
xchg
pop
mov
push
ss
pop
xor
mov
jge
lcall
inc
leave
pop
fnstenv
mov
jp
pop
jae
js
das
cld
sub
pop
test
mov
dec
mov
inc
shll
or
leave
and
cwtl
sub
push
lods
enter
mov
push
inc
jecxz
lcall
insl
aaa
add
jnp
lea
subl
push
xor
call
loop
lock
pop
dec
cltd
sarl
int3
jne
mov
stos
std
and
bound
adc
mov
loop
cmp
sahf
ror
adc
lock
cmp
adc
adc
in
hlt
cltd
dec
and
mov
daa
ficoms
rcll
test
ret
pop
sti
add
outsb
and
dec
cwtl
xor
lods
fcmove
dec
dec
and
dec
data16
cmp
and
scas
cli
or
add
mov
mov
mov
and
arpl
out
adc
jecxz
pop
mov
mov
mov
vunpckhps
xchg
jp
sbb
xor
shll
out
test
and
cs
sbb
mov
sbb
js
cs
gs
call
out
mov
jno
mov
cs
inc
and
ret
aad
popf
xlat
in
sub
sbbb
std
ja
fistl
dec
mov
bound
lods
add
fs
das
loopne
lret
dec
mov
push
pop
arpl
pop
es
jnp
cltd
testl
and
dec
mov
jge
dec
push
jnp
shlb
lea
in
adc
or
or
add
fdivs
dec
jnp
cmpsb
ds
fildll
xchg
mov
or
dec
lea
mov
xorb
sub
push
in
push
push
push
mov
mov
iret
pop
pop
mov
push
jle
call
xchg
popa
pop
xor
sub
bound
pop
push
lods
gs
test
xlat
add
cmp
and
aas
add
neg
sub
xchg
icebp
ss
adc
mov
push
daa
inc
imul
xor
pop
std
int3
sub
dec
cmpsl
pop
lret
aad
scas
sub
das
daa
sbb
push
out
push
push
in
push
mov
fstpt
out
adc
push
aam
ds
test
movb
mov
gs
inc
xchg
ror
jmp
loop
and
inc
insb
mov
movsb
adc
push
mov
push
enter
or
test
sarl
loop
inc
je
xchg
lcall
inc
sbb
loope
xchg
or
pusha
pop
leave
js
pop
sub
xor
pushf
or
fs
and
jg
movsb
inc
popf
cmp
in
add
fwait
out
iret
cmpl
mov
shr
out
adc
imul
xor
or
push
cmp
icebp
cmpsb
sbb
mov
in
iret
cmp
std
cld
cmpsb
lods
pop
dec
jb
and
je
test
inc
lret
jnp
jno
xor
push
xlat
daa
scas
sbb
mov
xor
inc
clc
loopne
cwtl
inc
push
mov
jle
das
or
fistl
cs
pushf
test
and
pop
jae
push
adc
out
aam
pop
xchg
pop
xchg
cmp
ja
jle
iret
inc
xchg
clc
mov
cld
or
mov
test
adcb
mov
mov
jns
imul
mov
adc
mov
sbb
dec
mov
movsl
int
inc
mov
int3
mov
cmp
fisttps
rcrl
iret
add
or
lahf
clc
sti
aaa
orl
mov
xor
push
into
stos
insb
jmp
ss
stos
mov
jbe
xlat
shll
pop
cmp
loopne
mov
aas
adc
xchg
mov
dec
mov
sbb
and
mov
xchg
pop
mov
jmp
dec
inc
inc
icebp
sub
jl
mov
repz
lods
adc
mov
ds
mov
add
sub
roll
rclb
sub
mov
je
decb
xchg
mov
sbb
shlb
push
jmp
loope
orl
inc
xchg
or
fsubrl
pop
movsl
sbb
mov
push
xchg
mov
insb
push
popa
push
and
cmp
pusha
mov
xchg
into
aas
inc
pop
adc
cltd
or
dec
ficomps
dec
stc
dec
cwtl
hlt
sub
push
lds
dec
pop
dec
lret
sbb
je
stos
mov
push
pusha
repnz
inc
lods
push
inc
fsubrl
jle
outsl
ja
mov
cmpb
pop
jb
dec
jb
pop
sahf
xlat
popa
aas
sbb
fbstp
lock
push
inc
sbb
or
sbb
loope
jb
movsl
pop
lods
jmp
mov
adc
inc
push
add
pop
push
jl
sbb
enter
lcall
dec
mov
xor
fwait
in
out
jle
jns
cmc
lods
popf
add
push
outsb
in
dec
add
sti
dec
jnp
aam
push
aas
push
mov
sub
popa
jo
lods
loope
nop
mov
jl
pop
sbb
test
insl
push
ret
outsl
push
jae
sub
mov
pop
adc
pop
mov
xor
je
add
scas
fldcw
and
and
aam
lret
push
icebp
js
sbb
out
nop
pop
call
leave
inc
jl
test
loop
dec
in
inc
insl
push
adc
jnp
and
inc
push
xchg
mov
push
sub
cmp
xorb
out
mov
xor
jmp
aam
jecxz
jg
pop
stos
jns
cli
xor
push
insb
pop
ljmp
cmove
idivb
sub
pop
insl
add
not
arpl
leave
add
pop
addl
lds
mov
push
mov
std
leave
shl
into
mov
or
rclb
jo
adc
pop
jbe
scas
and
pcmpeqb
mov
test
mov
mov
mov
incl
popa
dec
lahf
cs
cmp
add
aaa
dec
lret
mov
dec
or
faddl
cmp
adc
popf
outsl
jecxz
xor
aas
rolb
dec
fldcw
xor
enter
je
repnz
movl
pop
out
mov
fisubs
shll
call
jmp
pop
fcoms
cwtl
cs
sub
pop
loope
in
imul
add
and
lock
cmp
scas
jae
adc
xchg
add
sbb
xchg
jno
jnp
stos
lds
dec
dec
dec
mov
pcmpeqw
aam
mov
test
out
pop
sbb
cld
or
sbb
push
std
nop
call
daa
mov
popa
xchg
fstpt
clc
or
cmp
out
push
and
jne
aam
pop
fmul
cld
mov
fdivrp
js
dec
sbb
insb
push
push
add
push
cltd
cwtl
push
test
outsl
in
inc
divl
inc
loope
add
push
mov
xor
jg
flds
call
jle
fs
test
ret
or
sub
sub
leave
rclb
rcrl
gs
add
fwait
aad
jl
jns
dec
jmp
enter
sub
leave
movsl
hlt
leave
hlt
lret
mov
mov
gs
sbb
mov
inc
clc
dec
fs
iret
ja
mov
or
and
xor
or
and
jnp
cmp
and
aaa
js
jno
xchg
insb
cli
jge
or
lods
xor
out
pop
clc
cwtl
stos
mov
sbb
rcrb
into
rorb
sub
or
ss
mov
inc
popa
orl
cmpsb
add
xchg
xchg
inc
pop
bound
fimuls
fisubrl
imul
jns
mov
cmp
and
sub
cmp
mov
pop
mov
subl
imul
rorb
cltd
es
dec
mov
xchg
cmp
decl
cltd
push
push
scas
mov
rorl
jne
dec
fstps
insl
and
dec
imul
sub
cmp
and
shlb
sbb
mov
adc
repz
add
in
scas
in
hlt
sti
push
lods
and
int3
mov
in
mov
test
stos
mov
ja
in
jae
notb
mov
jg
stc
xor
iret
push
leave
mov
ds
dec
imul
adc
fistps
nop
daa
adc
je
pop
dec
es
xor
mov
pop
aas
pop
sti
shrl
xor
adc
loope
outsl
popf
mov
xor
xor
jne
repz
adc
and
in
and
and
std
sarb
inc
rorl
mov
push
jnp
pusha
pusha
jl
xchg
add
or
mov
out
fildll
mov
jno
subl
sbb
or
dec
imul
sub
push
repz
out
repnz
loopne
jo
cmp
cmpl
cmp
pop
or
leave
mov
in
or
outsl
mov
xor
push
ret
mov
in
push
mov
dec
or
add
das
jp
push
jo
leave
icebp
mov
dec
push
inc
imul
pusha
push
mov
icebp
fs
ret
dec
mov
pushf
jl
clc
inc
shll
pushf
sbb
and
or
jns
mov
es
xchg
dec
daa
out
test
fwait
and
or
xchg
sub
cmpsl
inc
test
inc
xor
rclb
iret
cltd
nop
js
push
adc
dec
or
pushf
loop
arpl
adc
sti
inc
nop
imul
dec
sbb
add
popf
xchg
pop
mov
cli
mov
cmc
and
push
leave
push
cltd
test
cli
fldt
std
ss
ja
ret
jle
xchg
idivb
mov
pushf
subb
icebp
jb
add
adc
jno
jo
xor
and
sbb
mov
xchg
cmp
inc
out
loopne
cli
aam
leave
loop
or
mov
or
cmpsb
cmp
and
push
cwtl
push
mov
mov
fisttps
daa
outsl
mov
fdivs
push
les
pop
xor
xor
mov
lds
out
push
cmp
add
jge
pop
cwtl
cmp
faddp
pusha
push
lock
jo
sbb
and
inc
jge
and
pop
std
out
xchg
sbb
jge
pop
pop
mov
lahf
cmp
imul
sbb
push
mov
jae
insb
mov
pushl
push
inc
mov
insb
mov
mov
jl
dec
insl
jne
popf
sub
xchg
mov
fmuls
sti
ret
or
rorb
icebp
ja
popa
mov
sub
mov
imul
mov
sub
cwtl
mov
sbb
cmp
mov
mov
add
push
mov
iret
add
or
add
jnp
or
cmp
ja
or
je
pop
lea
les
loop
rcrb
cmp
repnz
mov
add
mov
into
ss
add
cld
insb
cmp
fsubrl
sahf
aam
aam
and
pop
push
gs
push
sbb
shl
lock
or
bound
cmp
mov
sbb
loopne
lcall
rol
mov
xchg
addr16
mov
fwait
lods
push
ss
dec
dec
xchg
inc
enter
out
mov
sbb
pop
ds
sahf
add
and
pop
adc
inc
repnz
mov
cld
cmpsb
add
fcomp
and
loope
xor
test
cmpsb
push
sub
xor
enter
addb
cmpb
cmc
stos
jle
sahf
mov
imul
scas
fdivrp
mov
and
aam
or
dec
sbb
cmpsl
out
sahf
outsb
xchg
aad
or
lock
inc
or
mov
bound
lods
ret
in
dec
sbb
lods
xchg
jg
push
add
pop
sti
clc
stos
xchg
push
adc
and
mov
pop
lcall
push
lock
jmp
repz
out
pop
cltd
inc
fcoml
add
fwait
mov
out
and
mov
leave
icebp
sbb
adc
out
mov
cli
loopne
xchg
mov
push
xchg
mov
adc
pushf
loop
inc
xchg
lea
int
xor
xor
inc
xor
or
stos
scas
push
sbb
stc
lret
outsl
pop
adc
and
rcl
out
aas
inc
jg
insl
push
das
push
add
test
aam
sub
lock
fdivrl
jge
lea
or
push
movsl
cwtl
sbb
and
cmp
cmp
xchg
sub
fmull
scas
je
aas
out
ret
loop
in
mov
add
and
jae
fstp
mov
jno
in
push
lea
stos
mov
mov
out
cmp
pop
ljmp
fnstenv
add
stos
push
dec
sub
lods
and
pop
or
mov
lock
jb
and
push
enter
adc
cwtl
sbb
sarl
lret
jae
jle
cltd
rcrb
ljmp
sbbl
jl
add
jmp
cwtl
pop
cmp
arpl
push
sbb
push
outsb
lahf
loopne
stos
int
jmp
movb
mov
sbb
and
lods
loopne
xor
outsl
sub
sbb
or
xor
sub
fwait
jo
rcr
out
in
mov
bound
or
pop
orl
cmpsl
orb
jne
popl
lods
repz
inc
stc
loopew
and
movsb
fldln2
xor
aam
add
sahf
xor
clc
nop
mov
ds
rorb
push
data16
xchg
sbb
mov
lret
ret
inc
mov
xor
out
rcll
adc
in
xchg
out
push
aam
add
adc
outsl
xchg
fsubs
push
inc
mov
xor
ret
jb
push
xor
fwait
push
xor
and
add
jb
cltd
inc
stos
jbe
das
cs
ss
xchg
jae
cmp
xchg
je
mov
sub
test
or
stos
mulb
fidivl
inc
jo
pop
scas
xchg
fsubs
bound
insl
sbb
push
push
ss
sbb
bound
jle
push
imul
inc
fistpll
aas
stc
cmp
std
and
lock
negl
ds
inc
sbb
aam
jl
aaa
outsl
ret
fs
cltd
aad
and
test
movsb
shrl
lea
and
mov
sub
cli
mov
pop
pop
adc
lahf
jp
push
repnz
push
pop
inc
inc
dec
fsub
dec
push
mov
fldcw
test
xchg
push
popf
ret
cmpsl
cmc
push
test
mov
or
lcall
sbb
jbe
adc
cmpsb
pusha
faddl
cmc
xchg
or
jo
enter
movl
clc
incl
dec
outsl
push
push
stos
int
pop
shlb
aas
pop
mov
push
push
push
test
jnp
jle
pop
inc
decb
xor
jb
inc
clc
lods
pop
stos
add
cmp
mov
nop
cs
ss
popf
or
mov
xchg
sbb
xorb
sub
loopne
inc
jp
js
shrb
insb
adc
lcall
cmp
cld
loopne
push
movsl
out
iret
imul
les
push
mov
xor
pop
pop
nop
mov
imul
in
mov
or
inc
adc
sbb
shlb
and
sub
mov
jecxz
jp
loop
jbe
cld
and
push
jmp
pushf
push
sbb
add
sub
ljmp
jg
sbb
pop
push
xchg
out
sub
jbe
sub
testb
ss
pop
aas
xor
clc
jl
gs
mov
xor
sahf
xchg
mov
mov
fnstsw
xchg
jae
pop
cmp
in
es
xor
cld
subl
push
outsl
lods
mov
cs
push
imul
xchg
mov
xchg
in
popa
adc
and
and
push
dec
mov
cmp
and
xor
ffreep
int
mov
and
stc
add
test
push
sub
lahf
andb
repz
pusha
jmp
test
pop
rorl
mov
fcomip
cs
and
mov
aam
leave
lahf
and
push
loop
data16
insl
shr
xchg
adc
jp
jle
mov
shll
inc
ja
cmc
and
mov
stos
call
sti
cmp
cmp
xor
inc
push
mov
add
lahf
cld
xchg
lock
cli
sub
rclb
push
out
outsb
aas
mov
mov
jecxz
xlat
mov
test
loop
sahf
pusha
pop
dec
jp
xor
cmc
ret
ret
xor
loop
fisttpl
int
sub
and
cmc
cmp
pop
jecxz
or
repz
mov
pop
mov
jbe
insb
subl
jmp
jns
jecxz
pusha
jge
daa
jmp
mov
testl
pop
sub
push
mov
inc
push
jl
sub
mov
push
loop
andl
dec
push
xchg
rcrb
pop
cmpsl
pop
mov
test
mov
mov
lret
scas
mov
mov
sbb
imul
cmp
add
sub
xchg
xchg
cmpb
xlat
shlb
in
and
pop
xrelease
leave
mov
pop
jo
test
mov
adc
rorl
out
clc
imul
push
jno
lods
clc
xchg
fstps
sarl
lds
and
cmp
jno
cmc
dec
jnp
ud1
pop
inc
addr16
cmpsl
jbe
mov
lret
ret
cmpsl
stos
dec
xor
imul
jno
js
out
gs
push
mov
mov
jmp
jo
pop
add
inc
aam
lea
out
out
lea
xchg
fidivl
push
dec
jns
pop
call
and
mov
push
xchg
or
pop
inc
mov
clc
adc
test
xchg
and
add
aaa
leave
test
jp
lret
lds
jmp
je
sub
adc
jl
mov
mov
aad
push
or
roll
addr16
into
dec
ud1
lods
push
push
mov
pop
push
jns
or
and
cmpsl
test
add
les
cmp
jne
aam
pop
mov
inc
mov
cmp
insl
sbb
jmp
ja
popf
cmpsl
loopne
insl
dec
mov
pop
cltd
mov
mov
xchg
and
sub
sti
push
jb
inc
fdivrs
xor
jp
test
sbb
push
pop
call
orb
movsb
cmpsb
shrl
adc
pop
cltd
ret
ret
insl
cmp
push
xor
lods
sbb
xor
cs
dec
jns
repz
leave
aam
dec
int3
dec
outsb
sbb
adc
inc
cmp
pop
dec
and
js
mov
adc
dec
xchg
sub
push
imulb
and
sbb
or
or
sahf
or
ret
mov
dec
sti
mov
in
xchg
and
leave
sbb
sub
sub
loop
mov
imul
adc
add
jge
pop
pop
sub
xchg
cwtl
sti
imul
movsl
sub
mov
loope
push
in
dec
bound
adc
pusha
xor
mov
jmp
cs
mov
fdivrs
hlt
mov
leave
push
sub
push
shl
push
or
mov
pop
fdivrl
xlat
or
mov
adc
adc
aaa
mov
cmp
cwtl
push
xchg
daa
insl
addr16
mov
pushf
push
out
sbb
fmulp
movsl
fwait
sbb
sarb
or
xchg
fmulp
lds
and
add
fcmovu
cmp
filds
and
outsb
dec
jecxz
fdecstp
les
lock
push
div
ljmp
repnz
add
jae
leave
setb
pop
xor
xor
ss
and
out
mov
in
in
mov
lds
xlat
loope
jle
sar
fisubs
adc
cmp
or
clc
mov
pusha
scas
dec
dec
mov
jge
fstpl
iret
arpl
fidivs
leave
mov
adc
push
bound
lock
out
das
sbb
mov
sbb
aas
lret
and
jnp
dec
jbe
lret
mov
int
mov
cmp
icebp
mov
mov
sbb
in
cmp
cli
mov
inc
int
jmp
jno
bsr
je
sub
sub
icebp
cmp
scas
pop
mov
xlat
clc
adc
xchg
test
or
xchg
lcall
rclb
cmp
jle
sarb
out
insb
mov
jl
jae
xchg
dec
lock
aad
push
popf
and
adc
popf
or
jle
push
pop
jb
xor
imul
dec
mov
movsl
and
in
push
and
decl
inc
cmpsb
xchg
or
repnz
out
sub
push
fimull
mov
xor
push
pop
fstl
cmp
rcrl
sub
adc
divl
dec
add
loope
xchg
dec
jmp
out
pop
aaa
ja
push
fcoms
pop
gs
add
ficoml
ss
fcmove
mov
dec
aam
clc
inc
jmp
fwait
sub
notb
fnsave
mov
xor
adc
mov
cmp
je
lret
cmp
testl
shlb
add
mov
je
mov
pop
push
lret
popf
sub
jno
in
add
inc
lea
sbb
push
xchg
sub
pop
inc
iret
or
scas
cmp
push
cmpsb
xchg
aaa
imul
enter
mov
repnz
add
loop
xchg
pop
sbbl
pop
ret
sub
in
or
fisubs
hlt
mov
inc
das
or
bound
inc
cmp
xchg
je
xor
jne
imul
fistpll
rclb
mov
jp
mov
lcall
add
shl
sub
push
popl
int
pushf
fimull
incl
dec
orb
movsb
adc
mov
sbb
imul
pop
scas
sbb
dec
jecxz
pop
inc
cmp
test
xor
add
mov
cltd
cmp
movb
xor
sub
test
int3
ds
stos
cmc
mov
hlt
mov
xchg
popa
adcl
ret
js
adc
mov
mov
int3
pushf
enter
lret
icebp
pop
adc
jmp
or
adc
mov
lock
inc
jle
lods
pop
adc
xor
mov
ss
jmp
mov
inc
add
addr16
sahf
scas
and
sub
mov
jb
push
mov
sbb
scas
mov
mov
lcall
imul
call
aad
pop
push
adc
dec
inc
and
aas
out
stos
clc
mov
shr
xor
mov
inc
push
mov
test
int
hlt
outsb
pop
xor
or
inc
inc
push
or
lds
add
pusha
insl
xor
out
std
and
sti
jl
xchg
outsb
int3
dec
jae
out
lds
shll
xor
adc
ss
dec
repz
add
mov
mov
aad
pop
xor
sahf
int
movsl
jno
hlt
sub
jecxz
xor
adc
pusha
gs
popl
jns
dec
and
inc
aam
clc
adc
jmp
and
in
test
mov
mov
pusha
shl
aad
xor
loope
adc
push
ds
jp
jns
mov
daa
popf
pusha
insl
push
imul
idiv
notl
popf
loopne
lds
sbb
pop
movsl
fldcw
movsb
js
fstpt
fstl
push
aam
icebp
rclb
and
jge
js
sarl
mov
stos
xchg
mov
push
dec
add
push
xor
fildl
in
into
push
jle
lcall
push
cli
dec
fisttps
xor
sti
ljmp
jmp
push
inc
xor
daa
ficompl
inc
mov
fisttps
out
adc
mov
cmp
test
in
add
int3
xor
pushf
test
stos
sahf
jno
movsl
push
jbe
add
jb
test
call
xor
mov
xchg
xchg
lret
cmpsl
icebp
jp
adcb
pop
pop
stc
iret
mov
and
cmc
ds
movsl
and
into
test
pop
je
lods
pop
ss
int
or
xlat
stos
enter
jmp
test
fstpl
loope
jns
in
mov
out
test
sbb
or
sbb
or
movsl
mov
or
inc
aaa
aam
sub
mov
mov
mov
lret
mov
jnp
bound
neg
loop
dec
pop
sbb
jo
outsb
and
add
sbb
fdivs
fidivs
in
xchg
jp
movsl
out
pop
popf
insl
iret
jmp
xchg
ds
sbb
sbb
or
push
xlat
scas
push
pop
test
and
cli
push
jl
adc
add
adc
mov
push
add
adc
inc
outsb
faddp
rcrl
bound
imul
je
inc
sub
sbb
mov
rcr
sub
movsl
ljmp
pusha
iret
ss
cmp
or
outsl
add
sahf
gs
push
and
aam
mov
aas
mov
inc
test
and
repnz
leave
iret
jno
ffree
jo
fsub
addr16
or
inc
pop
das
inc
push
fnsave
xlat
and
inc
insl
inc
sbb
jp
mov
mov
cmp
xchg
xchg
cli
or
jns
jge
pop
mov
int
and
adc
in
lds
adc
jl
sbb
stos
stos
cwtl
jno
lods
ficoms
push
insl
jle
cmp
mov
push
push
insb
pop
push
pusha
cmp
fsincos
mov
jmp
int
test
outsl
jns
cmc
pop
packuswb
mov
outsb
xorb
pop
jno
push
cmp
xchg
add
jo
fnstsw
lods
xor
mov
add
decl
aaa
jns
pop
mov
push
jbe
dec
push
lahf
out
cmp
rcrb
arpl
push
inc
ljmp
fisttpll
push
push
adc
cwtl
jmp
bound
inc
jecxz
aaa
cmpsl
push
movsl
mov
jo
mov
mov
outsb
jge
push
jb
ret
push
movsb
lahf
push
and
decb
xor
lahf
roll
mov
cmc
sub
push
mov
xchg
inc
jbe
cmpsb
movsb
xor
mov
rcrb
jo
sub
loope
ds
jmp
sarb
nop
imul
cld
dec
sbb
std
repnz
xor
adc
adc
int3
adcb
and
push
cltd
cmpsb
dec
test
pop
cmp
cmpsb
imul
xchg
lahf
ret
lds
xor
popa
rclb
loop
imul
jmp
sarl
push
lret
inc
push
pop
cmp
cwtl
xchg
cwtl
ljmp
pop
xor
mov
mov
inc
sbb
jbe
fs
xor
outsl
mov
mov
sub
push
and
jne
jbe
mov
dec
xchg
shrl
iret
into
loop
outsl
ja
cmp
jecxz
jg
insl
xlat
xchg
xorb
sbb
test
pop
dec
fimull
notb
iret
hlt
int
pop
and
inc
xor
fdivl
push
and
jle
sbb
loope
cmp
shll
ret
lods
loop
sub
in
xlat
nop
in
dec
int
adc
inc
jno
push
and
fldcw
pop
sbb
out
lock
repz
lcall
mov
jae
ss
inc
xchg
pop
sbb
add
fldl
sahf
cmp
xorb
sbbb
hlt
xchg
pop
jl
xor
xor
and
sbb
push
xor
int3
add
fs
lret
fsubrl
jp
outsl
lahf
fwait
cwtl
jae
push
cmp
jl
push
push
int
xchg
or
stos
adcl
mov
xchg
cmpsb
call
jmp
stos
xchg
xorb
push
or
mov
fst
mov
pop
cmpb
pop
push
aad
or
aad
and
push
out
aas
fwait
aaa
adc
sbb
jne
into
idivb
ds
in
xor
pop
lods
jns
cmp
ljmp
pusha
sbb
lds
mov
ds
adc
xchg
insl
leave
push
jecxz
lret
std
popa
leave
andb
das
sahf
jne
icebp
or
rcrb
jmp
test
sbb
cld
faddl
and
xor
cmpl
out
xor
lods
xchg
mov
xchg
lds
decl
mov
fisttpll
iret
inc
or
sub
pop
mov
sbb
sbb
popf
adcl
cmpb
pop
mov
loopne
rcrb
pop
ja
xlat
xor
cmp
sbb
insb
in
jns
pop
je
movsb
test
stc
cltd
mov
or
in
out
test
mov
roll
jo
mov
pop
push
out
push
test
ljmp
xchg
gs
mov
das
fidivrs
xor
or
mov
outsl
mov
sbb
dec
sbbb
shl
cmp
cs
lret
inc
shlb
aaa
ds
movsl
xchg
pushf
jge
jo
out
push
iret
ds
rcrl
cld
sub
mov
add
mov
mov
dec
push
mov
xchg
inc
adc
lods
xlat
lcall
jp
in
sub
pop
outsb
inc
inc
insb
in
pop
xlat
fisubl
and
outsb
test
icebp
test
lods
mov
sub
xchg
pop
inc
daa
ret
jp
sbb
ljmp
ret
pop
adc
inc
mov
jl
xchg
jo
jg
lock
insl
push
movl
or
repz
xchg
daa
jno
lds
sub
lret
mov
cwtl
shrl
and
mov
xor
add
push
imulb
ljmp
dec
movsb
ficoml
dec
add
and
inc
adc
inc
xor
repnz
nop
cmp
aas
dec
push
das
test
mov
repz
sbb
cmp
or
xor
push
cmpsl
xchg
push
mov
int
rcl
cmpsb
das
test
out
out
sbb
rol
add
call
add
call
movsb
or
scas
pushf
jle
dec
lret
ret
lods
jo
cmp
xchg
arpl
ds
xor
in
js
into
pushf
mov
aaa
mov
lcall
bound
jns
js
sbbb
lahf
int3
fwait
fwait
mov
repz
xlat
aaa
xorl
pop
xchg
iret
out
pop
mov
js
mov
imul
pop
stos
cmp
repnz
xchg
insl
push
jbe
fimuls
inc
mov
mov
jl
mov
xchg
leave
popf
lcall
xchg
add
cmp
jmp
jnp
sub
push
xchg
jge
xchg
ret
mov
jmp
xlat
popa
push
jge
sub
inc
scas
push
popf
popa
sub
mov
jbe
daa
sub
in
dec
cmp
fdivs
fistl
subb
cmp
cmp
loope
pop
out
in
mov
out
lret
inc
shll
mov
sub
cmp
sub
jmp
jnp
icebp
mov
cmpsb
leave
and
or
std
outsl
dec
aad
sbb
inc
sbb
ret
lahf
rolb
mov
xor
fldl
jb
sahf
out
movsb
xchg
push
mov
and
in
xor
mov
clc
das
sbb
mov
xor
lock
adc
adcb
pusha
xchg
xor
mov
sbb
fldl
pop
loope
outsb
push
insb
adc
cmp
xlat
jb
mov
xchg
outsl
add
fsubrs
sti
in
sub
fdivs
sbb
mov
rcr
shll
pop
mov
shrl
adc
mov
push
adc
xchg
call
les
outsl
dec
jp
clc
mov
and
mov
popf
or
hlt
scas
mov
cltd
pop
movsl
mov
inc
pop
pop
or
rorb
add
cmp
jns
mov
xor
outsl
pop
cmp
ret
arpl
je
cmp
cltd
push
loopne
pusha
mov
lock
repz
call
in
mov
popf
bound
repnz
sbb
adc
inc
push
jns
rclb
push
mov
cmc
mov
sub
or
adc
dec
jno
lods
les
push
cmp
mov
call
jle
mul
mov
cli
loope
pop
jecxz
mov
push
push
call
xchg
andl
push
sub
loop
aam
and
sbb
inc
gs
fstl
inc
and
jae
fsubr
push
mov
push
loope
jmp
push
jmp
mov
lds
lods
shl
cmp
insl
stos
rcrb
jecxz
mov
lret
mov
cli
mov
push
pusha
sub
out
loopne
jo
les
bound
sub
nop
jle
movsb
sub
mov
or
in
mov
cmp
push
lds
cmc
mov
mov
adcb
lock
xor
add
xlat
vmread
cmc
inc
push
xor
shrl
inc
mov
push
or
mov
mov
mov
in
test
xor
sub
lods
jmp
mov
fbstp
pop
jg
cmpsl
dec
rorb
adc
add
pop
inc
jecxz
call
outsb
popf
call
pop
inc
jmp
lahf
lcall
xchg
fsubr
inc
lahf
pop
mov
sahf
mov
popa
call
push
lea
add
cmp
sahf
mov
ljmp
dec
adc
stc
ficompl
mov
pop
stos
das
cltd
jge
sub
int3
enter
js
cmp
repnz
cmovae
aas
fldcw
jp
mov
stc
fidivrl
sbb
push
cmovp
loopne
cmp
int3
aaa
pop
popf
gs
and
jno
imul
mov
ljmp
and
xor
pop
dec
push
in
lods
arpl
daa
cmp
movsl
sbb
stos
pop
xor
push
inc
sbb
andb
aas
jle
stos
xchg
push
jns,pt
mov
xor
push
pushf
xlat
leave
cltd
lcall
pushf
add
out
jl
or
dec
mov
sub
imul
sub
or
xchg
lock
lret
mov
cld
loop
xchg
adc
mov
ss
cmpsb
inc
mov
in
sbb
stc
loope
push
adc
iret
outsl
sub
push
push
lds
push
sbb
xor
sub
add
sub
into
dec
xor
out
fnstsw
fsubr
arpl
inc
mov
jecxz
adc
std
leave
pop
dec
cmc
icebp
insl
sub
or
fmuls
test
jp
test
je
cmpsb
push
mov
imul
mov
adc
push
ds
jne
push
jbe
add
or
cli
ja
xchg
pop
adc
push
call
imul
cmp
stc
ret
or
testb
loope
and
pop
andnps
test
push
rcll
mov
int3
test
push
test
inc
dec
xchg
mov
add
cmp
mov
push
imul
dec
xor
sub
rol
jle
fsubr
cmpsl
or
ret
sub
jecxz
push
negb
mov
hlt
add
xor
fcom
and
fbld
mov
dec
es
pop
sbb
jl
adc
mov
dec
sbb
loopne
push
add
bound
enter
pop
push
xchg
pcmpgtb
lret
sub
in
fcomip
mov
dec
enter
pop
jae
dec
xor
pushf
and
or
and
outsl
sar
jae
and
fdiv
xchg
dec
jno
push
ret
and
nop
dec
jl
sub
in
movsl
pop
test
popa
inc
adc
jg
xchg
jecxz
lock
mov
leave
sub
mov
int3
fwait
pop
push
jnp
ss
arpl
sbb
sub
cmpb
ja
gs
movsb
push
mov
jge
pop
int
jl
lods
lahf
jl
pushf
fidivrs
add
or
int3
filds
pop
pop
xchg
xor
or
jge
nop
das
out
sbbb
bound
push
inc
cmp
push
in
movsb
lods
cld
test
pushf
jbe
mov
aam
subb
ss
enter
jle
mov
sub
jae
cld
lds
popf
push
mov
mov
mov
or
scas
xchg
jle
into
mov
test
pop
sub
pop
sub
ss
pusha
or
leave
lahf
in
in
das
and
imul
inc
jnp
lcall
lock
xor
mov
icebp
std
dec
mov
lahf
pop
mov
imul
or
jno
xor
in
push
sarb
out
mov
cmp
lahf
add
add
repnz
fsubs
mov
or
sub
jl
add
xorl
xor
rcll
push
mov
push
loop
sti
std
cli
push
push
mov
and
add
mov
dec
addr16
push
cmp
inc
stos
subl
adc
pop
out
cmc
sbb
xlat
lds
lret
sbbb
jg
and
mov
push
inc
mov
adc
cmp
pop
mov
cs
call
aad
sub
cmpsb
ss
jmp
mov
lds
mov
shr
testb
mov
daa
int
sahf
sub
cmpl
hlt
out
lret
arpl
repz
shll
test
or
shll
and
pop
cmp
call
dec
xchg
inc
dec
inc
xchg
sti
inc
test
filds
ja
out
and
iret
lds
dec
sbb
jbe
jecxz
test
cli
pause
sub
jns
out
xchg
rolb
sub
jne
or
loope
lods
stos
dec
mov
test
add
imul
fcompl
pop
jmp
daa
dec
pop
jo
jge
shll
pop
daa
sbb
lea
or
pop
js
stos
jno
in
mov
or
pop
imul
lret
jmp
inc
dec
pop
cmp
pop
mov
or
mov
inc
insl
cli
movsl
in
scas
cltd
popa
mov
mov
out
lahf
mov
addr16
and
fimuls
xchg
test
mov
je
les
into
jno
jle
adc
lds
dec
sahf
out
out
andb
into
adc
clc
sbb
in
mov
das
icebp
gs
rcrl
es
push
divl
idivl
jmp
lahf
xor
repnz
inc
cmp
gs
jle
push
xchg
add
adc
arpl
xorl
xlat
iret
fsincos
and
cwtl
loopne
xchg
mov
dec
out
add
jmp
dec
adcl
arpl
mov
add
inc
das
xchg
movsl
lds
test
adc
lret
add
scas
mov
jmp
mov
and
popa
aaa
inc
inc
bound
jbe
sarb
enter
fbstp
aaa
xor
fs
shl
incb
inc
mov
mov
mov
stc
popf
das
push
iret
mov
stos
mov
rcll
es
cld
dec
push
jbe
mov
sbb
icebp
jp
sbb
mov
sub
add
cmp
pop
lcall
and
inc
test
addr16
or
add
mov
and
push
jbe
dec
into
arpl
adc
dec
repz
pop
enter
aas
xlat
ret
xor
lahf
lret
cs
scas
mov
addb
pop
rcl
adc
psubq
in
mov
jbe
pop
pop
aad
push
cltd
in
and
mov
jne
fcompl
in
pusha
bound
mov
lahf
out
mov
mov
sbb
mov
subl
enter
pop
dec
sub
add
pop
dec
aas
mov
sbb
xor
shll
repz
dec
dec
test
adc
inc
lahf
shl
sbbb
pop
in
and
les
pop
push
dec
push
sti
jl
insl
outsl
repnz
add
hlt
in
jne
or
int
sbb
iret
pop
cmc
mov
rclb
mov
jo
mov
cmc
iret
mov
icebp
sub
sub
and
aas
jecxz
mov
leave
adc
add
fsts
mov
test
aas
mov
mov
jb
inc
xlat
jnp
movsb
sahf
mov
cmpsl
pop
cltd
scas
aas
scas
fdivrs
dec
stc
mov
repz
push
jnp
push
loopne
movsb
pop
jmp
jl
imul
jecxz
lea
shlb
push
fldl
aad
push
gs
mov
dec
insb
lcall
inc
dec
in
ljmp
or
cli
fdivl
repz
inc
adc
mov
cltd
inc
fs
mov
jmp
insl
xchg
sarb
stos
icebp
cmpsl
pop
pop
pop
xor
dec
push
js
js
add
fnsave
sub
xor
dec
cltd
mov
out
and
mov
cmpsl
and
lods
scas
out
mov
insb
ja
dec
call
or
mov
cld
rcrb
jbe
and
xor
in
mov
sbb
xorl
mov
pop
das
gs
lds
stc
icebp
xchg
fcmove
imul
out
pop
sub
pop
xor
pop
cs
lds
sub
scas
mov
pop
xor
jbe
cmp
test
cwtl
outsl
jno
fdivl
inc
sbb
pop
insl
fadd
push
push
les
mov
adc
mov
loopne
mov
adc
call
repnz
das
sbb
push
sbb
dec
mov
pop
or
dec
subl
xchg
jmp
dec
xchg
xor
pop
das
pop
xor
lahf
std
orb
mov
sbb
test
push
jge
mov
popa
xchg
sbb
lods
dec
ficomps
xor
and
add
aas
fs
aas
push
addr16
pop
jg
js
ret
mov
mov
sbb
out
adc
jle
shr
jbe
mov
test
shlb
lret
cmp
lods
outsb
mov
fwait
sbbb
popa
icebp
jge
add
inc
stos
dec
xchg
push
in
xor
push
push
jb
test
push
je
cld
or
fisttpl
sub
lret
or
fwait
xchg
and
push
fisubl
xchg
dec
jb
jnp
and
sub
rcll
out
xchg
sub
or
mov
loopne
data16
mov
outsl
dec
jmp
cmc
xor
adc
rol
sub
mov
repz
xchg
andl
cltd
xor
pavgw
xor
pop
adc
shlb
pop
mov
jno
mov
jge
les
or
mov
shlb
dec
xchg
mov
loop
fwait
cmpsb
jp
insl
je
xchg
lods
mov
inc
push
push
inc
or
lods
xor
dec
out
clc
cltd
jb
sub
lods
shll
mov
cmp
pop
outsb
flds
add
lods
inc
test
and
test
jmp
dec
sti
cmp
add
push
ss
jnp
lret
fsts
sbb
add
sub
rorl
rcrl
xchg
jmp
inc
fwait
push
hlt
xor
adc
leave
inc
scas
pop
sbb
cmp
push
pushf
std
insl
cs
sub
mov
movsb
lahf
and
sbb
daa
stc
test
fwait
push
inc
test
pusha
outsb
fnsave
sahf
push
stc
jo
aas
lret
pop
jbe
sbbl
rol
cmp
call
inc
fucomp
dec
sub
test
data16
adc
jns
test
popa
dec
or
or
insl
sbb
stc
leave
inc
mov
popf
scas
rcrb
xor
push
shlb
cwtl
lahf
push
add
repnz
mov
leave
cmp
jae
fs
out
mov
jnp
push
lahf
push
mov
aam
jbe
xor
jecxz
jnp
scas
or
fbld
stos
adc
push
int3
xchg
jb
lahf
shlb
dec
cmp
mov
push
mov
cmp
xchg
inc
jne
movsb
testl
cwtl
scas
xor
fidivrs
insl
jecxz
je
in
cld
aaa
mov
jecxz
cmpsl
pusha
repz
mov
stos
mov
gs
shll
pop
jbe
lock
cmp
clc
mov
loopne
pop
fdivrl
adc
popa
ss
xor
dec
jae
mov
and
add
daa
jmp
xchg
xchg
test
sbbl
and
dec
mov
jl
mov
aaa
sbb
and
in
inc
mov
popa
outsl
out
insl
lret
add
test
repz
sbbl
fsubrs
stos
test
aad
dec
mov
fcmovnb
cmc
pop
mov
test
dec
mov
pop
cmpsl
pop
sbb
mov
push
inc
jmp
aad
rcll
mov
xor
xor
loop
arpl
leave
push
nop
mov
pop
push
mov
and
cmp
sbb
scas
push
lea
into
mov
aad
test
rclb
or
add
loopne
outsl
lahf
ret
arpl
in
addr16
mov
and
lock
and
xchg
add
jne
xchg
push
inc
jbe
subl
push
mov
jp
mov
movsb
shrd
nop
enter
int3
adc
call
sbb
out
cwtl
dec
fcoms
mov
jno
in
ja
aaa
adc
jnp
in
add
mov
mov
push
push
loopne
sarl
cmp
adc
scas
push
or
and
popa
scas
lods
mov
lds
jb
divb
stos
mov
push
dec
add
rorl
mov
pop
push
pop
repz
sahf
lret
sti
push
cmp
mov
push
clc
fldenv
aam
int3
mov
mov
clc
ret
cmp
xchg
lret
push
inc
clc
out
mov
jnp
stos
dec
notl
cmp
sub
push
leave
fmul
ds
sub
sahf
push
dec
or
and
jp
cmp
and
xchg
mov
in
out
and
jmp
lods
adc
sbb
sar
lea
sbb
aad
or
push
cmpsl
sub
sbb
std
push
js
jp
daa
mov
inc
cmpsl
mov
mov
dec
push
sub
das
push
mov
sahf
add
movsl
sbb
adc
mov
inc
out
xlat
or
scas
or
fcomps
mov
aam
cmp
push
sbb
push
aad
xchg
xor
out
jl
jns
sub
in
jnp
jp
std
sub
call
inc
xor
jo
lret
mov
repz
jg
popa
jecxz
sbb
add
call
jg
pusha
inc
in
imul
pusha
bound
addr16
fistl
jg
push
jl
aad
pop
xchg
shlb
inc
shll
ret
fnstenv
sub
mov
xchg
pop
mov
dec
push
jmp
fs
cmp
xchg
in
dec
or
cli
push
mov
fcompl
jmp
dec
cmp
into
xor
and
jle
pop
dec
std
data16
out
mov
adc
in
insl
push
unpcklps
sbb
jle
jl
inc
inc
mov
shl
mov
addr16
push
out
stos
je
imull
xor
add
mov
jo
adc
mov
dec
scas
mov
inc
mov
int3
adc
shlb
fmull
dec
inc
sahf
scas
xchg
add
pop
and
jmp
jmp
inc
add
sbb
jno
ficomps
cs
and
inc
mov
pop
sbb
ret
inc
xor
sbbb
dec
mov
pusha
daa
sbb
ljmp
adc
aad
imul
push
mov
push
adc
out
lods
push
sub
push
mov
addr16
mov
movsl
scas
out
and
ret
mov
into
pop
fsubrs
push
mov
jg
enter
adc
std
push
repnz
div
push
ljmp
sbb
stc
inc
push
stos
gs
int
inc
xchg
mov
testb
jo
add
or
je
cwtl
sub
decl
push
xor
push
xor
dec
incb
xchg
sub
sbb
fistps
mov
ja
in
sti
movsl
sub
ror
popa
cmpl
sub
add
loop
pusha
int3
push
stc
sti
in
xchg
sbb
push
test
movsl
mov
sub
sub
popf
jg
cmp
mov
ret
jo
out
cmp
or
hlt
imul
insb
xchg
rcl
iret
xchg
test
or
push
sub
sahf
insl
rcll
stos
mov
mov
lret
cmovb
das
popa
sub
add
gs
int
push
hlt
pushf
in
call
jno
pop
gs
enter
mov
lret
sbb
add
mov
push
dec
inc
lret
xchg
adcl
mov
xchg
mov
lds
or
hlt
fiadds
sub
test
cwtl
sub
fwait
adc
cmp
cmp
cltd
add
mov
inc
push
dec
sub
mov
adc
clc
push
dec
cli
fistpll
int
das
movsl
movsb
gs
push
pop
leave
push
dec
int3
xchg
cmp
pop
mov
sub
jb
jecxz
jp
inc
and
dec
mov
mov
es
adc
and
in
fisttpll
js
push
add
jg
in
ja
adc
aad
xor
xor
push
ss
adc
add
lods
push
fisubs
jmp
add
mov
daa
popf
std
mov
xor
dec
mov
sti
pushf
and
jbe
cld
sub
cmp
mov
push
negb
orb
std
daa
lods
pushf
mov
arpl
dec
or
dec
lods
call
ljmp
or
sbb
lods
loopne
pop
dec
sbb
sbb
sti
push
cmpsb
xor
out
or
and
loop
test
outsl
cmp
movsb
les
loopne
sbb
cmp
int3
xchg
push
add
das
fwait
cmp
shll
pusha
jne
es
dec
test
dec
js
jno
cmp
repnz
inc
jmp
dec
test
fst
inc
mov
or
adc
scas
enter
mov
fisttps
call
cmp
filds
test
add
aad
sahf
mov
add
mov
xchg
cmp
and
movsb
mov
mov
cwtl
bound
repnz
jmp
dec
sti
xor
and
das
dec
mov
dec
dec
dec
in
wbinvd
enter
pop
enter
mov
sbb
inc
xchg
leave
pop
lcall
scas
mov
bound
cmp
add
mov
testl
mov
testl
mov
mov
in
rcl
scas
cmpsb
inc
dec
and
shl
xchg
or
add
lods
jmp
bound
jecxz
mov
cmp
inc
mov
pop
ljmp
mov
shll
fcoml
cltd
movsb
sub
mov
adc
sub
pop
jp
mov
mov
add
aaa
adc
lcall
or
cmp
imul
imulb
pop
hlt
xor
repz
lock
sbbl
jecxz
adc
loop
loopne
call
cmc
imul
inc
lods
pop
pop
in
mov
jb
pop
mov
inc
add
xchg
sub
mov
daa
xchg
sarl
push
or
ljmp
cmpsl
lret
xchg
sbb
stos
sub
scas
or
inc
stos
add
cmp
lods
push
mov
jecxz
loopne
mov
iret
js
mov
push
xor
flds
cmpsb
repnz
add
fiadds
cld
mov
das
and
imul
xchg
cmpsb
shrb
adc
hlt
inc
and
inc
mov
or
push
nopl
not
stos
fdiv
inc
xor
mul
cmp
adc
xor
js
push
or
push
es
add
scas
jp
pop
xor
xor
es
out
iret
arpl
jmp
pop
pushf
imul
push
jae
jnp
sbb
lods
insb
jmp
push
xchg
mov
out
or
aad
xchg
popf
sbb
xchg
xor
ja
mov
mov
mov
adc
shll
and
inc
roll
sub
and
sub
cmp
dec
sbb
jmp
jecxz
shlb
js
push
ds
inc
repz
jecxz
mov
imul
jecxz
xor
sahf
mov
sahf
into
xor
sub
fimuls
out
das
mov
jae
inc
iret
inc
xor
out
cli
data16
mov
cmp
adc
adc
or
mov
dec
outsb
push
sahf
inc
mov
mov
push
mov
sbb
pop
sbb
ss
notl
pop
and
sub
add
sub
pop
hlt
stos
pop
ljmp
inc
sahf
ret
add
cmove
pop
mov
adc
int
in
int
out
dec
sahf
sub
ret
lods
loopne
xor
xor
mov
imul
pop
out
mov
test
xchg
jp
mov
xchg
outsl
inc
pop
adc
jo
jne
mov
pop
dec
imul
mov
dec
pop
push
test
xchg
push
in
jmp
in
cwtl
rolb
adc
mov
mov
jb
ror
lods
dec
mov
xlat
pop
test
sbb
in
mov
ret
pop
inc
pop
mov
xor
rolb
cmp
xor
and
push
or
and
mov
or
mov
movsl
push
jnp
sarb
pop
nop
dec
in
sbb
adc
pop
mov
and
pop
addr16
xchg
pop
call
push
inc
repnz
and
cmp
mov
bound
cltd
jae
jns
arpl
sub
jno
inc
cmpsb
sarb
dec
cmp
je
loopne
mov
cs
sbb
adc
fidivl
and
xor
insb
xorb
lret
jae
mov
les
push
cmp
cmp
xchg
in
stos
in
idivl
pop
std
fbstp
inc
nop
or
sbbl
jg
insl
push
cmp
xor
xor
add
in
adc
js
pop
stc
pop
out
scas
jae
lods
and
ja
lock
dec
daa
push
jl
in
add
mov
jmp
and
clc
cwtl
xchg
pop
dec
std
cld
mov
testl
push
pop
dec
push
je
jnp
adc
or
and
aas
pop
movsb
xor
aad
cmc
and
dec
add
orl
dec
dec
bound
je
xor
or
xchg
dec
dec
cmpsl
jnp
pop
arpl
adc
stos
mov
or
jae
dec
inc
inc
mov
insb
add
mov
xchg
sub
loope
sbb
cmpsl
jno
sub
sub
mov
xlat
orb
sbb
or
leave
jmp
jnp
cltd
test
cwtl
lods
lahf
cmp
pop
fstps
cmp
aam
cmp
jae
notb
popf
shrb
subb
mov
sti
sub
jo
push
int
xor
out
lcall
pop
push
pusha
dec
imul
add
pop
lcall
xchg
sbb
add
mov
mov
mov
cs
push
sub
mov
das
lea
call
sbb
imul
dec
leave
or
add
andl
add
add
add
sbb
outsl
and
mov
decl
sahf
dec
test
pop
push
lcall
mov
sti
mov
dec
jge
int3
pop
scas
jae
ja
mov
mov
pop
shl
scas
imul
fldcw
add
xchg
xchg
in
sbb
xlat
xchg
loope
sbb
sub
mov
and
bound
jno
aas
mov
cwtl
mov
les
and
push
dec
subb
repnz
xor
stos
mov
and
mov
loope
ret
pop
int
clc
adc
sub
fnstenv
sahf
mov
lcall
shrb
arpl
lahf
push
inc
insl
or
sub
out
iret
fcoms
inc
nop
dec
mov
fisubrs
lods
addr16
and
repnz
mov
xor
add
pop
push
loop,pn
pop
shr
adc
xchg
pop
mov
sbb
loop
sbb
or
xor
xor
jo
fwait
sbb
mov
inc
cwtl
mov
sub
mov
outsb
rorb
xchg
mov
inc
in
add
pop
in
pop
jno
mov
pop
pop
into
mov
in
fcompl
sub
mov
sbb
lret
int3
mov
into
movsb
jnp
mov
push
add
adc
xor
dec
les
cs
cmp
or
and
sbb
xor
cmp
imul
jne
sbb
or
in
cmp
je
mov
mov
aas
fcoml
fcmovb
sub
add
fimuls
or
into
push
pop
dec
nop
lods
xchg
cli
xor
push
insb
into
sbb
inc
repnz
lods
movsb
scas
mov
fidivrs
cld
mov
dec
mov
sbb
jns
push
xchg
lret
cli
ret
aam
inc
and
and
mov
lock
test
and
pop
inc
jb
cmpb
mov
movsl
sub
and
popf
xchg
movsl
sub
jne
jmp
aad
subl
bound
test
sub
inc
ret
xchg
add
and
imul
mov
xchg
out
push
adc
xor
pop
inc
push
or
sti
mov
or
stos
xor
xchg
icebp
out
or
sbb
and
int3
jne
add
inc
mov
sarl
or
aas
cmp
outsl
repz
repnz
push
jo
sub
aas
and
mov
cmp
or
js
lcall
sbb
mov
mov
test
jns
xchg
enter
outsb
imulb
ret
push
int3
xchg
insb
cltd
mov
mov
std
mov
adc
xor
jae
and
fisubrs
imul
cltd
addb
out
fwait
nop
shlb
push
lahf
inc
pop
loope
cmp
inc
jl
pop
sub
xchg
mov
test
hlt
sbb
pop
xlat
cmc
rorb
jmp
sub
ja
xor
inc
fsubr
ret
insb
ret
not
pop
mov
adc
dec
aad
lret
inc
jno
call
xchg
out
inc
in
sbb
movsb
cmc
mov
mov
ret
xor
mov
aam
cld
push
sbb
das
pop
xorl
or
inc
xchg
out
push
shl
and
push
push
jnp
popf
rcl
pushf
mov
mov
mov
mov
nop
sub
jg
xor
lock
pop
xor
cmp
jb
cwtl
mov
imul
shl
fwait
dec
sub
aam
stc
shrb
mov
mov
xchg
loop
and
movsb
mov
sbb
push
mov
lea
cmpsb
and
imul
inc
push
aas
push
jle
adc
jl
fsubrl
call
add
cltd
inc
cltd
dec
and
ss
ret
mov
dec
flds
jecxz
std
cwtl
pop
test
arpl
xor
jae
out
pop
push
and
adc
fcmovnu
cmp
push
mov
outsb
and
arpl
aam
xchg
cwtl
imul
ds
dec
int
mov
subb
pusha
adcb
mov
mov
xchg
mov
jmp
fucom
mov
je
jecxz
notl
inc
sub
xor
fldcw
inc
push
pop
ja
push
mov
mov
pop
sbb
push
popf
or
dec
mov
iret
cmp
int3
mov
lods
xchg
dec
addr16
movsl
lea
jbe
rolb
incl
mov
pop
ljmp
sub
mov
lret
mov
push
dec
addl
or
sti
lods
incl
sti
push
push
sbbb
dec
mov
xchg
hlt
stos
enter
fbld
fistpl
pop
fistps
add
out
adc
sti
cwtl
pop
pop
cli
sar
push
mov
cmp
lret
push
imul
in
stc
pop
fwait
es
ja
lock
or
in
lods
xchg
lcall
jmp
cltd
mov
fistpll
pop
mov
cmp
cmp
xor
or
mov
inc
jl
jo
or
inc
pop
cltd
ss
mov
mov
clc
push
mov
lock
and
or
xor
loope
scas
mov
adc
mov
xchg
dec
add
andb
cld
adc
cmp
inc
xchg
in
jb
bound
mov
mov
aaa
ja
stos
push
repnz
loop
dec
dec
pop
js
lea
or
ds
sub
and
roll
jmp
loope
fcomps
mov
cmpsb
push
jo
mov
lcall
jbe,pn
mov
sbb
test
xchg
xor
fst
push
jmp
js
push
xchg
lock
sbb
fidivl
scas
out
ret
mov
mov
dec
orl
std
inc
movsl
lret
aam
jbe
dec
jns
scas
xchg
cmp
add
add
pop
jb
mov
xchg
inc
lea
iret
push
sub
sahf
or
or
pop
insl
push
mov
into
sarl
test
push
xor
stos
hlt
insb
cmp
movsb
fimuls
adc
je
rcr
das
mov
iret
add
out
out
dec
dec
sub
jns
inc
cmp
jnp
testl
push
cltd
int
das
mov
les
xor
or
stos
adc
push
pop
cmpsl
loopne
aam
int
ja
sbb
jno
push
out
cltd
stc
cmp
add
das
jnp
push
pushf
jle
pop
notw
adc
add
icebp
testb
test
dec
jno
adc
ret
stc
cmp
add
xlat
shrb
push
arpl
or
loope
push
pop
loopne
gs
imul
mov
mov
mov
jmp
jno
or
and
test
movsl
mov
sbb
pop
xorl
mov
faddl
loope
pop
dec
popf
pop
adc
pop
mov
nop
aam
sbb
cmp
or
mov
dec
cmpsl
bound
outsl
dec
shl
and
hlt
push
push
jecxz
in
repz
leave
sbb
loopne
add
jb
dec
movb
sbb
pop
cltd
sub
aas
sti
leave
subl
pop
lods
ss
and
sbb
push
lcall
sti
inc
xchg
inc
pop
cmp
mov
imul
fs
sub
mov
pop
dec
xchg
jle
or
in
cmp
mov
mov
adc
mov
push
ljmp
cli
push
arpl
leave
js
div
mov
insb
nop
lds
fcompl
and
fstpt
mov
sbb
jmp
mov
mov
mov
loope
nop
imul
aad
setp
rolb
jbe
push
filds
jns
cmpb
mov
mov
pop
xchg
cmp
sbb
bound
or
inc
jmp
out
pop
pop
inc
arpl
push
ss
pop
mov
pop
outsb
xchg
cmpsl
addb
cmpsb
dec
fstps
insb
test
add
and
add
dec
outsb
mov
lods
push
adc
mov
outsb
loop
mov
xlat
push
mov
sub
mov
pop
ja
jl
cld
outsl
jae
jl
adc
pop
mov
test
scas
cmp
mov
xorl
mov
sti
xchg
xorb
insb
pop
sbb
int
push
mov
adc
xor
call
ja
mov
push
pop
mov
mov
fistl
lea
sub
insl
cltd
in
js
mov
pop
inc
xchg
outsb
jbe
icebp
test
lcall
mov
fs
sbb
es
and
setbe
xlat
fadds
dec
clc
add
repz
fidivrl
adc
xchg
inc
mov
inc
cmp
jne
push
push
cld
mov
push
jmp
movsb
movsb
sbb
sbb
das
ja
pop
sub
and
mov
lods
into
stc
sbb
sahf
addb
mov
inc
adc
push
xchg
vsubpd
ljmp
shrl
adc
out
fldt
sub
imul
lds
jnp
adc
popa
dec
push
xor
out
inc
cmp
ficoms
repnz
push
cmp
dec
in
arpl
mov
pop
pop
outsl
enter
daa
and
out
mov
ds
mov
pop
iret
or
and
mov
cmp
sbb
dec
jl
lea
inc
sub
pop
push
inc
push
mov
sbb
adc
inc
jl
jmp
int3
inc
dec
pop
pop
xchg
bound
mov
dec
insb
outsl
add
shrb
sbb
sahf
imul
rcll
cmp
mov
in
cmp
cs
fs
movl
aad
mov
stos
inc
outsb
es
int
clc
sbb
cmpsl
iret
and
xor
add
das
outsb
jp
pusha
rcrb
adc
ror
add
push
fadds
enter
lret
xchg
xor
cmp
sub
xchg
fiadds
sarl
sbb
xor
fiadds
insl
add
movsl
xchg
add
pop
xor
pop
cmp
inc
in
gs
pop
imul
cmp
mov
in
mov
fdivrp
cmpsl
mov
out
jg
rcl
jne
or
adc
adc
imul
cmpsl
imul
repz
push
icebp
jae
lret
xchg
fists
adc
lods
jecxz
cmp
jg
xor
mov
sub
hlt
dec
dec
fistl
push
jg
in
or
pop
std
shrl
test
push
and
jp
inc
pop
lret
and
test
orl
leave
dec
xchg
lret
movsl
pop
inc
push
div
cli
add
mov
push
mov
inc
pop
test
jmp
mov
out
xchg
pop
repnz
lods
in
inc
dec
mov
xchg
mov
xchg
ret
sbb
pop
mov
dec
sub
pop
mov
or
or
adc
xchg
pop
lea
pop
addr16
adc
lods
mov
adc
adcb
incb
lret
inc
in
stc
and
or
xchg
pop
or
sbb
mov
xchg
shl
rclb
adc
jp
cs
clc
loopne
jg
movsl
aam
clc
outsl
shlb
push
in
insb
xchg
imul
xchg
dec
sbb
jae
out
divl
dec
xchg
xchg
sub
and
mov
subl
decl
movsb
andb
and
xchg
shrb
cmp
or
and
cs
pop
or
mov
insb
loop
and
dec
adc
pop
sar
inc
mov
sbbb
lahf
mov
xchg
scas
push
inc
sub
push
jnp
sbb
jp
inc
cmp
sbb
loop
test
mov
cltd
rcrb
orl
int
sub
fwait
jo
or
adc
dec
out
or
call
shl
out
sub
imul
xor
jp
adc
mov
pop
xchg
cs
add
jmp
push
mov
jg
clc
dec
mov
fistpl
mov
das
jl
dec
pushl
xor
fnstcw
int3
mov
xchg
pusha
ss
sti
push
fwait
lock
shlb
out
pop
xor
repz
sar
adc
repnz
push
aam
andl
lret
push
mov
aam
mov
ja
pop
pop
xchg
mov
and
insl
je
pusha
xor
mov
push
in
and
push
sub
aaa
add
shlb
mov
call
sub
hlt
or
pop
cmp
sub
loop
jbe
mov
loopne
mov
inc
pusha
test
adc
and
sub
and
arpl
cmpsl
call
add
pop
and
jb
aad
lea
jmp
push
xchg
out
scas
sti
data16
aaa
pop
and
mov
dec
mov
pop
xor
dec
out
dec
in
sub
daa
test
push
add
or
sarl
mov
pop
adc
cwtl
mov
js
scas
xchg
add
roll
pop
mov
ret
imul
cmp
cli
bound
bound
jae
inc
testl
pop
xor
or
adc
popa
lods
cmc
outsl
push
adc
inc
int3
dec
mov
sub
lock
jl
jge
inc
fimuls
cmp
in
pushf
xchg
jae
push
jns
and
mov
js
dec
fs
pop
int3
cmp
ss
xchg
dec
iret
bound
hlt
scas
into
cli
push
test
fs
jmp
mov
sub
fwait
mov
ret
adc
mov
imul
call
fbld
adc
scas
clc
or
or
movsb
sbb
loopne
test
xor
add
scas
loopne
pop
mov
loope
mov
fs
mov
jge
cli
xchg
shlb
xchg
cmp
xorl
repnz
or
push
cs
dec
sub
sub
adc
add
roll
into
mov
enter
pop
cld
scas
loop
lea
or
add
js
pop
mov
mov
ljmp
loop
pop
pop
xchg
or
dec
les
ficoml
movsl
cmp
movsl
loopne
insb
push
or
std
and
test
adc
outsb
sar
pop
jmp
int
add
or
das
dec
iret
in
mov
adc
mov
mov
sahf
pop
ss
popf
mov
leave
or
or
xor
mov
mov
dec
imul
dec
jecxz
pop
push
je
dec
rcrb
mov
in
mov
jp
sbb
call
adc
mov
jns
test
imul
jle
in
pop
cltd
cmp
push
stos
aaa
and
xchg
pushf
lea
jne,pt
out
xchg
lahf
push
pop
bound
mov
pop
mov
stos
ss
lret
xor
lret
outsb
add
mov
test
hlt
mov
or
mov
cmp
lcall
fisttps
aam
add
in
pop
inc
mov
pop
dec
out
dec
aam
fs
mov
jp
cld
mov
mov
outsb
stc
xchg
fcompl
fs
fldenv
aaa
sbb
pusha
lcall
inc
mov
daa
inc
mov
mov
push
test
ss
bound
jno
pop
or
add
fbld
push
push
rorb
in
ss
push
adc
xor
jg
cld
rcl
js
jmp
stc
sbb
sub
xchg
sbb
or
add
lahf
out
push
fsubl
insl
xchg
mov
cmp
lret
jo
je
pop
inc
out
dec
add
add
insb
inc
jmp
mov
aad
pop
adc
and
outsl
add
cmp
sub
icebp
and
sub
sbb
add
xor
pop
jae
fimull
pusha
jno
daa
insb
ja
push
add
add
cmpsb
cmp
mov
and
jae
shlb
fwait
lods
outsl
jnp
movsl
out
lret
xchg
rorl
xchg
scas
push
or
pop
mov
mov
cmp
mov
outsl
mov
or
pop
mov
pop
mov
dec
adc
and
pop
adc
adc
lret
imul
jge
std
xor
or
inc
adc
inc
mov
rcrb
push
jne
jecxz
data16
rcrb
cmp
mov
fistpl
shl
push
mov
orb
lds
jno
lcall
frstor
push
jo
cmp
mov
in
lahf
repnz
pop
push
cmp
scas
mov
dec
std
inc
jp
or
cmpb
push
inc
jmp
and
pop
cmp
xor
arpl
pushl
flds
ja
jne
sbb
lea
ds
adc
dec
cmp
repz
mov
push
mov
mov
lock
push
mov
lret
xor
shlb
pop
in
xor
dec
mov
sbb
mov
or
sti
stos
in
loop
xlat
repz
cmp
inc
push
cli
ret
cmp
ret
mov
sbb
lcall
or
fs
outsl
cli
fs
call
repnz
cmpsb
call
xchg
popf
xchg
adc
gs
subl
push
fadds
std
repz
mov
jo
lods
cmp
sbb
aad
add
jo
mov
stc
outsl
pop
sbb
aad
jae
push
cmc
push
testl
jp
or
dec
jb
or
adc
int
das
cltd
sbb
popa
cmp
imul
fisubs
je
je
pop
cmp
push
pop
ret
jmp
int3
inc
mov
cmpsb
pop
movsb
or
inc
ss
adc
lahf
push
pushf
sbb
inc
loope
xchg
sbb
sub
push
mov
push
stc
or
adc
fisubl
daa
in
clc
ja
je
cmc
int
inc
push
aad
ljmp
xchg
imul
arpl
pop
pop
and
xchg
cmpsb
shll
addr16
gs
jne
push
pop
ret
cmp
mov
cli
test
js
mov
movsb
pusha
mov
ficoms
sahf
int
mov
popa
int3
and
dec
xchg
rolb
test
stos
mov
andl
dec
ss
cmp
mov
xor
mov
pop
jle
dec
pop
xlat
lods
loop
xor
xchg
pop
inc
sub
loope
or
in
sub
xor
push
mov
sarl
je
jge
leave
xchg
es
aad
mov
xor
xchg
cmpsl
xor
ss
cmp
xchg
addl
xor
sbb
jne
push
loop
pop
stc
mov
jl
sbb
cltd
cmp
xor
mov
xchg
test
insb
scas
inc
and
mov
cmc
jnp
jmp
test
push
aam
aad
ja
and
push
xchg
ds
sti
aam
and
push
in
stc
fistl
sub
out
pushf
repz
aaa
fbld
rcrb
or
mov
clc
add
sbb
stc
js
inc
inc
cmp
xor
push
repnz
xchg
cmpl
outsb
leave
cs
lret
mov
push
pop
fiaddl
lea
daa
sub
cmpb
loope
sub
cmp
das
cmp
mov
xchg
test
dec
pushf
ds
jne
xor
xchg
mov
aas
mov
aas
push
arpl
cmp
repnz
and
ja
sub
jno
faddl
pop
std
fldcw
pop
add
ljmp
lcallw
dec
repz
movsl
ret
adc
lret
pusha
mov
aad
jnp
mov
imul
pop
ja
mov
cmp
dec
mov
loopne
ficompl
sbb
xchg
test
fstpt
mov
dec
int
add
jge
sbb
dec
jp
mulb
subb
xchg
repz
les
jns
ljmp
and
dec
xchg
jae
rorb
sub
mov
call
push
pop
rorl
stos
gs
emms
or
jo
mov
cmp
mov
adc
push
insl
xchg
stos
jo
js
cli
jecxz
ljmp
in
xchg
xor
inc
sbb
jecxz,pn
and
inc
jp
sbb
xchg
xor
pop
sti
jo
push
and
push
push
jbe
inc
pop
inc
loopne
mov
sti
cmpb
sbb
loopne
fcomps
push
mov
dec
out
xorb
xor
hlt
inc
enter
inc
sbb
push
aam
cmp
mov
xor
xchg
push
ret
push
outsb
lcall
sbb
mov
leave
lcall
push
mov
sarl
fsubr
mov
xchg
inc
adc
pop
adc
sti
enter
xchg
loopne
ret
xor
in
movsb
sub
out
loopne
jno
js
stc
neg
imul
pusha
adc
dec
dec
pop
test
xor
shr
and
lock
lods
fildll
repnz
ds
ss
cs
jno
loopne
popa
ret
lods
mov
fs
in
js
sub
notb
jae
rorb
in
rorb
in
push
lods
mov
xchg
pop
adcl
pop
lret
into
pop
scas
std
loope
jo
mov
and
xor
icebp
mov
mov
movsl
movl
xchg
sub
sub
push
pop
jno
daa
loop
mov
mov
fisubl
mov
jnp
lret
inc
or
dec
mov
leave
fdivs
sub
arpl
add
cmp
cmpsl
dec
cmpsl
js
jnp
push
cmp
jae
stc
pop
lahf
cmp
mov
hlt
or
and
cltd
push
mov
mov
fsubl
push
les
rcl
je
push
std
clc
cmp
fiaddl
mov
mov
inc
add
outsb
adc
jg,pt
dec
int3
mov
dec
xor
pushf
pop
jb
pop
mov
les
mov
loop
push
push
add
inc
lods
xchg
push
popa
xchg
cs
dec
outsb
or
fildll
lret
xor
cwtl
dec
adc
lods
mov
push
mov
cmc
xchg
je
shrl
sahf
ja
or
test
stc
xchg
rcrl
push
mov
inc
sbbb
mov
pop
push
negl
add
cmp
lock
push
popa
arpl
pop
cli
test
or
sbb
add
rorb
loop
mov
pop
cwtl
bound
movsl
pop
inc
das
in
xchg
mov
ss
mov
lock
movl
sub
std
pusha
mov
push
lea
leave
push
sub
mov
and
jmp
dec
addb
sbb
stos
xchg
sub
dec
out
push
jecxz
sub
mov
cmpsl
pop
stc
inc
iret
in
pop
fcoms
ror
or
xor
pop
rcrb
lds
dec
mov
fisubrl
scas
mov
mov
cwtl
jo
lret
mov
jne
and
jg
test
repz
into
dec
lahf
cmpsb
inc
imul
fs
mov
jecxz
pop
in
lcall
mov
adc
adc
clc
and
xor
mov
sub
rcll
je
jecxz
or
xor
push
adcl
and
sub
inc
adc
jns
and
dec
negb
loope,pt
mov
cmp
adcl
es
push
jnp
xor
inc
pop
shrl
cmp
lds
fdivrl
cmpsl
mov
imul
push
push
stos
push
aam
es
dec
xor
cmp
and
mov
roll
push
inc
jmp
lds
push
std
ret
mov
jp
add
stos
mov
test
daa
ss
inc
xchg
mov
mov
sbb
jg
cmp
cmp
sbb
cwtl
or
lods
and
jg
in
imul
stc
cltd
cmp
lods
repnz
mov
dec
cli
rcll
pop
sub
push
add
aam
stos
hlt
and
sbb
loopne
xor
lods
add
sahf
clc
or
lret
jae
or
pop
push
sub
unpcklps
rclb
rcll
inc
push
shlb
pop
mov
push
pushl
dec
mov
jo
sbb
and
xor
and
idivb
lds
in
sbb
xor
mov
icebp
jmp
mov
mov
pop
mov
fimuls
cmp
fbstp
imul
in
adcb
mov
daa
jl
cmp
push
pop
movsb
ljmp
lds
adc
xchg
shll
lcall
mov
mov
mov
int3
test
pop
dec
cs
adc
out
lock
jb
jbe
in
out
cld
popa
pop
inc
pop
and
inc
add
in
into
xchg
roll
movsl
rorb
xor
das
cld
jmp
add
into
mov
mov
cmpsb
mov
outsb
fadd
inc
pop
xchg
idivl
lret
or
jmp
lret
mov
cmp
cmp
inc
xchg
mov
jne
or
mov
and
mov
pusha
clc
loope
addr16
ret
cmp
sub
cmp
subb
push
sub
rcr
dec
inc
add
leave
icebp
das
adc
mov
mov
push
movsl
adc
sub
cld
push
or
enter
test
jbe
mov
mov
test
or
add
ja
js
inc
pop
pop
loopne
sub
xchg
cltd
es
and
mov
fnsave
scas
cmp
push
add
mov
ja
fs
cmp
adc
shrb
cmc
mov
jl
sbb
andl
adc
cmp
cmp
les
insb
mov
lahf
pop
movsl
mov
into
icebp
cmp
add
mov
sub
jb
jnp
push
cmp
xor
mov
mov
inc
dec
vmovaps
jle
xchg
jns
out
or
inc
adc
rcr
les
mov
dec
jmp
negb
test
pop
push
sub
rclb
mov
cmp
xchg
rcr
imul
ss
sub
and
sub
inc
jmp
adc
push
shrl
mov
lds
movsl
cs
pop
int
repz
in
sahf
mov
scas
mov
adc
jecxz
dec
inc
fnstenv
cld
rorl
push
mov
nop
jg
sbb
lods
iret
imul
push
aad
jne
jbe
insb
in
adc
jae
jmp
repz
out
add
pop
push
scas
push
pop
imul
dec
xor
popf
mov
lods
jno,pn
stc
sbb
xor
dec
inc
pop
scas
mov
sub
int3
mov
jmp
outsb
and
scas
mov
jnp
push
add
mov
insb
popa
xor
xchg
lods
out
inc
aaa
sbb
stos
bnd
pop
inc
and
rcll
fcoml
addr16
bound
sarb
jns
les
cmp
cmp
xor
fsubl
adc
xor
cli
cwtl
add
sub
js
iret
scas
pop
push
push
dec
mov
js
and
xor
inc
call
pop
stos
fistl
pop
jg
inc
loopne
cs
xlat
iret
dec
cmpsb
fst
add
fisttpl
or
dec
movsl
es
sbb
repz
push
mov
shll
sti
lsl
icebp
mov
test
fiaddl
push
cmp
cmp
es
cmp
std
div
in
and
loopne
jmp
mov
lret
incl
iret
mov
fnsave
mov
std
xorl
mov
add
mov
into
xor
lcall
fwait
adc
fwait
es
and
aas
jo
lret
cmp
sbb
mov
cmp
aaa
or
aas
mov
mov
mov
pop
inc
mov
out
ficoms
xchg
arpl
mov
jecxz,pn
sub
ret
in
push
xor
imul
adc
sahf
lcall
iret
and
aam
xor
test
xchg
xchg
jg
adc
xor
out
mov
mov
and
outsl
je
push
or
jne
mov
mov
sub
mov
push
mov
fwait
cltd
out
add
xor
pop
call
fidivrs
jge
dec
pop
icebp
inc
add
insl
inc
push
scas
leave
leave
adc
cmp
out
out
jp
or
add
sub
mov
pop
push
mov
sbb
sahf
fwait
sahf
les
ss
inc
ljmp
add
mov
lcall
adc
xchg
popa
sub
shlb
dec
je
into
test
roll
out
adc
loope
xor
sahf
pusha
push
or
inc
scas
dec
push
lahf
cld
in
jne
in
mov
jns
mov
stos
mov
mov
inc
loopne
push
sub
mov
out
and
mov
pop
mov
pop
pop
push
movsl
mov
lds
sub
out
mov
lahf
and
mov
shrb
push
aaa
lret
sub
mov
xlat
cmp
or
cld
arpl
nop
xchg
fnstsw
leavew
inc
push
xor
cmpb
daa
rcrl
out
nop
cmp
mov
push
sahf
mov
rorl
adc
mov
push
pop
shll
shlb
clc
sub
xchg
mull
push
mov
add
addl
mov
xor
pop
movsb
xchg
insl
lock
pop
sbb
in
ret
jnp
mov
dec
pop
shlb
test
pop
sbb
jmp
icebp
data16
imul
sub
jecxz
fistps
adc
jne
xchg
push
insb
fnsave
push
mov
lods
or
adc
mov
popa
push
sub
je
ret
imul
imul
aad
or
xchg
adc
cmp
xor
xor
adc
pop
sbb
jo
cmp
xchg
imul
repz
movsb
jns
lock
dec
cmp
loopne
pop
data16
push
xor
sbb
sar
in
or
mov
xchg
jb
dec
sbb
insb
inc
jb
mov
xchg
call
insb
rcrb
or
cmp
push
cmp
push
mov
xchg
insl
jmp
inc
inc
sarb
call
lods
mov
add
inc
sti
xlat
lock
mov
xor
shr
in
cmp
xor
xchg
leave
ret
add
cmpsl
popf
sub
outsb
out
lea
adc
out
jnp
mov
xor
jmp
sarb
scas
xchg
in
aam
nop
mov
adc
out
stos
fcompl
adc
or
xor
push
or
aaa
fwait
push
push
insl
lret
mov
inc
jo
add
mov
adc
xchg
aad
jbe
in
frstor
repz
jmp
dec
and
aas
lret
push
ret
jmp
push
cwtl
addr16
in
adc
or
repz
repnz
ficoml
stc
xchg
lret
jmp
mov
fwait
xchg
lcall
or
out
mov
cld
lret
sub
cmp
push
sbb
pop
pop
movsl
jle
cs
int3
and
data16
out
sbb
add
push
add
sub
out
jb
jne
insl
pop
and
stc
dec
in
sarl
lret
jecxz
lock
mov
adc
lods
out
leave
fs
sbb
movsl
xor
pop
cmp
loopne
aaa
mov
pop
cs
lahf
dec
cmp
sub
and
mov
jb
push
popa
push
push
sub
inc
mov
cmp
fwait
sti
or
sar
arpl
mov
push
adc
xchg
stos
cmpsl
ds
mov
and
xchg
ds
cli
mov
xchg
push
or
adc
mov
push
inc
pushf
daa
test
insb
xor
cmp
sub
or
add
lods
adc
lret
mov
es
xchg
out
repnz
dec
cmp
add
fmuls
ja
xor
or
loop
mov
fsub
repz
aas
push
or
inc
mov
mov
xchg
test
xchg
xor
cwtl
in
aaa
mov
inc
shll
mov
push
aad
sub
in
add
xchg
add
cmp
push
mov
xchg
cmp
dec
sarb
and
int
dec
jmp
xchg
and
dec
dec
inc
lods
adc
aaa
or
loop
sub
stos
ret
sbb
jmp
shrb
cmp
mov
js
pusha
xchg
mov
pop
mov
pushf
repz
add
std
push
cwtl
adc
sub
jecxz
push
dec
arpl
cld
testl
and
test
std
cld
or
lret
in
insb
sub
jle
push
fs
mov
and
ds
xchg
pushf
pop
mov
outsl
into
mov
push
mov
adc
mov
mov
sti
pop
push
arpl
sarb
cli
ficomps
shl
jg
add
bound
movlps
repnz
pop
pop
in
and
inc
xlat
pop
sbb
outsb
orb
int
lcall
add
push
pop
rcll
cmp
sub
insb
add
insb
iret
loop
dec
add
stos
je
adc
daa
inc
add
pop
int3
mov
mov
call
movsl
out
ss
inc
in
in
cld
jmp
lods
jbe
in
lret
adc
pop
pop
mov
xlat
mov
rcrl
xchg
into
xor
adc
inc
shll
mov
aam
je
fiadds
cmpsb
es
jae
std
sbb
lock
sbb
and
scas
mov
add
push
mov
pusha
es
std
fsts
aad
mov
int
mov
or
xor
in
jge
mov
mov
push
fs
fildl
sub
inc
push
aas
sbbl
or
leave
jne
ja
mov
mov
cltd
sbb
roll
jp
out
push
push
ror
inc
sahf
dec
pop
add
scas
jle
xchg
cli
mov
fldl
shrl
pop
popl
hlt
mov
cmc
mov
mov
seta
add
shll
pop
push
aaa
fldenv
testl
add
shrl
inc
adc
mov
cltd
xor
les
pop
mov
inc
aam
sbb
inc
inc
or
xorb
xchg
in
sarb
test
push
std
data16
les
test
imul
inc
mov
cmp
popf
jb
adc
or
out
push
ljmp
add
lock
imul
or
jle
inc
frstor
xchg
call
in
dec
mov
jge
adc
fisubl
stc
insb
jo
push
out
adc
lret
daa
leave
pop
data16
notb
and
movsb
lcall
ss
mov
mov
mov
sub
repnz
mov
mov
push
hlt
pop
cmpsb
push
mov
mov
pop
loope
mov
mov
ret
gs
and
inc
adc
jb
lea
cld
sub
daa
xchg
stos
dec
in
adc
jbe
aas
adc
jno
movsb
lret
and
mov
mov
or
mov
and
pop
sub
enter
pop
sahf
jne
push
xchg
mov
mov
sub
mov
adc
jle
mov
push
cs
ret
out
mov
je
iret
push
inc
dec
dec
add
or
adc
fstpl
rcll
dec
or
mov
cmpl
and
cmpb
or
cmp
lea
movsl
add
or
xchg
jbe
fs
insl
idivb
and
clc
mov
adc
out
in
cmpb
inc
mov
mov
lret
dec
cmp
imul
pop
mov
pushl
int3
int3
rcrb
ds
adc
sub
pandn
lods
add
mov
sbb
push
daa
ja
pop
mov
pop
outsb
leave
lret
shr
dec
inc
add
jo
insb
pop
xchg
popa
cmp
roll
enter
std
pop
arpl
cs
shlb
mov
push
call
fnstenv
shlb
dec
cwtl
mov
push
cli
lcall
inc
and
mov
cmpb
pop
sub
xor
push
pop
jle
jecxz
ror
push
ret
les
mov
jmp
loopne
jecxz
push
shr
xchg
rol
add
and
subb
movsb
push
adc
add
and
pop
in
mov
pop
push
test
add
push
jp
in
push
pop
fcmovu
mov
daa
push
push
mov
mov
dec
add
xor
push
xor
mov
cmpb
pop
xchg
imul
mov
and
mov
or
push
ss
add
out
loop
lods
iret
mov
pushf
and
lds
repz
pushf
jno
je
pop
sub
jp
xchg
mov
mov
stc
icebp
aad
or
mov
xchg
mov
mov
gs
shrb
outsb
dec
adc
shrl
xchg
mov
divb
loope
iret
push
add
loop
lea
jecxz
mov
jmp
andb
outsl
xchg
xchg
or
inc
popf
cmp
push
cmpsb
inc
jnp
push
pop
xchg
fcoms
fnstsw
ret
lods
add
mov
sarb
insb
fs
repz
inc
lret
adc
sub
dec
and
jmp
enter
jno
add
cmpsb
fildll
adc
dec
push
push
mov
add
stc
jp
movsb
adc
mov
into
filds
in
stos
ja,pt
cmp
mov
lcall
cmp
sub
push
leave
sbb
xor
pop
push
out
lods
dec
sbb
in
into
leave
inc
xorl
subb
push
imul
xor
test
and
enter
adc
jecxz
iret
outsl
mov
cmp
dec
pop
push
add
scas
outsl
shll
repnz
rorb
sub
xor
sbb
add
dec
and
test
popf
sbb
test
stc
aaa
sti
pop
sub
iret
xchg
adc
inc
cmp
clc
push
testl
fcompl
sub
scas
outsb
xchg
mov
jnp
daa
int3
inc
and
data16
dec
mov
adcl
xor
stc
dec
mov
push
xor
add
outsl
out
xchg
add
inc
mov
sub
jo
adc
outsb
std
xchg
add
sbbl
or
mov
lahf
pushf
lret
ss
test
pop
loope
das
shlb
pop
ficomps
andl
mov
dec
ljmp
daa
and
xchg
mov
pop
ds
aam
push
or
jl
mov
fistpll
das
int
inc
xor
cwtl
fstl
mov
push
imul
shrl
add
sbb
cmpsb
jbe
mov
ja
jns
mov
inc
jb
jb
andb
sbb
xchg
mulb
arpl
lret
in
pop
mov
rol
movsl
cmp
popa
push
or
dec
hlt
and
xlat
or
jns
push
mov
lret
or
mul
out
mov
pop
out
sbb
xchg
push
out
xor
cmc
fistl
dec
xchg
rclb
sbb
jg
sbb
in
mov
enter
mov
test
je
aas
sahf
fistps
loopne
and
jmp
and
mov
sbbb
scas
js
or
addl
xchg
push
sbb
adc
js
out
and
test
sbb
mov
dec
sub
inc
add
mov
loopne
gs
xchg
and
roll
rcrb
push
mov
out
inc
push
test
pop
fwait
add
mov
loope
fisttpll
gs
ss
loopne
fstpl
dec
dec
push
imul
mov
push
aaa
and
in
mov
sbb
loop
xor
push
xor
cltd
mov
xor
ds
jmp
xchg
jno
cmpsl
mov
insb
sub
or
repz
mov
inc
pop
and
cmp
pop
stos
mov
cmp
mov
adc
cmp
cwtl
push
xor
out
jg
aad
icebp
ljmp
into
and
arpl
cmp
movsb
xchg
out
sti
xchg
or
repnz
icebp
repz
jge
sbb
imul
push
mov
or
and
xchg
dec
ret
mov
mov
jns
mov
and
add
mov
inc
stc
cwtl
add
loopne
mov
pop
repz
xor
mov
xchg
in
mov
dec
dec
aad
nop
cltd
sub
and
pop
adc
aaa
cmp
stos
stos
test
arpl
mov
and
add
and
pop
ss
aad
mov
shll
sbb
push
adc
jl
sbb
push
xor
imul
cmpsb
jo
call
test
repnz
cmp
mov
mov
repnz
cltd
xor
adc
jb
dec
inc
sbb
lret
inc
fistpl
or
ret
push
adc
sbb
bound
dec
jb
mov
pushw
cmp
dec
and
iret
mov
loope
cmc
cmp
fdivs
dec
js
xor
adc
repnz
or
in
leave
xor
cmp
test
cld
popf
iret
push
outsl
mov
out
pop
subl
xor
clc
mov
adc
mov
or
xchg
xchg
push
iret
mov
in
adc
cs
fisubl
jo
push
jl
cmpsl
add
rorb
and
adc
cmp
hlt
lods
mov
cwtl
jb
xchg
jg
mov
and
xor
or
xchg
dec
shrl
ja
icebp
cmp
mov
movsb
daa
test
push
inc
loop
add
mov
pop
and
scas
or
push
lds
stos
into
dec
cmpsb
call
or
cmp
xchg
mov
or
mov
mov
bound
inc
jecxz
xor
fcmovnu
arpl
jns
dec
es
jecxz
push
inc
cltd
sbb
push
inc
mov
lahf
cltd
fldenv
jo
add
add
insb
xorb
rep
repnz
loope
pop
mov
dec
pusha
sahf
mov
and
push
jo
addr16
sahf
and
shrl
lret
mov
mov
adc
push
sbb
and
gs
sub
dec
jnp
jo
push
xlat
aaa
sub
mov
mov
pop
pop
stos
inc
mov
sub
or
or
lods
in
jno
xor
dec
test
icebp
mov
rolb
addr16
out
fbld
ret
lea
inc
jecxz
icebp
dec
mov
push
popa
push
xchg
jnp
jl
push
loopne
sbb
push
xor
sbb
xchg
cmp
arpl
push
dec
pop
push
out
popf
pop
addr16
aaa
stc
imul
ret
xchg
test
cmp
xchg
ret
aaa
outsb
out
rol
sub
mov
pop
mov
idivb
cs
mov
mov
push
nop
lahf
rcl
loopne
inc
vmread
mov
mov
adc
pop
pop
push
je
aaa
shl
push
push
ljmp
adc
jp
or
andb
adc
mov
pop
test
int3
leave
jae
jnp
sbb
jo
xlat
rcrb
sub
mov
pop
leave
arpl
cmp
ss
cmp
in
jnp
aad
repz
or
das
xlat
sbb
jmp
sti
int3
push
pop
cmp
pop
dec
orb
xchg
push
pop
xor
jb
imul
push
push
xor
mov
xchg
cmp
das
cmp
fwait
addr16
bound
push
jmp
fstl
leave
adcl
sbb
icebp
cmpsb
add
fcomi
inc
pop
jne
popa
out
adc
popf
cmp
out
mov
dec
fisubl
pusha
adcl
or
les
push
adc
lret
sbb
jp
cltd
rcr
push
mov
mov
mov
in
scas
cmp
mov
fcmovb
push
cmpsb
cmp
popf
rcll
mov
xor
loope
dec
ss
test
sbb
fsubrp
or
mov
dec
int3
imul
jnp
mov
xor
inc
mov
mov
stos
inc
dec
inc
and
fsubp
xchg
shlb
lahf
and
rclb
pop
mov
jbe
ret
test
dec
jno
das
xor
mov
pop
push
ret
pop
aad
adc
loope
pop
pop
jl
xchg
mov
cmpsl
and
jmp
mov
daa
cltd
rclb
xchg
xchg
add
lds
mov
xorl
das
notb
das
scas
fnstenv
adc
test
enter
adc
loop
repnz
push
push
lock
mov
iret
pmulhw
jno
or
xor
or
in
clc
call
cmp
add
repnz
fucomip
in
adc
mov
ficomps
push
in
cld
jmp
jbe
stos
sbb
sbbb
push
cli
repz
xor
mov
scas
test
or
mov
dec
or
ds
jnp
dec
insb
xchg
lds
adc
popf
test
lods
adc
and
jecxz
lock
mov
mov
mov
cmp
out
mov
daa
jne
iret
pop
imul
push
dec
xchg
lock
mov
scas
das
ljmp
pushf
pop
out
jge
inc
jge
mov
in
inc
std
jmp
add
mov
xchg
pop
stos
mov
dec
push
push
movsb
xor
data16
ds
add
and
scas
inc
out
dec
push
or
es
xor
es
push
lahf
test
pop
add
sbb
mov
inc
mov
mov
ret
cs
sbbl
shll
xchg
lea
lahf
in
add
xchg
cmp
lods
sub
fidivrl
or
loop
inc
dec
enter
js
js
mov
inc
or
dec
cmc
sbb
lods
mov
rorl
add
adc
aad
out
shl
lock
xchg
pop
push
lret
inc
int3
xchg
add
pop
shrb
enter
imul
dec
gs
sub
into
lods
xchg
dec
ror
mov
push
xchg
fwait
dec
sbb
pop
inc
das
test
in
sbb
fnstsw
mov
lods
addr16
inc
sarb
xchg
faddl
js
insl
add
add
sub
mov
ficoml
hlt
xor
popf
inc
lds
divb
sbb
dec
cli
cmc
insl
xor
or
je
fs
incl
outsl
movsb
out
in
call
dec
gs
pusha
push
je
mov
out
in
or
pop
add
popa
sti
scas
in
jg
mov
mov
gs
in
mov
pop
pop
adc
add
or
daa
out
inc
mov
push
adc
sbb
loope
negb
push
pop
clc
out
insw
sub
int
cmp
lcall
mov
jle
push
mov
sbb
mov
pop
push
sbb
push
loop
outsl
jns
sbb
xchg
mov
cmp
push
xlat
cmc
hlt
push
dec
cltd
ds
pop
mov
imul
inc
and
std
cwtl
push
jbe
mov
lcall
pop
and
jl
icebp
cmp
inc
fwait
mov
dec
jmp
pop
scas
pop
adcl
cmpsl
mov
popf
shrl
sub
push
or
subb
jle
or
and
jo
dec
sub
sar
popf
lret
mov
cmp
or
rcrl
movsl
fmulp
push
jb
xbegin
test
std
daa
outsb
in
and
cwtl
and
jge
and
fldt
lods
sarb
xor
push
mov
xchg
pop
jnp
stos
hlt
adcb
add
pop
loopne
push
sub
lret
in
aam
cmp
pusha
imul
mov
es
clc
push
popf
xchg
xor
pushf
xor
mov
out
movsl
dec
mov
sub
repz
adc
adc
in
inc
cmp
pop
and
jns
fstp
loope
xor
mov
cmpsl
jne
sub
xchg
xor
leave
xor
mov
mov
js
cmp
repz
test
cmpl
in
out
mov
dec
fldl
adc
cmpb
clc
xchg
fptan
add
xchg
mov
ret
test
outsb
jp
xlat
clc
inc
in
jne
pop
add
sub
in
push
lret
dec
pop
dec
cmpsl
das
movsl
enter
in
dec
addb
js
cmp
aas
cli
out
xor
fdivr
cwtl
jns
inc
shlb
rclb
lods
outsb
out
add
push
hlt
addr16
cmp
stos
bound
cld
dec
dec
jmp
xchg
stos
dec
mov
lret
sub
push
je
js
out
lret
test
addr16
mov
std
cmp
call
dec
imul
fstpt
push
pop
jb
pop
popa
daa
rcrb
inc
push
cmp
adc
repnz
dec
mov
in
adc
xlat
fldenv
pop
ret
int3
jbe
cld
lods
mov
insl
or
dec
jp
sub
pop
dec
rol
ret
sysexit
dec
je
xchg
pop
push
test
or
sarl
int
aad
xchg
test
repnz
xchg
sub
xchg
adc
repz
lock
loopne
rcrb
add
lods
call
xor
stos
clc
dec
lea
add
imul
jb
adc
stos
pop
pop
xchg
jnp
cmp
lds
xor
test
mov
gs
push
lods
adc
adc
or
rorl
ret
jge
data16
popa
js
push
mov
and
dec
cld
xor
ja
pop
aas
shlb
push
scas
mov
xchg
imulb
mov
mov
mov
mov
test
mov
sbb
inc
jns
lahf
mov
cmp
mov
sbb
inc
xor
inc
sub
and
adc
movntq
mov
fdecstp
pushf
loopne
mov
push
cmp
adc
fcmovnbe
ds
inc
and
and
ja
int
sub
dec
sub
fs
lods
movsl
stos
jne
push
or
sub
jbe
loope
out
inc
inc
mov
pop
mov
mov
cmp
and
add
cmp
hlt
imul
enter
xchg
cld
and
cmp
int3
sbb
iret
or
fbld
or
mov
dec
pusha
push
adc
mov
nop
lods
ds
adc
jbe
fdivs
loop
shll
gs
push
fnstcw
sub
add
dec
adc
jae
cmp
xor
dec
ja
mov
insl
push
sbb
rsm
cmp
mov
hlt
das
dec
int
popf
cmp
lods
loop
pop
push
pop
sti
cs
dec
push
dec
dec
rcl
push
xchg
adc
lods
jnp
loope
movsl
lahf
xchg
or
jmp
test
dec
cmp
seta
push
push
out
dec
fstl
and
xchg
mov
inc
dec
clc
mov
cmc
lahf
aam
je
mov
pop
rcrl
mov
subl
sub
loopne
das
push
or
out
loop
xchg
pop
insl
mov
cmpsb
pop
fdivl
repnz
arpl
pop
cld
jl
ja
cli
hlt
cmp
dec
pop
call
leave
cmp
ret
shll
iret
incl
pop
cld
clc
pop
leave
daa
mov
mov
popa
repnz
sti
mov
daa
ja
or
and
scas
xor
cli
pop
and
dec
loopne
lahf
mov
arpl
nop
fwait
dec
dec
add
mov
sbb
dec
xor
sub
loopne
test
push
arpl
xchg
scas
dec
push
stos
xchg
cwtl
xchg
inc
sub
outsb
and
xchg
lret
jnp
aad
pop
pop
adc
xchg
sub
adc
subb
pop
and
rol
loop
fwait
or
and
int
das
mov
mov
aas
adc
andb
lcall
or
hlt
mov
or
into
icebp
mov
or
dec
out
ljmp
inc
incl
add
mov
jbe
vcmpps
and
mov
sbb
xchg
stos
addb
sub
out
and
pop
sbb
rclb
adc
idivl
roll
jmp
out
cmp
imul
pop
inc
imul
and
rcrb
xadd
and
mov
pop
push
sti
sub
mov
xor
cmp
inc
pop
mov
mov
push
adc
out
mov
push
mov
int3
cmp
stos
push
pop
mov
pop
fdiv
gs
mov
mov
ret
push
ret
lock
stos
lods
mov
dec
cld
movsb
ljmp
sbb
je
divps
inc
push
jg
inc
push
or
insb
adc
jmp
stc
mov
jne
sti
sub
xchg
scas
sub
push
adc
adc
mov
bound
ja
push
mov
addb
pop
test
sbb
lods
in
xchg
push
push
mov
popf
ret
notb
mov
sub
xchg
xorb
jns
data16
inc
sbb
push
adc
out
add
lods
adc
ror
jmp
lcall
lcall
into
cli
and
sbb
mov
or
arpl
lock
lds
push
ss
sub
aas
int3
jae
and
sahf
stos
push
mov
inc
cmp
rol
push
mov
dec
sbb
cmpsb
mov
push
mov
jmp
dec
push
ja
movsl
jne
pop
xor
mov
inc
sub
stos
es
xor
or
insl
addr16
push
push
stc
adc
outsb
and
les
sub
mov
testb
test
pop
xchg
clc
dec
pop
xchg
cmpsb
add
stos
ret
xor
divb
cmp
dec
inc
xor
loope
push
and
pop
jecxz
or
movsb
stos
and
cltd
stos
adc
lahf
cmp
je
fiadds
ret
cmp
sub
mov
add
int
shrl
sub
ljmp
pcmpeqb
repz
rcrb
add
cmp
stos
and
mov
neg
cwtl
push
cmc
test
sub
mov
fwait
hlt
rorb
inc
jnp
pop
fnstsw
aad
sahf
mov
mov
int
adc
dec
and
push
pop
bound
ds
mov
push
xlat
push
sbb
mov
sbb
mov
fdivs
into
or
mov
push
push
das
sub
dec
mov
in
leave
sbb
imul
cmpl
pop
stos
sahf
mov
dec
push
dec
mov
mov
fs
sub
jnp
jle
cmp
xchg
xchg
aaa
mov
aas
xor
insl
shlb
cli
addr16
clc
xchg
pushf
mov
xchg
push
in
jno
mov
push
mov
cltd
add
imul
es
or
push
sbb
cmpsl
loopne
lcall
jmp
es
addr16
out
test
stos
adc
fs
jae
fcmovnu
lret
popa
les
inc
inc
leave
ljmp
icebp
pusha
lahf
sbb
pop
pop
icebp
xchg
test
jno
add
outsl
flds
adc
loope
test
dec
in
mov
fcoml
rcll
or
mov
sub
sub
out
ljmp
scas
ret
jle
fsts
hlt
and
pop
popa
dec
enter
adc
cmpsl
mov
jp,pt
jge
sub
out
pushf
fmul
mov
aaa
push
push
jno
cwtl
push
ret
cs
pop
call
adc
cli
xchg
insb
cmc
and
call
xor
add
or
ja
dec
add
xor
out
call
sub
push
imul
lea
jo
push
addps
loope
insl
jne
sub
push
orb
aas
in
pusha
dec
pop
scas
iret
outsl
mov
push
addr16
dec
sub
faddl
cmp
out
lret
fbstp
sub
inc
xchg
push
pushf
dec
pop
or
icebp
push
inc
lcall
inc
shll
mov
cli
cmc
testl
push
cld
mov
and
je
jno
nop
movntps
mul
rorb
mov
cltd
add
cltd
notl
push
cmp
cwtl
lret
sbb
fsts
fisttps
adc
out
inc
fisttpll
out
pop
push
cltd
jmp
aaa
stc
dec
cmp
cmp
xor
stc
fxch
std
adc
sbb
jne
and
loop
rclw
scas
xchg
int
cmpsl
mov
cmp
pop
hlt
rcl
mov
dec
cmpsl
and
insb
ja
sahf
sbb
cld
adc
mov
std
push
js
lds
loope
fxch
cmp
mov
sub
xor
mov
jp
jns
loope
inc
sub
dec
mov
inc
xorl
insl
int
or
aad
sub
in
cmp
mov
sub
mov
lcall
xchg
mov
and
leave
sahf
insb
loop
repz
fidivrs
js
xchg
mov
aaa
mov
fldl
mov
add
repz
les
sti
lock
push
mov
xchg
mov
jecxz
jp
push
jnp
pushf
or
addr16
mov
adc
xchg
mov
push
dec
call
pop
mov
pop
push
jecxz,pt
lods
iret
sub
call
xor
adc
das
xchg
push
jecxz
subb
es
xchg
sub
cmp
add
loopne
in
push
flds
in
bound
call
outsl
jg
lods
xchg
inc
push
jns
dec
fcomps
dec
xlat
test
inc
pop
mov
jp
int
mov
push
int3
movsb
pop
std
das
leave
out
hlt
insb
mov
mov
and
aad
clc
pop
cmpsb
and
mov
dec
add
mov
outsl
dec
repnz
das
push
fistpll
aaa
popa
test
adc
sti
add
enter
idiv
aaa
inc
xchg
adc
jbe
dec
xor
push
in
xor
fxch
sti
lahf
xor
aad
enter
mov
xchg
push
cmp
pushf
fsubr
and
ja
stos
and
pop
pushf
call
mov
push
sub
cmp
scas
mov
testl
es
pop
add
pop
fsubp
insl
adc
int3
sub
ss
dec
addr16
cmpsb
andb
or
stos
dec
loop
push
test
adc
popf
cmp
loope
dec
lea
cwtl
dec
ds
and
jecxz
pop
and
ja
shl
aam
ds
inc
sar
mov
adc
jnp
cltd
add
sarb
int
xor
fisttpll
xor
jge
test
mov
mov
ljmp
xor
addl
outsb
sub
fyl2xp1
popa
cmpsb
ss
fcom
jge
std
dec
outsb
outsl
push
mov
testb
test
es
into
dec
stos
cmp
out
inc
mov
sbb
ja
xor
mov
or
test
and
adc
cli
cmpsb
shrb
inc
ret
xlat
lods
add
or
cwtl
sti
in
xchg
cwtl
insb
lret
cmp
mov
jecxz
nop
stc
mov
add
dec
jle
insl
xor
sub
mov
mov
test
scas
push
jns
mov
pop
adc
addr16
call
lds
inc
push
lret
dec
and
lret
shrb
or
lcall
pop
imul
cmp
ret
mov
xchg
add
ret
lcall
lret
xchg
mov
insb
test
out
push
adc
xchg
sbb
movsl
gs
cmp
mov
out
mov
mov
test
mov
mov
test
testb
test
mov
fbstp
mulps
mov
add
dec
nop
dec
sbb
pop
ljmp
popa
cmp
or
cmpl
popa
flds
fcompl
mov
jno
xor
divb
stc
jo
or
stos
or
rcrb
outsb
shrb
fbstp
sub
xchg
ss
mov
icebp
dec
adc
rcll
idivb
js
mov
in
dec
data16
in
sbb
lret
sub
movsb
cmovle
adc
inc
mull
call
push
dec
and
ficoms
popa
xor
jae
xor
rolb
lods
rolb
scas
pushf
loope
mov
cwtl
stc
lea
xchg
gs
cs
add
popf
add
mov
and
or
sbb
shlb
jno
gs
das
add
inc
or
pop
pusha
cmpsl
mov
lock
xor
insl
push
int
push
xchg
pop
mov
xchg
dec
jne
mov
sub
in
mov
call
mov
xor
cmpsl
push
pop
repnz
inc
fildll
mov
dec
insl
push
jnp
call
sbb
xchg
subl
pop
aam
xlat
push
pop
xchg
and
ficompl
out
ss
mov
dec
mov
cs
ss
mov
stc
ret
pop
and
push
add
in
sar
lret
xchg
jns
mov
dec
imul
pop
mov
cmp
jecxz
clc
pop
pushf
out
subl
in
loopne
mov
int
jl
pop
push
divb
aad
mov
addl
mov
or
imul
adc
xchg
pushf
add
xlat
call
into
mov
test
dec
outsb
adc
divb
add
fs
shll
xchg
pop
lods
mov
sub
mov
call
mov
mov
ret
call
mov
sarl
jnp
push
inc
mov
iret
dec
call
sbb
arpl
mov
adc
mov
fs
cld
leave
or
daa
dec
mov
lods
jmp
repz
dec
mov
cli
pop
jae
aas
inc
lds
jp
pop
pop
jne
jo
and
int
outsb
stos
cmp
fsubrp
inc
mov
push
clc
xor
insl
add
fidivl
jecxz
inc
xchg
arpl
sub
cmpsb
fdivrs
adc
sub
xchg
jge
adc
mov
sub
test
popa
repnz
fisubl
sub
mov
stos
xor
xchg
outsl
xchg
movsl
mov
hlt
cmp
jg
shrb
cmpsl
or
mov
std
pop
popf
push
inc
adc
push
adc
push
sbb
jge
repnz
push
or
or
cmp
movsl
loop
mov
ret
mov
stc
adcl
stos
xor
pop
dec
sub
mov
mov
xchg
xchg
lret
push
cs
cmpsb
mov
jl
jb
test
scas
adc
sahf
or
pop
cmp
in
std
sub
or
ret
jmp
addr16
addr16
pop
xchg
inc
or
ds
outsb
cmp
ds
dec
decb
mov
fildll
jl
movsb
push
sbb
aas
inc
ficompl
sbbl
xchg
popa
out
ds
sub
aaa
bound
pop
je
sti
stos
rorl
mov
repnz
adc
fisubs
adc
fs
or
sub
cmpsl
cmp
cmp
and
ret
mov
mov
int3
out
and
and
popa
push
jp
int
mov
fsubrl
testb
or
dec
lock
jno
test
jbe
pop
mov
add
lds
xor
and
hlt
daa
das
std
loop
mov
push
xchg
xor
add
lea
sbb
loop
rorl
inc
mov
mov
jecxz
nop
sub
fcoml
mov
shl
loope
or
adc
sub
movsl
mov
cltd
outsl
in
cmpsl
add
push
push
lods
jp
pop
fdivrs
repz
daa
or
test
mov
adc
sahf
int
outsb
fwait
unpckhps
jno
fcomp
dec
adc
movsl
inc
cli
icebp
push
push
dec
fiaddl
pop
imul
testl
daa
inc
scas
add
mov
mov
mov
push
jecxz
jae
fistps
gs
and
dec
in
dec
mov
pop
jle
movsl
dec
out
subl
pop
cmpb
js
sahf
jo
sub
adc
in
cmp
add
ffreep
and
ret
dec
cld
js
lock
cmpsb
in
shll
loop
jecxz
cmp
mov
mov
mov
shl
hlt
fstpl
loopne
mov
insb
loopne
mov
push
pop
mov
sbb
cmp
xchg
test
xor
jb
scas
push
enter
push
jge
and
pop
mov
lods
mov
gs
inc
or
mov
jb
outsl
and
out
int3
push
sbb
inc
enter
jae
jge
xchg
int
andl
mov
rorl
jmp
mov
fiadds
pop
inc
in
cltd
push
push
xchg
scas
mov
push
in
enter
jmp
or
mov
cmp
push
push
in
pop
or
sub
aas
jmp
ja
pop
negb
push
int3
push
aad
out
das
enter
mov
jle
add
fmull
xchg
ror
pop
movl
rcr
data16
cwtl
push
lret
addl
mov
pop
inc
xchg
push
aaa
sbb
push
mov
xlat
pop
xchg
jmp
cmp
shr
lock
ja
clc
repnz
mov
xor
sub
stos
add
fadds
daa
add
ret
push
dec
int3
xchg
mov
daa
mov
mov
loopne
cld
xchg
fwait
int3
xchg
or
in
punpckldq
inc
mov
push
push
aad
adc
cmp
mov
test
inc
loope
loope
fcom
lea
or
cmp
mov
or
pop
int
cmp
jne
pop
cmp
mov
int3
mov
rorl
xchg
int
lock
les
xchg
cld
leave
jns
pop
mov
and
pop
mov
xchg
inc
cmpsl
cwtl
ret
xadd
sbb
data16
int
mov
jp
sbb
push
je
in
out
xor
outsl
cld
rol
pop
add
mov
andl
mov
hlt
jg
mulb
dec
roll
lret
push
xchg
cmpsb
out
das
pop
xor
sbb
sub
shll
fadd
and
cmp
lcall
lds
mov
popf
cmp
push
adc
add
mov
cli
jnp
in
mov
mov
jns
int3
movsl
aas
mov
jmp
lret
adc
dec
cmp
pop
in
sbb
imul
add
lods
jns
shlb
adc
filds
outsb
pop
xor
das
add
pop
or
sbb
outsl
cmp
popf
adc
mov
add
push
adc
out
jbe
adc
stc
mov
jmp
pop
in
sub
aaa
cmp
shrl
add
push
sbb
ret
jmp
dec
les
add
movsb
nop
loop
jmp
lcall
inc
sub
sub
ret
aad
mov
and
jg
jecxz
jmp
adc
sub
mov
inc
arpl
mov
nop
inc
loop
xchg
adc
sarl
mov
test
daa
jmp
pusha
lret
fcompl
mov
mov
push
into
addb
xor
inc
adc
add
jae
jae
insb
inc
out
push
loop
sbb
cmp
sbb
mov
pop
push
cmp
testb
push
sbb
xor
rorl
mov
xor
pop
notb
mov
or
orb
push
xchg
cmpsb
mov
and
rcll
mov
les
mov
pop
mov
cmp
sub
fmull
mov
cmp
xor
xchg
mov
dec
lret
inc
push
cwtl
add
test
andb
in
mov
addr16
xor
psraw
pop
test
in
mov
inc
je
xor
add
lea
cmp
sar
pop
out
ret
aas
xor
adc
shlb
mov
adcb
popf
inc
pushf
xor
jl
pop
mov
pop
mov
adc
enter
mov
lods
and
pavgb
push
jmp
repz
das
in
adcb
stc
fistps
lds
mov
mov
mov
xor
imul
jge
mulb
hlt
mov
imul
mov
scas
mov
mov
fildll
das
rorb
add
jecxz
mov
fsubs
fldl2e
dec
jb
lahf
es
loope
mov
pop
out
sub
pop
insb
pop
int3
jge
dec
push
sbb
sbb
push
pop
in
xchg
cmp
pop
adc
xchg
maskmovq
push
nop
inc
mov
mov
dec
scas
and
andps
call
popf
mov
mov
pop
cmp
cmp
sbb
mov
jae
pushf
mov
std
cs
or
clc
xorl
clc
aam
push
mov
and
movb
inc
mov
out
ja
or
lcall
mov
outsl
dec
dec
icebp
mov
aaa
push
adc
sub
and
sbb
mov
arpl
add
push
jne
sub
push
jle
cmp
ds
ret
lret
and
cmpsb
roll
jg
xchg
push
mov
inc
sbb
stos
mov
sub
xor
jns
jg
push
push
jl
popa
push
mov
les
fsubp
in
mov
sbb
out
insl
es
mov
lds
lret
sub
nop
xor
repnz
faddl
jg
adc
inc
pop
loope
sub
lret
push
out
mov
ja
imul
and
lret
mov
xchg
int
lods
imul
cmp
ret
test
mov
jecxz
jns
xor
fdivl
cld
insb
add
ret
inc
mov
nop
lods
int
loop
cli
sahf
cmp
shlb
inc
in
out
aas
out
mov
jge
ret
sarb
inc
sub
lahf
mov
pop
xor
outsl
inc
pop
mov
mov
repnz
xchg
ja
sub
leave
xlat
scas
test
cltd
cld
sub
into
ja
ds
cmpsb
and
mov
leave
pop
inc
and
lods
divb
lcall
cmp
xchg
aas
shlb
jae
js
or
fsub
sub
fs
sbb
scas
sub
lret
and
std
mov
push
pop
adc
sbb
dec
add
outsl
cmp
adc
push
mov
das
stc
out
ljmp
sub
stc
je
pusha
xchg
sti
scas
xor
pop
loop
mov
lock
xchg
or
fcmovu
sbb
shrb
dec
scas
pop
lea
xor
pop
out
das
outsb
inc
fdivp
ficoms
aaa
xchg
or
pop
shll
inc
xlat
rolb
orb
push
test
mov
popf
out
jp
test
pusha
and
and
xchg
repnz
or
data16
test
add
mov
les
push
mov
stos
jmp
sub
cltd
push
pop
jg
insl
lods
leave
pushf
js
xor
add
js
scas
cmp
nop
jge
jno
mov
jno
imul
mov
ljmp
jmp
stos
cli
cmp
cld
das
jne
rcrl
or
or
sub
test
fisttps
fcomps
aad
push
dec
ror
sub
es
and
sbb
sub
inc
xor
xor
cmpsb
mov
mov
lea
fcoms
push
cltd
inc
iret
stos
movl
xchg
je
outsb
das
add
and
aad
xor
addr16
jns
and
jp
cmp
testb
push
loope
out
jmp
sti
rclb
aas
dec
add
jns
out
xchg
loop
out
push
popa
inc
xor
jo
leave
lahf
mov
fs
int3
xor
sub
dec
push
add
aas
jns
xchg
cmp
dec
cmp
dec
les
inc
xchg
popa
lret
pop
pushf
shrl
adc
fidivs
dec
and
and
sti
sbb
adc
mov
aaa
das
aad
fldl2t
imul
lods
jnp
mov
cmp
push
sub
add
and
mov
les
fcomi
outsb
xchg
ljmp
sub
pop
bound
stos
ret
pushf
clc
std
xchg
into
jg
add
jbe
test
adc
sbb
cmpsb
push
push
ljmp
sbb
xchg
cmp
inc
cmp
dec
push
loop
les
out
or
cld
enter
fcmovnbe
mov
pop
jp
and
test
jns
cmpsl
bound
xor
hlt
or
inc
shr
and
adc
xor
xor
xchg
cmp
jo
xor
pushf
mov
out
rcrb
sbb
mov
sbb
mov
cwtl
scas
mov
sub
sub
js
subb
adc
or
inc
push
and
pop
pop
fnstcw
push
sbb
and
jecxz
dec
dec
sbb
ja
pop
sub
pop
mov
sub
out
pushf
scas
adc
pop
inc
sbb
insb
jnp
mov
mov
sbb
sbb
mov
mov
sbb
adc
add
jne
push
enter
add
aad
inc
xorl
jbe
push
stc
idivl
push
loope
xchg
jo
ficompl
loop
adc
das
jno
and
cmpl
and
xor
jp,pn
xor
mov
cs
or
insb
enter
notl
sbb
enter
vcmpsd
fsubp
jl
mov
insb
pop
and
mov
push
push
push
test
sar
dec
lods
icebp
xor
xchg
add
frstor
out
and
xchg
scas
pop
jno
adc
or
insb
adc
ja
or
test
xchg
pop
pop
in
mov
or
jns
cwtl
fcompl
gs
mov
loop
cmp
mov
mov
ss
outsb
ret
push
arpl
fimull
cmp
mov
mov
in
sbb
inc
movswl
ss
pop
and
gs
je
sbb
mov
lea
xchg
add
mov
pop
xor
and
mov
inc
push
sbb
out
aam
int
cltd
and
jnp
loop
clc
xor
rcrb
call
dec
mov
inc
cmpsb
and
into
sub
and
adc
leave
test
pushl
mov
inc
cmp
aad
out
add
aam
and
jmp
cmc
hlt
or
push
mov
xchg
inc
or
sbb
add
icebp
cmp
xor
push
in
test
push
jno
pop
xlat
xor
sbb
push
out
push
xchg
aaa
sbb
dec
mov
sbb
outsl
sbb
inc
loope
test
xor
sbb
push
mov
inc
adcl
adc
leave
sub
dec
jecxz
or
adc
and
sub
jo
lret
ja
in
mov
and
out
lds
sub
lret
mulb
in
push
jmp
xor
pop
inc
xor
sub
movsl
adc
cwtl
adc
jno
cmc
subl
inc
sbb
pop
loope
repnz
mov
jnp
aam
pop
cmpsl
push
fsubl
push
mov
mov
mov
ret
shr
dec
pushf
xchg
pop
sahf
and
jecxz
fisttps
mov
dec
mov
mov
xchg
sbb
cmpsb
js
test
sbb
lea
add
outsb
xchg
out
clc
jle
mov
cld
gs
jg
aaa
roll
sub
jno
pop
aaa
cmp
insl
xor
sub
cli
push
xchg
pop
sbb
insl
push
test
pop
adc
cmp
pop
pop
jl
dec
stc
xorl
xchg
add
icebp
sbb
cmp
sub
sti
pop
pop
aas
sbb
pusha
fidivrl
jge
fdivp
sub
cmpsl
gs
pop
xor
call
xchg
lods
or
and
dec
inc
loop
mov
cmp
xchg
ret
arpl
bsr
adc
inc
mov
cli
arpl
xor
inc
mov
or
icebp
xor
sub
mov
and
xor
push
adc
xchg
loop
out
dec
push
popf
mov
and
and
test
push
mov
cmp
mov
dec
lods
mov
jp
cmpsl
ljmp
jecxz
jle
sub
sbb
cli
pop
sub
or
dec
mov
xchg
rcll
movsb
test
push
push
lods
data16
test
out
xchg
popa
xlat
sti
scas
outsb
popa
mov
mov
push
pop
push
lods
xor
cmp
mov
addr16
sub
push
addr16
mov
pop
or
xchg
xor
movsb
adc
xchg
sub
push
add
mov
jo
sbb
mov
fnsave
cmpb
stos
and
mov
pop
sar
roll
xor
dec
mov
push
adc
jb
jmp
lret
sarl
lret
mov
cmp
jne
mov
or
dec
cmp
push
jns
cmpsb
leave
cmpb
pop
push
outsl
push
jne
gs
fmuls
sbb
mov
in
popf
test
aas
push
mov
mov
test
jge
xor
or
xchg
sbb
pop
imul
fimull
xchg
cs
mov
push
xor
loope
mov
lret
enter
sub
cltd
addr16
mov
xchg
testl
mov
sarl
mov
sub
xchg
jb
ret
push
pop
add
sbb
ret
imul
sti
add
fcmovu
xor
pop
push
xchg
sar
popa
xlat
fs
pop
das
pusha
or
dec
in
stos
sub
push
movsl
pop
inc
leave
jecxz
inc
lds
pop
data16
lret
inc
mov
pop
std
fwait
sbb
push
shlb
mov
idivl
repnz
sbb
jns
and
push
jg
jae
aas
push
fucom
ds
ss
xor
arpl
test
in
dec
mov
mov
das
fistpl
pop
mov
jge
adc
adc
mov
aaa
jae
push
xlat
xor
shl
ja
loopne
ret
out
sub
mov
add
std
sbb
add
scas
xor
je
mov
xchg
popa
push
mov
inc
mov
repz
test
or
insb
jecxz
pop
cmp
out
lret
push
imul
mov
mov
cmp
add
fs
xchg
cmc
hlt
add
jae
icebp
movsl
gs
mov
pop
popf
or
clc
ja
data16
jb
xchg
mov
or
cmp
bound
add
mov
movsb
sub
dec
mov
icebp
push
int3
xor
aaa
push
addr16
pop
daa
push
lods
push
jns
int3
adcb
push
pop
out
xchg
rcrb
pop
add
jbe
in
jbe
adc
mov
sti
lret
push
sub
loope
or
pusha
aad
popa
inc
sbb
stos
cmpsl
inc
popa
add
pop
adc
subb
sub
jle
sbb
or
push
repnz
mov
add
jg
lcall
mov
fxch
fistpl
sbb
sub
lret
jle
add
pusha
cmpsl
sub
pop
nop
xchg
inc
mov
test
jo
xchg
minps
hlt
pop
sub
sub
add
cmpsl
test
enter
cmp
add
icebp
fcmovu
inc
xchg
sub
mov
pusha
fstl
lcall
and
loope
js
cmp
in
add
mov
pop
push
fisubl
inc
jle
xlat
xor
nop
in
test
mov
test
inc
and
pop
cmp
mov
fstps
roll
add
sub
mov
mov
mov
stos
cltd
mov
xchg
lret
xchg
loop
icebp
xchg
rcl
das
pop
cmp
xor
loope
ss
push
lahf
or
sub
mov
inc
push
mov
pop
loopne
jp
rolb
mov
imul
or
push
sbb
adc
mov
dec
ret
mov
fcompl
inc
sahf
fisttpl
hlt
xor
xor
std
adc
adc
xchg
dec
mov
push
aas
cmp
sbb
loope
jo
or
sub
dec
subl
shlb
push
xor
push
mov
sub
ss
adc
test
testl
mov
iret
and
xchg
xchg
or
out
jmp
lret
and
hlt
jnp
xchg
adc
mov
out
add
mov
lods
and
jo
es
outsl
hlt
out
lret
mov
lea
jl
jge,pn
in
leave
xor
or
shrl
adc
jno
or
testb
movsl
add
fwait
cmp
rcll
ret
push
out
enter
out
adc
xor
jae
sub
cmp
xor
xchg
out
jae
adc
jbe
dec
jp
pop
jb
addr16
xchg
jb
cs
sbb
fs
mov
push
into
setns
jmp
data16
jb
popf
stos
insb
test
xor
and
or
lret
add
xor
cmc
test
push
outsb
in
lock
cs
jbe
jge
or
les
mov
fdivr
jp
lret
loop
pushf
into
es
cmpsb
inc
out
cmc
sub
in
cli
iret
mov
lea
sub
imul
testl
sub
jbe
hlt
and
cmp
cmpsl
add
sbb
jg
jmp
repz
and
leave
in
ss
sbb
mov
mov
or
clc
xchg
add
lods
jmp
addr16
inc
rclb
add
rcrl
mov
jmp
movsl
daa
out
lret
mov
sub
pop
and
jne
ret
mov
sbb
and
pop
shrd
push
into
clc
jge
mov
and
lods
sbb
shlb
mov
imul
mov
imul
jne
cs
dec
std
out
cltd
shlb
mov
jmp
add
mov
lahf
bound
fiadds
das
arpl
push
push
sub
inc
and
loopne
je
mov
and
jo
pop
cmp
xchg
insl
add
jle
pop
insb
lock
xor
lret
xchg
xchg
jno
or
loopne
out
das
mov
dec
scas
pop
nop
setg
sbb
inc
fdivr
mov
rcrb
pop
fldt
xor
stos
and
pop
sbb
and
loop
and
add
fwait
cmpsb
or
icebp
hlt
shrb
adc
or
sahf
inc
shrl
pop
sub
out
mov
fmuls
push
lock
adcl
xlat
rcr
sbb
outsb
addr16
xchg
add
jmp
mov
xchg
add
in
sub
out
testb
adcl
jno
call
fwait
imulb
mov
xrelease
lods
js
xor
cmp
lret
and
xchg
adc
mov
mov
pop
dec
loope
and
loopnew
mov
mov
pop
mov
cmpsb
aas
lock
leave
mov
xor
mov
sub
xchg
adc
pop
pushl
cmp
loop
jge
mov
xor
mov
add
addr16
mov
in
sub
mov
les
insl
ja
xor
xchg
data16
jne
cmpsb
in
mov
xlat
lods
outsb
sbb
mov
out
push
cmpsl
int
xchg
push
scas
icebp
xchg
or
fsubl
shrl
fsubr
jb
outsl
ss
cmp
xchg
cld
cmpsl
cli
xchg
stos
fwait
xor
mov
xchg
je
xor
adc
insl
pop
rcr
lock
pop
loop
xor
lea
mov
or
jmp
pop
cltd
xor
pop
inc
orl
pop
push
mov
into
fsubl
not
sub
stos
pop
mov
jp
into
mov
pop
jbe
out
pop
pop
mov
xchg
imul
add
xchg
dec
es
testl
imul
jne
ret
iret
xor
mov
push
mov
sub
push
sub
adc
and
push
inc
faddl
adc
mov
sub
outsb
mov
xchg
add
inc
aaa
sbb
push
mov
divl
orb
test
xchg
and
lret
push
mov
cltd
pop
dec
insb
mov
xor
ljmp
nop
sub
lahf
inc
fs
out
or
add
sub
and
push
popa
shll
pop
push
pop
mov
les
dec
mov
cmp
fcomi
push
test
test
insb
stos
enter
cmp
shll
lea
cmp
shlb
clc
and
cmc
jae
negl
fwait
cmc
sahf
pop
inc
es
inc
sub
push
cltd
nop
pop
inc
outsl
adc
push
outsl
mov
je
add
push
sub
insl
sbb
mov
sub
ret
lock
aad
mov
insl
mov
fdivl
xchg
inc
ja
pop
int3
dec
cmp
mov
and
sahf
xor
arpl
test
je
xlat
add
aam
out
outsl
les
mov
sbb
sub
jbe
popf
xor
movsb
and
mov
mov
lcall
cs
mov
imul
pop
jno
fsub
cmc
imul
or
cmp
nop
std
adc
sahf
or
push
add
xchg
push
jp
imul
sub
push
dec
arpl
push
sub
or
ret
repz
idivl
cld
push
aas
jge
mulb
in
mov
pop
jo
pop
mov
fs
mov
cmp
pusha
push
insl
sbb
mov
or
test
icebp
xchg
sarb
jae
inc
jle
data16
and
mov
ljmp
dec
scas
pop
ret
cmc
fsubr
adc
pushf
mov
or
out
roll
jge
push
adc
xchg
sub
xchg
loope
push
push
xor
rorl
aas
dec
xor
pop
arpl
mov
orl
ret
gs
scas
aam
xchg
js
pop
test
paddsb
mov
and
inc
pop
cmp
je
notb
lahf
daa
out
jno
mov
repnz
push
insl
test
push
push
jno
adc
inc
cmp
mov
int3
out
push
and
inc
ret
jbe
popa
lea
add
stos
in
push
dec
mov
test
or
lds
test
outsb
inc
enter
and
mov
stc
cmp
lods
push
hlt
scas
adc
loope
jb
cmpsl
nop
jns
xchg
out
ds
inc
dec
cli
jl
out
jecxz
in
dec
lock
test
or
cmpsb
jne
aaa
dec
mov
mov
cld
dec
inc
xchg
int
sub
mov
inc
add
cmp
aaa
sbb
movsb
and
je
sbb
rclb
xor
jg
mov
mov
in
and
adc
sti
out
repnz
mov
adc
orl
mov
dec
sbb
push
xchg
gs
or
test
pusha
lcall
pop
into
jns
movups
xchg
roll
adc
enter
shll
add
pop
icebp
or
push
pushf
jge
sub
push
rep
jl
sub
inc
xor
les
pop
into
jle
mov
mov
std
out
mov
cmc
pop
test
jp
or
shrl
ljmp
vminps
out
ss
xchg
fsubrl
dec
out
mov
shll
jecxz
pushf
sarl
mov
inc
outsb
sahf
subb
push
pop
push
xor
mov
pop
ret
cmpsb
xchg
rcrl
ror
or
pop
push
or
inc
jbe
lods
stc
inc
pop
xorl
jmp
shufps
int
jle
popa
mov
jmp
mov
inc
mov
pop
inc
and
push
shll
cmp
mov
ja
pop
jg
inc
cwtl
jg
nop
jnp
sub
test
xchg
add
dec
ret
xor
nop
cltd
js
mov
gs
mov
inc
cli
mov
and
cmp
mov
outsl
inc
xchg
xlat
jnp
xlat
pop
lods
ljmp
inc
inc
iret
xlat
inc
popf
xor
push
pop
or
imul
scas
cs
lods
jns
outsl
sub
and
std
xchg
inc
push
repz
jge
into
lcall
mov
aaa
push
js
xchg
adc
push
sbb
lock
cmp
pop
adc
xor
inc
adc
pop
jne
notb
push
and
pop
and
adc
daa
mov
xor
dec
jne
dec
sar
test
out
mov
lahf
dec
jb
pusha
pusha
mov
flds
outsl
xchg
js
mov
inc
sub
ret
dec
stos
inc
lcall
fadd
stos
in
js
dec
sbb
add
jp
imul
ret
jb
pop
mov
push
nop
jl
push
movsl
gs
cmp
jns
xor
insb
xor
rcrl
push
les
repnz
xchg
call
dec
fisubl
jne
aaa
xchg
xchg
imul
cltd
mov
je
push
mov
or
pushf
int3
cmp
dec
call
mov
rclb
nop
gs
sbb
repnz
jno
insb
inc
gs
shl
cmp
pop
xchg
leave
int3
sahf
jb
enter
ds
dec
inc
dec
push
mov
dec
xchg
repz
mov
lds
mov
or
mov
fstpt
sarl
rcl
or
test
das
mov
movsb
fadd
ss
add
pop
inc
pop
xchg
out
lret
leave
xchg
xor
add
mov
jb
pop
test
test
out
data16
jge
mov
lret
pop
pop
sbb
cmpsb
fwait
mov
push
imull
popa
andb
cmp
dec
ljmp
mov
push
ss
gs
lods
pop
mov
cmpsl
rclb
xor
lahf
add
jb
adcb
inc
leave
sbb
and
pop
cltd
fmul
and
dec
popf
mov
stc
push
cltd
test
cmp
push
push
fs
xlat
scas
mov
insb
push
lret
rcr
mov
and
push
sub
or
mov
add
sub
adc
andl
inc
andb
dec
loopne
std
adc
xchg
jecxz
mov
arpl
mov
and
adc
out
mov
cmp
jnp
bound
es
mov
xorl
mov
sub
pop
repz
lahf
data16
int3
in
lahf
dec
sbb
or
push
bound
testb
pop
dec
add
filds
cli
sub
test
lret
and
stos
push
push
lcall
jmp
mov
mov
sbb
jl
xchg
out
xchg
and
push
sub
out
enter
jo
jle
out
or
and
cmp
mov
cmp
imul
xlat
push
das
mov
mov
pushf
fisttps
daa
mov
jl
loop
adc
out
lahf
stos
sbb
jae
lret
mov
push
addr16
and
std
jnp
xor
or
jbe
in
xchg
sub
and
mov
lea
mov
push
push
sub
dec
popa
jne
dec
aaa
shrb
mov
inc
mov
filds
xor
push
push
mov
jge
add
xor
test
int3
dec
out
xchg
inc
pusha
pop
push
xlat
clc
pop
jae
sti
lcall
icebp
rorb
fwait
arpl
push
jo
pop
shll
popa
jo
mov
dec
jle
xchg
bound
pushf
xor
cs
cmp
in
clc
ss
xchg
cmpl
out
sbb
or
mov
mov
sbb
fstl
shll
xor
ficoms
mov
dec
es
xor
mov
pusha
imul
scas
jp
pop
fisttps
lret
push
cli
lock
in
pop
mov
fdivl
int
outsb
xor
repz
sub
inc
push
inc
cmp
hlt
lock
cmp
inc
stc
stos
xchg
lcall
sbb
rorl
xchg
arpl
in
sbb
cmp
sub
insb
or
inc
xchg
sahf
or
cltd
fstpl
cmc
and
push
scas
inc
or
mov
xor
insl
xchg
mov
sbb
es
mov
push
add
in
cmp
mov
insl
sub
outsb
aam
add
lods
push
jg
mov
mov
dec
stos
jecxz
gs
cmp
sub
sub
add
dec
lcall
cmp
les
inc
add
ret
lahf
ret
mov
ds
in
lcall
inc
adc
insb
xorb
roll
aaa
dec
jecxz
insl
fwait
xchg
ja
test
lret
cmpsl
adc
testl
cltd
pop
lahf
add
add
push
aad
das
push
jmp
js
add
ss
int
adc
inc
dec
pop
mov
aas
pop
insl
gs
insb
xchg
sbb
add
push
frstor
std
je
push
xor
in
sti
pushf
dec
inc
xchg
imul
mov
inc
jno
sub
aam
jle
sysexit
lods
stos
mov
ja
cmp
xchg
lods
xchg
jle
adc
or
mov
cmp
jae
cmp
sub
call
gs
pop
shll
push
imul
fsubl
adc
adc
sbb
jo
mov
push
in
lret
lea
outsb
and
mov
jnp
les
dec
sbb
roll
jge
pop
push
scas
jnp
push
sub
pop
add
sbb
jno
xchg
pop
adc
jecxz
xchg
add
sub
jg
adc
rolb
mov
jae
in
leave
adc
pop
lahf
cs
fsubr
or
je
lock
imul
mov
insb
add
into
fildll
bound
mov
or
lock
das
jno
jmp
cwtl
and
xor
stos
push
lcall
jmp
psllq
pop
pop
sbb
mov
sub
add
test
dec
ret
or
loope
cmp
sti
mov
lcall
push
pop
pop
movsb
aaa
or
scas
lcall
push
push
xchg
sub
push
sbb
mov
lea
imul
fadd
enter
movsl
jae
pop
cmp
hlt
in
adc
sti
pop
jae
scas
add
ljmp
fucomip
inc
push
mov
fldcw
rclb
repz
movsbl
in
sbb
or
xor
sbbb
cmpsb
mov
ret
addl
in
testb
cmpsl
out
stc
lahf
jle
mul
mov
imul
mov
and
jnp
mov
dec
cmc
mov
out
lret
mov
pop
sub
adc
cmp
decb
mov
icebp
cmp
push
fdivl
bound
and
push
and
cmp
xor
in
mov
insb
int3
inc
sub
push
ret
fistps
mov
push
mov
xchg
loopne
loope
dec
add
call
sub
aas
in
dec
xor
inc
lods
pop
addr16
dec
cmp
gs
jns
insb
jno
das
jnp
repz
popf
and
add
lods
jg
movsb
and
ss
cmpsl
insl
sarb
lock
push
mov
mov
adc
jno
dec
adc
add
mov
pop
idivb
cmp
ret
enter
sbb
cmp
fisttpl
sub
jne
add
mov
notrack
icebp
sub
mov
popa
dec
cmp
xchg
jo
mov
dec
leave
loopne
mov
push
fcos
fisttpll
cmpb
push
insb
test
adcl
in
mov
pop
mov
notb
aas
sub
in
xchg
xchg
movsl
insb
pop
insl
hlt
add
mov
movsl
inc
inc
test
aas
fstpl
mov
xchg
or
decb
sub
dec
jo
in
xor
or
popf
popa
rorb
jo
mov
lods
out
mov
int3
adc
lea
lahf
pushf
inc
sub
sbb
jb
repnz
ret
push
pop
cmc
push
adc
out
or
fs
or
enter
mov
dec
fiaddl
pushf
mov
dec
adc
mov
push
adc
in
test
repnz
out
bound
out
sub
adc
push
mov
sbb
daa
pop
ror
js
fwait
adc
adc
mov
lahf
cmp
jno
jp
jo
fdivrp
sbb
pop
aas
es
jnp
stos
mov
and
aam
jns
insb
mov
push
in
pop
pop
mov
or
xchg
jge
sub
cmpsl
sbb
or
push
outsl
adc
inc
jmp
jmp
jecxz
push
xor
inc
lea
sbb
outsl
xchg
stc
sbb
mov
jns
inc
inc
movsl
nop
jo
and
jne
cmpsl
push
push
mov
xchg
ret
sbb
xor
push
push
repz
sbb
frstor
sub
popf
push
dec
out
inc
test
jae
mov
mov
outsb
or
scas
mov
icebp
sub
adc
je
test
mov
shll
inc
jnp
jecxz
lcall
in
push
adc
clc
add
sbb
add
add
adc
or
into
add
movsl
fdivrs
xchg
add
push
push
inc
xchg
xchg
cld
xchg
adc
repz
pusha
adc
jle
fdivs
jbe
inc
push
or
dec
xor
adc
or
sbb
js
jmp
mov
sahf
push
scas
fs
pop
push
aaa
in
inc
insb
ret
flds
test
jns
adc
addr16
xor
jmp
jne
loope
mov
jae
fmuls
sbb
das
jnp
push
scas
subb
pushf
cmp
test
and
xchg
add
enter
adc
cmp
pushf
pop
cli
inc
mov
pop
add
pop
hlt
push
arpl
repz
call
push
mov
cmp
mov
xchg
out
inc
popf
xchg
push
mov
fcomip
fldcw
fs
mov
add
movsl
inc
enter
jl
mov
std
popf
inc
iret
cmp
mov
sbbl
pop
adc
arpl
or
jl
dec
mov
shr
imul
mov
imul
and
aaa
cmpsb
or
inc
push
sbbl
je
hlt
push
cmpl
fstpt
loop
jp
jbe
pop
lahf
mov
push
dec
adc
sub
sub
push
mov
and
inc
sbb
enter
decl
mov
rclb
push
cmpsb
lea
inc
or
outsl
insb
and
jle
mov
jo
movsl
inc
add
mov
mov
or
cld
icebp
je
shlb
jae
out
pop
sahf
inc
sahf
sub
inc
out
cmpsl
xor
subl
mov
aad
mov
imulb
mov
lock
add
push
shlb
xor
inc
je
enter
sub
daa
xorb
pop
loop
repz
fwait
mov
mov
out
adc
movsb
loopne
inc
pop
adc
mov
into
nop
lock
sub
popa
rorl
lahf
and
movsb
imul
sub
call
jae
cmpsb
mov
sahf
inc
rcr
xchg
adc
aaa
cld
mov
push
xor
inc
cmpsl
pusha
push
adc
pop
lret
or
mov
fs
pop
int
addb
into
cmp
or
hlt
lret
mov
fcomps
outsl
mov
cmp
jbe
jmp
lret
movsb
xchg
in
or
xchg
sti
mov
adc
mov
sbb
aad
dec
out
test
scas
das
mov
push
stos
pop
lcall
mov
adc
cvttps2pi
jl
xchg
clc
mov
or
cmpsb
mov
or
pop
out
inc
decb
inc
in
mov
pushf
fadds
fadd
mov
jne
lods
cmp
sub
jbe
aas
insb
mov
mov
jmp
pop
out
popf
out
or
into
mov
xor
daa
xchg
cli
sbb
xchg
xchg
jo
xor
js
xor
adc
mov
nop
pop
fs
jnp
adc
iret
in
minps
jb
pop
data16
sub
xchg
scas
and
fisubs
or
jge
mov
cli
mov
push
aas
adcb
and
leave
jg
aas
and
sub
mov
inc
xchg
inc
mov
loop
xchg
xchg
xor
mov
inc
xor
cmp
push
and
fnstcw
frstor
fcomps
out
jge
dec
cmpsb
pop
xchg
mov
mov
test
xor
cmpsb
in
cmp
push
and
out
lret
out
arpl
inc
stos
jg
lahf
jl
clc
jg
movsl
push
test
test
push
push
popf
fcoml
aaa
aaa
daa
adc
mov
incb
sub
adc
ret
push
mov
shll
mov
cmc
popf
loope
add
rolb
push
add
push
inc
je
sub
sbb
addl
jge
or
cmp
js
push
ret
jp
jbe
push
dec
cmp
aas
jnp
es
in
icebp
inc
mov
lahf
mov
adc
clc
adc
pushf
ret
lcall
cmp
testl
sub
loop
movhps
into
ret
xchg
icebp
mov
cld
inc
xlat
in
add
in
in
pop
inc
dec
xor
cmp
lds
psubusb
test
xor
scas
outsl
les
in
adc
and
jb
iret
jl
es
xchg
out
jmp
je
outsl
cmp
lret
pop
rcrl
bound
cs
dec
sti
jmp
mov
sti
mov
cmp
push
fldl
inc
sub
xchg
push
lds
insl
call
mov
push
dec
sbb
movsl
scas
dec
xor
inc
movsl
and
test
inc
mov
push
xlat
iret
mov
jg
int
inc
cmp
dec
test
js
cmp
xlat
lock
nop
jae
pop
xchg
xor
cmp
daa
int
pusha
mov
cmpsb
or
arpl
into
jecxz
sbb
or
mov
stos
and
and
shlb
lret
rclb
hlt
inc
sub
jb
subl
xor
lret
icebp
pop
cli
sub
mov
into
divb
int
insl
pop
push
adc
xchg
mov
ljmp
loope
add
lret
in
mov
pushf
dec
inc
push
je,pt
xchg
sub
mov
ja
inc
fwait
sub
jecxz
test
test
out
push
dec
pop
mov
mov
pop
sub
push
fs
sub
mov
inc
lcall
inc
jmp
cmp
ret
mov
and
add
pop
rorl
cli
pop
ja
adc
xchg
nop
int3
pop
pusha
in
aaa
lods
jecxz
insl
sub
sub
int
loopne
test
xchg
mulb
nop
xchg
movb
frstor
sub
mov
fiaddl
outsl
sub
loopne
push
into
add
mov
data16
nop
xchg
mov
add
gs
jbe
push
pop
adc
aas
jae
and
mov
imul
pop
psrlq
fmull
je
call
leave
or
dec
cwtl
stos
inc
mov
jecxz
clc
inc
inc
popf
and
xor
fldl
scas
out
pop
dec
lret
ds
add
orb
mov
mov
out
push
arpl
xchg
sbb
mov
outsl
xorl
pop
mov
dec
pop
add
push
test
push
jno
push
int3
lret
push
mov
pushf
rclb
in
int3
shll
lods
xchg
cmp
sub
mov
je
cmp
adc
les
rorl
jecxz
push
mov
jl
sub
fbstp
int
in
orb
loop
stos
or
enter
pop
mov
aaa
xor
out
push
repz
add
ret
jae
jne
mov
in
ljmp
and
loope
leave
and
or
xchg
jae
push
std
cmp
out
push
je
inc
cmp
dec
or
cmp
iret
jbe
imul
or
js
mov
xor
xchg
and
fs
lods
mov
dec
add
push
and
sti
test
adc
dec
or
push
popf
shlb
aaa
aam
loope
xchg
inc
push
add
sub
sbb
das
cli
out
adc
cmp
jbe
jmp
stos
push
jmp
ror
hlt
mov
insl
adc
and
call
test
mov
iret
jnp
sbb
xchg
mov
arpl
pop
out
scas
xlat
jge
arpl
fmull
jg
adc
cli
add
fsubl
lock
arpl
adc
mov
pop
jmp
mov
call
idivl
fcmovbe
jmp
inc
sub
loop
inc
cltd
adc
pop
out
stc
push
and
mov
pusha
mov
sbb
ljmp
cmp
repnz
pop
dec
fldenv
fstps
invd
xchg
lcall
mov
sbbl
cmp
mov
aas
sub
cmpsl
fimull
arpl
pop
pop
push
ret
push
cmp
push
icebp
aaa
mov
jbe
aaa
xchg
ljmp
jb
sbb
inc
mov
push
dec
jmp
cwtl
les
mov
push
push
into
mov
lods
clc
cwtl
lea
and
sahf
lods
lret
mov
ds
out
pop
in
mov
int
and
sbb
jecxz
dec
aad
shr
fsubl
mov
mov
fldenv
fcmovnu
push
add
jp
andb
sub
mov
and
aad
stos
scas
mov
push
int3
adc
call
cmc
nop
mov
mov
mov
pop
test
cltd
mov
test
sarl
std
mov
sbb
inc
pop
nop
popa
scas
stc
fcmovne
dec
push
mov
add
lods
or
inc
lcall
jle
in
mov
addr16
cmp
push
pushf
cmp
subb
push
mov
pop
xchg
aad
loope
or
sbbb
push
adcb
sub
fisttps
cmp
inc
jg
shrb
sbb
jle
lahf
fbstp
mov
cmp
fsub
dec
ret
and
sbb
testl
fmull
incb
out
mov
mov
or
pop
les
popa
adc
lods
loop
dec
mov
test
rclb
aaa
mov
jmp
fstl
add
inc
pop
insl
push
sti
sub
cmp
test
mov
sbb
shlb
call
outsb
push
in
lock
dec
pop
jp
push
jecxz
mov
xchg
cld
cmpsb
jle
xor
rorb
or
inc
xchg
sub
shlb
push
int3
mov
andb
lret
jb
and
cmpsb
mov
lock
lahf
call
into
sub
addb
mov
cmpsb
xor
sbb
mov
add
and
fstps
sti
shr
fwait
xor
popf
mov
movsb
xor
jbe
inc
int
out
pop
loopne
test
xchg
aas
adc
mov
ret
fnsetpm(287
lcall
jns
inc
add
add
or
int
out
cmp
stos
dec
jno
rclb
je
test
cmp
sub
lahf
pop
test
pop
adc
int
cmp
sbb
lea
das
pop
outsl
ret
jb
insl
sahf
fildl
mov
mov
sbb
ds
add
sbb
out
push
shll
call
mov
pop
jae
repnz
mov
mov
imul
xchg
adc
lret
sbb
cmpsb
je
jns
dec
push
jno
add
push
adc
clc
and
mov
jp
iret
xor
mov
fwait
movsb
adc
mov
jnp
sub
xchg
push
push
fmul
mov
andl
pop
in
dec
mov
add
rorb
lret
sub
jae
daa
mov
mov
clc
mov
dec
sar
add
ret
push
jle
xchg
out
xchg
cld
flds
sub
push
push
cmpsb
jbe,pt
add
xchg
sub
or
out
cmpsl
out
ret
lds
mov
mov
adc
xchg
imul
hlt
popa
lods
filds
lret
jmp
int3
js
push
jg
dec
cmpsl
sahf
dec
aad
xor
dec
dec
xor
cmpsb
andl
mov
arpl
add
jbe
xor
inc
arpl
das
shld
inc
dec
dec
pop
mov
sbb
iret
cltd
add
jp
out
mov
imul
jae
add
jns
out
add
push
mov
cmp
cmp
fdivr
push
inc
xchg
fidivs
faddl
sti
add
xor
dec
lods
add
dec
dec
rorl
jg
push
ljmp
or
iret
lods
jno
xchg
not
dec
lds
fwait
scas
mov
jl
sub
fs
fwait
ret
imul
xchg
push
insl
nop
ret
imul
mov
clc
adc
stos
mov
shll
cli
sbb
test
adc
roll
add
insb
in
in
fisttpl
push
test
jp,pn
pop
rcrl
and
lret
adc
adc
xchg
mov
fcos
js
imul
push
sahf
aad
cmp
xchg
adc
mov
cmpsb
sub
mov
filds
mov
dec
jns
jl
leave
fld
loope
adc
push
xlat
add
xlat
ficoml
push
mov
insb
or
in
pusha
push
xor
mov
fadds
lret
call
es
fimull
and
jbe
jnp
mov
inc
iret
push
stos
in
out
push
int3
dec
xchg
pop
fs
ret
or
dec
sub
adc
push
sbb
hlt
roll
out
loopne
mov
shr
gs
sbb
sahf
cld
and
int
sub
leave
jnp
lcall
pop
cmpb
or
inc
outsl
xor
or
daa
or
jns
push
repz
fisubs
mov
fidivl
sub
into
cmp
inc
push
into
sub
in
rclb
push
movsb
inc
xor
ljmp
loopne
insb
inc
subb
stos
add
testl
xchg
dec
add
jmp
shl
lock
inc
cmpsb
sbb
rorb
fildl
pop
ljmp
dec
data16
pop
call
mov
int3
out
xor
pushf
call
test
xlat
xchg
jg
sub
pop
out
insl
nop
in
clc
popa
ja
mov
or
hlt
shlb
mov
adc
or
lret
or
sub
xchg
scas
adc
into
cwtl
aad
outsl
sbb
pushf
loopne
push
hlt
adc
mov
mov
pop
cmc
cmp
pop
mov
push
pop
mov
dec
test
mov
and
push
lcall
jb
add
or
outsb
in
ret
sub
test
pop
inc
aam
insb
pop
adc
test
ss
adc
cld
pop
jge
test
inc
jb
mov
sub
cld
and
push
and
scas
inc
cltd
negb
xchg
and
jl
inc
aam
xor
jbe
jne
and
scas
call
insb
ss
xchg
mov
add
pop
cld
push
xchg
fisttps
cmc
inc
adc
add
lods
loop
inc
vminss
adc
adc
sub
sahf
and
xor
jns
lret
stos
cmp
mov
mov
inc
mov
pop
sbb
xor
adc
or
test
pop
mov
adc
call
mov
imull
cmpsl
dec
jo
xchg
fisubrl
in
in
mov
lret
dec
and
outsb
jno
mov
xor
fs
adc
scas
mov
scas
mov
fdivrl
adc
pop
inc
mov
sub
sub
aad
subb
inc
clc
ss
push
stos
cmp
cs
popa
mov
mov
inc
mov
push
sti
fisttps
jmp
arpl
xor
pop
cmp
outsb
sub
fildl
mov
fimuls
push
cwtl
ljmp
pop
pop
lds
mov
lock
ror
movsb
shl
push
and
inc
repz
in
dec
das
xor
aaa
mov
pop
push
sbb
negb
lds
jecxz
inc
fsubs
sub
out
out
ror
sbb
sub
add
sbb
push
les
jae
pop
mov
xchg
les
pop
paddq
scas
dec
inc
and
mov
mov
mov
sahf
les
popa
stc
cmp
mov
call
mov
sbb
or
xor
std
mov
mov
mov
ljmp
idivl
xchg
adc
xor
rolb
out
test
push
enter
pop
jbe
es
pop
cmc
add
int3
adc
sub
sbb
addl
jo
out
xor
push
inc
into
shr
enter
ja
sub
addr16
stos
xor
loopne
fs
subl
mov
xlat
and
sbb
push
call
sbb
xor
push
mov
xorl
jae
jge
bound
adc
imul
js
push
gs
test
inc
fistpl
jno
cs
and
push
or
xorb
cmp
push
xchg
inc
dec
repnz
sti
rorl
jo
add
imul
fistps
or
add
in
inc
pop
sub
out
sbb
add
out
movsl
cmc
push
dec
push
cld
jae
xchg
fimuls
mov
mov
sahf
jle
stc
or
in
sti
movsl
cmp
and
shr
inc
mov
shrl
jmp
pop
push
sub
push
add
imul
xchg
lds
inc
or
outsl
in
mov
ljmp
jno
xchg
sbb
lods
test
ret
cs
out
arpl
cli
stos
add
jl
imul
push
test
shlb
imul
push
cld
push
les
sbb
xchg
cmp
fmuls
xchg
aaa
jnp
fs
out
cmpsl
and
pop
mov
repnz
pusha
jecxz
xchg
stc
jns
mov
push
or
and
pop
dec
pop
mov
and
jbe
mov
adc
xlat
or
stos
cmpsb
and
mov
incl
ss
mov
out
mov
jecxz
fs
ljmp
jecxz
int
fdivl
out
jno
pop
sub
outsb
cmpb
xlat
daa
aad
xor
dec
aaa
adc
rcr
mov
mov
push
test
stos
pop
mov
aad
stos
mov
push
adc
cmpsl
daa
cmp
mov
rcrb
in
mov
inc
popf
xlat
mov
ret
adc
xor
imul
xor
adc
sub
out
jno
dec
lahf
hlt
rclb
lret
xor
cwtl
clc
mov
enter
testb
dec
outsb
test
and
cmpsl
jae
packsswb
rcrl
xchg
sub
sbb
imul
loope
lcall
cld
jb
fcomps
or
xor
sub
punpckldq
and
mov
lods
and
xlat
enter
jle
mov
sbb
jne
pop
cmp
mov
test
mov
test
push
or
popf
sti
push
jp
fstl
sbbl
stos
push
dec
cmpb
jb
xor
lock
jo
sub
push
test
outsw
cmp
test
cmc
shrl
insl
jge
sub
aad
sbb
inc
test
inc
int
xchg
pop
lcall
imul
in
les
je
inc
imul
sbb
into
leave
pop
push
cmp
dec
mov
cmp
icebp
sbb
mov
mov
mov
pusha
and
mov
push
int
mov
mov
jb
cmp
mov
sbb
mov
shlb
sub
aam
sub
push
xchg
lcall
pop
add
mov
and
je
movsb
loop
or
adc
inc
adc
leave
daa
test
cli
mov
mov
dec
pop
loopne
add
push
xor
cmp
mov
dec
sub
cmp
jmp
mov
in
subb
add
popa
mov
nop
xchg
pop
call
inc
js
iret
xchg
mov
sbb
xchg
or
inc
sbb
insl
popf
jge
xor
insb
repz
stc
add
mov
pop
mov
sarb
sub
jle
loope
cwtl
and
adcl
test
pop
mov
pop
xchg
shll
ret
icebp
adc
mov
cmpl
push
jo
xor
sub
jnp
xchg
popf
cmp
pushl
enter
roll
shlw
pop
aam
cmp
insb
xor
shlb
lock
xchg
sahf
shrb
mov
popf
in
add
jmp
out
cmc
aad
test
push
jecxz
imul
and
sbb
stc
mov
mov
sub
popf
pushl
and
mov
mov
insb
jecxz
adc
imul
in
mov
out
ret
in
les
mov
ret
jp
aaa
dec
dec
jl
jns
mov
push
es
outsl
enter
mov
aas
lea
cmp
inc
outsb
sbb
hlt
out
or
xchg
cmpsl
ret
repnz
xchg
stc
jge
in
jmp
xchg
sbb
iret
mov
dec
xor
outsb
push
sbb
push
bound
jnp
inc
fimuls
in
aad
ret
cmp
test
rorl
es
dec
mov
int
pop
cmp
inc
inc
pusha
pop
jnp
or
jno
inc
jbe
adc
xor
dec
in
sub
mov
mov
rcl
nop
sub
add
mov
int3
push
pop
out
pushf
push
jne
push
imul
xchg
xchg
and
dec
int3
mov
loope
xlat
in
imul
sbb
icebp
pop
xor
pop
add
fbld
data16
es
clc
popf
push
inc
or
jmp
ljmp
jmp
jbe
aam
jle
sub
pop
and
xchg
ds
add
and
push
arpl
push
in
and
xor
xchg
add
sub
mov
fs
jns
sub
jl
pop
int3
subb
sub
enter
jbe
dec
pop
insl
sub
and
in
repz
cltd
nop
push
xorl
mov
hlt
fstps
mov
xchg
test
xor
add
outsb
fildll
jg
test
pop
mov
xlat
xchg
inc
ret
hlt
sbb
int3
out
pop
lods
loop
mov
add
dec
mov
clc
aaa
jge
fnstsw
popf
sub
imul
adc
into
mov
sbb
mov
out
inc
dec
xchg
dec
scas
in
mov
xor
add
inc
jns
cmp
sub
mov
dec
repnz
dec
lods
adc
mov
jno
loopne
jno
or
mov
mov
or
pop
ret
push
in
lods
push
cmc
inc
mov
daa
push
pop
mov
stc
dec
andb
cmc
or
clc
in
decb
dec
adc
dec
adc
mov
adc
push
push
adc
push
into
enter
sbb
sbb
or
jp
push
mov
mov
add
sbb
mov
notb
xchg
cmpsl
or
scas
imul
push
addr16
mov
xor
jne
das
pop
je
jge
in
xchg
mov
fs
xchg
mov
mov
shll
loopne
rclb
or
mov
icebp
das
mov
and
mov
xchg
cmpsb
pop
fadds
pusha
mulb
jg
jl
xlat
add
or
jmp
mov
cld
subps
mov
inc
sti
push
dec
fwait
enter
sbb
adc
pop
jmp
inc
shll
pushf
fdivl
fcmove
pop
cmc
scas
test
jns
and
test
dec
aaa
cli
sbb
pmulhuw
dec
mov
push
or
and
fstl
cmp
jg
pop
jge
jb
mov
imul
movsb
outsb
push
mov
test
mov
sbb
mov
and
jne
pop
or
inc
shlb
mov
test
lret
push
fldt
cmp
je
mov
sbb
mov
or
sub
inc
not
inc
push
in
or
dec
jl
imul
ds
push
sbb
cmp
bound
ja
mov
inc
repnz
movsb
adc
mov
push
jnp
pop
inc
jecxz
aas
add
pop
xchg
daa
mov
mov
ss
xor
out
cmp
orb
ljmp
and
fcomp
cmpsb
jo
cmp
imul
sbb
xchg
mov
mov
pop
lret
addr16
int
sbb
xor
sti
addr16
mov
out
add
mov
mov
or
fimull
mov
cld
in
push
lea
sbb
pop
inc
fsubs
or
inc
mov
push
lcall
iret
fsub
in
insb
loop
inc
movsb
rcr
sub
pop
test
enter
mov
out
js
add
jno
xchg
add
pop
das
xchg
dec
jbe
sahf
mov
or
roll
loope
add
jge
jl
test
inc
mov
pop
aam
jne
push
addr16
in
fs
mov
fucompp
andl
sbb
rorl
movsb
aas
push
pusha
mov
flds
sbb
add
inc
stc
mov
cmp
sbb
sbb
sbb
jnp
movsl
sub
aam
scas
xor
in
mov
leave
xchg
adc
push
rcrl
inc
pop
pop
cwtl
stc
mov
int3
outsl
arpl
test
add
leave
in
stos
cmpsb
mov
cli
mov
and
clc
cmp
jbe
aam
shrb
fxch
lcall
in
ss
jo
xorb
dec
and
lds
in
jne
stos
adc
lahf
pop
sahf
or
push
and
inc
arpl
cwtl
or
rcll
out
mov
loopne
mov
push
rol
popf
mov
lret
add
push
sub
ljmp
mov
inc
sbb
call
in
or
lods
mov
mov
mov
rcll
inc
and
mov
insl
cmp
stos
xchg
lods
lahf
leave
and
ds
pop
push
inc
paddusb
mov
pop
fsubl
mov
or
add
jp
jecxz
fsubrs
inc
test
pop
push
sbb
mov
xlat
es
into
or
xor
nop
rcrl
sbb
and
and
roll
inc
sub
or
fisubl
scas
mov
or
sbb
js
ljmp
cmp
cltd
ds
pop
mov
lret
cmp
aas
pushf
mov
mov
xor
sub
rclb
adc
cmp
in
push
mov
nop
sbb
popa
xchg
or
ja
cmc
mov
jge
or
jae
out
fs
das
stos
outsb
jecxz
stos
xor
dec
cmp
adc
aad
inc
rcll
xchg
inc
lret
inc
mov
sbb
imul
int3
cltd
les
pop
mov
bound
icebp
add
mov
ljmp
imul
rorl
das
test
xor
sub
xchg
cwtl
ds
sub
aas
cmc
sti
fildl
add
clc
mov
xchg
sbb
adc
jno
lret
movsb
mov
sbb
mov
repz
pop
dec
sbb
inc
insl
mov
insl
mov
or
data16
sahf
leave
sbbl
mov
movsb
xlat
cwtl
inc
popf
mov
scas
jno
andl
mov
test
lods
jnp
imul
jae
out
pop
idivb
xor
mov
jnp
rcrb
xlat
ret
jp
cmp
pop
inc
push
repz
mov
dec
mov
mov
xor
inc
cmp
add
test
xlat
pop
fstps
ds
jl
xchg
std
pop
xlat
inc
sub
std
mov
mov
outsl
repnz
stc
insb
pop
xchg
pop
in
mov
mov
cltd
sub
or
jne
and
mov
repz
insl
out
jl
sbb
out
enter
inc
sbb
sahf
data16
lds
js
movsl
mulb
mov
dec
xchg
mov
mov
or
pop
je
jl
and
sub
adc
out
flds
ss
cld
lret
lods
inc
jb
dec
js
xor
repnz
xbegin
mov
jecxz
push
jns
push
cmpsl
jb
sub
out
mov
xchg
or
adc
pop
stos
add
push
xorl
jno
sub
cmp
inc
movsl
add
lods
sbb
in
cmp
cmc
adc
cmc
add
test
sub
out
inc
ja
andl
sar
lcall
dec
mov
sbb
arpl
cld
mov
aam
or
push
push
div
test
cmp
dec
jmp
adc
mov
outsl
std
and
xor
push
push
pushf
or
enter
lret
inc
scas
ret
loope
and
push
je
test
jp
push
shl
mov
movsb
vpmulhw
add
js
jg
dec
lods
gs
inc
leave
pop
push
mov
cs
mov
adc
mov
inc
mov
xchg
and
jl
push
iret
and
sub
out
pusha
mov
sar
xor
pop
pop
push
lock
dec
repnz
mov
aam
inc
pop
jae
add
pop
mov
divb
ljmp
jno
fsubrl
subb
jmp
pop
push
lods
dec
pop
sub
lds
rcll
sbb
dec
arpl
push
fsubrp
jno
sbb
test
scas
enter
xchg
mov
arpl
enter
adc
mov
xchg
in
mov
lock
movsb
jnp
dec
and
jle
adc
repz
in
pop
xchg
add
push
fsubrs
loop
adc
icebp
add
ljmp
cs
adc
push
fidivrs
jp
jnp
cmp
test
arpl
lds
sbb
aas
test
xchg
inc
pop
loopne
inc
ret
jge
lahf
arpl
push
dec
or
jge
cmpb
adc
mov
sti
sub
xlat
inc
adc
mov
push
lock
out
out
and
xchg
pushf
jo
mov
or
orl
mov
popa
hlt
shrl
or
ds
andb
cmp
mov
mov
lods
ja
xorb
xor
mov
mov
ficoms
arpl
gs
bound
lock
mov
sahf
les
pop
xor
adc
rclb
push
and
lcall
push
inc
pusha
dec
lock
jns
ljmp
jne
jg
out
sbbb
add
add
lods
sub
repz
inc
outsl
insl
stos
push
inc
aaa
lock
ds
in
adc
add
xor
iret
pop
xor
addr16
clc
add
push
adc
lods
jae
inc
fistps
push
jge
sbb
cwtl
jl
shrb
mov
rcrl
push
push
mov
das
inc
xor
dec
rcl
fidivrs
test
inc
inc
scas
daa
stos
je
adc
xchg
cwtl
pop
dec
mov
popf
emms
mov
pop
enter
inc
push
test
cmp
addr16
push
int
xchg
sub
fsubrs
push
cli
xor
out
and
cmp
jl
sti
pop
ja
xchg
sub
shlb
fs
lret
ficompl
xchg
mov
or
mov
jns
es
push
jmp
and
aam
sub
and
or
sbb
push
adc
xchg
sbb
out
cmp
cwtl
jp
add
imul
jl
inc
pop
adc
mov
lret
pxor
adc
mov
pop
adc
push
fbld
pop
inc
xor
jae
dec
lret
sub
out
jae
imul
mov
mov
scas
jb
jecxz
sti
mov
lods
cmp
push
int
or
cltd
jb
aad
shlb
mov
inc
and
shl
pop
cmc
popf
push
notb
pop
add
push
aam
out
xchg
mov
cmpsl
inc
iret
pop
cmp
xor
sti
cmp
mov
or
and
lahf
inc
mov
lret
jne
or
push
in
repz
pop
aad
jns
addb
push
or
fsubrs
test
out
and
movsl
sbb
into
mulb
rcl
incb
push
dec
test
jge
and
mov
and
lock
jp
pushf
sti
cltd
mov
rep
divl
xor
aas
sub
adc
push
repz
inc
add
setns
ds
sahf
aad
cmp
xor
ficoms
icebp
or
and
inc
mov
pop
loop
mov
xchg
and
orb
sub
adc
mov
mov
xor
mov
fwait
adc
aaa
jb
faddl
sbb
stos
ds
add
daa
mov
rcrb
cmp
or
sbb
mov
inc
out
lret
dec
rcrl
cmp
rcll
sahf
sbbb
lods
fsubl
ficoms
sub
mov
add
insb
jmp
pop
and
rolb
test
sub
fsubrs
fsts
sbb
movaps
insl
icebp
mov
addr16
dec
or
xchg
xor
nop
xor
lcall
iret
fcmovnu
mov
test
pop
add
xor
outsl
mov
dec
popf
mov
out
dec
dec
incl
mov
incl
push
xchg
es
aad
dec
mov
aam
aaa
sti
or
cltd
pusha
in
mov
add
out
add
inc
pop
leave
xor
lcall
in
adc
lahf
push
dec
test
popf
xor
sarl
daa
sbb
sub
push
mov
lds
push
sarl
mov
into
push
ficompl
repz
loop
sub
test
ljmp
xlat
out
lahf
mov
xchg
lahf
adc
cld
rcr
mov
outsb
shrl
mov
incb
cmp
push
bound
orl
std
nop
or
leave
movb
push
or
jnp
cs
jb
sbb
call
std
lods
xchg
lods
mov
sbb
xor
mov
shrl
movsb
pusha
mov
hlt
adc
or
cmp
ret
or
jno
and
add
sbb
mov
sar
mov
or
and
mov
jne
adc
mov
mov
lret
and
fisubs
xchg
aad
mov
push
andl
jmp
je
pop
adc
clc
pop
rol
test
data16
pop
fcmovnbe
lods
imul
push
adc
ljmp
adc
xorb
mov
nop
push
adc
mov
sub
dec
pop
mov
push
fisubrl
xchg
sub
aad
dec
cmpb
jge
xchg
cmc
out
mov
rorb
fsubs
imul
sbb
roll
and
stos
sub
adc
movsl
mov
or
dec
xchg
cli
insb
dec
inc
xchg
mov
push
lahf
xchg
lret
aam
cmp
sub
cmp
pop
shll
xor
dec
rcll
add
test
inc
int3
rcr
mov
lock
scas
push
clc
jns
or
jge
cmp
rolb
pusha
xor
insl
xchg
add
lcall
or
pop
fbld
in
in
movsl
push
pop
pop
push
or
dec
and
popa
das
add
js
in
test
dec
cmp
sub
xchg
out
pop
pop
xchg
push
and
and
lods
stos
rcl
inc
lahf
lods
sbb
into
bound
or
cmpsl
and
jl
out
icebp
xor
fidivs
xchg
repnz
mov
loop
mov
push
jl
pop
sub
fcmovu
adc
addl
mov
mov
push
push
mov
adc
or
ror
mov
pushl
pop
fdivrs
dec
fchs
andb
loopne
dec
out
mov
aas
adc
insl
push
lock
sahf
mov
xor
popf
mov
lds
stos
push
rolb
push
mov
in
sbb
add
rcrb
add
pop
mov
xor
mov
ss
xor
fwait
lret
inc
scas
cmpsb
mov
sbb
xor
ljmp
mov
in
in
add
inc
mov
or
xlat
leave
shll
xor
cmp
in
xchg
pop
jno
adc
sub
cli
lods
inc
scas
cmpsl
jmp
sbb
int3
push
pop
add
mov
lds
aas
xchg
pushf
or
hlt
cmp
pusha
daa
loop
dec
outsl
push
daa
js
pop
inc
jecxz
ljmp
mov
cmpsl
cli
repnz
jno
jle
movsl
pop
sbb
sahf
jle
in
lret
or
stos
rcl
lock
jbe
sub
lret
xchg
pop
cmpsl
cmp
icebp
and
aad
jmp
dec
push
fstpt
imull
enter
pop
das
sub
mov
mov
gs
push
in
movl
clc
inc
mov
xlat
adcl
adc
negl
fiadds
sub
pop
adc
cmc
pop
dec
fnstsw
jo
xchg
push
and
sub
or
cmp
inc
push
ja
aam
movsb
movsb
mov
aaa
mov
pop
cmp
inc
mov
push
loop
adc
cmpsb
dec
xlat
lods
out
mov
shr
lods
mov
loopne
outsl
pop
xor
push
movsb
bound
dec
aas
dec
ficoml
adc
mulb
cmpsb
xchg
adc
cmpsl
push
in
test
push
adc
adc
scas
push
and
ds
ret
and
jl
pop
push
xor
push
cmp
mov
mov
ljmp
inc
xor
lds
mov
adc
out
out
push
test
sub
stos
cltd
pop
push
mov
jle
hlt
cmp
jne
pop
lea
shl
push
pop
pop
lcall
shrb
inc
dec
inc
sub
mov
mov
mov
mov
cmp
pop
sbb
insb
inc
push
nop
mov
popf
cmpsl
sbb
movsl
loop
sbbl
aam
test
lcall
adc
ret
stos
fnsetpm(287
aad
daa
hlt
ret
or
mov
jle
ret
iret
xor
pop
in
rcl
rep
loope
adc
jecxz
fsubl
stos
test
icebp
popf
push
sarb
outsl
sbb
mov
pop
and
mov
sbb
sti
das
push
sub
loop
mov
pusha
dec
xchg
jle
out
inc
sarb
sbb
test
dec
inc
mov
fcomps
jg
xchg
mov
add
insl
fisttpl
dec
inc
insl
dec
push
aas
sti
aas
push
dec
mov
pop
jecxz
outsb
in
jns
movsb
mov
xchg
mov
inc
jbe
fcomps
leavew
jl
aam
inc
push
jnp
jle
jmp
pop
dec
dec
sbb
mov
lock
outsl
pop
insl
fldl
xchg
and
mov
pop
or
cld
inc
dec
cs
mov
or
leave
std
add
xor
mov
mov
adc
push
cmp
and
push
cltd
stc
std
cmp
aad
les
sub
dec
inc
xchg
xlat
cmp
pop
subb
push
dec
fcmovbe
mov
push
imul
nop
mov
add
inc
jecxz
mov
push
adc
or
movl
lds
push
mov
mov
popf
cmp
mov
ret
movsl
sbb
jb
test
ss
jge
shll
arpl
mov
fnstsw
rcll
push
xor
pop
dec
pusha
cltd
mov
hlt
cmc
fs
loope
sbb
jmp
inc
das
hlt
xchg
stos
fadds
ret
jge
insl
fcomip
mov
ja
mov
fcmovnu
imul
in
cmp
test
add
repnz
jge
xor
inc
inc
outsb
jb
sub
cmpsb
imul
mov
mov
sub
iret
ljmp
and
inc
push
jle
xchg
dec
inc
push
and
and
sbb
cmpsl
push
scas
ret
outsb
jns
xchg
mov
out
dec
jbe
out
push
arpl
mov
decl
inc
mov
pop
mov
push
pop
pop
adc
dec
ffreep
xchg
xchg
add
cmpsb
mov
push
stos
shlb
and
mov
xchg
mov
inc
out
addr16
sbb
lcall
sahf
jno
mov
loop
dec
cmp
and
jnp
ret
add
shr
test
repnz
mov
jge
inc
cld
pop
add
test
sbb
sbb
insl
cmp
inc
loope
bound
adc
lods
rorb
lock
movsl
imul
mov
mov
mov
sbb
ds
dec
iret
push
adc
sub
push
xor
call
lock
loope
xchg
xchg
adc
sbb
sub
add
pop
push
shrb
sub
mov
bnd
sbbl
push
stc
jmp
sub
out
pop
cmp
mov
mov
mov
jno
mov
in
and
test
mov
cmp
mov
push
cmp
test
cmp
sbb
bound
daa
dec
cs
jl
cld
scas
xchg
lahf
cmp
lahf
insb
fistps
jl
mov
popa
add
frstor
data16
add
dec
xor
or
mov
aad
or
push
mov
mov
pop
loopne
pop
gs
fisttpl
and
ret
fwait
cli
fistl
pop
push
rolb
lock
mov
cwtl
je
xor
jl
in
in
les
pusha
leave
jnp
loope
mov
cmc
jp
mov
push
ds
dec
imul
fstp
jl
mov
aam
push
sbb
cmp
ret
test
xchg
xchg
int
aas
push
ficomps
out
mov
mov
xchg
mov
mov
mov
push
daa
and
jnp
pop
popf
push
repz
ljmp
add
jbe
inc
pusha
mov
jbe
dec
adc
cmp
hlt
cwtl
xchg
test
adc
push
xchg
jnp
imulb
les
cmc
imul
sub
insl
cmpl
jnp
lods
mov
dec
sub
sub
mov
dec
test
fisubrs
push
or
call
loope
xor
mov
adc
mov
xor
lret
mov
aaa
in
jl
leave
cmp
iret
jne
leave
push
sbb
add
sbbl
cmc
in
andb
lcall
leave
repnz
xchg
dec
xchg
lock
pop
xlat
xchg
jge
jecxz
cmpsl
xor
mov
xchg
cli
jne
test
into
jg,pn
jo
or
cmp
dec
or
leave
test
adcb
imul
push
out
jbe
xor
aaa
popa
arpl
mov
ficomps
or
mulb
das
shlb
mov
cs
ss
jnp
or
adc
rorb
sbb
cltd
add
sbb
arpl
data16
pop
mov
out
jne
pop
add
push
stos
loopne
in
pop
inc
loop
and
or
inc
ljmp
ljmp
pusha
push
sub
shrb
jae
icebp
dec
scas
pop
outsb
mov
or
sub
in
aam
pop
inc
sub
mov
mov
fdivs
inc
push
push
shrb
test
dec
pop
mov
aad
lret
inc
std
sbb
nop
insb
inc
movsl
mov
ljmp
adc
ljmp
arpl
dec
mov
push
dec
jecxz
jecxz
hlt
test
mov
hlt
mov
repz
movl
and
sbb
cmpsb
insb
push
jp
inc
inc
subl
pop
xchg
sahf
fmull
add
jno
out
jl
or
int
pop
pushf
adc
push
into
fdivs
dec
xchg
cs
das
cmpsb
jnp
test
jne
rorl
fdivrs
dec
shll
xorb
fcoms
idiv
inc
dec
movsb
outsl
leave
enter
repnz
jecxz
and
inc
mov
inc
or
fcmovnb
sti
loop
icebp
pop
arpl
inc
mov
rcl
lock
je
xchg
out
lea
ss
ljmp
push
sbb
and
out
call
jmp
lcall
or
and
addl
lds
lret
lcall
mov
cmpsb
out
and
or
pop
cmc
inc
jae
icebp
mov
std
addr16
in
adc
xchg
iret
push
in
pop
cltd
inc
aaa
or
xor
repz
cmp
jecxz
out
test
aaa
pop
lods
dec
xchg
cwtl
xor
frstor
sahf
lds
pop
dec
or
dec
mov
mov
pop
fnstsw
dec
mov
aas
sbb
or
ror
lods
sbb
stos
push
or
aad
stc
dec
notb
jle
dec
gs
fiaddl
mov
adc
ret
mov
xor
pop
call
or
push
popa
rorl
mov
add
movd
jo
add
jb
out
les
popl
or
or
pop
add
mov
inc
jno
hlt
push
xchg
movsb
icebp
sub
jle
xchg
enter
data16
inc
adc
lcall
adcb
lds
stc
push
cmp
add
fidivrl
dec
cmp
in
or
daa
inc
sbb
std
push
push
ds
cs
adc
fcmovne
repz
add
fsubrp
repz
xor
subl
js
xchg
jmp
ror
mov
lods
mov
mov
jge
aad
mov
jnp
lods
xchg
push
add
cmp
nop
xor
cmp
mov
ljmp
aas
inc
dec
cmpsl
mov
cmp
sbb
test
push
test
xchg
lods
cmpsb
pop
mov
lods
pop
cmp
add
call
test
xor
ss
test
int3
dec
loopne
leave
cmpsb
pop
xchg
xlat
pop
add
rolb
xor
pop
aam
xchg
clc
aam
les
add
ret
out
pop
mov
aaa
loop
xor
add
les
dec
mov
add
push
iret
mov
mov
cltd
sub
ljmp
mov
popa
iret
incl
sub
cmpsl
dec
loop
icebp
aad
cmp
adc
mov
clc
pop
sahf
adc
leave
in
aad
add
jmp
pop
dec
leave
sbb
loop
jecxz
movsl
xchg
xor
sub
mov
sbb
pop
cmp
arpl
push
pushf
lahf
ret
andl
dec
sub
in
cli
mov
mov
and
ljmp
xlat
mov
push
rolb
push
pop
int3
push
call
or
xor
and
pop
mov
fdivs
push
mov
mov
int
mov
mov
fwait
jno
in
xor
loope
inc
jae
fiadds
cmpsl
dec
and
divb
mov
pop
shr
xchg
test
pop
sbb
adc
rorb
or
or
mov
cwtl
mov
hlt
pop
testl
mov
xor
shl
daa
ficoms
add
das
jo
cmp
sarb
cmp
rdpmc
jns
pop
and
test
push
popf
arpl
jb
cmp
or
cmpsl
shlb
mov
pop
jg
add
popf
outsb
sti
outsl
or
xchg
xchg
jno
mov
addb
xor
cmp
call
mov
jge
stos
or
mov
stos
sub
out
andl
ss
loop
xchg
outsb
cli
xchg
push
mov
xchg
jnp
iret
mov
dec
lods
inc
fsubrl
xchg
aam
or
cltd
inc
sbbb
shl
test
ret
push
inc
test
stc
ss
pusha
and
out
dec
cmpsb
in
sub
sbb
sbb
test
pop
pop
xchg
cmp
ret
daa
mov
and
shrb
cmp
inc
insl
aas
and
jnp
pop
dec
cmp
pop
xor
inc
das
sbbb
subb
jae
fistps
mov
xchg
xchg
inc
xchg
or
sahf
cmp
mov
cmpsb
es
ficomps
jge
outsl
sub
sar
mov
pop
pop
aas
xchg
or
out
shll
lcall
aad
aam
cmpsb
cmp
int3
test
xor
pop
in
cs
xchg
daa
dec
cmp
inc
sti
leave
push
sub
add
insl
daa
adc
lret
les
or
sub
je
inc
inc
je
inc
xchg
sbb
gs
push
xchg
adc
add
clc
jnp
and
hlt
sbb
notb
dec
jno
filds
xchg
mov
lock
aad
add
pop
xchg
stos
sbb
test
jl
mov
rcr
lahf
jbe
xchg
fwait
mov
pop
xor
dec
outsl
xchg
and
jne
mov
js
dec
pushf
dec
aas
push
pop
lret
loopne
and
leave
mov
sbb
inc
fcmovnb
movsl
xor
xchg
xchg
xor
aam
xlat
push
lea
fidivl
test
sbb
jl
ds
dec
or
add
sbb
push
inc
sub
mov
sbb
aad
shl
sti
ja
lods
clc
add
aad
mov
scas
dec
jp
or
add
dec
cmpxchg
pop
leave
loopne
xchg
sbb
mov
cmp
shr
xor
adc
jne
ds
scas
mov
and
cwtl
push
cmp
mov
dec
shll
ja
inc
or
stc
mov
pop
push
ret
and
dec
movsl
je
mov
mov
out
mov
add
stc
cmp
insb
out
and
cs
leave
addr16
test
pop
mov
movsl
jecxz
xchg
loope
sti
loope
sbb
adc
xchg
mov
scas
cltd
push
shrl
test
mov
aam
enter
jo
lahf
sbb
inc
inc
imul
xchg
subb
push
ss
inc
aaa
cltd
fadds
dec
fistpl
sub
push
std
xchg
lahf
shlb
cld
fwait
je
cli
ljmp
into
push
repnz
push
or
lahf
push
lock
mov
into
push
call
mov
add
lds
adc
arpl
cmp
push
jne
outsl
jle
stos
pop
jecxz
push
repnz
xchg
jb
je
js
push
cld
shl
cli
ss
sbb
scas
or
imul
nop
pop
and
push
lahf
mov
das
or
xchg
xchg
cwtl
xchg
pop
sub
mov
data16
or
aas
movsb
adc
call
loope
mov
adc
das
imul
jns
cmp
nop
loop
sub
jle
cmp
xchg
mov
stc
scas
sub
ss
stos
inc
adc
scas
and
push
sub
mov
xor
out
out
dec
dec
mov
outsb
fs
mov
add
sbb
stos
je
push
mov
andl
sbb
lock
xchg
insl
xlat
xchg
pushf
sbb
fs
popl
out
cmp
and
scas
cmc
pop
loop
bound
sbb
cltd
or
in
loop
push
scas
insb
xchg
loope,pt
dec
and
sahf
sbb
pop
dec
test
stos
sahf
xor
scas
inc
stos
or
test
pushf
cmp
mov
out
shrl
jbe
cmp
out
sub
push
dec
mov
dec
call
cs
adc
movsb
ja
xor
mov
inc
ljmp
jmp
out
pop
jecxz
mov
jge
pop
xchg
fstp
cmp
aad
sub
idivl
dec
rcl
mov
cmp
inc
inc
xor
out
xchg
xchg
icebp
hlt
bound
xor
fcomp
mov
xchg
xor
aad
out
sbb
lock
adc
mov
cmp
mov
outsl
pop
insb
lods
decl
aam
mov
and
fcomps
scas
add
loop
push
mov
rorb
mov
push
pop
mov
daa
lods
fiadds
inc
sti
add
pop
xchg
mov
push
or
jge
lret
adc
popf
and
push
pop
aas
lret
lcall
lret
mov
cli
xor
mov
push
leave
lods
dec
pmaxsw
jnp
pop
sbb
inc
dec
rorl
aam
ret
out
push
cwtl
inc
aad
out
adc
popf
stos
xor
aam
push
or
lret
aas
mov
add
dec
lret
mov
and
fdivs
test
push
call
vhaddps
or
out
inc
in
add
xor
sub
lret
and
mov
sub
roll
scas
sahf
es
cs
jo
mov
movb
mov
into
in
add
or
push
movsb
cmp
je
jecxz
out
sbb
sahf
jnp
sarb
jnp
enter
and
shl
test
cmp
arpl
neg
xor
cltd
pop
mov
jnp,pn
or
iret
pusha
fwait
in
addr16
flds
cmp
lock
or
inc
xor
pop
adc
jbe
cmp
adc
sub
jle
jecxz
fisttpll
or
leave
loopne
jmp
imul
mov
insl
xchg
bound
imul
ljmp
and
cmpsb
jns
mov
notb
ret
data16
or
into
jo
gs
pop
mov
pop
or
stos
cmp
add
outsl
lahf
imul
sub
mov
push
jbe
daa
mov
cmpsb
mov
sub
xchg
test
or
and
push
pop
add
xchg
push
outsb
rcr
js
data16
mov
sbb
xchg
push
outsb
mulb
pop
pop
push
mov
les
or
dec
addr16
dec
sbb
lods
sub
adc
in
inc
popa
adc
xor
inc
lret
stos
xor
loopne
push
and
icebp
add
out
ja
stos
mov
ja
dec
push
or
into
sbb
ja
ds
out
cmpsb
push
or
push
or
dec
nop
push
xor
pop
out
loopne
and
adcl
push
out
xor
or
gs
inc
outsl
aas
xor
jns
xorb
inc
or
or
fsts
adcb
xorl
jns
push
js
movsb
ss
jge
stc
push
int
cltd
sbb
mov
cmp
or
repz
hlt
add
shrb
imul
inc
bnd
cmp
lods
and
sub
mov
mov
fwait
popf
dec
icebp
add
stos
jno
lea
sub
sbb
add
or
nop
mov
imul
lahf
cmp
int3
xor
insb
inc
pop
sub
lret
adc
cmp
call
scas
cvtps2pi
cmpsl
mov
in
cvtpi2ps
mov
mov
sub
mov
insl
imul
and
daa
cmpsl
outsl
inc
lock
pop
pop
mov
stc
les
call
movsl
int3
imul
movsb
sbb
shll
out
mov
in
xchg
pop
sar
cltd
fidivl
fiadds
repnz
or
stos
hlt
mov
aad
std
jnp
leave
xorl
fidivs
inc
fcmovbe
popf
pusha
xchg
mov
test
sub
in
sbb
aaa
mov
push
cli
fwait
enter
pop
cmp
pop
fcomi
inc
jmp
cmp
inc
sub
xchg
ja
sahf
mov
push
add
sti
ja
cmp
dec
ret
shll
les
ffreep
cmc
pop
dec
add
outsb
adc
xchg
movsl
jge
daa
popf
or
sbb
or
mov
push
lea
outsl
mov
push
push
movsl
cmpsb
add
mov
popf
cmp
push
dec
das
pop
fsubl
sub
sarl
jp
mov
lret
push
mov
mov
inc
mov
jle
or
subb
push
in
mov
pop
cmp
mov
fisubl
jmp
pushf
popf
testl
pushf
jb
lcall
dec
jecxz
push
dec
push
andl
dec
iret
ss
dec
insl
inc
add
cmp
or
les
xchg
inc
push
and
mov
leave
inc
out
push
pop
sti
push
xchg
arpl
cmp
movsb
cmp
repz
jnp
or
pusha
fcmovnbe
push
nop
pop
cs
pop
daa
push
fs
pop
lea
mov
daa
test
in
or
push
stc
orb
push
stos
or
mov
sub
jns
mov
xchg
dec
cwtl
outsb
mov
push
or
into
push
xor
adc
add
xchg
push
xchg
aaa
sti
mov
addl
push
or
push
loop
pop
push
add
jl
arpl
mov
je
cltd
cltd
jnp
dec
outsl
dec
mov
adcl
push
popa
shrl
cmp
xor
roll
imul
lods
pop
bound
xchg
mov
hlt
rcr
mov
dec
pop
dec
or
or
mov
and
enter
jne
movsb
aad
cmp
jnp
clc
dec
or
sub
mov
xchg
addb
test
mov
inc
pop
popf
es
and
aam
ds
lcall
popa
adc
mov
push
fs
inc
and
mov
fnstsw
stos
inc
aas
shl
test
cli
push
dec
xchg
std
sbbb
es
insb
aas
into
cltd
stos
jno
jmp
dec
gs
jl
adc
scas
jne
in
cmp
cmp
mov
push
mov
pop
mov
dec
add
mov
rcrl
dec
xlat
pop
mov
xchg
xor
mov
xchg
xchg
arpl
xchg
xchg
dec
push
scas
xchg
stos
pushf
or
lock
or
sub
jl
mul
les
mov
pop
loope
inc
jle
mov
add
cmpsl
mov
cmp
das
in
into
adc
fldcw
loope
mov
test
je
aaa
and
push
jle
bound
mov
adc
test
mov
mulb
mov
xor
in
xor
sub
jg
dec
mov
adc
sub
inc
outsl
notb
jecxz
and
popa
dec
test
add
mov
sub
icebp
into
outsl
popa
add
add
in
lahf
iret
mov
mov
shlb
aam
cld
jnp
rorb
out
fldl
shlb
pop
repnz
lock
sbb
jb
jg
and
addr16
xorb
mov
mov
setb
shlb
lods
stos
lock
mov
arpl
cli
lods
add
inc
mov
cmp
and
sub
test
mov
inc
xor
sub
je
stc
pop
repnz
idivb
sub
or
popf
push
out
loope
sub
adc
xorl
dec
lret
imul
lock
repz
movsb
jmp
scas
mov
jecxz
push
popa
jge
mov
lcall
sbb
movsl
lcall
in
cmp
mov
fisubrl
ljmp
ret
enter
sub
sub
cmp
out
in
cmp
xchg
call
add
mov
xor
adc
jge
push
mov
aam
insb
add
pop
pop
cli
sbb
push
sub
add
ljmp
loope
mov
and
xchg
jnp
fdivrl
jae
jp
mov
aas
pop
mov
ds
outsl
icebp
mov
incb
bound
xor
adcb
mov
psrlw
test
adc
test
xchg
fcmovnbe
and
pop
add
aas
jae
in
leave
xor
ds
or
lahf
es
fs
inc
xor
popf
nop
sbb
push
ficoms
pop
ret
mov
test
and
push
fsubp
push
iret
or
sbb
xchg
cmpsl
mov
adc
pop
pushl
cmp
add
in
cmp
mov
loop
sub
xchg
insb
out
mov
sub
aad
addr16
mov
lahf
xor
xchg
mov
adc
or
push
outsl
imul
or
adc
and
sub
inc
xchg
in
pop
jmp
outsb
data16
pop
push
pop
aad
dec
cmpsb
pop
mov
mov
aaa
add
sbb
pop
shll
add
cmc
cmp
fisttpll
xchg
fmull
cmp
dec
testl
clc
ljmp
pop
xor
shlb
inc
pop
cmp
xchg
pop
or
testl
sub
orb
fidivrl
push
cmp
int3
lret
out
repz
aas
add
mov
test
push
scas
add
inc
addl
fimuls
xchg
jne
fucomip
aam
sbb
sbb
rcrl
cwtl
ror
jp
adc
pop
or
repz
imul
sub
mov
cld
adc
or
test
test
xor
xor
stc
test
mov
js
xor
add
fcompl
dec
push
iret
sbb
adc
arpl
sbb
fs
add
adc
popf
xchg
aas
cmp
or
aad
lahf
sbb
jne
cmp
movsl
into
cmp
lahf
inc
push
pop
or
test
cmpsb
push
adc
cmp
cmp
sub
test
jno
mov
cli
push
mov
or
xor
push
call
out
cmpb
push
mov
mov
dec
xorb
dec
push
mov
xor
add
out
sbb
and
add
jge
sbb
mov
xor
sub
pop
mov
jo
fcmovb
pop
gs
and
xchg
scas
rcrb
std
pop
lds
dec
cwtl
jns
adc
aaa
icebp
fidivrs
dec
mov
fists
pop
jne
add
add
int3
mov
jo
jmp
mov
call
push
ret
dec
iret
lea
pop
repnz
push
inc
mov
bound
inc
pop
or
or
mov
mov
shrl
fsubrl
cmp
scas
add
movsl
rcll
sub
out
dec
sbb
cmp
ss
adc
add
dec
push
std
gs
dec
test
xor
mov
into
mov
adc
std
or
fs
fists
imul
jae
sbb
pop
inc
push
mov
data16
maxps
push
inc
add
bound
sbb
sub
push
xchg
fldenv
mov
into
popl
dec
add
push
xlat
out
pushf
ja
mov
cmp
test
divl
aaa
cmp
fcomps
and
jecxz
aam
sub
popf
out
or
push
test
cmp
fstpl
pop
movsb
cmpsl
pushf
cwtl
lahf
cmp
insl
cwtl
push
shlb
pusha
xchg
mov
scas
or
jb
adc
test
rcrb
push
add
adc
cmp
cmp
test
adc
adc
xorps
addr16
stc
xor
test
xor
pop
fistps
loop
gs
sahf
insl
pop
stos
pop
test
cmp
cmp
fisttpl
and
mov
sbb
imul
jns
in
push
cld
bound
xorb
sub
xor
je
pusha
ficoml
mov
outsl
jo
push
inc
lock
sbb
popa
add
xor
cwtl
lret
xchg
daa
sbb
mov
lret
push
mov
lods
mov
out
xchg
jae
adc
call
mov
pop
aam
mov
xor
xor
xchg
sahf
pushw
mov
aaa
test
and
movsl
and
enter
xor
enter
inc
repz
xchg
push
insl
mov
sbb
jl
adc
inc
mov
xor
add
loopne
mov
xchg
sub
out
xchg
sub
fisubrs
daa
aas
ljmp
fs
in
jb
rorl
and
sub
cmp
aas
out
inc
cli
arpl
jo
mov
push
and
sbb
mov
jnp
fsts
les
popf
inc
ss
mov
aam
lret
sub
dec
test
pop
pushf
and
jne
dec
xchg
idivb
std
call
movsb
ret
adc
xor
outsl
cmpsl
mov
mov
fldl
roll
sbb
push
loop
xchg
xor
loop
je
imul
nop
in
xchg
sbb
js
pop
cld
test
cmpsl
xor
jle
lods
and
int
cmp
ss
jns
ds
inc
std
cli
jge
aad
lret
outsb
std
ljmp
adc
int3
sub
mov
je
push
jno
xchg
adc
pop
add
lcall
int3
xchg
cli
ss
xchg
fidivs
jg
sbb
sub
shlb
or
lahf
bnd
dec
xchg
adcb
ljmp
pop
mov
ficompl
push
jo
notb
js
ds
dec
or
add
scas
les
fisubs
cmp
cwtl
scas
xchg
cmp
pop
and
icebp
gs
js
xchg
fsubrl
add
inc
lds
xor
adc
sub
sbb
sbb
ret
sbb
cld
ret
lret
mov
stc
rcrb
cmp
jae
push
pop
shlb
push
outsb
movsb
lods
lea
mov
and
and
xchg
pushf
insl
sti
les
aad
jno
ficoms
inc
imul
sub
jecxz
push
dec
std
in
mov
enter
mov
sbb
push
leave
dec
inc
icebp
faddl
lret
xchg
pop
mov
xchg
push
and
adc
cwtl
mov
cmpl
cmp
rorl
hlt
pop
stc
movzbl
sub
addl
in
dec
dec
xlat
nopl
or
mov
mov
add
out
sbb
adc
pcmpeqw
bound
pop
jbe
add
int
dec
and
cmc
sbb
sbb
cmp
adc
cli
lret
insb
mov
adc
addb
add
js
cmp
push
in
inc
fdivs
cmp
call
xchg
mov
push
test
popa
jle
or
arpl
rcl
ja
sbb
inc
mov
loopne
inc
out
mov
mov
jge
mov
out
pushf
shrl
imul
shrl
fnstsw
test
mov
ljmp
xlat
jne
fcompl
aam
cli
xchg
frstor
cmp
cltd
aam
adc
add
scas
mov
dec
adc
scas
adc
sub
cld
and
sub
lods
jge
adc
push
xchg
inc
repnz
xor
shrl
cmp
mov
repz
cmp
repz
dec
jmp
mov
lea
cld
repnz
in
ljmp
sub
mov
popa
ss
icebp
pop
es
ja
int3
and
xor
sub
adc
cmp
fbstp
sbb
bound
popa
notl
push
add
jmp
adc
xchg
cmp
mov
xlat
mov
sarl
cltd
sldt
jle
lods
sbb
add
jle
cmp
cwtl
dec
ret
in
je
iret
lods
inc
jp
test
cmp
cmp
mov
imul
loopne
or
roll
pop
clc
jge
cmp
dec
pop
std
std
adcb
cmpsb
test
pushw
sub
mov
in
push
dec
pop
cltd
sub
mov
xchg
push
sub
pop
and
pusha
and
jecxz
stc
cmp
push
cmp
push
test
leave
shlb
and
xlat
and
mov
jnp
cmpsl
pop
jecxz
push
jno
lahf
stos
je
lds
fwait
in
faddl
out
popa
ss
test
mov
stos
or
jmp
xchg
cmp
jo
xchg
cmp
jbe
pop
dec
fidivrs
mov
and
xchg
popa
fidivl
xchg
shll
in
pushl
xchg
test
fnstsw
add
ja
cmpl
pop
push
adc
lds
cmpsb
xor
xor
pop
sbb
jmp
mov
jl
test
in
imul
xor
jae
sahf
push
negl
pushf
imul
mov
repz
dec
mov
ret
subb
jmp
inc
int
sbb
imul
fcomp
push
scas
js
xor
outsb
xchg
mov
pop
mov
mov
jl
dec
cld
dec
jmp
adc
movsl
in
arpl
jno
sub
cmp
and
push
int3
loopne
jae
sti
mov
cmc
cli
mov
icebp
shll
scas
lods
stc
sub
jae
es
pop
dec
push
mov
mov
pop
aam
push
cmp
mov
gs
in
cmc
addr16
and
stos
pop
add
repz
push
mov
sysenter
movsl
aaa
mov
adcb
cmpsl
mov
pushf
mov
movsl
inc
mov
insl
push
ret
mov
cltd
aas
ss
in
push
mov
outsb
fcmove
int3
or
rcll
out
pushf
push
jnp
lods
lock
sub
ljmp
cmp
inc
pop
pop
pop
xchg
icebp
xorb
int3
jmp
dec
repz
inc
pusha
imul
subb
lods
popf
mov
out
mov
add
jns
sahf
jle
inc
shl
sub
pop
cmp
pop
subb
loop
pop
rclb
xchg
push
mov
fisubs
sbb
xor
jp
int3
jb
loop
fidivrs
fstp
mov
les
xor
cmpps
insb
mov
push
cmpsb
gs
test
mov
push
or
aaa
xchg
pop
xchg
rclb
out
pop
ja
movsl
cmp
in
je
or
jo
lret
inc
xor
dec
fbstp
loope
aam
or
movsl
pop
add
jmp
stos
mov
adc
or
les
add
bnd
xor
ja
mov
mov
pop
and
sub
jge
cmp
pop
lods
sub
mov
outsb
cmc
shrb
cmp
shrb
lock
ret
adc
sbbl
in
aas
sub
xor
mov
jecxz
push
xchg
push
scas
inc
push
stc
mov
dec
call
ficomps
mov
mov
and
fmull
and
add
shlb
mov
cmp
int
ds
xor
push
jns
xor
cmpsl
adc
or
aam
leave
out
inc
js
ds
lods
jnp
push
and
loope
jmp
mov
repz
mov
dec
ja
sti
and
xchg
xchg
into
cmpsl
pushf
push
inc
mov
hlt
jg
fs
jecxz
pop
aam
xchg
lcall
adc
inc
xchg
das
inc
ljmp
in
out
mov
mov
fildll
push
js
xchg
push
jbe
inc
loopne
sub
sub
mov
out
push
enter
and
pop
mov
dec
call
xchg
mov
inc
bnd
jmp
leave
iret
push
pop
rcrb
ss
cmpsl
sub
aam
rorl
pushf
mov
jbe
in
xor
dec
xchg
js
xchg
sub
jp
mov
inc
push
dec
fwait
dec
and
cmp
hlt
lcall
sub
gs
in
mov
cmp
popf
cld
jp
mov
iret
jne
mov
pop
cmc
inc
ficomps
mov
pop
xor
mov
cmpsl
dec
flds
push
in
adc
lahf
cmp
xchg
arpl
and
mov
out
icebp
and
pop
lret
insl
push
add
mov
mov
cmp
adc
mov
mov
dec
xlat
fstpt
pop
imul
pushf
or
mov
jnp
sbb
sub
ficoms
out
gs
in
les
fisttpll
xchg
pop
jge
cmp
std
mov
test
out
cld
add
pop
sbb
mov
lret
loop
cmp
jne
icebp
xchg
cltd
xchg
loop
cld
fdivrl
fdivl
ret
and
push
data16
push
out
xor
sahf
xor
repnz
adc
inc
enter
add
sbb
inc
out
out
and
loopne
out
cltd
pusha
fimuls
cmp
jne
pop
mov
pop
push
into
mov
add
int
ss
push
loop
mov
xor
dec
mov
arpl
jbe
xorb
dec
sti
ss
and
mov
mov
aas
sbb
lahf
or
ret
mov
shlb
dec
cmp
dec
jge
mov
repnz
dec
cmpsl
cmp
aam
cld
add
xor
fistpl
jg
pop
mov
or
xor
xor
shrb
arpl
loope
mov
clc
in
outsb
jo
lahf
cli
or
mov
mov
xchg
mov
rol
jmp
popf
roll
mov
sti
and
popf
push
mov
or
mov
in
jp
sti
addr16
inc
cli
cmp
pop
in
int
mov
enter
cmp
sbb
lret
cmp
inc
dec
call
ret
jo
into
leave
push
test
pop
cmp
jle
push
mov
jecxz
int3
mov
xor
es
xor
sub
aam
jno
push
dec
inc
orb
push
ror
inc
in
in
pop
pop
xchg
int
dec
lods
jns
lret
popa
jle
mov
aas
ret
xor
fs
xor
lcall
sub
stos
fcmovb
pmaxub
push
fsubrs
scas
sbb
xor
test
int
es
sbb
ss
jge
xchg
lock
mov
xor
push
pop
pop
add
sahf
pop
sahf
push
jle
jge
les
cmp
pop
scas
lock
sub
sarb
jl
push
sbb
jne
scas
sbb
scas
cmp
sti
pop
dec
pop
mov
mov
cmc
insb
mov
and
adc
mov
dec
imul
lret
inc
push
mov
and
pop
pop
int3
mov
lret
rcrl
popf
outsb
scas
jb
mov
add
xchg
push
loopne
and
jne
mov
loop
sbb
popf
jno
cmp
or
in
xchg
mov
push
in
outsb
dec
cld
test
mov
mov
int3
sub
mov
mov
jnp
cmp
pop
int
or
xchg
xchg
add
push
sub
ror
fs
shl
jne
and
daa
call
ljmp
pusha
jle
in
xchg
jno
scas
adc
imul
push
xor
sub
subb
sub
sti
mov
popa
cmp
push
addr16
cwtl
movsb
xchg
ret
nop
je
cmp
shlb
add
jmp
in
ds
dec
xchg
push
sub
or
cld
out
cmp
mov
iret
cmc
pop
mov
mov
repz
xor
stos
adc
out
les
loop
arpl
shrb
push
pop
repz
mov
dec
stc
ds
add
lds
mov
mov
das
out
ret
mov
push
ror
fcomi
push
sub
sub
out
cmp
sub
push
mov
mov
mov
mov
aam
leave
sub
arpl
xchg
cmp
cmpl
mov
mov
leave
mov
insb
xchg
adc
mov
aas
or
add
cmp
cld
jge
xchg
xor
cmpsl
divb
loopne
jmp
push
fistpl
mov
or
push
sbb
cli
and
mov
arpl
aad
cmp
and
rcl
fwait
adc
inc
sub
inc
sbb
pop
cmp
push
xchg
popf
cmc
mov
bnd
cmp
clc
dec
ja
fdivl
sbb
dec
fsubrs
fidivs
push
mov
lds
xchg
xor
in
cmp
rolb
pop
push
mov
jae
pop
stc
jp
sub
sub
jecxz
push
sub
incb
pop
jmp
or
or
es
repnz
aas
sbb
movsl
inc
push
js
jmp
mov
outsl
sbb
sub
jmp
cs
mov
pop
mov
inc
loope
add
mov
xor
jae
fs
pop
adc
orb
out
mov
add
dec
jl
outsb
repz
jle
mov
mov
add
xor
push
add
cmp
xchg
pushf
aas
push
cmp
mov
mov
loop
mov
jg
pushf
mov
rolb
jbe
in
push
ret
pop
cmpsb
int3
in
xor
and
jbe
xchg
lods
js
or
cmp
ret
mov
pop
xchg
pop
xchg
cld
loop
popf
mov
inc
lds
ljmp
push
sahf
mov
sbb
lods
scas
or
fdivp
lods
jecxz
outsb
xchg
dec
jns
push
popa
loope
bnd
into
pop
lahf
insb
lock
loopne
ja
outsb
rcl
and
jne
fwait
ja
imul
cltd
cli
pop
mov
jge
cld
sub
dec
into
xlat
and
inc
cmp
cmp
mov
sarb
and
cmp
push
scas
xchg
lods
mov
fs
xor
sub
xor
inc
sub
mov
aam
sahf
xor
dec
int3
push
xchg
mov
xchg
or
mov
xchg
aad
mov
mov
push
movsl
je
test
push
mov
mov
mov
sub
add
fisubrl
push
and
test
xor
test
mov
clc
in
xor
decb
cmpsb
fsub
inc
lea
and
ficoml
int
jne
mov
popa
adc
cmp
into
inc
mov
sar
pop
mov
mov
sbb
dec
mov
gs
mov
inc
mov
cli
shll
jmp
cmpsl
aaa
rolb
jns
fs
mov
push
mov
jecxz
js
ret
cli
das
adc
addr16
dec
movsl
cmp
cmc
clc
pop
cmpl
jne
imul
rcrl
popa
inc
dec
add
dec
mov
enter
leave
push
scas
rclb
cmp
sbb
outsb
cmpsl
xor
xchg
lds
mov
das
inc
fs
or
push
mov
xchg
aad
mov
cmp
test
stos
xchg
cmp
pusha
mov
sbb
jo
scas
shll
hlt
dec
xor
mov
mov
jg
popa
adc
jmp
emms
fisttpll
xchg
push
xchg
jg
ljmp
push
mov
mov
jb
dec
mov
iret
push
or
or
nop
mov
jge
outsb
imul
movsl
cwtl
push
and
movsl
bound
stos
mov
push
ds
lcall
js
push
ret
jl
in
movsl
and
int3
cmp
arpl
pop
push
clc
repnz
mov
leave
pop
mov
loope
sbb
and
loopne
jns
aam
pop
inc
jne
add
cmp
jmp
add
mov
cmc
lods
xor
icebp
dec
adc
dec
inc
in
jp
mov
insl
test
or
movsl
mov
or
flds
or
mov
cli
mov
hlt
mov
inc
inc
and
push
dec
pop
icebp
rcrb
dec
stos
sub
mov
mov
sbb
xlat
add
je
push
push
ljmp
insb
lock
mov
dec
or
test
int3
mov
lds
jb
pushl
push
mov
mov
inc
inc
xchg
xchg
mov
mov
jmp
adc
scas
aas
dec
add
lock
xor
dec
dec
repnz
mov
sub
adc
inc
mov
out
outsb
mov
outsb
and
xor
cld
xor
es
pusha
frstpm(287
cmc
push
repnz
cmpl
aad
cmp
fcomps
cmpsl
fucom
jg
arpl
leave
cld
cmpsl
jmp
dec
arpl
lods
adc
mov
test
sar
mov
sub
popa
push
enter
test
xchg
negb
in
jo
and
das
inc
push
fst
push
sub
mov
daa
mov
jo
movl
repz
mov
pop
lret
pop
xchg
mov
loopne
clc
jns
xchg
iret
cmp
or
addb
repz
jge
loop
stc
jno
loop
test
popa
fisttpl
subl
jge
scas
call
sbb
std
sub
gs
pop
or
clc
iret
sbb
pop
xchg
out
mov
or
sbb
and
sub
ret
sub
mov
pop
dec
imul
outsl
mov
jnp
fmul
pop
sub
insb
sarl
jns
lahf
dec
aaa
lods
into
outsl
mov
out
loopne
lods
fcomps
fs
or
dec
cwtl
pop
pop
dec
loop
sahf
lcall
lret
push
jmp
inc
jmp
outsb
xor
dec
adc
or
or
dec
or
xchg
les
scas
hlt
lock
ficomps
gs
jmp
stos
cwtl
xchg
adc
add
into
mov
mov
call
insl
jecxz
inc
out
xlat
jmp
fistpl
aaa
cmp
fs
mov
inc
fwait
push
push
pop
xor
lods
and
lcall
je
jp
cmpsb
push
add
pop
push
mov
sub
inc
sbb
out
ds
gs
adc
inc
pop
repz
loop
pop
pop
shll
popf
push
xor
xchg
pushf
arpl
and
cmp
xlat
fdivrl
movsl
enter
movsl
lcall
cmp
cmpsl
push
rclb
jge
jmp
cmpb
aad
jle
jp
lods
jge
daa
push
hlt
mov
adcb
lds
mov
xchg
push
loop
cwtl
in
dec
push
sti
nop
jb
cmp
add
inc
inc
mov
cs
aad
les
push
jae
lret
mov
adc
movsl
in
xor
jb
sub
sub
shll
daa
into
ret
repz
sub
xor
loop
mov
insl
push
mov
daa
shlb
jle
xor
sbb
xor
adc
mov
xchg
repz
push
push
loop
pop
in
out
mov
daa
sti
xor
shll
xchg
xor
int3
call
pop
rorl
add
fadd
xor
xor
sbb
jge
push
or
xor
fsub
fwait
imul
int
mov
push
inc
sub
jb
je
lcall
jmp
pop
jmp
dec
pop
jp
cmp
mov
or
lea
dec
pop
push
xchg
ficoml
adc
dec
inc
lods
outsl
sub
inc
ds
iret
and
inc
pop
aaa
push
sbb
lcall
mov
inc
sbb
cmc
add
leave
or
into
jmp
xor
insl
sub
dec
test
in
mov
popf
pop
sub
and
jne
inc
popa
inc
in
push
movsb
pusha
mov
xchg
dec
arpl
jecxz
cmpsb
or
xor
sub
rcr
mov
and
mov
mov
jl
mov
std
cmp
adc
dec
lret
scas
pop
push
xchg
fidivrs
mov
adcb
mov
mov
cmp
mov
hlt
xchg
jg
cmp
dec
mov
add
push
jg
rcrl
fnsave
ja
pop
call
test
mov
mov
lret
xor
lahf
pop
xor
ret
xor
pusha
mov
movsb
push
cmp
add
mov
add
sbb
and
sahf
jns
and
lods
push
pusha
mov
dec
mov
shrl
fsubs
jge
sahf
cld
adc
js
lret
call
push
bound
daa
ret
xor
das
sub
aaa
jle
test
or
cmp
mov
sarb
add
jge
jg
fiaddl
rcll
fwait
in
push
aas
push
shll
and
xor
push
lods
icebp
inc
jle
dec
fsubr
jno
pop
es
mov
dec
sbb
jne
rol
je
hlt
cmp
das
test
dec
or
ror
aaa
jns
or
rorb
lcall
cmpsl
addl
mov
add
push
shrl
vsqrtsd
xor
cmpb
dec
inc
aaa
xor
pop
fwait
bound
inc
lret
sarl
xlat
push
xor
push
xchg
sti
sub
pop
out
push
mov
in
push
pushl
xor
mov
test
lea
rdpmc
ja
push
jecxz
ds
incl
jge
and
cmpsl
stc
adc
mov
bound
xlat
cmp
xchg
xchg
loopne
test
xor
jne
pop
fs
jecxz
add
movsb
sub
push
mov
loopne
dec
pop
dec
imul
fdivrp
aaa
pop
movsl
roll
jns
mov
pop
cwtl
xchg
inc
push
lret
mov
sbb
xor
out
addr16
xor
push
movsb
mov
sbb
fisubrl
add
cmp
inc
rcll
dec
sbb
push
and
mov
xchg
pusha
and
mov
and
lret
fcomi
aas
fimuls
outsl
push
xorb
mov
mov
mov
pop
fadds
ret
xor
dec
imul
imul
inc
cmp
fimull
popf
dec
scas
pop
pop
jmp
sbb
push
add
push
shll
pop
jbe
gs
in
in
jmp
fstl
fdivrl
pop
cmpsb
jnp
jge
sahf
pusha
shl
mov
int3
fsubs
int3
std
test
and
les
clc
or
sub
add
jne
mov
rclb
nop
jnp
push
cli
xor
xchg
movsb
push
xchg
push
lcall
xor
test
outsb
out
out
jno,pt
jmp
mov
movsb
push
inc
jae
insl
outsl
adc
lret
loop
fisubrs
dec
push
cmpsb
sub
jge
push
xor
out
rcll
out
inc
scas
jnp
inc
and
inc
dec
fwait
out
int3
jae
mov
stos
xchg
ss
lahf
sbb
pop
add
and
inc
or
jmp
xlat
mov
pusha
pop
inc
sbb
ljmp
movsb
test
jno
jecxz
or
inc
lds
dec
mov
sar
sbb
stos
lcall
and
aam
rol
ret
out
mov
lret
mov
sub
sub
sarb
imul
lret
das
jb
sub
mov
sbb
cwtl
mov
inc
dec
or
dec
cmp
jns
xchg
retw
jbe
mov
mov
sub
add
lock
scas
aas
pop
fistpl
jno
pop
lds
push
xchg
subl
iret
in
cmpb
lahf
mov
call
mov
popf
and
jle
lea
dec
push
adc
cmpsb
xor
jns
cmp
aam
arpl
mov
or
popa
mov
sbb
cs
sbb
cmp
add
sbb
cmp
cwtl
pop
ja
adc
jp
lods
mov
adc
cmp
jae
addr16
or
or
iret
xchg
mov
jbe
dec
inc
es
nop
aas
cld
test
jne
ds
out
inc
stos
out
xor
les
cmp
gs
pop
iret
iret
inc
test
fildl
sbb
pop
bound
and
out
xor
fadd
test
mov
xchg
cmc
insb
xchg
ret
scas
leave
aas
adcb
outsb
adc
rcll
jl
mov
xchg
xchg
push
xor
mov
xor
pop
in
mov
adc
lods
dec
xor
xlat
xchg
jg
jns
mov
repnz
test
and
ds
xlat
jnp
adc
repnz
and
sbb
ret
sbb
cmc
sbb
stos
lcall
loop
subb
iret
mov
cmc
imul
popa
mov
sti
pop
stos
ljmp
imul
in
repz
cmp
pop
ljmp
push
std
cmc
into
jecxz
mov
pop
jmp
xor
add
jmp
sub
clc
imul
fmul
popa
push
notb
dec
inc
lcall
sub
sub
popa
xor
mov
xor
ja
imul
fwait
dec
out
js
sbb
test
notb
mov
insb
out
sti
cmovle
adc
std
or
pop
popf
pop
or
mov
mov
ret
scas
push
inc
mov
mov
repz
dec
xor
hlt
outsb
jg
mov
adc
clc
iret
push
gs
xchg
aam
jne
out
sbb
push
fdivrs
ja
lods
push
in
insb
scas
cmp
ret
sti
test
test
sarl
pop
push
ds
inc
push
xlat
test
cltd
repnz
mov
cmp
sub
pop
fwait
mov
in
ret
xchg
mov
loope
add
mov
subl
lock
rolb
int3
push
clc
mov
pop
mov
dec
mov
daa
sub
push
mul
pop
fistpl
mov
cld
mov
sbb
add
cmp
mov
jne
inc
adc
jne
sarb
mov
stos
rorl
aaa
ret
fs
add
inc
pop
cmp
inc
test
xchg
jge
movsl
mov
cmc
mov
addl
sub
xor
shl
xor
rorb
scas
hlt
inc
daa
inc
ljmp
mov
adc
jb
movsl
int3
stos
outsb
lds
cmc
fdiv
push
cli
insb
adc
pop
fiaddl
jo
getsec
adc
outsb
pop
fdivs
push
lahf
dec
std
lret
dec
push
mov
dec
call
in
push
int3
inc
adc
xchg
leave
or
or
cmp
mov
fwait
mov
imul
mov
pop
mov
pop
push
mov
adc
outsb
insl
lods
lea
int3
inc
fdivr
mov
out
call
add
mov
int
scas
jae
scas
sbbb
adc
xchg
fisttps
and
les
adc
cmp
aaa
adc
dec
inc
aam
xchg
or
pushf
add
inc
xchg
imul
jl
out
cmp
lret
xchg
xchg
adc
cmp
inc
xorl
les
mov
or
test
dec
pop
inc
lret
mov
and
into
inc
mov
xchg
jns
adc
sub
rcr
repz
pop
shlb
cmp
sbb
cmp
mov
xlat
pushf
sti
lock
push
mov
fisubs
ds
xlat
mov
test
cmp
shr
adc
repnz
sub
fxch
and
loop
inc
dec
lds
cmpsb
enter
dec
cmpsb
or
out
es
xchg
pop
mov
xor
add
push
push
outsb
test
aaa
push
mov
insb
sub
sbb
loope
mov
jno
inc
mov
pop
xor
movsb
xchg
add
jb
add
jmp
pushf
insl
gs
mov
cli
fcomp
push
inc
mov
adc
movsl
mov
jb
sub
repz
pop
loope
pop
push
scas
in
push
pop
adc
push
cmc
sub
xor
aad
pusha
jge
out
les
mov
sarl
fcomps
lahf
xor
mov
pop
dec
test
adc
scas
cmp
mov
adc
and
dec
scas
cwtl
dec
lods
mov
int3
enter
push
pop
loope
sbbl
jmp
popf
gs
out
out
mov
jmp
ds
jne
or
movl
jo
cmpsl
fst
mov
and
fildl
or
xchg
mov
lret
jb
mov
movsl
shrb
fcompl
faddl
dec
scas
sbb
mov
sbb
or
mov
ss
xchg
into
xorb
push
enter
lods
jbe
mov
jae
stc
in
jmp
lret
sub
xchg
scas
js
cltd
xchg
mov
jmp
in
fs
dec
ds
mov
pusha
lahf
mov
push
shll
lds
into
inc
sbb
pop
adc
jbe
movsl
fisubs
cli
sahf
push
and
dec
dec
mov
dec
fnstsw
or
cli
xor
loop
scas
push
ret
jl
sbb
mov
cmpsl
pop
sub
repz
repz
sbb
jecxz
adc
and
sbb
mov
push
lods
mov
cs
push
out
daa
add
aad
jge
out
sbb
inc
mov
ror
dec
push
rcl
cltd
adc
dec
inc
push
and
push
jne
xchg
or
adc
cmp
repnz
fxch
mov
bts
sub
rcrl
xchg
or
mov
ss
jne
push
xchg
pcmpgtd
out
lods
xor
jmp
je
pop
mov
clc
dec
or
testb
inc
mov
sbb
rcrb
jb
pop
ja
imul
fmull
out
loop
sub
sti
push
mov
push
lods
mov
cmc
or
cmc
add
mov
arpl
jge
jns
outsb
xchg
or
sbb
adc
and
jp
mulb
xor
xchg
push
cmc
xor
pop
adc
sbb
cmp
dec
loop
adc
jmp
outsl
test
sbb
sub
idivb
enter
jmp
mov
cmpsl
push
mov
sbb
and
pop
xor
scas
repnz
adc
pop
xchg
sbb
int3
popf
inc
mov
insb
out
inc
cmpsl
pop
dec
rcrb
mov
add
dec
sbb
push
jecxz
mov
lret
idiv
add
push
cs
iret
push
inc
pop
lcall
sub
xor
ret
sbb
dec
sub
pop
aam
mov
inc
dec
pusha
jae
sub
xchg
mov
pop
cmpsl
sbb
shrb
jge
clc
xlat
ja
jae
inc
jle
andb
push
inc
adc
lret
test
sbb
cli
push
js
mulb
out
jne
insb
mov
and
sbb
pop
and
aam
cwtl
jecxz
stos
push
out
popa
mov
jecxz
sbb
pop
fiaddl
lcall
xor
cmp
xchg
jle
jnp
inc
sub
ret
push
outsb
mov
ret
push
js
inc
or
aad
mov
scas
mov
les
stos
call
dec
cmc
test
push
sub
shlb
mov
mov
rol
sub
push
xor
rclb
push
loop
or
jne
xor
cmp
div
enter
pop
or
cltd
in
mov
dec
mov
js
pushf
bound
arpl
jno
mov
ljmp
sarb
mov
stos
stos
push
xor
shll
inc
cmpsb
xchg
sbbb
lret
in
stc
jno
je
mov
arpl
cmp
shll
jg
imulb
lds
rorb
sarb
dec
adc
xor
mov
aaa
mov
dec
mov
add
mov
jle
out
pop
mov
ja
fwait
push
mov
aas
mov
jg
pop
rorb
xchg
jb
sub
or
lret
jo
stos
jp
ljmp
fdiv
mov
mov
imul
or
xor
pop
xchg
daa
pop
into
jle
jecxz
jmp
cmc
das
cld
and
jns
cwtl
push
xorl
in
push
mov
jo
mov
vpmulhuw
das
add
or
bound
pop
cmp
in
inc
test
xor
scas
jns
sti
cmp
sbb
aas
push
mov
cwtl
test
inc
notl
pop
repnz
fisubrl
pop
cmpsb
fwait
cmp
jmp
test
mov
jl
les
and
not
stc
imul
or
xor
xor
hlt
ljmp
cmpb
fsubrl
das
aaa
mov
mov
loop
mov
stc
sub
inc
adc
lds
sub
pop
dec
xor
jns
adc
test
pop
scas
pop
cmp
loopne
cmp
mov
adc
adc
xchg
fdivs
push
cmp
mov
inc
cltd
sbb
cmc
mov
adc
push
cmc
and
jae
inc
fidivl
dec
outsb
inc
inc
jae
adc
addr16
inc
inc
inc
push
mov
or
hlt
aas
int3
and
jno
stos
dec
mov
dec
pop
pushf
dec
mov
jo
pop
cli
lret
or
pop
aaa
shll
scas
arpl
lgs
movsb
nop
jns
or
fstpt
jae
bound
cltd
test
sub
jp
movb
shrb
inc
jnp
ret
inc
xor
xchg
int3
sahf
std
out
or
addr16
idivl
lahf
lcall
subl
sahf
into
xchg
xchg
scas
or
jo
scas
mov
in
inc
aas
imul
int
mov
xchg
pushf
add
sarl
cmp
adc
lret
outsl
xor
mov
mov
push
and
xor
shrl
in
inc
xchg
xor
incb
sbb
mov
repnz
mov
xchg
daa
pusha
xchg
jle
imul
lock
jle
lds
mov
xchg
and
repz
adc
or
imul
inc
cli
pop
push
imul
scas
out
sbb
stc
das
aam
mov
xchg
push
cs
push
mov
ret
mov
in
mov
lods
xor
aad
ds
jbe
in
scas
mov
or
pop
xchg
sub
aam
bound
fnsave
icebp
xor
out
lods
out
rol
push
xchg
movsl
jno
popa
dec
in
pop
pop
jg
push
pop
inc
and
inc
daa
fs
push
push
jnp
fstl
cmpsb
inc
sub
jae
gs
mov
js
lods
int3
fiadds
sub
insl
rcrb
stos
hlt
sub
xor
repnz
out
rcrb
xor
mov
daa
jae
arpl
aad
shrl
adc
mov
pushf
xchg
in
adc
xor
cmp
les
and
outsl
or
lods
daa
pushf
cmp
in
pop
outsb
add
fmul
rolb
push
sub
push
jns
pop
hlt
jl
sub
pop
dec
xchg
pop
dec
mov
inc
sub
scas
icebp
jg
mov
and
sbb
mov
push
mov
mov
pop
mov
repz
mov
adc
arpl
int3
adc
or
cmp
sbb
sub
ds
fsubs
xor
cmc
and
mov
gs
or
icebp
xchg
hlt
or
sahf
enter
or
or
scas
shlb
sbb
imul
jg
dec
repz
inc
xorl
lock
sub
mov
aad
or
std
xlat
shll
lahf
call
cmpsb
cltd
test
mov
push
addr16
lods
xchg
nop
cmp
inc
sub
rorl
xchg
mov
dec
mov
lret
pop
fs
jmp
sbb
fsubl
or
ss
hlt
inc
xchg
xor
jo
jmp
or
fldenv
loope
repnz
or
int
pushf
and
mov
in
mov
pop
mov
lret
adc
mov
and
push
pop
ljmp
repnz
sti
clc
pop
jo
sahf
sub
std
leave
pop
imul
lret
sarl
dec
xor
arpl
fisubl
mov
add
adc
arpl
mov
lahf
pop
xchg
and
xchg
adc
xchg
cld
adc
test
mov
cmp
fsubrs
fadd
lods
fstpt
icebp
pushl
ja
adc
into
mov
xchg
xor
fwait
aam
jmp
sub
mov
dec
jge
icebp
fcom
mov
aas
int
inc
leave
orb
adc
and
jg
or
jecxz,pn
int
xor
pop
push
xor
popa
lret
test
lahf
jae
inc
lods
or
adc
nop
ret
sub
cmpl
and
nop
mov
or
insl
add
mov
sahf
xor
cmp
je
sarl
push
movl
and
jl
stc
pop
mov
cli
lret
sbb
and
call
jecxz
test
mov
shr
mov
add
into
adc
adc
pusha
jne
iret
js
mov
mov
fucom
mov
xchg
mov
cmp
lcall
repnz
ljmp
jb
push
lret
movsl
dec
mov
mov
push
pop
pop
and
in
pop
pop
xorb
fisubrl
xchg
add
and
pop
adc
outsl
idiv
mov
clc
adc
out
addr16
jle
mov
je
dec
jbe
out
cli
pop
mov
icebp
fnsave
cli
ret
jle
sub
lcall
mov
ja
adc
sub
out
cli
jge
sbb
xlat
cmpsl
mov
insb
cmc
pop
and
cwtl
mov
lahf
into
ss
mov
sub
push
add
gs
mov
out
out
sub
pop
jns
or
sahf
movsl
stos
fs
shrl
movsl
inc
hlt
das
test
lret
adc
cmp
movsl
aaa
mov
scas
mov
lret
add
out
cmpsl
sbb
jo
in
sub
fmull
test
mov
dec
jmp
mov
insl
dec
cmpsl
inc
pop
scas
movl
into
add
rep
add
sahf
mov
lret
pop
xchg
jb
dec
aas
sub
movsb
or
sub
xor
jl
or
pop
push
push
in
xchg
cmp
xor
xchg
xchg
test
movl
fnstcw
popf
nop
xchg
lret
ret
jb
aaa
es
dec
push
cmpsb
jmp
jecxz
dec
adc
sub
aad
ja
arpl
inc
lret
jb
lock
or
aam
jl
add
cltd
shl
stos
cmp
shll
ret
adc
dec
xchg
cmp
xor
pop
xor
repz
mov
pop
push
push
fimull
jg
sbb
jmp
mov
out
or
rcrb
or
bnd
fistpll
pushf
icebp
mov
into
bound
lahf
and
addl
sbb
or
jns
js
jle
sbb
movsl
cld
lcall
push
jmp
clc
pop
dec
repz
mov
jns
dec
xor
cmc
xor
push
jo
rcll
insb
push
aaa
push
imulb
push
je
jae
mov
sub
enter
fs
xchg
dec
fistl
call
shrl
lahf
subb
mov
popf
xchg
out
cli
mov
out
xor
lds
adc
out
or
hlt
pusha
cmpb
xchg
sub
into
pop
or
popf
mov
out
jge
js
enter
ljmp
loopne
add
decb
push
repnz
lahf
shll
xor
scas
mov
xor
xor
mov
aad
jecxz
lods
nop
dec
aaa
adc
insl
cmp
and
inc
cli
jbe
out
rclb
inc
xor
fmulp
fwait
jg
cmpsl
pop
loope
dec
mov
xchg
push
cs
pop
rorl
cmp
hlt
sbbl
cmp
mov
ret
repz
inc
call
or
shll
lods
mov
int
mov
and
lcall
imull
fdivr
scas
movsl
pop
insb
push
int3
mov
xchg
or
sbbb
rcrb
adc
idivb
aad
lahf
sub
dec
test
inc
xorb
xor
int
into
mov
mov
mov
adc
cmp
ds
mov
fstps
lods
or
enter
je
movsb
jle
mov
push
lret
jne
or
nop
sbb
inc
jmp
loop
sub
cmpsl
insb
pop
sub
jmp
iretw
xchg
mov
fisubrs
or
int3
in
xor
or
mov
cmp
les
test
cmc
adc
mov
loope
and
push
mov
jg
pop
pop
roll
xchg
clc
mov
loop
jns
ja
icebp
pop
jno
imulb
cmpsl
jb
jge
in
rcl
pop
sub
mov
bound
xchg
add
aam
or
jne
rorl
mov
fisubs
ljmp
xchg
adc
and
cmc
testl
mov
shll
hlt
faddl
popf
cmp
daa
cltd
js
cwtl
inc
sub
lcall
lds
lret
jbe
xor
test
mov
lods
scas
imul
mov
lret
mov
lds
jl
shr
add
int3
lds
das
jb
push
out
cmp
in
sub
jle
mov
data16
fwait
jns
in
push
addr16
mov
and
mov
jns
fisubl
lcall
sbbb
mov
xchg
inc
call
mov
sbb
outsb
and
inc
mov
in
pop
int
xor
and
mulb
shrb
inc
jecxz
movsb
cli
sbb
jbe
mov
xor
xchg
pop
mov
cmp
addl
out
dec
cmp
pop
mov
cmp
out
cmp
pop
adc
push
xchg
ficompl
fs
mov
cmpsb
fwait
js
bnd
and
xlat
ja
ss
jl
fidivl
sbb
pop
imul
xor
in
fiadds
xchg
dec
sub
test
cmc
mov
sub
loope
sbb
out
sti
pop
lahf
or
repnz
mov
mov
xchg
fadd
lods
dec
lcall
add
pop
pop
test
mov
inc
sbb
dec
cmpsb
push
jnp
xchg
jle
ds
popa
sbb
outsl
loopne
loop
or
arpl
xor
pop
sbb
mov
jmp
cmpsl
push
sbb
and
cmpsl
cmpsl
xchg
cld
jae
cmc
adc
repz
mov
pop
cltd
push
loope
cltd
scas
or
mov
rorl
imul
mov
jno
jne
and
mov
cmc
sbb
dec
inc
mov
enter
loop
imul
jl
or
outsb
scas
inc
jp
push
movsb
out
jnp
jl
imul
pop
sarl
mov
mov
shll
mov
lret
imul
cltd
mov
fidivl
lcall
aas
or
xchg
stc
mov
xor
leave
inc
fisubrs
dec
mov
jns
cld
or
jge
or
out
push
lea
das
sbb
cli
inc
xchg
adc
or
sbb
aad
mov
shl
ds
das
pop
pushf
xchg
loope
sbb
pop
jl
mov
cli
jns
push
lret
mov
test
pop
mov
loopne
sti
cmpsl
mov
incl
mov
or
mov
icebp
sti
add
into
lods
popa
leave
subl
xor
sub
and
sub
mov
adc
in
loopne
jae
dec
adc
aaa
push
add
jmp
sbb
adc
xor
pop
enter
mov
mov
xchg
pop
mov
out
push
lahf
rorb
push
fldcw
bound
stc
arpl
stc
xor
push
dec
cmp
cmpsl
sub
cmpb
insb
mov
pop
outsl
imul
stos
lcall
xchg
fsin
in
ljmp
or
arpl
jae
ds
dec
sti
sub
or
and
in
ljmp
jb
in
lds
jno
test
adc
push
sub
add
frstpm(287
lcall
push
mov
add
in
lea
insb
mov
lret
and
shrb
push
xchg
into
jne
mov
mov
stos
jle
stos
fs
add
inc
shr
cltd
jae
adc
pop
cmpsl
sahf
xor
mov
inc
ret
cli
push
stos
cmp
sub
push
notl
sub
and
aad
sti
jnp
sbb
loopne
daa
push
lcall
mov
or
dec
dec
ja
sub
dec
push
push
mov
movsl
dec
mov
inc
dec
loop
outsb
icebp
ds
jae
sub
loopne
cld
insl
fisttpll
les
stc
inc
pop
push
or
lret
cmp
les
push
push
ja
xchg
sub
or
sbb
add
mov
data16
adcl
adc
sbb
jg
mov
push
hlt
aam
pop
data16
dec
sub
dec
out
push
inc
sbb
dec
stc
mov
shl
movsl
xchg
cmpsl
dec
iret
adc
mov
fiadds
mov
sahf
mov
mov
xor
mov
and
adc
fisttpl
in
out
mov
call
roll
adc
std
imul
mov
mov
add
and
hlt
push
pop
jmp
sub
pop
dec
mov
cmpsb
mov
test
subl
test
inc
movsl
lahf
iret
test
insb
movsl
and
xchg
idivl
push
jge
sbb
xchg
jno
insl
xor
xor
out
jecxz
mov
mov
pop
mov
dec
cmp
mov
sub
mov
pop
push
sbb
hlt
jo
or
adc
lret
lret
jno
hlt
cs
das
pop
lea
dec
add
pop
cmp
lods
mov
mov
insl
mov
aas
das
dec
aam
sarb
mov
inc
lahf
jae
ss
ljmp
divl
fxch
push
lods
push
add
mov
jbe
mov
sahf
test
cs
inc
cmp
jp
mov
in
cmpsl
or
fiadds
inc
pop
data16
adc
scas
inc
adc
mov
es
fwait
add
rolb
xchg
xchg
fistl
je
dec
imul
dec
dec
mov
xorb
push
negl
add
movsl
add
dec
xlat
das
pop
inc
std
loop
jp
aaa
push
cmp
test
shrb
inc
mov
mov
pop
sub
rolb
dec
cmp
stc
in
stc
aas
icebp
pop
out
popa
xchg
int
and
ret
cmp
inc
sbb
push
inc
clc
in
push
call
aaa
loop
inc
or
mov
aaa
and
fldl
leave
movsl
imul
sahf
lds
lds
push
push
out
push
hlt
xorl
inc
lods
faddl
mov
ret
imul
in
mov
mov
repnz
insl
push
scas
insb
imul
and
push
mov
fs
push
xor
mov
or
and
jge
jge
jne
or
mov
mov
jae
aam
jnp
testl
cmp
sub
test
xchg
je
xor
sarl
jmp
fdiv
lret
add
shll
xchg
je
data16
jae
mov
mov
imul
sbb
sub
pushf
arpl
sub
xchg
mov
or
add
ror
lds
mov
sbb
jp
ficoml
pop
ss
popa
fwait
mov
jp
push
cmp
push
adc
adc
xor
scas
jmp
pop
pushf
xor
pusha
cmp
pushf
bound
cmp
out
dec
xchg
cld
add
xor
xchg
mov
dec
mov
jno
mov
mov
jo
push
mov
and
cwtl
add
es
fwait
aam
jmp
add
pop
jnp
and
movsb
cltd
enter
lock
fldl
xchg
imul
inc
jp,pt
nop
mov
cli
jle
aam
cmp
out
cmp
enter
orb
int3
das
imul
sbb
mov
or
das
and
mov
lea
cmpsb
adc
xchg
scas
xchg
add
jns
fmull
stos
lods
inc
ffreep
pop
pop
rcrb
data16
aaa
adc
cltd
mov
mov
mov
sarb
inc
mov
test
xchg
in
loopne
mov
lods
push
lahf
jbe
xchg
jecxz
mov
dec
pop
pushf
stc
jns
std
sbb
mov
addl
push
stc
test
shll
mov
dec
rcll
dec
lahf
dec
or
mul
ss
dec
pop
jnp
xor
pop
xor
in
sar
mov
mov
jl
test
adc
mov
xchg
shl
scas
mov
fidivrs
aas
popa
adc
sti
mull
sbb
mov
cmp
fmuls
int
movsb
and
test
outsb
xor
ja
iret
arpl
and
pop
inc
mov
or
add
push
fdivs
push
push
push
inc
sti
and
ljmp
push
cmp
dec
fistl
movsl
cmp
fdivrl
lcall
insl
xchg
je
rcr
mov
insb
cmpsl
movsb
dec
mov
push
imul
xor
mov
cmp
repnz
add
adc
add
mov
dec
pop
pop
imul
adcl
adc
push
cld
push
lock
stos
pop
stos
mov
cwtl
in
in
pop
jns
daa
cli
sub
adc
cmp
fwait
insb
scas
jo
mov
xor
gs
testb
test
jmp
mov
push
pushf
incb
dec
sub
cmp
rorb
cmovb
fcomps
inc
adc
or
xchg
incb
jmp
inc
pop
lret
xor
pop
mov
lret
popa
xor
adc
addr16
repnz
repz
sub
pop
mov
fidivs
ds
js
push
push
rcll
arpl
fildll
cmp
mov
mov
dec
std
test
fildl
jge
add
mov
imul
insl
jbe
sub
and
mov
or
in
lahf
and
imul
mov
ficompl
or
scas
addb
adcl
jl
xchg
inc
lret
dec
aam
repz
adc
mov
pop
outsl
xchg
mov
and
push
push
shll
pop
pushf
dec
and
mov
or
mov
sbb
adc
pop
xchg
fiadds
pusha
add
fcom
mov
rolb
test
jne
push
or
stos
xor
jne
andl
mov
pop
jecxz
gs
mov
pop
adc
arpl
in
addr16
ljmp
lods
mov
popa
ljmp
fbstp
aas
addb
icebp
jecxz
add
and
in
movsb
mov
inc
push
dec
cmp
xor
push
or
enter
or
push
dec
jo
cli
pop
fcomi
repz
sbb
xchg
ficomps
dec
test
pop
rcrl
arpl
cmp
mov
adc
xchg
std
rcll
sub
xchg
add
inc
mov
sub
dec
cmp
sbb
xor
pop
pop
shlb
insb
jns
in
lods
insb
lret
aas
adc
cs
mov
in
bound
cmc
out
ss
aad
aam
jge
jmp
mov
shll
ds
pop
xorl
push
arpl
mov
js
inc
jns
push
mov
dec
jbe
pop
cmp
xor
js
inc
leave
pop
xchg
sbb
pop
call
pop
cmpsb
adc
pop
sbb
push
shlb
lcall
xlat
mov
outsb
test
out
out
call
lret
inc
repz
mov
jnp
mov
out
cmpsb
push
das
pop
push
jg
xchg
push
out
mov
and
mov
stos
add
or
fwait
std
call
lcall
ret
icebp
pop
and
lahf
call
sbbl
xchg
cltd
mov
call
negl
inc
ljmp
xlat
into
mov
rorb
les
lock
sub
pusha
nop
insl
jb
les
int3
mov
imul
sti
dec
jno
xor
data16
mov
aam
xor
subb
mov
mov
popf
popa
test
cmp
jo
push
cmc
mov
lods
pop
mov
mov
push
cmpsb
ds
mov
mov
iret
repnz
dec
mov
data16
mov
sbbb
lret
rcr
jmp
xchg
lahf
loopne
or
je
xchg
or
in
lds
loop
std
add
iret
stos
rolb
shll
adc
packuswb
fisubl
xor
stc
mov
ja
cli
cmp
rorb
movsl
and
mov
push
mov
mov
fcmovnb
jne
andl
rorb
push
jno
or
jb
jmp
xor
icebp
mov
sub
mov
push
sbb
pop
pop
and
mov
es
leave
mov
out
insb
rol
lret
stos
cmp
pop
fmul
iret
lret
mov
cli
test
mov
pop
push
jecxz
call
xchg
into
mov
test
adc
push
add
jle
cmc
in
lret
inc
mov
and
clc
pop
mov
and
mov
stos
bound
xchg
ret
fs
rorl
jge
add
lahf
xchg
push
outsl
aaa
fisubs
aaa
movsl
andb
in
pushf
aas
mov
ds
aam
ret
scas
sbb
mov
das
xchg
icebp
je
push
xchg
mov
dec
repz
aas
scas
fwait
sub
jb
aaa
sub
int3
sbb
daa
inc
rclb
lret
jl
jmp
mov
out
std
mov
xchg
jl
inc
xchg
js
stos
add
or
imul
add
xchg
push
sub
jecxz
test
cmp
jne
lcall
mov
loope
lcall
and
out
int
and
insb
push
push
dec
xor
cmc
inc
jl
mov
sbb
lcall
pop
mov
das
out
or
stos
add
mov
sub
mov
scas
mov
int3
xchg
cli
jp
mov
mov
push
faddp
xchg
movlps
sub
xchg
push
xchg
dec
je
adc
mov
sub
xor
inc
insl
jnp
ret
loopne
lret
jo
int
bound
rolb
inc
push
add
inc
aad
cmp
add
jl
dec
sub
leave
add
roll
hlt
mov
repz
loope
and
add
xchg
stc
in
sbb
cmp
xchg
loope
inc
pop
and
mov
dec
test
and
ret
jmp
xor
rcll
mov
and
arpl
pop
push
jno
dec
sub
pop
fldl
ret
add
fsts
test
cmp
test
addr16
inc
jb
push
jmp
and
lock
test
jecxz
popf
scas
push
les
adc
repz
js
dec
mov
mov
and
mov
ss
sub
pop
scas
pop
stc
inc
adc
mov
sub
pop
lock
shll
and
in
sub
cld
mov
ds
push
out
in
stos
xor
mov
out
jns
outsb
push
dec
push
loope
jg
test
sahf
rcr
add
daa
call
or
sub
mov
lods
sbb
loopne
xchg
imul
mov
jg
mov
lock
test
fldcw
imul
in
push
mov
pop
inc
mov
cmp
jns
loopne
dec
repz
pop
cwtl
pop
roll
jne
mov
push
xor
mov
inc
sub
pop
icebp
adc
pushf
or
pop
les
push
pop
int3
dec
mov
lock
testb
imul
sbb
nop
xor
pushf
stc
movsl
pusha
pop
stos
push
sbb
add
lcall
pop
and
add
jle
or
mov
leave
out
xlat
shll
and
xchg
add
sub
outsb
xchg
mov
xor
call
mov
adc
and
inc
sahf
xor
sbb
cmp
test
jg
jecxz
sti
jg
out
enter
mov
jmp
and
ret
xlat
loopne
mov
insl
repz
loopne
xchg
divb
ds
das
leave
add
sarb
out
pop
test
mov
testl
cmp
and
je
sbb
sbb
or
cmc
xor
jle
addl
orl
aad
dec
ret
mov
cmc
jbe
jl
mov
push
sbb
jecxz
or
mov
fmul
sub
sahf
xor
and
and
mov
jbe
add
enter
scas
lahf
mov
mov
sbbl
sbb
mov
pop
and
fisttpl
and
mov
arpl
pop
xor
repnz
aad
popf
rclb
push
mov
js
stos
push
and
fsub
lods
adc
negb
xchg
stos
mov
stos
ror
aam
rsqrtps
pop
daa
adc
rorb
jge
xor
jecxz
enter
mov
std
imul
dec
out
ds
int
push
mov
pop
pop
xchg
fists
dec
push
fwait
push
in
inc
adc
push
push
outsb
cmp
add
mov
sbb
inc
cmc
out
pushf
test
sub
add
push
adc
push
xor
enter
fwait
jb
outsl
call
inc
jmp
sbb
int3
and
and
mov
testb
push
or
insl
ds
mov
popa
popf
rol
bound
push
or
and
and
jmp
xchg
pop
inc
mov
dec
ret
nop
aas
jp
jg
loop
adc
stc
push
sbb
sub
or
pusha
out
les
in
cltd
enter
ds
jns
xor
lret
out
scas
xor
pop
addr16
popf
shl
pop
dec
cmp
fdivs
push
stos
nop
jp
xchg
push
sbb
aas
out
cmc
movsl
fs
sbb
aaa
comiss
cmpsb
test
call
out
pop
aaa
outsb
pop
arpl
xchg
int3
sbb
mov
ja
pop
movl
jmp
cli
fcomi
ret
std
xchg
ret
add
xorl
ret
fs
loope
mov
pop
insl
pop
out
and
fcoms
lods
adc
xchg
and
mov
xchg
std
add
bound
in
xor
cld
mov
dec
std
stos
call
pop
test
scas
push
pop
jns
jecxz
in
mov
out
outsl
sbb
mov
loop
sbb
push
leave
xor
testb
jmp
fs
push
dec
jge
aas
or
add
mov
repnz
mov
rcll
dec
out
mov
inc
cld
mov
arpl
mov
pushf
or
fcomi
push
and
cmpsb
push
in
lahf
sbb
mov
das
mov
fsubs
fisubl
mov
push
stos
inc
push
adc
mov
sbb
addr16
mov
pusha
sti
sti
fisttpll
data16
leave
test
xchg
mov
xor
pop
incl
mov
xor
or
fisttpll
cmpsb
and
jnp
inc
pop
xor
jnp
in
test
add
cmp
cld
mov
stos
fstp
dec
negl
sub
stos
sub
jecxz
movl
lret
jmp
cmc
dec
bound
mov
arpl
mov
mov
dec
sub
xchg
mov
mov
sub
fs
xchg
fadds
xor
add
mov
aaa
xor
les
adc
mov
int
xor
jg
add
or
out
add
sbbb
pushf
pop
dec
pop
out
mov
dec
int3
jae
mov
adc
lock
ret
pop
subb
cltd
sahf
pop
mov
frndint
test
mov
lahf
aad
sahf
ret
scas
cmp
sbb
xchg
jno
jo
jl
stos
mov
out
sahf
push
sbb
cli
out
mov
jp
loope
fnstcw
icebp
or
jmp
mov
push
xchg
mov
fmul
xchg
and
add
into
add
in
scas
add
push
imul
xor
incl
mov
in
mov
push
lds
ficompl
or
icebp
cmp
jle
mov
add
push
dec
jo
dec
imul
movlps
jo
gs
repnz
ficoml
or
and
popf
pop
pop
adc
lret
stos
in
scas
and
icebp
ja
pop
push
pop
mov
mov
pop
add
std
sbb
jg
push
adc
pop
das
ret
sub
pop
inc
movsl
in
outsl
mov
icebp
nop
mov
pop
xorl
out
push
and
mov
aad
arpl
shl
shlb
mov
pop
inc
push
pop
push
xchg
or
jb
call
and
mov
ret
mov
adc
and
pop
popf
dec
dec
addr16
cmovl
cmp
addr16
sub
mov
stos
mov
mov
mov
bnd
adc
add
sbbl
xchg
add
xor
mov
mov
das
push
sub
cmp
adc
cmp
jecxz
aam
lods
test
jle
ret
mov
jo
sub
iret
int
cli
sub
xchg
insb
scas
xchg
jge
scas
fs
inc
mov
adc
pop
mov
mov
sub
movsl
jne
mov
cwtl
enter
ljmp
mov
mov
push
ljmp
mov
cmp
aad
cmp
out
mov
leave
cld
xchg
mov
lods
mov
or
xchg
mov
push
stc
mov
mov
ljmp
mov
int3
add
mov
cmpsb
fisubs
out
les
mov
and
imul
mov
add
xchg
sbb
mov
fs
xor
test
nopl
iret
push
and
hlt
xor
data16
push
mov
call
flds
dec
enter
mov
stos
cwtl
cmp
shll
sahf
enter
in
or
inc
mov
xchg
dec
imul
mov
mov
inc
stc
outsl
inc
mov
hlt
dec
in
sub
movsl
jbe
pop
scas
popf
mov
lahf
pop
xor
push
and
scas
add
cmp
cmp
sarl
cmp
dec
int
cwtl
mov
cmp
fisttps
inc
lcall
jmp
dec
arpl
in
addb
adc
xor
and
lods
cmp
stos
fs
sbbl
inc
fs
outsb
lock
cli
nop
rcrb
mov
mov
icebp
test
mov
xchg
jmp
aam
sbbb
decl
je
loop
jg
mov
push
testl
mov
ficoms
add
sub
jmp
mov
out
push
sub
js
out
gs
mov
xorb
mov
fcomps
movsb
add
lea
push
sub
int
adc
inc
vshufps
pop
sarl
lock
loopne
fwait
lds
pop
push
or
test
jl
jle
fidivs
xchg
push
fnstcw
out
dec
push
push
lret
test
fcompl
pop
adc
push
out
in
xor
xchg
sahf
add
jmp
mov
cmp
fstpl
jnp
loopne
mov
shl
testb
mov
xor
cltd
insb
cmp
jnp
dec
sbb
mov
push
push
xor
movsb
enter
jno
js
testb
jmp
cmp
push
pop
movsb
jno
cld
mov
push
cmp
or
fcmovnb
mov
add
andl
xor
jle
dec
sub
dec
call
in
and
out
add
dec
push
push
add
jb
lock
mov
testl
sub
loope
fisttpll
push
lret
in
outsl
cmp
jae
js
xchg
and
push
iret
adc
sarb
pop
adc
andb
xlat
test
imul
sub
fidivrl
jno
jmp
mov
popa
loop
data16
stc
and
movsl
ja
shl
cmp
cmp
mov
push
cwtl
add
or
jo
scas
insb
cltd
bound
addr16
subb
out
and
push
std
insb
mov
clc
mov
add
aad
inc
adcl
out
add
scas
out
out
xchg
or
insb
pop
push
inc
sbb
fdivp
mov
lret
cmp
into
xor
push
pop
xor
push
data16
scas
cwtl
sub
pusha
mov
repnz
pop
fdivrl
sub
out
sub
mov
lcall
mov
xchg
xchg
popa
fcomps
lret
sub
pop
mov
outsl
cmp
pop
loope
or
dec
loope
add
shll
notb
dec
in
into
popf
xor
xor
mov
pop
xchg
sahf
sub
adcb
mov
lret
adc
pusha
dec
inc
add
outsl
jg
jge
lret
mov
aaa
inc
incl
or
push
jne
add
pushf
fcmovnu
cwtl
dec
lret
cld
mov
mov
imulb
jbe
sub
mov
mov
dec
add
xchg
cmc
fdivr
insl
cmpl
in
xchg
lods
jmp
clc
fwait
xchg
mov
lea
sbb
leave
mov
sbb
mov
mov
xor
push
movsl
xor
cmp
jmp
dec
andl
inc
je
sbb
xchg
bound
push
into
pop
cli
scas
das
pop
mov
jp
ja
xchg
fsubs
iret
push
pop
sub
lret
sbb
mov
xchg
and
fldenv
sbb
jmp
out
pop
mov
fdivrp
mov
add
pop
pop
push
xchg
aaa
jns
push
stc
jmp
dec
cli
sbb
daa
mov
jmp
adc
or
fs
mov
repnz
sbb
pusha
ss
cwtl
jle
fs
push
adc
fdivrl
es
and
push
loop
cwtl
push
push
imul
push
add
add
fisubrl
in
add
scas
sub
fs
je
sub
xchg
add
adc
dec
pop
xchg
dec
cmp
push
and
xchg
popf
iret
lea
pop
inc
in
mov
cmpsl
fisubrs
mov
mov
addr16
xchg
mov
push
push
or
andl
fcmovne
mov
or
shrb
jne
pop
leave
dec
jbe
test
rcll
add
dec
jmp
sub
clc
sahf
inc
and
dec
and
repz
mov
clc
mov
imul
ljmp
ds
outsb
test
add
push
push
xor
cmp
mov
inc
into
je
xchg
mov
mov
mov
outsb
add
push
jne
cltd
mov
clc
jno
dec
fstl
lock
test
dec
loope
mov
imul
sahf
in
sarl
adcb
xor
jle
les
mov
cmp
mov
adc
xchg
sub
daa
dec
inc
fsubr
adc
dec
into
daa
fnstsw
jo
pushf
into
xor
push
push
inc
loop
cmc
ffreep
fistl
popf
mov
ljmp
mov
ficoml
iret
adc
mov
mov
inc
cli
pop
std
mov
movsb
sahf
jno
popa
clc
add
or
fwait
push
push
lock
add
popa
push
xchg
sbb
int
jmp
and
mulb
lods
repnz
mov
xor
fcoms
mov
mov
hlt
mov
lods
mov
sbb
sub
jne
push
ret
push
mov
pop
inc
cmc
xor
xchg
clc
test
xchg
data16
push
sub
mov
cmp
mov
inc
add
sbb
aad
lret
data16
mov
addr16
fidivs
fmull
mov
adc
aaa
mov
sbb
rol
aam
lret
stos
cltd
inc
push
mov
dec
mov
jge
push
dec
out
test
rorl
sahf
jg
mov
addl
mov
into
sti
aaa
icebp
orl
mov
xor
push
dec
pop
push
daa
pop
cmp
mov
lods
jl
mov
inc
cmc
ret
pusha
push
mov
mov
inc
sbb
hlt
dec
pop
je
shr
addr16
clc
mov
pop
insl
stc
adc
hlt
mov
in
xchg
bound
dec
push
pop
addr16
ss
nop
test
mov
mov
fsubp
xlat
push
add
inc
aaa
and
orb
bound
xchg
addb
sahf
mov
pop
push
pop
neg
push
popa
adc
xlat
adcb
insb
mov
sub
in
cmpsb
popf
mov
add
hlt
xor
mov
lahf
fsubrs
xchg
mov
sti
sbb
or
cmp
arpl
add
fiadds
adc
int3
subl
adc
out
insl
push
add
xor
push
mov
aam
dec
int3
push
xchg
pop
ret
das
or
rcll
lret
out
scas
and
jle
cld
push
data16
and
or
adc
and
rcrl
fwait
les
fildl
push
inc
xchg
aaa
les
mov
mov
addb
xor
pusha
test
and
aaa
cmp
cltd
repz
ret
xor
sarb
imul
pop
and
pop
mov
out
orb
insl
bound
lds
or
insl
jae
jne
cmp
cmpl
cli
pusha
and
rorl
fisubrl
leave
lret
sub
mov
add
push
push
fwait
pushf
cmp
call
pushf
push
cltd
jp
shl
fsubrs
inc
add
or
mov
stos
mov
insl
xchg
and
dec
cmp
xor
mov
gs
in
lods
cmp
sbb
mov
mov
xchg
cld
push
popf
inc
insl
push
fwait
loop
jns
and
or
xchg
popa
fsts
mov
fsubs
mov
out
sub
sahf
insl
test
push
stos
cwtl
pop
sub
fsts
jg
pop
push
sub
daa
sbb
ja
in
dec
xlat
mov
out
mov
cmp
adc
scas
mov
inc
nop
xor
cltd
mov
mov
clc
dec
cmpsb
aam
jle
jo
rclb
mov
insl
in
fwait
cmp
and
movsl
lods
cltd
outsb
rolb
sub
sbb
cld
add
add
push
test
ljmp
loop
arpl
jno
popf
test
cmp
dec
rolb
or
mov
and
sarb
dec
mov
jns
mov
les
movsl
mov
ss
adc
mov
sar
push
push
ret
mov
cmp
pop
xor
or
or
jle
push
or
adc
ret
aaa
and
or
mov
mov
pop
lret
shlb
dec
xor
sub
jmp
mov
inc
pop
pop
sub
mov
stc
mov
xchg
mov
cli
mov
cli
and
ficoml
add
dec
push
aam
hlt
outsl
ficomps
push
xor
insl
popl
cs
enter
das
aad
sub
mov
test
lea
cmp
lret
jl
mov
or
iret
stos
mov
dec
mov
inc
or
int3
sbb
mov
test
insb
cmpsl
jno
pop
and
jae
cmp
mov
filds
cs
lcall
or
popa
test
mov
add
test
add
lret
inc
insb
pop
sbb
into
pop
movsl
fcomip
pop
mov
pop
ja
or
jle
cmp
add
aad
cld
cld
or
cmp
pop
dec
loopne
fistl
and
pmullw
sbb
jne
inc
or
pop
push
sbb
out
push
dec
imul
cmc
cmp
mov
mov
pop
push
rcll
lret
inc
push
inc
inc
pop
shrb
lods
inc
jecxz
out
pop
jae
in
popf
xor
push
fs
popa
lods
movl
cmp
push
sub
adc
in
lock
jle
cmpb
or
push
jge
call
popf
cmp
mov
mov
js
loop
and
pop
sbb
leave
lret
mov
add
fnstenv
int
cmp
pop
lods
adc
aam
fidivrs
cmc
jmp
pop
aas
and
adc
push
loop
rolb
pop
pop
lret
or
mov
es
shrl
and
orl
and
in
jl
jp
sbbl
push
lret
dec
mov
mov
outsl
or
in
jbe
into
fiaddl
push
and
pop
andb
xchg
icebp
gs
inc
dec
in
stos
mov
sbb
fistl
cmp
mov
mov
cmpsb
jb
stc
out
cli
loope
mov
insb
push
or
sbb
lds
loope
leavew
mov
bnd
movsb
mov
test
pop
jae
movsl
dec
shl
xor
popf
test
inc
in
into
pop
lret
test
push
jge
push
sub
add
fbstp
insb
xchg
inc
adc
lods
arpl
fcmovnbe
ss
notb
fistps
adc
push
mov
xchg
and
jb
mov
and
in
xor
cltd
lock
fadd
push
mov
mov
fstl
xor
sarl
push
dec
lret
jbe
add
sti
gs
movsb
push
outsl
jns
insb
pushf
int3
ret
sbb
xchg
or
std
ss
adc
daa
shlb
jmp
xchg
jg
ja
subb
mov
ja
cs
pushf
daa
subb
xor
in
hlt
mov
push
jne
mov
push
dec
fstl
mov
test
scas
ja
add
ljmp
jbe
pop
jl
pop
push
jecxz
outsb
iret
cmp
pop
in
fdivrl
test
xchg
sbb
in
stos
pop
rcll
aaa
push
fisubrs
xlat
pop
adc
pop
cmp
sub
aas
fstl
fs
add
sub
lret
fwait
sub
subb
mov
add
sub
ss
test
adc
pop
shl
cmpxchg
push
in
iret
jmp
ret
xor
outsl
sbb
cmpsl
imul
clc
dec
mov
pop
ss
mov
repnz
mov
js
sbb
repnz
pop
es
fsubl
lds
xchg
inc
lods
xor
jae
mov
dec
insl
mov
hlt
orl
lea
push
faddp
push
lcall
cmp
pop
scas
xchg
lods
xor
fistl
xchg
ret
or
lods
adc
mov
lret
ror
iret
mov
std
push
mov
sbb
insb
in
mov
dec
lahf
xchg
push
stos
aam
jno
mov
sub
daa
pop
scas
scas
ficomps
mov
in
xor
orl
xchg
mov
lcall
mov
fldl
in
push
insb
into
push
in
outsb
fldt
pop
mov
push
outsl
push
std
push
cmp
cmpl
push
in
jmp
ret
out
xor
aas
into
gs
loopne
push
sbbl
inc
aas
xchg
rcr
add
incl
mov
mov
mov
xchg
not
das
cmpsb
inc
fwait
pop
pop
push
fcomps
mov
int3
cli
mov
ret
fiadds
push
jo
icebp
push
mov
repz
jle
push
jnp
lret
dec
xchg
sti
pop
add
jmp
or
and
movsb
aad
movsw
inc
loope
shll
cmp
push
rorb
xchg
xchg
inc
sbb
lds
jae
stc
orl
dec
fdivrl
fbld
inc
dec
fsubs
inc
pop
ret
mov
mov
add
cwtl
mov
add
xchg
cmpsl
push
iret
add
addr16
fs
jg
mov
in
lds
add
push
and
and
movl
sbb
xchg
ja
inc
cmc
pop
outsl
ds
mov
iret
push
stc
push
rclb
es
repnz
sbb
sub
movsb
jge
loop
repnz
movsb
pop
mov
or
xchg
pusha
mov
test
push
std
aad
mov
int3
sub
cwtl
cmpsl
dec
pop
mov
lret
icebp
stc
lret
jae
push
push
adc
push
cmpb
test
add
ret
xchg
aam
loop
dec
out
xor
pop
sbbl
out
jl
xchg
ds
cmc
ret
dec
inc
mov
push
pop
pushf
out
mov
cwtl
mov
pop
test
mov
orb
int
push
add
daa
dec
mov
icebp
xchg
mov
scas
pop
adc
pusha
or
dec
inc
push
adc
out
imulb
bound
fmuls
cmp
push
mov
cmp
std
lahf
iret
int3
xor
jo
inc
sbb
xchg
mov
inc
int
fldenv
jg
xchg
testb
pop
scas
into
cmpsb
test
out
xchg
mov
jns,pn
sbb
leave
fistpll
jo
gs
cmp
inc
outsl
push
xor
cmp
push
and
push
push
lea
into
xchg
cmp
sbb
daa
push
popa
xor
jp
sti
repnz
scas
or
lods
inc
jne
dec
das
pop
xchg
mov
fidivrl
stos
cmc
icebp
cmpsb
sub
rcr
mov
movsl
in
pop
jecxz
ret
std
loopne,pn
sub
mov
rorb
mov
loope
push
shl
add
test
dec
xchg
cmp
inc
and
mov
dec
int3
adc
cltd
ljmp
mov
lcall
scas
mov
lods
push
inc
pop
int
rcll
shl
loope
lcall
int3
stos
scas
mov
cltd
sub
mov
pushf
sub
mov
cmp
cs
arpl
mov
xor
ret
rcrb
imull
pop
lds
mov
cmp
mov
adc
xor
sbb
idivl
or
add
jge,pt
int
pop
fmull
adc
aad
push
xchg
sahf
cmpsb
fucomip
cli
jl
and
ffreep
mov
xchg
xchg
mov
insl
loop
mov
cmp
outsb
push
push
mov
je
push
cli
mov
cli
nop
and
movsl
aaa
movsl
xchg
loop
mov
ret
dec
add
popa
ja
cmp
cmp
enter
fstpl
shl
jne
mov
xchg
mov
and
push
push
xor
adc
xor
dec
test
test
sub
pop
xor
fnstenv
add
or
jl
mov
call
imul
clc
test
cltd
push
imul
jge
adc
movsl
lods
ss
fidivl
adc
mov
dec
pop
pop
test
movsl
sub
cltd
hlt
cmpb
sbb
pop
push
jnp
mov
gs
fs
fmulp
sbb
xchg
out
aas
cmpsl
mov
shll
and
xchg
adc
ja
mov
cmp
stos
das
orl
test
loopne
lret
aam
xor
jecxz
mov
negl
push
loop
push
mov
pusha
inc
xor
imul
pop
xchg
cs
xor
add
pop
or
sub
out
inc
jb
int3
and
sahf
xor
ja
cli
lods
std
inc
mov
sahf
fsubp
enter
dec
mov
xor
ss
mov
dec
in
mov
dec
or
lahf
fisttpl
movsb
jmp
loop
ljmp
xchg
xchg
adc
test
movsb
jmp
repz
aas
pusha
push
xchg
or
or
fcmovnu
decl
push
sub
and
fadds
fs
and
push
cmpsb
dec
dec
pop
das
cli
clc
aas
lret
jns
scas
bound
pop
int
sti
lock
mov
mov
js
es
jg
cmp
mov
int
enter
loope
movsl
jnp
gs
out
sub
pop
mulb
rcll
rcpps
push
xchg
rorl
test
daa
data16
sbb
mov
pop
clc
jb
jnp
bound
and
xor
xchg
fidivl
mov
cli
dec
adc
and
stos
cmp
scas
adc
inc
or
jnp
mov
mov
aaa
sub
imul
push
ljmp
test
cmpsl
pushf
nop
sbb
add
lret
sub
cs
inc
push
push
mov
fld
jbe
fdivl
dec
or
or
nop
mov
xchg
adc
jp
xchg
adc
into
jg
test
stos
dec
or
inc
adc
lock
dec
imull
inc
xchg
xchg
cli
xor
stos
sbb
mov
cmp
jmp
jp
popf
cwtl
lods
mov
xchg
pop
rcl
repnz
aad
push
call
adc
scas
cwtl
mov
je
jp
jg
adc
jbe
lods
in
and
pop
and
out
out
xlat
stos
insl
xchg
dec
sub
icebp
in
add
or
idiv
sub
cmp
pop
adc
jl
and
adc
add
fldl2e
loope
and
ret
push
xor
enter
jae
mov
lret
adc
inc
icebp
jno
roll
lret
dec
pop
sbb
pop
jns
jle
mov
scas
inc
xchg
dec
cld
mov
insl
dec
pop
lock
fucomp
xor
insl
xor
imul
fstpl
sbb
and
jb
adcl
mov
imul
push
sub
xchg
dec
mov
dec
addr16
test
pop
dec
jae
pop
clc
inc
mov
fcmovbe
std
test
aam
cmp
pop
mov
pop
imul
or
cmpl
dec
mov
jns
jo
sarl
sbb
test
rcr
dec
insb
shrl
jl
testl
cmp
push
cmp
addr16
mov
repnz
pop
cltd
sub
test
sub
or
rorl
mov
orb
push
or
add
or
push
jg
popf
hlt
in
xchg
adc
stos
lock
push
fstps
je
push
sub
cmp
gs
mov
dec
sbb
inc
jne
aaa
stc
das
cmp
mov
mov
outsl
push
or
mov
es
and
or
invd
std
aaa
das
pusha
insb
and
shll
pop
jle,pn
ljmp
outsb
dec
mov
clc
cmp
into
dec
fldenv
fwait
pusha
mov
and
push
fwait
dec
push
into
lods
outsb
sub
testl
aam
mov
sub
ds
enter
lock
fsubs
out
mov
in
sar
mov
sub
int3
je
ror
les
push
pop
call
push
std
cmp
lock
pop
cwtl
jns
test
push
shld
inc
out
icebp
test
mov
fidivs
jb
scas
fs
js
push
fnstcw
pop
shll
xchg
loope
in
clc
mul
insb
push
sbb
xor
adc
inc
cmp
iret
dec
sbb
sbb
xor
pushf
jg
push
cmp
lcall
inc
outsl
ss
mov
cs
nop
cmp
rolb
mov
inc
xor
dec
flds
inc
inc
cmp
sub
mov
jmp
or
repnz
push
in
push
aaa
fsubl
loop
shll
push
repz
cmp
int
test
out
lea
out
sbb
cmc
pop
pop
adc
int3
movsb
and
movsb
adc
scas
faddl
pop
jbe
ljmp
gs
repnz
sbbb
aaa
jge
cmpl
or
int
aad
das
mov
jle
in
inc
and
sub
xchg
popa
sub
and
push
icebp
stos
sbb
sub
cs
push
pop
sbb
adc
ds
fcomps
cmp
inc
stos
adc
xor
mov
pusha
mov
mov
cs
shlb
das
pop
mov
ljmp
aad
inc
test
stos
pop
jl
dec
mov
adc
xlat
call
adc
mov
mov
push
and
mov
movsb
push
aad
sub
fisubrl
xchg
adc
stos
jl
sbb
push
into
add
pop
xor
ret
into
or
mov
inc
jmp
jns
fiadds
jge
and
cmc
dec
test
push
shl
or
jmp
xor
push
loopne
push
sbb
fisttps
pop
inc
ret
sub
outsl
xor
into
dec
adc
out
xlat
sub
nop
inc
xlat
jne
mov
xchg
xor
stos
dec
mov
pop
xchg
xor
pop
in
inc
sarb
sub
outsl
ror
adc
cmp
int3
insb
jl
sub
mov
das
push
std
jmp
cwtl
pushf
jmp
cmpsb
int3
cmc
ret
cld
pop
mov
jae
outsb
jecxz
jb
inc
and
iret
outsl
jbe
jae
popa
popa
mov
gs
mov
dec
lcall
pop
add
jge
int
fidivrs
stos
pop
and
xor
icebp
into
sub
js
xchg
movsb
sub
lcall
or
dec
lahf
ljmp
adcb
jmp
sbb
sub
push
icebp
push
cltd
push
lret
jno
sbb
rol
aam
mov
mov
jle
inc
std
mov
jae
das
out
pop
mov
icebp
push
testl
daa
mov
out
aad
inc
xchg
or
add
sub
push
scas
cld
jg
shll
pop
outsl
repnz
sahf
lret
or
or
aaa
popf
daa
je
mov
orl
test
add
xchg
xchg
rcl
in
adc
cmpsb
xchg
sbb
int
aam
xchg
data16
rcrb
shrl
lret
or
xlat
mov
xchg
fimuls
jae
pop
fsub
dec
xchg
push
shll
cmp
cmp
out
imul
insl
iret
shlb
sahf
xchg
dec
cmp
pop
test
xchg
jne
pop
add
aas
les
out
sbb
pop
bound
mov
ficomps
loope
push
mov
nop
mov
or
push
sahf
push
shlb
int
sub
mov
push
mov
mov
mov
jmp
out
cmpsl
ss
loopne
fs
mov
or
jecxz
sub
or
movsl
sub
lahf
ds
jmp
or
xchg
or
cmp
mov
ljmp
call
clc
cmp
add
loop
insb
arpl
add
pop
push
popf
pop
sbb
je
mov
cmp
in
pushf
xlat
cmp
dec
add
stc
sbb
das
fwait
xlat
movb
cmp
cwtl
fnstenv
sub
dec
push
push
out
fldcw
daa
ds
jo
popa
and
inc
shll
pusha
mov
jle
pop
and
mov
xor
adc
push
mov
jno
outsb
dec
xchg
lahf
lea
lock
vpcomw
mov
sub
jae
jbe
std
mov
push
xchg
xchg
pusha
xchg
and
loope
add
push
mov
cmp
fwait
stc
push
mov
xor
inc
mov
push
dec
dec
mov
jmp
or
pushf
xor
sbb
inc
cmp
stos
mov
cmp
rol
loopne
cmp
or
or
enter
dec
fldt
popf
jle
iret
into
mov
adc
lods
mov
pop
push
pop
push
sti
push
sbb
dec
sbb
inc
xor
xchg
add
incb
xor
subb
mulb
lcall
sbb
mov
imul
adc
pop
push
arpl
sbb
dec
stos
movsb
fnstsw
fdivrs
fsubp
mov
mov
jle
call
xchg
jnp
sub
xor
cltd
js
xor
inc
pusha
orl
push
clc
push
int3
jbe
loope
jecxz
jne
jne
outsl
fwait
dec
es
fnstcw
adc
adc
repnz
add
std
pop
pop
dec
je
and
adc
call
push
mov
xor
xchg
cli
adc
xor
fmulp
mov
push
test
mov
call
mov
xorb
inc
jbe
xor
mov
add
jge
xchg
shll
push
leave
aaa
jns
inc
mov
push
cmp
pop
ret
adc
dec
sub
push
addr16
mov
xchg
fisubl
bound
xor
inc
add
and
lods
dec
mov
outsb
out
imul
scas
xchg
sub
rcr
jbe
xchg
mov
cli
xchg
mov
nop
pop
pop
test
div
xchg
andb
lods
sbb
adc
cmpsb
out
cmc
out
test
ljmp
rorb
jg
jae
popf
jecxz
adc
xchg
pop
add
gs
hlt
out
shlb
cmp
mov
adc
ror
sub
outsb
fcompp
xchg
jb
into
test
inc
push
shl
dec
ret
lods
pop
aaa
inc
pop
pop
pusha
jp
jmp
cwtl
ds
sbb
pop
xor
xor
adc
rclb
or
movsb
add
gs
xor
lret
aam
ss
jno
mov
addb
inc
push
jmp
fwait
pop
in
sahf
scas
test
or
push
fistps
add
xor
fdivs
push
sbb
shll
aaa
inc
xchg
xchg
shlb
mov
xlat
cmp
mov
push
enter
mov
xor
sti
xor
or
pop
mov
shrl
bswap
sahf
addr16
add
push
je
negb
in
pop
dec
jl
test
sub
dec
dec
push
push
add
lds
jne
enter
push
aas
cmp
push
icebp
pop
sbb
or
jnp
ljmp
std
and
cmpsl
mov
xchg
sub
aas
and
das
jg
push
icebp
shl
stos
inc
push
mov
insl
xor
insl
pop
nop
and
jecxz
jnp
sbb
mov
mulb
mov
jbe
daa
inc
xchg
popa
inc
mov
hlt
addr16
adc
les
aad
and
mov
imul
cmpsb
cs
iret
dec
mov
stos
sub
mov
aam
scas
or
jmp
addl
jecxz
mov
add
sub
sub
pop
inc
xor
in
cmpsl
dec
nop
cli
mov
out
std
lret
into
loope
mov
jmp
outsl
inc
xchg
out
push
xchg
mov
inc
pop
cld
frstor
mov
adc
adc
rclb
pop
pop
mov
mov
ljmp
scas
jne
cmpsl
push
and
push
cmp
mov
push
push
push
xchg
daa
aas
stc
push
mov
adc
popa
stos
loop
call
mov
or
push
int3
aad
shll
int
mov
mov
xor
loop
lcall
xchg
xchg
dec
in
jl
add
and
fs
out
pminsw
cmp
pop
cmp
lods
dec
cmpsb
cmp
pop
jae
push
aam
dec
jbe
in
fbld
imul
adc
jno
cmpsl
jecxz
fiaddl
pop
adc
and
sarl
mov
dec
sar
cmp
xor
and
jnp
cmp
int3
test
ss
cmp
outsl
inc
push
jp
loop
lea
mov
pop
outsb
mov
xchg
and
movsl
inc
pushf
xchg
adc
mov
fcompl
xchg
mov
ljmp
lock
jl
cld
fisubrl
cmpsl
fs
pushf
sub
adc
mov
mov
xchg
inc
push
xor
jo
rcrb
imul
push
aaa
sub
ljmp
mov
ja
loopne
sub
jecxz
pushf
repz
stc
cmp
repnz
adc
mov
cmp
ret
add
sub
mov
jbe
inc
mov
ret
jo
mov
add
xor
mov
insl
pusha
inc
xor
pop
mov
cmpsl
repnz
inc
adc
dec
pop
cltd
sbbb
push
movsl
dec
scas
xchg
daa
sbb
negl
xor
mov
mov
inc
mov
jle
cmp
dec
xchg
mov
jg
mov
fcoml
test
scas
pop
call
addl
adc
push
stc
loopne
xor
sti
cmp
inc
mov
mov
sub
xchg
adcl
cld
xchg
xor
lea
adcb
sub
aaa
sbb
sarb
jns
fwait
adcb
sub
fimuls
dec
stos
lahf
popl
fnsave
loope
jmp
fnstsw
andb
pusha
pop
mov
and
jnp
shll
add
rcll
or
push
mov
dec
pop
fucomi
cmp
btc
jg
push
xorl
fbstp
movsl
xchg
nop
mov
xchg
out
cltd
push
cli
and
adc
push
scas
aam
cmpsl
test
mov
inc
out
and
lahf
popl
pmulhuw
and
xchg
loop
adc
arpl
mov
mov
cwtl
mov
hlt
mov
jmp
in
insb
cmp
xchg
pop
adc
cwtl
mov
pop
pushf
fisttps
ja
push
stos
dec
popa
push
push
hlt
insb
and
fisttps
int3
cmpsb
pxor
sbb
jle
mov
out
aam
mov
inc
insl
je
test
ret
pushf
xchg
mov
sti
aad
pop
popf
mov
mov
jle
aam
repnz
xchg
sbb
scas
fs
dec
mov
jle
adc
sbb
adc
test
mov
sub
push
xchg
mov
and
data16
popa
xchg
mov
outsb
in
sub
sbb
scas
jne
data16
inc
xchg
jno
in
adc
or
mov
push
mov
xor
arpl
or
ret
test
lock
inc
push
inc
xchg
mov
sbb
mov
sbb
xlat
add
into
push
mov
cmc
add
stos
iret
outsl
shrl
outsl
mov
mov
fcmovnbe
insl
popf
jmp
repnz
jmp
pop
sbb
in
sub
xor
fcompl
push
out
pop
cmp
aas
pop
ret
pop
cwtl
popf
inc
lcall
notb
adc
xor
jge
xlat
cwtl
xor
cmpsl
jmp
nop
mov
mov
push
dec
test
dec
dec
or
adc
push
sub
aaa
mov
add
mov
dec
cs
xchg
addr16
lahf
lock
aas
mov
mov
ljmp
cmp
xchg
es
jecxz
jbe
mov
mov
mov
fcompl
pop
stos
into
cmp
xchg
lods
into
push
mov
jne
rcll
and
pop
stos
add
shrl
lret
pop
mov
ljmp
outsl
jae
sub
jl
and
sbb
xchg
clc
out
sbb
pop
fsts
jnp
xchg
lret
sbb
bound
loope
xchg
sub
leave
sti
aad
cltd
pop
add
or
push
pop
xchg
repz
adc
pop
imul
lahf
out
cli
mov
cmp
jl
lahf
adcb
cli
fmuls
sarl
inc
mov
add
pushf
sbb
pop
push
push
daa
adc
sub
faddl
push
sbb
mov
stos
inc
push
mov
cmp
out
sub
test
mov
mov
mov
or
pop
cmpsl
sub
sahf
jle
fdivrl
lds
dec
or
add
in
xor
xor
popa
test
mov
dec
sbb
ljmp
mov
test
cli
lcall
loope
mov
test
inc
sbb
das
lods
fbstp
lods
sbb
jns
pushf
cmc
and
scas
rcrb
stos
mov
mov
adc
dec
js
enter
or
add
lea
dec
inc
js
and
sub
sbb
imul
jns
dec
cld
cli
sub
add
loopne
sbb
push
sub
iret
adc
push
shll
sbb
cmp
dec
loop
movsb
jmp
idivl
and
add
push
fsubrs
pop
xchg
dec
xor
lret
lcall
xchg
sbb
dec
cmpsl
je
adc
lcall
cli
addr16
sbb
dec
mov
push
aas
add
sti
mov
push
push
ret
scas
pop
ret
pop
lcall
mov
dec
aad
subb
mov
mov
stos
pop
jmp
repnz
mov
and
adc
mov
xor
enter
inc
movb
push
xor
mov
outsb
mov
xchg
dec
sub
sbb
mov
int
xchg
or
mov
add
mov
scas
add
push
imulb
mov
ds
ja
frstor
pop
xchg
inc
in
jae
cmp
inc
es
adc
gs
out
movsb
pushf
repnz
scas
push
imul
xor
adc
or
ret
rorb
xchg
sbb
mov
sub
loope
mov
mov
sub
mov
sub
aaa
imul
inc
xchg
sbb
int
idivl
addr16
stc
int
cmp
or
icebp
mov
in
mov
stos
jle
add
xor
and
xorb
mull
test
ja
lods
fstpl
jb
dec
jle
inc
mov
fwait
push
addl
aad
fistpll
jnp
imul
mov
std
inc
mov
jecxz
fwait
std
mov
in
sub
inc
push
inc
pop
xchg
adc
pop
orl
inc
aas
xor
aas
data16
stos
mov
fsubs
cmp
out
test
repnz
sbb
pop
mov
sub
jnp
sub
lods
negb
pushf
into
add
gs
jo
jecxz
mov
test
mov
or
int
mov
pop
push
fcompl
orb
mov
loop
inc
out
rcrl
popf
dec
lahf
int3
or
je
xor
sbb
mov
int
enter
imul
adc
lock
cmp
adc
xor
into
jmp
ret
push
jg
vpextrw
lds
lcall
dec
cmc
js
jmp
aam
in
sub
or
push
push
cltd
mov
jns
ret
xor
bound
adc
arpl
xor
xlat
or
inc
or
pop
incb
imul
fisttpl
cmpsb
push
pop
xchg
xchg
pop
es
inc
addl
adc
xchg
mov
icebp
out
jbe
sar
je
push
fcoms
andl
mov
jmp
test
inc
adc
in
pop
dec
push
pop
xor
loop
cmp
bound
js
fists
add
cmpsl
sub
jb
dec
mov
mov
lock
mov
xchg
mov
pop
jp
enter
je
push
fnsave
add
mov
push
jp
enter
xor
mov
xchg
jb
in
sbb
lcall
sbb
jno
sbb
into
mov
fwait
idivb
orb
cmpsb
filds
jl
int
push
stos
in
flds
mov
data16
mov
mov
ret
fwait
dec
mov
mov
cmp
lret
and
sub
sarb
dec
or
mov
dec
vpmacssww
ret
add
aad
ja
cmpsb
cmc
es
jge
mov
mov
mov
in
add
mov
mov
outsl
pusha
xor
fldl
and
insb
sbb
adc
out
stos
mov
push
xchg
imul
xor
xchg
jg
out
xor
scas
lods
mov
jno
orb
xorl
filds
push
addr16
aam
out
stos
sbb
inc
pop
xor
cmp
repz
je
jmp
popa
xchg
in
cmpsl
mov
gs
pop
sbb
adc
jb
mov
bound
dec
cmc
and
aas
shl
or
sbb
xor
xor
es
xchg
test
fld
and
xor
lret
cmp
jg
push
loop
mov
and
bound
sub
adc
xlat
test
into
jge
fcmove
sub
cmp
test
pop
push
sub
xchg
stos
lea
pushf
mov
lods
mov
dec
mov
fnstcw
shlb
leave
xchg
imul
das
enter
int3
cmc
fwait
out
lods
idivl
pop
and
xor
cs
das
outsl
push
stc
hlt
pop
andb
pop
inc
and
xor
adc
addr16
mov
gs
pop
fidivs
ss
fidivs
mov
les
cmp
push
mov
movb
ret
les
int3
or
mov
repnz
popf
nop
cmpsb
push
or
or
and
cmp
adc
les
mov
into
adcb
pop
les
dec
or
push
mov
in
mov
outsb
jge
jno
xlat
pusha
adc
push
adcl
sbb
nop
dec
test
out
in
sub
sbb
mov
xor
push
loopne
cmp
test
xchg
push
shrl
fdivrs
mov
xchg
scas
filds
rcll
aam
out
dec
sub
sub
mov
insl
fwait
mull
pop
les
out
call
inc
imull
and
sbb
rcll
fcomps
inc
inc
jno
sub
aad
xor
lahf
and
stc
jno
push
scas
and
out
sbb
pop
mov
sbb
mov
adc
imul
pop
adc
push
ss
cmpsb
adc
cmc
fnsave
cld
mov
in
adc
mov
dec
jbe
sbb
jns
mov
sahf
popf
or
lret
pop
in
imul
jb
nop
repz
ljmp
cmp
push
cwtl
sbb
adc
std
mov
push
bound
popf
pop
stc
inc
loopne
push
out
scas
mov
ds
mov
adc
addb
sub
test
dec
and
int3
jle
vpunpckhqdq
xchg
hlt
mov
rep
repnz
sbb
incb
rclb
mov
jb
pop
das
adc
inc
adc
iret
mov
pop
and
add
xchg
js
popf
fdivrl
inc
xor
xchg
sar
sahf
mov
movsl
fst
mov
popf
xchg
into
aam
push
cmp
and
xchg
lret
pop
loopne
icebp
jns
add
sbb
jl
pop
mov
stc
es
push
scas
gs
lret
pop
push
rcll
cmpsb
xchg
aam
repz
mov
cld
xchg
adc
iret
out
jmp
pop
or
movsb
inc
out
in
sbb
add
xchg
pop
je
out
popf
push
add
rcrl
loopne
sub
inc
sub
mov
xor
cli
adc
stc
cltd
jle
xchg
inc
jmp
cmp
sbbl
xchg
outsl
inc
jmp
push
pop
repnz
dec
xchg
out
adc
stos
inc
inc
cmovg
popa
add
les
in
fldt
outsb
ret
jae
cmp
xchg
mov
mov
cltd
gs
and
popf
inc
cmp
mov
fnsave
lods
das
sbb
add
xor
lock
mov
add
dec
mov
cli
leave
ret
ficoml
stc
sub
loopne
cli
push
inc
mov
adc
or
inc
sbb
test
sub
rorb
pop
pop
or
inc
or
lods
xchg
mov
cmpsb
lret
cli
stos
faddl
outsl
fisubl
aaa
in
dec
mov
stos
es
clc
push
push
xor
mov
dec
gs
fs
fwait
pop
pop
mov
cmp
imul
shll
in
popa
jns
xchg
pop
jno
iret
xor
enter
outsb
sbb
inc
sbb
lcall
and
sbb
push
pop
mov
fcomi
xor
sbb
xchg
sub
pop
or
rolb
mov
mov
and
cld
adc
mov
dec
dec
mov
lods
daa
scas
jg
sbb
imul
sub
scas
pop
cmp
pop
sbbb
sahf
xchg
je
dec
lcall
xor
xchg
cltd
cmp
sti
mov
repnz
inc
mov
outsb
xor
pushf
mov
cmp
inc
clc
xchg
jg
jmp
sbb
xor
fists
daa
orb
mov
enter
lcall
shl
sbb
fcompl
int3
icebp
or
rclb
xor
and
adc
leave
shlb
lret
xor
mov
push
mov
popa
fwait
sub
fsubp
mov
insl
addr16
push
xchg
scas
fildll
mov
cmpsb
fistpl
lea
adc
lock
dec
iret
out
mov
mov
rcrb
push
in
shll
inc
mov
imul
mov
clc
into
mov
test
lock
insb
aaa
xor
xchg
lret
ljmp
in
jne
pop
push
jmp
stos
xor
xchg
repnz
pop
aaa
xchg
int
pop
cmc
jmp
cmp
in
rorl
pop
inc
dec
sahf
xor
das
jbe
nop
sbb
sbb
adc
and
push
mov
add
cmp
or
lock
shr
cmp
out
jmp
dec
popa
outsl
and
mov
sarl
xor
pop
mov
scas
shl
lret
mov
idivb
fldenv
pusha
sbbl
sti
jmp
jl
cmpsb
sub
cmpsl
pop
sub
outsl
fsubs
sti
hlt
xor
pop
mov
pusha
mov
and
enter
mov
shrl
mov
out
cmpsl
data16
shlb
add
pop
fadds
adc
call
mov
dec
popa
scas
mov
pop
dec
pop
push
into
clc
cmpsb
pop
int
call
pop
or
sub
xor
mov
inc
pop
sub
stos
sti
or
bnd
push
sbb
lea
roll
scas
movsb
add
adc
ss
aam
rcll
out
adc
sahf
jbe
pop
jne
sbb
lock
or
ret
xor
and
cmp
or
imul
aam
fmull
cmp
mov
addr16
arpl
pop
imul
xchg
stos
adc
mov
xor
sub
sahf
cmp
test
mov
insb
imul
loop
data16
or
or
lea
call
jge
stos
lcall
mov
in
enter
lea
fldl
out
es
gs
sub
pop
mov
mov
or
mov
lret
and
std
jbe
or
inc
into
jb
jge
or
daa
xorb
es
inc
hlt
js
inc
push
hlt
sbb
sub
mov
stc
movhps
cwtl
xor
cmp
cmp
mov
xchg
ffree
mov
sub
and
cmc
xor
je
shll
loop
out
xchg
sub
repz
mov
add
adc
xchg
pop
stos
jo
lea
loopne
cwtl
fbld
sub
mov
loope
mov
jmp
or
push
pop
test
xor
mov
fiaddl
lods
sbb
mov
sub
mov
jo
push
sbb
dec
jg
cs
pop
lods
bnd
lahf
sub
imul
js
dec
scas
mov
xlat
leave
and
fs
mov
cmp
addb
jne
sbb
pop
out
cmpsl
pop
rol
adc
inc
test
and
and
rcr
in
jmp
in
test
or
pushf
dec
inc
jge
mov
aaa
lods
ljmp
xchg
imul
jno
stc
add
das
mov
mov
outsb
or
push
xchg
orb
mov
daa
push
push
out
xlat
xor
aas
inc
cmp
dec
mov
mov
mov
je
je
rcl
mov
negb
inc
iret
adc
aad
andl
sub
jmp
aam
pop
sbb
and
mov
mov
test
pop
sbb
call
xor
lahf
mov
hlt
mov
mov
movsb
mov
int3
into
and
es
cmpsl
pop
adc
mov
aaa
cld
nop
int
mov
sub
loop
shrb
inc
dec
pop
mov
push
repz
jge
pop
faddl
mov
bound
leave
nop
repnz
dec
add
adc
stc
test
jbe
mov
xchg
popa
sbb
ret
pop
mov
scas
mov
js
mov
js
mov
scas
jge
out
das
and
imul
int
sub
movsl
mov
sti
or
movsl
mov
inc
nop
inc
insl
repnz
dec
jge
sahf
dec
xchg
sbb
jns
or
adc
add
arpl
nop
fistps
mov
mov
or
sbb
xchg
adc
mov
xor
push
add
out
dec
cmc
out
jmp
les
pop
pop
fdivp
enter
mov
or
lahf
dec
mov
cmpsb
movsb
aas
mov
inc
mov
fstpl
or
jl
pusha
adc
aas
cmc
or
inc
jb
jno
cmp
jne
enter
jl
adc
shl
or
int
mov
jae
outsb
push
and
es
fisubl
jle
xor
jne
or
popa
loopne
int3
adc
pop
fwait
nop
fdivp
cmpsb
inc
or
addr16
mov
jbe
sub
mov
dec
jb
mulb
push
add
mov
jo
cmp
cmpsl
pushf
push
mov
fwait
inc
cld
ss
cld
loopne
sbb
mov
ror
repz
int
mov
pop
inc
jns
and
push
jbe
movsb
xchg
mov
sub
imul
dec
adc
cmp
xlat
loopne
or
add
mov
addr16
cwtl
sbb
adc
int
pop
xchg
cmp
popa
push
xchg
sbb
inc
in
inc
cmp
xchg
xor
mov
cmc
leave
cwtl
sub
mov
outsb
sub
lret
push
mov
pop
fcmovnbe
mov
add
jmp
xchg
mov
mov
push
xchg
or
mov
sbb
gs
jbe
inc
lods
les
mov
rol
sbbb
pop
fnstenv
sbb
movsl
cld
or
pop
pause
pushf
ds
test
push
fsts
mov
jb
retw
cmp
cwtl
push
push
pop
sbb
xadd
or
push
or
das
xor
adc
cmc
loopne
std
mov
jnp
lret
dec
mov
mov
out
imul
add
movsb
mov
dec
orl
mov
jae
jle
mov
repnz
aam
in
movsb
out
dec
popf
jo
aad
xor
sahf
mov
jmp
shlb
call
and
inc
lods
xchg
adc
lock
adc
push
jg
mov
fdivrl
lods
sbb
popf
inc
and
mov
test
dec
jno
inc
or
dec
aas
and
xchg
cmpsl
cmp
xor
shl
jns
pop
mov
mov
xchg
test
mov
jecxz
jle
ret
std
jae
xor
lret
popf
out
inc
fs
icebp
das
enter
cmp
rcll
movsb
paddusw
mov
test
or
cmp
cmpl
ret
dec
into
pop
mov
push
popf
test
mov
cmp
les
inc
fcompl
sbb
inc
pop
mov
aam
shll
xor
fwait
cld
data16
into
push
stos
insl
call
decb
mov
mov
add
mov
dec
xor
aaa
lcall
inc
sbb
or
mov
es
push
int
lock
xor
jp
loopne
xor
aad
add
shll
ret
fcmovnbe
popf
jecxz
loop
lds
lock
adc
xlat
dec
sub
test
xchg
pop
fdivp
ss
mov
push
adc
frstor
mov
nop
andl
push
popa
mov
push
jbe
mov
movsl
rclb
mov
fwait
leave
test
mov
xchg
in
jmp
or
sub
mov
imul
push
lea
mov
ret
xor
jg
cmp
cld
insb
and
xchg
rol
stos
mov
lcall
call
mov
aad
cmp
add
sbb
leave
mov
inc
js
jecxz
mov
adc
jp
sti
mov
pop
pop
fs
in
or
dec
cmp
cmp
notl
pushf
jno
mov
mov
jno
and
xor
fs
stos
push
fisttps
pop
xor
fstl
outsb
add
jg
leave
inc
mov
mov
testb
sbb
rcrb
dec
and
mov
inc
push
clc
cli
fucomip
pop
cmp
inc
add
adcl
outsb
push
rcr
les
nop
xchg
dec
adcb
jecxz
cwtl
jbe
sub
mov
dec
or
movsl
inc
dec
mov
dec
test
dec
fs
mov
sbb
shlb
jmp
test
inc
jecxz
push
and
scas
movzbl
jnp
sbb
mov
pop
test
in
or
pop
cmpsb
lea
inc
test
or
xchg
push
incl
adc
xchg
loop
jg
fnstcw
in
test
or
mov
and
notb
and
pop
enter
popa
les
and
jl
push
test
sbb
flds
cmpsl
lcall
xchg
sti
inc
mov
jne
add
mov
cmpsb
test
mov
enter
in
inc
mov
xchg
mov
mov
lock
sahf
sub
sub
pop
inc
push
pop
mov
std
pop
add
pop
push
int3
int
ret
jl
xor
fsubrl
pushf
ret
icebp
sub
mov
or
or
xchg
dec
frstor
imul
out
cltd
scas
loopne
jecxz
pop
insb
mov
ret
and
mov
mov
shlb
and
imul
mov
orl
movsb
sahf
nop
stos
sahf
out
sub
xlat
in
mov
push
aaa
push
inc
cmc
in
loop
jbe
mov
fsubrs
ja
mov
aam
pop
cli
ljmp
or
outsl
js
movsl
mov
and
push
mov
inc
repz
es
xor
mov
iret
dec
aaa
data16
cltd
xor
pop
in
iret
test
pop
mov
out
cmp
rorl
bound
lock
aas
sahf
cmp
fsubrl
mov
aam
inc
sbb
mov
lret
dec
in
xor
mov
ds
mov
xchg
and
movmskps
out
push
cmp
add
insl
and
stc
lret
outsb
cs
inc
stc
loop
push
or
pop
js
data16
stc
mov
aam
adc
inc
xor
sbb
addr16
stos
pop
insl
pop
push
jne
mov
je
ret
mov
sti
andb
push
sub
sub
rol
or
movsl
fbld
pop
lret
add
pop
mov
adc
cwtl
xor
jns
out
fsubs
push
aad
ret
push
push
push
push
inc
adc
scas
adc
leave
xchg
cmp
pop
xchg
aaa
dec
add
jmp
fldl
inc
inc
xchg
mov
lahf
mov
sbb
cmp
subl
mov
sub
test
std
jne
mov
stc
repz
push
adc
pop
out
cltd
faddl
and
dec
or
xchg
int3
or
pusha
out
out
lcall
xchg
push
stos
js
imul
sub
cmp
push
inc
ljmp
in
cmp
stc
repz
mov
push
inc
xor
out
int
lods
pop
jo
clc
out
fwait
in
xor
jg
je
mov
inc
dec
add
xor
lret
dec
and
bound
in
lds
scas
mov
sbb
je
inc
dec
jns
stc
sarb
imull
xchg
pop
sbb
mov
std
fsts
js
and
iret
xlat
mov
test
xchg
mov
std
ret
or
es
lea
sbb
outsb
push
and
mov
mov
pop
es
int
cld
test
pop
test
cmpsb
adc
push
lahf
dec
mov
faddp
jns
sbbb
mov
adcl
pusha
into
jl
sbb
mov
insl
xchg
mov
hlt
pop
push
xor
or
sub
or
xlat
xchg
xchg
loope
jecxz
jae
push
pop
mov
lret
out
xchg
mov
adc
mov
mov
xor
fstpt
push
add
sub
addr16
ljmp
mov
pop
ljmp
sub
repz
adc
data16
mov
enter
cwtl
daa
xor
and
inc
xor
inc
inc
mov
jmp
rorb
out
dec
push
cwtl
mov
cs
cmp
add
daa
mov
popf
daa
in
push
popf
in
mov
dec
mov
dec
cltd
fbstp
call
jnp
and
cmpsb
lcall
pop
test
rol
add
lock
mov
dec
inc
sub
and
ss
adc
jp,pt
ficoms
xchg
jp
js
cmpsb
fsubr
lods
inc
cmp
outsb
iret
call
mov
and
adc
out
mov
push
aad
loop
dec
es
xor
mov
pop
lods
ficoms
push
mov
push
pop
lahf
fstpt
sbb
repz
cmp
adc
xor
mov
push
xchg
jae
sti
lods
ret
test
sbb
call
fists
jbe
das
and
jns
fisubs
push
imul
rcrb
inc
repz
mov
xor
into
or
jp
inc
adc
inc
test
mov
xchg
mov
push
fcompl
cmpsb
stos
xor
testb
enter
outsl
fnstcw
stos
mov
insb
sbb
or
out
pop
adc
hlt
cmp
mov
scas
shr
mov
or
mov
mov
push
dec
mov
jg
push
xchg
inc
mov
daa
or
pop
leave
jl
jp
ds
pop
jecxz
push
mov
xor
popa
xlat
xor
dec
sub
mov
lcall
push
mov
push
notb
loopne
sahf
loope
je
and
mov
sub
bound
add
cmpsb
push
pop
ljmp
and
sti
dec
in
push
xor
fstpl
lods
lea
cmc
pushf
mov
mov
and
out
or
popa
shld
out
addr16
cmp
fisttps
pop
loopne
push
pop
sahf
xchg
sarb
int
mov
insl
fistpl
xchg
and
lea
jbe
pusha
jns
mov
imul
fcoml
sub
lahf
leave
hlt
push
sbb
fsubrl
fbstp
dec
aaa
andl
or
out
pusha
fldcw
pushf
adc
pop
dec
xor
cld
jns
xchg
push
sub
cmp
adc
movsb
and
push
notb
add
push
inc
push
or
mov
dec
int3
nop
stc
test
or
jge
and
mov
adcl
not
pop
inc
lods
mov
cmp
stos
jmp
xor
sub
sbb
leave
negb
sub
out
pusha
int3
cmpb
push
push
clc
pop
add
mov
mov
cmpsl
orb
or
fs
sbb
adc
sbb
sbb
outsl
in
outsb
in
add
sub
sarl
fcoml
inc
inc
clc
xlat
out
addr16
lds
xchg
sti
sub
pop
imul
imul
inc
dec
xor
adc
rorb
sub
rclb
add
mov
jne
and
insb
fwait
jno
repnz
aad
mov
negb
pop
addr16
inc
mov
push
mov
fs
test
fistpll
jns
pop
mov
leave
cmp
jne
sub
rolb
and
push
pop
inc
or
push
mov
dec
mov
add
rclb
inc
and
jnp
xor
pop
pop
cmpsl
sub
mov
popf
mov
inc
sub
shlb
shrb
arpl
dec
ljmp
test
pop
adc
xor
cmp
sti
divb
enter
mov
or
imul
push
mov
sbb
jle
gs
adc
out
sub
shr
inc
mov
iret
push
in
mov
inc
mov
inc
inc
mov
cmc
outsb
xor
mov
cltd
mov
mov
outsb
orb
mov
dec
mov
hlt
fmull
loope
add
mov
mov
lods
sbb
jle
mov
movsl
push
inc
inc
fs
mov
pop
dec
call
mov
imul
jge
mov
fdivp
pusha
mov
xchg
cmpb
jo
pop
vshufps
dec
aam
cmp
daa
cltd
mov
out
add
xor
outsb
push
cwtl
xor
addl
push
imul
mov
insl
rol
mov
out
sbb
pop
leave
icebp
movsb
test
and
push
push
pop
int3
ffreep
jae
fstpl
bound
pop
push
inc
outsl
lret
data16
mov
stc
js
cli
jge
addr16
lea
jns
jne
or
dec
inc
loope
or
or
jns
movsb
xchg
ljmp
adc
cmp
mov
ss
pushf
xchg
sbb
jne
popf
xchg
xlat
dec
cmpl
stos
lods
imul
out
xor
lcall
add
repz
scas
stos
push
mov
popa
mov
mov
cmpsl
fwait
sbb
insb
jne
mov
push
xor
add
pop
into
aad
ss
icebp
and
cmp
dec
dec
cmp
and
loopne
fistpl
push
mov
xchg
js
xchg
cmc
in
cmp
cs
in
cwtl
pop
outsb
test
inc
clc
call
packssdw
sub
ret
mov
lahf
xchg
mov
dec
repz
out
pop
mov
dec
imul
into
sbb
xor
push
jmp
scas
push
fimuls
jge
adc
xor
inc
add
sub
orl
icebp
add
add
leave
repnz
out
cmp
sbb
std
xchg
imul
ljmp
or
mov
mov
fsubrp
jl
fldenv
shl
jmp
je
jno
add
pop
xchg
das
inc
int
out
mov
and
dec
add
inc
cmp
sbb
cmp
push
test
push
fimuls
push
mov
add
repz
xchg
out
ds
sahf
fadds
mov
sbb
inc
mov
sub
int3
test
push
mov
xchg
faddp
xchg
inc
sbb
cmp
jecxz
adc
and
in
incl
jae
jmp
and
inc
sbb
shr
jmp
nop
adc
fdivs
adc
push
jno
sub
xchg
cli
mulps
jecxz
out
lahf
mov
nop
pop
sbb
fcomip
sbb
jge
pop
shlb
repnz
sub
push
mov
sahf
xchg
add
cld
cmc
mov
push
dec
pop
popf
idiv
push
pop
in
repnz
lret
out
xchg
std
cltd
sahf
in
cld
jge
sbbb
lea
and
sub
arpl
lods
out
fs
outsl
jae
xorb
mov
jns
std
mov
pop
push
cmp
scas
pusha
dec
test
pushf
cmp
inc
push
shrl
lret
inc
lret
aaa
jmp
jb
enter
sub
es
and
cmpsl
mov
cli
sahf
xchg
push
cs
push
lods
xor
int
adc
std
loopne
daa
jns
xor
dec
xchg
xor
sbb
mov
mov
dec
xchg
sub
lods
movsl
jmp
mov
das
jecxz
sub
dec
test
or
test
imul
in
daa
insb
pop
jne
leave
std
aad
lret
xlat
mov
notb
inc
add
pushf
jp
mov
in
enter
and
lret
adc
push
sbb
xchg
mov
addr16
sbb
ficompl
jge
outsb
cmp
sub
mov
cs
adc
pop
add
pop
jbe
adc
dec
insl
out
lret
mov
lret
cmp
add
imul
cltd
lahf
pop
scas
sub
ljmp
incl
jae
cmp
xchg
jecxz
jl
adc
or
adc
mov
sbb
jns
cmc
dec
sbb
jg
add
movsl
xor
aaa
fs
jne
iret
dec
cmp
fwait
popl
dec
testl
movsb
adc
add
add
rcrl
pop
int
mov
sbb
stos
add
cmp
add
pop
pop
sbb
and
nop
push
sbb
popf
mov
mov
push
dec
shrb
gs
cmp
repz
inc
rcrb
pop
xchg
xchg
push
xchg
dec
mov
push
data16
add
or
adc
cmp
adc
aaa
xor
test
push
jge
outsb
or
loope
mov
mov
or
loop
enter
pop
fucomip
mov
dec
inc
dec
outsl
xchg
mov
dec
sti
dec
cmpb
das
inc
cmpl
pop
and
mov
or
adc
lea
out
push
mov
cmc
outsl
or
dec
fcom
inc
lret
fwait
mov
mov
js
movsl
lcall
jnp
cmp
cmp
mov
inc
lods
push
mov
jo
push
mov
fildl
lcall
xor
repz
pop
mov
xchg
push
test
loopne
add
lcall
ficoms
inc
imul
xchg
and
mov
jecxz
movsl
cwtl
sbb
xor
out
xchg
imul
outsb
ficompl
ss
sub
bound
rorl
je
int
inc
hlt
and
roll
ficomps
pusha
sub
stos
lods
fisttpll
addr16
jbe
mov
mov
jae
xchg
jg,pn
pop
jp
adc
sahf
shrb
in
adc
mov
loop
pop
pusha
daa
in
jns
add
jae
xor
mov
fnstcw
test
pop
and
jmp
mov
bound
leavew
inc
js
push
xor
sub
in
ljmp
jne
pop
sbb
sahf
imul
push
stos
ret
repnz
cmp
pop
mov
mov
scas
and
jmp
mov
stos
xor
lahf
loop
dec
sub
ret
int3
inc
pop
cs
lret
dec
stos
mov
or
sub
in
mov
mov
sbb
imul
sub
mov
mov
sub
jp
popf
fimull
dec
test
pop
xchg
jns
push
xor
daa
xchg
xchg
clc
pop
fistl
stc
sub
fcompl
xchg
mov
lds
dec
mov
ret
scas
into
faddl
sbbl
popf
dec
iret
fucomi
mov
scas
jge
add
jo
aad
ljmp
adc
push
and
les
adc
lods
out
popf
add
push
jae
sbb
stos
mov
gs
dec
adc
cs
mov
iret
mov
jl
push
xchg
jg
push
insb
dec
xor
sbb
icebp
sub
scas
sub
sub
pop
popa
cmp
push
jg
int
arpl
or
dec
in
iret
mov
jmp
and
lock
les
mov
loopne
jns
xchg
add
mulb
roll
sub
pop
mov
aad
cmp
xchg
cmpsb
cmp
sub
inc
mov
cmpsl
cs
adc
sbb
xchg
mov
shlb
fcmovnu
lcall
sti
jecxz
bound
dec
xchg
mov
xor
inc
mov
ret
jg
dec
icebp
push
ret
imull
fidivrl
cmpsb
push
push
insl
dec
sub
xor
cmpsb
dec
test
mov
shlb
pop
test
xchg
inc
adc
sub
mov
aaa
jae
aam
dec
scas
and
adc
mov
jb
notb
in
or
lods
addr16
mov
dec
cmp
js
sbb
xor
loop
sarb
inc
shrl
jle
sbb
cmpl
out
jmp
inc
cmp
addr16
movsl
mov
loop
push
jmp
mov
int
fs
sub
mov
ret
in
or
push
pop
cmp
jl
jg
sub
adc
dec
fwait
pop
dec
loop
add
xor
fmuls
movsb
lods
daa
xchg
imul
lods
cli
outsl
imul
sti
inc
roll
or
xchg
loope
insb
aad
sar
fsts
xor
xor
pusha
dec
test
stos
les
and
mov
add
stos
gs
or
stos
mov
mov
mov
mov
fsubr
inc
pop
inc
or
pop
les
fld
mov
movsl
shlb
out
cmp
repnz
rorl
jb
dec
sub
test
mov
sbb
jp
int3
incl
cli
mov
fiaddl
sbb
jmp
mov
pop
and
and
pop
push
loopne
out
dec
test
inc
imul
cs
push
outsl
xchg
scas
enter
push
adc
jnp
xor
fwait
mov
jns
fldt
mov
out
cld
sub
and
mov
pop
aad
rcl
outsb
je
out
mov
dec
and
add
sbb
out
push
les
das
dec
es
clc
fidivl
push
add
insb
mov
or
and
test
aas
dec
outsb
and
inc
sbb
pop
out
mov
adc
in
pop
hlt
sub
fisubrs
in
push
jb
sbb
sahf
test
bnd
xor
data16
in
add
dec
sahf
add
cmpl
shrl
mov
pop
dec
mov
out
fldt
rcll
mov
add
sbb
xchg
sub
ficoms
es
test
jmp
push
loopne
xor
pop
mov
mov
lahf
lret
imul
push
add
js
aad
inc
mov
pop
xchg
fcmovne
lds
cli
imul
cmp
cmp
lods
mov
xchg
adc
push
in
stos
movsl
ss
in
sti
pushf
stos
test
fidivrs
dec
popf
push
sub
nop
ja
mov
mov
pusha
fistpl
xor
inc
jb
and
insb
gs
cmp
mov
cmp
aad
arpl
and
in
mov
jmp
dec
int
or
js
sub
inc
outsb
notb
sbb
rorl
or
inc
push
aas
mov
stc
inc
mov
inc
movsb
std
mov
and
js
ret
sbb
fdivrl
fs
adc
pavgw
push
ret
jb
xor
pop
dec
inc
jl
cmp
xchg
dec
sbb
mov
mov
insb
scas
fwait
jae
imul
xchg
jl
outsl
xchg
sti
lahf
iret
insb
cmp
dec
sahf
xchg
imul
test
dec
mov
negl
pavgb
std
sbb
gs
adcl
outsb
mov
xchg
dec
jnp
jle
cmpsl
xchg
and
mov
repz
mov
mov
push
into
cmp
and
sbb
pop
xchg
inc
push
xor
test
dec
xchg
xlat
rcr
xchg
mov
sub
cmpsl
xor
push
jmp
and
sub
mov
sub
leave
mov
cmpsl
movsl
push
nop
inc
dec
out
ret
inc
mov
mov
imul
adcb
lods
pusha
mov
loop
fs
jg
sub
mov
imul
out
cld
fs
repz
dec
enter
subb
mov
pushf
into
jle
cmpsb
xchg
jbe
repz
cmp
insb
insl
lahf
out
out
jno
jmp
fsubrs
rclb
gs
inc
xchg
and
dec
fdiv
dec
add
sub
jbe
sbb
fwait
jo
fimull
stc
dec
pop
xor
subb
ss
push
fildll
bound
lcall
leave
push
mov
xor
pop
dec
xchg
cmc
mov
adc
icebp
or
mov
in
push
pop
cmp
jp
call
jmp
lret
mov
sub
shlb
mov
sbb
roll
push
ffreep
and
ss
jb
and
fyl2xp1
sti
xchg
mov
fistl
cmp
cmp
dec
or
inc
repnz
data16
fnstenv
shll
lea
sub
test
cltd
inc
std
mov
add
xor
inc
sub
inc
aam
or
xor
cmp
divb
xchg
aaa
out
adc
adc
movsl
push
mov
sbb
push
dec
add
movsb
adc
fistpll
mov
mov
stc
sbbb
xchg
icebp
hlt
in
adc
mov
popa
lret
out
adc
mov
and
and
in
mov
in
shll
sub
mov
push
roll
imul
dec
addl
mov
and
mov
push
imul
ret
pop
sbb
jmp
inc
sbb
cmpsb
cli
cmp
dec
dec
mov
sarl
cltd
xor
push
mov
mov
mov
or
push
dec
clc
jne
jl
into
int
mov
adc
add
cmp
pop
or
mulb
notl
sub
fisttps
in
aam
jno
jae
pop
movsb
inc
jecxz
pop
orb
jecxz
cmc
outsb
cmpsb
pushf
cwtl
fimuls
fwait
ja
pop
imul
ljmp
pop
xchg
cmp
js
imul
xor
les
cli
addr16
rcrb
mov
add
mov
xchg
bound
cmc
mov
subb
scas
jge
shlb
and
mov
in
ror
pop
dec
xor
or
arpl
movsl
cld
aad
icebp
fwait
xor
fcomps
or
cwtl
pop
jnp
sti
sub
mov
shlb
sbb
cld
rolb
nop
mov
lret
mov
push
in
int
loop
mov
sub
sbb
mov
lret
xchg
jbe
fst
js
lcall
sahf
repnz
inc
xchg
shlb
xchg
add
jae
jmp
push
insl
das
cltd
and
ljmp
sarb
add
repz
jne
mov
fisubl
mov
out
cli
or
cmp
pop
jne
jbe
push
lods
jo
jle
in
sbbl
leave
add
addr16
repz
mov
stc
cwtl
push
add
test
test
fwait
add
push
xor
xchg
repnz
pop
sbb
rcll
lret
sbb
andb
mov
pop
iret
outsl
xor
test
add
and
mov
divb
popf
ds
sub
sbb
fsub
cmc
int3
fidivrs
mov
sub
add
xchg
cmpsb
outsb
sub
lret
push
xor
sbb
xchg
dec
mov
cmpsb
call
fnstenv
fdivp
lock
lds
push
mov
xor
out
repz
sbb
mov
cld
repz
mov
mov
sub
insb
cmp
inc
or
jns
jb
mov
adc
int
inc
fstps
add
int3
js
mov
and
xchg
lcall
inc
popa
mov
jmp
xor
arpl
fcompl
fimuls
jae
fistps
lcall
xor
xlat
mov
and
jne
aam
cmp
mov
imul
sbb
ficompl
pop
jnp
dec
inc
jmp
xor
dec
mov
in
mov
mov
out
pop
cmp
pop
push
push
mov
mov
xor
or
dec
mov
call
rcrl
adc
cmp
mov
mov
addr16
cld
or
lds
add
imul
loope
notl
and
in
ret
mov
push
jl
shll
stc
stc
fwait
jl
pop
repz
jl,pn
mov
ret
pop
cltd
push
cmp
add
add
sub
pop
fsubl
jnp
dec
and
insl
ret
jb
inc
push
push
push
xchg
jp
jns
out
jne
pop
mov
jo
hlt
mov
or
and
sbb
push
dec
lret
and
jbe
scas
popl
jp
mov
dec
dec
sbb
push
cmp
dec
pusha
adc
mov
sbb
lock
mov
mov
icebp
sbb
scas
xchg
mov
mov
xchg
loop
dec
mov
and
mov
jmp
pop
test
scas
jp
jbe
inc
or
stos
sahf
lcall
out
aam
xchg
or
js
lods
jns
call
repz
fcomps
aaa
add
sti
sub
fs
dec
xor
mov
rclb
push
jo
mov
xchg
shll
push
mov
jnp
sbb
movsb
sahf
push
fsubs
pop
je
add
in
inc
add
orb
outsb
in
push
inc
testl
pop
xlat
int3
int
ficoms
les
adc
leave
aad
aas
jnp
push
inc
and
and
adc
jb
xlat
addr16
jp
push
aam
lods
pop
pop
push
icebp
jp
mov
sub
aas
inc
test
shrb
inc
and
stos
xor
repnz
dec
or
dec
std
push
lret
icebp
jno
pop
jg
mov
shl
sub
adc
divps
pop
fiaddl
lods
push
mov
pop
out
xlat
pop
adc
mov
call
xlat
xchg
mov
dec
out
sub
and
js
repnz
cmp
cmp
adc
xchg
pop
jle
lods
dec
dec
lret
repz
call
testl
cmc
andl
loopne
je
adc
mov
xor
lcall
xchg
ficoms
test
xor
call
inc
rcr
pop
jmp
jp
test
adc
shll
mov
sti
push
dec
sbbl
test
test
loopne
push
mov
adc
jne
cmp
sub
xchg
or
mov
outsl
add
out
pop
inc
inc
mov
xor
jmp
adc
mov
xchg
push
ds
push
and
cmp
mov
xor
fstps
jge
imul
mull
mov
addr16
cli
test
xchg
pop
inc
push
shrl
push
in
xor
insl
mov
out
shrl
jb
lea
es
push
jo
xor
and
xadd
add
fstp
xor
mov
mov
arpl
test
sbb
ja
sahf
adc
cmp
dec
insb
mov
cmp
sbb
adc
or
mulb
or
js
jno
insl
fnsave
popf
rclb
das
mov
cmp
imul
movsb
fwait
xor
ja
stc
jp
mov
lret
shl
dec
mov
mov
mov
sub
cmpsb
push
inc
orb
mov
test
repnz
xor
adc
enter
aas
dec
mov
pop
lret
fcmovbe
popa
jl
enter
cltd
fs
pop
insb
dec
dec
test
xor
inc
dec
js
xchg
icebp
mov
loope
ficompl
repz
das
and
popa
cmc
leave
inc
jo
scas
add
es
xor
fcomps
mov
popa
lret
push
jne
pop
and
push
clc
push
adc
dec
or
out
aaa
pop
inc
inc
add
mov
inc
cmp
or
or
test
idiv
xchg
out
test
popf
pop
sarb
fwait
mull
mov
pop
in
mov
loopne
fsubs
push
ror
xlat
push
push
imul
pop
cmp
jne
mov
sbb
pop
dec
jp
shlb
push
mov
sbb
add
idivb
adc
int
cmp
pop
pop
test
pop
mov
pop
mov
cmpsb
mov
ret
lods
push
sub
push
sbb
add
pop
data16
data16
bound
add
dec
shll
addb
push
stos
les
addb
jo
mov
dec
push
bswap
inc
in
cwtl
mov
ss
repnz
out
mov
cld
push
enter
inc
addr16
ja
adc
mov
movsl
pop
shrl
pop
test
sub
sbb
jl
rcll
inc
lcall
leave
sbb
fdivl
push
jmp
add
repnz
mov
dec
stos
scas
popf
xchg
xor
jno
stos
andl
cmp
lock
push
stos
idiv
push
aas
repz
mov
shl
jmp
mov
inc
and
add
mov
test
sub
inc
cmp
mov
rolb
jle
mov
push
sub
mov
adc
ret
xlat
pop
jl
aad
lods
clc
inc
add
out
mov
jmp
fs
call
dec
add
sbb
shl
push
jmp
aam
mov
jge
inc
xchg
rcrl
ss
lods
mov
test
out
pop
add
andb
repz
and
repz
loope
jl
call
inc
pop
xchg
sbb
jl
gs
fucomip
shl
fwait
jae
jp
push
pop
inc
mov
arpl
xlat
inc
pop
xor
sub
shl
leave
mov
jle
icebp
sbb
dec
push
daa
adc
add
outsl
cs
filds
lret
adc
push
mov
adc
inc
je
frstor
push
lret
sub
outsl
add
sub
mov
mov
xor
sarb
loope
pop
out
xchg
mov
ret
stos
sub
dec
icebp
cmc
rorl
inc
xor
cmp
loop
shll
movsl
mov
mov
sbb
insb
fwait
mov
test
or
add
mov
lods
push
mov
push
and
pop
xchg
xchg
lock
push
lret
fs
lds
test
push
in
adcl
inc
dec
aad
pop
add
push
and
dec
jmp
pop
sub
nop
sbb
mov
repnz
movsb
out
inc
pushf
aas
or
loop
arpl
jmp
aaa
cwtl
jb
mov
inc
sub
sub
fdivrl
pop
jge
or
pop
ja
in
push
das
jecxz
mov
jle
call
movsl
rcr
fistps
clc
pusha
push
testb
std
addr16
push
dec
cli
mov
rcrb
mov
loop
fstpt
clc
mov
ja
and
mov
push
mov
ljmp
pop
sub
pop
ja
xchg
xchg
insl
icebp
movsl
andb
mov
jae
push
sub
test
xchg
das
lahf
inc
pop
ja
mov
cmc
mov
and
mov
cmpsb
call
pop
es
fstl
out
sub
cs
dec
add
sub
cmp
mov
add
and
pop
pop
loop
addr16
call
mov
add
jmp
pop
xchg
dec
mov
mov
cld
andl
jno
out
add
cmp
mov
jg
adc
sbb
mov
adc
xlat
sbb
pusha
mov
mov
scas
rcrb
test
hlt
sti
jb
fnsave
pop
adc
mov
xchg
inc
nop
inc
inc
int3
cwtl
sbb
subl
shrl
cltd
push
jnp
dec
adc
cltd
scas
jp
sub
xchg
cmpsl
xchg
xor
sub
mov
std
scas
sbb
rorb
stos
dec
lods
lock
int
ljmp
xor
xchg
dec
scas
pop
xchg
or
cwtl
inc
in
shrl
aaa
pop
ljmp
leave
and
mov
mov
into
add
jg
inc
or
repnz
sub
arpl
in
mov
fstpt
cltd
mov
mov
cmp
xchg
loop
cli
pop
adc
outsb
mov
fwait
xchg
push
xor
xor
dec
jl
daa
jne
xchg
inc
test
fcmovu
enter
lahf
sub
mov
sti
jo
aam
or
movsb
call
jns
jle
mov
fmuls
or
add
mov
xchg
push
inc
sub
aaa
sbb
jl
repz
sbb
jo
xlat
aad
pop
jnp
mov
nop
jbe
loope
ficomps
iret
ss
and
adcb
shll
xor
push
idivl
pop
cs
lea
cmp
test
and
pop
test
aaa
mov
push
or
mov
ss
or
icebp
fs
loope
vmulps
movsl
mov
mov
push
cmpsb
xlat
retw
sbb
push
icebp
jecxz
jp
aam
into
mov
adc
inc
lret
push
mov
pushf
fdivl
subb
xchg
dec
xchg
mov
inc
push
inc
jno
sub
loope
adc
jb
loope
add
dec
loopne
std
jecxz
push
xchg
add
sub
int3
imul
add
aaa
jge
push
js
arpl
out
add
mov
or
push
iret
mov
push
aaa
mov
or
movsl
dec
movsb
jae
push
sbb
push
aad
sub
movsl
jg
les
cmpb
lods
jp
mov
outsb
sahf
or
push
xchg
mov
lret
or
into
cwtl
dec
clc
jecxz
pop
jecxz
xor
jb
mov
pop
ljmp
jo
cmp
sbb
hlt
js
mov
jae
xchg
nop
jmp
and
es
or
xor
mov
sbb
rdtsc
lods
iret
lcall
add
fistl
test
pop
pop
add
sub
inc
sub
push
jbe
loop
lcall
dec
xor
sbb
jne
push
adc
dec
ljmp
dec
and
adc
mov
dec
cld
mov
mov
and
mov
pop
addr16
sub
lahf
mov
test
sbb
gs
sbb
fidivrl
xchg
mov
lds
mov
es
mov
out
aaa
cmp
jmp
lods
lret
xchg
or
out
data16
pop
pusha
push
dec
jecxz
inc
add
movsl
leave
pop
inc
test
nop
out
inc
jae
pop
in
stc
ret
out
pop
inc
lods
add
inc
pusha
lods
rcrl
or
lock
jmp
sub
fidivrs
fimuls
ret
sbb
pop
negb
lea
out
dec
ret
daa
repnz
in
mov
sub
jl
test
jo
push
inc
jo
and
adc
and
mov
add
nop
pop
add
je
xchg
jae
jl
subl
bound
cs
mov
cmp
mov
jns
or
mov
popa
inc
hlt
dec
pop
adc
inc
ja
iret
lret
push
xchg
sbb
gs
lea
ljmp
mov
jg
adc
sbb
push
mov
jne
sti
cwtl
adc
das
push
add
mov
std
mov
test
inc
repnz
xor
xchg
and
hlt
mov
cltd
lods
xor
gs
inc
mov
movsl
add
push
and
xor
scas
jns
inc
inc
sub
cmp
negl
int
in
fcomps
sbb
outsb
push
cmp
mov
sbb
insb
mov
mov
pop
insl
inc
pop
cltd
insl
sbb
shlb
pushf
xchg
sbb
adc
imul
rcrl
dec
cmpl
pop
mov
lret
stc
pop
lds
dec
add
inc
pop
and
cmp
push
iret
xchg
movsl
pushf
test
int3
push
rcl
mov
loop
clc
dec
sbbb
and
push
or
imul
mov
xor
adcb
mov
push
scas
cli
sbb
or
test
adc
out
clc
cmp
scas
push
imul
loop
pushf
add
fimull
xor
test
xchg
cmp
inc
shlb
inc
aas
mov
aas
lods
jecxz
les
xchg
loope
shrb
jae
sbb
mov
jmp
test
test
jo
inc
inc
pop
in
pusha
xor
mov
out
je
push
jb
int3
icebp
rcl
or
int3
int
fs
push
push
sbb
mov
push
lcall
inc
rcl
jge
push
inc
push
popf
push
mov
xchg
jle
jge
mov
lahf
jp
rolb
inc
sarl
xchg
dec
mov
sub
adc
arpl
pop
imul
mov
insl
in
jns
or
dec
adcb
shll
ficoml
sub
stc
xchg
movsb
jo
pop
mov
cmp
aas
icebp
pop
out
iret
in
sub
mov
xchg
and
adc
ret
je
cmp
aaa
jl
inc
cmpsl
hlt
cld
stc
pusha
addl
xor
mov
push
adc
or
inc
pop
or
int3
jp
and
popa
mov
out
test
pop
into
ret
add
incb
rcll
aam
std
sub
jae
xor
lcall
or
test
mov
hlt
inc
repz
out
push
mov
cwtl
cmp
add
addr16
mov
movsl
scas
xor
inc
adc
adc
sub
pusha
inc
hlt
mov
jo
pop
dec
pop
pop
push
xchg
pop
lret
push
pop
push
nop
sar
and
pop
lods
sub
std
movsl
loopne
fcmovu
in
sub
jl
loop
shl
sub
mov
loop
les
jb
call
dec
xlat
cltd
mov
pop
scas
mov
mov
sbb
fcompl
repnz
mov
mov
adc
adc
sbb
inc
push
ds
cmpsb
pop
cli
int
xchg
fdivrs
xchg
shlb
adc
jle
das
or
sbb
sti
jae
push
aas
testb
xchg
sbb
dec
test
mov
push
popf
xor
jns
in
pop
call
dec
imul
movsb
jae
mov
in
sbb
ss
lds
jnp
arpl
ret
or
pusha
jl
pop
neg
test
or
bnd
and
out
jae
add
gs
adc
aad
xchg
push
repz
cmpsb
ret
jo
sbb
mov
clc
inc
xchg
push
add
loopne
ja
int
sti
stos
imul
into
push
out
xchg
inc
mov
push
adc
cs
sbb
mov
subb
mov
mov
dec
add
add
pop
pop
ds
imul
add
inc
lods
jg
repnz
pop
xor
xchg
push
test
mov
and
mov
or
imul
push
gs
jns
or
out
jmp
loop
mov
mov
insl
pop
and
aas
in
les
dec
mov
sub
adc
adc
or
pop
cmp
sub
pushf
jb
aaa
scas
out
test
sub
nop
scas
scas
inc
test
pusha
xor
mov
and
stos
mov
ss
mov
cmpsl
adc
mov
shlb
imul
and
sub
out
or
inc
gs
movsl
jns
sub
sbb
sub
stc
jbe
mov
fs
mov
xchg
cmpsl
jmp
adc
call
ret
sub
dec
leave
xchg
jmp
sbb
pop
sbb
dec
xchg
lahf
ret
mov
jne
and
mov
xchg
pop
outsb
jmp
jnp
fildll
xchg
pop
push
nop
mov
les
ret
adc
push
sub
mov
dec
dec
push
push
fsubrs
pop
adcl
movsb
mov
aad
dec
xchg
or
dec
mov
xchg
sbb
adc
jp
cmp
mov
pop
xchg
jns
adc
mov
cmp
popa
ja
add
mov
mov
rclb
mov
pusha
sub
add
xor
loope
mov
addr16
sub
dec
into
dec
out
push
mov
mov
fidivrl
in
pop
lea
cmp
les
xchg
push
data16
jnp
mov
add
dec
loopne
xchg
inc
cmp
fdiv
adcl
aad
xchg
sbb
xchg
mov
or
jge
ss
enter
cmp
push
js
and
pop
insl
add
jne
inc
jmp
mov
sub
repz
adc
cld
jb
sub
sbb
test
mov
cmpsl
in
pop
xlat
mov
jnp
je
cmp
lahf
test
pop
xor
ja
cmp
mov
or
fistpll
jo
xchg
and
and
mov
add
cmpsb
pushf
cmc
repnz
test
mov
sbb
jae
pusha
jge
daa
jnp
out
repz
xchg
aad
pop
cmp
mov
push
push
das
jle
push
dec
cmpsl
jge
or
and
sub
es
lea
jp
cwtl
mov
inc
jae
mov
fwait
iret
push
mov
mov
outsl
inc
jnp
fwait
data16
inc
loope
out
xchg
sahf
imul
inc
push
std
jne
stc
std
mov
rclb
divb
inc
xor
mov
mov
pop
cld
enter
out
int
in
jb
xchg
or
lret
mov
fidivrs
loope
inc
push
xlat
mov
stos
push
sbb
scas
rcll
mov
xchg
out
movsb
movsb
testb
push
and
inc
mov
orl
das
test
cmpsl
add
jb
stos
sbb
data16
push
pop
je
jae
push
xchg
gs
mov
dec
cwtl
jg
pop
stos
mov
outsl
or
ja
dec
xchg
xchg
cwtl
inc
inc
mov
insb
cmp
ljmp
pushf
sub
sbb
xchg
lds
mov
lods
cmp
insb
mov
inc
pop
sbb
int3
testl
in
push
shll
or
nop
test
pop
jle
std
aaa
xor
push
insb
mov
insb
insl
xor
ja
jecxz
lcall
lods
stc
xlat
lods
mov
and
lods
push
aaa
mov
cmp
orl
xor
sbb
aad
gs
fs
pop
mov
xlat
jle
lods
cmp
and
sbb
test
cli
neg
mov
xchg
inc
jmp
sbb
mov
aaa
sarb
fsubl
pop
cmp
xchg
lods
add
les
shll
int
xchg
imull
xchg
sub
adc
pop
jl
lds
test
mov
add
out
test
push
mov
and
enter
sbb
mov
shrl
cli
push
xor
test
mov
push
fimull
xchg
hlt
stc
pop
test
sub
cmp
pop
icebp
mov
dec
dec
jo
sbb
dec
cli
rcrl
mov
and
mov
data16
or
js
rcrb
iret
push
jno
sbb
pop
sbb
out
inc
push
in
pop
call
lret
fimull
xchg
test
xchg
daa
adc
mov
pop
mov
fucomp
mov
lahf
xor
xchg
jno
lods
jg
xor
mov
xor
andl
push
pushf
sbb
and
faddl
sbb
xlat
nop
and
push
pushf
lock
loopne
jns
dec
inc
xchg
je
sbb
pusha
sbb
mov
sbb
sbb
shll
test
stos
pop
add
xchg
jne
call
fs
mov
and
sti
divl
push
das
pop
fcmovb
ja
jnp
push
cwtl
jnp
ja
push
testb
lock
xor
imul
subl
mov
shll
sbb
int
adc
clc
repz
pop
imul
fisubrs
and
add
outsb
stos
divl
mov
ret
out
sub
push
lock
dec
popf
pop
push
cmp
inc
jne
out
stos
xchg
movsl
rcr
loope
fists
push
ljmp
mov
mov
rcl
jns
popa
test
pop
aas
daa
xlat
mov
push
pop
arpl
lods
movsl
sub
fstpt
pop
adc
pop
lret
nop
rcrb
fcmovnb
cmpsb
pop
mov
int3
push
sbb
pop
mov
cltd
jmp
sbb
jns
push
cmp
rclb
inc
es
jg
test
cmp
adc
sub
dec
xor
stc
inc
cmp
es
push
sti
lods
fdivrl
mov
imul
mov
xor
cmpsl
mov
xchg
fpatan
or
xchg
xor
adc
xchg
stc
cmp
jecxz
push
xorb
xchg
sub
ss
js
ss
dec
cmp
inc
arpl
push
fcoml
inc
popa
in
pop
aam
inc
in
mov
fs
pop
mov
cmpsb
push
or
xchg
and
cmp
dec
sbb
pop
test
insl
test
rep
in
aad
int
mov
test
nop
outsl
push
clc
jl
imul
std
fsub
in
sbb
mov
or
aas
fsincos
bound
jg
jle
cmp
mov
push
cmp
push
dec
insb
arpl
out
adc
cs
lahf
or
push
orl
pop
push
call
fisttps
ljmp
sbb
lods
andl
pop
pop
inc
lahf
fsubrp
mov
xchg
dec
and
xor
xchg
sub
mov
add
and
pop
mov
loopne
and
or
int
pop
fbld
pop
stos
add
jmp
xor
add
daa
cmp
int
mov
in
aam
addr16
insb
inc
jge
insl
adc
push
loope
and
pop
add
lcall
pusha
pop
jae
enter
roll
out
xchg
dec
bound
inc
adc
into
jnp
in
test
mov
xchg
dec
sub
test
leave
iret
inc
cmp
mov
sub
fimuls
fisubrl
int3
inc
add
call
xor
jecxz
stos
ss
mov
enter
cmp
loop
dec
cmp
popf
mov
xchg
sub
fmull
pop
out
stos
jg
aaa
inc
aam
dec
mov
ljmp
ljmp
out
scas
mov
ffreep
cmp
rcrb
push
xchg
hlt
ds
scas
lcall
mov
xchg
and
insb
cmpsb
adcl
xor
rcll
xchg
xlat
push
push
pop
sbb
xchg
sti
lods
mov
in
out
fs
rolb
mov
out
push
inc
xchg
jno
push
leave
lock
cli
faddp
ja
decb
jl
test
push
cs
push
add
jno
test
pop
sbb
adc
lret
sub
inc
mov
add
mov
sbb
and
push
pop
sbb
loopne
adc
inc
repnz
jl
sub
or
pop
cmp
insb
fstpt
sub
push
test
lea
jo,pn
jmp
jbe
xor
xor
cmpsb
cmp
or
adc
fimuls
insb
outsl
xlat
mov
int
xor
out
fists
fdivl
jecxz
push
sbb
or
xor
xchg
or
push
dec
adc
sbb
out
mov
jno
inc
ret
stos
xchg
iret
push
pop
inc
in
test
test
sbb
pop
ja
sub
popa
stos
push
add
and
xor
adc
push
mov
insb
xchg
int
or
negb
inc
divps
adcb
ljmp
ds
sahf
in
in
and
jb
mov
rcrl
xchg
fwait
mov
iret
mov
outsb
iret
hlt
add
js
add
daa
pop
aad
sub
js
cltd
inc
or
out
mov
dec
adc
fwait
dec
insl
jg
mov
xchg
in
or
xor
lods
lcall
dec
js
dec
or
scas
adc
jne
xchg
mov
inc
in
mov
lret
cmp
stos
and
push
mov
dec
add
lcall
xchg
xchg
fcomp
int3
dec
cmp
sahf
int
imul
notb
push
sub
adc
add
cmp
xor
pop
cmp
outsl
ljmp
or
inc
push
std
rcrb
out
jb
js
lcall
xchg
loop
pop
in
mov
aas
daa
and
test
out
loopne
push
jg
icebp
pop
sub
es
mov
add
out
pop
inc
sub
xor
sbbb
adc
and
xchg
test
cmc
dec
mov
adc
lret
jne
les
push
xchg
jg
int
popf
out
into
lret
fstp
inc
pop
pusha
lods
std
repnz
sbb
cltd
icebp
jmp
sbb
movsl
adc
iret
bound
pop
mov
das
mov
jo
movsb
mov
lcall
lods
das
shlb
push
and
cmp
mov
adcb
int3
sbb
in
mov
int3
aas
mov
sbb
shrb
inc
ret
movsl
lds
stos
testl
test
jbe
mov
or
adc
sub
ret
sub
ret
push
insb
out
xchg
or
dec
daa
mov
push
mov
fsubrs
shrb
push
sarb
pop
bound
push
ret
shlb
xchg
or
lods
pop
pushf
jb
sahf
or
dec
push
rcr
mov
and
mov
fsubp
call
push
rorl
test
fldl
fistl
and
stos
insl
push
addr16
sub
and
push
xchg
mov
fs
inc
inc
xchg
jle
and
sub
mov
pushf
sti
cli
or
popf
xor
and
sbb
jnp
cmp
cmp
xor
fdivp
cltd
scas
lods
cmpsb
hlt
pop
iret
and
cltd
in
jp
pop
dec
mov
sub
mov
jo
jno
dec
outsb
inc
test
dec
fiadds
sbb
pop
inc
daa
call
mov
adc
and
icebp
lcall
pop
jno
mov
sar
sub
mov
push
stc
pop
fimuls
mov
loop
hlt
adc
outsl
aaa
ret
test
inc
in
and
mov
xchg
add
outsb
inc
inc
nop
in
jno
loop
xchg
dec
cmp
gs
loop
cmp
lods
jp
mov
sub
hlt
enter
cmp
out
or
sub
push
cmp
cmpsb
scas
jmp
xchg
sbb
sahf
popf
jbe
and
mov
call
adc
cld
inc
jp
cwtl
stos
cli
ja
jmp
or
bound
push
addr16
pop
ror
test
jmp
adc
nop
mov
add
lret
mov
cld
ljmp
xchg
push
fmul
pop
jne
cmp
push
xor
xchg
mov
ljmp
push
stos
sub
aam
fs
jae
fwait
cwtl
and
mov
jne
jmp
xor
or
bound
push
pop
xorb
cmp
adc
xchg
jo
add
push
cmp
pop
sub
xchg
sbb
fmuls
movsb
orb
inc
aas
rorl
pop
std
push
testl
aas
sbb
jl
bound
repz
inc
cmp
sbb
in
jae
mov
dec
add
and
decl
xor
lods
mov
pop
inc
daa
push
addr16
dec
rcrl
dec
pop
sub
jnp
jne
jecxz
mov
fisttpll
jecxz
pop
lock
pop
rep
push
jns
add
pop
outsl
pop
adc
cs
cli
lds
xorl
dec
and
out
jns
mov
pop
cmc
push
fnstcw
or
push
shlb
arpl
add
push
inc
out
aad
jo
mov
nop
fnstenv
loopne
add
sub
cmp
xchg
ror
dec
jge
dec
cmp
lds
fdivrl
outsl
adc
lea
stos
sub
cmp
cmc
pop
mov
movsb
mov
dec
xchg
fdivl
enter
movsl
ss
jno
dec
loop
xor
sti
pop
je
xor
loope
out
pop
mov
out
cmp
mov
xor
pop
push
jge
es
repz
test
mov
popa
mov
add
test
mov
lahf
lahf
fs
std
outsb
adcb
imul
out
imull
fidivrs
dec
mov
xchg
sti
repz
pop
stc
pop
jb
push
cmp
jg
pop
out
lahf
xchg
add
cli
pushf
prefetch
call
pop
ret
scas
adc
xchg
jb
fstsw
mov
lea
mov
jle
test
divl
and
fdivl
in
and
or
fadds
daa
pop
jne
in
orl
imull
push
mov
xor
and
jecxz
xor
xor
push
hlt
rolb
or
push
jns
jecxz
rcl
jns
adc
into
mov
fnstsw
mov
xchg
popf
ret
mov
add
and
dec
jne
sub
lock
pop
movsl
xlat
or
or
push
dec
arpl
incl
addr16
cltd
insb
popa
adc
imul
outsb
pop
adc
popf
mov
orb
mov
pusha
addr16
call
pop
pop
lods
loope
sahf
push
int
xor
sbb
movsb
mov
mov
pop
mov
fs
test
mov
sub
movsl
push
push
addb
mov
lcall
sahf
sub
xor
sbb
push
xlat
addl
in
subl
loopne
cmp
aaa
call
call
sub
pop
arpl
cmp
scas
add
inc
shl
xor
adc
xchg
and
ds
inc
into
mov
xor
scas
out
push
mov
fistl
imull
cmpsl
je
mov
push
sub
shlb
jne
stos
mov
bound
and
arpl
mov
call
pushf
sub
jp
pop
push
add
jne
jp
adc
push
fnstenv
add
data16
imull
inc
mov
jns
sar
dec
popa
ljmp
sub
inc
xchg
cmp
cmpsl
inc
rclb
mov
or
int3
and
fcoml
rcll
inc
lds
cmpsl
adc
xchg
fstps
fistpll
mov
adc
cmpsb
add
stc
adc
mov
imull
fmul
cmp
jl
dec
inc
repnz
pop
push
or
leave
cs
sbb
add
mov
fcompl
fs
roll
repnz
sub
mov
xchg
add
pop
sub
or
dec
lods
loope
add
les
clc
push
les
inc
pop
push
fstpt
scas
sbb
hlt
xor
into
or
cmp
mov
test
rcrl
jge
jge
jne
cmp
inc
jl
mov
movsb
ret
repnz
popf
loopne
push
lahf
or
mov
or
jg
add
xchg
cmp
adc
popf
fdivr
mov
mov
sub
imul
mov
pusha
pusha
adc
stc
mov
xor
aam
mov
jge
dec
stc
xchg
add
dec
loop
pop
mov
sbb
fidivl
push
xor
cmp
cli
inc
lahf
stc
xchg
lods
lods
cmpsb
lds
dec
aas
add
pop
fldpi
dec
jb
cmp
test
jp
into
jp
inc
pop
shrb
aad
push
lea
loopne,pn
add
mov
test
mov
jl
mov
adc
sti
in
and
mov
push
cld
leave
dec
cmp
fwait
mov
pop
iret
pop
xchg
insl
cmc
stos
inc
cmp
adc
pop
add
mov
cmp
nop
inc
dec
in
adc
cs
out
mov
mov
jl
mov
pop
add
lret
jae
pop
out
ficoml
and
jns
sbb
jmp
fcmovbe
das
ljmp
xchg
or
js
lret
mov
imul
shrl
sbb
adc
fcoms
xchg
in
outsb
aas
ja
jg
xchg
popa
mov
test
inc
xchg
sub
pusha
push
dec
xor
daa
outsl
pop
stos
lods
push
mov
lods
jnp
adc
lret
arpl
cmp
add
inc
mov
inc
ret
loopne
xor
call
testl
pop
xor
push
jns
mov
das
add
cmp
sub
sub
test
and
test
ja
lods
pop
sbb
jp
push
inc
pop
lcall
and
add
add
cmp
js
aad
cltd
xchg
ja
test
xchg
sbb
in
xor
adc
push
mov
sub
mov
mov
add
out
or
sbb
push
lea
dec
dec
call
cmpsb
inc
inc
jmp
movsl
xor
out
or
jns
dec
ja
lods
mov
jge
cli
loop
lds
dec
imull
dec
aam
orl
inc
sti
aad
lret
popf
jmp
dec
dec
lret
mov
ljmp
adc
push
sub
push
and
pusha
out
mov
aaa
sub
xor
lea
jnp
bound
data16
push
out
mov
sahf
adc
xchg
sar
and
push
or
fnstsw
xor
daa
es
sbb
ja
mov
fldenv
cmp
xchg
fisttps
lea
mov
sub
roll
jb
loopne
mov
xlat
lahf
push
pop
mov
mov
lret
inc
fistps
subb
sbb
js
fldl
pop
or
jle
pop
xor
rolb
mov
ret
cmp
pop
jecxz
sbb
jne
decb
gs
imul
cs
in
xchg
mov
mov
jno
lahf
rcrl
xchg
insb
mov
imul
shlb
int3
pop
sbb
xchg
jne
lods
dec
cmpsb
push
sets
popf
add
or
push
rorl
insb
out
jg
mov
popa
shr
out
cli
xchg
stos
cli
cmpsl
das
mov
shrb
or
lock
inc
mov
bound
ds
das
sbb
adc
xchg
lret
cmp
dec
or
test
les
jmp
or
mov
call
lock
cmpsl
sub
and
xchg
sbb
mov
popl
std
test
mov
add
mov
push
pop
loop
leave
jl
jg
add
lods
push
jecxz
inc
fadds
iret
adc
cwtl
mov
inc
jno
jge
imul
xchg
mov
cmpsb
dec
pop
adc
ds
add
int3
or
lcall
lahf
add
sbb
sbb
shr
mov
out
iret
pop
dec
jecxz
bound
add
aam
iret
stos
icebp
stos
xchg
push
dec
inc
pop
cmp
shll
stc
cmpsb
insb
mov
push
out
pop
std
mov
pop
sahf
mov
bound
xchg
and
lock
mov
nopl
cmc
stc
mov
cmc
push
dec
scas
fld
aad
insb
mov
lret
movsl
test
shlb
sbb
or
cli
mov
mov
jle
outsl
outsl
ret
ret
jne
jg
nop
sub
dec
or
in
movsb
in
lcall
fs
js
xor
icebp
push
sub
aad
stos
gs
je
jg
nop
and
mov
rcr
jnp
inc
sub
test
aam
scas
imul
push
out
cwtl
insb
pop
aas
nop
add
mov
pop
cs
mov
sbb
hlt
in
and
add
popa
test
sub
pop
ss
scas
and
or
into
es
ret
sbb
push
add
shrb
out
push
sub
fcomip
and
lea
xor
push
pop
inc
cmp
sub
daa
scas
pop
jecxz
mov
xor
gs
jb
mov
out
hlt
pop
gs
cmp
shlb
shrb
aam
iret
arpl
fwait
sub
jae
movsb
or
lret
rdmsr
inc
inc
cmp
sbb
int
iret
enter
ja
mov
loope
hlt
xor
push
jge
dec
adc
pop
lock
lcall
ret
xor
cltd
aaa
cmp
xchg
cwtl
and
dec
fwait
rcl
fcom
and
mov
dec
das
inc
fisubrs
pop
test
sti
pop
push
push
cmc
cmpl
jmp
cmpsl
movsl
or
ds
ret
mov
and
fimull
add
and
mov
popf
add
int3
in
dec
and
push
xchg
lds
xor
call
mov
bound
aam
dec
cli
stos
rcl
pop
xchg
xor
dec
jecxz
clc
mov
cld
mov
mov
imul
adcb
cli
mov
stos
add
shlb
rcll
cmp
mov
outsb
lds
add
mov
inc
hlt
cmpsl
out
jbe
js
xor
js
fcomip
out
jmp
jmp
pop
push
mov
and
adc
shrb
lcall
lds
in
repz
sbb
negl
jns
in
rcll
cmp
xchg
add
cmp
lret
inc
gs
out
iret
mov
jbe
lret
mov
push
fiadds
xlat
dec
ss
sarb
cli
inc
iret
xor
inc
cmpsb
push
push
push
addr16
pusha
leave
xor
cmp
inc
sub
ja
dec
int3
mov
or
fisttpll
cmp
jno
outsb
push
fwait
and
jg
push
xchg
cwtl
push
hlt
out
or
cmp
sarb
iret
cs
pushf
sahf
push
mov
sbb
jmp
push
sub
mov
push
movsl
enter
adc
inc
js
push
fldcw
xchg
adc
hlt
or
loop
lahf
int3
out
mov
or
jle
mov
xorb
xchg
push
in
adc
sbb
dec
and
pop
les
ds
bound
outsl
push
xchg
gs
sub
jmp
in
movsb
mov
pop
aam
lret
pop
jo
xchg
lods
sbb
dec
hlt
test
lea
test
mov
dec
mov
rcr
add
in
in
adcl
cs
loop
cmp
cmp
adc
ret
and
inc
shrb
jbe
push
mov
cmpsl
ret
sub
lock
mov
pusha
xchg
lock
mov
inc
jmp
negb
dec
movsb
icebp
xor
lcall
mov
aad
aaa
add
cmp
ret
mov
js
out
add
stos
outsl
or
add
ds
xor
test
push
movb
lcall
sbb
inc
inc
sub
push
xchg
dec
jle
in
mov
pushl
pop
or
das
call
ss
bound
rol
fcompl
sbb
xchg
sti
pop
mov
add
loopne
aad
mov
dec
scas
adc
je
cmc
pop
xlat
in
add
cltd
loope
sub
sub
lcall
inc
js
iret
adc
das
ficoml
movsl
jb
es
lock
pop
fistps
mov
mov
rorl
push
mov
outsb
arpl
fstpt
ret
xor
adc
fucomp
mov
pop
mov
stos
xor
dec
xlat
jl
fmul
add
push
pop
in
adc
xor
leave
jge
xchg
sti
leave
bswap
dec
sub
stc
sbb
cmc
fistpl
mov
sub
inc
mov
pushf
sub
mov
scas
ljmp
mov
testb
lock
fisttps
test
lahf
jmp
pusha
xor
xchg
fstp
sub
xor
cmc
adc
ja
ljmp
fidivl
das
mov
inc
inc
lret
xchg
push
jecxz
push
jecxz
repnz
addl
adc
int
fsubs
mov
scas
out
les
out
cld
fucom
dec
add
push
lods
rcrl
loope
repz
xchg
lock
outsb
dec
lret
mov
push
sub
je
mov
mov
cwtl
jecxz
repz
mov
jle
in
xchg
xor
sub
fiadds
nop
mov
cli
aad
pop
mov
jl
pop
mov
xchg
xor
mov
jecxz
fldl
inc
pop
jb
mov
nop
push
cs
dec
push
lahf
mov
and
leave
cmpsl
push
sub
subb
xchg
jecxz
cwtl
std
cmp
cmpps
loope
jg
fadds
mov
rorl
scas
enter
sarb
adc
popf
xlat
gs
mov
fstps
lods
xchg
mov
outsl
addr16
dec
pop
or
pop
sub
fsubs
mov
sbb
push
jnp
inc
add
shll
popf
mov
lret
pop
push
jo
scas
outsb
cmp
outsl
sbb
cmpsb
push
mov
out
xor
fwait
repz
in
xchg
push
in
movsl
mov
add
cmpsl
pop
jl
loop
xor
sub
adc
pop
inc
repnz
jge
xor
pop
pop
stos
aas
lahf
mov
lret
sahf
out
fwait
call
or
aad
pop
cmp
inc
mov
and
adc
test
fdivrs
sub
shlb
scas
ss
mov
fbstp
xchg
and
ret
lret
dec
ja
xor
pop
pop
sub
adc
dec
mov
mov
shr
xchg
inc
cmp
addr16
adc
pop
mov
cltd
mulb
scas
xchg
mov
bound
cld
js
inc
add
addr16
inc
pushl
in
jg
sbb
push
pop
flds
mov
cmp
mov
pop
ljmp
xorl
int3
dec
xchg
and
fiadds
aaa
sbb
and
mov
or
jno
cmpl
pop
fnsave
daa
sbb
movsb
rorl
cmp
adc
cwtl
movsl
mov
inc
imul
bound
test
xor
xlat
jbe
push
mov
jno
popa
sub
les
push
cmp
daa
pop
arpl
pop
adc
out
jns
jb
mov
stc
idivb
cs
adc
loopne
loop
ds
xchg
jmp
cwtl
stos
or
mov
cmc
sbb
push
add
push
mov
cmp
or
adc
push
shrd
mov
or
inc
sbb
cmpsb
pusha
add
xchg
addl
repz
sub
inc
sbb
repz
or
jmp
mov
push
jle
nop
mov
and
pop
gs
sbb
call
cmp
xor
cmc
rcll
and
dec
icebp
incl
mov
leave
adc
cs
inc
mov
inc
hlt
popl
mov
jl
pop
jno
fnstcw
xor
mov
je
cmp
test
add
mov
xchg
fcompl
xor
nop
jp
adc
stc
cmp
jb
push
cli
xchg
cmp
pop
and
add
sub
dec
int3
notb
sahf
hlt
and
mov
mov
and
fstl
adc
rol
mov
movsb
jae
inc
clc
int3
daa
fcoml
pop
jno
dec
push
scas
loopne
mov
inc
pop
lea
jne
xchg
lea
xorb
xchg
jae
imul
jb
insl
push
aas
mov
sbb
scas
fdivs
pop
daa
xor
imul
adc
sysret
imul
ljmp
push
sub
sbb
sbb
ljmp
imul
mov
xchg
sub
lret
jecxz
dec
add
repz
xor
in
ret
adc
fidivrs
cmp
dec
les
pop
pop
sahf
jp
xchg
outsb
xchg
mov
std
js
call
xchg
insl
push
dec
sub
insl
add
xor
mov
aad
es
mov
cltd
shl
lds
and
test
inc
and
popf
scas
ret
sub
jne
fcmove
shlb
insb
sbb
jnp
in
inc
hlt
ss
pop
mov
into
pop
dec
mov
popf
push
jecxz
pushf
sub
out
and
enter
aaa
imull
imul
andl
cwtl
ja
mov
dec
imul
movsb
pop
pop
cmp
sbb
fldl2t
sub
out
or
out
loopne
aad
add
push
lahf
mov
push
and
aas
push
push
or
mov
lahf
push
in
aam
jne
mov
aas
pushf
add
clc
cmc
nop
mov
adc
push
int
cltd
shll
les
sbb
cwtl
jnp
mov
out
inc
adc
clc
jo
ja
add
out
nop
iret
mov
stos
dec
daa
mov
xor
leave
lahf
dec
fcmovne
ljmp
jmp
cmp
stos
mov
lahf
mov
jle
into
aam
aaa
push
into
ret
and
pusha
cmpsb
les
hlt
out
aad
ret
outsb
push
std
fcmove
subb
dec
in
pop
pop
hlt
pop
xchg
pop
sbb
daa
xor
les
push
mov
xchg
aam
cld
imulb
pushf
test
addr16
jecxz
out
dec
sbb
movb
xor
cmp
xor
pusha
fbstp
xchg
std
out
std
add
adc
or
enter
xor
cld
pop
push
test
sub
inc
icebp
xchg
xchg
js
scas
xor
and
rcrl
push
pop
pop
ja
cmpb
mov
fildll
pop
dec
push
adc
dec
mov
icebp
sarb
xchg
je
scas
mov
ss
xchg
mov
in
add
xor
inc
mov
sti
cld
or
popf
enter
mov
daa
inc
popf
mov
insl
sbb
mov
rcl
lret
jae
out
mov
lahf
xchg
mov
mov
ljmp
pop
push
sahf
xlat
iret
jns
adcb
hlt
sbb
adc
cli
sbb
adc
scas
fstpl
xchg
stos
je
adc
xor
repz
inc
push
and
xchg
repnz
or
xchg
pop
push
mov
outsl
out
fidivs
inc
xchg
daa
into
jp
push
and
popa
jbe
pop
mov
inc
mov
xchg
cmc
sbb
mov
add
std
inc
dec
mov
and
mov
mov
pop
loopne
into
enter
mov
hlt
jno
jmp
out
lcall
mov
cmpsb
in
cmp
les
add
xor
fstl
sub
inc
stos
mov
andnps
cs
in
ds
aad
insl
test
fisttpll
les
and
sbb
or
sbb
fs
jb
dec
pop
cmp
fsin
add
jmp
jle
sahf
push
lods
cmc
or
jae
push
stc
arpl
loope
fxch
push
mov
mov
fstpl
sbbb
adc
shlb
cmp
cltd
xor
sbbl
xchg
mov
xor
mov
rcll
aaa
sbb
push
icebp
rorl
outsl
xchg
outsl
outsl
je
and
mov
mov
jecxz
jle
outsb
rcr
es
xchg
out
gs
into
push
lods
cltd
sar
cmpsl
ljmp
insl
mov
test
or
aam
mov
pop
fisubs
out
push
imul
hlt
shlb
cmc
or
jne
repnz
push
add
in
mov
and
push
mov
aad
or
cmc
fistl
loope
mov
dec
or
inc
sahf
sbb
mov
lock
loop
xchg
xchg
xchg
add
inc
out
call
xchg
sbbl
push
mov
adc
shlb
out
rcll
ret
insb
inc
mov
inc
xchg
test
xchg
mov
add
rolb
enter
cmpsb
jl
pop
xor
call
in
fcoml
sbb
xor
xchg
mov
push
cmp
adc
xlat
mov
lret
pushf
mov
dec
outsl
int3
iret
and
daa
mov
xor
int3
aaa
mov
xchg
mov
in
cmp
call
ficoml
fimull
ljmp
repnz
push
jbe
nop
xchg
push
out
cmp
or
and
cwtl
inc
add
push
or
adc
sbb
cmc
dec
iret
shll
lahf
aaa
in
mov
xchg
rcrl
ss
cli
cmp
orb
shll
mov
cwtl
stc
es
icebp
or
inc
movl
jge
mov
cmp
pop
mov
xchg
ficomps
cmpl
pop
pop
pop
test
xchg
add
scas
add
outsl
push
lret
sarb
fwait
jns
stos
shrb
push
sub
scas
clc
je
inc
pop
inc
unpcklps
or
adc
inc
push
push
or
mov
fistpl
fcmovbe
add
pop
add
xor
or
xchg
adc
mul
int
push
adc
rolb
push
fwait
or
cltd
push
cli
xor
jns
cmp
dec
lahf
inc
mov
into
cwtl
dec
dec
addr16
repnz
cmc
je
out
ror
mov
inc
mov
mov
pop
jns
ret
pop
in
adc
fiaddl
inc
mov
mov
sti
jne
sbbb
mov
movsb
jno
mov
arpl
pop
push
stc
js
mov
dec
and
jbe
push
mov
adc
mov
cltd
test
popa
add
push
sbb
lahf
dec
inc
add
cmpsb
jb
mov
pop
in
pop
cwtl
pop
mov
scas
sub
pusha
cwtl
fs
ss
loope
repz
out
repnz
cltd
aad
int
stc
ss
adc
push
ss
fs
mov
mov
inc
aas
xchg
mov
add
add
std
mov
hlt
cltd
lret
aad
inc
ja
stos
std
mov
into
inc
sbb
adc
iret
loop
aaa
int3
repnz
lods
or
mov
mov
xor
adc
push
sbb
icebp
pop
cmp
test
jns
gs
inc
adc
mov
subb
pop
aam
sub
sbb
stos
and
hlt
fisttpl
xor
jno
xlat
data16
mov
sub
cmp
jne
rcrl
loopne
jge
sbb
jmp
jge
enter
push
pop
fwait
insl
cmp
out
cmp
xlat
sbb
fmuls
jnp
pusha
addr16
repnz
rcl
pop
xchg
xchg
pop
dec
dec
aaa
movsb
dec
out
add
clc
das
push
mov
gs
shr
dec
sahf
cld
mov
or
outsl
test
or
lret
adc
push
pop
sar
mov
pusha
push
xchg
scas
push
aas
imul
inc
cmpsb
mov
repz
outsl
push
popa
es
mov
jl
lret
sub
pop
pop
negl
loop
add
imul
lret
xlat
arpl
test
and
lds
rclb
cmp
adc
cmp
mov
aaa
jmp
icebp
dec
idivl
mov
jmp
mov
jb
mov
or
loop
loop
sbb
mov
mov
add
pop
and
rorb
push
lret
cmp
push
stos
mov
inc
cmc
lcall
bound
adc
movsb
movsb
ljmp
movb
xchg
inc
or
lret
loopne
sub
mov
pop
fwait
bound
test
cmp
dec
add
inc
push
mov
dec
test
mov
popa
aam
sub
cmp
jg
sbbb
loopne
and
cmpsl
cld
hlt
test
lock
cltd
sbb
add
insl
dec
cmpsb
jle
mov
xor
cmc
sti
mov
jnp
and
cmp
push
and
aaa
lret
je
xor
xor
adc
mov
jg
lea
cli
jne
mov
adc
xchg
sbb
sahf
and
loop
pop
in
fmuls
jecxz
sbb
jle
gs
sbb
dec
xor
pop
push
lods
sar
jle
jae
shl
lods
popf
mov
mov
stos
inc
shl
sti
ds
outsb
pop
les
loop
xchg
sahf
jae
mov
pop
pmaxsw
jg
sub
popf
test
movl
mov
push
jecxz
xlat
les
es
fwait
adc
sbb
sbb
jnp
cmp
inc
xchg
jp
jnp
and
jmp
pop
out
push
dec
jne
arpl
mov
loop
scas
rcll
jmp
sub
cmpsb
out
rorl
or
sub
out
jge
and
sbb
call
inc
inc
jl
sub
sar
cmp
pop
js
fwait
lcall
popa
and
xor
jne
push
cmp
sbb
mov
xor
stos
push
push
out
mov
cmp
mov
add
out
pop
cmpsb
jne
add
adc
inc
adc
mov
lea
jmp
add
sub
adc
incl
fmull
repnz
dec
std
lea
scas
fsubl
mov
lcall
xchg
cmpb
decb
jg
mov
pop
inc
lods
mov
popa
test
sbb
jo
and
mov
int
mov
sub
sbb
mov
inc
ja
popa
cmp
inc
bound
ror
jg
pop
loopne
out
pop
push
cmp
and
movsb
imul
dec
lret
sbb
xchg
cld
mov
or
mov
jno
cld
xchg
jg
adc
testl
inc
pop
mul
adcb
ret
mov
push
adc
std
mov
lea
cmp
inc
addr16
pop
shr
mov
into
inc
lock
cmpsb
sub
test
cmp
sub
iret
sub
add
xor
adc
sti
xchg
popa
mov
push
xchg
inc
mov
cmp
sti
or
out
loop
inc
stc
ret
test
lret
and
scas
xchg
imulb
sbb
movsb
pop
sbb
pop
xor
fsubp
out
call
test
or
sbb
cs
cmpsb
mov
test
jp
mov
sbb
popf
loopne
dec
pop
out
add
mov
scas
pop
push
or
adc
push
je
xchg
fidivs
and
cmp
rolb
std
sahf
scas
jnp
shrb
pop
lss
push
stos
not
xor
mov
cmp
and
adc
jge
cmc
and
test
xchg
sub
push
lods
loop
sbb
cmp
enter
loopne
pop
lcall
ss
pop
mov
sub
mov
movsl
mov
mov
pop
mov
push
insl
ret
mov
lret
dec
cmp
push
push
adc
mov
add
inc
les
mulps
xchg
lods
pop
sbb
inc
aas
lds
mov
int3
sahf
mov
bound
inc
push
sub
cld
jb
insl
mov
push
push
sub
mov
jecxz
cmp
add
xchg
sarb
push
sbb
adc
or
mov
fs
inc
sub
push
cwtl
sbb
leave
call
jp
mov
ja
and
xchg
lcall
pop
add
inc
repnz
stos
jp
addr16
into
ficoml
adc
lods
and
shll
jecxz
adc
aaa
shrl
lds
xchg
enter
mov
aad
hlt
pushf
aam
fs
mov
decb
cmp
or
fisubrs
scas
ds
lods
pop
out
popf
dec
mov
sub
jg
std
stc
insl
dec
dec
mov
dec
mov
pop
sub
fs
mov
pop
fwait
testb
or
xchg
pop
jne
scas
ret
xor
movsb
add
jae
sahf
lods
lea
loope
addr16
cmpb
sahf
mov
arpl
lret
cmc
mov
adc
into
fiadds
out
leave
dec
push
xchg
lods
cmp
or
inc
pop
outsl
adc
lds
pushf
add
cli
call
loope
push
mov
mov
jl
xor
inc
sti
fmuls
call
xchg
pop
mov
mov
push
repz
pusha
sbb
xchg
dec
int3
sub
int
pop
push
lret
rcrb
rol
int
push
cmc
out
movq
xchg
lret
jnp
mov
call
iret
stos
dec
ret
pop
leave
lock
into
fildl
xor
xchg
mov
adc
adc
lock
jmp
xchg
imul
aaa
push
mov
ljmp
jle
pop
pop
dec
test
dec
test
mov
fmull
rcll
jns
and
pop
mov
in
sub
push
dec
into
cmp
pop
and
pop
pop
dec
and
cmp
mov
pop
pushf
xchg
cmp
mov
out
fmull
mov
test
call
dec
movsb
sbb
int
xchg
fisttps
xor
leave
push
add
pop
mov
push
adc
shrb
addr16
pop
add
cmp
decb
imul
adc
mov
xchg
adc
pop
fdivp
cld
push
sub
cmc
ljmp
ss
xchg
add
pop
hlt
lcall
push
fstl
test
cltd
inc
sbb
add
iret
push
jmp
aaa
push
iret
insb
cmp
or
pop
lcall
cmp
lock
cwtl
sub
xchg
sub
call
push
sbb
mov
insl
or
push
pop
in
cld
pop
jae
pushl
aaa
mov
roll
xchg
inc
hlt
insl
stos
leave
aad
mov
lods
push
push
outsb
xor
lret
idivb
adc
jne
sahf
sti
dec
sub
shrl
ud0
mull
or
mov
enter
dec
sahf
add
in
pop
sub
aad
fsubrl
mov
icebp
sbb
popf
inc
jp
ret
adc
sti
and
loope
test
cltd
cmp
mov
mov
out
jae
loop
inc
iret
xchg
rolb
enter
mov
out
test
and
in
sub
push
scas
mov
jnp
xchg
stc
pop
stc
cmp
pop
and
in
mov
xor
add
and
cmp
jl
in
dec
loopne
push
pop
xchg
fmull
mov
in
sbb
lahf
lods
outsl
imulb
dec
mov
sub
inc
rorl
sbb
pop
mov
jmp
mov
int3
xor
sub
int3
pop
sub
sbb
jp
cli
mov
dec
add
push
addl
sbb
insl
inc
mov
mov
push
jge
jo
je
popf
jo
in
inc
in
out
jne
push
pop
int
movsl
in
cmp
cmp
stos
cli
push
cmp
push
fs
inc
pop
pop
or
pop
out
dec
mov
lods
stos
inc
mov
lahf
xor
mov
mov
ss
push
and
outsl
jb
loope
xchg
and
pop
test
adc
adc
rcrl
outsb
push
mov
pop
push
jne
or
lea
imul
mov
and
jnp
push
aam
inc
xor
mov
or
lods
cwtl
pusha
inc
adc
or
push
subb
add
aad
xor
imul
cmp
in
mov
jae
jae
sahf
inc
or
into
and
in
xor
insl
sbb
add
sub
add
insl
add
mov
leave
sti
ljmp
adc
xor
pop
or
jno
call
sbb
add
scas
lods
or
dec
jmp
mov
adc
jnp
mov
mov
xchg
pop
jno
popa
lods
mov
jl
lret
jmp
xor
ret
das
sub
inc
push
mov
xchg
lods
dec
mov
sbb
gs
ja
xor
pushf
push
mov
outsl
lock
out
adc
sbb
shl
inc
adc
mov
data16
lods
push
mov
movsl
jl
aaa
xchg
adc
pusha
in
cmc
add
cwtl
jle
mov
test
xor
mov
mov
push
imul
stos
mov
jl
lret
push
movsb
pop
cmp
mov
xchg
nop
popf
inc
jo
scas
inc
inc
cmc
aaa
aaa
dec
adc
bound
test
lahf
cmp
sbb
fwait
inc
mov
repz
adc
imul
movsb
lods
fwait
lret
lods
cli
out
out
in
lods
jnp
jl
push
pop
icebp
or
mov
test
scas
mov
xlat
out
fmul
mov
iret
mov
jle
mov
xchg
lret
and
pop
xor
mov
aam
xor
sbb
int3
push
mov
dec
or
cmp
adc
adc
rorl
or
arpl
lock
cmp
xor
das
jbe
imul
loope
xor
or
repnz
scas
popf
xchg
nop
jecxz
cltd
lods
jge
mov
add
enter
lret
and
fs
pop
loope
fmul
xchg
xchg
shrb
fsubl
jl
jo
cs
xlat
cwtl
push
bswap
leave
das
out
sti
pop
add
mov
dec
push
add
idivb
mov
in
in
jecxz
inc
adc
mov
adc
inc
xchg
sti
rcll
icebp
xor
lods
jne
cli
xchg
dec
cli
jne
ja
dec
push
cmp
ds
inc
ds
in
dec
icebp
push
xchg
jmp
fdivs
xchg
jp
push
add
mov
aas
sbb
push
shlb
das
test
lods
lcall
jne
cmp
outsl
pop
pop
outsb
loope
pop
fs
mov
popa
lret
cld
inc
adcb
fs
jg
mov
jae
out
int3
ficomps
ret
xchg
testb
cs
test
out
add
lea
or
jle
ljmp
pop
insb
and
sbb
pop
adc
mov
and
pop
ljmp
inc
out
js
adc
inc
mov
mov
fcmovnu
aas
insb
push
enter
add
call
leave
xchg
call
test
enter
cmp
and
insb
xor
xchg
dec
lret
jp
push
mov
fs
sub
or
xor
sbb
js
cmc
data16
push
sarb
dec
ret
sahf
addr16
push
mov
movsl
sbb
insb
adc
jno
loopne
xchg
rol
jp
repz
jmp
dec
xorl
hlt
cltd
jl
and
popf
ja
lret
out
movsl
fisubl
cmp
in
add
jae
lods
inc
movsl
scas
and
popf
out
xor
call
call
mov
add
or
iret
aam
repz
rorb
cmc
arpl
cltd
fbstp
mov
popf
xchg
pop
mov
clc
cmp
jne
jge
adcb
push
movl
sub
adc
cmpl
lock
and
jno
inc
push
into
pop
dec
push
adc
and
dec
pop
sbb
lods
stc
ja
sub
aaa
jp
fildl
push
movsl
inc
sbb
out
cmp
jbe
loop
dec
enter
and
push
xchg
popa
pop
outsb
cmpsl
imulb
ror
mov
mov
out
mov
and
pop
inc
add
les
popf
into
sbb
push
pop
sbb
cmp
add
dec
xor
adc
xor
test
xor
add
std
dec
test
cmp
test
push
lods
pop
lret
inc
mov
or
in
push
lods
test
jnp
ja
js
ret
jg
lds
or
cmpsb
push
inc
mov
ljmp
and
cwtl
add
pop
inc
mov
mov
call
lea
mov
daa
or
jae
fwait
mov
ret
jmp
inc
jge
mov
push
popa
mov
pop
out
add
inc
ret
cmc
jno
loop
ds
sbb
hlt
lods
mov
out
in
mov
movb
pop
icebp
daa
fistps
inc
daa
fcomps
into
push
stos
cmpsl
xchg
out
mov
ret
sbb
jmp
stc
dec
rcll
dec
jo
insb
inc
in
test
ret
xchg
push
jnp
or
pop
clc
or
dec
sub
das
fcompl
das
mov
or
cli
or
int3
mov
jmp
das
push
int
cmp
mov
nop
push
push
xor
les
mov
ret
setae
rcrb
cmc
and
mov
dec
lock
bound
stc
popf
push
enter
or
mov
movsb
or
jb
cmpsb
test
mov
bound
jo
rcll
sahf
sar
mov
loopne
dec
mull
sbbl
mov
lret
mov
fldt
push
and
inc
cmc
das
into
add
lods
add
xor
stos
sbb
xchg
leave
leave
pop
cmp
mov
adc
jb
add
cmp
int3
inc
inc
int
movsb
xor
jo
mov
xor
xlat
aas
fcomps
mov
div
loop
fldl
cltd
push
xchg
sbb
jmp
xor
adc
jnp
lcall
hlt
fisttps
mov
stos
stc
je
nop
adc
popa
cmp
jo
sbb
or
cmp
add
push
xor
mov
or
xchg
mov
gs
pop
outsl
pop
fsubl
push
sub
out
stos
add
ja
in
das
je
stos
xor
pop
inc
xchg
or
adc
lea
xor
sbb
lock
pushf
fwait
push
aas
dec
and
and
cmp
int
xor
pop
scas
popl
fsubp
imul
push
jl
lret
jle
scas
xchg
dec
lods
pop
hlt
rorl
das
pop
add
dec
push
add
jno
repnz
cmp
cmp
push
adc
popf
mov
pop
insb
fldenv
adc
int
stos
xor
add
popa
imul
and
push
stos
xor
sub
mov
fwait
mov
mov
fnstenv
pop
mov
jbe
and
mov
or
jno
push
sub
inc
movsl
icebp
mov
mov
jae
add
dec
ret
adc
in
inc
adc
addb
fxam
out
lds
cmp
cwtl
inc
xor
sbb
mov
sti
scas
xor
xlat
out
cmc
and
dec
add
rcrb
testl
pop
mov
les
imul
xor
dec
or
or
mov
aad
outsb
outsl
imul
orl
cmp
daa
sbb
jo
ja
push
pop
roll
adc
shrb
sbbl
inc
xor
push
std
pushf
mov
es
mov
mov
cmc
ds
scas
dec
pop
nop
jecxz
loope
aaa
clc
sub
pop
fs
add
xchg
in
outsl
jne
cmp
sub
sub
in
leave
dec
mov
xchg
sahf
xchg
int
icebp
andb
imul
jge
xchg
ret
push
cld
push
das
lods
cmp
pop
fisubs
fildl
dec
mov
imul
jnp
inc
mov
jbe
aam
sub
mov
stos
inc
xchg
test
sub
sbb
adc
lcall
shl
mov
jne
aas
sbb
xchg
repnz
xchg
mov
movsb
stos
sahf
mov
push
xorl
stos
aam
test
js
mov
xor
push
xor
pusha
popa
jne
ja
in
sbb
fcmovnu
or
xor
xlat
lahf
rcrl
gs
cmp
call
das
and
and
jg
cmp
xor
nop
mov
dec
cld
xchg
testl
xchg
lahf
fs
or
push
ja
adc
xlat
xchg
arpl
mov
rcl
sbb
ljmp
add
jge
sbb
lahf
mov
push
xor
mov
mov
popf
and
leave
dec
cmp
and
mov
xchg
jne
dec
sub
push
xor
dec
into
imul
xor
mov
mov
adc
fstpt
cmp
mov
pusha
mov
mov
fildl
and
pop
shlb
cmc
scas
mov
ljmp
nop
stos
cmpsb
add
stos
mov
inc
cld
test
and
out
push
inc
sub
fadd
popa
enter
mov
lock
popa
jmp
mov
sub
inc
jmp
incl
mov
rorl
or
dec
xor
ja
mov
push
lret
jbe
push
lods
or
cmp
mov
push
stos
pop
fwait
fs
sub
fs
lods
arpl
or
test
xchg
leave
xchg
lret
push
cli
adc
fucomip
scas
fcoml
jb
cld
dec
imul
cld
fimull
jnp
lea
insb
pop
sbb
popa
jecxz
ja
cmp
neg
adc
jecxz
fwait
cltd
nop
in
clc
imul
push
or
push
jbe
mov
rcr
out
push
xchg
push
pop
dec
lcall
adcl
fidivrs
push
pop
rorb
lock
sete
cmpsb
shl
test
mov
hlt
push
or
inc
mov
stc
jae
jbe
sbb
or
xchg
mov
jne
mov
sahf
mov
jl
stos
add
push
and
jecxz
mov
mov
lods
cmovo
int3
arpl
jp
sub
stos
aas
pop
sbb
dec
sbb
loop
add
mov
loop
mov
mov
inc
aam
cmp
jmp
push
test
outsl
in
xor
or
dec
pop
pop
nop
sub
ljmp
repnz
repnz
repz
int3
and
sbb
ja
add
sub
jle
sbb
xlat
adc
adc
mov
and
popf
es
iret
into
mov
mov
js
bound
mov
cmp
xchg
fcomps
sub
add
sub
test
aaa
icebp
jns
xchg
push
mov
and
xor
sbb
xchg
lock
clc
jmp
push
rolb
adc
add
cli
lahf
mov
je
into
cmpsb
shlb
jmp
xchg
jge
cmpsb
mov
mov
push
mov
int
shll
inc
sub
cmpsl
sub
insb
mov
mov
adc
clc
xor
mov
hlt
test
fs
imul
pop
xchg
mov
fisubrl
jecxz
movsl
insb
loopne
mov
scas
in
stos
add
cwtl
xlat
dec
sbb
sti
mov
js
or
push
js
addr16
jno
mov
jb
xor
sbb
dec
mov
mov
or
mov
enter
dec
stos
and
inc
adc
mov
rcll
jl
push
dec
pop
mov
mov
repnz
dec
push
add
dec
push
cmp
dec
stc
test
mov
xchg
xlat
faddl
lret
mov
lods
sbb
and
gs
xlat
adc
sub
sub
jg
xlat
pop
scas
push
dec
add
nop
jbe
xor
std
cmp
xorb
je
pop
mov
add
addr16
out
inc
nop
movsl
ss
ficompl
inc
rorb
jb
popf
mull
je
cmpsl
cmp
fdivrl
pusha
sub
adc
pop
xchg
test
pop
dec
mov
xchg
ss
pop
push
aaa
push
mov
adc
jne
dec
mov
dec
or
jo
je
testb
hlt
ret
jo
pop
xor
stc
addr16
mov
and
jl
xchg
insb
mov
fsubl
jns
inc
or
xor
push
sbb
ljmp
sub
xor
fmull
jb
adc
xor
adc
xchg
xor
fcomp
mov
add
xor
call
mov
inc
xor
in
pushf
mov
sarb
pop
xchg
test
rcrb
repz
es
movsl
shrb
inc
cmp
mov
adc
mov
or
dec
mov
and
outsb
and
shll
sub
sub
stos
sub
icebp
jcxz
mov
enter
mov
sub
cmp
pop
outsb
stc
out
loopne
cmp
add
lcallw
pop
test
xchg
mov
add
inc
cmp
mov
mov
mov
mov
jg
jmp
xchg
pop
shrl
subl
mov
or
cmp
mov
psraw
inc
push
adc
fcmove
in
push
cmp
ss
jp
push
push
shll
xor
pop
lods
pop
push
mov
xchg
mov
cwtl
jmp
cli
ficoms
mov
lcall
push
imull
rolb
xchg
add
jg
pop
aaa
sub
mov
mov
jno
and
inc
mov
adc
lcall
test
jne
pop
push
imul
pop
jns
fadds
enter
xor
bound
and
jne
ja
fsubl
loope
in
ret
add
insl
cmp
pusha
out
sar
add
xchg
test
cmpsb
scas
mov
or
xlat
and
hlt
jno
mov
and
repnz
add
scas
test
and
dec
shrd
js
and
arpl
and
jne
dec
xor
pop
jle
fndisi(8087
lods
pop
or
fdivs
sbb
and
xor
iret
fwait
insb
ja
mov
insl
push
jl
in
pop
mov
push
incl
xchg
sub
xchg
mov
mov
xchg
mov
xchg
imul
mov
scas
or
mov
inc
and
and
js
lods
push
stos
fldt
add
adc
jl
imul
or
and
jbe
rcr
pop
inc
xchg
pop
test
call
lock
lods
lret
mov
ret
jge
pop
add
dec
cmp
repnz
or
or
cwtl
mov
jno
ss
dec
popf
jp
push
mov
out
iret
lock
lds
jo
mov
pop
mov
scas
jbe
hlt
add
jae
mov
mov
mov
xor
adc
cwtl
movsl
pop
pusha
sub
in
pop
dec
addr16
js
mov
sub
rorl
je
scas
dec
arpl
xor
iret
repnz
push
ret
xchg
lret
pop
sub
dec
mov
mov
cld
pop
daa
jns
icebp
test
jg
mov
jbe
test
or
enter
mov
ds
or
das
rsqrtps
inc
lods
cmp
push
jmp
mov
imul
int
ljmp
imul
xchg
mov
loopne
push
aas
mov
mov
andl
lea
cs
fsubl
repnz
pop
shr
lods
adc
nop
imul
xor
mov
lock
adc
cmpsb
into
xchg
sub
or
ds
jmp
repz
or
inc
xor
pop
and
jl
adc
adc
in
and
jnp
out
pusha
push
jg
mov
das
cmp
scas
sbb
cmc
adc
cmp
ret
mov
sub
xor
mov
adc
ret
push
pop
popa
add
sub
xlat
fsubl
daa
mov
aaa
xchg
dec
mov
dec
jg
jne
cltd
xchg
call
mov
outsl
xchg
andb
repnz
ficompl
inc
mov
cmp
xor
pop
xor
jns
fwait
sbb
aam
adc
and
sub
cmp
xor
inc
hlt
cmpsb
jne
and
mov
test
in
incb
xchg
jno
push
mov
dec
cmc
test
in
add
xchg
pop
mov
fdiv
pop
sub
fisubrl
inc
insb
mul
xchg
and
cmp
icebp
lahf
fisttpll
sub
lds
popf
loope
or
pop
dec
call
cld
test
ret
aam
or
and
xchg
sbb
aam
jae
or
ror
std
mov
mov
gs
sti
sbb
pop
adc
xor
cmp
cmpsl
and
dec
inc
lods
mov
and
int
dec
xor
ljmp
lea
in
adc
inc
test
inc
out
int3
aas
mov
jle
sub
inc
push
loop
adc
pop
rorb
sbb
mov
push
xlat
sub
xor
mov
push
test
mov
jp
jg
test
stc
imul
push
cmp
stos
jo
arpl
add
icebp
mov
mov
pop
push
mov
ret
addr16
arpl
in
stos
lcall
or
bound
stc
push
nop
aas
bound
xchg
gs
rcl
cld
xorb
mov
icebp
dec
mov
fidivrs
push
dec
cld
cmp
and
data16
fs
lds
xor
pusha
pop
push
notb
out
pop
cmp
adc
cwtl
cmpsl
pop
cld
mov
insl
rdpmc
sbb
xor
imulb
cld
lahf
xlat
sbb
shll
fisubl
cmp
daa
mov
xchg
pop
cmp
test
xchg
or
adc
std
add
pop
ja
add
sbb
xor
pop
add
adc
mov
cltd
in
mov
scas
mov
in
cmc
mov
adc
rcll
dec
xchg
jmp
ret
popf
notb
push
push
and
lds
pusha
pusha
pop
pop
push
cmp
data16
xchg
inc
fcoms
or
cmp
leave
pop
lods
pop
cli
sbb
adc
xchg
xor
cli
mov
arpl
pop
xchg
pop
aam
fisttpll
pop
popf
stc
dec
or
dec
dec
pop
scas
pop
add
aam
leave
mov
out
add
movsl
enter
cmpl
lods
mov
fstpt
mov
roll
adc
pop
pop
jb
cmc
je
or
aad
or
mov
xchg
lods
mov
xor
clc
or
xchg
lods
pop
loop
test
aaa
std
adc
sti
ds
push
leave
lret
xor
icebp
in
repz
fnstsw
mov
dec
mov
jle
pop
add
shll
lret
push
movsb
fbstp
aad
les
pop
sub
mov
mov
outsl
jp
and
mov
mov
stos
int3
into
xchg
adc
sub
adc
dec
xor
jnp
nop
push
mov
jb
fs
scas
sbb
cld
sub
imul
dec
loop
pop
lock
inc
dec
pop
lock
or
mov
enter
movsb
and
jo
mov
imul
jge
pop
fcmovbe
mov
es
nop
ret
popf
pop
sbb
and
jbe
add
stos
rol
push
aam
mov
xchg
es
jo
and
inc
jne
jl
mov
out
jecxz
shrl
sti
mov
mov
ss
mov
cs
add
scas
loop
scas
clc
push
sbb
outsl
scas
movsb
cmp
movsb
mov
add
in
inc
and
mov
clc
mov
sti
pop
push
test
push
repz
jmp
ja
adc
cmpsb
dec
ja
inc
or
ficoml
int3
add
loope
sbb
test
pop
adc
sub
lret
cltd
icebp
daa
cwtl
pop
cvttps2pi
push
insl
pop
clc
mov
pop
sub
out
ror
mov
jnp
dec
leave
or
and
popf
pop
shll
or
sub
lret
fcmovu
xor
dec
adcl
fucom
ret
fs
shrl
hlt
leave
adc
lret
add
lahf
icebp
adc
xor
jno
mov
push
dec
xchg
mov
popa
js
les
sbb
or
or
sub
adc
pop
imull
sahf
sbb
std
mov
fwait
in
lret
cmp
push
mov
js
pop
sbb
gs
mov
test
sub
mov
lods
lcall
jno
dec
test
popa
add
fucomi
inc
icebp
in
popa
pop
dec
jnp
xchg
in
or
inc
andb
into
repz
add
shrb
xchg
inc
ja
dec
test
xcrypt-ecb
cmpsl
or
add
cmpsb
xchg
outsl
jecxz
int3
out
into
sti
cmp
mov
sub
jge
pop
pushl
cli
aad
repz
jb
xchg
out
jmp
xchg
cmp
adc
inc
mov
jge
sbb
leave
fs
clc
das
addb
sbb
mov
loope
repnz
aaa
lods
mov
scas
imul
cmpl
push
jg
insb
xor
xor
xchg
les
pop
cmp
push
test
mulb
adc
or
loopne
movsl
jecxz
sub
dec
mov
jg
and
inc
jb
fdivl
ss
shrb
inc
mov
mov
push
lock
or
jmp
arpl
push
ds
daa
add
pop
icebp
mov
pushf
ljmp
or
sbb
dec
arpl
js
idiv
lods
or
mov
mov
pandn
int3
and
out
pop
mov
dec
adc
inc
ret
fwait
and
cmp
loopne
ljmp
fadds
xchg
aaa
and
rcll
aad
iret
cmc
pop
xchg
cmp
xor
jg
js
les
outsl
inc
cmpsb
aaa
pop
jnp
test
jb
mov
outsb
jl
jnp
aad
pop
into
ret
mov
mov
loopne
xchg
push
cltd
mov
int
jbe
cmpb
jo
or
sbb
call
std
rcrl
mov
jmp
and
adc
outsb
xchg
lock
int3
xchg
adc
or
ja
clc
ret
inc
fisttps
inc
js
outsb
repz
pop
xor
call
repnz
or
mov
ljmp
adc
sub
jns
mov
stc
ljmp
mov
mov
push
div
sub
loope
inc
aas
outsl
sbb
ss
pop
cmp
adc
movsl
cmp
jl
push
inc
push
xor
in
shlb
outsl
cmp
xchg
and
mov
or
dec
lcall
or
or
mov
stos
sbb
push
sbb
shll
ja
jo
sarl
addr16
in
lret
mov
fcmove
sti
les
divb
push
mov
push
fwait
mov
cmpsl
xchg
lods
jp
enter
jae
xchg
mov
lock
orl
ret
cmp
shlb
sub
mov
lea
mov
movsb
test
nop
lods
hlt
sub
mov
xor
cmp
ds
cwtl
hlt
jl
add
lock
cld
xchg
stos
dec
js
ret
cmp
pop
xchg
addl
cmp
jo
xchg
add
add
push
xchg
adc
sub
jle
mov
scas
xchg
sub
std
in
pushf
sbb
iret
pop
inc
push
lea
mov
cmpsb
std
cli
jle
adc
lods
out
daa
dec
pop
push
jnp
std
pop
lds
pop
dec
push
jl
mov
inc
jb
jmp
shll
dec
mov
pop
rep
rorl
push
cmp
outsb
cmc
xchg
push
rorl
jne
fdivr
int3
cld
out
mov
bound
adc
cmp
inc
xor
jle
or
mov
rorb
mov
cmp
test
jecxz
stos
in
fldcw
and
loopne
xchg
aaa
imulb
pop
fs
rclb
pop
ret
pop
xchg
ret
and
stos
shll
notl
mov
jb
mov
sub
add
xchg
xchg
pop
pop
cmpsb
out
xchg
ret
xchg
push
inc
push
push
sub
movsb
pusha
sbb
idivb
lcall
jae
jg
cwtl
add
imul
mov
and
cmp
pop
inc
call
ret
sub
pop
jle
lock
or
in
fdivrs
jo
repnz
daa
xchg
int
mov
add
jns
inc
aas
movsl
inc
es
incl
faddl
and
add
sub
mov
mov
mov
add
enter
loop
in
adc
arpl
push
scas
add
out
adc
pop
int
push
js
add
sbb
sbb
pop
in
fsubrl
inc
fldt
sub
jge
dec
push
mov
daa
xchg
sbb
in
and
cmp
adc
push
push
adc
mull
dec
xor
cmpsl
es
int3
push
imul
adc
jae
nop
out
pop
pop
fwait
pop
sub
and
repnz
adc
cmp
mov
pop
add
dec
dec
jo
sbb
filds
fisttpl
and
jbe
cmp
out
movsb
or
int
pop
xor
pop
mov
mov
fwait
sbb
clc
das
add
inc
addr16
ljmp
mov
mov
test
in
jge
insl
mov
or
cwtl
sub
mov
adc
incb
pop
lock
jnp
xchg
test
insb
lret
dec
dec
data16
sti
mov
cli
dec
outsb
jb
int
nop
push
adc
xor
jecxz
pop
mov
dec
jno
inc
shrb
push
ss
mov
dec
dec
fsub
xchg
sub
fdiv
jle
fldcw
mov
xor
cmp
divl
cmp
inc
xchg
or
inc
cli
xor
or
fcomp
dec
add
fistpl
pop
jge
lea
or
mov
lret
mov
loop
cmp
aam
push
push
out
mov
xchg
mov
xor
shll
test
roll
jae
adc
repz
call
cld
push
fidivrs
jo
push
xchg
xchg
in
add
jp
ljmp
in
aam
rcl
shll
mov
lret
mov
sbb
mov
adc
add
mov
and
in
jmp
aad
bnd
into
movsl
outsb
mov
push
and
jmp
nop
mov
imul
dec
ljmp
xor
sahf
xor
leave
dec
mov
xchg
std
shlb
out
or
lods
push
in
jle
jno
or
adc
or
stc
fdivrl
stc
and
ljmp
and
into
loopne
addr16
xchg
test
les
test
and
and
and
dec
mov
cmc
mov
sbb
shll
mov
push
dec
push
stc
and
sub
or
movsl
adc
insl
lcall
stc
jecxz
sahf
divb
outsb
mov
add
xor
ljmp
out
xor
push
sahf
lcall
cmpsl
or
xchg
sub
outsb
int3
arpl
insb
bound
stos
jp
adc
sti
pop
mov
inc
jns
cmp
jnp
into
lahf
add
ja
push
ja
sub
addr16
inc
fmuls
push
sub
mov
and
cltd
mov
ret
mov
xchg
or
mov
aaa
adc
push
xor
test
pop
push
inc
lods
inc
repnz
int3
out
cmp
and
mulps
push
out
push
jecxz
movsb
arpl
inc
fstps
jne
nop
xlat
push
xor
cltd
ja
out
cmp
insl
cltd
mov
push
lahf
mov
push
bound
sbb
cmpsl
jge
gs
adc
xchg
xlat
cmp
and
mov
das
ljmp
ja
sub
xor
iret
popa
dec
shld
mov
outsl
aam
call
fcmovu
xor
add
nop
test
and
jnp
xchg
mov
mov
jb
mov
mov
hlt
inc
jb
xor
xchg
add
mov
bnd
xchg
push
push
cmp
in
mov
test
and
inc
pop
xor
scas
ljmp
and
xchg
push
adc
fbstp
lahf
outsb
jg
in
mov
mov
push
out
cmp
shll
insb
cld
insb
push
mov
cs
mov
dec
pop
movsb
clc
sub
xchg
add
push
add
add
addr16
cli
cmp
sub
inc
adc
pop
mov
mov
hlt
popf
sbb
pop
out
negb
xor
mov
loopnew
pusha
pop
jp
xor
bound
adc
lds
out
mov
sub
imull
push
dec
push
push
pop
dec
cwtl
ss
and
xor
xchg
loop
pop
xor
insb
test
test
sub
and
add
fcomps
or
pop
sahf
gs
stc
mov
test
xchg
cmp
jl
mov
mov
out
test
adc
push
inc
push
movb
cltd
inc
cmpsl
cwtl
sbb
fs
pop
insl
pop
sbb
cwtl
out
pop
loop
int3
repnz
cmovl
push
cmc
push
in
icebp
outsl
mov
xchg
push
and
loop
cmp
sar
dec
stos
xor
mov
cmpsl
aad
pop
clc
pop
pop
loopne
icebp
ds
lret
xor
lock
jl
mov
sbb
push
data16
jno
pop
mov
or
mov
imul
or
push
inc
jae
test
mov
xchg
mulb
xor
test
and
cmc
frstor
xchg
fucomip
inc
fnstenv
jecxz
jmp
push
dec
inc
and
mov
xchg
stc
and
pop
popf
adc
mov
or
lds
mov
mov
jnp
mov
int
scas
test
stc
cmp
push
mov
xor
notl
and
mov
leave
sub
dec
out
or
mov
cmp
into
pop
jmp
mov
xchg
cmp
outsl
inc
jbe
xchg
push
push
orb
roll
or
popa
mov
adc
into
fists
sub
sbb
sbb
scas
fmuls
icebp
xor
dec
js
repz
sahf
pmullw
mov
pop
es
fisubl
adc
jo
add
imul
fwait
xor
xchg
jae
ret
subb
dec
out
bound
loope
nop
adc
mov
jns
pop
je
arpl
sub
cli
fimuls
add
iret
dec
xchg
sahf
popa
int
sbb
fcoms
adc
sbb
xor
test
push
test
test
mov
mulb
xchg
dec
scas
ficomps
shll
jns
sahf
imul
cmpl
pop
xor
or
pop
mov
add
inc
bound
addl
xor
test
inc
cs
ss
imul
push
mov
xchg
cmp
lods
pop
dec
inc
repz
xchg
adc
adc
mov
add
cltd
js
stos
add
cmp
movsb
adc
aaa
push
jns
push
add
or
mov
sub
mov
imul
cs
xlat
pop
out
mov
jo
pop
xor
lock
mov
adc
lods
adc
inc
ljmp
and
mov
lret
aam
popa
or
loope
int3
xor
std
fsubrl
fstpl
dec
jmp
or
outsl
xor
mov
xor
cltd
push
jbe
xor
adcl
xchg
cmp
inc
mov
sub
xlat
in
sbb
lds
das
call
mov
daa
cmpsb
xor
push
popf
mov
mov
cmpsb
repz
pusha
fimull
cmpsl
leave
fildll
ja
jns
inc
jle
loopne
enter
adc
roll
push
cld
stos
cwtl
adc
pop
fs
pop
fwait
dec
mov
test
addr16
jl
into
push
jne
xchg
lahf
jne
jl
lea
xchg
leave
fcoms
movd
iret
repz
or
mov
pop
pop
loop
mov
ficoml
pop
jp
mov
nop
add
movsl
aas
dec
cmpsl
sti
outsl
inc
xchg
pop
iret
push
fincstp
push
or
ror
xor
xor
mov
sbb
out
repz
jbe
mov
sahf
xor
mov
dec
pushf
ret
fnstsw
and
jle
xchg
mov
popf
xor
xchg
mulb
jnp
jnp
jge
push
mov
sub
and
add
bound
push
fs
and
adc
fnstcw
jne
fldl
pop
lods
addr16
ret
data16
rcrl
pop
mov
rorl
imulb
int3
mov
sarb
xor
sbb
add
sub
jns
pushf
sti
imul
dec
jnp
mov
pop
or
xchg
cmp
xor
pop
dec
xor
enter
jp
icebp
arpl
jo
pushf
jmp
bound
push
xchg
adc
aam
rcrb
pop
xor
shrb
mov
enter
repnz
fcompl
jecxz
std
stos
scas
cwtl
dec
push
insl
cli
mov
xor
aad
stc
bound
fwait
les
jno
mov
push
jle
stos
mov
dec
mov
inc
jne
mov
call
mov
push
cli
popl
push
out
enter
jb
sub
pop
int
push
mov
leave
jp
or
rcrb
jne
xor
mov
sti
sub
dec
out
int3
cltd
adc
push
lret
test
mov
sahf
lret
les
sub
lea
cmpsb
push
lahf
pop
jnp
iret
adc
xor
push
movsb
mov
popf
rclb
pop
aas
inc
cmp
cmpsb
inc
icebp
daa
dec
daa
aas
pop
jge
dec
pusha
stos
push
and
fstpl
or
or
shl
or
lea
cmpsl
lret
les
sub
adc
xor
add
imul
push
decl
repnz
cmpsb
cltd
pop
lcall
les
into
gs
jge
inc
xchg
cmc
aad
imul
pop
jl
mull
cmp
and
sub
xor
mov
adc
inc
xchg
negl
mov
pop
and
xor
add
ret
ret
jae
movsb
and
test
cmp
and
stos
loop
aaa
inc
fcmovnu
imul
ds
lahf
dec
bnd
sahf
addr16
jae
mov
inc
xchg
nop
repz
mov
push
and
scas
data16
ret
stos
outsb
push
mov
and
js
mov
xor
std
cs
dec
mov
mov
sub
sub
call
ror
int
pop
std
xchg
jmp
sub
xchg
insl
push
stos
or
das
cld
gs
dec
or
in
mov
xor
adc
roll
cwtl
lds
push
imul
daa
addr16
sbb
inc
divl
das
fadd
adc
and
aad
ret
and
dec
push
pop
outsl
mov
icebp
mov
addr16
loope
pop
out
scas
movsl
into
pop
std
and
ficoms
or
add
in
or
aad
les
sahf
loope
fadds
jp
ret
fisttpll
data16
ss
clc
xor
dec
push
and
nop
adc
stos
add
mov
and
mov
sbb
lods
mov
push
insl
orl
lahf
ret
mov
sbb
adcb
hlt
incl
dec
pop
daa
insb
mov
adcl
and
dec
fdivrl
dec
jns
pop
mov
ret
fbstp
fcompl
push
pop
dec
mov
inc
test
lds
js
adc
push
insl
add
jnp
mov
popa
sbb
imul
mov
push
mov
js
or
std
ss
jae
fcomip
fdivs
mov
pop
lods
push
mov
call
dec
xchg
and
shlb
jecxz
cmp
inc
cmp
add
ss
repz
loope
and
and
cwtl
dec
fiaddl
xlat
aad
filds
int3
push
adc
in
pop
je
jmp
xchg
ss
adc
fbstp
mov
adc
mov
push
test
adc
in
lods
stc
inc
or
jmp
repz
insb
iret
pop
arpl
bound
xchg
jbe
imul
les
xor
ret
adc
pop
xchg
add
popf
loope
stos
mov
nop
setbe
inc
jbe
ljmp
xlat
add
dec
or
jge
insb
mov
push
sahf
ds
call
nop
imul
sbb
loopne
dec
mov
shlb
xor
adc
push
and
dec
add
and
mov
into
in
mov
ret
sbb
loopne,pt
aad
adc
jns
or
int
setl
lret
mov
cmp
cmp
shlb
mov
mov
in
inc
ret
enter
jmp
xchg
pop
pushl
xchg
jne
ljmp
fiadds
cmp
add
cmp
pushf
xor
pop
jmp
cwtl
push
pop
inc
inc
fs
mov
das
add
pop
pop
inc
xchg
rclb
mov
les
xor
mov
pop
movsb
adc
cmp
lods
jmp
shl
jbe
pushf
cmpsl
mov
and
pop
out
aaa
inc
jge
jno
aad
pop
movsl
add
xlat
jo
cs
xor
jae
jecxz
push
or
fdiv
push
popa
xor
stos
cltd
sahf
arpl
or
add
push
in
mov
stc
push
push
fnstsw
inc
mov
xchg
ret
pop
in
ja
daa
push
mov
outsb
cmp
or
xchg
divb
sbb
imul
roll
push
negl
push
xchg
lea
inc
mov
mov
xlat
cmc
inc
mov
jp
cld
cmp
dec
lods
push
lret
test
iret
sbbl
xor
sub
aad
sti
fldl
push
mov
mov
xor
jmp
cmp
mov
xchg
xor
iret
pop
out
and
in
sbb
pop
push
push
fildll
lcall
std
xor
aas
xor
arpl
push
iret
popf
popa
fwait
ljmp
arpl
movsl
in
xchg
pop
sbb
cli
jecxz
fcompl
mov
ja
pop
lahf
movaps
jp
or
cli
xor
pop
std
ja
orl
xchg
cmp
shr
adc
inc
fistl
hlt
jle
aaa
imul
movsl
mov
cmp
mov
xchg
pop
loopne,pn
mov
mov
gs
sarb
rcrl
mov
loope
lods
inc
push
movsl
mov
add
push
in
inc
test
or
adc
hlt
and
mov
and
sti
imul
scas
push
leave
fistpll
test
sbb
cli
bound
fcoms
xchg
clc
and
add
out
or
xor
rorb
in
andl
mov
sbb
xchg
adc
cmp
push
add
jecxz
push
aam
mov
ss
out
xchg
mov
jne
lods
xchg
les
icebp
inc
jecxz
cld
mov
lret
inc
lods
mov
lods
das
mov
pop
popa
scas
movsl
cs
lea
xchg
aad
lret
dec
inc
sbb
pop
in
lahf
fwait
int
mov
shrl
dec
xor
sub
xchg
mov
mov
mov
int3
imul
hlt
push
or
inc
cld
xchg
outsl
mov
subl
cmp
clc
push
dec
cmp
mov
cmp
jmp
dec
lods
out
rcrb
sahf
adc
mov
pop
je
stos
sub
xor
adc
sub
mov
mov
jne
stos
xor
cld
inc
popf
pop
scas
lret
and
lock
push
jnp
fcmovnb
cmp
xchg
in
ror
sti
aaa
push
dec
addb
push
mov
dec
sub
adc
inc
ja
jmp
jb
rcrl
push
mov
mov
aam
je
dec
push
cmc
out
movl
xorl
movsl
jmp
fs
loope
repz
jge
xchg
jge
leave
mov
pop
or
out
xor
jbe
arpl
loope
ja
ds
xor
push
push
aam
fs
lcall
mov
psrld
ret
test
mov
mov
mov
rcrl
loopne
test
faddl
in
ss
sahf
inc
pop
pop
ret
dec
fdivr
les
xchg
movb
adc
andl
pop
pop
jb
imul
dec
sub
jne
addr16
dec
les
test
adc
mov
and
std
loope
mov
lcall
daa
and
xchg
pop
cmpsb
mov
and
lret
mov
sti
mov
jmp
xchg
inc
lahf
aas
std
data16
pop
xchg
dec
pop
inc
movb
cmp
adc
ja
rol
testl
aam
daa
xor
or
loop
or
into
add
arpl
cmp
lea
dec
sbb
mov
sub
fidivl
inc
dec
add
mov
and
sti
mov
jns
loope
movsb
out
sub
pop
ds
call
pop
mov
pop
mov
aaa
xchg
add
pop
int3
mov
pusha
xor
je
repnz
fists
pop
rorl
xor
dec
call
push
subb
test
pop
sub
or
lock
mov
int
adc
scas
pop
cltd
fnstenv
lret
and
test
sub
pop
cmp
scas
loopne
mov
inc
xchg
cli
sub
and
inc
daa
jnp
inc
loopne
and
dec
add
pushf
sbb
mov
mov
mov
xlat
outsl
sub
mov
pop
fisubrl
cmp
sbb
or
loopne
push
pop
movsl
pop
fcom
cmp
jbe
ljmp
icebp
or
pop
test
int3
movsb
cld
daa
inc
repnz
cli
movsl
pop
not
jge
xchg
repnz
clc
push
ret
inc
mov
out
push
push
popf
add
and
xchg
fcoms
adc
inc
aas
xchg
enter
mov
fsubrs
int3
out
cmp
movl
mov
mov
jl
add
ljmp
jge
mov
sbb
and
cli
jecxz
scas
mov
push
mov
ficoml
fs
dec
jns
inc
pusha
call
movsb
sarb
inc
jmp
loopne
xor
xorb
sahf
dec
jmp
adc
testb
sbb
pop
dec
into
push
dec
insl
rcrl
std
test
lret
movsb
mov
test
pop
fdivp
adcl
lcall
vmread
lods
rcl
jg
fdivrl
aam
adcb
jecxz
rcll
dec
rcrb
pop
int
mov
inc
sbb
and
push
lods
lods
or
lret
fcoml
xchg
out
sti
mov
rep
xchg
jp
cmpsb
xor
jle
sub
dec
femms
and
push
cli
jnp
imul
and
daa
pop
test
sbb
jl
pop
mov
fmulp
scas
clc
movsl
sbb
mov
hlt
xchg
mov
inc
cmp
push
pop
push
inc
xchg
popa
cli
pop
push
dec
sub
dec
xchg
pusha
movntps
aas
sub
gs
sbb
inc
les
stos
dec
mov
lahf
inc
test
pushf
add
scas
fwait
sti
arpl
jmp
loope
push
call
xor
cs
and
das
push
bound
outsb
aaa
mov
sub
jl
mov
lea
mov
mov
or
ljmp
inc
sbb
adc
sbb
and
stos
sti
pop
icebp
pop
inc
inc
or
je
and
jl
outsl
add
testl
sbb
lret
sub
adc
pop
cmp
sbb
or
mov
jl
jmp
sti
lret
push
or
iret
inc
jle
adc
mov
sub
inc
jns
in
and
mov
mov
loope
mov
loopne
das
mov
inc
mov
jl
jg
add
into
sub
push
adc
adc
test
mov
jb
fisttpl
rolb
ds
outsb
imul
data16
mov
xor
out
mov
jb
mov
jbe
daa
xor
pop
repz
push
xchg
add
shll
fisubl
push
jg
mov
xchg
rclb
push
jecxz
mov
loope
lods
mov
mov
imul
xchg
in
andl
and
mov
and
cmp
subb
jbe
or
xchg
scas
ror
xchg
loope
enter
push
cmp
cmpsb
or
adc
and
mov
sahf
daa
sub
sti
lods
shlb
jnp
repnz
outsl
popf
es
mull
clc
ret
xchg
fwait
ret
mov
repnz
stos
cmp
jo
mov
dec
sub
movlps
mov
in
cmpsb
push
mov
sti
xor
push
push
adc
lock
mov
mov
push
imul
ljmp
sub
and
pop
in
insb
jl
scas
int
outsb
push
scas
jge
xchg
jnp
loop
add
adc
xchg
lahf
inc
ret
loopne
or
mov
push
lea
shrl
push
pushw
or
fldcw
mov
ss
sub
imul
loope
into
pop
xchg
cmp
or
push
jnp
mov
push
repz
lret
adc
or
xchg
cmp
push
and
cmpsb
mov
dec
jns
cmp
sahf
es
jb
and
mov
push
movsbl
movsl
cld
mov
xor
xchg
cwtl
test
sahf
lahf
aam
mov
push
push
or
in
push
nop
js
mov
pushf
std
adcb
out
lds
jo
sarl
jb
cmp
xor
movsb
ss
xchg
scas
in
pop
ret
movsb
les
xor
xchg
pop
adc
imul
xchg
xor
popf
ss
sub
ljmp
cmp
xchg
je
sub
pusha
push
leave
movsb
mov
lret
mov
xchg
movsb
js
je
aas
and
lea
add
xchg
sub
ds
inc
or
mov
test
inc
cmpsb
and
cwtl
inc
lahf
stos
cmpsb
cmp
xor
in
ljmp
mov
fidivrl
lds
sbb
dec
cmc
mov
sub
add
mov
lock
or
inc
or
rclb
mov
out
add
int
jmp
icebp
mov
ss
lret
push
cmc
test
sbb
and
push
mov
andl
ret
frstor
clc
mov
lret
lea
xor
movntps
mov
out
dec
imul
negb
xor
mov
dec
or
hlt
xchg
iret
or
cmc
lock
xor
in
sub
lret
jle
outsl
in
jmp
imul
sti
pop
xor
sarl
ljmp
stc
out
push
in
stos
cltd
push
call
in
dec
mov
pop
add
and
fsubr
xchg
pusha
fisubrs
cwtl
in
fwait
jno
orb
push
aaa
leave
pop
adc
in
out
dec
sbb
or
sbb
rclb
movsl
ljmp
jne
cmp
sbb
das
jecxz
or
mov
mov
test
xor
rorb
and
mov
cmc
adc
xchg
jo
lods
in
mov
xchg
insl
pop
mov
mov
xchg
mov
jmp
inc
inc
xor
popa
paddb
aas
cmp
js
mov
jg
in
inc
insl
push
xchg
mov
cmc
ja
push
push
push
push
cmc
rcrb
leave
jmp
mov
pop
sub
adc
sub
push
cli
adc
dec
aam
xchg
lock
je
add
xor
leave
jp
sub
shll
xrelease
or
mov
sbb
pushf
pop
cli
cmp
jb
jae
pop
xchg
lods
ds
test
repz
dec
ficoml
ljmp
xorb
jecxz
sbbl
inc
cmpsl
stc
xor
dec
xchg
jge
xbegin
clc
or
jp
dec
sub
ret
ret
mov
adc
xor
jle
xor
inc
jle
mov
and
in
call
ljmp
mov
cmpl
lahf
stos
popa
sub
push
inc
sbb
icebp
leave
fistpl
inc
scas
je
inc
int
add
adc
adc
adc
dec
movsbl
out
hlt
notb
and
or
sti
jnp
sahf
inc
lcall
xchg
mov
hlt
mov
imul
or
sub
xchg
adc
dec
cmp
cmp
mov
inc
aad
out
hlt
push
int3
imul
dec
in
sub
insl
xor
cmp
add
push
mov
push
aam
push
pop
cmp
xchg
aad
lods
je
cmp
dec
jno
add
add
jecxz
push
iret
adc
or
adc
push
cmp
shl
mov
jnp
xor
orl
xchg
mov
mov
mov
rep
arpl
cmpl
into
add
filds
and
xor
fdivrs
fmuls
xchg
das
fldl
out
or
movsl
inc
xor
sarl
sahf
or
imul
cld
mov
xor
lods
cmp
xor
sbb
pop
aam
push
out
test
jl
loop
js
pop
leave
mov
jno
push
lahf
in
stos
pop
pop
xchg
insb
arpl
mov
inc
arpl
jb
jp
mov
mov
dec
popl
cmp
inc
std
pushf
negb
mov
mov
shll
mov
out
xchg
dec
inc
jns
outsl
pop
push
sbb
clc
fidivs
lea
pop
mov
add
lds
push
cmp
in
lcall
mov
rorb
xor
jle
int
adc
filds
inc
outsb
xchg
sahf
lahf
mov
inc
icebp
lea
mov
std
pop
xchg
rorb
insb
cmpsb
pop
or
incb
shlb
mov
test
mov
clc
inc
jle
and
xchg
out
cmc
and
add
sbb
imul
jle
icebp
and
mov
out
aas
in
jge
int
add
push
aam
push
int3
js
mov
push
addb
inc
lret
xchg
int
mov
xchg
jb,pt
push
xor
cli
sarb
add
cmp
cld
shll
inc
add
rcr
sbb
adc
inc
movb
jne
adc
lcall
lds
fisubs
and
hlt
lcall
gs
imul
clc
mov
add
xchg
adc
or
add
pop
xor
sarb
jge
or
mov
or
or
cli
jge
add
aad
xor
gs
xor
ljmp
lds
dec
loopne
les
adc
lods
inc
jmp
xchg
mov
mov
cmp
mov
and
inc
out
faddl
pop
inc
insl
in
daa
stc
jmp
bound
jge
fnsave
arpl
lahf
lds
mov
cmpsb
cmpsb
repz
xchg
xor
test
or
push
out
std
popf
into
add
sbb
rcll
pop
mov
popa
sbbl
enter
and
repz
jp
or
movsb
dec
in
std
arpl
stos
xchg
fbld
add
into
sub
lret
push
jp
cmp
jo
add
cmpsb
movsl
fwait
jns
mov
andb
ljmp
adc
xlat
cld
xor
call
clc
mov
cmp
sub
cmp
int3
cltd
adc
push
aas
dec
mov
adc
mov
jmp
push
repnz
cwtl
int
test
mov
sub
add
mov
sub
jge
stos
inc
jns
fmul
sti
loope
mov
sahf
inc
inc
mov
int
pop
ror
popa
mov
fs
adc
das
mov
xor
xchg
lcall
out
fdivr
add
retw
shl
pop
mov
push
xchg
test
outsl
std
push
or
rcrl
loope
imul
enter
mov
aad
dec
and
xchg
jecxz
lock
mov
addr16
scas
jmp
fdivs
sub
out
mov
out
sub
mov
add
sbb
sub
xchg
push
aas
push
push
gs
pushf
rorb
dec
add
aas
add
pusha
mov
lahf
pop
mov
into
loop
jmp
cmpsb
jecxz
cvttps2pi
mov
mov
test
push
hlt
movsb
or
jnp
stos
stos
cmp
ret
cli
mov
add
sbb
push
jbe
aad
xor
and
xor
insl
pop
mov
xchg
mov
sbb
mov
lret
ja
movsl
cs
stos
push
stos
enter
cmpl
sbb
add
stos
scas
in
loop
mov
and
ja
sub
jns
xchg
repz
fistps
xchg
or
adc
test
sarb
push
int
mov
add
gs
adc
in
mov
xlat
pop
je
aas
adc
add
jge
shrl
jno
push
inc
xchg
or
pop
pop
es
pop
dec
div
inc
adc
mov
fidivrs
out
ret
idivl
hlt
adc
and
xlat
outsb
lret
and
jbe
cmpb
mov
icebp
shrl
pop
xor
and
jbe
subb
fucomi
dec
pop
and
jns
sub
cmp
or
ret
repz
mov
add
iret
sub
je
scas
mov
pop
insb
inc
and
outsl
pop
or
push
cmp
loopne
mov
jb
xor
mov
mov
or
cmpsl
mov
out
setno
xlat
imul
repnz
mov
cmp
mov
aaa
cmp
mov
call
call
jecxz
ss
mov
addr16
rcrl
sbb
rcrl
and
inc
js
int
ljmp
sbb
xchg
xchg
sti
adc
dec
repz
cmp
xchg
out
and
lods
loop
adc
sub
jb
jp
cwtl
cmpsl
ljmp
cmp
mov
mov
std
std
sarb
xor
inc
out
mov
shl
jle
adc
addr16
jp
jg
jmp
cmpsl
push
and
mov
mov
mov
cmpsl
je
aaa
jecxz
lcall
adc
ret
mov
sub
cltd
les
jg
ss
dec
xchg
insl
lock
imul
add
dec
or
push
push
pop
ja
aad
pop
iret
outsl
xor
pop
lods
pusha
sub
in
out
in
clc
mov
dec
or
push
xor
sub
mov
cmpsl
and
fisubl
les
data16
lods
cmp
ret
mov
sbb
movsb
mov
mov
pop
loope
aam
mov
mov
or
jb
sti
jecxz
mov
repz
arpl
xor
push
cmp
mov
jo
push
fisttpl
cli
js
adc
mov
and
dec
outsb
stc
sahf
add
in
xor
stc
loop
inc
cltd
xchg
adc
stc
pushf
lret
mov
cmp
sub
lcall
lret
jae
inc
mov
gs
insb
loope
jge
out
aaa
inc
addr16
stc
inc
test
subb
jno
ljmp
add
mov
cmc
sahf
push
xchg
mov
fwait
dec
pop
fdivr
dec
push
push
jmp
sbb
repz
clc
jnp
jmp
dec
jb
push
jl
shr
push
out
xchg
imul
insl
mov
or
popa
jp
gs
mov
add
add
xor
sub
cmp
nop
out
aad
je
in
test
lods
aad
pop
mov
pop
cmpsl
iret
xchg
sub
ret
cld
cmp
dec
in
and
cld
ljmp
jne
dec
push
outsl
adc
sbb
cmp
jp
jo
sbb
outsb
in
aaa
dec
jbe
movsb
xchg
test
call
ss
test
or
fwait
icebp
mov
sub
dec
pop
and
pop
lock
pop
xor
fdivs
xchg
loopne
pop
in
xlat
push
cmc
mov
pop
fwait
orl
jg
dec
push
movsl
push
sub
dec
cmp
xchg
inc
jne
orl
cmp
jns
inc
addr16
pop
sbb
scas
jl
pop
sub
jbe,pt
subl
xchg
lods
xchg
ljmp
sub
dec
inc
xor
pop
add
xchg
fcomi
shlb
jmp
xchg
fcoml
scas
mov
xor
and
and
mov
hlt
out
push
push
sar
int3
sbb
sub
inc
ret
mov
imul
cmpsl
and
xor
sub
movsb
jmp
push
mov
jge
in
push
inc
jge
cmp
push
adcl
pop
stos
adc
out
fisubrs
sbb
hlt
jns
xchg
popa
cmpsb
in
sub
loopne
dec
push
jp
fsts
in
filds
je
mov
lcall
adc
or
daa
push
pop
jp
sub
jge
xchg
xlat
add
out
jne
dec
addr16
sbb
sbb
xorl
xchg
cmp
inc
mov
cmp
inc
movsb
movsl
fistps
push
adc
sbb
fadd
jge
cs
inc
ficomps
popa
lods
movsl
lcall
xchg
jbe
cmp
rcrb
mulb
xor
call
addr16
mov
inc
fcmovbe
pop
and
inc
push
sahf
test
inc
xor
repnz
cmp
mov
cltd
loope
shlb
dec
lcall
push
push
inc
imul
stos
dec
filds
pop
stos
cs
adc
and
in
sbb
jp
sub
push
push
cmpl
push
adc
cmc
stos
push
lret
test
push
push
repnz
mov
das
mov
ror
or
mov
in
jmp
ficoms
push
mov
addb
sub
jge
or
push
mov
inc
inc
gs
dec
xchg
xor
loop
mov
scas
aad
xlat
xchg
cmc
jecxz
jmp
dec
jo
sub
mov
cmp
xor
cmpsb
dec
sub
in
stos
push
push
jg
je
lea
fcomip
or
call
jnp
fdivrs
lods
jns
xor
nop
jg
cmp
loopne
out
jecxz
pop
jno
xchg
lcall
adc
cld
jl
je
dec
xlat
mov
shrl
jns
dec
pop
inc
test
adc
andl
mov
and
adc
inc
aas
lret
stos
andb
inc
or
cld
mov
jmp
addr16
lcall
dec
leave
push
stos
rcll
movsb
data16
decb
sub
cmp
adc
lahf
inc
imul
lods
shl
xchg
bound
mov
push
daa
jno
into
pop
inc
faddl
les
mov
inc
push
cwtl
ss
in
inc
push
add
xchg
insl
cli
mov
lds
xchg
out
cmp
in
jo
in
dec
mov
sahf
push
xchg
and
adc
in
fisttpl
push
sahf
movsb
testl
filds
lcall
stos
test
lret
enter
add
outsl
adc
sub
inc
outsl
test
stos
das
stc
add
push
xor
inc
sub
mov
out
mov
insb
into
lea
jne
cmp
push
pop
jne
in
pop
pushl
stos
xorb
push
or
lret
lock
into
xchg
or
cmp
shlb
nop
stc
nop
add
movsb
pop
mov
mov
stos
mov
test
cltd
inc
xchg
ret
push
jl,pn
mov
pop
cwtl
test
jno
and
neg
arpl
pop
jle
in
ret
cmpsl
cmp
mov
pop
ds
inc
je
repz
nop
sub
jp
jg
xor
sub
adc
sub
popa
hlt
mov
or
imul
mov
cli
sub
xor
pop
fsts
cmp
imul
mov
push
pextrw
test
rorl
lret
and
int
out
cmc
cwtl
enter
test
mov
push
insl
push
inc
xchg
dec
gs
js
sub
adc
jns
pop
pop
in
mov
xchg
mov
rorl
mov
sbb
fmull
push
pop
mov
stos
lds
in
add
pusha
sub
add
pushf
int
loope
les
rol
mov
scas
test
in
mov
in
push
popa
repz
or
jno
sub
bound
sub
fistpll
popf
pop
shlb
pop
in
fdivr
jno
mov
add
jb
jns
cmpsb
mov
cmp
xchg
ss
adc
iret
dec
pop
inc
add
daa
mov
decl
add
sbb
inc
adcl
dec
sbb
jne
sub
sub
dec
xor
subb
mov
outsl
out
gs
adc
mov
int
jmp
or
loop
je
add
inc
mov
loop
push
insb
add
add
shrl
inc
ljmp
jmp
addr16
xchg
xor
add
repz
ja
inc
jno
movsl
int
push
cltd
mov
addr16
jge
imul
mov
fs
jns
add
test
mov
pop
mov
ljmp
sbb
arpl
xor
pop
mov
dec
in
xor
scas
sti
adc
adc
imul
and
pop
mov
aas
or
sub
pusha
and
dec
pop
lods
dec
and
jne
pusha
cmp
fwait
mov
and
push
add
sbb
ja
fistpll
mov
pop
sbb
mov
pop
push
dec
cs
outsb
xchg
sbb
repnz
clc
ja
adc
je
scas
shll
jbe
fdivrl
mov
xchg
test
xchg
pop
stos
pop
and
xor
ds
repnz
outsb
mov
inc
or
inc
mov
mov
mov
mov
fwait
inc
xlat
bound
pop
aaa
stos
fidivrl
int3
adc
cmp
jne
jp
ret
add
adc
xchg
inc
testb
xchg
adc
addl
test
push
xor
stos
out
je
out
mov
or
or
push
adc
pop
cwtl
hlt
fcoml
jecxz
sub
inc
movsl
and
int3
addr16
lock
mov
push
sbbl
lret
es
jecxz
cli
jmp
mov
add
add
insb
pop
idivl
or
sub
out
movsb
inc
mulb
cmpsb
rcrl
icebp
push
dec
push
sbb
push
mov
clc
push
jo
pop
xchg
fisttpll
pushf
lea
hlt
and
mov
negb
mov
jno
sbb
inc
shrl
xchg
out
pop
sub
xor
imul
call
insl
xlat
mov
aas
sbb
mulsd
scas
pop
fnstcw
pop
jno
call
hlt
mov
sbb
in
sub
notl
xor
mov
sbb
jmp
cld
mov
and
jmp
dec
sti
jp
shrl
pop
xchg
inc
in
fldl
lods
enter
add
jmp
in
cmp
push
push
xchg
sti
outsl
out
in
jp
in
mov
jae
jbe
stc
test
rorl
lcall
outsb
nop
roll
xor
aam
test
dec
xor
enter
int3
pop
cmp
xor
mov
fchs
mov
call
jl
inc
jp
and
push
aaa
sbb
mov
mov
mov
inc
add
test
jbe
jns
arpl
inc
lods
cmpsb
add
int
je
xchg
arpl
push
xchg
mov
clc
dec
adc
stos
lahf
ds
lcall
les
ss
stc
push
popa
cwtl
shrl
mov
pop
mov
mov
outsl
mov
gs
repz
xchg
push
rcrb
pop
stc
out
inc
into
dec
dec
adc
pop
push
mov
fcmovu
mov
test
mov
lret
dec
mov
clc
in
mov
dec
push
mov
in
inc
mov
jne
push
cmp
xor
and
mov
mov
mov
push
aas
sbb
xchg
dec
xchg
test
xor
pusha
push
sub
fwait
jo
cmpl
push
loopne
push
xor
insb
jle
mov
jecxz
and
cmp
test
daa
stos
mov
push
xor
ljmp
cmp
pop
cmp
ja
rcl
dec
push
loopne
stos
or
xchg
push
mov
xor
add
icebp
cmp
mov
xchg
xchg
dec
xchg
inc
xchg
add
pusha
sti
jno
xchg
xchg
mov
ror
test
pop
pop
lds
aaa
inc
je
movsl
pop
div
xor
sbbl
xlat
sbb
inc
cld
test
lds
test
xor
push
testb
xchg
in
sub
sti
xchg
lea
mov
push
jmp
cmpsb
inc
mov
out
mov
push
dec
pop
jo
or
test
ss
sub
add
or
std
sbb
mov
and
lret
mov
outsl
sti
xchg
dec
lds
scas
data16
je
jge
sbb
loopne
imul
pop
xor
xlat
cmc
fisubl
ja
dec
or
test
repnz
adc
cmp
fstp
bound
dec
push
push
sarl
cmpsb
test
push
cmp
mov
cmp
mov
aas
push
mov
xor
xchg
xchg
and
jae
fidivl
push
cwtl
or
or
mov
pusha
jp
or
fwait
jl
dec
sub
jns
stc
test
lahf
mov
out
or
in
lcall
test
in
in
test
ljmp
inc
inc
xor
cmp
inc
sub
dec
push
fcmovbe
push
popf
outsb
fists
into
je
imul
movsl
xchg
add
and
test
and
jmp
daa
pop
insb
add
adc
rclb
cli
es
mov
pop
mov
pop
mov
aaa
fsubs
insl
in
sbb
or
inc
mov
mov
imul
sbb
aaa
push
fsubrl
jnp
out
mov
mov
test
xor
loope
xchg
shrb
shl
pop
shlb
lock
jp
movl
mov
mov
xlat
inc
or
ficoms
js
mov
push
push
loopne
mov
lret
dec
pop
push
mov
cmp
mov
roll
mov
xchg
rolb
xchg
xchg
push
lahf
in
cmpsl
jb
lods
lcall
shlb
or
aam
push
xchg
call
daa
mov
and
sbb
packuswb
add
not
test
int
fbstp
es
pop
hlt
xor
pusha
inc
pop
dec
xor
roll
ret
mov
fcompl
pop
test
xchg
xchg
ret
arpl
jle
lret
in
push
sar
jo,pt
stos
fs
in
enter
subb
add
sahf
mov
or
outsb
jmp
ret
or
adc
push
fsts
dec
xor
data16
int3
mov
dec
mov
out
enter
dec
mov
test
pusha
movsb
fsubrs
mov
mov
xchg
rorb
mov
and
pop
push
sbb
or
ja
push
push
cmp
jg
push
xchg
mov
sahf
pushf
insl
sub
cltd
mov
sub
pop
jns
lret
mov
mov
loope
xchg
test
insb
mov
fsubrs
pop
mov
mov
nop
stos
pop
mov
mov
loop
push
into
or
cld
mov
mov
and
nop
shlb
mov
enter
xchg
push
std
xor
xor
or
add
outsb
inc
fmull
lahf
cmpsl
cmpsb
int3
or
mov
push
jp
xchg
inc
and
inc
inc
cmpsb
call
dec
dec
ja
mov
add
cmp
lock
nop
shlb
pusha
adc
dec
dec
pusha
mov
and
push
mov
call
lds
inc
cmp
jl
lret
and
jp
jo
sub
dec
and
insl
push
icebp
push
pop
xchg
and
mov
cltd
cmp
dec
leave
or
out
adc
adc
outsb
leave
sub
and
jb
fwait
sahf
fdivrl
push
push
inc
push
jo
jb
mov
cltd
jp
test
pop
adc
jns
cmp
mov
fisttpll
mov
shrl
pop
repnz
adc
or
icebp
xor
test
call
jb
lds
fbstp
cmp
jae
mov
cmpsb
jecxz
pop
loopne
xor
pusha
fildl
mov
lret
and
xlat
scas
inc
adc
and
push
fucomip
cmp
pushf
shr
lock
fcmovnbe
mov
add
cltd
cmp
xchg
adc
inc
xor
lcall
je
mov
push
inc
rolb
inc
or
cltd
add
xchg
cmc
nop
xor
adc
sti
daa
xor
icebp
and
pop
imul
sbb
ficoms
lock
fisubrs
jae
sub
gs
cmp
scas
xor
cmp
pop
jg
in
lock
push
inc
cmc
push
rcr
dec
sbb
in
pushf
icebp
dec
cmp
add
js,pt
mov
and
jmp
and
cmpsb
adc
je
sarl
push
or
jmp
push
fldt
clc
scas
movsb
fwait
bound
xorb
jae
jl
mov
scas
loope
push
repz
es
mov
push
pusha
leave
lock
repnz
shlb
subl
pop
sbb
or
pop
dec
cs
push
cmpsb
and
divb
mov
rolb
cmc
das
adc
mov
xchg
shll
in
pop
mov
ljmp
mov
sarl
cli
xor
push
mov
cmp
push
loopne
mov
sub
add
sub
mov
sbb
bound
adc
push
stc
lock
out
data16
cmpsb
pop
out
iret
test
sub
ficompl
pop
ds
imul
push
or
add
call
xor
adc
icebp
clc
stos
add
insb
gs
scas
mov
lcall
mov
cmp
std
aas
addr16
popa
inc
int
jge
xor
adc
das
cltd
pop
insl
rclb
pop
pushf
jmp
xor
mov
outsl
jmp
imul
mov
into
pop
lock
ja
sub
sub
cltd
cs
imull
adc
pop
push
inc
jmp
dec
cmpsl
aaa
push
jmp
jno
int3
adc
pop
mov
repz
stc
sub
adc
dec
bound
stc
push
ret
test
cmp
lds
test
fidivrl
icebp
mov
js
shll
dec
lret
mov
test
lock
negb
sub
lock
xor
enter
in
les
cmp
les
xchg
mov
adc
ds
mov
add
ret
mov
je
add
xchg
dec
leave
sbb
unpckhps
xor
pop
and
insb
popa
sub
inc
jno
ss
out
decb
sub
cmpsl
and
xchg
cld
sbb
sbbl
inc
mov
jecxz
sbb
sbbl
pop
cmc
sbb
jecxz
push
sti
sbb
add
mov
cmp
jno
cmpl
inc
pop
fidivrs
sub
in
inc
stc
cmp
lods
mov
icebp
push
mov
loop
inc
popf
test
iret
or
xchg
jg
xchg
popf
pop
xchg
sbb
dec
pop
aaa
or
imul
pop
xor
lods
sub
xchg
inc
cmpl
push
inc
aad
jae
mov
mov
icebp
test
rolb
xchg
dec
add
dec
in
mov
cmp
arpl
jae
aad
pop
movb
rol
cld
push
jmp
loope
cld
sub
sub
nop
ljmp
popf
jbe
cmp
fadds
lock
push
movsb
mov
dec
aas
xchg
adc
pusha
rcl
aad
je
fildl
adc
mov
lret
rclb
aaa
les
mov
mov
mov
adc
pop
adc
jg
or
iret
mov
jecxz
hlt
lea
mov
fbstp
cmp
into
jg
dec
and
or
jnp
test
mov
sub
mov
fstpl
pusha
cmp
and
cli
in
mov
mul
ljmp
mov
add
pop
aaa
sbb
xor
push
pusha
pop
sahf
mov
jbe
lea
ret
push
lcall
xchg
es
arpl
shrl
out
inc
loopne
outsb
mov
lock
dec
dec
xor
xor
fs
cmc
sarb
cmp
mov
xorb
mov
add
jp
popl
add
xor
ficoms
es
mov
mov
mov
mov
mov
repnz
cmp
ljmp
int3
mov
mov
cmpsb
cmp
pop
js
outsl
push
lea
inc
push
sub
pop
push
ss
sub
push
hlt
dec
pop
jnp
cmp
mov
xor
int
nop
push
test
je
xchg
xor
rorl
sti
orl
and
mov
dec
cmp
push
test
or
adc
push
div
xor
sbb
pushf
and
jecxz
adc
test
pop
mov
in
adc
mov
mov
rcrl
rcrl
loop
shrb
ljmp
aas
mov
lods
pop
add
lahf
push
dec
xchg
xor
iret
in
jo
out
fimuls
mov
outsl
fwait
iret
adcl
mov
pusha
jne
fdivrs
pop
mul
inc
mov
push
sbb
hlt
sub
or
mov
mov
adc
js
popa
cs
mov
xchg
inc
push
dec
add
add
pop
cld
fldenv
sti
fsin
add
movsb
adc
mov
adc
inc
aaa
cmc
js
std
inc
ja
and
mov
fadd
inc
sub
or
fists
fcmovnu
inc
and
sbb
mov
sbb
in
test
jbe
sub
add
nop
mov
cmpsb
in
dec
inc
mov
sbb
jp
inc
or
mov
iret
jle
pop
cli
xor
jmp
out
int3
test
clc
in
and
sahf
std
repnz
sbb
sbb
mov
dec
mov
mov
sub
stos
lds
pop
sbb
add
sbb
shlb
clc
int
push
push
test
xchg
sub
jne
inc
mov
cmp
push
push
int
mov
popl
or
mov
and
add
leave
jecxz
movsb
mov
adc
mov
xor
and
dec
jno
sub
push
inc
dec
dec
sbb
stos
pop
movsb
mov
inc
leave
movsb
and
cmpsl
vpunpcklqdq
out
sbb
loope
xchg
fwait
pop
ja
and
aad
adc
outsb
xchg
sbb
imul
xor
xor
mov
mov
addr16
push
add
xchg
sbb
jmp
or
cmp
pop
ret
dec
cltd
inc
and
shll
dec
cmpsl
je
mov
ja
cmp
sbb
pop
cmp
push
dec
fnstsw
add
adcb
imul
inc
in
les
push
aam
or
sbb
mov
rcrb
rclb
loop
and
decb
or
jl
cmpsb
mov
scas
imul
push
fadds
shrl
xor
mov
divl
sub
lret
daa
jne
bound
outsb
aas
and
stos
std
aad
loope
sbb
push
in
push
push
jge
pop
xor
std
pop
pusha
out
xorb
fwait
add
sub
inc
add
lods
add
int
inc
jns
addl
int
aas
nop
lds
je
mov
or
iret
mov
sub
jmp
push
or
cld
or
mov
fnstenv
sbb
fmul
stc
rcll
pop
fwait
mov
sahf
jns
xor
and
push
call
mov
ja
pop
add
push
jnp
adcb
cmp
in
mov
adc
or
xor
clc
sahf
aaa
test
outsb
and
stos
add
pop
sub
insl
push
mov
stos
dec
push
cmp
stos
pop
or
mov
pop
cmp
test
add
ret
shlb
int
retw
jns
pop
pop
imul
jmp
pop
sti
incb
dec
lcall
sbb
call
push
bnd
stos
xchg
lcall
mov
adc
dec
mov
imul
push
stos
cmp
add
mov
mov
cmp
fistpl
lahf
cwtl
adc
push
jb
lods
rorl
or
push
daa
ret
cmpl
mov
lods
mov
notl
mov
inc
jmp
push
push
xchg
out
or
pop
popf
pop
xor
cmp
fisttpll
gs
paddw
leave
sbb
arpl
addb
cwtl
outsl
lods
cli
icebp
push
sbb
inc
sub
fdivrs
xorb
xor
lods
in
adc
adc
jno
mov
cmp
pop
jbe
mov
sub
xchg
lock
xchg
inc
daa
movsb
mov
add
push
adc
add
pop
and
add
leave
push
add
add
sbb
stos
idivb
mov
pop
or
loop
adc
sbb
xor
sub
mov
insb
mov
mov
jge
push
mov
repz
in
push
fwait
cltd
xchg
aas
loope
jle
or
sbb
pushf
inc
jb
pushl
lret
addr16
xchg
jbe
mov
pop
pop
in
and
popa
jns
cs
in
xor
jne
imul
and
and
es
pop
pop
outsl
inc
dec
cmpsl
xchg
fistpll
in
xchg
repnz
cs
or
scas
mov
ficompl
add
out
push
imul
aam
mov
cwtl
loop,pt
std
xlat
and
xchg
data16
data16
pop
out
or
mov
out
xchg
cmc
aaa
rcrb
sbb
sbb
sbb
aaa
add
lods
sbb
and
shll
movsb
xor
fwait
addr16
ret
lock
jg
frstor
mov
ds
in
push
hlt
xor
mov
insl
stos
js
lods
mov
and
xchg
and
pop
rorb
lret
dec
lods
jl
xor
add
je
insb
adc
xchg
add
lahf
les
into
inc
imul
push
jne
xchg
jmp
lods
push
push
cli
inc
xchg
stos
repnz
aam
push
loop
push
mov
repz
adc
push
data16
or
xlat
ret
add
mov
and
sbb
pop
cld
mov
test
xchg
pop
xchg
ficompl
cmpsl
push
push
std
sub
or
pop
arpl
outsl
mov
and
xchg
jb
nop
and
mov
and
pop
adc
popf
ja
repz
cmp
dec
sbb
insl
mov
pop
jnp
and
gs
jg
or
push
test
cmp
jno
test
idivb
push
mov
push
xchg
mov
imul
adc
dec
push
dec
repnz
insb
sub
xchg
xchg
mov
xor
adcb
push
add
adc
or
stos
mov
and
movsl
lods
inc
add
insb
mov
push
or
add
andb
jecxz
loope
and
mov
in
hlt
mov
imul
movsl
sbb
adc
fsubrl
mov
adc
js
inc
insl
jmp
lods
cli
and
jge
xchg
aam
sub
divb
fistps
inc
int3
xchg
iret
arpl
xchg
pushf
xchg
mov
mov
rolb
jne
xchg
pop
cs
sahf
pop
xor
mov
and
jmp
fisubrs
jmp
fisttpl
pop
lret
sbb
add
into
mov
nop
mov
and
dec
mov
push
add
loopne
das
popf
hlt
adc
js
jno
cld
push
ljmp
and
popf
push
mov
xchg
cwtl
xor
xchg
fdivl
pop
stc
inc
xor
inc
fiadds
daa
push
fwait
sub
es
out
and
mov
mov
daa
xchg
inc
mov
sbb
cmp
and
jb
lcall
daa
push
mov
jb
pop
sbb
adc
sub
inc
add
aas
mov
or
loope
mov
sub
scas
dec
mov
dec
in
or
popa
add
add
insl
cld
adcb
add
xor
and
xchg
inc
or
call
ret
in
std
lret
cs
mov
int
push
es
push
adc
inc
dec
inc
mov
ret
cmp
nop
jg
or
scas
fdivrl
xchg
dec
mov
jae
pushf
mov
test
shr
jp
lcall
xor
ficoms
add
inc
xchg
sbb
icebp
mov
lods
mov
pop
into
popa
inc
jbe
leave
push
adc
es
mov
fs
fildll
inc
gs
push
adc
sbb
push
sub
inc
outsb
push
or
popf
pushf
mov
adc
insb
xlat
dec
cwtl
xchg
sbb
pop
xor
mov
cmp
mov
jecxz
in
mov
and
out
dec
lods
jo
xor
inc
pusha
cmpl
cmpl
out
push
and
dec
in
jl
lds
outsb
addb
mov
xchg
inc
or
sub
add
int3
mull
outsl
movsb
inc
and
outsl
pop
and
mov
leave
mov
sub
mov
mov
sahf
out
or
jnp
test
cs
shlb
enter
xchg
ret
insb
xor
repz
sub
adc
jo
cmc
or
jno
inc
push
cmp
rorb
iret
mov
push
xlat
jge
xchg
cltd
out
sbb
sbb
loop
cs
ret
jns
inc
repz
push
or
in
loop
mov
and
ljmp
mov
or
mov
push
mov
or
imul
dec
dec
xchg
aas
mov
loopne
mov
lret
ror
dec
fbstp
mov
and
rcl
xchg
xor
shr
enter
and
mov
dec
into
add
mov
cmpsl
inc
push
test
xchg
fs
push
in
dec
clc
in
xor
pop
ret
jmp
push
push
inc
xchg
movsl
and
ret
jmp
and
dec
test
xchg
jno
mov
aam
push
mov
outsb
xchg
cmp
fcompl
push
mov
stos
addb
pop
push
xchg
add
or
pushf
push
loope
xchg
jecxz
fmuls
mov
test
add
sarl
mov
into
stc
cwtl
inc
call
push
jnp
push
sbb
inc
or
sbb
cmp
push
or
cmp
lds
jecxz
jecxz
jno
jne
je
fsubs
mov
and
icebp
fistpll
test
aad
jge
rcrl
repnz
pop
cltd
movsl
in
mov
movsb
imul
xchg
test
sub
jecxz
cs
mov
cmp
push
shrl
movups
and
mov
leave
out
xchg
adc
cmp
pusha
lods
dec
sbb
and
inc
scas
dec
popa
cs
pusha
xchg
pop
enter
push
hlt
pusha
add
imul
fdivl
mov
pop
xor
cmpsl
and
cmc
push
fistpll
into
rorb
in
test
fisttps
xchg
jecxz
or
out
sub
test
cmpsl
jbe
and
fcmovb
cltd
adc
mov
xchg
pop
std
cs
popf
out
stos
ljmp
adc
push
les
cltd
lahf
pop
fs
mov
call
push
xor
mov
bound
adc
dec
lea
orb
stc
dec
ss
icebp
leave
pop
lea
dec
sub
and
jbe
and
jbe
fwait
xchg
es
orl
mov
dec
addr16
push
cmp
xor
les
jae
insb
imul
xor
or
pusha
xchg
pop
iret
add
pop
cmp
imulb
or
out
inc
xchg
test
sub
sub
jecxz
insl
ret
into
test
out
pop
push
adc
cmp
inc
out
mov
add
mov
pop
int3
pushf
cmc
leave
push
in
xlat
jp
rclb
jg
mov
jecxz
ss
pusha
mov
orb
mov
dec
std
sub
popa
mov
or
aas
mov
enter
insl
popf
iret
inc
outsb
jne
and
pusha
dec
push
js
mov
adc
dec
imul
push
jo
sub
test
sbb
jle
adc
jae
ss
push
ljmp
enter
jl
int3
adc
mov
hlt
xchg
pop
insl
enter
out
fwait
add
std
js
xlat
lea
outsb
mov
inc
or
sbb
daa
jl
lods
push
pop
lds
push
movsl
jb
xchg
mov
out
fs
insb
test
and
cmc
cmp
adc
pop
sahf
loope
dec
data16
jb
mov
lock
ljmp
or
sbb
pop
xor
aam
xchg
cmp
mov
fwait
les
mov
add
cmp
mov
cmc
adc
jb
out
es
stc
sub
stc
in
adc
sub
fcmovu
dec
xchg
out
xchg
mov
push
mov
and
pop
mov
test
xor
repnz
stc
sar
pop
cmp
and
lods
push
jl
imul
into
mov
cmp
mov
hlt
add
xor
fists
jl
and
loope
and
lcall
xor
inc
ljmp
int3
jb
sbb
loope
lock
test
dec
mov
adc
daa
cld
icebp
mov
out
nop
mov
fildl
pop
incl
into
push
mov
xchg
sbb
mov
adc
cmp
shlb
pop
bound
mov
inc
inc
xchg
sub
lret
push
push
cmc
fidivl
or
iret
push
sahf
loopne
fisttpll
pop
fistps
mov
dec
pop
std
mov
and
cmp
pop
das
inc
loopne
and
sahf
mov
xlat
sub
call
xorl
mov
sbb
pop
jo
push
jbe
paddd
out
jns
inc
cmpsb
cwtl
cmpsb
sbb
out
les
push
mov
xor
out
cltd
scas
in
pop
dec
mov
bound
and
adc
fiaddl
jnp
cmp
jo
icebp
out
mov
mov
stos
pop
fdivrs
sti
in
cmpsb
cwtl
mov
shlb
push
in
push
imul
sti
xlat
inc
lods
mov
jno
cmpsb
inc
jg
scas
xor
iret
add
testb
scas
jmp
orb
jp
mov
cltd
repnz
mov
mov
adc
push
jo
add
push
jnp
xchg
dec
rcll
movsl
dec
loop
inc
dec
cld
jge
jae
mov
inc
add
sub
push
sub
xchg
jo
inc
enter
daa
jae
jo
inc
and
mov
or
into
sub
test
out
cmp
pop
out
xchg
test
out
jp
ficomps
mov
xor
mov
push
fmulp
xor
sbb
push
jb
or
mov
dec
fdivl
push
bound
or
sti
jbe
enter
int3
sbb
jl
rorl
push
adc
mul
pop
cmc
add
gs
sbb
in
cltd
test
mov
push
popf
add
into
mov
mov
int3
xchg
out
sbb
pop
mov
or
inc
mov
lret
fildl
pop
mov
dec
push
pop
fnstenv
stos
cli
cmp
push
outsb
dec
shlb
adc
jmp
pop
lods
sub
movl
sub
or
jns
addl
insb
mov
sbb
cmp
or
inc
lret
pop
mov
aad
repz
ret
jb
adc
std
mov
xchg
lahf
push
mov
mov
ljmp
ds
nop
lods
pop
sbb
stos
push
push
jo
out
pop
iret
pop
xor
lcall
dec
mov
or
ljmp
mov
mov
fidivrl
xchg
inc
push
jb
adc
sbbl
mov
pop
xorl
stos
mov
outsl
jecxz
and
ds
iret
loope
mov
jnp
lock
sarb
fistl
std
fidivrl
loope
pusha
add
int
xlat
dec
rclb
jle
jb
loopne
dec
add
mov
push
sahf
aam
mov
xchg
cmpsl
inc
std
xchg
pop
ljmp
ss
jg
and
retw
popa
mov
mov
sbb
loope
cld
ljmp
repz
lahf
inc
mov
enter
xchg
dec
and
sbb
mov
pop
jg
lret
loopne
sub
sti
push
push
sarl
sbb
push
and
int3
lcall
mov
or
jae
pop
fs
test
rcrl
sarl
aad
ret
mov
mov
xchg
shrl
pop
xchg
xor
scas
popa
inc
sub
inc
push
cld
xor
dec
adc
rcrb
mov
popf
mov
fstpl
mov
popa
movsb
bound
scas
adc
cmpsl
test
mov
imul
mov
les
inc
lret
pop
mov
sbbl
popf
sbb
lret
mov
push
movb
repz
pop
fbstp
or
clc
dec
inc
xchg
gs
pop
mov
cmp
data16
add
mov
aaa
sub
mov
inc
mov
sti
out
cltd
xchg
cs
jge
add
gs
mov
dec
aas
sbb
in
hlt
outsl
pop
bound
dec
xchg
fs
push
lret
adc
iret
loopne
ret
stos
testb
mov
push
arpl
jmp
xchg
mov
mov
mov
test
stos
jecxz
imul
mov
dec
pop
aaa
lret
adc
loopne
xor
jge
lea
push
fdivs
and
je
scas
sub
and
inc
jbe
ds
ljmp
notl
jmp
cltd
push
and
test
loop
out
cltd
ljmp
add
xchg
mov
or
or
fcoms
jno
mov
push
ss
clc
inc
jo
clc
xchg
push
movsl
pop
outsl
or
pop
xor
mov
cmp
add
js
inc
out
mov
mov
adc
cmp
jmp
aaa
jmp
push
rcl
pop
loop
test
or
mov
push
or
xchg
dec
ss
mov
push
and
dec
push
addr16
lret
hlt
aad
jne
xchg
js
inc
cmp
add
jl
lock
xor
hlt
cmp
sub
jp
cli
pop
ds
movsb
mov
daa
pop
inc
outsl
sub
or
arpl
mov
das
cmp
adcb
imull
adc
ret
insb
loop,pt
jle
out
subl
jo
dec
aad
pop
rcll
iret
aad
jl
cmp
xlat
push
xchg
cmpsb
outsb
out
pop
dec
cli
je
in
inc
lcall
cmp
adc
lret
imul
fcom
ds
inc
add
rcrl
pop
dec
pop
lea
outsb
cs
pop
push
fcompl
mov
imul
xchg
xorl
hlt
shll
and
xlat
mov
add
sub
mov
mov
es
loopne
ljmp
shlb
add
sub
lahf
or
lret
ljmp
sbb
xchg
mov
fmul
sarl
adc
pop
pop
out
inc
lcall
ds
fldenv
add
dec
dec
iret
and
cmp
movsl
sti
cmpsl
sub
mov
ret
ljmp
cltd
push
incl
ret
scas
xor
inc
or
cmp
sarl
push
xchg
push
cld
movsl
fldt
sbb
cmp
mov
lods
pushf
mov
scas
mov
dec
add
pop
les
sub
and
inc
insl
sbb
mov
cmp
lea
cmc
enter
xchg
lgs
jmp
mov
add
rorb
lret
fisttps
enter
sbb
mov
push
adcl
dec
cli
mov
jae
push
cmpsb
dec
outsl
xor
mov
and
xchg
push
sub
loopne
cmp
xchg
sub
sbb
test
test
mov
push
or
hlt
push
outsl
outsb
jmp
adc
inc
pop
jbe
sub
cltd
inc
xchg
add
aaa
leave
pop
xchg
mov
xor
mov
lret
dec
movsb
push
add
push
sar
or
push
inc
idivb
inc
cmp
push
in
leave
and
or
or
push
xor
fdivs
xor
es
fsubl
or
lret
lret
sub
int
outsb
push
fsubl
hlt
test
test
fldenv
or
shrb
or
addr16
sbb
add
sahf
mov
push
push
and
jbe
ljmp
xchg
mov
cli
mov
cmc
test
je
pop
ja
dec
stc
inc
add
aam
jo
test
pop
adcb
dec
xlat
or
das
out
loope
jg
inc
jo
mov
jg
and
lret
cmp
jle
sti
mul
and
inc
add
or
jl
mov
jno
mov
pop
cmp
loope
pop
push
mov
inc
enter
cmp
pushf
sbb
daa
push
mov
xorl
sub
repz
adc
mov
cli
pop
push
scas
loope
mov
sub
ficoms
clc
mov
mov
cli
xchg
ficoms
and
sbb
jecxz
add
cltd
xor
sub
cmpsb
loope
jnp
dec
pop
adc
jbe
sub
hlt
cld
cmp
sbb
xchg
stc
xor
scas
dec
shl
push
lds
xchg
pushl
cmpl
int
adc
sub
inc
out
push
jmp
mov
pop
add
das
outsb
adc
xor
cmp
nop
mov
movsb
mov
jb
xor
mov
lock
lret
push
adc
loope
sbb
clc
mov
mov
test
sbb
int3
add
pxor
lods
sbb
lret
push
jecxz
pop
mov
loop
inc
daa
mov
push
sbb
js
in
lahf
das
jae
add
jmp
cld
push
xor
test
mov
je
mov
xchg
insb
repnz
rcrw
sarl
in
xchg
mov
inc
dec
or
pop
or
inc
mov
or
rcll
push
gs
dec
fidivrl
pop
fdivs
loope
inc
mov
notl
loop
mov
ja
inc
and
les
ret
xchg
jbe
xchg
mov
and
lock
dec
and
es
pop
inc
lea
xchg
or
scas
and
inc
pop
mov
aaa
pop
xchg
cmp
leave
inc
pop
jno
popa
fldenv
mov
sub
fists
mov
xchg
inc
pop
in
scas
cmp
xchg
mov
cli
sub
aam
cmp
mov
dec
push
test
xchg
out
mov
out
xchg
push
pop
and
fwait
and
les
dec
rclb
xor
pop
mov
xor
scas
fs
das
push
add
pop
aas
dec
mov
cwtl
pop
xor
leave
xchg
pop
push
adc
ja
adc
cmc
cmp
int3
js
xorb
sub
mov
mov
aad
xlat
in
mul
jb
cmpsb
mov
cmp
lcall
std
sub
cmp
add
jne
mov
cs
inc
adc
int3
mov
and
inc
jmp
mov
push
jg
mov
insl
adc
xchg
xor
and
cmp
and
mov
loop
sub
adc
inc
mov
mov
sbb
test
mov
mov
mov
loopne
jns
jno
int
sbb
and
sahf
aaa
outsl
push
add
pop
das
add
fsubrl
cmp
shll
outsl
addr16
push
movsl
data16
popa
sub
icebp
test
lret
inc
js
mov
pop
and
xchg
sub
sahf
jg
nop
mov
fwait
dec
stos
sbb
int3
fwait
and
stc
xchg
jae
shl
cmpsb
jo
in
inc
inc
repz
inc
ja
mov
imul
xchg
shll
sub
imul
clc
sub
add
mov
jp
stc
clc
in
andl
push
shl
call
sub
jl
xchg
or
enter
and
sar
push
inc
dec
dec
pop
or
js
xor
stos
and
push
clc
roll
imul
or
cmpsl
imul
addr16
and
cmp
adc
sbb
add
jbe
or
xchg
loope
mov
addr16
pop
fwait
xor
mov
dec
loop
inc
in
cmp
add
lcall
addr16
call
mov
cmp
mov
insb
cmp
aam
push
push
pop
es
scas
cmp
sti
cli
jmp
in
jmp
stc
cs
inc
in
bound
cs
addr16
mov
jp
pop
loop
mov
and
push
xor
mov
ljmp
or
outsb
arpl
push
sub
loopne
lock
insb
lds
mov
mov
add
das
lcall
mov
lea
fcoms
push
xchg
adc
daa
fwait
arpl
out
inc
push
bound
mov
pop
nop
testl
mov
out
repnz
enter
jp
fldt
mov
fcoml
xchg
adc
cmpsl
sbb
nop
jle
sbb
lock
jp
repz
xchg
mov
imul
mov
dec
push
mov
stc
adc
stc
in
repz
das
push
iret
rcr
xchg
push
dec
popa
int
sub
daa
jecxz
stos
js
xchg
adc
mov
fcmove
gs
jmp
loop
pop
out
or
mov
mov
inc
leave
imul
jl
xchg
mov
add
insl
fisubrl
jge
loopne
lcall
sub
shlb
inc
mov
in
inc
jg
aam
dec
js
xor
xor
sti
sub
push
and
test
dec
ret
jnp
xor
cmp
stos
push
lea
adc
loop
sbb
data16
ja
pop
pop
fs
pop
xchg
or
cltd
mov
xor
inc
lods
out
movb
cmp
push
lahf
test
ja
mov
add
imul
out
int
xlat
inc
jne
sub
jno
nop
push
enter
jnp
xchg
sub
sub
mov
adc
or
cmp
lret
pop
imul
scas
out
test
push
test
jbe
and
les
mov
mov
fsubl
xchg
jne
or
adc
das
xchg
dec
cmpb
sub
mov
pop
cmpsl
scas
cmpsl
sbb
push
xchg
pop
mov
clc
jnp
jp
sub
xor
hlt
add
outsb
call
mov
adc
sub
stc
dec
push
add
push
adc
idivb
and
add
mov
arpl
push
inc
xor
mov
xchg
popa
mov
add
loopne
jno
jno
cmp
mov
test
fsubp
pop
rcrl
rolb
mov
pusha
imul
mov
add
cltd
popf
les
popf
sbb
jbe
or
fnstenv
lret
lods
cltd
sbb
sub
inc
test
jo
add
cmp
sbb
dec
xor
jge
cmp
push
es
push
sbb
jae
scas
jne
or
jns
popf
aas
or
ficoms
mov
insb
rcrb
lock
push
stos
push
sub
shlb
test
mov
adc
dec
mov
xor
push
inc
rorl
push
push
dec
test
mov
mov
pop
insl
fldt
int3
add
fidivl
xchg
sarl
clc
into
imul
adc
pop
mov
rorb
sahf
adc
mov
mov
out
leave
imul
inc
adc
xor
mov
lret
jmp
push
inc
inc
loopne
lret
mov
pop
daa
and
xchg
mov
sbb
xchg
sub
xor
sti
nop
fwait
mov
shrl
sbb
stos
loope
test
or
mov
cmp
rol
cmp
cltd
jne
fsubs
sahf
test
fbstp
jecxz
rcll
movsb
test
push
xchg
mov
adc
jle
sub
lret
adc
sti
jnp
or
imul
loop
push
ljmp
dec
sbb
lea
xlat
mov
fs
jbe,pt
or
aas
outsb
frstor
int3
sbb
fdivrl
jo
stc
adc
sub
in
iret
mov
jmp
inc
mov
lahf
scas
inc
push
popa
sub
sub
inc
jo
xchg
loope
js
fsubl
loope
xor
call
fucomi
subb
mov
sqrtps
jo
std
xor
cwtl
cmpsl
shrb
insb
pusha
std
xchg
call
mov
mov
cmp
js
push
push
in
je
test
lods
test
testb
insb
dec
inc
jnp
ret
sub
fldl
push
pop
push
cmc
xor
mov
aaa
cld
jns
mov
aad
lods
dec
icebp
jp
in
stos
add
daa
lods
push
hlt
jnp
pop
mov
push
daa
sarb
out
repnz
mov
sbb
movsl
iret
popf
push
mov
inc
je
stos
sarb
xchg
or
sbb
jmp
gs
rcr
add
popf
ficoml
imul
arpl
lret
jle
dec
lods
sbb
jmp
sub
dec
sti
add
aaa
shll
shrl
imulb
mov
and
xor
mov
in
inc
shlb
pop
or
popf
popl
movsl
fmull
sub
mov
in
jp
sbb
mov
sbb
mov
ficoms
mov
jno
ja
mov
popf
lock
imul
scas
adc
cmp
hlt
or
mov
in
cltd
or
xor
mov
add
jecxz
enter
xor
lods
inc
cmp
mov
jmp
movsb
aas
pop
test
xor
mov
push
lds
incb
test
mov
gs
das
mov
pop
mov
fbstp
jnp
outsb
pop
xlat
cmpsl
scas
sub
cli
arpl
cwtl
and
ja
roll
pop
iret
inc
mov
sub
mov
sbb
shrb
or
lods
and
or
dec
dec
mov
les
pop
jmp
les
push
addl
pop
mov
outsl
add
fisttps
sbb
out
mov
out
es
mov
pop
pop
mov
pop
in
mov
xchg
int
sub
dec
cmp
cli
lret
in
cmpb
pop
push
dec
cmpb
inc
inc
es
push
mov
push
or
mov
ja
push
mov
rol
jg
out
xchg
lret
inc
or
xchg
fisubrs
mov
xor
pop
mov
pop
xchg
dec
daa
sub
loopne
sub
test
popf
pop
aad
or
adc
dec
mov
jnp
add
jmp
aas
shlb
ror
xor
fmuls
in
push
mov
fmull
sti
sub
add
ficoms
not
push
and
inc
jg
out
mov
push
sub
dec
jne
xor
out
sbb
dec
icebp
xor
xor
loop
shlb
mov
sub
cmp
lcall
mov
sub
stos
cmc
pop
dec
loop
xchg
jecxz
in
loop
imul
adc
cmp
bsr
push
xchg
adc
loop
mov
repz
inc
dec
jno
jb
imul
push
mov
cmp
arpl
or
sbb
call
fcoml
cmp
out
mov
cmp
jl
sub
push
pushf
mov
pop
cmp
push
cwtl
clc
xchg
xchg
jne
pop
mov
dec
std
jns
out
jecxz
out
inc
push
insl
mov
add
and
add
and
fnstenv
nop
mov
jo
data16
mov
and
mov
or
cmp
inc
int
mov
test
and
loop
mov
jno
lret
jge
lret
cmp
daa
sub
xor
mov
js
ss
lock
jecxz
pushf
adc
jb
push
pop
js
add
idiv
lret
shll
movsb
mov
outsb
jmp
xchg
adcl
out
arpl
dec
xchg
cltd
shll
sbb
outsl
push
pushf
push
addr16
lret
xchg
and
cmpsl
repz
inc
sbb
aaa
bound
xchg
push
mov
inc
or
and
dec
mov
cmp
dec
mov
imul
cmp
repz
mov
leave
mov
add
or
addl
mov
sbb
xchg
mov
jbe
sbb
idivb
and
lods
pop
mov
pusha
or
cmp
mov
sbb
dec
outsb
jno
cmpsl
and
xchg
addr16
test
fucom
andb
jmp
daa
sub
xor
rcrl
pop
hlt
sahf
inc
in
inc
mulb
pop
scas
mov
in
enter
sti
pop
xchg
adc
and
lret
je
mov
mov
push
add
pop
sub
rolb
outsl
adc
popa
xor
xchg
fistps
je
mov
and
push
mov
sti
imul
jmp
fildl
std
or
adc
inc
pop
sti
jmp
inc
push
push
xlat
or
push
into
xlat
inc
je
das
jle
int
pop
call
or
sub
fsubrp
jecxz
jl
add
mov
cwtl
adc
test
cmp
mov
fdivrl
pop
aaa
dec
sub
cmpb
and
ret
insb
movsl
out
xchg
outsl
push
insl
push
push
or
movsb
test
ret
push
cli
mov
cmpsb
fdivrl
aam
outsl
mov
shl
sbbb
jg
adc
ret
mov
xchg
jecxz
push
and
orb
sbb
daa
daa
mov
out
addr16
sbb
mov
ljmp
andl
leave
sub
imul
push
mov
out
sbb
mov
adc
mov
and
rep
pushl
jmp
dec
jg
out
loop
fdivrp
sbb
pop
outsl
stc
call
push
les
sbb
lcall
into
jecxz
jns
pusha
inc
sbb
pop
add
in
rclb
mov
shr
add
daa
insl
jg
mov
adc
inc
inc
or
icebp
or
loope
xor
adc
enter
cmp
and
pop
sub
jb
call
sub
dec
dec
mov
ret
xchg
shrl
shll
js
push
dec
mov
scas
xchg
push
test
add
mov
mov
fnop
out
ljmp
test
pop
fdivp
add
mov
cmp
test
xlat
popa
inc
arpl
js
dec
hlt
out
mov
in
xchg
push
jl
push
roll
sub
add
cmpxchg
lcall
js
rcr
mov
mov
and
pop
aad
loop
sarb
lahf
out
fwait
dec
test
cmpsl
das
inc
fwait
cli
fisubrl
decl
lret
adc
pop
pop
or
mov
les
nop
push
outsb
inc
out
or
mov
and
aam
cmc
sbb
fwait
jo
fbld
xor
jle
xchg
mov
mov
fildl
xor
xlat
sub
gs
pop
mov
sbb
ret
fnstcw
pop
inc
cmpl
sub
mov
pushf
sub
push
dec
inc
mov
inc
push
daa
jle
sar
or
jmp
add
xor
dec
aas
mov
inc
pusha
dec
push
pop
or
scas
cmp
cmp
movsl
pop
filds
cmpsl
inc
je
ret
cltd
clc
roll
push
mov
add
lds
scas
stos
pop
cli
lea
jbe
shl
enter
add
bound
fisubs
jns
clc
sub
int3
xchg
fiaddl
mov
lods
mov
jmp
and
scas
cli
push
stc
inc
pop
or
and
mov
pop
jmp
dec
mov
sbb
mov
xor
xor
pop
xor
cli
bound
cs
pop
inc
cmp
pop
pop
pop
cmp
mov
mov
pop
aas
jmp
aas
xchg
roll
scas
ret
cmpsl
popf
adc
and
leave
jne
sub
arpl
inc
jp
sbb
add
mov
shrb
outsl
push
jg
addr16
xor
push
sub
push
arpl
cmp
push
push
pop
jmp
jno
nop
cmpsb
out
std
sbb
repnz
or
decb
cmp
add
push
xchg
cmp
add
xor
push
mov
jns
lret
cmovge
push
leave
xchg
push
lret
pop
cltd
out
add
jns
push
push
mov
cmp
jb
xor
popa
rol
cmp
gs
aas
ret
clc
fadd
lret
push
pop
popf
mov
sahf
pop
scas
aas
js
mov
cmpl
mov
sub
sti
subl
inc
sbb
jg
dec
loop
addr16
cmpsl
loopne
mov
clc
xor
jmp
jge
outsb
int3
dec
pop
pop
aaa
inc
les
pop
popa
mov
not
ljmp
adc
jecxz
adc
repnz
popf
call
popa
icebp
jle
push
pop
dec
outsb
sbb
push
lock
pop
sti
lock
into
leave
jno
xchg
add
mov
mov
movsb
into
ljmp
or
mov
in
mov
dec
adc
and
stos
adc
sbb
mov
outsl
mov
push
aam
mov
clc
mov
mov
adc
in
pop
cmc
xchg
xchg
pushf
mov
flds
es
addb
mov
push
sbb
cmpsb
mov
repnz
inc
imul
cli
movsb
scas
inc
scas
aas
sub
clc
mov
mov
inc
clc
mov
mov
enter
mov
jg
out
mov
ljmp
icebp
jne
idiv
lcall
mov
mov
mov
aaa
into
fsub
and
vmwrite
imul
subl
aas
roll
shrb
or
popa
rorb
inc
inc
dec
adc
xchg
sub
arpl
out
cmp
sets
mov
rol
sbb
xlat
out
push
adc
loop
pop
call
and
push
insb
jbe
stc
andl
out
push
jg
aas
pop
mov
lock
pop
int3
test
push
push
out
push
bound
mov
aam
pop
int3
movsb
pop
in
push
adc
jmp
fildl
sbb
jno
lea
adc
jo
mov
sbb
out
stos
fmulp
xchg
pop
add
loop
aaa
das
push
jae
sbb
push
mov
xchg
pop
leave
outsb
in
jecxz
adc
clc
sub
push
mov
or
mov
cmp
data16
into
lret
inc
outsl
add
xchg
lods
dec
xlat
cld
sbb
popa
cld
cmp
repnz
fcomps
cmp
jle
mov
ret
hlt
add
cmc
das
imul
and
repz
mov
or
inc
inc
sub
insb
subl
jno
cs
push
int3
jge
gs
mov
cld
sub
loop
jnp
lods
or
js
push
lcall
gs
sub
mov
inc
testb
cmp
jbe
xor
std
lret
pop
in
mov
inc
jl
jb
cmpsb
into
mov
add
pushf
push
stos
pusha
cmc
addr16
mov
int
pop
pop
push
mov
movsl
nop
popa
lret
push
mov
mov
jno
jmp
stos
jbe
gs
lret
push
xchg
adc
cs
jbe
mov
pop
jl
shr
pushf
mov
and
and
aad
xor
add
popf
mov
jle
outsb
in
fiaddl
mov
sub
loopne
loop
inc
sbb
jmp
mov
dec
adc
lret
idivb
mov
cli
mov
outsb
mov
mov
movsb
xorl
dec
jnp
pop
shlb
jp
hlt
shll
and
cmp
jae
andl
testb
push
xchg
repnz
xchg
sub
cmp
xchg
rcrl
stc
cmp
adc
mov
ficoms
stos
xor
add
rcrl
fldenv
mov
fcoms
push
sbb
leave
rcrl
jae
call
fildl
mov
dec
addr16
or
sbb
lret
mov
cmp
iret
pop
rcll
push
ds
add
or
cmp
fmul
pop
into
imul
mov
decl
cmp
frstor
adc
imul
xor
cmp
jbe
orps
inc
adc
xchg
hlt
mov
outsl
xlat
cmp
aaa
xchg
pop
cmc
push
sbb
popa
mov
adc
lahf
add
dec
jae
sbb
shll
push
jne
sahf
call
push
mov
mov
outsl
cmp
mov
xchg
out
cmp
mov
sub
jo
dec
dec
adc
cmpsl
test
cli
popf
cmpsl
sbb
cmc
das
sub
xor
mov
push
mov
test
adc
cs
sahf
lock
add
xor
test
out
sub
mov
mov
cmp
rorl
xlat
add
push
and
push
xor
test
int
mov
out
popf
sub
gs
mov
or
mov
pop
in
mov
test
push
test
xchg
out
xor
scas
movsb
cmp
outsb
out
cmc
sub
dec
hlt
adc
mov
or
dec
mov
dec
int3
das
aam
cmc
mov
sub
or
shrb
adc
xchg
pslld
xchg
aad
loop
jnp
dec
iret
daa
sub
sahf
aad
jns
call
ret
add
mov
lret
mov
jmp
insl
jmp
ja
in
shlb
test
or
icebp
lea
cwtl
and
xchg
in
inc
stos
bound
mov
stos
shlb
bound
popa
ficompl
fs
jle
enter
push
adc
je
dec
push
mov
in
sbb
jecxz
pop
dec
ret
mov
cmp
iret
test
pop
into
dec
fistpll
popf
dec
scas
xchg
jle
icebp
sahf
adc
mov
in
lock
mov
leave
ficompl
stos
cmp
icebp
popf
shrl
mov
dec
shrl
sahf
out
sub
or
push
loop
lcall
mov
and
inc
sbbb
mov
jbe
mov
push
jae
xchg
jle
xchg
int
enter
inc
fidivrl
sbb
inc
mov
incl
cmc
push
imul
fdivl
xchg
dec
gs
stc
sti
xchg
iret
jp
and
lock
cmpsb
adc
add
je
lds
movsb
addl
lods
mov
sbb
rolb
dec
lods
stc
push
or
pushf
out
lret
xlat
lcall
enter
xchg
push
cld
inc
ja
ds
pop
push
lds
sbb
stos
cmp
mov
call
inc
xchg
xor
jge
out
enter
out
push
add
pop
or
adc
inc
push
push
pop
stos
test
mov
xor
xchg
adc
and
jbe
mov
rcll
out
icebp
lret
inc
sbb
stos
inc
ret
mov
in
in
mov
push
add
dec
mov
mov
nop
mov
imul
outsb
or
adc
push
mov
push
out
dec
pop
int
and
sbb
stos
push
and
pop
stos
mov
dec
das
lea
pushf
mov
lods
inc
cltd
jg
loope
in
fmuls
fidivrs
iret
mov
hlt
push
pop
test
outsb
sbb
lea
and
xlat
decb
xchg
sbb
stos
aaa
mov
mov
mov
mov
shrl
sbb
outsb
rorb
int
stos
scas
cli
sub
add
adc
cld
and
pop
add
lods
xor
imul
leave
movsb
push
sub
push
das
dec
out
out
into
inc
cmp
ds
and
push
mov
jno
xchg
jge
mov
mov
xor
outsb
imull
and
jecxz
xchg
neg
adc
mov
cmpsl
mov
ja
test
xlat
aas
out
cltd
insl
std
clc
mov
and
pop
cmp
into
fisubrl
pop
push
enter
cmp
jle
xor
rcr
jmp
cli
mov
enter
fwait
jno
shrb
pop
mov
hlt
popf
pop
xchg
sub
mov
stos
or
mov
ss
imul
sbb
iret
mov
adcl
outsb
mov
pop
sub
cmpsl
scas
xor
pop
enter
mov
sub
repnz
sbb
jg
or
rcrl
test
hlt
mov
cmp
addr16
xchg
out
mov
cmp
fdivl
and
adc
sbb
and
repz
xor
mov
xchg
insb
decb
test
pop
mov
ror
xchg
ret
xor
push
mov
or
adc
clc
or
inc
add
outsl
outsb
push
add
imul
adc
aaa
push
call
xor
sbb
push
mov
sub
mov
or
jecxz
xchg
enter
mov
ljmp
iret
push
fisttpll
in
mov
fldenv
xor
dec
mov
insl
dec
incb
inc
sub
or
push
fdivr
testb
cmp
pop
test
fistpl
or
rolb
xchg
lods
pop
xchg
cmp
mov
ljmp
mov
pop
lret
sar
add
inc
lret
sub
mov
mov
rcl
adc
sbb
ljmp
xchg
repz
sti
sbbb
xlat
aad
add
add
std
sbb
sub
bound
jge
insb
mov
sbb
mov
test
test
inc
jge
mov
mov
lahf
sarb
iret
mov
xor
push
add
in
pushfw
iret
cs
pop
sbb
call
push
std
ficompl
pop
push
jae
jge
cltd
mov
xchg
fildl
scas
in
xor
loop
adc
mov
adc
testb
das
dec
mov
hlt
test
sarb
ss
popa
daa
add
and
mov
push
enter
and
ret
cmp
js
je
mov
cmp
cmp
push
sbb
adc
fstpt
test
mov
cmp
mov
sti
add
bound
sbb
mov
enter
mov
fadds
jb
pop
cltd
popf
popl
mov
lods
lcall
ljmp
dec
jne
add
pop
daa
jae
mov
xchg
xchg
or
sub
fnstsw
fildll
sahf
in
in
fildll
je
mov
sub
test
add
gs
or
push
or
movsb
cmp
xchg
sbb
fistps
add
repnz
fstl
mov
in
or
movsb
push
sbb
push
mov
mov
rorl
xor
mov
jg
repz
mov
push
loope
movsl
xor
push
mov
jbe
shrb
push
loope
or
lock
adc
arpl
rcrb
inc
sarl
gs
push
idivb
hlt
sub
pop
imul
out
imul
jmp
je
fstl
jg
mov
sbb
or
stc
cld
add
push
jge
mov
push
nop
cmp
adc
popa
add
std
adc
orl
cmp
dec
ss
jbe
imul
pop
data16
sarb
jno
hlt
test
int
sub
mov
andb
in
jae
sahf
inc
lods
fistps
aas
dec
fisubrl
add
sbb
mov
push
and
add
pop
or
xor
imul
les
andb
jae
je
mov
movsb
loop
and
mov
subb
push
xchg
and
out
test
push
sbb
xchg
pop
mov
stos
movsl
inc
push
jg
push
out
call
inc
cmp
imul
dec
and
xor
and
data16
xor
dec
sub
pop
adc
push
je
mov
sbb
sbb
pop
test
sbb
iret
imul
pop
mov
pop
fdivs
mov
xor
mov
mov
addr16
cmc
cmc
sub
push
cs
mov
push
adc
mov
xchg
pop
data16
jge
aaa
mov
mov
js
icebp
in
test
mov
inc
js
clc
movsl
dec
cltd
in
sub
dec
mov
cmp
pushf
ret
push
into
fcmovne
push
cmp
add
fcmovne
fs
cld
jbe
std
add
outsl
lea
shlb
add
test
dec
inc
xlat
inc
pop
or
add
adc
outsl
push
cwtl
sub
test
adc
jbe
push
fadds
cmp
popa
ret
mov
hlt
addl
mov
inc
aam
out
mov
xor
fildl
push
adc
xor
clc
mov
xor
testb
push
fidivrs
xchg
mov
jne
sub
xchg
jle
mov
js
add
mov
loope
ljmp
xor
xchg
ret
cmpsb
dec
cmp
jo
xorl
sub
jbe
jo
icebp
jge
sub
lods
pop
pusha
cmpsb
xchg
xor
pop
arpl
sbb
imul
push
cmpsb
jg
ret
pop
clc
mov
cmpsb
and
fidivrl
dec
pop
jbe
cmp
push
sub
cmp
movsl
es
xor
sub
adc
cld
stos
mov
lea
push
aas
fidivl
sub
cmp
sub
loop
mov
xchg
repnz
mov
sarl
mov
jns
xchg
add
mov
jbe
pop
add
in
ja
repnz
cmp
arpl
jns
jb
xchg
mov
int3
xor
mov
mov
jno
and
jb,pt
sub
repnz
subb
xchg
add
out
lds
data16
xchg
dec
cmpsl
outsb
mov
lcall
cmp
push
ret
jge
out
cmp
mov
mov
nop
jp
shlb
pop
mov
sbb
pop
bound
sub
adc
in
pop
sbb
lret
and
pop
pushf
dec
push
notl
test
mov
dec
sub
loop
test
sbb
jno
mov
adc
adcb
sbb
ljmp
xchg
jns
shrb
imul
push
out
push
das
jne
cld
out
push
push
mov
jo
ret
push
cli
mov
nop
lret
sbb
data16
movsl
mov
cld
pop
cmp
add
cli
loop
mov
adc
pop
test
inc
rclb
push
shll
inc
cmp
out
leave
lea
pop
jp
add
movsl
out
push
lods
xor
call
mov
push
adc
cld
lret
mov
lock
jae
dec
movsb
mov
jmp
push
push
push
loope
add
popf
mov
cwtl
js
xchg
xchg
xchg
add
stos
push
dec
fistl
test
push
sbb
adc
xorl
jo
into
mov
mov
shrb
int
mov
call
lds
data16
repnz
sub
mov
xchg
sub
and
push
rcrl
jb
add
frstor
sahf
or
cmp
lahf
xchg
pusha
jbe
xchg
test
dec
cmc
add
into
aas
adc
cld
mov
cli
popf
fcmovnbe
xlat
sbb
mov
xchg
jns
lret
jae
sti
sbb
test
mov
das
aad
xor
orb
sti
cmp
inc
call
mov
repnz
imul
in
pop
xor
ja
call
push
loopne
shl
pop
xchg
xor
adc
cli
mov
xchg
popa
ljmp
inc
je
fabs
mov
hlt
jg
push
pop
mov
xchg
jl
xchg
inc
inc
cmc
xchg
add
add
pop
jb
push
inc
nop
out
jae
sub
dec
es
push
dec
or
test
xchg
and
sbb
sub
pop
pusha
push
xor
jle
mov
xor
xor
movsb
inc
and
shrl
xlat
lock
xor
jnp
sbb
pushf
aam
cmc
jecxz
inc
in
sti
and
sbb
mov
jp
dec
add
cmc
jg
adc
adc
insl
or
imul
ljmp
gs
sahf
mov
loop
sbb
cmp
sub
call
enter
mov
lods
out
xchg
jmp
adc
cwtl
inc
rcrl
dec
lret
pop
add
jg
pop
jge
mov
pop
jb
fidivs
aaa
sbb
mov
enter
and
and
fsubrl
sub
push
ret
repnz
mov
and
xor
jmp
andl
inc
and
cmp
out
mov
lods
leave
mov
dec
es
sbb
in
scas
rol
pushf
pop
iret
fisubrs
faddl
or
and
push
shl
adc
hlt
xor
jns
ljmp
push
lret
mov
jmp
pusha
push
in
cld
jo
lea
jb
sub
sub
cmp
pusha
push
int
movsb
pop
int3
push
fdivrp
dec
jno
inc
aad
cmp
mov
mov
push
in
out
out
xchg
aaa
xchg
js
push
test
arpl
dec
sbb
sub
cld
adc
cld
jns
pushl
loopne
out
jbe
cmp
movsl
xor
inc
push
lock
or
shll
stos
outsl
and
jge
jnp
nop
out
pop
fs
mov
or
stos
sub
cmp
out
cmpsl
fidivl
inc
cli
sbb
popa
mov
push
jge
fidivrl
jp
test
xchg
xor
scas
jmp
ret
jle
rorb
imul
xchg
add
sub
jge
data16
and
test
enter
jmp
mov
sti
jle
out
call
pop
jo
in
lds
jle
leave
stc
add
cmp
dec
sbb
adc
push
cwtl
ficompl
adc
cmp
push
mov
test
clc
notb
mov
mov
dec
das
pop
mov
inc
lcall
pop
sbb
jmp
xchg
lret
dec
inc
dec
xor
pusha
js
jnp,pn
test
jae
fistps
push
cltd
cltd
mov
es
loopne
lret
adc
dec
xorb
inc
cmp
in
inc
cwtl
jge
sub
scas
out
dec
lret
les
pop
push
lods
sbb
outsb
mov
xchg
jge
mov
jmp
incb
insl
pop
sbb
pop
divl
loop
inc
pop
jb
mov
outsb
aas
dec
pusha
pop
cwtl
add
popf
sbb
pop
ret
dec
inc
sarl
dec
cmp
sti
repz
adc
mov
test
movsb
and
or
sbb
shlb
dec
nop
cmc
mov
outsb
aaa
mull
xchg
sbbl
stc
push
or
dec
dec
ffreep
pop
fstl
jge
and
sub
stos
sbb
push
and
enter
cmp
jp
mov
push
push
dec
push
into
ss
fstpl
xchg
jmp
or
fwait
popa
das
xchg
mov
dec
outsb
push
dec
sti
adc
jmp
outsb
adc
sub
push
sbb
add
sbb
cltd
mov
sti
outsb
scas
imul
cmc
aaa
fadds
xchg
sahf
inc
jno
dec
cld
adc
out
sbb
xchg
dec
rcrb
pop
push
inc
sub
mov
ljmp
push
push
push
xchg
movsb
sub
lea
mov
and
lret
push
fucomip
and
fistl
ret
gs
jne
cmp
inc
and
sub
lcall
or
sbb
adc
push
cmp
adc
movsb
xchg
push
mov
stos
lock
jle
mov
ret
mov
lahf
push
ja
xchg
sub
dec
xor
subl
xor
std
lods
insb
and
lock
adc
test
xchg
cmp
das
pop
pop
repz
das
std
aas
negb
mov
mov
std
jecxz
push
sbb
loopne
mov
push
mov
xchg
mov
jne
je
push
jne
jb
outsb
das
dec
push
adc
inc
dec
mov
rcr
lret
jp
pop
add
int
in
sti
jne
cmp
or
pop
mov
mov
pop
cwtl
adc
das
pop
mov
mov
popa
jmp
leave
pop
sbb
mov
fdiv
es
mov
inc
cmc
dec
lahf
mov
mov
ficomps
out
shlb
addr16
or
and
xor
dec
icebp
inc
mov
out
jg
mov
inc
insb
xor
cmp
jle
xchg
cs
xchg
sbb
inc
cmp
fdivrs
mov
pop
ret
xchg
mov
xor
sub
adc
jae
cmp
call
fsts
jno,pn
mov
xor
cmp
jne
ficoms
push
cwtl
pop
mov
dec
jge
xor
push
mov
or
aad
rorl
adc
mov
in
push
jbe
jle
popf
cmp
jae
adc
add
fadds
jl
clc
loopne
arpl
aad
and
outsl
jbe
lret
pop
dec
dec
push
jp
push
mov
sahf
inc
int
std
imul
stos
adc
cmpsb
loope
xchg
mov
out
ds
stc
mov
std
dec
dec
jmp
cld
iret
std
lahf
test
adc
cmp
push
and
rorl
stos
pop
jmp
test
xchg
cmp
cmp
or
out
or
xchg
pop
push
inc
jnp
sahf
and
xchg
mov
jno
push
in
inc
sbb
cmpsb
lret
sahf
adc
mov
int
out
fists
adc
pusha
jnp
and
xlat
ret
scas
je
dec
add
aad
mov
das
sbb
psubd
cmpsb
out
repnz
iret
stos
jns
arpl
mov
stos
insl
cld
sub
in
loopne
jo
jo
xor
fs
leave
loope
sub
add
out
push
fstpt
lds
lods
lcall
lds
out
sub
insl
xchg
jmp
fistps
push
cmc
lock
pop
aad
mov
js
outsb
cli
sbb
sti
out
add
push
jge
cwtl
adc
xor
in
xor
mov
addr16
adc
pop
sbb
cmpsl
mov
out
scas
aas
adc
and
aaa
inc
sub
dec
inc
xchg
int
das
push
add
mov
jno
popa
rep
scas
adc
dec
adc
aaa
sbb
push
movsb
sub
subb
test
jle
icebp
insl
enter
cltd
orb
push
jp
minps
enter
aaa
pop
inc
dec
mov
push
addl
mov
test
negb
xor
andb
cwtl
in
andb
add
jae
loope
fcoml
push
push
lock
mov
andl
cmpsl
out
push
sbb
iret
cmp
lods
xchg
sarl
ret
imulb
lock
mov
mov
jae
or
popa
cmpsl
cmp
mov
xchg
pop
cs
daa
lods
lcall
rcll
out
fnstcw
xchg
jns
ljmp
data16
push
imul
call
mov
scas
ljmp
xchg
mov
push
fists
sbb
jae
cltd
jno
loop
mov
fcmovu
aas
push
xor
mov
les
dec
mov
adcb
outsb
jae
mov
daa
dec
fcompl
xor
inc
inc
addr16
sub
cmp
imul
mov
xor
jle
jge
adc
jno
rcl
cmp
lock
in
ljmp
adc
cmp
outsl
cld
pop
pop
rclb
jp
cmovg
dec
lahf
dec
sar
jp
cmpsb
jge
inc
inc
push
std
push
jmp
fdivs
sbb
sbb
cmp
xlat
sub
pop
xchg
pop
icebp
mov
add
clc
add
or
enter
sub
mov
stos
adc
insb
ja
repz
fadds
push
xor
out
ficoml
fstpl
je
inc
sbb
scas
push
andb
and
data16
jge
jbe
aas
stc
lods
dec
xchg
jmp
inc
push
mov
nop
and
ds
jns
mov
stc
hlt
les
icebp
flds
icebp
or
pop
in
fdivrs
sbb
inc
and
mov
dec
and
test
mov
sub
mov
mov
xor
clc
ds
fildll
xlat
jge
xchg
cmp
xchg
dec
jmp
ret
mov
and
rcrb
adc
lds
or
jecxz
and
jb
adc
adc
mov
xchg
les
test
or
subb
fs
xchg
repz
ja
xchg
mulb
push
lods
pop
inc
push
mov
jp
imul
jnp
lock
ss
hlt
jp
cmc
fstpt
hlt
inc
add
lock
cmp
xor
ljmp
nop
rolb
hlt
cmp
or
mov
add
mov
lea
lods
or
rcll
push
xchg
aaa
lods
lock
adc
test
and
test
jo
adc
fwait
jbe
aas
mov
test
inc
push
dec
push
sub
jnp
sub
cwtl
xor
cmp
mov
push
inc
mov
mov
jno
sbb
cmc
loop
jbe
test
xor
cwtl
movsb
jecxz
jmp
push
loop
xchg
add
out
or
sti
adc
dec
in
sbbb
orb
pop
push
fisubs
dec
mov
in
call
cmpsl
outsl
cmp
pop
adc
stos
xor
bound
xchg
inc
movsb
sbbl
or
add
into
outsb
fadd
or
mov
mov
pop
mov
lea
add
cltd
jmp
into
arpl
add
dec
push
sub
pusha
or
dec
jle
xor
movsb
ret
mov
ds
jb
imul
and
add
or
cs
jae
pop
pop
repnz
mov
orl
xor
movsb
cwtl
push
sbb
or
fstl
mov
jmp
fs
fstl
sub
inc
mov
lods
ds
sbb
mov
mov
leave
mov
ret
not
imul
ffreep
sub
stos
mov
jle
fcoml
pop
mov
pusha
mov
dec
pop
and
sbb
pop
mov
xlat
mov
fwait
and
ret
adc
std
mov
xchg
cmp
add
xlat
dec
and
mov
xchg
daa
add
inc
push
movsb
push
je
and
xor
jbe
adc
cld
sbb
loop
push
ljmp
leave
adc
add
sbb
sub
sbb
sub
xor
sub
unpcklps
test
test
scas
lock
and
dec
adc
mov
mov
loope
jno
sbb
push
adc
scas
xchg
mov
pushf
mov
add
sti
int
xor
and
mov
xchg
imul
jg
xchg
adc
add
mov
push
rcrl
jb
fcompp
or
dec
je
inc
push
mov
add
and
cmpsl
sub
ja
lcall
dec
and
cli
divl
push
pop
bound
mov
scas
dec
dec
jp
xor
cmp
jns
add
bound
cmpsl
xchg
cmp
in
lock
addr16
leave
iret
inc
rcl
push
out
stos
inc
xchg
jl
cld
xchg
fwait
adc
mov
sbb
dec
ret
xlat
push
and
cmpsb
push
cmp
xchg
dec
push
jle
andl
xor
inc
cli
jp
stos
cwtl
int
jmp
mov
stos
inc
je
mov
fistps
mov
mov
mov
test
mov
es
mov
ja
mov
xchg
push
fld
icebp
loop
lock
aaa
jae
xor
jb
xor
clc
jno
add
popa
xchg
stos
test
shrb
xchg
cwtl
xchg
add
ljmp
xchg
mov
xlat
les
push
fsubrs
push
dec
scas
movsb
movsb
fs
loop
dec
mov
and
rorb
sbb
xchg
lea
push
push
cs
imul
fcompl
int3
pop
inc
loop
xchg
les
sbb
xor
cli
jo
int
int3
push
out
sbb
cltd
sbb
movb
jbe
cmpsb
jg
sub
aad
fbstp
mov
jmp
mov
imull
sub
data16
data16
in
xor
xchg
jns
push
aas
ret
sub
sti
out
jnp
call
jb
dec
loopne
lods
ficomps
ss
or
xor
imul
push
popf
ja
cmp
test
adc
fdiv
sub
daa
xchg
adc
aad
xchg
push
stos
sub
push
or
popl
shlb
push
jg
mov
cmp
int
xchg
js
sub
cmp
inc
nop
xlat
test
lods
clc
fwait
adc
das
or
sub
sbb
sahf
mov
jns
out
js
fdivl
sbb
popf
push
aaa
out
mov
xchg
jno
clc
xor
cli
xlat
jnp
mov
push
lock
je
push
popa
loope
repz
dec
xor
mov
or
cwtl
mov
or
or
or
xor
test
std
pop
inc
hlt
xchg
into
ja
aaa
jb
orb
mov
sub
orb
sbb
xor
sub
rolb
mov
int3
iret
shlb
dec
gs
cvtdq2ps
and
cmp
shrl
inc
popf
bound
push
ret
mov
sbb
insl
and
xchg
sub
dec
jmp
xlat
jg
push
iret
es
adc
push
cmp
insl
jge
fidivs
mov
dec
push
icebp
and
test
fimuls
fdivl
cltd
lcall
sub
mov
popa
sbb
loop
cwtl
test
and
hlt
add
mov
pop
incb
icebp
cwtl
add
inc
jns
mov
movsb
xor
mov
or
adc
enter
lea
movsl
xchg
xchg
push
sub
popf
sub
push
sub
hlt
mov
xchg
jmp
or
das
popf
sub
jecxz
mov
xchg
loopne
xchg
xchg
add
popf
shrb
or
sbb
out
push
inc
mov
adc
in
cmc
xor
sbb
lret
sbb
rsqrtps
insl
shrl
mov
lea
leave
adc
push
sbb
std
push
inc
xor
popl
ja
dec
fsts
xchg
pop
jno
inc
daa
xchg
push
jge
mulb
mov
jo
adc
mov
jmp
aas
pop
lret
popf
adc
into
in
jmp
cltd
dec
aaa
sbb
mov
pop
or
push
adc
mov
lahf
clc
add
popa
mov
adc
data16
inc
jge
sub
pushf
sub
push
pushf
pop
xor
insb
dec
cmp
xchg
sub
test
mov
inc
push
outsl
pop
xchg
std
loope
out
mov
or
pop
or
mov
fs
mov
rcrb
ljmp
pop
iret
js
icebp
inc
sub
xchg
nop
fwait
pop
sub
out
mov
xor
imul
xchg
push
inc
sub
call
mov
sub
fsubrs
dec
push
shlb
cmp
shrb
push
xor
xor
loopne
mov
mov
xchg
data16
fnstsw
jmp
scas
ljmp
repnz
bound
pop
ror
sbb
clc
jno
add
ja
mov
or
jbe
test
push
sub
ja
lods
push
lods
pop
adc
out
int3
adc
adc
and
fs
rolb
fcmovb
cmc
in
mov
mov
push
cmpsl
fnstcw
pushf
sahf
in
xchg
mov
jecxz
xorb
mov
xchg
xchg
outsl
ret
add
out
out
decb
cld
lods
push
cmpsl
stos
pop
push
jecxz
mov
and
arpl
imul
pop
cmp
sub
push
or
mov
mov
add
mov
pop
insl
mov
mov
push
jbe
mov
icebp
mov
cmp
xor
sub
pop
lods
mov
cmp
pop
adc
or
and
mov
xchg
inc
xor
add
aad
lock
movsb
pop
js,pn
out
cmp
xchg
cmpsl
inc
fucomip
add
lret
push
insb
push
std
sahf
pushf
push
cmc
movsb
cmp
pop
mov
push
cmp
mov
lcall
jmp
mov
mov
imul
lods
push
inc
stos
mov
pop
rorl
mov
pop
sbb
ljmp
jbe
lds
pop
xchg
mov
push
enter
add
jo
scas
insl
lds
inc
in
fists
fsubl
fbstp
sbb
out
jns
xlat
les
adc
mov
xor
jb
jp
add
or
xchg
cmpsl
mov
movd
data16
mov
pop
xchg
pop
sbb
mov
popf
in
test
mov
movsb
iret
mov
outsl
xor
fildl
rcll
mov
adc
adc
mov
and
mov
push
xchg
pop
ja
dec
in
mov
jmp
gs
cmpsl
cmp
shr
pop
or
lds
pop
je
ret
mov
or
out
dec
jg
mov
xchg
outsb
push
push
inc
pop
gs
and
ja
push
mov
xchg
fcompl
les
pop
mov
xor
mov
outsl
dec
dec
les
cmp
dec
sti
cmp
int
mov
les
rorl
mov
mov
xchg
add
popa
push
cmp
push
xor
cmp
or
movsl
cmp
mov
pop
pop
movsl
movsl
out
cltd
lods
xor
stos
add
mov
dec
ss
jmp
test
sti
push
ja
xchg
int
pop
mov
jne
movsb
mov
sti
cs
out
cmp
pop
insl
scas
es
in
imul
cmp
dec
ret
cmp
dec
push
ja
cmpsl
imul
mov
scas
das
das
loop
sub
inc
and
aas
outsl
filds
jb
aam
cmp
inc
sub
lcall
sbb
in
pusha
dec
or
cmc
pop
dec
mov
xchg
mov
loopne
ret
mov
insb
cmpsl
jp
push
test
loope
sahf
sbb
aaa
cs
in
dec
jno
cmpsb
mov
adc
pop
push
pop
xlat
aad
xor
lea
data16
sbb
dec
pop
rcrl
mov
adc
out
ret
mov
xchg
enter
nop
js
push
sahf
or
add
aaa
mov
and
mov
adc
das
jge
push
subl
mov
gs
mov
dec
je
and
xchg
sbbl
jl
movsl
in
push
lea
aam
shrl
or
sbbb
inc
sarb
jnp
or
xor
fldt
or
mov
inc
mov
sub
js
in
add
sbb
popl
fldenv
pusha
stos
xchg
insb
push
inc
jae
dec
in
inc
or
push
aad
test
sub
stos
sbb
fsts
rol
ss
bswap
mov
pop
leave
mov
out
push
and
sti
lods
cli
adc
adc
in
ss
xchg
dec
fsts
fsubs
call
xor
mov
icebp
movsb
and
scas
cmpsl
inc
bound
insb
int3
fmull
sbb
push
lods
or
es
jns
add
pop
cmp
sti
cmp
fsubs
push
arpl
mov
sahf
jle
pop
sub
test
mov
xor
testb
add
jl
je
mov
mov
pop
js
xlat
xchg
ljmp
jne
icebp
push
call
repnz
push
fbstp
pop
mov
frstor
aad
push
pop
mov
cmpsl
mov
jp
insl
mov
xchg
add
inc
xor
shlb
jg
push
push
nop
fisttps
cmp
jnp
daa
xchg
and
mov
mov
pop
sti
xchg
neg
sub
jg
fs
or
in
lret
andb
adc
and
xchg
jns
push
jmp
iret
adc
push
push
stos
pop
xlat
scas
inc
adc
pushf
push
dec
in
cli
jns
pop
cmc
mov
scas
out
jns
stc
pop
jl
hlt
lea
outsl
mov
jp
and
ss
xor
hlt
inc
sub
lea
sub
fs
pop
mov
das
jl
sub
mov
jle
add
mov
xchg
or
in
cli
pop
aaa
pusha
je
nop
lahf
add
pop
cmp
test
pop
pop
int3
rorl
fsubp
clc
andb
leave
pop
jp
movsl
adc
dec
cwtl
xor
cmova
mov
cs
mov
sub
call
sbb
mov
hlt
mov
or
cmp
dec
mov
cmp
add
xchg
cmp
xchg
xchg
and
add
dec
adc
fmuls
das
test
ss
sub
dec
push
ljmp
mov
outsb
mov
cmpsb
nop
adc
push
out
push
xor
dec
enter
dec
xchg
outsl
dec
aam
mov
js
popa
pop
repnz
insl
mov
dec
addr16
jbe
mov
xlat
mov
dec
fsubr
call
xor
pusha
into
outsl
test
and
gs
out
lret
into
xor
adc
xchg
cmp
gs
std
std
xorb
mov
mov
push
mov
xor
imul
mov
fisubrl
ficomps
jl
and
lcall
je
mov
adc
xor
dec
je
fstps
in
mov
mov
pop
pusha
add
sbb
add
mov
daa
sub
adc
gs
jmp
inc
push
out
add
xchg
test
icebp
cmp
int
hlt
mov
inc
sub
jns
test
insb
and
pop
and
jnp
xor
scas
push
or
frstor
jbe
or
and
lds
rclb
rol
xor
aaa
in
push
pop
xlat
push
mov
and
push
sti
sub
inc
testb
outsb
mov
jle
scas
jle
and
inc
or
das
mov
or
xor
sub
gs
pusha
fs
or
loop
aaa
int
jno
lret
mov
mov
dec
lea
imul
scas
jb
dec
mov
push
xchg
jae
or
mov
sbb
stos
fdivrl
les
test
enter
or
sub
fists
daa
loope
adc
aad
push
aas
dec
sbb
rclb
mov
sbb
push
cmp
xlat
pop
mov
lcall
adc
insl
cltd
sub
lret
sub
sbb
dec
add
loopne
ds
lret
cmp
call
mull
push
dec
inc
mov
cmpb
pop
mov
negl
fldt
add
jns
jbe
sbb
xchg
out
push
ret
rol
adc
outsl
adc
rolb
enter
push
push
lret
insb
cmp
nop
int
adc
sub
push
pop
mov
lcall
jecxz
adc
sbb
mov
mov
jp
xchg
fdivs
cmp
aad
insl
jmp
imul
into
adc
stc
rcl
daa
push
outsb
cmpsl
dec
mov
mov
ret
fs
fisubrs
es
cmp
out
mov
test
pop
test
mov
test
pop
int3
inc
jno
xchg
std
insl
or
mov
push
add
cld
or
rolb
sub
jb
stos
adc
pop
inc
xchg
sub
sbb
xchg
loopne
sbb
lods
daa
adc
cltd
push
pop
push
mov
out
pop
push
rcrb
mov
jecxz
push
mov
jge
loop
cmp
pop
outsb
dec
in
xchg
ss
adc
push
dec
sub
das
mov
mov
shrb
nop
jge
xor
bound
fldcw
movsl
xchg
xchg
sahf
push
mov
dec
data16
mov
pop
cmc
cmovge
adc
notl
int
pop
arpl
jge
arpl
ljmp
fbstp
dec
pop
shr
aaa
das
xor
loop
xchg
jb
jp
fsubrp
and
cld
test
nop
inc
push
aad
pop
jb
xchg
sub
sub
shrl
jl
mov
adc
fnsave
stos
aad
sub
dec
leave
xchg
jbe
rcrl
sub
xchg
fisubl
hlt
cmc
scas
cmp
aaa
ret
mov
add
popa
jg
inc
fldenv
xchg
adcl
push
in
xlat
rolb
sub
jl
adc
fbld
xchg
out
cmpsb
pop
mov
call
jmp
adc
jecxz
adc
repz
xchg
push
cmp
mov
add
mov
lds
jbe
mov
xor
addr16
jle
push
data16
mov
or
pop
icebp
push
mov
adc
stc
fiaddl
popa
in
mulb
lods
cmpsl
lret
fwait
lret
into
push
clc
repz
data16
cld
clc
inc
addr16
mov
cmc
dec
ja
dec
sub
add
mov
dec
not
jle
xor
in
push
mov
push
dec
mov
pop
int3
je
jg
push
jecxz
es
aam
inc
inc
jmp
in
cli
lss
dec
les
int3
leave
dec
pop
xchg
fnsave
movsl
dec
jmp
loope
roll
inc
inc
stos
mov
xchg
flds
add
mov
xchg
cli
xor
subl
pop
dec
aaa
iret
nop
frndint
jg
mov
push
inc
xchg
or
jmp
and
adc
sahf
xchg
repnz
pop
push
dec
jp
test
aas
inc
xchg
ret
lahf
sbb
sub
or
push
sbb
cmpl
fiadds
push
das
push
leave
pop
test
lret
push
in
test
and
mov
imul
out
fiaddl
pushf
dec
subb
mov
sahf
dec
mov
sahf
mov
aad
stc
and
cli
adc
clc
dec
cmp
xlat
and
mov
inc
out
ja
dec
pop
imul
jae
inc
int
push
cmp
xor
mov
sub
pop
shl
loop
and
sub
mov
or
cmc
mov
insb
loopne
push
lods
mov
cwtl
sbb
sahf
pop
and
mov
out
inc
dec
sub
pop
ret
sub
hlt
imul
pop
les
imul
inc
bound
fucom
mulb
xor
push
lcall
sbbb
mov
icebp
scas
mov
xchg
pop
and
mov
xchg
repnz
movsl
jne
xor
nop
fdivr
imul
mov
pushw
or
adc
sub
lret
pop
nop
lods
cmpsl
mov
xchg
xor
cmp
imul
add
out
rol
add
std
xchg
adc
cli
imul
js
pop
cli
lods
xchg
mov
sbb
lret
clc
xor
mov
pushl
sbb
jns
mov
xor
out
and
push
fistpl
cmp
sub
mov
jl
test
test
int3
mov
pop
push
aaa
mov
xchg
ret
xchg
mov
push
shll
xchg
xchg
xor
dec
add
push
out
pop
les
lahf
sub
dec
fildll
insb
hlt
les
out
es
shrb
add
jne
cmp
inc
pusha
mov
adc
push
jmp
cltd
xor
xor
add
push
out
or
inc
imul
test
mov
mov
push
shrb
out
outsb
clc
pop
cmp
xor
es
sub
xor
call
push
xorl
adc
sub
stos
mov
mov
repnz
insb
sub
pop
cltd
je
loop
icebp
adc
mov
mov
out
mov
repnz
cmpsl
sub
mov
test
jle
repz
test
xor
xchg
inc
int3
cli
cli
je
mov
movsl
push
pop
pop
jmp
pop
scas
rcll
movsb
jnp
jecxz
xchg
xchg
pop
push
cmp
ret
pop
or
das
bnd
jge
sbb
xor
xor
push
mov
xchg
loopne
leave
in
push
mov
loop
push
cltd
dec
out
scas
repz
adc
adc
push
add
inc
lahf
xchg
mov
insl
pop
stos
cmp
sub
rolb
fs
mov
sub
dec
test
jmp
xor
dec
and
int
sti
jo
imulb
and
add
ss
fistl
mov
loopne
pop
in
adc
movsb
add
pushf
repnz
pop
aad
pop
out
mov
mov
mov
pop
repnz
dec
fcompl
mov
enter
mov
jo
jmp
mov
sbb
dec
bswap
push
inc
cmc
shrb
and
out
loop
cmpsl
les
stos
jnp
outsl
and
call
int3
inc
cmpsb
push
or
sarl
imul
dec
cwtl
test
mov
in
pop
mulb
insb
popf
dec
push
adc
daa
iret
ja
sbb
rcll
mov
cld
jbe
loope
xchg
stos
or
mov
and
std
push
cmp
call
inc
sbb
mov
mov
jno
sub
jne
aad
sbb
xor
jle
lods
les
sbb
cmp
jnp
shl
dec
mov
lds
in
lock
pop
jbe
int3
subb
bound
scas
push
mov
outsl
cld
std
dec
outsb
mov
mov
mov
jns
jle
jmp
jp
loopne
mov
js
cmp
jp
or
test
mov
rcrl
lret
dec
pop
mov
es
sbb
adc
aam
and
and
pusha
add
ret
pop
ds
jmp
xor
divb
pop
lret
pop
cmp
scas
mov
cmp
popa
mov
out
fwait
mov
mov
jno
mov
or
xchg
push
cmp
daa
dec
cwtl
cmpsl
mov
inc
dec
mov
jnp
mov
mov
scas
pop
jbe
dec
andl
xchg
jg
dec
les
jecxz
jae
sbb
sbb
xor
add
repz
gs
pop
dec
lock
test
dec
pop
sbb
movsl
push
mov
loopne
push
pop
out
jb
xor
pop
repz
lcall
adc
aaa
rcrl
mov
call
cmpsb
iret
nop
ja
out
or
repnz
repz
inc
stos
cmc
outsb
iret
mov
xor
jne
ja
add
cmp
jle
loopne
push
fisubl
pop
jno
repz
movsb
cmp
cmp
adc
ret
repz
rolb
clc
test
mov
popf
dec
or
sub
stos
loope
subl
outsl
in
adc
nop
lds
pop
jo
adc
and
les
sti
dec
and
cmp
ljmp
adc
mov
test
pop
icebp
in
sbb
sti
ret
xor
push
scas
in
sub
push
mov
adc
in
shlb
daa
std
enter
pop
gs
jae
shlb
xchg
stc
jge
fdivrl
inc
mov
out
out
xchg
je
imul
lcall
popf
xchg
shr
inc
push
mov
testl
and
add
mov
cmpsl
stos
push
dec
in
bound
loopne
pop
mov
jnp
add
inc
imulb
scas
jbe
push
arpl
and
insb
stc
das
push
mov
mov
test
cmc
push
icebp
js
push
out
and
inc
mov
lret
and
bound
mov
gs
pop
pop
shll
cs
push
mov
bound
pop
cltd
andb
lcall
testb
lahf
bts
xor
test
les
mov
jb
sbb
loopne
mov
clc
mov
sub
popf
leave
sahf
leave
leave
mov
xchg
lea
or
subb
fs
loop
jmp
fstpt
gs
add
mov
stc
je
adcb
jg
jecxz
cltd
xchg
stos
sbbb
and
fadds
fwait
arpl
push
repz
pop
mov
cltd
clc
movsl
adc
dec
aam
dec
das
or
dec
jl
or
ret
add
inc
daa
aaa
xor
test
fisttpl
push
add
or
sti
pop
xor
rcrb
add
pop
mov
shrl
push
imul
fdivl
fucomip
xor
push
out
jmp
adc
fwait
loope
adc
loopne
and
pop
clc
and
mov
stc
jge
mov
notb
dec
aaa
loope
mov
hlt
jnp
add
dec
jle,pt
mov
dec
test
sub
inc
xchg
dec
cmpsl
push
popf
out
xor
push
js
cltd
inc
std
mov
daa
mov
stos
mov
sbb
out
ja
inc
adc
add
lds
les
pop
repnz
scas
sbb
sub
pop
xchg
sub
test
shlb
jmp
mov
mov
lds
inc
fiaddl
push
into
sbb
jp
pop
aad
stos
inc
fnstenv
mov
cmpsl
dec
mov
pop
scas
gs
call
pop
xor
pushf
sub
ja
add
lods
pop
test
xor
in
sub
std
rorl
and
push
xchg
out
jg
mov
adc
imul
fmull
je
in
mov
mov
sarl
idivb
xchg
fcoms
and
or
mov
cmpsl
inc
push
dec
mov
cmp
mov
lahf
nop
movsl
mov
adcb
jne
dec
inc
jae
mov
push
push
addr16
add
lea
xor
mov
mov
shll
adc
lret
add
jge
pusha
mov
imul
fstl
imul
das
insb
sub
pop
pop
xchg
lods
mov
inc
xor
test
xor
or
adc
cltd
mov
xor
pop
lea
push
cmp
xchg
std
out
daa
loope
mov
lock
dec
jle
popa
call
hlt
test
inc
movsb
aam
outsl
sahf
pop
pop
adc
xor
xchg
mul
lcall
cmp
es
out
stos
clc
cltd
jmp
pusha
cmp
sub
mov
insb
add
push
mov
xor
inc
jbe
aaa
mov
push
test
mov
cmp
fsubrs
jb
aam
push
dec
test
xchg
sti
pushf
pop
mov
mov
add
pusha
loop
repnz
call
mov
or
dec
repz
es
divb
in
xchg
sub
pop
pop
pushf
popf
pop
ljmp
bound
mov
out
sbb
cli
add
jns
cmp
xor
fsubr
cmpsl
jae
xor
insl
inc
rcl
imul
mov
sahf
pop
popa
adc
lcall
jno
xor
leave
dec
mov
into
xor
sti
xchg
pop
xlat
adc
xchg
inc
fs
andb
xor
sbb
mov
add
lahf
sbb
int3
adc
fcoml
mov
lds
pop
imul
inc
icebp
mov
frstor
mov
mov
pop
dec
pop
sbb
sub
mov
in
sahf
inc
cmp
pop
sub
jmp
dec
inc
fidivl
mov
aaa
mov
xor
sub
pop
hlt
pop
pop
in
pmullw
sahf
cmp
dec
enter
rorb
jne
push
movsl
test
jb
jns
daa
sbb
fnsave
add
icebp
push
xor
add
fdivrl
enter
ficompl
mov
hlt
aad
sub
popa
sahf
cltd
popf
sbb
xor
mov
and
push
mov
xchg
neg
out
std
std
shl
mov
sbb
rcrb
jns
sbb
enter
repnz
aas
fisubs
outsl
pop
sarl
notb
daa
out
lcall
xor
test
sbb
xor
and
or
imul
and
into
sbb
mov
shlb
push
mov
and
fstl
imul
push
loope
out
xlat
pop
mov
and
shlb
inc
les
pushf
outsb
xor
mov
notb
inc
mov
cmp
jb
test
aas
test
insl
xchg
push
jno
jl
jp
jbe
xchg
inc
stos
je
in
fisubrl
adc
cmp
cmp
jae
loopne
xor
mov
fadd
nop
pushf
adc
shll
add
jo
scas
pop
test
jge
daa
aaa
test
lahf
xchg
roll
adc
jmp
cld
fildl
shr
xchg
pop
jecxz
dec
movsl
adc
jne
xchg
and
mov
leave
cld
clc
sub
cld
in
pop
shlb
push
aaa
pop
sub
imul
popf
inc
dec
int
mov
out
and
add
jl
je
rcrb
lahf
int
push
shlb
dec
push
pop
rcr
pushf
push
lds
js
fisttpl
mov
adc
xchg
ret
mov
dec
sbb
and
sub
xor
jns
jmp
mov
push
in
add
out
scas
imul
xchg
sarl
daa
jge
fistl
cmpsl
loop
loope
in
jnp
arpl
scas
dec
xlat
mulb
dec
iret
ret
outsl
mov
lods
adc
xor
aam
addr16
lods
ds
sub
ds
and
loope
mov
mov
pop
add
out
jns
lcall
pop
repz
scas
mov
xchg
pop
add
pop
pop
rcrb
mov
mov
jge
pop
fsts
push
push
push
xor
lret
jecxz
inc
cmpl
dec
lods
mov
cmpsl
es
mov
mul
aad
push
mov
adcb
mov
sbb
fisubl
inc
xchg
push
pop
adc
into
or
pushf
mov
jge
es
jle
add
or
push
mov
jmp
pusha
push
cmp
pop
and
fsubrs
add
mov
xor
stos
xchg
or
xchg
aaa
or
add
imul
cmpsb
mov
and
cld
mov
scas
pop
pop
jno
mov
mov
repz
inc
xor
push
sbb
jbe
pop
mov
test
push
pop
scas
repnz
inc
adc
jle
lods
lds
mov
rcll
xor
fwait
imull
lret
lret
jb
add
clc
inc
mov
sub
out
in
sbb
filds
bnd
add
dec
pop
loopne
inc
pop
test
cwtl
hlt
and
push
sub
cmpsb
insl
inc
or
mov
jae
iret
lret
lock
push
cmp
sub
into
les
aam
cltd
rcrb
fmulp
push
mov
fiaddl
adc
dec
jbe
outsl
add
push
divb
popa
sbb
into
dec
stos
xor
dec
jp
or
scas
add
inc
out
leave
inc
dec
fidivrl
outsl
movl
nop
rcrl
adcl
and
push
mov
cmpl
test
insb
pusha
movsl
pop
fidivl
mov
and
in
sbb
test
das
jo
stos
push
movsb
add
fstp
stos
inc
mov
fxch
jl
or
push
fistps
jl
sub
sbb
and
ds
ljmp
ficoml
add
out
jp
mov
or
scas
movsl
adc
sti
cmpsb
push
cmp
popl
pusha
std
loope
lods
xchg
aaa
sbb
fnsave
pop
ds
jge
pop
imul
mov
lahf
mov
icebp
pop
cmp
mov
mov
adc
push
in
stc
addl
lret
mov
imul
inc
push
out
sbb
dec
cmp
scas
stc
or
mov
outsb
add
push
int3
andl
lds
and
xchg
pop
subl
loop
ficoms
dec
and
mov
stos
movsl
pop
rol
pop
lea
fisubs
jmp
js
pop
loope
repnz
rorw
sub
push
fsts
lods
cmc
xorl
mov
aas
pop
gs
pusha
sub
inc
in
fsts
xor
lahf
and
in
popf
mov
jl
xorb
dec
cli
mov
mov
shrb
popa
xchg
jo
push
pop
sbb
and
jbe
arpl
dec
adc
aam
adc
inc
mov
sbb
push
pop
test
mov
push
clc
out
adc
add
cmp
imul
cmpsb
sbb
outsb
mov
pop
test
ja
and
icebp
mov
adc
lret
arpl
out
daa
xor
add
sbb
xchg
xchg
inc
sub
ss
cwtl
push
xor
and
fldenv
scas
adc
loopne
xchg
sbb
and
and
loope
cmp
jo
aaa
loop
dec
xlat
xor
cmp
shrl
mov
pop
daa
mov
cli
cmpsb
mov
in
fldt
dec
sbbl
leave
aad
movb
lahf
dec
or
pop
sar
cs
pop
scas
outsb
adc
sbb
jge
test
push
push
xor
loopne
loop
inc
ret
xor
mov
lods
jb
clc
pushf
lods
dec
add
rclb
fucomip
sar
push
mov
call
jne
xchg
fcmovu
notl
fdivrs
dec
movsl
sbb
ss
pop
cmpsb
in
pop
out
imul
mov
je
leave
aas
scas
rcrb
jp
cli
ja
mov
adc
lahf
cwtl
out
adc
pop
pop
fidivrl
inc
call
sbbl
inc
push
inc
stos
and
mov
jb
insl
xchg
fs
sbb
push
lcall
cld
and
rol
incl
jge
sub
jecxz
mov
repnz
push
inc
enter
cmp
adc
inc
cmp
outsl
je
add
pop
sbb
sbb
sub
out
adc
and
cmpsl
mov
jge
loope
xchg
insl
or
enter
outsl
pop
lahf
cltd
add
add
lahf
mov
rol
adc
pop
mov
aam
push
popf
pop
aam
mov
sub
addr16
mov
cwtl
push
lds
mov
in
inc
push
scas
ret
stos
mov
insb
in
insl
push
dec
jne
aad
cmp
jnp
les
adc
inc
mov
mov
or
and
in
ficoml
xchg
pop
adc
mov
bound
pop
pop
in
inc
fmul
sub
addb
pushf
fisttpll
repz
les
cwtl
lock
xor
jle
jae
mov
mov
jp
inc
lea
mov
push
cli
jmp
out
jo
in
adc
jno
mov
mov
les
js
inc
fmuls
repnz
jg
lods
inc
mov
movsb
dec
add
mov
sub
movsl
sahf
mov
sbb
mov
stos
aad
stos
add
inc
shlb
pop
xorl
mov
lods
js
out
and
inc
stc
mov
fcoms
mov
fisubrs
cwtl
std
movsb
repnz
sbb
das
fs
inc
mov
mov
bnd
loopne
mov
sti
test
add
lcall
clc
sbbb
cmp
xor
and
popf
pop
mov
test
or
stc
fwait
insl
sbbl
mov
incl
pop
outsb
dec
daa
xor
mov
mov
test
add
iret
dec
xor
pop
mov
mov
adc
push
sbb
or
xchg
fnstcw
push
jge
jo
cwtl
jbe
mov
cmp
jo
sbb
stos
out
aaa
in
sbb
lds
xchg
fbld
outsl
add
subl
dec
out
lds
cmovne
fcomps
jmp
fwait
movsl
mov
lock
mov
data16
inc
add
mov
add
push
push
dec
or
popa
mov
xor
sbb
cmp
cli
or
cld
ret
xchg
mov
add
fiadds
dec
jbe
cmpb
rorl
sti
stos
mov
stc
jae
inc
cmpsb
sub
pop
add
pop
enter
iret
dec
xlat
inc
or
inc
xlat
mov
lret
inc
insl
pop
fists
mov
rolb
jns
cmp
and
xor
sub
daa
inc
pmaxsw
lret
stc
dec
and
inc
push
mov
push
push
adc
fimuls
add
fchs
loope
jge
fstpt
fimull
mov
xchg
mov
roll
sub
inc
push
js
std
push
fsubs
out
or
jge
aam
mov
pop
mov
xlat
jmp
sbb
cmp
jle
repnz
out
mov
pop
mov
outsl
fdiv
xlat
mov
push
roll
xor
out
inc
mov
mov
or
cltd
rcll
imul
outsl
mov
daa
jbe
mov
cltd
sub
in
cs
add
dec
andb
sbb
ds
cmp
sub
jp
jge
xchg
push
loope
ja
dec
mov
adc
push
pop
xchg
out
jbe
mov
or
repnz
mov
lods
sbb
lods
sub
pop
adc
and
push
xchg
mov
jecxz
cmp
movsl
inc
push
mov
jns
pop
nop
sti
data16
sbb
fdivrp
dec
in
pop
imul
push
bound
sbb
in
add
mov
loop
ficomps
out
hlt
push
popf
lcall
out
sub
jge
imul
dec
stc
push
mov
es
lret
mov
fs
xor
jle
xchg
outsl
rorl
jmp
mov
sub
sub
jecxz
test
cmp
data16
dec
lods
std
leave
adc
mov
push
dec
lcall
add
cs
jmp
push
in
mov
lcall
push
xor
enter
test
mov
lret
inc
add
mov
int3
xchg
jp
push
fs
pop
push
sub
jns
pop
mov
cmp
aad
mov
out
imul
dec
mov
rep
iret
adc
pop
inc
cwtl
mov
in
data16
push
mov
cmp
xorl
je
fsubrl
in
mov
loope
push
pop
out
pop
fwait
adc
or
xor
in
xchg
mov
add
test
jno
aam
add
fwait
repnz
std
out
movsb
push
push
rcr
lret
fistpl
std
fldl
xchg
loope
inc
xlat
cmpsl
sbb
cmpl
es
pop
jno
adc
cmc
cmpsl
add
clc
sbb
lock
xor
fwait
push
cmc
push
dec
ficoms
cld
out
push
lods
jle
mov
test
add
sahf
xor
mov
stc
sbb
jo
mov
addr16
mov
hlt
or
pop
test
aaa
cmp
inc
stc
cmp
clc
cli
xor
sub
lahf
daa
cmp
lods
and
scas
cmpsl
pushl
andb
stos
outsb
jg
test
add
push
loop
aad
stos
fdivrs
push
hlt
movsb
mov
or
mov
jo
andl
adc
enter
sub
testb
cmp
add
insl
mov
push
andl
push
fimull
std
and
shl
adc
inc
sub
les
mov
cmp
lahf
mov
or
jmp
and
and
fwait
in
call
sbb
shlb
sti
jge
jno
mov
movsb
aad
sbb
dec
imul
cmp
push
sbb
popa
add
sub
loopne
clc
xchg
and
enter
fsubr
mov
inc
jmp
fiadds
push
push
xchg
push
inc
jnp
mov
repz
lds
mov
mov
je
movsl
setb
pop
mov
int3
sub
inc
rcr
lods
test
dec
ret
movb
xchg
jnp
push
lds
cmp
setb
roll
icebp
daa
iret
push
pop
jl
andb
ror
fadds
insb
dec
lock
les
or
push
xor
add
sub
and
subw
pop
xlat
ljmp
pop
das
xchg
mov
aam
lds
jmp
aad
dec
lods
xlat
adc
sub
mov
xchg
outsl
push
ss
das
mov
pop
cmc
int3
push
mov
insl
dec
add
xor
cmp
jne
mov
aad
and
adc
outsb
mov
sbb
test
add
in
push
mov
fs
rorb
ficoml
push
call
push
sbb
out
imul
insl
mov
and
mov
pop
xor
mov
inc
aaa
lock
xchg
pop
xchg
shlb
add
mov
cmpsl
push
sbb
daa
add
fwait
out
xor
scas
clc
shlb
out
xchg
rorl
pop
movl
mov
inc
push
rorb
cmp
movsl
mov
rorb
sbb
lret
mov
push
jge
mov
sahf
test
lahf
push
int3
jbe
jecxz
dec
mov
push
or
xchg
mov
pop
mov
lret
fdiv
mov
jmp
test
push
sbb
test
push
js
dec
pop
and
fcmovne
shll
jge
jnp
jl
sbb
mov
aam
int3
cli
cmp
add
insl
jg
push
into
jg
xchg
cmpsl
or
int3
push
mov
pushf
fdivrs
jecxz
lret
cmp
push
mov
or
dec
and
pop
xor
dec
test
jge
inc
xchg
dec
mov
sbb
fiadds
shll
dec
pushf
and
gs
jbe
push
xor
aas
mov
sub
sbb
jne
aam
push
cmp
lret
pop
pop
mov
int
cmpsb
pop
adc
add
jnp
push
cmp
and
jae
lods
fwait
jg
loopne
imul
icebp
pop
push
sub
push
into
pop
test
lea
fcmovnbe
adc
push
jecxz
fstpt
hlt
inc
mov
lock
mov
test
dec
int3
inc
int
out
dec
xchg
dec
adc
subl
fildll
xchg
pop
das
and
xor
or
loop
inc
in
scas
and
icebp
add
and
dec
test
ret
inc
xor
int3
and
filds
sub
popa
aad
push
pop
int3
loopne
pop
jmp
inc
sub
jmp
rclb
pushf
stos
call
repz
shll
outsl
xchg
das
cmp
int3
xorl
loope
sbb
nop
outsb
cmp
push
xchg
ret
mov
xor
lods
pop
stc
mov
cmp
lea
out
jo
or
mov
and
cmp
jne
xor
inc
adc
andl
rolb
pop
cmp
lret
rorl
sub
push
mov
scas
mov
sar
das
and
nop
pusha
mov
lods
xor
jg
push
test
and
cmpsl
inc
jae
ret
sahf
pop
cmp
adc
push
and
test
insl
pop
lret
push
sub
cmp
call
push
mov
adc
int3
push
sub
adc
mov
dec
jno
jl
mov
das
scas
jmp
inc
jecxz
andl
cmpb
or
cmpsl
icebp
xor
adc
add
rcr
add
movsb
inc
nop
insl
add
adc
lods
ljmp
fwait
mov
dec
jne
pusha
inc
leave
push
pusha
jo
jb
les
sbb
rclb
or
sbb
or
push
enter
or
aaa
push
pop
pop
push
push
int3
or
mov
pop
mov
or
jnp
sub
scas
inc
push
subb
lahf
aam
fstps
addb
ja
out
into
sub
popa
mov
jge
add
les
movb
insb
scas
jns
test
or
out
jns
inc
pop
jnp
jg
cmp
jb
out
push
mov
xchg
outsl
imul
xor
pop
mov
mov
sti
es
sub
in
xchg
fcomps
xchg
pop
or
xor
insb
gs
cmp
fists
xor
mov
lret
int
cmpl
sub
addb
mov
rclb
call
out
pop
rcll
xchg
in
jl
movb
xchg
into
out
pop
xor
idivb
daa
into
sbb
aaa
mov
add
sbb
xlat
jle
lods
add
popa
fldenv
xchg
addr16
or
icebp
aaa
iret
mov
scas
dec
and
sbb
inc
mov
pop
mov
test
pushf
aad
and
lds
out
cltd
xchg
jge
and
dec
jne
mov
xor
push
push
sti
push
mov
addr16
jle
dec
jae
pusha
pop
cmpl
test
lcall
fistpl
inc
ds
into
adc
leave
negl
xor
and
inc
dec
out
outsl
shrd
xor
clc
jne
or
xchg
movsb
and
shrl
fldl
insb
xor
loop
loope
xor
les
xchg
mov
ds
hlt
dec
or
sub
cmp
repnz
in
jb
fstps
add
pusha
cs
popa
fcoms
out
testb
cmp
jb
pop
lds
add
pop
das
mov
mov
fidivrs
out
ret
in
andb
jle
js
js
lods
adc
cmc
insb
orl
cmp
sub
fdivrs
std
cmp
lahf
xor
xor
xchg
es
scas
test
pusha
cmp
pop
xchg
xchg
insl
sbb
movsb
outsl
aas
mov
lahf
bnd
add
or
sub
sub
das
repz
sub
lret
cltd
test
roll
lahf
inc
xor
ja
jne
cmc
adc
mov
mov
shll
xchg
out
adc
adc
in
xchg
cmpsl
xchg
pop
cmc
iret
outsl
mov
mov
push
or
and
andl
dec
out
loopne
movsb
xchg
dec
aad
adc
push
sub
add
rorl
mov
and
fwait
inc
add
xor
into
ror
sub
and
filds
das
sub
lds
mov
add
pushf
xchg
cmpsl
or
xchg
and
pop
jle
outsl
xchg
jle
sbb
je
idiv
cmp
mov
mov
inc
hlt
mov
fcomps
pop
or
jmp
ds
xorb
ret
in
cmp
shrl
xor
xor
std
sub
aaa
inc
inc
jnp
add
rolb
lret
adc
lret
pushf
or
sub
jmp
repz
inc
mov
pop
push
loopne
sbb
aas
jmp
fadds
adc
imulb
push
lods
mov
call
pop
sbb
cmp
mov
jg
popa
mov
xchg
and
or
or
scas
test
movsb
add
xchg
ljmp
pop
jge
jbe
idivl
ds
xor
loopne
lret
inc
bound
jns
push
pop
insb
lahf
jnp
les
shl
jns
xor
arpl
ljmp
test
loopne
inc
push
sub
jno
hlt
xlat
xchg
loop
fcom
adc
shl
dec
cmp
or
xor
mov
enter
jne
xchg
add
xchg
int3
jno
jmp
testb
mov
sbb
loopne
cltd
adc
aas
es
mov
out
mov
hlt
mov
in
fwait
dec
jnp
or
adc
sbb
mov
mov
daa
push
das
ss
xchg
add
or
xor
int3
inc
jecxz
cmp
sub
mov
ret
imul
es
xor
cmp
mov
cmp
mov
and
rcrb
repnz
sbb
sbb
int
mov
inc
clc
test
cld
insl
sub
mov
mulb
and
dec
std
stc
add
fldenv
je
les
rorl
test
iret
jae
cmp
and
fwait
pop
cld
out
mov
pop
push
add
lcall
lock
insl
loope
icebp
fdivr
incb
rolb
clc
cmp
negb
mov
insb
sbb
fmull
jns
and
xor
and
mov
int3
jp
icebp
adc
repz
movsl
out
cltd
dec
mov
jo
push
jp
jmp
adc
jg
mov
sub
sbb
movsl
push
rcrl
test
jle
adc
pop
loopne
std
adc
into
dec
clc
xchg
outsb
mov
xlat
sbb
scas
inc
clc
add
leave
pop
or
cltd
fisttpll
add
div
movsb
loop
sub
filds
sub
in
pop
mov
test
repnz
adc
mov
lock
mov
dec
cmpsb
xor
pop
mov
cmp
orl
pop
leave
mov
lods
sbb
cli
jae
adc
dec
outsb
or
pop
sar
mov
fwait
dec
rcrl
dec
inc
jg
mov
xchg
jg
mov
inc
cwtl
inc
push
popa
test
mov
mov
xor
int3
sub
mov
adc
jbe
gs
ds
outsl
cmp
cmpsb
sbb
in
cmpsb
gs
push
adc
loope
sub
stos
lods
lock
adc
pop
xchg
mov
clc
dec
inc
iret
cmp
pusha
sti
iret
out
jae
pushf
stos
ret
imul
addb
xchg
inc
and
pushf
mov
xchg
mov
sbb
add
test
insl
xlat
push
imul
aam
xchg
add
icebp
or
out
sbb
dec
or
cmp
jl
sbb
pop
mov
cmc
xchg
dec
mov
aam
dec
cwtl
add
aad
jp
jge
in
jge,pn
ja
pop
mov
test
pop
xchg
xchg
lods
shr
dec
cltd
xor
jmp
mov
add
imul
shr
inc
into
mov
flds
fldcw
movsb
loope
push
icebp
repnz
fldl
mov
and
pop
mov
mov
mov
mov
sbb
mov
mov
lret
lods
or
gs
mov
push
xchg
aad
pusha
sbb
les
jle
pushf
gs
cs
sti
push
rcll
add
int
outsl
dec
mov
in
add
sub
into
sbb
pop
call
pop
pop
sti
lret
cltd
imul
adcl
or
push
inc
shr
pop
mov
loope
lods
jae
mov
adc
xor
adcb
aam
mov
ds
or
cltd
push
mov
xchg
ss
in
push
or
pop
sub
mov
sub
dec
pop
xor
adc
sti
xchg
add
xor
push
add
pop
mov
push
xor
add
pop
cmpsb
shlb
push
push
inc
inc
dec
mov
out
nop
lods
sub
mov
mov
imul
jp
lock
inc
cld
dec
xchg
xor
push
fisubrl
cmpb
jno
loopne
out
xlat
mov
dec
fldenv
pop
out
bnd
jnp
rolb
pop
lret
call
xorl
filds
mov
mov
divl
mov
xor
push
mov
jne
push
mov
mov
arpl
js
shl
inc
xlat
pop
push
sbb
adc
adc
sub
sbb
fists
sbb
dec
pop
movsl
bound
and
inc
loope
sub
movsb
filds
outsl
ds
sbb
testl
jl
add
scas
mov
fucomi
sti
mov
mov
jl
cmp
stos
rcll
jl
je
es
pusha
insb
jle
xor
jecxz
push
js
add
jne
mov
cmpsb
pop
push
popf
sbb
mov
sahf
daa
das
sbb
push
xor
fcomps
jp
ljmp
pop
jecxz
jmp
dec
fadds
mov
mov
imul
ret
std
sbb
and
das
and
jo
scas
in
xchg
xchg
mov
mov
fstp
bound
or
in
cmpsb
lahf
push
icebp
in
add
daa
push
ficompl
xchg
jmp
scas
mov
adc
ljmp
rcl
data16
daa
sti
and
lret
fisttps
mov
outsl
mov
mov
insl
divl
xchg
mov
fcompl
xchg
lods
test
mov
aas
js
sti
push
adcl
pop
gs
or
gs
leave
push
xchg
adc
cmpsb
aaa
cmp
addr16
add
push
stc
and
sahf
sub
mov
repnz
scas
jge
leave
das
pusha
inc
push
insb
sub
repnz
adc
mov
sub
in
push
xor
das
adc
cwtl
pop
cmpsb
imul
jnp
cmp
mov
push
or
cmp
cli
jmp
jno
push
jmp
cmovp
adcl
mov
pop
xor
xchg
stos
lret
inc
aam
cld
je
enter
jle,pn
repz
cwtl
inc
mov
lock
aas
lret
fs
popa
icebp
clc
ss
xchg
xchg
std
rcrl
pop
mov
mov
into
stc
leave
fstps
rol
pop
imul
popa
arpl
ficoml
push
push
cs
cli
aas
icebp
in
push
arpl
insl
pop
out
nop
arpl
cs
mov
push
fisubrs
sahf
cmc
or
cmp
sub
movsb
fnstenv
mov
bnd
push
mov
out
aaa
push
lcall
xchg
out
jge
mov
dec
test
and
cmp
or
adc
xor
movsb
xchg
cwtl
mov
outsb
sbb
mov
inc
aam
imul
jle
cmpsb
pop
jle
push
mov
inc
mov
les
int3
or
dec
mov
fidivs
movsl
jmp
inc
adc
movsb
jmp
out
mov
push
push
pop
arpl
pop
sub
inc
add
push
repnz
subl
adc
and
adc
jb
jo
dec
insb
xchg
mov
aam
cmc
inc
push
sub
addl
mulb
les
mov
es
cmp
sub
outsb
adc
jp
pop
sub
mov
das
in
or
xor
or
mov
test
jno
mov
jmp
or
int3
in
lea
or
cmpsb
mov
mov
lds
loop
pop
dec
mov
addb
icebp
enter
dec
arpl
xlat
pop
sub
lds
icebp
dec
test
dec
cld
shlb
fcmovnbe
mov
mov
inc
repnz
mov
sbb
sbb
packssdw
stos
ret
xchg
push
sbb
call
adc
repz
enter
jmp
inc
push
xchg
rolb
jmp
xchg
push
and
mov
jbe
fistl
dec
std
mov
mulb
testb
rcl
xchg
int3
mov
inc
pusha
adc
inc
jle
inc
xor
jb
push
sub
xchg
adc
insl
xchg
push
test
push
sbb
daa
xchg
mov
pop
shl
sbb
inc
xchg
and
cmc
jno
dec
divl
or
lar
outsl
inc
leave
scas
mov
imul
inc
jae
cs
js
cmp
out
pop
inc
int3
adc
or
fisubrs
dec
jo
daa
xchg
gs
and
test
or
jl
push
pop
dec
fmuls
movsb
fdivrs
into
jg
test
jle
aas
pop
xchg
xchg
push
sub
ret
mov
xorb
hlt
lods
shlb
mov
xor
or
dec
iret
mov
inc
adc
ja
test
iret
mov
shlb
adc
sahf
jge
inc
rcrl
scas
cld
fdiv
inc
aas
push
push
ds
and
push
filds
dec
loope
in
test
movsl
orl
pushf
jl
inc
repz
cs
movsl
rcl
repz
push
or
cmp
push
mov
and
push
adc
cmpsb
aas
inc
data16
out
jle
lret
or
ret
cmp
jg
dec
sahf
test
jle
mov
lds
mov
mov
add
fbstp
push
add
push
jb
icebp
xchg
xor
dec
shlb
faddl
aam
addr16
std
jp
or
add
xchg
add
mov
test
jp
stos
bound
jnp
sahf
cmp
test
xchg
gs
pop
ds
iret
push
notb
or
test
ja
pushf
mov
push
rolb
enter
or
enter
pop
cmp
jbe
mov
pop
xchg
pushf
test
lds
mov
lods
mov
push
sbb
test
dec
jecxz
cwtl
outsl
test
mov
addr16
fwait
loopne
int3
xor
out
sbb
stos
add
loopne
jb
nop
xor
pop
enter
or
push
lea
push
incb
mov
mov
add
sub
cmp
sbb
push
mov
mov
jge
xor
inc
dec
dec
shrb
inc
lock
adc
or
xchg
nop
or
dec
push
jp
jb
jl
or
lcall
sbb
mov
cmp
je
dec
jae
mov
fs
add
divl
jecxz
jl
hlt
add
push
adc
push
rolb
adc
dec
test
cmp
outsl
xchg
call
xchg
pushf
push
es
hlt
stos
out
add
popl
rcll
mov
lahf
jg
cmp
stos
jb
in
sbb
lock
fldenv
repz
jg
mov
push
loope
stc
daa
lds
clc
repnz
jno
sub
and
pop
mov
movsl
pop
jns
jne
test
out
jge
out
mov
adc
push
add
xchg
loope
ja
inc
jecxz
aam
lea
push
cmpsl
adc
push
mov
insl
sub
test
mov
cmpsb
and
je
inc
xchg
lcall
add
cmp
lods
ljmp
out
mov
or
ljmp
dec
lcall
rclb
sbb
flds
stc
daa
inc
cmp
cmp
test
jecxz
scas
lods
pop
and
lcall
add
sub
and
xchg
inc
lods
dec
push
out
sub
push
dec
inc
aaa
lret
or
unpcklps
mov
cmp
mov
jecxz
sahf
inc
ds
jns
adc
and
inc
dec
inc
outsl
mov
inc
mov
insb
pushl
outsl
lcall
shr
aad
ret
add
ss
pop
sbb
insl
cmp
dec
decl
jp
scas
testl
aaa
or
aas
clc
je
push
ss
stc
xchg
inc
pop
cwtl
in
insl
pop
int
scas
ljmp
sbb
sub
leave
into
fidivrl
jp
xor
add
jg
mov
adc
jb
mov
hlt
das
cmp
dec
adc
bound
add
xchg
divps
inc
imulb
and
or
mov
jmp
ja
invd
movsb
sub
cmp
pop
mov
ja
js
leave
lcall
push
in
and
imul
mov
push
adc
stos
sub
jno
stos
mov
fstpl
je
mov
sbb
fistpl
add
fisttps
cmp
stos
sub
shlb
adc
fsubl
sub
dec
lret
mov
dec
xchg
jbe
adc
mov
in
test
aam
mov
or
mov
dec
xchg
and
inc
xchg
sahf
call
call
add
fcoms
add
out
lds
rcrl
adc
or
add
dec
fwait
xchg
mov
cmp
sarl
int3
das
dec
cmpsb
insb
push
cli
jge
or
sti
lock
mov
dec
sarb
lret
push
pop
push
mov
int
and
test
fst
push
mov
adcl
push
mov
stos
jecxz
sar
push
sarb
xchg
add
adc
sbb
iret
fnstsw
test
in
arpl
test
xorb
pushl
sbb
dec
mov
or
loope
jle
xor
loope
lret
ja
fisttpl
jbe
mov
lds
adc
inc
notl
fsts
add
mov
int3
mov
roll
mov
cmc
mov
ds
push
pop
pop
bound
sub
inc
xchg
movsl
pop
cltd
mov
and
or
das
pop
or
imul
xchg
mov
bound
call
outsb
rorl
fbstp
push
cltd
loope
push
cld
repz
pop
dec
dec
mov
stc
enter
daa
adc
inc
outsb
dec
jb,pn
inc
loope
jno,pt
sub
mov
fidivrl
stos
lcall
jbe
scas
leave
repnz
mov
outsb
sub
xchg
add
pop
or
popa
repnz
ret
and
rolb
sub
add
iret
mov
imul
js
shl
ficomps
xchg
add
cmp
pop
mov
lret
pop
push
dec
std
xchg
daa
push
xchg
add
insl
push
push
pop
shrl
lock
jge
inc
xor
mov
cmpsb
jg
pop
pop
ret
or
movsl
push
scas
sub
cli
add
call
ror
std
inc
cmp
mov
scas
xchg
scas
mov
push
mov
cltd
sarl
or
add
pusha
in
inc
outsl
or
inc
dec
cmpsl
out
xchg
loop
dec
je
rcrb
sarb
sbb
mov
nop
or
mov
jno
bound
fdivrs
jae
ret
jle
insl
dec
xor
mov
lea
push
outsb
jg
sarb
jne
adc
push
xor
xchg
bound
cmpsl
pop
lods
adc
lea
or
fs
out
mov
xchg
mov
clc
xchg
push
xchg
repnz
popf
sarb
lods
aas
mov
mov
aaa
nop
sarl
imul
lea
xchg
inc
push
movsl
cmp
push
pop
fildll
pop
popf
or
jae
jmp
subb
or
pusha
and
push
andb
xchg
popf
xchg
test
stc
clc
xorl
push
and
jno
out
sbb
mov
gs
mov
mov
popa
int3
insb
or
sub
arpl
jecxz
xchg
xor
insl
repz
dec
ror
int
stos
addr16
ret
lods
repz
sbb
fwait
hlt
clc
push
or
stc
xchg
sub
cmp
bound
data16
xchg
jecxz
test
dec
inc
addr16
fdivl
jns
inc
sub
dec
mov
shll
add
sti
sub
or
lods
sub
push
in
imul
hlt
sub
and
push
lea
mov
pushf
sarb
push
push
inc
dec
mov
das
cld
jns
push
mov
add
sub
jmp
mov
inc
mov
jge
sbb
out
insb
or
mov
das
jl
mov
mov
mov
inc
fsubr
mov
mov
fs
push
mov
jbe
or
inc
test
dec
cmpsl
pusha
cmpsl
gs
push
xor
jne
fnstenv
or
scas
ljmp
ret
adc
es
ljmp
jne
mov
enter
enter
cmp
int3
mov
rol
or
cli
addr16
add
mov
jl
pop
push
mov
fs
or
cmp
or
sub
jle
fwait
xor
push
scas
mov
jl
sarl
negb
andl
sahf
mov
mov
movsl
bound
sbb
or
lock
fcoms
pop
cld
sti
scas
cmpsl
jbe
sbb
ljmp
popf
fcmovnb
or
leave
mov
mov
fs
negb
repz
or
lods
fwait
sub
xchg
or
rol
pop
mov
push
sbb
pop
loope
data16
int
in
sbbb
jne
inc
push
scas
sbb
movsl
pushf
outsb
lret
adc
fistps
pop
push
daa
outsl
arpl
ret
orl
lods
ds
imul
lods
inc
out
jno
and
push
notl
or
xor
lcall
lret
ljmp
push
jae
or
call
push
inc
add
add
xchg
inc
fdivl
cmp
out
decl
fucomp
lods
inc
insb
jno
adc
sbb
cmp
adc
cwtl
mov
mov
xchg
test
stos
lahf
pop
add
add
lea
pusha
sbb
je
ficoms
mov
pop
fs
mov
scas
aaa
rcrl
aas
rclb
out
lcall
mov
fwait
ss
scas
loopne
mov
mov
mov
bound
outsl
cmp
push
ficoml
popf
fistpll
cwtl
xor
mov
pop
clc
dec
add
inc
and
adc
das
loope
mov
sbb
xchg
cli
ss
or
xchg
rolb
shlb
jb
lods
ss
and
or
sbb
aas
out
pop
cwtl
mov
cmp
jl
and
push
xor
popf
jecxz
aas
addr16
pop
or
andl
xchg
fstps
ffree
jmp
pop
out
int3
nop
jne
sbb
int3
mov
jle
inc
in
adc
or
xchg
adc
and
outsl
or
shlb
add
dec
faddl
js
adc
sbb
stos
adc
inc
fisubl
push
out
arpl
stc
std
and
mov
outsl
dec
cmp
xor
inc
mov
and
fs
push
jmp
cmp
cmc
cld
in
add
cmp
xchg
mov
adc
jnp
cli
rcr
jb
jg
pushf
push
add
pushf
mov
cld
add
cli
dec
inc
push
cmpl
aaa
bnd
jle
je
push
dec
test
mov
and
xchg
in
sub
mov
jae
jne
add
fbld
xchg
xchg
lahf
and
sbb
lock
xor
outsb
push
xchg
xchg
mov
aaa
sahf
xlat
push
hlt
push
and
sub
adc
push
and
dec
sbb
jb
iret
mov
into
jo
lret
jmp
ja
mov
xor
sahf
mov
xchg
icebp
sahf
inc
xchg
test
call
mov
out
xchg
pop
ja
sbb
push
push
mov
ficoms
inc
pop
out
pop
pushf
push
aaa
bound
cmp
cmp
fwait
lea
xchg
push
adc
lock
mov
adc
add
cld
sbb
sbb
les
mov
outsl
arpl
test
subb
adc
adc
inc
inc
cmc
ds
pop
xchg
xchg
lods
push
ret
pushf
inc
mov
jno
jns
mov
pop
into
pop
jl
jg
inc
xor
shlb
aas
push
imul
add
imul
hlt
xlat
sub
sbb
inc
lods
nop
movsb
inc
cs
cld
sahf
sub
cli
inc
cmp
or
mov
cmp
adc
movsl
push
jg
add
shrb
rcrl
shll
nop
and
sub
mov
pusha
sub
xlat
dec
xchg
mov
mov
aaa
xchg
mov
jno
push
ret
adc
or
xor
jmp
lcall
add
pushf
inc
pushf
les
mov
fs
sbb
mov
sub
inc
mov
aas
dec
aad
push
mov
lret
mov
cltd
or
inc
xor
xchg
cmp
int
aad
push
xchg
push
pushf
cli
add
mov
stos
orl
mov
rcrl
jl
xchg
cs
mov
stc
or
stc
mov
pop
jp
inc
jle
and
sub
fwait
mov
cmp
xor
aaa
push
cmp
add
lock
jnp
pop
and
dec
out
mov
test
scas
sbb
push
cmp
pop
and
adc
pop
cld
aaa
xchg
insb
repnz
and
popf
add
movsb
js
fmull
add
mov
mov
add
fs
cwtl
scas
rcr
ret
cld
pop
pop
ror
mov
je
inc
mov
mov
insb
loopne
adc
xor
add
enter
dec
adcb
imul
fdivrs
clc
hlt
add
imul
mov
xlat
pushf
icebp
sub
sub
stos
cwtl
out
lret
in
or
cmpsl
mov
sub
ja
lret
xor
js
mov
jbe
addl
ret
subl
vsubss
lds
push
int3
js
sub
stos
fstpt
out
adc
imull
in
movsl
ds
mov
push
push
ja
sub
push
mov
sub
dec
sbb
mov
mov
mov
push
cmp
push
loop
loope
cmpsl
iret
push
addr16
inc
xchg
stos
pop
jae
adc
or
xor
aad
cmp
aam
and
mov
fnstenv
jae
sbb
sub
dec
jg
mov
sbbb
add
inc
add
sub
nop
mov
xchg
scas
rcll
aad
test
testl
jbe
je
in
sbb
rcll
stos
fidivs
data16
notb
test
and
jnp
pop
adc
sbb
mov
adc
mov
aam
adc
mov
cmc
pop
movsb
aas
rcl
mov
into
cwtl
or
pop
pop
roll
sbb
jnp
packssdw
fistpll
mov
loop
xchg
xlat
adc
xor
push
ffreep
test
mov
out
pop
aaa
shlb
xchg
movsl
iret
pop
shrl
add
out
scas
and
fwait
add
jno
ret
pop
jp
pop
rorl
pop
fsts
push
pop
cmp
dec
cli
js
add
jmp
call
cs
in
and
mov
mov
jno
out
or
stc
cmp
jne
dec
push
cmp
das
jp
adc
sbb
adcl
mov
int3
mov
and
mov
add
xor
cmp
cld
aad
dec
mov
leave
sbb
jp
add
pop
mov
ja
mov
in
dec
mov
sbb
ja
dec
push
mov
xor
dec
mov
mov
in
into
cmpsl
push
pop
dec
xor
movsl
stc
rcrb
mov
mov
push
icebp
add
pop
pop
jo
jp
jecxz
push
cmp
mov
ljmp
enter
scas
jne
movsb
ds
loopne
sbb
cmc
cmp
lea
call
out
cmpsl
pcmpeqw
adc
jg
sbb
pushf
pusha
push
icebp
mov
inc
mov
shlb
mov
or
mov
ret
mov
out
mov
or
pop
jae
add
mov
mov
sub
gs
adc
lock
mov
je
inc
inc
xchg
out
jl
stos
jbe
lock
aaa
sarb
stc
sub
outsb
fisttps
sbb
xchg
hlt
and
xor
xchg
mov
jmp
push
nop
arpl
in
dec
inc
enter
pusha
dec
test
leave
push
xchg
jne
in
das
and
lcall
sbb
or
xor
pop
push
iret
cmp
in
sub
out
outsb
inc
ja
sbb
push
cmpsl
jl
jns
xor
sbb
add
push
push
mov
xchg
leave
jo
stc
jno
pop
shll
and
dec
push
inc
icebp
sub
jnp
push
xchg
ja
xchg
aas
shr
mov
xorl
ss
fildl
iret
xlat
mov
loop
lods
pop
in
nop
lret
mov
loope
mov
push
cs
jl
pop
adc
adc
or
pop
int
movsl
loope
mov
das
jmp
loope
add
test
xlat
into
movsb
push
fisttpll
mov
lahf
sbb
test
out
fs
dec
sub
in
cmp
subb
repz
pusha
jge
in
push
sbb
movsl
pop
sbb
dec
ja
mov
cld
iret
cmp
and
pop
sbb
xor
je
lea
ss
mov
daa
arpl
shlb
or
ja
imul
adc
mov
test
xchg
sub
dec
add
add
iret
push
mov
addr16
mov
divl
inc
push
pop
fs
pop
mov
ljmp
daa
lcall
mov
mov
add
dec
mov
mov
or
pop
scas
inc
sub
fdivrs
or
pop
cmc
mov
rorb
xchg
jbe
xor
inc
pushf
push
or
fistpll
mov
sub
int
push
divl
stc
jle
jb
gs
pop
cmp
push
movsl
add
enter
insl
ja
mov
sub
jmp
daa
iret
cmc
adc
iret
xor
mov
fwait
cmp
pop
mov
xor
shrb
mov
fs
cld
inc
push
lds
xlat
outsl
dec
jl,pn
sbb
dec
push
leave
dec
out
sbbl
aaa
jecxz
or
add
repz
xor
arpl
cmp
inc
cmp
add
das
sub
or
lret
std
test
rcrb
imul
xor
mov
and
les
scas
fwait
scas
xor
xor
jg
pusha
cmpsb
movsb
in
jmp
fcoml
lcall
hlt
add
add
jns
mov
stos
mov
xor
fildl
mov
xor
push
push
ja
xor
push
mov
push
push
inc
nop
sub
lcall
pusha
pushf
sub
call
push
push
cmpsl
rcrb
call
add
shrl
mov
fbstp
mov
aad
or
pop
adc
sahf
decb
std
mov
pusha
push
or
int
sbb
roll
scas
cmp
mov
cmc
add
jbe
repnz
outsl
mov
mov
stos
dec
adc
adc
add
imul
pusha
push
cmc
nop
mov
xlat
push
dec
stos
mov
mov
sbb
mov
lods
fistps
push
xor
idivb
dec
pop
dec
mov
lcall
push
outsb
and
stc
jno
cmc
mov
jne
push
mov
ds
inc
xchg
lds
push
push
sub
gs
loopne
xacquire
jno
aam
jge
rolb
jp
repz
nop
pop
pushf
jl
jb
pop
loopne
jno
inc
lret
add
dec
imull
sub
lret
cmp
mov
lahf
inc
enter
push
push
jge
int
push
mov
dec
rolb
and
push
clc
out
add
inc
add
and
out
call
adc
push
inc
out
or
std
mov
add
mov
xor
in
enter
shll
mov
mov
pop
cmpsl
and
scas
not
push
sbb
push
jno
or
sbb
aas
fiadds
adc
shll
and
mov
dec
pushf
out
mov
addr16
or
fimuls
repz
jge
xor
inc
xchg
xor
jmp
mov
or
jo
or
mov
dec
push
jp
shrl
xor
dec
loope
xor
cmp
test
sub
fidivrl
fbld
jmp
aaa
mov
sbb
pop
enter
pop
sbb
mov
test
insl
xor
jp
jp
int
stc
inc
aam
lock
mov
jmp
mov
mov
inc
popf
sbbb
push
xchg
or
push
movsl
fimull
dec
push
aam
cwtl
sarl
pop
cli
aad
mov
adc
insb
aaa
dec
cmp
pop
or
pushf
je
mov
adc
enter
stc
fwait
clc
aaa
in
sti
sbb
pop
iret
popl
cmp
pop
mov
test
aad
stos
push
xchg
mov
outsb
push
dec
lret
out
or
leavew
cmp
add
in
pushf
ljmp
sub
pop
mov
sbb
cs
jp
in
cmp
xchg
push
fcmovu
int
addr16
dec
sub
lcall
out
lret
jp
sub
inc
aam
adc
pop
jge
rcr
xor
pop
mov
push
imul
jb
outsb
pop
push
xchg
mov
cmc
and
xor
in
in
sub
sub
lods
movsb
mov
and
stos
add
mov
pusha
shll
mov
shll
loop
aad
or
mov
xchg
push
and
pop
js
dec
fmul
sbb
add
test
lods
ret
dec
andnps
lds
push
sbb
dec
lods
dec
and
mov
fisttpl
adc
pushf
addr16
mov
inc
daa
inc
mov
add
sbbb
fbstp
xchg
in
movsb
mov
cmp
mov
ja
stos
push
mov
repnz
sti
js
cmp
bound
mov
cmp
and
movsl
cmp
es
das
jne
xchg
mov
es
shll
ljmp
jbe
pushf
fmul
cmp
incb
mov
fsubrs
lcall
int
xchg
cmp
cwtl
stos
cmp
push
nop
in
add
xlat
pop
cmp
aad
or
fbstp
test
cmc
mov
push
cmpb
out
jb
or
int
lods
mov
jp
inc
and
mov
mov
xlat
push
in
dec
inc
stos
adc
outsb
iret
les
mov
mov
sub
jnp
dec
lcall
inc
jae
fsubs
out
dec
stos
das
mov
or
and
mov
and
add
pop
mov
pusha
addr16
cmp
xlat
add
lds
jmp
neg
sbbl
fdivrl
jecxz
cmc
je
sbb
pushf
inc
sbb
jbe
lret
pop
or
daa
repnz
cmp
pop
inc
sahf
imul
stc
popf
inc
popf
mov
mov
xor
cltd
push
cmpl
push
pop
stos
cltd
add
inc
push
stos
aaa
lods
fdivs
fisubrl
loop
fwait
test
cmp
icebp
fcoms
push
mov
sbb
push
call
aam
mov
inc
test
inc
sub
lock
out
scas
pushf
das
jle
fidivl
pusha
subb
jo
pop
pop
ds
ja
xchg
xor
loope
daa
push
shrl
sub
fildll
fldenv
iret
push
jmp
cmp
shll
inc
cmp
or
xlat
mov
ret
add
jo
inc
iret
dec
imul
call
test
xchg
cmp
cmpsl
dec
adc
or
pop
notb
inc
mov
mov
imul
movsb
hlt
inc
scas
lea
push
xchg
dec
fiadds
pop
lods
aas
arpl
jb
mov
xlat
and
scas
dec
xchg
test
loope
imul
es
outsb
sti
dec
popa
sbb
fs
pop
out
fwait
mov
int3
sub
mov
mov
pop
or
bound
out
insl
inc
aas
mov
in
inc
pop
xchg
cmp
xor
add
jl
fidivrl
push
leave
lods
xor
stos
in
outsl
arpl
jbe
or
shrb
sub
mov
cmp
or
jp
mov
xlat
adc
das
xor
orb
ss
add
shrb
shl
in
insb
pusha
jle
xchg
dec
xorb
push
pop
imul
roll
out
jnp
jne
or
js
cld
cmp
rcrl
mov
rol
iret
fsubl
cs
nopl
mov
lods
xor
push
ficomps
or
inc
cmp
and
sbb
inc
cli
lahf
cltd
imulb
repnz
push
jmp
lret
clc
notb
and
jnp
cmp
pusha
cltd
dec
push
pop
cmp
jge
sbb
sarl
dec
mov
and
push
lcall
jns
cmp
mov
push
mov
call
xchg
push
lock
adc
mov
add
sarb
mov
cmp
sbb
les
gs
pop
pop
rep
xchg
xchg
mov
loope
jge
or
test
xchg
js
int3
mov
sub
outsb
jecxz
inc
mov
push
jg
xchg
call
sbb
call
outsb
dec
cmpsb
js
lods
push
jno
inc
jge
stc
ja
in
xor
lcall
mov
test
out
jae
cs
pop
push
std
fcomi
sub
bound
add
add
push
shrb
fldcw
push
aas
xchg
adc
dec
aad
adc
das
test
dec
fs
sub
xchg
cmc
pop
adc
or
and
inc
out
jge
mov
fldcw
jge
push
ljmp
lcall
jecxz
mov
sub
insl
cli
gs
imul
xor
and
pop
push
add
ret
cs
test
xchg
imul
jg
push
xor
cltd
scas
xor
sar
fdivrl
inc
cwtl
dec
ss
js
scas
mov
cltd
xor
sbb
mov
stc
push
mov
enter
or
call
jmp
test
shll
cmp
imul
add
gs
push
out
dec
cmp
jno
stos
aad
repnz
call
mov
dec
sbb
lds
repz
add
pop
arpl
and
loopne
jb
ja
cmpsl
push
int3
inc
xchg
jns
dec
stos
fdivs
pop
push
dec
cltd
inc
adc
mov
pop
in
adc
int
sub
in
sub
and
bndstx
inc
push
push
xorl
and
inc
out
call
sbb
cmp
sar
xchg
std
cwtl
out
jmp
push
cmp
mov
stc
dec
mov
dec
xchg
lcall
jno
fnsave
or
add
sbb
pop
or
xchg
and
out
jle
cmc
inc
lea
pushf
inc
xor
insb
pop
xchg
pop
div
mov
enter
mov
stos
repnz
sti
iret
gs
push
out
pusha
add
and
push
cmp
mov
stos
sub
mov
mov
ret
in
arpl
gs
mov
sbb
addr16
add
xorl
adc
xchg
cmpsb
xchg
push
sbb
jmp
hlt
leave
mov
jg
add
sarb
insb
sbb
mov
cmp
pushf
mov
hlt
dec
mov
xor
mov
out
sub
lea
out
cltd
mov
inc
imul
das
fadds
sbb
cld
sti
js
iret
aam
inc
xchg
xor
cmp
inc
in
and
cli
push
or
das
sahf
jnp
mov
lea
stos
pop
or
and
mov
push
pop
aad
cld
pushf
idivb
mov
add
js
sbb
mov
sub
pop
out
cmp
loop
mov
hlt
sbb
negl
pop
push
mov
call
loop
add
js
jg
inc
arpl
movswl
das
sbb
js
mov
das
cli
icebp
pusha
dec
les
add
popa
push
bound
adc
dec
inc
xchg
jl
js
lcall
cmpsb
test
scas
lock
xor
test
jno
sub
scas
stos
call
xchg
out
mov
mov
ret
or
jns
xchg
insb
push
add
testl
mov
fldl
jp
iret
jg
js
ret
lea
js
fstp
lea
xor
add
mov
sahf
pop
and
add
rcrb
test
daa
rcrl
push
mov
mov
mov
push
cmp
jecxz
sub
and
rcll
jo
cmp
ja,pt
lcall
arpl
repz
pop
shr
pop
or
orl
pop
add
mov
gs
and
or
loope
fcompl
outsb
or
test
cmp
push
cmp
sarb
pop
add
dec
inc
xorl
cbtw
sub
pop
mov
into
stc
pop
sti
jg
mov
rorl
fmull
mov
shrl
fdivrl
mov
jp
cmp
test
or
das
add
xchg
loope
mov
push
xchg
sub
mov
in
jl
adc
insb
and
jae
cmpsl
insb
in
ret
push
cmp
pop
pop
or
frndint
dec
mov
lods
ljmp
sbb
pop
xlat
sti
aas
pop
jbe
sti
loope
cs
sbb
pop
les
and
xchg
or
bound
sub
ja
ret
sbb
in
xchg
mov
dec
aad
cmpsb
pop
push
loopne
mov
std
into
dec
dec
es
push
sbb
ficoml
cli
jmp
aaa
ss
mov
cmpsl
mov
jb
add
daa
or
jnp
dec
inc
mul
adc
jmp
bnd
or
pusha
sbb
sbb
outsb
pushf
dec
stos
xlat
bound
or
scas
cwtl
xlat
dec
xlat
mov
jge
pop
ja
int
ret
and
adcb
dec
and
stos
jecxz
xchg
or
lahf
flds
mov
jb
jl
in
push
repz
push
mov
lret
mov
out
mov
inc
sub
lds
pop
or
imul
loop
push
out
out
xchg
mov
cmp
lods
inc
jecxz
enter
in
pop
push
xchg
popa
lea
popf
sbb
jne
push
aaa
bsf
mov
mov
pushl
and
sbb
jae
xchg
sbb
imul
pop
add
xlat
push
xchg
push
jmp
in
or
inc
arpl
in
and
sti
mov
xchg
mov
mov
lahf
and
sub
mov
cli
xchg
outsb
cli
scas
lock
roll
ds
scas
xor
pop
xchg
test
xor
adc
or
pop
dec
lret
push
fsubrp
push
fwait
cmc
outsb
mov
cmp
push
cmp
mov
dec
cs
rorb
jne
pop
fimuls
jno
insb
xor
mov
jle
jns
nop
stc
xchg
out
lea
movsl
dec
xor
cs
fs
sub
mov
aas
out
decl
cmp
pop
pop
lods
cmp
sbb
cmpsl
cmp
test
addr16
cld
or
test
and
jge
ror
mov
in
jo
inc
in
sub
ror
push
arpl
sahf
ja
in
push
or
push
roll
bound
insl
scas
push
sub
push
lea
je
jno
pop
cmp
push
adc
sbb
dec
mov
lret
fidivrs
adc
pop
rclb
sbb
or
mov
pop
inc
in
and
mov
dec
jg
jae
mov
add
les
dec
data16
mov
xorb
out
or
or
jle
jge
xchg
add
inc
or
pushf
mov
rorl
div
adcb
pop
pop
push
mov
testb
xchg
stc
or
btc
xor
xchg
fnsave
push
cld
dec
hlt
and
mov
lcall
insb
or
aaa
mov
mov
sbb
rcrb
sub
outsl
cli
jne
push
rol
adc
lock
outsb
mov
fnsave
fstpl
pop
cmpsl
xchg
lahf
popf
loope
mov
push
dec
pusha
jmp
pop
bound
clc
shld
in
popf
cltd
jns
jg
xchg
adc
xchg
repz
popf
adc
mov
repnz
sub
sbb
and
and
sbb
icebp
int
bound
sbbl
or
lahf
out
jns
pop
addr16
jnp
push
cmpsb
loope
xlat
jae
cmp
lret
xchg
loopne
add
loop
pop
leave
insl
gs
ret
mov
lahf
or
fistpl
adc
out
xchg
xor
inc
xor
mov
insl
inc
pop
cmp
imul
mov
stos
fcmovb
mov
cmc
lods
arpl
inc
xchg
pop
pop
je
mov
movsl
xlat
stos
cmpsl
int
addr16
cmp
ss
dec
cli
in
sbb
lds
dec
rol
add
xchg
dec
push
bound
adc
sarb
lds
cmpl
sbb
push
or
mov
in
mov
pop
decl
pop
aam
dec
sbb
push
das
dec
sbb
loopne
add
inc
xor
inc
loopne
negl
and
inc
push
loopne
daa
addb
hlt
outsb
popf
outsb
mov
lcall
addl
jne
sub
icebp
push
pop
mov
xor
jae
stos
int
fisubrs
int3
out
mov
lea
loopne
lds
ret
std
jbe
xchg
fidivs
inc
rcl
imul
outsl
js
mov
jle
idivb
xchg
mov
cmp
pop
imul
xchg
je
push
divb
push
iret
jmp
sbb
jle
jp
ds
adc
xchg
inc
rcr
add
xor
or
stos
mov
iret
sbb
andl
stc
push
lcall
push
mov
ret
das
xchg
mov
mov
ret
mov
dec
dec
cli
cmp
pop
cltd
lea
adc
add
adc
lret
cmpsb
filds
dec
mov
add
ja
and
sahf
xor
divb
xor
mov
mov
sbb
xor
jno
mov
adc
test
mov
loop
js
jg
inc
add
jns
fnsave
pushf
mov
test
add
test
add
cwtl
rcl
jne
aas
leave
sbb
sbb
add
jb
pop
cld
and
xorb
jge
mov
cwtl
jb
nop
push
js
stos
jle
jp
lcall
cwtl
cmpsb
test
mov
and
in
inc
clc
lret
inc
xor
je
repnz
cmp
jmp
test
cmpsl
shlb
sub
bound
dec
data16
mov
cmp
gs
loopne
mov
rol
and
sar
xchg
enter
scas
mov
pop
popa
pop
std
jo
cwtl
dec
jno
and
iret
arpl
dec
jo
jb
popf
pop
cmp
es
pusha
mulb
pop
test
dec
dec
jae
test
xor
xor
sahf
jb
xchg
shrb
cli
cwtl
mov
cmp
mov
sub
xor
mov
pop
inc
pop
out
int
addb
int
call
pop
or
inc
popa
clc
adc
inc
mov
xor
xchg
jo,pn
cmpb
xchg
je
lcall
cld
cmpsl
dec
inc
stos
sbb
jle
mov
push
insl
rorb
mov
inc
test
xlat
xchg
xorb
shrb
in
inc
int
push
xor
mov
sbb
fldenv
cli
loope
repnz
nop
ja
mov
pusha
cli
sti
jne
out
les
orb
mov
sub
mov
lret
cmp
les
dec
mov
data16
sub
cmp
jne
test
test
fwait
push
rol
enter
fimull
andl
pusha
incl
jbe
jp
movsb
cmp
cmp
in
sahf
mov
leave
mov
ja
fldt
andl
stc
xchg
fisubs
pop
xchg
andl
jns
mov
jns
sahf
inc
jmp
cmp
mov
push
aas
ss
ja
pushf
jbe
enter
jo
enter
daa
cmp
push
xchg
hlt
incl
cmp
shlb
jmp
jmp
pop
and
mov
sbb
in
push
dec
test
add
movl
sti
mov
inc
and
lods
pop
mov
inc
sub
xchg
mov
cs
jmp
in
cld
cmp
sub
fdivrl
push
out
add
lcall
in
jmp
xchg
mov
lea
pop
fstpt
mov
push
outsb
imul
xchg
insb
loop
mov
inc
sti
aad
sbb
sahf
add
or
int3
mov
shll
dec
sbb
jno
push
imul
push
jno
loop
inc
push
lock
pop
push
cmp
out
mov
mov
sbb
pop
lahf
push
cli
test
jnp
or
clc
mov
mov
fsubrs
sub
dec
adc
jmp
dec
stc
add
in
stos
lods
push
pushf
out
in
ret
lcall
subl
insl
pop
inc
or
loop
ret
sub
ret
outsl
out
jmp
fisttpll
jl
push
outsb
jne
movsl
js
pop
test
cmp
inc
mov
mulb
or
and
mov
mov
push
dec
mov
pop
jno
sub
loop
mov
sub
push
inc
mov
arpl
push
ret
rcrl
lret
xor
or
cwtl
call
sub
enter
clc
lcall
out
pop
fwait
fcomps
xchg
pop
in
mov
fcomps
stos
and
cmpsb
pop
mov
jmp
push
push
enter
dec
jbe
sbbl
insb
loope
sbb
imul
lods
xor
push
mov
xchg
movsb
call
mov
lds
xor
bound
push
inc
imul
cmp
mov
sahf
iret
cmp
leave
pop
loop
call
adc
jne
cmp
jl
inc
mov
cmpsl
imul
arpl
or
sbb
push
jns
mov
mov
push
bound
jno
popf
out
adc
dec
lock
movsb
test
cltd
mov
scas
jge
pushf
cmp
cmp
stos
popf
sahf
syscall
pusha
mov
dec
pop
sub
adc
push
pop
mov
xor
dec
jns
mov
test
dec
push
jns
mov
loope
push
cmpsl
popf
and
mov
xchg
inc
xor
sbb
pop
or
stc
cld
cmp
jnp
ret
push
and
or
and
push
and
and
movl
mov
mov
test
rol
jecxz
push
pop
rorb
iret
add
adc
leave
sub
jg
pop
in
stc
repnz
je
mov
pop
repnz
cmp
out
cltd
cmpsb
mulb
sub
aam
lcall
stc
cmp
or
in
adc
dec
pushf
into
imul
jle
xor
dec
jne
lcall
push
mov
cld
fneni(8087
jae
pop
dec
call
jl
mov
stos
arpl
mov
rolb
mov
adc
push
mov
sbb
dec
outsl
xchg
cmp
test
sbb
mov
outsl
std
gs
in
cld
mov
and
loopne
mov
pop
pop
imul
pop
fildll
movsb
rolb
pop
ss
sbb
xchg
adc
insb
dec
add
cmc
xchg
mov
ss
adc
adcb
enter
mov
scas
mov
cmp
stc
cmpb
test
fimull
sbb
jbe
jg
out
ljmp
aas
lret
stos
jno
mov
sti
int3
add
cwtl
and
cwtl
pop
push
or
mov
dec
stos
cmpsb
sbb
inc
cli
and
repz
or
mov
adc
push
pusha
imul
cmpsb
push
call
jnp
pop
mov
mov
jmp
vpord
sub
mov
mov
add
fsubr
loop
in
sahf
push
mov
inc
and
fs
cwtl
cltd
jmp
pop
popa
push
into
stos
js
mov
outsl
cmp
in
xchg
repnz
sti
inc
jg
outsl
rcrb
mov
pushf
ret
cmpsl
cmpsl
fs
sbb
xor
dec
cwtl
push
popf
popf
orb
mov
int3
add
in
movsb
jl
inc
hlt
dec
or
ds
aaa
cmpsl
inc
inc
or
les
pop
aad
call
dec
adcb
jg
pop
mov
dec
pop
fnsave
jecxz
xchg
and
popf
mov
fxam
xchg
or
dec
in
mov
sub
xor
dec
fdivrs
cli
js
adc
dec
fbstp
jg
pop
add
adc
sub
mov
dec
push
fucomi
cmc
nop
aaa
xchg
cmc
mov
pusha
mov
rcll
test
stos
inc
xor
in
mov
icebp
addr16
or
xchg
jecxz
mov
and
subl
pop
mov
aad
dec
adc
test
push
shll
push
inc
lock
lret
sbb
shrl
pusha
sbb
mov
in
jne
repnz
pop
out
and
mov
enter
xchg
aas
sbb
or
insb
fucomp
jo
jecxz
out
push
xchg
fnstenv
scas
xchg
pop
mov
jmp
push
std
cmp
sub
test
shrl
push
adc
push
test
dec
push
add
add
pop
inc
add
push
xchg
ret
inc
xor
dec
loop
aad
and
ficoms
push
mov
inc
cmp
fwait
mov
lret
dec
scas
adc
idivb
jecxz
add
jmp
cltd
jecxz
pop
mov
popa
repnz
mov
imul
test
cwtl
fistl
arpl
xchg
mov
arpl
pop
adc
add
mov
mov
xchg
call
add
ss
push
fildl
test
testb
filds
and
xchg
ljmp
mov
cmc
pop
sbb
das
add
and
icebp
xor
negl
aaa
pop
fstpt
sub
or
xchg
mul
outsb
dec
scas
in
mov
mov
jns
or
fnsave
lea
int
xchg
stc
jmp
mov
cmp
in
fdivrs
jp
push
cmpl
scas
nop
pop
hlt
pop
in
mov
xchg
pushf
dec
xor
lods
mov
fidivl
pop
movsl
std
cwtl
cmp
lahf
cli
mov
fs
ror
repz
jle
mov
pop
mov
jl
fistps
xor
jb
dec
cld
sbb
or
sub
xchg
sub
lcall
ss
jge
pusha
gs
in
mov
mov
jle
leave
jae
stos
mov
add
push
xchg
adc
out
sbb
cwtl
pop
jne
cwtl
stos
and
push
sub
xor
fcom
std
idivl
in
and
mov
sub
int3
nop
adc
cs
pop
lock
pop
repnz
jge
dec
sbb
jl
mov
jge
add
add
xor
mov
jmp
sub
fdivl
mov
jo
pop
pusha
mov
repnz
cmp
mov
xor
int
sub
xchg
loop
sahf
sub
xchg
xor
idivl
fists
stos
push
adc
dec
ffreep
adc
mov
jecxz
sbb
aad
cli
cmpsl
popf
inc
xchg
pop
cmp
out
fisttpll
mov
add
scas
repnz
add
lods
das
daa
out
add
jb
in
and
push
or
cld
add
and
stos
iret
add
and
sub
test
cmpb
jo
aad
popa
ret
in
sti
test
fdivrs
arpl
add
sbb
sbb
mov
fadd
push
xor
xchg
test
push
test
sub
push
fs
adc
xor
fisttpl
cs
in
roll
stos
clc
ret
repz
das
insb
mov
cmpsb
adc
fists
test
outsb
mov
idiv
aas
cmp
fwait
jbe
fs
lret
data16
rcr
gs
aaa
mov
mov
jg
dec
xor
fiaddl
shrl
cmp
pusha
dec
js
xor
cwtl
inc
push
rorb
mov
lods
fs
adc
xor
and
aam
fiaddl
hlt
xor
xchg
dec
dec
and
inc
mov
jle
icebp
push
fcompl
mov
scas
iret
and
bound
jnp
dec
fmuls
push
into
dec
mov
pop
aas
cmc
gs
jl
mov
mov
mov
fmull
mov
or
xchg
and
movsb
cli
aas
push
imul
ds
dec
xlat
into
dec
call
ficoms
xchg
pop
gs
adc
lret
push
or
add
enter
lods
mov
adc
loope
push
leave
dec
roll
sbb
mov
push
add
outsl
mov
in
movsl
cmp
mov
sbb
jbe
aaa
leave
mov
lds
or
mov
lods
movsb
push
idivb
and
xorb
xor
fidivrs
or
orl
fstps
mov
jo
adc
xchg
outsl
sbb
and
fucomp
lea
mov
sbb
inc
mov
movsb
and
xor
test
stos
aam
out
push
xchg
xchg
xchg
push
inc
sub
fwait
xchg
sahf
and
popf
pop
cmp
roll
in
inc
notl
xor
xlat
cmp
nop
or
shrl
ss
inc
nop
add
jne
fdivrs
pusha
dec
pop
pop
xchg
xchg
movsb
pop
sub
sbb
aaa
sub
pusha
sbb
std
call
ficompl
stos
in
mov
in
lahf
ffreep
std
xlat
fs
push
push
jl
pop
into
push
push
aad
inc
repz
adc
fdivrl
fnstcw
mov
es
ds
add
push
stos
mov
add
popa
xchg
pop
hlt
popf
pop
cmpsb
inc
sarb
cmp
and
sbb
das
mov
add
ret
jecxz
repz
in
lods
shlb
cld
mov
sub
push
mov
or
psllw
dec
mov
ljmp
scas
movsl
jnp
ljmp
lret
popf
jno,pn
lahf
dec
popa
push
sub
add
sub
lcall
jl
add
xchg
test
sahf
mov
push
lcallw
clc
dec
mov
push
add
mov
loop
jl
das
xor
ret
std
cli
dec
xlat
outsb
bound
testl
xor
jbe
shr
daa
push
gs
lret
ja
xchg
push
scas
push
pop
pop
cmp
ss
movsl
in
jae
cltd
pop
inc
xor
lret
or
cmp
inc
adc
push
lea
xor
mov
cmpsl
shlb
mov
popa
sahf
hlt
dec
mov
fnstenv
cmp
test
sbb
or
jno
push
pop
fistps
ficoms
js
jle
repz
cwtl
cmp
jmp
or
addr16
rol
shl
jns
or
movsb
sub
test
jnp
lret
add
sahf
and
cmpsb
lahf
test
aam
sbb
test
mov
pop
push
dec
push
adc
push
je
dec
or
mov
test
lcall
pushf
cmpsl
sub
dec
test
jne
ljmp
pop
fistpl
pop
mov
pop
fdivs
push
mov
repz
call
mov
int
out
jae
add
push
fs
repz
cwtl
mov
adc
loopne
lret
jp
or
or
jge
lahf
fsubrs
adc
jg
shlb
push
mov
cmp
int
movsl
push
or
lcall
pop
push
fsubl
in
or
dec
gs
pop
xor
cs
sub
ljmp
das
cli
xchg
mov
inc
fiadds
cli
shl
sar
mov
sub
ja
not
test
scas
dec
inc
adc
add
out
sarb
mov
inc
mov
or
or
scas
mov
add
das
push
shl
bswap
inc
test
lods
lcall
daa
aad
push
fidivs
cmp
cmp
out
frstor
xchg
mov
bound
pop
scas
imulb
mov
sub
jne
popf
sub
push
inc
sbb
pop
sti
mov
dec
sub
mov
mov
inc
int3
cwtl
mov
jbe
xchg
mov
push
fdivp
xchg
xchg
enter
ret
push
sti
mov
fcoml
negl
call
fs
aas
push
fs
push
xchg
cmc
cmp
pop
push
cmp
data16
xor
xchg
adc
popa
adc
dec
add
mov
in
int3
mov
pop
mov
cmc
cltd
sub
popf
mov
dec
push
cmp
ljmp
mov
mov
and
mov
enter
jecxz
sti
test
add
shrl
pop
ret
and
outsl
cmp
enter
lea
inc
mov
jb
pop
les
imul
xor
mov
jo
rolb
mov
cmp
sub
push
inc
orl
pushf
or
xor
jg
adc
sahf
aaa
mov
xor
enter
repz
and
sub
pop
cmc
mov
pop
imul
dec
stos
jno
jae
popf
mov
jo
add
test
inc
xorps
sbb
add
rolb
xchg
and
xor
mov
mov
hlt
mov
xlat
sbb
pop
mov
dec
cmp
dec
repz
int
dec
outsl
sbb
xor
insl
sub
hlt
pusha
pop
lret
rclb
jmp
xchg
pop
adc
fwait
cmp
sbb
push
push
push
mov
popf
push
pop
scas
ljmp
int
pop
jle
or
xchg
and
sbb
mov
inc
icebp
rcrb
or
push
ss
call
ja
sbb
or
fdivrs
mov
in
imul
lret
or
inc
lahf
dec
sub
cmpsl
inc
mov
jo
cmp
jo
or
inc
xchg
cmp
ja
mov
cwtl
imul
pop
mov
mov
out
loope
or
xchg
mov
cmp
shll
mov
cmc
pusha
lds
dec
out
orl
fdivrs
or
cmpsl
xor
adc
cmp
jne
test
popf
loope
daa
divb
inc
and
dec
test
js
adc
dec
inc
incl
daa
shr
test
or
mov
cmc
or
ret
jp
lock
outsb
daa
nop
pop
cmovs
sbb
mov
sub
test
ss
dec
cmpsb
push
stos
ja
aaa
inc
inc
mov
insl
test
mov
add
mov
imul
xchg
dec
pop
adc
xor
mov
xchg
aad
sbb
xchg
aas
pop
xor
add
ljmp
and
push
outsl
shll
loope
data16
inc
xchg
push
xor
insl
jg
mov
sub
add
push
push
pop
lcall
je
out
rcl
or
cld
push
adc
or
xchg
fwait
sti
xchg
mov
push
inc
pop
adc
out
adc
add
aas
inc
jbe
outsb
fimuls
xor
mov
jecxz
adcl
cmp
hlt
xor
jb
lahf
call
jnp
or
and
push
xchg
popa
inc
cmp
scas
cmp
clc
mov
ds
push
flds
popa
jl
shr
cmc
jns
dec
sub
nop
jecxz
and
fbld
lds
pop
es
pop
ja
cltd
adc
jge
add
in
sbb
mov
das
leave
sbb
imul
fcomip
mov
add
mov
push
sbbl
mov
mov
cli
test
data16
fistl
aam
mov
jmp
hlt
repz
jb
adc
xchg
lea
pop
in
into
pmaxsw
int
aaa
jnp
shl
push
scas
stc
popl
mov
inc
lds
jnp
cwtl
rcrb
fstl
test
cmpsb
lret
add
mov
lahf
adcl
faddl
sbb
xor
data16
notl
jp
adc
jmp
dec
xchg
pop
frstor
add
cld
lret
fdivl
div
mov
push
ljmp
fsubrp
lret
jno
js
adc
repz
out
fists
mov
cli
test
mov
inc
xchg
mov
jecxz
insb
call
mov
sub
jmp
mov
outsb
sbb
add
inc
sbbb
dec
and
dec
call
ds
sub
push
adc
and
mov
mov
out
clc
ljmp
jnp
mov
pushf
inc
xor
sub
sub
xchg
xor
sahf
xor
stos
adc
inc
xchg
xor
xchg
xor
imul
fxch
inc
xchg
call
fwait
mov
sbb
int
icebp
push
push
adc
or
aad
push
lock
lods
jbe
cmc
stc
pop
test
sahf
mov
sub
stos
jmp
icebp
flds
icebp
je
xchg
mov
outsl
fdivrl
pop
imul
fidivrl
mov
push
mov
jnp
ret
aam
or
and
fwait
push
xchg
nop
fucom
push
jo
pop
into
mov
push
into
xchg
outsl
mov
js
mov
ljmp
out
jmp
xor
ljmp
lcall
mov
mov
lods
dec
leave
outsb
sbb
or
push
mov
cmp
jg
in
cmpsb
insb
add
push
call
test
mov
jnp
cld
mov
dec
lcall
and
add
loope
loope
mov
mov
sbb
enter
decb
outsb
shlb
jp
xchg
jbe
xchg
leave
pop
fisttpl
jbe
jmp
mov
fsub
mov
fidivl
inc
ljmp
sbb
in
dec
pop
in
lods
dec
mov
arpl
and
cmp
arpl
out
mov
push
sarb
push
aaa
and
mov
lcall
sbb
jle
add
xchg
aad
pop
mov
or
shrl
dec
jae
mov
dec
push
sbb
addb
popa
jmp
fucomi
lods
or
insl
and
adc
test
pop
movsb
and
xlat
rorb
mov
shl
stc
out
pop
nop
add
inc
cs
xchg
int3
jmp
pop
fcoms
out
imul
mov
push
mov
jle
push
lahf
shll
and
jmp
fsubl
test
shrb
jno
or
or
sbb
adc
push
stc
pop
mov
lods
mov
or
fistps
xor
test
xchg
test
int3
int
sbb
dec
and
or
lret
or
sub
xchg
sbb
gs
push
sbb
cwtl
dec
jmp
pop
adc
jne
xchg
mov
sub
out
scas
out
or
cmp
enter
pop
scas
in
gs
mov
lcall
pop
push
test
pop
repz
jg
aad
and
jmp
mov
sti
sysret
mov
or
lret
cmp
sub
dec
cwtl
or
loop
sbb
push
hlt
and
imul
xchg
adc
cmp
iret
jmp
dec
xor
out
lds
lahf
ret
shr
stos
fcompl
xchg
fiaddl
adc
and
mov
push
jno
aas
enter
cs
fcmovne
mov
adc
add
pop
wrmsr
cmpsb
xlat
cmpsb
push
lock
cmp
push
and
stos
out
pushf
into
insb
pop
cltd
mov
cli
aad
add
scas
mov
mov
add
mov
push
gs
or
ret
cmp
repz
ss
arpl
mov
mov
clc
mov
cmovle
aad
xchg
adc
and
xchg
xchg
mov
jo
aad
dec
outsl
fldcw
mov
xor
sub
adc
clc
fldenv
cmp
sbbl
jl
xchg
sti
sti
add
dec
das
fsubrs
repz
lret
sti
pop
movb
in
sbb
xlat
jle
jo
enter
jo
push
mov
jmp
loop
or
imul
adc
inc
imul
lods
sub
shrl
movb
pop
mov
das
cmpsb
gs
popf
push
add
orl
jne
mov
testb
aad
push
sbb
xor
hlt
fdivrp
jecxz
jl
mov
gs
mov
dec
push
sub
outsb
lahf
cmc
test
push
push
cmp
xlat
mov
inc
inc
les
shrl
lret
jge
jns
pop
repz
jno
sahf
mov
mov
cwtl
push
fnsave
enter
push
jle
push
clc
popf
or
jg
push
ds
ror
adc
or
push
or
mov
stc
fildl
pop
out
cmp
cmpsb
enter
xorb
pop
cmp
xchg
pusha
in
in
pop
pop
mov
repz
roll
repz
xchg
lods
pop
test
jns
loopne
mov
or
mov
mov
mov
pop
cmp
sahf
pop
pop
fwait
stos
mov
mov
inc
js
push
mov
pop
scas
ret
cpuid
mov
aad
es
fstl
js
jl
stc
or
jns
mov
adc
ja
test
xlat
mov
cmpsb
les
in
ljmp
movsb
or
addr16
inc
daa
pop
in
dec
jle
pop
xor
in
add
lahf
idivb
pusha
mov
lea
push
or
xchg
sbb
lods
flds
inc
sbb
xchg
push
repz
mov
iret
mov
push
in
fcmovbe
jg
xor
xchg
mov
dec
xchg
cmpsb
dec
jo
aaa
dec
mov
or
lret
pop
mov
imul
xchg
pop
aam
lock
push
jae
xor
sbb
add
in
sbb
push
movsl
outsl
scas
mov
add
xor
pushf
sub
sbb
push
sbb
sbb
bound
mov
jmp
pop
fcomps
int3
push
cmp
test
cmp
int3
stc
jg
jmp
push
imulb
xor
in
jne
cmp
jns
outsb
jmp
jmp
adc
out
and
hlt
sbb
push
sbb
in
out
arpl
xor
or
inc
inc
ss
iret
pop
push
iret
and
les
pop
shll
sub
cmp
inc
and
scas
nop
xchg
data16
push
flds
in
and
or
add
mov
add
push
clc
mov
imul
xchg
scas
push
popf
pop
mov
test
push
insb
mov
and
xor
jno
out
fsubs
sub
sbb
fmuls
es
xor
dec
or
jo
lds
mov
sahf
inc
xor
aaa
sbb
loope
sbb
mov
frstor
sbb
lods
cmpsl
repz
je
pop
lock
shlb
mov
repz
dec
mov
lea
adc
enter
adc
sub
testb
mov
iret
out
sbb
in
adc
lret
dec
ficoml
les
outsb
lods
fcompl
sub
les
sti
test
fiaddl
jle
sbb
ret
add
and
mov
inc
push
call
gs
sbb
ret
push
sti
lcall
pop
out
insl
push
enter
push
mov
and
roll
out
rcrl
dec
lret
mov
xchg
fsts
pop
out
lds
jecxz
jne
add
stos
push
inc
jle
push
rclb
sbb
fcompl
inc
dec
cmp
mov
das
sti
hlt
and
add
jg
jns
int
inc
dec
hlt
cmc
xchg
mov
xor
push
or
ret
xor
pop
jmp
outsl
popa
sbb
rcr
sahf
in
ljmp
jne
mov
inc
lcall
shr
aas
int3
mov
ja
outsl
cmc
pop
lcall
out
testl
pop
cmc
sub
test
lds
das
jo
hlt
mov
mov
jge
movsb
mov
imul
or
xchg
pop
lahf
dec
iret
dec
mov
adc
lods
push
hlt
outsl
lods
and
dec
jnp
cmpsb
add
sahf
mov
gs
faddl
xor
pushw
jmp
push
push
stc
sub
jmp
add
adc
aas
mov
mov
xor
mov
jne
add
xlat
stos
inc
mov
adc
enter
lods
mov
pop
int
sbb
inc
cmp
add
pop
rorl
scas
push
xor
repnz
push
pop
sbb
xor
jle
gs
push
jg
adc
pushf
test
mov
insb
shr
add
repz
shrb
push
add
add
rolb
add
inc
mov
dec
adc
rcll
jle
adc
repnz
mov
movaps
int3
in
mov
ja
pusha
int
add
push
xchg
mov
mov
sbb
or
inc
push
movsb
aad
aaa
xlat
mov
and
fsubrs
ficoms
mov
xchg
mov
pop
insb
sub
xor
scas
test
popa
fdivrs
loop
mov
mov
ja
adc
jno
push
add
arpl
popa
push
imul
pcmpeqd
pop
fildl
jg
push
jp
mov
out
js
pop
lahf
cmp
push
inc
shl
cwtl
or
aam
insl
push
loope
popa
jl
subb
add
rcrb
out
dec
mov
cmpsl
lock
adc
xor
xchg
sahf
inc
add
lahf
ljmp
jmp
cmpb
out
fwait
fwait
scas
out
fadd
ds
in
adc
push
ficoml
test
stc
push
outsb
ror
cmc
sub
or
jns
js
rolb
aaa
aam
sub
clc
xchg
inc
xchg
in
test
lods
mov
nop
mov
mov
mov
push
popa
inc
pop
iret
xchg
push
and
cmp
xor
mov
jle
add
mov
in
std
ljmp
add
xor
mov
in
mov
adc
sbb
jge
ds
fldcw
cmp
pop
aad
xchg
xchg
loopne
cmc
and
mov
loop
sub
mov
in
dec
int3
jge
jnp
and
std
out
pop
aaa
out
xor
push
jno
test
cmp
adc
lods
adc
mov
les
cltd
xchg
into
ffree
aad
iret
sub
and
stos
call
test
popf
hlt
adc
sub
cmpsl
cs
and
push
adc
cmp
xor
scas
sub
push
pop
adc
fsubrl
and
push
cmp
das
lahf
call
fnsave
popa
jo
insl
fmuls
out
mov
sbb
rorb
sbb
and
xchg
imul
addb
xor
mov
sub
mov
lods
sub
imul
jbe
sbb
in
add
iret
fidivrs
daa
xchg
add
dec
pop
stos
jns
jne
push
lea
sbb
je
movsl
ret
mov
or
call
test
pop
jns
pop
lret
movsl
xchg
mov
push
inc
push
ds
sub
add
xor
xchg
insl
lods
popa
test
sub
sahf
bound
push
jg
cmp
xchg
or
fcoms
cmpsb
bound
shrl
mov
mov
and
xor
or
add
jne
xchg
jne
ret
jns
lret
sub
xchg
out
inc
push
gs
cmpsl
aam
jnp
lcall
inc
ja
xor
jbe
test
cmp
add
aad
mov
dec
sbb
push
mov
fistpl
and
xchg
xor
pop
repz
ret
mov
dec
ficoml
icebp
in
jno
xchg
test
in
pusha
idivl
mov
mov
aas
pop
adc
fiadds
push
in
cltd
mov
push
sbb
push
insl
xor
insl
and
jle
loopne
lcall
test
mov
das
xchg
push
loope
ss
or
jo
jno
mov
repz
pop
fistl
xor
lock
lods
push
imul
cmp
outsl
dec
sti
jbe
out
jg
imul
adc
lock
push
mov
and
mov
addb
sbb
inc
faddl
lea
shll
test
mov
in
pop
cli
xorb
push
test
jp
mov
mov
cmp
lcall
jns
xor
sbb
sub
cmpl
mov
sbb
insb
mov
scas
dec
jb
shrb
jmp
mov
jecxz
cmp
xchg
insl
insl
sub
xor
mov
ret
sub
loopne
sub
cmp
pusha
cmp
jns
fstps
call
sbb
fcmove
add
repnz
sbb
mov
dec
iret
inc
push
jne
dec
cwtl
lret
movsl
shl
jmp
and
outsb
ljmp
and
push
sbb
mov
or
xor
push
pushf
and
bound
mov
cmp
pusha
dec
lds
aaa
mov
mov
mov
sub
rcll
adc
dec
mov
dec
addr16
lret
shl
jp
and
inc
stos
dec
push
lcallw
mov
pop
jle
push
mov
scas
pop
test
pop
dec
mov
sbb
mov
and
out
addr16
out
rolb
ret
adc
cwtl
lcall
mov
imul
aas
or
and
cmp
gs
lret
mov
mov
add
icebp
xchg
dec
push
push
mov
sbb
lods
mov
add
inc
cmp
xlat
in
fprem
test
mov
movl
push
outsl
repnz
das
pop
push
fsubrp
xor
pop
adc
and
arpl
xchg
fidivs
mov
xchg
pop
movsl
mov
sbb
jp
divb
sbb
rdtsc
xchg
push
push
out
xchg
cltd
cmp
inc
outsl
xor
loop
sub
sub
rorb
fsubrs
dec
sbb
push
cltd
mov
ljmp
mov
sbb
fldl
lcall
mov
ret
cltd
stc
test
int
jbe
pop
js
ret
mov
push
jmp
sbb
repz
lret
and
xchg
inc
jne
in
jns
lahf
mov
out
test
sbb
lahf
inc
xchg
sub
jno
and
pushl
sub
adc
clc
call
push
shlb
sahf
xor
stc
sub
mov
sub
inc
mov
xor
dec
scas
cmp
test
enter
lods
pop
lahf
push
cmp
nop
pop
sbb
aad
das
cltd
ret
xchg
mov
clc
out
jnp
adc
push
and
in
push
aam
and
in
call
insl
in
imul
jbe
lahf
lods
daa
pop
pop
loop
jae
jecxz
dec
jg
and
dec
adc
lcall
lods
dec
mov
cmpsb
lcall
ss
cmp
cwtl
out
cli
mov
call
ret
out
xchg
jecxz
adc
sti
hlt
clc
aaa
dec
sbb
jae
imul
rcll
cltd
subb
aad
subl
insl
sub
pushl
mov
pop
test
or
ror
mov
sub
sub
gs
popa
outsb
js
jg
mov
scas
cmp
sbb
lahf
jmp
push
sbb
loop
xchg
or
xor
cmpsb
pop
and
sub
sti
xchg
and
jnp
pop
lods
mov
js
push
out
iret
lcall
inc
mov
ret
out
or
out
xor
in
psllq
std
sub
cs
mov
fs
xor
xchg
lahf
add
xchg
repz
dec
inc
push
cmpsb
and
sub
xor
and
je,pt
mov
and
xor
dec
pop
dec
dec
cmp
xchg
loope
lea
inc
outsl
push
lret
std
adcl
outsl
sbb
inc
outsb
sahf
push
incb
cli
mov
and
push
cmp
mov
call
imul
sub
or
test
dec
cli
jne
push
in
test
mov
hlt
jg
push
andb
mov
and
dec
xor
sub
jle
ljmp
cmpsb
pop
pop
imul
popa
adc
sub
mov
fsubs
or
xlat
and
cmp
mov
inc
inc
addl
jo
inc
push
es
cmpsb
out
lret
pop
sub
inc
outsl
add
clc
or
addr16
or
adc
dec
outsb
and
push
out
lock
int3
outsl
daa
in
add
mov
nop
dec
shll
dec
push
lods
iret
es
xor
adc
and
daa
ret
das
std
cmp
jmp
fsubl
mov
repz
lahf
add
cmp
lods
xor
clc
jmp
push
into
jne
cli
or
cld
nop
pop
sbb
in
xchg
es
xchg
mov
into
jnp
push
mov
in
inc
pop
dec
jbe
lcall
ret
insb
ret
jno
sub
cmp
pop
mov
cmp
mov
inc
push
adc
pop
shrl
dec
xlat
push
sahf
std
outsb
adc
pushf
movsb
nop
adc
jae
aad
adcl
ficoml
add
xchg
ficoms
sub
scas
mov
pop
aas
jno
pop
xchg
cli
fisubs
mov
popa
shl
mov
and
or
inc
or
std
gs
sar
std
mov
mov
arpl
add
movsl
cmp
push
and
jp
jne
mov
adc
dec
pop
fstp
pop
push
xchg
out
rorb
mov
arpl
xchg
inc
push
stos
add
push
pop
into
mov
xor
jno
out
push
outsl
fildll
and
gs
adc
pop
fildll
scas
inc
cmpsl
hlt
std
lds
mov
movsl
sarb
scas
sti
add
jecxz
jp
mov
pusha
es
dec
test
daa
pop
sbb
mulb
aas
xchg
adc
jb
adc
mov
sub
mov
sub
icebp
and
xchg
movsl
pop
jecxz
add
push
mov
dec
and
shrb
or
xchg
popa
mov
sub
cmp
incb
push
ja
pop
push
stc
ret
mov
add
push
or
dec
jns
mov
lret
mov
popf
push
lds
icebp
push
pop
inc
sahf
fsubrl
ds
xchg
jp
pop
sbb
movsb
jne
fimuls
jb
jecxz
enter
in
push
stc
lret
repnz
out
out
fiadds
xor
aaa
addr16
mov
xlat
fldl
lods
inc
xchg
add
or
and
aas
pop
inc
sahf
sbb
arpl
stc
mov
sbb
sub
mov
dec
sbb
pushf
das
pusha
adc
ja
aad
jge
aas
cmp
mov
mov
or
lahf
push
xor
lods
mov
ds
lods
mov
jae
leave
popf
jecxz
sti
test
insb
sbb
or
pop
add
cmpsb
fidivrs
pop
gs
rcll
movsl
jl
nop
negl
xchg
fidivrs
push
andb
push
imul
xchg
ficompl
cmp
ficoml
dec
sub
daa
adc
dec
push
add
pushf
and
push
and
movsb
int3
mov
mull
push
sbbl
cmp
xchg
into
inc
mov
jecxz
push
inc
jle
push
gs
imul
jg
fnsave
pop
and
jbe
add
lock
push
xorb
in
mov
cmp
repz
xchg
cmp
lods
jae
or
adc
xchg
push
test
stc
jmp
push
jbe
dec
fbstp
fbstp
jl
lods
adc
jo
push
lock
scas
mov
cmp
pop
aad
pop
push
mov
push
sbb
mov
adc
fwait
out
fimull
xor
push
inc
out
mov
pop
adc
fmuls
je
stos
and
adc
dec
add
out
sub
loop
stc
xor
mov
pop
cwtl
rcl
adc
mov
and
je
punpckhwd
sysret
mov
or
stos
inc
arpl
push
and
mov
adc
inc
mov
inc
mov
in
out
xchg
mov
hlt
dec
inc
mov
cs
inc
inc
stos
mov
sahf
test
sub
lock
xchg
adc
fistpll
dec
xor
sub
fs
jnp
inc
scas
mov
add
jb
dec
mov
lds
pop
xlat
fsubl
mov
inc
subb
cmp
jmp
mov
pop
stos
inc
mov
pop
xchg
lods
and
cmpl
add
adc
push
xchg
mov
add
push
cmp
mov
adc
fisubrs
dec
cltd
add
es
cmp
scas
push
daa
bound
fwait
mov
out
ret
xlat
std
lea
aam
pop
sub
cwtl
dec
std
movsl
cmp
jge
aas
pop
jecxz
cmp
pop
add
rolb
notb
inc
enter
push
sub
mov
sub
cmp
mov
call
push
adc
xchg
cld
xor
xorb
mov
mov
lods
and
mov
jne
out
push
xor
repnz
gs
inc
movsl
stos
clc
mov
shrl
and
loopne
ret
dec
out
mov
std
jno
pop
add
push
sahf
std
jno
inc
in
cs
in
sbbl
outsl
mov
movsl
es
add
loope
loope
ret
test
inc
je
int3
rolb
inc
les
sbb
jmp
cmp
mov
hlt
mov
imul
adc
std
icebp
or
mov
aad
fistpll
cmp
in
stos
movsl
lret
test
jno
iret
divl
loope
or
jmp
mov
sbb
bnd
push
outsl
and
rcll
out
mov
js
mov
xchg
jo
test
fs
mov
pop
aaa
das
mov
mov
sbb
aaa
mov
inc
ret
shlb
mov
loopne
pop
mov
fsubl
bound
xchg
das
jnp
nop
out
xor
cmpsb
sub
lock
sti
xor
fistl
add
lods
lods
sti
dec
mov
hlt
mov
js,pn
mov
lock
mov
divb
mov
mov
jno
shlb
enter
mov
push
inc
jno
cli
psubd
inc
fisttpl
mov
dec
push
pop
arpl
inc
push
pop
movsb
frstor
xlat
pop
inc
mov
push
ret
bound
push
loopne
in
mov
repz
pop
inc
sbb
jne
push
cmp
out
xchg
mov
js
xor
stos
jo
sbb
shlb
adc
sub
leave
adc
jae
sbb
repnz
cmpsl
mov
adc
dec
and
sti
aaa
cwtl
fcompl
enter
pop
xchg
in
sub
daa
movsl
in
pop
pop
sti
out
test
cmp
mov
jle
pushf
fldcw
dec
pop
fstpt
aam
add
js
nop
mov
xor
cmc
jne
insb
fstpt
sub
dec
inc
sub
sub
mov
std
outsb
jb
adc
outsb
mov
mov
sub
sahf
jecxz
and
lcall
mov
dec
das
xchg
lret
jbe
push
stos
sar
in
das
data16
xor
int
scas
loopne
jl
or
mov
push
es
loope
mov
fistpl
call
push
push
cmpsl
mov
and
xchg
mov
add
push
rorl
lahf
mov
push
xchg
mov
cmpsl
inc
fldenv
cmpl
xchg
lcall
in
mov
jo
dec
mov
pop
and
mov
rorl
icebp
and
sub
mov
insl
fildll
sub
or
ds
add
push
lock
xor
xchg
push
scas
es
testb
xlat
adc
and
add
mov
aaa
cmpsl
fdivrs
inc
das
sbb
push
mov
sbb
cmp
fs
cmp
leave
addr16
pop
je
lock
repnz
push
negl
inc
cmp
mov
rcr
mov
sahf
xor
andl
jno
test
pop
ja
mov
xor
das
pusha
mov
mov
push
popa
jp
rol
jecxz
fs
cli
push
mov
and
hlt
in
fdiv
push
mov
push
xchg
out
add
call
pop
in
jge
ss
std
jbe
pusha
jl
outsl
insb
lods
loope
xor
imul
cltd
and
pop
es
fsubrs
xor
mov
aam
xchg
insb
push
push
and
add
rol
rcl
xor
stos
and
roll
push
and
jmp
enter
mov
inc
jnp
push
lcall
xchg
loop
pushf
stos
pop
ss
fldl
fadds
xor
dec
or
fcoms
test
imul
pop
or
or
jmp
add
psrlq
mov
dec
push
rclb
xor
pop
fwait
adc
jg
lahf
mov
sub
mov
mov
in
add
mov
pusha
sub
and
scas
aam
insl
mov
sub
pop
and
insb
or
mov
repz
lret
pop
dec
testl
notl
pushf
xchg
push
outsl
mov
subb
test
repnz
shl
popf
loopne
out
ds
ret
ret
mov
xor
or
imul
jne
mov
and
hlt
and
mov
jg
xchg
enter
gs
inc
movsb
jg
movb
je
mov
mov
fidivrs
in
dec
cltd
cld
push
and
adc
pop
call
push
and
mov
mul
jmp
stc
repz
rcrl
jp
or
mov
fistl
pop
fs
fcoml
adc
in
jle
cmp
xorl
pop
sub
jnp
push
scas
push
sub
or
adc
sahf
out
mull
dec
test
cmp
ficompl
fnsave
xchg
push
cmpsl
dec
pop
mov
lar
call
add
rclb
xor
out
pop
aas
cmpsb
xchg
sbb
lock
adc
jb
push
cwtl
mov
pop
mov
xchg
mov
jmp
idiv
fsubrl
fwait
adc
mov
jl
ret
ds
mov
mov
inc
sub
imul
aas
mov
mov
add
xor
pop
xchg
jge
inc
add
and
sbb
lods
cs
jl
mov
and
push
jg
lahf
jo
dec
pop
sub
iret
dec
xor
push
xchg
xlat
adc
mov
ret
and
loop
mov
xor
jbe,pn
idivb
in
aam
stos
fmull
movsb
popa
addb
xchg
inc
fcompl
fs
push
clc
je
jns
cmp
inc
fsts
jno
lock
scas
mov
lea
outsl
sarl
stc
adc
cmp
data16
je
mov
ljmp
ljmp
cmp
rcrb
and
fadds
cmpsl
push
and
bound
xor
incb
cmp
jb
sbbb
cmp
cmp
add
lahf
adc
jecxz
in
daa
mov
cmc
ljmp
enter
jne
or
xor
mov
iret
fsubrs
dec
jmp
or
rolb
mov
lods
lds
and
xor
add
mov
or
jne
pop
shl
fisttps
cwtl
bnd
test
jnp
hlt
es
test
into
add
push
mov
adc
xor
hlt
outsl
shll
fsin
repnz
fs
rorl
lock
push
jno
sar
push
adc
loope
inc
xor
or
lahf
test
and
push
jg
mov
mov
add
mov
aad
ljmp
or
shlb
loope
sbb
xchg
push
insl
sub
or
xlat
inc
scas
adc
es
sti
sbb
aas
xchg
cs
sub
jmp
add
aam
push
inc
stos
pop
sbbb
in
fsts
jnp
insb
push
shrb
in
pushf
movsl
popa
hlt
mov
das
cmpsl
test
xchg
ret
push
test
loop
cmp
sub
jno
loope
push
mov
xor
cmpsl
cmp
jg
in
xchg
jo
and
cmp
or
sub
cmp
cmp
fnstcw
adc
dec
fisttpl
adc
jg
adc
push
jo
mov
aaa
jl
ret
aam
enter
lds
dec
out
je
imul
lcall
sub
dec
jae
enter
cwtl
push
out
clc
pop
testl
sub
pop
out
sub
or
scas
sbb
loop
fs
leave
addb
orl
xor
or
push
push
dec
fildll
inc
sahf
rcl
or
adc
outsl
mov
rcl
scas
mov
rolb
xchg
rcll
jae
inc
test
xor
call
fcmovu
mov
mov
dec
xchg
jo
icebp
arpl
arpl
add
xor
xchg
pushf
mov
sbb
mov
push
out
pushf
push
mov
ret
daa
pop
lret
imulb
sbb
les
mov
cwtl
imul
mov
ret
test
icebp
mov
cli
popa
cmc
mov
mov
add
adc
sub
int
push
repz
divb
stos
push
mov
cmpsl
inc
inc
sti
mov
sub
inc
push
add
cmp
pop
fstl
inc
cmpl
jno
or
cmpsb
out
cmpsb
cld
inc
jmp
mov
and
xchg
mov
jo
clc
push
or
jl
dec
ds
jecxz
jmp
inc
cmp
mov
inc
loop
lret
inc
popa
data16
jbe
and
or
fsts
into
or
jnp
stc
sbb
add
iret
out
or
add
push
stc
or
xchg
fistpl
call
nop
arpl
inc
inc
fs
or
dec
stos
scas
xor
mov
out
movsl
or
add
and
lds
push
sub
stc
mul
mov
push
ss
or
sub
jp
pop
add
and
out
mov
lds
movsb
jmp
stc
bound
push
inc
jnp
out
cmp
in
mov
sbb
xor
add
loop
jg
aam
lcall
sbbl
jno
subb
das
ja
test
lods
and
lods
or
inc
xor
add
or
pop
fcomps
and
pop
cmp
sbb
lret
mov
sbb
ffreep
inc
rcrb
daa
iret
or
cmp
rep
outsb
insb
daa
movsb
adc
nop
fucom
outsb
das
int3
popf
aas
sub
jecxz
out
cld
add
lahf
adc
rcll
loopne
dec
inc
cmpsb
jl
pushf
jp
pusha
lcall
and
loopne
gs
fdivr
mov
push
sub
pop
divl
cli
loop
lahf
xchg
xchg
xchg
outsl
lahf
fidivl
xchg
sbb
loopne
out
pop
adc
sub
fwait
aas
ret
popf
adc
sahf
fiaddl
sbbw
dec
icebp
hlt
aas
xchg
aas
outsb
shrb
sub
loop
and
stc
pop
mov
jecxz
add
adc
lds
pop
jp
roll
push
sub
lea
push
push
mov
cli
and
jg
rcr
pop
jl
arpl
mov
imul
pop
daa
xchg
loop
jno
shrb
pop
pop
insl
add
xor
lock
daa
negb
sub
fldl
cmp
out
addr16
fmull
outsl
mov
mov
dec
les
std
adc
lea
ret
sbb
sbb
std
lahf
pop
or
push
or
sarb
sub
ja
aaa
cltd
mov
push
mov
inc
lret
xor
aaa
mov
pop
in
jbe
inc
mov
pop
dec
xchg
cmp
fldl2t
fistpl
lock
xchg
aam
ja
insl
mov
jnp
or
scas
cli
cmc
inc
sub
xchg
movsb
aad
les
test
sub
push
inc
pusha
imul
cmp
mov
jmp
adc
jp
jnp
test
mov
and
jecxz
sar
mov
stos
pop
xor
push
inc
shrb
lock
incl
xor
dec
or
mov
xchg
lods
insb
inc
sub
jp
jecxz
xor
push
push
fisubrs
mov
cmp
add
fldenv
mov
or
fmull
mov
jp
testb
jle
add
sbb
loopne
pop
adc
popf
es
mov
test
cmp
aam
mov
lds
ret
std
call
mov
ja
icebp
or
das
adc
loope
add
scas
mov
mov
shlb
cmp
rorb
inc
std
ja
cmc
cmp
jmp
movsb
sub
clc
aad
imulb
jnp
ljmp
xchg
mov
or
sub
leave
movsb
pusha
dec
xchg
or
loope
adc
mov
sub
std
test
sbb
sbb
inc
cmp
fs
mov
mov
ret
pop
dec
dec
xor
cmpsb
pop
nop
pop
xchg
rolb
or
rcrb
popl
mov
inc
dec
push
lods
xchg
loop
imul
xor
inc
js
fs
ljmp
pop
inc
lock
cltd
ljmp
or
cwtl
cmp
stc
outsb
and
clc
popa
pop
popl
mov
inc
sarl
dec
sub
mov
sbb
shll
pop
xor
loope
out
sub
jno
ja
mov
xorb
cmpsb
popf
rorb
int3
cmp
loop
shrl
imul
inc
and
pop
sbb
add
mov
out
lds
inc
repz
and
mov
cmp
insb
test
jecxz
and
dec
in
mov
loop
xchg
stos
sub
in
mov
sub
imul
repnz
jecxz
jg
jmp
pop
notb
enter
flds
pop
add
sub
or
sbb
pop
sbb
xlat
cmp
movsb
mov
pop
dec
and
arpl
insb
mov
mov
cltd
xchg
sbbb
pop
lock
sub
mov
lcall
xchg
lods
lds
test
dec
test
sbb
cli
stc
cwtl
stos
adcl
sbb
push
pop
test
into
mov
shrb
inc
push
mov
in
ds
in
sub
add
nop
insl
aad
add
lock
jbe
shr
lds
cmpsb
pushf
mov
xchg
loopne
repz
and
dec
push
or
xchg
sahf
fiaddl
rcrl
stos
in
push
push
adc
adc
ds
jge
jne
decl
sbb
jno
push
into
xchg
cmp
push
cmp
sbb
mov
or
gs
or
mov
mov
rcr
sub
daa
jae
pop
mov
out
popf
mov
jbe
inc
sub
inc
insl
fisttps
sub
or
xchg
sbb
adc
out
jnp
mov
pop
cmp
imul
fmuls
jl
add
xor
cld
cltd
fs
xchg
in
enter
addr16
stc
and
addr16
cmpsl
outsb
punpckhdq
out
insb
in
xchg
shlb
stc
adc
xchg
lock
fcomi
jecxz
lret
jno
fs
repnz
push
loopne
push
jge
repnz
pop
sti
jg
mov
cwtl
mov
in
imul
iret
jne
int
rcrl
inc
inc
pop
sbb
xlat
pop
bound
out
xor
cmpb
and
mov
push
pusha
cmp
shrl
inc
imul
jmp
add
add
mov
sub
fcomi
neg
pop
sbb
pusha
ss
out
lds
cmp
push
push
xor
loop
push
je
push
or
lret
pop
sbb
mov
aam
out
dec
in
pop
aad
mov
dec
inc
iret
cmpsl
mov
mov
fs
sub
hlt
xor
popl
movsl
pop
add
add
dec
or
pop
leave
xor
pusha
xchg
std
aam
inc
out
jns
adc
fs
movsb
flds
pop
or
or
push
inc
cld
push
mov
pushl
hlt
rcl
scas
jnp
and
jl
and
nop
iret
mov
xchg
fstpt
dec
hlt
jl
cltd
fwait
in
out
int3
push
mov
xorl
sbb
add
icebp
dec
cltd
push
adcl
jecxz
insl
hlt
insl
nop
mov
mov
rcrb
mov
jl
jmp
sub
mov
into
mov
and
outsl
imul
loop
add
pop
mov
lds
inc
mov
push
sub
xor
pushf
jae
loope
mov
daa
movsb
add
xchg
ret
add
ljmp
clc
dec
shlb
mov
dec
repz
in
es
push
adc
push
jl
inc
pop
push
mov
pop
push
xchg
and
cld
shrl
add
xchg
mov
outsb
fidivrs
add
xchg
inc
ja
mov
mov
loope
mov
mov
pop
subb
lock
mov
insb
aaa
outsb
or
cmpsb
mov
lret
imul
ja
push
sub
push
jne
sbb
loop,pt
mov
movsb
test
mov
addb
sti
test
xchg
shrb
push
stos
idivl
fdivrs
addl
add
movsl
sub
mov
jo
mov
mov
mov
pushf
xor
xor
push
cmp
mov
push
mov
in
xchg
fistpll
iret
fidivrs
mov
pop
mov
pop
pop
jp
jg
popa
xor
cmp
dec
and
mov
out
stos
add
xchg
dec
pop
inc
push
scas
mov
mov
test
into
fsubr
push
imul
or
jmp
inc
xor
hlt
push
xor
icebp
mov
cli
push
mov
outsb
loopne
jl
mov
sub
loop
popa
out
xchg
push
cmp
push
mov
mov
push
pop
ljmp
xlat
mov
or
adc
lret
aaa
pusha
clc
in
cmp
push
cmp
gs
jmp
xlat
addl
push
mov
data16
aaa
mov
xchg
stos
lods
sub
ljmp
popa
xor
rorb
lds
lcall
add
pop
gs
fcoms
imul
pop
in
test
adc
jns
inc
push
scas
loopne
pop
adc
and
notl
sbb
shl
out
adc
mov
fdivrl
movsb
data16
enter
jg
pop
dec
adc
aad
sub
jae
mov
adc
pop
pop
cmp
mov
sub
shr
pushf
push
out
clc
jne
std
psrld
mov
stos
icebp
xchg
xchg
ror
out
mov
mov
data16
test
inc
mov
mov
mov
jl
outsl
xor
jp
daa
add
mov
xor
nop
test
ftst
sbb
dec
ja
int
mov
shrb
std
lock
xchg
xor
push
push
pop
in
aam
lahf
cs
mov
jno
push
mov
in
pop
push
rclb
cmp
les
mov
pushf
and
pop
jmp
mov
xlat
inc
out
arpl
pop
push
jnp
insl
insl
call
cmpsl
pushf
cmpsl
inc
cmpsl
iret
mov
sub
js
mov
enter
popf
rolb
sub
pop
mov
sub
pop
cltd
out
mov
lock
xchg
daa
popfw
movsb
xor
sub
clc
push
mov
mov
sbb
ja
adc
dec
or
adc
insl
popf
jne
es
cmp
scas
hlt
dec
push
int
in
jl
clc
inc
sub
push
or
out
aam
push
mov
add
cltd
xor
cmp
test
adc
cwtl
jp
xchg
jmp
pop
call
cmp
and
lods
adc
cmp
jge
outsb
shlb
loope
mov
aas
aam
mov
lcall
adc
adc
mov
fmull
mov
les
xchg
inc
inc
subb
lret
test
pop
xor
into
into
ljmp
xchg
push
jnp
inc
mov
mov
adc
push
sbb
adc
ljmp
or
test
and
enter
lret
xchg
cmp
or
aaa
test
aaa
add
movsb
insb
in
cmp
jbe
xlat
xchg
int
test
inc
cmp
xor
adc
sbb
mov
rcl
mov
shll
dec
sbb
into
xchg
add
sbb
data16
imul
stos
jb
adc
jecxz
sub
pop
scas
xchg
ja
adc
mov
inc
into
sub
rol
out
ja
mov
adc
or
jecxz
insl
icebp
shlb
xchg
ficoms
push
addr16
dec
xchg
arpl
js
movsl
outsb
dec
lret
jns
fstpt
test
dec
clc
dec
les
in
xchg
push
std
jle
xor
sbbb
pop
imul
pop
int
sbb
mulb
loopne
scas
pop
xlat
lods
movsb
push
mov
lds
sub
push
or
xor
cmp
les
pop
jle
in
std
sbb
jge
rorb
repz
lods
fldl
push
loope
addr16
xchg
adc
ss
dec
fsubl
mov
sti
idivb
mov
loop
int3
push
ror
ret
js
add
cmp
sbb
jl
mov
hlt
cli
pop
in
jge
add
push
rclb
xchg
test
dec
xor
add
insl
pop
imul
mov
xor
cli
jbe
inc
in
sub
loopne
and
add
dec
rclb
push
movsb
xchg
cmpb
les
js
imul
es
mov
mov
push
dec
insb
lret
and
push
cmpsb
into
adcl
aam
jnp
jnp
sub
xor
popa
and
inc
xor
leave
mov
inc
packuswb
je
outsb
jge
stos
xor
sub
fbstp
mov
xchg
lock
outsb
mov
dec
xchg
inc
xor
push
shrb
bound
and
and
push
fildl
jb
add
xchg
mov
mov
pop
call
movsl
fidivl
jge
imulb
inc
sahf
adc
test
mov
sbb
sub
cltd
ja
mov
in
push
push
inc
cmpsl
orb
dec
lds
mov
ret
jae
insl
ss
stc
jle
and
pop
pusha
dec
pop
mov
jo
rolb
xchg
xchg
daa
push
cwtl
inc
pop
dec
push
mov
call
sub
cmp
jno
or
mov
aaa
inc
xchg
leave
mov
movsl
sub
push
imul
dec
dec
mov
lret
std
inc
aas
ljmp
out
jbe
cmp
or
pop
mov
and
lret
sub
sub
or
jge
cld
pushl
das
xlat
insl
mov
xor
and
mov
sbb
mov
sarl
add
inc
add
sbb
jmp
push
or
scas
mov
sub
fdivs
and
adc
push
inc
pop
pop
lret
loop
ljmp
sub
jle
pop
mov
push
je
mov
dec
add
mov
enter
jne
push
subb
cmp
pop
stos
out
add
and
xchg
pop
adc
out
or
or
lods
outsb
out
and
out
in
insb
sub
sbb
or
mov
and
sub
cs
jecxz
dec
je,pn
dec
xchg
mov
mov
addr16
cmpsl
int
clc
jge
pop
push
push
movb
sti
push
fs
std
or
xor
sbb
push
jg
inc
not
mov
movsb
aam
xchg
pop
mov
popa
pop
fsubrs
xor
cs
and
rcll
movsl
fdivrs
shll
sub
rcr
jae
negb
sbb
dec
jnp
mov
cmp
aad
inc
or
push
add
sub
pop
loopne
cwtl
sub
sbb
jnp
xchg
inc
sarl
test
lods
pop
jmp
rcrl
mov
scas
rol
lods
sub
pop
test
fistpl
pushf
imul
mov
and
adc
sahf
adcb
jno
loopne
fimuls
push
jg
mov
jmp
xor
adc
jo
adc
mov
loope
push
hlt
xchg
repz
sub
test
adc
push
jbe
pop
sbb
stos
mov
ds
pop
dec
jno
push
mulb
jmp
sub
inc
pmulhuw
ljmp
test
mov
aad
pushl
jge
sbb
dec
cwtl
add
jb
pop
fwait
test
xlat
add
jae
pop
xchg
push
xchg
sahf
xlat
mov
push
mov
leave
pop
call
mov
cmp
sbbb
repnz
in
hlt
std
or
mov
es
je
pop
xor
inc
xchg
mov
jae
xchg
push
xlat
push
ret
sub
lret
sub
stos
push
or
pushf
dec
popa
lds
lock
sbb
roll
sbb
xor
mov
stos
xor
push
pushf
adc
dec
sub
in
jns
into
mov
ror
xchg
xor
push
mov
popf
dec
vcvtpd2ps
lock
lds
jmp
stos
and
fbld
xchg
cltd
ret
fwait
sbb
jl
pop
lahf
data16
pusha
add
add
xchg
cli
jmp
inc
jecxz
fsubrl
pop
or
fnsave
in
pop
stos
jnp
sub
inc
js
adc
dec
repz
pop
xlat
adc
push
add
loope
sti
mov
loope
fst
xor
fwait
mov
repnz
pushf
decl
stos
out
shll
cmp
jno
das
scas
and
or
xchg
push
int3
jg
jle
les
loope
sbb
test
lcall
inc
loope
sbb
stc
pop
mov
jnp
jmp
adcb
pop
mov
js
mov
jp
hlt
lods
fimuls
sub
es
jo
inc
pop
fsubr
and
pop
pop
rcrl
sarb
cmp
ja
and
ret
js
xchg
shll
jae
mov
xor
cmp
aad
icebp
rorl
sti
outsl
sub
dec
add
fstl
jo
nop
std
mov
mov
iret
loopne
mov
cs
shlb
loope
mov
xchg
xchg
mov
jecxz
sbb
xchg
mov
add
push
stc
js
mov
daa
sbb
sbb
es
bound
add
xchg
sti
test
xchg
repnz
dec
popf
sar
mov
sbb
shll
dec
rorb
and
cmp
push
xchg
adc
or
mov
je
and
test
push
mov
roll
out
xchg
or
adc
ret
dec
sbb
adc
or
repz
pop
lret
mov
nop
js
rorb
xchg
mov
adc
data16
jo
ret
stc
pushf
fstpt
cmpsl
pusha
mov
ja
mov
jae
sar
sbb
ss
in
cmp
jo
sub
outsb
decb
pop
mov
addr16
movsb
nop
repnz
cld
outsl
ret
mov
aaa
out
add
loope
cmp
adc
cli
setl
push
mov
pop
xor
mov
rclb
xchg
push
xchg
int3
jo
lock
into
roll
cmp
jmp
xor
stos
hlt
aam
xor
in
or
popf
daa
xchg
ljmp
pop
iret
movb
push
dec
push
dec
stos
and
lods
pop
ret
mov
ss
xchg
add
xor
fsubrs
inc
jns
aaa
scas
xchg
imull
cwtl
sub
push
xchg
lret
mov
cmc
leave
daa
mov
aaa
lret
pop
and
test
pushf
or
pushf
xchg
clc
in
in
or
mov
jl
std
icebp
push
ds
and
mov
xor
ret
sub
or
pop
inc
lret
lcall
popf
xchg
std
in
push
lds
divw
or
push
daa
repnz
dec
nop
jecxz
push
enter
or
jbe
pop
movsb
jo
test
cmp
xor
xor
cs
insb
stos
movsb
sbb
add
lock
hlt
cmp
jmp
pop
jns
sub
inc
xchg
mov
pop
jge
clc
pop
rorb
shrb
cld
jb
xchg
sbb
shl
push
jae
push
mov
mov
outsl
popa
and
fnstsw
push
push
insb
and
dec
bswap
leave
or
mov
in
jae
stos
stos
jne
nop
lahf
aaa
mov
iret
cmpsb
ja
xor
sbb
and
xlat
cli
xchg
push
xchg
sbb
dec
in
fs
sbb
aam
gs
and
icebp
jne
pop
mov
or
std
dec
dec
imul
loop
lahf
mov
dec
shlb
in
cmp
addb
cmc
xor
dec
fwait
jbe
mov
loopne
pop
call
shr
mov
dec
jle
popa
xchg
jbe
push
out
xor
std
jae
or
and
pop
cld
mov
sub
bound
cmpsb
sub
repnz
jno
cwtl
lahf
arpl
pop
add
adc
fsts
mov
fdivl
pop
pop
mov
cld
fiadds
aaa
adc
push
shrl
fimull
add
arpl
or
cmpsl
iret
or
out
incb
push
subl
insl
pop
fwait
inc
fsubrl
push
xchg
ret
ficomps
sub
mov
std
bound
jo
cmc
pop
cwtl
pop
pusha
sbb
jg
jnp
adc
fcmovnb
xchg
inc
mov
mov
popf
je
jne
cmpsl
mov
push
cld
mov
insl
xchg
adc
mov
idivb
shlb
orl
pop
popf
mov
mov
sub
or
in
mov
xor
sub
pop
popa
dec
pop
sub
je
sub
and
xor
xorb
ss
aas
fsts
pusha
sub
enter
sahf
mov
push
outsl
lcall
fwait
mov
add
jb
jle
cmpsl
adc
loope
loope
in
decl
xlat
rcrl
push
mov
inc
movb
jb
mov
ficoml
jmp
test
inc
cmp
sub
mov
mov
test
mov
push
cs
rcll
test
cli
mov
mov
imul
js
xchg
pop
sbbb
xor
js
add
rcrb
cmp
lods
mov
xor
sub
mov
mov
inc
lret
ss
jo
or
es
loope
xor
test
orl
into
fcoms
shll
lret
push
cmpl
pop
or
push
push
ret
inc
leave
subl
mov
dec
icebp
adc
inc
bound
push
lcall
pop
rorb
xor
movntps
and
mov
and
scas
inc
data16
cmp
scas
dec
mov
inc
insl
xor
adc
push
adc
jmp
fidivrl
cltd
add
cmp
outsl
negb
mov
xchg
mov
jae
dec
dec
xchg
cmp
mov
fcomps
pushf
lret
and
xchg
ljmp
repz
xchg
es
cltd
shrl
or
and
push
jb
jle
dec
mov
mov
adcb
std
pop
mov
addr16
mov
ds
mov
sbb
fiadds
add
out
or
outsb
push
mov
push
mov
in
push
adc
test
mov
bound
cs
cmp
in
lds
xorl
add
aaa
jne
jl
sbb
scas
xchg
xchg
mov
lds
lods
in
fldt
and
addr16
in
jmp
mov
sub
xchg
add
pusha
inc
adc
xchg
push
or
je
mov
jle
fdivrs
test
sbbb
jecxz
jae
sti
lods
push
daa
or
gs
xor
test
xor
fwait
push
jb
mov
xchg
or
enter
xor
insl
mov
sbb
pushf
xor
cwtl
rcrb
pusha
dec
sub
mov
sub
inc
sub
dec
in
daa
inc
stos
push
les
icebp
sub
dec
lahf
cmp
dec
cltd
jle
gs
in
sti
jb
sbb
imul
pushf
sbb
outsl
out
ret
pop
mov
sub
outsb
push
test
stc
fwait
push
fdivrs
mov
repz
gs
mov
clc
repz
mov
add
mov
bound
loop
push
mov
xchg
push
or
or
fstps
loopne
stos
out
sbb
mov
loop
loope
cmp
cmp
es
jl
xor
jmp
mov
mov
mov
fldt
xchg
jge
mov
loop
mov
outsl
dec
loope
adc
push
sub
xchg
jae
testl
ret
fwait
in
inc
dec
dec
mov
inc
and
mov
cmc
testl
xor
push
imul
sbb
xlat
std
aaa
inc
or
fdivl
or
stc
movq
push
or
lods
cli
sti
idivb
aaa
sti
imul
and
sti
popa
mov
inc
and
dec
es
xchg
jns
jnp
sub
lods
xchg
xchg
xor
xchg
jb
jno
out
punpckhdq
popa
xchg
xor
sub
xor
xchg
in
jle
sub
in
int3
fildl
not
jge
mov
loop
leave
loope
popa
jno
lock
sbb
lods
sbb
stos
mov
fwait
dec
xchg
aas
dec
jbe
mov
jmp
aas
pop
cltd
test
es
or
cmc
push
xchg
sahf
mov
add
outsl
mov
fucomi
pop
mov
loop
test
scas
mov
xchg
movsl
arpl
int3
scas
push
sbb
push
rcll
xor
pop
pop
or
add
xor
or
or
popf
sbb
jns
inc
sbb
push
jno
loope
mov
xor
add
inc
int3
and
shll
dec
sarl
inc
cmc
imul
cmp
cwtl
pop
shrl
adc
dec
lahf
xchg
mov
push
adc
imul
leave
int3
mov
and
outsb
cmp
jno
mov
hlt
jnp
stc
clc
cmp
add
cwtl
into
aad
rcl
and
mov
xchg
out
dec
mov
jmp
icebp
jne
and
leave
pop
mov
sbb
dec
mov
mov
mov
aas
test
or
mov
push
out
sbb
aam
jge
push
add
mov
add
clc
sarl
fsub
fldt
lcall
sahf
scas
jecxz
ret
sub
inc
mov
inc
popa
xchg
sbb
fistps
mov
pusha
mov
test
jl
mov
add
push
ret
fwait
sub
mov
pushf
mov
mov
mov
jp
fisttps
pop
jnp
mov
sub
js
sbb
out
add
js
pusha
push
xchg
stos
jns
outsb
dec
and
mov
cwtl
fdivp
fdivrs
and
jnp
fstl
mov
movsb
lock
adc
sub
cltd
inc
or
pop
lahf
neg
add
lea
in
outsl
mov
or
dec
add
jmp
pop
inc
inc
xor
mov
sbb
push
pusha
mov
push
mov
les
mov
mul
add
dec
xchg
adc
mov
add
iret
bound
out
inc
test
icebp
loopne
cltd
int
fldt
lahf
pop
into
pop
dec
outsl
push
inc
and
mov
pushf
sbb
xlat
mov
jno
sbb
setae
subb
jb
xor
punpcklwd
sub
int
mov
mov
sub
and
mov
sbb
adc
loopne
ja
xlat
negb
iret
add
add
push
inc
lock
mov
dec
cmp
adc
aam
sub
mov
rcrl
dec
int3
jno
dec
test
scas
lds
push
aas
adc
pusha
sti
cmpsl
int3
repnz
lods
add
mov
xor
sub
xor
inc
jmp
scas
stos
divl
movsl
lods
icebp
inc
sti
or
lods
jnp
push
jnp
jbe
mov
pop
mov
ret
mov
pop
push
jp
mov
aaa
sub
fwait
cmp
test
ja
insb
sbb
sbb
adc
jle
sbb
imul
mov
in
in
les
repnz
mov
ss
inc
mov
cwtl
sahf
fiaddl
mov
jns
inc
push
in
fld
adc
add
adc
xchg
std
dec
pop
pop
or
loopne
dec
cmp
jnp
jbe
adc
inc
cmpsb
test
lods
cmp
cmpsb
bound
add
rorb
cltd
pushf
dec
mov
loop
negl
mov
cwtl
cmp
icebp
and
jnp,pn
lret
jge
push
jmp
or
dec
mov
std
mov
pushf
pop
cmpsl
lahf
repz
addr16
mov
je
aam
adc
mov
in
pop
imul
push
jne
jecxz
lds
aam
hlt
jns
and
shrd
jne
mov
add
lods
mov
jbe
push
movsl
mov
adc
mov
jo
fimuls
leave
orb
ficompl
push
stos
fwait
aam
mov
arpl
add
and
push
cld
cmp
cli
sbb
imul
cmp
rorl
int3
or
xchg
das
stos
lods
pop
aam
and
dec
mov
insl
cld
adc
cmc
pop
rorl
sub
fadd
push
pop
ret
sub
fnstcw
mov
or
mov
xchg
dec
aaa
int3
loopne
sbb
inc
dec
cmpsl
out
dec
jo
ret
loop
jg
or
mov
or
mov
jmp
ds
shr
shrb
or
subl
inc
icebp
xchg
or
lock
mov
and
sarb
cmp
sbb
and
sub
les
bound
push
inc
out
sbb
pushf
xor
fnstsw
rolb
sbb
jmp
sub
push
cmp
mov
mov
cmp
mov
and
enter
les
js
popa
rolb
aad
std
mov
lcall
push
adc
in
movsb
pushf
mov
mov
out
out
mov
push
push
ret
xchg
shll
clc
subb
xchg
rcrl
jg
dec
sub
insl
and
xchg
subl
sti
orl
sbb
dec
enter
pop
loope
xchg
push
push
loop
out
and
and
loop
push
das
int
push
mov
mov
rorl
imul
sbb
add
adc
scas
popa
stc
mov
mov
jbe
mov
icebp
inc
leave
and
xchg
push
mov
mov
and
mov
adc
cmp
sti
in
inc
inc
jno
fldt
mov
mov
pop
adc
shll
mov
jg
and
mov
pop
xchg
stos
aad
sahf
jnp
push
loope
and
stc
movsb
xchg
add
xor
mov
movsb
xor
insl
sub
mov
rolb
push
lret
push
outsb
pop
sti
fwait
inc
popf
out
test
int3
les
mov
das
jnp
mov
mov
mov
dec
sbb
cltd
push
jle
stc
cmp
je
imul
sarb
pop
pusha
sub
cmpsl
insl
lock
addr16
lods
pop
sub
into
xchg
les
je
inc
mov
sub
cmp
xor
fisubrl
cli
and
movsb
ficoms
push
add
daa
jb
sub
mov
push
test
dec
mov
xchg
mov
inc
je
jecxz
int
sub
out
mov
cmpsb
jg
test
mov
mov
or
mov
aaa
popf
rcll
rcrl
pushw
mov
jg
xorl
xor
aas
pminsw
xchg
lret
ds
aam
nop
out
int
push
out
sti
sbb
into
and
inc
sub
outsl
mov
stos
rcrl
add
ja
inc
int
icebp
xor
lret
lcall
jns
inc
std
popa
push
sub
icebp
cmp
aad
fnstcw
add
adc
mov
jl
jns
mov
push
mov
setno
push
out
jnp
pushf
mov
mov
jo
pop
mov
xchg
adc
or
mov
insb
fisttps
push
les
fucomi
je
push
rolb
or
ja
cmp
insl
and
push
orl
jle
and
ja
mov
or
push
lret
adc
sub
repz
rcrb
test
stos
inc
push
iret
inc
ja
sbb
in
cltd
loopne
add
daa
jl
jne
mov
lea
jecxz
xchg
jge
mov
xchg
inc
fcomi
or
xorb
nop
fnsave
aaa
inc
mov
pop
push
xor
fmull
and
jmp
pop
iret
sbb
jbe
ds
repz
push
mov
sbb
movsl
ret
pop
ja
sbb
ljmp
outsl
fisubl
inc
xor
and
pop
cwtl
cwtl
xchg
and
fistpl
xor
cmpsl
add
in
add
lret
jecxz
aam
mov
push
scas
adc
lcall
lods
jp
cmp
lock
shlb
dec
ret
add
sub
and
aaa
or
sti
xchg
pop
fildll
enter
jb
push
xchg
arpl
call
sub
jl
mov
adc
mov
ds
xor
fmull
xor
xchg
and
in
mov
cmp
xchg
int
push
sub
loopne
pop
adc
jnp
mov
aam
das
ret
xor
pop
adc
lds
decl
cltd
add
loope
imul
xor
call
inc
sti
data16
mov
movsb
adc
cwtl
pop
push
lcall
pushf
imul
das
mov
js
out
dec
dec
lahf
scas
fdivp
cmp
cmp
or
scas
xor
add
adc
es
sub
xchg
inc
mov
fimull
mov
mov
mov
pop
cld
outsb
mov
fxsave
mov
in
adc
cli
call
outsl
pusha
lret
inc
sub
jb
mov
lret
add
sub
lods
or
call
mov
push
stc
shr
cld
jnp
es
js
push
mov
cwtl
xor
and
fdivrs
fwait
addl
rcl
int
lods
int3
mov
jge
andl
lock
loop
sub
sbb
sbb
std
scas
mov
and
sbb
mov
sub
sub
test
pop
pop
pop
mov
iret
push
fistl
jl
shll
sahf
dec
in
icebp
xor
push
jae
idivb
lods
lahf
in
pushf
in
test
rcrb
or
sub
std
aas
outsl
shl
mov
lret
inc
cmp
mov
fstps
fucomip
mov
test
jmp
shl
mov
sub
daa
mov
enter
xchg
cmp
out
jae
mov
stc
add
sti
push
jmp
xor
cltd
inc
or
dec
pop
ja
push
pop
cmc
mov
mov
mov
insb
push
sbb
mov
pop
mov
cmpsb
xor
cli
jle
mov
imul
mov
sub
mov
xchg
lea
cmp
cltd
push
in
mov
xchg
insb
pop
pop
cmp
pop
mov
ja
push
xchg
into
outsb
imul
cmc
in
jae
lock
in
xor
sub
or
jno
repz
les
into
mov
rclb
mov
cmp
push
dec
lea
xchg
sbb
inc
outsb
jne
sbb
std
dec
adc
popf
inc
loope
and
rcll
icebp
je
pop
mov
jg
in
pusha
jno
cltd
pop
shlb
push
fnstsw
mov
aam
inc
lds
fnsave
push
xchg
push
lds
in
shrl
pop
sub
addr16
pop
rol
imulb
les
and
call
fbld
jnp
pop
cmovl
movsl
and
lea
inc
clc
push
sub
jle
fstpl
stos
xchg
mov
jp
xchg
in
push
push
lods
call
lret
cmpsb
cmp
call
push
mov
fistl
jae
loope
sbbl
sarl
sub
add
mov
leave
push
mov
mov
mov
add
push
in
jne
jns
sarl
out
push
in
inc
xchg
inc
push
push
in
inc
push
or
inc
les
jp
mov
mov
add
mov
fiaddl
dec
ja
sbb
loope
adc
jle
mov
cmp
mov
mov
push
pop
mov
testl
scas
xchg
loope
imull
loop
callw
imul
sub
or
pop
jge
mov
jbe
jp
test
fiadds
flds
aam
and
mov
out
test
inc
sbb
xor
cmp
sub
stos
mov
in
sub
fcmovu
daa
test
pop
lods
mov
bound
xchg
mov
pop
sub
insb
push
cmp
pop
insl
dec
test
subb
in
mov
shll
mov
jmp
fistpll
movsb
outsb
sub
cmpsl
xchg
lahf
sbb
mov
clc
pop
sar
dec
pop
in
out
mov
repnz
icebp
loope
movsb
and
in
aas
sahf
imul
xchg
outsl
pslld
fdiv
movlps
sbbb
stos
imul
push
jge
lods
nop
jge
adc
in
push
iret
stc
enter
clc
dec
arpl
push
xchg
add
dec
mov
scas
lea
clc
cmp
stc
push
sub
mov
adc
cmp
xchg
test
ret
jg
push
bts
push
fstl
xor
and
fxch
xchg
jnp
mov
mov
add
daa
or
or
fildll
cmp
in
ret
lcall
nop
insl
out
scas
cwtl
add
arpl
xor
push
dec
push
or
xor
out
cwtl
je
cs
push
cli
inc
movsl
cwtl
xor
ss
jno
pop
jl
mov
mov
les
cmp
push
mov
dec
clc
in
mov
add
jae
dec
push
xchg
popa
add
push
dec
sub
dec
or
pop
aad
shrb
mov
and
lret
mov
pop
call
test
fstpt
movsl
or
sti
test
std
dec
leave
xchg
pop
fisubs
sub
mov
jnp
mov
test
data16
outsb
mov
inc
testl
inc
lret
jmp
add
ja
ss
xchg
out
icebp
sbb
lcall
push
jne
pop
xchg
icebp
sub
mov
xchg
inc
mov
jp
lds
arpl
jae
in
jge
jmp
test
into
xchg
daa
xor
notl
add
dec
shl
pop
mov
sub
cmpsb
popf
and
subl
push
sti
mov
inc
aas
xchg
push
scas
and
sar
mov
jo
push
xchg
lahf
nop
pushf
xor
js
in
imul
subl
mov
mov
jmp
imul
push
adc
fdiv
sub
out
mov
push
sarb
cmc
lea
call
je
in
mov
loop
pop
mov
mov
test
pop
std
push
je
mov
popa
imul
lea
jge
movsb
jge
xor
in
sbb
jmp
xor
xchg
jne
or
cmc
lods
popa
dec
mov
ss
scas
cmc
js
push
std
jl
repnz
popl
out
mov
add
arpl
je
xchg
mov
lret
mov
cld
mov
popa
xor
ficomps
push
shrl
scas
add
sub
stos
pop
xchg
push
out
xchg
mov
nop
fwait
inc
cltd
lods
stc
jg
ss
fucom
out
lret
adc
cltd
push
pop
push
add
insb
mov
xor
dec
rcrb
mov
div
sub
adc
mov
jo
add
inc
daa
pop
div
shrl
gs
loop
xor
xchg
fisttpl
and
loopne
mov
ret
pop
out
sub
add
mov
mov
fucomi
scas
ds
mov
xchg
clc
je
cmp
aad
subb
adc
shr
inc
addr16
pop
loop
cmp
pop
mov
jp
and
xchg
loopne
adc
sahf
mov
pop
mov
push
ror
mov
jbe
test
sahf
mov
and
dec
or
mov
movsl
pop
testb
std
dec
les
cli
and
fadd
jno
push
js
addl
imul
fucomp
addl
test
lock
inc
cmpl
nop
sub
mov
dec
xchg
adc
pop
xchg
mov
push
lds
and
push
ds
mov
sti
sub
sti
and
dec
cmp
divl
addr16
mov
push
push
mov
cmc
adc
and
dec
jbe
mov
fildll
push
xor
popa
divl
mov
aas
pop
and
fcoms
ficoms
popf
jo
loope
xchg
dec
jb
jmp
or
loope
pushf
push
xchg
mov
aad
sbb
data16
push
in
sbb
inc
cmp
addr16
adc
out
call
mov
divb
xor
push
or
mov
hlt
stos
aaa
mov
inc
testl
jbe
pushl
xchg
stos
fdivr
dec
sar
in
sub
mov
jae
dec
lds
mov
rolb
nop
gs
addr16
or
jnp
cmp
jno
cmc
cmp
mov
jae
lods
loopne
ss
sbb
outsb
popa
dec
adc
out
xchg
out
dec
repz
aaa
jge
jle
loop
nop
enter
mov
enter
clc
or
das
testl
fstl
insb
adc
repz
cmpsb
pop
xchg
scas
stos
adcl
int
or
mov
mov
xor
cmp
arpl
or
shlb
push
mov
push
pushf
pop
or
mov
popf
jbe
roll
and
mov
int3
push
jne
bswap
sub
or
add
popa
int
loop
xor
push
pushf
incl
insl
imul
mov
sti
sbb
int
xchg
es
push
cli
insl
pop
push
mov
add
insb
or
jno
jp
stos
sahf
scas
xchg
movsb
loopne
int3
sbb
jmp
inc
fcmove
inc
push
sub
into
shr
cli
xor
adc
outsl
icebp
xchg
roll
pop
scas
inc
jle
push
popa
push
xor
mov
sarb
lods
cmp
sti
jecxz
rclb
jp,pt
push
and
out
jge
cmpsb
mov
sbb
imul
setbe
f2xm1
enter
lret
scas
pushf
push
push
aaa
cmpsb
adc
mov
das
mov
fndisi(8087
les
test
dec
jo
sub
cmc
lods
cmpsb
addr16
sub
scas
lods
xchg
sahf
sbb
xchg
sbb
out
xor
inc
pop
push
jno
xlat
and
mov
iret
sbb
push
ret
sbb
mov
add
cmpsb
and
cmp
nop
rcrb
inc
data16
xorb
push
sahf
lods
cmp
push
lods
out
mov
iret
xchg
inc
xchg
fstpt
jl
cmp
mov
insl
es
xchg
ss
push
or
xor
sub
dec
and
cmp
imul
lahf
ds
cmp
in
cmp
scas
cmc
xor
in
and
aad
orl
scas
or
adc
rep
scas
push
jl
mov
lret
dec
jno
gs
cmp
clc
addr16
test
jo
push
mov
jg
js
add
outsl
fdivrp
pop
push
xchg
jae
sbb
jge
adc
aad
adc
mov
fwait
test
leave
dec
lock
mov
adc
xor
pop
in
popl
and
pusha
add
sbb
mov
bound
scas
sti
and
adcb
outsb
insl
mov
xchg
jne
or
mov
sbb
pop
pop
mov
cmp
jg
xchg
dec
in
or
ret
mov
push
repz
movsb
dec
cltd
in
push
xorb
mov
add
pop
mov
pop
bound
rcrl
cmp
testl
out
mov
fildll
jae
jge
roll
imul
sti
push
and
sarb
data16
test
sub
inc
daa
sub
stos
loopne
ja
or
sbb
or
pushf
cmp
out
jae
xchg
sub
xlat
adc
jne
adc
rcrb
cmp
lods
push
inc
adc
and
mov
ret
std
scas
push
ja
fcompl
jg
push
sbb
pop
jge
cli
xchg
lret
popa
mov
es
or
cltd
or
lds
fsubrs
lods
cmp
and
xor
std
mov
dec
cli
add
mov
stc
or
mov
pushf
mov
iret
mov
aad
sbb
fstpl
xchg
and
shlb
mov
pop
loopne
jbe
pusha
daa
ret
mov
inc
dec
xor
sub
mov
loop
repnz
ss
pop
sti
addl
xchg
mov
cmpsl
pop
je
ficoml
nop
adc
xorl
fdivl
add
lret
pop
mov
js
adc
adc
jno
daa
cwtl
out
outsl
or
mov
cli
xchg
inc
movsl
and
scas
jb
rol
pop
and
jbe
imul
adc
xchg
ja
pop
mov
inc
adc
stos
inc
or
pop
sub
xor
aas
sahf
xchg
jb
out
xchg
adc
call
mov
push
fsub
hlt
pop
test
stos
aas
lea
cmp
imul
mov
popf
pop
pop
pop
inc
pop
xor
cmp
arpl
sar
dec
into
daa
inc
or
gs
dec
cmp
loopne
cld
mov
pop
or
rcrl
jb
sarb
mov
lods
or
in
cs
pushf
mov
inc
pushf
fsubs
cs
fnsave
fwait
test
cmpb
jle
or
popa
xchg
jecxz
adc
jns
cmp
mov
mov
rcrb
lret
sbb
jb
stc
mov
cmc
xor
and
lcall
psubsw
push
xor
dec
inc
leave
repz
jp
add
cmp
scas
stos
cltd
cmp
adc
adc
int3
adcb
or
lret
mov
lods
inc
mov
cmp
sbb
sub
enter
or
or
or
int
adc
push
push
fs
dec
imul
repz
cmp
mov
adc
hlt
inc
lahf
cmp
outsb
cmp
imul
ljmp
and
cmpsb
xchg
das
xchg
mov
popa
mov
loop
inc
in
sti
je
not
loope
lea
xchg
pop
add
cmp
hlt
gs
inc
dec
popa
pop
dec
sarb
mov
movsl
mov
je
lahf
test
div
lret
pop
icebp
arpl
add
adc
sbb
xchg
mov
sub
je
nop
pop
push
pop
int3
rcrl
jnp
jne
dec
inc
sbb
mov
mov
jp
pusha
imul
jecxz
shlb
jmp
push
mov
jge
mov
xor
push
rcr
testb
add
arpl
xchg
rolb
cmp
sub
pop
pusha
mov
mov
fstps
test
sbb
aaa
out
jbe
xchg
je
xchg
inc
data16
icebp
jne
push
imulb
sbbl
add
stc
adcl
jno
out
sub
fdivs
mov
mov
fwait
ret
in
stos
mov
sbb
imull
add
xor
pusha
sub
fcom
lahf
mov
inc
icebp
test
cltd
sbb
popa
inc
dec
int3
cmpsb
repnz
sbb
lds
push
mov
and
mov
push
adc
test
cmpsl
lret
call
js
enter
call
subl
add
xor
and
push
push
push
and
sahf
ret
sti
or
and
decb
pop
imul
or
add
rorb
adc
out
sbb
mov
aaa
cltd
decb
repnz
sbb
cmp
cmc
in
popf
fistps
aas
jge,pn
jnp
cwtl
jl
sahf
fsubl
int
jae
fistpll
mov
jmp
mov
sub
push
fiadds
jae
ret
int3
xor
imul
xchg
imul
call
xchg
push
mov
add
shll
and
ret
adc
cmp
fcompl
inc
add
das
stc
xor
inc
loopne
leave
imul
bound
dec
mov
fwait
test
push
sahf
lret
sbb
int3
cmp
rol
sbb
lea
imul
fdivrs
jbe
sbb
sub
sti
jecxz
jo
outsl
adc
inc
mov
mov
push
dec
add
fldz
add
das
scas
sti
or
pop
mov
xchg
pminub
lret
dec
rorl
test
cmpsl
push
adc
xor
dec
enter
mov
out
cmc
outsb
cs
stos
test
fldl
fcmovb
mov
icebp
adc
aam
mov
xchg
faddp
or
xchg
fists
repnz
sbb
mov
dec
or
repz
in
cmpsb
rclb
xchg
in
xchg
xchg
xor
pop
pop
pop
pop
and
mov
dec
pop
fwait
stos
or
pop
mov
xchg
sub
mov
leave
add
fcmove
nop
cmp
lret
das
sub
add
jle
add
stc
xor
pop
fs
int3
adc
push
ds
and
fidivrs
and
cltd
es
cmp
aaa
push
pop
push
cmp
cmp
in
inc
stos
sub
dec
es
add
pop
fistps
or
sub
lret
and
add
rcll
pop
mov
aas
sbb
add
dec
aad
movsl
pop
mov
xor
sub
mov
inc
lods
in
daa
pop
faddl
je
nop
lcall
inc
out
inc
add
adc
dec
lea
jae
jge
call
inc
push
loop
lahf
push
xchg
xor
mov
les
shlb
fucompp
call
pop
lea
mov
dec
out
mov
and
out
xrelease
push
mov
out
gs
lret
and
or
push
push
sub
mov
andb
sbb
iret
xor
push
and
fidivrs
mov
aam
mov
loop
ret
jae
insl
out
cli
adc
xchg
jmp
xchg
fstp
out
jle
inc
cld
lods
jl
stos
jge
orb
push
sub
push
adc
out
dec
pop
ret
pusha
or
cli
je
pop
insl
xor
repnz
mov
xor
loope
pop
dec
cmp
sub
jmp
pushf
sub
iret
cmp
sub
sub
test
ja
adc
dec
or
cltd
mov
std
or
mov
inc
insb
inc
mov
movsb
movsl
and
les
movsl
outsb
xchg
outsl
ljmp
push
and
mov
cmp
sub
jmp
into
negb
add
mov
cli
and
fcomps
xchg
dec
in
stos
fisubrl
enter
jb
nop
jmp
xchg
loop
cld
dec
daa
out
mov
mov
cmpsb
imul
lods
cs
pop
inc
cltd
stc
aas
and
mov
sbb
out
imul
adc
icebp
sbb
push
aam
inc
jb
dec
fwait
mov
imul
xlat
mov
test
xor
add
addr16
add
mov
out
inc
lahf
pop
xchg
shll
cmp
das
imul
clc
repnz
lock
cmp
or
enter
in
dec
jg
lret
sbb
xchg
lret
xchg
push
or
movsl
je
cmovbe
mov
dec
fiadds
inc
mov
clc
add
sbb
pop
jl
inc
and
add
movsl
stc
loopne
sbb
call
xchg
xchg
mov
popf
icebp
cmp
sub
dec
sub
mov
jmp
sbb
jns
aaa
pop
xor
or
sub
jp
out
aam
xchg
jp
mov
pusha
test
push
or
hlt
inc
push
dec
adc
rorb
sbb
mov
jb
dec
outsb
or
mov
movsb
arpl
insb
cltd
or
pop
pop
pusha
outsb
stos
faddl
test
outsb
sub
or
fcompl
mov
pop
cwtl
jmp
aas
dec
lock
jo
cwtl
cmc
stos
xor
mov
mov
inc
mov
pop
cwtl
lods
xor
fcompl
hlt
lret
fildl
daa
testl
add
out
out
jmp
in
jl
dec
hlt
sub
daa
pop
cld
enter
roll
push
adc
xchg
jnp
faddl
or
add
mov
adc
mov
jmp
ljmp
xor
ret
lock
mov
push
xchg
mov
rcrb
pop
cmp
xchg
cmp
ret
jl
pop
push
mov
cmpsb
lcall
lcall
outsb
les
div
ret
das
and
dec
xchg
sub
js
out
pushf
push
pop
sahf
push
mov
pop
xchg
sbb
or
xor
int
inc
dec
add
shll
push
sbb
insb
lds
inc
mov
in
stc
aaa
data16
not
sbb
pop
pop
out
push
into
cvttps2pi
and
daa
cmp
out
mov
inc
das
mov
xchg
inc
cmc
xor
je
mov
lcall
sbb
movl
dec
js
sbb
sub
cli
lret
stos
dec
lods
fstps
in
pop
jl
sub
cltd
dec
sub
sub
mov
jge
aad
sti
mov
xchg
push
dec
sbb
mov
jmp
insb
aam
lcall
cltd
insb
mov
div
pop
in
pop
sub
cmp
xor
insb
adc
stc
cmpsl
adc
repnz
push
int3
jb
inc
inc
jns
lret
xchg
andl
fnstsw
sbb
inc
sub
xchg
sbb
ljmp
ja
repnz
pop
in
push
xchg
out
adc
cmp
nop
fdivrl
or
cmp
or
xchg
bound
stos
jle
sbb
pop
pop
lret
outsl
cwtl
sar
or
lock
test
in
out
outsl
aas
mov
inc
add
xor
adc
adc
xchg
popa
hlt
mov
fs
jb
mov
fldt
push
cmpsb
inc
dec
sub
push
std
cmp
loopne
movsb
pop
push
test
mov
mov
inc
xor
lahf
push
lea
or
xchg
sbb
aam
ss
stc
mov
sbb
jl
dec
mov
mov
push
xor
cld
adc
pop
lds
mov
cs
stc
cs
push
test
ja
rclb
push
xchg
pop
or
out
call
lods
sbb
aam
mov
add
int
cli
fs
and
int3
xchg
cwtl
cmp
imulb
push
insl
js
mov
or
inc
xchg
dec
add
test
xchg
add
scas
jbe
jp
rorb
pop
cmp
fstl
xorb
jle
xlat
mov
clc
dec
jg
rclb
mov
fisttpll
inc
pop
mov
in
pushl
lcall
sbb
inc
and
out
xor
mov
scas
ss
imul
push
mov
dec
jl
xor
lea
xchg
adc
add
mov
ret
xchg
sbb
test
ficoms
sub
mov
push
pushf
add
and
and
jne
fs
mov
shlb
andb
pop
xchg
lods
mov
dec
daa
rolb
fdivrl
and
dec
inc
dec
sub
hlt
hlt
or
pop
sub
adc
pop
push
loopne
add
mov
push
jg
mov
ret
pop
insl
dec
divl
sub
or
jge
push
sub
test
bound
ja
test
stos
mov
sub
jg
jl
jae
orl
and
cmpb
xorl
loopne
xor
dec
pop
xchg
sbb
cmc
cmpsl
mov
ja
mov
mov
aas
sbb
cmpsl
sbb
fwait
jmp
sbb
cmp
sbb
xor
andb
stos
cld
dec
aad
and
sub
clc
xor
loop
xchg
push
iret
inc
adc
or
filds
push
movsl
fdivrp
icebp
cld
lods
adc
lods
mov
mov
push
xchg
je
add
dec
adc
xor
fdivs
in
and
add
call
in
mov
clc
int3
enter
imul
sbb
pop
or
fcmovne
std
mov
mov
mov
push
cmp
lods
loop
or
add
xchg
push
icebp
dec
mov
cmp
out
arpl
sbb
sub
inc
jno
fmull
mov
inc
inc
fs
add
stc
rorb
or
clc
xlat
cmpsl
jne
out
or
push
popa
rcrl
test
movsl
imul
add
jge
push
cwtl
pop
jecxz
loope
dec
inc
sbb
insl
popf
fwait
cwtl
orb
out
lds
mov
push
cltd
add
mov
dec
enter
xchg
fstpl
cmpl
cltd
lds
in
xor
ret
push
cs
fidivrs
shll
push
xor
xchg
or
in
sti
jnp
jmp
scas
lds
dec
add
test
xchg
lea
mov
pop
mov
inc
lods
xchg
imul
pusha
jl
and
xchg
es
ljmp
insl
sbb
sbb
dec
mov
out
lret
xchg
into
pop
inc
push
mov
aas
int
cmp
mov
cmp
sbb
inc
sbb
lret
out
xor
cmc
fmulp
add
pusha
mov
lahf
add
fsub
xlat
inc
filds
pop
adc
jb
dec
mov
pop
hlt
sbb
mov
and
xor
sbbl
dec
adc
test
hlt
cmc
popf
sbb
push
cmc
cmp
rcr
test
sbb
add
js
inc
cltd
std
test
or
mov
xchg
mov
cmp
jg
cmpsl
ret
popa
incl
inc
shlb
mov
or
div
and
out
mov
insb
movsb
mov
mov
pop
je
cmp
fdivs
lret
enter
fs
adc
sub
push
dec
aad
popa
pop
lcall
and
or
movsb
gs
stc
push
pop
adc
ffree
lods
xchg
adc
popa
mov
xchg
push
jbe
sbb
xor
push
mov
int
sbb
push
xchg
lret
dec
cs
lret
adc
gs
int3
aam
mov
adc
aam
or
push
push
aas
fwait
mov
mov
inc
inc
adc
shlb
lcall
loopne
mov
mov
cmp
pop
dec
cmp
jge
sub
adc
mov
pop
jne
lahf
adc
jo
pusha
std
push
ret
cmpsl
cmpsl
fcoms
sbb
sub
xchg
add
or
mov
shlb
adc
pop
pusha
sub
jl
inc
inc
mov
subl
push
mov
shlb
mov
sbb
into
outsb
pop
jge
addr16
sarb
mov
sbb
cmpsb
cli
jb
push
push
fbld
lock
mov
ljmp
fldenv
inc
inc
mov
lret
data16
jno
cmp
pop
ds
pushf
sbb
mov
push
dec
jecxz
inc
mov
sub
movsbl
js
pop
out
push
popf
mov
cmpsb
push
push
imul
enter
pushf
out
pop
popf
je
mov
or
scas
clc
aam
mov
imul
les
call
dec
pop
push
add
call
adc
loop
add
imul
mov
stc
es
stc
sub
outsl
aad
in
fs
lods
push
push
add
and
mov
lds
or
sub
sti
lahf
je
scas
enter
cltd
outsb
xor
mov
xchg
dec
inc
fcomps
adc
iret
cmpsb
aad
repz
inc
pop
imul
out
in
or
mov
pushf
dec
mov
fcoml
popa
mov
lods
repnz
and
out
or
lods
add
push
pop
out
xchg
dec
mov
mov
fsts
xchg
add
fcomi
cmc
nop
pop
ja
lret
lahf
in
ficoms
mov
mov
xchg
aad
pop
pop
inc
aam
mov
pop
sub
in
shll
outsb
mov
or
mov
stos
es
test
pop
jg
dec
iret
jmp
jmp
sbb
add
push
cmc
add
stos
setp
sti
fucomip
call
dec
sub
cwtl
stc
mov
pop
nop
js
pop
xchg
out
xor
cld
xchg
mov
test
in
or
clc
ficoml
add
fwait
dec
dec
sub
leave
xchg
iret
js
jge
mov
aaa
js
orb
xor
pop
lds
add
dec
mov
sub
and
pop
push
mov
cmpb
cmp
jg
xor
and
inc
push
add
stc
dec
adc
pusha
push
push
test
xchg
or
hlt
lcall
jle
addr16
sti
movsb
jne
sub
lods
adc
jl
jno
mov
setl
push
sbb
add
aas
mov
dec
popf
and
cmp
inc
inc
xchg
mov
imul
lret
pop
inc
flds
dec
cmp
and
xor
mov
mov
jbe
push
aad
add
int
mov
mull
cmp
data16
stos
addr16
inc
sbb
jg
lods
or
dec
ret
sub
push
aam
xor
adc
outsb
jb
or
cwtl
mov
icebp
pop
mov
stos
cmp
lcall
dec
and
divb
adc
xor
inc
lcall
push
stos
jg
cwtl
sahf
pop
mov
cmp
sbb
sahf
fcomps
mov
inc
push
push
adc
leave
mov
mov
cs
orl
into
dec
test
jae
scas
dec
mov
lret
popa
aad
int3
loope
push
mov
enter
call
sti
sbbl
and
in
xchg
cwtl
test
cmp
jae
mov
setae
fldt
jb
jne
or
push
and
mov
sub
sub
lcall
push
ss
add
in
aaa
xchg
stc
ficompl
pop
mov
out
imul
sbb
dec
sub
addb
xchg
xchg
std
mov
mov
mov
sbb
subl
mov
je
pop
xchg
jo
movsl
mov
loopne
lret
testb
mov
push
mov
dec
fcompl
add
lods
and
aam
aas
sti
or
ss
jns
lcall
insl
rolb
pusha
push
push
out
dec
icebp
pop
mov
mov
mov
add
inc
popa
inc
inc
loope
arpl
mov
shlb
pop
lahf
icebp
sbb
clc
loop
push
inc
dec
jne
xchg
mov
in
jg
xchg
pop
mull
adc
mov
and
ljmp
push
dec
fwait
push
pop
pop
cmpsl
leave
jle
je
and
loopne
cmp
pop
lock
cmpb
call
and
in
push
jbe
pop
movsb
in
xor
ror
push
sub
inc
sub
sub
popf
xor
xchg
dec
xchg
mov
dec
mov
adc
cli
sub
insb
and
je
scas
repnz
lods
out
in
mov
subb
sbb
inc
int
popa
out
cmp
jmp
icebp
mov
movsl
cmp
sbb
in
push
jns
aas
sub
mov
lret
movb
pop
jbe
je
cmpsl
sarb
jnp
ja
add
out
scas
cmp
lock
scas
imul
clc
adc
push
mov
scas
push
jnp
cmp
ss
inc
cmp
mov
outsb
cmp
sbbl
aaa
or
dec
dec
das
inc
fnstcw
mov
aam
int3
lret
inc
or
fsubr
gs
jne
inc
jmp
lcall
pop
outsl
add
enter
out
js
adc
cmpsb
cmp
inc
mov
cwtl
inc
stos
xor
inc
sbb
add
push
leave
adc
push
mov
lods
cmp
sub
inc
adc
xor
negb
iret
out
jmp
arpl
stos
pop
int
mov
stos
add
or
mov
dec
mov
lret
or
dec
ljmp
jnp
stos
sub
xchg
sbb
lock
sbb
push
mov
call
andl
mov
mov
fisubrs
clc
cmp
jne
shll
xchg
xchg
in
xchg
sti
aad
in
or
mov
mov
sahf
mov
pop
loope
fsubrl
mov
adc
mov
push
jecxz
adcl
imul
es
xor
add
fmul
fmull
out
inc
jo
leave
inc
je
fucomip
add
cltd
pop
and
jno
jno
rcrl
outsb
jg
adc
pop
xor
in
mov
dec
jne
sti
add
inc
xor
mov
pop
fs
outsl
repz
dec
xor
fdivrl
pop
out
movsb
aas
out
mov
push
call
xchg
repnz
mov
daa
decb
and
add
and
not
fsts
nop
pop
jp
and
xor
jo
ret
repz
faddl
jmp
jbe
and
or
xchg
sti
push
cltd
addr16
or
or
mov
push
addb
cmpl
jnp
or
imul
hlt
cmpsl
xlat
cmpsl
and
push
outsb
repz
jmp
leave
mov
insb
cmp
xchg
and
inc
cmp
inc
cmp
insl
jg
cmp
out
fs
jg
les
js
dec
pop
jo
adc
pop
fiaddl
adc
ficomps
mov
leave
or
push
adc
jns
sbb
stos
cmpl
out
aam
loopne
adc
xor
xor
sbb
or
int3
lods
adcb
pop
fldenv
mov
data16
and
shll
test
adc
xchg
pop
cmp
inc
mov
sti
call
dec
sbb
mov
stc
lahf
jg
push
or
xlat
decl
cmc
pop
adc
popf
loopne
sbb
cs
mov
lock
jne
hlt
or
inc
sub
int
mov
inc
imul
sbb
mov
mov
adc
movsl
notb
inc
stos
into
div
mov
jno
rorl
pusha
mov
int3
mov
cmc
adc
jmp
or
sbb
xchg
mov
cld
mov
mov
call
xchg
and
xorl
jne
jns
adc
pop
ret
push
push
push
pop
jno
xchg
sub
popa
lods
std
sbb
push
mov
inc
filds
fbld
int3
push
and
and
and
rcll
insb
fcoms
mov
xlat
adc
mov
mov
iret
adc
fildl
xlat
fsubr
pop
jl
inc
adc
cli
jno
stos
fistpll
pop
mov
adc
dec
adc
and
lock
outsb
or
jle
loopne
sub
mov
shr
stc
dec
mov
mov
mov
jb
mov
ret
test
mov
cmp
ficoml
sub
or
inc
cmp
shl
mov
push
sbb
movsl
dec
mov
leave
jle
jne
and
rcrb
dec
push
xchg
push
popa
fscale
addl
fwait
mov
mov
sub
pop
xchg
lods
lret
jb
add
pop
or
push
inc
adc
into
push
xor
push
scas
mov
adc
shll
xor
out
fistpll
cmpsl
mov
xor
cwtl
mov
in
sahf
dec
sub
mov
mov
dec
mov
cltd
xor
mov
popa
jge
sub
imul
or
or
in
aad
inc
xchg
fadds
negl
cltd
mov
push
ret
ja
test
and
pop
sub
jbe
sarl
cmp
insb
push
pop
xor
pop
std
pop
mov
adc
mov
dec
iret
add
fisttpll
test
cmp
hlt
mov
xor
stos
subb
sub
and
sub
rorb
push
sahf
aaa
and
dec
imulb
add
lods
sti
and
ss
jg
pop
xchg
bound
outsb
and
enter
std
iret
pop
shlb
loopne
loop
inc
out
sahf
cmp
push
inc
sub
fcoms
out
pop
sbb
in
cltd
jmp
xor
jmp
sahf
add
aam
sub
mov
xor
dec
cli
sub
sti
in
fisubrs
pusha
xor
arpl
adc
je
mov
inc
mov
ds
pop
mov
inc
xchg
inc
out
stos
les
ss
fistpll
and
cld
pop
test
pop
mov
lods
mov
jnp
in
sub
pop
pop
jl
movsw
mov
mov
and
mov
ja
lahf
daa
lret
cmp
int
lcall
pop
ror
jo
lcall
mov
push
mov
pop
xchg
xor
lret
lods
add
loop
addr16
sbb
xor
and
pop
faddp
out
xor
sti
xlat
push
jns
lods
scas
stos
jge
dec
mov
inc
sub
jne
mov
jno
xchg
mov
push
xchg
ror
inc
sbb
mov
mov
xor
mov
push
loop
stc
enter
jno
push
inc
pop
dec
mov
pop
mov
mov
xor
mov
insb
sti
push
fst
jmp
popa
xlat
stc
rorb
sbb
sub
outsb
shlb
push
or
jns
adc
rorl
mov
jbe
pushf
push
ljmp
leave
cmp
push
loopne
push
fwait
mov
int
push
adc
loopne
stc
add
cmp
xor
sbb
push
sbbl
xchg
popf
mov
push
insl
ffree
mov
lcall
sbb
inc
int3
xchg
cmp
mov
ret
testb
in
jmp
adc
lea
inc
iret
jno
ja
mov
sub
mov
jne
sbb
mov
xchg
and
std
xor
stc
movsl
xor
enter
ror
daa
and
imul
int3
pop
enter
mov
push
or
imul
shll
dec
push
sub
xor
fdivrl
dec
mov
lret
pop
pop
dec
fsub
lret
mov
xlat
out
sti
in
mov
mov
orb
cmpsb
lahf
scas
or
sbb
sar
dec
mov
inc
out
rcr
inc
xor
imul
shll
mov
add
xchg
sbb
dec
fbld
or
test
cs
sub
mov
idivb
xchg
fidivrs
shll
ds
sti
ss
call
xor
out
jbe
and
push
push
inc
mov
leave
cmp
shlb
lidtl
aam
jecxz
add
rorl
xchg
add
lea
test
loope
hlt
cmp
pop
sbb
sub
sbb
in
hlt
mov
jne
xchg
and
push
dec
fcompl
loopne
sbb
inc
andl
pop
mov
adc
dec
test
loopne
mov
dec
mov
sar
ret
in
into
mov
adc
hlt
add
inc
inc
adc
dec
mov
jbe
ret
pop
xor
xor
int3
inc
mov
loop
outsb
push
lods
movl
mov
inc
ja
xor
fisubs
xchg
dec
sbb
jbe
jp
insb
rolb
cmc
add
xor
outsl
orl
mov
scas
jne
sub
xor
popf
xchg
scas
sbb
inc
jnp
jmp
or
in
popa
jne
add
es
dec
out
out
adc
ljmp
insl
sub
sub
add
aad
popf
xlat
es
xlat
mov
push
xchg
mov
sarl
dec
mov
push
clc
outsb
jl
fildl
nop
cmp
inc
test
push
mov
pop
sub
sbb
sbb
xchg
xchg
xchg
hlt
int
xchg
sub
nop
push
push
jmp
pushf
stos
or
jae
pop
roll
int
ret
test
jo
cmp
cmp
mov
inc
xlat
or
inc
mov
clc
ret
push
jae
test
mov
mov
pop
and
scas
jo
adc
into
loope
push
inc
lods
jmp
inc
mov
push
rorl
xchg
test
mov
cmc
mov
imul
pop
cld
pop
hlt
xchg
divl
loope
adc
int
add
add
test
adcb
ret
sbb
fwait
repnz
test
jmp
sarb
js
lds
adc
cmpsb
adc
mov
in
xor
jmp
iret
jnp
stc
adc
cmc
push
in
sub
add
pop
dec
clc
test
loopne
subl
in
mov
cmp
inc
ficompl
dec
jg
mov
out
pop
ret
mov
loopne
sub
or
lret
and
push
xchg
out
outsb
xchg
icebp
cmp
jo
imul
push
loop
push
dec
mov
mov
mov
mov
add
jmp
dec
cmp
push
jmp
cmpsb
lcall
push
push
mov
push
push
addb
sbb
mov
and
add
mov
fsubs
jg
xchg
jae
push
inc
gs
dec
andb
cli
cli
xor
inc
cmpsl
imul
dec
in
aam
lret
pop
aaa
sub
pop
ljmp
jmp
push
pop
imul
xchg
mov
pop
cmp
push
push
xor
fwait
mov
fidivrs
imul
bound
jae
cmc
inc
fstps
mov
rcll
add
and
mov
cmpsb
cltd
mov
pop
adc
xor
cmp
cld
sub
pop
mov
subb
les
push
cmc
and
cli
outsb
scas
fdivrp
jae
iret
lods
dec
mov
inc
or
xor
movsl
and
out
loop
sbb
ljmp
push
sub
out
pop
subl
leave
xor
adc
add
fcomp
test
lods
xchg
lret
jge
in
in
jl
jns
jmp
in
rcrb
push
testb
lock
jne
push
mov
popf
insb
lcall
pop
dec
testb
in
sub
sub
stos
jb
fldt
data16
jge
sbb
mov
popa
dec
push
mov
mov
add
out
mov
outsl
in
stc
or
add
sbb
mov
es
mov
hlt
enter
mov
loop
inc
into
and
cltd
sqrtps
pop
testb
into
lahf
push
adc
pop
cmc
stos
adc
add
fdivr
adc
jge
aas
rcrb
sub
fimull
cltd
out
lret
xchg
jle
dec
mov
push
dec
arpl
inc
pop
jge
aaa
jecxz
mov
and
cmp
mov
shlb
pop
movsl
or
jae
push
sbb
fldl
loope
popa
xlat
and
inc
movsl
add
in
out
sub
lds
stc
xchg
inc
test
mov
mov
imul
sahf
adc
cmc
jae
test
cmpsl
addr16
add
enter
je
or
jno
popa
mov
out
int
idivl
push
and
ja
xor
or
bts
adc
test
cmp
loope
pop
add
xchg
push
ss
frstor
dec
or
mov
lock
mov
pop
scas
xchg
leave
nop
pop
fwait
add
cli
jg
jmp
pop
push
jno
ret
hlt
dec
cwtl
out
fcmovnu
xchg
icebp
aam
push
das
pop
call
pusha
popa
iret
pop
and
cmp
sbb
mov
dec
mov
ret
addr16
pop
les
jnp
jg
cmp
push
and
rorb
or
pop
out
pop
popa
dec
dec
outsl
and
std
mov
sub
adc
movsb
test
or
xor
ret
xchg
fcmovb
jmp
and
and
out
mov
adc
aad
loopne
add
addr16
push
mov
push
push
xchg
add
jmp
or
cmpsb
jne
into
test
mov
ret
pop
inc
dec
leave
lret
dec
add
scas
es
push
mov
xchg
and
push
cmp
mov
cmc
push
or
add
fdivrp
xchg
add
nopl
fdivp
pop
jg
add
mov
test
dec
aas
enter
addb
push
rclb
mov
imul
ret
and
mov
add
insl
cld
cli
dec
mov
mov
lock
cmc
add
cli
cmp
add
xchg
sub
insb
pop
rorb
jb
cs
sbb
dec
jns
aad
adcl
test
xchg
jp
add
dec
rclb
test
mov
adc
sti
sbb
fimull
les
int
dec
mov
call
mov
cmp
xorb
mov
movsb
out
mov
and
adc
jl
aas
xchg
rorb
add
mov
ds
dec
jl
mov
xchg
scas
repnz
insl
js
lods
push
or
mov
shlb
inc
or
call
push
nop
add
enter
fisttpll
repz
cmpl
hlt
jl
sub
lds
and
push
ret
and
lret
ds
ss
mov
add
push
dec
mov
jge
sub
jl
lahf
movsl
xchg
sbb
nop
xor
sarb
lret
or
xchg
jecxz
addr16
and
outsb
xchg
test
jmp
sti
fcoml
jmp
cmp
jge
int
xor
ljmp
add
sti
in
fcoml
ret
and
xlat
mov
inc
lods
roll
imul
pop
xchg
and
push
lahf
out
fs
mov
dec
popf
aaa
test
int
cwtl
pop
dec
fildl
inc
or
aaa
mov
js
cmp
adc
push
in
ret
sbb
out
in
xor
ljmp
sahf
adc
pop
dec
fwait
mov
add
adc
or
in
aam
lock
ss
icebp
sahf
inc
mov
fs
lock
outsl
movsb
shlb
xchg
ss
in
shll
inc
insl
ss
fmulp
lods
lods
dec
mov
mov
insb
test
mov
data16
xchg
push
scas
icebp
call
lods
decl
jl
movsl
ja
add
sbb
je
test
jl
xor
inc
imul
mov
movl
xchg
out
in
xchg
mov
xchg
sub
and
lret
call
sbb
and
daa
call
cs
sbbl
xchg
pop
xlat
mov
pushf
and
sbb
jne
sbb
xchg
bound
aas
loop
int3
inc
push
mov
dec
aam
hlt
ret
cmp
jno
xor
push
js
out
mov
ja
nop
dec
pop
push
mov
rcr
and
test
jb
xor
xchg
les
push
jg
adcl
jns
testl
and
xchg
mov
add
aad
dec
jp
sbb
add
and
dec
leave
sbb
out
mov
idivb
fs
mov
sub
adc
shlb
sbb
mov
dec
mov
test
push
or
cmc
inc
xor
call
dec
in
pop
mov
jo,pt
popa
popf
data16
adc
add
mov
xchg
dec
xor
add
iret
push
fcompl
icebp
addr16
xchg
pop
int3
inc
mov
xchg
or
add
adc
mov
std
pop
mov
insb
imul
out
popa
dec
arpl
and
or
inc
sbb
cmp
mov
lcall
adc
in
js
adc
mov
aam
test
ss
xchg
pop
js
shll
out
cmp
dec
inc
jo
out
imul
push
aaa
dec
adc
mov
iret
lods
stc
addr16
scas
fldenv
adc
cmp
stos
stc
mov
xchg
mov
dec
jmp
xchg
add
jnp
sbb
lea
lret
push
add
arpl
test
adc
sti
sahf
stc
lcall
mov
xchg
das
lcall
ss
cmp
push
push
pop
cs
std
ret
mov
add
leave
and
inc
call
les
ficompl
push
cmpsl
aas
lret
or
xchg
cs
push
xchg
xchg
mov
or
xor
ficoms
fsubrl
push
imul
jp
mov
scas
shrl
in
add
mov
mov
adc
std
fiadds
aad
push
mov
xchg
sahf
push
push
inc
movsb
fmulp
lcall
aaa
pop
mov
icebp
out
and
xchg
fdivl
jbe
hlt
jp
xor
add
jge
stos
xorb
arpl
fxch
dec
adc
out
fidivrs
jns
mov
loope
sbb
dec
test
push
data16
sti
fnstcw
sbb
bound
mov
fistl
bound
xor
es
in
mov
xlat
outsb
pop
jne
pop
xchg
cltd
std
mov
pop
jecxz
out
int
leave
movl
mov
mov
test
jp
jg
fimuls
add
daa
pushf
xchg
cwtl
inc
int3
shlb
mov
pop
push
popf
sbb
cltd
cs
insb
cmp
jno
movsb
jo
mov
iret
enter
ja
cmp
sub
dec
jl
cwtl
fcom
mov
mov
xchg
data16
dec
lock
hlt
xlat
xchg
enter
jp
jae
mov
into
shll
shrl
inc
leave
icebp
mov
cs
mov
or
lds
lods
mov
ret
pop
cmp
and
jno
xor
xor
jae
or
imul
sub
xor
loopne
rclb
xchg
fsts
jno
in
mov
sbbl
nop
inc
stos
ja
jb
dec
pop
les
mov
daa
sti
nop
sbb
ja
sbb
jmp
add
mov
stc
add
jo
adc
mov
jae
loopne
push
cmp
jle
push
add
xchg
xor
pop
xchg
mov
shrb
mov
sbb
inc
test
and
push
cli
cmpsb
bound
les
sub
fs
mov
cmpsb
fisttpll
nop
data16
inc
repnz
jo
and
pop
adc
lret
enter
xchg
or
or
xchg
rep
jbe
stos
xchg
cmc
ljmp
fstpt
in
aad
xor
mov
enter
jno
xor
dec
addr16
hlt
es
imul
sahf
outsl
dec
scas
mov
divb
stos
daa
mov
hlt
push
movsb
fwait
add
hlt
mov
mov
pop
popf
pop
sbb
mov
jns
neg
aad
push
outsl
incl
les
and
and
pop
fdivl
negb
aaa
pop
sub
test
and
cmpsb
jno
mov
int3
rcll
sub
pushf
push
clc
add
sahf
xor
out
cmp
mull
ja
jo
into
icebp
jp
xor
pop
bound
gs
xor
xor
clc
add
icebp
mov
mov
aam
mov
sub
aad
xchg
lock
lret
xchg
sub
dec
mov
dec
cmp
cmpsl
addr16
pop
push
loop
mov
mov
mov
xchg
int
push
dec
ds
lods
in
popa
call
pop
scas
aas
test
sbb
dec
ja
outsl
imul
or
rcll
shll
push
adc
call
ficoms
sbb
pop
mov
push
jnp
inc
pop
inc
mov
add
clc
lds
jno
sbb
dec
mov
fs
adc
lock
inc
mov
leave
xor
es
push
xor
scas
in
sahf
add
cmp
fldl
call
js
ja
insb
jp
mov
pop
inc
in
mov
nop
mov
mov
jnp
pop
sub
clc
pop
ja
subl
cmp
jmp
and
jno
lcall
sbb
add
fisubrs
mov
mov
push
shll
sbb
imulb
push
mov
cmp
mov
orl
pop
std
cwtl
xchg
cmp
jne
xchg
mov
fcmovb
jae
rorl
push
push
lret
cmp
fldenv
jae
pop
ja
int3
sbb
jl
mov
mov
rolb
and
outsl
pop
xor
dec
sub
inc
cmp
pusha
jns
shrb
or
jmp
pop
ds
inc
cmp
je
lods
push
iret
imul
push
sub
sub
add
scas
inc
adc
sbb
push
sbb
or
fiaddl
cmp
or
loopne
mov
xchg
test
or
movsb
mov
in
or
rorb
jnp
xor
or
and
leave
xchg
ret
lcall
mov
xchg
lods
cmp
imul
cmpsb
ret
pusha
js
or
xlat
sub
pop
fcompl
jmp
xor
xchg
cmp
mov
pop
in
adc
cmpsb
arpl
int3
pushf
mov
mov
jle
gs
std
cmp
cld
dec
dec
lods
dec
out
mov
push
adc
push
add
mov
repnz
pop
out
ret
adc
stos
sahf
out
pop
test
pop
int3
lds
fnstenv
jnp
xchg
jb
and
sub
or
and
lods
inc
sbb
dec
push
push
into
push
dec
mov
jg
pop
shll
push
das
pop
popf
push
cmpsb
or
sub
sub
out
xchg
xchg
mov
out
or
mov
or
lcall
jbe
test
test
iret
mov
mov
push
xchg
hlt
fldenv
fiaddl
clc
pop
movsb
icebp
stos
push
fnsave
sbb
push
sub
test
in
movsl
mov
and
pop
into
push
cmp
push
nop
mov
fistpll
pop
ficoms
jo
rorb
inc
push
mov
sub
cli
gs
jns
push
dec
popa
pop
popa
mov
loopne
je
mov
sahf
out
xchg
outsb
jge
xchg
mov
jb
adcb
sub
out
xlat
sar
push
push
testl
in
add
enter
jmp
movsl
mov
aas
push
xchg
mov
std
arpl
pusha
or
xchg
push
je
xchg
fsubl
loop
cmpsl
dec
sarb
in
test
mov
stos
cld
mov
pushf
or
xor
dec
cmp
in
enter
cmpsb
fisttps
scas
and
cmp
jo
addl
cmpsb
aas
sbb
mov
fiaddl
mov
rcr
dec
pop
das
popf
mov
mov
adc
lock
add
ficompl
push
push
mov
pop
sub
and
cwtl
test
or
cmp
cmp
adc
pop
mov
dec
jbe
enter
shlb
sub
sub
test
inc
out
xchg
cmp
fdivr
rorb
enter
notb
lods
push
icebp
jns
repnz
inc
pop
jge
adc
xor
notl
pop
push
adc
adc
cli
push
xor
test
popa
orb
mov
cmpsb
pop
int3
jno
push
cmp
jge
jg
stc
xchg
mov
adc
sub
dec
ljmp
mov
dec
stos
mov
std
mov
test
push
push
pop
movsl
cmove
mov
jmp
stos
and
mov
in
sub
mov
push
aas
xchg
test
xor
mov
inc
repnz
sbb
pop
cs
hlt
push
gs
inc
mov
mov
xor
xchg
out
repnz
sarb
jns
in
cmpsb
out
pop
add
jg
xor
mov
insb
or
out
dec
push
xlat
out
ss
sbb
mov
xor
mov
fldl
scas
inc
pop
fwait
je
push
dec
fcoml
jno
iret
out
pop
jl
sbb
sbb
push
sub
jecxz
mov
sub
les
pop
mov
insb
xchg
in
sub
les
int
loope
insl
push
pushf
mov
iret
pop
dec
inc
lahf
movsb
leave
ficoms
mov
ss
adc
push
es
dec
push
mov
sti
cmp
sub
iret
subl
in
sbb
jns
xor
inc
pop
pop
cmpsb
xor
or
fwait
loopne
xchg
iret
sti
add
insl
pop
in
jmp
movsb
pop
jno
inc
je
ret
pushl
pop
xchg
sahf
push
insb
xlat
pop
jns
adc
xchg
int
inc
scas
test
sub
sub
dec
sub
adc
cmpsb
das
add
mov
sbb
jmp
xlat
adc
roll
shld
jmp
push
push
cmp
pop
sub
mov
stos
and
stos
cmp
sbb
push
cld
push
push
aaa
mov
daa
inc
sbb
push
jle
iret
inc
test
or
or
add
loopne
or
pop
xor
sbb
pcmpgtb
jl,pt
ljmp
mov
sahf
pop
xchg
push
push
sbb
mov
mov
push
popa
pop
imul
mov
xchg
or
mov
outsb
mov
pop
loope
mov
inc
dec
andb
mov
nop
in
movsl
pushf
insl
dec
and
mov
mov
mov
xor
incb
jo
test
xchg
sarb
dec
jle
mov
enter
lock
xchg
test
popa
push
inc
sub
repnz
das
pop
scas
cmpsl
and
and
dec
sti
jnp
pop
cmc
jno
adc
push
add
test
shr
and
pop
icebp
in
mov
test
xor
push
xlat
cmp
and
pop
test
lds
lahf
sbb
xlat
mov
ja
jbe
mov
mov
bound
cmp
lahf
test
adc
push
add
mov
bound
xchg
cwtl
add
cmp
popa
movsl
lret
xchg
test
fdivr
push
scas
popf
xchg
bound
dec
xchg
cmp
mov
mov
enter
inc
sub
jl
mov
lods
ds
mov
fwait
jno
jmp
repz
cmpl
scas
sub
lods
cmp
cmp
fisubl
xor
push
mov
and
mov
out
push
cs
cmp
filds
mov
iret
sub
iret
xchg
push
inc
push
femms
jae
xor
mov
subb
add
out
cwtl
fmulp
sbb
subb
loopne
test
fadds
loope
pop
cwtl
arpl
pop
push
rcrl
mov
mov
dec
push
daa
hlt
aaa
js
jp
aad
mov
add
sbb
fmull
jmp
mov
test
fwait
add
pop
push
lcall
or
lea
sub
push
sub
lods
daa
pop
repnz
sub
rol
mov
mov
lea
data16
addl
adc
ret
je
dec
out
popa
sub
jne
or
inc
jle
inc
adc
ret
mov
dec
jecxz
addr16
shrl
rorl
xchg
pop
pop
xor
les
ljmp
scas
movsl
mov
xchg
mov
fmul
je
sub
sbb
imul
pop
mov
fdivr
push
jno,pn
jnp
decl
or
ja
jl
inc
cmp
testl
and
xor
jo
mov
nop
daa
daa
lock
sbbl
jmp
xchg
not
shll
in
push
lahf
or
pop
rol
add
add
ffree
jmp
fwait
jmp
lds
add
flds
pop
js
fs
repz
add
mov
push
sbb
push
adc
mov
and
xor
sub
and
stos
out
std
stos
dec
mov
pop
mov
xor
push
xchg
dec
lds
add
push
fstl
aas
out
mov
stc
fimull
pop
jecxz
jg
les
arpl
mov
ljmp
ja
mov
mov
scas
jmp
jl
popa
mov
stos
push
mov
loopne
repz
jne
jae
xlat
sub
popa
and
jae
fcom
iret
jge
test
dec
mov
jb
push
stos
call
loope
icebp
xor
lahf
mov
imul
xchg
sub
shlb
push
in
fisubrs
jae
cmpsb
sub
loopne
fdivrs
or
out
in
lret
cmc
jnp
and
and
into
inc
clc
lret
add
mov
dec
jae
test
fs
leave
mov
mov
fdivrl
je
or
jle
push
adcb
mov
in
movsb
mov
fxch
fmull
iret
out
pop
in
jo
cld
adc
xchg
fsubrs
dec
sahf
scas
jp
pop
lret
sub
int3
adc
jmp
orl
ljmp
mov
cmpsb
js
xor
and
mov
or
xchg
dec
push
enter
aaa
sub
jge
xchg
movsl
std
mov
dec
or
cmp
mov
ret
mov
mov
cli
cmpsl
fimull
mov
and
mov
cmp
add
enter
sahf
adc
jl
dec
jno
pushf
orb
xchg
sub
push
jmp
sub
adc
push
xchg
test
es
gs
addl
inc
xlat
mov
xor
lcall
jl
fdivrs
icebp
mov
out
and
sub
std
sbb
cmp
mov
dec
adc
dec
xchg
and
ret
ret
or
imul
rclb
les
jnp
sbb
loopne
sahf
repnz
ja
out
andl
push
xor
adc
outsl
push
mov
out
add
js
mov
adc
push
cmp
fdivl
and
call
out
out
dec
xor
and
insb
imul
jp
call
sub
scas
lods
and
lahf
lret
adc
btl
repz
rclb
dec
or
aaa
stos
lahf
divb
push
sub
stos
mov
dec
mov
cmp
adc
jle
aam
bound
dec
or
jg
aam
push
movsb
lret
cmp
mov
xchg
arpl
lock
mov
mov
mov
cmpsb
sahf
sarb
loopne
pop
push
popa
cli
or
xchg
sub
subl
jns
popf
xor
repz
jno
movsb
pop
or
les
aaa
repnz
sbb
mov
les
pop
fstpl
pop
movsl
popa
insl
or
dec
test
in
imul
jmp
mov
int
cmp
scas
mov
orl
or
pop
cwtl
mov
mov
ret
push
mov
loop
insb
pop
adc
sub
adc
lods
stc
pop
mov
and
push
jno
in
stc
mov
add
jno
mov
push
add
xor
or
xchg
fsubl
rclb
mov
subb
div
cmpsl
sub
pop
sahf
fistpll
nop
jmp
mov
cmp
clc
xor
or
sbb
lods
add
add
xchg
add
xchg
push
cltd
cld
pop
test
test
ret
jle
stos
dec
lds
jecxz
or
test
in
movb
shll
insb
loope
cli
jecxz
jecxz
jmp
mov
jg
jle,pn
ret
ds
cmp
mov
jge
mov
mov
xchg
movsb
sub
sahf
ja
popa
mov
push
dec
enter
out
mov
sbb
cmpsl
sbbl
fadds
adc
popa
dec
push
sarb
mov
sub
loop
push
mov
ss
push
bound
es
or
test
and
push
imul
sub
imul
or
xor
testb
out
adc
xor
cmpsl
mov
aas
push
int3
loop
mov
popa
sbb
pop
icebp
cmpsl
cmp
enter
or
push
je
jbe
xor
push
daa
mov
xchg
fisttpl
mov
arpl
inc
sub
outsl
fbld
pop
xlat
push
mov
aad
xchg
ljmp
ret
fnstenv
pop
xor
jp
mov
and
sbb
insb
push
fists
aam
fwait
in
fsts
add
mov
in
jl
push
mov
add
sbb
je
scas
jge
jns
cmp
mov
and
push
andl
inc
or
xor
test
fcmove
inc
or
and
push
cs
fistl
into
mov
add
sub
sub
sbb
mov
test
shl
stos
mov
cwtl
sti
repz
xlat
dec
es
lret
jmp
mov
mov
sub
xchg
jmp
cmpsb
stos
inc
scas
cmpsb
pop
and
jge
int
push
sub
mov
int3
cltd
lock
rorb
push
cmpsl
xchg
xor
pusha
aas
in
sarb
rcll
lcall
loop
testb
inc
fs
aas
xchg
cmp
imul
adc
mov
and
iret
rorb
insb
shll
and
fs
ljmp
shlb
jl
pushf
imul
fmull
inc
repnz
fisttpl
or
inc
mov
movsb
fiaddl
aad
dec
xchg
movsb
ds
sahf
dec
jle
out
mov
pop
add
mov
pop
rolb
pop
insl
int3
aam
fmuls
sub
push
dec
rorb
and
mov
cld
and
mov
jns
pop
in
daa
xor
adc
in
aam
inc
push
lock
cmc
jns
roll
pop
jnp
xor
mov
xchg
dec
lods
dec
push
cmp
movsl
or
inc
sub
neg
test
jmp
xor
add
fwait
or
sub
dec
sbb
bound
out
clc
inc
mov
mov
xchg
aaa
adc
daa
aam
es
shrl
pusha
pop
mov
imulb
outsb
mov
dec
sbb
and
mov
sbb
test
push
icebp
mov
mov
mov
xchg
cld
mov
push
fcmovbe
jnp
xor
loop
inc
push
test
push
xor
lds
adc
clc
push
jle
xor
test
adc
jns
int3
jo
insl
cmpb
lahf
insb
pop
jp
xor
rolb
jecxz
xlat
dec
mov
fstl
push
test
xor
pop
outsl
insl
push
inc
lret
mov
push
mov
cmp
fwait
pmullw
stc
sarb
decl
icebp
sub
mov
idivl
jbe
sbb
sub
xor
rcl
ds
insb
inc
dec
pop
ficompl
adc
dec
loopne
ds
pusha
mov
mov
lods
dec
orl
es
or
cs
cmpsl
sbb
xchg
scas
cmpl
fsubr
lret
jb
add
addr16
sub
lods
mov
sub
imul
adc
push
xchg
pusha
jle
popf
js
pop
imul
mov
test
inc
xor
clc
in
rclb
insb
insl
mov
mov
enter
dec
mov
sbbb
sahf
insl
scas
mov
out
mov
fdivl
negb
inc
loop
aam
ds
jmp
into
clc
pop
add
pop
cld
jp
fsubl
ljmp
sbb
pop
cmp
imul
cmpsb
stc
icebp
mov
inc
jmp
out
jp
mov
cs
xor
ljmp
xchg
pop
pop
jno
rcr
cltd
xorl
or
test
add
add
sbb
cli
or
adc
sbb
sub
test
pop
jno
inc
je
push
test
push
sahf
outsb
pusha
sbb
xchg
inc
or
mov
add
rcll
cmp
fsts
cmp
inc
mov
sub
push
out
adc
loopne
data16
inc
popa
insb
push
iret
xor
inc
mov
iret
or
lds
push
pop
out
dec
loope
sub
lcall
mov
sub
cli
daa
ret
std
xor
subl
xchg
roll
cmp
loop
cmpsl
repz
out
push
xlat
mov
insb
icebp
loopne
jno
lcall
jns
movsl
xchg
repnz
adcl
in
mov
rorb
and
fisubl
popf
sub
xor
lcall
cmp
push
add
pop
cmp
stc
inc
js
test
cs
pop
clc
add
mov
xchg
int
push
xchg
ret
mulb
mov
mov
xchg
mov
jno
inc
lret
stos
js
das
or
out
and
push
ret
testb
mov
sahf
add
out
ja
sub
dec
punpckhwd
insl
repz
or
cmpsl
stos
mov
sahf
or
add
xor
or
jecxz
movsb
sbb
or
inc
jae
jge
sbb
xchg
fdivr
cltd
cmpsl
cld
cmp
xchg
dec
xlat
int
test
push
inc
mov
in
into
sbb
adc
push
add
cmc
push
push
arpl
pusha
into
lds
lods
fcmovnu
fs
sub
and
in
pop
mov
add
push
jge
push
push
push
aas
xorb
lcall
lds
pop
lahf
mov
sub
lods
pop
movsl
pop
iret
fucomi
call
pop
pushf
pusha
jno
inc
mov
lret
push
adc
imul
jle
pop
pusha
orl
jae
or
mov
cmpsl
sahf
sub
mov
lret
mov
lods
cmpl
sbb
hlt
sarl
leave
or
test
and
fldenv
add
imul
xchg
push
lret
cmp
dec
sub
loope
imul
sub
es
sub
add
add
xchg
out
dec
and
in
pop
jns
xor
aad
cld
cmp
sub
pop
jmp
xchg
cmp
out
andnps
xor
jbe
pop
jp
sub
and
and
rcll
push
add
dec
addb
mov
cmp
jbe
cmp
add
sub
adc
jmp
mov
lock
ret
aas
std
sbb
pop
push
or
stos
test
dec
mov
or
xor
xchg
or
push
jl
aad
pop
xchg
ds
fldenv
sbb
add
jg
and
xchg
bound
push
int
bound
fs
testl
jmp
lea
fcomps
out
or
pop
inc
leave
cmp
outsb
cmpsb
or
and
sbb
mov
push
adc
fimull
repz
lods
int
sbb
adc
or
aaa
gs
fs
mov
das
inc
orl
xchg
pop
aas
xchg
pusha
push
rorb
loopne
js
mov
clc
daa
test
or
test
out
adc
push
les
hlt
pop
loope
dec
sbb
imul
mov
dec
orl
loope
add
fwait
loope
bound
mov
fildl
movsl
pop
lcall
sti
cmp
xchg
pop
scas
mov
cmpsb
inc
pop
mov
out
mov
sub
jmp
xorl
xchg
push
adc
movsb
pop
xchg
test
scas
sub
lret
pop
xor
in
inc
fsubrs
ss
repz
push
out
pushf
inc
and
stos
ds
adc
pushf
mov
loop
sbb
out
fs
cli
and
sub
pop
cld
mov
or
std
adc
addl
mov
pop
mov
pusha
bound
imul
mov
jg
cmc
mov
into
daa
lods
jne
add
incl
push
inc
loope
or
jecxz
mov
push
out
shll
pop
aas
in
stos
or
adcb
ja
xchg
scas
mov
mov
rcl
mov
cmp
push
insl
add
in
cmp
adc
out
pop
fimull
cltd
dec
sbb
sub
and
pop
loop
pop
dec
sub
fisubrl
sbb
sbb
and
xchg
outsl
xor
or
std
sbb
sub
jge
xchg
jo
jns
lods
sbb
repz
dec
lods
pusha
dec
clc
cwtl
rcrb
insb
push
shl
dec
add
in
clc
add
or
inc
test
inc
cld
fs
lods
dec
adc
pop
mov
xor
xor
mov
add
stc
sub
call
inc
jle
sub
nop
movsl
sbb
bound
mov
or
cs
add
outsl
push
jmp
nop
adc
pop
mov
xchg
call
outsl
ss
dec
mov
jp
mov
mov
repnz
lods
push
sahf
movsb
sarb
sub
es
fcmovu
cmpsb
mov
sbb
xchg
cmp
sbb
out
sub
pop
rcl
rorl
gs
fistpl
adc
enter
xchg
jns
and
aaa
cmp
inc
jae
mov
decl
xor
push
repnz
adc
add
cmp
cmp
aam
sbb
pop
shl
iret
add
gs
mov
xchg
cwtl
xor
mov
push
loopne
sbb
imul
fs
pusha
sarl
sub
mov
aaa
cwtl
cmp
or
push
inc
push
gs
fisubs
sgdtl
push
cwtl
jbe
push
pusha
sub
jae
xchg
jne
movsl
aaa
push
andb
es
shl
je
cmpsl
sub
dec
inc
and
daa
fwait
call
lcall
mov
pop
xchg
test
adc
jb
sub
push
jbe
aas
sbb
pop
add
repz
outsb
jle
roll
inc
fcoml
bound
leave
mov
adc
hlt
add
rcl
scas
test
mov
dec
sbb
rclb
rorb
cmp
cmp
jns
aam
pop
add
and
pusha
mov
mov
negl
pop
fs
je
push
or
ja
das
inc
loop
les
pushf
mov
cli
or
scas
xchg
inc
jo
in
or
mov
inc
mov
sub
pop
xorb
pop
es
sbb
hlt
mov
lods
addr16
fsubrs
mov
stc
std
je
lock
ficomps
xorb
sub
sbb
dec
mov
push
ja
testl
cmovo
rorl
call
lret
cld
in
inc
jnp
add
jae
iret
jecxz
xor
inc
es
cmp
jo
repnz
or
adc
xor
icebp
outsl
sbb
xor
aad
inc
enter
inc
push
and
pop
push
fistps
lahf
sub
lods
repnz
jg
xchg
lods
dec
sti
es
ret
xor
js
pop
jbe
and
lcall
clc
dec
inc
jle
leave
lahf
popa
xlat
faddp
dec
out
std
jb
lock
and
daa
fsub
jg
test
mov
int3
lock
in
ret
sar
dec
cmpsb
add
pop
mov
mov
push
inc
xchg
push
dec
sbb
jmp
dec
pop
into
cwtl
ficoml
xor
outsb
mov
mov
js
leave
repz
test
xchg
out
xor
loopne
inc
pop
jno
sahf
inc
int3
cltd
test
les
popa
pop
nop
arpl
pop
push
mov
test
cmc
mov
jge
scas
jle
mov
inc
in
or
enter
jp
dec
or
js
aam
cpuid
xchg
push
mov
and
jno
pop
cmc
mov
dec
addr16
or
test
lods
xor
mov
imul
std
lock
mov
loope
daa
popf
or
cli
filds
sbbl
pop
sub
add
mov
repnz
pop
or
les
and
mov
bound
out
repz
push
popa
mov
scas
cmp
arpl
fwait
and
das
adc
into
jae
jne,pn
mov
sub
xchg
cmp
mov
sbb
sbb
jecxz
cltd
cmovne
push
loop
dec
jnp
insb
fisubrs
scas
push
sub
mov
jle
pop
pop
adc
cmp
fsubl
imul
shll
insb
stc
add
aaa
out
arpl
pop
and
jne
repnz
enter
gs
sbb
inc
adc
sti
adc
cs
mov
push
push
jg
xchg
inc
lcall
xor
xchg
pop
pop
ret
pop
fbstp
jo
fcomps
shrb
inc
sar
fs
enter
mov
imul
aaa
cmp
lahf
push
js
xchg
lock
repnz
int
lcall
cltd
jns
stos
divl
sub
scas
in
sbb
aam
imul
scas
sub
dec
pushf
xchg
sbb
push
movsb
push
push
or
jno
jmp
ret
or
adc
sahf
xchg
in
and
fnstsw
push
jecxz
and
cli
sahf
repnz
dec
or
dec
xchg
imul
push
dec
lea
aaa
sar
mov
fsubs
mov
stos
jne
jo
mov
mul
adcb
imul
jg
sbb
dec
dec
xor
add
sbb
and
mov
pop
stos
push
js
clc
sbb
popa
scas
add
lock
dec
and
mov
sti
push
testl
gs
jo
cmp
mov
les
aaa
data16
lret
lret
push
out
call
iret
push
lret
jbe
push
mov
fiadds
dec
sub
shrl
push
fcmovne
gs
into
dec
dec
and
cmp
cld
clc
ds
out
and
das
push
dec
mov
jo
and
insl
add
xchg
icebp
insl
add
cmp
pop
and
mov
repz
fwait
xchg
nop
icebp
or
mov
ljmp
or
cmpl
or
outsb
lahf
imul
sti
out
jge
fcmovnb
push
ret
roll
jmp
push
dec
xchg
inc
rorb
inc
sarb
int3
pop
lcall
cmp
pop
xor
mov
sub
jge
sub
fstpl
cmp
fildll
pop
or
xchg
ljmp
xor
mov
and
sub
xchg
arpl
rclb
mov
lret
jge
push
pop
mov
ja
pusha
pop
aam
idivl
sbb
sbb
in
in
pop
ljmp
inc
movsb
stos
daa
pop
or
jb
jge
gs
je
popf
push
aas
xor
test
repz
dec
add
xor
lods
gs
and
xchg
xchg
push
push
inc
mov
cld
mov
mov
adc
inc
in
mov
add
add
push
jo
imul
pop
or
and
in
rolb
mov
and
xchg
mov
jno
out
add
push
lcall
jb
xchg
fsubs
jbe
sub
xchg
mov
ds
jne
loope
inc
rcrl
test
dec
repz
push
cli
dec
outsl
pop
sbb
out
mov
or
cmp
hlt
lea
testl
out
mov
sub
aam
push
xlat
push
pushf
int3
pop
xor
aaa
mov
adc
dec
cmpsl
cld
js
push
les
push
ja
loop
and
jnp
xchg
xchg
popa
mov
add
and
shrl
jno
mov
push
mov
mov
push
inc
or
push
js
icebp
loop
mov
adc
mov
int
cmp
clc
addr16
xchg
ficoml
ficompl
stc
jo
loope
mov
dec
stos
int3
pop
and
xchg
add
mov
shlb
sbb
xor
mov
jns
ret
mov
fnstsw
iret
ds
pusha
movsb
iret
out
repz
fsubrl
xchg
repz
jg
inc
pop
push
rcrl
ret
mov
aas
in
add
mov
vpackssdw
xor
lcall
xchg
data16
clc
mov
mov
push
dec
mov
js
pop
enter
lret
and
in
and
mov
or
stos
movsl
xor
popa
inc
aas
sbb
push
xor
and
inc
lock
cmpsb
or
push
adc
mov
push
repnz
sbb
sub
mov
sub
pushf
adc
out
cld
inc
les
test
mov
or
add
ljmp
sbb
push
js
push
pusha
xchg
jge
inc
roll
xor
jb
mov
arpl
pop
je
adc
xor
mov
lods
test
xor
mov
dec
fsubs
loopne
jg
sub
es
fldcw
andl
stc
cmpsl
push
fmulp
jb
push
mov
icebp
movl
sbb
fmuls
cwtl
daa
fsubl
xchg
push
xchg
cmpsl
or
or
orl
rorl
pop
aas
or
test
or
es
sarl
mov
ja
or
dec
stos
push
pop
lock
loop
je
and
fldl
mov
mov
jb
ret
popf
xchg
cmp
push
jne
mov
pop
scas
mov
cltd
push
stos
cs
aam
mov
adc
dec
in
imul
std
das
push
ret
lret
jbe
jnp
inc
cmp
lret
shrl
xor
sbb
xor
lds
mov
jnp
xor
mov
inc
mov
pop
add
sbb
jnp
mov
fwait
cmp
adc
sahf
mov
js
js
orl
stc
daa
xchg
xchg
inc
jbe
xchg
jmp
inc
xchg
daa
adc
lea
push
dec
jbe
call
mov
pop
stos
sar
push
ret
pop
mov
stc
jle
mov
and
push
and
mov
mov
repz
pop
push
rcll
mov
sbb
mov
dec
aas
std
xchg
pushf
pop
call
sbb
fdivs
loop
subb
in
rclb
xor
addl
insb
jb
loop
pop
or
cmp
inc
fmull
ss
or
stc
nop
psubw
inc
sub
lahf
je
das
add
test
dec
inc
xchg
xor
mov
es
jle
pop
pop
mov
pop
jecxz
fistpl
daa
shrl
imull
and
imul
push
ljmp
or
mov
mov
cld
push
addr16
jae
xor
mov
hlt
dec
mov
xor
adc
sbb
cmpb
and
fisubl
call
ljmp
test
iret
sbb
test
shrl
ficompl
jbe
int
push
mov
je
mov
lcall
notl
xor
sub
mov
inc
mov
xor
xor
mov
fdivs
cmp
jns
inc
sub
imul
or
xchg
stos
push
pop
inc
mov
imul
inc
fcomps
lds
addb
and
pop
movsb
hlt
cmp
rcll
xchg
fidivl
mov
test
int
jne
sbb
cld
ss
xchg
out
add
adc
pop
dec
adc
test
lcall
test
imul
adcb
dec
mov
sti
sbb
xor
leave
mov
or
mov
imul
in
adc
fidivrs
ficomps
mov
xlat
push
mov
xchg
gs
push
ret
into
mov
mul
add
ljmp
xchg
outsl
popa
lods
push
inc
xor
mov
in
jp
cli
ss
jg
sbbl
or
xchg
int
jno
mov
pop
fisubrl
loop
fcoml
mov
daa
cmc
add
in
dec
sbb
andb
dec
dec
out
in
rolb
out
cmpsb
adc
arpl
out
inc
or
inc
das
jno
sub
push
cmp
repz
mov
xor
es
inc
enter
scas
jns
fadds
xor
mov
sbb
xor
jae
sub
xchg
dec
pop
fucomp
xor
xchg
dec
push
push
add
dec
loopne
jae
data16
cltd
pop
push
sub
push
fwait
adc
stos
pop
mov
jmp
inc
xor
adc
adc
lret
pop
mov
ret
and
je
call
outsb
cmp
cli
adc
xchg
cmp
push
sbb
sub
hlt
xor
jns
jle
imul
pop
fsubs
pop
ret
xchg
iret
push
test
jb
mov
rcrb
add
ja
dec
sbb
fisttpll
push
pusha
out
and
cmp
stos
push
xchg
hlt
push
dec
dec
aad
cmp
rcrb
push
nop
lret
dec
popf
or
mov
lds
addps
leave
xor
pushf
dec
xchg
adc
repnz
mov
jbe
fs
pushf
int3
add
mov
in
leave
add
adcb
pop
aaa
xchg
and
lds
lret
xor
out
ds
dec
pop
mov
ss
insb
pop
jecxz
inc
mov
call
dec
dec
hlt
or
cs
or
lret
pop
cli
into
pop
addr16
cmp
push
gs
push
aam
sub
enter
arpl
outsl
mov
rcll
jge
int
cmpl
adc
push
sub
in
push
in
andl
icebp
subb
test
bound
lea
mov
call
sbbb
inc
vpmaddwd
sub
gs
jno
or
xchg
mov
movsb
sbb
aad
jmp
push
sub
lcall
loope
mov
cmp
adc
scas
outsb
data16
in
stos
adc
movl
shll
mov
sbbl
rol
les
push
gs
mov
jae
loopne
pop
loope
xchg
pop
cltd
sbbl
daa
or
lock
jo
ret
pop
loope
fstl
cwtl
mov
mov
push
sub
inc
xchg
jnp
cmc
adc
aas
fwait
cltd
in
orb
adc
es
data16
je
push
scas
mov
sti
andb
inc
mov
icebp
mov
mov
push
mov
fmuls
sarb
xchg
hlt
in
fimull
aaa
lahf
call
mov
test
lock
int
xor
jle
daa
pushf
pop
and
je
inc
push
dec
enter
mov
pop
sbb
pop
fcmovnbe
mov
shr
repnz
sbb
in
or
outsl
inc
ficoml
notl
test
fldcw
mov
lret
jl
and
stc
lcall
movsb
sub
in
std
dec
dec
popa
dec
aaa
xlat
dec
mov
inc
les
xchg
in
and
push
inc
jecxz
dec
or
push
int
inc
je
and
loop
mov
sub
stos
adcl
inc
shrb
lods
push
cmp
jge
adcb
pop
test
enter
adc
add
dec
daa
xor
and
ds
cmp
in
mov
shll
mov
cmpl
or
cmp
loop
mov
mov
imul
pop
faddl
push
sub
push
sbb
jo
cmpsb
push
xor
lods
scas
fwait
addr16
into
testb
xor
js
jmp
lcall
inc
jb
add
test
lahf
outsl
sub
in
sbb
sbb
jl
xor
xchg
loope
add
and
lcall
lea
shll
lea
xchg
idivl
cmp
ss
pop
mov
jge
xlat
adc
or
sub
xchg
mov
ljmp
sub
dec
add
ret
mov
sarl
fistpll
lretw
enter
jnp
pop
inc
xchg
lret
cmp
stos
cmp
xorl
mov
cmpb
mov
stos
mov
pop
or
push
adc
dec
test
add
repnz
je
mov
jns
mov
jb
out
bound
jae
sbb
mov
dec
xorl
adcl
mov
mov
push
das
fptan
lock
outsl
rclb
add
pop
std
rcl
jmp
add
leave
movsb
decb
and
xchg
push
pop
gs
hlt
adc
cmpsl
test
lock
jnp
jge
cmp
push
push
jns
mov
sarl
ret
popa
dec
mov
mov
pop
rcrl
push
lret
xchg
xor
jb
pop
ret
in
jg
mov
fidivrl
test
fdiv
sarl
sahf
or
iret
imul
sbb
dec
rorl
push
cmpsl
and
pop
cmc
out
sbb
mov
cmpsl
mov
mov
loope
xchg
lcall
push
ret
sti
xchg
insl
fimuls
push
cmp
xchg
fdivr
xchg
aaa
stos
data16
jp
hlt
movsl
rorb
cmp
mov
adc
mov
xor
popa
sub
enter
aam
inc
jne
cmp
and
int3
loopne
imul
pushf
cmp
xchg
xchg
jbe
fsts
add
mov
repz
aad
add
sub
sbb
sbb
mov
cmp
outsl
xor
mov
ljmp
xchg
and
aam
icebp
mov
xchg
arpl
and
jge
dec
call
mov
das
mov
xchg
xchg
inc
sub
jg
inc
mov
jge
push
sub
jg
inc
xchg
sbb
push
jno
dec
cli
shr
cmpsb
mov
ret
jg
jmp
xor
xor
mov
rcr
xchg
add
mov
ficomps
lods
in
pop
or
test
mov
jne
outsb
mov
cli
lret
cltd
incb
mov
movsb
pop
dec
fdivrs
flds
mov
lea
test
pop
int3
and
movsl
in
push
mov
sbb
and
movsb
jge
push
mov
pop
jecxz
int
pop
cld
dec
stos
push
cmp
lods
js
aad
sahf
scas
jecxz
push
fdivs
sti
lds
iret
in
rorb
stos
mov
shlb
jae
pop
insl
or
cmpsb
repnz
ja
and
mov
xchg
fistpll
and
mov
add
pop
lods
popa
push
ficompl
sbb
lea
ret
cmp
xchg
out
cld
out
pop
mov
int
mov
out
mov
add
lret
mov
cmpsl
cmp
test
mov
repnz
or
mov
jns
adc
inc
fiaddl
out
out
xor
cwtl
loopne
dec
cmp
xchg
popa
in
mov
inc
shlb
adc
jne
or
popf
pop
sub
xor
lods
inc
xchg
lahf
dec
push
lret
dec
or
cmpsl
enter
cltd
add
xchg
and
mov
xor
adc
xchg
rolb
fdivl
lods
outsb
cltd
test
xor
lcall
adc
inc
sbb
faddp
jno
imul
daa
and
or
xchg
nop
popa
adc
and
mov
mov
mov
rorb
daa
inc
jne
and
lret
jmp
test
clc
inc
xchg
mov
int3
repz
dec
cmpsb
in
out
and
fwait
nop
jae
or
xor
enter
xchg
mov
add
jmp
hlt
mov
out
jle
xor
ljmp
pop
mov
jg
fistpl
enter
jmp
cmp
test
inc
xor
loope
adc
in
sub
sbb
push
mov
cs
outsl
push
jl
push
push
xchg
fistl
aas
cmp
push
test
xchg
imul
push
int
loopne
and
add
dec
je
int
std
or
push
mov
xchg
mov
cmp
hlt
lods
movsb
xor
call
imul
cmp
enter
xchg
jp
lds
ljmp
cmp
push
push
sub
repnz
inc
ret
mov
pushf
cli
jecxz
scas
jge
fldt
scas
sahf
jae
mov
add
or
dec
out
and
roll
sbb
xchg
imul
and
sahf
cmp
shl
lods
xchg
out
and
sahf
aam
int
inc
jns
movsl
cmp
or
xchg
push
add
leave
fnstcw
cmp
or
mov
adc
push
mov
add
mov
call
or
leave
hlt
mov
lock
cmp
mov
sub
lds
sbb
sti
fwait
test
fwait
pop
gs
movsl
popf
sub
push
jno
test
sub
std
loope
loopne
xchg
adc
sbb
fwait
test
pop
xchg
mov
xchg
ret
xlat
and
ror
stc
dec
jle
sbb
incl
push
ljmp
jb
inc
xchg
and
cmp
loopne
int3
stc
loop
xchg
insl
xor
pop
cmp
ret
shlb
xchg
sub
inc
outsl
adc
dec
push
push
dec
push
out
mov
cli
inc
cld
addr16
insb
push
mov
jb
jns
ds
subb
test
inc
ja
in
push
jle
pop
or
js
dec
or
fcomps
in
add
xchg
stc
repnz
adc
pop
ja
add
loop
cld
sub
loopne
out
jle
fs
mov
mov
lock
shr
repz
popa
sub
jl
stc
mov
mov
add
pop
js
loopne
test
ja
shlb
sub
add
cwtl
sbb
mov
ret
lcall
dec
lods
push
stos
stos
pop
popf
popf
add
mov
daa
mov
jecxz
fmull
and
es
pop
mov
mov
loop
pop
in
cmp
jl
mov
sbb
roll
and
cmp
and
rcrl
dec
sub
lock
clc
mov
mov
cmp
movsb
jge
scas
push
and
test
fisubl
mov
or
lcall
stos
cmpsl
add
pop
shl
addr16
cli
jmp
inc
jne
push
fdivr
dec
std
clc
aaa
dec
cli
ret
and
insl
inc
sbb
fs
xchg
femms
mov
xchg
mov
jbe
sbb
xor
xor
mov
cwtl
shrb
out
mov
les
les
fldl
mov
and
call
in
push
pushf
imul
sbb
mov
dec
xor
fmul
pop
ss
dec
or
xor
pop
inc
pop
mov
jle
fs
jge
xchg
cmpsb
daa
das
xor
adc
xchg
push
insl
cmp
inc
sarb
pop
jmp
fucom
fwait
inc
cwtl
sub
mov
add
outsl
mov
or
and
adc
jbe
or
mov
fcompl
xor
sub
int3
inc
or
cmpsl
push
dec
and
je
fwait
loop
mov
cwtl
fisubs
or
push
js
test
repnz
sbb
jecxz
or
int
mov
xchg
into
addb
push
jb
dec
lods
dec
xlat
stos
pop
int
ljmp
mov
outsb
inc
divl
outsl
pop
push
and
into
xlat
lock
fiadds
ds
arpl
inc
mov
pop
popf
and
out
push
sub
int
push
andl
mov
jmp
loopne
in
aam
mov
adc
in
pop
jae
mov
icebp
je
push
popf
sbb
mov
lahf
std
sbb
enter
lahf
push
imul
mov
xchg
leave
pop
push
roll
dec
push
push
push
imul
sub
cld
pop
xor
dec
and
sbb
sarb
inc
lods
push
vpaddusw
addr16
pop
add
mov
icebp
xchg
in
call
lea
sub
xor
lods
sbb
pop
or
pop
pop
test
rcll
repnz
mov
test
icebp
push
mov
jae
in
sub
jne
jb
cmp
cmpsb
sbb
ds
loop
xchg
mov
inc
push
xchg
test
inc
jmp
push
lea
mov
and
lock
xchg
inc
lea
lret
iret
adc
in
xchg
sub
mov
bound
cmc
adc
mull
in
or
mov
cltd
test
aas
test
ja
pusha
pop
pop
adc
cltd
push
cmp
and
es
test
cmp
sub
cmpsb
imul
pop
bound
inc
push
popf
movsl
and
sub
or
leave
pop
mov
add
jno
add
popa
add
fdivl
mov
mov
and
sub
adc
jo
jb
test
adc
mov
lahf
jge
or
sbb
subb
mov
jl
movsl
cwtl
imull
rclb
cmp
out
js
cmc
adc
imul
push
push
addb
cwtl
cmp
lahf
pop
jbe
xor
push
es
and
iret
gs
repnz
cli
je
add
sbb
ja
cmp
xchg
popf
jnp
out
rclb
and
cmp
jecxz
mov
pushf
mov
outsl
pop
inc
pusha
inc
test
mulb
jge
dec
jbe
lock
jno
scas
xchg
push
movsl
pop
push
call
fisttps
xor
mov
xor
and
jns
inc
xor
cmpsl
loopne
shl
mov
cmp
aas
cmpsb
or
dec
leave
jle
mov
mov
mov
push
lret
jle
lock
cmc
pop
add
aad
mov
aas
add
mov
popa
cmc
xchg
adc
mov
inc
or
sbb
push
icebp
out
add
arpl
in
lret
rcll
and
loopne
rorl
pcmpeqb
mov
fiadds
aaa
mov
fs
test
rorb
lcall
mov
mov
out
test
inc
pop
xchg
imul
fcoms
popf
ret
out
into
push
loopne
xorps
sbb
adc
and
data16
adc
and
mov
jmp
cld
test
or
mov
jg
dec
jp
pop
push
out
popf
jp
repz
roll
or
sub
push
mov
stos
cmp
hlt
repz
nop
jbe
jns
popf
pushl
xchg
mov
dec
adc
je
jle
ds
mov
leave
fists
loopne
fcomps
adc
testl
sub
and
mov
stos
inc
mull
adc
xchg
or
push
nop
push
out
push
es
movsb
hlt
pusha
roll
xor
cs
andl
dec
dec
mov
mov
loop
scas
dec
rcrb
pop
ret
cmp
mov
cmp
lods
outsl
push
in
mov
jp
dec
or
lret
pop
adc
jge
dec
jmp
or
lods
js
pop
mov
push
int
jmp
sbbl
sub
or
inc
pop
adc
mov
imul
js
lock
sbb
enter
pop
dec
clc
xchg
inc
mov
cmp
insl
cmp
mov
shll
adc
test
gs
mov
mov
or
mov
xchg
sub
push
mov
iret
pop
ficoms
xchg
aam
stos
mov
mov
and
mov
shll
pop
adc
pop
jg
mov
in
ret
call
call
cmp
movb
imulb
pop
push
lret
push
adc
add
dec
enter
mov
loop
add
lret
sub
cmpsl
loopne
mov
loop
out
mov
dec
rorb
popf
mov
sbb
sti
movsb
repnz
movb
dec
popf
fwait
mov
loope
mov
outsb
mov
adc
mov
test
pop
shlb
xor
add
dec
or
in
js
add
lret
push
cmpsb
or
push
fwait
adc
inc
inc
push
fs
dec
jge
lock
jp
stos
xor
movsb
pop
idiv
fildll
mov
xorb
outsb
pop
sub
push
xor
mov
test
lods
rcrl
lret
mov
iret
int3
popa
jecxz
push
xor
jne
push
add
shll
xchg
pop
xlat
dec
sti
int3
jo
jl
mov
outsl
jno
xor
and
int
mov
cmc
aam
inc
mov
arpl
mov
push
inc
rolb
add
popa
dec
cmp
pusha
dec
pop
jnp
and
push
fcoml
dec
mov
mov
cli
mov
xchg
sbb
jl
fs
mov
jecxz
scas
fwait
xor
push
pop
xchg
icebp
aam
jmp
ror
dec
in
jne
mov
jb
add
and
pop
jmp
xchg
cmpsb
test
outsl
loopne
fbstp
fwait
push
xchg
into
pop
aas
lahf
dec
lahf
lods
adc
pop
out
jb
ror
sbb
aaa
pop
fisubrl
jo
lcall
loope
xor
lahf
inc
les
mov
sub
cmp
les
or
cmpsl
inc
mov
push
xor
pop
shl
mov
pop
ret
lret
push
lret
pop
stc
cltd
cmpsb
push
aam
xchg
adc
lods
mov
sarb
cmp
and
lods
sbb
in
pop
xchg
jo
push
pop
sbb
repz
mov
outsb
rcll
lcall
cmp
push
fsubl
and
lods
sbb
inc
jg
and
jns
in
mov
rol
inc
rcr
sub
repz
in
mov
adc
adc
sub
jnp
adc
sub
flds
out
pop
jecxz
push
cld
ret
ljmp
mov
mov
push
outsb
adc
or
outsb
sbb
and
sub
lcall
bound
addr16
sub
add
neg
xor
hlt
cli
repnz
fadd
sbb
fisttps
jp
cli
jecxz
rclb
ljmp
mov
idiv
xor
data16
js
inc
clc
dec
pushf
testl
fsubl
sub
fs
popf
sub
loopne
mov
ror
sub
imul
or
cmp
and
jg
dec
fisubl
jmp
pushf
inc
repz
mov
ljmp
and
xor
addr16
fistpl
loope
sbb
sti
xor
dec
xchg
mov
and
ds
cmpsl
and
popf
fmull
inc
lds
fwait
add
aam
or
pop
jp
loope
dec
mov
mov
aaa
mov
mov
xchg
js
addr16
fisttpl
iret
repnz
jae
add
loop
outsb
xchg
xor
fstp
dec
adc
es
scas
imul
xor
xlat
mov
fists
push
pop
add
or
leave
or
mov
and
insl
aas
sub
mov
add
jae
ljmp
insb
sub
mov
fs
xchg
jne
outsl
mov
divb
ss
in
bound
dec
adc
inc
add
icebp
test
mov
push
int
lret
pop
out
sbb
sub
mov
or
mov
jne
fcmovnb
stos
outsb
test
ja
out
adc
adc
dec
lcall
repnz
lcall
shrb
add
cli
cli
iret
xor
std
fwait
push
dec
xchg
and
icebp
or
les
push
inc
shlb
or
mov
andl
add
push
aad
jp
popf
cmp
push
jo
lcall
dec
psubq
inc
add
cltd
mov
js
mov
inc
or
adc
ljmp
pop
outsl
pushf
push
xlat
mov
jno
jmp
outsl
ljmp
jmp
div
inc
xchg
ss
lea
push
in
loope
mov
clc
repz
lods
mov
mov
pusha
scas
nop
xchg
in
hlt
mov
add
cwtl
xor
mov
decl
xchg
iret
rcrl
xchg
xchg
shl
sahf
cld
add
xor
and
xor
pop
xor
inc
daa
adc
hlt
add
jp
or
call
jmp
sbb
arpl
out
sub
pop
mov
out
mov
stos
aas
and
pop
js
imul
pushf
call
and
fst
add
or
add
sub
icebp
cmp
xchg
push
or
push
sti
push
inc
or
es
sbbl
addl
arpl
and
popl
push
lcall
add
call
loopne
push
scas
push
insb
inc
add
std
faddp
fs
inc
popa
adc
data16
inc
mov
push
in
and
aad
jne
mov
fistps
into
jl
stos
or
jle
jb
push
lods
push
dec
sbb
adc
ds
pop
xor
adc
jle
push
in
mov
add
popa
dec
mov
test
fs
push
shr
mov
or
push
mov
sub
fsqrt
lods
das
mov
lahf
movsb
mov
das
dec
std
imull
pop
int
xchg
gs
std
lods
stos
mov
repnz
mov
pop
jb
push
dec
ds
ret
data16
pop
test
mov
test
out
fidivl
add
inc
cltd
sahf
push
xor
mov
dec
int
cmp
sbb
sti
dec
cwtl
loop
out
cmp
jmp
push
mov
cmp
lea
das
fmuls
xchg
adc
push
cld
dec
adc
and
stos
xchg
mov
cmp
xor
cs
xchg
xor
sbb
add
xchg
cli
les
js
lods
in
por
das
leave
mov
or
lret
popa
and
pusha
stc
in
mov
ffree
ljmp
fimuls
cmp
pusha
mov
inc
js
test
and
fstpt
insb
nop
push
pop
call
je
cmpsb
lahf
mov
lds
add
xchg
addr16
imul
add
int3
in
sub
and
scas
mov
pop
inc
aas
dec
std
icebp
fwait
cmp
cmovl
sub
add
cmp
shll
jmp
dec
into
mov
das
cwtl
cmp
push
je
xchg
movsb
idivl
dec
in
inc
js
clc
hlt
mov
sub
or
insb
cs
jp
clc
out
das
adcl
push
testl
inc
jle
ret
sub
push
in
inc
insb
aad
adc
sub
andl
sbb
rcrl
inc
mov
sbb
testb
nop
hlt
jbe
xchg
push
dec
xor
push
xchg
push
adc
mov
mov
int
mov
add
rolb
sub
pop
rclb
and
stos
aam
cmp
fs
rcll
aaa
loope
pop
call
adc
sub
pop
fidivl
sbb
fisubrl
stos
pop
movsb
jmp
pop
and
pop
cli
insb
ss
cmp
ljmp
push
cmp
or
dec
add
popa
daa
dec
add
jg
cmp
jp
xlat
sbb
cmp
cld
and
outsb
test
sbb
push
js
xchg
jg
dec
fst
pop
push
push
fcmovnbe
cmp
cmp
sbb
ljmp
push
pop
popl
adc
sahf
cwtl
xor
mov
insb
dec
out
in
hlt
cmpxchg8b
inc
addr16
sbb
mov
jmp
add
shrl
pop
ret
loopne
es
call
cmp
xchg
shll
and
sbb
movsb
fcompl
xchg
adc
inc
mov
or
scas
ret
pop
sbb
sarl
testl
add
dec
adc
sbb
mov
pop
inc
fdivrs
inc
jmp
or
xchg
adc
jecxz
push
push
clc
mov
icebp
iret
sub
pop
ficoml
clc
pop
sbb
xchg
sarl
sbb
out
add
sbb
add
add
sbb
pop
mov
lcall
jecxz
cmpsb
adc
shrl
inc
movsl
dec
cmpsb
inc
dec
mulb
mov
and
mov
mov
add
mov
out
cltd
xor
and
inc
cwtl
in
shlb
xor
stos
divb
or
pop
jbe
fwait
pop
mov
movsb
imul
jle
jne
popa
loopne
ret
js
scas
outsl
fcomps
imul
sarl
push
out
test
adcl
xchg
int
jne
sub
jb
push
lods
aad
rorl
cmc
dec
into
fsub
aas
inc
mov
push
imul
call
sub
rcl
fsubs
jmp
xor
inc
shlb
lock
pop
mov
push
mov
mov
aaa
popf
fimull
popa
ds
xchg
jbe
jmp
out
inc
ss
fidivrs
xchg
das
sti
or
jle
ret
sbb
js
arpl
int
mov
dec
xor
mov
xchg
negl
std
xor
mov
cli
xchg
jp
fsts
pop
mov
adc
aas
dec
cs
into
push
orl
sub
out
ljmp
add
lods
sbb
sub
aam
dec
clc
fcomi
scas
add
add
push
inc
xchg
mov
out
jmp
and
jb
lahf
push
outsl
out
movsl
in
mov
xor
stos
xchg
cmp
cmc
nop
bound
pop
cmpsb
lock
jae
pop
lods
fldt
adc
outsb
inc
fcmovnbe
das
xchg
adc
pushf
push
ficompl
std
test
pushaw
inc
mov
jle
add
sub
std
mov
xor
cltd
ja
xchg
xchg
aad
mov
jmpw
rolb
mov
xchg
pop
sbb
fildll
daa
adc
push
mov
hlt
rolb
mov
movsl
ficoms
mov
ret
inc
cmp
sahf
repnz
dec
lret
lea
adc
pcmpgtb
daa
adc
sbb
ss
mov
lret
out
cmpsl
mov
int
sbb
xlat
sub
out
shl
cmc
add
and
sbb
std
es
aaa
mov
out
lock
sarl
flds
iret
push
addr16
aad
stos
es
mov
mov
js
inc
scas
jl
notb
out
outsb
fstl
js
movsl
test
jns
decb
adc
cmpsb
inc
sub
cs
and
in
and
mov
jmp
jl
xchg
mov
sub
sbb
test
sub
stc
rcrl
sub
inc
clc
xchg
stc
movsb
jge
mov
xor
sbb
and
mull
filds
or
or
sbbb
jg
add
xchg
sbb
push
dec
jg
fisubrl
movlps
outsl
in
loope
sbb
mov
pop
sbb
jns
mov
loop
push
xor
dec
pop
lea
jp
sti
mov
shlb
cmp
test
ja
addl
mov
movsl
push
es
pop
adc
jne
adc
dec
xor
push
fisubrl
stc
push
pop
xchg
adc
jbe
xorb
test
sub
int
add
scas
insb
cmp
xor
imul
rcl
lock
mov
ret
pop
jecxz
ss
loopne
ficoms
or
out
imul
pop
push
mov
mov
sub
pop
cmp
jnp
push
ret
mov
mov
int3
leave
sbbl
adc
mov
enter
ffree
movsl
dec
ss
ficoml
jns
xor
cmp
cmp
pop
sarl
fcom
or
nop
addr16
stos
ja
scas
cs
mov
sbb
orl
sbb
pop
mov
pop
jns
xadd
out
pop
in
mov
test
dec
sbb
mov
add
jle
sub
sbb
xor
sbb
add
imul
dec
popf
jle
push
out
loopne
sub
mov
out
jmp
ds
loop
jae
jmp
lcall
xchg
mov
and
movsb
sbb
mov
dec
cmp
jmp
xor
push
jg
insl
lods
and
arpl
int
pop
mov
push
sub
pushf
sub
inc
and
cli
sub
repnz
sarb
mov
movsl
inc
dec
jecxz
arpl
jle
fsubs
cwtl
aas
dec
mov
js
adc
push
jne
imul
xchg
lret
fsub
jmp
outsb
sbb
repnz
nop
adc
aaa
jg
xor
out
cs
jl
jg
jg
pop
loope
push
rcr
adc
push
outsb
les
xchg
in
inc
adc
sbb
xchg
in
cltd
mov
paddd
data16
mov
lock
clc
xor
mov
insl
inc
loopne
xchg
jle
push
dec
shll
cmp
ljmp
movntq
stc
fcomi
enter
sub
in
insb
dec
mov
mov
push
ret
mov
shll
cmp
fnstenv
ja
xchg
push
std
lods
sbb
repz
push
xchg
lahf
je
ss
jecxz
push
jg
mov
push
mov
lcall
int3
mov
aaa
imul
xchg
test
fdivs
jne
adc
fcompl
stos
push
lea
loopne
mov
cmp
cmp
repnz
mov
std
roll
mov
nop
das
ljmp
lods
cmp
dec
adc
sarb
inc
sahf
sbb
out
mov
nop
xor
lods
inc
push
je
out
push
sbb
push
cmp
or
sub
mov
mov
push
mov
pop
sbb
xor
xor
sub
adc
in
mov
dec
std
jae
rcrb
cmp
lods
andl
je
adc
test
mov
loopne
xchg
or
adc
ss
cmp
rolb
data16
dec
mov
pop
pop
sub
dec
pop
lcall
add
sbb
mov
fbstp
sub
outsb
push
jbe
stos
js
daa
sbb
pop
aam
rcrl
fsubrs
je
call
or
cld
push
or
mov
push
sub
xlat
mov
push
push
dec
xor
xor
push
sbbb
push
mov
hlt
add
andl
mov
mov
and
mov
sbb
aad
cmpsb
rclb
scas
cmp
je
cli
cmpsb
xor
sahf
mov
push
cmpsl
mov
push
clc
gs
pop
lods
xchg
fisubrs
add
or
cs
sub
fisubrs
push
pop
out
in
xlat
jge
test
shl
jno
int
shrl
rorl
stos
adc
pop
jmp
jge
jno
imul
sub
pop
and
out
shl
mov
xor
ljmp
push
jmp
repnz
jb
pusha
and
push
and
out
mov
jle
mov
push
dec
pusha
stos
enter
sub
xlat
jmp
mov
aas
dec
es
aam
xchg
shlb
xlat
xchg
iret
inc
dec
dec
stos
mov
pop
out
movsb
pop
cld
mov
negb
das
popa
in
cmp
jb
jmp
push
adc
xchg
repnz
add
arpl
jge
pop
sti
addr16
ljmp
jno
popf
sub
adc
aad
lock
jmp
dec
insl
cmp
mov
in
in
fdivl
jb
and
push
out
outsb
and
cmp
pop
test
insl
mov
idivb
mov
sti
dec
mov
lea
lds
aam
push
mov
jnp
loopne
mov
and
dec
push
loope
shlb
ret
or
inc
add
cmc
rorb
pusha
sbb
push
mov
sbb
jne
ja
sub
mov
mov
repnz
dec
pop
dec
repnz
testb
pop
push
cmp
scas
cmp
mov
ss
cwtl
pop
das
jle
mov
push
dec
inc
add
adc
xor
mov
in
sahf
sbb
push
daa
loope
pop
xlat
cmp
cld
lods
cltd
pop
adc
test
jecxz
or
popl
mov
push
jp
pop
clc
test
cmpsl
jbe
fdivrs
jp
xchg
popf
and
faddl
test
and
xlat
pop
addr16
sahf
mov
inc
inc
mov
cld
jae
out
xor
adc
xorb
data16
stos
sub
out
lods
lods
adc
imul
aas
hlt
std
stc
scas
test
sbb
test
cmp
das
add
mov
pop
outsb
jp
mov
sub
pop
cmp
call
add
push
jecxz
pop
shlb
and
lahf
lock
pop
scas
outsb
jbe
inc
xchg
cmp
call
inc
sbb
mov
test
scas
rorb
mov
icebp
lea
pop
pop
jle
jne
mov
mov
and
fs
mov
mov
pop
stos
idivb
push
add
and
mov
hlt
dec
imul
sbb
cltd
mov
test
loopne
lock
lods
mov
out
add
sub
push
lcall
scas
inc
xor
in
test
in
jae
mov
mov
jnp
mov
cmp
push
adc
in
push
push
pop
cwtl
ja
jge
ja
mov
pop
jbe
stos
out
scas
pop
xlat
sbb
and
stos
inc
fildll
imul
ja
cs
dec
sbb
xchg
rorl
sti
cmp
adc
leave
hlt
stos
rcrb
sbb
or
leave
mov
xor
xchg
mov
outsl
jg
ljmp
fsubr
xchg
call
into
loope
xlat
aaa
push
jmp
leave
adc
cs
mov
test
mov
scas
icebp
stos
nop
cli
and
adc
imul
mov
push
cmp
pop
mov
aad
add
sub
sbbl
dec
inc
xchg
push
test
movsl
and
sub
in
adc
xchg
push
movsl
addr16
jmp
imul
mov
dec
cli
xor
inc
add
aaa
lret
jnp
mov
cmpsb
jle
mov
rorl
sub
sarl
push
sbb
insl
cmp
in
push
inc
aad
fsubrl
mov
out
jns
aaa
sub
aad
movsb
or
dec
pop
into
push
xchg
push
or
fcmovnb
insl
cwtl
das
dec
mov
inc
enter
adc
aad
cld
pop
mov
jmp
test
aaa
rcrl
andb
repnz
and
lds
xchg
hlt
in
add
inc
scas
jge
jns
scas
dec
decb
fwait
daa
cmp
imul
stos
aaa
outsb
repnz
sub
xchg
add
add
push
push
hlt
or
or
scas
cli
ficoms
pop
repnz
push
loope
in
mov
fiaddl
mov
call
mov
and
lcall
mov
mov
ret
int
jge
pusha
aas
jmp
mov
sbb
iret
push
scas
repnz
cmp
xor
xlat
pop
push
dec
mov
inc
push
hlt
imul
out
jge
sti
cmp
mov
jg
loop
pop
mov
or
nop
lret
inc
outsb
fcmove
lds
cmp
fsubrs
xor
push
push
push
mov
fstpt
inc
jno
stos
mov
push
dec
jl
jle
nop
cmp
movsb
arpl
sbb
xor
aad
add
rcl
inc
mov
jge
mov
mov
cmp
and
imul
xlat
nop
shll
jge
jae
or
subb
cmp
xchg
mov
sarl
inc
lock
jne
movsl
mov
lcall
mov
lock
jns
dec
inc
mov
push
jle
jl
jecxz
push
std
mov
les
daa
pop
pop
popa
stos
lock
popf
add
call
iret
xchg
nop
push
inc
inc
in
and
adc
jmp
add
mov
xchg
add
into
lods
mov
mov
ljmp
popa
std
mov
inc
mov
mov
sbb
push
sub
les
or
pusha
inc
ja
sbb
jl
sub
sbb
sbb
adc
shlb
mov
in
sti
mov
jo
xchg
sarb
stos
or
jnp
mov
jo
sub
pop
push
dec
fsubs
and
mov
push
jno
inc
loopne
cld
jg
or
lods
sub
lcall
into
pushf
cmp
mov
imul
pop
loopne
nop
cld
cld
pop
outsl
js
push
lds
out
add
adc
sbb
cmp
out
outsb
movsl
add
mov
or
xchg
fldenv
repnz
subl
xor
push
sti
jb
mov
adc
mov
test
out
lock
gs
data16
inc
add
sbb
sub
cmp
inc
das
enter
movsl
fsts
pop
orl
sbb
dec
aas
mov
mov
sub
pop
pop
outsb
repnz
movsl
test
in
loope
popa
ret
popa
mov
add
jmp
cltd
pop
dec
out
xchg
push
push
jne
sub
add
mov
add
fdivs
loope
pusha
cmp
sarb
fisttps
mov
adc
inc
xor
xchg
call
xor
fisttpll
out
or
out
icebp
sub
dec
pop
inc
sub
add
outsl
mov
adc
xor
pushf
faddl
scas
fldenv
out
pop
and
arpl
or
mov
rcll
ds
and
inc
inc
cmp
xchg
cltd
movsb
mov
loop
dec
pop
leave
xchg
sbb
iret
xchg
xor
out
push
fildll
idivl
movl
dec
mov
jle
mov
mov
push
shrl
shll
and
jns
divl
mov
xor
ljmp
pushf
push
lock
mov
push
mov
insb
das
cmp
in
sub
push
cwtl
sbb
xor
rorb
and
cmpsb
f2xm1
sbb
sub
bound
sti
fldt
fsts
arpl
pop
ss
xchg
adcl
adc
or
pop
mov
test
xlat
orl
jl
stc
leave
fsubs
mov
loop
pop
stos
xchg
push
fistpl
jge
mulb
repz
jne
fstpl
notb
cmp
shrb
mov
pusha
sub
in
sahf
sbb
std
cmp
sti
jnp
push
into
shlb
xchg
push
lock
pop
aad
sbb
scas
loopne
push
pop
pop
add
xchg
aaa
dec
rorl
xchg
movl
mov
pop
subl
xor
das
xchg
test
stos
add
mov
adc
mov
mov
fxch
sub
push
loopne
sbb
add
lret
mov
xchg
mov
dec
push
rolb
cmp
jl
lret
mov
cli
sahf
out
rclb
push
movsl
push
or
and
fld
fbld
inc
mov
jo
adc
mov
lahf
subb
in
push
push
ljmp
ljmp
push
and
fmuls
minps
lret
mov
divb
int
mov
jge
or
arpl
inc
adc
add
fdivp
mov
push
push
rcrl
xchg
shl
lock
js
cmp
outsl
in
jno
add
shl
sbb
dec
aas
cmpsb
ljmp
int
sub
mov
insb
jl
pop
sarl
pop
lcall
push
popa
add
jge
pop
sbb
fs
adc
push
sbb
es
movsb
fisubrl
imul
push
addr16
call
es
sub
clc
xchg
daa
cmp
call
loope
sub
sbb
dec
dec
inc
pop
push
push
shl
dec
sahf
lret
cli
and
cli
flds
ljmp
outsl
xor
xor
adc
stc
adc
ret
xchg
xlat
xor
pop
mov
push
rep
insb
hlt
outsl
jb
or
jbe
xchg
loop
movl
push
xchg
mov
fwait
jno
xor
sti
int3
inc
mov
ret
lcall
movsl
cli
cmp
aam
imul
movsl
or
mov
enter
out
sub
xchg
jne
sbb
pop
fildl
or
in
xchg
shl
pop
sbb
mov
rcrb
cmp
lods
pop
in
loop
repnz
cmc
loope
pushf
pop
xchg
pop
sbbl
push
push
inc
sbb
hlt
sub
mov
lahf
and
xor
lods
push
mov
jmp
mov
jne
add
adc
test
sbb
and
mov
imul
pop
or
and
push
jecxz
enter
mov
push
in
xlat
and
jmp
sahf
xchg
push
dec
and
adc
xor
dec
sub
repnz
mov
aaa
xchg
jne
lcall
or
lret
sbb
and
add
es
lock
ja
mov
inc
test
and
push
nop
sub
sub
notb
cld
je
lcall
pop
bound
dec
movsl
mov
ss
and
xlat
jmp
lcall
pop
rclb
scas
out
mov
push
pop
inc
xchg
and
mov
imul
pop
cmp
xor
std
sbb
and
mov
fcoml
or
xor
adc
pop
imul
mov
pop
push
jne
add
dec
imul
or
adc
sbb
or
mov
mov
cmc
test
repz
jg
push
aad
xchg
and
dec
jbe
aaa
sub
out
mov
call
loop
push
cs
outsb
mov
mov
mov
sarb
xchg
out
outsb
sub
add
inc
lahf
push
out
push
lret
movsl
loopne
inc
xor
iret
jbe
pop
xor
in
mov
mov
jge
sub
pop
adc
push
cmc
sub
xchg
repz
pop
sbb
loopne
arpl
mov
js
push
mov
lret
test
sbb
repz
add
jne
xchg
lock
mov
xlat
lret
mov
ret
dec
popf
push
and
or
jno
test
or
xchg
les
mov
cmp
pop
xchg
dec
sub
pop
movsl
cmp
pop
adc
daa
pusha
lods
data16
dec
aad
push
ror
gs
faddl
jg
push
cli
adc
mov
fwait
mov
add
dec
in
dec
popf
jecxz
xorb
mov
and
xor
jmp
lahf
cmpsb
leave
gs
sub
stos
shl
test
xorl
lea
mov
mov
pop
ss
je
dec
or
mov
stos
jmp
movsb
dec
add
and
inc
mov
sbb
shlb
and
insb
es
jbe
out
jo
es
aam
lea
cmc
out
xlat
xor
sub
mov
mov
xor
loopne
or
adc
inc
fisttpl
movsl
or
and
test
push
mov
and
idivl
dec
out
imul
inc
fwait
push
call
mov
pop
filds
sub
sub
adc
jmp
sahf
scas
repnz
enter
and
int3
imul
jne
jns
ret
mov
lret
andb
xchg
mov
into
aad
pop
inc
daa
jns
sbb
fnstsw
dec
pusha
in
and
or
lods
dec
xchg
fwait
loope
out
lods
adc
adcb
inc
paddw
inc
orb
pop
jmp
jp
mov
xchg
rcrl
jbe
insl
mov
mov
xor
rorb
mov
lods
sbb
cmp
mov
add
mov
imul
rclb
ja
jns
dec
dec
stos
mov
imul
addr16
test
movzwl
pop
in
clc
shlb
jmp
adc
iret
xor
dec
and
les
jns
les
jp
fidivs
jo
pushf
cli
mov
inc
jge
mov
and
out
or
dec
xlat
jo
lods
adc
push
push
movsl
xor
and
nop
pop
cmp
addr16
add
mov
dec
in
pop
and
mov
scas
jne
into
dec
jecxz
leave
addr16
test
pop
mov
cmp
addl
xor
mov
daa
not
mov
pop
jp
adc
dec
shlb
and
bound
xor
daa
enter
mov
ljmp
stos
add
fistpl
mov
out
fimuls
push
xor
xchg
arpl
sbb
sub
mov
push
scas
cmp
in
out
aad
addps
xor
lahf
outsl
push
adc
xchg
xchg
mov
mov
mov
shrl
and
or
punpckhwd
aad
mov
adc
and
shlb
lret
xor
test
jbe
or
inc
sbb
cmpsb
inc
mov
pusha
ret
jne
adc
clc
outsb
addl
leave
adc
push
mov
and
pushf
mov
jp
dec
ss
mov
jbe
imul
orl
ficoml
push
jp
xor
adc
andb
or
dec
mov
fucom
add
push
stc
adc
out
or
bnd
xor
xchg
and
nop
jmp
add
inc
loopne
in
xor
or
notb
in
mov
into
shl
cs
jns
push
fidivl
loop
test
fistl
shrb
jl
add
fiadds
iret
push
scas
stos
repz
leave
push
push
mov
in
pusha
pushf
jmp
hlt
mov
xor
push
push
pusha
jl
out
cmpsl
pusha
xchg
jbe
jmp
in
push
pusha
sub
outsb
cld
es
jnp
movsl
stos
mov
lods
adc
divb
out
inc
loopne
adc
inc
inc
int3
jle
add
adc
nop
loopne
int
sub
lods
les
add
sub
cmpl
lret
stos
fisubs
stos
mov
push
stos
loopne
adc
mov
lahf
lock
fwait
outsb
xchg
fstps
push
fdivs
mov
in
in
ljmp
dec
ret
add
jge
adc
lea
outsb
cmp
lods
dec
mov
sub
xchg
xor
inc
lret
or
cli
sbb
xor
leave
daa
mov
enter
inc
push
cmp
lcall
sbb
jle
cmp
and
lret
xlat
pushf
lret
mov
in
aam
or
pop
inc
xchg
hlt
iret
dec
scas
fadd
mov
adc
push
push
rcr
cmc
push
rolb
jle
lret
daa
and
sti
fidivs
mov
mull
testb
mov
jge
xchg
fdivl
loope
cmp
cmp
jb
and
fstpt
orl
sub
clc
out
rcr
sbb
rcrl
loope
enter
int
pop
inc
clc
test
jp
stos
test
clc
mov
sbbb
mov
dec
push
cmp
in
in
ja
ljmp
or
inc
mov
jecxz
push
fadds
and
sub
jo
rcrl
repz
sbb
xchg
mov
cmp
mov
adc
sbb
or
shll
cli
repz
out
in
and
addr16
add
add
clc
stos
cmp
fstpl
cwtl
or
call
jnp
add
and
cmp
jmp
in
pop
iret
xchg
cmpsb
xchg
jmp
mov
xchg
dec
jp
jmp
adc
mov
test
aaa
push
movsb
cmpsl
roll
es
add
faddp
mov
lods
iret
clc
rclb
mov
adc
lea
popf
xchg
out
ljmp
imul
stos
pop
add
les
lock
pop
out
das
call
adc
pop
push
mov
xchg
arpl
cmp
addr16
imul
pop
lcall
push
dec
mulb
xor
cmp
pop
leave
std
lock
cmp
dec
dec
jo
out
pop
pop
push
pop
pop
icebp
xchg
cltd
mov
ror
popa
std
jmp
inc
lret
mov
inc
mov
mov
gs
push
enter
test
or
aas
dec
lahf
ss
or
mov
mov
out
mov
movsb
aas
aam
cmp
jb
and
out
cltd
fcmovnbe
xor
sub
test
enter
sbb
dec
mov
jno
cmp
aaa
dec
in
and
hlt
xor
iret
xchg
pop
mov
xchg
xchg
into
jle
imul
pop
lds
rclb
outsb
pop
popa
pop
outsl
lds
jmp
mov
mov
dec
lock
jne
iret
inc
mov
adcl
mov
inc
jp
or
int
aam
imul
add
jno
lods
pop
xchg
insb
push
add
stc
xor
dec
inc
mov
mov
lods
pop
shll
sti
mov
lods
into
bound
mov
mov
mov
mov
xchg
cmp
es
fsubrl
dec
jp
sbb
push
mov
push
mov
mov
vandnpd
jmp
das
popa
cmp
not
xchg
movsl
sbb
in
inc
sub
shr
jae
mov
xor
push
dec
push
insb
imul
add
stos
outsl
mov
mov
hlt
ret
fsubrl
js
enter
pop
push
jg
sbb
push
leave
mov
jb
or
xor
xor
and
dec
or
out
stos
or
aas
imul
xchg
push
jg
insb
jb
mov
and
jo
rorb
aas
fstl
mov
mov
orb
lret
dec
imul
mov
jns
adc
jg
xchg
decl
cltd
popf
adcb
ret
cli
push
adc
lock
mov
adc
pop
imul
dec
cltd
loope
lret
test
sbb
mov
fwait
push
pop
jbe
sti
push
hlt
in
sub
je
mov
push
push
enter
mov
adc
ds
xor
inc
jg
fwait
pop
testb
cmp
in
or
sbb
mov
inc
mov
adc
in
xlat
mov
ret
mov
nop
mov
leave
popf
and
and
push
xchg
lret
lcall
addr16
pop
enter
inc
mov
and
hlt
sub
pusha
sbb
es
movsb
gs
mov
pop
cmpb
cltd
pop
hlt
sbb
repz
outsl
rcrb
bound
insb
popa
sub
stc
js
sbb
push
clc
addr16
repz
mov
push
stos
lods
jl
aas
pop
inc
orb
and
loop
test
imul
repnz
or
and
cmp
je
push
adc
test
fmul
sub
push
rol
mov
mov
enter
jne
jge
bound
push
cs
mov
scas
xchg
adc
xchg
enter
pop
es
xor
scas
daa
repnz
adc
fimull
mov
jo
out
int
inc
add
inc
mov
lret
aad
mov
jb
outsl
mov
int
or
stos
ds
inc
cmp
push
fnstenv
cmpsl
lret
sbb
sti
xchg
mov
cwtl
sbb
mov
xchg
sub
dec
cmc
std
push
xchg
cs
cmpsl
push
int
mov
stos
pop
dec
aad
repz
out
sub
jo
xchg
and
dec
xlat
mov
add
mov
xor
icebp
scas
inc
sbb
cmpsl
mov
pop
push
adc
loopne
mov
adc
mov
cwtl
mov
out
clc
xchg
idivb
dec
fldt
pop
cmpsl
repnz
mov
cltd
lock
addr16
xchg
push
xchg
pop
fsubrs
add
das
pop
jne
push
jl
mov
ljmp
divl
fidivl
or
mov
rolb
mov
stos
cld
xchg
jno
fcomi
and
sub
subl
lds
jns
or
mov
lods
cmp
add
insb
sbb
js
jo
adc
mov
push
adc
test
fnstcw
stc
wrmsr
cmp
and
push
enter
lods
add
outsb
mov
push
mov
cwtl
imul
jecxz
xchg
mov
bound
bound
mov
mov
ret
pushl
xchg
in
adc
push
out
xor
add
in
or
lahf
add
cmp
icebp
roll
jne
hlt
cs
cmp
inc
mov
incb
xchg
mov
xchg
fistl
pusha
ja
shrb
push
and
mov
fdivp
and
push
jbe
nop
arpl
repz
sbb
or
in
sub
inc
or
sub
jp
adc
data16
in
mov
daa
inc
call
sbb
add
cmpsb
out
xchg
jl
popa
cs
cmc
hlt
xchg
ror
cmp
jecxz
repz
sbb
jno
adc
rcll
mov
push
mov
testb
jmp
ret
daa
mov
enter
adc
cmpsl
mov
mov
out
mov
push
lcall
jmp
stos
mov
adc
scas
call
add
jmp
dec
mov
mov
xchg
test
cmc
mov
sarb
frstor
push
js
push
xlat
aam
mov
fwait
int3
dec
mov
and
jns
js
movsl
mov
imul
fisttpl
sub
ljmp
push
jns
imulb
add
adc
int3
incb
sub
jl
lcall
out
cmp
loope
jl
unpcklps
pop
mov
lret
neg
cmpsb
outsb
mulb
jno
pop
popf
push
sub
aaa
xchg
les
add
aad
mov
push
push
xchg
xor
loop
adc
sub
dec
inc
sub
push
push
shr
movsl
jne
fxch
aad
pop
aaa
shlb
fsubr
jb
jle
mov
lods
xor
test
scas
sbb
incb
push
mov
lds
pusha
mov
push
fidivrs
xor
rolb
xchg
ds
sub
lods
push
imul
mov
shll
insl
inc
mov
adc
loop
cmpsl
in
idiv
cmc
pop
and
lea
pushf
cltd
sbb
jbe
xchg
sti
xchg
lock
jne
push
vpmacssdql
mov
mov
dec
add
inc
testb
insl
xor
hlt
push
jns
xor
inc
add
cmc
shrb
push
mov
jb
hlt
add
int
adc
and
adc
js
and
icebp
fcmovnbe
mov
mov
sbb
shll
loop
aad
mov
popa
outsl
sub
mov
lahf
mov
scas
push
mov
push
mov
popf
dec
add
int
mov
xchg
sub
ret
xchg
cwtl
inc
into
mov
xchg
push
sub
ja
js
dec
shrb
xchg
sub
sahf
testl
mov
loopne
ja
loopne
testl
xchg
arpl
adc
xlat
dec
out
or
sbb
cld
or
loop
and
mov
out
xor
testl
add
add
sbb
popf
xor
dec
insb
cmpsl
out
mov
inc
push
cld
mov
imul
sbb
cmpsb
andb
scas
inc
in
adc
mov
popa
mov
shll
pushw
insb
inc
div
xchg
adc
xor
stos
push
mov
jge
cmp
divb
jno
ret
pop
les
into
cld
mov
lcall
pop
imul
push
xchg
ss
pop
jo
or
out
addr16
xorb
xchg
adc
scas
or
out
lahf
insl
jns
mov
or
xor
lods
jp
push
lret
xchg
and
shl
add
pop
xchg
push
or
xor
pushf
or
xchg
cld
push
pop
sahf
jmp
mov
call
pop
mov
test
adc
bnd
or
test
sbb
sbb
push
xchg
or
mov
cmc
inc
adc
adc
bound
push
in
sbb
sbb
arpl
cmp
ret
dec
mov
lcall
in
dec
je
jbe
rcrb
mov
gs
cmp
mov
sub
orl
jnp
mov
ret
sub
adc
in
popa
popf
loope
jecxz
mov
stc
ja
call
leave
stos
les
cwtl
xor
js
scas
xchg
jbe
adc
sub
fmul
shlb
pop
lahf
jg
lea
idiv
push
aas
scas
and
sub
mov
sbb
xchg
jmp
and
out
cltd
nop
push
js
lods
test
fwait
lods
testl
test
out
xor
out
sahf
xor
int3
test
movsb
adc
push
pop
dec
pushf
mov
pop
pop
push
into
jmp
enter
push
mov
jmp
jl
mov
bound
repnz
mov
sbb
mov
pop
test
sbb
mov
sub
repz
xor
sub
cmp
test
je
imul
jl
add
sbb
jns
js
lock
jbe
jb
jae
daa
mov
jae
bound
shll
xchg
mov
fiadds
movb
testl
clc
adc
xchg
inc
cli
sbb
lret
cmp
mov
jl
loop
xchg
mov
jecxz
jno
add
scas
fmuls
inc
sbb
mov
fs
sub
ja
outsb
xchg
and
mov
int
rep
subl
inc
add
xchg
lret
sbbb
testb
nop
ror
fldenv
pop
ljmp
adc
adc
mov
and
std
outsl
decb
sub
rcrb
xchg
gs
mov
lret
xchg
pop
and
add
adc
movsb
mov
cmc
mov
sbb
pop
fsub
cwtl
fwait
jg
ret
test
adc
pop
sbb
xor
aam
cltd
cmp
jne
jnp
inc
xor
call
jle
rorl
xchg
and
loopne
or
in
mov
mov
mov
js
sub
mov
in
mulb
sbbl
or
iret
jns
repz
push
inc
push
fnsave
fadds
rclb
inc
imul
mov
and
frstor
dec
movsl
lcall
dec
cs
cmp
push
jg
dec
imul
adc
fucomp
pop
mov
movsl
mov
sbb
inc
pop
insl
mov
inc
frstor
jb
mov
nop
push
es
jo
dec
add
scas
or
clc
mov
mov
test
mov
mov
fcmovne
mov
sbb
and
dec
fistpl
adc
test
mov
je
and
mov
ds
aaa
add
mov
pop
sbb
ss
stos
xchg
xor
push
fbld
ds
or
or
pop
push
in
add
adc
stos
mov
add
daa
jnp
in
and
dec
lock
xchg
cmp
js
pop
jle
dec
mov
pop
sbb
outsl
frstor
push
clc
sub
movsl
jg
das
sub
xchg
sbb
arpl
cmp
and
popl
testl
aad
push
inc
stc
jbe
xchg
adc
cmpb
jge
sub
pusha
sbb
jge
adc
fnstsw
test
scas
fdivl
push
sbbb
ret
xor
mov
stos
pop
push
movl
test
cmp
in
inc
mov
add
or
xchg
adc
pop
inc
testl
fnstsw
sbb
sahf
add
out
jmp
mov
pop
pop
pop
or
and
repz
adc
xchg
inc
push
pop
jnp
xor
repnz
and
test
into
popa
dec
sub
outsb
shlb
in
mov
pop
sbb
frstor
sbb
js
lret
adc
add
dec
lcall
scas
jns
xor
dec
movsl
xchg
jmp
sub
sahf
mov
cltd
ja
and
jo
sar
test
pop
mov
add
rcr
pop
aaa
push
ficoml
mov
lcall
jg
out
int3
js
leave
pop
xor
sub
add
dec
mov
mov
adc
push
nop
xchg
in
out
jne
lock
pop
cmp
fsubrs
jecxz
fdivr
fildll
cmp
stos
sbb
xor
inc
lret
insl
outsl
sub
fiaddl
add
in
movsl
xor
das
lret
cli
mov
cltd
fwait
imul
movb
mov
pop
pop
and
jnp
mov
pop
fisttpll
pusha
xlat
add
jecxz
push
mov
dec
stc
inc
ja
int3
popa
or
in
fsubr
ljmp
insb
bound
dec
mov
mov
rcrb
mov
cmc
jnp
aaa
lret
dec
and
sub
mov
sub
test
cwtl
lods
push
roll
push
pop
xchg
dec
fldl
iret
sub
enter
ljmp
adc
clc
fdivrp
fadd
dec
mov
inc
jecxz
mov
cmp
pop
scas
mov
hlt
mov
push
movsl
push
popf
sarb
fscale
xchg
cmp
enter
outsb
jae
cmpsb
jl
jmp
dec
movl
gs
fisttps
nop
and
hlt
and
sti
push
and
pop
dec
mov
or
sbb
xchg
aad
add
faddl
push
sbbl
mov
xor
cs
lcall
pop
mov
jl
sub
mov
pop
and
mov
in
pusha
or
int3
inc
out
adc
mov
daa
icebp
and
xchg
cld
jmp
outsl
ret
xor
js
xchg
push
test
test
jecxz
aam
fisttpl
push
mov
and
test
xor
insb
sti
mov
pop
xor
add
pop
pmaddwd
idivb
outsb
test
adc
fcompl
add
cwtl
sbb
inc
mov
add
adc
pusha
mov
mov
adc
lods
das
nop
roll
cwtl
mov
dec
out
out
fistpll
orl
xor
push
into
jo
dec
xchg
imul
add
repnz
gs
mov
cmpsb
int
fcomps
push
int
pop
push
fdivl
aas
and
or
mov
or
subb
mov
pminsw
in
cli
cmp
push
imul
cli
mov
dec
ficompl
daa
iret
aam
sbb
xchg
lea
repz
cmp
out
ret
pop
xlat
jle
add
das
push
test
lds
and
in
xor
aas
aas
lock
inc
js
mov
sub
test
in
xchg
mov
insb
pop
scas
mov
stos
mov
test
pop
loope
cmp
lahf
addr16
ljmp
dec
mov
std
mov
lcall
mov
adc
push
js
sarl
jl
pusha
cwtl
lahf
mov
mov
fmuls
pop
repnz
ja
sub
push
fmull
mov
push
rcrl
daa
scas
xchg
arpl
mov
lods
push
and
js
add
cmp
pop
in
fisubrl
and
dec
outsb
xor
mov
aaa
in
inc
out
or
inc
cmp
lcall
test
ret
movsl
inc
sub
mov
lods
sarl
rcr
cmp
fcmovu
inc
icebp
int
dec
std
and
and
cld
xchg
adcb
sub
and
jne
jecxz
outsb
inc
pop
ret
sbb
lret
push
aas
pop
xlat
lods
inc
add
and
enter
or
fldcw
fwait
rorl
mov
push
mov
cli
loopne
outsl
mov
push
mov
cmpl
out
test
pop
fsubrs
and
or
mov
xchg
dec
movsl
rcrb
cld
adc
aaa
lret
adcl
dec
sub
jecxz
scas
leave
pop
inc
mov
daa
mov
ret
xchg
fsts
idivl
xor
cwtl
mov
xor
pop
mov
in
and
push
cmc
fcmovnbe
pop
pusha
cmp
dec
jno
daa
or
mov
imul
dec
xlat
pop
cmpsb
hlt
mov
pop
push
jmp
push
cltd
in
pop
stc
dec
pop
in
test
std
inc
pop
das
outsb
mov
inc
je
ffree
mov
popa
loop
lods
cmpsl
cmp
dec
pushf
iret
mov
inc
mov
xchg
add
xchg
lds
xchg
pop
fmull
in
and
mov
mov
push
pop
cmp
sti
ja
sub
insl
lea
jmp
icebp
xchg
push
inc
add
dec
mov
mov
mov
fidivs
stos
mov
xchg
xchg
out
cmc
pushf
mov
jl
pop
xchg
outsl
pand
stos
lret
sbb
scas
cmp
and
movsb
insl
ror
roll
push
add
aas
mov
jg
and
dec
lahf
mov
push
out
inc
or
push
mov
mov
into
and
and
out
push
in
test
pop
call
jo
mov
dec
jnp
dec
adc
lret
xchg
sarl
daa
aas
push
add
mov
ljmp
fdivrl
cmpsb
lret
xor
fdivrs
cmp
rorl
mov
add
adcl
test
in
sti
or
sbb
data16
inc
pop
inc
std
jle
dec
pop
lret
adc
inc
jo
dec
cli
fbstp
iret
or
out
pop
cmp
jecxz
pop
lahf
in
xor
icebp
lea
adc
andl
daa
cmp
xchg
mov
jl
dec
adc
in
xchg
in
and
mov
scas
mov
push
test
dec
mov
sarb
jge
pop
fcomi
in
or
cmp
push
pop
bound
dec
je
imul
mov
push
adc
hlt
inc
mov
adc
out
mov
jmp
push
setp
dec
mov
ja
fstps
cmc
in
js
imul
mov
mov
and
xchg
adc
lods
dec
add
enter
cmp
pushf
cmp
addb
lods
add
adc
bound
popa
stc
fsubl
insl
sbb
enter
sbb
dec
or
int
mov
mov
repz
dec
mov
lahf
and
je
jg
lahf
mov
mov
push
in
imul
inc
shl
jo
adc
inc
loopne
leave
xlat
out
pushf
mov
and
mov
ja
cmp
mov
js
xchg
jnp
les
int
sub
mov
mov
out
pushl
scas
imul
aas
sbb
adc
loopne
repz
sub
dec
cltd
pusha
negb
add
and
mov
ja
cmpsb
pushf
insb
sub
sbbb
add
mov
jg
sub
fldl
mov
rcrb
clc
jo
fndisi(8087
add
pxor
rorb
pop
adc
comiss
xor
inc
out
push
jecxz
push
inc
mov
aas
pop
aam
out
jecxz
sub
fucomip
xchg
out
sub
sub
mov
out
iret
xchg
enter
cmp
mov
or
bound
fs
jbe
inc
mov
push
cmp
xor
jge
dec
mov
cmc
aam
imul
cmc
or
idivb
add
sbb
xchg
dec
fstl
or
in
fxch
sbb
mov
mov
mov
sub
push
or
inc
and
or
int
stc
negb
push
popa
jecxz
pop
xchg
jmp
leave
cwtl
shll
test
pop
mov
mov
or
aaa
jb
int3
add
xor
adc
and
out
mov
push
out
sarl
jo
enter
andb
pop
cmp
ret
inc
adc
mov
iret
out
sbb
mov
xor
xlat
lods
add
cmp
insb
clc
stc
ljmp
cmc
adc
pop
push
cli
mov
xchg
adc
in
pop
test
xor
loop
outsb
mov
insl
jl
mov
xchg
add
xor
or
sub
idiv
sbb
arpl
sub
push
aaa
push
out
subb
lds
mov
popf
mov
inc
cmp
pop
sub
pcmpgtb
fsub
mov
inc
adc
in
stos
scas
in
dec
aas
lahf
imul
sub
mov
fisubrl
movsb
mov
pop
les
popa
push
les
lods
in
mov
aam
enter
lret
mov
repz
add
sub
mov
sbb
mov
and
pop
outsl
push
dec
pop
pop
xor
or
jle
stos
dec
in
nop
or
jle
mov
aas
and
sub
iret
sbb
iret
mov
prefetcht1
add
stc
sti
push
mov
jle
fmul
out
bound
ljmp
int
sub
mov
or
jns
sub
adc
mov
cmpl
mov
out
mov
xchg
dec
mov
jge
push
lods
loope
rcll
mov
lcall
cmp
push
push
pushf
adc
aad
cmpsl
xchg
push
outsl
cmp
cld
mov
lret
scas
sub
jecxz
xchg
movsb
inc
mov
repnz
scas
in
pop
push
push
inc
enter
adc
mov
xchg
push
xor
inc
insb
adc
movsl
mov
jo
push
mov
inc
scas
jl
outsl
sbb
mov
lret
xchg
addb
xor
fnstcw
subl
lahf
sahf
das
lret
stos
and
dec
rcrl
fnsave
popf
sub
push
or
sbb
dec
sbb
pop
bound
mov
cmpsb
dec
mov
xchg
jo
xchg
iret
nop
mov
add
jnp
hlt
aas
bound
std
add
ljmp
mov
int3
dec
xchg
jge
pop
iret
mov
sbb
jmp
pop
cltd
mov
sbb
add
int3
push
sbb
xchg
or
call
xor
sarb
leave
insb
mov
sub
jns
fsts
jge
lock
int3
push
mov
xchg
mov
sub
mov
mov
js
mov
xchg
mov
inc
push
rolb
xchg
or
xor
mov
fs
fistpl
shll
mov
sti
mov
mov
call
jno
iret
or
jp
dec
push
dec
lcall
or
xchg
rorb
sbb
lds
in
inc
mov
dec
lods
cmp
cwtl
sti
fs
pop
ret
sub
mov
jle
lret
fimull
inc
das
mov
call
sahf
cmp
stc
cvtps2pd
add
xor
cs
push
lahf
insl
cmp
outsb
out
insb
xor
adc
push
repz
adc
jle
in
bound
mov
add
jp
and
pop
xchg
nop
sub
jbe
push
push
xchg
cld
lcall
out
pop
notl
xchg
rclb
popa
lahf
cmp
cld
js
fbstp
cwtl
test
outsb
out
int3
scas
sub
insl
mov
shlb
mov
xlat
stc
lock
mov
loope
jbe,pn
jns
into
dec
mov
into
sti
repz
loopne
inc
xchg
loopne
adc
jp
push
adc
mov
xor
mov
inc
xchg
and
js
cmp
cmp
inc
pop
ficoms
mov
mov
xchg
inc
pop
test
push
cmc
and
jecxz
lods
inc
leave
sbb
jae
mov
loope
out
repnz
fadds
mov
push
jne
or
icebp
xor
and
sbb
lcall
cld
pop
in
xchg
add
lock
shll
outsl
dec
into
xchg
addr16
push
push
mov
mov
xor
std
sub
ret
fcmovne
sub
lock
fisubl
ds
mov
pop
lcall
or
xor
insl
cwtl
mov
pop
and
and
xorl
into
daa
mov
adc
js
pushf
add
mov
or
dec
jg
push
adc
test
jl
push
outsl
stos
mov
in
xchg
inc
or
addr16
push
adc
or
dec
pop
sahf
jnp
adc
js
mov
addb
mov
lea
cmc
inc
mov
cwtl
daa
and
lret
jne
inc
xchg
sub
js
popf
pop
xor
jne
pop
pushl
push
cli
push
mov
enter
lock
lret
cs
shrb
call
and
add
push
xor
pop
push
dec
add
mov
jo
insl
push
out
jecxz
in
add
xchg
dec
loope
pop
aam
mov
aad
dec
dec
cmp
inc
push
mov
imul
out
rcll
push
mov
or
loop
pop
mov
cmpsl
jge
sbb
inc
fisttpll
cmp
sub
int3
int3
insb
mov
or
shrl
addr16
pop
fcos
leave
outsb
add
mov
push
fistl
and
adc
and
push
xor
loop
scas
cld
push
jmp
adc
mov
call
or
into
or
bound
cmpsl
push
nop
repnz
xchg
adc
push
into
testb
sahf
lcall
cmpsl
rol
imul
negl
cmp
sbb
ljmpw
fnstsw
sarb
pop
dec
aam
loopne
mov
mov
mov
and
and
push
fwait
mov
idiv
lods
adc
inc
call
push
arpl
out
xchg
jmp
mov
rcr
fldt
cld
sub
push
add
fsubrl
roll
cmp
push
aaa
add
adc
scas
aaa
popf
hlt
aad
dec
lret
jbe
fldl
ss
lahf
loop
ss
roll
xor
cmp
jmp
xchg
xchg
xchg
insb
lahf
lock
cs
enter
popa
dec
mov
enter
jnp
jb
cmp
dec
dec
dec
push
pushf
jg
lret
mov
xchg
or
in
xchg
lret
aam
sbb
jmp
das
pop
in
push
mov
imul
dec
mov
or
das
push
or
mov
lock
shrb
sbb
sbb
ret
test
rcr
mov
ss
push
aas
or
cmp
mov
adc
dec
pop
dec
iret
adc
icebp
or
dec
jno,pt
imul
shrb
fldl
or
jmp
xorb
call
stc
or
jae
mov
test
push
or
aad
sahf
std
mov
ret
jecxz
and
js
and
sub
test
daa
fmull
push
imul
dec
aaa
je
and
xchg
enter
pop
jb
jge
pop
pop
lret
fwait
mov
inc
sbbl
and
cwtl
shll
cwtl
sti
jnp
jmp
out
and
push
ficomps
adc
mov
xchg
xor
movsl
icebp
ja
adc
and
fstpt
shll
inc
cld
nop
aad
mov
push
jbe
push
xchg
sub
jg
loop
stc
stos
mov
addr16
icebp
arpl
ret
push
lock
stos
push
push
cli
add
or
sbb
dec
arpl
mov
pop
lods
mov
add
stc
je
push
movsb
scas
xchg
dec
cmpsl
imul
jno
sub
jae
pop
add
mov
xchg
daa
mov
arpl
clc
and
fstp
mov
fidivl
popa
aaa
sbbb
mov
clc
shl
push
mov
daa
mov
dec
cmp
loope
fcomps
or
mov
sbb
pop
lret
and
jno
adc
aaa
lods
jle
ds
dec
not
out
shll
inc
and
ret
aas
push
imul
sti
adc
mov
es
shrb
cmp
idivl
jne
pop
cmpsb
mov
cmc
mov
lods
inc
pop
xchg
mov
push
mov
xor
ret
mov
test
icebp
cwtl
movsb
stos
fidivl
enter
enter
fcmovnb
or
adc
int3
incl
call
stos
sbb
mov
cs
pushf
mov
inc
cltd
test
icebp
inc
mov
fwait
xor
sahf
sti
rcl
lds
ja
push
cmp
lods
inc
nop
lcall
imul
insb
test
inc
adc
lahf
and
aam
cmp
dec
push
mov
push
sub
pop
orl
shl
mov
push
mov
hlt
lret
lock
outsb
mov
popl
and
scas
add
pop
xor
sbb
sbb
sti
push
fs
fucomip
xchg
xchg
loope
lea
or
inc
push
mov
xorb
aam
bound
xchg
xor
adc
xor
movsl
cli
xchg
adc
test
and
jno
lea
movsl
std
add
xorl
test
adc
pushf
push
sbb
nop
iret
pop
xchg
lock
pop
popa
pop
push
std
xchg
movsb
gs
xchg
xlat
pop
jl
push
push
in
pop
sti
xchg
shlb
js
inc
mov
cmpsl
cs
mov
add
mov
out
pop
xchg
out
xchg
add
fisubrs
mov
or
or
sarl
div
mov
cs
movl
dec
push
pop
adc
mov
push
push
add
rol
inc
pop
into
jmp
mov
pop
mov
fs
xchg
stos
pop
sbb
idivb
cli
xchg
xchg
cmpb
mov
add
mov
std
sbbl
mov
cs
insl
int3
loopne
xchg
jmp
dec
sbb
sahf
pusha
iret
push
xor
mov
sub
stos
push
push
cmp
das
or
sub
leave
fsts
push
dec
in
std
out
sub
push
inc
inc
rol
add
mov
stc
mov
rolb
fldt
inc
sub
ret
sub
mov
mov
into
pop
push
dec
cli
jecxz
fsts
scas
dec
dec
repz
mov
popa
insb
mov
lods
pop
incb
cmpsb
insb
es
ret
lahf
xor
pop
loopne
or
xor
push
cmp
das
push
ss
adc
arpl
jg
data16
cwtl
xlat
inc
inc
mov
pop
mull
cmp
test
fadd
jnp
mov
and
adc
rcrb
xor
leave
data16
bound
sbb
and
pop
push
inc
xchg
jg
stos
adc
adc
in
popa
xchg
jecxz
and
mov
push
movsb
mov
lcall
sahf
jnp
add
in
cwtl
jne
or
decb
outsl
ret
js
xor
lds
pop
inc
add
sub
bswap
mov
push
cltd
insb
lea
push
mov
adc
in
and
push
pop
jne
lods
dec
ret
es
mov
lock
mov
pop
cmp
lahf
add
iret
scas
js
jb
add
pop
es
fsubrl
inc
sub
movsl
fisubrl
mov
jae
into
jae
lfs
div
mov
shr
dec
in
in
push
mov
or
lods
or
inc
push
cli
fiadds
lods
rclb
and
imul
add
mov
cmp
xor
push
stos
xor
or
and
and
pop
or
push
push
dec
adc
jns
dec
call
lods
jmp
sbb
xchg
iret
insl
jge
sbb
sub
pushl
test
xchg
ja
fidivrs
pop
outsl
imul
aam
push
xor
fisubs
nop
pop
inc
test
fwait
xchg
stos
fdivs
mov
fisubrl
pop
lret
mov
inc
insl
jg
fcompl
stos
dec
or
or
iret
sbb
mov
jbe
mov
mov
pop
adc
sbb
jg
mov
push
clc
xchg
dec
hlt
fwait
shrb
mov
cwtl
or
mov
xchg
ret
mov
scas
lcall
dec
xchg
add
push
das
xchg
loop
or
xchg
div
or
fidivrs
lahf
mov
repz
xor
iret
and
adc
dec
mov
dec
add
push
nop
jecxz
fldl
mov
icebp
into
and
or
pop
arpl
xorl
and
fwait
popf
mov
ret
aas
repz
jae
movsl
in
mov
data16
jge
movsl
xchg
addr16
test
sti
pusha
cmp
iret
xchg
add
push
sub
and
inc
fcoms
dec
or
rclb
and
lds
idivl
mov
xchg
sub
cpuid
je
cltd
int
and
mov
out
popf
fnstcw
sti
out
mov
lret
push
imul
mov
leave
addr16
fnstcw
mov
jb
outsb
icebp
cmc
sbb
sub
inc
popa
sub
mov
jp
jns
sbb
add
pop
add
xchg
xchg
decb
and
pop
decb
add
xor
sbb
fstps
loope
nop
nop
inc
les
lds
jno
or
shlb
mov
push
imulb
cmp
pop
mov
jmp
sahf
xchg
xchg
xorl
inc
mov
inc
iret
xor
sub
iret
lea
imul
lock
stos
andl
sbb
cltd
xchg
adc
sarl
or
scas
mov
xchg
sbb
loop
and
lock
cmp
adc
jne
psllw
cmp
lods
jno
cmp
data16
imul
int3
push
pop
push
popa
sbb
push
sub
sarb
xor
sub
sbb
outsl
ja
and
dec
call
jp
inc
outsl
in
or
scas
mov
lahf
xor
lret
popa
mov
and
call
test
shrb
jne
push
scas
ds
mov
jne
movsl
cmpsl
jb
adc
or
jg
dec
dec
out
mov
sahf
fwait
push
mov
add
or
cs
out
nop
shlb
inc
mov
hlt
inc
and
fbld
xor
and
imul
pop
pop
aad
mov
repz
xchg
inc
out
fwait
jb
pop
movsl
cli
aam
adc
xor
movb
out
pop
roll
std
es
lcall
jb
xor
add
pop
fwait
sub
jbe
inc
pop
rcr
shl
pop
shll
push
shl
mov
ror
imul
dec
nop
jnp
pop
adcl
jo
mov
cmp
notb
hlt
in
ret
loopne
cmp
push
aaa
loop
adc
sub
jle
xor
jl
cli
adc
sbb
into
das
loopne
aas
mov
mov
xor
jns
xchg
inc
outsb
push
push
pop
daa
push
xchg
aad
or
push
inc
enter
notb
cmpb
sbb
inc
pop
xchg
sti
test
rclb
mov
pop
enter
movsb
cmpsb
xchg
jae
orb
lods
or
pop
pop
in
push
mov
jge
enter
arpl
jle
or
xor
jb
pop
subl
data16
cmc
es
inc
mov
lods
cmp
xchg
mov
test
and
sahf
mov
rorb
jae
xchg
imul
inc
mov
push
cmp
jae
int3
leave
dec
xchg
dec
sbb
stos
cmp
jns
inc
and
icebp
xor
lock
call
and
sbb
call
xchg
aas
cs
mov
mov
jl
leave
js
pop
shrl
popa
mov
jns
and
mov
aad
jnp
push
xor
xchg
loopne
repz
lahf
adcb
mov
sub
ja
pop
lcall
ror
sub
test
enter
sbb
stos
lahf
sub
adc
jns
int3
ret
pop
mov
add
fistl
std
push
push
mov
and
xchg
inc
ds
push
aam
jns
ret
out
cmc
das
divb
ljmp
jne
push
aad
jg
or
mov
adc
icebp
dec
mov
or
jns
dec
leave
outsl
adc
ret
inc
scas
scas
shlb
in
and
outsl
push
cwtl
jae
nop
pop
add
imul
and
jl
sub
push
imul
out
inc
jg
int3
aas
pop
push
inc
imul
mov
cmp
lahf
loop
mov
inc
test
ficoml
jp
rclb
lds
fwait
push
cltd
xor
and
mov
mov
out
mov
mov
je
pop
out
dec
cmp
mov
fwait
jb
sub
aas
sub
das
mov
add
stos
push
add
loopne
mov
rcr
cwtd
sbb
ret
mov
loopne
push
test
lret
addb
sbb
pop
sub
push
outsb
push
test
hlt
shlb
xchg
mov
cs
xor
push
out
cmp
cltd
cwtl
xchg
xchg
call
movsl
xor
testl
loop
scas
test
imul
push
and
frstor
imul
pushf
mov
sbb
hlt
rolb
scas
ret
push
cmp
and
cmp
inc
mov
les
dec
filds
dec
jns
ds
outsb
stos
inc
dec
dec
hlt
jle
lret
js
inc
dec
shrl
xlat
dec
jae
lock
insb
mov
xchg
or
jns
or
lret
inc
and
add
jecxz
and
xchg
clc
movsb
rcrb
inc
xchg
aad
sub
pop
push
mov
push
mov
adc
cmp
inc
push
inc
xchg
inc
or
popa
pop
fstpt
out
ret
rcr
mov
adc
dec
xor
lds
call
jle
push
in
xchg
xor
movsb
or
pop
xchg
sahf
cmpsb
cmpsl
sti
fdivs
xor
add
dec
shlb
pop
cmp
andl
lds
mov
cmp
sahf
push
leave
mov
dec
mov
lret
mov
and
gs
mov
sbb
mov
je
adc
cli
pop
les
hlt
inc
sahf
int3
or
or
sahf
testl
mov
push
sbb
jb
dec
mov
in
sub
lea
pop
iret
sub
mov
hlt
imul
adc
ror
test
cmp
pop
cmp
or
nop
add
pop
lcall
pop
add
das
cmp
mov
pop
cmp
je
mov
xchg
ret
arpl
pop
xor
xor
inc
jne
dec
loope
pop
xchg
imul
push
out
setb
mov
out
jae
pushf
mov
mov
js
int
inc
jmp
pop
rclb
gs
xor
cmp
jl
outsl
lcall
out
lret
pop
xchg
outsb
std
cmp
add
repz
ja
leave
pop
daa
dec
pop
test
sahf
xchg
lcall
and
mov
jg
out
jmp
lds
or
out
pop
jp
pop
out
fiaddl
cmpsb
xlat
bound
mov
cmp
cld
ret
imul
nop
push
xchg
loopne
xchg
mov
leave
pop
test
sub
cs
jge
inc
mov
jnp
mov
sub
sbb
outsb
jmp
mov
ljmp
addr16
fldenv
lea
out
cli
mov
bound
add
bound
scas
mov
xchg
ret
cmpl
shr
inc
ret
movsl
loope
adc
bound
lds
sbb
jo
sbb
xchg
setbe
pop
cmp
lahf
repnz
mov
lret
in
or
or
lahf
xor
xor
sbb
das
jmp
lret
ds
push
dec
sub
into
sbb
sbb
mov
dec
pop
mul
rolb
in
orl
imulb
cmc
je
out
lock
dec
subb
xlat
jecxz
mov
into
sti
loopne
ret
xchg
js
test
xchg
es
mov
mov
mov
mov
aam
addl
roll
pop
loope
or
addl
mov
cwtl
cmpb
xchg
insb
cli
push
xchg
and
mov
xor
sub
clc
cmc
cmp
pushf
in
lcall
mov
mov
mov
or
pop
addr16
fs
dec
add
data16
test
jo
sbb
ss
out
adc
sbb
sub
fnstsw
pop
push
mov
or
rorl
into
adcl
mov
cmc
adc
pop
mov
push
lds
fstpt
add
add
cmp
jb
pop
repnz
xchg
call
push
in
test
bound
lock
jmp
iret
xor
jge
jl
enter
sarl
mov
test
jp
lods
outsb
shlb
sarb
sub
fdivrs
adc
mov
push
pop
test
sub
stc
scas
and
iret
push
repnz
ljmp
dec
cmp
icebp
in
lret
push
fadds
push
dec
pop
and
rclb
call
aaa
test
pop
out
incb
in
xchg
sbb
pop
lea
mov
mov
jg
outsl
cmp
sbb
pop
ss
and
insb
push
or
pop
scas
pop
testb
enter
rolb
mov
arpl
test
ret
iret
lret
dec
dec
into
ret
cmpsb
push
int3
inc
es
movl
push
or
ret
add
dec
dec
les
pushf
mov
pop
push
mov
dec
das
jne
adc
and
shl
insb
jp
and
mov
mov
insb
outsb
scas
daa
frstor
add
sub
mov
dec
or
in
pop
clc
xor
or
pop
mov
sahf
and
addr16
pusha
cwtl
aad
xchg
xchg
adc
push
jmp
xchg
in
hlt
xchg
ret
or
pop
inc
out
subl
aam
sbb
fcmove
pop
test
cmpsb
xorb
push
daa
mov
fiaddl
push
test
sahf
repz
gs
out
jge
shll
push
push
cmpb
rol
std
es
arpl
decb
std
mov
icebp
rcrb
dec
push
pop
push
cmp
int
lcall
add
pop
inc
mov
and
in
leave
test
cmp
xchg
leave
stc
mov
xchg
add
mov
repnz
pop
out
dec
ret
jp
movsl
push
stos
and
dec
jp
movsb
add
xchg
in
in
loop
sub
ljmp
pushf
add
xchg
iret
rcll
test
repnz
jg
dec
pusha
mov
add
int
in
sbb
scas
xchg
stos
pop
sbb
pop
insb
inc
bound
aad
xor
mov
mov
es
mov
adc
nop
std
xchg
mov
rclb
push
in
cli
mov
sub
int3
ret
inc
ss
incl
leave
fs
pushf
jecxz
jg
mov
push
rol
sahf
push
add
push
xchg
pop
dec
shll
mov
xchg
sbb
inc
cmp
sti
push
into
sbb
mov
fcmovu
outsb
cwtl
inc
fistl
pop
adc
pop
lods
adc
iret
jle
mov
daa
lds
pop
xor
add
aad
fs
cmpsb
mov
lret
in
push
xor
and
pop
loope
sub
lea
mov
inc
jmp
je
sahf
jae
push
negl
mov
cmp
and
jmp
dec
roll
pop
mov
imul
inc
fimull
rcrb
pop
mov
fmul
inc
ss
addr16
fdivrl
pop
loop
xor
and
cmp
xor
xchg
or
sbb
dec
pop
mov
adc
out
jge
hlt
pop
mov
lods
sar
aad
shl
push
ret
adc
or
fisubrs
xor
enter
leave
pop
das
push
call
xchg
inc
mov
or
aam
lret
adc
jae
mov
hlt
sbb
dec
vpackusdw
sbb
loopne
mov
scas
sub
xchg
xchg
push
mov
lahf
cmp
stos
gs
subl
sbb
jge
fs
loope
or
dec
jno
mov
push
stos
stos
xor
jnp
shll
mov
or
cmp
out
push
cli
ret
cmpsl
mov
das
jge
imul
movsl
adc
add
dec
popfw
add
mov
cltd
inc
bound
mov
xchg
push
xchg
stos
jo
lea
adc
stos
add
nop
add
sub
out
in
das
ss
push
sub
lea
out
fstp
push
mov
cmc
xlat
shlb
mov
rcll
cmpsl
incl
stc
or
push
lret
push
xchg
and
ja
jb
gs
jnp
es
and
stos
ret
mov
mov
jmp
push
mov
insb
inc
pop
shrd
filds
cli
dec
stc
icebp
leave
cmp
sbb
int
fcomps
mov
jno
jmp
bound
sbb
cltd
xchg
add
push
imul
jae
push
scas
pop
inc
inc
push
testb
mov
xchg
mov
leave
xor
jle
negb
fimull
rorl
incb
lret
push
cli
ljmp
lods
xor
and
mov
or
pop
or
push
daa
cmp
jg
sub
mov
mov
fiaddl
xchg
fwait
add
scas
into
sbb
or
sub
ds
sub
jle
cmpsl
in
xchg
add
sub
lahf
jns
sub
jbe
xor
mov
dec
sets
in
andb
stos
jno
jmp
sub
popl
cmp
sar
sub
cmc
ds
popf
nop
mov
inc
xor
ret
inc
jecxz
xor
mov
push
and
cmp
in
xchg
mov
xchg
js
out
xor
dec
xchg
add
rcrl
adc
jl
add
pop
mov
pop
cli
dec
inc
das
fcomp
outsb
ds
mov
xor
xchg
rclb
add
repz
dec
shlb
in
or
insb
push
loope
fidivs
pop
mov
and
jbe
ljmp
outsl
and
mov
stos
mov
jp
mov
xchg
cmp
jle
cmp
call
repz
ja
inc
sbb
jns
dec
mov
pusha
cltd
push
cmp
sub
sub
sbb
das
and
pop
or
daa
mov
inc
loope
pushf
dec
cmp
leave
repz
sub
push
sub
xor
scas
cld
sub
sbb
sbb
xchg
hlt
stos
lcall
rdpmc
inc
and
in
mov
and
std
loopne
add
and
inc
mov
and
mov
xchg
mov
fnstenv
xchg
mov
inc
mov
xchg
mov
add
pushf
cmpps
adcb
testl
lret
loop
mov
into
js
pop
sub
mov
pop
pop
pushl
out
inc
fwait
or
out
xor
test
adc
fldenv
xchg
xorb
sub
insl
inc
fists
adc
xchg
adc
fmul
xor
inc
lods
and
jle
pop
xchg
incb
dec
sbbl
adc
or
clc
mov
pop
jmp
inc
mov
scas
and
jmp
cltd
cmpsb
cmc
lds
jg
mov
push
xchg
scas
xor
pop
mov
xchg
mov
push
rcll
adc
in
imul
adc
pop
sbb
inc
mov
or
lcall
adc
xchg
mov
cmpsl
imul
popf
push
mov
jne
fsubp
mov
pop
push
ret
cmp
loopne
lahf
mov
and
dec
inc
jmp
pop
sub
in
push
adc
fildll
into
outsl
push
testl
cli
dec
mov
shrl
lret
jl
test
aas
xor
add
iret
mov
imul
cmp
or
sbb
push
xor
mov
lock
inc
int
jae
lret
mov
xor
loopne
lods
pop
dec
mov
mov
popa
loop
out
ds
outsl
jle
xchg
mov
pop
fidivrs
or
sbb
test
les
cli
pop
adc
mov
fucomip
rcrb
add
or
xchg
dec
scas
fiaddl
push
lods
sbb
push
movsb
jg,pn
jbe
mov
inc
jle
jns
stos
mov
insb
pop
addr16
stc
jge
bnd
stos
int
in
or
mov
pop
and
sbb
loop
hlt
pop
adc
cmp
mov
fnstsw
or
adc
inc
mov
or
aaa
pusha
sti
loopne
inc
pop
aam
push
mov
sub
mov
add
inc
je
stos
bound
mov
addr16
cltd
lret
aas
dec
dec
push
shrl
mov
addb
xorl
cltd
pop
stc
push
add
dec
sub
les
sti
dec
cmpb
fs
add
pushaw
adc
into
pop
cmp
adc
push
movsb
cltd
scas
orb
inc
ja
pop
iret
lret
bnd
lretw
cmp
jno
dec
icebp
pop
cmovs
repz
pop
pop
outsl
cmp
das
mov
pop
hlt
adc
mov
inc
test
cld
bound
ja
add
pop
cwtl
adc
xlat
pop
cmp
orl
jbe
shrb
inc
mov
inc
lods
out
push
scas
jl
jg
movsb
ljmp
push
aam
add
ss
cmp
clc
bound
mov
sarl
and
gs
or
jmp
push
lock
out
push
push
lret
ficompl
jp
js
neg
pop
push
push
js
scas
lcall
leave
icebp
push
test
iret
dec
lods
lods
fistpll
add
clc
jecxz
lods
cmpsb
in
adc
push
xchg
cmp
lret
jb
sbb
js
sbb
pop
pop
loop
inc
scas
xor
loope
fwait
add
dec
xchg
dec
mov
xor
test
lods
mov
ja
jno
mov
dec
inc
pushf
mov
fsts
int3
pop
ds
fmul
mov
xor
sub
xchg
aaa
rorl
std
lret
out
xchg
jl
inc
push
lods
jl
mov
mov
xor
adc
lret
outsb
flds
inc
dec
enter
sbb
pop
pop
cli
addr16
mov
add
cltd
aaa
lods
push
xchg
stc
nop
fsts
call
sub
cmp
aas
jne
out
test
pop
mov
inc
sbb
sbb
add
in
out
mov
stc
add
and
dec
ljmp
leave
data16
dec
sahf
xchg
xchg
sub
push
addl
mov
leave
or
inc
addb
and
cwtl
sub
mov
xor
call
cli
mov
mov
ljmp
inc
pop
cld
not
icebp
mov
jnp
sbb
pop
pop
loop
icebp
dec
sti
stos
xchg
mov
jno
in
daa
addl
xchg
push
outsb
pop
and
push
mov
adc
xchg
adcb
sahf
data16
xchg
sub
in
xchg
das
pop
nop
out
int
int3
mov
in
xor
out
xchg
jne
mov
test
xchg
inc
daa
mov
mov
sbb
cltd
cmpsl
inc
push
lret
subb
test
mov
mov
push
lds
sbb
test
xchg
scas
xchg
xor
jp
jle
adcb
fnstenv
les
outsb
push
vmwrite
xchg
aas
test
mov
fdivr
jne
dec
add
and
data16
jnp
out
fistps
adc
popf
insb
jmp
inc
pushf
push
mov
and
enter
mov
imul
cmpsb
negl
movsb
bound
jae
addr16
push
xlat
pop
jb
cli
pop
jg
push
mov
xor
sbb
or
cmpsb
mov
inc
sbbb
test
mov
in
fcmovnb
pop
jno
inc
int
cs
dec
dec
push
sbb
xchg
pushf
icebp
add
mov
das
in
pcmpeqd
leave
imul
pop
lds
and
in
cwtl
stc
gs
addb
cld
test
test
inc
dec
jae
mov
sbbb
in
push
pop
cmpsl
cmp
pusha
call
dec
cmpsl
jge
pop
mov
inc
cltd
mov
cli
fcompl
dec
idiv
xchg
mov
mov
dec
pop
xor
add
xchg
mov
dec
xchg
add
cmp
dec
push
movlps
mov
aad
aaa
das
test
addl
adc
mov
push
push
in
or
mov
dec
stos
dec
in
and
mov
sub
pop
jp
mov
jnp
aaa
cwtl
and
or
pop
pop
cltd
inc
or
xor
xor
lret
mov
jbe
mov
lods
mov
movsb
cmpb
inc
add
jns
xchg
into
roll
dec
inc
pusha
mov
push
add
mov
fisubrs
fdivl
and
cwtl
inc
dec
mov
imul
xchg
movsl
inc
adcb
shll
jo
das
insl
lahf
and
lods
adc
inc
lret
pop
ja
inc
sahf
icebp
mov
adc
adc
es
jle
adc
and
leave
ja
xchg
mov
iret
gs
push
cmpsb
mov
mov
idivb
bound
nop
push
loopne
xchg
pop
inc
mov
repnz
xchg
mov
imul
add
lods
imul
lcall
adc
movsb
int
cs
push
ret
mov
sarb
bound
push
gs
fs
xor
movsb
xor
inc
sub
sbb
sub
test
mov
cltd
mov
cmp
outsl
xchg
sub
fidivrl
pop
mov
mov
add
pop
notb
xchg
int
stc
xor
xchg
jge
fldl
xor
js
cmp
xchg
popa
enter
sbb
lret
pop
inc
outsb
ficompl
dec
ss
das
sub
imul
cmc
lods
and
cltd
push
mov
mov
pop
lods
in
dec
lds
or
fdivrl
je
add
sub
or
in
adc
xchg
nop
lds
jl
cmpsb
andl
jle
in
mov
add
clc
adc
or
pop
insl
inc
mov
adc
aad
mov
push
in
fistl
xor
mov
negl
mov
pop
psubsw
mov
jnp
cmpsl
mov
fdivrs
outsb
ret
cwtl
or
pop
push
jne
mov
ljmp
pop
cmp
xlat
ror
mov
movsl
arpl
add
adc
outsb
cmc
call
mov
and
inc
sahf
das
push
imul
or
and
xchg
imul
call
std
movsl
add
mov
sbb
inc
nop
insb
mov
jecxz
xor
stos
mull
push
jns
ja
inc
test
xchg
ret
mov
mov
enter
push
lock
jge
and
rorb
lock
mov
xorl
adc
push
arpl
andb
pop
lea
jno
pop
sbb
int
mov
test
cld
loop
test
aas
ljmp
mov
mov
push
and
lret
pop
cmp
mov
cmp
xor
es
xor
mov
aam
adc
out
sbb
xor
xchg
push
ljmp
int
adc
pop
adc
or
aad
mov
mov
sbb
stos
mov
xchg
mov
bound
inc
jl
mov
pop
sbb
idivb
add
mov
ret
xabort
js
push
xor
jle
adc
jns
sub
inc
mov
push
mov
jo
loop
dec
and
es
and
jg
push
xor
outsb
push
lahf
mov
and
clc
mov
sub
cmc
cmp
xor
jg
movsl
dec
in
push
rcll
rol
xor
mov
push
in
ret
jle
inc
xchg
imul
hlt
les
jae
mov
cmc
inc
ja
add
add
jp
mov
lock
fstl
mov
add
jno
or
fwait
loope
adc
push
std
and
mov
clc
mov
sub
arpl
movsl
xchg
adc
and
dec
sbb
push
mov
sub
jno
rclb
push
mov
cltd
dec
mov
push
push
sahf
inc
inc
js
sub
fistpll
test
jg
mov
cmp
cmp
sub
sbb
fwait
mov
xchg
push
jmp
cli
fcmovne
das
adc
mov
stc
ret
cwtl
fimuls
aas
mov
or
daa
mov
lds
lea
mov
sbb
out
jge
cmp
fildll
xchg
push
dec
and
sub
mov
jecxz
es
int
inc
cmpsb
stc
insl
mov
rcrb
mov
std
arpl
call
xchg
into
movsb
cmp
xorl
insb
inc
enter
dec
cmp
push
sbb
pop
xchg
call
push
pop
stos
pop
mov
and
mov
cli
loop
int
ljmp
mov
jbe
cwtl
jge
fdivrs
mov
push
rcll
sbb
mov
push
mov
sub
inc
out
push
xchg
aas
dec
push
fsub
xor
stos
lods
cli
adc
xor
xorl
sbb
mov
loope
vpextrw
lds
jne
xchg
pop
mov
aas
fistpll
das
and
jp
push
cmpb
jbe
sub
sbb
pushf
and
dec
mulb
xchg
push
fldl
cmc
mov
pop
sbb
push
inc
insl
cmc
jg
sbb
cmc
adc
jge
jbe
push
andb
pusha
icebp
cwtl
or
xchg
es
mov
sbb
mov
inc
or
cmp
push
fidivs
sub
sbb
out
pop
int3
hlt
insb
inc
das
mov
or
mov
push
mov
or
push
push
mov
pop
fistpll
add
lds
lock
into
mov
call
test
dec
inc
jae
inc
inc
mov
pop
xor
ret
pop
and
pop
jne
ds
fstps
fldl
cmp
in
inc
dec
jle
test
xor
inc
repz
mov
inc
xlat
orl
pusha
xlat
pop
ss
xor
inc
add
popl
sti
mov
es
and
adc
dec
dec
mov
pop
aas
push
aad
icebp
scas
and
jle
clc
pop
sub
jp
sbb
push
ja
popf
sub
mov
arpl
mov
cltd
rolb
jl
popl
jno
push
and
pusha
lea
pop
sahf
bound
stos
sub
xchg
cld
fidivrl
sub
loop
jns
test
test
sub
sbb
in
sbb
movsl
and
jb
push
jecxz
mov
xchg
jmp
and
lret
jnp
mov
das
std
imul
sub
iret
jns
insb
out
lock
adc
pop
pusha
arpl
xor
sti
and
add
cmp
cmp
jge
mov
bound
ja
pop
xchg
mov
jb
cs
xchg
sub
push
dec
inc
dec
lahf
icebp
jne
mov
gs
addr16
loop
popa
mov
nop/reserved
inc
and
add
dec
sub
pop
adcb
xchg
or
push
fwait
mov
call
sbb
in
mov
xor
je
lods
or
inc
xchg
in
inc
adc
add
pusha
pop
sub
js
pop
cmc
pushf
jle
inc
xor
insb
gs
sbb
mov
jb
mov
or
xorb
dec
scas
adc
push
dec
leave
xchg
subb
mov
ljmp
scas
mov
repnz
setp
xchg
xchg
btc
lea
sub
in
lcall
jo
bound
pop
pop
mov
lahf
push
push
test
scas
rcrb
insl
fildll
ljmp
loope
out
mov
push
xchg
in
mov
push
in
leave
push
daa
cmp
xor
out
push
les
les
lret
push
sbb
cmc
mov
adc
xchg
in
cmp
cwtl
movsb
adc
cmp
inc
inc
scas
cmp
jp
push
mov
push
ljmp
add
mov
dec
addr16
test
sbb
pop
adc
jns
dec
std
lea
sbb
jle
aas
fbld
inc
les
cltd
sbb
lret
mov
or
push
bound
sbb
in
test
inc
cmp
and
push
iret
call
imulb
pop
sub
jb
mov
sbb
fcomip
add
and
loope
pop
call
call
out
xorl
enter
mov
ficoms
jmp
cmp
lahf
xchg
rep
out
mov
lea
flds
js
std
jb
xchg
notb
and
mov
out
pushf
dec
imul
inc
gs
add
repz
testl
dec
sub
cs
aaa
and
popa
xchg
mov
ss
in
inc
jge
fs
push
pop
mov
nop
inc
lret
in
xor
cli
pop
xor
or
nop
adc
subl
fsubrl
int3
cmp
xchg
push
pop
mov
in
test
jbe
push
mov
stos
and
and
xlat
ss
js
cmpsl
inc
les
leave
pop
or
cwtl
or
jmp
dec
daa
stos
je
jl
and
test
sbb
mov
fdivl
pop
movsl
cld
cltd
mov
adc
scas
mov
xor
mov
lret
scas
mov
hlt
adc
inc
dec
xchg
sbb
gs
insl
jecxz
pusha
ret
add
pop
add
xchg
notl
sub
and
sbb
mov
pop
inc
mov
sarl
test
jecxz
xchg
fsubs
xlat
mov
xchg
or
or
clc
and
sub
mov
mov
inc
inc
mov
outsl
xor
mov
cli
out
mov
or
icebp
xor
pop
es
mov
adc
repnz
arpl
jbe
sbb
jmp
mov
adc
iret
test
rclb
cmp
mov
subl
or
adc
int3
jns
inc
gs
orl
ds
scas
repz
repz
mov
scas
push
push
cli
mov
mov
das
ds
frstor
std
fistl
rcrb
mov
imulb
jae
ja
rcrl
cli
lea
pop
adc
das
cmpsb
ret
inc
cmp
popa
nop
shrl
jmp
jle
leave
ret
cmp
fwait
test
fisttps
movsb
movsb
imul
mov
in
ss
icebp
add
xchg
mov
jae
mov
jae
mov
sub
lea
jo
cwtl
xor
lahf
jecxz
imull
into
pop
pop
cld
cmp
pop
aas
addb
jl
and
mov
das
push
rcrl
addr16
in
es
in
js
ret
pop
repz
popf
jo
aaa
outsb
ja
sbb
push
rorb
lahf
insb
subb
lret
and
lea
fldenv
cmc
push
add
iret
out
xchg
aam
mov
and
push
pop
mov
sbb
dec
ja
outsl
jle
pavgw
cmc
push
or
sub
sbb
xchg
fs
lret
stos
pop
int
adc
arpl
aad
add
aad
decb
dec
push
mov
inc
sbb
xchg
sbb
mov
jno
mov
push
xchg
dec
pop
adc
sbb
xor
pop
xchg
xlat
sub
xor
mov
pop
dec
stos
jge
imul
insb
jnp
test
sbb
imul
xchg
xor
fwait
sbb
ja
cmp
inc
add
push
jp
testl
mov
loopne
outsb
pop
test
mov
mov
jno
or
or
outsl
lret
roll
wbinvd
ljmp
and
mov
fcomps
pop
pop
je
xor
dec
jg
xchg
or
mov
int
push
pop
scas
lds
push
shll
adc
jne
inc
xchg
cmp
imul
inc
pop
sahf
pop
mov
adc
lret
jecxz
cs
jns
sbb
pop
ljmp
je
adc
mov
lock
pop
repnz
in
adc
xor
cltd
inc
fldl2e
sbb
add
in
mov
out
sbb
sub
and
addr16
arpl
das
cmpl
jecxz
enter
cmp
xchg
sti
push
sbb
jp
jp
xlat
jno
cmp
pop
rcrb
sbb
cli
jl
rclb
mov
leave
ljmp
sub
jnp
xchg
lcall
cs
aad
maskmovq
idivl
xchg
in
cmp
fisubrl
test
cmp
fcoml
bound
das
ret
movsb
mov
dec
mov
popf
lds
xor
xchg
pop
mov
lahf
sub
xchg
dec
nop
add
adc
ss
aaa
arpl
push
fcmovb
lret
andl
repz
xchg
xchg
test
fdivl
pusha
mov
incl
daa
mov
inc
add
mov
jmp
mov
push
sbb
iret
pop
movsl
into
ja
je
pop
jl
xor
in
adc
ret
jne
mov
inc
push
xchg
pop
sbb
iret
or
xor
lock
xlat
negl
mov
inc
lret
mov
rcrb
int
ss
jle
popf
shr
lret
jl
cmp
push
inc
xorb
hlt
push
fs
outsl
test
dec
test
sub
out
push
lds
out
or
inc
andl
add
mov
and
dec
clc
fs
add
daa
scas
or
mov
add
test
imul
and
add
std
push
andb
cltd
and
je
fsubl
and
xchg
adc
das
jmp
cmp
mov
xor
aad
lods
mov
jns
fnstcw
repnz
sub
call
ret
cmpsb
fcomps
jmp
push
push
lds
popa
dec
cmpsb
daa
mov
outsl
faddl
inc
add
add
inc
dec
hlt
mov
stos
fildll
aas
sti
mov
adcl
inc
lds
stc
sti
jmp
lods
inc
into
mov
mov
in
xor
fiadds
xchg
xchg
mov
dec
pop
pop
clc
pop
inc
sti
dec
addr16
xor
bound
test
mov
mov
cmp
movsl
dec
sub
push
cmp
cmp
lea
sbb
xchg
repnz
in
xchg
mov
ljmp
pop
out
cmc
in
inc
stos
movsb
orb
jg
lret
imul
arpl
push
adc
cwtl
stos
ja
mov
sub
mov
push
cltd
dec
adc
sbb
jecxz
xchg
xor
mov
jo
cmp
clc
adc
adc
push
xchg
cmc
mov
sbb
jns
les
inc
shrb
jp
mov
mov
das
sub
data16
lods
dec
and
sbb
add
cmp
sbb
cltd
mov
mov
arpl
mov
imulb
cmp
or
push
inc
inc
sub
mov
mov
movsb
mov
cli
jae
xlat
mov
sbb
add
stos
push
pop
outsb
add
lock
add
es
ret
pop
lahf
int
add
push
fldt
xchg
sub
push
roll
xor
imul
sbb
mov
leave
mov
mov
stos
inc
lret
pop
jmp
mov
in
out
mov
daa
icebp
call
data16
mov
add
sub
out
int3
cwtl
add
jle
fsts
dec
sub
in
fsubl
pop
xor
aad
pop
push
xor
out
dec
jmp
mov
dec
cmp
jae
push
sti
or
cmp
jecxz
mov
cmp
lods
shll
or
mov
ficoms
out
movsl
or
inc
add
xor
mov
cmp
cltd
ds
sub
sbb
xor
push
dec
daa
ss
icebp
sarl
sub
mov
rcpps
and
cmp
and
cmp
stos
lcall
push
cmp
mov
or
rcll
or
mov
push
push
mov
fistpll
inc
pop
insb
sti
sbb
mov
sti
pop
into
fst
hlt
sbb
dec
test
sbb
cs
mov
mov
sbb
cld
int
outsl
imull
jecxz
lret
inc
rolb
jb
jne
sub
jae
imul
jno
adcb
bound
and
int
scas
popa
aaa
outsl
cmp
jne
dec
or
inc
or
adc
ret
mov
xlat
leave
ss
insl
inc
pavgb
add
mov
jmp
test
jecxz
pop
mov
push
call
pop
les
std
aad
xchg
fnsave
xchg
push
insb
push
test
and
jp
xor
and
pusha
stos
mov
mov
mov
pop
xchg
ljmp
and
aad
xor
cmp
sbb
in
mov
jp
popa
pop
daa
insl
shll
daa
push
sarl
dec
add
testl
andb
xchg
push
lcall
pop
pop
lret
enter
cmp
in
loopne
pop
add
pop
mov
cmpb
inc
jge
jmp
xrelease
jo
les
das
dec
jns
xchg
fsubl
out
add
inc
icebp
xchg
sub
insb
pushf
ret
sub
int
mov
dec
rcpps
es
push
dec
cs
pushf
cmpsl
loop
leave
mov
add
xchg
or
test
pop
lods
outsb
sbb
dec
rcr
sub
jl
jg
jl
gs
mov
jmp
mov
mov
arpl
add
inc
cwtl
int3
xchg
les
lods
adc
in
push
or
lret
mov
bound
out
out
adc
imul
cli
inc
sub
lods
fdivrl
test
rcll
lcall
pop
int3
in
inc
cwtl
pop
sub
nop
jmp
sti
pop
sbb
xchg
push
popf
sbbl
out
xor
ljmp
movsb
mov
insl
and
iret
int3
inc
nop
fsts
test
test
pop
in
push
pop
pop
daa
daa
xlat
outsb
or
xchg
cmp
in
lock
repz
shrl
stos
leave
and
pusha
add
inc
addb
xorb
iret
inc
mov
adc
push
push
rorb
mov
xchg
sbb
sbb
pop
add
jo
adc
adc
pop
jnp
mov
insb
aaa
mov
lret
rcr
mov
or
mov
mov
push
mov
pushl
pop
inc
jnp
and
inc
cmp
or
xor
add
std
jnp
pop
jb
push
sub
rcll
gs
cli
cltd
xchg
mov
call
mov
test
das
jge
xchg
push
cmpsl
sbb
aaa
mov
shufps
push
test
cmp
int3
call
push
xchg
xlat
sbb
sti
out
jecxz
scas
cmc
inc
cmp
test
insb
and
mov
sub
jne
sarl
outsl
sbb
push
mov
push
push
ja
xchg
sub
jae
fcmovb
es
pop
cmp
std
add
pop
ljmp
push
mov
and
addb
mov
lods
mov
loop
ret
mov
ficoms
push
xchg
mov
negb
and
clc
xor
lds
mov
lods
lahf
mov
lock
xchg
jecxz
ret
add
faddp
pop
mov
mov
repnz
in
mov
jbe
mov
cwtl
push
xchg
mov
orl
jbe
jbe
lock
rcr
push
cld
mov
and
pusha
xor
insb
lcall
mov
std
push
int
das
cmp
sub
imul
xor
movsl
sbb
mov
or
mov
jl
aam
sahf
aas
jno
les
pop
inc
sahf
mov
loop
in
aas
xor
adc
outsl
mov
push
out
std
ja
loop
mov
sahf
adc
cmpsb
cmp
dec
cwtl
jb
sbb
xchg
xchg
jg
inc
jle
xchg
lds
icebp
loope
jno
insl
add
inc
xchg
jnp
pushf
jp
ficoms
rcl
pop
add
popf
sub
daa
add
mov
lret
cmc
mov
push
rcll
inc
or
cld
aam
xor
mov
js
mov
jp
mov
or
cltd
mov
mov
loopne
inc
inc
lds
mov
push
or
shr
push
cltd
call
push
add
call
dec
out
movsl
xchg
neg
das
fisubrl
sbb
ss
fimuls
adc
cltd
popf
pop
rol
cwtl
dec
lods
dec
or
fimuls
sbb
push
in
inc
clc
stos
cmpsb
inc
imul
ret
bound
xchg
mov
adc
into
and
xchg
das
lcall
push
sbb
mov
adc
sub
cmp
mov
in
lea
adc
push
jne
jg
fwait
xlat
orb
daa
out
inc
in
rcll
sbb
nop
repz
xchg
addb
aad
cmp
pop
cltd
mov
dec
inc
loopne
dec
sbb
sub
xlat
enter
cmp
or
movsb
jg
test
mov
les
push
mov
popa
dec
fdivs
and
bound
les
pop
movsl
jbe
imul
push
cmp
and
push
inc
mov
dec
and
rcll
enter
jno
jnp
cs
xchg
or
sub
cmp
push
mov
cli
aas
push
push
movsl
mov
jl
or
inc
icebp
push
incb
and
icebp
lea
es
js
imul
ljmp
int
bound
add
or
int
test
adc
lcall
fistps
rclb
sbb
pop
xor
sub
add
mov
push
pop
mov
dec
ss
fsubs
pop
int
add
ret
dec
cmp
mov
add
mov
add
add
fcoml
inc
jp
subl
enter
pop
loope
movsb
jmp
and
inc
mov
pop
push
cmpsb
inc
hlt
xor
adc
ss
pop
es
mov
outsb
cli
pop
nop
dec
inc
mov
rorl
add
sub
xor
sub
pop
adc
or
in
test
or
adc
cmp
pop
and
xor
ja
mov
fucomip
xchg
cmc
into
jbe
leave
mov
push
lret
stos
xchg
fbld
xchg
xor
add
mov
imul
imul
mov
jmp
fwait
mov
cli
rolb
shlb
and
out
mov
insl
ret
loope
add
push
adc
and
adc
decl
stc
and
jg
iret
cmpsb
arpl
aas
vmovupd
push
sbb
cmp
push
sbb
xor
movl
jns
fs
mov
ljmp
xorl
packsswb
cmp
dec
leave
mov
adc
sbbl
inc
dec
and
lock
cwtl
sarl
sub
xor
sahf
scas
sti
lret
adc
mov
pop
add
mov
test
lods
ret
int3
xlat
sti
movsl
stos
pop
fwait
jo
jbe
movsl
mov
cmc
jge
in
outsb
sub
or
mov
jnp
popa
movsb
inc
mov
push
std
push
inc
adc
xor
dec
nop
movsb
shrl
sbb
hlt
aad
push
cmpsl
pop
rcrl
jbe
in
movsl
aam
xchg
cwtl
sbb
hlt
lock
test
sahf
std
test
dec
div
push
ret
add
xchg
js
xorl
xchg
aas
inc
mov
or
repnz
ja
push
adc
pop
gs
sbb
mull
mov
adc
mov
fidivrl
addr16
add
imul
mov
cwtl
sub
lret
pop
inc
imul
test
push
sbb
popf
xchg
sub
add
incb
fcomps
cwtl
dec
cwtl
out
push
jae
outsl
je
out
rclb
mov
popl
jg
cmc
je
pusha
ss
ffree
and
dec
add
rol
mov
repz
in
sub
loope
xor
mov
imul
mov
jg
mov
test
aas
call
cmp
out
sbb
pushf
jns
out
lods
cmp
xor
dec
dec
jae
mulb
sti
dec
ret
imul
lret
lea
lret
xchg
mov
jmp
cwtl
inc
popf
sahf
sub
popa
ret
loope
out
dec
push
aas
mov
inc
xor
lods
push
jbe
inc
imull
inc
push
or
cmp
mov
hlt
jge
mov
imul
xor
and
pop
sub
inc
pop
push
pop
pop
inc
or
stc
inc
out
dec
mov
jecxz
ja
call
push
jle
cwtl
std
jo
cld
mov
pop
lret
push
mov
js
or
cli
dec
sbb
mov
sbb
fcoml
into
popf
mov
aam
mov
out
lock
inc
dec
xor
cmc
insl
ss
inc
rclb
cmp
fcoms
sub
pop
sbb
inc
push
sub
imul
mov
fucomi
dec
xchg
test
enter
dec
xor
or
or
imull
cwtl
mov
or
xchg
rorl
test
jo
xor
in
std
sbb
loopne
loopne
sub
jg
xchg
decl
mov
pop
pushl
pop
add
add
test
sbb
aam
call
fstpl
lods
push
imulb
iret
inc
das
daa
ljmp
scas
sub
bound
xlat
mull
nop
dec
jno
or
cld
mov
int
pop
inc
les
outsb
shr
or
stos
cwtl
xor
repnz
fadds
leave
cmp
xchg
hlt
xchg
iret
sbb
sub
push
jle
and
popa
add
jb
sti
cmp
dec
or
or
mov
xchg
loope
movsl
bound
cs
pop
dec
cmp
xchg
inc
paddq
mov
cmp
or
xor
sub
xor
lods
faddl
fwait
mov
mov
sahf
ss
lretw
fdivp
push
sbb
xor
testl
rolb
adc
mov
xor
nopl
sub
adc
cltd
repnz
insb
inc
lds
sub
fildl
push
xor
push
push
sub
inc
pop
imul
ljmp
jo
sbb
testl
dec
subb
mov
mov
ja,pn
xchg
and
fscale
or
mov
xchg
mov
mov
jb
mov
rcl
scas
pop
xor
ret
pop
icebp
dec
out
pop
scas
sub
ss
inc
leave
add
outsb
mov
inc
jle
lret
test
sbb
inc
in
jns
stos
lds
movl
mov
cld
repz
adc
popa
fisubs
xor
clc
fwait
lods
push
cmp
dec
test
sbb
xchg
pop
push
das
ljmp
add
roll
pop
pop
cltd
push
cmpl
cmp
add
das
mov
cmp
mov
dec
insl
inc
in
pop
push
mov
sub
push
or
mov
mov
outsl
sbb
loop
fwait
insl
pop
push
pop
dec
arpl
push
aas
xor
out
mov
adc
and
cltd
mov
aad
andl
mov
adc
inc
ljmp
lahf
cmc
or
cmp
js
sub
xchg
mov
idiv
mov
pusha
sbb
pop
pop
jp
sbb
sbb
test
icebp
pop
jne
mov
clc
leave
ret
shll
test
test
mov
or
jns
addr16
pop
and
ret
inc
push
popa
sbb
add
or
push
push
fildll
popf
cmp
xchg
popa
loope
das
negb
pop
mov
mov
adc
inc
imull
mov
xorl
lret
into
add
sahf
lret
das
jne
addr16
mov
push
pusha
cmc
btr
push
mov
inc
jl
push
iret
add
scas
cmp
pop
push
dec
jno
sbb
scas
movsl
jge
movsl
mov
sbb
dec
outsl
stos
mov
fwait
movsl
aas
inc
dec
mov
je,pt
inc
push
in
mov
mov
dec
bound
test
cwtl
xor
repnz
push
add
inc
push
imul
mov
jb
sub
sbb
cmc
push
out
lcall
movsl
mov
push
pop
mov
stos
in
ret
cmp
pop
mov
inc
in
inc
push
in
add
jns
test
scas
data16
mov
mov
sub
fcomps
sub
push
sbb
into
scas
and
sti
iret
dec
dec
test
sti
inc
inc
es
test
mov
adc
jg
dec
dec
xor
outsb
sbb
lret
add
pop
enter
outsl
cltd
pop
lcall
pop
pop
ret
pop
push
hlt
or
push
mov
jno
sahf
mov
inc
jmp
sbb
dec
daa
jo
jae
aad
cltd
nop
mov
adc
mov
fwait
ljmp
mov
lret
mov
in
inc
andb
sbb
add
xchg
cmp
xor
inc
std
rcrl
aad
in
or
ret
mov
cmc
add
insb
dec
addr16
js
insb
icebp
in
fdivr
or
in
iret
jnp
dec
fs
push
into
outsb
daa
mul
ucomiss
fisubrs
mov
shlb
movsl
int3
jmp
test
cmp
push
lea
pop
stc
popf
movsl
fists
repz
mov
enter
inc
pushf
enter
and
imul
dec
and
dec
mov
sahf
xchg
mov
jnp
rorb
mov
adc
repnz
xchg
sti
mov
add
out
add
stos
dec
or
mov
sti
je
cltd
inc
pop
fidivl
dec
mov
jbe
bound
dec
insl
xor
adc
fdivrs
iret
lea
push
notl
jp
dec
popa
std
arpl
xor
add
ret
fidivrl
flds
out
fs
pop
inc
cmp
imul
enter
sub
xlat
loope
push
movsl
xchg
lods
cmp
or
in
adc
push
cmpl
addr16
sahf
pop
xchg
leave
lds
repz
das
adc
mov
lret
adc
dec
lods
ja
cmp
cmpsl
rcrl
mov
push
mov
jp
aad
adc
dec
inc
xor
jno
lods
call
sbb
and
push
lahf
adc
mov
xchg
call
enter
add
iret
jnp
movsb
fwait
decl
mov
clc
mov
and
lock
sbb
push
roll
in
sar
dec
subl
mov
ret
mull
mov
sbb
and
arpl
mov
xorb
jg
int
or
icebp
mov
push
movsl
push
test
or
pop
or
or
mov
es
popw
sbb
mov
and
stos
jl
pop
dec
lret
pop
xchg
ja
es
jno
std
inc
sub
xchg
jge
mov
mov
sbbb
out
xchg
xlat
xor
in
cmp
std
mov
shll
cltd
push
mov
fwait
xor
insb
fidivrl
pop
mov
dec
lahf
push
push
fcomps
ljmp
imul
push
pop
add
clc
adc
cmp
lcall
inc
js
sub
test
xor
jns
jmp
inc
bound
jb
lds
cmpsl
or
inc
in
jo
adc
jecxz
rcl
xor
aaa
cld
fwait
movsl
jno
fildl
int3
push
cltd
push
faddl
daa
cltd
outsb
fistpll
cmp
mov
hlt
xchg
sbb
nop
ds
pop
push
jmp
sub
add
shll
imul
mov
mov
inc
mov
adc
mov
and
imul
mov
cltd
or
mov
and
push
or
sub
add
pop
into
mov
lock
mov
adc
or
cmp
cmpsb
loop
xchg
mov
xchg
add
repz
rcl
andb
or
int3
mov
dec
jmp
pop
add
cld
mov
xchg
adc
cmpb
test
jle
jmp
push
fbld
xchg
pop
cmp
cmp
sbb
adcl
or
sti
pop
cltd
push
stos
stc
in
lea
or
out
shr
rcr
sbb
es
orb
adc
jge
les
cmp
and
dec
cli
repnz
fiadds
mov
cwtl
dec
cmp
adc
ffreep
mov
xchg
bt
clc
cmpsl
rclb
add
inc
leave
mov
ljmp
orl
pop
jb
or
pop
pop
movsl
out
js
stos
cs
loop
addl
mov
mov
mov
xchg
dec
jle
out
jns
nop
and
je
mov
sbb
fwait
inc
jns
inc
lret
sub
cmp
inc
or
scas
dec
mov
sub
xchg
gs
test
ret
adc
push
shl
stos
ja
mov
cld
mov
push
mov
and
xor
je
mov
cld
stos
rorb
mov
dec
xchg
vmovupd
rcl
adc
sbb
lea
push
popa
cmpsl
cld
and
mov
das
inc
add
xchg
lret
xor
enterw
mov
and
lcall
loope
inc
dec
or
lds
pop
jo
cmc
mov
sti
mov
cmc
loop
cmp
push
adc
or
or
dec
sub
xlat
pop
and
jb
inc
inc
mov
loope
sbb
into
lock
jno
imul
cmp
pusha
scas
gs
push
je
sbb
push
cwtl
enter
push
inc
cmc
and
arpl
cmp
adc
sbb
leave
add
ljmp
push
lcall
adc
aaa
cs
push
filds
mov
add
sbb
lea
pop
pushl
test
inc
shll
jnp
fstl
cmp
div
pop
insb
test
pop
mov
and
jmp
push
shl
adc
or
enter
je
leave
mov
mov
xchg
hlt
ficoml
lea
outsl
daa
sahf
scas
push
push
ja
ret
call
fstpt
push
leave
sub
in
add
out
aad
jg
rcl
int
xor
push
fisttpl
aas
sub
lods
cmp
xchg
xchg
scas
pop
mov
push
mov
xor
pushf
popa
popa
adc
or
nopl
in
xor
lods
adc
fldl
mov
adc
and
jmp
xchg
xchg
cld
fcompl
dec
inc
jns
repz
mov
out
decb
push
into
pop
imul
pop
pop
out
adc
test
shll
lea
insl
push
lea
xchg
les
xchg
sti
aam
mov
jp
push
add
push
xchg
mov
mov
ja
xlat
pop
jnp
adc
cmp
int3
cltd
movsb
and
clc
and
iret
pusha
clc
push
js
xor
cwtl
cmp
cwtl
add
sbb
jbe
mov
mov
jae
push
ret
aas
daa
jecxz
add
scas
stos
dec
imul
stos
xchg
jecxz
les
lock
jo
faddl
addr16
aad
mov
shlb
popa
imul
push
lret
sahf
mov
stos
mov
pop
and
cwtl
pushw
xor
ret
aas
push
xchg
xchg
mov
fbld
pop
jae
inc
insl
aad
inc
sti
or
enter
fildl
aam
cld
movsl
pop
add
lcall
or
lret
fldt
int3
cmc
inc
lret
adc
pop
pop
cmp
ss
mov
addr16
add
push
add
lds
or
push
or
add
shlb
movsb
nop
fisttps
dec
fucom
mov
aam
insb
or
lcall
fdivrs
into
xor
in
inc
or
divb
imul
adc
loopne
gs
mov
mov
sbb
inc
mov
cld
xchg
fdiv
push
xlat
and
insb
lods
jecxz
bound
iret
out
insb
dec
mov
loopne
addr16
inc
ja
push
imul
push
xor
testl
inc
cmp
int3
iret
push
enter
add
shll
xor
inc
andl
imul
roll
inc
fmul
mov
xchg
add
callw
xor
sbb
inc
xorl
inc
inc
adc
cltd
rcrl
add
xchg
ljmp
xchg
cmc
mov
xlat
xor
xchg
ret
rorl
xchg
cmpsl
nop
jmp
fnstcw
in
jmp
out
das
int3
cmp
push
test
mov
or
xlat
xchg
test
lods
sub
addb
adc
in
add
sub
imulb
dec
mov
mov
gs
pop
movsl
into
jbe
rorb
jnp
dec
mov
addr16
dec
jmp
and
jns
cld
int
dec
mov
pop
cmpsb
aad
or
pop
push
and
or
fwait
ss
cmpl
sub
mov
shll
std
cmp
bound
push
repnz
xor
mov
fmuls
dec
lcall
ret
cmp
dec
cmp
outsb
rcll
and
test
popf
insb
push
cmp
dec
out
sarb
aas
adc
jo
push
cmp
out
outsb
clc
pop
jnp
sub
jno
sub
push
idiv
xorb
dec
jmp
cmp
sbbl
cwtl
jbe
jae
in
and
mov
pop
lods
iret
out
jp
push
enter
jecxz
negl
mov
jl
push
jl
pop
shlb
and
add
dec
fsubs
aaa
in
cpuid
push
outsb
mov
inc
loopne
in
pop
bound
outsl
sahf
ss
add
and
mov
dec
inc
adc
inc
out
idivl
push
test
stos
mov
xchg
jge
inc
sub
daa
pop
aas
cltd
pusha
cmp
mov
clc
sahf
cmc
out
adc
sbb
sub
inc
jge
ds
dec
into
leave
es
shl
dec
ja
js
dec
sbbb
jmp
cmpsb
lret
mov
bound
add
stc
repnz
xlat
dec
mov
cmp
push
mov
mov
mov
ja
imul
cli
fadds
mov
in
add
and
cmc
push
mov
adc
add
cmp
ja
out
cmp
outsb
int
inc
pop
lret
jle
bound
fadds
inc
sub
ss
dec
sub
mov
adc
loop
and
xchg
loop
js
or
and
std
mov
out
std
pusha
movsl
jge
dec
xchg
je
mov
cld
stc
in
xchg
cmp
mov
cmp
cmc
test
clc
xchg
cmp
test
fcoms
sbb
or
jb
fidivrl
arpl
pop
fildl
jle
xor
scas
fiadds
scas
insl
jns
mov
mov
aas
mov
out
nop
sub
or
or
lock
mov
repnz
xor
sub
insl
cmp
sbb
dec
cmpsb
pop
add
mov
loopne
pop
cmp
divb
addl
add
cmp
adc
lock
mov
cli
adc
in
jge
sub
mov
push
movsl
or
dec
push
jl
movsl
rcrl
cwtl
sub
js
addl
mov
mov
xchg
dec
out
fst
push
mov
out
sub
int3
movsl
jno
mov
ficomps
outsb
cmp
add
or
popaw
mov
idivb
mov
in
ja
adc
ljmp
pop
pop
mov
push
js
push
xchg
xlat
incl
jo
into
mov
imul
outsl
mov
push
int
push
inc
in
decb
push
xor
cmc
push
fldenv
je
stos
sbb
pop
mov
test
adc
sbb
loope
inc
or
and
cmp
in
inc
and
mov
sub
inc
xchg
mov
mov
cmpsl
cld
push
movsl
popf
stc
shll
arpl
xchg
in
jae
loope
inc
cmc
adc
data16
movsb
sahf
in
outsl
enter
gs
mov
orl
inc
addl
test
pop
addr16
push
dec
push
jne
sbb
stos
mov
push
imul
insb
inc
testb
scas
mov
mov
imul
scas
and
pop
mov
inc
aaa
inc
push
cs
sub
adc
aad
mov
dec
fs
rorb
and
jbe
leave
adc
add
pop
lahf
loop
mov
cmpsb
xor
ficoml
pop
dec
ds
mov
test
sbb
pusha
aas
xor
mov
cli
pop
test
push
dec
or
cmp
xor
fstpl
cmp
call
bound
dec
je
jno
leave
push
push
sbb
mov
sub
outsl
sahf
sub
hlt
jo
into
mov
dec
mov
jmp
jbe
push
xorl
jl
add
jmp
out
xchg
mov
aad
add
jae
mov
add
jmp
aam
int3
push
ret
xor
sub
fmul
push
dec
pop
jg
bound
pop
mov
jge
and
cmp
fs
inc
nop
out
mov
push
mov
sub
xchg
adc
xchg
push
sub
xchg
push
sub
cmp
inc
push
xor
cs
popf
faddl
int
pop
lods
cmpsl
cmp
repnz
inc
mov
push
mov
jge
enter
add
aad
sub
test
inc
sti
xor
pop
pushf
cmpsl
inc
int3
sbb
xor
xor
xchg
icebp
out
push
inc
mov
or
inc
int3
dec
pop
xor
jns
xor
pop
or
popf
lods
pop
xchg
leave
cmpsl
mov
leave
in
cmp
mov
sbb
mov
cs
sbb
ljmp
ljmp
sbb
das
lahf
xor
imul
add
subb
or
jmp
xor
xchg
mov
dec
mov
adc
xchg
jmp
jnp
cwtl
sub
adc
sub
leave
and
pop
adc
add
xrelease
dec
sub
inc
lods
das
xor
movb
in
into
push
adc
movl
fistpl
dec
push
mov
xchg
mov
mov
mov
pop
mov
adc
aam
jae
inc
sbb
push
int
rcr
jno
add
lret
arpl
orl
imul
sahf
lahf
jle
imul
stc
outsb
mov
mov
fwait
sarl
jne
mulb
add
dec
pop
pop
dec
imul
ret
data16
lret
or
mov
sbb
fists
cld
lods
shll
pop
in
push
push
inc
popa
popf
sbb
adc
lds
dec
sub
sarl
push
fsubp
lahf
mov
jo
jmp
adcb
pop
jno
mov
mov
push
addr16
mov
pop
negb
push
mov
jg
push
popa
inc
mov
adc
dec
fiaddl
pop
push
sbb
mov
xchg
mov
adc
rolb
jno
sbb
fs
loope
daa
dec
jae
lods
sbb
or
arpl
cwtl
sbb
adc
movsl
out
push
aaa
jo
cli
das
inc
es
inc
stos
or
mov
jg
stc
pop
sub
xor
scas
mov
lods
shrb
dec
adc
add
int
outsl
cmpsb
mov
mov
mov
sbb
cmp
jmp
jne
jo
leave
subl
lock
fmuls
jns
xor
aam
out
mov
ss
aaa
jns
jecxz
mov
xor
pop
popf
ja
mov
sahf
aad
add
xor
add
jecxz
push
incb
push
imul
cwtl
ljmp
mov
icebp
aam
cltd
pop
loope
rolb
pushf
scas
sarl
mov
addr16
xor
sbb
push
xchg
push
pop
pop
push
in
xor
jo
lcall
test
movsb
ret
dec
sbb
aad
push
lock
frstor
into
push
xor
test
ret
imul
push
movsl
xor
jne
nop
popa
repnz
push
mov
jno
inc
mov
push
nop
repz
insb
or
je
pop
jle
movsl
and
xchg
xor
fistpl
xor
jno
or
pop
into
ljmp
sbb
lods
fdivrl
leave
mov
aas
or
dec
mov
ficompl
mov
pop
push
add
lahf
mov
cmp
inc
outsb
outsb
jg
movsb
mov
in
addr16
adc
addl
loope
adc
jnp
cs
push
xor
pop
xchg
movsl
push
sbb
xchg
add
pusha
xchg
jl
or
decl
mov
sbb
cs
jne
ret
fistps
jae
mov
mov
xor
test
mov
sbb
hlt
popf
cmp
cmc
mov
ljmp
addb
aam
mov
int
loope
mov
aad
addr16
ja
cmp
dec
fnstsw
jae
mov
aam
lock
cwtl
fsubrs
sub
sub
and
loopne
xchg
push
jg
xor
int
test
loopne
pusha
fadd
mov
rcll
std
jg
fstpt
mov
push
xchg
lret
xlat
and
gs
or
outsl
pop
loop
jmp
xor
mov
sub
idiv
cmpsb
inc
and
xlat
out
mov
into
jo
fiaddl
add
aaa
movsb
and
push
ret
adc
adcl
bound
mov
inc
inc
mov
inc
in
mov
sub
sbb
loope
pop
scas
lock
push
popa
push
imul
std
sbb
xor
lret
das
lret
popf
xor
pop
lret
jle
loope
popf
sub
xchg
hlt
and
imul
push
mov
dec
push
mov
fsts
xor
fucomi
dec
cltd
push
mov
adc
mov
adc
sbb
adc
cmp
ds
mov
inc
jp
mov
jp
inc
insl
mov
fcom
add
data16
add
pop
adc
sbb
adc
cmpsl
jnp
sbb
jg
inc
nop
decl
movsb
loop
dec
shll
cmp
push
gs
mov
mov
mov
add
insb
xchg
sub
bound
stos
pusha
push
dec
inc
ja
sti
pop
sbb
mov
test
imul
mov
lcall
mov
and
movsb
insl
cmpl
loopne
arpl
or
dec
fs
jne
push
mov
movsl
rcrb
movsl
cli
out
adc
je
push
xchg
or
loop
pop
and
arpl
sbb
into
jmp
sahf
pusha
bound
fisubs
lret
int
fldenv
test
sub
add
jae
lret
ret
daa
cs
mov
xorb
insl
ja
cmpsl
arpl
iret
rorb
push
lock
inc
in
daa
shl
push
jg
inc
repz
push
adc
cmp
lock
inc
or
inc
ja
shll
dec
in
into
repz
mov
lods
xchg
test
neg
test
xor
jne
cmp
xor
or
lea
sub
adc
push
xchg
xor
pop
popf
lahf
test
pop
pop
inc
lods
iret
or
and
data16
insb
rolb
mov
mov
filds
jle
enter
jns
and
push
roll
xor
aad
adc
fistpl
decb
jae
xchg
mov
sub
and
fistpll
dec
sub
mov
or
int
xor
andb
mov
in
notl
mov
inc
cwtl
rolb
xlat
jmp
pusha
pop
mov
rcll
mov
lock
xchg
pop
fbstp
adc
lods
bound
cmc
sbb
int
out
mov
jne
add
mov
cmpsb
out
andl
and
sbb
push
mov
int3
aad
mov
add
cmp
test
pop
div
out
cld
aas
push
push
sub
mov
sbb
push
mov
sub
push
and
enter
fldenv
lea
fstl
inc
hlt
es
dec
lret
hlt
fnstcw
mov
push
sbb
negb
inc
pusha
rolb
fldcw
mov
outsb
leave
std
fists
pop
scas
inc
fistps
cltd
sbb
pop
arpl
cmp
pop
hlt
divb
lea
pop
shl
rclb
scas
sbb
cld
lock
ds
out
popf
repz
push
subb
out
pop
std
mov
and
xchg
es
out
sti
mov
cld
mov
sub
fbstp
shll
xor
and
dec
rcrb
adc
rcrl
xlat
mov
cmp
call
mov
ljmp
and
lods
out
adc
pop
push
mov
jns
adc
cmp
lahf
int
jo
or
call
pop
or
mov
xlat
iret
aad
jb
cmp
and
ja
cmp
lea
out
es
pop
push
jp
and
or
adc
in
pop
les
or
sub
aas
icebp
cltd
mov
inc
movlps
jmp
loope
in
jne
bound
lds
and
cmp
xchg
fs
lcall
sub
and
iret
mov
mov
jns
repz
sbb
xchg
arpl
pop
jge
add
rcr
sub
in
test
aaa
sub
cs
cmp
les
xor
pop
mov
push
mov
sahf
xchg
loopne
cmpsl
xchg
xor
sub
pop
mov
dec
movsb
inc
into
sbb
enter
mov
repz
mov
push
xchg
shl
cmc
sbb
fs
movsb
add
pop
cli
cmp
dec
sub
jne
cmp
lods
movsl
cmp
ja
sub
orl
mov
aam
cmp
and
out
call
pop
lds
add
lahf
dec
ds
sbb
sti
shll
or
xor
jae
js
test
xor
inc
in
out
fprem
dec
and
ret
lock
push
inc
or
aad
jb
push
or
jge
daa
mov
dec
mov
sub
int3
add
or
into
rcrl
inc
push
cli
push
jbe
out
loop
pop
jae
ss
mov
cmp
inc
stos
add
jl
scas
add
push
xchg
test
fsub
cmp
xchg
lret
jge
hlt
faddl
rolb
sub
lcall
aam
jne
mov
cmp
xchg
out
adc
or
incl
adc
pushf
mov
push
daa
xchg
iret
rcr
aaa
addr16
repz
mov
or
rolb
inc
pop
loop
inc
inc
outsl
lahf
pop
push
sahf
movsl
fisubrl
mov
or
mov
leave
xor
rol
pop
and
addr16
repnz
push
dec
stc
mov
aad
ud1
jno
inc
hlt
push
popf
mov
in
ret
fiadds
push
dec
cmp
jne
xor
mov
mov
add
inc
lcall
leave
sbb
mov
mov
jbe
xchg
push
outsl
adcb
popa
pop
sub
gs
sbb
cltd
aad
pop
xchg
mov
cmp
rcr
enter
lods
jl
xlat
push
sub
or
push
lret
mov
inc
repz
rcrl
cmp
insb
sti
mov
ret
sub
adc
in
mov
mov
dec
jo
scas
in
pop
loopne
ror
xlat
cmp
aam
es
jg
ss
bound
jo
loopne
xchg
outsl
xchg
std
scas
adc
jecxz
mov
mulb
test
testb
pushw
dec
mov
xor
fistl
lcall
les
or
pusha
mov
mov
jmp
pop
nop
add
bnd
test
push
and
push
mov
sub
gs
pop
hlt
test
or
out
cmp
jmp
xor
cmp
dec
push
imul
test
ljmp
test
cmpsl
mov
ds
in
bound
pop
and
je
sbb
pushf
bound
mov
mov
and
pop
adc
call
insl
push
push
leave
push
and
xlat
mov
sbb
ret
jb
out
shrb
and
aaa
mov
stos
push
push
lret
sarb
adc
inc
or
sub
xor
and
movsl
adc
fidivrl
add
add
cmpsb
scas
jbe
out
add
push
enter
out
dec
sbb
jo
add
dec
mov
movsl
xlat
jbe
cmp
inc
in
mov
test
das
stos
jne
mov
push
test
shrb
leave
pushf
push
gs
xchg
clc
adc
pop
pop
mov
xor
testb
ficoms
mov
inc
push
pop
sbb
gs
fidivs
pop
pop
jbe
mov
add
pop
push
push
pop
pop
xchg
or
sub
and
mov
adc
int3
mov
push
push
mov
mov
push
dec
call
and
int
cmpl
cld
arpl
inc
movsl
movl
cmpsl
movsb
mov
icebp
xor
incb
xchg
xor
movsb
test
adc
lret
js
imul
shlb
test
orb
out
xor
add
addr16
xor
and
and
jmp
inc
lret
sub
mov
cmp
cmp
mov
fcomps
jnp
stos
andl
ja
stos
xchg
leave
je
push
mov
add
xor
sbb
or
jbe
enter
out
pop
daa
xlat
mov
pop
xchg
out
test
add
daa
bound
hlt
scas
mov
movsl
or
js
and
pop
outsl
fiadds
lret
arpl
mov
dec
cld
and
ja
and
jo
out
lahf
or
outsb
out
sbb
rcll
aas
imul
dec
or
sub
imul
test
adc
sub
fnstenv
sub
sub
push
ficoms
xor
lahf
pop
arpl
sbb
mov
test
cmp
pop
sahf
lahf
xor
mov
test
xor
js
movsl
dec
jns
mov
ret
paddw
shlb
popf
cmp
lcall
movsl
cmc
pop
daa
push
jbe
lret
inc
les
in
push
cmpsl
push
jae
out
or
sub
pushf
jbe
mov
dec
push
pop
sub
push
ret
push
mov
or
adc
pop
enter
and
lea
jmp
push
cmpl
sbb
dec
daa
xor
xor
shrb
loop
dec
pop
nop
popf
jb
addr16
add
fstl
mov
insl
mov
inc
mov
daa
fstpt
loope
mov
mov
jp
mov
jle
push
xchg
stos
aas
xor
push
inc
enter
in
in
jno
fsubrl
insl
sub
adc
cltd
inc
jno
test
lds
or
decl
negl
das
fmull
shr
mov
popa
je
flds
xchg
pop
mov
adc
outsl
enter
and
test
xor
mov
push
ret
fidivl
jb
sbb
out
lock
pop
insl
mov
fcomp
dec
sbb
push
daa
push
jmp
push
xor
lods
mov
mov
mov
push
inc
rcr
imul
and
jmp
mov
icebp
mov
fisubl
sub
jno
cmp
shr
xchg
call
ret
imul
cld
js
popa
or
and
ja
jle
pop
cmpb
out
cwtl
lods
pop
or
mov
pop
je
jb
xchg
jo
adc
notb
mov
test
stos
pop
fs
std
or
jb
jnp
icebp
sahf
xor
dec
lock
pop
and
jmp
cmp
dec
sbb
insl
popa
int
leave
insl
mov
lret
and
loop
mov
xchg
jnp
and
lahf
test
mov
cltd
and
pop
dec
mov
push
push
or
nop
out
lods
adc
sbb
lock
pop
jae
cmp
sbb
lret
in
faddl
arpl
test
fidivrl
adc
mov
pop
rorb
gs
pop
mov
mov
jmp
xchg
add
out
cmp
sarb
sub
mov
pop
push
pop
mov
jne
fwait
ljmp
xor
cmp
xor
in
xor
jmp
in
imul
dec
or
std
loop
jl
jl
int
mov
pop
scas
lds
or
or
mov
pop
adc
fwait
iret
jnp
sahf
hlt
fisttpl
mov
adc
jg
pop
mov
data16
arpl
nop
and
pop
adc
cmc
dec
push
out
lods
add
loopne
adc
pushf
adc
sbb
into
in
and
mov
cmp
jb
sbb
add
movsb
mov
mov
dec
out
cmp
mov
sub
pop
jnp
mov
mov
inc
nop
mov
dec
dec
sbb
push
addr16
inc
daa
mov
mov
sub
push
sbb
xlat
loopne
add
pop
daa
imul
rorb
adc
push
pop
push
fidivrs
fwait
xor
lcall
mov
push
scas
cld
xchg
arpl
push
movsl
lret
repnz
cli
mov
sbb
scas
mov
scas
xchg
jg
xor
ss
hlt
subl
in
loop
add
push
iret
mov
xchg
inc
mov
xor
jl
mov
xchg
adc
jmp
jp
pop
rolb
adc
dec
push
test
int
mov
jge
xchg
adc
xor
ficoml
cld
sbb
xchg
daa
xor
test
xchg
and
stos
jbe
loope
sub
lret
cld
stc
call
mov
push
jo
shll
fbld
xchg
dec
repnz
lret
sub
fcmove
sbb
insl
mov
shrl
add
aaa
mov
imul
push
xchg
gs
push
inc
push
mov
stos
or
adc
dec
ds
sub
roll
pop
lods
sar
and
mov
cmpsl
cmp
mov
inc
mov
push
cmp
fidivrl
jle
leave
mov
ret
dec
mov
xchg
pop
gs
jo
mov
stc
inc
inc
dec
ljmp
insb
and
addr16
repnz
negb
mov
test
pop
repz
popa
and
pop
ss
cmp
int
scas
repnz
mov
rclb
sub
shl
ljmp
call
inc
or
mov
pop
and
roll
fadd
mov
push
pop
insl
push
loop
fdivl
ret
add
sub
xor
mov
cld
arpl
mov
loop
and
aas
xor
nop
mov
lret
mov
stc
mov
or
rorb
hlt
cmp
adc
adc
outsb
xchg
cmp
pusha
es
or
lret
add
push
mov
fistpll
popf
sbb
fstpt
and
push
into
roll
sti
mov
fs
out
lahf
data16
inc
cwtl
add
stc
push
sbb
jg
mov
out
mov
in
cmpsl
push
lea
scas
fnstenv
mov
adc
add
xor
out
sahf
addr16
cli
xor
dec
mov
ds
mov
jmp
mov
adc
cld
mov
xchg
push
and
push
mov
pop
push
test
jbe
mov
push
sarb
push
lods
in
sbb
xor
scas
sub
ret
lods
stos
sub
sbb
std
jle
sti
shrl
std
sub
ja
xorb
xor
insl
add
mov
ljmp
cmp
scas
sbb
inc
xor
push
call
cmpsl
cmp
lods
xor
pop
adc
cmp
mov
mov
jo
cmp
pop
or
xchg
cmpsl
sub
push
jmp
aas
push
in
out
xor
out
inc
insb
jae
pop
push
jb
sub
or
repz
aaa
lret
mov
sbb
gs
xlat
aad
in
repz
or
or
xor
shlb
cmpsl
stos
push
sar
inc
adc
fs
xchg
lcall
andl
or
adc
add
lret
push
rcrb
mov
jge
iret
insb
into
es
and
andl
pop
in
push
or
push
loop
jecxz
out
mov
cwtl
sub
lock
adc
clc
stos
add
clc
cmp
lds
std
mov
push
je
mov
jle
xchg
or
pusha
loopne
cmc
jle
test
add
lods
or
lds
dec
mov
mov
cmpsb
adc
jo
mov
mov
insb
mov
and
sahf
lahf
cmp
mov
out
cmp
xlat
jbe
loope
jbe
pop
ret
cs
lods
roll
fbstp
nop
mov
sarl
dec
dec
inc
shrl
jl
mov
and
cmp
call
mov
jmp
mov
push
call
pop
push
rcrb
popf
sub
in
mov
mov
ror
pop
or
ljmp
jl
push
push
int
pop
xor
gs
mov
jns
test
cmp
jg
fsubrs
filds
loope
cwtl
fwait
js
sub
insb
pushf
loope
mov
sub
test
popf
outsl
push
ja
das
cmpsb
js
and
ret
testl
push
pop
or
add
mov
aad
pusha
dec
inc
aad
or
xchg
jo
xor
or
jne
push
inc
test
dec
cli
ss
pop
jns
dec
jecxz
inc
repnz
and
mov
mov
push
es
int
xchg
mov
and
adc
scas
and
pushf
lods
lret
idivl
xor
jecxz
cmpsl
jp
jmp
xlat
mov
xchg
rorl
mov
jmp
test
jmp
or
ja
cmp
sbb
xchg
daa
ljmp
sahf
lret
sbb
fwait
das
mov
and
mov
lret
pop
js
lods
or
imul
cltd
les
cmp
fwait
clc
ret
jb
iret
pop
xor
lods
and
out
mov
xor
loop
lret
and
adc
std
mov
mov
and
ficompl
jb
int
je
sub
inc
mov
cld
arpl
cld
xchg
inc
mov
mov
imul
adc
ss
adc
loopne
or
iret
shlb
out
xor
js
jl
cs
jmp
inc
ret
pop
in
std
sub
dec
jno
add
mov
mov
cmp
rolb
jmp
add
jae
popf
cld
pushf
add
in
inc
push
inc
rclb
adc
js
adc
rolb
sbb
pop
in
jl
xor
pop
gs
inc
jmp
int3
pushf
in
dec
sahf
insl
xchg
rcll
xlat
scas
lahf
cmp
push
sub
cltd
jno
fnsave
insb
in
data16
sbb
sub
stos
pop
mov
inc
or
pop
fwait
popf
xor
pop
fisttps
lahf
mov
xchg
mov
jo
inc
mov
cmc
jmp
notb
or
test
inc
lahf
cltd
add
lahf
jb
xchg
nop
hlt
sub
adc
sub
dec
cmc
mov
mov
dec
test
scas
out
iret
push
push
cmc
mov
ljmp
repz
fldt
pop
mov
sbbb
cmc
mov
enter
repz
test
inc
jl
jns
jns
cli
dec
repz
sbb
and
lods
inc
lret
push
and
idivl
or
sbb
xor
mov
push
lods
shrb
adc
addl
shrl
xchg
test
xor
sti
ret
loope
sbb
sti
loop
sahf
gs
cmpsl
push
push
mov
outsb
imul
std
fnstsw
mov
not
mov
push
out
sub
lcall
movb
fidivs
cmp
add
xchg
out
movl
lods
data16
jmp
daa
out
adc
rdmsr
add
shll
out
and
mov
sbb
ret
push
add
dec
jne
orb
adc
jne
imul
imul
cmp
int
mov
mov
shr
imulb
nop
push
ret
cmpsl
lds
adcb
xor
inc
or
clc
bound
add
roll
mov
push
test
ja
mov
loop
fucom
cwtl
jge
insb
pop
xor
dec
push
jb
or
das
push
add
mov
xchg
lret
mov
jo
cltd
mov
in
out
push
mov
mov
mull
mov
sbb
add
or
inc
shl
movsb
sbb
lret
sbb
mov
lahf
push
fxch
xorl
lods
sub
test
jno
pop
cmpl
popf
pop
outsl
mov
sbb
je
push
mov
jp
minps
jne
dec
dec
mov
in
pushf
adc
pop
jle
push
mov
mov
push
pop
mov
scas
aam
push
sbb
xchg
popf
or
cmpsl
ret
xchg
mov
les
mov
dec
add
sbb
mov
xor
int
cmp
dec
sbb
inc
xchg
loopne
push
ficompl
mov
lcall
push
lret
push
add
nop
in
ficoms
pop
mov
lods
xchg
pop
daa
push
mov
pop
push
mov
sbb
inc
stos
adc
pop
and
fidivrl
pop
jmp
xchg
cmp
adc
sbb
movsl
pop
gs
gs
add
mov
cli
enter
or
pop
aas
movsl
ds
cmp
andl
cmp
sbbl
lea
sbb
insb
test
mov
ret
cmp
call
lods
pop
xchg
dec
sbb
icebp
inc
jmp
jno
xchg
sbbl
cwtl
aas
mov
pushf
or
rcpps
inc
pop
fs
mov
jle
addb
pop
mov
pop
pop
call
cmp
dec
lock
fwait
and
or
sbb
sbb
pop
jmp
cld
push
jb
lret
dec
cmpsl
mov
add
mov
xchg
adc
into
dec
mov
push
lds
xchg
xor
cmp
pushf
and
in
mov
and
cmp
lds
jg,pt
pop
out
in
dec
mov
mov
nop
addr16
getsec
jb
fimull
ficoml
lret
adc
lret
dec
dec
adc
lods
loop
mov
lock
push
jl
dec
loopne
inc
addr16
cmp
cmp
sti
adc
cmp
xchg
jnp
inc
add
ss
xlat
in
dec
dec
add
push
jmp
fidivrs
adc
adc
stc
adc
push
scas
rcrb
into
das
rorb
jmp
adcl
repz
pop
mov
dec
out
movsl
mov
aad
fldl
in
les
incb
xchg
cwtl
mov
adc
mov
cmc
xchg
insl
xchg
or
stos
bound
mov
push
imul
xchg
les
xchg
adc
adc
jp
cs
and
stos
pop
and
mov
in
mov
lcall
or
rorl
push
push
push
in
push
or
jmp
mov
cmp
sub
sbb
mov
cmp
fsqrt
xor
mov
add
pop
nop
bound
dec
jl
and
idivl
mov
loope
in
mov
ja
add
imul
xchg
js
inc
push
mov
das
mov
mov
and
popf
dec
in
fwait
rorb
movsb
cmp
or
outsb
mov
andl
mov
push
stc
arpl
xchg
clc
aam
cmp
sub
mov
mov
mov
push
mov
out
add
iret
inc
imul
cmpsl
fwait
popf
pop
out
std
ljmp
dec
daa
ds
and
out
add
sarb
push
mov
push
jns
xchg
mov
mov
repnz
jbe
sbb
push
pop
xor
mov
int3
sbb
xchg
push
test
mov
stos
sti
dec
inc
ds
cmpl
fcompl
dec
loope
push
data16
jnp
push
addr16
cltd
adc
in
pusha
ficoml
leave
dec
inc
inc
outsb
ljmp
out
jae
frstor
into
push
rcll
xchg
out
out
xor
lret
adc
cmp
push
fs
mov
scas
inc
sbbl
mov
sub
add
and
xchg
in
or
xchg
int3
add
ja
mov
xor
sub
out
xchg
push
lods
sti
jnp
out
mov
add
push
add
mov
fs
sbb
mov
dec
std
xor
cmp
pop
data16
xor
movsb
cmp
mov
sbb
dec
shll
fiaddl
es
add
mov
mov
in
adc
sbb
sbb
jb
sbb
xchg
repnz
cmc
and
fwait
dec
cmp
sbb
adc
call
jp
mov
lock
push
shlb
mov
push
add
push
fdivl
xor
mov
xchg
test
sub
and
and
inc
rcr
jg
xchg
sub
mov
stc
push
jmp
pop
test
adc
lahf
lods
scas
jp
sub
or
mov
test
mov
test
mov
outsl
scas
pushf
sub
mov
pop
jmp
jmp
mov
mov
jmp
push
mov
sarl
insb
inc
inc
iret
xchg
or
adc
dec
xchg
clc
pop
inc
sti
or
into
leave
mov
out
loope
ficompl
leave
xchg
roll
sbb
jno
test
repnz
rol
leave
test
cld
mov
stc
mov
adc
mov
xchg
fiadds
sub
jg
out
aaa
cmp
rclb
stos
dec
xor
mov
addb
insb
or
adc
dec
inc
push
xchg
test
and
dec
xchg
pushf
imul
out
dec
and
dec
pop
dec
inc
enter
data16
add
and
aas
andb
pop
loope
cld
adc
stos
jp
mull
push
pop
arpl
es
rcr
leave
push
mov
mov
jae,pt
fs
pop
mov
lock
mov
push
sbb
dec
sub
cmc
sbb
xor
stos
in
fwait
sbb
add
mov
mov
push
jecxz
xchg
out
je
stos
mov
test
mov
and
pop
test
mov
ljmp
pusha
into
sbb
sub
xlat
out
movb
jae
sbb
sub
dec
push
fdivl
add
or
sub
int
jb
rcrl
into
fnstenv
call
into
sub
push
xchg
aas
shrb
jb
jne
dec
mov
mov
repz
or
mov
out
jle
lds
dec
add
cmc
mov
xor
cmp
mov
out
add
enter
xchg
xor
or
pop
cld
sbb
jl
fnstsw
pop
mov
pusha
ja
cli
orl
sti
nop
scas
dec
lcall
mov
mov
cmc
jo
xchg
xor
cmpsl
pusha
test
xor
ror
adc
lea
mov
add
cmp
mov
scas
les
inc
jns,pt
mov
lcall
fidivl
sbb
sub
sbb
and
scas
in
sahf
mov
xor
cmp
jmp
push
mov
mov
dec
and
push
or
jge
and
inc
dec
sti
add
jecxz
jns
in
pop
push
xchg
test
sub
sar
cmp
sub
mov
push
shl
inc
ljmp
testb
cmp
rcr
push
and
mov
cs
dec
out
bswap
push
cmpsb
push
movsb
ror
test
sub
xor
sub
das
inc
stc
mov
sahf
rcrb
mov
iret
add
out
insl
pushf
push
iret
or
push
fdivs
lret
ret
pop
or
enter
cld
arpl
call
xlat
mov
xor
and
cmp
insb
in
mov
call
out
jmp
inc
push
aaa
sbb
pop
xor
pop
mov
xorb
shrl
jl
scas
mov
pusha
mov
fnstenv
sbbl
xor
and
cs
xchg
jl
andb
inc
add
or
push
rcr
sub
sahf
add
push
dec
jmp
sub
xor
shrl
mov
mov
jno
add
nop
orb
fsubrl
int3
or
inc
ljmp
enter
ds
xor
sub
mov
jecxz
dec
ret
xchg
test
sbb
lods
fnstcw
insb
sahf
mov
fsubrp
lcall
popa
inc
and
lods
mov
pop
daa
fincstp
ja
in
cmpsl
jo
xor
clc
jo
push
cmpsb
or
pop
xchg
cmp
cmp
inc
mov
pop
std
mov
insb
rcll
jne
sbb
mov
sahf
jp
repnz
outsb
xchg
jp
and
sbb
popa
or
aad
xchg
loopne
xchg
xchg
loopne
inc
xchg
push
xchg
pushf
loop
xchg
and
into
leave
jmp
in
or
int
inc
aaa
sbb
cmpl
ret
dec
int
scas
push
fs
es
mov
dec
leave
jp
xor
inc
stc
out
in
add
insb
or
aas
push
rcrb
sub
lods
lock
mov
test
scas
mov
popf
xchg
inc
insl
jne
idivl
sti
sbb
nop
cmp
enter
adc
cmp
fisttpll
lock
cli
lret
das
cmpl
shll
push
dec
jecxz
push
and
cmpsb
mov
inc
jae
sti
popa
inc
xchg
or
nop
cmpb
xor
inc
out
xor
add
dec
in
pop
lea
lar
scas
and
icebp
mov
cmp
aas
je
sub
mov
sbb
or
or
pop
in
dec
cmp
cmp
pop
cmc
add
xorb
jge
idivb
cmpsl
shr
in
or
jbe
fs
mov
cli
sub
mov
mov
pop
arpl
jl
or
sbb
xchg
push
sbb
test
mov
in
jl
test
nop
es
mov
push
ja
pop
hlt
push
xchg
xor
lcall
jae
gs
nop
jge
lea
mov
shll
ds
sub
add
dec
into
scas
test
cld
insb
and
dec
inc
xchg
pop
push
repnz
arpl
loope
sbb
shr
add
lret
lea
fwait
mov
test
xchg
js
dec
sbb
int
cld
out
movsl
lods
shl
push
rcrb
mov
add
pop
ds
call
mov
filds
mov
popa
pop
jle
sub
push
mov
xor
inc
push
lock
jne
mov
jbe
addl
popa
and
mov
fldenv
lret
mov
xchg
add
roll
sahf
add
arpl
mov
sub
fistpl
and
pop
fistpl
jae
dec
int
lahf
movsl
jnp
pop
sarb
cmp
inc
xor
ljmp
int3
mov
ror
je
enter
mov
iret
repnz
lcall
jns
mov
mov
fwait
leave
gs
into
adc
data16
cmp
mov
es
mov
lcall
add
lods
fdivp
or
jp
enter
inc
in
lret
testb
popl
pop
add
sub
mov
inc
lret
xor
jecxz
shll
lods
daa
out
cs
mov
jl
aaa
lea
sub
std
shld
cmp
into
ror
mov
or
mov
push
in
inc
imulb
rorl
pop
stc
mov
into
dec
mov
add
sahf
cmp
and
in
sbb
loop
jmp
push
mov
stc
sub
cmpsb
sub
mov
pop
jb
or
or
fdivl
xchg
test
fcoms
adc
cwtl
pop
mov
inc
mov
ds
pop
or
lret
je
pop
xor
lock
rclb
pop
mov
xor
jge
jno
into
les
loopne
mov
ss
jmp
bound
mov
cmp
xor
iret
dec
je
mov
or
mov
sbb
xchg
ret
lret
scas
mov
push
dec
orl
mov
in
bound
mov
cmp
inc
stos
int
mov
dec
shll
das
add
icebp
sbb
out
ret
xlat
pop
add
imul
inc
sub
lahf
je
sub
clc
fildl
stos
pushf
fisubrs
push
lret
sbb
add
adc
or
daa
in
lahf
sub
pmulhw
nop
inc
idivl
les
lcall
fs
push
enter
mov
sbb
and
out
mov
inc
rcrl
imul
jnp
pop
mov
pop
arpl
pop
mov
push
push
mov
inc
mov
mov
out
jl
mov
fstpt
lea
dec
enter
push
andl
dec
cmp
xchg
ds
js
inc
push
mov
out
scas
pop
mov
sub
cltd
jbe
pop
insl
and
insb
push
jbe
mov
insl
outsb
das
in
lds
shrl
xchg
push
jno
or
repz
sbb
addl
cmp
shrl
dec
test
xor
popa
adc
popl
lock
xor
int3
mov
xor
inc
imul
movsb
mov
addl
dec
and
adc
enter
inc
movsb
lret
cs
aas
inc
adc
cwtl
and
rclb
fwait
jns
fsts
adc
jo
or
pop
adc
lret
or
stos
repnz
shll
rolb
sbb
incb
xchg
popa
test
out
aas
into
sahf
mov
cld
cmp
push
jmp
fmuls
subb
stc
pop
inc
scas
sub
adcb
adc
cld
dec
daa
or
outsl
movsl
and
cmp
adc
fiaddl
enter
cmp
jg
cwtl
push
mov
or
jnp
cwtl
popf
nop
push
pop
inc
insb
pop
ficoml
push
movsl
pop
clc
test
xchg
jnp
jmp
leave
call
incl
aam
dec
cmp
lods
mov
leave
hlt
xchg
insb
test
jb
adc
mov
mov
xchg
addl
sub
mul
xchg
mov
daa
pop
or
addb
bnd
adc
mov
sub
and
adc
xor
lret
lret
jge
inc
inc
xchg
xor
shr
jecxz
dec
pop
sbb
jge
push
mov
jb
lock
arpl
mov
lods
mov
je
inc
sub
sbbb
xchg
je
xlat
in
cmp
idivb
aaa
test
sub
mov
push
out
jb
jns
jmp
or
mov
sbbb
fs
dec
pusha
leave
aad
mov
ret
jbe
enter
out
mov
lods
adc
mov
sub
pusha
sub
lcall
xor
lret
mov
cmc
sbb
out
into
sub
dec
xchg
dec
scas
xor
rcrb
adc
sub
adc
jge
jmp
jns
mov
scas
pop
iret
push
cmp
fisubrs
movb
xchg
xor
mov
or
add
sar
sbb
ljmp
mov
xchg
or
push
pop
or
mov
dec
pushf
test
pop
mov
arpl
mov
push
movsl
mov
jl
add
ds
les
lea
ja
mov
in
sbb
mov
dec
sbb
jge
sti
stc
fld
push
xor
push
movsl
out
xlat
call
stos
mov
mov
mul
xor
xor
imul
xchg
enter
cltd
orl
out
ljmp
incb
pusha
jge
or
sub
movsb
and
cmp
inc
push
jnp
push
addr16
mov
mov
out
rcrl
adc
dec
xchg
iret
loope
pop
and
xor
mov
sub
mov
sarb
imul
icebp
xchg
or
mov
sub
insb
jb
push
mov
repnz
mov
popa
lds
jle
jge
scas
std
test
rcrb
xchg
push
lds
ljmp
jnp
inc
xor
and
push
push
ljmp
mov
int
cld
and
stc
call
xor
int3
je
mov
jne
fdivrp
xchg
dec
mov
sub
pop
lahf
cmp
mov
shrb
lcall
das
xchg
jg
gs
outsb
sub
xor
push
out
in
enter
inc
adc
test
lds
into
mul
push
xchg
sub
mov
mov
ret
adc
rcll
mov
lods
in
insb
test
cld
loope
mov
dec
outsb
fadds
enter
xchg
dec
fldt
lods
gs
jecxz
lahf
nop
xor
add
mov
pushf
ja
test
add
mov
jecxz
dec
in
pop
lock
xlat
dec
loop
xchg
mov
fnsave
lods
movsl
cmpsb
jo
rcrl
insl
in
int
insl
ret
scas
xchg
xchg
jno
sub
stos
stos
adc
adc
sub
push
adc
lods
sub
mov
jmp
mov
pop
sub
add
mov
je
dec
push
dec
push
lods
sub
pop
mov
stc
inc
lret
test
scas
das
dec
xor
lds
pushf
adc
inc
xor
movsb
push
fcompl
insl
movsb
mov
in
add
fadd
cltd
mov
sub
hlt
or
adc
mov
es
xchg
fs
jbe
andl
cwtl
ds
outsb
sbb
mov
pop
xchg
push
out
mov
icebp
and
insb
fucomp
sbb
inc
adc
pop
xlat
lods
test
mov
inc
movsb
mov
int
push
add
ret
mov
inc
or
lret
dec
sarb
sbb
repnz
sbb
cli
add
inc
out
add
xorl
mov
out
mov
push
cltd
mov
enter
pop
insb
or
inc
mov
adc
call
adc
pop
mov
lds
in
ret
add
ds
inc
pop
pop
test
popf
sbb
and
push
out
dec
out
push
addl
movsl
cmp
scas
jae
rol
dec
inc
lods
pop
inc
adc
dec
sbb
filds
cmc
leave
sbb
mov
add
adc
sti
call
into
out
std
jb
leave
xor
xchg
enter
js
repnz
inc
inc
and
movsl
or
aas
outsb
fbstp
sbb
fimull
cmp
hlt
or
jp
xchg
mov
xor
cli
cli
cmp
xchg
or
lock
das
je
push
icebp
std
pop
lock
rorb
daa
mov
xor
jge
mov
lods
pop
pop
shrb
sbb
inc
outsb
mov
aaa
scas
pop
push
aas
cmp
xchg
lods
lret
lods
inc
les
add
adc
or
out
xor
or
gs
mov
xor
jbe
xchg
das
fsubrs
fidivrs
test
and
lods
xchg
insl
and
xchg
out
insl
push
mov
and
mov
xchg
fcoml
jne
stos
into
test
incb
cmp
cmp
mov
or
popa
lods
rcl
repnz
jo
dec
imul
inc
mov
sbbb
lret
mov
aad
jle
loop
nop
sub
mov
pop
lahf
push
andb
jge
int
add
push
mov
imul
push
mov
jl
cmpsl
xlat
aam
and
mov
adc
or
call
pop
jo
das
loop
sub
insl
mov
jl
and
lods
xlat
loope
sub
test
out
sti
cmc
xor
addb
jno
jno
lret
mov
test
cltd
dec
inc
mov
and
xor
jmp
cld
imul
add
mov
insb
cmpb
jne
jmp
not
mov
and
inc
and
push
ja
mov
and
rcrl
fcompl
cwtl
popf
mov
mov
sahf
inc
fbstp
cltd
xchg
cmpsl
dec
inc
out
jg
andb
cmpps
mov
push
adc
call
pop
jo
add
dec
jmp
mov
mov
jo
mov
fidivrs
jbe
loope
scas
xor
jne
fadd
mov
mov
aam
jp
rcl
hlt
jae
jge
xchg
scas
sti
sub
add
pop
add
outsl
in
and
mov
jl
shrb
popf
pushf
add
xchg
sub
mov
mov
cmp
xor
sbb
cmpsl
pusha
mov
push
clc
fwait
inc
push
iret
mov
xchg
or
decb
xor
dec
in
mov
xchg
test
mov
dec
mov
dec
push
stc
vpunpcklwd
xor
out
subb
sbb
inc
pop
mov
adc
out
sub
mov
cmpsl
fwait
stos
mov
lock
jae
xchg
lock
push
or
mov
or
xorb
cmpsb
lds
and
or
fdivrl
je
pop
bound
clc
push
fcompl
xchg
mov
dec
mov
jp
adc
outsb
jo
scas
insb
mov
mov
ret
in
sub
stc
mov
roll
in
jmp
jmp
lea
pop
les
roll
sbb
or
mov
stos
push
adc
into
push
jl
mov
jg
xchg
stos
xchg
add
loope
push
jbe
push
cmp
cmp
pop
sti
xchg
push
out
inc
or
or
or
jecxz
inc
or
pushf
call
xchg
repz
mov
call
inc
push
jle
push
aaa
out
incl
fstpt
xor
in
push
mov
insl
mov
add
call
inc
mov
ror
adc
fdivs
jnp
in
add
jne
mov
push
jnp
push
nop
ja
aaa
xchg
xor
daa
and
jle
loopne
stos
pop
push
test
int3
pop
in
lret
mov
loope
xchg
inc
pop
incb
sarb
test
scas
mov
and
pop
push
data16
insl
pop
push
sub
sti
xchg
mov
mov
sub
push
jns
inc
ja
leave
xchg
mov
arpl
pop
pop
testb
adc
mov
outsb
or
or
adc
cmc
mov
xchg
mov
jle
movsl
lahf
enter
in
call
adc
fists
mov
mov
pop
dec
insl
xchg
inc
outsb
mov
mov
nop
dec
jg
daa
icebp
sbbb
data16
cli
je
jle
sbb
hlt
rorl
inc
scas
les
cld
pusha
push
out
jle
lods
or
mov
pop
in
adc
and
nop
scas
loop
mov
daa
stc
in
push
adc
idivb
lods
shr
lods
add
in
mov
leave
sbb
mov
add
outsl
inc
gs
fnstenv
cmp
hlt
pop
fdivl
mov
mov
mov
mov
clc
js
pop
pop
adc
dec
jnp
sarl
stos
and
in
pop
mov
bound
sti
pop
nop
orl
jle
pop
stos
sub
divl
mov
sub
aad
or
scas
mov
jmp
inc
outsl
lods
flds
or
add
sti
sar
pushf
aad
push
jo
lret
add
sbb
adc
icebp
inc
outsl
mov
push
out
inc
cs
cmp
ret
andl
pop
fmul
mov
les
scas
pop
mov
scas
mov
xorb
sub
push
adc
xor
mov
inc
add
scas
stos
push
aam
or
push
xor
orb
mov
mov
jne
add
movsb
inc
sub
cmp
aas
pop
lds
cmp
push
lock
xor
inc
jbe
adc
aaa
dec
xor
fadds
out
lahf
stos
jle
popa
pop
sbb
es
lods
hlt
pop
and
and
arpl
test
ficompl
sbb
ja
lock
pop
rolb
and
test
xchg
sub
fimuls
adc
rcrl
andl
cmp
out
test
cmpsl
bound
dec
xchg
data16
insb
xor
cwtl
jns
cmp
sbb
adc
out
sahf
sbbl
or
hlt
in
mov
cmpsb
push
sub
cltd
addr16
mov
or
mov
mov
adc
cmp
outsb
inc
push
aam
push
into
stc
cld
call
xchg
mov
and
cltd
lods
sub
mov
shr
sti
bound
les
lea
ljmp
lea
push
or
add
mov
and
repz
xchg
test
cmp
mov
or
xchg
push
fldcw
add
dec
xor
fsub
ss
xchg
call
sbb
std
scas
mov
fdivrs
frstor
mov
dec
xchg
clc
insl
push
jecxz
es
or
inc
out
aaa
adc
push
xor
sbb
cwtl
repz
rclb
call
es
test
pop
cmc
movsl
push
fwait
mov
mov
jns
je
addr16
push
or
mov
pop
adc
mov
clc
cmpsl
cmc
sub
jg
clc
mov
mov
and
cltd
xorl
dec
data16
dec
jnp
outsl
jae
out
mov
dec
sahf
iret
scas
sysexit
xchg
adc
push
push
mov
jecxz
insl
std
nop
mov
jp,pn
in
notl
sbb
or
mov
hlt
jno
mov
rclb
decb
aaa
out
xor
in
aas
sub
push
jl
iret
mov
xor
cmovp
popf
nop
sub
cld
lds
sarb
mov
adc
aaa
in
insb
mov
imul
push
orl
in
dec
ja
or
insl
dec
cld
enter
pmulhuw
aas
jno
pop
jge
or
pushf
addr16
rep
and
shll
sub
and
xchg
push
inc
cmp
stos
push
inc
rcr
testl
test
cmc
scas
xchg
dec
cmp
cli
leave
icebp
into
movsb
insb
lods
lock
inc
xchg
sti
pop
xchg
xchg
push
ds
faddl
inc
int3
lea
in
xor
int3
sub
adc
and
call
dec
ret
pop
jle
dec
roll
leave
mov
movsl
mov
pop
or
cmc
push
cmp
pushf
dec
lret
lock
sub
pop
cmp
rolb
cmp
mov
xchg
add
lods
cwtl
and
ret
loope
push
push
sub
add
mov
sbbb
mov
scas
mov
popa
outsl
mov
sub
xchg
sub
sub
lea
lahf
add
push
mov
insb
test
xchg
mov
xor
insl
scas
mov
push
out
addl
pusha
inc
inc
pop
jae
and
cltd
popf
mov
jae
fnstsw
in
mov
sub
dec
addr16
mov
push
jmp
cmp
inc
loop
andb
push
mov
cmp
dec
test
popa
lret
int3
nop
icebp
jb
jmp
adc
cltd
xlat
cld
cmpsb
pusha
enter
xchg
scas
pop
sbb
push
pop
lock
sahf
dec
es
jns
negb
xchg
negl
cmp
movsl
popa
movsl
movsl
fiaddl
and
push
dec
insl
in
in
add
mov
arpl
push
jns
mov
cmp
pusha
js
rol
adc
test
jbe
popa
outsb
jmp
into
sub
sahf
int3
leave
pop
mov
cmpsb
neg
pop
mov
sub
ret
xchg
cld
inc
xlat
or
out
add
outsl
leave
push
insb
mov
add
cltd
lcall
mov
clc
mov
jecxz
cmp
ret
adc
jecxz
sub
mov
cs
arpl
inc
sbb
cmp
mov
enter
inc
sub
dec
iret
sbb
add
and
clc
jnp
test
fidivl
pop
dec
idivl
pop
sbb
xchg
jmp
mov
repz
sbb
lods
inc
jae
inc
pop
int
cmp
adc
dec
or
adc
push
mov
sbb
mov
jmp
mov
lahf
mov
shr
and
sbb
rcrb
cmovns
fs
cmp
jno
mov
and
sub
fldcw
dec
push
mov
sbb
push
aas
dec
std
push
pop
sbb
xor
push
iret
imul
adc
adc
sbb
mov
xor
dec
push
mov
cltd
fs
cwtl
bound
push
jecxz
push
sbb
les
adc
sbb
stc
or
push
les
sahf
insb
ja
xchg
mov
loopne
jmp
arpl
push
and
fildl
pop
push
pop
inc
xor
mov
jb
xchg
call
inc
rol
cmpsl
mov
add
pop
es
push
mulb
xor
negb
push
outsl
inc
push
push
push
cmp
xor
scas
sbb
ljmp
inc
pushf
mov
xor
fidivl
fsubr
cmp
mov
mov
xor
xchg
lock
in
data16
pop
jnp
int3
and
mov
mov
sbb
pusha
adc
xor
fmuls
dec
imull
sbb
or
negl
push
adc
dec
ds
stos
xchg
jp
stos
xchg
push
dec
adc
cmp
jbe
jns
sar
cld
xor
and
std
insb
cmp
cltd
lods
xlat
jns
ret
arpl
add
call
loope
add
mov
xchg
lods
in
sbb
imul
cmpsb
cwtl
push
and
in
insb
ret
and
arpl
add
iret
addr16
movsb
out
inc
jecxz
addr16
xchg
pushf
imulb
fisttps
loope
mov
mov
test
and
jno
push
mov
sub
and
push
mov
aas
rcr
xchg
adc
xor
nop
lds
es
ret
lock
lods
cmpsb
xor
or
push
popf
push
mov
add
pop
and
xor
je
and
xor
mov
pop
insl
cwtl
sbb
ss
cmp
popf
mov
dec
mov
movsb
inc
and
mov
nop
ss
pop
jge
jl
icebp
cmp
xchg
jmp
pop
in
mov
sysret
pop
mov
mov
mov
jno
jp
add
add
int
mov
loopne
inc
int
mov
incb
mov
fidivl
adc
js
mov
sub
fdivl
ret
xchg
and
cld
sahf
jns
call
xor
pop
sbb
lea
lea
xchg
insl
rolb
cli
pop
in
adc
adc
mov
sahf
and
loope
out
cmp
stos
outsl
xor
pop
icebp
ret
xchg
jnp
in
mov
orl
cwtl
inc
into
call
pushf
inc
in
inc
pushf
push
daa
add
xor
clc
inc
push
cli
mov
cwtl
cmp
insb
into
pop
lcall
add
das
xchg
jnp
mov
test
sbb
inc
bnd
clc
repnz
sub
stc
shr
mov
lret
push
or
dec
jno
dec
es
mov
push
or
icebp
adc
rorb
das
mov
inc
data16
sbb
out
sbb
mov
dec
hlt
lods
outsl
adc
xor
popa
push
or
fisttpl
sub
jnp
int
jp
shl
lea
aas
add
push
mov
cld
divl
out
mov
sbb
scas
sub
int
lcall
xor
push
loop
jge
psraw
lahf
pop
es
cs
mov
xchg
pop
pop
sbb
ss
movsl
jns
xor
jmp
seto
dec
pushf
dec
push
loop
popf
icebp
push
daa
xchg
or
call
mov
pusha
add
sbb
xlat
bound
jbe
mov
sbb
clc
ret
flds
inc
cmpl
andl
mov
or
ret
lods
lock
je
xchg
cmp
xchg
jecxz
cltd
and
int3
sbb
int3
jo
xor
add
dec
inc
jnp
aaa
bound
inc
inc
jmp
aas
jne
pop
rclb
subl
cmp
jge
cwtl
jle
nopl
cmp
adc
add
fcomp
sbb
adc
gs
mov
aad
sti
popa
es
or
cmc
pop
xor
adc
jl
pop
ds
adc
daa
out
sbb
sub
inc
xor
outsb
hlt
sbb
jnp
sub
les
mov
rorb
stos
adc
cs
cmp
add
dec
out
mov
iret
in
pop
mov
add
repnz
fsubrl
repnz
in
sub
pop
fdivl
fwait
cmp
les
mov
sub
sub
pushf
insl
xchg
lcall
lock
in
jge
pop
xor
jmp
add
sub
in
iret
xor
movb
jno
mov
push
arpl
dec
jns
dec
pop
es
fidivrl
ds
jb
cmpsb
mull
sub
adc
pop
lds
pusha
push
mov
in
shr
push
mov
sti
sub
cli
iret
stc
in
mov
movsl
inc
sahf
mov
orb
test
fcmovne
insl
xor
js
cmp
pushf
inc
and
je
mul
repz
out
pop
fistps
adc
and
cmpsb
mov
lea
stos
loop
out
rcll
xor
and
and
adc
jecxz
sub
jno
test
arpl
js
leave
push
mov
pop
repnz
push
pop
and
xchg
in
int3
movsl
lahf
mov
inc
or
jp
cld
in
icebp
test
out
sbb
adc
dec
push
dec
sub
inc
test
mov
sub
jmp
xchg
js
cmpsb
sbb
mov
cli
scas
mov
push
test
movb
insl
push
hlt
push
mov
mov
out
icebp
sub
mov
sbb
adc
or
and
jle
push
hlt
xor
sbb
jp
cmp
xor
out
xor
inc
arpl
fwait
jmp
fs
loopne
lahf
fadds
xchg
leave
lret
test
iret
jmp
and
out
lods
xor
adc
cmpsl
sti
insb
into
dec
add
xchg
fistl
mov
jg
mov
add
pop
mov
aad
push
sbb
cmp
or
insl
int
push
push
or
inc
sbb
imul
stos
jns
mov
adcw
sub
rclb
add
sbb
jb
notb
dec
and
in
mov
jbe
cmp
sbb
lods
cld
insb
outsl
ljmp
rcrb
pop
mov
xorl
xchg
xchg
dec
sbb
outsb
fwait
test
cmpsl
mov
fidivrl
test
push
sbb
sbb
push
push
pop
cmpsb
imul
jmp
xor
fistpll
inc
or
mov
std
jne
mov
xchg
push
mov
jl
jmp
mov
and
dec
fimull
arpl
xchg
popa
xchg
mov
rol
mov
xchg
jecxz
jb
and
fs
and
in
pop
dec
loope
incl
clc
jp
testb
or
pop
decl
mov
dec
xchg
out
insl
clc
xor
insl
sbb
sub
jo
inc
lret
fildl
bound
xchg
sbb
outsb
jl
or
fdivrl
pop
mov
mov
stos
and
jno
std
in
sbb
mov
adc
loopne
mov
sbb
mov
loop
or
mov
sbb
in
or
loope
or
bound
in
dec
add
lea
pop
aaa
sub
mov
jbe
sbb
and
jno
adc
jno
es
aaa
sbb
mov
insb
scas
dec
setle
mov
cmc
jne
popl
minps
lcall
pop
add
mov
push
mov
xor
mov
mov
mov
outsl
mov
aas
enter
mov
jne
gs
leave
les
sub
popa
pushl
push
scas
sarl
frstor
in
sub
ret
jnp
cltd
outsl
scas
movsb
js
jle,pt
leave
data16
and
cmc
add
pop
mov
hlt
jns
mov
loop
int3
fcoms
jmp
adc
cmp
test
aas
in
adc
sbb
xor
mov
cltd
cmp
sbb
pop
fs
and
sahf
add
imul
xor
xchg
mov
cmpsb
js
cmpsl
adc
fldcw
jecxz
xchg
out
sbb
mov
cs
xchg
inc
popf
shl
in
cmpsb
dec
adc
inc
mov
pop
jmp
add
fwait
mov
jp
push
cmp
adc
outsb
lock
mov
sub
cmpsb
hlt
stc
inc
push
or
cmp
xchg
jbe
dec
add
sub
pop
xlat
decb
xlat
lds
inc
mov
mov
lahf
dec
xor
adc
adc
inc
sahf
push
pushf
adcb
and
loopne
sbb
outsl
bound
mov
add
mov
imul
pop
mov
in
mov
xor
and
mov
jne
aas
psadbw
fistl
cmp
cmpsl
aaa
add
inc
add
or
cmpsl
leave
inc
out
or
shrl
lahf
loop
ret
lcall
mov
movsl
lahf
jo
pushf
push
int3
outsl
pop
sar
push
dec
mov
mov
and
cmc
test
repnz
fisttpll
mov
push
push
xor
popa
mov
adc
out
push
subb
ja
popf
or
mov
js
clc
outsb
xchg
sarl
aam
je
jl
sbb
add
mov
sub
lea
xchg
repz
push
sub
test
ror
outsl
movsb
sub
test
sarl
icebp
push
enter
testb
jo
add
push
mov
xchg
mov
cmpsb
mov
lea
pop
inc
dec
pop
adc
pop
jns
cmpsl
xor
xchg
sbb
mov
mov
mov
mov
xor
mov
xchg
dec
add
cmp
pushf
ret
mov
cs
inc
add
pop
mov
mov
inc
mov
pop
xchg
std
in
push
push
data16
jp
cld
cld
int
outsb
lahf
sbbb
sbb
or
adc
stos
jle
pop
push
rcl
scas
test
out
push
cld
inc
jmp
sbb
mov
and
rclb
and
loope
into
jl
inc
push
inc
mov
jno
jecxz
cmc
pop
ss
xor
aas
inc
mov
jo
or
sarb
mov
push
lods
ds
leave
into
adc
sub
pop
les
ds
mov
push
inc
cltd
and
shrl
pusha
sub
sbb
cmpsl
xchg
sbb
aam
jl
xor
xor
lock
add
in
mov
loopne
cmp
aas
xor
xor
dec
cli
popf
mov
notl
add
sbb
bound
xor
std
jle
pop
fsubp
imul
fdivl
sbb
jne
add
aad
repz
call
mov
xchg
imul
cmpsl
dec
adc
int
jge
fadd
imul
cld
pop
rorl
xchg
cmp
fmul
gs
pop
out
jmp
adc
pop
pop
pop
repz
inc
scas
push
push
iret
mov
and
adc
mov
add
mov
and
fadd
je
lds
push
dec
mov
loope
scas
push
push
or
mov
jmp
jae
jns
arpl
cmpsb
mov
and
test
xchg
mov
lahf
mov
mov
roll
jl
xor
mov
dec
lods
iret
mov
insb
pop
nop
or
mov
cli
scas
into
inc
dec
xorl
xor
aas
aas
mov
les
sbb
dec
cld
inc
std
fidivs
out
jp
inc
push
lcall
mov
aad
pop
xor
pusha
sbb
lock
sbb
out
add
arpl
pop
inc
adc
add
mov
popl
mul
iret
or
cmp
sub
mov
cmp
mov
jmp
scas
xchg
dec
jl
cmc
pop
rcrb
cltd
xchg
js
bound
in
dec
js
bound
fdivr
sub
cmp
cli
add
out
inc
loopne
mov
in
pop
mov
add
in
cmp
cld
dec
pushf
stos
jne
insl
insl
mov
nop
push
add
xchg
sarl
sub
and
or
enter
js
rclb
xor
movsb
insb
in
jp
sbb
dec
hlt
in
jns
mov
mov
pop
sub
xchg
in
fyl2x
les
push
sar
sbb
add
cltd
mov
push
adc
push
pop
cmp
cmp
push
ds
cltd
pushf
js
dec
jl
repz
out
repnz
push
inc
xchg
insb
dec
movsl
cmp
insl
in
sbb
jno
mov
aas
cmc
sarb
sbb
add
mov
xor
stos
fmuls
xor
dec
daa
push
in
ror
jl
add
stos
aas
push
lods
xchg
in
outsb
test
pop
loop
dec
pop
lds
mov
push
xchg
mov
pop
and
push
pop
jmp
bound
add
xchg
push
adc
bnd
mov
int3
fildll
or
mov
xchg
iret
sub
rolb
js
adc
jmp
jecxz
jl
xchg
pop
out
das
bound
stos
jb
xchg
xchg
jns
sub
jecxz
lock
popa
jns
std
out
add
int
scas
sahf
pop
jge
sti
mov
add
sub
les
ss
in
int
adc
jp
imul
push
mov
xor
rcll
hlt
je,pn
mov
push
shlb
inc
cmp
sbb
decb
or
out
lret
gs
xchg
inc
or
xchg
in
mov
dec
shrl
movsb
mov
adc
lret
pop
imul
xor
add
call
clc
movsl
imul
shl
aaa
adc
sub
jae
out
or
mov
repnz
int3
mov
jmp
inc
aaa
iret
lahf
imul
test
xor
repnz
rcr
sar
imul
sub
dec
fistpll
enter
dec
mov
and
cmp
sbb
in
stos
xchg
into
loopne
add
jns
sub
lahf
cmp
aas
cmp
stc
jb
mov
filds
xorb
call
jbe
adc
test
push
lds
mov
hlt
sbb
int
mov
sub
test
stc
pop
push
mov
out
rcrl
fistpll
jb
pop
jae
insl
xchg
xor
adc
xchg
sub
adc
mov
xlat
xor
lock
and
bound
and
jno
mov
push
testb
fisttps
mov
sub
icebp
and
adc
xor
mov
jnp
dec
jecxz
pop
pop
dec
mov
xchg
xchg
outsb
lods
jns
stos
cmpsb
pop
mov
daa
into
jge
sbb
std
fcmovnu
rolb
outsl
adc
mov
int
jmp
sub
enter
xor
stos
aad
xlat
inc
test
mov
leave
dec
and
sbb
repnz
or
push
push
addr16
sbb
pop
into
xor
fmulp
popl
xchg
scas
scas
ja
insl
and
ret
std
cli
or
or
pushf
lods
cld
mov
pop
xor
pop
loopne
outsb
add
mov
pop
bound
mov
push
mov
push
jmp
dec
inc
scas
jnp
push
out
and
jb
mov
in
sbb
lret
cwtl
mov
imul
inc
cli
xor
sbb
push
or
and
mov
push
dec
xor
xchg
inc
cmp
jbe
xor
add
inc
fidivrl
daa
dec
mov
cmp
ss
inc
js
jge
or
jns
jne
iret
jbe
gs
popa
lahf
fwait
jns
xor
lret
fwait
daa
psrld
push
jecxz
mov
negb
mov
push
pop
into
ja
adc
lods
push
xlat
punpckhwd
in
fmull
es
xchg
das
in
and
gs
ja
pop
jp
bound
push
pop
ret
push
adc
clc
into
pop
sahf
or
cmp
push
cli
aas
jnp
cwtl
and
out
inc
cwtl
popf
movsl
or
aaa
xor
fisubl
pop
test
pop
xchg
in
inc
gs
push
xchg
loopne
icebp
pushf
inc
pop
in
mov
add
mov
mov
scas
movsl
loope
dec
push
stos
adc
sub
add
push
test
arpl
std
imul
cmp
sbbb
mov
aad
jecxz
push
int3
insl
jle
jnp
das
jp
mov
mov
add
pop
mov
jp,pn
mov
es
mov
pop
scas
jno
das
notb
sbb
dec
xor
call
xor
adc
cltd
subb
mov
shrb
push
movsb
lds
xchg
mov
dec
dec
jb
loop
inc
lods
popf
jo
clc
gs
jae
xor
sub
aad
shrl
lods
dec
ja
jp
sub
and
dec
in
imul
adc
xchg
stc
fs
or
push
adc
cmp
jae
xor
xor
cld
repnz
arpl
pop
dec
inc
inc
rol
mov
fisubrs
rolb
fildll
dec
in
out
inc
out
lea
pusha
xadd
pop
xchg
stos
xchg
out
scas
ret
push
mov
jp
fcompl
hlt
imul
xorl
aad
sbb
or
push
adc
pop
add
push
dec
pop
jae
push
jge
in
mov
int3
push
iret
xchg
cmp
xor
out
xchg
inc
test
xorl
cltd
xlat
push
xchg
xchg
repz
and
push
add
cmpsl
inc
das
dec
outsl
cltd
dec
mov
mov
sbb
je
dec
andl
mov
push
movsl
jle
fsubrs
mov
adc
xchg
les
add
dec
repnz
insl
pop
xor
sbb
dec
enter
data16
test
pop
ja
cmp
adc
dec
and
ja
test
scas
ljmp
xor
push
mov
lret
jb
pop
nop
cmpsb
mov
jb
scas
shl
push
add
pop
dec
and
idivb
mov
dec
cs
cwtl
scas
jnp
mov
clc
push
xor
pop
fidivl
rol
mov
sub
dec
mov
xor
fs
add
popf
pop
mov
shr
dec
cmpb
fmull
adc
push
mov
xchg
cmpb
inc
sub
stos
cmpsl
or
xor
cmp
cmp
inc
movsl
xchg
stc
cmp
jno
addl
data16
or
and
in
xlat
rorb
test
daa
cmp
mov
rcll
aaa
fldl
leave
fidivl
cmc
stos
scas
dec
fiadds
fdivr
es
nop
mov
rcrl
cmc
jno
sahf
lcall
pop
ret
jmp
rol
xor
in
adc
test
sub
push
adc
adc
std
in
push
ds
aaa
or
loope
rcll
pop
test
cmp
out
addr16
hlt
test
mov
dec
nop
je
lds
cmp
sbb
daa
mov
ret
mov
ret
les
dec
pop
dec
leave
jae
leave
shll
cmp
sbb
xor
pop
xchg
and
jg
jg
pop
daa
mov
add
pop
inc
jnp
leave
ror
push
add
mov
adc
outsl
mov
inc
pop
stos
mov
in
inc
test
lret
shll
and
jns
repz
xchg
mov
and
subb
insb
adc
sub
jne
jo
sbb
add
push
or
jmp
popf
pop
subl
js
lret
insl
and
enter
aas
cmp
pop
lahf
es
and
jo
incb
lods
in
cmc
sub
dec
xor
push
xor
inc
ljmp
and
rep
into
test
xor
stos
mov
mov
cli
dec
call
dec
add
pop
dec
pop
cmp
xchg
out
lret
cmc
mov
jnp
sbb
dec
fwait
sarl
jg
sti
jl
jp
xor
jnp
jg
jp
sub
lahf
xor
enter
jle
rcll
jle
mov
adc
inc
push
mov
jle
lock
popf
std
push
insl
cmp
mov
and
fsubrl
enter
push
pop
movsl
stos
lea
pop
repz
mov
jb
xchg
pop
push
ss
inc
fbstp
stc
mov
adc
out
push
push
loope
jae
fisubs
popf
popa
mov
push
not
in
jg
mov
jns
xchg
out
loop
ja
icebp
jae
inc
sti
sti
mov
aad
negl
test
cmpsl
pop
mov
sub
test
inc
mov
mov
xor
mov
xchg
sbb
repnz
dec
xchg
xlat
mov
popa
xchg
mov
popa
xor
stc
sub
dec
arpl
les
mov
shrl
push
popf
ljmp
adc
cmp
jnp
sbb
repz
in
movsl
gs
jp
pop
sbb
into
sub
and
or
sti
jmp
mov
pop
xchg
mov
loopne
inc
cmpsb
adcl
xor
test
daa
jmp
xor
test
mov
mov
adc
xlat
add
xchg
push
mov
sbb
fidivs
add
adc
ljmp
and
push
push
xchg
lcall
andl
jns
mov
mov
and
orl
dec
sub
push
out
shl
pusha
and
into
jmp
lods
push
or
adc
popa
js
test
call
mov
out
mov
scas
leave
dec
into
xchg
int3
adc
push
mov
cmp
xor
mov
std
push
insb
popf
pop
fnsave
movb
lods
lods
sbb
nop
pop
adc
outsl
push
les
adc
mov
mov
dec
mov
pop
and
rol
jno
xor
mov
lods
movsl
arpl
adc
mov
ds
dec
std
cmp
test
cli
iret
sub
sub
in
xor
add
ja
pop
and
in
sub
mov
cmpsb
andl
mov
add
mov
and
lods
push
iret
pushf
cli
inc
fcompl
jne
stos
dec
iret
enter
xlat
sbbb
xchg
icebp
mov
push
ret
xlat
sbb
jbe
shrl
jae
push
sbb
shr
int3
mov
rolb
inc
out
or
loop
push
sub
inc
or
lods
sub
in
jge
cmp
negb
repnz
xor
clc
push
cltd
scas
ret
dec
std
das
loopne
fnsave
pop
sti
lea
loopne
roll
out
sbb
imul
adc
movsb
repnz
mov
cmp
xor
mov
dec
lock
sbb
sbb
jge
loopne
cmp
into
lret
dec
push
scas
sbb
jbe
mov
xchg
das
and
int3
popf
jne
sub
insl
in
lods
std
mov
xorl
test
lods
into
icebp
and
cmp
popf
loop
jns
cli
inc
xor
inc
sti
faddp
and
mov
cwtl
roll
lods
pop
xor
aad
outsb
push
and
ss
inc
sbb
push
pushf
aas
es
rcl
das
cltd
lods
inc
dec
push
push
pop
pop
popf
and
pop
mov
sub
cmpsb
jge
leave
loopne
cmpsb
out
idivl
xor
shlb
jae
rorb
dec
lods
sub
ficoml
aas
addb
sbb
sbb
sbb
mov
add
jp
daa
or
aaa
js,pt
mov
or
or
scas
push
lret
and
inc
jno
lea
add
xchg
jbe
scas
pop
mov
sub
push
mov
loopne
add
inc
adc
or
push
cmp
and
not
rorl
std
mov
movsb
adc
pminub
sub
rcll
fidivrs
and
out
pusha
push
lock
xchg
add
fcompl
push
call
test
lds
jnp
gs
inc
pop
pop
push
cld
inc
data16
loopne
fsts
data16
ds
add
fnsave
shr
imul
popa
push
push
int
jl
outsb
add
mov
push
pushf
add
imul
lock
pop
mov
scas
pop
sbb
gs
loop
push
cld
adc
xchg
rolb
imul
mov
push
in
fisubs
pop
cltd
xor
and
xchg
xchg
nop
adc
mov
aaa
test
adcb
push
xor
pushf
sbb
sub
shll
mov
or
add
ja
mov
popf
xor
and
xor
cs
int
sub
push
cmpb
push
dec
pop
aam
cmpxchg
outsw
jns
push
and
mov
test
mov
fwait
cmpsl
jnp
movsb
out
ret
insl
out
mulb
push
fcmove
jno
push
aad
sub
imul
push
rclb
jp
xor
jne
push
jnp
lods
add
xchg
xchg
mov
int3
sub
cmp
mov
icebp
cmp
cmp
daa
mov
sub
push
mov
mov
sub
movsb
xchg
stc
repnz
mov
mov
sbb
ds
fdivs
and
sub
mov
adc
fcomps
sub
push
out
inc
inc
jl
sub
and
nop
jno
mov
and
idiv
xlat
mov
decl
xor
adc
leave
xchg
insb
push
xorb
sbbb
or
movsb
inc
xchg
push
mov
out
dec
inc
data16
push
shrl
xchg
pop
xor
push
sarl
fbld
pop
mov
mov
jg
pop
aam
test
out
mov
fnstsw
lea
xchg
and
imul
das
jecxz
nop
sub
arpl
jmp
int
pop
roll
pop
movsb
fwait
push
stos
mov
jmp
sbb
push
fstpt
jle
negb
and
dec
mov
xchg
cmp
mov
xchg
pop
scas
repnz
cmp
iret
sub
out
stos
dec
cli
jnp
push
jle
sbb
rcrb
pusha
push
cmp
mov
pop
out
push
add
out
dec
outsl
das
fadds
mov
fstps
mov
pop
add
addb
adc
dec
adc
repnz
push
or
fs
pop
sbb
repz
jle
test
sub
sub
or
add
in
mov
mov
lcall
pop
decb
repz
xor
out
mov
mov
pop
mov
gs
rorb
gs
push
mov
mov
xorl
dec
jle
pop
xor
and
cmp
jno
xchg
fnstsw
lret
jne
mov
stos
call
pushf
cli
sub
push
fistpl
adcb
aaa
pusha
push
adc
rcrb
js
daa
add
xchg
stc
dec
jge
mov
sahf
dec
lcall
push
or
xchg
stc
xchg
pusha
decl
incb
shr
and
push
dec
mov
mov
jbe
loop
ret
jg
js
xchg
adc
sub
pop
andl
les
add
cmova
fwait
mov
mov
inc
cld
movsb
dec
mov
and
mov
inc
clc
pop
scas
andl
loop
mov
adc
mov
repz
jl
sub
cmpb
shll
fs
repnz
mov
pop
add
ret
cmc
negl
add
das
shrl
or
jbe
mov
adc
jbe
cmp
xchg
adc
xlat
inc
mov
add
pop
aaa
push
cwtl
sub
pop
or
out
outsb
cs
cmp
adc
iret
mov
lret
ljmp
sub
insb
fisubs
repz
js
inc
fiadds
or
pop
daa
jnp
xchg
pop
in
rcrl
cs
inc
loop
push
inc
cmp
stos
es
neg
sbb
mov
xchg
mov
addr16
mov
jp
mov
push
xchg
mov
mov
out
cmpsl
or
call
jp
repz
or
ret
pop
test
cltd
pop
add
pop
lcall
insb
dec
lea
adc
pop
lock
mov
sahf
mov
mov
pop
repnz
loope
lock
push
dec
mov
cmp
mov
xchg
adcb
push
ret
outsl
dec
pop
aas
sub
mov
mov
fsubs
daa
sti
int3
pushw
mov
mov
jmp
mov
mov
mov
into
and
sbb
jg
jns
sti
sti
pop
jb
pop
sbb
fnsave
orb
xchg
std
rcrb
mov
daa
mov
rcrl
mov
and
push
xchg
popf
mov
sub
daa
push
xchg
jo
push
lret
aam
mov
das
pop
fisubrs
and
pop
scas
xchg
mov
pop
mov
clc
scas
movsl
jle
cwtl
dec
inc
dec
rcr
inc
xor
lret
dec
push
jne
mov
aad
fsubrs
fidivrs
cmp
js
lock
insl
les
cmp
call
xchg
or
stc
jno
adc
mov
imul
xor
loop
dec
pop
dec
jmp
adc
fbld
jns
in
loope
push
xchg
adc
jecxz
cs
lret
jns
lods
pop
xor
insl
ret
call
lret
cs
ret
insl
jmp
mov
jnp
xor
jno
or
mov
jl
inc
test
ja
lods
mov
arpl
xchg
push
push
outsb
push
in
loope
lret
loopne
cmp
js
adc
aaa
imul
sti
pusha
call
add
sti
sbb
push
loope
cltd
or
imul
loop
rcr
pushf
test
inc
int3
inc
mov
repnz
imul
in
inc
push
cmp
xchg
mov
cwtl
xchg
rorb
sbb
daa
xor
xchg
sbb
rorb
notl
jge
dec
arpl
out
leave
or
mov
enter
jo
xchg
ret
xchg
pop
cs
clc
jecxz
cmp
inc
sahf
jl
xchg
jmp
loope
outsb
push
jecxz
xlat
stos
outsb
into
nop
rcr
loop
xchg
ss
movsl
in
out
jecxz
sarl
adc
cmp
jns
outsb
or
iret
sbb
push
and
outsb
test
in
out
pop
incb
jo
mov
cmpl
or
std
imull
adc
mov
fsubs
fistl
nop
data16
outsl
adc
popf
xlat
add
sub
pop
stos
lahf
xchg
ja,pn
cmp
rcrl
fldcw
sahf
jno
mov
loopne,pn
andl
cmpb
gs
int3
sahf
jne
je,pn
rorb
mov
sbb
and
imul
test
fmuls
sbb
sub
lea
xchg
add
cs
insb
loopne
out
stos
dec
es
outsb
cmpsb
lcall
mov
iret
lret
mov
fbld
sub
push
mov
dec
cld
insb
inc
mov
mov
in
sbb
test
les
xor
and
ret
xor
add
mov
add
jl
sbb
push
jmp
xchg
std
add
add
movb
cmpsl
daa
cmpsb
mov
mov
fsub
adc
arpl
lret
mov
xchg
mov
out
test
out
pop
ret
pusha
cmp
outsb
push
iret
das
pop
loope
roll
fnstenv
mov
divl
in
cli
divb
insl
fdivp
sti
xchg
jne
push
in
sub
popf
jnp
mov
jns
and
dec
ds
and
stos
push
pop
sbb
cmp
shll
cmp
shl
adc
pop
pop
les
test
jne
mov
fisubrl
jno
sub
cmpsl
lret
and
sub
js
outsb
stos
mov
jecxz
repnz
maskmovq
jmp
dec
addb
es
lret
loopne
xchg
outsb
xchg
sub
adc
mov
xchg
outsl
dec
pop
aad
mov
into
into
aaa
mov
cmp
add
popa
out
or
push
pushf
jns
jmp
imul
movsl
mov
test
in
mov
lea
fisubrl
cmp
mov
fstl
jge
andb
and
ret
shll
and
mov
lret
mov
icebp
sahf
gs
or
es
movsl
fsubrl
int
mov
ds
gs
data16
adc
out
dec
jmp
inc
imul
ja
jne
cmc
data16
push
imul
int
sub
xor
lock
adc
mov
inc
dec
les
movsb
popa
scas
cmp
push
pop
orb
lcall
jge
aaa
jbe,pt
cmp
mov
dec
inc
sahf
test
dec
shlb
js
ficoml
pop
inc
mov
into
movsl
lahf
mov
and
jp
mov
dec
push
inc
push
cmpsl
ficoml
setne
jae
add
dec
mov
mov
js
shrb
mov
xchg
jns
mov
jecxz
in
mov
fs
pop
xchg
and
icebp
outsl
rep
out
push
inc
add
sbb
std
inc
sarb
nop
icebp
loop
sarl
int
lea
and
outsb
scas
js
dec
stos
loope
mov
xchg
mov
mov
xor
xchg
movsb
es
out
out
es
clc
idiv
jo
mov
push
vmovaps
in
or
dec
add
shll
lods
insb
cmp
sbb
push
sbb
mov
cmp
andb
push
jge
aas
add
add
hlt
and
xor
dec
lea
mov
mov
bound
hlt
sub
and
mov
mov
pusha
jbe
leave
popf
jns
movsl
shlb
sbb
pop
push
adc
fsubrl
adc
movsl
outsl
xchg
dec
fnstcw
cs
xchg
adc
push
inc
js
xchg
or
pop
jo
adc
pop
push
or
sbb
lret
cmp
iret
out
sbb
out
jp
pop
lcall
stos
movsb
inc
daa
sbb
pop
lods
or
aam
mov
push
and
add
ss
jle
insb
jmp
loopne
mov
test
stc
xor
sbb
or
je
add
mov
pop
icebp
lock
mov
rcll
jle
mov
cmpsl
stc
je
bound
insb
and
loope
inc
push
sbb
in
and
sub
test
clc
xchg
mov
push
xchg
jb
inc
repnz
daa
imul
dec
mov
add
bound
fwait
xchg
mov
fadds
scas
nop
jg
nop
dec
sbb
mov
stos
xchg
lods
adc
xchg
enter
xchg
xchg
fincstp
cmp
pop
adc
pushf
xchg
or
call
add
inc
rolb
jg
lret
out
dec
in
cltd
push
sahf
stos
push
test
aas
sarb
dec
push
push
xchg
mov
stos
cwtl
push
sbb
adc
adc
and
sub
pop
out
ds
insb
dec
mov
add
mov
stc
sub
cmp
xor
cmpsb
shl
aad
jp
repnz
fdivl
pop
mov
sbb
ljmp
cmp
pop
jne
clc
sahf
fdivrl
test
cld
ss
pop
mov
int
mov
jne
mov
add
and
dec
xor
pop
mov
ret
lret
test
out
mov
push
mov
andb
pushf
xor
pop
mov
lahf
xchg
in
push
sub
jo
jmp
stc
inc
xchg
aas
push
js
sti
lret
inc
dec
outsb
loopne
dec
cmc
inc
icebp
sbb
out
loope
lahf
lods
shlb
push
dec
inc
mov
add
in
ja
test
ds
lods
jge
lds
dec
mov
imul
xor
sahf
mov
jb
cwtl
or
inc
dec
push
dec
mov
mov
cmc
mov
sbb
inc
xor
inc
jbe
sub
fucomip
dec
xor
mov
adc
lods
xchg
adc
out
mov
cltd
jne
add
ret
out
std
outsb
jg
shlb
xchg
cmp
shrb
and
leave
jge
sub
jns
mov
or
xor
adc
sub
inc
out
push
jecxz
cmp
cmp
sahf
jg
aas
stos
dec
inc
mov
and
xlat
out
incl
mov
jne
repz
cmpsl
addr16
pop
xchg
test
cli
fcoms
bound
mov
loop
jb
xor
dec
mov
je
fldz
cmp
std
insb
pop
pushf
pop
mov
fidivrs
push
out
cmp
lcall
call
jae
out
lea
inc
cmp
mov
cmp
dec
out
sbb
test
cmp
jle
adc
inc
mov
or
push
fbld
mov
sti
cmp
cld
stc
jl
sub
dec
popf
das
shrl
adc
mov
or
sub
shll
stos
imul
shrb
mov
sahf
xchg
sub
inc
pop
or
dec
pop
outsl
fwait
lcall
pop
aaa
xchg
int3
scas
sub
mov
aam
xchg
repz
shlb
sbb
lea
in
fdivl
lods
xchg
pop
or
incl
cli
insl
xchg
or
xor
outsl
mov
xor
push
push
xchg
test
mov
loope
lcall
push
sbb
inc
fcom
add
dec
mov
xchg
cld
add
cmp
loope
shlb
pop
sbb
dec
xlat
add
sbb
fsubrl
adc
ret
mov
js,pt
addl
push
sbb
inc
adc
sub
cwtl
jae
lret
lcall
pop
pop
adc
into
push
mov
adc
testb
inc
and
cmp
mov
sbb
popa
lods
add
adc
xchg
jg
out
jle
or
and
jg
xor
ljmp
lea
scas
in
jge
mov
xchg
jnp
or
shrl
out
jne
mov
pop
and
mov
jno
jo
sub
mov
sub
lret
stos
dec
jnp
mov
dec
or
adc
imul
inc
add
repnz
repz
mov
scas
pop
sub
mov
mov
add
mov
push
add
lods
faddl
pop
push
leave
cwtl
inc
mov
fadds
mov
hlt
cmp
mov
insl
xchg
incl
dec
cwtl
and
mov
rcll
inc
ja
mov
dec
mov
and
jle
jbe
fnsave
pop
daa
bswap
and
cmp
sarl
adc
das
mov
and
cwtl
mov
add
ss
call
out
xchg
sahf
xor
test
mov
mov
ret
push
leave
std
stos
push
mov
ljmp
in
and
pop
xlat
imul
in
jbe
cmp
adc
rolb
sahf
xchg
add
xor
jb
stos
mov
adc
inc
inc
add
ret
push
or
jb
rcrl
jg
jns
fisubrl
repnz
xchg
mov
and
cmpsb
xchg
pop
out
add
cwtl
add
and
stos
or
jmp
adc
fidivs
ffree
xor
jp
nop
ss
mov
xlat
cmp
and
xor
je
inc
push
xor
enter
xor
dec
pop
pop
test
cmc
dec
push
sbbb
in
bound
jmp
fwait
jg
cmpsb
jmp
les
stos
push
je
mov
dec
lds
push
mov
jp
lods
xchg
pop
and
jno
pop
add
inc
sahf
adc
push
stos
cmc
mov
or
or
stos
sbb
adcb
dec
int
xchg
jecxz
fs
int
sub
pusha
fcmovu
stc
jne
addr16
daa
adc
lea
sahf
pop
loope
movsl
or
adc
mov
lods
outsb
xchg
inc
data16
push
jne
add
sarb
sahf
adc
repnz
xchg
or
jmp
mov
sub
inc
in
sbb
jge
loope
repnz
popa
insl
stos
daa
adc
bound
test
inc
and
jne
rorl
sub
push
repnz
xchg
push
push
cld
adc
sbb
into
xchg
mov
inc
andl
movsb
in
clc
pop
sbb
ret
pop
aas
xor
and
push
cltd
xchg
xor
mov
in
sbb
jns
xor
rcrl
js
loopne
xchg
cmp
adc
push
xor
test
xor
sbb
add
clc
jb
sarb
mov
mov
aad
out
mov
imul
lahf
adc
mov
pushf
cs
cmp
addb
scas
movb
xor
aad
jmp
inc
xorb
pop
scas
insb
aas
jb
push
xchg
or
jne
daa
cmc
sub
sub
adc
lods
dec
leave
cmpsl
sub
xor
or
pop
movsb
mov
test
push
adc
ss
mov
lea
cld
pop
test
loope,pn
push
mov
jns
jno
push
pop
pop
pop
cwtl
mov
sahf
dec
iret
jb
cmp
push
pop
aas
inc
in
adc
cli
mov
stos
lcall
push
sahf
in
fiaddl
repz
pop
cmp
xor
pop
popf
cmp
out
rcl
fxch
cmpsb
mov
mov
cltd
inc
dec
pusha
daa
fistpl
or
mov
outsb
insl
mov
in
mov
dec
out
jns
pop
jmp
xchg
and
insb
adc
push
pop
jae
and
cmp
ret
mov
and
cmp
push
lea
cmpsb
ds
mov
cmp
ja
stc
add
mov
imul
gs
sub
enter
mov
sbb
mov
pop
adc
lahf
rolb
push
pop
jb
mov
jbe
ds
mov
xchg
pushf
imul
xchg
push
inc
imul
mov
ret
imul
mov
out
mov
stos
mov
mov
xchg
mov
inc
out
jmp
and
lds
mov
push
add
and
test
hlt
in
cltd
inc
mov
and
adc
sarl
xchg
adc
shr
sbb
push
les
arpl
pop
and
push
dec
push
hlt
and
leave
fdivrl
cmpsb
add
cli
mov
dec
push
sub
loopne,pn
pop
dec
add
mov
sub
push
aaa
push
daa
fwait
xor
sahf
xchg
cmc
push
xchg
test
mov
fdivl
pop
xchg
scas
shrl
arpl
sbb
cmpsl
sbb
ret
popa
lcall
or
cmp
sub
xor
outsl
lods
test
inc
loop
mov
sbb
test
push
jno
retw
mov
lret
loop
sti
jmp
mov
mov
jl
dec
stc
into
rorl
loop
push
dec
in
rcrb
cmp
enter
or
inc
mov
sub
loope
adc
jno
das
outsl
inc
loopne
xlat
and
xor
mov
sub
mov
rol
or
cmp
adc
mov
int
xor
mov
jle
aam
bound
pop
repnz
pop
bound
xchg
sbb
jmp
and
xchg
sti
sbb
rol
xor
ja
push
lods
sub
test
xchg
sti
mov
cmp
adc
jmp
cmpsb
jo
fsub
pusha
lret
sub
sub
add
out
pop
fwait
sarl
cld
mul
pop
loope
or
orb
ljmp
sbb
scas
enter
loope
sub
lahf
imul
fimuls
xor
int3
mov
test
lods
add
pusha
outsb
push
adc
jbe
mov
sub
push
fstpt
movsl
aad
ret
adc
enter
xor
int
mov
outsl
movsb
dec
aas
sbb
dec
cli
dec
inc
orb
adc
ljmp
and
lahf
xchg
cwtl
mov
adc
pop
mov
add
subb
push
mov
insb
fmull
mov
add
enter
test
mov
cmp
sbb
and
cmpsl
xchg
push
arpl
pop
jge
cmc
xchg
mov
ss
pop
mov
push
fs
enter
inc
notl
cmp
out
insb
sarb
pop
mov
push
frstor
mov
out
mov
jb
push
mov
mov
mov
clc
xor
or
je
test
aad
push
sti
fstpt
push
push
and
mov
ja
imul
add
sub
push
or
pop
stos
fs
out
sub
adc
jecxz
mov
and
and
mov
push
sti
sbb
out
mov
sub
lds
std
ret
and
movsb
xchg
les
aad
icebp
in
pop
test
mov
mov
jne
dec
mov
imul
shrl
movsb
in
sahf
adc
ljmp
dec
xlat
add
ret
jo
scas
cmp
dec
cmovns
sub
ljmp
insb
push
jnp
sbb
and
mov
aas
cmp
mov
loope
inc
cmp
and
das
lods
sbb
add
int
in
adc
cmc
or
mov
mov
xchg
cmp
jge
lcall
mov
inc
jmp
sahf
mov
or
pop
sbb
test
pushf
cli
sub
or
inc
call
daa
mov
cwtl
push
adc
or
xchg
cmp
arpl
test
dec
fyl2xp1
popf
jl
mov
int3
pop
das
inc
jg
scas
jb
cmp
loope
mov
cmp
aas
dec
jbe
movb
sahf
jmp
sub
pop
mov
mov
add
push
stc
movsl
xchg
lea
shlb
stos
movsb
sub
jnp
inc
in
pusha
cli
dec
cmpsl
mov
xrelease
mov
pop
add
jnp
imul
push
mov
outsl
or
imul
subl
add
in
repz
cmp
add
add
pop
push
inc
mov
aam
addr16
enter
arpl
dec
mov
movsl
cmp
cmp
rcrb
add
mov
jno
inc
dec
shrl
fisubl
jg
rcr
sub
and
dec
add
lret
lcall
add
xor
es
and
and
push
imul
add
lcall
jge
mov
push
out
mov
or
add
out
in
bound
lahf
and
and
idiv
inc
les
push
or
dec
pop
mov
sub
leave
out
jmp
dec
sub
rorb
scas
scas
pop
cmp
repz
jbe
fsubl
mov
cmp
sbb
in
cmpsl
push
sbb
push
jb
and
push
arpl
movsb
sbb
mov
sub
mov
dec
pusha
sbb
xchg
ja
loop
push
xchg
jbe
cmpsb
add
test
stos
ja
scas
movsb
xor
mov
sarl
es
int
mov
sub
sti
push
jp
push
sahf
xchg
xlat
sti
rcr
push
sbbl
jge
ret
dec
lret
ss
xchg
or
movsb
or
ljmp
push
ret
movl
popa
inc
pop
daa
movsb
pop
flds
jno
mov
and
out
inc
in
lea
mov
sub
inc
ror
jbe
push
imul
and
pop
xchg
movsb
dec
or
addb
sub
adc
cmp
popf
addr16
pop
ret
pop
cmp
pop
dec
cmp
mov
push
jo
ljmp
jmp
sahf
or
insl
or
xchg
stos
jmp
inc
cmp
sbb
pop
mov
jle
ljmp
sbb
and
jns
cmp
addl
mov
test
cmp
cmpsl
fcoms
xor
loop
fwait
scas
aam
in
xchg
xchg
std
fldln2
lret
mov
popa
clc
xchg
mov
cli
xor
cltd
addr16
je
jno
cmpsl
mov
sub
roll
push
fistpl
mov
ret
enter
or
jb
sub
mov
dec
stos
inc
push
jnp
mov
and
jg
inc
jbe
pop
inc
sti
mov
mov
clc
sub
insb
dec
out
dec
and
xchg
or
jae
repz
movsl
mov
outsl
je
mov
lret
fmull
enter
push
loop
mov
xchg
addr16
pusha
leave
mov
cld
xchg
lret
mov
fnstsw
rcrb
hlt
jne
jno
cmpsb
push
and
lods
adc
adcl
add
mov
std
outsb
ds
in
mov
cmpsb
inc
inc
std
mov
xor
cmp
fldcw
add
iret
xor
repz
xchg
or
sub
ret
mov
push
jae
sbb
xchg
imul
cmpsb
fisubl
sbb
ja
or
inc
int3
xrstor
mov
jl
push
adc
mov
sbb
and
imul
and
sbb
xchg
mov
flds
or
fs
adc
leave
sub
add
xchg
repz
aas
sahf
nop
test
sbb
push
in
js
loopne
inc
js
or
or
cmp
jl
lds
lock
daa
adc
pop
adc
aad
test
arpl
adc
push
cmpsl
fidivs
xchg
imul
mov
xchg
mov
out
imul
mov
xchg
mov
scas
dec
mov
sub
movsb
arpl
imul
sbb
stc
lcall
push
push
xor
or
ljmp
or
and
or
popw
mov
mov
aas
xchg
push
scas
filds
cli
mov
ds
int3
sub
jp
rcll
pop
pop
fwait
repz
into
aad
imul
pop
pop
mov
ret
sbb
dec
push
hlt
cmc
popf
cmc
out
int
or
cld
and
js
sbb
je
aam
jp
push
push
int3
mov
pusha
dec
xchg
and
cmp
jno
jp
pop
xor
add
pushf
jae
mov
int
cmp
jmp
in
mov
mov
pop
sahf
shll
xchg
jnp
cmp
movsl
cmpsl
sub
pushf
jb
pop
pop
push
ficomps
popf
das
mov
in
dec
pop
mov
mov
xor
dec
sbb
in
mov
push
addr16
dec
inc
cld
sbb
sub
jnp
in
fwait
int
mov
sub
into
in
inc
out
mov
dec
ror
outsl
fcmove
test
insl
loope
and
xor
fistpll
mov
push
rcrb
push
inc
push
mov
xchg
cli
cmpsb
add
jle
aam
movsl
loope
jp
inc
inc
xchg
movsl
das
push
sub
mov
rol
pop
ss
sub
pop
lret
inc
sub
rcrb
adc
lret
dec
pop
pop
xchg
mov
fisubs
pop
in
sbb
adc
push
in
pop
movb
icebp
or
xchg
pop
pop
adc
adc
mov
push
jne
js
or
cli
leave
dec
das
clc
movsb
and
mov
lcall
test
adc
inc
loopne
pop
stc
fisubs
mov
and
inc
sti
aas
cmp
sbb
inc
mov
pop
push
sub
inc
data16
pop
inc
pusha
sbb
cld
scas
data16
imul
dec
inc
and
xchg
je
or
pushf
jb
loope
pop
data16
stos
cmpl
cmp
jecxz
cmpsl
xchg
push
test
or
scas
subl
das
scas
push
sbb
scas
inc
dec
aaa
pop
push
xchg
jecxz
or
cwtl
in
cmp
xor
lods
sbb
daa
sub
inc
cmpsl
xor
cmp
inc
in
fs
mov
lds
inc
mov
jp
push
mov
mov
nop
movsb
jle
ds
inc
mov
testb
arpl
xchg
mov
sbb
mov
rcl
inc
dec
fbstp
inc
arpl
cwtl
js
xchg
repnz
sar
mov
pop
dec
fsubr
dec
call
out
mov
inc
cmp
mov
in
or
fdiv
out
jge
mov
test
cmc
inc
in
dec
dec
xor
clc
test
cmp
mov
icebp
scas
scas
jns
repz
mov
lcall
testl
popf
cmp
and
scas
jp,pt
jb
iret
and
pop
push
outsb
xchg
xchg
stc
iret
ficomps
popf
cmp
in
jmp
in
dec
and
xor
xchg
cld
wbinvd
xchg
sub
sbb
fildll
scas
xchg
sbb
sbb
lcall
lfs
dec
addr16
imull
fidivs
aaa
dec
adc
mov
xor
inc
mov
cs
sub
ja
test
jle
cmp
mov
sub
or
push
or
sub
das
or
xchg
loopne
rcll
sub
fisttpl
icebp
jb
xor
data16
repnz
push
sbb
sub
mov
lea
and
call
dec
push
out
mov
xchg
inc
mov
sbb
pop
inc
outsl
aaa
mov
mov
mov
adc
dec
insb
neg
mov
inc
popa
pop
repnz
popf
xchg
fstps
mov
shlb
aam
dec
idivl
test
dec
mov
jno
popa
mov
fildl
add
sbb
xor
jbe
inc
out
js
jne
adc
dec
and
ret
xor
pusha
pop
mov
cmp
jmp
adc
cmp
ret
movsl
jno
jne
test
rorl
adc
dec
fadds
fcmovb
rcrl
inc
fidivs
insl
jmp
into
scas
lods
daa
fsubrs
outsl
arpl
pop
sbb
mov
xchg
ja
fisttpl
jne
aaa
sub
cmp
pop
adc
lret
cltd
cmp
scas
insl
push
movsl
stos
xchg
stc
movb
mov
sub
dec
scas
mov
out
out
or
loopne
mov
mov
sbb
loope
pop
pop
test
in
and
fsubrs
xor
add
cmc
into
arpl
mov
outsl
cli
lods
movsb
xchg
mov
xor
jbe
push
jmp
push
mov
jle
push
and
xor
sbb
cmp
shll
sahf
mov
inc
jmp
cmc
mov
jge
and
and
sarl
ss
rcl
xchg
mov
lock
dec
cli
stos
or
mov
inc
movsb
in
pop
xchg
dec
testb
jge
pop
cmp
mov
push
dec
mov
add
xchg
into
push
std
in
sbb
iret
add
icebp
fs
add
mov
mov
push
adc
movsb
push
nop
es
sbb
mov
das
jbe
mov
pop
inc
addr16
dec
push
push
test
fbstp
lods
xchg
jb
inc
cld
nop
cmc
adcb
call
xchg
mov
int3
jg
test
mov
mov
and
fildl
and
jg
jmp
sbb
into
mov
jb
adc
xor
mov
hlt
lahf
jo
out
cmpsl
mov
push
cmpl
inc
push
or
lret
mov
aad
sub
inc
push
add
sbb
add
sbb
dec
or
into
jmp
movsl
lcall
mov
aam
dec
aas
jp
xlat
repz
or
cwtl
aas
test
ds
das
xlat
push
cmc
mov
sbb
sub
shll
cmpsb
xchg
pop
stos
fwait
into
pop
test
popa
cmp
add
push
and
je
cmc
pop
out
dec
js
sbb
cs
mov
clts
adc
sub
fsubs
test
jo
jae
inc
repnz
loope
mov
imul
push
or
ds
lds
mov
shll
je
xchg
dec
or
add
out
jecxz
jo
or
xor
cmc
and
scas
cmp
xchg
fnstcw
fs
adc
shl
or
and
rorl
lds
scas
mov
pop
inc
aam
sub
fists
mov
cmp
jle
imul
mov
mov
data16
jmp
add
cli
cmp
aad
and
inc
pop
mov
fidivrs
in
scas
jle
test
fucomp
or
add
cmp
pop
pop
dec
jmp
xchg
xchg
push
cmp
cltd
pop
icebp
test
sub
and
xchg
xor
jle
mov
rep
roll
or
sub
shr
adc
pop
push
cmp
jb
out
and
add
add
ss
mov
dec
mov
cli
leave
push
xchg
inc
xchg
mov
and
cmp
mov
cld
fsubs
test
jl
or
cwtl
mov
loop
or
jp
sti
aad
je
sub
std
cmp
out
int3
into
dec
jno
add
cltd
imul
insl
js
add
jmp
push
dec
cmpsb
xor
xor
orl
mov
scas
cmp
shl
cmp
pop
fdivl
xor
out
cmp
movsb
out
jae
lock
gs
mov
or
cmp
jecxz
ret
and
jecxz
jb
cltd
add
ja
daa
iret
into
add
iret
lcall
jg
fs
sbb
and
and
fldenv
into
mov
imul
mov
seta
mov
dec
cltd
lds
in
xchg
jae
leave
cli
jp
pop
adcl
loopne
outsl
jbe
stc
subl
hlt
arpl
inc
rclb
dec
sbb
inc
stos
sar
pop
xchg
mov
rcrl
out
cmpsl
push
sbb
push
sti
cld
jae,pn
cmpb
sarb
test
mov
adc
jle
jne
adc
mov
popf
sub
sti
int3
xchg
pop
jecxz
aad
dec
sbb
push
sar
fxch
popf
mov
fistpll
movsl
pusha
adc
xor
jge
shrb
inc
cmc
scas
or
insl
shr
mov
mov
inc
fwait
pop
mov
pusha
jg
fxch
xlat
cmp
push
xchg
scas
idiv
mov
int3
in
pop
dec
test
push
xchg
push
out
notb
sub
push
dec
fldcw
fiaddl
stos
inc
or
mull
in
dec
sbb
xchg
or
ret
push
in
push
movsl
insl
mov
adc
push
dec
shll
mov
fcmovnbe
push
imul
jge
pop
arpl
shl
in
xlat
cmp
inc
pop
xchg
out
cmpsb
lcall
in
jmp
jmp
test
repnz
jg
out
sbb
stc
xchg
add
push
mov
movsb
inc
loope
cs
into
lret
data16
dec
mov
dec
mov
or
pop
icebp
sbb
fstl
pop
pop
push
test
js
lea
jecxz
mov
stc
icebp
mov
daa
inc
lods
sti
push
cmp
sbbb
ds
loope
insb
faddp
xchg
decl
hlt
sbbb
ror
repnz
or
lds
cwtl
testl
or
push
sbb
push
xor
pop
lock
ja,pt
shl
lock
xchg
jnp
cmpsb
inc
imul
test
dec
jno
jl
lods
dec
imul
sub
push
push
sbb
pop
ror
ds
xchg
jbe
add
mov
pushf
lods
les
shlb
inc
add
xor
sbb
div
clc
ret
and
icebp
add
xchg
inc
das
sahf
inc
lds
inc
push
fcmovu
out
dec
sub
movsb
ret
cmpsl
dec
fwait
cmp
and
shl
sti
adc
lods
sahf
fisttps
xchg
pop
add
loop
mov
adc
outsl
mov
pop
mov
cltd
adc
inc
fs
movsb
inc
addr16
pop
lahf
out
ficomps
xchg
loopne
scas
movsl
push
sbb
lods
mov
es
stos
arpl
mov
call
cmp
loopne
sub
xor
scas
mov
mov
xchg
adc
jle
mov
insl
mov
dec
or
jb
int3
xor
jge
xchg
mov
enter
arpl
sbb
inc
orl
jp
inc
push
pusha
push
cmp
pop
loope
dec
mov
sbb
push
mov
ret
sbb
movsl
ret
mov
fndisi(8087
ret
frstor
jae
notl
mov
push
movsb
bound
inc
sbb
pop
fxch
mov
ret
sbb
call
mov
icebp
mov
gs
in
in
adcb
mov
push
daa
aam
xchg
adc
sbb
sahf
jns
push
faddl
fimuls
xor
ljmp
inc
adc
test
sbbl
cli
mov
lock
cmpb
scas
or
iret
or
lock
sub
add
iret
sub
sbb
mov
sbb
mov
xchg
cld
jle
daa
lret
cmp
sub
das
xor
sti
in
xor
js
mov
imul
add
int
aad
hlt
adc
js
mov
sub
shrl
sbb
sarb
std
push
cmp
insb
or
mov
mov
jne
ds
push
das
jl
loopne
or
sbb
dec
repnz
mov
adc
mov
icebp
and
faddl
and
pushf
aad
push
addr16
jns
mov
nop
je
sub
mov
dec
sbb
imul
cmp
fmul
jmp
shll
fwait
jmp
push
call
push
fidivs
pop
fstps
loope
popa
push
out
pop
cmp
andl
and
in
popa
lock
cmp
adc
pushf
mov
dec
pop
jne
aas
pop
pop
and
lods
add
mov
inc
push
mov
sub
push
sbb
in
xor
mov
add
pop
cmp
xchg
leave
dec
scas
and
dec
mov
cmp
or
lea
cmp
fisttpl
fistl
repz
popf
outsl
popa
icebp
sub
rcrl
jno
shrl
mov
outsl
sbb
mov
xlat
fdivrs
loop
lods
and
mov
arpl
xlat
lock
jno
lock
push
mov
fucomp
sbb
jecxz
add
xchg
fisubs
ja
into
xchg
cld
icebp
dec
cmp
sub
inc
mov
fdivr
aaa
sbb
jo
dec
mov
pop
pop
rclb
xchg
pop
and
jns
jnp
bound
push
xor
mov
xor
loopne
xor
ss
jae
xchg
and
sub
pop
jo
mov
jg
pop
bound
fs
xchg
pushf
mov
dec
xor
ljmp
in
fdivl
cmp
cmp
mov
jmp
sbb
cli
popa
adcb
mov
inc
aaa
rcl
xchg
pop
mov
cmp
add
cmpb
fimuls
add
stos
and
movsb
test
pop
xor
and
sub
jg
in
sti
ret
repz
movsb
call
or
inc
inc
cmp
icebp
dec
cli
cs
xchg
in
popf
push
cmc
rolb
sbb
mov
shlb
adc
pop
in
push
ret
mov
ja
jle
popa
xor
ds
mov
fs
sub
lahf
into
sahf
add
adc
dec
jo
shlb
in
and
imull
inc
out
xchg
jg
add
js
js
fidivl
sub
fstps
inc
xor
nop
jns
in
lea
inc
aam
mov
inc
popf
pop
inc
lods
jb
pop
ss
push
neg
pop
xor
fsubr
and
scas
lea
inc
cltd
int3
xchg
cmp
rcrl
xor
xchg
xchg
jmp
pop
sub
mov
cmp
fmuls
and
sbb
jl
push
mov
push
test
add
push
loopne
pop
popa
je
mov
fldl
shll
mov
jg
xchg
cmpb
dec
outsl
fcompl
xor
adc
ret
ds
out
xor
push
dec
mov
in
mov
aas
data16
push
fsubrl
movsb
mov
pop
mov
mov
dec
sbb
push
push
fldenv
add
mov
iret
xchg
jle
mov
cmp
lods
fidivs
or
sub
xor
aaa
xchg
in
inc
addr16
or
fwait
test
and
inc
push
xor
popa
loopne
je
sbb
ljmp
and
xchg
out
inc
jecxz
jbe
push
dec
pop
mov
add
arpl
pop
les
adc
push
mov
push
adc
jg
jg
jmp
ret
mov
push
mov
sub
mov
sahf
test
pop
sub
cmp
gs
and
rolb
adc
xor
pop
sbb
fninit
lret
shr
ja
jmp
aad
pop
bound
push
popa
mov
cmc
cmpsl
into
dec
scas
and
adc
inc
add
push
or
inc
je
sbb
out
dec
xlat
pop
xorb
push
sbb
fsubl
adc
insb
xor
jle
dec
cli
in
sub
mov
and
dec
fsubs
inc
jno
pusha
loope
nop
shl
scas
cmpsb
les
mov
mov
int3
cmp
pop
out
jb
inc
mov
jnp
int3
push
repnz
adc
mov
jmp
pushf
xchg
mov
jl
repnz
mov
test
sub
mov
or
push
in
adc
in
stc
add
shll
push
pop
push
ss
lcall
cld
mov
pop
mov
or
fidivrs
lods
xchg
jmp
sbb
gs
mov
cmp
cmpsl
and
pusha
sbb
or
cltd
ret
mov
mov
repnz
pop
aam
dec
ja
cmp
mov
pusha
xchg
cmp
scas
aam
stos
push
stos
or
lahf
or
ljmp
cmpsl
ffreep
ret
add
pop
hlt
fildl
mov
pop
xor
sbb
xor
lret
sbb
pop
mov
mov
xor
ret
lock
ret
add
cmp
xchg
rcrl
int
aad
test
and
out
sarb
ret
sbb
loop
add
lods
cs
xchg
test
lea
into
arpl
add
js
out
sbb
cs
adc
ds
dec
out
enter
data16
xor
sub
mov
nop
inc
rorl
inc
call
repnz
mov
loope
lar
mov
push
test
add
pop
int3
orl
aad
in
dec
jnp
pop
mov
jno
subb
in
rcrl
mov
cmp
jne
lret
inc
and
mov
mov
lods
in
imulb
jns
jns
mov
jmp
rcrb
jmp
cld
lods
sub
mov
sub
mov
or
out
enter
pusha
mov
dec
pop
fs
push
mov
mov
int3
pop
enter
and
jp
cltd
ret
jmp
daa
and
dec
cmc
dec
jno
pushf
iret
cmp
inc
pushf
cmp
cmpsl
add
push
aam
sahf
int
push
xchg
lods
sub
outsb
pop
pop
in
les
push
dec
arpl
add
adc
add
lods
jle
mov
jmp
test
test
dec
scas
add
xchg
xchg
lock
or
dec
call
loope
mov
enter
aas
sub
dec
aad
dec
push
pop
mov
fs
xorb
ja
sbb
add
stc
or
cld
mov
pop
push
sbb
test
fs
test
jg
xlat
xchg
push
dec
cld
jnp
adc
push
mov
fdivs
jp
clc
in
pusha
sub
gs
mov
sbb
out
fsubl
xor
mov
cmp
xchg
mov
imul
mov
dec
jae
loope
mov
test
xor
jmp
pop
in
sub
cmc
xchg
mov
cld
rcrl
test
and
fs
adc
shrb
lds
mov
ret
and
sub
lods
sbb
sbb
pop
repz
mov
mov
outsl
push
cmp
mov
jp
jnp
pop
sub
test
lahf
loopne
sub
dec
xchg
jo
idivb
hlt
mov
rcrl
inc
repnz
push
jp
push
out
mov
stos
mov
movsl
lds
loope
loope
mov
ret
cmpsl
push
fiaddl
iret
xchg
dec
enter
sbb
mov
mov
dec
jmp
ss
arpl
daa
ds
movsl
and
xor
xorl
pop
add
imul
sbb
aas
int
hlt
mov
push
jle
cmp
cltd
cli
add
les
in
inc
enter
mov
ds
pushf
lret
leave
xchg
cmp
push
dec
stc
imulb
mov
dec
insl
or
mov
icebp
mov
dec
aas
jbe
add
stos
push
or
ja
loope
pop
mov
xchg
dec
push
cld
out
mov
jb
les
clc
sbb
insb
rorb
xchg
fwait
pushf
ss
xchg
xchg
mull
jmp
es
or
pusha
ss
mov
pop
rolb
arpl
mov
les
and
jb
in
jns
sub
cmp
cmpsl
aam
push
addr16
jmp
lods
cmp
mov
lods
mov
push
mov
push
loop
addb
scas
stos
lock
ja
cmp
sub
cmpsl
mov
add
out
js
xchg
dec
ss
loope
add
stos
lret
sub
shrb
push
sub
mov
push
popa
das
jge
pop
sub
adc
shrl
push
nop
mov
sbb
inc
popa
mov
ret
mov
leave
mov
xor
cmp
aaa
fisubrl
mov
cmp
inc
call
js
push
pop
mov
push
mov
in
call
push
or
rcl
lock
sub
test
jl
test
xlat
pop
dec
arpl
in
dec
mov
inc
push
das
into
dec
mov
ficoms
mov
lcall
into
stc
lcall
stos
cmp
stos
daa
sbb
or
sub
dec
call
imul
sub
add
imul
loopne
xchg
sahf
repnz
ror
add
cmpsb
into
add
xlat
cmp
xchg
xor
dec
pop
mov
add
lea
mov
sahf
cmp
push
xchg
fcoms
xor
mov
in
in
push
fstl
and
cwtl
popa
aad
in
arpl
ljmp
sub
paddd
mov
scas
inc
push
arpl
test
inc
mov
jae
jns
add
leave
pusha
push
stc
popl
bound
pop
ljmp
movsl
shl
repz
xchg
jns
jge
mov
ss
mov
int3
scas
lods
mov
shlb
mov
adc
in
dec
leave
cmp
xor
sub
add
mov
dec
stos
pop
add
es
leave
jnp
fwait
sahf
pushl
push
sbbl
mov
dec
and
pop
or
jge
lahf
xchg
or
mov
push
push
sub
or
inc
les
and
rcll
sbb
cmpsl
pop
adc
and
sub
aad
sahf
cs
imul
aam
leave
mov
leave
dec
repz
in
dec
rorl
imul
add
sbb
and
in
xchg
rol
std
sub
sbb
lret
into
jl
sub
adc
add
mov
mov
dec
shlb
mov
inc
shrb
xchg
inc
push
fs
rol
nop
lods
jns
call
dec
movsl
pop
idivl
sahf
cld
cld
mov
insl
dec
outsb
dec
mov
mov
mov
mov
cmp
push
sbb
int
jb
inc
negl
lods
jo
inc
and
mov
inc
in
inc
jecxz
lcall
add
dec
repz
decb
jge
ret
xchg
dec
loope
int3
jge
or
cltd
lock
or
or
insl
iret
add
jg
pop
xlat
add
push
adc
ljmp
pushf
add
aam
popf
loope
mov
mov
insl
cmp
out
xchg
stc
xor
inc
enter
sub
lret
dec
gs
imul
stc
jb
xchg
popf
hlt
cmpsl
push
rorb
mov
lahf
mov
mov
rorb
out
repz
lret
in
jno
sbb
fistps
test
imul
cmp
pop
cmp
dec
jmp
adc
dec
nop
inc
xchg
and
lret
loope
ljmp
or
out
cli
movsl
xchg
mov
xchg
fsubrs
inc
mov
mov
ljmp
out
mov
add
insl
inc
lret
cwtl
or
mov
mov
and
jl
loope
lret
stos
rcrb
and
ja
bound
xor
sbb
loope
cs
push
mov
filds
add
push
insl
mov
repnz
inc
imul
setnp
mov
dec
data16
rorl
aad
movsb
call
add
fwait
lods
inc
jns
in
ret
sub
sbb
xorl
cmc
jle
movsb
sarb
push
jno
add
dec
lret
out
icebp
in
popf
and
mov
fmull
das
je
pop
xor
mov
inc
ljmp
sbb
add
cmpsb
dec
push
and
in
in
jg
push
jg
xchg
shr
scas
in
nop
nopl
pop
movsl
or
mov
push
mov
mov
push
hlt
dec
mov
bound
sub
push
xorl
jns
inc
jle
sub
cmp
cli
push
push
lea
sub
nop
in
rclb
mov
cmp
add
sub
mov
sub
xchg
out
push
sahf
repz
inc
mov
dec
dec
ja
or
push
mov
jns
test
adc
pop
movsl
popf
xchg
popf
dec
cmp
mov
dec
loopne
jge
in
loopne
repz
and
je
inc
mov
test
enter
jp
int
xor
push
outsb
in
xchg
jne
ja
dec
push
xor
push
xor
push
iret
cmpb
jns
mov
lret
add
loopne
clc
jno
jbe
mov
ljmp
in
cmpsl
int
popf
inc
ljmp
in
repz
dec
and
fisubrl
fsubrl
in
jnp
das
enter
ret
push
jbe
sub
or
dec
les
and
adc
fisubs
dec
repnz
fisubl
jge
xchg
sbb
repnz
iret
mov
js
jecxz
add
ret
xchg
addr16
jl
dec
rolb
push
rcrb
imul
mov
popa
and
arpl
test
add
lods
lods
xchg
loopne
xor
mov
ror
cmp
cmpsl
shrl
dec
or
lret
out
test
jg
out
test
cmpsb
xchg
nop
jbe
lock
fidivs
lea
movsb
lds
mov
lds
arpl
leave
daa
insl
popa
movsb
xor
shl
cmp
andb
icebp
jg
es
stos
mov
or
fstp
jp
xchg
in
dec
shrb
js
daa
mov
test
jo
icebp
cmp
out
repz
shlb
popa
mov
push
mov
pop
mov
hlt
sbb
pop
pop
movsb
push
jo
mov
mov
pop
cli
arpl
int
ljmp
push
push
jge
xchg
movsl
push
fwait
cmp
mov
inc
push
mov
and
rorl
mov
jp
roll
mov
xor
stos
push
nop
cmp
mov
or
or
pop
popf
loop
bound
adc
imul
setp
add
stos
fdivs
lcall
lods
and
enter
call
fcompp
lods
and
lock
fcoml
out
adc
cmp
das
jg
ret
jns
adc
ja
lods
nop
cmp
and
bnd
js
in
and
add
punpckhbw
data16
aam
mov
iret
and
jo
push
insb
scas
add
xor
stos
dec
adc
mov
fimull
leave
ret
test
out
xlat
test
jl
pop
out
popf
pop
pop
test
inc
lock
and
mov
pop
data16
icebp
xchg
imul
clc
mov
in
xor
shlb
mov
xchg
sbb
push
ret
cmp
in
dec
xchg
int
adc
and
and
rcrl
sbb
mov
jo
cmp
sub
mov
ret
pop
or
sub
jmp
repz
pop
lds
pop
daa
imul
cmp
cmpsb
pop
cmp
inc
cmpb
lock
jo
daa
lds
int
mov
fcomps
sbb
sbb
mov
stos
ljmp
cs
mov
pop
adc
dec
arpl
pop
std
ja
imul
or
mov
jle
jns
lret
outsb
and
and
cmp
femms
fidivrs
cmp
sub
cmp
sub
push
cld
lds
pusha
fisttpl
jne
mov
jmp
jl
pop
sbbb
push
leave
mov
gs
out
mov
ss
inc
and
repnz
enter
fsubrl
dec
sahf
inc
popa
mov
jb
dec
negb
add
inc
je
fstpl
jge
nop
mov
add
mov
mov
dec
scas
call
movb
xchg
scas
cld
mov
loop
inc
push
mov
aad
jecxz
pop
loope
popf
ret
jle
add
mov
dec
pop
adc
ja
lea
xor
arpl
xor
out
sbb
add
lds
pop
push
insl
jle,pt
push
sub
test
adc
jns
xor
lcall
sbb
push
mov
aad
mov
lods
add
into
mov
lret
sub
stos
sub
dec
faddp
add
dec
xchg
clc
adc
sbb
xchg
push
cmp
push
mov
arpl
jo
sbbb
div
stc
scas
jp
aas
adc
xorps
xor
imul
inc
and
call
inc
and
jae
movsb
aaa
mov
add
mov
push
iret
mov
popa
push
xchg
enter
fcomps
push
dec
iret
adc
xor
mov
icebp
jne
stc
shll
cwtl
push
dec
fdivr
mov
xchg
pushf
insb
loopne
push
sub
sbb
imul
jno
fmull
cli
inc
les
pushf
movsb
inc
mov
cmp
clc
jg
add
or
push
sbb
loopne
test
xor
mov
inc
adc
je
mov
pushf
lods
pushf
and
test
push
lret
enter
jge
add
fidivrl
fwait
arpl
ja
into
test
push
add
jmp
push
shlb
andb
push
sbb
mov
pop
sbb
dec
pop
or
and
ret
mov
ficompl
cmc
ja
out
ljmp
xchg
mov
xchg
xor
imul
out
jmp
movsl
clc
ljmp
push
popf
push
out
incl
movsb
push
pop
sub
mov
push
xchg
add
and
ds
shrl
loop
bound
sbb
pop
fdivr
es
stos
pop
jecxz
orb
nop
mov
loopne
fwait
or
sbb
dec
jmp
sub
and
fisubl
xor
add
adc
in
js
sub
lea
inc
jbe
jl
xchg
and
pop
out
imul
pop
aad
lret
shrl
cmp
pop
xor
inc
add
iret
mov
loopne
in
inc
cmpsl
testl
dec
setnp
or
popa
jnp
divl
cli
sahf
movsb
sbb
insb
outsl
cmp
movsb
scas
lods
icebp
push
xor
sub
sbb
sahf
repnz
filds
mov
cmp
arpl
cs
push
inc
pop
fisubrs
roll
les
mov
jg
push
loop
mov
xchg
cmp
data16
push
clc
xchg
ficompl
loope
push
jp
xchg
lret
xchg
lahf
mov
mov
lods
out
inc
clc
push
aaa
movsb
inc
jecxz
cmp
es
shrb
xrelease
call
imul
push
lcall
outsb
mulb
mov
lret
mov
stc
out
ss
je
jo
and
aaa
adcl
cltd
cmpsb
xor
cmp
pop
push
mov
pop
mov
into
mov
mov
and
mov
rcrb
cs
cli
dec
arpl
push
dec
in
jecxz
add
scas
jbe
pop
and
frstor
or
cltd
addl
cli
pushf
cmp
jmp
popf
sub
inc
add
add
lahf
cld
sub
test
and
out
jns
push
dec
push
sbb
movsl
or
mov
or
iret
push
or
scas
out
adc
adc
mov
cmp
inc
xchg
add
jb
add
pusha
mov
call
cs
dec
xor
xchg
xor
aaa
mov
andl
adc
dec
sbb
pop
xor
xor
mov
in
mov
jecxz
inc
adc
popa
sub
hlt
cs
fmul
rcl
xor
sti
mov
push
ja
xchg
pop
dec
mov
adc
pop
imul
sbb
dec
addr16
mov
inc
hlt
mov
xchg
unpckhps
xchg
loope
aad
fisubl
mov
fists
push
pop
push
mov
push
test
shll
fcomps
push
cld
sbb
dec
enter
popa
imul
mov
out
mov
ret
aam
subb
faddl
jle
lcall
dec
mov
jno
jge
mov
jle
test
dec
loopne
adc
and
lret
js
jne
xor
jl
fs
fadd
imul
pushf
data16
dec
stos
sbb
mov
divb
orb
rol
adc
push
cmp
jle
dec
repnz
dec
or
pop
es
push
insl
xor
repz
sub
iret
fdivs
out
adc
outsl
and
dec
jecxz
int
jno
ja
cltd
shl
fsubl
lods
adc
and
sar
lods
shll
adc
and
addr16
bound
adc
sub
mov
js
gs
rorl
fsin
fsub
or
mov
dec
pop
adcb
mov
fiadds
fsts
adc
ljmp
jg
xor
into
mov
push
xchg
lods
xorb
push
dec
pop
inc
mov
add
add
mov
pop
stos
mov
insl
xor
xchg
push
adc
call
mov
cmpsb
loope
loop
scas
inc
lock
dec
test
dec
mov
test
pop
int3
arpl
cmp
pop
out
enter
sub
mull
push
push
and
push
loopne
or
ljmp
das
cmp
lret
or
jnp
popa
jecxz
fldt
call
mov
xchg
pop
cmp
fisttps
jge
adc
cmp
sub
mov
aad
or
bound
ljmp
cmp
add
mov
lods
scas
test
add
and
jae
mov
mov
xor
lret
adc
cmpsl
sbbl
addb
xor
je
mov
aad
mov
nop
sbb
and
call
mov
rcrb
mov
icebp
jb
sub
lret
dec
xchg
adc
and
add
mov
in
xlat
jb
lds
rol
and
xlat
addr16
mov
pop
rorl
scas
xorb
rorb
int
mov
fcomip
lea
or
push
clc
ds
loope
or
xor
sti
pusha
lock
mov
mov
mov
add
arpl
inc
lret
cmpsl
and
mov
rorl
xor
aas
xchg
test
test
sarb
pop
test
push
jae
cmpsl
inc
shlb
cmpsb
mov
pop
inc
enter
and
aad
fwait
add
cs
ret
sbb
adc
test
mov
mov
or
loop
inc
inc
fmull
jl
adc
xor
pop
cmp
xor
movsl
jne
mov
pop
sub
mov
add
lods
popa
push
xor
insl
outsb
outsb
insb
lahf
loope
xchg
addr16
mov
clc
aad
ljmp
jo
sahf
and
or
dec
sbb
shll
fisubs
xor
or
jb
adc
inc
dec
sub
sarl
mov
inc
dec
xorb
pop
add
imulb
fisubs
out
add
sti
dec
cltd
ror
neg
outsb
sub
inc
mov
out
push
lret
and
fbld
or
sub
lret
lods
bound
xor
lahf
push
fsts
jl
dec
sub
out
sbb
xor
jbe
fdivs
ss
jbe
dec
movsb
shll
mov
xor
ficoms
sbb
jle
lret
sub
inc
cwtl
popa
outsl
adc
and
pop
in
add
stc
ss
cwtl
in
jl
mov
push
cmp
mov
lock
sar
inc
jle
xchg
push
sbb
ror
test
xchg
in
push
pop
js
xchg
mov
dec
repz
push
ja
cs
outsb
cmp
sbb
and
or
add
cltd
subl
add
adc
int
push
xchg
repnz
pop
sub
mov
xchg
xor
add
jp
sbb
negb
imul
push
jnp
fwait
pcmpgtb
push
and
in
subb
xor
lahf
jle
mov
pop
ffreep
scas
xor
or
sub
sbb
test
mov
jae
xlat
or
pop
jb
push
sub
sbb
xor
fcomps
xchg
and
sbb
xor
sahf
gs
lret
mov
pop
imul
pop
dec
adc
mov
sub
iret
clc
inc
mov
clc
xchg
pop
movsb
jns
sbb
inc
ljmp
pusha
and
xchg
cltd
cmp
ret
jno
int3
pop
jmp
into
and
fiaddl
push
pop
js
jge
sbb
mov
push
fnstenv
in
push
and
mov
adc
sbb
pusha
adc
jg
ds
xchg
movsb
ds
in
pop
push
repnz
ret
sbb
sbb
jbe
outsb
repnz
mov
ss
int
insl
xchg
adc
mov
fs
mov
repz
pop
cld
bound
test
add
adc
dec
outsb
lret
jl
movsl
or
sti
mov
mov
loope
fisttpll
iret
sbb
ss
mov
cltd
push
jnp
shll
cmp
popl
leave
loop
mov
fidivs
dec
popf
mov
arpl
int
jmp
bound
push
std
and
mov
data16
in
loop
mov
adc
pop
sahf
cld
mull
adc
idiv
pop
push
int
int3
jb
loopne
cli
sbb
or
push
fwait
jb
xchg
sti
pop
adc
fwait
push
out
mov
push
xor
clc
xor
sbb
arpl
xchg
js
push
in
push
cmp
es
ja
mov
mov
cmp
jl
and
lcall
mov
xchg
adc
fidivs
lahf
fwait
mov
mov
lods
pusha
sti
xor
sub
pop
jno
in
xchg
mov
add
cmp
and
sbb
shl
lds
outsb
and
xchg
out
xchg
aam
sub
mov
mov
lods
adc
xchg
movsb
sar
jg
push
in
push
mov
mov
cwtl
mov
cli
mov
pop
pop
mov
sub
push
sbb
or
add
inc
idivb
and
add
pop
repnz
pusha
sbb
lret
cmp
xchg
stos
scas
aad
inc
andb
sub
sub
xchg
xchg
iret
cmp
xor
ret
add
mov
sbb
cltd
and
stos
pop
dec
mov
jecxz
out
out
imul
mov
adc
or
or
fsubrs
orb
test
insl
xchg
mov
jg
and
bound
adc
push
cmp
aas
adc
je
and
daa
mov
fwait
stos
std
loopne
jp
or
dec
lret
addr16
iret
icebp
push
ficoms
cmpsl
test
sub
das
jne
add
fmuls
xchg
adc
or
aas
aas
fsubrl
sbb
shll
sahf
inc
shrb
adc
mov
mov
inc
and
jmp
cmp
outsl
into
jo
pop
and
pop
outsl
add
mov
mov
push
loope
test
or
aas
repz
mov
roll
push
push
jp
xchg
repz
lea
movsb
cmpsb
pop
xor
js
xchg
test
addl
outsb
xchg
shlb
and
sub
pop
lock
cmp
mov
cltd
out
mov
stos
les
fmulp
sbb
adc
cmpsl
sbb
or
jns
dec
or
adc
push
xchg
push
push
or
popa
mov
adc
sub
into
rclb
std
shll
cmp
aas
push
aas
jp
add
jp
gs
leave
leave
mov
push
lods
jo
add
mov
insl
imul
stos
dec
push
test
inc
test
cwtl
or
add
clc
sub
push
inc
lcall
inc
add
mov
rcr
ret
fwait
dec
lods
in
mov
sbb
xchg
mov
dec
adc
jge
sbb
xchg
insb
xchg
imul
sub
pop
jbe
inc
rolb
and
shll
jl
out
xchg
dec
andb
shl
adc
jp
lock
mov
jmp
out
cmpsl
inc
and
test
into
mov
pop
dec
dec
push
test
mov
mov
mov
and
mov
scas
jno
xchg
shlb
cmp
and
call
sub
clc
in
es
cmp
stc
pop
sub
push
xchg
lds
pop
sbb
push
mov
mov
dec
test
mov
mov
mov
rolb
cmc
outsb
daa
std
fiaddl
push
sbbb
or
idiv
xlat
inc
cltd
mov
mov
pop
jecxz
in
or
adc
les
fnstenv
inc
mov
sub
lock
insl
cmpsb
pop
push
test
jmp
dec
in
orl
adc
jge
xchg
push
std
cwtl
aam
aam
mov
and
or
mov
jp
sub
xor
mov
add
mov
daa
jns
mov
in
rorb
cs
rclb
add
icebp
call
sub
call
out
xchg
adc
xchg
adc
fmuls
test
rep
divl
pusha
dec
repz
and
jne
dec
scas
mov
xchg
cmp
scas
in
mov
test
add
popf
add
xor
jno
or
and
xchg
cld
mov
std
popa
add
in
das
cmp
nop
pop
in
xchg
das
cltd
les
and
sub
rcrl
pop
stos
inc
test
je
andb
or
cmp
xor
pop
xor
lret
clc
sub
es
outsb
dec
ret
cmpsb
jg
pop
sahf
out
mov
jge
das
pop
mov
and
xchg
loope
mov
xor
mov
adc
jbe
mov
mov
mov
push
arpl
cwtl
ja
loope
xor
sub
ja
mov
push
jbe
loop
nop
std
xor
aaa
xchg
les
jle
dec
mov
mov
es
mov
les
adc
ret
jge
adc
inc
shl
xor
pop
add
outsl
inc
push
inc
cmp
xchg
inc
sahf
mov
adc
add
andb
pop
cmpsb
lea
adc
mov
xorb
pop
outsb
outsb
dec
in
adc
pusha
inc
mov
out
inc
push
xchg
add
addb
out
lods
xchg
int
jae
lret
sub
iret
dec
ljmp
jno
imul
hlt
int
and
cli
jae
pushf
stos
lret
fwait
inc
or
push
xchg
xor
outsb
mov
jg
xor
push
xchg
ror
popf
xchg
and
shrl
rep
pop
imul
push
pop
push
cli
imul
repz
xchg
add
sub
test
lods
mov
jnp
sbb
dec
addr16
clc
cli
aas
sbb
jae
push
xor
fstpl
jge
inc
xchg
dec
rcrl
in
adc
xchg
js
inc
adc
inc
mov
jbe
out
dec
incb
in
and
dec
jmp
and
ficoml
jmp
pop
jno
aaa
mov
ljmp
sub
jno,pt
mov
imul
adc
cld
mov
clc
test
mov
push
mov
in
mov
cmp
aad
jae
pop
adc
mov
mov
lock
test
addl
cmp
imulb
rcrw
aad
pop
cmp
cmpb
push
lods
or
xchg
dec
fsubs
or
lcall
cmp
xchg
jae
fs
popf
enter
mov
sbb
cmp
lret
add
popf
jno
xchg
or
inc
cld
out
rcll
xchg
and
sub
loop
mov
aam
push
lods
sbb
fnstcw
cltd
fisttps
pop
clc
loop
sub
cmp
sub
out
cmp
push
push
push
cmpl
mov
sbb
or
call
stc
jl
jno
mov
pop
rcll
sahf
push
cpuid
dec
jno
cmc
das
mov
loop
push
iret
int
cmpl
xor
fs
cmp
inc
fildll
hlt
inc
je
mov
or
cmpsb
shrl
into
mov
mov
out
pop
pop
je
mov
push
stc
adc
ja
scas
gs
sbb
lods
insb
and
clc
inc
inc
cli
sahf
xchg
cld
jb
nop
popa
out
pop
sub
lock
xor
mov
loop
hlt
xchg
fdivl
add
scas
inc
dec
insl
mov
ficoms
dec
mov
js
xor
cmp
add
dec
sub
sti
mov
adc
mov
data16
pop
mov
mov
into
mov
pop
scas
sbb
lret
and
shrb
loop
lock
dec
inc
lret
sub
pop
ja
adc
mov
sbb
jo
mov
cwtl
leave
inc
sbb
adc
adc
gs
and
jae
aam
mov
aas
adc
mov
mov
mov
mov
and
jp
mov
daa
lock
scas
add
xchg
mov
push
int
jmp
adc
and
mov
inc
push
jp
fcompl
mov
sbb
test
pushw
mov
lret
in
jl
outsl
mov
cmp
rclb
push
repnz
mov
int3
ljmp
lret
inc
sarl
push
cmp
mov
or
pop
pushf
xor
jne
pop
rolb
push
pop
pop
mov
mov
and
les
movsl
lret
fistpll
das
hlt
xchg
stos
sbb
pusha
xchg
in
in
jmp
fiaddl
cmpsb
shll
popf
inc
add
xchg
je
lret
pushf
jle
gs
cmp
sbb
clc
and
in
rorb
dec
test
cmp
rolb
and
cmp
dec
cmp
xor
or
ret
or
fadd
cmp
push
add
inc
arpl
lahf
push
stos
xor
cmp
stc
test
dec
push
mov
je
into
cltd
add
adc
and
loop
je
repz
fcmovb
repnz
pop
out
dec
mov
negb
daa
out
mov
pop
orl
fdivl
jbe
jbe
cmc
mov
mov
xor
mov
xlat
cld
cmp
xor
xorl
iret
rcll
dec
call
push
subl
push
mov
es
pop
jae
in
sbb
popf
pop
mov
and
shlb
ljmp
push
lods
inc
ficoml
add
inc
popf
and
sbb
mov
xlat
inc
pop
insb
mov
arpl
pushf
or
sub
dec
mov
in
out
lock
sarl
lock
aam
subl
rcl
clc
stc
iret
xor
lret
sbb
sbb
add
push
test
inc
inc
cwtl
jo
pushf
or
push
fucomip
aaa
mov
xlat
pop
aas
fldt
mov
adc
gs
negb
push
jmp
sti
add
mov
mov
push
xor
fyl2xp1
pop
enter
xor
xchg
in
out
cmpsl
enter
mov
scas
fisubrl
es
popf
fnstcw
aaa
iret
stos
sahf
fisubl
push
sbb
test
mov
jae
and
or
adcl
dec
push
lret
shr
cmpsb
rolb
sub
mov
inc
or
xor
es
dec
jnp
in
xchg
and
cmp
movsl
and
mov
xor
in
dec
insl
pusha
in
clc
mov
push
inc
enter
xor
mov
pushf
jae
scas
and
ret
xor
mov
push
fadds
xchg
sub
aas
inc
dec
push
sti
or
inc
imul
jg
xchg
scas
sub
and
popa
adcb
cmpsb
adc
ficoms
lahf
adc
push
dec
js
stos
jle
pop
pop
adc
sub
popl
cmp
negl
jl
notb
aas
out
frstor
xchg
addr16
test
in
test
icebp
mov
stos
test
dec
mov
cmp
mov
lret
in
imul
jo
push
hlt
xchg
mov
mov
aad
mov
xchg
insb
sub
cmp
mov
addr16
cmpsl
mov
ja
push
cmp
dec
std
insl
pusha
iret
fadds
icebp
lods
or
loop
cs
out
sbb
xchg
sub
add
out
or
mov
xchg
xor
inc
test
xor
test
xor
pop
add
inc
mov
shrl
scas
inc
test
test
bound
push
icebp
out
sbb
data16
jmp
mov
xor
dec
shlb
cmpsb
or
js
leave
jl
out
push
inc
insb
mov
enter
fstps
rclb
cmp
cld
inc
enter
ret
mov
xchg
lods
test
cmpsl
pop
repz
jae
mov
xchg
push
mov
xchg
je
test
inc
aam
les
sbb
cmpsl
test
push
fcoms
cmpsl
lret
inc
jae
mov
lret
adc
filds
pusha
dec
sub
pop
xor
mov
fwait
push
mov
sarl
push
repnz
jl
sahf
dec
mov
fs
loop
adcl
dec
in
loop
xlat
pop
popf
insl
sbb
fsubrp
repnz
jl
sahf
repz
test
jmp
cmp
notb
outsb
or
and
fprem
js
mov
xor
lret
inc
cmp
mov
lahf
stc
sbb
sub
xchg
cs
pushf
sub
gs
add
arpl
xchg
or
int3
sbb
arpl
push
stc
std
push
cmc
or
push
dec
cli
sbb
popa
add
pop
nop
cmp
adc
sti
mov
inc
add
xor
incb
cld
jg
aas
insb
fildl
add
sbb
xchg
imul
testl
loopne
fmull
loope
insl
popa
orb
popa
push
filds
jbe
lods
out
add
dec
pop
inc
jbe
mov
adc
inc
xor
scas
hlt
xor
in
bnd
enter
mov
cwtl
adc
in
adc
std
mov
sbb
xchg
fldcw
lret
in
out
sub
mov
sbb
add
lods
in
adc
addb
xchg
leave
cmc
repz
mov
or
and
sbb
add
das
push
or
mov
dec
lds
mov
push
pop
xor
imul
xchg
mov
sub
jmp
adc
add
cmp
dec
sub
or
rcr
shlb
pop
xchg
popf
push
sub
mov
in
jb
fsubrl
rcr
outsl
gs
sub
and
out
lods
add
jge
push
pop
push
insb
dec
imulb
mov
xchg
jno
jmp
sub
ret
xchg
shlb
dec
xchg
les
pusha
aad
lock
jno
rorl
or
iret
jp
jno
movsb
in
adc
repnz
leave
ljmp
xchg
arpl
out
shlb
cmpsb
pop
push
sbb
iret
movsl
mov
ret
sahf
fcmovnbe
cmpsl
jle
adc
mov
data16
aam
add
rolb
fimuls
jp
aad
add
dec
xchg
negl
xor
xor
notl
ds
out
movsl
xchg
aas
jbe
jb
push
cmp
mov
jg
inc
in
test
jo
jo
loop
imul
adc
push
inc
dec
insb
out
mov
pop
ljmp
adc
test
pop
fldl
imul
xor
push
xor
mov
adc
adc
in
in
fnstenv
adc
test
call
cmp
pop
leave
xchg
mov
pop
sub
movl
lcall
jo
inc
sbb
out
adc
add
push
hlt
inc
xchg
ljmp
fst
pushf
mov
dec
scas
mov
dec
add
dec
xchg
nop
lahf
decl
shl
out
stos
pushf
insb
shlb
movsl
mov
clc
aam
repz
fnsave
insl
jecxz
inc
imul
dec
inc
pop
add
sbb
xor
popa
ljmp
test
insl
pusha
out
or
xchg
add
sub
into
jecxz
ljmp
jge
jnp
sub
or
cwtl
or
xchg
pop
ja
mov
xchg
das
and
xchg
insl
adc
jmp
aas
jecxz
lods
pop
mov
ret
pop
dec
aas
leave
jo
pop
mov
inc
adc
sarl
xchg
out
jecxz
call
xchg
cs
pop
pop
std
shrl
xchg
mov
dec
movsb
inc
ljmp
sub
sub
sbb
andl
adc
je
lret
outsl
mov
icebp
repnz
lcall
bswap
add
rcrl
pop
in
orl
sbb
pushf
mov
fidivs
decl
imul
sahf
pushf
insl
mov
lods
xchg
rsqrtps
and
jg
xchg
add
cltd
cmp
movsl
mov
int
dec
sub
roll
push
shlb
dec
icebp
inc
xchg
mov
jmp
mov
ret
pushf
jo
or
clc
adc
and
je
inc
mov
push
stos
lds
fucomp
mov
push
add
ja
lcall
push
call
jle
testb
dec
mov
mov
jmp
or
in
jae
rsqrtps
add
pushf
loopne
add
jp
outsb
int3
dec
inc
xchg
jge
std
aad
fwait
call
aad
ret
testb
pop
and
push
adc
add
xor
mov
push
adc
lret
mov
test
jg
mov
in
sbb
jo
in
inc
sti
lret
or
mov
repnz
jne
adc
or
sti
fnstsw
and
lock
cmp
scas
mov
mov
retw
lock
xchg
inc
sub
jo
popa
and
sbb
adc
push
gs
shll
add
fdivp
addr16
xchg
fiadds
iret
pushf
fnstcw
into
inc
xlat
inc
lret
mov
stos
in
scas
xor
push
cwtl
pop
jg
jle
popa
mov
sbb
into
js
lock
adc
sahf
mov
xchg
or
stos
cmp
mov
jl
dec
adc
out
sbb
aas
adc
sbb
pop
lea
adc
mov
pop
insl
jle
or
pop
push
stc
and
xchg
push
jno
cwtl
push
push
push
test
testb
xchg
je
and
mov
mov
lea
aaa
cmpsl
mov
pop
repnz
sar
jb
push
push
adc
popf
repnz
lahf
sub
xor
cmpsb
pop
aas
ds
fcom
push
or
pushf
scas
in
jnp
push
test
nop
stos
into
js
mov
movsl
je
mov
cmpxchg
mov
mov
movsl
xor
inc
or
push
shll
adc
jb
shlb
push
mov
into
daa
lret
faddp
pop
mov
xor
inc
fcomps
jge
xchg
int
sbb
sub
dec
xchg
in
add
cmp
pop
mov
jne
and
push
cltd
in
jne
movsl
cmp
incl
mov
adc
mov
cmpsl
ret
mov
loope
popa
adc
test
push
or
mov
nop
xchg
or
sub
add
mov
sbb
push
sbb
addr16
pop
icebp
cmpl
pushf
push
xor
insl
mov
add
test
adc
jle
push
xor
mov
cmc
cltd
xor
stos
insb
in
pusha
xor
push
cmp
xchg
sarb
mov
jae
lds
loopne
test
outsl
mov
or
xchg
jb
sbb
or
pop
and
scas
rolb
push
daa
sbb
push
and
xor
push
das
pop
pop
out
loop
mov
or
loope
fildll
mov
ds
mov
fldcw
adc
xlat
jb
jnp,pt
jp
cld
cmp
lcall
jae
mov
jmp
into
cs
push
push
and
jl
add
dec
cmpl
mov
jne
fwait
sbb
dec
mov
mov
std
movsb
add
outsb
lea
pop
jle
sbb
cmp
insb
enter
pop
adc
js
fiadds
push
add
sbb
push
cmp
movsb
lods
cmp
mov
popf
jb
mov
fcompl
push
addr16
ret
pop
movsb
or
dec
in
mov
shl
dec
jae
pusha
gs
sub
lret
lret
scas
xor
pop
dec
jp
xlat
cmc
sbb
xor
jo
popa
test
xor
inc
jl
into
jne
xor
dec
sbb
adc
xchg
dec
pop
and
out
mov
xchg
leave
sbb
push
jb
sub
clc
rcl
push
cs
lcall
lret
inc
clc
and
cmp
pusha
in
jnp
fcmovbe
sub
sbb
xchg
jl
and
mov
popf
jns
lret
aas
jb
mov
and
sbb
jmp
movsb
mov
jl
cltd
add
jmp
inc
pop
lahf
clc
cwtl
mov
test
cli
push
mov
cs
or
xchg
push
shlb
jnp
roll
adc
push
xor
sub
popa
loopne
addr16
js
sub
test
pop
mov
mov
and
and
and
sbb
clc
add
cmp
sbb
dec
insb
dec
in
xchg
nop
frstor
scas
cmp
pop
outsl
sub
fsts
negl
shlb
data16
sbb
push
jo
stos
test
adc
shlb
cmp
pop
mov
das
adc
idivb
fbld
enter
mov
rclb
lret
insb
loopne
pop
adcb
pop
mov
adc
dec
mov
mov
test
fcoml
jbe
repnz
cmpsb
jg
and
sub
xor
and
imul
cli
push
jmp
incb
inc
mov
popa
mov
ret
jnp
cmp
lcall
popa
filds
mov
mov
push
insl
xor
popf
jne
lods
push
push
jae
sub
movsb
into
addr16
imul
or
cwtl
lcall
mov
jmp
insl
or
mov
and
jmp
cmc
push
rcrl
jmp
leave
aas
jl
icebp
ret
test
jne
mov
into
push
ss
push
test
jg
ljmp
mov
jp
adc
into
jle
jns
rorl
test
iret
js
cmp
or
sub
push
sbb
imull
std
inc
push
adc
fisubrl
call
pop
dec
cmp
and
stos
arpl
mov
insb
dec
pop
iret
jae
les
inc
push
mov
les
xchg
mov
push
ret
xor
in
push
xchg
bound
push
addr16
fcoml
and
dec
mov
outsl
out
shl
pop
adc
bound
fnstenv
ljmp
lcall
cld
xchg
pop
out
and
loope
mov
cmp
jecxz
cmpsb
mov
inc
jmp
push
pushf
scas
mov
lret
push
adc
adc
sub
sarb
xchg
notb
pop
mov
jp
jl
xchg
movsl
imul
add
xchg
in
mov
xor
inc
inc
and
das
aad
cs
jns
xor
fsubrl
inc
xchg
addr16
loop
xchg
addr16
sub
daa
imul
sti
inc
mov
lea
and
pop
dec
loopne
call
pop
ds
sti
xchg
or
stos
js
cmpsb
lea
dec
jae
fs
pop
adc
nop
inc
inc
mov
pop
xchg
sub
mov
inc
push
nop
stc
aad
andl
cmp
cmc
call
adc
incb
arpl
xchg
testl
sub
arpl
jnp
fldt
aad
jne
roll
insb
inc
xchg
leave
repnz
cmp
push
add
push
pop
jo
inc
cs
and
inc
mov
pushf
out
pop
enter
int
pop
aad
into
sbb
dec
popf
sti
push
adc
add
call
es
test
gs
aaa
sti
inc
xor
add
sub
inc
xor
lods
jns
cmc
jns
out
jno
jl,pt
in
scas
outsl
adc
xchg
test
jnp
movsl
push
inc
leave
mov
mov
mov
enter
xchg
js
aaa
pop
int
cmpsb
out
sbb
cmpsb
popa
adcl
dec
xchg
pop
js
sbbl
cmp
mov
mov
mov
std
pop
aas
js
jp
lock
add
add
je
inc
mov
pop
cmp
or
enter
shll
imul
cli
push
les
push
dec
sub
std
adc
sub
enter
cmc
lock
xlat
data16
adc
push
jae
cld
cmp
cmp
mov
cmp
cmc
jg
push
add
xchg
adc
aad
add
pop
cld
dec
fbstp
dec
mov
adc
stos
pop
add
shll
add
push
xlat
es
es
pop
xor
aam
out
cld
pop
pop
pop
addb
in
in
jmp
pop
push
jecxz
mov
call
into
aam
pop
push
sbb
jnp
adc
and
iret
fsubl
jl
xchg
dec
icebp
fdivrs
sub
adcb
cmp
xor
xor
or
js
pop
fnstcw
loop
out
mov
pusha
cmp
test
sub
push
cli
jae
divb
pop
pop
mov
loop
xor
xchg
dec
and
mov
data16
cmpb
adc
lods
jecxz
shlb
fldl
and
push
in
mov
stos
inc
ret
xor
pavgb
sub
in
in
cli
dec
jle
nop
sub
ljmp
push
fmuls
jle
rorl
jmp
movsl
test
add
sub
dec
xor
fnstenv
jp
pop
nop
clc
or
aam
gs
test
mov
dec
or
aas
xor
cmp
movsl
popa
pop
aas
mov
add
cmpsl
lods
cmpsl
gs
push
cmp
mov
sbb
orb
jl
fwait
xor
and
pop
dec
add
popa
insl
sbb
scas
pop
je
fisubrs
andl
mov
in
rcrl
jge
xchg
push
icebp
pop
lret
push
sbb
sub
out
pushf
pop
mov
lods
sahf
les
xchg
mov
jae
popa
sbb
adc
lods
int3
push
xlat
pushw
cmp
add
mov
test
in
pop
dec
or
push
add
sub
inc
fcomps
mov
add
xorl
mov
mov
jp
pop
mov
mov
test
scas
push
rorl
cs
push
fs
inc
add
jmp
movsl
xchg
xchg
mov
cmp
cmp
mov
pop
ror
lret
shl
xor
mov
not
xchg
fs
xor
mov
movsl
mov
loopne
and
mov
fsubrl
inc
cmpsl
mov
adc
lock
in
arpl
outsl
out
push
jecxz
loop
push
fwait
jecxz
shl
pop
xchg
arpl
lahf
or
test
rcr
je
cmp
ret
idivl
addr16
arpl
sub
push
adc
xchg
out
mov
clc
and
adc
jl
and
xchg
sbb
or
fs
stc
iret
mov
xor
sub
in
rorb
inc
inc
leave
imull
stos
pop
push
or
jno
jb
mov
push
jb
loope
mov
sub
mov
inc
out
out
in
inc
data16
in
inc
jo
adc
cli
inc
xchg
cmp
jbe
push
test
cmp
subb
push
mov
pop
in
or
subb
fs
xchg
adc
mov
shrl
lret
xchg
sbb
iret
xor
sub
js
insb
or
lods
fstpl
bound
popa
pop
push
ret
mov
in
inc
jmp
sub
push
push
jb
in
in
adc
inc
xor
sbb
cltd
lods
fsubr
cmp
cmc
pop
imul
push
insb
jl
les
xchg
add
mov
test
icebp
loop
sbb
lret
jb
cli
push
mov
sub
sbb
inc
into
lods
aas
jns
pop
iret
jne
loope
sar
lds
mov
push
jns
shlb
call
or
xor
stc
insb
xchg
or
or
sbb
in
gs
pop
imul
inc
iret
mov
iret
push
les
pop
push
data16
scas
xor
gs
in
pusha
fcompl
fistps
mov
sub
inc
adc
or
stc
fucom
push
mov
repz
pop
addr16
or
xor
adc
frstor
jg
hlt
fisubrs
or
dec
test
xchg
std
lds
aam
movsb
xchg
sbb
fisttpll
mov
js
repnz
mov
imul
xor
call
adc
push
in
nop
imul
pop
cmp
add
jmp
xchg
push
sbb
push
mov
jo
add
fs
xor
dec
dec
fisttps
test
or
inc
imul
inc
sub
mov
sbb
mov
jno
xchg
inc
stos
repz
dec
cmp
xor
mov
popa
mov
sub
rorl
std
fs
jmp
lret
sbb
pop
or
cmpsb
xchg
xchg
jl
iret
push
or
cmpb
repnz
push
mov
xchg
sub
ds
cmp
pusha
jmp
jns
fsubr
pop
adc
outsl
inc
add
pop
test
and
dec
loop
test
inc
xor
in
jbe
or
pushf
imul
in
sub
movsl
int3
push
sub
xchg
and
pop
fwait
shrl
push
into
fstps
mov
mov
mov
test
push
push
xchg
mov
adc
pop
imul
sti
dec
ljmp
pop
adc
push
xchg
les
push
pop
out
rep
and
jnp
xchg
pop
mov
mov
movsl
mov
gs
inc
jae
mov
or
scas
cmc
lods
loop
xchg
in
aaa
mov
cld
push
add
xor
jmp
shrl
cli
sbb
push
cmp
xchg
in
mov
cmp
add
xor
jae
add
sahf
cmpsb
fdivr
mov
inc
out
or
iret
jp
push
les
pushw
inc
out
push
push
lcall
call
ficoml
inc
std
mov
in
call
pop
pop
jb
pop
movsl
jmp
jbe
aas
sbb
les
cld
js
xchg
xlat
or
xchg
jl
sub
jnp
cltd
idiv
add
mov
fiadds
daa
push
mov
mov
addr16
scas
sbb
sti
inc
lock
es
cli
xchg
lret
cmp
mov
cltd
cmp
dec
insl
jbe
mov
xchg
cmpsb
jg
subb
fdivrl
xor
outsb
movsl
dec
sbb
mov
dec
lcall
test
sub
xor
aaa
push
testb
push
mov
in
mov
push
imul
sub
adc
xchg
sub
lock
xchg
ficoms
pushf
int
inc
jnp
out
mov
int3
imul
or
out
jnp
rcll
lds
cltd
stos
enter
mov
in
pop
jp
inc
lods
dec
mov
insb
popa
mov
cmp
xchg
mulb
xor
xchg
notl
push
mov
xchg
ds
data16
popa
test
xor
jp
insl
lret
jmp
pop
xchg
fisttpl
in
sub
fldcw
xchg
sbb
jmp
cmp
push
lret
mov
adc
xor
cld
fwait
jmp
jns
addr16
int3
daa
xchg
dec
xchg
dec
cmc
aaa
sub
insb
pop
and
inc
jecxz,pn
inc
xor
add
sub
fs
fwait
test
aas
es
cmp
mov
fadds
aas
dec
push
mov
fsubrs
loopne
orl
xor
mov
shrb
mov
cmpsl
ss
das
sbb
cli
repz
mov
mov
je
mov
es
dec
ds
in
frstor
lret
push
add
xor
mov
pop
stc
mov
test
mov
mov
xlat
push
lds
push
sub
push
mov
dec
cmp
shll
sbb
add
imul
cli
pusha
dec
and
leave
jecxz
ss
pop
enter
rorb
sub
pop
ud1
orb
add
bnd
pop
into
and
add
insb
rorl
sbbl
cmp
dec
in
xchg
mov
cwtl
xor
gs
pop
insl
xchg
cmp
dec
mov
scas
fidivrs
movsb
xcrypt-ofb
cmpsl
cs
and
and
xchg
mov
mov
xor
leave
push
push
insb
mov
xchg
or
out
rcrl
pushf
out
xor
cmp
gs
stc
fildll
mov
stos
enter
sbb
lahf
jmp
sbb
xchg
jp
or
lret
shll
fnstenv
out
sub
push
popfw
inc
jl
adc
xor
sub
pop
pop
pop
and
cmp
adc
dec
test
jno
int
lods
mov
cmp
pop
inc
jnp
xlat
pop
mov
out
lock
mov
sub
scas
aas
dec
mov
bound
inc
mov
cmpsl
in
lock
dec
imul
and
mov
fcoms
int3
xchg
mov
outsb
mov
pop
shll
or
decl
repnz
mov
mov
int
lods
pop
mov
js
leave
sti
hlt
push
ret
sub
mov
xor
stc
sbb
jle
cwtl
mov
in
xchg
aas
pop
mov
adc
dec
push
cmp
gs
sub
xchg
pop
mov
repz
clc
mov
pop
push
in
stos
shlb
jae
fimuls
jmp
repnz
jo
mov
sahf
mov
xchg
ret
sbb
outsb
mov
adc
mov
test
into
lahf
sbbb
mov
cmpsb
add
out
in
dec
lret
and
scas
mov
cmp
aam
mov
int
add
shlb
imul
out
mov
sub
sub
sar
lahf
mov
xor
hlt
mov
int3
sub
ret
xorb
lea
ljmp
push
ficomps
mov
repnz
into
push
jbe
mov
pop
mov
cwtl
sub
loop
adc
cmp
or
pop
cwtl
and
cwtl
xchg
movb
inc
lea
inc
out
shll
push
jno
xchg
mov
loopne
lret
hlt
loopne
adc
and
jp
test
js
jmp
xor
js,pn
xor
in
fucomp
push
pop
cmp
mov
add
arpl
negb
xchg
popa
rclb
out
out
and
or
in
inc
testb
aad
jb
inc
jnp
popa
sub
popa
loopne
ds
mov
cwtl
loopne
adc
push
lods
sbb
xor
and
sub
or
push
les
fiadds
push
mov
mov
or
fmulp
pop
pop
jecxz
lret
test
inc
mov
sbb
cmp
lret
lock
mov
lcall
push
sbb
mov
rcl
out
mov
mov
sub
add
xchg
shrl
aaa
jmp
mov
fidivrl
mov
mov
cwtl
insb
subb
mov
aam
clc
es
xchg
dec
mov
jge
add
lds
mov
mov
jle
lock
repz
jecxz
add
pusha
int3
adc
pop
pop
push
stos
or
mov
adc
mov
jle
mov
jge
cmp
sub
mov
ret
mov
dec
pop
aad
test
xchg
or
pop
jp
add
mov
fists
adc
in
jp
and
out
pop
cs
jne
int3
ficoml
into
jbe
push
nop
sbb
fs
add
jle
negb
and
jl
call
shrl
add
mov
xor
es
mov
movsb
enter
push
roll
aam
xchg
subl
mov
fstp
inc
popf
in
jg
filds
dec
imul
imul
in
adc
gs
fwait
call
sbbb
lds
dec
push
cli
gs
fdivs
scas
pop
mov
aam
addr16
add
jecxz
pop
lret
lds
jp
inc
jnp
xchg
and
push
inc
pop
in
test
push
es
out
int3
cld
add
ja
test
ret
bound
shll
mov
pop
cmp
cld
test
pop
out
xchg
adc
jge
mov
lea
ds
mov
das
loope
repnz
push
or
jp
mov
scas
cwtl
sub
scas
lret
test
je
push
push
mov
push
les
cmp
sbb
and
lods
fstps
fiaddl
mov
mov
test
stos
shl
fs
nop
call
mov
pop
cli
mov
mov
xor
js
mov
jg
out
mov
ss
and
das
pusha
sub
hlt
xchg
or
push
iret
cmp
pop
dec
insl
and
or
in
and
inc
cwtl
mov
mov
mov
out
std
xor
loop
pop
mov
xlat
lea
lock
push
ret
pop
add
xchg
mov
sbb
inc
stos
adc
lcall
push
cmc
jno
outsb
jl
in
loop
rorl
cs
push
popf
mov
sarb
adc
adc
and
lahf
popa
adcl
push
mov
mov
test
cmp
outsb
int
jne
rcrl
inc
cmp
xchg
aad
add
mov
sbb
lret
arpl
cmp
xchg
lea
mov
faddl
fwait
std
push
sbb
adc
pop
pop
xor
inc
lods
mov
out
inc
int3
gs
mov
xor
insl
lahf
cmp
clc
xlat
cmp
popf
xchg
jae
cmp
adc
loope
cld
xor
pop
pusha
jno
es
repz
je
cmp
les
jl
xchg
mov
in
push
mov
std
xchg
insl
outsl
outsb
cmp
xor
jge
lods
sub
lock
call
ja
decb
call
ja
out
mov
mov
nop
push
fidivs
mov
into
xchg
mov
adc
mov
sub
adc
movsb
inc
jo
divb
jo
fwait
pop
leave
lret
dec
and
fcom
dec
push
dec
and
mov
push
sub
fwait
lods
stos
adc
mov
fwait
and
insl
addl
sbb
xchg
cmpsb
fwait
pop
add
sahf
and
cmpsl
sbbl
jo
imul
sub
pop
dec
xchg
test
dec
pop
je
movsb
aad
sbb
out
loop
adc
stos
test
in
sub
pusha
sbb
rcr
pushf
pusha
loop,pn
push
xchg
pop
jl
imul
dec
enter
mov
adc
orb
xchg
mov
lahf
push
mov
jmp
push
add
add
sarl
or
popa
pop
dec
loop
mov
scas
pop
inc
jb
xor
nop
fdivp
rcrl
xor
cmp
incb
mov
pop
cmpsb
negb
mov
hlt
add
ror
testl
cmpsb
call
subb
lret
lods
repz
shlb
pop
lret
jnp
lret
dec
frstor
imul
fdiv
lods
sbb
bound
sti
aam
xor
test
sub
lret
adc
fcomi
aas
mov
add
mov
jb
mov
or
pop
xchg
loop
test
xor
xor
mov
fs
addr16
int3
mov
movsb
dec
jmp
inc
add
xorl
jne
das
mov
dec
aas
dec
push
leave
cmpl
push
mov
stos
mov
pop
or
loope
xor
sbb
mov
cmpsb
xchg
imul
xchg
cmpsb
lahf
outsb
or
xchg
push
push
fyl2x
out
mov
push
sub
test
call
or
sbb
loope
and
xor
stos
fadds
jge
popf
and
loopne
lret
dec
inc
and
ficompl
push
jmp
aas
les
add
mov
or
out
imul
pushf
cmpsl
call
pop
sub
fldl
mov
pop
or
lcall
aad
aas
popf
cld
pop
jae
push
push
xchg
mov
xor
push
lds
pop
dec
xor
inc
and
pop
mov
scas
push
dec
iret
test
test
cmovne
lods
sbb
sbb
lods
inc
decl
mov
and
pop
push
shrl
pusha
mov
adc
dec
or
popf
sbb
dec
sbb
sub
ljmp
data16
mov
je
xor
out
pushf
mov
push
jge
mov
out
ret
arpl
div
mov
jnp
lret
dec
add
les
bound
push
out
lds
roll
and
and
mov
cmp
cwtl
mov
xorb
out
les
push
pop
outsl
pop
fbstp
in
data16
cmp
dec
cmpsl
push
cli
xchg
inc
fistpl
hlt
inc
mov
dec
xor
ret
int
mov
mov
popf
outsb
or
movsl
and
cmp
inc
lahf
mov
icebp
mov
pop
fstpl
mov
mov
outsb
mov
and
loopne
nop
jge
out
mov
xor
hlt
adc
mov
scas
add
lea
cmp
std
adcb
sub
mov
mov
cli
or
mov
dec
mov
outsl
pop
mov
imul
aaa
sbb
push
push
inc
inc
rclb
cmpsl
lock
adc
xlat
mov
das
xor
jg,pn
cmp
lahf
xchg
fimuls
inc
stos
pop
pop
movsl
aas
mov
mov
and
mov
jb
mov
add
or
dec
xchg
or
ja
cmpsb
mov
mov
adc
cwtl
shll
aaa
push
inc
cld
jmp
stc
or
das
jl
mov
mov
mov
xlat
xor
mov
cmpl
dec
sti
xchg
mov
fcomip
push
ss
test
loopne
adc
mov
push
movsb
push
mov
sbbl
rcll
lret
or
xchg
mov
or
cmp
scas
test
pop
sub
mov
es
aad
rolb
test
and
imul
pop
aaa
popf
push
inc
push
out
xor
cld
in
xor
movsl
mov
xchg
pop
inc
push
imul
fwait
ja
cs
mov
xchg
inc
xchg
mov
fucomi
push
inc
or
lsl
jge
cmp
clc
int
sbb
jl
mov
mov
f2xm1
mov
sbb
and
dec
and
cmp
sbb
es
push
sahf
loopne
cmp
xchg
add
mov
test
fnstcw
test
sbb
push
fs
mov
jne
test
cmp
dec
fidivrl
or
jae
xchg
cs
outsl
xor
test
lcall
pushf
adc
sbb
mov
sbb
mov
outsb
cmp
stos
fwait
out
jp
out
mov
jae
adc
nop
and
scas
or
inc
and
movsb
repz
mov
sbb
push
push
adc
aas
sbb
or
mov
xchg
jnp
imul
jne
ret
fstp
enter
or
outsl
cwtl
out
xchg
cltd
push
rcl
sahf
addr16
and
std
push
sahf
xor
out
adc
mov
mov
insl
pop
adc
pop
call
push
scas
xor
ret
jle
repnz
les
cmp
mov
mov
cmpsl
nop
idivl
lock
icebp
sbb
ds
jmp
outsl
xchg
je
hlt
push
sbb
lods
cmpsb
ret
cs
fs
mov
pop
push
xor
pop
xor
xor
cmp
das
sbb
test
cmp
push
pop
int3
push
and
leave
mov
fdivl
data16
div
lea
test
push
pop
mov
mov
jo
aam
gs
and
subb
push
jnp
daa
mov
mov
addl
fisubrl
in
sub
xchg
into
out
sti
fistps
mov
imul
mul
push
jbe
fnstcw
cmpsb
and
loopne
dec
sbb
in
call
push
mov
test
inc
mov
xchg
sub
dec
sbb
lahf
movsl
in
mov
out
addr16
into
pop
iret
leave
loopne
xor
jbe
pop
int
mov
or
cmp
fwait
push
xor
or
sbb
int3
adc
aas
lahf
mov
icebp
dec
mov
mov
into
test
mov
sbb
or
decl
mov
ljmp
ret
and
xor
jno
mov
xchg
adc
pop
addb
push
jl
imul
ret
jmp
bnd
test
sarl
push
mov
jno
inc
inc
adc
sbbl
ljmp
sti
aas
hlt
xchg
jg
pop
fcoms
xor
nop
xchg
cmp
xchg
in
mov
lcall
or
test
scas
ret
sbb
data16
or
cmp
insl
mov
dec
int
repz
xor
cmp
js
frstor
sub
out
adc
xor
sbb
outsb
inc
inc
pop
mov
out
fsubrs
addl
loopne
decl
lahf
adc
mov
mov
xchg
in
ljmp
call
aas
jnp
adc
push
xor
in
push
mov
mov
std
jl
loop
and
jl
jge
hlt
xorb
pop
icebp
inc
sbb
and
push
sbb
jl
pusha
addl
push
lds
lea
mov
fisubs
loope
lea
dec
aas
mov
dec
das
jmp
sbb
sahf
daa
mov
jnp
addl
inc
pop
das
push
xor
push
xlat
push
test
jecxz
in
mov
jb
or
hlt
add
add
ss
pop
insl
stc
scas
loop,pn
sbb
xchg
mov
sub
mov
popa
push
cmp
test
inc
sbb
adc
aam
ja
mov
jne
sbb
addr16
pop
out
xor
xorl
jecxz
es
imul
inc
arpl
les
jmp
lds
add
ds
rcll
xor
pushf
std
lea
mov
or
das
fistps
int3
pop
sbb
bound
addr16
pop
mov
imul
xchg
repz
mov
inc
lds
and
push
out
icebp
push
insl
out
dec
or
mov
xchg
lock
nop
subl
call
les
inc
jae
push
jmp
rcrl
and
or
repnz
and
add
out
or
cmp
imul
push
stos
lret
and
lock
inc
mov
fdivl
aam
mov
fiadds
dec
and
cmp
add
popf
pop
pop
imull
jmp
cmp
push
dec
dec
rcrl
add
pop
and
mov
mov
pop
jmp
lcall
jo
pop
xchg
test
mov
push
sub
pop
sti
mov
stos
sub
or
mov
mov
sbb
sub
out
pop
imull
push
xor
popf
pop
in
jmp
mov
insb
mov
push
loope
or
in
sub
scas
mov
movsl
inc
das
int
and
cmc
jbe
loop
fnstsw
jg
fcmovnbe
add
sub
ror
xchg
andl
push
mov
or
scas
jns
outsl
cwtl
sbb
cmp
jno
and
mov
mov
mov
xchg
add
imul
mov
lcall
cmpsb
jno
int3
test
mov
inc
shlb
sub
aad
mov
test
scas
sti
cli
lds
mov
sbb
jecxz
adc
xor
repz
pop
add
jmp
jle
mov
cld
mov
mov
pop
loope
sar
fstpt
push
scas
xchg
cmp
jg
je
movsb
orl
movsl
cltd
scas
inc
sbb
aaa
fucom
lcall
inc
jle
add
fistl
pop
rcr
mov
push
clc
mov
add
mov
lock
out
test
sub
shl
inc
sbb
ljmp
mov
mov
fistpl
jae
xor
mov
dec
nop
lret
dec
or
shr
sub
mov
mov
das
enter
lahf
aaa
inc
and
sbb
js,pn
mov
jae
or
sub
mov
mov
shl
dec
push
aam
pop
push
sub
mov
out
lds
jno
shr
inc
dec
cmc
pop
dec
outsb
lds
sbb
xor
push
cmp
jno
pop
jae
test
pusha
loopne
in
icebp
sub
pop
push
ds
nop
fisttpl
adc
ror
jp
mov
pop
cld
cmp
xor
aam
daa
clc
aam
sbb
mov
and
mov
nop
pop
mov
arpl
sub
mov
mov
sbb
sbb
in
repz
fbstp
push
cwtl
shrl
xor
stos
adc
mov
out
xlat
repz
jp
cwtl
mov
into
mov
mov
xor
fnsave
sub
lret
cs
cmp
xchg
jp
jo
push
out
lods
push
popf
shrl
mov
daa
pop
test
mov
mov
push
adc
pop
and
mov
or
data16
cmp
push
movsl
sbb
pop
shll
sti
pop
sbb
pop
enter
rclb
xor
aaa
bnd
outsl
push
scas
inc
mov
xor
rcrb
pop
lahf
std
popf
cs
popf
adcb
sahf
aas
out
in
push
cmpsb
push
rcll
rcrb
stos
in
jge
xchg
pslld
sti
pusha
jl
shrl
dec
mov
xor
push
loope
cwtl
div
scas
sub
push
leave
jg
xchg
mov
xchg
bound
cmpsl
inc
xor
sub
arpl
cmc
inc
out
mov
pop
add
sub
into
dec
jmp
arpl
add
andb
inc
cmp
fwait
sub
cltd
pop
cmp
jp
outsb
pop
movsl
pusha
call
mov
sar
and
negb
adc
sbb
inc
xchg
push
jp
inc
jl
jle
and
cwtl
loopne
psubw
jecxz
pop
and
and
subb
ficoms
addr16
call
or
in
add
rorl
call
in
lods
cmpsl
ja
lret
mov
and
out
leave
adcb
jmp
enter
aad
push
adc
loopne
push
and
dec
mov
fadd
imul
stos
movsl
add
xchg
aam
pop
aam
ja
leave
adc
ret
or
mov
xchg
mov
push
out
or
lret
dec
jecxz
mov
mov
hlt
xchg
xchg
ljmp
bound
pop
sbb
dec
push
push
jge
adc
fwait
xor
ja
stos
adc
bound
jp
dec
into
hlt
sbb
jne
lock
adc
nop
lods
push
pop
icebp
insb
pop
jb
inc
gs
xchg
xchg
jg
pop
sbb
inc
push
lahf
movsl
stos
aaa
mov
mov
aas
xchg
out
dec
inc
in
out
and
push
mov
aad
rorl
mov
andl
insb
pop
rol
lods
out
and
sbb
stc
shll
je
mov
xchg
mov
je
mov
cli
or
int3
addl
movsl
fsubrl
push
or
dec
lea
or
sbb
mov
outsb
std
xor
subb
pushf
xchg
jp
cmp
sub
das
sub
fs
es
mov
xchg
ja
mov
rolb
pop
mov
mov
into
scas
test
sub
xor
xchg
inc
mov
insl
jge
popa
inc
fwait
xchg
push
sbb
or
sub
push
and
cmc
mov
addb
jle
call
lods
xchg
imul
call
push
ljmp
test
jp
add
and
sub
cs
test
dec
subb
dec
push
add
sub
pop
sbb
sub
dec
dec
js
jbe
sub
cmpsl
dec
out
jmp
int
cmc
dec
f2xm1
xor
push
pop
jne
cmc
mov
pop
scas
sti
and
add
addl
dec
leave
cmp
dec
int
and
mov
jbe
movl
jg
dec
scas
adc
roll
adc
xorb
test
jo
je
in
int
std
hlt
xor
fbstp
xchg
icebp
sub
mov
pop
adc
sbbb
jb
push
mov
sub
xor
mov
push
cmc
ficompl
add
and
punpckhdq
arpl
cmp
insl
or
std
pop
movsb
pusha
bound
shld
adc
sbb
in
out
int3
push
and
test
pop
inc
clc
jae
add
mov
push
mov
sarl
fcomps
xor
int
xor
testl
test
pop
les
lahf
inc
jp
mov
mov
push
pop
xchg
and
inc
jb
push
stc
and
jae
pop
jo
std
push
mov
jnp
xor
sti
adc
jb
mov
mov
loope
and
iret
inc
ret
jg
jg
push
mov
adc
sub
mov
repz
inc
push
xchg
inc
icebp
cltd
xorw
lea
jae
dec
and
test
push
sbbl
push
xlat
cmc
out
test
sarl
xor
pop
sub
outsl
bnd
mov
bound
dec
rorl
or
lods
je
jg
aam
jle
cld
insb
dec
dec
jo
mov
repz
pushl
mov
mov
pop
adc
scas
xorb
cwtl
xchg
fnstsw
dec
es
dec
inc
aam
sbb
into
js
insl
inc
outsl
loopne
scas
out
ffreep
sub
mov
jne
iret
jb
sub
popf
les
aad
and
xor
or
jb
inc
push
testb
iret
mov
dec
fsub
subb
pop
jecxz
cli
dec
jnp
stos
dec
jnp
ficomps
outsl
leave
popa
and
jp
push
xor
or
dec
stc
lock
add
out
xchg
adc
aaa
fwait
leave
sbb
lret
iret
mov
mov
mov
push
ret
rcll
xchg
pop
std
rcl
scas
andb
add
jnp
xor
add
lcall
out
icebp
dec
inc
mov
dec
inc
repz
ret
ret
ss
in
pop
arpl
add
sub
sbb
mov
sbb
shll
push
inc
mov
xor
pop
sub
cltd
call
cmp
daa
test
pop
mov
das
xor
or
add
je
pop
bnd
adcl
addr16
push
ss
rorl
jecxz
add
scas
and
out
in
mov
clc
dec
mov
clc
movsb
mov
pop
pop
xor
push
fisttps
fcoms
pop
mov
mov
loope
pop
mov
cld
cmpsl
paddusb
adc
xchg
push
jns
out
push
fildll
inc
fs
inc
cli
xchg
sahf
pop
add
mov
and
adc
loop
xorb
jle
push
push
test
xlat
jbe
test
test
jecxz
dec
pop
push
jl
in
lret
cmp
sbb
inc
js
pop
ss
push
adc
jbe
test
js
test
loope
mov
imul
cwtl
sbb
pop
push
dec
mov
cli
mov
jne
mov
jno
cmpsl
iret
aad
cli
or
scas
mov
in
xchg
fcmovnbe
outsl
xchg
mov
sbb
cs
sub
mov
xor
mov
outsl
and
add
and
mov
push
das
inc
add
push
mov
out
mov
mov
test
shr
add
sahf
stos
divl
sub
mov
mov
jmp
roll
int3
aam
outsb
xchg
or
aad
aad
imul
es
orb
ds
popa
stc
in
xchg
and
iret
mov
add
push
sahf
mov
repnz
push
scas
mov
es
adc
sub
movsl
iret
pop
or
out
jecxz
movsb
cmp
mov
out
repnz
enter
movzbl
add
cmpsl
pop
aas
pop
xor
jb
aaa
jecxz
mov
or
sub
and
push
loop
jp
sahf
xchg
mov
ja
and
outsl
push
hlt
popf
lea
mov
movsl
sbb
jecxz
lds
and
xchg
sbb
pop
push
lret
je
jne
and
inc
fs
addr16
sahf
inc
je
xchg
xchg
popf
sbb
sbb
es
lret
jnp
call
mov
je
sbb
or
xchg
xchg
test
stos
push
mov
pushf
shrl
jmp
bound
lea
adc
jae
loopne
cmp
or
test
add
pop
inc
xor
pushf
ss
push
sbb
dec
push
in
dec
inc
jg
mov
loopne
insl
fisttpl
arpl
clc
dec
and
aaa
out
imul
sbb
loopne
lock
cmpsl
sti
add
inc
jne
lret
or
sub
cmp
out
rcrb
rcll
mov
pop
imul
scas
xchg
cmp
enter
mov
cmpb
test
cmp
inc
jno
push
jne
lds
sub
sub
mov
into
xlat
jmp
sahf
test
int3
ds
mov
sub
movsb
xor
cmp
aad
dec
cmp
loopne
sbbb
add
outsb
mull
push
and
dec
xchg
mov
negb
hlt
fadds
dec
loope
ljmp
pushf
ljmp
push
pop
xor
mov
je
jne
sbb
ljmp
ljmp
jb
and
push
cmp
aad
ds
not
pop
fimuls
test
stc
mov
les
push
inc
jb
lock
mov
mov
or
or
outsb
scas
push
lret
xor
mov
jmp
in
and
adc
fstl
and
mov
mov
or
push
xor
mov
pushl
fucomi
gs
jle
inc
inc
mov
push
out
adc
inc
clc
inc
mov
add
hlt
mov
cmp
inc
adc
orl
jge
out
jp
mov
fldl
dec
mov
in
inc
es
popa
popf
mov
fstp
imul
push
orl
je
pop
sub
shlb
jge
xchg
mov
ja
imul
in
push
dec
data16
push
or
inc
insl
movsl
dec
mov
xor
aad
and
lret
sub
xchg
or
mov
mov
mov
dec
fldt
mov
dec
xor
xlat
test
sti
dec
imul
sbb
push
ret
pop
rcrb
pop
xlat
sbb
cmp
js
push
and
cmp
roll
repnz
inc
lret
mov
sbb
dec
fwait
mov
adc
xlat
outsb
jecxz
arpl
jp
dec
push
cmp
pop
das
add
mov
out
sub
xor
cwtl
dec
ds
daa
inc
push
jno
cmp
mov
mov
shrl
sbb
pop
sbb
mov
mov
and
adc
mov
orb
cld
ret
add
inc
fnstsw
push
movsb
pusha
inc
pop
les
hlt
int
shll
or
pushf
xchg
loopne
and
dec
cmpsl
imul
iret
jmp
das
je
mov
mov
stos
push
aas
jbe
aas
sti
or
mov
lahf
stos
and
mov
test
mov
add
ret
xchg
push
pop
das
jg
jmp
hlt
jp
mov
icebp
mov
jle
xchg
mov
push
inc
add
leave
dec
test
pop
inc
insl
sub
idivb
pop
sbb
add
ret
adc
mov
test
sbb
pop
mov
xor
pop
sub
mov
jp
xor
push
movsl
xor
testl
mov
cmpsl
addr16
inc
fisubrl
pop
jecxz
dec
xor
jnp
movsl
sahf
push
push
push
js
xchg
xchg
mov
lret
ja
pop
add
outsl
ret
jp
hlt
push
push
jne
jle
in
mov
mov
shlb
mov
and
loopne
movsb
leave
in
or
bound
ficoms
adc
arpl
inc
mov
or
nop
jge
lret
sbb
mov
jmp
js
push
nopl
inc
mov
sbb
fcmovnu
cmp
push
insl
push
jo
call
mov
icebp
mov
shlb
dec
je
mov
jle
testl
faddl
fsts
lret
pop
inc
pop
cmpsb
mov
xchg
aad
mov
shl
inc
mov
outsl
xor
dec
mov
into
fldl
rcl
lods
fiadds
pop
jge
add
lret
cld
push
cs
sub
imul
imul
in
sub
clc
rep
pop
sbb
outsl
arpl
cli
adcl
cmp
or
sbbb
insl
xchg
icebp
in
cltd
push
pop
cmp
arpl
out
dec
jo
inc
repnz
xchg
loope
pop
pop
cmp
push
adc
add
add
ficoms
scas
xchg
insb
mov
insb
subb
xchg
add
xchg
xor
movsl
cmp
sbb
and
dec
in
imul
lock
aam
adc
jge
push
xor
in
pop
pop
fdivrl
push
lock
ret
pop
mov
fstps
xchg
call
jp
jge
and
push
rol
mov
call
jne
dec
pop
call
cmp
inc
lods
out
xchg
shlb
cmp
aam
icebp
pop
ror
add
pop
or
std
push
pop
shlb
pop
mov
test
jle
and
lock
cmp
push
lahf
aas
ljmp
lahf
mov
jg
dec
jo
xchg
xchg
imul
cmpsl
xchg
mov
testl
dec
leave
push
lods
fisttpl
mov
pop
cli
sub
adc
pop
imulb
mov
xchg
filds
fistps
imul
std
mov
arpl
push
jo
mov
out
dec
lock
add
dec
test
data16
sbb
or
out
and
jne
ret
cmp
in
cmp
or
out
lcall
inc
push
mov
loope
xchg
lods
xchg
adc
push
dec
fwait
push
mov
lds
xchg
ftst
leave
xchg
std
call
cmp
dec
lods
movsl
xchg
test
leave
repnz
ds
xlat
outsl
rcl
or
lods
pop
or
xchg
mov
into
mov
pop
inc
push
flds
nop
addr16
jecxz
inc
mov
imul
idivl
orl
test
in
outsl
into
clc
cmp
lods
fwait
repz
inc
sbb
fs
in
aaa
xchg
or
sbb
add
insl
fists
out
mov
xchg
pop
movsb
pop
push
fwait
sbb
popa
mov
pop
arpl
push
xor
repnz
jnp,pn
xor
mov
cmp
push
test
outsb
push
or
push
das
mov
arpl
mov
aas
addr16
hlt
push
cmp
sub
cmp
adc
in
cmc
repnz
mov
loopne
jns
aam
dec
and
push
shrl
call
pushf
sti
jb
xor
and
imul
xchg
cmc
repz
and
push
lock
jl
mov
shr
push
sub
daa
mov
xor
shrl
jecxz
xchg
imul
mov
add
mov
movsb
fildl
jmp
call
fistl
xchg
fwait
cli
dec
call
mov
and
stc
ret
inc
popa
sbb
cmp
or
in
fidivrs
movsl
push
add
pop
jnp
pop
add
pop
xchg
dec
push
faddl
outsb
adc
mov
fadds
and
aad
stos
call
clc
sub
fidivrs
movsl
mov
fisttpl
sub
jo
outsl
pop
in
lahf
loop
lahf
popf
sbb
or
fistpl
lret
fisttps
sub
mov
pop
in
iret
pop
outsb
vpsubb
ficoml
clc
dec
pop
mov
mov
pop
fidivl
enter
mov
test
mov
int
fisubl
mov
sub
jecxz
inc
addr16
sti
push
test
test
incb
test
push
fmull
add
push
scas
inc
jnp
xchg
pushf
call
int
and
icebp
out
into
add
adc
addr16
into
push
add
divl
sbb
jl
push
lds
sti
jae
out
xor
sti
add
push
jne
shrb
les
cld
push
ret
add
lock
cmp
xchg
aas
mov
jno
je
and
jmp
inc
in
out
out
or
cmpsb
adc
dec
cmpl
out
jmp
in
mov
in
add
xor
dec
mov
pop
sub
imul
insl
mov
out
mov
gs
stos
data16
jo
adc
jne
mov
das
das
fs
pop
cmp
pop
outsb
fisttpl
inc
adcl
cmpsb
outsb
out
inc
sub
fidivrs
outsb
and
scas
movsl
stos
mov
push
in
add
mov
insl
nop
sbb
lret
and
ret
leave
lret
stc
test
inc
and
mul
enter
jp
jnp
and
fldcw
dec
call
test
inc
xchg
push
mov
sbb
repz
jl
test
out
in
sbb
scas
mov
xchg
stos
aaa
adc
loope
pop
push
test
fsubrp
xor
pop
mov
inc
cld
push
inc
pop
mov
jl
jae
test
mov
in
pusha
repz
jb
imul
xchg
xchg
mov
and
and
ret
pop
xor
mov
mov
fistpl
out
push
jne
or
pop
mov
pop
sbb
pop
and
adc
and
lahf
bound
mov
sub
loope
aaa
mov
cmpb
jne
enter
dec
cmp
jne
push
and
scas
pop
hlt
sbb
fwait
mov
cs
aam
jae
movsl
icebp
mov
les
pop
mov
out
mov
nop
sbb
lcall
rcll
cmp
mov
cmp
jecxz
xor
ja
fisubrl
pmaxsw
loop
jb
js
push
daa
fdivs
mov
sbb
in
xor
scas
add
mov
pop
or
cmpsl
call
rcr
loop
fstps
jmp
sbb
in
pop
out
lods
stos
mov
stc
adc
das
pop
test
mov
dec
add
cmp
leave
dec
cltd
repnz
shrb
xchg
pop
adc
in
fxch
arpl
in
int
sbb
adc
jns
cs
ret
sub
and
sbb
insb
mov
cmp
aad
shl
enter
aaa
fs
mov
pop
aaa
aam
mov
fsubrs
dec
add
ficoms
enter
scas
pop
push
call
xor
lahf
sbb
cmp
sti
sub
jl
adc
sub
jb
inc
jb
mov
inc
ret
sub
push
xchg
gs
out
push
pop
cmp
mov
jp
xor
sub
stos
sbb
lcall
jne
aas
adc
movsl
in
lods
push
push
stc
and
loope
incl
lret
insl
inc
and
shll
inc
jle
xor
and
and
xchg
fxam
das
aaa
pop
test
aam
gs
push
add
push
loopne
ja
mov
in
push
lea
outsl
outsb
outsb
filds
stos
in
push
mov
pop
sbb
and
mov
xor
stc
sub
cld
cwtl
push
rorb
pop
xchg
add
push
sbb
jno
cmp
jl
bnd
sub
mov
je
xchg
pop
add
add
xchg
sub
adc
xchg
test
push
dec
in
sbb
or
lcall
hlt
dec
xor
pop
mov
sub
pop
movsl
inc
xchg
push
xchg
xchg
add
nop
shlb
loop
hlt
cmp
leave
inc
shll
cld
mov
inc
jno
hlt
loope
and
out
adc
xor
inc
xchg
add
xorl
pop
andl
and
inc
xchg
loope
mov
or
ds
js
jo
sar
ret
pop
ret
fcmove
les
jge
out
sysenter
enter
adc
adc
push
cmc
xchg
repz
mov
mov
pop
mov
leave
icebp
clc
mov
lods
fisttps
dec
push
sub
testb
sbb
stos
iret
jne,pn
add
pop
orl
xor
aad
mov
mov
dec
sbb
inc
cmpsb
push
lds
push
and
inc
cmp
outsl
cmp
pop
mov
or
dec
movsb
pusha
cli
push
add
push
push
movsl
and
sub
mov
cld
and
sarl
mov
rcl
movsl
insb
mov
enter
call
hlt
jo
jmp
outsl
repz
adc
aas
inc
inc
jmp
pop
cmp
mov
lods
sbb
in
les
fstpt
jb
push
xor
lock
xchg
and
pop
rolb
cmp
dec
mov
test
add
xor
mov
push
adcl
fsubl
sbbb
mov
vpmacswd
jae
out
lock
inc
xchg
or
xchg
pop
jae
iret
mov
divl
mov
or
inc
in
jae
inc
push
mov
sub
call
pop
inc
mov
adc
push
push
push
cmp
out
into
fists
int
or
shr
cli
hlt
dec
jne
fistps
call
fidivrs
xchg
push
movsb
leave
jne
mov
into
gs
adc
push
xchg
stc
mov
mov
jge
les
in
addr16
addb
sub
inc
outsl
jl
cmp
clc
mov
stos
add
js
sbb
sbb
int3
or
mov
jmp
shll
cmp
jns
aas
je
jbe
adc
cmp
addb
cmc
cltd
rcrl
inc
mov
stos
sub
cmp
cltd
jns
inc
jmp
sub
xor
imul
pop
fwait
xchg
mov
add
fcmovbe
sbb
push
and
fwait
jo
ret
notl
repnz
pop
dec
das
hlt
gs
fsubs
sub
jg
dec
cs
cwtl
pop
or
mov
loop
or
jle
setbe
or
int
in
cmc
popf
movsb
out
dec
pop
lods
xlat
dec
outsb
inc
dec
fidivrs
sub
inc
push
inc
dec
push
insb
jg
jge
loop
dec
adc
pop
jae
jp
cs
outsl
decl
push
divl
testl
jnp
jp
out
pusha
mov
sub
cmp
jmp
jo
pusha
push
adc
outsb
es
and
mov
dec
lcall
jecxz
mov
test
rcr
fstpt
ficoms
fs
divl
je
in
stos
test
xor
jp
aad
out
out
iret
add
ds
inc
dec
mov
push
jmp
fnsave
add
je
lock
loop
xchg
dec
andb
fisubrs
outsb
fiaddl
push
popl
stos
pop
fmuls
aad
push
jb
mov
mov
pop
dec
cmp
mov
ds
xchg
jnp
mov
mov
sub
sbb
cmp
fnstcw
push
aad
jle
xor
lcall
lret
add
jp
add
call
mov
push
pushf
mov
call
jge
lret
stos
inc
fs
pop
adc
add
lock
hlt
aas
dec
cmp
jl
sub
cmpsl
lret
or
out
subl
pop
incb
ficomps
ljmp
fsubrl
lods
push
rorb
pop
cmpsl
inc
int
inc
out
imul
mov
out
test
dec
xchg
jne
orb
xor
sub
add
outsl
stos
aad
pushf
pop
aad
jne
xor
mov
mov
mov
jl
xchg
cmp
dec
ret
ljmp
test
dec
xlat
repz
mov
push
xchg
addb
pop
test
loop
sbb
fsubs
xlat
repnz
adc
cmp
mov
jne
gs
es
xor
add
mov
push
cs
mov
dec
dec
jg
fbld
mov
inc
loope
scas
lahf
mov
repnz
fidivrl
adcb
jae
jns
xor
jno
or
jmp
mov
js
loope
pop
mov
mov
inc
bound
mov
nop
jns
mov
inc
in
ffree
and
je
insl
add
jl
jl
lods
xchg
sub
sahf
clc
xor
cmp
mov
stc
pop
into
lods
ljmp
jecxz
in
popl
add
mov
push
cmp
dec
mov
inc
sub
dec
fwait
sti
pop
xchg
in
clc
sub
and
cld
inc
lahf
outsb
out
add
xchg
xchg
loope
repz
jg
je
and
lds
movsb
jb
add
and
inc
sti
xchg
sub
pop
test
adc
daa
outsb
cmpsb
cmc
or
mov
bound
jb
fmulp
ss
inc
xor
stos
cmpsl
adc
jbe
and
and
mov
jmp
loop
popf
sbb
clc
xor
cmp
add
xor
xor
fcoml
movsl
cmpsb
mov
mov
sub
out
push
lds
stc
out
lret
cs
test
push
or
imul
mov
push
cmp
sbb
inc
mov
jecxz
xchg
add
inc
fs
int3
sub
ds
sbb
int3
jne
popf
mov
decb
inc
andl
enter
lahf
pop
mov
rorl
pop
add
sub
xchg
mov
lods
jae
std
sbb
xchg
sub
hlt
xchg
nop
insb
sub
cltd
xor
xchg
lock
add
mov
les
daa
out
mov
gs
mov
dec
je
in
fmull
clc
loop
sbb
testl
jecxz
adc
sub
hlt
push
push
cli
jg
test
push
xchg
lods
xor
push
sub
lret
pusha
mov
or
dec
adc
test
xor
sub
aam
jl
cwtl
pusha
pusha
addr16
sbb
jp
mov
iret
and
sub
sarb
cltd
push
leave
cmpsl
jae
or
in
jne
ret
je
popa
fisubl
inc
xor
xchg
movsl
or
pop
inc
dec
mov
shl
add
push
mov
out
mov
sub
jle
imul
mov
jmp
jle
xor
lcall
inc
repnz
sbb
add
sar
push
aas
xor
push
cmp
insl
in
jl
push
test
inc
sub
pop
fnstenv
in
dec
sub
nop
arpl
outsb
decb
and
shll
add
adc
pop
cltd
sub
lahf
xchg
in
lea
out
lock
loope
rorl
fwait
stos
bound
mov
jle
inc
push
lods
and
ficomps
push
adc
xor
jns
mov
and
ret
xorb
loopne
mov
xchg
mov
movsl
jae
jl
ss
mov
sbb
ljmp
pop
popf
inc
outsl
push
pop
sahf
jmp
cmpsb
test
ret
pop
xchg
and
jmp
pop
inc
pusha
test
cmpsl
sbb
sbb
sub
pop
imul
inc
lret
xchg
and
pop
cmp
repz
jge
out
xchg
aaa
popa
xchg
push
mov
mov
hlt
add
scas
mov
sti
push
bound
test
jbe
adc
mov
daa
or
in
add
xchg
adc
and
mov
jg
xlat
add
lods
dec
test
push
repz
aad
mov
jecxz
mov
repz
sahf
push
sub
ret
scas
movsb
cmp
aas
in
movsb
adc
sub
pop
mov
push
cwtl
pop
test
imul
sbb
call
cmpl
xchg
push
pop
add
fists
outsb
jno
lahf
insl
lods
daa
xchg
mov
adc
pop
pop
ret
mov
scas
test
adc
lret
jnp
leave
cmpsb
jo
mov
cmpsb
sahf
xor
adc
sti
adc
mov
int
lahf
mov
push
aam
pop
insl
cli
pop
in
push
add
aam
or
out
jl
pop
and
or
xchg
push
sub
xor
jns
into
sbb
jmp
icebp
mov
nop
inc
sbb
and
fwait
mov
int3
fs
dec
lods
sub
out
xor
pushf
out
pop
inc
dec
add
lcall
scas
mov
orb
push
pop
xor
inc
xorl
add
repnz
lods
shlb
sbb
add
xlat
repz
rep
jns
loop
std
arpl
xchg
mov
mov
sub
lcall
mov
or
mov
sub
in
and
cltd
lods
inc
push
sub
imul
hlt
insb
in
mov
xorb
fsqrt
pushf
mov
jne
enter
leave
outsl
out
push
xchg
aam
pop
dec
mov
sbb
sbb
and
mov
out
rcll
sarb
ret
sbb
and
dec
mov
fstpt
fwait
loopne
in
fsubs
dec
and
pop
cli
jmp
and
lock
stos
popf
fwait
das
mov
xor
jae
in
pop
out
insl
xor
inc
xorl
mov
dec
flds
sub
aad
or
packsswb
pop
pop
shrb
insb
repz
arpl
mov
or
test
cmp
loope
sub
cmp
fadd
jmp
vaddsd
pusha
stos
loope
mov
je
push
out
daa
js
pushf
out
jno
or
lahf
scas
add
sub
pop
les
je
adc
cmpsb
fisttpl
mul
sarb
xor
inc
push
ja
cmp
out
mov
test
inc
mov
outsb
sti
xchg
mov
push
std
lea
or
jl
xchg
hlt
jp
pop
sub
ret
cltd
and
pop
jno
pushl
mov
fwait
pop
push
dec
mov
push
fists
add
inc
mov
ficoms
je
enter
popa
adc
addr16
fcompl
int3
jp
sarb
int
cmpsb
loop
xor
aas
jmp
jmp
lret
out
aam
jmp
inc
leave
mov
lcall
jp
fstpt
js
or
inc
push
mov
movsl
mov
mov
insb
inc
cmp
add
push
int3
dec
test
mov
in
pop
push
mov
jecxz
ja
cmc
xchg
cmp
xorb
inc
mov
mov
mov
cs
cld
test
aas
aad
sub
in
and
fsubr
push
jecxz
push
int
cmp
cmp
add
and
cmp
insl
mov
jecxz
int3
daa
sub
fidivrs
mov
imulb
shlb
dec
xor
xchg
inc
rclb
popf
clc
inc
mov
dec
xchg
call
insb
adc
popf
xchg
mov
aad
out
test
push
test
fsubrl
jno
cs
xchg
mov
and
add
jnp
or
add
js
out
xor
pop
add
int3
pusha
add
inc
mov
pop
pop
bound
jge
cmp
mov
jg
pop
jp
lods
xchg
insl
sti
enter
add
int
inc
test
push
dec
in
in
test
push
mov
pop
add
cmpl
mov
cmp
rorl
cmpsb
xchg
in
mov
mov
pop
mov
pushf
inc
sub
mov
in
pop
or
call
call
pop
jbe
cmp
fwait
cmpsb
adc
dec
aas
pop
shrb
stos
ret
cmpsb
jo
lret
jno
xor
push
aaa
cld
enter
xlat
or
pop
out
insb
sbb
mov
inc
lcall
dec
xor
mov
sbb
mov
pop
fisttpl
push
add
jmp
mov
mov
fadds
xchg
push
addr16
add
pop
pop
pop
fimuls
ret
pop
adc
loop
dec
sti
adc
popf
ficompl
add
lcall
sarb
cmp
pop
or
xlat
insb
hlt
sti
sti
mov
sub
mov
jo
fistl
sbb
dec
and
cmp
mov
imul
or
jmp
sbb
les
push
jo
sub
jl
popa
cli
fwait
cwtl
add
fisttpl
sub
jo
and
pop
mov
fidivrl
cs
adc
mov
fstl
jae
movsb
scas
xor
mov
adc
shlb
out
lret
push
mov
mov
mov
iret
fs
fucomi
adcb
inc
cmpsb
clc
fimuls
xor
mov
sahf
or
fs
aaa
and
sub
mov
movsb
mov
xchg
mov
imulb
or
dec
stos
mov
pushl
mov
inc
int3
es
aaa
sarb
imul
data16
jb
inc
jp
jg
std
cmp
sub
test
pusha
mov
iret
fstl
out
xchg
fs
sarb
or
mov
fwait
dec
outsl
rcrb
fs
mov
sub
pop
mov
push
inc
push
sub
cld
dec
cld
or
sbb
imul
mov
test
fbld
xchg
dec
xor
push
pop
xchg
lcall
mov
leave
subl
lods
or
outsb
loope
add
pop
push
daa
out
push
call
inc
cwtl
jae
xchg
xorb
pop
or
dec
sbb
notl
xor
scas
inc
push
sub
lret
dec
arpl
jnp
push
cwtl
into
setp
cmp
mov
cltd
cmpsl
mov
inc
jns
imul
jb
jp
movsl
cmp
mov
inc
enter
insl
cmp
pop
lret
mov
jb
imul
mov
div
dec
mov
sbb
stc
popf
loope
xor
xor
leave
imul
or
lret
cmpl
imul
nop
test
pop
xchg
push
aas
leave
xor
cmpsb
clc
jge
push
add
mov
leave
or
test
ja
call
fisubrl
inc
lds
sub
sti
ja
adc
hlt
fldenv
ret
out
dec
gs
in
pop
pop
xor
imul
ret
hlt
cli
rolb
cltd
push
sysenter
push
insl
cmc
add
mov
and
jp
add
cmp
mov
cmp
call
xchg
inc
iret
mov
jle
aam
sbb
mov
iret
pop
push
inc
lds
pop
fidivrs
insb
mov
sahf
pop
js
stos
ss
lods
xchg
mov
fisttpl
add
mov
rorl
cltd
iret
stos
cmc
fs
fadds
mov
inc
mov
pop
les
pop
sbb
or
lock
stos
icebp
cltd
mov
xlat
jb
fcoms
mov
pop
mov
sahf
test
in
pop
sti
mov
hlt
pushf
mov
pop
or
xor
inc
sahf
jp
outsb
or
test
and
fsincos
sub
jg
push
add
scas
lcall
cmp
sbb
pop
ds
cmp
loopne
add
outsb
js
lods
inc
sbb
aad
pusha
xchg
xchg
jge
xchg
iret
std
fisubrl
inc
clts
sub
jne
pop
lahf
lds
fimuls
mov
dec
out
cmp
mov
adc
pop
mov
test
and
flds
sbb
adc
daa
out
cwtl
loop
insb
js
inc
and
ds
inc
dec
ror
adc
das
push
sub
in
movsb
mov
sub
push
xchg
adc
pushf
add
imulb
stos
jg
aam
mov
mov
rolb
dec
mov
pop
mov
push
jno
push
push
pushf
rcll
xor
cmp
or
bound
sub
or
jne
das
subb
push
popf
xor
and
lock
jb
and
lds
and
mov
sub
pop
and
or
add
mov
imul
scas
stc
in
xchg
pop
pop
sahf
out
mov
dec
loopne
test
sbb
das
cmp
xorb
push
fcmovnbe
sub
jp
xor
fsubs
nop
arpl
ss
aaa
nop
cmp
lea
jmp
testl
pop
pop
sbb
jg
shrl
sbb
insb
mov
test
ficompl
add
repz
push
mov
enter
ret
inc
jg
push
push
or
pop
out
fisubs
mov
mov
js
das
int3
rcll
cld
add
inc
add
inc
nop
cli
mov
xchg
inc
inc
push
dec
sbb
in
icebp
fld
adc
cmp
mov
ds
das
mov
xor
mov
pop
enter
cmp
out
repnz
cmpsl
popa
push
xchg
jmp
pop
jmp
inc
clc
stos
lods
pop
and
dec
je
mov
cmc
sub
cmp
gs
movsb
fisttpl
mov
call
addl
and
add
add
aas
and
dec
xchg
in
fmuls
stos
ds
lcall
dec
leave
pop
cld
bound
shl
loope
push
out
cld
or
lcall
jae
lods
jg
xor
mov
sbb
lret
aad
lock
icebp
mov
xchg
jecxz
mov
and
enter
pop
sub
lahf
ja
add
icebp
leave
mov
mov
mov
in
popa
testb
pop
fdivl
jmp
sbb
addr16
sbb
cltd
ljmp
and
leave
add
adc
out
adc
push
fwait
lret
ljmp
fldcw
fisttpll
jp
mov
insb
push
aas
xor
popa
arpl
rcrl
jl
jne
rorl
iret
and
xor
insl
mov
sub
jp
mov
add
das
fwait
cmc
jg
and
xchg
movl
jp
jge
divb
push
dec
rol
mov
divb
cmpsb
xchg
sahf
and
decl
bound
pushf
push
xchg
inc
ja
push
cmp
sub
dec
lock
add
jae
repnz
pop
out
mov
inc
jmp
stc
or
lcall
jle
fcmovbe
rol
ljmp
pop
xchg
mov
clc
mov
pusha
insb
jl
adc
scas
movsb
call
push
int
inc
aaa
movsb
and
and
add
std
mov
icebp
cmp
jae
jge
add
or
push
int3
inc
cmp
push
adc
mov
out
out
and
lret
jnp
push
xor
pop
jle
fisubrl
orl
inc
in
lret
dec
mov
sub
inc
cld
aas
mov
jo
aas
out
dec
cmpsb
cwtl
cmp
xor
cmp
mov
repnz
xor
int3
pop
stc
mov
inc
xchg
pop
aaa
xchg
loop
out
pop
bound
ja
lcall
mov
xor
push
out
jg
pop
push
sub
mov
pop
sbb
fiadds
dec
inc
xor
xor
call
push
fwait
pop
lock
cwtl
addr16
add
lret
icebp
jns
jmp
jge
mov
xchg
inc
clc
ds
cltd
das
int3
cmp
pop
jecxz
or
cmp
cmp
inc
pop
adc
sbb
lret
pop
xor
sub
js
mov
dec
bound
lds
clc
imul
xor
jno
rorl
pushf
or
and
bound
dec
pusha
pop
mov
ret
pop
dec
pop
call
inc
jo
xchg
xor
xor
setl
aas
sbb
jo
inc
and
jnp
lret
or
leave
pop
sbb
mov
xchg
lcall
jno
mov
and
dec
sbb
mov
push
or
jl
push
add
das
mov
mov
xchg
test
push
and
adc
mov
dec
aas
adc
icebp
inc
jnp
pop
push
adc
fdivs
push
push
mov
call
movsl
testl
daa
cmc
lock
cmpsl
and
pop
mov
lahf
or
sub
cmp
sbbl
int
mov
enter
cmp
mov
sahf
pop
fwait
or
adc
jae
mov
scas
lods
mov
dec
gs
ds
sub
push
push
inc
sbb
push
subl
jbe
aaa
sti
pop
icebp
pop
mov
sbb
stos
cmp
push
movsb
push
ds
pop
inc
fstpt
and
sub
dec
push
loope
pusha
xchg
arpl
mov
imul
in
ss
icebp
rorl
mov
mov
enter
push
cmp
sbb
adc
push
cmp
xor
mov
ret
ljmp
xor
stos
aad
mov
shll
mov
mov
fchs
mov
mov
adc
lods
adc
mov
dec
mov
fdivrl
sub
pop
cmpsb
or
mov
or
imull
stos
data16
shl
loopne
sbb
add
nop
fimull
div
aam
cwtl
and
mov
insb
std
out
insb
mov
in
out
add
sti
das
mov
mov
test
mov
push
aam
adc
out
jg
cltd
int3
push
popf
mov
sub
clc
stc
sub
adc
xor
scas
cmc
movsb
jbe
sub
sub
mov
inc
rcll
fldl
out
not
jnp
fucomi
pop
adc
cltd
mov
das
cmp
push
orl
mov
lock
cli
lock
sti
std
or
in
mov
orb
es
xchg
inc
inc
jecxz
and
xchg
cld
pop
cld
loope
cmp
out
popa
jmp
sub
or
scas
das
adc
ds
ja
inc
sbb
and
enter
sub
push
push
push
shrb
xor
std
iret
mov
xchg
out
adc
aaa
data16
inc
fs
xchg
push
push
xchg
cmp
cmp
xchg
aam
fistps
mov
clc
movl
xchg
int3
sub
or
xchg
adc
push
add
mov
ds
inc
dec
sahf
jmp
push
mov
jno
cmp
cmp
or
das
inc
and
mov
daa
lock
mov
adc
hlt
mov
gs
sub
mov
mov
ja
cmpsb
lods
adc
mov
add
and
pop
jae
imul
cmp
push
cmp
jmp
test
dec
xrelease
push
fdivl
dec
cld
push
dec
subl
inc
push
imul
loope
jns
add
xor
movsb
jge
jle
mov
xchg
adc
sub
imul
loopne
jne
mov
push
scas
xchg
stos
stos
movsb
or
mov
mull
test
lods
js
aam
rep
inc
mov
inc
out
push
dec
and
cmp
pusha
popa
push
lret
mov
sub
scas
cli
and
inc
push
xchg
cmpsl
sub
jle
sbb
cmc
into
icebp
xchg
inc
or
cmp
adc
cs
xor
sbb
clc
dec
and
lods
ja
lods
xchg
addr16
int3
sbb
push
enter
mov
sbb
mov
pushf
dec
pop
loop
push
inc
out
push
aaa
dec
mov
mov
mov
jmp
dec
mul
pop
mov
sbb
mov
pop
and
xchg
inc
inc
pop
scas
or
push
lahf
insb
sbb
ja
in
pushf
sub
iret
or
call
loope
and
or
push
mov
sub
adc
lret
add
rolb
jge
adc
jmp
or
cld
call
xlat
cltd
mov
int
int3
in
pop
xchg
add
cmpsl
outsl
enter
mov
sbb
hlt
outsb
aam
or
mov
addb
mov
repz
out
fstpl
or
sub
lods
push
cmpsl
nop
in
mov
rclb
fs
out
mov
cmp
out
sub
lods
fildl
or
lock
mov
jle
xor
push
jl
lcall
lods
cmp
mov
outsl
push
and
inc
enter
fisttpll
outsl
sub
jae
movsb
pop
repnz
lock
je
lock
shl
xlat
add
int3
int3
cs
fidivrl
cmp
fnstsw
dec
mov
aas
scas
and
sub
out
testb
push
popa
jecxz
gs
jle
out
push
push
loope
cmc
test
sub
addr16
mov
in
adc
nop
daa
bound
inc
pop
mov
js
movsl
shll
pop
lock
fdivrp
ret
mov
inc
andb
lea
mov
mov
icebp
and
and
fwait
stc
jp
popf
fxsave
ret
movsb
add
and
ds
stc
mov
cmp
sub
mov
push
push
push
and
nop
jne
rcrb
scas
movb
int
fs
adc
and
enter
loopne
and
fcoms
mov
adc
push
cld
and
lods
mov
xchg
daa
sub
or
call
movsl
cmp
roll
test
mov
jno
inc
scas
pushf
pop
fisubrl
mov
pop
icebp
mov
sti
popf
rclb
jecxz
sub
cmp
and
mov
dec
fdiv
mov
aaa
iret
inc
dec
add
dec
les
cli
sbb
jno
mov
xchg
mov
dec
cmp
sarb
and
in
int
jbe,pn
out
int3
cmp
lahf
add
test
inc
and
aam
mov
adc
cwtl
xor
jno
test
lea
push
pop
sub
cld
lret
xorl
test
pusha
aas
dec
xor
test
insl
adc
popa
iret
push
xor
mov
inc
je
imul
les
add
icebp
dec
jg
mov
aad
aam
mul
nop
dec
mov
int3
adc
add
lret
ljmp
mov
mov
loope
lahf
repnz
cmp
test
dec
pop
in
ja
js
das
push
stc
xor
stc
dec
sbb
mov
jp
dec
or
fs
testl
cmp
test
jmp
popf
jbe
test
jbe
outsl
in
fists
stc
shll
in
fildl
scas
mov
sub
jbe
inc
jbe
and
sub
pop
sbb
mov
push
mov
fidivs
or
imul
fst
sub
fwait
xchg
stos
jl
xchg
rcrl
cmp
push
arpl
mov
sti
cmp
cli
dec
outsl
mov
dec
pop
fwait
push
enter
pop
jae
mov
mov
push
push
rcll
cmp
inc
scas
arpl
lods
mov
push
fistl
insb
shr
dec
test
out
pop
xchg
fcomp
loopne
imul
mov
sbb
or
xorb
iret
mov
sbb
pop
mov
sub
stc
inc
sub
loopne
and
sub
and
pusha
test
arpl
xor
scas
fsubl
ja
fdivr
call
fdivr
cld
mov
call
sar
lcall
jne
bound
cmp
fcomp
and
jg
fwait
outsl
sbb
shrb
and
loopne
repz
xor
and
aad
pop
pop
sub
push
mov
add
jo
add
and
jle
lock
aaa
cmp
mov
shlb
hlt
fistl
adc
lret
lret
icebp
sub
aas
jbe
in
mov
psubsw
jle
cmp
inc
push
popa
and
mov
lret
and
subb
sbb
mov
adc
and
mov
jb
ret
daa
out
sti
sahf
mov
mov
pop
popf
inc
mov
shrl
sarl
add
xchg
mov
sti
stos
lock
call
mov
jecxz
jmp
pop
jl
mov
mov
cmpsl
inc
ja
sub
lock
lret
mul
mov
fisttps
data16
mov
fldt
mov
fs
fabs
cmc
jl
std
inc
aam
mov
sub
inc
lods
repnz
mov
fdivs
pushw
add
pop
and
addr16
sbb
aad
test
sti
fcomi
dec
or
cmpsl
cmp
cmpsl
pop
or
xchg
clc
mov
cmp
in
arpl
sub
inc
push
movsl
xchg
stos
ljmp
xchg
ret
rcr
cmp
mov
out
rorl
inc
jmp
jb
jge
cmp
cmp
mov
cld
stos
insb
test
mov
out
adc
in
test
xchg
xor
lahf
mov
inc
stos
fucomp
dec
pop
pop
lea
jmp
sub
fldl
fwait
inc
dec
sub
xor
jecxz
xchg
mov
add
and
or
lret
adc
mov
sbb
stos
sub
arpl
sbb
dec
push
add
jge
sti
and
aaa
adc
push
shlb
les
not
or
dec
mov
mov
das
mov
fwait
fwait
ret
xchg
imul
movsl
arpl
cmpsl
or
mov
xor
and
mov
out
adc
dec
push
mov
jecxz
movsb
outsl
add
enter
mov
lea
popa
mov
es
or
pop
push
filds
hlt
xchg
es
sar
outsb
mov
lds
pop
nop
pop
cld
mov
sarl
xor
test
jne
xchg
stos
aam
mov
add
mov
add
subl
mov
enter
shr
das
mov
ja
mov
mov
mov
dec
mov
push
in
test
add
das
push
subb
shr
cmp
mov
int3
or
dec
je
std
mov
jmp
repnz
fstl
bound
movsl
sti
adc
stos
add
fadds
jle
mov
inc
gs
jbe
xor
or
sub
jns
fisttps
cwtl
pop
xor
daa
mov
mov
js
aas
sbb
add
fcomps
out
lods
sahf
mov
sub
or
fiaddl
addr16
iret
adc
jns
test
mov
clc
leave
pop
bound
xchg
or
cmc
and
cmpl
lds
test
xor
ret
xchg
dec
pop
mov
push
xchg
rorb
mov
mov
in
sbb
cmc
orb
sub
mov
jbe
dec
inc
bound
std
imul
call
mov
inc
jmp
pushf
cld
out
fwait
std
or
mov
test
scas
push
mov
ret
mov
fdivr
add
mov
pop
or
push
fimuls
loop
out
gs
pop
scas
sbb
xchg
sbb
sub
loopne
cltd
outsl
push
pushf
mov
xchg
leave
inc
jno,pn
jge
ljmp
sub
cmp
das
mov
dec
into
ret
in
and
inc
inc
scas
jns
loopne
cmp
test
nop
jno
cmp
add
fisubl
stc
pop
in
in
pop
in
pusha
pop
dec
inc
insl
cs
shll
sbb
add
and
cmpsb
jne
pusha
movsl
push
jo
cmpsl
ljmp
fsts
dec
mov
scas
inc
sub
daa
scas
or
lret
sub
or
mov
loop
mov
xchg
and
sti
lods
pusha
add
and
fisubrs
repz
shrb
repz
add
cmp
pop
jo
jnp
mov
dec
clc
pop
ljmp
rclb
testb
pop
pushf
sub
ds
leave
nop
pop
in
jnp
jns
jge
adc
lcall
orb
add
mov
insb
mov
mov
inc
or
int3
xchg
sub
cmpsl
mov
ret
mov
loopne
pop
add
lret
data16
loop
jo
mov
push
cmp
lds
stos
clc
jmp
sbb
push
add
mov
mov
fldlg2
add
cmp
out
jns
push
pop
call
clc
mov
addr16
repnz
fcmovnbe
xchg
orl
sbb
aas
das
xor
repnz
adc
inc
mov
in
aaa
ret
sbb
out
arpl
stos
and
dec
out
push
cmp
mov
int3
xchg
xor
sbb
pop
sbb
int
mov
jns
lods
lret
mov
push
mov
jge
ds
ljmp
mov
inc
jns
jle
jle
sahf
add
jne
and
mov
sub
lods
add
mov
pop
push
xchg
sbb
cmp
out
mov
in
dec
xchg
sub
jo
int
lds
fld
repz
fiaddl
mov
mov
or
dec
adc
in
stos
xchg
xor
dec
ficompl
int3
add
pop
aaa
daa
mov
cmc
test
and
push
adc
fsubrs
mov
pop
dec
out
gs
pop
fwait
jns
sbb
adc
lcall
cmpsl
adc
testl
mov
jns
add
sarl
mov
push
pop
xor
arpl
movb
int3
sub
shlb
xchg
dec
bound
and
addr16
mov
mov
sbb
gs
lahf
sub
fwait
mov
popf
pushf
popa
fwait
jns
scas
test
insl
adc
sub
pop
pand
insb
xor
out
mov
jg
loopne
fstl
pop
pop
inc
add
pop
arpl
repz
pop
inc
xor
cwtl
push
xchg
mov
and
xchg
mov
mov
fnclex
jae
sub
and
in
andb
mov
roll
aad
clc
inc
xor
jmp
pop
incb
add
add
mov
jns
movsb
inc
ror
xchg
or
scas
xor
shl
dec
nop
test
jae
shl
jno
jae
sar
adc
sbb
arpl
ljmp
or
fs
das
push
lret
xchg
sarb
addr16
lods
or
mov
sbb
pop
push
andb
pop
mov
outsl
pop
lea
xor
xchg
mov
add
and
es
jp
lods
lock
push
mov
xchg
cld
mov
imul
loop
into
in
mov
mov
or
popa
je
xor
xchg
sahf
ja
ret
mov
popf
pop
add
in
aaa
rcrl
or
dec
cmp
inc
cmp
ret
inc
test
inc
xrelease
movsl
inc
fwait
jb
add
xchg
je
mov
and
icebp
cwtl
fprem1
ljmp
sub
push
incb
adc
jno
mov
sbb
out
sahf
jno
into
divl
or
mov
jl
cs
dec
inc
divb
mov
fnsave
shrb
cmp
mov
stos
push
jmp
loopne
mov
lods
jmp
call
pop
in
mov
rcrl
bound
xorl
add
mov
add
lods
movsb
fwait
sub
and
fnstsw
sti
push
sbb
fwait
das
addr16
mov
pushf
mulps
lcall
fwait
mov
cmp
pusha
dec
movsl
xchg
stc
fldt
in
xchg
ss
and
inc
jne
loopne
or
out
mov
mov
sbb
cmp
dec
and
mov
inc
mov
fbld
xchg
jp
popa
js,pn
shr
lods
pop
fldenv
test
mov
adc
out
and
or
fcomps
gs
sbb
daa
rcll
lods
loope
cmp
stos
addr16
lods
pop
lods
mov
insl
movsl
jbe
and
mov
in
fucomi
or
subl
test
adc
std
aam
push
fstpl
popa
out
xchg
popf
adcl
out
jmp
into
fimuls
jl
je
fadd
lods
insb
push
pop
pop
mov
xchg
das
xchg
add
adc
cs
les
sub
insl
aad
or
dec
nop
cmpsl
mov
div
xchg
add
push
xor
enter
pop
bnd
jmp
jb
or
push
mov
lcall
sub
adc
outsl
in
cmpsb
movsl
sub
stos
xchg
test
mov
xchg
xor
inc
push
pop
lock
roll
adc
jb
adc
mov
pop
inc
sbb
movsl
sahf
clc
int3
jmp
jne
mov
gs
nop
xchg
lock
nop
ret
out
jmp
imul
jp
fs
stos
mov
push
xor
jbe
jmp
xchg
sub
enter
jbe
ds
inc
fwait
sbb
fisttpl
add
inc
repz
pusha
ja
arpl
je
pop
int3
imul
jg
jl
sbb
jp
cli
jno
js
out
and
mov
int3
aam
or
fwait
pusha
jne
call
adcb
pop
jo
lret
stos
popf
jg
pop
sub
xchg
push
or
rcrl
inc
out
push
add
pop
sub
push
adc
out
je
movsb
ret
mov
add
or
adc
cld
shlb
jge
dec
jg
pop
out
movsb
push
shrb
imul
loopne
add
sbb
push
dec
jmp
or
enter
mov
add
insb
icebp
in
dec
inc
out
xor
fwait
lret
push
or
fdivs
adc
inc
xor
xchg
sahf
rolb
push
dec
mov
adc
mov
aad
loopne
cmpsb
int3
push
std
cmp
lret
out
out
mov
out
push
in
or
in
aas
xchg
cmp
jno
fidivrl
cld
add
pop
xchg
movsb
pop
aas
jno
push
sbb
and
xor
sub
popf
cmpsb
movsb
jb
xlat
scas
cmp
iret
dec
outsb
out
fidivrs
xlat
push
aad
push
les
mov
stos
data16
ss
mov
sub
daa
mov
imul
jo
xchg
sbb
lret
orb
loope
mov
push
jns
lea
jl
fnstenv
inc
mov
into
pop
mov
mov
pop
lret
arpl
addr16
cmp
push
cmp
sti
int3
fistl
sub
out
lret
sub
pushf
cwtl
in
push
insl
fwait
loope
pop
xor
inc
bound
in
test
jge
dec
jbe
rol
lret
fisttpl
jno
aad
sbb
scas
mov
lret
push
lods
imul
inc
add
pushf
jl
push
aaa
pop
std
div
push
jmp
test
and
jo
cld
imul
ud1
divl
and
scas
aad
add
xor
aad
rorb
pop
pop
in
sarl
fsubl
dec
inc
mov
xchg
testl
pop
push
inc
sti
mov
in
sub
mov
jae
pop
xchg
js
movsb
jno
pop
and
dec
mov
test
adc
ud2
or
or
dec
rolb
test
idivb
or
pop
mov
in
in
jae
xor
inc
pop
in
inc
int3
pop
lahf
mov
or
xorb
inc
jnp
sti
sub
clc
stos
xchg
pop
scas
or
imul
add
pop
iret
or
mov
push
mov
inc
mov
xchg
gs
jo
clc
inc
daa
cmp
ja
inc
adc
xchg
or
pop
popf
fidivrs
pop
fadds
adc
lock
cltd
js
pop
push
cli
nop
rolb
rol
fwait
push
adc
jbe
rclb
stos
mov
cltd
mov
je
jo
jnp
scas
cltd
sarb
xchg
sub
cmp
pusha
jmp
cmp
xor
and
cmp
sti
xchg
imul
xchg
adc
mov
cmc
shll
mov
jns
cmpsl
sub
insl
lret
inc
sbb
sub
dec
mov
jl
xorl
pop
hlt
and
lods
xchg
ret
lret
sub
push
xor
push
ljmp
repnz
ret
inc
fldenv
stos
cmp
adc
or
add
das
ret
pop
jo
jne
aas
std
lahf
into
push
jp
mov
insb
adc
in
out
sarb
xchg
adc
aad
lock
push
aaa
push
pop
and
dec
out
sub
popf
clc
mov
shll
mov
sub
cmp
pushf
mov
push
lock
idivb
pop
inc
cmpsb
pop
xlat
xorl
cmp
data16
sahf
mov
test
xor
xor
outsl
mov
repz
or
mov
mov
ja
enter
insb
mov
nop
aad
push
mov
into
mov
sub
or
in
add
aas
movsb
sub
mov
mov
ljmp
out
stos
mov
cmp
sahf
cwtl
and
adc
cmp
push
xchg
push
outsl
sub
pop
scas
sub
fsubr
push
mov
cmp
jmp
mov
rolb
cmpsl
or
ljmp
div
cmp
cmp
call
mov
cmp
push
push
sub
lea
popf
inc
pop
cmp
dec
and
sub
mov
sarl
push
mov
mov
and
inc
int3
cmpsb
std
es
sbb
sub
fiadds
pop
add
mov
pop
mov
idivl
rcll
cmp
dec
in
or
or
add
inc
fs
icebp
push
xchg
add
jge
nop
lahf
fistpl
gs
inc
add
pop
xor
cld
push
loopne
and
int
push
call
push
scas
push
add
iret
sub
adc
loop
std
push
aad
inc
cmp
dec
fisubl
pop
in
inc
imul
lahf
insb
or
mov
adcl
pop
jnp
inc
lret
jb
fsts
rcrb
inc
shll
gs
mov
adc
jge
push
mov
movsb
je
out
sub
sub
inc
ja
sub
imul
or
jnp
inc
cmp
enter
lret
jo
loopne
fs
xchg
push
push
push
enter
movsb
and
lret
lock
sub
sbb
scas
ja
popf
pop
fs
dec
dec
lcall
repz
int3
hlt
mov
xchg
push
cld
out
dec
add
jb
push
xor
call
cwtl
repz
fistpll
sbb
mov
mov
jno
sahf
aam
scas
div
xor
sbb
or
pop
xchg
ror
and
je
rcl
pop
and
outsb
jo
pop
xor
pop
mov
mov
cmpsb
jb
dec
mov
nop
lock
xchg
std
mov
add
push
rcrb
lea
push
mov
lods
addr16
cmp
aas
dec
or
les
inc
shlb
xchg
ds
into
int3
mov
insb
fwait
mov
stc
push
mov
mov
cli
lret
sahf
sarl
push
pop
test
or
push
mov
cld
jp
add
jbe
cmp
xor
jle
dec
mov
adc
push
and
sub
outsb
pop
rolb
mov
movsl
ret
mov
pop
popa
clc
pop
or
dec
fdivr
sbb
inc
mov
faddl
pushf
mov
fcompl
test
insl
jae
jb
out
test
mov
mov
insb
shrl
dec
and
hlt
stos
cmp
mov
loop
ja
mov
or
lock
mov
outsl
in
out
stc
movb
xchg
xchg
xor
pop
mov
insb
mov
ds
jnp
pop
push
cltd
mov
push
lods
bound
cltd
mov
pop
xor
int
fwait
cmp
push
movsl
add
cmp
dec
dec
pop
lds
push
sub
adc
sub
inc
call
dec
mov
lods
mov
in
sbb
pop
push
jnp
nop
pop
vprotd
not
enter
pop
mov
pushaw
cwtl
push
in
add
add
inc
mov
jne
movsl
inc
pop
rcrl
iret
pop
adc
or
insb
mov
aam
xchg
or
out
in
xchg
push
mov
test
sbb
or
out
lods
mov
mov
mull
lods
dec
int
imul
sbb
dec
cmpsl
mov
xor
scas
call
dec
or
shlb
mov
scas
jge
sbb
adc
fiaddl
pop
int
mov
mov
hlt
cwtl
push
stc
xchg
mov
ljmp
daa
je
adc
xor
mov
je
mov
sub
pop
dec
and
sub
icebp
imulb
lock
dec
sub
gs
sbb
in
fdivp
in
outsb
mov
aaa
add
pop
jl
inc
xchg
mov
xchg
dec
imul
sbb
je
lcall
lahf
push
xor
cltd
sbb
loope
pop
shrb
gs
mov
cmpsb
and
daa
or
dec
or
xlat
mov
shlb
les
push
popa
addr16
or
fcomi
cmp
xchg
or
cltd
inc
movsl
and
adc
inc
mov
out
test
xchg
int3
adc
adc
clc
jmp
push
sub
data16
lea
push
jg
mov
ljmp
or
xorb
inc
xchg
imul
lea
insl
push
shl
and
pop
xchg
pushf
data16
adc
mov
cld
dec
adc
pop
rol
ljmp
iret
sbb
and
ret
out
leave
stos
bound
jg
maxps
jle
or
fs
push
cmp
filds
mov
addb
xor
or
jle
ja
fsts
int3
testb
pusha
cld
or
fstl
jle
adc
jl
push
cli
out
jge
adcb
xchg
cmp
adc
xchg
lret
sbb
dec
into
int3
imulb
jne
mov
push
or
mov
pop
aad
test
push
inc
xchg
inc
in
inc
inc
fnstsw
push
xlat
sub
lock
aam
arpl
sub
enter
fwait
xchg
mov
mov
jl
sub
jg
jne
mov
push
rolb
pushf
xchg
sub
int3
sub
inc
sbb
test
mov
adc
shrb
in
inc
test
test
xor
lcall
add
ror
mov
imul
lds
jbe
test
les
cmc
mov
lods
cltd
sub
decb
insb
std
mov
and
mov
dec
push
mov
int3
into
in
jns
loopne
lods
into
pop
or
jle
insb
cltd
ret
test
fldt
out
mov
add
xorb
and
sub
lret
roll
jl
outsl
imul
push
addr16
jo
mov
or
xchg
push
pop
aas
test
xor
iret
loop
lods
or
sub
mov
loopne
gs
inc
push
add
mov
lahf
loopne
dec
xchg
jg
repnz
pop
sub
jbe
adc
cmpsl
jno
push
jnp
jnp
dec
sub
mov
outsb
jl
or
dec
add
arpl
sbb
push
or
lds
dec
mov
pop
loope
mov
nop
mov
sub
inc
xchg
ljmp
jae
loopne
loopne
fidivrs
ds
mov
icebp
mov
es
aad
psllq
jmp
aaa
mov
jb
shlb
in
mov
fsubrl
cmpsb
je
pop
sahf
std
or
roll
sub
gs
test
push
adc
imul
into
jp
fldt
cmc
mov
add
repz
push
mov
mov
mov
inc
push
cmp
js
out
es
jns
xor
inc
mov
push
in
xchg
or
rol
mov
inc
scas
fists
in
mov
mov
push
mov
adc
pop
lret
inc
adc
dec
icebp
pop
add
stc
xchg
xchg
call
sub
in
and
fdivl
sbb
jl
lea
jnp
add
jnp
fwait
mov
aaa
loopne
aas
stos
gs
sbb
dec
cmpb
push
into
xchg
arpl
mov
repnz
or
cs
cmp
inc
std
ret
pop
roll
pop
xor
movsb
lcall
dec
sarl
inc
jg
testl
out
adc
xchg
sti
test
rcrb
lds
loop
dec
rcll
dec
dec
in
pop
arpl
es
ljmp
mov
fwait
loopne
cmp
lcall
mov
xor
fimuls
and
ret
xor
sbb
fldt
sbb
lret
lret
pop
jmp
pop
pop
mov
mov
xchg
sbb
mov
push
outsb
clc
jne
jge
jns
sub
sub
mov
adc
out
sub
add
cmp
and
jb
seto
loopne
pop
aam
fstpt
inc
rcrb
imul
mov
and
loopne
jmp
fldcw
mov
xor
ja
push
cmp
mov
xchg
dec
sub
pop
jbe
cmp
xchg
data16
inc
lret
xor
mov
clc
push
les
lds
sub
adc
shll
mov
jno
stos
sub
push
popa
ret
shl
fidivl
add
loope
fmull
xor
imul
or
loopne
push
xchg
fidivl
nop
dec
in
outsb
sarb
mov
ficompl
xor
adc
fwait
push
or
inc
push
dec
jp
ret
push
je
add
cmpsl
or
movsb
pusha
cld
pushl
leave
pop
fstps
push
out
add
test
inc
and
arpl
in
std
mov
push
cli
test
cmp
sbb
es
xchg
fsub
into
dec
adc
pop
js
dec
pop
cmp
int3
jg
inc
xchg
clc
jo
nop
push
cmpb
push
pushf
leave
fisubrs
out
mov
xchg
inc
flds
jmp
dec
rcll
mov
sbb
mov
mov
test
and
cmpsl
addl
sbb
repz
pop
push
pushw
leave
inc
sbb
pop
jmp
or
ret
jb
jg
arpl
mov
mov
ljmp
icebp
je
or
jge
movsb
mov
cs
mov
xchg
out
mov
xlat
in
in
lods
icebp
xchg
jg
shr
pushf
xor
inc
sub
cmp
out
xchg
les
push
sub
xchg
and
adc
arpl
cmc
ljmp
popa
icebp
xor
scas
cmc
mov
inc
ljmp
and
js
ljmp
enter
mov
xlat
jge,pt
pop
loopne
and
mov
scas
sub
test
fwait
cmp
inc
pop
add
loope
mov
push
mov
add
lret
das
fsts
adc
lahf
addr16
cmp
inc
push
or
jno
jb
mov
pop
imul
shl
fisubl
rclb
jle
push
imull
or
mov
enter
xchg
mov
dec
push
fisubrl
fmul
mov
adc
push
ja
add
or
mov
pop
dec
and
xchg
xor
enter
fiaddl
xchg
mov
jmp
jl
je
fs
xor
and
lds
jg
push
insb
addr16
gs
pop
mov
idivl
sbb
out
sub
into
xchg
pop
mov
or
push
xchg
cs
or
outsb
mov
out
push
push
push
fs
gs
jo
sahf
xchg
cmovge
mov
xor
je
popa
xchg
mov
and
insl
mov
mov
xor
xlat
insl
sarl
xchg
cmp
outsl
aad
in
jecxz
xchg
les
xchg
int3
jae
jg
into
jb
mov
out
in
repnz
int3
cld
jg
lret
and
jp
sahf
lcall
mov
mov
pop
dec
scas
jns
and
add
test
lahf
into
xchg
iret
andl
xor
adc
fwait
insb
mov
sti
movsl
imul
lea
les
xor
fwait
mov
es
pushf
repz
inc
in
fbstp
lds
jle
mov
adc
loopne
cld
pmaddwd
fnsave
bound
popa
orl
fistl
pop
imul
push
push
mov
cli
inc
xchg
sbb
repz
test
mov
mov
sub
fmuls
mov
loopne
push
fsubr
push
mov
push
pop
mov
fdivs
test
xor
sahf
push
cmp
lds
adc
xor
add
out
pop
das
insb
jmp
push
adc
insb
push
out
jmp
and
jmp
out
shl
push
popa
movsl
sbb
sarb
jno
push
dec
nop
mov
shll
rolb
add
iret
mov
adc
cld
adc
sbb
cs
sub
sbb
xchg
lods
in
or
jg
mov
mov
mov
inc
mov
bound
into
push
das
jmp
xlat
out
add
push
and
push
pushf
jp
inc
sub
out
cmp
cltd
lods
sbb
ret
addr16
popa
es
adc
mov
sbb
aam
shlb
movsb
dec
loope
mov
cmpsb
stos
call
loop
loope
xchg
add
mov
subl
cmp
in
mov
mov
mov
ds
rorb
mov
adc
dec
mov
dec
cmp
adc
cmp
and
stos
inc
jno
adc
dec
ret
lret
pop
adcl
dec
xchg
sbb
sbb
mov
adc
icebp
pop
mov
add
iret
mov
inc
add
mov
mov
ds
pop
mov
inc
hlt
in
stos
jo
jge
sbb
sbb
mov
mov
shlb
hlt
mov
xor
dec
xchg
and
mov
add
adc
adc
xchg
pop
pop
adc
jbe
cltd
xor
test
mov
pusha
pushf
fmuls
into
movsb
repz
sub
and
mov
int3
icebp
scas
dec
negb
xchg
insl
lds
mov
mov
mov
jl
xor
xchg
stc
imul
cmpsb
and
xchg
or
sti
jmp
ss
frstor
add
xchg
push
pop
out
pop
pop
inc
cltd
adc
pop
xchg
xchg
add
pop
push
xchg
test
xchg
or
jl
pop
sbb
pop
mov
shlb
dec
push
add
mov
fiadds
cmp
repz
pop
dec
iret
sub
cmp
mov
pop
pop
and
sbb
sbb
hlt
jmp
fbld
imul
mov
mov
gs
and
adc
jge
outsb
mov
lods
cmp
push
mov
out
adc
sub
push
scas
inc
xchg
scas
pop
std
mov
movsb
repz
cltd
les
out
pop
shrb
and
bound
push
inc
lcall
inc
add
xchg
or
dec
lahf
mov
xchg
leave
mov
mov
lods
mov
push
jl
lods
mov
sub
cld
xchg
sarb
and
iret
ret
mov
scas
in
testl
and
mov
and
mov
sbb
dec
or
or
xor
lods
fldcw
pusha
jae
mov
cmc
sub
in
rol
cmpsb
stc
add
or
mov
fxch
mov
push
cmpsb
mov
test
std
cmp
int3
sub
jbe
scas
sti
pop
shrl
js
inc
subl
push
cwtl
jns
cmpsb
cmp
mov
aas
stos
sbb
dec
push
cmp
mov
insb
cmp
mov
pop
mov
xchg
data16
stc
xor
cmp
out
daa
and
push
shl
std
cs
fs
mov
mov
lcall
orl
xor
add
aas
mov
clc
mov
adc
rcl
jno
les
sub
sub
mov
xor
push
out
imul
roll
push
and
inc
dec
or
les
movsl
add
repnz
in
loope
pop
inc
lret
ret
lret
enter
imul
push
dec
imul
pop
dec
inc
inc
in
mov
jnp
fidivrl
add
pop
mov
pop
lcall
pop
test
mov
sbb
jne
adc
and
sbbl
lret
test
fsub
inc
fwait
cwtl
mov
jg
push
out
out
icebp
fucomi
lods
idivl
adc
pop
jb
leave
out
push
xchg
mov
and
and
out
mov
jle
inc
mov
shll
pusha
out
mov
pop
out
mov
imul
cmp
rolb
mov
addr16
out
lret
cmp
pop
mov
sub
jmp
sub
adc
addr16
jo
xor
in
mov
gs
push
push
jmp
mov
push
ficompl
je
mov
jae
sbb
hlt
jo
notb
sub
cmp
js
mov
mov
sub
fchs
lods
adc
add
lds
out
fistpl
bound
xor
icebp
loop
xlat
mov
imul
inc
out
test
inc
mov
shll
cmp
add
xorl
xor
int3
pop
add
push
xchg
fistpll
jnp
movsb
sub
sahf
mov
test
hlt
ret
cmp
adc
pop
mull
fsubp
subb
les
cmc
aaa
cmp
scas
push
addb
mov
mov
xchg
lret
sti
mov
fcmove
in
rolb
mov
fs
test
jo
xlat
stc
xchg
sbb
imul
sahf
mov
add
aas
push
xchg
inc
sub
xchg
mov
jo
push
inc
fst
sbb
pop
in
xor
or
scas
dec
imul
jg
call
inc
mov
xor
std
lds
sbb
push
and
pop
dec
mov
nop
lahf
fwait
in
jns
pusha
add
test
xor
and
aaa
mov
mull
dec
outsb
aas
push
adc
sbb
adc
inc
rcr
lods
daa
mov
push
pusha
incb
or
lods
pop
imul
add
js
dec
dec
push
adcl
notb
arpl
ljmp
cwtl
jmp
testl
into
sub
cwtl
lret
ja
cmp
mov
push
js
dec
out
std
jmp
aam
fs
jbe
repz
sub
ja
lcall
jle
daa
sbb
mov
mov
dec
sahf
xchg
fwait
repnz
mov
xor
addb
xor
sbb
adc
stos
div
sti
imull
dec
sti
or
mov
fwait
pushf
lret
xor
mov
shrl
ss
test
stos
in
jnp
fmull
mov
js
cwtl
pop
cld
or
xchg
and
mov
adc
jne
dec
jo
inc
pusha
mov
adc
sub
xchg
xorb
adc
orl
outsb
jg
or
ja
insl
jp
outsl
adc
sub
add
cmpb
xchg
aad
add
int
cmc
push
imul
loop
xchg
imul
or
xor
in
outsl
pop
mov
addr16
pop
adc
sbb
mov
shrl
in
movsb
lret
xor
mov
iret
lea
gs
jo
gs
nop
xchg
inc
sub
pop
cmp
pop
sbb
and
and
cmp
xchg
inc
pop
push
mov
mov
inc
adc
pop
push
ret
mov
mov
stos
pop
and
inc
cltd
or
sub
pop
daa
sbb
gs
pop
mov
ret
int
hlt
xchg
mov
sbb
jb
aam
int
push
xchg
movsb
sbb
xchg
fwait
mov
inc
addr16
mov
pop
cmp
inc
sahf
iret
hlt
nop
js
pop
jns
cltd
testl
mov
fidivl
xchg
xchg
lcall
adcb
hlt
cld
mov
pop
scas
ret
rcr
mov
push
pop
add
jecxz
sub
int3
pop
movsl
sub
lret
push
mov
sub
mov
int3
rorl
lret
add
cli
pop
push
add
popf
enter
mov
into
fwait
mov
jmp
aad
cmpsl
jnp
mov
loopne
pop
mov
inc
lcall
bound
add
xchg
dec
mov
fwait
adc
add
das
inc
jne
aaa
cld
cmp
leave
sbb
and
push
lock
sbb
sahf
mov
pop
xchg
cmp
adc
cmp
mov
test
mov
xor
pusha
in
pushf
popf
or
or
test
popa
mov
mov
xor
mov
push
sti
push
into
pop
cmpsb
xor
cmc
xor
fwait
iret
xchg
mov
push
scas
insb
mov
sbb
jg
mov
jns
inc
rorb
nop
lret
jmp
pop
sarb
aad
push
shr
push
cmc
mov
add
ss
inc
aaa
push
int3
mov
xor
sbb
cwtl
movsb
adc
add
sub
xor
ret
xor
push
iret
xchg
out
mov
inc
pop
in
das
xchg
mov
aad
mov
aad
mov
push
int3
lret
gs
mov
cwtl
test
push
cmp
mov
xchg
int3
nop
inc
data16
mov
xchg
sub
stc
outsl
jno
ret
movhlps
andb
dec
int
mov
popf
iret
in
addr16
ret
sbb
lcall
pop
cmp
mov
aas
fcmove
loop
jle
or
xchg
jl
out
test
dec
adc
bound
cmp
adc
ret
aas
xchg
jnp
mov
bound
cmp
jg
xchg
cmp
or
inc
jecxz
add
push
shl
xchg
push
pushf
movsl
insb
shr
nop
dec
outsl
lods
inc
push
mov
jl
out
dec
mov
push
dec
sbb
sub
scas
call
int3
dec
mov
cmpsl
add
hlt
test
popa
mov
sbb
mov
jecxz
jno
nop
add
xchg
sbb
jne
clc
outsl
gs
orl
mov
mov
dec
dec
cmp
mov
pop
ljmp
jecxz
or
add
xor
jle
xchg
push
ds
push
adc
xchg
int3
mov
dec
or
push
xor
cmp
frstor
jo
test
xchg
jg
mov
fs
popf
fsubrl
inc
jbe
mov
xchg
or
scas
sub
xor
ja
dec
pop
or
or
mov
jg
nop
mov
cmc
add
mov
pop
into
mov
jae
movsb
incl
loope
cmp
jl
mov
mov
out
dec
pop
test
orb
imul
dec
lea
and
rclb
jno
add
lret
in
pop
ret
mov
xor
mov
shll
xchg
adc
test
cltd
jns
dec
popf
push
dec
jns
ds
jb
movups
cld
daa
into
xor
add
lahf
jmp
sbb
mov
add
adc
icebp
outsb
pushf
lahf
repz
stos
or
mov
add
inc
js
sub
cwtl
sbb
sbb
pusha
mov
imul
aad
imul
xorl
lods
push
loope
inc
arpl
jecxz
daa
pop
xchg
sub
xlat
scas
les
and
push
adc
jae
ffreep
ret
ds
dec
cmp
xor
sbb
scas
outsl
or
inc
imul
cmpsl
fnstsw
imul
xchg
lahf
imul
add
jo
or
pusha
loop
adc
pop
xchg
push
bound
lock
lahf
mov
in
sub
stc
ret
ficoms
mov
hlt
imul
mov
and
jg
insb
mov
adc
push
std
push
arpl
mov
sub
filds
cmp
jge
cmp
inc
in
repnz
movsb
and
adc
jne
mov
sub
or
fistl
outsb
and
sbb
or
push
add
imul
cmp
push
or
es
addr16
shl
leave
jae
cmp
jmp
push
add
imul
mov
mov
sbb
or
mov
sub
les
push
imul
inc
mov
mov
add
mov
test
pop
in
psraw
add
adc
add
xchg
pushf
cmpb
enter
inc
mov
xchg
in
push
xchg
xchg
sbb
add
jno
popf
xor
mov
cmpsl
add
jg
add
ss
les
jp
dec
adc
jge
and
xor
sub
cmc
xor
xchg
dec
add
add
div
cmp
stos
dec
xor
mov
test
aad
ss
divl
clc
inc
jnp
and
stos
mov
insb
popf
cmp
lret
imul
out
add
jge
lcall
orl
dec
in
mov
icebp
or
pop
jge
push
push
jnp
ret
scas
pop
pop
pop
les
pop
push
mov
pop
sbb
dec
dec
ss
or
push
aam
dec
sub
xchg
sbb
ret
call
std
clc
out
mov
xchg
in
pop
test
aad
ficoms
test
lcall
or
sub
hlt
das
lret
adc
pop
outsl
jbe
sbb
xor
mov
nop
dec
icebp
pop
mov
cmp
mov
stc
mov
lods
je
dec
mov
mov
mov
mov
jbe
cmp
xorl
sub
shrl
insb
push
xchg
fcmovnu
pop
fwait
fs
movsb
insb
hlt
or
std
fmull
insl
mov
mov
pop
mov
jno
aam
inc
and
lods
scas
rolb
movsb
addl
dec
add
aas
lret
dec
ljmp
stc
outsl
test
inc
mov
mov
push
mov
and
in
dec
bound
and
or
out
push
add
mov
cmp
aaa
cmp
out
or
popf
shrl
cmpsl
pop
xchg
fs
imul
push
ret
xor
insb
or
and
push
xchg
mov
subl
test
popf
jne
push
xchg
xchg
adc
mov
ss
nop
inc
mov
push
cmpl
fadd
shl
ds
cmp
and
push
adc
aad
or
insl
xorb
mov
incl
fnstenv
and
mov
aas
push
std
cmp
dec
adc
dec
sbb
data16
jbe
or
jmp
lds
repz
lds
mov
push
fadds
addl
loop
fimull
push
xor
mul
xchg
jae
orl
insl
and
xchg
shlb
adc
jg
lea
fnstsw
rcrb
cmp
repnz
jmp
and
cmpsl
hlt
mov
aas
adc
out
sbb
mov
mov
jbe
add
shrb
xchg
push
gs
xor
in
out
add
ja
adc
mov
scas
les
lret
int
mov
in
test
ljmp
imul
mov
mov
pop
pop
sbb
xlat
push
adc
pop
cmp
xchg
xchg
fildll
movsb
in
pop
out
js
stc
pop
js
fisttps
fcomps
fldt
pop
pop
in
lock
outsb
cmpb
cmp
inc
popf
rcl
outsb
les
dec
cwtl
enter
mov
xchg
xor
cmpsl
or
stc
lods
add
sbb
pop
cld
jecxz
cmpsb
pop
into
pop
jae
mov
dec
inc
adc
mov
sub
xchg
gs
jbe
das
inc
jo
shl
jbe
cmp
mov
xchg
cli
imul
cmp
jbe
call
insl
pop
cmc
jo
or
jnp
add
pop
fstpt
in
and
in
xchg
out
dec
lret
dec
push
adc
idivb
jecxz,pt
imul
test
push
ss
push
add
imul
jg
ljmp
fwait
punpckhwd
popa
or
cltd
dec
sbb
pop
xchg
jb
shll
lcall
fiaddl
jecxz
dec
mov
das
mov
arpl
lahf
xchg
in
rcrl
pop
push
outsb
dec
pop
fistl
or
inc
test
push
outsl
sti
mov
lods
scas
or
das
mov
repz
xor
sbb
in
pop
loopne
inc
jecxz
lahf
sbb
test
jl
aas
loope
pop
call
ret
sbb
sbb
jbe
repnz
jp
pandn
adc
ret
int3
gs
adcb
sarb
aaa
dec
lods
or
imul
lea
jl,pn
gs
aad
lods
popf
add
loop
shrb
mov
inc
loope
jae
cmpsl
cmpsb
push
scas
call
cmp
pop
in
adc
cs
sub
add
fs
fdivrl
outsl
subb
jg
jge
mov
sahf
and
xlat
or
sarl
mov
jmp
sbb
stos
xchg
data16
xor
mov
dec
mov
into
imul
shll
push
pop
inc
mov
adc
add
adc
test
lds
ss
aad
out
pusha
inc
jg
add
sbbl
adc
cltd
jne
jae
sbb
dec
fmuls
and
push
cld
int3
pop
sti
jbe
enter
pop
cwtl
jmp
mov
enter
cwtl
insl
lods
mov
jecxz
cmp
fiadds
add
in
cmp
or
bound
dec
js
subl
inc
cmp
inc
outsl
cltd
lcall
mov
int
xor
and
negb
ja
sbb
mov
cmp
and
hlt
or
data16
push
or
mov
mov
mov
cmp
sti
movsl
in
cmp
sbb
nop
cwtl
mov
sbb
fstl
fdivr
jae
sub
jle
mov
mov
mov
fdivrs
jno
xchg
inc
sub
mov
adcl
jo
std
in
aad
push
push
enter
iret
out
sub
fdivs
add
sub
dec
jl
js
rclb
sbb
loop
push
fstpl
or
sahf
mov
xchg
xor
testb
scas
lock
lret
lret
jbe
sbbl
sbb
push
aaa
dec
jno
iret
mov
in
aam
push
xchg
jge
fbld
jp
jns
fldt
dec
mov
sub
push
and
cmpsl
pop
nop
insl
clc
outsl
cmp
mov
sbb
in
mov
nop
sub
repnz
cltd
mov
insb
xchg
xchg
add
shld
in
lods
mov
xchg
in
incb
mov
outsb
cmp
hlt
or
jbe
dec
or
sbb
or
ljmp
mov
push
xor
subl
call
das
pusha
and
ficoms
and
mov
xchg
xchg
andb
mov
jae
fdivs
popf
dec
xor
popa
insb
jecxz
loopne
add
scas
lds
leave
and
arpl
pop
adc
icebp
lret
push
arpl
mov
pop
movsl
cmp
pop
sub
push
or
cld
xchg
rcrl
movsl
jno
mov
mov
orb
adc
adc
pop
mov
cmpsl
inc
mov
stc
add
outsl
xchg
dec
inc
addr16
inc
dec
cld
popf
nop
mov
mov
lea
mov
enter
jb
iret
das
xor
cmp
xor
out
adc
loopne
lret
mov
aaa
test
push
insl
aas
dec
lahf
aam
push
movsl
mov
repz
xchg
and
mov
aam
push
jmp
pop
pop
out
pop
sub
in
fcmovnbe
iret
mov
mul
cmp
outsb
pop
pop
out
mov
push
xchg
fsts
pusha
call
push
xor
lahf
jl
popl
pop
add
iret
cmp
mov
in
mov
repz
int3
sti
cmp
sub
push
ja
push
pop
jecxz
mov
mov
lret
sarl
or
sbb
sub
shll
bound
scas
or
ss
xor
push
lods
mov
jg
sub
into
fsubrs
movsl
inc
xor
mov
cmp
mov
mov
mov
or
test
pop
cmp
push
adc
shl
cmc
mov
cmp
or
xchg
adc
sbb
pushf
pusha
xchg
shlb
adc
addr16
movsb
call
stos
mov
incb
out
cli
daa
jmp
mov
jbe
into
pop
leave
arpl
xor
inc
ret
pushf
lds
lcall
ja
sbb
hlt
jmp
push
lock
inc
in
add
cmp
les
adcb
repnz
fimuls
popa
icebp
sbb
fsubp
jbe
sbb
inc
subb
and
lods
adc
shlb
subl
xor
arpl
jg
sub
add
cmpsl
inc
insl
fcomps
je
pop
mov
xchg
xchg
scas
fisubs
jns
stc
pop
mov
and
cwtl
fstpt
and
sahf
shll
jecxz
xchg
mov
cmp
push
dec
xchg
popa
or
mov
sub
in
pop
pop
adc
sub
scas
dec
or
fwait
loopne
pop
push
xchg
ja
insb
pop
jg
bound
inc
std
loop
cmp
inc
fsubp
push
mov
jge
das
and
sbb
stos
outsl
jns
mulb
jae
mov
loop
mov
sbb
outsl
repz
cmp
sub
dec
xchg
fisubl
ja
lods
sub
mov
jge
mov
fwait
aas
jb
icebp
pop
or
pop
sub
sub
inc
dec
out
push
fbld
xchg
mov
ret
inc
fsts
sub
pushl
lods
imul
mov
in
xor
dec
cmp
pop
sub
lcall
or
sub
sbb
sti
cld
push
jbe
test
ret
cmp
stos
lea
push
pop
insl
nop
push
adcl
and
dec
in
adc
ljmp
and
cmp
mov
xchg
mov
sub
sub
fstps
lcall
and
xchg
std
shll
cmp
adc
inc
hlt
clc
cmp
inc
pop
outsl
in
adc
cmpl
and
call
mov
xchg
imul
shl
mov
lret
cmp
fistps
pop
mov
pop
mov
sbb
lcall
pop
sbb
dec
inc
add
sbb
xor
or
mov
out
sti
aam
jb
cmp
aas
fldt
add
and
dec
push
cmp
in
test
das
fisubrs
add
lds
out
lahf
shr
xchg
call
or
cmpb
out
mov
insb
pop
xchg
cmpsl
inc
and
ret
jl
popa
cmp
roll
outsl
cmc
testl
arpl
jecxz
add
pop
push
add
gs
jmp
rolb
movb
das
popa
xchg
cwtl
mov
rol
lahf
in
std
shr
dec
add
dec
xor
sbb
mov
cli
pop
xchg
cmp
mov
and
or
adc
sbb
adc
push
inc
fdivp
aam
cmp
ret
push
sbb
pop
xor
ljmp
cld
pop
insb
push
and
cmp
push
pop
or
jge
in
scas
sub
mov
mov
xchg
sbb
jmp
adc
adc
lea
fnstcw
xchg
dec
imul
lret
jbe
je
clc
xchg
dec
xorl
jmp
jg
das
jnp
adc
lahf
xlat
aam
mov
push
rcrl
mov
sbb
je
jbe
pop
loope
cmp
sbb
jbe
xchg
aas
lcall
cwtl
pop
or
js
inc
pop
add
cmp
aas
and
pop
out
sub
leave
jns
pushf
xor
insb
push
and
cs
push
jg
fwait
das
mov
add
decb
test
mov
mov
mov
mov
pop
out
rcr
xchg
ljmp
sub
aad
jb
pop
pop
dec
xchg
icebp
jmp
mov
mov
xor
sbb
stos
call
mov
sbb
sub
cwtl
rolb
ljmp
inc
inc
shl
cmp
lea
jb
jg
dec
pushf
mov
cld
sahf
pop
inc
stos
sub
cmp
cmp
pop
add
dec
mov
sti
dec
and
push
push
stos
xchg
data16
lahf
dec
pop
cmp
fsubrs
jmp
sarb
add
sarb
imul
cmp
and
jle
inc
les
push
into
into
sub
mov
lds
xor
sahf
adc
stos
sub
test
les
shl
inc
mov
sbb
inc
sub
testl
into
shl
jmp
mov
mov
sbb
or
pop
nop
cmp
push
sbbl
pop
fcoml
scas
clc
xor
sbb
cmp
xchg
pop
xor
out
cmp
push
in
dec
nop
or
and
inc
mov
xchg
das
pop
ja
scas
add
mull
xlat
sub
mov
sub
inc
jecxz
xchg
mov
out
bound
cmp
mov
xor
lret
add
insb
adc
sarl
jg
jmp
and
xchg
inc
je
stos
fists
in
stos
imul
test
xchg
lock
fmuls
and
lcall
lods
sub
push
dec
push
loop
fdivl
insl
xor
sub
cmpl
jmp
jbe
aam
call
daa
fcom
aad
jae
cmpsb
jecxz
push
mov
rep
inc
dec
push
cmp
ror
mov
mov
inc
push
pop
adc
mov
mov
nop
pop
mov
call
ljmp
xor
andb
in
loopne
aaa
xor
pusha
cmp
sbb
jecxz
dec
or
jg
and
adc
xchg
js
pushf
mov
inc
ds
add
aad
push
lods
pop
loope
test
sbb
push
jecxz
rclb
push
scas
movsl
cmp
mov
pop
sbb
shll
mov
lea
fists
inc
mov
lea
aas
jmp
mov
cmpb
jno
mov
sahf
inc
pusha
lea
loope
ret
stc
sub
sub
in
ja
pop
push
fcoml
test
mov
dec
push
in
aam
push
cmc
jp
lds
and
sub
cmp
dec
rcrl
out
xor
adc
jno
movsb
fcmovbe
mov
or
xchg
xorl
ds
mov
cwtl
xchg
sub
pop
and
push
out
lcall
sbb
pop
fstl
mov
lock
scas
pop
test
sub
xchg
jle
pop
xor
inc
sub
lods
inc
xchg
pusha
test
jge
jns
cltd
pop
lahf
pop
movsb
out
outsl
in
stc
lds
lret
and
xchg
cmp
mov
cmpsb
rcl
dec
or
and
cmp
imul
xor
pop
push
fst
inc
push
push
cmpsb
cltd
into
dec
jmp
pop
mov
fbstp
mov
js
notb
sub
sub
lock
mov
cmp
loopne
fstpt
cmpsb
pop
ljmp
pop
jb
test
pop
movsb
pop
sbb
test
mov
inc
push
or
xchg
lahf
jnp
push
sbb
xlat
pop
push
lret
jle
xor
aad
jne
add
cmc
shll
jnp
mov
mov
mov
jbe
aam
jno
pop
loopne
int3
xlat
aam
insl
in
roll
inc
pop
es
sbb
mov
and
xor
lock
push
imul
lock
xor
imulb
mov
cmpsb
fdivl
ss
push
mov
mov
mov
mov
ljmp
pop
shll
wrmsr
pop
das
pop
addr16
and
in
xor
daa
push
shr
xor
mov
imul
xor
pop
xor
ds
test
push
or
lret
lods
repnz
movsl
repnz
out
imul
jl
aas
add
lcall
xlat
inc
into
sub
and
stos
push
adc
inc
lahf
and
pushf
push
loop
xor
add
out
mov
call
roll
test
lock
cmp
sub
xchg
inc
roll
mov
std
inc
pop
mov
movb
imul
add
loop
into
in
push
mov
stos
or
dec
jle
out
xchg
stos
cmp
jle
xchg
cmpsl
mov
cmp
pushf
jns
cmp
pop
cld
dec
notb
pop
sub
and
inc
pushf
mov
imul
pop
negl
sti
sarl
xchg
hlt
or
lahf
insl
fprem
fdivp
fnsave
insb
insl
jne
test
adc
repnz
stos
sti
cmp
adc
mov
sarl
sub
lods
inc
mov
xor
pushf
adc
je
adc
adc
mov
sub
mov
push
mov
mov
rol
push
sbb
xchg
sub
fucomp
rcr
pushf
pop
fisubrs
push
movsb
mov
orb
sub
mov
lds
loop
rcrl
popf
cwtl
out
in
cmp
ja
int3
hlt
cmpsb
or
cltd
cmp
ds
or
shll
dec
btc
cmp
aam
adc
jg
jecxz
xlat
lcall
or
lock
cmp
jge
movsb
std
xor
in
int
outsl
dec
sub
insb
mov
cmp
push
mov
cmp
lea
lods
jg
push
popf
and
into
negl
out
cwtl
push
call
sub
popf
lret
fst
gs
mov
xorl
pop
or
aam
xchg
adc
jg
scas
pop
cmp
std
inc
outsl
or
stc
xor
lock
adc
jo
aaa
pop
pop
push
lods
mov
mov
mov
shrb
jae
mov
jmp
mov
int
push
and
xor
les
je
ret
xor
push
xchg
ja
scas
inc
nop
cmpsl
mov
mov
xchg
fiaddl
shl
cltd
out
in
repnz
les
dec
outsl
scas
mov
push
push
mov
and
xor
jmp
scas
cwtl
push
std
push
mov
dec
cmp
xchg
addr16
movl
push
xlat
repnz
mov
mov
push
or
jne
push
jb
mov
jmp
out
and
cmp
pop
ret
jae
jno
sbb
hlt
and
dec
ljmp
test
cs
lcall
sahf
inc
sub
adc
dec
fisttpl
testl
mov
mov
dec
insl
ljmp
or
cmp
cmp
xorb
jbe
mov
mov
jbe
inc
sub
pop
or
add
test
jmp
xchg
bound
pop
lock
dec
jbe
mov
sub
add
pop
mov
stos
mov
enter
inc
fwait
repnz
ret
jmp
sbb
sbb
dec
jle
push
pop
mov
int
adc
mov
ss
out
dec
jo
ljmp
pop
cltd
cmpl
out
lods
enter
adc
mov
scas
inc
aam
dec
movb
xchg
fwait
inc
ljmp
jle
loop
mov
mov
mov
ss
sbb
call
pop
or
stos
xchg
and
mov
loope
xchg
dec
int
cmp
loopne
ret
and
mov
and
mov
pop
out
inc
cmc
push
shlb
push
push
lock
push
jg
lods
dec
sbb
aaa
and
jns
cld
sti
loope
into
sub
push
pop
mov
es
jb
inc
mov
jle
int3
adc
loop
push
mov
das
bound
std
in
mov
sub
or
inc
mov
inc
jp
push
nop
xchg
ret
adc
loop
push
sti
mov
sbb
jbe
or
orl
cmp
xchg
xchg
add
loopne
jl
pop
and
popf
jne
cs
add
mov
inc
das
not
sub
mov
mov
jne
add
cld
aam
jg
sahf
push
or
das
int
mov
stos
mov
mov
and
fadds
or
cmp
mov
rolb
inc
out
add
imul
xlat
dec
outsb
dec
lahf
fsts
cmp
mov
or
xlat
mov
mov
inc
cmpb
aas
sub
dec
in
and
mov
ja
pop
jle
cwtl
in
cmp
xor
inc
mov
cmp
mov
leave
in
jo
jp
sbb
xchg
jo
sahf
lret
int3
or
xchg
rorl
fs
sub
loopne
out
lea
sbb
outsl
mov
loope
inc
repz
arpl
dec
cmpsb
mov
lea
push
cwtl
cmp
pop
out
cmc
cmp
push
fimuls
and
pop
pop
in
ja
jns
push
mov
mov
add
sbb
dec
ja
sub
fildll
out
mov
stos
std
pop
jns
fldenv
test
es
repz
popf
mov
or
repz
xor
inc
xchg
jmp
cli
mov
mov
inc
pusha
cmp
bound
or
icebp
inc
mov
in
sub
mov
cmpsl
or
mov
enter
jb
fidivrl
sbb
sub
inc
sub
xlat
repz
mov
std
rol
push
setp
pop
cwtl
mov
imul
lea
sbb
lods
xchg
pop
movsb
xor
pusha
pushf
add
mov
cmp
nop
iret
lahf
or
xor
and
into
imul
jecxz
pop
pmulhuw
or
push
adc
in
test
sbb
and
roll
aam
fdiv
xchg
sbb
jg
mov
out
inc
dec
rcll
arpl
xchg
pop
ljmp
outsl
clc
out
cld
inc
into
or
sub
jge
scas
sbb
jmp
mov
sub
jbe
enter
subl
sar
mov
nop
jno
test
aam
fcmovnbe
push
bound
rcr
jmp
push
test
inc
jns
pop
mov
mov
std
xlat
fisubl
test
fucom
xchg
and
out
dec
jl
loopne
push
mov
test
fildl
filds
repz
sbb
mov
xchg
pop
mov
or
hlt
je
adc
not
xchg
xor
push
mov
pop
ret
and
sub
and
or
adc
scas
movsl
icebp
xor
push
inc
mov
fistpll
rcl
jno
sub
inc
add
mov
xchg
jne
in
loope
jae
loop
jo
hlt
loopne
xor
cli
push
push
inc
jo
sbb
push
mov
out
mov
push
hlt
mov
xchg
dec
and
cmp
movsb
adc
xor
mov
cwtl
dec
pop
push
imul
and
or
negb
adc
test
insb
stos
sbb
test
fdivs
ljmp
pop
cmpsb
cs
std
js
or
dec
sbb
jns
jmp
push
push
clc
adc
testl
pusha
mov
xchg
add
clc
lods
inc
ds
imul
jne
sub
cmc
pop
cs
dec
popf
in
or
ret
flds
clc
in
subl
in
fsub
adc
mov
loop
adc
nop
clc
dec
vcvtsi2ssl
cld
sub
add
xchg
pop
rcrb
xchg
dec
repz
popf
or
pop
dec
ret
sub
scas
pop
mov
sbb
jp
divl
xlat
add
add
cmpsb
inc
cmpsl
sbb
test
push
add
sbb
repz
ficomps
push
push
test
cld
pop
sub
jle
mov
mov
xlat
add
xor
jne
das
test
mov
xor
movsb
dec
xchg
mov
mov
pop
push
out
es
std
lock
shlb
push
push
mov
dec
mov
pop
stos
add
mov
and
inc
sti
mov
xorb
inc
mov
pop
icebp
mov
daa
arpl
int3
popa
cmp
int
add
lds
mov
xor
gs
pop
pop
mov
pushf
cmp
loop
sbb
std
mov
or
and
or
xor
pop
mov
das
mov
lret
fcoms
mov
dec
jle
ja
xchg
mov
mov
sub
xor
loop
push
and
mov
rep
jle
mov
cmp
sub
mov
std
mov
adc
shll
in
adc
int3
daa
fwait
xor
lret
adc
hlt
mov
inc
inc
lods
mov
ja
add
jge
daa
add
dec
addr16
xchg
std
cmc
loop
outsl
pop
xchg
push
add
int3
movsb
xchg
in
lock
jne
ds
mov
jb
inc
push
mov
xor
sbb
in
jno
inc
cwtl
pop
cmp
jo
lea
and
push
je
shrl
xchg
inc
lcall
mov
and
addr16
imul
rorb
ret
push
sub
rcrl
push
dec
sub
jae
jle
cld
cld
cmp
cmp
mov
imul
movsl
aam
sub
inc
fwait
push
mov
mov
pop
pusha
mov
adc
loope
repnz
roll
fistps
mov
jo
adc
jae
adc
movswl
push
loopne
loope
fdivl
and
jmp
dec
stos
fs
mov
shrb
cli
mov
iret
into
push
sub
adc
sti
mov
and
mov
out
mov
jb
push
in
mov
arpl
add
sbb
daa
jge
mov
sub
mov
pop
std
adc
sub
repz
pop
jecxz
sub
testl
cwtl
fsts
in
dec
jno
xchg
inc
addb
notb
or
sub
bound
les
sbb
mov
jne
mov
ja
inc
jb
adc
clc
pop
jae
popa
mov
in
lret
or
and
cmpl
repz
dec
loop
stc
cld
sbb
dec
add
cs
or
outsl
dec
mov
mov
sub
ucomiss
xchg
std
pop
dec
cwtl
iret
test
test
pop
ret
cmp
scas
test
jle
mov
sbb
imul
mov
dec
movsb
rol
dec
out
pop
inc
push
xchg
mov
cmpsl
jl
mov
sub
lods
xchg
push
inc
test
imul
cli
adc
sub
div
and
and
mov
scas
cmp
or
xchg
push
sbb
dec
in
dec
aaa
sub
lods
sbb
cmpsb
shll
mov
rclb
xor
int
dec
xchg
insl
add
sbb
std
inc
ret
in
dec
cwtl
xstore-rng
cmpsl
add
push
mov
bound
stos
mov
stos
and
push
xor
dec
in
fwait
and
or
jmp
sub
adc
scas
pop
pop
mov
mov
lret
pop
loope
fs
cmp
pop
mov
xchg
xchg
push
sahf
ret
add
xchg
rcll
mov
aas
push
imul
scas
scas
sbb
inc
push
inc
sahf
pop
bound
lahf
insb
and
shlb
xor
fsubrl
ljmp
cmpsb
repz
sub
push
pop
bswap
mov
nop
test
or
aas
xor
mov
add
push
loopne
scas
pop
mov
add
inc
or
inc
push
fwait
xchg
cmp
sti
dec
adc
mov
out
divl
sahf
mov
daa
clc
fs
into
pop
cmp
mov
cmp
mov
and
sbb
dec
popa
sbb
fwait
adc
loope
mov
aam
addr16
inc
les
cmp
push
ds
fistpl
sbb
icebp
adc
scas
push
sbb
sti
and
mov
movsl
add
pop
stc
add
sbb
test
popa
aaa
repnz
movups
mov
shlb
and
or
and
insl
aad
inc
mov
xchg
scas
ljmp
mov
inc
arpl
enter
inc
jns
inc
sub
stos
bound
lret
repz
xchg
dec
adc
pop
mov
outsb
dec
jmp
imul
pop
mov
or
pop
push
in
pop
mov
mov
mov
nop
jl
jg
popa
add
hlt
test
mov
test
insl
repz
lret
xchg
in
jbe
mov
mov
xchg
int3
jae
pop
and
lret
or
mov
insb
push
sub
push
addr16
inc
out
cmp
mov
idivl
cmp
mov
mov
mov
or
xor
dec
dec
ficoml
push
jo
enter
cmp
int3
mov
lret
test
add
adc
leave
xor
xor
fmulp
dec
out
sahf
cmp
or
xor
mov
dec
data16
cmp
ss
xor
std
inc
pop
mov
orb
loop
mov
lods
jnp
test
roll
push
mov
mov
fdivrs
sbbb
jns
shrl
and
sub
fsubrl
je
and
xchg
dec
mov
insb
leave
mov
push
dec
lods
sbb
sbb
shl
push
fimuls
add
loop
lret
data16
sub
stc
cmpsl
add
xchg
movsl
mov
jns
je
pop
sahf
mov
jmp
pop
repnz
pop
mov
jns
sub
mov
stc
mov
insl
push
test
mov
push
outsl
cmp
mov
divl
push
push
adc
push
cmp
out
loop
rclb
cmp
mov
or
andb
pushf
push
stos
inc
push
jl
hlt
jae
dec
adc
pop
sub
lcall
mov
pslld
shlb
ja
inc
pop
mov
cmp
cmp
je
push
mov
cmp
std
push
jmp
popa
push
rcll
and
mov
aaa
roll
insb
and
cmp
das
cltd
cli
ja
data16
adc
xchg
cmp
adc
cmc
int
jae
in
mov
aad
pop
xchg
bts
or
test
ret
add
testl
add
mov
cltd
xchg
mov
cmp
jno
iret
std
or
add
in
dec
dec
in
inc
sbb
fdivr
popa
push
insb
xchg
inc
inc
pop
mov
push
roll
or
std
dec
test
jmp
xor
xor
roll
mov
mov
ss
push
jmp
or
add
lds
jae
scas
jb
inc
stos
jne
push
adc
mov
mov
ficomps
and
mov
mov
je
cld
cli
movsl
stos
cmp
lahf
jle
imul
or
push
xor
or
daa
jmp
mov
cli
pop
lcall
ljmp
xchg
mulb
movsb
insb
xchg
fsubp
add
add
adc
mov
add
push
mov
push
ja
and
mov
inc
jecxz
sbb
inc
cmp
sbb
incl
adc
lds
leave
sbb
adc
cli
push
mov
adc
add
cmp
shll
stos
or
xchg
pop
leave
dec
and
mov
jno
jb
xor
fmulp
mov
lret
mulb
push
inc
int3
test
lds
inc
sub
cli
fstl
jnp
sub
pop
hlt
sahf
pop
imul
push
insb
inc
jmp
cld
push
es
mov
sbb
dec
add
hlt
push
lods
btc
fnsave
jl
add
sub
cmc
dec
mov
testb
aad
popf
adc
inc
and
mov
jle
mov
in
iret
jbe
mov
and
xchg
iret
popf
or
xor
out
lahf
push
adc
test
inc
mov
jbe
arpl
inc
xchg
inc
push
and
push
jp
imul
and
dec
pop
add
cmpsl
cmc
insl
mov
fs
lcall
clc
mov
pop
mov
push
adc
bound
addb
mov
in
gs
pop
dec
adc
mov
cmpsl
inc
mov
or
xor
subl
mov
scas
loope
and
insb
repz
icebp
cwtl
mull
std
mov
mov
mov
iret
arpl
mov
pop
scas
push
lahf
in
dec
xor
jb
in
aad
movsl
clc
aas
pop
fcomps
js
jmp
xchg
add
repnz
dec
adc
xchg
loope
in
sbb
js
les
outsl
inc
scas
cmp
hlt
adc
pop
enter
decb
or
add
mov
movsl
ljmp
mov
mov
cmpsb
cmp
mov
xor
pop
cmpsl
xchg
inc
sub
icebp
jl
bnd
imull
fisttps
jb
movsl
inc
mov
cmp
jle
popf
jno
push
cs
cmpsb
sbb
test
mov
pop
or
mov
dec
sub
push
pop
cmp
xchg
lock
pop
inc
daa
ret
rcrb
outsb
dec
cld
sbb
push
sti
dec
orl
rcrl
insb
xor
addr16
pop
add
cmc
xchg
pop
out
inc
sbb
lods
pop
repnz
fs
in
pop
daa
or
or
mov
pop
pop
ds
cmp
repnz
cmp
pop
inc
cmovne
mov
mov
aam
jb
stos
xchg
dec
int3
add
int3
sti
pop
outsb
mov
xlat
lock
into
into
icebp
jecxz
roll
lods
out
mov
int
mov
lcall
xor
cmc
aad
jmp
push
mov
adc
in
ja
inc
in
pop
jae
mov
mov
xlat
fmull
je
jbe
insb
sbbb
xor
push
scas
xchg
cmpsb
xchg
xchg
leave
cld
lcall
scas
aaa
mov
or
ss
dec
test
inc
mov
sbb
adcb
out
or
orb
shlb
cmc
inc
out
daa
inc
push
jo
jge
mov
sub
icebp
imul
js
shrb
pop
dec
jns
cld
mov
pop
fs
pop
sub
fsubrs
xchg
shlb
and
imull
mov
adc
inc
adc
cmp
mov
enter
enter
mov
imul
jnp
daa
pop
int
push
mov
sbb
mov
jp
adcl
inc
mov
add
mov
in
sbb
movsb
mov
mov
jns
ror
sub
inc
fs
push
nop
shr
pop
jl
cmp
sbb
jno
pop
sbb
popa
fmuls
push
loope
mov
add
outsl
inc
jo
inc
push
fstp
inc
lock
pop
lcall
cs
scas
je
mov
mov
add
mov
in
nop
push
arpl
mov
xlat
hlt
jecxz
mov
pop
inc
push
es
test
adc
add
pop
scas
shl
pop
sbb
aaa
arpl
in
divb
pushf
and
sub
and
jg
daa
jmp
xchg
sub
mov
push
lods
jne
bound
jnp
dec
mov
sbb
sub
push
fs
cmp
inc
in
push
inc
sub
lds
js
add
lret
lock
les
sbb
mov
mov
xorb
lods
xor
int3
push
repnz
dec
inc
mov
mov
pop
sub
test
push
insb
cmpsl
adc
mov
mov
mov
int3
lds
cli
rclb
sahf
push
cmp
xchg
mov
pop
mov
fldl
sub
das
cmpsb
fsub
fildll
inc
push
pop
jmp
mov
pusha
ret
loopne
mov
inc
nop
sti
jae
rorb
sbb
pop
movsb
mov
leave
rcrb
ret
shrb
rcr
ja
loop
rclb
lds
loop
mov
cwtl
fbstp
es
aad
pop
lcall
mov
rol
outsl
push
xchg
dec
jne
out
sahf
shll
lcall
fmul
roll
icebp
mov
push
sti
sbbb
mov
lods
add
xor
or
out
mov
mov
into
and
lea
push
sub
stos
mov
lock
sub
mov
fnstcw
icebp
bound
hlt
dec
out
scas
ljmp
mov
mov
xchg
aaa
jne
mov
push
jns
cltd
test
icebp
in
sahf
pop
dec
jno
fcmove
popf
insl
aam
adc
out
nop
or
mov
call
mov
mov
inc
fisubs
push
ficomps
rcrl
cs
dec
ss
push
add
mov
cs
lods
mov
es
cmc
rcrb
inc
cmpsb
mov
sbb
lret
loop
fiaddl
inc
lock
loop
fnclex
dec
pop
cmp
or
stos
sub
cmp
inc
xorb
mov
pop
bound
pop
fisttps
jmp
bound
push
repnz
cltd
push
aad
mov
push
mov
adc
sbb
int3
mov
arpl
mov
cltd
inc
xchg
jge
mov
ja
or
xrstors
mov
pushf
mov
inc
loope,pt
out
lcall
mov
or
loopne
test
sub
push
fisttpll
std
jg
dec
mov
pop
jo
jno
jl
les
or
movsl
jne
mov
inc
out
inc
inc
andw
inc
xchg
outsl
cmp
popf
sbb
mov
jne
sub
mov
and
fcoml
rorb
addr16
mov
std
aam
sbb
pop
adc
and
jl
dec
and
pop
popf
popf
popa
xchg
fs
clc
lret
mov
je
push
sbb
add
mov
push
arpl
fiadds
cld
jno
fs
sub
pushf
into
mov
xchg
lock
fsubrs
mov
mov
out
aam
mov
hlt
iret
push
and
mov
fwait
push
fisttps
loop
mov
add
or
jmp
push
cmp
xor
cmp
pop
arpl
lods
sbb
aas
jg
sub
pcmpgtw
negl
lret
enter
sbb
mov
popf
movsl
jno
jb
imul
mov
outsb
or
mov
out
mov
add
adc
xchg
mov
sbb
imul
in
mov
push
mov
insl
or
push
mov
xlat
mov
addr16
fs
stos
cwtl
xlat
dec
fadd
lods
cmc
xchg
jns
je
lods
adc
js
adc
cmp
pop
int3
dec
imul
and
dec
inc
movsb
xchg
shrb
lcall
add
dec
xchg
inc
sub
scas
add
add
sub
mov
mov
movsl
arpl
push
mov
test
dec
sub
jno
in
fst
mov
adc
lcall
or
cld
popa
rolb
cmp
jnp
out
jge
out
jl
xor
les
stos
jb
mov
cmpsl
jecxz
dec
icebp
inc
dec
cmpsb
dec
shrb
cmp
aam
adc
sahf
test
xchg
mov
test
sbb
cmp
dec
dec
ljmp
dec
jbe
hlt
mov
push
cs
das
shlb
adc
adc
shr
xor
into
into
mov
mov
mov
xchg
ljmp
out
aam
stos
imul
mov
inc
adc
sbb
inc
jg
mov
hlt
fists
mov
mov
cmp
pusha
out
cmpsl
or
loope
arpl
jmp
fistpll
call
pop
bswap
push
mov
imul
shlb
cmp
hlt
repz
repnz
aad
movsb
cwtl
out
rorl
loope
fstl
les
iret
sbb
mulb
mov
lret
inc
sub
adc
cmpl
push
cmpsb
add
shr
cmp
pop
es
lahf
inc
loopne
call
adcl
jg
hlt
mov
or
insl
aad
add
jge
mov
adc
jbe
jno
fnstsw
gs
iret
or
repnz
subl
push
cmp
out
mov
cmp
inc
inc
mov
xor
mov
fsubrs
es
sbb
mov
into
jns
mov
pop
mov
add
pop
dec
push
lock
adc
or
stos
lea
cld
mov
mov
cmpsl
xchg
push
cmp
fld
rol
fs
add
mov
inc
nop
stos
out
push
ljmp
mov
daa
out
xorl
mov
inc
in
adcl
lea
jno
lods
or
xor
shll
pop
or
popa
inc
dec
dec
cmpsl
sbb
int3
xchg
add
jg
push
test
cs
or
inc
repz
and
jo
jnp
dec
aam
fldt
dec
imul
sbb
dec
sbbb
rcrl
lds
loope
fisttps
cmp
adc
push
rcll
les
ljmp
add
mov
cs
sub
fldenv
push
mov
add
inc
lock
ja
jne
push
cld
pop
or
stos
adc
mov
xchg
movsl
cltd
fwait
or
jp
pop
or
fstps
fcoml
push
add
das
pusha
sub
in
add
push
in
adc
std
xchg
jae
push
xchg
mov
pop
sub
mov
add
mov
popa
fdivr
mov
fistpl
sarb
xchg
xor
mov
dec
ret
dec
mov
mov
je
jp
inc
push
shll
and
push
cmp
fimuls
jge
jle
xchg
pop
shll
lods
sub
pop
mov
fisttpll
add
bound
sbb
sarl
imulb
push
xchg
fwait
mov
aas
frstor
dec
cltd
mov
inc
bound
loop
sbb
jp
add
mov
lods
push
mov
addb
lds
test
sahf
push
sti
stos
jg
inc
or
add
icebp
jl
fistpll
push
frstor
inc
fwait
cmp
cld
adc
data16
jbe
inc
jno
fidivrs
xchg
cld
movsl
out
mov
inc
xor
outsl
hlt
and
inc
addr16
xchg
or
or
fstpl
mov
inc
sti
and
call
popf
pop
stos
lds
or
mulb
jmp
in
jle
and
add
test
jb
or
or
jae
xchg
push
rclb
filds
jg
or
les
and
pop
out
dec
add
inc
adc
add
loopne
mov
xchg
inc
aas
mov
xor
pop
dec
nop
adc
cmp
mov
pop
pop
mov
or
push
ljmp
sbb
push
adc
ljmp
shll
lea
ja
scas
xchg
nop
and
mov
cmpsl
movsb
adc
jg
in
adc
push
pop
sub
lds
mov
pop
imulb
out
imul
xchg
push
mov
push
jnp
add
lret
stos
add
cli
xor
int3
sub
push
sbb
push
in
lahf
aas
pop
xchg
xchg
sub
xor
gs
loopne
loopne
and
mov
fisubrs
lods
mov
jecxz
xchg
scas
jo
inc
jg
imul
jne
cmp
popf
movsl
test
ret
cmp
xchg
negl
lret
or
dec
mov
mov
mov
ss
shlb
sub
mov
fwait
out
mov
int3
in
add
and
out
js
js
xchg
stos
loop
xchg
xchg
sub
rorl
and
sahf
int3
loop
xor
xor
sbb
mov
sbb
pop
push
and
jnp
add
jecxz
sahf
inc
mov
popa
jmp
ret
adc
std
dec
pop
jp
arpl
or
jae
xchg
insb
test
xlat
test
mov
lahf
xchg
inc
insb
cmp
mov
lds
ljmp
dec
shll
mov
mov
call
xchg
mov
aas
outsl
lret
inc
pusha
movsb
movsb
push
lea
xchg
push
mov
out
dec
ret
add
int3
and
jle
sub
cmc
int
mov
in
pop
test
ds
xchg
jmp
stc
mov
push
jle
or
pop
jo
mull
daa
pop
jl
popf
and
xchg
lea
pop
jns
call
push
mov
jge
shll
repnz
fcmovb
leave
push
push
and
adc
mov
jge
fdivrs
dec
push
jne
dec
dec
mov
or
push
dec
jg
sub
mov
lock
inc
in
addb
out
inc
lahf
rorb
ss
fisubs
lcall
pop
fwait
cmpsb
inc
sub
ret
arpl
dec
addr16
add
and
pop
imul
imulb
test
cmp
or
add
ljmp
cs
pop
or
test
roll
dec
pushf
leave
subl
dec
adc
inc
dec
jl
sub
scas
push
mov
pop
mov
out
xlat
lret
sub
xor
add
fwait
xchg
sahf
loopne
or
adc
push
lock
mov
adc
sub
mov
dec
test
inc
popa
lock
jnp
dec
sbb
xor
mov
push
enter
adcb
movb
fs
dec
ljmp
cmp
or
mov
xor
dec
out
cli
int
lcall
ret
xor
adc
mov
icebp
stos
and
je
data16
xchg
cmp
in
es
and
xor
and
xor
xor
jo
mov
out
and
inc
and
imul
lock
jp
faddl
js
mov
stc
jnp
movsl
pop
cld
dec
add
hlt
and
cmc
fwait
imul
sbb
dec
idivl
and
inc
mov
pushf
test
movsb
or
idiv
std
pop
aad
insb
cmp
push
push
fsubrs
into
mul
xor
cltd
std
sub
shlb
pop
stos
jb
jle
sub
sub
cs
cmc
xor
inc
inc
sub
xlat
sub
lahf
in
movsb
lcall
mov
xchg
cltd
xchg
mov
jb
jp
inc
lcall
adcb
aam
inc
sub
shl
add
fsubrp
pop
xchg
aam
in
stos
jge
mov
ja
loopne
add
pop
mov
maskmovq
notl
into
inc
push
sbb
and
sbb
mov
mov
pushf
jecxz
cltd
inc
mov
jnp
push
jge
aaa
adc
push
sbb
in
xchg
pop
dec
push
les
inc
test
pop
mov
add
cmp
cltd
dec
fiaddl
outsl
dec
jle
stos
sbb
inc
int3
into
insb
push
imul
or
dec
call
test
ja
mov
mov
mov
faddl
cmp
ret
add
loopne
mov
ja
ficoms
insl
ja
mov
push
clc
stos
rcll
cmpb
cmp
lea
jbe
jo
dec
adc
test
jge
icebp
mov
add
adc
push
dec
cmp
push
mov
daa
mov
or
push
mov
insb
repz
mov
dec
imul
stos
jo
push
in
inc
and
ret
dec
andb
inc
leave
mov
push
mov
js
popf
mov
ja
dec
push
pop
ljmp
mov
andl
fs
fsubr
inc
jmp
sbb
inc
adc
and
fisttpll
cmc
xchg
je
pop
inc
push
mov
adc
notb
in
in
and
or
sub
int3
loopne
dec
xorl
jne
imul
je
inc
and
add
sbb
add
push
inc
xchg
and
rcrl
ficoms
lahf
stos
cltd
xchg
inc
jle
lret
xchg
and
jb
push
pop
push
aas
adc
scas
cmp
mov
out
mov
das
pop
mov
jp
sarl
ss
movsl
out
fistl
outsb
jns
sub
lret
xor
dec
mov
insl
cs
sub
dec
jmp
loop
mov
mov
dec
dec
jecxz
jo
out
iret
jbe
pop
sbb
movsb
mov
outsb
mov
leave
pop
pop
pop
ret
scas
mov
push
mov
dec
xor
enter
fs
mov
mov
dec
pop
jl
clc
mov
out
dec
test
xchg
loope
pop
add
std
xchg
daa
test
cmp
negl
jle
dec
push
into
adc
sub
sbb
mov
sbb
sbb
mov
pop
inc
inc
xchg
mov
lock
ljmp
push
sub
out
dec
cld
jnp
pop
addl
pop
and
mov
cmpb
jmp
mov
mov
dec
loope
imull
pop
aam
pusha
scas
lret
xor
out
call
fcmove
sub
addr16
add
sbb
jo
lahf
inc
cmp
inc
mov
std
lret
push
imul
test
and
mov
xchg
xchg
cli
ljmp
mov
clc
sarl
test
xorb
je
push
popf
testb
mov
mov
push
jnp
sub
xchg
rcr
ja
sub
out
lock
loope
cmp
loop
dec
add
or
xchg
mov
imul
sub
fnstsw
jp
and
lods
cwtl
out
loop
fsubl
push
fsubrs
cmpsb
imul
test
dec
mov
stos
dec
gs
out
int
xchg
inc
xchg
mov
outsl
movsl
or
outsb
repz
mov
inc
cld
inc
repz
add
jo
adc
cli
push
les
dec
je
jo
mov
scas
fcomi
pop
fistpll
jl
in
sub
inc
push
fwait
xchg
or
adc
pop
lods
movb
dec
sahf
inc
push
jle
js
jmp
pop
repz
jae
push
sbb
movsb
das
cmp
inc
sub
mov
push
loope
xchg
stos
ja
adc
push
les
rorl
push
ss
call
xchg
mov
mov
mov
pop
pop
pop
fsts
sbb
mov
and
push
and
cmp
aam
adc
dec
cmp
and
add
push
lret
test
mov
cltd
mov
ret
andl
inc
sbb
jge
filds
in
lahf
lods
cmp
ret
adc
pusha
pop
rol
xor
mov
faddl
stc
mov
cmp
outsl
cs
andl
sub
cmc
push
mov
cltd
rorl
loop
inc
pop
mov
jp
push
jle
iret
imul
xor
pushf
arpl
xor
xor
mov
sbb
dec
mov
jmp
push
or
inc
sysret
sbb
mov
lds
mov
mov
hlt
push
add
adc
add
loope
loopne
xchg
aas
orb
or
push
cwtl
cmpb
incl
xor
sub
pusha
sub
std
lret
adc
out
imul
mov
rcrb
out
stc
adc
lcall
xor
mov
push
xchg
int3
cmp
jno
mov
aam
mov
jbe
mov
stc
iret
nop
and
hlt
push
cmp
pop
ds
mov
adc
dec
xor
aam
add
in
out
rcrb
sub
loopne
and
inc
cld
cmp
int3
pop
fnstcw
pop
cmp
sub
daa
call
lcall
dec
xchg
popf
stos
jmp
jno
lods
pop
cwtl
gs
mov
shld
jb
inc
jno
cmpsl
nop
mov
into
fsubrp
cmp
lods
movsl
push
hlt
imul
xchg
aam
push
mov
mov
cmp
mov
ja
lea
in
out
mov
fldenv
ljmp
push
pop
cmp
aaa
ja
fdivl
clc
and
loopne
pop
ret
icebp
mov
dec
das
movsl
orb
data16
loop
sub
xchg
jp
and
add
cmp
mov
jno
jne
pop
les
test
pop
lret
clc
addb
push
mov
mov
aad
shll
cmp
dec
sahf
jecxz
pop
jmp
lds
adc
cmp
insb
mov
inc
test
mov
or
inc
ds
push
and
lcall
mov
xor
lods
in
lds
stos
lcall
add
push
jmp
inc
out
and
aas
mov
fisubrl
or
nop
scas
pop
popa
cmpsb
push
dec
repz
add
jge
mov
mov
call
aaa
lds
aad
jg
std
mov
sub
repnz
repnz
test
int
loop
mov
arpl
mov
lods
std
jns
xchg
mov
icebp
addr16
mov
iret
add
nop
xchg
mov
dec
leave
mov
jge
jl
pop
sbb
js
jnp
cwtl
movb
sub
push
in
cmp
lds
repnz
jmp
xchg
loopne
push
ja
or
pop
popa
mov
jnp
lods
pop
dec
xchg
subb
xor
xchg
xor
negl
lods
jp
mov
shll
cmc
enter
sub
imul
mov
adc
pop
out
jmp
mov
pop
int3
or
bound
xchg
xorl
push
inc
jns
repnz
out
test
int
out
jb
clc
lret
xchg
loope
outsl
xchg
aam
and
andl
inc
dec
cmpl
jbe
aad
ret
mov
inc
lret
addb
incl
outsl
fwait
xchg
pop
adc
bound
cli
sub
sbb
dec
outsb
ss
push
clc
jl
movsb
jbe
icebp
sbb
scas
inc
mov
mov
dec
sbb
enter
jle
dec
push
loop,pn
shl
call
clc
test
add
cmp
push
sub
loop
aad
pop
mov
and
mov
xor
mov
test
xor
clc
mov
outsb
mulb
stos
mov
push
xchg
sub
int
ljmp
jae
push
cmp
outsb
cs
sbb
adc
sarl
jl
or
iret
mov
imul
popl
inc
in
pop
ret
jle
rorb
into
sbb
add
das
inc
hlt
outsl
das
imull
and
clc
addr16
dec
xchg
add
cmp
sbb
scas
sbb
daa
lock
pusha
xchg
shrl
jne
fdivp
test
loope
cld
mov
xchg
push
divl
inc
ds
stc
dec
or
mull
repz
or
xor
pop
stc
loope
lret
jnp
jle
fsubrl
popa
pop
xlat
fdiv
test
mov
js
and
insl
push
leave
mov
lret
cmp
or
pop
mov
sbb
xchg
xchg
pop
inc
js
jne
inc
fcomip
push
or
ja
mov
dec
jmp
bound
jno,pn
jmp
movsl
cmp
jb
push
dec
pushf
in
mov
lcall
cmp
icebp
scas
or
stos
jl
sbb
add
add
hlt
pop
adc
stos
cltd
inc
imul
lods
fiaddl
adc
rcl
icebp
push
repz
scas
and
test
add
int3
jmp
in
aam
mov
mov
mov
loop
jnp
mov
out
mov
repnz
cmp
out
mov
jecxz
adc
daa
stos
mov
scas
cmpsl
xorb
pop
pop
outsl
test
pop
and
add
nop
and
push
push
repz
into
lock
xchg
popa
push
lods
cltd
jno
outsb
add
xor
lcall
cs
jbe
mov
in
pop
xchg
jp
jne
mov
jns
xchg
xorb
negl
arpl
adc
jmp
dec
loop
adc
nop
jmp
jo
push
aas
cli
iret
inc
pop
inc
add
add
or
pop
push
pop
push
pop
cmp
ja
in
cmc
pushf
add
pop
cmpsl
leave
mov
adc
rorl
jo
xchg
les
faddl
mov
popf
and
jge
pushf
fwait
leave
mov
or
ja
push
fidivrs
mov
lret
pop
mov
push
jne
cmc
xchg
inc
xchg
xlat
pushf
subb
sub
nop
push
xchg
outsl
pushl
cld
ret
shlb
mov
cmp
repz
bound
push
push
mov
imulb
rclb
and
sub
xchg
pop
repnz
mul
mov
jge
push
mov
sarl
mov
and
or
ret
push
test
out
pop
dec
sub
cmpsb
cmpsb
pop
add
jle
bound
cmovb
mov
mov
pop
mov
jl
xor
push
ds
pop
push
js
jge
fsubrp
vpaddsb
pop
xchg
mov
add
daa
push
mov
jo
cmpl
inc
fcoms
xor
xor
jle
and
cld
fnop
inc
js
out
inc
inc
mov
ret
xchg
ss
out
movsb
jmp
data16
int3
pushf
cmp
scas
jb
mov
aaa
pop
gs
inc
jp
dec
lahf
mov
jno
rcrb
andl
ljmp
mov
loop
push
lods
test
xor
mov
popa
lret
push
lahf
xchg
fists
in
jb
jmp
out
lret
mov
popa
aam
dec
and
enter
sub
cmpsb
mov
out
jge
xchg
sbb
clc
jno
mov
mov
ljmp
mov
adc
xor
cmpsb
push
or
aam
aam
hlt
pop
ret
and
cmpsb
jmp
mov
pop
adc
or
pop
icebp
data16
xchg
cmp
dec
mov
sub
incl
out
push
ret
testb
pop
je
orb
fcmovnb
jmp
and
inc
imul
mov
adc
adc
ss
pop
bound
push
out
stos
adc
push
mov
push
mov
push
inc
jp
inc
xor
ret
sti
int3
adc
mov
and
jbe
loopne
push
cwtl
cmp
inc
sub
mov
or
outsl
mov
cli
into
call
repz
jnp
in
ret
dec
div
jecxz
mov
ret
dec
pop
out
dec
insl
jl
in
or
jbe
mov
lahf
xor
inc
addb
push
dec
sti
inc
adc
es
bound
or
daa
push
fcompl
push
push
icebp
rorl
pop
arpl
pusha
sub
inc
and
push
add
insb
push
lods
dec
jbe
sbb
sti
sub
pusha
lcall
sbb
dec
divl
in
rdmsr
nop
orl
jle
adc
xchg
jmp
nop
push
add
jge
iret
mov
sub
test
jae
jmp
int
and
loopne
int
aaa
sbb
sub
push
mov
and
stos
jg
imul
hlt
cs
popf
scas
loopne
mov
loope
test
fidivrs
adcl
jns
cmp
arpl
or
jp
aaa
inc
pushf
out
xor
stos
arpl
scas
in
repz
xchg
cmpsb
out
add
sbb
test
sub
jl
scas
rcl
test
lds
mov
mov
push
cmp
mov
imul
sahf
hlt
lret
fdivrs
and
add
mov
mov
stc
int
adc
inc
out
and
fwait
enter
xchg
dec
popa
push
rcr
lret
push
sub
std
pop
push
stc
loop
jae,pn
iret
test
popf
cmp
mov
mov
fsubl
push
or
cld
adc
cmpsl
and
mov
pop
and
imul
mov
sbb
cltd
cmp
stos
jo
mov
ja
sub
cltd
push
aas
fnstenv
push
cmpsl
fldt
in
xor
movsl
imul
xchg
sub
dec
test
out
jge
xchg
or
xor
std
mov
push
aas
xchg
jle
mov
fs
ret
gs
xor
orb
test
shl
mov
sbb
insl
dec
lea
mov
out
shll
add
lods
out
mov
push
push
cli
movsb
xor
mov
gs
jp
inc
mov
loop
jecxz
sub
xor
bnd
push
mov
ja
push
xchg
cmp
mov
cmpsl
gs
out
stos
stos
xor
sub
push
mov
mov
or
loope
and
in
inc
nop
push
mov
mov
add
pop
mulb
pop
pop
sbb
ss
mov
cmpsb
add
jo
je
rcrl
out
xor
into
sub
call
arpl
inc
inc
ret
mov
repnz
xrstors
movsb
lret
or
or
repnz
int3
mov
xor
xchg
pop
loopne
arpl
shll
shrl
addb
std
rorl
inc
shll
adc
lds
or
test
push
lret
ds
mov
mov
movsl
fmuls
arpl
pop
repz
mov
and
es
icebp
lods
or
jmp
xchg
sbb
aad
jnp
ss
sub
xorl
sub
or
fcomip
dec
sub
fisubrs
inc
mov
popf
mov
or
into
notl
movsl
loopne
outsl
fsts
push
dec
enter
incl
xchg
sub
pop
scas
mov
repz
push
push
push
fildl
dec
rol
les
cmp
cmpsl
int3
pop
add
jmp
mov
push
pushf
mov
test
pop
pop
sub
sub
aam
hlt
cs
dec
adcl
or
stc
lahf
shll
push
and
loop
ret
mov
arpl
push
inc
sub
xchg
ror
jg
add
cli
lcall
test
aad
pusha
cmp
fidivrl
shlb
test
cmpsl
stos
push
lods
sub
pushf
inc
pop
push
jo
lods
lea
push
js
sub
push
jge
dec
mov
lea
shl
cmp
xor
leave
fwait
mov
mov
mov
adc
fwait
pop
call
xor
outsl
jmp
jno
int
add
sahf
or
xchg
xchg
loopne
xchg
mov
cmp
fldcw
jmp
and
jl
adc
and
push
js
inc
push
sub
daa
jle
stos
aam
lds
mov
mov
daa
dec
lea
and
adc
ds
push
inc
fcomps
pop
inc
gs
stc
sub
test
pop
sub
ja
loopne
and
es
add
adc
repz
pop
cmp
push
pop
xor
inc
pop
pop
int
xchg
stc
in
clc
sub
lret
mov
pop
sbb
add
sbb
xor
call
adc
xor
add
sbb
sarl
sub
jg
adc
mov
mov
daa
jmp
xchg
add
les
adc
test
mov
push
test
mov
and
lret
mov
dec
adc
and
dec
test
sbbl
insl
adc
test
sbb
ffree
xchg
lock
pop
nop
dec
cmp
repnz
lahf
cmpsb
mov
imulb
adc
cmp
sbb
hlt
js
lret
xor
inc
iret
cli
mov
dec
jb
test
push
mov
dec
aas
jbe
loope
push
das
ljmp
xchg
pushfw
iret
roll
idivl
cmp
fs
jns
out
cs
or
xchg
cld
push
test
imul
xchg
iret
dec
lret
xchg
mov
les
or
ret
mov
cltd
jb
cld
out
psllw
inc
stos
dec
negl
sbb
and
imul
testb
xchg
repnz
sbb
lahf
inc
mov
or
mov
repnz
shr
or
loopne
sbb
imul
mov
les
push
aad
outsl
int
push
js
gs
dec
pop
inc
pop
clc
adc
add
cmp
jmp
std
pop
addr16
insb
cwtl
mov
clc
mov
imul
xchg
scas
pop
xchg
push
or
mov
in
out
mov
cmc
mov
add
push
ficompl
cmc
inc
mov
sbb
jge
push
inc
adc
sub
loope
mov
xchg
jle
mov
add
xor
xchg
test
subb
scas
push
pop
xchg
mov
xor
add
mov
dec
stos
cmc
or
js
lods
cli
jmp
lea
clc
mulb
jns
movsl
orl
xchg
ljmp
add
mov
mov
xor
sub
cltd
jbe
xlat
adc
mov
inc
xor
call
movsl
pop
mov
jb
mov
cmp
xor
fisubl
cmp
push
push
lods
mov
xor
lods
cmpb
pop
fld
sub
inc
pop
pop
emms
mov
dec
and
movsl
cmpsl
push
xchg
leave
pop
loopne
add
leave
int
jg
mov
mov
pusha
fsts
int3
fwait
adc
push
mov
lods
cmp
lods
xor
outsb
add
int3
call
inc
sub
lcall
add
test
adc
xor
xorl
lods
int3
dec
imul
push
sarl
loop
mov
cld
out
imul
cmp
push
and
loop
in
inc
cmp
add
sbb
push
jne
enter
mov
jb
jp
dec
arpl
insb
mov
je
xchg
rcrl
pop
les
mov
stc
cltd
aam
cmp
mov
fidivrl
mov
sti
cmp
and
pop
push
jo
inc
mov
push
and
add
dec
inc
test
fwait
repnz
hlt
ss
xor
fsubs
shrl
sbb
jge
mov
ja
push
push
mov
setg
xor
mov
mov
arpl
pop
pop
inc
mov
pop
test
out
outsb
nop
test
pop
in
and
ret
pop
mov
shrl
lahf
sbb
shl
fiadds
shlb
sub
inc
sub
xchg
loop
xor
mov
pusha
sbb
xor
out
mov
call
dec
fisubrl
movsb
stos
inc
adc
scas
dec
cltd
push
cmc
xor
rolb
insl
fidivs
sub
shll
mov
aas
int
cmp
stc
clc
dec
loope
fnsave
mov
mov
push
push
aas
inc
jge
addr16
test
rorl
or
dec
and
push
mov
jbe
inc
jae
mov
orl
push
mov
mov
cli
pop
cltd
inc
shll
push
and
adc
jmp
mov
add
cmc
sub
or
jl
push
sub
aas
adc
lret
xchg
call
icebp
gs
sub
fcoms
pop
movsb
cs
mov
stos
sahf
jo
fistpl
pop
fs
pop
xchg
push
cltd
enter
mov
filds
adc
mov
xlat
pushf
dec
ret
movsl
pop
jo
es
imul
cmp
arpl
adc
mov
inc
fwait
enter
je
loopne
sbb
xor
xor
push
add
ret
xlat
push
jp
pop
sub
mov
and
jb
cmp
pop
sbb
repz
or
das
pushf
in
ffreep
lods
inc
mov
adc
add
lods
jge
orb
add
jle
jno
push
jae
decl
dec
mov
lret
ret
ljmp
xchg
stc
dec
sbb
ret
sbb
xchg
test
jns
loope
shlb
push
push
or
imul
mov
lea
sahf
ret
shlb
sarl
and
cmc
loope
mov
cmp
icebp
es
jb
adc
cmp
jo
stos
cmc
pusha
ret
push
dec
mov
cmp
in
dec
out
test
jnp
stos
xchg
fimull
daa
stos
push
dec
pushf
xor
pop
jge
xor
dec
ss
loopne
push
jns
jp
in
lea
sub
push
cmp
repz
inc
fstpt
insb
aam
lret
mov
push
inc
and
orl
and
js
in
jge
mov
pop
cs
cmp
mov
or
repz
test
nop
ljmpw
push
cmp
loop
jle
mov
mov
sbb
movsl
stos
xchg
mov
dec
jne
mov
pop
movsl
or
movsb
insb
into
push
aad
pop
mov
inc
js
lock
xchg
push
repnz
stc
ret
testb
dec
lods
ss
sub
daa
enter
mov
lock
sbb
and
pop
jmp
mov
fs
or
scas
sbb
outsl
insl
pop
dec
dec
sub
cwtl
es
xlat
cmc
gs
xchg
movsl
stos
daa
fcmovne
outsb
outsl
movsl
push
mov
enter
push
arpl
fldcw
idivl
inc
sbb
dec
or
cmp
jne
or
pop
inc
cmp
lds
pushf
aaa
xchg
xor
jae
cmc
out
rorb
dec
aad
out
and
outsl
shrl
adc
imul
inc
int3
pop
cld
jg
sub
sti
xchg
or
movl
mov
xchg
and
push
in
inc
int
mov
xchg
sbbb
xchg
outsl
dec
jae
pop
int3
mov
outsl
and
push
xor
cld
sbb
filds
inc
icebp
inc
inc
push
cmp
mov
scas
inc
cmp
data16
cltd
in
push
out
mov
mov
popf
pop
dec
jne
repnz
push
jne
dec
scas
xchg
mov
xchg
xchg
xor
xlat
push
arpl
add
push
dec
xor
dec
ja
fadd
aam
test
cwtl
add
jno
dec
ret
movsl
je
outsb
nop
mov
pusha
test
push
sub
les
pop
sbb
xchg
sub
jnp
mov
sub
cltd
push
sar
adc
xorl
sbb
subl
sbb
dec
xor
sbb
jp
lcall
mov
jle
adc
orl
jb
add
int
dec
add
test
push
sbb
cmp
jnp
pop
insl
fstl
shrb
inc
les
data16
mov
shrl
push
sub
mov
jo
and
inc
cmp
dec
lret
call
call
leave
and
push
push
xchg
mov
lds
add
mov
rcl
mov
lret
inc
pusha
test
push
mov
popf
xchg
push
data16
lret
adc
andl
lods
aam
js
jbe
jmp
mov
mov
lock
mov
add
fstpt
mov
imul
dec
and
aas
lds
dec
repnz
cli
icebp
lock
imulb
rorb
arpl
mov
pusha
call
shll
arpl
arpl
xor
pop
xchg
std
sub
addr16
ljmp
stos
lods
mulb
imul
push
cmp
stos
push
push
inc
std
jge
movsl
pop
iret
sbb
xor
sahf
cmpb
mov
fs
xorl
and
dec
pop
cmpsl
sub
add
or
and
ljmp
inc
add
insl
cmp
sbb
or
cltd
pusha
rol
sarl
imul
aad
dec
fbstp
ljmp
sbb
and
and
cmp
sbb
loopne
fdivrs
cmp
add
sub
jmp
pusha
xchg
lretw
add
clc
mov
jle
ret
inc
ficoml
ret
cltd
xchg
rclb
sbb
in
mov
and
pusha
and
loop
mov
adc
push
fldenv
lret
jl
lods
fldenv
dec
xor
pop
pop
popa
push
test
dec
add
jbe
sub
cmp
mov
fwait
pop
xchg
and
xor
popf
arpl
lcall
push
mov
clc
nop
mov
fcmovnb
rolb
loope
dec
sbb
jno
daa
inc
fs
filds
xchg
inc
cmpsl
out
mov
mov
xor
out
jl
fdivrs
push
cs
pop
inc
sub
cmp
jmp
dec
into
and
jnp
pop
incl
xchg
and
loop
outsl
mov
gs
dec
sahf
jno
lds
pop
ljmp
cltd
bound
dec
and
push
aad
inc
add
sub
mov
push
jbe
jl
push
lret
insb
and
movsl
stos
lods
mov
pusha
sub
inc
cmpsb
push
cli
jbe
cmp
cli
pop
ret
outsb
add
add
out
xchg
adc
ret
inc
lahf
je
xor
sbb
movsl
arpl
inc
push
xchg
mov
pop
inc
pop
jle
jge
movsb
sub
movsl
push
into
inc
fldt
push
loopne
cmpsl
into
mov
mov
mov
inc
jae
pop
repnz
xchg
rclb
pop
jnp
mov
sti
ljmp
sub
addr16
popa
jo
fucomi
jns
int3
push
fldt
xchg
loop
inc
jns
cmp
jecxz
dec
xor
mov
jae
sub
mov
nop
xor
scas
aam
push
jae
mov
sub
test
xchg
add
in
mov
jnp
out
test
dec
inc
jge
inc
jge
lahf
and
dec
jp
adc
add
rcll
xchg
push
pop
pop
imul
jmp
xor
sahf
aad
lcall
xlat
int3
lret
xchg
mov
cmpb
fs
xor
mov
inc
ss
js
add
pop
stos
mov
cmp
push
scas
out
cmp
push
jle
mov
push
inc
xchg
adc
or
jae
sub
mov
jge
clc
jecxz
mov
icebp
fdivl
je
popa
insb
sbb
cmp
sub
fidivrs
cmc
rorb
stc
cs
sahf
mov
pop
inc
push
ja
stos
inc
je
pop
sub
mov
adc
test
out
cli
push
int3
aas
jmp
mov
adc
xchg
lods
lret
lock
xchg
rcl
cli
negl
iret
cltd
xchg
xchg
ss
test
leave
mov
outsl
xchg
cs
rol
adc
mov
push
xlat
mov
sahf
add
push
fbstp
pop
inc
inc
repz
aas
dec
lods
inc
je
inc
int
std
sub
lret
movb
add
mov
outsl
iret
sbb
sub
sub
xor
iret
fstp
sub
dec
aas
jne
sub
xlat
inc
loop
lods
subl
sub
and
push
jle
jo
jne
mov
dec
shl
pop
pop
mov
addl
sbb
int3
sbb
add
pop
sbb
xor
jo
iret
pop
and
enter
pop
test
stos
fdivrl
cmp
and
sub
pop
ret
in
out
in
cs
fcmovb
add
bound
push
and
cmc
mov
int3
xchg
dec
je
adc
orb
cld
sbb
insl
lahf
mov
lret
mov
or
jg
psubsw
jbe
pop
push
lock
mov
mov
or
adc
push
lcall
in
push
fnstsw
es
pop
dec
fisttpll
adc
daa
and
mov
aaa
and
mov
push
xor
mov
jmp
insb
cs
aaa
jo
ja
stos
dec
and
fmuls
mov
cmp
push
add
lods
scas
inc
mov
inc
in
xor
lods
xchg
rcrb
fsubrs
pop
repnz
out
aas
dec
nop
and
jno
jle
arpl
xlat
movsl
inc
gs
icebp
mov
imul
insl
xor
jae
cld
jecxz
testb
addl
icebp
cmp
sbb
sub
lds
stos
lret
pop
inc
outsb
pop
sub
push
pop
dec
orl
aas
xor
ret
stos
mov
push
pop
mov
adc
lcall
lods
xor
dec
loop
mov
sub
push
cmc
lea
fstpt
fldcw
loopne,pt
pop
pop
push
lea
int3
inc
and
jmp
jo
call
lcall
sbb
cmp
fdivr
ljmp
pop
cmpsb
rolb
aad
loopne
sub
push
inc
add
lock
inc
fisttps
gs
popa
sbb
jo
fidivrl
xlat
jo
stos
xor
in
inc
pusha
or
push
push
popa
outsb
test
in
push
mov
into
stos
mov
xor
sub
test
out
jae
dec
adc
sub
faddl
adc
pop
ficoml
push
mov
xchg
mov
shrb
pop
jne
mov
pop
dec
xor
popa
push
cmpsb
adc
imull
outsl
in
movsb
cmpsb
mov
xchg
inc
aad
lea
stc
dec
movsb
xchg
icebp
outsl
and
cwtl
hlt
clc
rorl
aas
push
addr16
push
cmp
popa
test
mov
jno
adc
and
cld
clc
lods
mov
jns
out
ret
cmp
jae
mov
imul
cltd
push
lret
fwait
lods
in
pop
testb
cltd
fidivrl
lea
clc
mov
fldenv
das
sub
xchg
sub
lock
lock
inc
mov
jl
insl
lret
cmp
mov
insb
inc
lods
pop
lea
sbb
jo
push
mov
pop
das
ja
adc
jae
adc
mov
lcall
fs
adc
mov
pop
sbb
ret
int
int3
inc
or
imul
push
mov
aad
mov
femms
addr16
mov
and
pop
shl
icebp
iret
adcb
fmuls
cmp
adc
sahf
jmp
in
xor
sbb
jl
push
add
jmp
inc
fdivrs
pop
fnstcw
or
icebp
into
sub
inc
push
and
lret
loop
mov
cmp
mov
mov
cld
mov
xor
aaa
les
mov
scas
sub
and
hlt
data16
pop
xchg
sub
and
cltd
or
dec
pop
push
inc
adcl
cld
sbb
into
mov
fs
cs
cmpsb
cmp
dec
xor
test
fcmovnu
push
push
movsb
xor
xor
popl
cmpsb
xor
in
lds
loopne
or
jl
adc
loope
cmpsl
lret
repz
aad
cmp
mov
jnp
enter
sbb
xor
scas
push
push
mov
outsb
or
into
jne
or
popa
aad
movsb
pop
mov
gs
mov
enter
lret
or
in
jge
push
mov
in
and
fsubs
jmp
sbb
cmp
sbb
es
mov
xor
inc
std
sbb
pop
push
jb
je
loopne
imul
sbb
andb
pop
out
dec
lret
lahf
xlat
jp
repz
mov
mov
shrb
dec
pop
cltd
aaa
push
call
jge
jbe
addl
out
stos
lcall
enter
xchg
jb
cld
sub
or
fs
fs
sahf
sub
xchg
jmp
call
data16
enter
pop
add
das
cmpsb
xlat
xchg
sub
int
adc
lea
inc
test
stos
dec
dec
xchg
inc
imul
shlb
xchg
movsb
mov
inc
dec
daa
lods
das
adc
adc
ss
pop
jecxz
sub
movaps
shlb
mov
inc
inc
jmp
pop
iret
movsl
push
or
loope
cld
out
and
je
stos
cmp
mov
add
test
dec
xchg
in
outsl
sub
xor
lea
sub
mov
inc
xchg
mov
sbb
mov
xor
popf
mov
jl
lret
out
xchg
sub
mov
pop
xchg
adc
sbb
push
inc
aad
sub
insl
push
push
out
mov
aaa
enter
or
clc
sub
dec
in
push
outsl
es
xchg
scas
jo
xor
lods
push
popa
lea
and
dec
mov
sbb
inc
push
mov
mov
loop
rclb
sub
add
jmp
adc
push
adc
push
ljmp
and
xchg
repnz
mov
xor
jecxz
mov
and
mov
add
cltd
xchg
sub
mov
cmp
arpl
add
jg
cmpsl
iret
jmp
push
push
icebp
mov
jg
pop
je
lods
xor
inc
sbb
dec
loope
bound
test
add
out
adcl
popf
push
imul
xor
lods
cmpsb
xchg
pop
xchg
add
pop
and
add
and
sbb
adc
imul
mov
jg
and
dec
jmp
outsl
aam
lcall
pop
mov
rcrl
les
adc
adc
dec
scas
or
dec
std
lret
sarb
hlt
xchg
pop
cmp
loop
test
jge
sbb
mov
sbb
testb
imul
int
xor
xor
daa
cmp
adc
lahf
fildl
mov
mov
mov
fstl
and
std
xor
daa
lret
mov
or
xchg
fadd
xchg
pop
sbb
add
xchg
in
mov
mov
cmpsw
enter
push
and
aam
ss
sar
jno
nop
adc
es
cli
stos
roll
mov
jle
xor
lcall
fsubs
rcll
mov
jmp
push
fstpl
jb
lret
push
pop
adc
imul
mov
ss
outsb
xchg
pop
inc
push
inc
sbb
fcomi
and
jnp
pop
dec
or
mov
popl
jmp
das
sbbb
pusha
ljmp
mov
ret
xchg
hlt
mov
adc
lea
inc
mov
cmp
xor
push
adc
andl
shrl
push
in
stc
mov
loope
push
aaa
movsl
push
pop
loop
xchg
mov
cmc
sbb
add
in
ss
cmpb
stc
mov
xor
push
cmp
push
sub
mov
pop
add
adc
fsubr
cmp
xchg
dec
push
adc
fsubr
mov
or
cmp
jno
lods
rcl
push
add
mov
adc
xor
and
cld
xchg
aad
dec
lds
je
push
aas
xor
mov
adc
neg
subl
mov
std
lds
jmp
movsb
popf
mov
push
test
or
add
test
in
push
adc
sub
dec
add
xchg
loop
and
mov
dec
cld
pushf
mov
xor
dec
push
xchg
in
add
jp
xor
out
arpl
sarl
mov
xchg
sub
push
jo
adc
and
movsb
mov
or
test
mov
aad
jmp
fisttps
lods
jmp
adc
or
popf
sbb
jecxz
sbb
pop
inc
jno
and
sahf
cmp
fwait
out
add
xchg
cmp
adc
ljmp
scas
inc
popa
mov
fs
cs
ljmp
aas
aad
push
push
mov
out
mov
ficoml
xchg
bnd
jne
cld
xor
stos
or
xchg
mov
ljmp
inc
pop
inc
sti
pop
andb
dec
vhsubps
cld
jle
cmpl
mov
mov
loopne
pop
mov
xor
push
and
mov
into
fdivrs
cmp
adc
mov
shrl
add
xchg
imul
nop
push
adc
adc
mov
pop
add
jg
aaa
mov
mov
loopne
push
retw
nop
test
cmp
inc
aas
inc
ja
gs
cmpsb
lahf
in
int
xchg
dec
adc
xor
in
push
dec
adc
test
mov
cmc
shr
jne
fnsave
je
mov
cmpsb
inc
mov
dec
sbb
cmp
xchg
or
pop
cltd
xor
sub
xor
sbb
or
insb
jno
aaa
mov
push
testb
cmp
jmp
lods
call
ja
adc
push
xchg
pop
test
loope
daa
in
jb
cli
adc
push
cmpl
or
roll
pop
and
jb
repnz
arpl
jg
dec
jb
addr16
outsl
mov
les
mov
fbld
mov
movsl
in
sti
cmp
arpl
in
sbb
adc
pop
sub
test
sub
push
xlat
std
out
lcall
add
call
xchg
sahf
adc
jl
shr
jg
or
push
dec
ret
cs
shlb
adcl
in
xchg
and
push
les
icebp
in
xchg
clc
jmp
pop
in
arpl
xchg
push
jne
filds
push
subb
pop
add
lcall
xchg
sti
shl
mov
lret
xchg
mov
loopne
mov
sub
ss
aam
cmp
fildll
leave
or
fcmovbe
arpl
cld
pop
jnp
outsb
xchg
je
jg
fisttpll
cmp
xor
jmp
cmc
subl
cmpsb
adc
xor
mov
es
jge
mov
or
xor
mov
es
fnstcw
decl
aam
scas
ds
mov
daa
pushw
addl
cmp
test
and
dec
decl
dec
or
ja
outsl
in
shlb
rcrl
xchg
hlt
lret
fnstsw
push
test
cmpsl
adc
test
sub
mov
dec
sbb
push
movsb
dec
adc
lds
test
mov
sbb
andl
dec
jo
jmp
dec
jge
xchg
daa
jmp
dec
dec
sti
dec
call
mov
arpl
jae
adc
push
clc
push
mov
mov
sbb
and
fnstenv
cmp
xor
lahf
mov
stos
pop
fiaddl
aas
fstpl
addr16
push
sub
int3
cwtl
and
hlt
inc
mov
hlt
nop
repz
push
lcall
aad
push
adcl
inc
scas
or
inc
popa
dec
cwtl
ret
sub
cld
inc
jae
adc
dec
out
adc
mov
ljmp
fdiv
ss
xchg
and
lods
inc
lods
pop
cli
push
lcall
mov
scas
cmpsl
fcoml
add
aaa
cmpsb
stc
shll
pop
xchg
rol
stc
xor
or
aam
stos
cmp
mov
fwait
cwtl
adc
xchg
xchg
mov
push
mov
movsbl
mov
inc
sbb
pop
lahf
adc
sub
pop
jnp
fdiv
sahf
sbb
lods
aas
in
das
mov
dec
adc
add
pushf
add
add
cmp
mov
dec
fs
rcl
out
hlt
ret
lock
test
mov
pop
jne
aam
and
cli
leave
jle
push
sub
xchg
push
scas
fnstcw
push
add
adcb
hlt
je
mov
incb
fisubrl
push
ss
imul
cld
clc
push
sbb
cltd
cmp
pinsrw
xorb
mov
push
push
out
adc
dec
sub
fld
mov
lds
call
mov
sbb
imul
mov
lcall
add
adc
lea
test
push
cmp
ds
ret
inc
jecxz
adc
or
out
bound
lods
cmp
add
xchg
das
mov
call
es
cmp
lret
fadds
out
mov
lods
mov
pop
push
jno
ret
jo
xchg
test
sub
movsb
pop
cltd
xchg
push
or
dec
inc
sbb
xor
xor
mov
fsubs
enter
out
in
or
cmp
dec
rcrb
movsb
mov
clc
imul
sbb
mov
xchg
lret
imul
sub
dec
jns
xor
xor
inc
scas
mov
bound
mov
jle
sub
lahf
cmp
mov
add
js
push
aaa
rorl
aam
cmp
mov
sbb
jo
int
aad
sub
movsl
cmpsb
decl
adc
sbb
mov
cmp
jbe
movsb
pop
cs
out
add
cmp
or
cmp
int
lcall
inc
sub
push
pop
cmc
cmp
pushf
rcll
add
out
std
sbb
cmp
je
pop
outsb
inc
adc
cmc
mov
lret
std
loop
adc
jne
mov
push
arpl
mov
insl
lock
pop
mov
xor
mov
push
mov
jg
clc
mov
ja
out
mov
icebp
jmp
rorb
addr16
bound
inc
cmc
icebp
jo
xchg
in
jp
ljmp
lcall
iret
or
jg
int3
aam
jbe
dec
mov
in
xchg
or
fdivp
lods
ss
outsb
cwtl
sub
loop
in
rcr
mov
mov
lods
push
mov
in
dec
lret
test
cwtl
and
enter
das
mov
loope
mov
fwait
iret
sbb
dec
cmp
popa
cli
and
out
ds
mov
and
mov
add
movsb
clc
aam
and
fcmovbe
mov
test
in
negb
lahf
mov
out
mov
shrl
jmp
mov
xchg
mov
fidivrs
adc
pop
push
inc
cmpsl
push
ds
popa
push
vucomiss
xchg
push
sub
test
mov
mov
scas
push
mov
lds
insl
cli
je
sub
mov
xor
sbb
out
insl
sbb
pop
fdiv
and
jno
mov
cmc
adc
scas
arpl
sti
xchg
push
dec
out
std
push
hlt
mov
mov
cmp
sub
sbb
loope
add
mov
data16
fcoms
std
lods
mov
clc
test
and
mov
and
inc
mov
cld
jl
dec
xor
daa
icebp
rorl
addr16
dec
inc
test
jb
and
inc
aaa
xchg
mov
or
mov
addl
xlat
mov
stos
push
inc
sahf
sub
cmpsb
jl
add
mov
aaa
imul
adcl
fnstsw
sub
imul
ja
movsb
pop
sub
cmp
adc
mov
repnz
rcrb
mov
inc
mov
shrb
rcll
mov
mov
dec
cld
jb
lcall
test
fwait
adc
mov
push
xchg
xchg
mov
adc
es
xor
neg
mov
rcl
xchg
adc
push
movsb
fiadds
outsl
incl
cmp
lods
lahf
int
push
repz
jle
fnstenv
xchg
dec
lds
pop
mov
pop
add
xchg
sbb
xchg
inc
pop
ja
hlt
mov
sti
mov
stos
adc
in
mov
jg
xor
sahf
cmpsl
mov
imul
xchg
stos
fwait
or
mov
xchg
outsb
iret
push
push
lret
cmp
dec
stc
sbb
push
push
sbb
push
dec
xchg
clc
mov
in
test
push
jg
push
xor
data16
gs
imul
rcrl
bound
xor
jp
jbe
addr16
fnstsw
and
sub
cmpsl
dec
adc
das
enter
loope
dec
mov
jns
dec
xchg
push
and
jbe
and
push
inc
sar
mov
cs
into
sub
sub
push
lods
sbb
sub
rorb
push
lahf
cmp
lods
leave
sub
inc
cmp
mov
push
or
jnp
pop
xchg
mov
enter
aad
mov
loope
xchg
out
out
fincstp
imull
or
sub
mov
fsincos
add
and
sub
jg
xchg
scas
xor
xchg
lahf
adc
push
sarb
xor
pushf
cmp
sbb
daa
repz
push
inc
xor
insb
xor
pop
fnstsw
nop
in
jle
xchg
xor
add
lds
test
outsl
clc
gs
xchg
dec
dec
add
cmp
aam
and
aad
jle
push
and
sbb
roll
int
dec
add
fwait
dec
jp
and
adc
inc
fstps
dec
push
out
movsb
mov
ficomps
rcrb
cmpsb
mov
dec
lret
lahf
stc
outsl
xor
lock
or
push
fsubrl
dec
mull
mov
fnstenv
shlb
rcrb
arpl
dec
xorl
frstor
shr
sbb
ds
out
mov
stc
push
cmpsb
bound
ja
mov
ds
xchg
jae
pop
stos
inc
sarb
scas
or
testl
sbb
jbe
bnd
push
addr16
notb
out
out
xchg
mov
or
inc
mov
cmp
shll
scas
in
subl
test
adc
sti
xchg
jne
cmp
repnz
add
dec
adc
outsl
inc
jge
or
ja
pop
jb
mov
lods
cmp
mov
out
xor
mov
stc
push
sbb
inc
xchg
sub
cmp
rcr
stos
push
adc
lret
adc
rolb
test
jmp
btr
cmp
mov
mov
loopne
fwait
sti
call
cwtl
test
cli
out
adc
aam
test
dec
repnz
pxor
lods
xchg
mov
fidivrl
je
lahf
arpl
fistpll
xchg
imul
push
xchg
dec
lret
jl
cmpsb
push
repz
push
and
inc
adc
mov
rclb
leave
in
cmpsb
lea
movsl
mov
pop
xor
xchg
ret
adc
sbb
mov
pop
enter
dec
mov
mov
enter
lods
cwtl
test
add
stos
jns
call
mov
inc
xor
cld
loop
lods
mov
je
xchg
xor
pop
sub
xor
sbb
orb
int
stos
arpl
and
out
sbb
jo
xchg
inc
arpl
insl
push
xchg
mov
sbb
subl
or
mov
add
dec
cmp
or
in
xor
nop
cld
das
adc
aaa
sub
mov
xchg
frstor
mov
xor
clc
nop
cwtl
stc
and
dec
jg
ss
cmp
inc
in
adcb
out
sbb
jae
mov
call
mov
and
ret
inc
fistps
insl
insb
cli
sbb
mov
sub
out
mov
ljmp
cmp
xor
popf
sbb
cltd
out
push
xchg
jge
gs
mov
sbb
imul
lock
add
add
jno
dec
and
js
iret
andl
mov
jne
pop
mov
mov
cwtl
or
sbb
xlat
lahf
push
xchg
shl
rorl
sub
push
imul
jecxz
adc
aam
cmp
pop
cmpsl
add
inc
fstl
lods
outsb
pop
sbb
addr16
test
xlat
sub
stc
adc
mov
test
lods
and
std
shll
idivl
hlt
add
ja
data16
push
pusha
mov
addr16
mov
shr
xor
jb
lcall
cmpsl
sahf
mulb
pushf
flds
add
nop
add
cmp
std
in
dec
aaa
in
lret
idivb
lcall
fimull
out
lds
push
fs
imul
push
xchg
pop
push
or
xchg
xor
jno
inc
xor
negl
std
rcrl
cs
scas
into
mov
lret
push
sub
mov
mov
jae
push
and
mov
mov
sbb
jge
jecxz
mov
test
dec
add
lret
push
bound
int
or
mov
cmpsb
jb
shrl
adc
ja
imul
and
adc
jno
xchg
sahf
div
inc
sbb
roll
jl
hlt
out
fs
xchg
in
adc
fwait
cwtl
xchg
dec
in
or
sub
cmp
inc
xchg
or
repz
popa
cltd
add
mov
fistpl
ficomps
nop
jne
inc
fiadds
push
mov
bnd
xor
add
ds
adc
in
lock
hlt
iret
aad
mov
fs
rcrl
and
cmp
and
cwtl
add
sub
loop
add
mov
out
mov
in
stos
pop
imul
sbb
mov
rcl
xor
dec
lret
jo
mov
in
and
test
out
jg
in
and
sti
adc
divb
sbb
sub
jns
aaa
mov
sub
jmp
fs
ja
xlat
xchg
repz
sub
insl
add
adcb
fldl
xor
xchg
mov
sub
les
in
dec
js
shl
jl
out
shlb
adc
mov
scas
ret
push
fucomp
and
sarl
or
mov
rclb
leave
xchg
add
hlt
push
or
and
cld
imul
mov
adc
cmpsl
stos
arpl
mov
xor
test
sub
imul
inc
sbbl
dec
dec
xor
sbb
adcl
popf
sub
add
xor
cli
dec
insl
push
popa
mov
mov
adc
loope
dec
or
or
and
int
in
and
mov
mov
in
aad
js
push
ret
scas
sbb
stos
test
scas
lds
xor
mov
call
mov
jmp
jmp
xor
stos
mov
sub
cmp
xlat
add
mov
or
imul
pushf
pop
or
add
dec
adc
xchg
fwait
je,pt
out
imul
bnd
aam
je
mov
and
adc
into
and
mov
inc
jne
pop
mov
jmp
outsl
pop
lret
addb
in
pop
cltd
lahf
daa
lods
scas
jp
inc
push
inc
sbb
movsl
lea
std
into
sti
xchg
cmp
inc
stc
or
scas
mov
or
add
sbb
cmp
pusha
aam
insl
idiv
out
sbb
push
lock
lds
push
adc
stc
cli
mov
add
mov
dec
insl
ficoml
push
xor
sub
in
pushl
icebp
push
out
jp
jns
ret
push
inc
hlt
adc
and
imul
jo
mov
jne
addr16
mov
adc
daa
lahf
sub
aaa
mov
data16
dec
or
jmp
sbb
insb
and
inc
gs
pop
testb
loope
xlat
sub
mov
xchg
push
and
scas
in
xor
test
xor
xchg
and
cmp
push
dec
stos
sti
cvtpi2ps
sub
jo
loope
and
out
ret
mov
out
inc
sub
popf
out
loopne
and
jge
or
enter
stos
pop
adc
daa
leave
add
inc
mov
les
sub
lea
xor
mov
clc
int
xchg
in
jb
mov
scas
pop
mov
lahf
jle
add
ljmp
inc
out
xchg
mov
repz
mov
or
and
push
pop
sbbl
mov
mov
fs
xchg
int
cmc
jns
mov
imul
icebp
xor
add
push
jp
sub
lods
fdivl
ret
arpl
dec
or
xor
mov
pop
aad
fidivrs
and
mov
hlt
push
outsb
or
lods
test
xorl
or
jne
and
outsl
jns
es
xor
pop
cltd
aam
andl
push
push
xchg
cmp
inc
cmp
ficompl
mov
cs
out
outsb
mov
sub
and
lret
mov
lods
and
fsub
loope
mov
enter
lret
jp
sub
jmp
sub
stos
jmp
lret
bound
lods
xor
pop
test
imull
jl
notb
stos
pop
aaa
jle
les
jb
fstpl
sub
inc
cmp
mov
jnp
mov
fdivl
sub
xor
and
call
inc
mov
data16
lret
aaa
dec
nop
pop
cmp
rclb
push
mov
add
or
dec
pop
push
mov
repz
sbb
and
adc
sahf
fwait
dec
pop
aam
mov
sub
pop
mov
push
pop
mov
lret
out
int
fstp
outsl
fmuls
push
xlat
cmp
pusha
mov
addr16
js
mov
mov
inc
add
dec
sti
ss
mov
or
mov
inc
out
xlat
cmc
lret
xchg
pop
xchg
dec
xlat
and
and
mov
jecxz
int
rep
das
stc
js
push
mov
push
mov
nop
sub
fstl
mov
js
push
pop
jg
jge
and
orb
gs
pushf
dec
pusha
mov
mov
lcall
les
mov
lahf
adc
or
mov
inc
pop
lret
pop
dec
inc
sub
mov
movb
pop
mov
lds
or
cwtl
out
xchg
ljmp
fwait
fs
lds
jnp
dec
leave
mov
out
enter
mov
cmp
xor
aaa
cmp
arpl
loopne
jae
dec
ljmp
shl
cmp
fs
stc
pop
xchg
cmp
dec
mov
xchg
xlat
add
ror
cmp
shll
mov
jnp
jp
add
stos
clc
push
jmp
pushf
inc
dec
inc
clc
xor
ss
aad
jmp
fidivl
adc
cld
fistps
out
jg
std
dec
es
addb
add
cli
adc
and
out
inc
dec
js
lret
psrad
lret
notb
pushf
pop
lret
je
fnstcw
pop
ss
subb
adc
lcall
xchg
aas
jg
mov
int3
sbb
push
inc
lods
mov
je
cmp
in
jmp
dec
clc
sub
jo
es
icebp
sti
pop
push
sub
shll
into
jl
scas
cld
aad
and
dec
mov
dec
push
adc
cmp
mov
or
xor
xchg
add
mov
add
xchg
sbb
mov
fsubs
icebp
jbe
dec
lret
or
or
insb
cmp
loop
outsl
icebp
int
sub
lcall
daa
outsb
jmp
adc
push
or
xor
dec
movb
lods
outsb
shlb
pop
dec
jp
sbbl
xor
pop
mov
mov
and
dec
and
rorl
jle
push
leave
iret
insb
dec
xor
sbb
shrl
popa
fwait
in
outsb
jp
in
cwtl
int3
jae
hlt
mov
add
ror
sbb
jmp
add
cmp
pop
sarb
cltd
mov
or
fwait
out
pop
outsb
jb
or
adc
aas
int3
cmpsl
pop
push
cmp
mov
movsb
arpl
push
push
nop
pop
daa
adc
add
int
sbb
fnstcw
movsb
cmp
cmp
sbb
xchg
cmpsb
push
out
loope
push
out
or
sub
sbb
inc
pushf
cs
pop
loope
cmp
fwait
sbb
shlb
xchg
sar
push
lock
mov
stc
sbb
push
outsl
dec
loopne
mulb
repz
lcall
pop
push
adc
aam
lret
add
sub
lea
xchg
sub
fdivs
pop
push
fiaddl
mov
mov
inc
push
gs
test
dec
loop
mov
sti
or
in
ret
aas
loope
ss
lret
add
lahf
mov
and
aas
out
mov
add
cmp
pop
sbb
mov
push
popa
mov
mov
in
hlt
loope
inc
loopne
mov
out
in
jo
mov
sub
dec
sbb
imul
xor
aad
xchg
mov
mov
xor
cwtl
mov
pop
add
aaa
bound
push
or
out
dec
stos
iret
jb
icebp
add
pop
lock
pop
xor
xor
mov
dec
ss
and
nop
inc
cmpl
lea
lahf
lret
xchg
cwtl
icebp
aaa
jo
inc
jns
jns
xchg
in
and
cld
mov
outsb
mov
jle
fisttpl
fnstsw
mov
icebp
cmc
iret
sbb
mov
push
xchg
and
sbb
mov
cmp
lods
ja
jb
sahf
hlt
xchg
and
pop
xchg
sbbb
or
les
mov
or
test
and
cmp
pop
fnstcw
sbb
frstpm(287
aaa
loope
adc
pop
jns
js
mov
jb
inc
notl
bound
lods
inc
shll
ret
add
mov
inc
push
dec
mov
cmpsl
leave
mov
addl
or
or
mov
ja
add
jnp
fistpll
stos
lahf
or
xchg
push
ss
loopne
mov
pop
lea
shll
movsb
mov
mov
fisttps
insl
cs
mov
cmp
ja
push
add
jmp
cmpsl
int3
mov
sbb
adc
bound
rclb
push
dec
ret
arpl
dec
cwtl
mov
pop
mov
pop
imul
je
inc
pop
or
pop
mov
sbb
and
xchg
or
cmpsb
mov
cmp
jecxz
sub
adc
es
adc
dec
lock
fcompl
lock
ds
pop
loop
xchg
dec
rcll
jne
fwait
jo
test
aaa
addr16
inc
mov
fmulp
jecxz
and
inc
sahf
pushf
push
push
test
rorl
xchg
sbb
inc
jns
and
rorl
adc
inc
dec
int
dec
jne
sub
sti
lea
lea
dec
test
dec
lods
mov
shll
add
or
ljmp
push
adc
mov
xlat
aaa
jg
hlt
mov
sub
pop
shrb
xchg
mov
add
and
pop
dec
sbb
cmp
cmc
xchg
je
sub
and
and
push
ss
and
mov
mov
jmp
sub
pop
test
loop
push
scas
cwtl
shll
mov
frstor
pusha
outsb
scas
jb
cwtl
add
push
adc
stos
jl
movsb
js
push
or
sub
mov
cltd
cmp
sbb
xchg
inc
cmpsb
adc
loope
iret
test
mov
js
lods
inc
mov
out
daa
fisubl
xor
cs
ds
jb
scas
mov
shrl
add
mov
sbb
pusha
pop
cmp
cmp
test
shll
mov
xchg
lret
gs
inc
mov
cs
in
lret
mov
stos
fidivl
loope
arpl
pop
aam
stos
cmc
inc
and
lret
loopne
inc
push
mov
add
subl
adc
in
cmp
cli
mov
push
adc
enter
cmp
enter
adc
fsubl
push
cwtl
xor
xchg
ss
daa
int3
aaa
mov
mov
call
xchg
ljmp
and
imul
pop
push
fdivs
repz
je
sub
push
xchg
cmp
jb
cmp
xlat
xchg
js
jbe
fcomi
lahf
mov
js
xchg
jbe
clc
push
call
jb
pushf
lcall
and
repnz
cld
mov
dec
icebp
mov
mov
adc
dec
pop
lods
sti
jae
rorb
jns
data16
add
and
roll
pop
pop
push
push
xor
shll
pusha
push
clc
mov
aaa
or
andb
or
fstpt
adc
pop
mov
jo
mov
add
sbb
cmp
int3
cmc
cmp
or
and
cli
xor
dec
fidivrl
fisubrl
add
mov
andl
xor
out
push
add
sti
pop
cmpsl
mov
dec
aam
notb
and
mov
pop
or
rcrb
mov
cmp
xor
pop
inc
inc
add
stos
and
pushl
test
push
xor
mov
cmpsl
or
mov
hlt
dec
sub
mov
fidivrs
daa
aad
dec
aam
lret
scas
sbb
mov
jecxz
test
sub
and
cld
int3
adcb
or
cltd
or
int
test
push
mov
out
cmp
rol
mov
and
or
mov
or
cli
sub
xor
mov
xor
pop
fldcw
xchg
les
out
pop
sub
jo
inc
test
mov
or
pop
jb
xchg
mov
jne
not
mov
mov
sub
imul
jo
jle
sbb
and
movsb
push
hlt
orl
sbb
ss
loope
mov
jp
inc
sub
daa
jbe
movlps
sbb
sub
clc
mov
addr16
mov
sbb
mov
xor
pop
or
sub
popa
mov
movsl
sarl
push
outsl
pop
xor
lods
mov
sub
jbe
dec
mov
jo
mov
aad
scas
imul
cld
jg
nop
icebp
lea
push
bound
xchg
mov
lea
iret
sbb
push
pop
stos
dec
sbb
dec
mov
aaa
mov
jne
cmp
cmpsb
and
xorb
fs
mov
cltd
imul
add
scas
fs
cmp
xor
into
bound
and
ret
sti
adc
mov
aam
push
jg
xor
aas
cltd
adc
push
xchg
orl
stos
fwait
mov
std
dec
push
lods
sahf
es
inc
enter
cwtl
cmp
jecxz
pop
ret
sub
cmp
xchg
test
push
sti
lock
mov
jae
popf
frstor
xlat
js
loope
dec
insl
jno
xchg
dec
fadds
sbb
mov
loop
imul
lea
rorb
insb
mov
fsubr
push
sbb
or
mov
movsl
adc
out
sub
jo
lods
insb
xlat
stos
sbb
pop
shll
rsqrtps
out
and
lret
std
pushf
add
out
jge
adc
jmp
mov
xchg
add
xchg
jae
sbb
add
pushf
mov
mov
inc
lock
cld
loop
or
fwait
das
lcall
cmp
repnz
xchg
fcomp
mov
add
dec
mov
rcrb
sbb
mov
sti
cmp
pop
mov
adc
leave
xor
push
adc
cmc
mov
mov
lahf
fisttpl
and
pop
add
imul
and
mov
lods
dec
add
and
or
fwait
xchg
push
and
cmpsb
dec
push
pushf
ret
fsubrs
pop
loop
jmp
adc
cmc
cmpsl
andl
in
push
loop
cltd
mov
xchg
jecxz
pushf
dec
pusha
in
inc
cld
fldenv
adc
inc
in
out
sbb
ja
xchg
pushf
scas
bound
mov
stc
add
lods
lret
cmp
xor
shll
addl
pushf
sub
push
int3
push
xchg
sub
mov
aaa
adc
add
pop
fbstp
or
je
mov
xorl
lock
test
cmpsl
push
nop
add
mov
jle
out
sbb
repnz
add
es
dec
pushf
fsubl
adc
mov
insb
shr
push
lds
pop
pop
jmp
data16
or
xorb
xor
jmp
mov
lcall
xor
mov
mov
gs
mov
insb
ret
xlat
in
mov
jne
js
sub
mov
mov
in
lret
sub
and
or
aaa
rcl
int
sub
mov
loop
fisttpl
loope
shll
cli
or
out
lock
es
add
es
int3
mov
cmpb
pushf
adc
cs
enter
mov
lds
jns
data16
cmp
push
or
xlat
std
pop
insl
loop
fcmovb
test
cmp
mov
lods
out
movzbl
mov
xor
mov
fnsave
mov
popl
shll
in
xchg
mov
dec
in
fsub
and
mov
hlt
mov
icebp
jno
mov
aaa
mov
inc
arpl
stc
bound
cmp
mov
fiadds
xor
xchg
jmp
jmp
lret
outsb
int
jmp
movsb
imulb
loop
divl
sbb
jnp
notb
push
cmpsl
nop
je
test
and
xchg
stc
and
xchg
push
lods
cltd
jno
sub
xchg
mulb
rcll
and
xchg
sbb
sbb
aas
mov
and
into
es
and
mov
jo
mov
fs
inc
fists
push
fidivrl
mov
pusha
lret
pop
das
movsb
push
mov
ss
icebp
inc
add
mov
and
mov
pop
push
cmpsb
pop
and
jmp
lea
adc
add
ds
ret
mov
pop
xchg
idivb
mov
mov
stos
imul
push
fsubr
test
in
jecxz
hlt
or
add
jp
std
or
fisubs
notl
stos
std
mov
cltd
push
cwtl
stc
push
addr16
push
sti
cwtl
cmp
outsb
notb
jle
cmp
fs
movsl
js
fisttps
data16
or
add
icebp
add
out
stos
push
das
mov
les
aam
lret
add
fdivrl
ffreep
push
data16
push
dec
fwait
lahf
bnd
jne
shrl
sbb
jmp
mov
stos
ds
mov
pop
and
imul
push
push
lahf
inc
jmp
test
in
ret
aas
push
push
out
ljmp
lods
aaa
adc
ret
jnp
and
pushf
dec
jl
mov
idiv
andb
aas
xlat
and
push
add
test
and
ror
xor
jecxz
add
push
jl
xchg
cmp
sbb
lret
insl
cld
dec
jnp
cs
push
mov
lods
xlat
pop
xor
call
sbb
int3
arpl
loope
or
or
dec
rcrl
cmp
outsl
adc
pop
cmc
loop
add
lods
adcb
or
rcrl
pop
jle
jl
int
sarl
or
mov
addb
test
or
jmp
ljmp
popa
mov
cmp
imul
pop
lahf
adc
arpl
dec
cs
lock
int3
jl,pn
sahf
sti
imul
mov
jg
icebp
sub
sub
lret
sbb
mov
pop
jmp
jg
mov
lar
push
mov
cmpsb
cli
add
orb
lcall
ja
fists
stc
into
ret
mov
out
ja
mov
fldenv
and
ss
popa
mov
fwait
cmc
cli
mov
or
pop
xor
inc
sub
mov
orl
xor
mov
sub
mov
xchg
lcall
xor
mov
rorl
arpl
in
push
lea
or
or
sarl
jno
adc
sbb
aam
mov
outsb
repz
and
lahf
call
shll
insl
test
jl
add
mov
int3
rcrl
sub
inc
arpl
xor
add
fs
push
inc
insb
cwtl
cmpsl
push
arpl
movsl
pop
maskmovq
divl
leave
mov
andl
std
mov
xor
enter
fistpll
inc
push
push
nop
je
jns
sbb
ds
add
xor
popf
cmpsl
push
les
jmp
xor
aam
or
jns
stos
inc
inc
movsb
cmp
jp
lcall
ror
fwait
mov
inc
mov
outsl
xchg
shlb
push
lcall
sbbb
and
movsl
mov
jl
mov
pop
lcall
jne
lcall
sbb
add
mov
test
sti
stos
in
mov
mov
jecxz
xchg
adc
fsubl
dec
lods
lcall
push
cs
or
test
clc
jo
mov
lret
jb
sbbb
ret
js
mov
stos
ss
push
test
inc
test
sub
jmp
es
sbb
fistpl
add
inc
add
jg
ja
push
je
insl
mov
fwait
pop
push
add
loope
or
pop
push
jbe
in
cmc
movsb
shll
sbb
xchg
pop
add
clc
adc
push
inc
mov
aam
pop
mov
lds
popa
sahf
daa
cmp
or
add
mov
cli
and
push
xor
sti
sbb
in
adcl
jno
cwtl
push
push
fdivs
mov
cltd
add
lret
add
sbb
ret
addr16
sub
jle
xchg
push
loope,pn
or
or
xlat
mov
cld
mov
and
xor
jecxz
mov
test
orb
lcall
lods
outsb
xchg
push
lea
mov
push
cmp
movsb
adc
arpl
gs
sub
sahf
cmp
lods
jl
sti
or
loop
pusha
shrl
ljmp
adc
cmp
dec
out
aas
lcall
sub
bound
mov
inc
sub
pop
sarb
test
or
xchg
jp
sbb
ss
cld
or
jns
sbb
xor
mov
nop
mov
push
jge
xor
jge
pop
loop
daa
fwait
lods
sbb
sub
sbb
cltd
mov
out
pop
sarb
lds
lret
loopne
sbb
in
or
sti
cmp
test
and
movsb
out
jl
cmp
popa
loop
xchg
xor
fisttpll
inc
fs
in
scas
out
push
arpl
popa
lcall
jge
cmp
inc
enter
or
aam
or
cmp
or
adc
or
cmp
leave
nop
out
leave
stc
xlat
jp
in
mov
sbb
inc
mov
pop
and
and
jbe
arpl
add
jl
lea
das
pop
lea
mov
or
mov
adc
shlb
add
cmpsb
lds
jb
adc
repnz
add
inc
and
ret
imul
stos
xchg
pop
hlt
xor
daa
sbb
sub
push
xchg
fstl
xchg
jns
cmc
mov
fs
aad
fiaddl
or
push
stos
inc
add
xchg
stc
adc
inc
mov
cmp
mov
jb
sbb
ja
fwait
xor
cmp
nop
scas
push
mov
add
faddp
pop
in
add
or
andb
jp
xchg
push
jnp
arpl
cli
mov
cmp
pop
inc
mov
mov
mov
push
inc
add
push
out
int
jns
stc
ljmp
andb
es
popa
xor
fwait
push
adc
cmp
cmp
addl
gs
mov
and
lods
xchg
mov
xchg
outsb
ds
mov
hlt
add
dec
jle
push
nop
push
fstpl
pop
sub
add
and
aad
lods
sti
outsl
mov
fiaddl
stos
pop
xchg
push
push
fnstenv
jl
xlat
jbe
mov
dec
pop
xor
rcll
sahf
enter
in
je
xchg
lret
push
fstl
xchg
mov
xor
in
adc
and
cld
repz
push
lds
adc
push
xchg
and
lret
xchg
jp
sahf
dec
dec
mov
lret
mov
sub
sahf
scas
fdivrp
or
xor
jae
gs
insl
fs
outsl
popa
mov
and
fwait
adc
pop
push
mov
add
rclb
notb
je
cmp
sbb
adc
add
stc
inc
movsl
pop
add
addr16
hlt
cmp
inc
adc
ja
cs
cwtl
movsl
pop
lahf
mov
and
xor
call
icebp
xlat
sub
mov
and
aaa
pop
nop
es
jecxz
mov
rorl
sbb
dec
pop
es
cmp
xlat
lock
andl
icebp
cmp
inc
fld
mov
cld
push
es
mov
cmp
xchg
push
sub
pushf
xchg
sbbb
adc
into
roll
addr16
adc
inc
in
xchg
sbb
imul
cltd
fsubrs
cld
fsubr
inc
jecxz
push
pop
sub
dec
mov
insb
xlat
add
jno
mov
ret
cld
mov
nop
insl
adc
fld
in
popf
nop
sbb
cmp
mov
in
jns
daa
cmc
jno
jns
cmpsb
adc
out
stc
fstl
xchg
mov
dec
arpl
cmpsl
push
xor
and
out
mov
cmp
pop
fdivrs
adc
mov
hlt
test
out
mov
lds
addr16
xor
scas
xlat
push
ljmp
fwait
jo
ljmp
gs
and
sbbl
inc
add
outsb
int
xchg
lret
dec
daa
inc
mov
cmpsl
or
sahf
and
xchg
jl
pop
fsubl
sarl
stos
sbb
xchg
je
call
pop
adc
fucomip
scas
xchg
cmp
pusha
mov
cld
clc
sbb
sub
int
push
adc
je
pop
lods
sbb
mov
mov
xor
icebp
push
cmc
xor
push
xchg
dec
std
loop
xor
pop
es
imul
lahf
xchg
ret
sti
cld
les
sarb
sub
testl
pop
pop
pusha
sbb
fbstp
in
sbb
sub
into
pusha
mov
mov
into
aas
lock
push
fcompl
jmp
gs
push
inc
call
xor
mov
inc
adc
loop
shrb
lret
mov
xor
add
adc
mov
std
das
push
aad
add
add
testb
jg
lret
ret
push
ljmp
dec
repnz
add
cwtl
in
cmp
and
dec
sub
dec
les
sub
mov
fstl
inc
outsl
stos
addr16
ret
jo
in
gs
mov
xlat
lods
icebp
inc
dec
js
repz
pop
sbb
fwait
xchg
cltd
or
pop
cmpsb
mov
sub
movsl
fld
insb
fwait
and
icebp
xchg
andps
adc
ret
loop
adc
jmp
mov
mov
adc
adc
mov
mov
aaa
call
rcrb
test
fs
adc
leave
pop
rol
ja
push
mov
daa
ret
and
fmul
pop
push
addr16
test
dec
clc
xchg
xchg
mov
pop
roll
ds
add
cwtl
icebp
mov
cmpsb
icebp
adc
dec
pop
inc
gs
dec
dec
pop
jmp
jge
pop
imul
into
sahf
std
lret
std
inc
and
daa
cli
stos
pop
jle
inc
pop
inc
cmp
test
xchg
and
jno,pt
sarl
fildll
mov
cltd
dec
leave
add
or
cmc
fisubrs
scas
aaa
repz
adc
lret
inc
jmp
xor
lea
pop
xor
pop
inc
adc
out
test
adcl
stos
sti
mov
jbe
xchg
mov
outsb
testb
and
jne
idivb
adc
rcll
mov
push
test
ljmp
cmp
push
inc
cwtl
mov
repz
fyl2xp1
lahf
xchg
add
jmp
clc
pop
pop
aam
je
in
gs
jae
sbb
push
cmc
js
mov
xchg
or
cmpb
cmpsb
mov
loop
insb
adc
sbb
out
jno
cltd
jo
incb
dec
aam
jg
push
into
insb
loop
psraw
push
mov
push
scas
adc
xchg
push
dec
mov
jnp
xchg
or
xchg
enter
dec
stc
dec
dec
stc
adc
sub
addr16
jecxz
pop
in
std
jno
mov
adc
test
lods
adc
mov
add
dec
adc
packuswb
cmp
leave
cmp
jle
pop
lahf
sti
push
push
xor
movsl
test
dec
fildll
lds
mov
addr16
mov
call
jo
jb
push
mov
xchg
sub
adc
xchg
dec
mov
xor
inc
cmp
jmp
mov
test
cli
adc
scas
adc
mov
xor
sti
mov
jno
scas
xchg
push
sti
xor
leave
in
shll
xchg
loope
and
inc
lds
jge
jae
fcomip
data16
mov
add
mov
fsubrl
test
inc
dec
jnp
or
push
out
mov
cmpsb
fs
or
aad
testl
fisttps
lahf
xor
leave
add
ja
xchg
test
test
mov
fisttpll
loopne
mov
push
arpl
add
repnz
add
loope
jg
insb
cltd
or
cmp
dec
jle
jbe
inc
and
xchg
xor
ds
jnp
adc
ret
out
jg
jo,pn
cmp
inc
inc
sti
mov
div
test
fwait
movsl
js
outsl
jle
cli
in
xlat
rclb
jecxz,pn
jmp
cmp
and
push
mov
adc
xor
jae
xchg
inc
loop
lret
iret
int
scas
mov
adc
xchg
inc
rcll
pop
and
cs
cs
shl
add
jae
stos
mov
fisttpl
xchg
into
notl
insb
mov
xlat
mov
adc
or
iret
adc
pop
inc
pop
je
in
xlat
fsubrl
inc
and
dec
jae
dec
push
repz
les
jns
adc
xrelease
xor
mov
cmp
pop
pop
dec
mov
scas
mov
sbb
xchg
mov
pop
popa
shrl
je
pop
ja
or
inc
jle
dec
js
jnp
mov
pop
int
leave
in
xchg
and
arpl
loopne
inc
sahf
push
mulb
cmp
fwait
adc
jno
test
stc
gs
lahf
cmc
inc
xor
inc
sbb
mov
ficoml
les
push
mov
sbb
sbb
stc
pop
lods
rcl
cmpsl
cmp
pop
sub
call
lods
loopne
mov
das
stos
fdivs
mov
cwtl
into
mov
out
pop
ror
push
sbbb
test
dec
insb
stc
adc
xchg
jg
xlat
fs
in
lock
and
movsb
sbb
popf
xchg
adcb
mov
or
or
sub
aam
xchg
mov
xchg
fbld
dec
mov
and
xor
lods
and
hlt
and
xor
movsl
xchg
arpl
roll
dec
iret
inc
xchg
fld
xchg
xor
mov
ljmp
xchg
std
add
push
popf
js
movsb
fstpt
dec
test
mov
ja
jge
lds
sub
insb
lret
lret
push
jl
cwtl
push
rcll
stos
pop
push
sbb
sbb
or
mov
mov
js
cmp
loopne
dec
repnz
js
fidivrl
push
in
pop
jno
sahf
push
mov
lea
out
xchg
xchg
out
mov
mov
addl
sahf
ds
jb
dec
into
sub
or
dec
xchg
jl
lods
pop
sbb
call
repz
cmp
dec
scas
or
sbb
cmp
cmpsl
add
sti
cmpl
mov
nop
mov
sbb
popa
imul
add
leave
test
mov
aam
adc
jnp
fidivl
pushf
cmp
or
xchg
ja
and
push
dec
mov
aad
testl
adc
add
jno
pop
lock
repnz
pop
dec
inc
pop
cmp
mov
push
sub
lock
dec
cs
test
les
or
adc
stc
addr16
and
sbb
push
subl
aad
stos
inc
jp
out
mov
rcrb
stos
pop
scas
add
cltd
stos
std
cwtl
add
cltd
pushw
add
in
xchg
insl
inc
lcall
or
ja
les
pop
pop
or
sub
adc
sti
popa
ljmp
jne
push
jecxz
lods
daa
nop
inc
movsl
ret
sahf
stc
lcall
dec
ljmp
adc
pop
cwtl
and
add
ret
cmp
pop
clc
out
sub
mov
loop
mov
ret
das
rcrb
fadd
jo
mov
test
mov
xchg
and
loop
jno
imul
pop
push
xchg
cld
fwait
stos
xchg
xchg
jo
rcrb
sbbb
jmp
jl
xchg
aam
repnz
dec
std
inc
or
pop
fistpll
pushf
bound
mov
sbb
pop
push
pop
jl
mov
or
add
sub
sub
cmp
addr16
sbb
xor
aad
sub
test
sub
fmull
pop
mov
push
std
stos
cmp
sbb
cmp
rolb
or
rorl
ljmp
test
and
sub
mov
adc
mov
shll
mov
lds
mov
mov
imul
adc
f2xm1
loope
adc
outsl
mov
testl
and
loopne
or
repz
adc
sbbb
inc
neg
mov
out
out
sbb
mov
enter
enter
pop
and
pop
push
add
mov
mov
mov
and
ljmp
cli
sub
nop
arpl
cld
pop
mov
add
stos
and
mov
fistpl
push
dec
lea
jg
icebp
test
aas
mov
data16
in
ljmp
push
sub
xor
out
clc
cli
lea
int3
push
ret
in
out
sbb
movsb
lds
push
adc
mov
jge
popf
jo,pn
stos
mov
adc
mov
shr
push
sub
add
pop
sarb
outsb
xor
sub
mov
in
add
push
jo
fcompl
test
push
mov
mov
inc
lret
add
enter
mov
push
imul
call
pop
clc
sub
sub
mov
mov
daa
shr
fisubl
mov
cmpsb
sub
in
out
movl
mov
cmp
lret
cmp
add
insl
outsb
cmpsb
inc
leave
pop
or
mov
ljmp
sub
xchg
push
jmp
aad
repnz
scas
mov
mov
lret
sub
add
fsubl
sub
push
movsb
mov
lahf
xchg
popa
ljmp
cmpsl
and
ja
inc
hlt
inc
cmp
or
sbb
imul
cmp
das
sahf
xor
mov
push
jno
je
cli
dec
daa
push
adc
bound
int
pop
movsl
xchg
rorb
ss
xchg
out
push
ljmp
inc
jp
jbe
call
sbb
clc
and
jg
xchg
cld
sti
cmpsb
add
inc
cmp
mov
imul
out
loope
push
push
sahf
pop
dec
inc
push
fisttps
fistps
mov
or
cmp
adc
call
add
test
fwait
xor
push
les
ss
xchg
lods
push
ljmp
jmp
dec
pop
in
mov
jae
push
stos
lds
repz
push
cmp
aas
out
aam
fsubs
inc
push
imul
data16
and
and
pop
ret
inc
xor
loope
mov
xchg
dec
dec
pop
lods
xchg
packuswb
dec
cmp
jmp
adc
xor
loopne
notl
jle
stos
mov
imul
pop
xchg
or
cmpb
lock
in
push
fldt
adc
jecxz
rclb
cmpb
inc
int
rorl
or
xor
add
sub
push
in
inc
cmpsl
int
jnp
lret
adc
fwait
cli
jb
pop
shr
fsub
pop
push
cltd
cld
call
pop
movsb
pop
out
mov
dec
arpl
sub
cmc
xor
and
movsb
mov
jno
pusha
mov
inc
aam
adc
iret
lea
add
jo
ss
sbb
shll
and
sub
ret
lock
xor
cmpsb
not
cmp
fcoml
popa
cmp
addl
int
jnp
dec
rclb
int
pop
pop
push
scas
inc
por
adc
jp
or
jno
mov
push
sub
sbb
out
dec
adc
pop
inc
mov
mov
leave
jge
dec
lds
sub
sbb
mov
and
addl
inc
or
or
and
mov
fcoms
gs
test
xchg
pop
test
inc
cwtl
mov
cltd
xchg
dec
cmpl
or
cmp
adc
cltd
pop
ret
idivb
negl
nop
mov
test
mov
add
frstor
pop
clc
xor
lret
cmp
push
xor
test
sub
xchg
add
ror
cmpsl
iret
outsl
mov
push
mov
mov
std
fisubrl
in
pop
mov
jmp
cmp
jl
lods
sub
dec
pop
xchg
adc
leave
cmp
mov
dec
dec
mov
pop
das
popa
cld
cmpsl
pop
movzbl
fisubl
sbb
dec
iret
call
addr16
pop
jg
mov
popa
push
add
cmc
cmp
lret
and
xor
sbb
xorb
pop
mov
sahf
sub
neg
leave
mov
mov
dec
jne
cmp
pop
mov
push
lahf
ficomps
jnp
aam
int
xchg
testl
mov
add
and
mov
xorb
xor
dec
mov
pop
and
push
outsl
and
xchg
stos
xor
xchg
subb
and
adcb
test
aas
sbb
es
jg
xchg
mov
scas
shrl
jnp
add
addb
sbb
mov
and
arpl
movsl
push
out
adc
ds
outsl
lahf
jl
pushf
hlt
popa
outsl
lods
dec
cmp
decl
in
fildll
ret
das
xchg
add
jle
add
in
mov
clc
adcl
ret
adcl
aas
mov
or
cmp
movsb
add
inc
adc
and
pop
mov
cltd
add
mov
imul
test
inc
sbb
stc
push
mov
add
iret
dec
fsub
dec
xchg
push
inc
sti
add
sbb
adc
lods
fcmove
orb
mov
push
dec
rcr
fidivl
jecxz
jno
sbb
repnz
leave
pop
jno
adc
sbb
xchg
imul
fdivr
cmp
std
xor
arpl
std
pop
arpl
xchg
cmp
repz
data16
push
xor
mov
mov
push
lods
fisttpll
stos
and
lret
cwtl
jnp
or
sub
fimull
xor
leave
ficoml
dec
out
jl
lahf
jg
sbb
fs
cltd
inc
repz
and
mov
cmp
mov
cld
fadd
mov
mov
out
cmp
test
subb
mov
mov
adc
icebp
and
nop
fsts
ficoml
fcmovnb
jle
fiadds
or
pop
mov
xchg
pop
fstps
mov
push
mov
mov
popf
lds
inc
lret
stos
push
ljmp
das
loopne
lcall
mov
divb
mov
or
aam
fistps
mov
push
cltd
cmp
mov
fcmovnu
test
divb
mov
jle
and
add
lret
sub
mov
je
icebp
cli
pop
xor
hlt
popl
mov
imulb
mov
or
pop
add
xchg
int
int3
or
rcr
pushf
repz
outsb
mov
movsb
mov
arpl
testb
imul
add
sahf
inc
dec
push
push
fs
jne
fcomp
sbb
inc
sbb
dec
icebp
out
pop
lods
or
scas
daa
mov
jns,pn
adc
inc
jbe
into
xchg
jecxz
or
inc
stos
push
aas
rol
lahf
jno
lahf
pop
add
ret
call
sub
test
hlt
push
addr16
lret
inc
xor
inc
adc
je
js
notb
mov
clc
jl
jno
cmp
xor
adc
cwtl
sub
dec
rolb
pop
clc
push
icebp
inc
jns
lds
adc
insl
fnsetpm(287
cmp
cmc
int
or
add
xor
mov
fs
repnz
iret
mov
dec
sbb
xor
mov
stc
push
ds
mov
sbb
xor
inc
cltd
jbe
xor
jg
cmp
mov
aaa
jecxz
cmpsb
mov
and
mov
pusha
jno
aam
xchg
cs
loopne
vandnps
popaw
inc
js
out
pusha
jl
mov
adc
out
lods
sbb
fdivrs
pop
xor
dec
mov
enter
jecxz
push
mov
push
jmp
add
lret
les
push
cmp
sbb
scas
sub
mov
pop
sti
xlat
imul
aad
inc
pop
push
mov
add
pop
dec
inc
push
jg
push
sbbb
jne
sub
out
add
ljmp
lock
fcomi
jecxz
xor
mov
xchg
loopne
cs
popa
xchg
xchg
inc
cmp
sti
jae
pop
pop
fiaddl
xor
nop
mov
inc
pop
sbb
aad
mul
jbe
in
mov
imul
in
fstpt
idivl
jle
pop
int3
pop
mov
pop
enter
xlat
adc
inc
leave
or
cli
cmp
lods
mov
jmp
adc
push
fwait
pop
or
aam
and
daa
push
ss
sbb
fildll
or
mov
mov
insl
or
int3
addb
rorb
test
xchg
push
bound
imul
repnz
loope
dec
cmpb
dec
lahf
movsb
sbb
sbb
hlt
push
rcrl
dec
cmp
xchg
jge
ret
fcomip
dec
add
fbstp
xchg
push
fistpll
cld
and
daa
pop
das
repz
jl
and
push
out
out
pop
mov
dec
mov
xchg
aas
sub
movl
jl
dec
push
bound
push
fldcw
jns
pop
mov
pop
jns
push
nop
dec
notb
mov
adc
in
pop
les
cmc
xchg
cmp
bound
je
aas
xchg
adc
pop
scas
mov
xor
and
xchg
test
mov
add
inc
scas
add
mov
div
sub
movsb
jge
mov
and
jb
pop
mov
mov
fsub
popa
jecxz
sbb
scas
add
dec
mov
scas
dec
cmpsl
cli
out
pop
cltd
xor
xchg
inc
or
loope
lret
rorl
sub
pop
testl
and
push
call
push
or
cmp
add
inc
out
ret
xchg
movsl
stos
test
mov
or
in
push
andb
das
scas
jo
push
sti
mov
or
push
cmp
mov
std
aad
dec
pushf
sbb
sets
xor
xchg
int3
push
stos
inc
mov
adc
mov
mov
mulb
enter
mov
outsl
cmpsb
int
daa
add
in
lds
mov
lods
filds
test
mov
fnsave
mov
xchg
sbb
outsb
jnp
cmp
pop
lods
enter
inc
inc
stos
and
das
add
mov
lods
push
daa
xchg
sti
insb
ret
dec
jmp
cmc
stos
push
sahf
jecxz
outsb
cmp
sub
mov
pop
les
cmpsb
sbbb
pop
mov
jno
and
sarb
sbb
sub
je
or
cmc
mov
sarb
pop
pop
daa
mov
jg
or
nop
add
mov
icebp
push
stos
xor
add
gs
cmp
pop
xor
add
cmp
mov
fistpl
cmp
bound
in
mov
lret
xor
inc
cmp
xor
and
jae
xor
add
std
out
movsl
cmpsl
mov
sbb
sub
scas
xchg
push
pop
push
arpl
push
das
pop
and
jbe
lea
xor
fidivl
iret
push
divl
loop
inc
sbb
push
cmpsl
fcomp
jb
mov
inc
es
mov
fwait
stos
imul
in
sbb
sub
movsl
dec
in
mov
inc
lock
or
popf
mov
movsb
mov
or
aad
mov
mov
sub
jno
ds
cmp
push
stc
dec
cmpsb
xor
sub
mov
adc
inc
mov
mov
addr16
cmp
dec
inc
mov
add
int
adc
aad
jb
pop
ja
mov
sub
fstpt
or
outsl
add
les
xchg
leave
sbb
mov
lods
mov
sti
or
fs
stos
push
mov
popf
test
push
les
push
scas
xor
daa
sub
dec
test
adc
pop
mov
mov
addr16
call
lods
call
stc
jecxz
cmp
xchg
das
mov
or
push
test
mov
jo
les
jmp
mov
mov
aam
inc
scas
xchg
cmp
dec
and
xor
data16
stos
pop
sub
jb
lea
jge
lods
lods
xchg
lods
enter
push
es
mov
mull
xchg
xchg
fidivs
mov
add
push
xchg
test
clc
aad
adc
pop
movsb
loope
lahf
cli
mov
adc
fndisi(8087
mov
add
popa
decb
fiaddl
mov
fisttpll
mov
out
sub
rclb
xchg
mov
sbbl
es
stc
loopne
sub
mov
pop
pop
or
loopne
add
push
mov
ds
dec
push
mov
sbb
sub
lret
sub
in
dec
jnp
jge
sub
and
sub
and
imul
test
mov
inc
and
fs
lods
add
xor
adc
add
pop
jmp
or
pusha
repnz
jmp
adc
pop
pop
jmp
xor
enter
in
xor
push
rcl
andl
lahf
int
jo
jl
das
sbbb
inc
aaa
movsl
push
cmp
dec
aam
push
pop
adc
stos
and
pop
fisttpll
stos
push
lcall
sti
mov
popa
sahf
outsb
push
pop
sbb
or
dec
xor
xchg
pop
insl
cmpsl
pop
jb
and
test
mov
pop
fldt
push
inc
addb
mov
std
dec
dec
and
mov
jp
cmp
cmp
push
or
andl
testb
push
jnp
sbb
addb
adc
inc
test
inc
inc
stos
es
xchg
lret
and
adc
rolb
in
aam
mov
xchg
sbb
mov
adc
in
in
std
add
inc
rolb
lret
adc
jne
pop
cwtl
rcl
stc
sub
jle
inc
pop
sub
data16
xchg
mov
xchg
xchg
bound
mov
nop
sti
repnz
out
sub
hlt
fwait
rcll
aad
pusha
dec
xchg
hlt
cmp
and
clc
popa
fimuls
popf
adc
pop
fisttpll
loope
repz
mov
in
je
inc
adc
test
and
inc
aas
pop
pop
or
call
pop
aad
imul
mov
popa
mull
call
cmp
das
adc
sub
xchg
and
jl
pop
pop
jbe
gs
sub
xor
lods
adc
test
movsl
lea
data16
dec
addl
in
pop
sbb
push
mov
es
or
cmp
add
int3
lcall
clc
lock
cltd
icebp
outsb
mov
testl
je
xor
jns
mov
inc
in
push
imulb
icebp
popa
sarb
xor
or
movsl
ljmp
or
test
pushaw
out
pop
xor
movsb
pop
fstl
mov
addr16
jle
push
lret
pop
cmp
int3
inc
js
cmp
add
clc
mov
outsl
dec
sti
js
adcl
movsl
cmp
fldcw
jnp,pt
mov
xor
dec
mov
dec
pop
insb
ljmp
dec
xor
mov
mov
pop
leave
jge
xor
push
gs
imul
sbb
in
rorl
test
and
add
jnp
sbb
stc
loopne
sub
jp
xchg
adc
jp
mov
fiadds
pop
xchg
incb
mov
test
xchg
cmp
imul
sahf
shrb
loopne
sub
fwait
mov
fcoml
loop
je
and
sahf
mov
sti
xor
cmc
dec
movsb
dec
inc
fadd
sbb
sub
push
jp
movsb
sbb
jne
sub
imul
jnp
sti
test
jns
shlb
fsubrl
dec
add
mov
jnp
loope
mov
xor
add
sarb
xchg
insb
xchg
adc
not
or
push
jne
int
mov
rclb
mov
mov
xor
out
xlat
mov
cmp
cmp
jl
repz
pop
and
das
paddw
mov
imul
sub
clc
xchg
cs
gs
lock
push
out
sub
testl
hlt
jnp
mov
outsl
rclb
dec
sahf
jne
mov
cmp
js,pn
mov
jbe
mov
scas
sub
sbb
sub
or
jmp
add
iret
inc
pop
add
jmp
mov
jmp
jne
xchg
mov
pop
nop
popf
mov
fcmovbe
dec
inc
fwait
dec
leave
add
fnstenv
dec
pop
and
sarl
xchg
hlt
push
mulb
stos
xchg
enter
movl
or
cmp
leave
push
out
push
pop
lret
cmpsb
cmp
shlb
mov
gs
fimuls
pushf
dec
adc
add
fisttpl
lods
mov
lods
pop
enter
push
js
push
mov
out
adcb
cmc
cmc
push
inc
incl
or
mov
in
mov
mov
pusha
mov
insl
ret
lret
movsl
ljmp
cmp
out
ss
icebp
push
nop
jge
xchg
inc
xchg
or
ret
xor
push
roll
xchg
push
out
pusha
or
ja
sub
push
out
popf
pop
cmpsl
in
pop
cmp
sbb
inc
ljmp
lcall
mov
jmp
insb
fnstcw
xchg
xchg
xor
mov
aam
push
or
mov
aam
fiaddl
pop
or
into
fcoms
pop
xor
out
cmpsl
push
push
faddl
pop
xchg
les
mov
xchg
clc
xor
sbb
add
cmp
sbbl
shll
push
popf
pop
mov
adc
icebp
das
inc
xor
pop
call
sbb
cmp
pop
cltd
mov
or
stos
xchg
sub
scas
scas
movsl
pop
dec
push
sahf
push
pop
lret
mov
das
repz
fistpll
add
and
js
pop
loop
xor
jl
out
jmp
rcr
pop
imul
ljmp
sub
push
pop
inc
adc
xchg
dec
stos
mov
add
lods
sbb
ret
push
add
mov
mov
cli
cmp
mov
insl
adc
jl
pop
test
lcall
je
dec
push
cld
loop
xchg
cli
stc
sbbl
enter
inc
ja
sub
ficompl
mov
sbb
shl
cmpsb
pop
mov
mov
and
xchg
mov
adc
jno
or
sub
push
xchg
push
mov
les
leave
xchg
dec
pop
loop
push
pop
jmp
fwait
xor
inc
xchg
lahf
dec
mov
out
xor
jno
jbe
inc
xor
cmp
scas
xor
enter
push
mov
sbbb
addl
sub
lret
pop
aas
icebp
test
cmc
push
xchg
rcrb
or
fcmovne
lahf
lret
jns
mov
pop
les
inc
mov
scas
test
cmpsl
adc
dec
daa
xor
stos
jg
add
xchg
jge
insb
pop
out
dec
sbb
stos
int
pop
ret
mov
pusha
push
scas
mov
adc
lods
mov
pop
stos
dec
rorb
fbld
jbe
push
cmp
ss
jns
in
popf
jl
mov
iret
dec
add
insl
cs
test
pop
les
lods
mov
sub
mov
jne
push
sbb
push
lahf
mov
in
add
popa
cmc
jecxz
pop
call
mov
lcall
mov
lods
pop
mov
std
or
adc
adc
arpl
mov
or
push
repz
pop
imul
rol
ret
dec
incb
inc
insb
lcall
fmuls
js
mov
adc
es
ljmp
jbe
clc
push
adc
xor
lcall
jecxz
je
test
xchg
in
mov
xchg
jo
imul
jmp
pop
sbb
loopne
es
pop
daa
stc
in
mov
negb
mov
push
leave
rcpps
pop
adc
cmp
out
xchg
data16
aaa
and
cmp
sahf
mov
jle
cmp
ja
jg
call
cmp
pop
std
ja
mov
lods
addr16
pop
mov
cmp
cmp
insl
pop
ret
cmp
and
test
xchg
stos
mov
jb
mov
mov
xchg
mov
mov
mov
and
in
push
outsb
in
dec
jecxz
or
dec
mov
jge
adc
adc
mov
mov
jl
scas
lock
stos
filds
jp
or
jbe
scas
ss
shlb
leave
mov
repz
cmp
out
add
ja
out
jl
nop
loopne
sti
shll
in
cmc
pusha
push
stos
pop
lea
pop
xor
pushf
mov
mov
xchg
in
scas
jne
cmp
ja
push
mov
sbb
and
cmp
inc
xlat
pop
mov
icebp
test
xchg
stos
inc
fildll
mov
adc
popa
pop
or
lods
xor
test
movsb
insb
cmp
jl
sub
lds
dec
sbb
popf
mov
push
add
shlb
ss
fstl
lret
and
xchg
dec
push
mov
bound
cmp
jmp
pop
push
out
dec
popa
adc
mov
add
inc
cwtl
xchg
shll
fs
scas
out
fidivrs
mov
ss
ja
or
mov
mull
jbe
xlat
pusha
imul
mov
mov
adc
cmpsb
test
test
cmpsb
lock
inc
std
or
mov
push
orb
pusha
add
push
testb
aam
bound
sti
rdmsr
pop
sbb
jp
pop
adc
adc
sbb
inc
dec
ret
pop
sub
loopne
shl
push
and
jne
lock
stc
and
repnz
lcall
cmp
jg
pushf
test
jno
lahf
adc
jl
lods
sbb
iret
test
subb
pop
inc
push
sub
xchg
xor
jo
loop
js
cmp
insl
hlt
out
jbe
xchg
fwait
mov
add
js
adcl
data16
xor
rorl
jno
fmulp
in
rorb
add
ja
push
dec
mov
mov
fistpll
mov
je
sbb
push
scas
push
icebp
and
dec
cmp
ljmp
rcrb
jl
int
mov
adc
pusha
add
or
dec
mov
loope
push
mov
xchg
xchg
pop
clc
and
pop
gs
pop
push
popf
cld
xchg
dec
movsw
into
push
outsb
dec
jmp
addr16
mov
fdiv
cmp
sahf
pop
jb
rorl
mov
and
inc
or
stos
and
adc
ljmp
add
fucomp
idivb
push
scas
jo
jl
sbb
xchg
gs
mov
inc
aad
cmp
daa
add
sbb
xlat
fistpl
imul
dec
aad
call
xor
xor
aam
mov
pushl
or
adc
pop
ss
xchg
or
xchg
push
mov
inc
repnz
push
lods
and
lock
jno
lods
lea
mov
mov
bound
cltd
leave
xchg
pop
repnz
and
loopne
inc
negb
lods
fildll
dec
dec
mov
sub
sahf
sbb
outsl
push
push
cli
mov
pop
mov
lods
jno
jle
dec
repnz
adc
leave
push
adc
mov
leave
imull
jbe
adc
pop
popf
cld
and
cmpsb
lods
adc
inc
leave
scas
in
clc
adc
in
jp
push
jb
add
push
scas
jae
test
imul
arpl
pop
pop
subb
xchg
out
call
push
cltd
js
cltd
or
cs
adc
fwait
scas
loopne
xor
out
movsb
sub
pop
outsb
fdivr
xor
mov
xor
idivl
pop
lods
call
rcrb
jp
bswap
push
xchg
outsb
not
shll
ror
adc
jecxz
stos
cmp
aas
aas
xchg
mov
push
push
push
and
and
stc
nop
notb
or
push
jp
mov
xchg
bound
aaa
xchg
xchg
fdiv
arpl
xchg
ds
sbb
sahf
xchg
cld
out
jle
fmull
sarl
adc
push
je
imull
jle
adc
daa
andb
sar
dec
mov
fwait
ljmp
or
psrlw
cmpsl
scas
jmp
pop
sub
mov
es
ss
sbb
push
imulb
mov
add
imul
add
jg
adc
mov
lcall
mov
dec
faddl
cmc
inc
nop
shrl
shll
push
mov
int
mov
jae
jp
sub
dec
movl
inc
lret
mov
movl
test
pop
pusha
and
sbbb
divl
mov
push
cmp
xchg
or
imull
and
pop
ret
xchg
cmp
test
mov
hlt
jge
or
mov
jmp
jmp
dec
push
stc
sbb
inc
cmp
in
mov
aad
lret
inc
add
sub
pop
dec
mov
movb
push
xor
mov
jns
push
icebp
jo
dec
daa
in
leave
dec
add
rorl
adc
lds
cmc
fnstcw
push
fucomip
scas
in
mov
inc
jg
xor
ja
pop
pop
cmp
cmp
mov
bound
test
adc
cmpsl
and
popa
fs
lea
int3
and
adc
scas
pop
repnz
mov
push
cwtl
fldl
pop
cld
out
imul
or
dec
inc
daa
mov
repz
inc
inc
cmc
cmp
cmpsb
xor
repz
cmpsb
cmc
jo
dec
shll
jp
dec
pop
sub
push
pop
lahf
daa
mov
outsl
mov
sahf
in
repz
std
cld
jb
jne
jle
dec
jne
ja
pusha
punpckhbw
les
mov
inc
adc
xchg
adcl
or
out
fmuls
add
xor
shll
imul
add
sbb
jo
sti
les
or
aad
ljmp
mov
jp
jne
sbb
ficoml
xor
sahf
xor
fcos
inc
pop
xor
dec
sar
rol
add
ret
sub
fdiv
sbb
cld
mov
mov
inc
pop
outsl
dec
lods
add
fld1
cmpsb
movsl
js
mov
xchg
repnz
fwait
cmp
mov
xchg
xlat
mov
add
jne
mov
jp
out
sub
loopne
loop
decb
loopne
adcb
das
ja
ret
xchg
imul
jns
or
and
loope
lret
jbe
jo
mov
ds
and
xor
leave
pop
push
or
push
pop
fildll
cmp
js
or
mov
mov
and
xchg
push
jae
cwtl
out
dec
stos
out
jno
stc
sub
xor
test
inc
ds
or
xor
push
mov
ljmp
push
xorb
cmp
or
jp
punpckhwd
dec
cwtl
dec
pop
mov
add
hlt
or
xchg
out
clc
in
out
fiaddl
enter
pop
push
push
mov
jp
jne
lea
push
out
ret
xchg
lret
sub
push
lcall
enter
sbb
sbb
and
mov
cmpsb
and
and
inc
clc
push
xlat
and
xor
enter
rclb
xchg
popa
popf
in
cwtl
mov
mov
pop
push
inc
xchg
test
xchg
add
sbb
addr16
repz
jnp
decb
pop
and
jp
int
or
cmp
icebp
outsl
xor
lcall
xor
or
mov
ss
cmc
nop
cmp
clc
mov
mov
sub
mov
in
addr16
ss
fnstenv
pusha
push
jno
out
mov
je
and
sub
jne
in
xchg
jb
jmp
and
cmc
cmp
jne
cltd
and
mov
cltd
fstps
sysenter
fstps
push
in
mov
int3
jmp
test
jno
adcb
sub
jne
mov
push
test
jae
jecxz
lcall
xlat
sbb
xchg
sbb
push
mov
cwtl
orb
std
out
adc
push
sub
sub
adc
out
adc
adc
add
inc
mov
mov
bswap
jns
and
jmp
jp
cmpsl
fsubs
lds
jo
mov
xchg
cmp
cmp
aad
cwtl
cltd
sbb
dec
cmpsb
dec
pop
jle
adc
adc
aas
jbe
fsubrl
mov
pop
sar
sbb
iret
mov
cmc
icebp
scas
sbb
mov
add
rorl
aam
fwait
mov
cmc
fidivs
dec
mov
mov
cmp
sub
mov
mov
rolb
push
dec
sbb
sahf
icebp
xor
mov
xchg
sub
jne
jmp
mov
cmp
dec
lock
out
or
pop
adc
imul
pop
and
outsl
stos
lret
in
mov
negl
fidivs
or
jns
lret
lods
call
adc
clc
pop
or
test
out
dec
fs
pushl
lock
mov
into
pop
cmp
call
xchg
add
daa
cltd
pusha
jp
add
gs
pusha
cwtl
jo
pop
out
xchg
and
sti
cmp
sub
push
mov
das
cmp
ret
jp
sti
out
ds
pop
fucomi
es
cmpsl
jae
stc
aas
loope
mov
enter
xchg
and
in
push
call
lahf
cmp
dec
lds
or
je
adcl
sbb
or
je
cmp
clc
push
mov
xor
jp
aas
or
out
add
outsb
adcl
addr16
cmp
stc
mov
mov
sbb
xchg
popa
or
or
adc
lock
stos
mov
xchg
aas
imul
dec
inc
xor
stc
xor
add
cmp
mov
or
sbb
popa
stos
stos
and
shll
fcoms
movsl
xor
repnz
jecxz
mov
hlt
and
mov
iret
ja
mov
mov
inc
inc
jge
or
mov
sbb
dec
leave
cmp
js
popl
daa
or
ret
pop
jp
mov
push
test
jbe
push
popf
call
scas
jno
sbb
loop
mov
inc
call
out
test
jnp
sub
and
dec
or
rcrb
lret
mov
inc
aaa
push
and
ret
jnp
add
in
cmp
ss
aam
inc
sub
xchg
ret
jns
test
and
and
push
repnz
fmulp
filds
cmp
lock
xor
xor
push
aas
out
movsl
or
jmp
cmpsl
sub
sub
insl
dec
push
sub
daa
inc
dec
cmpsb
out
clc
jb
aaa
sahf
in
imull
std
lods
push
cmc
mov
push
pop
movsl
mov
test
pop
lahf
lcall
aad
pop
test
ret
addr16
shrb
scas
orl
arpl
fidivrs
or
lea
ja
sbb
sub
fldlg2
inc
fdivs
add
call
lret
pop
clc
pop
sub
cmp
mov
data16
pushf
in
or
xor
hlt
and
pop
push
add
push
addr16
push
stc
fstpl
jnp
add
in
push
jg
adc
not
push
dec
shlb
dec
sub
adc
ljmp
or
push
lods
mov
test
jns
icebp
cli
xchg
inc
mov
inc
and
shrd
and
lock
xor
mov
pop
enter
repnz
je
push
int
fs
mov
and
mov
pop
pop
inc
jecxz
push
mov
mov
add
dec
push
sbbb
jecxz
sbb
xchg
inc
mov
add
sbb
rcrl
mov
adc
aaa
pop
clc
push
xchg
out
push
aaa
test
inc
push
mov
xlat
lcall
pop
loopne
inc
xchg
fnstcw
call
xchg
daa
mov
imul
mov
adc
push
ficoms
mov
out
out
and
adc
rcll
adc
adcl
and
mov
call
xchg
pop
sbb
inc
hlt
or
in
pop
das
mov
mov
inc
jb
ror
in
out
mov
cmp
xchg
sub
or
inc
sbb
jb
fcomps
aas
js
incb
arpl
push
mov
add
add
nop
add
pop
stos
test
or
adc
inc
dec
cmp
sarb
jbe
fidivl
inc
mov
adc
xor
pop
std
mov
icebp
mov
sbb
xchg
inc
test
cmp
sbb
iret
insl
cmp
jge
test
scas
and
jno
in
aad
add
pop
sbb
and
or
in
pop
adc
adcb
push
jno
xchg
dec
dec
lods
cmpsb
mov
loope
int
cmp
mov
mov
push
enter
mov
pmaxub
ficoms
roll
aas
xor
daa
jbe
arpl
aaa
jmp
sbb
pop
sub
ret
mov
mov
cmp
cmc
adc
repz
jmp
mov
or
pop
aaa
mov
mov
xor
mov
sahf
mov
sub
fdiv
dec
int
pushf
and
repz
ds
mov
sbb
das
sub
lods
xchg
cmc
in
bound
xchg
mov
cmp
or
jl
add
sub
push
cmpsl
xchg
mov
pop
pop
add
addr16
pop
xlat
mov
in
jo
or
add
fiaddl
lock
das
repnz
mov
jae
cmc
clc
fs
add
in
jecxz
sbb
add
adc
out
in
arpl
sbb
cmp
cs
cmp
out
in
jle
pop
loope
xchg
rep
nop
jge
shlb
repz
jge
cmp
int3
addl
sub
cmp
and
jno
mov
mov
or
push
ret
leave
lcall
xchg
repz
test
ret
add
cmp
adc
stc
jmp
aam
add
movsb
xlat
lret
std
das
mov
lods
dec
push
clc
lahf
sub
test
adcw
push
ficompl
clc
fistpll
adc
xchg
jmp
lcall
xor
testb
stos
fs
adc
sub
and
jl
mov
pop
sbb
popl
and
addr16
mov
dec
cmc
cmp
cmpsl
pop
into
pop
subl
mov
cltd
out
std
jae
fwait
and
mov
cmp
mov
or
out
incb
xchg
sbb
aad
mov
mov
pusha
sbb
jg,pt
repz
sbb
pop
adc
ret
sub
lock
sub
cmp
sarl
loope
fisttpl
iret
push
imul
fcoml
jecxz
nop
pusha
gs
fs
bound
mov
cmpsb
sub
add
adcb
dec
test
mov
fs
call
test
fwait
int3
xor
pop
sbb
inc
cmp
call
xchg
sti
pop
inc
xor
sbb
push
cs
lods
push
fisubl
popa
movsb
jecxz
sbbb
pop
sbb
sbb
int
cli
shlb
sub
aam
ret
outsl
shrb
sti
fstpt
fcoml
lret
adc
cmp
rorb
push
mov
xor
xor
ror
inc
push
shlb
lods
rorl
sbb
inc
ds
shll
addb
add
js
xchg
xor
shrl
das
mov
out
sub
lahf
sbb
testb
pop
pop
hlt
pop
or
hlt
ljmp
cmovg
jg
xor
sarl
xchg
fwait
lods
pop
pop
xor
in
ja
mov
dec
pop
adc
test
and
mov
loopne
adc
xchg
mov
aam
into
sub
orl
and
xor
pop
push
cmp
push
dec
xchg
cmp
outsl
loopne
inc
push
inc
cld
mov
inc
add
mov
fiaddl
insb
xchg
mov
inc
adc
jecxz
aad
cmc
inc
push
jmp
push
mov
push
pop
xor
cld
lret
arpl
xor
mov
mov
cmp
push
or
pop
jl
add
dec
repnz
mov
cwtl
pusha
mov
push
daa
filds
pop
push
scas
and
jno
jl
pop
in
jo
mov
inc
je
into
xor
jne
mov
and
int
cmp
mov
jmp
iret
xchg
lock
stc
mov
pop
adc
in
lret
dec
jecxz
stos
cmp
cmp
xor
push
cmpsl
dec
ret
xchg
inc
pusha
mov
sub
inc
mov
xchg
jg
lahf
pop
stc
xchg
jns
lods
les
ret
dec
enter
lods
lret
pusha
jne
testl
enter
lock
xchg
mov
sbb
cmp
cmp
pushf
std
add
cmp
inc
mov
mov
push
xor
xor
cli
out
adc
dec
inc
outsb
stos
call
inc
loope
sbb
popf
jge
pop
fbstp
mov
adc
push
mov
shll
mov
jp
push
call
lock
inc
pushl
int3
inc
mov
pop
inc
push
int3
jmp
mov
gs
adc
mov
mov
in
lods
insb
xor
xchg
shrl
call
imul
sti
ret
les
pop
xor
das
popf
sbb
in
scas
xor
pop
add
cmpsb
jbe
inc
aaa
sbb
jbe
mov
insl
push
loope
popa
jg
imul
jae
xchg
xlat
mov
mov
fisubrs
pop
jb
push
subl
sarl
mov
push
jnp
sbb
push
mov
nop
daa
and
nop
cli
test
pop
iret
mov
cld
cli
mov
or
insb
sub
fcmovbe
das
rcl
out
sub
cmpsl
push
mov
out
sbb
pop
sbb
outsb
pop
jle
out
leave
xor
pop
mov
sub
test
jg
and
aaa
xorl
xchg
lahf
or
jbe
mov
daa
lcall
mov
rorb
aam
xchg
mov
or
and
dec
in
adc
fsts
test
sbb
lods
cld
ds
sti
push
scas
xchg
pop
loope
test
mov
and
xchg
dec
inc
cwtl
pop
aaa
popa
push
push
loopne
dec
add
daa
sti
idiv
and
lds
jnp
in
pushf
fistpll
inc
mov
out
dec
mov
pusha
mov
add
mov
pop
js
pushf
mov
jle
xor
xchg
push
add
jb
adc
in
test
cmovb
and
mov
adc
fs
jmp
daa
lods
les
mov
jns
mov
wrmsr
insb
pop
in
insl
jge
pusha
scas
push
push
int
scas
pop
pusha
sbb
pusha
std
add
lcall
sbb
lret
lods
dec
adc
xor
fucom
or
inc
jnp
push
negl
sbb
cmp
test
xchg
jmp
out
xchg
inc
inc
shlb
mov
aam
or
mov
pop
pop
test
xchg
lret
xchg
and
jle
pop
cmp
mov
mov
outsl
dec
mov
sbb
mov
shll
inc
and
and
push
mov
jne
dec
pop
cmp
jb
add
out
daa
mov
pop
popf
aas
xor
loopne
dec
fld
inc
fldt
jne
scas
mov
nop
mov
insl
and
jmp
inc
fsubr
pop
inc
or
xchg
pop
test
xchg
test
add
je
daa
jb
pushf
add
je
cmc
nop
mov
push
xchg
inc
adc
mov
xchg
out
jl
scas
daa
adc
rcl
add
dec
dec
mov
rclb
cmp
sub
sub
mov
lret
fidivrl
and
xor
jbe
mov
scas
cwtl
mov
dec
divb
fisttpll
sub
mov
mov
aaa
mov
call
aaa
inc
js
xchg
aad
push
sub
cmp
out
repnz
int
mov
xchg
ja
out
mov
inc
test
push
add
fcoms
shrb
das
or
in
aaa
mov
in
scas
jb
adc
cwtl
testl
lcall
and
cmc
and
cmp
ljmp
mov
cmp
inc
mov
mov
push
cmp
iret
jecxz
test
lock
cwtl
leave
popl
lahf
movl
aas
inc
cmpsl
bound
push
subb
lea
movsl
pop
pop
mov
adc
jae
jcxz
adc
mov
ljmp
mov
sbb
mov
add
xlat
je
jge
mov
or
pop
pop
dec
cs
xchg
sbb
jo
loopne
stos
mov
dec
adc
jp
out
pop
imul
pushf
outsl
or
add
inc
cmp
add
push
cltd
push
xchg
jns
int3
sub
mov
xchg
pushf
jo
sbb
jbe
xor
and
movsb
adc
push
imul
jns
dec
pop
and
rclb
outsb
scas
and
ja
jb
mov
jo,pn
lcall
movsb
outsl
jae
mov
sub
lock
xor
fnstcw
mov
fidivs
mov
mov
movsl
cmp
inc
dec
outsl
jno
stc
fildll
dec
inc
cmpsb
shll
adc
cmpsb
sbb
sbb
fnstcw
add
bound
cmpsb
icebp
jbe
aas
repz
out
jmp
movsl
daa
mov
dec
pop
insl
mov
xchg
jb,pn
xchg
aam
xchg
adc
popf
push
outsb
adc
push
push
xor
xchg
ror
inc
sti
out
jecxz
adc
cmp
lods
push
mov
mov
mov
out
push
lods
lods
push
out
sbb
cmp
pop
orl
mov
fcmovu
xchg
jecxz
mov
decl
test
add
xor
push
mov
xchg
jno
rcl
ljmp
mov
lock
cmp
push
or
xchg
mov
pop
insl
into
pop
mov
mov
jo
inc
sub
add
jns
pop
out
sub
clc
repz
sbb
imul
xor
insb
xor
inc
adc
orl
push
fsubr
jp
addr16
lret
jg
out
addb
and
xchg
push
jns
andl
icebp
jo
jle
jnp
mov
test
outsl
pop
pop
repz
lcall
stc
daa
sti
sub
push
adc
pop
add
and
dec
mov
push
or
in
hlt
sub
and
push
jbe
js
ret
lret
pop
jmp
mov
or
mov
lret
imul
push
or
inc
sub
sti
jg
xchg
das
out
mov
xchg
sub
xchg
sbb
xor
inc
xor
movaps
cmpsl
lock
lret
mov
xchg
jg
test
cmp
dec
aaa
inc
add
cmp
mov
mov
jl
jo
xchg
sahf
or
adc
mov
jnp
xor
xchg
sti
scas
gs
or
xchg
ss
movsl
sub
call
es
hlt
sbb
fidivs
loopne
in
iret
cmpsb
ret
je
ljmp
test
dec
push
xor
or
sub
ds
mov
cmp
mov
in
jmp
add
cmc
pop
sahf
test
mov
mov
sbb
adc
mov
pop
xorl
test
sahf
movsb
je
or
pop
lods
xchg
mov
cmpsl
test
jns
xchg
push
or
in
ret
and
jnp
int
lea
xchg
lods
cld
lcall
outsl
pop
orw
mull
pop
addr16
jmp
xor
xor
xor
in
test
xor
ljmp
cmp
hlt
mov
lcall
repnz
imul
data16
ja
fimull
das
outsb
xchg
add
pop
std
stos
jns
js
xor
cmp
subl
xor
xchg
scas
mov
sti
xor
and
inc
jecxz
shl
jg
in
push
xchg
cld
cmpsl
fisttpl
or
int
sub
and
scas
ja
aad
inc
add
mov
mov
sub
cmpsl
lods
cmp
sarl
fcmovnbe
pop
pop
mov
pop
rcr
mov
mov
cmpsl
pusha
and
xchg
xor
pop
pop
pop
jnp
enter
imul
in
add
pop
add
shrl
lods
mov
mov
jle
fildl
cmpsl
xor
cltd
pop
vpsubusb
sbb
daa
xchg
xor
cli
sub
cs
sub
bound
into
shrb
insb
pop
push
je
inc
jne
or
xchg
sub
cli
jnp
push
cmc
mov
sub
je
xor
mov
in
dec
bndstx
pop
repz
mov
icebp
xchg
mov
bswap
mov
loopne
push
clc
rcr
and
pop
repnz
jmp
jae
sbb
fcomps
mov
repz
pop
iret
inc
inc
cmp
lods
dec
mov
or
cmp
out
dec
sub
faddl
rorl
jg
mov
or
jp
mov
and
movsb
test
nop
mov
pushf
aam
pop
popa
jb
mov
cwtl
mov
jns
xlat
fnsave
xor
push
aam
popf
and
adc
fstp
daa
test
add
jo
mov
adc
jge
cmc
adc
mov
ds
or
data16
mov
jnp
icebp
push
out
mov
push
adc
fwait
sub
mov
push
gs
adc
fsub
sub
dec
faddl
fsubs
out
mov
pop
fimuls
ss
push
add
or
push
icebp
sbb
push
lock
movsl
in
shrl
insb
pop
inc
cmp
outsl
or
sahf
loope
mov
loop
icebp
adc
dec
adc
push
jne
loopne
fstl
loope
jp
mov
and
xchg
aaa
sub
not
push
add
xor
add
test
sbb
scas
jecxz
mov
push
lea
push
push
leave
lret
mov
imul
pop
stos
push
sbb
fsubr
mov
mov
scas
sti
or
data16
add
and
ljmp
es
int3
inc
hlt
sub
xchg
clc
jge,pn
lcall
shlb
lcall
or
rorb
adc
pop
test
iret
incl
inc
jns
cmpl
push
dec
in
jg
mov
or
push
or
stos
pop
hlt
mov
and
cwtl
push
and
out
add
fstps
inc
add
add
jp
pop
or
clc
mov
imul
mov
test
ret
mov
dec
pop
icebp
out
xor
cmp
mov
lret
stos
mov
sbb
push
aad
add
aad
jno
mov
test
in
jg
cwtl
or
pop
pop
pop
sub
sti
mov
int
pop
xor
mov
inc
fs
ret
mov
inc
add
leave
js
and
mull
stos
repz
jne
mov
fdivrs
pop
cmp
push
adcb
xlat
imul
xchg
dec
push
cli
outsl
pop
push
xchg
mov
and
dec
mov
or
xchg
test
shl
outsl
stos
data16
test
arpl
pop
cmp
and
adc
push
dec
cmc
push
mov
fisubl
push
xchg
jmp
ffree
out
repz
xlat
test
mov
mov
xchg
gs
or
orl
push
add
pop
cmp
lret
mov
push
sbb
aam
jns
jno
repz
xchg
adc
lret
adc
adcl
stc
xchg
pop
mov
xchg
scas
pop
sbb
fdivrp
mov
fstps
jge
jle
out
xchg
in
pop
xchg
and
nop
jle
push
mov
push
jbe
repz
mov
out
hlt
push
cld
xor
int3
ljmp
pop
mov
lods
ret
int
ja
jmp
mov
pop
mov
shlb
ja
add
dec
xor
gs
ficompl
xchg
adc
cmpsb
test
push
mov
iret
push
or
lret
sbb
jmp
jg
dec
cmp
addr16
in
xorb
test
sbb
mov
movsb
or
hlt
sub
movsl
stc
in
jae
adc
and
adc
lods
add
jl
test
jne
nop
test
cmc
dec
mov
iret
popf
aas
mov
xchg
lcall
or
add
pop
insl
adcl
dec
loop
dec
pop
aad
adc
push
stc
cmp
fldt
pop
sbb
jg
mov
or
cmpsb
fdivrp
cmp
dec
mov
xchg
imul
nop
shlb
jo
or
notb
stos
scas
sbb
ds
std
dec
sub
cmp
cmp
ret
lods
cmpsb
mov
pushf
jle
ret
stc
lock
outsl
shll
jb
sbb
ret
loope
hlt
cmp
pop
add
xor
cltd
xor
stos
dec
mov
dec
fscale
lret
fildll
jmp
pop
jecxz
sub
outsl
add
cmp
jge
imul
jg
aad
mov
push
loopne
dec
add
ljmp
dec
les
int3
push
fwait
sbb
das
dec
arpl
pusha
or
loop
pop
push
xlat
xor
and
sbbb
mov
jns
sbb
jne
shrl
xor
inc
sbb
mov
and
jae
faddl
and
xlat
push
xlat
les
cmp
ret
push
jno
adc
lsl
fisubrl
divl
inc
mov
shr
das
dec
dec
es
mov
insl
bound
into
out
divb
add
arpl
sub
xor
mull
xor
fs
dec
pop
cs
popa
cmpl
shrl
fidivs
xchg
and
dec
divb
out
add
shll
push
popf
push
in
outsb
into
test
mov
leave
test
inc
push
mov
fidivrs
mov
jg
sbb
sub
adc
gs
ret
clc
cmp
push
adc
out
cli
adc
jge
enter
or
inc
andl
and
add
push
lods
and
lock
xchg
push
stc
mov
adc
fdivrs
cmp
push
mov
mov
cwtl
jne
fwait
add
add
fisubrs
push
adcl
andb
leave
push
lahf
ljmp
sbb
test
jmp
xor
push
enter
bound
mov
push
data16
add
orb
aas
aaa
outsb
int3
pop
adc
jmp
and
push
enter
lret
imul
scas
test
adc
mov
or
mov
sub
inc
lahf
pop
fldcw
dec
sub
std
cmpsb
and
rorb
xor
push
dec
dec
xchg
adc
movsl
sub
jnp
int3
fst
or
ss
imul
cmc
adc
push
dec
in
mov
jne
push
mov
ret
jbe
push
sbb
sbbl
lret
enter
pop
in
add
repz
add
inc
outsb
jg
sti
in
pop
cltd
fcompl
xchg
mov
rcrl
adc
adc
icebp
addb
ja
mov
jge
sub
sbb
stos
and
and
pop
jne
mov
int
jnp
and
mov
sbb
or
mov
mov
int3
ud2
lock
nop
popf
adc
fists
adc
in
in
mov
pop
out
push
mov
xor
and
inc
dec
rol
pop
sbb
fcmovb
les
filds
or
inc
pop
js
rcrl
mov
inc
inc
cmp
pop
jno
not
out
and
ja
jnp
push
call
add
bound
or
inc
jle
adc
fsub
out
loopne
inc
or
adc
idivl
and
repnz
mov
mov
or
jmp
mov
push
xor
fldt
shl
or
or
mov
js
aam
xchg
or
imul
das
push
vcvtsi2ss
dec
or
mov
icebp
push
lds
fcoms
cld
gs
mov
inc
jns
add
pop
fnstcw
shll
push
rcr
bound
lods
ret
pop
popf
test
cmpl
loope
mov
xor
insb
icebp
cmp
mov
inc
mov
bound
xchg
add
sbb
inc
jp
jl
mov
push
std
sub
mov
jg
pop
pop
subl
push
or
int
jp
pop
jle
mov
and
lret
mov
jl
out
push
in
dec
fs
das
out
add
mov
cli
pop
jp
or
int
adc
inc
stc
push
add
lahf
xor
and
stos
aaa
rcrb
add
mov
lahf
aam
stos
xor
dec
add
xor
cmp
dec
sbbl
shll
fisttpll
push
xor
jle
lock
xor
cmp
fdiv
mov
jp
jge
ja
mov
mov
inc
sbb
test
mov
pop
movsl
mov
ljmp
std
inc
jb
addr16
in
push
icebp
bswap
dec
in
xchg
outsb
lods
inc
stos
inc
popf
xor
add
add
popf
cmp
sbb
or
mov
sbb
lret
mov
out
imul
sahf
xor
popa
mov
call
mov
or
fmulp
jge
mov
das
xor
jp
adc
ret
pop
aam
in
addr16
xchg
adc
cmp
push
rorl
scas
jb
lcall
jge
jns
je
xlat
mov
fs
sub
xchg
subb
xor
xchg
pushf
lcall
test
nop
loope
fsubs
jmp
test
lods
outsl
fiaddl
cmp
out
jo
jg
jo
pop
add
test
pop
xor
inc
fsub
sbb
ficomps
add
bound
fcompl
pop
xchg
repz
sahf
test
or
mov
and
fldcw
and
ss
or
fimull
push
add
jae
adc
or
mov
push
jae
repnz
dec
shrl
scas
repz
je
sub
sarb
stos
jbe
cwtl
mov
daa
xor
inc
cld
repnz
pusha
inc
cmpsl
xchg
xchg
adc
push
ret
gs
sub
fsubs
call
pop
mov
push
stc
pop
in
mov
xor
inc
popf
pop
fstl
fcoms
pop
aas
lods
lcall
sahf
fisttpll
and
ret
pop
or
aam
dec
arpl
dec
fwait
dec
inc
fcomip
adc
clc
and
xchg
mov
jge
das
push
cli
mov
sti
sub
add
pop
push
adc
mov
jne
popl
pop
mov
sbb
sbb
cmp
scas
mov
dec
xchg
cltd
push
out
lret
repnz
or
add
pushf
int
aas
ds
adc
sbb
ret
fmuls
cmpsl
imul
mov
add
nop
sub
cmpsb
cmpsl
test
push
xchg
sub
pushw
pop
pop
sbb
insb
cltd
mov
mov
or
mov
push
pop
push
loope
jmp
and
popf
mov
mov
adc
xchg
jnp
add
push
push
inc
mov
int3
cli
jb
pop
pop
lods
sub
imul
js
jl
adc
or
insb
xchg
mov
inc
jp
mov
mov
fisubl
mov
push
jo
icebp
or
jle
pop
in
fidivrl
cltd
xchg
lds
fdivrs
jno
push
mov
pop
aam
std
xchg
out
test
xor
cs
gs
jo
mov
lahf
mov
std
js
sbb
popa
cs
clc
int3
jb
inc
sahf
mov
mov
scas
adc
mov
insl
adc
shrb
out
aas
ljmp
jl
cmp
das
enter
vunpckhps
test
pop
sub
xor
xchg
shl
push
icebp
xor
dec
cwtl
mov
sbb
outsb
jae
xor
add
fsubrl
dec
out
jne
sarb
xor
xor
test
push
out
sarl
dec
xchg
dec
in
fidivrl
subb
pop
cmp
inc
loop
jge
pop
aas
mov
xchg
or
mov
jne
inc
clc
xchg
jge
stos
stc
mov
addr16
add
add
and
pop
xlat
mov
cli
add
mov
pop
in
xor
jb
add
outsb
or
xchg
cmp
js
clc
mov
sbb
loopne
into
mov
testl
sahf
push
sub
das
pop
push
fistps
pop
repz
adc
sbb
sbb
cmc
insb
incl
test
xor
ss
mov
sbb
mov
add
arpl
fmul
pop
cmpsl
out
in
fistpl
ljmp
xchg
xlat
icebp
and
lods
std
pop
mov
mov
and
nop
movsb
adc
jo
and
fisttpll
mov
in
fmul
add
scas
pop
insl
es
xor
cmp
test
adc
js
sbb
adc
sbb
loop
push
inc
mov
into
add
filds
adc
in
lea
fs
jle
mov
mov
outsb
push
in
mov
notl
lods
push
adc
xor
and
fwait
inc
js
sbb
mov
sbb
sbb
cmp
out
or
cmp
xor
mov
mov
pusha
dec
add
or
js
bound
mov
dec
sbb
and
pop
jae
insl
jge
pop
sub
mov
add
jmp
mov
adc
int3
xchg
repz
icebp
jbe
jp
push
push
rcll
sahf
cmpsl
aad
mov
jmp
cltd
nop
sub
mov
xchg
pop
jne
idivl
jecxz
outsb
out
dec
xchg
bound
mov
push
xchg
lcall
adc
mov
xor
push
inc
and
sub
loope
mov
das
loope,pt
fisubs
push
sbb
stos
sub
pop
sub
imul
mov
inc
mov
add
test
out
fisubs
push
je
sbb
fisubrs
push
or
xchg
outsl
inc
pop
icebp
and
or
sbb
mov
xlat
xchg
sbb
push
mov
idivl
loopne
push
data16
mull
mov
retw
adc
adc
jg
gs
dec
ljmp
sbb
jle
daa
nopl
mov
pop
lods
push
push
or
data16
add
mov
or
int
adc
ljmp
and
pop
adc
out
mov
pusha
inc
andl
or
in
fidivs
shl
sti
jae
mov
push
aad
push
push
in
mov
jae
scas
pop
pop
sbb
mov
aam
std
loopne
adc
sub
ja
outsl
fsubrl
shll
sub
mov
adc
and
test
iret
jg
out
xor
and
loope
inc
mov
pop
inc
fdivs
test
mov
pop
dec
sub
out
inc
push
and
mov
xchg
fsubs
sub
mov
repnz
clc
fcoms
xlat
enter
mov
in
packsswb
mov
lahf
ja
mov
js
push
push
inc
rcll
xchg
sub
xlat
call
mov
fdivrl
sbb
xor
mov
dec
sub
in
jo
jge
inc
or
dec
mov
ret
in
jg
and
push
lret
orl
movsb
push
jb
xchg
pop
cmp
and
dec
outsb
adc
test
add
flds
js
mov
loopne
xchg
loope
jb
inc
hlt
xchg
push
shrl
frstor
add
sahf
jle
pop
das
xchg
add
mov
dec
mov
sbb
jl
xchg
outsb
je
into
out
mov
stos
pop
cmp
arpl
sahf
xor
sahf
push
enter
je
pushf
movsl
or
and
mov
jnp
xchg
adc
lock
jb
sbb
fwait
mov
cwtl
roll
sbb
and
gs
mov
fs
adc
jbe
push
es
push
dec
stc
sub
jnp
mov
mov
or
out
jb
dec
hlt
xor
xor
sub
inc
adc
movsb
test
sub
in
adc
mov
int
mov
push
cmpsb
mov
push
fs
xchg
dec
cs
mov
xor
scas
cs
lret
add
out
sti
shrl
je
imul
aam
pop
shl
lret
fisubl
mov
jb
mov
pop
mov
in
jo
aam
sub
mov
push
mov
rcrb
scas
jnp
pop
lods
fisttpll
nop
dec
js
sub
stos
mull
xorb
inc
push
fldt
jp
push
sbb
sub
xchg
adc
mov
pop
sbb
adc
adc
pop
mov
icebp
xor
cmp
cld
pop
pop
pop
out
mov
scas
std
sbb
addr16
packuswb
mov
les
push
fs
stos
adc
arpl
mov
xchg
mov
pop
pop
xor
lock
mov
jne
pop
repnz
sbb
cltd
xchg
xlat
sarl
outsb
ds
sub
shlb
insl
ret
sub
stc
arpl
vpsubusw
stos
rol
imul
test
sbb
cmpsb
jns
pop
add
insb
inc
add
mov
loopne
out
gs
sub
mov
loop
push
mov
pop
cmp
push
sub
jns
test
and
jl
adc
jno
loop
into
lods
pop
jmp
xchg
xchg
je
dec
das
mov
addl
movl
gs
jnp
add
mov
sub
sbb
push
cmp
shl
sbb
xchg
mov
sahf
jecxz
or
or
xor
outsb
jnp
pop
mov
or
add
add
sub
mov
pop
pop
push
mov
repz
leave
inc
mov
push
repz
enter
nop
push
inc
daa
cmpsl
insl
and
xchg
mov
or
sub
js
insb
test
jge
loope
jmp
cmp
repz
outsl
push
push
int3
adc
push
pop
pop
xchg
repz
inc
loop
mov
mov
int
mov
bound
movsl
fildll
popa
sbb
pop
int
outsb
enter
mov
or
lds
mov
into
mov
cmovle
out
mov
pop
sbb
icebp
pop
mov
ucomiss
leave
xor
push
hlt
stos
sarl
mov
dec
in
push
in
test
outsl
stos
cmc
mov
or
push
push
cwtl
cmpsl
punpcklwd
das
cltd
lods
sub
rcl
xor
mov
pusha
stc
call
jle
mov
push
cmpsl
loopne
cmc
xlat
aaa
std
xor
jno
add
xchg
jge
mov
in
popl
frstor
or
xor
cmp
fldenv
sbbl
add
xchg
xchg
sub
mov
xchg
daa
dec
cmp
pop
int3
imul
jmp
push
outsb
jl
xchg
cltd
cld
jmp
jae
or
mov
push
scas
jg
js
pop
vphaddwq
out
repz
mov
ret
test
cmpsb
adc
pop
enter
mov
sub
dec
inc
jp
adc
loop
adc
gs
fcmovnbe
mov
jnp
je
insl
cmp
insb
push
cmpsb
dec
icebp
loope
insb
jl
adc
rorb
sub
rolb
ljmp
cld
pop
jmp
adcb
addr16
pop
ja
int
rcrb
loopne
inc
push
int
clc
xor
cli
sub
imul
sub
int3
stos
aad
xchg
jno
cltd
mov
in
js
into
mov
in
dec
loope
fimull
mov
pop
xor
std
cmc
loop
pop
dec
sahf
outsb
adc
loop
insl
fidivs
ret
mov
push
inc
fldt
inc
push
data16
mov
addb
jge
cmc
lcall
cmp
stos
cmp
ficoml
int3
jl
jmp
cmp
loopne
inc
mov
insb
mov
adc
in
fwait
dec
mov
in
xor
sarb
mov
inc
and
cmp
orl
jmp
mov
insl
xchg
pop
ret
cmp
jl
in
xor
in
or
and
sub
hlt
jno
xchg
sbb
sti
xchg
and
dec
into
mov
lods
xchg
pop
outsl
sbb
into
out
cmc
loope
rol
jb
scas
pop
dec
jo
xchg
int
sahf
leave
lods
mov
push
xchg
dec
and
outsb
inc
leave
xchg
mov
in
mov
mov
insb
test
lds
in
mov
mov
cwtl
ret
sub
out
xlat
cli
push
cmpsl
out
push
loope
dec
sub
clc
fsubp
andl
nop
sbb
out
fidivl
mov
sbb
jmp
dec
xchg
pushf
or
aam
cwtl
inc
or
mov
pop
pop
insl
sti
aaa
xor
or
xor
sarl
mov
les
push
jl
and
jecxz
add
mov
ljmp
cli
das
test
mov
add
jg
or
mov
and
push
ljmp
daa
jae
cmp
or
inc
pushf
stc
stc
push
add
push
test
ds
int3
cwtl
int
lret
push
out
sub
adc
fnsave
add
mov
xchg
pop
xchg
push
test
data16
cmp
mov
insb
cmp
mov
adc
lret
hlt
ficompl
add
push
iret
mov
fwait
ds
jbe
insb
sahf
sub
adc
mov
in
sbb
sub
ret
shrl
cmc
cmp
mov
jmp
adc
ficoms
js
sub
or
roll
adc
sub
sub
test
push
ret
inc
mov
cmc
cli
cli
dec
cmp
mov
xor
cmc
mov
ds
pop
repnz
aad
repz
cmp
pop
lret
fnstsw
call
int3
out
sahf
push
sbb
pop
lds
dec
insl
xor
mov
aas
scas
mov
mov
cmp
fmull
and
leave
jae
sub
add
mov
cmpsb
xlat
mov
mov
push
sub
jmp
insl
mov
inc
jns
enter
or
push
push
sub
imul
xchg
xor
xchg
fnstenv
pop
ficoml
push
push
jmp
adc
orl
jle
nop
pop
je
push
xchg
sbbb
je
ret
stos
xchg
mov
mov
mov
xor
mov
mov
mov
add
into
dec
test
or
and
add
mov
cmc
cmp
fcom
mov
mov
pop
mov
add
jmp
jg
shlb
xchg
dec
rcll
adc
nop
lock
cli
mov
mov
fimuls
add
iret
sub
fisubrs
int3
decl
and
mov
mov
xchg
mov
ja
xchg
btr
insl
adc
aas
scas
jge
push
js
test
add
popf
sub
add
ds
pop
or
and
outsb
mov
pop
fcmovne
push
pop
mov
outsl
imul
pop
cmc
inc
xchg
test
jle
es
shlb
adc
sbb
xor
mov
mov
dec
add
xchg
jnp
bound
or
push
ss
out
jle
jae
nop
mov
mov
mov
cmpsb
jnp
adc
cmp
in
add
nop
mov
aas
je
xchg
in
pop
push
push
outsb
and
jge
out
popf
ret
jmp
and
repz
xor
fwait
out
sub
rcr
jno
mov
cmp
or
pushw
pop
loopne
and
jae
push
insl
fs
int
ret
cli
xor
push
movsl
fdivs
dec
or
inc
push
dec
out
push
jp
sbb
or
adc
push
push
cmp
imul
adc
push
lcall
and
mov
xchg
sub
push
aam
jp
and
ja
loope
aam
pop
loop
cmp
mov
xorb
cld
scas
adc
mov
sbb
loop
mov
mov
pushf
cld
xor
push
push
sbb
pop
cs
pop
out
fwait
dec
ficoml
ret
lods
mov
xor
out
out
fldl
repnz
mov
in
lea
mov
adc
cltd
mov
iret
and
nop
or
xlat
xchg
and
fdivl
adc
test
ja
fisubrl
dec
adc
add
in
adc
pop
sbb
je
and
testl
pushf
mov
lret
es
cmpb
push
cmp
jo
push
lret
cmc
cmp
or
push
ret
ficomps
sbb
out
enter
jnp
pop
mov
pop
mov
bswap
subl
lods
std
mov
sub
mov
adc
negl
add
hlt
js
das
cmpsl
pop
fsubl
shl
push
jbe
pushf
out
xor
sahf
cmp
test
mov
jg
cmc
jb
dec
jmp
out
jmp
pop
test
cmp
sub
add
cmp
scas
shrl
fsincos
loop
lock
cmp
push
adc
adc
jl
es
loope
sub
xchg
add
aam
adc
adc
stc
sbb
sbb
fs
pop
pop
push
lret
pusha
lahf
jp
hlt
jbe
and
shll
push
rcrb
mov
add
or
xor
out
sbb
dec
push
rorb
jb
mov
push
push
flds
mov
fadds
mov
xchg
push
pushf
sub
sub
jbe
sub
rolb
test
scas
fs
cmp
xor
xor
adc
lahf
movq
pop
fadd
sahf
xchg
push
mov
xchg
imul
jl
nop
cmp
inc
pusha
xchg
ds
out
cltd
dec
lret
jmp
imul
or
orl
xchg
loop
jno
mov
aad
pushf
or
jne
fdivl
and
fldcw
lahf
jecxz
les
subl
cwtl
lock
xor
stos
imul
js
xor
cmp
dec
push
dec
cld
fisubl
xor
xchg
std
sub
mov
imul
xor
mov
movsl
cmc
xchg
inc
pushf
lods
test
lods
les
pusha
mov
adc
loop
negb
clc
adc
pop
hlt
jmp
in
adc
mov
mov
adc
pop
lret
mov
dec
sarb
xchg
or
daa
dec
int3
push
pop
and
daa
xchg
out
mov
mov
xlat
push
outsl
out
mov
pop
iret
sub
mov
lcall
push
pmaddwd
or
xchg
pop
xor
jbe
xlat
push
cmp
gs
in
mov
ss
cs
xchg
bound
dec
lahf
pop
sbb
out
dec
pop
jge
in
stos
pop
test
in
shll
push
fs
mov
xlat
pop
in
insl
shlb
and
or
lea
dec
insb
mov
xor
lea
ss
cmp
or
clc
and
mov
ljmp
pop
lcall
fisubs
mov
mov
int3
js,pt
cs
iret
rcrb
push
dec
test
ss
lods
mov
ljmp
jbe
cmp
adc
subl
lock
lods
mov
mov
jp
lret
inc
or
jecxz
jnp
xlat
shll
xor
bound
dec
loopne
push
cmp
push
aam
icebp
mov
repz
shlb
lret
dec
push
pop
lahf
pop
dec
cmp
pop
cmpsl
push
nop
popa
dec
loop
xchg
ret
adc
add
sbb
fld
lret
fsts
jae
outsb
jne
push
arpl
xchg
gs
sbb
pop
xchg
repz
outsb
andb
or
ds
leave
ss
pop
das
clc
dec
add
icebp
sti
mov
sbb
or
jno
popf
jl
add
xchg
insb
cs
repz
inc
push
mov
mov
inc
popa
push
cltd
jbe
loop
pop
and
sbb
xchg
cmp
pop
xor
repnz
adc
add
es
or
rcrb
in
xchg
xchg
rolb
movsl
pop
sub
stc
pop
mov
out
pop
xchg
mov
xchg
js
lret
xchg
cmpsb
cltd
insb
jmp
fwait
stos
insl
mov
push
or
and
inc
aad
scas
push
inc
mov
push
movsb
pop
mov
push
lret
std
divl
adc
adc
cmovp
push
test
loopne
adc
cmpsl
sbb
je
cli
lea
test
mov
xchg
mov
dec
mov
in
cmpsb
jecxz
or
sub
pop
filds
int3
fwait
sarl
loope
cld
out
mov
dec
jecxz
add
push
mov
jno
or
sub
adc
dec
rcrb
js
and
jmp
push
sub
loope
jmp
mov
fsts
inc
cmp
mov
xlat
mov
shr
and
mov
daa
sbb
cli
pushf
mov
push
cld
test
mov
xor
and
inc
inc
ljmp
fsts
insb
sbb
jle
adc
lret
int3
sbb
inc
xchg
ds
mov
xchg
mov
push
xchg
cmpsl
add
stos
lret
rolb
dec
pop
xor
lahf
lcall
js
clc
mov
sub
mov
cmc
and
fsubl
jmp
push
sub
xchg
add
repnz
and
sub
xchg
mov
inc
sbb
pop
jne
loopne
les
cli
or
aaa
mulb
sbb
decl
imul
aas
or
add
into
mov
and
popa
push
les
xchg
cwtl
xchg
sbb
jl
add
adcb
js
aas
inc
scas
and
dec
fwait
mov
js
dec
jne
out
into
or
add
rcrl
and
adcl
aam
mov
mov
push
sbb
dec
adc
movsl
into
mov
xlat
fxam
push
roll
sbbb
in
aaa
cmp
sub
xchg
inc
js
iret
push
je
xchg
fldenv
fdivrs
xchg
dec
int3
adc
mov
xor
push
test
popa
or
repz
cmc
cmp
fdivl
dec
cmp
repnz
lods
push
jno
loopne
fcmovu
scas
insb
lret
jecxz
add
sbb
leave
lea
popa
aas
push
cmpsb
push
xor
cmp
push
les
or
and
sbb
ret
xchg
test
shlb
dec
cwtl
hlt
inc
or
xorb
decl
fnstcw
fxch
mov
fcmove
mov
nop
addr16
mov
xchg
mov
mov
sahf
push
mov
call
inc
fdivl
sbb
sarb
fucomi
xor
andl
das
adc
mov
mov
shrl
imul
movl
out
cld
sub
pop
mov
into
jnp
add
mov
jae,pn
in
push
push
xor
faddl
cmpsl
add
dec
xchg
pop
mov
dec
sub
shll
mov
popf
mov
sbb
test
push
fcmovne
sbb
testb
and
cmova
jne
sub
sbb
scas
ficomps
sbb
sti
mov
dec
notl
inc
repz
mov
inc
or
test
test
mov
inc
dec
push
push
sbb
ja
sub
cmp
lds
sub
push
jbe
test
cltd
lret
xchg
dec
nop
mov
repz
fxch
mov
cli
mov
xlat
cmp
ds
leave
lea
cmc
cmpsl
cmc
mov
dec
dec
dec
cmp
iret
cmp
push
mov
nop
aas
pop
aad
inc
add
pop
xlat
pop
scas
inc
xchg
scas
jle
pushf
inc
insl
dec
cs
mov
je
out
or
jno
lahf
movsb
or
cmp
cmp
mov
push
add
sbb
sub
dec
pusha
add
mov
mov
xchg
out
ret
sbb
cld
lock
or
pop
iret
xor
lret
imul
out
cld
incb
lods
scas
stos
loope
push
arpl
movsl
xorl
pop
inc
pop
add
arpl
inc
fdivrl
pop
mov
mov
andl
mov
or
cmp
test
sub
daa
cmp
ja
int3
sbb
je
ss
test
push
sub
adc
jno
call
cmp
pop
cmpsl
stc
cltd
adc
push
or
es
xlat
lods
sub
mov
daa
data16
and
mov
ret
dec
xchg
out
ss
stc
cmpsl
cmpsb
cmp
sahf
aas
mov
movsb
or
push
loope
rorb
inc
mov
jne
scas
std
mov
cmc
jae
fldenv
xor
sub
adc
js
out
add
ja
mov
out
xor
lret
push
cvtpi2ps
call
mov
push
mov
mov
test
shlb
adc
insl
add
mov
jmp
mov
cltd
and
cld
xchg
mov
sbb
aas
mov
mull
ljmp
int3
sti
fnstcw
pop
xchg
dec
jle
mov
push
out
das
loop
xchg
sub
push
outsb
pop
and
xchg
dec
sbbl
bound
dec
pop
sub
inc
test
lcall
aad
dec
dec
jae
inc
mov
fdivr
lret
mov
push
js
jno
dec
mov
lret
xor
repnz
jle
or
daa
icebp
std
adc
in
inc
leave
dec
mov
dec
jle
rorb
int
std
iret
pop
push
jle
fwait
hlt
out
movsl
in
js
into
cmpsb
xchg
shlb
enter
dec
loope
outsl
mov
rcll
aad
jbe
ljmp
xchg
lods
je
adc
pop
fildl
out
jae
adc
out
push
gs
imul
je
inc
jae
xchg
push
adc
xor
in
sarl
push
xor
xchg
mov
dec
or
jecxz
lods
push
fldenv
dec
xorl
push
or
mov
rclb
repz
xorl
ret
push
dec
inc
inc
sti
cmp
je
incl
idiv
call
mov
push
js
sbb
mov
cmpsb
or
lods
rcr
and
andb
mov
outsb
mov
pusha
test
les
or
nop
in
or
cld
sub
inc
out
push
cmp
inc
fcmovu
into
mov
jne
out
and
push
fldenv
and
mov
add
jo
pushf
jecxz
mov
xor
mov
pop
rcl
lds
sbb
test
mov
movsl
add
push
outsl
arpl
lea
insb
je
in
outsb
repz
stos
arpl
iret
push
pushf
inc
pop
cwtl
jb
xchg
rorb
add
scas
mov
xchg
lods
aam
pop
ret
mov
mov
mov
sub
xchg
mov
aas
cli
inc
mov
push
push
or
mov
cmc
sub
jae,pt
in
cli
popf
pop
addl
addb
ror
jle
xor
and
lods
mov
in
shll
icebp
push
add
lds
push
ljmp
leave
add
rcrl
and
sub
cmp
popf
loop
and
add
es
mov
sahf
les
enter
xor
aam
iret
nop
scas
scas
rol
mov
mov
mov
or
jge
cs
out
lods
cli
mov
aas
pushf
mov
scas
call
push
xchg
sahf
lcall
xchg
lods
jns,pt
push
mov
and
inc
insb
jg
adc
sub
sub
scas
aas
sbb
cmpsb
mov
push
int3
mov
int
mov
scas
nop
cmp
push
stos
cmp
inc
inc
lods
repz
insl
cwtl
scas
xor
scas
push
stc
cmp
lret
xorb
stos
inc
iret
inc
out
outsb
mov
jp
push
dec
cmp
mov
stos
xor
add
lea
leave
clc
dec
jae
jmp
or
lret
lahf
scas
pop
lret
jnp
addr16
in
leave
push
jp
outsb
fidivl
int3
xchg
movsl
rclb
fsts
mov
rcr
stos
sub
sbb
sbb
add
out
and
repnz
mov
cmp
xor
and
ds
mov
out
imul
enter
push
push
xchg
aad
outsb
pusha
push
pop
and
xlat
add
sbb
cld
stc
lret
shlb
mov
icebp
in
aaa
xor
jbe
and
push
sub
inc
jmp
imul
mov
bound
mov
popa
dec
jl
cs
ret
inc
jecxz
std
jnp
inc
pop
sub
sub
je
xlat
cld
jb
out
inc
jae
arpl
xorb
pop
mov
sbb
jl
xchg
sub
popf
mov
or
add
jae
insl
jg
repnz
xchg
fistpll
add
pop
adc
es
mov
jae
cld
aas
pusha
adc
inc
sub
mov
hlt
sbb
lahf
inc
ds
pushf
pop
xchg
or
mov
and
lods
aad
imul
ss
and
popf
adc
xor
mov
rorl
mov
adc
stos
jnp
sbb
mov
rclb
or
pop
and
inc
lcall
addb
sahf
lods
cwtl
cmp
out
call
xor
inc
add
movsl
ffreep
test
and
hlt
ret
out
push
xchg
pop
jns
sbb
pop
wrmsr
jb
fninit
add
xchg
enter
int3
je
lret
pop
popf
jecxz
pop
adc
xchg
mov
ror
cwtl
ficomps
js
lcall
mov
insl
or
cmpsl
push
sub
mov
cwtl
pop
mov
pop
arpl
or
add
jle
mov
and
sti
add
sub
xor
bound
outsl
cmc
mov
push
dec
idivb
cmpsb
pop
lods
push
mov
sub
push
ss
jb
movsb
xor
or
test
xchg
pop
out
add
adc
fwait
ljmp
push
je
push
das
cld
sbb
bound
add
popl
jecxz
jo
loop
and
sbb
pushf
mov
imul
psadbw
pop
pop
sub
jg
out
pop
push
lods
add
or
aad
and
es
icebp
jno
adc
test
push
aam
comiss
mov
xchg
dec
cmp
add
ja
nop
inc
btr
cmp
icebp
ss
xor
push
jnp
popf
lea
pop
rcrl
call
out
xchg
ret
jl
pop
fnstcw
mov
mov
je
inc
jl
dec
out
out
jge
imul
jbe
in
push
adc
into
incb
das
push
cmp
xor
cmpsb
out
ljmp
frndint
xor
lret
icebp
aaa
sub
add
inc
es
adc
cltd
mov
cli
movsl
loopne
pop
push
cli
hlt
shrb
out
lds
mov
rorb
icebp
mov
sahf
ret
cmpsl
mov
into
and
incb
movsb
jl
adc
scas
sbb
add
test
dec
lea
or
clc
in
xor
cmpsl
aas
imul
cs
mov
inc
xchg
test
adc
cmp
adc
lods
in
mov
ljmp
dec
shll
pop
dec
inc
cwtl
xor
jmp
lods
test
lahf
inc
sub
ficomps
ss
inc
add
scas
xchg
test
out
pop
lods
pop
fildll
xor
arpl
inc
pop
push
add
jl
or
pop
cs
add
enter
xor
lret
imul
xchg
jg
ffree
scas
jmp
adc
arpl
int3
addb
stc
hlt
test
pop
mov
test
mov
sub
mov
out
aas
loopne
out
mov
or
xchg
je
jmp
xchg
xchg
sub
pop
adc
insl
push
pop
fisttps
xor
mov
add
in
dec
xor
inc
mov
insl
adcl
fildl
clc
push
mov
icebp
dec
jo
ret
shl
dec
outsl
daa
add
cmc
imul
adc
fdivp
ss
jb
xchg
dec
and
jle
cld
jae
testl
mov
ss
sbb
sbbl
cwtl
ss
jno
pusha
adc
sub
pop
push
dec
xor
and
mov
dec
mov
cmc
xchg
jge
and
xor
xor
pop
out
push
mov
mov
adc
mov
push
and
jmp
sub
mov
mov
mov
sub
mov
scas
pop
cmpsl
mov
adc
dec
mov
mov
jne
pop
out
and
xor
ret
ret
sti
push
mov
xchg
adc
test
repz
mov
inc
inc
ffreep
and
sbb
ret
add
mov
jo
inc
dec
mov
loope
xorb
lret
mov
mov
adc
mov
mov
jmp
shr
lods
shlb
push
xchg
mov
push
enter
lret
inc
jg
pop
push
xchg
scas
sahf
test
cld
hlt
or
out
push
cmp
inc
rcll
xchg
cwtl
mov
fidivl
cmp
int
aaa
adc
mov
out
push
subl
movsl
jl
jmp
sahf
jb
xchg
insl
push
jae
push
ret
enter
cmp
ja
pop
jns
mov
and
sub
pushl
divl
outsb
push
int3
scas
jp
cmp
std
scas
cmp
pop
dec
shr
out
mov
jne
in
xor
xchg
sbb
jge
in
cli
push
lret
aas
movsb
cmp
mov
dec
mov
js
roll
fwait
ljmp
stos
lahf
sti
pop
orl
stos
push
aam
push
in
ss
les
xchg
sbb
dec
imul
fs
inc
mov
lret
ret
enter
fmuls
sub
mov
inc
mov
pop
fisubl
dec
cmp
ja
pop
sub
jnp
mov
out
bswap
sub
shll
mov
pop
xchg
rcll
stos
in
sub
dec
mov
ficoml
bound
mov
repz
test
mov
and
int3
or
pushf
push
xor
scas
add
sub
mov
aam
jp
push
or
sub
xchg
cwtl
mov
and
in
outsb
shlb
mov
jno
mov
mov
cwtl
ficompl
mov
lods
mov
loopne
mull
jmp
insb
sub
cmp
pop
add
xor
sarl
jo
loope
xorb
xchg
dec
xor
inc
stos
out
or
movsb
fisubrl
loop
in
adc
push
push
faddp
cmpsl
sub
cmp
cs
xchg
jnp
sub
inc
push
inc
callw
dec
dec
test
jnp
sbb
imul
addr16
ds
mov
mov
cmp
push
adc
adc
mov
xor
rcl
test
call
lret
push
pop
es
inc
inc
int3
arpl
enter
out
push
testl
outsb
sub
ret
mov
mov
out
lcall
sti
idiv
into
mov
or
and
fidivs
fdivp
lods
push
out
dec
xchg
movsb
dec
leave
jbe
in
xor
push
daa
cmp
xchg
xor
loopne
xor
lods
stc
jp
cmp
fmuls
xchg
push
lret
rcrb
mov
aad
jmp
mov
or
pop
xchg
xchg
push
adc
fbstp
push
stos
inc
dec
pusha
je
outsb
insb
mov
pushf
mov
or
cli
das
arpl
pop
pop
pop
cmp
sahf
fstpt
sti
pop
pop
repnz
xor
or
mov
xchg
into
add
mov
cmp
dec
adc
fdivs
or
mov
sub
cmp
pop
jl
cld
inc
push
dec
in
out
and
mov
outsl
mov
clc
clc
pop
sti
pushf
clc
push
mov
jb
ret
and
cmp
jno
sub
pop
in
sub
loope
or
jne
jne
stc
and
sub
rcll
out
jecxz
lahf
cmpsl
jl
stc
or
pop
shl
jp
sbb
add
xchg
mov
cmpl
xlat
sub
std
nop
andb
mov
pop
pop
mov
xchg
pop
mov
dec
ss
mov
sub
and
cmp
sbb
int
jecxz
adc
enter
xchg
inc
mov
test
pop
test
iret
insl
inc
xor
push
jl
mul
xor
sub
in
popf
inc
out
iret
xor
mov
and
out
lret
fprem
sti
add
mov
xchg
jl
mov
jae
push
pop
mov
xor
mov
test
outsb
fidivrl
aad
sub
aaa
outsl
cmp
add
or
out
sub
ljmp
pushf
repz
dec
cwtl
movsl
fstpl
push
aam
xor
fildl
idivl
fisttpll
inc
add
stc
jns
xlat
xor
fwait
xchg
adc
mov
xor
popf
sub
arpl
push
cli
addl
mov
in
mov
jle
mov
repnz
pop
cmp
mov
mov
sti
lea
popf
popa
jb
js
or
add
test
fsubl
sbb
adc
mov
cwtl
jecxz
adc
andb
sub
rol
adc
data16
incl
es
sahf
lds
inc
stos
adc
aam
popa
sub
pop
inc
jbe
sub
push
xlat
mov
lods
fwait
mov
sub
dec
mov
in
mov
xlat
push
push
sub
test
fbstp
aaa
sub
les
jnp
out
sbb
movsb
ljmp
cmc
inc
shll
in
outsb
xor
movsl
jnp
call
pop
fwait
das
les
sbb
gs
lahf
jno
adc
movsl
mov
jmp
pop
xchg
inc
cmp
test
mov
jmp
push
out
xchg
push
mov
mov
and
dec
push
dec
imul
js
lea
insb
out
dec
movsb
std
sub
ja
cmp
pop
sub
fs
mov
inc
cmp
and
mov
cmovo
cwtl
ret
pop
mov
test
mov
mov
jnp
aaa
or
arpl
cmp
addb
push
icebp
jmp
lock
mov
lcall
repnz
in
pushf
xor
push
fcomps
mov
mov
mov
mov
movsb
cmp
out
test
mov
stos
jnp
stc
mov
test
fisttpll
cli
lcall
out
shll
data16
daa
in
test
nop
mov
jmp
and
rcrb
scas
fndisi(8087
jbe
iret
or
jge
xor
sub
adc
xor
push
sti
ds
stc
lcall
or
mov
mov
out
fsubrl
adc
out
ljmp
mov
adc
cmp
loop
mov
jg
jl
adc
les
call
bound
pop
pop
pop
into
mov
repz
scas
sub
mov
dec
fldcw
rcrb
dec
jmp
pusha
mov
dec
test
int3
sti
jp
xor
jne
xlat
xlat
cmp
aam
add
adc
fldcw
push
insl
cld
scas
fnstenv
add
xchg
jge
mov
aad
inc
imul
ds
adc
jle
bound
cmp
add
mov
jmp
mov
pop
scas
idivl
jo
arpl
jno
dec
pusha
mov
je
loop
mov
imul
sbb
mov
add
xor
pop
cwtl
jmp
movsl
lods
lcall
sub
cmp
or
or
iret
lods
dec
js
jecxz
rorl
pop
inc
inc
repz
into
leave
mov
adc
cs
lods
jb
popa
xlat
pmuludq
int
movsb
out
sbb
mov
pop
sub
jno
inc
sub
xor
shlb
lds
jge
fisubrs
sti
mov
inc
mov
in
fidivrl
add
cld
orl
arpl
jnp
call
jns
cmp
mov
leave
inc
add
inc
cwtl
das
shrb
sbb
lcall
mov
nop
xchg
imul
ds
mov
popf
cmpsb
loop
xchg
mov
std
call
sub
cmovns
pop
ss
sbb
hlt
fnstenv
pop
jb
pop
sarl
mov
push
das
mov
lret
push
mov
popa
js
std
mov
or
inc
mov
gs
inc
mov
repnz
lods
cmp
daa
orl
push
pop
adc
mov
popf
jo
sbb
arpl
out
adc
mov
mov
aaa
loop
jnp
lds
test
jl
loop
fwait
dec
pop
cmp
notb
jbe
cmp
aad
loop
stos
adc
sbb
out
aad
mov
jge
jbe
push
icebp
push
or
mov
inc
dec
ret
or
and
addb
push
inc
ss
inc
mov
pop
cwtl
int3
pop
cmp
sti
cmp
stc
aas
mov
out
jno
mov
or
mov
cmp
xchg
add
jl
bnd
dec
sub
movsl
pop
cmpsb
int3
sub
mov
push
mov
and
std
ret
sbb
push
jge
xor
add
stos
jl
or
daa
add
aam
mov
movsb
sbb
mov
xchg
div
xchg
sub
movsl
pop
pop
xor
or
lods
adc
out
cmpsl
push
rcr
cmovae
cmp
xchg
adc
lahf
stos
mov
fwait
cmp
ss
dec
push
inc
scas
inc
nop
xchg
rcll
js
stos
loopne
call
xorb
adc
test
push
out
in
mov
mov
rcll
pop
or
addb
jmp
leave
clc
jne
add
push
adc
adc
sarb
call
jb
pop
jecxz
mov
push
movsl
imul
inc
repz
cmc
mov
mov
and
in
fwait
jl
nop
mov
adc
xor
adc
insl
scas
and
daa
dec
cmp
das
ljmp
fnstsw
test
mov
jnp
rorb
sbb
stos
ss
mov
inc
lcall
mov
testb
mov
hlt
xor
mov
cmp
dec
in
and
fwait
pop
fwait
loopne
pop
popa
inc
mov
test
xor
fdivs
in
ret
mov
test
movsl
imul
or
xchg
push
jne
jo
enter
into
xor
pop
inc
sub
gs
fcoml
sahf
cltd
fcmovnb
lret
mov
mov
imul
push
mov
jle
mov
jnp
mov
sub
xchg
push
add
jg
mov
rorb
lret
xor
pop
rorb
push
out
adc
lds
xor
xor
sbb
adc
leave
jl
in
xor
mov
adc
push
xorb
filds
mov
in
cmpsl
xorb
mulb
lods
mov
nop
lds
aaa
aad
pop
dec
cmp
cltd
xchg
add
lods
clc
call
mov
pop
push
sbbb
xchg
test
and
mov
clc
sbbb
movsl
fldt
sub
ljmp
fnstcw
xchg
mov
xor
ss
cmpsl
dec
mov
xor
in
faddp
fcoml
notl
mov
xor
jle
jb
xlat
push
cwtl
xor
add
fmuls
pop
sbbb
inc
aas
rcrb
mov
dec
inc
inc
mov
push
notl
dec
in
dec
pop
in
mov
cld
push
out
sub
roll
adc
adc
adc
push
sub
sahf
pop
mulb
or
fnstsw
faddl
push
xchg
pop
jle
stos
fistl
sub
popa
test
cld
shll
pop
cmp
faddl
xlat
pop
xchg
out
push
adc
out
sub
xor
out
push
mov
mov
imulb
push
dec
lock
jecxz
jge
cmpsb
daa
shll
aaa
imul
mov
stos
hlt
add
jne
add
aad
mov
push
jle
add
and
repnz
fs
push
pop
iret
mov
orb
cs
outsl
sbb
and
xchg
cmpsl
insl
jnp
sbbb
ret
sbb
inc
sub
fistpl
jo
xor
aam
sub
fisubl
call
hlt
mov
nop
lds
mov
mov
or
add
xchg
std
xchg
ret
enter
ds
push
cmp
out
and
and
sub
mov
fbstp
je
imul
add
dec
addb
push
cmp
int
xor
lcall
inc
xor
pushf
jne
aam
lahf
fisubrl
pop
sahf
fsubl
add
adc
shrb
jp
clc
fcompl
pop
out
iret
lahf
ss
mov
dec
fwait
cmc
push
pop
dec
shlb
in
lret
and
adc
mov
out
rcrb
fisubrl
sbb
imul
push
je
fsubl
into
rorl
lret
or
pop
and
or
mov
stos
xor
cmpsb
sbb
mov
dec
xchg
stos
in
mov
adc
mov
das
aas
insl
js
cwtl
lahf
dec
imul
pop
or
jbe
dec
ljmp
test
ret
sbb
inc
jbe
xor
xchg
xor
cmp
and
in
loope
sbb
popa
sub
repz
lock
jns
dec
roll
or
inc
lcall
loope
jne
pop
sub
jle
cs
mov
neg
xor
nop
xchg
lea
mov
sahf
imul
mov
adc
pop
or
pop
and
fcmovb
and
xor
shrb
in
scas
icebp
xchg
push
sub
mov
push
aas
mov
mov
cmp
or
sub
loopne
movsl
out
dec
inc
rcll
jbe
pop
mov
loope
popa
sub
pop
sahf
lret
shll
sub
test
sahf
inc
aam
popf
hlt
inc
pop
xchg
xor
xor
jl
sbb
xchg
rcr
ficoms
mov
jbe
mov
lcall
cmc
sub
adc
inc
mov
and
add
je
aad
add
mov
dec
mov
popa
sbb
addr16
loop
test
adc
lds
test
in
repnz
insb
sarb
ja
pop
clc
xchg
push
in
push
ja
pushf
lahf
mov
subb
pop
add
std
mov
out
test
enter
adc
out
jmp
dec
push
add
sbb
cmpsb
mov
jne
into
inc
jae
stos
jbe
xor
mov
stos
jo
jmp
jbe
in
and
and
lea
xlat
mov
push
add
pop
nop
dec
aam
sub
out
popa
jns
jp
inc
sbb
jle
rcr
push
push
sbb
sub
arpl
push
sub
cmp
cmp
push
xchg
push
jecxz
mov
mov
popf
stos
jmp
cmp
test
pusha
test
incb
das
movsb
fists
push
xchg
pop
mov
or
dec
lods
cltd
adc
cwtl
gs
cmp
sub
jge
add
cmpsl
fwait
and
inc
push
jne
mov
sub
adc
sub
idivb
cld
notl
ja
jnp
sub
or
push
cmp
mov
jl
inc
pop
adc
jnp
iret
lahf
out
mov
adc
mov
iret
cmpsl
call
fimull
dec
lock
mov
ds
es
sahf
adc
push
and
inc
cmp
mov
outsl
jge
fcomip
leave
add
pop
mov
inc
or
and
and
jmp
xchg
push
je
push
sub
and
mov
ror
hlt
mov
decb
movsb
push
xchg
add
xchg
sbb
lcall
xchg
xchg
xchg
push
fcomip
push
dec
aam
jl
or
test
mov
sub
mov
shll
insb
movsb
das
std
sub
ss
or
mov
es
shlb
es
add
and
sti
arpl
mov
stos
stc
xchg
mov
je
fstps
inc
loopne
xchg
push
inc
daa
push
xchg
ss
test
dec
ds
mov
xlat
push
mov
shlb
pop
pop
dec
test
pusha
jmp
addl
xchg
dec
pop
stc
fs
xor
adc
xorb
push
xor
shll
test
leave
pop
popf
icebp
mov
jmp
jp
cmpsl
jl
scas
js
mov
sahf
ljmp
lahf
jecxz
mov
cmp
pop
adc
popa
insl
scas
imul
add
mov
dec
sub
js
jmp
mov
shrb
clc
sub
push
dec
and
js
test
stos
mov
ss
aaa
sub
inc
daa
sbb
cmp
fwait
int
sbb
insl
mov
dec
hlt
push
lret
push
ss
cvttps2pi
imul
rcrb
sub
jns
popf
in
sub
jle
xor
in
mov
xchg
push
inc
adc
test
mov
sbb
pop
repz
imul
sub
jb
call
xor
aad
je
jp
dec
cmp
xchg
dec
pop
popa
mov
movsl
jbe
mov
fsts
cmp
jecxz
xor
lods
sub
adc
stc
xor
adcl
mov
lret
mov
jnp
mov
testb
sbb
add
mov
xlat
jmp
cld
sbb
mov
pop
cmp
fisubrs
pop
in
sbb
mov
ljmp
jp
notb
std
push
imul
loopne
add
add
stos
iret
outsb
mov
filds
ss
fsubr
adc
inc
cmp
adc
mov
xorb
jo
stc
pop
bound
jno
fistpl
adc
mov
fldl
add
cli
outsl
mov
xor
into
inc
adc
daa
out
mov
sbb
inc
fdivs
inc
lods
sbb
xchg
mov
sub
add
movsb
cmc
adc
xchg
jmp
and
arpl
pop
lret
xchg
icebp
xor
push
popf
int
in
sahf
pop
loope
mov
jmp
fistps
mov
out
ret
inc
push
outsl
bound
push
jle
fdivs
cltd
adc
sbb
inc
lahf
popf
popa
fucomip
pushw
pop
mov
push
sbb
cwtl
mov
and
or
test
add
jo
es
sub
inc
push
lods
out
arpl
mov
xchg
mov
dec
xor
mov
add
cmc
mov
inc
mov
push
bound
pop
pop
push
pop
icebp
adcb
out
lcall
mov
cwtl
scas
inc
or
fisubl
sbb
shrb
and
mov
dec
inc
cmp
or
incb
rcrb
push
xlat
jg
clc
pop
ds
jmp
loope
rcll
cmpsb
xor
shrb
push
cmp
lds
test
aas
movsl
mov
aaa
cltd
orl
jno
mov
lcall
or
inc
outsl
jne
imul
into
lods
jg
xchg
mov
sbb
push
lea
cmp
iret
sub
into
cmc
icebp
jge
sti
icebp
aad
mov
gs
fs
jge
jne
call
ja
xchg
jno
jns
das
inc
mov
test
sbb
ljmp
out
aaa
sbb
and
mov
test
jmp
inc
fnstenv
rcll
out
icebp
cli
ret
or
lea
push
mov
pop
inc
push
mov
sub
xchg
loope
hlt
sbb
push
aad
mov
cmc
bound
ret
adc
cwtl
in
xor
pop
dec
jo
outsl
rcrb
shr
movsb
add
rcrb
je
jnp
rolb
movsl
cmp
clc
mov
pushf
imul
jg
xchg
std
pop
jmp
lods
mov
push
add
xchg
into
xor
es
ror
popf
dec
pusha
int
adc
or
xor
xor
mov
sbb
je
sbb
scas
push
cltd
cmpsb
mov
cmp
add
and
add
mov
cmp
scas
sbb
fimull
xchg
scas
push
push
fisubrs
or
mov
jno
sbb
dec
mov
rcrl
mov
adc
out
iret
enter
xchg
push
sbb
dec
inc
sar
inc
fnstsw
push
test
and
xchg
outsl
jmp
sbb
rorl
aaa
adc
and
lret
aas
hlt
xlat
ja
or
lods
rorl
mov
pop
stc
sub
orb
fisubrl
popa
stos
push
scas
xor
and
mov
std
jnp
xchg
fwait
cmpsl
in
sahf
adc
xor
xchg
cltd
mov
and
fisubs
sbb
add
sarl
insl
dec
ret
mov
xor
add
cmpsb
pop
test
cli
adc
jne
js
test
ljmp
or
std
xrelease
lahf
fisttpl
pop
test
imul
clc
pop
notb
pop
js
add
ljmp
pop
and
out
in
jp
jns
jp
xor
dec
dec
pop
add
cli
lret
push
mov
inc
dec
dec
push
xchg
aad
into
fwait
outsb
rcrb
lds
push
ljmp
or
sbb
sbb
sahf
jae
dec
scas
ds
clc
push
add
pop
repnz
and
jle
lods
sub
movsl
mov
pop
imul
shlb
repz
lock
mov
sub
push
fcompl
xor
pushf
fisttps
sbb
sbb
push
or
es
aad
in
cmp
int3
mov
lea
popf
cmp
xor
shl
add
push
es
or
cmc
pop
sarl
ss
rolb
mov
scas
add
pop
inc
push
dec
pop
mov
add
or
in
xor
lea
arpl
jno
das
xchg
or
fsubrs
cli
adc
popa
out
xor
and
xchg
arpl
push
inc
jg
mov
and
mov
inc
out
outsb
jl
std
dec
ret
mov
inc
test
sbb
lea
repz
out
dec
rol
repnz
adc
data16
jns
cmp
iret
jg
pushf
mov
dec
pop
sub
mov
arpl
xor
push
push
mov
pusha
nop
mov
into
mov
dec
in
sbb
stc
sbbb
mov
inc
pop
xor
pop
loope
inc
std
adc
out
out
cmpsb
add
jge
pop
lods
or
rorb
mov
dec
addl
andl
je
outsb
mov
roll
mov
push
sbb
jp
add
pop
pop
push
mov
and
leave
and
push
lods
mov
sbb
push
jno
jle
and
xor
xchg
adc
test
ss
out
and
inc
in
insb
push
cmpsl
orb
stc
shll
adc
jb
mov
inc
inc
cmp
pop
or
aad
fcmovu
mov
es
fistpll
ja
or
movsl
rcrb
cmp
add
pop
pop
cmpsl
lret
shlb
dec
test
pop
pusha
pop
push
outsl
jp
cmp
cmp
adc
sarb
gs
cmp
mov
sub
mov
ss
and
test
mov
aad
fcompl
movsl
adc
popf
or
in
dec
push
mov
ja
jmp
sbb
adc
test
lahf
push
popf
mov
cltd
aaa
push
aaa
jno
out
fdivl
xchg
add
cmp
cmp
mov
out
mov
fs
daa
xchg
dec
sub
dec
addr16
push
jae
and
fidivs
pop
xor
add
icebp
mov
jmp
jecxz
roll
pop
push
dec
cmp
in
push
inc
cmpsl
mov
in
int
push
and
bound
mov
cld
inc
push
loope
cmp
sbb
cmp
jl
or
int
jne
cmp
ljmp
jl
jge
into
inc
inc
jbe
cld
lea
mov
aam
xchg
sahf
loope
or
fbld
dec
int
iret
sti
sbb
fs
lcall
push
stos
adc
pop
cli
pop
dec
mov
pusha
outsb
mov
pop
out
ja
xchg
jnp
jb
push
cltd
call
enter
mov
jl
lock
lcall
mov
popa
dec
or
mov
cmp
int3
ljmp
inc
mov
sbbb
mov
mov
xor
faddp
pop
pushf
jo
out
pop
mov
aad
jmp
dec
imul
repnz
rorl
xchg
icebp
dec
scas
enter
add
inc
mov
cld
xor
cmc
movsl
and
loopne
mov
jo
fdivrl
xor
ret
and
repnz
inc
adc
mov
cmp
jp,pn
out
cs
inc
and
loop
inc
mov
pop
or
mov
inc
loopne
inc
mov
mov
jnp
sub
jae
add
aas
xchg
fstpt
or
pmulhuw
imul
push
mov
mul
inc
loopne
push
les
and
mov
xchg
out
or
lahf
push
in
cltd
sub
clc
xor
mov
or
mov
add
push
inc
cmp
test
sbb
repnz
cmp
sbb
mov
lret
xor
repz
lcall
aam
fstpl
fcoms
adc
jns
in
fwait
xor
scas
cmp
mov
decb
xor
cltd
pushf
cmp
hlt
push
inc
out
add
push
lods
hlt
sub
and
sub
test
mov
fistl
sahf
stos
in
mov
inc
adc
inc
push
or
mov
inc
mov
lret
jmp
outsb
dec
pop
jl
out
imull
xchg
mov
inc
addr16
mov
sub
fstps
and
jae
and
movsb
movsl
lret
and
cmp
adc
lods
fldenv
mov
jmp
movsl
xor
lock
cmp
cmp
sbb
sahf
push
enter
jnp
inc
push
adc
scas
add
mov
jbe
push
das
mov
repnz
fsubs
imul
xchg
imul
les
mov
les
pop
mov
or
mov
xor
pusha
xorb
mov
xchg
push
or
faddl
out
mov
mov
lods
jge
pop
stc
lods
pop
push
mov
or
inc
jmp
notb
rolb
subl
notl
addr16
mov
or
lea
cmp
push
outsb
lock
pop
xor
sub
lcall
jmp
test
xchg
adc
pop
pop
out
xchg
lret
stos
pop
loope
cld
cld
xor
gs
adc
pushf
lea
daa
addr16
scas
ret
bnd
popf
add
dec
push
sub
in
popa
in
xchg
adc
jne
dec
icebp
fldenv
xchg
lods
xor
cs
mov
insb
push
jae
icebp
es
pop
xlat
das
insb
insb
xlat
xchg
ficoml
mov
mov
lds
enter
jo
mov
test
nop
jg
pop
mov
paddb
adc
xchg
mov
push
imull
pop
push
aaa
jae
jnp
mov
jmp
jo
cmp
loopne
repz
xchg
pushf
daa
adc
enter
xchg
stos
mov
out
es
cmp
jno
cli
aad
ret
scas
pop
gs
dec
cmp
jns
fdiv
mov
outsl
daa
sbb
ret
popa
xchg
js
xchg
mov
mov
jge
adc
cs
lret
mov
sub
cmp
mov
loope
shll
adc
and
sbb
dec
test
std
mov
jne
or
pop
andb
sub
gs
cld
xchg
adc
mov
andl
push
iret
icebp
xchg
scas
mov
mov
push
push
scas
mov
loope
pop
adc
pusha
xchg
xor
inc
gs
xor
mov
pop
mov
inc
jae
cmpsl
xlat
pop
and
mov
das
sahf
mov
mov
add
shlb
xchg
rol
mov
xor
in
clc
shl
cmc
int3
mov
add
add
push
mov
cmp
pop
dec
outsl
push
mov
pop
and
and
fsts
fsubrp
push
movb
in
push
lods
xchg
mov
shrb
push
test
jne
iret
lds
pop
popl
jecxz
pop
dec
jg
jo
mov
or
cli
add
or
test
xchg
inc
xor
mov
xchg
clc
mov
sarl
sbb
imull
push
scas
mov
add
andb
mov
mov
jp
mov
xchg
cmpsl
sahf
adc
enter
sarb
lods
mov
jecxz
dec
pop
std
stc
xor
pop
cmpsl
xchg
daa
cmp
xchg
push
sub
xor
dec
and
ljmp
mov
imul
pop
mov
ret
cmp
sub
mov
mov
adc
aad
and
inc
rclb
in
sub
rcl
sarb
pop
push
movsl
dec
jecxz
lcall
scas
lock
mov
ljmp
dec
pop
repnz
stos
jmp
mov
das
sub
inc
test
jno
pop
dec
sets
inc
out
cmpl
sti
addr16
je
jle
push
out
pop
and
push
out
movsb
inc
inc
inc
out
movsl
jmp
pop
adcl
sbb
popf
mov
mov
pop
fwait
push
jb
dec
loopne
sbb
cmp
iret
ss
movsl
fld
dec
insl
sbb
aad
push
xchg
jl
xchg
or
mov
popa
sahf
in
mov
jbe
dec
push
imul
ret
pushf
pop
push
adc
shlb
mov
mov
imul
jne
lret
adc
dec
repnz
scas
adc
or
insb
push
shll
cmp
stos
jg
ret
xchg
jb
pop
imul
sbb
mov
add
dec
cwtl
and
shll
or
or
xor
hlt
in
adc
pop
nop
fcmovnbe
int
insb
push
das
shl
sbb
and
sbb
lea
jp
call
sub
and
pop
into
lods
sbb
leave
aas
in
mov
mov
outsl
sub
cmp
cs
mov
inc
sub
mov
call
xchg
mov
jecxz
sub
sub
xchg
inc
shrb
testb
or
xchg
adc
adc
cmp
mov
jbe
insl
out
addb
filds
das
xchg
jl
dec
jno
xor
mov
rcl
add
sub
mov
scas
cmp
cltd
cmpsl
add
stos
pop
movsb
scas
adc
mov
xor
adc
orl
nop
fsubl
in
insl
fnop
or
adc
cltd
sub
pop
js
xor
mov
and
xor
push
testl
sub
mov
add
add
sahf
lret
popa
lods
les
xchg
pop
inc
cmp
pop
push
cmpsl
fcmove
xor
dec
mov
sbb
pushf
fwait
pop
mov
mov
push
cmc
lods
xchg
mov
lods
cmp
pop
sub
cmp
sub
leave
push
insb
stc
int3
out
fld
cmp
ret
sbb
scas
imul
add
je
mov
cli
inc
xor
mov
dec
pop
es
das
adc
pop
jno
lret
mov
bnd
adc
lcall
iret
ljmp
sti
xorl
xchg
mov
mov
hlt
addr16
push
jp
mov
roll
or
mov
aaa
fwait
xor
shlb
hlt
sbb
sbb
loop
pop
in
and
rorb
cwtl
nop
jae
add
cmp
outsl
sbb
popa
pop
mov
notl
negb
inc
or
movsb
sbb
push
insl
xchg
xor
mov
fimull
inc
jecxz
jno
ror
xchg
mov
out
cwtl
push
rorb
lcall
xor
lock
sub
hlt
mov
adc
xor
xchg
pop
lods
mov
scas
addr16
mov
mov
aam
iret
mov
or
jmp
push
daa
xchg
push
or
and
and
xchg
lcall
insl
incb
cmp
int3
jmp
adc
adc
cli
mov
mov
or
scas
xchg
adc
pop
es
rclb
je
decl
jl
cmc
jb
aad
fimuls
push
aaa
and
dec
sbb
or
int3
xor
add
ficoml
xchg
fnsave
adc
fwait
xor
sbb
imul
les
push
mov
and
test
ror
jmp
ficoms
mov
in
hlt
pop
daa
jb
xchg
mov
stos
dec
into
sbb
xor
push
fnstsw
mov
push
or
insb
sbb
xchg
push
sti
and
push
js
xor
hlt
in
fwait
cltd
adc
mov
cld
in
je
mov
outsl
mov
ds
and
jle
cmp
fwait
mov
lods
mov
sarl
xchg
aas
paddusb
xchg
inc
data16
sbb
cli
xchg
loop
es
popf
jecxz
mov
scas
loopne
xor
jp
bnd
ss
inc
add
or
imul
and
outsl
lahf
mov
roll
pushf
sub
sub
mov
adc
push
mov
divl
xor
or
jb
sub
movb
xchg
dec
aaa
cltd
jmp
dec
es
jp
stos
stos
insl
sub
xor
inc
sbb
xlat
mov
jae
cmc
sub
xchg
inc
mov
shll
dec
cmpsb
cwtl
mov
push
jns
adc
lock
or
pop
jo
call
in
pop
insl
cli
cmpsl
sbb
in
mov
je
lods
test
push
cmpsb
popa
mov
shl
jmp
in
shrl
fimuls
xor
stos
fstl
mov
jg
cmpb
dec
loop
inc
push
sbb
push
int
pop
push
adc
insl
cmc
dec
fldl
cmpsl
jb
stos
cmc
cmp
adc
mov
xchg
mov
les
pop
fmul
xor
xor
inc
add
out
jnp
xor
sahf
xchg
mov
adc
mov
sarb
dec
pop
dec
into
inc
cmpsb
xchg
adc
leave
aas
call
push
inc
jle
out
xor
push
mov
or
push
push
cmc
jl
mov
sbb
jp
cli
sub
popf
cmpsl
jae
repnz
mov
addb
dec
mov
lcall
daa
xor
xor
mov
xor
xchg
jmp
shr
pop
mov
fsubrl
insb
push
js
push
gs
out
test
xchg
jmp
cmp
xor
pushf
stos
jl
fs
xchg
inc
and
jns
xor
inc
outsb
loope
ss
mov
dec
push
out
inc
idivb
mov
fs
or
ss
fdivrl
cmp
popf
jbe
int
jmp
xor
inc
cmpsb
sub
adc
mov
repnz
or
jb
or
imul
loope
shl
mov
les
pop
ret
xchg
sbb
test
pushl
push
inc
das
pop
xor
mov
lods
add
aas
xor
test
int3
push
lret
idiv
mov
popa
sub
out
cmp
xor
sbb
les
xchg
jne
fimull
pop
mov
adc
lods
repnz
fmull
shlb
and
adcb
in
lods
popf
ja
call
test
mov
sbb
add
mov
xchg
xor
and
xchg
fsts
lahf
nop
mov
sbb
hlt
sub
fmull
sbb
lds
pop
bound
lret
mov
mov
xlat
mov
in
aad
aaa
outsl
dec
sbb
sbb
lods
mov
or
mov
imul
decl
inc
lahf
xlat
imul
cmp
mov
aam
lds
mov
and
sbb
shrl
push
repz
lcall
lods
and
jns
adc
ljmp
inc
and
xchg
cmpsb
push
loop
in
les
lods
call
inc
jge
cmp
cmp
push
cltd
mov
and
fdivr
mov
lret
xchg
and
pop
das
fs
inc
lret
dec
sbbb
pop
call
dec
mov
push
lds
imul
cmp
rclb
in
add
push
cld
out
imul
ljmp
lahf
ljmp
outsl
add
les
dec
push
mov
mov
das
lods
cwtl
test
pop
pop
cs
cmp
mov
adc
mov
push
adc
jno
add
roll
int3
dec
aam
loopne
pop
lahf
inc
call
push
dec
in
jno
mov
js
mov
or
sbb
ret
adc
dec
sbb
xchg
clc
leave
cmp
cmp
push
jns
inc
lea
addr16
inc
fisttpl
push
lret
leave
jp
jmp
fists
sbb
insl
pop
and
jg
aam
and
call
pop
jl
xchg
add
pop
clc
adc
jmp
insl
mov
call
sbb
lret
add
loop
into
les
loope
cmpsl
loope
fcomp
add
mov
sbb
dec
daa
test
push
sbb
out
dec
hlt
xchg
pushf
loope
cmpb
mov
scas
aas
xchg
mov
in
rolb
loopne
stos
jge
pop
movsb
cmp
outsb
inc
clc
ss
sub
andl
push
sub
push
sub
mov
rolb
dec
mov
push
lds
and
xor
iret
shlb
jb,pt
jmp
andl
andb
mov
sbb
xor
stos
outsl
fldcw
iret
scas
sub
into
push
loopne
hlt
xor
repz
or
jmp
lods
movsl
sub
xor
cmp
fwait
xchg
mov
jge
xor
lods
fsts
insl
ds
out
mov
lock
xor
test
mov
aaa
xchg
iret
pusha
mov
lcall
cmp
bound
outsb
cmp
and
xchg
cwtl
adc
jno
jbe
sub
jge
jae
ror
js
sbb
mov
cmpsb
pop
pop
ljmp
cwtl
inc
aam
ljmp
pop
sbb
or
lods
cwtl
stos
sahf
mov
add
test
fcmovb
xchg
inc
shlb
sub
cmc
mov
int
popf
mov
call
mov
ds
mov
cwtl
xor
jns
xor
sbb
negb
das
aaa
outsl
xchg
adc
mov
popl
bound
and
lcall
out
aaa
pop
mov
dec
aaa
push
repz
dec
test
xchg
js
cmc
mov
adc
jo
outsl
outsl
jmp
add
loope
iret
and
push
and
jp
iret
dec
cli
ret
xchg
lea
or
pop
pop
pop
mov
into
int3
in
stos
out
push
dec
jne
mov
inc
xor
xchg
dec
fisubl
xchg
jle
int3
adc
movsb
imul
movaps
dec
test
test
ror
mov
bound
mov
push
sub
sbb
iret
daa
frstor
push
repnz
shr
cmovnp
or
jbe
lret
mov
gs
adcl
stos
bound
ja
icebp
cmp
mov
push
iret
adc
and
in
lds
aaa
add
stc
das
out
or
clc
in
sbb
cli
daa
xor
inc
dec
jg
adc
pop
cmpl
negl
pusha
iret
aad
mov
loope
jle
inc
fs
inc
pushf
xchg
mov
jl
fcoms
data16
xor
fdivr
push
sahf
xchg
mov
imul
sub
dec
cmp
jmp
add
int3
divl
insl
jg
popa
rcrb
repnz
aad
in
aad
push
das
xchg
inc
xor
dec
aad
cmp
das
pop
imul
insb
arpl
fildl
ficomps
pop
lds
cwtl
fmuls
adc
mov
negb
ficomps
mov
jle
mov
add
fcoml
in
xor
enter
xor
pop
cli
inc
fsubrl
jg
mov
mov
add
stos
cmpsl
dec
hlt
mov
mov
in
call
enter
mov
jno
cmp
stos
mov
xchg
cs
aad
fwait
loopne
dec
in
hlt
dec
lods
ljmp
rorb
jecxz
push
mov
mov
xorb
mov
cwtl
in
filds
ret
jbe
daa
inc
data16
sti
sti
fidivl
push
push
jg
dec
cmpsl
fsubrl
stc
sbb
adc
les
test
dec
mull
movsl
int3
fsubrp
mov
out
clc
cltd
pushf
outsb
mov
test
fildll
aas
mov
imul
addr16
sahf
das
rorl
mov
pop
dec
ljmp
outsl
aas
push
in
sbb
adc
push
jns
and
fnstenv
add
inc
mov
rorl
shll
orl
jecxz
dec
repz
xor
dec
dec
enter
hlt
mov
movsl
std
outsl
lahf
repnz
inc
dec
dec
rclb
ret
jbe
dec
imul
sarl
hlt
inc
bswap
add
jbe
push
jnp
or
roll
call
dec
int
loope
fmuls
fisttpl
push
sub
jbe
jo
imul
xorl
dec
ss
pop
aam
lret
das
and
mov
ljmp
das
out
bound
adc
and
sub
lret
into
jmp
mov
and
paddusb
xor
mov
dec
mov
mov
pop
lret
pop
mov
pushf
inc
fldl
xchg
push
out
aad
mov
push
sbb
call
inc
dec
loop
jp
push
push
pop
dec
ljmp
inc
loop
dec
push
popa
nop
mov
inc
jmp
mov
mov
mov
movaps
xor
add
stc
inc
out
aas
inc
inc
jnp
jg
or
iret
push
adc
inc
mov
loope
les
push
repz
fistpll
dec
enter
insl
pushf
lods
push
inc
les
jbe
fwait
push
das
shl
sarl
mov
scas
mov
mov
xchg
pop
mov
cmc
les
mov
stos
sahf
popa
dec
lcall
jo
jns
inc
lea
insb
in
orl
sub
mov
push
jb
ss
rolb
push
or
adc
push
and
jp
daa
mov
pop
xchg
xor
mov
repnz
xor
adc
jo
mov
out
mov
mov
dec
ja
icebp
pop
cmp
mov
outsl
jbe
movsb
jp
adc
jno
xchg
inc
pusha
movsb
test
cwtl
mov
and
data16
mov
push
int3
dec
pusha
fcoms
outsb
dec
mov
aad
inc
lds
dec
mov
jae
jne
imul
cmp
jbe
outsl
jnp
mov
inc
or
and
jbe
pop
stos
std
jmp
cwtl
jl
jne
les
repz
cwtl
aas
cli
mov
xor
mov
stos
or
loopne
push
mov
movsb
sub
cmpsl
lea
xchg
mov
jo
test
mov
fimull
mov
jmp
mov
test
jo
pop
call
hlt
jo
sbb
fcoms
xor
xor
push
shll
or
cmp
test
push
shlb
jle
mov
je
loopne
test
add
mov
pop
sub
das
lods
aas
loop
cld
jmp
in
in
aas
or
mov
jmp
adc
dec
enter
lcall
js
je,pt
aam
pop
je
adc
xchg
or
dec
rclb
add
pop
mov
adc
jmp
mov
xlat
movsb
mov
push
negb
scas
adc
fldcw
sbb
sub
and
dec
lock
pusha
xor
adc
popa
into
or
push
mov
enter
fldt
cmp
or
negb
and
gs
jno
pop
sbb
pushf
jecxz
pop
mov
xor
adcb
mov
popa
jge
frstor
cmp
ljmp
pop
sarl
or
test
add
pop
push
xchg
dec
fsts
xchg
cmp
add
xor
sbb
jg
incb
add
push
mov
push
ljmp
adc
scas
lds
call
mov
and
dec
repnz
dec
push
push
and
cwtl
pop
sbb
hlt
sbb
push
imul
out
mov
daa
mov
in
jno
ret
mov
loopne
cltd
ss
arpl
cmp
nop
ds
iret
fwait
xor
repnz
xchg
arpl
std
shll
jmp
jb
fldt
mov
sahf
mulb
lods
dec
mov
es
test
std
dec
sub
inc
xchg
mov
pop
push
mov
jo
push
push
gs
jmp
dec
mov
mov
inc
or
or
cmpsb
outsb
cmp
cmc
cmpsl
add
jle
sbb
xchg
push
sti
xor
cmpsl
xchg
cld
jge
icebp
mov
inc
outsb
addb
rorl
nop
icebp
jmp
out
xchg
inc
xor
push
or
dec
repnz
mov
shll
xchg
sahf
push
dec
xchg
std
add
or
sub
ret
sbbb
mov
mov
roll
dec
into
gs
jg
test
std
add
lods
aam
jns
jb
jg
pop
lret
rclb
jb
lahf
lret
pushf
daa
and
adcb
aas
cwtl
mov
cmpsl
fwait
addl
shll
arpl
adc
xchg
mov
xchg
or
and
ficompl
dec
and
stos
pop
ret
je
mov
pop
mov
pop
and
dec
pop
nop
icebp
mov
mov
pop
cmp
adc
mul
mov
fs
dec
jmp
push
dec
jp
fs
push
lods
in
je
cmpsb
ja
mov
cli
stos
popa
iret
aad
in
xor
inc
adc
push
push
mov
sti
inc
rcrb
cmc
sahf
sub
sbb
or
loop
dec
mov
mov
adc
or
mov
fwait
jge
inc
or
fisttpl
popa
ja
lea
xor
pop
cs
mov
imul
int
mov
pushf
ds
in
loope
andl
xchg
cmp
xor
loop
into
add
mov
test
lret
int
pop
push
cmp
pop
popf
push
data16
aam
and
and
aad
pop
les
xor
les
enter
mov
sub
fldl
adc
xchg
dec
mov
mov
inc
jo
jle
ret
in
pushf
call
aaa
cmp
cmp
test
int
sub
lods
mov
pop
mov
imul
sahf
mov
pop
jmp
add
lret
imul
sti
les
cmpsb
sahf
sbb
xchg
loop
or
lds
arpl
mov
scas
int3
cld
xchg
push
sub
mov
loop
sbb
ja
cs
jle
fidivl
lahf
pop
xchg
pushf
cmp
jecxz
test
inc
or
mov
ja
push
lea
dec
sahf
cld
push
dec
lahf
and
push
ljmp
cmpsl
jnp
jg
xchg
or
test
mov
es
daa
pop
jecxz
ljmp
cmp
mov
das
inc
and
subl
popf
dec
repz
push
inc
lds
andb
lret
xor
cmpsb
jp
pop
scas
imul
inc
cld
jl
and
inc
in
or
arpl
mov
cmpsb
int3
jno
scas
jbe
mov
mov
adc
xchg
mov
pop
push
mov
int3
fdecstp
fnstsw
inc
ss
les
ret
int
sub
mov
sub
inc
and
int3
outsb
cwtl
fstpl
push
addr16
cli
inc
push
adc
clc
in
int3
mov
pushf
outsl
mov
nop
push
mov
mov
inc
fdivrs
in
insl
dec
adc
xchg
adc
adc
push
fadds
mov
pop
xor
leave
fildl
mov
lahf
imul
cmp
or
push
sub
leave
push
cmp
imul
fidivs
cmp
and
jmp
or
orb
test
leave
mull
and
cli
adc
or
dec
cmp
lds
mov
int
aad
sbb
jae
jno
cwtl
fisttps
pop
xchg
inc
mov
dec
sahf
or
gs
push
adc
cmp
sbb
test
push
adc
iret
mov
push
sbb
fidivrs
inc
ja
jbe
mov
enter
mov
cwtl
ja
stos
xchg
adc
pop
mov
out
jg
push
or
lds
stc
pop
lahf
xchg
mov
lods
stos
pop
sub
enter
inc
jl
cmp
lret
jecxz
nop
inc
mov
xchg
test
xchg
ret
divl
test
dec
sub
xchg
xlat
add
xchg
sti
inc
std
imul
fsubl
adc
lret
sbb
out
adc
fnstsw
bound
in
pop
fisubl
scas
mov
pop
xor
mov
mov
ja
scas
jp
daa
icebp
out
outsl
pop
test
fcomi
andl
add
aaa
out
inc
and
pop
imul
vpmaxub
or
jnp
fidivrs
mov
dec
ljmp
and
fbld
popa
mov
sub
mov
xchg
push
cmp
push
or
out
popf
mov
ret
xor
mov
adc
hlt
insl
mov
inc
out
pop
mov
pusha
cmp
inc
dec
lods
fdiv
sub
adc
fnstsw
push
ja
cmp
add
out
sbb
mov
subb
mov
addb
lock
jge
cld
jle
outsl
push
data16
imull
inc
push
cmp
inc
dec
movsb
leave
jle
loop
push
dec
nop
mov
out
pop
lds
xor
or
out
cmpsb
xor
cmpsl
jmp
xchg
adc
sbb
sub
movsb
arpl
and
adc
mov
adc
test
out
adc
pop
rcll
leave
and
lcall
adc
mov
loop
cmpsl
inc
outsl
jo
pop
fadds
xor
jmp
js
lret
jle
push
push
cmp
dec
xchg
gs
mov
push
adc
pop
inc
rolb
and
mov
mov
xlat
insb
push
dec
ficoml
inc
push
es
cmp
cmpsl
std
adc
dec
fmul
lret
pop
insl
add
xchg
mov
aam
jl
sub
xchg
add
sbb
and
mov
mov
mov
fiaddl
jae
ljmp
mov
cmp
das
or
xor
pop
andl
cmp
imul
iret
jns
dec
mov
rcrl
insb
sbb
xchg
cmp
aaa
out
hlt
mov
aad
sbb
adc
or
push
add
and
xchg
mov
push
jbe
jmp
pop
mov
outsl
mov
jge
push
test
insl
in
ja
gs
aam
jl
aaa
popl
mov
push
pop
rcrb
ficoms
scas
mov
das
dec
pop
in
dec
xor
sub
xlat
cmpsb
xor
push
pop
and
jg
sub
int3
xor
dec
loope
xchg
and
jge
pop
mov
hlt
jnp
mov
push
lret
push
std
inc
rcl
sahf
es
pop
aaa
into
mov
mov
push
jle
ss
add
cmc
inc
sbb
or
addr16
cmp
pop
into
test
bound
pushf
movsl
or
call
movl
sbb
and
add
fwait
jle
popa
jl
pop
xor
imul
loop
jns
jae
and
adc
and
repz
subl
ja
js
imul
xor
ja
shl
inc
cmp
lret
test
xchg
adc
aaa
inc
sub
icebp
sub
sub
test
lahf
sbb
push
fsubrs
cmp
int
aam
shrb
xor
pop
lods
dec
and
rcrb
pop
mov
pushf
ret
sbb
add
nop
jmp
jmp
xor
jb
sbb
dec
stos
cli
inc
xchg
arpl
push
adc
lods
add
shlb
push
les
xor
testl
adc
add
inc
outsl
mov
fcoms
sub
test
and
jno
call
fwait
int3
sub
cld
pop
jg
clc
push
mov
adc
jg
shll
mov
jo
mov
dec
shlb
cmp
movaps
popa
xchg
insb
and
push
int
lret
adcl
cli
or
jo
jae
mov
mov
out
jge
mov
nop
pop
xchg
notl
mov
pop
js
sbb
lret
inc
push
cmpsl
addr16
xor
lea
orl
dec
dec
mov
sahf
cmp
incl
dec
pop
mov
addr16
push
stos
jmp
or
inc
adc
sbb
jecxz
push
jg
jae
inc
adc
xchg
in
jae
fldl
push
cmp
loop
cmp
push
cli
cmp
push
jg
pop
stc
add
call
pop
jne
adc
mov
movsl
int3
push
loop
mov
mov
jmp
into
sub
pop
jo
imul
mov
sub
outsb
xchg
scas
xorl
cmp
mov
sbb
push
out
mov
pop
ficompl
cs
pop
adc
fsts
testb
loope
arpl
aam
cwtl
mov
ret
adc
int3
test
sub
push
add
aas
notb
and
add
lcall
shll
jne
adc
cld
lock
mov
lret
inc
push
aam
sub
mov
push
fimull
fbstp
jmp
jmp
shrb
mov
xor
int
popa
gs
cmc
loop
and
out
jge
fucom
mov
dec
in
mov
inc
stos
and
aam
and
test
and
fs
fbstp
lea
je
ja
cmp
pop
lcall
mov
ret
xchg
adc
shl
fcomp
test
iret
loope
lock
imul
rclb
sahf
lock
mov
dec
repz
mov
push
shl
scas
out
sarb
ret
push
pop
ret
adc
js
sbb
addr16
inc
jo
jl
test
pusha
repnz
mov
inc
loope
bound
fldenv
test
rcrb
dec
xchg
insl
clc
leave
and
add
add
and
in
mov
adc
lods
inc
mov
orl
mov
dec
jl
xor
mov
xchg
dec
in
xor
fidivl
aas
imul
in
pusha
xchg
rolb
cmp
shll
mov
out
adc
sub
scas
jnp
fimull
mov
popa
dec
mov
sub
lahf
out
or
mov
and
jge
mov
and
mov
mov
outsl
int3
loop
popf
jge
mov
cwtl
leave
flds
push
ss
das
in
sbb
nop
lahf
adc
out
sbb
js
out
shrb
popf
jge
cmpb
adcb
mov
aaa
ss
pusha
mov
ja
mov
inc
fistl
mov
je
add
outsl
icebp
sub
lea
xchg
pop
sbb
iret
mov
xor
jne
mov
cmp
push
push
pop
gs
dec
pop
push
jbe
stos
mov
lcall
cld
in
outsb
imull
int3
divb
push
inc
mov
into
jp
cmpsl
push
pop
pop
mov
inc
dec
xor
push
xchg
int
js
cmp
cmp
mov
push
xlat
push
mov
cmc
mov
movsl
push
jno
aad
sub
and
repz
push
movsl
js
mov
mov
xlat
and
fisubrl
xchg
mov
fwait
jecxz
mov
frstpm(287
stos
out
xor
std
es
mov
notb
jae
leave
ficoml
mov
xchg
or
mov
daa
xor
sbb
je,pn
pop
sub
lods
icebp
test
lock
lods
test
push
mov
dec
insb
ss
adc
sbb
push
lods
adc
in
out
jg
out
scas
ss
push
bound
out
sbb
shl
out
xor
popa
and
mov
insl
aaa
sbb
jnp
cltd
lods
xchg
mov
aaa
scas
cmpsb
and
xor
test
test
std
xchg
jle
lods
scas
icebp
mov
lret
mov
es
sahf
testl
jne
jmp
iret
rcll
push
jns
cmp
ret
ja
pop
jp
repz
sti
mov
xchg
dec
rcr
cmp
aad
sbb
ja
push
add
pop
add
enter
push
cli
into
xchg
xchg
mov
push
sub
inc
xchg
pop
stos
jne
cmp
shlb
repnz
cwtl
mov
cmp
loope
bound
pop
push
push
mov
movsb
mov
dec
xor
dec
sbb
push
clc
xchg
addl
sarb
or
jl
loope
xchg
or
pop
and
sbb
mov
jnp
lret
in
insl
jge
mov
mov
adc
xchg
lods
mov
stos
adc
shr
jl
pushf
pop
lahf
or
mov
mov
inc
mov
aaa
ja
ja
shlb
cli
ljmp
jp
cmp
lds
fisttpll
dec
sbb
cwtl
push
ja
sub
orb
subl
ljmp
mov
push
loopne
into
in
add
shll
lods
gs
inc
test
xchg
js
inc
sbb
shll
movsb
movsl
mov
pop
loop
jmp
call
inc
in
sub
stc
sar
rcrl
mov
mov
xor
pop
sahf
scas
sti
bound
arpl
xor
std
es
pop
insb
lods
decb
aas
or
sub
call
mov
movsl
loopne
das
jmp
cltd
mov
dec
icebp
adcl
adc
enter
push
mov
int3
push
adc
sub
mov
push
push
repz
sbb
lods
mov
in
lods
dec
mov
cmpsb
xor
int3
in
sti
adc
mov
pop
mov
inc
and
pop
sub
inc
dec
in
je
int
mov
outsb
shrb
loopne
imul
dec
push
jne
mov
inc
cwtl
lock
imul
lcall
mov
jae
aad
sbb
loop
hlt
jne
out
pop
mov
cmp
fcmovnbe
mov
or
mov
mov
jmp
xchg
mov
fadd
inc
dec
push
pop
psubq
or
cmc
mov
lea
call
inc
js
xor
loopne
loopne
out
aam
inc
xchg
lret
lods
out
jp
lock
cwtl
ss
mov
repz
sbb
mov
pop
push
pop
push
mov
or
push
into
mov
jns
in
sbb
mov
clc
test
mov
mul
add
into
dec
test
sbb
mov
int3
outsl
add
push
dec
out
pusha
cmp
ljmp
cmp
jg
mov
adc
inc
repnz
inc
cmpl
or
daa
inc
sub
pop
mov
lret
rcr
insb
pop
mov
lock
sbb
out
test
scas
lcall
dec
test
out
inc
jl
jp
cli
clc
or
call
pop
movsl
aas
adc
adc
mov
xor
incb
xchg
xchg
in
or
in
int3
sbb
cld
ret
sub
mov
ret
sub
mov
loop
dec
and
pop
fdiv
adcl
inc
jbe
mov
add
or
out
mov
mov
push
add
push
mov
out
inc
adc
pushf
cmp
cs
pop
and
jbe
test
sub
lods
ret
cld
adc
cmpsl
push
and
mov
and
incl
xor
xor
mov
mov
push
outsl
pusha
mov
cs
cmp
mov
adc
jg
or
iret
add
xor
dec
cld
xor
cmp
out
sub
push
out
adc
fisttps
ret
xchg
adc
fistps
lds
jne
jo
or
sti
pushf
hlt
call
pop
push
adc
sahf
jo
add
in
add
mov
mov
es
popl
test
cmp
ret
add
stc
jne
outsb
out
fnstsw
sub
xchg
lret
sub
es
inc
and
scas
aam
add
mov
negl
arpl
xchg
cld
ret
andl
mov
jo
mov
rcr
bound
or
dec
rol
jns
inc
mov
pop
pushf
xchg
or
mov
daa
clc
out
dec
push
mov
mov
mov
or
arpl
lret
stc
lret
cmpsl
lcall
sbb
jnp
dec
xchg
popa
scas
mov
push
jmp
push
inc
inc
or
mov
push
cmp
jnp
dec
cli
arpl
adc
cld
dec
movsl
clc
daa
mov
test
test
shrb
ficomps
mov
lods
test
imul
roll
xchg
dec
nop
or
jmp
lret
out
cmc
jl
push
ja
cwtl
lret
mov
adc
sub
enter
in
jle
jae
pop
lahf
inc
adc
push
mov
mov
push
push
dec
sub
sub
stos
insb
push
stos
mov
mov
or
and
sub
mov
xchg
jno
jnp
mov
xchg
outsl
inc
add
mov
popl
shrb
pop
testl
or
xchg
xchg
je
pop
adc
sar
arpl
js
cmp
sub
jbe
shrl
bound
cmp
into
je
stos
pop
pop
arpl
lcall
out
inc
dec
fucomp
xlat
mov
and
cmpsl
int
xchg
push
and
sub
sti
rcl
and
testl
xchg
aam
std
inc
xchg
cmp
fistl
clc
mov
daa
inc
cmp
xchg
icebp
adc
das
add
aas
push
xor
ss
ljmp
out
adc
sbb
movsb
and
rcll
adc
pop
jp
mov
lahf
push
mov
jecxz
xlat
int3
pop
ja
mov
call
pushl
mov
dec
fcoms
push
sti
adc
adc
les
stos
cmp
loopne
pop
xchg
loopne
insb
das
adc
sbb
mov
dec
ljmp
insl
cmp
push
mov
jo
icebp
mov
lods
push
or
sub
cmp
fsubrs
andb
push
mov
fwait
into
sbb
sbb
insl
mov
cmp
fs
dec
sub
test
mov
jge
addl
mov
ret
cmp
pop
sub
jp
and
cmpsl
sub
push
cmp
add
xlat
lock
pop
pop
clc
fimuls
fnstcw
mov
inc
mov
mov
inc
push
iret
cltd
int3
and
cmc
cmpsl
cmp
jnp
sub
icebp
fcoms
shll
mov
data16
inc
rorl
sti
xchg
push
outsl
outsl
aam
sub
iret
aas
xchg
xor
mov
jns
jmp
iret
imul
imul
push
fstpl
repnz
jb
loope
js
cmc
mov
repz
mov
cmp
sub
popf
rcrb
lret
ficomps
jle
add
sbb
jmp
cltd
sub
lock
push
or
dec
add
leave
mov
in
dec
sub
pop
test
imul
xchg
inc
cmp
xor
inc
loope
jnp
notb
cld
insl
mov
pop
in
pop
rcrb
inc
jns
int3
xor
jmp
add
aad
mov
cmc
dec
pop
test
fildl
mov
inc
jg
and
out
cld
cmpsb
ss
push
and
add
fisubs
pop
fdivrs
bound
sub
sub
xchg
rol
nop
ss
push
inc
mov
aad
out
push
enter
sub
cld
pop
jecxz
rcrl
pop
icebp
xchg
pop
ficompl
cmp
fidivrl
jb
imul
movb
jg
fs
aaa
clc
sbb
popa
add
into
sbb
cwtl
and
ja
push
mov
je
rcr
cmp
and
adc
mov
nop
in
dec
mov
sbb
cmpsb
mov
cmp
les
roll
jo
xor
decl
xchg
stc
cmc
pop
cwtl
cmp
cmp
mov
sbb
data16
xlat
and
mov
push
std
sar
lods
mov
mov
lret
lods
cmpsl
mov
les
outsl
pop
mov
pop
loope
cltd
ljmp
cwtl
loop
psrad
fisubl
repnz
sub
sbb
test
inc
jl
dec
dec
push
push
repnz
insb
addl
xor
sti
jg
jecxz
push
ret
fdivl
add
inc
pop
jnp
or
xor
pop
mov
cmp
jp
in
mul
pop
ret
dec
ret
js
mov
dec
push
test
push
fbld
xchg
loop
fs
jo
xor
xchg
dec
xor
xchg
in
rcll
leave
cmp
inc
rcll
push
imull
movsb
inc
shll
push
sbb
and
iret
nop
mov
lcall
shlb
lea
push
sub
into
sbb
pop
xchg
pop
sbb
inc
mov
inc
and
fimuls
fiadds
push
push
dec
mov
xor
or
xor
in
rclb
test
popf
dec
jae
mov
pop
mov
or
inc
fnsave
and
fwait
push
push
lods
sbb
lea
jle
je
sbb
repz
pop
push
aas
movsb
mov
out
sub
and
repz
pop
mov
cs
shr
or
lods
pop
xchg
andl
out
xchg
mov
dec
jmp
pusha
loopne
xlat
hlt
jge
mov
std
jb
sub
and
fnstenv
jne
outsl
ret
mov
mov
loop
ljmp
inc
pop
xchg
lea
xchg
pop
mov
popa
dec
xchg
incl
aaa
sbb
jg
or
and
xor
xchg
ret
movsl
mov
adc
iret
mov
sbb
faddp
mov
fwait
sbb
test
inc
sbb
add
mov
sti
push
push
sbb
ja
inc
xchg
sahf
insl
out
decb
inc
sub
push
sbb
or
sbb
ret
mov
addr16
call
push
test
add
out
push
mov
add
push
pop
cmp
lds
fidivrl
imul
and
add
xor
int3
adc
popa
aad
dec
fwait
stos
xor
xchg
ljmp
arpl
lods
inc
in
repz
cmp
mov
xor
jno
jge
inc
int
lcall
in
xchg
ja
sbb
xchg
cs
insw
pop
lcall
add
xlat
mov
clc
scas
cmpsb
inc
pushf
push
mov
and
sub
loope
inc
int
daa
cltd
push
mov
add
xor
test
cltd
jo
pop
dec
lea
hlt
fwait
outsl
enter
push
or
sub
stos
push
fsubl
xchg
loopne
dec
aad
dec
jmp
jae
lods
ja
imul
mov
add
call
pushf
jno
pop
adc
ficoml
mov
cmp
sub
jle
dec
sub
out
dec
fs
sbb
and
mov
add
push
mov
jg
mov
test
fcom
movsb
jg
mov
cmp
push
jl
out
dec
xchg
out
pop
bound
popa
insl
xor
pop
pop
mov
ljmp
std
fisubs
call
rorb
jp
sahf
imul
cmpsl
pusha
xchg
in
leave
adc
gs
mov
das
mov
sub
out
push
xchg
jmp
in
ja
popa
cmp
and
and
cmp
pop
or
mov
push
roll
mov
pop
out
mov
sbb
sbb
jne
mov
jno
js
ds
ror
stos
enter
jns
xchg
xchg
ror
cmp
imul
adc
mov
lea
mov
mov
clc
jge
into
inc
push
mov
outsl
xor
jge
repnz
out
sbb
sub
mov
push
push
int
push
outsb
mov
adc
and
out
inc
push
lret
out
sub
movsb
push
iret
popf
std
cwtl
test
jb
push
pop
or
pop
cltd
mov
cmp
das
aaa
imul
jb
cmp
test
in
jg
mov
out
lahf
push
daa
pop
xchg
call
push
stos
and
push
loop,pt
or
mov
mov
jne
iret
lea
adc
xchg
int3
in
sbb
sub
les
add
push
jnp
sbb
fisttps
push
lcall
jae
xor
pop
xchg
xchg
out
add
add
aaa
or
push
cld
add
pop
or
mov
or
mov
mov
mov
cmpsb
fadd
scas
adc
push
icebp
push
or
outsb
das
call
mov
add
mov
ficomps
sbb
inc
stc
ret
out
es
sbb
mov
pop
mov
xor
pop
ljmp
and
movl
fisttps
pop
cmp
in
scas
add
add
scas
stos
js
mov
and
icebp
sahf
sarl
shlb
jle
icebp
push
gs
ret
xchg
cmp
fwait
dec
and
inc
dec
outsb
push
mov
xchg
pop
cld
inc
hlt
out
pop
ljmp
adc
mov
and
mov
xor
sbb
rol
push
push
mov
mov
hlt
pop
lahf
and
mov
cltd
or
insb
inc
shll
push
sahf
jge
pusha
js
aam
mov
xor
imull
mov
dec
xchg
xlat
hlt
popf
iret
mov
xchg
out
and
mov
lea
mov
inc
cmp
push
adc
jo
test
lretw
imul
sub
ret
xchg
adc
or
popl
jne
mov
fisttpl
lods
aas
push
sub
pusha
pop
rcrl
jmp
les
imul
out
jmp
mov
lea
mov
addb
mov
dec
sbb
rolb
int
mov
inc
int3
push
lea
fisubs
cmp
or
ret
cwtl
mov
into
adc
xor
push
stc
push
mov
xor
testb
xchg
bound
nop
ds
ret
outsb
mov
mov
xor
and
scas
push
shll
mov
add
mov
mov
test
inc
mov
push
add
mov
cmp
inc
loop
imul
ret
out
cltd
pop
lea
ret
enter
imul
adc
inc
iret
and
in
push
ret
cmc
test
dec
jecxz
and
xchg
fsubrp
and
sub
adc
in
sbb
pushf
aas
push
rcl
sub
ljmp
push
aam
jmp
xor
jns
out
mov
repz
xchg
ja
divb
dec
jl
fidivrs
jp
js
dec
dec
xchg
fidivrs
int3
mov
mov
add
loop
les
mov
je
lock
sbb
fiadds
xor
ror
adc
xchg
cld
insb
adc
popf
push
lea
sbb
dec
or
fwait
cltd
push
sbb
dec
cwtl
mov
aas
sub
pusha
xor
testb
push
inc
scas
pop
rorl
mov
dec
addr16
mov
inc
pop
cs
in
aaa
fcompl
add
cmp
lcall
aas
mov
jae
fldenv
cwtl
in
push
xchg
jae
add
mov
frstor
jbe
jne
xor
iret
cmp
pop
adc
pusha
pushl
shll
jno
adc
fsubrs
iret
xor
push
jp
cmp
subl
push
mov
bnd
gs
pop
das
andb
cmp
sbb
mov
int
or
sbb
pop
mov
dec
push
fmuls
popa
pusha
mov
xor
adc
inc
pop
fdivrp
pop
xchg
adc
subb
jne
fmulp
jmp
arpl
ja
cmp
dec
or
mov
jge
roll
xlat
lds
imul
inc
pop
inc
repz
jno
sub
inc
xor
mov
adc
in
jp
int3
fdivrl
fimuls
adc
mov
pop
inc
sti
cs
std
cmpsb
mov
pop
xchg
or
sahf
or
cwtl
dec
pusha
push
cmc
push
lds
sbb
jns
setp
sarl
in
mov
outsl
lahf
lds
pusha
sub
sub
imul
scas
repz
movsl
mov
mov
imul
psubb
dec
pushf
add
sbb
and
subl
pushf
cmc
bound
in
xor
lahf
sbb
test
push
aam
in
push
clc
cwtl
xchg
pop
lret
mov
repnz
pop
sbb
xchg
push
lock
sub
cmp
push
sub
jo
enter
add
out
lret
lret
jno
xor
out
or
mov
je
fcomps
popf
adc
push
or
pusha
jb
lahf
pop
push
mov
mov
inc
jo
lods
mov
xchg
xlat
jae
mov
loop
mov
add
aaa
pop
popa
imul
imul
stos
negb
xchg
mov
rorb
adc
movsl
ss
jg
xor
pop
fs
fnsave
popa
outsl
iret
pop
jecxz
daa
sbb
fwait
adc
insb
enter
or
in
add
lea
xchg
push
sbb
nop
pop
and
test
dec
cs
xchg
js
in
nop
fcmovnu
fsub
cmp
bound
in
movsl
cld
lret
aas
cmp
push
xor
mov
es
movb
inc
jae
push
loope
push
sub
sub
pop
mov
test
cld
mov
ljmp
jl
in
inc
pusha
adc
jno
dec
fistps
and
insl
movsl
popf
ret
add
scas
push
ss
mov
add
sbb
mov
movsb
js
ljmp
push
nop
les
xchg
lret
adc
mov
xor
iret
fstpt
dec
sbb
hlt
jns
mov
clc
or
aas
mov
mov
imul
fwait
imul
xor
popf
push
mov
loop
dec
xchg
pop
into
js
pushf
out
int3
outsl
imul
out
push
cmpsb
cmp
sub
mov
shlb
cmp
pop
repnz
test
cmp
cmpb
fwait
mov
loopne
loop
aas
and
iret
je
inc
jb
fsubr
filds
arpl
xor
mov
xor
cld
loopne,pt
lcall
sub
lea
sar
lods
outsb
inc
xchg
outsb
jmp
dec
std
sahf
cmp
not
xchg
push
imul
je
sbb
sbb
es
out
arpl
mov
pop
data16
out
aas
aad
mov
sbb
pop
leave
mov
aam
ljmp
test
lret
xor
fdivl
push
jne
jmp
lods
sbb
jg
mov
leave
or
pop
sbb
dec
icebp
incb
movsw
pop
jnp
arpl
fwait
enter
in
sub
or
pop
sbb
dec
cmp
push
push
jb
je
stos
mov
mov
push
test
ret
jl
pop
jb
pop
jne
mov
lods
cmp
dec
mov
jno
jecxz
adc
xorb
in
popa
orb
orb
push
jns
push
pop
xor
jg
mov
out
push
mov
in
movsb
bound
ja
sub
push
lods
dec
loop
xchg
ret
and
inc
adc
aaa
aaa
cmp
add
push
and
push
dec
fcmovnbe
push
lret
sahf
inc
push
je
adc
movl
xchg
rorb
jmp
pop
stos
cmpsl
inc
lcall
les
pop
cld
jb
cwtl
jae
mov
pop
jl
mov
and
add
movsb
cmp
pop
jne
sub
cmc
sbb
pusha
xchg
cmpsb
jle
lret
push
lcall
sahf
cmp
xchg
repnz
out
add
pop
mov
mov
aad
mov
jecxz
adc
cwtl
outsb
dec
mov
adc
mov
bound
call
jae
push
mov
ret
fstpt
cmp
xchg
mov
addr16
sbb
or
mov
inc
orl
ja
outsb
movsb
xchg
inc
push
mov
vxorps
out
rcrl
ds
xlat
arpl
repz
dec
in
rcrl
cmp
mov
dec
rolb
outsl
mov
ret
mov
cltd
sbb
cmp
cmp
mov
mov
mov
add
push
mov
insb
repz
and
cmp
es
add
sahf
insb
jnp
push
cs
or
cltd
out
xchg
sti
test
and
lock
movsb
pushf
lock
mov
out
push
push
popl
testl
ljmp
push
decl
sub
cmp
sbb
or
mov
xchg
hlt
cmpsb
shr
and
xchg
sub
aad
push
mov
cmpsb
aas
pop
int3
sbb
fnstsw
xor
scas
pop
daa
ret
jo
dec
jae
rcrl
bound
mov
jb
sub
push
jb
in
push
addr16
std
or
jns
ret
mov
push
adc
push
and
adc
xchg
loop
pop
pop
pop
push
imul
repz
dec
stc
lds
out
loop
ljmp
loop
mov
mov
jae
cmc
lea
jno
cs
push
jae
das
sarl
mov
in
sbb
fnstenv
cwtl
fdivrp
mov
cmp
mov
sbb
mov
pop
mov
bound
les
xchg
test
icebp
imul
push
iret
adc
adc
pavgb
repz
out
mov
adc
mov
adcb
imul
nop
stos
adc
push
out
xchg
and
mov
les
jae
shrl
inc
arpl
enter
test
in
mov
pop
xor
cmpsl
lret
mov
jnp
push
cmpsl
out
daa
push
add
inc
cmp
jle
jno
aaa
data16
pop
add
pusha
mov
lock
mov
andl
jo
fstp
lret
les
xchg
into
insl
and
xlat
in
imul
test
jge
or
inc
sub
int3
xchg
test
jecxz
inc
scas
rcll
push
and
call
ficoml
lock
pop
mov
add
je
push
adc
cmp
stc
out
adc
lahf
lahf
push
or
xchg
loop,pt
ljmp
ss
ljmp
adc
cmc
xchg
mov
push
ljmp
fidivrl
out
imul
ror
mov
cli
xorb
call
repnz
or
dec
mov
jnp
or
aaa
cwtl
clc
push
and
sub
testb
add
push
mov
sti
xchg
sbb
in
cmpsl
jne
adc
sbb
pop
pop
push
cli
push
repz
mov
mov
insb
dec
rclb
in
cmc
add
jle
stos
jns
jae
daa
les
dec
mov
mov
cli
sub
inc
mov
lret
push
mov
inc
dec
push
rcrl
push
inc
nop
xor
inc
pop
push
sarb
dec
mov
cmp
jle
push
or
push
test
ret
es
mov
paddsw
pop
shll
and
or
in
cmpsb
iret
pusha
mov
xor
dec
divb
xchg
repz
std
mov
cmp
xchg
or
js
adc
lret
into
push
inc
xchg
add
ljmp
push
pop
adc
mov
mov
stos
xchg
push
mov
adc
test
sbb
rolb
je
popf
push
subb
out
stc
jmp
outsb
stc
mov
cmpsb
ja
jo
or
cmpsb
aas
inc
hlt
aaa
rol
adc
adc
aam
imul
xor
repz
fiaddl
add
in
enter
add
lods
jbe
push
dec
add
ds
loopne
pop
pop
jno
adc
dec
push
mov
fildll
out
ja
adc
lahf
push
out
sbb
jecxz
dec
in
int
fwait
push
clc
rclb
sbb
cmpsl
dec
lods
adc
lea
adc
pop
gs
fwait
loopne
push
repnz
xchg
pushf
imul
out
xchg
lret
mov
pop
test
aas
push
es
and
orl
add
iret
cmp
cmp
fwait
je
inc
mov
adc
hlt
jmp
jle
les
sub
arpl
jg
lods
mov
pop
enter
leave
gs
gs
jo
jbe
adc
jmp
add
or
mov
pop
mov
jns
pop
or
pop
sub
mov
stc
test
sarl
push
xchg
sub
and
jle
mov
xchg
sub
int
push
sbb
out
ret
mov
bound
cltd
push
mov
push
ret
jo
push
test
xlat
pop
xchg
add
mov
dec
fcompl
xor
adc
and
push
add
sbb
mov
jb
add
mov
adc
dec
xchg
fistpl
add
mov
cmpsl
adc
mov
sti
inc
lret
xlat
fs
rcrl
scas
xchg
fiadds
adc
or
insb
jg
add
andb
xor
and
insb
inc
fists
mov
xor
stc
jnp
add
jle
mov
sbb
rol
add
sahf
lahf
push
sub
cmc
fldcw
repz
push
cmpsl
push
push
data16
add
repz
enter
adc
and
or
aaa
jno
and
dec
or
loop
mov
loop
fwait
data16
scas
outsl
sub
adc
leave
lods
xor
push
jae
icebp
imul
and
add
fiadds
push
dec
xor
lea
adc
mov
add
pop
add
sbb
ret
xor
mov
xor
cmp
mov
test
loopne
cmpsl
fnstenv
push
cmp
int
mov
rcrl
mov
pop
aas
dec
sub
inc
pop
push
push
push
inc
testl
jae
jns
repz
sbb
xchg
scas
aaa
vcvttsd2si
out
addb
dec
sbb
and
ljmp
imul
xchg
mov
loop
and
xchg
cmp
insl
xchg
push
lret
sarb
ds
daa
outsb
cmc
or
push
jae
sbb
scas
adc
mov
inc
xorl
pusha
fiaddl
push
insl
xlat
arpl
leave
mov
xor
jecxz
mov
das
inc
imul
das
dec
cmpsl
out
lds
add
je
mov
jnp
out
dec
add
movsl
dec
push
testb
imul
das
mov
aad
dec
addr16
leave
in
push
filds
arpl
cmp
icebp
push
pop
inc
insl
jns
ret
imul
in
fcmovb
add
pusha
call
mov
testb
or
adc
sarb
adc
xchg
add
cmp
cmp
sbb
ja
nop
add
sbb
cmp
jnp
jle
repnz
loopne
jno
cmc
ds
mov
add
scas
int
and
ret
addl
jae
mov
or
aam
add
fmuls
xor
jmp
leave
cmp
mov
int
jbe
fidivs
sub
sbb
lret
pop
out
test
push
jns
mov
jae
movsb
jnp
xchg
sti
out
sti
repz
pop
mov
push
repnz
subb
outsl
cmp
fwait
mov
xchg
pop
ret
add
sbb
fs
je
push
mov
inc
aas
cmpsb
rcrl
fidivrs
xchg
add
and
fsubs
dec
stc
ret
sbb
mov
mov
cmp
cmp
movb
je
pop
add
push
jnp
mov
jle
adc
repz
fisttpl
flds
ret
fmuls
jl
stos
sbb
lret
movsb
push
insb
or
add
in
sbbb
add
lods
push
cmp
in
xor
mov
xlat
popa
insl
add
fisubl
inc
push
mov
xchg
shll
call
sub
loop
push
ss
xor
adc
add
fsubl
mov
add
movsb
xchg
daa
push
jnp
mov
ljmp
jns
jg
int
push
testl
scas
out
sub
ds
data16
xchg
pushl
dec
mov
mov
loop
dec
cmc
fdivrp
dec
rcrl
or
fsub
mov
sbb
mov
push
dec
scas
cltd
cmp
dec
pop
adc
clc
inc
mov
movsb
and
cltd
mov
pop
outsl
iret
mov
dec
add
inc
mov
into
in
mov
fmul
cld
sub
sbbb
fdecstp
pop
int
stc
cli
imul
pop
dec
pop
and
sbb
mov
pusha
dec
xchg
push
push
cmp
xor
mov
xor
sbb
int3
cwtl
sub
pop
das
inc
pop
cltd
mov
push
dec
rcrb
jl
enter
cld
add
les
mov
popa
movsl
cmp
ret
popa
in
xchg
into
notb
ja
test
ret
call
mov
out
mov
mov
outsl
inc
imul
mov
pop
or
pop
xchg
cld
mov
lahf
cmp
fisubl
cwtl
ficompl
sar
and
mov
pop
flds
lea
out
negl
rcll
jns
add
inc
int
xchg
repz
push
scas
nop
outsl
les
and
add
jmp
sbb
add
push
mov
ss
pop
nop
je
mov
jns
ret
xchg
push
dec
lock
mov
les
jecxz
pop
test
xchg
xor
mov
sbb
les
lret
shl
mov
xor
pop
xchg
or
cwtl
push
fdivl
fwait
mov
and
insl
ss
xchg
dec
sbb
xorl
movsl
ret
jno
pusha
cmp
cmp
fisttpll
rcrb
push
dec
aaa
loopne
mov
sbb
jae
xchg
mov
adc
xchg
xchg
loop
mov
and
into
mov
sahf
xchg
iret
das
push
pushf
ja
add
or
adc
cltd
test
or
test
mov
mov
xor
in
dec
stc
jecxz
popf
movsb
push
push
filds
js
or
xor
mov
cmc
cmc
addr16
mov
rcll
inc
arpl
cwtl
or
pop
jo
cmp
inc
mov
adc
add
push
push
jmp
push
stc
pop
cwtl
pushf
jae
xchg
mov
push
in
pop
inc
lcall
rcrl
imul
aam
or
mov
cmc
fucom
dec
push
jle
sbb
sbb
testb
cmpsl
cltd
fwait
inc
stc
and
js
sbb
sbb
adc
popa
jo
sub
add
xchg
aas
cli
push
ljmp
das
stos
rolb
ljmp
imul
fistl
cmp
cmp
xchg
sti
ret
outsb
fbld
sbb
stos
int3
test
mov
cmp
xchg
adc
fiadds
pushf
and
fadds
jno
imulb
jl
dec
sahf
mov
not
idiv
jl
dec
dec
sar
shlb
test
dec
jecxz
imul
aaa
stos
mov
push
inc
lds
adc
jno
mov
add
xor
cmp
mov
xchg
xor
mov
int
xorb
lds
out
xchg
sub
std
pop
lea
data16
aaa
add
lret
jb
mov
xchg
push
aad
sti
inc
in
ret
out
idivl
dec
or
out
pushf
in
sbb
add
fsts
scas
or
gs
mov
sti
sar
xor
sub
or
adc
andl
les
mov
add
fs
inc
add
insl
pop
mov
imul
outsb
rcrl
push
push
mov
ret
mov
repnz
lods
test
test
dec
xor
sbb
mov
sub
mov
mov
subb
test
cmp
inc
and
adc
out
mov
push
hlt
ljmp
mov
mov
sub
cwtl
cmp
enter
mov
or
iret
adc
dec
xor
xor
or
pop
and
cltd
rcll
out
mov
in
add
int3
iret
repnz
rol
in
imul
aad
lea
mov
xor
xor
shlb
xorl
data16
lahf
mov
mov
lods
insb
pop
test
jge
push
cwtl
daa
cltd
dec
rcrl
inc
ljmp
xchg
cmp
and
jns
dec
les
fdivrl
stos
imul
mov
loopne
xchg
outsb
leave
fs
das
aaa
mov
sbb
adc
and
in
mov
sbb
and
add
add
aad
sbb
fs
cmpb
mov
push
push
xor
xchg
leave
test
lea
test
mov
sub
fildll
inc
mov
jle
xchg
sub
xchg
xor
sub
push
les
xor
lds
mov
cmp
and
and
mov
or
cs
cmpsl
aas
ss
das
mov
mov
xchg
jb
push
dec
inc
or
push
cmp
test
push
sbb
mov
mov
xor
mov
fsts
push
push
ja
sbbb
dec
xor
call
add
xchg
hlt
sti
fs
push
sbb
xor
sub
inc
in
sub
pop
jns
pop
mov
insb
push
sub
in
cmc
mov
mov
fiadds
jnp
insl
jp
jl
shrb
fcomi
adc
out
adc
clc
lahf
fs
in
xchg
pop
loop
fcmovne
add
push
cld
movl
sub
xor
rcrl
adc
jmp
inc
jne
mov
dec
ret
out
test
inc
aaa
cmc
inc
sub
nop
aad
les
dec
sbb
and
ret
repz
inc
fs
dec
or
sbb
stos
pop
lods
repz
cmpsl
std
ret
mov
imul
pop
ljmp
push
aas
jle
pop
in
stos
test
lret
mov
xchg
out
in
push
xor
mov
arpl
mov
mov
call
aaa
repnz
data16
mov
lock
mov
mov
test
push
push
xor
aad
in
mov
pop
in
into
lahf
ret
cmpsl
in
sbb
or
add
mov
test
out
xlat
inc
cltd
ret
sbb
aaa
iret
repz
pop
dec
sbb
adc
cwtl
xchg
add
inc
mov
pusha
popf
jo
gs
mov
adc
lcall
xchg
int3
aam
adc
and
in
pop
test
push
ret
out
mov
sbb
ret
dec
inc
push
roll
outsb
mov
outsl
mov
ret
inc
imul
push
push
cmp
in
lahf
fsubl
bswap
das
pop
stc
out
dec
push
mov
inc
cmp
aam
jne
cmp
rorb
jb
fsub
lds
inc
or
pop
push
mov
mov
scas
or
fwait
mov
loop
sub
or
fstl
fs
stos
lods
jae
into
lret
cmp
push
out
and
adc
out
mov
test
cmc
jmp
mov
repnz
sbb
sbb
fistpll
test
pop
stos
jo
mov
sbb
aaa
lret
xchg
ret
mov
icebp
xchg
lea
sub
dec
daa
aam
ja
adc
push
ret
arpl
test
rol
ja
mov
cmp
enter
repnz
ret
pop
movsl
mov
pop
sbb
std
movsb
sub
lods
add
out
dec
push
xor
sarl
inc
sti
mov
sarl
sub
xor
ds
lret
cwtl
xchg
sub
mov
mov
sbb
sahf
sahf
in
hlt
loop
pop
sbb
cmp
mov
add
mul
leave
jne
cmp
cmc
iret
loop
repnz
addr16
mov
pop
push
cli
mov
loope
ds
insb
mov
cmp
outsb
fcomp
jb
inc
fildll
or
mov
cmp
ret
stos
es
jp
adc
dec
add
dec
lea
or
ret
jle
pop
xor
stos
mov
cmp
dec
lea
and
pop
notl
sub
out
and
and
inc
rcl
cmp
sub
ja
inc
fsubrl
dec
pop
shll
setbe
pop
mov
fistl
sbb
push
xor
leave
inc
scas
test
sub
xchg
xchg
push
jge
cli
pop
mov
adc
lods
add
mov
shlb
js
push
push
xchg
sti
dec
inc
xchg
inc
mov
es
jmp
or
push
xchg
dec
cmp
andl
xor
inc
jmp
cmp
add
and
dec
bound
mov
push
push
cmc
sbbl
pop
out
push
repnz
lahf
cld
dec
mov
push
stc
mov
inc
push
xchg
mov
inc
pop
adc
pusha
mov
psadbw
out
pop
add
dec
mov
xchg
mov
push
xchg
jge
jbe
cmp
or
clc
mov
jmp
ds
mov
scas
data16
xchg
dec
outsl
mov
pop
ret
inc
out
loop
and
jnp
clc
mov
clc
fs
or
dec
and
cbtw
ud1
mov
jp
xchg
sbbl
mov
or
xchg
out
add
notb
sbb
push
jb
mov
movsb
int3
push
pop
pushf
aad
jno
dec
flds
mov
pop
call
fwait
cmc
pushf
push
sbbl
in
pop
dec
jp
call
gs
push
stos
lret
inc
sub
and
sub
sahf
jge
inc
jns
int
jmp
scas
pushf
pop
xor
adc
xchg
sbb
inc
xchg
ficompl
les
cmp
cmpl
popf
mov
clc
sbb
inc
fsts
mov
sbb
push
push
hlt
xchg
xor
jns
aam
lret
rol
adc
jl
jno
xchg
fwait
or
inc
add
test
dec
cltd
rcll
mov
shrb
test
jbe
lods
enter
mov
imul
jmp
jge
cld
add
jg
mov
ljmp
in
lea
sub
and
xor
fisubs
cwtl
mov
cmpsl
push
dec
mov
dec
stos
xchg
jae
ds
js
loopne
dec
test
push
sub
mov
mov
and
iret
cmp
sub
bound
mov
push
sbb
cmovl
pop
inc
or
cmp
fwait
or
mov
dec
pop
xchg
push
jge
sbb
push
roll
xor
jl
adc
in
dec
int
or
pop
or
inc
fistpl
subl
jecxz
cld
enter
addb
divl
shr
inc
jnp
mov
rorl
aam
into
fidivl
mov
pushf
scas
aam
mov
xor
adc
clc
mov
stc
lds
sub
jns
nop
inc
add
push
iret
pop
xor
mov
xor
and
inc
pop
rorb
inc
xchg
xor
mov
out
lea
xchg
pop
ja
lret
inc
sub
lds
in
sub
cld
add
repnz
push
dec
mov
out
pop
cmp
lods
dec
adc
jnp
lods
std
loop
fdivl
sbb
cmp
jp
mov
fiaddl
es
dec
inc
push
sub
aaa
std
scas
sbb
add
test
adc
adc
and
mov
xor
mov
push
into
fwait
pop
xor
push
movsl
pop
inc
bound
mov
push
addr16
or
lds
mov
leave
nop
pop
pop
mov
dec
and
cmpb
in
dec
jge
lods
cmpsb
sbb
adc
stos
cmpsl
es
dec
stos
mov
stos
fcomip
icebp
js
aas
das
mov
fnstsw
jae
push
ret
cmp
mov
dec
lret
or
call
mov
add
leave
mov
jno
loopne
cmp
test
jg
jge
sub
inc
int
inc
push
lods
lea
xchg
cmp
mov
outsb
int
sbb
loopne
sbb
inc
es
dec
jecxz
fmuls
dec
cli
mov
and
je
aad
lea
adcl
sti
mov
jg
stos
hlt
cmp
mov
movsb
push
lea
jno
inc
out
cmp
adc
pop
xchg
mov
pop
adc
leave
and
xchg
mov
hlt
scas
or
cmp
vcmppd
and
adc
and
ljmp
loop
jecxz
push
mov
mov
test
add
cmpsl
imul
xchg
push
into
jecxz
cmp
push
jo
dec
icebp
xchg
in
fisubrl
cmp
push
aaa
sub
and
jne
mov
and
sbb
sahf
push
jecxz
in
mov
ffree
icebp
aas
sub
push
dec
xlat
fists
into
divl
push
push
test
jo
mov
xchg
nop
inc
dec
popf
arpl
xchg
or
adc
mov
push
pop
fdivp
xor
cmp
lods
fisubrs
jmp
je
xchg
add
sahf
cmp
cmp
xchg
addr16
out
jg
mov
jp
and
dec
je
in
and
scas
loopne
bound
fs
lods
cld
cmp
xchg
add
movsl
add
xchg
leave
xchg
ljmp
dec
leave
cmp
jne
or
add
es
lret
pop
lds
in
fmuls
sahf
dec
pop
mov
addr16
push
cmp
js
mov
cs
pop
xchg
mov
xchg
mov
in
fdivrl
cmp
pushf
insl
dec
mov
mov
mov
lods
jg
pop
aas
pop
sahf
mov
jle
out
inc
jnp
rcrl
inc
cmc
fucomi
lods
sub
vmread
call
mov
lods
stc
adc
xor
shrl
ret
and
nop
or
scas
cmp
push
movsb
push
jle
cmpsb
mov
mov
push
mov
pop
dec
add
and
mov
cmp
xchg
retw
xlat
xchg
xchg
and
ljmp
fwait
push
lods
stos
adc
jno
mov
dec
jne
mov
test
mov
add
inc
lock
lcall
cmp
push
ficoms
loope
sub
push
ljmp
pop
aas
sarl
sub
mov
jns
popf
int
xchg
or
fcomps
cmp
int
sbb
inc
ja
mov
mov
popa
jno
into
test
fldt
cmpsb
pop
sbb
or
outsb
lret
and
sbb
sub
out
sar
imul
sbb
push
outsl
push
lods
sarl
inc
fs
sub
xchg
outsl
notl
ljmp
lea
xchg
jecxz
sbb
xchg
fs
sbb
inc
add
scas
aas
insl
push
dec
sbb
and
je
pop
xchg
lods
dec
push
repnz
adc
les
mov
xor
aas
lea
hlt
ss
icebp
push
lock
dec
fidivrs
cs
into
hlt
xor
push
pop
test
dec
mov
cltd
dec
or
cmpsl
loope
rol
cmc
mov
inc
std
fsubp
scas
sbb
push
cmpsb
mov
inc
lods
fidivl
and
xchg
call
sbb
es
mov
mov
inc
lcall
mov
lods
into
insl
fstpl
pop
nop
scas
inc
fistpll
push
pusha
push
jmp
cli
lods
xor
sub
mov
jno
add
or
cmp
cltd
xchg
and
xchg
dec
std
mov
or
or
xchg
out
or
sub
aam
mov
daa
imul
add
pop
adc
lods
fsub
inc
or
stos
push
ss
pop
push
mov
sahf
ss
push
ljmp
push
cs
data16
hlt
ss
pusha
push
adcl
jp,pn
shlb
lods
sbb
test
or
inc
adc
pusha
jg
xor
mov
test
out
popf
cmp
and
add
and
insb
call
pop
sbbl
sbb
or
lcall
cmp
iret
add
mov
xor
and
push
xchg
sbb
sbb
mov
inc
and
insb
insl
dec
je
push
adc
pop
cmpb
les
outsb
adc
dec
ret
test
mov
add
add
pop
incl
popf
ds
aaa
add
add
and
dec
sub
and
jae
sbb
imul
mov
repnz
mov
jno
orb
xor
cmpsb
jnp
mov
shlb
std
stos
shrl
rclb
mov
and
mov
js
test
and
mov
js
cmpsl
or
pop
mov
mov
dec
and
cmp
xor
loopne
push
outsb
inc
mov
mov
dec
mov
imulb
cltd
mov
cld
in
shl
lods
hlt
xor
or
pusha
pop
mov
add
mov
xchg
jo
insb
push
dec
fistpll
nop
push
cmp
pop
inc
mov
fiadds
add
aas
ror
sqrtsd
jo
loop
js
pop
hlt
and
addr16
xlat
xchg
out
or
push
xor
push
ret
sub
pop
in
push
mov
pop
mov
leave
xchg
ss
outsl
mov
inc
mov
inc
mov
mov
int
fdivl
iret
jle
inc
cmp
rcrl
adc
and
js
mov
xor
ficoms
pushf
jecxz
stos
or
mov
inc
dec
stos
call
sbb
andl
dec
dec
fdivl
xor
mov
mov
pop
xchg
inc
inc
bnd
push
aam
mov
cmp
pop
insb
xchg
shrb
fstpt
scas
std
arpl
bound
mov
clc
xchg
add
jmp
stos
call
push
jle
test
out
decb
jns
xor
lret
mov
rcrl
mov
hlt
into
cmp
fcompl
out
mov
shr
pop
mov
push
mov
push
xchg
ds
cmp
les
cwtl
pop
fptan
in
and
je
or
rorl
push
push
pusha
fwait
in
test
les
mov
cmp
bound
iret
push
sub
adc
jl
ja
mov
dec
push
fistl
mov
arpl
iret
mov
mov
lods
push
mov
cltd
sub
ja
test
pop
les
push
push
cltd
mov
cli
out
outsl
addr16
dec
xor
fimuls
xor
insb
out
add
add
fs
loopne
orb
dec
mov
ret
ljmp
jg
inc
shr
jns
jb
xor
vsubps
outsb
call
pop
loop
popa
ret
cmpsl
adc
push
pop
js
xor
and
sub
cvtps2pi
push
icebp
mov
adc
js
enter
dec
lods
mov
pop
out
adc
daa
repz
dec
jge
xchg
aam
mov
sub
xchg
repnz
push
dec
sub
and
and
pop
dec
xchg
ret
aaa
repnz
pop
js
in
xlat
in
mov
in
sahf
outsb
pop
mov
sbb
outsb
lds
orl
push
in
ret
cmp
lods
jae
mov
xchg
jecxz
fistps
push
sbb
lods
xchg
jmp
fwait
jae
test
or
dec
es
sbb
sbb
dec
into
and
repz
and
clc
jbe
pop
mov
lret
out
xlat
inc
dec
add
lret
in
cmp
mov
inc
out
in
jp
push
pop
sub
lods
jno
daa
rcr
jae
fstpl
pop
jo
or
movb
das
or
popa
stc
xchg
jne
push
add
int3
outsl
shr
js
addr16
loopne
rol
andb
xchg
loopne
or
stos
sub
mov
aaa
out
xor
mov
sub
fs
fimull
cmp
pop
xlat
adc
dec
sub
pushf
and
mov
pop
sbb
mov
mov
loop
jg
fs
shlb
loop
xchg
cmp
lods
mov
xchg
out
push
push
addl
jns
movq
loop
je
mov
pop
ret
imul
push
sbb
adc
and
cwtl
mov
lock
push
jge
sbb
mov
cmp
mov
test
xchg
and
and
adcl
stos
jmp
and
jl
xchg
add
roll
inc
test
cmc
repnz
das
mov
pop
rcll
xor
and
cltd
jno
or
xor
dec
push
xchg
or
scas
and
loope
push
in
std
add
push
push
xor
inc
js
pop
cmp
pusha
loop
outsb
lock
dec
xchg
mov
ljmp
icebp
dec
fmuls
mov
int
ss
stos
add
lea
cmp
adc
fwait
dec
fldenv
jns
lcall
int3
xchg
sahf
push
mov
mov
adc
or
mov
jns
sets
jne
lods
or
icebp
stos
dec
jecxz
xor
adc
adc
xchg
test
cmp
cmpsl
mov
xlat
imul
mov
cmp
jp
cmp
jbe
mov
mov
pop
inc
mov
xchg
ret
inc
lcall
or
sahf
mov
push
push
mov
pop
mov
icebp
push
add
mov
iret
add
add
xchg
mov
jb
in
out
add
sti
jae
in
ljmp
push
scas
mov
sub
xchg
out
xor
mov
mov
xchg
data16
aad
out
test
lock
add
enter
jge
lahf
cmp
rol
push
xor
inc
mov
std
test
jmp
fsts
mov
addr16
lock
sub
and
inc
sub
push
sub
dec
dec
and
sub
pop
je
daa
popf
fildl
mov
jne
xor
mov
sub
dec
scas
stos
sbb
pop
pop
in
cmc
lods
pop
inc
jecxz
push
outsl
jl
test
push
mov
and
int3
jno
jp
sbb
xchg
sahf
pop
stc
pop
push
mov
push
or
xchg
mov
repnz
jg
loop
jmp
les
jo
sub
andl
or
pop
aad
dec
inc
mov
test
mov
pop
cltd
fsubrs
dec
popf
fst
pop
cmp
pop
mov
xchg
imul
jo
rorl
fwait
cmp
adc
pop
cmp
xchg
jle
insl
sub
ficompl
dec
leave
aam
cmpsb
fwait
clc
sti
mov
cmp
hlt
sbb
test
xchg
dec
cwtl
les
xor
mov
mov
outsb
cmp
ss
cmp
add
inc
out
sub
popf
and
or
sbb
mov
mov
mov
and
add
mov
popa
mov
shrl
sub
fldt
push
xchg
push
sub
inc
jmp
mov
jne
pusha
mov
jns
add
inc
mov
out
into
or
xchg
dec
js
movsb
loope
xor
lds
push
shrb
out
aaa
jae
fistpll
xchg
loop
add
cmp
xchg
fldln2
dec
pop
pop
sarl
daa
push
push
sub
and
cmp
cmp
mov
in
roll
mull
lret
mov
mov
xlat
sti
sbb
push
mov
or
mov
mov
or
mov
adc
add
je
and
leave
cmp
cltd
inc
and
fdivl
popa
jns
dec
ja
inc
popa
mov
push
jge
and
push
inc
sbb
push
inc
pushf
mov
dec
cs
out
out
lods
pop
adc
mov
mov
and
dec
mov
or
fiadds
sbb
push
stc
shr
or
lahf
std
and
push
xchg
vmovlps
xchg
mov
pop
sub
add
mov
pushf
aas
scas
push
inc
mov
push
aas
mov
adc
lods
push
mov
and
nop
mov
xchg
dec
cwtl
js
push
lret
cli
lods
push
or
arpl
push
add
jb
sub
inc
cmpsl
push
push
in
rolb
aam
jmp
pop
icebp
inc
push
jg
or
mov
fbstp
xor
ljmp
fneni(8087
cmovo
aas
mov
fdivrl
jge
sbb
xchg
sub
xchg
add
dec
test
adc
mov
imul
jmp
fadds
jmp
fimuls
lods
mov
sbb
add
std
xor
dec
cmp
mov
push
dec
pop
lods
push
jae
dec
fimull
push
dec
outsl
lgs
xor
adc
faddl
shll
push
push
in
pop
lcall
jecxz
stc
les
pop
or
inc
sub
aaa
or
mov
sbb
insl
pop
popf
xor
sbb
jne
and
stos
adc
mov
lds
lock
inc
loop
sbb
xor
jl
push
push
shlb
mov
arpl
ds
jo
jmp
lcall
jnp
push
push
in
mov
test
sub
icebp
mov
xchg
mov
sub
sti
movsl
xchg
cltd
mov
stos
jb
out
xchg
mov
fwait
pop
push
xchg
scas
push
jae
mov
test
ds
push
jnp
icebp
inc
adc
or
popa
jbe
test
pop
and
lods
int
xorb
cmp
jne
shlb
lret
cs
mov
mov
add
testl
es
sti
pushf
pop
sub
inc
mov
adc
repnz
add
in
in
xor
xor
insl
fs
sbb
sbb
int
mov
xlat
jno
pop
lret
aad
xor
ficompl
out
xor
ret
add
es
mov
cmpsl
dec
or
dec
dec
inc
pop
and
nop
ficoml
shll
push
test
xlat
movb
jbe
jbe
xor
mov
js
pop
cli
jmp
scas
xor
pop
push
add
and
test
push
mov
mov
sbb
xchg
cmp
lahf
test
mov
or
pop
shrl
add
fs
mov
jmp
jg
test
push
pop
scas
jne
inc
cltd
fs
or
or
dec
movsb
stos
mov
mov
inc
mov
addr16
test
lds
sub
mov
or
ret
arpl
mov
jl
lds
push
lret
aas
adc
inc
or
cltd
sbb
sub
and
sbb
xchg
mov
sub
pop
jbe
lods
mov
adc
mov
add
bound
sahf
cmp
push
cmp
cmp
mov
mull
adc
xchg
jmp
fprem
stos
je
ss
push
jns
pop
mov
jne
and
notl
adc
mov
decb
jne
push
mov
fs
adc
icebp
insb
jp
outsl
xor
jne
xchg
inc
sbb
push
popf
dec
iret
fcomp
rorl
sub
icebp
dec
pop
push
aaa
lret
inc
stc
lcall
adc
mov
fdivl
push
loope
push
inc
js
push
or
cmc
testl
div
test
in
sbb
mov
mov
fwait
js
lcall
in
loope
inc
xchg
clc
mov
pcmpeqd
mov
or
push
lcall
or
mov
and
jnp
or
jnp
stos
inc
mov
inc
insl
push
sar
addr16
leave
sbb
push
sbb
jne
pop
or
jecxz
test
stc
ja
dec
loopne
pop
bound
pcmpeqw
movsl
push
roll
push
cmp
dec
mov
mov
push
dec
pop
push
mov
mov
dec
adc
inc
xchg
mov
shlb
or
sbb
mov
jne
mov
rcrl
sub
aaa
mov
adc
lock
xor
fwait
adc
pop
push
aad
andb
mov
arpl
or
xchg
jge
rcrl
pop
divb
add
push
int
sub
leave
push
xchg
pop
mov
jp
push
std
pop
notl
pop
gs
cwtl
aam
xchg
in
inc
mov
test
dec
cld
enter
stos
outsb
adc
fdivrl
or
push
je
scas
sbb
lods
lret
mov
addr16
inc
inc
cmp
fs
call
scas
fldenv
data16
dec
sbb
xchg
pop
sub
shlb
stos
xor
outsl
out
xor
mov
xchg
cli
rcrl
mov
outsb
stc
dec
hlt
pusha
cmp
fwait
xchg
das
mov
test
dec
in
xchg
sbb
lret
mov
icebp
mov
mov
ret
mov
pushf
pop
insb
jg
pushw
test
jge
add
xchg
ficompl
arpl
test
test
lret
jo
icebp
aaa
iret
mov
ss
je
pop
pushf
in
je
stos
push
inc
shl
push
mov
adc
bound
xchg
int
cld
iret
xchg
scas
loop
push
lock
sahf
adc
in
test
int
scas
adc
mov
cmc
xchg
movsl
je
outsb
lahf
fdivr
push
mov
fmuls
cmpb
addr16
dec
or
aaa
cltd
inc
add
sbb
jmp
fdivs
xor
inc
aad
cmp
sbb
ss
test
mov
cmp
fildl
jmp
pop
jns
push
mov
add
add
push
push
icebp
andl
testb
stos
push
les
push
in
mov
jno
and
mov
xchg
lods
xor
sub
fidivrs
mov
xchg
mov
icebp
or
das
movsl
dec
push
jbe
push
dec
ja
and
and
cltd
ret
jno
dec
cltd
addr16
or
out
dec
daa
js
ret
and
subb
lret
outsb
xchg
inc
je
push
int
sub
or
repnz
fcmovb
sarl
mov
gs
out
cmp
push
xor
jno
dec
mov
jns
add
pop
mov
add
lods
data16
out
or
in
loopne
nop
push
dec
lcall
push
adc
mov
data16
cltd
sub
sub
mov
sbb
cmp
adc
movsb
negl
cmp
test
and
xchg
push
mov
sarb
mov
pusha
adc
pop
push
mov
xor
sbb
xchg
cmp
and
dec
test
mov
in
nop
sbb
jnp
mov
or
fcoms
mov
out
push
mov
fsubl
rcl
xchg
int
imul
push
jae
xor
dec
fiaddl
aaa
into
push
mov
xchg
fdivrs
fld
sbb
and
jno
jne
pop
fsubs
pop
inc
mov
mov
xchg
mov
adc
pop
cs
jno
shr
adc
shll
fistl
and
lods
sub
loope
decb
hlt
jae
lock
and
lahf
shrl
cmpsl
or
movsb
cmp
jmp
test
mov
lods
pushf
mov
movl
mov
jns
adc
mov
aad
xchg
cmp
sbb
int
jb
mov
ds
mov
push
pop
fdivl
dec
aad
jl
dec
sub
enter
mov
jge
inc
mov
push
sub
push
les
mov
gs
js
inc
pop
xchg
mov
dec
aaa
fsts
mov
mov
lds
lret
ljmp
add
xor
mov
pusha
push
clc
rol
movsb
mov
vmwrite
mov
leave
adc
jo
je
shrl
idivb
enter
lea
cmp
test
xor
in
xor
mov
mov
test
aaa
test
adc
sub
out
ljmp
aas
int
sbbb
daa
sub
add
loopne
xor
push
lret
mov
jecxz
pop
in
push
lea
inc
mov
cmp
push
cltd
imul
jae
cmp
in
pop
mov
inc
stos
fstpl
shlb
cwtl
dec
inc
movsl
push
lcall
jg
popf
dec
pop
pop
lahf
push
xchg
push
lcall
scas
or
cs
subl
mov
push
jge
fldenv
sub
inc
inc
popa
pop
push
jecxz
push
dec
mov
outsl
cld
fildll
and
sbb
mov
or
testb
call
pop
inc
pop
mov
arpl
hlt
cmp
sub
jecxz
lock
loop
dec
cwtl
ja
out
xchg
sub
dec
arpl
outsl
xor
pop
mov
push
push
jl
push
jmp
mov
cld
push
lcall
pop
insl
push
xchg
sub
repz
mov
je
pushf
mov
aaa
call
fucomi
push
shll
cmc
add
inc
aam
and
addb
mov
dec
mov
add
in
dec
jmp
mov
sub
popa
shlb
or
outsl
push
aaa
data16
inc
dec
inc
push
js
add
aaa
pop
mov
jp
call
inc
adc
pushf
sub
mov
nop
adc
inc
add
in
arpl
push
push
inc
mov
aaa
add
jo
xchg
and
push
mov
in
clc
lds
arpl
pop
stos
adc
inc
xor
and
xchg
pushf
xor
push
jo
shrb
aad
push
andb
je
icebp
sub
add
lea
mov
outsl
into
enter
cmp
jp
push
mov
mov
inc
mov
xchg
pushl
cld
pop
cwtl
icebp
call
cmpl
and
xchg
daa
pop
inc
dec
ret
addr16
cli
test
lcall
rorl
aaa
fsubs
movsb
adc
mov
sub
add
cmp
out
daa
push
inc
push
mov
mov
inc
inc
add
into
cmp
out
rorl
push
aam
jae
push
pop
cmp
out
sub
mov
fwait
cs
iret
xchg
in
dec
hlt
mov
pop
cltd
aad
int
pusha
push
ret
mov
cmpsb
lret
push
pop
add
sub
js
fwait
cwtl
sub
jb
std
cli
cmp
shl
sbb
push
sub
cli
sub
cmp
test
inc
push
pusha
push
lret
jno
in
icebp
add
lock
test
scas
or
inc
into
sbb
add
sbb
mov
mov
aam
out
cmpsb
test
dec
pop
mov
inc
cs
cwtl
adc
xor
out
pop
dec
mov
aad
test
mov
cmp
adc
or
jp
adcb
or
sub
hlt
fs
lods
ret
xchg
jbe
jmp
mov
jmp
mov
cmpsb
and
add
insl
cwtl
rolb
popf
cli
cltd
jl
cmp
pop
mov
xchg
xchg
xchg
sbb
mov
sub
sub
cltd
gs
insl
xor
lea
enter
icebp
xchg
jmp
or
mov
sub
pop
aas
sbb
jae
in
cmc
jecxz
ljmp
add
adc
popa
mov
xchg
pop
mov
ret
outsl
xor
jae
inc
insl
fmull
mov
repnz
mov
mov
rcr
les
sarb
pop
std
jle
fmul
aas
lcall
cs
stos
mov
test
icebp
pushf
sbb
inc
and
ret
cmpsl
sbb
dec
lahf
jbe
mov
ret
adc
imul
and
xchg
pop
push
pop
fs
pop
lahf
sbb
ds
leave
jmp
bsf
jg
cmp
dec
xor
mov
ret
hlt
xor
jp
pusha
outsb
pusha
fwait
je
dec
mov
xchg
out
in
adc
push
cmc
sbb
sub
cmc
mov
pop
outsb
inc
jb
and
xor
scas
inc
clc
mov
sub
mov
lods
rolb
lret
cmp
dec
repnz
xchg
mov
xchg
jae
out
es
add
dec
inc
mov
ret
adc
dec
rorl
pop
outsl
pop
push
sbb
in
sbb
and
sbb
cwtl
inc
andb
fnstsw
mov
rcrb
popf
and
fwait
inc
es
mov
jno
mov
xlat
sbb
fisttps
xchg
popf
stos
xchg
fs
sbb
mov
add
addr16
and
mov
push
aad
mov
adc
int
mov
sahf
xchg
aas
mov
cmp
xlat
dec
mov
sub
iret
cmpsb
ret
ss
out
repnz
aas
jbe
loopne
cltd
cmpps
push
rcll
out
incb
adc
sbb
jnp
push
dec
jbe
cmp
xchg
mov
cmp
jp
mov
gs
hlt
rcrl
or
push
in
add
movsb
outsb
sub
xlat
xchg
scas
or
ror
xchg
nop
pop
fs
rcl
or
std
maxps
pop
sbbb
pop
inc
outsb
imul
xchg
sbb
outsb
shl
or
in
push
scas
add
mov
mov
dec
in
sub
aas
and
or
and
dec
xor
xor
clc
dec
out
scas
pop
movsb
bswap
mov
call
pop
dec
fimull
sti
ss
jecxz
cmp
push
xchg
ss
lret
jge
fadds
pop
imul
or
pusha
pop
and
subb
roll
push
cmp
repz
in
loope
aad
inc
mov
shr
lahf
test
xchg
lea
mov
pusha
or
scas
pop
out
and
lods
mov
out
icebp
fwait
pop
lds
mov
insb
cmp
xor
pop
jns
test
pusha
ljmp
cmpsb
stos
shrb
sub
in
rclb
pop
call
out
rorb
and
sub
cltd
aas
add
jo
stc
jge
and
jae
mov
mov
nop
pushf
mov
push
inc
ret
dec
stos
push
mov
dec
jmp
outsb
dec
mov
xchg
dec
sbb
insl
das
fdiv
ja
jg
scas
jb,pn
mov
push
mov
mov
jle
fsubrl
pop
test
fwait
mov
sub
mov
fdiv
lods
adc
jb
movsl
cwtl
std
xchg
pop
lea
jae
sub
jnp
psubb
mov
xor
push
mov
cmpsb
jl
fadd
sbb
jmp
jno
repnz
test
jns
mov
scas
mov
xchg
mov
mov
scas
sti
adc
sub
jns
lods
add
int
cld
hlt
mov
stos
arpl
ficomps
repnz
and
fidivrl
and
ret
cs
repnz
insl
nop
and
pop
test
xlat
test
clc
mov
pop
stos
cmp
icebp
mov
pusha
test
leave
and
nop
scas
pop
mov
lods
mov
fidivrs
pop
and
inc
repnz
add
clc
pandn
and
and
add
jae
mov
push
fisubs
loopne
push
stc
pop
pop
sahf
mov
or
repnz
imul
out
testl
lock
sti
sbb
sahf
out
adc
jmp
cmpsl
jg
and
or
sbb
and
hlt
daa
adc
incl
pushf
ret
loop
int
pop
pop
inc
jmp
mov
add
daa
jns
or
push
sti
jmp
xchg
mov
jecxz
lods
mov
repz
rcr
mov
fs
loop
sub
jmp
rol
mov
xlat
inc
mov
ljmp
fadds
test
movsb
imul
sbb
pop
cmc
mov
dec
stos
mull
jo
mov
pop
imul
sbb
rolb
sbb
and
testb
adc
outsl
mov
cwtl
pop
push
cmpsl
mov
pop
push
out
pop
scas
pop
xchg
and
push
call
xchg
sub
std
inc
sub
xchg
sahf
icebp
mov
lret
mov
shlb
pop
mov
sbb
pop
pop
push
aam
std
and
fwait
cs
adc
lahf
scas
dec
dec
cmp
test
dec
jmp
pop
mov
ret
xchg
imul
loop
iret
xchg
mov
psrad
dec
sbb
mov
pop
ja
mov
sbb
mov
adc
push
mov
imul
stos
add
test
inc
imul
mov
dec
cli
stc
inc
insl
xor
call
xchg
rol
lods
shrb
inc
push
cmpsl
ficompl
push
aas
pop
mov
adc
cltd
or
ret
xor
add
dec
add
mov
and
fnstcw
cbtw
pop
popl
in
lods
icebp
jg
sub
cmp
sbbb
jle
iret
dec
xchg
adc
insl
pshufw
stc
loopne
js
xchg
jp
jl
sub
cmp
insl
add
push
hlt
jns
fcoms
fstpl
sbb
adc
bound
test
sar
movsb
sub
mov
mov
arpl
mov
xor
adc
pop
in
jle
jmp
mov
pop
pop
test
inc
hlt
je
fsubl
sub
jle
jns
cmp
xchg
loop
add
push
pop
xor
popf
xlat
pop
jb
pop
dec
mov
pop
pop
sub
leave
dec
xchg
jns
andl
leave
in
and
inc
push
adc
xchg
out
movsb
mulb
inc
xchg
jnp
setb
mull
lahf
out
inc
addr16
push
xchg
and
or
stc
rcrl
ret
sahf
aas
dec
cmp
sub
and
sub
adc
mov
add
popf
xor
sub
xchg
shlb
cli
lods
mov
sahf
pop
arpl
shl
mov
cmp
fildl
popf
jle
and
pop
xor
cli
fs
fs
mov
pop
fsubr
das
shll
xchg
jp
mov
add
orl
sbb
mov
xchg
clc
mov
das
leave
scas
pop
stos
clc
shll
or
dec
cwtl
jns
inc
cmc
sbb
mov
ja
pop
mov
mov
fisttpl
ja
fwait
adc
jbe
push
xor
push
adc
pusha
pusha
mov
inc
push
lock
adc
cwtl
and
lods
stos
rol
icebp
push
inc
add
xor
mov
sbb
mov
or
ja
std
repnz
or
aas
je
mov
or
push
or
stos
and
insl
adc
mov
add
lds
pop
ret
std
pop
or
lret
scas
fidivl
adc
gs
iret
inc
mov
loope
mov
sub
mov
mov
imul
dec
pop
lods
jns
or
push
dec
rcrb
inc
fdivs
out
and
jle
cmp
je
dec
insb
lock
clc
test
imul
scas
mov
pop
dec
add
add
sub
pop
xchg
jle
mov
fldl
add
out
jmp
andl
sbb
inc
inc
pop
jmp
or
stos
pushf
xchg
movsl
xor
ja
rolb
push
mov
push
movsb
inc
sub
fistpll
add
test
daa
and
pushf
xchg
inc
inc
mov
popf
shl
mov
dec
cli
xor
dec
mov
sub
sub
sbb
cmpb
sti
stos
inc
aad
imul
pop
xorl
jae
dec
lods
imul
mov
mov
mov
dec
jns
out
xchg
inc
mov
add
sbb
mov
push
jnp
cmp
test
adc
sbb
add
add
jb
dec
iret
ret
jno
sbb
dec
aaa
stos
icebp
push
ljmp
pop
outsb
pop
jne,pt
lret
dec
inc
stos
inc
stos
dec
xor
cmp
jge
jns
jge
mov
fstpt
mov
mov
xor
mov
daa
dec
nop
cld
xchg
decb
loopne
sub
lcall
add
push
cmp
cmp
push
fwait
subl
mov
insl
inc
movsb
sbbl
pop
dec
movsb
xlat
movsl
xchg
cmp
lret
xor
jb
dec
push
xchg
cmp
aas
lea
inc
adc
add
lahf
outsl
sub
hlt
icebp
fdivrs
xchg
xchg
xor
xchg
push
insl
cmc
pop
inc
es
and
adc
test
mov
pusha
pop
push
stos
in
push
enter
add
or
jb
gs
adc
jl
push
loope
aaa
or
mov
sub
test
jo
jae
adc
mov
out
push
pop
mov
lea
scas
lock
mov
adc
mov
enter
mov
xchg
or
sub
int
ljmp
or
cmc
cli
lret
mov
add
fimull
or
data16
mov
xor
mov
out
sub
sbb
pop
addr16
cmp
xchg
pusha
cltd
jl
ds
imul
mov
mov
dec
int3
mov
lea
xor
inc
js
adc
pusha
sub
mov
adc
push
test
js
push
xchg
or
pmaxsw
loope
jno
sahf
sbb
or
dec
mov
stc
pop
or
call
and
inc
add
jp
xchg
cmp
dec
loop
xchg
stos
in
mov
inc
mov
jecxz
or
cmpsb
sbb
and
push
cs
xorb
fldcw
je
filds
mov
fcom
rorl
sub
push
mov
pop
mov
sub
jge
pop
cmpsl
cmpsb
xor
jb
leave
call
sub
jmp
jg
mov
fcoms
push
push
mov
and
iret
push
lret
sbb
cld
dec
cld
add
ljmp
mov
add
repnz
adc
cmp
cli
call
xchg
push
mov
mov
sub
cmp
fwait
jno
mov
jmp
mov
fincstp
mov
addr16
leave
popf
or
or
or
hlt
insl
mov
sbb
clc
loopne
rcrl
add
ss
lods
mov
pusha
sti
cmp
aam
dec
enter
fnstenv
add
lcall
or
frstor
pop
jle
ficoml
enter
dec
movsb
mov
pop
fildll
jmp
xor
cmp
lds
dec
sub
insl
sbb
popf
mov
int
out
mov
mov
out
dec
mov
ja
jb
push
and
ljmp
push
xchg
ss
rorb
mov
mov
sub
lcall
mov
loop
sbb
dec
xchg
cmp
cmc
or
ficompl
je
ret
mov
mov
cmp
sbb
leave
xchg
out
addr16
xchg
aam
mov
jno
int
das
mov
imul
into
fists
lods
add
mov
pop
mov
xor
jl
add
and
insb
push
mov
inc
push
movsb
adc
lret
test
or
in
fdivp
loopne
xlat
stos
push
pushl
inc
fcmovnbe
mov
pop
mov
sub
roll
insl
push
push
dec
sbb
loopne
jno
mov
cltd
sbbb
mov
push
add
mov
jge
popa
jo
mov
sbb
loopne
adc
sub
mov
jno
int
sbb
inc
out
adc
daa
add
xchg
mov
sub
imul
xchg
pop
push
push
dec
jmp
mov
sub
or
lahf
inc
arpl
outsl
fdivrl
fnstcw
mov
adc
inc
imul
addr16
inc
mov
aam
jge
leave
jge
insl
lret
imul
sbb
aas
test
cld
daa
dec
sbb
andl
jne
lcall
clc
sbb
push
inc
fsubr
cli
lods
sahf
rorl
mov
cli
pop
aas
popa
mov
ret
pop
pop
das
adc
bound
xchg
mov
fldt
mov
push
mov
and
jecxz
push
sbb
add
push
jge
gs
sub
mov
fcompl
cs
pop
lds
xor
jp
and
mov
shlb
pop
test
adc
in
fcoms
ret
add
and
xor
push
sbb
fdivl
adc
into
insb
iret
in
sub
sbb
int
lret
adc
xor
cld
test
repnz
jg
enter
dec
je
xorb
int
loope
out
mov
pop
sbb
xchg
fstpt
mov
inc
rcrl
scas
sahf
pop
test
stos
inc
pop
push
rcrb
icebp
js
fistl
leave
adc
sarl
adc
dec
mov
mov
aad
ret
leave
rorb
repnz
xchg
xor
daa
mov
add
push
or
sub
js
orl
adc
sbb
test
test
cmc
and
mov
fbld
pop
rcrb
adc
sub
sbb
push
xchg
in
dec
daa
jl
ja
mov
cs
mov
xchg
hlt
cs
inc
insb
sbb
arpl
hlt
nop
xor
leave
xchg
mov
sbb
dec
fistps
jno
daa
cli
sarl
pop
mov
xchg
fcmove
mov
hlt
jecxz
xlat
mov
mov
jl
scas
rcrb
shrl
enter
fildl
insl
mov
mov
jl
fdivl
daa
add
mov
inc
push
test
aaa
popf
popa
test
into
cmp
test
pop
sbb
xorl
inc
push
lods
mov
pop
fsubs
loope
pop
cs
incl
mov
push
stos
cmp
xor
dec
and
or
lods
arpl
adc
inc
inc
insb
sbb
das
loopne
xor
pop
pushl
and
fstps
lods
std
push
dec
hlt
js
jmp
repnz
sahf
ljmp
addr16
sbb
mov
push
jmp
cli
push
fstpt
mov
pop
and
pop
loopne
into
dec
outsl
mov
pushf
or
sbb
mov
dec
jb
dec
sbb
add
pop
xor
pop
imul
add
aam
inc
and
imul
insl
jp
or
sub
add
loope
sbb
adc
das
loope
int3
jno
enter
mov
pop
cmc
jge
cmpb
cld
pop
in
jg
mov
push
ret
mov
add
scas
pop
icebp
std
shrl
jo
cmp
lahf
insl
cwtl
fisubs
jle
jbe
cmp
jle
les
sub
pushf
xchg
mov
push
int3
lods
idivb
jb
aas
adc
push
sbb
stc
aas
adc
adc
divl
mov
call
pop
pop
add
or
or
push
lret
jne
mov
mov
mov
adc
cmp
and
ret
lret
loopne
test
cmpsl
fnstcw
dec
inc
and
xlat
je
fdivl
sarb
ret
and
fcmovu
pop
out
ljmp
shlb
lock
dec
add
cwtl
mov
sub
and
outsb
pop
sub
cmp
dec
push
add
mov
jo
out
mov
loope
or
ret
adc
cmpsl
lret
and
push
dec
cmpsb
mov
jmp
sub
cmpsb
cmpb
rorl
lcall
fisubrl
js
add
xorb
mov
popl
imul
xchg
stos
push
aad
in
xor
insl
xchg
xor
jbe
adc
jp
pop
sub
sbb
xchg
mov
cmp
jl
in
push
jle
fwait
or
inc
mov
dec
push
and
daa
test
jl
cs
pop
fwait
daa
mov
popa
push
movsb
xchg
sbb
sbb
xor
fistpll
imull
pusha
jle
aas
das
sub
iret
dec
mov
xor
imul
pop
loope
jmp
sub
sub
mov
cmp
and
adc
mov
xchg
pop
and
pop
cwtl
lahf
mov
in
pop
mov
pop
xchg
bound
pop
sarb
icebp
mov
rep
outsb
add
xchg
xor
adcb
mov
inc
je
cmp
add
fucomp
mov
xor
bound
pop
mov
inc
and
fnsetpm(287
cmp
in
adc
mov
adc
sbb
mov
std
les
push
mov
mov
xchg
sbb
pop
push
in
mov
mov
das
xor
mov
ss
adc
in
lcall
adc
jmp
loop
push
imul
mov
push
pop
lret
outsb
add
add
adc
stc
mov
sbb
in
rcr
scas
jno
mov
test
push
push
add
jle
inc
stos
sub
ret
xchg
insl
aam
push
sub
sub
or
sbb
inc
push
outsb
mov
in
inc
cmp
sbb
insl
test
mov
xor
ss
insl
xchg
xor
test
dec
pop
cs
mov
ds
test
bound
leave
fs
out
mov
and
dec
popa
xchg
jg
xchg
push
dec
mov
pop
sub
xor
jmp
lods
dec
cmc
mov
push
push
dec
out
jns
xchg
in
into
enter
sbb
pop
add
jmp
dec
pushf
adc
and
inc
jecxz
jno
ljmp
add
mov
fstpt
fimuls
pop
jg
stc
lret
xor
icebp
pop
loopne
not
dec
or
mov
repnz
fmull
xor
lock
mov
stc
add
and
insb
popa
jge
pop
fisubs
jecxz
pop
cs
jecxz
cmpsl
cmpsb
adc
adc
fdivr
cmp
mov
lcall
stos
mov
xor
xchg
data16
movsb
add
adcl
lcall
shl
sub
cli
ss
xor
sbb
add
movsb
jecxz
stc
and
mov
loop
mov
scas
pop
push
sahf
cmp
mov
cmp
aam
adc
jb
jle
add
xor
pusha
repnz
jmp
mov
test
mov
popa
pop
mov
push
cmp
add
js
pop
arpl
je
out
mov
add
mov
or
into
adc
es
stos
mov
lock
imul
test
mov
jae
and
push
push
icebp
out
sar
mov
inc
push
ja
pop
pop
aad
xchg
cmpsl
pop
je
and
and
sbb
sbb
push
subb
adc
cmc
inc
subl
or
pop
cmpxchg
and
mov
push
xchg
mov
jo
dec
mov
jl
sahf
and
cwtl
lods
pop
ffreep
fistl
pop
push
mov
or
movsl
popf
loop
icebp
imul
dec
aas
mov
push
sahf
mov
and
repnz
lret
iret
in
cmp
push
inc
xor
ret
mov
in
mov
inc
rcrb
lcall
lods
jns
add
cmp
nop
loope
imul
sub
cmp
pop
jb
insb
test
out
pusha
add
xchg
enter
imul
clc
scas
pop
xor
mov
aam
daa
repz
in
jle
shrl
cmp
rclb
pop
mov
adc
dec
data16
aaa
stos
push
outsl
pop
adcl
loope
scas
clc
mov
push
arpl
adc
adc
ret
sti
xchg
jge
mov
outsl
repz
test
dec
call
clc
xchg
out
and
std
ret
pop
lcall
xor
ljmp
cld
lcall
add
loop
jae
mov
daa
das
mov
sub
push
mov
inc
cli
mov
inc
cmc
xlat
cmpsb
inc
xchg
insl
mov
jb
jg
adc
pusha
lcall
xor
in
dec
gs
std
dec
push
cmp
aam
mov
ja
xchg
mov
mov
in
movsl
ss
in
push
in
mov
jo
js
jno
xchg
popf
lret
inc
push
mov
inc
inc
pop
aam
mov
push
hlt
divl
into
setns
sbb
mov
in
cld
and
ljmp
sub
pop
and
mov
mov
out
rep
pop
dec
pop
and
loop
dec
and
and
aam
jle
inc
in
add
mov
insl
mov
sti
fcoms
les
sub
sbb
xor
loop
mov
push
loope
sbb
lods
or
or
into
xchg
out
jbe
sbb
lods
cs
mov
sub
in
and
sub
nop
lret
in
dec
sub
ret
test
push
or
and
cld
dec
inc
js
into
dec
jbe
sbb
xchg
pop
mov
outsb
andl
cmp
jbe
aad
decl
push
popa
fists
cld
push
mov
fidivrs
dec
imul
repnz
out
hlt
mov
pop
lods
dec
fldcw
pop
push
sbb
mov
adc
add
sbbl
pop
dec
or
lcall
sub
inc
dec
ljmp
dec
repz
cmp
ficompl
ror
add
ds
loope
test
lea
cltd
xor
pop
repnz
mov
inc
lods
mov
adc
push
icebp
jbe
mov
sbb
inc
push
fnstenv
in
shrl
xchg
sbb
mov
or
cmc
inc
shrb
or
test
jne
and
inc
out
push
shll
ror
lods
data16
and
xchg
mov
push
and
mov
xor
cwtl
mov
or
xchg
insl
enter
into
push
adc
sbb
cmpl
cmp
xor
sbb
in
nop
addr16
loopne
sbb
jb
add
movsl
lahf
rorl
icebp
out
mov
jns
push
test
dec
out
jmp
dec
or
cmp
jmp
dec
into
imul
inc
sbb
sub
movl
add
lods
fsubrs
xchg
fsts
jl
sbb
inc
pop
mov
out
xor
daa
out
dec
pusha
mov
dec
dec
cmp
inc
adc
out
push
sbb
shll
loopne
mov
mulb
cltd
mov
sbb
xchg
jnp
addr16
jns
loope
pop
daa
dec
neg
test
jnp
arpl
mov
leave
imul
mov
mov
jmp
aad
xchg
sbb
loopne
notb
pusha
add
cld
xor
inc
pop
lcall
loop
add
xchg
mov
lahf
test
lds
std
mov
jbe
psllq
sub
jmp
mov
shll
xor
popa
out
push
pop
lea
and
jle
cmp
jne
xor
inc
fs
mov
cmp
out
mov
hlt
cld
ljmp
mov
xor
jnp
xchg
test
mov
mov
inc
ficomps
inc
je
cld
jmp
mov
std
xchg
cmp
sub
shrl
mov
repnz
mov
lahf
sub
dec
pop
mov
adc
push
iret
pop
iret
clc
lea
sub
mov
dec
popa
cmc
mov
out
les
mov
mov
mov
in
adc
outsl
rol
repnz
push
sub
sbb
and
dec
push
add
push
fldcw
cltd
int3
sahf
js
jne
pusha
xor
mov
mov
lds
jp
stc
sbb
rcl
cmc
push
inc
cmp
or
test
rcll
popa
sub
sbb
rcrl
inc
mov
sti
dec
cmp
push
xor
push
mov
aad
adc
push
leave
ja
lcall
cmp
in
ret
stc
sbb
lods
fwait
sahf
add
stc
lea
fs
fs
pop
cmp
fs
mov
shl
and
daa
mov
aam
dec
jo
jne
lcall
xchg
jmp
std
rolb
adc
xor
dec
mov
or
clc
orl
sbb
pop
faddp
push
xor
sub
idiv
mov
push
mov
aad
jge
psrad
add
xor
pop
test
sub
or
or
or
stc
imulb
rclb
jne
jbe
push
scas
xchg
pop
bound
test
fs
fsubrs
and
mov
sub
aaa
mov
push
repnz
shll
es
clc
scas
inc
push
aam
cmp
push
pop
sub
popf
call
pusha
pop
cmc
stc
pop
sub
out
xlat
add
cmp
add
inc
xchg
cmp
push
push
test
cmpsb
sub
cli
hlt
push
push
movsb
cmp
rsqrtps
jns
push
jne,pn
or
cltd
sahf
aad
cs
stos
sbb
jo
pop
jns
enter
adc
in
jae
test
cmc
sub
sti
add
adc
jbe
adc
sbb
mov
scas
rep
lcall
js
int3
popa
loop
mov
lcall
cmpsl
test
push
dec
xchg
pop
push
or
fadds
inc
clc
jno
and
push
or
cmp
sub
movsb
push
mov
call
rclb
gs
push
cmp
popa
add
out
dec
mov
push
insl
mov
ja
push
jo
push
shlb
les
dec
or
out
inc
js
and
lcall
pop
add
cld
jle
int3
push
xor
rcr
cmc
mov
repnz
nop
addl
and
ret
divb
xchg
pop
out
movsb
mov
int
in
cmc
inc
lahf
push
pop
cmp
in
fidivl
push
mov
push
jnp
jg
fildl
cmp
dec
mov
sbb
adc
cs
fldt
mov
push
sub
bound
leave
mov
inc
dec
insl
movl
inc
ret
sahf
mov
pop
icebp
mov
push
pop
xchg
mov
cld
es
data16
jg
in
out
int3
adc
jl
dec
scas
jnp
lds
es
jge
aaa
xor
lret
dec
scas
ret
scas
or
stos
push
inc
add
jmp
dec
cld
cwtl
xor
ss
loopne
inc
sub
pop
inc
jnp
dec
call
test
test
loope
sarl
add
jnp
je
int3
cmp
xchg
xorl
cs
outsb
cld
cmp
and
leave
mov
mov
enter
xchg
pause
repz
movsb
inc
lea
dec
pop
lock
jae
pop
and
xor
and
xchg
pop
push
pop
and
mov
ljmp
inc
shll
ja
hlt
ficomps
ss
mov
cmp
mov
loope
mull
cs
pushf
in
pop
dec
jmp
pushf
jbe
inc
aaa
sti
fstpl
mov
jne
sub
cmpsb
daa
pusha
mov
adc
lds
imul
lock
add
xchg
push
scas
jmp
pop
loopne
xor
inc
leave
test
mov
pop
sub
out
pop
roll
push
outsb
sbb
lret
push
in
sbb
nop
pop
imul
shrb
inc
ret
adc
jns
cmpsl
out
dec
push
jmp
and
add
xor
push
loopne
lods
mov
popa
pushf
or
pop
sbb
outsb
and
xchg
pop
movsb
pop
jns
adc
and
jno
jg
jle
mov
mov
mov
push
add
adc
test
int
aaa
dec
jo
popa
nop
insl
incl
js
mov
stos
pop
pop
mov
lock
out
mov
lock
xchg
jp
push
dec
lods
sub
pop
movsl
icebp
fmuls
pop
pop
add
ret
sub
fistps
pop
aaa
nop
pop
iret
lcall
mov
pop
popf
fildll
mov
add
mov
subb
mov
call
add
fs
xor
pop
outsl
dec
mov
idiv
mov
out
inc
leave
add
mov
add
adc
inc
mov
call
loope
sbb
jg
jmp
mov
cmpsl
repnz
pop
bound
movsb
jae
aas
cltd
popa
into
jbe
xor
aaa
lret
adc
adc
sub
xor
jbe
bound
dec
cmpsb
and
mov
or
aam
add
adc
adc
mov
mov
push
mov
mov
add
add
test
testb
adc
jns
pop
aam
sbb
sub
movsb
iret
out
sub
adc
fs
test
daa
lahf
sbb
fmuls
xor
out
jecxz
mov
pop
mov
loopne
xchg
aad
mov
pop
loopne
jnp
lds
fistpll
shl
inc
pop
or
pop
pop
lock
hlt
push
jecxz
sbb
inc
lea
stos
inc
push
push
dec
dec
sub
sub
cli
in
in
fbld
insl
sbb
xchg
in
imul
push
adc
rcrb
imul
hlt
jb
scas
je
cmp
push
mov
xchg
das
pop
cmpsb
test
xchg
cmp
lahf
xchg
jp
jecxz
repz
sbbb
int3
loopne
clc
inc
dec
inc
push
and
lock
mov
lods
jecxz
sbb
inc
rorl
sahf
dec
in
mov
outsl
add
cltd
mov
lock
jmp
scas
xchg
inc
add
jne
pop
xchg
fsubs
ficomps
mov
outsb
cli
inc
clc
cmp
sti
mov
ret
mov
shlb
mov
push
popf
popl
mov
mov
in
push
mov
and
pop
push
inc
jmp
shll
sarb
push
sub
inc
xor
daa
mov
mov
or
out
sbb
xchg
stos
insl
mov
in
shll
in
lods
sbb
gs
sarb
mov
out
mov
mov
aam
push
rorb
or
lahf
mov
add
lods
pop
add
add
inc
adc
xor
adc
stos
cwtl
adc
lret
add
test
xchg
sub
cmpsb
lahf
loopne
or
or
and
mov
insl
mov
negb
mov
rorb
xor
lahf
lods
inc
cmp
mov
mov
xor
lods
or
es
das
ret
ret
mov
inc
jae
test
insb
mov
xchg
cmp
enter
mov
and
jb
nop
cmp
aas
cwtl
pop
fwait
inc
pushf
or
ja
dec
pop
add
pop
jge
sub
jecxz
movsb
lcall
mov
adc
das
pop
mov
jl
and
ja
pushf
idivb
cltd
mov
mov
cmp
rcrb
lock
std
mov
mov
jle
mov
lods
nop
adc
icebp
xchg
cmp
orb
push
cli
push
pop
pop
mov
add
xlat
testl
scas
test
cld
cmp
gs
cmp
cltd
sub
xor
adc
test
loop
rcr
aaa
push
ret
push
mov
xor
or
cli
iret
jg
pop
fstpl
and
lret
lret
xlat
fdivr
lea
cmpsb
popa
inc
jb
mov
imul
jne
push
inc
stos
dec
inc
stos
int3
ret
inc
add
sbb
in
jg
pop
cmp
fs
push
dec
lcall
jg
or
jge
push
in
scas
jae
mov
sub
lret
jmp
push
dec
inc
into
jno
xchg
sbb
ljmp
mov
shll
mov
leave
mov
outsl
adc
scas
leave
xor
xchg
sbb
je
sti
bound
cmp
mov
mov
push
daa
stos
scas
jmp
push
scas
xor
mov
xor
ja
lret
dec
dec
aas
ror
fildl
push
push
dec
jno
scas
int3
cmp
addl
addr16
pop
sub
repz
or
mov
push
ja
xor
sar
mov
idiv
jnp
cmp
mov
imul
imul
sbbb
pop
cwtl
mov
push
mov
fisubrl
test
test
mov
hlt
popf
repnz
sub
cld
mov
shll
or
mov
add
inc
fbld
lock
cmp
in
xlat
repnz
shll
icebp
push
sbb
xchg
cmc
sbb
inc
inc
mov
lds
push
cmp
sbb
cmpsl
cs
popa
dec
pop
mov
insb
gs
aam
repnz
std
xor
fisubs
repz
call
scas
test
es
inc
xlat
or
in
and
push
jb
push
adc
cld
pop
or
outsl
push
jmp
push
mov
loopne
xchg
and
iret
sub
cmp
jo
les
arpl
mov
inc
mov
in
das
sub
int
pop
xor
and
sbb
cwtl
mov
out
pop
movsb
in
js
idivb
pop
dec
pop
jns
sbb
cmpsb
std
add
and
stos
jns
xchg
lret
in
pusha
and
cmp
push
pop
dec
xorl
cmpsb
loop
repnz
jns
std
sub
jnp
je
xor
negb
adc
mov
sahf
pop
mov
lock
add
repnz
cmp
or
or
adc
xor
mov
outsl
adc
lcall
pop
out
in
stc
pusha
mov
in
push
push
adc
mov
loopne
ja
and
sbb
mov
or
sbb
enter
in
in
loopne
dec
mov
movsl
jns
aaa
dec
int
in
xchg
int3
loop
icebp
js
ss
lds
icebp
jae
outsb
xor
in
mov
out
addl
push
xchg
cmc
pop
jnp
sub
jge
cmp
pop
cs
lock
pop
stos
pusha
out
add
push
mov
aam
cmp
dec
pop
mov
outsb
sbb
cmp
out
sub
mov
sub
or
loop
or
jae
loope
inc
iret
cwtl
pop
adcb
jp
jno
aad
cmp
dec
mov
shl
imul
gs
cmp
cmp
test
or
jmp
push
cmp
shlb
test
pop
inc
ljmp
xlat
adc
dec
jecxz
out
repnz
dec
enter
jle
dec
jno
shl
or
nop
lods
lret
iret
rolb
aaa
xor
jg
pop
jae
stos
or
stos
mov
cmp
clc
repz
pop
sbb
sbb
inc
lret
scas
fdivrs
mov
jnp
call
lahf
xchg
sahf
jae
or
adc
outsl
mov
or
add
outsl
jle
jle
std
shll
js
out
adc
mov
test
sub
mov
pop
fisttpl
cmp
adc
pop
push
ficoms
arpl
push
fidivl
xchg
ret
mov
jns
cli
fcmovb
xor
out
push
push
movsl
mov
movsb
cmp
icebp
sbb
mov
sbb
sbb
jns
lcall
call
or
mov
xchg
fstps
sbb
aad
push
mov
das
add
inc
pop
mov
cmp
lret
loopne
sarl
cmp
sub
mov
lcall
mov
inc
dec
cmp
icebp
adc
out
shlb
inc
inc
ret
xchg
lcall
or
pop
ret
pushl
xbegin
pop
and
pop
xchg
fsubrl
mov
pusha
repz
cli
adc
xchg
and
rorl
rcrl
push
fldl
incl
insl
incl
fcoms
jnp
fcoms
icebp
aad
xchg
test
mov
jno
shrl
popf
sub
mov
arpl
sarl
jbe
sub
fucomip
xor
dec
push
cmpsl
outsl
or
mov
nop
or
dec
cmp
inc
cltd
cmp
sub
in
sbb
jns
mov
ja
inc
std
jmp
into
xor
pop
xchg
in
push
ret
mov
lea
imul
imul
pop
mov
imul
inc
and
inc
mov
push
jne
mov
aam
pop
or
inc
sub
lret
repnz
decb
xchg
jmp
inc
cld
add
lods
shr
ja
add
iret
hlt
mov
mov
cmp
lret
lahf
sti
lret
into
imul
out
fcompl
and
dec
xor
rorl
xchg
jecxz
popf
insl
mov
stos
test
data16
sahf
cmpsb
lea
jl
cmp
addb
enter
add
daa
fucomip
movsl
and
jge
pop
cltd
aas
sub
movsb
cmpsb
jo
sbb
aaa
ret
lret
mov
loopne
lret
adcl
pop
sub
ss
mov
repz
clc
repnz
and
clc
add
adc
pop
lods
or
int
popf
sarl
jg
mov
push
jno
movsb
xchg
push
xchg
xchg
lods
dec
xchg
add
bound
xchg
stos
xchg
cld
or
rep
sbb
push
sbb
loope
int
fisubrs
addr16
sub
inc
insb
movsl
aas
ret
loopne
scas
pop
notb
call
pop
xchg
pop
inc
aas
nop
push
pusha
rcll
dec
movsl
repz
mov
test
movl
jns
mov
xchg
sub
add
pop
xchg
add
in
xchg
jmp
and
cltd
mov
or
pop
cs
dec
and
jno
cwtl
pop
fstpl
mov
cmp
mov
addr16
mov
or
in
push
add
or
daa
jge
sub
out
jg
and
dec
inc
test
ss
xlat
pop
ret
sbb
inc
stc
xchg
sub
cmp
mov
das
jbe
push
push
dec
push
cwtl
std
cmp
jp
adc
dec
xor
sahf
insl
in
cmp
jg
dec
insb
cmp
pop
shrb
and
jl
mov
add
aas
cmpsl
add
std
fstl
fwait
popa
sub
xchg
movsl
mov
mov
cmp
clc
ljmp
test
adc
adc
add
or
shl
mov
cli
and
push
and
sub
in
jge
dec
cli
xchg
and
sbb
je
or
scas
popf
mov
push
jmp
inc
outsl
push
clc
adc
sbb
test
xchg
pop
or
pop
fs
adc
and
jecxz
sub
pusha
and
jg
sarl
and
sbb
inc
mov
sbb
sbb
jns
inc
dec
add
lock
add
pusha
pop
fs
add
je
pusha
mov
sbb
in
ret
jno
xchg
std
mov
fnstenv
adcb
ror
mov
cmc
shlb
push
shlb
and
and
gs
xchg
jae
jl
out
addl
or
imul
lret
add
push
les
xchg
ja
clc
pop
bound
iret
inc
inc
pop
fcmovnu
cmp
xor
pop
xchg
xlat
loopne
loop
dec
mov
mov
push
fsubl
mov
or
ficoms
dec
inc
rcrl
ljmp
dec
stos
pop
xor
sbb
add
inc
adc
add
mov
in
cld
pop
pop
xor
jno
pop
inc
fldt
jmp
push
xchg
mov
outsb
shlb
pushf
nop
addb
in
push
lods
inc
js,pn
andl
dec
mov
adc
subb
enter
xchg
cmpsb
mov
loope
mov
lds
cmpsb
mov
scas
stos
or
loop
cmp
jl
and
mov
adc
pop
push
dec
mov
cmp
notb
ss
js
cli
lock
xchg
test
or
xor
xor
sbb
movl
in
jecxz
jnp
adc
pusha
nop
sbb
imul
xchg
inc
mov
jae
mov
pop
testb
jp
pop
cltd
sub
lea
xor
or
and
rorb
jp
xchg
insl
cs
mov
pop
add
pop
push
add
mov
jnp
xchg
pop
xchg
cmp
sub
popa
cmp
icebp
sub
or
pop
pusha
pop
mul
movsb
cld
inc
push
mov
mov
mov
lods
icebp
mov
mov
popf
sbb
mov
jecxz
loopne
cmp
mov
scas
ja,pn
testb
inc
ss
cmpsl
repnz
out
mov
pop
cmc
orl
call
cmc
in
incb
mov
in
ljmp
lret
jns
dec
daa
pop
popa
and
inc
cwtl
cwtl
mov
inc
mov
xchg
outsb
xchg
mov
pop
adc
fwait
pop
popa
xchg
inc
xchg
cmpsb
std
leave
sti
les
jge
dec
push
pusha
enter
mov
adc
push
loopne
gs
sbb
mov
cmp
out
and
jae
push
dec
sbb
addr16
cmp
mov
inc
movsl
push
into
arpl
and
sti
sbb
or
je
mov
cmp
popa
jae
xchg
cwtl
aas
cmpsb
stos
sahf
inc
mov
insb
dec
push
enter
xchg
add
mov
js
dec
lds
xchg
sub
cli
outsb
icebp
mov
stos
sbb
pop
xchg
push
push
in
fs
mov
fwait
in
addb
out
loopne
jnp
imul
mov
sti
leave
lds
call
xor
insl
ret
jmp
mov
cmp
scas
mov
mov
mov
cmpsl
xchg
lret
push
sarl
push
fmuls
push
xor
mov
inc
add
add
inc
pop
cli
cmp
loop
movsb
pop
in
cwtl
call
loop
mov
dec
movsb
fldenv
pop
push
incl
bound
test
dec
cli
fsubl
js
in
in
xor
xchg
add
sbb
cltd
push
mov
dec
push
in
int3
mov
xor
lods
cmpsl
insb
mov
mov
shrl
ja
mov
pop
inc
in
xchg
int
in
popl
stos
mov
add
lret
and
mov
stos
push
inc
fisttpl
cmp
mov
push
add
inc
icebp
pop
add
jno
xchg
mov
cli
loop
xchg
lea
pop
pop
mov
addr16
push
fdivs
mov
jl
push
inc
into
sub
scas
lret
pop
in
arpl
in
xor
sub
inc
hlt
xor
or
cmp
push
mov
inc
popf
pop
add
push
ret
dec
das
add
sbb
xor
pop
push
scas
sub
rcrl
push
fcmovu
mov
faddl
cmp
cmp
jg
inc
jle
cmp
mov
mov
clc
sub
outsl
nop
push
js
or
or
xchg
pop
imul
std
mov
xchg
pop
data16
jns
vpaddq
sahf
js
repz
adc
inc
lds
test
mov
arpl
insl
xorl
sbb
fcoml
sbb
sbb
shlb
in
out
sub
add
mov
pop
adc
push
fs
and
aam
lret
in
xor
lahf
int3
push
xchg
push
sbb
push
add
jbe
add
dec
lcall
sub
sbb
inc
cwtl
movsl
js
sti
test
outsb
sbb
mov
mov
ja
sarl
ret
mov
add
imul
fstl
sub
inc
jno
jp
in
js
movsl
mov
cmc
mov
push
lea
rcr
rolb
jle
movsl
mov
sub
pushl
roll
sarb
pop
arpl
mov
test
mov
xchg
hlt
add
push
sbb
sub
imul
sbb
fcomps
ljmp
add
pop
mov
xchg
jl
rolb
inc
fs
ds
int
cltd
ljmp
insl
mov
xchg
ss
push
mov
andb
sbb
dec
decb
push
dec
sbb
xchg
outsb
not
lock
jge
iret
ss
push
pushf
mov
repz
dec
cs
fisubl
ljmp
xchg
cs
mov
loop
sub
scas
leave
mov
sub
pop
mov
dec
es
movsb
sub
fbstp
lock
das
sbb
xor
lds
stc
sub
dec
jmp
mov
cmp
call
cmp
pushf
outsb
and
mov
repz
push
sub
xchg
or
lret
test
outsb
mov
outsb
xchg
pop
outsl
cmc
or
xchg
cwtl
cltd
mov
add
xchg
ret
fsubrp
hlt
push
std
test
xor
push
movsb
shll
inc
push
mul
adc
lret
in
dec
mov
xor
and
fnclex
stc
xchg
fndisi(8087
lret
into
or
fucom
and
mov
cmp
add
in
aam
popf
cld
insl
cmpsl
inc
mov
mov
and
inc
cwtl
push
push
push
or
push
pop
icebp
xchg
sbb
lds
mov
inc
stc
cld
pusha
lods
mov
pop
scas
sub
cmp
inc
out
fs
subb
xchg
imul
repz
mov
add
in
sbb
ret
repnz
mov
mov
and
daa
inc
xorl
xchg
out
icebp
xchg
xlat
arpl
pop
gs
bound
mov
mov
xchg
dec
adc
sbb
and
cmp
pop
cmp
inc
ds
mov
cmpsl
hlt
fdivs
jecxz
insb
mov
lock
xchg
push
ss
jmp
fisubs
shll
pop
push
xchg
sbb
mov
mov
mov
lcall
nop
or
aaa
and
dec
push
sub
sahf
lcall
loope
push
pop
xorb
loope
icebp
push
int
out
das
push
xchg
or
ja
dec
mov
imul
xlat
mov
inc
pop
sub
lds
out
mov
scas
outsb
loope
or
xchg
inc
popa
into
jns
insl
dec
fildl
in
add
lcall
outsl
es
frstor
clc
lahf
sbb
pop
push
mov
xor
xor
or
je
add
gs
loop
mov
scas
xchg
int3
pop
cmp
icebp
outsb
pushf
pop
adc
add
push
push
mov
lret
leave
and
jg
adc
jp
fs
cmp
pcmpeqw
dec
mov
cmp
inc
adc
aam
aas
mov
lret
mov
push
out
xor
sarl
xor
push
cmpsb
xchg
dec
lods
lds
stos
jno
xchg
in
scas
xor
add
inc
pop
pop
imul
and
jae
jmp
lds
pop
int3
movsb
aad
rorb
xchg
jge
pushf
popfw
imul
test
push
jae
inc
push
ffree
cmp
sbb
push
mov
adc
cs
in
and
push
mov
jmp
pop
mov
lods
pop
inc
data16
mov
sbb
jg
jle
nop
loopne
xchg
fstpl
lds
int
out
pop
add
out
fiaddl
bound
aam
xchg
add
cmp
dec
mov
div
cmc
push
dec
or
loop
add
sub
push
cmp
loop
aaa
int3
lods
shlb
cli
pusha
and
xchg
cltd
mov
mov
mov
mov
jo
jbe
fadds
push
mov
stos
subb
gs
sub
push
int
test
icebp
out
push
mov
outsl
cli
leave
stos
cli
xchg
ja
loopne
in
loop
cmp
das
stc
cmpsl
inc
or
mov
icebp
in
xor
repz
inc
push
addl
js
loop
xor
xchg
xchg
pop
enter
xlat
mov
mov
repz
movsb
pop
subl
cmc
movl
into
loopne
lea
bswap
xchg
cs
xchg
push
subl
mov
shrl
xchg
je
insb
into
jge
sbb
xchg
mov
mov
xor
pushf
fisubrs
clc
hlt
pop
out
dec
jl
pop
insl
jp
ror
and
cmc
cmp
mov
les
and
sub
sub
mov
int
std
pop
dec
jge
pop
xor
lret
xorl
jl
iret
hlt
mov
fwait
push
push
mov
xchg
insl
ss
enter
push
sub
dec
or
subb
out
std
fsincos
mov
adc
push
testl
cmp
mov
repnz
out
adc
int3
negb
push
outsb
push
cmpsb
xchg
push
icebp
int3
into
fsubl
out
fsts
adc
cmp
inc
xchg
es
jecxz
sbb
addr16
push
pushf
mov
rcrb
pop
addr16
inc
pop
loopne
push
in
out
addl
jg
pop
lea
add
iret
xor
int
mov
xlat
lds
cmp
stc
cmp
rolb
add
aad
cwtl
mov
in
jns
inc
lods
scas
fildll
mov
pop
push
das
sbb
pop
mov
and
int
repz
icebp
adc
int3
cmp
fs
loop
mov
or
and
inc
incb
mov
mov
jge
or
sbb
mov
repnz
push
lock
stc
and
mov
mov
out
js
into
push
mov
add
push
sub
outsl
popf
mov
xchg
jmp
and
inc
or
pop
shl
in
push
ret
mov
mov
pop
xchg
mov
daa
cmpl
fcmove
mov
mov
scas
shl
jg
sbb
in
xchg
addr16
dec
repnz
xor
sub
mov
push
outsb
xchg
rclb
movsl
jl
pop
jo
jb
pop
and
push
xchg
adc
imul
addr16
xchg
stos
push
xor
jmp
push
and
repz
pop
jl
stos
and
add
lock
sbb
in
pop
inc
idivl
cmp
sub
push
and
fsubrl
sti
push
add
divl
jnp
lcall
pop
std
outsl
jb
adc
xchg
xor
in
pop
pop
mov
or
and
mov
push
pop
add
in
pop
test
mov
push
ja
add
pop
leave
cmpl
push
aam
cmpsb
stos
or
clc
rol
arpl
push
mov
call
sub
mov
xor
aas
xchg
shrl
insl
loopne
push
add
mov
lods
nop
jecxz
fldl
xchg
push
imul
jg
out
sbb
xor
xchg
out
out
or
pop
mov
mov
pop
xchg
jo
mov
mov
xchg
jmp
les
lahf
outsb
pop
xor
pop
divl
adc
lds
popf
insl
cwtl
inc
movsb
add
push
lods
outsb
cltd
out
sbb
ljmp
cmp
in
out
cltd
push
fcoms
mov
ffree
repz
sbb
lret
fistpll
testb
stos
jns
mov
lret
sbb
sub
jl
pop
push
popf
jno
sbb
xchg
ficoml
test
nop
jb
xor
stc
data16
insl
cmpsb
inc
and
lock
fstpl
pop
pop
out
test
int
aas
adc
xchg
push
aas
xchg
shll
xchg
cld
test
lds
dec
or
lret
aad
mov
and
subl
cmp
fsubr
cmp
popf
mov
cmc
clc
arpl
add
mov
lret
or
jne
cmp
and
lods
jmp
sbb
or
fidivl
hlt
nop
data16
xor
loope
repz
and
mov
inc
nop
jne
xchg
call
pop
push
jg
or
xor
ss
enter
pop
rolb
lea
push
enter
xorl
jge
lds
and
lcall
pop
inc
ret
mov
in
jp
fsubrs
aad
xor
sbb
xchg
add
or
push
call
stos
repz
inc
or
ret
gs
pop
mov
rclb
xchg
xchg
aaa
xchg
fisubl
jecxz
jge
jae
pop
dec
jae
ficompl
repnz
mov
mov
mov
add
sbb
movhps
inc
cmp
in
or
add
add
jbe
iret
loopne
push
divb
jnp
cmpl
xchg
jns
xor
push
dec
loope
inc
lcall
push
out
lock
or
dec
pop
movsb
jb
sbb
mov
push
ja
lret
std
cmp
sub
xlat
and
xchg
aam
cmpsb
lea
and
popf
lds
loopne
cmp
dec
imul
mov
jl
mov
out
sub
jbe
add
mov
pop
lock
mov
mov
inc
mov
fwait
jle
jae
add
ret
xchg
aaa
sub
out
nop
push
mov
std
push
cltd
outsl
cltd
rcll
nop
dec
lea
xchg
shlb
out
fidivs
or
sbb
mov
mov
lahf
pop
sbb
out
sub
out
out
inc
stc
jge
mov
cmp
jo
push
push
mov
inc
mov
imul
mov
cmp
add
out
add
cltd
adc
pop
out
ds
mov
lea
orl
lret
in
loopne
stc
sbb
sub
cltd
mov
inc
mov
jb
fs
mov
xor
test
les
xchg
dec
and
and
sub
rcrl
lea
pop
popf
daa
loopne
popa
mov
cli
push
mov
cld
push
movsb
scas
arpl
shrb
std
fiadds
aam
xchg
scas
aam
stc
frstor
xor
fistpl
in
mov
insb
fs
push
and
andb
movsb
mov
mov
adc
int3
ljmp
decb
repnz
or
jge
int3
or
loope
xchg
pop
or
stc
clc
movsb
out
jecxz
gs
add
push
cltd
loopne
bound
jmp
out
pop
in
enter
outsb
pop
clc
testl
ret
test
mov
loop
imul
iret
sub
push
fs
fcom
or
insl
or
jg
aas
ljmp
dec
jl
iret
scas
mov
out
jp
dec
frndint
xchg
out
sbb
imull
dec
sbb
int
call
stos
lahf
xor
jg
push
aas
mov
jns
sub
sbb
stc
cmp
gs
and
sbb
lahf
leave
data16
cltd
jae
fsubrs
nop
xchg
dec
and
xor
xor
int
testb
cmp
xchg
add
xchg
jae
loope
or
xchg
push
jns
jecxz
adc
dec
gs
clc
push
jne
mov
lock
cmc
add
dec
hlt
xchg
inc
std
adc
out
adc
out
add
fisubrl
dec
fbld
add
cmp
jb
xor
or
divb
in
ss
dec
jbe
xchg
mov
pop
xchg
in
ss
inc
push
dec
mov
dec
and
cmp
push
dec
aas
sub
ja
sbb
outsl
pop
hlt
outsl
arpl
ret
adc
push
inc
xchg
xchg
jecxz
xor
data16
mov
call
push
test
cmp
add
xchg
loop
shl
les
xor
or
and
mov
or
inc
dec
sbb
sbb
cltd
and
addr16
movsb
call
cld
fcompl
cmp
sub
outsb
xlat
jge
inc
sub
sbb
js
dec
leave
popf
lock
push
outsb
mov
add
arpl
sub
lods
jns
jb
movmskps
inc
pop
jne
cmovne
hlt
cmp
jl
adc
shrb
scas
fisubl
jo
xlat
pop
push
ret
mov
pop
pop
mov
dec
das
dec
test
lock
jle
mov
outsb
mov
arpl
and
fidivs
data16
fdivrp
jb
mov
push
int3
pop
mov
mov
cmpsl
fcompl
emms
push
add
sub
jne
mov
cmp
movsb
shlb
iret
inc
xor
ret
out
in
push
xchg
fnclex
mov
ds
mov
cmp
out
mov
ja
sub
mov
loop
xor
mov
cmp
ret
arpl
or
in
lods
rorb
fiadds
test
test
test
dec
mov
jecxz
pushf
inc
mov
pushl
cmpsl
aam
mulb
jne
loopne
aaa
sbb
dec
mov
inc
int3
push
sbb
fnstsw
jl
or
pop
fwait
test
add
lock
fdivrp
adc
xchg
std
testl
ljmp
int
push
mov
push
sbb
mov
sarb
add
push
inc
fwait
fwait
adc
sahf
or
repnz
xchg
or
cmp
stc
popa
mov
or
jbe
jp
dec
sbb
and
or
push
lea
xchg
adc
add
sahf
cltd
cmp
pop
xor
sub
arpl
or
arpl
mov
mov
movsl
jmp
xor
push
lods
xor
jo
mov
and
adc
cltd
sub
pop
fisttpll
cmp
cmpsb
and
sarb
sub
repnz
mov
mov
in
adc
or
sahf
bswap
jbe
dec
pushf
fsubrl
cmp
mov
std
dec
add
sti
and
pop
xor
lret
cmc
mov
push
fld
mov
mov
mov
inc
sahf
mov
lods
aas
xor
pusha
dec
daa
mov
mov
repz
into
cmpsb
in
loope
js
insl
push
syscall
dec
iret
iret
cmc
nop
mov
jmp
dec
xlat
jbe
mov
add
cwtl
clc
cmpsl
pop
inc
push
or
test
test
or
pop
divl
xor
sub
jmp
xor
sub
lods
xchg
jecxz
fildl
cld
arpl
sub
mov
add
cmc
pop
mov
into
jne
in
push
cmp
pop
mov
push
arpl
in
pusha
and
xor
arpl
adc
cld
sbbl
das
lahf
lea
add
mov
inc
mov
jnp
jbe
xchg
jge
imul
jo
xor
jno
stos
xchg
sbb
inc
push
lods
ss
pop
das
or
sbb
jl
in
mov
dec
fldcw
or
xor
add
ffreep
les
cltd
jle
mov
shll
or
jb
pop
icebp
imul
leave
icebp
add
xchg
imul
mov
add
adc
es
aam
call
mov
jle
jne
xor
sub
rcll
in
xchg
dec
inc
xchg
push
pavgb
pop
jne
pop
popf
mov
cs
outsb
inc
pop
ficoms
sarb
fwait
adc
xor
repz
pop
imul
add
jecxz
pop
shlb
jle
push
adc
cmp
ds
cmp
jle
push
je
enter
pop
adc
and
cmp
cltd
das
aas
repnz
in
xchg
movsl
sbb
mov
dec
xchg
jno
enter
sti
jns
iret
les
jle
in
repz
mov
push
call
adcb
cmp
mov
or
xchg
mov
cltd
test
lahf
push
movb
inc
push
lock
fldenv
cmp
xchg
dec
stc
pop
ja
cmpsb
jl
jnp
into
dec
pop
adc
mov
mov
sbb
cmp
adc
lret
ljmp
pop
clc
idivl
cltd
jbe
aad
jp
in
jae
cltd
dec
movl
pop
insb
xchg
mov
lods
aad
push
cmp
shll
pusha
aam
adc
fmull
das
enter
sbb
mov
call
xor
sarl
sub
sub
inc
pushw
insb
sbb
mov
pop
mov
out
xor
add
ficompl
aas
sub
add
xchg
scas
in
pop
insb
cmp
dec
jb
inc
push
shl
cmp
mov
je
xchg
sub
xchg
or
sbb
mov
dec
test
sub
aas
das
adc
fistl
flds
sub
test
xor
aas
add
lods
clc
xchg
mov
add
test
jb
call
cltd
add
lds
sti
cld
popf
in
fsubs
out
ret
ror
pop
cli
loopne
xor
sub
bound
jnp
pop
fisttpll
push
push
rclb
stos
and
dec
repnz
jo
mov
dec
inc
dec
hlt
sbb
xorl
andl
adc
pop
sti
out
xor
sub
insl
addr16
das
ficompl
push
enter
fsubrs
cmp
jne
xchg
add
cmp
in
mov
ret
cmp
inc
pop
add
lret
insb
pop
lods
adc
mov
imul
ljmp
pop
adc
ds
cmp
inc
shrl
faddl
push
inc
xchg
xchg
add
mov
pop
jnp
sbb
dec
sarl
push
pmaxsw
fs
mov
or
std
mov
jg
dec
cwtl
ja
mov
sub
cld
sub
loop
xchg
fimull
shrl
movsb
jb
sub
mov
add
repnz
test
xor
sti
subl
add
rclb
sub
mov
test
and
cli
adc
addr16
loopne
sub
jge
mov
sub
insb
push
xor
stos
idivl
and
push
jecxz
adc
mov
add
add
lcall
scas
daa
cmp
movsb
sti
adc
push
jae
in
mov
mov
mov
lods
jns
mov
and
lcall
inc
cmp
inc
je
jno
adc
stos
push
cmp
push
adc
divl
mov
int3
add
lcall
cmp
mov
dec
jg
cmp
xor
or
cmp
cmp
push
pop
sub
data16
dec
jl
shlb
cmc
mov
push
xor
lcall
std
push
outsl
adc
in
inc
popf
pop
and
pop
sub
dec
lcall
imul
sbb
mov
mov
cmp
inc
enter
sti
mov
mov
push
or
add
push
adc
fwait
mov
std
lds
add
add
mov
shll
lea
popf
dec
sub
xchg
sbb
push
jecxz
ret
gs
and
and
cld
inc
ss
sub
mov
cltd
adc
pop
negb
add
push
int3
push
aaa
ljmp
ret
push
push
sbb
xchg
cmpsl
push
mov
fwait
lahf
das
mov
shr
lret
imull
movsb
adc
push
aam
push
ljmp
and
or
rclb
dec
mov
cmp
daa
adc
popf
stc
push
lock
mov
pop
pushf
xchg
sbb
adc
xchg
out
push
xlat
jmp
xchg
mov
sahf
in
adc
jecxz
ljmp
or
and
test
popa
sub
stos
xchg
cmp
ret
sbb
in
frstpm(287
or
inc
jbe
add
out
jl
pop
lds
jnp
mov
xchg
sub
xor
ss
xchg
lret
cltd
ret
mov
jecxz
adc
aad
inc
mov
xchg
fcom
mov
mov
jg
cmp
inc
rolb
mov
repnz
or
and
push
movsb
xchg
loope
sub
insb
insl
adc
out
pop
iret
fsin
nop
push
push
xchg
lret
scas
rclb
fidivl
add
lcall
jbe
cs
xchg
cltd
sub
out
mov
dec
arpl
dec
sbb
push
lods
inc
andl
adc
scas
shrl
loopne
sbb
lret
mov
pop
sar
shlb
ret
push
cmp
ljmp
add
cmp
mov
xor
push
cs
in
and
push
inc
cmpsb
ja
xchg
mov
cmp
jo
aaa
das
mov
in
add
jbe
bound
pop
mov
movsb
xchg
and
lock
push
loop
scas
orl
inc
int3
add
rcrl
stc
insb
outsb
xchg
jge
rolb
aam
sub
pop
out
and
cmp
jbe,pt
int
xchg
xchg
pushf
mov
lock
push
push
fimull
ror
jmp
jns
lret
int
fnstsw
xchg
sub
mov
and
push
aas
fwait
jp
inc
mov
mov
adc
or
cld
jb
aas
icebp
shll
pop
out
xor
mov
insb
sub
pop
push
or
sbb
data16
fisubrs
test
xchg
aas
sbb
push
adc
cs
xchg
pop
xchg
push
xchg
scas
cmp
inc
jg
mov
jnp
mov
rorl
cld
add
int
scas
cmp
and
insb
cmpsb
mov
aam
mov
hlt
sub
leave
jl
adc
pop
xchg
icebp
flds
notl
or
mov
icebp
lods
lods
push
add
testl
dec
jne
shll
rcr
sub
in
push
jmp
pop
js
xor
mov
mov
sbb
lods
mov
xchg
ret
popf
mov
inc
test
cmc
out
inc
btc
cld
sub
daa
xchg
ds
gs
pop
push
cmp
into
nop
cld
xor
fcomip
pop
inc
pop
adc
mov
xor
sub
inc
icebp
loopne
mov
inc
sti
cwtl
jns
mov
pop
bound
out
add
xchg
lods
fstpt
and
or
das
mov
stos
or
mov
or
decl
shll
out
and
pusha
xlat
outsb
out
jmp
cmp
xchg
rorb
outsb
push
jl
mov
push
jns
ds
test
xor
mov
xchg
push
enter
xchg
pop
imul
xorb
mov
pop
add
addr16
cli
jecxz
inc
mov
inc
pop
mov
cli
adc
mov
xchg
xor
pop
shrl
cmp
mov
mov
fs
icebp
icebp
sub
and
and
or
rolb
push
out
jmp
mov
inc
notb
js
call
sub
cmpsl
imul
fisubrs
je
int
jnp
icebp
js
mov
or
leave
in
aas
enter
pop
mov
push
sbb
test
out
dec
mov
fidivrl
sbbb
ss
mov
adc
pushf
pop
mov
outsb
cltd
add
push
jp
cmpsl
mov
sub
loopne
jmp
aas
fmulp
fstl
pop
lcall
adcl
jmp
push
lods
jl
outsl
xor
inc
jnp
fnstenv
xor
aas
xchg
mov
in
stc
push
jbe
rcll
gs
pushf
cmp
pop
xor
inc
loope
in
mov
out
clc
fwait
rcrb
mov
sub
pop
and
xor
in
xchg
sti
stc
out
data16
lcall
lfs
mov
push
push
cmpsl
push
sarl
mov
leave
jg
data16
dec
movsl
dec
fucomp
xchg
mov
jno
or
mov
mov
sti
sbb
leave
dec
adc
ret
shl
pavgw
xor
mov
leave
pop
fs
or
rorb
enter
sarb
inc
and
push
and
lds
aas
cmpsb
xchg
jge
sbb
xor
sbb
mov
cltd
mov
add
ljmp
lret
jge
and
popf
daa
stos
pusha
inc
scas
dec
push
fsincos
aad
out
fldl
mov
adc
cli
lea
das
pusha
dec
dec
xchg
sbb
add
ret
rcrb
mov
in
or
andb
std
mov
mov
shlb
mov
pop
cmp
mov
scas
js
inc
push
cwtl
out
sbb
mov
lcall
icebp
dec
insb
push
adc
imul
xchg
push
les
xor
sub
lcall
aas
push
pop
push
cld
mov
sub
xchg
jecxz
add
rorl
dec
inc
loop
daa
movsl
stc
arpl
loop
hlt
test
mov
pop
out
out
les
inc
aad
mov
dec
scas
fdivl
mov
mov
cs
pop
data16
aas
mov
xlat
fstpt
aam
outsb
stc
mov
lahf
lods
push
test
cmp
mov
inc
ror
daa
pushf
faddl
jns
or
addb
nop
shll
lret
pusha
mov
test
inc
test
rcrl
cmc
jo
mov
fnstenv
repz
mov
insb
cmp
mov
cmp
dec
fstpl
jb
push
out
cmpl
or
fwait
adc
add
daa
push
shll
mov
lods
xor
in
cmp
pop
mov
or
testb
cld
sbb
lret
dec
fcoml
dec
rorl
xchg
fwait
adc
ror
push
loope
stc
lret
loope
lahf
sub
xchg
shlb
sbb
and
lret
pop
push
das
push
push
xchg
push
sub
cmc
cmc
xlat
xchg
sarb
xlat
test
sahf
cmpsb
in
pushf
sub
gs
cmp
scas
test
add
pop
sbb
inc
push
out
mov
sub
adc
aaa
jmp
sub
mov
inc
and
cmp
stos
or
jmp
fildl
pop
in
movsl
lea
pop
dec
mov
out
or
stc
cs
mov
clc
testb
ja
test
push
mov
insl
push
test
cmpsl
fwait
or
dec
or
mov
push
enter
out
mov
add
movsb
daa
rolb
or
push
or
pop
jne
scas
push
dec
je
jmp
inc
add
mov
mov
jne
xchg
repz
lods
pop
mov
lahf
mov
or
mov
cwtl
lds
cmp
adc
mov
sbbl
scas
and
xchg
dec
jnp
mov
in
inc
adc
lods
mov
pop
test
test
cwtl
lret
clc
ret
lahf
xchg
clc
js
pop
lods
scas
xchg
inc
and
dec
cwtl
cmp
add
sbb
sti
mov
iret
loopne
insb
loope
mov
out
push
addl
sbb
xlat
fadd
mov
lret
jle
and
xchg
out
in
sub
dec
iret
mov
test
push
mov
push
loope
jge
mov
cmpsl
inc
and
push
call
mov
xchg
popa
fstp
inc
and
inc
add
xor
test
jge
xchg
jecxz
lods
rcl
in
or
xchg
inc
imulb
sub
xor
in
pop
ja
or
imul
loope
shrl
ret
rol
dec
xchg
inc
xor
idivb
xchg
fdivrl
lods
push
in
movsb
stc
lods
jae
sub
dec
imul
sub
cltd
mov
xchg
fwait
cmp
ljmp
push
test
call
leave
and
xchg
pop
negb
cld
pop
or
sarl
aam
adc
cmp
into
mov
daa
shl
loopne
mov
dec
push
and
loop
cmpsb
add
xor
pushf
and
ja
inc
or
pop
out
fcoml
aam
or
xlat
and
mov
lret
mov
int
cs
dec
cmpb
pop
call
inc
xor
push
xor
mov
add
fistps
jnp
pop
sahf
lock
cmc
cwtl
inc
xchg
sub
xor
cmpsl
mov
add
fnsave
lret
mov
mov
mov
adc
jnp
faddl
jbe
mov
adc
xlat
es
inc
stc
or
pop
inc
je
sbb
cmp
dec
pop
inc
mov
fucom
movsb
jl
js
or
pop
popf
out
xlat
push
xor
cmp
in
in
mov
pop
lea
aad
or
mov
cmp
sbb
fwait
add
test
add
scas
cmp
lahf
add
mov
jecxz
add
outsl
popf
sbb
mov
mov
or
push
mov
xchg
jns
lea
mov
outsl
add
fwait
jne
mov
fdivs
pop
ljmp
and
aad
js
cmpsb
mov
fistps
and
lret
sar
and
mov
xor
or
hlt
in
aaa
popf
xchg
jb
inc
push
js
pop
cmp
xor
xchg
mov
addr16
add
sbb
je
test
adc
mov
fwait
outsb
imul
adc
stos
sub
cmc
cwtl
lods
cld
and
stos
cmpsb
jge
stc
inc
jecxz
sub
inc
outsb
add
adc
xchg
out
cmp
ljmp
sub
push
decl
cs
push
inc
add
inc
cld
clc
cmp
rcrl
add
aad
or
imul
push
pop
inc
mov
xchg
mov
popf
pop
pusha
aaa
jb
test
jbe
lcall
and
stos
jecxz
loope
int
lcall
push
push
mov
sarb
stos
lret
dec
sbb
lret
mov
lock
cmp
inc
push
lock
cmc
mov
mov
imul
mov
xchg
les
push
sbb
in
and
and
call
xorb
add
xchg
pop
inc
testl
cmp
cltd
adc
push
clc
test
movsb
push
cli
sub
iret
mov
xlat
mov
cmp
pop
xor
loopne
sub
mov
adc
adc
ja
inc
dec
and
cli
add
mov
js
inc
lods
nop
jecxz
inc
imul
scas
int
push
mov
sbb
out
cmp
mov
add
iret
cmp
pop
dec
pop
mov
shlb
stos
aas
jae
pop
jno
fldcw
mov
repnz
es
and
adc
cli
pop
rcrl
and
outsb
sbb
rep
lahf
adc
stc
fstpt
inc
sti
cmp
aad
pusha
jge
fxch
imul
lods
mov
imul
sbb
adc
mov
insb
dec
sbb
shlb
jp
inc
jne
mov
aaa
je
xchg
pushl
mov
sub
push
cwtl
stos
xchg
out
popf
in
aaa
or
sbb
push
loopne
inc
lret
xor
xchg
lcall
and
xor
sub
jecxz
fisubs
movsb
fsubr
test
inc
out
pushf
fsubrl
repnz
dec
std
shl
loopne,pt
enter
stos
cltd
mov
in
iret
test
stc
shl
incl
jnp
adc
inc
cmp
xchg
jno
out
ficomps
mov
mov
fdivrl
cmpsl
popf
clc
xor
imulb
pop
mov
or
call
fucomip
icebp
aaa
mov
push
fcoml
jae
sbb
fcoml
fldenv
out
dec
fdivl
aad
or
dec
inc
scas
adc
aas
jle
popa
pushf
mov
mov
cmpsb
add
xchg
xchg
inc
mov
sub
ss
inc
jl
push
and
andb
test
fisubs
arpl
dec
or
mov
cmp
dec
inc
or
dec
inc
sbb
aaa
sub
mov
jno
mov
or
add
adc
adc
sbb
icebp
ds
mov
dec
jae
fstps
sbb
mov
rcl
jmp
rclb
jae
cs
icebp
hlt
loope
outsb
xchg
xor
int
lcall
sub
imul
repnz
jecxz
adc
mov
adc
faddl
test
xchg
inc
mov
push
mov
mov
jge
or
inc
mov
xchg
gs
push
xor
gs
jae
xchg
outsb
mov
or
addr16
push
or
jp
cmc
pop
xor
ficoml
insb
cmovl
dec
sub
xchg
leave
push
mov
pop
mov
inc
push
sti
lret
pop
jmp
fs
cmp
adc
sbb
xchg
mov
mov
fsubrl
mov
test
push
sbb
fstp
jge
outsl
fsubr
push
or
sahf
lret
in
push
imul
pop
xchg
test
ds
es
sub
or
add
mov
inc
sub
fidivrs
dec
pop
orb
xor
adc
into
mov
cli
xchg
inc
xchg
loop
xchg
imul
add
cld
mov
addl
xchg
jae
clc
es
je
or
fsubr
inc
jns
data16
lds
arpl
adc
add
mov
mov
mov
inc
add
arpl
push
sub
xchg
ret
sub
outsb
mov
and
xor
test
lret
std
fistpll
fdivrs
adc
rcrb
pusha
sbb
push
mov
cld
leave
addr16
jno
jne
inc
xchg
add
popa
pop
xor
movsl
pop
and
pop
imul
xchg
add
mov
mul
inc
enter
mov
icebp
out
cmc
test
js
ja
mov
test
adc
icebp
imul
lods
mov
aam
jecxz
or
aaa
sub
shlb
movsb
cld
scas
push
and
cltd
sbb
sbb
jns
movsl
xorl
mov
stc
les
fildll
lea
pop
loopne
adc
cli
in
ret
cs
dec
mov
fisubrl
std
lods
xor
xchg
add
mov
mov
fstp
mov
mov
lahf
loopne
call
sub
ss
jnp
cmpsl
dec
lods
in
xor
popf
cld
fcmove
and
or
sub
fisubl
sbb
fiaddl
gs
movsb
mov
add
sub
subl
mov
sar
loope
inc
mov
bswap
lock
dec
outsl
push
dec
or
fnstenv
inc
mov
add
mov
xchg
cmp
loop
cwtl
mov
xchg
adc
mov
lods
sub
sub
xor
stos
fidivrl
sahf
add
jns
in
fisubs
mov
addr16
jl
in
mov
jge
sbb
outsb
pushf
push
inc
jo
rclb
mov
pop
xchg
rcrl
or
out
cltd
and
out
pop
lea
call
jmp
std
cmp
daa
xor
sbb
cld
data16
push
jo
adc
adc
cltd
lods
outsb
ja
or
mov
and
xor
mov
mov
mov
ss
mov
jg
cmp
mov
insb
xor
add
pop
xor
pop
int
pop
jp
mov
rorl
mov
and
or
iret
mov
je
movsb
arpl
dec
xor
sub
call
mov
cld
jmp
inc
pop
out
dec
cld
outsb
jecxz
jo
cmpsb
dec
inc
cld
lea
repz
ret
bnd
jo
icebp
int
inc
jo
mov
cmp
into
adc
roll
cmpsb
es
adc
out
cmp
inc
subb
movsb
push
ret
lret
iret
adc
or
lods
in
mov
cmp
dec
lcall
mov
adc
pop
insl
cwtl
and
jecxz
lret
mov
pop
repz
push
xchg
push
sub
mov
hlt
pop
xchg
add
fwait
cmpsl
pop
pop
mov
xor
loope
ds
movsl
xchg
or
sarb
or
sbb
dec
aaa
test
and
movsb
fwait
inc
pop
add
int3
mov
out
mov
add
out
push
add
mov
testl
notl
mov
insb
cmp
xchg
inc
icebp
xor
jo
or
push
xor
fstps
ljmp
fs
fistps
adc
pop
and
add
sub
data16
mov
je
adc
mov
inc
aam
xor
lahf
sti
stos
push
fistpll
sbb
mov
and
mov
popf
lahf
aad
cmpsb
sti
mov
push
loope
push
outsl
mov
movsb
cmpsl
test
xor
outsl
jne
jo
aaa
fadd
push
push
xchg
arpl
jecxz
addr16
sub
push
mov
cmp
mov
push
std
cld
outsw
je,pt
mov
aaa
jb
cmc
sub
add
orb
js
push
sbb
jae
mov
data16
mov
scas
aam
or
inc
push
test
sbb
dec
lea
and
aas
fs
cmc
and
gs
or
fidivs
and
es
push
out
imul
sti
pop
push
into
mov
cmp
xor
cli
aad
mov
xchg
leave
pop
out
std
pusha
push
jno
cmpsl
xchg
test
cs
into
mov
std
xchg
shrb
jno
lock
add
mov
add
mov
jge
xchg
scas
sti
inc
repz
jle
cs
insb
jge
dec
ja
xchg
jmp
shrb
repnz
jno
jmp
sub
mov
and
sub
push
mov
es
xchg
stos
mov
jbe
xchg
jo
dec
dec
mov
testl
insl
or
cltd
lds
fsubs
mov
xor
gs
add
divl
mov
stos
fscale
imul
out
and
jge
test
cmp
sbb
std
xchg
dec
and
frstor
pcmpeqb
int
mov
sbb
sbb
xchg
sbb
push
outsl
fsubrs
push
dec
out
scas
push
xchg
cmp
pop
jmp
lahf
cmp
mov
inc
adc
jmp
ret
push
mov
jb
pop
insb
out
xor
repz
dec
pop
insb
mov
mov
mov
clc
sbb
movsl
xor
jns
popa
enter
xchg
inc
int
jnp
stos
jle
dec
icebp
je
push
pop
sti
lock
adcb
sub
dec
faddl
fildll
sbb
cmpsb
cmc
add
mov
push
mov
test
add
adc
pop
mov
scas
repz
cmp
adc
dec
dec
xchg
or
iret
xor
jnp
pushf
jnp
rolb
inc
pop
shll
aas
fldenv
mov
test
jbe
mov
leave
mov
push
pop
cmp
in
ret
lods
mov
xchg
jl
adc
cmp
inc
xor
inc
movsb
dec
push
and
mov
stos
lods
test
mov
ret
fsts
add
sahf
clc
fistpll
adc
sbb
push
mov
pusha
mov
cmp
jne
mov
lods
xchg
rcll
mov
and
add
in
lahf
movsb
pop
sarb
leave
inc
lret
cmp
and
int
sbb
mov
cwtl
add
push
mov
pop
test
mov
add
mov
and
movsb
mov
test
add
loope
xor
fildll
lds
in
add
lea
mov
movsl
fists
scas
lret
jecxz
sarb
sub
and
dec
xchg
call
mov
scas
movsl
pusha
lods
insb
sub
mov
movsb
pop
lret
popa
mov
jg
fcomps
pushf
jo
and
subl
mov
xchg
das
fiaddl
lods
bound
xchg
fsub
cmp
or
xor
pop
inc
mov
outsl
adc
shl
out
iret
loopne
sbb
addl
loop
cmc
sub
xor
add
dec
cmp
jge
jnp
push
xlat
pop
xchg
lds
int
sti
cmpsb
call
fstps
xor
push
mov
ja
or
or
inc
lcall
cmp
cltd
repnz
cmpsb
and
cmpsl
cmpsb
pusha
and
push
lret
popf
fcoms
cmp
scas
pop
and
bound
mov
in
dec
lods
jle
iret
mov
jne
dec
add
sbb
or
xchg
in
jne
dec
int
dec
test
sbb
sub
arpl
mov
push
cs
lods
pushf
xor
push
loop
jle
fwait
ljmp
add
add
stos
adc
movsl
mov
test
dec
hlt
or
fwait
iret
popa
repz
add
jne
dec
out
mov
mov
cmp
push
mov
push
jbe
lea
aam
js
jne
call
dec
ret
lds
dec
mov
or
mov
or
dec
cmpsb
les
adc
inc
cmp
xchg
mov
loope
push
mov
adc
and
or
mul
fistl
add
mov
sti
sahf
ret
sub
dec
add
xchg
in
mov
dec
fisttpl
insb
mov
dec
mov
cmpl
jbe
fldt
cmp
imul
fisttpll
arpl
flds
mov
mov
push
or
jg
test
adc
rcr
inc
aaa
aam
sbb
mov
sub
dec
adc
mov
inc
aas
popf
dec
and
xlat
sub
mov
sbbb
lock
push
lcall
jecxz
xchg
xor
cli
popl
jp
shrl
push
pop
jle
push
xor
pusha
cs
lods
inc
inc
pop
sub
in
movsl
xor
dec
adc
pop
dec
sbb
iret
dec
loope
sbb
dec
pop
outsb
notl
js
xchg
mov
bnd
pop
cmc
add
push
add
loop
mov
outsb
jmp
stos
cmp
sahf
xchg
in
js
sbb
pop
or
bound
jno
xchg
xchg
repnz
pop
aas
push
cmp
ret
push
clc
stos
repz
xor
sbb
jmp
add
test
ret
loopne
clc
ret
pop
test
jb
cli
aad
mov
mov
fwait
jnp
fwait
add
fsub
sub
aad
cmpsb
lahf
inc
and
fdivrp
push
insl
sbb
imul
sysenter
lods
lods
mov
pop
ret
das
imul
repz
pop
cs
add
sarb
pusha
push
shll
pop
pop
sbbl
daa
sbb
adc
andb
mov
adc
xchg
imull
out
sbb
add
xor
or
fcmovnu
xor
jg
stos
or
stos
stc
sub
test
into
icebp
adc
in
popf
lahf
mov
pop
add
cmp
dec
aaa
mov
jle
sahf
cmp
dec
lret
xchg
fistpll
mov
jg
movsl
jnp
mov
mov
pop
sub
inc
dec
stos
frstor
sub
icebp
movsb
out
fwait
cmp
jne
movsl
mov
dec
bound
jmp
and
xchg
pop
out
enter
jo,pn
rcll
adc
xchg
pop
add
jmp
in
inc
loope
mov
cmp
jg
int
xor
pop
mov
adc
int
leave
iret
inc
aam
icebp
int
or
mov
je
sub
pop
push
dec
push
pop
rorb
or
leave
pushf
mov
cmp
xchg
push
mov
gs
lea
sbb
cmp
test
int3
push
pusha
add
sti
addr16
in
outsl
adc
pop
or
clc
into
push
fsts
sahf
rcrb
cmp
add
ret
push
push
xchg
jnp
adc
add
sub
pop
mov
adc
pop
iret
sbb
and
add
and
sbb
and
lock
push
addb
xchg
xor
mov
xor
scas
movsb
inc
cltd
fwait
scas
rcll
incl
push
inc
jmp
lock
cmp
lods
jnp
xor
xchg
imul
mov
cwtl
or
fcomip
mov
mov
sbb
pop
mov
mov
addb
mov
mov
repz
loope
cmpsb
sub
in
stc
or
movsl
mov
and
pop
pop
ljmp
idivl
push
in
ss
inc
ljmp
or
xchg
subb
fsubrs
sub
cmp
adc
sbb
inc
mov
shr
pop
aad
adc
xchg
and
outsb
mov
fdivl
fstp
xchg
popa
xchg
pushf
out
mov
repnz
and
pop
xchg
push
sub
push
mov
sbb
xor
cmp
xor
push
adcl
ficoms
or
shrl
mov
sar
inc
insl
cs
push
mov
jl
movsb
sbb
jmp
repz
popa
pop
mov
imul
jns
aas
sub
mov
jb
add
jmp
lret
push
addl
pop
adc
xchg
dec
filds
or
inc
dec
and
stos
es
cwtl
pop
cmp
mov
std
iret
data16
aaa
xor
jle
shll
data16
inc
and
sbb
xor
pop
aaa
inc
sub
mov
xchg
insb
inc
cmpsb
js
div
push
imull
adc
repz
imul
mov
shll
nop
sbb
popf
pop
sub
pop
cmp
pop
add
cmp
or
xor
ljmp
rorb
out
jno
testb
scas
sbb
arpl
out
std
aas
lret
leave
insl
or
ljmp
mov
cmp
push
xlat
dec
xor
lea
test
shrb
sahf
fimull
cmc
js
sbb
inc
push
stc
addr16
fildll
mov
xor
lret
dec
imul
or
push
pop
mov
out
xor
xchg
pop
pop
inc
sub
shlb
xor
jl
mov
inc
lahf
mov
pusha
mov
call
or
xchg
dec
aad
pop
idiv
jge
and
add
cli
lods
push
cmc
sub
xchg
cmp
pop
int3
stos
fldt
cmp
push
in
or
sbb
dec
fsubrl
lock
and
jle
mov
aas
xor
data16
push
pop
pop
inc
pop
roll
mov
stos
jp
mov
push
cmp
jmpw
xchg
jnp
pop
and
pop
testb
inc
xor
jmp
mov
jl
ret
loope
jl
push
xchg
cmp
pop
dec
loopne
out
dec
lcall
sbb
mov
add
dec
sub
pop
leave
inc
mov
add
mov
out
int
mov
xor
xchg
xor
sbb
ss
add
stc
and
lods
cs
add
mov
inc
sbb
jle
mov
push
mov
cmp
mov
test
scas
or
enter
movsb
pusha
pop
cmp
out
addb
pop
es
cmp
out
iret
in
mov
jae
cmpsb
gs
inc
mov
in
imul
lds
and
mov
pop
addl
ds
jle
addr16
fs
arpl
movsb
fldl2t
pop
loopne
jb
fildll
shrl
push
xchg
jbe
lea
and
inc
dec
xchg
dec
imul
sbb
xor
xor
add
xchg
and
sbb
add
mov
cs
push
je
xchg
push
mov
pop
imul
shl
data16
test
xchg
cmpb
inc
jo
fcmovnu
aad
scas
jnp
jb
stos
repnz
sbb
dec
push
fiadds
dec
dec
cwtl
jb
sbb
test
in
sbb
adc
lret
mov
push
jl
xchg
shr
cmp
aad
dec
shrl
dec
and
out
fisubs
and
pop
lds
jbe
xchg
popf
dec
sbb
scas
mov
leave
aaa
mov
lds
add
scas
sbb
xchg
dec
mov
rorb
subb
fs
pop
cwtl
and
ss
cmpsb
push
adc
es
cmp
xor
push
jae
adc
ror
ror
fisubs
subl
push
push
and
jae
jmp
pop
xchg
dec
scas
loop
xchg
aam
and
pusha
icebp
mov
add
dec
cwtl
inc
jmp
nop
popl
dec
data16
jno
adc
imul
mov
aas
test
negb
sub
mov
test
dec
lds
outsl
das
push
popl
ja
out
sbb
mov
push
sarl
pop
std
inc
lds
leave
adc
and
cld
and
addr16
add
and
in
icebp
mov
adc
jge
je
cltd
inc
lret
mov
inc
push
stc
or
pop
cmc
incb
pop
nop
adc
cltd
fsubl
loopne
aad
call
loope
aam
fcomps
mov
mov
xor
frstor
mov
xchg
sbb
or
notl
mov
je
lahf
loop
les
xor
mov
adc
stos
xchg
adc
push
fisubrs
push
in
cmpb
jb
outsl
test
push
cmp
dec
bnd
dec
mov
cmp
cmp
sub
in
shlb
hlt
cld
inc
sbb
pusha
std
sub
add
mov
jecxz
mov
add
mov
jae
xchg
arpl
xor
push
jp
stos
mov
rcrb
test
mov
and
cs
or
push
or
shr
add
rolb
outsb
xor
mov
imul
mov
inc
jl
jnp
jp
imul
mov
push
xor
push
cmpsl
aad
xor
add
outsl
cli
inc
and
fmull
cmp
outsb
test
gs
dec
jns
stos
lock
lock
pushf
hlt
lods
stos
iret
lock
sub
push
sti
push
add
adc
jle
mov
lret
sub
sub
push
jbe
andl
lret
cmp
mov
lahf
sbb
movsl
jmp
pushf
aam
xor
pop
rcr
fildll
into
dec
test
outsl
cmp
popa
and
add
pop
icebp
sbb
jle
pushf
adc
xchg
add
int
pop
clc
sub
test
and
je
rorl
push
shlb
cmc
aaa
nop
cmp
outsl
movq
insl
mov
imul
pop
arpl
test
sbb
nop
or
out
sahf
cmp
pop
test
pop
bnd
pushf
test
mov
scas
sub
jnp
mov
xor
mov
mov
dec
sbbl
stc
insl
stos
sub
std
xchg
push
xlat
aas
mov
hlt
in
cmpsb
adc
mov
adc
push
and
push
loopne
pop
loope
cmp
mov
pop
push
decb
das
in
dec
or
fsubrs
stc
sub
stos
xchg
scas
inc
jecxz
sub
pusha
lock
sub
jmp
push
sbb
push
xchg
cwtl
movsl
pop
lds
pop
andl
icebp
inc
cld
mov
xor
scas
rep
dec
jno
andl
loope
add
push
sbb
fdivrp
inc
test
pop
jge
movsl
sti
xor
dec
rclb
aam
inc
aaa
and
leave
mov
out
bnd
pop
fistps
aaa
lahf
or
mov
cmc
sub
pop
stos
stos
push
fists
and
inc
in
cvtpi2ps
cwtl
fnstsw
lea
pop
lock
nop
out
adc
or
jnp
add
and
xchg
sarb
cmp
push
arpl
das
jbe
adc
add
or
dec
mov
or
add
cli
into
jmp
sbb
pusha
addl
rol
aaa
outsb
imul
sbb
imul
mov
adc
pop
loope
or
or
test
pop
scas
add
dec
pop
pop
scas
arpl
dec
xchg
cmp
jmp
adc
outsb
adc
aaa
sbb
or
mov
in
out
jno
pop
mov
imul
push
ds
test
fwait
jne
cmp
cmpsb
daa
pop
fwait
loope
and
cs
push
stos
in
cwtl
pop
ja
cmc
cmpsl
insb
ljmp
fisttps
lret
mov
xlat
cmpsb
std
loope
in
loop
dec
aas
push
jb
jne
xor
cld
push
fs
movsb
idiv
sub
lods
add
sub
iret
hlt
gs
mov
xor
gs
notb
adc
jbe
xlat
into
mov
shrb
jmp
cmpsb
and
mov
loop
dec
mov
stos
sbb
add
sbb
decb
cld
out
cmpsl
mov
cmpsl
fsts
pusha
sbb
aas
xchg
dec
inc
cltd
and
sub
dec
lock
push
inc
out
pusha
fcom
popa
add
in
jb
ljmp
imulb
bound
add
ret
sahf
inc
add
daa
cltd
icebp
xor
addr16
cmp
shlb
fadd
cmpsl
movsl
push
sarl
add
jae
pop
loop
dec
sub
aad
mov
inc
pop
xor
dec
imul
adc
inc
in
mov
jns
adcl
les
test
xchg
add
push
xchg
jecxz,pn
div
jnp
xchg
pop
cmpsl
inc
mov
ja
arpl
add
jae
mov
add
int3
sti
les
mov
aad
into
push
inc
adc
add
lcall
push
popf
jae
push
fs
imul
pop
shlb
test
pop
out
xor
test
sahf
adc
jl
dec
mov
aad
push
add
pop
push
mov
lcall
jnp
incb
hlt
sbb
mov
fisubs
or
mov
jmp
sti
sbb
fldcw
push
inc
inc
push
fstps
rolb
xchg
data16
push
sub
fcmovu
pop
cld
sbb
pop
xlat
shl
xor
ja
jne
shlb
sbb
fldenv
pop
inc
mov
inc
shrb
stc
push
inc
shr
fistpl
pop
and
or
ljmp
dec
aam
cmpsl
out
jnp
pop
or
sub
pop
insb
pop
movsl
or
and
test
jmp
sti
iret
imul
icebp
aas
and
addr16
dec
or
jnp
mov
call
mov
lahf
imul
mov
mov
test
in
mov
sub
or
pop
inc
push
xor
sub
xor
out
sbb
cmc
cld
sbb
xchg
call
cmp
and
adc
inc
aad
daa
xchg
sbb
mov
lods
nop
xor
loopne
std
pushf
outsl
sub
sub
sub
inc
notl
push
popa
stos
in
out
fisubrs
cmp
into
cmp
std
mov
cmc
dec
pusha
jno
fmul
das
xchg
pop
cmp
and
popf
mov
jp
call
ret
dec
xchg
push
data16
movsb
es
repz
ss
sbb
mov
pop
fs
aam
cmp
sbb
inc
cmpsb
add
aas
scas
cld
pop
sbbl
cmp
cmpsb
adc
cmp
push
sbb
inc
dec
and
roll
push
pusha
xor
fwait
jno
xchg
sub
shll
stos
fwait
test
cmp
arpl
xchg
fisubs
xor
loope
ja
dec
jb
and
or
lahf
gs
sub
adc
pusha
outsl
or
xchg
dec
and
decb
and
sbb
outsl
lds
mov
sbb
xchg
aad
and
cwtl
addr16
repnz
movsl
adc
push
lret
testl
outsb
lahf
nop
xchg
xor
clc
cmp
repz
xchg
fnstenv
test
push
fwait
hlt
scas
stos
jne
and
hlt
cwtl
rclb
adc
dec
adc
push
mov
mov
insl
mov
push
sbb
idivb
in
mov
mov
mov
inc
arpl
cmpsl
add
sub
imul
mov
into
sub
mov
loop
mov
jns
roll
stos
nop
jl
and
or
subl
jg
cli
mov
jge
dec
mov
dec
pop
jbe
cmc
dec
xchg
mov
add
idivl
stos
scas
loop
out
out
mov
jbe
cmpsl
mov
arpl
lcall
push
pusha
dec
cmp
mov
and
add
sbb
push
test
add
cld
mov
push
pop
enter
icebp
sub
sub
cmpsl
dec
lods
sub
xchg
fidivl
addr16
addb
push
push
add
sub
xor
sub
movsb
lcall
mov
adc
push
cwtl
pop
add
inc
xor
arpl
mov
pop
ret
push
cmp
outsb
adc
stos
clc
dec
mov
rcrb
lds
orb
fildl
ret
jg
es
jle
dec
pop
aaa
popa
jecxz
idivl
ds
fildl
pop
push
jae
mov
push
stos
mov
das
fidivl
and
in
test
outsb
xlat
mov
pop
mov
dec
dec
adc
pop
inc
aas
dec
pop
in
mulb
push
inc
std
out
sbb
insb
fidivs
out
loope
mov
lcall
and
stc
popa
adc
inc
insb
or
inc
out
lea
hlt
pop
imul
jl
stc
shrb
fimuls
aas
in
lret
adc
or
push
test
ljmp
mov
shrl
jno
sbb
xchg
in
xchg
mov
and
int
aaa
mov
jge
test
mov
mov
adc
es
testb
idiv
inc
cmpsl
lods
leave
dec
cmc
sbb
ljmp
and
mov
ret
es
mov
sub
sub
jns
push
mov
xor
push
pop
pop
add
xor
std
cmpsl
sbb
xchg
insb
cld
sub
dec
fstpl
movsb
test
in
jl
mov
insb
push
cmc
mov
mov
icebp
outsb
push
sbb
inc
dec
repnz
cmc
sbb
lds
fnstsw
movsl
sahf
cmp
xchg
mov
test
out
clc
icebp
cmp
sbb
inc
sbb
sahf
icebp
imul
or
shrb
rcll
xor
cmpl
adc
sbb
jne
push
push
in
hlt
iret
outsb
arpl
xor
sbb
scas
jg
sub
adc
jmp
fisttpll
sub
aam
sbb
out
and
stos
push
mov
xchg
out
int3
push
mov
mov
call
icebp
notl
pop
int
lods
stos
mov
pop
pop
cltd
stos
inc
ja
fwait
in
in
mov
cmp
xor
sub
sbb
inc
pop
jno
mov
jne
dec
shr
cmp
bound
ja
sbb
insl
sbb
sbb
pop
jge
dec
ljmp
ret
sbb
enter
aam
jns
jbe
lods
test
and
ljmp
jnp
or
fwait
mov
xchg
jle
jbe
or
arpl
cltd
xchg
mov
pop
or
loope
mov
iret
or
pop
or
cmpsl
jbe
cmp
jnp
dec
pop
xchg
call
sti
in
xacquire
or
pop
sub
insb
jo
scas
ret
jmp
cltd
sti
sbb
insl
pushf
jle
xchg
push
push
aas
push
push
xchg
pop
add
sbb
add
inc
jl
and
stos
je,pt
cmp
std
push
sub
jnp
push
js
mov
in
scas
and
andl
cmp
jp
int
dec
xor
idivb
testb
loopne
mov
cs
ret
idivl
jns
rol
filds
and
fsub
loopne
or
xchg
in
cwtl
add
testb
in
lahf
inc
scas
popl
xchg
movsb
addl
jp
in
scas
cmpsl
push
jo
clc
ss
fsts
call
jmp
inc
ss
aas
mov
push
fistpl
add
popa
jbe
push
shr
shll
sbb
or
xor
out
inc
lods
cmp
loopne
sub
repz
icebp
push
loope
int3
imul
insl
mov
xor
push
scas
ljmp
jo
push
add
dec
insl
ja
leave
outsb
outsl
shlb
dec
lcall
xorb
inc
and
inc
jg
aas
or
xlat
outsl
xchg
fildl
notl
jl
sub
mov
mov
adc
or
fwait
adc
pop
mov
mov
idivb
and
jmp
loopne
xchg
loope
pop
test
inc
push
jge
xchg
add
mov
shlb
dec
daa
stos
cmpsl
dec
insb
inc
shl
and
stc
push
adc
fildl
adc
cmpsl
push
outsb
push
gs
aas
stos
cwtl
aad
mov
mov
dec
addl
xchg
ret
test
pop
lcall
inc
push
outsb
inc
ss
sbb
mov
mov
mov
pop
in
cltd
add
or
mov
xlat
nop
pop
insb
adc
ficoms
push
bound
inc
push
mov
hlt
xor
sbbb
jne
scas
xchg
aas
sahf
pushf
push
sti
std
pop
mov
adc
popf
je
pop
dec
ljmp
aaa
or
fimuls
lea
in
mov
inc
jb
inc
negl
mov
dec
sub
insb
and
call
pop
inc
stos
xor
mov
mov
pushf
mov
jno
mov
push
inc
xchg
adc
push
pusha
mov
mov
or
gs
xchg
adc
lds
lods
shll
push
stos
jmp
fldt
dec
shll
xor
dec
adc
popa
out
fcoms
jb
cli
sti
fwait
pop
push
jecxz
test
add
mov
inc
cli
je
clc
jg
and
cmpsl
push
push
in
mov
mov
ret
dec
xchg
fidivrl
fcoms
pusha
fildll
mov
jp
or
or
dec
xchg
pop
out
clc
push
cmp
int
mov
pop
cmp
cld
test
addr16
loope
mov
and
rclb
inc
jo
gs
jae
jmp
mov
leave
pop
inc
dec
dec
jo
nop
sub
adc
cld
mov
mov
mov
data16
pop
mov
xor
fwait
mov
popf
hlt
xchg
and
add
icebp
pop
xchg
cmp
test
xor
fisubl
inc
ljmp
out
xor
sbb
cmp
bound
movsl
movsl
inc
add
popa
add
mov
inc
sbb
enterw
pop
sub
test
enter
hlt
inc
and
adc
stc
jno
loop
sub
fildl
sti
push
push
lds
in
pop
adc
shll
dec
inc
icebp
jmp
jmp
lret
mov
icebp
addr16
cmp
imul
push
add
pop
imul
mov
pop
movsl
div
pop
stc
call
in
sbb
fdivr
dec
fistpl
xchg
add
sbb
popf
shrb
stos
mov
cmp
mov
sbb
gs
psrad
jle
add
fwait
nop
loopne
mov
fs
cmpsl
orb
cmp
add
sub
addr16
adc
push
js
inc
mov
mov
pop
sbb
out
negl
popa
mov
int
jmp
push
add
loop
ret
pop
inc
jge
test
fsincos
mov
repnz
mov
push
out
xchg
push
ds
jg
pop
loop
sbb
inc
je
jle
in
fdivs
aaa
mov
test
jmp
mov
outsb
cmp
push
mov
aaa
pusha
sub
xchg
ljmp
test
add
xchg
gs
mov
mov
pop
dec
cld
push
xchg
inc
jecxz
push
int3
lahf
pop
lret
inc
lahf
inc
test
cli
mov
in
pop
movsl
and
adc
dec
and
jp
popa
xor
adc
adc
cmp
xor
xchg
and
cmp
shr
fistps
cmp
jecxz
bound
pop
enter
or
dec
mov
aam
jp
fnstsw
aas
pop
addr16
sti
scas
dec
clc
cld
test
div
sbb
test
mov
ljmp
mov
dec
repz
add
outsl
xchg
pusha
xor
adc
xchg
jb
dec
jge
loope
test
add
push
cmp
push
lahf
mov
ret
pop
sahf
lret
and
push
cmp
rcl
mov
jae
popf
xchg
sbb
loopne
out
test
and
cmpsl
sub
mov
bound
jecxz
jmp
packuswb
or
xor
xor
arpl
addw
aam
pop
dec
lahf
dec
cs
add
push
push
mov
adc
cmp
insl
fiaddl
insl
adc
mov
pop
bound
mov
inc
popa
loopne
sub
mov
repnz
push
lret
int
xchg
loop
in
mov
sbb
jmp
cmp
das
jp
push
xor
sub
lret
xchg
test
inc
adc
ljmp
add
and
in
mov
push
sub
int
mov
insl
adc
sbb
lds
hlt
mov
ret
js
negb
aam
sub
in
imulb
daa
xchg
adc
mov
jle
in
mov
pop
cli
xor
pop
and
in
cmp
call
jnp
push
add
movsl
dec
nop
iret
scas
lods
jg
push
dec
or
pop
push
and
and
lock
ror
es
xchg
popa
jecxz
out
jbe
jg
adc
dec
fs
out
pop
sub
stc
dec
shrl
test
stos
jmp
ja
cmp
mov
mov
cmpsb
fcoms
imul
xchg
mov
jmp
push
push
jo
jno
xchg
adc
mov
cli
call
enter
pop
div
sub
sti
mov
leave
push
mov
and
push
jae
xor
add
popf
leave
loopne
inc
add
lods
stos
stc
or
push
fs
push
pmaxub
aam
inc
and
mov
filds
imul
int3
cmp
pop
sub
push
mov
stc
add
call
jle
imul
mov
popf
mov
repz
xchg
adc
insb
jns
push
xor
sbb
enter
or
push
fcmovnbe
pop
in
dec
rcrl
addb
pop
dec
outsl
xor
mov
sbb
inc
cmpb
aad
imul
xor
pop
mov
and
inc
ljmp
lret
jns
outsb
xlat
addr16
pop
jae
fwait
cli
lcall
rclb
inc
outsl
in
fimull
pop
nop
jecxz
int3
add
movsl
pop
push
push
inc
mov
jge
dec
stc
shlb
and
xorl
mov
sub
sbb
cwtl
adc
shl
shrb
xor
mov
jmp
negl
icebp
cld
and
icebp
adc
dec
mov
mov
jo
push
in
in
dec
lods
cwtl
or
and
inc
dec
cwtl
or
imull
adc
adc
push
cmp
mov
push
xor
or
mov
jbe,pt
xor
mov
mov
mov
and
add
dec
pop
jge
lcall
stos
imulb
sbb
mov
aaa
mov
mov
sbb
cmp
mov
enter
dec
insb
dec
into
pop
je
and
ret
jbe
ret
sub
inc
mov
pop
push
outsb
push
jne
arpl
xor
inc
mov
xor
lret
or
daa
outsl
cmp
sub
adc
call
cmp
pop
jae
and
adc
mov
sub
sub
cmp
mov
pop
insl
cmc
shrl
mov
aad
test
jne
jecxz
adc
sub
and
rolb
adc
mov
repnz
xchg
sbb
jns
cmpsl
data16
jl
push
and
xchg
addl
adc
out
push
mov
scas
insl
pop
mov
add
andl
scas
add
fistpl
xor
cmc
cli
scas
add
aad
adc
out
fwait
sbb
cmpsb
dec
mov
cmp
dec
clc
pop
outsb
push
xlat
add
or
push
add
cld
in
mov
mov
notl
jb
test
mov
jns
sub
daa
insb
lret
daa
mov
push
cld
movsl
sbb
aas
imul
mov
dec
push
jnp
out
repnz
cwtl
mov
xchg
in
mov
pop
or
enter
int
movsl
xchg
and
es
into
pop
or
rorl
or
lods
movq
jno
loopne
dec
shl
mov
fidivl
xchg
xor
xchg
ret
inc
jbe
xchg
mov
fbstp
xor
sub
cmp
jns
xor
jmp
dec
gs
xor
mov
push
sarl
sbb
int3
pop
sbb
adc
mov
and
rep
jns
cmpsl
mov
es
imul
xchg
sub
in
mov
leave
push
jp
xchg
and
xchg
lret
enter
loope
mov
jmp
xor
push
add
sbb
aaa
imulb
cmpsb
lret
pop
stos
mov
xor
in
dec
jl
stc
mov
lahf
jl
sbb
and
or
decb
cmp
and
and
mov
fisubs
pop
mov
pop
sbb
loopne
fcmovne
adc
mov
js
in
aam
roll
cmpsl
fxch
loop
pusha
sbb
or
cli
daa
mov
test
int
icebp
fdivrs
lret
fwait
sub
push
mov
jne
dec
sub
or
push
add
inc
ror
stos
lds
cmc
or
ds
les
js
xor
add
daa
jle
sar
mov
sub
xchg
inc
inc
mov
dec
jb
addr16
pushf
lret
lods
out
push
movsl
cmc
cmc
fcmovne
mov
fldcw
sti
test
add
insb
jne
arpl
arpl
mov
mov
push
jge
mov
add
and
jp
inc
mov
inc
fs
jae
pop
cmp
jecxz
and
stos
push
cli
scas
mov
imul
adc
leave
push
shl
subl
call
pop
dec
test
int3
sbb
into
int
dec
sub
inc
mov
imul
mov
jb
call
sbb
fdivs
call
mov
jg
push
fs
jl
out
inc
call
ret
shlb
pop
push
dec
movsl
jb
je
call
fs
scas
cmp
pop
in
out
test
push
inc
dec
ret
add
in
dec
cmp
outsb
mov
push
out
adc
and
mov
inc
leave
lahf
clc
push
adc
mov
mov
adcb
pop
insl
ficompl
mov
cmpsl
dec
div
idiv
out
add
rolb
jno
or
xor
sti
data16
dec
inc
xor
cmpsb
icebp
mov
sub
pop
aad
mov
insl
mov
and
lret
sub
cwtl
jge
xor
les
sbb
adc
pop
movsb
mov
fdivrl
adc
inc
lds
int
aaa
ds
repnz
arpl
nop
xor
jle
sahf
dec
fdivs
mov
rorb
pop
mov
icebp
sahf
cmp
aas
popf
testb
test
cs
out
adc
daa
stc
ds
fstps
rorb
pop
aad
xlat
push
jnp
aas
mov
mov
push
or
cmp
xlat
ja
and
pop
push
push
gs
paddw
mov
int
mov
lahf
insb
inc
sbb
mov
pop
sbb
push
and
xchg
rorl
jg
mov
int3
in
test
cmpsl
adc
jmp
repz
movsl
jle
jo
push
mov
je
mov
push
sti
sbb
add
mov
jg
cmp
jb
xorb
nop
pop
addr16
mov
mov
in
sahf
push
out
xor
shrl
cltd
movsl
xchg
pop
push
testl
scas
aam
xor
movb
nop
xchg
into
add
mov
out
jl
andl
lods
fbstp
popa
repnz
ret
adc
xchg
aad
cmp
pop
inc
pop
push
out
test
xchg
lods
sub
dec
das
jp
clc
das
cld
mov
cmp
xchg
sub
or
int3
fcom
and
push
movsl
jmp
ret
dec
xor
out
mov
mov
push
loopne
cwtl
das
add
lahf
jnp
ds
stos
push
xchg
xor
test
push
daa
xchg
inc
repz
push
inc
sbb
movsb
mov
push
and
inc
push
es
pop
lcall
push
adc
xor
mov
pusha
in
mov
inc
loop
int3
jne
xchg
cmp
sar
jge
add
test
outsl
sbb
fs
mov
xchg
sbb
cmp
pop
add
loope
and
sub
call
xchg
adc
pop
popa
in
popa
mov
aas
stos
mov
or
movsl
rcrb
add
pop
jp
jns
pop
xchg
add
icebp
bound
call
xchg
insl
inc
and
fsqrt
js
and
push
adc
or
sub
lahf
addb
cmp
fldt
and
inc
inc
pmulhw
jb
decb
lea
jg
movsb
ss
fcoml
or
push
insl
ss
iret
mov
mov
mov
fiadds
sbb
es
lahf
jnp
jo
aas
dec
std
mov
push
mov
shlb
int3
mov
imul
jo
clc
fwait
lea
lret
stos
jns
hlt
frstor
or
in
push
adc
cld
imul
push
repnz
jno
inc
sbb
and
decb
mov
push
sub
cwtl
mov
lock
xchg
jne
lcall
pop
aas
or
adc
push
adcb
inc
orl
or
adcl
in
xor
or
adc
inc
out
mov
ja
je
mov
pop
jp
je
test
fimull
inc
scas
ljmp
or
cs
into
sbb
pop
inc
xchg
lcall
fisttpl
inc
ret
fadds
sub
jnp
pop
sub
and
inc
mov
jge
xchg
mov
lcall
lea
stc
negb
adc
mov
leave
popf
es
je
iret
and
cmp
cmp
imul
or
inc
hlt
movb
pop
lcall
stc
jo
dec
ljmp
add
pop
scas
gs
and
xlat
and
lods
pop
ficompl
or
xlat
jno
jl
sbb
mov
dec
lret
fwait
or
lret
lahf
lds
lret
fbld
cmp
movsl
mov
sub
stos
add
mov
mov
adc
lcall
bound
rorb
mov
stos
lahf
jb
popa
insl
mov
hlt
in
pop
pop
into
xchg
call
add
xchg
pop
pop
cmpsl
mov
jns
adc
nop
pop
rcrb
jnp
cltd
inc
adc
cli
jle
imul
cmpsb
dec
cwtl
mov
dec
testl
dec
pop
fdivs
nop
out
daa
dec
stos
out
sub
add
mov
test
out
jecxz
xchg
cs
sti
cwtl
or
pop
fistps
or
or
adc
mov
movsl
ja
fsubl
frstor
fcomps
cmpsb
leave
dec
pushf
sub
mov
int
add
mov
cmpsl
inc
daa
clc
jnp
je
aas
aas
scas
jmp
rolb
adc
mov
pop
mov
and
dec
adc
clc
imul
and
sti
mov
repnz
jb
mov
subl
ud1
mov
out
push
and
into
jmp
out
and
repz
js
mov
es
call
sbb
popf
insb
xchg
add
dec
adc
xor
out
mov
bound
or
lahf
mov
repnz
xchg
mov
mov
add
mov
outsl
aad
clc
dec
popf
repz
je
aam
test
push
dec
inc
movsl
mov
mov
mov
bound
lret
inc
in
cmp
push
popf
mov
fwait
inc
jb
dec
lret
in
add
je
dec
sbb
mov
out
cltd
ret
mov
xor
leave
addr16
mov
mov
jo
iret
push
cld
loop
xchg
hlt
inc
mov
adc
jmp
push
test
test
imul
jmp
xor
test
rclb
outsb
ja
adc
movb
ljmp
in
mov
cs
pop
sbb
xor
cltd
dec
mov
sub
pop
and
jbe
pop
sti
cmc
adc
or
roll
cs
das
pop
sbbb
mov
cmp
xchg
push
pusha
sti
dec
popa
or
shl
and
push
sub
jne
sub
testb
cld
mov
mov
add
and
jmp
iret
fstpt
ja
ret
push
adc
mov
cmp
mov
or
cld
and
jno
jge
in
cmp
testb
aad
aad
cwtl
pop
leavew
fs
add
out
das
not
mov
xlat
out
inc
lock
pop
fidivl
fstl
cmp
lret
or
xchg
jg
push
adc
sub
and
lahf
xor
push
or
nop
lret
insb
mov
pop
imulb
xchg
divb
jne
sub
in
jo
mov
test
insl
inc
xlat
sbbb
je
test
adc
pop
adc
decb
and
das
or
leave
push
inc
shll
add
add
pop
fcmovnb
sbb
push
jno
js
jle
sub
loopne
fbld
and
mov
in
lea
pop
icebp
in
mov
and
call
mov
fwait
out
pop
aas
aam
mov
shll
fsubrs
inc
and
dec
repz
sbb
test
adc
mov
in
mov
into
pop
test
in
lahf
daa
sti
aam
inc
faddl
jns
outsb
push
xchg
sub
enter
mov
dec
sub
loop
xor
mov
or
lock
fisubl
and
cmp
jae
mov
adc
insb
push
hlt
pop
fdivl
inc
fptan
jae
lods
sbb
mov
sbb
mov
scas
or
xchg
mov
xor
test
push
cmc
push
jg
in
addr16
cltd
jle
jno
or
add
jne
mov
sub
testl
test
push
scas
lret
inc
adc
xor
push
inc
mov
dec
into
stos
mov
lods
out
inc
lcall
and
xor
popa
mov
jecxz
adc
ja
movsl
loopne,pn
pop
pushf
adc
enter
scas
sub
xchg
xchg
add
sbb
cmp
repz
mov
mov
dec
xchg
popf
sbb
outsb
push
shlb
xbegin
pop
xchg
es
fdivrp
clc
lea
and
sbb
clc
mov
das
and
dec
jle
lea
insl
je
out
mov
dec
adcl
jne
inc
push
sbb
mov
mov
jnp
icebp
movsb
xorl
cltd
jl
ret
icebp
jbe
out
xchg
sbb
inc
fsubr
daa
test
sub
in
xlat
divb
das
addr16
inc
jge
test
pop
lcall
nop
mov
addr16
pusha
or
push
int
mov
adc
cmp
adc
or
movsl
jnp
jmp
sub
mov
in
cwtl
lds
rclb
xlat
push
inc
or
mov
ljmp
or
adc
daa
fmuls
scas
mov
les
pop
and
adc
out
testb
loope
pop
xchg
mov
pop
aam
stos
rclb
pop
jl
add
cmp
shrb
cmp
sub
cli
clc
push
out
inc
pop
loop
jo
mov
insl
sub
xchg
and
pop
nop
mov
mov
pop
in
xor
lds
clc
lret
sub
aad
pop
in
mov
inc
push
jp
xchg
subl
cltd
sar
je
mov
pusha
jb
ds
das
or
xor
xchg
pusha
cmp
add
jecxz
in
rcrb
nop
cmp
jne
cmpl
mov
pop
adc
xchg
je
pop
push
sub
and
in
sbb
mov
jp
mov
mov
jbe
test
pop
add
xchg
dec
mov
add
and
int
ja
mov
pop
and
pop
inc
cmpsb
jns
jnp
or
jecxz
mov
xor
cmp
push
sbb
or
add
bound
mov
mov
push
cltd
xchg
cmp
dec
shr
out
in
jnp
scas
inc
cltd
mov
inc
outsl
and
inc
sti
push
inc
or
push
ds
jl
add
ret
movsb
pop
sub
enter
mov
rcr
int
std
sbb
cmc
hlt
xchg
scas
inc
es
aaa
ljmp
jae
push
mov
test
cs
xlat
and
pop
into
inc
push
addl
mov
and
and
je
mov
iret
mov
pop
imul
push
mov
push
cltd
pop
mov
push
xchg
fimull
sub
mov
sbb
out
or
mov
shlb
fisubrl
dec
pop
loope
mov
divl
ss
nop
sub
daa
cmp
xor
adc
jge
lret
mov
insl
and
push
js
aaa
mov
les
sub
xchg
dec
pop
inc
lods
mov
mov
dec
xor
cli
push
addr16
lea
pushf
orl
sub
mov
les
xchg
pop
and
mov
jns
sbb
xchg
sbb
std
push
xor
dec
adcb
cmp
js
push
std
repz
lahf
cmpsl
insl
mov
adc
dec
mov
in
enter
leave
lret
xchg
dec
adc
lret
cmpsb
adc
inc
push
adcl
sub
push
inc
sbb
lahf
or
xchg
pushf
imul
pushf
repz
xor
testl
iret
call
pop
or
mov
pop
mov
adc
xchg
cmp
imul
push
dec
out
cli
stos
movsl
sbb
fcmovne
int3
out
test
outsb
sub
mov
pusha
jne
pop
and
push
iret
lret
adc
cwtl
mov
push
mov
jbe
mov
and
adc
les
ds
lretw
pop
mov
scas
cs
pop
mov
dec
push
mov
cmp
loopne
sbb
pop
ja
sub
push
aad
shl
mov
mov
fdivp
push
mov
sbb
fbstp
or
add
fimull
xchg
dec
pusha
add
push
pop
lcall
push
daa
jnp
leave
ds
push
movl
outsb
sahf
sub
ret
xor
or
inc
mov
and
fsubrl
int3
sub
xchg
in
xchg
ret
mov
and
shl
pop
sahf
jae
int
fwait
insb
adc
and
ret
lret
fildl
scas
out
std
adc
mov
call
mov
mov
pop
outsl
ret
imul
cmp
or
xchg
jbe
sub
andl
stos
pusha
jmp
jp
adc
sub
mov
jmp
mul
imulb
in
inc
aam
mov
imulb
pop
gs
jg
xor
inc
jecxz
fidivs
push
in
cmp
adc
repnz
sti
xor
call
ret
or
xor
in
outsl
push
add
aas
mov
or
int3
loope
das
ja
sub
adc
ja
in
popf
push
movsl
cmpsb
xchg
subl
xchg
jbe,pn
cwtl
sbb
and
xlat
mov
xchg
inc
or
nop
mov
shll
pop
into
insb
lods
xor
mov
fstps
and
inc
and
sub
pop
rolb
adc
adc
mov
js
repnz
mov
xchg
push
std
pop
add
mov
cmc
out
lcall
pop
mov
test
jl
cmp
sub
inc
repnz
and
or
adc
cmpl
arpl
jae
dec
or
test
fstpt
sub
xchg
or
cmp
stos
subb
popl
jmp
and
cmp
mov
push
ljmp
cld
aas
mov
sbb
pop
cmp
ret
test
jmp
fildl
lea
cli
test
scas
aam
sbb
mov
les
ret
pop
ret
cwtl
sub
mov
jmp
sub
cmpsl
sub
pop
or
mov
sbb
adc
xchg
jecxz
int3
or
js
push
mov
pop
sub
pop
xchg
fwait
xchg
adc
nop
and
adc
pop
das
data16
shrl
stos
xchg
push
lods
nop
push
and
or
neg
ret
xchg
sub
scas
or
addb
ret
and
mov
rcrb
mov
outsl
imul
cld
mov
lret
pop
adc
imul
dec
sub
cmpsl
fcmovu
xchg
cli
aaa
orb
insl
mov
dec
mov
jns
push
sbb
cli
leave
gs
movsl
mov
rclb
push
inc
stos
rolb
out
fdivrp
lea
xchg
inc
jecxz
jo
push
call
adc
push
loop
cmovne
push
es
scas
clc
mov
movsb
dec
sarb
clc
adc
sub
mov
push
pop
test
add
mov
movsb
and
insl
std
cwtl
push
jb
ds
clc
mov
pushf
imul
pop
rcll
jge
jmp
cld
std
test
int3
sub
imulb
mov
xlat
mov
ret
in
movb
or
inc
jle
push
sub
movsl
es
imul
adc
or
ss
jg
push
filds
js
int
pop
inc
xlat
enter
and
jl
sub
test
movsb
outsb
andb
push
push
sub
into
inc
imul
jb
ficompl
pop
xchg
lods
gs
mov
push
mov
pop
call
and
mov
call
cmc
lods
nop
andl
rol
pop
pop
ja
sub
add
addr16
mov
adc
test
rcrl
pop
cld
daa
rcr
scas
sub
xchg
lds
into
cs
pop
push
and
mov
rcrl
ret
cmpsb
cmpsb
ss
fsubrs
aam
lret
pop
sahf
cmp
dec
pop
cld
movsb
in
bound
pop
rep
dec
jl
adc
ficompl
aaa
sbb
test
push
out
hlt
mov
xchg
loope
jg
jle
cmc
lret
loopne
std
mov
arpl
or
xchg
jecxz
add
mov
movsb
cltd
dec
pushf
push
int3
sub
xor
mov
sbb
mov
insl
test
cmp
and
add
sbb
popa
in
std
push
cmp
insl
scas
jle
xchg
call
and
inc
call
mov
push
jns
add
or
pushf
jns
stos
outsb
mov
mov
and
sub
mov
scas
cmp
sub
dec
jno
cmpsl
and
push
lds
sbb
push
insl
jl
sbb
inc
test
sub
cli
push
pop
sub
pop
lods
lods
dec
inc
sub
movsb
aas
sub
testl
repnz
not
mov
fwait
mov
repz
jp
fdivl
daa
ret
pop
je
inc
add
push
pop
bound
loop
scas
xor
in
push
mov
push
movsl
jb
cmp
jecxz
xor
bound
xchg
mov
jnp
xor
xor
pushl
jg
fdiv
or
push
repz
xor
dec
into
aad
or
inc
fildll
sub
pop
cmp
les
add
popa
shll
out
adc
push
dec
aad
pop
lock
out
lock
lods
fsubrl
sbb
jle
cs
jmp
push
stos
mov
mov
and
lcall
ret
ljmp
push
pop
cmp
xor
and
fimull
pop
sbb
mov
mov
ficoms
lods
inc
and
insb
mov
aad
fbld
inc
rcrl
in
inc
movsb
aaa
addr16
and
mov
inc
adc
xchg
fsts
cmp
in
in
add
push
mov
dec
xor
bnd
sbb
ss
or
stos
bound
ret
cli
jne
dec
aaa
fsub
fs
movsb
add
sarl
les
fisttpl
jg
xor
push
and
pop
or
gs
xchg
fmuls
les
andl
es
mov
push
push
scas
lahf
test
out
jb
sbbl
jge
cmp
xor
cwtl
mov
push
add
ret
cwtl
jl
stos
out
cmpsb
psubd
push
jnp
je
push
mov
notb
cld
fadds
icebp
lock
out
sub
lea
and
imul
insb
ja
js
fnstsw
pusha
bound
imul
inc
push
insb
leave
stos
scas
pop
jnp
xchg
scas
popf
mov
mov
cmpb
sub
xor
dec
out
mov
push
push
popf
lock
mov
ljmp
mov
cmpsb
pop
jb
dec
fiaddl
shrl
adc
scas
mov
cmp
sahf
cwtl
push
mov
push
loopne
mov
stos
lret
mov
rcrl
push
pushf
das
cwtl
mov
movsb
mov
xchg
jnp
cmp
ds
pop
mov
in
mov
xchg
push
pop
call
mov
insl
dec
mov
jo
test
loopne
int
mov
push
arpl
outsl
ret
lahf
mov
bound
rorl
push
xchg
fucomip
pop
aad
jp,pt
fidivs
jae
int3
fildll
cmp
adc
mov
test
sbb
lea
inc
mov
test
sub
xor
rcll
fcmovnbe
ljmp
daa
mov
scas
sbb
inc
push
pop
sarl
test
dec
cmp
mov
xchg
fisttps
lds
movsl
inc
cmpsb
dec
cs
pop
jbe
lods
xor
jge
mov
sbb
scas
sbb
std
sahf
das
es
mov
xor
inc
dec
jg
or
lret
jns
xor
dec
xchg
leave
repz
cli
repz
hlt
insb
dec
cld
mov
xor
sub
int3
dec
and
out
jmp
outsl
lods
sub
or
jle
movsb
rorl
or
dec
jbe
fs
cmp
or
xchg
imul
roll
pop
mov
and
jno
in
or
xchg
clc
add
mov
out
shl
sub
shlb
lcall
and
hlt
movsb
popf
cltd
inc
popf
pop
jg
ja
inc
int3
aas
bound
mov
fsubs
scas
ret
fdivrl
push
push
int
ss
pop
jge
fiadds
mov
dec
mov
mov
lcall
ljmp
out
bound
out
outsb
stc
insb
insb
loope
xor
out
add
pop
insl
and
jg
out
push
dec
mov
fwait
push
inc
aaa
int3
in
jge
inc
gs
pop
scas
mov
dec
or
and
sahf
xchg
xorb
ja
clc
cmp
dec
aas
adc
mov
and
lcall
fs
test
sub
daa
pop
mov
push
incl
mov
cmp
pop
je
adc
xchg
sbb
push
inc
inc
mov
pop
mov
dec
or
pop
cli
mov
mov
pxor
push
ja
insl
inc
cmpsb
cmp
cltd
sti
sub
frstor
into
jmp
ja
mov
outsl
das
inc
or
mov
fstpl
rol
test
adc
xor
dec
sahf
int3
xchg
mov
ljmp
sbb
adcl
in
minps
sub
dec
or
lods
add
int
ret
adc
ja
nop
out
test
je
jp
push
pop
mov
lret
scas
mov
jbe
jge
mov
lcall
dec
shrb
lea
jle
stos
js
cmpsb
add
xchg
fiadds
sub
sbb
push
cmc
pop
inc
cs
mov
add
pop
jecxz
sbb
pop
fiadds
jmp
jb
out
orb
jbe
xchg
xor
xor
xor
into
xchg
xor
xchg
push
or
aas
pop
push
mov
scas
pop
sarb
xchg
pop
test
mov
das
pop
push
sub
loopne
add
aam
aam
repnz
jno
mov
out
mov
cmp
outsb
cld
mov
jp
mov
pop
rcrl
mov
lret
push
loop
xchg
adc
clc
sbb
stos
add
push
fs
clc
lcall
dec
mov
pop
lods
lods
mov
xchg
leave
lods
jnp
jecxz
out
mov
and
pop
clc
fidivs
shl
ret
or
sub
int3
mov
nop
inc
and
xchg
pusha
cmp
nop
test
inc
cld
out
insl
pop
mov
push
mov
jb
xchg
dec
mov
dec
cld
mov
xchg
roll
jmp
sbb
or
mov
std
mov
adc
outsl
lret
hlt
cli
push
or
std
stos
mov
enter
cmc
add
xor
fbstp
pop
aam
pop
mov
outsb
pop
repnz
jmp
mov
pop
aas
mov
fs
repnz
sub
dec
adc
hlt
fcompl
mov
popf
pushl
jge
sbb
mov
sub
and
mov
xor
jne
lock
das
adc
adc
mov
loope
mov
push
rcrl
add
mov
ret
or
jge
xchg
sub
lds
inc
cltd
add
xor
push
or
lcall
mov
ret
call
hlt
pop
inc
int3
or
imul
icebp
xor
or
cmp
cltd
cmp
inc
pop
dec
repnz
scas
push
dec
lds
lea
pop
mov
out
inc
enter
stos
lea
xchg
pop
not
lods
testl
and
and
sbb
sahf
or
popa
cmc
sbb
sub
int3
cmp
xchg
fsts
sbb
loopne
inc
xchg
jne
aad
inc
loop
push
pop
enter
sbb
imul
and
jecxz
push
nop
inc
inc
dec
adc
inc
andl
sarb
xchg
fdivs
gs
adc
xchg
int
movsl
sarl
test
cli
imull
lock
movsb
imul
mov
push
aam
sbb
out
clc
bound
fidivl
lock
in
cmpsl
imul
mov
clc
xchg
fdivl
and
fcmovnu
enter
outsb
jne
mov
sub
es
ss
cmp
mov
xor
clc
leave
enterw
jmp
fucomp
ljmp
jae
cltd
mov
xchg
in
mov
pop
cmp
inc
shr
iret
mov
faddp
add
mov
jns
sar
dec
sbb
and
jnp
cmpsb
push
push
sub
xorl
or
cmp
stos
pop
ds
scas
out
cltd
cmp
fstpl
nop
cmp
cmpsl
repz
jle,pt
enter
out
in
dec
leave
pusha
add
into
subl
sbb
cmp
adc
mov
out
loopne
mov
popa
sub
negb
push
enter
dec
xchg
test
push
arpl
mov
push
out
aad
cmpsl
sbb
push
or
jmp
push
adc
pusha
mov
sub
cmc
enter
or
mov
xor
in
ret
hlt
mov
pushf
aas
cwtl
sbb
fnstcw
subb
scas
mov
repz
test
sbb
xchg
icebp
addr16
pop
mov
push
lock
roll
in
ficomps
add
out
scas
sub
mov
pop
mov
jne
sbb
mov
mov
popf
cmp
jbe
clc
jbe
movsl
jae
addr16
xchg
lea
xchg
inc
mov
mov
test
imul
inc
in
popf
mov
cmp
xor
idivb
out
mov
outsl
cld
jg
or
or
leave
jo
decb
inc
jg
jg
sub
sub
cmp
ja
sbb
cmpsb
xchg
out
ds
mov
push
ret
lcall
inc
outsl
dec
jbe
jnp
lods
imul
mov
mov
orl
xor
push
pop
je
mov
dec
mov
or
inc
cmpsb
push
loope
dec
push
sbb
testl
repnz
out
cmp
movsb
pop
inc
xor
inc
push
fcomi
fwait
xchg
outsl
lea
xchg
fisttpl
push
cltd
or
xlat
mov
rorl
add
ljmp
mov
xchg
pop
add
sub
and
inc
xor
in
inc
inc
cmp
pushf
sbb
aas
pop
jb
xchg
pop
push
dec
iret
mov
aas
dec
cs
pusha
outsl
mov
std
sub
imul
popa
add
outsl
loope
insl
mov
dec
ror
test
mov
mov
dec
sbb
cmp
lds
fisubrs
add
push
cmp
cmp
mov
or
adc
xchg
jmp
jns
push
sub
bound
sbb
mulb
adc
dec
pop
sub
lret
data16
push
and
addr16
xor
out
jnp
pushf
mov
xorb
mov
mov
popf
ds
adc
and
in
xchg
push
shll
sub
xor
dec
push
mov
pushf
rcl
sbbb
in
movsl
sbb
stos
test
pusha
cmpsl
ficomps
aad
mov
or
jb
imul
loop
sahf
mov
cmc
jge
cmpsl
xchg
jbe
jns
fsubrl
mov
jbe
mov
movb
adc
cli
test
pop
pop
mov
or
mov
jns
or
lods
ljmp
adc
mov
jnp
sub
sbb
adcb
or
in
or
push
fists
push
add
hlt
rolb
inc
push
mov
sub
negl
je
lcall
mov
adc
adc
and
jp
shl
rolb
cs
adc
inc
popf
enter
scas
stc
jno
cmp
mov
fdivrp
outsb
dec
ss
add
adc
xchg
insb
push
dec
cmp
mov
cli
ret
xchg
xchg
add
mov
push
pop
mov
add
mov
std
repnz
subl
sub
mov
dec
int
push
mov
cli
ljmp
shlb
lret
push
or
lahf
cs
xor
mov
push
mov
out
jnp
xchg
add
out
mov
hlt
lea
add
loope
sbb
or
ljmp
stos
arpl
inc
repz
nop
mov
dec
dec
and
sbb
mov
push
jnp
adc
sub
ret
je
pop
out
scas
adc
adc
bound
fdivs
dec
out
cmp
call
js
mov
dec
cmp
push
out
mov
jp
xchg
int
inc
popf
jnp
ror
in
pop
shlb
stos
sti
in
enter
aaa
testl
sahf
fwait
ss
hlt
or
cmp
push
or
scas
push
xor
pop
rcll
sarl
sahf
mov
mov
xorl
and
sti
xlat
mov
aam
add
sar
xor
out
add
sub
pop
sarl
or
lods
fidivs
lret
insb
movzwl
imul
lcall
outsb
daa
aad
cmp
frstpm(287
out
sbb
xor
rcr
repz
and
movsb
dec
mov
mov
sarl
repnz
popa
lock
sbb
movsb
mov
xchg
cwtl
and
xor
cltd
fs
xchg
or
cmpl
sub
int3
dec
xor
xor
pop
pusha
mov
fwait
je
push
subl
xchg
mov
or
hlt
push
mov
lock
push
xor
dec
lods
ss
mov
push
xchg
incl
roll
ficomps
pusha
cmpsb
mov
jg
rol
test
push
pop
cmp
call
and
or
jb
es
jmp
jb
ljmp
cmp
mov
call
addr16
enter
add
cmp
cmp
mov
aam
jo
movsl
fld
aaa
ss
inc
sub
add
xor
and
ret
icebp
out
jne
sub
adc
test
insl
dec
repz
cmc
xchg
fwait
jns
dec
or
or
sbb
jbe
shrb
clc
pop
sbb
or
loopne
int3
xchg
adc
loop
and
out
mov
aas
or
and
push
stos
ja
xlat
add
adc
out
sub
andl
mov
lcall
out
and
pop
pop
sbb
sub
fisubrl
scas
mov
mov
ffreep
pusha
jo
sbb
push
and
or
mov
mov
jae
imul
dec
push
xchg
ret
dec
xchg
lret
mov
das
cld
sbb
loopne
xchg
les
fdivrs
mov
or
xor
outsb
divb
mov
inc
popa
inc
cmp
std
mov
enter
pusha
sub
lock
fsubrl
outsb
les
inc
das
sbb
fidivrl
cmpsl
adc
das
jmp
loopne
or
adcb
popf
hlt
mov
mov
or
das
mov
jo
lcall
adc
mov
mov
inc
mov
sahf
gs
into
ss
stc
push
push
push
mov
jecxz
into
and
add
and
and
dec
push
repz
out
push
inc
adc
lret
jl
sbb
xor
movups
and
adc
push
mov
jl
mov
inc
mov
cld
fmull
pop
cmp
les
sbb
loopne
cwtl
clc
shlb
iret
xchg
das
push
xchg
xchg
or
filds
test
mov
fsub
jo
es
ret
xor
or
pop
adc
xchg
repz
dec
lahf
sub
or
sub
adc
test
jo
sbb
test
sub
lock
mov
cwtl
adc
stc
inc
outsb
dec
scas
adc
xchg
adc
or
cmp
out
xor
push
push
lcall
mov
icebp
xchg
inc
pop
test
and
xor
test
mov
int3
cld
rep
push
nop
xchg
insl
and
shll
sti
mov
lods
mov
test
repz
mov
repz
pop
fisttps
jmp
inc
scas
clc
out
cmp
enter
cmp
pop
jecxz
or
mov
stos
mov
or
sbb
dec
jno
jle
popa
push
je
movl
in
xchg
pop
push
xchg
ficomps
jbe
fidivs
mov
mov
fnstsw
es
mov
scas
mulb
lahf
push
cmp
pop
cmp
xchg
sbb
sbb
pop
sbb
int
xchg
xchg
clc
dec
scas
clc
mov
aad
aad
inc
pushf
or
jle
cmp
or
ret
in
fstpl
arpl
mov
pop
inc
sbb
clc
sub
pop
leave
test
xlat
fwait
inc
jge
inc
cmpsb
insb
jb
adc
mov
adc
adc
das
arpl
xchg
push
add
daa
mov
inc
xchg
cmc
stos
aad
cmp
jae
and
inc
xchg
inc
rcl
jge
mov
stos
xchg
call
push
repz
lock
clc
int
xor
pop
jmp
mov
lods
setb
xor
adc
sub
clc
testb
pusha
inc
mov
negb
int3
push
xorl
add
pop
movsb
aam
in
pop
inc
mov
xor
xchg
pop
jne
pop
adc
mov
data16
or
sub
jle
les
push
cmpsl
cmpsb
hlt
xor
adc
push
add
add
sbb
pop
fwait
mov
nop
xchg
xor
push
xchg
mov
imul
icebp
ret
lea
call
cmp
add
je
adc
sub
pop
sbbb
xchg
sbb
and
jge
or
stos
sbb
shlb
ficoms
push
lea
add
std
in
add
inc
adc
in
out
or
mov
ret
shr
jae
mov
xor
xor
pop
lods
test
cmc
push
add
sub
in
mov
lock
sub
pop
pop
daa
into
movsl
ficoml
xchg
dec
mov
iret
popf
into
pop
jbe
jae
xor
push
xor
jmp
stos
or
sub
pushf
jl
data16
mov
daa
or
xor
mov
or
repnz
push
out
or
pop
mov
adc
lret
pop
jbe
jnp
mov
cmpsl
lds
stc
pop
jle
add
pop
dec
sarb
sti
add
enter
stc
mov
in
pop
xlat
jno
lea
pusha
adc
dec
negb
xchg
out
arpl
cmpl
push
mov
repnz
push
mov
add
jg
repz
rcr
xor
and
insb
adc
mov
add
cs
pop
push
sub
inc
movsb
test
and
push
push
push
xor
insl
adc
mov
insb
xor
aaa
xor
movsb
rclb
es
inc
pusha
fmull
add
das
mov
int3
cmpsl
neg
outsb
les
call
fistl
mov
add
and
inc
das
or
push
addb
fildl
jo
cmp
push
repz
mov
inc
add
or
sbb
jge
push
mov
insb
leave
movsb
clc
jb
in
ds
lds
in
std
cvtps2pd
jb
mov
jne
jb
and
inc
pop
xor
aam
jbe
call
mov
push
or
mov
loop
jge
sbbl
outsl
pop
jge,pt
mov
push
adc
adc
movsb
repnz
lcall
add
ldmxcsr
sbb
sbb
mov
sbb
fyl2x
mov
adc
pop
dec
mov
or
xor
jg
dec
lock
mov
push
pop
cmpsl
xchg
addr16
and
pusha
xchg
js
pop
mov
cmpsl
lds
imul
subb
stc
out
push
fld1
cmp
adc
push
push
inc
imul
mov
out
pop
inc
push
xchg
xchg
test
mov
ds
fwait
sub
sub
jge
sbbl
inc
aam
and
jb
pop
pop
rol
sbb
call
add
jae
dec
pop
cmpl
add
cmp
add
pop
pop
jb
sub
dec
or
loopne
add
invd
sbb
fists
or
cli
fcoms
add
pop
xorl
pop
push
popf
mov
mov
push
mov
dec
pop
xchg
mov
imul
jp
jle
push
cmp
pop
mov
lahf
popf
lea
fsubrp
fisttpll
sub
inc
stos
adc
int3
cs
pop
mov
mov
gs
movsl
inc
dec
xchg
xchg
in
jecxz
outsb
jge
mov
sbb
sahf
pop
imul
jno
push
sti
add
lods
jbe
aad
cmpsl
sub
cli
jo
dec
cwtl
mov
jbe
movsb
add
sub
cmc
add
cwtl
sti
cmpsl
xchg
leave
jns
mov
test
mov
fstpt
loopne
mov
sub
fnstenv
cmp
push
popa
sbb
pop
test
fucomi
and
sbb
cs
bound
sahf
nop
ds
xor
sahf
xor
enter
jb
add
and
push
ret
cmp
sbb
add
add
shl
add
lret
jl
flds
lret
scas
add
jns
bound
cmp
xchg
add
mov
add
cmc
cmp
sbb
out
sti
hlt
jecxz
push
xchg
js
insl
xchg
jl
xchg
gs
xor
rclb
popa
pop
mov
lahf
pop
test
loopne
ret
into
dec
icebp
sub
call
push
cmp
jecxz
dec
test
adc
mov
fisubrs
test
into
sbb
or
mov
adc
pusha
xor
loope
inc
bound
fnsave
iret
scas
jo
fucomp
ljmp
inc
jge
adc
mov
in
cmpsb
and
int3
enter
jns
pop
outsb
bswap
cmp
mov
lret
sahf
int
adc
int3
jne
icebp
loope
loop
xchg
sub
lcall
cmp
int3
es
scas
aas
mov
add
xchg
add
adc
das
and
inc
je
add
cmpsl
ret
mov
mov
mov
int3
jb
cmpsb
aam
insb
adc
xchg
mov
mov
jl
sbb
test
scas
cmp
adc
movsb
mov
lcall
std
cmp
mov
daa
inc
push
cmp
rcrb
push
or
das
sub
and
decb
mov
imul
lock
repnz
scas
push
sub
push
jo
pop
fsts
adc
insl
mov
jne
and
int3
dec
in
or
outsb
popa
sub
jno
push
roll
dec
jl
mov
lahf
pop
adc
push
push
dec
sbb
or
mov
dec
int
or
int
xchg
push
scas
cli
dec
pop
cmp
nop
or
lahf
and
je
mov
pop
rcrl
adc
pop
push
jp
in
jmp
sub
pop
mov
xorl
shlb
std
cmpsb
adc
inc
push
push
punpckhdq
repz
mov
popa
inc
jns
add
mull
dec
lret
jbe
scas
sbb
loopne
xchg
cli
iret
ret
or
jno
xchg
sbb
push
inc
xchg
mov
push
mov
pop
leave
adc
fimuls
adc
in
fistpl
pop
pop
or
dec
mov
out
dec
mov
mov
add
xchg
inc
or
add
gs
shrl
dec
clc
lahf
mov
adc
xchg
or
cmc
call
fidivrl
and
jb
sbb
adc
inc
pop
enter
testl
addr16
popf
test
cmp
jle
pushf
xor
std
pop
cmp
pop
jnp
sub
cmp
fnsave
call
cs
jl
jmp
mov
fldenv
sti
fisttpl
push
mov
jns
xor
sbb
aas
mov
mov
adc
pop
int3
pop
ja
mov
sbb
fisttpll
int
push
sti
and
xor
lret
sbb
and
mov
cmc
ficoml
and
pushf
fwait
cmp
pop
test
mov
sub
hlt
mov
mov
test
leave
js
cmp
rolb
push
leave
out
or
testb
ds
test
insb
xor
fiaddl
lods
rolb
mov
pop
push
cmp
mov
jle
hlt
shlb
pushf
add
int3
mov
xchg
sub
sbb
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
push
dec
sub
xor
out
sub
and
pop
fisubl
sbb
or
out
mov
pop
cli
xor
xor
fs
scas
in
pop
inc
lcall
icebp
cmp
xlat
cmp
int
jo
push
in
arpl
flds
dec
mov
jmp
cltd
and
xorl
inc
popf
mov
or
fstpl
mov
in
rorb
fcomps
imul
xchg
mov
aam
jecxz
ja
orb
add
or
hlt
jecxz
xchg
sub
fisubrl
roll
loop
daa
sbb
mov
in
sub
shl
sahf
xchg
lock
pop
repnz
imul
test
iret
add
lcall
je
inc
mov
adcb
pushf
ret
lcall
inc
dec
and
loopne
sbb
fadds
call
pop
push
cmpsl
or
stos
frstor
xor
cmp
dec
inc
push
sbb
pusha
jbe
out
and
cmp
lret
cmpsb
stc
sub
sub
cs
dec
or
lods
ss
call
imul
movsl
int3
scas
ljmp
cmp
jb
popa
fcmovnb
push
cwtl
xor
push
jp
mov
pop
inc
xor
dec
dec
in
imul
push
push
mov
bound
adc
in
test
mov
mov
out
movsb
cmp
shl
jne
jecxz
pop
xlat
call
cmp
jb
inc
pop
inc
add
jl
movsb
std
adc
xchg
insl
sub
enter
mov
push
cmc
imulb
pop
mov
std
jp
loope
shrb
lret
orb
push
loope
cmpl
pushf
xchg
aam
and
cmpsb
nop
loope
jge
adc
bound
ret
inc
je
push
add
add
add
add
inc
xchg
lret
out
hlt
notl
in
pushf
and
sar
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
mov
