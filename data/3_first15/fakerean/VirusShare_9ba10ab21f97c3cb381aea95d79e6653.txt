lea
movzbl
movsbl
sub
xor
add
sub
inc
inc
add
lea
mov
dec
add
inc
inc
sub
lea
dec
jne
mov
mov
dec
add
pop
dec
dec
pop
xor
lea
pop
movsbl
sub
inc
inc
add
and
lea
mov
add
dec
dec
add
ret
push
add
and
lea
imul
inc
dec
sub
sub
push
push
push
push
xor
lea
mov
push
dec
dec
inc
sub
or
lea
imul
dec
inc
mov
add
push
dec
xor
xor
lea
mov
push
inc
dec
push
inc
inc
pushl
or
call
lea
add
movswl
add
dec
dec
inc
xor
lea
pop
ret
repz
sbb
mov
jb
aaa
xor
test
ljmp
lcall
cmp
das
xor
fs
jae
jmp
add
adc
icebp
cmpsb
cmp
jl
int3
jae
inc
mov
hlt
ds
or
arpl
cltd
sbb
es
test
xorb
cld
push
cmp
loope
or
orb
jo
xchg
ljmp
adc
fstps
int
test
movsl
adc
xchg
inc
test
pusha
sub
imul
jp
fwait
lahf
cmpsl
lret
pop
mov
shlb
jge
pop
mov
push
add
rcl
je
les
stc
mov
ss
fldt
cmp
push
adc
stos
imul
and
jge
insb
sub
mov
in
xor
loop
sub
data16
xor
push
scas
pop
lcall
shrl
bound
or
adc
pop
icebp
mov
lcall
sub
jno
mov
sub
xor
aad
jl
inc
xor
adc
test
jl
or
lock
fisttps
fistpll
pop
mov
cmp
mov
inc
addr16
dec
push
aam
push
test
adc
mov
and
outsb
xchg
jne
and
cltd
adc
lret
jg
and
andl
mov
std
jns
and
roll
mov
shll
les
mov
pop
call
gs
cltd
mov
int3
mov
lock
mov
sub
int3
int
sti
roll
add
stc
lret
fiadds
test
jecxz
jecxz
or
pusha
push
jo
pop
xchg
scas
test
nop
lcall
fistl
mov
punpckldq
ss
jl
stos
and
mov
mov
aam
inc
or
subl
cmp
lahf
shlb
xor
sub
xchg
mov
adc
jmp
inc
clc
xchg
pop
mov
in
es
dec
push
in
mov
jle
mov
loope
inc
out
jge
or
jno
sub
out
and
or
call
add
clc
lret
mov
or
xchg
fcomps
repz
push
arpl
rorl
test
sub
push
out
pop
sub
push
mov
nop
popf
jle
push
push
xor
andb
aaa
jno
xorl
insl
ja
out
stc
mov
imul
div
andb
lods
call
pop
jae
insl
mov
mov
test
push
fs
in
and
and
push
into
push
scas
scas
mov
aaa
dec
mov
push
push
stos
mov
dec
mov
push
inc
adc
insl
loope
inc
sbb
jno
mov
inc
enter
jno
push
lret
jnp
jns
mov
dec
nop
daa
cmp
cld
dec
push
cli
add
push
pop
mov
cmp
jecxz
int3
leave
mov
push
push
leave
insb
enter
shrb
adc
sti
pop
mov
add
add
ds
stos
or
scas
xchg
push
clc
mov
dec
xchg
sbb
test
pushf
ret
xchg
jle
jg
aad
or
sub
sbb
test
add
adc
mov
xor
stos
popl
lcall
sbb
push
imul
loopne
add
hlt
mov
or
jae
dec
cwtl
les
jecxz
rolb
mov
call
inc
int
or
mov
xchg
jns
outsl
xchg
lods
sbb
push
or
test
cmp
adc
xlat
add
adc
cmp
pop
testb
popa
mov
test
sbb
les
hlt
sahf
add
sbb
repnz
xchg
mov
mov
jmp
iret
pop
jg
adc
mov
loope
push
or
dec
xor
cmc
xchg
out
aad
out
or
iret
clc
inc
stos
push
cmc
sub
enter
pop
shlb
mov
lock
pop
in
jmp
mov
je
sub
lock
inc
in
push
push
xor
mov
sub
and
adc
jp
add
bound
fdivp
add
das
das
loop
pop
je
sar
ret
and
addr16
mov
ss
adc
jp
cmp
push
add
mov
dec
fdivs
xchg
mov
add
cmc
shll
insb
dec
scas
xor
sbb
imul
jl
jecxz
inc
mov
cmpsb
sti
repz
pop
cmp
std
xchg
cmpsb
daa
mov
adc
je
and
inc
inc
lods
cld
mov
fmuls
jg
idivb
mov
mov
mov
pop
js
sub
cmpsb
fimull
inc
fwait
fwait
and
mov
out
in
icebp
push
scas
or
sbb
sahf
aas
mov
cmp
lods
mov
out
rcll
xchg
and
pop
xorb
mov
and
icebp
adc
jns
out
cltd
and
xchg
and
fiaddl
xor
xor
daa
popf
cmp
jbe
xor
xchg
push
adc
push
or
int
inc
xchg
jp
dec
mov
jno
arpl
mov
loop
shr
gs
cli
cmp
push
mov
pop
subl
fisubs
push
enter
hlt
popa
or
inc
outsl
or
sbb
add
std
xchg
mov
out
gs
xorl
lret
jns
inc
cltd
fs
aas
sub
or
inc
imul
inc
in
pop
mov
ljmp
and
xchg
xchg
mov
mov
fldenv
lret
cwtl
xchg
lods
add
adc
mov
dec
or
inc
jb
loop
and
test
iret
fistpl
sbb
stos
jl
or
jmp
xchg
lahf
das
cmp
mov
negb
cmpsl
mov
jl
xor
out
jmp
loopne
inc
lock
fsts
jecxz
sbb
mov
xchg
sti
cmp
fistpl
adc
jge
fcomps
bound
jo
pop
jbe
mov
outsl
test
fs
push
adc
xor
mov
add
ja
xchg
popa
push
jg
sub
push
lock
movsb
rcrb
xchg
std
fiadds
test
mov
push
ja
xor
sbb
insl
lods
or
movsl
dec
mov
and
sbb
icebp
jp
mov
cwtl
cmc
push
mov
cli
ret
insb
sub
sub
mov
jle
mov
inc
aad
clc
xchg
icebp
mov
sbbl
out
in
and
sbb
cli
mov
add
and
cmp
add
sub
sti
popa
xor
test
in
or
dec
fwait
lcall
jmp
mov
js
mov
dec
sbb
inc
push
mov
push
adc
inc
ja
pushf
int
test
sbb
les
or
inc
loope
xchg
adc
mov
push
mov
push
pushf
mov
cmp
jg
dec
test
cwtl
mov
jle
mov
add
mov
pop
pushf
inc
and
pushf
sahf
ljmp
mov
xlat
and
ja
mov
xlat
aam
cmp
xlat
sub
push
mov
jns
lds
dec
imul
test
dec
loope
int
pop
add
fcmovnbe
rorl
cmp
push
addr16
push
mov
pop
xchg
insb
and
lock
fmul
test
sti
ficoms
xchg
mov
xchg
lods
insb
xor
nop
jbe
mov
repz
push
cmp
lea
js
jbe
jmp
mov
ret
ffree
push
lret
das
adc
lcall
adc
popf
test
lods
fcmove
dec
divl
dec
sub
out
push
cli
mov
insl
or
cld
or
shll
roll
dec
jbe
jp
scas
in
jl
sub
push
cld
add
imul
scas
cltd
jmp
pop
mov
loope
cs
cwtl
cwtl
shl
scas
je
xchg
retw
sbb
push
fstl
into
les
xchg
aam
arpl
test
dec
insl
mov
cmc
jnp
xchg
cmp
add
cli
pop
push
mov
loopne
mov
mov
sbb
imul
sbb
psubq
insl
jbe
or
lds
jnp
mov
pop
jnp
lcall
aas
dec
ss
cld
fs
pop
xchg
jmp
outsl
mov
int3
pop
std
xchg
mov
mov
cwtl
cmp
rclb
lret
xor
mov
fsubrs
nop
xor
xchg
sub
call
fsubrs
lods
cli
in
imul
push
hlt
inc
shll
xor
test
push
lods
cltd
sub
or
in
cmc
xor
loopne
ljmp
arpl
cmp
xchg
jl
xchg
xchg
mov
fsub
adc
xchg
fsubl
testb
pop
je
jb
sbb
add
and
inc
push
stos
or
push
mov
jmp
xchg
pop
mov
mov
mov
add
push
jne
stc
pop
dec
out
subb
sbb
lea
testb
fwait
call
adc
roll
inc
aad
scas
mov
aas
addr16
pand
and
popf
pop
in
pop
loop
pop
add
mov
jmp
lock
sahf
and
stc
int3
pop
inc
mov
adc
cld
int3
mov
in
cld
movsl
repnz
jecxz
mov
popf
dec
test
dec
insl
push
lods
xor
lret
nop
dec
iret
jle
out
cmp
adc
mul
nop
pop
pop
cmp
fwait
int
icebp
add
stos
push
jecxz
fstps
add
insb
outsl
cmpsl
xchg
inc
stc
out
cmp
scas
xor
sub
popf
leave
add
pop
and
jne
cmp
jg
dec
addr16
pop
dec
out
rol
or
out
jg
add
pop
popa
pop
pop
jno
aaa
lock
in
rorl
aam
lahf
pop
jg
imul
loopne
pop
adc
and
xor
pusha
ljmp
dec
dec
mov
xor
faddl
test
inc
push
xor
ds
inc
mov
sbb
pop
add
lret
mov
cmp
jne
xorl
xchg
sub
push
gs
int
pop
and
loop
dec
cmpsl
push
dec
loope
push
pushf
int3
out
jle
movsb
pop
sti
sub
jbe
filds
push
sub
mov
fisttpl
lret
out
xlat
or
jge
outsl
out
jge
hlt
js
in
je
xor
jge
mov
sub
jns
insl
or
lahf
fsubl
pushf
or
lock
mov
test
aaa
cmpsb
mov
pop
js
jg
cmp
sbb
add
dec
imul
sbb
sahf
enter
mov
inc
inc
push
aad
inc
inc
sub
jnp
mov
pop
sbb
loope
aad
das
arpl
mov
inc
fbld
inc
shlb
enter
ljmp
roll
push
test
mov
loope
pop
sahf
push
dec
lods
lcall
pop
int
xchg
jg
scas
out
jno
shlb
fcomip
pop
mov
mov
add
inc
ficompl
das
decb
arpl
and
aad
add
sub
outsb
int
lods
stos
fnsave
mov
adc
push
stc
enter
cmp
xchg
mov
aad
fidivrl
mov
div
cmp
movsl
ss
rcrb
mov
nop
cs
push
cmp
dec
jp
mov
out
aaa
lcall
sbb
add
adc
jl
ret
ss
lahf
push
sbb
jg
stos
jnp
mov
mov
stos
aam
mov
adc
out
fxam
pop
add
sub
mov
scas
push
insb
loopne
add
cmpsb
inc
lock
std
mov
push
push
dec
ficoms
dec
aas
push
jle
jle
jno
mov
repnz
push
add
jmp
cmp
pop
call
data16
mov
dec
push
int3
loope
and
ss
stos
adc
fs
push
nop
pop
mov
int
dec
mov
mov
in
lahf
mov
orl
and
icebp
jne
xchg
xchg
push
inc
sub
pop
jecxz
cmp
gs
adc
mov
lahf
test
xor
lret
rclb
rcl
inc
clc
stos
sub
repnz
and
cmpb
push
sub
xchg
roll
add
jmp
adc
xlat
iret
sbb
cli
inc
and
sbb
jmp
push
shlb
in
lock
jbe
addb
jb
fldl
addr16
cmp
mov
jno
outsl
test
inc
mov
idiv
mov
sbb
push
dec
xchg
xchg
jecxz
mov
dec
pop
popa
je
cwtl
push
into
xchg
lods
dec
jno
and
mov
dec
outsb
xor
cltd
push
mov
call
cmp
cli
add
mov
test
loopne
mov
cmp
icebp
xchg
cmp
in
ret
push
add
lret
aad
mov
loop
jmp
pop
data16
pushf
jp
mov
cld
gs
xchg
in
cmp
jns
and
jo
jnp
cmp
les
mov
pop
in
test
dec
add
pop
popf
loope
arpl
jecxz
mov
jp
jmp
jl
out
ds
cmpsl
loop
push
lcall
inc
pop
mov
mov
aad
jmp
push
push
mov
ret
sti
jae
add
pusha
clc
je
adcl
xor
jo
out
or
aam
jle
cmp
jo
sbb
ss
call
scas
movsb
sarl
or
nop
jg
and
loopne
sbb
cmp
or
jno
jnp
jle
sahf
jle
dec
cmp
out
adc
mov
dec
fdivr
icebp
inc
mov
and
jp
test
inc
clc
lcall
mov
xchg
movsb
sbb
leave
int
mov
dec
outsb
mov
xchg
out
mov
fnstenv
insb
pop
scas
es
loop
pop
mov
xchg
out
sbb
adc
xor
out
addr16
xchg
mov
cs
mov
outsb
outsl
shrb
imul
lods
mov
fidivl
int3
popf
outsb
cmp
sbb
jns
icebp
loop
push
and
mov
pop
sub
or
jle
mov
fwait
mov
pop
dec
cmp
add
dec
stc
outsb
mov
ss
pusha
add
lock
sbb
cli
and
aad
lret
icebp
fwait
ss
icebp
push
xor
jbe
rorl
mov
xchg
pushf
add
adcb
cmc
push
pop
jbe
and
sub
movl
data16
jns
inc
xor
in
mov
mov
push
xchg
icebp
sahf
inc
jne
fs
push
cld
xor
inc
inc
pop
out
fldcw
add
sbb
cli
ss
jecxz
cli
inc
jne
add
ja
clc
mov
ja
scas
xchg
call
jb
and
pop
out
mov
ljmp
dec
jp
mov
in
pop
cmpsb
in
subl
add
xor
add
loopne
pop
or
sbb
xchg
xor
popa
or
js
inc
jbe
lahf
shrl
or
movsb
mov
mov
sub
repnz
mov
lahf
inc
xchg
scas
andl
cmpsl
rcr
icebp
pop
movsl
xchg
imul
pop
mov
sbb
jbe
scas
sbb
lods
xchg
xor
out
lret
sbb
add
ss
jnp
icebp
or
and
mov
pop
aas
jae
repnz
xor
push
lods
inc
aas
mov
sbb
add
rol
dec
mov
sub
or
adc
je
pop
sti
xchg
insb
add
call
fwait
popa
imul
fdivr
aam
push
jbe
call
adc
adc
es
test
sbb
inc
hlt
xchg
orb
mov
jo
into
in
scas
jle
gs
orl
lods
lds
jno
inc
lret
imul
adc
and
adc
jl
jl
inc
xchg
cmp
push
imul
int
fsubl
jno
or
nop
push
stos
iret
fcomps
rcl
mov
mov
xor
sahf
cmp
sub
mov
js
test
imul
jge
cli
loop
popf
adc
fwait
call
jb
fisubs
stos
pop
push
mov
popa
sub
js
les
jmp
jo
cmpsl
or
xchg
and
push
adc
inc
mov
or
pop
adc
lods
push
mov
push
iret
es
insl
mov
test
adc
pop
pop
jnp
lds
xor
cltd
je
mov
dec
mov
leave
push
cmp
inc
lcall
jg
lcall
inc
pop
mov
or
mov
mov
lcall
fisubrl
ret
fidivrs
and
inc
xchg
cmp
int3
jg
jo
insl
xor
fwait
out
jg
jmp
fcompl
and
jnp
shrl
ret
insl
xor
add
adc
adc
dec
int3
inc
decb
push
scas
imul
mov
mov
daa
negb
sub
lods
cmp
jno
scas
sbb
in
push
loop
subl
mov
aaa
fistpll
cmc
sub
jno
jecxz
cltd
aas
in
adc
movsl
lods
mov
lret
faddl
subb
mov
push
fisubrs
pop
push
jnp
inc
test
xor
push
jecxz
lret
add
cltd
xor
int
sub
dec
push
out
call
repnz
pushf
rorb
cmp
je
loop
dec
in
inc
fimull
ljmp
gs
gs
cld
jg
cmp
insb
push
clc
out
fcomp
cmc
xchg
or
inc
jne
or
dec
adc
sbb
popa
inc
shr
or
pop
aas
sti
push
lock
imul
xchg
aad
rcr
xchg
ficomps
or
pop
inc
jl
into
xchg
and
sub
inc
xor
xchg
pop
insl
push
mov
mov
cmp
xor
or
insb
sub
sahf
cmp
pushf
aad
fbstp
stos
mov
insb
dec
lret
pusha
sub
ja
dec
pop
sub
mov
push
push
insb
inc
jo
cwtl
adc
jo
pop
testb
outsb
push
push
inc
mov
js
ss
insl
cli
mov
daa
and
popa
pop
sub
push
jae
iret
mov
ret
add
sti
pop
lcall
ss
push
stos
data16
popf
push
lret
xchg
xor
into
scas
aad
test
inc
in
lret
jne
pop
and
stos
std
and
dec
loopne
jmp
jl
pop
repz
lret
adc
movsb
sbbb
imul
movb
push
adc
mov
add
shrb
sbb
loope
pop
mov
enter
push
hlt
sbb
jnp
insb
in
push
rcrb
stos
mov
mov
xor
push
xchg
scas
cmp
xor
hlt
lods
pusha
imul
jp
pop
outsl
sub
inc
adc
ret
xchg
out
into
push
fistps
and
jg
aas
dec
lods
and
inc
mov
push
shll
lcall
jg
push
mov
cltd
jno
sub
mov
jbe
mov
inc
aam
hlt
jg
mov
xchg
jle
in
mov
sub
in
nop
inc
pusha
imul
imulb
pop
jge
push
fcomps
ds
addr16
adc
xchg
mov
dec
andl
push
pop
pop
pop
int3
scas
pop
jae
stos
inc
inc
sahf
lock
xor
dec
and
insl
adc
xchg
sub
mov
pop
dec
loope
lcall
add
jecxz
sub
pop
repnz
mov
cltd
cwtl
pop
mov
adc
mov
jo
mov
hlt
add
pop
pop
jns
sub
pushf
jnp
cmp
fmul
cld
movsb
push
xor
mov
xchg
mov
sbb
cwtl
lret
and
push
aad
rol
cmc
jne
mov
cmp
fiadds
xchg
sbbb
iret
mov
sub
aad
push
xchg
and
cltd
pop
mov
jno
repnz
xor
hlt
or
lcall
test
pop
sbb
fbstp
idivl
rcll
sub
mov
test
jmp
aas
pop
lods
mov
pop
out
mov
xchg
fsubs
shl
or
flds
nop
rcll
lcall
cwtl
jmp
mov
lahf
into
or
pop
fisttps
inc
ja
inc
sub
ljmp
out
aas
mov
repz
sbb
mov
xchg
push
fs
ficoml
lds
inc
arpl
pop
sub
sbb
sub
sbb
mov
movsl
pop
mov
int3
addr16
jnp
fwait
pop
lcall
push
pop
dec
test
adc
dec
es
push
mov
cmp
mov
pop
ficompl
cwtl
rol
dec
xchg
decb
fnstenv
pop
daa
mov
aaa
push
movsl
inc
cmp
mov
xor
or
cmp
stc
daa
in
popf
bound
imul
xchg
adc
jge
sar
fcomps
xchg
rclb
fsubl
inc
nop
addr16
shlb
cwtl
je
mov
call
das
pushf
pop
push
cmp
mov
idiv
cmc
xchg
in
std
test
clc
std
rcrb
dec
push
testb
pop
mov
adc
pushw
jne
sti
mov
or
in
lret
mov
shlb
movsl
test
mov
scas
mov
fsubs
popa
and
mov
adc
jge
sar
out
jl
and
or
sub
mov
inc
sbb
push
mov
add
lods
cwtl
mov
std
scas
sbb
stc
pushf
xchg
adc
mov
cltd
aaa
int
push
and
xor
sbb
lea
sbb
out
mov
cmpl
pop
mov
negb
cli
in
testl
insl
bound
xor
adc
mov
lret
stos
mov
dec
lock
dec
and
sbb
call
pop
pop
sbbb
cmpsb
repz
cld
movsl
and
inc
mov
add
adc
repz
sti
outsb
mov
paddq
stos
adc
adcb
std
mov
jmp
cs
in
pop
test
sbb
inc
scas
les
cld
aas
je
mov
cmpsl
mov
and
shr
flds
gs
xchg
loopne
mov
mov
scas
xor
loop
rorl
es
insb
mov
ds
in
imul
and
notb
cs
fidivs
shl
lock
js
dec
outsb
push
imul
pop
adc
jecxz
mov
icebp
sub
and
dec
lods
popf
adc
xchg
push
adc
xlat
call
adc
aad
mov
mov
or
mov
jne
xor
mov
insl
xor
sbb
push
stc
fdivl
out
repnz
mov
in
mov
pop
repz
sub
sub
xchg
xor
lret
cwtl
inc
mov
add
mov
daa
and
inc
jmp
mov
test
cltd
test
sub
bound
and
arpl
push
dec
jae
lods
iret
imul
fnstsw
rcll
imul
mov
dec
mov
out
sub
cmp
inc
stos
xorb
xchg
pushf
inc
sbb
in
lods
cwtl
cwtl
outsl
scas
addr16
test
push
imul
or
or
icebp
sti
in
sarb
xor
push
and
int3
in
popa
jl
insl
data16
mov
fcompl
int
into
mov
mov
push
movl
icebp
cmp
add
mov
je
sahf
or
insb
mov
dec
jl
mov
fistpl
ja
xchg
jo
and
jno
xchg
addr16
sub
mov
jp
mov
fsubrl
imul
xor
inc
inc
jb
fdivrs
lcall
mov
pusha
shrb
inc
shll
ljmp
inc
or
sarb
xor
scas
inc
fcoml
loop
xor
sarl
insb
bound
dec
pop
lods
pop
ret
xor
adc
lret
inc
jle
aad
lret
inc
icebp
stos
adc
jmp
mov
sbb
fs
dec
or
rorl
test
movsl
imul
jl
jae
outsl
cmp
or
jae
sub
out
pop
mov
mov
lret
aaa
es
mov
jecxz
pop
add
cli
sub
cld
test
xor
xchg
mov
or
mov
push
sti
sahf
loop
mov
imul
ljmp
inc
pop
mov
or
cltd
imul
push
jb
mov
mov
mov
mov
int
movsl
enter
xlat
or
je
cmp
mov
cmp
or
dec
and
stos
adc
sub
dec
enter
pushf
jge
or
inc
sub
adc
ja
out
push
cmp
jne
int3
xchg
frstor
mov
rolb
out
test
loop
xor
push
add
pop
leave
jmp
stc
fnstsw
shrl
test
xchg
gs
xchg
mov
or
adc
jno
push
out
cmpsl
pop
aaa
jnp
mov
push
rorb
lahf
inc
ja
inc
cmp
dec
int
mov
push
pop
xchg
and
dec
in
jno
mov
cmp
sub
outsb
jns
mov
loopne
pop
cmp
lcall
and
test
mov
xchg
push
and
sbbb
and
nop
xchg
outsb
int
arpl
bnd
sbb
push
mov
sub
cmpsb
or
xor
cmpsl
cld
inc
loope
leave
mov
or
push
jle
push
mov
divl
aam
push
jg
mov
stc
or
mov
daa
lds
or
es
inc
and
inc
mov
pop
call
sub
pop
inc
jecxz
mov
lcall
test
xor
push
out
sub
add
out
sub
cmp
sahf
dec
out
iret
add
scas
jecxz
arpl
sbb
xchg
cmpsl
cmpsb
or
cli
cmc
dec
call
les
jno
cmc
mov
xor
repz
xchg
jns
iret
sahf
mov
or
lcall
jle
shll
fnsave
shl
loopne
inc
fistpl
and
pop
pop
mov
push
fisttpl
shl
mov
mov
mov
xor
pop
stos
mov
and
push
sti
or
cltd
lret
push
jns
arpl
mov
dec
dec
and
sub
icebp
sub
pop
push
inc
and
call
lods
cltd
flds
xor
in
push
and
in
loop
mov
lds
in
out
bound
fstps
mov
repz
decb
in
pop
jns
sbb
xor
stc
pop
popf
adc
loop
in
aas
daa
leave
icebp
mov
mov
sbb
mov
jno
push
into
sysret
pop
inc
lds
jge
inc
sbb
ja
es
out
fisubs
ljmp
cld
shll
sub
mov
call
outsl
mov
iret
popa
lret
inc
pop
daa
xchg
adc
and
push
sbb
lret
in
xchg
lahf
rorl
fldl
mov
es
mov
dec
cmpl
adc
jg
xlat
popa
cmp
pushl
js
jne
movsb
lea
repz
rorb
sub
jns
int
cs
xlat
jg
cmpsb
sbb
xor
stos
mov
sub
sbb
mov
popa
fs
stc
sbb
mov
push
adc
fisttpl
inc
popf
push
jp
push
jne
rorl
scas
sarb
xchg
and
in
in
repz
scas
ret
adc
repnz
push
inc
addr16
jge
xor
ss
dec
lret
int
push
lds
mov
push
lret
divl
es
lret
test
mov
sub
cmp
scas
out
inc
ds
ret
aad
jnp
ds
pop
ret
sbb
inc
mov
mov
push
and
or
push
movsb
leave
cmp
xchg
sub
js
and
sahf
push
xchg
mov
ss
fs
lret
dec
cld
xchg
sub
mov
jp
inc
testb
lret
out
xchg
and
iret
add
and
pavgb
inc
in
inc
cwtl
jmp
mov
insb
pop
mov
fmuls
imul
lcall
sbbb
in
pop
sbb
lahf
xchg
imul
rclb
aad
mov
loope
in
jbe
enter
lahf
pop
adc
fwait
lds
jge
sbb
mov
sahf
jp
and
adc
push
adc
mov
mov
mov
inc
push
jne
repz
negl
outsb
lret
data16
pop
ds
cmp
mov
out
dec
jbe
xlat
aas
inc
in
pop
mov
mov
adc
push
cmp
jge
outsl
mov
es
add
or
dec
insb
mov
ret
cmp
rorb
aad
inc
pop
inc
loopw
dec
xchg
jg
inc
das
sub
mov
rorl
mov
xchg
shrb
movsl
mov
xor
movsb
js
test
in
mov
inc
dec
mov
shll
cli
in
mov
mov
loop
or
shrl
pop
adc
je
sbb
shlb
int
xlat
pop
mov
mov
lea
xor
out
hlt
adc
jbe
movl
into
dec
or
pop
add
push
sti
dec
lcall
inc
jnp
mov
decl
mov
jne
push
push
arpl
mov
push
xchg
mov
inc
aam
mov
push
popf
mov
jae
rorl
mov
xchg
and
or
aam
push
lret
cli
sbb
bound
das
dec
pop
cs
xlat
mov
sub
popa
xchg
add
add
inc
decl
push
std
lods
ret
out
pop
cmpsl
aaa
adc
and
adc
inc
ret
setne
mov
daa
xchg
inc
gs
movsl
push
lret
arpl
jmp
clc
mov
adc
scas
dec
int
gs
in
or
scas
mov
pop
test
bound
cmc
lock
xchg
xchg
pop
sbb
mov
clc
or
pop
cmp
add
dec
adc
sub
in
sbb
dec
sbb
adc
insl
fsubrs
bound
adc
push
call
std
mov
out
in
divb
sub
lret
call
sbb
adc
cmp
push
loop
mov
dec
push
es
push
stos
lock
cmpsb
test
sbb
sbb
fisttpll
decl
fs
mov
mov
into
icebp
jno
push
adc
xor
inc
andb
pop
lds
adc
push
inc
pop
rcrl
cli
and
jle
rcrl
inc
sbb
nop
enter
xchg
or
shl
mov
and
sahf
fdivrs
push
cmp
mov
xchg
sbb
jmp
mov
push
das
sub
mov
jo
sbb
inc
rcl
xor
shlb
loope
dec
ret
jge
dec
sub
jno
push
lock
push
aaa
mov
repz
lret
or
dec
cltd
cmpl
sbb
sahf
or
add
addl
adc
jns
les
insb
loope,pt
mov
mul
cltd
sar
dec
cmp
cli
pandn
mov
mov
dec
add
pminsw
aas
cltd
mov
lret
outsl
fs
repz
xor
jns
in
or
jns
pop
adc
mov
xorl
popa
adc
js
jle
jecxz
sarl
jecxz
fmull
movsb
sbb
or
cmp
out
ljmp
fiaddl
cmp
rcll
out
insb
das
shll
mov
test
daa
outsl
push
mov
je
mov
jmp
mov
jbe
xor
sbb
xchg
sbb
addb
push
rorl
add
iret
data16
mov
lods
jge
push
push
pop
in
xchg
xchg
cmp
cmp
out
xchg
and
out
lret
jae
cmp
xchg
rolb
jae
cmp
aad
add
icebp
mov
pusha
psllw
lret
lea
jle
nop
dec
mov
sub
shll
js
pop
xchg
rorl
mov
or
jl
cmpsb
mov
sbb
push
add
mov
ret
movsl
dec
out
mov
pop
mov
sbb
push
inc
jne
push
xchg
shrl
imul
xchg
cmp
or
add
pop
pop
mov
addr16
stos
jmp
movsl
decb
jp
lcall
jge
arpl
adc
mov
push
inc
jnp
adc
ret
push
in
in
repz
movsl
mov
push
inc
int3
jecxz
jns
cmc
jg
mov
sahf
adc
outsb
adc
push
or
movb
outsb
adc
and
ret
pop
ja
push
lds
jmp
add
dec
fs
xor
lahf
push
sbb
bnd
push
add
aas
adc
aad
cmpsl
jg
mov
nop
repz
sahf
fstps
mov
hlt
jne
insl
pushf
jle
rorl
loope
insb
mov
cmpsb
add
sbb
push
push
pop
jae
pop
xchg
mov
cltd
xor
je
div
xlat
aas
mov
frstor
cmp
enter
mov
ret
in
pop
cmpsl
adc
loope
scas
andl
dec
cmp
jbe
sahf
mov
xchg
mov
pop
test
daa
jl
and
mov
mov
sarl
pop
ficoml
cmp
rol
pushf
xchg
dec
dec
stos
and
or
mov
sbb
sbb
jp
rcll
sub
jo
outsl
mov
add
gs
jmp
ljmp
ds
rclb
dec
jbe
fstpl
xchg
test
push
sbb
pop
stc
mov
sbb
cmp
mov
test
sub
inc
pop
pop
cmpsb
gs
lock
xchg
lcall
loopne
dec
sbb
in
ror
add
adc
icebp
ljmp
pop
scas
dec
ja
stos
subb
pop
sub
adc
cmp
mov
cld
mov
ja
mov
lock
dec
loop
sbb
repz
push
fwait
and
cmpsl
js
dec
movsl
jne
lahf
int
cmpsl
je
and
pop
push
jnp
adc
aaa
mov
jle
xchg
mov
xchg
mov
and
test
leave
push
in
xor
mov
lock
loopne
sub
xchg
cmc
mov
or
lods
mov
sahf
mov
pop
add
cmpsl
inc
dec
push
xchg
dec
ret
testl
cmpsb
loope
filds
sub
dec
ss
sub
mov
sti
insl
pusha
dec
pop
out
sbb
sti
jp
les
std
or
fstl
cmpsb
ret
mov
pop
cs
mov
push
pop
scas
rcrb
or
sub
pop
sbb
call
ss
pop
lea
gs
hlt
jl
fstpl
lea
fbld
int
sbb
inc
insl
and
lcall
popf
inc
mov
jns
ljmp
jg
add
jae
pop
cwtl
movl
insl
jb
sub
gs
push
std
jge
mov
insl
loop
fidivrs
rcll
sub
push
add
adc
ret
cld
imul
mov
pop
cmpsl
dec
out
xchg
sub
ss
push
push
lret
lahf
sub
stos
dec
xor
aad
fsqrt
mov
iret
pop
into
test
xchg
test
repnz
das
arpl
and
cmpsl
push
lahf
mov
mov
lret
jecxz
xchg
and
mov
add
incl
add
loope
add
icebp
cmp
lret
imul
ss
mov
aam
stos
lea
icebp
aam
xchg
push
mov
inc
cmpsb
push
inc
jecxz
leave
movzbl
frstor
pop
into
in
sub
cmp
dec
stos
scas
cmp
sbb
mov
into
test
fcomi
in
and
mov
aaa
adc
lock
pop
mov
hlt
enter
fstpt
loope
or
xlat
xabort
imul
sbb
gs
fldt
cmp
test
inc
push
adc
mov
std
bound
outsb
adc
inc
push
xor
daa
mov
call
dec
jo
sbb
movsb
mov
mov
push
jb
lods
pop
frstor
clc
sahf
cmp
push
xchg
nop
jae
dec
fiadds
pop
mov
in
enter
push
fs
and
cs
xor
jae
cmp
jge
xchg
or
lret
repz
jl
mov
mov
icebp
jbe
push
lea
hlt
stc
in
fcomip
popa
mov
fldt
out
mov
pop
das
and
fisttps
aaa
jmp
repnz
push
dec
loopne
adc
adc
jecxz
xchg
test
filds
rcr
mov
and
dec
dec
and
jmp
or
xor
cmp
pop
adc
mov
stos
stos
adc
out
das
inc
cli
les
jbe
push
xchg
sbb
mov
addr16
es
daa
fnstcw
out
and
notb
adc
jge
jmp
or
fmuls
dec
lods
pop
fadds
out
mov
xchg
adc
cwtl
jle
xorl
add
mov
jp
cmp
lahf
ss
movsb
xchg
lds
mov
in
xchg
xor
fstps
sub
xor
outsl
lcall
sar
cli
xor
adc
hlt
in
scas
daa
jbe
or
pop
jle
fs
and
mov
sub
rcrb
ss
in
dec
ja
xorb
das
push
notl
inc
and
add
cmp
push
daa
pop
sbbl
es
jmp
mov
add
scas
outsb
xchg
jns
cli
imull
dec
test
mov
faddl
xor
xchg
insb
arpl
cmp
push
jns
in
call
xchg
pop
jp
add
mov
aas
dec
and
iret
fcmovnbe
sub
dec
adc
inc
sub
xchg
in
shll
xor
outsb
jmp
mov
nop
loopne
out
add
xchg
push
and
repz
mov
add
leave
fidivl
cmp
into
daa
mov
mov
scas
jo
lret
leave
in
mov
hlt
inc
sub
pop
sbb
daa
add
add
cltd
in
add
push
add
mov
pushf
xchg
scas
sbb
and
jmp
ja
rolb
inc
aad
call
fldcw
fstpl
xchg
test
es
test
ds
hlt
jge
mov
jo
sbbb
mov
push
rcrl
mov
pop
and
push
sti
cs
sahf
jnp
pop
mov
fnsave
jge
dec
mov
in
mov
ja
addl
pushf
loopne
push
lods
add
cmp
out
sub
inc
mov
in
push
shll
xchg
push
out
outsb
add
imul
je
cmp
mov
test
cmp
xchg
fs
call
mov
xchg
mov
sub
mov
js
js
adc
ret
pop
ret
and
cmc
inc
and
xchg
cmpsb
in
adc
xchg
mov
ret
inc
sti
dec
enter
push
mov
mov
mov
mov
shlb
loop
pop
jp
mov
add
mov
push
in
push
dec
mov
adc
sub
addr16
out
cwtl
ljmp
xchg
ret
das
out
add
sarl
jmp
or
add
fsubrs
push
push
fs
sub
fcoms
out
ss
cltd
dec
or
xlat
cwtl
lcall
dec
sub
pop
cli
xchg
mov
mov
jo
imul
rcr
repnz
test
push
iret
cld
inc
mov
adc
movsl
add
inc
adc
aad
pop
rorb
ret
mov
pusha
mov
lea
cmp
or
iret
fists
xor
push
jno
outsb
jmp
adc
sub
jmp
mov
stos
add
cmp
sbb
lea
or
pusha
cmc
mov
js
loope
sub
sti
aam
cmc
hlt
in
pop
cmc
adc
clc
pmaddwd
inc
adc
xchg
jl
shrl
mov
mov
xor
clc
int
xor
push
pop
push
push
pop
and
xchg
add
divl
mov
sub
inc
dec
push
imul
jae
les
pop
adc
and
shrl
insl
sbb
out
cmp
scas
and
aam
ficoms
ffreep
mov
cwtl
sub
mov
xchg
mov
stos
sbb
test
mov
or
fsubl
test
arpl
lea
xchg
mov
cmpsb
lods
cmp
imul
or
xchg
jne
in
dec
pushf
int3
or
sbb
daa
mov
imul
popf
fidivrs
pop
ljmp
lds
or
xchg
fcoml
test
and
repnz
ss
inc
pop
ret
lock
sub
lret
dec
adc
push
cmova
fstpt
sbb
or
mov
lret
mov
dec
sahf
inc
fisttps
in
pop
lcall
mov
adc
push
lcall
lds
sub
add
cmpsl
out
pop
mov
and
mov
cmp
pop
pop
rolb
aas
int3
pusha
fcmovu
clc
mov
ss
or
mov
jnp
lret
jb
mov
outsb
scas
shr
mov
scas
add
lods
inc
js
cwtl
les
lea
mov
loope
test
xchg
icebp
pop
lcall
pushf
sub
jb
xor
inc
inc
xchg
jno
orl
push
cmpsb
ficompl
rcr
pop
fldenv
std
push
aaa
mov
mov
add
ficomps
jne
push
adc
and
test
test
xor
and
pop
mov
ret
iret
xchg
scas
dec
les
pop
mov
dec
xor
jecxz
and
xchg
clc
jne
pusha
adcl
mov
imul
mov
push
icebp
popf
xor
jbe
add
hlt
jmp
push
icebp
push
test
xor
push
and
jmp
rolb
mov
dec
sub
gs
scas
inc
sub
xchg
or
dec
and
mov
aad
ror
std
sub
dec
les
mov
push
rcrl
cli
gs
jns
in
test
test
idivl
jmp
pop
pusha
shll
push
popf
sub
xor
jb
add
jle
hlt
mov
addl
xchg
ret
pop
mov
jmp
sbb
shll
std
mov
pop
rcrb
xchg
aad
int3
pop
xor
dec
add
cmp
mov
out
cmp
int
sub
adc
mov
pop
jge
rorl
mov
push
pop
sub
dec
loope
cmp
xchg
sub
int3
sub
popf
dec
bnd
xor
xor
push
pop
mov
mov
pop
inc
js
adcb
in
pop
enter
xor
clc
jecxz
out
mov
add
sti
test
mov
out
in
adc
cmp
push
push
inc
lds
xchg
ljmp
mov
roll
lahf
xor
push
into
cwtd
repnz
mov
jl
movsb
fidivrs
into
inc
and
cmp
push
push
shll
or
jae
cmp
add
out
xor
fistpl
imul
fsubs
enter
lret
adc
push
jbe
stos
mov
jne
jne
aad
push
aam
cmc
and
aaa
pop
mov
shlb
add
sbb
inc
cli
int
pop
fbstp
nop
fcomps
das
sub
and
cli
imul
sub
aad
and
addl
shrl
hlt
pop
xor
divb
cmp
ret
and
dec
jge
pop
daa
gs
lahf
or
ds
icebp
adc
nop
cmpl
jnp
xor
cld
jge
jle
pop
leave
xor
mov
cmp
dec
lret
arpl
adcb
mov
in
push
xchg
leave
jno
flds
mov
call
aam
dec
xor
mov
add
divps
push
mov
fsubs
jmp
sub
rol
les
fs
mov
mov
adc
xor
shl
sub
adc
outsb
arpl
jno
cmp
xorb
test
gs
push
xlat
xlat
push
pusha
mov
cltd
scas
pop
inc
fstpt
movsb
incl
cmp
ret
add
xor
adc
fiaddl
jne
aaa
and
mov
jb
imul
dec
roll
mov
xor
sbb
lahf
xor
daa
or
dec
fs
mov
mov
jg
jbe
and
pop
es
jbe
jle
outsb
pop
fwait
xchg
loopne
test
into
mov
scas
or
or
rclb
fidivs
adc
jmp
ret
cli
adc
xor
xor
mov
cli
mov
cmpsl
cld
test
outsl
pop
fsubs
add
jne
ret
mov
ja
hlt
or
add
or
cmpsb
imul
rcrl
aaa
xchg
insl
jne
cmovle
aad
and
fcoml
mov
shrl
pushf
test
pop
loop
sbb
cwtl
fdivrl
jnp
mov
ror
fstp
mov
sahf
outsb
jmp
jno
rcrl
dec
jmp
pushf
les
cmpsl
sub
aam
sub
sar
test
aas
test
xor
inc
lahf
mov
ror
add
jl
or
call
cmc
test
addr16
stos
loope
scas
cmp
insb
pop
push
stos
fcmovbe
ss
push
mov
divb
sbb
loopne
mov
hlt
pop
push
in
xchg
jmp
rcrl
ljmp
movsb
or
cs
pushf
push
pop
inc
jns
xchg
clc
and
test
rcl
adc
mov
xchg
out
add
pop
and
sub
jnp
lods
sbb
movsb
mov
fstpt
dec
cmpsl
mov
loop
pop
in
stos
in
out
loop
or
lds
shrl
dec
pop
and
out
inc
loop
jbe
fnstcw
push
mov
adcl
push
test
icebp
jmp
cmp
xchg
or
xchg
mov
jecxz
mov
xor
test
sbb
mov
cmc
stos
lods
fisubrs
mov
push
out
lahf
push
dec
jg
andb
cmp
dec
dec
jl
jne
mov
or
push
lret
repz
fisubl
mull
int3
sub
lcall
pop
jmp
movsl
mov
inc
or
incl
add
outsb
ja
jmp
cmp
and
xor
hlt
and
xor
jbe
xorl
shll
cmp
ret
test
or
sub
xchg
push
test
xlat
dec
adc
out
test
push
adc
lret
imul
les
dec
in
add
push
jnp
jl
stos
jecxz
mov
add
sub
andl
and
jmp
inc
lahf
adc
push
lahf
ficoml
mov
roll
xchg
adc
jns
mov
mov
test
imul
xor
cmpsb
imul
jo
stos
jp
mov
pop
and
sbb
repz
scas
insl
push
cli
or
fdivrl
addb
sbb
popa
sbb
xchg
fmull
and
adc
xor
dec
mov
pop
mov
mov
mov
fld
dec
inc
xchg
jb
jb
add
and
push
ror
inc
push
loopne
cmp
mov
das
push
mov
cwtl
adc
pop
add
scas
cmp
xor
mov
dec
xchg
xlat
lock
cwtl
mov
insb
sub
faddl
add
in
pusha
push
mov
orl
pop
imul
mov
lret
lahf
pop
aas
sbb
sub
dec
push
sub
or
or
push
dec
push
push
hlt
ficompl
mov
mov
lret
mov
jmp
cmp
and
mov
fidivl
in
xchg
adc
fcmovb
out
inc
sub
jnp
inc
pushf
lcall
mov
cli
nop
xor
out
push
inc
jns
jbe
lea
fistpl
testl
fsub
out
fldenv
popf
repz
push
adc
pop
popa
pop
je
cmc
pop
js
mov
iret
mov
pop
xchg
mov
mov
dec
dec
jo
xchg
rol
sbb
xchg
imul
cmpl
jle
sti
fimull
ja
jbe
subl
mov
push
outsb
and
pop
jle
and
cmp
bound
loop
out
add
inc
cmp
or
mov
pop
outsl
mov
jb
xor
and
sub
icebp
push
leave
dec
adc
cmpb
xor
push
add
jns
cmpsl
dec
mov
xor
loope
repnz
fstp
lret
es
sbb
es
in
xchg
enter
xchg
stos
notl
enter
lea
xorl
repz
jae
xlat
test
stc
sbb
pop
lret
cmp
fistpll
mov
rclb
ret
std
cld
notl
das
pop
xchg
shll
cmp
aam
xchg
lahf
repz
mov
in
repz
loop
sub
inc
out
sub
sub
inc
cld
aaa
je
xorl
mov
lret
icebp
ljmp
xor
fiaddl
mov
xchg
notb
cmp
push
push
pop
je
lods
test
inc
scas
mov
or
or
jo
mov
adc
cmpsb
or
dec
bound
jg
lahf
sbbb
popl
cmp
mov
call
sti
xor
jnp
pop
xor
adc
fildll
sub
iret
lret
adc
bound
xor
jle
lcall
lret
lret
pop
inc
mov
imul
rcrl
sbb
addr16
xor
insl
adc
je
push
test
sbb
push
scas
dec
icebp
and
xchg
int3
dec
dec
fstpt
mov
out
movsl
xor
ficompl
dec
cmp
sarl
push
clc
xlat
sbb
mov
xchg
sub
imulb
rcr
cmp
mov
and
jmp
xchg
and
dec
cmc
es
je
imul
sahf
xor
lock
ret
xor
lea
movl
sbb
mov
xchg
ror
mov
push
mov
bound
int3
popa
pop
mov
add
mov
loopne
jg
or
dec
aam
gs
xchg
loopne
loopne
jge
xor
jns
cltd
dec
ja
stc
jnp
push
push
push
push
scas
or
xchg
std
daa
sbb
gs
in
movsl
or
in
in
push
rolb
clc
out
or
idivl
pushf
jecxz
test
xor
data16
push
ss
jnp
clc
adc
mov
icebp
in
outsl
jle
cmp
dec
dec
bound
inc
mov
enter
int
shll
adc
lea
lahf
pusha
xor
ds
sbb
cld
mov
scas
insb
or
sbb
in
and
test
fidivrs
call
bound
and
aas
orb
enter
pop
into
or
pop
fwait
mov
mov
movsb
cmpsb
das
popf
pop
push
repz
mov
pop
sub
push
dec
lret
loopne
pxor
xchg
mov
jg
ds
pop
std
add
xor
pop
add
cltd
xor
lahf
mov
pop
and
out
insb
fbld
add
sarb
out
fdivl
fnsave
or
daa
inc
cmc
jb
cmp
lods
inc
xlat
pop
in
test
pop
push
sbb
imul
adc
dec
enter
clc
mov
cli
int3
dec
dec
arpl
xchg
lret
rolb
je
push
repnz
test
mov
lret
into
lcall
sbb
mov
cmp
pop
or
mov
outsb
mov
xor
movsb
std
inc
pop
xlat
jns
loop
ljmp
sbb
adc
jo
sub
fists
mov
mov
xchg
pop
push
sbbb
dec
sbbl
add
idiv
jnp
sbb
cmp
aaa
icebp
cmpb
push
push
lea
loop
jecxz,pt
imul
jbe
xor
push
or
jg
out
mov
repz
jl
loopne
dec
mov
ja
add
insl
leave
outsl
enter
stos
jne
iret
in
les
mov
jg
mov
test
stc
lock
mov
adc
push
cmp
push
or
dec
repnz
aam
lret
and
testb
push
in
and
adc
inc
cltd
cltd
mov
and
sahf
out
pop
and
sbb
test
xchg
inc
inc
stos
inc
je
mov
mov
jns
dec
ss
in
bound
mov
jnp
fildll
ja
dec
inc
cld
and
fsubp
add
inc
flds
mov
popf
mov
jg
mov
shrl
subb
ss
sub
sarb
sahf
mov
hlt
stc
jle
dec
xor
adc
jb
pop
inc
or
lret
pop
aad
jbe
js
fldt
mov
add
fwait
jmp
dec
daa
sub
or
dec
xchg
mov
ret
enter
lcall
and
in
cmp
test
xchg
testb
push
and
pop
and
push
xchg
shl
cmp
pop
add
cs
or
pop
out
add
imul
div
pop
int3
mov
dec
cmp
mov
dec
loope
in
pop
mov
mov
jmp
arpl
es
shll
sub
fs
daa
mov
dec
jg
lret
insb
jno
jle
dec
xchg
sbb
sub
mov
icebp
mov
ret
push
imul
pop
xchg
cli
and
lcall
sbb
outsb
stos
lds
mov
das
dec
cmpsb
push
orb
into
mull
pop
incb
xchg
push
icebp
ds
jmp
sbb
pop
jbe
pop
adc
cmc
movsl
fdivrs
andl
jae
adc
icebp
cmpsl
sub
bnd
aad
dec
pop
push
jle
or
push
in
int3
shl
rorl
xchg
lret
mov
sub
test
mov
push
and
xor
iret
dec
and
dec
cmc
das
std
lods
sbb
mov
pop
pop
push
xchg
es
cmc
push
arpl
adc
xchg
outsb
push
movzbl
rorl
jg
lret
and
fdivs
lcall
pushf
and
inc
jmp
pop
sub
int
movsb
outsw
xchg
fwait
shlb
pop
mov
call
sar
push
jne
push
jle
jae
bound
dec
push
pop
pop
push
xchg
xchg
mov
js
pop
popa
sti
xchg
pop
pop
fimuls
fisttpl
jae
fsubrs
cmp
rorl
or
mov
adc
xchg
pop
push
int
lret
cld
sahf
test
or
or
fadds
cmp
aam
fwait
hlt
jns
cmp
and
sub
pop
inc
mov
jns
lock
push
or
test
and
aas
dec
idivl
adc
jbe
inc
xor
repnz
clc
sbb
jmp
mov
loop
push
sbb
sahf
mov
jg
adc
inc
dec
ss
xor
xchg
es
mov
push
mov
or
fildl
insb
jmp
and
inc
aaa
lcall
sub
testb
scas
jns
jp
in
xchg
xchg
pop
pushf
fsubrl
mov
negb
test
addr16
dec
addr16
jle
sbb
std
rcrl
or
dec
add
sbb
xchg
pop
or
or
add
lock
loope
sti
clc
adc
mov
imul
ja
mov
cs
sub
stos
shll
test
fnstcw
lods
or
ss
xor
cli
sbb
pop
push
cmpsb
xor
xor
xor
mov
and
mov
test
jbe
pop
sbb
mov
negl
lcall
lret
push
adc
mov
iret
lods
subb
mov
mov
jmp
pop
sub
mov
leave
inc
and
jg
ror
rcrl
jo
gs
les
inc
push
fnsave
ret
not
sahf
in
inc
xor
push
int3
out
pop
inc
mov
cmp
inc
shrb
loop
repnz
push
jge
ret
pop
xor
scas
popf
in
ss
sub
jb
mov
mov
add
cld
aam
and
pop
inc
das
inc
push
mov
aam
cmp
es
out
daa
test
pop
pop
repz
and
inc
xchg
or
pop
cwtl
out
or
icebp
sub
mov
divl
sub
cmp
ljmp
dec
or
insb
adc
aad
pop
aad
mov
imul
and
cmp
fcom
and
sub
into
xchg
xorb
sub
pop
rcrl
movsl
cwtl
or
pop
stos
pop
repz
xchg
mov
movsb
in
xlat
adc
mov
xorb
stos
cmpsl
cs
fisubrs
mov
or
inc
jns
push
cmpl
jp
sbb
notb
xor
add
test
jmp
sti
int
mov
jmp
repz
push
inc
mov
cld
pop
rcl
xchg
or
mov
mov
rcrl
test
aad
imul
push
push
mov
out
cmpsl
sub
insb
push
push
xchg
lods
push
iret
pop
and
dec
bound
or
ffree
xchg
mov
xchg
sbb
mov
mov
in
adc
sub
aas
js
bound
sub
outsb
jno
popa
cld
imul
sbb
jne
or
in
addb
sbb
cltd
push
out
xor
pop
dec
sub
lcall
cmp
fldenv
insl
mov
or
jp
insb
arpl
mov
pop
enter
dec
jb
pop
add
jecxz
mov
add
pop
sar
adc
sbb
stos
int3
adc
jae
xor
outsb
nop
repz
push
js
xlat
addr16
pop
pop
cmp
pop
inc
push
aam
addb
cmp
inc
dec
jne
xor
xchg
std
imul
cmc
pop
outsl
adc
out
xor
sub
into
lock
push
fbld
push
xchg
mov
inc
in
sarb
es
push
roll
in
pop
inc
xlat
fcmovu
movsl
jb
jg
cs
mov
icebp
inc
push
test
ljmp
mov
rorb
rolb
xchg
orb
lcall
xchg
inc
jae
fcmovbe
pusha
jae
ficoms
pop
pop
int
cmp
lcall
stos
push
jb
dec
lods
loope
gs
mov
dec
mov
imul
out
sub
xor
daa
stos
sbb
fcmovnu
in
insl
and
push
int3
xchg
mov
aas
clc
inc
push
clc
mov
xchg
std
aas
add
pop
dec
js
mov
xor
sub
pushf
and
lcall
adc
mov
jnp
or
fistpll
and
pushf
mov
mov
ss
or
add
push
add
ss
je
out
mov
jnp
mov
cmp
push
inc
cmpsl
jbe
push
cmp
insl
rol
push
in
dec
pop
mov
shlb
dec
test
repnz
mov
pop
pop
xchg
push
fnstsw
xlat
push
jb
test
xchg
int
std
push
push
xchg
or
sub
sub
or
mov
test
jge
mov
or
cwtl
adc
jbe
fs
cli
cmp
jp
or
out
jp
testl
stc
js
or
push
sarl
inc
cwtl
or
xor
pop
inc
mov
xchg
cmc
ja
xchg
cmc
test
sub
lods
push
fs
call
scas
or
or
or
lods
loopne
call
sbb
loop
cmc
aad
imul
enter
in
pop
dec
outsl
xchg
jnp
aam
lret
mov
aas
push
inc
adcl
inc
stc
jo
sbbl
jbe
int3
jo
testl
test
dec
fnstenv
pushf
and
fadds
fsubr
jl
popf
mov
mov
dec
push
hlt
cwtl
mov
rcl
out
cmp
add
sbb
sbb
fadds
and
pop
popf
ss
or
ret
cmp
aam
gs
es
mov
jp
js
lods
out
inc
lret
fwait
aaa
mov
adc
mov
push
jmp
cmp
sarl
sarb
xor
adc
mov
lods
cmpsb
out
rcll
mov
push
pop
cld
mov
push
outsl
mov
pop
cmp
or
xor
sarb
jnp
cs
dec
data16
xor
jne
push
jp
mov
pop
ret
movsb
std
das
sbb
and
xlat
add
mov
pop
out
mov
jbe
in
ret
or
stc
aam
dec
loope
pushf
dec
incl
cwtl
ljmp
jmp
out
xchg
jge
incb
cmp
push
ds
shlb
mov
mov
xchg
xchg
adcb
sub
jae
int3
leave
fiaddl
jb
adc
loopne
ret
lods
pop
inc
pop
jne
cmp
pop
mov
sub
push
xor
jp
and
lcall
fs
bnd
scas
cmp
shrb
inc
inc
fwait
std
xchg
nop
nop
adc
dec
hlt
mov
mov
xor
pushf
test
lcall
adc
xor
sbb
adc
bound
inc
call
push
or
cmpsb
xorl
mov
or
scas
gs
loopne
inc
inc
test
test
xchg
gs
sarl
xor
loope
cltd
mov
lods
daa
add
sbb
insb
adc
sahf
imul
push
lds
adc
mov
or
push
inc
scas
iret
push
addr16
push
outsl
jno
outsl
pusha
sahf
nop
xchg
lahf
ljmp
xor
xor
hlt
iret
mov
dec
adcb
inc
dec
cmpsl
ljmp
inc
iret
popf
gs
mov
jp
mov
pop
cmpsl
rclb
mov
btc
or
xchg
add
scas
lret
mov
std
sbb
sub
mov
add
push
shrd
test
les
mov
sbb
xor
lret
xchg
pop
sbb
pop
out
xchg
data16
sbb
lret
pop
movsb
jae
push
fdivr
or
sbb
gs
xchg
jnp
mov
subl
mov
push
je
push
or
cmc
sti
and
out
cmp
pop
pop
pushl
xor
xchg
add
gs
jg
idiv
test
movsl
scas
outsl
jp
mov
cmp
mov
jg
mov
pop
cmp
repz
out
adc
push
pop
imul
jb
es
out
and
pop
adc
push
lcall
mov
add
into
sub
jb
test
lret
in
stos
imul
mov
imul
mov
sti
pop
test
orl
hlt
insb
mov
sub
sub
fdiv
sbb
ror
movsb
loopne
mov
mov
mov
push
pop
push
aas
jbe
enter
mov
mov
and
mov
fcmovnu
pop
sub
cs
jo
aaa
mov
lret
nop
mov
dec
sarb
add
test
jb
jbe
enter
dec
push
ficoms
pop
movsl
popf
pop
enter
sbb
scas
mov
jmp
jno
push
push
in
cmp
fstpl
pop
xor
fdivl
pop
fnstsw
lock
push
rcrl
jne
cmp
xchg
int3
ds
dec
mov
jo,pn
aas
popa
sahf
xor
cltd
xor
inc
je
mov
loope
pop
xor
push
add
aad
pop
mov
fldt
sub
adc
xchg
dec
dec
call
push
mov
jns
icebp
call
push
xchg
mov
repnz
lret
push
stos
jmp
jecxz
popf
sbb
sar
jmp
or
sbb
push
push
data16
mov
and
add
mov
inc
xor
aas
in
mov
fists
push
into
ljmp
cltd
ja
data16
and
cld
pop
dec
or
out
xchg
jl
lret
les
jp
clc
xlat
es
xor
push
aas
dec
fsubs
mov
dec
iret
je
or
and
js
scas
pop
mov
adc
inc
aaa
dec
mov
lret
sbb
int3
pop
jno
add
or
jns
mov
loope
ds
fidivrs
cmpsl
sbb
add
jb
mov
xor
jl
fldl
add
xchg
addl
mov
pop
enter
lods
adc
sarb
add
clc
repz
cli
imul
cmpsl
pusha
pmaxsw
icebp
mov
in
and
daa
mov
mov
jecxz
test
sub
dec
imull
aaa
out
repz
std
das
xchg
and
sarl
ret
into
cmpsb
xchg
cli
mov
cmp
push
jb
repz
dec
cmp
xlat
lods
bound
fwait
inc
pop
or
aam
xor
adc
adc
in
adc
dec
popf
rol
cmp
xchg
jno
push
xor
fisubs
pop
cmpsl
adc
fstps
lock
cmpsl
cld
out
int
or
nop
push
or
aaa
ja
mov
inc
pop
fists
xor
jle
mov
and
pop
mov
xor
lcall
lods
xor
lcall
fdivl
push
in
enter
xorb
cmp
jp
out
in
popa
shlb
xor
xchg
aas
xchg
dec
cli
jno
cltd
and
hlt
icebp
add
xchg
jl
sub
lods
aaa
adc
dec
popa
mov
rcrl
push
loopne
popa
arpl
fadds
addr16
adc
xchg
dec
loope
push
pop
js
cmp
mov
in
jmp
mov
xchg
adc
jns
out
in
cmp
push
xchg
es
cmp
or
ja
mov
or
xor
bound
imul
lcall
scas
test
xor
test
jl
mov
xchg
loopw
pop
shrb
xchg
inc
mov
ljmp
push
mov
and
ljmp
jno
aam
jmp
out
mov
outsb
xchg
test
shlb
sub
lret
je
pop
cs
xor
ficomps
lods
adc
adc
arpl
insb
pusha
arpl
push
stos
incl
test
int3
sti
sbb
push
ficoml
adc
cwtl
sub
inc
mov
fs
lods
in
jl
xor
push
push
pushf
les
push
es
aam
repnz
mov
dec
scas
sbb
xor
cltd
sub
int3
pop
jmp
lods
jne,pt
sub
push
jbe
popa
sbb
push
arpl
mov
jl
cmp
jp
lds
in
sbb
popa
inc
sbb
outsb
jp
lcall
sbb
mov
scas
xchg
mov
inc
adc
cmp
out
cmp
and
inc
dec
fcompl
mov
std
cmpl
lret
lret
popf
call
sub
sahf
inc
arpl
insl
hlt
fsubrs
insb
add
pop
scas
sub
push
lret
xor
push
xchg
push
or
cmpsl
addr16
and
outsl
and
mov
dec
xchg
movaps
lret
push
in
icebp
jg
or
lds
jg
ss
lret
and
add
sub
cmp
cwtl
pop
jns
xor
push
aaa
out
rclb
sub
ja
xor
mov
mov
or
lea
shll
mov
inc
cmp
mov
fsts
mov
pop
cmpsb
lret
jbe
dec
fisttps
dec
xchg
scas
dec
pop
addr16
mov
mov
or
mov
jp
cltd
push
mov
cmp
adc
jne
loop
inc
loopne
out
or
xchg
inc
pop
jae
push
sub
lret
mov
cmp
gs
popf
cmpb
xor
xchg
lret
test
cmpsb
cs
mov
mov
adc
xchg
aaa
fwait
pop
fsts
mov
and
loopne
sub
loopne
lahf
lods
inc
push
mov
dec
cmp
aad
add
cld
cld
xchg
mov
mov
mov
jno
push
stc
push
sbb
shlb
push
inc
fistl
insb
ret
mov
cld
aam
xchg
pushf
inc
or
jns
sbb
shll
fldl
pusha
loop
dec
add
dec
adc
xchg
imul
xchg
lcall
or
jbe
push
iret
in
js
ret
nop
ret
rorb
pop
ret
dec
pop
aad
lret
in
andl
mov
push
repz
mov
repnz
pop
mov
jae
subb
lock
sub
dec
insl
mov
test
cmp
xor
pop
push
cmp
mov
push
xchg
push
nop
int3
inc
movsl
dec
mov
adc
pop
insl
ds
out
scas
pop
pop
push
inc
ds
movsb
mov
and
sbb
adc
sub
in
enter
add
push
and
cld
push
cmp
enter
jbe
cmp
pop
and
pop
lds
mov
scas
xor
push
mov
jge
test
repnz
incb
or
das
pop
stos
xor
xchg
ficompl
loope
pop
movsl
mov
inc
insb
test
subb
mov
dec
jno
add
test
mov
fiaddl
dec
nop
mov
sar
lahf
cmp
inc
inc
ja
push
mov
mov
cs
adc
cmpl
daa
les
mov
mov
stos
lock
nop
sti
or
sbb
aaa
or
fidivs
call
xor
inc
cmp
mov
add
rorl
test
fistl
xor
popa
ret
push
jb
jae
aad
addr16
je
pop
sub
ficoms
add
repz
sbb
sub
xchg
or
lret
scas
pop
or
pop
inc
popa
and
adc
add
daa
push
popf
mov
jge
or
sub
cmp
or
andb
into
mov
add
xchg
stos
cmp
stos
mov
jb
int
or
pop
add
push
jmp
mov
jno,pt
add
cmp
fimull
mov
jge
out
and
push
xchg
subb
jne
push
repz
mov
ficomps
mov
fs
push
xchg
jne
mov
test
pop
icebp
xchg
into
call
cmp
and
add
ret
data16
cmpps
idivl
sbb
je
sbb
stc
mov
cmpsb
mov
add
pop
xlat
push
push
stc
ljmp
inc
data16
jne
adc
in
insb
imul
xchg
inc
rcr
pop
int3
filds
cmpsl
cmp
mov
xchg
pop
mov
cmp
mov
jns
sarl
ljmp
cmpsl
sub
pusha
dec
push
repnz
pop
outsb
mov
add
push
mov
cmp
sti
cld
inc
cs
lods
push
psubusb
inc
adc
dec
push
and
bound
pusha
mov
fidivrs
pop
fwait
aaa
dec
pop
push
iret
adc
xor
fstps
insl
idivl
subl
jge
push
xchg
scas
sarb
js
cli
adcl
xchg
dec
jns
sbb
mov
sub
pop
sub
ljmp
setns
cmp
es
jge
call
lods
push
pop
inc
adc
mov
test
xor
loop
frstor
daa
inc
pop
adc
lock
jle
jnp
fisubrl
inc
mov
xchg
xchg
cwtl
and
enter
lods
push
shr
add
mov
inc
cmp
dec
cmpsb
dec
aam
push
shr
out
test
popf
xchg
repnz
clc
mov
cmpsb
cs
mov
xor
rorb
inc
inc
dec
scas
loop
xchg
xchg
sub
xchg
nop
adc
pop
ja
xchg
bound
fsubrp
lock
lret
mov
mov
jmp
hlt
outsl
xor
in
shl
fsubrl
or
mov
and
popf
mov
inc
cli
mov
jne
add
cmp
xchg
inc
enter
pop
sahf
out
adc
push
mov
addb
js
inc
nop
pop
cmc
daa
push
pop
les
adc
lcall
pop
ds
test
inc
mov
xor
inc
xchg
shrb
sbb
into
lds
stc
cmp
iret
xchg
mov
dec
sub
push
and
and
test
add
gs
imull
jp
rorb
and
lret
out
add
nop
xchg
imul
fcoms
in
iret
fdivl
rclb
int
mov
pusha
cmp
and
lcall
inc
imul
loopne
push
outsb
or
nop
stc
lahf
push
sbb
cmp
ficomps
cmpsb
inc
and
cltd
mov
or
push
cmpsb
add
and
lea
clc
pop
xchg
push
stos
add
mov
xchg
add
push
popa
xor
xchg
dec
les
add
scas
mov
addr16
enter
andl
jg
mov
jnp
out
or
aad
scas
dec
sti
pop
xchg
xor
xor
out
adc
add
lock
jno
iret
out
call
or
adc
xchg
imul
loopne
lahf
push
sub
cmp
sub
pop
mov
pop
cltd
enter
inc
push
vpcomub
push
dec
int
call
xchg
sti
sbb
testl
stos
xor
sbb
loop
hlt
push
sbb
jmp
push
fsubl
inc
dec
ret
xor
push
cwtl
xor
pop
sub
addb
sti
push
decl
add
loop
fs
adc
jnp
mov
xor
test
insl
xchg
pop
fdivs
les
push
mov
movsl
jns
sbb
sub
loop
daa
loopne
das
push
test
cmp
mov
add
lcall
or
roll
mov
xchg
jmp
pop
outsl
add
lods
jb
in
das
mov
sarl
push
dec
daa
sete
adc
mov
cmp
or
enter
cmp
xlat
adc
cmp
ret
es
jns
loope
xor
test
inc
jle
lret
imul
jbe
xor
dec
cmpl
or
jns
jle
add
sub
loop
mov
mov
mov
bound
jb
pushf
add
fisttpl
jmp
outsb
xor
xor
pop
mov
cld
inc
cmpsb
push
lret
xor
aaa
cmp
cltd
imul
sub
cmpb
lods
es
mov
shr
lahf
mov
sub
jl
test
push
jb
inc
pop
push
insl
rcrl
movsl
jmp
insb
loopne
add
in
jle
mov
cmp
lea
aaa
mov
or
das
mov
fisttpll
pop
lret
mov
jl
jns
jae
xchg
fcmovu
lds
stc
das
and
nop
lds
mov
sub
scas
push
push
jne
push
in
shll
in
out
jle
fstpl
jno
pop
lods
aad
push
add
iret
ficomps
movsl
aad
addr16
mov
mov
sub
mov
fs
jecxz
lea
xchg
cmp
insl
mov
xchg
and
cmpsb
jno
push
mov
fsts
inc
out
push
sbb
push
mov
jl
mov
adc
fs
out
and
stc
mov
in
push
scas
fistl
fisubrs
xchg
sbb
push
jp
jno
cmp
xor
rcll
inc
cmp
add
inc
jo
mov
arpl
jge
testb
pop
jae
adc
cmc
enter
lcall
cwtl
adc
stc
xchg
mov
hlt
adc
inc
mov
inc
sbb
scas
inc
add
in
cmp
and
jbe
mov
jmp
shrl
push
mov
stos
daa
fcoms
repnz
sbb
dec
add
addr16
inc
xor
fistpll
decb
fldenv
test
adc
int3
adc
xchg
dec
dec
xor
fwait
cmpsl
aam
mov
mov
dec
xor
jns
sub
andl
popa
adc
cmp
daa
sbb
cwtl
outsb
inc
and
sbb
mov
push
cli
xchg
lahf
into
mov
lods
mov
into
cmp
xor
cs
push
sahf
in
or
mov
js
push
sti
push
test
or
test
mov
loopne
les
add
xorl
mulb
sbb
lcall
ss
xor
or
or
mov
xchg
dec
fsts
xchg
mov
out
ret
pop
imul
add
inc
mov
mov
enter
or
push
data16
pushf
mulb
and
jo
xor
stos
sub
shll
idivb
mov
cld
xchg
movsl
jb
imul
pop
push
rcll
fsts
test
mov
popa
jo
push
push
imul
inc
adc
imul
add
or
or
pop
pop
and
je
xchg
popa
bound
pop
arpl
mov
pop
mov
xor
ret
dec
inc
sbbb
popf
sbb
dec
and
cld
dec
nop
cltd
lods
iret
es
pop
xchg
fsubr
fidivrl
lea
aam
push
xchg
add
jne
pop
repz
mov
dec
in
sahf
mov
sub
int3
stc
add
cmp
and
in
jo
out
jbe
fsubl
out
push
and
cmp
mov
adcb
cli
fstps
in
or
push
dec
mov
out
push
xchg
jmp
fnstcw
or
stc
adc
lods
movsb
std
fwait
ds
roll
or
popa
xor
mov
ljmp
sahf
negb
out
inc
in
scas
in
sbb
ds
push
imul
test
fucomi
and
mov
out
pop
imul
pop
iret
mov
test
in
jle
cli
dec
and
mov
rcrl
mov
mov
adc
daa
scas
push
cmp
add
adc
add
ret
cmp
push
rorb
pop
mov
test
mov
inc
adc
push
jb
mov
pop
imul
push
jae
xchg
fildl
hlt
push
jmp
jmp
test
mov
test
push
push
sub
and
aaa
das
and
pop
lret
ficoms
dec
stos
jl
iret
xor
lock
cmp
sub
mov
shll
cmc
mov
cli
dec
mov
outsl
mov
jns
fildl
insb
xchg
adc
fistpl
xlat
sbb
pop
dec
pop
out
xchg
or
push
dec
jae
add
push
lcall
sub
push
fstl
dec
es
icebp
mov
mov
or
int3
jp
or
ja
cmp
fistpl
ss
add
mov
cli
movsl
iret
mov
movsb
pop
cmpsl
fxch
pushf
loopne
mov
xchg
add
lret
divl
movsb
pop
push
lret
mov
pop
lahf
inc
xor
cmp
or
cli
xchg
sbb
sahf
rcrl
push
push
sub
jae
fimuls
icebp
imul
insl
int
in
lcall
arpl
pop
jns
stos
stos
inc
outsb
push
ret
cmc
fcomps
xchg
fisubrs
adc
int
mov
cmp
inc
repz
cmp
lcall
mov
cmpsl
xor
cld
int
aad
sbb
lea
jmp
jo
test
out
lret
aam
imull
mov
ficompl
jp
push
repnz
xchg
loop
lods
pusha
dec
addr16
pop
xchg
addr16
js
and
dec
cmp
jb
push
pop
sub
xor
add
pushf
sub
je
pop
and
jae
mov
sub
lea
fs
add
ret
xchg
xchg
std
and
js
mov
inc
xchg
push
xlat
stos
sbb
lods
shl
repz
scas
aam
shrl
jno
adc
fisttps
fnstcw
mov
adc
aaa
cmp
cmpsl
xchg
sbb
dec
int3
push
xor
dec
adc
pop
jecxz
cli
shlb
push
add
pop
xchg
jb
adc
xor
add
ffree
daa
xor
pop
xchg
xchg
movsb
xchg
add
imul
mov
cmp
fsts
dec
sbb
push
ljmp
adc
test
dec
mov
enter
lret
push
sbb
out
out
jbe
xor
repnz
je
bound
xor
rorl
mov
mov
xchg
in
andl
pop
mov
or
les
mov
movsl
daa
cmp
adc
sub
stc
shrb
add
fldt
andb
mov
lea
fs
or
ljmp
inc
sbb
mov
gs
adc
mov
repz
roll
adc
xor
mov
cli
in
std
test
sbb
pop
jmp
jbe
push
mov
bound
mov
xadd
insl
lods
sahf
fmull
add
iret
clc
clc
test
fwait
jge
mov
jne
cmp
hlt
outsb
cmp
mov
cwtl
sub
mov
pop
sub
sarb
sbb
push
dec
xor
pop
mov
inc
lds
xor
pop
mov
test
jmp
xor
movsl
push
xchg
pop
sbb
mov
pop
loopne
iret
cmp
lcall
pop
xchg
aam
mov
dec
mov
gs
xchg
cmc
or
mov
and
push
add
xchg
adc
pop
push
hlt
les
mov
ss
xor
mov
add
add
jg
hlt
sub
sub
into
lret
data16
push
test
mov
call
mov
js
adc
cli
cmc
xor
popf
inc
stos
in
or
or
adc
imul
cmp
hlt
lock
fucomip
mov
adc
mov
xor
aas
dec
sub
scas
xchg
fwait
in
pop
mov
in
fsub
nop
jnp
push
add
pop
sub
jo
cwtl
fwait
add
push
fisttpll
stos
push
mov
mov
sti
shll
xchg
mov
sbb
mov
jp
sub
mov
push
jmp
lea
mov
dec
popa
imul
ret
cmp
mov
dec
xor
push
push
add
lcall
fcoml
addr16
mov
push
in
imul
arpl
xor
push
and
movsl
popf
and
lret
ret
pop
movb
add
push
daa
mov
iret
or
mov
cmpsb
into
push
fbstp
jmp
shl
adc
js
data16
xor
popa
mov
push
push
inc
pop
add
mov
movsb
sbb
mov
test
push
decl
mov
incl
iret
insb
jnp
xchg
fdiv
je
push
push
sar
xor
in
cld
mov
fildl
sub
mov
faddp
cmp
mov
movsb
mov
inc
out
dec
add
loop
jbe
xchg
popa
sbb
lock
mov
aas
hlt
das
test
call
cmp
cmp
jecxz
push
jno
jns
xor
pop
and
cli
push
xor
push
sub
jmp
cmpsb
pop
adc
xor
lock
andl
mov
das
lahf
mov
xchg
inc
xor
mov
frstor
jne
add
adc
and
or
pop
arpl
pop
mov
ds
stc
lret
xor
cmp
test
lahf
in
fidivrl
fnstcw
adc
shll
sub
push
fcompl
and
and
jne
and
mov
cmc
push
nop
jns
add
or
or
inc
push
jno
out
mov
in
sub
push
fs
stos
dec
pop
test
pop
in
push
push
sub
inc
loop
adc
fdivrp
push
and
ss
xchg
test
sbb
stc
cwtl
mov
cmp
sub
mov
pop
movsb
jb
add
stos
out
mov
dec
test
xchg
mov
mov
arpl
fsubr
aaa
xor
jb
les
jmp
mov
stc
xchg
cmp
sbb
sub
xchg
movsl
bound
mov
popa
xchg
insl
dec
add
mov
es
mov
push
int
jo
mov
add
jp
adc
lret
xchg
test
lea
xor
push
add
cmp
mov
cmp
fistps
sub
pop
dec
or
ret
mov
dec
outsl
sub
inc
mov
mov
jnp
insl
das
mov
mov
mov
jnp
inc
ficoml
cmp
mov
adcl
or
test
clc
cltd
or
lret
pop
dec
insl
add
mov
xor
mov
sbb
loopne
adc
movsb
int3
addr16
adc
or
mov
leave
sub
push
or
or
lret
or
fcomip
inc
inc
dec
sub
xor
mov
sbb
sahf
mov
dec
lret
cmc
cmp
test
ds
cmp
mov
movsl
stc
inc
pop
and
push
xor
sub
xchg
pop
or
jb
hlt
int3
mov
fcmovu
dec
inc
mov
int3
sbb
cmp
push
shlb
loop
xor
cmpsl
gs
inc
aad
jecxz
inc
adc
sti
in
std
cltd
aad
insl
dec
adc
xchg
clc
lock
push
add
out
in
cmc
cmp
iret
lods
repnz
loopne
ljmp
inc
cld
cmp
pop
lcall
inc
jmp
add
sti
cmp
leave
in
addb
je
add
test
xor
test
mov
das
inc
aaa
and
lods
cmp
and
jge
out
lcall
outsb
icebp
out
dec
mov
aad
dec
icebp
dec
pop
test
adc
mov
inc
lret
add
int
or
iret
xchg
and
xchg
fwait
sub
lret
xor
scas
repz
and
or
jle
jae
cmp
mov
jno
mov
in
enter
mov
mov
scas
xor
jb
dec
aaa
popf
pop
and
add
push
sbb
sbbl
xchg
ja
lret
inc
sahf
mov
fstpt
inc
mov
cmc
mov
pop
pop
pushf
or
arpl
out
mov
js
test
orb
push
mov
cltd
pop
or
hlt
pusha
or
loop
pop
cmp
pop
lea
daa
popa
int
lcall
loop
ss
cli
ficoms
loope
in
push
enter
sub
inc
cwtl
stc
pushf
mov
inc
add
and
mov
cmp
xor
xchg
mov
sub
test
imull
mov
insl
inc
adc
jl
repz
in
xor
fldenv
test
mov
adc
mov
pop
mov
icebp
or
lret
cmp
jae
das
add
cmpsl
inc
mov
out
sbb
fmuls
movsl
xchg
dec
mov
test
int3
jl
dec
cmp
fsts
jmp
idiv
ficompl
call
or
sahf
jl
dec
jecxz
lods
inc
je
divl
pop
xchg
mov
cs
xchg
int
ret
inc
and
shrl
xchg
cmp
push
rcrl
dec
stos
stc
movsb
sub
and
jg
sahf
pop
jmp
push
mov
and
les
adc
in
loop
sti
pop
cwtl
notb
inc
jbe
shl
dec
xchg
xchg
repz
sub
cmp
sbb
jo
pop
outsl
jo
dec
mov
arpl
xor
add
inc
ret
jle
or
gs
push
cwtl
repz
sbb
push
addl
lahf
mov
loop
pop
fs
cmp
or
xchg
enter
mov
adc
mov
rol
arpl
test
filds
enter
or
push
lcall
mov
mov
cmp
dec
mov
je
mov
adc
jle
ds
inc
jmp
je
les
jne
inc
or
cltd
and
xor
adc
and
or
aas
ret
adc
add
insb
or
popa
xlat
cwtl
mov
enter
dec
push
scas
int
into
test
repz
pop
pop
adcb
add
mov
xor
pop
pusha
ss
fidivrl
xchg
popa
mov
dec
jp
push
sub
bound
push
push
data16
adc
push
nop
add
jo
adc
xchg
cli
push
fimull
xchg
pop
mov
enter
or
xchg
div
and
ja
add
push
sub
xchg
jecxz
lock
pop
push
add
mov
sub
aaa
out
dec
adc
sbb
xlat
xlat
push
adc
sarl
and
sti
push
insl
sbb
cmpsb
sub
out
out
mov
push
test
adc
adc
mov
inc
mov
pop
mov
sub
pop
adc
lret
idivl
inc
test
mov
mov
sbb
sbb
mov
inc
dec
add
mov
sbb
fiaddl
mov
dec
pop
repnz
das
data16
icebp
pop
or
rol
into
pop
testl
sub
sar
xor
lods
imul
sub
xchg
cltd
push
leave
enter
and
xchg
and
sub
sbb
mov
jnp
out
ret
rol
aad
xor
jb
sbb
or
pusha
loopne
test
pop
mov
and
xor
fs
mov
or
cmpsl
int3
sbb
push
insl
inc
cs
leave
sbb
aas
xor
pop
in
push
sub
mov
sub
rolb
mov
scas
iret
mov
jae
jae
xchg
ljmp
mov
rorl
lods
sub
jle
cmp
ljmp
dec
jb
mov
mov
sbb
adc
stos
rolb
int
hlt
push
ja
repz
sbb
or
sub
push
sbb
loopne
notb
push
rclb
sub
ret
movsl
push
or
dec
push
inc
add
mov
into
mov
movsb
or
jae
cs
mov
push
sarb
ret
int
dec
lahf
shlb
int3
add
fcmovb
inc
pcmpgtb
push
adc
xchg
stc
out
adc
loope
std
jmp
mov
ret
movsb
inc
pop
cmc
ret
pop
dec
pop
add
jl
and
lret
jb
enter
mov
mov
es
loope
adc
loope
mov
inc
out
mov
mov
xchg
popa
add
mov
fadd
test
cmc
je
dec
cltd
and
sub
test
cld
lcall
es
ss
arpl
mov
cmc
dec
push
mov
mov
or
fstl
cmp
add
sub
mov
ljmp
jb
push
lret
adc
mov
adc
fcomps
cli
mov
in
sti
dec
orl
pop
xchg
mov
cs
dec
int
inc
loop
jnp
lcall
lahf
mov
addr16
aad
cs
in
cmp
mull
inc
xchg
or
push
lods
stos
push
xchg
mov
mov
mov
xchg
mov
and
dec
pop
ljmp
mov
inc
or
xchg
mov
lret
dec
lods
daa
aaa
push
cmpsl
das
es
push
sbb
pop
dec
gs
lds
jne
adc
out
xchg
bound
rclb
addr16
ljmp
mov
cmp
jo
xchg
jmp
lds
add
dec
push
pop
add
sbb
and
push
adc
and
inc
push
dec
test
in
mov
je
xor
and
mov
or
cmp
ja
ds
inc
mov
xor
test
cmp
push
popf
mov
add
test
mov
adc
leave
cmp
mov
bound
cmpsb
push
sbb
fadds
add
movl
das
fcmovnb
mov
mov
and
xor
cmp
jmp
ja
roll
mov
xchg
out
daa
fcmovu
movsl
mov
leave
mov
fucomp
adc
jae
gs
movsl
cmpsb
xchg
fdivs
add
repz
pushf
adc
addb
pusha
xchg
jmp
scas
mov
or
or
icebp
sbb
addr16
mov
xchg
loopne
imul
imul
jbe
mov
xor
inc
lahf
mov
js
cmp
or
push
or
aas
mov
and
cld
outsw
adc
mov
lahf
mov
jle
dec
push
inc
fs
mov
bnd
dec
in
adc
cmp
push
mov
into
add
push
pop
jg
in
pop
data16
inc
aas
fbstp
out
js
adc
pop
xchg
push
inc
outsl
mov
in
push
pop
aam
pop
add
xor
lahf
lret
test
insb
out
in
mov
iret
shl
dec
fistps
sbb
jbe
sbbl
pop
xor
aaa
xchg
add
mov
fmull
cmc
fdivrl
sub
sbb
ret
and
adc
xor
sbb
jp
gs
std
mov
inc
lods
popf
mov
sahf
insb
adc
test
rep
loop
ja
ret
mov
orps
add
sbb
pop
jp
fcmovbe
sbb
test
add
ret
pop
xchg
jne
pop
sti
test
push
jae
call
xor
mov
sub
stc
clc
mov
dec
fs
jecxz
xchg
fwait
sbb
ret
sbb
add
shlb
pusha
hlt
repnz
lods
mov
sub
jge
jle
sbb
es
mov
stc
and
push
stc
test
or
lret
xor
outsb
sbb
lods
fs
sbb
out
aam
js
ds
and
mov
pop
sub
dec
imul
xchg
out
ljmpw
add
xor
mov
repz
nop
outsl
stc
sub
in
mov
insb
sbb
pusha
adc
leave
cmp
scas
lahf
push
add
xchg
mov
sub
and
idiv
adc
adc
add
fs
mov
mov
mov
push
pusha
cmc
mov
mov
lods
pushf
adc
xchg
loope
adc
xchg
aas
in
test
out
pop
loop
int3
in
gs
inc
add
pop
cmp
test
adc
sbb
fists
es
ret
das
or
mov
pop
clc
imul
popf
mov
xchg
dec
sub
mov
mov
hlt
lret
add
xlat
xchg
cli
mov
fldcw
shlb
adc
repz
mov
cmp
pop
enter
xchg
decl
push
iret
mov
mov
clc
jge
dec
lahf
add
push
sub
push
mov
or
xchg
cmp
fs
sarl
and
cmp
les
cmp
xchg
or
dec
adc
sub
icebp
dec
sbb
mov
jnp
mov
jp
cmp
add
jmp
xchg
inc
and
outsb
dec
and
std
hlt
fwait
repnz
data16
fiaddl
cmp
popf
inc
mov
mov
xchg
mov
push
mov
pop
xchg
pop
pop
add
aam
jmp
jge
pushf
fwait
push
xchg
psraw
ljmp
lock
mov
cltd
cmp
push
jg
cs
insb
test
jbe
mov
mov
insl
aad
sub
jg
sub
sti
nop
dec
je
dec
stc
jo
mov
sbb
or
loope
lods
loop
mov
add
hlt
xchg
stos
xorl
mov
mov
sub
or
incl
xor
mulb
in
daa
js
dec
lods
out
push
mov
call
stc
jmp
fisubrl
lcall
jecxz
and
enter
movl
cli
insb
cmp
iret
sbb
test
mov
mov
add
imul
sbb
jl
jg
sub
cmc
lahf
xor
add
pop
sbb
mov
loopne
mov
push
adc
cmp
sub
pushf
push
les
sbb
pop
sub
js
jo
sbbl
add
test
imul
sbb
dec
jnp
aaa
lret
xlat
xorb
xor
sti
xchg
sti
and
popa
inc
push
or
lock
pop
jno
push
jns
sti
out
jle
sub
pop
cmp
jmp
push
cmp
imul
and
xchg
int3
pop
inc
scas
dec
push
std
jbe
xchg
push
fwait
imul
test
movsl
mov
jb
in
outsb
sub
jnp
pop
jne
xchg
or
loope
mov
movsb
mov
addr16
out
out
xchg
or
mov
jecxz
out
mov
pop
push
push
mov
add
and
test
mov
sti
mov
stos
fcomps
mov
xchg
jae
jp
inc
jns
cltd
cmp
fs
aad
pop
xor
call
cmp
mov
xor
xchg
shlb
push
mov
xchg
sbb
mov
not
cmc
fisttps
rcrb
or
jge
xor
jle
dec
jecxz
dec
mov
xchg
adc
sub
push
and
repnz
mov
loop
mov
mov
mov
call
shr
push
sub
push
sub
cmp
idivl
mov
je
stc
das
in
movsb
cmp
mov
xchg
data16
lock
jo
lret
cmp
jne
das
jb
shrl
or
sub
and
les
push
divl
sahf
xlat
das
sti
push
or
and
mov
icebp
testl
cld
xor
cmovge
sub
sub
xchg
mov
cmc
sbb
or
push
mov
insl
adc
add
xchg
inc
xlat
ds
dec
jl
adc
aaa
sbb
xor
dec
push
sbb
xchg
dec
popa
call
xchg
lahf
mov
add
insb
in
aaa
ret
or
cmp
rcl
and
jo
or
dec
je
in
imul
push
xchg
inc
sub
aaa
jp
pop
push
adc
decl
push
rcrl
icebp
sbb
pop
cmp
xor
sub
push
call
sub
call
jge
push
or
nop
dec
dec
mov
pop
sbb
fdivrl
or
fsubs
push
jo
mov
rorl
or
out
and
jno
pop
sbb
loopne
jnp
scas
in
mov
jmp
testb
lahf
pop
pop
scas
test
fldenv
stos
addr16
in
loopne
jecxz
xor
xor
mov
lret
adc
push
sub
cmp
stc
inc
sahf
pusha
insl
mov
xor
outsb
dec
pop
pusha
notl
out
jecxz
out
push
cmp
or
popa
dec
ret
jp
cmpsl
xchg
dec
pop
jne
sub
movsb
sub
fdivrp
cltd
addr16
pusha
jmp
in
popa
filds
mov
mov
mov
sub
mov
outsl
mov
gs
xchg
mov
test
xchg
adc
pop
hlt
mov
pop
data16
dec
les
jae
jno
mov
mov
and
out
les
fisttps
pop
push
shlb
fisttpll
pop
or
insl
xchg
mov
sbb
adc
push
dec
xchg
dec
cli
add
aad
gs
dec
push
cmpsb
pop
push
enter
outsb
dec
stc
sub
je
mov
push
mov
xchg
add
mov
jecxz
xchg
lods
pop
sub
roll
jb
data16
popa
movsb
in
lods
orl
notl
push
ss
les
mov
adc
mov
arpl
xor
rolb
pusha
sub
add
sbb
retw
out
cmp
mov
or
ljmp
out
aam
call
in
dec
dec
mov
sub
push
push
mov
pop
jl
sub
or
xchg
fisttpll
adc
scas
inc
xchg
loopne
lcall
cmpb
mov
lret
cli
mov
inc
clc
inc
ss
into
mov
jb
sub
in
mov
mov
fwait
push
pop
rcrb
mov
div
mov
jecxz
enter
or
mov
call
fwait
pop
lock
cmp
xchg
sbb
les
sub
jg
cld
mov
shl
pop
push
fdivrl
pop
add
outsb
and
jle
in
orb
out
in
push
sub
ret
movsb
adc
incb
cmp
push
xchg
jle
or
cmp
insb
lcall
jns
sbb
mov
movl
xor
jbe
inc
sti
repnz
push
add
cmp
not
leave
lods
xor
loop
push
xor
ss
adcl
and
mov
add
inc
dec
fwait
pop
cmpsb
enter
mov
cmc
dec
es
clc
mov
and
mov
push
jne
xchg
sub
cli
stos
movsb
xchg
leave
cli
das
adcl
ja
mov
mov
cmp
xchg
or
in
or
enter
gs
scas
iret
dec
lahf
dec
push
mov
fcom
shll
or
movsb
lcall
inc
inc
xlat
loope
imul
or
push
stc
xchg
addb
je
push
jge
and
mov
ja
dec
fsts
es
pop
out
mov
into
mov
addr16
mov
loope
out
daa
dec
cwtl
jae
sar
push
jns
in
xchg
or
icebp
mov
test
scas
iret
cmp
lods
in
scas
mov
cmp
lods
mov
insl
inc
sub
add
mov
jp
gs
negl
push
cmpsl
dec
jb
fistps
xor
dec
jle
and
jg
lods
subb
xor
cmp
cwtl
repz
lea
add
sahf
cmp
sub
aas
adc
jae
outsl
pop
loope
out
gs
adc
dec
pop
jecxz
pop
dec
dec
jmp
mov
pop
pop
movsb
mov
les
popf
sbb
jbe
icebp
jnp
inc
notl
aaa
mov
dec
mov
jg
add
push
ds
icebp
push
pop
xor
loope
ja
mov
data16
pushf
dec
mov
fs
scas
sub
fadds
xchg
mov
mov
pushf
stos
repnz
cwtl
nop
clc
int3
stos
lret
adc
out
mov
addb
ret
test
icebp
ljmp
mov
stos
sti
adc
mov
ss
mov
add
stos
sarb
mov
jbe
inc
jbe
xlat
fcom
and
cmp
dec
push
inc
fcmovbe
jle
dec
cmp
adc
or
jecxz
stos
sbb
push
call
sbb
xchg
inc
lret
xchg
insb
ss
rorb
cli
xlat
add
test
xchg
arpl
sahf
ljmp
push
pusha
and
out
lock
mov
add
mov
lcall
sub
or
jb
sub
scas
pop
xlat
arpl
add
aad
insl
arpl
bound
fdivrl
sub
pop
inc
mov
mov
dec
mov
push
icebp
test
scas
pop
adc
push
fptan
pop
sub
or
test
xchg
int
mov
int
sbb
cwtl
inc
xor
lcall
jmp
sub
pushl
call
add
pop
cmp
xchg
insb
cltd
xchg
je
in
pop
lret
sub
push
fcomi
xchg
jp
dec
mov
cmp
repnz
stos
enter
jbe
sbb
or
push
hlt
inc
or
sub
sub
dec
in
mov
xchg
fnstcw
clc
push
movsb
or
ds
jo
in
aaa
mov
xchg
stos
xor
sarb
gs
notb
sbb
ret
ret
out
stc
push
outsl
mov
pop
pop
movsb
pushf
jge
mov
sbb
pop
add
stc
out
leave
iret
dec
sub
addr16
xchg
out
loop
xlat
sub
and
dec
jle
test
rcr
cmpsb
sub
xorb
sbbl
push
fildl
inc
outsb
mov
shr
arpl
je
movsb
ja
add
adc
cmp
out
aas
jb
mov
inc
xchg
jp
dec
mov
cmpsb
mov
je
jb
scas
hlt
idivb
movsl
addr16
xchg
test
fldenv
rcll
or
out
mov
mov
adc
rep
mov
xchg
jg
dec
out
jns
scas
ss
aas
sbb
add
cmp
mov
or
pop
lods
sub
xor
sbb
jle
imul
jo
pop
dec
lcall
loope
mov
or
dec
outsl
fnsave
data16
cmp
loope
test
jo
cmp
or
and
sub
jg
xorb
sub
lret
sub
inc
add
adc
clc
testl
adc
ret
cmpsb
add
push
insb
pop
mov
stos
and
inc
or
insb
cmpsl
push
pop
add
xor
xchg
mov
cmpl
xchg
lods
andb
adc
call
rolb
jno
les
negl
mov
sub
lock
cld
push
mov
sub
lahf
cmpsl
les
insl
mov
aas
in
mov
xchg
pop
mov
or
in
sbb
mov
xor
pop
xor
xor
aam
jg
mov
fcomip
inc
add
jge
jl
dec
jle
imul
sub
imul
imul
scas
roll
scas
inc
and
adc
xchg
push
rolb
scas
aas
add
adc
adc
add
pushl
out
jg
rclb
inc
sbb
cmp
push
lahf
mov
iret
dec
jae
xorl
jecxz
xchg
fs
fistpl
dec
jne
sti
sbb
xor
mul
ja
lahf
mov
add
push
ja
mov
lret
scas
mov
xor
ja
fcom
pushf
fildll
xchg
xor
push
pop
cwtl
js
cs
mov
cmc
sbb
inc
aaa
and
inc
aas
int
fxch
sti
aad
dec
xchg
jle
pop
dec
adc
cs
mov
mov
push
pop
stos
aas
repz
jl
sbb
mov
outsb
out
jnp
adcl
stos
dec
out
gs
cmp
in
adc
xchg
mov
ret
mov
mov
subl
leave
in
daa
mov
lock
add
jo
jmp
and
push
mov
ret
push
out
inc
mov
fwait
jb
aaa
ss
push
jg
sub
push
inc
sti
andl
pusha
stos
jne
pop
lds
adc
in
mov
pop
les
rorb
cli
xor
sub
mov
or
jb
cmpsb
ficompl
pop
mov
das
sub
xor
cmp
fsubr
mov
ljmp
sbb
jns
xchg
popa
or
xor
push
sub
push
cli
aas
in
jle
add
imul
outsl
movsb
push
or
mov
inc
lods
sub
adc
mov
cmp
stc
mov
push
sbb
es
pop
mov
filds
mov
xchg
push
push
iret
shll
cs
stos
ficoml
mov
sub
or
pop
dec
pushf
dec
fwait
out
pusha
push
es
sarl
daa
pop
add
jne
jg
cmpsl
lock
gs
movsl
inc
ss
outsb
lahf
lock
aad
pushf
ss
push
xor
sarl
mov
inc
es
cmp
mul
in
mov
pop
repz
pop
je
and
jge
ficoml
inc
out
mov
mov
jne
add
dec
mov
fdivr
push
pop
dec
mov
inc
and
push
in
mov
divl
cmp
jne
icebp
xor
xchg
movsl
and
push
fsts
cli
inc
cmp
call
in
cs
xlat
in
nop
not
inc
pop
fdivs
sub
cmc
inc
jp
loop
gs
mov
mov
frstor
pop
mov
popa
xlat
or
sub
test
pop
decl
int
jbe
outsb
rcll
cmp
mov
fwait
mov
jns
xchg
repnz
sbb
mov
jmp
mov
sbb
adc
test
dec
sbb
das
lcall
hlt
dec
lods
sub
cmp
adc
fdivs
inc
insb
data16
repz
mov
lds
hlt
pop
das
inc
jmp
mov
cmp
xchg
test
jg
out
iret
into
xchg
cltd
cs
jmp
jb
dec
jg
clc
mov
cmc
std
addr16
cwtl
jne
popf
call
mov
jns
popf
mov
cmp
xor
sub
xchg
in
mov
mov
mov
cld
mov
add
test
clc
fstpl
es
es
adc
mov
mov
or
inc
sub
out
int
pop
dec
test
pushf
pop
push
sti
mov
jo
call
pop
mov
xor
jbe
mov
rol
lahf
sahf
ljmp
cmp
je
lods
outsl
fwait
jecxz
inc
test
mov
sbb
add
je
mov
pusha
cmp
dec
sub
mov
movsb
shlb
sbb
jae
and
jb
ljmp
sahf
pop
mov
xchg
mov
sbb
out
cmpsb
push
jne
lret
xor
mov
stos
xchg
repnz
fists
jb
sbb
xchg
icebp
mov
mov
sbb
adc
push
jg
inc
cmpsl
mov
xchg
jae
xchg
mov
cmp
sub
decb
cltd
je
out
lock
jae
lcall
iret
dec
jge
mov
clc
mov
pop
jmp
aad
sbb
pop
jg
and
mov
pop
fisubs
or
lds
imul
leave
mov
mov
push
pop
aad
jl
test
imul
mov
addr16
pop
adc
mov
int3
add
dec
push
inc
out
jl
cmp
scas
pushf
adc
xlat
aad
jmp
lock
dec
cmp
leave
jae
test
in
push
daa
cmpsl
cmp
fisttps
ds
mov
cltd
push
and
dec
fs
xorb
mov
cwtl
pusha
adc
sbb
fstpl
mov
adc
xor
add
ljmp
repnz
jae
mov
stos
loopne
insb
iret
sub
arpl
sarl
push
cmp
adc
mov
pusha
ret
push
insb
stos
sub
lret
imul
xchg
loop
ds
or
aaa
in
dec
lahf
dec
mov
int
jp
cltd
mov
mov
lock
test
inc
ficoms
mov
xchg
and
and
pop
add
sbbl
adc
jno
repnz
pushf
xor
pop
cmpsb
insl
and
ss
loope
push
iret
mov
fmul
scas
lock
pmuludq
push
lock
test
adcl
js
pop
movsb
mov
mov
mov
jmp
jecxz
int3
inc
cmp
pop
xchg
push
dec
fs
fwait
pop
adc
jne
addl
in
shlb
test
push
xchg
aas
call
or
mov
mov
mov
repz
aas
push
pop
stos
mov
jbe
mov
push
subl
daa
push
adc
jg
mov
sub
xor
in
dec
clc
and
pop
repz
mov
pop
adc
sbb
repnz
enter
dec
sbb
rcr
ss
sti
das
inc
xlat
inc
roll
cmp
out
roll
cmp
push
jns
insl
cmp
xor
leave
fisttpl
rcr
inc
cmp
sub
xlat
sbb
pop
lcall
cmp
cwtl
add
mov
roll
mov
inc
nop
xorl
sbb
mov
adc
cmp
arpl
cwtl
sbb
ds
aaa
sub
imul
add
sub
shr
xor
sbb
sbb
and
scas
sub
and
pop
push
jno
xor
mov
repnz
loop
jg
dec
fisttpl
pop
addr16
xchg
in
mov
push
rorl
add
daa
addr16
mov
lret
xchg
stos
xor
ret
in
outsb
or
push
jno
mov
jns,pn
into
xchg
test
fcomps
dec
push
xchg
mov
sub
jmp
sub
pop
or
xchg
xchg
jecxz
mov
pop
sarb
addr16
js
push
lret
mov
shrl
xor
push
pop
add
test
test
divb
nop
sbb
cli
xchg
int
sbb
subl
sti
repz
jne
adc
arpl
test
mov
std
and
cs
xchg
jne
cmp
pop
sbb
add
pop
jb
in
jmp
popf
lcall
addr16
dec
aad
mov
jbe
in
dec
outsb
pop
leave
jo
sti
das
lahf
or
adc
jb
pushf
icebp
lods
inc
popf
int3
ret
nop
dec
inc
leave
or
cmp
mov
in
bswap
adcb
shl
xor
jne
loop
mov
scas
cmp
lcall
xor
jae
inc
xchg
jnp
pop
cmp
pop
fadd
dec
xlat
sub
scas
push
ljmp
push
pop
loopne
insb
fcmovne
push
out
out
jge
xchg
subl
out
dec
data16
inc
les
mov
add
outsb
ja
push
xlat
xor
popf
iret
cmpsl
mov
imul
fucomp
imul
clc
add
mov
stc
and
push
fwait
mov
mov
xchg
lret
sarl
fsubs
mov
cmp
sub
push
subb
popa
in
scas
mov
cmp
outsb
mov
aas
inc
cld
shlb
jne
nop
or
loope
xor
shl
fimull
fidivrl
dec
inc
ljmp
in
rolb
sub
out
adc
aad
mov
clc
xchg
pop
and
popa
cmp
push
push
sub
or
cld
push
xchg
jg
bound
dec
testb
aas
movsl
and
jne
push
mov
das
in
movl
sarb
or
push
popf
mov
es
scas
sbb
cmp
in
into
enter
jl
comiss
int
dec
pop
and
roll
arpl
mov
cmp
mov
pop
mov
cmp
rcl
xchg
adc
es
dec
lods
in
jns
jmp
fidivrl
dec
pop
push
fldl
mov
leave
mov
adc
pop
gs
loope
lock
cmp
fs
inc
mov
pushf
add
int3
lcall
sbb
fwait
enter
mov
leave
pop
stos
push
cmc
sbb
aam
das
in
add
outsb
adc
ljmp
pop
mov
cmp
cmp
syscall
dec
jecxz
jo
adcl
dec
into
sub
adc
nop
aas
cmp
mov
mov
or
jge
dec
lds
dec
sarl
or
fwait
inc
outsb
mov
mov
inc
pushl
push
shlb
xchg
ljmp
fwait
and
bound
mov
xor
andb
scas
jnp
into
lods
shll
pop
dec
int3
mov
scas
mov
test
orb
xchg
mov
sahf
inc
hlt
pop
outsl
lods
push
and
fcompl
js
lods
repz
lret
std
pop
or
mov
xchg
ss
dec
shl
sub
or
dec
sub
call
xor
sub
daa
out
lret
icebp
push
dec
and
in
inc
aaa
add
xor
mov
push
orl
inc
or
sub
shlb
aas
dec
shll
aad
push
push
xchg
jbe
jae
mov
clc
mov
leave
push
insl
jge
sbb
push
cmpsb
xor
xchg
leave
mov
mov
adcb
gs
lret
adc
into
out
cmc
xchg
fnstsw
pop
repnz
in
dec
es
inc
popa
pop
adc
sahf
or
push
sub
outsb
cmp
imul
add
push
pop
arpl
jecxz
cli
inc
ljmp
inc
sahf
rorb
mov
fcmovne
pop
inc
mov
sbb
fdiv
mov
jmp
loopne
push
mov
pushf
adc
or
adc
mov
and
lods
sub
call
jp
cmc
mov
cmp
fimuls
jg
adc
jmp
ja
cwtl
repnz
pop
loop
int
into
mov
xor
call
dec
sub
xor
mov
mov
sbb
stc
xchg
mov
mov
and
lahf
aas
loop
mov
orb
int
fsubs
push
jb
cmpsb
hlt
push
lcall
push
xchg
sbb
bound
jne
cmp
ds
add
cmp
daa
icebp
sbb
std
mulb
aaa
into
or
adc
add
push
das
mov
mov
push
call
jl
rcrl
and
pop
imul
add
sti
pop
push
add
bound
xchg
fsts
orb
test
xchg
in
imul
add
jle
ljmp
mov
xor
loope
sub
out
and
test
mov
stos
dec
sbb
pusha
cli
push
rolb
ja
jae
movsl
imul
inc
jle
xchg
sbb
icebp
push
dec
dec
sbb
adcl
imull
jl
mov
sub
cmpsb
dec
mov
imul
pop
sub
movsl
shrb
mov
mov
inc
push
gs
mov
movsl
cmp
push
out
cmp
adc
adc
pop
add
out
adc
iret
add
fmuls
push
sti
loop
lret
jb
enter
test
add
icebp
decl
or
loopne,pn
xchg
lds
add
test
ja
stc
adc
mov
jo
fildl
mov
scas
adc
rcl
jl
inc
shl
add
xor
cli
or
mov
loope
in
xchg
into
repnz
dec
pop
inc
shlb
je
sbb
cmpsl
inc
repnz
or
xchg
orl
xlat
mov
repnz
xchg
adc
fwait
das
xor
sub
cmpsb
inc
insl
cld
xlat
sbb
mov
and
int3
pop
xchg
cwtl
std
push
jecxz
xchg
test
or
push
imul
xchg
addb
bound
push
jl
lahf
subb
push
ret
and
pushl
sbb
mov
jne
pop
add
lcall
mov
xlat
les
dec
hlt
sbb
test
adc
mov
lret
iret
outsb
lret
rcrb
sub
lds
jne
mov
mov
sbb
mov
xor
lret
stc
sub
push
imul
xlat
pop
int3
shl
scas
dec
sbb
enter
inc
jmp
or
jno
rcrb
dec
or
je
pop
andb
xchg
jno
or
adc
mov
mov
jns
cmp
mov
jl
ljmp
and
jbe
jns
mov
lret
leave
mov
mov
inc
and
aas
mov
leave
in
divb
dec
sbb
sub
inc
jmp
and
ss
movsl
orl
icebp
out
push
sub
lahf
adc
push
mov
sbb
cmp
xor
sarb
stos
sti
or
mov
or
es
sub
lahf
xor
ljmp
push
xchg
loope
ret
int3
and
sub
sbb
mov
cmpsb
pop
xor
ja
in
xchg
xchg
cwtl
out
pop
jbe
jbe
jae
cmp
and
mov
lds
push
fidivrl
mov
pop
inc
add
cmc
rcrl
mov
shr
sahf
lcall
aas
inc
xchg
mov
and
or
mov
lock
mov
push
inc
cmpl
test
pop
ss
ljmp
mov
adc
sub
dec
stos
fisubs
and
dec
xchg
loopne
orb
mov
lret
mov
inc
iret
xor
adc
dec
inc
add
push
pop
xchg
pmuludq
mov
jmp
jb
mov
pop
hlt
sbb
add
mov
sbb
aas
cli
lods
cmp
jns
cmp
xchg
cltd
sbb
sbb
lcall
push
ret
icebp
in
stos
jg
leave
popa
mov
push
mov
inc
push
negb
sbb
ss
test
data16
mov
fisttpl
inc
push
jns
ljmp
inc
js
fs
int3
xchg
in
loop
lods
mov
pop
lds
or
gs
and
mov
fiadds
pop
dec
cmp
add
jecxz
sbb
jl
jl
loope
push
jle
daa
imul
into
fistps
cmp
pop
scas
int3
fucom
pop
inc
xor
lea
outsb
aam
fistpll
idivl
mov
orl
inc
mov
sub
popa
xor
lcall
mov
cmp
std
sbb
clc
mov
jge
sub
in
shlb
xchg
mov
sub
insb
add
call
gs
or
pop
cmp
fcompl
aad
negb
xor
jg
mov
rcrb
mov
push
ds
dec
imul
cli
shll
push
xor
cmp
xor
cmp
into
mov
call
and
inc
outsb
push
cmp
popf
int3
cmc
enter
addl
mov
mov
cmp
mov
sbb
popa
mov
repz
pop
and
xor
mov
roll
or
repnz
dec
cmp
dec
pop
pop
enter
add
jmp
xlat
sar
dec
lret
test
or
lds
inc
xor
scas
push
lods
je
mov
jb
jbe
fnstsw
add
xor
mov
daa
lret
cmpl
outsb
xchg
add
lret
std
mov
dec
cmp
lret
incl
jge
add
ret
arpl
dec
mov
cmp
lret
pop
mov
shll
or
xlat
push
jecxz
std
or
sbb
or
mov
ret
mull
outsl
or
jge
ds
fs
pop
mov
loope
xchg
pop
movb
call
nop
and
mov
fwait
mov
mov
dec
lods
xchg
sbb
test
pop
repnz
pop
mov
mov
iret
fsubl
popa
cli
sub
mov
mov
sub
arpl
push
outsb
repnz
push
pop
arpl
sbb
xor
xchg
icebp
push
lds
add
adc
rcl
jle
mov
push
scas
in
movsb
ljmp
cmp
cmpsl
dec
add
pop
xor
sahf
or
fdivl
add
and
mov
cmp
mov
adc
in
ss
in
call
movsl
sub
popf
mov
jge
cli
adc
adc
rcr
in
out
xchg
aad
in
pop
popa
vpunpcklqdq
xchg
jle
adc
out
imul
dec
jmp
orl
fsubs
rol
sbb
ljmp
push
pop
inc
cmpsb
jp
inc
aas
xor
into
popf
mov
sbb
mov
and
loope
aam
cmp
cmp
pop
jb
jne
inc
push
jbe
dec
dec
xchg
fucomp
mov
push
scas
popa
pop
jge
jne
lcall
mov
pop
repnz
cs
cmp
or
sahf
scas
lods
out
xchg
repnz
push
stos
mov
fdivl
inc
clc
adc
sbb
inc
lret
inc
xchg
popa
dec
orb
and
pop
jmp
movsl
int3
mov
inc
push
push
jnp
inc
inc
out
push
or
lds
leave
lods
jns
incw
cmpsl
adc
or
es
mov
jae
sti
test
scas
pop
into
sbb
loope
jl
jp
push
xor
imul
jns
pop
jbe
js
jle
add
xor
mov
jmp
in
inc
ds
jle
cmpsb
or
mov
lahf
jno
pop
adc
rorb
xlat
clc
and
rcrb
sarb
or
mov
jl
jns
mov
js
stos
mov
adc
xor
add
icebp
cmc
jl
mov
pusha
add
and
xor
and
dec
aas
cmp
adc
aas
cmpsb
inc
push
xor
hlt
cmp
in
jg
out
dec
imulb
repnz
test
adc
pushf
cld
mov
fisttps
or
fmulp
push
sbb
pop
inc
mov
enter
outsb
fcoms
jne
xchg
adc
arpl
aas
pop
cmp
mov
mov
movsb
mov
out
mov
push
es
mov
cmpsl
mov
fldenv
cmpsl
add
xor
fwait
lock
or
scas
imul
fld
or
push
aam
and
mov
cmp
cmpsb
ds
fmuls
jmp
mov
movsl
dec
repz
into
xchg
scas
sbb
mov
es
loopne
dec
xchg
out
add
jg
fistps
shrl
push
jmp
dec
jg
in
sub
mov
test
mov
inc
ret
dec
jmp
mov
cmp
test
fnstcw
cwtl
pop
stc
cli
sahf
pop
dec
negb
xchg
lods
jle
je
xor
jmp
arpl
add
lds
lods
ret
mov
xchg
jmp
lret
fldcw
push
and
lds
xor
push
mov
push
in
pop
fstl
inc
jns
jg
inc
mov
loop
inc
push
into
aas
test
in
and
adc
jmp
add
ret
sub
sbb
scas
xorb
jle
popf
call
jo
push
push
xchg
mov
pop
ljmp
jae
fs
mov
xorl
loop
mov
inc
dec
test
loopne
into
push
lea
xor
scas
imul
sub
outsb
movsb
jo
lcall
out
stc
or
ja
jl
sbb
pop
sbb
stos
xchg
mov
lahf
pop
jb
adc
mov
jae
rorb
in
shlb
inc
lods
add
les
dec
adcl
mov
add
xchg
push
test
gs
daa
add
inc
add
add
cmovns
insb
cmpsb
fcomp
and
push
mov
shll
sbb
mov
jge
jmp
sub
mov
stos
jmp
fs
repnz
mov
fs
xlat
jg,pt
cli
inc
bsf
test
pop
xor
jg
cmpb
int
bound
scas
nop
xor
ljmp
mov
and
sbb
testl
inc
jmp
cmp
addr16
lea
test
xor
shll
or
xor
sub
rcll
das
or
cld
sbb
out
daa
shrl
sub
loope
inc
adc
pop
out
or
mov
and
adc
iret
jb
imul
repz
mov
xchg
or
push
dec
sbb
rorb
sbb
pop
push
cmp
dec
sub
adc
mov
cmp
cli
mov
dec
loop
ja
jne
mov
jb
inc
ds
stc
lock
inc
add
test
mov
cltd
or
lcall
mov
and
mov
jecxz
inc
cmp
gs
add
outsb
jp
out
pop
sahf
mov
ficoml
push
js
sub
pop
dec
stos
inc
mov
and
dec
push
fnstcw
mov
sarb
aam
mov
iret
jns
jne
or
aas
cmp
lret
out
hlt
mov
cmpsb
bnd
loopne
in
jae
aaa
pushf
testb
push
inc
stc
cmp
xchg
push
flds
mov
loop
insl
lcall
mov
lcall
les
push
xlat
fs
imul
dec
mov
and
push
jo
lods
outsl
popa
push
sti
mov
mov
fldl
jecxz
push
pop
movsl
mov
test
call
xor
mov
mov
rolb
dec
pop
les
cmp
pop
leave
data16
sahf
les
sbb
jle
gs
pop
inc
shl
mov
mov
aad
test
mov
sbb
test
arpl
ret
les
inc
jno
inc
xchg
aaa
inc
xor
je
adc
sbb
ljmp
shrb
call
shl
outsb
cmc
out
fchs
dec
mov
or
xlat
mov
stos
test
mov
pop
bnd
incb
mov
je
mov
popa
ror
outsb
inc
jmp
sub
outsl
aad
leave
std
push
inc
imul
sub
inc
out
fstpl
repz
lock
and
pop
out
nop
add
scas
dec
fidivs
mov
or
mov
in
xchg
pop
sub
icebp
insl
dec
inc
pop
push
lret
lods
sub
int
prefetch
fadds
jno
lret
cmp
sbb
insb
push
scas
loopne
or
and
jp
jbe
sarl
sbb
popa
fistpl
stos
imul
les
sbb
imul
cmp
lods
push
add
xchg
adc
xchg
test
test
outsb
andb
jno
mov
clc
lret
fmul
cs
ja
sub
addb
std
cmp
mov
mov
icebp
lret
and
mov
out
xchg
jae
stc
aas
pop
mov
xchg
xchg
jbe
jg
jge
fucomi
aad
or
arpl
out
cmp
fisttpll
xchg
mov
icebp
fnstsw
xchg
jg
andl
pop
test
push
mov
mov
jo
mov
pop
and
xchg
add
or
nop
sub
cmpsb
das
in
mov
or
jae
mov
and
mov
stc
negl
int
dec
mov
movsb
sbb
out
xchg
and
stc
mov
cs
sarl
fistpl
dec
subl
fimuls
lods
loope
aam
outsb
sti
aaa
dec
sbb
in
andb
addr16
sub
xor
stos
inc
and
jmp
in
arpl
lock
popf
in
push
push
xchg
imul
sbb
dec
mov
jae
ljmp
or
or
cs
add
mov
pop
pop
sub
xor
fisubrs
sub
push
push
pushf
out
xchg
xor
sub
mov
pushaw
scas
jge
inc
fs
jl
xchg
cli
sub
scas
or
ja
sbb
sbb
cmp
les
mov
cmp
and
cmp
lock
xchg
test
push
cli
push
test
fs
out
cmpsl
stos
das
xchg
cmp
repnz
int3
pop
pusha
ljmp
jae
jle
mov
aas
mov
cli
add
fcom
push
mov
into
mov
dec
mov
loopne
adc
push
jne
add
or
imul
push
fsubrl
scas
xor
fsubs
imul
jne
xchg
les
add
into
shrl
and
stos
test
mov
mov
jo
andb
xor
xorl
cmpsb
or
inc
or
add
jne
lret
js
xchg
notb
pop
mov
fildll
dec
mov
fistps
xchg
movsb
in
dec
pusha
in
gs
loope
xor
mov
cmc
in
aad
test
xchg
xchg
mov
add
imul
push
imul
push
inc
cmp
dec
mov
mov
pushf
je
mov
idiv
sbb
add
pop
jae
push
pop
cs
sub
popa
mov
in
cli
push
xor
ret
cmp
jo
push
or
push
and
cwtl
jb
mov
push
mov
jmp
mov
daa
adc
ret
daa
jg
outsl
ss
pop
stc
imul
add
mov
pop
xor
jne
mov
sub
mov
xchg
aam
dec
out
cli
inc
mov
push
push
mov
ds
cltd
repz
popa
mov
add
stc
mov
pop
insl
in
jno
push
inc
mov
sbb
test
jb
xor
lock
sbb
mov
aam
mov
cltd
insl
aas
stos
jmp
or
sar
sub
xor
mov
sti
sti
jnp
scas
test
lods
sub
fdivrp
cmpsl
cmp
sti
in
cli
jle
jb
jb
je
loopne
idivb
sbb
in
xchg
cli
ja
inc
dec
cmpsb
dec
jmp
in
mov
cmpsb
cmp
pop
cld
mov
mov
rol
pop
sub
pusha
dec
mov
int
scas
mov
cmpsb
inc
inc
mov
sub
orl
add
popf
mov
ret
idivb
into
leave
jae
mov
dec
pop
scas
xchg
push
mov
mov
pop
mov
outsb
push
jge
or
aam
adc
or
adc
fwait
and
lods
movsl
lahf
xchg
out
jmp
adc
daa
fnstsw
mov
push
test
push
mov
and
jns
mov
jg
adc
mov
stos
and
out
adc
lock
js
mov
push
rcrl
cld
dec
jb
aam
push
push
in
lea
adc
pop
pop
push
daa
arpl
sbb
xorb
mov
mov
mov
das
fistps
dec
jae
aam
mov
and
push
or
push
push
jg
xor
xlat
sbb
xchg
push
mov
add
xor
lret
mov
xor
fsubl
mov
lcall
mov
shll
hlt
inc
mov
sbb
shlb
jg
cmp
lret
aaa
mov
add
sub
mov
imul
adc
adc
addb
push
stos
jp
cltd
jns
lock
lcall
enter
inc
jecxz
inc
jne
adc
aam
mov
ja
pop
ror
js
pop
rcrl
sbb
xchg
dec
push
lea
jl
jle
jg
pop
mov
pop
clc
pop
call
mov
mov
mov
out
shrb
jns
xchg
stos
aaa
sbb
jb
loop
in
es
cmp
das
test
xchg
lret
add
sti
test
push
ja
in
dec
cmp
sarb
pop
push
and
mov
xchg
in
outsl
fcoml
das
es
stos
movsl
fs
mov
dec
cmp
mov
mov
mov
loope
xchg
and
scas
or
loopne
jns,pt
xorl
insb
xor
shr
xor
inc
or
pusha
call
adc
or
std
ret
imul
shlb
xor
cs
ds
jecxz
fsubs
outsb
out
in
jge
or
push
mov
xchg
sub
stos
pusha
xlat
pop
icebp
jge
xor
xchg
gs
xchg
mov
mov
cmp
sub
pop
push
mov
sbb
sub
cmc
or
test
test
inc
cmpsb
leave
add
jp
iret
nop
xor
das
fsubl
jno
movsl
mov
cmp
ror
pop
mov
imul
aam
xlat
popf
inc
in
and
pop
pop
xchg
das
pushf
cli
xor
and
jg
dec
jmp
dec
xchg
mov
sbb
movsl
stc
cmpsl
mov
ffree
or
lahf
loope
popf
lret
mov
test
cmp
mov
cmpsb
mov
inc
pushf
sbb
push
sbb
lods
scas
testl
lret
mov
into
pop
xor
out
and
inc
out
jne
xor
cld
outsl
lods
mov
sbb
in
into
pop
sub
dec
sub
nop
sub
test
add
jne
adc
mov
adc
dec
ret
stos
int3
cltd
pop
sti
popf
pop
cmp
lcall
fcos
add
cmp
sbb
jo
xchg
dec
lcall
divb
xor
mov
xchg
mov
loop
pusha
mov
loope
xlat
sub
pop
nop
roll
xchg
push
std
push
aas
add
fistps
out
int
pop
cltd
mov
shll
test
jb
mov
insl
xchg
insb
outsl
mov
dec
inc
les
lret
mov
ss
mov
idivl
mov
push
daa
jge
fsubl
push
cmp
jp
outsb
test
push
mov
and
mov
sti
decl
fistpl
sbb
pop
icebp
pop
clc
mov
adc
inc
fcmove
popf
ss
push
lret
cltd
jbe
ja
add
and
shr
mov
int
mov
aaa
and
div
mov
aaa
fiaddl
rorl
out
push
sub
xor
sub
xchg
aas
mov
cmp
je
nop
mov
cmpsl
jge
lret
sti
imul
mov
js
faddp
pop
adc
popf
outsl
add
mov
mov
dec
push
in
xlat
sub
nop
outsl
xor
jge
sbb
in
sti
jne
fistl
jae
fs
jns
mov
jae
cmp
ret
icebp
mov
push
rclb
fstpt
and
les
ds
lock
pop
into
cmp
inc
xor
pop
jmp
rclb
fstl
mov
cmp
pop
dec
mov
js
aam
add
cwtl
arpl
loop
push
scas
or
cwtl
xor
sub
movsl
ret
cmpsb
dec
loopne
imul
cmp
into
adc
mov
push
xor
inc
sbb
loope
icebp
subl
aad
jo
icebp
adc
cmpsb
js
mov
cltd
scas
icebp
test
mov
or
jmp
sahf
lock
shlb
shlb
icebp
lret
lds
sbb
jne
fwait
jecxz
lods
push
push
mov
push
test
dec
sub
js
movsl
loope
shl
cmp
in
dec
aam
dec
mov
xor
mov
xchg
pusha
push
cmp
fdivrl
adc
adc
push
ljmp
adc
jp
icebp
add
lea
aam
fistps
cmpsl
dec
addr16
mov
xchg
pusha
push
and
fdiv
adc
mov
xchg
add
inc
iret
test
int
subb
ljmp
inc
sti
dec
aas
call
jne
outsb
add
out
je
and
jnp
dec
xchg
test
loop
icebp
xor
gs
and
or
pop
pop
or
mov
and
push
cmp
sbb
stc
pop
adc
mov
or
mov
sti
jge
push
gs
out
pop
mov
in
push
bswap
das
jo
sub
xchg
push
aad
lahf
lahf
and
cwtl
mov
xor
adc
push
push
cli
mov
mov
pop
mov
push
outsb
add
cmp
cmp
xchg
cmp
sbb
clc
inc
fwait
imul
sub
add
push
jb
imul
jns
sbb
lahf
lock
mov
call
in
insb
mov
adc
adc
add
cli
pop
jge
cld
popl
subb
cmpsl
and
das
push
outsl
mov
pop
sub
adc
sbb
fs
jne
pop
pushf
pop
adc
inc
popa
idivb
scas
fimull
jge
repz
shrl
jae
or
mov
sbbl
bnd
jb
sub
lds
add
cmpsb
jns
pop
loopne
push
mov
psubsb
out
mov
mov
out
mov
adc
jp
sbb
gs
sahf
xchg
add
xor
imul
lods
popa
push
sub
sub
jbe
lahf
or
adc
movsl
inc
xor
ds
inc
mov
lods
xchg
sbb
mov
int
test
jno
mov
mov
cltd
in
push
mov
imul
push
add
data16
ds
lods
cmp
sub
out
pushf
pop
mov
stos
push
pop
loop
shl
hlt
lds
cmp
or
xchg
mov
adc
fldcw
jge
int3
pop
xorb
repz
mov
push
push
push
jno
ret
push
jbe
adc
sub
rol
mov
pop
test
test
sbb
xchg
and
mov
cmp
test
in
jmp
movsl
std
mov
push
clc
mov
call
leave
add
inc
gs
mov
mov
jb
pop
pop
lret
arpl
mov
adc
cmp
ds
xor
mov
pop
mov
test
mov
and
outsl
mov
rcl
lahf
xchg
mov
test
jmp
push
lcall
xchg
sbb
cmpsl
aas
cld
mov
inc
inc
ficompl
aam
inc
lods
jno
scas
jne
adc
iret
jmp
jnp
lds
bnd
pusha
push
dec
add
int
pop
int
stos
xchg
mov
sub
jnp
xchg
mov
cmp
xlat
add
test
daa
loope
mov
add
test
mov
dec
mov
cmp
testb
xchg
incl
mov
aaa
ret
xchg
mov
fucomi
cld
bound
icebp
and
fwait
stos
sub
mov
pop
sub
decl
lock
pop
movsb
mov
jecxz
mov
inc
icebp
lret
rorl
sub
jmp
and
mov
inc
and
popa
cmp
ds
mov
insl
mov
push
and
add
and
sarb
lds
cmpsl
xor
pushf
jge
loope
cld
and
mov
into
cmp
pusha
fisubrl
sub
pop
mov
dec
add
inc
mov
mov
lahf
pop
jp
xchg
or
lahf
xchg
aam
xchg
mov
push
jbe
xchg
sar
inc
icebp
dec
or
inc
push
jo
int
and
sbb
mov
sub
pop
movl
ret
dec
cltd
rcr
popa
mov
lock
int3
jg
iret
cmpsb
sub
or
nop
fmuls
loop
js
lret
mov
pop
ja
addl
idivb
cli
stc
stos
ljmp
aaa
es
or
fcmovnbe
adc
les
fidivrl
jb
adc
xchg
mov
sarb
in
and
mov
cltd
outsl
xchg
in
push
pop
and
mov
shl
sub
mov
mov
pop
loop
ret
in
aas
int
jbe
subb
aaa
cmp
jecxz
and
sbb
dec
ficoms
sahf
movsb
mov
adc
pop
hlt
iret
jbe
cmp
mov
test
repnz
ficoms
adc
or
xor
or
shlb
add
mov
cwtl
sahf
jmp
dec
xchg
lcall
jmp
lds
sbb
xchg
xor
cli
pusha
push
lods
dec
rol
adc
jae
ja
mov
and
int
mov
mov
andl
arpl
testb
push
icebp
jg
js
jp
xor
jno
addr16
xor
cmp
mov
mov
call
inc
out
inc
push
js
rorb
push
jge
popa
shlb
clc
dec
sarl
clc
pop
adcl
movsb
lds
inc
push
dec
xchg
push
push
sahf
sbb
into
popa
sbb
add
loop
je
subl
mov
or
xchg
or
mov
mov
cmp
cwtl
add
inc
daa
xor
cmp
xchg
imul
rcrl
sahf
lods
in
test
cmp
or
jp
sub
adc
fstpt
in
push
lods
mov
insb
pop
cmp
mov
or
inc
movsl
mov
fwait
and
xchg
repnz
add
sar
jg
mov
test
jne
ja
sub
pop
jle
pop
xchg
mov
decl
inc
cmpsb
fs
popf
inc
push
das
fs
inc
test
push
iret
mov
xchg
sub
pop
xchg
pop
lds
mov
inc
push
xor
mov
adc
and
push
ljmp
pop
rcl
xor
in
or
clc
pop
dec
ss
add
mov
cltd
pop
cmp
scas
sahf
mov
cmp
add
jle
jge
bswap
test
out
xor
arpl
hlt
push
pushf
push
iret
sbb
xchg
repnz
dec
pop
jg
sub
cmp
cmp
je
dec
movb
sub
or
fwait
sbb
pop
xchg
or
ret
cmpsl
dec
sbb
inc
jl
js
push
lahf
cld
inc
mov
les
xor
sbb
xchg
out
repnz
or
cmpsl
pop
leave
data16
pop
fs
fs
sbb
mov
push
sub
inc
das
add
fsubs
cmp
xchg
mov
mov
jmp
bound
mov
lahf
adc
add
std
test
mov
adc
test
daa
out
das
shr
jnp
mov
mov
sub
sbb
cmpsb
rcr
cmpsb
negl
fnop
sbbl
bnd
mov
cwtl
icebp
jne
mov
sahf
pusha
int3
shlb
mov
push
jmp
mov
mov
mov
pushf
imul
sbb
in
mov
dec
xor
adc
mov
int3
in
mov
movsb
dec
and
pusha
push
roll
pusha
add
pop
or
sbb
dec
pushl
pushf
mov
add
sbb
stos
xchg
lock
pop
dec
xchg
out
inc
xor
cs
jns,pn
in
dec
aam
push
cmp
jbe
mov
int3
stos
js
pop
cmpb
repnz
push
bound
jg
lahf
jecxz
or
jecxz
and
push
inc
push
mov
fistl
mov
fistpll
xorb
mov
rcll
mov
jb
adc
lock
into
dec
loope
pop
mov
jnp
or
jecxz
popf
cli
test
lcall
pinsrw
lret
cmp
mov
dec
sbb
roll
cmp
out
lret
call
rolb
cs
xor
adc
mov
in
fdivrs
test
bound
mov
pop
and
sbb
pop
cwtl
stos
fs
aas
mov
stos
sti
dec
and
dec
xlat
push
xchg
and
fstl
pop
insb
mov
fsubr
movsl
int3
stos
adc
in
loopne
test
cmp
mov
addr16
mov
or
push
push
cltd
jns
in
mov
sbb
popf
cltd
jge
sbb
mov
dec
inc
imul
jl
js
pushf
push
mov
jecxz
push
inc
int3
addr16
add
pop
push
aas
mov
jb
push
out
out
repz
add
jp
ss
loop
rclb
ja
inc
loop
dec
fs
imul
dec
jmp
cli
repz
and
les
push
repz
in
sub
adc
fadd
xor
push
mov
leave
jle
xor
ret
sub
push
mov
and
inc
jecxz
rcrl
pushf
int
ja
mov
cmpsb
xchg
fisubrs
sar
popl
in
sub
movsl
push
aam
dec
jo
xchg
pushf
ja
imul
push
xor
test
jno
popa
loope
aaa
jmp
push
cmc
dec
mov
jg
in
les
pop
xor
fwait
out
inc
inc
fstl
loop
movsb
pop
sub
sahf
outsb
hlt
push
cmp
mov
shlb
insl
push
mov
aam
into
mov
push
xor
dec
jecxz
leave
or
lret
dec
mov
pop
add
imul
push
push
scas
fistps
push
lods
dec
enter
call
and
xchg
ret
addr16
subb
fisttpl
mov
pop
cmp
daa
xlat
and
jp
add
xchg
xchg
adc
cmc
gs
lock
out
leave
mov
pop
mov
aaa
pop
sar
icebp
gs
xchg
ja
xchg
xor
cmpsl
adc
push
mov
and
arpl
mov
inc
mov
in
in
dec
or
add
jno
cltd
lahf
out
lret
dec
aam
sbb
cmpsl
jno
adc
mov
inc
pop
sub
inc
shl
sub
dec
cmp
adc
sbb
mov
jg
xchg
sub
aad
lret
out
push
sarb
dec
inc
or
sbb
movsl
dec
aam
dec
adc
adc
pop
or
push
inc
cmp
cmc
push
jle
dec
sbb
push
pop
sahf
loop
xchg
int
rcrb
pop
les
jb
mov
repnz
imul
mov
xchg
cld
test
dec
mov
mov
xchg
dec
ret
and
cs
fdivr
cmpsl
lahf
fxch
pop
xlat
push
inc
test
sti
call
and
dec
xorl
fmull
jno
cwtl
lahf
mov
mov
mov
push
cli
and
inc
or
scas
xchg
mov
iret
cmp
mov
mov
ror
in
fsts
rorl
dec
jo
xor
mov
add
out
jno
xor
mov
mov
scas
call
inc
loop
andb
and
loope
adc
adc
imul
xor
xor
sbb
pop
inc
or
sahf
sbb
pop
gs
std
and
in
cmc
dec
cmpsl
lcall
lea
les
mov
lcall
cli
jnp
sti
mov
scas
pop
push
sahf
stc
dec
out
testl
or
fdiv
into
push
gs
push
cmp
mov
fbld
cwtl
enter
mov
int3
and
or
xchg
shl
add
iret
cmp
mov
push
adc
mov
pop
xchg
mov
and
xor
xor
call
push
jecxz
fbld
mov
ficoml
shl
push
mov
jle
test
or
scas
mov
pop
xor
sbb
pop
inc
loope
pop
dec
pushf
loop
push
jae
outsb
sahf
adc
xchg
enter
inc
push
push
xchg
add
and
loop
pop
es
mov
shll
inc
xchg
outsb
push
adc
out
jb
jb
mov
or
cmp
ret
cwtl
push
hlt
addb
jnp
stc
dec
inc
jo
loope
mov
mov
mov
mov
test
add
dec
mov
loope
ja
sbb
and
ljmp
sub
mov
pop
cmp
int
call
cmp
mov
dec
sub
aas
mov
sub
arpl
mov
push
cmp
insb
je
fmull
inc
mov
and
xchg
jle
cld
loop
icebp
jae
xor
hlt
pushf
and
fsubrp
mov
fwait
xchg
sbb
and
add
or
dec
cmp
in
add
sbb
fwait
mov
arpl
hlt
and
rcr
mov
scas
add
enter
ds
loop
shlb
xor
jns
in
cli
jnp
lock
fnstsw
sbb
push
hlt
ljmp
outsl
xor
mov
sub
pop
xchg
cmp
push
je
adc
and
icebp
fidivs
push
push
scas
out
testb
enter
stc
pop
hlt
lea
fwait
inc
sub
pop
stc
hlt
dec
dec
xor
pop
into
push
cmp
dec
sub
mov
dec
aaa
sub
int3
mov
in
aaa
xor
adc
fdivl
stos
jne
nop
xchg
sub
aad
xor
in
into
jno
dec
dec
or
mov
mov
xor
dec
inc
dec
rcll
add
sub
pushf
iret
xor
dec
cmp
dec
xchg
cmp
in
jle
lahf
imul
push
pusha
pop
pusha
lods
jno
cmp
cli
or
push
or
fisubrs
jo
adc
adc
pop
dec
fcoml
sub
cwtl
lcall
cmpsb
pushl
loop
xlat
jl
leave
fdivrs
lock
addr16
popa
lret
jne
push
mov
lahf
pop
aas
outsb
pop
icebp
xchg
lret
scas
shll
cld
and
xchg
xchg
lods
testb
jne
popf
pop
adc
adc
cltd
inc
jge
mov
cli
add
xor
add
push
lcall
and
mov
mov
xchg
popa
pop
ret
dec
enter
outsb
cli
xor
sbb
nop
push
cmp
arpl
mov
sub
subl
xchg
push
ljmp
in
ficompl
paddsb
in
cmp
push
mov
inc
adc
iret
shlb
cmp
sbb
fdiv
push
jnp
in
xchg
cltd
xor
out
ret
jne
mov
jg
aaa
inc
mov
call
push
out
mov
mov
lret
inc
test
loop
daa
and
aam
mov
or
mov
bound
dec
adc
xchg
mov
xchg
dec
push
lcall
mov
push
jbe
aad
sub
mov
daa
or
bound
xchg
out
imulb
lea
lahf
dec
idivb
shlb
and
ja
and
push
lock
int
outsl
cmpsb
pusha
dec
popf
inc
sbb
inc
in
lahf
fwait
scas
pop
imul
cltd
loop
push
lods
and
shl
inc
lret
xchg
add
sub
dec
mov
push
sarl
js
enter
dec
data16
sti
popl
push
pop
lcall
rol
fld
and
sub
mov
dec
pop
hlt
shll
xor
mov
push
mov
push
mov
cmp
int3
cmp
int3
adc
sahf
mov
aam
pop
push
shr
adc
mov
in
mov
test
pop
aas
lret
lret
fcmovnb
push
test
adc
sbb
rcrl
sbb
inc
adc
stc
inc
xchg
repz
sbb
jns
push
mov
shlb
into
aaa
or
jge
xchg
mov
xor
or
sbb
mov
in
sbbb
pop
xchg
inc
movsb
repnz
test
andl
mov
sbb
dec
inc
shll
jae
cltd
movsl
fadd
sbb
lea
lahf
xor
pop
jp
inc
pop
int
ret
push
dec
sarl
mov
mov
and
out
call
add
cmc
subb
mov
push
loope
add
pop
mov
int
pop
arpl
das
shll
fucomip
cmpsb
add
mov
adc
shr
cmpsb
dec
sar
mov
jne
ja
das
mov
mov
inc
arpl
inc
or
ror
add
jp
mov
add
dec
popa
sbb
pop
fcmove
ret
and
dec
xor
push
mov
xchg
jo
sti
test
mov
pop
je
adc
loop
push
pop
cld
loope
add
clc
fldenv
mov
leave
out
out
pop
xchg
and
cmp
jge
adc
aam
push
repz
in
dec
inc
std
sbb
mov
mov
sbb
mov
jbe
repz
jb
mov
mov
pop
aam
push
cld
mov
push
mov
pop
imul
add
es
cmp
jmp
movsl
jge
xchg
mov
not
pusha
das
pop
mov
outsb
or
xor
mov
and
ret
xchg
aad
jmp
ja
and
mov
std
rcrb
loope
insl
cmp
gs
xor
jge
mov
cli
xor
pop
ss
sbb
int
ljmp
cmc
scas
cmp
pop
clc
pop
sbb
pop
adc
mov
jo
inc
mov
sbb
cwtl
push
pop
cwtl
sbb
and
int3
js
movsl
jl
fwait
mov
ret
mov
xlat
dec
mov
out
jmp
xchg
push
aas
test
out
repnz
fs
mov
in
fcoms
and
cli
int3
xlat
add
xchg
imul
push
cmc
fmulp
jge
xchg
jl
repz
sub
mov
std
daa
sbb
sub
mov
std
in
or
shrb
in
ss
adcl
ja
push
sbb
bound
sub
stos
repnz
daa
xchg
mov
xor
jb
inc
ret
jle
jp
push
in
jp
pop
jo
xor
add
mov
pop
jp
sti
or
mov
aaa
loope
test
shlb
add
outsl
adc
mov
fidivl
mov
push
adc
lret
jns
jl
add
out
or
inc
fisttpl
xchg
mov
enter
pop
inc
jle
outsl
pusha
sbb
stc
mov
pop
sbb
rolb
cmp
jnp
cwtl
fstpt
adc
mov
inc
inc
sbb
push
stos
repz
jge
pushf
rolb
mov
popf
pop
lds
cmp
inc
outsb
push
inc
out
cmp
pop
jns
xchg
jmp
pop
pusha
cli
xchg
stc
push
xchg
and
les
mov
fwait
aam
vpsllq
scas
cmpsl
test
in
into
int
stc
jbe
or
adc
jbe
mov
bswap
fisubrs
push
inc
xor
ja
push
xor
jns
add
sub
cmp
push
icebp
lret
jge
fisubs
push
test
and
jno
inc
in
shl
movsl
push
sub
and
xor
xor
repz
retw
in
fdivrs
and
pop
out
mov
dec
push
sbb
sub
xor
add
dec
ret
in
jmp
mov
inc
xchg
mov
sub
sbb
and
jle
jl
and
pop
cmp
adc
aam
jne
push
inc
add
out
push
xlat
sbb
or
sahf
inc
push
xor
adc
lods
push
test
out
das
out
xor
mov
cwtl
cs
jbe
inc
mov
aaa
repz
fwait
jno
aaa
sbb
repz
sub
mov
test
sbb
imul
fistps
jnp
xchg
push
sub
data16
into
aaa
cmp
cwtl
stos
aad
mov
enter
cmpsl
cs
jecxz
mov
mov
lds
aaa
push
mov
fmuls
xchg
aas
add
jg
loopne
fwait
add
mov
ljmp
or
clc
test
jo
loope
jns
out
pop
outsl
and
mov
push
imul
add
pop
jno
sbb
imul
jp
xchg
lret
iret
mov
loopne
iret
xchg
cmp
pop
outsl
stos
popa
add
push
xchg
or
adc
ss
std
add
mov
stos
push
mov
sub
insb
cmp
rcrl
int
mov
clc
shl
mov
push
vphaddudq
clc
cmp
inc
rorb
jecxz
imul
pusha
push
cmpsb
xor
and
push
js
out
imul
mov
mov
in
xor
inc
pop
or
test
std
movsb
pop
iret
push
dec
add
pusha
xor
scas
sbb
popf
pop
and
jo
cli
and
sub
popf
int3
jbe
in
pop
loopne
xchg
ljmp
pop
inc
sbb
push
inc
fildl
pop
shlb
data16
bound
add
arpl
push
in
es
out
inc
and
mov
sub
lret
rorb
aaa
lret
out
sbb
add
push
in
test
cmp
xor
js
pop
in
sbb
sub
shll
test
cmc
loope
shrl
mov
fstpt
shlb
xchg
mov
jae
jno
lret
adc
movsb
push
dec
popf
imul
mov
das
sarb
dec
adc
push
mov
sarb
mov
div
xchg
ss
and
cmpsl
loopne
ret
dec
arpl
or
std
sahf
out
fstpt
bound
gs
adc
testb
call
outsb
push
stos
pop
mov
or
push
aad
cmp
xchg
pop
push
mov
jne
loopne
push
and
lds
push
xchg
mov
mov
mov
jb
sub
aaa
sbb
dec
imul
push
adc
outsb
mov
shlb
add
sbb
mov
imul
mov
aaa
cmp
scas
and
testb
pop
adc
aas
sub
icebp
into
jae
sarl
and
enter
inc
xor
fsubr
mov
out
push
mul
mov
cmpsb
xlat
cmp
insl
or
int3
jae
sub
in
or
xchg
test
sbb
xchg
dec
gs
inc
out
test
xchg
adc
lock
gs
add
adc
adc
lahf
test
fcmovne
and
ss
hlt
mov
adc
addr16
xchg
lds
fiaddl
or
and
inc
xchg
sbb
leave
loope
fld
pop
jp
fsubl
and
pop
dec
inc
clc
nop
add
fcomps
clc
insb
andl
xchg
mov
cmp
cmp
jb
call
scas
lahf
call
cmp
outsl
in
mov
fs
into
or
imul
cmp
sti
jno
ljmp
jg
mov
push
or
sbb
es
xor
pop
sub
call
fdivp
fs
xchg
adc
ret
cltd
jns
jo
lahf
dec
fnstsw
jo
imul
call
xor
cmp
xchg
xchg
mov
andl
dec
add
fs
lret
ret
scas
shr
scas
mov
fwait
inc
outsl
repz
add
pop
bound
lods
hlt
mov
sbb
pop
fcoml
inc
cmpsl
push
lahf
test
sbb
dec
aaa
shrb
jne
push
inc
pop
fcos
or
in
jae
mov
in
call
xchg
add
adc
fmul
shrb
lea
push
cwtl
je
roll
xor
pop
loop
push
mov
sub
pop
loop
fidivrl
sbb
and
out
dec
pop
popf
cmpsb
add
popf
sbb
xchg
push
lcall
xchg
aaa
rcpps
lret
sarl
jl
loopne
stc
scas
outsb
xchg
cmp
cmp
lods
pop
pop
filds
ret
incb
xchg
mov
xchg
shlb
lea
call
and
out
insl
push
mov
adc
or
out
loop
mov
or
or
lea
enter
in
icebp
push
adc
pop
adc
popa
test
mov
or
sbb
and
ficoms
jl
push
jmp
pop
dec
xchg
sub
pop
std
mov
shll
sbb
and
sbb
inc
and
xchg
mov
jle
jbe
dec
fdivs
cmpsl
and
xchg
lea
adc
and
push
outsb
sbb
ret
cmpsl
jo
jg
ss
ljmp
stos
lret
stos
into
faddl
sub
lods
insb
xorb
mov
or
imul
push
mov
jne
dec
ss
cmp
xchg
mov
xor
mov
and
jmp
rclb
cmp
int
jae
loopne
mov
or
sbb
addr16
mov
addl
out
inc
loope
add
and
test
outsl
fs
test
inc
rorl
fstpt
call
sub
pop
stc
dec
or
mov
pop
pop
xchg
aad
inc
out
add
and
add
jbe
das
adc
call
clc
adc
xlat
xchg
repz
daa
lock
dec
cmpsb
xor
mov
add
add
xor
jp
add
mov
sub
in
cmp
jns
into
inc
stos
push
neg
inc
insl
mov
cli
mov
or
out
test
hlt
js
push
inc
mov
cld
mov
mov
jmp
adc
scas
mov
xchg
in
ror
mov
hlt
push
sti
jbe
xchg
xor
inc
xchg
sbb
inc
sti
adc
adc
loop
test
xchg
aaa
or
mov
ss
add
xor
lds
popa
inc
inc
loope
cld
orb
sub
jae
imul
xchg
in
push
xor
cmp
xchg
adc
pop
mov
dec
inc
xchg
inc
push
cmp
imul
xchg
adc
mov
fildl
in
hlt
repz
daa
sub
gs
andl
fistps
or
cmp
lock
pop
xor
pushf
outsl
imul
sub
lret
and
xchg
sbb
xor
fsubrs
stc
idivl
roll
xchg
inc
test
push
mov
jecxz
scas
jge
pop
add
xchg
ds
test
cld
inc
jecxz
cmp
sti
ss
addr16
inc
call
jno
pop
test
ss
stos
jl
push
xchg
cli
pop
lea
adc
and
adc
or
stc
stc
lds
sbb
cltd
or
adc
dec
aam
push
xchg
lret
mov
outsl
pushl
sbb
fimuls
xchg
and
sahf
jmp
pop
insb
fs
scas
mov
sbb
ficompl
ds
lret
scas
lret
cli
stos
xor
mov
int
into
pop
and
cmp
test
cmpb
jp
leave
ss
vpaddd
sub
test
mov
in
cwtl
out
mulb
jne
mov
ljmp
xlat
mov
cwtl
ss
pop
test
inc
out
cmp
mov
xor
ror
std
addr16
lahf
cmp
rolb
cmc
mov
mov
adcb
pop
outsb
int3
or
cmp
mov
aam
movsl
ljmp
les
rcr
inc
jp
cmp
setne
rcrl
push
push
xchg
loopne
mov
xlat
sub
enter
ja
sbb
mov
push
pop
sar
sbb
push
popf
test
mov
aad
sahf
dec
test
stc
dec
dec
lock
xor
out
cltd
xlat
mov
adc
ffreep
jecxz
xorl
cmp
inc
inc
je
in
jp
in
aam
mov
shl
inc
jl
ss
mov
outsl
or
or
in
fwait
or
dec
dec
into
das
push
mov
stos
enter
inc
jp
mov
movb
cld
or
pop
push
je
andb
mov
xchg
push
hlt
inc
lock
mov
jle
idivl
sbb
mov
push
xchg
xchg
mov
in
pop
sub
decl
adc
leave
out
int3
nop
add
lret
sbb
add
xchg
mov
enter
ds
mov
ljmp
push
inc
cld
jns
push
push
cmp
in
call
add
int
stos
sarb
push
aas
cmp
jno
rorl
aaa
sbb
xchg
inc
xor
pop
mov
daa
or
les
dec
int3
insb
lret
push
inc
push
mov
addl
sub
mov
jae
inc
mov
mov
sub
int
stos
jecxz
jae
lahf
sub
inc
mov
add
daa
dec
xchg
push
push
mov
inc
ds
cmpsb
pusha
sbb
scas
repnz
xchg
inc
movsb
cmp
mov
je
jno
and
fidivs
inc
je
sbb
cli
shll
cmp
scas
xchg
adc
mov
mov
aam
and
jnp
lret
cmpsl
xchg
jno
nop
sub
int3
dec
fmull
push
dec
shr
out
cmp
inc
push
movsb
movsb
ss
pushf
data16
iret
je
dec
xor
push
sbb
fbstp
xor
fisubrs
mov
dec
xchg
jnp
fldenv
jecxz
je
data16
cmp
bound
in
lret
js
xchg
cmp
cli
push
jl
dec
xor
jl
jae
rolb
aas
pop
stc
ret
mov
aaa
stos
jb
repnz
mov
daa
arpl
nop
fldenv
cmp
mov
loope
xor
and
mov
dec
int3
xor
sub
push
loop
js
mov
cld
cmp
negl
imul
inc
and
cmp
js
negb
fstl
and
frstor
jmp
and
ror
notb
xor
and
aas
inc
shll
test
push
jb
push
mov
add
pop
sahf
inc
or
mov
lcall
cli
cltd
nop
mov
xchg
sub
mov
jo
test
ds
xchg
and
push
mov
push
jns
imul
pop
stos
jb
sub
xor
jp
or
push
jno
in
sbb
bound
sub
sarb
sarb
sbb
addr16
jns
push
adc
or
dec
jmp
sbb
xor
cli
jg
xor
int
xchg
lcall
mov
xor
das
cmp
or
enter
cs
ds
test
xor
or
adc
repnz
int3
mov
jle
sub
movsb
add
adc
jl
sbb
mov
incl
int3
clc
dec
adc
insb
cmp
sub
arpl
nop
sbb
push
mov
ds
aas
sbb
sub
cwtl
imul
aas
aas
ds
dec
loopne
aam
sbb
inc
ds
add
and
cmp
jno
or
rclb
or
andb
xor
and
sub
imul
sub
imul
sub
addb
cltd
mov
je
xchg
dec
pop
lret
das
sub
or
hlt
mov
sbb
add
ja
inc
pop
push
mov
enter
jbe
lret
repnz
bound
lret
out
icebp
push
or
cmc
data16
xchg
xchg
mov
adc
xor
and
jb
adc
or
cli
rep
xlat
cmc
lret
jle
and
daa
jp
sbb
mov
mov
or
or
adc
sub
inc
popf
das
lods
xchg
or
lcall
in
push
fs
sub
insl
push
aam
fwait
jns
xor
idivb
clc
scas
or
xor
mov
mov
mov
mov
test
in
scas
fstpl
mov
sti
es
sub
jmp
xor
mov
in
fmulp
je
stos
inc
pop
dec
cmp
insl
shl
cs
mov
fldpi
mov
lcall
lods
fistpll
cld
add
dec
mov
ljmp
pop
loope
arpl
test
insb
inc
lcall
bound
roll
adc
adc
pushl
cmpsb
xorl
cli
sub
pop
daa
pop
push
test
sub
add
icebp
sbb
adc
dec
iret
pop
insl
mov
xor
pop
pop
pop
mov
or
movsl
ljmp
ljmp
dec
mov
mov
add
mov
pop
das
jge
iret
inc
aas
jns
sub
scas
notb
cs
test
ljmp
mov
ja
pop
sbb
push
lahf
mov
lret
bound
xor
and
xchg
jmp
add
inc
jmp
fdivr
push
movsb
sbb
icebp
or
repz
js
and
pop
mov
xchg
rcll
add
cli
pusha
popa
mov
and
mov
add
js
out
mov
lock
clc
jge
adc
push
and
and
push
cmp
fmull
lods
int3
xor
ret
xor
in
xor
jle
jg
inc
mov
xor
jns
int3
imul
insl
inc
push
addl
mov
scas
in
lods
loop
lahf
and
sahf
inc
out
and
push
adc
inc
fdivr
xor
movsb
push
sbb
dec
out
adc
jmp
pop
enter
loop
test
stos
xor
or
test
nop
movsb
cmp
mov
mov
mov
and
push
das
and
mov
sbb
cmpsl
and
rclb
adc
mov
inc
xor
fbld
add
jl
mov
pop
andl
adc
shr
or
xor
dec
and
xorl
test
xchg
or
inc
rorl
rcll
or
xchg
rol
push
clc
jle
push
insl
push
or
or
dec
inc
addr16
mov
jmp
call
lods
push
mov
lods
andb
mov
sbb
fs
inc
stos
jne
cmp
jecxz
fidivrl
das
push
pop
js
xor
testl
imul
sbb
cltd
dec
inc
lcall
iret
arpl
sbb
je
mov
push
stos
jns
and
add
inc
fisubrl
call
ret
cmp
sub
sub
repz
mov
or
xchg
insl
rorl
lahf
mov
hlt
inc
add
jb
dec
mov
jl
push
mov
pop
mov
lcall
out
add
and
xchg
aad
mov
fistpl
sti
mov
dec
shlb
xchg
push
rcl
dec
or
mov
cmp
sub
fldl
pushf
loop
scas
adcb
clc
out
addb
lcall
ja
xchg
sbb
add
rclb
sub
xchg
mov
scas
mov
push
add
push
jb
in
push
push
mov
jnp
jbe
out
pop
iret
jecxz
mov
mov
jle
js
dec
cmp
stc
lret
sub
jecxz
ljmp
mov
fldl
fdivr
int3
mov
jp
push
lahf
es
jl
leave
and
aad
cmp
ss
loopne
lds
sbb
mov
adc
insb
sbb
mov
in
addb
xlat
pop
xor
push
leave
inc
inc
adc
mov
or
dec
xchg
cmp
adc
sbb
movb
mov
in
pop
xlat
scas
cmp
xchg
insb
dec
outsl
ror
bound
push
fsubl
dec
icebp
pop
cmp
sbb
mov
push
out
push
xlat
outsb
mov
push
insl
mov
rclb
sbb
sub
lods
aam
mov
pop
push
cwtl
loope
hlt
imul
mov
pop
loop
int3
int3
mov
and
scas
add
mov
test
movsl
dec
dec
pop
xor
jbe
pop
int
add
jbe
jecxz
idivl
jmp
iret
es
inc
sbb
mov
pop
cld
cmpsb
sub
lcall
popf
clc
mov
xlat
push
pop
adc
insl
out
cmp
sub
nop
mov
movsl
js
mov
or
mov
xchg
and
or
filds
lcall
mov
add
mov
cld
push
inc
sahf
test
mov
xchg
sbb
cmc
pop
std
pop
fisttps
xchg
int
loopne
dec
xor
fcmove
mov
lahf
cmpsl
pop
lock
sbb
pop
xor
pop
std
imul
sbb
sub
dec
loop
jne
out
sbb
movsb
mov
dec
cmpsl
cmpsl
std
jecxz
das
cmpsl
fwait
addr16
push
negb
rolb
aad
mov
rolb
cmpb
outsl
addl
gs
shlb
mov
jo
lahf
int
jns
shll
sti
jnp
xor
adc
xchg
and
xor
pop
outsl
mov
adc
lret
cmp
imul
cli
ss
loope
fsubrl
xchg
mov
in
into
jae
sub
lods
inc
pop
push
push
mov
mov
bound
stc
fwait
jl
pop
outsw
pop
mov
in
pop
loopne
sub
mov
pop
mov
push
sarl
or
add
pop
clc
lods
mov
cli
mov
jae
mov
xchg
xor
ret
xchg
jecxz
xchg
xchg
cmp
lret
sbbb
pushf
cmp
dec
pusha
out
lret
mov
unpckhps
sbb
rcll
add
mov
sti
lea
jmp
inc
pop
jl
xchg
fiaddl
dec
inc
push
xchg
add
mov
daa
and
les
pop
cld
hlt
ret
push
int3
lds
aaa
rclb
into
inc
dec
jne
mov
pop
rorb
enter
loope
js
and
mov
jne
repz
sbb
cmpsl
mov
aas
add
mov
or
adc
or
dec
push
push
sbb
xchg
leave
lahf
pusha
mov
push
es
andb
in
cmp
iret
mov
sub
std
mov
mov
loop
cli
aas
pushf
push
lds
enter
xchg
and
adc
leave
xchg
mov
lods
inc
xchg
cmp
cmpsl
loop
lds
in
dec
push
dec
push
sub
enter
arpl
lret
xchg
arpl
or
push
filds
sbb
clc
inc
push
cmc
aam
add
loop
lahf
sub
out
fisttps
outsb
cwtl
xor
or
adc
xchg
mov
inc
out
push
or
ss
dec
dec
rolb
mov
inc
aad
test
addr16
jae
leave
fwait
ret
and
cwtl
xchg
adc
jg
pop
xor
add
sub
mov
sbb
aam
popa
inc
mov
imul
clc
cmp
mov
or
in
das
jae
loop
inc
adc
addr16
repnz
gs
das
pop
mov
mov
jl
jae
add
nop
out
imul
shrb
sub
push
xchg
and
mov
cwtl
in
ja
leave
out
xchg
rcrl
scas
jno
sbb
sbb
out
je
arpl
sbb
add
adc
lahf
orl
dec
push
repnz
fdivl
fneni(8087
xor
imul
and
fists
icebp
fsts
imul
mov
mov
imul
sti
test
cltd
js
push
xchg
enter
push
or
mov
rorb
stc
cmp
adc
mov
mov
or
outsb
add
mov
pop
mov
add
cmpsb
mov
mov
inc
jle
es
mov
mov
negl
adc
aaa
inc
std
sar
repnz
push
jo
test
mov
mov
push
push
mov
xchg
mov
cmp
pop
cli
cmc
pop
jbe
fdivl
cmp
imul
mov
sbb
addl
and
bound
xchg
cmc
inc
or
or
sbb
iret
je
cmpsb
mov
notl
mov
push
jmp
js
negb
cltd
inc
adc
xor
xor
or
pushf
outsl
sub
fisubs
mov
add
pusha
aaa
dec
arpl
add
into
sub
push
or
jge
gs
rol
xor
push
mov
xor
es
sbb
sub
js
xor
sahf
fidivrl
stc
push
icebp
dec
cs
stc
movsb
sub
mov
push
xor
inc
or
xchg
xorb
mov
fimull
sahf
bswap
loop
sub
push
lea
repnz
push
xchg
or
or
xchg
js
not
jg
mov
inc
or
aaa
scas
ror
loopne
pop
lahf
pop
int
or
mov
push
add
mov
cmc
mov
cld
int3
mov
fidivrs
test
pop
cltd
andl
cmpl
and
mov
cmpsl
clc
sbb
mov
jbe
xor
push
jecxz
pushf
push
jge
xchg
mov
cli
scas
and
xchg
push
and
rcrb
xlat
icebp
sub
or
mov
test
lahf
xorl
adc
cmpsb
add
popf
das
mov
and
stc
nop
lods
movsb
pop
shlb
aam
add
mov
jmp
jb
aam
lret
push
xchg
repz
mov
xchg
js
sbb
add
incl
jg
test
sbb
push
out
jg
mov
dec
movsb
fists
out
push
lret
iret
dec
pushf
pushf
mov
imul
cs
popf
test
dec
push
xchg
cmp
cmp
dec
cmc
and
cmp
decb
jns
push
xor
push
mov
ds
fsubl
xor
nop
lret
pop
ja
out
push
in
mov
push
mov
and
inc
movsb
pop
jg
cltd
scas
dec
mov
xor
dec
orb
cli
repnz
movsl
cmpb
add
sub
push
mov
stos
out
clc
and
mov
ja
frstor
fldcw
fists
push
movsb
or
repz
ja
jno
push
push
add
mov
dec
dec
or
ret
push
mov
push
cld
repz
mov
iret
sub
stos
out
xor
in
test
dec
push
pop
fisttpll
mov
mov
pop
mov
das
mov
xor
jnp
mov
push
push
or
stos
rcr
and
cmp
jne
sub
sbb
dec
stos
push
mov
mov
dec
test
mov
xchg
lods
mov
adcb
mov
mov
dec
fisubrl
dec
cmp
fstl
rcll
add
popf
mov
pop
aad
punpcklwd
add
pop
testl
shrl
jb
cmpsb
and
ljmp
pop
movsb
scas
in
cmp
mov
fbstp
mov
pop
test
jae
mov
jle
mov
or
les
lcall
add
sub
sahf
xchg
ljmp
test
mov
cwtl
mov
lock
jg
add
jg
pop
jns
adc
into
roll
push
cmp
bound
fwait
lock
sbb
mov
mov
mov
outsb
dec
cmpb
loopne
scas
test
pusha
adc
and
lahf
shl
jmp
inc
into
xchg
xchg
jmp
fmull
pop
rcll
repnz
xchg
mov
dec
or
out
cld
filds
mov
mov
orb
push
in
sahf
jnp
adc
push
aaa
or
add
popa
fsubrp
data16
cmpsl
push
repnz
mov
addl
add
sbb
nop
mov
mov
sbb
daa
rolb
fsubr
jge
lock
int
sti
inc
aam
push
dec
xor
pop
sbb
lods
imull
scas
sarb
pop
pop
sahf
cwtl
icebp
cmpsb
imul
dec
pop
cmp
fcmove
push
mov
nop
int3
addr16
adc
in
xor
mov
mov
mov
inc
push
insl
mov
ret
mov
dec
jle
jns
or
jecxz
iret
mov
lea
jbe
daa
jno
jns
pop
dec
scas
mov
inc
subb
add
add
push
ds
jns
push
sub
adc
sub
roll
or
dec
and
cmp
dec
hlt
das
fndisi(8087
mov
dec
lret
iret
sbb
inc
cltd
dec
loope
push
dec
inc
inc
mov
push
mov
sbb
out
stos
fsubr
or
pop
mov
jnp
xchg
pop
cmp
cs
mov
clc
shl
inc
mov
insb
push
orl
xchg
push
sub
xlat
mov
push
insb
std
push
aam
or
lret
vmovdqa
movsl
les
mov
movsl
push
jnp
add
adc
jnp
mov
dec
add
data16
push
outsb
jbe
jo
roll
mov
sub
stos
mov
push
sbb
mov
ljmp
dec
push
mov
mov
rcrb
add
lahf
push
push
dec
dec
adc
sub
inc
push
sti
pop
mov
mov
push
faddl
mov
dec
mov
cmp
mov
push
push
inc
jle
loop
push
add
ljmp
mov
dec
mov
fadd
inc
ffree
testb
and
in
in
inc
into
pop
gs
enter
fcmove
fsubr
int
adc
fsubs
jno
insl
or
xor
test
push
jp
xor
lds
jns
sbb
sbb
les
push
inc
sbb
pmullw
fmull
ljmp
jp
sahf
adc
dec
pusha
andb
pop
pop
mov
test
mov
push
jno
das
imul
cmp
mov
xchg
jns
gs
push
and
jg
dec
into
test
shl
movsl
cwtl
je
push
add
out
popa
lahf
mov
out
mov
fnstcw
dec
sub
loope
add
lock
inc
outsb
add
cmp
jo
insb
ror
cld
popa
push
fimull
jb
andb
jb
ffreep
mov
daa
sahf
ret
daa
je
push
push
mov
out
jo
call
adc
ficompl
dec
pushf
and
cmpsb
lcall
daa
add
sub
pop
loopne
or
fcmovu
das
mov
mov
xchg
dec
xor
test
push
dec
sub
mov
rcrl
xchg
jg
out
jns
jnp
in
push
mov
mov
sti
sub
mov
dec
nop
test
add
ljmp
or
fmulp
mov
hlt
push
mov
insl
cmp
pop
inc
out
bound
sub
push
ja
nop
jae
sub
mov
popa
imul
xchg
hlt
xchg
cmp
pop
mov
dec
or
mov
into
leave
mov
pop
and
adc
push
push
lret
or
les
inc
add
insl
loope
aad
xchg
or
adc
inc
push
xor
sbb
push
xchg
push
shl
jns
stc
loop
cld
mov
stc
add
pop
inc
loope
jnp
cmp
stc
cli
xchg
rorb
fidivrl
push
movsb
add
lea
sub
pop
mov
lret
xor
pusha
popa
pop
jmp
lret
cmp
lret
jo
test
xor
jge
push
sub
sub
aaa
es
add
push
in
in
shll
loope
dec
ja
call
cli
iret
shlb
cmp
out
ja
cmp
jnp
mov
dec
fldt
jmp
inc
inc
test
into
mov
test
lcall
loopne
rolb
sbb
adc
inc
dec
sbb
imul
daa
cli
cmp
ret
xor
out
clc
insl
pushl
inc
cmp
iret
mov
adc
je
or
and
test
imul
pop
dec
pop
dec
shlb
iret
mov
pop
ficoml
scas
inc
xchg
cmp
push
ret
leave
push
dec
jp
fwait
out
jmp
lds
mov
xchg
jmp
cmc
cmp
cli
push
lods
lods
mov
inc
push
es
ret
pop
push
out
pop
pop
or
dec
xorl
cmp
repnz
les
shlb
or
mov
xchg
test
popa
inc
add
lret
jmp
mov
sahf
mov
sub
jb
sbb
dec
pop
leave
addl
loop
pushf
inc
int3
fs
mov
adc
and
imul
xor
pop
fnstsw
gs
mov
aad
dec
and
arpl
test
rcrl
dec
sbb
cld
jbe
mov
cltd
xor
sub
inc
insb
inc
sub
jp
out
dec
rcrb
sub
inc
daa
shlb
lods
pop
fwait
das
cwtl
jmp
cmp
movsb
fstpl
test
lahf
mov
add
xchg
dec
mov
in
pop
pop
add
cmpb
push
sahf
push
mov
add
sbb
mov
addl
inc
mov
in
xor
mov
mov
mov
nop
inc
roll
hlt
in
lahf
test
cmp
pushf
push
cmpsl
fincstp
inc
mov
xor
mov
xlat
ss
das
dec
iret
dec
push
movb
call
jmp
shll
into
and
pop
cwtl
cmp
sbb
push
lods
xchg
out
fwait
xchg
data16
jns
and
es
sbb
pop
ss
mov
scas
mov
jb
lea
push
push
imul
out
popa
mov
or
test
push
or
out
mov
stc
cli
fildll
sub
fs
nop
mov
pop
dec
cmp
adc
or
hlt
addb
and
push
adc
or
and
mov
int
mov
lsl
inc
cmp
xchg
jg
testb
fisubrl
mov
lret
pop
mov
sbb
adc
out
xchg
mov
fistl
inc
movb
adc
addr16
sub
ret
adc
or
mov
movsl
addl
mov
test
push
dec
push
shrl
stos
stc
loopne
pop
push
out
push
push
iret
xchg
cltd
orb
mov
les
out
flds
sub
roll
mov
lret
dec
lret
or
in
lret
adc
inc
icebp
mov
mov
subb
call
pop
dec
pop
test
andl
xchg
call
push
aaa
int
jmp
shll
push
test
ljmp
mov
mov
mov
mov
js
lods
stos
xchg
arpl
out
adc
cmp
test
pushf
mov
icebp
and
pop
shl
repnz
ja
imul
mov
mov
add
rcll
mov
sahf
ja
test
push
mov
ret
leave
outsl
test
mov
ficomps
dec
call
hlt
push
neg
test
xchg
iret
pop
cltd
insl
imul
xchg
sbb
call
or
sahf
lcall
dec
fisubrl
mov
in
sbb
ljmp
and
lret
lea
jb
or
call
cmc
adc
push
repnz
lds
inc
sbb
outsb
mov
addl
pop
in
cmp
mov
pop
sbb
aas
fiaddl
repnz
lds
sub
in
jno
xor
jb
jno
mov
lock
fldt
pop
adc
jmp
pop
push
fwait
mov
push
sti
fdiv
clc
push
movsl
pop
lods
adc
bound
mov
push
ret
adc
xchg
insb
inc
mov
repnz
jge
hlt
es
loope
std
mov
adc
jnp
stc
dec
mov
mov
in
nop
mov
imul
les
fidivl
std
or
mov
sbb
mov
mov
push
push
adc
leave
mov
cltd
add
ficompl
pop
push
out
stc
loop
and
xor
sbb
xor
daa
sub
adc
adc
daa
and
adc
icebp
clc
frstor
inc
test
sbb
idivl
dec
mov
decl
mov
popf
and
int
inc
sahf
and
push
cmpsb
scas
sbb
frstor
push
pop
and
ljmp
sbb
xor
sub
arpl
jl
push
add
xor
shlb
inc
pop
std
or
mov
call
fwait
xor
and
mov
in
pop
sub
aam
je
push
data16
xchg
mov
mov
ficoml
xchg
aam
xchg
into
inc
sbb
pop
icebp
ret
jbe
dec
pop
push
rcr
out
shlb
sar
emms
sub
ret
sub
lea
push
and
dec
mov
ja
test
mov
cmp
sbb
divb
sbb
fdiv
jne
sbb
pop
mov
test
cmp
jns
adc
sub
les
cmc
div
push
data16
mov
je
rol
jge
mov
scas
xor
and
push
sub
mov
xorb
je
xchg
dec
sub
cmp
jo
out
pop
aas
fistpl
imul
adc
ds
inc
je
sbb
sbb
sbb
cwtl
cli
cli
or
cs
sti
adc
sbb
ret
imul
push
inc
mov
test
cmpxchg
dec
jns
add
pop
hlt
xchg
mov
dec
xlat
mov
or
add
mov
int3
or
dec
push
shrl
mov
vmovaps
dec
repz
sub
or
pop
out
dec
sarb
enter
adc
push
cmp
gs
and
movsb
push
ljmp
sbb
add
mov
in
aad
fmuls
jl
pop
daa
and
push
fmuls
lahf
in
outsl
mov
outsl
push
test
dec
xor
push
test
mov
pop
hlt
xchg
jo
insl
int
mov
insb
test
popa
mov
add
pop
xchg
hlt
repz
inc
and
inc
cld
pop
cmpsb
je
cmp
paddq
push
cmp
adc
movsl
xor
inc
adc
dec
in
and
and
js
inc
sarl
sbb
xor
push
and
pusha
shrl
stc
push
adc
fnstcw
mov
data16
xchg
or
cwtl
xchg
lods
and
mov
xlat
jp
inc
cltd
fisubrs
enter
mov
and
dec
out
ret
aaa
pop
push
stos
xchg
pop
stos
test
mov
lret
popf
xchg
push
ljmp
jecxz
dec
dec
xor
sub
test
pop
ss
inc
cmp
imul
mov
add
filds
mov
pop
shll
sar
mov
lret
fs
pushf
xor
mov
iret
or
sbb
aaa
cmc
jne
mov
fldl
test
pop
or
mov
sarl
mov
and
xorb
adc
jge
mov
inc
or
mull
adc
test
pop
addb
adc
cmp
cmc
shl
add
in
adc
cmc
mov
cwtl
ds
lock
adc
mov
dec
lods
mov
es
push
mov
sbb
sahf
movsb
daa
cmc
push
pop
sbb
jmp
nop
sub
ljmp
xchg
adc
jnp
jne
mov
mov
cmp
cmpsl
mov
out
fdivp
and
dec
jmp
and
popa
cmc
shll
pop
fmull
out
mov
out
outsb
shl
lods
pop
test
add
pop
aad
popa
or
fdivrs
lods
nop
dec
fadds
push
jnp
mov
push
push
stc
int
sbb
xor
imul
and
cli
stc
xchg
stos
shlb
icebp
cmp
add
outsl
cli
mov
enter
rcll
outsl
jae,pt
add
shl
push
push
push
mov
or
jbe
sub
xchg
mov
and
mov
mov
stc
or
jnp
pop
idivb
add
xchg
fstpt
mov
sub
popl
or
pop
rclb
adc
lret
cmpsl
mov
sbb
das
jae
sub
xor
shlb
or
arpl
mov
shrl
fcmovnbe
out
fwait
adc
xchg
xor
aam
data16
and
loope
cld
aad
push
test
fadds
jl
jl
mov
xchg
adc
loopne
dec
push
cmc
aaa
or
or
mov
add
popf
and
xchg
lock
fildl
lea
sbb
push
lret
loop
shrb
fistpll
inc
es
mov
iret
dec
add
adc
cmpsl
fisubrs
fprem1
das
add
xchg
jp
insb
loop
adc
call
inc
lret
xor
adc
add
cmpsl
cmc
push
sbb
sub
scas
dec
scas
insb
mull
cmpsb
stos
add
adc
push
pushf
test
pop
in
popa
roll
cmp
outsb
in
cmp
cmp
mov
and
pop
ds
int
lahf
in
aad
mov
sahf
jne
data16
sbb
push
or
pop
xchg
shll
or
test
scas
ss
enter
lods
leave
jne
lods
dec
and
push
mov
ds
ja
aad
popf
sbb
sub
mov
test
fldcw
lcall
insb
sbb
or
push
lds
mov
fstl
sahf
pop
cmc
call
arpl
mov
data16
lods
mov
pop
addb
stos
ds
lret
jns
inc
icebp
jo
repnz
mov
mov
xchg
pop
or
stc
fwait
cmp
xchg
ret
xchg
fists
mov
cmp
jmp
xor
pop
icebp
add
push
cmp
in
loop
mov
in
mov
roll
or
mov
int3
push
sbb
lds
adc
fmull
sub
jo
je
lea
scas
push
mov
pop
insl
sub
lcall
xor
cmp
pusha
jno
pushf
ret
cmpb
imul
sub
in
push
inc
push
or
ljmp
add
dec
pop
hlt
mov
sbb
xchg
and
cmpsl
push
sbb
loope
mov
jg
out
repnz
pop
dec
xchg
insl
cmp
xchg
dec
xchg
shl
cld
lds
sbb
jmp
and
adc
pop
sub
pop
mov
mov
push
cmc
jo
daa
loop
ror
xchg
test
and
loop
scas
xor
pop
jb
xor
std
xor
mov
pop
inc
push
cli
mov
imul
push
push
mov
and
bound
clc
cmp
fwait
or
cmp
mov
lods
inc
inc
test
dec
loop
call
or
xchg
mov
ljmp
fwait
rcrl
das
mov
in
cmp
sbb
loop
lods
ja
cmpl
mov
pop
movsb
push
xlat
orl
out
popl
or
dec
ja
aas
jmp
mov
xlat
push
push
xchg
adc
sub
out
notb
xlat
cmpsl
roll
pop
pop
mov
jecxz
dec
cmpsl
lcall
testb
sub
push
xchg
push
add
xchg
jp
icebp
dec
and
sahf
xor
insl
ljmp
add
aas
adc
dec
cwtl
mov
sti
movsb
xchg
add
in
jl
push
arpl
jo
scas
mov
dec
sub
int3
in
loope
xor
or
shlb
pop
movl
negb
xchg
or
lret
sbb
fstps
not
ficoms
pop
lock
stos
pop
adc
stc
rolb
enter
pushf
sbb
mov
jno
xor
and
mov
insl
jbe
arpl
pop
mov
rcll
sbb
or
jbe
ret
out
and
addr16
mov
shl
int3
shlb
out
ljmp
sub
add
inc
xor
in
cli
inc
pop
outsl
adc
dec
push
mov
mov
or
arpl
arpl
inc
leave
adc
rclb
sbb
cs
jb
lahf
nop
and
icebp
xchg
mov
out
mov
cmpb
add
sarl
in
int
mov
sub
pop
push
lahf
rcrb
sub
xchg
data16
jno
xor
lds
jnp
mov
inc
xor
dec
jbe
sub
enter
adc
inc
pop
das
and
mov
icebp
insb
bound
aad
sbb
lock
lahf
dec
push
push
xor
ss
jl
mov
mov
in
js
dec
sbb
inc
push
xlat
fdivl
es
or
and
mov
js
inc
out
xor
nop
addb
movsl
push
mov
push
sub
mov
pop
lret
and
jmp
push
dec
out
pushf
int
push
inc
mov
dec
mov
xchg
fdivrs
lds
xchg
dec
js
lret
mov
or
cld
call
cmp
xchg
dec
inc
push
sti
js
dec
cmc
adc
cmp
xor
sub
ljmp
dec
repz
fists
loopne
dec
cmp
fyl2x
add
mov
test
dec
in
xchg
mov
push
sbb
rolb
orb
es
mov
mov
mov
fwait
movsl
mov
je
ljmp
adc
clc
dec
shll
leave
mov
lock
sarb
jbe
push
out
jg
incb
mov
mov
jl
xchg
shlb
loopne
das
push
fmul
cmpsb
cmp
adcl
lret
and
lret
dec
fsubl
mov
inc
mov
cld
gs
mov
rcr
and
test
lods
ficoms
fucomip
xor
scas
jae
mov
dec
pop
fistl
pop
sbb
mov
add
lcall
sub
pop
mov
repnz
adc
fsubp
or
les
sarl
add
add
add
ljmp
or
out
cltd
int
mov
xchg
or
xor
cmp
rorl
mov
in
mov
or
lret
roll
loope
das
into
movsl
and
and
sbb
int
into
scas
lahf
out
pop
mov
mov
scas
insb
outsb
push
jmp
push
xor
mov
lahf
ds
sbb
push
in
sahf
mov
mov
push
jns
inc
xor
cs
sti
ret
cmp
ja
dec
jns
outsl
jg
push
and
clc
push
jne
nopl
mov
mov
dec
rorb
push
pop
mov
push
pop
into
dec
lds
pop
cmpsb
je
nop
sbb
movsl
add
xchg
cmp
add
fiaddl
mov
xor
xchg
orl
mov
insb
out
sub
adc
pop
fs
insl
scas
mov
inc
out
or
bound
fiaddl
call
jns
xor
adc
adc
sbb
adc
div
mov
lret
popf
add
sub
in
ret
test
aaa
cmc
or
push
dec
loopne
outsb
jne
fbld
push
lcall
jnp
dec
lcall
add
and
mov
adc
adc
data16
pop
xchg
adc
jno
or
inc
jl
xor
jno
divl
in
repnz
flds
int3
add
ja
outsb
xchg
and
pop
jle
adc
flds
inc
stc
ljmp
cmpsl
inc
push
dec
dec
mov
mov
jge
loope
cli
sbb
mov
jp
sahf
mov
push
stos
adc
jb
nop
stos
cs
add
std
xchg
jmp
inc
mov
cs
scas
jp
jecxz
dec
fmull
ror
inc
inc
cmpsb
clc
xor
sbb
js
sub
es
or
fdivrp
es
repnz
loope
cli
inc
adc
sbb
dec
call
fcomps
mov
popa
sbb
mov
push
sbb
xlat
adc
inc
mov
fldenv
movsl
mov
gs
bound
jge
movsb
mov
pop
call
lret
dec
adc
cmpsb
xchg
xchg
stos
inc
sbb
sbb
jle
outsb
ja
inc
sti
in
mov
mov
inc
xchg
test
pop
sub
mov
int3
mov
push
mov
mov
andb
mov
mull
ret
adc
sub
pop
cmp
and
jne
ja
mov
icebp
push
xchg
addb
mov
stos
scas
mov
sahf
add
mov
cli
and
mov
test
leave
popf
in
cmp
sub
lahf
xchg
mulb
mov
add
inc
fidivrl
shl
mov
pop
mov
cmpb
addl
cmp
pop
mov
push
push
out
jle
pop
leave
out
ss
out
cmc
aaa
push
xlat
iret
push
or
inc
add
mov
xchg
adc
push
stos
dec
out
hlt
scas
fcmovu
cmp
jbe
insb
lahf
inc
push
sbb
push
dec
push
cmp
push
stos
imul
xchg
xor
mov
dec
fmuls
ja
sbb
jecxz
ljmp
inc
dec
xor
gs
inc
in
xorl
out
inc
les
je
fs
fcomp
xchg
cmp
lret
cltd
inc
ljmp
push
push
jp
xorb
gs
add
mov
in
adc
mov
xchg
or
jp
mov
xchg
push
and
xchg
addr16
in
inc
pop
in
jns
aas
or
mov
mov
add
push
leave
nop
xor
dec
jns
inc
in
pop
jl
mov
repz
inc
xchg
lods
mov
pop
and
outsb
hlt
inc
inc
adc
sub
jns
push
test
and
sub
scas
fimull
int
cmp
push
ss
pop
popa
ljmp
pop
shll
adc
sbb
pop
adc
repz
and
mov
push
xor
lahf
pop
mov
insb
mov
scas
notb
mov
in
mov
stos
inc
mov
or
sahf
hlt
jge
pop
shlb
add
movsl
pop
fstl
lret
je
or
loope
mov
mov
inc
and
adc
bound
gs
or
or
cli
push
jnp
xorb
xor
cmpsl
je
add
sarl
ret
add
subl
pushf
xor
xor
dec
cmp
into
xor
aaa
dec
sub
and
push
pop
fistps
lahf
sbbb
push
jns
nop
lahf
movsb
shr
sub
jnp
and
sbb
cmp
sbb
int
mov
std
lret
imul
popa
sub
ja
jo
les
bound
cmp
push
in
mov
sbb
pushf
arpl
out
mov
roll
es
sti
push
adc
out
fsubl
or
mov
adcl
jl
mov
add
idivl
test
add
xchg
clc
push
pop
std
test
cmpsl
rcrb
dec
mov
lods
pop
out
cs
popa
lahf
loop
repz
xor
std
pop
mov
test
scas
add
mov
outsb
aad
addl
adc
test
add
hlt
movsl
iret
jns
iret
mov
or
insl
lahf
sub
jne
les
mov
or
cmp
inc
lods
pop
xchg
into
bound
faddl
xchg
add
aas
pop
jg
nop
ds
into
aam
sarl
out
push
xor
lret
addb
pushw
mov
cmp
dec
xchg
adc
mov
push
ds
mov
test
add
in
arpl
cmp
pop
adc
std
into
xchg
pop
or
pop
in
insl
iret
mov
mov
adc
fdivl
push
and
leave
int
xchg
mov
nop
repnz
ror
ss
repnz
jp
pop
add
mov
cs
sbb
stc
scas
cmpsb
rcrl
repnz
adc
cwtl
xor
xlat
mov
push
cmp
rorb
mov
or
ds
aad
add
adc
in
sbb
jecxz
in
mov
test
mov
je
lahf
fidivrl
call
inc
fidivrl
lret
push
clc
mov
sbb
loopne
bound
das
aas
cmp
or
call
pop
adc
aaa
movsb
mov
cld
daa
out
xchg
out
in
in
ficompl
fldt
push
jecxz
jbe
mov
sub
ljmp
sbb
lods
movsl
jp
out
mov
cltd
test
inc
jnp
dec
push
fucom
or
shll
addl
lahf
aas
test
pop
dec
shr
les
imul
pop
rep
jecxz
jl
jecxz
fbstp
xlat
inc
jo,pn
cmp
adc
jl
jle
mov
data16
stos
aas
mov
enter
cli
jo
jo
and
lahf
inc
dec
push
aam
pusha
pop
rcr
test
fs
push
xchg
cli
push
je
pop
leave
adc
mov
int
ret
inc
xor
cmp
add
sbb
cmp
add
inc
call
enter
pusha
xchg
mov
int3
imul
bound
xor
mov
in
stos
adc
pop
ds
loopne
pop
pop
jl
inc
push
fadd
adc
mov
imul
push
pop
xor
mov
out
test
push
sbbl
jb
or
nop
pop
cmpsb
loope
sbb
or
xchg
inc
mov
mov
inc
sub
popa
data16
lret
push
inc
out
and
push
pop
adc
rclb
fmul
adc
adc
and
pop
xor
cmp
popa
sub
and
sbb
or
inc
pop
cmc
mov
adc
xchg
lcall
jbe
and
dec
cld
sbb
mov
push
lods
mov
ret
or
mov
out
mov
xor
dec
es
lods
cmpsl
dec
dec
jmp
out
ljmp
icebp
push
lret
and
icebp
cmpb
imull
jae
mov
or
fldcw
addr16
sub
adc
adc
mov
pop
lea
ret
mov
sar
push
dec
xchg
inc
mov
fcoms
dec
movswl
fwait
icebp
lock
ret
dec
aam
outsb
add
lock
stc
popa
push
add
pop
test
das
push
adc
loopne
enter
vpmaddwd
not
jo
rorl
adc
sbb
push
loope
sbb
mov
mov
lahf
dec
xchg
lea
pop
cltd
scas
notl
dec
xor
or
mov
shrb
add
pop
inc
jns
sbb
sbb
sbb
lahf
mov
mov
xchg
pop
pop
jp
xlat
xchg
leave
or
pop
cmp
fwait
scas
test
xchg
aam
or
gs
push
shlb
out
ds
ret
lods
mov
into
mov
add
push
xlat
jo
mov
cmp
jbe
sbb
cmp
or
or
pop
out
and
lret
or
xchg
mov
mov
pop
data16
das
mov
les
jmp
mov
mov
andl
rcll
or
dec
mov
out
dec
xchg
stc
movsl
mov
xchg
sub
mov
data16
int3
jb
push
sbbl
dec
or
dec
dec
mov
cld
lods
repnz
popa
iret
pop
and
bound
jecxz
add
xchg
mov
mov
fdivl
nop
icebp
rolb
mov
in
xor
in
sub
mov
jne
push
clc
sarb
jns
dec
sbb
fisubrs
fucompp
push
fnstcw
add
mov
jp
hlt
mov
and
nop
cmc
xor
or
pop
hlt
push
scas
lock
and
int3
push
cmp
insl
sub
cli
push
lahf
push
les
aam
push
ret
jne
nop
inc
jecxz
movsb
pop
stos
mov
in
cmp
push
dec
popa
loopne
js
add
xchg
and
mov
ret
fimuls
ror
inc
xchg
mov
sarl
fidivrl
popa
mov
jns
sbb
adc
mov
mov
or
xor
ljmp
outsb
cmp
int
jl
push
sub
sbb
xchg
data16
push
adc
xchg
xlat
push
pop
pop
mov
jnp
sbb
jp
push
pop
into
js
ja
dec
sar
movsb
xchg
mov
dec
shrl
sarl
pushf
call
cwtl
sub
scas
scas
js
mov
out
dec
stos
and
xor
gs
cmpsl
cmp
addr16
add
and
imul
fsubrs
cli
ds
insl
and
testb
nop
or
inc
subb
cmp
stc
jo
inc
icebp
jae
and
rorb
xchg
shlb
or
clc
rol
ror
cmpsl
push
xor
push
push
and
push
cltd
lret
iret
mov
mov
jno
cld
mov
ret
daa
sbb
das
bnd
cli
inc
and
mov
pop
jl
aaa
inc
shlb
or
inc
mov
mov
add
mov
mov
daa
pusha
and
xchg
cmp
jmp
iret
subb
out
fbstp
sub
outsb
adc
add
syscall
pop
mov
in
imul
dec
sarl
popa
and
insl
dec
push
and
jo
cmc
call
rcr
fnstcw
dec
xor
daa
out
sbb
xlat
out
ss
mov
bound
pusha
xlat
call
shlb
int3
xor
mov
or
jns
or
and
cltd
xchg
in
hlt
loopne
push
scas
inc
dec
dec
or
xchg
lcall
xchg
push
pop
and
jmp
xbegin
cmpsl
push
push
mov
mov
lret
test
sbbl
xorl
mov
xor
lock
or
mov
mov
fisttpll
and
xor
ds
add
add
shll
pusha
mov
lahf
dec
sti
fwait
or
jns
fdivs
sbb
push
mov
jnp
lret
sub
mov
stos
xor
out
testl
aaa
mov
test
jg
xchg
daa
add
les
mov
jl
imul
sub
pop
mov
dec
out
roll
loop
xor
pusha
out
adc
ds
lret
mov
sahf
sbb
mov
ljmp
das
inc
lahf
mov
sub
test
cmp
icebp
mov
bound
pop
jno
or
pop
dec
or
mov
adc
and
sbb
pop
imul
fwait
in
aad
stc
adc
insb
cli
leave
xor
xor
xchg
and
push
xchg
pop
xor
out
or
pusha
sbb
outsb
or
fsubl
add
fldt
cmp
jl
add
and
and
jge
outsb
mov
xchg
shlb
inc
lock
inc
clc
cmp
subb
ja
sarb
xchg
pop
fisubrl
push
es
or
mov
dec
fs
mov
lahf
sbb
inc
sbb
sbb
mov
mov
mov
call
int
idivl
fisubrl
cmp
in
outsb
repz
out
ret
shrb
stc
add
aaa
ja
push
mov
popf
mov
loope
push
jbe
push
in
inc
adc
mov
pop
into
sbb
inc
loope
fcoml
add
cs
imull
xlat
data16
ljmp
lret
mov
test
movsl
test
jae
insb
adc
pusha
inc
cmp
outsb
mov
xchg
push
insl
daa
stc
shl
js
xor
inc
outsb
and
ss
adc
add
sti
push
andl
sbb
movsl
sbb
xchg
sub
jne
and
ds
iret
jae
loop
sub
xor
xchg
out
cmp
inc
jns
jmp
scas
out
dec
scas
cwtl
sub
das
cvtdq2ps
jecxz
shl
xchg
out
shr
adcb
pusha
arpl
add
ljmp
jns
out
mov
push
imul
mov
shll
jns
jae
call
sbb
sub
xchg
nop
push
lods
xchg
fiadds
dec
xchg
jmp
test
nop
xchg
lret
inc
pop
in
mov
icebp
loope
lock
sub
fnstcw
arpl
test
mov
add
outsb
xorl
les
imul
fidivs
outsl
dec
notl
jle
xor
test
cmc
imul
shlb
jns
cmc
into
leave
sub
jnp
jecxz
lock
out
in
pusha
xchg
mov
inc
xchg
mov
in
aam
adc
imul
xor
push
sbb
aaa
daa
mov
popa
sub
in
xor
cmpb
loop
mov
sub
inc
loop
push
in
call
pop
rclb
cmp
mov
push
lods
adc
je
sbb
inc
icebp
pop
push
sub
sarb
mov
xchg
adc
lret
or
sbb
xor
out
shl
rolb
sub
inc
xor
lret
stos
popa
jb
mov
and
push
push
cmp
out
inc
test
cmp
sub
push
ret
adc
mov
mov
sbb
shl
jnp
cmp
xchg
push
dec
pop
mov
jle
cmp
insl
arpl
lahf
adc
loopne
mov
xchg
pop
loope
test
push
lea
ja
inc
or
dec
sbb
adc
sbb
mov
mov
subb
les
add
lret
push
fcompl
add
mov
adc
pop
adc
ss
jg
xchg
out
fcoml
iret
in
jl
stos
mov
and
cmp
jne
push
mov
inc
dec
jb
jle
xchg
loope
mov
mov
int
aaa
cmpsb
rcl
and
minps
in
repz
lock
loopne
bound
ds
inc
jae
cmc
ficompl
inc
mov
jmp
in
adcb
fimull
mov
pusha
stc
sbb
mov
hlt
pop
push
add
sub
loopne
movsl
xchg
jg
ret
mov
xor
cltd
jne
repnz
mov
inc
mov
mov
jae
mov
jle
addr16
and
je
and
loope
jno
mov
sahf
xor
enter
adc
shrb
inc
pop
aaa
jae
shl
pop
sub
out
ds
jmp
cmp
lods
arpl
sarb
test
out
mov
inc
mov
imul
lret
add
jbe
xor
mov
test
xor
xchg
adc
out
test
aas
and
lsl
dec
gs
add
or
incl
dec
lret
in
fcoms
dec
xchg
jbe
pop
arpl
push
js
xlat
hlt
and
and
aas
sahf
aad
sbbl
mov
xchg
mov
ljmp
add
data16
mov
cmpl
lcall
inc
in
xchg
or
mov
adc
and
pop
loope
cmpsb
jl
lret
and
outsb
and
sarl
imul
insb
call
in
fcmovnu
lahf
dec
loope
inc
fcoms
cltd
or
xor
aaa
sub
pushf
or
xchg
inc
mov
ret
fwait
mov
push
mov
jns
add
iret
hlt
js
sbb
dec
jmp
push
mov
out
push
adc
aam
cmp
aad
mov
cmp
and
jns
mov
shr
mov
cld
xor
mov
fwait
int
inc
push
lahf
insb
arpl
sub
fs
adc
andb
shll
adc
xor
shl
les
inc
lock
fistl
mov
sarl
xchg
daa
jp
push
cmp
xchg
pop
cmovns
jle
je
xchg
clc
cs
pop
incb
sbb
cmpsl
inc
dec
adc
repnz
pop
cltd
int3
pop
dec
jb
lds
pop
fucomp
dec
sub
pop
jecxz
rorb
push
jnp
dec
inc
and
push
or
dec
aam
and
sub
sub
fs
xchg
add
mov
daa
pop
push
iret
jecxz
insl
movsb
mov
stos
jg
loop
sbb
cmp
aaa
test
pop
pop
es
fdivrs
adc
mov
movsl
jecxz
popa
fwait
mov
xor
lcall
inc
mov
ret
icebp
xchg
push
xchg
rolb
or
inc
imul
cmp
fiaddl
lock
int
mov
fldt
dec
mov
bound
sti
mov
scas
and
push
shll
shll
inc
mov
idivl
das
mov
lar
xor
cmpsl
mov
scas
fsts
and
arpl
cmpsl
add
sti
cmpsb
mov
or
dec
mov
ja
cmp
pop
jg
cmp
mov
inc
jae
or
out
fcompl
mov
sbb
test
sbb
xchg
repz
rol
cmp
mov
pop
dec
mov
dec
enter
outsl
fwait
sub
loop
mov
arpl
ja
iret
rclb
adc
loope
push
xor
adc
and
out
inc
rcr
lcall
jnp
add
fbstp
sub
add
add
roll
insl
xchg
and
rol
cs
outsl
imul
inc
cmp
lods
cli
mov
pop
sar
fwait
add
lret
pop
and
test
jmp
xchg
or
daa
cmc
pop
xchg
test
out
mov
inc
in
xchg
or
mov
es
mov
xor
and
adc
repz
ret
sub
les
mov
sub
cmpsb
ficomps
sbb
aas
cmp
sbb
adc
clc
mov
jnp
jne
mov
dec
bnd
and
add
jne
mov
in
ficompl
lods
inc
inc
pushf
mov
lahf
and
orb
xor
lock
mov
pop
into
lcall
fsubrs
sbb
push
jne
outsb
ss
dec
fstp
ret
mov
or
xchg
cld
push
push
and
enter
mov
add
inc
sub
sbb
dec
cmp
imul
arpl
aam
jo
mov
dec
dec
mov
mov
push
jbe
xor
and
xlat
ljmp
sub
in
idiv
sub
jl
pop
test
cmpsl
mov
mov
xchg
outsl
arpl
add
push
xchg
xchg
sub
jp
mov
movsl
push
sbb
mov
jo
nop
int
mov
pusha
or
cmpsl
push
out
or
jb
pushf
jb
inc
mov
mov
push
lea
fs
into
inc
lods
into
repz
or
and
repz
cmp
fs
pop
push
sbb
test
je
call
scas
into
out
jb
push
jl
pop
mov
mov
cmpsb
repz
sbb
mov
cli
lods
in
rcll
and
or
cmpsl
pop
mov
jb
lret
inc
aam
xchg
inc
xchg
test
lcall
dec
or
fwait
and
and
add
std
pop
pop
outsb
stc
cmp
mov
inc
jge
aad
fisubrs
and
sbb
fcmovne
icebp
sub
shlb
sub
clc
call
fidivs
stos
jne
adc
mov
call
mov
loope
popa
or
shl
add
pop
and
loop
cmp
mov
mov
xor
lea
into
jmp
sbb
in
pop
cmp
insl
stos
test
push
push
mov
mov
fxch
leave
jne
repz
adc
lret
cmp
cli
mov
pop
lock
rorb
es
xor
or
mov
pop
fisubrs
aas
idivb
shlb
sub
inc
aad
cmp
imul
xor
dec
test
mov
pop
out
movsl
test
icebp
loope
loop
mov
and
addr16
xchg
mov
cmp
stos
ja
adc
dec
cld
fdivl
mov
or
mov
jns
cmp
inc
pusha
fisubs
aas
outsb
adc
jne
cltd
bound
ljmp
sub
daa
fs
xchg
test
lcall
xchg
cmc
cmp
fmuls
addr16
inc
push
mov
mov
mov
jae
inc
push
mov
mov
xor
xor
jg
inc
xor
hlt
pop
lret
pusha
loop
xlat
mov
inc
int3
cmp
xchg
mov
xor
les
arpl
adc
inc
jb
xor
or
xchg
cmpsl
inc
jo
jmp
shl
ljmp
js
sub
ljmp
outsl
fdivrs
test
mov
fldenv
lahf
dec
aad
pushf
xlat
sub
std
loope
and
mov
jo
add
adc
inc
movsb
cmc
insl
rcrl
mov
lret
or
scas
xchg
call
aad
cli
notl
mov
and
and
loopne
test
sub
in
lret
inc
sbb
inc
fcoms
fimull
push
pop
and
pop
rcll
mulb
dec
add
fistl
xor
out
adc
mov
inc
cs
add
mov
xor
cmc
dec
pop
or
arpl
xchg
lahf
add
sub
shl
sub
lods
loopne
dec
xor
dec
push
mov
inc
lds
clc
mov
insb
enter
cmp
cwtl
pusha
aaa
push
or
add
or
fwait
add
cmpsb
imul
in
aaa
mov
in
shlb
push
mov
lock
pop
popf
sbb
xor
scas
inc
hlt
das
lods
fs
and
cmc
mov
test
jmp
or
xchg
xchg
je
inc
add
mov
cmp
mov
adc
mov
xchg
push
and
dec
sti
popf
test
xlat
stc
test
sbb
repnz
cmp
sahf
mov
push
sbb
or
dec
lods
mov
aam
js
inc
subb
sti
lea
jg
add
leave
mov
popf
cld
sahf
pop
xchg
ja
pop
test
imul
in
xor
cmc
jp
fidivl
sub
dec
sbb
inc
push
cld
popa
in
stos
divb
add
lea
adc
mov
inc
test
cmpl
mov
mov
adc
insb
inc
imul
xchg
iret
fildl
sub
push
cwtl
xor
xor
fidivs
lods
aam
testl
lcall
addr16
aaa
xlat
cmpsl
insb
ret
xchg
dec
leave
push
lahf
add
mov
add
jp
addr16
push
pop
lea
mov
cltd
push
mov
mov
inc
rcll
dec
mov
push
stos
dec
jae
lock
sub
mov
pop
sub
push
leave
cmc
ret
dec
cmp
shrb
out
fwait
mov
lds
pop
fstpl
push
add
pusha
shrl
jo
or
adcb
int
xchg
or
clc
xor
dec
xor
fsubl
movsl
mov
addr16
xchg
mov
add
jle
xchg
xchg
lea
sbb
jno
cmp
mov
mov
flds
adc
jo
lds
cmp
pop
push
fs
inc
adc
cmpsb
mov
pop
push
xor
out
in
out
dec
pop
sub
imul
mov
dec
sub
jp
pop
ret
daa
lds
and
pop
aam
imul
jmp
push
push
push
daa
aaa
jle
in
out
add
sbb
lods
dec
decl
sbb
xlat
adc
lock
add
aam
out
push
add
inc
aam
mov
addr16
ss
sbb
sahf
mov
clc
mov
cmpsl
std
dec
out
mov
mov
lock
in
out
pop
push
inc
mov
sub
and
lods
add
jae
mov
in
dec
dec
mov
pop
movsb
cmpsl
repnz
imul
mov
mov
or
ds
sbb
inc
rclb
sarb
aas
mov
or
cmpsb
push
or
ljmp
cmpsb
fs
add
stc
movsl
test
icebp
sbb
std
pop
lods
and
insb
movsl
push
add
int3
adc
imul
xor
xchg
mov
push
jecxz
mov
std
scas
ficoms
pop
in
inc
std
lods
pop
lods
jae
lods
add
gs
ffree
repnz
jmp
int3
mov
cmp
dec
fsts
or
outsb
adcl
inc
pusha
bound
scas
cmp
xor
ljmp
jne
pop
pop
in
xorl
jnp
dec
imul
arpl
mov
and
pusha
repz
lret
mov
fsubp
xor
add
ret
mov
repnz
out
decl
mov
loopne
rcrb
decb
test
ja
lret
pop
test
mov
mov
movsl
sub
push
adc
inc
ficoms
pop
or
cmp
mov
or
sbb
or
pop
das
sbb
xlat
and
subl
push
add
inc
jno,pn
mov
xor
in
inc
divl
loopne
sub
mov
xchg
sub
dec
in
imull
out
jl
xchg
sbb
dec
mov
nop
dec
dec
roll
jae
cmpb
jge
std
popa
sbb
adc
andb
into
sahf
jl
ljmp
xchg
or
call
fists
lea
or
mov
ja
ljmp
cmp
push
rorl
enter
adc
jne
or
xchg
fstpt
or
cli
xor
ret
divb
mov
add
rcll
fs
or
sti
push
mov
aas
dec
jno
mov
sub
ja
dec
inc
dec
loop
add
loop
sub
add
hlt
fidivl
inc
stos
adc
stos
mov
and
mov
mov
pusha
inc
cwtl
stos
loop
mov
mull
ret
mov
push
orb
mov
in
pop
mov
add
and
pusha
cli
cmp
movsl
cs
pop
pop
imul
pop
adc
pushf
loop
or
repnz
aaa
aas
and
pushf
inc
shrl
cltd
fwait
pop
inc
jo
pusha
out
adc
jb
icebp
fdivp
pop
cwtl
outsl
popf
mov
mov
addr16
imulb
mov
rcrl
icebp
lret
fidivs
pushf
pop
mov
jmp
xchg
dec
dec
fiadds
xor
xchg
pop
dec
push
stos
scas
jl
cmp
out
ja
sub
xchg
adc
mov
jmp
int
sbb
enter
jmp
test
stos
movsl
in
mov
int3
loopne
lods
and
cmp
inc
dec
xlat
cwtl
pushf
mov
mov
movsl
cmc
hlt
adc
xlat
xorb
test
or
rol
jo
arpl
jbe
js
out
xor
out
mov
sub
aaa
add
je
les
std
fsubl
xchg
fwait
pushf
pop
pop
pop
cmp
out
adc
sub
inc
arpl
scas
inc
mov
ret
xor
push
ljmp
ret
push
inc
xor
xchg
stos
das
fs
test
adcl
xor
orb
jae,pn
mov
and
mov
and
cmp
push
or
jbe
lret
mov
sub
add
scas
fs
adc
fcmovne
sub
ja
cmp
loope
push
jmp
jnp
and
adc
dec
push
lret
sbb
cmpsl
jmp
sbbl
mov
pushf
cmc
ficomps
call
imul
adc
les
mov
xchg
scas
scas
sbbl
std
adc
outsb
xchg
dec
aas
jg
test
popf
sbb
dec
and
add
bound
movsl
rcr
ficompl
adc
aad
add
sub
or
pop
or
pop
inc
push
ret
dec
test
pop
xor
mov
xchg
fsubrs
dec
mov
sbb
iret
mov
das
push
loope
sarb
push
fisttpll
add
je
xor
mov
pop
pop
je
lock
adc
lcall
sar
adc
mov
lods
insb
mov
jecxz
adc
xor
lods
dec
cld
std
rol
imul
pop
push
adc
add
cmp
cmp
pop
shl
sahf
sub
sbbl
jne
xchg
aam
std
lock
xchg
inc
adc
jno
pop
cmp
inc
inc
sbb
jno
push
mov
pop
add
scas
add
pop
lods
in
call
test
lea
push
sbb
es
or
iret
inc
sbb
fmull
xor
mov
rorb
sbb
and
loope
and
clc
mov
cli
icebp
es
push
popa
dec
ss
and
ficomps
into
mulb
setle
test
in
mov
pop
fnstsw
add
sbb
or
xchg
cmp
or
add
mov
mov
cli
push
mov
mov
lock
test
andb
jmp
mov
push
xchg
inc
fisttpl
cmp
fsub
sbb
popa
pop
aaa
mov
dec
arpl
dec
push
rcll
cmp
mov
cltd
xchg
pop
mov
gs
mov
out
jbe
add
adc
and
test
inc
jne
inc
sub
out
xchg
jbe
stc
in
mov
sub
xchg
and
das
jg
fildll
popf
in
fucomi
dec
test
dec
push
mov
test
nop
scas
cmpsl
sub
inc
addb
inc
loope
test
repnz
pop
cli
jmp
pop
mov
adc
adc
mov
stc
add
mov
jb
hlt
fs
sbbl
outsl
jnp
iret
sbbl
dec
aas
insb
stos
xor
lret
cwtl
mov
mov
nopl
xchg
in
repnz
lret
lods
jp
or
mov
mov
jns
inc
sarl
and
push
push
dec
test
cmp
ss
hlt
movsl
dec
subb
mov
xchg
sti
jg
fs
icebp
lea
pop
in
and
shll
adc
pop
xchg
push
out
inc
je
jl
mov
cmpsb
outsb
mov
filds
icebp
fwait
mov
fisubs
jno
pop
out
pop
sbb
clc
push
xor
stos
insb
lea
ret
sub
bound
rcrl
and
shr
mov
cmp
addr16
and
dec
iret
mov
or
dec
pop
xor
sti
int
lods
mov
repnz
lcall
push
xchg
lea
paddd
xchg
fwait
je
inc
dec
movsb
aas
adc
scas
mov
imul
test
xor
cmp
and
pop
pop
pop
fcomps
jecxz
call
cld
imul
lret
dec
popa
stos
sbb
add
sbbl
dec
sbb
xchg
pop
daa
add
pop
mov
out
mov
push
pop
or
adc
popf
dec
and
mov
mov
popa
push
inc
mov
push
mov
and
xchg
and
icebp
or
and
or
dec
inc
adcb
jecxz
xchg
inc
dec
rcl
aad
inc
repz
and
jl
enter
and
das
jno
inc
cmp
aaa
aas
or
add
add
adcb
in
mov
ja
mov
mov
or
loopne
adc
mov
jle
xchg
xchg
jg
test
mov
xchg
icebp
in
jecxz
ljmp
ror
js
sub
test
and
ret
out
fdivrs
ret
out
xchg
popl
orb
xchg
push
cmp
shll
mov
jp
aam
jp
mov
or
push
push
or
cmp
inc
sbb
adc
negl
pop
and
loope
nop
decl
fsubl
das
popf
cli
jmp
mov
jbe
pop
ds
push
mov
test
sub
xchg
pop
lcall
jnp
xchg
ss
in
push
xor
negl
mov
rcr
adc
mov
dec
jle
push
xor
ds
lret
ret
xchg
and
inc
ficompl
iret
ret
mov
cmp
scas
mov
idiv
mov
mov
lret
dec
jb
iret
pop
add
mov
and
cmpsb
fs
mov
dec
fnstcw
inc
cmp
mov
xor
inc
and
arpl
pop
imul
push
and
cmp
mov
adc
int
pop
mov
scas
sub
fwait
imul
cmp
lahf
test
cmp
out
ds
out
mov
out
pop
adc
cmpsb
sbb
mov
dec
sub
or
mov
jbe
xchg
insl
rcrb
test
js
es
daa
mov
fbld
lret
pop
sub
outsb
shrl
pop
lods
mov
mov
xchg
cltd
cmp
dec
dec
aad
push
dec
cmpsl
sub
dec
cmovge
mov
push
mul
and
xchg
jns
cmpb
cltd
pop
inc
test
mov
out
shr
leave
jo
das
mov
pop
daa
stos
jns
mov
mov
ds
mov
push
cmpsb
aaa
jg
cmc
or
test
mov
std
xchg
add
out
jne
mov
xor
test
je
jle
jle
outsl
adc
cli
mov
sbb
adc
lahf
repnz
ljmp
imul
sbb
repz
sbb
int
lods
xchg
lahf
rclb
xchg
sti
es
fildl
mov
pusha
push
incl
mov
inc
cld
xor
adc
xchg
stc
in
out
addr16
stos
lret
imul
push
pop
pusha
aad
or
inc
pop
jge
adc
fisubl
xchg
mov
push
in
test
pop
push
jns
adc
xchg
xchg
add
dec
sub
dec
repz
mov
out
cwtl
pop
add
jmp
std
repnz
mov
mov
add
cmpsb
sbb
lcall
and
daa
cwtl
adc
sbb
jb
movsb
jbe
mov
xchg
mov
inc
fwait
lods
pop
lret
nop
roll
imul
movsl
stos
add
roll
andl
rclb
das
fs
cli
and
mov
pop
or
pop
insb
test
dec
lret
mov
out
cmp
fadd
push
mov
iret
cmpsb
and
fstps
loope
std
push
clc
add
jp
rcl
stos
mov
add
pop
inc
lret
iret
iret
lcall
mov
std
daa
arpl
mov
out
jecxz
call
mov
xchg
mov
and
pop
cmp
sub
push
dec
sub
mov
idivl
pusha
test
sbb
in
jl
sub
sarl
stc
sbb
lock
pop
xchg
jns
push
jl
jg
add
mov
push
pop
cmp
loop
gs
add
test
or
outsl
xor
movsl
scas
pop
push
cli
pop
push
jecxz
les
in
sti
loope
ja
cli
in
outsb
das
mov
xchg
xchg
mov
in
int3
movsl
inc
sub
sub
adc
test
pop
mov
mov
xor
inc
stos
lcall
insl
jg
mov
cmpsb
scas
frstor
or
push
loop
pop
jl
fwait
mov
out
aaa
sbb
gs
repnz
mov
lock
loop
pop
xor
insb
aas
subb
sti
add
roll
aaa
push
mov
cmc
insl
dec
aam
fcoms
pop
push
in
jmp
cmc
dec
cmpb
lea
jae
pop
cmp
mov
pop
stos
aam
ljmp
rep
jno
xchg
mov
ficoms
mov
leave
lods
and
iret
cmp
xor
adc
or
pop
xorb
pop
xorl
pop
popa
mov
fdivs
pop
dec
clc
push
jnp
pop
jae
cmpb
pop
push
jnp
stos
pop
inc
mov
mov
testb
push
or
dec
int3
inc
pop
push
into
mov
add
mov
or
pop
nop
mov
and
sbb
push
rorb
gs
arpl
add
insb
xchg
shlb
outsb
movsb
mov
int
push
nop
or
fdiv
xor
mov
or
mov
push
mov
mov
adc
cmp
push
push
imul
sub
test
out
ss
mov
sbb
inc
dec
xchg
add
movsl
mov
cmp
loop
and
loop
xchg
pop
mov
out
jns
in
jb
ja
lahf
cmp
lea
out
xchg
sub
in
movsl
push
outsb
fstl
out
je
or
mov
js
lcall
lret
and
rol
add
in
pop
out
sub
scas
js
jns
andl
jg
mov
xlat
cli
mov
mov
fisttps
idiv
add
jae
mov
stc
test
dec
or
xor
into
and
and
mov
daa
sbb
xor
js
fldl
cmp
mov
push
dec
dec
xchg
xchg
fldcw
xchg
sbb
pop
mov
fstl
cltd
shl
rcrb
arpl
addl
sahf
lds
jecxz,pn
adc
xchg
scas
mov
aam
push
divb
daa
xchg
sahf
xor
rolb
out
inc
es
push
jno
fsts
sub
pop
xchg
scas
movsl
pop
mov
arpl
das
loopne
loopne
dec
rclb
loope
repz
sahf
cwtl
je
xor
jg
daa
xchg
mov
add
insl
xchg
fwait
or
sbb
ljmp
mov
sub
andl
decl
imulb
nop
leave
pop
lcall
call
stos
mov
fistps
test
ja
in
stc
mov
or
dec
pop
xlat
iret
aad
or
imul
sub
test
cs
orl
pop
or
sub
push
push
mov
rol
jnp
inc
ss
cmpsb
add
pop
push
adc
mov
aaa
inc
cmp
xor
int3
icebp
adc
into
jnp
or
mov
in
iret
mov
lock
das
mov
lea
ljmp
cmp
xchg
mov
ds
or
mov
mov
dec
push
scas
bound
dec
cmp
dec
push
or
fwait
sahf
jae
rcl
mov
add
mov
mov
xchg
or
scas
inc
dec
repz
and
aad
sti
push
ss
fcmovnu
lret
scas
std
cmc
xchg
sub
pop
ficomps
int3
lret
lret
insl
pop
push
pop
out
mov
inc
ljmp
mov
jmp
in
xor
mov
push
jo
packsswb
xchg
rorl
fisubl
in
and
adc
int3
mov
jne
sbb
mov
cs
push
cmc
in
outsl
ss
jbe
mov
push
add
repnz
mov
repz
repnz
imul
jnp
cwtl
fisttps
or
dec
cld
test
ljmp
inc
icebp
ficoms
ret
jnp
pop
mov
push
in
fwait
xor
add
jg
dec
adc
xorb
add
xchg
push
lahf
xchg
scas
jns
imul
or
fisttpll
fwait
push
mov
pop
sahf
hlt
test
lret
pop
mov
or
int
xor
add
push
fisttpll
mov
adc
and
lds
in
pop
psubd
cmp
loop
adc
fstps
fs
xor
mov
inc
ss
mov
popf
adc
cmc
push
loopne
add
push
les
cwtl
xchg
outsb
or
cmpsb
lods
xor
fdivl
fildll
mov
enter
mov
dec
out
sub
sbbb
add
xchg
dec
addl
aam
ss
nop
stc
imul
in
jmp
and
mov
lds
jecxz
sbb
je
cmp
mov
fsubrs
push
gs
ret
iret
pop
push
jo
jb
imul
out
inc
cmc
sub
into
add
loopne
cmp
shll
inc
push
sbb
mov
jmp
repz
jmp
in
cmp
testl
mulb
sti
inc
addl
in
xchg
jnp
js
jbe
out
push
jns
jbe
cli
pop
xchg
fwait
enter
dec
in
cmp
cs
push
stc
inc
mulb
jmp
into
scas
lea
pop
incl
stc
stos
add
ja
jne
xchg
dec
jnp
push
sub
or
icebp
pop
pop
sbb
cli
hlt
pop
rol
test
or
push
rol
and
dec
inc
push
nop
push
add
lds
mov
hlt
pop
sub
sahf
sub
pop
add
filds
mov
test
or
mov
dec
xor
out
mov
mov
rclb
jne
ss
mov
or
pusha
push
pushf
in
mov
pop
fadds
pop
enter
hlt
push
pop
xor
loop
dec
push
mov
and
mov
leave
jge
dec
arpl
scas
inc
or
xchg
test
inc
lds
ss
xor
push
leave
les
loop
mov
jne
jle
add
mov
add
insl
hlt
add
fisttpll
jb
sbb
mov
xchg
das
push
push
imul
add
push
lcall
sar
in
hlt
xchg
in
pop
xchg
cmc
pop
push
dec
sti
xchg
cmp
loope
push
add
ret
inc
insb
lock
sub
rcl
enter
inc
nop
cmp
inc
int3
jp
aad
jbe
imul
sub
aaa
and
js
mov
mov
mov
push
push
incb
cmpb
pop
push
fs
stos
jbe
mov
sub
adc
adc
sbb
mov
mov
icebp
js
clc
lds
outsb
adc
repz
shr
imul
push
mov
sub
push
lahf
or
cmp
mov
sbb
js
lods
lcall
sti
fsubrl
ljmp
aas
divb
ficomps
in
leave
adcb
hlt
mov
push
push
inc
mov
or
fistpll
jg
sti
mov
loop
push
popa
jne
xchg
mov
jg
or
add
aas
pop
pop
popa
mov
imul
or
inc
adc
mov
add
jns
sub
xchg
mov
pop
jl
or
sub
mov
sbb
push
sub
cmc
jo
cwtl
pusha
pop
push
pop
fnstcw
cwtl
fnsave
or
xorl
cld
popa
in
sarl
in
adcl
out
pop
ljmp
in
in
push
mov
loope
fimull
push
xchg
xor
aam
mov
xchg
mov
mov
mov
add
xlat
inc
push
sub
imull
sbb
int
fstl
pop
sar
orl
in
and
or
or
movsb
mov
inc
jbe
les
iret
inc
int3
cmp
or
int3
fdivs
stc
and
sub
add
pop
jb
incb
add
xor
pop
fildl
push
mov
lock
cmc
rcl
in
dec
xchg
scas
push
jge
mov
push
mov
mov
mov
lock
mov
cltd
and
push
jl
ja
push
push
pop
xor
adc
lds
xor
cmc
sbb
cmp
popf
test
test
and
cmp
orl
icebp
jo
add
scas
and
and
pop
loopne
out
adc
ss
outsl
xchg
jns
js
add
xorb
pop
lods
daa
or
out
hlt
jmp
or
cmp
nop
push
add
fldcw
pop
fstpl
int
push
push
add
sub
jno
jno
imul
push
push
test
call
mov
ljmp
movsb
sub
std
in
add
int3
fdiv
lds
xchg
add
xchg
andl
ret
ljmp
jnp
sbb
std
and
das
int3
adc
xor
or
or
xchg
mov
call
test
aas
jno
cmpsl
aaa
lea
in
jge
push
outsb
push
mov
pop
xchg
xorb
pop
lods
or
leave
add
sub
mov
pop
mov
sahf
and
enter
dec
stc
or
scas
xor
ja
mov
ja
adc
xlat
sub
sub
ret
movsb
fmul
add
movsb
xchg
push
femms
xor
cmp
mov
fsubrl
in
sti
push
loope
push
loop
iret
mov
ret
dec
sbb
ret
icebp
es
cmp
push
out
adc
repz
dec
push
jnp
nop
cmpb
push
or
sbb
mov
push
mov
aas
cmpsb
jae
add
ljmp
insb
iret
xlat
test
mov
jnp
mov
shrl
fisttpll
mov
aam
movntps
jno
les
jne
rcl
idiv
into
and
mov
xchg
loopne
mov
xor
jmp
cld
jb
fwait
int
call
out
aad
shrl
push
pop
jecxz
jne
dec
lcall
sub
shrb
push
ja
ret
jge
pop
lahf
in
addr16
loopne
sbb
mov
jae
ret
lock
push
les
icebp
stos
xor
dec
arpl
pop
fildll
mov
jg
push
sbb
mov
lods
cmp
add
in
cld
out
inc
ljmp
addb
stc
nop
push
pushl
int3
ss
jno
pushw
add
mov
lods
jg
pop
lret
jecxz
into
mov
aas
daa
mov
push
loope
fs
addr16
xchg
sar
inc
mov
icebp
loope
lcall
addr16
sub
cmp
repz
sub
xor
lds
push
std
or
jne
out
pop
cmp
ror
mov
sub
pop
xor
sub
repz
xchg
mov
loopw
xlat
ret
xlat
hlt
aaa
jle,pt
sbb
jp
adc
mov
insl
xchg
in
add
pop
into
push
pop
ds
mov
faddl
xorb
adc
test
push
pop
xchg
aaa
pop
sbbb
shll
push
pop
push
xchg
add
stos
fildl
xor
dec
and
mov
popa
cmp
mov
aad
push
sub
add
rolb
jnp
pop
hlt
out
push
popf
int3
or
cmp
lods
pop
mov
mov
loopne
paddw
pop
pop
ret
or
lcall
leave
sbb
jg
lahf
cmpsb
leave
jge
fidivs
add
cmp
bound
out
stc
push
push
mov
or
test
fwait
dec
in
dec
cmp
imul
lret
adc
jge
bound
jmp
mov
data16
rol
loop
scas
add
popf
ret
xchg
pop
repnz
sub
sub
xor
jae
push
push
sbb
push
jne
xchg
adc
ds
sbb
mov
out
inc
fldenv
iret
scas
loop
mov
ljmp
mov
data16
dec
rorl
push
std
adc
mov
out
stos
in
test
jnp
cld
cmp
aas
mov
pop
les
xor
hlt
cmp
repz
jns
xchg
sub
push
dec
dec
adc
lret
cmp
fnstenv
or
shrb
xor
mov
or
dec
adc
int
add
mov
mov
mov
loop
pusha
xchg
xor
jns
jnp
xchg
pop
es
dec
and
adc
cltd
mov
xor
mov
cmpsl
push
popf
add
mov
or
push
aaa
dec
mov
push
repnz
int
push
icebp
in
or
dec
xchg
add
in
xlat
pop
t1mskc
and
push
xchg
pop
ret
or
mov
into
mov
imul
fdivl
repz
jp
push
xor
mov
dec
pop
frstor
ljmp
in
xor
shlb
mov
push
push
inc
or
mov
out
add
lods
leave
stos
lret
je
sub
adc
push
rorb
sbb
pushf
mov
sub
push
jo
lcall
out
add
je
test
xor
inc
and
push
add
mov
adc
fadd
pop
cld
fdivs
gs
cmp
daa
incb
inc
sub
cmp
ja
jl
jge
mov
push
or
dec
popa
push
mov
aas
popf
pop
sbb
cwtl
dec
push
inc
add
mov
int
add
fildll
cmc
pop
and
movsb
loop
push
pop
sbb
out
cmpsl
orb
or
rolb
test
jg
xor
movsl
icebp
xchg
insb
lcall
imull
insl
fsts
inc
pop
mov
push
dec
cli
push
scas
in
sub
jmp
cmpxchg
gs
mov
scas
sbb
push
pop
or
xlat
xchg
or
xchg
mov
fidivrs
es
xchg
xchg
and
into
enter
fistpl
je
orb
sub
jae
push
int
inc
bound
mov
rolb
push
sarb
jnp
adc
mov
out
push
fstl
cmp
or
or
xor
jmp
ja
pop
mov
xchg
add
cmpsb
push
push
orb
xor
fwait
mov
lret
imul
mov
shlb
add
mul
fisttps
movsl
mov
addr16
pop
std
xor
repnz
inc
pop
xor
pop
es
cmpsl
and
loopew
adc
add
sbb
arpl
cmp
inc
xor
nop
fsubrl
testl
mov
sub
clc
xor
xchg
sbb
out
mov
mov
mov
xchg
add
lds
mov
jmp
dec
sbbl
in
mov
mov
daa
cld
adc
sahf
jno
gs
in
loop
add
filds
adc
test
pushf
inc
leave
sbb
or
std
xlat
out
jecxz
roll
repnz
sub
jmp
das
ljmp
inc
out
sub
out
cmp
mov
xchg
cmp
sub
rcll
sahf
test
fstl
aam
arpl
dec
cmp
test
lcall
shll
mov
and
inc
lahf
mov
dec
xlat
movsl
arpl
adc
lods
std
out
push
rcrl
push
das
popf
outsb
xchg
pop
lret
add
std
mov
loope
imull
jo
jmp
ljmp
outsb
mov
inc
mov
sub
pusha
cwtl
mov
inc
push
es
pusha
push
repz
int3
jg
fwait
icebp
jge
call
jne
sub
ficompl
pop
push
fisubrs
jle
cmp
adcb
lods
lds
sbb
jns
rorb
mov
adcb
dec
testl
and
jl
jbe
test
jmp
stos
lock
sti
cli
xchg
xchg
sbb
sub
xchg
out
loopne
sarl
fnsave
mov
jb
add
or
aaa
movsl
lock
jae
aaa
cmc
cltd
mov
jo
in
or
cli
push
movsl
sbb
mov
pop
adc
pop
lods
dec
loope
shrb
xchg
imul
xchg
lock
hlt
mov
mov
cltd
pop
aad
mov
pop
xchg
fisubl
in
cmpsl
mull
push
cs
mov
mov
sub
icebp
js
repnz
sar
inc
bound
mov
cld
ljmp
adc
pusha
adc
fwait
or
int3
pop
pop
movsb
push
cmp
in
mov
pop
xlat
push
push
outsl
sbb
ja
cmpsb
int
adc
and
dec
dec
inc
cmp
push
je
jbe
in
jmp
adc
dec
and
xor
subb
adc
daa
mov
mov
inc
in
dec
sti
pop
ljmp
xchg
daa
outsl
xchg
pop
adc
dec
pop
jp
adc
bnd
cmpsb
inc
push
test
rol
mov
test
sarb
or
fdivrs
cmpsl
sub
sbb
incl
or
mov
lcall
fdivrl
sub
cmp
xor
jbe
lods
push
ror
mov
ret
loopne
enter
mov
adc
inc
lock
xlat
lret
test
loop
jne
sub
shll
mov
pop
shl
dec
pop
adc
das
neg
gs
sub
mov
mov
jb
sbb
or
int3
cmp
test
test
sarb
xchg
cmp
out
or
mov
adc
sbbb
mov
nop
jae
fucomip
arpl
in
cld
loop
ljmp
cli
dec
lock
mov
cs
mov
inc
imul
cmpl
loop
loopne
testl
call
cmp
movsb
cmc
pop
icebp
push
addr16
decl
add
frstor
stos
pop
cmpsl
push
mov
rolb
add
mov
cmp
push
ss
orl
movsl
rcr
cs
mov
lret
xor
cmp
jl
fsubrl
leave
lret
mov
lret
xor
dec
ret
out
and
icebp
imul
jp
daa
cli
inc
and
sbb
jge
cmpsb
pop
pop
xchg
ret
xor
push
popl
mov
arpl
testl
cmpsl
je
adc
out
and
jg
mov
stos
and
sbb
lea
inc
filds
insb
mov
lret
out
xor
and
mov
xchg
jecxz
sbb
inc
repnz
push
test
leave
mov
pushf
mov
movsb
sahf
xorb
mov
scas
in
dec
mov
lcall
subl
ja
xchg
jne
je
jecxz
fmulp
out
xor
testb
aaa
jb
or
cltd
mov
jae
pop
dec
stos
xchg
test
mov
push
and
out
cmp
idiv
lock
push
push
xchg
negb
das
sub
pop
bound
pushf
adc
jns
hlt
push
push
pop
mov
and
cld
loop
sbb
cltd
dec
push
movsb
sub
pusha
testb
in
rcll
jle
ret
dec
mov
lods
mov
sbb
jmp
stos
jle
shrb
push
dec
leave
mov
push
jmp
jbe
lods
outsb
sahf
imulb
popf
mov
sub
gs
aaa
xchg
fsubs
rorl
mov
push
jb
dec
outsl
jge
mov
or
lret
jp
cmc
push
pop
nop
insl
jb
inc
lea
aas
aad
scas
clc
notl
pop
jl
fs
lock
xchg
lods
daa
jge
lea
rolb
call
stos
loopne
adc
fistl
xchg
mov
cltd
stos
push
dec
sub
dec
add
out
jmp
adc
cltd
sub
jge
subb
out
dec
xchg
mov
mov
iret
out
or
push
mov
in
mov
mov
cmc
xchg
fwait
jns
jb
xchg
push
lret
inc
push
push
pop
inc
or
inc
push
int
jmp
inc
mov
mov
insb
iret
iret
das
in
mull
mov
jge
xor
sub
xchg
das
xchg
rcrl
dec
sarl
jae
dec
and
add
dec
adc
sbb
rcrb
jle
stc
movsb
jne
xchg
loope
rcll
mov
scas
and
mov
xor
outsb
insb
mov
out
lods
xchg
dec
into
push
and
ret
aas
mov
and
jmp
pop
jl
out
jg
push
sahf
cmp
in
aaa
adcb
jmp
in
mov
jae
jb
int
mov
icebp
ror
xor
fstpl
sbb
dec
out
movsl
jmp
ret
sub
pop
or
in
cmp
xor
mov
pusha
icebp
and
dec
adc
stos
clc
fucomp
mov
sub
cmpsl
cmp
cmp
and
movsb
and
sub
popa
cmp
inc
jnp
lea
loopne
pop
in
pop
ret
jae
add
inc
jmp
into
ja
cmpsl
fdivrs
push
and
das
dec
lahf
hlt
lahf
pop
sub
push
aaa
adc
jp
mov
pusha
scas
sub
sub
sahf
xchg
lret
sbb
xchg
sbb
sbb
rorb
mov
or
jle
inc
and
mov
loop
addr16
add
xchg
test
or
rcrb
inc
xchg
and
jl
cmp
push
inc
or
sbb
xor
lret
mov
int
cmp
cmp
cmp
in
pop
sbb
inc
push
mov
sbb
sub
xchg
fcmovbe
mov
filds
loope
or
popa
out
out
inc
outsl
cmp
or
mov
fs
push
mov
jae
movsl
out
scas
cmp
sub
pop
js
mov
cwtl
call
enter
out
push
push
xlat
and
dec
dec
and
and
push
mov
orb
pop
and
adc
shrl
xor
dec
mov
fstl
push
hlt
int
jno
and
in
fisttpll
int3
insb
ljmp
out
loope
push
outsl
xchg
fdivrs
fmuls
ret
mov
mov
push
sbb
add
insl
shlb
cmp
lea
into
pop
aam
add
mov
lret
in
or
xor
call
sub
dec
jae
lds
add
xchg
pop
imul
stos
xor
push
das
or
lods
xchg
testl
xor
add
dec
cmp
push
repz
scas
loopne
mov
sub
data16
nop
sbb
gs
xchg
imul
cld
pop
sbb
div
cld
sbb
inc
sub
fsubl
adcb
pop
loope
xor
les
mov
in
mov
jno
or
push
or
adcb
retw
clc
mov
pusha
loopne
jno
cwtl
aad
xchg
fxch
rolb
std
inc
mov
rorl
xchg
imul
mov
fimull
jbe
imul
xor
inc
xlat
cli
subl
sahf
cmc
push
push
dec
dec
xchg
jbe
dec
mov
and
insb
jecxz
iret
push
test
imul
xor
out
lahf
mov
sub
hlt
icebp
jo
jns
rcrb
push
lahf
xchg
dec
mov
and
hlt
adc
mov
pop
pop
xchg
sbb
lods
adc
inc
mov
cli
xlat
mov
nop
inc
pusha
sbb
test
push
or
pop
jle
rcll
add
enter
xor
cld
mov
pop
cmp
pop
mov
cs
or
pop
insl
rep
or
jne
ds
push
jbe
sti
insl
cmp
fsubrl
in
jle
aad
sbb
mov
iret
and
aam
and
popl
fadds
test
push
sahf
repnz
mov
xchg
and
out
mov
sbb
inc
pop
push
data16
push
jae
xchg
jno
add
xor
aad
or
jb
out
das
jle
cmpsl
and
addr16
imul
and
rcrb
out
xor
cmpsb
jnp
jbe
test
xchg
and
dec
mov
mov
movsb
cmpsl
shlb
test
cmp
push
lcall
movb
scas
mov
data16
popf
das
mov
fnstsw
addr16
js
pop
push
cmp
loope
add
xchg
add
cmc
scas
sub
mov
adc
and
push
inc
inc
es
sbb
push
call
sti
inc
je
xchg
imull
je
jmp
outsl
cmp
fldcw
data16
je
mov
xor
xchg
sti
inc
and
jmp
dec
js
xchg
lds
movb
stc
push
mov
aam
xor
les
jnp
repnz
movl
outsb
push
cltd
in
arpl
sbb
jo
pusha
incb
mov
call
mov
dec
mov
inc
sub
or
cwtl
mov
add
sub
aam
mov
pop
mov
mov
dec
jo
push
clc
xchg
adc
rcrb
or
pand
and
je
outsb
add
decl
sub
lods
nop
dec
enter
enter
or
dec
jecxz
adc
mov
outsb
xor
sub
xlat
mov
mov
testb
fimuls
push
push
and
gs
adc
inc
call
jecxz
mov
inc
sar
mov
popf
or
insb
imul
jle
iret
ficoml
dec
and
sti
mov
gs
out
dec
aad
aam
repnz
pushf
nop
push
push
cmpb
push
inc
inc
repz
sub
insl
and
pop
and
imul
movsb
addr16
cmp
add
clc
lcall
or
xchg
mov
jg,pn
in
xor
jns
push
and
cmpl
or
icebp
xchg
stos
add
iret
mov
iret
or
out
xor
inc
inc
out
pop
adc
xor
fadds
inc
inc
add
jb
adc
dec
mul
ja
call
dec
pop
xchg
ret
or
shll
push
je
ss
sbb
push
hlt
jle
call
jb
test
pop
sbb
rcll
aam
sbb
outsl
movsl
inc
lods
sti
nop
out
imul
pop
xor
enter
inc
std
in
test
cwtl
sbb
pop
xchg
push
dec
mov
rcrl
popf
arpl
std
jg
imul
cmp
pop
test
movsl
push
pushf
mov
aad
repz
lds
fs
lea
ret
cltd
pushf
pop
jg
pop
adc
lock
inc
int3
mov
mov
jno
and
pop
mov
sub
lds
dec
mov
dec
test
call
xchg
fidivrl
adc
and
pop
push
push
push
cltd
jbe
cmp
add
adc
mov
cs
inc
stc
cs
out
adc
sahf
fbld
stc
pusha
imul
jbe
jp
outsb
add
arpl
sub
xor
add
adc
or
inc
adc
out
lods
outsl
fisttps
push
das
bnd
inc
test
pop
adc
pushf
ljmp
mov
pop
push
adc
popf
test
jae
add
mov
xlat
je
sarb
cmp
ss
sub
in
in
in
or
hlt
fiaddl
add
insb
out
lret
vcvtsd2ss
mov
in
mov
pop
mov
dec
push
popa
dec
mov
or
mov
lods
push
mov
movsb
adc
jmp
fs
xor
pop
les
and
setle
inc
jo
scas
cmc
arpl
dec
lret
ret
jns
js
pop
es
mov
push
leave
mov
adc
push
cmpsb
sti
shl
into
stc
fdivrl
mov
repnz
push
stos
mov
cld
movsb
inc
jae
mov
mov
inc
pop
cmc
fimuls
jne
repnz
xchg
inc
push
push
ds
xor
mov
dec
dec
ja
xor
mov
and
mov
ret
adc
push
fldenv
sbb
into
outsb
loopne
jb
clc
inc
sub
shrb
sub
bound
scas
pop
jnp
pop
push
sbb
cmp
mov
fs
je
jnp
popl
xchg
ljmp
xchg
ds
daa
sbb
cmp
jmp
cmp
sbb
mov
aaa
rcrl
pusha
outsb
fldt
xchg
mov
jecxz
inc
mov
push
mov
hlt
lea
xor
mov
in
add
jb
or
inc
xchg
mov
xchg
mov
js
repz
dec
and
mov
sbb
movl
loop
xchg
test
sbb
sbb
add
ss
in
push
sub
pop
test
jno
movsb
dec
push
loopne
add
mov
and
int
dec
pop
inc
sub
scas
lcall
inc
mov
stos
cmp
and
sub
shrl
xchg
push
dec
sbb
les
gs
fsubrs
in
cmp
imul
and
insl
mov
push
lock
mov
inc
or
mov
mov
mov
xor
dec
pop
push
pop
out
scas
sub
xlat
inc
add
test
sti
mov
loop
xchg
stos
pop
mov
test
and
jb
shr
xor
addl
add
mov
sarb
mov
cmp
add
sbb
xchg
in
adc
xchg
push
mov
std
jae
jp
push
fbld
xchg
in
or
pop
dec
pusha
pop
data16
out
mov
repnz
mov
into
arpl
lea
mov
ficomps
repnz
loopne
test
pushf
and
imul
dec
outsl
inc
sub
sub
lods
inc
sub
adcl
inc
add
in
dec
mov
jns
lahf
mov
out
hlt
out
call
and
fwait
aaa
lahf
add
adc
mov
in
aaa
nop
mov
repz
mov
loopne
notb
int
xchg
cmp
lds
in
rorb
in
jno
xchg
cltd
sti
out
xor
mov
and
sub
jge
fnsave
inc
mov
pop
push
sbb
cmp
inc
adc
rcr
mov
inc
pop
lahf
pop
les
xor
outsb
daa
lods
sub
pop
ja
fimull
sbb
xchg
inc
fwait
scas
int
jno
cmp
jecxz
mov
cmp
pop
mov
sti
icebp
aas
push
inc
ret
push
pop
pop
push
sub
ret
insb
outsb
cwtl
test
cmp
in
imul
movsb
addr16
xor
outsb
and
mov
das
movsl
pop
add
das
cli
push
cs
and
scas
inc
add
out
lret
mov
adc
pop
dec
mov
xor
hlt
jb
dec
add
repnz
sub
mov
jno
int3
sub
sbb
scas
push
and
adc
hlt
jecxz
movsl
pop
lret
insb
push
xchg
jbe
sbb
inc
repz
mov
sub
insl
jno
and
repnz
mov
ja
xlat
call
push
mov
ror
dec
push
imul
flds
lcall
or
push
push
es
xchg
inc
mov
movsb
pop
pop
orb
outsb
mov
add
adc
push
or
adc
clc
imul
xlat
xchg
aad
dec
mov
xchg
pop
and
pop
xlat
jnp
jg
ljmp
out
loope
lcall
jge
popf
inc
push
outsl
or
push
fwait
mov
ljmp
test
pop
dec
jo
add
mov
cmpl
xchg
mov
inc
xchg
movsl
ds
dec
notb
rorb
sub
das
inc
dec
inc
cmp
mov
push
or
jp
lea
jno
clc
addr16
addr16
mov
and
cmp
add
cmpsl
dec
sahf
xchg
subb
pop
sbb
push
sub
cmc
cs
push
gs
mov
dec
cmp
gs
fisubs
mov
xchg
jl
sbb
leave
dec
cmp
xor
repz
outsl
pushf
scas
fsub
add
add
je
mov
lods
sbb
adc
mov
xchg
push
ret
jle
sub
es
nop
out
inc
lret
sbb
enter
adc
mov
test
jno
pop
cmpsb
xchg
or
xchg
and
sub
ror
lret
jecxz
cmp
test
sahf
inc
scas
andb
out
pop
xchg
arpl
jl
jb
push
and
loope
xlat
cmpsl
inc
mov
mov
hlt
fsubrp
pop
mull
inc
add
or
fdivl
scas
mov
fcomi
xchg
movsb
enter
mov
test
push
xchg
xor
and
aas
xchg
sahf
je
jmp
jae
xchg
loopne
in
scas
iret
cmc
lret
xchg
cmp
inc
loope
loop
mov
ds
jo
add
dec
stc
imul
hlt
fcompp
xor
or
fidivl
xchg
sar
sub
push
jp
xchg
stos
pusha
push
mov
shll
push
outsb
in
mov
ja
sub
push
sbb
into
dec
mov
xchg
repnz
or
rorb
cmp
fcompl
rcrb
addr16
adc
inc
push
pushf
xor
push
lds
mov
hlt
shrb
addb
fsubr
pop
jmp
dec
outsb
inc
inc
jl
mov
adc
adc
in
addb
mov
jnp
sub
ret
inc
xchg
inc
hlt
pop
ss
out
pop
push
outsb
movsl
add
xchg
hlt
add
push
pop
lret
fdivs
add
int
movsl
and
push
push
mov
stc
mov
repz
loop
leave
push
shrb
outsb
push
push
popf
fcmovnbe
or
push
ret
jbe
inc
cltd
movsb
push
sub
adc
lcall
push
mov
aaa
xchg
adc
or
out
aaa
je
inc
repnz
fcompl
pushf
sub
jno
adc
stos
in
push
mov
into
pop
jmp
push
fsubl
sti
aas
imul
xor
push
or
or
stc
popa
inc
lods
icebp
in
test
and
xchg
enter
repz
cwtl
sub
cmp
jge
fmul
or
mov
add
mov
xor
dec
mov
xchg
cs
push
loopne
fnstcw
test
mov
je
mov
xor
repz
lods
and
jg
mov
dec
lea
xor
add
std
es
mov
int3
and
xchg
cld
pop
push
notb
incl
js
fwait
xor
pop
fwait
andb
dec
xchg
shrb
pop
fcomp
insb
jg
or
aad
mov
subps
jb
fs
rorl
add
and
pop
out
sarl
test
sti
xor
xor
into
into
mov
pusha
pop
jo
rolb
in
fucomi
cmc
push
sbb
sbb
es
es
cmp
sub
pop
test
and
outsb
mov
add
scas
xchg
lods
cmp
pop
cmp
and
xchg
pop
or
test
arpl
das
ljmp
cmp
sbb
xchg
adc
xchg
mov
loopne
xchg
arpl
out
adc
pop
sub
mov
int3
aad
jle
inc
mov
mov
ljmp
add
dec
loope
repnz
xchg
jmp
inc
mov
mov
je
pop
addb
imul
sarl
inc
pop
lods
leave
rclb
fsubrs
or
fucomi
mov
xor
test
rolb
hlt
mov
les
mov
sti
xor
xor
push
lods
lret
fcomps
aad
out
cs
popa
pop
shr
clc
push
leave
dec
adc
jo
incl
mov
mov
cli
mov
push
loopne
aas
dec
jne
adc
mov
cmp
nop
addb
test
xchg
sub
dec
xchg
push
adcl
outsl
mov
pushf
sbb
dec
addr16
imul
push
push
loopne
xlat
loope
aam
mov
xchg
mov
aaa
idivl
pusha
xor
mov
das
jns
cmp
test
aad
inc
out
mov
cli
push
cmp
inc
mov
dec
mov
xor
pop
orb
fcoms
dec
mov
fsubrl
mov
jno
stos
push
mov
sub
push
sbb
call
andb
jb
sti
fs
lret
dec
std
and
inc
mov
popa
aad
cmp
fidivrl
sbb
push
pop
pop
cmp
mov
push
dec
fisubl
add
sub
dec
adc
mov
and
or
add
out
and
dec
xchg
fwait
lcall
out
mov
push
inc
out
jp
outsb
jg
ljmp
stos
sub
lods
add
sbb
subl
int3
repnz
lcall
cmp
sbb
or
mov
iret
fmull
in
dec
sbb
adc
pop
mov
inc
pop
mov
xor
je
push
mov
insb
sbb
push
pop
icebp
sbb
pop
das
aad
addr16
out
aaa
jl
mov
cmp
gs
jne
mov
sub
ret
in
movsb
stos
xchg
loope
sbb
pushf
cmp
test
gs
bound
mov
mov
or
xchg
xor
test
scas
insb
lret
subb
mov
dec
xor
aas
pushl
fidivl
hlt
stc
xchg
mov
and
je
mov
xchg
test
dec
aad
fbstp
inc
and
mov
pop
jg
mov
test
je
int3
xor
inc
adc
loope
jmp
jmp
xchg
dec
sbb
cmp
mov
icebp
pop
sbb
add
es
ljmp
mov
in
pop
stos
mov
stos
push
cmp
mov
test
and
stos
negb
scas
sbb
xchg
jecxz
aaa
add
xchg
test
imul
add
push
dec
jns
icebp
rcrl
iret
dec
repnz
leave
cmp
aad
pop
cs
cmpb
jp
adc
mov
sbb
inc
adc
and
dec
mov
stc
in
or
cwtl
les
jo
xchg
dec
mov
mov
lods
clc
xor
mov
cld
in
stos
clc
and
and
lret
rcl
gs
ljmp
movsb
sbb
and
xchg
xor
cmpsl
mov
push
je
lock
jns
jno
cmpsl
adcb
gs
cli
orl
push
cmc
xchg
repnz
ds
dec
mov
mov
call
fisttpl
cltd
inc
fnstenv
mov
xor
pop
movsl
rcrl
pop
mov
sar
mov
jae
pop
subl
movsb
fwait
mov
nop
lods
dec
sbb
dec
pop
xchg
ret
mov
mov
push
dec
mov
xchg
mov
mov
stos
xchg
lret
cmp
pop
jle
arpl
fsts
sbb
icebp
jnp
mov
fwait
push
mov
sbb
xor
test
pop
xchg
adcl
pop
adc
roll
and
es
dec
aad
adc
imul
mov
call
jns
add
pop
cmpsl
lods
fwait
xor
stos
fwait
out
sub
xchg
jmp
dec
dec
pop
cmpsl
xchg
insb
fbstp
leave
rclb
shrb
test
scas
mov
sbb
cmp
sub
sbb
sbb
in
mov
repz
lea
popa
ficoms
inc
push
bound
pop
out
jge
mov
push
mov
shrb
mov
lret
inc
push
jmp
dec
add
mov
sub
sbb
enter
or
or
std
fmul
aaa
push
xor
bound
std
fmull
imul
jbe
test
and
lahf
faddl
push
jle
rcrb
dec
or
out
gs
push
mov
hlt
inc
aas
inc
insb
inc
outsb
orb
mov
outsl
or
or
in
hlt
outsb
jmp
mov
cmp
in
lahf
push
arpl
mov
cmp
rcr
repz
lea
vpshld
mov
pop
push
sub
push
aad
orl
xchg
loopne
sbb
idivb
push
xlat
sbb
outsl
xchg
hlt
mov
adc
and
subb
lock
test
jl
add
push
add
ficoms
sub
adc
mov
loope
jnp
xor
lret
je
ss
jb
loope
arpl
cld
loop
fdivrl
ret
inc
scas
and
loopne
fdivp
pop
xchg
test
dec
push
dec
inc
jne
mov
or
cli
jle
imul
jns
daa
xor
mov
loopne
sbb
sahf
sub
dec
cmc
cmp
jmp
sbb
mov
ss
jo
cltd
mov
sbb
pop
sbb
jne
hlt
cmpsb
aaa
jo
and
jecxz
stc
cltd
fs
jmp
gs
push
mov
inc
adcl
xchg
ficomps
adc
int
in
mov
or
enter
or
dec
dec
and
or
scas
mov
mov
pop
je
xchg
lret
das
sarb
nop
sbb
jns
add
fiaddl
loopne
sbb
test
inc
adc
dec
imul
mov
scas
pop
or
test
cltd
imul
fidivrs
jg
stc
insb
test
test
popa
das
jmp
hlt
subb
enter
icebp
js
inc
inc
xor
aas
push
lock
sub
mov
cmp
rsm
lods
sbb
mov
and
ds
cmpsb
jbe
jmp
pusha
or
inc
cltd
call
push
or
ffreep
add
not
mov
aad
inc
std
mov
jecxz
jecxz
inc
sub
inc
mov
and
enter
xchg
les
ja
sahf
sbb
sti
mov
mov
cmpsl
xchg
or
inc
sub
and
ret
dec
jne
mov
ret
aad
mov
adc
aad
shlb
push
jmp
call
push
dec
imul
popf
sub
mov
inc
call
shlb
nop
sub
les
mov
pop
not
scas
movsb
sbbl
rcr
rcrl
arpl
stos
and
aaa
in
push
mov
das
cmp
push
and
in
int3
xlat
lret
push
andl
in
or
xchg
sub
stos
or
int3
and
lcall
add
int3
add
or
test
cli
sub
fistpll
out
pop
imul
xor
dec
xlat
dec
sbb
popa
xorl
push
xor
sub
xchg
jmp
jo
inc
inc
mov
cmc
inc
add
ret
jnp
push
cwtl
mov
ds
roll
aaa
inc
sti
push
cmpsl
inc
xchg
inc
pop
imul
mov
nop/reserved
inc
daa
ljmp
push
adc
mov
ljmp
shlb
xchg
and
xchg
aad
fmuls
aas
data16
push
lret
packssdw
lea
sahf
xchg
mov
lock
loop
xchg
xchg
jecxz
cmpsb
sbb
dec
sbb
lods
cmp
mov
inc
pop
inc
xor
fisttpll
andl
cmpsb
mov
insb
xor
inc
lret
aas
or
fildl
inc
mov
pop
push
enter
js
int3
scas
and
lret
push
test
cmp
mov
mov
pop
fs
aaa
mov
cmp
out
out
dec
cwtl
imul
push
xor
push
lret
fcoml
jbe
pushf
ret
fidivrl
test
xchg
xchg
xchg
repnz
lret
push
leave
jbe
cs
les
dec
fs
mov
xchg
cld
rorl
in
fldt
insb
or
lahf
cld
push
into
leave
mov
in
notl
dec
int3
outsl
mov
daa
adc
das
mov
cmp
cwtl
push
sub
inc
dec
mull
inc
scas
scas
out
sub
mov
push
inc
cmp
mov
flds
jne
or
mov
dec
jnp
jae
sub
shlb
dec
in
mov
icebp
aam
ret
mov
ret
pop
sub
fcmovb
pop
jecxz
stos
call
inc
daa
sub
sub
and
cltd
mov
movsl
or
mov
adcl
cltd
mov
outsl
add
aaa
sub
push
iret
push
shlb
and
mov
out
mov
cmp
incl
xorb
out
pop
lods
mov
jge
das
pop
sbb
aas
clc
je
sbb
lahf
add
hlt
mov
inc
lds
xor
movsb
add
pushf
fdivrp
mov
rcll
mov
mov
cld
ljmp
out
ljmp
or
repnz
popf
sbb
pop
inc
std
xlat
fs
add
nop
xchg
clc
bound
aad
ds
sub
pop
xor
setl
pop
out
aam
clc
jle
jne
and
sbb
cltd
shl
xchg
ret
mov
mov
cltd
mov
ja
shr
mov
pushf
test
xchg
or
mov
jl
sub
rolb
decl
xchg
test
cld
mov
push
mov
and
les
mov
lods
insl
or
data16
fdivrl
mov
jecxz
xlat
movsl
jno
push
mov
call
daa
xlat
sbb
mov
or
lds
inc
in
ja
clc
cmp
cs
cmpsl
insb
adc
out
dec
cmpsb
jo
xchg
push
gs
lea
in
dec
test
push
jle
xor
test
rolb
int
cmp
dec
es
insb
xlat
rclb
and
mov
mov
dec
lds
loop
inc
pusha
jbe
jg
lods
rorb
nop
mov
loop
xchg
les
xchg
and
push
aas
dec
inc
mov
cs
jbe
popa
cmp
incl
or
cmp
jae,pt
enter
dec
mov
in
lock
movsl
mov
test
adc
jb
xchg
mov
loope
dec
test
test
push
xchg
mov
testl
pop
aam
push
pop
sub
fmull
mov
dec
flds
outsb
jae
push
test
cmpl
cltd
sbb
popa
movsl
and
add
or
fsubrs
arpl
outsl
insb
pop
les
out
adc
repz
inc
sbb
jl
jbe
aaa
in
push
jb
ljmp
jno
mov
adc
dec
cld
inc
add
xor
add
cmp
mov
or
mov
fnstcw
or
std
push
imul
and
cli
jl
sub
pop
pop
scas
push
addr16
jbe
jbe
faddl
cmpsb
test
popf
repz
sbb
rolb
cmp
ret
mov
push
mov
jno
outsl
xchg
mov
push
mov
push
xchg
int
das
shlb
mov
and
movsl
dec
cmp
adc
inc
lods
cmpsl
not
inc
inc
sub
sub
in
nop
push
and
pop
mov
scas
and
incb
inc
jns
lods
aad
push
incl
xchg
dec
cmp
sbb
leave
adcl
push
cmpsl
mov
sub
cwtl
loop
sarb
xchg
inc
in
jge
bswap
gs
mov
jmp
lods
sbb
cltd
repnz
test
mov
jl
dec
shll
sub
add
outsl
fldcw
add
iret
xlat
xchg
into
pop
or
mov
lret
std
add
je
add
xor
add
add
and
add
pop
andb
stos
mov
testl
ljmp
cmp
loopne
pop
xchg
in
or
mov
outsl
push
mov
dec
sbb
add
adc
inc
xor
jg
cld
dec
lea
sub
sub
repnz
pop
mov
lret
cli
movsl
xchg
add
add
fsubrl
add
or
push
add
cli
imul
fucomi
sbb
inc
cmp
mov
leave
cmp
add
mov
repnz
mov
cmp
mov
test
sbb
pop
inc
lock
pushl
mov
ret
adc
jmp
or
push
rolb
xchg
js
cmp
xor
push
movsl
inc
cmp
js
test
jo
fldt
test
mov
out
aas
add
arpl
adc
xchg
sarb
pop
mov
mov
and
adc
in
in
lahf
inc
inc
idivb
jmp
std
insl
rolb
mov
shrl
das
inc
add
xchg
lret
mov
push
daa
js
xor
xchg
loopne
jo
xor
sti
popf
mov
out
xchg
ds
sbb
mov
inc
test
adc
es
dec
xchg
xchg
test
cmc
movsb
push
mov
add
mov
stos
aam
push
outsb
xchg
cmc
in
rorb
pop
clc
cmpsb
pop
sbb
test
xor
add
xor
je
pop
aad
jo
aad
mov
xor
rcrb
xchg
add
notl
xlat
push
jno
adc
or
mov
idivl
dec
cs
es
push
xchg
fldcw
jle
pop
sbb
sbb
mov
push
data16
jno
push
lret
jnp
xchg
or
aas
jp
mull
push
and
and
arpl
push
push
xchg
mov
out
aam
dec
fsubrs
or
mov
adc
ret
cmpsb
andl
cltd
inc
sti
sbb
jns
lock
mov
inc
sub
pushf
xchg
mov
iret
adc
jl
or
test
mov
inc
stc
jo
test
push
inc
sbb
divb
cli
cmp
sub
clc
jno
test
adc
lahf
pop
xor
loop
inc
and
push
push
push
js
lds
shr
cmpb
sbbl
movsl
mov
cmc
cmc
in
mov
push
cmc
xchg
xchg
stc
or
sbb
add
rol
push
es
and
cs
inc
imul
cltd
jns
movsl
and
push
daa
test
ljmp
sub
in
in
stos
and
mov
push
aam
outsl
out
push
xchg
repz
push
aas
or
xor
xlat
push
clc
mov
mov
clc
and
movsl
popa
inc
mov
icebp
mov
or
lahf
mov
sbb
add
and
mov
out
sub
inc
adcb
jecxz
mov
mov
icebp
adc
xorl
dec
cmpl
test
stos
ds
or
sbb
int
cmp
sbb
pusha
adc
cmpsl
jp
scas
sbb
or
push
push
inc
fninit
xchg
imul
loopne
insb
out
leave
loope
mov
rcrb
lods
iret
ds
sti
mov
inc
ss
js
rcll
rcl
repz
pop
dec
adc
sub
shrl
test
and
or
ja
ss
sbb
adc
cmp
push
mov
pop
mov
fwait
aam
ret
lahf
mov
cmpsl
outsl
or
mov
bound
pop
mov
fildl
add
mov
loopne
rcrl
rorb
in
dec
xor
ror
xchg
and
jne
and
add
cmpsb
xor
das
jns
pop
xor
flds
out
mov
cmp
and
jne
inc
or
fistl
mov
fbstp
jmp
js
mov
cmp
or
fs
mov
imul
incb
push
imul
or
out
fs
out
xchg
push
test
jmp
jo
hlt
cld
outsl
fsub
bound
pusha
mov
fwait
out
xchg
scas
sbbb
lods
jl
push
ss
push
pop
outsb
xchg
mov
imul
je
inc
or
jg
dec
push
xchg
icebp
pop
mov
gs
aad
icebp
nop
int
sbb
lds
or
leave
xor
or
enter
mov
push
cld
incb
jbe
pop
jle
push
pop
imull
outsb
addr16
dec
loopne
lea
movsb
in
jns
xchg
push
push
jno
test
das
pop
cltd
cmp
cmc
jecxz
pushf
fsubrs
push
gs
nop
add
mov
push
aad
inc
frstor
mov
dec
adc
imul
shlb
sub
int3
insl
push
adc
imul
loopne
aad
jle
cltd
stc
pop
sti
es
notl
adc
ljmp
jne
pop
mov
mov
add
mov
cltd
fistpll
icebp
push
out
cs
out
lcall
pop
lock
call
cmp
ds
clc
mov
jo
and
popf
xchg
movsl
enter
aas
faddl
cmp
mov
jmp
xchg
mov
vcvtsi2ssl
and
jne
in
pop
mov
mov
fwait
jp
mov
cmpsb
push
pop
cli
bound
jae
add
lcall
mov
mov
sbb
and
or
ss
push
in
das
xorl
xchg
fldcw
les
sub
arpl
add
rorb
cmpl
mov
mov
mov
lds
xchg
icebp
sub
xchg
xor
movb
xor
cmp
cltd
out
mov
in
ljmp
clc
sub
test
mov
sub
and
jmp
in
fldl
sbb
sub
js
shlb
pushfw
mov
int3
xchg
lods
rcr
in
jnp
out
inc
sbb
mov
jl
or
jo
mov
xchg
repnz
dec
imul
xchg
rcr
jae
dec
leave
mov
cmp
lahf
testb
inc
xchg
push
scas
jle
cmp
mov
fcomps
arpl
cli
push
mov
pop
insb
es
rorb
pop
push
imul
fsub
jl
xchg
xor
sbb
cmpsb
dec
push
or
push
and
aaa
lcall
xor
jmp
arpl
popa
mov
fcomip
adc
gs
or
fcmovbe
mov
push
stc
ss
in
push
mov
hlt
mov
nop
or
or
fdivs
scas
jo
js
mov
or
push
ljmp
mov
out
es
pop
jecxz
cmpsb
inc
push
outsb
jae
or
push
fstl
addb
lock
jecxz
push
push
je
push
jl
cmp
lods
lds
push
faddl
mov
out
mov
sarb
test
test
fsubrs
das
cmp
jge
xor
lds
insb
call
addr16
movsl
out
mov
or
cmpsb
movsb
data16
test
cmp
jno
mov
sti
mov
aaa
adc
inc
adc
lock
mov
push
or
lods
add
sub
xchg
loope
aaa
neg
hlt
les
inc
popf
fstl
and
jecxz
shll
add
in
fildl
jo
sub
pop
dec
lret
add
lea
mov
sub
gs
hlt
fldenv
or
cmc
dec
add
add
pop
jmp
stos
movsb
push
and
sub
cmc
push
and
and
pusha
test
scas
xchg
mov
popa
jae
cwtl
mov
xchg
ret
insl
movsb
push
aad
pop
clc
subb
xchg
sbbl
adc
pop
je
mov
nop
gs
pop
jbe
pop
mov
sbb
cmc
adc
movsl
sbb
mov
fwait
mov
pop
push
pop
pop
add
dec
cmp
mov
jnp
jg
cmp
or
test
dec
ret
mov
sbb
sub
in
add
cwtl
sbb
fbld
fs
mov
out
daa
jno
sbb
add
sub
mov
inc
xchg
or
and
xor
stos
psubb
pop
pusha
data16
sub
fbstp
leave
or
lock
ret
xor
jmp
push
repz
jnp
outsl
iret
jne
inc
jne
loope
fmull
jno
sub
cmpsb
fwait
in
out
push
movsl
lods
imul
fistpl
pop
cmp
fisubl
decl
jno
jbe
pop
push
rolb
adc
fsubs
or
jns
ret
dec
adc
pop
iret
fnstenv
mov
lret
mov
hlt
mov
lods
jb
xchg
adc
in
out
aaa
mov
in
dec
xorb
xor
shlb
mov
sbb
push
mov
ss
mov
and
or
fs
xor
les
jb
les
ljmp
fwait
mov
mov
testb
fsub
out
cmp
push
cltd
insb
sti
outsb
mov
mov
jne
pop
jp
mov
mov
mov
cmpsb
mov
pop
enter
dec
rcrb
arpl
add
repz
push
or
xor
jae,pn
mov
fsubl
sahf
shll
fucom
fmull
xchg
out
adcl
pop
popf
jbe
stos
scas
pushf
stos
cwtl
str
lods
popa
xor
popf
push
aaa
aas
mov
cmpsl
cs
dec
sbb
sbb
movsb
sbb
outsl
jge
test
and
in
ret
iret
jne
test
inc
lds
xchg
jnp
lods
fimuls
pop
mov
mov
addr16
or
lods
mov
idivl
mov
sbb
into
push
jmp
push
pop
jg
pop
and
xlat
scas
mov
sti
jnp
aaa
inc
pop
testl
test
mov
xor
ja
xchg
in
sbb
addb
fstpt
sbb
fwait
les
jae
pop
add
jge
loopne
sahf
jp
mov
mov
shll
pop
push
adc
xor
push
cwtl
repnz
dec
add
js
aaa
xchg
push
push
jns
pop
test
fcoml
insl
hlt
iret
sbb
pop
mov
mov
outsl
insl
sub
mov
xor
xor
cmpl
cmp
jnp
xor
cmpsl
shr
jae
sbb
lgs
sbb
gs
mov
popa
lock
jl
mov
push
xchg
or
fcmove
into
mov
shlb
daa
jmp
pop
imul
mov
mov
sub
lods
stos
hlt
imul
lods
in
or
jns
lcall
jge
loope
dec
mov
push
adc
dec
inc
sbb
stos
push
inc
ffree
in
mov
cltd
cli
lds
stos
sbb
add
and
cmp
sub
insb
dec
add
flds
inc
roll
adc
mov
fidivrl
les
test
loopne
ret
pop
push
cli
mov
bound
xchg
inc
pop
push
mov
loopne
inc
push
das
sub
xchg
or
movsl
cmp
lret
loop
daa
or
sub
inc
push
sub
or
mov
lahf
mov
push
or
testl
mov
stos
sub
add
sub
and
or
inc
sub
inc
push
xchg
xchg
sub
sti
andb
xchg
dec
lea
cmp
out
and
xchg
or
in
movsl
sub
imul
jns
dec
add
xchg
test
push
loopne
push
pop
ljmp
shr
pusha
mov
mov
mov
push
sub
adc
mov
xor
lret
push
and
aad
sbb
sub
push
data16
lock
push
push
mov
lcall
sbb
or
push
jl
int3
and
pop
cmp
mov
sahf
in
or
mov
data16
jb
xchg
sahf
push
and
push
faddl
mov
mov
sbbb
cwtl
dec
sbb
cltd
out
insl
mov
mov
mov
aas
subb
sarl
pop
push
inc
xor
sbb
push
cld
test
fs
mov
jp
mov
leave
sub
xlat
or
add
mov
add
xor
aam
sbb
orl
test
clc
and
lds
lods
scas
adc
cltd
sbb
xlat
adc
jmp
xchg
sbb
dec
add
jo
xor
inc
dec
fs
pop
sub
adc
pop
jge
adc
mov
std
and
pop
adc
pop
or
jg
sbb
out
aam
jp
mov
adc
jnp
imul
fwait
mov
xor
mov
mov
lret
enter
stos
xor
iret
mov
lret
cmpl
addr16
iret
mov
outsl
shll
ret
or
sub
dec
les
mov
push
push
inc
and
ds
add
in
and
into
lret
mov
icebp
pop
aam
xor
testl
lods
mov
ds
cli
xchg
xor
xor
fidivrl
or
in
or
push
push
inc
aam
lahf
mov
pop
andb
hlt
push
lock
dec
and
cltd
inc
movsl
gs
mov
cmp
outsl
mov
cmpsl
mov
ficoms
fimull
xlat
add
cmp
daa
and
jle
push
push
ja
xchg
push
ror
push
sub
inc
test
sub
jae
in
sarb
addr16
addr16
mov
outsb
add
inc
mov
cs
repz
cli
cmpsb
lds
inc
cli
or
les
out
inc
sbb
cld
addb
cmp
fsts
inc
xor
inc
inc
cmp
xchg
in
ljmp
sub
lcall
ja
xor
sbb
pop
cwtl
mul
stos
into
mov
js
sub
data16
out
inc
sub
fcoml
mov
sub
iret
adc
mov
jp
js
lock
push
loope
xor
int3
cld
loopne
xor
in
das
shlb
subl
out
clc
arpl
test
push
xchg
jbe
int
test
lret
mov
mov
mov
xchg
adc
mov
mov
mov
xlat
adc
xor
jmp
lea
hlt
xor
imul
test
in
pop
icebp
mov
ret
test
addr16
ficoml
out
xorb
insb
das
in
sub
pushfw
mov
dec
jnp
pop
mov
sub
or
cli
mov
int
cmpl
dec
cmp
mov
sub
or
fisttps
mov
scas
pushf
aad
addb
lods
push
mov
in
sbb
sbb
pop
lds
push
fdivs
out
sbb
mov
dec
popf
dec
jae
push
andb
cmp
int
adc
sbb
test
add
lret
xchg
mov
cmp
sbb
pop
test
add
cmp
iret
cmpsl
and
fldt
ret
pop
cmp
sub
xor
push
mov
inc
rcll
jmp
nop
push
xchg
cmc
stos
jmp
fdivrl
lds
shrb
pop
pop
mov
cmpl
add
pop
mov
mov
sti
and
xlat
imul
loop
add
aam
pop
rolb
pushf
lret
jle
das
cwtl
mov
push
sbb
sbb
scas
dec
jae
cmp
dec
mov
ljmp
out
mov
pop
ret
pop
mov
cmc
push
ret
icebp
sub
cmpsb
sbb
cmp
int
cs
mov
sti
add
push
xor
ret
ficompl
lret
fwait
scas
adc
dec
in
jle
inc
sbb
inc
gs
add
xor
jnp
call
pop
imull
xor
ljmp
push
pop
in
inc
loopne
shll
fistpl
pop
mov
or
push
adcb
fstp
out
xchg
mov
lret
dec
push
les
push
shrb
rcll
xor
jno
call
shlb
ja
fdivrl
add
and
data16
adc
dec
jb
test
mov
out
jp
inc
out
adc
or
into
in
push
addl
add
pusha
push
sbb
add
xchg
arpl
xchg
pop
mov
loopne
sbb
and
adc
mov
lds
sub
cmpsl
push
cmpl
movsl
xchg
xor
mov
jle
inc
test
pop
pop
daa
popf
adc
test
stos
xor
push
movsb
jecxz
imul
mov
jl
lods
dec
sbb
adc
test
in
lret
aad
pop
in
mov
mov
jne
js
sbb
shlb
sti
add
out
mov
test
fisttpll
sarl
jae
jl
cmp
push
ret
loope
sti
xor
ret
adc
cmp
in
jl
sbb
call
dec
add
cmp
push
mov
inc
jge
outsb
add
jbe
push
pop
and
push
cmp
and
int3
ss
lea
inc
cmp
push
movsl
subl
in
repnz
clc
scas
sub
cli
xchg
adc
ja
xchg
mov
ret
insb
in
sbbb
sub
or
lahf
and
pop
lcall
add
xor
adc
shl
add
cwtl
ret
std
push
shr
stos
gs
rolb
pop
cmp
push
sub
out
mov
daa
jae
das
xchg
sbb
jle
dec
loopne
push
leave
add
fwait
cmpsl
daa
mov
jle
jnp
xor
pusha
loopne
dec
mov
rorb
or
fistps
jl
dec
aas
dec
repz
xor
stos
add
shl
ljmp
mov
sub
scas
dec
idivl
std
dec
push
leave
dec
pusha
cli
sbb
daa
aam
add
or
test
pushf
xchg
loopne
es
or
xlat
test
fcomp
add
repz
ret
aad
dec
mov
xchg
insl
mov
jp
lcall
loop
xchg
ljmp
fs
xchg
sub
cmp
jnp
rolb
enter
sbb
jne
add
inc
jmp
mov
xlat
bnd
loop
pop
shll
enter
xor
mov
sti
rcll
fimuls
mov
pop
dec
insl
cmp
mull
jns
iret
dec
fistps
or
loop
mov
cmc
movsl
jns,pt
stc
inc
pop
xor
mov
das
mov
push
in
cmp
sub
inc
adc
ret
test
push
fcom
sub
sbb
mov
mov
mov
jo
inc
push
pop
sbb
push
es
push
stos
inc
or
push
and
je
sbb
dec
push
fidivl
pop
mov
sub
or
mov
sub
mov
or
push
scas
add
cmp
loope
sbb
lea
out
imul
dec
ret
and
loopne
cmp
or
jnp
movsb
add
mov
pushf
or
push
xor
mov
loopne
and
xor
and
pop
add
mov
cmpsl
out
mov
addb
outsb
les
xchg
ret
and
imul
stc
push
or
mov
scas
out
inc
mov
imul
jae
mov
xor
aaa
int
dec
dec
cmpsl
pop
out
lahf
orb
nop
sarl
outsb
test
mov
pop
fldl
mov
dec
dec
lret
out
lods
jnp
xchg
divb
mov
push
pop
xchg
jmp
push
cmp
ljmp
fists
cmpsl
sbb
cmp
popf
addb
fimull
in
sahf
rorb
ljmp
adc
inc
out
fiaddl
out
and
sub
jl
inc
adc
inc
jae
push
jb
imulb
mov
jge
lea
dec
pop
jne
sub
pop
dec
sti
or
pop
stos
cmpsb
mov
push
movsb
leave
mov
dec
jnp
pushf
aad
sbb
pusha
cli
out
cmp
jp
daa
mov
mov
dec
out
mov
inc
cmp
cmp
jb
xor
dec
iret
test
fidivrl
fdivrl
jne
jmp
add
inc
faddp
fldt
fcoms
or
dec
pop
inc
dec
sti
inc
cmp
and
in
push
andl
shll
lds
inc
jg
fst
enter
jmp
rclb
lret
sbb
fstpt
jg
or
ss
fistl
jo
stos
xor
aad
incb
jnp
jmp
iret
insb
xchg
dec
sbb
xchg
pop
sbb
jg
scas
sbb
cmp
xor
sbb
loopne
aas
dec
int
or
jle
mov
aas
lret
cmp
or
add
xor
fisubrs
hlt
out
jecxz
rcl
sub
dec
lret
push
ret
xchg
mov
imul
push
outsb
ffree
and
jne
push
int3
int3
scas
adc
jl
jno
jl
jg
test
divb
mov
test
in
hlt
jbe
cmp
push
sahf
mov
mov
add
jne
push
fsubrs
jnp
movsb
xor
inc
outsb
xchg
insb
sbb
pop
cmp
cmp
jb
out
cwtl
jecxz
and
nop
pushf
cs
lcallw
jmp
sbb
lds
push
cwtl
negb
and
repnz
mov
stos
ja
pop
adc
std
arpl
sbb
xchg
fs
fisubrs
rcll
cmp
jae
adc
testb
dec
stc
adc
sub
scas
repnz
pop
adc
imulb
nop
out
out
aaa
das
mov
jb
add
das
nop
and
cmp
inc
scas
inc
in
faddl
mov
out
daa
aam
negb
push
xor
mov
sbb
filds
jne
mov
jp
pop
sbb
mov
mov
daa
pop
filds
sub
adc
movsl
sbb
pop
aas
sbb
sbb
or
aas
cli
mov
pop
mov
mov
xor
je
rcll
outsl
cs
inc
push
in
dec
jb
fs
mov
push
fistpll
add
sahf
dec
cli
xchg
xchg
data16
mov
lahf
insl
mov
sahf
pushf
pop
cld
jl
jmp
sub
xchg
mov
push
xchg
cli
imul
std
mov
jge
in
ret
rclb
push
pop
call
clc
out
fisubs
idivb
subb
inc
inc
divl
imul
jnp
cmp
xchg
inc
fwait
cmp
pop
adc
dec
sub
dec
loope
and
sub
and
lcall
pop
fs
fldcw
jmp
adc
jp
aaa
lret
pop
jl
mov
jns
rcl
into
push
xor
test
xlat
inc
mov
add
jg
push
jno
pushf
sbb
test
aas
testb
cwtl
lods
lock
xor
test
mov
dec
hlt
sub
int
and
fsts
jp
xchg
jecxz
fimuls
lods
cltd
xchg
call
pusha
sbb
jno
adc
push
and
add
ret
mov
cmc
cmp
add
sbb
das
inc
sub
lret
pop
and
inc
in
inc
push
jl
adc
cmc
fsubl
jle
pop
ljmp
adc
popa
mov
sbb
adc
xchg
xchg
lods
sub
ds
jl
push
push
inc
movsb
fsubrl
mov
ret
mov
idivl
mov
popa
pop
xor
fimuls
cmp
dec
setge
mov
sbb
mov
sahf
pop
adc
mov
test
cli
cs
das
imul
loopne
shll
mov
loopne
jle
imul
xchg
addb
test
movsb
jmp
es
fs
cli
ss
loop
pop
cmpb
push
xchg
sub
popa
ja
loope
enter
sahf
inc
add
and
out
mov
cltd
and
les
mov
mov
dec
and
jns
adc
sti
mov
xchg
or
inc
push
xlat
pop
push
push
jae
mov
out
jo
xor
mov
in
pop
sub
int
xchg
aad
mov
xor
cmovno
arpl
notl
mov
xor
dec
orl
xchg
out
jecxz
add
aad
sbb
aas
popa
jle
dec
mov
mov
pop
mov
outsb
pop
dec
mov
pop
aaa
inc
into
icebp
test
xchg
adc
sbb
add
jae
add
iret
in
imul
sub
pop
and
inc
xor
jmp
imul
data16
mov
dec
pusha
push
mov
cmc
adc
fcmovnbe
or
adc
nop
adc
push
daa
cmp
push
lock
jmp
jbe
adc
testb
sub
into
stc
mov
movsb
in
mov
mov
ret
pop
jns
mov
xor
div
into
fisubs
xchg
mov
daa
lea
sahf
mov
dec
adc
pop
iret
ret
inc
cmp
adc
cli
mov
out
arpl
test
xor
xlat
negb
cmpl
add
inc
pop
sarl
pop
dec
and
call
mov
dec
cmp
add
test
or
das
sub
mov
dec
out
in
cwtl
outsl
lods
xchg
cmp
sbb
cmp
mov
ret
loopne
jmp
andb
mov
addr16
push
xchg
push
jno,pt
mov
jl
dec
push
mov
pop
lcall
adc
cmc
jbe
or
scas
mov
icebp
pop
scas
pcmpeqd
ja
push
xchg
push
add
add
insl
inc
daa
jge
jns
int3
sbb
jb
mov
push
aad
enter
add
or
sbb
bound
pop
dec
mov
repnz
and
cmp
fdivr
mov
fwait
pop
xchg
outsb
sarb
pop
xor
sarl
push
pusha
jmp
xchg
sbb
movsb
imul
int
enter
test
mov
lret
out
mov
push
dec
jmp
mov
mov
mov
cld
fs
addr16
aaa
push
push
mov
adc
scas
ja
pop
movsl
movsl
bound
mov
outsb
xor
pop
das
mov
cmp
ss
bound
mov
xor
cmpb
inc
cmp
xor
fs
or
pop
mov
leave
wbinvd
dec
pop
add
inc
xchg
xlat
mov
ljmp
mov
or
sub
xlat
clc
mov
pop
push
cmp
imul
ds
test
in
pop
jo
jg
andb
mov
dec
rcrl
fcmovnu
mov
adc
jecxz
mov
out
jge,pn
sbb
fnstcw
cmpsl
inc
jmp
sahf
inc
dec
jmp
cmp
push
andb
inc
push
idivl
adc
and
orb
into
xchg
rclb
mov
push
xchg
loopne
add
addr16
repz
jge
negb
dec
or
sti
dec
cmp
jge
je
outsl
in
bound
outsb
and
es
bound
dec
cmp
add
cmp
call
ret
or
xlat
fwait
jae
mov
data16
jbe
jae
mov
sub
ficompl
mov
rolb
push
lds
push
cmpsl
cmp
dec
mov
jl
mov
enter
pushf
in
lahf
fcomip
aam
mov
imul
or
divb
lods
in
ficoml
mov
jo
mov
mov
push
xor
mov
fs
out
adc
repz
push
pushf
jp
outsb
mov
push
push
int
dec
xchg
out
mov
in
pop
mov
movsb
ret
ja
jl
ficoms
push
inc
pop
lds
add
test
push
in
push
or
repnz
fnstenv
jg
mov
int3
jb
lods
jne
lods
lret
and
in
iret
test
out
aam
jg
lret
mov
xchg
mov
or
data16
pop
cmp
int
push
jp
cmp
cmpsl
repnz
repz
lea
jge
mov
out
push
mov
out
icebp
mov
push
addb
imul
sbb
add
jnp
in
or
dec
adc
dec
xchg
loopne
int
or
fldpi
mov
pop
pop
cltd
and
out
sarb
mov
testl
xor
push
jne
stc
jg
push
mov
iret
mov
pop
in
jnp
inc
scas
push
xor
push
fsubs
mov
test
addr16
loopne
pop
xchg
jge
mov
and
out
fcmovb
push
aaa
nop
stc
and
or
movsb
pop
inc
test
dec
stos
push
pop
xchg
mov
lahf
outsb
pop
sub
jae
and
adcb
mov
nop
pop
insb
mov
sbb
pop
cmp
lock
scas
sbb
xchg
into
je
inc
sbbl
fnstenv
adc
cmp
xchg
rcrb
jbe
jnp
mov
push
mov
scas
cltd
or
es
sti
lods
sbb
inc
cmp
pop
flds
mov
rcrb
pop
lret
enter
call
cli
in
sbbb
rcrb
push
and
test
jnp
pop
in
dec
push
clc
jp
cmc
and
cmp
dec
lods
rsm
jmp
insb
mov
push
xor
sub
cmp
dec
out
sbb
pop
mov
jno
xor
hlt
movsl
jnp
push
enter
ja
jge
push
xchg
or
cs
in
loopne
cmp
into
add
or
test
dec
cmp
popa
incl
loopne
insb
pushf
inc
and
mov
iret
inc
add
and
stc
clc
pop
out
cltd
dec
push
mov
addl
aaa
adc
add
rcrb
daa
popf
adc
daa
sub
xor
aaa
mov
aam
fs
jecxz
xor
int
xor
xor
or
sub
pop
mov
lcall
pop
xor
in
in
cwtl
mov
ror
mov
mov
lods
xorb
push
mov
add
push
cmp
cli
scas
setb
dec
mov
push
mov
pop
add
adcl
stos
addl
add
add
rclb
pop
ja
movb
mov
push
inc
in
xor
sbb
sub
mov
cltd
clc
jo
cld
adc
xchg
adc
adc
out
sub
cmpsb
jg
lods
ret
cmp
pop
hlt
stos
out
js
or
pop
enter
dec
sti
xor
xor
ret
adc
call
in
dec
out
adc
adc
mov
add
outsb
dec
jge
mov
push
sti
mov
push
insb
push
fstp
enter
aad
or
pop
mov
repnz
push
pop
rep
push
rcr
jne
imul
adc
jbe
dec
aam
mov
jo
sarb
sub
pop
xchg
in
out
mov
jg
adc
scas
rorl
push
iret
jnp
xorb
mov
or
and
push
mov
xchg
and
fidivs
cld
les
mov
leave
pop
adc
enter
pusha
mov
test
je
mov
mov
mov
leave
mov
and
in
push
clc
xchg
jl
fisubrl
adc
lea
mov
sbb
mov
outsb
movl
cltd
jbe
jb
lods
mov
pop
sarb
pop
lret
hlt
push
shlb
mov
les
inc
fcompl
xor
nop
and
out
pop
leave
les
mov
push
pop
test
inc
ficomps
cltd
push
dec
inc
mov
scas
jg
shll
fcoms
scas
jmp
inc
stos
fiaddl
lret
and
dec
or
pop
jecxz
nop
jmp
int
mov
jne
and
pop
jae
mov
and
mov
pop
mov
lret
jmp
jno
scas
or
sub
mov
mov
inc
or
pop
imul
jmp
test
add
aas
loop
xchg
cmp
mov
shlb
mov
int
out
jb
in
je
ja
push
cmp
jg
push
mov
or
add
xchg
sub
pushf
test
mov
stos
dec
ret
in
dec
sub
sub
xchg
pop
add
cmp
scas
xchg
cmpsl
inc
push
xchg
insb
mov
aad
shr
mov
test
mov
inc
push
popf
mov
inc
mov
clc
shrb
movsl
mov
inc
pop
inc
sub
push
sub
push
mov
dec
or
clc
mov
lock
adc
xchg
dec
adc
pushf
fnstenv
cltd
mov
xor
mov
push
and
mov
ss
mov
and
add
fstpt
cwtl
xlat
mov
outsb
cmpsl
sbb
cmpsb
insb
adc
aaa
jecxz
adcl
xchg
xchg
dec
fsubs
ror
lahf
push
pushf
xchg
fistps
aad
jb
mov
mov
das
push
push
xchg
xor
cmpsl
pop
ret
sub
or
test
or
sbbl
mov
add
outsl
mov
int3
in
sbb
dec
dec
add
sbb
sbb
push
jae
int3
aam
xchg
push
jne
lds
sti
les
aad
adc
pop
cmp
push
cmp
jns
xor
adcl
cmp
lods
mov
adc
inc
test
hlt
adc
call
aad
call
test
fwait
mov
sub
fistpl
jle
ffree
addr16
xor
jg
std
stc
jns
test
fdivs
cmpb
mov
repz
call
inc
mov
out
leave
scas
push
aaa
mov
or
into
rcrl
adc
dec
sub
sbb
repz
lret
jnp
mov
or
out
insl
in
jb
dec
aam
cltd
out
dec
ficompl
mov
pop
cmp
mov
inc
nop
loopne
push
adcl
dec
es
pop
in
and
lds
xor
mov
cmp
mov
dec
outsb
fstpt
dec
cmp
cltd
pusha
jno
fwait
les
add
mov
cmpsl
xlat
sbb
imul
aam
fcomip
adc
les
fistpl
fdivrl
adc
enter
inc
loope
sbb
stos
push
pop
xchg
rcr
xor
sbb
lret
jns
xor
inc
mov
push
adc
pop
xlat
mov
sti
pop
cmp
ss
jg
xor
lea
mov
inc
movsb
and
rcl
leave
add
fbstp
je
icebp
ja
js
add
fmuls
mov
test
push
mov
ss
adc
dec
push
es
inc
enter
insl
xchg
adc
addr16
lds
orl
mov
stos
push
jne
fidivrs
daa
stos
xchg
add
mov
jne
gs
push
das
push
cmpsb
loope
jno
outsl
ljmp
sub
cmc
inc
and
imull
adc
mov
cmp
push
cld
and
push
cmpsl
sub
mov
clc
sub
push
sbb
add
sbb
cltd
hlt
xchg
clc
and
inc
dec
jmp
out
sahf
nop
cmp
jp
adc
xchg
pop
ret
cld
push
data16
sbb
inc
sub
push
out
add
lea
mov
inc
mov
int
and
jb
sub
fdivrl
xchg
mov
aas
aas
mov
and
cmc
lds
movl
outsl
leave
xor
insb
aaa
mov
jo
sub
ljmp
dec
or
shl
push
sbb
movsb
divb
push
mov
shrb
cmp
das
cmp
stos
mov
xor
push
push
and
push
iret
movsb
out
fwait
and
sbb
dec
jecxz
push
xor
dec
shll
aam
movsb
sub
and
lock
negl
sbb
mov
out
outsl
push
and
ret
xchg
test
in
adc
mov
aas
mov
repz
outsl
fs
inc
in
test
push
xchg
mov
push
xchg
pop
call
inc
inc
mov
add
sub
test
sub
xchg
mov
jmp
stos
jae
add
cld
clc
xor
add
dec
xchg
leave
xchg
icebp
addl
mov
and
test
jns
pusha
imul
mov
push
stos
ds
jo
lea
xchg
lret
in
inc
movsb
adc
jnp
xchg
call
sub
pop
jmp
dec
mov
loop
push
xchg
sub
adc
xor
adc
sbb
das
out
out
push
int
adc
push
ds
scas
rcr
xchg
sahf
push
orl
hlt
fcompl
fisttpll
jae
lahf
int3
mov
mov
test
or
xlat
push
test
shr
les
pop
stc
fwait
push
insl
pop
ss
cmp
lret
fnstcw
out
enter
sub
cmp
add
test
icebp
inc
repz
cmc
lods
mov
mov
xchg
lret
adc
iret
inc
jg
mov
je
in
and
and
jmp
push
imul
iret
cmp
fdivrs
insb
adc
jge
nop
aad
enter
fdivl
incl
add
stc
imul
iret
cmp
sub
xchg
mov
icebp
int3
jle
dec
sbb
xchg
test
dec
addb
add
adc
iret
dec
lods
cld
xor
rorb
movsb
add
ret
adc
dec
mov
pop
and
or
mov
lock
int
push
push
stc
in
mov
subb
test
ss
cmc
sbb
and
js
cli
insl
test
cld
lcall
jns
mov
mov
es
add
push
jmp
mov
repnz
push
arpl
mov
iret
std
sub
test
pop
or
xchg
xor
xchg
out
inc
add
iret
lds
arpl
add
int
mov
and
dec
ret
add
cwtl
mov
rcl
aam
les
cwtl
cmp
cmpsl
push
or
lods
addl
pop
fldl
repz
mov
int3
mov
out
jecxz
test
popl
mov
pmullw
xchg
movsl
outsb
jb
push
inc
test
mov
or
xor
adc
lcall
test
xchg
js
gs
mov
cmpxchg
lods
stc
pop
mov
fsubs
xchg
loope
imul
jle
push
in
mov
mov
sub
mov
sub
clc
cmc
jno
movsl
test
and
mov
ljmp
fists
cmc
rcll
in
and
pminub
ror
nop
xchg
std
xchg
sub
rclb
lods
sbb
lea
repz
mov
and
aaa
addr16
sbb
mov
fcoms
sarb
and
adc
pop
loop
cmpsl
jp
lods
fnstcw
xchg
in
lea
je
or
sub
sbb
sti
in
mov
addb
adc
popa
int
cli
test
or
enter
insb
insb
xchg
cld
add
sbb
loope
loopne
mov
cs
imul
stos
add
cli
lods
cmp
sub
push
xchg
push
rcrl
jge
mov
fwait
add
int3
fidivl
out
negb
inc
out
insb
mov
xor
add
pop
gs
jg
cmp
lods
nop
int3
xchg
jl
adc
jl
sub
scas
icebp
sti
xor
jae
push
adc
push
mov
inc
adc
sub
daa
dec
pop
sbbl
push
repz
popf
fsubl
xchg
xchg
loop
xchg
fs
pop
int
adc
xor
xchg
testb
cltd
data16
or
in
and
lods
xor
sub
js
push
inc
inc
out
xor
dec
inc
jnp
push
aam
xchg
pop
pop
negb
mov
inc
inc
bound
inc
pop
cmpsl
jne
adc
imul
push
mov
fwait
jg
in
repz
or
sti
dec
cli
cmp
js
insl
repnz
mov
je
or
movsl
and
je
rolb
out
xlat
stos
sbb
mov
pop
icebp
test
adc
pop
test
arpl
push
add
out
push
jecxz
rol
cltd
ds
xchg
push
call
mov
pop
push
in
xchg
jge
in
mov
jbe
jge
es
and
lret
and
lock
push
sub
or
pop
aaa
and
dec
cmc
xlat
xchg
and
lcall
sub
pusha
imul
int
cltd
adc
lret
mov
jns
inc
je
test
or
stos
es
or
pop
dec
dec
fildl
clc
and
sub
mov
sub
sbb
and
mov
jo,pn
mov
cs
addr16
jmp
mov
or
jecxz
or
push
fmuls
or
fimull
add
or
inc
add
mov
mov
inc
test
lea
movsl
fcmovb
lret
push
test
sub
roll
sub
mov
enter
test
cmc
and
adc
test
das
dec
outsl
jnp
mov
fcomps
or
cld
mov
lods
aam
xor
in
roll
pusha
lock
jle
iret
xchg
push
int3
mov
adc
and
push
rol
addr16
cmp
cmp
add
data16
aas
ret
pop
pandn
pop
sbb
xchg
int
cltd
jp
xlat
pop
sub
dec
roll
and
ja
fildl
push
jmp
and
xlat
in
pop
inc
or
xchg
jno
adc
in
in
lock
fsubrl
pop
xchg
fdivrl
push
mov
jno
xchg
js
fdivl
xor
fs
and
lods
fcomps
mov
mov
adc
add
xchg
push
jmp
unpcklps
jle
in
hlt
das
call
js
sbb
mov
push
cmp
cwtl
adc
scas
jmp
insl
movsl
andl
mov
jp
mov
mov
jb
add
call
push
popf
jne
cmpsb
nop
mov
xor
sub
fnstenv
cli
add
lcall
adc
dec
pushf
std
inc
outsb
decb
lret
loopne
pop
pusha
push
repz
cmp
loopne
dec
test
sbb
jge
icebp
jmp
jecxz
pop
jmp
ds
ja
adc
icebp
test
loop
icebp
cmpsb
insl
or
mov
mov
das
rcll
or
add
test
pop
xor
xchg
pop
dec
ja
popa
cmp
jecxz
mov
rolb
xchg
mov
jge
push
sbb
xchg
hlt
mov
ljmp
and
out
in
xchg
out
dec
fisubrl
xor
imul
push
test
addr16
xor
jmp
pop
arpl
add
mov
dec
lret
and
dec
mov
mov
sub
and
orb
and
fs
push
repz
xor
xchg
inc
std
push
mov
test
push
pop
mov
bound
std
lods
subb
push
jo
das
outsl
jecxz
sbb
jnp
xor
js
adc
popa
adc
cwtl
xchg
xchg
or
pop
in
xchg
es
or
out
jo
xchg
jo
mov
ret
test
mov
mov
inc
push
jmp
ss
aam
mov
mov
lds
xor
fisttpll
cld
rcll
sub
adc
mov
mov
sbb
xchg
xor
sbb
cltd
das
pushf
mov
into
ljmp
stc
sbb
imulb
dec
lea
dec
mov
fs
pop
test
dec
xor
daa
adc
aas
sub
pusha
repz
nop
dec
in
fs
stos
sbb
scas
dec
jmp
cltd
outsb
stos
xchg
sbb
sbb
cmpsb
xlat
int3
adc
pop
lret
and
sub
xchg
lret
jb
out
or
enter
mov
out
rcrb
pop
add
or
lods
aas
push
popf
sti
jbe
push
and
pop
js
insl
insl
punpcklwd
or
and
fwait
adc
scas
jb
fwait
aam
push
and
jecxz
lods
out
hlt
mov
jae
std
rcr
leave
aam
or
mov
imul
cwtl
pop
std
js
push
aam
sub
push
cmpsl
and
mov
mov
push
or
adc
add
jns
add
or
ljmp
push
xchg
faddl
dec
loope
add
ja
pop
inc
sbb
xor
push
cmp
add
test
sub
add
aad
fwait
mov
popa
mov
aaa
jae
pop
cmp
add
incl
std
adc
push
andl
mov
pop
push
in
jno
mov
cmp
jl
inc
stc
mov
pop
lods
ror
int
pop
jbe
push
inc
push
icebp
fwait
repnz
push
and
add
push
push
ss
jg
fcmovnu
mov
fs
sub
fsts
pop
cmc
or
fs
inc
cmpsl
mov
gs
ret
and
iret
adcl
adc
sarl
mov
in
mov
add
dec
jbe
lock
cmpsl
mov
icebp
push
mov
or
daa
pushf
push
sub
sub
xchg
mov
dec
pop
ds
push
shlb
arpl
jne
idivb
iret
test
notl
enter
filds
shrl
mov
jmp
jg
ds
push
fs
out
add
test
rcrb
push
int
add
jb
and
iret
rcr
adc
lret
add
cmpsb
das
iret
xchg
add
jne
popa
lock
out
mov
iret
loop
jmp
inc
pushf
xor
add
push
inc
push
fdivp
ds
es
in
jns
cwtl
cmp
xchg
cmpsb
fs
jl
pop
mov
cltd
loope
jle
jns
cli
stos
sbb
je
into
out
mov
shl
jl
push
mov
das
dec
pop
gs
sub
mov
in
inc
mov
and
cld
out
shlb
push
pusha
daa
sbb
pop
xlat
ret
sahf
jle
in
push
pop
mov
mov
dec
push
xor
fimull
adc
repz
xchg
xchg
outsl
sbb
dec
stos
sbb
cld
pop
out
push
call
cmp
dec
inc
lods
and
sbb
mov
mov
xor
out
pop
jb
dec
cltd
cmp
fnsave
shlb
cmp
and
xor
repz
and
sbbl
or
aaa
rorl
jbe
jp
das
out
test
andb
cmp
aaa
mov
mov
int
mov
ja
sbb
dec
jmp
add
jg
cmpsb
add
xchg
jl
aas
hlt
inc
popf
shrb
mov
sub
aam
insl
fwait
lcall
push
jb
push
xchg
fiaddl
pop
mov
lcall
fadds
in
mov
mov
push
pop
cmpsb
rclb
jnp
push
popa
xchg
out
push
rorb
int3
dec
xchg
ljmp
add
add
outsl
fists
inc
scas
or
jo
sbb
mov
xchg
xchg
fistpl
ja
cwtl
xor
cli
je
inc
and
shrl
test
int3
xor
push
scas
cmpsl
adc
fcmovnb
xchg
idiv
cmp
push
jl
cmp
in
dec
maxps
lds
lods
ret
icebp
push
enter
sbb
out
sbb
mov
push
sbb
inc
fwait
into
jl
and
dec
xchg
mov
repz
stos
mov
xor
push
cmp
sub
or
mov
jns
adc
out
shll
cmp
and
ret
xlat
clc
js
sub
jbe
mov
mov
mov
imul
lret
jno
jp
bound
pop
fucomp
push
icebp
andb
push
jae
andb
outsb
ret
data16
mov
push
testb
xor
lahf
loopne
cmp
xchg
rolb
aad
inc
cmp
mov
subb
inc
or
jbe
test
loopne
gs
jg
dec
cmpsb
mov
sarl
xchg
jno
dec
adc
imul
scas
lcall
dec
rolb
push
or
outsb
sbb
mov
sub
out
pop
orb
sti
sar
xchg
mov
mov
or
jecxz
or
fwait
dec
push
pop
or
mov
lahf
rcll
xchg
jmp
lock
add
mov
aas
repz
mov
mov
lods
and
nop
dec
jne
sbb
call
or
and
lea
les
pop
pushf
pop
dec
jmp
xlat
cmp
incl
mov
pop
in
test
mov
xor
xchg
in
push
xchg
inc
mov
in
out
in
call
das
lcall
push
mov
ret
pushf
js
sub
lea
inc
jb
add
sti
xchg
add
push
jg
into
setae
inc
jae
sti
xlat
sbb
sub
mov
or
divb
cltd
movsb
or
outsb
in
addr16
mov
sub
adc
add
cmp
ds
mov
mov
outsl
shll
mov
xlat
test
lods
outsb
jg
add
imul
push
lods
mov
lea
rcl
insl
out
fstl
ljmp
jl
sbb
ljmp
enter
int3
xor
push
xchg
jge
inc
push
fucom
mov
xchg
movsl
movsl
and
mov
jmp
add
je
fcmovnbe
inc
dec
aam
sub
test
dec
scas
lods
sub
sarl
test
imul
push
jae
adc
mov
cmp
in
sbb
xlat
loop
push
gs
dec
stos
movb
loop
inc
mov
inc
xchg
push
or
sarb
sbb
pop
in
push
cmp
add
fistps
pop
dec
jle
add
mov
push
or
sub
pop
mov
loopne
pop
addr16
xchg
jmp
cmp
jecxz
jge
int3
call
hlt
jae
jmp
adc
inc
js
out
les
xlat
ljmp
aad
cmp
mov
mov
xchg
dec
aas
mov
cwtl
pushf
imul
or
out
cmpsl
add
scas
dec
mov
xchg
cli
and
pop
loop
pop
subl
and
mov
leave
fdivl
mov
inc
or
imul
mov
in
jmp
mov
sahf
push
cld
movq
ret
xchg
les
cmp
fisttpll
xor
adc
sub
or
xchg
add
adc
push
mov
jge
mov
shll
jno
push
in
stos
cmp
cmp
pop
jno
arpl
or
jg
ret
push
mov
mov
pop
cwtl
cmp
cmp
andb
aad
jg
lds
mov
jo
lods
cld
adc
loop
add
push
xor
test
dec
sahf
stc
jb
sbb
fwait
or
dec
pop
sbb
hlt
imul
xchg
popf
xchg
cli
add
and
xchg
hlt
jg
jge
cmp
adc
jle
add
mov
aaa
xor
insl
cmp
push
sar
outsl
or
lea
stos
cmp
jecxz
dec
cmp
sahf
outsb
inc
pop
mov
insb
cmpsl
shl
fildll
pop
mov
sbb
cmp
repz
lret
mov
insb
bound
in
xlat
and
rorb
incl
jle
pop
cmp
icebp
adc
inc
pop
lods
loope
stos
loopne
mov
ret
push
aad
adc
into
pop
cmpsb
push
ds
jmp
and
insl
pushf
xchg
pop
inc
orl
insb
cmpsb
push
adc
jno
sti
dec
pop
cmp
add
cli
cmpsb
loopne
ficompl
dec
push
lods
xchg
pushf
xchg
test
pop
and
sti
lret
gs
xchg
fs
jno
and
dec
sub
imul
cli
aam
das
inc
sbb
jle
pop
rorl
sbb
xlat
daa
push
outsb
bound
push
adc
rorb
and
inc
sub
dec
mov
loopne
sub
sub
inc
add
sti
push
out
adc
imul
add
add
jg
mov
xchg
dec
ljmp
pop
mov
cmc
lock
scas
insb
cs
fmul
pop
aas
dec
jge
sub
inc
or
int3
lret
and
enter
xchg
sbb
mov
sub
pop
popf
cwtl
gs
inc
jbe
out
popa
push
sub
sub
mov
mov
and
xchg
cld
inc
cltd
out
fcoml
in
sbb
in
scas
inc
pop
in
aam
aaa
push
adc
mov
fsubrs
ja
and
dec
cmpsl
dec
inc
mov
ljmp
xor
nop
pop
fisubrl
sbb
mov
sti
nop
xchg
mov
xlat
rorb
mov
dec
ss
fcomp
mov
lret
jb
cmp
sbb
in
ret
jbe
pop
push
push
lods
jo
cmp
xorl
add
jecxz
inc
add
push
xchg
aam
cmpb
shr
jno
sub
cmpsl
push
leave
mov
or
cs
bound
sbb
lahf
jg
in
xchg
mov
cmp
shlb
lea
inc
mov
fadds
popf
add
dec
fmul
pop
mov
in
hlt
mov
in
test
dec
jg
jnp
mov
fcoms
xor
and
sub
lea
sub
pop
push
or
xor
adc
dec
call
cmp
arpl
mov
lock
jmp
mov
sbb
xchg
xchg
sbb
rcrb
jmp
cmp
test
std
lret
sbb
sub
iret
data16
rcl
mov
lods
lods
rcrl
enter
in
fisubl
dec
dec
movb
dec
incb
rcr
mulb
mov
out
adc
mov
or
pop
mov
or
jp
mov
xchg
fcmovu
cmp
adc
push
mov
mov
hlt
xchg
divb
pusha
sub
mov
lea
pop
xor
xchg
push
ss
mov
sub
cs
pop
int3
sahf
inc
push
cmp
push
or
add
std
gs
das
jp
inc
inc
pop
daa
das
push
add
pop
xor
mov
jecxz
xchg
xchg
fstp
popa
pop
xor
rcrl
mov
mov
imul
mov
xor
lds
cmpsb
lahf
mov
stos
andl
pop
jnp
sbb
mov
faddl
decb
cmp
out
push
hlt
mov
loop
cmpsl
dec
push
jbe
aas
sahf
push
push
dec
inc
jb
outsl
jno
sub
out
inc
jl
push
lock
or
jbe
mov
and
xchg
jle
jae
loope
cmpsb
jg
and
mov
lea
das
cmpsl
test
adc
ret
inc
jbe
add
test
jbe
out
mov
cmp
push
xor
in
push
insb
sub
jo
movsl
lret
mov
mov
lret
xchg
push
push
inc
cli
sub
aad
addr16
cmp
jnp
imul
and
mov
mov
mov
jnp
add
test
mov
call
mov
cmp
out
add
or
adc
bound
dec
xor
daa
mov
inc
mov
or
sub
fnstsw
lcall
pushf
or
sbb
inc
aas
jmp
inc
push
and
push
rorl
mov
fidivl
mov
inc
aad
fwait
lret
addr16
sub
xor
push
and
mov
mov
mov
and
push
mov
bound
cli
jmp
je
jmp
cmp
inc
sub
mov
mov
mov
aas
mov
test
xor
out
mov
popa
mov
xor
testb
ficomps
mov
js
jmp
ds
push
add
mov
or
mov
jno
cmpsl
jg
inc
xchg
pop
je
les
test
and
movsb
sub
xchg
sub
test
outsb
rorl
adcb
into
test
imull
pop
mov
pop
rorb
pop
mov
push
mov
mov
or
mov
test
fstl
mov
subl
xchg
mov
pusha
add
pop
jge
loop
rcrl
cli
imul
out
xor
repz
std
mov
lret
mov
orl
mov
inc
out
inc
or
adc
jl
push
jecxz
mul
loopne
add
mov
jne
std
mulb
out
das
sub
xchg
repnz
sahf
sbb
xor
lret
pop
adcl
les
push
adc
aaa
lret
push
test
in
cmp
mov
comiss
sbb
call
movsb
or
lcall
jle
jne
sti
push
inc
pop
dec
xchg
mov
lea
mov
or
aam
push
push
add
mov
into
stc
cltd
mov
imul
jnp
aas
xor
leave
mov
mov
xorb
xchg
rcr
xlat
dec
in
cwtl
es
mov
push
mov
xchg
and
xor
lods
cmpsl
mov
shll
xchg
mov
pop
fstpl
sti
push
pop
pop
mov
or
out
mov
and
les
data16
cmp
roll
je
jg
mov
xor
mov
pop
int
or
test
cmp
dec
imul
fildll
imul
loop
xchg
inc
mov
movsb
aad
dec
hlt
adc
das
aaa
in
dec
mov
out
xchg
shll
cmpsl
xchg
sbb
push
pop
jecxz
pusha
xchg
xlat
sbb
push
pop
pop
mov
sub
inc
mov
ret
xchg
push
pop
push
sub
mov
ret
test
movsb
pushf
daa
xchg
mov
icebp
lods
out
pop
test
mov
and
mov
fwait
fs
and
xorl
or
xchg
push
push
adc
inc
dec
scas
out
enter
lret
cmp
jb
add
or
call
mov
aaa
pushf
enter
data16
ret
dec
sub
adc
rcrl
inc
bound
mov
es
cwtl
mov
cwtl
fistl
test
jle
mov
arpl
sarl
sbb
nop
cmp
jl
dec
lea
sbb
add
cs
daa
das
jmp
push
jp
call
xchg
adcl
dec
in
push
rcl
int3
xchg
data16
aad
dec
jnp
aad
adc
adc
ret
scas
xchg
cmp
cmp
icebp
xor
cmpsl
pop
ret
ja
jno
arpl
adc
int3
add
insb
push
push
or
pop
lret
ljmp
lret
in
sahf
cmp
mov
jno
outsl
cmp
lahf
or
xchg
sbb
pop
add
ds
popf
push
add
dec
mov
incl
sahf
adc
mov
mov
sbbl
lcall
jge
into
ja
into
mov
mov
xor
jl
mov
hlt
lahf
shlb
jmp
outsb
es
push
and
mov
dec
fstpl
in
xchg
pop
adc
push
pop
sub
or
and
jo
scas
stos
mov
ret
ret
mov
cmp
jp
ss
jp
adc
sbb
pop
scas
add
and
imul
pop
sti
push
xor
jae
pop
sti
mov
in
and
movlps
push
jecxz
mov
divb
inc
and
gs
incb
mov
push
shrb
movsb
jno
and
pop
fistps
push
jle
inc
in
mov
addr16
mov
clc
sbb
sti
icebp
inc
and
mov
sub
lret
lods
pop
inc
and
add
xor
mov
addr16
loopne
imul
add
rclb
icebp
aad
out
mov
xchg
mov
adc
push
cmpsl
mov
cli
cmp
out
or
test
hlt
sub
enter
or
ljmp
sub
movsl
out
adc
insb
dec
or
xchg
je
sbb
lods
fnstenv
push
pop
call
hlt
dec
adc
js
lcall
mov
xor
dec
test
in
dec
mov
je
cli
jp
repz
sbb
insw
jp
ljmp
xchg
mov
les
xchg
mov
xchg
cmp
fs
mov
xor
xchg
imul
cmp
loop
xchg
jl
daa
xchg
fcmovnbe
xchg
dec
pop
ja
xchg
mov
push
cmpsl
jp
add
lods
insl
xchg
fmuls
dec
in
roll
and
arpl
fisubs
lea
hlt
adc
aad
fimull
iret
xor
or
les
xchg
pop
out
sub
ljmp
les
xchg
rolb
das
hlt
fbstp
mov
xchg
lock
fnop
pop
inc
mov
mov
push
xchg
scas
pop
dec
xlat
sbb
sarb
and
xchg
mov
sar
pushf
add
adc
and
lahf
jno
xor
xchg
jne
push
sahf
jl
into
cltd
pop
mov
jge
cmp
xor
aaa
sub
sbb
pop
xchg
popf
mov
mov
mov
inc
cmp
shrl
int3
iret
pusha
push
adc
int3
fdivr
cs
mov
push
out
or
push
mov
sbb
jne
xchg
int
sahf
std
jge
fsubs
xchg
and
test
sub
mov
repz
enter
xor
jns
daa
test
mov
ja
in
or
xor
out
pop
cmp
mov
pop
das
enter
scas
loopne
pop
mov
int3
mov
pop
daa
inc
jmp
mov
mov
cmp
fisttpll
shlb
fwait
pop
mov
xchg
mov
cmpl
or
dec
xor
xchg
adc
sub
cli
mov
sbb
sub
pop
sbb
clc
pushf
jmp
outsl
int3
shll
pushf
sub
mov
or
dec
mov
xchg
fadds
sub
sub
pop
hlt
and
aas
aaa
sbb
test
mov
push
push
scas
push
pop
sbb
push
xchg
push
push
or
stos
xchg
add
movsb
mov
fnstcw
jmp
inc
ficoms
mov
cs
or
aad
jnp
aas
add
fcmovb
sbb
cmp
sbb
sbb
mov
cli
ficomps
out
dec
xchg
cmp
adc
cs
pop
dec
add
ficomps
or
movsl
push
test
inc
std
jb
add
lds
lock
mov
or
xor
mov
mov
xchg
cmp
sub
dec
sbb
leave
adc
push
or
insb
xchg
int
std
mov
dec
jae
cltd
mov
cwtl
jmp
stos
std
jbe
mov
dec
test
sub
js
add
pop
lds
xchg
or
or
push
inc
das
hlt
popa
js
push
test
lret
dec
push
inc
and
cmp
sbb
jle
es
add
add
sbb
or
pop
fnstcw
ljmp
cmp
aam
lock
add
lahf
pop
rol
adc
mov
repnz
dec
xchg
sahf
cmp
jb
iret
xor
ja
js
or
adc
dec
jmp
sub
cmpsl
test
xor
mov
sub
cmc
scas
cmpsb
inc
aam
xchg
xchg
fldt
xlat
cmpsb
popf
xor
push
out
stos
push
shlb
out
pop
out
mov
sub
mov
fwait
fnstsw
xchg
dec
sbb
sahf
lods
mov
dec
add
jb
fldcw
fdivrl
and
cli
lods
pop
insb
sub
xor
fsubs
jle
push
sbb
popa
aam
scas
sbb
cmpsl
rcrb
dec
push
rcl
cmp
pop
clc
cmp
test
cmpsl
sub
lds
test
jb
out
push
sub
xchg
out
sbb
int
in
lock
shl
sti
ss
xor
out
push
push
mov
jge
pushf
lods
add
sbb
pop
push
sarl
and
jb
popf
shlb
sbb
mov
js
mov
stc
imul
mov
mov
push
mov
jg
lret
cmp
in
das
loopne
in
nop
jnp
fucomi
xchg
fidivrl
stos
push
xorl
popl
mull
pop
add
or
in
xchg
and
pusha
std
mov
inc
sbbl
das
loopne
sub
push
jle
xor
in
or
lods
inc
into
mov
push
push
ljmp
or
cltd
call
ljmp
out
sbb
adc
aaa
push
daa
ret
jns
jo
push
inc
dec
scas
mov
push
stc
pop
je
cmpsb
je
repnz
cmp
shll
cmp
pop
mov
fimuls
add
fcmovb
pusha
push
outsb
xchg
imul
push
pop
stos
stos
testl
cmpsb
sub
inc
popfw
push
pop
xor
sbb
not
push
mov
xchg
loopne
rorl
jle
cmpsb
add
sbb
negl
mov
mov
into
sub
pop
mov
nop
and
test
test
imul
xchg
hlt
adc
mov
xor
inc
xor
lret
enter
push
je
test
adc
fstpt
aas
mov
ljmp
inc
je
cmp
aad
pop
cmp
movsl
xor
std
les
in
imul
test
adc
nop
push
dec
push
mov
dec
es
pop
pop
pop
xchg
sub
outsl
xchg
fdivrp
mov
cmp
lcall
cs
dec
xor
dec
into
pop
jb
lods
pusha
or
mov
xchg
mov
daa
pop
add
pop
sbb
inc
xchg
aam
ja
push
ljmp
and
mov
dec
add
or
stos
scas
dec
xor
in
ss
sbb
int
jle
bound
dec
add
lods
adc
loope
jno
mov
lret
lods
in
insl
je
cli
or
scas
inc
pop
icebp
jns,pt
inc
lock
idivl
add
xchg
inc
xor
shll
push
cmpb
repz
jbe
aam
push
rcrl
push
outsb
inc
push
aaa
outsl
in
jp
sarb
push
bound
jb
loop
xchg
xor
and
sub
inc
in
sbb
dec
dec
cltd
hlt
jge
out
dec
add
enter
call
test
inc
jl
mov
lods
mov
repz
mov
movsb
out
mov
mov
jbe
pop
mov
push
dec
xchg
aam
jnp
add
jp
mov
add
leave
mov
leave
out
pop
ficompl
lret
jnp
pop
sbb
fwait
jo
xor
pop
lods
out
pop
lods
xor
inc
loope
or
cltd
sub
and
mov
xchg
faddl
push
pop
mov
add
and
dec
pop
stos
gs
sub
push
xchg
lret
mov
cltd
dec
sbb
jns
mov
and
inc
loopne
pop
fwait
std
jmp
mov
lods
mov
jmp
xchg
xchg
and
jl
enter
cmpsb
add
jmp
sarb
xor
push
or
inc
inc
mov
or
pop
lods
movsl
push
gs
push
aad
adc
cmp
xchg
aaa
pop
jnp
mov
call
push
xchg
aad
dec
xor
jmp
dec
inc
sahf
ficoml
imul
roll
cld
fistpll
outsb
or
pushf
pop
sub
pop
xchg
icebp
xor
cld
sub
sub
xchg
inc
or
mov
xorb
cmpsb
mov
stc
xchg
mov
push
adcl
and
sub
sbb
cld
test
mov
xchg
fcom
jno
mov
ja
push
cmpsl
out
aaa
sbb
vmovhps
add
sbb
xchg
mov
movsl
js
xor
add
rcl
jmp
js
scas
jge
ljmp
pop
push
dec
jbe
dec
ljmp
aaa
mov
xor
imul
pop
adc
fwait
test
xor
jle
jb
daa
push
xor
mov
mov
mov
insl
enter
dec
out
xchg
movsl
and
rcrb
push
xchg
dec
pusha
popa
cwtl
sbb
xor
mov
inc
cs
xor
loopne
xor
sub
iret
mov
repnz
fldt
push
arpl
idivl
jge
mov
ss
pop
fcmovu
int3
jae
icebp
push
adc
pop
dec
add
jle
leave
cmp
leave
lret
movsbl
sub
mov
push
shlb
test
sbb
das
push
movl
sti
sub
push
or
adc
cwtl
fdivs
in
cmc
mov
ret
push
or
mov
repz
push
stc
jno
imul
mov
scas
jo
popf
or
jg
push
int3
xchg
mov
or
pusha
nop
sub
lahf
gs
cwtl
xchg
dec
xchg
sbbl
cmc
sub
in
sbb
mov
mov
jecxz
pop
test
xor
enter
ljmp
adc
aaa
inc
int
add
pop
mov
test
xchg
cltd
ret
call
mov
pop
jp
in
add
adc
and
dec
aaa
out
cmp
movl
inc
push
adc
pop
xchg
bound
sbb
inc
fcoms
loope
jl
fsubl
sbb
imul
push
movsl
js
fisubs
fadd
es
adc
inc
orb
mov
pop
lret
cmpsl
out
push
lods
pcmpgtw
test
popa
jne
fucomp
mov
jl
test
xor
rorb
clc
jge
mov
ret
mov
pop
sbb
ljmp
mov
pushf
push
sub
ljmp
pusha
push
fistps
into
aas
sub
push
push
mov
std
pop
andb
push
pop
pop
shlb
icebp
or
jnp
mov
xchg
adc
push
jmp
sbb
test
sbb
push
mov
pop
dec
data16
cmpsl
push
idivl
sub
pop
pop
fnsave
or
adc
dec
sub
mov
push
mov
inc
jle
dec
or
mov
aaa
and
loop
add
mov
or
xchg
daa
sbb
bound
popl
jnp
xchg
outsl
jne
mov
mov
repz
jl
popf
pop
or
es
sbb
inc
dec
imul
es
add
sub
jecxz
xor
push
jl
cmp
jmp
fisttps
movsl
popa
scas
jns
mov
pusha
pop
add
pushf
lock
out
push
test
xor
dec
and
aam
dec
dec
cwtl
mov
xchg
lret
pop
daa
jmp
cmp
cmp
cld
test
stc
faddl
fs
xchg
cmp
shrb
dec
fldt
cmpsl
shr
rolb
popf
adc
ret
test
jg
jl
sbb
lock
fdivrl
mov
cwtl
mov
jmp
xchg
adc
imull
loope
xchg
scas
or
cld
xchg
fldl2t
adc
int3
mov
xchg
mov
sub
xor
shll
dec
sub
cmpsb
repz
movsl
or
sub
mov
in
into
xor
cld
fcomip
rcll
xor
fiaddl
push
add
pop
movsl
cmp
ret
mov
xchg
sbb
lahf
stos
pop
enter
add
rorb
leave
loope
lods
mov
sti
mov
cmp
cs
inc
adc
adc
stos
ds
in
movsb
ja
pop
or
int
and
xor
addr16
fsubl
popa
and
push
out
mov
mov
loope
outsl
push
or
pop
add
adc
and
dec
jl
or
sbbl
in
add
sub
dec
fwait
subl
and
bound
cmp
pop
add
mov
xchg
sbb
fnstenv
js
ds
mov
int3
jno
push
fcmovbe
or
jge
ret
push
stos
andb
pop
js
pushf
push
popa
repnz
pop
roll
adc
jg
cmp
xchg
xchg
mov
mov
popa
js
push
fisttps
add
push
mov
mulb
xlat
add
lea
adc
jmp
loopne
pop
mov
movsl
push
jle
inc
jmp
cwtl
das
dec
gs
cmpsb
jnp
mov
movsb
test
lds
sahf
sbb
lcall
xchg
outsl
fmull
mov
adc
cmpsb
xchg
push
out
lock
fwait
add
sbbb
sbb
mov
mov
stos
aas
jp
lea
pop
mov
andl
lock
mov
cmpsb
cmp
rolb
jge
lahf
mov
fstl
adc
jl
sbb
out
rcl
ljmp
mov
adc
jp
mov
adc
sbb
xor
inc
xchg
scas
pop
mov
leave
stos
ret
iret
sahf
loop
cmp
stos
ljmp
lcall
jg
es
rcll
xchg
xor
mov
dec
adc
les
add
lret
repz
imul
dec
insl
and
fucom
in
sub
mov
rcrb
jne
sbb
lret
add
aad
fsubl
mov
cmpsb
das
inc
dec
or
xchg
xor
stos
enter
mov
int3
sub
add
sub
js
mov
jns
push
xchg
mov
jle
sbb
sub
pop
push
xchg
jae
xchg
popf
mov
adc
sub
mov
xchg
jns
rcr
sub
lods
adc
xchg
fisttps
lds
adc
mov
push
push
add
out
adc
ds
and
sub
xchg
arpl
or
cmc
sti
out
jecxz
push
fdivr
insl
inc
fcomps
and
pop
inc
xchg
sub
jns
cwtl
in
test
int
push
inc
inc
out
mov
push
cmp
mov
pop
cmp
adc
clc
and
push
or
mov
sbb
push
mov
cmp
inc
cmp
mov
jo
loop
outsb
inc
pop
mov
inc
loop
mov
rorl
push
dec
sbb
in
jg
mov
mov
mov
inc
sub
add
pusha
stc
or
or
sbb
mov
adc
cmp
pop
xorl
mov
sahf
aad
mov
lahf
test
mov
dec
nop
sub
mov
inc
imul
data16
cmpsb
push
lcall
in
cld
jnp
adc
dec
inc
mov
imul
jno
lea
pop
xchg
ds
mov
lret
and
imul
roll
stc
in
ds
pop
rolb
popf
adc
loopne
int3
sbb
and
sub
movsb
xchg
in
pop
xchg
pushf
int
push
xchg
jle
cmp
xchg
mov
push
push
sbb
adc
push
lock
jle
dec
jo
mov
fwait
rolb
sbb
adc
add
xor
lea
mov
mov
dec
sub
mov
add
dec
inc
xor
lea
movzwl
inc
inc
dec
mov
inc
add
cmp
jb
lea
mov
mov
dec
xor
inc
add
xor
dec
and
pop
lea
movswl
test
jbe
dec
inc
dec
add
add
lea
mov
dec
inc
dec
dec
and
lea
mov
inc
dec
sub
inc
inc
add
lea
imul
dec
add
and
sub
inc
mov
add
lea
movzbl
movsbl
sub
add
inc
inc
and
add
or
mov
lea
mov
mov
add
inc
mov
inc
add
mov
add
lea
movswl
dec
inc
add
dec
jne
dec
mov
xor
lea
mov
inc
dec
inc
inc
add
lea
movzbl
mov
dec
inc
add
dec
add
lea
imul
dec
mov
add
sub
test
jbe
add
xor
lea
imul
sub
add
dec
inc
or
lea
mov
inc
dec
dec
inc
inc
sub
lea
mov
sub
add
dec
and
add
add
mov
lea
imul
movzbl
inc
dec
add
dec
dec
and
xor
lea
mov
mov
inc
movzbl
inc
dec
mov
sub
sub
mov
lea
imul
movzbl
dec
add
add
inc
dec
and
and
jmp
dec
dec
pop
ret
push
sub
xor
lea
mov
add
add
dec
inc
sub
add
push
lea
mov
push
inc
inc
push
add
dec
push
sub
call
lea
movsbl
inc
xor
dec
dec
mov
sub
sub
mov
lea
mov
dec
inc
sub
inc
cmp
je
and
push
lea
call
mov
dec
dec
pop
add
ret
push
add
and
lea
mov
dec
add
add
inc
add
push
lea
mov
push
inc
push
dec
push
inc
call
sub
push
or
lea
mov
mov
inc
mov
inc
add
mov
sub
and
test
je
lea
mov
inc
inc
inc
dec
sub
lea
imul
mov
inc
inc
inc
dec
sub
lea
movsbl
dec
repnz
inc
add
add
add
jmp
sub
lea
jmp
imul
add
inc
inc
sub
or
lea
mov
dec
inc
pop
pop
ret
push
dec
inc
or
lea
dec
inc
dec
add
add
lea
dec
add
inc
dec
add
lea
mov
dec
pop
ret
sub
dec
mov
inc
dec
mov
add
lea
mov
mov
inc
mov
dec
inc
xor
sub
or
mov
lea
mov
inc
inc
dec
sub
dec
sub
lea
cmp
jb
mov
push
inc
add
push
add
sub
push
xor
lea
mov
mov
dec
xor
inc
add
xor
inc
or
xor
lea
push
inc
dec
xor
inc
dec
mov
xor
lea
mov
imul
dec
movzbl
dec
inc
dec
add
add
lea
add
dec
inc
movzbl
inc
dec
sub
lea
imul
dec
dec
add
inc
add
or
mov
lea
imul
inc
inc
sub
dec
cmp
jb
jmp
push
mov
movzwl
dec
call
dec
dec
add
add
lea
imul
inc
sub
dec
sub
add
lea
mov
dec
add
inc
dec
add
lea
mov
inc
dec
inc
inc
add
lea
mov
inc
inc
inc
sub
sub
lea
imul
dec
dec
add
inc
and
lea
mov
inc
call
call
call
inc
push
add
call
inc
add
lea
movsbl
sub
add
sub
add
call
and
lea
movsbl
inc
inc
inc
dec
or
lea
pop
mov
inc
dec
add
add
pop
dec
sub
pop
lea
mov
dec
dec
pop
inc
dec
sub
lea
mov
inc
sub
dec
pop
add
add
pop
lea
imul
mov
dec
sub
call
add
add
or
lea
ret
mov
dec
push
dec
inc
push
dec
sub
push
lea
mov
push
inc
inc
push
dec
sub
mov
or
lea
push
imul
ret
push
add
add
dec
push
sub
or
push
lea
mov
push
add
call
jmp
