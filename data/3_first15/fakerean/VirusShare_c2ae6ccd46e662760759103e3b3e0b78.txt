add
add
test
js
mov
add
call
cmp
je
mov
mov
cmp
mov
mov
jne
mov
mov
xor
test
jns
jmp
cmp
je
mov
mov
pop
mov
pop
mov
xor
pop
add
ret
mov
mov
pop
mov
pop
mov
xor
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
xor
mov
mov
push
mov
push
mov
mov
mov
mov
mov
mov
cmp
jne
push
call
add
test
je
mov
mov
mov
sub
sar
push
mov
mov
mov
movl
movl
call
xor
add
cmp
je
mov
mov
lea
mov
lea
movl
push
push
movl
mov
mov
call
xor
cmp
mov
je
add
mov
test
mov
mov
jne
test
je
mov
test
jne
test
jne
test
je
mov
mov
cmpl
je
mov
xor
pop
pop
pop
pop
add
ret
sub
cmp
ja
movzbl
jmp
mov
cmp
je
mov
lea
mov
mov
push
push
push
mov
call
add
test
js
mov
jmp
mov
cmp
je
mov
mov
mov
push
push
push
call
mov
add
test
mov
jne
pop
mov
pop
pop
pop
add
ret
lea
push
push
inc
adc
push
inc
adc
push
inc
adc
ja
adc
pop
adc
add
add
add
add
add
add
in
and
sub
mov
xor
mov
push
mov
push
mov
push
mov
push
pushl
push
push
call
test
mov
jne
mov
test
js
mov
mov
call
mov
call
mov
mov
call
push
mov
call
cmpl
mov
je
mov
lea
mov
mov
lea
push
pushl
xor
push
mov
mov
mov
movl
movl
mov
call
cmpl
jne
testb
jne
testb
jne
mov
mov
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
push
push
movl
call
movzbl
push
push
mov
call
add
mov
jmp
push
mov
mov
test
je
mov
push
push
pushl
push
call
sub
je
dec
je
dec
je
pop
ret
orl
mov
mov
pop
ret
push
mov
push
mov
andl
test
je
mov
lea
push
push
push
call
mov
mov
mov
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
push
push
mov
push
push
push
call
add
mov
push
push
call
push
call
mov
add
cmp
je
push
push
call
add
pop
mov
pop
and
pop
mov
pop
ret
push
mov
push
push
push
mov
mov
push
call
mov
push
call
add
cmp
jne
mov
push
call
add
xor
pop
pop
pop
pop
ret
cmp
je
cmp
je
mov
movl
mov
push
mov
mov
call
add
test
je
mov
mov
push
call
movl
movl
lea
add
mov
push
mov
movl
movl
movl
call
test
mov
je
mov
mov
push
call
mov
mov
push
call
mov
add
push
mov
call
mov
push
call
add
lea
call
mov
push
call
add
xor
pop
pop
pop
pop
ret
mov
push
call
add
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
lea
mov
push
push
call
cmpl
je
mov
mov
push
mov
call
add
cmpb
jne
mov
push
call
add
cmpl
je
test
jne
cmpb
je
movl
mov
pop
pop
pop
ret
mov
push
push
call
test
js
test
je
jmp
pop
pop
xor
pop
ret
mov
mov
mov
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
xor
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
push
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
cmp
je
cmp
je
cmp
je
cmp
je
test
je
cmp
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
jne
mov
movl
movl
mov
jmp
sub
mov
xor
mov
push
mov
mov
test
push
mov
jne
add
orl
push
mov
push
xor
cmp
lea
mov
mov
mov
movl
movl
mov
mov
je
push
push
push
call
add
test
jne
cmp
mov
je
testb
je
mov
push
push
lea
call
test
je
movl
lea
mov
call
test
je
lea
call
mov
mov
mov
mov
push
call
push
lea
movl
call
xor
cmp
je
movb
mov
mov
push
push
mov
push
lea
push
push
push
push
push
xor
lea
call
cmp
pop
mov
pop
jne
mov
test
jne
test
jne
mov
mov
pop
pop
xor
call
add
ret
movb
jmp
push
mov
mov
push
call
test
je
mov
andl
mov
lea
mov
test
jne
mov
mov
xor
pop
ret
mov
jmp
push
push
push
pushl
lea
pushl
call
test
jne
or
pop
pop
pop
ret
mov
xor
cmp
je
mov
mov
mov
pushl
mov
mov
call
test
jne
inc
lea
cmpl
jne
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
test
je
mov
and
test
jne
test
jbe
xor
lea
mov
test
mov
je
cmp
je
add
add
cmp
jb
test
je
mov
test
jne
xor
pop
pop
pop
pop
ret
movzwl
test
jbe
xor
lea
lea
cmp
je
add
cmp
jae
jmp
lea
pop
pop
pop
pop
ret
mov
jmp
xor
jmp
test
jl
lea
pop
pop
pop
pop
ret
test
jbe
movl
lea
cmpl
je
mov
push
mov
call
test
jne
mov
add
add
cmp
mov
jb
pop
pop
pop
xor
pop
ret
push
mov
push
push
mov
push
pushl
mov
push
push
mov
call
mov
mov
mov
mov
testl
jne
cmpl
jne
mov
mov
lea
mov
call
mov
andl
mov
mov
mov
mov
push
call
test
pop
je
mov
mov
mov
andl
mov
mov
mov
movl
mov
movl
push
mov
call
pop
pop
leave
ret
mov
decl
mov
je
ret
xor
inc
mov
mov
push
call
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
mov
mov
mov
mov
cmpl
mov
je
mov
mov
xor
mov
mov
mov
lea
push
push
mov
push
lea
call
mov
sub
mov
sub
mov
mov
mov
mov
mov
mov
cmp
mov
mov
lea
jne
mov
imul
add
sar
mov
shr
add
mov
imul
mov
sub
add
cmp
mov
jne
mov
mov
imul
add
sar
mov
shr
add
imul
sub
test
mov
jne
xor
cltd
idiv
imul
test
mov
jne
xor
cltd
idiv
pop
pop
imul
mov
mov
mov
pop
ret
push
call
mov
mov
mov
mov
mov
mov
mov
jmp
mov
jmp
int3
int3
push
mov
and
mov
sub
cmpl
push
mov
push
push
jge
mov
xor
cmp
lea
je
lea
push
push
push
add
push
call
mov
and
jne
cmp
mov
jne
mov
push
mov
call
mov
test
js
mov
mov
lea
push
push
mov
call
test
mov
js
cmp
jne
xor
mov
mov
call
cmp
jne
mov
lea
push
mov
call
mov
push
mov
push
push
push
call
add
test
js
mov
mov
push
mov
call
mov
add
lea
call
lea
call
mov
mov
mov
mov
cmp
je
mov
cmp
je
cmp
je
mov
mov
cmpb
jne
xor
lea
push
call
test
je
movl
push
mov
mov
call
mov
cmpl
jge
cmpl
jne
mov
push
push
push
call
mov
test
jne
mov
mov
push
lea
movl
call
push
push
lea
push
push
call
add
test
mov
js
mov
test
jne
mov
lea
mov
call
mov
mov
mov
lea
push
push
call
test
mov
js
lea
push
mov
call
add
push
mov
call
mov
mov
mov
push
push
push
push
push
push
push
call
add
test
mov
js
mov
mov
mov
mov
mov
push
call
lea
call
xor
pop
pop
pop
mov
pop
ret
int3
int3
sub
mov
xor
mov
mov
push
mov
push
mov
test
je
test
je
mov
push
push
lea
push
push
mov
mov
xor
push
mov
call
mov
lea
lea
push
mov
mov
mov
push
mov
movl
movl
mov
call
mov
cmp
jne
cmp
jne
mov
mov
mov
push
call
mov
test
jne
test
jne
xor
pop
pop
mov
pop
pop
xor
call
add
ret
push
mov
sub
mov
xor
mov
mov
andl
push
push
lea
lea
push
lea
mov
movl
call
call
push
push
push
call
mov
test
pop
pop
je
testl
jne
mov
xor
xor
call
leave
ret
push
call
pop
jmp
int3
int3
int3
int3
int3
mov
test
push
mov
push
je
mov
mov
cmp
je
mov
add
test
jne
mov
movl
cmpl
je
xor
mov
pop
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
pop
xor
pop
ret
decl
cmpl
jne
lea
movl
call
lea
call
lea
call
mov
call
push
call
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
mov
mov
push
push
mov
push
lea
push
lea
push
push
mov
xor
lea
push
push
push
xor
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
call
add
cmp
je
mov
cmpl
je
lea
push
mov
call
mov
test
js
cmp
mov
mov
mov
mov
mov
mov
mov
je
mov
lea
push
push
push
mov
call
mov
push
push
lea
push
push
lea
call
mov
mov
add
cmp
jne
lea
call
lea
call
mov
cmp
jne
cmpl
je
mov
cmp
jne
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
mov
mov
push
call
jmp
mov
add
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
cmpl
lea
push
movl
je
mov
test
mov
mov
je
lea
push
call
add
test
je
lea
call
mov
test
mov
je
lea
push
call
add
test
jne
push
call
add
lea
call
pop
pop
mov
pop
pop
jmp
push
call
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
test
push
je
push
call
add
test
je
xor
mov
mov
mov
mov
mov
movb
movb
movb
movl
movl
movl
movl
push
movl
mov
mov
push
push
call
mov
test
js
push
mov
lea
test
je
lea
mov
mov
push
push
push
mov
call
test
je
lea
mov
mov
push
push
push
mov
call
pop
pop
pop
mov
pop
ret
xor
jmp
xor
jmp
push
mov
push
push
push
push
mov
xor
cmp
jne
push
lea
mov
call
mov
lea
push
push
call
cmp
jne
mov
push
mov
lea
mov
call
mov
cmp
jne
lea
call
lea
call
xor
pop
pop
leave
ret
mov
call
cmp
je
mov
call
jmp
testb
je
mov
mov
mov
cmp
je
mov
call
cmp
je
push
mov
lea
call
lea
call
cmp
je
mov
lea
call
mov
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
push
cmpl
push
push
push
push
je
mov
cmpl
jle
cmpl
jle
mov
mov
mov
add
cmp
jge
mov
mov
mov
add
cmp
jge
mov
add
cmp
jge
mov
add
cmp
jge
mov
cmp
jl
mov
cmp
jl
mov
add
cmp
jg
mov
add
cmp
jg
mov
xor
push
mov
call
mov
mov
mov
mov
mov
pop
pop
pop
pop
pop
ret
mov
push
mov
call
pop
movl
movl
movl
movl
mov
pop
pop
pop
pop
ret
int3
int3
int3
sub
push
push
mov
push
push
call
add
test
je
mov
test
mov
movl
mov
je
cmpb
je
mov
test
jne
mov
push
call
add
mov
push
call
add
mov
push
call
mov
mov
mov
add
mov
call
mov
addl
mov
sub
mov
sub
mov
add
add
add
cmp
jg
mov
mov
add
cmp
jg
mov
mov
mov
neg
neg
test
je
xor
add
test
je
xor
flds
add
mov
add
mov
sub
fstpl
mov
flds
mov
add
fstpl
push
mov
call
fildl
fildl
mov
add
fchs
fxch
fchs
fstpl
fstpl
push
call
mov
add
mov
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
push
mov
push
push
xor
mov
mov
mov
mov
push
mov
push
lea
mov
mov
mov
call
push
lea
call
mov
mov
sub
mov
sar
push
lea
push
mov
lea
push
mov
lea
push
lea
mov
call
mov
mov
add
test
jne
test
jne
test
js
cmp
mov
jne
mov
cmp
je
add
cmp
jb
jmp
push
call
add
test
je
movl
movl
mov
mov
test
mov
jne
test
je
mov
push
push
push
call
add
test
js
mov
mov
mov
lea
movl
call
lea
call
mov
test
jne
xor
pop
pop
pop
pop
add
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
sub
test
push
jl
mov
mov
cmp
mov
ja
mov
sub
add
cmp
mov
mov
jb
lea
mov
mov
push
lea
mov
movl
call
xor
pop
add
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
mov
push
lea
push
mov
mov
mov
xor
lea
mov
movl
movl
mov
mov
push
push
mov
call
mov
cmp
lea
mov
jb
mov
push
mov
add
sub
cmp
mov
mov
pop
jb
lea
mov
push
lea
mov
mov
call
mov
test
jne
test
jne
pop
xor
pop
mov
xor
call
add
ret
mov
add
push
call
add
test
jne
push
call
mov
add
pop
pop
xor
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
test
je
push
mov
mov
cmp
movb
je
cmp
je
mov
mov
mov
push
push
push
movb
mov
mov
call
pop
pop
ret
push
mov
push
mov
cmpl
je
push
push
mov
push
push
pushl
call
mov
test
jne
pop
pop
pop
pop
ret
mov
test
je
lea
push
push
mov
call
test
je
pushl
mov
mov
call
test
je
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
push
push
call
jmp
xor
jmp
xor
jmp
mov
mov
mov
add
mov
cmp
jae
imul
lea
mov
test
mov
mov
je
mov
push
call
xor
ret
mov
and
neg
sbb
inc
ret
push
mov
test
push
je
mov
mov
test
je
mov
test
je
mov
mov
cmp
jne
mov
test
je
mov
push
mov
call
test
mov
je
mov
mov
and
xor
or
mov
mov
jne
andl
pushl
mov
pushl
call
mov
pop
pop
ret
or
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
mov
mov
mov
lea
add
xor
mov
mov
lea
lea
mov
mov
mov
mov
push
lea
push
movl
mov
call
mov
test
jne
test
jne
xor
add
ret
push
mov
cmpl
ja
push
mov
add
push
mov
call
cmpl
jne
pop
xor
pop
ret
push
mov
mov
lea
push
push
call
test
js
cmpl
jne
push
mov
call
jmp
pop
jmp
int3
int3
int3
int3
int3
int3
push
mov
mov
push
mov
push
call
mov
add
test
je
addl
cmpl
je
pop
pop
ret
mov
movl
call
push
call
add
pop
pop
ret
push
mov
push
mov
mov
mov
push
call
test
je
push
mov
xor
cmp
setne
cmpl
lea
mov
jne
cmpb
jne
mov
mov
mov
mov
call
test
je
mov
push
pushl
pushl
pushl
push
call
pop
pop
pop
ret
orl
jmp
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
push
mov
xor
cmp
mov
mov
mov
je
mov
movzbl
and
mov
mov
test
jbe
mov
lea
mov
add
cmp
je
cmp
je
cmp
je
cmp
je
mov
xor
add
cmp
jne
addl
subl
mov
jne
mov
mov
mov
andb
cmpl
mov
jne
and
mov
mov
add
cmp
jne
mov
mov
pop
pop
mov
pop
add
ret
cmpl
jne
cmpl
mov
jne
movb
add
cmp
jne
cmpb
jne
add
jmp
cmp
je
mov
call
add
jmp
orl
cmpb
je
mov
call
add
jmp
or
jmp
mov
or
mov
mov
pop
pop
pop
add
ret
mov
call
jmp
mov
test
jbe
mov
lea
mov
add
cmp
je
cmpb
jne
addl
cmp
je
mov
add
subl
jne
mov
mov
andb
jmp
or
mov
jmp
push
push
mov
mov
mov
push
add
push
push
call
test
je
mov
mov
push
lea
sub
add
add
push
lea
lea
cmp
je
push
mov
mov
add
lea
nop
test
je
mov
test
mov
je
mov
mov
push
call
mov
test
mov
je
mov
mov
push
call
lea
push
push
movl
movl
movl
call
mov
test
mov
je
mov
mov
push
call
mov
mov
mov
mov
mov
add
add
add
cmp
jne
mov
pop
mov
addl
mov
pop
lea
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
mov
mov
cmp
push
je
cmp
je
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
cmp
je
test
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
int3
int3
push
mov
and
sub
push
mov
push
push
lea
mov
mov
push
push
call
mov
mov
lea
lea
push
rep
call
mov
fldz
mov
add
fstl
lea
fstpl
push
push
lea
push
push
mov
call
mov
lea
push
push
call
mov
mov
mov
add
call
cmpl
mov
mov
jne
fldz
mov
fldl
fcom
fnstsw
fstp
test
jne
fldl
fchs
fldl
fcom
fnstsw
fstp
test
fldl
jne
fld
fadd
fcompl
fnstsw
test
jp
test
fstp
fstp
mov
faddl
fildl
jl
fmulp
sub
fstpl
call
fnstcw
add
movzwl
or
mov
fldcw
fistpll
mov
cmp
fldcw
jae
push
push
call
pop
pop
pop
mov
pop
ret
fldl
fldl
fxch
test
mov
fildl
jl
fld
push
fmulp
lea
fxch
lea
mov
fstpl
fld
fmulp
fxch
fstpl
fld
fmull
fstpl
fmulp
fstpl
call
test
je
fldl
pop
fstps
pop
fldl
pop
fstps
fldl
fstps
fldl
fstps
mov
pop
ret
fldl
fldl
fldl
fxch
jmp
mov
andl
mov
push
pushl
mov
call
pop
mov
mov
xor
pop
ret
push
mov
push
push
xor
cmp
je
xor
pop
leave
ret
cmpl
mov
push
mov
jne
cmp
jne
lea
orb
testb
jne
mov
push
mov
mov
push
call
mov
mov
mov
call
mov
mov
mov
push
mov
mov
call
push
pushl
mov
call
test
js
mov
cmp
je
xor
inc
pop
pop
jmp
cmpl
jne
jmp
xor
jmp
push
mov
sub
push
mov
push
push
xor
mov
call
mov
push
lea
call
and
lea
push
lea
mov
movl
mov
call
xor
cmp
je
push
lea
mov
call
mov
lea
push
push
call
mov
xor
call
push
lea
call
lea
xor
call
and
and
lea
mov
push
mov
lea
movl
movl
call
mov
test
jne
pushl
lea
call
andl
andl
lea
push
mov
lea
movl
movl
call
test
jne
pushl
lea
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
call
xor
pop
pop
pop
leave
ret
mov
mov
mov
cmp
sbb
neg
ret
int3
int3
int3
push
mov
and
sub
push
push
push
mov
push
lea
xor
mov
mov
mov
lea
call
test
je
lea
call
cmp
je
mov
mov
mov
push
call
jmp
lea
mov
mov
lea
call
test
je
lea
call
cmp
je
mov
mov
mov
push
call
jmp
lea
mov
mov
lea
call
test
je
lea
call
cmp
je
mov
mov
mov
push
call
jmp
mov
cmp
je
call
mov
mov
cmp
je
call
mov
mov
cmp
je
call
mov
push
call
push
call
mov
push
call
pop
pop
pop
pop
mov
pop
ret
push
mov
and
push
decl
cmpl
push
je
pop
mov
pop
ret
mov
test
je
push
mov
call
jmp
push
mov
call
testb
je
push
call
pop
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
test
push
je
mov
test
je
push
lea
mov
call
lea
mov
call
mov
lea
push
mov
mov
call
mov
test
jne
push
push
call
add
test
je
mov
movl
lea
xor
movl
call
mov
test
mov
je
mov
mov
push
call
cmpl
je
mov
mov
mov
mov
call
mov
test
je
mov
mov
push
call
mov
test
mov
jne
mov
mov
mov
add
test
mov
jne
push
push
call
test
je
test
je
mov
mov
push
call
mov
mov
test
je
mov
mov
push
call
mov
test
mov
jne
mov
push
push
call
mov
test
je
addl
mov
test
mov
jne
mov
mov
mov
test
jne
mov
add
add
xor
lea
and
xor
call
xor
pop
pop
pop
pop
ret
mov
jmp
lea
movl
mov
mov
push
push
call
testb
jne
mov
mov
mov
push
mov
call
jmp
mov
push
mov
call
jmp
mov
push
mov
call
jmp
call
jmp
mov
mov
xor
push
mov
call
jmp
push
mov
mov
test
je
cmpl
je
push
mov
test
je
mov
push
mov
push
mov
call
test
js
mov
test
je
movzwl
mov
push
pushl
mov
call
mov
cmpl
jne
mov
mov
call
test
jne
mov
mov
call
andl
push
mov
lea
call
mov
mov
test
je
movzwl
mov
push
pushl
call
mov
mov
call
lea
call
jmp
xor
pop
pop
pop
ret
push
mov
test
je
push
push
push
mov
push
xor
lea
push
mov
mov
mov
push
push
call
cmp
jne
push
mov
call
lea
mov
mov
call
mov
lea
call
lea
mov
call
mov
lea
call
push
call
pop
pop
xor
pop
pop
ret
mov
test
push
push
mov
je
push
push
mov
call
push
mov
call
mov
push
push
call
pushl
mov
call
pop
pop
ret
push
call
pop
test
je
call
test
mov
je
mov
push
call
mov
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
push
push
mov
mov
xor
cmp
mov
je
mov
mov
push
call
mov
mov
lea
mov
mov
lea
lea
push
mov
push
mov
mov
movl
movl
mov
call
cmp
jne
mov
lea
call
mov
cmp
je
mov
mov
mov
lea
push
mov
call
mov
cmp
mov
je
push
mov
lea
mov
call
mov
cmp
je
test
movl
mov
mov
je
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
test
jne
test
jne
lea
call
lea
call
push
push
lea
push
push
push
movl
movl
mov
call
mov
add
test
jne
test
jne
lea
call
mov
test
jne
test
jne
mov
pop
pop
pop
pop
xor
call
add
ret
mov
add
push
call
add
test
jne
push
call
add
jmp
int3
sub
push
push
push
push
mov
xor
cmp
jne
mov
mov
call
test
je
mov
mov
cmp
mov
jne
cmp
jne
mov
mov
mov
mov
test
mov
mov
jne
mov
test
jne
mov
mov
mov
cmp
mov
jne
mov
mov
cmp
jne
or
mov
test
jne
mov
mov
mov
mov
push
call
orb
pop
pop
pop
pop
add
ret
mov
mov
and
xor
or
jne
test
je
orb
jmp
mov
mov
sub
cmpl
mov
mov
mov
mov
jne
mov
add
mov
mov
mov
lea
push
push
call
lea
lea
call
mov
push
push
lea
push
mov
push
push
call
testb
jne
mov
push
mov
lea
push
push
push
call
add
jmp
mov
mov
add
mov
mov
mov
mov
sub
mov
lea
mov
mov
push
push
mov
call
lea
lea
call
mov
push
push
mov
push
push
push
call
testb
jne
mov
mov
push
lea
push
push
push
call
add
jmp
testb
jne
movl
jmp
mov
mov
mov
xor
cmp
mov
jne
cmp
jne
mov
mov
sub
sub
add
sub
add
mov
mov
cmp
mov
jne
mov
mov
sub
sub
add
sub
add
mov
mov
test
mov
je
push
lea
push
push
push
call
mov
mov
add
cmpl
je
mov
test
je
mov
mov
push
lea
push
call
mov
mov
mov
cmp
jle
mov
cmp
mov
jne
cmpl
jne
mov
sub
add
mov
mov
test
je
mov
mov
push
lea
push
call
mov
mov
cmp
jle
mov
cmp
mov
jne
mov
sub
add
mov
mov
push
lea
push
push
push
call
add
jmp
xor
jmp
mov
test
je
xor
push
lea
push
push
push
mov
mov
mov
mov
call
add
jmp
push
mov
mov
sub
push
mov
push
push
lea
lea
movsl
movsl
movsl
lea
movsl
call
test
je
andl
pushl
push
pushl
call
add
cmpl
jne
pop
pop
pop
leave
ret
cmpl
movl
jne
lea
push
mov
call
push
mov
call
push
call
pop
jmp
cmpl
jne
lea
push
mov
call
push
mov
call
push
call
pop
jmp
mov
movl
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
mov
test
push
mov
push
jne
mov
test
jne
test
jne
lea
xor
mov
call
mov
lea
mov
lea
mov
mov
call
cmp
jne
test
je
mov
mov
movzbl
and
neg
sbb
add
cmp
jb
mov
mov
push
lea
push
push
push
movl
call
test
js
cmpl
jne
xor
cmp
mov
je
mov
jmp
mov
mov
test
jne
mov
mov
mov
lea
push
push
push
call
test
js
add
cmpl
jne
cmpl
jne
jmp
mov
mov
lea
push
push
push
call
test
js
cmpl
jne
push
lea
movl
call
mov
mov
lea
push
push
call
test
js
testb
mov
je
mov
mov
push
push
call
mov
push
xor
mov
lea
mov
call
mov
cmp
je
testb
mov
je
mov
mov
push
push
call
mov
lea
mov
mov
lea
mov
movl
movl
movb
mov
push
push
mov
call
test
js
mov
mov
call
mov
push
lea
push
push
mov
call
mov
test
je
mov
add
push
call
add
test
je
lea
call
lea
call
lea
call
xor
pop
mov
pop
pop
pop
xor
call
add
ret
push
mov
and
sub
mov
xor
mov
mov
push
mov
push
mov
push
mov
push
push
push
push
mov
mov
mov
call
mov
movl
andl
or
cmp
je
mov
push
call
test
je
mov
mov
testb
jne
push
lea
push
call
test
jne
cmpl
je
lea
push
pushl
mov
pushl
push
call
test
je
lea
push
call
test
je
andl
mov
lea
call
lea
xor
call
lea
xor
call
lea
xor
call
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
add
mov
mov
mov
xor
add
lea
mov
mov
push
push
mov
mov
mov
call
mov
test
jne
pushl
lea
push
push
pushl
push
lea
push
mov
call
mov
mov
mov
andl
test
jne
mov
mov
andl
test
jne
push
push
lea
push
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
xor
cmp
push
mov
mov
jne
push
call
add
cmp
je
push
mov
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
push
push
push
call
mov
mov
mov
push
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
lea
mov
or
lock
dec
je
pop
ret
movl
mov
test
movl
movl
movl
movl
je
cmpb
jne
movl
push
call
add
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
movl
call
add
cmpw
je
xor
pop
add
ret
cmpw
jne
mov
mov
call
test
je
push
mov
push
call
add
test
jne
mov
push
call
add
test
je
push
mov
mov
test
je
mov
push
mov
lea
movl
call
mov
test
je
mov
mov
push
call
test
je
push
lea
mov
call
push
call
mov
mov
mov
push
push
mov
call
add
test
je
mov
mov
push
push
call
mov
add
cmpl
jne
cmpl
push
jne
mov
push
push
mov
push
push
call
test
js
mov
lea
call
lea
call
mov
pop
pop
pop
add
ret
mov
push
call
jmp
mov
jmp
push
mov
push
push
mov
test
push
mov
jne
push
call
test
pop
je
call
mov
test
je
mov
push
call
pushl
mov
push
call
andl
push
lea
call
mov
test
je
mov
mov
push
call
pushl
mov
pushl
push
pushl
mov
call
test
js
mov
mov
xor
lea
call
mov
pop
pop
leave
ret
xor
jmp
push
mov
push
mov
test
je
mov
push
call
mov
test
mov
jne
test
mov
je
movb
mov
push
call
mov
lea
call
mov
test
je
mov
push
call
mov
test
mov
pop
pop
jne
mov
lea
call
mov
test
je
push
call
xor
ret
mov
mov
cmp
je
test
je
cmpl
je
pushl
push
call
test
pop
pop
jne
xor
inc
ret
xor
ret
push
mov
push
mov
push
mov
push
pushl
pushl
push
call
test
js
mov
cmpl
jne
xor
pop
pop
pop
ret
mov
test
je
pushl
mov
call
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
test
not
je
jmp
lea
test
jne
cmp
push
push
jae
cmp
jae
test
pop
pop
je
nop
movzbl
xor
and
shr
xor
add
sub
jne
not
pop
ret
mov
shr
xor
add
mov
shr
movzbl
and
mov
xor
mov
and
shr
xor
add
xor
add
xor
add
mov
shr
and
mov
movzbl
xor
mov
and
shr
xor
add
xor
add
xor
mov
shr
movzbl
and
mov
xor
mov
and
shr
xor
xor
xor
mov
shr
and
mov
movzbl
xor
mov
and
shr
xor
xor
xor
mov
shr
movzbl
and
mov
xor
mov
and
shr
xor
xor
xor
mov
shr
and
mov
movzbl
xor
mov
shr
xor
and
xor
xor
add
mov
shr
movzbl
and
mov
xor
mov
and
shr
xor
add
xor
sub
xor
mov
shr
and
mov
movzbl
xor
mov
shr
xor
and
xor
sub
jne
jmp
mov
shr
lea
xor
add
mov
shr
and
mov
movzbl
xor
mov
shr
xor
and
xor
sub
sub
mov
jne
jmp
movzbl
xor
and
shr
xor
add
sub
jne
jmp
int3
int3
sub
push
mov
test
push
mov
push
mov
je
mov
push
mov
call
add
mov
lea
xor
mov
push
lea
lea
movl
movl
mov
mov
call
mov
test
js
mov
mov
push
push
push
mov
call
mov
mov
mov
push
push
mov
push
mov
push
mov
push
push
mov
call
mov
mov
add
mov
lea
call
mov
pop
pop
pop
add
ret
push
mov
push
pushl
andl
mov
lea
call
pushl
mov
pushl
call
push
lea
call
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
test
mov
push
mov
push
mov
push
mov
movl
je
test
je
test
je
cmpl
mov
mov
je
movl
movl
lea
push
mov
push
push
push
push
mov
movl
call
test
js
xor
cmp
mov
jne
mov
cmp
mov
je
testb
jne
mov
mov
mov
lea
push
push
call
test
js
cmpl
mov
jne
mov
mov
mov
push
push
call
test
js
mov
push
mov
mov
call
test
js
xor
mov
mov
mov
cmp
je
testb
jne
mov
mov
cmp
je
testb
je
lea
push
lea
push
mov
mov
movl
movl
mov
mov
call
mov
mov
push
lea
push
call
add
lea
push
push
call
mov
test
jne
test
jne
mov
cmp
je
testb
jne
push
lea
mov
call
mov
lea
push
lea
call
add
test
mov
js
mov
test
je
mov
mov
lea
push
push
call
cmpw
je
mov
mov
mov
mov
lea
push
mov
push
movl
movl
call
test
je
movb
testb
je
mov
test
jne
test
jne
cmpb
jne
push
lea
movl
call
mov
mov
lea
push
push
mov
call
test
mov
js
mov
test
je
cmpl
je
mov
test
mov
je
mov
mov
push
call
mov
test
mov
mov
mov
movl
je
movzbl
mov
mov
push
push
mov
call
mov
mov
mov
mov
push
lea
push
mov
lea
push
push
push
call
test
mov
js
cmpl
je
mov
test
je
mov
cmpw
je
xor
mov
push
mov
lea
movl
call
mov
mov
mov
push
push
call
mov
mov
mov
mov
push
push
push
call
lea
call
test
je
mov
mov
mov
push
push
call
lea
call
mov
mov
lea
call
lea
call
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
mov
push
push
mov
push
mov
mov
mov
mov
add
mov
mov
mov
lea
lea
mov
cmp
je
mov
mov
sub
cmp
push
jne
push
push
call
add
test
jne
mov
mov
cmp
je
mov
cmp
je
mov
push
push
sub
sub
push
mov
push
mov
mov
call
test
je
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
cmp
jne
mov
push
mov
push
push
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
push
mov
cmp
je
mov
push
mov
add
mov
mov
mov
mov
lea
mov
mov
call
test
je
mov
mov
cmp
mov
push
jne
push
push
call
add
test
je
addl
jmp
mov
mov
call
test
je
pop
xor
pop
add
ret
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
lea
add
add
mov
mov
lea
lea
call
test
je
mov
mov
mov
mov
mov
pop
mov
mov
pop
add
ret
xor
pop
add
ret
int3
int3
int3
int3
int3
int3
mov
cmp
je
mov
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
fldz
push
push
mov
fcoml
mov
fnstsw
test
je
fcompl
fnstsw
test
je
push
mov
test
jne
push
call
add
test
je
fldl
fstpl
fldl
fstpl
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
call
add
pop
pop
pop
ret
fstp
mov
push
movl
call
add
pop
pop
ret
xor
jmp
push
mov
push
lea
push
pushl
mov
call
test
je
mov
mov
mov
xor
inc
pop
pop
ret
push
mov
sub
push
mov
mov
push
mov
mov
call
cmp
je
xor
pop
pop
leave
ret
push
pushl
mov
pushl
call
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
push
push
push
mov
test
push
push
je
lea
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
or
add
je
addl
mov
test
je
mov
mov
mov
test
je
pop
mov
pop
pop
pop
pop
ret
mov
sub
je
mov
jmp
movl
mov
mov
push
mov
call
pop
pop
pop
xor
pop
pop
ret
lea
or
jmp
cmpl
je
mov
call
test
je
movl
jmp
push
push
mov
mov
call
and
call
mov
rolb
jecxz
add
pop
add
jge
add
mov
aam
fnsave
add
rolb
jns
lret
jno
xchg
pushf
fcmovbe
mov
mov
mov
add
fsubs
add
push
rclb
in
hlt
push
mov
add
push
push
push
lea
push
push
push
lea
push
push
lea
push
call
add
add
add
xchg
add
add
bound
add
flds
add
lea
test
popl
push
push
lea
push
push
push
lea
push
push
push
push
call
in
add
popf
adcl
popa
add
jmp
mov
pop
bound
imul
jbe
push
int
stos
add
jb
movsl
roll
mov
jnp
flds
xchg
mov
ficoml
add
push
add
push
push
push
push
push
call
add
cmc
idiv
add
xchg
xchg
loop
lock
les
ja
lcall
push
lods
add
add
mov
movsb
mov
outsl
je
cltd
add
push
roll
pushf
gs
xchg
add
push
push
push
push
push
call
add
loop
jne
mov
jp
add
add
add
icebp
add
add
pusha
add
add
pop
push
mov
add
pushf
add
in
hlt
lcall
push
push
lea
push
push
push
lea
push
push
push
push
call
add
add
test
jecxz
add
cld
add
add
add
lock
add
add
xchg
in
add
stc
push
add
mov
cltd
add
fdivr
lcall
sub
add
push
push
call
add
jl
add
add
add
aad
call
loopne
bound
push
add
xchg
xchg
leave
rolb
add
add
xchg
lods
add
jbe
add
in
clc
pop
push
push
push
lea
push
push
lea
push
push
push
call
fbstp
jbe
mov
add
mov
cmc
add
lds
in
cmc
add
in
add
xchg
add
mov
aad
lcall
add
fsubrs
mov
ljmp
add
cltd
jecxz
sub
pop
call
jmp
push
push
push
push
push
push
lea
push
push
lea
push
call
jns
add
cltd
jecxz
add
icebp
push
add
add
movsb
mov
mov
add
add
jecxz
add
push
pop
bound
jp
lahf
ja
mov
std
in
lods
sti
into
adcl
push
cmc
sub
pop
ret
push
lea
push
push
call
nop
add
add
add
lahf
out
add
add
add
mov
test
imul
pop
sahf
add
add
xchg
fidivrl
add
aad
scas
add
push
sub
pop
mov
push
push
push
lea
push
call
cld
call
popf
addl
add
mov
std
add
add
pop
push
jmp
add
out
jecxz
sub
pop
mov
push
push
push
call
out
add
jne
add
orl
mov
in
jo
jno
cwtl
add
add
jl
bound
out
sti
lret
jge
imul
add
sub
pop
add
add
push
push
push
push
lea
push
push
push
push
call
add
lret
aam
push
aam
les
pop
add
mov
add
add
add
mov
sbbb
add
or
add
add
mov
leave
add
add
mov
int
add
ret
jg
add
push
push
call
movsb
cmpsb
add
scas
ja
aam
add
jbe
fdivs
lods
jl
add
add
jecxz
filds
mov
xchg
add
movsb
add
orl
mov
xor
push
push
sub
add
push
push
pop
add
inc
xor
sub
sub
inc
inc
pop
inc
pop
push
push
push
call
add
incb
aad
jmp
flds
out
add
mov
push
add
add
add
clc
lret
mov
add
iret
add
pop
push
loope
loope
add
mov
pop
mov
fmuls
add
lods
enter
add
lods
push
addr16
testl
in
hlt
pop
pushl
push
push
push
push
push
lea
push
push
push
push
push
call
in
fildl
add
mov
cmpsl
add
mov
add
movl
aad
add
push
add
add
add
xchg
mov
sub
pop
call
push
push
push
push
push
push
lea
push
push
call
add
mov
add
add
stc
mov
add
add
fldl
mov
mov
push
js
add
test
test
mov
add
mov
add
mov
add
add
sahf
test
mov
outsl
add
arpl
inc
lock
lea
push
push
push
push
lea
push
push
push
push
call
add
bound
push
in
data16
add
add
add
add
mov
pop
add
pushf
jns
lret
aam
ja
push
xchg
add
in
push
add
lcall
inc
call
lea
push
push
push
push
push
call
add
add
pop
ficomps
add
jecxz
cld
scas
lds
incb
add
into
mov
xchg
enter
add
mov
and
jbe
add
push
add
iret
add
add
add
testb
ljmp
push
push
push
push
push
push
lea
push
push
call
pop
jno
add
add
shrb
cmpsl
add
add
iret
mov
cmpb
add
iret
ljmp
test
add
lcall
jne
push
lea
push
push
push
push
push
call
add
add
cmpsl
jno
add
adcb
xchg
push
push
add
jecxz
roll
mov
add
out
add
mov
stos
stc
mov
test
add
add
movl
add
push
popa
les
lcall
jne
push
lea
push
push
lea
push
push
call
fldl
mov
fiaddl
imul
shlb
mov
enter
push
pop
add
lds
lret
add
lcall
bound
add
push
push
call
add
ja
mov
add
add
leave
in
mov
add
movsb
gs
addl
mov
mov
fildl
mov
cltd
add
push
add
push
push
jp
add
add
push
xchg
pop
add
push
mov
jno
mov
add
into
pop
add
mov
jne
pushl
push
lea
push
push
call
add
add
lahf
add
xchg
add
add
jmp
add
faddl
add
jo
mov
aad
xchg
cld
mov
pop
mov
mov
push
flds
imul
std
add
pop
call
push
push
inc
sub
add
push
or
inc
add
sub
shr
dec
sub
inc
not
sub
inc
pop
ror
inc
pop
push
lea
push
push
lea
push
push
push
push
call
add
ljmp
roll
in
add
add
fmul
lret
add
cwtl
add
add
add
add
mov
mov
lods
add
in
popa
jbe
leave
add
repnz
pop
mov
push
mov
mov
mov
xchg
notl
mov
add
sub
pop
pushl
push
lea
push
lea
push
lea
push
call
rclb
add
add
jge
movl
push
stos
flds
mov
shl
add
stos
add
lock
lcall
adc
add
push
push
dec
add
push
or
inc
add
lea
shr
add
ror
sub
add
shr
pop
ror
dec
sub
pop
push
lea
push
push
push
push
push
push
lea
push
push
call
jmp
add
add
add
xchg
add
out
mov
cltd
push
xchg
imul
leave
out
add
jbe
add
add
mov
mov
ja
add
cmpsl
push
jp
lret
faddl
add
cwtl
in
add
outsl
add
shlb
iret
add
fdivr
lcall
push
push
lea
push
push
push
push
call
mov
add
jecxz
jo
add
stos
add
jbe
add
add
scas
jo
nop
outsl
add
add
add
out
jle
add
add
add
add
sti
add
sub
pop
call
mov
push
push
push
lea
push
push
call
fsubr
xorb
add
out
add
movb
fwait
imull
fiadds
jmp
rol
mov
add
rolb
mov
fisttpl
jle
xchg
xlat
sub
pop
push
push
push
lea
push
call
add
xlat
mov
addb
mov
jp
rolb
lds
add
fs
jecxz
add
insb
add
out
lods
mulb
mov
push
leave
add
add
add
pop
sub
pop
push
push
push
push
lea
push
push
push
call
mov
ret
out
decb
add
add
test
add
hlt
push
xchg
add
add
aam
iret
scas
outsl
add
cwtl
add
jbe
call
mov
mov
pop
add
lcall
pop
hlt
push
push
call
add
bound
mov
fcomip
add
add
add
add
add
out
add
mov
bound
cli
add
imul
in
xchg
rolb
pop
add
pop
in
push
push
push
call
add
add
jno
ja
xchg
add
pop
enter
jbe
push
mov
bound
mov
add
int
add
ljmp
add
add
push
add
pushf
mov
add
ret
add
ja
outsl
sbbl
add
sub
pop
add
push
lea
push
push
push
push
lea
push
push
lea
push
call
stos
xorl
add
add
add
push
imul
popf
insb
out
add
sbb
add
jl
add
add
add
sahf
add
add
add
movl
add
pushf
add
sub
pop
add
push
push
push
push
push
lea
push
push
call
cmpsl
add
add
add
xchg
add
cltd
out
mov
cld
scas
out
fildl
mov
movsl
add
add
add
add
pop
popa
add
mov
bound
add
jns
hlt
xchg
enter
push
lcall
xor
adc
cmpsl
jl
mov
lea
push
push
call
add
add
xchg
mov
add
mov
xorl
add
push
imull
data16
jnp
add
lea
add
js
add
mov
pusha
jae
in
mov
add
add
push
push
push
lea
push
push
lea
push
push
push
call
bound
add
jne
loop
sbbb
faddl
add
mov
add
iret
add
iret
rclb
int
mov
jnp
test
out
arpl
xchg
pop
jmp
add
loopne
push
push
push
call
add
fwait
push
nop
neg
mov
rcrl
xchg
add
roll
add
sti
add
test
mov
mov
add
xchg
out
push
mov
lcall
inc
or
adc
test
pusha
add
add
cwtl
jle
add
jo
add
jno
add
jno
add
add
scas
in
add
add
add
test
incb
add
fildl
jp
add
rorl
add
in
mov
jo
jne
add
add
cwtl
loope
out
add
add
add
add
movsb
add
mov
in
clc
lcall
lock
push
push
push
push
push
push
push
lea
push
lea
push
call
mov
pop
call
add
add
add
fldl
push
lods
add
fdivp
fistl
lahf
loop
leave
jp
ljmp
fdivp
mov
call
pop
jmp
add
enter
lcall
dec
add
xor
adc
or
mov
push
insl
pop
lea
push
lea
push
push
push
push
call
jge
add
fucomi
cmpsb
add
loope
jne
in
in
scas
fwait
mov
stc
fiadds
add
add
add
mov
add
jne
rclb
sub
pop
xor
push
lea
push
push
push
push
lea
push
push
push
push
push
call
data16
jne
pusha
pop
lds
aam
in
roll
add
add
imul
jecxz
mov
fucomp
mov
add
push
add
scas
add
enter
iret
sub
pop
add
push
push
push
push
push
lea
push
call
cli
mov
add
add
add
push
lods
add
in
mov
xchg
jo
add
cltd
add
mov
lahf
fs
int
fistps
mov
popf
lock
mov
jne
insb
in
sub
pop
push
push
push
call
pop
roll
add
xchg
jmp
cmpsb
jb
add
xchg
clc
add
jo
mov
data16
mov
add
out
aad
add
jae
mov
pop
mov
push
push
lea
push
push
call
mov
push
cltd
addl
lds
call
add
mov
mov
imul
add
ljmp
push
arpl
repnz
add
mov
shlb
scas
mov
add
add
lcall
add
push
lea
push
lea
push
push
lea
push
push
call
add
add
xchg
ror
gs
add
imul
add
pop
lds
add
add
add
lock
mov
add
add
mov
add
add
pop
add
xchg
clc
enter
ja
add
add
add
add
call
push
push
push
push
push
push
push
push
call
add
push
jle
add
push
clc
add
arpl
call
out
add
mov
aad
add
add
leave
jne
add
in
loopne
lcall
enter
subps
dec
push
lea
push
call
xchg
les
jp
pop
addb
fcoms
data16
push
jmp
movsl
add
add
add
mov
jo
pop
mov
add
add
rolb
add
icebp
xlat
mov
stos
mov
add
add
xchg
loope
mov
sub
pop
pop
push
lea
push
push
lea
push
push
push
call
imul
test
mov
add
add
add
popl
aam
add
in
push
pop
int
add
lds
lcall
movsb
push
push
push
call
xchg
add
lret
addr16
cmpsb
imul
add
mov
add
add
popf
popa
roll
mov
add
push
xlat
jl
fadd
arpl
test
add
push
filds
mov
push
lea
push
lea
push
push
push
push
push
push
lea
push
push
call
add
jge
add
notl
push
mov
xchg
jb
add
flds
loop
add
add
add
mov
mov
jb
add
mov
aad
add
loopne
aad
lods
add
add
add
add
fcomps
pop
in
add
push
push
push
push
push
lea
push
lea
push
call
roll
add
insb
imul
popa
mov
push
add
mov
add
jae
add
loop
xchg
iret
add
mov
add
add
add
ja
jecxz
sub
pop
add
mov
xor
push
push
call
cmpsl
mov
fiaddl
loopne
cli
add
add
out
add
fs
loop
std
fwait
add
jge
jmp
add
push
add
add
cli
repnz
flds
add
nop
fists
rolb
fldl
lcall
scas
push
sub
pop
mov
push
push
push
push
push
push
push
push
push
push
call
nop
xchg
xorl
roll
nop
add
add
mov
push
leave
ret
push
add
into
lds
test
lea
in
add
jno
add
mov
pusha
add
jbe
in
fcompl
adc
push
push
push
call
mov
mov
add
mov
add
add
xchg
push
add
test
notb
lahf
mov
roll
mov
mul
pop
pushf
jae
mov
add
lcall
les
add
push
push
push
lea
push
lea
push
push
push
push
call
mov
movsb
cmpsl
add
sar
xchg
add
in
add
mov
add
add
add
add
in
rolb
sub
pop
mov
push
push
lea
push
push
push
push
call
add
add
pop
je
push
lret
push
push
lods
mov
pop
mov
fiaddl
add
lret
add
lds
add
enter
in
in
pop
xor
push
lea
push
push
push
push
call
add
faddl
add
add
push
add
pop
add
shlb
add
mov
imul
scas
add
cltd
add
mov
movsl
add
jae
add
add
add
xchg
jo
xchg
popf
add
xchg
add
out
add
pop
sub
pop
add
push
push
push
push
push
push
lea
push
call
add
hlt
lea
mov
add
add
mov
jno
add
cltd
fnstcw
mov
fldl
add
add
mov
in
in
lcall
ret
pop
push
pop
push
lea
push
lea
push
lea
push
call
testb
insb
add
add
mov
cmp
add
faddl
add
add
add
mov
add
add
sub
pop
add
mov
push
push
rol
inc
push
push
pop
add
rol
sub
shl
shl
pop
lea
shl
sub
xor
pop
push
push
lea
push
push
push
call
add
andb
enter
jne
ret
add
add
add
push
mov
lret
mov
loop
add
imul
mov
loopne
add
out
lds
out
in
sti
ret
pop
loope
jmp
out
sub
pop
pushl
push
push
push
call
mov
test
mov
add
mov
add
add
cmpsb
out
mov
push
faddl
lret
push
aad
add
enter
jo
add
leave
push
stc
mov
in
xlat
mov
in
ret
add
movsb
enter
sub
pop
call
push
sub
pop
push
push
push
rol
ror
xor
sub
push
push
pop
add
xor
add
rol
inc
sub
shr
shr
pop
add
pop
push
add
add
pop
push
push
push
push
push
push
call
push
add
int3
add
add
xchg
add
fcoml
add
test
mov
fnstcw
rolb
faddl
xchg
add
add
je
aam
jge
add
pop
outsl
jmp
add
pop
ret
mov
add
mov
add
xchg
add
stos
add
add
add
rclb
negb
clc
push
push
push
lea
push
push
push
push
push
push
call
add
movsl
jno
xchg
aam
mov
add
xlat
mov
in
rcl
repnz
add
push
not
xor
pop
mov
push
push
lea
push
call
adcb
xchg
add
out
add
add
add
add
add
ljmp
leave
xchg
mov
add
pop
in
push
push
push
call
insb
cmpb
pop
add
out
push
stos
aad
subl
imul
add
push
jno
lods
add
xchg
clc
add
add
in
add
je
add
add
stos
add
jnp
in
hlt
lcall
ret
add
add
add
push
push
push
push
call
add
clc
mov
shll
mov
imul
add
mov
lock
add
pop
fucomp
add
imul
jge
test
lea
addb
in
lock
mov
xor
push
push
push
push
push
push
push
push
push
call
out
add
fsubr
mov
mov
push
jmp
test
add
add
jne
icebp
add
add
js
add
add
scas
scas
mov
add
mov
in
fdivr
lcall
jne
push
add
add
xor
pop
push
push
lea
push
push
lea
push
push
call
jbe
imul
add
out
mov
add
add
mov
fwait
add
xchg
pop
add
add
lahf
add
xlat
lock
leave
mov
add
mov
loopne
out
xlat
pushf
add
add
add
jns
in
in
pop
mov
xor
push
push
push
push
push
push
lea
push
lea
push
push
call
ror
mov
add
add
shrl
push
xchg
push
neg
add
test
add
add
int3
cld
cmpsb
add
cmp
mov
mov
addr16
cld
movsb
popf
sarl
nop
cmpsl
mov
mov
add
fdivr
lcall
lock
push
push
push
lea
push
call
add
mov
mov
mov
out
add
mov
rclb
add
add
add
insb
add
add
mov
addb
lret
repnz
lcall
push
pop
mov
push
push
push
push
push
call
jae
xchg
ja
add
imul
mov
movsb
into
xchg
jo
add
int3
rcrl
add
add
insb
xchg
add
add
lcall
or
push
push
lea
push
lea
push
push
lea
push
call
mov
add
loopne
add
mov
gs
fisttps
popl
push
add
std
les
js
lock
xchg
add
sub
pop
add
push
push
push
push
call
xchg
xchg
rcrb
add
lds
jmp
ficoms
jne
bound
movsl
xchg
add
jmp
add
fldl
add
add
jno
lret
loop
ljmp
push
xchg
addr16
add
pop
mov
scas
mov
jl
sub
pop
rep
push
xor
shr
xor
inc
pop
mov
xor
push
not
pop
or
je
mov
push
push
push
call
add
mov
lcall
add
push
xchg
rcll
add
out
lcall
mov
mov
cmpsb
scas
add
mov
add
stos
sub
pop
xor
push
lea
push
push
lea
push
push
lea
push
call
loopne
jl
mov
cmc
add
lahf
fisubl
fninit
add
add
xchg
pop
add
loopne
nop
sub
pop
add
push
rol
sub
xor
pop
mov
xor
push
sub
pop
add
push
lea
pop
add
push
push
push
lea
push
push
call
mov
jbe
scas
add
xchg
add
loope
add
scas
in
add
test
xchg
icebp
mul
filds
mov
repnz
cld
add
add
add
leave
add
mov
aam
fiaddl
add
add
sub
pop
mov
push
push
push
push
push
push
push
push
call
mov
sti
mov
stos
into
pop
add
stc
into
lcall
add
add
add
repnz
add
fsubr
pop
add
add
fistl
outsl
loope
ljmp
pop
jle
xchg
stc
cmpb
add
mov
add
add
loop
mov
add
xor
push
lea
push
lea
push
push
push
push
push
call
pop
add
lds
add
add
add
add
add
out
scas
clc
loope
mov
mov
add
mov
xchg
add
in
in
add
push
push
push
call
stos
leave
mov
add
fldl
ja
xchg
add
rcrl
lret
add
test
add
add
add
sarl
add
add
sub
pop
add
push
shr
not
pop
pop
push
push
push
push
call
lahf
add
ror
int3
les
add
pusha
clc
jl
bound
push
std
add
add
jge
mov
xchg
fsubrp
cmpsb
add
xchg
add
ret
lock
rep
push
push
push
push
call
add
ja
add
lea
add
add
addb
in
je
in
ljmp
aam
add
fwait
jbe
add
mov
cld
add
repnz
fidivl
push
mov
add
add
add
call
mov
add
add
outsl
add
add
push
xchg
sub
pop
mov
push
push
push
lea
push
push
lea
push
push
push
push
lea
push
push
call
pop
add
out
add
jle
mov
jle
lcall
add
add
data16
add
scas
test
add
fs
push
hlt
flds
jge
les
jns
jp
add
bnd
mov
testl
sub
pop
xor
push
push
push
push
call
xchg
imul
add
add
add
test
hlt
out
add
ljmp
push
insb
sahf
xchg
jecxz
add
push
sarl
mov
lock
pop
outsl
add
cld
add
scas
cld
popa
add
pop
xlat
add
add
lret
stos
add
add
addb
in
lock
add
push
push
push
push
push
push
call
sbbb
hlt
in
xlat
push
test
add
pusha
test
add
add
fs
mov
idivl
cmpsl
add
jb
mov
notl
add
cmpsl
fstl
add
add
add
mov
add
push
pushf
add
hlt
pop
sub
pop
or
je
mov
push
add
pop
add
push
rol
pop
add
push
lea
push
push
push
lea
push
lea
push
call
pushf
mov
stos
shll
out
je
int
enter
sarl
pusha
add
mov
mov
scas
imul
add
stos
add
call
add
bound
mov
mov
add
add
add
pop
sub
pop
rep
push
push
push
lea
push
push
push
push
push
lea
push
call
cwtl
mov
xchg
filds
cld
insb
mov
nop
mov
test
popf
shll
mov
sti
add
add
fcmovbe
cmpsb
subb
add
fadds
insb
jmp
movsl
rorb
bound
out
testb
jbe
add
add
std
lret
aam
in
fcompl
push
push
shl
push
push
pop
add
not
dec
sub
add
sub
ror
dec
pop
shl
not
rol
pop
push
push
push
push
push
call
sarb
add
mov
add
hlt
add
mov
add
add
mov
add
push
into
add
mov
mov
and
mov
add
mov
push
mov
add
lods
add
add
add
add
sub
pop
pop
push
push
push
push
push
call
add
jp
add
mov
std
add
pop
lods
sti
roll
jmp
outsl
cli
sti
push
add
xchg
vdivss
add
add
add
hlt
add
add
pusha
add
add
add
push
pushf
push
out
xchg
into
add
add
ret
roll
leave
leave
mov
enter
lret
clc
sub
pop
mov
push
add
pop
mov
push
lea
push
push
push
push
push
lea
push
push
push
call
rcl
testb
add
add
addb
add
add
fildl
add
add
add
mov
add
add
rolb
std
jnp
add
js
mov
mov
add
scas
imul
add
mov
pop
mov
jmp
push
lea
pop
push
push
dec
rol
pop
mov
push
lea
push
push
lea
push
lea
push
lea
push
push
lea
push
call
add
popa
jle
add
add
test
add
add
cli
cli
add
shl
je
in
xchg
add
mov
add
add
add
hlt
mov
add
add
add
fs
lds
add
lahf
mov
nop
add
add
xchg
scas
add
add
repnz
add
add
bound
loope
sbbb
lcall
cld
push
push
push
push
call
add
add
in
add
add
add
imul
add
add
clc
fstl
fucomi
mov
je
mov
movsl
pushf
aad
add
test
in
add
jmp
pop
xchg
jge
xchg
hlt
lcall
push
shl
pop
push
push
shr
dec
sub
pop
push
push
push
push
push
lea
push
push
call
add
loopne
xlat
in
add
popf
and
add
pop
add
jns
add
add
xchg
add
add
push
add
les
mov
pop
push
lea
push
lea
push
push
push
lea
push
push
push
push
call
xlat
jno
cmpsb
incb
fdivrs
jb
push
push
add
add
mov
add
add
cltd
insb
out
add
add
outsl
aam
mov
add
int3
add
add
add
roll
imulb
sub
pop
pop
push
sub
add
sub
pop
pop
push
push
push
lea
push
push
push
push
push
push
push
call
xlat
lea
xchg
mov
mov
mov
add
add
add
add
add
add
pop
push
stos
cmpsl
add
add
xchg
out
cltd
push
cwtl
fwait
lret
cmpsb
lds
add
ret
pop
fiaddl
lcall
leave
push
xor
rol
shl
rol
pop
ret
push
lea
push
lea
push
push
lea
push
lea
push
push
push
lea
push
lea
push
call
mov
xchg
test
jmp
add
add
add
sti
add
out
pop
jo
ficompl
in
test
jl
insb
add
mov
jb
addb
add
addl
sub
pop
push
mov
push
not
rol
pop
add
push
pop
push
push
pop
push
push
push
push
lea
push
push
push
push
push
push
call
mov
push
pop
add
add
pop
add
add
jo
add
jae
fidivl
imul
cwtl
mov
lret
add
add
xchg
add
xchg
add
loope
add
mov
xchg
aam
mov
add
je
mov
add
sub
pop
push
push
rol
inc
pop
push
push
push
push
push
push
push
push
call
jne
bound
stos
cld
cmpsl
add
xlat
add
in
rcrl
add
cwtl
lods
add
shr
out
lods
add
add
xchg
pushf
add
arpl
sahf
mov
test
lds
xchg
add
fsubrp
in
jl
push
add
in
lcall
inc
cld
add
add
push
xor
add
pop
addl
push
sub
inc
pop
test
je
push
ror
pop
mov
push
shr
not
pop
pop
push
push
push
call
rol
testb
add
add
jmp
cmc
add
mov
add
add
imul
add
aam
out
shl
mov
add
fiaddl
lahf
jo
pop
xchg
loop
xchg
add
mov
add
add
call
lcall
push
not
lea
add
pop
pop
pop
push
push
push
push
push
push
push
call
add
mov
clc
ljmp
mov
clc
jo
mov
scas
jae
loope
add
add
add
popa
imul
mov
cmpsl
divl
rcr
movsb
add
loope
push
mov
add
test
add
add
mov
xlat
idivb
add
lcall
ret
push
shl
add
pop
push
push
ror
pop
mov
push
inc
rol
pop
add
push
rol
rol
sub
pop
push
push
not
pop
push
push
push
push
push
push
lea
push
push
push
push
lea
push
call
imul
in
out
xchg
add
mov
add
pop
add
add
addl
push
shr
add
fstps
aad
add
test
in
repnz
add
push
lea
push
push
push
push
push
push
call
push
imul
push
push
xlat
rclb
add
mov
add
lods
stos
push
push
fstpl
pop
add
add
add
addb
add
sti
mov
sub
pop
push
testl
push
push
call
in
test
jns
mov
repnz
add
in
add
mov
lds
add
mov
icebp
hlt
add
pop
lcall
inc
or
push
shr
inc
dec
ror
pop
push
push
add
dec
pop
call
push
push
push
push
lea
push
lea
push
push
push
call
mov
movsb
out
mov
jp
add
movsb
shl
iret
fisubrl
add
js
jle
add
pop
pop
pop
leave
mov
aad
add
faddl
add
pusha
rol
test
mov
int
add
addr16
pop
mov
push
dec
pop
pushl
push
push
push
lea
push
push
call
push
add
aam
add
gs
add
add
loope
cmpsb
movsb
xchg
leave
push
cld
xchg
pop
add
add
call
mov
push
lea
push
push
push
push
push
call
push
jne
fwait
add
fdivrs
ret
pop
stc
xchg
mulb
nop
add
in
roll
add
in
in
push
push
lea
push
push
lea
push
lea
push
push
lea
push
push
push
call
fadds
rorl
in
jmp
xchg
addb
jb
icebp
add
mov
rolb
add
add
lret
add
lret
add
out
add
cmc
in
mov
sub
pop
call
cmpl
jne
push
dec
lea
not
pop
pop
push
push
push
push
push
push
push
push
call
js
push
je
test
add
pop
mov
test
aam
jecxz
add
add
add
jns
js
xchg
sahf
add
add
fdivp
mov
shl
add
mov
add
mov
addb
jae
push
xchg
jge
dec
add
faddl
iretw
add
sub
pop
pop
push
shr
pop
pop
push
push
push
call
add
js
jp
gs
add
pop
rol
add
jns
jp
jnp
add
mov
in
out
pop
addr16
test
into
pop
push
xchg
add
add
cmc
add
jns
fsubr
test
bound
lcall
push
shl
add
pop
leave
push
xor
shl
pop
ret
push
push
push
push
push
push
lea
push
push
lea
push
call
jnp
add
mov
lahf
push
pushf
add
in
add
lcall
icebp
add
mov
popl
iret
sti
mov
fcompl
push
push
push
lea
push
push
call
insb
shrl
lret
mov
enter
jae
add
add
lea
arpl
add
fidivl
popf
out
push
add
add
shlb
subl
xchg
add
movsb
add
add
jae
jo
add
arpl
add
xchg
sub
pop
mov
push
shr
pop
add
push
shl
pop
push
push
lea
rol
pop
push
push
push
dec
dec
dec
pop
push
movl
push
lea
push
lea
push
push
push
lea
push
push
push
push
push
call
pop
add
xchg
mov
loopne
lret
add
xchg
gs
xchg
loope
call
xchg
pushf
xchg
rorw
add
add
popa
loop
add
bound
addr16
add
xlat
ficompl
jno
mov
test
push
in
fcomps
add
push
push
push
push
lea
push
push
push
call
pop
add
not
add
gs
add
call
arpl
jle
les
ret
sahf
sub
pop
call
push
sub
pop
push
push
pop
call
push
lea
xor
pop
subl
push
lea
push
push
push
push
lea
push
push
push
push
lea
push
call
int3
add
add
add
jmp
mov
add
add
pop
jle
xchg
fidivrs
add
add
add
popa
mov
addl
sti
add
mov
sub
pop
cmpl
jne
push
push
call
add
in
scas
push
lds
add
add
mov
mov
fiadds
fadds
push
lahf
movsb
test
popa
fwait
add
ljmp
add
add
push
fadds
jp
add
clc
pop
pop
pop
push
lea
push
push
push
lea
push
push
lea
push
lea
push
push
push
call
outsl
add
imul
fs
movsb
push
mov
mov
jp
gs
hlt
add
add
jl
add
add
lods
fidivs
add
nop
add
xchg
add
push
add
xchg
add
add
push
add
pop
in
ja
test
sub
pop
pop
pop
push
push
push
push
push
lea
push
push
push
lea
push
push
call
add
add
add
mov
add
mov
ljmp
add
insb
xchg
add
ja
add
jecxz
add
xchg
faddl
in
add
pop
ret
add
lret
pop
pop
mov
nop
add
mov
in
in
fdivr
lcall
push
push
push
call
add
push
xchg
aad
add
mov
jecxz
pop
test
add
add
out
leave
in
pop
add
popa
ret
test
xchg
add
cltd
jecxz
jp
mov
mov
add
add
xchg
fimuls
pop
std
add
in
hlt
lcall
push
push
sub
add
ror
add
pop
mov
push
add
sub
sub
pop
add
push
push
push
push
push
lea
push
push
push
call
nop
add
data16
add
pop
add
add
add
add
add
add
popa
mov
add
push
hlt
xchg
xchg
mov
add
filds
out
rcr
push
addb
stc
mov
addb
pushf
add
sub
pop
push
push
pop
push
push
push
push
call
rclb
stos
add
mov
rclb
roll
pop
add
jns
push
add
stos
mov
add
xchg
nop
add
add
add
add
jp
pushf
mov
lahf
add
sub
pop
push
push
push
push
push
call
mov
mov
faddl
sti
xchg
mulb
leave
filds
js
addr16
lea
sahf
add
icebp
jmp
out
add
add
loope
add
cld
int3
add
lret
add
lock
mov
push
push
push
call
add
add
add
pushf
add
mov
add
add
out
mov
add
mov
add
add
add
movsl
subl
pop
add
add
push
pop
mov
sub
pop
lea
push
dec
pop
sub
push
lea
push
push
lea
push
lea
push
push
call
push
test
add
add
lds
stos
enter
add
xchg
xchg
pop
lea
push
insb
nop
add
call
mov
push
push
push
push
push
call
fidivrl
popf
pop
scas
mov
lods
mov
lcall
mov
lahf
fadds
add
add
add
xchg
roll
scas
add
add
add
add
add
mov
push
add
jo
jb
add
test
lret
pop
add
xchg
ljmp
in
lcall
call
add
lret
lea
inc
or
xor
inc
pop
mov
push
pop
mov
add
push
lea
pop
add
push
lea
push
push
call
aam
push
add
aam
add
bound
mov
pushf
mov
in
leave
add
add
add
push
hlt
pop
mov
push
push
lea
push
push
lea
push
push
push
lea
push
call
add
add
fisubl
test
loopne
add
fnstcw
out
add
add
mov
cmpb
add
add
lret
push
add
add
pop
sub
pop
mov
push
lea
lea
pop
cmp
jne
push
inc
xor
pop
cmp
jne
mov
push
push
push
push
push
push
push
push
push
lea
push
call
xchg
cmc
push
pop
pushf
test
mov
push
add
mov
push
movsb
mov
scas
rolb
std
add
movsl
mov
add
leave
add
std
add
repnz
add
test
mov
scas
sub
pop
movl
jmp
push
rol
ror
shl
pop
mov
push
shl
sub
pop
mov
sub
jne
push
lea
push
call
add
arpl
sarb
ret
cmpsb
sarb
mov
add
movsb
mov
mov
js
ja
add
add
roll
add
add
enter
vpminub
lret
add
idiv
leave
movsb
mov
add
data16
sub
pop
mov
push
shl
inc
pop
movl
push
push
call
mov
add
add
filds
test
add
jp
fyl2x
push
jmp
add
push
mov
outsl
fidivs
add
add
add
mov
mov
add
lcall
test
add
mov
push
push
push
push
lea
push
call
in
add
adc
stos
add
mov
enter
mov
add
in
add
negb
test
sub
pop
mov
push
push
push
push
call
add
add
xchg
rcrb
ljmp
scas
filds
fucomip
jge
push
pop
mov
imul
add
add
nop
mov
add
pop
cmp
jne
push
rol
dec
add
pop
mov
push
push
push
push
push
push
call
mov
add
pop
test
add
add
add
add
imul
mov
insb
add
mov
lea
lcall
add
add
add
jl
add
push
rol
pop
mov
push
sub
ror
dec
shl
pop
cmpw
jne
push
push
push
push
push
push
push
call
mov
test
add
add
add
imul
outsl
add
fidivrs
mov
fbld
push
test
mov
xchg
add
add
iret
add
in
mov
scas
mov
pusha
aad
mov
in
in
mov
push
push
push
call
gs
add
lcall
add
scas
fimuls
add
add
add
lcall
lcall
add
lea
push
lea
push
push
push
push
push
lea
push
push
push
call
add
sahf
xchg
rcl
pop
add
add
incb
xchg
in
pop
movsl
add
loopne
arpl
adc
cwtl
add
jae
rolb
test
sub
pop
jmp
pushl
push
not
sub
pop
pop
push
shl
sub
inc
pop
mov
push
push
push
call
push
add
cwtl
lea
ljmp
mov
add
pop
cmc
mov
js
stos
mov
add
add
jecxz
jmp
in
hlt
pop
mov
push
xor
dec
rol
pop
mov
push
push
push
xor
add
sub
sub
add
pop
add
dec
pop
push
lea
push
push
push
call
sti
add
std
popa
rcr
jne
test
test
jbe
add
push
add
add
add
imul
rcll
pop
test
add
lcall
push
push
lea
push
call
add
in
add
stos
mov
pop
xchg
iret
add
push
add
rol
icebp
pop
flds
add
mov
add
add
add
pop
add
mov
addr16
fwait
mov
add
mov
lea
test
in
mov
add
lcall
sbb
add
cmpl
je
push
push
add
lea
dec
push
push
pop
add
sub
sub
shr
ror
rol
pop
pop
push
push
push
push
call
cmpsb
add
std
pop
aam
scas
add
add
sti
aam
jp
in
push
loopne
add
sahf
iret
push
add
add
fadds
add
jnp
mov
ja
add
add
add
push
sub
shr
pop
call
push
push
push
push
push
push
push
push
push
call
add
popa
add
fisubrs
add
faddl
add
pusha
fst
jge
roll
fiaddl
imulb
xchg
fisubrs
insb
aad
mov
add
add
repnz
js
int3
fldz
ret
insl
or
add
sbbb
mov
jnp
shr
push
or
inc
add
sub
shr
sub
pop
not
inc
dec
pop
push
push
push
push
push
push
push
call
mov
add
add
add
add
shll
leave
xchg
insb
testb
add
js
rcll
add
add
push
fldl
pop
mov
add
aad
movsl
js
add
clc
insb
loope
lcall
fiaddl
xchg
add
push
rcr
add
sub
pop
push
call
push
push
push
push
lea
push
push
push
push
call
iret
hlt
pop
add
mov
add
data16
lret
add
fiadds
add
stc
add
push
jb
in
add
imul
jns
aad
sahf
cli
ror
add
add
clc
add
pushf
jae
mov
add
out
add
data16
fcoml
jno
add
imul
add
lcall
cmp
add
int3
je
push
push
sub
add
xor
push
xor
add
rol
sub
lea
sub
pop
shr
dec
xor
pop
push
add
inc
xor
xor
pop
push
call
push
inc
sub
pop
cmpl
je
push
push
inc
lea
push
and
add
sub
inc
sub
inc
sub
add
pop
inc
pop
push
sub
pop
push
call
push
push
lea
push
push
call
add
add
scas
jnp
mov
add
add
mov
rcl
xchg
push
pop
std
fsubs
shll
cmpsl
add
in
test
jns
add
mov
add
cli
jae
add
fdivr
hlt
add
test
pop
cmpl
je
push
push
shl
xor
push
sub
add
not
shr
sub
add
not
inc
dec
pop
add
sub
not
pop
push
dec
add
ror
pop
push
push
push
lea
push
push
lea
push
push
push
push
push
push
call
arpl
push
into
mov
jmp
fstl
into
add
add
sarl
lcall
stc
lahf
mov
add
mov
xchg
loopne
add
inc
xor
add
int3
je
push
push
add
shl
push
or
inc
add
dec
lea
lea
xor
sub
lea
shr
add
pop
not
shr
shr
pop
push
push
push
call
jle
add
xorl
add
test
movl
out
add
add
add
jge
test
stos
add
add
enter
rolb
sub
pop
push
call
push
push
push
push
call
js
lds
xchg
jb
push
add
add
iret
add
cmpsl
mov
ret
leave
scas
shlb
add
enter
add
mov
push
test
add
sub
pop
cmpl
je
push
push
ror
dec
lea
push
push
pop
add
inc
sub
shr
pop
add
inc
pop
push
shl
not
pop
push
push
push
lea
push
push
push
push
push
lea
push
push
push
call
add
add
push
add
add
add
jbe
add
sti
add
notb
test
add
in
outsl
mov
popf
mov
mov
ficomps
in
ror
testb
add
add
jmp
bnd
imul
add
lcall
jnp
add
push
push
push
push
push
push
push
call
js
push
cmpb
loop
pop
cli
lret
add
fiaddl
add
jge
jp
call
fadds
add
add
imul
lods
lock
mov
lds
imul
jle
mul
cmpsl
movl
add
pop
cmpl
je
push
push
sub
sub
push
or
not
add
add
inc
sub
sub
add
ror
add
pop
shr
xor
xor
pop
push
push
lea
push
push
push
push
push
push
call
add
add
xchg
push
pop
jb
add
sahf
stos
clc
fstpl
add
push
je
cltd
je
into
add
roll
add
loop
jp
add
fbstp
in
loop
add
jge
mov
add
js
in
loopne
push
push
push
push
lea
push
lea
push
push
push
lea
push
call
add
mov
cmpsb
jnp
add
add
lock
lds
test
add
add
std
pusha
mov
popa
xchg
add
push
add
lcall
das
add
push
lea
push
call
xchg
add
add
xchg
stos
std
lods
into
add
call
fcoml
fcmovnbe
int3
js
push
add
gs
out
stc
mov
add
xchg
add
je
cmpsb
movsb
add
add
mov
mov
sub
pop
cmpl
je
push
push
not
sub
add
dec
push
and
add
xor
sub
dec
sub
sub
add
ror
pop
add
shr
pop
push
push
lea
push
lea
push
push
call
add
fdiv
fstl
jecxz
push
add
add
cmpsb
xchg
add
add
add
add
add
push
add
add
add
add
jmp
add
add
in
add
stos
add
push
push
lea
push
push
push
push
push
push
call
add
jecxz
fiadds
jae
stos
add
push
rcl
faddl
add
add
add
out
add
add
fst
push
jge
mov
pushf
jb
iret
aad
jns
in
loopne
call
cmpl
je
push
push
shl
push
or
inc
add
shl
sub
not
lea
ror
add
pop
shl
dec
shl
pop
push
lea
push
push
lea
push
push
push
push
push
lea
push
push
call
loopne
pop
add
stc
push
call
test
clc
test
xorl
mov
add
idiv
popf
mov
jmp
icebp
mov
push
add
pop
out
mov
pop
push
push
push
lea
push
push
push
push
push
push
call
movsl
iret
fldcw
ljmp
add
add
sarl
inc
roll
push
add
mov
mov
loope
sahf
int3
add
roll
sub
jmp
sub
lea
pop
cmpl
je
push
push
dec
rol
sub
push
sub
add
xor
dec
sub
add
sub
sub
ror
pop
add
pop
push
lea
push
lea
push
push
push
push
push
lea
push
push
lea
push
call
clc
jp
mov
outsl
jmp
sti
push
addb
push
jmp
js
les
xorl
add
cmpsl
jne
clc
add
int3
lock
add
cltd
add
lret
mov
add
bound
add
add
filds
nop
movl
cmpsb
jns
add
addb
add
mov
push
push
push
push
lea
push
push
push
lea
push
push
push
call
add
loopne
add
push
stc
xlat
jecxz
add
add
int
lds
test
add
imul
add
fcompl
jne
add
push
xor
add
pop
cmpl
je
push
push
ror
lea
add
push
xor
add
not
inc
add
sub
pop
pop
push
sub
pop
push
call
push
sub
sub
pop
cmpl
jne
push
push
push
push
push
push
push
lea
push
push
call
mov
push
shll
gs
pop
xchg
cmpsb
push
mov
add
loope
sti
mov
fldenv
add
add
rolb
add
xchg
jmp
filds
xchg
add
mov
lret
add
call
clc
add
mov
add
push
in
fcompl
inc
adc
cmp
adc
leave
sbb
push
add
add
cmpsb
add
add
fwait
add
out
lahf
add
mov
push
mov
pop
add
add
add
adcl
add
jl
int3
add
add
xchg
mov
add
out
pop
mov
add
add
in
in
lcall
add
add
add
add
add
push
pop
xor
pop
push
push
call
scas
mov
int3
add
add
add
cli
add
jb
mov
jp
fistps
add
ret
mov
add
mov
add
lcall
pop
push
inc
pop
pop
leave
push
push
push
push
push
call
gs
pop
addb
jns
jo
aad
add
mov
stos
lahf
int3
mov
movsb
cld
leave
add
xchg
test
add
not
add
add
cmpl
add
fiaddl
lods
push
xchg
std
mov
ret
add
push
popa
int3
mov
ret
push
lea
push
push
push
push
push
call
xchg
mov
mov
add
in
jmp
add
add
add
add
lock
add
add
movsl
add
enter
add
add
movsl
push
add
add
sahf
lock
jmp
aad
add
les
rcrl
add
loopne
add
add
outsl
in
inc
mov
test
fldl
lcall
push
lea
push
call
mov
testb
sahf
ficompl
add
add
popa
lret
ret
add
add
add
pusha
add
pusha
add
in
clc
lcall
in
push
shl
sub
pop
add
cmpl
jne
push
push
shl
xor
push
sub
add
add
rol
sub
ror
sub
lea
pop
ror
sub
xor
sub
pop
push
rol
ror
shl
pop
pushl
call
push
shr
sub
sub
rol
pop
push
push
pop
call
jmp
push
push
push
call
jl
add
aad
add
add
cld
pop
add
out
add
mov
add
insb
mov
xchg
mov
xchg
roll
add
lods
add
mov
add
in
aam
add
movsb
add
test
jge
add
test
add
test
lea
push
push
lea
push
lea
push
lea
push
push
call
imul
insb
rolb
add
xorl
fiaddl
ljmp
call
mov
ja
add
std
add
lock
sahf
imul
jns
push
jp
jns
add
push
sub
pop
mov
push
push
push
lea
push
push
push
push
push
call
repnz
insb
cmpsl
jle
in
pop
add
jmp
add
add
mov
push
out
in
out
adcl
add
add
add
mov
add
cmc
fiaddl
test
xchg
test
movsb
jmp
in
loopne
call
push
lea
push
push
push
call
add
fnop
mov
mov
aad
cwtl
shl
int3
test
cli
sub
mov
add
jbe
lret
addr16
mov
xchg
cli
pop
add
addr16
out
mov
test
add
subb
filds
mov
mov
cltd
pop
add
bound
pusha
sub
pop
ret
push
lea
pop
jmp
push
lea
push
call
jmp
mov
icebp
add
in
sti
add
xorb
add
in
jae
ljmp
add
add
add
push
stos
add
add
imul
add
nop
out
xchg
jmp
in
imul
jbe
shll
sub
pop
cmpl
jne
push
push
sub
sub
add
push
and
add
add
add
rol
sub
inc
sub
pop
xor
pop
push
push
push
lea
push
push
lea
push
push
call
ja
add
popa
mov
icebp
add
rorb
add
mov
std
icebp
xchg
test
add
add
add
jp
jb
clc
add
fcoms
out
mov
add
add
add
push
mov
cli
cmpsl
jnp
andb
pushl
push
shr
dec
add
rol
pop
call
push
lea
push
lea
push
push
push
push
push
lea
push
lea
push
call
stos
enter
mov
add
pop
aad
add
jge
add
fwait
pop
outsl
stc
shlb
jbe
mov
clc
add
pushf
add
add
add
add
jnp
sub
mov
pop
mov
lock
xchg
xchg
pop
push
add
add
lcall
add
mov
push
push
call
mov
add
filds
add
add
cld
add
cwtl
mov
loope
call
stos
pop
add
andb
js
shrl
test
add
add
lcall
rclb
dec
or
add
pusha
mov
ret
add
xorb
ljmp
add
cwtl
stos
add
jae
add
imul
add
add
clc
pop
jmp
push
lea
push
call
test
add
add
out
jae
add
fistl
mov
add
pop
add
icebp
xchg
push
addl
in
clc
pop
cmpl
jne
push
push
push
push
push
lea
push
push
push
push
push
call
lret
out
roll
cmp
add
add
js
push
add
xchg
add
jns
add
add
xchg
add
roll
jb
mov
mov
add
stos
fiadds
cld
std
add
cltd
les
mov
add
sub
pop
mov
mov
push
sub
add
rol
shr
pop
push
push
push
shr
dec
push
xor
add
lea
shl
add
sub
not
shl
pop
sub
sub
pop
push
shl
shr
pop
pushl
push
lea
push
push
push
lea
push
call
lcall
jne
out
scas
jbe
mov
xchg
add
add
add
add
rol
add
add
add
add
ret
js
mov
add
stos
sub
pop
call
push
sub
pop
call
push
push
lea
shr
not
push
xor
add
lea
sub
lea
xor
sub
not
pop
lea
ror
not
inc
pop
push
push
push
push
lea
push
push
push
push
push
push
call
add
add
je
mov
pop
xchg
add
add
add
rcrb
add
add
add
xchg
sarl
add
add
ja
mov
add
add
std
add
mov
insb
scas
push
add
fwait
ret
mov
loopne
xchg
add
mov
cwtl
xchg
add
sub
pop
pushl
push
lea
push
lea
push
push
push
push
lea
push
push
call
aam
pop
fidivrs
fildl
mov
call
add
add
add
mov
add
add
add
movsb
rolb
add
add
add
add
push
add
movsl
add
add
add
push
push
sti
sub
pop
call
call
push
push
dec
sub
push
xor
add
inc
ror
sub
sub
rol
inc
sub
pop
shl
shl
pop
push
shr
shr
xor
pop
pushl
push
push
push
lea
push
push
push
push
call
push
mov
nop
fisttpl
mov
hlt
out
add
cmpsb
jle
xchg
pop
jecxz
pop
add
add
aam
add
mov
add
add
loopne
out
add
push
add
add
insb
push
xchg
xchg
cli
jecxz
gs
add
sub
pop
call
push
lea
push
push
push
push
push
lea
push
call
xlat
mov
aad
add
lcall
sbbb
add
add
xchg
add
add
lret
mov
xchg
roll
add
add
sub
pop
call
push
push
not
sub
not
push
or
not
add
add
ror
xor
sub
sub
rol
lea
shl
pop
add
pop
push
rol
shl
pop
pushl
push
push
call
add
jne
lods
clc
fiaddl
bound
cmpsb
cltd
jge
popa
iret
mov
mov
add
lods
std
fisubrl
popf
mov
push
add
add
fiadds
out
les
insb
add
add
shrb
add
mull
sahf
add
add
in
clc
pop
call
call
push
push
sub
push
push
pop
add
shr
dec
add
sub
add
sub
pop
pop
push
push
push
push
push
push
lea
push
push
call
mov
add
pop
call
mov
add
cwtl
add
call
add
repnz
je
pop
mov
scas
in
notb
lahf
into
add
faddl
movsl
add
add
mov
pop
add
xchg
stos
push
push
xlat
pop
sahf
add
add
add
mov
loopne
pushl
push
push
call
mov
lods
mov
shll
add
add
lds
out
add
mov
add
mov
add
add
fdiv
cmc
popf
jnp
jp
leave
aam
add
add
pop
mov
mov
sarb
add
lea
in
clc
lcall
iret
pop
add
push
push
push
push
push
push
lea
push
push
push
call
lods
push
jns
mov
add
mov
fidivs
lds
mov
test
iret
jge
push
add
fucom
pop
jb
jecxz
mov
in
cmc
add
add
movsl
scas
jnp
add
std
add
aad
fs
iret
xorl
fs
add
add
orl
call
push
push
add
sub
push
sub
add
shr
sub
sub
shr
pop
shl
rol
pop
push
pop
pushl
push
sub
pop
call
push
push
lea
push
push
push
lea
push
push
call
cmpsl
add
add
add
jle
movsb
fdivl
test
add
cmc
add
mov
add
loopne
in
in
call
push
push
add
ror
push
push
pop
add
add
sub
not
sub
sub
dec
add
pop
add
dec
add
pop
push
push
call
lock
add
loopne
stos
fldl
add
jp
mov
int3
add
add
add
add
jbe
jle
push
imul
addl
lds
imul
clc
pop
pushl
call
push
ror
xor
dec
inc
pop
call
push
push
not
push
push
pop
add
shr
sub
sub
pop
shl
pop
push
push
push
lea
push
push
lea
push
push
lea
push
lea
push
call
sti
clc
nop
xchg
cld
mov
add
add
mov
xchg
rcll
add
fldenv
mov
in
int3
imul
fwait
lods
repnz
rcr
mov
pushf
stos
add
mov
fdivr
lcall
jne
push
lea
inc
add
pop
call
push
dec
add
ror
pop
call
push
push
inc
push
or
inc
add
xor
lea
add
sub
dec
pop
add
not
pop
push
push
push
call
clc
mov
pop
iret
add
add
add
add
jmp
add
add
test
test
add
popa
jo
mov
iret
add
mov
add
add
add
add
mov
jnp
add
lcall
jne
push
push
push
push
push
push
push
call
addb
jp
mov
push
add
jo
add
int3
mov
mov
cmc
add
jl
add
add
faddl
add
lahf
addr16
pop
add
add
pop
add
add
pop
add
in
in
call
push
push
push
push
call
js
add
mov
pop
add
stos
iret
in
lret
int
outsl
int3
add
xchg
add
add
add
add
leave
add
add
shll
call
push
push
dec
push
or
not
add
dec
sub
add
pop
rol
rol
lea
shr
pop
push
push
push
lea
push
push
lea
push
lea
push
push
push
call
mov
add
int3
add
mov
add
int3
pop
add
xchg
addb
gs
add
jp
jl
add
mov
add
js
mov
gs
fldl
jge
push
add
jne
call
push
lea
pop
lea
push
push
push
push
push
push
lea
push
call
mov
add
data16
pop
add
add
add
add
hlt
xchg
mov
and
add
add
div
add
mov
test
add
sti
test
add
lret
repnz
sub
pop
call
push
push
sub
rol
push
sub
add
add
sub
inc
rol
inc
sub
pop
not
add
lea
pop
push
add
sub
pop
pushl
call
push
sub
sub
shr
pop
call
push
push
sub
add
rol
push
and
add
add
shl
sub
rol
pop
sub
dec
pop
push
inc
ror
pop
pushl
push
inc
shl
pop
call
push
lea
push
lea
push
push
lea
push
push
push
call
mov
fisubl
add
test
lcall
add
add
add
in
incb
sub
xchg
mov
add
fwait
add
popf
lds
xchg
in
call
push
push
push
or
not
add
not
add
sub
sub
sub
pop
ror
pop
push
lea
push
push
lea
push
call
jo
stos
loopne
jno
add
call
in
add
lods
int
push
mov
arpl
lahf
aad
cmpsb
shl
add
jmp
mov
add
add
hlt
add
add
add
cli
pop
rcrb
mov
lock
lcall
jne
push
push
push
push
push
call
push
cli
add
enter
add
mov
add
jle
jno
jl
mov
into
push
lcall
add
movsb
add
imul
lds
cltd
mov
add
lcall
js
add
push
pop
call
push
push
add
push
or
inc
add
shl
add
sub
dec
sub
pop
sub
xor
pop
push
xor
lea
xor
shl
pop
pushl
push
ror
rol
sub
pop
call
push
push
shl
dec
push
sub
add
sub
sub
lea
pop
sub
add
sub
dec
pop
push
push
inc
inc
push
sub
add
rol
xor
sub
pop
sub
pop
push
push
push
push
push
push
push
push
call
scas
mov
add
add
add
xchg
aam
mov
stos
out
adcb
jmp
ret
mov
pop
add
sahf
sub
pop
call
push
rol
add
not
pop
pop
push
add
pop
dec
jne
push
lea
push
push
push
push
call
add
mov
add
add
cld
add
add
mov
add
test
lods
mov
push
add
ficomps
add
add
add
mov
in
in
lcall
mov
add
push
push
sub
inc
inc
push
or
inc
add
shl
inc
sub
sub
sub
pop
not
pop
push
lea
pop
pushl
push
sub
pop
call
push
push
shl
pop
call
mov
push
push
shr
push
or
not
add
sub
sub
rol
pop
add
pop
push
push
push
push
call
les
out
mov
test
mov
add
add
in
mov
add
mov
imul
add
in
add
add
stos
add
xchg
add
add
jmp
add
in
add
cmpsb
add
add
in
lock
pushl
call
push
rol
lea
pop
lea
push
push
lea
pop
push
push
push
sub
shr
shr
pop
push
call
push
lea
push
push
push
push
push
push
push
push
push
call
add
lcall
add
mov
add
push
lret
bound
add
push
add
rol
enter
add
lcall
pushf
and
ljmp
cmp
inc
in
rcl
lds
into
incl
cmp
add
ror
sub
dec
pop
dec
xor
lea
pop
push
xor
inc
pop
pushl
push
add
pop
call
push
push
push
lea
push
lea
push
push
call
push
rolb
mov
fsubp
cmpb
add
add
add
mov
xchg
lcall
push
pop
mov
out
stc
mov
add
add
add
out
push
cld
outsl
repnz
lahf
std
scas
lcall
call
push
call
push
push
dec
dec
push
and
add
sub
sub
sub
lea
sub
pop
add
pop
push
lea
push
lea
push
lea
push
push
push
push
call
js
hlt
testl
add
fsts
aad
add
add
add
test
add
mov
ja
add
add
sar
testl
cmpb
sbb
call
push
push
push
push
lea
push
call
mov
add
lods
jne
pop
les
add
add
in
data16
add
add
add
add
add
xlat
icebp
add
jae
sub
pop
call
mov
push
push
lea
push
push
push
push
push
push
push
push
call
xchg
jle
add
add
add
ljmp
add
mov
add
movsb
mov
jecxz
add
data16
add
sub
pop
lea
push
push
not
dec
not
push
or
inc
add
dec
dec
sub
lea
shr
pop
ror
pop
push
push
call
imul
add
loopne
add
add
jmp
fildl
idivb
add
aad
mov
add
jns
add
push
stos
add
in
jne
jp
addl
fwait
xlat
out
add
stc
add
aad
push
add
into
pushf
in
add
lcall
jne
push
inc
add
pop
call
lea
push
push
push
lea
push
push
push
lea
push
push
push
push
call
add
add
add
lock
sti
testl
ret
mov
jne
pusha
sarl
fisubl
jge
add
in
cmc
mull
add
add
loope
adcl
mov
add
pop
push
push
push
lea
push
call
xchg
pushf
out
flds
add
int
add
mov
add
fcoml
xlat
push
enter
testl
loopne
filds
xchg
add
pop
add
xor
ret
gs
sarb
outsl
push
je
arpl
hlt
pop
push
push
push
ror
rol
ror
pop
pushl
push
push
dec
push
push
pop
add
sub
ror
pop
xor
sub
pop
push
lea
push
lea
push
push
push
push
lea
push
push
lea
push
lea
push
call
jmp
mov
xchg
xchg
add
mov
je
pushf
xlat
fldl
add
jnp
icebp
add
test
add
push
add
add
add
rolb
xchg
mov
lret
mov
add
int3
mov
in
pop
add
xchg
aad
add
jge
pop
jle
in
fcomps
push
push
push
push
push
push
push
call
stos
fs
add
pushf
add
add
add
add
mov
lock
mov
cli
add
add
ret
out
lds
pop
pop
add
mov
fs
add
sahf
insb
add
add
out
sub
pop
call
push
push
shr
inc
push
push
pop
add
add
sub
ror
sub
sub
rol
ror
pop
inc
pop
push
push
push
push
push
push
push
call
loopne
mov
add
lock
push
aad
roll
mov
in
mov
fs
in
mov
mov
add
rcll
iret
xchg
rolb
add
lcall
jne
push
sub
pop
call
push
lea
push
push
push
push
lea
push
lea
push
push
call
mov
add
into
cltd
add
add
cmc
les
mov
fwait
lret
mov
jbe
pop
data16
jecxz
std
push
mov
add
add
add
je
shl
sub
pop
push
push
sub
add
pop
call
push
push
shr
push
push
pop
add
not
ror
add
sub
rol
xor
not
ror
pop
xor
pop
push
inc
pop
pushl
push
lea
push
lea
push
call
push
push
add
add
rclb
loop
mov
ja
mov
xchg
mov
test
add
addr16
jb
jns
je
fists
call
sar
leave
push
lods
add
add
pop
lahf
imul
sub
pop
call
call
push
shr
ror
pop
jmp
push
dec
rol
pop
pushl
push
push
call
fiadds
filds
cmpsb
into
mov
ret
add
jecxz
outsl
xchg
loop
add
add
mov
clc
add
mov
jecxz
mov
jnp
add
lret
nop
scas
add
add
out
fidivl
addb
add
lret
mov
lods
xchg
int
loope
icebp
scas
mov
add
test
sub
pop
mov
push
sub
shr
sub
pop
jmp
push
push
rol
dec
add
push
or
inc
add
sub
sub
not
shr
pop
pop
push
shr
pop
pushl
push
push
push
lea
push
push
call
add
std
lret
mov
add
fadds
add
add
scas
testl
jb
testl
add
jno
add
xchg
sub
pop
call
push
lea
add
pop
push
push
inc
pop
call
push
push
add
sub
shr
push
push
pop
add
shl
shl
inc
sub
sub
shl
pop
ror
add
pop
push
push
push
push
push
push
call
roll
cmpsl
add
cwtl
mov
add
addl
xchg
mov
cmpsl
andb
in
add
xlat
movb
data16
orb
add
pop
pop
add
enter
add
fldl
xchg
mov
mov
mov
addl
add
repnz
pusha
testb
fisubl
in
call
call
push
push
push
push
push
call
xchg
loop
add
add
fstl
mov
fistpll
mov
add
nop
mov
jbe
pop
jmp
bound
add
add
add
add
add
pop
jge
vpcmov
add
mov
aad
push
add
arpl
test
add
mov
imul
movsb
bound
push
push
push
push
push
lea
push
lea
push
call
pop
lock
add
lcall
out
add
add
in
add
fisubrl
add
cwtl
push
insb
add
lcall
rclb
xchg
xlat
mov
out
push
push
push
push
push
lea
push
lea
push
call
add
add
add
jno
add
jns
add
xchg
lock
add
andl
mov
pop
stc
stos
test
bound
popa
jns
out
jle
mov
leave
push
push
push
lea
push
push
push
push
push
call
add
ja
sti
jns
mov
fildl
les
add
add
aam
add
jae
movsl
popa
jge
add
add
pop
incb
xchg
stos
add
mov
mov
fs
out
jne
pop
les
add
mov
mov
add
pop
push
ror
pop
pop
push
lea
push
push
push
push
call
add
stos
movsb
add
mov
add
push
fiadds
fidivl
lods
pop
add
mov
add
add
pushf
fdivr
add
lods
in
push
out
data16
add
pop
add
into
add
push
sub
sub
add
pop
xor
push
push
push
call
aad
add
ffreep
fldl
push
aad
out
add
add
in
push
mov
out
add
push
add
mov
movsb
imul
out
hlt
mov
aam
clc
add
add
mov
mov
insb
aad
roll
add
push
lea
push
push
push
push
push
push
push
lea
push
call
enter
stc
mov
jp
outsl
mov
jne
lods
add
add
add
call
fistpll
cmpsw
push
out
add
xchg
add
mov
stos
clc
add
jl
add
sahf
add
sub
pop
ret
leave
push
rol
dec
pop
ret
push
push
lea
push
push
push
push
push
push
push
call
lea
outsl
pushf
add
jb
bound
mov
stos
scas
add
mov
pop
loop
xchg
jle
nop
into
jno
mov
fcompl
mov
push
push
lea
push
push
push
lea
push
call
add
add
add
je
add
sahf
nop
cmpsl
add
cmpsb
add
les
add
mov
movsb
mov
mov
add
pop
cmpl
jne
push
dec
sub
rol
pop
mov
jmp
push
inc
inc
add
pop
mov
push
not
ror
pop
and
push
push
push
lea
push
lea
push
push
call
add
popf
add
test
roll
add
add
add
add
addb
add
mov
add
in
mov
add
push
rolb
in
call
xor
xor
push
push
push
lea
push
lea
push
push
push
push
push
push
call
add
mov
xchg
add
add
mov
testl
les
sahf
add
mov
test
add
movsb
cwtl
ret
into
add
rolb
int3
xchg
add
add
pop
add
test
lret
push
fwait
add
jns
add
addb
add
add
rolb
dec
call
rcrl
push
push
call
lret
push
mov
pop
add
out
movsb
mov
stc
add
mov
xchg
add
test
jnp
add
xchg
add
mov
stos
fucomip
shll
add
or
add
loope
pop
xchg
xchg
movsl
sub
pop
sub
push
push
push
push
push
push
call
popf
add
scas
push
jo
add
push
pop
mov
ja
sti
sahf
roll
mov
add
stc
out
jmp
sub
pop
jmp
push
sub
pop
sub
push
push
push
push
push
call
fcoms
pop
add
push
jl
add
lock
test
fcoms
je
add
fdivl
sub
pop
pushl
push
lea
push
push
push
lea
push
push
push
push
call
sahf
pop
add
add
out
add
add
nop
add
xchg
add
add
push
xchg
add
add
cld
add
add
pop
jp
sti
add
lds
roll
xchg
add
sub
pop
pop
push
push
lea
push
call
sar
loopne
add
icebp
add
popa
test
add
in
mov
nop
lea
in
scas
add
sub
pop
sub
cmp
jne
push
push
push
push
call
mov
mov
add
push
jge
add
xlat
add
addb
shrb
add
mov
mov
in
arpl
add
add
add
pushf
lock
mov
add
add
jmp
jae
add
lcall
lcall
enter
push
dec
pop
sub
push
shr
add
pop
mov
shr
push
sub
xor
pop
add
push
sub
inc
xor
pop
sub
push
lea
push
push
lea
push
lea
push
push
push
push
call
mov
add
add
lret
lret
js
mov
je
xchg
mov
popa
jp
add
add
mov
out
in
std
imul
add
call
pushf
mov
mov
xchg
into
pop
xchg
mov
lcall
xor
rol
pop
pop
shr
push
sub
pop
and
push
xor
sub
dec
pop
sub
cmp
jne
push
ror
pop
leave
push
push
lea
push
call
mov
mov
out
xchg
add
push
add
popa
fsubrl
mov
stos
add
add
std
add
add
scas
add
jecxz
movl
add
movsl
jmp
add
add
add
lcall
add
push
push
push
push
lea
push
push
call
enter
add
rcrl
add
shr
xchg
cmpsl
into
add
fcoml
mov
aad
jns
mov
add
iret
add
lcall
push
sub
pop
mov
push
inc
pop
add
push
xor
rol
shr
pop
push
push
inc
pop
push
push
push
push
lea
push
push
push
push
push
lea
push
push
call
data16
movsb
add
fldl
mov
add
add
pop
jge
xchg
scas
cwtl
ror
loope
mov
scas
cli
cmc
add
mov
push
add
add
int
push
add
add
push
lea
sub
pop
push
push
push
lea
push
call
add
mov
add
mov
mov
add
jle
jge
add
add
add
pop
jmp
add
add
in
add
in
movsl
out
enter
les
mov
test
sti
out
mov
add
lcall
pop
or
out
pop
sub
push
push
push
push
push
push
lea
push
lea
push
push
call
push
jne
add
mov
push
neg
out
jecxz
mov
jno
xchg
mov
out
rcll
add
fadds
addr16
jb
popa
add
add
shll
mov
add
imul
int3
ret
pop
xchg
sub
pop
mov
shr
push
sub
pop
add
mov
push
shr
lea
pop
add
mov
push
push
push
push
push
call
push
add
add
add
mov
add
call
pop
mov
add
rol
add
pop
insb
xchg
mov
add
jl
add
add
jge
mov
add
mov
sahf
add
aam
add
fldt
shl
add
add
les
lcall
jge
push
pop
xor
push
pop
mov
push
push
push
call
add
add
add
mov
mov
sahf
add
add
lret
add
add
add
test
in
in
hlt
lcall
loopne
push
inc
ror
not
rol
pop
rol
push
shr
ror
pop
rol
xor
push
shr
pop
inc
cmpb
jne
push
push
push
push
push
push
call
rclb
add
pop
add
arpl
add
fimull
add
outsl
nop
cld
mov
cmp
add
jecxz
ret
in
call
ss
push
push
push
push
push
lea
push
call
fdivrl
mov
add
mov
jae
add
add
fadds
roll
sahf
jbe
fidivs
mov
test
repnz
mov
in
call
cmp
je
push
push
push
lea
push
push
push
call
add
je
js
insb
movsb
xchg
into
add
add
push
pop
out
sti
add
add
je
aad
jo
movsl
loop
jno
xchg
jo
add
add
lea
faddl
rcrb
add
add
js
leave
mov
clc
fs
pop
add
cmpl
jne
push
lea
push
push
push
push
lea
push
push
push
call
add
test
movsb
push
mov
add
add
add
add
movsl
shll
add
leave
add
add
add
add
loope
sub
pop
xor
push
shr
sub
pop
pop
pop
push
push
call
mov
add
filds
add
add
mov
add
add
ljmp
data16
mov
mov
push
lcall
push
xor
pop
pop
pop
push
sub
add
sub
add
pop
leave
push
xor
pop
ret
push
xor
pop
mov
push
push
push
call
call
add
int
xchg
add
cli
ret
mov
test
mov
add
js
add
mov
loop
mov
push
add
lcall
push
or
out
mov
je
xor
cmc
pop
mov
push
push
sub
ror
pop
mulb
push
not
dec
pop
pop
call
push
push
lea
push
push
push
push
call
xchg
add
add
in
test
stos
int3
add
stc
shll
outsl
mov
movsl
push
add
add
sahf
into
push
adcb
add
jnp
add
add
push
cmpsb
arpl
and
add
add
pop
out
sti
movsl
lcall
loope
sub
pop
push
push
push
push
push
lea
push
push
push
lea
push
push
lea
push
call
pop
iret
add
add
add
add
frstor
movb
jmp
jmp
add
jp
add
xchg
clc
test
xchg
mov
movsb
jmp
add
add
fs
push
cmc
add
add
add
mov
mov
add
add
cltd
repnz
call
push
pop
xor
pop
push
ror
rol
rol
pop
pop
push
rol
shl
sub
pop
pop
pop
push
add
pop
pop
leave
push
lea
push
lea
push
push
push
push
push
push
push
lea
push
call
add
mov
in
add
scas
xchg
add
call
add
pop
testl
stc
add
push
std
push
mov
mov
lock
add
enter
add
add
push
fs
pop
add
xchg
and
mov
fs
pop
ret
push
push
push
lea
push
push
push
push
push
lea
push
call
jge
int3
xchg
add
fiaddl
xchg
mov
mov
add
add
lret
xchg
jns
mov
jns
add
add
jmp
add
add
mov
add
imul
sahf
fwait
add
test
lret
lcall
jns
add
loopne
mov
add
push
inc
shr
pop
push
push
ror
add
pop
push
push
push
lea
push
call
jns
std
int3
add
add
add
xchg
pop
mov
sti
ljmp
pop
add
test
rol
mov
push
push
add
iret
stc
push
pop
add
lcall
push
push
shr
ror
not
pop
mov
push
push
push
push
lea
push
push
push
lea
push
push
call
add
add
jge
popa
add
jl
add
fwait
mov
add
enter
push
sti
jne
xchg
roll
in
lods
jmp
add
sub
pop
pop
push
push
push
push
call
jne
aad
add
sahf
into
idivb
add
insb
xchg
les
sahf
leave
fiaddl
je
add
stc
fiaddl
xchg
cld
add
clc
popf
pop
mov
add
rol
add
add
int3
xchg
add
jp
pop
test
lock
lea
push
lea
push
lea
push
lea
push
push
push
call
add
stos
mov
jp
push
popa
js
cmpsl
add
out
aad
add
fisubl
sahf
add
add
add
clc
add
mov
jae
cwtl
push
cmpsb
in
ror
jmp
jns
mov
add
add
jecxz
adcb
add
add
sub
pop
sub
mov
push
add
sub
shl
add
pop
shr
push
shl
pop
add
push
add
pop
mov
add
push
sub
pop
pushl
popl
push
not
lea
ror
pop
mov
push
sub
inc
pop
add
push
push
lea
push
call
add
gs
fiadds
add
add
test
add
add
add
pop
add
xchg
lretw
add
pop
negb
add
jbe
add
add
sub
add
call
mov
in
mov
jns
add
add
in
hlt
lcall
notb
std
push
call
mov
scas
add
bound
roll
std
negl
add
add
add
xchg
bound
adcl
pop
add
in
data16
mov
add
sub
pop
lea
mov
push
not
shr
pop
add
push
sub
pop
xor
push
push
push
lea
push
push
push
push
push
call
lcall
ja
add
mov
add
push
mov
fadds
cltd
in
add
add
add
fldl
add
roll
test
mov
sub
pop
rol
push
push
push
push
lea
push
push
push
lea
push
call
add
pop
jb
xchg
xchg
lds
push
mov
hlt
add
xchg
pop
mov
add
hlt
jne
cmpsl
xchg
add
ja
add
mov
add
pushf
clc
add
flds
lret
add
out
test
push
pusha
mov
into
add
lcall
push
push
push
call
add
mov
test
movsb
add
add
push
scas
add
fidivs
push
fwait
add
std
fnstsw
add
xchg
mov
addr16
pop
nop
push
ror
ror
lea
pop
xor
push
push
push
push
push
push
push
push
push
push
call
addl
add
into
loope
jl
adc
lods
bound
jae
mov
test
add
add
add
jbe
mov
xchg
sub
pop
nop
push
lea
push
lea
push
push
push
push
call
scas
imul
pushf
add
add
addb
mov
fiaddl
mov
repnz
add
add
mov
mov
fildll
add
mov
add
add
add
loopne
mov
add
inc
push
dec
xor
inc
pop
nop
nop
push
push
push
push
push
call
loope
add
add
add
mov
add
add
add
add
test
bound
add
add
test
add
push
xchg
test
sbbl
add
imul
pop
hlt
lock
lock
mov
fwait
addr16
in
in
pop
cmpb
jne
push
lea
pop
add
push
push
push
lea
push
push
push
lea
push
push
call
imul
add
rolb
out
add
jecxz
add
add
add
jns
add
add
jns
jo
scas
add
add
cmc
jmp
addl
lea
stc
popl
add
int
pop
add
insb
add
test
jne
mov
add
nop
push
shr
inc
pop
cmp
je
push
push
lea
push
call
add
mov
jl
add
popf
ret
fldl
jae
add
add
mov
push
add
cwtl
add
mov
fldpi
add
mov
jecxz
les
add
movsl
jmp
add
test
rcl
je
call
xchg
add
lock
lcall
nop
push
push
push
push
push
lea
push
push
lea
push
push
call
pushf
xlat
out
add
icebp
lods
testl
stos
add
pop
add
push
add
add
out
jns
add
mov
add
sub
pop
inc
nop
push
push
lea
push
call
add
add
call
xchg
add
xchg
repnz
add
nop
add
test
jnp
lcall
in
loop
cmc
pop
mov
ret
fadds
rolb
out
pop
add
add
jp
add
add
add
push
mov
add
imul
in
hlt
pop
nop
cmp
jb
push
push
push
lea
push
lea
push
call
add
in
int3
std
sahf
add
scas
loop
lret
xchg
add
sti
add
cld
in
add
add
jno
xchg
add
in
pop
xor
push
push
push
push
lea
push
push
push
push
push
push
call
add
addb
stc
lock
outsl
add
cld
pop
pop
fiadds
add
add
data16
xor
pop
add
lcall
add
push
push
lea
push
push
push
call
mov
out
add
add
add
push
add
insb
xchg
iret
fbld
ljmp
push
xchg
scas
faddl
add
mov
add
aad
fldl
add
add
xchg
jmp
jae
pop
sub
pop
mov
add
push
push
push
lea
push
push
lea
push
push
call
fisubl
jmp
add
add
ja
add
add
pop
add
add
cmpsb
mov
in
addr16
jle
add
mov
arpl
int
jecxz
pushf
jno
aam
test
jge
add
add
cltd
add
popl
add
lcall
mov
jb
push
push
lea
push
push
lea
push
call
add
xchg
add
insb
outsl
leave
add
mov
fldenv
pop
lret
mov
add
mov
mov
scas
jo
add
pop
jno
cmc
add
add
std
add
add
icebp
add
add
add
mov
test
in
call
mov
push
push
lea
push
push
lea
push
push
push
push
push
call
stos
mov
mov
add
rcrl
rolb
loop
imul
add
add
fs
in
stos
stos
test
in
fcompl
rcll
iret
push
call
add
add
add
scas
mov
jecxz
mov
add
push
test
push
mov
pop
popa
jno
out
insb
add
add
js
add
add
add
aam
int
test
add
rcll
xchg
call
pop
ret
add
push
lahf
add
add
lock
lcall
dec
hlt
xor
push
lea
push
lea
push
lea
push
push
push
push
lea
push
push
call
jecxz
add
pop
pop
add
add
push
jge
out
push
add
popa
add
add
movsl
cmpsl
in
mov
mov
push
js
add
jge
mov
add
lret
push
fiadds
add
test
in
fcompl
dec
nop
add
es
popf
fisubrl
clc
scas
lds
lea
push
push
push
push
lea
push
push
call
leave
scas
add
add
add
push
out
add
mov
add
add
aad
jne
add
xchg
add
mov
add
icebp
mov
add
jecxz
add
add
add
mov
add
add
lcall
loope
push
push
push
lea
push
push
lea
push
lea
push
call
add
add
jae
sbb
clc
fistpll
movsb
jmp
add
add
add
push
add
cltd
add
add
add
pop
push
imul
jno
movsl
in
mov
mov
xchg
xbegin
roll
les
out
iret
fildll
in
lcall
dec
nop
add
pusha
xchg
push
pop
push
push
push
push
call
pop
jnp
add
add
cmpsl
pop
add
scas
add
pop
hlt
test
cltd
add
add
add
cmpb
iret
addl
add
add
loope
push
inc
add
sub
pop
xor
push
xor
ror
pop
shl
push
push
push
push
lea
push
push
push
push
call
imul
addl
pop
add
jo
add
in
push
ljmp
mov
add
cmpsb
add
mov
add
jo
mov
pop
ret
add
push
fadds
add
or
mov
push
push
push
push
lea
push
push
lea
push
push
push
push
call
stc
rcrl
add
mov
mov
mov
push
add
add
xchg
popf
lea
add
fisubl
add
lods
xchg
addb
add
cmc
xchg
mov
add
test
out
add
mov
mov
push
add
lcall
inc
hlt
push
pop
pop
push
push
push
lea
push
lea
push
call
out
popf
les
adcb
add
mov
in
add
outsl
jbe
int3
popl
jbe
pop
add
test
mov
loope
add
rolb
sahf
lock
cmpsl
mov
add
test
mov
fisttpll
cld
enter
mov
pop
add
sub
pop
pop
push
add
sub
not
pop
pop
pop
push
lea
push
push
push
push
call
jge
add
pop
add
fiaddl
aad
xchg
mov
add
add
mov
iret
push
add
jle
add
xchg
mov
mov
add
mov
add
mov
lcall
ret
push
push
push
push
push
call
push
cld
add
stc
pop
add
in
add
mov
mov
add
mov
icebp
add
cmpsb
in
add
int
add
mov
jp
in
in
lcall
mov
push
dec
sub
xor
pop
push
push
push
sub
xor
lea
rol
pop
push
push
push
lea
push
push
push
lea
push
lea
push
push
lea
push
push
call
in
add
bnd
ret
add
loopne
add
aad
add
add
ja
in
cli
fdivl
icebp
clc
incb
int
add
jge
pop
je
int
push
shr
hlt
xorl
movsb
add
cmpsl
add
cmpsb
pusha
push
popa
in
add
mov
dec
or
shl
pop
mov
mov
push
add
add
pop
test
je
push
lea
push
push
push
push
push
call
testb
in
faddl
sar
add
cwtl
add
add
add
add
in
pop
add
mov
add
test
add
push
add
add
test
mov
test
je
push
push
call
add
mov
add
xchg
or
movl
add
mov
add
loope
pusha
incb
fnstcw
pop
add
xchg
sub
pop
mov
push
add
inc
inc
sub
pop
mov
push
rol
add
pop
mov
push
sub
pop
inc
cmp
je
push
push
push
push
lea
push
call
add
pushf
sarl
hlt
add
mov
js
cwtl
xchg
loopne
add
pop
add
int
xlat
add
add
fisubs
stos
clc
faddl
in
lret
add
add
lcall
add
in
in
lcall
rorb
addl
add
inc
sbb
inc
shl
shl
pop
inc
push
ror
rol
xor
pop
cmp
je
test
jne
push
push
lea
push
push
push
call
sahf
rcr
pop
jmp
add
ja
mov
loop
add
add
mov
xchg
test
cmpsl
add
push
addl
scas
add
mov
add
push
xlat
mov
in
in
lcall
rcrb
pop
push
push
lea
push
lea
push
push
push
push
push
call
add
add
sarl
add
sti
pushf
out
add
testb
mov
into
js
addl
add
add
loopne
pop
push
inc
shr
lea
pop
pop
push
lea
push
push
push
lea
push
push
push
call
add
add
lock
mov
mov
add
stos
jns
jno
push
pop
fwait
mov
cmpsl
stos
push
data16
add
ret
test
jo
pop
int3
movsb
add
flds
lds
push
imul
mov
add
add
mov
jp
add
mov
lea
add
lcall
push
add
ror
pop
ret
push
push
push
lea
push
call
pop
add
mov
and
cli
jl
jae
add
mov
add
mov
test
in
add
lahf
addl
add
stos
push
jl
add
add
pop
jnp
add
pusha
add
add
sub
pop
mov
push
push
push
push
lea
push
push
push
push
call
movl
add
mov
lret
loopne
mov
add
pop
add
add
add
enter
movsb
add
add
add
add
repnz
add
lret
xchg
mov
pop
mov
add
push
int3
add
pushf
add
add
add
push
stos
add
sub
pop
inc
push
push
push
push
push
push
push
push
lea
push
lea
push
call
add
pop
insb
cld
mov
in
add
xchg
sbbl
mov
lcall
int3
les
xchg
add
jge
add
lcall
lock
lea
push
add
ror
pop
mov
push
inc
add
xor
sub
pop
test
je
mov
push
lea
push
push
lea
push
push
push
push
push
push
push
call
pusha
orl
arpl
add
add
mov
mov
push
add
add
add
add
in
add
jb
add
iret
add
fs
stos
sti
add
add
leave
movsl
add
add
add
fwait
cwtl
jecxz
fists
jle
add
sub
pop
add
push
inc
xor
add
shl
pop
cmp
jne
push
lea
push
lea
push
push
lea
push
push
push
push
push
push
call
add
jno
add
test
shll
roll
add
cmc
sbbb
mov
pop
fbstp
cwtl
add
add
lcall
inc
add
add
push
sub
pop
mov
push
push
push
call
add
rclb
add
add
jl
stc
mov
jo
in
add
aam
add
js
shrb
hlt
lcall
roll
push
push
push
push
call
add
rcr
fldl
stc
xchg
loopne
lcall
jle
lock
pusha
add
cld
js
loop
and
add
add
add
andl
imul
jecxz
mov
pop
add
gs
add
add
add
in
pop
cmp
je
jmp
push
push
push
push
lea
push
push
lea
push
push
push
call
add
add
fsubr
add
xchg
filds
mov
jmp
add
add
scas
add
popa
movsb
jne
cwtl
mov
rclb
js
push
push
call
rcl
adcb
vshufps
add
lret
add
fstps
jbe
fildl
jl
mov
add
outsl
add
rcr
mov
add
jnp
add
add
fs
pop
fists
add
mov
bound
add
in
lock
pop
pop
push
lea
not
not
lea
pop
pop
pop
push
push
push
call
movsl
int
addl
jne
cmc
pop
mov
add
cwtl
cli
add
out
add
add
stc
stos
add
test
in
jp
cld
fiaddl
add
out
add
add
add
sarb
lods
loop
clc
mov
xchg
sub
pop
leave
push
shl
pop
ret
lea
push
shl
pop
pop
pop
push
sub
pop
pop
push
shl
xor
rol
pop
pop
push
rol
pop
leave
ret
push
pop
mov
push
add
shr
pop
pop
pop
push
lea
push
push
push
push
push
call
add
roll
pop
movl
icebp
cmc
jp
push
les
aam
jecxz
xchg
add
xlat
add
imul
in
xchg
test
push
add
mov
xlat
mov
lcall
call
xor
xor
add
add
mov
add
add
add
add
ljmp
add
add
data16
add
add
mov
addr16
loope
in
hlt
pop
pop
push
lea
push
lea
push
push
push
call
add
jae
jnp
mov
mov
push
cltd
lods
fdivl
movsl
ljmp
add
xchg
in
pop
leave
push
lea
push
push
call
xchg
fwait
in
add
add
in
in
add
stc
outsl
mov
je
add
jmp
add
add
add
repnz
lds
xchg
pusha
jno
roll
test
out
lock
lcall
mov
push
pop
ret
xor
cmp
ds
cmp
xor
adc
and
adc
inc
cmp
rolb
cmp
xor
adc
jb
adc
mov
add
mov
icebp
aam
xchg
ret
nopl
push
sbb
cmc
shll
jb
out
ds
fsubrs
mov
dec
insb
ficoms
push
push
push
ret
xor
inc
xchg
outsl
fstpl
xchg
mov
push
cmp
dec
jno
push
cmc
loopne
or
xor
mov
xor
cmp
mov
jnp
icebp
cmp
fwait
stos
sub
mov
or
xlat
inc
pushf
aaa
add
rep
cmp
inc
dec
outsb
adc
ret
bound
dec
cmp
out
or
xor
jg
jno
and
jge
les
push
jnp
imul
dec
cmovle
push
jae
sub
and
leave
xlat
enter
in
cmp
aam
cmp
xchg
inc
inc
mov
xchg
cmp
lret
xchg
jno
xchg
repnz
popa
out
outsb
jb
out
xor
mov
lods
dec
lock
mull
fcoml
cmp
loop
cmp
adc
enter
dec
xchg
xor
out
repz
in
pop
aaa
shlb
sub
loop
cltd
int3
pop
lock
mov
jns
and
lahf
mov
lcall
xor
stc
pop
mov
pop
test
lea
js
loopne
push
cmp
aam
xor
cmpsl
sbb
lea
sub
out
mov
repz
cmc
lods
jmp
dec
test
jo
inc
push
test
jle
or
std
cmp
inc
loope
shl
sti
iret
test
sbbb
mov
push
stc
jp
and
push
sbb
adcb
lds
rcll
cmp
iret
mov
xor
in
cmp
or
adc
scas
out
add
cli
xchg
dec
cwtl
out
inc
cwtl
add
ret
pusha
insb
xchg
cmp
dec
sub
push
sbb
mov
cli
aas
inc
mov
sbb
cmc
mov
jo
test
pop
and
fsubs
std
dec
cltd
sub
jmp
ror
cmp
sub
xchg
lret
imul
add
iret
mov
push
cmp
mov
dec
shll
shll
xor
cli
int3
rolb
xor
push
and
xchg
dec
push
adcl
cld
cmpsl
pop
rorb
cwtl
cmc
lock
jnp
cld
cmp
insb
xchg
lahf
jle
pushf
cmpsl
lock
test
outsb
jl
dec
mov
arpl
scas
mov
inc
or
add
mov
into
and
or
stos
cmp
pop
call
adc
lret
mov
mov
or
xor
sbb
cmp
cmp
add
add
add
pop
fistl
inc
fprem1
push
push
sti
adc
daa
sahf
fadd
js
jb
cmp
fdivrl
push
push
mov
bound
push
jo
leave
bound
sub
add
mov
mov
dec
xor
divl
sub
shll
out
test
out
inc
les
loopne
int
mov
jg
pop
sub
and
jns
pop
dec
and
jmp
cmp
lahf
data16
test
and
nop
sahf
mov
dec
add
out
or
cmpsl
jmp
scas
mov
cld
loopne
jns
adc
push
fmull
int3
loop
add
sub
mov
pushl
jno
das
test
add
mov
fsubl
pop
xchg
out
sub
repz
mov
shlb
mov
dec
push
movsb
add
cmp
sub
dec
inc
mov
scas
pop
outsb
mov
popf
pop
adc
push
cmp
mov
int
mov
shll
aam
nop
int3
pop
xchg
inc
fld
rol
sub
fidivrs
outsl
test
imul
push
jbe
jp
adc
dec
dec
lea
cmp
push
fwait
adc
push
popa
and
movsl
xchg
lock
push
shrl
sbb
adc
cmp
jmp
in
mov
dec
test
nop
loope
ds
fstps
jle
add
in
pop
popf
mov
mov
pop
aam
mov
outsl
test
and
clc
sbb
adc
rorl
dec
cltd
inc
sbb
stos
shrb
mov
pusha
shll
stc
fwait
sbb
push
push
cs
push
xor
pop
sub
fstpt
push
test
push
loopne
cmpb
int3
mov
mov
cmp
xchg
imul
repz
add
loope
popf
and
sub
xchg
or
or
daa
adc
xchg
repz
and
add
std
xor
pop
lret
pop
push
push
sti
repnz
aam
or
mov
pop
xchg
xchg
and
into
lods
inc
fwait
test
xorl
adc
inc
in
adc
ret
mov
mov
movsl
mov
rcrl
nop
mov
inc
fs
push
stc
xor
pop
sbb
nop
cld
xor
pop
call
subl
icebp
push
aam
loope
dec
and
ljmp
cmpsb
xbegin
push
push
xor
roll
cmpsb
movsl
punpcklwd
pop
fimull
push
stos
push
stos
orb
fucom
jno
or
xchg
mov
out
cmpsl
js
mov
sbb
cmp
adc
divb
push
dec
ljmp
cwtl
stos
loopne
adc
insb
out
sbb
add
inc
mov
mov
xorb
js
dec
in
daa
sbb
xor
mov
mov
fstp
repz
std
fsubrs
repnz
mov
sbb
adc
std
push
rcr
fiadds
and
push
mov
xchg
cmp
mov
adcb
dec
popa
dec
out
jbe
xchg
es
fisubs
out
inc
fucomi
lods
dec
sbb
out
bound
add
or
mov
adc
out
inc
out
mov
fists
dec
push
sub
push
push
sub
clc
push
push
andb
daa
jns
movzwl
lea
daa
test
adcl
inc
and
mov
loop
xor
pop
dec
push
bound
sub
mov
or
lahf
lods
push
mov
cmp
add
out
jmp
adc
xchg
sahf
jl
inc
cmpsl
popf
ja
push
pop
lods
nop
test
pop
xor
cmp
imul
bound
cmp
imul
or
inc
inc
xlat
pop
ja
vpaddw
pop
mov
mov
lds
popf
fisubrl
add
ss
sbb
fisubl
inc
std
add
lock
lea
fsubr
sub
cmp
pop
pop
scas
cwtl
xor
jp
mov
push
jbe
xchg
js
sub
xor
xor
and
fistl
mov
test
ljmp
pop
xchg
mov
mov
ljmp
push
inc
ret
xor
cmpsb
subb
rcrl
jmp
dec
inc
aam
dec
adc
xor
std
xchg
adc
in
outsb
cmc
inc
out
aaa
mov
xchg
ret
push
dec
outsl
test
sbb
mov
mov
jg
repz
popa
cmp
sbb
daa
add
lods
outsb
arpl
xchg
sub
jnp
popf
mov
pop
mov
dec
aam
push
mov
mov
xor
and
jnp
daa
in
les
add
and
ljmp
or
push
aam
lock
push
xor
pop
add
stos
jecxz
pop
cmc
or
inc
daa
addr16
in
xor
stc
call
fsubl
insl
mov
dec
xor
xchg
out
xchg
loop
add
push
roll
outsb
dec
adc
das
inc
mov
inc
adc
lret
fwait
xchg
xchg
popa
daa
test
dec
movsl
out
mov
lds
mov
mov
cmpsl
mov
mov
jno
cmp
add
mov
out
aaa
ss
mov
mov
jbe
stos
outsb
enter
cmc
nop
fimull
mov
jb
sub
shll
mov
sub
xor
nop
repz
loope
ss
addl
cmpsl
daa
add
movsl
stos
fdivrl
in
push
mov
pop
mov
mov
push
mov
movl
push
in
jp
call
mov
sar
cmpsb
ja
sbb
setns
pusha
nop
into
scas
jae
cmc
inc
scas
jmp
xchg
shrb
test
in
or
out
pop
fsts
mov
add
mov
ret
outsb
jl
jge
inc
lcall
pop
add
std
addr16
cmp
xchg
jns
inc
dec
push
pop
clc
cmpsb
pop
xor
iret
mov
adc
mov
or
fs
iret
adc
add
movsb
xor
jg
and
and
ds
push
push
cmpsb
fdiv
out
addr16
shlb
jbe
iret
iret
add
lea
ja
aaa
dec
dec
jne,pt
int
call
jbe
clc
jae
sub
jge
enter
sbb
adc
or
jae
jle
add
jae
sub
jmp
repz
movsb
mov
adc
or
or
mov
mulb
rcrb
sbb
push
lock
daa
adc
or
loope
lahf
jae
out
push
mov
inc
xorl
mov
pusha
push
out
cltd
jmp
bound
hlt
xor
mul
pop
pop
imulb
inc
scas
jle
out
test
movsb
jp
clc
adcb
leave
hlt
in
cld
lret
dec
sbb
sbb
iret
mov
rcll
inc
movsb
fisttpl
or
jns
mov
and
dec
outsl
pop
icebp
cld
mov
stos
icebp
adc
adc
enter
in
xorb
gs
cmp
cli
or
push
jp
jg
push
xchg
fdivrs
les
sbb
and
in
cmp
rclb
in
mov
lret
adc
lahf
dec
dec
movsl
rorb
xchg
sub
pop
mov
and
mov
cs
addb
xchg
mov
and
adc
mov
adc
push
jb
jo
or
cmpsl
aaa
jg
aad
add
popf
jge
ret
cs
iret
inc
divb
inc
imul
je
and
jo
mov
xor
xor
sub
pop
gs
xor
inc
xchg
rorl
xchg
xor
sub
pop
or
aam
stc
addl
pop
pop
cs
incb
nop
sub
fsts
xchg
call
mov
jbe
and
mov
push
cmp
es
fmuls
push
jbe
cmc
sbb
icebp
add
or
rep
test
fadds
loop
mov
test
dec
mov
add
pop
mov
lret
inc
sbb
push
cltd
cltd
xchg
and
divl
push
cmc
xchg
dec
xlat
jae
dec
xor
pop
pop
dec
fmuls
arpl
inc
les
xchg
dec
mov
push
xchg
adc
lret
mov
xor
xchg
pushf
xor
and
mov
rorb
inc
daa
adc
add
xor
stc
sahf
fsubp
dec
xchg
lret
je
mov
and
adc
jbe
mov
pop
call
cmc
jo
sarb
ds
shrb
mov
cmp
jge
icebp
fs
pop
pop
fbstp
cmp
jge
xchg
mov
ljmp
inc
rolb
cmpsl
dec
push
dec
pushf
sti
out
jb
rcrl
mov
push
xor
mov
or
lahf
imul
cltd
push
fstpl
xchg
mov
xchg
xlat
jo
test
decl
int
lods
icebp
fildll
sarl
shll
sti
ds
push
ljmp
and
dec
sahf
lods
clc
out
hlt
jbe
mov
test
movsb
jmp
and
sbb
adc
pushl
push
xchg
js
pop
push
cmp
std
rclb
cmpsl
cmpsb
int3
cmpsl
fildll
xchg
ror
into
and
scas
in
in
hlt
mov
cmp
ja
or
cli
loopne
lock
sbb
pop
aaa
gs
shll
jo
out
sub
out
push
lahf
jno
ds
out
lcall
mov
stc
lahf
scas
inc
fwait
mov
int
pusha
push
cltd
inc
mov
mov
fwait
adc
mov
in
out
repz
movsb
movsl
add
mov
aas
cld
outsb
pop
clc
cld
rclb
sub
jge
push
xor
loop
and
loop
leave
lcall
cmp
lahf
push
mov
lcall
mov
sbb
lea
movsl
jb
outsl
adc
inc
inc
adc
sbbl
test
inc
lock
jb
fldenv
shlb
xchg
out
or
add
orl
arpl
adc
cmc
and
sub
in
fbstp
popfw
cmp
jb
pop
mov
or
outsl
notb
in
testb
stc
shll
sbb
push
sub
movsb
loopne
sub
out
cmpsb
ja
bound
xchg
fisubs
push
add
cmc
adc
sti
pop
rorl
adc
in
stos
cmp
ret
inc
out
or
loopne
out
xchg
pop
jmp
and
orb
push
or
dec
fldcw
les
stc
cmp
adc
fsubs
pop
inc
mov
pop
aas
pop
inc
iret
incl
sub
pusha
aam
push
add
or
mov
jae
jg
pushf
dec
dec
pop
frstor
jmp
pop
test
and
loop
sub
push
lcall
dec
push
cmpsl
cld
push
xchg
scas
bound
xchg
inc
int
das
mov
mov
out
push
pop
mov
dec
cld
mov
mov
test
ss
enter
sub
push
mov
movsb
out
rorl
fcomps
pusha
lret
add
xor
xchg
xchg
cltd
jne
aad
jp
mov
or
pop
jmp
out
pop
pop
test
mov
in
movsb
mov
aas
pop
lock
lods
shrl
pop
jne
or
sbb
dec
inc
mov
adc
test
cli
add
test
push
or
ds
test
xchg
push
cmp
cld
adc
mov
mov
test
and
add
dec
cmc
adc
and
lods
pop
loope
add
repz
add
sti
test
sub
jo
push
sahf
mov
mov
hlt
outsb
data16
mov
mov
mov
lahf
sbb
pop
sub
jne
pop
faddl
cltd
ja
add
push
push
mov
popl
fwait
repz
and
data16
xchg
mov
in
ja
dec
xor
std
stos
into
stos
stos
inc
inc
sahf
sbb
jo
fisttpll
dec
xor
out
loopne
sbb
or
push
inc
cmovl
fildll
scas
xor
pop
andl
xor
pop
cli
jecxz
rdmsr
sahf
in
scas
int
test
jp
int3
xchg
fadd
adc
jne
jp
fnstenv
sub
push
add
pop
ds
cmp
jnp
out
inc
xor
xor
sub
dec
or
mov
aaa
inc
pop
movsb
pop
dec
sbb
int
ss
jbe
sbb
xchg
lahf
in
lods
add
nop
push
jbe
cli
cmc
fnstcw
clc
jne
shl
mov
out
out
xor
cmp
jmp
adc
xor
inc
sub
movsb
dec
pop
inc
xchg
xchg
dec
mov
cmovns
loop
or
ja
cmp
notb
push
jnp
es
sub
mov
adc
pop
idivl
lods
insl
pop
mov
dec
dec
jno
or
push
push
je
jno
addr16
mov
int
test
sbb
and
sti
jbe
pop
pushf
scas
pop
loopne
int3
dec
out
cmp
sbb
vpshrdw
mov
add
sbb
pop
and
std
stos
popa
lahf
int
xor
mov
jnp
jp
ja
das
imul
xor
imul
lcall
xor
cwtl
pop
jbe
dec
push
or
repnz
mov
out
icebp
inc
pop
lea
inc
and
sbb
xor
xchg
sahf
add
sub
iret
dec
fnsave
jp
popf
adc
mov
jb
fldl
mov
lret
mov
mov
push
mov
push
adc
cld
sub
jp
mov
lds
cmpsb
and
push
daa
sub
imul
xchg
out
xor
and
mov
mov
xor
xor
jge
test
mov
in
push
xchg
add
sub
jge
mov
mov
scas
adc
sbb
je
aam
aaa
mov
in
pop
into
orb
cld
cmp
mov
mov
adc
add
iret
mov
or
push
loopne
xor
jns
mov
sti
xlat
adc
mov
sub
mov
xor
mov
pop
lret
out
mov
adc
sub
add
outsl
mov
jecxz
push
jnp
jg
add
mov
push
sbb
jle
xchg
dec
mov
out
add
xchg
adc
movsl
pusha
adc
mov
roll
adcl
mov
xor
cwtl
fcmovnbe
imul
jb
arpl
pop
scas
popf
mov
fnstenv
ds
jnp
fsubs
jns
ret
cli
jmp
mov
out
xchg
mov
inc
ss
cmc
pop
inc
push
scas
ficompl
jnp
fildll
xor
sbb
mov
outsb
mov
dec
es
scas
jmp
inc
lahf
mov
mov
xchg
aas
push
inc
ja
or
inc
sbb
jo
cli
pop
xchg
mov
scas
rcrl
fistpll
mov
jo
jne
sub
insl
stc
in
mov
and
jae
stos
push
dec
sahf
clc
pop
xor
dec
xor
mov
daa
and
adc
cli
ret
pop
xlat
mov
mov
ja
inc
gs
pop
pusha
inc
and
bnd
sbb
movsb
out
add
mov
rcl
in
jbe
push
inc
repz
push
and
fldl
ret
dec
xchg
fwait
mov
pop
mov
xchg
mov
aam
pop
push
add
add
hlt
push
mov
cs
jae
or
xor
in
in
push
test
sbb
sbb
pushf
roll
mov
xor
add
inc
pushf
push
jo
adc
ret
add
insl
cwtl
add
jg
or
mov
push
mov
outsb
clc
mov
push
push
movl
inc
scas
mov
pop
pushf
sub
jbe
aaa
inc
mov
clc
add
pop
and
cmpsl
xchg
lds
sbb
insl
cltd
cmp
gs
repnz
pop
outsl
fildll
ss
outsl
in
mov
sub
stos
add
test
fs
outsb
out
cmpb
je
push
sbb
mov
shl
shlb
popa
verr
sub
mov
add
sbb
inc
mov
dec
jmp
mov
lret
cld
inc
add
push
jne
ss
ds
mov
pop
jne
popaw
mov
add
lret
not
nop
pusha
lock
loop
sbb
cmc
cmp
cwtl
or
mov
gs
mov
fcompl
mov
cli
mov
pusha
pop
inc
rorb
pop
nop
mov
imul
scas
dec
in
jge
jmp
mov
and
popf
xor
pop
mov
ss
daa
inc
les
sub
and
daa
sbb
loop
push
dec
cmp
pop
in
movsl
sub
pushf
int3
fmuls
mov
or
adc
jmp
repz
int3
sub
rclb
adc
cld
popf
and
jnp
sbb
lahf
mov
inc
outsl
inc
in
les
rcll
fwait
mov
js
dec
adc
or
and
in
addr16
pop
loopne
sbb
cmpsb
ds
mov
rolb
push
fs
push
dec
or
push
mov
stos
push
outsl
nop
mov
or
pop
adc
cld
popf
jne
jecxz
repz
pop
cmpb
test
cmp
mov
sub
pop
dec
mov
sbb
lds
sahf
test
or
inc
push
xchg
or
and
mov
mov
mov
or
fwait
neg
fs
movsl
enter
ficoml
psubsw
adc
sub
push
lods
or
scas
out
dec
jns
jg,pt
insb
xlat
movsl
in
lahf
outsl
iret
or
idivb
mov
pusha
mov
or
sti
xor
jne
in
inc
cmp
aam
cmp
or
inc
fbstp
mov
out
rcrb
xchg
cmp
lods
add
mov
andb
jp
jo
xchg
mov
repnz
inc
arpl
cmpsl
jg
mov
aam
or
mov
inc
imul
test
iret
insl
xor
iret
jae
mov
or
cmp
and
lods
les
mov
xlat
mov
push
pusha
jo
outsl
xchg
jle
xchg
mov
cmp
cpuid
pop
pop
fisubl
push
sahf
cmp
xor
pop
dec
or
jne
jns
add
mov
jp
test
cltd
ds
outsl
movsl
xor
ja
jnp
mov
or
xor
adc
mov
imul
jbe
push
xor
add
into
enter
std
cli
aaa
rcll
xor
rcr
dec
fimull
cmp
dec
outsb
mov
mov
ret
dec
sbb
leave
aas
mov
rclb
jae
or
dec
mov
adc
mov
test
out
stc
lods
sbb
mov
ja
sbb
cmp
xchg
xor
dec
cmpsb
or
ja
std
das
push
mov
jne
inc
stc
test
mov
in
iret
xor
push
jns
in
pop
fidivl
rcl
mov
imul
in
xchg
sti
jle
jp
xchg
inc
hlt
call
jnp
fnstenv
int
lea
sub
aaa
push
loopne
jmp
xor
lods
in
lock
mov
push
mov
loop
aaa
mulb
lock
mov
cmpsl
leave
xor
and
movsl
mov
in
dec
dec
xchg
js
or
and
leave
mov
pop
push
xor
inc
test
xor
pop
cwtl
jae
sub
sbbb
lret
pop
pop
scas
cwtl
xor
shlb
insl
push
sbb
call
and
inc
dec
mov
lahf
xchg
imul
enter
scas
jb
jle
jle
mov
push
mov
insb
icebp
call
in
push
mov
mov
xchg
negb
add
cmova
push
sbb
mov
adc
xor
adc
dec
mov
cmp
xorb
ds
shlb
xchg
loop
addr16
mov
jb
xchg
xchg
clc
andl
ret
add
ljmp
mov
in
jne
mov
repz
adc
in
arpl
int
ficomps
fsubrp
and
and
jbe
sub
mov
jb
out
and
jge
out
or
enter
rolb
dec
cmp
xor
xor
lret
mov
cmp
imul
jnp
mov
mov
or
push
xchg
jmp
xchg
xchg
push
push
std
andnps
sub
add
dec
out
inc
daa
xchg
in
das
adc
push
sti
sbbl
push
sub
pop
movsb
mov
xchg
dec
call
int3
and
push
lods
int3
stos
xor
jge
pop
rolb
pop
xor
and
push
pop
xchg
mov
and
fcoms
cmc
push
inc
test
xchg
rorb
imul
fisttpll
add
out
jl
cld
fldl
inc
pusha
sbb
pop
add
test
bnd
mov
jge
insl
jns
inc
mov
sti
jmp
insl
xchg
lock
dec
sbb
rcl
xor
callw
mov
xchg
stc
mov
jg
rcrl
push
or
cltd
lahf
sti
cmp
movsl
push
inc
and
jle
push
leave
test
add
or
jno
mov
ja
rclb
sbb
mov
jb
pop
out
inc
pop
loope
sbb
test
lock
jle
ret
fidivrs
outsl
test
or
add
xor
pop
insl
notl
sbbb
les
jl
ret
je
sbb
ret
inc
stc
and
pop
andb
or
adc
mov
mov
bound
js
mov
movsl
sahf
dec
jmp
rol
in
mov
or
loop
lret
notl
and
and
pop
pop
out
aad
dec
lcall
mov
imul
subb
mov
aas
imul
jp
stos
xchg
add
dec
jecxz
dec
lcall
add
nop
xor
inc
cmp
dec
pop
cmp
jns
cmp
subl
fcmovb
jl
arpl
std
ror
sbb
jno
mov
into
cmp
inc
jecxz
leave
push
push
pop
enter
xlat
xchg
sbbb
jle
fnstcw
push
or
xchg
fcmove
test
sub
cli
pop
xchg
jmp
cmp
jle
flds
xor
clc
lods
adc
mov
dec
dec
leave
sub
imul
xchg
sub
xchg
push
sti
cs
in
xchg
xor
inc
loope
lahf
mov
jg
fcmove
add
mov
cwtl
insb
jle
mov
and
rclb
outsb
jne
or
sbb
dec
enter
lds
adc
gs
fwait
adc
inc
push
cs
shr
ss
andb
cmp
push
lea
aas
or
sub
pop
cmpsl
or
and
jge
push
and
adc
imul
xor
in
push
in
mov
fs
aad
jo
jbe
andb
in
add
jg
rorl
jbe
repnz
pop
fidivrl
adc
inc
dec
jne
xor
stc
mov
inc
das
loop
jmp
pop
push
imul
xor
adc
mov
loop
sub
sbb
and
mov
insb
sub
pop
in
mov
daa
cmp
sbb
mov
xchg
sub
mov
jl
insl
fidivs
mov
xor
xor
adc
das
aad
jne
mov
int3
xor
mov
mov
cmpb
lds
clc
jbe
iret
bound
dec
add
jbe
jl
inc
pop
or
mov
add
in
pushf
neg
and
std
and
int3
or
sbb
inc
into
fdivrl
arpl
imul
push
daa
jne
cwtl
ud2
dec
test
jo
aaa
out
jge
pop
sbb
dec
mov
sub
pop
sub
and
loopne
mov
repz
aam
loopne
loop
cwtl
stc
loopne
adc
push
sahf
incl
and
test
stc
scas
int3
int
or
add
in
js
sbb
orl
xlat
sbb
loope
mov
pop
jp
cwtl
push
xor
pop
jne
pop
pop
cmp
jne
and
xchg
adc
cmpsb
pop
jp
or
push
mov
push
out
adc
xor
xchg
ljmp
mov
xchg
lcall
mov
pop
icebp
inc
lods
or
jp
cmp
ds
mov
sub
mov
mov
inc
test
pop
repz
adc
xor
push
ds
pop
stos
cs
sahf
mov
outsb
adc
mov
adc
inc
mov
push
lods
cmpsb
mov
int3
test
sbb
add
xlat
andl
jo
daa
mov
insl
mov
mov
jl
mov
fstl
jns
sub
pop
push
inc
stos
outsb
fs
fldcw
pop
aam
xchg
fstl
sbb
jb
mov
sbbl
in
xor
mov
cli
popa
jnp
addl
push
mov
sub
test
adc
dec
fnclex
in
mov
decl
ret
xor
jno
push
jns
xchg
stos
jecxz
cmpsb
push
icebp
fs
jno
inc
call
cmp
call
ljmp
xor
cmp
mov
aad
shll
inc
mull
rclb
cmp
xor
andl
in
xchg
dec
add
fdivrl
and
sub
jo
ret
jno
or
ret
mov
sti
pop
ret
cwtl
add
and
out
xor
sbb
je
fnstsw
mov
xchg
xchg
xchg
inc
or
xchg
testb
enter
cmp
mov
insb
jnp
mov
or
incl
xor
mov
sbb
dec
ret
ss
fsubrl
mov
cs
aaa
cmp
and
sbb
jbe
cmpsl
aas
aas
dec
std
push
mov
sbb
inc
mov
imul
sub
sbb
xor
cmp
lods
bound
out
out
pop
pop
push
add
xchg
push
push
pop
xor
dec
jg
sti
inc
mov
pop
movsb
test
or
jne
mov
xlat
call
jle
mov
jnp
aaa
incb
cmp
sbb
or
push
adc
jae
out
mov
stc
stos
rcrb
jp
fistps
inc
cwtl
sbb
adc
sub
inc
add
adc
and
je
push
icebp
jbe
into
add
loope
xor
loope
mov
add
cld
pushf
addb
popf
daa
inc
andb
jecxz
cmp
or
fadd
stos
daa
inc
les
push
arpl
mov
arpl
fdivp
cmp
fadd
lds
and
stos
je
outsb
jge
imull
cmp
mov
mov
and
add
js
test
and
cld
lret
push
movsb
cmp
xchg
rcll
lahf
and
bound
fdivl
cltd
sbb
mov
sub
mov
in
xchg
fimull
jg
cmp
in
lcall
inc
lods
push
fcompl
push
loop
loop
sti
arpl
add
jne
jmp
fnstsw
adcb
or
cmp
lcall
sub
ficompl
jecxz
dec
sahf
cli
scas
jp
push
mov
cwtl
test
sti
pop
ss
mov
faddl
lret
jne
xchg
fwait
idivl
fstpt
mov
mov
mov
add
shll
mov
push
stc
cwtl
push
es
cmp
sub
jbe
ljmp
adc
dec
ss
cmpsl
aas
rcrl
dec
sti
or
sub
push
ss
dec
fstpl
push
daa
aaa
movsl
fistpl
add
jo
ja
push
xchg
jmp
hlt
mov
imul
cmp
inc
sbb
jo
out
inc
fmuls
fsts
jmp
sbb
and
jg
sarl
je
pop
mov
out
jp
mov
sub
cld
and
add
int3
lcall
test
xchg
dec
or
jbe
in
aas
dec
and
jl
in
sub
setl
mov
mov
xor
push
cli
jnp
push
sbb
out
scas
fiaddl
jecxz
mov
aaa
lret
dec
xchg
add
loopne
lahf
adc
fildll
js
out
inc
and
push
and
xor
xor
or
pop
mov
popf
icebp
cld
int3
js
jmp
mov
call
fiaddl
sbb
mov
imul
inc
mov
stos
or
arpl
test
sub
mov
xchg
fildl
call
mov
pop
dec
dec
cmpsb
daa
add
jp
hlt
mov
xor
and
test
mov
or
out
xor
jl
jb
arpl
cmpsb
test
pop
in
cmp
push
mov
out
mov
jnp
mov
mov
hlt
out
inc
or
sbb
sti
mov
jmp
add
push
rclb
lods
xor
adc
outsl
inc
xchg
loop
stos
popa
cwtl
scas
lret
mov
mov
adc
add
test
mov
xchg
pop
push
hlt
loope
ja
bound
and
stos
sub
fldl
divl
push
rcrl
push
xor
xchg
das
testb
test
jb
psrlq
cmc
jne
ds
xchg
dec
ljmp
or
xchg
jo
xlat
or
adc
addr16
das
cmp
jmp
fs
cmpsl
and
dec
enter
add
mov
mov
and
out
xorb
popl
rcrb
lds
add
cli
aas
in
jmp
stos
pop
in
jae
sahf
inc
xchg
push
in
stos
into
mov
jp
leave
daa
loopne
test
adc
pop
sbb
mov
xor
pop
pop
pop
ret
xchg
mov
loope
or
push
sbb
leave
push
or
scas
pusha
pop
fistpll
mov
mov
lcall
xchg
int3
mov
lea
jp,pt
jns
sub
lcall
nop
jo
add
aam
call
sub
xchg
jge
inc
xchg
leave
adcb
sbbb
mov
lcall
out
stc
add
repz
lods
sub
push
loope,pt
mov
ss
ds
das
fadds
cwtl
sub
hlt
sub
push
addr16
daa
add
lret
pop
push
lahf
lahf
xchg
sarl
xchg
enter
ret
mov
xor
cmpsl
xlat
adc
mov
nop
inc
xchg
inc
repnz
xchg
or
mov
mov
xchg
push
shlb
icebp
popa
les
cmp
adc
jecxz
mov
lds
repz
cmp
sub
std
pop
jmp
aad
pop
mov
jl
test
cmc
inc
mov
aas
sbb
mov
or
cmp
stos
outsb
dec
pop
mov
mov
addr16
pop
push
pop
in
mov
ja
lods
and
mov
sub
xor
movsb
push
xor
js
cmp
pushf
in
sbb
sbb
out
jle
fbld
pop
int3
xchg
adc
loopne
fcoms
pushf
xlat
or
jno
data16
xor
or
test
xor
add
xor
out
adc
sbb
ror
shrl
mov
and
insl
test
das
call
iret
sbb
aas
gs
dec
push
std
hlt
imul
cld
mov
sbb
divb
sbb
call
clc
les
push
xor
and
cmpsb
mov
xor
mov
adc
add
repnz
aam
lret
cmp
and
mov
ja
in
push
or
pop
shrb
mov
jecxz
mov
adc
push
and
or
push
outsl
cmp
aam
sarl
clc
jecxz
dec
mov
inc
hlt
outsb
dec
clc
dec
int
jbe
fnsave
mov
int3
mov
mov
pusha
scas
popf
data16
mov
pop
or
data16
mov
movsb
aas
or
fs
pop
enter
and
das
mov
adc
fdivl
lods
sets
add
mov
das
inc
xor
pop
add
sub
sti
jne
mov
pusha
orb
fldcw
inc
and
mov
push
stos
dec
mov
daa
dec
dec
fdivs
mov
or
adc
imul
pop
and
stc
or
lcall
mov
push
sub
xchg
sbb
or
cwtl
adc
or
jae
fmull
call
inc
cli
and
dec
loopne
push
or
jb
push
mov
xchg
sbb
add
dec
js
rcr
ds
nop
es
cmp
into
mov
inc
or
jmp
sub
in
cmp
sub
xor
sbb
dec
adc
cmc
int
or
xor
push
push
jp
les
mov
push
loop
sub
cwtl
jne
adc
enter
fdecstp
mov
pop
out
jnp
adc
or
mov
cmc
xor
es
jle
test
inc
mov
dec
aas
xchg
adc
pop
cvtps2pd
shlb
adc
enter
int
push
call
sbb
add
hlt
dec
add
jnp
sahf
push
pop
bound
test
hlt
sbb
aad
nop
clc
dec
add
mov
xlat
jbe
mov
push
sbb
xchg
movsl
or
dec
out
jbe
push
mov
sbb
adc
cmp
jmp
xchg
je
push
orl
in
push
cltd
dec
cmp
out
xchg
dec
cmpsl
pop
or
ds
jo
push
mov
das
dec
xchg
fdivs
shll
dec
std
incb
shrd
mov
xor
mov
aaa
icebp
push
jbe
pop
leave
frstor
mov
stos
dec
repz
movsb
imul
jge
add
stc
rcrl
out
push
icebp
add
pop
mov
push
jp
mov
test
mov
leave
into
arpl
sub
aam
xchg
cmp
ficompl
xchg
or
insl
jecxz
xor
iret
mov
lods
adc
call
or
ret
mov
jg
ret
push
jne
lea
pop
pop
sub
jno
subl
and
in
das
add
test
mov
mov
push
scas
lahf
lret
dec
data16
popa
dec
std
pusha
mov
aad
sub
cmpb
xchg
xor
jecxz
cmp
dec
and
and
mov
mov
and
lods
mov
sub
xchg
xchg
cmp
and
in
sbb
ljmp
fisubrs
arpl
cwtl
jg
pop
add
aas
cmpb
xchg
and
mov
out
mov
addr16
cwtl
adc
bound
sub
js
arpl
jae
aas
fwait
js
insb
push
ja
ret
add
int3
leave
jnp
pusha
dec
stos
fnstenv
clc
int3
lret
sbb
clc
mov
cmpsl
dec
dec
push
fdivr
shll
mov
lret
or
daa
popa
mov
push
jg
mov
fdivs
loopne
fldenv
adc
loopne
ror
rcl
sbb
lods
clc
mov
data16
addl
dec
sub
out
adc
sub
mov
mov
cmpsl
clc
or
sub
mov
add
add
je
into
push
movsb
lds
das
fwait
addr16
xchg
ja
or
pushf
mov
js
inc
adc
xor
loopne
sub
ja
push
pop
mov
push
add
mov
mov
hlt
mov
lea
lods
int3
dec
mov
repz
inc
xchg
aaa
bound
sub
icebp
push
popf
jecxz
cmp
push
aas
rol
mov
fs
repz
xor
addl
fcoms
outsb
mov
dec
int
outsl
jb
xor
mov
xor
xchg
pop
int3
int
stos
mul
imul
cli
hlt
inc
and
mov
add
mul
or
mov
push
push
cmp
shlb
cmpsl
in
push
roll
jg
cld
xchg
cmp
mov
roll
sub
shrb
les
fwait
pop
out
ds
jno
inc
sub
dec
fwait
push
pop
jecxz
cmp
js
mov
cmpsl
cmpsb
movsl
fsubl
in
lcall
push
or
notl
push
mov
pop
sub
std
cmpsl
sub
mov
xchg
cmp
fsubs
inc
hlt
fs
call
out
adc
roll
fimull
aas
xor
cmp
xor
scas
aas
dec
or
dec
inc
lret
test
mov
mov
jbe
clc
dec
or
in
pop
add
push
mov
je
sub
daa
jne
lea
data16
pop
jg
aaa
pop
push
cmp
xlat
add
push
imul
cmc
mov
jge
lret
push
loop
ret
or
add
in
push
mulb
lret
cmpb
ja
dec
pop
dec
in
loopne
mov
sbb
sub
out
imul
or
and
cmp
arpl
cmpsb
push
mov
push
mov
aad
out
mov
xor
add
cmp
adc
push
lods
nop
cltd
push
fcmovnu
insl
xor
fucomi
stos
sbb
fsub
sar
jno
into
popf
push
test
mov
les
fdivl
adc
out
or
fisubl
jecxz
ficoms
pop
cmpsl
mov
outsl
xchg
jecxz
sarb
mov
ljmp
lcall
ret
shll
add
mov
push
stos
or
jo
dec
pop
adc
mov
in
icebp
add
cmp
push
mov
test
add
loop
mov
pop
add
or
and
jl
rcl
mov
jne
mov
test
dec
popf
outsl
clc
test
enter
xchg
adc
mov
and
je
inc
or
or
aas
mov
out
add
cmp
ret
call
push
je
jl
xchg
stc
cmp
lods
ret
cmc
movsl
fdivrl
cld
scas
dec
jle
out
aaa
pop
adc
xorl
test
gs
jns
add
pop
out
insl
pop
jg
and
sub
rcll
jecxz
out
push
out
jae
or
push
fstl
in
mov
jmp
xor
mov
ljmp
mov
pop
into
sub
adc
loopne
subb
or
adc
inc
mov
fwait
mov
dec
pop
data16
lahf
inc
std
jns
loop
js
sbbb
or
pusha
outsl
test
mov
xchg
mov
je
jbe
xchg
scas
in
or
xchg
mov
inc
inc
cmp
out
shll
lods
push
push
jg
inc
push
jp
shl
add
jg
adc
add
or
push
sub
addr16
imul
aaa
fldenv
and
jne
pop
cmp
cld
test
jno
dec
inc
jae
in
adc
mov
add
ror
sbb
pusha
out
jns
mov
fwait
push
pusha
jbe
mov
fdivrs
fst
push
rcll
push
xor
mov
lods
jl
push
scas
fbstp
sbb
pop
imul
mov
shll
jae
push
pop
mov
or
fnstcw
cmpsb
mov
jmp
push
pop
cmp
push
rcrb
mov
or
cmp
int3
arpl
jecxz
and
insb
clc
add
inc
rorl
mov
push
js
and
arpl
cwtl
sub
push
mov
and
ja
sbbl
les
cmp
orb
xchg
ds
sbb
dec
sub
mov
push
pop
push
add
mov
adc
sub
orb
ret
push
ror
sbb
inc
pop
pop
adc
fs
loope
ret
lds
xor
scas
lods
dec
cmpsl
in
xchg
scas
mov
loop
mov
outsl
ja
xchg
mov
or
shr
out
sub
sbb
int3
pop
pop
cmp
push
mov
sub
jb
sbb
inc
pop
in
jo
iret
sub
or
cltd
and
xchg
nop
pop
or
jns
aaa
mov
jns
jns
or
xchg
arpl
mov
out
out
pop
seta
push
or
fstpt
sub
and
mov
into
movb
out
cmp
sarb
add
adc
clc
lret
xor
pop
add
cmp
cmpsl
popf
inc
jne
movsl
xor
aas
mov
ja
movsb
mov
repnz
fisubrl
xor
mov
sti
mov
mov
popa
in
rcrb
mov
jl
mov
jle
push
add
mov
in
pusha
pop
mov
and
mov
push
orb
fdivl
dec
dec
push
test
sub
pop
out
lret
aaa
push
lcall
jp
pusha
cmpsb
les
clc
sti
call
jmp
andb
mov
pop
sbb
shll
dec
repz
push
in
mov
push
jns
mov
rorl
add
add
hlt
lods
lock
test
aas
add
sub
jne
sbb
lret
outsl
or
inc
popa
and
div
es
cli
ret
stos
lds
jecxz
test
fdivl
pop
jmp
pop
adc
sub
xor
loopne
idivb
push
add
jge
inc
mov
mov
jne
dec
mov
mov
pop
rcrb
fnstsw
inc
movsb
popa
mov
outsb
outsl
iret
mov
into
repnz
jne
sbb
call
std
mov
mov
jl
xchg
mov
mov
push
enter
fsubrs
and
ror
add
sbb
fisttpll
ret
test
pop
and
mov
push
inc
sbb
adc
adc
lret
imull
pusha
rclb
dec
leave
loope
sub
into
repz
or
jns
pop
jecxz
push
inc
sbb
mov
inc
stos
call
sub
loopne
or
sub
cwtl
adc
add
jae
mov
in
push
loopne
loope
pusha
aad
push
cld
popf
mov
addl
mov
xchg
dec
xchg
or
xchg
xor
jne
pop
orl
or
clc
lods
sti
repnz
loop
adcb
xchg
lea
in
das
sbbl
imul
arpl
fs
insb
das
push
pop
sub
jae
loop
and
hlt
imul
aam
dec
call
cmc
cs
adc
flds
call
sti
mov
aas
out
into
add
add
xor
scas
loope
cs
insb
stc
cwtl
or
mov
in
nop
xor
jp
xchg
gs
jl
iret
test
xchg
imul
pop
cs
mov
add
mov
inc
inc
arpl
in
ss
mov
lret
jne
out
xchg
rol
gs
daa
aad
jle
push
push
lods
inc
xchg
idiv
mov
inc
mov
fwait
jge
xor
xchg
lods
jne
rcr
push
int
jae
dec
adcl
add
dec
dec
push
hlt
cwtl
jae
aad
mov
push
pop
cld
dec
add
popl
movsb
sub
mov
sti
test
adc
leave
pop
aas
ss
addr16
add
inc
and
jbe
xor
inc
adcl
xchg
loopne
cltd
sbb
push
cmpb
test
push
sahf
jge
scas
add
lods
ss
lods
repnz
xor
dec
push
mov
mov
aas
cmpsb
outsb
loope
add
push
in
mov
pusha
aaa
cmp
add
add
xchg
cmp
fstps
push
and
adc
scas
inc
sub
daa
insl
lea
outsb
jnp
arpl
inc
loop
aad
fisubs
popf
ds
fwait
out
mov
mov
pop
out
xor
fldenv
xor
scas
pop
xlat
and
mov
je
arpl
popa
fidivs
cmp
and
clc
jg
adc
hlt
cmp
jbe
stos
mov
mov
outsb
inc
or
push
mov
fdivrp
dec
mov
push
pop
xchg
dec
dec
adc
jb
nop
into
push
fisubrs
psrlw
or
sbb
lea
les
mov
dec
xchg
mov
leave
add
fcomp
bound
push
mov
xor
iret
inc
mov
stos
push
sbbl
and
cmpsl
or
push
add
fdivrp
out
nop
insb
inc
mov
mov
aaa
pusha
in
push
cmpsb
xchg
outsl
inc
jmp
pop
fsts
cmp
shll
mov
cmp
mov
mov
add
push
fstpt
andb
jle
or
out
mov
sbb
inc
ja
mov
inc
dec
aad
lret
or
leave
mov
imul
jbe
mov
mov
cmpsb
xor
mov
cmpsb
fcomps
popa
movsl
push
shl
and
xchg
mov
lahf
aaa
cmpsb
lds
cmpsb
int3
test
adc
jle
xchg
push
in
mov
fisttpl
jg
push
pop
rcll
mov
das
dec
mov
dec
lret
cmp
jae
add
adc
arpl
cmc
fldt
lods
mov
mov
pop
icebp
int3
fadd
mov
pop
popa
add
push
adc
cmpsl
popf
lods
xor
les
cmovs
cltd
andl
xor
cmp
cmp
dec
adc
and
int3
sbb
mov
movsl
jg
jg
dec
dec
mov
std
or
pop
lock
pop
push
pop
inc
mov
sub
push
cwtl
clc
leave
pop
and
dec
mov
stos
ja
in
jl
outsb
xor
xor
push
mov
add
cmp
aam
push
in
mov
mov
and
in
push
push
nop
ret
andl
or
test
es
out
jne
cmp
inc
and
aaa
or
pop
repnz
packuswb
imul
aam
lods
ds
scas
pop
mov
jne
cmpsl
jne
pop
dec
push
je
mov
adc
cmp
repnz
daa
jl
daa
jae
add
dec
lds
mov
adc
mov
xchg
xor
cmovle
aaa
flds
leave
js
jbe
mov
inc
jge
sbb
lcall
push
jo
movsl
jmp
pop
jmp
jmp
shrb
pop
mov
and
ss
sbb
mov
xchg
cli
lock
icebp
push
jg
clc
adc
fmul
lea
lcall
push
mov
mov
mov
jp
jo
daa
shlb
stc
outsb
bound
jle
cltd
rcll
ja
es
push
cld
std
loop
cmp
sbbl
jge
sub
push
jns
out
sbbb
sub
sbb
ret
and
sbb
insb
ss
lock
gs
pusha
mov
xor
cwtl
pop
negl
mov
movsb
nop
xorb
and
inc
adc
xor
sub
pusha
and
bound
jle
int
mov
mov
inc
jl
testl
call
testl
stos
stc
mov
mov
lret
pop
das
jno
leave
jo
shll
sbbl
lret
xor
sub
es
jne
pop
ljmp
pop
imulb
in
rorb
cmp
push
jg
push
mov
shrl
rorl
cmp
hlt
adc
xchg
test
fistpl
adcl
stc
dec
add
cli
pop
mov
imul
aaa
pop
aas
cs
jo
adc
cwtl
test
push
into
mov
inc
scas
mov
cmp
lock
mov
popf
stos
mov
jle
lods
inc
lds
jno
jg
inc
jg
pop
rcrb
push
shl
push
dec
dec
add
std
enter
pop
fdivrl
dec
imulb
add
or
or
sub
pop
fwait
cld
cmp
adc
and
sbb
js
or
mull
or
notb
lret
mov
jmp
outsl
xchg
cmp
subb
jl
xchg
clc
mov
not
xchg
xchg
xchg
repnz
int
xchg
into
sarl
test
shl
adc
pusha
cmp
xchg
sbb
out
jle
sub
xchg
ss
dec
fidivs
mov
pop
push
sarl
pop
iret
in
js
outsl
lahf
cmc
mov
inc
sbb
push
addr16
out
hlt
sbb
vpor
push
fstp
ret
fldenv
test
cmovns
pop
in
add
pcmpgtd
shll
xor
int
mov
push
cs
jmp
aaa
adc
mov
aaa
inc
mov
daa
xor
pushl
ljmp
lcall
dec
rolb
ss
negl
mov
fld
loopne,pt
dec
mov
mov
sub
cmp
js
arpl
and
or
std
addr16
sub
pop
test
mov
dec
sbb
fsub
jle
xchg
pcmpgtb
std
xor
sbb
xchg
cltd
ja
pusha
jge
lcall
push
repnz
notb
lcall
movl
and
pop
mov
dec
mov
clc
xor
pop
sub
clc
mov
lahf
mov
orb
and
jnp
mov
xchg
in
cmp
out
daa
add
sub
in
nop
call
movsl
jmp
jp
bound
bound
push
xchg
dec
xor
mov
fldl
mov
lods
add
sarl
mov
movsl
add
sub
iret
and
call
loope
pop
movsb
hlt
jmp
lahf
sbb
cmp
mov
pop
mov
xor
in
cmp
std
jecxz
sbbb
adc
adc
inc
add
loopne
adc
cmp
xor
xchg
mov
and
jo
xlat
cmp
xor
and
push
stos
inc
push
xchg
xorl
sub
test
shl
pop
add
or
xor
cmpsl
lods
or
jmp
and
imul
andl
jb
lret
push
sbb
repz
addr16
insb
lea
xchg
push
fnstenv
jl
sub
nop
js
pushf
mov
insl
fildl
lea
adc
das
iret
sub
loop
sub
add
das
inc
xchg
or
xor
adc
lret
xchg
inc
push
sti
orb
dec
cmp
lea
xchg
fs
fstenv
inc
mov
loopne
jecxz
subl
xor
push
js
aam
js
fstenv
inc
sahf
inc
sbb
std
pop
push
push
mov
inc
push
dec
mov
fcom
enter
or
mov
out
inc
mov
outsl
ret
fldl
xchg
sub
mov
pop
aas
mov
mov
inc
leave
sahf
xor
jns
mov
add
test
orb
push
add
xchg
jno
stc
and
out
out
pop
or
rorb
add
divb
add
sbbb
sub
idivb
xor
movsb
pop
jle
imul
mov
test
push
addr16
call
jle
call
sbb
addb
int
pop
shrl
cmp
jno
insb
cmp
shll
cwtl
mov
das
inc
xchg
dec
ds
subb
jne
lret
xlat
fstps
mov
pop
adc
sbb
xchg
sbb
dec
lods
push
iret
fcomps
rcrl
shrl
dec
nop
jb
rcll
lea
js
push
cmp
enter
out
cmpsl
mov
mov
cmp
dec
fbld
out
dec
jo
movsl
push
fidivrs
xor
cli
enter
inc
jg
cs
dec
negl
sub
xchg
sub
add
mov
test
mov
out
mov
out
in
int3
mov
cli
add
test
filds
xchg
or
loopne
jl
cwtl
lahf
scas
sub
outsb
les
lea
imul
scas
dec
js
out
fsubs
repnz
ljmp
inc
nop
inc
cli
fs
sub
fdivl
cwtl
movl
fldl
aaa
push
out
pop
sti
enter
xor
dec
in
sarb
xchg
cmp
dec
or
lcall
movsl
adc
inc
aam
out
sarb
jae
ror
fsubrp
add
dec
imul
movsb
add
jo
negb
inc
and
in
push
push
insl
stc
adc
sbb
pop
mov
mov
mov
test
mov
sub
pop
loopne
mov
je
stc
test
mov
and
mov
push
push
push
cmp
mov
cmpsb
adc
jnp
pop
lret
jle
fnstenv
mov
les
pop
testl
mov
subb
lahf
dec
mov
mov
loop
cltd
mov
stc
out
sub
xchg
clc
cld
scas
push
hlt
mov
mov
dec
adc
adc
mov
mov
or
jl
sub
add
sub
orb
jge
pop
add
popa
les
insl
popa
push
dec
das
jbe
adc
or
ja
repz
insl
or
mov
test
call
out
fwait
or
mov
pop
lret
gs
lods
sbb
in
loope
dec
sbb
lods
loop
lock
dec
sub
int3
mov
mov
xor
push
dec
loopne
je
mov
cltd
loope
dec
inc
pop
je
aas
lods
mov
sub
mov
mov
and
sub
adc
fnstenv
sbb
sbb
call
sub
cli
imul
fucomi
out
and
jnp
dec
into
ja
daa
frstor
bound
jmp
xor
xlat
js
adc
or
sub
insl
aaa
movsl
flds
pop
mov
int3
movsl
cltd
cmp
mov
scas
nop
mov
jb
scas
sbb
fisttps
insb
sbb
repnz
repnz
iret
inc
je
dec
jno
add
xor
jns
or
xchg
add
sbb
xchg
cld
mov
out
rcr
mov
and
lret
loop
xor
into
in
fimuls
out
cmp
stc
pop
aas
stos
xchg
mov
pop
fwait
mov
jno,pt
cmpsb
mov
adc
pop
pop
in
test
out
push
mov
arpl
mov
or
mov
adc
nop
push
les
fs
sbb
sbb
pop
inc
push
std
lods
pop
jne
pop
popf
or
scas
push
repz
test
push
mov
sbb
push
imul
rol
or
jne
mov
ret
ja
or
fadds
inc
jl
push
rcrb
dec
mov
not
push
dec
pop
out
xchg
and
jne
fidivl
cs
mov
and
stc
ja
add
push
jecxz
sbb
jle
mov
ljmp
into
pop
jg
ss
inc
pop
xor
fistpll
adc
repz
mov
pop
pusha
and
sub
xchg
adc
mov
popf
inc
mov
jp
fidivl
inc
aaa
xchg
push
jns
sahf
fbld
js
mov
cmpsb
cmp
imulb
mov
movsb
pusha
jmp
sub
add
bound
js
sbb
insb
jbe
mov
dec
rolb
sbb
in
lods
sti
mov
cwtl
xchg
jb
add
std
inc
inc
out
dec
inc
imul
jno
addl
push
pop
fidivs
aam
les
fwait
or
xor
popf
lcall
fs
inc
test
mov
insb
cmp
mov
mov
xchg
in
lret
adc
fndisi(8087
movsb
stc
push
std
add
mov
pop
adc
sbb
fwait
dec
sub
imul
jae
pop
xor
mov
mov
testl
sti
lret
arpl
push
jns
popf
scas
or
outsl
inc
jae
mov
stc
xor
or
push
data16
dec
in
mov
mov
push
js
push
mull
lock
push
es
fstps
mov
mov
dec
or
fldt
and
out
jecxz
push
in
popa
adc
stos
in
filds
ret
stos
dec
scas
cmp
ja
stos
dec
push
stc
int
adc
outsl
cmpsl
xchg
and
mov
or
std
out
in
dec
lret
cwtl
mov
scas
inc
dec
aad
add
sub
add
test
pop
test
js
clc
imul
lret
xchg
test
cmpl
mov
xchg
pusha
push
mov
decl
pop
push
in
mov
lock
cwtl
sbb
mull
adc
xchg
mov
push
push
jo
cli
mov
in
imul
jg
fstpl
mov
outsb
mov
sbb
aam
leave
push
addr16
cld
xbegin
aam
mov
mov
xor
scas
cmp
xchg
inc
push
bound
andl
aam
inc
xor
mov
xlat
pop
stos
push
insb
aam
jp
pop
mov
sbb
add
mov
std
jmp
xchg
and
sbb
sti
mov
fadds
std
mov
cmpl
add
rolb
cmp
sarl
pop
test
pop
add
int3
push
mov
out
fnstenv
les
pop
mov
lahf
insl
xchg
gs
scas
adc
cmp
je
push
push
xchg
clc
push
divb
incb
int3
sti
jmp
sbbl
inc
popf
cltd
leave
adc
pop
pop
imul
add
inc
outsl
in
push
js
and
mov
ds
push
dec
adc
incl
popf
push
pop
cmp
outsl
inc
shrl
push
in
mov
adc
xor
ja
mov
arpl
leave
mov
lret
insb
arpl
cmp
hlt
loopne
sub
xlat
and
out
jge
mov
inc
mov
and
push
xchg
jl
and
dec
inc
jle
mov
add
lahf
xchg
je
rcll
dec
roll
gs
or
mov
xor
jl
repz
scas
in
mov
mov
sub
leave
ret
mov
ljmp
adc
int
dec
cmp
out
out
mov
aas
sbb
lea
mov
cmp
sbbl
sbb
jns
dec
repz
mov
test
inc
mov
inc
in
into
mov
or
ljmp
mov
repz
push
insb
imul
test
xchg
mov
jl
jo
clc
lahf
mov
jb
mov
sub
push
and
mov
xor
outsb
adc
js
sbb
cmc
std
sub
andb
shr
dec
jle
add
lahf
test
pop
sbb
dec
push
pop
cs
add
rolb
enter
subl
fstl
minps
hlt
pop
das
lds
es
inc
or
pop
cli
cwtl
test
ljmp
add
aaa
sbb
int
jae
fsubp
and
lcall
adc
jle
mov
cmp
test
mov
mov
xchg
inc
sub
pop
jecxz
pusha
lock
ret
mov
and
les
and
inc
push
or
lahf
dec
es
mov
cmp
and
jno
sub
xor
xchg
enter
ficoms
loop
sub
and
mov
mov
mov
arpl
daa
pop
dec
lahf
adc
mov
in
lcall
mov
or
push
adc
and
adc
out
or
mov
push
adc
push
inc
cmc
inc
out
in
pop
andb
sbb
sbb
jmp
arpl
push
cmp
push
xchg
inc
dec
cli
xchg
aaa
cmp
and
and
mov
jle
cmpsb
push
lods
xor
pop
cmp
sahf
xor
and
mov
movsb
jmp
repnz
test
xor
dec
aad
daa
fldenv
inc
sahf
mov
cli
jae
stc
aam
mov
xchg
pop
clc
flds
inc
and
in
outsl
mov
sub
dec
fcomps
ds
adc
mov
cld
pop
cmp
cmpsl
adc
dec
jl
leave
out
cmpsl
gs
or
shlb
clc
aad
dec
cmpsl
dec
jno
and
mov
xor
shrb
in
fdivrp
and
push
fbld
xchg
call
pusha
or
mov
mov
dec
gs
jle
out
in
pop
and
enter
loopne
jmp
test
call
fnstenv
mov
dec
test
lcall
inc
or
cmp
xor
adc
out
xchg
cmp
lds
subl
fs
jo
inc
in
mov
test
mov
xchg
ja
stc
sub
lcall
cli
inc
pop
out
or
int3
mov
xchg
sub
adc
ret
aam
cmpb
sbb
or
adc
ret
cmpsw
mov
movsb
cwtl
stc
push
mov
shlb
pop
rcr
imul
inc
or
stos
pop
out
inc
ja
cmp
cmp
clc
repnz
and
in
sahf
jbe
and
jae
mov
call
sbb
out
cmpb
ljmp
sbb
jle
mov
sti
adc
jmp
adc
lcall
dec
inc
cwtl
jnp
mov
aam
jmp
rclb
std
sub
jae
jle
push
cmp
scas
xchg
sbb
inc
enter
or
sub
fiaddl
inc
andb
sahf
orl
add
jae
pop
jns
lcall
popf
in
push
das
ja
add
xchg
loop
insl
sbb
jns
mov
gs
in
mov
roll
es
out
mov
mov
xlat
leave
cmp
lock
xor
popf
jmp
outsb
push
int3
and
outsl
adcb
adc
icebp
js
mov
adc
sub
jns
xorb
push
add
pop
xchg
mov
pop
sahf
pop
into
les
inc
or
testl
mov
mov
out
xchg
enter
setne
je
jl
fdivr
xchg
pop
push
mov
push
outsl
sbb
cmpsb
add
pop
stc
stos
fs
inc
cmp
subb
cli
daa
mov
cmp
lods
and
cwtl
pop
adc
test
ficomps
inc
out
sbb
mov
mov
cld
sbb
scas
mov
int
fs
test
xor
fidivs
bnd
sub
cmp
xor
mov
cs
adc
inc
imul
orb
pop
push
call
cli
mov
dec
xchg
mov
outsl
xlat
nop
jo
xchg
addb
scas
orb
lahf
sub
xchg
iret
ja
ja
jg
dec
leave
push
fadds
in
mov
mov
lea
or
xchg
in
outsl
jg
pop
cltd
lods
mov
popa
and
sar
fdivrl
rcll
mov
jmp
jns
jl
dec
push
push
insb
dec
cs
shl
mov
jne
pop
lcall
pop
xchg
sub
test
sub
das
add
mov
jge
stos
dec
jne
test
das
xor
sti
sahf
dec
mov
sub
sub
cmp
adc
stc
sbb
or
and
pop
or
xorb
pushf
mov
push
push
jno
stos
push
stc
mov
push
xor
pop
std
stc
int
data16
test
loope
fldenv
push
xor
pop
add
jnp
inc
inc
loope
push
xchg
xchg
data16
mov
add
out
xchg
xor
sbb
sbb
test
add
and
push
fcmovnu
xor
and
das
push
add
ror
xchg
outsl
sub
mov
fs
push
mov
xchg
mov
or
jo
mov
stc
jle
clc
pop
stc
call
jns
in
sarl
pop
mov
cltd
mov
sti
mov
mov
movl
inc
xchg
pusha
cmp
je
sub
movsb
aas
or
lods
das
aam
dec
or
add
cmp
xchg
ja
mov
mov
push
clc
adc
pop
inc
popa
push
mov
dec
jno
fwait
andb
cs
sqrtps
enter
scas
call
inc
les
pop
sub
mov
les
fcomip
mov
fucomi
div
mov
push
loope
and
jne
ret
mov
loop
roll
std
xchg
pop
lcall
xlat
loope
negl
out
into
mov
adc
int
pop
push
add
mov
in
push
icebp
loope
jns
mov
push
mov
test
mov
lret
js
sub
vpcomuq
or
adc
call
mov
jl
sbb
loop
data16
idivl
neg
adc
fdivl
push
dec
xchg
jbe
mov
mov
cmp
stos
jbe
mov
loopne
xor
stc
xchg
repnz
fidivl
add
stos
and
lods
push
pusha
int3
lds
sub
pop
fisttpll
iret
rcrb
lock
sti
and
insb
insb
repnz
mov
out
xchg
fcomip
ja
in
jo
cmpsb
sub
test
gs
pushf
scas
outsb
in
sub
rcll
mov
out
int
popf
sti
aas
adc
cli
push
fildl
cli
or
call
lret
test
push
test
fimull
leave
sub
jnp
sbb
mov
movsl
and
or
xchg
dec
stos
pushf
dec
xchg
in
push
jns
mov
ljmp
push
adc
scas
lret
and
pop
mov
aas
aaa
fdiv
ret
cmpsb
jge
mov
sbb
jae
or
jnp
call
imul
shrb
jne
push
push
push
ss
loopne
pop
adc
in
sub
xchg
mov
add
push
dec
lea
mov
sarl
movsl
out
sub
imul
pusha
movsb
or
and
sarb
test
mov
shlb
mov
repz
mov
mov
stos
add
push
mov
push
mov
adc
xchg
cmpsl
jp
dec
insb
xchg
cmp
pop
jle
fstpt
sbb
stc
adc
pop
xchg
pushf
roll
ljmp
mov
xchg
je
adc
xchg
mov
pop
rorl
push
jno
pushf
scas
push
sbb
scas
and
pop
shl
jnp
push
mov
mov
movsb
mov
jp
sti
imul
rorl
ja
push
mov
gs
pop
insl
add
sub
inc
or
dec
adc
into
movsb
push
dec
aam
xchg
cmpsl
inc
sahf
cs
xchg
pop
es
fidivl
lret
sbbb
cmp
xlat
sub
subps
loope
mov
sbbl
loop
fsubs
push
scas
mov
add
aaa
popf
mov
scas
dec
xor
xchg
popa
pop
jp
rcrl
pop
pop
sbb
push
mov
pop
sbb
subb
fists
or
lcall
sub
or
es
popl
ljmp
mov
lea
xchg
mov
sub
adc
lods
xchg
inc
mov
pop
testb
movsl
insb
sub
scas
je
popa
pusha
mov
gs
mov
adc
lahf
test
mov
jo
rol
push
divl
ss
xchg
inc
jne
pop
in
rcrl
out
jae
arpl
xor
or
outsl
ret
shlb
xchg
lds
adc
int3
mov
outsb
nop
push
sub
lods
insb
fstpl
ss
test
inc
rcr
and
pop
insl
xchg
sub
add
stos
xchg
push
mov
pop
aaa
pop
and
aam
out
and
shlb
insl
xchg
int
cmc
xor
mov
sbb
mov
jp
adc
cld
dec
dec
mov
cmp
mov
inc
stos
rolb
xor
sbb
lcall
stc
cmpl
in
push
stos
pusha
xor
je
lods
lcall
and
loop
shl
lods
dec
mov
mov
mov
lods
mov
mov
repz
sbb
mov
or
jo
xchg
jecxz
mov
out
push
mov
lds
shlb
outsl
loop
cmp
scas
jb
cmp
cmpsb
xor
iret
cli
js
sti
add
movsb
mov
pop
in
ljmp
add
in
xor
pop
lahf
cmpsb
mov
sbb
pop
mov
idivl
scas
xchg
push
pop
add
xchg
dec
or
mov
aaa
call
mov
movsb
insl
mov
aas
xchg
sub
sbb
jb
pop
cmp
rcrb
sbb
and
movsl
fs
xchg
movsb
inc
jp
cmc
nop
and
xor
ljmp
mov
lret
pop
les
add
push
push
push
andl
sarl
dec
adc
loope
xchg
arpl
push
pop
xor
ss
adc
sub
dec
shl
loopne
and
push
add
xchg
mov
rcll
insl
fwait
bound
dec
mov
or
out
pop
repnz
and
and
fidivrl
repnz
fs
push
mov
push
shl
inc
inc
xor
or
scas
int3
int
dec
push
mov
cmpb
daa
cli
lret
dec
cmp
in
call
jecxz
in
je
lahf
loop
sub
mov
shrl
int
mov
cs
rorl
inc
loope
fsubr
lds
jmp
and
pop
sub
repz
add
add
aaa
xchg
dec
dec
jg
mov
sbb
stc
inc
sbb
outsl
sbb
cld
xchg
and
adc
cmp
mov
mov
bound
mov
mov
decl
jmp
gs
xor
push
mov
mov
je
leave
cwtl
dec
rol
rorl
arpl
pop
mov
cwtl
repnz
sub
add
and
roll
jne
xchg
or
sub
pop
cmpsb
xchg
cmp
push
sub
inc
ja
popaw
pop
arpl
roll
mov
xor
int3
insl
jb
xchg
fldcw
icebp
ljmp
addl
fsubrl
push
leave
leave
fisttpll
dec
sbb
add
leave
rcrl
and
mov
add
adc
cltd
xor
out
aas
filds
adc
fwait
sub
inc
sub
pop
daa
lock
jo
stos
xchg
add
daa
inc
pop
addr16
fldl
inc
sbb
mov
xor
dec
xor
dec
inc
and
mov
sbb
cmp
ret
mov
into
mov
and
pop
sub
cmc
lret
sub
push
fmuls
loope
pop
push
add
imul
dec
sti
mov
inc
lcall
jb
cwtl
mov
nop
call
es
pusha
adc
push
pop
mov
dec
dec
cmp
lret
mov
push
outsl
sarb
sub
out
shrl
rorl
sbb
fucomi
fnsave
addr16
negb
add
add
mov
js
jge
cmp
mov
mov
out
sbb
jae
dec
sahf
and
push
cmpsl
or
add
and
lret
xor
add
sub
cmc
lods
and
lahf
or
push
or
push
sbb
sub
mov
ds
mov
sbb
stc
rclb
push
mov
or
cmp
pop
cmp
sbb
mov
lret
in
pop
mov
leave
loop
repnz
or
pop
xchg
or
cmpsl
pop
scas
mov
jno
adc
int3
cmp
cmp
lods
push
mov
add
and
xor
mov
jp
mov
mov
or
push
or
movsl
fwait
mov
ss
pop
inc
cltd
xor
xchg
mov
icebp
mov
push
mov
xor
into
aad
cmpsb
test
pop
jg
mov
cs
mov
lds
outsl
and
and
mov
pushl
sti
cwtl
rol
jno
sub
push
xchg
mov
out
or
add
inc
push
std
jmp
cmpsb
and
or
xchg
and
sub
cmp
in
jnp
push
into
mov
popf
mov
and
rcll
add
inc
adc
sbb
or
das
jb
mov
scas
sub
xor
outsb
out
add
push
out
lock
jge
or
outsl
lret
mov
dec
fsubrs
negl
pop
lock
inc
sub
jo
repnz
iret
outsl
lahf
or
jne
lcall
idivb
xor
cmp
adc
mov
jns
repnz
adc
outsb
jne
cmp
and
pushf
dec
add
cltd
sub
in
mov
sbb
in
repnz
sub
jl
and
inc
and
mov
ret
sti
xor
mov
push
stc
addl
lea
cs
call
mov
xchg
sbbl
stos
repnz
imul
mov
push
mov
or
and
int
xchg
push
mov
xchg
gs
enter
jne
icebp
inc
mov
add
sahf
lahf
mov
mov
dec
xor
or
jmp
arpl
dec
ljmp
dec
and
or
lcall
dec
adc
outsb
push
pop
push
push
add
jecxz
xchg
xchg
je
js
pop
loopne
ja
loop
js
push
cmp
sub
jo
mov
add
outsb
sar
push
sarl
sub
pushf
dec
shld
stc
loopne
mov
cbtw
fs
or
xchg
test
shrb
mov
subb
cmp
enter
push
cmp
lcall
jnp
icebp
add
inc
orb
shlb
mov
or
inc
insl
test
jl
and
sub
gs
pop
test
cld
cli
jo
xchg
cmp
aam
pop
shrl
pop
push
mov
test
lret
stos
negl
push
lcall
cmp
sbb
les
aad
or
mov
mov
sbb
jne
xchg
xor
cmp
sahf
rorb
mov
xor
aas
ficompl
xor
jb
jns
call
inc
xchg
mov
loopne
imul
cmp
pop
ret
xchg
addr16
testl
invd
inc
sub
movb
clc
pop
pop
leave
xor
pop
pop
rcrl
cmp
imul
sub
sbb
pop
jbe
fcmove
in
adc
ss
pop
cwtl
or
inc
or
sub
lcall
rcr
ret
movsb
dec
scas
lahf
xchg
xchg
cmp
add
push
insb
pop
hlt
pop
xor
rdpmc
cmp
xchg
fcmove
dec
mov
xchg
rcll
jecxz
rorb
shll
mov
pushf
std
pop
cmp
jge
test
cmpsb
cmp
movsl
js
or
cmp
inc
out
mov
ret
mov
cs
mov
sbb
cld
daa
ret
shll
mov
push
xchg
push
mov
cltd
fadds
push
mov
rorb
inc
stc
pop
int
int3
jp
xchg
ss
mov
js
je
fwait
and
ret
inc
cmc
dec
popf
rol
or
loop
sbb
sbb
and
fldt
dec
sbb
push
sub
call
pop
adc
add
add
shrb
cmpsl
jno
fsts
arpl
pop
push
or
lret
pop
mov
rorb
shl
retw
popa
xor
lds
adc
pop
es
jbe
popa
push
mov
push
ds
clc
notl
adc
test
repz
pop
js
daa
adc
mov
shrl
ds
add
hlt
pop
xor
dec
dec
xchg
or
cwtl
lret
jae
jp
repnz
movsb
leave
insb
xchg
jl
cmp
aas
clc
cmc
sbb
sbb
test
insl
movsb
test
sub
aaa
out
subl
and
rorb
dec
mov
adc
les
jmp
lret
fisubl
movhps
xchg
pop
mov
and
jno
push
xchg
fbstp
jmp
and
xor
out
mov
and
sahf
and
pop
arpl
inc
movsb
xor
pop
push
aas
mov
stc
mov
pop
test
insl
add
adc
jo
addr16
xchg
add
imul
sub
adc
aas
andb
repz
jl
repz
filds
ljmp
gs
sub
xlat
adc
pop
mov
sub
rcrb
xchg
xchg
mov
jp
ds
jge
jbe
xorl
inc
pop
fmull
dec
cmp
movsb
pop
aas
mov
test
push
lock
jb
sbb
stos
xor
andl
pop
aas
inc
out
cmp
xchg
and
jp
mull
iret
rcrl
pop
or
cmpsb
mov
xchg
dec
xchg
inc
push
jp
push
lret
stos
fildll
and
clc
iret
cmp
or
or
out
or
stc
adc
shrb
mov
mov
outsb
mov
mov
mov
insl
lods
out
dec
cmpsb
xor
ljmp
sbb
and
pusha
cli
push
cwtl
shrl
sahf
inc
and
insb
lods
cs
mov
xchg
cli
cmpsb
pop
add
scas
popa
outsb
pop
pop
ja
bound
mov
fisttpll
mov
icebp
call
pop
sub
movsl
outsb
pop
dec
les
or
adc
jns
jle
sub
jp
aam
popa
js
push
call
lret
iret
fisttpll
ljmp
test
sti
loope
shll
sub
and
jecxz
mov
xor
in
gs
in
loop
fs
dec
pushf
sub
jmp
jl
mul
in
mov
jecxz
cmp
out
bt
shrb
rcl
mov
pusha
test
add
lock
div
imulb
out
fidivs
scas
mov
hlt
scas
pop
in
jg
or
xor
mov
nop
cmp
cmp
mov
lcall
das
int3
xchg
bound
inc
lret
mov
pop
push
fnstsw
pop
rorl
pop
in
jbe
and
sti
fnstcw
popa
and
cmpl
push
jecxz
jmp
mov
cmp
test
test
fidivrl
cmp
jmp
stos
andb
pop
leave
aad
sbb
loopne
jl
in
jg
pop
inc
add
loopne
mov
cli
sbb
jle
mov
jmp
mov
add
xchg
cli
xchg
jle
xor
cltd
fsts
fbld
add
pop
sbb
jge
dec
jb
push
or
clc
sub
dec
sub
fst
sub
pop
inc
aas
pop
mov
aaa
out
fimull
out
cs
popa
fcomip
notb
xchg
jl
ret
cmp
xchg
and
push
mov
ret
pop
sbb
mov
fcoms
adc
jecxz
in
mov
repnz
testl
movl
cmc
frstor
add
fdivrs
repnz
dec
pop
xor
jns
or
ret
sbbb
lods
fisttpll
fs
imul
test
jns
adc
mov
mov
add
sarb
iret
imul
loop
push
pop
push
out
nop
or
mov
mov
loope
xchg
sbb
testl
mov
xchg
shlb
cltd
pop
push
movsl
jne
les
and
jno
fidivl
pushl
jge
mov
mov
int
bndstx
pop
push
scas
cmp
or
mov
mov
shrb
jno
sbb
inc
xor
outsb
inc
add
and
adc
jecxz
mov
data16
jge
pop
cmp
movb
cmp
push
in
xor
pop
insl
pop
stos
and
inc
mov
aaa
popa
pop
outsl
popf
ret
push
aam
in
mov
sbb
xor
mov
mov
dec
pop
ret
gs
shll
lret
dec
sub
das
call
repz
mov
out
mov
pop
cld
insl
xchg
mov
cmpl
ret
rorb
ds
sub
test
push
or
add
sub
sbb
loope
add
loop
mov
aaa
add
mov
ret
scas
movsb
fs
out
sti
ljmp
rol
push
inc
cmp
add
lock
and
pop
push
xor
lock
pushf
mov
or
mov
stos
pop
pop
cmp
not
xchg
filds
xchg
inc
lret
enter
enter
adc
pop
pop
inc
mov
add
mov
and
rorb
xor
sahf
movsb
movsl
push
cmp
clc
repz
fildl
pop
xchg
jecxz
testb
aam
xlat
fnstsw
pop
mov
lds
dec
mov
pop
in
push
aaa
pop
mov
mov
out
mov
data16
imul
inc
je
pop
in
jecxz
shll
and
insl
dec
jb
jl
inc
fildl
xor
stos
les
jo
js
pop
call
rorl
mov
cmp
jne
cmp
cld
jmp
mov
mov
ss
add
or
inc
pop
outsb
pop
xchg
lret
pop
fidivrs
es
cwtl
lret
repnz
adc
lahf
jnp
mov
in
inc
fcmovne
les
out
ljmp
adc
in
or
ds
imul
cmp
mov
dec
nop
inc
test
mov
jne
mov
lret
cs
fidivrs
or
jb
lahf
in
dec
adc
stos
xorl
aad
cmp
xor
xor
sar
pop
jne
cli
fwait
popf
je
lods
dec
mov
movsl
adc
arpl
jns
dec
adc
cwtl
das
popf
popf
inc
mov
inc
sbb
sub
xor
out
roll
add
stos
lds
xor
fwait
and
cmp
xchg
sbb
sbb
sbb
xchg
xchg
push
push
add
jg
scas
mov
push
adc
jbe
mov
and
cmp
xchg
and
repz
mov
scas
lea
inc
mov
jge
jl
int3
fistl
jno
xor
sub
fnsave
jae
cmp
pusha
push
pop
leave
pop
pushf
or
xchg
jae
ljmp
cld
ret
lods
sub
rcrb
sub
ret
mov
add
sub
jo
jno
fcmovnu
into
adc
lea
sub
xor
mov
pop
out
mov
sub
sbb
add
leave
cwtl
sbb
and
test
cli
mov
push
shlb
mov
out
pushf
push
xchg
out
leave
je
fldl
imul
ret
mov
orl
and
xor
sbb
lcall
xchg
fisttpl
mov
adc
mov
sbb
pop
adc
adc
popf
repz
notb
jp
sarb
gs
fwait
stos
push
xor
stc
jne
ror
dec
mov
jl
insl
in
and
imul
inc
mov
fstps
notl
out
pop
dec
mov
push
shlb
mov
ja
orb
sub
jns
jne
cltd
sbb
push
jns
mov
sub
adc
fsubrp
stc
cwtl
sbb
push
cli
fmull
into
lds
xor
jne
mov
push
bt
xchg
push
insl
sbb
mov
adc
daa
push
ljmp
cli
stc
xchg
aad
cmp
inc
jnp
dec
cmp
addr16
add
push
add
inc
push
cs
imulb
cmpsb
mov
sbb
or
test
cli
mov
bound
jle
aam
nop
pusha
jecxz
lcall
scas
mov
mov
mov
mov
xchg
cmc
adc
loop
push
xchg
mov
mov
inc
loopne
add
mov
push
pushf
push
fistpl
movsl
fiadds
loope
outsb
vpshlb
mov
lcall
je
mov
loop
in
js
fsubl
xchg
fsubs
lock
aad
dec
notl
jnp
stos
clc
enter
mov
pusha
sti
pop
fsubrs
stc
scas
bound
pusha
fbstp
les
push
ror
pusha
mov
pop
pusha
call
dec
and
adc
mov
jnp
loop
push
sub
lgs
insb
mov
dec
dec
es
sub
ret
outsl
jp
xlat
cwtl
or
paddsw
xchg
shlb
xor
call
pushf
rcrb
mov
jb
push
sbb
sub
jnp
cs
or
daa
add
xor
in
jbe
sub
xor
aas
sahf
insl
pop
jo
jns
pop
in
insl
sbb
shll
in
sbb
mov
icebp
in
sbb
outsb
push
stos
repnz
rcr
das
fmuls
div
pop
add
imul
dec
insl
test
push
jg
adc
sub
cmp
aad
sahf
leave
jae
loop
cwtl
lds
addl
ror
jmp
and
and
mov
lods
nop
sbb
sti
cmpsl
add
lcall
adc
stos
jg
sub
ret
push
dec
repz
push
jmp
int3
adc
lcall
xorb
roll
adc
and
xchg
cli
insb
fprem1
rorl
sub
push
xchg
movsl
cmp
test
jbe
inc
mov
popa
popf
sar
inc
daa
pop
popl
popa
sbb
dec
mov
aad
pusha
enter
repz
movsl
mov
mov
mov
imul
lcall
push
and
xor
push
sub
out
cmpsl
lcall
jno
out
xchg
xor
lret
rcrl
pop
inc
lods
stos
faddl
data16
xchg
pusha
jno
inc
jle
or
xchg
cltd
sub
or
ja
add
mov
sbb
mov
push
mov
adc
mov
sub
in
inc
fwait
subl
mov
std
imul
or
mov
jp
scas
lods
adc
scas
mov
dec
push
push
and
add
jg
fwait
repnz
pop
and
xchg
sbb
jmp
or
divb
ret
xchg
push
leave
cmp
pmuludq
outsb
mov
mov
mov
xor
leave
into
add
push
rcr
or
adc
repz
in
aad
imul
iret
mov
lods
daa
roll
pop
dec
sbb
add
inc
int3
outsb
pop
test
in
fildll
mov
fstpl
hlt
sub
cld
sub
rcrl
pop
aad
das
int3
xchg
mov
ds
lods
and
frstor
or
lcall
sub
iret
leave
xor
shl
mov
cwtl
or
mov
loop
inc
xchg
add
mov
xchg
repz
lods
rcrb
sahf
add
mov
ja
shr
insl
mov
mov
mov
sbb
push
cs
push
ljmp
pop
clc
icebp
insl
cwtl
dec
pushf
push
inc
out
pop
in
fiaddl
push
mov
dec
jne
pushf
push
and
xor
aad
mov
jns,pt
cmp
sbb
lret
lret
jns
pop
pop
xor
jl
mov
es
test
pop
sub
mov
xchg
movsl
mov
and
jno
jl
sar
subl
adc
ret
cwtl
pop
out
push
sbb
addr16
mov
fimuls
mov
xor
stos
add
lret
sub
lret
push
xchg
daa
xchg
aad
and
lahf
imul
and
push
lds
pop
dec
ds
rol
pop
inc
orb
lods
pop
sarl
imul
test
mov
sub
jg
icebp
inc
fs
div
jge
push
xor
fidivrl
sahf
mov
jp
movsb
adc
dec
int3
cmp
mov
scas
stc
push
cmc
jo
push
xchg
into
jb
inc
cmp
xor
sub
xchg
jg
bound
fisubrs
xchg
and
adc
scas
out
mov
or
pusha
mov
lahf
mov
sbb
dec
mov
push
mov
addr16
in
sub
dec
fsubs
mov
mov
mull
mov
pop
test
xchg
popa
js
test
ja
dec
cmp
popf
push
not
or
ds
cmp
fsubrl
test
cmp
mov
popf
fmull
cmpsl
inc
je
test
pusha
test
cmp
inc
jns
mov
push
ljmp
cwtl
lret
inc
movsl
jnp
ud0
adc
and
mov
sti
mov
sbb
xor
xorl
push
cmp
shr
xor
xchg
out
and
sub
test
outsb
fstl
addr16
popf
sbb
xor
adc
xchg
mov
mov
push
or
popa
pop
iret
push
jmp
add
add
int
push
sbb
pop
fidivrl
rcl
loope
xchg
imul
out
adc
and
jno
jbe
jne
orl
xchg
je
int3
les
push
cmp
mov
mov
jbe
sbb
jg
loop
mov
nop
dec
cltd
scas
sahf
pusha
pop
push
pop
std
push
adc
lahf
and
lcall
stos
add
lock
xchg
aaa
sahf
and
push
push
mov
sti
or
add
mov
test
push
imul
cmp
jmp
inc
xchg
xchg
add
jns
divb
lret
and
push
or
call
or
pop
lods
jle
ds
aaa
jne
bound
xchg
sarb
into
not
and
dec
lods
xor
sub
xchg
lods
jl
popf
cmp
xchg
cmp
sbb
fnop
cmp
pop
pop
xchg
cmp
xchg
roll
scas
nop
pop
or
repnz
notl
dec
xchg
aas
xor
imul
js
mov
cmpsl
sub
push
lock
jno
cmp
mov
out
test
nop
iret
mov
add
flds
enter
sahf
aas
sti
rcll
aas
andb
js
xchg
mov
repnz
loop
js
xor
sub
mov
es
lods
push
imul
xchg
andb
int
test
lea
clc
mov
insl
xchg
test
adc
hlt
stos
stos
clc
jnp
mov
mov
and
push
mov
jge
pop
or
aad
and
jbe
popf
xor
test
in
and
push
or
mov
jbe
rclb
mov
mov
xchg
xchg
data16
mov
ljmp
cmp
dec
out
or
xor
ret
aas
enter
and
mov
shrl
je
sbb
sbb
adc
adcb
iret
sbb
ss
fs
mov
and
je
xor
test
ljmp
cld
add
xor
into
leavew
jl
jg
rolb
mov
pushf
mov
xchg
popl
xchg
mov
fmull
adc
sar
shrb
mov
repz
sub
bound
inc
or
and
arpl
cmp
xchg
insb
int3
fldenv
dec
insb
gs
mov
dec
xor
ret
gs
in
mov
xchg
sub
cwtl
jne
cs
add
ret
test
stc
aam
icebp
mov
inc
ljmp
pop
dec
add
mov
dec
xchg
orb
and
lcall
in
int3
or
iret
or
int3
jge
insl
xorl
sbb
inc
inc
xor
fdivrl
sahf
cmpsb
jnp
lods
jmp
push
movsl
stos
cld
out
jle
gs
sub
nop
jae
fsubrl
sahf
ds
mov
add
fildl
arpl
add
pop
fisttpl
std
pop
xchg
jge
js
popl
lods
popf
jbe
mov
ficompl
cmp
or
and
rcrl
repnz
fildll
rorb
jbe
je
bswap
fidivrs
sbb
frstor
sbbl
dec
xchg
push
add
in
imul
cli
out
dec
cmp
pop
dec
adc
in
test
fwait
dec
jg
fisubrs
xchg
sub
mov
insl
sbb
imul
pop
cli
cwtl
jo
outsl
jl
ja
lods
sub
dec
jge
xchg
pop
js
out
test
insl
int3
add
and
paddw
nop
xor
sub
inc
jle
pushf
popf
sahf
iret
divl
frstor
mov
and
imul
jecxz
jg
stc
mov
aam
cld
inc
mov
mov
pop
lods
div
or
jge
xchg
mov
mov
jns
jo
push
mov
jnp
pop
enter
sbb
mov
inc
ds
mov
rorb
lret
jne
test
pop
scas
ja
pop
nop
add
and
dec
xlat
mov
inc
lods
setb
pop
jecxz
pusha
sub
inc
add
lock
andb
or
pop
push
add
mov
lods
aaa
jb
inc
jecxz
into
inc
push
pop
lds
dec
idiv
lock
mov
addr16
in
es
decb
jl
jge
jbe
je
and
cld
das
orb
mov
shlb
mov
jb
cli
mov
lods
rcr
hlt
push
sub
imul
add
xor
ljmp
jnp
call
rclb
adc
fimuls
lret
sub
out
loopne
push
or
xchg
xchg
xchg
aam
aad
xor
bound
fcomp
jns
stos
and
mov
push
xor
aas
xor
push
push
stos
jne
fwait
int
loop
add
push
xor
jecxz
mov
add
xorl
mov
jo
xchg
test
mov
mov
icebp
pop
nop
cmpsl
jno
fdivrs
movsb
and
cwtl
out
mov
mov
pop
stos
out
subb
test
cmp
cltd
jo
fwait
ret
sub
jne
cltd
pop
aad
rclb
test
rcll
mov
das
add
iret
movsb
sbb
mov
push
push
cmp
and
cmc
pop
add
pop
test
xchg
pushf
xor
aad
mov
cltd
jmp
push
pop
mov
jp
pop
lahf
aad
sbb
mov
test
cmpsb
inc
cmp
and
push
jecxz
scas
lret
aaa
out
push
pop
push
adc
pop
adc
mov
enter
and
adc
mov
fisubl
sub
push
dec
xor
bound
dec
push
fnstsw
jb
push
adc
jnp
js
mov
fists
pop
mov
jmp
test
cmpsl
fdivrp
roll
sarl
adc
loope
mov
ja
cmp
in
mov
lret
sti
or
lret
cmpl
jae
mov
jo
in
arpl
sub
xchg
pop
repz
xchg
lcall
mov
popl
pop
std
or
out
mov
and
pop
lahf
cmpsb
sbb
stc
shrl
movl
mov
mov
movsl
es
sub
adc
into
call
nop
push
mov
mov
dec
inc
lahf
mov
pop
dec
pusha
stos
shrl
sub
cmpsl
jnp
insb
out
pushf
data16
scas
mov
xor
out
repnz
adc
dec
fldln2
lds
int
out
push
mov
in
fsubl
mov
ds
out
leave
cld
push
jg
fnstcw
dec
adc
or
divb
scas
sbb
pushf
push
je
sub
sub
xchg
aam
cld
xchg
mov
inc
inc
rcrb
lods
xchg
out
mov
lods
ficoml
cwtl
dec
les
and
lock
inc
dec
sti
push
xor
xchg
insb
in
or
cmpsl
mov
xchg
adc
pop
xor
or
mov
sub
or
das
jo
push
mov
repnz
sahf
cmp
cmpsl
andb
inc
imul
lods
jno
sub
aam
cli
idivl
rorb
pusha
and
js
mov
jle
jle
or
push
mov
add
add
daa
sbb
ret
sti
add
cld
sub
pop
aaa
push
imul
jb
push
cmpl
and
and
sub
cmc
call
call
je
adc
adcb
xor
cmp
inc
pop
lret
add
xor
sahf
movsl
mov
cli
aam
into
leave
sbb
fisubrs
imul
in
arpl
aaa
push
adc
scas
movsl
dec
mov
jbe
sub
cmp
fwait
js
je
aaa
jg
fstps
xor
scas
out
fstpl
pop
mov
sub
pop
fwait
sbbl
push
mov
push
sbb
aaa
sbb
bnd
cmc
dec
jno
fsubp
pop
mov
sti
pop
scas
cmp
shufps
jmp
fs
jecxz
mov
push
aas
call
dec
adc
addl
fwait
test
in
sbb
adc
jle
mov
adc
mov
lods
inc
hlt
adc
adc
xchg
xor
pusha
pop
xor
jp
ficoml
pop
jmp
stc
enter
push
mov
test
jno
mov
xor
out
cld
ja
sbb
insb
jmp
push
hlt
sti
fdivrs
outsl
and
jnp
leave
mov
push
sub
xor
addr16
inc
insb
mov
lret
orb
pushf
mov
fadds
test
lret
jbe
xlat
cmp
aaa
imul
add
outsl
mov
sub
fxch
mov
jmp
adc
ret
and
sub
in
or
cmp
int3
mov
test
sub
cli
pop
incb
ror
add
push
les
fdivs
scas
mov
jbe
push
std
push
sub
loop
roll
out
pop
or
xlat
or
daa
inc
pop
loope
int
das
js
dec
adc
jle
pop
inc
ss
sub
xchg
inc
fldcw
loop
sbb
and
jecxz
test
cmp
push
gs
and
mov
push
or
iret
mov
push
jl
in
int
cmp
adc
out
mov
pshufw
dec
jmp
inc
or
push
data16
mov
push
jo
cmp
push
fadd
or
fs
popf
inc
repnz
in
in
fisubl
call
or
ljmp
or
pop
mov
adc
push
lds
rcll
repnz
dec
adc
jae
mov
not
mov
aas
cmp
sarb
mov
out
jle
rcrb
lahf
push
lcall
pop
dec
iret
mov
inc
xchg
pushf
or
or
or
pop
pop
push
in
or
xchg
or
dec
sbb
mov
cltd
xchg
add
pop
es
inc
leave
mov
dec
sbb
jmp
push
adc
jge
adc
arpl
addr16
cs
push
pop
mov
xchg
out
leave
insl
mov
and
pop
jns
test
push
test
mov
inc
mov
cltd
sbb
into
ljmp
imul
sbbl
das
paddsb
and
lods
push
sbb
xor
xchg
insb
insl
test
push
mov
int3
xchg
mov
cmp
mov
out
divl
mov
dec
pop
std
popf
sbb
pop
loop
mov
punpckldq
xchg
test
ds
cmpsb
sub
fstps
popf
loopne
in
es
sbb
push
ja
pop
inc
in
push
adc
mov
sub
push
daa
dec
adc
xor
or
xchg
mov
fs
cmp
jl
sub
mov
inc
push
sbb
sbb
sbb
sub
adc
lret
lret
arpl
adc
cmc
int
pop
dec
adc
rolb
clc
push
adcl
imull
ret
in
rolb
les
xchg
ret
xor
les
push
pop
xorl
popa
xchg
jne
mov
popf
leave
inc
pop
dec
imul
inc
jp
dec
fdivr
sbb
pop
fwait
push
cmpl
dec
pop
aaa
sbb
popf
ljmp
jge
ja
out
dec
aaa
xchg
movsb
and
or
aaa
fwait
mov
sub
loope
in
push
cmp
jecxz
mov
mov
ror
scas
sbb
repnz
lahf
lcall
sub
lods
popf
scas
sub
xor
cmpl
fiaddl
adc
mov
int3
decl
jg
adc
cltd
mov
out
pusha
xlat
sbb
frstor
scas
xchg
popa
adc
mov
shl
sub
cld
sbb
and
sahf
sbb
imul
push
out
jmp
adc
fmul
loope
or
sbb
or
adc
adc
mov
das
adc
sbb
push
sbb
cmp
out
cmp
push
push
inc
push
or
sub
flds
fldt
push
jne
cld
cld
dec
jb
add
mov
lock
fldcw
mov
push
jae
int
lret
test
mov
cmp
mov
dec
sub
scas
jno
popa
into
pop
xchg
call
loopne
xchg
add
shlb
nop
cmp
fimuls
adc
cltd
xor
fwait
mov
in
jno
mov
inc
or
shufps
inc
pop
jo
add
adc
fwait
loop
mov
cmp
jb
cmp
jno
dec
sub
aas
aam
js
leave
lcall
xor
adc
mov
lret
sub
movsl
dec
xor
and
xchg
and
daa
lods
sub
xchg
into
js
imul
push
dec
lock
inc
fsubrs
divb
mov
outsb
mov
sub
add
std
cltd
mov
cmpsl
jmp
call
cli
pop
pop
and
stos
iret
in
rclb
popa
inc
mov
cwtl
mov
cmpl
push
sub
xchg
pop
addr16
jg
push
xor
mov
jmp
je
and
mov
ljmp
lret
jmp
fildll
shrb
das
mov
or
jl
push
adc
cmc
cwtl
lods
mov
mov
mov
out
pop
lods
inc
in
ret
jae
mov
push
lahf
cmpsl
fdiv
add
in
lods
jne
ds
in
rcr
test
dec
movsl
add
or
icebp
xchg
subl
aaa
pushf
mov
fdivrs
or
icebp
outsb
inc
or
test
mov
cmpsl
adc
stos
jae
sbbb
test
in
shrl
bound
orb
insb
lods
inc
or
inc
mov
fchs
adc
cwtl
jae
test
mov
wbinvd
out
dec
pop
aas
ret
ret
andb
or
xor
lock
mov
popa
repz
inc
xchg
popf
dec
dec
enter
scas
ljmp
idiv
inc
mov
mov
push
push
cmp
adc
fmull
sbb
cwtl
leave
mov
call
daa
mov
lods
inc
loopne
mov
xchg
xchg
mov
outsl
pop
int3
lret
adc
arpl
adc
lret
test
pop
sbb
jns
sbb
push
mov
xlat
add
mov
push
scas
out
pop
insl
cli
lcall
es
add
lea
test
insb
enter
mov
cmp
add
xlat
rol
xchg
pop
cmp
jo
fwait
mov
adc
cmp
mov
aaa
sti
lods
mov
bound
fwait
pop
xchg
cmp
outsl
mov
mov
push
xchg
cmp
pop
in
push
fdiv
add
ja
inc
movsb
dec
inc
xchg
inc
cld
test
pop
leave
xchg
add
mov
stc
xchg
ljmp
xor
pop
aam
addl
int3
inc
fidivrl
pop
dec
mov
mov
xor
lods
andl
fcmovnu
cwtl
xchg
daa
push
in
arpl
pop
repnz
cld
jbe
stos
rclb
je
push
rcrl
sub
hlt
add
in
and
and
es
cli
cwtl
pop
cld
mov
in
inc
mov
int3
mov
sbb
or
push
jae
and
dec
roll
filds
outsb
jnp
push
and
jae
jne
icebp
int3
lahf
push
cmp
xchg
popa
xor
shr
aam
mov
inc
test
inc
cltd
shrb
int3
ja
jl
test
imul
and
sub
pop
sbb
lods
push
inc
es
ss
or
hlt
sub
hlt
push
mov
je
nop
orl
repz
mov
sbb
wrmsr
mov
ds
and
pop
shr
inc
stc
bnd
ds
dec
mov
ret
ljmp
insb
aas
lahf
xor
xor
mov
lret
repz
jns
sub
ret
je
push
out
outsl
rcll
or
adc
jns
mov
dec
adc
mov
push
mov
jmp
push
sarb
fwait
jle
xor
pop
ret
sub
stos
fisttps
in
lds
mov
int3
dec
mov
aam
jb
or
and
add
mov
xchg
xchg
sahf
aad
popf
test
movsb
adc
test
ss
push
push
jo
cmp
hlt
iret
jmp
inc
jnp
add
xchg
sbb
loop
insl
xor
nop
cmp
cmp
sbb
sbb
jmp
push
xchg
das
jg
xchg
stos
test
push
mov
jno
in
sub
lret
inc
movsb
insb
hlt
in
ffree
out
pop
insb
pop
mov
arpl
loopne
pop
jg
fldt
lea
popf
pop
ret
mov
pop
pop
sbb
adc
imul
fwait
pop
je
pop
popf
sub
sbb
mov
lret
repnz
cwtl
loope
shrb
addb
mov
das
sbb
mov
sub
inc
js
shlb
fsts
cmpsb
push
pop
push
rorl
fs
lods
sahf
jge
add
jp
cmp
shrl
sub
repz
cld
add
jl
xlat
insl
ret
negb
jbe
ret
fdivrs
add
cs
out
adc
hlt
in
sbb
pop
fwait
sar
fldenv
and
or
icebp
xlat
scas
das
lret
es
je
ret
xchg
inc
jle
aam
mov
xchg
leave
std
dec
mulb
xchg
scas
rcll
or
imul
mov
lods
xor
jle
mov
adc
push
cs
jecxz
and
fwait
cmc
mov
psrlw
add
inc
enter
sub
adc
hlt
jae
psrad
jmp
std
inc
aam
aad
and
sub
mov
int
pop
idivb
imul
outsb
loop
or
mov
xlat
xchg
ret
mov
aas
adc
arpl
push
adc
mov
movsl
and
in
cmc
pusha
stos
clc
pop
mov
lcall
jb
pop
sbb
shl
aad
add
xor
mov
mov
adc
fstpl
mov
sbb
pop
fsubrp
out
xchg
in
enter
jns
insb
lahf
and
xchg
imul
dec
mov
add
jae
mov
push
mov
and
push
popl
inc
mov
je
pushf
mov
mov
cmpsl
stc
ret
xlat
test
fstpl
pop
loope
cs
mov
adc
push
repz
pop
mov
sub
sbb
fcmovne
dec
sbb
push
iret
mov
repnz
pop
movsl
jo
mov
into
sub
test
mov
sub
inc
ds
sub
gs
ljmp
data16
xor
les
jecxz
jp
jne
jo
arpl
pusha
rolb
add
inc
mov
mov
add
inc
cmp
aad
push
mov
jbe
cmp
clc
add
xchg
insl
sbb
sub
dec
popf
mov
stos
sub
repz
aaa
lods
xor
cmpsl
xchg
pushf
out
and
cmpsb
mov
aam
mov
mov
xchg
mov
lods
and
icebp
sbb
lock
dec
inc
pushf
lcall
gs
out
clc
pop
dec
jle
inc
and
mov
jl
jge
sbb
jns
call
xor
push
lahf
lcall
mov
push
jge
pop
and
lea
ret
push
xchg
negl
leave
jecxz
jle
hlt
or
int3
das
in
push
test
or
das
jp
sub
pop
popf
xor
mov
pop
dec
or
sub
sbb
lea
into
xchg
stos
ss
dec
or
ljmp
jge
outsb
rol
std
pop
icebp
nop
rcl
in
push
bswap
jo
cmp
scas
sbbl
add
jne
mov
sti
loopne
lods
cmp
pop
cmc
cmp
xchg
xor
test
rolb
cs
stc
cmpsl
xchg
repnz
dec
mov
adc
js
xor
pop
loop
sbb
stos
sbb
push
add
push
or
or
leave
arpl
leave
add
repz
scas
notl
sbb
mov
js
pop
lods
push
mov
jno
add
adc
cmp
xchg
sub
cmpsb
lcall
out
adc
push
inc
cmp
rorb
outsb
mov
in
sahf
mov
xor
cmp
xchg
adc
outsl
ja
in
and
push
xchg
ss
js
mov
cmpsl
test
out
lahf
sbbl
imul
or
add
clc
cli
adc
stc
dec
nop
dec
cmp
adc
lcall
jl
hlt
add
cmp
cmpsl
sbb
loope
mov
mov
or
in
fnsave
test
dec
cmpsb
flds
adcb
and
es
daa
ss
pop
mov
mov
sahf
push
dec
xchg
repz
jge
sbb
cwtl
jnp
fsub
jne
ret
fbstp
loope
push
scas
in
test
iret
jbe
mov
add
aad
pop
lock
fucom
add
scas
aam
lret
in
jmp
inc
outsl
test
imul
mov
cmp
lock
jg
mov
mov
aad
std
xor
das
mov
dec
cmovno
sub
cs
cmp
ja
dec
insb
push
fwait
sbb
mov
int
lahf
push
stos
sbb
xor
scas
inc
adc
cld
jnp
les
add
popf
jl
pop
pop
das
ret
xchg
iret
dec
imul
sti
sbb
xchg
ss
scas
or
dec
icebp
or
cli
mov
aas
pop
sub
ss
or
clc
std
lret
mov
cmpsb
roll
xchg
fdiv
xlat
rcr
inc
add
xor
aas
adc
sbb
data16
jno
xchg
mov
pushf
je
push
cmpsb
fwait
mov
xchg
sbb
push
sti
jle
hlt
scas
mov
pop
lock
cmp
popf
pop
add
out
nop
jbe
lods
mov
jecxz
inc
xlat
pop
repz
adc
lods
sbb
mov
xchg
push
cmp
jae
leave
push
in
je
dec
sub
mov
xchg
aaa
mov
push
or
or
div
mov
pop
cs
incl
outsl
ret
fcmove
add
add
cld
push
loope
dec
pop
dec
sbb
push
out
mov
in
push
insl
in
dec
xchg
shlb
mov
addr16
test
fstps
xchg
movsl
cmp
sub
and
dec
push
inc
inc
int3
int
test
pop
fwait
test
out
div
mov
pop
mov
ja
and
inc
in
inc
aam
lahf
stos
insb
stc
jae
push
fildl
or
or
in
inc
sub
aad
in
addr16
mov
push
sbb
pop
testl
in
and
insb
dec
mov
out
pusha
lock
outsl
imul
mov
jmp
mov
sti
adc
bound
push
int3
fstps
lods
lock
pop
dec
jecxz
xchg
hlt
inc
ja
jp
addr16
scas
js
imul
ljmp
adc
scas
cmc
push
ret
adc
ja
movsb
pop
pop
out
mov
push
cs
fdivrs
push
les
dec
lds
xor
mov
lock
imul
pop
cmpsb
mov
add
adc
fbstp
jmp
mov
mov
pop
mov
out
repnz
ss
mov
and
rcll
mov
test
mov
filds
pushf
adc
testl
scas
dec
cld
push
add
cmpb
dec
fdivp
sub
ret
mov
test
and
loope
dec
mov
je
or
mov
decb
sub
push
push
test
pop
stos
sbb
cmp
iret
jmp
mov
movl
sti
rcr
aam
xor
adc
lods
push
cmp
mov
xlat
xor
int3
jbe
test
fdivs
jmp
pop
cmc
push
es
ljmp
outsb
test
std
jecxz
insb
fdivl
xor
outsb
mov
mov
sbb
test
mov
cmpsb
dec
pop
mov
loope
or
add
es
pop
in
and
or
ret
addr16
mov
icebp
jl
mov
pop
xor
aam
xlat
or
or
sbb
and
insl
jns
or
test
incb
mov
scas
add
bound
je
js
sbb
rcr
repnz
or
cltd
out
fsubr
mov
sbb
adc
xlat
jp
and
sub
jnp
xor
mov
stos
testl
popa
jno
scas
rorl
xor
stos
mov
jns
jecxz
xchg
cltd
movsl
mov
sub
dec
mov
xchg
jne
dec
xchg
add
or
jno
sbb
lcall
xor
xor
movsb
sbb
dec
or
pop
dec
repnz
push
and
mov
mov
lret
pop
xlat
fdivrs
fwait
lods
adc
xchg
jl
mov
sub
out
in
push
in
dec
sbb
stos
cmp
fwait
mov
or
pop
sbb
xor
push
sbb
xchg
pop
out
test
imul
push
pop
dec
mov
mov
mov
adc
mov
xchg
mov
xchg
xor
pop
aaa
lods
int3
mov
daa
sahf
loope
fdivs
mov
lock
push
lock
push
mov
cld
xchg
mov
jecxz
repz
push
pusha
ficompl
int
std
mov
js
xor
inc
fcmovnb
add
sub
stos
add
sbb
shlb
xor
gs
adc
outsb
repz
pop
fwait
lock
aad
sbb
mov
add
mov
lahf
fstps
add
mov
bound
mov
sahf
xchg
cltd
pop
out
into
mov
or
fcomps
rcrb
push
inc
fsub
movsl
jecxz
cmp
fsubrl
movsb
jnp
idivb
jle
mov
into
sbb
mov
add
inc
fisttpl
adc
das
sarb
sub
jmp
ds
mov
ret
mov
adc
loopne
mov
xor
fidivrs
mov
stc
fistpll
xchg
movsl
stos
addb
jnp
outsb
mov
mov
xor
fcoml
shrl
imul
xchg
sub
leave
dec
adc
sarl
loop
or
les
es
les
xor
es
gs
push
call
imul
push
scas
inc
mov
addr16
flds
cmp
ss
pop
xchg
cli
stos
push
lahf
cmp
pop
jne
repnz
or
ret
dec
test
fwait
rol
or
je
adc
ja,pt
push
sub
sub
test
sbb
movsl
push
or
push
dec
movsb
mov
push
loop
cmp
unpckhps
lock
jne
lea
xchg
sbb
lcall
push
sub
mov
dec
shlb
mov
xchg
sub
push
pop
xchg
fsubs
pushf
mov
inc
jno
test
mov
xor
loope
push
lcall
inc
jl
pop
enter
imul
jecxz
pop
fisubrs
call
nop
adc
cltd
pop
push
push
pop
rorl
xor
jp
mov
out
sbb
cmp
insb
push
pop
inc
test
aam
pop
nop
lea
adc
fwait
xor
xchg
xor
and
xor
mov
iret
nop
push
cld
dec
paddd
in
mov
mov
lahf
mov
int3
outsb
lahf
popl
xchg
fxch
icebp
packsswb
add
cwtl
mov
pop
cli
loopne
fnstsw
cmp
mov
or
add
sub
inc
add
push
xor
repnz
push
movsb
push
call
mov
pop
call
xchg
inc
insb
pop
cld
inc
mov
jne
inc
mov
pop
add
ljmp
and
cmp
test
divl
push
mov
dec
shlb
xchg
out
mov
mov
sbbl
mov
adc
mov
xor
das
mov
dec
lods
jmp
mov
insb
mov
sbb
lret
sub
pop
clc
mov
daa
sbbl
stos
jbe
push
mov
xchg
or
and
les
mov
loop
daa
rorb
dec
rorb
movsb
dec
and
call
mov
ja
orb
push
nop
inc
out
sub
stos
mov
push
loope
sbb
xorb
and
cmpsb
movsb
call
pop
leave
test
or
fcom
push
pusha
mov
pop
mov
test
mov
cld
fwait
jecxz
adc
adc
orb
int
jns
in
mov
repnz
cmovae
leave
mov
popa
sbb
sbb
cwtl
insl
pop
dec
movsl
xchg
popa
test
movsb
or
stos
mov
xchg
lods
inc
repz
mov
mov
hlt
or
push
mov
fnstcw
seta
pop
mov
test
pop
jne
add
bound
xor
mov
lea
mov
cmp
lcall
dec
testl
fimull
mov
push
or
push
lcall
stc
enter
imul
and
push
pusha
pop
aam
add
pop
dec
add
jne
filds
mov
lea
lds
inc
unpcklps
rclb
mov
mov
and
jge
popf
fldenv
bound
test
push
pop
lcall
cmp
add
ja
lcall
enter
data16
sbb
loop
jp
inc
mov
cwtl
xor
push
xchg
jae
and
imul
cmp
sarb
mov
xorl
mov
adc
iret
hlt
das
push
lret
inc
test
popf
cmp
mov
pop
jg
or
mov
gs
in
pop
push
adc
bound
leave
push
imull
imull
mov
xor
in
inc
mov
mov
arpl
cmp
nop
xor
and
in
and
imul
inc
mov
dec
xor
bound
or
outsl
sub
xchg
xor
andl
jmp
dec
pop
mov
mull
leave
cld
sti
sub
movb
fs
incb
mov
daa
mov
into
sbb
enter
inc
mull
je
popa
test
mov
popf
mov
push
add
mov
pop
mov
in
or
pop
divl
pop
and
push
iret
xchg
mov
inc
pusha
xor
rcll
inc
pop
cmp
xchg
mov
xor
fs
out
lods
jno
in
sbb
dec
outsl
movsl
cld
mov
mov
cs
and
sarl
mov
jnp
sub
sbb
int3
in
loope
lds
or
sub
lods
mov
enter
lods
cmp
cmc
inc
test
xchg
sbb
jl
push
sub
sbb
fdivrs
dec
imul
jns
adc
mov
popa
sahf
jmp
aam
jle
mov
mov
and
push
dec
cld
add
jmp
adc
sub
pusha
xchg
in
mov
adc
fwait
or
icebp
push
adc
xor
cmp
mov
dec
inc
imul
adc
xor
iret
lret
mov
outsb
lahf
push
loopne
and
jl
and
push
cmp
mov
stos
sbb
mov
sub
pop
enter
cli
out
outsl
pop
sahf
sbb
lods
rcrl
xor
sbb
mov
orb
lods
push
inc
add
in
push
xchg
mov
inc
sbb
pop
push
and
mov
sub
ret
xlat
and
sub
pop
jnp
jb
xor
inc
push
pop
fmull
jl
mov
inc
movsb
js
push
enter
xchg
add
or
outsl
test
sbb
fmull
cld
inc
stos
sub
xor
xchg
cltd
pushl
test
gs
jmp
ja
jo
or
or
pop
aaa
sbb
mov
mov
xchg
mov
push
mov
rol
push
dec
or
scas
xchg
dec
dec
push
jns
loopne
push
lret
jle
into
stos
or
or
orb
aam
inc
nop
mov
mov
push
push
cwtl
pop
loope
jae
adc
repnz
sbb
incl
enter
adcb
mov
into
cmc
arpl
nop
loope
xchg
xchg
es
pop
xchg
repnz
fdivs
pop
js
in
pop
stc
mov
xor
ljmp
inc
test
pop
fsin
std
inc
xchg
test
arpl
inc
add
or
xor
insb
fadds
fiadds
xor
loopne
pop
lcall
scas
setl
and
lahf
mov
jmp
jne
add
ja
fs
shlb
mov
xor
cmpsl
mov
dec
add
and
scas
test
in
ja
inc
movsl
jg
jo
test
adc
xor
dec
je
cmc
rorb
adc
or
xor
push
sti
mov
adc
and
es
xchg
scas
rclb
stos
lret
mov
and
dec
bound
fcmove
shlb
push
mov
push
shrb
jl
mov
xchg
sbb
dec
pushf
leave
adc
cmpsl
cmpsl
inc
ja
sahf
xor
cmpl
jg
pop
and
outsl
mov
dec
ds
jno
test
mov
or
mov
dec
insl
aas
jmp
cmp
and
cld
jmp
mov
adc
sub
mov
js
popf
test
sti
jb
cltd
pop
add
test
inc
loope
or
out
add
inc
movsl
and
hlt
insb
mov
lahf
ds
adc
push
jg
sub
pop
cmp
gs
mov
sbb
mov
test
add
and
rcrl
insb
xor
insl
imul
movb
lahf
push
dec
aam
mov
imull
pushf
out
lock
push
mov
sbb
add
push
dec
fidivs
jno
cmp
mov
loop
aad
ret
pop
sub
sti
into
cwtl
mov
fcoml
pop
dec
adc
repz
xor
add
dec
fwait
cmpsb
dec
or
push
xchg
mov
lret
je
mov
lret
inc
mov
push
jo
les
stos
rcll
xlat
push
push
pop
add
cmp
popa
nop
shll
mov
push
inc
and
mov
mov
push
test
sbb
adc
pop
xchg
xchg
jg
fisttps
rorb
dec
sar
jmp
xor
aam
es
in
sub
sbb
sbb
push
in
rcrb
inc
pop
fnstenv
xchg
jb
cltd
and
add
mov
mov
je
sub
cmc
sbb
add
xor
pop
mov
imull
outsb
loop
or
mov
jl
mov
jecxz
fdivp
sub
xchg
or
add
push
sahf
daa
sbb
test
mov
push
push
adc
and
xchg
inc
or
cmp
lock
jecxz
mov
int3
and
cmp
cmp
incl
or
inc
into
mov
sbb
xchg
pushl
dec
xor
pop
outsl
adc
inc
cmp
addr16
js
std
pop
addr16
mov
test
push
sub
mov
jbe
push
mov
inc
sbb
dec
pop
das
or
cltd
fadd
lock
adc
dec
sbb
lahf
stc
add
ret
push
test
xchg
sbb
aam
sub
imul
data16
bound
jle
insb
push
subb
rolb
xchg
and
and
pop
sub
imul
xor
mov
mov
jl
addr16
sbb
cmp
push
mov
bound
xchg
push
lock
fcompl
sbb
or
adc
jl
sub
loope
inc
add
jbe
or
fildl
into
jno
mov
imul
mov
movsb
mov
dec
call
fwait
and
cmp
mov
test
cmp
fnstcw
movsl
pushf
std
xor
xlat
xor
hlt
xor
fcmovbe
cmp
inc
outsl
cmp
in
xor
mov
cmp
mov
jbe
push
mov
xchg
fidivrl
jecxz
fldt
hlt
xor
lcall
aas
push
or
arpl
aas
jecxz
mov
cs
movsb
push
inc
in
xchg
mov
jae
sbb
test
mov
adc
and
mov
out
push
xchg
ja
mov
lret
jae
inc
mov
or
fwait
inc
clc
std
mov
gs
push
loop
popl
adc
sbb
or
sub
sbb
stos
push
faddl
test
mov
roll
loopne
pop
adc
data16
and
cld
addb
ds
std
lretw
xchg
ljmp
cmp
repz
dec
add
nop
cmpb
xor
jno
pop
jnp
adc
shlb
jle
loopne
stos
inc
mov
push
dec
insb
fnstenv
push
insb
jo
adc
scas
aaa
xchg
adc
ds
xchg
mov
cmp
cmp
data16
int3
cmpsl
cld
mov
cs
xchg
test
out
cwtl
mov
out
cmp
jno
push
pop
aam
push
int
xchg
repnz
mov
dec
push
xlat
imull
jge
or
cltd
fcoms
lcall
inc
xorl
push
ret
sbb
ds
loope
cli
inc
or
cmp
icebp
mov
sahf
fs
xchg
mov
mov
aaa
dec
push
mov
sbb
fdivrs
nopl
lds
sbb
adc
popa
jbe
icebp
push
jmp
cld
pushf
mov
mov
icebp
mov
out
push
out
arpl
dec
and
adc
lahf
mov
shl
bound
or
shrb
sub
jno
mov
pop
add
cmp
adc
loope
clc
inc
js
cmp
push
jns
jl
sub
adc
bound
mov
or
ficoms
dec
outsl
shlb
sbb
cmp
mov
mov
rolb
mov
xor
outsl
sti
pop
mov
in
ret
fimull
cs
jae
insb
loopne
pop
ss
jo
dec
xchg
add
sbb
jmp
repz
popa
data16
or
xchg
stc
in
rorl
jl
mov
nop
nop
sbb
add
scas
loope
or
imul
dec
pop
and
mov
mov
aaa
addr16
or
sahf
loopne
out
inc
and
mov
sbb
mov
pop
and
popa
lods
sbb
xor
icebp
push
rorb
adc
lcall
xor
cmp
xchg
cmc
push
test
pop
dec
out
push
dec
jo
fwait
lods
jb
add
ret
xor
mov
push
push
lret
clc
add
mov
push
dec
dec
add
xor
push
dec
inc
dec
mov
mov
mov
mov
addr16
negb
lea
mov
test
gs
jl
mov
pop
xchg
pop
and
jle
imul
outsb
leave
ret
scas
je
sub
out
aaa
sahf
cmpsb
fdivr
popf
popf
rcll
cmpsl
scas
mov
loop
je
pop
or
fwait
sub
fwait
pusha
and
lods
sbb
sbb
add
jo
cld
lret
cld
or
pop
lea
rorl
jno
fimuls
adc
cmpsb
pop
mov
inc
xlat
aas
popf
das
mov
fistpll
out
sbb
mov
testb
jo
ja
pop
jg
into
cmpsb
jle
xor
xor
dec
push
xchg
push
or
cmp
ja
xchg
testb
fimuls
adc
andb
aas
lock
fiadds
sub
inc
inc
fisubrl
iret
mov
bound
xor
divl
addl
add
int3
iret
dec
inc
sarb
cmp
xchg
test
hlt
das
loopne
and
dec
xlat
inc
enter
fimull
pop
cmp
jecxz
repnz
inc
adc
addr16
jnp
sahf
push
mov
push
movsw
sbb
je
push
or
mov
hlt
cmp
mov
xor
repnz
xchg
dec
inc
adc
inc
xchg
mov
cmp
inc
xor
shlb
jmp
ret
lds
add
ret
xor
test
mov
or
xor
mov
inc
adc
inc
dec
xchg
out
xchg
jne
dec
add
insl
in
int3
dec
push
aaa
aas
push
fisttpll
inc
add
add
sbb
add
sub
mov
ljmp
or
push
xor
xlat
sahf
aaa
and
fwait
jnp
imul
movsl
xor
pop
fisttpl
ret
inc
nop
cmp
sahf
divl
das
insb
stc
mov
cmc
jecxz
pop
test
test
hlt
fstpt
cmc
bound
sahf
pop
les
add
xorl
push
mov
arpl
loop
cltd
push
push
test
clc
shrl
popa
ss
sbb
mov
sub
std
in
xchg
iret
cmp
push
je
es
fdiv
xchg
pusha
mov
or
push
test
fcmovu
nop
or
ficoms
sbb
fsubl
pop
sub
outsb
dec
sti
aam
pop
xchg
mov
xchg
xchg
pop
add
fs
mov
mov
sbb
add
les
adc
out
and
loop
les
popf
pop
cmp
nop
mov
test
or
jl
push
xchg
enter
adc
cmp
xor
add
mov
xlat
out
data16
or
clc
mov
inc
mov
mov
je
or
fcompl
jae
mov
jns
mov
cltd
adc
sti
lret
aas
xor
lret
jp
jnp
mov
and
mov
mov
lods
fwait
clc
insl
mov
sbb
fidivrl
arpl
pop
push
leave
enter
jecxz
mov
sti
jnp
adc
insl
push
push
mov
sub
sbb
ljmp
leave
mov
pushf
and
fistl
sahf
fildl
fmull
sbbb
jle
cmp
push
xchg
xchg
sarl
sub
aad
and
imul
and
lods
scas
imulb
push
int
xchg
into
jp
cmp
xchg
sbb
pop
leave
clc
fdivrs
popf
sub
mov
test
and
and
mov
xchg
jne
jb
data16
xchg
xchg
push
pop
gs
inc
dec
push
icebp
insb
push
enter
pop
sbb
ja
xchg
xchg
cmp
xchg
mov
jbe
sti
cwtl
je
push
leave
test
adc
js
xchg
sub
add
int
jno
test
leave
js
mov
int3
mov
loope
mov
cmpsl
dec
xchg
mov
xor
addb
scas
xchg
sub
cli
jmp
or
ljmp
mov
push
cli
mov
push
dec
dec
or
push
mov
jo
lret
add
xor
repz
inc
test
or
jbe
xchg
loop
jecxz
add
fs
sahf
data16
lahf
arpl
and
xor
mov
mov
mov
pop
xchg
fbld
or
xor
or
xchg
fimull
mov
ds
aam
inc
loope
faddl
push
sbb
mov
and
push
fsubrs
or
adc
stc
xchg
aad
lret
xchg
push
testl
test
xchg
mov
mov
ljmp
pop
ret
inc
pop
test
fcompl
data16
icebp
jp
idivb
xchg
mov
sbb
stos
shrl
pop
test
fadds
div
push
stos
dec
and
push
mov
bound
out
test
xor
addr16
outsb
dec
repz
mov
stc
sbb
in
xchg
inc
xchg
and
imul
loopne
cmp
fists
mov
lea
aaa
das
jbe
outsb
sbbl
jecxz
jmp
outsl
or
rcrb
sub
lods
data16
xchg
push
sbb
sub
sbb
jecxz
in
dec
leave
xor
stos
pop
inc
shll
dec
negb
mov
pop
inc
shll
inc
push
scas
mov
dec
call
out
add
inc
add
inc
mov
xchg
xor
pusha
or
jecxz
test
xchg
cmp
aam
adc
das
ss
mov
xchg
or
outsl
pop
shl
xor
pusha
dec
rorb
lock
scas
xor
xchg
lods
call
mov
add
cmp
outsb
cmp
xchg
adcb
or
push
push
mov
loope
aam
mov
popa
jmp
mov
mov
outsb
jp
push
mov
inc
outsb
jmp
jmp
clc
and
inc
pop
cmp
inc
aam
aad
sti
rcrb
rcrb
daa
pop
push
push
mov
jae
hlt
nop
sub
mov
aam
dec
add
pop
push
dec
in
cmc
int3
jmp
fnsave
pop
out
pop
and
stos
stos
inc
sbb
cs
mov
mov
addb
test
push
icebp
gs
outsl
push
push
cmpsb
enter
dec
out
wrmsr
lods
push
dec
nop
and
push
xchg
setb
cli
mov
aam
out
mov
pop
adc
adc
dec
dec
aas
xlat
test
pop
fwait
mov
cmc
in
lods
adc
jae
add
daa
jno
and
sub
dec
iret
sbb
jnp
imul
stos
fs
jo
sub
rcrb
sub
pop
sbb
sbb
adc
mov
dec
pushf
pop
sarl
sbb
adc
imul
aaa
mov
ljmp
inc
ret
cmc
cmp
mov
mov
in
jnp
lock
bound
daa
inc
inc
data16
clc
jbe
cmp
push
sarl
stos
popf
cli
jp
aam
std
or
xchg
ret
and
aas
rcl
and
mov
xor
aad
inc
cs
sbb
inc
add
mov
lret
mov
data16
mov
push
cmp
jo
add
ret
or
mov
fistl
push
xor
mov
mov
jmp
sti
dec
xchg
shll
nop
insl
jecxz
xchg
jo
mov
lock
imul
mov
popf
fbstp
out
mov
ss
lock
cmp
fcomi
fwait
jecxz
aad
mov
cmp
push
jge
or
int
fmuls
lret
movsl
out
or
shlb
sub
into
or
push
push
in
lock
fwait
fwait
push
pop
mov
cmp
fstps
or
roll
in
ja
int
or
scas
xorl
cli
ss
cmp
pop
in
sub
adc
jle
sub
jbe
xor
dec
pop
jae
sub
leave
jae
xor
out
ss
scas
mov
aas
mov
mov
loop
push
xor
out
sub
adc
ja
inc
inc
data16
mov
popf
cmpsb
inc
lret
xchg
mov
mov
std
add
and
xchg
repnz
sti
pop
sub
roll
out
and
push
mov
repz
or
mov
stc
mov
repnz
mov
mov
enter
test
cmpsl
push
jno
ret
inc
adc
stc
in
loop
xor
leave
int3
jmp
cmp
and
lret
nop
cwtl
daa
xchg
jne
int3
test
mov
jno
sub
enter
sbb
pop
fs
mov
mov
dec
cld
sahf
aam
cmp
shlb
dec
dec
sbb
mov
mov
jle
cmc
outsl
inc
or
mov
push
es
and
aam
inc
lds
xchg
notb
jl
xor
jb
cmpsb
popf
lret
adc
mov
sbbb
sbb
sub
inc
lahf
mov
rorb
fistpll
adc
movsb
mov
fisubs
aad
and
adc
int
outsb
add
cmp
ds
out
fidivl
cmp
fisttpl
sub
and
mov
inc
xor
sbb
fnsave
sbb
es
push
jg
notb
lods
add
dec
add
loop
bnd
pop
xchg
cmp
adc
xchg
inc
cmp
test
lds
cli
aam
cwtl
cli
mov
sub
mov
stc
adc
popa
dec
add
and
stos
fs
push
insl
fbstp
jmp
shll
sti
xchg
pushl
push
or
xor
dec
lcall
repz
cmp
sbb
ss
mov
lret
push
imul
cld
cmp
leave
stos
xor
stos
mov
es
inc
ja
jb
pop
pushf
aam
xor
arpl
cli
mov
shlb
pushf
push
jo
iret
das
ds
inc
loope
js
pop
cmpsl
int3
xor
mov
sub
lahf
pop
mov
sbb
adc
cmp
xlat
imulb
or
mov
inc
inc
insb
cmpsb
push
cmp
out
outsb
inc
and
fnstenv
inc
imul
inc
test
sub
push
dec
dec
fcoml
sbbb
cmp
sub
add
dec
cmc
outsb
or
and
scas
pop
data16
f2xm1
xchg
sub
sbbl
xor
add
push
or
repnz
jae
ss
xorl
in
test
add
out
mov
push
leave
mov
mov
sar
dec
mov
rorb
mov
jbe
lods
lods
repnz
lret
lods
push
lea
loopne
daa
or
xor
mov
out
pop
add
lcall
aas
jl
sub
inc
xor
sub
push
dec
push
mov
adc
and
imul
divl
pop
scas
cmp
pop
dec
inc
lcall
adc
int
adc
mov
mov
ret
repz
fisubrl
call
les
ljmp
inc
dec
sbb
pop
roll
pop
cmc
mov
jnp
mov
call
push
call
mov
lods
fcompl
imul
test
mov
cmp
add
inc
mov
push
add
fidivrl
xchg
shr
pop
jecxz
pop
dec
clc
pushf
add
repnz
inc
fmull
jb
into
adc
ja
inc
rorb
lods
pop
push
adc
int
out
push
in
mov
xor
je
pop
jl
sbb
inc
lret
or
or
insl
and
int
je
dec
lds
xlat
les
push
lahf
pop
pop
jb
call
xor
repnz
mov
repnz
scas
mov
cld
pop
mov
jl
iret
mov
ficompl
hlt
test
idivl
push
cmpsb
jne
popf
popf
adc
lods
push
cmpsl
xchg
and
pop
into
xor
insb
push
add
das
flds
sbb
pusha
cmp
xor
divl
inc
in
push
mov
dec
mov
shlb
mov
xlat
loope
mov
leave
lea
mov
mov
add
cmp
push
and
push
or
fwait
mov
out
loop
and
adc
stos
insb
jecxz
jg
mov
push
sub
test
cli
imul
cmc
cltd
xchg
das
aaa
stos
jno
cmp
cwtl
sti
dec
jns
jno
mov
push
sarl
fnstenv
adc
pop
jp
mov
nop
cmpsb
fstpt
mov
cwtl
and
xor
daa
and
jle
jno
aaa
int3
imul
push
lret
xor
imul
push
mov
pop
iret
pop
add
sub
cmp
mov
push
sbb
cmp
loope
mov
out
scas
int3
cmp
xor
shrb
js
sub
mov
les
cmp
dec
sub
jmp
mov
leave
add
xchg
fisttpll
roll
fstps
and
adcl
mov
jmp
add
popl
lea
bswap
add
cmpsl
movsl
inc
cmp
push
dec
fistl
rcrb
mov
outsb
cmc
vmwrite
sub
cmp
subb
and
cli
dec
mov
lods
ffreep
mov
das
cltd
in
bound
cmpsb
adc
mov
pop
in
sub
ret
fidivrs
aam
mov
mov
mov
push
mov
dec
pop
sub
in
push
cmp
and
int
aas
loopne
xchg
ja
stc
popa
jno
es
cmp
push
scas
popfw
test
sbb
pop
mov
shll
xor
pop
pushf
dec
out
push
or
cmpsb
sub
ljmp
mov
push
stos
xor
mov
sbb
jecxz
and
add
jno
cli
jno
xlat
int
mov
mov
cld
outsl
add
and
mov
lds
pushl
repz
xor
mov
xchg
pop
addr16
scas
jmp
mov
insb
xchg
fiadds
test
or
adc
addr16
pop
ss
sub
add
mov
sti
dec
mov
mov
inc
sbb
sbb
dec
jmp
mov
aaa
xor
cmp
stos
mov
enter
ret
pop
push
mov
push
shrl
add
test
push
xchg
shlb
inc
xchg
dec
mov
sub
das
bnd
jge
call
rcll
fcompl
adc
and
push
sub
sub
test
pop
test
mov
ret
lret
dec
in
adc
popa
lock
pop
mov
pop
fmuls
data16
pop
lret
xor
mov
jl
stc
enter
sbbl
cmp
cld
je
and
adc
inc
xchg
push
sbb
xlat
pop
jmp
repnz
lds
fisubs
push
adc
cmp
out
imulb
sub
sahf
call
dec
clc
lock
sarb
mov
adc
mov
xor
mov
xor
xor
andb
pusha
add
mov
jecxz
fs
popf
je
sbb
jmp
inc
fistps
jmp
cmp
inc
cli
xor
popf
mov
fdiv
push
fbstp
testb
jecxz
mov
mov
out
int3
pop
adc
in
adc
cmpsb
lea
mov
push
inc
inc
add
sub
fistpl
outsb
mov
xchg
mov
ljmp
jecxz
dec
xor
jle
mov
out
dec
push
sbb
or
sti
mov
pusha
pop
aam
imul
testb
mov
sub
jp
jbe
adc
xchg
adc
loope
mov
xor
lods
add
jns
nop
sub
das
pop
xchg
clc
sub
outsb
mov
xor
lods
pop
push
sbb
cwtl
test
insb
pop
jle
scas
popa
sbb
push
repnz
outsb
pop
jns
inc
lahf
pop
stos
sub
xchg
cltd
mov
mov
push
or
cmp
fldenv
std
dec
in
push
adc
enter
push
cmp
mov
pop
pushf
push
inc
push
test
xor
aas
and
arpl
into
add
test
js
hlt
cwtl
sti
sbbb
pop
arpl
shrl
or
dec
lret
mov
xor
out
dec
xor
push
add
jbe
jne
sarb
jo
push
inc
loopne
jb
cwtl
lcall
mul
lds
dec
inc
xor
xchg
mov
mov
mov
push
out
xor
sbb
pop
cmp
sub
bound
adc
in
ja
inc
lret
sbb
fisttps
or
aad
jp
pop
andb
xchg
inc
movsb
cmp
in
insb
inc
cltd
xor
add
pop
mov
into
xlat
xor
push
out
sbb
cmpsl
push
lock
dec
arpl
and
cmp
sub
pusha
test
fs
and
adc
cld
dec
mov
cwtl
loop
lret
cmc
aas
push
mov
imul
mov
mov
adc
pop
xor
pop
test
cltd
ljmp
sub
or
pop
sbb
lds
dec
imul
jo
pop
femms
dec
stc
jae
test
and
sbb
in
out
aaa
js
sub
gs
push
inc
push
adc
xor
addr16
jno
popa
inc
pop
cmp
and
mov
mov
jle
mov
mov
inc
sub
outsl
mov
sbb
testb
adc
scas
test
fdivl
cmpsb
jae
mov
gs
outsb
ffreep
out
in
and
add
aas
daa
fsubrl
aas
push
clc
mov
lods
das
push
ds
ljmp
hlt
sub
int
lahf
adc
cmp
pop
cmpl
mov
push
dec
mov
mov
mov
cmpsl
pop
lret
and
addr16
div
and
int
cli
mov
inc
mov
xor
jns
shrb
xlat
inc
fdivrl
mov
push
test
sbb
aad
outsb
adcb
adc
inc
test
jo
mov
sub
jno
push
cmp
jb
mov
cmp
aam
and
push
out
sub
mov
imul
cmpsb
pop
sahf
dec
lahf
xchg
repnz
push
insb
mov
jbe
push
int3
xchg
pushf
jg
mov
int
inc
inc
ret
test
outsb
mov
push
cmpsb
jmp
leave
repz
or
cmp
fcoms
dec
insl
sbb
fildll
ljmp
jb
popa
dec
aaa
adc
icebp
jecxz
or
jle
mov
mov
cmp
pop
add
popf
inc
stos
ja
jns
mov
int
adc
push
inc
fisubl
mov
cli
stos
stos
int3
lock
cmp
xor
dec
mov
fwait
inc
sub
push
pop
pop
repz
sub
sbb
jae
and
out
sub
pextrw
or
cld
cmpsl
push
inc
push
pop
mov
test
or
mov
sbb
sbb
in
lahf
inc
shrl
ficoms
std
push
dec
sub
addr16
decl
pop
mov
leave
je
sti
jae
xor
sub
push
mov
lds
scas
adc
jmp
pop
sbb
rolb
or
push
bound
pushf
adc
cmpsl
shll
das
mov
push
in
mov
mov
dec
sbb
mov
add
das
lods
jno
add
xor
insl
test
push
adc
ds
xor
mov
mov
lahf
add
loopne
xor
cs
push
sub
push
mov
or
xchg
call
les
pop
dec
dec
subl
mov
push
fwait
or
cmpsl
subl
mov
xor
adc
mov
inc
rorb
xorb
fs
sub
loopne
push
pop
adc
and
fwait
push
out
icebp
out
imul
cmc
jnp
adc
or
test
rorl
jns
in
leave
lret
xor
out
mov
int3
push
or
cmpsl
std
push
pop
or
mov
dec
xchg
pop
movsl
dec
sbb
insl
inc
mov
idiv
xchg
fdivr
icebp
xor
dec
les
or
cmp
cmp
xchg
ret
mov
test
aaa
jne
pop
sbb
push
call
int
insb
mov
inc
lret
test
push
cmp
jo
pushf
cmp
lret
sbb
jmp
mov
sbb
mov
dec
rorb
stc
pop
and
out
jne
dec
lock
mov
or
loop
push
push
int
xchg
mov
das
iret
lahf
or
or
repnz
cmpsl
mov
nop
mov
es
daa
inc
fnsave
xchg
out
xchg
iret
push
sub
adc
jg
xchg
ret
jl
push
xchg
and
mov
leave
adc
push
jl
lock
mov
cmp
push
adc
mov
popa
add
mov
hlt
inc
sub
insl
dec
mov
cmpl
rcrb
push
loopne
mov
aaa
pop
aas
inc
push
sbb
and
mov
mov
or
ljmp
adc
cmp
jmp
cmpsl
cmpsb
mov
cmp
mov
insl
fisttps
sub
jg
insb
xchg
fwait
mov
fiaddl
lret
and
jmp
jmp
lahf
les
mov
xchg
in
int
ret
sub
movsb
test
add
sbb
aaa
cmp
popf
xor
int3
lret
dec
subl
pop
sbb
or
sbb
addb
bound
call
andb
aam
lahf
or
push
add
clc
movsb
xlat
test
cmp
add
lock
mov
enter
lock
adc
outsl
aaa
pop
clc
fisubl
xchg
idivl
popa
mov
js
notl
dec
jl
call
push
int
mov
icebp
scas
dec
mov
scas
pop
mov
sbb
daa
adc
cmp
push
jge
fxtract
negl
loop
pop
mov
mov
push
aad
sbb
cmp
mov
clc
addr16
xor
xchg
mov
lea
repz
out
adc
xchg
mov
dec
dec
mov
push
icebp
sbb
xor
jge
mov
mov
mov
mov
xor
lret
movsb
push
cltd
aad
daa
push
push
insl
ja
movsb
push
add
inc
jns
mov
xchg
cmpsl
aad
push
jo
fadds
inc
inc
and
outsl
addr16
popa
icebp
sbb
ret
inc
push
mov
add
sahf
hlt
mov
fiaddl
mov
jns
std
push
jo
and
add
or
daa
jp
push
or
add
test
xchg
mov
sub
push
fidivrs
pop
fimuls
mov
add
cs
ret
clc
in
adc
inc
fiaddl
lcall
inc
mov
adc
xor
pop
xor
lahf
xchg
xor
dec
pop
movsb
subb
dec
stos
imul
sub
cmp
sub
fnsave
cmp
test
aaa
sbb
loopne
cld
pop
xchg
popw
add
cmc
jae
aad
pop
mov
inc
in
fucom
pop
lock
jae
in
pop
test
lcall
jmp
pop
jnp
fld
dec
mov
xchg
imul
jo
add
mov
aas
mov
xor
mov
ds
add
imul
or
or
test
adc
notb
add
mov
sarw
in
enter
dec
xchg
inc
hlt
int
insb
and
jg
scas
sub
loop
push
add
loopne
jne
es
movsl
mov
sub
out
jge
add
aas
mov
daa
and
or
push
fldcw
aas
and
jp
adc
mov
sar
xchg
loope
rcll
lods
sub
test
ror
mov
aad
cmc
push
ss
xchg
xchg
xor
xor
iret
sub
mov
dec
adc
fildll
fisttps
dec
insb
lret
cmp
addr16
cmp
inc
lea
les
test
sbb
rcr
jmp
sbb
push
in
xor
fs
mov
mov
mov
in
push
xchg
outsl
stos
mov
lcall
mov
pop
mov
xchg
fsubr
inc
dec
mov
sub
ja
ret
inc
mov
adc
adc
cwtl
cmp
jnp
loopne
pushf
test
out
mov
lret
pop
ficoml
inc
popa
xor
inc
jbe
imull
movb
ss
jo
test
push
push
dec
cli
inc
faddl
ret
or
ljmp
lret
jecxz
aas
cmc
jl
andl
xlat
ret
mov
adc
in
jbe
stos
pop
stos
sbb
fs
inc
pushf
sbb
repz
mov
jnp
sbb
mov
sti
scas
fwait
shlb
pusha
out
push
nop
cmp
or
insb
das
ja
push
lcall
push
das
adc
rolb
mov
push
xchg
or
jae
xor
push
dec
pop
rclb
lea
cmp
shrl
insl
push
sti
mov
imul
leave
fists
jge
std
aad
mov
jmp
push
test
xchg
shlb
popa
sbb
addr16
jne
movsl
fcmovne
or
pop
loopne
shll
sbb
mov
cmp
outsl
cmp
enter
stos
dec
and
xor
cwtl
loope
jae
push
pusha
ljmp
mov
mov
mov
pop
dec
push
xchg
out
leave
lds
sbb
and
aad
xor
sbb
popa
aam
loopne
jne
cltd
repnz
jno
hlt
adc
sub
sarl
and
adc
test
pop
movsl
jle
std
imul
outsb
jle
xor
jo
jl
shrb
mov
pop
idivb
mov
mov
pop
test
inc
push
inc
xor
popf
jne
bound
inc
jbe
test
add
lret
sbb
fstps
inc
cwtl
push
xchg
outsb
push
mov
std
ret
sbb
das
cmpsb
jb,pt
pop
test
outsb
dec
loop
sbb
dec
sbb
sbb
sub
push
shll
cmc
icebp
iret
xchg
loopne
xor
sub
inc
cmp
jne
dec
push
sub
push
mov
mov
pop
call
popa
jmp
cltd
hlt
pusha
mov
jp
sahf
pop
fists
or
xchg
xorb
cmpsb
jp
mov
pushf
pop
out
push
and
aam
pushf
lods
sub
sbb
xchg
push
mov
lret
or
xor
pop
bound
data16
cmp
dec
add
daa
xor
test
cmpl
mov
jae
jecxz
mov
adc
sub
stc
pop
std
in
pop
daa
repnz
out
stos
packsswb
cmp
add
inc
jae
xor
xchg
mov
stc
iret
push
xlat
aas
lock
cltd
ss
jp
sarb
aas
inc
pop
mov
adc
test
jne
dec
out
scas
outsl
jbe
mov
mov
lret
mov
cmp
sub
add
lahf
sub
scas
jmp
loopne
inc
mov
outsb
xlat
shlb
push
das
imul
in
jb
and
stos
jmp
inc
clc
test
jge
mov
jo
scas
mov
jmp
push
div
jp
gs
and
xchg
add
add
cltd
icebp
sub
sub
je
dec
mov
dec
lods
cmp
push
mov
xor
mov
enter
lock
ret
les
les
jge
cmp
pop
sub
std
bound
iret
orl
ret
mov
dec
orl
inc
arpl
hlt
push
push
popf
pop
cmp
jb
lret
push
xor
ret
test
dec
hlt
pop
btr
test
shll
mov
add
mov
es
daa
sub
lds
fdivp
cld
fdivl
clc
xchg
mov
scas
fs
or
fldt
in
andl
pushf
sahf
shlb
dec
adcl
clc
dec
pop
adc
push
cmp
daa
mov
aad
dec
inc
mov
mov
and
sbb
iret
shlb
mov
bound
outsb
mov
xchg
cltd
jne
fnstenv
jne
sbbb
jmp
fwait
add
jle
subl
loopne
ficomps
pop
mov
add
pushf
bound
scas
cmpsb
mov
sbb
lock
mov
mov
subl
and
xor
xchg
dec
pop
push
pop
xchg
std
mov
or
roll
jmp
ds
cmp
movsl
fisttpll
lret
adc
addr16
sub
push
and
mov
xchg
mov
sbb
lods
cmp
dec
jmp
push
outsl
jecxz
inc
jb
sbb
xchg
dec
adc
mov
push
mov
lds
inc
add
dec
lea
ljmp
sub
lods
jae
jnp
add
and
jbe
clc
xor
push
enter
pop
or
inc
push
push
ficompl
shrb
cmp
inc
xchg
xor
stos
cmc
aaa
pop
dec
leave
push
inc
fisttpll
shr
mov
inc
jnp
out
mov
bound
dec
shlb
insb
sub
test
sar
stos
sbb
lret
jae
daa
pusha
mov
or
push
mov
pushf
daa
or
or
xor
and
and
mov
cmp
cmp
std
loopne
dec
cmp
gs
mov
inc
push
adcb
aaa
push
pop
rcrl
jmp
icebp
insl
push
xchg
nop
aam
jle
ss
stos
sub
or
sub
nop
mov
lods
xchg
dec
movsb
cmp
jns
fistpll
adc
adc
cmc
lret
out
add
or
roll
pop
int3
cmp
pop
xor
fists
ror
aas
fstps
enter
pop
into
clc
sub
sbb
fldt
push
ljmp
ljmp
sbb
orb
pop
pop
cmc
int
xor
xor
dec
push
or
pop
add
add
iret
aad
push
cmp
push
dec
inc
and
xchg
mov
pop
add
daa
add
push
aam
scas
push
sub
pop
push
pusha
out
or
int
jne
lahf
jne
xchg
arpl
xchg
pop
mov
test
sub
shrl
inc
fimuls
decl
iret
pop
cwtl
in
cwtl
push
fwait
cmp
sbb
add
dec
fst
movsl
mov
fsubl
lahf
ficomps
add
xor
xchg
inc
or
add
xchg
iret
negl
pop
ss
xor
mov
movsl
push
mov
dec
loop
or
aad
push
mov
mov
test
icebp
dec
test
xchg
push
scas
sahf
or
push
cmp
cmp
shll
cmpsb
dec
mov
sbb
jle
pushf
xchg
hlt
xorb
push
inc
das
pop
pushf
xchg
je
inc
adc
push
fsub
xchg
jae
push
loope
out
ret
adc
loope
xchg
xlat
inc
add
add
jecxz
cmp
dec
fdivp
sub
repz
mov
lea
iret
sub
fldt
xor
aas
imul
cmp
dec
ljmp
xor
fwait
test
cmpsl
in
xlat
add
push
decl
dec
mov
pop
pop
and
loope
imul
cmpsb
call
xor
popf
xor
inc
adc
and
cmp
addr16
push
dec
or
popa
insl
aaa
test
sbb
mov
outsb
fnstenv
es
dec
popf
mov
in
mulb
add
roll
scas
cli
pop
inc
jo
jl
cwtl
sbb
pop
std
gs
pop
fdivl
mov
and
cmp
dec
pop
mov
std
rcr
test
pop
mov
cmp
cmpsb
xchg
pusha
dec
pop
or
sti
jbe
notl
xor
std
lock
divl
stc
fsubrp
inc
das
sti
push
ret
test
std
testl
pop
or
outsb
mov
jle
xlat
push
and
loop
mov
mov
fildll
cmpsb
roll
inc
cmp
mov
push
pushl
in
sar
popa
xor
sub
xchg
push
adc
test
aam
dec
cmpb
push
in
mov
in
and
push
stos
adc
or
insb
decb
and
push
pop
adc
push
fildl
xchg
push
mov
or
push
sbb
lret
or
sbb
outsb
push
adc
mov
popa
aas
push
lret
ret
cmp
fistps
loope
aad
in
xchg
mov
xchg
mov
aad
jecxz
adc
mov
and
call
cmpsl
lock
mov
push
cli
xlat
cmp
sub
dec
enter
xchg
iret
lret
dec
fs
mov
out
inc
fdiv
lock
or
mov
push
add
push
and
out
xor
sub
subl
pminsw
subb
pop
pop
and
arpl
out
mov
xchg
dec
test
shl
jnp
iret
lods
insb
outsl
mov
or
mov
testb
daa
sti
icebp
movb
mov
repnz
jnp
push
pop
xor
or
repnz
lret
xchg
push
xchg
ret
sbb
xchg
test
popaw
andb
sbb
sub
sub
inc
jecxz
mov
pop
mov
push
xchg
lods
mov
xchg
mov
adc
mov
popa
inc
jbe
sbb
incb
push
jge
xchg
cmp
test
mov
dec
lcall
sub
fcoml
pusha
insb
xchg
jns
popa
mov
xchg
xchg
mov
sbb
xchg
add
insl
mov
mov
inc
nop
push
outsb
pop
into
xor
add
js,pt
ss
fisttpl
stos
or
push
cmp
adc
push
fildl
filds
jb
stos
inc
jle
mov
push
xchg
push
fcoml
lods
lcall
movsb
xor
sahf
push
add
or
out
sbb
mov
sbbb
dec
sti
arpl
sub
pop
adc
and
add
xchg
out
mov
push
add
push
xor
adc
cmp
inc
ret
aas
mov
jecxz
mov
sub
leave
pop
jne
lcall
insb
stc
test
cmp
push
shlb
out
dec
outsb
xchg
pop
adc
stos
lods
xorl
jg
fnstsw
sub
sbbb
sub
loop
cmp
mov
cmp
cld
sahf
mov
xor
aad
inc
dec
std
fwait
jno
jmp
adc
mov
ss
jle
xor
xor
add
fstl
insb
stc
mov
pop
stos
shll
jecxz
xor
dec
fldenv
pop
insl
jbe
aam
iret
out
popl
jae
adc
shrb
jbe
sub
xchg
push
movsb
sahf
imul
pop
inc
jbe
lahf
movntps
or
add
xchg
pop
data16
jo
stos
inc
rolb
jmp
cmp
pop
mov
push
mov
movsb
pop
sbb
mov
jecxz
and
enter
sarb
mov
jg
inc
bnd
pop
negb
add
cmp
loope
sbb
cld
out
cmc
insb
push
bnd
pop
insb
shlb
outsl
sbb
aam
fld
aas
leave
inc
inc
das
out
sbb
test
add
outsb
mov
sbbb
jns
xor
subb
sbb
in
dec
repnz
test
add
inc
push
xchg
xchg
cmp
stos
sbb
aaa
xchg
fdivrs
sahf
scas
std
cmp
negl
out
ds
sub
inc
lret
mov
je
int3
mov
sarb
in
xor
repz
insl
scas
jl
xlat
test
pop
pop
jp
jae
inc
pop
arpl
and
adc
mov
push
outsl
repz
mov
jge
sbb
int3
cmp
stos
adc
add
fiadds
setle
add
push
add
loopne
pop
fisubs
pushf
sub
adc
clc
pop
js
ret
es
cs
outsl
enter
mov
mov
or
push
call
lret
pop
ss
arpl
insb
mov
push
inc
lcall
inc
call
dec
lods
push
loopne
mov
adc
xor
jg
mov
pop
adc
push
push
das
mov
loop
lret
aad
cmpsl
pushf
ds
fldcw
jns
pop
inc
push
mov
or
sub
push
stos
mov
inc
lcall
cmpsb
lcall
mov
fcmovnbe
fwait
out
lret
mov
lods
rcll
jmp
mov
mov
pop
jmp
mov
or
mov
lds
fidivl
pusha
nop
shll
push
ret
sbb
and
test
inc
xor
inc
pop
lea
lret
dec
jbe
jo
call
lea
out
add
adcl
mov
xchg
nop
ss
push
dec
aas
enter
ja
xor
dec
pop
outsb
xchg
lods
lret
in
test
int
lret
cltd
push
adc
ret
adc
ljmp
sub
cmp
jle
div
dec
leave
add
xchg
jl
mov
mov
add
pop
xor
sub
fsubl
and
xor
enter
int
add
push
xchg
rcrl
testb
inc
mov
outsl
loop
aaa
inc
imul
out
sub
lret
aam
test
mov
jb
in
popf
add
pop
xor
mull
dec
mov
cmp
fwait
jns
mov
pop
mov
shl
hlt
dec
mov
xchg
mov
cltd
sbb
sti
in
cmpsl
add
mov
inc
jnp
or
jno
and
mov
lea
lcall
inc
jb
ja
mov
mov
rclb
dec
lds
popf
jno
fld1
mov
push
mov
cwtl
inc
lods
mov
push
hlt
icebp
push
or
push
cmp
cmc
pushf
loope
jp
cmp
mov
in
movsb
int
jl
hlt
or
pop
jmp
add
ljmp
mov
jge
dec
mov
mov
fwait
adc
lcall
xor
int
in
xor
mov
jp
lahf
in
lods
es
sti
mov
jns
movsl
push
mov
cmpsb
or
dec
test
int3
push
cltd
and
mov
pop
arpl
fisttpl
xchg
stos
jbe
mov
or
roll
ljmp
mov
out
inc
push
add
mov
mov
insb
mov
xor
and
jne
roll
cli
rep
and
loope
adc
or
push
sbb
fidivrs
insl
stc
hlt
xlat
adc
in
sub
aad
and
sbb
lock
aas
iret
popf
rolb
cwtl
sub
or
cmp
push
push
out
sub
fwait
push
outsb
mov
dec
arpl
push
xchg
roll
pop
or
inc
test
es
inc
push
mov
pop
adc
vmwrite
pusha
sub
pop
repz
sbb
shrl
xor
test
inc
mov
mov
or
mov
or
les
das
mov
cmp
pmaddwd
in
and
xchg
push
sti
xchg
and
mov
xchg
mov
out
pop
push
push
ret
pop
cmpsl
cltd
sub
dec
add
lods
rcl
mov
and
mov
xorl
cld
adc
add
xor
filds
inc
inc
js
fbstp
fisttps
mov
pop
xor
sub
mov
push
push
jo
test
cmpsb
scas
pop
push
dec
out
push
push
push
sbb
sub
daa
test
idivl
add
loopne
jmp
or
cmp
aad
or
pop
and
xchg
dec
push
icebp
pop
popa
test
imul
pushf
or
jae
repnz
push
setne
mov
adc
add
addr16
fs
rol
xchg
mov
pushf
rol
and
fisttpll
push
lea
fbld
sar
loop
xor
push
mov
test
jg
add
sahf
push
jb
fsubrs
dec
xchg
xchg
mov
je
int
mov
sahf
das
or
cmp
pop
fwait
and
lcall
mov
clc
dec
or
inc
or
push
cmc
test
int3
cmp
call
jbe
lret
out
decl
push
adc
jle
jmp
inc
addr16
sub
insb
jecxz
hlt
and
bound
push
inc
sbb
mov
adc
ret
aad
sti
fs
adc
int
or
adc
stos
fadds
loopne
mov
test
call
les
add
lret
aas
je
shl
rcrl
jge
jmp
xor
call
test
mov
popa
js
test
lcall
add
pop
xor
inc
push
je
adc
mov
push
mov
sahf
movb
das
xor
lcall
mov
mov
fnstsw
and
adc
jle
addr16
lds
mov
jnp
pop
into
lods
xchg
jae
in
mov
push
xchg
je
das
xor
lret
loop
addb
dec
pop
ds
das
jle
sbb
push
addb
addl
push
pop
out
adc
add
ficomps
movsl
xor
cwtl
cmp
lock
das
xchg
jl
xchg
stos
clc
scas
xor
mov
out
popf
leave
fistps
fsts
add
cmp
test
dec
adc
outsb
rclb
fistl
jnp
push
jbe
fs
push
dec
mov
and
dec
jbe
scas
ss
jg
inc
fs
mov
adc
dec
jo
pop
sahf
cmpsl
cld
scas
repnz
jmp
inc
nop
mov
sbb
and
sub
ret
pusha
in
add
and
add
and
lahf
sub
popa
loope
mov
sub
mov
mov
mov
mov
fiaddl
movsb
jne
out
in
xchg
adc
push
in
jne
nop
adc
dec
jge
push
inc
std
jne
stos
mov
jnp
mov
sub
mov
jmp
xor
js
sbb
xchg
xchg
jae
mov
loope
jp
out
mov
xlat
insl
inc
ficomps
jecxz
sbb
shll
xchg
inc
rcrl
sahf
lds
test
daa
loop
dec
push
xor
mov
mov
sbb
pop
in
imul
pop
mov
hlt
loope
push
ret
jl
js
lds
push
dec
and
in
out
scas
sub
push
cmpsl
cmp
add
insl
push
adc
enter
scas
sub
cmpsl
cmc
lods
or
test
call
jle
in
adc
xchg
dec
add
or
jbe
mov
daa
add
mov
lock
sbb
or
xchg
pusha
add
aad
ret
xor
out
dec
rolb
adc
aam
bound
pop
xor
xor
jae
lods
inc
add
leave
pop
repz
sbb
stos
ljmp
scas
mov
std
lcall
inc
leave
dec
pop
aad
je
ret
popf
mov
add
cmp
loope
sub
pop
imul
lods
bound
data16
lods
mov
xor
mul
xrelease
fildll
xor
mov
orl
ret
xor
rolb
loope
scas
jle
dec
test
cmp
sub
clc
icebp
mov
xchg
push
test
lods
loopne
push
jg
mov
mov
cs
cltd
dec
jno
fcmovnb
dec
in
les
or
cmp
int3
jp
push
inc
cmp
inc
or
push
or
adc
inc
xchg
sahf
adc
into
xchg
xchg
cmp
lock
je
mov
pop
push
sbb
mov
dec
fsts
mov
repz
sub
loopne
jecxz
adc
notl
enter
push
mov
cmpsl
nop
or
jmp
out
lods
es
push
mov
mov
lds
jmp
and
fs
imul
clc
test
inc
stos
out
rcll
es
loop
cmp
fdivr
mov
ret
ret
lods
dec
and
push
pop
dec
mov
hlt
shll
popf
aas
mov
outsb
xchg
mov
movl
pop
je
out
jl
mov
sbb
xchg
notb
jmp
aad
jae
inc
inc
xchg
aam
pop
test
inc
mov
sub
jo
hlt
sbbl
neg
jmp
xor
lahf
xor
cwtl
mov
push
adc
sub
mov
mov
iret
cmp
jp
mov
mov
add
push
roll
lret
in
scas
insb
lret
ret
jae
xchg
ds
and
push
and
sbb
pop
jle
pusha
out
in
dec
cmp
popa
xorl
and
arpl
insl
sarl
ret
cmp
push
les
enter
pop
js
fmul
pop
and
sbb
ja
mov
jno
aam
in
stc
xchg
icebp
loop
xchg
mov
add
add
pop
mov
imul
mov
fiadds
dec
ret
jp
icebp
dec
loop
mov
ds
int
sarb
ja
stc
sbb
movsl
push
jl
insb
gs
adc
out
cltd
leave
mov
add
mov
imul
imul
mov
add
pop
xchg
sub
dec
or
ret
cmp
lret
xchg
sub
cwtl
xchg
iret
sahf
sti
pop
stos
and
cmpsl
and
outsl
cmp
mov
mov
fdivrp
stc
lahf
cmp
pop
sub
das
lods
aad
repnz
inc
mov
dec
pop
mov
inc
testl
add
out
pop
jns
repz
fisttpll
int
dec
xor
fwait
sub
push
in
scas
push
jl
das
dec
out
sub
mov
fiaddl
lods
rclb
push
add
bound
aas
jmp
jbe
push
push
test
push
movsl
dec
inc
setb
dec
ss
in
fsubl
scas
pop
fldl
jmp
xorl
data16
das
mov
ss
sub
jl
dec
sahf
and
xchg
adc
popa
mov
iret
mov
push
mov
insl
aaa
popa
adc
movsl
ja
insl
push
es
mov
pop
pusha
addr16
inc
jmp
mov
jmp
mov
std
adc
fdiv
cmp
aaa
fisttpl
outsl
push
lret
popa
jmp
cltd
insl
out
adc
arpl
lods
pop
loopne
push
filds
ffreep
dec
jg
movsb
arpl
push
clc
jo
xchg
movsl
sub
mov
daa
push
jmp
hlt
pop
jmp
inc
scas
idivb
orl
lcall
movsl
sub
jg
push
cmp
mov
rorb
xlat
adc
cmp
fnsave
inc
jp
lea
std
shll
movsl
out
inc
cmp
rcrb
daa
mov
cmc
xchg
out
sub
cmp
cltd
mov
scas
push
sub
push
stc
or
out
pop
jbe
pop
out
insl
jg
fmull
mov
ss
pop
vhaddps
rcrb
scas
ficomps
imul
in
sub
mov
and
imul
js
mov
scas
outsl
mov
and
aam
dec
jne
sbb
shrl
loop
or
push
sub
jp
shr
gs
or
jmp
mov
xchg
sbb
jge
pcmpgtb
daa
ss
cmpsb
jp
push
mov
push
dec
outsb
adcl
mov
and
sbb
out
cmpb
xor
int
pop
outsl
inc
adc
aaa
imul
sbb
insb
mov
lret
inc
inc
icebp
xchg
jl
sbb
dec
outsl
seta
jbe
xor
cli
imul
dec
adc
fsubrl
pop
dec
ror
scas
pop
popf
and
data16
fidivs
adc
gs
pop
pop
mov
inc
clc
pop
pandn
sub
in
mov
push
in
add
xchg
pop
inc
jmp
outsl
and
into
jno
mov
inc
mov
test
ja
mov
pop
loope
mov
call
ss
imul
add
pop
jnp
imul
aaa
and
xlat
sub
mov
movsb
stos
add
fisttpll
xor
lahf
push
lods
ss
sbb
mov
inc
call
repnz
pop
dec
push
mov
out
mov
repz
cltd
adc
or
cmp
shlb
cmp
je
xor
stos
pop
dec
push
lret
inc
jle
testl
mov
mov
push
ret
sahf
cmp
mov
pop
mov
scas
xchg
pop
test
movsb
dec
pop
mov
cmp
push
mov
test
loop
sahf
adc
mov
int
dec
call
jns
xchg
out
jge
test
aaa
adc
aaa
sar
push
mov
cwtl
gs
lahf
fidivrl
inc
or
fnstsw
mov
jne
jo
nop
cmp
add
mov
add
insl
pop
cwtl
jo
xor
mov
push
fiaddl
add
test
fists
cmpsb
int
xor
push
add
mov
mov
sub
push
mov
data16
sbbb
push
mov
andl
repz
mov
ds
xor
popf
cs
xchg
sbb
jecxz
add
pop
or
xchg
inc
mov
in
jns
movsb
and
insl
add
mov
dec
xor
dec
insb
loope
das
or
gs
mov
insb
js
sbb
or
fucomp
sbb
insb
xchg
rcl
imul
orb
flds
nop
test
dec
in
mov
shlb
pop
leave
sub
ret
popf
adc
lahf
add
sbb
xor
and
call
out
icebp
and
fsubrl
xor
pop
jae
aas
mov
jbe
jmp
or
pop
mov
subb
inc
pop
xor
test
mov
test
mov
mov
inc
sbb
mull
push
jae
xor
add
xchg
enter
fs
enter
dec
xchg
lahf
sbb
inc
sbb
fists
mov
xchg
jp
adc
pop
pop
cmp
adc
cmp
xchg
xchg
cmc
rol
and
lods
mov
pop
jl
xor
aas
inc
fidivl
jae
inc
push
xor
adc
fdivrs
inc
pop
fucomip
inc
and
mov
aam
shll
pop
aam
mov
jnp
lcall
xor
cwtl
adcl
xchg
push
or
adc
jge
or
sbb
and
dec
jae
dec
jae
adc
dec
clc
jns
stos
insb
pop
repz
push
stos
test
leave
adc
dec
mov
push
lock
dec
add
jg
fldt
xor
loopne
rcl
xchg
sbb
aas
mov
add
outsl
test
inc
sbb
push
inc
cmp
int3
sbb
cmpsl
hlt
into
outsl
jnp
xchg
out
push
xor
jo
por
push
and
call
ret
xor
adc
sbb
imul
inc
test
lcall
inc
adc
push
mov
test
jle
sub
add
xlat
push
add
xor
pusha
cmp
mov
popa
push
loope
sub
in
mov
lahf
cwtl
cmc
cwtl
add
test
mov
lcall
cli
lcall
mov
pop
cmp
dec
mov
push
mov
cmp
mov
push
rcll
jnp
sub
jg
mov
insb
mov
jb
stos
rcrl
mov
or
sub
rorl
js
adc
jns
dec
sti
ret
in
mov
mov
push
pop
fdivrl
fcoms
lret
mov
and
iret
xor
aad
add
dec
xchg
jge
mov
clc
mov
into
jl
sbbl
xchg
bound
cmpsl
push
sbb
roll
push
pop
ds
popf
mov
rep
mov
sbb
inc
dec
lcall
fiaddl
push
inc
mov
pop
jl
outsb
mov
fs
das
lret
outsl
iret
dec
xchg
mov
mov
dec
dec
cmpl
in
sbb
sub
or
pushl
les
sbb
pop
push
nop
rcll
xchg
mov
jb
xor
mov
jno
push
aas
leave
inc
aam
inc
dec
cmp
fstpt
jno
mov
in
cmp
cmp
bnd
addl
inc
mov
inc
pop
jle
cmc
sbb
adc
push
in
push
ds
cmp
adcb
jle
loopne
fxch
out
dec
pop
mov
dec
mov
ret
fs
stos
jb
mov
out
repz
jp
xchg
leave
or
pushf
push
loopne
xchg
out
lds
ffreep
add
test
xor
les
jge
jp
jle
lret
mov
push
and
push
xor
and
mov
mov
fdivrs
imul
inc
int3
jecxz
stos
mov
roll
jecxz
hlt
jbe
loop
movsl
dec
insl
adc
cmpsl
lret
ret
pop
and
das
in
aad
jmp
insb
lock
loopne
xchg
cmp
fnstsw
stc
jecxz
xor
loop
pushf
pop
mov
sbb
xchg
mov
mov
mov
imul
xchg
jg
mov
aam
rcrl
cmp
and
xchg
ljmp
mov
aas
mov
fstp
fwait
add
int3
adc
ljmp
std
pop
js
xor
sti
cmp
ja
push
subb
fxtract
add
add
pop
mov
sbb
dec
addr16
fidivrs
shll
repz
aam
xchg
push
pop
fdivr
dec
jo
loope
out
in
mov
outsb
adc
mov
aas
fisttpll
lret
or
sarl
popl
lret
cmp
sub
xchg
pop
roll
addb
dec
sbb
mov
stos
icebp
cmpsl
xchg
pop
sub
mov
insl
cmpsb
mov
js
mov
insb
lods
xlat
mov
dec
jg
js
inc
faddl
lea
sub
or
sub
mov
dec
dec
xlat
add
cmp
lret
cmp
lea
pop
mov
movsl
std
lods
dec
sarb
mov
out
ds
push
pop
jge
mov
dec
nop
movsb
and
jecxz
cli
cmp
push
pushf
xchg
add
xchg
inc
stc
in
shlb
pusha
or
leave
cmp
test
cmc
fwait
dec
aas
enter
in
sbb
ljmp
cmp
bound
rcrb
fwait
gs
pause
jns
ret
mov
into
data16
xor
nop
sti
mov
dec
lods
jno
and
xchg
icebp
sbb
or
sti
arpl
jbe
push
fisttpll
mov
pop
jne
adc
jle
adc
xchg
jno
lret
push
popw
ss
xor
push
xor
scas
inc
nop
mov
insb
pusha
and
mov
les
fisubs
mov
xchg
cld
and
ret
push
orb
inc
gs
or
jge
or
xchg
xor
add
int
push
pop
rolb
sub
and
fwait
dec
mov
repnz
sub
out
xchg
mov
clc
sbb
pop
adc
mov
fistl
and
fs
cli
scas
outsl
dec
add
sbb
inc
fwait
add
cli
mov
dec
or
sub
jb
sahf
shll
pop
and
popf
adc
push
push
mov
jno
jo
jnp
subb
lea
fwait
xor
les
xchg
jae
leave
mov
or
xchg
cli
add
pop
ja
into
jp
divl
sub
mov
xchg
popl
lods
insb
push
hlt
cmc
mov
sti
pop
pushf
xchg
xor
xor
xor
arpl
imul
xlat
and
call
das
shrl
adc
imul
jge
adc
cmp
jnp
mov
add
cld
jb
pop
scas
fistl
xchg
test
addps
testl
cld
xor
in
jne
mov
lret
mov
jmp
or
push
test
cli
dec
clc
je
test
inc
fxch
xor
cmp
inc
mov
sahf
test
jns
sub
in
insl
sahf
or
std
sbb
add
sub
xchg
dec
dec
cmp
lahf
loopne
shrb
in
in
gs
aad
lcall
mov
cmp
add
out
movsl
out
ret
or
xchg
mov
mov
ret
jnp
lea
je
dec
les
or
add
jb
mov
dec
xor
test
sarl
mov
push
dec
sarb
mov
pusha
rcll
insl
lock
roll
cmc
orb
mov
jbe
pusha
jno
sbb
inc
jl
lds
mov
test
or
mov
iret
or
mov
lock
cs
hlt
movhlps
and
sti
mov
mov
push
sbb
sbb
fwait
std
push
ljmp
pop
jnp
mov
jbe
mov
mov
push
loop
lcall
xchg
int3
leave
and
ds
push
inc
inc
dec
int3
test
mov
outsl
ja
hlt
ljmp
fnstcw
mov
push
sbb
add
adc
xlat
les
orl
sbb
lret
testb
leave
call
orl
popf
rcl
mov
or
lcall
popl
popf
imul
lock
inc
mov
out
mov
jmp
push
cwtl
cmp
mov
fwait
cwtl
add
enter
fwait
out
xor
push
pop
and
sub
loop
sbb
andb
or
idivb
data16
das
dec
push
pop
pushf
std
cmp
xchg
lods
sbb
jecxz
pop
out
aaa
ds
ss
sahf
adc
mov
dec
or
mov
lret
mov
push
pop
into
mov
orl
mov
stos
mov
lock
inc
push
andl
jecxz
dec
or
xchg
cmpsl
not
pop
add
shll
es
orl
push
sub
lock
adc
xchg
stc
lea
push
xchg
xchg
push
add
test
mov
int
in
xor
imul
mov
enter
mov
call
jo
aad
fs
mov
sbbb
or
lds
lods
gs
iret
arpl
mov
stos
stos
or
cmp
loop
fbstp
or
movhps
stos
loopne
sahf
sub
push
sub
ret
push
pop
mov
push
dec
dec
fcomip
sub
lock
dec
repnz
adc
mov
into
push
sub
jo
push
cmp
hlt
cli
jmp
or
int
push
dec
add
dec
jae
aam
cld
cmp
adc
mov
add
fmull
pop
push
push
add
dec
movsl
arpl
daa
fcmovb
xchg
loopne
shll
fdivr
jb
pop
fwait
sub
lods
pop
in
mov
and
xchg
sub
shrl
lea
mov
xor
mov
dec
push
inc
loopne
int3
testl
xchg
fs
insl
int
cli
xlat
fisubrs
loope
cmp
ds
push
scas
daa
les
dec
in
mov
jle
xchg
aam
mov
jmp
push
cld
add
adc
adc
cmp
sbbb
mov
cmpsl
xor
mov
aaa
test
imul
test
xchg
sbb
dec
and
dec
or
mov
in
xor
leave
cmp
shlb
lcall
popf
les
add
sbb
fistpll
mov
in
mov
lret
shlb
in
enter
out
adc
inc
lds
inc
ret
mov
add
sbb
jns
gs
enter
or
or
aam
rcll
inc
stc
leave
cwtl
js
and
icebp
mov
fmull
cmp
mov
dec
cltd
sub
cmpsl
in
idiv
pop
ljmp
adc
test
inc
das
aad
pop
mov
jmp
sbb
sbb
sub
mov
cld
jecxz
adc
test
jo
push
jne
pop
mov
cmp
push
add
add
insb
mov
outsb
jp
fs
popf
mov
cmp
xor
jae
add
test
insb
xor
mov
or
inc
movsl
sbb
aas
loopne
adc
shr
pop
loope
in
mov
movsb
mov
bnd
jo
xchg
dec
sub
mov
or
jno
stc
test
sbb
xchg
pop
lret
fisubrs
outsl
jmp
push
cmp
popf
insl
and
jg
mov
fs
mov
mov
xor
xor
mov
jmp
jne
rcrb
xchg
lahf
test
arpl
xor
jne
imul
mov
cmp
xor
in
sub
fisubl
in
or
cmp
push
cmp
pop
jae
int
mov
das
jle
mov
push
sub
fistpll
hlt
jbe
or
cmp
mov
mov
or
roll
pop
iret
dec
out
daa
rolb
xchg
inc
fprem1
insl
mov
mov
inc
faddl
and
out
mov
xchg
in
shrl
hlt
lret
mov
xor
push
pushw
orl
push
idivb
lret
cmp
dec
and
jo
in
inc
push
xor
inc
movsl
mov
shll
cmp
jo
pop
pop
mov
test
add
repz
dec
int3
stos
ret
xor
pop
pushf
fists
aad
mov
and
ret
shr
rorl
cmp
push
ljmp
sbb
pop
xor
clc
xlat
outsl
adc
call
push
pop
sbb
add
mov
xchg
sbb
dec
inc
jle
mov
push
push
cli
pusha
movsl
pop
mov
xor
push
sti
adc
gs
jg
mov
add
push
orl
jecxz
jbe
add
or
repz
xchg
int
jmp
mov
sbb
lahf
jg
dec
and
fwait
in
rorb
call
jp
out
lods
out
push
icebp
out
cwtl
dec
cmp
and
cmc
iret
push
in
ja
jp
popa
push
or
adc
mov
dec
push
dec
shrl
xchg
imul
dec
mov
aaa
push
cmp
out
pop
pusha
mov
addb
sbb
sbb
hlt
dec
cltd
mov
ss
int
ret
sbb
mov
xor
insl
sahf
or
decl
data16
push
or
loopne
xor
aad
fwait
push
cmp
mov
pop
pushf
psrld
lcall
lcall
mov
xchg
add
aas
repz
das
mov
mov
into
mov
mov
cs
orl
push
pop
cli
mov
xor
dec
fnsetpm(287
lahf
mov
dec
cmp
aad
test
mov
sbb
movsb
test
popa
lret
pop
dec
in
or
fwait
js
pop
mov
push
je
xchg
sbb
inc
push
jl
or
mov
dec
push
cmp
loop
stc
data16
cwtl
add
push
dec
jae
scas
add
aam
cmp
mov
mov
and
aam
push
cld
imul
es
jmp
imul
cld
adc
addr16
mov
sbb
inc
daa
mov
movsb
pop
je
mov
cs
adc
pop
mov
lock
xlat
shlb
imul
popa
hlt
rcll
jo
mov
in
sbb
mov
fiaddl
mov
dec
or
lods
shlb
popf
add
add
inc
popa
sub
sbb
cmpb
sbb
jge
movsl
lds
add
xor
dec
lea
xchg
ret
cwtl
sbb
cmp
into
pusha
and
lcall
scas
mov
pop
xor
psubusw
daa
add
dec
fildll
sbb
dec
and
aam
test
mov
or
fisttpll
xchg
jl
test
lods
repz
and
push
sbb
push
sti
push
clc
in
sbb
jge
daa
sub
inc
mov
fisttpl
adc
pop
pop
lock
mov
scas
scas
arpl
shlb
sub
inc
adc
int
fnstenv
push
rcl
push
xor
dec
and
xor
pop
imulb
fistl
pusha
jb
enter
cwtl
jae
push
mov
in
mov
test
pop
movsb
inc
popa
leave
js
push
push
jp
cli
int3
push
cli
pop
pushf
in
xchg
rcl
cmpl
inc
sbb
or
jle
jb
mov
pop
add
imul
pop
jecxz
pop
popa
push
sti
add
mov
gs
mov
cld
mov
xchg
sub
mov
dec
lds
sub
in
comiss
inc
add
out
lret
fwait
std
iret
sub
adc
push
in
popa
sbb
flds
fidivrs
daa
sahf
sbb
shrl
mov
mov
sbb
push
test
xchg
mov
movsl
hlt
mov
out
sub
es
mov
insl
cld
sub
fnstenv
mov
and
in
sub
test
rcrl
xchg
fs
fwait
cmpxchg
lods
fadds
push
mov
pop
inc
lock
std
push
and
in
cltd
inc
dec
stos
decb
fildll
repnz
jnp
jb
pop
inc
pop
in
jne
js
fidivrs
cwtl
mov
test
pop
imul
adc
test
jne
and
ficoms
movl
repz
cmp
mov
mov
dec
add
iret
xor
cmpsl
sbb
jg
push
pop
inc
jns
or
mov
push
mov
jle
xor
lods
sbb
mov
ljmp
push
xor
stos
imul
leave
add
repnz
jle
or
hlt
xor
mov
dec
dec
jns
scas
add
add
lcall
push
inc
or
inc
bound
mov
nop
stos
rcr
inc
xor
inc
cmpl
push
mov
jno
aas
mov
xor
aas
rclb
and
shlb
lock
push
std
mov
es
xchg
or
inc
adc
rorb
lahf
xor
and
in
inc
ljmp
pusha
aad
xor
sub
sti
push
cmpsb
cmp
adc
movsb
pop
jl
xor
insb
icebp
dec
iret
fsubrl
out
sub
shrl
aam
icebp
test
add
loop
push
aas
adc
mov
out
adc
shrb
adc
jne
jnp
loopne
das
popl
pop
push
add
movsb
pushf
jle
mov
add
fmuls
fldcw
es
mov
xor
icebp
inc
inc
adc
cmp
adc
scas
bound
and
fwait
inc
inc
faddl
jecxz
in
pop
cmpsl
pop
xor
std
out
sub
cmp
add
push
outsb
negl
push
aaa
cmp
sub
ds
out
push
jecxz
es
pop
nop
mov
in
push
mov
push
mov
movsb
ja
pop
or
xchg
cltd
into
es
mov
pop
cmpsl
jl
adc
mov
outsb
xchg
bound
aaa
loope,pt
lcall
int3
mov
cwtl
cmp
ret
in
or
cld
insl
daa
jns
xor
jl
dec
daa
xor
pop
and
les
inc
cmpsb
lea
lds
aam
cmc
add
call
outsl
jge
push
jns
scas
push
xor
jnp
cmpsl
dec
dec
pop
mov
bound
shl
into
arpl
out
data16
xchg
mov
or
gs
fcoml
rcl
jae
and
xchg
into
negb
lret
scas
sbb
or
roll
fstl
jle
in
popa
icebp
adc
xor
movsb
addr16
imul
imulb
pop
scas
dec
aas
push
push
jp
andl
cmp
jmp
aaa
cmpsb
pop
cmp
fsubrs
call
aad
scas
shll
mov
clc
les
sbb
sub
fidivrs
mov
sub
cmpsb
pop
inc
inc
in
out
insl
dec
inc
das
nop
and
cmp
mov
aaa
mov
loope
in
dec
push
call
testb
mov
lock
mov
ficoms
sub
pop
push
jmp
addr16
pop
pop
or
mov
mov
test
cmc
sbb
fisubs
push
mov
scas
jg
in
in
out
popf
lret
or
inc
xchg
and
lahf
cmp
or
xchg
or
rorb
sbb
sar
mov
push
orl
jge
xchg
pop
push
cltd
xor
fs
push
xchg
fwait
pop
movl
test
outsb
bnd
aad
fstl
add
dec
mov
cli
sbb
loop
and
popa
aaa
pop
or
mov
into
decl
cmc
mov
cld
push
or
sti
push
cmp
outsl
out
pop
pop
mov
sub
mov
mov
pusha
shll
stc
pop
test
or
shrl
cltd
push
jae
jg
xchg
fistpl
or
mov
add
mov
int3
mov
cli
pop
xchg
push
add
lret
pop
daa
adc
divb
mov
in
adc
mov
cmp
inc
test
popf
inc
icebp
push
mov
lret
sbb
lds
lds
mov
pop
lods
inc
jns
mov
arpl
push
loopne
cmp
xor
out
dec
mov
xor
mov
fists
jno
cmp
push
stos
or
mov
fdivs
gs
stos
jp
frstpm(287
icebp
pop
insb
mov
int3
insb
jg
orl
mov
cmpsl
dec
or
sbb
iret
cmp
xor
push
pop
aad
fmull
ret
cmp
mov
jle
mov
stos
int
imul
push
test
leave
xchg
out
mov
pushf
nop
fwait
xchg
jo
repz
mov
xchg
pop
or
loope
int3
and
jecxz
pop
sbb
jns
jmp
sahf
stos
sbb
inc
cltd
mov
std
xor
lods
in
test
mov
jne
lds
xchg
scas
mov
dec
iret
mov
sub
mov
xorb
jo
push
cmpsl
pop
mov
test
fdivrs
lds
cs
rcll
xor
mov
add
aad
js
scas
cmp
mov
test
xor
mov
add
xor
mov
movsb
rorl
ss
fisttps
movsb
pop
insl
jne
repnz
dec
sti
fs
jge
jp
pop
lods
imul
and
mov
fisttps
push
movswl
jl
push
addb
push
pop
call
fildll
insl
scas
or
nop
pusha
lahf
push
hlt
movsl
pop
lds
jp
pop
mov
pop
push
mov
fstl
gs
pop
or
sub
or
xchg
test
push
dec
push
jmp
out
or
test
add
cmp
xor
cmp
xor
in
xor
ja
or
jge
outsb
inc
and
in
add
inc
mov
add
or
adcl
jle
add
imul
xor
sbb
subb
fs
out
popa
sbbl
shlb
inc
dec
lahf
fxch
mov
mov
push
xchg
mov
cmc
fs
jbe
mov
hlt
outsl
fcmovb
je
ljmp
imul
jne
and
aas
xchg
adc
scas
mov
and
out
mov
lods
cmpsl
popf
jnp
mov
sbb
stos
mov
mov
push
and
dec
pusha
mov
inc
or
jle
xchg
leave
fisubrs
sub
ror
push
sbb
or
add
adc
add
int
push
icebp
sahf
pop
push
dec
push
mov
fdivrs
aaa
test
in
shll
push
mov
icebp
in
sbb
scas
sub
xchg
rcll
add
sub
mov
add
mov
ss
ss
cli
add
shrb
dec
lahf
jle
iret
or
mov
sbb
add
ret
ret
pop
xlat
mov
hlt
and
mov
rol
jbe
ret
mov
test
jge
or
rorb
test
cwtl
jnp
push
shlb
mov
cmp
xlat
into
cmp
dec
pushf
fcmove
shrl
adc
aam
mov
xchg
sbb
or
mov
movsl
sar
subl
sub
and
sub
loop
ljmp
mov
sub
sub
test
mov
mov
notb
lret
mov
test
pop
jns
or
adc
dec
mov
cmp
movsl
dec
popf
ret
push
cmpsb
dec
jp
and
hlt
cmp
lods
lds
sbb
xchg
push
cmp
mov
cld
test
mov
push
jnp
push
xor
sbb
insl
jmp
pop
push
jle
mov
xor
rolb
push
adc
push
push
scas
dec
out
pushf
jo
jmp
lahf
insl
inc
and
ss
sbb
xchg
roll
add
mov
push
inc
addr16
fidivs
stc
jb
lret
lock
push
ret
pop
cmp
lock
sti
dec
push
mov
pop
add
push
call
sub
jne
fidivrs
adc
cli
popa
stc
inc
xchg
or
mov
setbe
xchg
push
cwtl
popf
mov
pop
or
push
sbb
mov
out
dec
mov
ss
jmp
into
sti
mov
dec
inc
lret
aaa
xchg
xchg
add
jl
sbb
lahf
pop
das
cmc
jne
add
sub
shrb
fcoml
push
ljmp
xchg
xor
inc
dec
out
sarl
pop
add
loop
xor
loop
loopne
mov
repz
mov
jmp
test
dec
cmp
out
or
fstpt
lods
stc
lods
cltd
loope
cmp
add
dec
je
inc
cli
push
lcall
xor
xchg
repnz
xchg
ret
in
sub
das
and
stos
adcl
and
mov
sbb
das
add
pop
in
mov
les
loop
mov
sub
mov
push
mov
or
jp
mov
mov
xchg
cmp
int3
in
push
pop
mov
mov
mov
dec
mov
sbb
popf
rcl
dec
mov
popf
jmp
xor
jecxz
jbe
push
inc
pop
mov
jg
inc
aam
sbb
mov
lea
jbe
mov
lret
and
cmp
in
test
inc
xchg
pop
inc
ss
test
dec
or
mov
fs
sbb
loopne
sub
rcrb
es
pusha
test
push
aad
popa
daa
subb
sbb
push
mov
icebp
cltd
push
sbb
dec
push
negb
and
push
pop
mov
test
push
jp
sbb
cltd
sbb
scas
fisttps
push
sub
fidivl
movsb
or
ficoms
subl
add
fsubs
loopne
lods
and
shrl
or
lods
pop
mov
repnz
sub
jns
mov
sub
inc
xchg
pop
adc
push
mov
mov
xchg
mov
adcb
push
mov
mov
dec
sti
jnp
pop
ja
push
xchg
sub
gs
fbld
fnstsw
idivb
pop
jne
stos
xchg
pop
popa
adc
js
sarb
jecxz
and
add
adc
lahf
cmp
mov
std
mov
lods
or
mov
push
push
xchg
lods
cmp
xchg
iret
adc
in
fmuls
pop
dec
pop
sub
lock
sub
xlat
enter
sbb
push
loop
dec
gs
lcall
cmp
mov
or
xchg
lahf
xchg
jecxz
pop
fs
mov
push
mov
sbb
rcrl
pop
rolb
add
adc
movsb
push
out
rclb
test
out
inc
cmp
sub
and
fistps
xchg
xor
lret
push
pop
ljmp
and
dec
xor
icebp
or
jns
mov
lods
and
loopne
push
cmpsb
cmp
aas
popa
aas
mov
mov
in
scas
jge
dec
lock
mov
dec
jecxz
mov
mov
fists
inc
call
out
xchg
cmpl
ss
shr
aaa
mov
lahf
inc
jae
je
sbb
sbb
and
shlb
stos
push
adc
xchg
or
aad
push
xchg
sarl
sub
int3
push
sub
adc
fadd
repnz
push
das
push
shll
or
mov
pop
mov
push
pop
xor
jae
mov
xchg
mov
outsb
push
mov
push
orb
rcrl
into
pop
lret
or
pop
dec
repz
mov
mov
stos
xchg
fisubrs
stos
sbb
jbe
jne
xor
cli
pushl
fsub
add
add
cmp
jne
lods
mov
das
jbe
jbe
pop
inc
push
inc
mov
jmp
mov
pop
xor
mov
jge
mov
mov
aad
add
sub
jecxz
sbb
call
mov
cmp
lods
jns
cmpsl
ljmp
jmp
mov
sbb
mov
sbb
es
pcmpeqb
int3
dec
mov
pop
xchg
xchg
jns
mov
addr16
rdtscp
and
xlat
pop
addr16
or
leave
sub
xchg
xchg
adc
mov
ds
jo
insl
in
lock
mov
lcall
cmp
fcomp
and
cmp
lret
xchg
jle
sbb
outsb
inc
jl
cld
mov
dec
push
mov
ficompl
xor
out
and
lock
xchg
mov
aaa
leave
mov
and
icebp
daa
inc
nop
outsb
into
push
push
and
fwait
aaa
push
mov
ret
dec
xor
inc
shl
shll
mov
popf
lods
cmp
or
daa
pop
sti
mov
cmp
jo
xorb
sbb
nop
aam
ljmp
and
xor
xor
cld
pop
adc
xor
outsl
adc
cmp
daa
pushf
lcall
aaa
lcall
push
sub
dec
cmpsl
les
pop
icebp
cmp
inc
inc
cld
add
xchg
xchg
mov
mov
cmc
in
lock
add
mov
jecxz
inc
loope
mov
in
mov
or
mov
lahf
jno
cmc
mov
stc
pop
pop
loopne
or
iret
push
and
cmpsb
int
lods
xchg
bound
addr16
mov
ds
outsl
mov
hlt
incb
sbb
xor
adcl
stos
add
mov
mov
sub
rcrb
mov
jne
and
icebp
out
leave
aas
push
outsb
sbb
xchg
imul
cmpb
out
or
or
push
cmp
lock
add
pop
movsl
adc
cmp
sub
fnsave
and
lds
mov
adc
ja
lea
addl
jecxz
loopne
or
xor
jno
jmp
mov
sahf
sub
mov
add
icebp
aam
cltd
jno
jl
js
sbb
adc
and
xchg
xor
out
divb
sub
jge
gs
mov
ja
dec
fsubl
mov
in
sahf
movsl
cmp
and
jmp
ljmp
mov
data16
xor
imul
inc
repz
inc
dec
in
lahf
fsubrs
sbb
sub
movsb
jecxz
pop
sahf
int3
and
push
into
call
leave
pop
pop
fistpll
and
cld
mov
rcll
pop
pop
mov
ja
pop
add
dec
cmp
push
jae
out
xchg
out
aas
imul
outsl
test
dec
inc
in
roll
or
fsts
xor
mov
mov
test
call
cmpsb
sub
dec
call
push
cltd
nop
cmp
push
or
or
sub
sarl
idivb
adc
mov
mov
insl
or
or
xor
push
in
cltd
shrb
insb
ljmp
or
or
sub
ja
insl
cmpsl
mov
hlt
loope
divl
adc
jecxz
hlt
sub
enter
mov
xor
or
in
leave
pop
loope
imul
scas
fiadds
cmp
jmp
shlb
adc
aad
jae
xlat
pop
stc
push
inc
cs
jecxz
pop
pop
sbb
sbb
dec
dec
xor
pop
lret
add
and
pop
mov
or
dec
sub
lods
es
sbb
pop
ja
push
push
xchg
pop
fs
pop
pop
lcall
pop
ret
cli
repz
cmpsb
sti
xchg
cli
fistpll
fcmovne
add
inc
pop
pop
les
mov
xchg
mov
ret
mov
xor
push
dec
sti
dec
sarl
sbb
aad
pusha
insb
jmp
rcrl
or
push
ds
push
clc
cmp
xchg
ds
lret
dec
mov
icebp
inc
fs
jl
pop
mov
daa
mov
dec
dec
or
mov
inc
sbb
cltd
into
jo
xchg
cmc
cmp
outsl
int3
mov
in
cli
les
mov
fmull
mov
pop
pop
mov
nop
and
cmc
dec
dec
outsl
dec
fistpl
stos
push
push
mov
ret
sbb
jno
loopne
jae
imul
lods
mov
sahf
mov
adc
mov
dec
add
out
and
cmp
outsl
push
sub
mov
and
jge
cwtl
ret
lods
sbb
add
je
cltd
out
mov
decl
xlat
lods
je
test
fdivrs
cwtl
lock
add
jg
packuswb
push
mov
pushl
pop
sbb
xchg
add
imul
cmp
es
pop
mov
lock
push
inc
add
inc
push
xor
bswap
fs
psubusb
cmp
mov
sbb
je
xchg
dec
lds
cmp
out
daa
fidivl
xchg
ds
fsubl
addb
loope
jge
xchg
ja
sbb
movsl
dec
lods
into
ss
sbb
out
sbb
jg
jno
sub
gs
out
push
mov
loope
test
imul
adc
jecxz
xlat
xor
push
push
xor
repnz
cmp
outsb
arpl
fbld
jl
inc
or
sub
jecxz
rcl
sbb
pop
jg
clc
pusha
xor
shll
pop
stos
in
mov
mov
inc
ror
jo
cmp
xor
ror
shll
cmc
enter
cmc
add
ss
out
aaa
pusha
ds
inc
mov
mov
in
inc
ljmp
orl
push
inc
sub
jno
pop
popa
cmp
push
mov
adc
mov
jno
aam
int3
je
xchg
add
insl
xchg
es
data16
fisttpll
pop
cmp
sbb
fistl
cmp
insb
xor
mov
mov
cmc
push
sbb
mov
cwtl
loop
pop
neg
xor
dec
mov
inc
ret
repz
test
scas
adc
test
in
sbb
adc
dec
fcoms
mov
inc
pop
insb
loopne
jae
adc
xchg
sahf
add
lret
cmp
sbb
out
pop
inc
cmp
jl
xor
popf
fisttpll
stos
mulb
dec
scas
xor
jmp
jo
mov
xor
andl
inc
dec
ret
loopne
mov
lds
adc
ficoml
std
sahf
add
mov
cs
rcl
push
fbld
sbb
mov
cld
jle
sub
cmp
jge
xchg
lret
xchg
loope
add
int
sub
or
popf
shlb
stos
xchg
in
sub
mov
push
ss
xchg
into
push
clc
cs
mov
or
test
jno
jg
subl
icebp
lret
ret
popf
nop
sub
mov
inc
sti
xlat
in
aad
dec
lock
pop
aaa
push
test
lea
movsb
push
mov
out
addr16
outsb
pop
dec
ja
test
push
mov
push
mov
sahf
adc
xchg
dec
pop
push
mov
es
lret
and
mov
jb
xchg
xor
pop
add
pop
fsubs
push
fimuls
js
int
imul
sub
jno
xchg
pop
cmp
popf
stos
int3
mov
push
out
aad
push
xchg
repnz
adc
stos
cli
cli
daa
sub
popa
adc
push
jle
cwtl
push
stc
imul
sub
jmp
mov
mov
xorb
mov
xchg
js
mov
push
jp
aad
out
dec
mov
dec
icebp
cmp
popa
mov
inc
cmpsb
int3
lods
ret
in
pushf
cmpl
enter
or
mov
ljmp
test
pop
sub
push
mov
mov
mov
fs
mov
fcmove
or
in
add
test
push
out
bnd
mov
mov
es
sub
dec
fnstcw
inc
daa
shlb
mov
inc
lock
dec
mov
mov
sub
cwtl
xor
sbb
testb
mov
inc
or
inc
lods
jbe
dec
inc
scas
mov
jo
or
call
or
jae
push
fisubrs
data16
xor
add
and
xor
mov
fstpt
push
mov
jo
not
into
jp
mov
loope
cmp
test
mov
jle
dec
sbb
hlt
dec
arpl
sub
rcl
jmp
adcb
sbb
jne
add
hlt
mov
pop
fdivs
cmpsl
pop
mov
cmc
call
stos
sub
outsb
testb
xchg
mul
jp
jle
xchg
push
outsb
lock
add
out
push
stc
dec
add
mov
jb,pn
loop
lock
dec
sbb
mov
jmp
lret
cmp
inc
mov
cmp
xchg
mov
test
ds
pop
je
jge
pop
aad
fadds
mov
add
andb
in
mov
sbbb
popf
and
xor
ja
mov
jge
mov
bound
mov
mov
mov
repnz
shlb
mov
cld
pop
repnz
fdivrs
test
push
rorl
mov
xchg
outsb
pop
enter
add
movsl
lcall
cli
fldt
je
data16
dec
dec
addr16
dec
push
mov
outsb
mulb
xchg
rclb
sbb
add
sahf
xchg
shrl
pavgb
fwait
push
aad
sbb
xchg
mov
nop
aam
mov
outsb
into
test
and
nop
mov
fs
xor
shlb
mov
mov
enter
mov
add
loopne
inc
jbe
ret
test
and
insb
out
dec
xchg
mov
icebp
mov
inc
adc
lock
inc
push
xchg
push
dec
mov
pusha
pop
lods
imul
iret
cltd
inc
adc
jbe
iret
pop
leave
cmp
sub
push
aas
and
bound
test
mov
inc
cwtl
std
cltd
fiadds
push
lods
fs
add
popa
out
test
xchg
cwtl
dec
add
sbb
xor
loop
mov
and
dec
jnp
pusha
outsb
popa
jno
cwtl
push
push
std
lret
repz
and
ja
jnp
xor
fwait
push
mov
test
inc
popa
imull
movsl
inc
lret
and
cmc
jbe
push
outsl
cmp
imul
sbb
sub
add
shll
negl
cwtl
inc
mov
outsb
cli
test
inc
xchg
sbb
inc
shl
nop
scas
shrb
xchg
fcompl
lret
push
bound
insb
insb
mov
das
jl
dec
add
enter
dec
lods
push
loopne
inc
jecxz
dec
int3
mov
pop
adc
add
int
fmul
dec
pushf
inc
push
cmc
jb
push
jl
xor
jb
clc
icebp
dec
inc
cmp
cli
push
and
int
mov
fisubs
scas
lea
lret
or
imul
sbb
jbe
and
repz
leave
scas
aas
dec
inc
insb
mov
pop
and
addr16
cmp
xchg
mull
out
jno
leave
pop
cmp
stc
hlt
push
jp
test
jbe
jl
sbb
pop
int3
sbb
jnp
push
and
loop
xor
add
and
mov
mov
mov
ret
mov
xchg
rorl
shlb
andl
out
je
and
pop
int3
or
int3
adc
xchg
add
jb
jno
jl
sbb
and
adc
rcl
jnp
sbb
clc
adc
push
mov
adcl
inc
lret
aaa
push
mov
add
icebp
ds
stos
mov
dec
pop
cmp
inc
movl
pop
pop
adc
shrb
xchg
pop
data16
das
jp
imulb
or
inc
lret
adc
pop
xchg
rolb
pop
xchg
js
imul
dec
sahf
push
dec
mov
xchg
jg
ljmp
push
aam
test
std
ljmp
repz
and
faddl
shl
out
add
jg
cmpsb
dec
push
stc
dec
sti
hlt
add
inc
movsl
pop
and
dec
fwait
jmp
nop
jge
jmp
inc
jmp
mov
add
shl
add
sub
dec
cmc
fidivl
repz
or
lods
pop
cmp
stc
addr16
mov
call
mov
movl
lock
imul
nop
les
clc
inc
pop
lret
movsb
cmpsb
data16
das
loope
je
mov
lret
ret
cmp
lahf
adc
int
push
and
into
dec
or
pop
lret
bound
pop
sbb
mov
pop
fmulp
cmpsl
addl
gs
mov
jnp
lea
out
movd
jmp
jbe
shrb
shrb
shlb
mov
adc
aad
mov
cs
rorb
sbb
sub
dec
push
push
ret
cmpsl
data16
sahf
fucom
and
push
cmp
or
xchg
shr
sbb
rcrb
pop
push
ffreep
outsb
push
fwait
and
xchg
iret
jl
popf
addr16
mov
xor
jae
fdivrp
faddl
jp
mov
sar
sub
push
repnz
mov
cmpsl
cmc
call
push
mov
sub
sub
popa
popf
push
aaa
jb
xchg
adc
push
and
orb
jo
lret
or
mov
lock
popa
or
icebp
jp
enter
xchg
cmp
pusha
or
stos
jmp
jg
inc
mov
outsb
adc
push
and
cmc
imul
dec
subl
xor
shrb
repz
push
lahf
mov
dec
imul
mov
enter
test
incl
daa
arpl
bound
mov
jl
add
andb
sahf
in
addr16
lahf
push
dec
shll
mov
mov
and
lret
jp
mov
mov
loope
sub
lret
mov
fldenv
mov
pop
outsl
push
jbe
fldcw
out
jle
arpl
cli
mov
call
mov
sub
fidivrl
shlb
enter
gs
imul
dec
and
addr16
sub
cltd
cld
enter
cmp
ret
adc
inc
sti
jmp
cmp
sub
pop
sbb
movsb
sbb
stos
mov
push
or
arpl
xchg
adcl
test
and
and
ret
adc
ds
mov
cmp
and
loope
cmp
nop
in
aam
out
xor
stc
xor
test
outsl
or
arpl
dec
das
jne
arpl
dec
ja
and
inc
arpl
pop
icebp
test
fcmovnb
inc
rclb
pop
js
mov
cmp
push
les
out
sbbb
stos
mov
inc
lahf
sbb
sub
jl
mov
xchg
push
in
and
lret
stos
pushf
popf
jp
in
xchg
cmp
mov
xlat
jno
mov
adc
jnp
loope
pop
es
mov
insb
lock
or
jns
lahf
mov
sub
jp
jle
cwtl
or
popf
sbb
out
scas
pop
movsb
imul
dec
sti
xor
mov
nop
add
mov
aad
push
mov
mov
out
shlb
stos
jne
lcall
insl
xchg
or
mov
fimull
pop
out
cmp
dec
mov
jge
mov
rcll
cmc
mov
test
es
mov
int
mov
arpl
mov
ds
daa
fcomps
jo
sbb
or
cltd
cmpsl
mov
add
shl
adc
sahf
push
dec
test
jmp
arpl
xor
cmp
pusha
dec
mov
loop
das
xor
push
aam
sahf
or
xor
add
xchg
pop
dec
ljmp
mov
jnp
imul
pusha
mov
imul
and
add
jp
pop
int
call
dec
mov
ficoml
xchg
gs
adc
fisttpll
scas
add
xor
push
rdtsc
icebp
loop
pusha
push
push
stos
pop
ja
faddl
in
cld
cld
icebp
pop
mov
adc
gs
and
cmp
cli
push
aam
mov
push
lahf
in
lret
cmp
lahf
mov
xor
sbb
xor
push
daa
fdivrp
loopne
not
sti
nop
out
hlt
cli
jp
mov
mov
cmp
inc
repz
mov
sub
mov
push
add
adc
push
pop
sub
push
aad
cltd
mov
lods
inc
or
xor
mov
mov
pop
mov
push
pop
mov
push
sub
jmp
push
repnz
ret
leave
movsl
pop
push
cwtl
data16
xchg
fisubrl
fistpl
mov
lods
inc
push
rcrl
xchg
mov
push
push
cmpsb
xor
mov
add
ja
inc
dec
std
dec
adcl
insb
mull
pop
fmuls
xchg
dec
out
pop
test
stos
call
lret
nop
mov
ljmp
sti
push
mov
pushl
int
sbb
mov
loopne
das
mov
and
add
bnd
jle
mov
jae
out
lds
add
add
daa
push
frstor
or
xchg
sahf
movsb
imul
lcall
inc
mov
cmp
neg
push
jl
popf
or
inc
outsl
pop
jne
popf
mov
push
out
xor
xchg
ds
in
aad
mov
mov
mov
jle
push
pop
push
inc
adc
aam
mov
mov
pop
mov
ret
ja
cmp
jmp
cmp
filds
stos
jb
push
aad
inc
mov
jp
mov
sbb
fmuls
ds
lcall
push
enter
cld
std
int3
push
pop
scas
jmp
sti
in
mov
loope
cli
or
aam
push
inc
add
dec
dec
inc
pop
inc
clc
adc
and
pcmpgtb
mov
or
sub
xor
dec
cmc
adc
push
fistl
cltd
adc
fsubrl
xchg
pop
mov
jno
inc
cmpsl
fsubp
cmp
and
pop
repz
out
add
arpl
lods
in
mov
lcall
divl
inc
lods
push
scas
sub
mov
sub
loopne
cmp
inc
add
inc
adc
fisubrl
xchg
push
insl
xlat
ds
jl
push
adc
sub
xor
dec
rcrl
push
pop
xchg
push
push
pop
jne
xor
jg
out
dec
pop
sar
inc
stos
rolb
insl
aad
jmp
and
mov
negl
daa
xchg
xorb
add
mov
xor
js
bound
add
xor
sahf
cltd
mov
ret
rorl
je
and
nop
out
rorb
das
adc
bound
pushf
jne
jb
cmp
and
inc
bound
mov
mov
or
dec
sbb
mov
adc
stos
and
push
sub
xchg
lods
bound
mov
call
or
mov
jo
mov
or
or
push
mov
sub
jae
sub
sbb
fwait
out
xor
stos
aas
push
sbb
and
pop
mov
pop
sub
sbb
lea
jbe
mov
fstpt
int
or
xchg
or
jno
loopne
adc
movsb
sub
inc
push
push
and
out
fstps
cwtl
out
jb
xchg
xor
hlt
inc
test
sub
pop
rclb
push
sub
lds
ret
sbb
les
and
cmp
push
push
pop
aad
jg
mov
xlat
flds
xor
imul
jecxz
sub
call
pop
push
stc
test
xchg
popa
sbb
aas
pop
xor
mov
dec
lods
mov
ud0
push
hlt
dec
out
dec
add
mov
sub
or
lock
cmc
shll
sti
mov
cmc
cwtl
popa
cs
inc
xchg
inc
inc
sub
ficompl
sub
inc
xchg
in
lahf
hlt
ds
and
and
mov
shll
sbb
movsl
mov
mov
repnz
pop
add
inc
lock
bound
push
cmpl
xchg
cwtl
mov
xorb
sbb
or
cld
cmp
lret
icebp
test
stos
adc
mov
sbb
jno
frstor
shll
cli
popf
push
lods
cli
pusha
jno,pt
mov
inc
out
test
ljmp
mov
arpl
nop
addr16
sub
ljmp
inc
js
ret
mov
inc
lds
sub
mov
mov
repz
push
xchg
mov
inc
lret
push
jnp
popa
pop
insb
mov
fwait
in
rcrl
push
pop
adc
je
sbb
je
push
jno
pop
sbb
mov
out
scas
into
add
in
mov
push
test
xchg
pop
push
and
xchg
hlt
scas
pusha
cmp
xchg
jge
xor
scas
gs
shlb
rcrb
mov
sbb
cmp
push
jo
fmul
rorl
insb
push
and
mov
mov
nop
lea
adc
out
pop
cmp
or
psubusb
mov
insb
outsl
pop
adc
imul
adc
mov
jp
fdivrl
sub
mov
sub
decl
jne
pop
pusha
jecxz
jbe
or
inc
repnz
sahf
mov
aad
sub
rcrb
jb
jb
xchg
mov
lock
xchg
loope
call
jle
test
pop
mov
push
add
sub
mov
lret
mulb
enter
xlat
lcall
sub
or
add
sahf
xor
push
adc
mov
call
push
mov
cmp
and
jo
lods
push
pop
es
fldt
xchg
ds
inc
stc
lahf
inc
adc
mov
test
adc
icebp
adc
push
rorl
pop
insb
ja
sub
adc
mov
sub
mov
jg
push
aas
sahf
rcl
xchg
add
je
jp
popf
jo
cmpsb
notl
aas
rcrb
jb
xor
push
mov
sub
and
bound
lods
aad
xor
rcrl
lea
imul
mov
pop
xchg
and
lea
pushf
sahf
dec
loop
or
in
mov
cmp
lcall
mov
test
cmp
lret
shlb
out
pop
jae
aam
bound
repz
fldcw
cmpsb
mov
jle
cmp
mov
and
imul
fstpt
adc
ds
bound
call
xlat
lods
mov
inc
sti
shr
les
into
sub
int3
sub
andb
adc
and
repnz
call
testb
dec
jge
in
dec
popf
adc
into
jns
fistpll
pusha
ret
sbb
mov
dec
mov
dec
test
pop
neg
int
jae
jae
das
test
jl
pop
push
mov
push
sbb
fimuls
pop
push
xor
neg
stc
andl
fildll
add
mov
mov
sbb
sbb
xor
push
sub
repnz
mov
insl
pop
sti
xchg
pop
fs
out
das
push
jne
mov
inc
test
das
movb
pop
and
push
imul
aam
les
sti
fldenv
dec
iret
sbb
mov
xor
mov
xchg
paddusb
sbbb
pop
or
inc
rclb
adc
insb
add
sti
int3
test
bound
adc
imul
sbb
daa
jnp
imul
and
mov
gs
jg
add
sub
stos
in
mov
lock
cmp
dec
ljmp
jae
hlt
pusha
push
stc
push
push
clc
xchg
mov
mov
mov
dec
shrb
mov
ret
jmp
pop
jae
and
test
jo
inc
icebp
dec
or
adc
push
push
push
jns
adc
test
cli
push
mov
adc
mov
out
mov
iret
call
not
fiaddl
cmovo
xchg
sbb
add
mov
or
ret
add
dec
xor
push
sub
dec
jo
popf
fbstp
mov
fists
call
jbe
decb
test
imul
subb
out
jne
mov
adc
loop
jge
jns
orl
cwtl
fsubrs
ss
xchg
sub
or
and
testb
xor
push
std
xchg
repz
adc
clc
pop
enter
repnz
pushf
int3
and
fldl
or
push
mov
sarb
inc
call
jae
mov
movsl
jg
adc
jo
xchg
rclb
xlat
push
aas
mov
inc
cmpl
loope,pn
sahf
cmc
ljmp
icebp
pop
lods
sar
add
xchg
mov
sbb
gs
cmpsl
fistpll
mov
add
lods
mov
adc
addr16
leave
in
pop
sub
mulb
ds
xor
xchg
push
sub
mov
mov
or
in
lret
orb
dec
push
mov
mov
pushf
cld
inc
pop
outsl
fcomp
stos
jne
cmp
sti
fidivl
es
jae
pop
movsl
test
shr
push
cmp
jae
or
stos
inc
or
adc
lods
loope
fdivr
in
lcall
roll
cs
fcompl
push
xchg
fs
ret
mov
insl
pop
int3
sbb
xchg
or
mov
cmpsl
leave
xchg
repnz
mov
scas
pusha
jl
out
jns
sbb
data16
popa
pop
jae
xor
cmp
push
and
loope
dec
scas
mov
das
bound
movsb
cltd
sbb
add
inc
inc
repz
stc
andb
pop
add
test
icebp
lcall
pop
xchg
jg
push
mov
repnz
mov
push
push
sti
push
xor
rcr
jb
insl
shl
push
jp
mov
fistpl
es
xor
stc
test
xor
xchg
not
lret
inc
xor
cmp
movsb
xor
xchg
mov
push
mov
add
cli
mov
shl
sbb
cltd
push
push
xchg
xor
or
jb
adc
clc
inc
add
or
loope
cmp
jge
add
ss
sarb
pop
mov
lods
leave
fldcw
pusha
mov
and
cmp
fs
in
fucomp
inc
arpl
icebp
push
pop
sbbl
je
cmpsb
lcall
pop
lods
mov
cmpsl
push
decl
or
jb
sub
cmp
cmc
mov
and
test
in
movsl
cmp
jmp
rcll
mov
xor
and
inc
mov
sarl
mov
sbb
cmp
xchg
or
push
lea
or
inc
sti
movsl
je
aam
xchg
cmp
out
call
call
lods
mov
lea
xchg
jnp
cmp
fcomps
dec
pushf
jae
js
add
xchg
or
jnp
lcall
js
dec
mov
imul
push
ret
sbbb
outsb
mov
out
scas
cli
mov
adc
inc
mov
sahf
js
addr16
sub
out
jo
sub
in
pop
sbb
add
out
sbb
aam
cmp
pop
ds
fcmove
into
pop
mov
mov
jo
mov
push
cmp
into
mov
ds
aam
int
pop
sbb
mov
cmp
dec
in
test
into
xchg
in
mov
and
pop
lods
repz
push
ds
cmc
inc
dec
inc
jge
shl
fbld
mov
cmc
mov
mov
test
cmc
mov
or
jmp
movsl
insl
or
data16
int3
xchg
sti
rolb
sti
pop
pop
pop
sub
fiadds
xchg
notb
shll
cmp
push
mov
sub
je
ds
xchg
scas
mov
mov
mov
or
xchg
loope
mov
and
data16
bound
xor
in
mov
js
stc
mov
push
andl
mov
repz
insl
rcrb
outsl
scas
dec
mov
xchg
outsb
push
nop
jne
std
sub
mov
xchg
rcr
lea
loopne
hlt
das
out
pop
and
cmp
adc
xlat
inc
xor
ss
shr
loopne
dec
cli
or
jo
bound
push
mov
movsl
inc
sbb
ja
cmpsl
loop
mov
daa
dec
push
xchg
xor
and
pop
mov
roll
jge
je
push
js
push
sub
outsb
cmp
cmp
scas
icebp
lcall
inc
sub
add
add
fistpll
xchg
aam
addb
lret
mov
sbb
aaa
cmp
push
sbb
xor
push
pop
dec
mov
mov
inc
sarl
int3
add
xor
or
xchg
cmp
jge
jp
mulb
mov
stos
mov
add
dec
inc
dec
push
push
sbb
fiadds
mov
cld
das
movsb
jl
sub
and
jl
sub
repz
add
cmc
mov
cs
mov
lret
ljmp
pusha
inc
ss
sub
rcpps
push
sub
xchg
adc
sbb
adc
mov
inc
sti
in
cs
mov
sbb
flds
jmp
sub
sbb
add
cwtl
outsb
cmpsb
cwtl
in
rorb
shll
jo
or
mov
mov
daa
bound
out
popf
repz
leave
sti
rcr
popf
mov
inc
rclb
xlat
sub
and
inc
pop
je
nop
xchg
ret
mov
sbb
xchg
mov
pop
dec
daa
fsubs
push
lahf
sub
rclb
arpl
call
add
pop
jge
hlt
or
lea
int3
mov
jge
adc
repz
inc
cs
aaa
push
cmp
xor
and
adc
mov
cltd
cwtl
jae
outsb
cld
or
popf
inc
subb
jmp
test
dec
nop
notb
ret
push
imul
mov
lahf
sahf
je
mov
jmp
pop
fwait
add
mov
insb
mov
pushf
xchg
cs
mov
imul
aas
inc
punpckhwd
fisubs
hlt
cmpsb
xor
lods
inc
pushl
mov
cli
jne
mov
loopne
mov
mov
ljmp
sbb
xchg
sahf
pop
sub
dec
dec
dec
jecxz
test
mov
xchg
call
out
mov
and
adc
ret
cmp
xchg
sub
mov
insl
xchg
mov
andl
cmp
push
sub
add
addr16
mov
or
cmp
fwait
iret
and
movsb
data16
int
cli
xor
push
mov
push
or
fcom
sbb
aas
mov
mov
sbb
inc
adc
subb
lret
jle
movsl
pop
adc
lock
stos
xor
adc
sbbl
addr16
pop
pop
sbb
inc
lods
ss
sub
imul
mov
in
fs
mov
pusha
push
pop
call
lret
cwtl
xlat
and
mov
xchg
decb
rorb
push
jb
fisttpl
xchg
mov
mov
cltd
push
pop
mov
cli
dec
mov
push
test
and
testb
movsl
sub
pop
add
dec
fstp
popf
rcll
iret
push
pop
out
pop
mov
dec
and
or
mov
pushl
xor
cmp
sahf
and
mov
cwtl
jmp
and
xor
jle
testl
mov
mov
cs
adc
or
subb
movsl
out
test
xrelease
mov
dec
xor
test
adc
push
movsb
daa
add
xchg
xchg
ljmp
arpl
add
insb
mov
dec
xchg
inc
rorb
test
enter
rolb
stos
dec
mov
xchg
imul
mov
mov
xchg
hlt
stc
les
mov
push
inc
push
aas
cmovns
sub
cmpsl
push
mov
pop
hlt
mov
cmp
outsl
mov
cltd
mov
ret
test
insl
pop
inc
loope
rcrl
and
insl
pop
lock
cmp
xchg
and
lock
mov
in
xor
in
mov
mov
fwait
std
lds
xor
imul
shrl
ret
sub
in
ror
push
pop
push
pop
lock
sbb
je
fadds
sar
sub
and
jmp
add
pop
aaa
pop
mov
inc
or
aaa
test
ret
jmp
sub
or
mov
xor
dec
xchg
mov
push
xchg
addr16
mov
arpl
sbb
dec
pop
incl
stos
out
into
add
lods
faddl
push
xchg
sbb
stc
iret
sub
or
xchg
aam
mov
adc
pop
dec
ja
fwait
aam
fidivrl
xor
push
inc
add
push
sbb
push
mov
push
dec
outsb
or
mov
pop
mov
lahf
xlat
repnz
cltd
pushf
sub
loop
out
mov
out
or
mov
jo
sbb
ss
cmp
nop
in
nop
loope
inc
test
shl
pop
call
std
mov
mov
out
fdivrl
imul
jns
cmc
jmp
jns
mov
and
xor
int3
sbb
movsb
xchg
lea
iret
jno
outsl
add
mov
pop
iret
dec
popa
repz
cmp
in
aad
mov
lahf
pop
out
incl
das
mov
mov
mov
shrb
stos
add
add
cld
cli
mov
ficompl
pop
mov
ljmp
insl
mov
les
and
mov
adc
addl
sub
in
xchg
mov
idiv
cld
cmpsl
dec
bound
hlt
push
ja
inc
jg
push
adc
jp
or
jb
sub
lahf
cltd
shlb
jno
jge
push
xor
ret
addl
js
int3
cmpsb
cwtl
nop
jge
movsb
incl
loope
stc
mov
rorl
add
push
cmpsl
sahf
pop
repnz
popf
jecxz
jbe
dec
int
jl
or
cmp
sub
push
jp
xor
xchg
cmp
outsl
aas
int3
into
cmovge
inc
mov
jecxz
fs
xor
shlb
xchg
cmpsb
lods
je
push
rorb
enter
ret
mov
rclb
xchg
incl
in
and
js
and
jg
ficoml
pusha
lea
les
dec
pop
out
mov
out
mov
mov
cmpsb
pushf
xor
movsb
inc
cs
int3
inc
lods
add
cmpsl
push
cwtl
cmp
inc
or
sub
in
cmp
sarb
jecxz
xor
sub
mov
mov
mov
push
jb
mov
jp
dec
sar
xor
outsb
out
pop
imull
sbb
in
mov
flds
adc
jl
enter
push
test
cs
cmovle
jno
or
xchg
shlb
inc
inc
add
rcrb
pop
xchg
adc
das
es
jl
dec
repnz
testl
xor
jb
test
loopne
test
and
xchg
adc
ret
cli
sar
ud1
test
jo
mov
movsl
les
nop
mov
aas
sub
repz
out
or
mov
fwait
in
push
cmp
cmp
jae,pn
dec
lahf
jnp
or
add
or
or
es
int3
push
fldl
mov
imul
mov
jmp
mov
jmp
shll
scas
sbb
out
xor
stc
test
push
out
hlt
dec
out
data16
dec
mov
fsubs
pop
xchg
notl
push
outsl
pusha
leave
in
mov
jb
dec
mov
inc
imul
inc
sarl
out
clc
imul
mov
fisubrs
inc
shlb
fidivs
sbb
inc
inc
loop
jo
hlt
mov
or
das
pop
and
adc
push
fsubrs
jecxz
js
pop
fisttpll
popf
int3
dec
sub
leave
lock
loop
cmp
push
cmpsb
dec
into
inc
xchg
pop
int3
out
push
pushf
add
inc
pushl
xor
push
sbb
or
add
ds
push
enter
stos
nop
ds
ret
lcall
mov
fdivs
jmp
das
in
sbb
stc
pop
outsb
pop
jmp
hlt
out
and
xlat
jmp
es
filds
lahf
aas
fdivrs
cmp
aas
js
pop
mov
push
xchg
cmp
ljmp
insl
je
loopne
mov
jl
xchg
loop
in
xlat
mov
pop
inc
leave
sahf
inc
mov
sbb
lret
mov
push
in
push
jo
mov
xchg
mov
add
inc
dec
inc
aaa
xchg
andl
cmpsl
test
iret
xor
jecxz
pop
mov
mov
lret
push
jno
test
inc
jno
fwait
jp
ja
call
test
sbb
mov
in
fsubs
xchg
sub
xor
xchg
imul
cmc
cmp
lret
adc
xor
int3
adc
mov
cltd
mov
pop
jecxz
js
add
xchg
ja
add
in
sbb
and
test
dec
pusha
sub
dec
add
fs
or
dec
push
mov
jle
imul
outsb
sub
mov
les
push
adc
push
jmp
mov
dec
push
lods
and
cmp
cmp
mov
les
ret
inc
sbb
push
add
or
addr16
out
sub
pop
jbe
out
subl
pop
das
jle
gs
mov
pop
inc
fcompl
lods
imul
test
pop
pop
mov
mov
mov
aas
ficompl
in
js
adc
mov
ja
cs
dec
loope
and
inc
or
les
xchg
mov
aam
mov
mov
push
movsb
iret
jbe
outsb
or
mov
xorl
subb
sti
sbb
outsb
cmp
leave
pop
iret
stos
add
ss
test
add
mov
mov
cltd
dec
iret
and
push
test
dec
pop
or
fsub
inc
mov
scas
lock
les
or
sahf
mov
stc
or
sbb
inc
fs
lret
xchg
sub
cmpsb
inc
dec
ds
jecxz
add
test
into
pop
clc
dec
out
shr
frstor
jae
test
pushl
repnz
pop
test
jne
mov
cmpb
xchg
dec
jmp
rorb
int3
xlat
push
add
dec
pop
and
dec
xchg
pop
mov
jo
hlt
lds
mov
dec
orl
decl
push
outsb
aas
insl
adc
and
dec
mov
xor
add
iret
addr16
mov
cmp
dec
xchg
xor
scas
mov
inc
mov
and
adc
leave
negb
add
mov
psrlw
jecxz
les
cwtl
pop
xchg
jno
scas
cmp
inc
lock
or
inc
icebp
dec
pop
das
ja
popa
sbb
and
sub
in
xor
sbb
ja
xchg
cmc
jle
mov
dec
testb
push
xchg
adc
mov
sub
xor
push
push
shll
mov
stos
pop
pop
push
notb
xor
imul
les
mov
lods
cmpsl
xor
and
nop
xor
stos
nop
int3
jl
xchg
add
mov
dec
out
inc
pusha
scas
rcl
aad
fmuls
pop
lock
dec
les
dec
fisubs
sbb
dec
shrl
jmp
lea
dec
sbb
fadd
mov
mov
xchg
adc
sub
xchg
xor
or
jnp
js
mov
flds
nop
lods
imul
lret
add
push
sbb
sub
pop
mov
inc
ror
inc
push
xchg
ds
jo
jns
maxps
xchg
and
pusha
popf
fwait
dec
imul
pushf
add
mov
push
pop
and
ljmp
xchg
mov
sub
enter
mov
mov
stc
push
fstps
stc
adc
and
jbe
push
and
loopne
daa
adc
push
xor
jno
gs
or
push
lret
dec
cmp
ds
xchg
fiadds
sbb
mov
adc
xlat
test
adc
jl
test
clc
rcrb
movsb
jle
sbb
lods
hlt
push
ret
xor
dec
sub
ret
mov
pop
push
mov
mov
ss
xor
scas
jp
and
sbb
xchg
and
ja
mov
movsb
mov
mov
sub
test
mov
test
and
sbb
lods
push
add
out
mov
inc
mov
addr16
pop
adc
sbb
adc
lods
movsb
add
sub
stos
rorl
andb
xor
push
pop
push
daa
dec
in
push
pop
lret
faddl
pop
jl
add
es
pushf
push
out
xor
test
add
arpl
inc
imul
xchg
mov
or
cmp
addr16
dec
pop
popf
sbb
ss
out
fxtract
out
mov
repz
jne
mov
pand
push
inc
sub
cltd
cmp
xor
insl
sbb
add
fistl
int
stc
les
xchg
and
cmp
adc
pop
and
jle
cmpsb
lahf
ja
testl
in
adc
stc
les
adc
repz
jp
xor
add
xchg
mov
imul
cmp
mov
xlat
fistpll
shll
inc
out
and
xor
mov
xlat
cmp
push
xchg
imul
sarl
adc
mov
bound
xchg
push
lods
test
push
out
ljmp
out
add
pop
mov
jecxz
cmp
idivl
mov
sahf
jbe
mov
notb
lods
sub
adc
xorl
mov
push
xor
pop
ss
jg
and
jp
aas
jb
loop
ficoml
push
cwtl
mov
ss
pop
jecxz
imul
sbb
test
pop
test
js
rclb
leave
lahf
adc
bound
int3
movsl
pop
mov
arpl
adc
fdivl
ss
loope
inc
or
mov
sbb
or
mov
mov
loopne
xchg
shlb
test
cltd
enter
inc
cmp
inc
aas
mov
sbb
movsb
cmp
ret
repz
jo
dec
repz
push
jo
mov
call
cs
inc
aad
pop
aas
inc
loop
popa
stos
jl
mov
stc
lret
pop
cs
call
xchg
cmp
pop
stos
xor
pop
and
mul
cmp
add
mov
pop
fmuls
call
movsb
leave
dec
movsb
push
cld
pop
mov
inc
jl
fimull
cli
jg
insb
test
fs
shrl
cmpsb
filds
sbb
out
lds
gs
icebp
in
scas
push
lods
insb
jb
xchg
popf
daa
xlat
sti
add
xchg
push
ret
jecxz
dec
inc
add
adc
push
popf
pushf
rorl
nop
push
push
in
add
or
pop
add
and
inc
adc
jl
and
aad
pop
or
push
adc
xor
mov
xchg
mov
xor
xor
pushf
dec
mov
lahf
xlat
sti
dec
imul
push
sub
jbe
aaa
mov
nopl
inc
xorl
cli
push
push
xor
dec
outsb
stos
gs
out
lea
xchg
jmp
push
test
div
inc
popf
xor
in
jnp
iret
fwait
xor
sub
lock
shrb
in
lods
inc
shr
dec
rclb
arpl
sbb
inc
fdivs
pop
mov
xchg
mov
test
aas
add
sub
fs
inc
push
movsl
fimull
dec
jle
jno
pop
pop
adc
cmc
xchg
jge
jmp
inc
push
jp
or
xor
pop
pop
or
or
gs
test
in
pop
mov
xchg
mov
inc
push
adc
push
mov
mov
test
and
adc
dec
pop
sbb
pusha
cwtl
orb
iret
adc
cmp
push
in
scas
or
outsb
cmp
inc
add
test
leave
dec
imul
push
loopne
jp
pop
lock
jmp
or
adc
addb
shlb
add
out
ja
cs
pushf
jg
inc
popf
stc
outsl
cmpl
insb
dec
imul
lahf
es
shl
ja
mov
in
lds
jbe
roll
incl
cltd
pop
inc
or
add
xor
or
icebp
push
and
cmp
and
jne
xor
cmp
mov
aad
xchg
jge
jbe
fldt
inc
and
sub
mov
shr
jg
xchg
inc
decl
add
push
fcom
add
and
adc
out
popa
mov
inc
pusha
jno
adc
and
mov
lea
lods
pop
xor
and
stos
pop
fisttpll
or
test
shll
sub
aam
dec
lcall
push
jae
jge
js
sub
cmp
add
mov
sub
sbb
call
arpl
mov
leave
or
pop
imul
aas
testb
inc
inc
rolb
sbb
jns
lods
and
lea
sub
and
in
shrl
xchg
lea
ss
in
fisttpl
stos
repz
sub
sbb
mov
pop
add
into
lcall
enter
fwait
loope
and
das
mov
inc
cld
in
fptan
xchg
les
jo
inc
shll
int
aam
inc
and
rcll
jg
imul
inc
aaa
int3
cld
ja
or
push
sbb
mov
icebp
and
inc
pop
fwait
mov
push
adc
rclb
push
cmp
sti
icebp
gs
arpl
mov
aaa
outsl
addl
dec
adc
sub
jg
sarb
add
mov
dec
mov
arpl
imul
lods
xor
gs
and
scas
add
pusha
mov
cmp
cmpsb
ret
aaa
push
out
cmpsl
and
adc
push
push
addr16
xchg
sbb
lcall
dec
push
cmp
sbb
sub
or
pushf
loope
dec
pop
bound
mov
adc
sbb
es
stos
mov
sbb
div
aam
std
sub
dec
roll
int3
lret
test
sub
mov
leave
sbb
lahf
or
pusha
fisubl
inc
fists
popf
cmp
or
mov
and
or
sub
push
mov
jecxz
push
les
in
lahf
or
lret
mov
daa
xchg
lret
push
scas
pop
cmpsb
pop
dec
lahf
lods
lds
cmc
out
out
pop
lock
ss
fmul
inc
in
lahf
in
sbb
push
mov
push
pusha
fwait
repnz
dec
fcomi
aaa
das
jns
out
sar
mov
mov
pop
mov
aad
dec
add
mov
cmp
add
es
dec
popf
ds
mov
mov
jmp
cld
test
bound
mov
add
jb
jecxz
sbb
addr16
ja
xor
push
outsb
adc
sub
dec
icebp
add
xor
aas
test
pop
adc
or
out
outsb
jbe
rep
mov
xor
repnz
push
dec
gs
ja
and
xchg
and
pusha
divl
push
rcll
movsb
out
pop
cmp
es
pop
mov
sti
aaa
mov
adcb
mov
jge
and
sub
addb
mov
dec
mov
popa
mov
cmp
in
lds
mov
and
mul
in
scas
cmp
pushf
xor
pop
mov
loopne
popa
lret
outsb
xchg
or
test
adc
adc
push
je
cmpsb
pop
lcall
push
mov
stos
adc
test
jmp
xor
xor
pop
sub
inc
repz
add
stc
adc
jle
gs
cmp
sbb
mov
cmp
pop
sbb
sub
fstps
sti
mov
int3
pushf
mov
outsl
jmp
mov
push
cmp
into
jmp
sub
adc
nop
adc
mov
sub
dec
lahf
loopne
adc
fcmovu
xor
inc
mov
call
jecxz
sbb
lret
and
rcl
push
movsl
pop
push
adc
dec
mov
jno
test
push
jns
sbb
add
pop
or
nop
mov
test
xor
sub
dec
inc
cld
mov
rcrl
jecxz
or
sub
cmpsb
in
inc
stos
inc
mov
inc
mov
idivb
jno
jg
inc
cmp
adc
xor
daa
pop
imul
test
jg
clc
jbe
ss
pop
cmpsb
push
sbb
xchg
push
dec
sbb
dec
pop
xor
das
outsl
das
stos
lahf
inc
sub
insl
jb
popf
int
cld
dec
push
insb
push
incb
xor
ljmp
mov
mov
adc
out
mov
mov
int3
clc
pop
mov
int
insl
mov
pop
js
iret
mov
sub
das
sub
sbbl
ja
mov
sahf
pushf
enter
push
push
out
cltd
subb
add
sub
add
fstsw
pop
outsb
add
dec
outsb
mov
jns
sti
pop
xor
enter
lods
stos
push
pusha
sti
fwait
and
add
fildl
inc
leave
sbb
mov
scas
pop
pop
and
inc
stos
pop
and
and
scas
mov
jo
jle
add
outsb
aas
cltd
pop
add
fistpl
cmpsb
xchg
xor
inc
repnz
inc
clc
aaa
inc
and
hlt
xor
mov
shrb
mov
lds
ret
je
dec
int3
outsb
pushf
xchg
mov
scas
into
pushf
xor
mov
pop
outsl
sarb
push
mov
mov
add
std
adc
mov
rcr
cwtl
pushf
xchg
js
sbb
out
cmp
jg
jg
mov
pusha
icebp
pop
or
dec
dec
mov
xchg
dec
and
xor
in
pop
flds
mov
xchg
or
test
push
or
aad
pop
and
add
dec
mov
jp
cmp
inc
add
in
xor
ss
push
xchg
int
out
in
sbb
adc
std
popf
inc
ret
outsl
outsl
scas
push
dec
loop
sbb
push
in
xchg
fildll
mov
out
sti
mov
int3
sahf
mov
sub
xor
popa
inc
adc
push
pop
push
rclb
arpl
mov
lahf
cmpb
and
mov
jnp
xchg
ret
xchg
pop
pop
arpl
sub
stos
outsl
sbb
in
or
movsb
pusha
ljmp
mov
ljmp
push
fdivs
imul
jno
icebp
sbb
add
ljmp
cmpsl
xchg
sub
pop
loope
fimull
movsl
int3
lds
out
andl
repnz
decl
es
hlt
dec
mov
xor
sub
or
push
or
mov
or
add
sahf
aas
flds
pop
mov
ret
and
popa
push
lea
or
or
push
mov
stos
add
mov
sbb
outsb
das
test
xor
dec
cmp
sarb
pop
inc
lahf
jl
xor
or
icebp
xor
outsb
popf
es
les
fisubl
or
frstor
lret
push
insl
xchg
and
ret
insb
je
mov
test
sub
push
repz
jl
dec
clc
or
jecxz
xchg
fucomip
lock
mov
stc
xchg
jle
fiadds
inc
fnstenv
xchg
or
ja
adcl
stos
and
stc
mov
pusha
fcompl
sbbb
cmp
iret
jecxz
mov
out
xchg
std
daa
mov
add
icebp
cld
mov
mov
enter
xor
cmp
push
outsl
mov
fcmovnb
enter
popf
inc
xchg
loope
add
inc
jbe
lock
cwtl
nop
cmp
loope
faddp
ficoms
in
das
sbb
adc
in
int
or
cltd
mov
icebp
cli
pop
int3
out
mov
add
das
sti
daa
jo
jns
enter
aam
sbb
adc
ds
jo
cmc
out
sub
mov
xlat
xor
mov
lret
subl
xor
sti
aad
ds
iret
int
into
mov
addb
xchg
sub
xor
push
jl
repnz
es
pop
out
jae
push
mov
mov
mov
pop
or
mov
mov
inc
sub
flds
and
addr16
ss
lret
out
inc
add
outsb
aad
sti
and
shlb
and
xor
mov
dec
imul
xchg
dec
shrb
lock
inc
cmp
in
ss
pop
loop
mov
pop
lods
pop
pop
xor
xor
mov
xchg
mov
dec
dec
mov
pushf
cmpsl
cs
je
mov
in
sbb
jmp
into
inc
idivb
mov
js
push
loop
fsubl
roll
sub
push
mov
flds
fwait
jge
ret
adc
idiv
repz
test
xlat
or
sub
ss
ljmp
outsb
repnz
lcall
aam
xchg
hlt
dec
or
xlat
mov
rclb
push
dec
gs
inc
mov
jae
cli
xchg
mov
decl
sbb
adc
daa
andl
mov
into
into
jne
mov
daa
sti
mov
dec
xor
ljmp
adc
test
xchg
pop
and
mov
mov
xor
or
fidivs
sub
mov
pop
xor
ret
bound
mov
inc
ret
mov
sub
fwait
cmpsl
fs
jp
fmul
mov
jl
xor
add
mov
xorb
stos
add
lahf
out
aam
cmp
mov
or
jo
xchg
mov
ficoml
pop
stc
mov
and
fsubrp
jns
cld
scas
jl
sub
xor
out
sub
jp
fcmovnu
aad
adc
aaa
fsub
add
mov
movsl
and
in
lods
int
mov
and
xchg
push
out
jno
in
xor
in
outsl
pusha
dec
repnz
hlt
lcall
adc
mov
ror
fidivrl
xchg
ljmp
sub
adc
std
je
and
scas
push
xchg
icebp
ficomps
xchg
jecxz
test
repnz
dec
mov
jl
stc
adc
ds
dec
cmp
mov
mov
lea
jp
cld
cld
adc
cmc
fbstp
mov
jmp
jmp
jns
fcomps
xchg
jmp
clc
push
jbe
pop
dec
popf
pop
dec
mov
arpl
jnp
int
jo
lods
push
loopne
addl
or
sbb
add
in
pushf
mov
pop
dec
orb
mov
push
fstps
or
push
loope
and
addb
jbe
ficomps
sub
dec
subb
dec
xor
fildll
stc
mov
dec
in
or
test
mov
adc
xchg
fsts
int
mov
inc
gs
mov
fcmove
icebp
pop
aaa
addb
sub
scas
xchg
ljmp
js
and
jne
xchg
sub
mov
pop
sbb
mov
and
xchg
sahf
push
sub
icebp
cmpsl
inc
insl
filds
loopne
mov
sbb
sbb
xor
cmp
dec
test
inc
ja
adc
jo
inc
out
movsb
outsb
sub
cmp
sub
xchg
adc
add
faddl
add
aad
nop
dec
adc
cmp
sbb
cld
cmp
dec
dec
push
fidivs
imul
push
xchg
jecxz
imul
jge
jp
jecxz
sbb
cmp
aas
ds
popa
int
ds
movb
pop
test
mov
jecxz
dec
jmp
lcall
and
xchg
imul
popf
mov
stc
dec
sbb
out
jno
mov
dec
icebp
sub
movsb
xchg
mov
idiv
fisubrl
aaa
loopne
inc
mov
aaa
loop
pop
push
inc
cmp
push
mov
push
pusha
and
clc
xchg
xchg
mov
cmpsl
mov
ja
jo
add
mov
aam
or
mov
mov
idiv
mov
popa
xlat
loopne
jbe
add
inc
out
cs
test
pop
stos
mov
aad
lcall
cld
lret
xchg
mov
mov
sub
mov
jb
mov
mov
xor
insl
xchg
int3
test
push
jns
adc
cmpsl
mov
and
ja
push
sub
iret
jae
jg
dec
loope
sbb
pop
and
and
aaa
jno
adc
push
mov
and
dec
add
pop
and
add
pop
in
inc
rcrl
cs
cwtl
dec
ret
mov
clc
scas
xor
orl
hlt
dec
ds
movsb
sbb
mov
mov
dec
js
xchg
mov
int
push
fwait
adc
test
adc
out
rcrl
mov
mov
pop
cmp
scas
insb
mov
xchg
mov
fucom
das
or
gs
jne
cli
std
xor
movsb
and
sbb
fsub
popf
push
mov
xchg
gs
in
repz
and
cmp
mov
movsl
arpl
jmp
hlt
outsl
mov
mov
mov
sub
mov
movsb
test
dec
iret
cmp
mov
mov
or
loop
testb
cmpsl
sbb
mov
push
mov
dec
icebp
popa
rcrl
es
mov
cmp
dec
fldcw
sbb
ss
scas
dec
adc
pop
pop
cld
pop
mov
push
fisubrl
sbb
inc
push
nop
ja
das
in
in
jae
xor
into
cmpsb
pop
xchg
repnz
or
mov
loope
push
lock
or
lret
xor
in
nop
pushf
fwait
cli
stos
mov
cmp
ret
push
mov
jb
call
cld
cmc
xchg
shrb
sub
jmp
or
jnp
out
and
sbb
cmc
test
mov
xor
idivb
int
mov
jecxz
xchg
aad
pushf
xor
cmpl
and
ds
add
iret
clc
pop
push
push
adc
mov
popf
mov
test
push
sbb
fadd
cmp
iret
pushf
jge
sbb
sub
sbb
mov
pop
or
xchg
idivl
leave
std
mov
loop
shll
daa
arpl
sbb
mov
dec
loopne
pop
xchg
icebp
in
fstpt
in
bound
mov
cmp
pushf
sti
aas
lcall
ja
push
dec
ljmp
push
sarl
lret
push
push
out
fwait
repz
outsb
and
adcl
mov
inc
rcrb
es
dec
rcll
pop
ds
jg
rcrl
mov
adc
cmpsb
cmove
add
push
mov
jge
mov
or
rorl
daa
decb
push
sarl
inc
dec
sbb
std
xchg
out
push
mov
adc
mov
ss
mov
xchg
sub
lea
pop
out
hlt
inc
in
xchg
daa
inc
insb
jmp
cmp
arpl
mov
or
push
mov
xor
mov
mov
push
mov
jno
loope
and
mov
outsl
hlt
lea
xchg
xor
xchg
cli
sbb
cmp
mov
incb
mov
test
sub
int3
push
cld
repz
or
daa
and
pusha
daa
push
ja
leave
inc
repnz
test
cmpsl
repnz
addl
mov
sub
adc
mov
inc
mov
mov
pop
xchg
out
inc
shr
cli
mov
mov
pop
rol
hlt
dec
dec
jno
je
js
mov
xchg
mov
pop
inc
call
out
fstpl
xlat
fmull
pop
aas
sar
xchg
or
pushf
add
dec
sub
jne
sub
mov
pushf
loopne
addl
iret
dec
call
sub
inc
dec
sbb
ljmp
out
mov
repnz
add
stos
cmp
je
or
push
xchg
fwait
jne
loop
mov
enter
cmpsb
pop
xchg
rcrb
dec
lahf
popf
xchg
jne
aaa
loopne
loop
std
popf
push
int
jae
sub
adc
fmul
cmpsb
js
daa
inc
push
in
mov
arpl
fwait
add
call
mov
cld
adc
add
decl
std
inc
inc
fdivs
rcrl
mov
sbb
bound
iret
jns
mov
cmpsb
cmp
cmp
xchg
dec
jo
orb
fstl
xchg
stos
andl
pop
cmp
scas
pop
cmp
scas
call
mov
sbb
or
jp,pt
or
push
lea
cs
and
faddl
shlb
sarl
aas
in
pop
iret
jmp
into
adc
es
mov
rorl
sahf
and
pop
push
jnp
push
popf
xchg
rorl
lods
sti
sub
dec
and
and
add
pushf
ret
nop
jmp
push
jne
das
xor
fsubrl
pop
sbb
gs
cmp
xlat
imul
jbe
arpl
aas
jne
iret
movl
xchg
sub
mov
pusha
adc
add
popa
rcll
les
inc
js
in
pop
xchg
mov
mov
add
cmp
xlat
sub
cwtl
push
jecxz
lret
cmp
negl
insl
and
push
movsl
ljmp
push
pop
aad
notb
lcall
lahf
fptan
addl
dec
mov
sbb
add
pop
pop
imul
loop
mov
add
and
mov
ja
out
popa
push
add
adcb
call
out
mov
xchg
xchg
scas
movsb
fisttpll
pusha
mov
ss
dec
iret
inc
push
mov
fsubs
ss
daa
pop
xchg
rcrl
mov
shl
in
rorl
or
sbb
addr16
aas
test
daa
lret
dec
mov
and
xchg
orb
mov
dec
xchg
test
cmp
and
adc
sub
dec
mov
adc
fwait
jle
xchg
xlat
movsl
fsubr
xchg
jo
out
inc
in
xor
sbb
push
jge
pop
adc
sub
push
mov
scas
push
push
jl
cli
or
popf
add
hlt
mov
inc
adc
lods
xchg
loop
pop
adc
jno
push
call
jnp
lods
xchg
add
rcrb
into
xchg
aad
jp
les
adc
std
es
mov
loop
icebp
outsl
out
push
loope
and
pop
jle
pop
xchg
mov
push
sti
jge
int3
arpl
loope
es
cwtl
js
mov
in
or
pop
ljmp
push
lock
mov
fldenv
jmp
xor
jo
cltd
mov
inc
inc
scas
sbb
mov
add
push
mov
popa
lea
mov
push
fcomip
lcall
ljmp
xor
mov
mov
dec
mov
or
out
addr16
movsl
adc
and
inc
xchg
jns
sbb
cmpsl
mov
mov
xchg
insb
out
mov
lcall
xchg
dec
gs
xchg
lea
xor
fsubrl
pop
adc
pop
adc
jns
addr16
jne
out
shll
push
hlt
cmc
pop
sbb
push
cmc
pop
push
mov
mov
stc
jnp
addr16
lcall
mov
add
pop
out
cmp
test
es
lahf
pop
fs
inc
repnz
fs
xor
orl
xor
dec
movl
cmp
pop
cld
sub
loope
pusha
xor
mov
sbb
ss
dec
mov
imul
call
add
lcall
jae
cld
mov
rolb
shrl
xchg
dec
inc
xchg
out
data16
jecxz
add
add
fwait
cmp
rcrb
loope
insb
mov
mov
mov
cli
or
setp
je
inc
jno
push
push
xchg
adc
lock
int3
movsl
aas
sbb
mov
lods
lods
dec
out
inc
sbb
fisttps
icebp
xchg
xor
xchg
scas
stc
mov
ret
pop
movsl
gs
fstps
or
stos
jo
cltd
mov
jnp
xchg
add
lcall
stc
out
fldl
sbb
cmc
inc
push
xor
les
mov
push
adc
cmp
out
movsl
je
mulb
push
and
cld
nop
mov
out
lock
rol
popa
fwait
mov
jmp
jle
jge
cld
pop
fidivl
int
mov
mov
test
mov
mov
icebp
lods
in
dec
out
jne
test
mov
sub
add
mov
lods
cmc
movsl
cmp
mov
sbb
adc
mov
dec
lds
sub
push
jg
fildl
leave
int3
add
rcl
sbb
sub
mov
addb
mov
ds
icebp
and
jecxz
xchg
mov
jge
mov
in
cmp
fdivrl
not
negb
stos
and
and
rclb
jb
jg
int
lahf
mov
xchg
push
nop
push
outsl
sbb
inc
xchg
popa
es
rorb
pop
fsub
xchg
xchg
pop
leave
and
cli
push
in
sbb
pop
out
leave
push
repz
or
and
test
and
inc
stos
push
sub
adc
adc
cmpb
rorb
push
ds
imul
addr16
in
loopne
adc
in
push
or
pop
sbb
call
sub
sub
out
and
loopne
inc
loopne
scas
jne
jae
and
mov
or
ret
xor
adc
adc
cli
and
mov
mov
std
mov
fs
faddp
in
fildll
inc
or
dec
jg
push
mov
dec
jle
mov
adc
inc
xor
jmp
lret
loop
dec
pop
orl
adc
outsl
adc
clc
jmp
adc
clc
cmp
je
mov
inc
mov
das
pop
cwtl
xchg
or
imul
push
fs
mov
xchg
sti
int3
jecxz
test
xchg
imul
mov
sbb
mov
mov
push
int
rcrb
inc
dec
int
cmpb
dec
cltd
xchg
rolb
pop
or
fst
shl
std
sahf
cwtl
in
bound
shrl
push
xchg
xchg
xchg
mov
mov
lcall
and
add
lds
int3
fimull
mov
dec
push
stc
in
loopne
pop
js
pop
xchg
cmp
adc
in
jge
int
addr16
mov
sbb
repnz
mov
mov
test
inc
xchg
jecxz
adc
mov
inc
mov
jnp
test
xchg
push
mov
xor
add
scas
pop
xor
inc
dec
loop
sub
and
repz
fildl
out
test
sbb
movsb
icebp
es
jb
mov
sbb
int3
cmpsl
and
mov
add
inc
mov
lea
add
ffreep
jb
xchg
xor
inc
in
inc
cmp
xchg
jg
cmp
inc
out
insl
lock
aas
or
sub
and
mov
insb
lock
push
mov
mov
cmc
and
sti
dec
push
inc
test
ret
dec
iret
fisubrs
mov
or
mov
and
mov
lahf
mov
lds
icebp
pop
mov
push
sub
xchg
ficompl
sbb
scas
inc
imul
in
dec
ja
cmp
pop
out
and
xlat
out
inc
movl
cmpsl
mov
cmpsb
push
insb
mov
and
mov
inc
sbb
or
clc
out
add
lret
xchg
int
ja
xchg
lahf
push
sub
scas
pop
add
and
mov
cli
jne
mov
movsb
adc
xor
dec
ret
sbb
daa
mov
xor
cmp
cmp
shr
notb
mov
mov
push
or
sub
pop
and
mov
in
add
or
pop
cwtl
xor
pop
adc
mov
push
sarb
xchg
adc
mov
mov
jbe
scas
scas
mov
js
jl
adc
insb
cmpsb
dec
jne
and
inc
lret
push
leave
cmp
in
dec
data16
jle
insl
or
out
lods
pop
popa
orl
mov
and
test
fwait
jge
push
push
shl
aas
les
fstpl
pop
outsl
stos
daa
je
or
cmp
mov
in
xor
popf
mov
call
out
fistl
outsl
insb
pause
sbbl
ljmp
mov
das
xchg
data16
xor
inc
and
andb
pop
dec
lock
inc
push
icebp
cmp
popa
fmuls
sub
adc
mov
lods
add
je
das
mov
or
ret
and
pop
lret
movsb
adc
fiaddl
cwtl
popa
sahf
int3
xor
enter
add
xchg
aaa
adc
mov
cmp
std
subl
cs
sub
in
insl
jle
or
push
sarb
lock
dec
nop
mov
adc
nop
bound
mov
mov
or
cmp
scas
scas
xor
mov
sbbl
dec
std
pop
adc
js
dec
pop
test
inc
adc
xchg
sbb
mov
push
mov
mov
mov
aam
sti
pop
mov
cmpsb
jnp
mov
mov
dec
or
popa
loopne
in
mov
int
mov
lock
lret
in
lahf
fcomi
andb
xor
je
scas
xchg
in
xchg
in
lret
or
in
dec
jnp
sbb
lahf
hlt
mov
pop
inc
cmc
sub
mov
xlat
cli
scas
pop
push
mov
loopne
pushf
pop
xlat
pop
add
mov
in
mov
adc
sub
push
fdivrs
mov
cmp
jmp
cmp
lock
sti
imul
scas
es
ret
fcoml
xchg
bound
inc
ljmp
or
mov
ja
pop
mov
or
shlb
add
cmp
or
jge
rcr
mov
sarl
mov
push
notb
fidivl
xor
arpl
push
cmpsl
cmp
push
out
scas
out
in
pop
sbb
push
ljmp
pop
int
mov
sbb
pop
addr16
fwait
roll
jl
sbb
js
fsubp
add
fs
lret
int3
aas
and
push
icebp
push
out
cli
adc
cmc
imul
outsl
adc
jne
in
in
or
shlb
call
stos
std
fs
hlt
or
shlb
mov
repnz
clc
pop
cwtl
inc
jae
lea
sub
jb
mov
movsb
loope
aam
pop
loope
push
mov
imul
sahf
and
lds
pushf
outsl
clc
dec
sbb
mov
iret
in
das
jo
insb
arpl
cmp
fucomp
ljmp
mov
add
dec
mov
in
or
sti
jnp
sahf
mov
mov
into
pop
or
or
inc
aaa
adc
fwait
cmp
aam
repz
add
test
insl
fnstsw
fwait
lods
push
push
adc
call
add
jo
mov
mov
and
daa
mov
sub
scas
fisubs
outsb
and
mov
mov
out
push
shrb
push
xchg
and
test
xchg
orw
dec
push
sbb
mov
int
cmpl
popf
out
fsubs
shll
xor
out
loope
into
xchg
cmpsl
cld
lea
leave
aam
add
fnsave
sub
xor
fstps
imul
mov
cld
popa
shl
out
mov
test
cmp
mov
cmp
movsl
inc
sti
iret
mov
call
stc
lret
arpl
mov
xchg
fwait
adc
push
stos
jmp
adc
xor
cmp
jmp
ja
push
mov
lret
in
adc
arpl
cltd
insl
sub
mov
leave
sub
jl
arpl
add
inc
sbb
test
fstl
push
out
test
dec
rcrb
icebp
xchg
mov
les
stos
mov
daa
inc
fwait
mov
imul
cmp
and
mov
loop
or
inc
add
nop
cli
xchg
sahf
xor
pop
mov
rcrb
mov
pop
incb
jo
jbe
int
mov
dec
inc
aas
add
out
add
push
mov
repz
iret
sarb
repnz
into
dec
cld
sar
subl
mov
lahf
in
sbb
jmp
lret
stos
cli
xor
mov
arpl
icebp
adc
je
into
and
cmp
xchg
jne
mov
mov
icebp
fdivr
dec
bound
inc
xchg
inc
or
add
adc
in
notl
ja
lret
sub
scas
jb
jnp
mov
and
std
push
js
push
xchg
or
pop
das
mov
jae
sbb
imul
jp
outsl
dec
inc
adc
fistpll
jo
pop
push
pop
dec
inc
pop
xor
loop
xor
mov
lods
xor
notb
xchg
jns
jns
push
and
jge
data16
pushf
js
mov
pop
out
push
push
sti
subb
mov
push
sub
cmc
inc
pop
int3
xchg
outsb
dec
sub
leave
jns
xor
dec
into
into
imul
dec
std
aaa
pop
insl
xor
test
xchg
pop
fimuls
in
push
mov
cs
cmp
adc
adc
xor
sbb
jle
fucom
and
into
sbb
mov
stos
and
aaa
sbbb
sahf
jne
scas
notb
pushf
mov
pop
movb
gs
xchg
loopne
outsb
fwait
or
dec
sbb
push
aam
xchg
stos
push
mov
lcall
inc
push
mov
hlt
pop
or
data16
sub
pop
mov
mov
or
cld
in
stc
mov
xor
inc
cwtl
cwtl
add
jle
leave
loopne
pop
sub
or
mov
dec
xor
aam
js
xor
jge
rcrl
mov
mov
mov
aad
mov
cmp
or
sti
sarl
push
into
lcall
pop
dec
xchg
aaa
add
outsl
dec
jnp
mov
xchg
inc
push
ficomps
es
sub
mov
or
std
jp
je
dec
sti
lcall
nop
scas
inc
push
loope
cmp
ss
jno
sub
push
in
adc
sbb
cmp
out
aaa
or
fs
cmc
dec
jnp
push
sub
icebp
xchg
adc
mov
ficompl
add
sub
adc
aaa
adc
imul
insb
jle
add
fistpl
popf
lods
lock
pop
xchg
addb
add
add
scas
loopne
lock
pushf
outsl
sbbb
js
lcall
imul
and
dec
test
push
jo
maxps
notb
repnz
xchg
or
ss
mov
adc
repz
into
push
adc
prefetch
or
sarl
add
inc
lds
mov
mov
mov
xchg
xchg
mov
sbb
cmpsl
jge
shr
std
cmc
add
cwtl
xchg
inc
jge
lea
gs
arpl
data16
pop
mov
aam
mov
xor
cmpb
sub
mov
add
cmp
cwtl
lret
xor
pop
jl
pop
add
ljmp
in
mov
push
js
mov
sahf
testl
and
outsb
out
pushf
pop
add
mov
popa
add
inc
cld
jnp
fldcw
rol
push
add
sarl
call
mov
jl
dec
outsb
xor
add
inc
cmp
adc
sti
js
lcall
pushf
sbb
cwtl
or
push
adc
adc
mov
test
mov
repnz
push
popa
hlt
arpl
add
jns
sbb
shrb
mov
idivb
mov
sti
and
cwtl
jge
xchg
add
jbe
adc
shlb
ret
rolb
pop
and
cld
loop
push
xchg
jmp
cmp
data16
jmp
or
xor
repnz
xchg
pushf
pushf
dec
and
scas
xchg
mov
jb
jno
adc
add
mov
push
sbb
mov
cwtl
lock
mov
xchg
mov
cs
adc
jle
inc
xor
dec
adc
jg
ss
and
outsl
pop
ljmp
insb
pusha
testb
ret
jne
dec
cmc
sbb
add
mov
sbb
aam
out
mov
pmullw
inc
sbb
rcll
lods
add
or
fisttpl
and
pop
scas
add
mov
inc
or
jnp
add
xchg
and
pop
hlt
testb
and
mov
xchg
mov
inc
mov
or
and
ss
dec
add
out
sub
xchg
dec
mov
jecxz
mov
cmp
por
popa
dec
pop
mov
ds
inc
lods
mov
insb
xor
and
sub
jae
sub
out
push
nop
push
fiadds
mov
movsl
mov
sub
repz
xor
mov
aam
push
jecxz
cmp
lea
jno
aad
or
cltd
std
test
adc
aad
jl
cwtl
cmp
xchg
pop
fstpt
in
mul
pop
jbe
pushl
lds
cmp
mov
andb
mov
jecxz
or
push
mov
xlat
mov
pop
pusha
xchg
enter
fistpll
xchg
inc
pop
jle
leave
in
inc
mov
in
xchg
mov
add
mov
cmc
push
shl
ficoml
jmp
mov
arpl
aaa
or
mov
pop
jmp
iret
ret
mov
stos
cmp
dec
mov
test
xchg
sti
stos
or
mov
inc
adc
fs
cltd
mov
in
jmp
push
jl
repnz
pop
das
jl
or
ds
mov
jmp
push
sub
inc
push
lcall
or
stc
das
push
jnp
jl
mov
mov
cwtl
fistps
mov
fdivs
sbb
pop
fldt
pop
sti
lds
xor
add
scas
jmp
dec
pop
sub
icebp
es
sbb
push
aaa
mov
add
lock
and
lahf
xchg
cmp
in
push
out
call
shlb
aad
adc
inc
scas
popa
std
dec
jge
rep
push
rorl
and
sbb
insl
push
pop
xor
or
es
push
or
xor
sub
scas
xor
mov
aas
int
inc
dec
dec
lahf
pop
loop
mov
lods
add
cmp
das
out
push
out
and
mov
xchg
aaa
xlat
dec
mov
mov
pop
jbe
xor
and
test
jbe
mov
and
jmp
lret
ja
inc
mov
push
enter
inc
dec
in
pop
mov
fucom
insl
mov
repz
push
cmpsl
push
push
inc
lods
inc
mov
jae
pushf
outsb
jmp
out
sti
mov
clc
shll
loop
mov
pop
int
daa
mov
pusha
jo
out
mov
or
cmp
pop
xchg
ret
or
mov
or
es
outsl
in
hlt
pop
test
pop
je
lret
add
call
xor
inc
push
cmp
or
hlt
and
icebp
adc
and
xlat
push
in
xor
push
and
add
push
and
out
pop
sbb
jp
pushf
repnz
push
xor
dec
add
leave
xchg
xor
cmp
adc
out
mov
notl
data16
jbe
mov
das
xor
sahf
pop
mov
sahf
leave
sbb
ror
or
dec
imul
je
out
fldenv
add
jb
sbb
push
mov
adc
imul
push
mov
jae
add
mov
mov
cmp
sahf
je
pop
or
inc
pushf
fadds
iret
push
adc
adc
mov
addr16
mov
sub
lret
mov
inc
dec
stc
arpl
popa
push
push
mov
fsubrl
mov
mov
push
cli
insl
mov
fdiv
movb
mov
negl
outsb
in
sti
inc
mov
std
lods
popf
sbb
mov
leave
dec
test
imul
add
mov
fcomps
xchg
push
xchg
cmp
vpshufhw
sahf
rcl
aad
stos
ja
dec
sub
inc
sbb
jle
add
inc
push
bound
pushf
mov
push
inc
call
imul
arpl
mov
xchg
push
push
mov
push
aaa
cmp
in
inc
push
sub
mov
nop
adc
jg
inc
repnz
fcompl
jg
shll
mov
outsb
aad
mov
jo
push
movsb
stc
in
push
int
div
mov
nop
mov
dec
in
adc
xor
dec
mov
push
mov
cmp
add
idivl
mov
iret
jp
sbb
mov
fisttps
push
push
sub
cmp
cmp
not
hlt
fiaddl
mov
int
mov
aas
ja
add
mov
stos
ret
lahf
shrl
rclb
xor
ds
and
xlat
pop
fiaddl
pminub
inc
imul
mov
mov
cmp
xor
shl
lods
repnz
mov
dec
scas
fdivl
cmp
xchg
sbb
add
xor
fs
and
xchg
imul
inc
mov
pop
enter
cmpsb
adc
out
data16
sahf
mov
pop
adc
mov
scas
add
jne
pop
push
imulb
das
imulb
pop
rcrb
cmpsb
push
je
cmp
imul
insl
ret
outsb
pop
inc
leave
into
sbb
sbb
scas
mov
and
cmp
inc
scas
push
xchg
lret
int
lods
inc
outsb
shlb
clc
outsl
fbstp
adc
dec
loope
xor
test
xor
sti
dec
lret
xchg
mov
jecxz
jne
test
addr16
cltd
rclb
sbbl
adc
sub
jmp
pop
sbb
cwtl
jmp
cld
lcall
mov
or
mov
lods
dec
jb
dec
mov
sar
pushf
xchg
add
and
xor
shl
pop
fwait
xchg
lock
fpatan
lds
jae
lahf
cmp
mov
in
pop
sahf
ret
cwtl
out
and
lock
pop
adc
adc
iret
aas
lret
insl
push
leave
mov
push
mov
fadd
fdivrs
sub
mov
jge
imul
cmpsb
pop
or
test
scas
mov
stc
push
xlat
jle
sbb
loop
jle
xchg
dec
inc
dec
lcall
dec
and
fldenv
dec
and
jmp
xchg
bswap
xor
lods
movsb
inc
enter
sbb
sub
cwtl
jecxz
adc
aaa
xchg
mov
stos
pushf
jmp
sbb
lret
call
jmp
pusha
mov
xor
xor
cmpsb
div
cmp
repnz
sub
pop
mov
imul
pop
push
loop
lods
subb
cs
fldcw
movsb
jae
dec
aas
fsts
pop
add
outsl
repnz
sbb
dec
add
push
mov
ds
sbbb
stos
outsl
adc
repz
dec
repnz
std
mov
inc
shll
jle
mov
push
jns
loope
jae
pop
stos
fsubl
push
fnstenv
daa
loopne
jnp
cltd
test
inc
cmp
adc
cs
inc
jmp
mov
pop
add
ss
adc
add
das
lds
sbb
jo
jg
push
popa
rclb
dec
fs
inc
mov
out
pop
xchg
cli
mov
push
adc
jae
jo
pop
mov
aas
test
cmpsl
int3
xchg
add
shll
ds
fnstcw
dec
xchg
push
jb
push
out
arpl
mov
xchg
push
inc
leave
mov
addb
mov
xor
push
cwtl
inc
out
xor
in
mov
shrb
dec
and
mulb
or
cmpsb
es
xor
push
iret
test
jecxz
movl
test
shlb
jo
xor
cmc
jbe
es
ja
sbb
addr16
shrl
adc
sarb
xor
andl
in
inc
push
out
and
jae
push
test
cmova
leave
dec
mov
jmp
imul
stc
pusha
sub
adc
mov
popf
outsb
iret
test
cmp
pop
push
mov
mov
cld
adc
push
mov
adc
push
repnz
xchg
xor
ficoml
adc
dec
cmp
xchg
or
fdivrs
test
pop
mov
jo
or
jmp
lock
jp
addl
push
add
lods
push
xor
add
jno
and
daa
cld
xchg
out
fstps
mov
adc
xchg
adc
mov
mov
in
bound
jo
stc
sbb
ficoml
imul
pop
add
mov
pop
sub
inc
lods
mov
sub
sbb
data16
jg
gs
jb
mov
lods
loopne
js
jmp
mov
adc
mov
mov
push
pop
inc
insl
ja
fs
movsl
rclb
sub
inc
jb
mov
insb
dec
ljmp
or
mov
mov
or
fistl
and
jbe
out
lret
addl
movsl
jl
out
ret
popf
xor
and
les
fnstcw
gs
adc
adc
cmp
or
imul
sub
jge
in
lea
dec
or
mov
pop
cmp
mov
fsts
mov
dec
pop
sub
les
mov
loopne
das
push
dec
xor
cmp
out
data16
push
int
jnp
pop
dec
les
scas
pop
test
fdivs
inc
adc
cmpsl
sbbl
cmp
lcall
jecxz
or
ljmp
iret
xor
int3
pop
xor
movsb
mov
pop
inc
mov
jo
fisttpl
xchg
ffree
pop
cmp
insb
jecxz
xchg
das
popf
imul
jns
pop
into
or
mov
flds
jmp
dec
jne
xchg
xor
repz
inc
cmp
lret
or
push
cmp
adcb
xchg
arpl
mov
ret
or
add
jg
out
inc
jnp
dec
ret
pop
xchg
call
out
pop
cld
mov
stc
cmpsb
imul
enter
mov
sub
inc
and
shll
cwtl
or
movsb
mov
push
add
or
push
add
and
fldl
ja
adc
jmp
data16
push
jns
ds
adc
jns
andb
push
push
adc
jle
out
mov
xor
cmc
xor
adc
fwait
aam
pop
cltd
dec
pop
cmp
jle
rclb
mov
cwtl
mov
mov
movsb
dec
cltd
repnz
push
and
jns
push
push
mov
ss
xchg
inc
add
mov
jp
push
adc
jnp
cmp
add
push
mov
ds
push
or
std
cmp
aas
fwait
or
fucomip
xchg
popf
daa
xchg
jmp
ret
sub
pop
lods
in
rcr
push
xor
mov
pop
and
mov
dec
xor
cmpsb
fisttps
pop
loop
adc
cmp
jo
in
data16
fdivl
inc
cs
in
sbb
in
lock
dec
loope
push
jno
fwait
scas
xchg
xchg
xchg
xchg
push
ret
inc
inc
jp
inc
ret
add
sbb
fs
cmp
dec
mov
aam
sub
movsl
into
mov
shr
pop
and
xor
es
jmp
test
cmpsb
xor
fsubl
push
mov
xor
push
cli
stos
adc
das
insb
add
jmp
add
jne
or
jle
movsl
or
insb
inc
pop
loopne
fwait
adc
sti
mov
in
sbb
pop
cmp
sbb
mov
push
lret
lcall
mov
outsb
ss
sub
imul
addr16
add
das
or
insb
inc
lret
mov
jle
fnstsw
sbb
mov
or
mov
inc
enter
sub
pop
sahf
add
cmp
inc
push
jmp
adc
int3
out
cld
icebp
adc
ret
adc
fisubl
rol
push
xor
imull
outsb
adc
sahf
pop
xlat
or
inc
pop
mov
cmp
orl
pop
in
lods
add
cli
cs
lea
ret
adc
fcmovb
inc
lea
sbb
sti
dec
rorl
gs
js
popf
sub
inc
jp
clc
ja
in
ljmp
adc
mov
pop
leave
cmpsb
sbb
cmp
sbb
xor
xor
sub
add
inc
shlb
xchg
scas
test
pop
data16
adc
adc
fwait
pop
push
pop
xchg
xchg
pop
dec
icebp
ret
push
fsubs
xchg
in
in
add
dec
repz
jbe
les
and
inc
lock
sbb
jnp
lret
pop
popf
shrb
adc
mov
scas
fldcw
das
fisubrl
mov
jo
xor
test
mov
fbstp
out
add
aaa
dec
fldt
insl
out
add
push
sarl
stos
xor
test
mov
mov
dec
mov
daa
shl
loopne
sti
clc
out
dec
push
in
cmc
mov
push
jg
mov
jl
pop
push
adc
lret
push
repnz
dec
aas
out
xor
jo
push
push
pop
push
call
inc
lods
data16
repz
lods
adc
lea
pop
insb
add
push
sub
scas
xor
movb
cld
add
mulb
and
in
pop
adc
out
push
add
jae
pop
and
insb
sbb
xlat
push
ljmp
popf
daa
ret
outsl
test
add
xor
fwait
push
out
stos
xchg
adc
inc
dec
xor
repz
mov
and
and
fmull
stos
mov
lret
cmp
push
aam
mov
and
adc
js
outsb
cld
out
jmp
idiv
out
lods
jo
fimuls
push
movl
jle
sbb
ret
mov
pop
pop
mov
daa
pop
out
cmp
cmp
sarb
or
cs
cmpsl
xchg
pop
xorl
lahf
ret
push
mov
jnp
push
push
mov
inc
fdivl
xchg
call
fcmovne
in
mov
inc
sub
sbb
adc
aaa
sahf
cmp
mov
mov
bound
lods
pop
lahf
inc
stc
jg
adc
sti
arpl
inc
push
xchg
repz
aad
daa
inc
jb
cli
jle
jmp
outsl
inc
sub
xor
daa
or
jecxz
dec
pop
fcomip
xchg
or
lds
or
add
sub
sbb
pop
push
sub
push
jecxz
jbe
jg
pop
in
jo
iret
pop
dec
push
jle
fldt
push
sbb
rorb
adc
mov
lods
pop
aaa
pop
cmpsb
xor
daa
mov
hlt
sub
stos
and
ljmp
ret
mov
call
push
aad
ljmp
icebp
pop
adc
out
stos
cld
ds
shlb
mov
inc
loop
mov
bound
int3
aas
movb
pop
inc
icebp
imul
and
xor
idivl
dec
sbb
adc
cmpsb
push
adc
or
pop
out
sbb
icebp
nop
mov
cmp
push
xchg
dec
movl
push
cmp
xor
fcom
outsb
xor
test
cmpsb
aaa
jecxz
or
sbb
mov
cmp
or
jns
ljmp
jnp
lahf
pop
xlat
stos
mov
js
aad
add
inc
aam
popf
shlb
push
mov
clc
inc
push
jmp
push
lock
pop
mov
xchg
mov
xchg
int
mov
mov
mov
addr16
insl
xchg
pop
jge
mov
or
dec
fdivs
fstps
rorb
dec
mov
filds
push
sbb
or
ds
inc
cmp
stos
mov
add
rorb
xorl
xor
mov
jmp
out
xchg
and
pop
add
mov
fdiv
movsb
aad
push
pop
int
pop
and
xchg
and
or
or
les
ljmp
fdivl
xchg
addr16
nop
addr16
repnz
xchg
mov
pop
inc
mov
pop
jecxz
inc
aaa
ret
lsl
in
inc
mov
mov
jge
inc
shrl
shl
jmp
push
repnz
repz
jae
sbb
into
mov
es
xchg
leave
mov
mov
outsb
outsl
inc
cmp
pop
ss
loope
gs
mov
pop
in
push
sub
cld
and
sub
lahf
insl
cmpsb
cmp
lock
sbb
aam
and
push
xchg
push
in
loope
sbb
adc
mov
scas
xchg
mov
jge
mov
or
pushf
call
adc
add
ret
in
adc
hlt
orl
xchg
subb
call
sbb
nop
or
jp
lcall
fld
pop
mov
inc
inc
mov
lret
xchg
inc
cmp
fwait
pop
ficoms
scas
sahf
cli
add
enter
jns,pt
mov
sbb
xchg
lret
push
ja
enter
cmp
sub
inc
nop
mov
add
pop
inc
cli
sub
dec
sub
inc
addr16
adc
mov
mov
hlt
inc
mov
xor
push
std
cmp
orb
lahf
movb
xor
mov
cmp
jns
frstor
and
aad
cltd
aam
shll
xchg
fists
imul
adc
rcrb
sahf
push
push
add
in
mov
movsl
pop
xor
idivl
push
cmp
mov
push
mov
shrb
and
aas
mov
aam
jo
mov
xchg
int
iret
inc
mov
jb
pushf
lods
sbb
lret
mov
and
sbb
and
push
jns
decb
sbb
hlt
cmp
cmp
out
es
and
pop
jge
loopne
enter
mov
insl
imul
ret
mov
sarb
ret
xchg
hlt
das
lahf
or
xor
push
dec
insb
mov
in
movsl
jl
clc
cmpl
inc
fildll
mov
dec
jmp
xorl
dec
mov
mov
lcall
sub
push
ja
push
pop
cmp
orl
mov
pop
fs
mov
pcmpeqw
jmp
mov
sbb
lock
lds
xchg
pop
mov
fprem
jmp
outsl
pop
pop
xorb
mov
out
inc
xchg
cmc
out
mov
pop
push
pop
and
lret
and
movsb
gs
mov
popa
in
inc
add
push
in
fcompl
mov
sub
push
dec
ja
xchg
fnstcw
cmp
sbb
mov
mov
cwtl
incb
or
call
call
push
dec
cwtl
jo
call
add
adc
lret
dec
pop
mov
jne
shlb
jle
decl
insb
push
xchg
mov
ss
sbb
pop
cwtl
shrl
das
cmp
mov
cwtl
mov
push
std
mov
dec
jno
xor
shlb
xchg
sbb
lret
sub
sub
inc
and
insb
sbb
sbb
sbb
mov
or
xchg
inc
shll
int
gs
sbb
xor
xchg
gs
jbe
push
and
test
shl
fldcw
adc
imul
and
insb
insl
xchg
test
in
or
loope
push
shlb
cmp
addl
in
enterw
add
test
mov
ss
call
push
dec
lods
add
or
daa
xchg
jns
jge
adc
push
push
push
push
aas
push
dec
mov
bound
lret
int
cmpsl
or
push
mov
mov
movsl
sbb
sti
aam
push
mov
lahf
dec
sub
adc
in
push
push
xor
xorl
inc
js
adc
roll
push
xchg
je
sbb
inc
cmp
inc
inc
cltd
ret
int3
mov
popa
ljmp
enter
cli
movsb
int
hlt
xor
test
int
mov
xor
pop
fcoms
mov
fisttpl
cmp
into
jl
int
outsl
mov
out
fsqrt
fwait
lret
sbb
xor
rcll
movsb
cld
stos
mov
push
insl
add
push
sbb
lret
push
and
add
xchg
and
add
mov
pop
bound
lods
negl
cmp
jecxz
pop
into
addr16
jae
jmp
out
sub
xchg
roll
pusha
xlat
xchg
cmp
sub
test
int3
aas
adc
xlat
mov
mov
sub
fmull
jle
xor
mov
daa
cmpsb
shlb
ljmp
es
inc
call
xor
xchg
xor
test
xor
xor
jmp
mov
sub
test
int
mov
pop
pop
jle
and
pop
lock
add
add
and
orl
lret
fstl
xchg
insb
data16
icebp
das
mov
gs
lret
inc
fucom
fwait
mov
xor
adc
adc
cld
fildl
mov
cmp
xchg
or
roll
sbb
adc
lret
icebp
pop
add
pop
cmpsl
mov
sub
inc
repz
mov
mov
mov
adc
mov
cmpsl
lock
ljmp
sbb
lds
inc
sbb
bound
or
push
pop
sahf
repnz
or
arpl
loopne
add
lods
roll
repz
inc
outsb
mov
inc
adc
jbe
xchg
cmc
jns
inc
push
je
and
add
dec
popa
jo
and
loope
shll
xchg
jmp
fs
aas
push
jmp
sbb
imul
jle
insl
es
adc
dec
cltd
xor
daa
cmc
and
push
cwtl
xchg
inc
enter
es
pushf
insb
mov
shrb
out
in
jno
xor
sbb
enter
push
add
bound
adc
pop
push
pushf
cld
in
mov
jno
push
repnz
js
loopne
outsb
mov
pop
bound
or
cmp
and
ss
pusha
nop
cmp
mov
mov
fs
into
pop
mov
xor
push
mov
mov
lock
push
lret
lods
jmp
mov
jp
jns
loopne
shl
mov
mov
add
dec
aas
jg
pushf
int3
mov
cmp
in
js
xor
lds
nop
stc
rcll
clc
test
sub
out
inc
push
sbb
mov
test
xchg
pop
xchg
aaa
outsb
cmp
add
mov
cmp
push
sub
add
aad
test
pushf
mov
jmp
test
arpl
aad
lods
scas
imul
inc
inc
sub
adc
sub
mov
icebp
cmp
fadds
push
mov
test
leave
cld
pop
cmp
sbb
jo
xor
dec
push
shll
rolb
movsb
mov
xorb
or
adc
sub
add
aam
lds
int
push
jp
shll
push
cltd
add
add
pop
add
ud0
xor
pop
lea
fidivrl
mov
ja
iret
xchg
push
adc
or
cwtl
imul
fdivrs
dec
dec
xor
dec
mov
sub
adc
movsb
out
push
sub
negl
dec
inc
push
and
xorb
mov
call
ds
cmp
bound
lea
mov
sub
xchg
pop
xor
cs
inc
ret
lods
out
adc
stos
xchg
xchg
adc
pop
pop
lea
jp
movsl
jno
or
or
pusha
insb
shl
pop
in
xlat
cmpsl
xchg
repz
inc
or
das
repnz
fcoml
mov
cwtl
pop
into
fs
fwait
orl
iret
lods
stc
mov
or
subl
sti
sbb
addb
cs
mov
aad
and
ss
mov
fistps
mov
frstor
jne
lock
movl
orl
popa
inc
imul
sub
jne
add
sub
cmp
ds
xor
sbb
jecxz
pushf
dec
gs
mov
mov
sbb
pusha
out
add
cmpsl
or
adcl
adc
inc
lahf
jne
bound
adc
mov
adc
push
push
cmp
xchg
arpl
outsb
insl
mov
dec
fwait
add
xor
jmp
enter
sbb
jmp
orl
scas
push
mov
stos
enter
dec
add
sbb
sbb
push
lock
test
stos
mov
lahf
push
arpl
aaa
xlat
cwtl
jg
pop
iret
mov
pop
cmc
lret
dec
and
mov
xor
sub
leave
sbb
and
lahf
push
mov
ret
in
clc
xchg
bound
inc
orl
push
fstpt
jae
rcrl
lret
inc
push
outsl
push
push
sti
sbb
jb
xabort
cli
mov
mov
pop
mov
xor
aam
inc
and
pop
dec
dec
push
add
cwtl
xor
in
inc
movsb
sti
rcrl
xor
je
inc
jnp
iret
test
hlt
in
push
add
imul
fsubr
add
lods
call
dec
inc
psrlw
mov
and
sti
movb
dec
in
jae
out
shll
inc
hlt
stos
in
addr16
adc
mov
add
or
adc
mov
lock
movsl
into
push
adc
or
outsb
mov
es
or
cmp
shll
or
lcall
add
mov
xchg
jb
dec
fcomps
in
push
jecxz
mov
cmpb
jl
andb
sub
mov
sbb
pop
jne
mov
out
fcompl
jo
sub
mov
adc
mov
sbb
push
jge
imul
mov
adc
xor
pop
pop
cwtl
and
jp
mov
ja
lret
insl
sub
test
sahf
aas
inc
out
shlb
and
fidivrl
push
rcrb
jnp
out
mov
int3
jge
xchg
cmp
cmpsb
adc
cs
mov
cmp
in
push
das
push
in
arpl
in
pop
out
lods
xchg
and
push
sbb
test
test
mov
imull
or
adc
xorl
inc
fldenv
pushf
pop
jnp
cmpl
cmp
repz
cmp
pop
jmp
imul
addr16
sbb
jg
cmp
fwait
scas
ss
hlt
inc
add
das
pop
das
out
imul
sub
or
ret
and
pop
fnsave
repz
mov
rclb
scas
add
and
sub
xchg
sbb
std
aaa
in
fldenv
sub
and
leave
rcrb
push
lock
rcrl
fdivrl
ret
loope
ds
iret
sub
jp
pop
mov
mov
xchg
mov
dec
mov
rorl
dec
lret
rcl
in
daa
jnp
mov
mov
mov
orl
dec
sub
cmp
aad
in
ret
fistpl
and
fnstsw
mov
lahf
cmp
frstor
mov
pop
cmp
xchg
fdivp
imul
das
movl
out
outsb
sub
fs
mov
jmp
jns
stos
ljmp
cmp
out
add
xchg
jae
xor
lds
aaa
xchg
jno
inc
into
xchg
adc
push
das
push
add
mov
adc
imul
lods
test
hlt
sub
pusha
push
push
in
inc
xchg
ja
sub
arpl
and
add
jb
cmp
cmc
mov
mov
das
cmp
inc
shll
out
sbb
dec
daa
in
inc
iret
xchg
jg
out
jg
adc
fdivrs
or
cwtl
out
add
pop
out
lret
arpl
push
pusha
push
fcoms
bound
aaa
dec
sbb
les
adc
jae
icebp
mov
inc
test
mov
mov
data16
mov
or
mov
mov
pop
lret
ljmp
and
add
jmp
sub
inc
inc
inc
js
pop
iret
lret
iret
mov
orb
jb
mov
xchg
xchg
ret
hlt
clc
stos
mov
or
pop
pop
scas
lret
mov
fbstp
lret
mov
aad
outsb
dec
and
arpl
mov
inc
out
mov
and
adc
cmp
mov
lea
jns
pushf
lds
mov
aaa
aad
dec
popa
imul
add
mov
mov
push
stos
lcall
lret
nop
call
push
push
imul
gs
popa
or
cmp
push
das
jle
shrb
push
std
fnstsw
add
pop
in
stos
mov
jne
pop
adcl
lahf
mov
bnd
into
pushf
movsl
shlb
rcll
daa
adc
mov
sub
mov
mov
xchg
ret
jb
pop
daa
push
pusha
int
xchg
cmp
sbb
mov
inc
xchg
cmp
add
lcall
nop
push
and
les
sbb
mov
je
sbb
push
cmp
mov
mov
sti
rcll
mov
jmp
clc
je
and
mov
iret
lret
aam
ljmp
aaa
addl
push
xchg
lock
aam
int3
sub
or
pop
je,pn
cmp
ret
jnp
push
jbe
push
daa
leave
in
xor
mov
fdivrs
cmp
add
dec
mov
popf
cmp
inc
scas
jo
or
ss
imul
popl
test
inc
cmovne
sbb
ljmp
imul
or
xor
mov
fwait
addr16
test
push
call
inc
push
jg
sub
push
stos
test
sub
je
cwtl
mov
inc
jecxz
stos
insl
lds
fucomip
inc
scas
test
in
fstl
pusha
ror
push
popf
sub
cmp
dec
int3
rclb
adc
fcomps
jb
mov
xchg
les
adc
sbbl
je
popf
pusha
or
xchg
pop
inc
mov
push
addl
shr
loopne
push
mov
sbbb
pusha
inc
push
pop
cmp
mov
out
cmp
out
mov
pop
add
add
push
imul
push
mov
and
stos
xlat
mov
aad
out
xchg
jl
icebp
adc
pop
or
test
xor
pop
pop
inc
mov
stc
mov
or
clc
dec
fs
xchg
mov
push
xchg
lods
and
mov
jp
cli
outsl
pop
jns
xchg
xchg
movsb
inc
in
cmp
aas
xlat
cmpsb
mov
adc
cwtl
imull
mov
xlat
cltd
sbb
mov
es
mov
cmp
sub
pop
cmp
lahf
sbb
into
mov
push
fcmovnu
mov
ret
das
pop
add
push
sub
push
mov
insl
adc
add
fcomps
cmp
js
fucomip
mov
or
push
xor
inc
negb
sbb
jle
subl
loop
shrb
and
out
sub
icebp
and
aas
add
bound
jg
jp
jns
jl
rclb
orb
outsb
pop
push
sub
ret
cmp
jmp
dec
pop
out
push
inc
cmpsl
adc
mov
add
js
xor
dec
cmp
adc
push
int3
shrl
fcmove
fsubr
fwait
push
adc
icebp
pop
mov
int3
aaa
sahf
fisubl
lods
sub
mov
sbb
jo
push
xchg
cmp
mov
mov
push
ljmp
xchg
pop
or
xchg
insb
xchg
outsb
mov
insl
cmp
aam
imul
jb
call
push
addb
dec
jne
mov
add
movsb
pop
sub
in
push
addr16
add
mov
or
jmp
repz
cwtl
sub
push
shll
sub
outsb
stc
lret
jbe
add
mov
xchg
test
lock
mov
mov
add
adc
mov
rcll
pop
rcll
push
dec
mov
mov
push
outsb
clc
lock
adcl
stos
loopne
loop
jne
gs
jle
cwtl
mov
mov
push
mov
lock
sbb
test
dec
pushf
jmp
push
lret
cltd
cmp
sub
hlt
cmpsb
imul
es
js
aaa
lock
sar
cltd
and
push
data16
pop
sub
sbb
xor
pop
sbb
sbb
or
stos
or
jp
cmc
fcmovbe
ljmp
push
rorl
cmp
sarb
ror
movsb
int
sub
test
mov
push
sahf
jae
test
in
jo
inc
mul
fistps
xlat
adc
push
outsb
dec
xchg
out
lods
rcl
mov
out
pop
xchg
sub
ss
ljmp
jl
xchg
inc
fwait
jge
flds
sub
std
les
fnstenv
xchg
sahf
xchg
or
inc
fildl
add
mov
mov
adc
dec
divb
lods
push
or
sti
pop
xchg
ljmp
ss
push
pop
inc
loope
ja
popl
sbb
call
cmpsb
frstor
scas
mov
pop
ja
stos
inc
lea
decl
mov
sbb
or
scas
test
sub
sub
ret
lock
xlat
sbb
ljmp
repnz
test
or
test
test
aas
push
fisubrs
sysret
out
adc
jns
out
and
cmp
imul
push
cmp
mov
push
imul
into
mov
stos
pop
cmp
rcr
hlt
jnp
and
clc
ds
fidivrl
imul
cmp
pusha
mull
dec
mov
or
mov
repnz
push
adc
or
add
inc
cli
or
add
fsubs
adc
jbe
ss
inc
daa
sbb
mov
lock
adc
mov
sub
dec
adc
sahf
cmc
out
lds
enter
dec
rolb
stos
out
cmp
test
jecxz
fsub
push
adc
loop
fldcw
stos
bswap
adc
in
mov
mov
adc
xor
jg
lret
clc
ss
jge
sub
lock
out
sub
sub
ja
ljmp
imul
cmp
and
mov
popf
cmp
jbe
or
mov
mov
push
and
pop
out
inc
mov
mov
or
and
into
and
lahf
scas
ss
lock
pushf
pop
std
xor
push
and
sub
sbb
std
into
scas
mov
shrb
pop
lcall
xchg
ret
out
lret
mov
lret
enter
pop
das
pop
mov
hlt
dec
xchg
outsl
jbe
push
addr16
shl
fnsetpm(287
inc
out
cwtl
sbb
jmp
push
cmpb
inc
or
lcall
into
cmp
lock
lcall
lods
cmpl
add
mov
inc
movsb
add
push
jecxz
sub
fs
enter
mov
cli
jb
in
and
cltd
shll
setnp
inc
mov
lds
mov
test
cmc
xor
or
mov
inc
push
mov
ljmp
bound
shrl
cmp
enter
stos
or
loopne
movsb
dec
inc
aam
das
gs
mov
sahf
mov
aaa
scas
push
mov
mov
push
movsl
mov
xor
cmp
andl
mov
push
push
or
test
clc
idivl
sbb
addl
sub
mov
in
or
sub
scas
inc
pushf
adcb
fldenv
out
lock
outsb
mov
test
dec
adc
out
inc
sbb
add
repnz
lds
hlt
lret
or
mov
in
mov
jp
test
bound
aad
ret
sbbb
bound
mov
pushf
shll
in
sbb
or
aaa
inc
fs
and
sub
insl
out
push
fwait
or
js
test
inc
pop
repnz
rol
and
popa
adc
sti
inc
xor
sub
ret
pop
sbb
je
das
inc
inc
loop
adcb
loopne
andl
scas
and
rclb
mov
inc
adc
das
stos
outsb
dec
hlt
daa
add
xchg
xchg
sbb
hlt
lea
add
or
or
add
call
xor
sbb
mov
jb
sub
inc
mov
sub
movsb
jae
push
mov
mov
mov
sbb
sbb
dec
nop
mov
pusha
jecxz
mov
adc
adc
repz
push
mov
jle
mov
xor
mov
testl
lahf
cwtl
push
popf
mov
fwait
mov
pusha
je
xor
test
lods
js
xchg
or
cltd
orb
leave
add
out
mov
pop
jmp
bound
dec
inc
jbe
stos
mov
lods
sub
push
imul
jnp
xor
movzbl
push
bound
fstpt
or
add
push
inc
cmp
lea
scas
les
jno
fists
aam
pop
and
push
mov
cmpsl
lcall
addl
cli
inc
xchg
dec
or
fwait
push
mov
xor
jle
fisubrs
mov
fldl
mov
mov
std
mov
into
clc
and
jae
mov
lds
mov
inc
lret
andl
fwait
scas
inc
int
rcll
pop
pop
mov
aad
movsb
cmp
imul
fst
aam
mov
sub
inc
xchg
sub
daa
sub
mov
inc
mov
ja
out
xchg
sbb
jl
out
fdivrs
pushf
pop
aam
fmuls
mov
addr16
addb
fidivs
pushf
std
loope
inc
pop
mov
scas
push
xchg
lahf
out
cmp
push
popf
outsb
test
imul
lret
in
loope
dec
cli
std
lea
lds
jg
pop
dec
lods
stc
clc
xor
mov
loope
imul
addl
int3
lret
mov
cmpsb
out
fsubrl
adc
xor
jle
cli
icebp
dec
rclb
push
scas
or
mov
pop
dec
movsl
add
or
popa
rclb
lods
jbe
inc
and
in
pop
cltd
or
enter
dec
mov
sub
xchg
sub
incl
pop
jp
inc
lret
scas
inc
push
lods
pushf
inc
stos
iret
mov
sub
pop
pop
sbb
mov
sub
pop
insb
and
fsubs
pop
rolb
mov
scas
xchg
rorl
scas
mov
bnd
jle
test
lcall
mov
scas
in
nop
sbb
jo
mov
mov
push
xchg
incl
inc
jl
int
int3
pop
cltd
int
xchg
xor
xchg
in
jmp
lahf
imulb
xchg
push
pop
xor
sub
test
test
mov
shl
jo
jmp
fs
mov
repz
or
mov
lods
fnsave
test
sbb
rcrl
mov
mov
sahf
pop
shll
icebp
out
sbb
jg
add
pop
mov
pushf
call
es
sub
hlt
pop
ret
cmpsl
xchg
imul
adc
mov
scas
mov
test
out
and
scas
dec
and
fldcw
test
sub
mov
in
nop
sysexit
and
cmc
mov
stos
sarb
adc
test
out
pop
stos
bnd
mov
aad
xor
mov
jno
outsb
dec
int3
je
mov
add
adc
and
test
inc
xor
push
cmpsb
loopne
cmp
sub
call
or
push
mov
mov
push
out
add
popa
lahf
movb
imul
mov
jne
inc
inc
xor
lods
into
push
sbb
fdivrs
mov
orb
ret
sahf
sbb
add
push
out
in
cli
je
shl
loope
stos
pushf
or
fsubl
cmp
push
jns
in
sub
outsb
inc
dec
mov
fistps
in
sar
pop
cmp
sub
mov
add
dec
das
dec
ljmp
or
enter
push
cmp
xlat
out
lods
cs
inc
stc
inc
dec
arpl
cmp
adc
fwait
and
add
inc
cmpsl
pop
pop
pusha
lock
or
push
mov
inc
or
and
dec
nop
inc
aas
arpl
sbb
sub
jecxz
out
xchg
lock
hlt
pop
and
pop
pcmpgtw
mov
outsl
cld
outsl
std
out
lret
xchg
cltd
dec
mov
jne
xor
sti
and
inc
mov
adc
sbb
repz
insb
sbb
pusha
cwtl
mov
cmpl
aam
cmp
cmp
mov
in
sub
in
push
dec
in
or
out
dec
cmpl
dec
pop
push
inc
fstl
adc
jae
data16
cli
add
pop
mov
aad
ficoml
sbb
out
jbe
lahf
ljmp
sti
sahf
xchg
mov
and
shl
cmp
and
mov
sbb
and
adc
insl
sahf
ja
mov
lods
cmp
scas
aad
xchg
and
sub
rolb
popa
leave
call
cmpsb
mov
negb
add
out
jnp
cmpsb
mov
loope
std
add
push
test
jecxz
mov
jne
xchg
pop
sbb
adc
mov
stc
add
jne
xchg
push
sbb
inc
out
push
add
outsb
pop
jo
cmp
orl
lea
gs
addb
pop
mov
or
pushf
sub
dec
out
call
test
insl
add
in
adc
xchg
pop
xor
dec
push
xchg
inc
loopne
dec
push
jno
xchg
jl
ss
xor
jb
mov
or
outsb
xor
jmp
sahf
mov
rcrb
xchg
push
loop
xor
lahf
mov
shlb
clc
add
sub
pop
mov
js
and
xor
jnp
insl
or
iret
dec
int3
cmpsl
jmp
cld
out
in
mov
pop
scas
test
pop
call
and
xchg
cmc
push
roll
xchg
data16
add
js
push
sub
aas
inc
sti
addr16
test
sti
in
jg
or
and
pop
add
addr16
dec
fldpi
push
adc
clc
add
xchg
push
xor
test
ret
mov
mov
repnz
enter
lcall
mov
sub
vcmpps
add
ffreep
rcrl
mov
mov
daa
outsl
adc
aam
leave
jno
and
sub
adc
xchg
sti
cmpsb
jns
cs
insl
sbb
sbb
xchg
aas
push
jno
add
sub
loopne
aas
jg
cmp
fs
fisttpll
jo
push
ret
and
in
mov
ret
or
inc
jae
insl
cmc
hlt
inc
xchg
adc
lock
rclb
add
push
inc
inc
cmpsb
mov
cmp
jns
jmp
cld
sbb
pop
pop
pop
loop
cld
push
xchg
js
int3
fidivs
pop
mov
loopne
or
mov
movmskps
xor
xlat
ret
sbb
push
xorb
loope
inc
imul
push
xor
jl
inc
or
push
cwtl
sub
out
pop
push
icebp
push
push
in
pop
gs
test
jne,pn
test
lock
push
fidivrl
sub
xchg
std
arpl
and
inc
xchg
lea
jno
and
and
ja
jge
jl
sub
pop
pop
int
cmp
shlb
std
inc
cli
call
xor
loop
mov
jmp
in
loopne
sub
cmp
mov
xchg
add
into
push
lock
jl
jns
pop
rorb
sub
or
icebp
xchg
and
adc
loopne
mov
mov
lods
rclb
xor
dec
aas
mov
inc
sbb
inc
inc
and
shlb
xchg
roll
sbb
jo
xor
lock
mov
jne
inc
stos
aaa
mov
ds
pop
jmp
inc
ret
cmpsb
cmp
cmp
adc
movsb
sbb
mov
cmp
ret
aam
push
rcl
mov
les
dec
push
dec
add
in
pop
jle,pn
stc
fwait
cmp
mov
sbb
addr16
inc
int3
mov
fdivs
xchg
insb
ret
jbe
stos
test
inc
jp
ja
fbld
dec
jae
cmp
add
mov
lods
loopne
adc
mov
and
sti
ror
imul
inc
jb
lods
add
xchg
cld
test
jmp
inc
imul
addl
gs
push
push
mov
les
sbb
dec
mov
add
out
icebp
lcall
pop
fptan
in
cld
rolb
inc
int
adc
or
sbb
loopne
pop
mov
add
in
and
jl
sbb
and
lds
int
mov
push
fcomp
movsl
cld
pop
lds
mov
jno
stos
repz
or
jl
pop
push
lahf
fisubl
stc
sub
mov
inc
sub
mov
pop
test
dec
shr
dec
inc
xchg
mov
shlb
ds
ret
inc
lds
pop
jmp
ss
sub
setnp
pop
jae
cmpsb
mov
movsb
jle
mov
cli
ds
andl
mov
pop
lret
xlat
jle
sub
xor
lea
push
rcll
mov
mov
jge
fisubrs
stos
popa
mov
and
mov
stc
in
mov
xchg
xchg
fdivs
iret
mov
mov
shll
add
adc
push
or
negb
or
out
ds
stos
mov
cmp
or
dec
inc
or
sub
rol
stc
arpl
add
ror
loope
stos
enter
idivl
mov
pop
popa
mov
mov
cmp
dec
movsl
lahf
mov
xor
es
sbb
inc
mov
iret
or
jo
adc
loopne
sbb
inc
and
or
mov
adc
andb
fisubs
xlat
pop
sub
push
divl
sbb
xor
lret
push
in
inc
pop
in
shrl
insb
mov
rcrl
xchg
sahf
int
lcall
xchg
jl
leave
cld
insl
xor
jae
stos
sub
adc
cmp
mov
dec
xor
mov
test
fs
dec
xchg
js
push
rcr
cmp
xor
dec
rorl
andl
push
inc
ret
dec
sbb
call
ds
lods
aam
test
push
lahf
fidivrs
movb
call
popa
and
jo
cmpl
aas
adc
lahf
adcb
fscale
sbb
mov
push
push
sub
adc
fs
movsb
adc
sbb
xchg
cli
jg
fsubs
cmp
xchg
mov
loope
ret
dec
fs
jne
and
icebp
incl
aaa
sub
bound
filds
add
int
daa
xor
or
jle
in
push
lcall
add
loop
mov
imul
call
scas
mov
ret
push
jne
mov
push
fs
orb
xchg
nop
mov
xchg
test
jns
dec
sarb
not
inc
jecxz
mov
shll
subl
mov
mov
xor
js
rcr
xor
ss
cmp
jmp
cwtl
cld
inc
sbb
in
sub
in
sbb
xchg
mov
sbb
test
lods
inc
daa
xchg
movsl
aam
rcl
jb
mov
cs
add
fidivs
xor
gs
xor
faddl
inc
inc
lahf
aas
fistpll
mov
incb
xchg
lods
lcall
loope
xor
push
xchg
or
mov
mov
cwtl
push
push
insl
jecxz
inc
inc
add
dec
mov
jge
xlat
les
insb
shll
std
xchg
cmp
cmp
int
aam
jge
xor
sub
xchg
dec
lock
lret
movsl
mov
enter
inc
xchg
cmp
daa
adc
xor
dec
pop
mov
inc
int3
nop
pop
dec
lret
fcomi
xchg
jmp
inc
ds
aas
mov
push
lods
test
cmpsb
loop
push
nop
sbb
mov
mov
loopne
fwait
shrl
outsb
lcall
out
test
lahf
jecxz
aad
adc
mov
fsubl
mov
sbb
sbb
inc
fistpll
jae
sbb
dec
adc
push
push
out
dec
add
fdivl
push
xchg
leave
mov
mov
push
jmp
fs
mov
fst
pop
sub
out
inc
loopne
dec
daa
sub
xchg
pop
dec
xchg
jl
sbb
dec
dec
add
lret
mov
sbb
je
sbb
xor
arpl
cmp
inc
xlat
xchg
int
pop
rorb
data16
mov
mov
pusha
loope
mov
xor
add
out
pop
and
cmp
cld
into
xchg
push
shrb
sbb
addl
mov
jo
orps
or
cmc
out
jge
pop
or
stc
mov
adc
imul
fcmovu
cmpb
xor
inc
addb
negl
add
jnp
int3
shlb
lods
mov
int
sub
arpl
leave
cld
out
push
xor
or
popf
bound
out
insl
jne
loopne
mov
mov
adc
pop
addr16
adc
lret
mov
mov
loope
in
xor
pop
push
push
fs
lret
add
std
lods
imul
pop
lret
mov
fdivl
lcall
wbinvd
bnd
gs
sbb
popf
es
jae
cmpb
adc
mov
xor
mov
daa
imul
outsl
push
inc
and
lret
adcb
jae
adc
mov
xor
cmp
lret
pusha
pop
test
imul
sbb
add
out
inc
pop
or
dec
xchg
jae
aaa
ret
je
jnp
xchg
mov
add
xor
loop
inc
mov
add
aad
fcmovne
and
and
arpl
sbb
sti
dec
outsb
push
or
xor
les
out
loope
inc
out
add
stos
mov
movl
es
scas
movsl
cwtl
jge
shlb
or
sub
sub
shlb
adc
push
rclb
test
and
loop
fdiv
scas
popa
dec
idiv
clc
add
test
into
mov
mov
mov
pushf
shrb
adc
sbb
xchg
pop
inc
cwtl
xor
mov
jo
push
cvtps2pd
fwait
or
push
cld
je
xor
lea
jbe
fists
out
mov
mov
adc
push
mov
mov
pop
xor
pop
push
test
xchg
fstpt
repz
popa
call
sub
jnp
inc
and
sub
dec
mov
lea
lret
or
imulb
cld
xchg
mov
sub
jo
mov
sbb
mov
cltd
and
rol
push
mov
jo
cmc
push
add
mov
ja
inc
fdiv
dec
push
adc
int3
mov
fwait
repz
jb
push
cli
pop
decl
daa
scas
push
iret
jge
or
daa
or
mov
mov
or
or
ficompl
insl
push
add
mov
in
icebp
mov
adc
in
jbe
push
es
sbb
mov
pop
or
jecxz
lea
je
pop
pop
ret
lcall
xchg
and
mov
js
inc
push
call
repnz
popf
jecxz
clc
xlat
loopne
jns
mov
fsub
xchg
mov
xchg
jg
push
inc
jmp
pop
mov
aad
xor
pop
add
dec
rolb
stc
repnz
add
pop
les
fldt
lret
adcl
shrl
jne
mov
fimuls
mov
mov
and
mov
jle
pop
cmc
test
in
addr16
mov
lods
daa
arpl
insl
daa
add
ja
sbbl
loope
add
xor
cmp
je
xchg
je
mov
and
sbb
shll
sbb
test
inc
xchg
leave
mov
enter
insl
aas
fimull
clc
push
or
xchg
lods
repnz
push
jle
pop
shll
rep
repnz
push
push
dec
add
adc
add
inc
ja
pop
add
mov
mov
pushf
clc
std
dec
test
int3
call
inc
cmp
lcall
push
rorl
shrl
test
lock
pop
lea
xchg
loopne
mov
movsb
sbb
xor
cmpl
movsl
xor
xor
loopne
popa
loop
jmp
outsb
adc
sub
jb
push
or
sbb
adc
xor
cmp
sbb
sti
mov
dec
jp
test
xor
sub
aas
ja
test
scas
cwtl
xor
fildl
and
lods
cmp
or
inc
sub
shlb
xchg
aaa
xchg
or
jo
add
repz
adc
xchg
and
dec
adc
outsb
mov
cmp
push
loopne
jl
daa
sbb
dec
push
js
pop
rcll
xorl
fsub
mov
sahf
lock
mov
int3
movsl
dec
gs
leave
push
int
or
outsl
sub
leave
jg
out
push
cli
adc
add
dec
push
xchg
dec
push
push
add
int
les
jnp
or
pop
jl
jb
stos
scas
pop
negb
adc
jp
loop
mov
or
add
pop
aaa
push
call
test
cwtl
inc
testl
dec
adc
movsb
jb
inc
cmpsb
cmc
jp
test
xchg
ret
adc
pop
aas
jnp
outsl
sbb
repz
fsubrl
xor
pop
xchg
test
dec
push
sti
xlat
xchg
loope
cmp
ja
and
push
and
push
xor
and
xor
mov
sub
mov
lcall
mov
pop
out
out
lret
xchg
cmpsl
enter
cmc
nop
fadd
cs
jno
xchg
push
popa
in
shl
divb
or
xchg
jns
jo
mov
into
push
mov
addl
mov
insb
inc
mov
xlat
mov
insl
pop
xlat
stos
ret
pop
aad
sahf
arpl
ljmp
or
cmp
xchg
aaa
sub
sub
xchg
insl
insl
push
lret
mov
pop
xchg
sub
std
sbb
pop
mov
ret
jb
stos
jno
push
je
dec
fwait
xor
lds
mov
aad
mov
test
inc
rcr
ret
popf
pusha
test
or
push
out
jmp
push
rcrb
fmuls
std
jno
push
dec
in
cld
or
out
loop
cmp
mov
lds
mov
mov
pop
pop
popf
inc
push
pushf
gs
mov
iret
cmp
std
mov
imul
jb
and
imulb
popa
jo
push
lods
push
mov
pusha
icebp
sub
lds
addr16
sahf
push
scas
jns
sub
cmpsb
rorb
sub
inc
fdivrl
aaa
fsubrl
mov
fmuls
popf
ljmp
cmc
push
sub
mov
mov
mov
je
cmp
cwtl
or
push
dec
sub
mov
sbb
btr
lahf
lret
jp
icebp
xor
jle
aas
or
xchg
loopne
dec
cmp
or
pop
pushf
add
popf
push
nop
or
fistpll
cmp
sub
scas
lods
mov
cwtl
adc
out
dec
jo
iret
xor
push
ds
push
cld
fsts
xor
repnz
adc
jle
lock
xlat
aas
or
gs
add
jae
call
and
pop
xor
gs
mov
adc
or
sti
sub
inc
repz
push
dec
and
xlat
lea
hlt
dec
cmp
leave
daa
enter
inc
icebp
pop
add
inc
pop
stos
jmp
sub
jle
les
jb
adc
jo
mov
mov
jg
stos
sbb
cmp
mov
test
dec
push
adc
dec
push
shr
jb
stos
rol
popa
fs
adc
mov
cmp
mov
push
lods
push
xchg
clc
out
ror
lret
adc
pop
ss
into
fs
or
stos
push
cmp
dec
mov
lods
lods
sub
mov
push
pusha
lret
dec
fbld
dec
dec
jns
shlb
loope
nop
out
add
nop
out
jns
dec
das
sub
test
call
insb
enter
or
mov
mov
std
pop
dec
mov
dec
xor
mov
daa
js
xchg
push
push
adc
push
loopne
pushw
or
rcrb
dec
mov
jle
push
add
fisttpll
pop
push
jbe
mov
mov
push
cmc
mov
js
adc
out
xchg
inc
js
jmp
out
adc
sbb
shlb
dec
add
nop
push
rclb
mov
rorb
dec
add
jbe
push
sub
scas
inc
inc
sbb
xchg
cmp
rol
push
jg
cltd
add
sbb
scas
movl
mov
xor
cmp
loop
repnz
popf
loopne
lods
cmp
push
sarb
jns
test
cmpsl
in
push
sbb
stc
xchg
inc
stos
ret
mov
push
repz
loopne
scas
sbb
arpl
jge
and
aaa
dec
mov
std
popa
xchg
dec
mov
les
jne
loope
rcr
push
mov
pop
fdivs
out
sti
xor
sbb
mov
mov
dec
mov
test
cli
addb
or
inc
test
xchg
gs
stc
shl
mov
mov
mov
ficoml
ljmp
pop
push
and
or
jns
sub
imul
xchg
cld
and
push
dec
dec
sti
mov
bswap
and
in
mov
clc
pop
or
test
js
aas
gs
insb
les
mov
fmul
xlat
scas
xor
fcompp
repnz
mov
insl
shrb
fcmovb
insl
mov
test
push
cmp
sub
rol
lcall
stc
push
mov
test
mov
fdivrs
lds
mov
and
mov
adc
pop
movsb
inc
mov
and
enter
xchg
mov
and
mov
in
dec
mul
in
popa
cs
bound
push
inc
ds
sub
sbb
cwtl
mov
cmp
iret
nop
adc
jecxz
mov
insb
adc
inc
jl
addb
or
imul
adc
pop
inc
mov
hlt
movsl
xor
mov
fistpl
rcrb
mov
mov
or
dec
mov
lods
lock
mov
cmp
cli
ror
ret
cmc
out
pop
fwait
or
xchg
test
pop
jnp
sub
sti
cmp
jno
in
and
and
hlt
mov
fucom
pop
xchg
cld
in
jbe
icebp
inc
mov
inc
dec
in
pop
pop
aam
test
fdivl
int
enter
jg
mov
push
sub
push
aaa
push
scas
push
cmpsb
jmp
add
dec
outsb
xor
jmp
dec
push
sub
inc
notb
es
inc
fdivrl
mov
or
mov
clc
and
jnp
das
xchg
pop
jmp
ret
mov
jmp
fwait
dec
dec
and
xlat
stos
or
inc
icebp
ljmp
mov
shlb
dec
mov
mov
rolb
mov
xchg
adc
lahf
cmp
cs
test
mov
push
mov
outsl
push
scas
xchg
jnp
insb
lret
aas
mov
out
mov
xchg
gs
imul
ja
insb
jae
test
daa
test
ret
xchg
xchg
sub
in
fistps
outsb
bound
mov
fisubrs
stos
out
sbb
sub
or
lret
inc
xor
in
sub
mov
into
pop
pop
sti
pop
jle
pop
inc
shrl
jns
insl
fstpl
scas
lret
lock
bnd
sbb
mov
inc
rcll
in
repz
cmpb
and
loope
pop
in
adc
hlt
test
mov
scas
lahf
lcall
loope
fistpll
fldt
lods
adc
lods
xor
imul
inc
jl
fcoml
sahf
ret
mov
fstpt
sahf
xchg
rorb
push
lret
dec
call
insb
push
and
sub
int3
dec
push
sbb
sbb
dec
and
mov
out
or
movsl
push
std
and
iret
inc
cmp
loope
arpl
inc
push
aad
or
movsb
lea
dec
cli
xor
xor
shl
push
mov
mov
fildll
sub
push
add
pop
xchg
jae
out
in
mov
test
mov
cmp
add
fadd
in
mov
out
xchg
and
sub
jmp
jno
outsl
mov
push
mov
in
sti
push
imul
lods
pop
mov
les
xchg
add
cmp
lret
les
bound
jae
mov
mov
les
js
jmp
dec
sub
in
mov
movsl
push
scas
pop
mov
or
stos
hlt
pop
ja
out
push
mov
pop
in
rclb
rcrl
fwait
push
call
inc
negl
icebp
mov
inc
sbb
cmp
add
js
es
test
adc
or
pop
pop
push
scas
movsb
mov
inc
test
mov
push
sbb
loope
scas
sub
jo
lods
jns
pop
repz
sbb
or
cmpsb
push
push
loop,pn
inc
xchg
xchg
xlat
je
fsts
xchg
lcall
dec
push
ss
jbe
outsb
xor
or
arpl
inc
sub
xchg
cmp
push
dec
cltd
push
dec
push
les
mov
addr16
outsb
lcall
xchg
es
push
jmp
negl
out
stc
sub
mov
lret
mov
std
pushf
push
lods
in
sub
push
inc
mov
movsb
dec
add
push
mov
je
fistl
xchg
test
jl
ret
aas
inc
ret
fimull
out
add
push
dec
adc
sbb
ret
dec
sub
mov
sbb
pop
lret
aas
loop
cmp
mov
mov
dec
icebp
das
cmp
push
fprem
decb
ds
mov
xchg
test
xchg
and
sbb
scas
jne
xchg
pop
rcll
or
dec
call
and
das
clc
addr16
int
adc
popa
mov
fistps
cwtl
nop
pop
add
rclb
lahf
fnsave
xchg
ds
push
data16
cs
push
fildl
mov
comiss
inc
or
sub
mov
or
adc
jecxz
ss
pop
mov
lea
sti
add
call
pushf
and
pop
adc
and
mov
test
or
pushf
sarl
adc
faddp
or
pop
imul
sbb
add
sbb
rolb
in
out
and
leave
inc
xor
push
outsb
mov
imul
fstps
lahf
mov
pop
mov
test
int
out
sahf
add
gs
outsb
inc
adc
sbb
inc
sbb
bound
mov
xlat
nop
iret
int3
jnp
fwait
jno
clc
and
or
mov
lods
mov
jge
fs
xor
adc
and
sahf
dec
bsf
imul
push
jmp
jg
xlat
in
add
je
xor
push
push
mov
dec
in
mulb
mov
jmp
and
rcr
pop
out
inc
cld
dec
cld
aaa
mov
jmp
out
inc
call
pop
push
mov
xor
mov
mov
and
cmp
mov
popa
and
xlat
out
pop
jg
mov
mov
mov
popf
jg
add
fcmovbe
divl
dec
lods
lret
adc
das
fisubrs
sub
pop
push
nop
mov
jl
pop
cmp
cmp
cmpsb
repz
mov
scas
and
xchg
adc
les
xchg
addr16
pushf
mov
pop
daa
or
sub
cld
pop
mov
ret
pop
mov
and
mov
bound
jmp
push
adc
mov
insb
adc
pop
test
cld
aad
mov
push
cltd
test
iret
or
push
sub
and
jmp
inc
das
jl
mov
push
cmp
pop
jg
addr16
scas
outsl
xorl
in
jg
add
popf
test
rcrl
out
repz
or
fs
sbb
leave
test
pusha
outsb
test
call
mov
push
xor
fdivp
les
mov
cmp
adc
std
dec
pop
jb
add
outsl
push
or
sbb
xor
imul
adc
adc
inc
xor
sub
fidivrl
jle
jmp
push
inc
push
aaa
lcall
aad
xor
mov
adc
mov
xchg
imul
je
adc
pop
lret
or
push
test
mov
inc
pop
mov
setl
push
add
sub
fdivrs
sbb
inc
das
or
or
sub
jb
pop
popf
inc
mov
mov
sbb
mov
lahf
push
push
aas
pop
test
setle
aam
lret
shrb
inc
ja
loope
jno
cmpsb
xchg
mov
add
push
shl
xchg
add
cmc
ja
bound
jge
rorb
dec
adc
fstpl
jg
or
and
ret
cmp
mov
xchg
fimuls
cmp
push
out
mov
cmp
mov
adc
pop
rcrb
sbb
add
jno
mov
test
adc
aaa
in
aad
scas
cmp
popf
fisubs
xor
dec
jb
jecxz
out
dec
dec
add
int
ror
addr16
sbb
jge
and
aas
ss
adc
xorb
sbb
jne
sub
pop
jnp
test
aaa
dec
popa
not
push
lret
int3
xchg
aaa
sub
sub
mov
mov
push
mov
jecxz
dec
pop
push
dec
mov
lods
shll
mov
xchg
fisubrs
cwtl
pop
lea
shrl
leave
in
outsb
neg
cmp
add
push
ljmp
jecxz
inc
imulb
mov
sub
lahf
add
bswap
fisttpl
mov
enter
xor
out
and
icebp
and
add
xchg
repz
push
inc
jg
jl
sub
imul
dec
adc
mov
pop
pop
lock
shlb
aaa
and
icebp
cmpsb
inc
mov
loop
sbb
push
repnz
call
jp
dec
repz
stc
push
jns
cmp
aaa
in
out
mov
add
cmp
add
push
sub
xlat
sahf
mov
and
sbb
pop
cmp
dec
iret
ret
and
mov
add
lcall
ret
push
sub
test
mov
mov
aam
adc
sub
add
mov
sbb
addr16
adcl
fsubrs
mov
out
clc
jo
sahf
push
pusha
fisubrs
test
dec
addr16
jno
test
jnp
ret
hlt
sbb
leave
adc
pop
add
dec
arpl
push
bndldx
scas
shll
stos
rcl
jmp
cmp
lret
js
mov
jecxz
xor
lds
push
mov
cmp
jne
xchg
push
adcl
or
mov
insl
inc
dec
mov
aam
clc
test
lds
adc
clc
inc
jae
das
xor
dec
inc
sub
dec
sbb
add
call
xor
and
in
popf
push
loope
push
insb
daa
decl
repnz
sub
xor
stos
fwait
mov
push
dec
and
div
out
sub
sub
mov
dec
cmp
andb
and
lock
mov
mov
mov
adc
mov
dec
call
fldenv
sar
cmp
int3
add
inc
jp
mov
fmull
das
in
cwtl
mov
jo
push
in
jge
lret
es
push
dec
inc
mov
cli
inc
pop
xor
dec
cmp
in
and
sub
std
dec
jo
mov
sub
mov
pushf
cwtl
stos
mov
movsb
inc
inc
jae
popf
shrb
sub
cwtl
cltd
fisttps
inc
movsl
xor
adc
jb
int
sub
daa
cld
into
jb
popa
mov
mov
orl
nop
test
inc
insb
test
and
filds
jg
jae
mov
pushf
movsb
movsl
mov
jne
out
xchg
call
test
xor
gs
fldcw
jg
ror
and
pop
and
mov
ljmp
mov
jle
push
jb
mov
cmp
cmp
adc
xchg
je
cld
mov
push
adc
cmp
lret
adc
inc
inc
fistl
pop
mov
mov
repz
adc
jcxz
out
fwait
lret
rcrl
pop
clc
notl
int
sub
daa
daa
add
lods
sub
test
jne
ret
jae
invd
push
mov
addr16
int3
sbb
mov
movsb
mov
cmpsl
imul
rcrb
pop
fadds
or
iret
push
or
scas
ljmp
lds
iret
mov
rorl
hlt
and
shlb
std
test
aaa
sbb
sbb
push
test
rorl
psubb
or
cmp
and
adc
int3
mov
pop
hlt
push
push
sti
out
sbb
pop
mov
loope
and
dec
cmp
adc
xor
jp
aam
lcall
mov
and
dec
mov
stc
repz
lods
jle
jns
dec
mov
subl
inc
sub
or
xchg
xor
cmpsb
out
sub
cmp
dec
dec
adc
push
pop
pop
je
in
out
fs
jbe
add
imul
lea
popf
stos
xchg
mov
push
adc
mov
aas
jle
ficoml
mov
sbb
pop
outsl
and
aas
mov
mov
cmc
stos
popl
inc
cli
and
test
inc
add
jmp
add
addr16
add
clc
xchg
add
int3
pop
adc
mov
cmp
jl
push
js
xor
test
shlb
pop
push
es
dec
sahf
arpl
jl
mov
fs
ret
sbb
adc
mov
int3
cli
scas
sahf
lret
shrl
inc
cli
out
or
into
add
sbb
xchg
xchg
mov
dec
pushf
cltd
mov
test
or
adc
leave
mov
xchg
pop
sbb
imul
gs
or
and
pop
sarb
mov
sbbl
int
xor
lcall
mov
pop
fisubl
xlat
cmp
push
push
push
ret
mov
cwtl
inc
leave
loop
data16
add
inc
pop
testb
dec
xchg
mov
jp
and
pop
out
sbb
cmp
add
adc
dec
push
xchg
ja
mov
pop
lds
or
lcall
fs
adc
rcrb
sti
or
fs
movsb
dec
adc
mov
pop
outsl
mov
hlt
mov
sub
jae
test
aas
aam
mov
mov
cli
inc
push
push
xchg
cmc
aam
loop
dec
in
sar
xor
add
mov
mov
mov
dec
mov
aad
sub
dec
fwait
les
daa
mov
outsb
into
mov
cmp
mov
push
jle
shrb
cmp
xchg
test
mov
rorl
bswap
mov
out
lahf
xchg
xor
ss
mov
lods
sub
cld
lock
lds
and
stc
les
pop
stos
out
push
mov
mov
pop
sbb
fldt
or
test
push
sbb
push
dec
aaa
aam
jbe
inc
out
sti
popf
push
inc
out
inc
mov
rorb
and
sarb
imul
cmp
sub
in
nop
pop
ds
loope
sub
jg
std
scas
int
sahf
or
xor
pop
or
outsb
inc
movsb
rclb
mov
sbb
and
xchg
push
lods
lods
rcl
add
and
mov
or
shlb
or
sbb
addr16
fdivrs
fnstcw
sub
jbe
push
add
enter
inc
arpl
add
and
nop
lea
and
lock
add
sub
addr16
cmc
orl
xchg
adc
jne
adc
gs
mov
jg
dec
imull
outsb
ds
arpl
pusha
or
sbb
lock
movsl
cmc
test
mov
inc
shlb
dec
xchg
xchg
daa
scas
cmp
cmpsl
pop
mov
dec
mov
ds
xchg
insl
pop
test
push
rclb
mov
int3
sar
add
xchg
add
icebp
adc
jb
inc
or
sub
jecxz
test
jmp
mov
lds
jmp
std
mov
inc
pop
mov
sbb
aaa
or
mulb
fs
icebp
push
jecxz
stos
fsubrl
outsl
fdivrl
mov
jmp
push
daa
imul
cs
cmc
cmpsb
xor
mov
lret
bound
or
mov
mov
push
inc
pop
int
pop
and
mov
pop
lea
adcb
or
jmp
jge
dec
push
insl
negl
pop
sub
cmpsb
stos
cmp
je
adc
rclb
push
jns
mov
mov
and
jns
adc
imul
push
cmp
xor
lret
dec
out
fistps
pop
dec
movsl
arpl
into
lahf
xchg
icebp
push
mov
andl
mov
sub
rcl
in
mov
jg
sbb
jecxz
jae
xor
xor
imul
sti
test
arpl
rorb
stos
rcrb
outsb
sub
cmp
add
sub
push
push
cmp
mov
aam
loop
hlt
or
icebp
in
insb
fmuls
inc
pop
and
adc
add
dec
jl
adc
inc
push
and
dec
shr
or
sbb
mov
xor
pusha
dec
xor
mov
test
dec
movsl
inc
add
adc
ss
jp
fwait
aad
pusha
jbe
pop
les
aaa
loopne
mov
sbbb
cld
inc
aas
adc
cmpsl
aaa
inc
into
loope
test
std
jae
mov
mov
adc
sbb
in
nop
fmul
fidivl
push
movsl
insl
mov
movsl
andl
idivl
lret
push
dec
stos
add
mov
jg
pusha
push
xchg
insb
add
or
jmp
sub
jnp
sbb
sti
adc
xchg
sahf
sub
pop
cmp
push
adc
into
and
lods
loopne
mov
cmpsl
lret
cmp
mov
ja
lret
push
xor
xor
das
ljmp
jo
rcl
and
shll
xor
adc
adc
ret
ficomps
or
xchg
fsubrl
add
stc
lcall
cltd
out
mov
fnstenv
or
sbb
lcall
jle
push
push
mov
sbb
dec
lret
test
aaa
mov
insb
sub
outsb
dec
and
popa
pop
add
adc
xorl
fwait
dec
jno
or
cmpsb
cmp
out
mov
xor
jmp
jmp
xchg
ja
clc
mov
sub
fwait
ret
dec
jge
jecxz
lods
mov
jp
cmp
bnd
das
mov
push
jae
xorb
out
insb
outsb
mov
or
rcl
gs
push
dec
int3
adc
aaa
sti
cmc
rorl
push
adc
mov
jb
cmp
dec
fs
mov
push
lods
mov
or
xchg
mov
fwait
add
xor
push
dec
imul
fildll
imul
add
push
pop
psrlw
sbb
andb
mov
repz
shll
test
movsl
mov
add
and
out
bound
or
out
or
jbe
dec
je
popf
clc
xor
ret
and
jmp
dec
cmpsl
out
adc
loope
into
mov
ss
cli
movsl
pushf
cmp
pop
xchg
hlt
or
pop
xchg
mov
cmp
pop
pop
add
mov
mov
mov
add
push
aad
dec
mov
adc
or
pop
repz
pop
rcll
push
push
xchg
jle
scas
pop
ja
movsl
and
cmp
leave
push
insl
out
mov
push
ret
in
repnz
jb
inc
jmp
mov
bndstx
cli
nop
jle
fsubrl
lea
pop
call
sub
fstl
inc
jno
inc
adc
cmpsl
inc
dec
jp
sub
or
cli
pop
daa
mov
mov
pop
mov
pop
nop
je
mov
sti
pop
hlt
mov
mov
cmpl
insb
shl
mov
std
mov
ja
sti
aaa
shlb
enter
out
cmp
aaa
cwtl
jle
stc
pusha
and
add
cmpsb
sbb
in
rcr
test
xor
rorb
arpl
outsl
add
sbb
cmp
cmc
push
movsb
add
andl
pop
cmp
addr16
inc
pop
pop
xor
rcll
bound
pop
lcall
sub
imul
mov
mov
adc
inc
xor
inc
orb
inc
mov
xchg
or
pop
mov
mov
popa
sahf
mov
clc
int
cmc
xor
lds
insl
fstps
sti
and
lds
push
lahf
js
nop
aas
jo
pop
stos
add
mov
cmp
sbb
lods
add
add
cmpsl
lea
popf
dec
movl
dec
cs
clc
daa
pusha
mov
fadds
pop
das
adc
movsl
jo
inc
jae
xchg
mov
or
incl
xor
xlat
add
add
mov
into
and
xor
repnz
int3
int
jns
sahf
test
mov
sahf
dec
push
fincstp
ljmp
lcall
in
inc
jbe
dec
adc
je
outsb
das
repz
mov
sbbb
xor
frstor
stos
scas
push
sahf
enter
fs
mov
stos
popa
or
ja
movsb
fildl
call
mov
jecxz
xlat
mov
scas
mov
jae
in
adc
mov
subl
mov
cltd
push
jmp
icebp
lea
add
movsl
orl
mov
das
daa
fadds
xor
aas
adc
cld
stc
mov
int
push
mov
push
sbb
lea
push
es
aad
push
out
outsb
repnz
inc
lcall
mov
imulb
sbb
pop
dec
sub
cmp
xchg
enter
imull
dec
cmpsb
push
sbb
push
or
jnp
out
push
adc
push
xor
pop
repz
jns
rolb
sub
and
pop
jl
adc
cmpsl
nop
adc
dec
sub
push
movl
jnp
bound
out
sbb
outsl
lret
mov
cwtl
std
mov
lds
add
gs
scas
inc
bound
jno
mov
dec
inc
popa
and
xchg
dec
pop
inc
insl
jl
imul
inc
out
sar
mov
or
ja
push
js
push
addl
pusha
inc
sbb
scas
inc
push
pop
pop
insb
pop
xchg
jae
xor
or
or
push
cmp
std
inc
rcrb
pop
add
out
rol
xchg
into
cs
shl
mov
jb
mov
jno
popa
xor
shrb
es
add
sbb
dec
cltd
cmp
jbe
insb
bound
jns
jb
mov
scas
sbb
xor
add
std
push
mov
pop
test
xchg
test
mov
pop
scas
push
add
mov
fwait
loopne
mov
nop
and
adc
adc
pop
inc
lods
adc
popa
mov
fsubs
jnp
push
ffree
arpl
jnp
aas
dec
shl
cmp
inc
xchg
notb
stos
jne
fldcw
out
adc
iret
inc
rcrl
xchg
inc
pop
inc
adc
xchg
mov
mov
inc
sub
mov
addr16
sub
inc
cld
mov
push
lcall
ret
lods
mov
dec
mov
mov
add
or
in
popf
stos
mov
jb
outsb
popf
lock
push
sub
xchg
xchg
js
and
pop
mov
inc
jg
mov
push
sbb
adc
pop
add
add
or
xor
sbb
std
rolb
pop
fwait
and
xchg
jae
dec
jl
mov
je
xor
lret
push
insl
pop
mov
lods
lret
fnstenv
adc
fsincos
hlt
pusha
sti
sbb
xchg
stc
push
add
stos
call
push
dec
dec
push
sbb
mov
jnp
dec
adc
push
dec
icebp
and
xchg
fs
or
push
das
inc
pushf
repnz
push
test
jle
xorps
stc
arpl
dec
or
add
xor
lahf
les
jbe
fsts
or
xchg
testl
cmc
pop
mov
mov
mov
sarb
fwait
int
ret
loope
outsb
out
mov
out
sbb
sbb
dec
cli
dec
jae
hlt
ss
add
inc
sarb
out
pop
xchg
mov
or
dec
sub
iret
inc
pop
mov
popa
dec
nop
fisttpl
pop
test
cmp
cs
push
jmp
cmpsl
iret
inc
mov
divb
xchg
loop
sub
xchg
and
rcrb
xor
dec
mov
mov
fcompl
call
mov
fimull
addr16
fnstenv
dec
dec
and
jle
lcall
int
xchg
pop
dec
mov
jbe
test
xor
jmp
mov
icebp
add
push
fwait
jl
fldcw
push
notl
bnd
fbld
mov
fs
and
jmp
sahf
insb
inc
or
and
pushf
mov
test
lods
test
data16
out
sti
test
enter
add
xor
push
push
mov
jae
out
hlt
push
js
mov
xchg
cmc
sub
mov
fcmove
movsl
test
icebp
xchg
fs
pusha
mov
lods
jmp
xlat
jecxz
in
negl
cmp
inc
and
dec
push
inc
or
out
pop
mov
push
leave
xchg
push
ret
out
inc
in
in
out
xor
jl
sub
call
ss
dec
aam
gs
mov
sub
rcrl
pop
xchg
mul
sub
ljmp
pusha
push
bound
push
repnz
cld
xchg
and
mov
pop
ficoml
push
shlb
push
stos
mov
mov
adc
sub
aad
hlt
pop
test
test
sti
push
jge
push
aaa
add
ds
add
jge
in
sub
call
mov
push
jmp
ljmp
xor
lock
mov
lret
lea
lcall
mov
mov
and
mov
xchg
data16
and
cmpsl
mov
cltd
cld
xor
dec
xor
pop
mov
cltd
rcl
mov
adc
pop
add
cltd
subl
lock
mov
aam
adc
dec
lret
cmp
and
imul
jne
imul
fwait
rolb
adc
scas
testb
loop
repz
pop
out
push
xor
adc
sbb
sbb
inc
es
xchg
es
push
nop
add
lahf
out
imul
and
cmpsl
movsl
ss
aas
mov
jae
xchg
mov
pop
mov
cmp
dec
or
cmp
xchg
xchg
push
mov
sbb
nop
and
in
add
cmp
lret
loop
mov
xor
push
adc
sbb
add
jb
repz
repz
or
xor
inc
cmpsl
fstps
or
leave
adc
addr16
fs
clc
sbb
mov
jne
xchg
bound
mov
fldl
xchg
cltd
and
test
or
js
sbb
arpl
xchg
icebp
in
out
dec
fst
push
fisubl
lcall
adcb
mov
mov
inc
push
sub
in
cmp
cmp
sbb
inc
test
jecxz
fiaddl
sarl
jge
or
and
stos
mov
pop
pop
cmp
inc
push
cld
loope
adc
mov
add
outsl
aad
sub
fistl
aad
stc
hlt
ja
outsb
faddl
cltd
ret
out
and
sub
push
pop
lds
flds
notb
les
in
cltd
sti
or
pop
jne
testl
mov
shr
sti
test
nop
ret
inc
out
mov
fs
enter
imul
in
mov
push
enter
cwtl
in
xor
push
mov
push
xor
xor
push
stos
jp
enterw
rcr
popa
imul
xor
inc
jg
or
ja,pt
imul
cmpsb
pop
lock
mov
pop
insb
aad
inc
popa
mul
xchg
lods
cmp
out
dec
sbb
sbb
mov
dec
mov
or
jp
pop
dec
les
sbb
dec
mov
xchg
test
and
jg
pop
jb
pop
stc
aaa
adc
fiadds
shlb
test
aas
test
call
adc
outsl
jmp
or
fisttpl
lret
aas
mov
nop
push
arpl
cmpsb
lret
or
in
mov
imul
add
in
adc
int3
pop
loope
pop
cmpsb
xor
cmpsl
jne
jo
or
shr
sbb
mov
fidivl
testb
dec
andb
jb
adc
cmp
test
push
sub
dec
adc
adc
jbe
jno
fistpl
xor
in
mov
pop
push
mov
je
test
sub
pop
push
xor
ja
es
jl
xchg
pop
or
push
cmp
fdivrl
mov
xchg
xchg
std
cmp
aas
jns
lret
int
adc
testb
mov
add
out
or
idiv
pop
insl
inc
lahf
out
iret
ret
xchg
popa
push
add
jg
inc
add
out
jb
dec
xor
sub
mov
repz
xchg
pop
scas
pop
inc
xor
mov
and
jp
fstps
xor
sub
test
in
daa
xor
jbe
fxtract
pusha
movsb
test
pop
nop
in
mov
loopne
add
adc
jg
ja
dec
imul
add
jmp
gs
fwait
jno
out
xchg
dec
data16
mov
cwtl
cmp
pop
ds
sti
push
stos
pop
mov
das
aam
data16
shl
cld
dec
and
sbb
inc
cmp
sbb
movsl
jecxz
popa
lds
mov
repnz
fcmovne
test
pop
data16
mov
loop
lcall
fldl2t
jecxz
add
stos
jno
xchg
and
push
jnp
inc
mov
xor
nop
sub
pop
aaa
pop
mov
shrb
mov
test
in
xor
add
fwait
ja
aad
mov
mov
push
ja
lods
cli
mov
or
scas
test
cmp
lcall
std
rcr
or
xchg
inc
je
cmpb
push
push
loope
fisubl
inc
les
rcll
leave
bound
inc
push
repnz
das
repz
adc
or
fistpl
cmpsb
or
cmc
push
testl
mov
jno
sbb
inc
out
hlt
insb
add
daa
outsb
data16
adc
movsl
dec
lret
dec
lock
jbe
mov
imul
dec
ljmp
jle
imul
jno
mov
pop
repnz
fnstsw
add
cmp
in
and
mov
sub
add
cli
call
sub
adcb
das
sub
test
cmpb
cltd
mov
scas
pop
mov
mov
jmp
cli
jno
push
addr16
push
lock
in
scas
xchg
pop
dec
and
pop
test
addl
rolb
add
stc
nop
outsb
mov
or
mov
pop
ret
cli
push
mov
mov
push
add
jnp
mov
inc
icebp
xlat
test
push
loop
dec
pop
maskmovq
jle
sarl
mov
fistl
inc
xor
orl
pop
loopne
dec
lahf
fsubrp
aas
les
dec
outsb
stos
fidivl
daa
adc
adc
jns
dec
iret
fldl
pop
aam
cmp
mov
popa
pop
mov
in
cmp
add
sub
xor
je
mov
xorb
inc
jg
repnz
mov
ss
ss
mov
jge
lret
mov
sub
or
xchg
inc
dec
lea
mov
enter
inc
in
push
xchg
mov
xchg
push
jo
mov
stos
push
jl
and
pusha
out
gs
adc
movsl
sub
push
inc
test
mov
jmp
mov
xor
lret
dec
std
mov
fwait
jno
daa
push
lods
inc
fs
mov
call
adc
push
test
xchg
fldcw
hlt
jbe
mov
pop
dec
jg
cmpsl
addr16
jo
ret
stos
cmp
sbb
std
inc
xor
cmp
popa
movsl
ja
test
movsbl
push
mov
adc
notl
and
pop
mov
dec
xlat
pop
cmpsb
push
outsl
mov
pop
pusha
icebp
and
lret
or
sahf
stc
fcomip
add
pop
push
test
xchg
ss
mov
dec
mov
scas
rclb
push
lea
scas
ret
cmpsb
cmp
out
mov
ljmp
and
mov
adc
xchg
inc
push
mov
or
xbegin
insl
sub
xor
mov
and
std
dec
mov
mov
fwait
jnp
inc
pusha
sub
inc
jle
rolb
xor
and
fs
mov
push
int3
push
mov
subps
movsb
jb
jae
xor
pop
loop
add
and
inc
roll
lahf
and
mov
cmpsl
jmp
sub
add
enter
shll
ss
and
pusha
pop
jmp
popf
jecxz
and
mov
adc
pop
cmp
aaa
stos
movsb
mov
sbb
cmpsb
mov
pushf
fnsave
adc
cwtl
and
xor
add
in
pusha
mov
push
ret
sub
insb
mov
mov
movsb
push
mov
gs
lods
adc
cmp
ja
faddl
fsts
dec
std
pop
pop
sbb
cltd
test
mov
xchg
jbe
sbb
mov
adc
adc
ljmp
in
pop
mov
insl
cmp
sbb
mov
repz
sub
popf
scas
adcl
out
pop
push
adc
clc
scas
or
inc
lret
call
and
and
dec
push
sub
or
repnz
jbe
push
sbb
repz
mov
mov
inc
repnz
push
fwait
lret
data16
mov
inc
dec
or
xorb
loope
jge
adc
movsl
xchg
popf
mov
dec
dec
push
dec
sbb
dec
mov
pusha
in
and
push
fnsave
mov
pop
js
mov
repz
fiaddl
inc
popl
ss
cmc
aad
xlat
jp
inc
mov
enter
aaa
das
sbb
xor
mov
popf
testl
cmp
mov
addr16
cmp
sahf
int
adc
lret
stos
push
nop
add
jnp
arpl
mov
mov
mov
push
xor
stos
outsb
and
cs
das
pop
pop
or
mov
cwtl
push
nop
sbb
dec
lret
or
gs
jge
mov
testl
inc
aaa
inc
cmpsl
inc
dec
push
ud2
add
inc
push
xor
lea
inc
addl
push
push
fdivrl
mov
push
inc
jne
aas
cltd
cmp
push
adc
push
pop
mov
push
sub
ds
push
pavgw
loopne
int
jecxz
je
shrb
gs
mov
jg
ret
das
lods
xchg
add
jno
xchg
cld
roll
push
sahf
sbb
mov
js
fnstenv
or
and
push
test
sbb
xchg
fsub
jmp
jb
loopne
int
dec
movsl
data16
loop
cmp
test
mov
mov
int
fcom
push
pop
stos
insl
cmc
orl
repz
sti
add
dec
add
inc
inc
ljmp
gs
leave
jg
push
int
push
fidivl
jae
into
fwait
lret
jl
push
dec
les
mov
out
mov
xchg
addr16
push
push
adc
test
movsl
lret
mov
aaa
or
les
aam
inc
dec
sahf
pop
xchg
jmp
cmp
js
pop
jge
sub
ret
loope
mov
jmp
jnp
or
data16
push
out
lret
add
int3
sub
mov
adc
sbb
jmp
and
cmpsl
xor
pop
repz
cmovne
jnp
mov
sbb
push
push
jno
mull
add
sbb
lahf
cwtl
inc
fcmovne
stc
dec
pop
and
jmp
dec
fcmovnu
mov
cltd
lahf
mov
xor
jne
xlat
push
xchg
or
mov
mov
mov
jbe
fists
mov
shlb
mov
dec
loope
cmp
pop
and
jg
popa
fimuls
fwait
mov
cmc
cli
pop
cld
xchg
int
or
lea
lret
fbstp
push
popa
lock
and
adc
orb
jae
adc
test
or
cltd
push
push
sbb
adc
in
jl
push
add
pushf
mov
outsl
fcoml
push
mov
clc
nop
cwtl
add
adc
mov
push
inc
cwtl
lret
lahf
imul
adc
sahf
or
sub
movsl
in
xor
xchg
inc
js
xor
int
aad
jo
dec
and
out
ret
cmp
lods
mov
cmp
daa
pop
jmp
call
inc
pop
fsub
in
and
out
mov
outsl
and
cmp
int
test
pop
cmp
xor
mov
push
push
push
jge
pop
pop
and
jle
jge
xor
or
mov
inc
xchg
bound
dec
xor
mov
lea
test
mov
push
jne
jge
cli
lock
add
dec
int3
in
xor
dec
add
inc
and
in
sbb
sbb
mov
stos
rcrl
mov
xorb
mov
lcall
mov
cld
pop
jle
lahf
out
pop
rcrb
mov
mov
test
inc
mov
dec
out
or
inc
lea
mov
rcrl
mov
clc
loopne
push
imul
push
pop
ja
cmp
dec
cmpsb
adc
sub
psllq
je
lcall
daa
inc
push
push
out
out
ret
outsb
repz
aad
add
cmp
fidivrl
scas
sahf
repnz
in
mov
notl
push
lar
pushf
outsb
cmp
pop
dec
outsb
mulb
dec
arpl
push
inc
lods
dec
xlat
lds
lahf
pop
js
movsb
push
dec
in
les
ljmp
mov
inc
xor
sarl
jl
xchg
lds
cmpsl
cs
xchg
push
mov
or
popa
lahf
idiv
push
push
push
les
ja
test
mov
mov
test
jge
pop
frstor
add
shrw
lret
stc
sub
popl
push
pop
add
std
fnstenv
pop
push
std
fcom
jo
ja
sbb
mov
sub
cmc
cmp
and
cmc
int3
lods
int3
lret
jnp
or
rcl
scas
and
inc
push
or
sbb
pop
mov
or
sub
lea
xchg
in
stos
xor
arpl
imull
mov
aaa
cltd
out
xlat
push
mov
call
jnp
adc
inc
pop
movsb
fstpl
ss
popl
out
dec
jmp
scas
or
push
les
xchg
inc
orb
mov
les
adc
imul
test
jne
xchg
and
test
and
leave
sbb
inc
cli
imul
repz
mov
lret
push
xchg
ret
daa
lahf
bound
cmc
and
xchg
lret
outsb
pop
mov
ret
imull
xor
cmp
loopne
popf
mov
or
add
add
mov
insb
mov
dec
dec
shll
and
jnp
nop
push
aaa
call
mov
and
test
cmp
jge
inc
sub
stc
movsb
add
adc
aaa
fmul
sbb
xor
sarb
divb
movsl
pop
ret
sub
clc
loopne
iret
mov
pop
adc
les
push
psubd
aas
push
sahf
cmp
into
dec
lcall
out
xor
pop
jae
xchg
lahf
stos
nop
mov
inc
movsb
mov
int
push
xor
outsb
popa
aas
lds
nop
cmp
nop
pop
jecxz
or
xor
mov
rcll
inc
mov
int
pop
insb
outsl
pop
mov
sub
loopne
mov
out
sub
arpl
je
jge
xchg
push
bound
rcrb
pop
test
jmp
cmpsb
repz
arpl
cmp
mov
fidivrl
out
sbb
mov
adc
mov
out
jl
ret
aam
cwtl
sub
mov
test
xor
xchg
enter
xchg
dec
rorl
add
pop
aas
pop
mov
mov
mov
xor
fwait
sbb
popa
cltd
mov
add
jb
or
in
inc
cmp
push
push
mov
pop
inc
shlb
lods
sub
test
sbb
mov
mov
pop
fldenv
adc
dec
jo
xor
xchg
mov
leave
jle
std
add
or
das
mov
loope
in
inc
and
lods
mov
popf
lock
jbe
ror
lods
jae
pop
sbb
mov
or
xor
jge
sbb
icebp
lret
cmpb
and
mov
sub
test
inc
jmp
jb
and
sub
or
mov
push
cwtl
xchg
outsb
mov
xchg
enter
xchg
hlt
jmp
stc
xchg
pop
push
into
cli
cs
xorl
mov
repz
fidivrl
repnz
scas
dec
test
mov
lds
sbb
pop
daa
xchg
gs
lret
or
mov
add
sub
lcall
aam
mov
push
and
aad
faddl
jmp
cmpsl
hlt
inc
sahf
dec
adc
in
pop
cmp
leave
ficoml
ror
mov
popl
incl
addr16
push
ret
mov
mov
xchg
push
inc
in
mov
in
dec
fcoml
jl
jb
lea
or
rolb
cmp
loope
and
pop
xchg
iret
sti
mov
push
stos
out
xchg
insl
mov
pop
add
pop
aas
aad
cmpsb
add
jns
sub
or
pop
ret
push
aam
xor
xchg
mov
push
pop
fcmovbe
dec
push
lods
jg
sub
jle
mov
in
add
inc
mov
or
scas
or
pop
dec
mov
popf
push
cmovne
push
pop
out
mov
call
rcrl
aaa
into
and
push
mov
xchg
pushf
or
mov
sub
adc
imull
mov
mov
lahf
push
or
movlps
insb
cmp
scas
pop
fsts
xor
fidivs
inc
add
clc
lret
in
mov
dec
sbbl
das
adc
push
xchg
addr16
insb
add
inc
mov
cmp
dec
inc
xchg
push
gs
outsl
fstpl
sbb
push
add
add
adc
loopne
mov
cs
inc
cld
in
dec
xchg
sub
or
pop
adc
sar
mov
ret
jb
lock
xor
mov
cltd
pop
push
addr16
jmp
rcrb
mov
xor
pop
out
cmp
decb
mov
cmp
stc
out
lods
mov
mov
mov
repnz
das
int
js
je
mov
inc
shrl
in
sarl
mov
in
rolb
add
sub
xchg
lea
and
inc
imul
cmp
push
xor
xchg
push
jns
inc
xor
pop
and
fildl
push
jbe
js
nopw
lahf
movsb
ret
jb
cmp
mov
stos
add
lahf
pop
ror
cmp
shll
test
or
push
imul
adc
das
call
add
out
inc
pushf
inc
repnz
icebp
inc
mov
fimuls
mov
xlat
test
movsl
and
dec
sub
mov
pop
sub
fcmovne
out
aad
sahf
ss
loope
jge
sbb
roll
gs
fnstcw
lahf
and
pop
xor
pop
cwtl
cmpl
dec
cwtl
js
dec
xchg
mov
test
pop
shr
xor
inc
push
or
xchg
add
and
dec
pmovmskb
pop
mov
movsb
lock
dec
dec
addl
daa
out
mov
mov
lahf
and
test
jbe
pop
cmpsl
scas
mov
mov
out
inc
nop
sub
in
into
xchg
test
dec
arpl
or
add
fbld
lock
mov
cli
or
cmp
dec
int
dec
inc
fiadds
imul
out
enter
inc
insl
lea
cmp
jne
cld
jae
mov
arpl
pushf
mov
jg
in
sbb
xchg
test
xchg
cli
into
and
add
insl
inc
cmpsl
mov
cmp
es
fimuls
repz
sbbl
movsl
and
les
ret
pop
cmp
or
sbb
in
push
add
call
or
scas
sbb
outsb
pop
pop
xchg
push
or
daa
hlt
int3
or
or
and
inc
sahf
dec
negb
xlat
jle
idivb
mov
jecxz
ds
pop
lret
mov
iret
nop
add
imul
lret
adc
mov
decb
in
mov
dec
push
pop
rcrb
testl
insl
mov
mov
sub
mov
int
adcl
fsubrl
cmp
pop
jle
mov
sbb
movsb
aas
movsb
stos
xchg
imul
xor
cmp
rcrb
jnp
outsl
nop
sbb
sbb
in
mov
cmp
xchg
leave
jg
jbe
jnp
and
pop
xor
ret
das
les
icebp
mov
cmp
call
push
sub
xchg
insl
sub
push
sub
and
fisttpll
stos
ret
mov
xor
jmp
lahf
out
mov
mov
xchg
into
xchg
push
in
shr
adc
out
dec
or
mov
push
adc
sub
or
bound
sbb
jg
jnp
pop
fmull
push
dec
xchg
outsl
sub
aad
add
push
or
pop
enter
xchg
sub
jne
cmp
pop
pop
das
sub
pop
ror
mov
rorb
mov
test
mov
push
mov
fisubs
jb
sbb
jbe
or
pop
mov
int3
mov
or
int
add
jne
aas
rep
fdivrp
adc
cmp
jl
cmp
lock
cmpsb
push
mov
stos
sub
xchg
inc
pushf
and
or
push
mov
push
jb
and
jp
movsb
jne
push
sbb
mov
fsubrs
adc
lret
cmp
aam
and
adc
push
les
mov
fwait
jg
adc
mov
loope
mov
cmp
or
loopne
test
xor
sub
mov
sbb
in
fildll
inc
xchg
dec
ret
mov
fucomp
fisubrl
lods
fists
ret
push
jo
movsl
jns
xchg
or
push
and
sar
ds
jmp
cmpsl
adc
pop
jg
cmpsb
sbb
sbb
std
out
sub
rcl
insl
rcr
pop
xorl
scas
sub
ret
cmc
in
in
mov
scas
imul
cmp
je
mov
mov
sub
mov
xchg
mov
sbb
push
test
pop
fucomp
dec
xchg
mov
push
out
daa
mov
stos
ljmp
adc
lock
ja
jno
xlat
or
pop
cmp
pop
jns
jnp
cltd
dec
addr16
repz
pop
ret
mov
jle
stos
add
mov
loope
and
sub
push
cld
and
mov
stos
pop
shrl
xchg
loop
mov
or
in
mov
dec
pop
pop
xchg
data16
jp
addr16
mov
lret
icebp
push
int3
andb
adc
mov
mov
pop
test
push
std
add
cmc
cld
mov
xchg
xchg
jb
jae
push
imul
inc
daa
fiaddl
sbb
cmp
push
in
inc
mov
dec
or
xor
test
adc
pop
mov
and
jl
pushf
jns
cmp
mov
jl
sbb
mov
mov
lods
mov
cmp
or
dec
or
aad
leave
rol
stos
pop
clc
das
clc
gs
mov
push
movsl
fisubl
loop
sub
sub
inc
loope
shll
cmp
sub
adc
jmp
xchg
dec
push
int
mov
mov
mov
mov
aas
lea
xchg
fidivs
andb
js
insl
jg
daa
frstor
sbb
add
and
test
std
mov
int
push
push
sub
test
mov
add
dec
into
test
jnp
iret
pop
scas
mov
inc
push
sarl
movsl
cmpsl
or
jb
mov
add
jl
push
into
dec
mov
mov
sti
pop
loopne
lret
in
shll
cmp
out
repnz
sbb
sahf
xchg
outsl
sub
mov
scas
and
mov
repz
lret
shll
loopne
sub
inc
pop
jmp
inc
jmp
mov
das
test
movsb
mov
hlt
inc
push
push
ja
lcall
out
aaa
test
push
mov
mov
aad
mov
test
cli
jno
mov
adc
push
mov
xchg
push
mov
lcall
out
dec
add
mov
aaa
adc
mov
xlat
cli
lahf
lea
cmc
rorb
ret
divb
xor
mov
push
dec
loop
ljmp
adc
lods
add
fwait
mov
xchg
in
loopne
hlt
cmp
lret
xor
fsubl
jl
adc
add
arpl
test
aam
mov
ret
pusha
mov
inc
mov
test
pop
dec
jge
icebp
xchg
mov
mov
sti
test
xor
daa
lret
sbb
xlat
fsubr
rol
mov
xor
xchg
or
cmp
neg
xorl
xor
out
inc
ss
xchg
stos
loopne
and
jecxz
inc
les
test
rcrb
das
insl
inc
mov
call
aas
cld
dec
inc
mov
or
add
leave
sti
xor
repz
dec
lods
push
clc
inc
movsb
cmp
jnp
dec
xor
es
adc
mov
lret
mov
outsl
sbb
inc
mov
adc
pop
in
mov
sub
mov
mov
ret
popa
pop
xchg
xor
into
add
jo
clc
enter
cli
sahf
rolb
mov
outsb
sbb
mov
xchg
fiaddl
xor
fdivl
clc
mov
xlat
out
fildll
jbe
mov
mov
pop
inc
shlb
sub
jb
imul
popa
stos
jno
rcrb
push
test
in
jge
inc
adc
add
sbb
xchg
adc
adc
cmc
or
mov
mov
push
mov
and
sar
dec
imul
pushf
and
or
inc
sti
xchg
jno
faddl
stc
dec
or
inc
xor
and
sbb
stos
test
sbb
pop
xor
push
cmp
insl
int3
mov
xchg
cwtl
and
push
adc
lds
test
adc
lds
sub
jo
push
daa
inc
cwtl
jae
jle
push
cmp
and
arpl
and
pop
cmpsb
xor
push
andl
fisttpl
int3
pushf
enter
int3
insl
ja
fisubs
jne
push
and
xlat
pop
inc
mov
cmp
ffreep
pop
aas
outsl
mov
scas
shl
sub
cmp
movl
arpl
inc
imul
sbbl
mov
mov
popa
add
or
mov
pusha
out
inc
ds
test
in
popa
xchg
adc
pop
mov
push
pop
add
repnz
or
sbb
repz
sub
cmpsb
aas
jl
outsl
xchg
movsb
sbb
xchg
xchg
fwait
jo
jo
dec
aad
xchg
test
cmc
les
sbb
jns
sbb
rcll
and
in
add
push
xor
cmp
sbb
iret
xchg
push
push
out
add
fmuls
iret
out
orb
adc
add
push
fwait
cmpsl
loopne
rclb
shlb
mov
rclb
into
js
cltd
sbb
jmp
inc
xor
ja
mov
pop
or
shll
das
sti
push
inc
iret
pop
xor
shrb
sub
dec
xchg
or
mov
rorb
jp
cwtl
push
imul
in
mov
hlt
or
mov
xchg
rol
cmp
jge
int3
inc
mov
in
and
fnstcw
push
mov
push
sub
mov
inc
push
jo
mov
les
xchg
rol
nop
or
pusha
mov
stos
aaa
adc
pop
ja
cmp
jl
aad
dec
into
data16
insb
sub
mull
scas
ret
cmp
add
in
cmp
jb
mov
cmpsl
or
scas
fnstsw
add
dec
or
daa
fldl
jmp
sbb
add
xchg
fdivr
fistpl
lahf
sub
dec
cmp
insl
xchg
nop
pop
and
sbb
int3
xchg
mov
popf
cmc
push
jmp
aam
inc
xor
mov
out
xor
push
inc
inc
xor
lahf
pop
mov
jne
je
mov
lods
push
lcall
adc
or
cmp
aaa
test
mov
and
mov
dec
aam
loopne
jns
adc
dec
inc
pushf
mov
sahf
jl
int
sbb
in
loopne
pop
and
xchg
or
xchg
cltd
cwtl
out
bound
pop
outsb
mov
lds
sbb
daa
mov
adc
xchg
inc
stc
call
jecxz
outsl
mov
mov
or
adc
inc
hlt
push
movsl
sbb
addr16
jmp
inc
inc
fsubl
inc
je
sbb
notb
das
int3
push
repz
xchg
pop
mov
jo
dec
xlat
stos
out
sub
jno
inc
dec
int3
stc
jmp
les
or
nop
lds
icebp
out
sahf
movsl
push
nop
enter
into
sbbb
xlat
iret
and
adc
popf
loopne
dec
and
test
out
out
stc
inc
cwtl
pusha
xor
jg
cmp
cmpsb
mov
sub
ficoml
out
out
xchg
cli
out
mov
cmp
jg
repnz
jle
jl
shll
out
dec
jmp
dec
fisubl
push
dec
sub
aas
dec
or
js
xor
inc
pop
lock
mov
mov
cmp
je
push
cli
lods
inc
nop
loopne
cmpsb
xchg
leave
push
jo
int3
mov
subb
pop
pop
add
cmp
pop
add
fidivs
jg
and
xor
testb
dec
lahf
stos
cmp
cmp
orl
add
mov
add
or
mov
nop
xchg
fidivrl
add
xlat
negl
sbb
cwtl
fldl2t
xchg
popf
dec
scas
loope
lret
in
pop
dec
sub
mov
imul
lock
add
xlat
es
inc
lea
adc
pop
xor
xor
xchg
sbb
jnp
xchg
add
lea
or
shrb
pop
push
sbb
setae
push
inc
mov
sub
aas
insl
xchg
xor
repnz
lods
mov
mov
pop
push
in
sti
add
sbb
xlat
fs
sub
es
out
out
xor
sub
add
fs
loope
inc
scas
lods
xchg
ret
pushf
dec
test
les
dec
push
mov
shl
mov
stos
rclb
ret
cmp
jnp
pushf
sbb
add
mov
in
cmpsl
mov
xchg
mov
sbb
pushf
out
sysenter
int
dec
push
cmc
mov
ret
scas
popa
call
aaa
xor
insb
pop
repnz
xchg
lods
lds
aam
and
fucomip
int
add
es
imul
inc
int
push
xchg
mov
cwtl
repnz
sub
adc
dec
add
out
out
push
and
out
add
or
in
inc
mov
leave
lods
sub
xchg
sbb
fisttpll
add
mov
xor
fiadds
dec
xchg
jmp
mov
imul
je
movsl
or
divl
add
xchg
push
xor
mov
movsl
xchg
pushf
cmp
dec
inc
xchg
fldt
cltd
repz
call
decl
das
out
and
push
inc
cltd
fucomp
ljmp
imul
xlat
jb
pop
repz
mov
pop
repz
sbb
test
mov
inc
sbb
push
insb
xor
mov
add
mov
xor
in
enter
fnstenv
mov
xchg
jne
lock
bound
in
popf
outsl
lds
lcall
cmpsb
lock
sbb
dec
ljmp
sahf
js
icebp
int
pushl
or
sti
roll
movsb
sarl
mov
or
push
rcrl
pop
jne
push
jg
cmp
adc
test
cmc
pop
fsubrs
cwtl
xchg
ret
jnp
in
out
sub
clc
ret
cltd
or
xor
xorl
cld
fists
xorb
sbb
pop
or
das
nop
push
ds
cmp
lea
dec
push
adc
in
add
mov
mov
out
add
fcoml
int3
mov
int
xlat
jno
out
mov
insb
addb
daa
mov
add
les
aas
dec
push
dec
loopne
scas
cmp
jno
pop
js
mov
inc
imul
xlat
test
popf
cli
add
lods
arpl
ss
mov
mov
cmc
jns
sub
outsb
cmp
call
and
stc
push
shr
jne
xor
mov
xor
pop
sbb
push
or
ss
aad
jo
cs
adc
loopne
stos
iret
jg
mov
cmp
and
adc
loop
push
rcrl
jp
mov
test
fldl
push
sti
cmp
arpl
lret
pusha
fld
in
jl
and
adc
mov
dec
mov
popf
jg
roll
ljmp
shll
fmull
sub
in
push
ret
xorl
mov
mov
ret
xchg
imul
or
popa
mull
andl
divl
jno
aaa
pop
and
xchg
mov
or
les
hlt
ficompl
test
xor
ja
and
inc
xor
js
adc
cmp
idivl
jl
lcall
jne
pop
gs
or
and
jae
dec
scas
orl
add
fdivl
clc
jp
and
icebp
lods
pop
dec
or
jecxz
mov
sub
push
jp
rorb
ret
aas
daa
iret
aad
and
outsb
lea
mov
addr16
cwtl
xlat
mov
or
mov
popf
ret
sbb
jno
andb
and
pop
add
adc
movsb
andl
clc
and
lock
push
iret
mov
faddl
mov
das
iret
movsl
cs
mov
or
xor
pop
nopl
movsb
je
enter
ret
xlat
mov
fdivl
or
or
mov
shlb
and
rolb
mov
xchg
push
stos
jnp
cmp
and
sbb
stos
lahf
xchg
cmp
jge
mov
adc
inc
push
xor
scas
mov
es
mov
stos
fistpl
add
lahf
jae
shl
add
call
fisttpll
push
jecxz
xor
aas
xchg
mov
aam
sbb
adc
push
push
clc
inc
push
in
sbb
jns
sbb
sbb
clc
shrb
movsb
xchg
sbb
je
sub
cmp
mov
loopne
out
addr16
cmc
lahf
insl
sbb
mov
mov
out
dec
fmuls
popf
jmp
inc
mov
cli
xor
fs
push
sarl
inc
bound
adc
mov
scas
arpl
adc
sti
leave
cmp
aas
lods
in
jne
iret
fisttpl
pop
xor
mov
pop
test
pop
fdivp
pop
popf
mov
in
fwait
pop
mov
hlt
fisubrs
sbb
pop
pop
xchg
xor
orb
arpl
cld
loope
scas
sbb
push
and
jl
lret
filds
or
movsl
scas
stos
jl
mov
add
loopne
push
fadds
adc
jno
mov
ud2
lds
inc
mov
pop
xchg
cmp
sbb
mov
repnz
push
shll
les
pop
mov
cmpsb
loop
xchg
int
repz
nop
adc
sbb
adc
cs
jae
or
mov
aas
jl
dec
inc
mov
xorl
inc
sub
mov
cs
or
cmp
lahf
lock
sarl
mov
lock
mov
xor
push
mov
and
sub
jns
rclb
int
or
or
shlb
in
mov
pop
dec
mov
adc
out
int3
outsl
add
sub
lahf
xchg
push
test
adc
jecxz
dec
mov
dec
subb
sbb
sbb
cmp
nop
adc
nop
rcll
cld
loope
cs
ficompl
pushf
jecxz
push
cmp
mov
and
jo
lods
xchg
inc
stos
cmp
or
cmpsl
jae
aam
aas
inc
pop
daa
mov
dec
out
test
int
cmp
adc
jae
ret
mov
push
inc
cld
out
into
push
mov
sbb
adc
mov
fnstsw
sbbl
decl
cwtl
pusha
mov
pop
or
pop
cli
popf
inc
inc
test
flds
cmp
shlb
into
mov
or
fldenv
mov
xchg
lcall
arpl
in
mov
mov
xchg
int3
jno
push
xor
sub
jae
ss
jbe
dec
xor
aad
adc
cmc
ds
mov
pop
mov
ret
add
aas
lea
pushf
lods
mov
cmp
shll
jns
mov
lods
cli
xlat
call
rcll
or
mov
stc
enter
or
cli
pop
stc
pop
push
cwtl
ficoms
mov
sarb
jl
pop
stos
imul
les
jmp
sti
iret
fidivs
in
in
mov
add
lds
int
mov
cmc
shrb
pop
sub
clc
xor
xor
sub
xor
mov
jg
mov
sbb
lcall
xchg
jle
pusha
pop
test
int
popf
pop
int3
push
outsb
mov
jne
jns
ret
dec
lcall
jo
mov
popl
lea
xchg
mov
bsf
int3
js
jns
and
leave
adc
in
cwtl
fs
mov
sbb
out
or
lcall
or
mov
mov
cmpsb
dec
adc
pop
fdivs
lret
push
aad
into
dec
fwait
andl
mov
sbb
sub
cltd
mov
mov
jecxz
out
stc
ret
xor
jge
and
inc
mov
and
inc
dec
inc
mov
sbb
jnp
push
push
inc
cmp
das
sub
stc
sbb
mov
jne
jle
and
test
sbb
ds
imul
daa
repz
nop
fldenv
pop
repz
push
je
push
lahf
pop
fldl
dec
ljmp
push
test
adc
xchg
cmp
sub
and
lea
fisubs
outsb
jnp
mov
addb
decl
mov
insl
dec
pushl
push
dec
divl
sub
jnp
sbb
rcrb
fimull
popa
ss
imulb
test
mov
lock
in
cmp
dec
xchg
inc
mov
push
inc
inc
dec
push
shrb
mov
push
jb
jl
pop
in
cmpsb
mov
push
pop
aaa
lcall
sbb
scas
out
cltd
orl
xor
arpl
daa
shl
out
das
mov
xchg
dec
mov
cld
enter
sahf
mov
insl
es
fisubrl
imul
pop
std
jge
inc
lock
fisttps
into
mov
or
imul
lds
push
xchg
or
pop
frstor
fucom
mov
imul
dec
cld
div
sbb
mov
push
je
repnz
roll
jecxz
sbb
pop
jp
mov
ss
mov
iret
aas
ljmp
and
mov
jge
outsb
mov
push
inc
push
adc
shl
sub
xchg
movsl
push
fwait
push
loopne
cmp
sbb
mov
aad
shlb
pop
fcoms
test
xor
lods
jne
add
jb
pminub
or
dec
stc
pop
cltd
add
inc
pop
cmp
andl
pop
jnp
orb
iret
cmc
aas
pop
aad
nop
pop
data16
lret
add
ds
pushf
fstpt
mov
adc
xchg
test
push
sbb
xlat
scas
mov
arpl
pusha
inc
cwtl
jnp
mov
imul
lods
push
fimuls
stos
in
cmc
jo
loopne
jge
jecxz
imul
mov
xchg
or
push
mov
cmp
mov
adc
push
fadd
mov
icebp
jo
loop
add
pop
jecxz
or
sbb
inc
or
scas
pop
sahf
test
adc
movsb
inc
add
adc
jae
mov
jg
movsb
fsubrl
dec
popa
xor
mov
jg
ja
push
mov
clc
jnp
clc
add
inc
pop
pop
jne
inc
mov
push
dec
cmp
lret
push
aas
cmp
jp
shrl
inc
and
pusha
sub
lock
popf
inc
mov
shlb
jmp
push
mov
bound
jo
lcall
inc
fsubrs
cld
mov
push
adc
mov
inc
cli
mov
cmp
pop
inc
sbb
mov
sub
fs
cltd
add
shlb
cltd
sti
addr16
xchg
in
xor
test
and
lret
cmpsb
outsb
adc
inc
aas
jmp
push
insb
dec
dec
cmc
pop
mov
je
int3
je
and
pop
lock
cmp
xlat
popa
jno
pop
xor
shrb
les
or
sbb
enter
cmpsb
inc
mov
push
das
das
jae
fs
push
scas
or
mov
mov
bound
dec
lret
mov
lds
inc
sbb
arpl
cmp
and
xor
adc
stos
stos
addr16
repz
icebp
xorl
push
add
inc
ret
dec
es
push
aas
push
repnz
dec
sbb
loope
hlt
icebp
add
cmc
movsb
sbb
add
jne
sbb
sub
stos
out
mov
mov
scas
sub
pop
pop
push
insl
lahf
pushf
mov
out
ljmp
mov
xlat
inc
push
mov
adc
push
dec
cmc
lret
scas
mov
insl
jno
inc
dec
sbb
or
jbe
dec
inc
pop
gs
dec
xchg
adc
mov
add
cmpsl
cmp
ss
std
ja
mov
movsl
decl
add
push
cwtl
add
loopne
push
gs
push
jnp
adc
js
cmp
cmp
aad
pop
out
xor
xchg
test
push
fadds
add
insb
mov
cmc
stos
mov
jg
clc
cmpsb
mov
jb
jecxz
fwait
pusha
push
sahf
rcrl
fildll
jg
addr16
pop
pop
inc
pop
jno
cld
shrb
out
insb
push
cwtl
les
add
jb
test
or
lret
ret
inc
xchg
dec
arpl
hlt
or
sbb
sbb
test
sbb
jl
pop
cli
xchg
push
sti
add
lcall
les
mov
xchg
cmp
push
pop
sbb
es
mov
and
add
dec
jmp
sbbl
mov
lods
add
xor
lea
push
cmp
js
insl
push
sbb
cmpsl
sub
push
ret
mov
data16
cwtl
cmp
aaa
rcr
jb
popf
fwait
dec
lret
inc
push
stos
aam
fimull
push
lahf
and
push
mov
pusha
and
jnp
jge
pop
popa
mov
ja
inc
mov
jl
mov
sti
stos
mov
popa
cmp
clc
xor
or
sbb
adc
inc
add
dec
or
mov
jecxz
inc
mov
je
in
out
test
ljmp
xlat
add
add
lock
inc
dec
lea
mov
fs
fwait
xor
push
cmp
push
sub
pop
fs
mov
add
xchg
xchg
gs
push
sbb
jle
jp
call
or
push
and
mov
xor
dec
or
cmc
shll
pop
dec
data16
pop
daa
add
das
out
inc
sbb
imul
lret
std
adc
mov
add
fistpll
xchg
jb
movsl
push
icebp
clc
scas
pushf
cmp
add
and
ljmp
loope
jl
add
movb
mov
mov
or
push
int3
sub
adc
push
sarl
dec
test
int
or
mov
and
call
push
cs
nop
mov
lret
rcl
paddb
aad
jno
xchg
out
inc
repnz
mov
mov
xchg
out
xchg
insl
cmp
inc
mov
push
mov
daa
xor
in
pop
xor
cmp
test
xor
lret
mov
aaa
rcrb
and
cmp
cwtl
sub
jg
addr16
cmp
jl
ja
adc
mov
scas
sbb
and
std
or
push
call
in
xchg
call
rorl
or
xlat
mov
pop
loope
add
ljmp
out
scas
lock
adc
and
in
lahf
xchg
sub
or
fidivs
mov
jb
push
xlat
pop
cmpl
rorb
dec
mov
into
cli
inc
mov
dec
xor
into
push
hlt
std
push
cmc
jno
xchg
push
mov
push
sub
xor
stos
sub
or
dec
iret
int3
xchg
rol
lods
dec
cmp
xor
mov
pop
jo
jge
outsb
vpsraw
imul
xchg
cmpsb
and
jmp
js
dec
add
push
mov
js
xchg
mov
mov
jp
inc
jg
mov
push
movsl
push
ljmp
test
mov
sbb
int3
pushf
lds
sbb
and
ss
pop
js
test
sub
cmp
les
out
pcmpgtb
xor
in
xorb
push
pusha
fiaddl
dec
sub
xchg
inc
ds
pop
xlat
mov
int3
into
ss
pop
pop
es
cmpsl
inc
sub
scas
call
pop
adc
add
mov
inc
jns
xchg
popa
and
mov
push
mov
shr
dec
lret
add
add
cli
aad
fld1
movsb
cld
mov
movsbl
jno
mov
or
cmp
ljmp
nop
add
shll
adc
loop
cmp
adc
loop
pop
sub
cltd
leave
into
push
insb
and
pop
mov
mov
popf
cmp
xor
aam
pop
mov
jmp
mov
push
or
rcrl
fisubrs
pop
insl
ret
push
cmc
rcrb
out
inc
dec
in
sbb
inc
or
push
rol
setne
jmp
adc
jg
xchg
pop
xor
wrmsr
shrb
notb
addr16
and
lret
mov
push
sub
mov
out
out
movsb
jae
lock
loopne
ss
inc
mov
out
pop
popf
dec
lret
mov
test
inc
call
hlt
add
add
cmp
imul
xor
mov
sahf
test
jns
out
sub
dec
mov
dec
or
outsb
jmp
xor
inc
loope
shrl
loope
mov
test
hlt
cmpsl
cmp
jle
dec
aad
je
add
jae
stc
dec
pusha
call
inc
mov
lods
in
test
fwait
sub
lea
push
mov
xchg
movsb
mov
inc
hlt
xchg
pop
sahf
lea
shrb
lds
mov
dec
mov
outsb
not
getsec
mov
test
cmp
lds
sub
hlt
shlb
mov
sbb
jb
jb
jge
cld
std
pushf
dec
shll
sbb
jo
cmp
cmp
sub
cmc
mov
dec
fcoms
xor
mov
push
jle
inc
fidivrl
sbbl
std
dec
push
out
popa
jmp
mov
dec
call
lahf
jg
jb
nop
cwtl
adcb
push
cmpsl
mov
push
call
imul
mov
pop
enter
or
sbb
inc
jnp
inc
idivl
and
push
das
js
mov
mov
push
mov
push
movsl
push
mov
add
faddl
mov
in
push
xor
cli
push
shlb
and
pop
test
orl
sbb
mov
pop
add
adc
fcoms
sahf
xor
scas
sub
scas
repnz
in
cmpsb
lret
pop
daa
ret
jmp
mov
jnp
cmpsl
jne
test
stos
inc
test
mov
push
ret
push
mov
xchg
jecxz
fldl
sub
addr16
testb
pop
out
inc
fsubs
dec
mov
cli
ret
ss
test
out
pop
adc
test
movsb
lret
mov
lret
out
pop
push
jmp
dec
push
negl
and
dec
xor
clc
push
sti
jnp
lcall
push
fidivs
add
das
test
test
and
dec
xor
add
clc
mov
filds
inc
pusha
adc
xor
mov
lock
sbb
leave
sbb
pop
jge
and
mov
and
fsubp
es
pushl
fidivrs
in
mov
adc
sub
inc
xorb
push
mov
pop
xor
insl
mov
lret
lea
mov
sbb
xchg
popa
cmp
hlt
arpl
xchg
cmp
pop
xor
xchg
or
and
cmp
jnp
rcrl
sbb
mov
mov
cmpsl
cld
out
cld
add
mov
push
lret
insl
in
sahf
test
test
jo
xchg
cli
jecxz
xchg
mov
mov
or
cmp
les
mov
aad
ljmp
ljmp
sub
mov
sarl
or
mov
xlat
dec
gs
cmpl
adcl
inc
cmp
clc
pop
sub
mov
loope
push
push
xor
mov
cmp
mov
pop
sbbb
rcr
and
adc
fmul
or
lock
and
test
bound
sahf
xchg
and
mov
mov
in
imul
mov
cmp
jb
popa
hlt
sub
fistpl
cmp
test
xchg
mov
lock
cmpsl
pop
mov
jle
inc
pop
sbb
cmc
add
lahf
stc
pop
mov
push
repnz
aam
dec
cmpsl
fcompl
or
inc
scas
outsl
xor
in
mov
cmp
std
bnd
xlat
ret
push
das
mov
mov
xor
shll
xchg
pmaxsw
mov
sbb
divl
lods
cmpsl
sahf
lret
clc
push
scas
inc
enter
call
push
mov
cmp
push
mov
jb
test
sub
add
mov
pop
inc
jae
sbb
mov
fstps
jno
pop
add
mov
cmpb
les
and
pop
jno
inc
faddl
xor
js
jmp
xchg
dec
xor
cli
sbb
std
fimull
lea
repz
mov
cmp
and
out
mov
xchg
sub
xchg
out
adc
repnz
and
out
mov
popf
js
dec
subb
jns
rorl
push
fdivrp
jle
mov
jecxz
dec
and
cmp
imul
mov
nop
push
cmp
repnz
testb
cwtl
iret
popa
aad
sbb
jecxz
clc
int3
imul
jbe
sbb
push
push
negl
jno
jne
ret
dec
ss
jb
mov
sti
arpl
pop
hlt
inc
std
mov
dec
outsl
xchg
and
es
arpl
dec
jns
shll
dec
gs
mov
jo
or
test
loope
mov
or
and
jmp
test
fs
sbb
imul
and
in
pop
push
cwtl
in
mov
nop
cltd
pusha
mov
or
rcll
imul
mull
xchg
pop
dec
mov
pushf
sti
inc
loope
les
mov
les
pop
and
mov
push
mov
lods
pop
icebp
into
cmp
test
movsl
aaa
aas
or
or
into
pop
scas
sub
imul
or
rorl
adc
fimull
sbb
cmp
in
push
mov
sub
aad
leave
mov
cmc
adc
ss
in
movb
cmpsb
push
xchg
add
mov
sti
pop
les
lret
jle
jl
jl
out
fisttpll
add
inc
bnd
xchg
int
imulb
xor
insb
enter
dec
mov
ja
sbb
xor
xchg
mov
cwtl
mov
add
iret
call
enter
cmpsl
or
and
mov
lods
inc
lea
aas
mov
jne
test
sub
sbb
xor
rcr
dec
daa
pop
ja
mov
imul
call
cltd
jg
jmp
jl
xor
cwtl
cmpb
std
jle
out
jmp
mov
fmull
insb
aam
or
add
or
xor
incb
imul
xchg
xor
fdivs
int3
sub
sub
les
mov
cmp
arpl
js
sbb
outsb
push
cmp
add
or
fdivr
sub
lret
mov
inc
push
mov
pand
lcall
popa
inc
cmpb
mov
push
mov
stos
and
cltd
inc
shll
sahf
cmp
add
and
cmpsl
leave
xchg
pop
and
jmp
jno
dec
lret
jmp
clc
in
sbb
fcoms
fbld
mov
mov
jne
xchg
shll
pop
lahf
mov
stos
aad
xlat
outsb
leave
xchg
inc
arpl
xchg
clc
lods
arpl
lods
mov
popa
in
pop
cli
daa
out
cmp
lods
jne
push
pop
in
movsl
jle,pn
dec
cmp
xchg
ret
push
jl
lods
iret
mov
push
mov
addr16
mov
arpl
xor
hlt
and
jmp
dec
push
out
mov
jne
jae
mov
jge
mov
stos
mov
xchg
js
and
pop
mov
xchg
jne
subl
push
roll
lods
rol
or
xor
mov
in
xor
xor
ja
push
inc
pop
push
popl
or
lods
mov
shr
fsts
inc
addr16
loop
cmp
push
xchg
pusha
aas
or
or
mov
mov
into
cmp
jae
jecxz
out
mov
sub
popf
rcl
jbe
lcall
xchg
xor
in
and
pop
aam
sbb
in
rcr
lock
mov
call
and
mov
in
lret
mov
hlt
jno
scas
sbb
movsb
lea
inc
lds
add
sub
mov
out
loope
sbb
inc
repnz
fdivrs
pop
out
pusha
xchg
mov
mov
sbbl
sarl
popa
out
mov
push
push
ret
jns
out
or
pop
dec
push
loop
sub
cmc
mov
fistpll
test
test
xor
mov
cwtl
push
inc
mov
mov
std
imul
cs
daa
repz
mov
std
or
divb
cmp
jns
out
jnp
out
lret
push
adc
ret
inc
cmp
jno
in
je
fdivrl
push
jne
aaa
aam
mov
or
enter
in
movsb
push
mov
sbb
xchg
push
shll
outsb
adc
adc
jno
into
fs
and
fidivs
or
push
mov
arpl
fists
ljmp
das
cld
test
es
or
pop
xchg
jnp
xchg
pop
push
outsl
aas
and
data16
xchg
int
inc
push
fdivp
mov
insb
cwtl
dec
rol
lret
push
pop
scas
loope
fadd
cltd
mov
int3
xor
jg
icebp
pop
jmp
lea
mov
arpl
dec
sahf
sub
dec
in
rorb
nopl
call
in
and
mov
and
out
std
sub
jo
enter
lea
std
je
test
mov
add
and
out
dec
gs
jb
or
mov
jae
repnz
movsl
clc
jne
imull
mov
inc
shll
cmp
stos
sub
xchg
inc
mov
xor
mov
int
cld
mov
sbb
dec
cld
in
sub
push
inc
mov
add
js
decl
mov
cmp
arpl
sahf
pop
push
push
hlt
xchg
daa
xor
inc
dec
mov
add
mov
out
std
jb
inc
orb
push
aad
mov
or
xchg
into
mov
es
sbb
jle
jge
rcll
iret
jns
mov
adc
inc
imul
mov
movsb
pop
pop
aas
cmc
mov
imul
cmp
add
shrl
imul
loopne
add
data16
addr16
cmpsb
cmpsb
add
inc
xchg
inc
push
xchg
dec
repnz
leave
cmc
pop
movsl
flds
popa
hlt
loope
loope
mov
loopne
fmull
imulb
out
test
lahf
inc
loop
jbe
out
addr16
xorl
pop
notl
inc
jmp
cmp
out
sbb
sti
paddq
or
and
and
in
sbb
mov
xlat
insb
xlat
mov
ljmp
adc
js
sbb
fadds
xchg
add
xor
neg
or
add
adc
inc
xor
xchg
xor
mov
xchg
rcrb
mov
cld
ja
or
rorl
fdivrp
sahf
jns
cmpsb
or
sbb
aaa
leave
cmp
push
cli
push
scas
fs
popf
cmc
jmp
movsb
movsl
fwait
xchg
push
pushf
inc
inc
pop
mov
jne
daa
pop
out
out
xchg
push
das
insb
inc
loop
addb
cmp
test
cwtl
dec
icebp
or
ljmp
xor
data16
cwtl
dec
daa
push
xchg
push
xor
les
jmp
and
sbb
daa
sub
neg
xchg
fdivrl
cmp
lret
out
inc
pop
fidivl
mov
xor
std
aam
inc
push
mov
jle
inc
jle
cmp
movsl
inc
fnsave
bound
shl
ja
mov
lcall
and
push
adc
imul
jmp
push
or
or
push
fs
or
xor
and
mov
arpl
push
popf
lods
add
ljmp
push
iret
ds
or
add
pusha
popf
ret
xchg
cmp
ficompl
mov
lds
insb
or
dec
pop
mov
les
sub
xor
loop
jbe
dec
stc
dec
dec
and
xor
push
fistpll
xchg
xchg
sbb
scas
out
subb
dec
mov
shll
adcl
sbb
mov
lds
mov
and
movsb
xor
xchg
ljmp
es
cwtl
mov
or
icebp
stc
and
adc
jecxz
or
cmp
and
and
cli
ror
test
popf
pop
loope
sbb
inc
sub
pushf
xchg
enter
sbb
loop
bound
insb
sub
or
clc
clc
mov
adc
test
out
cmp
mov
sbb
push
push
arpl
lods
lahf
fs
push
mov
gs
jnp
divb
fdivrs
adc
roll
int
mov
aas
loope
jne
push
dec
out
cli
daa
aad
mov
cmpsb
nop
push
xchg
int3
xchg
pop
pop
and
frstor
out
fisubrl
xchg
jg
xchg
push
mov
mov
std
or
mov
stos
push
aaa
mov
or
test
jb
cmp
fisttps
push
test
cmp
push
pop
scas
mov
test
sub
int3
aad
mov
push
sub
enter
pop
clc
into
cmp
mov
mov
inc
shlb
add
or
sub
xchg
cmp
lret
loop
jmp
push
sbb
sub
stc
cmp
xchg
pop
or
daa
xor
pusha
sbb
push
addr16
lock
pop
jns
pop
shl
push
mov
add
jle
popf
lret
and
mov
les
mov
stos
movsl
pop
iret
or
iret
cltd
aam
add
mov
jnp
ret
aaa
dec
mov
push
jae
xchg
fcmovnbe
jmp
ret
mov
xor
pop
inc
mov
and
adc
adc
push
mov
pushf
sub
lods
outsb
aad
andl
push
fs
in
rcrl
pop
xchg
int
push
or
dec
icebp
das
insl
cld
adc
inc
mov
push
push
test
push
lock
inc
pop
pop
test
adc
cltd
or
pop
jno
mov
push
sahf
mov
out
mov
jecxz
das
lahf
fdiv
xchg
daa
idivb
inc
mov
adc
out
fidivrs
fucomp
pusha
push
push
xchg
and
fwait
sbb
add
cwtl
hlt
mov
sub
push
xchg
into
jne
arpl
icebp
add
dec
mov
je
cwtl
push
mov
movsb
mov
inc
je
cmp
hlt
or
fsubrp
mov
xchg
cmc
ljmp
pushf
out
icebp
mov
or
jl
sbbb
mov
rcll
shrl
push
cmp
dec
cli
repz
or
test
pop
cs
sub
push
add
xchg
addb
pop
cmpsb
mov
sbb
lea
rolb
out
sbb
dec
in
jno
gs
xor
mov
cltd
loope
test
dec
mov
into
fidivs
cmp
adc
movsb
push
jmp
adc
movsb
shrb
add
pop
lret
adc
int3
inc
cmc
aaa
fildll
mov
sbb
fdivrp
lods
in
jmp
movsb
xor
mov
out
scas
mov
dec
push
pop
bound
std
xor
cmpl
xchg
sbb
push
sbb
push
iret
xor
fldl
cmp
add
stos
mov
add
bnd
xor
gs
movsl
stos
outsl
filds
outsb
movsl
mov
ds
stos
shlb
les
adc
shrl
cmpsl
jb
leave
insl
adc
xlat
mov
imul
jge
cmp
div
dec
sbb
add
xor
fdivrl
xchg
enter
leave
xchg
mov
dec
and
inc
sub
cmp
ljmp
loopne
out
add
dec
aas
cmpsl
call
dec
leave
insb
ja
pop
ljmp
popf
push
xor
pop
into
or
mov
push
mov
mov
jae
psubb
dec
test
sub
pushf
xor
das
jns
lods
outsl
push
stos
mov
stc
jo
xchg
les
js
popf
mov
push
sbb
test
or
xchg
leave
roll
push
cmp
jl
cmc
in
xchg
ds
mov
push
popa
mov
enter
rcll
mov
inc
dec
fcompl
mov
sti
cmpsb
addr16
mov
sti
dec
xor
cmp
mov
mov
popa
push
in
in
adc
hlt
mov
or
jns
xchg
bound
and
mov
ja
stos
pop
xchg
or
mov
push
std
scas
mov
ficoms
insl
popa
add
cmp
xor
in
ja
and
lcall
movsl
xchg
insl
adc
sub
inc
push
mov
out
stc
xchg
and
mov
inc
in
ret
pop
sbb
daa
lock
ss
js
pusha
pop
popa
pop
imul
fs
push
push
cmpl
adc
mov
jge
fs
mov
inc
dec
daa
mov
mov
aam
xor
cmp
daa
mov
mov
aas
outsl
rcll
jo
adc
lret
jmp
into
ljmp
inc
push
xor
push
xchg
push
mov
push
fstps
fwait
bound
cmp
dec
jmp
cmp
push
xchg
out
xor
arpl
daa
push
inc
dec
xor
cli
pop
pop
loopne
mov
in
lock
lret
pop
xor
lods
mov
or
in
adc
sub
push
inc
sahf
pop
outsb
sub
scas
cmpsl
dec
xlat
shrl
cmp
push
pop
in
mov
imul
and
dec
mov
mov
add
sub
pusha
pop
xor
out
movsl
pop
cld
mov
cli
fisttpll
aaa
daa
aam
lds
cmp
nop
fs
xchg
sahf
movl
xchg
jb
jge
lcall
jnp
mov
orb
pusha
fnstsw
insb
nop
or
sahf
xadd
shll
pop
out
sub
dec
out
push
lods
in
icebp
es
fcoms
cltd
xlat
sub
mov
xchg
dec
loope
enter
dec
dec
pop
fstps
and
pop
mov
mov
ret
test
popf
inc
jmp
sahf
jno
inc
adc
jae
add
std
jns
push
sub
mov
dec
xor
movsl
pushf
sahf
push
stc
add
stc
sbb
and
aas
iret
call
gs
int3
fs
ficompl
lcall
pusha
sahf
or
roll
ds
inc
dec
fs
mov
mov
icebp
je
in
mov
outsl
insb
sub
push
and
into
ja
jnp
mov
mov
xor
call
dec
jno
xor
das
bound
add
push
mov
mov
loopne
jb
and
dec
fcmovnu
orl
jge
cmp
lcall
lcall
nop
pop
lahf
and
jge
push
nop
cmp
adc
and
pop
je
ja
repz
mov
mov
jp
out
bnd
stos
jns
add
cmp
popa
aad
mov
clc
sbb
cli
cmp
pop
dec
fldl
cmpsl
and
xchg
add
adc
lods
out
pop
data16
add
or
outsl
sbb
rcr
or
push
aad
fucomp
push
adc
sbb
loopne
xchg
sub
pop
aam
sbb
cmp
outsb
mov
ficoms
push
insl
sbb
inc
int3
push
repnz
mov
notb
movsl
dec
xlat
lds
push
sbb
dec
scas
int
push
ret
add
mov
cmpl
int
and
aaa
adc
mov
fbld
xor
nop
cld
adc
aaa
sbb
xlat
fbstp
enter
dec
je
push
mov
cmpsb
inc
pop
cmpsl
mov
xchg
sub
repz
imul
jl
mov
push
test
cli
push
push
addl
add
dec
test
aam
cmp
inc
mov
adc
out
mov
ja
xchg
js
cmp
call
cmp
mov
fmul
dec
jmp
aas
and
sbb
cmp
lea
icebp
pop
sarb
and
movsl
sub
bound
lods
jno
mov
pop
test
jnp
ja
inc
inc
jo
loop
pusha
sub
mov
and
mov
imul
push
push
fistpll
sbb
hlt
sbb
jl
lock
mov
int3
repz
dec
scas
jnp
add
mov
sbb
dec
mov
add
jge
test
xchg
jl
movsb
xor
lds
mov
fdivl
push
cmp
inc
adc
dec
ss
dec
arpl
push
arpl
inc
rcrb
push
lods
jne
call
out
jg
fs
xchg
imul
xchg
push
mov
and
and
and
xchg
cli
es
stc
jge
cmp
roll
push
mov
dec
push
cmp
cmc
sbb
and
and
lods
imul
cmp
out
mov
and
dec
mov
inc
adc
aas
add
add
imul
lods
insb
daa
gs
fcoms
jo
push
test
adc
cmp
mov
dec
mulb
sti
xor
dec
fistl
icebp
clc
push
movsl
jo
aaa
aam
aas
pushf
rcrb
sub
and
aad
inc
mov
xchg
rolb
xchg
push
push
xchg
cmpsl
and
sub
jns,pt
xchg
insl
pop
lds
push
insl
imul
mov
push
movsl
add
pop
push
iret
clc
outsb
jbe
test
cmp
jnp
pop
pop
testl
movd
cli
std
arpl
jb
gs
xchg
jge
lea
dec
and
aas
sbb
cmp
xchg
imul
xlat
push
daa
cmpsl
fcoms
adc
shlb
jge
pop
jne
cmp
movsl
xor
pop
into
add
rcl
jo
out
sub
mov
adc
int
sbb
xchg
fadd
xchg
mov
fcompl
pop
sub
push
mov
xchg
in
cwtl
adcb
adc
sbb
scas
icebp
mov
pop
out
ret
jnp
push
je
cld
rol
pop
idivl
pop
push
xor
das
out
hlt
fmuls
lods
cmp
jl
pop
popa
or
cli
mov
mov
stos
sub
or
ljmp
cmp
ljmp
jl
adc
insb
xor
ja
das
dec
xchg
xchg
aas
dec
cmpsl
in
lock
add
dec
inc
xchg
daa
mov
push
push
or
mov
jae
mov
imul
add
movsl
fcmovb
shrl
mov
mov
orb
adc
repnz
push
stos
push
dec
mov
lods
sub
dec
cmpsb
add
gs
into
pop
gs
sbb
or
pop
sti
dec
imul
and
or
jp
bound
sub
cmp
bound
xor
nop
data16
and
es
aas
ljmp
shll
repnz
sbb
pop
lods
repnz
out
enter
xchg
add
cmp
xchg
and
imul
add
mov
adc
and
fistpl
loop
loop
out
adc
jb
nop
and
pop
jns
int
inc
iret
lret
jo
mov
xor
ja
lret
mov
mov
mov
pop
scas
loop
fs
mov
test
loope
cmp
ret
nop
push
sub
and
lahf
lea
ss
cmp
mov
and
inc
xchg
sahf
dec
in
mov
xchg
mov
adc
stos
out
pop
cmp
insl
mov
out
and
lock
mov
sbb
in
xlat
jmp
repz
or
mov
icebp
jne
xor
inc
cmpsb
testb
out
dec
lret
sub
mov
rcrb
jnp
add
or
mov
push
mov
fadds
lea
mov
scas
sub
sub
pop
repz
ss
std
add
pop
arpl
in
sbb
ret
sti
lds
je
popf
and
ror
inc
or
sub
in
test
mov
xor
out
mov
in
sbb
sbb
sbb
popf
lods
dec
push
jbe
fdivr
fcoms
leave
in
xchg
outsl
pop
ds
jbe
js
loop
out
daa
nop
mov
bound
pop
sub
and
jge
repnz
jg
xor
cmpsb
push
cld
jl
test
out
jle
mov
fiadds
adc
dec
add
popa
xchg
sub
cmp
mov
lds
lods
aam
sub
push
andb
jne
fs
out
fldenv
dec
xchg
adcb
mov
sbb
push
pop
inc
add
aas
push
fisubrs
pushf
dec
add
push
dec
mov
dec
sti
jge
fistl
cmpsl
add
cmp
js
jns
dec
lea
scas
les
jno
jg
mov
add
mov
sbb
imul
out
inc
push
divb
pop
sahf
movsl
push
arpl
stos
mov
cmp
push
imul
xchg
cltd
and
mov
stc
and
in
cmp
jno
add
xchg
jmp
dec
push
aas
arpl
loope
shlb
and
dec
mov
rorb
das
push
mov
lret
nop
mov
lcall
mov
mov
in
push
insb
mov
push
test
push
sahf
mov
xchg
inc
rclb
pop
in
sbb
xorl
lcall
lea
data16
adc
add
mov
or
mov
stc
xlat
je
addr16
jbe
xor
pop
push
jmp
cmc
dec
repnz
cld
push
hlt
xorl
test
andb
xchg
or
inc
aaa
add
cmp
test
xchg
cmp
jns,pt
testl
fadds
aad
ja
mov
int
dec
or
rcrb
sbb
out
and
mov
faddl
mov
add
subb
loope
ds
cmp
xchg
int
pop
push
push
jno
in
mov
cld
in
xchg
jge
sbb
adc
jbe
lods
gs
mov
pop
adc
push
cli
test
out
cmp
mov
or
sub
cmpsl
jno
xchg
repnz
inc
pushf
pop
jg
int3
or
adcb
sbb
xor
imull
mov
mov
mov
fwait
movsl
jns
push
loop
loope
stc
lods
inc
aam
pop
mov
lahf
adc
push
adc
clc
jns
mov
scas
add
aad
daa
xchg
fld
loope
mov
in
sti
leave
cmc
and
sbb
jp
push
rolb
jecxz
push
dec
mov
outsb
and
fsub
fcomps
mov
cmp
sbb
aad
enter
jecxz
popf
pop
repnz
ror
in
push
mov
and
mov
cwtl
adc
and
jbe
es
out
int
pushf
cmp
lahf
rcll
push
cmp
arpl
cmpsl
pop
sbb
js
add
mov
int3
mov
pop
fsubs
pop
push
adc
mov
sub
cmp
cmp
pop
push
sahf
jge
sub
mov
jb
enter
mov
call
sbb
mov
test
or
mov
popf
or
bound
ss
and
ja
punpckhwd
cltd
nop
push
sub
xor
push
pop
cltd
cmp
insl
movsb
jl
mov
xchg
lret
in
mov
mull
cltd
adc
push
loop
mov
mov
outsb
mov
mov
mov
enter
shrb
xchg
lcall
pop
add
in
or
jg
fwait
repz
mov
pop
xor
fdivl
adc
sar
fcmovnb
jno
pushf
xlat
push
push
or
jno
push
push
in
call
push
sbbb
in
xor
mov
test
cmp
inc
or
mov
pusha
push
ret
icebp
int3
ret
adc
fidivrs
mov
adc
dec
mov
arpl
pop
imul
add
loop
popf
popf
call
iret
sub
daa
or
out
rol
or
inc
xchg
pop
add
lds
insb
sahf
add
inc
lahf
sbb
mov
sub
sub
or
popf
shrl
jne
mov
aad
mov
fildll
dec
sbb
pop
data16
jae
repnz
dec
mov
in
inc
sti
push
xchg
add
movsb
add
xchg
test
or
adc
mov
adc
test
xchg
cmp
push
mov
mov
adcb
fsubr
fcomps
aaa
cmp
jle
xor
mov
xlat
stc
or
jp
fnsave
mov
sub
mov
leave
jecxz
iret
lock
fmuls
ss
dec
xchg
popa
fisubs
std
rcr
add
es
mov
inc
daa
loop
je
fistpll
cli
add
adc
fs
cmc
xlat
xchg
dec
mov
mov
and
add
mov
pop
stos
aaa
in
sub
int3
scas
sbb
mov
shll
add
or
mov
arpl
imul
push
dec
mov
inc
lcall
scas
add
jb
mov
loop
popa
je
sbb
pop
aas
movsb
cmp
push
je
stos
mov
pop
lret
push
dec
mov
pushf
test
ljmp
and
flds
jg
sub
pop
xor
outsb
imul
jne
pop
mov
fsubl
xchg
jb
push
jbe
lcall
mov
jbe
cmpl
push
scas
pop
mov
mov
inc
inc
jno
jae
add
and
or
test
xchg
addr16
cwtl
jae
out
or
mov
xchg
test
cs
inc
stos
xchg
lahf
jae
xchg
push
xchg
add
movsb
stos
test
dec
mov
xchg
ret
inc
icebp
push
mov
sbb
xchg
push
into
push
ret
push
cs
dec
jecxz
mov
xchg
jg
jbe
rcl
add
loop
shrl
cmp
sub
and
dec
jnp
testl
mov
pop
insb
add
das
sub
push
out
test
mov
or
cmpsl
xchg
or
jae
jecxz
pop
pop
daa
lods
insb
dec
int
push
cmp
pop
aad
xor
out
pop
addr16
bnd
fsts
push
or
out
pusha
ss
stos
fdivrl
xor
push
in
mov
imulb
mov
xchg
int
pop
gs
aad
fnstsw
arpl
push
jnp
cmp
jle
push
jg
jae
mov
mov
mov
mov
push
and
mov
les
cmpsl
xchg
imul
sub
add
fimull
or
mov
fidivl
jae
dec
dec
push
or
mov
in
jne
lahf
cmpsl
in
into
fadd
repnz
dec
out
dec
mov
rcr
pop
or
adc
jns
pushf
mov
pop
loopne
out
lock
and
cwtl
mov
xchg
fnstenv
out
repz
stos
lds
popa
pop
xor
or
fs
int3
out
std
push
inc
fdivl
dec
cmp
pop
push
je
pop
lods
cmpsl
mov
sahf
jge
lock
pop
popa
cwtl
rolb
call
jmp
sbb
mov
push
ret
sahf
lret
idivb
mov
mov
mov
in
xchg
cmp
sbb
sub
jge
mov
loopne
gs
inc
and
dec
lds
mov
mov
xlat
mov
pop
test
addr16
xchg
jne
xor
aam
or
inc
aad
scas
out
ret
mov
and
or
mov
stos
ret
adc
mov
cli
pop
xchg
fst
jns
out
xor
ljmp
pop
pop
test
aam
ret
stos
pop
or
repz
scas
std
mov
divl
pop
cwtl
push
mov
inc
stos
fistps
push
mov
mov
int3
mov
pop
jno
mov
inc
push
add
into
sbb
aas
stos
inc
sbb
fsts
sub
repz
mov
jp
arpl
mov
push
mov
dec
pop
adc
jb
sbb
push
fmull
jo
xchg
scas
clc
pop
sub
out
pop
pushf
cmc
jg
data16
jo
adc
sbb
push
lcall
mov
stos
push
lahf
imul
test
popf
mov
xchg
jmp
int3
ret
dec
mov
cmp
sbb
xor
ds
ret
push
ljmp
outsl
lahf
jno
fldl
int3
mov
inc
outsl
dec
push
cmpsb
push
mov
xchg
inc
stc
mov
mov
sbb
cmp
lret
jge
pop
sub
mov
mov
xor
hlt
outsb
mov
bound
lcall
lcall
xor
orl
ss
push
or
cli
out
pop
sub
out
pusha
loope
inc
pusha
test
cmp
xor
add
aad
xor
popf
movsb
testl
gs
sub
in
daa
je
cli
push
jecxz
test
xor
xor
aaa
cmpsl
popa
xchg
sbbl
repnz
push
or
imul
ss
xchg
cmp
aam
pop
inc
inc
add
fistps
stos
cmc
test
push
mov
outsl
sub
icebp
sbb
push
dec
lahf
xlat
ret
in
lods
xchg
pop
dec
adc
sbb
stos
jmp
loop
dec
loopne
add
fsubrs
mov
add
push
xchg
ja
mov
movsb
rorb
xor
mov
sbb
sub
xchg
push
xchg
sbb
cmp
outsb
add
sub
push
out
cmp
cmp
ficoms
es
cli
mov
sub
cltd
push
dec
popa
dec
into
popf
push
dec
jp
or
cld
adc
cmp
sbb
sub
adc
psubusb
out
push
add
xor
xchg
jge
ret
pop
fistpll
add
jge
mov
test
sbb
aaa
jnp
in
pop
sbb
mov
xor
bound
mov
mov
hlt
and
imul
outsl
mov
jg,pn
lret
adc
lods
test
lahf
adc
pop
out
fimull
push
inc
sahf
xchg
gs
int3
jecxz
xchg
jp
dec
lret
cmc
loopne
jl
mov
ret
sub
sub
pushf
xchg
je
mov
push
mov
jg
outsb
adc
xor
mov
sbb
jo
dec
pop
dec
pop
push
push
inc
aam
cli
test
in
cmc
xor
fwait
cmp
sahf
out
fs
pop
movsb
aad
rolb
adc
push
icebp
xor
movsl
cs
jno
xor
mov
push
sub
nop
jno
gs
movsb
pop
lret
jmp
aam
mov
test
sarb
jecxz
call
pop
xchg
mov
lahf
fldenv
mov
out
push
es
adc
das
fiaddl
insb
or
mov
jle
xchg
test
push
addl
sar
dec
aam
pop
adc
jle
imul
cmpsl
xor
andb
mov
jg
mov
cmpl
fcomi
dec
lcall
nop
ret
rorb
jns
mov
adcb
cltd
mov
cmp
repnz
lea
stc
mov
imul
or
pusha
add
clc
sbb
jmp
cld
stos
popf
jl
loop
jns
or
jecxz
push
or
cmp
xchg
lea
das
es
adc
lcall
cwtl
pop
inc
bound
xchg
xchg
aam
iret
mov
andl
jp
in
mov
neg
adc
stc
jge
stos
mov
icebp
jg
mov
scas
pop
pop
xchg
mov
mov
xchg
sub
mov
mov
mov
sub
scas
ja
sub
mov
arpl
in
jae
xchg
test
fisttps
out
scas
fldcw
fs
popa
add
in
push
mov
js
cmpps
movb
popa
rorb
pop
scas
mov
test
cmpsl
mov
pop
jae
out
aas
push
pop
test
in
outsb
fwait
adc
xlat
scas
sub
ja
sahf
jecxz
rcrb
icebp
and
cmp
in
insb
and
dec
pop
sbb
push
jl
lea
xchg
je
in
ljmp
loope
jns
test
cmp
ret
push
pop
xor
ds
leave
mov
les
out
pop
adc
lock
push
inc
repnz
jne
fmull
in
lea
xor
lods
lahf
mov
insb
pop
fcomps
jns
or
imul
mov
sub
cmpb
add
jno
cmpsb
leave
jp
in
xchg
scas
aad
add
aam
notl
cltd
fisubs
sbbb
lea
outsb
sub
xor
and
repz
aas
in
fimull
jns
mov
and
or
xchg
jne
loop
cmp
adc
jp
out
es
lret
cltd
sti
fcoml
out
rcl
xchg
mov
mov
pop
sbb
mov
inc
mov
insb
aas
ja
jns
add
mov
push
cld
pop
mov
lret
leave
cltd
add
xor
mov
add
out
jecxz
add
cmc
mov
xlat
pop
out
dec
ja
cmp
test
fptan
cmp
fisubrl
in
xlat
jns
xor
fnsave
shlb
adc
mov
scas
push
inc
push
in
xor
pop
hlt
lock
and
sbb
shll
bound
pop
adc
add
shll
mov
pushf
jnp
hlt
adc
add
subb
or
cmpsl
enter
dec
inc
and
test
in
mov
or
xor
int3
xchg
xchg
daa
xor
jno
cld
ja
addb
pop
rcrl
mov
xchg
call
jb
inc
addb
aad
jecxz
cld
fyl2xp1
pop
dec
mov
sub
imul
enter
mov
xchg
mov
sub
lods
loopne
pushf
ss
loop
dec
pop
std
ret
cmp
dec
inc
das
sbbb
jnp
or
mov
push
xlat
push
mov
movsb
cmpsl
inc
push
pop
jge
mov
push
mov
mov
mov
xchg
ficoml
sub
test
jge
add
or
sub
and
xor
cld
xorb
stos
repnz
test
mov
ret
mov
loop
fisubrl
cmpsl
inc
stos
push
shll
cli
adc
movsb
or
mov
ret
mov
test
clc
sbb
push
call
shl
jnp
mov
mov
cmc
fnstcw
mov
push
mov
loope
adc
ja
jnp
cs
aas
mov
push
adc
pop
sub
sbb
cmp
add
jmp
mov
stc
inc
pop
bound
loopne
ljmp
mov
pusha
push
subl
cli
lea
daa
out
es
and
pop
xlat
inc
fwait
pop
lahf
sub
aad
int3
jns
sbb
mov
jo
push
addr16
xchg
insb
cmp
jnp
pop
test
mov
and
cmp
mov
pusha
xor
fsubs
mov
insb
test
pop
mov
sub
mov
sub
std
push
insb
sub
addr16
test
push
clc
das
push
cli
aad
jmp
push
test
inc
xor
xchg
shrl
xor
imul
xor
xchg
mov
push
cwtl
xor
in
and
aas
arpl
mov
jno
cmp
call
dec
fnstenv
test
repnz
pop
mov
out
xchg
stos
add
jl
mov
xchg
lcall
sbb
ss
aaa
xchg
push
bnd
fxch
adc
sti
or
lcall
mov
sub
filds
repnz
int
addr16
adc
stc
sbb
int3
imul
movsb
mov
out
cs
pop
insl
aaa
xchg
test
imul
mov
out
or
cmc
cmc
loopne
js
cmp
jo
shrl
and
mov
xchg
adc
push
jne
mov
popa
push
adc
pusha
jle
repnz
push
and
outsb
movl
add
jl
mov
xchg
lock
mov
popa
ret
ss
imul
mov
ljmp
sub
daa
jns
mov
stos
loopne
loope
cmpsl
test
clc
mov
sub
mov
das
cmp
mov
cmp
rorb
rcrl
mov
inc
out
xchg
es
push
xchg
mov
inc
push
mov
mov
xchg
jmp
adc
imul
mov
scas
xchg
ret
sub
shlb
mov
js
xchg
divb
sbb
in
jae
ljmp
fwait
mov
rcr
cmp
sbb
push
into
fcmovu
lea
mov
imul
sti
mov
xchg
je
daa
jmp
sar
sub
repnz
push
das
incb
stos
xchg
movsl
sub
xchg
xchg
sub
add
repnz
sar
cmpsb
or
lret
arpl
sbbb
aad
xchg
cmpl
js
xor
xor
pushf
jp
mov
adc
bound
cmp
leave
xchg
in
rep
enter
dec
adc
xchg
mov
out
imul
fists
add
mov
xchg
mov
xchg
jmp
ret
adc
lret
inc
frstor
cltd
aam
cmpsl
xorl
pop
bound
sahf
fscale
jg
fisubs
comiss
cmp
popf
cmpsb
adc
lea
ja
jmp
lcall
stos
jae
adc
add
insb
bound
dec
mov
fisttpll
cmp
and
ret
in
dec
or
inc
jb
mov
scas
pushf
test
sub
stc
aam
bound
jnp
lods
adc
and
insl
dec
jp
sbb
out
mov
adcb
cmp
jnp
mov
int
aam
inc
shll
mov
sub
add
aas
loop
pop
cmp
xor
sub
mov
add
mov
mov
dec
movsl
and
imul
inc
mov
sub
or
push
call
scas
test
mov
sbb
jb
sbb
daa
scas
push
cmp
pop
mov
or
fcomps
clc
jl
pop
jmp
in
stc
xchg
test
fsubr
jo
fdivp
ja
xchg
cmp
mov
mov
jo
push
test
add
repz
jo
jmpw
push
imul
iret
subl
popf
dec
aad
jb
les
sbb
ret
push
sub
cmp
sub
add
or
int
fisubrs
iret
das
into
pushf
aas
outsl
jns
aaa
mov
xchg
arpl
cmp
rcl
lods
inc
outsl
sbb
inc
cmp
add
jg
xlat
mov
fcompl
mov
imul
mov
or
pop
sti
xor
push
roll
es
push
orb
lea
inc
push
xlat
mov
and
sahf
rcrl
pop
loopne
imul
test
mov
iret
lahf
fbstp
xor
mov
into
sub
jns
xlat
jp
jp
mov
rorb
xchg
add
stos
jnp
xchg
mov
sub
or
icebp
stc
divl
rolb
xchg
mov
mov
mov
int3
pop
inc
test
xchg
aam
es
dec
sti
cli
imul
bswap
imul
fnstsw
ffree
mov
xchg
shrl
xchg
mov
pop
in
jp
movsl
add
loope
push
outsb
je
popf
clc
ja
push
cmp
out
aam
es
ret
mov
push
sub
jmp
pop
ds
fildl
jbe
and
iret
xor
cmp
add
jmp
fmuls
sbb
xor
fadd
pushf
xor
fs
sbb
sbb
jnp
fisttps
lds
cmp
xor
mov
sbb
cmp
mov
mov
ja
int3
sbb
icebp
and
je
ss
leave
jge
and
rcr
aam
cmp
das
inc
ss
pusha
fs
push
arpl
fimull
incb
adc
and
push
adc
into
stos
fdivs
jecxz
out
fwait
xchg
das
mov
mov
push
test
dec
push
mov
push
adc
fimuls
adc
jne
fists
aam
imul
int3
mov
out
mov
jle
inc
sub
addr16
xchg
sub
ret
lahf
subl
bound
pop
and
pop
imul
insb
popa
jmp
rol
push
mov
or
dec
sbb
sbbl
adc
mov
adcl
out
bound
jae
push
ss
jl
mov
push
xor
test
inc
jecxz
nop
sbb
sbb
ja
jbe
adc
and
xor
xchg
popa
int
xor
insl
push
pusha
test
push
jns
iret
mov
inc
rcrb
xchg
xchg
cmp
inc
pop
and
dec
iret
xor
dec
pop
in
xor
icebp
xchg
out
add
xchg
sbb
mov
jp
in
aad
sbb
push
mov
add
mov
xor
jmp
es
xorl
xor
rorb
dec
jmp
iret
in
xor
lods
sub
sub
mov
fs
dec
arpl
lock
call
pop
and
scas
mov
mov
and
mov
je
cld
pusha
roll
ror
lcall
imull
scas
cwtl
or
lcall
cltd
pop
sub
shrb
cli
mov
imul
aad
push
aad
mov
popa
out
xor
pop
inc
ja
pop
dec
insb
mov
test
mov
lods
mov
add
cmp
into
std
sub
lods
nop
mov
mov
mov
popa
lock
addb
lcall
sahf
sbb
inc
fcmovnbe
jne
push
sbb
pop
inc
out
out
pop
push
push
shll
adc
loope
ret
fucomip
aas
dec
sbb
aaa
nop
test
ficomps
fists
into
push
sbb
mov
sbb
outsb
scas
mov
mov
dec
inc
mov
aam
stc
xchg
movsb
xchg
push
dec
jo
mov
push
lret
arpl
into
or
and
scas
pop
mov
repz
cmp
sarl
loopne
mov
mov
cmpb
int3
outsb
nop
xchg
dec
adc
pop
ds
adc
and
pusha
mov
mov
add
fadds
dec
mov
imul
pop
xchg
or
and
xchg
hlt
add
ds
jae
es
movsl
sub
cmp
in
xchg
mov
cmp
shrl
stos
les
inc
dec
xor
pop
outsb
inc
movsl
jne
dec
fisttps
push
test
es
sub
pop
popf
xchg
ret
scas
aam
jecxz
mov
push
xchg
mov
iret
sbb
sbb
in
pop
jmp
add
test
inc
in
shrb
fiadds
repnz
int
push
repnz
std
jmp
inc
jecxz
int
int
pop
aam
pop
rorb
pop
mov
xor
mov
jb
imul
pop
lret
and
loopne
cmp
mov
xchg
psrad
fsubr
loope
dec
loopne
dec
stos
jle
ds
cwtl
xor
jbe
enter
jmp
pmaxub
push
lahf
ret
sbbl
push
xor
pop
cwtl
stc
mov
nop
dec
repz
push
xor
insb
inc
mov
and
rcll
scas
dec
fisubs
fbld
out
mov
dec
es
push
mov
cltd
jmp
jmp
mov
decb
push
jne
es
push
jle
rorl
push
mov
push
movl
sbb
aad
and
in
ss
sbb
mov
dec
jle
add
xchg
aas
sahf
mov
scas
es
or
neg
mov
xchg
sbb
xlat
lea
or
call
push
xor
leave
sub
push
mov
daa
sar
cmp
push
jmp
adc
mov
and
push
inc
xor
ja
inc
mov
sbb
clc
clc
movsl
add
test
sbb
pop
stos
iret
jo
mov
shrb
inc
inc
pop
mov
ret
bound
inc
shll
jmp
cmc
pop
push
xchg
add
adc
cmpsb
jae
or
fstps
in
test
sub
or
jmp
pop
add
bound
rorb
mov
sub
sbb
jle
jo
lock
mov
mov
inc
repnz
cmpl
mov
data16
out
repnz
xchg
lret
inc
dec
mov
out
out
xchg
mov
aam
adc
cmc
mov
out
or
xchg
sbb
ljmp
loopne
ja
mov
and
lds
mov
int
out
clc
fnsave
push
add
cmp
add
or
int3
push
push
push
jne
popf
dec
je
lock
and
mov
xor
leave
and
or
cmp
xchg
lcall
int
shrl
pushf
scas
cld
imul
lock
fldl
rcr
rcrb
mov
sub
sub
stos
lods
testl
mov
mov
movsl
push
jnp
lods
dec
dec
popf
and
ret
add
stos
push
in
mov
sub
jge
outsb
call
lcall
outsb
test
jo
mov
jb
or
dec
fdivl
cmpsb
cmp
insb
pusha
idivb
mov
pusha
xlat
shlb
sbb
dec
outsl
jp
xchg
sbb
add
aas
iret
xchg
mov
mov
ret
sub
add
or
in
adc
add
cmp
xchg
dec
cmp
cmovle
lahf
sub
add
aad
repz
xor
cmp
leave
loope
or
adc
xchg
out
and
ljmp
cli
mov
cmp
je
outsb
mov
imul
aas
cmp
add
arpl
fs
ljmp
jl
or
dec
mov
hlt
repz
fldenv
push
or
rcll
cwtl
pop
adc
stos
mov
mov
pop
inc
sbb
mov
cmp
out
pop
mov
daa
sahf
outsl
fists
in
dec
popa
and
out
rcll
insb
movsb
dec
dec
adc
xchg
push
lock
or
std
cmpsl
xor
lret
sbb
jecxz
cwtl
popa
popf
fists
sub
ljmp
lods
mov
jg
lods
inc
sbb
adc
xchg
lret
jmp
push
dec
mov
pop
pop
jae
lret
and
aaa
test
sbb
mov
cmp
test
in
push
and
and
popl
cs
test
icebp
test
mov
fdivrl
jno
or
push
popf
aaa
call
jo
add
xlat
mov
popa
dec
movsl
sbbl
mov
jnp
test
out
and
icebp
mov
sbb
cld
daa
lcall
xchg
dec
cmp
pop
aas
mov
fwait
jo
notb
iret
xlat
dec
mov
andb
jge
sbb
loop
insl
inc
movsb
pop
push
dec
jmp
imul
movsb
outsl
sub
mov
ja
jno
pop
or
cmp
mov
rol
mov
or
repnz
hlt
adc
dec
jle
or
out
mov
jp
sar
out
inc
aam
jne
push
lahf
ficoms
xor
sub
and
and
mov
int3
insb
mov
or
sub
jmp
lods
and
cmp
and
jge
cmp
mov
call
push
jle
in
cltd
mov
push
and
or
and
gs
fwait
in
sbb
lock
bound
sub
lds
movsb
jge
xchg
out
test
in
dec
pop
xchg
pop
pop
les
arpl
xor
pop
and
bound
xchg
cli
mov
adc
dec
push
xchg
push
fimull
int
std
inc
dec
xchg
hlt
test
leave
mov
sti
adc
xor
test
push
push
cltd
jmp
jo
pop
scas
gs
dec
stos
imul
aad
jae
pop
cmpsl
push
jb
cmpsb
in
in
pop
sbb
out
add
test
insb
cmpsl
mov
test
decb
aam
enter
xor
rcrl
sub
dec
cmp
idivb
cmpsl
rcrl
jns
std
mov
jnp
or
jae
aas
pop
fidivrs
sub
pop
inc
xor
cli
rcrl
cmp
push
into
ja
sti
ds
mov
lcall
shl
mov
ficoms
inc
loopne
pop
lret
xchg
adc
push
popf
imul
sub
outsb
lock
jmp
pop
mov
sti
insb
imul
mov
sub
icebp
int3
or
sub
inc
push
cmp
cmc
addl
jnp
mov
add
jle
cltd
sbb
aam
adc
cmp
movsl
pusha
jno
fwait
push
mov
dec
stos
gs
xchg
pop
mov
iret
add
wrmsr
pop
cltd
lahf
mov
mov
sbb
nop
sub
rolb
lcall
mov
popf
inc
add
jns
dec
stos
in
lret
outsb
or
inc
sbb
and
cltd
xchg
fwait
cs
lret
push
lcall
mov
test
es
xchg
sub
ja
cmpsl
cmp
mov
adc
and
mov
jecxz
insb
ret
pop
lods
je
sub
dec
pop
cmp
and
xchg
into
jl
add
sti
mov
lcall
adc
lcall
int3
aaa
mov
outsl
mov
push
call
jbe
push
xor
iret
inc
pop
sub
xor
popa
mov
and
or
in
mov
in
add
mov
iret
out
mov
pop
push
test
je
outsb
dec
jnp
sub
call
cmp
xor
jg
push
xchg
fldcw
lods
pop
js
xlat
inc
repz
fnstsw
cmp
clc
fidivl
cmp
insl
popf
outsl
test
dec
lds
jecxz
sbb
push
cmc
mov
stos
mov
dec
jns
adc
jle
rcll
out
nop
pop
std
add
add
jno
adc
loopne
dec
lahf
stos
inc
mov
cmp
xchg
push
pop
jmp
arpl
and
mov
mov
ret
inc
lret
dec
lock
fsubl
lea
rcll
add
xchg
test
lret
or
negl
add
lea
imul
lods
addr16
xlat
add
scas
data16
push
test
enter
imul
jnp
pop
mov
sub
inc
push
call
fmul
cwtl
mov
jmp
inc
testb
notl
push
xchg
bound
adc
push
and
imul
xchg
sub
movsl
movsl
and
out
lock
xlat
cs
mov
mov
add
mov
xchg
push
hlt
out
sub
push
js
ficoms
dec
incb
ja
divl
sub
fldcw
or
xor
inc
lds
mov
pop
inc
lock
std
mov
push
pop
xor
movb
ja
push
push
loopne
jecxz
out
mov
cwtl
mov
test
and
es
out
test
gs
mov
xor
test
add
push
sub
dec
mov
dec
xor
ret
mov
cmp
daa
add
je
ds
out
icebp
fcompl
sti
mov
mov
push
mov
call
pop
js
mov
xor
add
mov
jns
inc
loopne
int3
cmpsb
mov
pop
movsb
jge
push
into
adc
xor
mov
lcall
xchg
fwait
xchg
je
aad
pop
js
fcompl
jmp
cmp
adc
mov
pop
insl
xchg
or
enter
mov
mov
fadd
into
aaa
js
movsb
inc
lahf
xor
mov
mov
inc
test
scas
push
and
mov
outsl
and
lret
subb
int
out
loop
jmp
xor
pop
xchg
cli
cmc
jo
std
mov
mov
out
add
mov
push
jle
xchg
test
shl
xchg
sbb
aam
out
out
cmc
fbld
cli
jne
stos
cwtl
mov
mov
jnp
sub
xor
xor
or
mov
gs
push
scas
aam
mov
mov
loopne
adc
out
cmp
jno
push
lahf
and
sahf
cmp
jo
lret
fidivs
out
jp
cmc
sbb
imul
mov
cwtl
pusha
xchg
stos
cmpsb
hlt
fs
lret
and
flds
inc
pop
shlb
es
dec
gs
cwtl
xchg
pop
xchg
clc
add
push
mov
cmpsl
mov
add
push
jge
xchg
lahf
sub
mov
sub
rolb
sub
sti
mov
je
insl
enter
inc
out
push
mov
stos
pop
pop
jnp
ror
push
lock
lret
lock
fs
mov
fs
ds
mov
pop
in
dec
jns
cld
test
call
or
jmp
jmp
ds
ss
pop
hlt
and
jnp
or
mov
xor
push
and
sti
push
or
mov
dec
sbb
jb
mov
lods
pusha
aad
xchg
popa
or
mov
mov
out
lret
xor
mov
adc
aad
inc
popf
inc
in
in
dec
xchg
je
inc
inc
xchg
fmull
dec
push
cltd
inc
inc
inc
add
jb
es
mov
test
adc
xor
xor
movsb
mov
shrb
ja
mov
sbb
mov
push
mov
dec
lods
xor
jbe
sub
mov
push
pop
xor
push
mov
xchg
add
and
mov
std
aaa
cmc
or
mov
mov
or
fcoml
fcomip
and
aad
mov
jg
gs
pop
in
mov
lcall
pop
es
jb
scas
aaa
cmp
rcrb
iret
cmp
inc
sub
cmp
rolb
shl
dec
sub
ret
sbbb
ror
and
jo
sub
xchg
mov
popf
sti
cmp
mov
mov
pop
dec
cwtl
stos
dec
aad
cld
fdivs
jl
push
push
pop
xor
fld
lock
adc
out
xchg
icebp
pop
rcrl
loopne
sbb
hlt
inc
fcmovbe
inc
push
mov
bnd
stos
dec
or
mov
out
js
adc
sbb
jae
fucom
jno
mov
pop
cmpsl
mov
cmpsb
arpl
daa
dec
fxch
test
push
fwait
pop
enter
sbb
cmp
jb
nop
pop
jge
jmp
out
mov
shll
pop
pop
cmp
pop
dec
repz
gs
jl
cmpsl
orb
lds
and
mov
push
sbb
and
inc
ds
cmpsl
add
fldt
push
mov
add
pop
clc
sbb
fisttps
mov
movd
inc
push
subl
pop
in
jns
adc
test
sub
ss
pop
jne
lods
add
mov
out
push
sub
mov
push
mov
fiadds
xchg
sub
sub
xor
xchg
pop
fwait
pushf
ljmp
movsw
xchg
stos
adc
fdivr
popf
mov
push
jg
mov
incl
xchg
xor
std
xchg
add
divl
aaa
imul
mov
cmc
push
sub
ss
sub
cmp
insl
cltd
pop
jnp
xchg
arpl
arpl
insb
addb
add
or
add
ret
stc
inc
popf
push
jbe
test
cli
push
stos
inc
xor
loop
xlat
xor
inc
fs
mov
cmp
addr16
lods
cmp
scas
dec
into
cmpsb
push
js
int3
push
jb
es
ljmp
mov
inc
repz
maxps
push
insb
out
xor
cmp
mov
stc
inc
sub
cli
arpl
lahf
icebp
cmc
jae
mov
call
ljmp
sub
out
cld
dec
int
mov
js
sbb
imul
scas
push
hlt
xchg
sbb
and
mov
xchg
cmpb
loop
sub
add
repnz
dec
aaa
in
inc
cmp
cmp
xor
fildl
leave
jns
inc
icebp
mov
inc
jecxz
pop
outsl
dec
mov
icebp
jg
push
inc
or
inc
out
pop
mov
mov
adc
cmp
push
outsl
push
push
scas
sbb
push
out
popa
ja
pop
data16
xor
or
and
lcall
add
orb
pop
lods
xchg
ret
enter
cmpsl
adc
mov
pusha
fdivrp
dec
inc
gs
sbb
pop
pop
jne
adc
add
leave
int3
pop
mov
ret
jp
fwait
push
and
andl
repnz
movl
add
shr
movsl
add
ds
std
xor
loope
add
lret
hlt
adc
inc
and
aad
iret
ret
inc
fisttpll
call
repz
ja
sbb
inc
dec
or
xchg
jge
call
inc
cmpsl
fdivs
xor
call
shll
adc
popf
xor
xor
mov
cmpsb
pop
lds
popa
mov
pop
inc
pop
jge
roll
mov
xor
out
or
sbb
scas
lods
insb
jmp
jae
ja
push
xchg
cmpl
sysenter
addr16
out
push
inc
inc
adc
pop
test
adc
xchg
fndisi(8087
pusha
in
push
mov
xchg
adc
out
in
orb
dec
lea
cs
xchg
push
je
in
mov
movsl
mov
or
cmp
mov
xchg
aaa
cmpsb
pop
scas
or
scas
mov
inc
in
stos
bound
mov
pop
pop
ss
push
lods
sub
pop
and
cltd
push
bound
mov
push
aad
mov
mov
enter
clc
aad
xor
jno
mov
mov
mov
jno
mov
pop
das
jle
push
aaa
and
ficomps
test
aam
pop
aam
gs
jns
inc
pop
inc
cltd
lock
dec
adc
jg
jg
scas
mov
pusha
mov
push
mov
daa
fs
daa
enter
scas
mov
mov
loope
push
std
push
repnz
js
dec
enter
sub
dec
mov
out
loopne
pop
mov
or
pop
xchg
imul
cmp
lods
inc
loop
dec
pop
pop
scas
jne
ljmp
mov
popf
push
dec
xchg
sbb
and
dec
inc
push
fs
scas
dec
fs
sti
push
push
or
lock
mov
nop
push
xchg
mov
sub
push
pop
mov
pop
lret
mov
xchg
pusha
dec
mov
or
adc
mov
pop
mov
push
inc
xchg
xchg
mov
mov
pop
and
test
hlt
push
pop
xor
and
aad
push
lret
mov
clc
dec
out
xor
icebp
mov
xor
popa
std
ja
cwtl
inc
call
pop
sbb
pusha
mov
xor
sbb
jmp
cmp
mov
add
jmp
lds
ret
in
mov
mov
rcll
jp
sbbl
idivb
data16
xor
push
stos
mov
dec
xor
cld
push
jbe
or
sahf
sub
enter
mov
pop
mov
test
dec
repnz
mov
jle
notb
outsl
test
outsl
lcall
pop
mov
ret
stc
std
lret
xor
nop
insl
sbb
pop
out
xchg
in
bnd
cmp
fmul
mov
vpsubw
fwait
lret
rolb
ljmp
mov
pop
lods
gs
clc
mov
sbb
xor
cld
filds
adc
movsl
adc
mov
stos
cli
outsl
pop
lahf
mov
sbb
iret
out
mov
sub
lcall
mov
aad
sub
push
push
sub
pop
ficomps
int
aam
pop
data16
xor
aaa
adc
rorb
lret
ja
stos
jcxz
xchg
lods
or
fimuls
lods
clc
stc
jnp
fwait
and
cmp
or
inc
fldenv
cmpsl
into
push
and
mov
daa
pushf
es
orb
outsb
fldcw
shr
pop
ds
fidivrl
jae
std
lret
mov
sbb
adc
add
lock
adc
jae
das
jns
cmp
push
or
add
mov
sbb
jae
gs
xor
push
out
fwait
pusha
pop
fsubs
push
fucompp
xchg
inc
dec
sahf
push
insb
loopne
inc
mov
psubsb
pop
fimull
pop
cmp
mov
push
adc
hlt
jg
sarb
leave
cmp
daa
dec
inc
jb
dec
mov
sahf
lock
cmc
push
mov
aam
mov
and
jle
or
hlt
mov
cmp
leave
jmp
or
pop
dec
xor
cmp
pop
cmc
inc
test
mov
in
sub
xor
jge
dec
ds
fsts
push
loop
mov
arpl
push
into
js
in
out
pusha
ret
int3
fmull
out
iret
and
sarb
lods
jae
mov
into
lcall
fnsave
test
sub
into
stc
in
or
cmpsb
push
int
out
pop
or
cmpb
push
push
add
not
stos
pop
jle
and
mov
push
xor
mov
mov
add
pusha
lock
pop
aaa
adc
inc
cmp
stc
xor
add
mov
and
leave
sahf
mov
mov
push
das
add
sub
pop
aam
xchg
xchg
cmp
mov
in
mov
push
pop
or
jns
jge
add
mov
xchg
roll
nop
cld
and
pushl
or
pop
cmpsb
lea
aas
sbb
test
and
xor
sub
movsl
xor
scas
call
and
repz
mov
pop
sbb
adc
mov
mov
leave
scas
xchg
ds
inc
lret
pusha
pop
push
push
loop
lret
sub
and
dec
jge
pop
hlt
jecxz
gs
xor
add
push
in
cmp
aam
ret
das
enter
test
dec
push
out
xchg
dec
inc
lcall
jge
and
js
push
cli
mov
xchg
into
pop
jae
cmp
roll
mov
fcomip
sbb
stos
mov
jle
pop
inc
stc
mov
ja
xchg
insb
pop
jle
pop
aam
shr
mov
pop
pop
push
mov
vmwrite
sub
cmc
jbe
sar
leave
pop
faddl
pop
inc
jbe
mov
inc
cld
jb
scas
int
adc
cltd
clc
lea
sub
sbb
mov
inc
fwait
push
fs
xchg
pop
dec
push
xchg
sahf
in
call
in
in
push
adc
and
pop
jp
popf
bound
rcr
dec
pop
and
cmc
sub
mov
fsubrs
mov
lahf
or
mov
adc
adc
addr16
insb
repnz
je
dec
mov
xorl
movsl
movsl
inc
pop
xchg
push
adcb
aas
xlat
sbb
dec
jo
mov
mov
xor
aas
clc
and
dec
sub
jo
push
adc
call
lret
lcall
xor
xor
andb
iret
fistpll
in
dec
mov
stc
pop
mov
arpl
sbb
push
fs
hlt
icebp
mov
btr
and
loopne
mov
aas
jp
push
das
fs
imul
mov
mov
mov
inc
and
mov
les
outsb
scas
mov
loop
cltd
and
out
je
mov
sbb
jmp
push
test
jle
sub
mov
scas
mov
mov
and
inc
jo
dec
dec
mov
cmp
mov
js
js
xchg
adc
sbb
cwtl
lods
int3
sub
xor
jns
jle
scas
enter
push
out
stos
imul
xchg
popf
mov
insl
into
push
jle
cwtl
movsb
and
push
jecxz
add
enter
pop
pop
push
xchg
pop
adc
ljmp
mov
jg
sarb
ljmp
fwait
jnp
pop
mov
xchg
fsubr
ret
sbb
pop
jae
or
inc
stc
inc
push
test
cmp
iret
xor
sbb
rolb
adc
das
xchg
xor
pop
iret
mov
pop
fisubl
in
out
sbb
xor
inc
nop
push
push
hlt
andb
sahf
mov
sub
loopne
dec
mov
inc
aas
test
push
out
loopne
mov
int3
test
push
cmp
mov
mov
mov
iret
and
add
test
ja
mov
lds
lcall
xchg
scas
push
test
or
inc
mov
in
mov
fwait
push
pop
mov
mov
sbb
mov
and
add
push
xchg
test
lret
int
call
cwtl
inc
push
jo
mov
imull
push
cmp
xchg
movsb
mov
fildll
jge
popa
cmp
mov
mov
inc
push
mov
arpl
in
add
es
iret
rcll
or
xchg
jae
jge
inc
negl
dec
xchg
push
fwait
hlt
mov
push
inc
adc
mov
jnp
jl
sub
xor
sbb
in
mov
inc
stos
pop
mov
push
jge
enter
test
and
jnp
mov
xor
xor
jae
sbb
shrb
dec
lods
inc
sub
std
stos
dec
sub
mov
pop
in
movsl
push
inc
jge
mov
in
xchg
ret
jecxz
loopne
mov
push
jg
cli
xor
xchg
xchg
mov
pop
stos
add
lds
jge
int3
dec
insb
xchg
dec
lds
adc
repz
cmc
hlt
pushf
add
xor
jns
fadd
fwait
sbb
inc
pusha
xor
jo
clc
lods
adc
rorb
mov
jns
pusha
je
aam
out
out
sub
scas
and
jp
dec
cs
mov
mov
in
xor
fdivrs
aam
xchg
call
sbb
pop
mov
and
outsl
jecxz
mov
jmp
jmp
cli
test
jns
mov
add
xchg
dec
lret
sub
push
testb
stos
leave
xchg
push
ds
hlt
sub
outsb
push
cmp
dec
in
pop
ffree
and
sub
push
inc
push
xchg
adc
pop
mov
loop
or
fwait
sbb
cltd
aam
stos
pop
dec
add
push
xchg
dec
dec
lret
dec
mov
dec
sti
add
cmp
fcmovne
or
call
shrb
xchg
iret
push
icebp
cmpsb
fsubrl
int3
fdivrl
repz
cmp
add
sbb
inc
scas
pop
add
jge
jp
add
adc
ret
fimuls
inc
dec
push
insl
cs
cmp
add
lock
shrb
loope
mov
xor
int3
icebp
inc
jno
and
and
and
xchg
cli
outsl
fsubs
rcrb
adc
movups
or
dec
icebp
loopne
ja
in
jg
mov
pop
stc
jl
ss
notb
xchg
mov
es
loope
mov
fisubrl
add
adc
sub
push
mov
lods
sbb
test
leave
shr
inc
xor
call
movsb
pop
jmp
push
jge
data16
gs
out
sub
fs
ja
scas
repnz
inc
cmpsb
sbb
pusha
push
pop
pop
xor
and
sub
jge
pop
or
mov
pop
repz
pop
push
les
sub
test
inc
jecxz
adc
aam
xchg
pop
add
pop
enter
jge
insb
repz
les
push
inc
jmp
lcall
and
push
xchg
js
adc
es
push
rclb
and
roll
jmp
jae
mov
inc
mov
pusha
outsl
cltd
filds
and
push
mov
shl
push
decl
repz
pop
ret
cmp
scas
ja
pop
or
mov
sbb
jmp
pop
fcmovnu
xchg
pusha
movsl
xchg
fstps
stos
push
jae
xor
xchg
adc
into
les
mov
and
jno
popf
push
dec
out
lret
or
nop
fdivl
shrb
jge
leave
cmp
jae
sub
subb
mov
testl
ja
sarb
jge
lcall
lods
rolb
in
popa
fs
std
push
notb
leave
aaa
pop
ljmp
adc
subb
xlat
add
mov
orb
add
pop
xchg
mov
sub
dec
aas
add
inc
popa
test
ljmp
or
icebp
xchg
add
dec
hlt
arpl
sbb
ja
push
scas
loope
mov
mov
mov
std
xor
push
pop
ret
mov
decl
mov
jmp
out
aam
pop
xlat
clc
fpatan
sub
sbb
imul
int
mov
ficomps
shrb
cmpsl
jno
cmp
mov
adc
mov
xor
pop
fdivs
jge
std
popa
dec
add
rorb
aad
add
stos
hlt
push
push
xor
mov
xchg
mov
sub
mov
cwtl
in
das
push
cmpsl
shll
push
push
and
fwait
aad
cwtl
imul
fnstcw
stos
pop
std
adc
insb
and
movsb
push
in
sub
shlb
dec
aaa
pusha
inc
sub
pusha
jle
popa
stos
ret
and
enter
movsb
mov
mov
daa
pop
psubb
fwait
je
push
and
mov
sbb
sub
test
mov
ja
pop
jne
mov
add
mov
int
cli
call
insl
lcall
jge
in
or
clc
xchg
or
lahf
xchg
test
push
xchg
mov
and
push
xchg
imul
xchg
xchg
jno
mov
adc
imul
mov
mov
in
outsl
sub
mov
inc
je
dec
bound
popl
aam
xlat
cmp
das
int3
lret
fistpl
add
xor
repz
mov
das
movsb
ja
out
ljmp
add
into
mov
aaa
dec
xchg
scas
adc
orb
pop
jbe
cmpsl
mov
outsl
ret
adc
aam
mov
pop
mov
push
inc
in
sbb
mov
cmp
ds
mov
xchg
push
ds
rol
ret
mov
inc
mov
fs
sub
pop
xchg
icebp
loope
or
adc
or
jb
lock
int
jmp
xor
data16
fwait
das
insb
jl
inc
mov
fs
das
fbstp
pop
mov
add
movsb
mov
push
test
mov
loope
push
jns
dec
mov
push
xor
cmp
xor
xor
adc
test
pop
mov
mov
cmp
ret
add
int3
jmp
pop
lret
dec
xchg
loope
adc
fildl
pop
lret
cltd
clc
and
in
sub
imul
mov
rcr
push
cmpsl
jbe
insb
cmc
jnp
push
in
mov
lcall
push
dec
icebp
neg
ja
xor
jno
jle
jnp
movsb
jp
outsl
dec
fcmove
or
mov
in
cmp
sbb
inc
adc
sub
jbe
loopne
arpl
mov
mov
inc
fldl
and
adc
push
lcall
xlat
pop
rclb
out
icebp
lds
jae
in
outsb
rorl
or
sbb
out
movsl
adc
lea
enter
test
inc
or
out
mov
mov
aad
mov
sbb
xchg
pop
stc
jb
aaa
aas
movsb
lock
es
jg
mov
or
xchg
adc
fldt
sub
and
imul
jle
popf
mov
and
imul
les
push
mov
jmp
jge
add
cmp
pop
bound
or
xor
sbb
ljmp
packuswb
and
lret
or
stos
clc
and
inc
lahf
data16
les
imull
testb
sbb
sub
xchg
sar
mov
xor
cmp
rolb
arpl
mov
loope
in
cmp
repnz
push
int3
mov
and
and
push
or
xor
jbe
adc
xchg
out
dec
sub
pusha
mov
int
cmpsb
sub
or
and
inc
sbbb
pop
shrb
gs
xor
call
pusha
mov
xor
mov
loopne
sti
ja
and
fistpll
add
or
push
cmp
xor
and
xor
rorb
ss
cmp
jge
sub
inc
pop
sahf
xchg
mov
sahf
sub
mov
mov
sub
rcll
cmp
fisubs
outsl
sbb
mov
xchg
pop
xlat
dec
pop
jno
lret
lret
test
cs
adc
push
add
fdivp
mov
jecxz
jo
and
fdiv
lahf
clc
pop
repnz
mov
xchg
stos
outsl
push
popa
pop
and
mov
stos
arpl
jo
dec
adc
mov
ficoml
sub
jmp
testb
mov
or
sbb
mov
sbb
cli
add
adc
pop
and
dec
push
mov
sub
xchg
sar
movsl
jae
pop
cmc
mov
leave
mov
cmp
xchg
jne
iret
mov
lods
lods
ss
push
pop
int
cmpsb
mov
hlt
je
and
sbb
pushf
movups
wbinvd
jmp
mov
in
jnp
insb
mov
jbe
push
inc
outsl
jle
xchg
mov
sbb
ljmp
outsl
xchg
clc
cmp
adc
outsl
call
rclb
lret
mov
lods
add
xchg
test
xchg
add
push
cmp
mov
stos
in
jg
sub
loope
and
shr
cmp
in
das
push
mov
mov
shrb
das
in
adc
jo
push
xor
dec
js
lock
cmp
aaa
pop
inc
mov
sbb
dec
sub
inc
stos
rcr
mov
or
and
and
in
jae
jl
push
adc
sbb
sbb
sub
sub
stos
rorl
lcall
adc
je
sub
push
scas
scas
sahf
push
mov
sub
rcrb
mov
inc
std
mov
jne
and
and
addr16
pop
and
pop
or
inc
inc
loop
stos
mov
movsb
inc
push
or
test
incb
jmp
cmpsl
into
pop
int3
mov
es
mov
cmpsl
mov
int3
gs
mov
pusha
test
ret
pop
lret
mov
xchg
repz
mov
inc
fs
jbe
mov
outsb
in
mov
lret
insb
push
jnp
pop
stos
das
push
sbb
add
mov
push
xchg
push
sub
repnz
xchg
sub
mov
std
popa
fwait
add
imul
pop
and
cmp
cmp
sbb
mov
pop
add
outsl
jns
jbe
xor
adc
sub
cmpsl
cmpl
les
xchg
fdiv
mov
mov
lock
ds
inc
jbe
in
fs
aad
cmp
mov
cmpsb
inc
fldl
pop
jo
je
fdiv
cwtl
roll
mov
jle
and
test
sub
push
mov
cltd
cmp
xchg
daa
push
inc
cli
shlb
rcr
mov
push
in
inc
outsl
aaa
fs
adc
cld
movzbl
lret
inc
pop
inc
xchg
rolb
mov
outsl
sbb
pop
mov
ja
mov
hlt
xlat
mov
movsb
inc
bound
xchg
test
cli
pop
scas
mov
mov
js
aas
or
popl
les
push
jle
pop
mov
mov
repz
fldcw
mov
mov
out
add
daa
fbstp
lods
hlt
jle
push
flds
sbb
in
push
repnz
push
mov
loope
shl
out
lea
imul
nop
in
imul
xchg
ficomps
sarl
sti
jmp
add
lock
adc
mov
movsb
aad
movsl
or
mov
sahf
adc
fmuls
jns
adc
cmpsl
std
mov
ficoml
clc
loop
dec
dec
lret
mov
pmullw
cmpb
or
sti
pop
notl
sbb
das
int3
scas
outsl
clc
cmp
insb
mov
ljmp
add
fldenv
fisubrl
lods
js
std
shlb
or
mov
ret
stos
sti
push
popf
into
push
int3
jne
std
pop
shrb
xchg
mov
lcall
test
movsb
jle
es
sub
out
xor
jle
lea
jl
pusha
popa
int3
jmp
push
lods
mov
test
mov
lret
cmp
push
aad
pop
xchg
popf
sbbl
lret
pop
ss
mov
and
popa
mov
xlat
mov
adc
pop
mov
push
xor
test
inc
adc
adc
pushf
push
add
xor
insl
inc
jns
popa
inc
cmp
into
or
add
cmp
dec
lcall
or
mov
add
push
inc
xchg
lds
sbb
adc
jmp
mov
and
out
mov
cmp
jl
fstps
fnstenv
ljmp
pop
into
ja
inc
and
mov
call
movsb
and
iret
outsl
pop
xchg
fs
xchg
popa
movsl
loopne
sub
sub
sbb
dec
mov
and
fistps
das
or
rclb
fcomps
jge
pop
add
inc
icebp
mov
gs
dec
loopne
frstor
mov
fidivrs
out
dec
or
mov
arpl
mov
dec
push
sarl
rorl
ret
pop
xchg
xchg
jae
outsl
xchg
mov
add
popa
inc
fdivrl
test
mov
fwait
push
mov
shr
or
cli
ljmp
int
test
mov
or
mov
xchg
add
adc
push
mov
sub
mov
cmp
lods
gs
int3
or
shrl
imul
jbe
inc
sub
loop
fs
inc
pop
xor
pusha
pop
jnp
xor
push
call
daa
xor
dec
cmp
jecxz
add
andl
cmpb
stc
xor
sub
pop
gs
jbe
out
bound
ja
fnstcw
pop
pushl
or
adc
sub
mov
xchg
dec
inc
or
icebp
sub
daa
sub
mov
movsb
xor
or
and
dec
mov
lret
pop
sbb
push
pop
int
aad
dec
mov
imul
daa
fwait
push
idiv
popa
iret
pop
outsl
in
mov
mov
pop
scas
pop
jle
lret
sti
dec
jnp
jl
or
jbe
loop
mov
jmp
sbb
les
jo
stos
out
cmp
mulb
and
jg
daa
adc
mov
daa
adc
sbb
dec
loope
divl
sub
out
and
pop
addr16
fimull
out
lods
stos
sbb
dec
mov
lret
add
dec
pop
lods
test
sahf
in
push
outsb
aam
arpl
loopne
xchg
je
mov
ret
lahf
test
mov
mov
loopne
enter
lock
fmul
xor
sbb
out
lcall
insb
outsl
lret
mov
insb
lods
call
xlat
insb
repnz
jl
out
and
lods
jmp
push
xchg
cltd
icebp
jl
insb
test
fidivl
adc
cwtl
outsl
mov
add
popf
jp
ss
std
xor
ss
and
jg
out
xchg
add
adc
movsb
push
jmp
jp
daa
nop
in
mov
mov
xor
decb
mov
mov
aad
xchg
cmp
and
fnstsw
test
in
lret
pop
inc
inc
and
into
inc
ljmpw
push
xor
je
mov
loope
pop
int3
bound
fadd
movsb
lea
and
pop
dec
xchg
fldenv
cmp
fbstp
jle
sbb
mov
and
mov
cli
outsb
cmp
rorl
mov
imul
or
outsb
lock
out
clc
push
into
and
jne
test
jle
out
xor
push
or
imul
xor
sahf
jae
or
sbb
dec
nop
xchg
jo
aad
fisttpll
sbb
roll
cmpsl
xchg
mov
das
and
fwait
cmpsl
cld
lea
push
rclb
and
xchg
fcmovnbe
jp
mov
sbb
xchg
and
cmp
dec
in
inc
push
out
jae
gs
in
ficoml
mov
fld1
mov
xchg
sub
mov
je
in
mov
adc
into
jge
xor
add
xlat
popa
push
jb
cmovb
mov
js
xor
loopne
dec
pushf
push
push
mov
int3
sub
dec
leave
stc
negb
mov
fstpt
pop
push
xor
cmpl
test
ja
repz
or
mov
or
mov
mov
pop
lods
adc
mov
sahf
out
or
mov
xor
mov
or
popa
cmp
adc
jecxz
cmpsl
dec
subb
lea
adc
ss
dec
je
popf
add
inc
pop
jmp
jg
or
jg
ljmp
push
arpl
imul
sbb
mov
xchg
in
out
sbb
cmc
mov
pop
mov
push
sub
add
ja
jle
pop
fisubs
sbb
into
mov
lock
mov
bound
mov
les
mov
inc
rorb
jnp
cmc
mov
push
xchg
loop
push
mov
inc
enterw
das
mov
repz
dec
or
xchg
scas
aam
push
mov
push
stos
sahf
add
fsts
test
pop
sbb
loop
loope
and
std
adc
gs
push
dec
sub
mov
push
jp
mov
xchg
adc
mov
mov
hlt
add
push
rcr
dec
jno
imul
xor
aam
push
cmp
mov
mov
roll
adc
loop
and
or
idivl
jle
mov
and
mov
mov
test
jae
dec
out
out
leave
cltd
cmp
cltd
fdivrs
xorb
mov
loope
ret
cld
and
inc
jp
xchg
xchg
add
jae
rcll
dec
cmc
xchg
mov
int
jns
xor
aam
dec
dec
mov
pop
pop
inc
cs
pop
repz
and
test
imul
add
pop
xchg
xor
jnp
mov
adc
pop
in
cmp
mov
pop
das
mov
jg
fs
imul
fcomps
sub
ret
pop
push
cmpsb
and
mov
mov
hlt
sub
in
inc
xchg
pushf
jge
lods
std
mov
mov
rol
mov
or
jbe
fldcw
stc
enter
lahf
call
sub
mov
fs
xor
cmp
sub
popa
jns
cmpsb
in
fidivrs
jmp
dec
arpl
push
test
adc
lcall
adc
cs
imul
sbb
mov
sbb
popa
push
lahf
or
adc
lret
fnstcw
sbbl
push
imul
and
insb
xchg
pop
fcompl
jecxz
sbb
mov
add
jle
inc
and
mov
and
sbb
fdivrp
sbb
push
sar
leave
arpl
je
fsts
rorb
cltd
mov
outsl
aam
pop
int3
xor
mov
scas
lods
mov
dec
push
jb
mov
cmp
add
lock
mov
xor
xchg
xor
xchg
insb
cmp
mov
sub
fdivs
dec
leave
xchg
jl
inc
xchg
or
add
lds
adc
pop
jns
lret
iret
jmp
adc
jge
ljmp
ljmp
adc
sti
stc
bnd
sub
or
push
push
cmc
inc
in
jge
pop
test
rcl
mov
pop
xchg
sahf
mov
xchg
aam
mov
mov
ret
in
out
mov
in
cld
mov
pop
sarb
or
sbb
jge
inc
xor
mov
std
aad
dec
sbb
movsl
orb
cmp
mov
fbld
ret
adc
imul
cmp
shlb
add
scas
sbb
pop
push
or
mov
inc
jb
xchg
mov
dec
xchg
clc
std
ja
mov
test
insb
cmp
add
jge
jae
movsl
inc
mov
add
sub
outsb
decl
lods
pop
cltd
pop
fwait
mov
sub
mov
fistpll
and
ljmp
daa
cmp
xor
push
sahf
iret
push
jle
sti
jge
pop
leave
stos
add
adc
xorl
or
pop
xchg
daa
pop
and
js
pop
add
std
jecxz
jecxz
push
push
dec
ficomps
mov
cmc
outsb
leave
imul
inc
pushf
lods
iret
pop
push
fimuls
insl
nop
ret
loopne
xchg
add
jmp
rcr
xlat
inc
cmpsl
dec
pop
ret
push
stos
jae
mov
mov
ljmp
mov
or
fadd
or
xchg
sbb
cmp
xchg
inc
dec
lret
push
std
sbbb
mov
sti
sub
push
rolb
cwtl
or
xchg
nop
push
adc
stos
aam
mov
in
mov
mov
push
cmc
mov
sbb
inc
mov
mov
mov
cmpsl
inc
pop
xor
mov
orl
and
cld
mov
adc
lret
add
jle
mov
test
out
pop
ljmp
xor
roll
aas
mov
cmp
aaa
fdivp
dec
pop
subl
sbb
xor
fcmovnbe
pop
jmp
pop
cwtl
pop
test
out
das
lods
inc
lock
push
aam
push
test
fimull
adc
outsl
sub
sub
push
pop
pop
and
jmp
popa
and
ljmp
mov
sub
decb
sti
mov
push
out
out
adc
mov
popf
sti
mov
inc
xchg
in
fisttpll
jmp
lock
roll
xchg
xchg
push
jae
cld
mov
sti
inc
sarl
push
mov
add
xchg
cmp
lods
and
enter
add
stos
sub
push
mov
mov
test
jle
notl
neg
xor
or
test
push
jnp
stos
test
and
xor
xchg
xor
sbb
nop
out
mov
jne
ja
xor
bound
jp
lods
or
fisubs
subb
daa
push
cmc
dec
push
sbb
push
data16
aaa
clc
shlb
in
lea
cmp
push
mov
movsb
xchg
outsb
rorl
inc
aaa
sahf
lcall
outsb
pop
or
sub
dec
je
stc
push
sub
fldcw
int3
jbe
push
stos
pop
loop
shlb
incb
add
sbb
pop
outsl
divl
bound
xchg
xchg
sbb
dec
in
push
mov
xlat
mov
inc
xor
jecxz
and
sarl
icebp
fucomp
fs
mov
add
or
lods
inc
scas
pushf
ja
fiadds
jge
ficompl
filds
arpl
cmc
xor
lea
faddl
stc
js
mov
clc
repnz
mov
movl
sub
cs
cmp
pop
mov
add
mov
aaa
mov
push
dec
dec
and
lret
adc
popa
push
fstps
jle
imul
ss
mov
lahf
bound
xlat
mov
je
and
push
pop
cltd
mov
dec
or
mov
add
inc
cmp
pusha
mov
outsb
sti
push
sbb
dec
sahf
sar
mov
sub
out
jb
sahf
jae
mov
xchg
inc
and
fbstp
mov
sub
cltd
test
loope
jno
xchg
xor
es
jp
test
jno
aam
mov
aaa
cli
cmp
or
add
fdivs
add
jl
mov
pop
ja
test
mov
loopne
jne
jle
jns
pop
and
inc
repnz
lcall
jne
mov
mov
inc
xchg
rorb
repz
pop
data16
call
dec
and
cli
int3
add
into
int
fdivr
in
pop
idiv
outsl
dec
adc
dec
mov
push
xchg
ja
jg
xchg
xchg
add
shlb
xor
mov
mov
or
dec
and
repz
add
outsb
push
dec
xchg
stos
inc
arpl
push
repz
pop
jge
dec
xor
jb
xlat
jecxz
lret
lds
cmp
mov
mov
fs
idivl
pusha
push
fldl
push
pop
mov
pop
lcall
ljmpw
scas
inc
sub
dec
sbb
mov
out
xor
adc
jns
mov
xor
push
push
das
dec
mov
test
dec
ds
inc
pop
stos
test
inc
aad
add
cli
and
pop
xor
fs
or
fidivs
pop
mov
xchg
jmp
sbbb
push
std
sbb
das
out
push
xchg
imul
jne
add
loop
lods
or
stos
cld
xor
in
jnp
xchg
mov
inc
or
scas
mov
xchg
out
inc
lea
push
movsb
addr16
mov
cmp
arpl
dec
cmpl
jl
jb
pop
das
or
es
jno
add
xchg
aad
mov
js
pop
xlat
xor
movsb
and
push
adc
and
inc
arpl
or
xchg
movsb
and
push
push
jbe
shll
test
sti
rorb
sub
nop
add
pop
icebp
lahf
push
arpl
and
jo
lods
out
sub
push
fmuls
stos
pushf
sahf
orl
mov
mov
insb
popa
xlat
dec
jg
movsl
jb
pop
outsb
inc
push
add
sti
mov
jge
sub
test
or
adc
xchg
movsb
cs
ja
dec
push
pop
pop
and
lcall
shlb
mov
sub
pop
mov
insl
rorb
pop
dec
xchg
push
sub
push
mov
push
popa
mov
iret
cld
mov
push
and
repz
mov
pop
les
xor
lds
call
sbb
inc
and
sbb
adc
hlt
fdivp
sbb
push
and
mov
scas
shrl
rcl
inc
pushf
loop
push
pop
sbb
push
jno
and
stc
xor
pop
or
shl
cmpsb
hlt
inc
lods
mov
jecxz
xchg
jmp
add
adc
xchg
jge
mov
std
pop
xchg
hlt
jmp
clc
push
je
and
and
jmp
or
push
outsb
inc
hlt
mov
sub
fisttpll
push
push
enter
sbb
daa
bound
jne
out
mov
sbb
cld
cmp
imul
addl
mov
cmpsl
add
mov
mov
pop
dec
mov
pop
sbb
xor
in
mov
pop
pop
xor
and
sub
repnz
add
arpl
imul
push
sbb
cmp
fstpl
push
out
lock
add
cmp
popf
test
jbe
outsl
xchg
push
xchg
fxch
push
sub
mov
je
or
sbb
mov
jbe
dec
leave
and
add
jb
imul
mov
push
add
jle
ret
push
ficoml
hlt
lahf
pushf
push
xchg
mov
maskmovq
push
push
les
dec
ds
int
je
pop
test
pop
lods
mov
xor
notb
adc
mov
mov
add
xchg
lret
push
jp
jnp
jg
fists
mov
aam
push
xchg
sub
mov
test
hlt
xchg
and
push
popf
repz
in
push
dec
lock
stos
jecxz
sbb
shl
cmp
or
mov
or
idivb
jge
sub
loop
xchg
push
std
lcall
mov
std
xor
insl
sar
stc
movb
pushf
mov
or
leave
xorl
jge
or
mov
arpl
sub
mov
jns
cmpsb
fnstsw
jno
push
mov
lcall
xor
push
mov
push
lea
mov
sub
mov
cmc
imul
jle
push
xchg
std
scas
out
push
icebp
sub
shll
mov
pushf
out
mov
pop
cld
cmp
repz
popl
push
xchg
jmp
jl
mov
mov
mov
rclb
jmp
ja
arpl
inc
xchg
add
hlt
call
daa
sbb
cmc
das
cs
jle
jmp
cmp
lret
and
mov
mov
dec
mov
aaa
and
dec
mov
xorl
fmull
fbld
push
mov
fs
add
popa
xchg
stc
jle
lds
movb
decl
roll
es
fbstp
push
sbbb
lock
add
sbb
stos
sahf
xacquire
jmp
mov
movsl
jb
ja,pt
pop
stos
adc
sbb
and
stos
push
je
dec
inc
xor
fstpl
push
adc
lock
lcall
call
and
jp
outsl
stos
push
and
and
rcll
adc
aam
cmp
je
rep
or
rorb
btc
icebp
push
lock
pushf
xlat
test
out
cli
adc
lds
stos
dec
mov
pop
ljmp
inc
dec
in
dec
scas
xchg
push
cld
jae
out
jo
aad
dec
stos
ss
lock
stos
sbb
sbb
sbb
lds
jle
xor
xchg
test
les
dec
mov
mov
cltd
out
adc
mov
jno
jmp
xchg
pop
lret
push
and
cltd
neg
je
push
jne
cmp
mov
cmp
negb
lea
mov
mov
push
sbb
cmp
xor
xchg
pop
cs
test
or
xchg
or
mov
sarb
outsl
and
int3
ret
daa
int3
and
add
aad
or
shr
mov
add
jb
inc
cmp
inc
pop
lods
jmp
push
mov
jbe
sbbb
sub
out
and
mov
adc
or
jmp
leave
sub
inc
cmp
xor
outsl
int
xor
xor
ja
out
push
mov
test
inc
adc
pop
sbb
dec
cwtl
jbe
mov
cmpb
push
notl
fiaddl
push
push
popf
xor
cmpsb
or
std
or
push
mov
js
clc
test
dec
imul
sbb
div
clc
test
lret
aam
insb
mov
pop
add
lods
imull
int3
cltd
push
pop
mov
repnz
sbb
jle
lret
scas
push
dec
mov
insb
xor
movsb
lods
pop
sbb
inc
fs
adc
xor
pop
xchg
inc
and
xorb
sub
fldcw
ljmp
jge
das
jnp
jecxz
jae
scas
and
aaa
or
into
or
imul
add
mov
fistpll
push
repnz
addb
ficompl
scas
jno
inc
push
xlat
scas
push
fldenv
dec
nop
or
dec
pop
mov
mov
push
mov
adc
js
xor
mov
pop
addb
add
leave
ss
push
sbb
test
jmp
cld
ja
mov
aas
popf
xor
clc
ljmp
test
ret
fcomps
mov
mov
xor
call
gs
inc
mov
jb
jmp
dec
rorl
adc
dec
sub
subb
cmp
mov
rcrb
fmulp
roll
pop
aad
add
jns
movsb
mov
mov
push
mov
outsb
stc
ret
mov
fdivrs
test
paddq
fdivs
cmp
sahf
inc
int
mov
cmpsb
or
stos
les
add
repnz
cmp
push
pop
cmp
insb
je
jb
and
fisubl
in
and
and
pop
jae
shl
cld
cmpsb
ret
cmp
mov
xlat
sbb
jg
adc
nop
daa
ficoml
mov
sub
sbbb
aaa
jecxz
inc
jg
and
xor
cmp
jmp
jl
xchg
push
mov
mov
icebp
popf
call
pop
adc
inc
xchg
jb
lret
outsl
mov
mov
push
jno
fsub
pop
stos
test
enter
popa
sbb
shlb
imul
sbb
mov
cmc
inc
popa
sahf
enter
add
lahf
adc
ret
mov
cld
cmp
mov
dec
adc
pop
jmp
lods
inc
cmc
out
pop
mov
sbb
and
jns
dec
sbb
fwait
aad
lock
aad
shl
mov
rclb
in
dec
movsb
adc
mov
sahf
popa
mov
mov
pop
cmp
mov
push
sbb
adc
insb
in
pop
inc
andb
rcrl
fcmovnb
jge
ja
inc
jp
movsl
sub
and
dec
pop
mov
xchg
xor
xchg
das
mov
or
addr16
dec
test
mov
fs
adc
mov
push
daa
push
lods
push
fwait
cmp
enter
sub
mov
les
and
jmp
jno
inc
xlat
sub
nop
dec
push
scas
ja
pop
ljmp
and
rclb
int3
out
aaa
movsb
into
ja
sub
enter
push
adc
or
ja
neg
mov
cmpsb
lods
aaa
pusha
lds
mov
sbb
aad
pop
or
pop
ja
sbb
sub
mov
inc
pop
push
repz
dec
call
imul
lock
std
std
iret
rorl
cli
dec
leave
fcomps
adc
inc
mov
mov
push
adc
movsb
and
mov
jle
jle
dec
push
dec
lock
mov
and
popf
loope
addps
mov
jle
in
xchg
jae
inc
push
lcall
clc
cmp
push
jno
or
cltd
or
inc
push
mov
sti
aas
cmpsl
jmp
jg
dec
jns
lods
add
lods
jg
dec
mov
ja
sub
loopne
pop
test
xchg
mov
shl
dec
xchg
add
mov
in
fs
mov
mov
inc
pushf
fs
jo
or
pop
jns
lret
cmpsb
pop
lahf
out
std
repz
dec
mov
dec
xor
mov
push
inc
mov
cmp
es
jb
data16
rcrl
mov
push
mov
push
pop
or
mov
lret
jg
enter
and
or
in
mul
cmp
sahf
sub
ja
bound
test
or
push
mov
sbb
cmp
loope
mov
xor
inc
sub
pop
jp
inc
jge
into
xlat
ret
into
sbb
jno
imul
mov
fistpll
push
lret
outsb
mov
es
mulb
adc
mov
jge
sarl
xchg
mov
int
or
and
xor
fstpl
pop
sbb
and
jnp
inc
call
flds
sti
sub
fisubs
add
pop
and
int3
push
out
hlt
add
cmp
xchg
popa
int
xchg
pop
shrb
xlat
insl
shlb
stos
cld
push
xor
shll
inc
iret
mov
outsl
jecxz
pushf
mov
ficompl
std
jnp
je
clc
mov
cmp
call
aad
jns
mov
in
and
xchg
add
ror
std
xchg
pop
mov
jl
stc
rol
or
scas
sbb
dec
xchg
pop
or
pop
ret
popf
pop
mov
jp
sub
pop
rcl
arpl
xor
sbb
dec
or
outsb
and
fistpll
notl
or
xchg
cltd
xlat
or
test
adc
lret
std
xchg
xchg
cmp
cmp
inc
or
jb
fidivl
inc
jns
mov
imul
bound
jne
cmp
sub
push
cld
addl
or
or
push
lods
je
mov
negb
aam
movsl
sub
lods
sbb
pop
mov
and
daa
ret
lret
cmpsb
dec
jns
inc
mov
push
dec
sbb
pop
mov
jno
ja
cmp
repnz
sub
inc
mov
out
push
test
adc
push
mov
mov
in
sbb
stc
jae
into
ss
ret
leave
pushf
mov
inc
fisttpll
pop
mov
adc
push
sbb
pop
adc
pusha
cmp
daa
xchg
out
or
lods
mov
mov
push
fcompl
cwtl
mov
add
out
cld
test
adc
rorb
shll
sbb
mov
push
rolb
mov
in
fwait
pop
push
xchg
es
cwtl
pop
es
cmpl
pushf
mov
or
ds
xor
dec
xchg
mov
xor
stos
push
pop
movsb
rcll
outsb
mov
jo
adc
mov
xor
and
dec
xchg
shll
inc
xor
mov
fldcw
xchg
jmp
mov
adc
ja
fiaddl
repz
add
jnp
lock
push
jbe
push
lea
dec
lcall
fdivl
adcb
jns
shll
out
and
mov
mov
mov
jno
loopne
aas
aad
lods
cmpsb
jge
mov
mov
sub
push
ss
lret
loop
xor
mov
pop
pop
xor
mov
xor
inc
push
arpl
pop
out
cmp
mov
stos
sti
push
test
mov
lea
repz
pop
xlat
movsb
or
jmp
push
div
movsl
dec
out
loop
mov
iret
gs
ror
enter
dec
rorb
mov
dec
xchg
test
push
stos
pushf
test
mov
aas
iret
pusha
ljmp
add
pop
adcb
xorl
sbbb
adc
ret
jne
cld
mov
rclb
scas
mov
scas
lea
pop
out
mov
sti
cmpsl
vpsadbw
xchg
lock
inc
and
sahf
shl
inc
jmp
jl
aad
cmpsl
cmp
mov
pop
sub
pop
sti
les
call
sub
test
push
mov
dec
xorl
lds
mov
add
mov
sub
mov
dec
mov
cltd
dec
dec
pop
mov
stos
xchg
mov
outsl
dec
lds
leave
js
lds
subb
or
adc
dec
into
popf
xor
mov
sub
addr16
loop
gs
inc
mov
outsb
loopne
jmp
push
mov
int
mov
int
push
push
movsb
mov
push
in
pop
dec
dec
sbb
jbe
insl
int
pop
stos
sahf
divb
nop
cmp
cli
cmc
ss
fcmovu
addr16
jp
cmp
jno
sub
push
adc
ret
xor
dec
sahf
inc
fdivl
mov
add
dec
xchg
jmp
xlat
mov
popa
test
mov
fcmovne
cmp
int3
shlb
pop
push
cmpsb
lahf
dec
movsb
sti
aas
fisubrs
cmp
xchg
into
leave
xchg
stc
jmp
jg
jge
lea
push
mov
movsl
inc
add
imul
pushf
out
ljmp
pop
mov
pop
mov
cmpsb
mov
gs
cmpsl
mov
fld
out
roll
inc
jmp
cmp
jo
push
cs
imul
mov
add
lea
test
inc
cmp
adc
sbb
lahf
movsl
xchg
dec
pop
pop
xor
inc
or
mov
and
pushf
add
push
clc
dec
mov
mov
scas
ss
lret
rorl
fdivs
cs
mov
mov
es
mov
sub
cs
pushf
cmp
test
xor
mov
leave
outsl
jbe
test
mov
out
adc
cmpsl
out
imul
sbb
push
nop
scas
stos
fstps
repz
sahf
test
lcall
push
mov
inc
inc
push
xor
lods
push
and
push
enter
cmp
inc
and
popa
mov
adc
cmc
ret
push
jae
cmp
outsb
jl
xor
inc
dec
fistl
mov
test
cmpsl
adc
cmp
leave
pop
adc
inc
and
mov
mov
lods
mov
xor
popf
xchg
aaa
mov
mov
mov
dec
push
leave
das
or
into
movsl
outsb
add
push
call
dec
imul
rclb
inc
enter
movsb
mov
push
sub
daa
adc
aam
in
dec
nop
fcmovb
inc
repz
ret
loope
jbe
dec
adc
lock
add
push
add
jmp
xchg
jne
divb
fidivrs
jo
mov
test
ficoml
pop
ds
push
shll
insl
push
nop
imul
out
mov
jns
in
push
hlt
js
out
cmp
push
push
jle
rorl
int3
xor
xor
imul
inc
lea
jle
jb
rorb
inc
push
mov
nop
imul
ds
xchg
into
mov
sbb
sahf
hlt
pmullw
dec
test
sub
adc
pop
arpl
cld
jmp
iret
mov
lea
inc
sub
call
mov
adc
hlt
push
lods
imull
iret
mov
rcrl
fisubs
rcll
notb
jle
lds
pop
mov
add
mov
jp
in
iret
sbb
sub
sub
xchg
jl
xor
fstps
mov
loop
int
adc
ret
push
sub
mov
mov
negl
mov
inc
jle
adc
xchg
push
sub
subb
data16
cmp
pop
dec
enter
mov
out
test
in
push
sti
cmp
pop
xlat
xor
push
aad
cmc
mov
and
jae
ret
mov
mov
dec
js
mov
fdivrp
add
insl
les
adcl
mov
push
out
add
fsubrl
pop
dec
test
roll
sbb
loopne
paddw
test
xchg
mov
dec
out
mov
xchg
lcall
mov
mov
pop
sub
repz
jo
cmp
sub
jge
shr
out
mov
cmp
lea
cvtps2pd
mov
out
jnp
cmp
dec
cld
lods
popf
mov
add
jno
inc
jmp
sbb
icebp
mov
sbb
inc
push
pusha
hlt
rdtsc
pusha
push
sbb
decb
loope
sarb
lret
dec
or
dec
mov
cmc
or
sbbb
cmp
je
jbe
stos
or
loope
mov
lock
cmp
or
push
adc
and
int
or
negl
xchg
shrl
pop
repz
mov
adc
push
outsl
lock
nop
pop
shrl
in
mov
popa
push
in
xchg
adc
cmp
lea
or
inc
enter
sub
popf
xchg
sbb
jmp
inc
add
mov
inc
mov
mov
dec
pop
push
jbe
dec
pushw
xchg
dec
fwait
cmp
sub
int3
pusha
inc
lods
mov
sbb
jno
and
fimull
mov
aaa
dec
mov
adc
jl
cwtl
stos
pop
cmp
xlat
dec
or
mov
dec
dec
outsl
arpl
cmp
pop
push
mov
inc
sub
dec
jns
push
insb
cmp
mov
inc
mov
into
lea
push
cld
adc
and
in
sbb
sbb
xchg
loope
mov
dec
cmp
or
add
out
and
jnp
mov
or
cmp
xchg
aad
sbb
push
arpl
int3
sub
mov
push
std
fxch
rorl
jno
adc
jns
leave
inc
pusha
and
ret
daa
fcoms
arpl
push
add
sub
addb
out
cld
addr16
xchg
test
cwtl
addr16
xor
ds
push
cmp
xchg
data16
inc
sub
stos
ja
dec
push
or
scas
push
mov
sbb
or
add
mov
cmp
mov
mov
adc
out
icebp
das
ror
out
sahf
mov
pop
lods
out
sub
ret
rcll
in
lods
sbb
pusha
test
add
adc
out
lods
mov
sbb
push
cs
cmp
ret
iret
jns
scas
mov
jns
add
jg
sub
xchg
pop
pop
into
push
mov
int
cs
push
repz
mov
jne
cli
test
push
add
cmpsl
dec
icebp
cwtl
xlat
lods
stc
fwait
add
clc
notb
insl
pushf
inc
pop
out
ds
pusha
gs
rolb
test
outsb
aas
or
pop
push
mov
and
jbe
subb
hlt
xchg
inc
xchg
adc
mov
xor
xchg
fwait
push
js
popf
sbb
mov
cmp
loopne
xchg
inc
bound
clc
inc
push
andb
repz
out
add
xchg
movsl
add
fwait
jae
into
push
aad
fidivrs
idiv
pop
jns
daa
cmpsl
cmp
jne
xor
add
sti
movsl
push
lret
cli
xchg
mov
jo
enter
cltd
xchg
test
jae
pop
mov
and
add
xchg
mov
in
into
sarb
xor
or
push
pop
push
and
xor
fadds
push
cwtl
mov
dec
lds
scas
call
push
fistl
je
or
push
mov
addr16
pop
sbb
sbb
iret
ret
pop
aas
cli
pop
adc
int
pop
mov
inc
icebp
sbb
jnp
push
outsb
sub
cwtl
test
sarl
loopne
mull
rorl
les
fadds
or
loope
lea
aas
shrl
dec
outsl
sub
cmp
cmp
mov
or
xor
sub
adc
inc
xor
lea
pop
aad
cmp
ret
addb
fistpll
xor
jecxz
push
jl
add
sub
shlb
fbstp
arpl
shlb
imul
pop
jmp
rclb
dec
inc
stos
inc
aam
jne
xchg
inc
adc
ficoms
xchg
daa
jns
cmp
cltd
push
ss
cmpsl
mov
dec
xor
daa
xchg
nop
cmp
cmpsl
xchg
leave
inc
dec
orb
pop
pop
adc
js
sub
dec
stos
ror
adc
outsl
subl
call
rorl
sbbb
sub
insl
mov
movsl
mov
jne
iret
out
mov
loope
mov
notl
add
jae
add
int3
xchg
adc
repz
push
pop
push
lret
add
push
aaa
iret
hlt
mov
fmul
adc
mov
mov
stos
pop
int
or
filds
fs
ret
ret
add
shlb
dec
jmp
sub
fiaddl
push
call
inc
cwtl
lahf
gs
inc
cmp
add
pop
mov
cli
test
ret
call
jae
xchg
aad
jecxz
sarb
sbb
push
pop
cltd
pusha
or
dec
loop
jge
cwtl
mov
cmp
les
ja
sahf
hlt
xor
out
mov
addr16
nop
jbe
rcrb
or
icebp
and
pop
stos
aam
lods
or
xor
adc
mov
pop
lcall
xchg
movsl
or
adc
adc
nop
inc
das
ret
loope
call
test
mov
xor
xor
mov
movsl
out
push
js
pop
in
fsubrl
push
xor
fwait
mov
dec
insl
and
je
ret
or
push
sbb
mov
stos
bound
subb
sbb
sub
out
cmp
push
mov
int
jge
dec
jl
adc
mov
sbb
and
mov
or
lea
xchg
xchg
loope
out
call
std
sub
pop
mov
in
ja
idivb
bound
xor
dec
and
pop
inc
jae
je
out
mov
pop
pop
icebp
arpl
xchg
adc
adc
je
fisubrs
fs
jg
push
xchg
scas
outsb
xorb
lock
inc
xchg
mov
cmp
xlat
ljmp
and
push
xchg
enter
mov
fsubs
addr16
cmc
pushf
cltd
outsb
push
jg
dec
cs
nop
pop
sbb
scas
pop
mov
test
push
jp
mov
mov
loop
roll
pop
add
sahf
cmpsb
jb
adc
and
jl
mov
pop
cmp
dec
pushl
sbb
cmpb
add
decb
xor
and
ds
xor
ljmp
xchg
push
hlt
mov
or
jle
jbe
adc
sub
or
sbb
ljmp
test
pop
mov
jge
xor
popf
cmpsb
mov
dec
sub
add
sbb
lret
xchg
jle
mov
in
sub
mov
sub
std
popa
mov
mov
fdivrs
jne
mov
in
jg
jecxz
clc
jns
mov
movsb
mov
icebp
daa
fsubl
movsl
push
out
or
sbb
adc
das
jp
fisubrs
jno
push
js
daa
push
xchg
mov
ja
xchg
pop
aas
cmpsl
shrb
dec
and
insb
and
xchg
xlat
jecxz
xchg
mov
loop
sbb
cmp
and
ret
xchg
mov
mov
mov
xchg
or
jnp
rorl
fs
xor
repnz
inc
xchg
icebp
fildl
test
clc
jne
insl
stos
jo
cltd
sub
add
repz
dec
cwtl
cmpsb
mov
loop
outsl
jne
mov
dec
mov
mov
mov
insb
add
jbe
sbb
mov
jae
sbb
roll
jg
dec
pop
inc
inc
adc
or
mov
iret
outsb
rcll
out
push
and
std
cmp
xchg
ds
add
jno
nop
ja
push
push
lret
jo
rorl
pusha
sbb
mov
sbb
push
insl
dec
andl
sub
clc
ror
push
pop
xchg
inc
push
fcompl
pop
stos
mov
add
mov
pop
jno
addr16
stc
jno
sbb
out
enter
jno
rcrl
in
lahf
mov
mov
mov
dec
push
lds
jns
jmp
fld
and
lret
dec
mov
jmp
test
scas
fstps
sub
sub
sbb
jno
notl
leave
or
mov
insl
bound
mov
pop
pop
incl
or
stc
lahf
and
nop
popa
xlat
sbb
jb
push
andb
and
jno
xorl
push
sahf
or
pop
out
lods
stos
cmc
and
adc
mov
popf
push
filds
inc
clc
mov
cmpsb
fisubs
je
adc
adc
and
cmpsl
lret
es
into
cli
je
fisubrs
shll
lret
leave
dec
xchg
xchg
hlt
shrl
icebp
mov
fdivrl
mov
xchg
xchg
aam
in
cmpsb
imul
cltd
stc
xlat
fwait
pop
or
and
cmc
jecxz
mov
mov
fidivrl
fidivrs
pop
in
sbb
fisttps
cmp
pushf
imul
add
aad
int
mov
or
mov
push
push
pushf
arpl
enter
adc
jp
push
cltd
mov
add
push
cltd
sarb
cmpsl
xor
push
and
dec
xor
leave
fs
ljmp
jno
adc
jbe
int3
bound
or
mov
push
mov
dec
pop
cmp
icebp
scas
sbb
jns
fstpt
mov
addl
in
fwait
sub
dec
push
test
jmp
addr16
jno
mov
lods
loopew
fisttpll
push
scas
mov
mov
fs
out
pop
cwtl
xchg
fldt
push
sbb
rsm
sbb
insl
jmp
decl
mov
cmpsl
push
mov
inc
icebp
roll
jns
fidivrs
mov
lock
mov
adc
dec
and
xchg
frndint
mov
xchg
jmp
imul
ret
neg
ret
std
xchg
lods
inc
mov
sub
loop
fimull
lock
into
out
sbb
push
xchg
xor
mov
push
jo
shlb
lret
xchg
mov
adc
bound
add
dec
xchg
add
mov
and
divl
stc
clc
mov
mov
inc
mov
or
add
pop
in
mov
lods
or
or
xor
push
push
push
push
adc
mov
push
dec
nop
into
xchg
xor
or
mov
mov
int
sti
ljmp
call
adc
mov
jbe
pop
sub
jmp
fidivs
mov
pop
enter
and
out
addr16
out
and
jne
xchg
pop
inc
xchg
cmc
xchg
sub
je
pop
and
sbb
inc
add
xor
cwtl
pop
jmp
aad
mov
es
cli
sbb
push
loop
jmp
adc
bound
hlt
sti
aas
sub
mov
rcll
pop
push
pop
mov
int
jecxz
jnp
cs
sub
inc
fdivs
or
and
pop
xchg
pusha
mov
stc
lgs
enter
sbb
cmp
adc
cmp
sbb
fwait
ja
dec
or
cs
arpl
test
sbb
cmp
dec
scas
xchg
inc
add
cli
rcrl
fnsave
call
fdivrs
out
aad
xor
fwait
inc
outsl
iret
mov
cmp
scas
add
sub
lret
pusha
fnstsw
enter
adc
mov
dec
and
mov
xchg
icebp
jno
dec
jmp
in
mov
lods
dec
push
aaa
sub
fstps
sub
add
or
inc
jns
cs
icebp
aad
imul
cmp
cld
dec
enter
sahf
cmp
pop
pop
aas
and
incl
int
sub
scas
inc
ret
add
cmpsb
test
adc
push
ror
ds
leave
jl
dec
push
les
dec
cmpsb
push
mov
fldl
push
psllw
jmp
mov
test
xor
shl
sbb
mov
aad
mov
dec
icebp
int3
inc
cmp
cld
pop
in
out
loopne
cmpsl
mov
outsl
cmp
add
jmp
pop
pop
loopne
and
push
mov
xor
pushf
nop
inc
jecxz
xor
xchg
shrb
pop
pop
jne
or
lret
xor
mov
mov
mov
fadds
imul
cmpsl
mov
aaa
rclb
in
add
mov
lea
lods
jp
mov
insl
cmp
or
mov
cmpsb
js
and
call
lahf
xchg
xchg
mov
cmp
stos
add
hlt
scas
mov
xor
mov
pop
and
lret
cmp
out
fsubrl
inc
test
xchg
dec
fisttpl
cmp
mov
and
imul
cld
cmp
and
in
fisubrl
out
add
icebp
jnp
jmp
lea
and
loopne
inc
mov
pop
jecxz
ja
outsl
test
bound
mov
mov
movsl
cli
jecxz
das
mov
adc
mov
dec
aaa
or
std
js
aaa
pop
imul
lcall
aas
iret
and
mov
push
jns
leave
dec
fsts
jmp
xchg
push
jo
push
test
push
outsl
outsb
daa
push
clc
push
add
scas
stos
mov
sbb
rcr
fcmovne
out
fisttpl
fsubl
xor
pop
test
xchg
rcrb
mov
sub
pop
pop
addl
dec
or
ljmp
mov
lahf
jg
cmp
adc
ret
scas
push
outsl
ret
sub
sarl
imul
xor
out
and
cmpsl
dec
dec
sbb
mov
pusha
add
mov
and
or
aaa
mov
xor
xlat
adc
loope
and
adc
adc
cld
inc
mov
cmp
jnp
repz
or
sub
or
and
lods
adc
add
ja
add
cli
pop
jbe
mov
jnp
aas
xchg
ret
sbb
sub
dec
jp
fstpt
lds
sbb
bound
bound
movsl
mov
out
push
leavew
subl
pop
xchg
push
dec
cmp
movsb
leave
dec
aam
jle
mov
inc
loopne
mov
mov
jg
xor
pop
in
shll
test
insl
shl
and
mov
test
adc
dec
scas
mov
xchg
in
arpl
jbe
in
nop
lock
mov
cmp
and
and
dec
leave
and
push
out
add
das
fsubl
mov
push
inc
adc
lods
enter
jbe
dec
mov
xchg
fcompl
mov
push
push
sbb
jae
mov
les
int
jnp
cltd
cmc
sbb
sbb
neg
jle
lret
mov
jg
xchg
sub
test
iret
jnp
mov
into
gs
sub
jp
sbb
add
scas
in
bound
mov
ret
jl
and
dec
add
add
push
sub
or
out
lea
in
mov
int
hlt
xchg
shlb
jg
push
mov
jl
xchg
inc
xchg
mov
push
int
iret
sti
add
lret
rcrb
test
jl
and
add
std
in
sub
pusha
jo
bound
push
out
push
cmpsl
dec
pop
pop
clc
repz
add
inc
dec
sub
xchg
shrb
adc
add
out
cmpsl
inc
sbb
out
xchg
dec
shl
xchg
aas
xchg
push
xchg
mov
pop
test
ret
and
push
push
mov
fdivrs
xor
loopne
or
lcall
lds
rcrl
loope
in
repnz
xor
mov
jp
add
inc
push
adc
adc
imul
inc
pop
mov
sub
pop
inc
xor
push
shr
paddb
xchg
icebp
notl
pop
jns
pop
jne
add
add
dec
and
and
xchg
lret
enter
dec
xchg
repz
push
adc
dec
aam
pushf
icebp
mov
aam
leave
dec
mov
mov
dec
xor
inc
sub
jmp
jns
movb
scas
test
into
addr16
enter
and
add
test
test
add
add
outsb
pop
mov
xlat
shl
sub
adc
daa
imul
cmpsl
or
fcompl
inc
pop
sub
lock
cmp
jg
lcall
mov
lcall
mov
sub
iret
jp
fsubl
pop
pusha
mov
fs
xchg
bt
negl
pop
sbb
sbb
fstl
mov
adc
lods
pop
add
arpl
fcmovnbe
sub
clc
adcb
test
pop
dec
and
mov
mov
pop
xchg
inc
jmp
or
insl
inc
add
nop
pop
test
pop
or
xchg
mov
or
dec
nop
cli
fdivr
mov
cli
dec
add
stos
insb
outsl
jle
adc
js
adc
jae
push
jns
sbb
lods
stos
sbb
mov
pop
mov
cmp
std
push
loope
dec
outsb
adc
cmp
lods
call
mov
mov
jbe
pop
loop
rol
nop
sbb
loopne
jecxz
xchg
mov
js
push
enter
push
mov
movsl
in
shll
push
adc
sti
imul
fcomp
pop
jecxz
and
clc
adc
negb
into
inc
pusha
inc
pop
loop
push
cli
sub
or
sub
dec
xor
jp
push
xchg
iret
inc
lock
inc
mov
pop
icebp
pop
ret
insl
push
jg
lds
imul
sbb
bound
aam
jae
out
inc
test
and
add
pop
jle
dec
xchg
adc
lods
repnz
sub
jg
push
arpl
int3
cwtl
daa
rorl
mov
xchg
imul
fiaddl
fwait
xchg
adc
sbb
bound
gs
jae
js
pop
lods
ja
push
imul
cli
mov
adcl
adc
fists
or
je
or
pop
or
iret
shll
int3
sbb
jg
test
ja
jg
sub
mov
pusha
outsb
sbb
subb
add
sbb
cs
sub
ficoms
xor
fistps
in
sbb
cs
xchg
idivb
in
enter
in
test
push
sbb
adc
jecxz
pop
mov
sbb
call
pop
sub
xchg
outsl
lds
lcall
lea
jle
sub
scas
mov
cmc
or
push
xchg
add
pop
xchg
add
lcall
movsb
lret
and
xor
test
rcll
std
jnp
aas
std
jmp
cmpb
aaa
dec
lcall
push
sub
sarl
fs
aas
xor
xchg
xor
adc
fstp
stos
ffreep
and
pop
enter
sbb
dec
and
lret
xor
ljmp
mov
arpl
xlat
jge
cmp
mov
adc
pop
ja
pop
fistpll
inc
cwtl
repz
inc
es
xchg
repz
push
xchg
mov
or
pop
cli
add
xor
and
loope
push
mov
mov
sub
popf
push
imul
mov
mov
jno
outsb
movsb
std
jnp
push
das
das
add
sbb
sbb
rorb
scas
js
pop
sub
ret
js
or
cmpsb
in
cltd
mov
dec
cli
cltd
mov
inc
push
pop
in
push
fld1
out
or
adc
adc
push
loope
maxps
scas
jne
es
adc
push
movsl
mov
js
pop
scas
cmp
outsl
stos
bnd
dec
xor
mov
cmpsl
mov
xchg
decb
lds
lds
cmp
stc
mov
mov
outsl
cmp
fsubs
stos
xchg
fbstp
dec
add
sbb
lock
push
sbb
or
rclb
or
mov
fidivrs
pushf
das
inc
jne
adc
push
xchg
or
jmp
mov
pushf
pop
aam
push
fwait
divl
jnp
imul
xor
insb
popa
test
das
jp
pushf
insl
int
addl
pusha
out
jbe
shlb
shr
xor
push
jg
aam
in
lcall
cmp
adc
aas
push
repnz
fiadds
sub
aas
addr16
idivl
xor
mov
ret
movsl
std
jns
out
pop
xchg
mov
je
cmp
fcmovne
sbb
xor
testb
xor
adcl
stos
cmp
xor
dec
xor
sbb
inc
ror
mov
jmp
test
clc
out
les
fadds
lods
cmp
les
mov
ss
xor
cmp
imull
xchg
jb
adc
xchg
addr16
mov
ret
mov
inc
inc
xchg
or
xchg
mov
lds
loopne
mov
push
sti
xchg
mov
cmp
sbb
jo
cmp
lods
les
cmpsl
sub
pop
fbld
or
dec
inc
cmpsl
dec
mov
leave
nop
lock
aam
pop
fbstp
dec
lds
lds
dec
fs
mov
out
out
ss
pop
shl
insl
and
xor
inc
rcrl
dec
push
test
shlb
xor
xchg
lock
daa
adc
lods
dec
ljmp
xor
push
inc
cmp
lret
out
xchg
lcall
in
cmpsb
ss
test
ljmp
jmp
push
popa
rcrl
jmp
jge
lock
rcll
iret
cmpsl
jb
mov
ds
jno
pop
xlat
xchg
adc
addr16
daa
orl
addr16
pushf
and
inc
sub
rorb
mov
sbb
adc
jno
jo
mov
rcrb
je
out
cmpsb
movsb
dec
es
loop
cli
xchg
mov
ficoml
ss
mov
adc
jo
ficomps
mov
movsb
jmp
shrl
mov
sahf
or
cmp
out
aas
ljmp
sbb
call
pop
cmpsb
dec
stos
je
cmp
sub
xchg
popf
outsl
icebp
insl
push
push
pop
stos
pop
xor
lahf
inc
add
adc
ret
stos
mov
xchg
jne
mov
popf
sbb
ret
pop
loop
push
pop
mov
insb
jp
andb
fcmovbe
std
ss
push
cmc
cld
insl
mov
pop
push
scas
fcmovnbe
adc
jecxz
addb
sahf
fadds
sub
fwait
movsb
enter
aas
xor
mov
fdecstp
loop
je,pt
and
mov
pushf
cmp
arpl
out
xor
cmp
cs
ror
aam
lods
aas
in
cmp
jg
add
dec
pop
cmp
xchg
mov
rolb
xor
addr16
outsl
out
inc
push
or
add
cmpsl
inc
scas
xchg
or
mov
xor
hlt
out
testb
dec
or
xchg
mov
sub
loop
lods
popa
or
lret
cmpsb
pop
and
bound
test
repnz
aaa
sub
mov
jae
push
repnz
mov
loope
jo
sbb
push
mov
out
xlat
cmpsb
popf
lea
clc
adc
mov
sub
rcr
sahf
pop
jp
xchg
mov
movl
fstl
out
mov
cmpsb
mov
jle
jne
mov
out
lret
and
jae
clc
in
dec
inc
sub
test
out
cmp
jmp
div
sbb
pop
jne
sub
and
jo
bswap
movsb
vhsubpd
movsb
mov
sbb
sbb
jmp
xchg
iret
out
jmp
andb
and
and
ror
sbb
test
or
lahf
inc
xchg
js
xor
std
cmpsb
and
leave
jg
push
sbb
hlt
je
mov
pop
bound
repnz
and
add
cld
ljmp
inc
inc
lret
fisubrl
xor
pushf
sarl
cmp
lret
push
cmp
jp
add
mov
stc
fdivp
sub
dec
btl
cmp
mov
test
or
paddusb
subb
movsl
xchg
sbb
mov
mov
and
in
pusha
test
dec
hlt
or
sub
aam
jle
push
push
add
mov
ljmp
ljmp
rcll
mov
sbbl
imul
out
pop
or
mov
xchg
inc
mov
mov
sbb
mov
mov
fdivs
jg
fnstenv
add
jge
pop
xchg
or
jl
mov
lds
lods
xchg
repnz
scas
scas
fidivrs
fimull
xchg
bnd
mov
popa
cltd
push
lds
jae
loopne
and
leave
cmp
sub
ret
shlb
xchg
stos
call
insb
mov
loopne
idivl
dec
pop
leave
gs
add
outsb
clc
arpl
add
inc
mov
mov
adc
ss
jmp
aam
sub
inc
or
sti
mov
loope
aas
pop
scas
pop
and
pop
inc
inc
cmp
sbbb
fbstp
jle
inc
sub
repz
adc
jge
mov
push
mov
insb
loope
jno
jg
dec
sub
mov
test
mov
sub
cmp
sub
arpl
call
mov
push
sub
push
imul
dec
je
mov
jp
fiadds
xchg
pusha
aas
fwait
dec
mov
mov
je
sbb
sub
ds
cwtl
das
jmp
repnz
mov
xor
dec
jnp
sbb
loop
in
add
aas
or
jmp
shlb
jmp
pop
clc
or
popa
loope
into
out
sbb
cmpsl
or
lea
xchg
sub
pushf
clc
jmp
aas
int
adc
pushf
scas
push
add
add
and
xor
repnz
iret
imul
scas
dec
iret
and
rcrl
lahf
cmp
inc
jnp
sti
ret
mov
shll
sahf
pop
js
idivl
cmpsl
cli
fisubrs
loopne
cli
mov
cwtl
xor
mov
and
int3
mov
sbb
adc
and
push
jno
stos
fcmovnb
aaa
subps
data16
pop
xor
dec
mov
loope
jb
adc
ja
out
jle
fisttpl
popf
lahf
xor
mov
rcrb
popf
out
test
pop
push
adc
stos
cmp
mov
test
sbb
out
sbb
sahf
decl
jge
adc
cli
cmp
jne
push
cmpsl
loope
mov
cli
fyl2x
sub
ror
pop
push
inc
ss
jmp
sub
jecxz
sub
xor
add
jnp
mov
cli
mov
pop
inc
fstpl
into
inc
cmovl
andl
dec
push
jno
fisttpll
adc
xor
fcmovnb
bound
test
mov
push
out
stos
fdivl
ds
push
mov
pop
mov
aas
icebp
lea
lcall
insl
sbb
into
daa
andb
test
scas
pop
cli
pushf
jecxz
xchg
add
scas
sub
jbe
ror
xor
push
and
xor
fidivrl
test
xchg
push
inc
sbb
dec
dec
inc
faddp
stos
mov
movsb
idivb
or
cli
pusha
adc
aaa
push
add
imul
insb
inc
loope
das
or
repnz
fdiv
xor
sbb
or
push
sub
sub
pop
and
jae
pop
jno
xor
ljmp
cs
ds
xrelease
sbb
adc
cs
adc
bound
mov
mov
clc
xchg
sarl
or
dec
cmp
cmp
aam
push
inc
bound
scas
jg
daa
xchg
jne
jecxz
push
int
lret
xchg
cwtl
ds
shl
arpl
mov
movsb
mulb
ja
ficompl
mov
clc
ljmp
mov
push
pop
mul
jb
sarl
fistpl
and
mov
lret
or
nop
and
lret
jne
insl
xchg
add
add
pop
lret
push
mov
and
movsb
or
rorb
out
or
mov
filds
cld
in
idiv
clc
ror
cmpsl
int
jge
add
xchg
jmp
addr16
and
ja
push
and
xchg
jnp
jmp
cli
rorl
andl
jne
movsb
aaa
xor
xor
pop
pusha
add
push
std
and
add
pop
pop
into
fadds
dec
test
mov
arpl
or
pandn
decl
pop
adc
jne
sub
ret
mov
ljmp
mov
dec
mov
rolb
lahf
nop
sbb
clc
ja
jo
loopne
xchg
cmp
sahf
adc
mov
mull
fisubrs
fstpl
je
sbb
jge
data16
jne
shlb
mov
and
aas
sbb
addb
xchg
clc
dec
sub
sbb
call
cmp
int3
xchg
pop
shlb
loop
sbb
mov
aam
stc
push
ffreep
cmp
lret
movsb
pushf
and
jl
xchg
xor
or
jns
inc
jne
shll
xorl
sub
rolb
mov
mov
lods
and
dec
ja
fs
push
loope
pop
repnz
in
xor
clc
std
and
or
mov
loop
fwait
adc
pop
out
fildl
or
xchg
or
test
mov
jg
int3
jbe
insb
push
adc
gs
movsb
push
adc
xlat
das
xchg
repnz
cmp
and
imul
mov
cmp
insl
scas
cltd
repnz
scas
pop
int3
call
or
outsl
icebp
pop
clc
stos
jmp
sbb
xor
jne
sub
loope
mov
arpl
inc
cmp
push
in
in
pop
add
xchg
scas
ja
sub
add
jb
dec
sar
lock
loopne
out
mov
repz
mov
fs
mov
ret
or
aad
addr16
orb
inc
and
jns
into
popf
adc
sbb
lcall
xor
lcall
loop
sub
in
les
pop
loope
add
movsl
ret
xchg
aam
jo
mov
mov
sar
or
imul
mov
inc
scas
adc
adc
cmc
insl
rol
xor
dec
adc
scas
jbe
push
test
cwtl
mov
fcoml
cmp
in
ljmp
fs
xor
hlt
in
mov
daa
add
lahf
jne
mov
fwait
ret
aad
pop
push
ss
push
and
jbe
arpl
icebp
cmovg
mov
stos
adc
pop
ret
inc
inc
xchg
es
jb
jp,pt
out
cwtl
out
mov
aaa
out
push
cmc
inc
test
sub
mov
mov
cltd
xlat
jmp
inc
mov
lds
and
mov
pop
pop
bound
aad
rorl
aad
rolb
xchg
fdivrl
adc
pop
dec
pop
shl
test
xchg
andl
jmp
mov
mov
out
mov
lcall
cli
pop
aas
mov
lods
in
loop
iret
je
pop
pop
pop
dec
xchg
inc
jmp
inc
xor
dec
dec
cmc
mov
dec
and
jo
adc
stos
sbb
sbb
pusha
mov
dec
mov
icebp
jnp
push
test
mov
sti
les
ret
cmp
int3
mov
xor
aaa
arpl
outsb
xor
xor
jle
daa
test
or
rcr
dec
and
adc
arpl
or
mov
sbb
loopne
sbb
cmp
adc
bound
fscale
sbb
popa
jg
cwtl
shrd
pop
jp
mov
mov
pop
pop
stos
sbb
add
mov
pop
mov
sbb
ret
mov
ret
insb
pop
movsl
lods
es
sub
loop
mov
fdivr
fldenv
mov
dec
fs
pop
and
fbstp
out
pop
jno
jg
mov
pop
cs
lock
loope
ficompl
push
js
das
push
aad
addr16
lds
movsb
mov
pop
and
xor
or
inc
jno
aas
aam
sbb
clc
add
or
xchg
in
nop
and
pusha
sub
mov
pop
outsl
sti
mov
jecxz
stos
mov
pop
dec
or
xchg
xor
and
inc
inc
test
pushf
pop
sarl
mov
push
mov
out
data16
and
adc
dec
xor
into
aas
in
inc
jae
insl
shll
dec
xor
mov
outsl
lods
rcrb
or
fs
imul
xchg
pop
inc
cmp
jbe
push
inc
fwait
jecxz
xchg
repz
aaa
fdivr
and
ss
pop
test
lahf
push
test
jo
das
aam
lea
call
int
test
pop
aad
add
pop
pop
mov
mov
add
push
mov
or
stos
mov
or
xchg
mov
xlat
xor
shl
repnz
test
push
sbb
bound
fucomip
pop
pop
sbb
movsl
loop
scas
data16
dec
inc
xor
jp
cmp
cmp
xchg
rclb
notl
ja
pop
incb
xor
out
sub
mov
xchg
sub
sub
xchg
scas
push
mov
push
les
adc
mov
icebp
pop
mov
sahf
fistl
and
or
mov
mov
xchg
sbb
mov
insl
stos
sbb
js
fwait
or
jmp
jl
xchg
adc
int
call
gs
test
rcll
and
pop
mov
cmc
jl
movsl
cmp
nop
fcomps
daa
fwait
test
xchg
jne
inc
or
cmpsl
aad
arpl
pop
and
lret
xchg
dec
scas
push
movsb
ds
cmp
add
xor
out
xor
mov
pop
clc
daa
and
cmp
sub
jae
popa
adc
xchg
fnsave
repz
push
pop
lret
push
daa
popa
cmpsl
rcll
jno
ss
aad
pop
sbb
and
dec
insl
cwtl
icebp
cmp
xor
out
jo
repz
mov
lods
aam
xchg
and
mov
dec
pop
adc
cmp
push
pop
xchg
inc
add
fst
lahf
push
pop
sarl
sub
in
sub
aaa
adc
repz
cmp
pop
stos
mov
add
mov
ljmp
xor
sub
adc
push
mov
sahf
insb
enter
repnz
push
popf
movsl
cmp
ja
pop
mov
adcl
and
leave
xchg
dec
jo
mull
xchg
lret
jp
das
lret
jl
or
cmp
lds
in
lahf
sbb
or
lret
dec
add
jb
push
pop
mov
test
shl
pop
ss
jle
dec
cmp
aaa
push
jae
mov
sbb
mov
cmp
subl
and
in
in
cmc
das
out
dec
jp
lock
sub
ret
mov
leave
xor
insb
pop
iret
arpl
add
cs
dec
andl
insb
int
bound
call
push
imul
jle
sbb
jo
mov
pop
mov
pop
loope
xor
and
push
sub
lock
inc
dec
mov
mov
ficompl
in
stos
cld
sahf
pop
enter
push
jmp
je
jo
inc
imul
inc
lret
sub
pop
movsb
sbb
and
out
cmp
jge
jge
mov
xchg
iret
es
push
sbb
in
push
dec
add
ret
jnp
jb
sub
push
adc
sbb
and
cmc
movsb
pop
mov
adc
ljmp
ja
inc
dec
icebp
jbe
faddp
pusha
push
and
push
mov
enter
cli
cs
and
jb
adc
cmp
mov
and
cmp
pop
mov
jbe
xlat
test
and
loop
imul
mov
pop
call
lods
mov
pusha
and
leave
pop
and
pop
aad
xchg
pop
scas
je
inc
xchg
ss
jp
daa
push
test
add
cmpl
cmpsb
and
sbb
rcrl
and
dec
mov
sbb
lret
xchg
loope
xor
sub
or
push
xorb
mov
pop
nop
das
jb
sbb
pusha
mov
adcl
jno
mov
in
push
insb
adc
cmp
clc
inc
faddp
xchg
xchg
push
pop
or
inc
out
mov
mov
sahf
pop
dec
adc
scas
xchg
dec
iret
lds
inc
xor
sbb
push
dec
ljmp
adc
loopne
cs
jl
dec
xchg
arpl
add
sub
lods
sub
repz
dec
icebp
push
xchg
jb
outsl
pop
lods
lahf
rclb
dec
xchg
stos
xlat
dec
inc
fndisi(8087
jae
xchg
sbb
les
int3
lds
mov
sub
mov
mov
mulb
aam
icebp
dec
test
mov
in
push
pop
push
std
fcoml
inc
fcmove
mov
add
fsubr
sub
fadd
test
pop
xor
sbb
jb
fimull
roll
jbe
lret
xor
xchg
enter
shld
cmp
jno
das
lods
mov
sub
roll
adc
mov
inc
mov
cltd
jg
mov
cmp
push
hlt
xlat
and
addb
ss
jp
gs
push
dec
insb
dec
pushf
xchg
mov
mov
pop
aad
sbb
mov
lods
rcrb
aas
mov
iret
push
mov
inc
xor
aaa
push
add
cmp
mov
push
sbb
mov
inc
adc
push
lock
adc
popf
jae
in
sbb
out
xor
mov
daa
lret
pop
stos
negl
stc
push
add
inc
mov
sahf
rcrl
mov
jge
std
lods
aad
jp
push
add
inc
in
in
outsb
cltd
adc
gs
call
mov
xchg
ss
pusha
jbe
and
fdivrl
xchg
jbe
sbb
jg
jle
mov
movsl
ret
and
std
sbb
idivb
cmpb
cmp
subl
sahf
dec
dec
mov
movsb
and
movsb
mov
jge
data16
aas
adc
lods
enter
nop
lock
add
in
add
cmpl
lret
fists
push
stos
cwtl
imul
iret
jns
add
inc
jb
stc
iret
movb
lods
xchg
icebp
aaa
aaa
sbb
push
cmc
aaa
nop
insl
adc
ret
outsb
rcrb
test
jno
add
sahf
inc
push
add
pop
add
sbb
pop
and
push
outsl
cmp
or
push
cli
cmp
sub
popf
push
sbb
sbb
dec
imul
xchg
mov
or
inc
aam
test
int
test
xor
sbb
icebp
aam
popa
leave
repz
xchg
out
mov
loop
mov
inc
es
fwait
adc
sub
fwait
jno
inc
fbld
aas
xchg
out
aas
xlat
rcll
call
dec
push
pop
mov
cltd
outsb
xor
xor
dec
out
icebp
leave
sbb
imul
xchg
jle
add
xor
scas
push
cmp
mov
iret
stos
imul
shrl
mov
add
cmp
xor
adc
rcrb
js
aaa
or
jg
sub
addl
and
addr16
cmp
inc
data16
repnz
xchg
add
xchg
loope
mov
pop
mov
or
sahf
fcomi
inc
int3
inc
fdivs
sub
add
pop
mov
insl
in
arpl
inc
inc
lcall
mov
gs
push
insb
jno
pop
xchg
xor
sbb
xor
data16
push
pop
arpl
push
mov
cmpsl
movsl
dec
add
mov
xchg
rclb
and
aas
jbe
daa
movsl
mull
jne
add
lock
adc
adc
add
out
pop
lods
pop
fmull
aas
aad
ret
cmc
pushf
inc
lods
pop
incl
scas
test
xor
clc
adc
pop
test
inc
es
cmp
cmp
scas
xor
roll
movsb
inc
mov
hlt
xchg
out
push
enter
sbb
lods
mov
movsl
adc
test
out
cltd
clc
adcl
aam
lods
rolb
pop
cld
shrl
das
sub
inc
dec
inc
popa
add
jp
imul
sub
cmp
movsl
lods
push
stc
scas
xchg
inc
out
and
sub
lock
stos
sahf
push
fwait
movl
jge
lea
sti
jmp
jg
mov
xor
inc
add
mov
sbb
aam
hlt
jno
xor
push
xor
or
fisttpl
data16
jo
fdivs
inc
and
mov
jnp
sbb
lahf
add
flds
fwait
or
hlt
and
ret
cmp
lock
loop
sbb
das
sub
sbb
inc
xorb
xchg
fdivl
loopne
lahf
aaa
pushf
dec
mov
or
lret
sub
push
dec
cmp
sbb
pop
xor
movl
neg
and
xchg
ret
cmpsl
mov
adc
pushf
dec
loope
sub
dec
js
and
push
push
repnz
xchg
push
or
cld
call
cmpsl
cmp
dec
sbb
push
push
test
out
pop
into
fsin
jb
mov
jle
xchg
ljmp
je
inc
lods
add
mov
xchg
jae
into
mov
pop
out
fidivs
push
lret
lcall
les
push
cmc
call
out
jbe
popf
cmp
mov
loopne
cmp
adc
jecxz
add
outsl
inc
movsb
sti
ss
test
mov
dec
arpl
sbb
xchg
sub
sub
shll
sub
xchg
and
test
notb
xchg
insb
les
push
add
cmpsb
incl
push
ret
push
out
into
hlt
push
je
imul
push
loop
aam
sub
mov
sub
lea
add
loopne
ret
loope
pushf
hlt
mov
adc
out
cs
adc
push
fstl
adc
pop
int3
mov
lea
pushf
dec
mov
lahf
cmp
add
js
bound
pop
jge
out
add
rorl
jl
mov
push
adc
mov
dec
cmp
jp
mov
push
ret
dec
data16
ret
popf
dec
aam
imul
or
sbb
mov
popa
outsb
ljmp
mov
movsb
push
cs
ret
lea
or
xor
inc
cmp
and
aad
inc
xlat
or
pushf
fwait
sahf
push
enter
dec
in
xchg
push
and
adc
cmp
fildl
data16
call
inc
push
cld
pop
or
jp
ret
loope
pop
dec
sbb
adc
xchg
mov
jae
cld
xor
popf
bound
dec
movsb
mov
xor
clc
mov
lcall
xchg
lahf
dec
jbe
std
fdivl
mov
imul
jge
dec
mov
jg
orl
mov
push
lcall
mov
push
inc
clc
or
jnp
cmp
gs
stos
into
sub
mov
sbb
xor
or
inc
push
addr16
dec
and
sahf
add
out
call
xor
cmp
pop
cmp
fiadds
mov
add
shll
fs
imull
arpl
stos
les
mov
aaa
lods
mov
dec
cmp
inc
insb
and
cmp
push
lcall
imul
in
js
cmpsl
icebp
es
adc
mov
xchg
shlb
ljmp
inc
pop
dec
ss
clc
mov
xchg
lret
sub
and
inc
adc
xor
pop
push
int
scas
aam
dec
push
push
mov
sbb
btc
test
lret
jecxz
out
pop
push
imul
sub
aas
lods
shrb
imul
cmp
jmp
daa
pop
or
shlb
xchg
xor
xchg
repnz
lret
sub
mov
lret
and
pop
jmp
rol
sbb
inc
int
dec
xchg
lcall
add
ror
jmp
dec
or
mov
cli
push
push
aaa
mov
push
mov
mov
into
andl
fwait
outsb
mov
ret
out
call
push
inc
and
pop
cmpsb
in
mov
mov
jnp
mov
xor
mov
push
mov
test
outsb
aas
jb
imull
cmpsl
sbb
pop
loopne
xchg
lret
ret
pop
mov
es
mov
call
les
mov
pop
leave
dec
shlb
movsl
push
sub
mov
jns
pop
sub
add
adc
jb
xorl
inc
or
or
rcrl
mov
sub
or
ja
jne
out
inc
adc
push
xchg
out
push
or
arpl
adc
movsb
aaa
dec
ds
test
add
xor
lods
sbb
jg
lret
and
lret
cli
push
lods
cmpsl
xchg
push
imul
pop
and
cmpsb
out
cwtl
bound
push
push
lods
imulb
lcall
pushf
sub
mov
inc
addr16
xor
mov
mov
lds
dec
push
in
pop
movsb
stc
push
out
test
lret
pop
mov
sub
mov
xor
cld
cmp
cwtl
loopne
or
pusha
adc
xor
jno
stos
test
aas
mov
leave
daa
and
jle
add
jg
cmpb
stos
or
andb
ret
lods
add
jecxz
mov
lds
add
or
lret
lret
jge
jne
test
aas
and
xchg
mov
jno
xchg
cmpsb
and
aad
mov
lret
inc
repnz
adc
mov
sbb
fdivrl
xchg
cmp
mov
cmp
bound
imul
data16
aas
std
mov
add
cli
push
sti
pop
aas
mov
int
leave
hlt
jae
cmp
out
jmp
jne
mov
out
xchg
les
stos
sub
sub
ss
xlat
lret
add
jl
sbb
in
jae
cmp
add
test
or
es
and
insb
in
mov
pusha
mov
adc
insl
push
and
mov
scas
and
insb
sbb
mov
sbb
sub
xor
push
ja
xchg
in
test
test
push
stos
cwtl
in
push
popf
scas
jmp
sbb
loop
clc
addr16
test
pop
sub
in
shll
int3
sub
mov
push
dec
mov
xchg
fistpll
jbe
fstl
sub
sub
insl
roll
jmp
pop
mov
into
mov
add
stos
sub
or
stc
ret
shlb
sbb
or
mov
adc
ljmp
in
sub
in
enter
xchg
lretw
xor
mov
out
xchg
cmc
int3
xchg
sar
add
std
mov
lret
cmp
mov
lock
insb
jmp
sbb
xchg
clc
fs
pop
mov
out
aam
nop
popa
or
pop
popf
inc
mov
sbb
xchg
in
jecxz
outsb
push
int
jle
pop
clc
jecxz
test
div
out
pop
mov
repnz
inc
mov
je
je
std
out
add
mov
outsl
stos
or
ret
jnp
cltd
mov
in
jecxz
cmp
mov
push
sbb
mov
adc
xor
xor
cmpsl
pusha
aam
clc
jne
dec
and
aaa
cmp
sub
cmp
fnstenv
cmp
jo
shl
cs
sbb
dec
movsl
dec
inc
std
mov
ror
inc
inc
sbbl
out
stos
daa
jo
mov
ret
fldenv
in
out
in
xchg
popa
movsl
cld
fcoml
pusha
mov
sti
and
dec
xchg
push
fsub
int3
xchg
repnz
and
ljmp
or
ds
iret
insb
cmp
xor
js
test
in
push
cmp
loopne
jge
out
ljmp
pop
jae
movsb
xchg
push
jae
or
jno
jmp
negl
xor
bnd
aas
add
ss
add
stc
divb
lods
pop
sbb
pushf
in
stos
adc
ljmp
pop
aad
arpl
push
sub
aam
lds
pop
mov
mov
sbb
cmp
pop
leave
psrlq
popa
dec
loop
std
fnsave
shll
add
incb
and
pop
lahf
jne
popf
inc
insb
pop
and
xor
lods
ja
repz
lds
lods
fiadds
outsl
mov
sub
push
imul
and
fnstenv
push
sbb
arpl
pop
mov
test
or
adc
cltd
push
xor
cltd
test
in
xchg
dec
xchg
sbb
pop
sub
jno
and
jge
jns
sub
paddusb
leave
sarl
nop
ret
cli
cmp
mov
call
lret
out
loop
ds
faddl
add
outsb
out
push
push
mov
xor
cmp
pushl
push
dec
enter
insl
popa
imul
jmp
mov
mov
int
pop
fcmovne
cmp
sub
jl
jmp
push
sub
sbb
sbb
cmp
ljmp
adcb
or
mov
enter
sub
mov
sti
test
xchg
cmc
int
insb
lcall
xchg
xchg
lds
and
adc
cmp
aam
pop
xchg
lcall
dec
push
xchg
jecxz
push
and
stc
in
ret
fidivrl
in
and
lea
addr16
stc
jecxz
adc
in
lcall
orl
and
mov
or
jge
incb
adc
hlt
jb
or
inc
mov
cmp
adc
push
popa
pusha
inc
sbb
cmpsl
sbb
in
subb
loop
mov
shlb
xor
add
ja
dec
sti
ret
push
pushf
mov
pop
loope
aam
sbb
xlat
mov
arpl
sti
xor
jecxz
enter
sarb
imul
fmuls
or
in
loope
lea
aaa
mov
hlt
insb
xchg
stos
into
add
dec
mov
mov
int3
lock
hlt
sbb
mov
movb
mov
dec
pop
stc
int3
fwait
rorb
adc
jg
or
out
in
pop
xchg
fsubl
int
aas
out
leave
loop
stos
movsb
sub
adcb
jae
gs
inc
xor
ror
mov
pop
int
inc
lods
scas
out
adc
in
scas
cmc
out
mov
inc
sahf
and
inc
xchg
adc
ret
push
out
sub
addb
sbb
lahf
push
cvtdq2ps
mov
or
jp
inc
and
pop
lcall
and
in
sahf
dec
and
jmp
mov
cmp
mov
lods
pop
inc
pmulhuw
imul
loope
aas
pop
repnz
mov
cmc
test
out
ficomps
adc
outsl
jg
mov
inc
cmpsb
nop
mov
mov
jge
jmp
jl
mov
daa
push
lret
in
mov
ja
addr16
xor
pushf
cmpsb
jo
mov
out
sbb
mov
cwtl
mov
adc
aad
cmp
in
popf
clc
movsb
ja
lea
lahf
pop
add
test
cmpsb
dec
rcl
test
or
jo
cmp
push
or
sub
shrl
pop
fisubs
scas
addl
insb
xor
sub
dec
xchg
or
mov
aaa
inc
xor
sbb
or
jnp
mov
add
inc
pop
adc
jno
pop
lcall
sbb
int3
orb
in
and
lds
icebp
out
data16
or
sub
xchg
fs
dec
jge
insl
push
scas
mov
or
jnp
fidivl
xor
push
cld
mov
and
xchg
cmpsb
loope
jecxz
or
and
and
lret
lods
jecxz
mov
or
or
ss
addl
aaa
xchg
ja
jg
sahf
pusha
cmpsl
shll
push
mov
fs
mov
pop
add
lds
iret
test
cmp
movsb
xchg
mov
movsb
call
ljmp
ss
or
inc
fs
ret
mov
cwtl
xchg
jmp
leave
adc
jp
xchg
dec
xchg
xor
or
rorl
int
mov
mov
sub
inc
icebp
cmp
jne
push
jl
and
int3
je
faddl
fcomps
lods
xchg
rcrl
in
jb
adc
fnsave
cmp
cwtl
pop
sub
sbb
pop
loopne
xor
sbb
clc
fdivs
mov
dec
adc
cmc
mov
fwait
dec
dec
hlt
mov
xchg
mov
pop
inc
push
push
clc
mov
mov
or
sbb
fmuls
fadds
mov
ja
int
jle
sub
mov
or
xlat
inc
sub
adc
je
outsb
incl
xchg
or
mov
ds
rorb
cmp
and
test
bound
mov
loope
cmp
jge
pop
adc
and
cmp
dec
inc
fwait
addr16
fwait
shrb
jne
fistl
cld
dec
popa
fcmovnb
test
gs
inc
mov
cmpsb
cmp
sbb
sysret
pop
xor
loopne
push
fldenv
in
jne
adc
dec
mov
clc
fcomps
hlt
xlat
icebp
add
inc
and
sub
cmp
rol
aas
hlt
lahf
cmpsb
std
inc
push
cli
test
pop
ljmp
daa
add
inc
sub
pusha
push
dec
adc
xor
movsb
enter
pop
in
xchg
sub
push
jle
fidivrl
sub
xchg
sub
insl
jle
push
cld
and
mov
and
xchg
call
cmc
push
inc
push
rcrl
dec
push
pop
fadds
and
fnstenv
movb
mov
mulb
inc
cmp
xchg
sub
outsl
sub
lea
or
sarb
rorb
jbe
repz
lods
add
hlt
mov
testb
sti
fadds
pop
xchg
fldenv
or
xchg
jge
ds
xchg
jl
xchg
std
jecxz
data16
add
pusha
int3
adc
sub
adc
fnsave
leave
inc
xor
rcrb
sub
sbb
aad
pop
xor
loop
es
push
mov
sub
out
xlat
xchg
loop
xor
or
pop
xor
insb
sbb
and
fbstp
arpl
or
dec
jnp
mov
mov
ss
fiaddl
xor
xor
icebp
insb
ds
xchg
lock
add
test
cmp
add
out
inc
fists
pop
and
stos
bound
addr16
rolb
xor
out
sti
cmp
cmp
mov
mov
ljmp
rcrb
popf
inc
inc
in
inc
jae
js
lahf
mov
and
in
mov
lea
movsl
inc
adc
pushf
fdivl
fistpl
adc
popf
mov
mov
lods
mov
ljmp
and
sbb
ret
pop
iret
pop
mov
mov
cld
cmpsl
popf
mov
pop
push
jmp
adc
mov
call
imul
sub
lea
out
dec
les
mov
mov
outsl
cmpsb
cmpsb
pop
in
cli
adc
sub
mov
push
insb
insl
jb
fcoms
mov
test
movsl
xor
jl
mov
nop
out
fcoms
out
mov
insl
inc
inc
in
call
push
enter
adc
and
insl
std
or
pop
pop
jne
mov
inc
jae
sub
das
mov
dec
push
push
sti
xor
adc
push
out
insl
pop
out
sbb
loopne
test
add
mov
lds
inc
dec
xchg
sub
lret
jge
arpl
mov
mov
mov
stos
and
mov
mov
call
xchg
add
cmpsb
dec
mov
mov
pop
pop
sub
int3
out
dec
or
sub
jo
out
add
repz
xlat
mov
fst
inc
hlt
add
fwait
pop
cmp
dec
push
std
arpl
scas
lret
jae
scas
jecxz
inc
arpl
dec
les
add
stos
ds
test
jge
mov
movsb
arpl
adc
push
sti
push
add
pop
out
mov
aaa
pop
sbb
test
negl
jmp
cmp
cld
mov
sbbb
fidivl
insl
pop
xchg
adc
popl
loopne
xlat
cmc
sub
xlat
mov
cli
stos
xor
std
jecxz
xor
fwait
push
jnp
dec
pop
push
jl
jae
inc
inc
or
call
sub
rol
push
xchg
daa
cmp
push
stos
cmp
add
push
andb
inc
or
nop
aaa
mov
arpl
push
cmp
sub
icebp
std
push
pop
orb
insl
inc
es
clc
adc
out
dec
dec
mov
cmpsl
jno
push
fildll
inc
sti
cmp
cltd
jno
pop
js
jne
xor
cwtl
movsb
mov
stos
inc
pop
adc
movb
or
bnd
cs
jg
jns
lock
lods
dec
fsubp
dec
ret
scas
dec
mov
pushf
mov
pop
cmp
jl
cmp
push
pusha
aam
and
insl
xchg
and
clc
ljmp
imul
imul
pop
xor
mov
fwait
cli
aam
in
repz
lods
jge
lret
insl
mov
aas
lret
insl
shll
dec
or
adc
ja
dec
pop
or
or
and
aaa
ret
shll
cmp
cmp
jo
or
jp
pop
mov
daa
movsb
stc
add
or
outsl
jbe
cmp
pop
xchg
xor
hlt
ret
in
test
xor
add
shr
rcrl
dec
clc
daa
int
ja
les
jns
sahf
repnz
xchg
inc
push
dec
fstps
fiadds
xchg
leave
cmc
push
mov
adc
fcoml
stc
lods
arpl
jp
js
mov
cli
cmpl
jo
push
jo
andb
xor
aas
push
inc
rol
adc
pop
insl
mov
addb
js
rorl
lods
sti
out
xchg
aad
and
ret
cmp
imul
or
xor
ret
cltd
adc
gs
inc
aad
jb
imul
push
xchg
inc
loopne
out
mov
iret
sahf
mov
sub
xor
dec
pop
jo
rolb
sahf
mov
adc
insb
inc
das
push
test
dec
cmpsl
popa
sub
rorb
dec
stos
test
adc
jp
es
clc
mov
inc
dec
roll
das
inc
out
adc
or
in
test
mov
cmp
cmp
sti
jle
andb
daa
inc
sti
sbb
add
mov
pushf
jnp
add
popa
dec
xorb
sbb
es
pop
repnz
out
hlt
dec
xlat
add
mov
inc
inc
xchg
ljmp
adc
aaa
orb
adc
fcmovu
adc
sbb
push
popf
jmp
xchg
cmc
ret
lret
insb
and
loop
and
test
lock
mov
and
or
cli
into
pushf
or
lret
and
sbb
inc
and
mov
cltd
cli
add
xchg
ljmp
ror
xchg
sahf
fisubrs
jb
push
lods
jge
push
mov
jo
fcoms
lods
jecxz
jecxz
or
or
mov
sbb
adc
fsub
sbb
xor
or
fwait
inc
test
mov
cmpsl
lret
sub
push
fisttpl
out
nop
gs
or
pop
mov
movsb
mov
jo
enter
sub
jle
inc
cltd
popa
ja
nop
mov
sti
leave
mov
pusha
sbb
sbb
mov
lods
inc
aaa
das
das
xlat
stos
cmp
clc
sub
movsb
push
xor
or
out
sbb
or
lea
xchg
fisttps
mov
aas
icebp
pushf
ss
cmpsl
cmp
sub
push
push
sbb
mov
movl
sbb
nop
outsb
nop
testb
roll
mov
int
iret
mov
mov
shrl
push
fimuls
loope
mov
adc
stc
and
mov
call
call
xchg
jmp
inc
or
jg
jb
mov
jb
or
sahf
xchg
push
and
dec
sarb
inc
and
insb
push
mov
dec
fisubl
adc
inc
add
xchg
mov
or
fwait
scas
lds
rclb
fildl
stos
jne
sub
inc
fcmovu
pop
push
es
cld
inc
bound
sbb
mov
cmovle
daa
push
dec
push
lods
inc
add
mov
mov
push
pop
jg
xor
cmp
fldl
or
cmp
cmpsl
mov
ja
stc
or
das
xlat
fidivrs
std
mov
jle
je
popa
adc
imul
sub
push
pop
mov
lret
push
and
add
xor
sti
xor
stos
dec
xor
xor
or
jmp
inc
ja
mov
pop
or
pop
add
mov
add
cmp
fstp
sbb
dec
xor
sub
mov
jb
or
sub
mov
sbb
adc
or
shrb
out
mov
mov
icebp
xchg
sub
sbb
imul
outsl
jb
xor
ja
push
inc
int
faddl
fistl
adc
enter
rorb
popf
mov
daa
sbb
xchg
or
jne
int
and
mov
call
lods
lret
jl
lahf
ss
push
and
scas
sub
out
cmc
out
pop
shll
cmpl
in
or
or
outsb
inc
cmp
xor
inc
subb
xlat
mov
add
into
insb
bound
xchg
mov
aad
aam
out
add
sbb
pop
out
and
mov
push
es
xchg
mov
jecxz
lahf
daa
or
icebp
ljmp
adc
repz
lods
aam
popa
dec
xchg
mov
dec
jp
out
test
cs
lcall
test
and
jnp
mov
push
and
lcall
outsl
pop
xorb
add
data16
adc
push
loope
mov
sub
or
jnp
jl
test
mov
inc
push
in
lds
sub
dec
sub
and
les
out
aaa
cli
lret
ss
xor
push
jb
sub
bound
mov
adc
jb
fcmovne
mov
inc
xchg
dec
movb
insb
push
pusha
add
and
les
sub
sub
pop
push
dec
test
mov
popa
in
sbb
mov
inc
dec
fistps
dec
jbe
xchg
push
in
jne
ss
cli
std
das
push
cld
js
lret
in
into
cmp
loope
and
aam
inc
lea
cmpsl
imul
cmp
mov
pushf
adc
pop
addr16
mov
ret
push
mov
or
or
cmp
jae
je
out
mov
add
testb
push
xchg
fwait
test
lock
or
sub
xor
movaps
pusha
cmp
hlt
fcomps
jae
sub
cltd
int3
sbb
cmp
push
scas
sar
scas
int
adc
pushf
and
add
mov
sub
adc
ds
push
mov
push
lods
or
psllw
sbb
lret
or
mov
movsl
outsl
sub
jle
rcll
cmp
xlat
mov
test
push
push
cli
ja
cmp
xor
arpl
sbb
inc
mov
dec
xchg
and
dec
mov
add
lods
mov
and
inc
adc
in
cwtl
pop
in
clc
or
loop
mov
pop
cs
loop
cli
add
jne
jns
cs
sbb
cli
mov
mov
ss
aam
jo
outsb
js
inc
and
mov
sub
test
push
shr
jb
xchg
sbb
jle
mov
jecxz
test
fcmovnb
arpl
mov
jbe
and
xor
out
inc
mov
jle
iret
shll
sbb
into
inc
jnp
push
mov
ds
mov
sub
cmp
mov
fdivrp
cmp
jb
movsb
mov
sbb
pop
ds
stc
mov
lock
std
cmp
cmpsb
lea
pop
mov
aaa
gs
jp
push
stc
pop
jnp
jge
push
inc
push
pusha
jne
xor
clc
outsl
pop
movsb
push
in
xor
dec
clc
mov
popl
cli
aas
mov
repz
sub
jge
jb
jl
lahf
add
pop
mov
and
lret
movsb
stos
jo
cmp
clc
rclb
jp
pop
add
pop
sbb
jo
ret
movsl
fistpl
lods
sti
jo
inc
mov
push
inc
dec
xchg
rcrb
mov
push
push
xchg
push
cmp
ret
nop
jnp
addr16
repz
adc
sahf
into
sbb
cmp
test
adc
fistpl
std
xchg
movsl
adc
in
dec
cld
leave
arpl
and
mov
insl
xor
pushf
add
cmp
out
std
xor
nop
push
sub
xor
or
pop
in
cli
add
and
xchg
dec
adc
cltd
add
lock
movb
sub
mov
icebp
popl
jb
mov
fwait
mov
jmp
int
ja
das
xchg
xor
cmp
xchg
es
gs
pop
popa
mov
cmpsl
mov
pop
push
cltd
mov
cmp
lret
mov
loop
fs
cmpsb
pop
loopne
int3
push
shr
aam
in
xchg
bound
hlt
xor
das
stc
sarb
lcall
inc
pop
rcl
test
dec
mov
xchg
inc
stos
sbb
movsb
jmp
movsb
mov
aad
rcll
mov
mov
push
cmc
jp
mov
adc
lock
cs
andb
out
ja
shlb
xchg
imul
mov
mov
das
stos
or
lods
add
adc
sub
lea
test
popf
and
outsb
adc
adc
sub
cmp
pushf
push
lods
cwtl
mov
xor
push
clc
mov
jae
xchg
imul
and
shrb
mov
pop
dec
test
loope
pop
sbb
in
push
mov
inc
cmova
fwait
hlt
adc
sbb
jns
sub
test
push
jp
fs
shrb
cmc
xchg
mov
jnp
out
pop
push
mov
mov
jmp
ds
pop
push
adc
fiaddl
xchg
sbb
sub
pop
dec
pushf
jle
or
dec
addr16
stc
mov
inc
cmpsb
cmc
pop
dec
mov
test
xchg
addr16
clc
repnz
rcrl
xchg
cmp
loopne
pop
out
jns
lret
xchg
push
insb
cmp
loope
xor
dec
add
add
lret
or
inc
lcall
mov
mov
lcall
xor
mov
cmpsb
add
dec
daa
sahf
adc
jb
jg
jne
jbe
imul
adc
pop
mov
in
shrb
sbb
sbb
xor
cmpsb
or
clc
push
mov
xchg
js
test
std
xor
sahf
loopne
cmp
fcomi
out
movsb
inc
in
scas
jg
sbb
or
mov
xchg
iret
daa
test
add
lret
push
js
mov
mov
dec
movsl
push
pop
lods
pop
shrl
cmp
in
fistpl
es
stos
jb
bound
or
xor
lret
sbb
inc
add
sub
mov
mov
cld
lcall
test
sbb
arpl
loop
mov
pop
jmp
aaa
xor
pop
sub
testl
xchg
popf
nop
popf
xchg
inc
cmp
jo
or
inc
or
aas
mov
iret
cmc
mov
mov
mov
pop
sbb
and
xor
pop
repz
mov
ret
ret
mov
inc
fdiv
xor
iret
cmc
mov
push
mov
sbb
pop
add
xorl
inc
fsts
jg
or
jns
xor
lret
xor
dec
out
fs
loop
enter
jmp
outsb
adc
pop
bound
ljmp
lret
xchg
ret
in
in
mov
scas
mov
ds
lahf
adc
xchg
mov
pop
jge
add
mov
iret
mov
cltd
sub
shrb
lea
mov
lds
pushf
mov
std
mov
jo
mov
mov
dec
and
dec
fstpt
aam
xor
cs
mov
adcl
dec
xor
push
jle
inc
je
jle
dec
div
pop
pop
js
mov
or
popa
cmp
xchg
mov
mov
lret
aad
and
or
test
pop
pop
jae
call
repz
test
xor
jbe
dec
adc
xchg
rolb
shl
add
mov
cltd
jo
xor
in
and
or
scas
sub
sbb
les
dec
mov
pushl
sub
loop
mov
enter
sub
repnz
cmpsb
lock
add
gs
xor
loope
adc
adc
movsl
cmpsl
in
popf
pop
pop
cmp
jecxz
and
add
sbb
pop
inc
stc
inc
iret
cwtl
jnp
lds
adc
icebp
xor
test
scas
into
das
inc
sbb
cmp
add
neg
jnp
out
or
testb
ret
in
sbbl
and
jl
cmpl
bound
adc
in
fcomi
sbb
mov
xor
test
out
jle
xor
dec
pushf
mov
into
mov
adc
dec
push
pop
mov
push
xchg
mov
add
mov
stos
je
je
push
cmp
sub
cmovp
mov
loope
insl
mov
movsb
jg
clc
je
cmpsl
es
outsb
dec
sahf
fdivrs
push
jnp
ret
push
sahf
add
scas
lea
jp
popl
js
orl
pop
dec
jmp
mov
sahf
sbb
dec
jns
arpl
dec
lret
jbe
adcb
dec
dec
push
jbe
and
mov
fsin
adc
popf
xchg
inc
dec
xor
shll
aaa
pop
and
mov
jb
mov
sahf
das
xor
xor
loopne
das
ror
outsl
outsb
imul
fsts
adc
pop
xchg
std
shr
aam
nop
lock
push
js
test
mov
pushf
dec
push
scas
adc
inc
adc
inc
int
jb
sub
cli
data16
xor
cwtl
xor
or
push
out
adc
cmpsb
jns
push
xchg
ds
jle
adc
test
push
mov
cs
mov
out
xchg
mov
push
cmp
jnp
mov
js
jbe
lcall
leave
xor
mov
xchg
xor
sub
adc
or
addr16
cmp
lods
clc
dec
lret
in
mov
ljmp
call
pop
xchg
jl
fs
inc
mov
out
cli
fdivrs
shl
add
add
bnd
xchg
aad
js
jl
ficoml
repnz
arpl
cmc
dec
pushl
cld
pop
sub
mov
cmp
popf
mov
xor
push
cs
sub
xlat
push
fcom
xor
xor
xchg
sbb
mov
rolb
dec
loopne
pop
insl
aas
loop
push
pop
sbb
ficoms
pop
sub
es
mov
adcb
repz
mov
dec
dec
pop
dec
and
imul
lods
outsl
inc
add
sti
mov
ret
mov
xchg
and
inc
outsb
addr16
jae
imul
sahf
push
lahf
in
in
sub
sbb
and
rcrb
pop
mov
dec
mov
adc
mov
mov
push
sub
stc
sti
lcall
imul
and
cmpb
and
fwait
adc
or
and
mov
std
std
dec
in
into
std
sub
jbe
adcb
dec
sub
mov
lods
xor
pushf
movsw
inc
cwtl
add
mov
js
sub
jge
dec
jp
mov
loopne
in
add
xchg
andb
add
andl
ljmp
sub
xor
mov
push
fbld
sbbl
mov
jb
in
das
ffree
test
fdivrp
das
xchg
daa
mov
or
inc
mov
push
icebp
sbb
mov
sbb
sbb
call
in
xorl
imul
push
push
lods
fcoms
movsl
xchg
pushf
outsb
movsl
je
sbb
andl
adc
mulb
leave
push
jne
out
push
orl
push
cwtl
add
mov
std
ret
fidivs
xor
push
mov
sbb
stc
shll
mov
aam
inc
ds
jne
js
lods
cmpl
xchg
int
les
cmp
lods
aaa
lea
cmpsb
jno
pop
outsl
faddl
negb
neg
adc
fwait
das
sub
int3
rcr
mov
cmp
ja
int3
dec
jo
xchg
enter
lcall
inc
sbb
aad
sub
mov
fwait
mov
sbb
xor
ficompl
push
push
inc
sub
push
aaa
gs
in
popa
push
dec
or
call
or
arpl
shl
stos
adc
sarb
pop
mov
cmp
sub
stos
daa
lock
dec
aam
pop
xchg
xchg
xchg
or
pop
lea
xor
cmp
ret
pop
jae
pusha
xor
lea
mov
out
bound
xchg
cmp
ret
hlt
or
mov
rorb
cmpsl
je
or
mov
shll
xor
mov
cmpsl
gs
jne
imul
cmp
mov
xchg
sub
addr16
pop
stos
xor
xchg
push
test
negb
xchg
imul
and
xchg
pop
and
imul
sbb
push
or
jbe
push
inc
sub
xchg
inc
inc
mov
mov
push
pop
push
fdivrs
arpl
stos
inc
mov
add
xlat
leave
mov
lcall
idiv
scas
lret
imull
adc
mov
jg
clc
int3
lcall
mov
xchg
mov
cmpsb
out
jl
outsb
adc
lcall
cmp
mov
cmp
sarb
mov
outsb
cmc
out
mov
ss
pop
jbe
inc
rorb
iret
push
inc
test
int
pop
loop
inc
les
pop
pusha
mov
neg
sarb
dec
cmp
lret
dec
jns
add
cli
es
je
xor
mov
push
adcb
inc
pop
sub
filds
mov
loopne
inc
fwait
inc
xchg
xchg
and
pop
mov
xchg
mov
mov
cmp
fwait
cld
mov
enter
fisttpl
in
xor
dec
lods
inc
pop
aaa
mov
push
inc
mov
push
jl
out
cltd
sub
mov
test
pop
lahf
aam
cmc
jl
mov
pop
xchg
fs
mov
add
cltd
sub
aad
lods
test
in
ljmp
mov
movsl
in
xlat
aam
xor
push
mov
mov
aaa
push
mov
push
dec
loopne
lret
adc
stos
test
push
adc
mov
into
mov
cmpsb
xchg
out
push
sbb
lods
in
popa
xor
push
or
xlat
add
and
imul
test
jb
inc
std
add
das
pop
xchg
fdivrl
mov
jbe
repz
cli
aaa
pop
popl
dec
sbb
lds
call
fbstp
push
mov
adc
adc
js
pop
insb
sbb
adc
int
fdivrs
pop
aad
xlat
push
inc
mov
xchg
jmp
jle
sub
fucomip
incb
aaa
leave
xor
mov
adc
mov
jbe
sub
inc
jo
fldt
fucom
mov
mov
jg
ljmp
jecxz
jns
out
adc
and
iret
nop
notb
or
jno
in
adc
test
sub
add
jb
sub
es
popa
inc
sub
sbb
sbb
aaa
mov
jbe
rolb
rclb
cmc
mov
fiadds
sub
mov
hlt
ud2
sub
enter
mov
push
ja
sub
lahf
and
sub
cmpsl
inc
cmp
shlb
lods
xchg
and
pop
pop
cmp
scas
arpl
or
xor
ljmp
js
aas
in
imul
cli
mov
fwait
fwait
ret
mov
stos
mov
cltd
lods
bound
jno
js
scas
outsb
adc
inc
daa
xor
mov
inc
das
pusha
inc
flds
movsb
sub
and
jnp
jno
cltd
iret
lock
enter
cmp
nop
das
mov
cmp
add
ljmp
sahf
andb
dec
mov
push
mov
jno
pop
js
and
sbb
sub
repz
insb
fadds
push
dec
mov
mul
movsb
sbb
pop
popa
scas
sbb
xchg
mov
mulb
inc
dec
fmul
sbb
div
mov
mov
out
push
jge
mov
add
ja
cli
pop
in
and
mov
jbe
mov
cmp
push
lock
or
pop
aam
xor
xchg
dec
movsl
adc
push
enter
pop
lret
adc
cmp
filds
aas
movsb
pop
in
ret
mov
data16
and
out
enter
and
addr16
jbe
jae
and
or
cmp
push
movsl
mov
xchg
outsl
xchg
push
pop
int
xor
fsubp
sub
push
add
push
and
scas
repnz
cmp
add
nop
sbb
data16
adc
rol
jp
div
or
repnz
mov
es
orb
imul
sub
insl
sbb
arpl
push
fdivrl
push
shlb
lahf
pop
test
shl
test
fnsave
fdivrl
mov
sbb
int3
and
pushf
mov
movl
push
jp
jo
add
push
addb
xchg
lods
ret
sti
outsb
inc
adc
adc
out
ss
push
enter
sbb
push
cli
dec
push
dec
adc
mov
push
stos
fwait
jno
pop
mov
jns
cli
sbb
sub
pop
dec
pop
or
pop
int
mov
shl
mov
cld
lret
dec
push
fcomps
add
imul
mov
std
adc
xlat
mov
inc
jno
xor
cli
mov
shrl
mov
sub
inc
jae
add
int3
or
jnp
lods
mov
push
mov
add
subl
jecxz
and
inc
sbbl
hlt
lods
pop
lds
sarb
push
push
loopne
pop
fninit
stos
pop
popa
jo
jns
pop
mov
pop
dec
dec
add
hlt
dec
adc
mov
pop
push
and
mov
jnp
and
fcmovnb
ja
pop
popa
cmp
rcr
out
cli
add
nop
adc
and
testb
in
sbb
int
mov
js
sub
das
mov
lahf
icebp
xor
lock
repnz
mov
pop
push
sub
test
aas
sahf
mov
xchg
jecxz
out
daa
int
inc
xlat
cltd
xor
push
add
add
inc
insb
lret
adc
add
jns
stos
mov
inc
bsf
imul
movsb
pop
jo
pop
jo
jae
leave
lods
pop
jl
sti
mov
mov
mov
mov
xor
mov
cmp
jp
mov
mov
shll
or
faddp
fistl
adcb
cli
leave
icebp
inc
outsb
adc
test
dec
cltd
inc
push
dec
mov
inc
pop
loop
or
push
fisttpll
mov
sub
js
add
jnp
pop
imul
pop
test
xchg
repnz
cld
lock
cwtl
enter
rclb
outsl
sbb
sub
mov
jge
scas
ljmp
mov
int3
popa
dec
cmp
stos
cmovs
das
repnz
jle
sbb
pop
fisubrl
popa
les
sbb
mov
js
data16
and
loop,pt
pop
out
xchg
ret
arpl
aad
mov
lahf
vshufpd
jle
data16
cmp
data16
mov
lcall
stos
sub
loop
mov
xor
inc
mov
jnp
push
leave
je
cmpsl
cmpsl
pmulhuw
ss
mov
xor
lahf
mov
push
inc
dec
dec
xor
xchg
jo
jmp
mov
xor
jge
adc
inc
sbb
out
std
mov
ljmp
insb
ss
push
mov
ret
addr16
ficoms
sbb
xchg
sahf
add
je
jmp
push
lea
inc
dec
push
sub
mov
std
mov
mov
repnz
arpl
sti
inc
mov
xchg
pop
xor
scas
movsl
sbb
push
cmp
lahf
daa
ja
xchg
xor
repz
push
cwtl
loopne
stos
aam
ss
repz
pop
mov
jno
mov
sbb
loope
shrb
inc
movsb
and
push
or
inc
xor
fldpi
data16
xor
pop
pusha
xlat
pop
pop
inc
es
aaa
ret
mov
mov
xchg
push
inc
pop
iret
mov
sbbl
inc
fcoms
mov
mov
jae
add
clc
inc
gs
sub
xchg
dec
push
aaa
out
inc
inc
int3
jnp
and
int3
into
mov
out
ds
int3
daa
shll
xor
lcall
imulb
push
bound
adc
cmp
push
sbb
add
leave
roll
or
adc
pop
das
and
test
inc
mov
xchg
pop
or
call
leave
lods
aaa
and
roll
cltd
jmp
mov
call
shr
stc
test
jne
sub
cmc
stos
pusha
sbb
aam
xchg
and
roll
xor
subl
int
mov
push
popa
repnz
icebp
push
pop
ror
jle
dec
add
ja
mov
mov
call
mov
sub
jl
lods
sub
mov
jns
and
loopne
int3
insl
pop
loopne
push
scas
int
sti
dec
sub
cmp
dec
inc
pop
out
popa
jg
cmpsb
adc
sub
cmp
sub
xchg
jge
pop
mov
std
inc
inc
cli
pop
inc
sbbl
fs
fptan
xlat
es
outsb
je
movsl
imul
hlt
into
fwait
cmpsl
jmp
mov
or
lock
pop
stos
jns
movsl
pop
addb
jp
lock
test
orb
jns
inc
loope
jns
aas
push
movsl
lock
sub
xor
mov
cmp
inc
nop
ds
pop
push
jg
push
subl
sbbl
lcall
cld
jns
ret
outsb
cmc
insb
mov
add
leave
pop
or
dec
pop
mov
pop
or
sbb
cmc
or
mov
subb
adc
repnz
adc
insb
xor
xor
fnsave
xor
or
loopne
inc
js
sbb
jo
sahf
rorl
cs
mov
pushf
xchg
jnp
add
mov
mov
clc
or
inc
cltd
jle
mov
std
inc
xchg
xchg
idivl
cwtl
mov
shrl
add
sub
in
in
fmul
movsb
mov
inc
fwait
addps
xchg
nop
xchg
xchg
cs
sbb
scas
int3
sub
dec
movsb
xor
mov
popf
jno
xor
mov
rorl
shl
ret
pop
gs
push
insl
fwait
add
add
ljmp
push
cwtl
nop
lcall
inc
bound
mov
js
inc
scas
lahf
lea
clc
add
jmp
or
mov
popf
data16
jne
sbbb
loop
iret
cli
xchg
idivb
stc
mov
pusha
sub
xor
jb
lret
data16
aam
jg
addr16
lods
andb
pop
pushf
dec
shl
shrb
sub
or
mov
adc
nop
dec
xchg
xchg
fistps
mov
xchg
out
mov
and
push
mov
mov
nop
test
inc
loope
cmp
cmp
mov
repz
mov
inc
push
aam
lods
loope
decl
push
sti
incb
push
mov
les
movsb
imul
sbb
stc
pusha
icebp
gs
mov
xchg
inc
stos
leave
adc
xor
mov
jno
xchg
lods
cltd
cmp
repnz
pop
jns
push
mov
jle
or
pop
sbb
stc
in
shrl
ds
or
xchg
jne
push
pop
jle
jp
lret
and
adc
test
pop
pop
push
pop
sub
and
xchg
mov
mov
shlb
adc
jns
js
mov
test
aam
shr
cmp
sbb
push
mov
loopne
jo
xchg
fisttpl
fs
pop
push
outsl
xor
jae
mov
sbb
inc
jmp
shll
xor
outsb
sahf
dec
sbb
jb
std
aam
adc
sbb
nop
jbe
not
fsubs
test
cltd
out
dec
ret
roll
in
pop
rcrl
jbe
jl
dec
lods
mov
mov
mov
repnz
dec
sbb
mov
push
fadd
pop
or
mov
mov
and
jbe
mov
dec
je
dec
std
lahf
pop
cmp
inc
data16
inc
test
rclw
mov
lahf
adcl
insb
cmp
inc
jae
jno
xchg
pop
jle
xchg
in
sub
sahf
cwtl
roll
mov
in
in
mov
orl
inc
push
mov
pop
mov
clc
hlt
lods
mov
lcall
in
into
jmp
dec
pop
iret
mov
adc
aas
pop
xchg
pop
sbb
fwait
mov
cmp
xor
mov
dec
push
jo
fs
lahf
movsb
test
arpl
lret
shll
sbb
iret
mov
cmpxchg
sar
and
pop
dec
sub
test
mov
mov
pop
mov
mov
mov
stc
sub
ret
es
lret
lods
push
mov
shl
pop
imull
in
pop
addr16
in
cwtl
sti
test
cmp
repz
data16
les
mov
pop
push
lcall
aad
ljmp
jb
pop
int
cmp
and
xchg
cmp
jne
jp
jmp
ss
pop
push
pop
popf
shll
pop
mov
sub
jg
stc
les
aas
xchg
out
dec
pop
xlat
lods
bound
push
hlt
fldcw
push
cmp
cmp
das
jmp
test
dec
and
jb
loope
out
cli
andb
in
dec
mov
jns
mov
lock
sbb
test
fisubrl
xchg
pop
mov
mov
cmp
xchg
mov
mov
sub
loope
add
jnp
testb
push
lds
dec
mov
sbb
out
in
push
inc
pop
add
xor
sub
adc
push
loop
leave
cwtl
push
leave
sbb
jo
cmp
add
gs
lods
add
add
sahf
test
inc
jo
sbb
es
fisubl
and
cltd
mov
mov
xchg
lret
pusha
mov
sub
mov
push
mov
loopne
fdivrl
mov
xchg
mov
nop
or
xor
push
insb
or
ljmp
and
stos
mov
out
popf
add
push
in
mov
lock
xor
jg
data16
lods
rcll
ror
sub
cli
icebp
sub
or
adcl
add
add
sbb
out
iret
pop
adc
sahf
jno
push
idiv
mov
mov
jno
jge
and
iret
xor
scas
rorl
inc
aaa
aad
fs
pop
popf
js
repz
aam
mov
dec
data16
fwait
cmpsb
pop
push
mov
lea
sub
xchg
fisttps
jae
and
pop
or
xchg
sar
adc
insb
sub
mov
sahf
xchg
or
std
pop
push
arpl
cmp
or
push
pminsw
jmp
ss
mov
jbe
inc
jo
hlt
outsb
inc
push
loop
ds
popf
sbb
ror
mov
mov
stos
xchg
mov
arpl
xor
test
popf
popf
repnz
out
add
sarl
mov
jb
cmpsl
inc
mov
sub
idivl
adc
test
add
popa
jecxz
push
ret
push
into
je
mov
movsb
sub
inc
dec
jnp
cli
cmpb
xor
rclb
jnp
dec
add
js
stc
ret
clc
cltd
mov
sarb
fisttpl
lock
mov
push
cs
cmc
cmp
adc
sbb
pop
pop
jecxz
bound
dec
loopne
xchg
sub
sbb
mov
mov
dec
jge
aam
mov
mov
push
pop
cmp
jne
sbb
inc
cmpsl
mov
jecxz
mull
in
ss
mov
dec
sbb
iret
fincstp
mov
jmp
mov
push
cmpsb
inc
inc
mov
scas
sar
add
mov
sbb
sarl
pusha
mov
fiadds
loop
jl
fimull
outsl
jle
jo
icebp
pop
repz
pop
dec
and
jmp
pusha
lret
add
mov
hlt
push
outsl
mov
test
mov
shrl
out
cmp
in
loopne
mov
lds
jb
mov
xchg
mov
mov
aas
mov
cli
lock
stos
je
inc
fistl
dec
mov
ret
add
add
gs
popa
sub
xchg
sbb
lock
movsl
and
out
sub
add
dec
xchg
and
out
jmp
fistps
jne
add
jae
je
stos
ret
das
hlt
adc
adc
mov
es
orb
mov
pop
xchg
push
ret
fildl
adc
xchg
rorb
jg
jno
arpl
lcall
cld
and
push
scas
push
sbb
inc
arpl
clc
rcrl
sbb
dec
xchg
mov
loopne
jae
sub
mov
std
xchg
jl
popf
imul
xchg
mov
xchg
jno
repnz
dec
leave
push
hlt
stc
sub
lcall
mul
outsl
adc
dec
dec
pop
aaa
add
xchg
call
std
shlb
push
pop
inc
cwtl
mov
xchg
mov
fdiv
lea
push
push
sbb
stos
rcrl
adcl
pusha
dec
mov
loope
insb
int
xchg
dec
adc
rcll
pop
fst
orb
pop
aad
repz
subb
sar
dec
xchg
push
xchg
xor
and
fistl
lods
push
stc
dec
cmpsb
xchg
loop
lea
sub
push
mov
sbb
pop
mov
adc
lods
jmp
inc
mov
push
lret
ret
mov
jae
sbb
jmp
dec
pop
ret
mov
fisttps
sar
or
mov
mov
fsubs
insl
bts
negb
push
idivb
movsl
test
inc
mov
mov
and
popa
cmp
in
fisttps
leave
adc
add
lret
mov
push
loope
bnd
mov
je
mov
gs
lods
adc
pop
addl
shrl
push
jo
stos
shlb
shlb
sbb
cmpsb
mov
test
mov
and
dec
int
test
ds
imul
add
mov
stc
rcrl
inc
mov
int
push
outsl
jle
inc
mov
jo
mov
in
imul
push
inc
or
pusha
in
xchg
shrl
jne
add
xchg
popa
les
ds
cmp
int
mov
das
xchg
xor
ljmpw
out
dec
in
jecxz
dec
pop
ss
test
jecxz
cs
cmp
stos
jbe
sbbl
or
pop
popf
addr16
or
ljmp
scas
jno
hlt
jg
xor
aad
xchg
std
sti
xchg
mov
dec
es
out
inc
and
jno
testb
data16
jl
cmpsl
movsb
es
sbb
and
push
or
mov
ret
dec
mov
cmp
inc
mov
sbb
sbb
or
xchg
adc
sub
or
sbb
loope
sub
nop
add
pop
es
test
adc
ljmp
shl
ror
lock
adc
adc
aaa
push
pop
adc
add
cmp
dec
lret
addr16
bound
sub
addb
int3
push
dec
arpl
sub
popa
push
sub
xor
mov
add
aaa
push
pushf
cmp
add
cmp
mov
lahf
and
addl
mov
test
loopne
aad
xchg
inc
jmp
incl
enter
adc
aam
and
and
inc
outsl
xchg
arpl
mov
xchg
add
insl
sbb
hlt
jl
in
mov
movsb
imul
inc
xchg
popa
scas
push
nop
push
cmpsl
sub
rorl
rolb
testb
rcrl
lods
mov
cwtl
push
mov
out
arpl
dec
js
push
xchg
jmp
cmc
xchg
insb
test
mov
test
loopne
dec
mov
xchg
ja
sbb
loopne
push
jmp
push
cltd
mov
mov
les
into
sub
xor
das
cmc
gs
push
repz
mov
icebp
scas
mov
pusha
xchg
decb
nop
shlb
mov
mov
push
mov
loope
or
dec
xor
shl
add
push
dec
stc
push
pop
pushf
and
mov
fisttpll
out
mov
pminub
adc
rorb
idivb
mov
stos
dec
push
and
xchg
sbb
dec
xchg
mov
xlat
adc
out
aaa
out
add
divb
dec
xor
mov
jg
xchg
in
ficoml
cmp
adc
fwait
xor
jp
hlt
sub
int3
nop
insb
jo
in
push
xchg
inc
and
pusha
cmpsb
cmp
negl
and
hlt
jbe
out
add
mov
push
mov
add
leave
inc
inc
inc
out
imul
ficoml
sti
inc
sahf
push
loope
add
push
and
fildl
les
mov
shlb
std
lods
push
xchg
cltd
adc
cmp
rcl
jnp
push
call
mov
fcmovb
cmpsb
popf
mov
mov
cmc
lret
sbb
stos
nopl
insl
scas
pop
je
sbb
loopne
cmpsl
mov
xchg
mov
push
sbb
stc
imul
