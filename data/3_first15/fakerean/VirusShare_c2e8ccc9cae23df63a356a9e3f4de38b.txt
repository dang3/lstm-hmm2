sbb
add
mov
xchg
fcoml
leave
imul
nop
lods
and
cmp
imul
pop
adc
fists
or
scas
insl
push
push
daa
mov
sub
pop
cmp
sub
jae
imul
fnstenv
push
lret
xlat
sub
ljmp
fcmovu
ljmp
sub
sbb
das
test
lss
mov
sbb
fistpll
jbe
sub
jns
inc
gs
addr16
push
add
jae
pop
stos
mov
loopne,pn
pop
sub
je
mov
iret
cmp
cmp
or
sub
xor
jg
inc
lods
mov
and
xorb
scas
xchg
or
xchg
shll
xor
inc
dec
mov
mov
jb
aad
xor
push
pop
stc
dec
ss
add
stos
push
mov
and
addr16
test
adc
ja
dec
addb
cld
push
mov
hlt
dec
fnstsw
sub
dec
rcrb
dec
in
inc
ffreep
dec
std
mov
sbb
xor
imul
xor
mov
imul
jg
jg,pn
loopne
movsl
sbb
pop
mov
fs
shr
push
dec
mov
orl
and
test
xor
xor
loope
sbb
ljmp
mov
mov
xchg
repnz
mov
fiadds
jne
subl
pop
lds
dec
iret
jg
xor
push
shlb
mov
enter
push
adc
cmp
daa
xchg
test
mov
inc
dec
push
jmp
pop
pop
leave
shrl
dec
xor
stos
out
inc
mov
andb
or
push
xchg
pop
shll
popa
std
popa
sub
fwait
sbbb
inc
mov
xchg
or
sbb
mov
xor
cmp
ss
cld
sub
insb
dec
mov
sbb
inc
jl
inc
adc
sbb
mov
out
adc
lods
shrl
fmuls
sbb
add
or
call
jg
push
aad
insb
mov
test
push
imulb
ret
aas
frstor
add
les
mov
fwait
jmp
test
push
xchg
xchg
aas
pop
jb
dec
push
jbe
and
cmpsl
jecxz
or
fwait
push
xor
lahf
xchg
dec
jns
decb
mov
ljmp
push
nop
in
fildl
add
push
cmpsl
cmp
xor
pusha
das
dec
cld
movsb
pop
pop
mov
cmpsl
out
sub
fcmove
mov
lahf
mov
jle
scas
faddl
fcmovu
in
dec
inc
rclb
cmpsb
bound
sub
shl
shll
sti
sub
jnp
or
xchg
sbb
pop
ljmp
shlb
dec
inc
xor
insl
or
sbb
rcll
pop
cltd
dec
int
loop
test
pop
xchg
in
cmc
lock
xlat
push
jno
pop
push
xor
fstpt
shlb
into
adcb
jmp
jo
xchg
jmp
push
mov
andb
sbb
or
sbb
hlt
lret
orb
test
cmc
imul
adc
jo
push
ret
loopne
notl
ds
rorl
add
and
mov
jns
daa
xor
jmp
jb
mov
xor
add
jo
cs
aas
adc
aaa
lret
rcll
push
jge
outsb
mov
sbb
aam
adc
test
cs
xor
and
xchg
sbb
inc
decb
dec
mov
pop
fs
in
loop
imul
jg
stos
enter
out
sbb
fdivl
rcrl
push
ficoml
fadds
jp
subl
jg
inc
ret
cmp
xor
xor
sahf
stos
jle
es
mov
push
sub
pop
xor
dec
mov
xor
inc
jne
imul
xor
hlt
mov
aad
gs
fsts
rcrl
and
sub
xchg
mov
daa
and
ficoms
call
std
xchg
lret
mov
xchg
lahf
pop
frstor
xor
movsl
mov
fiadds
push
cmpsb
mov
lea
icebp
cltd
push
mov
fdivl
cmc
popf
add
cmp
es
mov
adc
stos
in
shrl
jg
push
ret
sub
cltd
movsb
xchg
arpl
dec
mov
stos
mov
lods
mov
sarb
cmp
xchg
mov
gs
scas
mov
jg
or
cld
fst
hlt
stc
int
jecxz
add
and
movsb
int3
rorl
mov
mov
sbb
idiv
ljmp
ljmp
push
ja
movsb
cmp
cwtl
stos
aas
jae
mov
sarb
ja
call
nop
pop
daa
xlat
iret
pmaddwd
test
fdivl
cmp
scas
inc
pop
cs
xor
xor
add
cmp
lods
xor
pop
push
test
aas
or
out
rolb
adc
adc
cs
movl
test
push
shl
repnz
in
mov
push
iret
sub
mov
or
mov
mov
pop
mov
ret
idivl
pop
je
mov
fisttps
loopne
jmp
frstor
fwait
idiv
pusha
mov
outsl
jnp
mov
mov
aad
mov
rcl
push
xchg
ret
mov
xor
adc
mov
sbbl
xor
or
inc
into
mov
push
movb
cmp
push
and
pop
cmp
popf
jnp
fidivl
mov
in
inc
out
lret
and
pop
cmp
test
xchg
mov
push
cmpsb
mov
mov
scas
xchg
test
dec
mov
loope
mov
fdivrl
not
mov
add
xor
cmpsb
push
cmpl
fs
fcomps
bound
mov
jg
imul
mov
add
popa
mov
loope
fcoml
xchg
mov
and
xor
in
mov
cmp
pop
jl
fisubs
and
bnd
in
inc
loope
or
in
jp
pop
les
rcrb
sub
sbb
mov
mov
dec
sbb
notb
mov
add
lcall
sbb
cmpsb
add
mov
cmpsl
sub
push
sbb
mov
mov
cmp
cmp
mov
cmpsl
mov
xchg
scas
jno
push
dec
scas
inc
ds
ds
mov
push
xor
pop
cmp
jae
jns
mov
stc
gs
mov
xor
fldl
movsl
lods
jne
dec
fisttpll
jb
mov
inc
xrelease
mov
mov
ficomps
cmp
xchg
repnz
dec
in
shll
cli
lock
sbb
mov
addr16
mov
out
xchg
ret
or
sti
loope
in
pop
push
mov
insl
pop
xchg
dec
in
ljmp
sbb
jns
fcompl
lea
cmc
movsb
and
push
icebp
sub
push
xchg
mov
cmp
cmp
push
ss
stos
test
fildl
mov
or
addr16
lahf
cmp
js
jno
enter
jno
adc
popf
popa
clc
enter
mov
in
push
icebp
shrb
nop
adc
mov
cmp
sub
data16
rcrl
push
es
jecxz
stos
dec
mov
mov
stos
xor
fcoml
test
pop
addb
imul
jl
enter
idivl
jne
fbstp
ljmp
dec
fnstsw
push
pop
mov
clc
xor
imul
sub
pop
dec
jp
dec
mov
or
in
inc
lods
adcl
fisubrs
xchg
cmc
aam
sub
outsl
cwtl
sub
outsb
int
pop
ds
push
mov
mov
sub
mov
mov
pop
sahf
das
lods
fmuls
xchg
ret
aam
jg
ret
sub
cmp
test
jns
out
mov
add
lcall
adc
dec
or
lea
ds
lds
mov
xchg
pop
fdivrp
inc
ficomps
jp
push
gs
sti
pop
dec
jecxz
movb
ss
std
cmp
ljmp
push
xor
pushf
push
mov
cld
sarb
inc
movsl
int
aad
xchg
sub
push
or
sbb
loop
and
nop
mov
imul
clc
xchg
dec
ss
xor
sbb
shl
imul
into
shrb
sbb
out
loopne
sbb
jbe
rcrl
xor
push
push
xchg
and
aad
in
xor
xor
scas
lock
mov
push
xor
ds
lahf
lods
xchg
iret
daa
lea
push
mov
lea
test
add
lretw
or
inc
pop
mov
fistpll
mov
rorl
push
and
iret
adc
inc
sub
repnz
sub
inc
jae
adcl
sahf
je
push
xchg
cli
mov
lods
fwait
push
dec
mov
lret
push
lret
mov
push
jmp
mov
xchg
not
cmp
mov
or
mov
clc
ret
jmp
out
mov
data16
jp
popw
sbb
pop
inc
mov
sub
sbb
das
cld
lods
jecxz
les
push
push
and
add
xor
xor
aad
dec
xchg
mov
sub
mov
out
cmp
jo
add
imul
scas
pushf
into
scas
sub
test
rcrb
mov
inc
scas
ret
mov
xor
mov
and
xchg
push
sub
push
lods
adc
mov
sub
sbb
sahf
cmp
sub
xor
leave
sar
dec
pop
sbb
adc
orb
push
jo
int
xor
or
mov
daa
jns
int
leave
mov
insb
add
popa
outsl
popa
jbe
pop
cltd
pop
ds
push
push
cmpb
xchg
pop
stos
lods
push
adc
insb
cmpsb
daa
aas
xor
jnp
push
jo
aaa
or
or
dec
lods
jne
cmp
mov
sahf
clc
dec
fwait
cmp
shlb
test
shrl
ljmp
add
enter
neg
cs
js
jmp
or
pop
xor
enter
lods
out
clc
lret
pop
mov
insb
push
and
xor
aas
cmp
push
pusha
popf
inc
shlb
mov
mov
cmp
xchg
push
pushf
dec
mov
mov
cltd
mov
out
jbe
ss
adc
pop
xchg
lock
add
mov
ss
pop
dec
xlat
pop
dec
push
inc
loopne
sbb
aaa
xchg
mov
enter
pop
out
push
fstpl
cld
cmp
sbb
pop
xor
bound
icebp
xchg
js
jnp
adc
mov
scas
inc
dec
fwait
mov
jnp
push
and
xor
sbb
icebp
pop
jne
adc
sbb
sub
jnp
outsb
fistl
das
sub
push
pushf
stos
xchg
mov
pop
pop
nop
fdivs
movl
std
stos
push
ljmp
mov
jecxz
dec
lods
jmp
test
stos
mov
arpl
sbb
pusha
cmp
aam
popf
int
movsl
loope
movsl
aas
xchg
loope
mov
mov
cmpsb
mov
push
pop
mov
cmp
jae
mov
test
mov
pushf
scas
mov
jnp
stos
xor
sbbb
sub
cli
xchg
jge
add
xchg
std
sub
lcall
dec
push
into
shrl
or
adc
push
push
hlt
adc
sub
es
in
add
cmpsl
hlt
adc
xchg
or
mov
mov
subb
in
cmc
test
in
ljmp
imul
fwait
dec
das
inc
jp
inc
and
add
jg
mov
lcall
ljmp
jno
imul
and
clc
mov
push
rcrb
jne
jp
inc
rolb
adc
lcall
adc
dec
dec
mov
fisubs
divb
inc
in
adc
push
adc
cmp
hlt
jnp
subb
fildl
mov
cmp
inc
jg
adc
cmc
popa
cmc
scas
fcmovne
aaa
mov
sbb
jg
or
hlt
dec
in
adc
mov
jo
test
es
mov
xchg
adc
repnz
push
xchg
les
inc
shll
dec
xchg
push
test
hlt
push
and
pop
rcll
push
lock
lea
adc
cmp
sbb
inc
xchg
pop
clc
adc
out
jae
dec
xor
stos
cmpsl
fbstp
sub
cs
push
pop
call
outsl
dec
pop
xchg
jl
aaa
jnp
sbb
sbb
xchg
push
gs
ss
pop
jecxz
jbe
mov
sub
nop
arpl
fwait
sub
repz
add
jno
dec
add
xor
arpl
dec
and
pop
push
pop
int
enter
adc
push
inc
mov
inc
dec
int
jnp
js
push
cli
mov
aas
es
lret
xchg
and
jno
push
nop
movsb
jo
outsb
out
in
fucomip
xchg
bound
mov
inc
insl
or
and
xchg
and
repz
punpcklbw
jl
pop
clc
in
rcrl
jbe
push
arpl
pop
lods
aam
add
mov
mov
add
subl
xor
sub
mov
lock
mov
mov
adc
pop
sbb
insb
addr16
mov
push
ja
arpl
mov
mov
jle
stos
add
lahf
xlat
popf
outsb
aas
lods
cmpsb
jl
das
fists
ja
xchg
mov
fstpt
and
cmp
shll
mov
cwtl
push
sub
or
jmp
push
movsb
cli
pusha
in
and
mull
sarb
push
sub
mov
faddl
dec
xchg
lods
push
imul
dec
xchg
cmp
pop
xor
out
pop
jl
xchg
xor
pop
loopne
faddl
lahf
dec
es
push
loop
loop
loopne
dec
push
movsl
jl
ret
cltd
addr16
pop
jp
dec
jo
jmp
andl
and
push
xor
xchg
add
daa
lods
sti
cmpb
movsb
jbe
addl
mov
mov
pop
mov
jns
cli
xor
cmp
add
xchg
loop
jae
jecxz
ficomps
mov
mov
clc
xchg
int
mov
pushf
test
mov
mov
in
jo
dec
pop
fiaddl
in
mov
popf
add
pop
lret
scas
push
add
pop
inc
mov
imul
inc
adc
jg
subb
aam
pop
pop
sti
adc
xor
int
adc
jg
jmp
mov
iret
je
loop
jbe
pop
in
jnp
sbb
ja
push
pop
push
push
icebp
sbb
pop
or
movsl
jmp
sbb
pop
aas
cs
bound
iret
mov
adc
movsb
cmp
stc
mov
fmul
and
jge
ds
push
in
mov
sub
outsl
into
scas
sub
add
popa
xor
push
std
add
insb
cmp
sarl
pop
adc
lods
sbb
aam
xor
and
fs
and
lods
scas
cmp
pop
push
jmp
icebp
dec
jnp
cwtl
add
dec
mov
hlt
xchg
inc
aaa
push
add
pop
into
lret
pop
mov
adc
mov
mov
mov
push
aaa
sub
add
loope
outsl
jmp
push
adc
xchg
push
into
test
sub
lds
pop
mov
and
scas
lds
lods
cwtl
imull
ljmp
loop
cltd
sar
into
gs
out
dec
mov
mov
cmpsb
xchg
mov
mov
jbe
pop
bound
fndisi(8087
fstp
inc
inc
push
ja
xchg
and
lcall
sti
enter
mov
adc
leave
data16
sub
adc
add
incb
jg
mov
cmp
out
mov
and
lret
dec
pop
push
jno
call
sub
js
test
testl
aad
push
xchg
cmp
stc
mov
in
add
xor
mov
loop
lods
sub
pushf
jge
shrl
jl
sub
arpl
sbb
cltd
adc
jge
xchg
inc
test
or
out
or
xlat
jge
mov
dec
push
xchg
in
repz
mov
sub
and
xchg
add
dec
or
sbb
mov
mov
sahf
push
ljmp
xor
arpl
int3
push
daa
inc
outsb
push
dec
aad
push
mov
daa
push
dec
shr
jns
jmp
pop
or
mov
lods
mov
iret
sbb
cmp
arpl
and
xor
or
jbe
nop
dec
daa
mov
push
xor
pop
pop
pop
add
inc
movl
and
lahf
stc
test
xlat
or
fstpt
scas
mov
mov
test
rolb
mov
add
daa
imulb
test
stc
pop
mov
sub
jp
hlt
xor
lea
das
cwtl
sub
setge
lret
pop
dec
in
lret
insb
mov
cltd
xchg
in
mov
pop
jns
mulb
push
ficoms
test
cld
outsl
and
jmp
fimull
loop
adc
sti
pop
std
mov
adc
in
push
and
sbbb
leave
sbb
bts
out
das
pop
add
out
outsl
xchg
mov
jg
sub
das
or
sub
into
iret
push
mov
arpl
pop
fisttps
and
pusha
and
xor
lcall
xlat
dec
pop
push
fucomi
dec
xor
jmp
int
int3
jecxz
cmc
fdivs
jg
xchg
dec
pop
pop
mov
push
mov
ljmp
gs
shl
add
jo
hlt
bound
or
into
sbb
fdivrs
enter
add
jbe
incb
mov
jle
insb
cmp
mov
xor
cmp
sar
push
inc
mov
add
gs
xlat
aaa
lods
push
pop
cs
lods
xchg
xchg
push
mov
insl
andb
xor
lods
push
mov
xchg
xor
sub
fldl
and
mov
mov
outsb
inc
jg
out
adc
cmp
leave
icebp
mov
mov
push
lods
dec
stc
xor
jnp
shrb
jnp
dec
push
test
cmp
movsb
insb
jle
xlat
jb
sbb
mov
or
inc
lea
lcall
dec
inc
xor
data16
adc
dec
mov
lcall
jns
pop
stos
and
pop
lds
iret
cltd
das
or
cld
adc
popa
ficoml
sub
ret
stos
push
pop
jg
mov
xchg
xchg
push
sbb
frstor
pop
cmp
js
and
fistpl
xor
jae
popf
dec
scas
sub
adc
jae
mov
pop
push
rolb
stos
mov
adc
pop
popa
dec
fcoms
push
xor
add
lea
arpl
data16
dec
pusha
push
xlat
mov
lock
movb
cltd
loope
fs
aad
dec
insb
xchg
clc
sbb
popf
repnz
aam
inc
insb
repnz
pushf
dec
and
adc
sub
fsubrs
inc
and
movsl
dec
mov
hlt
inc
mov
dec
jne
push
test
jb
and
jl
mov
add
cmc
aam
and
into
jmp
fimull
and
insl
cwtl
xor
mulb
adc
and
cwtl
js
sub
cmpl
sbb
jae
addb
loopne
xor
push
data16
ret
js
nop
adc
lcall
mov
or
lahf
and
cmp
adc
clc
cmc
jns
xor
shufps
je
push
dec
xchg
rcrl
negl
mov
cs
outsw
sbb
nop
jecxz
mov
xor
jmp
loopne
jmp
jg
cmp
idivl
mov
sti
push
lret
xchg
xor
push
mov
test
nop
shll
test
or
cltd
mov
fdivrp
sub
shrb
dec
adc
xor
mov
adc
les
mov
xor
dec
cld
shrl
fcompl
into
or
aaa
dec
das
divb
int
or
insl
jns
out
ret
mov
sub
cmpb
shlb
mov
mov
inc
in
test
mov
inc
lcall
rolb
sbb
dec
lock
mov
clc
cmp
cmp
stos
fmull
sub
jb
mov
sbb
push
adc
sbb
enter
mov
insl
hlt
sub
stc
ljmp
lods
outsl
mov
es
jb
cs
mov
inc
in
jae
out
pop
cmc
rclb
cs
xchg
out
rol
xchg
push
push
adc
ss
pop
sahf
add
push
xlat
mov
sahf
push
cmpsb
lret
pop
insl
insl
sahf
icebp
aas
jmp
pop
jge
xchg
cs
push
push
inc
mov
mov
leave
dec
mov
enter
rorb
test
jbe
sar
insb
sub
imul
push
stc
lods
xor
js
nop
orl
dec
inc
adc
out
je
pop
loopne
mov
test
incb
sbb
mov
cwtl
sbb
cmp
sbb
add
aaa
pop
xchg
lahf
into
rclb
xorl
or
jns
mov
dec
imul
xor
sti
loope
mov
dec
repnz
stc
sub
lds
int3
mov
cmpsl
pop
out
mov
add
lahf
inc
fwait
shl
mov
dec
dec
sbb
out
push
adc
outsb
fnstsw
inc
lock
pop
out
mov
enter
aam
dec
pop
and
es
faddl
inc
inc
add
xchg
push
xchg
inc
jg
xor
or
and
in
nop
jo
sti
movsb
and
fsubp
cmp
adc
hlt
sub
ret
cmc
sbb
inc
out
sbb
divb
mov
sbb
test
xorb
cmpl
xor
mov
inc
subb
cmpsb
das
data16
in
xor
sub
fdivrl
lods
out
xor
mov
jno
int3
mov
jmp
inc
sbb
nop
push
push
xor
lods
adc
jne
inc
imul
or
mov
out
imul
lods
inc
sbb
dec
pop
and
cmp
or
jge
stos
mov
rol
sti
jg
jnp
and
and
sub
push
in
sub
jnp
sbb
sti
lcall
jle
pop
aas
mov
sbb
cmpsb
jle
push
cmp
cmp
sbb
mov
lds
daa
adc
sbb
popf
sar
jbe
xor
in
xchg
xchg
cld
es
shlb
lret
in
outsb
out
sbbb
adc
push
repnz
in
pop
cwtl
pusha
jo
ljmp
fidivl
inc
or
inc
out
sub
movsb
andl
xor
sub
cmp
out
pushf
lahf
jbe
lret
inc
sti
sarl
fs
js
scas
add
decl
or
pop
xchg
sub
push
test
fbstp
pop
testb
jnp
inc
jmp
adc
jp
jp
or
sbbl
inc
inc
sub
mov
out
stc
inc
pop
fisttpll
into
dec
addb
sub
xchg
mov
movsl
mov
ljmp
inc
out
xchg
sbb
negl
outsl
imul
test
xor
cmp
aam
std
cli
test
adc
ja
arpl
movsb
xor
into
jecxz
sub
mov
push
xor
push
mov
pop
jns
mov
cmpb
mov
lods
mov
loop
xchg
call
dec
lock
fldenv
pop
out
icebp
or
enter
and
dec
jbe
jg
xlat
mov
sbb
aad
ja
insb
imul
ss
sub
mov
sub
addr16
es
push
loop
int
add
test
mov
push
lds
rcr
mov
inc
xchg
add
cwtl
cmpsb
stos
xchg
sbb
push
fsts
mov
repz
loope
fnstcw
clc
cmp
xor
sahf
jg
insb
ss
movsl
cmpsl
nop
xchg
add
push
scas
test
jbe
pop
scas
ret
mov
push
pop
lods
mov
out
jb
ljmp
repnz
inc
and
mov
jb
in
cmp
jle
icebp
xor
jo
outsl
fwait
mov
jbe
pushf
popa
je
mov
add
pop
sbb
ljmp
mov
lret
mov
popa
loope
in
addr16
cmp
fs
popa
jne
mov
add
add
jp
test
test
adc
xor
movsl
xchg
mov
outsb
and
hlt
xchg
mov
in
sub
sbb
sarl
xchg
adc
jnp
out
test
mov
mov
dec
inc
push
cmp
add
push
jne
out
inc
orw
fstpl
push
pop
aaa
lock
ss
jmp
dec
cmp
test
fwait
inc
gs
loop
sti
xchg
sbb
andl
cmp
test
inc
leave
push
stos
pop
mov
adc
aaa
cmp
xlat
dec
jbe
xor
sbb
in
stos
cmp
push
ja
out
sub
pop
repz
ja
mov
repz
sar
adc
bnd
jecxz
sbb
repz
xchg
test
fnsave
sbb
cmpsb
gs
mov
mov
test
mov
sbb
lods
add
push
sub
mov
es
icebp
stos
test
movsl
fistps
jp
add
loop
mov
lds
add
pop
movsb
loopne
leave
fs
jge
incl
notb
cmp
aam
pop
mov
addb
jae
je
xchg
jmp
rorb
pop
leave
and
push
out
outsb
fidivrl
out
adc
xchg
pop
and
mov
rcrb
in
or
outsl
in
inc
jg
mov
mov
jge
and
pop
mov
jecxz
inc
dec
lret
lahf
mov
aam
mov
cld
outsl
ljmp
icebp
iret
xor
aad
leave
dec
aad
rol
outsb
loop
scas
jbe
stos
jae
pop
jb
or
adc
dec
inc
leave
aaa
mov
aam
jg
aaa
sbb
mov
and
nop
cmp
inc
xchg
dec
das
dec
in
aas
push
inc
ret
inc
mov
clc
push
jmp
cwtl
lds
or
sahf
inc
iret
cmc
or
sbb
int3
add
ljmp
add
push
mov
sub
pcmpeqd
or
enter
adc
insl
and
repz
pop
or
xchg
sub
imul
ret
dec
dec
push
movsb
dec
push
jl
mov
sub
inc
dec
bound
xor
add
gs
out
pop
sti
addr16
ja
stc
subb
push
adcb
shrb
jl
mov
cli
outsl
and
jnp
mov
aas
xor
mov
mov
arpl
xor
push
mov
ret
sub
daa
sub
shlb
mull
mov
mov
mov
data16
jne
xadd
push
mov
pop
push
adc
jmp
sti
mov
sbb
fwait
pop
mov
icebp
xchg
data16
cmc
sbb
push
cmpsl
stos
flds
sti
in
sub
jg
mov
cltd
pop
mov
nop
daa
or
jo
mov
lods
jl
push
or
shrb
jg
push
mov
outsl
cmpsb
fidivrs
repz
data16
js
bound
and
jge
adc
add
jmp
fadd
push
cmp
imul
dec
bnd
in
adc
int
fsubl
mov
clc
mov
pusha
push
cmpsl
out
sub
and
cmpsb
push
cmc
pop
pop
mov
mov
adc
sub
sub
mov
xchg
sub
dec
mov
mov
jg
xchg
xor
push
mov
jmp
pop
cmp
in
and
pop
test
push
mov
sub
aas
out
add
inc
push
sbb
inc
mov
xchg
fdivr
xlat
pop
inc
sub
scas
or
lret
add
dec
stos
xor
push
mov
insl
lock
mov
in
stos
out
push
outsl
ficomps
ret
sbb
or
lods
lahf
jbe
xor
inc
adc
out
idivb
add
jl
into
out
mov
bound
popf
rclb
dec
scas
mov
mov
xor
cmc
sub
mov
or
or
fnsave
test
ja
mov
cltd
cmp
das
jp
cmp
pop
or
cmc
std
das
mov
iret
mov
hlt
cmp
mov
and
aas
icebp
lret
xor
lcall
adc
inc
jbe
mov
jge
pop
insb
sub
popw
into
xchg
mov
push
mov
push
push
adc
jne
xlat
jne
aaa
and
xchg
mov
cmpsb
and
out
push
add
ja
push
aaa
iret
jmp
ficompl
cmp
and
xorl
aad
rorb
or
popa
mov
jno
push
lock
cwtl
inc
and
xchg
data16
outsb
push
mov
aad
mov
mov
adc
test
cmp
mov
aad
sarb
jmp
xchg
sti
mov
mov
pusha
int3
imul
mov
xor
xor
orps
in
test
imull
fisubl
pop
jno
lds
leave
xchg
fisubl
push
in
inc
out
ds
push
jns
je
mov
int
ss
inc
dec
push
mov
push
out
stc
into
xchg
adc
mov
dec
push
adc
jae
pop
xorl
xor
testl
js
or
arpl
sbb
clc
aas
sahf
or
enter
jb
fiaddl
or
cmc
loopne
lret
shrl
dec
jne
mov
jb
mov
add
or
adc
repz
jno
or
adc
xor
jno
cmp
lock
mov
repnz
pop
dec
xor
adc
rol
add
cs
enter
lea
and
mov
push
hlt
popa
repnz
xchg
test
mov
dec
and
pushf
imul
sbb
cmp
loop
mov
xor
add
enter
adc
or
sub
inc
mov
mov
xchg
lea
jecxz
ja
jmp
push
lock
add
jbe
sti
out
in
mov
and
mov
and
hlt
sbb
adc
inc
push
inc
mov
daa
cwtl
pop
pop
jle
xchg
popa
aad
dec
into
adcl
out
push
xchg
mov
sub
enter
js
add
mov
push
mov
inc
scas
enter
out
mov
jnp
scas
jge
or
iret
repnz
cwtl
push
mov
jmp
cmc
inc
and
and
inc
mov
pop
or
sub
test
xor
mov
mov
mov
sbb
outsl
aaa
das
ret
xchg
dec
mov
push
inc
out
jb
stos
int
pop
sbb
mov
mov
lods
sahf
fcoms
sahf
and
imul
sub
mov
movsb
notl
push
mov
and
hlt
pop
jae
cmp
xor
test
inc
jbe
cwtl
mov
jmp
negl
xor
xor
aam
js
sbb
adc
ss
loopne
push
es
jnp
add
sbb
dec
mul
fstps
aas
flds
orb
arpl
xchg
subb
sbb
cmpl
inc
bound
dec
dec
mov
imul
je
cmp
sub
inc
shlb
mov
in
xor
inc
mov
sbb
out
cwtl
pop
mov
xchg
outsb
popl
sub
mov
dec
jno
fninit
or
sti
enter
inc
fsubl
imul
es
push
cmp
or
sub
test
inc
push
mov
sbb
dec
push
outsb
iret
xor
xor
cmp
movb
cltd
xchg
sbb
les
fisubs
adc
adc
fs
fstps
jl
push
lock
sbb
xchg
lcall
and
insl
pop
push
jmp
mov
test
arpl
mov
push
lcall
jno
repnz
adc
mov
in
xchg
sbb
cmp
aam
cmp
scas
jge
mov
add
sbb
filds
cmp
out
test
xchg
inc
inc
leave
in
ror
dec
mov
test
popf
mov
push
dec
lahf
push
jb
int3
hlt
stos
xchg
mov
imul
mov
sbb
or
xchg
icebp
sub
jns
outsb
sbb
push
into
dec
in
add
mov
add
jns
push
add
cmpl
xchg
nop
rcr
push
popa
rolb
scas
dec
mov
addr16
gs
into
fisttps
mov
dec
insl
fcoml
dec
push
loop
push
lret
scas
mov
xor
ja
repz
jp
mov
mov
or
sbb
sbb
iret
leave
jo
repz
mov
bound
por
xchg
mov
lods
mov
repnz
mov
int3
jnp
inc
fucomp
fwait
mov
cmc
or
add
jo
push
mov
inc
lahf
out
mov
add
es
fwait
scas
hlt
idiv
ret
call
sub
fs
pop
cmp
sub
push
mov
mov
in
rcl
movsl
inc
and
outsl
sub
incb
lret
mov
mov
xor
repz
outsl
jno
mov
jle
aas
mov
adc
decl
jne
pop
in
dec
loop
test
bound
cmp
and
out
popl
call
cmpb
sub
pop
jnp
repnz
jl
mov
rolb
mov
sbb
jmp
fildll
xchg
movsb
sbb
into
popa
orl
js
test
imul
pop
int3
inc
push
imul
leave
scas
ljmp
push
in
push
dec
ds
jbe
cmp
push
or
adc
incb
jmp
jae
arpl
hlt
pcmpgtw
xchg
xchg
mov
xor
lock
ds
into
and
pop
lret
pop
jl
pop
sub
hlt
jg
xchg
mov
hlt
pop
add
and
mov
or
negl
jle
adc
jb
push
push
jg
mov
mov
xor
fistl
rclb
leave
mov
in
outsl
daa
sbb
xlat
push
lret
in
cmp
in
arpl
and
adc
dec
enter
les
xor
arpl
push
ja
xchg
push
ret
dec
push
lea
and
mov
fmulp
pop
cmp
aam
pop
aas
pusha
das
jge
jno
or
and
dec
mov
fcomps
pop
jl
or
add
xchg
out
push
mov
ret
pop
jns
int
in
jnp
xor
je
add
adc
hlt
lods
dec
ja
daa
cmpsb
enter
mov
mov
pop
outsb
push
mov
and
adc
in
xlat
arpl
jb
fmul
lods
inc
cmpsl
stc
cmpsl
arpl
xchg
rorl
jmp
and
cmp
jl
xchg
adc
xor
fmul
add
xchg
fistpl
cmpsb
fcoms
lret
push
xchg
loope
jmp
pop
lds
push
xor
mov
inc
jg
push
insb
add
lret
lock
out
lret
mov
or
je
xchg
cmp
cld
dec
mov
outsl
and
in
jnp
faddl
loop
xchg
and
test
aad
mov
imul
cmpsl
fdivs
pusha
xchg
mov
test
jle
loopne
add
fldl
mov
add
add
je
nop
test
hlt
js
mov
push
fcomps
imul
mov
mov
fstps
out
addps
adc
push
je
dec
push
pushf
aam
cs
jnp
ds
add
paddd
xor
popl
adc
adc
jbe
add
pop
sbb
fdiv
jg
mov
xor
sbb
aad
push
daa
jecxz
and
ficoms
sbb
mov
lds
jp
mov
in
sti
push
sahf
pop
jl
pushf
in
addr16
sbb
cmpsl
push
or
jnp
popf
bound
jl
pusha
in
ss
cs
mov
push
gs
inc
mov
sti
mov
inc
es
jne
jle
cli
insl
fwait
loopne
andl
push
loop
fs
idivl
cmp
mov
lret
scas
into
cltd
mov
push
and
and
push
ds
cs
add
sub
int
leave
test
xchg
shll
lods
push
mov
movb
add
jmp
shrb
sarb
or
shrl
mov
pop
pop
dec
sbb
lahf
in
and
sbb
cmp
or
cmpsl
inc
icebp
fldl
repz
lds
fstl
push
out
jecxz
fisubl
sbb
pop
pop
xchg
xor
push
in
test
xor
sti
fisttpll
and
lcall
and
sbb
inc
mov
xor
xor
scas
push
jge
lret
cmc
jb
lods
aam
inc
push
mov
push
sub
mov
pop
sahf
xchg
idiv
mov
jbe
xor
outsl
ss
insl
scas
push
xchg
cs
inc
cld
out
xor
pop
and
push
sahf
cmpsb
hlt
orl
or
jno
pop
add
dec
inc
inc
jl
aad
inc
mov
cmp
cmp
jbe
scas
push
test
sub
sarb
xorb
jge
enter
or
shrb
ja
pusha
bound
mov
dec
out
nop
inc
and
jae
loop
data16
xor
jl
aaa
inc
jae
sub
loop
inc
pop
jo
ljmp
out
cli
sbb
jne
scas
mov
testl
into
insb
or
imul
jo
push
rorb
lcall
mov
mov
push
lahf
xchg
out
testb
ret
push
ds
jl
sub
sbb
dec
shll
sbb
mov
das
ret
cmpsl
add
shrl
ljmp
mov
mov
xchg
mov
movsb
dec
mov
dec
hlt
cli
pop
fnstcw
je
jmp
sub
mov
js
cs
mov
inc
mov
and
jmp
xor
push
lret
jb
int3
pop
fwait
inc
lds
xor
sbb
aas
fiadds
sub
test
push
in
call
sarl
mov
xor
pop
sbb
movsb
idiv
aam
dec
push
mov
cli
bound
pop
or
in
sub
gs
jbe
enter
xor
enter
sub
sti
sbb
fcomps
scas
pop
ret
push
fwait
cltd
push
outsl
inc
addr16
sbb
inc
mov
rolb
ss
sub
stc
sbb
stos
adc
fcmovne
push
xor
les
aam
shrl
pop
dec
fwait
and
xor
push
mov
lods
sbbl
pop
mov
mov
sbb
push
mov
jmp
sub
adc
push
inc
xchg
rcrl
push
lret
pushf
arpl
int3
jp
sub
shrb
mov
dec
and
xor
cld
mov
ret
jle
ret
pushf
outsl
aad
lods
and
jns
paddq
adc
xchg
ljmp
or
push
jecxz
or
in
subl
ret
imull
adc
cbtw
mov
sbb
cld
stos
data16
xchg
jge
adc
adc
cmpb
in
mov
int
and
not
filds
pop
aad
outsl
test
pop
xchg
out
sbb
cmp
jo
sbb
or
cmp
into
sti
push
cmpsl
decb
sahf
jg
xlat
inc
inc
inc
pop
fdivrl
into
into
pop
add
lret
gs
inc
lds
xchg
js
das
mov
push
dec
jmp
out
and
imul
push
jnp
mov
cmp
dec
push
lods
inc
aam
xor
sub
mov
xchg
mov
pop
cld
ret
inc
inc
ljmp
pusha
mov
jmp
lds
mov
lock
negb
jl
in
mov
enter
stc
push
xor
shrl
sbb
inc
xchg
push
les
and
mov
fwait
movsb
inc
insb
push
out
cltd
jp
in
xor
in
lahf
cltd
lahf
arpl
jno
xchg
inc
xor
push
or
lret
jnp
mov
jb
sbb
fimuls
cmp
test
out
mov
cmp
mov
dec
adc
xchg
fdivrs
mul
mov
xchg
movsl
jb
mov
cwtl
lods
daa
and
mov
andl
arpl
lcall
cltd
sar
rcll
push
loopne
jle
fbstp
sbb
push
add
mov
sti
add
xchg
mov
aam
div
inc
addr16
xorl
sbb
push
dec
js
mov
adc
sub
test
jle
ret
test
mov
mov
fmuls
clc
mov
jge
aaa
inc
mov
popa
nop
push
and
xchg
sub
xchg
gs
cmp
jmp
cmp
push
cmp
jbe
rorb
outsl
mov
sahf
sbb
sub
stos
xorb
ljmp
sahf
pop
mov
inc
inc
shrl
inc
inc
stos
dec
add
movsl
xlat
pop
xchg
out
xlat
das
push
enter
xor
sar
jle
xchg
and
and
inc
fdivl
scas
test
cmp
sub
inc
imul
inc
cmpsb
mov
dec
js
xor
sub
ss
inc
push
popf
add
sub
cmpsl
or
cmp
out
sbb
mov
ror
pop
movsl
add
clc
out
mov
cmpsl
pop
stos
pop
or
aas
push
pop
cmp
popl
or
push
and
jecxz
and
dec
and
xchg
cli
aas
lahf
sub
lods
mov
sbb
loope
in
je
sbb
jge
mov
sahf
aaa
mov
cmp
pop
add
test
ja
or
iret
enter
adc
scas
fdivrs
add
stos
shrl
xor
jo
punpcklbw
mov
lods
aaa
mov
and
pushf
in
push
inc
mov
xchg
aas
loopne
xor
subb
push
xor
rcrb
jb,pt
add
mov
cmp
adc
repz
mov
mov
xchg
and
not
sub
cwtl
xchg
xor
sub
ret
aad
test
sub
dec
sbb
mov
test
lds
xchg
mov
mov
mov
mov
or
push
pop
cltd
cli
out
add
inc
cmp
pop
outsb
or
lock
jge
cltd
aas
push
push
cld
mov
xchg
jns
ss
into
jno
adc
xor
push
jg
fucomi
and
flds
sbb
push
jo
dec
loop
ljmp
push
movsb
lea
add
shlb
adc
jg
loope
mov
or
dec
ljmp
add
negb
test
push
inc
int
std
and
icebp
add
jl
jmp
jp
sub
ss
sahf
dec
sbb
add
fcom
pop
sbb
movb
stos
test
mov
shlb
dec
cmpl
shrl
sub
xor
lods
adc
push
pushf
pushf
push
pop
sti
addr16
inc
pop
pop
and
xchg
adc
push
mov
mov
dec
push
cmp
arpl
xchg
and
arpl
lock
fwait
mov
lahf
add
ret
adc
nop
cmp
push
sbb
out
and
xor
in
aas
pop
in
mov
jmp
pop
xor
adcl
pop
mov
cmp
inc
sub
jl
repnz
add
jl
imul
xchg
jnp
cmp
push
inc
testl
sbb
and
fsub
inc
daa
bound
and
cmp
cmpb
and
mov
mov
repnz
cs
addr16
pop
adc
inc
movsl
sub
scas
inc
data16
mov
cmpsl
lret
test
cltd
adc
cmp
sti
cmpsb
push
aas
xchg
mov
roll
aaa
ret
cmpsb
sbb
stos
loope
xor
sbb
mov
push
xchg
das
pop
out
mov
out
fadd
hlt
push
fisttps
sub
add
mov
pavgb
rcll
out
push
out
leave
pop
dec
and
sbb
lods
push
sub
xchg
imul
mov
mov
adc
arpl
stos
dec
pop
push
test
test
mov
add
lock
lret
in
pop
mov
jle
sbb
xor
std
cmp
dec
push
sahf
in
adc
add
in
movsb
sub
pop
int
push
idiv
iret
pop
pop
pop
push
test
lods
rcrb
adc
xor
push
loope
mov
js
lret
inc
in
adc
rep
sub
out
and
add
imul
dec
fidivrl
pop
loope
xchg
fsts
fadd
cmp
xchg
xchg
lods
fwait
pop
gs
out
je
test
pop
xor
ja
leave
or
xchg
les
inc
lea
stc
sbb
mov
lahf
push
xchg
sti
pop
loope
daa
inc
xchg
sub
or
mov
and
push
nop
adc
or
or
mov
add
pop
ja
add
pop
sti
pop
jg
cmp
pop
int3
dec
mov
xor
xorl
popa
adc
push
js
jns
les
inc
or
jecxz
mov
push
subb
ficomps
das
inc
or
or
ja
add
sub
inc
js
iret
jne
mov
mov
jl
pop
and
out
inc
loopne
rcll
pop
adc
outsb
sti
imul
mov
adc
shl
xor
and
call
xchg
and
repz
cltd
jo
sarb
call
pushf
mov
int
cmp
xor
jne
leave
dec
add
sbb
jp
insl
fisubrl
pop
mov
or
push
addl
daa
int
jb
xchg
adc
cmp
push
adc
les
and
inc
daa
mov
pop
pop
stos
push
lods
out
loope
cmp
mov
jb
or
push
lahf
sub
data16
xlat
dec
sbb
test
frstpm(287
out
pop
aam
ss
andb
fbld
insb
orb
dec
add
mov
mov
mull
xor
add
add
dec
sbb
jmp
outsl
icebp
fs
cmp
and
dec
andps
cmpl
loopne
mov
mov
pushl
dec
fdivrs
ror
mov
pop
int3
lcall
fsubs
jle
jecxz
xor
scas
fidivrl
outsb
inc
ret
shrl
test
ret
xchg
xchg
mov
cltd
in
pop
outsl
out
pop
dec
rcrb
shrl
pop
outsl
sub
inc
add
jnp
jb
jp
cmp
int3
xchg
add
out
pop
xor
jmp
fdivs
cmp
xor
lds
jg
and
add
fs
call
add
sub
repz
add
je
outsl
and
cmp
ds
pandn
out
mov
dec
jge
fstl
mov
and
shrb
bndstx
stos
imul
pusha
test
push
push
cli
dec
jle
movsl
jle
push
mov
mov
idiv
fildll
add
out
pop
dec
push
sbb
scas
mov
cmp
sub
mov
nop
out
jl
data16
test
cmp
mov
inc
or
mov
mov
enter
add
add
fsubrl
mov
inc
push
pop
out
daa
jns
sub
mov
out
sarb
into
je
ja
dec
imul
loope
inc
call
xchg
rorl
mov
enter
inc
test
imul
pop
outsb
loop
fsts
mov
in
gs
xor
fldcw
cmp
andl
int
mov
pop
push
inc
cs
cmp
sbb
daa
ss
dec
pop
out
jle
ret
popf
popl
mov
clc
popa
js
shlb
notl
lret
mov
pop
cmp
clc
inc
std
adc
mov
out
mov
or
xor
dec
testl
xrelease
mov
push
inc
mov
test
mov
adc
and
jno
jmp
nop
push
add
sub
enter
es
das
cmp
xchg
xor
fidivs
jnp
xchg
jmp
ret
mov
mov
or
mov
mov
inc
or
sahf
xor
dec
xchg
mov
shll
fcomip
enter
gs
mov
add
and
js
leave
sbb
aad
xchg
pusha
inc
out
fdivs
push
ss
mov
push
scas
push
pop
pop
lcall
push
mov
ds
inc
cmp
stc
insl
jle
insb
popf
dec
js
leave
subl
cmc
aam
cmp
fimull
jmp
sbb
xchg
sub
push
ss
add
lea
fwait
sbb
repnz
fwait
sbb
and
vcvtps2pd
ret
rorb
mov
incb
es
imul
add
or
mov
push
xor
and
addr16
sarb
and
push
xchg
jne
dec
xlat
lock
sti
sbb
sub
rol
sub
adcb
dec
out
add
in
mov
jb
stos
push
lods
imul
adc
shll
add
and
push
mov
push
mov
xchg
pop
es
outsb
jb
mov
ja
test
lret
hlt
sahf
stos
push
aad
pop
pop
setno
jmp
scas
xor
cmp
jb
jbe
mov
fistps
cltd
cmp
pop
jg
aad
xor
or
enter
pop
addl
cmp
call
xchg
or
ss
fsubs
les
mov
jge
iret
lahf
incb
pop
push
roll
inc
lret
pop
mov
xlat
ss
lret
in
mov
imul
push
pop
mov
cli
iret
sub
cmc
negl
and
push
xchg
push
cli
dec
adc
jb
xchg
pop
inc
inc
pop
rol
sbb
adc
push
cmovs
jae
out
jge
outsl
inc
xchg
xor
add
sbb
sub
fimull
push
jne
idivb
loope
sar
mov
adcl
mov
xor
js
push
sub
das
cmpsl
mov
enter
jno
sub
ret
inc
mov
mov
pusha
fcomps
imul
out
dec
xchg
das
xor
mov
sub
icebp
and
cmp
mov
pushf
in
and
call
mov
je
dec
lock
push
cmp
mov
rcrl
push
mov
sbb
and
rcl
nop
push
adc
mov
rolb
hlt
movsl
mov
shr
and
ljmp
testb
mov
and
repnz
push
dec
mov
popa
mov
loope
leave
inc
ret
mov
mov
idivl
dec
out
enter
insb
pop
inc
daa
xchg
cmc
stos
sbb
cmp
out
xchg
sub
xlat
adc
adc
push
out
out
idiv
rorl
popf
dec
cmc
cmp
rcl
lret
xchg
fwait
jecxz
adc
ds
rcrl
leave
add
aad
fsubrs
stos
pop
inc
sbb
in
ss
dec
jne
cmp
insb
pop
sbb
addr16
sahf
jo
push
out
push
push
push
in
std
or
xchg
pop
inc
and
arpl
je
stc
pop
push
mov
mov
adc
cmp
gs
gs
jae
popa
popa
push
imul
sub
fists
xchg
lahf
and
mov
pop
jb
xchg
mov
daa
adc
test
lret
ret
das
or
and
jns
fistpll
cli
mov
int
add
xorl
sub
or
outsl
fwait
pop
repnz
cmp
xchg
mov
inc
and
cmp
jp
call
dec
je
fcomps
xor
les
fmuls
push
mov
add
push
in
out
jge
mov
dec
scas
adc
insb
inc
xlat
mov
xchg
cmpsl
inc
adc
pushf
repnz
dec
mov
adc
mov
icebp
xlat
aas
mov
insl
jecxz
sub
test
repz
mov
daa
mov
xchg
xchg
mov
mov
and
dec
or
push
xor
mov
ds
enter
mov
jbe
pop
adc
jne
xor
inc
mov
mov
cmpsl
aas
addr16
or
push
aam
insl
call
in
xchg
insl
ret
sbb
cmc
jae
repnz
ucomiss
sysexit
stc
mov
in
pop
mov
inc
movsb
popf
jl
and
jae
jl
adc
mov
add
call
aaa
or
jmp
in
cwtl
cli
dec
mov
lahf
dec
cmp
add
add
jae
jl
fldenv
inc
out
mov
pop
fiadds
cmp
xchg
cmp
popf
rolb
cmpsl
sbb
jmp
je
je
mov
jge
mov
loopne
jb
xlat
inc
insl
mov
pop
aaa
test
and
fsubrs
jle
xchg
adc
and
or
mov
sub
or
xchg
jl
pop
pop
inc
jle
push
hlt
xor
inc
mov
jno
pop
idivb
dec
push
dec
shr
inc
dec
decb
fidivs
int
pop
dec
mov
insl
arpl
jge
mov
sub
xchg
jbe
fdivl
stc
lcall
xchg
test
sahf
mov
ss
cmp
inc
lods
xchg
rcrl
inc
xchg
adc
rcrl
inc
pop
and
or
movsb
ljmp
push
push
cmpsb
cmc
xchg
mov
pop
test
clc
mov
inc
imul
sbb
fadds
jg
sub
movsl
sub
mov
lea
fucompp
clc
fidivs
and
addr16
inc
loopne
repz
je
and
and
xlat
jne
and
sub
pop
mov
pusha
adc
decl
pop
jno
in
and
into
xlat
loop
outsl
push
shlb
pop
test
pop
adc
or
jbe
sarb
inc
ret
sub
sbb
into
addr16
cmp
push
xor
hlt
xor
aad
inc
jmp
movsl
jle
cmp
adc
das
scas
sti
mov
push
or
add
scas
int
and
sbb
cli
test
sahf
mov
cmp
cmp
mov
cmp
cmp
mov
outsl
insb
hlt
jmp
int3
fcompl
sub
adc
aaa
in
xlat
xchg
pop
and
loopne
ret
add
pop
scas
cmp
or
stc
je
xchg
rol
pop
push
stc
stc
lea
adc
xor
data16
jecxz
jg
jnp
sub
repnz
add
pop
enter
mov
dec
lods
cltd
mov
test
pop
call
movsb
adc
push
lock
fldt
loope
fbld
pop
pusha
rcrl
pop
loope
sub
xor
lock
stc
dec
inc
testb
decl
int3
jno
rcrl
test
icebp
dec
ds
jmp
mov
inc
shr
rcrl
lods
sbb
mov
jb
int
push
loope
fildll
scas
inc
shrl
loopne
add
popa
leave
out
cli
xchg
icebp
inc
cmp
xor
adc
insb
js
and
push
sub
jbe
sbb
std
xchg
loop
inc
cmpsb
push
ds
int
dec
xchg
lods
call
lea
mov
mov
data16
inc
lret
scas
jmp
pushaw
xor
sbb
nop
jne
enter
ret
xor
je
sub
repnz
arpl
roll
dec
out
lds
mov
xor
stos
gs
clc
rolb
mov
mov
jmp
jns
in
sbb
add
imul
adc
shrb
arpl
and
loop
ret
inc
pushf
lret
repnz
inc
xchg
js
repz
mov
aaa
or
pop
sbb
pop
push
push
jecxz
xchg
aam
adc
repz
dec
jp
cli
daa
les
pop
dec
hlt
fildll
push
push
sub
mov
push
enter
fistpll
ja
push
loop
inc
roll
sbb
pop
jmp
pop
enter
inc
shlb
xor
xor
ljmp
sbb
ret
mov
rolb
sarb
sarl
jnp
push
or
cmp
loope,pt
xor
xor
and
push
repnz
xor
popf
lock
jo
fcomps
dec
arpl
xor
hlt
xor
push
xchg
mov
push
roll
bnd
sub
cmc
shrb
mov
sarl
cmc
adc
add
jno
test
push
pop
aas
inc
dec
cmpsb
inc
xor
sbb
mov
sub
outsl
mov
mov
xchg
mov
add
jo
test
sti
dec
adc
fisttps
jl
add
lods
jns
out
out
loopne
ret
pop
push
incl
pop
sub
xlat
cwtl
push
loope
xor
cmp
xchg
xchg
loop
dec
xor
xchg
push
out
ss
ja
push
pop
addl
out
dec
sub
loope
push
xor
repz
lret
testl
sbb
sbb
out
mov
imul
lds
pop
inc
cli
dec
lahf
xor
aas
ficomps
dec
jns
mov
mov
push
mov
dec
adc
jb
jbe
in
inc
inc
ret
mov
call
cld
pop
cmc
lds
mov
mov
and
ficoml
dec
add
add
test
cmpsl
das
shlb
jno
fisttpl
jge
or
inc
push
in
push
int
push
fstps
fiadds
loopne
ficoms
test
mov
sbb
arpl
xor
test
xor
add
aad
in
cmpsb
sub
jne
push
cmp
mov
jae
movb
rcrb
lret
sti
dec
pushf
jo
or
fidivs
hlt
xchg
or
lret
xchg
jle
dec
stc
inc
pop
std
adc
scas
sti
stos
push
cld
sbb
xchg
faddp
xor
clc
push
movsl
inc
xchg
mov
adc
add
pop
lea
adc
jae
cltd
mov
fidivrl
push
jecxz
jb
mov
inc
pushf
sbb
aad
cmp
mov
lret
sub
pop
add
hlt
xchg
or
es
cmp
or
add
cld
add
sub
std
sub
pop
adcb
dec
dec
sub
or
je
clc
inc
leave
daa
incb
and
adc
cmpsl
je
add
xor
gs
pop
shrl
scas
pusha
mov
xor
and
mov
jns
xor
fsub
mov
mov
lret
data16
stos
call
inc
shll
imul
cld
dec
push
adc
inc
or
push
mov
jb
inc
sbb
int
lods
out
pop
cmp
scas
mov
int
pop
lret
bound
int3
mov
xchg
je
ljmp
mov
mov
unpckhps
push
inc
inc
lock
mov
test
lods
push
flds
jg
std
push
adc
inc
adc
out
out
into
inc
shlb
cs
push
or
push
inc
je
add
in
pusha
shr
dec
mov
xor
sbb
jl
inc
inc
in
or
xor
push
mov
adc
cmpl
xchg
jns
pop
jmp
push
movsb
es
sub
lret
pop
push
mov
ret
movq
xchg
xchg
cmp
xchg
mov
adc
inc
imul
loope
push
lds
fadd
imul
jns
push
mov
fmuls
bound
repz
icebp
call
loope
mov
xor
jmp
dec
push
outsl
add
popw
xor
in
jg
mov
and
divb
push
ss
xor
out
daa
jbe
mov
fdivrs
add
ret
outsb
mov
rorl
sbb
push
fldcw
in
cmpsb
jbe
ljmp
and
xchg
mov
or
scas
push
pop
mov
dec
test
pop
fwait
sub
loope
fsts
fisubl
lahf
xor
xorl
jns
cmp
loope
leave
push
fdivrs
sbb
repz
cli
into
rcrl
mov
cmpsb
cmpsl
or
mov
sub
ljmp
xorl
shrb
and
sub
in
jecxz
outsl
mov
dec
ret
int3
fstps
fcmove
mov
cld
adc
sbb
mov
lret
ret
cmp
pop
or
pop
insb
cld
and
nop
lock
mov
lods
pusha
cli
adc
dec
jecxz
jno
inc
leave
ds
mov
loopne
imul
sbb
xchg
jne
push
cmc
sahf
and
push
inc
pop
cmpsb
repz
dec
fisubrl
pop
mov
das
push
dec
addb
and
popa
decb
cmp
insb
sub
sub
jmp
sahf
mov
sbb
and
loopne
fnstenv
mov
call
stc
jl
icebp
sub
cmp
insl
and
test
pushf
fidivl
mov
jo
lea
cmp
pop
cld
std
test
inc
inc
mov
repz
test
lcall
jg
add
in
repnz
daa
into
aad
inc
sub
push
xor
pmulhw
test
fs
mov
cmp
and
cmp
jno
xor
inc
aas
int3
mov
add
ja
adc
xchg
xor
jmp
xor
mov
jg
xchg
cmc
or
std
mov
jle
inc
inc
and
sub
test
jmp
xor
dec
cmp
add
xchg
mov
cltd
mov
out
shll
jmp
push
fcmovu
cmpsb
dec
inc
push
jg
mov
aad
aam
enter
clc
add
les
or
out
cli
mov
movsb
in
fistpll
push
cmp
aaa
sbb
xchg
test
imul
cs
xchg
icebp
sbb
notl
adc
gs
ss
fisubrs
push
aam
sub
movsb
js
je
in
pop
dec
inc
int3
add
pop
cmp
sbb
out
cmp
lcall
fsubs
jg
sbb
and
sub
pop
fcoml
sbb
dec
lods
push
fisubs
cmp
cmpsl
sbb
push
rcl
stc
out
jo
pop
cmp
sahf
lods
sbbb
push
xchg
and
fmull
and
mov
jecxz
repz
push
in
jp
scas
andl
insl
or
xchg
xchg
and
rcrl
cli
test
pop
and
adc
out
inc
lea
push
cld
orb
cmpsb
out
ljmp
push
in
loop
enter
push
inc
jo
jle
aaa
mov
mov
xor
enter
jns
push
dec
out
adc
dec
lds
out
mov
ja
and
shll
sub
cmp
insb
jp
pop
lock
jg
mov
lea
sub
cmp
shl
stos
add
mov
mov
xchg
dec
cmp
jb
push
fdivrl
aas
icebp
stos
xor
cli
imul
sbb
fwait
push
mov
sbb
fstp
cmc
leave
cld
aad
out
lret
pop
add
jg
jns
arpl
out
icebp
inc
cmpsl
std
inc
mov
dec
loopnew
movsl
mov
xchg
jnp
mov
add
mov
pop
mov
lret
sti
mov
insb
das
add
add
ficoml
subb
xchg
cmpsl
jl
sub
fs
pop
mov
jbe
ljmp
cwtl
push
jmp
and
jnp
mov
jge
jnp
jl
ret
or
cmp
or
aas
cwtl
jmp
stos
adc
sbb
data16
test
in
mov
xchg
aaa
outsl
mov
repz
sub
ret
pop
jne
das
mov
imul
ljmp
and
pop
in
movsb
dec
icebp
mov
pop
push
or
je
inc
dec
push
ja
or
xchg
sub
nop
mov
xlat
pop
stc
jb
aas
iret
rolb
dec
mov
push
lds
xlat
mov
and
mov
ret
shr
cli
cli
mov
sarl
data16
je
pop
xchg
push
inc
pop
sahf
in
xor
cmpsl
imul
inc
sti
scas
push
fwait
mov
gs
loope
sti
ret
out
aad
mov
ds
pop
loop
negl
adc
leave
shrl
dec
push
fnstsw
insl
gs
test
sar
cmp
es
aad
rolb
mov
pop
inc
fs
cmp
push
inc
out
movsb
lds
xchg
je
jg
xorb
rorl
cmpl
ds
jmp
push
jl
ja
mov
std
pop
cmp
jge
mov
jge
in
repz
pop
jno
loopne
ss
inc
push
add
popl
cmp
add
pop
xlat
mov
and
mov
pop
orl
xor
pop
addr16
je
pop
pop
xchg
mov
icebp
andl
sub
jmp
adcl
jo
lahf
mov
clc
cmc
lcall
stc
lods
addl
push
sbb
cmovg
push
repz
push
xorl
mull
enter
mov
unpckhps
mov
divb
outsl
pop
inc
push
jle
ret
push
jnp
ds
sub
pop
pop
xchg
mov
inc
inc
adc
sbb
lock
xor
adc
or
scas
push
jne
and
rcl
xchg
cld
adc
push
cmp
in
lcall
lds
loop
mov
cli
mov
xor
roll
out
fs
xchg
cmp
hlt
mov
idiv
mov
loope
sbb
call
xor
pusha
xor
xchg
pop
insl
pusha
int
cmc
mov
movsb
dec
mov
adc
mov
daa
dec
cld
fxch
in
xchg
cs
mov
sbb
and
mov
jge
jbe
scas
xchg
into
imul
mov
leave
int3
jno
adc
pop
push
pop
out
push
lods
or
sub
lods
in
adc
nop
hlt
xchg
push
add
rcrl
clc
xchg
cs
jmp
lret
pop
incb
stos
ja
pop
jl
xchg
lods
sarl
xbegin
push
xchg
nop
mov
ret
and
data16
jmp
mov
jno
dec
ljmp
icebp
lock
lock
hlt
adc
jbe
jno
adc
pusha
in
sub
mov
icebp
add
into
push
lahf
addr16
sbb
mov
jno
inc
xchg
sub
imul
fadds
sbb
data16
sbb
loopne
in
mov
out
insb
les
lods
rorb
sbb
movsb
rclb
xchg
cltd
mulb
enter
dec
nop
adc
push
mov
dec
fs
xchg
add
mov
cmpsl
jl
jns
in
jbe
and
int3
mov
dec
sbb
pop
xor
sti
dec
shrb
mov
xchg
pop
xor
mov
jecxz
pop
gs
push
test
push
fmuls
pop
xlat
jne
jo
push
xchg
and
pop
push
adc
rcrb
push
xor
sub
xchg
movsl
and
or
mov
fcos
scas
call
cmovns
inc
and
and
or
outsl
into
test
ret
clc
jmp
movsb
in
or
aad
mov
fwait
push
push
leave
dec
std
jge
mov
daa
movsl
aam
scas
ja
push
int
mov
mov
loopne
popf
mov
adc
mov
cmp
push
xlat
pop
pop
dec
adc
hlt
insb
sub
dec
mov
cmp
roll
push
mov
pushf
pusha
push
cwtl
pop
ret
imul
xchg
enter
pop
jno
dec
add
dec
mov
xorb
rcrl
and
push
ds
jecxz
push
dec
cmp
sarl
push
jge
xchg
push
xor
and
mov
movsb
aaa
subb
cs
bound
inc
scas
repnz
insb
jle
loop
mov
add
sbb
data16
mov
cli
adc
clc
ret
inc
adcb
in
jnp
or
imull
add
mov
and
jbe
leave
and
repz
in
jmp
test
cmp
push
fimuls
stos
mov
clc
jmp
shr
int
shr
loopne
xor
out
pushl
adc
js
mov
fldt
pop
daa
sbb
mov
addr16
xor
cmc
jb
aas
arpl
sub
mov
mov
popl
les
mov
mov
dec
bound
jae
jle
sbb
inc
lret
orb
xchg
neg
cmp
xchg
pop
mov
mov
cmp
cltd
xlat
cld
out
cld
les
ficomps
scas
cmp
out
mov
in
pop
fwait
mov
mov
jl
mov
sbb
sub
adc
and
push
pop
adc
push
out
mov
adc
flds
cmp
shl
jmp
aad
xchg
cmp
stos
xor
inc
and
int
shr
scas
pop
fwait
dec
adc
add
jge
mov
leave
es
stos
sbb
inc
mov
or
inc
lds
lret
sbb
mov
cld
cmp
ja
aas
pop
cld
dec
adc
ds
xlat
vcvtps2dq
inc
push
sbb
sub
jmp
cli
lock
lds
lea
mov
mov
daa
inc
lret
push
inc
lcall
fadds
sbb
or
inc
cmp
pop
sahf
and
and
cmp
scas
push
xor
jecxz
push
add
adc
or
xchg
mov
lahf
mov
sub
add
orl
icebp
leave
xchg
push
add
cmp
add
sarl
out
dec
mov
cmp
clc
mov
mov
fildll
inc
daa
mov
cmp
dec
es
fdivl
into
test
rcpps
les
jbe
ret
push
nop
lahf
jb
dec
pop
pop
add
mov
sub
mov
stc
pop
shr
das
pop
imul
sbb
sbb
adc
rcll
mov
pop
push
sti
insb
xchg
cmc
test
std
mov
lods
sbb
and
out
shl
xor
incl
adcl
sbb
arpl
jp
jnp
mov
jno
jbe
stos
cmp
mov
je
icebp
movsb
inc
xlat
add
outsl
push
mov
xor
out
stos
mov
rol
iret
jmp
dec
dec
mov
sbb
push
cmpsl
inc
sahf
add
sbb
aad
sbb
outsb
or
pop
pop
pop
push
ret
int
or
sbb
xchg
push
push
mov
aaa
mov
ljmp
enter
lock
aam
std
sub
cli
sbb
push
cltd
or
div
nop
and
pop
test
shll
test
push
and
mov
pop
fistpll
mov
xor
fwait
imul
das
mov
cmp
sbb
test
andl
xor
aam
xchg
add
fnsave
inc
and
mov
mov
mov
aad
insb
lahf
jbe
xchg
movswl
in
pushf
dec
loopne
xor
sub
mov
xor
shrb
push
outsl
insb
iret
cmp
mov
in
mov
fcoml
repnz
in
jo
addb
and
lcall
mov
fadd
cmp
cmp
inc
xor
loope
hlt
xchg
aad
sbb
ds
and
fwait
push
icebp
xchg
push
iret
and
movsl
inc
xchg
fs
cmp
pop
cmpl
ja
loop
insl
xor
pop
pop
outsl
pop
leave
sbb
xor
decb
xchg
adc
cmpb
jb
stos
dec
jne
call
adcl
subb
in
xor
sub
and
cltd
mov
ja
mov
insb
das
xchg
lds
ja
add
loop
loop
push
loop
mov
xchg
add
das
leave
jl
ja
je
mov
iret
dec
in
scas
dec
pop
notb
mov
mov
rorl
dec
and
mov
mov
mov
add
frstor
pop
mov
js
push
sbb
inc
jg
lret
or
push
lea
mov
out
xor
loop
fsub
leave
dec
xchg
sub
jnp
xchg
scas
outsb
xchg
mov
adc
addr16
push
xor
insl
mov
sub
inc
lahf
sub
cli
mov
dec
pop
jno
xor
dec
xchg
mov
lea
or
icebp
rcll
repnz
cld
mov
ss
int
into
pop
push
cmpsb
imulb
dec
xchg
call
mov
sbb
outsb
mov
mov
mov
test
int3
mov
or
aad
sbb
sub
stos
lods
out
out
add
bound
sub
insb
and
pop
stos
inc
cs
cs
mov
xor
mov
jmp
js
xor
push
shll
outsl
dec
push
push
dec
push
fstl
out
loope
test
cmp
mov
sbbb
loope
movsl
hlt
shll
pop
adc
mov
loope
loop
incb
ret
notb
push
and
mov
xchg
sbb
scas
repz
sbb
jecxz
repz
hlt
sub
subl
mov
xchg
int3
push
jl
lods
jmp
in
repz
push
or
push
fwait
popa
or
movl
les
lock
cld
and
outsb
dec
sub
add
in
jle
xchg
imul
jns
dec
gs
mov
jns
iret
ret
add
pop
addl
mov
pop
and
mov
jno
iret
dec
sbb
push
lock
and
jno
sbb
mov
jns
lods
mov
ds
mov
pop
jo
insl
lea
into
inc
rolb
mov
or
movsb
fldenv
std
lods
jne
push
test
nop
add
pushf
push
cmp
js
loope
in
push
int
lods
mov
fists
in
sti
sbb
test
ds
mov
mov
pop
popa
ds
mov
dec
dec
xchg
add
outsl
sbb
lds
hlt
cmpsb
mov
add
sub
mov
xor
pop
out
and
push
adc
mov
bound
dec
lods
scas
xor
shlb
int
xor
lcall
fsubrl
xchg
imul
das
cmp
and
and
pushf
and
pop
jecxz
call
pop
cltd
push
mov
cld
inc
push
sbb
in
dec
movsl
pop
cmp
in
add
fstpt
in
lret
adc
rorb
mov
inc
sti
adc
jne
sub
stos
jbe
and
and
lret
repnz
arpl
pop
movsl
sbb
negb
pop
add
and
iret
movsb
cmp
inc
dec
adc
test
jno
sbb
mov
std
and
xlat
add
and
popf
inc
xlat
jno
mov
inc
lea
jbe
aad
fwait
xor
mov
das
mov
push
xchg
xchg
out
shll
sub
push
out
nop
lret
jnp
daa
mov
cmp
jne
js
jp
xlat
scas
fidivrs
lcall
xchg
clc
xchg
adc
call
jnp
loop
cld
adc
scas
data16
xor
cli
into
fidivrl
int3
jmp
fisttpll
dec
inc
cmp
mov
dec
push
loop
int
ret
pop
push
gs
inc
and
inc
test
push
xor
hlt
jns
imul
add
adc
push
pop
cld
push
ds
rcrl
fcompl
ss
add
aas
dec
das
push
mov
push
cs
mov
dec
sub
fistps
test
or
sub
add
pop
cwtl
enter
loope
js
shrb
cmp
inc
rolb
push
and
loope
push
cmp
test
add
and
mov
pop
test
test
and
or
std
mov
ss
pop
inc
inc
dec
sub
outsl
mov
lret
sub
mov
adc
imulb
adc
lods
xchg
fcmovb
leave
clc
lods
jp
add
xchg
push
outsb
jl
inc
push
idiv
sahf
rolb
jle
jo
daa
add
and
and
sbb
popa
mov
or
mov
inc
sub
dec
sub
xchg
lret
mov
mov
dec
stc
or
jle
inc
sub
lcall
test
in
push
inc
or
orl
mov
cmpsb
xchg
xor
adc
pop
mov
pop
into
clc
lret
mov
jb
mov
shl
xor
dec
pop
icebp
cwtl
push
insl
sub
jbe
fiaddl
jb
mov
mov
test
ljmp
fucomp
fsubrl
out
push
scas
lret
sub
mov
xchg
pop
andb
pop
les
std
in
or
sbb
js
es
shr
xorb
lret
sbb
out
xor
mov
popf
mov
jecxz
mov
jmp
aas
adc
sbb
sarl
sahf
insb
repnz
push
into
jno
jmp
inc
call
js
fnsave
push
std
repz
mov
cli
sarl
sub
stos
or
cltd
std
fwait
push
or
inc
lock
pop
nop
cmp
mov
into
ret
jo
and
xorb
iret
call
jge
pop
cmp
in
imul
pop
out
enter
dec
imul
lea
cmp
jae
jmp
jge
sbb
cmp
stos
cmp
ret
mov
adc
repz
or
jne
iret
sti
add
fisubl
jecxz
lds
rcr
shr
add
jns
push
ret
stc
jle
pop
je
sub
jg
mov
or
cmp
dec
outsb
and
daa
ja
sbb
data16
or
sbb
xchg
call
aaa
push
fisubrs
movsb
cmp
clc
mov
mov
ljmp
cmp
popa
aad
iret
div
in
in
nop
jg
mov
sbb
cli
fisttps
cld
ds
add
lock
push
pushf
clc
add
test
xor
sub
test
adc
pop
das
lods
sub
pop
push
std
enter
imul
push
iret
inc
xchg
bound
push
push
mov
mov
test
fidivs
loopne
xor
or
enter
xor
add
or
stc
jle
pop
or
mov
sahf
add
mov
pushf
stos
sahf
int3
pusha
fwait
inc
push
ja
cmp
mov
push
nop
mov
sbb
cld
popa
into
rcl
test
sub
scas
arpl
in
add
jg
jp
mov
lods
psubsw
push
or
outsl
dec
jnp
negl
fisubl
adc
stos
mov
lods
mov
inc
sti
xchg
or
mov
jnp
cmp
mov
xchg
mov
data16
decl
pop
mov
dec
test
and
mov
icebp
xor
pop
aas
pusha
ljmp
mov
data16
imull
aam
jb
aad
clc
rolb
inc
js
stos
or
in
pusha
jge
xor
shl
push
ja
insb
int3
xchg
sbb
mov
xlat
or
int
sbb
and
in
xor
inc
mov
pop
cmp
push
pop
cmp
dec
stos
push
ss
fistl
and
mov
xor
fcmovbe
lret
mov
adc
fadds
stc
pop
es
cmpsb
push
sbb
addr16
int
cltd
std
inc
ja
adc
pop
lret
push
jg
inc
pop
push
clc
std
cltd
repnz
out
ds
inc
sub
jae
aas
ja
popa
dec
pop
xor
mov
popf
push
cmpb
scas
adc
mov
in
cltd
lret
lahf
dec
frstor
jnp
repnz
ljmp
xor
repnz
pop
enter
je
sbb
lcall
jb
adc
rorb
test
out
dec
mov
xchg
push
cmp
movsb
out
pushf
aad
inc
lock
pop
jg
in
cmc
xor
xor
sub
and
fildl
lret
push
inc
push
repz
cmpsb
push
loope
pop
fnsave
lea
lods
push
lret
mov
rorl
mov
lea
mov
jp
inc
pop
jae
or
jb
dec
xchg
iret
xchg
lods
aam
dec
cmp
mov
into
cmp
push
mov
xlat
mov
pop
push
or
aam
and
into
lahf
daa
out
mov
push
scas
or
pavgw
arpl
jns
int3
xchg
sub
pushf
dec
lods
stc
inc
cli
das
cli
mov
jge
jecxz
push
lods
and
push
push
pusha
mov
rorl
repz
mov
pop
movsl
pop
int3
jg
sti
push
inc
sbb
lods
popa
shl
push
xchg
loop
nop
dec
add
cmp
xor
sbb
dec
dec
out
fxch
pop
ret
outsb
mov
jmp
mov
sub
push
filds
fidivrl
enter
movsb
jno
mov
and
ss
lea
lock
mov
xor
mov
bound
mov
jmp
stc
inc
rorl
or
in
sub
sbb
jno
xchg
or
lds
dec
outsl
cwtl
test
mov
mov
xchg
dec
aad
inc
adc
jae
scas
lahf
push
and
sbb
clc
sub
jo
cwtl
out
mov
and
icebp
shl
ljmp
cmp
pop
lea
ret
lods
pop
jmp
cltd
scas
and
divb
pop
adc
movsl
ret
add
mov
push
jne
xchg
push
test
nop
dec
rorl
call
or
xor
enterw
dec
pop
sub
outsb
arpl
inc
xor
cmovge
pop
aam
out
aas
add
adc
pop
popa
je
xchg
xchg
add
mov
mov
call
jne
cmc
mov
pop
mov
shll
push
adc
xlat
adc
rorb
sbb
pop
cmp
test
pop
cmpsb
xorb
push
ret
lret
mov
push
jae
or
adc
loope,pn
pusha
enter
jbe
out
ljmp
lret
aad
mov
xchg
add
testb
cld
in
inc
cmp
jns
outsb
mov
test
int3
jnp
xchg
xchg
clc
daa
loopne
or
ret
push
addr16
push
push
out
ljmp
pop
mov
sbb
test
ret
enter
pushf
aad
xchg
cmp
hlt
cwtl
push
ret
loope
ja
nop
mov
push
mov
jg
jecxz
pusha
sub
test
or
std
out
pop
dec
sub
int3
pop
shll
push
mov
in
rorb
and
xor
sbb
leave
mov
addr16
sbb
sub
es
popf
in
aas
insl
jge
lock
popa
lret
lods
and
inc
push
imul
sarb
add
pop
mov
mov
dec
scas
loope
int
iret
lret
cltd
jb
push
and
test
fnstsw
pop
push
add
aas
dec
lods
xlat
cmp
adc
fsubs
out
dec
fisubl
das
sbb
pop
mov
sub
adc
lock
push
pusha
and
addr16
pop
dec
sbb
aad
sbb
and
lcall
mov
mov
int3
lods
xchg
mov
stos
rclb
in
mov
movsb
into
aas
das
fcoml
sbb
push
xchg
enter
mov
lock
imul
add
push
out
mov
pop
outsl
popf
mov
cmp
in
or
jl
push
outsb
fisttps
test
test
xor
sbb
xor
fyl2x
mov
rclb
cltd
subl
sub
nop
test
lods
lods
push
outsl
cwtl
nop
icebp
sbb
nop
mov
fbld
mov
nop
iret
sub
lock
dec
and
lods
jns
pop
jp
xor
add
sbb
stos
add
ljmp
popf
imul
push
ret
outsb
lret
xchg
aam
pop
call
jo
push
pop
testb
pop
das
xlat
nop
insl
leave
aad
push
adc
or
mov
call
loop
lcall
in
fs
stos
outsl
out
inc
mov
cs
andb
stos
loopne
das
das
push
xchg
movsb
jbe
test
push
and
push
jle
cmp
pop
inc
nop
ficoml
jge
or
mov
out
sbb
mov
push
lds
dec
fcmovb
repz
jl
filds
mov
inc
fsubl
sbb
cmc
out
cmpsb
das
shl
hlt
loopne
ljmp
js
imul
mov
test
inc
idiv
or
lcall
enter
stc
mov
mov
dec
lds
pop
aas
cmp
xchg
cmp
push
shlb
movsb
xor
xchg
jge
and
cmp
and
mov
in
xchg
repnz
lea
enter
imul
pop
lcall
sbbb
pop
dec
enter
ljmp
xchg
pop
out
daa
ja
cmp
out
push
cli
imul
lock
sti
jmp
insb
dec
scas
mov
mov
jl
stos
repz
adc
out
cmpsb
inc
fbstp
fisttpll
nop
jecxz
stos
jno
mov
hlt
popf
call
adc
ficompl
pop
jnp
cmp
shl
dec
inc
push
fs
add
cmp
icebp
sbb
cltd
std
push
mov
pusha
fsubs
mov
sub
and
loopne
je
sti
lret
jl
sub
jae
scas
lea
stos
cli
rorl
cmp
stc
push
les
iret
and
pop
inc
xor
shlb
pop
mov
popa
stc
movsb
xor
and
leave
cli
pop
push
out
pusha
lret
pop
xchg
scas
out
jbe
mov
cmpsb
mov
int
or
xchg
fnstsw
jg
xchg
push
icebp
lcall
jp
and
sub
mov
imul
push
jmp
and
ret
jbe
or
inc
sub
lods
jmp
and
sbb
mov
nop
pop
sbb
incb
negb
rcrb
imul
test
jb
push
cld
or
ret
dec
push
std
rcll
adc
cwtl
in
xchg
test
popf
and
cmpsb
jbe
cwtl
lods
pop
fwait
lods
stos
mov
scas
sub
jne
or
test
shrl
daa
test
test
int
inc
jl
sarl
mov
jne
rclb
jbe
dec
mov
cld
out
dec
pop
and
sarl
fldt
jbe
ljmp
jp
lods
push
mov
cmp
sbb
addr16
aad
in
adc
inc
test
lret
repz
dec
dec
or
sbb
inc
ja
fisttpl
inc
pusha
into
mov
mov
out
hlt
insl
xchg
outsl
in
mov
mov
mov
fdiv
push
inc
push
in
jns
imull
fisubs
in
sahf
ljmp
divb
data16
xchg
mov
mov
fistl
inc
stc
cmp
clc
ret
and
pushf
push
loopne
mov
lret
jecxz
incb
in
mov
fists
in
imul
test
sub
or
imull
in
push
mov
mov
daa
in
lret
mov
imul
fisttpll
jge
jecxz
xchg
pushf
int3
scas
xor
shlb
push
lds
sub
mov
and
jae
loope
mov
mov
test
cmpsl
test
jb
loope
xchg
popa
push
or
sbb
dec
lods
loopne
ja
mov
mov
ljmp
pop
stc
fistps
cld
jle
xchg
in
jns
pop
or
fwait
bound
and
loop
mov
push
sub
sub
mov
lods
orb
cmp
cmp
mov
xchg
testl
into
sahf
sarl
sbb
ret
mov
int
jmp
rcll
testl
fcom
rcr
sbb
cmp
rcr
mov
das
xchg
in
imull
insb
popf
mov
in
cmp
enter
lods
jb
xchg
loopne
pop
adc
add
ljmp
mov
cmp
xchg
mov
movl
scas
pushw
test
xor
mov
push
lret
movsl
mov
cli
mov
and
mov
adc
push
je
push
xlat
jle
cltd
fidivrs
xor
int3
mov
aas
fdivs
cmp
sbb
dec
aas
sti
sbb
pop
insl
inc
in
push
add
sbb
sbb
mov
mov
inc
mov
mov
daa
loopne
insb
in
addl
jecxz
popf
mov
in
ljmp
sub
and
movsl
mov
dec
out
out
lret
bound
push
and
lcall
scas
pop
or
add
pop
and
and
pop
push
lcall
sarl
mov
iret
stos
pop
and
sarb
scas
dec
mov
dec
lea
out
out
mov
push
daa
mov
push
dec
cwtl
push
stc
mov
pop
pushf
insb
cli
popf
jne
mov
jmp
ja
fwait
add
js
insb
arpl
cmp
add
sbb
pop
push
adc
sbb
out
pop
mov
mov
out
repnz
scas
mov
sub
les
shll
sub
cltd
mov
sahf
cmc
sbbl
mov
mov
jae
dec
dec
sahf
cld
aaa
lret
and
sbb
addr16
loopne
lea
mov
addr16
xchg
lods
gs
pop
std
lock
push
jmp
and
pop
out
add
aad
sahf
addb
jmp
pop
xlat
sbb
test
and
data16
dec
push
mov
inc
daa
or
mov
pop
pop
enter
push
insl
or
cs
and
mov
scas
loop
gs
add
movsl
test
test
gs
mov
lret
sbb
repz
leave
inc
fimuls
icebp
adc
insl
add
mov
mov
jle
mov
push
jne
daa
scas
call
movsb
int3
mov
xchg
or
mov
es
aaa
inc
push
push
lea
mov
sti
pop
and
xchg
fsubs
xor
das
sub
cwtl
jg
xchg
mov
inc
ret
jle
outsb
jge
cmp
push
pop
dec
xor
enter
inc
lods
jmp
sub
mov
orb
aad
add
and
add
sarb
neg
inc
sbb
in
test
add
sbb
leave
sub
sub
les
clc
div
aam
dec
mov
xlat
popf
popf
rcll
inc
jmp
add
int
pop
add
xchg
jp
push
pop
cmc
fcmove
cmp
lret
and
sbb
mov
or
in
nop
mov
test
push
push
ret
sub
packuswb
es
scas
std
negb
cmp
xlat
pop
inc
mov
stc
outsb
add
aam
mov
xor
stos
stos
mov
add
or
js
bound
and
or
pop
push
dec
cld
fsubr
stos
fldenv
sub
or
sahf
gs
mov
and
and
mov
inc
mov
imul
push
sub
outsl
mov
scas
push
loopne
andl
adc
enter
pusha
add
mov
aas
pop
jb
hlt
sub
dec
or
inc
sahf
and
inc
out
pop
inc
mov
fistl
movsl
xchg
pop
fcmovne
push
mov
adc
sahf
repz
rolb
mov
repz
flds
bnd
inc
push
outsl
push
inc
or
test
movsb
mov
pop
in
sbb
and
mov
lods
adc
sbb
push
or
sahf
pop
push
mov
loope
loop
stos
jae
xlat
daa
cmp
aad
xchg
jle
lea
mov
push
sbb
jbe
fidivrs
inc
xchg
sbb
mov
daa
add
mov
sbb
in
jne
fidivs
mov
lea
xchg
adc
adc
repz
inc
jae
jb
aad
dec
rorb
xchg
mov
scas
dec
mov
fcomip
jecxz
xor
lods
adc
lds
dec
addr16
sbb
lods
or
mov
arpl
or
rcrl
ret
ss
loop
adc
pop
pop
and
jge
fs
fcomp
lret
shl
mov
sub
test
dec
pop
loope
and
sub
push
sub
jno
or
loopne
dec
inc
mov
dec
xor
pop
fsts
cwtl
jmp
sbb
add
dec
or
jle
sub
jg
jbe
adc
in
jle
cmp
shrl
jp
stos
cmpsl
push
jl
lods
das
imul
fimull
icebp
push
in
imul
mov
jo
adcl
mov
or
hlt
jae,pn
ljmp
dec
add
xlat
dec
mov
js
push
mov
and
xchg
call
fs
mov
sbb
push
ret
js
test
js
xor
lea
mov
fimuls
jmp
es
cmp
jae
xchg
jp
daa
shrl
popa
mov
insb
adc
fwait
mov
pop
sbb
jno
ja
imul
xor
movsb
xor
inc
xor
push
xor
dec
lret
mov
xchg
insl
mov
push
sahf
mov
pusha
inc
jle
jnp
sbb
lret
into
xor
cmpsl
lret
aad
add
xchg
or
stos
clc
cmp
inc
ret
pop
pusha
sbb
mov
xchg
sar
cmpsb
sbb
inc
in
pop
jmp
add
loopne
insl
mov
dec
mov
mov
mov
push
mov
movl
or
mov
add
push
psraw
inc
cmp
cmp
xor
insl
jnp
jne
hlt
into
shlb
inc
xor
inc
or
scas
int
add
repz
mov
mov
ljmp
xor
mov
cmpsl
rolb
pop
pop
dec
xor
aam
inc
or
imul
mov
push
lret
jl
push
mov
lcall
sbb
arpl
mov
bnd
test
mov
sub
in
add
pop
xor
pop
rorl
lret
js
cmpsb
call
in
jbe
cmp
aaa
sub
xor
pushf
dec
lea
sahf
outsb
fcoml
inc
scas
jno
pushf
cmp
mov
push
out
mov
xchg
orl
jnp
fstpl
pop
dec
sub
test
jge
cltd
cmc
pop
insl
xchg
lret
lret
loope
fstpt
dec
imul
fs
xor
dec
stos
das
inc
xor
fs
test
data16
dec
mov
xchg
adcb
and
test
mov
movsl
push
lret
mov
dec
outsb
xchg
and
or
mov
mov
push
mov
mov
or
push
push
or
mov
out
jns
movsl
mov
testb
arpl
pop
jno
jl
mov
cmpsl
imul
loopne
adc
add
inc
dec
mov
jns
cld
inc
mov
stc
pop
ret
ret
cmp
out
fcoms
mov
idiv
jns
mov
or
or
hlt
aad
xor
xchg
pop
stc
fs
mov
loop
fmull
pop
pop
sub
icebp
dec
inc
xchg
push
inc
and
lahf
aas
cld
rcl
mov
ret
dec
lea
sbb
xchg
mov
arpl
pushf
idivb
fists
mov
push
popa
fmul
add
std
outsl
add
sti
out
int
cmp
mov
sbb
out
lahf
gs
lcallw
imul
dec
lods
pop
jne
int
xchg
ss
scas
xor
jg
mov
push
push
loop
loopne
adc
jl
lcall
cli
mov
hlt
int
popf
ljmp
adc
push
jo
ja
roll
lods
popa
loop
add
adc
arpl
pop
cld
out
fcmovnbe
into
push
imulb
std
xor
dec
outsb
mov
adc
loop
xchg
pop
or
add
jmp
inc
into
jne
test
add
imul
scas
inc
ja
xchg
cmp
in
pop
fidivrs
int
cld
cmc
adc
xchg
dec
jbe
and
add
xor
xadd
inc
or
loop
inc
and
out
bsr
mov
shrl
cltd
fwait
mov
xchg
bound
push
or
sti
adc
sub
mov
jge
cmc
pop
cwtl
or
lods
mov
in
stos
ljmp
enter
cld
sub
mov
and
and
push
andl
mov
add
dec
out
xchg
or
or
cmp
inc
popa
js
xor
outsb
lret
push
out
ss
cli
sub
jle
xchg
fidivrl
int
fildll
scas
or
test
sbb
in
cmp
push
mov
gs
ljmp
xchg
aas
pop
jecxz
mov
fsub
gs
cmp
dec
inc
pop
aaa
and
popf
loope
les
lods
loop
cltd
xor
das
jle
sti
push
roll
jg
stc
inc
inc
and
pop
dec
aad
shr
push
stc
int
aas
outsl
push
push
mov
popa
test
fwait
popf
jmp
sbb
push
ja
xchg
dec
je
out
xor
dec
adc
or
xlat
in
pop
cli
testb
cmp
cwtl
loop
add
insl
cmpsb
btrl
pusha
add
inc
aam
sbbl
xlat
ja
push
je
jnp
inc
pop
jnp
lret
ja
xchg
mov
into
enter
or
insb
mov
pop
add
rorl
stos
dec
mov
pop
cmp
out
stos
xacquire
js
or
outsb
ds
jb
and
pushf
hlt
jno
imul
roll
sub
and
dec
inc
out
xchg
mov
dec
cmpsl
adc
aaa
cmp
pop
cmp
jge
sub
rcrl
dec
adc
mov
into
fstpl
or
and
mov
int3
outsl
mov
xor
push
fists
cmp
stc
popa
push
loope
dec
cmp
ret
xchg
into
loopne
data16
idivb
mulb
add
xchg
xor
test
pusha
pop
xchg
ret
inc
sti
mov
xchg
sub
inc
xchg
nop
jae
mov
jmp
jb
fbstp
mov
mov
push
push
push
das
gs
insl
dec
push
cmp
xor
push
lahf
dec
aas
xchg
sets
xor
aas
xor
adc
jge
cmpsb
sti
sbb
and
lcall
pop
sbb
mov
and
add
test
jo
or
mov
aaa
inc
iret
jge
outsb
loopne
mov
push
pushf
jns
or
xor
mov
pop
fcompl
sarl
fdivl
iret
dec
les
cmp
jo
movsb
fstpl
jmp
stos
popa
test
mov
rolb
or
inc
inc
mov
popf
push
imulb
mov
jl
mov
lret
sarb
std
aas
leave
push
iret
lock
sbb
mov
push
cmp
pop
sbb
cmp
test
mov
push
test
add
gs
mov
mov
out
xor
ret
xchg
into
cmp
xor
cli
push
cmp
fsts
js
std
push
sub
scas
dec
jae
pop
xlat
cmpsb
call
adc
jg
int
push
nop
xchg
out
imul
cmpsl
imul
dec
fwait
add
sahf
and
hlt
outsl
and
sub
push
ror
test
mov
mov
imul
add
inc
ret
pushf
sahf
push
in
shlb
call
sub
mov
inc
lods
cmp
and
mov
ficompl
pusha
cli
repnz
pop
xchg
sub
cmp
aaa
and
cmc
mov
mov
mov
push
dec
pushf
sub
out
out
mov
mov
adc
dec
cmp
push
mov
aam
xchg
push
pushl
outsl
jb
mov
inc
scas
jo
adc
mov
mov
jae
inc
lret
or
iret
adc
pop
pusha
hlt
out
sub
push
push
add
aam
xchg
daa
jns
jnp
jp
ret
jo
cmp
addr16
fidivl
cmp
mov
or
das
jmp
leave
shll
hlt
jle
mov
xor
addr16
jbe
sub
lret
xor
aad
and
pushf
jb
pushf
aas
mov
int
adc
mov
dec
xchg
sbb
outsl
and
enter
sbb
lds
jg
dec
adc
sub
imul
arpl
std
mov
lret
mov
int3
test
mov
mov
sbb
cmp
sbb
or
lods
jb
jmp
inc
hlt
jae
mov
mov
sub
sar
xchg
jbe
adc
cmp
out
ds
adc
sbb
ja
pop
push
mov
ss
lea
pop
sub
mov
jg
fstps
out
faddl
dec
pop
dec
xchg
pushf
gs
popa
xchg
mov
mov
pop
sbb
ja
mov
cmc
inc
shlb
lret
cmp
jmp
cli
adc
fs
aas
or
jge
jp
sbb
cmp
or
and
sub
xchg
jns
dec
inc
mov
mov
jecxz
cmc
addb
call
push
in
xor
fs
dec
sub
mov
push
out
xchg
in
xor
popf
stc
sti
push
mov
mov
jnp
dec
mov
and
in
shll
in
xor
xor
mov
sbb
xchg
push
cmp
push
xchg
mov
mov
xchg
cmp
inc
repnz
mov
cmp
scas
sbb
aad
add
sbbl
dec
jns
add
stos
ja
bound
cmp
mov
std
loop
test
sub
add
ja
and
jmp
repz
fsubrs
jge
scas
mov
imul
imul
leave
dec
lds
movsl
jge
xchg
daa
mov
fcomip
add
sub
mov
fcmovnu
ds
cmp
loopne
movsb
pop
sub
cltd
jo
jb
cmp
push
adc
xchg
pop
stc
loop
or
jb
xor
popf
std
mov
rcrl
movb
ret
xchg
lock
inc
lea
mov
jb
loopne
xorb
insl
adc
sub
lahf
sbb
in
decb
inc
adc
pushf
xchg
mov
out
pop
mov
add
loope
jle
inc
nop
scas
addl
jnp
adc
insb
in
pop
mov
xor
push
xor
inc
daa
sub
clc
cmp
pop
jne
push
mov
mov
cld
sbb
das
xchg
cmp
rorb
sub
pop
cltd
dec
rep
daa
add
js
jnp
push
cmpsl
ljmp
and
inc
data16
in
scas
fiaddl
and
mov
jecxz
cmp
cmc
out
cmpsb
enter
xchg
add
cmp
test
dec
dec
ret
ret
cli
adc
dec
xor
lods
hlt
test
lds
xchg
mov
mov
or
mov
adc
insb
mov
mov
jp
sbb
push
dec
in
lcall
scas
rorb
jbe
repnz
in
or
ss
orb
in
gs
hlt
dec
xor
int
push
mov
adc
data16
jb,pn
mov
jmp
pop
bound
cmpb
xchg
xchg
ss
xchg
pop
repz
and
shll
aad
push
mov
outsl
roll
mov
sahf
sbb
out
push
loopne
sub
sbb
sub
pop
imul
pop
add
push
add
adc
test
inc
dec
ja
lods
mov
pushf
and
xorl
jmp
push
imul
popa
push
lahf
es
mov
pop
stos
outsl
jecxz
sub
add
popa
enter
inc
cmp
notl
test
leave
repnz
roll
aas
and
pop
lcall
pop
es
out
mov
addb
out
scas
stos
push
das
orb
cmp
jge
loopne
and
call
jo
ljmp
nop
dec
daa
scas
cs
xlat
in
stc
and
stc
test
iret
sub
mov
imul
xchg
and
cmc
fistps
cmp
out
aaa
inc
icebp
call
mov
repz
pop
inc
jb
dec
pop
add
xlat
mov
leave
and
ds
mov
rcll
sub
xchg
jb
mov
lret
mov
sub
insb
int3
stos
fs
pop
sbb
mov
xchg
repnz
ret
add
mov
dec
or
popf
andb
jb
aaa
xchg
ret
dec
addr16
inc
cwtl
fiaddl
pop
call
in
mov
adc
mov
ret
inc
xchg
mov
mov
imul
sbb
subl
cltd
mov
inc
xchg
mov
in
out
xchg
es
enter
out
push
cmpsl
das
enter
sub
adc
adc
or
adc
sbb
adc
add
cmp
jcxz
adc
jge
aaa
test
push
xchg
push
in
into
js
xor
dec
lahf
ja
out
ja
sbb
pusha
sbb
es
sbb
or
jno
jnp
cmp
xor
mov
decl
fs
ljmp
jge
call
or
cmpsl
icebp
mov
mov
xchg
cmc
stc
jae
and
cwtl
cs
mov
xchg
xor
dec
outsb
bound
mov
ret
idivl
add
es
push
ret
push
jne
sub
inc
mov
xchg
ljmp
add
icebp
gs
jmp
iret
jb
mov
sbb
inc
fwait
add
xchg
lret
fs
lahf
cmp
adc
push
lret
push
shrl
jecxz
add
dec
cmpsb
mov
mov
sub
jno
xlat
cld
idivb
mov
adc
lret
xor
xor
mov
jnp
mov
fmull
ja
outsl
lea
cmp
pop
in
ljmp
push
jns
outsb
xchg
sbb
adc
add
cmp
incb
int3
lds
lds
mov
sbb
sbb
ljmp
test
inc
ret
sub
sbbb
or
mov
mov
mov
pushf
adc
mov
std
loope
ljmp
aam
jo
add
andb
sbb
inc
out
inc
int
ljmp
push
mov
sbb
or
in
std
cmc
sub
xorl
out
sbb
subl
in
mov
int
sub
mov
jmp
pushf
push
imul
bound
fwait
dec
mov
cmp
bound
in
pop
jecxz
scas
or
out
repz
shll
push
xchg
roll
sub
and
stc
dec
lods
mov
mov
sahf
mov
pop
stos
ret
enter
and
mov
add
std
lretw
xchg
inc
loope
dec
inc
push
jmp
idivl
cmp
js
mov
pop
shl
or
out
inc
push
mov
lock
fldl
loopne
pop
and
ficoms
movb
sub
and
inc
aam
dec
adc
fildl
add
pop
fcmovne
lahf
pop
sub
mov
xchg
lock
dec
bound
ljmp
jp
push
aad
neg
jecxz
fs
sbb
loopne
loop
outsl
subb
pxor
sbb
jl
pusha
outsb
xor
insb
int
mov
std
xchg
sbb
dec
pusha
push
and
aam
lret
into
cmc
mull
fwait
shr
add
arpl
fwait
cmp
and
jecxz
popf
jno
inc
add
fcompp
test
sbb
and
inc
es
mov
fsubl
rcl
lods
pop
dec
int3
movsl
into
out
push
xchg
cltd
dec
add
mov
enter
push
xlat
lret
rolb
fcmovne
pop
xchg
mov
inc
push
sub
add
xchg
dec
push
int
stc
dec
jmp
xor
dec
inc
xor
pop
mov
cld
cmp
jo
cmp
adc
jb
jmp
inc
or
xchg
mov
jge
mov
fs
and
lods
mov
sbbl
inc
add
lds
roll
bound
xchg
cmc
sub
push
cld
cmpb
xlat
mov
xor
into
jno
out
add
in
popa
pop
loopne
ljmp
jmp
sub
scas
pop
mov
lcall
xchg
iret
jp
jecxz
and
mov
lahf
fwait
into
jae
inc
mov
pop
hlt
cmp
and
xlat
fisubrs
stos
sub
adc
cld
or
ds
int
out
ja
cld
and
adc
xchg
adc
push
jp
push
mov
pop
jl
insl
cmp
andb
ret
pushf
and
sbb
dec
in
add
leave
hlt
ds
jb
outsl
or
mov
inc
xchg
pop
ret
repnz
xchg
inc
jmp
roll
sbb
xchg
je
test
adc
mov
sysret
sarb
xor
outsl
rol
pop
mov
mov
lds
jae
cld
in
add
jl
mov
or
imul
adc
rorb
out
mov
popf
stc
xor
or
mov
loopne
in
cs
sub
push
inc
in
in
xorb
push
jmp
imul
pop
sub
aas
lret
popl
int
cmp
sbb
stos
xor
pop
xor
aas
inc
inc
movsl
inc
push
je
push
pop
sub
xchg
nop
pop
push
pop
sbb
les
push
mov
cmp
sub
cli
fidivs
cwtl
ficomps
push
shrb
mov
bound
inc
icebp
add
gs
insb
xor
push
sub
test
or
mov
inc
sub
cmpsl
insl
outsb
repz
je
jecxz
pop
cwtl
sub
icebp
mov
push
lret
sahf
js
xchg
mov
ret
dec
or
mov
pop
dec
ja
rcrl
xchg
dec
sbb
les
pop
scas
outsb
fxch
mov
pop
mov
test
jbe
adc
cwtl
sub
sub
les
repnz
daa
loope
add
insb
ja
mov
or
adc
xor
loopne
or
loopne
jge
pop
add
repz
cltd
dec
adc
cld
int
das
mov
lret
adc
adc
or
cmp
sub
iret
pop
jp
cmc
out
mov
sbb
pop
adc
loop
orl
push
addl
mov
dec
jmp
insb
insb
aas
or
lea
shrl
push
adc
mov
ljmp
mov
push
cmpl
dec
fucomip
idivb
fwait
cmpl
push
xchg
das
loopne
mov
enter
aam
je
imul
fs
cltd
xor
imul
lock
sahf
popa
repnz
inc
inc
cmpsl
aad
aas
pop
push
mov
pop
sbb
das
and
xor
pop
inc
mov
subb
mov
sar
sbb
repz
out
and
fmuls
jb
cwtl
aam
adcb
cwtl
sbb
xchg
push
iret
jmp
xor
and
pop
mov
icebp
sbbb
cmp
push
mov
xor
mov
enter
lret
daa
ret
jns
cltd
aaa
sub
sarb
cmc
sub
mov
mov
std
adc
mov
aam
shll
movsl
sub
cmp
jo
hlt
inc
add
cmp
mov
les
adc
mov
jge
xor
inc
push
cmpsl
inc
or
mov
mov
dec
lret
sub
sbb
mov
arpl
xor
inc
rorl
sbbb
pop
and
xor
cmp
xchg
fnsave
aad
inc
push
push
sub
ljmp
gs
add
stc
push
into
xor
inc
cwtl
lea
popf
cwtl
pop
cmpb
lods
pushf
jb
icebp
ret
inc
int3
pop
pop
mov
scas
lds
add
push
lods
addr16
mov
xor
pop
cld
cmpsb
out
iret
out
xchg
cmpsl
and
test
add
cmpsl
xchg
in
mov
mov
inc
ss
mov
data16
std
jo
mov
rolb
mov
jl
idivb
or
repnz
int3
push
in
scas
data16
rorl
fildl
sbb
push
aam
ret
lods
push
sti
inc
sbb
bound
es
rorb
fidivrl
xchg
pop
test
jb
fldl
outsb
mov
andb
mov
in
icebp
jo
pop
movsb
dec
cmp
std
or
mov
jecxz
addr16
pop
push
out
jge
cmp
fldcw
in
jp
lret
loopne
cmp
gs
mov
maskmovq
mull
movsl
pop
push
in
in
out
mov
or
data16
xchg
lea
cmp
or
push
dec
jbe
lcall
adc
cmp
lock
es
in
daa
mov
jbe
outsb
jle
mov
fsubr
ljmp
insl
pop
lahf
push
push
xchg
mov
ret
inc
in
aas
adc
int
in
test
sub
mov
xor
aam
aam
xor
mov
pushf
shlb
int
jns
push
fnstsw
out
pop
int3
mov
ret
mov
std
sub
mov
inc
dec
decl
ds
and
xlat
stos
sub
int3
outsb
add
insb
ficoms
cmp
or
mov
mov
mov
pop
add
sub
dec
adc
adc
mov
dec
es
icebp
leave
adc
cmpl
ret
mov
and
fisubs
fs
stos
xchg
pop
push
insl
adc
insl
add
in
pusha
popa
test
decb
frstor
sti
aam
movsb
mov
lods
or
daa
in
add
test
cmp
sbb
daa
xchg
stos
mov
pop
arpl
pop
xor
imul
sub
idiv
inc
push
fmuls
test
stos
aad
outsb
or
add
sub
add
add
test
hlt
xor
sub
push
push
or
pop
or
jge
cmpsb
cwtl
adc
xor
dec
and
push
mov
or
push
or
dec
cli
pop
fsub
mov
or
add
and
mov
adc
add
fidivrl
test
or
sbb
shrl
add
test
jo
aaa
xchg
mov
xor
lret
out
call
int
test
into
mov
jne
or
push
xlat
pop
repz
adc
xchg
inc
stos
das
pop
les
pusha
or
movsb
cmp
sbb
xlat
andl
push
jp
inc
call
sub
movsl
es
adc
or
adc
sbb
ja
loopne
aas
lods
fisttpl
rcl
jge
test
popf
xchg
or
sub
incl
addr16
mov
pop
ljmp
jns
aam
sbb
mov
inc
pop
lret
outsb
cmp
jge
shrd
into
dec
stos
jne
xchg
xlat
paddusb
sbb
mov
sbb
inc
sbb
pop
in
mov
and
mov
aas
push
int3
es
push
in
xlat
xchg
test
jmp
sub
shlb
popf
xchg
movsl
or
sar
inc
decl
pushf
sbb
mov
xchg
es
cmp
popf
push
ljmp
or
jg
push
minps
dec
sti
mov
xor
mov
dec
pop
or
xor
out
and
xor
jae
push
addb
jg
test
ficoms
sti
ficompl
fidivrl
fbld
mov
rol
lods
jmp
mov
jg
inc
es
push
int3
xor
mov
pop
stos
andl
stos
lods
push
ja
cmpsb
xor
inc
push
pop
cmp
pushf
and
repnz
rorb
xchg
int3
adcl
sub
loopne
cmpsb
addr16
movsl
add
jge
add
leave
shl
movsl
rcrb
stos
sbb
jecxz
sbb
lock
clc
loope
cmp
mov
sub
jnp
pop
adc
mov
mov
xorl
in
enter
and
insl
sub
in
test
or
sbb
ja
xchg
inc
stos
cmpsl
mov
outsl
into
jbe
ljmp
in
imul
mov
fcomi
mov
cs
jge
dec
lea
push
es
cld
inc
pop
dec
rorb
lds
je
push
or
addr16
inc
movsb
xor
xchg
cmpsl
pop
sarb
push
cs
stos
mov
hlt
enter
lahf
inc
aad
mov
jbe
inc
jle
sbb
fistps
mov
out
cmp
in
lret
fmull
test
iret
push
mov
out
xor
dec
pop
pop
xor
adc
cmp
lock
ja
push
nop
xchg
jb
dec
pusha
dec
sub
inc
inc
cwtl
mov
notl
cs
cmp
dec
lods
ja
negl
xchg
mov
mov
mov
xor
sti
xchg
dec
cmp
ds
pusha
add
jl
cmpsb
test
mov
inc
push
fnsaves
mov
sub
inc
pop
aad
adc
or
cmp
or
popa
lds
pop
les
cld
adc
cmpsl
pop
pop
sub
popf
xchg
cmp
addl
or
ljmp
scas
das
pop
imul
pushf
filds
cmp
inc
js
add
mulb
jne
xor
ss
addb
sahf
lock
mov
shll
repnz
push
repz
jg
in
sbb
int
iret
rep
pop
ljmp
cmp
pusha
push
loop
scas
lcall
xor
sbb
daa
jmp
test
fimull
aam
ret
int
in
or
jmp
ds
aam
shll
addr16
shrl
and
cmp
lret
inc
das
mov
sarb
xorl
hlt
and
xchg
test
es
mov
sbb
jg
push
es
mov
nop
aas
in
shll
std
or
jmp
inc
insl
mov
or
push
ljmp
dec
mov
test
jb
mov
push
hlt
push
clc
or
repnz
dec
fmuls
inc
jno
add
mov
mov
jp
in
shr
repnz
cmp
fdivr
fucomp
in
stos
mov
lods
mov
out
xchg
mov
inc
pop
js
sub
insl
mov
push
lds
inc
dec
dec
insl
je
mov
popa
mov
iret
inc
jmp
rclb
out
jb
mov
cmp
out
aam
push
fdivrl
clc
rcrl
lods
mov
mov
push
enter
push
jae
fs
cmp
xchg
aad
rorl
sbb
jns
in
sbb
fists
jl
sbb
mov
inc
fs
jno
xchg
xrelease
fwait
dec
adc
js
jno
or
xchg
out
call
and
sbb
test
jbe
test
movsl
test
lret
xor
addl
sbb
sti
sbb
mov
and
push
cmc
stos
jmp
mov
push
pop
xor
nop
add
leave
test
mov
sbb
cmp
mov
data16
dec
sbbb
test
and
pop
dec
dec
mov
mov
fsubrs
add
dec
push
pop
mov
sub
xor
mov
sbb
mov
imul
out
sbb
shrl
lock
int
xor
push
insb
add
mulb
push
jno
lahf
xchg
inc
cmp
leave
dec
lock
push
xor
divb
inc
push
fistpll
adc
cmp
lret
dec
cmp
mov
xor
stos
out
push
scas
jle
in
xor
rclb
cmpsl
fwait
and
lcall
sub
jne
pop
cmp
pop
lock
lods
push
out
bound
mov
dec
jns
sti
xchg
lahf
scas
mov
cmp
cmc
popa
adc
mov
lds
pop
pop
mov
cmova
adc
xor
xor
push
in
test
xor
xchg
adc
aam
xchg
push
fnstenv
out
lcall
popf
shl
mov
lahf
xchg
and
pop
pop
gs
sbb
and
jg
fstl
push
out
repz
gs
sahf
daa
lret
dec
jmp
ljmp
test
ss
dec
mov
hlt
xorl
mov
jns
sbb
inc
test
push
clc
es
lret
movsl
or
idivb
cmp
lds
outsl
mov
mov
adc
mov
ds
xchg
dec
lods
cmp
rcrb
popa
in
push
mov
inc
in
mov
jnp
shl
sbb
mov
ret
push
add
stos
xchg
cmp
mov
inc
xchg
adc
jle
int
loopne
cli
sub
dec
push
sahf
out
cmpsl
out
adc
and
in
jl
sbb
shlb
insl
lods
ljmp
adc
pop
pop
pushf
outsl
outsb
mov
adc
push
jne
fidivrl
sub
aad
dec
into
mov
adc
add
push
pop
jl
jg
popf
mov
push
mov
fbstp
ljmp
ret
pushf
jge
or
jnp
mov
fldl
divl
and
lods
push
popa
push
mov
cmc
push
xor
fmull
add
mov
pop
hlt
sub
rorb
pop
fxch
add
enter
ret
xchg
or
cmp
rolb
inc
mov
ret
jno
nop
and
in
cmp
add
mov
leave
hlt
cli
rcrl
fmul
inc
mov
nop
xor
fs
mov
mov
and
ret
aad
je
jg
pop
test
mov
sbb
das
pop
subb
out
and
jnp
xor
fisubl
push
add
xor
mov
xacquire
xchg
dec
add
push
push
add
aam
iret
data16
and
popa
lds
stos
fldenv
jmp
push
push
adc
lock
cmpsb
xor
jnp
fldl
cmp
cmp
push
ljmp
xchg
xchg
dec
loope
jge
arpl
test
xor
aad
dec
xchg
fistps
sub
sub
out
push
inc
pusha
ficoml
pop
mov
ljmp
pusha
test
inc
push
xchg
push
lahf
mov
mov
imul
sbb
push
out
and
mov
inc
mov
mov
ds
arpl
aad
jl
arpl
xor
out
mov
push
bound
jg
inc
loop
inc
sbb
dec
in
dec
outsl
test
sub
sub
dec
mov
mov
dec
and
scas
xchg
loop
out
mov
mov
test
das
mov
cwtl
pushf
arpl
jl
fsubrl
sub
push
lods
out
or
push
inc
repz
cmp
stos
loopne
adc
jae
les
adc
push
loop
xchg
adc
sbb
orl
mov
out
adc
pop
ds
int3
rol
loopne
jp
aam
jmp
lds
dec
push
rcrl
inc
lds
out
cwtl
push
adc
push
loopne
movsb
sahf
and
iret
scas
inc
daa
mov
mov
mov
jle
sub
outsb
or
incb
mov
pop
xchg
jle
push
inc
lea
out
loop
in
cmp
adc
xchg
xchg
mov
iret
out
push
mov
cmpsb
xchg
jne
mov
push
ret
push
xchg
pop
lahf
ja
xchg
sub
mov
push
ret
xchg
ja
ss
jp
ret
mov
add
push
push
ss
mov
xchg
repnz
jo
jns
pop
jb
mov
imul
movsl
inc
jo
cltd
sbb
loope
mov
sbb
imul
imulb
movsb
adc
fnsave
aaa
addr16
jecxz
push
mov
and
mov
lret
cmc
into
pop
adc
push
jmp
ret
xor
xor
jmp
add
or
xor
jp
das
adc
cmpsl
xor
cmc
dec
pop
xchg
insl
out
sub
out
sahf
inc
xchg
std
mov
cltd
inc
mov
fisttpll
popf
andl
je
jbe
xor
mov
lds
aam
test
push
add
add
ret
cmc
sub
test
pop
test
aaa
aaa
jp
movsb
jb
test
inc
xor
cmp
lret
nop
ds
xchg
sub
inc
add
xchg
mov
xchg
repnz
add
fisttps
iret
test
stos
popf
xchg
or
sbb
mov
movsb
repz
xchg
aaa
insl
push
push
pop
sahf
arpl
in
inc
adc
dec
leave
cltd
mov
sbb
mov
pushf
adc
bound
xchg
popf
out
xor
pop
or
aas
add
sbb
fnsave
test
aad
shrl
or
je
or
jl
push
dec
mov
dec
stos
aam
in
xchg
inc
cmpsl
mov
sub
sub
cmpl
xor
mov
test
mov
xchg
adc
ljmp
mov
jbe
push
repnz
dec
dec
jnp
aas
rclb
mov
cmc
cmp
or
sub
cmc
lea
add
sbb
push
aaa
nopl
cmp
dec
lods
or
pop
sbb
mov
rcrb
xchg
xchg
fnstsw
sbb
loope
mov
test
dec
add
push
xchg
jle
mov
xor
mov
vxorpd
jmp
clc
pusha
into
cld
mov
imul
or
jg
call
fistpll
mov
jg
mov
mov
jp
lret
push
outsl
or
mov
push
sbb
repz
andb
sbb
fdiv
loop
movsl
dec
cmp
dec
roll
testl
cmp
js
fiaddl
dec
out
xchg
stc
out
cmpsl
movsb
ja
adc
sbb
lcall
xchg
icebp
divb
and
xchg
adc
stos
lods
loope
movsl
pop
lock
arpl
add
mov
lods
mov
cld
dec
and
sbb
cld
fstp
add
ret
mov
faddl
fcmovb
std
jno
or
mov
jbe
sub
dec
in
mov
ror
xchg
push
add
sbb
outsb
nop
xor
dec
mov
mulps
int
pushf
lret
push
repz
fadd
aam
sub
mov
enter
xchg
mov
mov
std
cmp
iret
add
mov
sbb
inc
test
daa
push
jecxz
xor
cmpsl
xlat
loopne
stos
pop
out
rcrb
mov
xchg
and
inc
xchg
dec
cld
nop
xlat
loop
stos
dec
cmp
pusha
mov
inc
mov
popf
dec
das
fidivrs
and
mov
mov
push
test
jecxz,pn
xlat
add
mov
sub
pop
insb
data16
js
adc
add
into
into
inc
dec
shl
mov
dec
incl
inc
in
fnstsw
mov
int
dec
dec
arpl
dec
fisubl
out
cmpl
add
std
imul
pop
jnp
repnz
lcall
aad
cmp
in
add
mov
pop
and
inc
mov
and
ret
test
sub
js
cwtl
pop
pop
cmp
scas
inc
mov
add
mov
and
int
mov
rolb
rcrb
orb
xchg
insb
and
xchg
mov
xchg
push
rclb
in
lds
femms
repnz
push
icebp
outsl
push
divb
fisttpl
clc
icebp
mov
push
and
cmpsl
sub
push
in
popf
cmc
js
push
xor
pop
sbb
insl
stc
mov
lea
cwtl
aaa
mov
mov
mov
adc
jnp
imul
push
out
ficoml
inc
sub
add
jl
xor
lret
pop
ja
ret
and
loop
lods
mov
mov
scas
or
mov
mulb
cmpsb
insl
or
cmp
sub
dec
aas
mov
push
sbb
dec
cmp
aad
push
pop
mov
push
pop
movsb
jb
adc
or
push
sub
data16
aaa
cs
xor
call
lods
adc
mov
pop
adc
mov
cmp
fmul
mov
xchg
push
mov
subl
jns
xchg
push
in
test
jo
inc
mov
sti
mov
dec
nop
mov
and
lock
adc
mov
cmp
mov
notl
scas
testb
lds
repnz
sarb
xor
adc
data16
inc
repz
push
cs
and
cli
in
fld
push
aaa
aam
push
dec
lds
pop
pop
pop
das
xor
mov
adc
inc
scas
sbb
sahf
mov
jp
pop
and
testb
out
pop
or
jno
jge
sbb
push
push
add
loope
mov
xchg
xorl
jg
aad
push
jbe
movsb
mulb
es
push
das
imul
out
add
dec
pop
push
xor
mov
mov
jb
cmp
xchg
xlat
inc
and
scas
push
aas
jae
xor
lahf
mov
rcrb
loope
xchg
xor
xor
jb
repz
mov
adc
fisttpll
jmp
push
jge
adc
push
or
add
and
push
out
add
inc
std
xchg
cwtl
test
or
xlat
or
inc
and
add
xchg
aaa
xchg
xchg
or
mov
stos
adcl
shl
cld
lret
push
negb
and
xor
std
lea
shl
mov
cmp
test
push
and
lret
sbb
sarl
add
push
xor
imul
sahf
fstl
dec
je
pushf
mov
movsl
push
dec
sub
mov
lret
enter
ds
pop
sbb
cmpb
pop
ror
inc
xchg
cmpsl
leave
mov
adc
mov
xor
out
cli
bound
pop
inc
sub
mov
or
lods
add
shlb
lods
jae
movsb
addr16
sub
xlat
jno
push
add
push
push
sbbl
mov
cmp
jae
icebp
repnz
sbb
inc
push
dec
dec
dec
mov
xchg
cld
mov
inc
sahf
xchg
ficomps
daa
gs
add
dec
xor
iret
and
sub
or
cld
xor
push
or
push
push
push
xchg
fnstcw
mov
mov
jp
inc
sbb
pop
test
pusha
cmc
cwtl
imul
loop
jecxz
test
ljmp
sbb
push
or
pop
lea
in
push
das
inc
xor
scas
mov
or
push
inc
scas
mov
add
jecxz
push
jno
stc
lea
ja
loop
stc
push
adc
xor
xchg
fidivrs
lret
es
jno
sahf
pushf
cmpsl
fsubr
mov
add
lea
xchg
test
arpl
xchg
mov
leave
sbb
cmpl
sbb
addr16
push
xchg
sub
or
adc
shlb
nop
jbe
fiadds
popl
popf
mov
add
pshufw
adc
mov
ss
add
sbb
jne
mov
mov
mov
out
mov
aad
insl
pop
daa
lock
sub
movb
cltd
into
test
test
cmpsl
mov
scas
sub
sahf
sbb
das
sbb
adc
faddl
adc
ret
cltd
mov
cs
scas
popa
or
adc
pop
in
test
lcall
cmp
jg
lret
adc
rorl
or
mov
xor
in
popf
xchg
mov
dec
scas
addr16
dec
sub
sbb
pop
sub
sarl
fdivl
aas
shl
push
add
and
ret
ficomps
mov
fistl
in
sbb
add
test
jmp
mov
popf
mov
into
dec
xchg
les
ja
cmp
imul
stos
rclb
pop
test
test
mov
mov
sti
xchg
lcall
push
fmuls
cmpsl
fidivrs
adc
int
sti
ffree
pushw
mov
test
je
sub
push
rorl
or
dec
cwtl
push
shl
in
mov
leave
jp
fiadds
mov
push
push
je
out
mov
dec
mov
sarb
xor
mov
mov
js
stos
sbb
push
pusha
shlb
push
cmp
lock
loope
lret
cli
push
in
jmp
sub
clc
mov
sysret
dec
xchg
je
lods
hlt
repz
xchg
into
adc
call
mov
push
out
or
dec
mov
loop
dec
pushl
jl
mov
sbb
and
adc
insb
rcrb
cmc
sar
sbb
jmp
loop
xchg
sub
lret
jl
adc
inc
scas
ret
jg
mov
cwtl
adc
int
cmp
and
adc
push
pop
sahf
sahf
loope
les
fwait
mov
jae
outsl
inc
dec
dec
dec
mov
ret
mov
push
sti
lea
inc
dec
mov
js
fmuls
mov
mov
and
adc
cmp
ja
and
jnp
hlt
lea
imul
cmp
xchg
int
pop
cmp
cmp
movsb
xchg
xor
arpl
loopne
lret
jne
test
aad
and
fwait
adc
popf
gs
push
inc
ficoml
outsl
pop
out
roll
out
pop
mov
xchg
or
stc
cmp
adc
fstpt
seta
movsl
or
ja
dec
sub
in
pop
out
jae
imull
inc
xchg
mov
mov
ja
lret
popf
pop
mov
mov
ljmp
dec
fnstsw
fs
and
arpl
jae
xor
sbb
mov
test
dec
je
cli
clc
or
scas
mov
inc
addr16
lock
test
add
fwait
xchg
adc
aad
shlb
ja
xchg
xor
sub
adc
sub
scas
aas
pop
push
or
sti
mov
fidivrl
adc
dec
out
in
int3
outsl
arpl
aam
jecxz
push
aas
addr16
in
in
sbb
pop
test
shll
sub
adc
pop
popl
insl
test
pop
lock
lods
mov
cmpsb
and
adc
enter
pop
jge
cmpsb
jp
or
out
rolb
jge
es
enter
repnz
xchg
fldl
adc
jb
mov
insl
loop
jo
setnp
arpl
xor
sub
sti
xchg
les
out
dec
sub
pop
add
xor
jo
mov
push
cmp
fsubl
push
in
jne
sbb
and
repnz
xor
inc
stos
mov
mov
repnz
outsl
mov
ja
inc
in
hlt
rcrb
inc
jecxz
repz
push
dec
pop
cmp
ret
lds
push
push
lahf
xchg
push
clc
cmc
xchg
ds
call
push
jge
cmpsb
and
pusha
xlat
call
repnz
and
xchg
jb
fwait
sbb
flds
aas
and
lock
xchg
sub
fisttpll
dec
sbb
and
fwait
dec
pop
pop
and
xchg
mov
adc
mov
dec
mov
ret
mov
les
push
les
xor
out
sbb
mov
mov
inc
inc
mov
and
out
inc
mov
sbb
or
fldl
mov
adc
fadds
cld
call
sbb
roll
and
aaa
cmp
dec
inc
push
mov
lods
sub
add
lcall
pop
addr16
popf
and
daa
mov
mov
dec
add
test
cmp
push
cli
add
and
nop
jge
lret
mov
rcrl
cltd
jo
push
sbb
icebp
cld
pop
lock
pop
cmc
mov
pop
je
xchg
mov
dec
popa
push
mov
iret
je
movsb
in
dec
sbb
adc
jmp
jno
sti
jle
push
push
ficoms
into
xor
or
jmp
pop
push
out
mov
and
rcr
jge
out
inc
dec
cmp
addl
and
ds
daa
adc
cmp
xchg
jmp
les
imul
pop
pop
mov
shld
jge
mov
mov
mov
in
loopne
mov
inc
arpl
repnz
mov
jp
dec
rcrb
adc
xor
inc
stos
js
or
mov
ja
pop
pop
int3
cs
iret
mov
lret
jnp
ja
pop
inc
fisubrl
jno
add
in
cmp
mov
fldt
sbb
xor
lret
shll
lcall
xor
jbe
ret
out
repz
icebp
jg
out
movsb
frstor
lahf
or
pop
push
lea
push
std
push
jecxz
mov
ja
subb
cwtl
sar
mov
test
mov
hlt
push
inc
rcrl
jmp
dec
sub
int
cmp
in
xchg
lea
int3
pop
push
mov
sub
sarl
inc
xor
inc
cld
cs
mov
mov
addr16
leave
rcll
mov
movl
sbb
shlb
ja
jp
push
push
mov
inc
shrb
mov
call
outsb
add
mov
inc
in
loopne
mov
xlat
into
lods
call
or
sbb
scas
pop
fwait
and
sbb
cld
stos
sbb
or
sub
or
repnz
repz
add
cmp
sbb
popf
or
jmp
push
inc
aaa
cmp
cmc
scas
push
shlb
jmp
out
test
adc
mov
xor
add
loop
fisttpl
lret
in
data16
push
rcll
clc
xor
xor
movsl
mov
rol
dec
jle
sarb
mov
in
pop
or
dec
ja
aas
dec
push
rorl
hlt
pop
inc
es
push
or
rcr
cmpsb
mov
xchg
mov
mov
push
adc
or
sub
shrl
inc
lods
outsb
cld
jns
mov
cmp
adc
xor
mov
lcall
mov
aaa
or
dec
inc
aaa
adc
jp
xor
push
pusha
cli
icebp
out
stc
push
sub
outsl
cmp
push
shll
ret
mov
mov
xchg
aas
lods
add
push
mov
jle
inc
inc
fwait
xchg
cmc
xchg
outsb
repz
and
mov
sarb
stos
mov
lea
shl
fsubl
pop
mov
js
imul
jp
je
pushf
pop
fwait
movsl
std
pop
sbb
cld
xchg
pop
loopne
cmpsl
sbb
fdivs
mov
sub
sub
add
call
sbb
xor
xchg
cmp
xor
daa
hlt
jb
je
jne
das
sub
andb
insb
jmp
inc
add
les
jmp
push
movsb
dec
add
mov
mov
cltd
das
loop
adcl
cmpsl
lahf
stc
cmp
call
sub
jl
jno
cmpsl
push
std
xor
xchg
cmp
pop
int3
test
inc
pop
xor
ret
fildl
out
jmp
js
test
fsubr
shll
pop
arpl
repnz
in
sub
nop
leave
adc
out
stos
in
pusha
push
push
inc
mov
dec
lret
adc
push
mov
cmp
xor
or
push
aas
cmp
cmp
inc
lret
sbb
mov
lds
ljmp
inc
enter
loope
mov
push
mov
inc
inc
and
andl
add
mov
cs
cmp
cltd
mov
add
and
fstps
pop
cmp
loope
adc
int3
cltd
daa
pushf
outsl
shll
sbb
mov
xor
dec
mov
sbb
jns
test
inc
mov
cmp
xor
in
lahf
mov
insb
mov
lret
sti
bound
dec
mov
adc
cld
pop
pop
cmc
ss
add
jmp
mov
lea
cmpsb
push
cmc
popa
cltd
jg
sbb
mov
add
subl
jmp
mov
push
std
lods
cld
dec
and
mov
adc
je
test
cmp
call
push
insb
jl
in
jl
sbb
rclb
xchg
add
sbb
stos
mov
int
aad
in
cmp
dec
fisubl
adc
mov
fs
mov
in
jge
adc
lea
ja
add
fmul
sbb
aaa
xchg
test
int
sbbb
adcb
pop
stos
imul
mov
jmp
jno
fdivrl
in
movsb
xor
inc
push
cmp
or
out
or
in
insb
out
sub
cld
pop
xchg
lods
lahf
call
mov
ja
pop
jmp
xor
js
pop
dec
xor
and
nop
repz
lcall
nop
sahf
mov
sti
inc
das
fs
fs
mov
push
adc
mov
iret
popa
je
jge
sbb
int3
xchg
jo
insl
jb
and
mov
in
and
pop
in
fstps
lock
mov
jmp
mov
sarl
jno
mov
test
lock
loop
cli
pushf
stos
sub
dec
xchg
out
mov
xor
clc
das
cld
inc
int3
sbb
mov
jnp
aad
testb
and
shll
push
adcl
dec
outsb
dec
pop
xchg
ret
pushf
inc
dec
fcmovnbe
pop
jp
or
ss
ficompl
into
js
ret
rcrl
repnz
sbb
popa
call
in
enter
outsl
cwtl
sub
imul
add
mov
rclb
push
loope
addr16
sarb
insl
sub
arpl
inc
sbb
fmull
jge
inc
cmp
inc
addr16
sub
mov
int3
cbtw
mov
ds
add
jno
add
dec
fidivrl
lret
mov
sub
push
lock
mov
sub
mov
sbb
mov
std
sub
cld
cmpsb
adc
ret
xrelease
push
arpl
or
inc
mov
aam
ja
jno
adc
mov
fst
pop
int3
push
les
jmp
addr16
xor
sarl
push
xchg
lock
andb
inc
push
mov
leave
mov
adc
dec
aad
mov
sbb
mov
or
je
imul
xor
shlb
sub
cmp
lods
ljmp
sbb
mov
push
cld
lods
sti
xlat
test
mov
mov
xchg
pop
fildl
sbb
mov
jo
cmpsb
addr16
sarl
int
mov
sbb
mov
in
inc
in
sti
movsl
push
test
shlb
sarl
inc
es
mov
xchg
xor
xor
lods
add
pop
aas
push
mov
out
in
xor
out
cs
inc
ret
lahf
stc
cvttps2pi
cmpsl
test
xlat
andl
arpl
loope
jle
jnp
sub
daa
testb
dec
push
cmp
adc
dec
in
xor
cmp
movsb
je
mov
add
lret
inc
mov
xor
stc
lds
push
cmp
idiv
push
xchg
cmp
sub
jae
fcoml
cmp
mov
iret
faddp
push
dec
xchg
sti
jp
push
aad
and
push
push
dec
testb
rcrl
fldcw
call
xor
push
daa
adcl
daa
push
mov
repnz
inc
rorb
sti
xchg
jne
inc
sbb
pop
jle
and
jnp
aad
mov
mov
jne
nop
inc
inc
pusha
in
pop
inc
ljmp
inc
mov
inc
mov
and
lret
sub
xor
dec
hlt
shr
or
push
dec
mov
push
arpl
dec
jle
insl
enter
stos
mov
dec
popf
scas
sub
hlt
dec
jg
xor
add
jo
les
xchg
mov
clc
in
inc
xor
adc
jmp
jae
ljmp
and
jg
pop
mov
xor
jp
pop
jo
mov
sub
mov
insl
outsb
push
lret
dec
fadds
mov
xor
enter
jb
cwtl
sub
cmp
adc
mov
pop
cmpsb
fldenv
bound
outsl
xchg
in
mov
push
pop
and
add
xchg
xchg
mov
fidivrs
adc
in
push
cmp
pop
sti
cmp
sub
sar
lods
pushf
jecxz
push
fldt
or
jp
insl
mov
push
mov
es
sub
sbb
dec
sub
and
mov
xchg
and
xchg
mov
jnp
divb
push
movsl
pusha
lds
inc
xlat
sarb
orb
fwait
pushf
inc
ljmp
mov
insl
mov
dec
ret
cmpsl
mov
mov
pop
dec
insl
push
dec
pop
bound
out
mov
imull
jns
loope
bound
mov
pop
and
push
dec
movsb
push
sbb
xlat
mov
xchg
cmp
mov
lods
inc
sbb
dec
daa
mov
mov
xchg
jbe
push
mov
mov
idivl
aad
fmull
stos
je
jno
das
jge
ret
mov
mov
sbb
xchg
add
lret
inc
insl
out
sbbb
inc
cmp
ss
sub
ljmp
test
inc
jle
stos
adc
mov
shrb
cmp
inc
bound
out
sbb
sahf
mov
inc
jnp
iret
add
rclb
sti
and
int
inc
outsl
in
arpl
pop
fwait
jmp
or
data16
pop
jle
and
jb
call
jb
cmp
in
inc
insb
repnz
push
mov
xor
cltd
aam
sti
pop
leave
lea
mov
test
mov
jb
xor
dec
popa
pop
push
std
inc
jbe
aam
cmpb
ljmp
push
xchg
mov
jne
ficompl
mov
fsubl
jmp
ljmp
mov
push
and
pop
pop
push
or
inc
popa
add
and
movsl
xchg
push
test
push
clc
scas
sub
imul
inc
xchg
pop
xchg
loope
sub
push
pop
rcrb
ja
jle
fs
push
idivl
mov
mov
fldcw
daa
add
imul
or
mov
cmpsb
lock
in
std
mov
sbb
stos
inc
shll
in
imul
gs
sub
pop
int3
cmpsb
enter
aad
iret
pop
pushf
dec
lcall
das
mov
push
filds
mov
rorl
ja
and
or
stos
mov
adc
in
daa
inc
or
vmptrst
cmp
lretw
inc
loope
loopne
gs
lds
adc
dec
jecxz
fwait
mov
push
outsb
xchg
xor
fpatan
call
push
push
pushf
or
mov
xchg
sub
and
xchg
repnz
addr16
clc
inc
add
test
jb
scas
xchg
bnd
jbe
decb
push
xor
mov
pop
xchg
pop
shlb
popf
outsb
mov
inc
out
sarl
fwait
push
xlat
add
push
int3
pop
mov
test
xor
bnd
mov
clc
hlt
push
mov
or
push
inc
push
enter
push
les
cmp
inc
or
pop
push
leave
call
lahf
push
mov
addl
xor
addr16
je
inc
pop
in
scas
xchg
leave
sbb
jo
cmpsl
es
cwtl
sub
pop
or
out
fmuls
popf
aas
push
hlt
add
cmpsl
out
xchg
into
std
mov
leave
lahf
sbb
mov
movsl
or
stos
cmp
and
loopne
je
cmp
adc
imul
sahf
pop
adc
push
pop
jl
cli
sti
movsl
jmp
inc
out
nop
imul
scas
ja
cmpb
mov
ja
mov
xchg
mov
shl
lcall
fstsw
cmp
neg
cmp
lods
sti
out
sbb
mov
sbb
lods
cmp
fnsave
push
int
data16
xchg
inc
adc
loop
and
call
adcl
mov
lds
and
out
aad
shr
sbb
movsb
sub
stos
mov
or
mov
stos
cmpsl
jge
fcmovnu
mov
jge
aam
in
stos
xchg
jnp
dec
lods
jmp
je
fisubl
mov
jl
mov
xor
or
pop
in
sub
in
mov
cmpl
add
mov
and
gs
push
add
sub
mov
push
clc
pop
mov
sub
and
shll
mov
sbb
mov
addr16
out
xchg
lret
add
mov
inc
jns
cmp
mov
sbb
jg
xor
cmpsb
xchg
add
out
sub
outsb
sbb
add
sub
cmp
fdivs
push
xorl
in
jmp
hlt
call
mov
clc
push
fistpll
pop
pop
mov
adc
subl
push
cli
stos
add
test
inc
or
fldt
in
movsb
ret
in
pop
mov
orb
jne
jl
testb
imul
adc
pop
rcll
loop
stos
out
cmc
mov
jle
mov
xchg
xor
or
mov
in
cmp
dec
out
fisttpll
jp
insb
cwtl
jno
mov
mov
or
or
hlt
aam
leave
out
scas
jmp
add
xchg
or
shll
push
pop
cmp
shrl
add
sub
add
sub
ret
sub
add
lahf
in
insl
xor
dec
ds
lock
jae
sub
sbb
or
popf
cli
test
stc
sbb
insl
cmpsl
leave
jmp
hlt
or
jnp
mov
xchg
scas
jnp
ja
out
fstpl
cld
ss
pop
adc
dec
inc
int3
stos
and
sbb
fs
jns
pop
lock
inc
cmpsl
movsl
scas
pop
xorl
pop
in
mov
stos
mov
in
xchg
inc
jne
adc
out
add
push
mov
add
dec
or
add
aaa
in
jbe
aaa
test
xchg
aam
gs
aaa
or
cs
xor
nop
cld
and
lds
inc
jmp
jmp
jecxz
pop
push
dec
inc
add
test
and
dec
mov
clc
fstps
mov
in
in
add
mov
and
stos
mov
dec
sbb
cmp
gs
ficoml
mov
and
hlt
fldl2t
pop
movsb
mov
adc
push
pop
cmp
xor
mov
and
jecxz
sahf
push
pusha
pop
cld
push
out
inc
jecxz
jo
into
mov
mov
cwtl
scas
mov
push
ja
imul
out
cltd
mov
sub
cmp
jno
cmp
mov
pop
fnsave
mov
pop
mov
xchg
out
xor
lods
daa
imul
aaa
sub
or
mov
data16
out
mov
jp
or
mov
aaa
pop
mov
stos
push
je
rcrl
addl
les
cs
mov
adcb
pop
and
inc
loopne
xor
dec
add
pop
out
or
js
push
jl
ficoml
in
cwtl
fcmovu
cltd
sahf
xor
scas
mov
scas
call
dec
inc
mov
frstor
mov
mov
out
jl
shll
rclb
mov
call
repz
into
dec
sti
cmp
cld
out
cmp
outsb
int3
xchg
scas
out
fdivl
fnsave
push
cmc
xor
loopne
jbe
sarl
adc
push
test
push
dec
xor
jmp
dec
xor
insl
hlt
mov
mov
daa
ss
mov
sbb
jnp
mov
cld
je
ja
nop
pushf
leave
imul
iret
scas
fcoms
frstor
pop
inc
jnp
xchg
jno
mov
add
in
lcall
movd
pop
out
shrb
pop
enter
pusha
cmp
jne
dec
lcall
mov
popa
je
pop
add
inc
fnsave
cmp
jmp
xor
push
ror
aad
xor
xorl
mov
mov
movsl
add
test
or
and
push
mov
lcall
mov
or
jecxz
or
cmpsb
movsb
lock
mov
xor
popf
xor
shlb
inc
cli
push
and
and
jns
mov
inc
ja
xchg
mov
mov
cli
dec
lcall
stc
push
ret
and
test
cmpl
or
in
cld
sub
mov
cmp
dec
mov
sub
sbb
ja
adc
inc
cmp
mov
ds
inc
jb
xor
nop
cwtl
out
movsl
push
aad
pop
xchg
enter
repz
fwait
pop
mov
mov
aaa
push
xchg
mov
add
add
test
or
fxch
push
arpl
mov
call
inc
imul
add
ret
push
bnd
filds
push
push
pop
mov
bound
push
fcmovb
pop
xor
jl
stos
sub
dec
inc
push
outsb
pusha
inc
out
dec
mov
hlt
xchg
add
repnz
shll
xor
xor
in
or
mov
mov
add
inc
fmull
data16
or
add
sub
sub
mov
sub
pop
dec
dec
imul
or
jo
mov
ret
fildll
or
iret
pop
push
xchg
arpl
mov
fs
mov
lods
insl
bound
aas
adc
dec
int3
insb
xorb
in
out
jmp
dec
sub
sbb
ja
sbb
stos
sbb
inc
bound
out
sub
lcall
in
in
xchg
pop
sub
mov
cmpsb
out
or
xchg
sbb
dec
hlt
fsubl
push
or
popf
jne
push
mov
adc
cmp
add
sub
pop
mov
or
shl
cmp
mov
push
mov
inc
push
jmp
adc
leave
push
cmpsl
xor
int3
into
xchg
dec
push
fucomp
xchg
std
cmpsb
int3
dec
push
into
mov
mov
xchg
loop
popa
adc
lock
mov
cmp
out
sbb
sbb
adc
iret
popf
cli
int
dec
mov
mov
test
nop
xor
sahf
lret
inc
addr16
xor
int3
daa
pop
jb
gs
int3
je
pop
les
add
icebp
inc
cltd
ds
stc
mov
fimuls
jo
jo
imul
mov
imul
jo
fisttps
cld
pop
xor
insb
sbb
out
popa
out
inc
insl
cmp
push
insl
aam
arpl
push
push
mov
cltd
mov
pop
icebp
loope
out
sub
push
sub
cmpsb
aam
rorb
adc
xchg
sub
mov
daa
aas
xor
fsts
mov
sbb
add
push
bound
pusha
sub
and
jmp
push
xchg
mov
mov
mov
scas
outsl
mov
sub
jo
loope
mov
repz
cld
les
sbb
xchg
into
sub
dec
cmp
int3
test
mov
lahf
lret
cmpsb
popa
lods
jmp
pop
mov
imul
divb
mov
mov
mov
dec
inc
sub
cmpsb
jo
loopne
adc
sbb
cltd
adc
sub
cmp
pop
add
push
lcall
push
mov
fimull
pusha
sub
and
mov
and
lods
int3
mov
or
xor
jl
dec
arpl
jno
mov
dec
cli
xlat
div
cwtl
lcall
xorb
pop
add
pop
dec
lcall
push
and
incb
mov
xor
and
std
mov
adc
push
jle
or
movsl
add
jae
mov
dec
sbb
movsl
lock
or
pop
ss
add
jns
fsubp
mov
fs
sti
ret
xor
nop
je
fcmovb
xchg
lret
sub
cmpsb
xor
mov
std
mov
cmp
jo
adc
test
ret
mov
jg
inc
andb
xchg
lock
lahf
inc
imul
push
stos
sbb
cwtl
clc
dec
test
sub
rcrl
push
xor
sbb
arpl
pushl
xchg
loope
inc
mov
sub
pop
xchg
data16
cltd
or
sbb
dec
pop
or
xor
or
clc
xor
or
rcrl
cwtl
lods
mov
sbb
mov
adc
test
mov
rolb
lea
xchg
pop
cld
pop
dec
cmpsb
gs
in
roll
jae
push
jmp
shrb
adc
xchg
stos
sbb
sub
mov
fnstsw
jnp
add
inc
lds
dec
test
jne
out
loop
push
inc
pop
iret
cs
insb
std
jmp
out
stos
mov
sti
stc
sbb
lret
pop
pop
fcmovb
push
xor
xchg
inc
or
aam
hlt
mov
xor
leave
lret
mov
cmp
add
mov
adc
or
push
pop
stc
cmp
rolb
lea
pop
loope
shrl
and
xchg
sahf
test
dec
sar
cmpsl
cld
cmc
je
sbb
psubq
in
push
setnp
ret
loop
mov
jo
push
das
pop
fmuls
cli
mov
dec
test
pop
imul
xchg
shlb
out
sbb
mov
sbbl
xor
leave
dec
insb
jo
mov
inc
push
jp
into
imul
andb
test
xor
shrb
loope
and
insl
test
push
cmp
out
xchg
jae
mov
lods
pop
lock
dec
dec
bnd
aad
mov
int
stos
or
lret
add
push
jmp
xchg
push
or
int3
loope
aaa
xor
andl
jp
scas
daa
push
enter
add
popa
fldenv
sbb
jp
mov
call
mov
fcomps
test
mov
fidivrl
fstpl
repz
inc
pop
fwait
rcrb
pop
sbb
notl
cmp
mov
jg
data16
add
inc
mov
adc
mov
jl
and
mov
imul
mov
xor
cmp
xchg
sahf
ja
push
dec
sub
sbb
mov
add
js
fcompl
xchg
inc
out
adc
push
iret
lds
mov
mov
sub
mov
leave
jp
push
cwtl
cmp
add
xchg
fistl
add
dec
dec
rcrb
fwait
xchg
nop
jmp
adcl
pop
jge
icebp
sahf
lods
pop
fst
outsl
or
push
add
fimuls
dec
mov
imul
shr
push
imul
test
insl
sbb
out
sub
das
ret
adc
or
imul
les
and
bound
and
push
adc
cmp
pusha
notb
add
push
mov
das
mov
cmp
mov
mov
mov
lret
lock
adc
mov
xor
int3
repnz
xor
aad
in
mov
popa
in
jp
xorl
les
out
jl
xor
inc
sbb
xor
or
mov
sbb
pop
jnp
mov
or
cmpsl
mov
lods
mov
jne
jmp
fistl
test
mov
aad
push
sbb
inc
aas
pop
jmp
leave
sti
out
out
in
xlat
insl
dec
aaa
add
push
lret
inc
mov
inc
cmp
jo
mov
cmp
into
outsl
fnstenv
push
jbe
jge
mov
xor
imul
in
lds
shlb
mov
push
jmp
mov
das
adc
lea
leave
fcmovne
rcll
mov
sbb
and
dec
test
xor
faddl
jo
and
hlt
mov
neg
outsb
push
or
mov
shl
pop
lds
xchg
sbb
mov
or
or
aad
jbe
and
shlb
sub
jnp
jns
sbb
cs
aam
fidivrs
mov
xor
pushf
inc
dec
push
fucom
sbb
out
pop
fs
xlat
movsl
xor
cltd
cmpsb
movsb
test
rcrb
adc
cltd
lods
fs
adc
fs
mov
push
push
sti
lcall
subl
xchg
cmc
ss
adc
add
cmp
outsl
mov
jns
test
lea
in
sub
jo
xchg
adc
mov
adcb
ds
insb
and
out
cmp
adc
loop
inc
shl
clc
sub
daa
repnz
and
jge
adc
xchg
cmpsl
int3
mov
cltd
mov
xchg
xlat
or
mov
repz
je
jp
ret
hlt
xchg
jl
sub
sbb
sub
xchg
pop
outsl
or
icebp
add
cmp
sub
clc
push
dec
jecxz
mov
xchg
mov
jmp
aaa
adc
mov
push
or
jo
push
outsl
jb
lea
lds
adc
adc
call
jp
int3
dec
dec
or
sbb
insb
push
cwtl
jbe
movsl
jae
or
jmp
shrb
dec
test
sub
in
or
into
xchg
add
push
outsb
mov
ret
inc
fdivrl
sbb
sbb
dec
testb
repz
ret
roll
cmpsl
cmpsb
push
sbb
stos
pop
cltd
stos
jns
mov
sub
jp
jge
es
dec
imul
aad
sti
call
test
outsb
xchg
aas
popa
insl
push
cld
repnz
jno
fiadds
outsb
sub
push
push
js
inc
inc
pop
les
mov
loope
fildll
rcr
enter
jl
inc
fcmovnb
mov
sbb
loope
das
mov
andl
or
push
popf
push
push
popa
movsb
sub
scas
mov
leave
adc
inc
pop
out
cmpsb
rol
inc
or
mov
cmpsb
aas
dec
fsubrs
sbb
jmp
js
lock
sbb
movsb
fwait
and
adc
jo
jbe
hlt
addr16
test
aaa
xchg
mov
lods
add
sub
mov
mov
add
xchg
xor
adc
mov
push
mov
hlt
addr16
inc
and
add
push
loopne
adc
movb
cmpsl
test
stos
or
push
aad
test
jnp
mov
mov
mov
mov
cmp
jmp
andb
in
cmp
adc
sbb
adc
rclb
cmp
jae
pop
int3
shlb
test
in
adc
adc
ljmp
adc
aaa
pushf
movsl
outsb
inc
jne
mov
or
testl
loopne
push
cmpsb
and
pop
mov
movsb
jp
iret
in
ficoms
and
loope
sbb
mov
mov
xchg
mov
aaa
stos
stc
arpl
cli
mov
nop
xchg
out
mov
xchg
fwait
rorl
sub
adc
and
orl
cmp
pop
loope
or
cmp
pushf
pop
mov
js
dec
imul
ficomps
aad
pusha
inc
test
or
push
mov
jge
repz
imul
int3
pop
loop
loop
ret
arpl
negb
mov
stos
movsb
inc
fcmovnbe
subl
cli
std
cmp
and
or
inc
cmp
jecxz
outsb
dec
lods
leave
adc
lret
pushf
in
dec
xor
sbb
stos
push
jp
push
movsl
mov
das
mov
pop
pop
shlb
out
cmp
mov
mov
add
fists
mov
xor
and
xchg
and
inc
mov
push
fiadds
rclb
mov
xor
rcl
roll
sbb
mov
aam
jae
sbb
mov
es
aam
insl
insb
mov
jb
sbb
mov
jle
push
dec
mov
sbb
mov
fsubl
divl
cmp
push
mov
jl
data16
in
sti
mov
add
push
hlt
mov
sbb
scas
pop
jbe
jmp
das
lods
cltd
dec
or
sti
inc
cmpl
icebp
mov
sub
stc
cmp
out
adc
mov
jae
dec
jno
fimuls
inc
push
mov
dec
sub
and
outsl
int
int
data16
push
int
mov
and
jmp
mov
and
fstpt
test
notl
addr16
xchg
mov
icebp
xor
push
xchg
push
imul
inc
xchg
fadd
pop
ljmp
jmp
mov
jns
inc
fs
frstor
out
sti
push
popl
mulb
pop
nop
shll
pop
and
int3
xor
mov
xchg
mov
test
jnp
rcl
add
bound
lahf
cltd
leave
in
mov
jle
add
sub
shlb
push
mov
dec
push
jecxz
or
scas
mov
mov
mov
arpl
addb
dec
and
adc
insl
loope
adc
or
jecxz
sbb
push
mov
cltd
jnp
das
cmp
or
jl
xor
sbb
scas
cli
mov
push
xchg
fcomip
push
and
imul
inc
shlb
mov
push
pop
or
pushf
inc
loope
stos
int
repnz
daa
sbb
loope
enter
pusha
shl
fcmovbe
cld
jae
mov
mulb
add
int
out
movsl
push
loopne
jb
xchg
and
dec
lds
and
frstor
movsb
andl
ds
xor
cmp
test
les
xchg
insl
sahf
jmp
and
loopne
adc
stos
push
cli
pop
push
into
xlat
aas
push
sub
jmp
dec
adc
int3
mov
push
out
insl
jae
dec
sub
sbb
mov
and
xchg
out
fnop
dec
push
rcrl
aaa
call
pop
nop
fistpl
bound
subl
or
mov
jbe
out
sub
xchg
sahf
sti
fimuls
mov
jne
test
clc
pop
outsb
stos
jl
leave
jae
pop
orb
jmp
loope
sbb
push
xlat
lea
pop
lret
or
scas
pop
out
jae
push
sbb
std
lea
jo
adc
sbb
xlat
xlat
out
arpl
aam
dec
push
leave
outsl
test
sbb
inc
out
cwtl
push
pop
lock
scas
std
sarl
jmp
pop
mov
cltd
outsl
ja
out
sbb
xor
xchg
sub
mov
push
rol
lods
sarb
sub
push
and
in
jns
fsubrl
pop
or
outsb
in
dec
sub
mov
subb
test
fbld
call
dec
pop
jp
inc
insl
add
popf
dec
xor
outsb
es
jns
js
cltd
xchg
aam
adc
gs
jne
pop
adc
repnz
sbb
mov
sti
xchg
cmp
xlat
scas
push
in
cmp
lock
add
push
pop
and
out
push
jge
stc
mov
into
cmc
dec
jnp
testl
add
repnz
ja
je
mov
loopne
fsubl
test
jb
fnsave
shr
adc
aas
mov
loope
dec
inc
je
shlb
xor
es
dec
arpl
dec
adc
in
mov
sub
shlb
cmp
dec
push
xchg
xchg
jl
jmp
sbbl
inc
dec
nop
pop
scas
dec
adc
push
je
mov
je
bound
int3
sub
inc
push
mov
or
mov
jle
pop
cs
adc
mov
and
fldcw
dec
repz
sbb
cmp
divb
mov
jbe
shlb
mov
jl
nop
fstpt
add
and
mov
or
cld
or
lret
add
sbb
call
or
or
pop
mov
push
mov
mov
mov
cmc
popf
pop
sbbb
or
push
addl
cs
mov
dec
xchg
push
popf
ja,pt
inc
outsl
pop
push
pop
cltd
fstl
xchg
push
mov
loope
leave
mov
lods
mov
insl
scas
sub
insb
loop
adc
cmp
roll
fcmovnu
testl
and
imul
and
std
aam
test
es
mov
sbb
std
lea
sub
dec
xchg
sbb
jge
testb
mov
ja
ds
hlt
hlt
out
dec
out
pop
cmc
fxch
or
stc
aas
mov
inc
jno
adc
call
adc
ud1
inc
pop
push
stc
out
and
mov
jo
inc
inc
call
xor
fsubs
je
iret
cmp
sub
jmp
xchg
xchg
mov
pusha
xchg
adc
or
or
adc
daa
pushf
jbe
adc
mov
mov
push
xchg
fdivrl
and
and
out
pop
mov
cmp
xor
add
daa
dec
les
pop
std
xlat
xchg
adc
adc
imul
inc
ficoml
dec
gs
mov
jl
stc
loope
subb
jecxz
jmp
adc
and
repz
mov
sub
sbbl
lret
xchg
movsb
jb
or
int3
sbb
push
cmp
outsb
sti
lods
cmp
add
int
jg
mov
push
lret
push
sbb
mov
call
and
dec
sub
sti
lcall
and
xor
rorl
jbe
mov
add
fists
les
outsb
stos
lods
adc
mov
scas
ljmp
jo
bswap
mov
xchg
dec
iret
or
mov
inc
and
mov
dec
ja
into
or
xchg
into
pop
loope
hlt
jmp
dec
mov
or
lds
jge
mov
fstl
das
es
stc
pop
arpl
loop
xchg
pop
xchg
in
sbb
fucomi
mov
fcmovne
aam
mov
inc
pop
lds
repnz
bound
pop
adcl
mov
sbb
xlat
sbb
push
dec
dec
bnd
mov
cmp
mov
mov
push
sbbl
lahf
dec
int
js
lcall
push
loopne
xor
inc
les
add
mov
cmp
inc
inc
push
mov
in
loope
mov
dec
addb
lea
stos
ret
cli
and
je
cmp
ret
inc
xor
adc
ljmp
adc
sbb
iret
mov
mov
add
mov
aam
lea
insb
popf
jb
pop
imul
fidivrs
shll
push
inc
xchg
roll
mov
jmp
shl
ret
iret
push
mov
movsl
int3
mov
adc
jnp
sbb
stc
aad
sbb
adc
rcrb
mov
loopne
lock
sbb
addr16
into
and
mov
dec
popf
push
xchg
pop
test
xor
outsl
enter
mov
in
insb
dec
mov
cmovns
mov
into
out
loope
je
repnz
mov
std
xor
mov
add
scas
and
loope
fxch
and
stos
popa
mov
fmul
scas
mov
fwait
pop
insl
mov
xchg
sub
aaa
xchg
lods
sti
or
jmp
jp
pop
lret
cmp
mov
push
sub
dec
adc
push
frstor
cltd
add
sbb
and
insl
hlt
js
adc
push
pop
loopne
jmp
inc
sub
xchg
inc
dec
out
das
int
cmp
cwtl
addr16
and
jbe
xor
or
jns
sahf
fsts
iret
dec
popa
std
lock
testl
out
adc
lock
jbe
sbb
dec
cmpsl
jns
xlat
pop
push
out
or
aam
dec
cmp
mov
icebp
into
inc
push
inc
sbb
push
pop
cmp
xorl
lcall
mov
bound
cwtl
lea
add
daa
sbbb
movsb
iret
sarl
push
jl
repnz
scas
fsubrl
pop
dec
xchg
das
lock
pop
add
push
fimull
jo
loop
pop
fnsave
pushf
adc
mov
inc
in
cltd
imul
sub
sbb
and
dec
mov
scas
adc
lock
pop
add
test
ret
clc
push
fisttpll
sbb
and
pop
ror
adc
sbb
enter
lret
lret
shl
popf
lds
testb
mov
das
sbb
jle
das
cmp
inc
ret
xchg
sbb
add
adc
test
sbb
out
and
add
or
repz
or
int
loop
test
outsb
ds
inc
adc
cmp
aam
sub
adc
sbb
movsb
fwait
xor
mov
jns
push
fs
jmp
mov
jg
ss
leave
xchg
mov
in
push
add
or
jbe
sbb
add
andb
cmpl
fwait
jns
xchg
enter
lock
test
int
or
mov
mov
dec
aam
pop
xchg
inc
in
imul
gs
wbinvd
xor
pop
pop
push
insl
jle
sub
xor
stos
js
or
pop
jnp
ret
std
cmp
out
inc
xor
imul
mov
movsb
das
popa
mov
dec
test
mov
js
dec
inc
dec
mov
xor
xor
adc
xor
or
lret
and
shll
into
mov
mov
sbb
adc
push
aam
leave
sub
scas
aad
adc
mov
fisubrs
and
jp
mov
popf
mov
nopl
xchg
mov
dec
insl
sbb
insl
or
popf
add
mov
lods
sub
cmp
inc
pop
xor
add
data16
fdivs
xchg
or
xor
inc
lods
bnd
ds
pop
adc
sbb
ret
xchg
cli
lods
divl
mov
sub
out
xchg
mov
mov
pop
pop
into
inc
es
shlb
fimuls
mov
xor
test
sbb
jb
test
cld
mov
push
xchg
iret
and
dec
mov
ret
add
mov
repnz
mov
mov
repnz
add
les
jo
jg
js
xor
dec
push
mov
lock
xchg
sub
xorb
fcmovnb
inc
movsl
sub
aas
mov
cmpsb
mov
mov
xchg
int
fwait
adcb
lock
cmpsl
pop
sub
and
movsl
jne
addr16
adc
xlat
mov
inc
cmp
mov
pushf
add
pop
pop
and
jne
lea
push
push
jl
push
cmpsb
push
push
inc
push
jecxz
and
in
icebp
incb
xor
shrl
push
shrb
insb
or
js
xchg
aas
je
cltd
or
daa
popa
mov
mov
imul
idivl
fs
dec
std
cltd
pop
jbe
daa
jle
movsb
adc
or
insb
fnstenv
aaa
gs
mov
rorl
addl
mov
into
decb
push
pop
sub
fbld
xchg
lods
sub
rcll
jb
or
jno
popf
or
cli
in
es
inc
adc
repnz
pop
std
mov
jp
push
sbb
add
cltd
jo
fisubrl
inc
rcr
dec
xchg
idivb
mov
int3
outsb
pop
xchg
inc
stos
xor
enter
xchg
adc
mov
and
dec
clc
addr16
inc
push
out
subb
les
bound
stc
jl
jge
loopne
adc
cwtl
stos
inc
aas
push
xor
test
xor
add
enter
mov
loop
leave
dec
cs
jne
jg
pop
adc
pop
lods
cmp
js
xor
push
or
push
ja
inc
ljmp
stos
int3
cmp
les
imul
mov
aad
jo
dec
out
popf
repz
incl
scas
xchg
repnz
int
or
outsb
lock
popf
sbb
dec
or
int
cmp
mov
mov
mov
fadds
sti
add
pop
paddq
imul
ja
into
add
cli
or
aad
or
fbstp
stc
insb
jl
mov
les
adc
sbb
jecxz
add
les
sti
test
xor
call
dec
jb
and
dec
lock
imulb
xchg
cmp
cmpsl
ss
ror
dec
sbb
sahf
and
adc
jecxz
shlb
aad
adc
popa
das
sti
lret
shlb
lods
mov
leave
lahf
xorl
cmp
iret
push
ret
js
add
scas
test
sub
sbb
mov
fldenv
push
icebp
jbe
gs
outsl
data16
inc
push
lahf
pushf
fstps
out
imul
aam
xchg
in
dec
pop
int3
mov
in
das
pop
or
lret
add
aad
mov
sbb
shl
out
jne
arpl
push
stc
gs
pop
lods
pop
push
andb
sub
xor
cmpsl
pop
enter
jno
and
je
lods
jle
lock
add
xchg
push
sub
sbb
movsb
sbb
mov
add
cltd
scas
jo
xor
jg
adcl
scas
xchg
jbe
dec
lret
jmp
out
adc
aad
cli
mov
gs
movsl
mov
push
std
hlt
push
sahf
test
pop
orb
xor
rolb
jg
jp
imul
out
push
jp
icebp
or
shll
and
xor
fmuls
jl
cmp
inc
add
xor
and
fs
push
cmp
inc
pop
pop
and
xor
mov
sub
mov
pop
xor
pop
out
inc
xorb
add
std
sbb
lods
std
mov
mov
lahf
pop
pusha
inc
xor
xlat
scas
in
mov
hlt
ljmp
insb
dec
adc
popa
inc
ss
xchg
pop
lock
lea
fistpl
adc
hlt
or
les
bound
clc
daa
cli
aaa
je
inc
jp
aaa
sbb
in
leave
add
stc
and
pushf
loop
fsts
jbe
xor
mov
cmp
push
xorl
frstor
bound
push
inc
or
jnp
sbb
pop
jae
mov
ret
les
cmpsb
jnp
negb
repz
adc
std
repnz
test
sub
add
rorl
call
and
fisubs
shlb
ret
int3
test
ret
jnp
or
add
std
sbb
outsl
sub
movsl
push
sbb
fs
in
inc
test
rcrb
test
loope
je
sahf
adc
pop
mov
notl
inc
jp
lahf
dec
int3
sbb
popf
push
mov
scas
scas
xchg
pop
aaa
lcall
je
sub
push
add
inc
add
jge
pop
dec
sahf
dec
insl
jmp
mov
cmp
in
xor
sub
popa
shlb
ret
lea
mov
call
call
in
jmp
ret
and
out
jnp
cld
pop
ret
and
loop
mov
repnz
roll
jns
xchg
jg
mov
repz
mov
fdivrl
push
mov
scas
mov
xor
cld
adc
sub
inc
stos
loopne
xchg
mov
or
dec
or
adc
dec
push
xchg
push
cmp
cmp
and
aad
test
out
cmp
mov
sbb
shll
jo
or
xor
sti
pop
stos
fisttps
sbb
js
sub
out
and
rorl
mov
mov
ds
adc
pop
sub
push
inc
mov
xlat
jge
test
jb
mov
lret
adc
sbb
lcall
xlat
jns
or
jb
icebp
lds
mov
add
dec
ja
xor
push
xchg
ret
jl
push
rcrl
stos
fisubl
rcl
mov
pop
xchg
jge
and
je
mov
mov
and
mov
out
jmp
xchg
push
pushf
insb
add
lcall
addr16
push
dec
cmp
dec
jge
mulb
cli
xor
lds
sbb
sbb
bnd
push
lahf
cmp
lret
or
xor
pop
cmpsb
in
cwtl
das
data16
inc
stos
or
fildll
push
int
aas
adc
push
dec
dec
xchg
jecxz
dec
mov
scas
andb
mov
in
faddl
pop
out
les
jecxz
in
ljmp
imul
enter
iret
lcall
jg
jl
es
push
loop
mov
sub
dec
mov
jecxz
dec
push
aas
xor
pop
push
sub
mul
in
xchg
sub
sub
dec
sti
pop
mov
out
cld
mov
mov
or
pop
mov
sub
pop
push
scas
mov
cmc
push
call
push
pop
mov
cli
lods
jnp
outsl
movsb
bound
jbe
nop
sbb
lea
mov
xor
inc
push
ljmp
mov
cmc
imul
es
and
popl
xor
mov
jecxz
stos
pop
je,pt
mov
movsb
mov
xchg
lods
pop
sub
and
jnp
jns
dec
mov
jbe
mov
mov
dec
mov
mov
divl
or
jl
stos
and
leave
xor
xchg
lcall
lea
inc
imul
jmp
xor
fsubl
scas
shl
mov
jb
loop
cmpsl
lahf
repz
jmp
push
xlat
loopne
mov
lods
xchg
and
jns
inc
inc
es
iret
add
mov
icebp
xchg
orl
out
aam
cmp
out
cmc
loopne
out
mov
stos
mov
jmp
cmp
std
jg
jg
add
cmp
sbb
inc
inc
xor
and
or
mov
push
outsl
dec
test
fs
int
out
mov
stos
push
nop
pop
sahf
pop
andb
dec
xchg
xor
xchg
arpl
xor
mov
addr16
cli
lahf
pop
push
push
ds
das
out
call
popf
lock
out
xor
negb
xor
ficompl
shrb
cli
xor
or
pop
or
and
push
insb
sub
jns
adc
sbb
shlb
lods
bndstx
ss
jns
outsb
mov
das
shlb
push
xor
bound
add
and
das
call
push
call
pop
andl
pusha
je
mov
or
xchg
add
jp
sub
xchg
pushl
shll
xchg
mov
mov
jae
ret
push
leave
mov
mov
into
in
mov
sub
lret
xchg
mov
lds
sub
idivb
test
mov
arpl
mov
xchg
add
push
inc
add
je
call
inc
xor
movsl
push
cmpsb
sbb
jg
idivl
and
add
in
popa
adc
push
out
ret
push
fildll
jmp
in
outsb
jo
push
mov
jo
inc
popa
or
cli
mov
sub
dec
mov
je
cli
out
adc
orl
or
rcll
mov
jle
dec
adc
lods
ja
ljmp
outsl
xchg
xor
daa
mov
mov
cmpsb
aas
or
idivl
outsl
ret
sub
push
aam
mov
fsubr
pop
xchg
das
jp
cmpsb
jl
jmp
pop
clc
or
dec
cmc
pop
xchg
pop
loop
iret
mov
sti
fnstenv
aad
mov
rcl
in
int
mov
dec
in
xor
test
mov
mov
cmc
jo
clc
loopne
or
shrb
jp
xor
lahf
mov
hlt
and
aad
pusha
into
add
xor
call
xchg
dec
lds
add
pop
pusha
pop
movsb
jne
jno
sub
or
je
mov
sahf
dec
sub
push
cs
mov
pop
ret
repz
xchg
mov
fldt
mov
inc
inc
mov
mov
and
or
mov
push
hlt
xchg
das
push
cmp
or
faddl
in
inc
pop
mov
lea
insl
hlt
fidivrl
rol
aad
cmpsb
xchg
or
mov
scas
push
xchg
das
aam
imul
adc
fcomps
daa
fldenv
aam
mov
add
mov
out
push
ret
or
das
out
imul
sub
dec
pop
or
cmc
loopne
fcoms
mov
dec
or
ljmp
sub
jne
aas
push
mov
or
cwtl
pop
loope
jmp
rcr
scas
int
cli
pop
pop
fildll
add
rcrb
cmp
push
push
das
gs
rcr
sbb
bound
sub
dec
pop
adc
iret
xor
aas
sub
inc
adc
mov
movsb
loop
add
jle
dec
and
clc
jg
pop
xchg
xor
nop
cmp
lret
xchg
test
out
lods
stc
push
int
jb
xor
pop
into
sub
lcall
adcl
sbb
clc
mov
inc
jmp
rcr
xor
mov
xchg
and
lds
lret
cltd
fsts
and
push
jno,pn
xor
or
scas
push
mov
inc
mov
ja
mov
jg
nop
xor
bnd
ret
cmp
push
aaa
cs
stos
mov
xorb
inc
dec
cwtl
pusha
push
je
outsl
dec
or
xor
adc
or
in
cmp
pop
cld
jne
clc
int
sbb
pop
dec
test
pop
dec
cmpsb
inc
imul
out
insb
aam
clc
dec
pop
imul
inc
scas
bound
imul
fldt
jbe
xor
scas
popf
push
or
mov
adc
push
ja
xor
fnstenv
or
xchg
lock
jmp
inc
das
mov
and
jns
and
pop
inc
push
adc
lahf
hlt
sub
jle
mov
dec
stos
js
jo
stos
dec
adcl
ljmp
cmp
ret
mov
and
mov
mov
mov
lods
pop
mov
out
fistpl
jmp
and
dec
test
mov
adc
ret
orl
adc
push
sbb
jae
jno
xchg
out
inc
shl
pop
push
mov
inc
push
xor
bound
out
inc
hlt
or
in
push
sub
sbb
or
jae
cmp
xchg
jge
aas
arpl
mov
add
add
add
stos
rcrb
mov
data16
jo
fsubp
inc
mov
push
fwait
icebp
pop
scas
push
xchg
jo
jno
aaa
outsb
mov
pop
stos
lods
lea
mov
jg
adc
mov
add
negl
cmc
imulb
jno
test
imul
mov
test
xchg
jge
es
iret
add
aaa
jnp
inc
xor
mov
sub
cltd
or
jb
mov
jno
ss
or
push
jp
outsb
add
dec
inc
and
and
int
cli
mov
xchg
add
scas
or
lods
outsb
or
sub
sbb
movsb
mov
pop
fisttpl
jge
jae
insb
ljmp
push
faddp
jle
ja
inc
dec
ss
jl
into
dec
mov
jecxz
aad
fnstsw
out
shll
fs
mov
mov
sbbl
push
int3
imul
lea
dec
and
lret
lock
pop
add
xchg
insb
inc
stos
or
inc
inc
add
inc
cmp
movsb
insb
movsb
fnsave
inc
gs
dec
dec
add
mov
je
dec
cmpb
arpl
cmp
fstps
repnz
aas
mov
incl
sti
add
xor
std
pop
push
scas
ret
mov
mov
lret
or
add
repnz
dec
aaa
popa
inc
call
xchg
in
loop
mov
mov
ja
dec
inc
or
clc
cmp
inc
imull
adc
fdivrp
lcall
cmc
mov
mov
repnz
sub
pop
insb
mov
mov
sub
sbb
add
hlt
and
lret
sub
or
rclb
ror
loop
bound
mov
aaa
cli
mov
fwait
mov
aas
fbld
inc
gs
or
rcr
stc
add
in
and
and
in
in
add
pop
and
out
ljmp
pusha
mov
and
cs
inc
mov
movsl
rcl
dec
adc
xchg
fstps
fwait
mov
push
xor
data16
addr16
fcmovnu
pop
fmulp
faddl
lahf
nop
dec
cmc
xchg
xlat
stos
jmp
lahf
inc
push
repnz
lcall
cltd
clc
add
lcall
in
mov
and
cwtl
dec
stos
test
cmp
out
jb
movsb
imul
jge
loope
scas
pop
popa
orb
jno
pushf
and
pop
addr16
test
xchg
cmp
add
gs
ret
aas
dec
push
loopne
aad
pop
lahf
stos
fcmovnu
dec
xchg
jle
lret
or
mov
mov
imul
mov
dec
imul
shl
insl
sub
insb
daa
sbb
outsb
or
sub
xor
sti
outsl
fnstsw
ljmp
push
pop
push
ficoms
clc
and
inc
int
xchg
sbb
aad
scas
jns
icebp
mov
pop
bound
sahf
mov
jecxz
test
xor
mov
xchg
mov
jns
popf
ss
stos
das
test
sbb
aaa
loope
inc
stos
xchg
push
jmp
call
and
fdivl
sub
cmp
shll
lahf
sbb
imul
jmp
lahf
inc
lds
sbb
mov
pop
sbb
jb
popa
rorb
movsl
les
daa
push
mov
ljmp
xorb
push
scas
or
lods
in
nop
dec
sbb
fiaddl
jmp
lcall
in
inc
repz
jae
mov
xor
loop
inc
subb
mov
jl
repz
imul
mov
jp
xchg
negb
cli
orl
mov
jp
add
sub
das
inc
mov
mov
jmp
jne
push
pop
int3
cs
xchg
rolb
xlat
pop
pop
xor
cltd
out
xchg
cmpsb
mov
ds
xchg
repz
shll
in
popf
ljmp
leave
ss
jnp
adc
enter
sbb
xchg
or
lock
sbb
les
mov
iret
loop
adc
lret
mov
mov
int3
test
pop
xchg
xchg
inc
shll
nop
mov
pop
xor
outsb
mov
cltd
stos
and
mov
jl
inc
or
inc
mov
cltd
jne
leave
test
inc
stos
mov
ds
inc
mov
cmp
dec
rcr
inc
pop
and
pop
hlt
js
aaa
fists
loop
repz
sbb
push
jae
xchg
lock
out
push
mov
mov
addb
test
pop
repz
inc
fildl
in
jne
and
mov
xor
cltd
repnz
mov
aam
mov
push
cwtl
movsl
and
ret
pop
inc
dec
xchg
out
sbb
mov
inc
lods
dec
stc
leave
pop
std
push
mov
xor
test
adc
cmp
fldl
xchg
push
mov
mov
sbb
sub
ss
or
hlt
imul
call
dec
push
mov
sub
and
xchg
and
push
fadd
repnz
xchg
icebp
fcomps
sbb
fisttpl
mov
mov
sti
aad
xor
sbbl
and
push
xor
push
hlt
movsb
imull
popa
inc
repz
push
pop
pusha
movsl
cmp
pop
adc
cmpsb
pop
lods
lods
lret
pusha
loop
fwait
sbb
xlat
test
push
test
hlt
mov
mov
push
mov
cmc
adc
loop
aam
jmp
les
loopne
and
movsb
ja
mov
add
pop
inc
sub
push
daa
dec
xor
loope
adc
insb
mov
cwtl
or
imul
call
cmp
in
cld
sub
mov
mov
inc
sbb
outsb
in
lea
and
sub
into
stc
inc
or
js
cli
js
inc
xor
inc
rcr
addr16
dec
sti
mov
fidivs
in
mov
sbb
lods
adc
lret
les
arpl
or
cmp
and
adc
call
xchg
cmp
std
mov
mov
cmp
jmp
xor
inc
jecxz
sbb
jbe
push
add
dec
outsl
add
mov
mov
ds
mov
mov
cmovnp
sub
loop
scas
fs
out
subb
rol
inc
mov
cwtl
stos
and
lcall
xor
dec
push
jbe
sub
fcompl
sbb
mov
mov
cmp
jae
fucomip
fisubrs
pop
and
add
bound
ja
xor
ficoms
pop
inc
js
xor
cmp
imul
cmpsb
movl
iret
repz
ja
ret
inc
xor
in
add
les
sahf
pop
push
mov
pop
lahf
mov
sbb
sub
cld
cmp
shll
std
xor
mov
xorl
nop
push
jbe
out
cmp
mov
iret
adc
or
ss
mov
mov
lahf
push
mov
in
and
rcrl
cmc
jnp
jg
push
mov
loopne
shll
in
xchg
push
and
inc
adc
xor
push
loopne
push
popa
mov
cli
inc
dec
stos
pop
outsl
sbb
insb
mov
dec
inc
or
jle
adc
ss
leave
mov
loopne
cmp
sbb
push
stos
push
cli
mov
test
out
jl
gs
mov
rolb
stos
dec
pushf
scas
movb
push
and
icebp
popa
shl
cmp
dec
out
xchg
mov
add
push
testl
out
xchg
add
inc
cmpsb
fisttpll
or
push
nop
mov
std
or
cld
jg
lahf
xchg
pop
mov
test
test
xchg
into
stos
cmp
pop
inc
fwait
inc
inc
push
in
aad
int
incl
sti
shlb
scas
pop
push
cmp
mov
ljmp
incb
es
pop
ret
pop
and
mov
mov
fbstp
enter
sub
cmp
cmp
cmpsb
fsqrt
sub
addr16
repnz
jb
stos
jo
cmp
and
inc
mov
test
nop
mov
mov
cmpb
mov
cmp
mov
mov
and
dec
mov
mov
and
inc
fidivrs
or
jnp
filds
pop
cli
or
sbb
jo
cmp
jl
imul
rcrl
inc
rcl
in
pop
add
test
xor
orl
inc
test
stc
add
add
fildl
shr
inc
call
sbb
cmp
mov
and
fcomip
cmc
or
sub
lods
stos
pop
addr16
in
call
add
mov
sub
hlt
pop
in
mov
xchg
sub
mov
stc
aaa
mov
push
sub
pop
adc
incb
frstor
cltd
add
jle
fistpll
mov
js
or
pusha
aaa
mov
lods
test
xor
add
pop
pop
jo
out
movsb
push
sub
rclb
sub
ret
pop
icebp
push
test
xchg
lds
stos
pop
add
sbb
cmpsl
add
inc
loopne
rorl
xchg
leave
jle
call
bound
sahf
mov
in
ja
mov
outsb
loop
enter
jns
push
adc
sub
mov
xchg
js
add
add
mov
mov
or
cmpsb
pop
ljmp
lock
mov
inc
sbb
xchg
xchg
dec
pop
les
inc
sub
xchg
ds
mov
sti
shlb
arpl
test
xchg
ret
movsl
and
adc
xor
arpl
dec
movsl
jle
idivb
sbb
js
mul
xchg
scas
sub
pop
out
xchg
xchg
fadd
mov
imul
push
fiaddl
and
shrl
mov
inc
jae
sbb
push
pop
mov
sysexit
push
out
push
mov
pop
dec
mov
std
clc
cmp
cld
pop
or
inc
xor
movsl
fsub
add
push
adc
jne
mov
jb
ret
lret
push
sub
jb
out
adc
xchg
mov
stos
pop
sbb
pushf
ficoml
int
ficomps
mov
or
mov
xchg
xor
dec
nop
ljmp
inc
lds
push
dec
leave
lret
mov
jmp
xchg
adc
aam
xchg
movsb
xor
push
mov
call
mov
push
xlat
mov
mov
jp
dec
int
clc
pop
sbb
popa
cmpsb
and
lret
mov
pop
insl
shrl
scas
cltd
icebp
or
push
and
sub
aaa
jno
inc
and
hlt
push
jg
test
scas
add
int3
jmp
ja
stos
fisubl
or
xchg
outsl
add
or
rolb
mov
ds
or
cmpsl
or
cld
pop
pop
cmp
cmpsl
xlat
jns
cs
lds
adc
dec
jne
jmp
sti
loop
push
inc
push
shll
push
orb
lock
add
movsl
cmp
in
mov
add
sub
sub
adc
cs
addr16
add
and
fcmovu
inc
xor
fldenv
insl
mov
jno
adc
mov
and
in
dec
hlt
inc
inc
xchg
fwait
mov
lods
fmull
or
push
sbb
lds
sar
jmp
icebp
mov
daa
push
or
xor
jp
fisubrs
cmpsl
cmp
lds
xor
pop
push
push
pop
cltd
aas
push
sub
adc
xchg
pop
test
push
dec
in
and
jae
xlat
inc
lcall
int3
xor
lock
shrb
or
daa
and
or
inc
mov
push
fiaddl
sbb
pop
sbb
fmull
mov
ret
push
fildl
lahf
xlat
dec
jmp
sbb
scas
xor
cmc
xchg
fldl
xchg
scas
sub
push
into
stos
mov
mov
aad
mov
call
fcmovb
fiadds
jb
aam
pusha
xchg
ret
movsb
inc
xor
imul
push
mov
cmp
je
pop
xchg
das
add
xor
lods
lock
pushf
incl
repnz
lods
in
fmuls
mov
iret
inc
xlat
xchg
ja
loopne
or
xor
lret
aam
int3
test
adc
fstps
das
xor
mov
pop
push
or
and
subl
cwtl
int3
xchg
jmp
jmp
xchg
out
mov
sbb
sbb
rep
inc
outsb
push
xchg
xor
mov
jno
daa
adc
push
movsb
mov
jo
in
popa
mov
rcl
pushf
repnz
icebp
add
push
cwtl
adc
rcrb
dec
mov
out
jnp
push
inc
jl
shlb
les
repnz
inc
sar
scas
adc
dec
xor
ja
data16
into
sub
or
sbb
fsubl
aad
test
ficompl
arpl
ljmp
sbb
xor
inc
aaa
or
xchg
das
dec
rol
mov
mov
cmpsl
pop
dec
push
mov
mov
les
push
cmp
mov
ret
movsb
cmp
in
addr16
lret
sub
movb
jae
test
in
jge
xchg
mov
sbb
xchg
fs
xor
cmp
lds
stc
movsl
dec
pop
and
nop
int
or
int
cmp
ss
shl
push
fldenv
and
call
mov
adc
pop
shrl
fcompl
outsb
lahf
inc
dec
jbe
lods
jbe
mov
jnp
dec
mov
pushf
and
dec
xor
aam
addr16
cwtl
xor
push
out
in
mov
cld
int
jae
jbe
inc
mov
leave
cmpsl
or
shll
mov
loopne
ja
sub
pop
push
icebp
xor
push
mov
idivb
add
call
push
cmpsb
enter
leave
shl
aas
add
sbb
jns
pop
psrld
out
mov
ficoml
jb
xor
lods
out
jns
test
push
or
mov
cmp
cmp
jbe
in
outsb
pusha
pop
mov
mov
enter
idivb
mov
pop
idivl
inc
inc
jle
push
dec
std
cwtl
adc
fnstsw
out
mov
mov
out
inc
sub
es
sub
shlb
iret
and
xchg
jle
mov
insb
movsb
movsl
lods
fwait
add
xor
and
aad
fbld
lea
mov
aad
nop
insl
push
push
inc
sti
std
jns
adc
sbb
mov
mov
iret
mov
dec
orb
pusha
push
lret
dec
pop
or
scas
jmp
adc
push
or
stos
ret
or
imul
xchg
movsl
ret
and
scas
push
push
push
add
roll
and
incb
dec
icebp
rcrl
mov
xor
repnz
xor
mov
outsb
jb
js
xor
jmp
cwtl
and
cwtl
out
lea
push
movsb
mov
pop
adc
sub
sti
xchg
mov
lret
pop
into
mov
das
cmp
movl
std
cmp
arpl
rorl
stc
mov
mov
pop
les
sub
rorb
push
mov
mov
mov
ror
popa
movsl
pushf
and
mov
push
inc
shr
ret
sub
ss
add
ss
jg
and
pop
ljmp
mov
dec
or
adc
push
mov
aas
jnp
rol
pop
add
repz
or
out
lods
xchg
aad
add
clc
lcall
imul
popa
cmp
ret
fistps
dec
add
pop
or
ret
jmp
loopne
inc
testl
push
xchg
clc
fstpl
fisttpl
sub
mov
movsb
jmp
add
movsb
fs
mov
cmp
adc
insl
push
inc
jg
mov
out
das
adc
inc
jns
stos
ljmp
clc
lret
outsl
es
stos
dec
push
pop
inc
or
movsl
jno
jo
push
psubb
int3
pop
xchg
ret
ret
cli
cwtl
lahf
push
mov
or
sbbb
push
pushl
or
sahf
lds
sub
cli
xchg
jge
and
inc
cmp
and
mov
and
cs
cmpsl
mov
sub
mov
lock
mov
cmpsb
mov
arpl
sub
mov
leave
jge
xchg
mov
mov
cmp
mov
mov
pop
cmp
xlat
pmulhuw
pop
out
fmuls
leave
add
and
repz
adcb
lock
out
push
dec
nop
insb
pop
mov
mov
dec
jp
mov
jbe
imul
insb
or
mov
adc
xchg
or
xchg
rorl
pop
popa
xchg
inc
add
cs
fdivl
mov
in
push
or
ja
jbe
nop
ja
iret
mov
loope
nop
js
xchg
aad
cmp
xchg
nop
and
xchg
jnp
sarl
loopne
cmp
test
dec
lret
pop
inc
xchg
cmpsb
repz
and
adc
or
xchg
push
jnp
fs
in
mov
nop
mov
mov
insl
repnz
jg
push
sub
sbb
mov
fwait
sbb
repnz
pop
stc
jae
aad
js
in
jb
aas
sub
scas
xor
push
ss
inc
fidivl
pop
cmp
pop
sub
sbb
mov
jno
mov
xchg
push
inc
add
xlat
dec
mov
mov
xor
in
or
mov
inc
nop
push
sub
jae
lret
xchg
adc
mov
clc
push
push
pop
movsb
mov
stc
push
cmp
add
ds
cmpsb
vpunpcklwd
pop
movsl
fidivs
xor
push
pop
mov
sub
push
xorl
dec
enter
addr16
jno
pop
cmpsb
je
sub
xchg
push
shrl
sbb
sahf
inc
aaa
loopne
fstpt
cltd
mov
fcmovbe
pop
pop
pop
dec
outsb
aas
test
mov
xchg
sbb
mov
loop
fnstenv
mov
das
repz
jbe
sbb
subb
push
or
mov
testb
pusha
xor
adc
pop
xchg
push
sbb
movsb
jp
sbb
mov
adc
dec
enter
insb
xchg
sbb
shll
xlat
sbb
orl
mov
xor
fsts
inc
negl
adc
push
popa
or
leave
idivb
pop
jle
rcrb
mov
adc
mov
loopne
xor
push
das
cmpsl
dec
dec
mov
xchg
fisttpl
xor
dec
test
push
cmp
fstp
jmp
pop
or
sbb
jb
sbb
adc
leave
lret
adc
sbb
adc
es
dec
movsb
je
jl
dec
xor
add
gs
cmc
imul
cltd
add
or
add
in
icebp
fidivrl
push
insl
mov
aad
adc
ret
insl
mov
inc
repnz
dec
or
cs
sub
std
icebp
adc
mov
sub
dec
xorl
jg
pushf
movsb
fsubs
pushf
jb
mov
sbb
popf
int3
adcl
pop
adc
cmp
pop
mov
subb
ljmp
sub
sbb
xchg
in
jbe
les
idivb
mov
int
pop
sub
sbb
inc
fbld
nop
in
not
in
cmp
out
lret
pusha
add
jne
andb
pop
push
loopne
sbb
and
ja
mov
push
in
cmp
fidivs
or
cmpsl
or
cmp
ja
outsl
xor
jne
cltd
fucomi
mov
hlt
les
sahf
subb
js
aam
mov
ja
out
lret
sahf
pop
sbb
std
test
xchg
pop
orb
xchg
lcall
push
and
mov
adc
push
or
in
ss
add
jno
lret
shll
sub
or
adc
dec
lods
inc
pop
aaa
test
fdivrl
dec
das
pop
clc
pop
stos
or
cld
cltd
push
notl
repnz
loop
sti
cmc
dec
lret
inc
movsb
cmpsb
or
inc
fists
jmp
test
loope
sahf
or
test
xchg
dec
mov
in
mov
jns
mov
into
push
mov
pop
sahf
inc
xchg
je
fisubrl
lcall
dec
fldt
cs
lds
xchg
add
in
mov
xchg
data16
pop
aaa
sbb
push
shlb
stos
subb
sub
pushf
hlt
and
lea
or
and
or
xchg
in
insb
lret
add
sub
hlt
popf
jbe
pop
aam
std
jbe
jl
test
stc
popf
int
mov
fcmovnu
mov
and
or
mov
ftst
xchg
xchg
inc
mov
push
insl
pop
mov
std
je
xor
sbb
lahf
sbb
movsb
jne
xor
leave
clc
inc
sbb
lds
adc
cltd
jg
inc
add
iret
mov
ljmp
je
jb
push
shll
into
iret
push
mov
mov
daa
sub
or
mov
clc
inc
jmp
pusha
inc
mov
mov
mov
xchg
or
stos
sub
xlat
pop
loop
imul
loop
xchg
int
ret
popf
jae
sub
lret
sbb
ja,pt
movsb
les
cmp
mov
mov
sbb
jo
xchg
xchg
sbb
dec
aas
xor
in
test
arpl
leave
popa
xor
add
and
sub
dec
jg
xchg
mov
pushf
adc
pop
inc
das
cwtl
int
outsb
push
mov
scas
add
inc
inc
xor
cmc
push
jle
in
arpl
js
inc
js
dec
add
and
ja
call
aam
jg
adc
gs
shr
mov
pop
and
cmpb
push
aaa
pop
mov
sbb
data16
and
mov
cwtl
and
push
cltd
push
negl
push
dec
mov
mov
mov
cmp
inc
popa
dec
or
pop
lods
add
into
xchg
jnp
stos
sbb
scas
into
add
rcl
in
sahf
cmp
andl
mov
mov
push
dec
ret
mov
aaa
cmpsl
and
ss
xchg
push
mov
sbb
fistps
outsl
mov
popf
push
pop
shl
movsb
into
cli
enter
inc
cmpsb
xor
and
and
fildll
cmp
movsb
adc
push
jl
pop
and
jmp
push
jg
sbb
test
push
and
test
add
mov
inc
out
pusha
sub
loop
cli
sub
or
sbbl
pop
in
inc
hlt
push
mov
dec
jl
pushf
lret
pop
and
jp
fdivl
jnp
cmp
or
sbb
sbb
sub
jb
stos
insl
jo
out
enter
fsubl
pop
jne
push
icebp
xchg
xor
mov
xlat
inc
pop
call
adc
pushf
std
mov
pop
or
repz
test
or
or
xchg
in
mov
cmp
mov
shll
hlt
inc
and
test
jbe
cmc
mov
test
sbb
sub
push
pusha
lds
add
cmp
fstl
ret
add
sbb
push
into
es
fistl
jnp
and
in
mov
jbe
inc
jmp
dec
negl
sbb
dec
cmp
jns
call
mov
std
jl
jecxz
int
and
idivw
xor
mov
notb
sti
jecxz
mov
mov
xor
or
rcrl
jne
dec
push
sbb
loopne
pop
data16
and
or
adc
add
xor
xlat
mov
push
fucomip
jnp
mov
adc
xor
dec
cmp
mov
mov
rclb
adc
adc
mov
jno
loop
inc
cli
add
mov
jo
cmp
cmc
jle
aas
pop
int
scas
fcoml
inc
cwtl
dec
jmp
and
or
ljmp
lret
in
addr16
stc
add
es
pop
repnz
xchg
inc
cmp
dec
cltd
jae
fs
cmc
in
imul
add
jnp
mov
int3
les
xor
xchg
dec
movsb
pop
lcall
int
push
add
sar
aad
decb
and
ja
inc
rcrb
daa
fisttpl
push
xchg
xchg
iret
mov
sbb
or
push
or
xchg
cmp
add
push
pop
shll
andb
add
movsb
pop
out
push
lcall
notl
sbb
popa
xlat
iret
iret
jge
mov
mov
cmp
mov
stc
mov
inc
cs
cmp
dec
add
push
adc
out
in
aas
mov
add
adc
and
sub
sbb
mov
xchg
pop
push
out
inc
add
add
fwait
xchg
xchg
cmpsl
sbb
cmp
push
push
dec
jnp
inc
lea
add
cld
sub
cmpsb
push
adcb
sub
call
sub
xor
or
enter
add
sbb
cmc
xchg
xor
imul
sub
add
je
pop
je
cmp
test
arpl
sbb
mov
push
cld
push
enter
jp
imul
add
inc
int
cmc
mov
fimuls
hlt
enter
mov
or
cli
cwtl
xchg
adc
jne
jl
push
es
pop
jbe
jecxz
popa
stos
int
xchg
dec
mov
xlat
scas
mov
je
iret
pop
xchg
adc
xchg
insb
dec
sarb
mov
adc
mov
repz
clc
cmpsb
insb
cmc
pop
ds
xchg
sub
cmp
outsb
daa
sbb
adc
pop
xchg
lahf
leave
lahf
lret
leave
in
push
push
sbb
cltd
add
pop
dec
pop
or
xchg
cs
or
stos
dec
add
fimull
popa
or
adc
xchg
fistpl
sbb
or
mov
or
jbe
adc
push
cmp
mov
pop
arpl
fisttpl
xchg
cltd
fstenv
lods
mov
pop
xchg
movsl
in
and
jmp
jl
cmpsl
cmp
enter
xchg
or
pop
xor
outsb
xchg
ljmp
test
push
gs
jle
lods
adcl
push
stc
lcall
addr16
push
pop
xor
pop
sbb
and
inc
imul
xchg
out
inc
mov
jl
call
test
and
pushf
dec
mov
jecxz
subb
shr
sub
ror
icebp
aam
bound
xlat
sub
aam
jnp
loop
sbb
xor
push
dec
imul
int3
xor
pusha
enter
fucomi
cltd
adc
push
sub
fmuls
aaa
mov
mov
icebp
addr16
ljmp
aad
inc
std
rorl
adc
mov
sub
loope
mov
sub
xchg
cmp
data16
shrl
loopne
pop
das
add
data16
add
mov
imul
sub
mov
dec
sbb
cli
sbb
mov
sub
mov
lea
mov
mov
inc
cs
mov
out
jae
clc
ss
outsl
lea
mov
es
loop
fldl
cli
cmpsb
jbe
inc
mov
jge
std
sub
push
test
insb
adc
inc
mov
adc
shrb
inc
cs
and
cmpb
stos
adc
lds
test
mov
cs
lods
push
sub
orl
enter
test
iret
stos
jge
mov
and
adc
stc
testl
insl
cli
shr
psadbw
inc
negl
mov
xrelease
mov
sbb
pop
fwait
xchg
jp
ja
das
inc
mov
data16
cltd
dec
mov
inc
andl
out
mov
inc
sub
mov
sub
mov
mov
ljmp
xlat
push
test
pusha
cwtl
xor
and
ljmp
fildll
mov
pop
cmp
jg
stc
pop
push
cli
loope
mov
jmp
dec
mov
inc
das
xorb
lods
and
testl
or
sub
dec
jbe
pop
inc
inc
mov
outsl
add
mov
shlb
and
leave
call
mulb
pop
leave
xchg
xchg
pop
sahf
mov
push
push
pop
jmp
and
xor
jecxz
shrl
lahf
xorb
stos
cld
cmp
loope
fucomip
cmc
pop
scas
add
mov
ss
pop
sahf
xchg
in
ds
add
cmp
jns
adc
inc
fisubrs
xchg
dec
in
pop
inc
pop
adc
dec
stos
pushf
nop
cli
pop
ret
push
mov
sbb
stc
stos
or
push
dec
xor
movsb
dec
sahf
outsl
fcoms
jecxz
int3
ljmp
jle
leave
das
icebp
or
fs
add
push
fcomi
push
add
pmovmskb
sub
out
add
es
push
xor
sub
ja
test
sarl
push
cmpsb
in
adc
mov
cmc
cmp
cltd
dec
push
es
into
cmp
inc
jno
or
fdivp
ja
loope
enter
jno
lret
ds
ret
jb
test
fmull
cmp
pop
shlb
adc
test
popa
and
lahf
stc
inc
insb
cmc
outsl
mov
cwtl
sub
stc
and
ja
and
ljmp
jge
outsb
jecxz
je
push
leave
jg
ret
imulb
ljmp
xor
mov
xchg
jae
ljmp
push
test
mov
or
add
test
pop
repnz
mov
bound
lcall
icebp
cmp
jmp
pushf
imul
add
sbb
test
mov
mov
in
and
mov
xor
mov
dec
mov
js
repz
movsl
aad
sbb
stos
lcall
repnz
shll
into
cmp
aad
pop
xchg
in
jmp
adc
in
cmp
mov
mov
aad
insl
add
dec
shlb
jge
xchg
adc
iret
or
mov
iret
xchg
sbb
ror
out
int
dec
push
mov
negb
sbbl
mov
add
scas
cmc
sub
mov
stos
adc
mov
sti
pop
mov
les
call
cmpsl
xor
pop
out
jbe
mov
in
jp
and
pop
cmp
mov
dec
fsincos
push
clc
aam
out
in
mov
fdivrp
xor
notl
int
sub
addb
cltd
pop
loopne
in
cmpsl
mov
pop
push
jmp
mov
inc
and
push
dec
cld
sub
push
fmulp
pop
mov
push
push
mov
inc
test
push
push
sub
pop
loope
arpl
in
clc
mov
jns
dec
inc
idivb
push
jmp
jmp
or
aas
mov
push
sbb
gs
in
xchg
pop
sbb
std
sbb
mov
pop
stc
stos
jmp
mov
push
pop
push
enter
mov
inc
mov
mov
outsb
out
cs
and
or
jne
and
cmp
cmp
fists
push
push
pushf
inc
lret
sbb
fistl
sub
adcb
sbb
push
jl
or
ljmp
mov
jno
lods
push
adc
mov
stos
lahf
aam
pop
stos
aad
fimull
lods
cmp
addl
aad
or
cmp
std
cmc
mov
push
jmp
cmp
push
push
int3
pop
mov
inc
cmpsl
scas
or
pop
adc
mov
lods
in
add
adc
add
mov
adc
lock
scas
shlb
mov
mov
shrl
push
pop
sub
jge
dec
sbb
dec
das
push
ss
sbb
dec
xor
cltd
cltd
add
mov
sbb
push
es
in
rcrb
std
fdivr
jp
sbbl
cld
xchg
cmc
and
xchg
ret
xchg
xchg
sbb
je
add
cmpsl
or
adc
imul
push
dec
stos
testl
fucomp
lahf
push
adc
pop
cmp
in
leave
add
iret
stos
cmp
add
jg
fldl
inc
pop
aam
dec
scas
mov
dec
push
mov
adc
mov
sbb
divl
jns
aaa
jmp
aaa
push
sub
pop
clc
lds
ja
mov
das
sub
aas
jmp
insl
jno
and
pop
loope
outsb
repz
sti
clc
sbb
add
jge
sbb
shlb
add
movb
xchg
cmpsb
push
iret
fisttps
lret
sub
xor
jno
kmovb
adc
rorl
adc
nop
scas
jg
icebp
xlat
xlat
jnp
jge
lock
add
movsl
ret
and
and
test
outsb
cmp
jp
ss
int
mov
xchg
sti
jg
inc
pop
xor
cmp
sub
dec
bound
lret
popf
out
xchg
jne
mov
lahf
adc
inc
pushf
mov
cmp
shrb
divb
add
sbb
adc
out
and
aad
sbb
mov
xor
dec
mov
pushf
xor
popa
adc
mov
ljmp
pop
cld
mov
outsl
sub
jae
dec
xlat
sub
leave
inc
xor
rolb
fadds
xchg
sub
cmc
fnstcw
aaa
mull
fisubrl
mov
mov
xchg
jge
pushf
popf
imul
test
pop
xchg
cwtl
xchg
xchg
scas
bound
cmp
pop
mov
or
mov
cwtl
je
movsb
loop
ja
fs
into
pop
data16
lcall
int3
jg
push
stos
add
out
dec
test
jp
mov
dec
sub
int3
dec
decl
mov
fs
outsb
in
mov
rcll
das
inc
xchg
sub
in
fbstp
test
adcl
ds
pop
jb
inc
arpl
mov
jns
sbb
ret
mov
push
mov
gs
fldenv
add
add
xor
jo
loop
lock
mov
or
mov
aas
rcr
inc
lods
pop
mov
dec
out
xchg
push
mov
lret
mov
out
in
jae
pop
inc
and
and
jno
mov
pop
test
sub
inc
movsb
pop
hlt
xchg
lret
stc
ret
inc
pop
adc
in
loopne
mov
outsl
xchg
repnz
popa
mov
add
inc
jno
repnz
push
je
inc
mov
sbb
ficoml
frstor
cmp
jl
sbbl
fisttpl
jae
test
mov
iret
dec
repz
add
inc
movsb
xlat
pop
sub
cmp
cmp
fdivrp
subl
push
iret
loopne
dec
pop
imul
je
outsb
inc
out
lahf
out
or
jns
sbb
mov
ret
xchg
push
dec
pop
sbb
adc
cld
add
fiadds
ficomps
fs
je
mov
sbb
jno
clc
pop
push
xor
dec
rcll
jge
cli
inc
aad
and
dec
test
out
jae
mov
sbb
add
pop
jbe
add
or
fcoms
pushf
sahf
movsl
ljmp
mov
cld
fisubs
mov
fadds
cs
jg
fisttpll
stos
mov
sub
int3
loope
lfs
or
sub
std
js
shlb
xchg
gs
cld
push
jge
add
hlt
stos
adc
mov
pop
cmp
pop
in
jno
push
dec
pop
imul
sbb
jl
jo
loop
mov
mov
and
xor
cwtl
lods
add
insl
call
jne
sbb
addb
mov
movsl
xchg
mov
push
xchg
test
into
popf
dec
aaa
outsl
sbb
rorl
mov
xchg
sbb
in
scas
cmp
ljmp
xor
icebp
cmp
stc
xor
and
mov
pop
ret
cwtl
inc
pop
jp
pushf
repnz
cli
jo
int
aaa
jp
sub
jne
out
add
movsb
ja
out
xor
jnp
cmp
call
and
bnd
test
dec
out
test
test
inc
adc
ds
adc
aaa
out
cmc
pop
add
and
fnstcw
out
pop
imul
pop
in
and
or
cmp
sbb
xchg
ret
lods
jmp
dec
loope
mov
ljmp
leave
stc
arpl
mov
sahf
shll
mov
push
orb
divb
mov
dec
imul
cmpsb
decl
mov
out
push
insb
jg
sub
xchg
dec
add
movsl
jp
lret
test
jbe
lret
ss
insl
dec
or
cld
sti
gs
adc
push
lock
mov
std
jp
fisubs
enter
jecxz
movsb
mov
sub
jmp
int3
fs
test
insl
or
movsl
jnp
push
adc
or
out
stc
push
hlt
xchg
aam
adc
cli
cmp
cwtl
jge
fwait
rolb
mov
fisttpl
call
and
cmp
mov
leave
sbb
push
inc
in
sbb
dec
lock
std
jl
add
jo
mov
adc
adc
or
dec
out
inc
mov
xor
lods
or
sahf
mov
or
sub
mov
clc
popa
xchg
movsl
and
dec
sub
sub
out
pop
adc
cmp
clc
shll
jp
sbb
jecxz
mov
popa
cmp
nop
mov
mov
js
push
push
and
jnp
pop
std
inc
aas
or
fldl
pop
adc
xchg
and
push
rorb
in
dec
movsl
lock
gs
stc
add
add
aad
jp
stos
dec
mov
pop
mov
jge
lahf
xor
dec
loop
fwait
addr16
push
sbb
pop
shl
push
jns
push
add
or
sub
bound
or
jmp
les
inc
popf
jmp
push
dec
ficoml
jmp
pop
jne
dec
and
lods
fwait
movsb
fisttpll
push
adc
lea
dec
lods
cmp
and
or
mov
sbb
addb
or
gs
push
push
mov
and
sub
rclb
cmp
or
popa
jp
out
pop
enter
mov
add
movsb
or
pop
xor
xchg
repnz
aad
lret
stos
movsl
inc
xchg
pop
xor
lods
pop
sbb
in
mov
popa
dec
lock
sbb
aam
pop
out
sbbb
stc
add
rorl
fbstp
loope
pushf
subl
mov
or
clc
enter
pop
push
pop
jg
pop
lods
push
das
jne
cli
les
leave
pop
push
add
xor
adc
nop
cmp
jmp
push
push
mov
dec
sub
dec
xchg
add
jge
stc
arpl
in
cwtl
xlat
push
mov
and
gs
pop
cs
sahf
ret
add
and
icebp
mov
push
clc
mov
jb
mov
call
cmpsb
mov
and
inc
insb
add
ja
outsl
xchg
xlat
les
pop
inc
sub
mov
das
fstl
loop
add
fstps
ds
inc
lods
push
ja
xchg
int
pop
cli
and
add
push
cmp
lret
xor
sahf
mov
sbb
lea
cwtl
sub
mov
cmp
jnp
add
xchg
ja
sbb
dec
push
push
dec
decb
sbb
add
pushf
fisubl
xchg
xchg
and
adc
xchg
pop
and
out
push
dec
cmp
adc
lret
cwtl
test
mov
xor
rcr
loop
lret
arpl
mov
mov
cmp
pop
ljmp
jns
adc
lods
or
mov
movsl
mov
lret
inc
mov
repz
popa
pop
in
scas
or
sub
jecxz
add
dec
gs
lahf
and
inc
jae
cmp
cld
dec
or
ret
add
andl
jecxz
adc
mov
jae
mov
or
dec
mov
scas
adc
dec
bnd
mov
mov
cwtl
pushf
xor
stos
jo
bound
jmp
into
jecxz
inc
sub
fbstp
inc
jecxz
sub
das
xchg
push
sti
push
xchg
jae
jnp
sbb
cmp
fldt
ljmp
cmc
jecxz
push
aam
dec
cmp
pushf
and
and
sub
movsb
xor
gs
cmpsl
cmp
jg
daa
clc
inc
in
xchg
pop
cmpsb
pop
push
mov
xchg
jae
sbb
push
sbb
in
test
fsubrs
mov
es
sub
push
jle
mov
rclb
mov
adc
mulb
ret
mov
sbb
movsl
pusha
inc
dec
pop
daa
jb
jg
jle
lods
and
sbb
movsb
cltd
fwait
cmp
clc
jnp
mov
lods
dec
mov
pop
lods
xchg
xor
stc
inc
cs
int
push
jnp
call
test
mov
adc
cltd
lahf
lds
fdiv
or
jg
mov
ficompl
mov
sub
fidivrs
and
xor
xchg
mov
js
push
jp
or
sub
shrl
cmp
imul
loop
stc
cmove
lret
outsl
jl
scas
adcl
mov
pushf
mov
push
mov
scas
push
data16
fadds
jge
or
and
cld
stc
and
repz
xor
ret
shlb
xchg
cli
sub
push
sbb
dec
shrl
or
aam
in
pop
shlb
mov
push
rolb
addr16
pop
pop
mov
mov
shl
xchg
mov
jbe
hlt
push
out
mov
out
pop
sahf
lea
push
mov
aaa
jle
pop
mov
out
pop
jg
es
inc
cmp
je
or
shrl
sub
pop
jmp
test
jle
adcl
sbb
add
icebp
scas
out
xor
pop
mov
mov
or
sbbb
addl
mov
mov
pop
and
leave
xor
mov
stos
test
fwait
imul
ret
fcomip
xor
add
add
ret
call
sub
cmp
mov
imul
je
push
js
test
inc
or
inc
fsubs
std
sahf
loope
push
push
jg
test
adc
push
inc
add
adc
mov
loope
mov
xchg
or
gs
add
leave
mov
mov
jle
mov
subb
aam
inc
cmp
cld
or
jecxz
and
push
dec
dec
outsb
inc
popf
es
test
divl
add
out
jge
jb
jbe
xlat
and
aas
loopne
jge
ds
xor
stc
in
push
movsb
leave
jnp
iret
mov
insl
xchg
daa
sbb
jl
scas
push
push
js
jecxz
addl
fs
outsl
scas
mov
loop
cmpsb
sbb
mov
pop
into
nop
aad
sti
or
addr16
loop
add
stc
scas
xor
out
adc
cs
dec
subl
add
aaa
repz
sti
out
push
or
lahf
adc
pop
pop
lret
nop
ret
dec
add
push
cmpsb
xor
hlt
inc
stc
inc
pushf
jb
adc
test
aam
jo
push
adc
mov
and
sbb
sbb
repz
dec
sub
fwait
hlt
sti
mov
fistpl
adc
adc
and
es
fsubrl
in
stos
bound
in
mov
xlat
and
dec
jmp
das
lret
jae
mov
push
ja
test
sbb
stc
jecxz
cmp
jns
outsb
out
adcl
cltd
pop
cld
fwait
jge
mov
dec
insb
shll
aad
add
in
mov
nop
cli
ljmp
fwait
cmpsl
mov
adc
iret
cmp
add
mov
cmpl
mov
dec
xchg
lea
cmp
push
rol
mov
push
xchg
sub
push
mov
data16
ret
xor
inc
rcrb
gs
fisttps
sbb
shl
hlt
xchg
xor
or
fldl
inc
mov
push
push
jge
mov
cmp
js
outsl
in
flds
icebp
xchg
push
jno
nop
xchg
jp
mov
test
pushf
mov
imul
jecxz
xchg
mov
mov
loopne
dec
hlt
sbb
jae
pop
mov
sbbl
dec
enter
jae
test
ficompl
sarb
xor
icebp
sub
into
icebp
stos
shlb
mov
push
and
cwtl
push
add
inc
xor
aas
daa
xor
in
pop
sub
je
sarb
xor
jecxz
adc
cmp
mov
xchg
mov
ficoml
sub
insl
dec
into
lea
jbe
std
or
jmp
insb
in
and
jge
push
lock
cmpsl
test
jo
push
movl
mov
imul
pop
je
pusha
xchg
cmpsl
jno
stc
push
shrl
pop
repz
pop
pop
shll
and
mull
sub
jne
or
xor
sbb
push
mov
inc
in
inc
adc
outsb
mov
mov
loope
xchg
testb
cld
add
and
inc
pusha
or
inc
movsl
test
ds
sti
mov
pop
jne
ret
stos
shll
addl
test
or
xchg
test
cmp
sub
jg
sbb
fcom
and
icebp
and
jl
mov
pushf
push
in
outsb
and
dec
lods
and
in
dec
cmc
adc
cmpsb
popa
nop
in
imul
std
and
add
inc
mov
sub
jns
jne
adc
xchg
out
push
mov
ss
and
ret
insl
cmp
lods
lahf
inc
mov
adc
or
popf
sub
jno
test
or
or
lock
lea
cmp
popf
mov
and
shl
sbb
movsb
push
mov
pushf
insl
pop
gs
jne
aad
imul
jnp
dec
std
sti
xor
dec
outsl
int
pop
test
into
mov
sub
mov
insl
pop
in
and
adc
mov
cmp
push
out
pop
and
mov
add
inc
pop
in
xchg
and
xchg
pop
and
out
jmp
icebp
mov
jp
push
rclb
jno
mov
lods
fisubs
cli
fidivs
jne
adc
sbb
jne
shrl
jle
out
cmp
mov
jbe
les
icebp
fldcw
into
inc
enter
mov
mov
or
mov
inc
popa
sbb
sti
xchg
lods
adc
arpl
inc
sub
push
sub
ret
jbe
jo
xor
idivl
pop
mov
lret
je
pop
add
sub
ja
inc
sub
add
cltd
addr16
xchg
inc
lock
cmp
mov
jo
psubw
addr16
loope
mov
sbb
movsl
xlat
pop
gs
test
mov
inc
cmpl
mov
mov
jnp
sub
int
imull
insb
jbe
arpl
andl
cld
or
sbb
xor
pop
push
mov
addb
aad
iret
sub
push
adc
xor
arpl
subb
push
nop
lods
repz
lar
cltd
push
fmull
or
ljmp
int3
in
loop
xor
pushf
mov
cwtl
dec
mov
sbbl
xor
mov
xchg
lret
cmp
xlat
or
imul
push
arpl
mov
push
fisubrl
push
loop
movsl
pop
push
mov
repz
test
mov
int3
cmp
and
stos
adc
popa
jge
and
push
xchg
fimull
lods
mov
jge
inc
jae
mov
mov
jnp
imul
mov
xchg
xchg
repz
movsl
sub
clc
or
jnp
inc
jmp
pop
pop
cmp
mov
sbb
xor
into
xchg
mov
xchg
lods
test
hlt
outsb
push
and
mov
test
stos
aam
pusha
call
jmp
mov
xchg
lea
inc
outsl
jnp
sbb
rcll
xlat
in
or
xlat
push
push
cmp
mov
outsl
mov
sbb
imul
pop
push
add
pop
lods
and
bound
arpl
imul
adc
cmpb
frstor
inc
subb
mov
mov
aam
fs
imul
aam
hlt
ja
sub
cmp
pop
dec
inc
inc
sub
ljmp
hlt
rolb
sbb
shl
mov
and
ss
nop
and
and
loop
fisubl
sti
dec
lahf
shlb
call
mov
pop
mov
mov
add
sbb
mov
xchg
in
aas
xor
js
add
lahf
cmpsb
fcoml
roll
out
test
aad
movsl
clc
pop
xchg
aam
mov
push
xor
mov
xchg
xchg
fdivl
lock
add
jle
jp
sbb
in
pusha
ljmp
fsubrs
pushf
adc
pop
lret
inc
mov
xor
mov
push
sbb
test
pop
cmc
scas
xor
js
jno
fcoml
push
xchg
xor
lahf
add
sbb
in
jns
es
insb
dec
aas
sarl
sahf
movsl
sub
out
dec
test
add
add
icebp
icebp
xchg
jb
inc
pop
dec
jae
and
jno
ret
jl
aad
xor
push
fcomi
adc
mov
out
xchg
cmp
cmp
adc
jecxz
dec
int3
inc
pushf
pop
mov
cltd
jbe
and
sbb
xor
jbe
and
clc
and
pushl
mov
movsb
xor
pop
mov
rclb
ret
bnd
cwtl
stos
clc
jae
dec
or
dec
ret
mov
ja
daa
jmp
lcall
sbb
push
ss
ret
xchg
add
mov
stos
shll
add
sub
sub
cmp
adc
nop
and
mov
adc
add
cs
lock
pop
in
lods
jmp
and
into
pop
test
cmc
pop
pop
decb
call
push
js
pop
or
sub
ficompl
mov
repnz
dec
dec
gs
jae
and
jno
sub
out
mov
int
or
xor
fldenv
stc
xchg
icebp
push
mov
lock
in
push
or
or
ficomps
shrl
adc
mov
daa
cwtd
ror
mov
adc
inc
cli
pop
jns
in
xor
or
or
xor
pop
push
fwait
ss
leave
and
sbb
mov
fcmovnb
shrb
xchg
add
sub
gs
icebp
andl
stos
out
xchg
cli
sub
int3
mov
sbb
addr16
fadds
cmp
gs
popf
je
fiadds
pop
out
mov
mov
lahf
pushf
mov
pop
fs
rcrb
imul
subb
or
xchg
imul
cmp
push
cmpb
in
ss
pushf
xor
addr16
js
inc
dec
nop
add
lret
std
sti
pop
imul
iret
mov
rcll
push
div
ljmp
pavgb
jb
cmp
xchg
push
mov
ss
dec
pop
dec
jo
daa
dec
or
sbb
mov
andb
push
push
or
pop
in
push
dec
cld
aas
adc
fs
insl
nop
aam
inc
or
inc
fcoms
or
push
js
inc
or
push
cmp
cmp
or
dec
loope
lret
int
stos
iret
mov
add
and
pop
dec
cmp
pop
fisttpl
addr16
jmp
sbb
scas
jns
mov
jae
mov
add
stos
pop
cmp
out
scas
jle
push
jmp
fst
lds
addr16
mov
inc
ret
adcb
sub
cs
fimuls
ds
mov
dec
push
mov
ss
inc
jae
push
xchg
mov
xor
gs
loopne
fsubs
fstps
aam
push
daa
jne
lret
jne
sbb
xlat
mov
lock
fistps
pop
mov
loopne
pop
leave
push
xor
outsl
std
pop
sbb
add
test
lret
dec
dec
and
sub
inc
into
jnp
rcrb
jl
mov
in
push
pop
pushf
push
cwtl
jno
sub
cwtl
cmpsl
sbb
ja
jno
ret
and
jmp
mov
mov
bound
cwtl
jp
jecxz
add
dec
in
mov
push
gs
bound
xor
push
xchg
imul
mov
out
adc
push
sbb
mov
gs
pop
rorl
mov
insl
shll
mov
xchg
sti
push
adc
notb
aas
xchg
inc
push
dec
jns
mov
sub
push
loope
jbe
in
jae
pop
pop
es
hlt
insb
je
jg
mov
lds
lahf
incl
or
cmc
push
jbe,pn
cmp
fbld
and
std
or
je
and
sti
lods
mov
adc
and
bound
iret
fdivrl
notl
lock
dec
pop
out
sbb
jb
push
lcall
sbb
icebp
push
mov
loop
mov
jo
ljmp
lcall
test
xchg
mov
and
inc
js
les
rolb
jmp
or
xchg
inc
and
fisubrl
push
push
push
ficoml
jle
bound
push
test
jecxz
jo
pop
pop
and
in
testb
mov
cmp
pop
and
scas
loope
pusha
inc
lea
in
dec
cmp
test
sub
popl
inc
pusha
inc
sahf
inc
dec
jo
mov
adc
jecxz
and
inc
push
aam
mov
sbbb
jo
jecxz
ljmp
mov
sahf
and
pop
sbb
sub
mov
sbb
mov
inc
inc
xor
lea
enter
sbb
das
jle
pop
loope
out
arpl
not
cmp
and
jb
pop
filds
mov
add
rcll
cmp
add
adc
cmc
jns
jae
enter
sbb
cs
jge
addb
insb
outsl
adc
mov
xlat
xchg
or
ret
xor
in
movb
mov
xchg
movsb
mov
adc
pop
stos
push
popa
popa
add
out
or
add
ficoml
ret
outsb
and
xorb
mov
mov
adc
xchg
sti
mov
adc
hlt
adc
pop
cmp
imul
push
cwtl
mov
pop
pop
psadbw
push
orb
pop
mull
rcl
arpl
jae
scas
mov
sub
xchg
or
loop
fiadds
sub
push
repz
lock
outsb
sbb
mov
jg
scas
sbb
or
fldcw
jo
insl
mov
movsb
dec
dec
pop
mov
pop
sub
dec
in
or
roll
push
sarb
stos
jno
sub
sbb
fbld
pop
stos
das
mov
inc
push
pushf
dec
push
int3
sub
in
mulb
jp
push
je
fstpt
scas
jp
aad
mov
fisubs
inc
out
fs
stos
adc
inc
xchg
push
pop
sub
hlt
in
xor
cld
pop
xchg
loop
loope
push
iret
enter
mov
cltd
sarb
mov
push
sbb
lods
inc
ficoml
insb
loope
aaa
jle
mov
add
js
into
std
cwtl
adc
xchg
addb
jno
test
mov
jg
or
sbb
xor
jecxz
inc
test
or
pop
mov
dec
out
shl
pushf
mov
mov
in
addr16
gs
cmp
push
lds
std
mov
lea
push
xchg
and
jns
ja
outsb
xchg
and
or
sarb
adc
ffreep
mov
mov
daa
iret
scas
cmpsb
mov
cmp
add
push
mov
and
jp
mov
xchg
mov
pop
dec
and
mov
outsl
lods
fldcw
jb
out
push
adc
paddsw
inc
rorl
cmpsb
xchg
fdivl
sub
into
arpl
pop
sarl
stos
mov
pushf
das
pop
test
mov
mov
push
or
fs
stos
and
push
das
push
or
jno
sbb
add
cmp
jl
xchg
sbb
or
jae
sub
pop
int3
sbb
push
dec
dec
ljmp
fcmovbe
arpl
aam
mov
xlat
lds
mov
imul
xor
ja
mov
lret
inc
push
jp
js
mov
and
mov
mov
nop
hlt
cmp
aam
ds
xchg
cs
sahf
sbb
xor
mov
mov
mov
andb
inc
in
scas
iret
pushf
int3
ljmp
sub
fistps
adc
cmp
push
dec
push
rorb
in
mov
add
aas
test
adc
mov
or
and
enter
add
cmp
shl
xchg
adc
hlt
lock
in
les
inc
add
add
or
loope
ds
loopne
out
push
add
rcr
add
pop
and
movb
negb
add
mov
mov
cmp
ljmp
add
test
push
imul
lea
sbb
cmp
add
and
lock
adc
jbe
inc
add
jnp
mov
insb
and
sti
inc
testl
push
sti
jno
out
fs
push
scas
mov
mov
adc
out
lea
addr16
sbb
in
push
push
decl
ret
push
cmp
ret
lock
xlat
jb
xor
das
int
cmc
fwait
cmp
inc
ret
shlb
mov
adc
xor
mov
imul
jle
jecxz
popf
addr16
and
cmp
orl
pop
stos
imull
inc
ljmp
cmpsl
or
jl
in
and
repz
mov
dec
pushf
sub
ljmp
xchg
pop
pop
sbb
clc
lret
xchg
jbe
cmp
fidivrl
mov
adc
sub
sub
mov
xlat
mov
andb
pop
sub
ds
in
out
sbb
out
and
or
cmpsb
sub
xchg
mov
push
sub
es
mov
es
call
sbb
aad
jno
not
ret
andl
xlat
push
bound
std
sub
sbb
adc
addb
mov
leave
pop
dec
xchg
inc
stos
popa
scas
fwait
mov
mov
std
sahf
or
xor
jo
imul
out
mov
mov
sbb
xor
rcrb
ds
xchg
mov
inc
xchg
fcmovnbe
push
sbb
sub
push
or
push
clc
xchg
cmpb
xchg
shlb
in
push
into
cltd
jns
imulb
pop
testb
xor
or
pop
lcall
xchg
pop
ret
push
xchg
dec
and
mov
insb
std
popa
data16
lock
lock
lret
cmp
jmp
add
push
cmp
xor
dec
popf
push
insl
insl
sbb
push
test
ljmp
lcall
adc
sar
pop
xchg
rcrl
iret
inc
cmp
sbb
mov
mov
aas
jge
out
lret
pop
or
scas
mov
cmp
aad
sub
jle
or
pop
lret
or
pop
inc
jno
xchg
push
dec
movsb
pop
mov
jle
mov
sbb
xchg
mov
dec
nop
push
mov
jp
xchg
dec
push
adc
icebp
xchg
mov
call
sub
pop
add
push
sarl
or
stos
dec
jno
and
test
inc
jns
out
jecxz
decb
mov
and
push
fwait
dec
sbb
jne
out
jo
sub
sub
xor
xchg
jle
loope
pop
cmp
push
imul
sub
sub
out
fwait
daa
adc
mov
scas
cmp
xchg
std
mov
xchg
cmp
dec
sbb
test
pop
aam
mov
mov
push
push
fidivl
mov
inc
lret
lret
pop
add
pop
std
mov
mov
dec
add
sahf
mov
mov
leavew
mov
mov
iret
sbb
daa
loope
stos
cmp
dec
test
leave
loope
clc
cmp
cmp
cmp
mov
lock
push
addr16
mov
not
push
lods
pop
fwait
push
loopne
push
mov
push
xchg
insb
dec
mov
mov
dec
mov
pusha
inc
add
push
popf
pop
jbe
mov
popa
cmp
jge
hlt
sbb
sbb
imul
jmp
cltd
push
inc
dec
jno
mov
and
inc
cmp
lahf
enter
das
pop
xor
dec
xor
xchg
dec
and
xor
sbb
pop
mov
aad
or
adc
ss
outsl
loopne
ret
aas
xchg
call
jl
add
test
das
push
in
jl
mov
lods
fidivrl
mov
mov
or
jecxz
xchg
aaa
dec
or
int
into
mov
or
xchg
xchg
fwait
jmp
mov
lret
aaa
cmp
mov
add
add
jmp
mov
scas
sahf
imull
sbb
std
pushf
sbb
xchg
or
dec
gs
cs
stos
inc
fsubs
sbbl
mov
cld
cs
jp
arpl
jno
lods
test
sub
stos
pushf
inc
jp
dec
jb
fdivrl
imul
out
push
aas
repnz
cmp
jp
sbb
test
push
mov
pop
jns
pop
mov
adc
out
scas
mov
push
mov
jp
cld
xor
lods
clc
xchg
inc
adc
jno
dec
imul
push
jne
xor
aad
mov
in
pusha
cmp
mov
xchg
imulb
push
pop
in
fs
mov
fsts
int3
mov
ficoml
mov
xchg
xchg
test
std
add
clc
loop
mov
push
xchg
mov
leave
lock
push
sbb
dec
cli
mov
lock
pop
mov
dec
jge,pt
lahf
aam
movb
dec
jo
or
jle
insb
push
cli
jnp
mov
fwait
jbe
sbb
xchg
repnz
xchg
es
pop
add
add
fcmove
sub
pop
xchg
xchg
adc
jle
xchg
call
mov
push
and
mov
cwtl
mov
add
fnstenv
icebp
dec
xchg
cmp
xchg
in
pop
cmp
dec
sbb
orb
dec
sarl
push
jbe
pop
push
outsl
stos
xor
and
dec
popf
xchg
shrb
insb
nop
adc
add
std
xchg
cmpsb
inc
mov
mov
adc
lods
lret
push
push
cld
test
add
jge
dec
insw
mov
ja
dec
push
mov
mov
and
outsb
pusha
rcrl
dec
mov
push
into
mov
xor
jne
pop
mov
nop
adc
mov
cmp
mov
mov
and
add
inc
or
push
ss
inc
cmpsl
aad
in
inc
movlps
ss
push
popl
mov
mov
rolb
mov
aas
add
out
xor
pop
mov
in
mov
cld
mov
add
cli
fadds
jp
push
stos
and
outsl
les
into
add
cmp
stos
push
adc
mov
mov
or
inc
bnd
and
mov
sbb
mov
mov
in
inc
mov
scas
ficomps
cmpsb
stos
jge
imul
jnp
mov
scas
xchg
mov
or
pop
mov
fs
mov
mov
mov
sub
sub
repz
jl
stc
ret
sbb
inc
inc
lcall
les
enter
fnstsw
repz
xchg
jbe
mov
sbb
fcoms
mov
stos
cmpsb
sbb
dec
test
aas
sub
or
ja
aad
sbb
loopne
mov
fadds
jg
sgdtl
push
xchg
arpl
inc
rclb
add
mov
sub
fcmovbe
push
test
xchg
mov
ja
add
pusha
mov
andb
cs
push
int3
and
sbb
inc
mov
mov
cld
mov
sbb
addb
iret
mov
out
pusha
cmp
pusha
cs
adc
ret
cli
jle
clts
xor
iret
jae
adc
jge
bound
dec
jns
lcall
xor
push
arpl
push
cli
jl
adc
mov
loopne
addr16
gs
js
sbb
add
dec
mov
and
dec
orl
daa
pop
std
aaa
cmpsb
mov
sub
jecxz
cmp
jmp
sub
aad
mov
add
in
out
sarl
jmp
pop
or
sub
push
push
scas
sbb
adc
pop
out
xchg
inc
outsb
test
mov
cmp
mov
sub
xlat
mov
pop
jge
daa
lret
xor
dec
cmpsl
lcall
xor
xchg
mov
cwtl
fcompl
test
mov
add
insl
stos
jb
xchg
lret
xchg
add
mov
mov
jae
repnz
test
lds
lcall
add
loope
insb
push
addr16
out
mov
sub
xor
faddp
mov
mov
jl
push
popa
std
jae
dec
and
js
testb
arpl
push
push
xchg
xchg
mov
andb
sub
jne
in
pop
and
stos
or
inc
shr
pushf
jns
imul
xchg
xchg
pop
inc
addr16
iret
leave
dec
mov
cltd
mov
rcrl
in
into
xchg
mov
xchg
and
roll
clc
test
addr16
mov
mov
inc
jns
imul
ss
pop
push
cmc
and
cmp
jnp
pop
mov
rcll
and
inc
xor
push
out
sbb
sub
loop
xor
fildl
add
xor
pop
fdivr
outsl
mov
jmp
jecxz
ds
xchg
gs
sub
jns
or
or
shrl
popa
popa
push
jo
push
inc
bound
cltd
xor
cmp
test
sub
mov
aad
scas
pop
mov
mov
loopne
or
push
int
jnp
stos
imul
lods
mov
jno
cmpsl
lods
add
outsl
sahf
cmpb
jl
add
test
push
shrl
pushf
and
push
mov
aas
out
loop
aad
and
hlt
fcoms
mov
pushf
into
movsb
idivl
jbe
rcll
cmpsb
jmp
push
sbb
jae
or
xchg
inc
and
cmc
dec
lds
lods
pushf
xchg
fs
xor
and
adc
adc
xor
aas
dec
pop
dec
scas
lock
jecxz
and
sub
icebp
jnp
dec
or
gs
jmp
xchg
sub
fstps
dec
sub
dec
sub
andb
sub
xlat
adc
add
push
lahf
push
sbb
xchg
cmp
and
inc
push
bound
xchg
xchg
and
xchg
jmp
push
jne
outsb
out
fisubrl
and
nop
dec
rclb
in
and
sbb
or
stc
aaa
out
outsb
ja
pop
xchg
xor
sub
jae
cltd
fiadds
in
add
push
xchg
dec
jp
shll
lea
fistl
negl
xchg
push
mov
xor
mov
sbb
enter
callw
hlt
das
xor
push
rcll
adc
dec
pop
cltd
rcrl
sar
arpl
adc
mov
into
lock
push
notl
push
repnz
int
mov
pushf
rol
mov
sub
push
int3
mov
insb
jp
fidivl
scas
pop
ret
mov
mov
test
pop
mov
xchg
in
xor
cmp
jnp
and
lods
adc
mov
repnz
mov
stos
fs
rcrb
int
or
lcall
adc
ret
jnp
and
repz
jae
js
inc
push
fs
cli
inc
test
add
mov
movsl
cli
cmp
xor
sahf
push
cmp
loopne
incb
push
inc
mov
jl
in
mov
int
push
popa
pop
inc
fildl
pop
pop
jmp
dec
sbb
mov
or
icebp
js
jbe
int
ljmp
ljmp
ds
xor
cmp
inc
shrb
xchg
stos
push
mov
movsb
mov
jge
push
loope
fprem1
cmp
popf
orl
les
shlb
jge
aaa
das
enter
push
adc
loopne
movsb
and
test
or
ficoms
jb
push
andl
add
jbe
xor
xor
jnp
hlt
mov
push
push
jne
dec
jecxz
add
scas
popa
mov
pop
jmp
pop
xchg
mov
xchg
repz
push
jae
push
add
arpl
cmp
clc
push
movsb
shl
mov
push
pop
pop
push
test
add
ret
sub
call
inc
add
outsl
rclb
mov
jmp
dec
jmp
sub
arpl
jne
cmp
shrl
add
addr16
adc
mov
loopne
mov
scas
movsl
push
outsb
mov
lret
js
fmull
mov
lret
test
and
mov
insl
shr
jno
sbb
mov
jns
xchg
xlat
xor
lea
mov
jecxz
movsl
popa
fdivrl
repz
in
cs
rclb
stc
sti
cs
fisttpl
adc
sub
loop
out
xlat
pushf
movsb
add
cmp
loop
mov
and
dec
aad
je
lahf
sub
bound
inc
aam
mov
outsb
mov
insl
and
and
mov
pusha
roll
adc
jnp
aam
test
inc
outsb
mov
xor
jmp
iret
fstpt
lret
dec
xchg
das
cltd
pop
popf
mov
imul
in
add
sub
mov
popa
or
dec
ss
cwtl
xchg
insb
in
imul
outsl
cmp
pop
cli
xchg
pushf
mov
sub
lea
aaa
test
cmc
mov
jle
cli
push
push
aaa
dec
fwait
ja
nop
sub
mov
jb
jl
jno
sub
inc
stos
sbb
dec
push
icebp
loopne
in
iret
arpl
push
dec
mul
test
lods
aam
nop
push
fadd
xor
sbb
xchg
pop
insb
loopne
outsb
jl
cli
ja,pt
push
mov
xor
fildll
rol
in
xchg
pop
add
push
iret
repz
fimull
fbld
dec
xor
fisubrs
aad
aaa
inc
inc
add
jno
ret
push
aas
push
jp
jbe
adc
add
dec
push
adc
cmc
push
dec
sbb
adc
push
pop
add
subb
cmp
in
adc
adc
cmp
aam
sub
xchg
jle
sub
add
xchg
add
pop
push
mov
rcrl
xchg
adc
xlat
iret
sub
inc
mov
out
or
xchg
mov
pusha
loopne
cmc
mov
cltd
pop
push
pop
jne
push
cmc
or
daa
sar
ja
jle
mov
jmp
mov
cltd
addl
xor
cmp
stos
pop
xchg
mov
sahf
je
js
add
add
push
test
xor
add
test
pop
and
inc
fsubl
movsb
test
out
mov
sub
xor
cs
test
test
imul
pop
jne
ja
or
mov
sub
fwait
mov
aad
cmp
aaa
xchg
js
cmpsb
xchg
sbb
out
out
fistps
aaa
testl
pushf
cmp
aaa
fmuls
repz
ret
sub
sets
push
adc
es
out
fisttpll
adc
or
mov
movsl
mov
jo
imul
push
mov
mov
cmpsl
and
cmp
les
aam
inc
das
dec
pushf
add
movsl
fs
push
fisubs
insb
enter
sbb
incb
and
add
clc
cmp
lods
idivb
xchg
add
pop
mov
jnp
in
adcl
ja
dec
jae
sbb
jl
in
or
push
scas
icebp
mov
cmpsl
adc
mov
or
sti
adc
fbstp
mov
das
and
ja
mov
imulb
mov
rep
mov
dec
mov
and
dec
fdivs
mov
enter
mov
ljmp
jmp
push
inc
pop
and
into
xlat
lret
push
mov
in
sbb
mov
mov
mov
sub
mov
push
ror
jno
adc
dec
fisubrs
xor
pop
dec
call
mov
cmc
jle
sti
mov
arpl
mov
inc
ss
inc
xor
fsubr
stc
ret
loope
aam
repnz
mov
pop
mov
mov
mull
outsl
or
xor
mov
es
mov
test
push
lcall
xchg
cmp
inc
pushf
repnz
xor
lods
lret
xchg
outsl
outsb
lcall
imul
in
push
mov
inc
inc
std
cmp
sahf
std
repnz
push
adc
stc
fcmove
push
jecxz
addl
sarl
nop
and
mov
cli
shl
push
jp
inc
std
inc
push
inc
imul
lods
cmp
cs
xor
jge
sbb
mov
nop
stc
clc
inc
mov
sbb
or
mov
in
test
mov
scas
in
roll
mov
ret
mov
xor
pop
adc
add
ret
int
jo
addr16
daa
fildl
xorb
lds
jo
xor
or
lret
mov
push
int
movsb
mov
and
out
loop
xor
xchg
cmp
add
data16
mov
push
add
test
cli
movsb
mov
inc
push
ja
add
ficoml
cmpsl
pop
mov
xchg
mov
js
and
psubb
mov
inc
add
dec
sbb
pop
sti
aad
fwait
dec
cwtl
inc
daa
das
mov
je
pop
mov
sub
push
hlt
imul
and
or
jg
xor
xchg
push
and
xlat
idivb
das
call
mov
imul
mov
adc
push
call
dec
pop
push
fmul
movl
xor
mov
push
cmpsb
nop
imull
adc
mov
push
xchg
shll
add
xchg
and
movsb
js
xor
inc
clc
jl
pop
xchg
pop
xor
bound
cmp
push
lds
dec
sub
inc
mov
fisttps
mov
out
xor
sbbb
adc
lcall
cwtl
push
mov
dec
inc
lahf
lret
pusha
fdivrs
aaa
out
fwait
push
shll
dec
sub
push
in
sahf
add
sub
sti
mov
jne
mov
push
lods
push
cmp
subl
popf
mov
out
sub
sub
cmp
mov
jbe
add
push
jbe
leave
inc
sub
push
sbb
cmp
cmp
jl
in
jp
loop
scas
push
shrl
mov
sub
push
loope
inc
push
pushf
int3
sahf
adc
or
mov
inc
int3
push
cmpsl
sub
loop
cmp
or
cmp
fdivs
in
data16
lea
pop
xor
xchg
fildll
sti
cmp
pop
adc
movsl
adc
popa
mov
mov
jg
jnp
int
mov
or
loop
cld
sbb
lds
mov
adc
lret
dec
in
rcr
xor
or
xchg
or
call
and
dec
and
dec
test
xchg
mov
mov
adc
adc
jle
inc
dec
out
mov
jns
ret
sahf
mov
dec
jb
push
out
push
gs
pop
cmpsb
bound
pushf
mov
dec
inc
inc
pop
aad
lret
imul
orl
sub
sbb
addr16
ret
jno
testb
movsb
jle
and
pop
fwait
and
sub
rolb
xor
add
in
sbb
cs
adc
inc
push
inc
cs
test
push
sub
push
add
movsl
repnz
leave
call
mov
lods
lea
cltd
inc
fs
hlt
adc
mov
push
mov
frstor
ficoms
ds
jno
mov
xchg
xor
cmp
enter
jp
cmp
add
hlt
xor
adc
push
cltd
gs
push
mov
mov
adc
fistpll
popa
dec
sbb
shll
insl
ljmp
loopne
mov
out
daa
dec
call
je
fwait
jg
xor
and
sbb
push
xor
mov
ss
jae
or
inc
mov
rorb
cltd
sbb
iret
push
adc
repnz
fisttps
movsb
dec
or
addr16
aam
fisttpll
mov
jbe
outsl
cld
dec
or
test
ja
push
pop
mov
or
adc
loop
jmp
mov
pop
mov
ret
adc
lcall
out
std
bound
cltd
push
outsb
cmp
push
filds
scas
dec
adc
sub
icebp
xchg
popa
test
or
or
nop
inc
imul
cld
pop
fsubr
jecxz
dec
hlt
mov
adc
ljmp
or
mov
cmp
lea
or
imul
inc
cmp
int3
ret
mov
aam
cltd
jg
adc
ljmp
jns
ds
jg
rclb
hlt
xchg
jne
push
inc
sbb
mov
pop
dec
leave
sbb
mov
dec
and
repz
rclb
mov
rorl
xchg
cmpb
int
outsb
add
lock
push
clc
jne
xchg
push
arpl
push
movsl
dec
dec
xchg
xchg
xorb
out
xor
into
pusha
lret
add
adc
jne
jle
dec
xchg
pop
sub
dec
sub
pop
sbb
xorb
xchg
das
xchg
or
xor
insl
jnp
sub
xchg
mov
xor
inc
mov
cmpsl
mov
jle
sti
aas
jg
mov
stc
les
adcb
ret
jg
add
add
shll
jle
lahf
scas
cli
jae
mov
xor
pop
mov
or
lds
push
lret
test
sub
sbb
popf
cli
mov
lret
or
hlt
inc
fldt
bswap
or
xor
sub
popf
icebp
push
sub
imull
cmp
mov
stc
xor
das
xchg
lahf
sbb
aad
adc
cwtl
inc
aam
popf
sbb
mov
cs
cmp
and
cwtl
pop
inc
or
fcmovb
call
lret
mov
add
ja
test
mov
and
jo
mov
in
loop
je
dec
xchg
fisttps
icebp
sub
loopne
dec
cli
sub
and
push
nop
mov
ret
inc
pop
daa
xchg
es
cmp
add
filds
insl
dec
loop
clc
adc
in
movsb
ret
jbe
fsubrp
mov
lea
hlt
xchg
cbtw
scas
and
mov
test
mov
xchg
or
fsubp
lret
or
cmp
sbb
push
jecxz
adc
lahf
mov
mov
cmpsb
mov
sbb
fs
mov
faddp
es
mov
pop
push
mov
sub
sbb
data16
int3
popa
daa
js
mov
adc
je
xor
cs
and
fwait
sti
push
xchg
xchg
cs
jno
ljmp
adc
imul
xor
mov
jl
cmp
repnz
sbb
pop
hlt
jo
ret
fstl
orl
jae
sub
pop
sbb
dec
sbb
push
push
push
xor
xor
ds
add
scas
outsl
adc
aam
cmc
test
repnz
cmp
pop
mov
pushf
je
dec
nop
sti
pop
push
jmp
adc
sub
xchg
jb
jg
sub
jmp
push
sahf
push
sub
mov
push
popf
outsl
xchg
pop
enter
lret
sbb
fistps
cld
push
sub
xor
xor
cwtl
mov
cmc
ret
adc
lock
imul
int3
mov
dec
push
into
jb
xchg
xchg
push
pop
mov
pop
mov
mov
movsb
andb
lahf
test
mov
loopne
es
xor
jae
mov
fabs
cld
cli
or
stos
lds
ret
movb
nop
jp
xchg
test
test
es
stos
andl
js
cltd
add
in
shlb
or
jp
in
cmpsl
mov
sbb
mov
insl
ja
in
mov
add
mov
rcrl
inc
out
cmpsl
jb
aad
cmc
mov
mov
dec
pop
pop
mov
dec
fidivl
add
sbb
add
les
sbb
and
lahf
push
enter
popa
and
cmp
push
or
dec
mov
xor
int3
imul
inc
xor
xor
pop
rorl
push
dec
jne
pop
mov
inc
and
xchg
scas
sub
pop
ret
pop
and
test
test
sub
test
or
fcmovb
in
cld
sbb
mov
lock
insb
scas
gs
insb
adc
loopne
pop
jnp
lods
sbb
or
arpl
cmpb
dec
xchg
inc
pop
mov
int3
jo
push
push
mov
xchg
into
popa
insb
ds
xor
xchg
cmp
push
enter
test
lds
cmpsb
je
lcall
cmp
mov
sub
push
jp
jae
mov
or
add
mov
ds
mov
push
push
adc
cwtl
cltd
adc
sub
movsb
inc
xor
mov
cmp
fisttpl
fstp
aad
lods
shr
push
and
xor
stc
adc
mov
cmp
lods
xchg
mov
test
fs
cmp
in
lret
sub
call
mov
fdivr
mov
sbb
scas
loopne
sub
adc
inc
lods
out
mov
popf
add
in
lock
cs
pop
jecxz
sub
cltd
test
mov
sbb
dec
push
and
or
lods
sarb
out
lds
in
sub
adc
cmp
inc
outsl
add
and
pop
jb
fstps
xor
jp
roll
and
test
cmc
jg
lret
ret
mov
int
ds
div
leave
adc
mov
jle
mov
xlat
adc
push
cmp
adc
pop
stc
dec
lods
push
insl
sub
lds
addr16
xor
shll
enter
les
add
mov
in
mov
add
into
mov
pop
xor
and
ss
jns
adc
testl
or
lahf
aad
xchg
std
aas
cmp
dec
mov
enter
out
pushf
push
xchg
into
aad
jle
outsb
fdivl
xchg
mov
dec
aam
das
arpl
inc
push
adc
jns
xchg
ss
mov
and
push
adc
out
mov
add
mov
call
xchg
push
inc
adc
fstpl
fidivl
inc
test
shrb
or
xchg
dec
mov
out
lret
dec
fistl
pop
ret
or
jg
in
leave
sti
popl
xchg
testl
sahf
out
and
inc
cli
add
cmp
fimull
mov
shrl
xor
test
push
daa
repz
push
negl
les
jne
loopne
loopne
test
mov
cltd
stos
push
cs
mov
mov
and
shrl
push
lods
addr16
dec
xchg
xor
and
stos
xor
in
mov
xor
dec
sahf
sahf
rcll
int3
jle
cmp
inc
cmp
fwait
les
mov
fldl
mov
xchg
lret
repnz
movsl
mov
dec
je
mov
subb
xchg
aad
add
jmp
lcall
jmp
fidivrs
addl
lds
gs
sbb
addr16
sbb
inc
add
mov
push
iret
scas
mov
in
xor
inc
decl
fldenv
pop
xchg
in
inc
mov
dec
jl
mov
repnz
repz
sbb
adc
sub
call
out
jmp
xchg
mov
clc
addr16
add
and
add
rcrl
xchg
stc
adc
and
fstpl
std
idivb
inc
adc
dec
imull
dec
std
lcall
test
push
sbb
cmp
add
add
subb
bound
stc
inc
aad
nop
insb
sub
jb
addb
pop
mov
push
loop
cwtl
fimull
insl
push
std
adc
iret
jmp
cli
cli
mov
xchg
out
inc
outsl
xor
pop
fnstcw
xchg
inc
aaa
iret
jnp
pop
xor
mov
mov
mov
dec
xchg
call
xchg
iret
jno
pushl
pop
jg
lcall
clc
dec
data16
test
push
fsub
ja
fadd
sbb
xlat
mov
jmp
dec
sbb
outsb
xchg
add
cwtl
mov
aaa
sub
push
fmull
mov
pop
or
jnp
pop
pop
ror
lahf
das
jb
sbb
sbb
dec
adc
xchg
add
sub
pop
xor
add
jne
add
dec
popf
rclb
push
test
dec
xchg
clc
js
imul
xor
adc
lahf
sahf
inc
mov
or
mov
std
pop
push
jmp
fisubl
test
jno
inc
xchg
divb
rcrb
ja
cmpsl
mov
jb
mov
mov
daa
mov
mov
mov
jge
fwait
add
shll
pop
xchg
sub
or
loop
add
inc
xchg
fists
add
in
sub
cs
pop
jno
pushf
jo
dec
aaa
aam
cmp
or
sub
jno
hlt
inc
test
scas
pop
pop
and
jle
add
iret
and
pushf
jle
in
inc
xchg
in
ss
mov
adc
cmp
sub
sbb
loope
fsubrl
pop
iret
repz
out
add
xchg
movsb
add
adc
jnp
lret
insl
mov
jg
rcr
inc
movsb
jbe
jno
shrl
xchg
jb
xor
jno
inc
push
out
into
xchg
out
push
in
xor
jl
loopne
fs
out
or
cmp
xor
lods
in
and
push
fldl
xor
sbb
sub
inc
xchg
fcmovnu
call
aad
dec
cmp
mov
dec
and
mov
sub
adc
pusha
and
xchg
mov
push
sub
add
push
das
aad
jle
xor
cmp
and
stos
lock
push
cmp
ret
les
pop
dec
cmpsb
inc
ret
cli
dec
jecxz
es
ss
sti
std
stos
cmp
cmp
cwtl
outsb
add
sbb
pop
mov
cmp
inc
ret
outsb
jne
push
adc
stc
into
je
mov
xchg
into
ljmp
popa
sub
jg
pusha
mov
in
bound
arpl
mov
lds
int
push
jl
push
int3
jb
add
inc
test
xor
or
imul
aas
pop
push
or
sbb
mov
push
lcall
mov
jnp
in
decl
mov
divl
cwtl
das
dec
iret
inc
insl
add
test
push
andb
push
fsubr
aas
push
inc
cmc
dec
outsl
mov
jb
push
pop
movsl
in
testl
loop
fwait
shrl
popa
pusha
cmc
insb
das
dec
push
fwait
out
fwait
out
sbb
and
sub
mov
sbb
mov
hlt
cmp
cmp
inc
dec
push
out
je
and
push
loope
or
jge
sbb
pop
ret
push
hlt
mov
inc
jb
xchg
lock
cld
mov
adc
mov
fiadds
ret
pop
sub
dec
addb
pop
add
ss
lret
push
out
int3
jg
fs
lea
lods
adc
aaa
pop
push
cmp
pop
and
xor
cltd
and
xor
sbb
cmp
imul
push
mov
dec
mov
sbb
das
call
fwait
cmp
es
inc
add
xchg
jp
cmpsl
or
mov
adc
or
fnstsw
fisttpl
imul
test
xchg
in
fcomps
movsl
sub
out
cmp
cmp
or
lock
call
ret
inc
ret
pop
inc
inc
fucomp
cmpsl
jmp
add
cmc
pop
pop
aam
mov
das
sub
fwait
sbbl
ret
test
cld
imul
jmp
push
mov
aaa
mov
je
cmove
adc
nop
mov
push
pop
or
sub
imul
roll
mov
ljmp
das
fwait
test
mov
fs
inc
pop
repz
pop
roll
ret
mov
xchg
xchg
push
sub
sub
jl
fnstenv
sahf
rorb
in
inc
lret
mov
pop
das
adc
and
lret
add
sub
mov
in
adc
cmp
imul
imul
pop
hlt
and
insl
dec
mull
movsb
push
scas
pop
out
sub
shlb
test
xchg
adc
pop
aad
and
mov
lea
test
lahf
cld
icebp
loop
sbbb
push
xchg
ret
ret
mov
sbb
sbb
sbb
jecxz
fidivl
mull
sti
mov
mov
stos
insl
dec
inc
inc
fidivrl
fsubs
mov
add
mov
inc
pop
repnz
outsl
cmpsl
lret
adc
shlb
test
mov
js
lea
repz
stos
jae
or
shll
fnsave
jno
mov
push
mov
sub
inc
mov
call
sbb
push
push
aam
adc
cwtl
lods
std
cmpsl
test
inc
call
or
pop
sub
fidivrs
inc
fmuls
fbstp
jbe
mov
jp
lahf
mov
pop
lds
lret
sub
imul
mov
or
cltd
push
pop
mov
mov
mov
pop
loop
dec
xor
and
xor
sarl
sbb
addl
ret
adc
sbb
int3
xchg
jbe
cmc
iret
mov
jmp
dec
add
insb
xor
sbb
movsl
imul
cmp
mov
xor
ss
movsb
cmpsb
jmp
and
in
mov
cmp
add
in
ds
aam
fstps
or
ja
inc
or
xchg
mov
jl
lds
loopne
imul
fiadds
sub
push
pushf
mov
adc
or
pusha
popf
pop
stc
inc
imul
or
mov
icebp
bound
jbe
xor
in
adc
and
stc
push
cmp
jae
adc
repnz
int3
mov
popa
outsb
into
jl
xchg
shll
push
sbb
xchg
imull
sbb
out
push
sbb
and
enter
inc
adc
daa
pop
mov
daa
outsb
mov
in
stos
rolb
das
mov
gs
add
daa
xlat
std
inc
outsb
mov
cmpsl
fldenv
dec
loop
push
cltd
mov
inc
sbb
andl
iret
push
cltd
push
jns
ror
cmpsb
xchg
repnz
cli
repz
and
test
pop
xchg
mov
add
dec
xchg
and
add
fwait
movsb
lahf
cmp
xchg
fndisi(8087
xchg
adc
dec
add
jmp
xchg
xchg
or
sub
icebp
leave
jp
out
xchg
cmp
aas
and
pop
push
int3
mov
or
mov
les
or
mov
and
out
out
adc
or
subb
push
lods
test
call
adc
loopne
lret
xor
and
jge
or
fmuls
cmpsb
insl
pusha
sbb
jb
inc
sub
lret
iret
inc
int3
lods
cmp
inc
loop,pn
xchg
add
sub
dec
inc
filds
mov
xchg
mov
aas
ret
or
mov
dec
pop
int
out
mov
testl
mov
jno
test
mov
cld
push
jns
paddd
or
push
xchg
aas
cmpsl
gs
les
std
adc
imul
addl
xor
mulb
scas
mov
popa
sbbl
mov
adc
enter
mov
sbb
dec
outsl
inc
int
addr16
leave
testb
and
pop
jecxz
lock
gs
sahf
or
xor
jmp
iret
jg
out
push
fimuls
mov
pop
inc
orb
jmp
cmp
inc
mov
js
xchg
icebp
jbe
mov
pop
cs
and
and
inc
int
sbbl
mov
shl
frstor
jl
mov
cmp
in
and
add
inc
or
mov
inc
pop
cmpsl
mov
mov
out
gs
mov
mov
test
mov
mov
xchg
mov
pop
xorb
or
movsl
pop
inc
outsb
sarl
mov
xchg
sbb
in
dec
sub
cmp
in
in
flds
call
xor
das
aam
pusha
sub
sbb
ficomps
xchg
lods
and
dec
rcll
les
push
mov
andl
and
clc
jmp
cmpsb
sbb
stc
ficoml
sbb
mov
sbb
movsl
nop
jbe
mov
out
fdivl
dec
and
sbb
and
add
out
push
in
sub
arpl
pusha
cmp
je
push
mov
push
and
jmp
push
inc
xor
adc
sub
dec
scas
lahf
pop
jo
ljmp
add
call
outsl
and
jne
ss
into
lods
lret
fwait
add
and
cmp
wbinvd
jg
push
int3
mov
xlat
mov
into
in
into
cmp
cld
int
mov
imulb
addr16
inc
jl
lret
int
fsubl
dec
mov
ret
xor
pop
js
dec
jmp
imul
int
jmp
pop
cmp
mov
jle
pop
subl
repnz
addr16
and
cwtl
sbb
out
fwait
int
out
popf
mov
or
sbb
lock
fisubrs
in
lods
sub
loop
xor
mov
pop
ja
and
adc
dec
verw
mov
adc
push
sbb
inc
clc
in
sub
in
insb
push
sub
mov
ficoms
dec
ja
stc
mov
ljmp
cmp
ljmp
mov
pop
popa
fsubrs
stos
adc
jno
clc
filds
push
pop
or
jg
cltd
xor
cmp
loope
out
jbe,pt
outsl
or
push
or
sub
sbb
sti
mov
mov
xchg
add
in
sub
adc
mov
xchg
pop
or
xor
lock
push
jg
nop
mov
mov
lret
aas
inc
add
mov
sub
js
mov
jge
cli
mov
cmp
add
xchg
jp
iret
fmul
adc
pop
lret
mov
fstpt
xor
fucomi
aam
jp
int3
out
ss
sub
pop
icebp
ds
rol
xor
mov
or
mov
xchg
or
adc
pop
ds
lahf
sub
sti
push
or
sbb
insb
int
pop
aaa
pop
jge
or
test
clc
imul
sub
rorb
mov
xchg
orl
jb
scas
out
scas
jp
mov
sub
or
mov
pop
nop
xchg
sbb
pop
xor
test
mov
inc
jl
sbb
adc
subl
neg
inc
es
rcrl
rorl
xor
and
mov
test
imul
push
push
js
lret
mov
sbb
enter
outsb
stos
mov
data16
movsl
pushf
jecxz
lcall
jbe
mov
pop
outsb
pop
or
inc
movsl
jmp
xorb
mov
cli
adc
fidivrs
insl
dec
dec
dec
xor
adc
movsb
add
cmp
jecxz
ljmp
je
ds
inc
ss
mov
push
in
stos
out
xchg
pop
testb
push
mov
in
and
jecxz
dec
sahf
add
das
andl
ret
lods
sarb
and
fcomps
mov
adc
xor
jl
lea
movsb
push
scas
mov
rorb
push
push
lock
rclb
push
push
in
add
fbstp
inc
fisubl
in
int
pop
cmpsl
cld
movsl
push
fcoml
loope
inc
popa
into
xor
test
test
in
mov
mov
pop
xor
daa
or
mov
and
and
aaa
sahf
sarl
adc
fdivp
mov
stos
jo
fdivrs
jl
xor
cli
jbe
mov
lock
lea
cmp
sub
push
addr16
out
imul
jae
addr16
push
stos
fdivp
push
sub
or
sbb
bound
dec
notl
out
xor
pusha
mov
lcall
jnp
mov
xchg
lock
out
mov
or
cmp
pushf
mov
push
push
fidivl
adc
xchg
jg
sbb
jg
repnz
jp
mov
cld
push
outsl
sti
mov
lock
aad
rol
pop
cltd
mull
loop
repz
inc
lret
sti
fsubl
popf
add
pop
cld
aad
and
sub
cmp
or
mov
and
cmp
cmp
mov
int3
mov
fcoml
mov
jmp
testb
cmp
adc
cmp
mov
fidivrs
jmp
imul
pop
push
mov
xchg
xchg
sbb
rcll
push
add
lahf
jo
xlat
stc
dec
sbb
daa
idivb
xchg
sbb
cltd
pop
enter
mov
out
xor
cmp
xor
mov
fadds
fistps
push
push
sub
cmp
idivb
dec
mov
hlt
leave
fisttpll
push
ljmp
xchg
dec
outsb
push
cmpsb
push
pop
dec
add
aaa
lea
loopne
cmpl
nop
pop
fsubrl
lods
pop
outsl
xchg
sbb
lea
mov
lcall
and
push
cld
in
mov
fldcw
mov
sub
mov
pop
add
pop
pop
stos
pop
clc
mov
sub
xlat
xor
gs
test
jecxz
xchg
stc
fdivrl
fwait
jno
mov
ds
imulb
ret
pusha
dec
jle
sarl
mov
lahf
leave
stos
sub
push
and
mov
pop
out
cmp
push
out
jbe
aad
lcall
push
xchg
hlt
icebp
sbb
ds
push
cmp
add
push
and
cltd
push
test
jle
lret
into
push
loope
out
mov
movsb
int
adc
or
loope
xor
ret
dec
int
adc
mov
fildl
out
mov
insl
je
cmp
insb
in
ds
aam
test
adc
roll
or
mov
add
arpl
push
push
add
rclb
data16
call
movsl
arpl
or
xor
xchg
aam
push
nop
mov
sbb
mov
add
xor
addr16
jecxz
out
bound
negb
idivb
leave
mov
stos
sbb
sub
pop
shlb
fstps
mov
pop
insl
xchg
fcoms
clc
inc
andb
in
xor
lahf
cmpsb
or
or
repnz
push
dec
xchg
dec
pop
inc
lods
lahf
mov
push
fldenv
ja
imul
test
jbe
rcll
mov
in
mov
pop
sarb
lods
jns
lahf
mov
popa
push
in
mov
call
mov
in
adc
call
and
shll
mov
in
mov
cmpsl
jge
xchg
inc
sub
push
lahf
je
and
add
outsl
sbb
int
aas
mov
xor
add
sti
cld
mov
fnstenv
dec
fisubl
std
mov
daa
mov
adc
jle
lret
mov
ss
insb
in
data16
push
adc
mov
or
adc
sbb
into
or
inc
fcomps
iret
loopne
xlat
sub
inc
or
das
fwait
pop
adc
dec
push
lods
and
mov
pop
ss
dec
cmp
ss
iret
and
push
into
aam
pushf
fiadds
jbe
xchg
inc
lea
rorl
sub
push
movups
xor
loop
mov
mov
sbb
ret
inc
push
ret
movsb
dec
cld
sti
push
loope
and
adc
and
fnstsw
push
pop
pop
pop
mov
cmc
sahf
inc
negl
sbb
dec
std
mov
adc
fcoms
push
pop
mov
sub
mov
cmp
xchg
add
jne
ficoms
mov
scas
lock
dec
or
test
stos
xor
test
mov
cmp
add
push
cmp
sub
lods
int3
push
mov
sarl
sarw
push
dec
pop
ret
mov
push
add
shll
inc
leave
aaa
and
dec
cmp
jae
and
outsl
sub
jge
enter
adc
push
sub
mov
sub
movsb
fs
movsb
stc
fildll
mov
movups
xlat
and
inc
jmp
cmc
inc
arpl
xor
popa
xchg
mov
xor
je
adc
inc
pop
sub
mov
inc
popl
rol
mov
or
xor
jecxz
cli
add
call
pop
push
in
mov
jbe
fs
nop
loopne
push
outsl
das
je
and
jp
push
sbb
mov
sub
mov
sbb
jne
mov
add
or
loopne
and
inc
scas
pushw
dec
les
add
sarb
xchg
int3
mov
ret
pop
pop
lahf
ss
int3
les
sbb
xor
pushf
stos
sbb
hlt
push
xchg
inc
cmp
imul
sbb
add
push
inc
add
or
push
jg
aad
stos
iret
dec
dec
or
mov
lods
jne
xchg
call
cmovnp
push
in
and
jle
cmpsl
push
adc
push
leave
arpl
aam
aaa
ljmp
fimuls
fnstsw
mov
in
roll
jge
jb
mov
inc
dec
cmpsl
mov
shrb
and
inc
lods
testl
sub
push
push
mov
mov
or
repz
sub
pop
mov
and
cmp
int3
rcll
adc
dec
test
mov
pushf
or
dec
clc
inc
std
xchg
movsl
fistps
jae
popf
xchg
cli
xor
dec
mov
call
jb
lret
rcrb
fildl
or
push
add
andl
test
movl
xchg
rcrl
push
cltd
adc
sub
bound
shll
dec
jmp
inc
cmp
subl
arpl
mov
or
add
mov
mov
xor
fidivrs
pop
pop
xor
hlt
gs
aaa
or
sbb
dec
das
int
aas
std
ret
fwait
jo
push
scas
fimull
inc
out
dec
pop
mov
mov
mov
mov
sbbl
fistpl
imul
push
lcall
leave
sub
ja
jae
jo
test
xlat
xchg
lahf
andl
xchg
xchg
or
cs
repz
mov
shrb
dec
mov
mov
cmpsb
cld
jg
cmp
xchg
push
add
addb
clc
mov
fdivr
sbb
inc
cmp
and
jnp
xchg
add
pop
rolb
mov
push
adc
adc
xchg
xor
xchg
cmp
jb
mov
cmp
xchg
repnz
sbb
jb
test
fldl
jle
hlt
or
inc
xchg
dec
mov
xchg
push
ret
xor
cmp
inc
sub
lods
mov
mov
dec
xor
outsl
ret
lods
lcall
mov
imul
shl
addr16
dec
enter
jg
stos
cmpsl
jg
or
addl
lret
cmp
or
inc
mov
mov
or
repz
cmpsb
and
scas
push
fdivl
pop
and
nop
or
cmp
std
mov
les
daa
les
ds
mov
fs
push
add
cld
jp
mov
out
push
shr
jnp
add
lret
loope
inc
enter
in
push
lods
mov
adc
test
or
add
stos
xor
outsb
fstpl
stos
hlt
push
jb
xchg
add
or
scas
xor
jge
and
fisttpll
js
pop
add
cmpb
and
cli
add
inc
ljmp
test
or
adc
icebp
iret
mov
std
out
ds
cmp
mov
xchg
jae
push
push
in
lods
lods
sbb
xchg
inc
pop
xchg
sbbb
lcall
ss
push
sahf
fisttpll
jae
fsts
ljmp
cmp
sub
push
popa
mov
jmp
pop
dec
adc
adc
out
test
mov
xlat
push
cmp
mov
into
insl
cmc
xchg
test
iret
or
addl
xchg
test
sbb
int
jecxz
or
lret
mov
stos
in
mov
faddl
mov
aaa
push
fcmovb
mov
roll
es
out
lock
pop
xchg
clc
and
lahf
hlt
popa
mov
test
out
mov
pop
xchg
pop
sub
jmp
cmp
mov
push
rolb
enter
mov
bound
pop
mov
xlat
sbb
ret
dec
sub
xchg
ja
cmp
arpl
fwait
gs
mov
bound
xchg
jo
jle
test
xchg
fadds
lcall
dec
movsl
jne
insl
daa
roll
cmp
pop
lahf
sbb
cwtl
insb
insb
push
movsb
js
cmp
in
lret
mov
icebp
incb
jp
mov
and
jo
inc
bound
sbb
jmp
insl
rcrb
mov
add
or
cmp
imul
pop
inc
mov
lahf
std
inc
inc
jae
sbb
sbb
mov
cmpsb
in
add
jecxz
cmp
loope
push
pop
adc
cmp
dec
subl
jmp
push
xlat
sbb
and
push
mov
jbe
fwait
push
pop
aam
int
fidivrl
mov
fildl
dec
push
mov
cmp
lahf
jle
mov
adc
in
into
xchg
jg
arpl
les
fcomip
mov
out
cs
arpl
mov
sbb
adc
fisubl
and
loopne
fisttpll
mov
ret
movsb
out
and
gs
mov
addb
jg
test
xor
popf
xchg
push
mov
pop
or
out
cmp
pop
add
in
adc
xchg
and
in
xor
daa
mov
out
imul
add
ret
das
jmp
push
mov
xchg
test
mov
mov
inc
jmp
jle
jmp
pop
cli
or
int
scas
jle
cmp
cltd
or
cmp
ficomps
add
push
popa
pop
shlb
jl
xchg
pop
lock
lds
ds
inc
push
jmp
jae
push
mov
jne
fdiv
cmp
popa
cwtl
add
or
pop
cmpsl
lcall
andl
pop
xchg
pop
sub
addb
iret
fsubr
out
xchg
cmp
push
sbb
mov
ja
cmp
adc
or
mov
mov
jnp
loopne
adc
xchg
lret
in
cli
lds
lret
jb
and
lahf
ret
inc
sbb
pop
fwait
push
push
xor
out
sbbb
nop
cmc
inc
mov
or
pop
addl
cltd
and
mov
ficomps
push
int
cld
xchg
mov
nop
mov
jbe
test
jno
fnstsw
or
leave
pop
inc
pop
cli
pop
addr16
push
ljmp
packuswb
or
adc
scas
lods
mov
and
insb
xlat
ss
fmull
in
sub
into
adc
inc
mov
leave
jo
popa
out
sbb
push
mov
jmp
push
mov
push
and
dec
or
in
dec
iret
mov
xchg
imul
push
sub
push
lcall
mul
int
push
sbb
test
sub
clc
push
mov
shll
andl
inc
sbb
xor
mov
push
or
sbb
rorb
add
lret
clc
mov
testl
imul
popl
cmp
test
pop
loopne
out
cld
mov
inc
lret
add
hlt
cmp
in
mov
pop
mov
lods
inc
pcmpgtb
pushf
xchg
or
orb
pop
out
lahf
fmuls
imul
addl
aaa
in
std
test
ret
popl
cmp
jne
mov
and
loopne
outsl
and
in
inc
bt
sub
lods
sti
xor
jl
or
leave
int3
dec
nop
fs
sbb
neg
mov
mov
mov
aad
jno
fs
xchg
sub
xchg
fbstp
jns
pop
xchg
adc
clc
push
shl
je
sbb
cmc
popf
aaa
jb
in
rep
repz
sub
dec
icebp
loopne
fwait
decb
inc
inc
cmp
push
mov
cs
rclb
lcall
inc
mov
cmp
fldl
imul
rcll
dec
push
dec
fdivs
hlt
adc
jae
cltd
popf
mov
lret
sti
pusha
je
mov
mov
movsb
rep
sbb
ss
cmp
sub
push
cltd
imul
mov
jmp
test
fildl
xchg
or
in
rclb
aas
inc
hlt
lahf
ss
fnstsw
mov
mov
cld
shrl
sbbb
lea
rcrl
push
nop
in
xlat
sub
cmp
outsb
leave
or
jae
daa
arpl
mov
sbb
dec
dec
mov
in
notb
andb
in
jb
fs
fimuls
add
sub
test
scas
and
adcb
into
insl
dec
jb
loopne
outsb
pop
sub
adc
mov
cmp
pop
push
decb
call
sbb
ja
and
jns
lret
xchg
pop
es
mov
rcl
out
out
inc
xor
or
cli
sbb
js
inc
cmpsl
das
pop
std
lea
cli
mov
ret
cmp
adc
aaa
divl
sbb
xor
sahf
add
add
mov
in
lea
mov
dec
scas
push
xchg
mov
insb
pop
xchg
call
orl
rclb
movsb
dec
xor
xor
or
lods
fidivrs
subl
cli
sub
lret
stc
rorl
test
cmp
aaa
dec
leave
pop
dec
std
or
out
inc
mov
ret
xor
test
xor
jge
or
in
repnz
add
gs
sbb
pop
add
fdivrs
in
inc
loopne
test
inc
mov
pop
addr16
xchg
out
xor
pushf
arpl
xchg
in
popl
lahf
sbb
mov
aam
cmp
push
flds
fiaddl
repz
std
xor
mov
add
pop
and
and
mov
push
mov
push
mov
push
daa
ret
jnp
out
and
inc
loop
lret
cmp
call
jae
sti
ja
test
pop
xchg
arpl
jo
adc
adc
pushf
fidivrl
inc
rolb
jp
or
pop
adc
je
push
loope
idiv
div
rcll
ja
ret
fdiv
insl
and
jo
sbb
test
out
pop
cmp
dec
push
cmpsl
push
jb
cmp
push
push
movsb
mov
shll
sub
jl
and
dec
je
push
or
xchg
mov
jp
inc
or
bound
stc
aad
mov
xchg
popf
push
inc
jne
and
into
or
jne
sahf
cmp
or
inc
jnp
push
push
fisubl
gs
adc
mov
into
lret
enter
cltd
shll
ja
cmpsb
jne
xchg
push
call
test
mov
push
sub
rcll
inc
cmp
repz
jge
dec
xchg
xchg
push
mov
cmp
cmp
out
mov
jg
jmp
inc
fisubrl
shrl
pop
adc
lret
pop
dec
mov
lock
aam
mov
andb
mov
push
xchg
add
jae
int3
roll
out
inc
scas
loopne
and
je
xchg
add
mov
cmp
mov
subb
xor
test
test
pop
add
stc
jno
pop
sub
cmp
in
mov
adc
in
push
push
or
mov
xlat
inc
lock
adcb
das
jnp
xchg
push
adc
fisttps
subb
loopne
mov
dec
and
sarl
aaa
sub
daa
cmpsb
outsl
pusha
jp
addl
xchg
and
mov
lea
ss
testb
lcall
std
cmpsb
movsl
pop
mov
inc
shrl
je
stos
mov
push
ds
push
das
jnp
xchg
cli
add
in
cmc
int
inc
sub
pusha
insl
jns
xor
xor
mov
es
bound
shl
scas
int3
jg
push
mov
enter
mov
xchg
out
xor
nop
add
sub
shll
and
xlat
xor
aaa
mov
mov
out
lcall
pop
enter
push
repnz
daa
jle
mov
ds
add
cmp
ds
lret
cmp
clc
pop
cwtl
lahf
lahf
sub
mov
xorl
loopne
rcll
cs
xlat
insb
hlt
enter
int
or
cwtl
add
dec
sti
pushf
push
stc
lcall
and
test
movsl
call
popa
shl
stc
lods
arpl
push
mov
lods
mov
adc
mov
mov
push
and
xchg
dec
test
mov
xchg
dec
dec
in
push
jbe
or
adc
scas
cmpsl
add
jbe
add
inc
int3
cltd
inc
mov
or
xlat
and
mov
mov
addr16
adc
inc
mov
dec
mov
lcall
cmpsb
or
sub
or
pop
push
stos
fs
add
es
add
push
cmp
mov
mov
insl
fisttpl
adc
test
fdivrl
in
sub
pop
loop
fsts
insb
lahf
cli
out
pop
jg
in
in
sub
sbb
ja
test
mov
xchg
add
data16
call
mov
out
testl
xchg
mov
push
sahf
daa
jns
stc
pop
pusha
stc
adc
mov
cltd
in
sub
cmp
lahf
sti
mov
jecxz
in
sub
or
push
adc
sgdtw
cltd
xchg
xor
roll
pushf
leave
popf
cltd
and
cmp
cs
mov
push
loope
xchg
pop
in
sbb
sbb
insb
or
pusha
mov
sub
dec
out
notl
mov
mov
test
xchg
daa
pop
add
mov
inc
or
pop
fcmove
mov
std
out
xchg
cmp
notb
and
adc
xor
lret
push
leave
popf
xchg
nop
jns
aam
push
xchg
icebp
aas
cld
out
ret
xor
fidivl
xor
jmp
scas
pop
in
dec
cld
xor
inc
out
mov
test
pop
ljmp
adcl
fsubr
push
neg
lods
cli
stc
sbb
sbb
add
movsl
push
add
cli
cmp
shlb
cwtl
mov
pop
test
mov
mov
cmpsb
outsb
sbb
into
gs
cmpsl
js
push
arpl
repz
dec
div
or
mov
ja
inc
loopne
out
pop
dec
or
rol
sbb
and
pop
xor
adc
or
push
into
mov
jle
jb
imul
mov
pushf
dec
push
add
sub
or
xchg
jle
or
or
fwait
ret
mov
lret
rclb
adc
mov
jle
out
xchg
rcr
pop
fnsave
push
add
xor
inc
jge
adc
xorl
fucom
and
jge
dec
push
gs
movsl
cmpsl
mov
cwtl
jge
in
mov
divl
popa
stos
mov
add
sub
insl
jle
cmp
test
xchg
stos
subl
xor
push
std
clc
add
addr16
mov
popf
sbb
dec
adc
cmp
mov
frstor
in
ds
pop
xchg
push
and
mull
mov
icebp
shll
pop
push
mov
loop
outsl
negl
rcrb
rcll
mov
clc
dec
dec
mov
test
dec
mov
jb
cmpsl
push
cwtl
ficompl
add
int3
rcl
pop
fisubrs
jp
icebp
xor
test
pop
fstl
lock
mov
cmpb
paddsw
push
xchg
xlat
sbb
jmp
jae
ss
push
lods
push
divb
xor
out
cs
mov
je
inc
cmpsb
and
je
mov
fcmovnb
scas
in
pop
xchg
cwtl
pushf
push
ficompl
mov
cmovs
fiadds
int
inc
lret
repnz
cmp
aam
stos
ja
push
out
xor
popf
mov
dec
mov
mov
insl
push
ffreep
arpl
jg
and
sub
fildl
sbb
in
mov
inc
add
or
fwait
ret
mov
add
or
dec
push
out
iret
jg
ret
stc
mov
adc
fadds
jmp
xchg
movsb
pop
movsl
jns
xchg
and
js
xor
leave
mov
popa
pop
out
mov
cmp
lods
and
sbb
mov
out
inc
lea
sub
sti
mov
shr
jno
aas
push
pop
clc
shll
int3
xchg
mov
inc
out
lret
adc
inc
dec
cmp
dec
loope
and
adc
fnstcw
mov
mov
leave
jae
inc
insl
jnp
cltd
aam
out
in
cmp
cmpb
ret
imul
es
sub
mov
sbb
shrb
fnstsw
inc
shll
loope
int
pop
cld
movl
mov
and
imul
enter
and
insb
dec
adc
ja
jb
sbb
lret
xlat
out
bound
loope
xor
pop
pop
jp
dec
aaa
in
xchg
jo
aaa
data16
cli
lcall
ret
mov
cld
mov
es
aas
add
scas
mov
ret
les
adc
pop
mov
gs
add
imul
ret
in
das
mov
int
and
xor
xor
ret
mov
fs
movsb
aas
mov
add
add
gs
sbb
or
inc
adc
xchg
repz
stos
adc
push
cmp
or
mov
xchg
loopne
std
stc
ds
clc
inc
xlat
xchg
cmp
inc
rclb
push
ds
jg
or
idiv
and
xchg
jp
shl
or
aam
mov
cmp
mov
xor
mov
aaa
jmp
dec
nop
mov
ljmp
sub
sbb
jmp
outsb
in
imul
out
insl
fistpl
outsl
std
mov
xor
push
adc
mov
cwtl
test
fcoms
mov
lea
jnp
out
ficoml
int3
xor
adc
jle
push
pop
gs
fsub
int3
rcrb
mov
rclb
jl
pushf
mov
cmp
out
inc
mov
lods
jns
mov
xchg
mov
add
jb
add
push
pcmpgtw
int3
out
inc
mov
mov
aaa
jno
dec
cmp
or
jle
out
and
xor
lods
adc
xchg
mov
dec
ret
in
add
iret
cmpsb
stos
push
popf
js
fstpl
fwait
xor
xor
outsb
loopne
pop
jle
movb
xor
cld
repnz
jle
data16
mov
adc
xchg
out
push
fwait
jns
mov
fsub
rclb
push
cmpsl
cli
mov
push
dec
add
subl
xor
testl
adc
and
cmp
lret
xor
addr16
leave
mov
adc
jnp
adc
xchg
mov
test
aas
out
int
mov
mov
outsb
lret
jnp
ljmp
test
icebp
lcall
mov
add
mov
fcomp
shrl
and
pop
rcrl
cli
clc
repnz
mov
inc
pop
push
fbld
pushf
repnz
xchg
aam
mulb
mov
add
clc
mov
add
gs
push
cmp
mov
xchg
or
push
leave
frstor
arpl
fwait
jle
lea
gs
cld
lea
adc
push
ja
add
lods
stos
sub
aad
loop
sbb
mov
mov
add
sbb
sub
sub
jnp
xor
dec
xor
enter
out
clc
adcl
outsl
push
mov
dec
pop
andl
lret
fistpl
push
lea
and
xchg
sarb
imull
pop
sub
mov
jmp
fidivrs
mov
int3
push
xor
and
jecxz
mov
pop
jmp
xchg
mov
mov
jecxz
sbb
stos
sbbl
push
ja
bound
cmp
sub
jae
gs
sbb
out
cli
enter
scas
test
int
xchg
in
les
or
jp
xchg
iret
leave
dec
ficoml
jge
std
mov
out
scas
sub
fnsave
mov
insl
idivb
xchg
mov
pop
or
mov
daa
cmp
popf
pop
outsb
mov
dec
lret
cwtl
clc
lds
fcomi
aad
imul
cmp
arpl
add
stc
fbstp
mov
inc
or
mov
cs
ficomps
jg
scas
jecxz
idivl
push
mov
push
stos
mov
fcomps
or
mov
cltd
and
mov
sbb
and
sub
add
fwait
sbbb
jbe
es
lock
push
dec
mov
adc
dec
int3
jmp
test
xor
xor
lcall
xchg
rcrl
fstpt
mov
pop
shll
test
stos
rep
scas
mov
ret
mov
inc
mov
push
data16
mov
xchg
sarb
out
dec
cmp
in
mov
pop
faddp
mov
adc
repz
jge
add
out
jecxz
cwtl
xchg
test
and
movsb
popf
fadd
scas
lea
stos
and
push
or
fs
hlt
imul
ds
addl
mov
dec
lods
mov
sti
add
ljmp
cltd
outsl
dec
xchg
in
xchg
push
push
lss
xchg
inc
jo
icebp
or
adc
inc
dec
mov
aaa
roll
fsubs
lock
cli
xor
std
adc
xor
je
mov
push
pop
popf
mov
add
add
inc
ret
xor
out
push
xor
js
and
or
mov
pop
dec
xchg
cli
sub
fwait
cmp
add
sbb
lock
test
iret
pop
push
cmp
sti
leave
cltd
pushf
mov
aaa
jecxz
mov
jge
lahf
jne
outsl
loope
les
movsb
sbb
jmp
fstpl
cmp
inc
pop
cld
negb
xchg
ret
pushf
loopne
leave
mov
xchg
das
xor
paddq
add
jo
add
mov
lock
cmp
mov
in
and
rcll
mov
pop
out
push
and
push
pop
movsb
lret
cwtl
inc
jno
stc
out
sti
sub
pop
faddl
test
repnz
sub
or
xor
xchg
js
adc
jmp
and
sahf
ss
pop
sub
push
mov
pop
push
int3
push
in
imull
inc
stos
push
push
push
ja
xlat
clc
jbe
ss
lcall
add
fisttpl
in
sbb
pushl
scas
and
stos
mov
insl
sub
push
test
pusha
cmp
mov
ret
push
andl
std
inc
popa
or
or
push
cmpsl
dec
push
rcrb
xchg
xor
movsl
sahf
mov
sbb
test
push
mov
popf
cmp
pop
fadds
push
shll
out
enter
loopne
xor
xchg
push
dec
imul
in
fldcw
dec
cmp
inc
sarb
popf
outsb
stc
bound
pop
jecxz
outsl
fiaddl
fdivs
popa
cmp
fiadds
mov
mov
mov
xor
cmpsb
ja
mov
cmpl
inc
xchg
bound
push
sbb
pop
dec
or
imul
add
daa
sbb
dec
in
shl
in
fistpl
adc
cli
cmpsb
lcall
cmp
jmp
cwtl
xor
and
scas
adc
push
xchg
jle
in
in
pop
mov
sub
push
xor
ljmp
cltd
or
push
or
lods
and
fs
push
scas
sbbl
mov
push
add
sahf
lods
jo
outsb
das
add
jl
je
mov
testl
pop
divb
loopne
pop
lcall
mov
add
jle
test
aam
mov
adc
je
sahf
ljmp
in
sbb
sub
test
shll
mov
adc
jle
xor
mov
int3
ss
fpatan
sub
ror
lds
mov
outsb
mov
or
xchg
stos
or
push
jle
ret
ljmpw
xchg
cltd
ds
fldl
pop
push
sbb
mov
or
jo
int3
out
std
mov
pop
or
insl
test
pop
ljmp
fs
pop
add
cli
cmp
sub
aas
xchg
pop
pop
fsubl
push
and
adc
push
fnsave
insl
add
mov
int3
sbb
les
or
push
clc
dec
stc
or
xchg
in
scas
rcr
and
cmp
sti
sarl
in
test
fnstenv
xchg
inc
inc
inc
nop
dec
inc
stc
inc
cli
jno
sub
push
cmpb
fimull
adc
or
cmpsl
nop
mov
mov
adc
movsl
ds
jb
rorl
repnz
cmpsb
icebp
mov
stos
das
cmp
cmp
xchg
lods
and
inc
push
sub
sbb
mov
pop
in
xor
pop
lret
push
mov
in
jmp
cmp
mov
and
and
shrl
adc
enter
mull
clc
or
mov
ljmp
jae
dec
inc
mov
adc
inc
daa
pop
repnz
mov
dec
aaa
inc
outsl
lods
jmp
add
mov
jp
in
push
jns
pop
jne
pop
repz
fcmovbe
inc
shll
jmp
leave
mov
fistpll
push
sarl
xchg
jecxz
pop
and
clc
adc
daa
jl
popa
dec
test
push
mov
jge
and
nop
je
stos
dec
sbb
repz
pop
test
fsubl
lock
and
add
jno
jae
cmp
mov
sub
jecxz
jg
lods
das
lahf
iret
cli
jno
adc
and
jo
popf
pop
je
lock
mov
and
lahf
jle
inc
sbb
gs
mov
cmpsl
adc
lods
cltd
repnz
sub
mov
loop
fildll
jp
popa
in
call
or
cmp
push
xor
mov
push
cli
in
std
mov
push
repz
inc
movsl
mov
ljmp
loopne
daa
jo
pop
es
and
jmp
mov
imul
mov
insb
lock
test
jp
xor
inc
xorb
outsl
test
mov
add
mov
test
pop
jg
add
jnp
lret
add
sbb
scas
out
push
adc
cmp
xchg
emms
inc
inc
data16
jg
jmp
jbe
in
lahf
push
or
pop
mov
or
lret
lods
pop
in
neg
rcrb
mov
mov
les
lods
out
inc
clc
inc
xchg
rolb
addr16
push
daa
adc
je
jno
push
and
lock
jle
jl
mov
jl
popa
icebp
add
jae
ret
scas
add
ljmp
fisttpll
ja
loop
mov
ret
xchg
test
xor
std
pop
fcoml
call
push
jge
mov
dec
arpl
icebp
fmull
popa
jmp
adc
inc
mov
lock
stos
mov
xor
bound
push
int
aad
repz
rcll
in
sbb
cmp
fs
mov
push
pop
xchg
mov
lcall
jbe
or
enter
lcall
add
dec
mov
cmpsb
repnz
movsl
dec
mov
sarl
xor
or
enter
push
pushf
mov
sub
data16
xlat
jnp
insl
inc
lret
fdivp
jge
test
mov
shlb
sub
daa
push
mov
orl
std
adc
fcmovbe
stos
ss
and
inc
dec
mov
sbb
or
std
dec
roll
mov
push
push
push
sbb
scas
lds
mov
les
adc
sbb
fidivrs
jge
inc
xchg
sbb
add
push
sub
add
dec
push
es
add
mov
or
scas
xchg
js
xchg
mov
nop
mov
xor
cltd
sbb
lret
les
testl
xor
lods
jecxz
jge
loop
push
pop
cmc
lea
cmpsb
mov
daa
loopne
ljmp
cmpsl
movsb
scas
mov
iret
mull
ret
or
pop
mov
mov
push
and
in
jnp
add
dec
scas
or
fcmovnu
xor
xchg
rorb
pop
iret
sub
cmc
in
imul
mov
lretw
push
or
sub
lods
cmp
in
pop
in
mov
test
push
lods
scas
loope
rcll
sub
inc
bound
mov
jnp
adc
jnp
bound
sub
in
push
enter
or
std
mov
std
jno
dec
sbb
fsubrp
and
push
int
inc
sahf
pop
dec
mov
addr16
jge
add
mov
dec
cmp
pushf
cmpsb
add
dec
int
movsb
adc
dec
sub
xchg
xor
xchg
cmpsl
gs
in
shlb
push
push
es
sbb
je
idivl
js
cld
mov
mov
fimuls
sbb
lret
mov
dec
dec
pop
pop
fsubrl
and
pop
pop
int3
in
mov
push
inc
aaa
movsb
testb
cs
inc
pop
cld
add
cwtl
insl
or
add
push
lret
xor
insl
iret
jo
ds
xorl
lret
push
dec
sbb
mov
xor
mov
imul
lret
pop
stc
or
shll
cmp
mov
jne
push
addr16
or
jl
imul
jg
cmp
inc
movsl
sbb
push
inc
and
pop
popf
daa
jns
or
sub
cmp
jle
cmp
pop
ret
sub
imul
mov
lods
dec
ret
stos
int3
mov
in
dec
jb
xor
add
pop
inc
adc
dec
test
cmpsb
push
sbb
mov
leave
lods
call
ret
add
push
les
cs
popf
lea
lods
sub
fwait
lret
mov
cwtl
push
mov
addl
mov
stc
movsl
xchg
cltd
iret
fisubrl
mov
lret
ljmp
dec
pusha
ds
icebp
popa
adc
cmp
xor
in
clc
add
lea
das
adc
sahf
adc
jno
add
aad
scas
xchg
insl
or
jle
mov
pop
mov
popa
faddl
jp
imul
hlt
and
lods
test
repz
mov
sub
int
cwtl
insb
xchg
mov
cmp
push
jnp
xchg
add
popf
sbbl
mov
push
xor
loopne
xlat
mov
sub
add
and
adc
mov
ret
outsb
ss
js
aam
jmp
negb
js
jnp
mov
cli
les
add
ds
pop
out
jge
jmp
adc
arpl
cli
aaa
scas
rcll
add
mov
sbb
mov
dec
adc
dec
stos
jl
pop
xlat
jle
aam
frstor
mov
or
mov
add
jp
shlb
mov
call
arpl
cs
xorl
pop
jecxz
pop
push
mov
enter
mov
ret
pop
jp
rcrb
stos
cmp
push
mov
xchg
mov
rcl
dec
pushf
dec
dec
pop
mov
push
mov
jp
ss
sbb
call
xor
mov
dec
mov
pop
scas
ds
icebp
jmp
pushf
imul
test
jge
fsts
mov
je
xlat
add
inc
push
mov
test
sub
sbb
in
xlat
jno
loope
dec
or
inc
stos
insb
imul
sbb
outsb
adc
test
imulb
add
pop
repz
adc
mov
adc
out
lods
jo
push
fsubs
sub
dec
ljmp
and
add
fnstenv
rcll
sub
mov
out
cmp
mov
cwtl
stos
mov
and
cmpsl
pop
ljmp
movsb
or
scas
fldcw
mov
aas
and
lret
mov
jo
push
loope
mov
fs
add
xchg
cmp
stc
pop
rcrl
pop
in
addr16
or
loopne
js
clc
movsb
xchg
sbb
in
pop
sbb
lds
in
push
jmp
xchg
dec
fwait
scas
and
sub
mov
xchg
dec
add
shll
xor
add
xor
stos
ret
dec
popf
mov
lcall
push
pop
sarl
push
fst
and
les
lds
getsec
jp
inc
dec
outsl
inc
xor
fidivrl
mov
std
mov
shr
lret
lahf
popf
mov
aaa
sarl
push
lcall
pop
inc
push
hlt
test
lods
nop
loop
mov
jae
fs
jmp
jp
pop
xchg
sub
jmp
inc
dec
aam
sti
dec
ds
fidivrl
xor
lcall
adc
xor
cld
fcmovu
ljmp
mov
sub
inc
movsl
cld
out
insl
adc
xchg
lock
mov
mov
adc
orb
int
and
mov
mov
outsl
sub
ficoml
sbb
adc
push
sub
push
cmp
sti
fnstsw
fnstenv
ljmp
das
push
aad
xchg
gs
iret
aam
mov
adc
pop
je
inc
out
outsb
cmp
orl
mov
cli
js
loope
xor
mov
lock
jge
daa
test
dec
adc
xchg
jb
jns
xchg
leave
sbb
sub
cmp
js
loope
jmp
pop
shrl
ret
mov
lds
jp
adc
popf
pop
in
xlat
aaa
sbbb
dec
outsb
int
scas
fldt
pop
addl
inc
inc
scas
fwait
mov
popf
lock
xor
test
jmp
push
jmp
cmp
jno
shlb
mov
fistpl
nop
and
xor
dec
je
aam
mov
cmp
sbb
fwait
cmp
adcb
sbb
or
ret
fisttpll
and
shlb
into
push
push
mov
mov
mov
push
cmp
popf
xchg
fsubl
inc
mov
dec
repnz
or
sbb
pop
dec
addr16
sbbl
and
ret
mov
cmp
pop
rorb
leave
jnp
shl
jecxz
stc
cmc
scas
int
je
fwait
cmp
jl
adc
jo
js
rorl
jecxz
rcl
xchg
and
pop
lods
js
stos
ret
lods
scas
adc
push
dec
add
mov
icebp
inc
enter
xchg
loope
loopne
cmpsl
sbb
and
ds
dec
jo
inc
add
imul
aaa
lret
repnz
movsb
push
and
dec
mov
mov
ret
push
loopne
jnp
inc
mov
popa
repnz
sahf
inc
xchg
inc
add
in
adc
adc
xor
clc
lcall
scas
addr16
push
pop
addl
xor
adc
out
push
int3
sub
push
mov
jmp
ds
jle
and
pusha
sbb
pushl
hlt
sub
lret
cs
and
adc
lods
xchg
push
es
loope,pn
int3
adc
sbb
jnp
je
fnstcw
adc
push
mov
mov
in
sarl
imul
inc
jnp
pop
popf
outsl
insl
int
and
filds
jge
xchg
dec
xlat
stos
lret
in
sub
sub
xlat
test
and
xor
loopne
pop
bound
mov
and
push
std
bound
push
add
out
mov
mov
lret
arpl
dec
in
dec
mov
pushf
mov
hlt
testl
sub
sub
cmp
fisubrl
xchg
loopne
stos
hlt
xchg
or
fwait
push
lods
sub
adc
jg
rol
pushf
cmp
sar
lods
pop
inc
mov
aas
insb
negl
icebp
push
ret
pop
repz
out
xor
mov
xor
mov
movsl
and
dec
mov
loope
rcll
cmp
imul
stos
inc
in
jnp
in
mov
cmc
sbb
add
and
lods
cmp
fildll
sub
mov
ficomps
ret
jo
add
sub
sub
inc
gs
fstpt
loope
fcmovbe
pop
push
pusha
jle
add
loopne
jbe
addb
sbb
mov
into
lds
inc
cmc
cmc
je
rcrb
xor
pop
sbb
jecxz
sbb
lret
js
lahf
dec
cs
jge
pusha
add
ret
pusha
pop
lret
mov
adc
dec
jle
js
icebp
call
call
cmpb
jg
xchg
fisttps
mov
push
cltd
repnz
fstps
adc
int
pop
pushf
jne
dec
jmp
xor
push
movsb
mov
test
iret
cmp
not
cmp
jle
cli
or
add
repz
push
jp
xchg
aam
sub
popf
cmp
cmp
das
into
lcall
push
push
je
pop
imul
cltd
jae
dec
dec
loop
sbb
sub
je
cmp
int
mov
sarl
fbstp
jne
fcomps
shl
xchg
mov
lea
js
sahf
repz
sbb
in
or
pop
cltd
aam
xchg
fsubrs
aas
add
scas
jb
mov
push
sub
ss
mov
rcll
test
push
lds
mov
cmpsl
xorb
push
xchg
int3
clc
lds
dec
wrmsr
jbe
xor
ss
push
add
out
xchg
jle
out
ja
inc
daa
mov
and
and
mov
cmp
out
mov
dec
in
cli
enter
xchg
jg
adc
out
hlt
pop
cld
enter
lods
je
test
inc
sbb
adc
jl
sbb
add
fldl
dec
xor
mov
fidivrs
hlt
testb
push
push
mov
jns
scas
mov
or
ret
test
daa
subl
out
out
inc
ljmp
add
adc
push
ficoml
push
dec
enter
sbbb
les
fistl
rcr
out
jl
mov
cmp
addr16
int3
xor
sbb
sub
mov
mov
rcll
push
daa
loop
mov
xlat
sbb
pusha
pop
lods
arpl
inc
daa
push
pushf
sbb
add
mov
mov
push
sbb
pop
scas
lahf
jge
pop
jmp
js
jns
sbb
es
pop
mov
popf
push
rclb
popf
adc
in
imul
pusha
cs
push
adc
jbe
dec
lcall
xchg
push
ror
push
sbb
lret
add
or
sbb
push
jae
lock
in
adc
lock
push
lods
mov
test
xlat
in
or
or
in
cmpsl
pop
add
xchg
inc
mov
inc
cmp
ret
pop
gs
push
scas
dec
jge
dec
sub
pop
shrl
mov
pop
sarl
test
imul
mov
jnp
xchg
lret
out
cli
shlb
int3
popf
jne
inc
mov
hlt
pushf
rcrl
ljmp
stc
frstor
dec
xchg
and
inc
arpl
cltd
sbb
jl
xchg
das
xor
sbb
mov
andb
mov
ja
dec
pop
in
jg
aas
jbe
xchg
test
ds
adcb
lds
and
mov
lods
movsb
mov
in
mov
sbbb
and
test
daa
stos
mov
push
ret
dec
xlat
add
fwait
mov
xchg
push
mov
adcb
xchg
hlt
mov
push
icebp
jns
cmp
arpl
sub
out
jnp
cmc
sahf
or
fsubp
or
addr16
jbe
mov
dec
ret
sub
out
mov
gs
sbb
sub
and
mov
faddl
cmp
js
popa
arpl
loopne
xchg
cmp
aam
pusha
push
cld
or
jnp
ljmp
lret
mov
sub
stos
into
jp
out
mov
mov
out
jmp
negb
pop
or
insl
ret
mov
ret
loop
sub
loopne
or
adc
roll
push
add
lods
aas
inc
je
hlt
std
adc
inc
sub
sub
orb
in
leave
xchg
aam
repnz
sub
hlt
mov
adc
mov
inc
push
and
insb
jmp
ljmp
les
popa
mov
scas
repnz
add
inc
mov
fs
cmc
jae
push
push
or
out
push
jnp
loop
enter
push
mov
into
lea
add
stos
clc
sub
push
xlat
les
test
push
push
dec
or
dec
mov
aam
lds
gs
or
or
dec
int
repz
xorl
sbb
cmp
popf
ljmp
inc
jmp
mov
mov
test
jle
clc
or
stos
dec
mov
push
push
xchg
jno
ss
mov
xor
mov
cmp
lods
lret
lods
push
in
fsts
sub
scas
lret
sarl
sar
shl
fadds
int
push
fstpl
mov
out
push
xchg
xor
xor
sti
or
outsl
ds
xchg
and
into
mov
out
mov
inc
loope
movsl
call
push
jae
cmp
sub
add
scas
push
push
xchg
stc
inc
stc
sbb
xchg
imul
cmp
fmul
push
jl
je
mov
cmpb
lods
add
addr16
rcrb
mov
mov
loop
repnz
jno
xor
jecxz
bound
in
jge
sbb
pushf
lcall
movsl
inc
inc
push
inc
adc
test
pop
insb
lret
xchg
fs
cwtl
mov
idivb
xchg
hlt
sub
push
fcoms
sbb
mov
mov
addr16
bound
sub
mov
lock
popa
inc
ret
add
lea
pop
mov
pop
add
cmpsb
loop
aas
fwait
jl
cmp
jbe
rcll
outsl
ror
cltd
ss
lahf
inc
stos
push
add
mov
fs
xchg
fcompl
call
or
add
test
add
mov
cmp
push
sub
dec
mov
fdivrl
sbb
and
rcl
sbb
ja
lret
jo
add
add
cmc
or
xor
mov
outsl
xorb
outsl
mov
pusha
adc
xchg
fidivrs
test
cmp
jno
jp
ficompl
repz
aaa
dec
rcll
cmc
daa
xorb
sub
adc
mov
xor
dec
sbb
cmpb
add
lods
adc
push
cmp
cmp
mov
ljmp
ss
decl
mov
lcall
negl
movsb
xor
dec
out
and
inc
daa
fdivp
xchg
ljmp
cld
outsb
in
mov
inc
int3
lret
mov
rolb
cmp
add
loop
inc
cmp
sub
shll
outsb
int
xchg
push
cli
dec
add
hlt
mov
push
das
push
sub
push
adc
dec
fisttpll
lods
lock
sub
out
pop
inc
addb
mov
mov
nop
test
inc
ss
fldenv
jae
xor
test
mov
inc
mov
mov
js
loope
imul
cmp
mov
xchg
xchg
push
les
adc
dec
das
or
fwait
aam
flds
mov
movsl
popa
test
pop
ds
lock
pop
push
mov
xor
or
fld
shlb
mov
xchg
test
and
pop
daa
or
mov
mov
xchg
out
jmp
out
push
and
rcr
push
in
icebp
sub
cli
sbb
push
inc
imul
mulb
fsubrl
sub
add
out
push
das
scas
out
dec
stos
push
ljmp
adc
mov
add
mov
pop
sbb
gs
lods
pop
insl
jmp
xchg
cs
dec
jns
test
and
dec
sti
dec
pop
inc
mov
stos
mull
ficompl
scas
jne
sbb
or
mov
xchg
notb
and
mov
mov
ret
mov
ret
lret
rcrb
cli
div
xor
les
jecxz
mov
mov
fldenv
pop
mov
xor
daa
cmp
sub
mov
or
inc
jle
push
out
mov
mov
mov
jecxz
les
lret
jne
xor
testl
push
test
fcomps
mov
fdivrs
mov
imul
fidivrl
call
test
lahf
lret
insb
sub
xor
and
scas
mov
mov
movb
rclb
sbb
pop
adc
push
outsl
jmp
mov
xchg
mov
mov
pop
call
sti
dec
ds
insb
add
sub
sbb
mov
xor
ljmp
mov
jb
inc
dec
shl
pop
pop
mov
xchg
gs
xchg
jne
xor
xchg
jnp
jae
jo
sbb
out
mov
int
scas
je
dec
add
decl
sub
mov
iret
in
pop
mov
mov
lret
cmpsl
mov
dec
xor
mov
mov
enter
jb
jp
sti
in
andb
out
sub
pop
cmp
jo
stos
aas
test
cmpsb
jmp
ret
int3
mov
jbe
dec
adc
xchg
mov
pop
pop
xlat
stos
dec
into
or
rcl
mov
movsb
stc
pop
cmp
or
rol
push
sub
scas
push
jg
sub
aaa
stc
lock
loopne
add
or
rcrb
sub
divb
cmpsl
test
mov
cmc
in
fwait
xchg
in
ret
enter
sub
mov
mov
std
and
inc
shll
cs
fisubrs
dec
inc
shlb
pop
xlat
mov
xchg
into
push
hlt
fwait
jmp
push
or
loope
adc
xor
ret
test
in
orb
mov
adcb
stc
cmpsl
mov
ljmp
insl
adc
add
outsb
sub
dec
inc
outsl
scas
pop
cli
rclb
cmc
sbb
add
cmp
sbb
xchg
sub
mov
mov
sahf
mov
cmp
stos
inc
dec
inc
je
loop
adcl
lret
jne
dec
cmpsb
jp
stos
jo
push
in
lret
ds
xchg
les
gs
xor
xor
in
and
shrb
sbb
daa
pop
xor
enter
mov
arpl
add
dec
js
jl
sbbl
das
dec
jge
fistps
scas
mov
add
lods
pushf
mov
imul
fs
gs
push
sbb
ret
xor
fwait
pushf
sbb
shll
movsl
ret
mov
je
pop
cmp
mov
gs
stos
cmpsl
arpl
out
xor
adc
mov
xchg
sub
adc
sbb
sub
mov
xor
jbe
fstpl
repz
ja
mov
aad
repz
sub
adc
nop
aad
cmp
xchg
dec
sub
je
push
add
jnp
and
sbb
cmp
fs
jne
test
pop
fnstenv
cmp
fxch
cmp
cmp
sbb
mov
fs
inc
arpl
pop
push
pop
jmp
mov
adc
repz
inc
jns
stos
cmpsb
mov
dec
or
push
adc
insb
cs
orps
sti
stos
ja
call
roll
mov
andb
arpl
lea
adc
jge
les
add
mov
mov
jg
dec
insb
daa
sbb
lock
ret
push
cli
xchg
pop
add
sub
mov
out
jae
inc
lret
decl
cmp
icebp
push
cmp
lock
sub
xor
sarb
stc
pop
in
jae
jmp
add
sbb
jl
neg
push
push
inc
cltd
sbb
cmpsl
and
aaa
outsl
sahf
lock
xchg
cmp
sbb
jnp
pop
vmovups
dec
or
push
lcall
repnz
sub
pop
mov
lcall
nop
int
loop,pt
pop
es
xor
cld
and
xchg
jg
and
iret
inc
xchg
data16
push
fisttpl
mov
inc
fcoms
iret
js
ffree
dec
mov
sbb
cwtl
roll
rol
sub
iret
dec
cmp
lret
mov
mov
test
xor
mov
or
pop
jb
fs
pop
mov
gs
jl
jnp
nop
popf
dec
icebp
fsubrl
and
mov
mov
mov
lds
cmp
jno
rolb
ds
test
pop
mov
push
push
jbe
adc
fists
in
adc
mov
inc
push
xor
imul
mov
out
cld
adc
fwait
cltd
lret
cmpl
test
sub
test
and
sub
or
mov
imul
mov
mov
pop
ds
outsl
pop
rorb
fnstsw
ret
sub
push
or
add
out
jns
shll
mov
ret
dec
test
mov
fisubrs
movsb
and
xor
jg
ja
je
je
add
in
jb
xor
int
mov
mov
dec
push
mov
lods
mov
pop
fistl
scas
lock
or
dec
pop
call
mov
add
xchg
cmp
stc
lods
popa
inc
sub
xchg
xchg
nop
jns
push
sti
jle
mov
xchg
lock
push
add
lods
bound
mov
cmp
fwait
div
dec
adc
ret
int
out
pop
add
or
pushf
lea
push
and
jp
iret
hlt
or
inc
xor
add
add
out
lods
mov
pop
daa
inc
ljmp
jno
into
fucomp
dec
mov
out
gs
pop
cmp
ret
scas
out
push
sbb
inc
xchg
or
mov
adc
lret
popa
push
adc
movsb
pusha
jns
push
pop
fcoms
jnp
frstor
and
outsb
xchg
add
scas
aas
frstor
ss
sbb
inc
dec
cmp
mov
mov
negb
jl
out
test
xor
fcom
cmp
mov
xchg
sub
pop
insb
jmp
xchg
fistpll
or
cmc
sar
mov
xchg
push
insb
mov
and
pop
int
xchg
jl
arpl
lret
leave
inc
out
pushf
testl
data16
pop
repz
cmp
xchg
out
repz
fsubrs
mov
xchg
pusha
imul
test
sahf
lcall
adcl
pop
adc
cmpsb
ss
es
jbe
mov
sub
push
outsl
fucomi
out
sub
jne
xchg
lret
movsl
lret
lcall
mov
scas
xchg
cltd
lar
jmp
jne
mov
bound
dec
aam
mov
inc
sahf
leave
int
fwait
lea
scas
push
dec
dec
add
js
fbld
push
outsb
out
adc
jne
jp
in
mov
roll
dec
pop
popa
out
xchg
fs
adc
pushf
push
jmp
fisttps
imul
xor
pusha
out
dec
enter
scas
out
testl
sbb
das
negl
dec
lds
sbb
cmp
es
outsb
fwait
popf
scas
sahf
mov
and
sbb
add
ds
dec
cmc
loope
xor
cmp
jns
mov
mov
ret
pop
mov
mov
push
pop
jl
and
sub
jbe
push
stos
cmp
lret
and
mov
rorb
loopne
sbb
sub
cmp
mov
add
cmp
andl
bound
loopne
ret
fistpll
das
fmuls
jne
lds
inc
test
mov
leave
xor
cmpsb
mov
out
mov
out
xor
push
movsl
lods
clc
pop
popl
out
mov
ret
mov
mov
add
mov
mov
add
movsl
fcoms
ret
popa
xchg
loope
dec
lods
sbb
lsl
lcall
aad
sub
mov
jmp
lahf
jle
jle
testb
jnp
in
pop
fidivrl
mov
mov
and
pop
or
aas
mov
jne
cmp
or
cmpsb
mov
or
sub
xchg
call
int
sub
subb
mov
jns
lock
cli
lds
out
or
jmp
lret
aam
mov
xchg
jmp
mov
mov
fcompl
lods
ljmp
hlt
mov
push
xchg
push
js
mov
or
push
mov
bound
inc
mov
fs
aam
loopne
cltd
dec
push
lea
mov
test
hlt
mov
xchg
shl
stos
sbb
mov
jl
jno
mov
movsb
out
and
mov
call
cmp
icebp
cmp
jno
mov
mov
in
jno
push
and
out
xor
jle
fcoms
lock
push
loop
jnp
daa
sbbb
ja
cmp
jmp
loopne
ja
or
ret
push
xor
dec
push
out
jmp
test
into
sbb
ret
add
sbb
lods
inc
mov
inc
je
push
daa
pop
push
cmp
inc
into
es
xchg
lcall
loope
jno
cmp
orb
hlt
add
sarl
ljmp
pop
les
push
in
std
ss
imul
mov
scas
mov
sbb
int3
mov
mov
xchg
les
jge
mov
adc
sti
add
stc
add
pop
pop
pop
cld
xchg
lcall
int
pop
and
rolb
pop
xchg
pop
shll
cmc
mov
sbb
andl
pushw
push
pop
jae
inc
push
mov
jne
xor
aam
xor
push
sbb
mov
pop
les
push
cmp
xchg
lcall
push
flds
pop
sub
sbb
dec
std
pop
jne
push
mov
test
test
dec
stos
aam
movsl
push
push
pusha
xor
xchg
sahf
cmc
rolb
jge
dec
pop
adc
out
mov
dec
fwait
jecxz
movsb
sub
imul
sarl
fsub
test
neg
push
mov
inc
andl
rorb
fidivl
scas
mov
rcr
js
imul
pop
push
sti
mov
out
dec
jbe
emms
add
jge
sahf
cltd
shlb
outsb
into
lret
imul
jmp
and
sub
mov
jmp
jae
popf
jmp
stos
inc
bound
iret
lock
jne
fs
es
and
enter
sub
mov
dec
xchg
shrb
enter
inc
std
in
sahf
or
enter
dec
cs
jg
jo
fnclex
pop
fiaddl
stos
cltd
mov
jno
sbb
das
xor
nop
pop
rolb
in
inc
popf
jecxz
lock
scas
pop
aam
adc
adc
jae
lock
loop
je
xchg
xor
add
scas
and
movsb
pop
outsl
mov
mov
fcoml
mov
add
cld
mov
gs
add
add
dec
mov
and
cmpsl
push
add
nop
add
jmp
jmp
jbe
xchg
cld
ret
int
bound
sti
in
stos
imul
cwtl
mov
sbb
int
pop
xorb
push
in
push
jns
jbe
pop
push
adc
pop
adc
cmp
pop
bound
xchg
fldcw
push
daa
add
je
addr16
and
xor
fadds
in
dec
sbb
lret
insl
sub
and
and
jmp
clc
cmp
xor
push
push
fsubl
jecxz
pop
ja
jecxz
lcall
xlat
cli
add
push
sub
outsb
in
stos
loopne
dec
mov
sbb
pop
in
orl
sbb
cmpsl
jns
jecxz
sub
lods
sbb
cltd
pop
sub
mull
imul
pop
ja
ret
pop
jp
mov
scas
scas
notb
jg
dec
adc
lret
sbb
std
or
mov
jno
fisubrs
sub
sub
adc
cmpsb
mov
scas
sbb
not
mov
test
push
cli
inc
cmp
mov
push
and
jne
pushf
sub
cmpsb
test
sub
lods
add
inc
cmp
pop
sub
fwait
sub
mov
mov
or
incl
movsb
repz
lea
dec
push
mov
mov
stc
mov
test
orl
repnz
or
clc
ss
jmp
xor
lret
outsl
xchg
xchg
push
lea
inc
stos
jecxz
sar
sbbl
xchg
xchg
or
les
in
into
mov
push
mov
in
pushf
jg
and
pause
add
dec
xlat
sub
cld
cmp
mov
ljmp
lcall
add
sbb
sti
clc
ror
adc
cmpsb
aas
and
mov
push
or
jle
mov
cmp
sub
scas
pop
fbstp
aad
sbb
pusha
adc
sbbl
cmpsb
in
push
sbb
cmc
sub
popf
js
data16
jge
inc
sahf
inc
adc
lods
jp
sbb
xchg
push
in
cmp
cmpl
decb
add
insb
and
lods
cltd
int
sbb
push
jg
sbb
sahf
mov
jge
mov
push
imul
movsb
mov
xchg
outsb
mov
in
jne
jmp
int
cmp
inc
insb
add
fidivrl
out
cmpsl
dec
mov
xor
scas
repz
call
sti
adc
dec
mov
clc
inc
mov
fs
dec
and
ja
loop
xchg
mov
or
roll
jno
sub
hlt
jle
mov
mov
xor
clc
js
out
cli
mov
jo
cs
fs
push
aam
pop
xchg
fsubl
dec
stos
sbb
aaa
pop
adc
mul
stos
pop
div
gs
frstor
mov
lret
mov
dec
cmp
mov
push
mull
push
inc
inc
sbb
mov
pop
jp
shl
push
mov
sbb
push
adc
sbb
loopne
nop
xor
and
adc
cli
xchg
xor
out
icebp
pop
loop
jb
inc
mov
sbb
jb
pop
mov
jmp
cld
cmp
das
rcrl
repz
bswap
ja
pop
mov
lods
imul
pop
fcmovnu
xchg
stos
jg
pop
arpl
shll
jae
jecxz
inc
sbb
or
addr16
orl
push
dec
mov
int3
add
sti
push
push
enter
mov
popf
sub
ljmp
lock
cmp
xchg
mov
or
inc
adc
int3
cmp
mov
sahf
stos
jp
icebp
data16
mov
cmp
sub
in
lods
pop
movsb
outsb
xbegin
jl
loopne
nop
ret
lcall
test
xor
jb
cltd
xchg
and
cmc
pop
add
adc
lret
out
fsubrs
mov
mov
jle
push
cmp
shll
adc
add
gs
mov
add
js
jl
rolb
test
cmp
andl
mov
cmpsb
fmull
xchg
fiadds
rcrb
dec
or
testl
pusha
pop
sbb
cli
aam
inc
pop
fs
int
test
cmpl
xor
mov
nop
push
fwait
add
push
out
xor
mov
inc
loop
es
ret
idiv
push
imul
jbe
push
pop
gs
sbbl
icebp
in
insb
pop
test
push
jp
aad
into
ficoml
sbb
mov
popa
mov
les
xchg
test
push
addr16
ljmp
cli
rol
jmp
xchg
mov
sete
out
pop
cmp
push
aad
mov
adc
into
mov
fldpi
ret
cmp
out
xchg
inc
roll
lea
mov
fucomp
push
es
ss
pop
je
or
out
addr16
sub
mov
mov
std
inc
aam
push
xchg
call
shrb
adc
dec
cltd
stc
xor
loope
scas
scas
movsl
push
pushl
mov
repz
mov
aad
sbb
rolb
fstl
jae
cmp
xor
popl
mov
in
imul
js
mov
cmpl
iret
je
test
mov
pop
clc
sbb
insl
pop
hlt
hlt
sub
or
pop
lock
lods
xchg
aad
adc
lahf
dec
mov
sbb
cmp
out
fadds
arpl
lret
pop
pop
imul
pop
and
sub
hlt
icebp
in
ljmp
pop
ret
aas
int
mov
xor
cmpsb
repz
movsl
xor
xor
pop
jns
cltd
xlat
pusha
sbb
cwtl
lret
mov
ret
cmp
daa
add
dec
xor
inc
jl
jmp
pop
pusha
imul
rolb
and
into
cmp
inc
add
filds
pop
or
shll
jecxz
mov
mov
xchg
in
ret
fcmovnbe
jecxz
cmp
loope
in
mov
inc
lea
int3
sub
jae
pop
fistpl
pop
movsl
push
adcl
fsubrs
xor
popf
xor
or
or
int3
ljmp
mov
mov
jmp
icebp
adc
dec
mov
xor
xor
inc
cmp
or
fisubrs
daa
in
lcall
dec
test
mov
xchg
int3
js
push
pop
cmpsl
fldcw
mov
pop
mov
test
mov
test
shrl
pop
in
into
popa
sbb
push
cs
mov
dec
xchg
add
lea
pop
mov
daa
insb
sti
cmp
imul
fwait
jge
xchg
mul
sbbl
xchg
jge
adc
inc
mov
ljmp
sbb
sub
in
mov
mov
mov
xchg
add
push
and
outsb
shl
mov
add
mov
int3
and
enter
data16
outsl
jnp
rorl
mov
ficomps
xor
mov
or
sub
xchg
loopne
stos
dec
sahf
xchg
shll
rol
dec
push
and
sub
mov
cs
nop
inc
dec
fistpll
mov
sar
push
fistl
lods
jb
aad
mov
call
scas
xchg
jge
push
mov
cli
jne
cmp
lahf
pop
mov
mov
mov
xchg
aas
lcall
loope
push
insb
push
or
fsubr
inc
push
xor
scas
call
jo
ret
outsl
jne
nop
adc
mov
lret
push
imul
sbb
nop
mov
das
outsl
fwait
xor
scas
adc
sub
add
pop
and
sbb
lret
sbb
pop
test
mov
push
cli
movsl
sahf
repnz
stc
hlt
pop
ljmp
cmpsl
fs
cld
and
or
mov
inc
outsl
mov
inc
loop
lret
es
bound
mov
and
imul
xchg
sbb
jb
pop
xchg
dec
movsb
insb
add
jmp
add
int
push
xchg
jg
lcall
ds
shlb
cmp
mov
int3
pop
pop
fisubrl
sar
mov
sub
jl
mov
in
xchg
mov
pop
js
outsb
push
dec
popf
repz
pusha
fsubl
call
cmp
sbb
icebp
nop
call
cmp
scas
inc
sahf
add
test
pop
pop
test
imul
cmp
dec
inc
shrl
call
mov
pop
xchg
aam
sub
sub
or
bound
push
adc
jnp
xchg
mov
and
sbb
fnstsw
jmp
pusha
gs
sbbl
and
pop
pop
dec
mov
mov
pushf
xlat
push
dec
rcrb
add
mov
adc
pop
dec
xorl
sbb
inc
pop
aad
adc
ret
push
insb
sti
imul
pmulhw
les
stos
out
mov
ret
jo
pop
adc
daa
push
js
or
aas
in
nop
lahf
das
mov
mov
lods
nop
or
cmp
xchg
popf
imul
inc
inc
push
cmp
iret
sub
lods
loope
mov
pusha
pop
push
inc
rol
in
mov
mov
inc
cmp
mov
aaa
mov
out
and
cmp
xor
lahf
test
ljmp
int3
insb
aaa
cmpsl
sbb
stos
fcoms
imul
push
out
push
sti
repz
cmp
les
sub
push
aad
iret
cmp
adc
lock
in
push
rolb
and
mov
sbb
popa
jle
popf
mov
push
addl
fdivs
adc
aas
xchg
xchg
and
inc
jae
fistps
or
inc
testl
stos
lods
imul
sti
fdivr
fimull
pushf
xor
mov
cmpl
shll
or
ret
in
mov
nop
and
shl
and
xchg
or
xor
push
xrelease
outsb
mov
cli
loope
imul
mov
jp
cmp
rcll
mov
vmovdqu
out
and
sub
fbld
lock
fmull
mov
fstps
cmp
sarl
cmp
or
push
dec
inc
testl
dec
mov
push
cmp
pop
xor
push
mov
cwtl
nop
xchg
mov
pop
lret
mov
inc
cmp
adc
mov
mov
xlat
push
sub
push
cmp
add
or
mov
shr
cmc
std
inc
stc
xchg
out
call
mov
mov
int
jne
xor
add
fadd
fdiv
sbb
inc
push
jp
push
pop
add
outsb
inc
insl
push
dec
ja
stos
loopne
and
adc
add
adc
jp
rolb
leave
adcl
jae
push
mov
scas
add
data16
mov
leave
popa
aad
lods
test
movsl
outsl
xchg
push
pop
inc
sub
mov
adc
mov
loopne
push
cmp
cli
jl
test
icebp
es
adc
jge
movsl
cs
inc
andl
into
pop
ficoms
dec
and
lods
mov
inc
fsubl
divb
out
shll
popa
push
ljmp
push
and
out
cs
icebp
add
add
int3
lods
push
pusha
arpl
jg
mov
jo
mov
sbb
pop
inc
arpl
ljmp
ljmp
lods
fdivl
ss
ja
out
sub
fidivl
mov
mov
pop
ja
xor
cmp
data16
icebp
xor
fdivs
hlt
fsubs
add
mov
mov
mov
adc
push
loope
out
mov
mov
dec
outsl
ja
movsl
adc
stos
pop
pop
fdivrs
shll
ret
or
int3
push
xchg
mov
mov
movsl
cmpsl
xchg
inc
inc
gs
dec
lds
shld
or
jle
insl
jge
inc
pop
inc
dec
int3
xchg
loope
push
icebp
clc
dec
sahf
pop
pop
cmp
add
sahf
jo
mov
push
ss
pop
push
lret
adc
outsl
pop
dec
add
cld
sbb
sub
and
dec
xor
push
je
pop
dec
adc
loop
mov
or
cld
sbb
inc
insb
dec
sbb
gs
in
subl
popf
cmp
adc
bound
les
data16
sub
outsl
adc
push
scas
pop
jp
ret
add
cmp
pushf
lods
lret
movsl
jne
pop
fimull
lret
jge
out
aaa
dec
leave
push
movsl
rol
lret
or
push
stc
sbb
cltd
push
pop
jno
fwait
cltd
mov
push
lfs
cmp
loope
pop
stc
out
mov
cmpsb
and
inc
and
sbb
sub
icebp
outsb
jp
stos
icebp
arpl
insb
sub
shrb
mov
mov
jmp
or
adc
pop
mov
push
add
cld
loop
pusha
inc
push
loope
nop
jo
ljmp
cmpl
mov
push
pop
dec
scas
rolb
addr16
mov
xchg
pushf
or
cwtl
pop
inc
les
adc
loope
repnz
mov
jne
mov
dec
repz
mov
and
fwait
add
dec
insl
mov
test
add
clc
outsb
and
and
xor
mov
pop
test
xor
insb
push
imul
or
daa
repnz
sub
sub
dec
movsb
out
in
push
out
add
mov
lea
fs
add
and
xchg
pusha
cwtl
jne
fwait
xor
jl
push
xor
cmp
imul
aas
aad
icebp
sub
popf
call
std
mov
inc
arpl
jge
fists
mov
out
jg
fdivs
popf
inc
sub
sbb
mov
pop
mov
out
loope
xchg
sbb
dec
bound
je
hlt
cs
repnz
ds
sbb
int
test
and
jle
add
xchg
ss
or
sbb
lods
cmp
outsl
lahf
jg
xchg
xchg
cld
lret
mov
data16
cmc
sub
mov
scas
scas
dec
call
test
push
mov
call
jnp
or
pushf
push
in
mov
in
jge
sub
jno
test
mov
pop
cmp
adc
hlt
lret
adc
pop
mov
mov
jg
cwtl
movsb
aad
mov
hlt
mov
in
mov
cmova
leave
scas
pop
cmp
xchg
fsubp
fcomip
loopne
pusha
jnp
mov
sti
cwtl
movsb
xchg
xor
or
and
stos
xchg
cmc
xchg
cltd
fwait
lods
adc
adc
mov
cli
repz
into
and
push
data16
xchg
iret
sbb
gs
cmp
or
in
or
jbe
pop
nop
mov
or
jnp
arpl
outsb
add
dec
aas
or
out
xchg
scas
movsb
mov
xor
lds
pop
dec
js
push
xchg
mov
pop
jmp
jmp
aas
sbb
subb
mov
xchg
cs
adc
ficoms
push
inc
and
pop
xor
jl
movsl
sbb
adc
sbb
push
mov
enter
aas
into
pop
xor
rcll
movsb
xor
outsl
adcb
add
pop
add
dec
adc
or
inc
mov
and
or
xchg
push
inc
das
mov
sahf
leave
aas
mov
adc
popa
mov
or
sti
jo
and
das
xchg
movsl
clc
dec
es
scas
gs
sbb
add
mov
pop
jmp
xchg
rcl
test
cltd
inc
ja
inc
mov
std
mov
mov
in
push
mov
sti
pop
pop
pusha
jle
rolb
push
pop
ss
aaa
xchg
adc
sub
dec
std
inc
sub
popf
jbe
cmpsb
xchg
dec
dec
scas
mov
sbbl
and
iret
sbbl
gs
stos
nopl
push
jge
pop
mov
jg
test
sbb
mov
mov
mov
dec
mov
or
icebp
fstcw
pop
ljmp
in
dec
jae
ljmp
stos
mov
iret
ds
out
loope
jmp
or
call
xchg
pop
push
jp
cli
jp
pop
xchg
daa
mov
fcompl
xor
inc
add
ss
and
les
rclb
in
pmaxub
loopne
jp
cmpsb
cmpl
sbb
or
fisttpl
jb
cwtl
fadds
cmpb
test
pop
adc
nop
aaa
inc
int
jg
test
pop
cmpsb
xor
movsb
add
mov
jmp
mov
mov
jns
adc
movl
ret
call
push
or
jne
pop
mov
js
jns
push
lods
mov
ret
icebp
mull
jecxz
int3
mov
push
movsb
cli
in
add
jmp
std
xor
pop
add
testl
adc
movsb
test
jae
mov
mov
aas
xor
sub
imul
xchg
adc
inc
lcall
in
movsl
xor
insb
icebp
hlt
ljmp
xchg
add
lcall
mov
dec
insl
mov
mov
call
xchg
aas
jge
shl
dec
jns
js
pop
jne
adc
dec
jnp
ror
or
xchg
jmp
shlb
insl
adc
mov
mov
xchg
inc
mov
mov
and
push
cs
jbe
adcl
xchg
int3
sbb
jno
jb
mov
mov
xor
sub
mov
gs
sti
mov
andb
mov
inc
leave
ss
xor
add
cmp
in
arpl
pause
or
xchg
loopne
sahf
in
push
imul
lret
mov
arpl
jge
ret
pop
jbe
cmp
test
aam
int3
add
out
pushf
jns
jno
inc
in
enter
fidivrl
pusha
imul
mov
ret
stos
mov
stos
mov
push
or
pusha
sub
fwait
bound
jbe
lea
fcmovb
xor
jecxz
mov
sub
fisttps
mov
mov
mov
je
subl
jg
cld
sub
lea
std
mov
inc
pusha
inc
jg
rcrl
inc
pushf
incb
push
loop
dec
sub
orb
popf
bound
xor
inc
jo
fsts
fidivs
and
xchg
add
pop
sbbb
jo
es
ds
adc
movsl
jns
fucomip
mov
imul
aad
gs
mov
jae
pop
push
subl
cmp
add
loop
mov
cli
xchg
inc
lock
in
adc
or
and
lret
adc
push
mov
xchg
mov
sarl
ret
cmc
and
jmp
pop
sub
mov
outsl
iret
dec
or
fwait
aam
gs
adc
pushf
imul
popa
mov
mov
pop
inc
fwait
pop
sarl
xchg
xchg
and
and
mov
sbb
ljmp
lret
gs
mov
hlt
fldenv
add
xor
sbb
mov
jmp
push
pop
iret
mov
pop
adc
lods
inc
xchg
int3
in
mov
imul
push
pop
dec
or
rol
mov
and
xor
lcall
sti
xor
pop
out
stc
xchg
pop
mov
lss
lds
dec
into
xchg
pop
aad
loop
cmp
cwtl
mov
pop
subl
xchg
in
inc
sub
cmp
aad
sbb
dec
daa
out
pop
adc
jge
clc
in
ss
leave
pop
xchg
jg
ret
mov
and
pop
adc
ficompl
cmpsl
add
xchg
pop
jmp
pop
lea
xchg
mov
js
repnz
lahf
and
jb
iret
jns
fwait
push
ja
fnsave
xor
daa
xchg
and
dec
sub
sub
jo
jb
ja
nop
sbb
std
sahf
mov
sbb
dec
or
xor
sbb
int3
push
das
into
stc
adc
gs
xchg
rol
daa
sbb
sub
fmuls
mov
dec
aam
mov
cwtl
lcall
push
orb
ja
pop
js
or
or
mov
xor
and
popf
push
rclb
aam
lds
sbb
outsl
insb
cli
push
and
out
mov
popa
or
mov
les
push
stos
mov
inc
sub
loope
inc
pop
and
sub
lret
mov
imul
jge
jecxz
sub
lods
rol
jbe
sbb
pop
push
cmpl
jno
test
or
inc
lods
lock
cmp
mov
outsl
out
lret
adc
sub
xlat
das
rcl
cmp
fs
outsb
ljmp
das
push
xor
leave
cmpb
dec
lock
sub
adc
xor
mov
cmp
hlt
inc
pop
mov
mov
mov
loopne
xchg
mov
pop
mov
xchg
repz
cmp
lods
je
insb
cmp
mov
in
aad
push
xor
sub
movsb
xorl
aam
shll
sub
jg
push
repnz
jno
jl
pop
lock
repnz
mov
les
in
xchg
jmp
daa
cs
into
dec
imul
roll
jno
outsb
push
mov
pop
fxch
subl
mov
pop
xor
jo
sub
aam
jno
out
inc
adc
inc
xor
sbb
pushf
and
out
push
movsl
fisttps
xor
and
test
mov
or
or
fstpt
adc
push
sub
sub
mov
xchg
mov
ror
shrl
inc
and
mov
jbe
mov
xor
fstl
adc
pop
lea
pop
dec
push
add
scas
ljmp
in
dec
shrb
xlat
aaa
in
movsb
cwtl
loope
or
jp
lcall
and
xchg
cmp
pop
stc
fwait
xor
sbb
push
add
cmp
and
leave
sbb
cwtl
mov
xchg
sbb
jae
pop
mov
hlt
dec
int3
mov
mov
mov
mov
test
xor
cld
out
lods
hlt
repz
ret
cltd
xor
leave
sti
mov
inc
sbb
adc
push
hlt
aam
mov
sbb
mov
cli
gs
jne
push
std
sub
gs
xchg
push
fdivs
mov
loop
rorl
jb
decb
lret
xorb
sub
int3
ds
pop
scas
push
or
int3
imul
and
in
fstps
rcl
inc
xchg
lret
rcl
jmp
shll
mov
and
or
cmp
loope
jp
aad
add
mov
mov
andl
xchg
push
sub
inc
addl
clc
sbb
lret
push
fsts
mov
inc
mov
push
or
lret
dec
mov
mov
jo
xor
pop
cwtl
add
loope
sub
lods
xchg
and
stos
daa
add
add
loopne
scas
mov
popa
js
push
addr16
jne
xor
push
push
sahf
jle
inc
push
adc
pop
lea
mov
mov
sub
mov
ljmp
dec
pop
sbb
daa
push
test
and
aad
cmp
ret
mov
dec
adc
mov
icebp
cmp
nop
jge
xchg
cltd
lds
inc
cmp
cli
sbb
sub
sahf
test
fcoms
scas
inc
dec
sti
fst
inc
push
xchg
sti
add
dec
hlt
mov
jle
jns
repnz
mov
cmp
popa
outsl
adc
pop
loope
push
aam
arpl
in
sarl
ljmp
sub
ss
xor
cmp
out
xlat
add
mov
or
jmp
push
inc
rclb
mov
or
xchg
arpl
fnstenv
cwtl
hlt
stos
mov
mov
sti
pop
push
push
bound
pop
lahf
jecxz
es
and
jle
sbb
or
sub
movsb
pop
call
and
jg
jle
aam
je
adc
enter
jle
das
and
adc
mov
loop
stos
std
rcl
stos
sbb
daa
scas
push
adc
cli
mov
mov
and
fwait
or
cmp
sub
shrl
pop
test
gs
stc
cwtl
mov
cmpsb
jno
js
es
test
mov
fistpl
mov
cld
jmp
aaa
jns
in
fisubrs
je
or
mov
mov
or
test
and
mov
xchg
leave
add
in
cmp
mov
popa
fsubs
pop
dec
fucomi
cmp
ret
add
mov
pop
jno
shlb
cli
pop
cmp
mov
test
and
sbb
shll
or
movsb
xchg
dec
aas
lods
mov
and
dec
push
jne
ljmp
int
sbb
mov
or
mov
cmp
flds
add
add
and
int3
xchg
pop
fisubrs
movsb
push
mov
mov
gs
stos
dec
sbb
dec
imul
cmpb
repnz
clc
xor
cmp
pop
cwtl
nop
dec
in
mov
fwait
inc
xchg
fisubrl
push
das
loope
sub
inc
mov
scas
sti
jg
andps
mov
mul
sahf
xor
adc
push
mov
inc
pusha
fcomps
xchg
push
push
loopne
je,pt
inc
pop
jne
nop
mov
pop
arpl
cmpsb
dec
dec
sar
xchg
add
adc
into
shlb
hlt
stos
aam
inc
mov
fldenv
adc
or
dec
jg
add
mov
shr
pop
cwtl
inc
ss
nop
call
push
clc
iret
inc
mov
sbb
jbe
pop
dec
adc
data16
push
pusha
push
lret
sbb
lret
push
push
loopne
clc
push
out
bound
dec
stos
xor
hlt
stc
int3
xor
push
push
cmp
daa
arpl
jl
and
loopne
mov
and
and
in
xor
pusha
das
and
jge
sar
gs
xor
je
lahf
jbe
stos
jns
jge
xchg
adc
sbb
in
hlt
incb
xchg
mov
push
jns
add
mov
jno
and
adc
int
es
nop
push
mov
loop
int
sub
aaa
aas
xchg
dec
jne
push
fdivr
push
adc
cmp
leave
dec
dec
push
pop
fdivrl
mov
lret
iret
fdivl
scas
inc
jmp
dec
fdivs
sub
jb
incb
je
dec
jo
push
outsb
xchg
pop
dec
iret
imul
fstp
pop
pop
call
jp
aas
in
lret
mov
sub
mov
pop
fs
aad
sub
fs
inc
xchg
xchg
mov
pop
adc
movsb
test
movsl
cltd
out
repz
scas
aaa
push
or
xorl
xor
test
je
push
cld
mov
push
jl
xor
ror
lret
add
mov
adcl
jbe
jo
scas
sbb
pop
repz
adc
dec
inc
cmovp
clc
loop
lods
rol
jmp
sbb
cwtl
leave
mov
addr16
lea
mov
and
cmpb
pop
sub
insb
sub
dec
mov
jmp
out
test
cmc
fildl
push
mov
sbb
or
cmpsl
adc
push
fwait
out
mov
pop
loopne
jno
or
push
scas
std
call
jno
xchg
mov
popa
cwtl
rorl
rcll
xor
into
je
cmp
pusha
mov
scas
shlb
cmpsl
ja
pop
dec
adc
sub
push
cmp
and
jmp
or
xchg
mov
sbb
cmp
jbe
mov
push
mov
in
mov
push
fdiv
sbb
sub
xor
inc
jecxz
adc
fnsave
jmp
and
jmp
jg
lock
adc
jns
ret
mov
outsl
mov
cmc
loopne
into
dec
int
pop
sub
lret
imul
or
loop
pop
ss
xor
add
aaa
movsb
cli
inc
mov
ds
arpl
adc
sbb
add
test
orb
jecxz
cs
pop
pushf
cwtl
mov
sub
xor
cli
jns
outsb
shl
sub
or
ret
les
ficoms
call
out
dec
add
cmp
xchg
dec
popf
ss
xor
push
lods
cld
and
cli
cli
jo
lods
push
insb
add
or
faddl
mov
fwait
push
dec
mov
pop
jns
jp
jo
sarl
arpl
dec
pop
cmpsl
pop
js
ficompl
mov
cmp
shr
lock
inc
push
lret
insl
push
js
into
sub
repnz
arpl
mov
dec
stc
jmp
sbbb
mov
cltd
mov
int
dec
fmull
sti
jle
jecxz
leave
add
pop
into
push
adc
push
lahf
add
popa
vmptrst
cltd
inc
or
xchg
cli
xchg
les
loope
adc
adc
imul
insb
add
or
jae
int3
xchg
and
mov
ja
cmc
lods
fwait
aam
add
mov
imul
daa
jmp
inc
jle
mov
gs
loop
mov
int3
inc
fildll
enter
xchg
ret
ja
inc
sbb
decb
mov
ffree
fildll
mov
loop
push
sahf
xchg
cmpsb
mov
push
leave
push
jae
les
and
pop
repz
call
sub
sub
xor
mov
jg
ljmp
fildl
cmc
jo
jnp
inc
push
and
aad
and
sbb
pop
mov
adc
rolb
mov
jmp
cmp
in
cli
icebp
pop
out
xchg
out
cmc
lods
lea
notl
int3
mov
sub
into
std
gs
outsl
add
loop
ret
cwtl
jg
jo
mov
addr16
cmp
adc
out
repnz
sbb
cmp
repnz
pop
fisubl
pop
pop
inc
or
xor
divl
add
mov
ss
mov
inc
call
cmp
scas
mov
jo
pop
pop
mov
stc
insb
lahf
sub
and
stos
mov
jmp
inc
sti
movsb
inc
fsubrs
icebp
mov
cld
lcall
hlt
outsl
adc
lea
dec
xor
insl
imul
jae
rcrl
lds
dec
hlt
mov
push
sbb
popf
into
and
mov
imul
adcb
mov
mov
sbb
ds
inc
hlt
test
pop
jg
xlat
mov
int3
jecxz
xchg
sti
dec
xchg
daa
mov
std
aas
xchg
xor
ret
test
pop
or
xchg
jo
popa
add
adc
push
cmpsl
movsl
mov
rcr
sbb
mov
mov
out
jbe
fnstenv
push
add
stc
ret
ds
or
mov
dec
push
and
sbb
jns
and
add
insl
mov
sar
in
jne
int3
das
daa
addr16
imul
add
pop
mov
stos
notb
mov
xchg
adc
inc
pop
mov
icebp
mov
insl
or
pop
insl
mov
ret
out
jbe
pop
ficomps
stc
cmc
sbb
es
push
fstpl
icebp
jnp
adc
movsb
out
ret
push
call
inc
cmp
sub
sahf
popa
inc
fadd
testb
sbb
jge
adc
cmc
mov
mov
lcall
dec
mov
loopne
pop
into
xchg
mov
lea
mov
dec
dec
repnz
mov
push
jnp
mov
or
mov
enter
and
pop
add
dec
mov
lods
jecxz
push
dec
jns
adc
ja
dec
aam
adc
mov
inc
sub
add
ret
lea
mov
xlat
das
fcomp
lahf
icebp
mov
pop
dec
fistl
push
inc
stos
lret
sub
das
pop
and
sbb
std
mov
mov
mov
loopne
mov
fadd
shll
lret
mov
sarb
xor
es
jae
xchg
ret
jae,pt
jp
sbb
mov
mov
int3
jp
inc
in
inc
mov
icebp
push
test
ret
mov
addr16
add
jae
mov
test
lods
in
lcall
push
mov
jo
lcall
mov
mov
add
jmp
inc
adc
push
adcb
pop
std
divl
arpl
cs
mov
cwtl
xchg
jne
sub
pop
mov
pushf
mov
sbb
hlt
push
sub
mov
mov
xor
in
mov
inc
pop
pop
idiv
or
lcall
es
fwait
out
scas
cmpsb
dec
cmp
loopne
push
jle
mov
jns
loop
or
pusha
jo
xchg
movsb
cld
cmp
mov
aaa
pop
mov
adc
mov
rorl
or
test
adc
cltd
loopne
push
in
sub
movb
imul
cmpsl
out
pop
repnz
hlt
repz
or
pop
push
call
cmp
movsb
scas
jnp
sti
shll
adc
stc
dec
mov
pop
adc
or
lret
fsubrl
pop
mov
inc
push
inc
es
scas
orl
fidivrl
mov
sub
xchg
pusha
add
call
in
je
gs
mov
adc
imul
inc
xchg
addl
adc
arpl
lods
scas
add
stos
and
inc
dec
dec
mov
leave
aas
pop
pushf
mov
push
outsl
lcall
xor
push
into
and
push
sbb
cmp
mov
push
and
or
xor
popa
push
mov
mov
movsl
imul
into
mov
mov
icebp
addr16
ret
push
xchg
lods
or
sbb
pop
mov
mov
xor
mov
rep
add
adcl
sahf
lods
xchg
dec
test
or
jmp
icebp
add
mov
sub
cmp
iret
sbb
push
mov
pop
xor
jae
pop
sub
dec
in
pop
mov
popf
int
es
or
dec
sub
shlb
insb
stos
or
dec
cltd
cmp
push
lcall
pop
sarb
fildll
jbe
lahf
push
lea
and
jmp
outsb
jmp
xchg
xor
cmp
test
xor
mull
push
adc
mov
inc
loope
jl
xchg
movsb
add
loopne
test
stos
sub
jnp
andb
and
shll
mov
mov
bound
jb
ss
lock
and
xchg
out
sub
jle
cmp
xor
ret
lret
xchg
pcmpeqw
shlb
imul
inc
stos
dec
subl
xor
js
xchg
xchg
dec
in
mov
push
std
jne
cld
mov
cli
mov
rcr
cs
in
sbb
scas
pushf
dec
in
inc
inc
mov
xchg
mov
ret
ds
adc
push
inc
and
int
mov
cmpsl
mov
cmp
mov
insb
xchg
mov
rol
inc
incb
sbb
jno
addb
sahf
je
into
xchg
loopne
pop
cmp
push
ret
xchg
into
and
jg
insl
pusha
aaa
pop
sub
out
dec
cld
pop
test
and
mov
pop
int
inc
and
and
push
jb
push
or
push
inc
test
mov
aas
jbe
leave
lret
das
sub
sbb
mov
add
ja
push
and
scas
nop
xchg
fiadds
and
push
test
outsl
push
xor
int3
jbe
rorb
iret
loop
imul
std
add
cmpsl
cmp
fildll
shrb
push
cmpsb
into
imul
xchg
push
or
fisubrs
notb
mov
jg
jp
sti
push
cmp
fisubl
fimuls
cli
sbb
push
jb
pop
cwtl
cmp
pop
leave
sbb
or
xor
rorl
les
mov
pop
xchg
stos
ret
insb
sub
pop
jp
js
fbld
punpckhbw
mov
mov
xchg
js
ljmp
lret
jb
addr16
mov
aaa
jmp
iret
push
add
jbe
cmc
movsb
mov
stos
and
xlat
pop
xchg
push
and
cld
jbe
xchg
adc
fidivrl
cli
mov
mov
sbb
mov
repnz
push
popf
mov
les
lods
iret
xchg
fiaddl
aam
notb
mov
mov
push
or
sbb
push
and
fwait
int3
lods
ss
or
push
mov
aaa
ljmp
pop
pop
out
xchg
jne
xchg
mov
imul
lahf
int3
jmp
inc
push
lret
and
add
mov
insl
cli
lahf
mov
mov
jo
lea
pusha
mov
ret
jg
lret
daa
test
stos
sub
pop
inc
sahf
and
pop
sbb
push
orl
xor
push
loopne
xchg
fcomps
jg
clc
shl
sti
int
stos
sub
arpl
adcb
in
cmp
out
pop
mov
lea
sub
lcall
lret
dec
cwtl
aaa
add
and
xchg
jmp
xchg
sbbb
popf
and
jb
js
adc
jnp
lods
jb
es
imul
adc
fildl
mov
cltd
mov
test
cmp
and
cmpsl
pop
jno
in
enter
mov
lds
xor
scas
mov
push
push
xlat
mov
or
pop
movsb
mul
fidivl
aas
jmp
sbb
push
es
cmp
push
pop
insb
xor
pop
insb
pop
stos
test
inc
push
por
sti
inc
cmp
push
jecxz
fimuls
fadds
sub
mov
and
jle
and
and
sub
dec
stos
cwtl
dec
cmpsb
mov
out
out
mov
popf
xlat
in
push
xor
push
out
std
jp
lods
call
dec
jge
push
in
and
leave
shll
cltd
mov
imul
jp
pop
fisubrs
xchg
mov
divb
push
sbb
pushf
dec
ja
jmp
sbb
repnz
mov
or
ss
inc
and
pop
inc
cmpsb
aaa
ljmp
xor
push
scas
pushf
popa
mov
push
gs
xchg
fidivrs
pushf
movsb
sbb
icebp
xorl
lret
pop
sub
test
xchg
jmp
gs
enter
mov
cwtl
shrb
test
in
imul
js
insl
cmp
fs
or
mov
xlat
push
xchg
mov
add
je
xchg
pop
or
xor
jmp
les
andb
jbe
cltd
aam
push
inc
cmp
roll
adc
arpl
adc
rcr
push
inc
and
loopne
inc
sub
xor
inc
sti
adc
jno
adc
inc
or
xchg
jg
inc
scas
mov
mov
pop
out
sahf
out
stos
mov
push
sbb
fcomip
add
and
insb
pop
bound
pop
jb
pop
push
gs
add
pusha
push
cwtl
fisttps
jnp
xchg
mov
sbb
sarl
lret
lock
push
clc
pop
lret
mov
jg
inc
adc
aam
stos
pop
jecxz
rol
push
jnp
mov
push
cmp
bound
mov
fcmovbe
das
fwait
inc
addl
mov
or
jne
jnp
mov
push
cmp
xchg
jle
in
loop
mov
je
inc
lea
fidivl
int
dec
loope
movsb
adc
adc
pushf
cmp
out
add
or
sub
fsubl
sbb
ljmp
sub
fmuls
loope
sbb
add
sub
xlat
inc
js
jo
xor
and
pop
cmp
fstpt
sti
rorb
inc
mov
sbb
xchg
mov
les
jb
inc
js
jg
cmp
cli
in
push
dec
push
es
in
cmp
and
ds
xor
push
push
fcomip
outsb
and
and
sub
pop
faddl
out
rcr
stos
cltd
icebp
cmp
mov
pusha
loop
pusha
insb
push
aas
arpl
bound
push
aas
sarl
xor
pop
notl
lea
xchg
into
inc
xor
xchg
dec
pop
sti
xor
lods
pop
pusha
aad
fidivrs
mov
add
cmp
add
rcrl
je
push
adc
xchg
int
push
mov
push
add
and
pop
or
mov
ja
xor
scas
mov
test
cmp
stc
push
inc
lahf
pop
pusha
shlb
cmpb
add
dec
push
inc
and
sbb
jmp
sub
mov
int3
adc
ret
shrl
repz
push
dec
fcoml
mov
cmp
les
jmp
xor
nop
ljmp
nop
jge
inc
pop
shl
sub
mov
jmp
ljmp
jp
cld
push
xor
or
add
out
lock
cld
in
xchg
movsl
mov
fcompl
repz
jecxz
cltd
cmp
shr
pop
xorb
jge
xor
and
push
xchg
inc
mov
cmp
lods
repz
mov
mov
fldenv
inc
js
jne
lahf
stc
push
cmp
fcmovnb
add
cwtl
xchg
test
mov
xor
sbbl
nop
mov
cmp
xchg
mov
cltd
fnstenv
mov
test
adc
pop
xchg
and
pop
lahf
orb
inc
add
cmpsl
mov
stc
scas
add
in
fs
or
mov
js
shlb
or
loope
iret
pop
nop
xchg
xor
or
fsubrs
sbb
pop
hlt
mov
xor
jp
pop
add
jmp
cltd
fsubrl
push
xor
mov
js
iret
inc
in
cmp
mov
int3
rep
sbb
xor
sub
pop
fiadds
dec
imull
xor
jnp
sub
dec
iret
sbb
enter
pop
push
loope
cmp
pop
call
cmpsl
jae
sbbb
sbb
pushf
inc
psraw
repnz
pop
gs
pop
in
xor
call
ja
jmp
mov
jmp
and
lcall
in
pop
and
or
jg
ret
sub
sub
push
push
movsb
mov
loop
mov
aam
scas
sbb
js
mov
sbb
or
mov
movsl
jb
adc
mov
push
inc
mov
ss
ljmp
lret
sbb
inc
mov
push
xor
outsb
pusha
push
jns
fnstenv
push
cmc
std
pop
jo
out
popa
or
adc
rorb
popa
mov
mov
dec
or
ficompl
cwtl
shrb
push
and
call
and
shll
repnz
lea
fistpll
xor
dec
and
fs
mov
cmpsb
sbb
pushf
inc
push
cmp
inc
jecxz
nop
aam
inc
jge
mov
aam
rclb
mov
push
adc
filds
inc
mov
pushf
mov
dec
xor
add
inc
push
popa
mov
add
bound
xchg
and
adc
lahf
xchg
fildll
gs
push
inc
or
xchg
xor
les
outsl
js
lret
js
dec
fcompl
jl
add
push
mov
push
mov
pop
pusha
mov
sub
aam
repz
and
ret
test
and
push
rcrl
repz
rcll
cmp
xor
push
leave
popf
mov
mov
and
out
push
xchg
jmp
pop
sub
cltd
subb
hlt
ljmp
cltd
cwtl
fldcw
or
popa
inc
add
cli
dec
jae
and
jo
inc
lods
mov
cld
xor
jmp
jmp
dec
mov
shll
cmp
jae
xchg
adc
fsubrl
lods
popa
std
sti
mov
lahf
mov
std
push
pop
push
lret
sub
test
push
sbb
rcll
sbb
jns
test
pop
mov
ret
cwtl
pop
sub
pop
push
mov
or
sub
shlb
dec
lds
hlt
mov
stos
and
insl
cmp
mov
rcrl
cmpsb
jge
inc
mov
out
int
fbstp
or
inc
jno
xor
pavgb
push
dec
and
loope
int
fisubrs
adc
dec
lret
daa
push
adc
push
pop
arpl
dec
aam
fdivl
mov
xchg
push
aam
dec
inc
addb
fnstcw
sahf
aas
and
push
hlt
pop
mov
and
pushf
out
enter
js
ss
dec
sub
jg
fnstenv
jae
rorb
dec
fiadds
dec
in
and
push
inc
adc
ror
loop
testl
mov
inc
or
mov
xadd
cmp
sbb
push
or
stos
je
shll
fdivl
gs
xor
rcl
xchg
bound
daa
insl
cmpsl
jns
inc
imul
les
lea
je
pop
js
stos
pop
lcall
pop
pop
scas
sbb
pop
push
lcall
push
cmp
sub
dec
fidivrs
cmpsb
ja
pop
mov
je
or
out
sub
mov
lods
adc
push
jne
pushf
fidivs
orl
mov
adc
scas
cmp
mov
fcompl
lret
xlat
pop
cmpsl
dec
pop
sub
mov
xor
cmc
pop
shr
stc
sbb
mov
add
lret
dec
into
jno
fisttps
fldt
sarb
loop
adc
loopne
test
dec
repnz
dec
iret
pop
mov
aam
jns
add
mov
movsl
mov
inc
xor
enter
roll
inc
in
push
imul
xor
movl
pop
push
mov
mov
xor
fsubr
mov
pop
mov
xchg
add
ljmp
test
push
push
adc
push
lret
xchg
in
ret
loope
repnz
cld
mov
adc
int3
lahf
xchg
mov
rcll
shrl
and
dec
rorb
fs
push
and
adc
push
fstpt
cmp
jbe
mov
lock
sub
push
lret
push
mov
aad
arpl
sub
stos
sbb
sbb
imulb
adc
orb
mov
fsubr
sbb
int3
sub
lret
mov
in
sub
inc
sub
fstpl
xchg
iret
dec
stc
cltd
movsl
fwait
addl
add
mov
clc
gs
push
and
mov
inc
mov
int
push
aas
dec
push
lock
cmp
and
xchg
js
rcrl
mov
popa
cld
insb
mov
sub
jmp
aad
repnz
xor
fsubs
das
out
gs
jbe
jne
jecxz
movsl
jbe
imul
add
movl
ss
in
pop
subb
jb
sbb
pushf
data16
cmp
in
scas
negl
jp
sub
out
jo
les
loopne
lcall
cwtl
and
stos
lret
push
aaa
les
mov
sbb
insb
movsb
sub
dec
in
push
stos
xchg
adc
jge
nop
outsb
shlb
mov
ret
roll
in
test
push
or
std
sub
or
movsb
mov
pusha
jl
xchg
adc
push
mov
cmc
jns
test
lret
cli
mov
jmp
nop
push
or
and
lcall
arpl
pop
or
repnz
xchg
jle
testl
sbb
stc
jnp
cmp
mov
ss
insb
imul
jns
add
or
lds
pop
dec
jne
push
in
jl
imul
dec
iret
nop
insb
aad
pushf
mov
cwtl
arpl
ss
insb
pushf
fcompl
sub
fs
push
loop
ret
jle
push
xor
les
xor
loopne
fists
fcmovnu
int
jle
or
cmpsb
pop
out
xor
out
loop
jns
sbb
mov
xchg
in
adc
scas
outsl
cmp
in
stos
ss
insl
sub
jmp
int3
add
outsl
mov
and
cld
sub
mov
pop
ds
mov
imul
fs
mov
xor
insb
mov
xchg
and
neg
jns
es
aam
arpl
std
out
sbbl
push
es
xchg
mov
loope
jecxz
fcoml
clc
pop
pop
cmp
repz
call
cwtl
xor
pop
lcall
push
add
add
cmp
pop
lods
cmp
xor
cmc
bswap
fcomip
inc
adc
enter
xor
push
xchg
mov
shrb
mov
cld
mov
mov
sahf
adc
mov
lods
and
fwait
addr16
and
popf
shlb
test
sub
in
loopne
fmuls
shll
pop
lea
popa
nop
adc
scas
sub
or
fwait
jge
cmp
push
adc
cmc
push
pop
mov
pop
ss
xchg
adc
fmul
dec
xor
out
or
decl
xchg
imul
cmc
ret
push
int
xor
adc
pusha
fnstcw
cld
ficoms
clc
add
insb
jns
xor
rcl
in
out
lret
xchg
aad
push
mov
es
cmp
stos
scas
ds
sbb
mov
in
jp
cmpsl
adc
fistpll
ss
cmpb
hlt
or
adc
push
inc
pop
add
sti
jnp
add
pushf
insb
mov
cmpsl
sub
mov
lea
outsl
mov
pop
cli
push
push
or
or
je
daa
ljmp
jb
in
sbb
mov
cmp
cmp
jcxz
icebp
mov
lds
enter
clc
in
in
neg
divl
movsl
push
lea
mov
jecxz
jmp
imul
cmpl
leave
lret
ds
push
or
lods
lret
push
stos
xchg
cmpsl
ficompl
sbb
sarl
mov
arpl
ret
fldenv
imul
sbb
sub
sub
xchg
fistl
mov
push
mov
sub
addl
enter
out
dec
push
lret
cmpsl
push
push
mov
stc
sbb
lock
je
loop
cmc
xor
cmp
out
out
dec
or
mov
jns
mov
xor
in
lock
mov
ss
dec
lea
xor
adc
mov
push
rcrb
dec
out
negb
or
repnz
lods
imul
dec
loop
jg
arpl
xor
and
pop
testb
pop
inc
inc
mov
xor
cmp
cmp
out
hlt
sub
ja
push
scas
xchg
jno
shr
popf
or
test
shlb
clc
sbb
in
or
int
cmp
sbb
sub
data16
mov
sub
push
mov
sub
inc
xchg
js
xor
adc
xchg
or
push
cmc
pusha
ja
ficompl
into
mov
sti
xor
dec
mov
cmp
fcmovu
push
popf
mov
fcoms
mov
daa
pop
mov
xchg
aad
out
outsl
lcall
lcall
aam
leave
mov
cld
mov
jmp
imul
jmp
inc
in
sahf
add
add
xchg
adc
jae
fwait
in
mov
add
repnz
jle
ret
mov
imul
test
xor
es
rcll
pop
in
mov
mov
mov
dec
fs
inc
mov
int
adc
das
shrl
jne
ljmp
jmp
gs
mov
mov
xor
xchg
test
jo
mov
les
out
inc
sbb
cmp
dec
jbe
insl
enter
cmp
fwait
inc
mov
cmp
icebp
dec
dec
sub
xor
mov
ffreep
sbb
inc
sahf
addr16
xchg
loop
stc
ficomps
xchg
fiaddl
mov
fisubs
add
adc
add
mov
mov
scas
mov
in
lret
negb
lock
dec
loop
and
push
add
cmp
fidivrs
mov
mov
push
jb
loope
dec
fs
hlt
jp
loop
xor
sbb
jg
or
cmp
pop
mov
add
pop
jbe
movb
std
jne
mov
addr16
jle
inc
or
movl
pop
frstor
test
push
ja
das
stos
cli
mov
movsl
int3
jns
xchg
stc
dec
mov
mov
dec
cs
pop
out
fcom
jae
popf
jns
fimuls
lds
sbb
sub
add
ret
cmp
cmp
dec
jb
pushf
pop
add
enter
fcmovnb
fisubs
stos
je
rorl
loope
jmp
xor
idivl
sbb
arpl
loope
insb
sub
enter
outsw
repz
inc
cld
out
mov
jne
push
push
pop
std
leave
sahf
sub
sub
pop
aaa
pop
sar
popa
sub
xor
push
mov
cli
sub
pusha
movsb
pop
xchg
dec
push
cmp
push
ficomps
sti
mov
xchg
imulb
add
cmp
and
divl
clc
mov
jns
cmp
insl
push
mov
fisubl
aam
ficompl
add
lods
sbb
mov
mov
loope
xchg
cmc
and
sbb
cmpsb
push
push
pop
pop
jmp
les
add
pop
mov
js
xor
popa
jmp
sub
xlat
xor
pop
ljmp
sti
xor
cmpsb
xchg
inc
out
and
xchg
jnp
dec
jmp
out
cmp
xchg
movsl
adc
jmp
lcall
mov
push
xorl
aas
nop
pushf
ret
out
fdivrl
mov
outsb
adc
dec
int3
jg
pushf
mov
pop
xor
or
add
lods
push
lret
subl
xchg
sub
pop
shr
mov
out
pop
fstpl
sbb
sbb
out
inc
fidivrl
dec
and
sub
inc
inc
jp
movsb
movsb
or
shll
je
push
into
push
sub
aad
mov
inc
jl
test
dec
push
cs
loopne
push
shrb
or
cmp
add
mov
or
imul
or
or
pop
and
cwtl
xor
mov
stc
xlat
push
xchg
jnp
fidivrs
roll
stos
jg
repz
and
test
ja
dec
fistpl
adc
out
pushf
mov
and
rcrl
pop
jmp
or
inc
or
mov
cwtl
inc
mov
mov
out
adc
pop
out
or
xchg
adc
jbe
xor
jb
push
sbb
sbb
jge
inc
loope
mov
sub
xlat
in
mov
adcb
inc
cltd
nop
add
std
data16
or
stos
sub
jecxz
rcrl
xchg
nop
mov
je,pt
mov
iret
and
rcrb
rcrb
xor
inc
mov
sti
or
nop
in
mov
loop
dec
aas
aad
in
mov
pop
insl
jmp
lcall
push
sbb
ret
and
ja
mov
iret
repnz
cmp
dec
jg
mov
inc
inc
jle
and
cmp
sahf
sbb
jb
popa
push
pusha
scas
pop
xchg
adc
and
sti
fldcw
repnz
faddl
arpl
inc
inc
pop
lock
and
jo
test
hlt
pop
out
cwtl
je
iret
stc
and
pop
sub
cmp
or
xchg
adc
ds
adc
adc
pop
loop
int3
inc
mov
test
mov
or
insl
aad
mov
sbb
stos
js
xchg
xchg
insb
mov
jae
popa
xchg
mov
movsl
dec
or
repnz
in
lods
cwtl
insl
imul
imul
movsb
jmp
mov
mov
mov
mull
cmc
push
cmp
mov
push
leave
sub
shr
jle
dec
add
ljmp
je
filds
mov
call
ret
iret
out
addl
movd
stos
dec
andl
daa
iret
jbe
and
inc
sahf
loope
adc
loope
mov
inc
loopne
movl
jg
aad
imul
jns
pop
cld
cmp
and
sbbl
or
cmp
xchg
push
xchg
testl
pop
jg
and
sub
into
shrb
hlt
or
int
test
insb
sbb
cmp
sbb
loopne
icebp
cmp
xchg
aam
mov
scas
stos
mov
addr16
fsub
mov
lret
shlb
push
and
stos
ret
push
faddl
add
das
mov
mov
iret
cmpsl
dec
adc
mov
and
xchg
sub
jns
cli
test
pop
xor
sbb
push
pushf
stc
push
leave
insb
aad
movsb
scas
sbb
cmp
inc
mov
sbb
cltd
in
out
out
or
push
outsl
sbb
jo
ffree
jnp
mov
jbe
fbstp
fdivp
arpl
ret
jb
scas
or
jp
sub
inc
xchg
pop
adc
jbe
cmpsb
add
pop
fldl
push
push
or
push
inc
hlt
pop
in
xchg
ds
xchg
fcomp
sub
out
xor
test
add
std
inc
push
popa
insl
cmp
das
addr16
mov
xchg
insl
jns
pop
dec
jo
add
out
lret
hlt
xor
lret
call
push
xchg
mov
fsubrs
xchg
out
movsl
mov
mov
cs
aaa
jle
subb
movsw
push
lcall
rorb
or
stc
cs
mov
out
xchg
shrb
sub
scas
les
out
add
sarl
cmp
nop
rorb
or
dec
mov
adc
or
mov
cmp
pushf
or
jmp
pop
fwait
notl
int3
stos
pop
sbb
jbe
lret
into
dec
jbe
js
pusha
or
mov
sub
dec
in
xlat
mov
mov
aad
cld
add
sub
andb
pop
dec
es
mov
mov
out
lret
lcall
lahf
mov
cmp
sub
shlb
mov
cmp
movsb
mov
xor
inc
mov
psubd
popa
icebp
sbb
inc
stos
cmpsb
push
cmpb
test
or
lret
shll
pop
ds
or
sbb
lea
call
aad
in
clc
in
pop
cmp
or
pop
femms
rcrl
pop
mov
xchg
call
movsb
popa
xchg
ljmp
repz
pop
push
je
int
jge
ss
mov
dec
into
lea
push
mov
xor
scas
fcmovnb
dec
mov
cmp
dec
aad
mov
std
test
mov
aad
lods
xchg
sub
lcall
das
pop
inc
leave
jbe
out
mov
bound
xlat
jbe
mov
out
mov
dec
and
cwtl
push
je
dec
push
cs
daa
push
adc
fimuls
cmp
xlat
popf
mov
mov
jbe
aam
int3
pop
leave
mov
xchg
test
jae
mov
sbb
mov
and
jae
enter
jns
mov
pop
mov
pushf
mov
sub
mov
stos
mov
jne
push
xor
ud2
adcl
addl
sub
dec
mov
leave
pop
xorl
push
daa
mov
pop
inc
xchg
insb
stos
outsl
loopne
sarl
mov
mov
jmp
cs
ret
repz
mov
xor
iret
stos
lock
ss
ficoml
sbb
in
push
sbb
clc
add
mov
push
pop
xor
sub
cmp
popa
cmp
addr16
cmp
leave
cmp
sbb
in
popf
or
mov
ret
sbb
xchg
lret
cltd
push
pushf
mov
hlt
mov
cltd
push
or
jne
mov
adc
into
or
adc
adc
rorl
add
test
sub
adc
mov
loopne
stc
xchg
xchg
mulb
push
aad
adc
insb
call
xchg
jnp
icebp
movhlps
in
int
popf
les
sbb
in
es
inc
decb
stos
dec
lods
cwtl
rcr
push
imul
shrb
mov
cmp
pop
xor
sbb
pop
xor
mov
leave
and
sarl
dec
mov
inc
dec
dec
mov
test
out
or
jp
jg
mov
gs
xchg
xchg
gs
jecxz
repz
jno,pn
pop
mov
mov
mov
xor
adc
xor
jecxz
mov
arpl
xor
sub
sbb
jb
inc
and
shl
xchg
sbbl
icebp
or
cmpsl
lcall
in
and
cwtl
mov
sti
pop
and
inc
sbb
dec
outsb
xchg
mov
mov
mov
std
or
sarb
js
lret
cli
loop
push
ret
les
call
rcll
iret
pop
mov
cltd
and
dec
dec
cmp
jae
sub
xchg
testl
adc
lcall
xlat
rcl
jp
sub
jg
mov
sub
neg
fs
dec
or
imul
sub
push
stos
push
jmp
mov
pop
mov
jge
dec
aas
dec
daa
insl
xchg
mov
inc
dec
test
outsb
xor
mov
inc
adc
pop
jb
paddw
sbbl
jnp
sub
aam
jo
add
shl
xor
xchg
into
test
fcmovne
mov
lds
xchg
mov
test
movsb
pop
repz
pop
mov
repz
into
adc
mov
adcb
add
fcmovbe
jnp
outsb
push
push
xchg
fldt
jns
push
and
aas
iret
sub
cmp
pop
outsb
ret
xor
test
mov
dec
movsl
and
das
jecxz
imul
fwait
inc
sahf
xor
out
sbb
pop
inc
add
xor
cli
xchg
cmp
ljmp
mov
sbb
inc
cmp
nop
outsl
scas
xchg
stc
adc
inc
icebp
ljmp
jecxz
mov
dec
jo
jne
sbb
rolb
or
idivb
jae
xchg
mov
ds
stc
push
aam
not
mov
xchg
stos
ja
pushf
add
subb
and
pop
jle
dec
mov
imul
lahf
arpl
jnp
int
push
pop
gs
insl
and
xor
test
sbbb
inc
xchg
sub
xor
fs
call
in
clc
sub
pop
mov
dec
cmp
push
mov
and
push
pop
adc
xor
adc
adc
fdivl
and
mov
mov
fs
repnz
dec
jecxz
repz
idivl
hlt
int
pop
and
filds
out
fcompl
rclb
arpl
mov
mov
pop
daa
dec
mov
cmp
ret
mov
dec
fidivrs
xchg
push
stc
pop
dec
pop
pop
fbld
mov
out
jno
lock
ficoml
add
jg
shll
jmp
sbb
pushf
call
js
fmuls
dec
sub
cmpsb
mov
in
mov
in
jg
push
or
ja
xchg
stc
push
cmp
adc
test
cmpl
in
loop
inc
nop
inc
jmp
dec
loope
or
add
popa
or
mov
fdivl
rclb
aad
shll
notl
cli
cmp
enter
lods
sub
cmpl
imul
aas
shlb
push
testb
ret
sbb
sahf
pop
insb
mov
imul
adc
pop
or
push
call
das
data16
sub
mov
ror
ret
aaa
sub
pusha
dec
jp
outsb
or
mov
outsl
enter
mov
pusha
lret
fs
jg
cmp
out
lea
push
out
inc
mov
jno
xor
stos
sti
jb
fdivs
roll
xchg
inc
lret
or
mov
das
sub
mov
sbb
das
cld
dec
xor
aaa
inc
fistpl
xchg
ja
in
data16
shrl
ret
aaa
aas
sub
roll
pop
dec
cltd
js
push
imul
imul
xchg
rcr
cmpb
call
jl
sub
mov
into
inc
fisttpll
rorb
jmp
out
testb
sahf
cmpl
add
push
inc
cmp
add
or
jns
or
in
out
add
or
int
popl
dec
rclb
icebp
addr16
xchg
jnp
mov
lds
lds
testb
inc
lret
push
cmp
jle
es
data16
dec
fmulp
out
sbb
movsl
jb
jns
adc
mov
adc
lcall
and
push
ret
popf
inc
fisttps
push
jmp
xchg
jmp
xor
imul
sub
imull
push
in
in
fmuls
call
rcrb
test
sbb
in
inc
xchg
inc
add
test
mov
movb
push
popa
xchg
xor
adc
clc
es
push
or
ja
lahf
xchg
fdivp
out
out
jae
mov
cltd
repnz
add
sub
ds
pop
les
xchg
pop
xchg
sbb
adc
mov
testl
add
aas
cltd
sbb
cld
dec
out
adc
or
outsl
test
sub
jmp
add
mov
imull
inc
ja
iret
mov
xchg
cmp
mov
or
jo
psubb
out
mov
bound
xor
movsb
and
jns
addr16
ljmp
push
inc
jg
lods
mov
fwait
jbe
mov
and
push
dec
add
push
mov
sbb
jnp
adc
push
jno
add
icebp
test
xchg
sub
rol
mov
in
mov
mov
add
cltd
mov
sbb
cmpb
repz
or
jnp
flds
cld
subb
aad
and
mov
dec
mov
mov
lods
sbb
mov
push
mov
fwait
push
sub
mov
and
and
push
loope
pop
mov
insl
ret
xchg
sbbl
out
and
sub
in
adc
iret
es
adc
ljmp
xchg
test
bound
xchg
insb
cmp
fisubl
sbb
cmpsl
xchg
sbb
test
andl
push
pop
fdivrl
cld
adc
out
xchg
mov
popa
dec
cmpsb
in
in
aas
mov
in
sbb
sbb
cmpl
mov
and
lahf
lea
rorl
push
lods
push
loop
xor
mov
sub
shlb
inc
sti
loope
mov
mov
adc
ja
jo
scas
call
and
push
add
popf
not
testb
sub
pop
push
xchg
mov
xlat
add
aad
fdivrl
mov
std
pushf
push
dec
push
ss
into
movsl
and
or
cmpsb
or
lret
outsb
mov
dec
or
mov
mov
bound
jno
or
aas
mov
mov
pop
imul
aam
jl
lea
jecxz
xchg
pop
popf
popf
sub
mov
add
mov
or
nop
das
cmp
imul
pop
out
ret
test
jmp
mov
sub
pop
icebp
inc
pop
movaps
mov
sbb
lret
out
or
cmpsl
sbb
cmp
inc
ja
stos
add
dec
in
mov
sbb
xchg
jno
fsubr
stc
int3
fistl
push
xchg
inc
fimuls
mov
lds
leave
jp
popf
vmwrite
mov
fabs
jbe
call
mov
sub
mov
cmp
dec
jle
mov
aaa
sub
addl
shlb
pusha
mov
mov
inc
and
pop
out
push
fildll
mov
js
push
testl
ljmp
pop
ds
out
data16
lea
jns
xchg
fs
aaa
and
sub
xchg
mov
lret
dec
sub
insl
or
stos
sbb
fdivr
movsb
bound
or
fsubs
int3
rcl
mov
pop
inc
out
pop
xchg
jmp
dec
int
cltd
mov
pop
rcll
imul
enter
push
dec
add
push
dec
xor
and
add
icebp
in
inc
fidivl
push
inc
in
xchg
jo
mov
dec
outsb
jge
loop
pop
xor
mov
sub
iret
pop
xor
add
shll
mov
popa
stos
pop
mov
divb
xchg
lea
jae
jbe
movsl
inc
sub
xchg
into
mov
and
mov
push
lcall
mov
dec
inc
stos
stc
bound
jbe
dec
mov
inc
push
push
gs
dec
pop
jae
out
jmp
lods
mov
negb
inc
dec
out
jg
loopne
push
aad
leave
cltd
and
jg
jge
in
lods
sbb
test
pusha
repz
jnp
dec
lret
int
inc
pop
inc
or
adc
push
andl
or
pop
sub
mov
xchg
pop
sub
stos
aaa
xlat
add
push
inc
mov
xor
loopne
jnp
cli
push
test
jno
ds
fs
sub
idiv
jb
movsl
push
subb
cmp
cmp
fnstenv
jns
cmp
lahf
xchg
cmp
popa
cwtl
pushf
add
outsb
inc
mov
out
push
mov
cs
sbb
pop
cmp
mov
xor
cmp
add
jge
sub
lock
adc
push
jo
shlb
mov
sub
scas
mov
sub
adc
sbb
cmpsb
pop
pop
xor
testl
in
test
leave
xchg
not
pop
testb
pop
push
xor
mov
push
nop
sbbl
mov
and
or
repnz
hlt
mov
xchg
add
inc
jle
sub
push
scas
in
inc
scas
adc
cmp
jle
adc
pop
pop
xchg
lret
jl
xchg
adc
sub
push
xchg
sbb
aam
inc
in
imul
lods
mov
lods
test
stos
and
push
add
ss
repnz
outsl
dec
sti
rcrb
std
or
cmp
or
mov
subl
roll
xchg
jl
push
lcall
call
mov
jmp
xchg
fadd
sub
dec
cmpsb
gs
shll
sbb
int
xor
arpl
jnp
movsb
xchg
mov
lds
imul
push
push
dec
pop
rcrb
mov
xor
jg
pop
mov
aam
int3
or
test
xchg
cmpsl
cmpsl
orb
nop
add
fstps
leave
je
fldlg2
cmp
movsb
inc
xchg
in
jge
dec
add
testb
ja
arpl
sub
cmp
or
stos
mov
jmp
mov
jnp
pop
adc
jb
lret
mov
loop
outsl
aad
mov
scas
sbb
mov
xchg
movsb
out
jns
push
push
cmp
cmp
push
push
add
aas
cld
xor
xchg
and
addr16
sbb
popa
mov
mov
and
push
or
cmpsb
add
or
mov
leave
gs
test
push
into
test
and
push
aam
in
jge
and
jae
mov
iret
add
hlt
pushf
les
dec
mov
dec
mov
gs
jnp
inc
mov
xchg
idivb
pop
out
mov
dec
xchg
call
leave
loope
dec
shr
push
mov
sbb
loopne
mov
jg
popa
movsl
mov
add
inc
scas
pop
adc
pop
inc
clc
sub
xchg
mov
xor
stos
mov
repnz
lcall
fmull
sahf
mov
or
test
loope
jmp
dec
cltd
fldenv
jns
popa
dec
test
lods
dec
mov
mov
bound
repz
push
sub
jecxz
stc
or
neg
mov
popa
mov
scas
and
and
dec
ret
cld
mov
mov
repz
adc
out
sbb
in
jecxz
push
adc
fwait
xchg
push
loopne
dec
ds
sbb
push
fidivl
xor
push
ror
fdivr
pop
pushl
and
shll
out
lods
or
jns
mov
mov
push
ror
pusha
and
or
cltd
fcomi
jecxz
outsl
sti
mov
push
jge
xchg
xor
pop
div
jnp
cmp
testb
or
fst
jecxz
mov
out
sub
data16
adc
hlt
stos
hlt
sub
std
push
mov
jp
scas
jmp
sbb
add
shll
mov
orb
sbb
imulb
or
xchg
enter
incl
cmp
jo
aas
daa
fnstcw
les
cmp
mov
add
scas
call
mov
ret
push
lds
mov
pop
pop
xchg
cwtl
test
rol
xchg
loop
insl
lcall
leave
pusha
mov
xlat
xor
jbe
jge
sbb
jnp
xlat
mov
mov
add
shlb
stos
push
call
sbb
sub
adc
jl
add
and
and
and
mov
push
enter
push
sbb
roll
test
pop
out
nop
lret
push
hlt
jmp
sub
icebp
call
outsl
pop
and
mov
mov
pop
mov
out
jp
aaa
test
push
adc
push
sar
push
iret
cmp
push
sub
lea
hlt
jns
scas
or
or
push
jmp
mov
mov
daa
sub
cmpsb
fadds
fcmovne
cmpsl
sub
xchg
scas
scas
pop
int3
mov
shrb
or
pop
jb
out
test
arpl
push
inc
mov
arpl
sub
std
xorl
stos
xchg
jns
jg
xchg
in
inc
jp
mov
push
stc
cli
inc
and
push
push
mov
add
adc
test
pop
mov
add
sub
and
mov
popa
cli
sbb
xchg
xor
lea
sbb
test
inc
testb
jl
dec
xor
pop
nop
push
movsb
xor
imul
mov
fisubrl
adc
pop
aas
jno
lret
lds
stos
test
xchg
cs
lods
out
popa
push
jge
sbb
push
push
jecxz
mov
or
ret
mov
mov
clc
sub
mov
int3
loop
inc
mov
jge
in
push
pop
inc
out
nop
fmull
jbe
jmp
jnp
push
das
mov
mov
icebp
shl
insl
mov
cltd
mov
push
jb
cmp
negb
das
lods
and
add
and
test
mov
les
les
pop
mov
pushf
mov
sti
and
jmp
clc
rorl
dec
push
cwtl
ss
mov
mov
jecxz
inc
sub
cmp
test
and
add
jb
inc
cmp
push
aam
mov
adc
push
fsubrl
sti
cld
std
orl
pop
mov
imul
aas
cmpsl
pop
mov
aas
ficoml
lret
cmpsb
loope
sbbl
shll
aas
or
ss
adc
push
lods
sbb
jg
ds
or
ret
jnp
ret
sub
leave
ret
shlb
push
add
je
inc
movsb
icebp
jecxz
mov
jge
addr16
pop
fistpl
cmpb
lea
test
and
sbb
jge
adc
cs
add
daa
jno
lcall
dec
jno
call
sbb
or
bound
outsb
push
mov
mov
pop
popf
and
insb
es
movsl
pushf
and
sahf
test
push
dec
or
mov
add
test
fisubs
dec
dec
test
push
in
movsb
jno
rcrb
push
sbb
shl
push
dec
mov
mov
or
repnz
xor
loopne
pop
cmp
xor
pop
cltd
repnz
inc
add
dec
mov
push
or
aad
clc
xchg
mov
xbegin
std
out
xchg
sbbl
adc
aad
mov
lahf
pop
pop
sub
lods
pop
xor
sub
rolb
pusha
or
pushf
cmpl
daa
adc
cmp
loopne
xchg
push
mov
inc
xor
cmp
call
lret
push
xchg
inc
in
pop
pop
jle
shlb
aad
out
out
pop
push
mov
nop
jl
jnp
mov
frstor
push
jb
mov
jle
push
jle
sub
cmp
lods
repz
shll
mov
adc
jae
lods
add
bnd
xor
cmc
aam
int3
or
in
sbb
out
push
testb
pop
mov
xchg
adc
dec
pop
xor
xor
adc
or
aas
adc
xor
pop
shl
mov
popf
in
rcll
sub
mov
pushf
xchg
mov
pop
dec
mov
and
movsl
sub
xchg
sti
es
out
mov
cmp
mov
mov
mov
sbb
jns
cmc
push
das
std
nop
imulb
loope
repnz
fistl
into
inc
fwait
or
gs
pop
and
jnp
pop
repnz
mov
arpl
inc
push
cmpsl
cld
jnp
in
dec
push
out
fwait
sbb
cld
xor
adc
and
push
in
adc
sub
mov
jb
mov
mov
mov
mov
imul
cmc
push
cwtl
inc
dec
pushf
dec
enter
shl
roll
add
pop
dec
lea
xchg
mov
les
and
dec
fwait
loopne
mov
push
imul
inc
pop
imull
pop
mov
or
push
sbb
xor
mov
jnp
mov
iret
sub
and
lret
jae
and
lret
adc
outsl
push
leave
jb
mov
jbe
dec
pop
sbb
jbe
enter
mov
xor
push
xorl
adc
adc
leave
jns
pop
adc
adcl
lret
sub
sbb
test
cmpsl
add
mov
jecxz
pop
mov
jmp
repnz
sub
push
add
fstps
xchg
sub
push
mov
sbb
jo
mov
fdivrp
cmp
sub
lea
mov
mov
imul
or
cmp
iret
into
mov
mov
mov
cmp
jge
aaa
mov
cmc
fisttpl
lcall
cmc
cmp
or
sti
xchg
test
dec
fbstp
xchg
push
sbb
push
adc
scas
mov
mov
mov
imul
pop
mov
pop
jecxz
dec
jbe
push
dec
xor
data16
daa
add
pop
enter
or
jmp
lods
pop
dec
clc
aam
jle
cwtl
pop
loopne
jne
or
fidivrs
ret
dec
mov
mov
fwait
lahf
int
fbld
sbb
jb
fistl
jmp
insb
cmp
jl
and
cmpsb
leave
ljmp
filds
shll
or
movsb
xchg
xchg
fdivl
into
and
aam
and
hlt
sti
or
cld
in
pop
mov
mov
pusha
push
sbb
push
fnstcw
mov
test
pop
test
lds
fistl
sbb
or
repnz
lock
mov
lods
sarl
and
adc
fmulp
sbb
jb
sub
dec
pop
cmp
les
mull
hlt
dec
fldln2
shl
xchg
mov
mov
stc
ret
sbb
sbb
testl
fdivl
jecxz
arpl
pushf
aam
mov
or
insb
add
xchg
mov
xor
xor
test
mov
test
repz
ds
outsb
iret
ss
rclb
lret
push
imul
dec
or
dec
lcall
mov
in
pushl
ret
dec
xchg
scas
test
and
loopne
sbb
mov
add
pop
dec
mov
sub
test
fstps
lds
leave
gs
xchg
sbb
mov
loop
sbb
shlb
ficoms
lods
push
cwtl
loope
or
sti
adc
lcall
mov
sbb
xchg
loop
loop
lret
jo
and
in
xchg
adc
mov
fldenv
inc
scas
scas
jns
ficompl
loop
sbb
leave
xorb
stos
inc
inc
mov
push
xchg
xor
dec
sub
shll
jbe
ja
pusha
dec
imul
xor
inc
pop
imul
shlb
push
lea
xor
pop
mov
loop
cltd
shll
sub
mov
dec
aam
jmp
and
push
jle
rsqrtps
pop
adc
pop
je
out
jbe
and
push
push
jg
mov
out
jge
cwtl
test
rol
xchg
shl
cmp
in
sub
bound
out
cmp
dec
xchg
daa
mov
loopne
fs
hlt
xchg
in
cmovne
in
sbb
mov
leave
sbb
and
sahf
std
imull
fdivl
push
mov
cmc
bound
push
mov
or
addl
or
xor
sahf
insl
mov
sub
rclb
jmp
or
adc
xor
pop
mov
ljmp
or
jo
in
shr
add
fsub
repnz
movsl
inc
xor
add
dec
out
mov
ds
pushf
pop
dec
add
mov
fstl
lcall
jmp
adc
adc
adcl
insl
cmp
fwait
push
imul
and
test
adc
and
popf
pop
ds
add
pop
loop
andl
bnd
shl
bnd
shrb
dec
jne
lcall
push
lahf
rorl
cli
or
jne
mov
fidivrs
cmp
lods
mov
mov
ja
aas
cmp
cwtl
cmp
sub
jmp
repnz
ja
dec
pop
mov
mov
adc
sub
add
jno
je
sub
add
cmp
cmp
and
cmp
je
add
and
jo
mov
xchg
inc
out
leave
out
and
popf
movsl
xchg
clc
add
rclb
std
or
xchg
xchg
jecxz
sbb
push
dec
dec
loope
repnz
and
dec
and
xchg
mov
pop
shll
jmp
jnp
sbb
push
cltd
inc
push
add
mov
clc
loopne
or
in
mov
mov
scas
ret
push
insl
sti
adc
jmp
pusha
stos
movsl
loop
lods
dec
mov
dec
cld
mov
push
scas
test
fs
xorl
and
jne
and
mov
add
fisttpll
dec
daa
shlb
push
jnp
mov
iret
push
in
jp
mov
in
mov
adc
mov
jno
xor
sub
mov
popf
iret
sahf
repnz
dec
adcl
rcrb
push
scas
or
in
dec
in
in
mov
imul
cmpsb
insl
inc
and
xchg
mov
or
test
in
and
into
dec
iret
movsl
fstpt
test
mov
pushf
xchg
push
or
jae
xchg
pop
lods
bound
mov
test
mov
jp
mov
inc
push
sbb
nop
addb
sbb
mov
aas
add
mov
dec
add
or
dec
sbb
pop
xchg
xchg
adc
es
shlb
hlt
and
xor
push
push
pop
stos
sbb
adc
in
sub
movsb
sbb
movsb
int3
cmpsb
lods
push
rclb
fisubs
movsb
mov
lret
lret
xor
call
cld
mov
inc
xchg
inc
scas
sbb
sbb
add
push
mov
movsb
cmp
out
movsl
or
lods
sbb
aaa
xor
into
sub
adc
enter
xlat
daa
add
aas
je
addr16
add
mov
mov
inc
ds
nop
scas
cmp
cwtl
call
addr16
je
xor
or
cld
dec
add
sarl
sub
loope
or
mov
push
loopne
pop
ja
xlat
outsl
stc
push
sbb
adc
xchg
mov
fcomip
insb
inc
cmp
mov
xchg
ret
inc
mov
popa
cmp
es
mov
xchg
aad
push
or
into
mov
arpl
insl
cmc
data16
mov
sti
push
mov
cmp
lock
outsb
adc
cld
mov
outsb
scas
lock
sbb
push
dec
outsb
dec
aaa
pop
sbb
lea
xor
sar
scas
pop
mov
and
xchg
aaa
push
jecxz
push
mov
jp
shr
sub
nop
push
lret
xlat
dec
dec
je
aad
fidivrl
cwtl
aam
cmp
jmp
dec
pop
jnp
mov
dec
mov
loope
adc
ljmp
outsl
inc
mov
orl
push
movsb
lods
push
mov
and
adc
xor
nop
stos
mov
je
scas
sub
inc
or
js
sub
xorl
sub
jge
leave
mov
out
add
test
aas
ljmp
aas
mov
std
sbb
add
es
adc
jp
push
ss
lods
les
cmp
int
fs
divl
and
outsb
mov
sub
jmp
cmp
cmp
push
push
sub
jge
push
mov
and
mov
test
pop
mov
lret
inc
in
mov
mov
pop
in
mov
gs
or
test
test
and
jbe
pusha
xchg
xor
adc
and
xor
xor
mov
popf
add
mov
repnz
xor
aas
push
push
add
bnd
push
add
jmp
adc
fs
rcrl
push
out
add
mov
lods
or
push
std
pop
clc
outsb
dec
jl
out
push
stc
roll
rolb
xchg
lods
das
dec
mov
mov
push
fildll
pop
popf
aad
inc
and
xchg
inc
in
adc
jp
int3
repnz
insb
hlt
jge
xchg
roll
pop
sub
jae
mov
shl
lods
mov
cmp
ret
rcrb
cli
jl
inc
lea
nop
mov
xor
xchg
push
loope
cmp
pop
shll
and
pop
test
lds
mov
lock
cmpsb
push
bswap
cmp
cmp
scas
iret
cs
add
jo
clc
loopne,pt
jl
or
pop
jo
out
lods
mov
add
inc
lcall
jecxz
push
jb
mov
dec
mov
mov
shll
push
adc
mov
fldl
sub
xchg
lcall
popa
dec
jecxz
add
adc
mov
pusha
xor
mov
add
leave
dec
jle
in
dec
ret
sub
imul
or
shll
cmp
mov
adc
rcrl
push
int3
cltd
cmpsb
sub
loope
nop
shll
es
jecxz
dec
inc
aas
mov
and
dec
test
xchg
cld
lea
rcrl
ret
imul
test
cmp
call
arpl
pop
lret
jg
ss
pushf
jl
mov
pop
and
dec
test
sub
mov
test
or
push
test
cmp
push
ret
and
mov
push
int3
or
jno
or
pop
sbb
movsl
aaa
and
lret
dec
or
filds
xlat
sub
push
js
jno
mov
adc
lds
or
dec
cmp
mov
ret
mov
ljmp
cmpsb
xchg
repz
int3
imul
adc
mov
js
dec
int
pop
aaa
or
xor
push
and
add
adc
pop
sub
mov
rcr
movsb
inc
inc
out
fcom
xchg
testl
mov
xchg
iret
lods
lea
mov
xchg
inc
cmp
stos
xchg
jns
out
adc
stos
jo
jns
sahf
loop
test
jg
sub
fidivrs
pop
dec
mov
dec
enter
loop
or
and
sbb
sbb
lods
loope
dec
sub
test
fs
jge
fsubl
push
pusha
adc
add
adc
shl
fwait
pop
rcr
aam
add
ss
mov
sbb
add
pop
sahf
loop
test
mov
adc
sub
ljmp
sub
jae
ret
repnz
incl
cmp
rcrb
lret
mov
ja
inc
repnz
cli
clc
adc
lea
mov
dec
mov
js
jp
add
xchg
arpl
xchg
jns
or
add
lcall
int
mov
push
lods
mov
pop
daa
cmp
mov
inc
push
bound
loopne
fbstp
imulb
pop
int3
add
inc
sbb
and
rcr
push
rorb
into
or
dec
scas
in
ds
call
popf
dec
fimuls
imul
outsb
ret
cltd
xor
nop
push
push
inc
stos
aam
inc
jo
vpshufhw
repz
xlat
in
and
jl
mov
rorl
cmp
sub
push
aas
lea
mov
movsb
std
scas
and
xor
stc
jne
sub
or
sub
addr16
mov
mov
add
lods
outsl
aad
xchg
xor
mov
jbe
pop
dec
sub
test
fiaddl
lret
dec
push
mov
push
push
xor
add
push
hlt
mov
addl
cld
mov
and
les
sarb
mov
in
in
dec
push
sbb
test
ficoml
loope
sbb
loopne
fnstenv
mov
sbb
jb
sub
push
lcall
lds
in
jg
mov
pop
sbb
xorl
push
sbb
cmp
cmp
xor
mov
cld
add
arpl
push
mov
enter
dec
cmp
stos
test
bnd
movsb
adc
fstpl
mov
nop
lahf
sub
pop
test
cli
mov
adc
insl
push
or
dec
in
mov
push
scas
gs
pop
test
jo
iret
dec
sub
lret
es
add
mov
inc
add
lret
sub
ljmp
sub
mov
rcll
scas
sub
les
scas
adc
shrb
in
mov
arpl
mov
int
jns
cmp
std
cmp
out
jno
mov
adc
dec
in
pusha
pinsrw
mov
ret
pop
inc
xchg
into
xor
int
dec
xor
push
pop
push
fists
jmp
and
rorb
call
pop
loop
into
fwait
movsb
fdiv
add
mov
lock
push
cwtl
inc
push
xlat
outsb
jae
popf
sti
testb
pop
std
movsb
or
xor
jbe
pop
mov
or
pop
mov
cs
pmulhuw
mov
idivl
movsb
repz
scas
sub
loop
out
mov
sbb
sub
add
pushf
xchg
mov
mov
stos
pop
add
ljmp
xor
jge
mov
mov
popf
push
xlat
xor
lret
cmp
xchg
inc
mov
mov
and
pop
jmp
push
fcoml
inc
add
int
lods
dec
pop
mov
jmp
xchg
mov
icebp
adc
add
xchg
call
iret
fistl
jl
mov
add
fistps
lods
insl
ret
pop
enter
adc
inc
divb
mov
cltd
sarl
mov
push
out
dec
insl
orl
imul
push
mov
lcall
cmp
xor
fidivrl
daa
xor
ficoml
xor
mov
push
xlat
cltd
pusha
aad
add
movsb
jns
nop
mulb
aad
mov
loop
call
dec
addb
mov
test
or
pop
and
cmp
mov
fimuls
cltd
pop
dec
sti
dec
das
inc
lcall
sarb
movsb
xchg
sub
adcl
add
push
lds
push
scas
cmpsb
jecxz
lods
aaa
xchg
dec
ret
dec
popf
mov
test
lahf
sub
ds
js
mov
les
movsl
aad
cmpsb
into
fwait
or
mov
lahf
outsb
or
jno
js
jbe
mov
adc
rorl
push
cmp
scas
ja
imul
jb
sbb
int3
sub
dec
arpl
in
mov
jae
lahf
xor
cmp
pop
sub
movb
int3
xchg
int3
out
push
push
pusha
out
mov
pop
xor
test
sbbb
xchg
add
fildl
pop
pop
stc
jg
cmp
and
daa
pop
sub
pop
daa
aad
int3
scas
mov
cmp
sbb
lds
add
icebp
imul
insb
adc
and
nop
frndint
scas
or
mov
mov
test
mov
xchg
popa
fisttpll
inc
test
add
adc
jge
out
cli
push
cld
or
push
push
sub
loope
pop
jp
loope
jne
jl
lahf
insb
cmp
cmp
mov
jmp
insb
mov
test
pop
sub
es
push
mov
jbe
in
sub
aad
push
fs
sbb
jbe
jae
mov
outsb
cs
call
jbe
or
mov
and
sub
fisubs
xchg
ja
mov
sti
adc
aaa
cmp
sahf
lcall
rorb
sub
mov
dec
push
xchg
mov
das
adc
loopne
rorb
shl
andl
pop
jmp
push
fisttpll
mov
sbb
icebp
xor
sti
add
and
pushf
movl
pop
movsl
and
scas
xlat
xchg
mov
lcall
addl
sti
jno
jne
arpl
jge
scas
sbb
lahf
sarb
rcrl
dec
scas
add
mov
sbb
ret
in
xor
push
mov
es
pop
jno
enter
out
cmp
jbe
push
aad
pop
jnp
inc
adc
mov
movsb
and
movsb
or
push
in
mov
lods
mov
lcall
outsb
add
mov
sbb
rcr
scas
out
idivb
and
popf
out
hlt
fbstp
test
or
imul
cmp
fildl
shr
and
fwait
lret
mov
roll
out
mov
mov
push
je
in
or
cmp
cmp
loope
sahf
mov
into
loop,pn
adc
rol
add
fwait
mov
push
out
mov
leave
add
push
out
and
insb
addb
ljmp
scas
into
xor
jmp
icebp
mov
loopne
xchg
jo
inc
ja
and
push
popa
call
mov
add
mov
out
pop
insb
adc
mov
add
cmpsl
addr16
or
ds
jle
pop
je
lds
mov
push
cmovp
mov
cmp
cmp
fs
push
sub
outsl
xor
cmpsb
xor
std
push
mov
lea
stos
sbb
adc
call
or
inc
mov
xor
in
dec
out
lret
rorl
sub
sbb
loop
nop
sub
sbb
fwait
into
cmp
rorl
out
rcll
push
mov
loop
sbb
divb
enter
arpl
xstore-rng
cmpsl
add
xlat
fwait
call
sti
lahf
mov
int
mov
or
inc
sbb
fnstenv
repnz
icebp
dec
sub
ss
sub
dec
xchg
jmp
jmp
sbb
add
and
int3
cmpsl
mov
fnstenv
pop
into
lahf
mov
mov
scas
mov
or
push
fdiv
clc
clc
adc
cmp
fstps
adc
xchg
sahf
sbb
add
mov
sahf
cmpsb
rcr
cmpb
lds
jle
mov
xchg
xor
mov
jo
xor
adc
nop
fsub
lea
ss
gs
xchg
mov
hlt
and
push
mov
scas
lcall
cmp
lods
dec
fs
and
or
imul
psubq
jns
xchg
jge
sarl
push
push
mov
les
andb
jl
jge
sbb
sbb
ret
in
pusha
cld
daa
xlat
insl
lret
push
aas
push
loopne
fcoml
les
pop
pop
in
loope
les
xchg
xlat
dec
sbb
jne
pop
pop
sahf
pushf
and
call
jnp
ljmp
movsl
fmuls
outsl
aas
adc
cwtl
out
sbb
popa
adc
nop
inc
pop
scas
sbb
mov
adc
sbb
and
add
ljmp
xchg
insb
xor
xchg
adcb
into
lea
jge
fs
stc
xor
add
or
mov
or
pushf
imul
fisttpl
fcoml
aam
jae
mov
popa
xchg
repnz
adc
jmp
loopne
jns
lds
xchg
jecxz
mov
mov
rclb
mov
push
sub
outsb
cli
adc
or
das
add
add
insl
fcompl
mov
das
pop
pusha
arpl
dec
cmpsb
jecxz
jno
jmp
leave
sbbb
sti
adc
mov
pop
stos
jle
cltd
out
and
jo
stos
fisttps
mov
adc
xchg
lods
out
popa
dec
popl
and
inc
inc
in
ljmp
xchg
mov
push
aas
mov
pop
push
pop
imul
mov
ja
mov
mov
xchg
insl
dec
shrb
mov
bound
lods
jecxz
ret
jns
jle
shrb
hlt
jb
push
fldenv
call
shrl
jmp
pop
xor
ret
xchg
xor
adc
scas
push
lods
imul
sub
rcll
lods
lds
loopne
sub
shl
push
and
sahf
aaa
pop
std
call
shr
stc
pop
sub
fsubl
jge
cmp
rcll
jecxz
push
repz
dec
scas
pop
movsl
cmp
jge
jge
lcall
jnp
enter
cs
push
xchg
popa
loope
imul
jb
imulb
jg
or
xor
mov
sub
add
and
imul
insb
inc
call
lds
cmp
cmc
adc
jp
xchg
mov
fildl
pop
jae
inc
sub
fpatan
pop
in
or
daa
in
insb
mov
dec
jp
mov
stos
add
addl
repz
scas
rcl
cmp
xor
filds
shr
cmp
jns
xchg
hlt
push
add
sub
lea
addr16
xchg
pop
fildll
and
bound
sbb
lcall
xchg
push
or
scas
add
mov
repz
pop
xor
lods
stos
cmp
or
inc
and
pop
mov
and
mov
imul
cltd
lock
and
enter
loopne
jmp
fisttps
adc
shlb
ja
xchg
leave
add
popa
dec
ds
mov
and
push
pop
scas
outsb
mov
add
cli
dec
cli
sub
mov
mov
sbb
push
pop
jge
xchg
mov
js
popa
mulb
push
cmp
data16
andl
stos
idiv
mov
clc
push
lock
leave
incb
sub
mov
inc
adc
jg
xor
mov
inc
mov
mov
mov
xor
cmp
fisubrs
movsb
cli
idivl
mov
or
add
xor
xorb
mov
pushf
jmp
fiaddl
jb
js
inc
lret
or
stos
push
dec
fmuls
xchg
into
aas
orb
add
fnstenv
jbe
fucomip
xor
or
mov
je
fists
ja
hlt
jecxz
xchg
jp
xlat
fisttpl
xor
xor
bound
popa
add
pop
fucomip
adc
loop
dec
inc
jmp
lock
cmp
loopne
adc
out
in
ss
cmp
fdivs
jne
sub
xchg
push
mov
mov
fcompl
int
mov
jns
cld
xchg
cmp
das
mov
mov
shrd
repnz
inc
mov
sbb
lea
dec
scas
adc
rorb
mov
adc
push
adc
fwait
gs
out
rorb
pop
es
jbe
xchg
adc
jge
sbb
push
es
sub
or
divb
xchg
sbb
sbb
add
psubd
pop
add
test
or
jne
mov
push
scas
in
ds
adc
mov
das
lock
cli
fucomi
pop
push
jl
mov
aad
bound
add
mov
dec
xchg
inc
mov
push
jle
push
and
int3
xchg
mov
dec
xor
mov
je
into
cmp
out
inc
lcall
cwtl
sub
xor
cmp
inc
cmc
sub
xchg
lods
movsb
dec
fnsave
jne
jmp
jo,pt
sbb
xchg
movsb
and
pop
and
sub
mov
jne
push
rorb
mov
into
adc
rorl
iret
pop
and
xchg
mov
scas
pop
mov
mov
leave
dec
je
inc
mov
fbld
mov
adc
xorb
jno
push
lock
fwait
jb
push
push
icebp
mov
je
xor
cmp
add
sbb
ror
int3
inc
jge
adc
aaa
push
out
xor
fcmovnbe
imul
sbb
push
icebp
xor
stc
jae
daa
testb
pop
insb
repnz
es
sub
push
call
sbb
add
jmp
cmpsb
xor
fwait
sub
mov
pop
add
pop
sbb
repz
aas
out
and
sbb
lods
lcall
inc
mov
push
lret
icebp
adc
fsubrs
bound
inc
or
mov
adc
inc
dec
ljmp
sahf
leave
xchg
clc
xchg
xchg
das
or
add
xor
mov
xor
and
xchg
in
xor
pop
xor
lock
xor
mov
or
add
lcall
nop
cmp
jp
xchg
mov
hlt
fimull
jmp
test
movl
pop
sub
dec
jge
out
in
inc
rolb
cmc
cmp
jne
or
or
pop
ret
stos
jg
sahf
jb
fs
ss
sub
push
aaa
sbb
sub
shrl
cmpsb
stc
inc
call
int3
mov
pop
bound
in
inc
dec
and
into
outsl
icebp
adc
xor
jns
cmp
mov
data16
jmp
and
rolb
mov
or
dec
in
dec
lahf
xchg
mov
cmc
negl
ljmp
mov
mov
pushf
sbb
repz
imul
sub
fidivrs
mov
sbb
xor
jl
dec
aas
push
mov
aam
dec
or
loop
push
sahf
sub
push
test
add
mov
push
adc
mov
not
pop
lahf
mov
mov
ret
scas
inc
popf
fs
testl
subb
inc
jb
negb
lods
shrb
out
iret
dec
cld
push
cmp
stos
pop
or
and
xchg
testl
push
sahf
movsb
mov
ret
clc
loopne
and
lods
mov
mov
pop
push
sahf
lods
into
xchg
lea
bound
xor
sbb
stc
sub
jmp
adc
jo
out
or
loope
scas
ljmp
movsb
pop
shlb
hlt
lods
lea
xlat
jg
sbb
insb
pusha
int
enter
pushf
xchg
call
cld
fstps
out
jle
es
test
rep
popf
or
stc
inc
rolb
sbbb
movsb
dec
sarb
lahf
jp
xor
mov
enter
cmp
hlt
insl
dec
dec
mov
xchg
bound
in
div
shll
out
scas
add
mov
lods
add
dec
stos
fdivp
xchg
enter
xchg
mov
push
pop
or
rcrb
add
xor
cmp
scas
popa
lock
movsb
inc
add
call
mov
push
es
push
cltd
or
mov
aam
aad
enter
sub
push
adc
inc
jmp
and
movlhps
add
xchg
pop
imul
sbb
jp
pop
repnz
jmp
fwait
mov
test
stos
imul
vpmacsswd
fwait
and
fildl
js
rorb
xchg
jl
inc
xor
mov
pop
dec
push
adc
adc
jmp
cltd
xchg
cmp
movsl
cmp
mov
and
fiaddl
pop
rorl
cmpsb
into
xlat
mov
jae
enter
and
xchg
test
jge
push
adc
aaa
repz
stos
aaa
mov
shlb
push
loope
cvtps2pi
mov
dec
xchg
xor
jnp,pt
pusha
mov
jmp
lret
mov
lcall
mov
add
xchg
imul
pop
sub
pop
mov
mov
pushf
jo
addl
and
test
cmp
sbb
popf
jle
adc
xor
imul
and
mov
in
movsl
mov
adc
dec
pop
xchg
movsb
pushf
pop
jp
dec
int3
push
xor
out
mov
cmp
cmp
pop
sub
enter
arpl
repnz
xlat
fcompl
std
or
ficoml
popf
or
add
sbb
ja
sbbb
mov
pop
cli
or
push
adc
cmp
dec
dec
jbe
mov
cs
out
movntps
out
das
sbb
pop
out
dec
lock
bound
nop
cmp
xchg
cld
loop
cli
in
inc
push
sub
or
jge
xchg
call
jmp
pop
and
sub
test
fcoml
clc
mov
lea
mov
jne
fisubs
loopne
pusha
sub
es
mov
and
and
inc
mov
cmpl
ja
pop
mov
fisubl
jmp
divl
push
dec
je
sahf
mov
iret
movb
aaa
cmp
jg
and
xlat
lea
adc
in
mov
test
add
cmp
cld
push
scas
and
popf
sti
jg
mov
add
add
xchg
or
mov
sub
sub
pinsrw
fadd
or
dec
xor
xor
test
imulb
and
int3
popf
xorb
into
aam
adc
sbb
mov
jnp
mov
outsb
in
fwait
imul
or
rol
pop
fimull
xor
sub
inc
adc
xor
adc
adc
pop
lds
mov
xor
fsubrp
or
sbb
nop
jns
test
aas
dec
insl
xchg
add
xor
imul
push
add
mov
cltd
adc
mov
bound
sub
loope
dec
aad
push
ds
push
mov
gs
xchg
mov
mov
xor
mov
inc
xlat
sub
and
ret
mov
mov
pop
sub
pop
aas
js
adc
pop
out
mov
push
or
mov
cs
pop
sub
xchg
ficomps
fiaddl
inc
pop
rcrb
das
xor
daa
into
xchg
sbb
sub
fs
add
sub
add
xchg
adc
sbb
call
test
cmp
pop
cmp
or
cld
jnp
daa
adc
adc
and
push
idivl
mov
orb
pop
xor
lret
push
push
or
sahf
outsl
mov
dec
pushf
cs
movsl
testb
out
mov
mov
add
add
xor
daa
mov
jbe
cmp
hlt
push
rorb
or
enter
lahf
inc
cmp
xchg
gs
lods
pop
arpl
aad
pop
ret
rcr
sub
push
and
frstor
movl
movsb
icebp
test
dec
mov
pop
call
cmp
pusha
xrelease
mov
sbb
repnz
sub
notb
or
add
cmpsl
and
inc
outsl
adc
dec
icebp
mov
cwtl
dec
sub
mov
fdivrl
in
testl
sub
loopne
pusha
jle
sbb
out
xor
mov
add
xchg
pushl
rclb
in
mov
or
jp
cli
sti
mov
pop
daa
sub
jnp
imul
sbb
mov
mov
das
fnsave
sbb
push
fidivl
or
fisttpl
ds
or
or
inc
mov
mov
stos
cmc
outsl
aas
sahf
in
out
into
or
js
imul
sarb
inc
push
or
call
jno
push
vmwrite
mov
xchg
inc
push
adc
lret
xor
shrl
loope
jno
jb
imul
bnd
lds
loop
imul
jl
lods
cmp
jg
jbe
jle
jb
rcrl
xchg
xor
mov
xchg
lret
insl
and
pop
cmp
sarl
or
sahf
fnsave
add
pop
lock
lods
aas
push
test
adcb
sub
std
or
push
in
fists
outsl
mov
xor
aas
pusha
cli
sub
sbb
xor
rcll
xor
out
sub
and
rorb
xor
js
adc
dec
dec
push
sbbl
add
jno
jle,pt
shll
sub
or
pop
call
or
mov
inc
ret
cwtl
lds
shll
adc
jne
or
xchg
cmp
notb
cmp
xchg
inc
mov
jg
loopne
je
jmp
fstl
fstpl
movsl
mov
cmp
jmp
vmovntps
xchg
jge
cmp
xor
add
sbb
hlt
inc
push
sbb
hlt
test
test
das
stc
in
xorl
and
dec
mov
inc
inc
dec
mov
popf
inc
decb
lods
cld
inc
data16
pop
mov
mov
xchg
fdivr
test
cmp
js
mov
cltd
xor
inc
or
mov
xchg
xchg
testl
xor
test
fst
iret
int
jno
push
sahf
fadds
jp
cmp
or
adc
fldt
mov
ja
xor
mov
mov
bound
add
sbb
stc
scas
popf
pop
xor
mov
pop
jge
arpl
aaa
cmpb
pop
mov
dec
and
and
xchg
sbb
dec
aad
jo
sti
fcoms
sub
aad
scas
push
and
mov
bnd
fs
add
dec
cmp
in
int
aad
push
xchg
inc
inc
mov
push
adc
sahf
inc
add
mov
push
arpl
dec
ja
push
pop
lds
outsb
mov
pop
pusha
xchg
fdivp
ds
div
mov
dec
mov
fiaddl
xor
loopne
repnz
enter
pop
in
mov
add
loope
ficompl
neg
fisttps
and
shl
fdivl
jl
dec
ret
popf
inc
lret
lock
push
in
dec
add
jae
aam
lds
or
imul
sahf
push
popf
jp
push
xchg
mov
xchg
mov
cmp
lcall
add
lods
loopne
jns
fnstsw
mov
and
idivl
insl
push
and
int3
xlat
daa
lods
inc
xchg
rcrb
or
fisubrs
jle
push
or
cmp
test
cmp
std
stc
and
push
rep
out
adc
mov
ret
sub
add
je
mov
imull
and
testl
movsb
dec
lock
loop
leave
cmp
cmpsb
leave
jp
xor
repnz
shll
mov
out
and
add
fildl
in
xchg
add
movsl
sbb
mov
push
adc
mov
sbb
cmc
push
fidivrs
sbb
mov
imul
lcall
iret
ljmp
cs
mov
pusha
addr16
pandn
stc
int
add
repz
push
xchg
adc
cli
aaa
int3
fwait
or
jne
in
or
cmpb
dec
repnz
dec
sub
inc
mov
and
ret
sbb
hlt
int
mov
dec
js
int3
fwait
add
jp
push
pop
pop
dec
dec
push
mov
mov
les
pop
icebp
mov
clc
mov
push
dec
mov
test
pop
sbb
or
fld
addr16
mov
mov
mov
fdivrs
and
mov
and
fidivrl
jnp
mov
add
addr16
cmp
loope
int
adcl
frstor
js
xor
jmp
ljmp
push
leave
ret
xchg
mov
adc
jbe
dec
add
ja
in
imul
cmp
add
fwait
add
iret
iret
mov
gs
inc
xchg
pusha
or
sbb
mov
xchg
mov
xor
fwait
pop
movsl
pusha
jbe
mov
mov
mov
mov
ljmp
sahf
ss
mov
jns
dec
mov
mov
ficomps
fidivs
aad
daa
push
repz
adc
cmpl
jmp
jnp
sti
fbld
mov
xchg
add
cmpsl
icebp
leave
insb
rcll
pop
stos
fcmovnb
aam
xchg
xor
xchg
mov
rol
mov
addr16
push
pop
lcall
bound
mov
dec
mov
stos
pusha
sbb
mov
xchg
add
je
popf
test
rol
mov
clc
in
mov
lea
sarl
ja
sti
dec
jmp
fs
jns
pop
and
jno
iret
sub
sub
jae
in
out
rcl
sbb
cmpsb
xchg
fsubs
cmp
ret
jnp
add
std
mov
out
and
and
jecxz
mov
mov
jo
jl
mov
mov
imul
imul
dec
mov
xchg
xor
push
notl
and
loope
movsl
ljmp
test
sbb
push
or
xor
xor
and
movsl
test
lea
std
scas
mov
dec
cmp
iret
fs
out
jbe
dec
movsl
inc
loopne
jbe
data16
dec
adc
nop
cmc
sbb
and
nop
add
into
fdivl
mov
pop
cmp
lahf
in
das
ds
cli
mov
jns
rorl
cmp
sub
inc
fwait
lock
in
cmp
movsb
insb
push
outsl
xor
imul
inc
enter
ret
sbbl
inc
dec
mov
mov
sti
je
cwtl
jmp
fists
cld
movsl
add
mull
popf
sub
hlt
add
mov
sub
bound
leave
dec
pop
sub
call
jne
jge
jmp
jno
leave
movsb
xor
xchg
loop
sub
lds
pop
xor
les
mov
jbe
mov
fstpt
aam
out
xor
shlb
das
aaa
rorb
aas
stos
mov
loop
lea
aas
ss
cmp
lock
rorb
sbb
mov
lea
mov
stos
pushf
lahf
push
shl
xor
mov
pop
test
mov
xor
fildll
add
xchg
xor
jae
lods
mov
inc
addr16
mov
call
outsl
lods
push
stc
adc
inc
es
mov
and
mov
add
pop
push
pop
xor
lea
xor
mov
ficompl
cmpsb
push
les
sbb
push
les
lods
dec
daa
and
add
add
mov
adc
and
sub
insl
ficoms
mov
adc
fisttps
test
xchg
pop
and
repnz
xor
fmull
ficompl
inc
pop
imul
movb
ja
stos
rol
mov
and
mov
jae
test
aas
sub
mov
mov
arpl
lods
lea
sarb
jnp
cs
stos
sbb
js
add
sbb
gs
aaa
add
stc
mov
arpl
add
int3
icebp
and
lods
dec
mov
imul
inc
jnp
sub
shlb
es
test
jp
loopne
mov
jb
mov
inc
fsubp
cltd
push
pop
cs
sbb
nop
push
cli
scas
popf
mov
popf
mov
and
inc
test
push
add
icebp
aad
inc
pop
hlt
arpl
jge
addr16
push
dec
lock
fucomip
lahf
out
mov
scas
pushf
add
pop
fld
sbb
cli
cmp
test
jne
in
movsb
cld
xchg
pop
mov
arpl
movsb
fstpt
push
push
pop
or
jb
add
and
movsl
call
out
in
call
call
push
ficoml
push
fstpt
std
mov
rcrb
or
repz
sub
fsubs
insb
inc
addr16
or
sarl
pop
cmp
adc
jle
test
ret
adc
adc
std
cld
aad
sahf
pop
cmp
and
inc
pop
dec
test
sti
pop
nop
fdivrs
je
push
les
and
push
adc
jae
cmp
or
cltd
dec
addw
pop
jmp
loopne
jmp
mov
roll
jnp
adc
in
ret
xor
cmpb
cmp
push
sub
fcomps
std
sbb
mov
add
scas
xchg
jo
xor
ljmp
pop
leave
mov
push
and
mov
cwtl
push
push
das
pop
mov
or
jo
sub
pop
mov
jno
stos
mov
and
or
push
clc
cmp
inc
lahf
mov
sub
inc
pop
push
iret
jbe
mov
and
test
iret
insb
das
inc
inc
xlat
fistl
mov
fsts
mov
mov
push
mov
push
cmp
sub
fs
cmp
push
cmpsb
cmpsl
add
sub
jmp
dec
xchg
leave
addr16
push
mov
mov
xchg
mov
pusha
fwait
dec
lods
and
arpl
leave
insb
mov
xchg
loopne
hlt
int3
push
push
mov
adc
ss
mov
xchg
sub
dec
push
int
flds
and
and
sarb
ja
mov
in
lock
aad
push
fistpl
mov
inc
dec
daa
cli
xchg
mov
jne
pop
rcrl
adc
clc
outsl
test
xchg
push
ret
ljmp
xor
mov
jle
mov
rorl
inc
cld
aam
adc
adc
and
outsl
cmp
cmc
jle
mov
lret
mov
int
test
jmp
mov
in
adc
clc
hlt
or
popa
mov
push
cmp
mov
adc
xchg
imul
ja
mov
and
mov
test
push
ret
push
fwait
pop
and
pop
nop
add
push
iret
jne
add
inc
push
pushl
mov
adc
fidivrs
hlt
faddl
popa
push
out
xchg
sub
inc
or
push
or
dec
inc
dec
mov
fisubrl
scas
test
movsb
dec
push
inc
pop
pop
lret
dec
sti
ljmp
stc
pop
repz
stc
xor
addr16
pop
icebp
push
sbb
aad
inc
lret
call
mov
jne
popl
xor
pop
pop
out
aaa
cltd
sbb
mov
lods
inc
sahf
loop
sarl
mov
aaa
inc
insl
inc
cmp
add
mov
adc
imul
sub
ljmp
fwait
adc
outsb
inc
jae
daa
xor
iret
fldcw
ret
inc
minps
cltd
loope
popf
mov
jne
ja
xor
sbb
pop
inc
sahf
cltd
test
leave
movsl
mov
mov
pop
ret
lret
test
repnz
cmpsb
in
xchg
ja
inc
negl
dec
jne
sbb
mov
clc
fistpll
push
sub
das
xchg
scas
pop
lret
sub
not
aaa
inc
cmp
and
jo
cmp
leave
mov
or
jnp
push
jns
dec
test
fistl
popf
lret
ret
subb
or
sbb
push
xchg
in
ret
sbb
jmp
ljmp
cmp
and
xchg
in
rcll
mov
inc
mov
push
inc
sub
sbb
xor
loope
int3
aam
hlt
xchg
loope
or
pop
jmp
jge
mov
dec
cwtl
loope
inc
add
and
or
or
shll
add
adc
push
mov
and
cs
push
mov
inc
jle
mov
dec
ja
cli
in
or
outsl
adc
idiv
js
push
fs
and
int3
arpl
lods
add
jo
sbb
or
inc
lcall
incb
mov
inc
scas
imul
mov
ss
insb
inc
pushf
mov
inc
dec
imulb
ds
lret
cltd
pop
lcall
ds
push
push
adcb
jae
fwait
das
pop
dec
lods
xor
decb
outsb
daa
cmp
scas
andb
sbb
xor
mov
mov
sub
and
push
std
inc
sub
jle
gs
mov
mov
dec
lods
out
mov
xchg
aam
dec
xlat
cmp
nop
inc
mov
cmovns
sub
inc
mov
rolb
mov
in
jo
push
add
sbb
dec
inc
fs
mov
dec
lcall
movsb
dec
mov
cmp
aaa
rcrl
daa
sub
xchg
lret
sub
mov
push
fisttpll
loope
add
les
int3
stc
pusha
cli
add
jge
testb
iret
inc
movsb
mov
gs
out
adc
inc
les
out
mov
sub
jle
out
push
mov
add
pop
add
xchg
rcr
and
add
test
inc
nop
mov
loop
xchg
fimuls
aam
test
xchg
or
das
addb
pop
mov
push
pushf
mov
cltd
lret
test
sub
scas
xchg
sbb
in
or
test
mov
or
leave
ret
jecxz
lds
dec
adc
repnz
xchg
dec
xor
pop
xchg
cmp
inc
sub
sub
pop
mov
xchg
inc
ret
sbb
test
mov
lret
mov
jge
xchg
call
sbb
mov
decb
xor
cmpsl
jmp
rcrl
inc
mov
dec
mov
out
sub
jg
lret
xor
push
rol
push
cwtl
ja
cmp
pushf
stc
sbb
or
mov
sbb
pop
in
out
jle
loope
mov
icebp
push
lock
mov
packsswb
pop
mov
js
or
sti
lods
loop
test
cltd
adc
push
stos
adc
xor
sahf
aas
xor
xlat
mov
loopne
mov
dec
add
popf
push
mov
inc
test
enter
and
inc
test
iret
mov
push
sub
popa
enter
aas
into
push
aam
jae
and
xor
xchg
fmulp
sub
sub
sub
ficoml
sbb
loop
xor
cmp
stos
jae
and
inc
movl
push
pop
shlb
adc
fstp
push
sub
or
cltd
and
dec
jl
lea
fnstsw
fadds
ss
cli
sbb
add
mov
pop
in
das
movzwl
popf
lret
shr
in
and
in
adc
mov
push
jg
jp
jno
and
addr16
fimuls
mov
hlt
loop
insb
test
jo
outsb
addr16
jne
dec
mov
sbb
inc
inc
add
das
into
push
pop
bound
inc
les
mov
movsl
or
repnz
aaa
jne
clc
imul
pop
cmp
rcrl
cld
rorl
add
xchg
xchg
sub
imul
jg
push
push
inc
cmp
fisttpl
cmp
out
and
mov
sub
mov
pop
enter
or
xor
inc
jb
inc
mov
xorl
adc
xor
mov
imul
loop
pop
int
xchg
add
push
faddl
shll
lds
cs
loop
pop
in
loope
jl
fdivl
sbb
sub
lds
push
mov
mov
addr16
clc
xchg
jae
iret
mov
xor
ja,pn
jecxz
scas
popf
repz
jne
xorl
add
push
scas
mov
cli
xchg
jl
ds
xchg
adc
and
mov
push
leave
ss
xor
jmp
inc
mov
clc
xlat
mov
mov
iret
cli
out
or
pop
lcall
in
add
mov
mov
lret
stos
icebp
in
jg
stos
push
cmpsb
cli
lcall
adc
mov
test
rorb
repnz
fisubs
in
pop
leave
cs
sbb
cmp
jge
jo
clc
pop
or
out
sti
sub
cwtl
sbb
mov
dec
loope
push
mov
xor
sahf
xchg
lcall
into
outsb
in
and
xor
mov
cld
test
push
out
pmulhw
mov
int
call
push
xor
xchg
lock
jp
fldcw
jp
and
popa
aam
or
jg
out
push
cmp
popa
sbb
add
fbld
scas
nop
test
sbb
xchg
push
into
ja
and
and
add
imul
in
cs
xor
das
andl
cwtl
addr16
push
jecxz
lret
insb
jnp
mov
inc
inc
xchg
xor
mov
clc
push
inc
or
sahf
out
adc
aam
cmp
adcb
les
adc
push
stos
mov
out
pop
adc
loopne
xchg
jge
fbstp
xchg
cmp
jle
iret
push
xor
dec
scas
in
loop
cmpsl
es
sub
divb
popf
test
add
repnz
or
cltd
call
push
aam
mov
popf
outsl
dec
scas
fsubl
cmp
xchg
inc
mov
fldl
clc
adc
int
das
pop
inc
pushf
scas
sbb
fxch
pop
psrad
shrl
xchg
ja
push
dec
inc
aaa
sbb
popa
ret
sarb
and
xchg
add
pop
call
add
or
hlt
push
add
loop
mov
stos
mov
xchg
push
bound
loope
test
aas
pop
or
sti
aad
jnp
jge
and
mov
lock
jecxz
ret
mov
add
imul
mov
cmc
in
in
mov
lea
jecxz
cmp
xchg
inc
cmpsb
insb
or
int
hlt
icebp
and
inc
push
xchg
out
lods
mov
add
pop
add
cmpl
push
ljmp
scas
fsubp
dec
push
fcmovnu
cmc
mov
xor
adcl
gs
cmp
pop
shl
pop
and
mov
dec
mov
lret
jp
sub
cld
gs
hlt
push
push
xchg
insl
imul
loop
jecxz
stc
mov
sahf
fcmovu
andl
jl
mov
xchg
rcl
mulb
xchg
jae
cmp
mov
ficoms
mov
push
mov
outsl
mov
cs
inc
pop
mov
push
in
movsl
mov
out
in
cltd
aad
jge
push
fidivrl
aad
test
jb
mov
fwait
adc
mov
cmp
dec
mov
rcl
lcall
cld
push
std
sahf
jb
push
sbb
adc
arpl
xchg
and
add
daa
int3
xor
xchg
cltd
iret
inc
pop
movsb
jb
xor
cmp
push
jecxz
cmp
popa
push
jns
pop
jg
aaa
pop
into
mov
insl
lods
dec
xor
scas
lock
out
xor
fcomp
nop
add
fistpll
push
iret
jl
sar
push
in
mov
xor
cmc
test
dec
dec
aam
pop
jbe
iret
insl
outsl
pop
jmp
stos
pop
fisubl
mov
inc
cwtl
inc
adc
outsl
xor
insb
clc
jae
sbb
shlb
xchg
push
inc
lods
fdivs
fmuls
or
jae
mov
std
test
out
cld
add
outsl
jno
outsl
fs
out
xchg
mov
inc
xchg
scas
mov
xchg
jb
adc
test
inc
out
divl
stos
cmp
pushf
in
loopne
xchg
lahf
pushf
dec
sahf
sub
imul
push
testb
mov
sbb
xchg
bound
cmp
dec
stos
inc
lret
mov
repnz
sub
pop
add
gs
pop
test
andb
jo
ficomps
mov
inc
ljmp
cs
xlat
lret
iret
xchg
sbb
sti
hlt
loop
xor
pop
cmp
cwtl
cmp
loop
lret
inc
inc
fwait
mov
pop
adc
lock
rcrl
into
cmp
in
fnsave
ret
imul
xlat
mov
sbb
or
mov
mov
sbb
jns
aam
push
jle
pusha
lret
fsubp
lret
or
xchg
dec
xchg
icebp
mov
mov
icebp
nop
nop
dec
sub
add
popa
jge
inc
pop
imul
xchg
gs
iret
daa
mov
or
xchg
dec
orl
push
stos
mov
mov
mov
xchg
xor
pop
aas
pop
sarl
xchg
mov
mov
mov
fdivl
insb
push
mov
mov
xor
pop
mov
and
push
jne
mov
cltd
mov
mov
pop
push
or
sbb
pop
sub
enter
out
dec
in
lret
jg
scas
stos
cltd
sub
aam
cmc
not
dec
mov
xor
les
xor
xadd
mov
jmp
gs
aad
push
adc
xor
xchg
add
mov
cltd
jnp
adc
shr
stc
in
loopne
sbb
xor
sub
xchg
out
push
pop
cli
xchg
les
push
and
xchg
cmp
cmpsb
push
xchg
sub
fisttpll
or
xor
data16
inc
bound
mov
cltd
pop
je
orl
adc
lahf
cmp
fistpl
enter
imul
cmp
pop
or
int3
inc
and
jo
mov
and
ss
mov
inc
inc
pop
mov
data16
lock
hlt
ror
xchg
or
cmpsb
test
lock
lods
insl
adc
mov
sbbb
jne
inc
lods
jbe
lock
in
mov
movq
mov
push
mov
sbb
in
sub
pop
out
xchg
cmpsb
mov
adc
pop
or
fidivs
adc
and
or
adc
mov
and
fs
or
cmp
xor
pop
rolb
lods
inc
out
add
sub
pop
loope
addr16
pusha
sub
xor
mov
aam
xor
js
negb
inc
add
imul
add
adc
push
or
ss
fwait
xor
bound
ds
test
mov
push
aaa
or
xor
movsb
sti
add
sub
pop
cmp
add
mov
xchg
pop
in
adc
inc
test
fadds
imul
testl
negb
ficoml
push
stos
iret
mov
adc
scas
lret
outsl
inc
cmp
xchg
push
jge
mov
lcall
cmp
gs
punpcklwd
push
adc
pop
xchg
add
fildll
xchg
lret
outsb
push
test
clc
mov
push
in
mov
or
add
inc
dec
sub
dec
inc
nop
aas
xor
cmp
jb
xchg
mov
push
ror
scas
pop
loopne
push
or
cmc
adc
and
jnp
aas
cmp
inc
stc
faddl
shlb
mov
repnz
les
imul
jnp
mov
sarb
ljmp
mov
out
jge
sub
scas
leave
mov
enter
push
dec
sbb
ret
fisubl
cwtl
and
push
mov
jo
imul
jge
inc
mov
subb
mov
fidivl
lods
loope
mov
dec
addr16
dec
neg
shlb
gs
outsb
stos
aam
cmp
cmove
mov
sbb
mov
popa
sbb
int
insb
add
ret
cmp
push
pop
push
push
and
jl
ja
sarb
pusha
add
cmp
mov
and
popf
sub
dec
inc
add
or
lahf
int
inc
std
mov
js
push
inc
pop
fldln2
lods
cmpl
dec
xchg
push
ljmp
sbbb
popl
outsl
fistpl
lahf
cli
xor
fdivl
dec
data16
insl
dec
loop
cmp
jbe
jno
push
cld
lods
repz
ja
sbb
xchg
push
clc
cmpsl
iret
push
int3
pushf
pop
add
mov
dec
pop
popa
mov
or
pop
mov
cmp
or
sbb
cltd
sbb
out
and
push
jg
dec
dec
daa
pop
imul
sub
inc
pop
mov
pop
arpl
lea
shrl
test
jb
cmovb
and
adc
rorl
or
scas
mov
ljmp
nop
aaa
daa
push
jp
aaa
dec
insb
jo
adc
xchg
cmc
pop
mov
in
jp
call
push
ds
adc
xor
cs
int3
cmp
js
pop
sarb
ret
pop
fidivs
ljmp
imul
pop
es
add
loop
aas
push
push
jo
xor
inc
aam
add
or
inc
push
inc
rorb
pusha
outsl
cmp
in
mov
cmp
xor
pusha
mov
xchg
sub
jecxz
pop
loop
fucom
pop
xor
sarl
push
mov
das
mov
jno
test
shlb
fdiv
cli
mov
arpl
popf
jge
cmc
sub
pop
lds
mov
aam
lds
sbb
xchg
add
jnp
test
je
nop
dec
testb
shl
pop
pop
jnp
ret
xchg
dec
pusha
lods
mov
testl
adc
in
sbb
cmpsl
inc
and
xchg
les
cwtl
sbb
in
mov
pop
iret
ret
sbb
jle
pop
out
int
adc
movsl
cs
push
mov
mov
pop
mov
inc
or
push
inc
test
fsubl
add
pop
pop
mov
add
pop
iret
jne
cli
ficoms
scas
jmp
in
insl
pop
dec
int3
outsb
inc
add
add
lock
jge
stos
in
aad
adc
stc
loopne
mov
lock
decb
mov
cmp
es
roll
xchg
js
mov
aad
fldenv
rolb
add
jae
int
in
loopne
daa
mov
and
jp
fsubrl
add
pop
int3
pop
xor
push
and
lret
imul
arpl
stos
sbb
scas
int
mov
sahf
lock
dec
fdivr
or
sub
icebp
xchg
scas
sub
xchg
fmuls
fdivr
gs
repnz
mov
xchg
es
dec
jg
push
xchg
out
fs
out
inc
movsl
inc
pop
aam
xor
gs
and
pop
sti
negb
inc
xchg
stc
out
add
sub
cmp
sub
aam
sub
adc
inc
lret
loope
ret
pusha
sbb
shlb
icebp
mov
sub
ds
pop
dec
imul
test
push
dec
aaa
xor
hlt
ss
jle
jne
mov
fdiv
movb
test
outsb
xor
dec
xchg
inc
dec
or
or
push
pop
cmpl
nop
sbbb
adc
stc
xchg
mov
gs
mov
movsb
xor
push
dec
jg
jae
out
inc
stos
fucomp
clc
scas
out
jge
lods
int3
fadd
pop
into
cmpsl
jo
loopne
xchg
repnz
pop
or
pop
test
xchg
jne
hlt
jae
mov
cmpb
movsl
xor
mov
iret
mov
cwtl
add
pop
jge
xor
add
mov
xor
mov
cwtl
jae
int3
std
imull
imul
sahf
movsl
outsb
test
popf
in
fmull
cltd
cmc
mov
xor
aaa
test
cwtl
out
data16
pop
sub
dec
xor
mov
outsl
out
enter
inc
sbb
mov
mov
in
int3
and
sbb
ret
cmp
adc
xchg
into
enter
mov
lods
loopne
mov
rcl
and
sar
push
repnz
movsl
push
sub
dec
hlt
dec
repz
outsb
mov
lock
ss
or
add
ds
sub
out
jl
aad
and
xchg
add
pop
and
adc
dec
push
repz
mov
mov
iret
aad
cmp
xchg
out
icebp
ds
xor
xchg
shrl
sbb
sti
lds
test
xor
jmp
cmpsl
sbb
adc
jbe
subb
sti
xorb
fistl
add
pop
or
in
xor
dec
mov
push
in
or
es
in
jecxz
arpl
cli
lahf
rcrl
hlt
mov
loope
mov
add
pop
cmp
and
and
rclb
test
fdivl
pusha
push
mov
dec
add
faddl
xor
sbb
dec
shrl
movsb
fbstp
mov
hlt
ret
jecxz
xor
mull
inc
enter
dec
clc
pop
jnp
movsb
xchg
out
cmc
std
pusha
dec
or
pop
or
gs
xor
dec
mov
and
push
pop
popf
xchg
subl
sahf
inc
jle
sbb
lret
cmp
and
jmp
adc
repz
into
loope
test
cwtl
and
sbb
mov
dec
xor
hlt
iret
je
call
sarb
ltr
pop
in
in
out
jecxz
in
inc
inc
xor
dec
cmp
mov
inc
sub
test
int
movsl
push
loopne
lahf
xchg
pushf
or
imul
aas
pop
insb
push
inc
scas
fisubl
fstpl
lock
sub
imul
mov
pop
cmp
scas
rclb
aaa
hlt
jmp
and
enter
and
aaa
int
fwait
scas
loope
inc
iret
sarb
mov
cmp
int
icebp
fdivrl
adc
cwtl
fstl
cmp
clc
pop
mov
cli
push
dec
popa
out
loop
cmp
nop
inc
add
jmp
mov
mov
dec
lods
pop
aaa
jbe
arpl
in
xor
mov
inc
inc
movsb
mov
daa
ja
aam
xchg
dec
cmp
out
not
xchg
in
dec
mov
sbb
popf
xor
enter
mov
loope
inc
std
sahf
aad
xchg
lahf
mov
out
xchg
test
ljmp
mov
iret
xchg
pusha
les
insl
inc
cmp
dec
push
in
adc
ds
add
push
cmpsl
icebp
nop
rcrb
cmp
daa
jecxz
test
pop
dec
cmp
inc
adc
movsb
inc
jmp
xor
pop
xor
stos
push
incl
sti
pop
insl
mov
sub
inc
sbbb
and
mov
cmp
sbb
lods
jecxz
and
add
adc
jb
pop
out
iret
inc
adc
sbb
pop
adc
testl
out
lcall
push
cmpsb
push
out
sub
dec
dec
or
jbe
stos
jno
add
xor
int
lret
cli
mov
loope
add
cltd
pop
movsl
xor
loopne
sti
sbb
fwait
push
jnp
pusha
cmp
daa
add
sbbb
pop
push
or
jnp
jge
dec
pop
or
sahf
sti
insb
or
fsubrl
add
sub
push
or
xchg
adc
mov
rcrl
jmp
in
pop
jns
cs
push
jecxz
das
int
loopne
js
add
adc
jle
dec
addr16
lea
cmc
outsb
int3
mov
push
pop
cmp
jle
mov
xchg
lods
xor
jmp
add
movsb
adc
aaa
pop
inc
jmp
int3
scas
mov
dec
mov
and
xlat
imul
jmp
pop
push
mov
push
fnstenv
lds
pop
fidivrl
or
sub
pop
push
scas
sub
sub
int3
sub
fadds
fsubl
adc
in
xchg
jle
lret
sbb
imull
xchg
push
mov
mov
lock
mov
xchg
stos
mov
jle
mov
movsb
xlat
sub
sbb
dec
push
jl
loop
xor
dec
xchg
int3
in
mov
push
in
push
pop
rclb
ja
jnp
xchg
xor
jle
and
xchg
scas
test
sub
test
jge
push
shrb
lahf
and
sub
imul
in
cmp
cltd
and
bound
push
lods
sub
addb
cmp
shrb
insl
into
jae
push
mov
fwait
add
xchg
in
cmpsl
jg
jge
xchg
ds
cmp
push
setno
cli
adc
lret
add
sti
ds
dec
add
ss
dec
imul
jae
pop
xchg
dec
push
push
in
xchg
dec
sub
es
aaa
dec
xchg
and
mov
xor
and
sub
or
fisttpll
sub
je
inc
push
das
popa
and
js
ljmp
cltd
jg
incb
je
or
xor
aam
xor
mov
repnz
into
inc
leave
xchg
xchg
sbbl
mov
and
cmpsb
pusha
dec
sahf
pop
jl
iret
in
aam
imul
mov
shrl
jmp
shrl
movsb
popf
jp
lock
loope
mov
dec
pop
ljmp
int
scas
push
inc
arpl
cmp
outsl
add
in
dec
addr16
dec
loop
rcll
stc
mov
xchg
cmp
cmpl
jecxz
sub
xor
or
or
pop
xor
adc
aas
pop
aad
mov
loope
xor
not
pop
mov
in
ror
xchg
jae
repz
sarb
enter
inc
sar
loopne
pop
pushf
sub
clc
mov
inc
int
loop
std
clc
add
in
push
add
rclb
pop
inc
mov
popf
xor
pushf
adc
and
aaa
add
ss
out
sbb
mov
mov
ret
jae
ret
mov
test
xlat
xor
pop
and
or
xlat
jo
imul
aaa
js
insl
cmp
xchg
dec
fidivrs
aam
add
or
in
sub
sub
pop
jae
sub
inc
fildll
jecxz
xchg
sbb
pop
leave
dec
in
pop
ret
fdivs
jp
test
scas
outsb
jmp
hlt
push
into
xchg
mov
xchg
je
xchg
shlb
lock
in
push
inc
aaa
push
test
cwtl
pop
sub
cmp
out
movsl
add
insb
inc
and
mov
mov
xlat
popa
movsl
enter
mov
xor
xor
dec
test
xchg
fwait
or
enter
loop
test
cmpsl
jns
sti
push
stos
xchg
jbe
fiadds
and
push
jmp
arpl
and
jmp
xchg
push
mov
adc
mov
sbb
push
fidivs
dec
gs
cmp
stos
jne
fisubrs
jns
fwait
xchg
aaa
adc
mov
cmp
dec
xchg
jo
pop
push
push
and
mov
push
push
int3
push
cmpsb
scas
lock
mov
cmp
mov
in
pop
ds
pop
rcll
andb
mov
inc
xor
aaa
xchg
incb
mov
subl
ret
sbb
sbb
dec
in
sbb
inc
xchg
leave
in
xlat
iret
movl
scas
pop
mov
adc
mov
imul
push
push
int3
in
insl
test
rolb
inc
jmp
movsb
iret
lahf
sbb
inc
push
sbb
mov
in
aaa
xchg
jnp
cmp
sbb
mov
arpl
cmp
cmp
call
sbb
or
dec
lahf
int
and
enter
add
div
cmp
and
js
scas
ljmp
loope
in
pop
inc
sub
pop
mov
jl
lds
jnp
test
shlb
push
or
mov
or
dec
pop
xchg
scas
jns
fyl2xp1
popf
lret
out
iret
loopne
je
cs
xchg
mov
mov
mov
sub
inc
ja
stc
mov
popa
fcoms
or
enter
and
mov
clc
dec
jp
shrb
cmpsb
lds
adc
pop
dec
das
inc
imul
addr16
bound
imul
lock
pop
jge
fimuls
divb
pop
mov
clc
flds
dec
xor
mov
movsb
das
cs
mov
xchg
or
jbe
xchg
mov
fists
icebp
es
and
rcrl
sub
aad
dec
cmp
jno
repnz
jae
mov
jge
sub
test
jne
or
ljmp
inc
test
imul
out
bound
mov
adc
ret
jp
dec
ret
in
xchg
pop
fsubrl
movsl
jno
push
call
inc
mov
push
insl
mov
mov
outsb
cmc
leave
push
mov
and
aad
fcom
pop
or
pop
lock
ret
jo
mov
jl
mov
lahf
sub
push
inc
xor
jb,pt
add
test
dec
sbb
push
inc
cmp
mov
idivb
xor
jno
lret
cmpsb
dec
daa
sahf
repz
mov
lret
and
xor
inc
incb
pop
das
jae
inc
aam
ljmp
out
lret
mov
loopne
out
pop
data16
mov
inc
cmp
jo
sub
aaa
cmc
inc
ret
cmp
scas
andb
sub
mov
js
dec
fadds
push
xor
sti
es
dec
push
cmpsl
sub
cld
xchg
ljmp
and
mov
lods
aam
cli
repnz
fsubl
pusha
pop
and
ret
ljmp
lock
mov
lods
jmp
out
cmp
xchg
xor
shlb
and
shr
adc
test
pop
cli
nop
mov
inc
loopne
lods
sbbb
ds
ja
stos
mov
jp
insl
add
fcmovb
jbe
push
repz
sub
ljmp
icebp
icebp
hlt
add
pop
add
mov
aam
outsl
js
or
xor
or
jno
dec
push
mov
icebp
xchg
xchg
xor
xchg
stos
rclb
ret
mov
lds
lret
idivb
sbb
jecxz
mov
mov
adc
mov
and
mov
pop
push
or
aad
insl
push
jmp
xorb
lcall
into
jb
mov
shrl
rolb
fwait
mov
xchg
mov
mov
cmp
mov
jnp
inc
fldl
dec
sbbl
in
loopne
add
loopne
xchg
jae
test
jbe
xchg
daa
leave
aam
adc
lock
insl
movsb
mov
idiv
daa
jmp
mov
jne
push
cmc
xlat
dec
inc
and
xchg
mov
sbb
jmp
or
push
adc
jecxz
jbe
lret
loope
enter
mov
aas
ror
jecxz
mov
test
push
mov
pusha
or
xor
push
mov
pop
cmc
cli
idivl
jne
and
in
sub
jo,pt
pop
jb
xor
subb
push
mov
sbb
dec
mov
sub
loopne
iret
add
xchg
cmp
push
es
and
xchg
push
clc
loope
mov
fisttpl
jmp
push
pop
lahf
jg
xor
lea
xchg
sub
sbb
mov
test
cmpsl
insl
lods
jnp
sub
imul
stos
gs
fwait
aaa
xor
in
mov
repnz
jne
aaa
ss
xchg
in
ljmp
cmpsl
sbb
and
fadds
xor
lahf
pusha
push
push
xor
jge
pop
jmp
xlat
rcl
jg
mov
sbb
mov
xchg
dec
push
or
dec
outsb
sub
ja
sub
and
or
pop
push
arpl
push
and
fstps
fnstsw
idiv
adc
mov
inc
je
dec
xchg
cmp
lret
outsl
clc
mov
or
cmp
push
outsb
cmp
hlt
repz
pop
dec
pop
fs
neg
cmp
add
outsl
imul
stos
stos
int3
jno
scas
inc
icebp
sub
xor
mov
cmp
fists
inc
popf
shll
imul
inc
out
or
jno
sub
pop
cmpsb
dec
outsb
imul
or
mov
jne
icebp
adc
inc
sti
out
mov
lods
sbb
sti
lock
dec
je
popf
adc
mov
ljmp
outsl
dec
popa
jmp
icebp
pushf
mov
mov
jmp
cmp
movsb
lahf
inc
mov
inc
xor
mov
scas
sbb
add
and
imul
cmpsl
inc
test
and
and
lar
out
jno
pop
shr
hlt
test
and
int
xchg
aad
aas
setb
push
jns
mov
and
jae
inc
jo
inc
mov
mov
inc
jge
adc
xor
add
sbb
push
test
mov
pop
clc
lret
shl
adc
icebp
ds
lods
icebp
fs
outsl
stos
add
push
mov
mov
cltd
jmp
test
fadd
fwait
jo
lret
aaa
cmc
mov
add
inc
ljmp
lahf
aaa
sub
mov
outsl
out
or
pushf
stc
js
cmp
cwtl
repz
adc
shr
add
jbe
hlt
push
imul
xor
or
ret
in
cmp
mov
push
jp
outsb
jno
test
inc
adc
mov
aaa
inc
mov
mov
push
repz
shrl
scas
inc
insb
and
push
mov
or
mov
pop
pop
scas
inc
push
les
repnz
push
cs
decl
sub
fisttps
inc
test
fst
pop
lds
in
stos
mov
mov
pop
lods
fadd
push
xchg
int3
in
mov
xchg
out
cmpsb
js
orb
and
fisubrs
add
and
xor
add
xor
xor
pop
pop
lock
stos
push
in
add
pop
loopne
sbb
xchg
cmpsb
mov
jmp
dec
fnstsw
sbb
test
mov
jne
in
sub
sub
add
pop
lods
dec
jne
out
mov
mov
sbb
les
cmpsb
mov
xor
cmp
lret
mov
pop
rcl
mov
jle
inc
aaa
std
push
pop
mov
sarb
insl
mov
push
xor
test
dec
test
das
mov
and
jb
lock
aas
cld
or
outsl
inc
sbb
pop
iret
out
stos
fiadds
outsl
icebp
sbb
pop
je
pop
mov
cwtl
mov
dec
or
mov
stc
std
call
xchg
inc
ljmp
mov
das
jae
or
fsubs
xorl
aam
orb
mov
inc
inc
orb
dec
int3
mov
or
cmpsb
mov
inc
lods
jmp
aaa
mov
in
adc
sarl
pop
das
jecxz
sbb
sbb
jge
jae
repz
pop
mov
call
push
mov
adc
xor
out
es
cmp
mov
pop
cwtl
cmp
jo
aam
cmp
and
and
jbe
mov
mov
or
pop
and
jge
lods
aam
je
in
push
push
mov
inc
or
xor
jmp
inc
ljmp
out
jo
mov
shlb
xor
mov
call
popa
aaa
cli
sbb
jae
xorb
ja
xor
push
lock
cmc
mov
mov
xchg
mov
into
mov
int3
mov
cmp
repnz
int
test
rclb
add
dec
cwtl
outsl
int
call
pop
pop
mov
pop
mov
and
jae
insb
scas
cs
mov
pop
mov
scas
pushf
xchg
daa
inc
cmp
dec
fsub
sub
dec
fisttpl
imul
scas
inc
add
scas
xchg
cmp
pop
lock
das
mov
stc
cmp
sub
push
sub
cld
sbb
fsts
int
stc
fldenv
outsb
sbb
mov
outsl
loope
sbb
test
or
addr16
push
daa
fstpt
inc
xlat
in
sub
adcb
jo
mov
scas
cvtdq2ps
sbb
jo
push
cmp
fnsave
xchg
pop
jmp
sub
aaa
fidivrl
mov
pop
pop
and
ret
xor
adc
fidivrl
jns
cmp
adc
mov
cli
ljmp
push
push
test
inc
shll
jmp
xor
xor
mov
gs
fldt
in
aam
les
jbe,pn
pop
int3
rol
add
pusha
sub
xor
mov
adc
cmpsb
loopne
push
shll
jb
lcall
nop
pop
mov
xlat
stc
cmovno
jno
popa
mov
jb
push
sub
push
add
fnstsw
daa
scas
or
cmc
mov
inc
push
fnstenv
bound
mov
and
lret
xchg
add
adc
push
adc
fstp
pop
pusha
and
sbb
xchg
sub
pop
ljmp
sahf
out
push
loopne
cmp
xor
outsb
or
xchg
lds
in
lea
dec
jbe
xchg
imul
xor
sbb
jl
pop
aam
fcmovnu
cmp
and
xor
add
and
adc
outsb
fs
test
push
repz
mov
xchg
xchg
leave
push
mov
ja
add
mov
mov
aad
and
mov
inc
out
and
es
insb
lds
lea
mov
push
in
mov
aaa
repz
cli
mov
jns
dec
pop
ss
and
stc
mov
jge
fwait
sub
cmpsl
dec
ficoms
idivb
sbb
bound
or
into
dec
fistpll
jecxz
repz
jg
mov
and
jnp
pop
add
repz
int
aam
mov
dec
mov
push
add
in
add
sbb
push
cli
jle
adc
and
lcall
movsb
scas
je
std
push
roll
xchg
add
mov
popa
imul
iret
cmpsb
cmpsl
xchg
sar
pop
mov
or
jp
xchg
xchg
dec
cmovno
imul
fisttps
loope
inc
pop
andl
sbb
repnz
out
enter
mov
push
frndint
rcll
clc
aam
cwtl
and
or
push
mov
repz
mov
psllq
sbb
test
sarb
mov
add
rcll
dec
xchg
insb
aaa
inc
movsb
addr16
push
or
xchg
adc
cmp
push
push
adc
arpl
mov
xor
cmp
jmp
pop
push
ret
je
sub
rcll
addr16
xchg
dec
in
sbb
cmp
jno
sbb
je
mov
repz
fwait
dec
xor
bound
xor
mov
scas
daa
inc
xor
sbb
xor
lcall
push
repz
sahf
jl
popa
jo
sahf
insb
in
cmp
push
xlat
lret
cmp
rcr
subb
aas
push
pop
lock
xchg
insb
or
scas
jns
push
loopne
shlb
pop
outsb
xor
ret
xchg
mov
sbb
mov
pop
adc
ja
mov
lea
insl
imul
mov
outsb
scas
push
imul
adc
cmp
push
sub
in
or
hlt
cmp
jae
cmpsb
inc
clc
lret
pop
pop
xchg
aas
xor
pop
inc
jo
cmpsl
les
pop
mov
mov
loopne
leave
adc
or
or
sbb
minps
sti
aaa
add
in
push
mov
jae
cmp
sahf
or
pop
or
cmpsb
inc
loope,pn
lods
xchg
pop
xchg
push
add
add
icebp
mov
in
xor
sub
leave
fdecstp
cltd
cmp
jmp
lret
xchg
test
ret
push
arpl
test
or
mov
outsl
loop
lds
aaa
cvtpi2ps
fprem1
dec
push
push
loopne
pusha
mov
orb
test
test
xchg
jle
frstor
or
sub
xchg
adc
xchg
cwtl
popf
ss
dec
jmp
shr
lahf
leave
and
mov
bound
cmc
pop
pop
inc
and
jp
mov
stc
bound
ss
cld
push
mov
pusha
scas
popa
jnp
or
stos
push
push
xchg
mov
jmp
xlat
movzbl
mov
push
jns
ror
xchg
mov
xor
jae
jnp
into
xor
and
or
add
insb
lea
and
add
repz
rcr
sbb
xchg
loop
push
ss
jo
mov
in
cld
les
cmc
add
cltd
filds
cltd
cmp
mov
inc
inc
jp
lahf
nop
jnp
push
dec
cmp
loope
lret
pop
insb
lods
sbb
sbb
mov
mov
pop
cmp
push
out
inc
fisttps
into
repnz
fcmovbe
pop
mov
xor
stc
jmp
insb
sub
pop
dec
out
loope
fldenv
repnz
lea
icebp
xor
pop
xlat
mov
jb
sbb
xor
jns
out
aaa
xchg
mov
dec
sub
adc
jbe
cmp
insb
and
rcrb
test
xchg
xchg
in
sbb
inc
xor
ret
mov
xor
cmc
xchg
lret
pop
jbe
int3
adc
or
dec
mov
pop
or
jecxz
mov
mov
jae
cld
adc
cmpsb
fwait
fwait
stos
inc
and
hlt
fwait
ljmp
das
sbb
push
mov
jns
mov
mov
jle
roll
bound
sahf
sbb
mov
mov
xor
xchg
xchg
jbe
xchg
stos
sbb
mov
mov
fsubrs
add
out
sbb
mov
std
dec
sub
adc
out
cmc
fcoms
negb
cmpsl
fcmovnu
out
ficoms
xor
repnz
ljmp
adc
push
sbb
std
sahf
dec
sbb
xchg
repnz
fmul
dec
loopne
sub
or
cmp
dec
mov
std
out
insl
jno
outsb
iret
xchg
mov
and
sbb
inc
stos
xchg
or
inc
cmp
mov
inc
mov
pop
je
sbb
imul
sbb
mov
shlb
pop
pushf
and
out
je
imul
rorl
ja
icebp
cmp
popa
mov
ja
xor
pop
push
lret
fdivs
cld
push
stos
loop
ds
scas
jno
inc
jg
ret
dec
ds
popf
xchg
and
test
stos
inc
movsl
dec
mov
out
xor
mov
bound
test
xchg
rcrb
imull
or
pop
notb
lods
repnz
adc
mov
shll
cmp
out
pop
adc
shrb
ss
fnstcw
xor
mov
rorb
sti
mov
sbb
sahf
dec
imul
jecxz
leave
iret
dec
jle
xor
adc
sub
mov
mov
pop
int
pop
lret
icebp
sub
push
scas
mov
repz
xchg
out
shl
aad
out
lock
mov
movsl
in
add
xchg
into
mov
mov
repz
dec
fsubr
cmc
mov
pop
insl
add
lss
jp
cwtl
lret
mov
push
mov
inc
dec
cs
push
mov
lds
lea
test
cmpsl
add
add
outsl
sub
lahf
into
sbb
mov
xchg
dec
cs
cmc
jno
sahf
fcoms
dec
mov
mov
cltd
loop
negl
dec
add
inc
or
pop
jecxz
and
test
movsb
jno
cltd
jmp
in
fistpll
stc
mov
inc
jnp
addr16
inc
cltd
mov
sbb
mov
std
out
mov
fcoml
or
mov
ds
pop
ljmp
jo
xchg
popf
out
aaa
push
and
lcall
mov
and
cmpsl
lcall
mov
out
push
data16
scas
xchg
andb
andb
test
adc
mov
push
mov
inc
jp
leave
lods
cwtl
int
push
mov
pusha
jne
inc
mov
adcl
lods
push
sti
xchg
loop
inc
sub
inc
mov
sub
imul
andl
cmp
stc
jns
push
xchg
lea
aas
repnz
stc
lahf
sbb
fildl
aas
mov
rcrb
int
xchg
arpl
push
rol
outsb
leave
sbbl
insb
fstl
lret
mov
subl
and
popa
shrl
mov
sbb
repnz
or
shl
mov
rolb
pop
pop
jmp
data16
mov
out
jg
leave
adcb
test
rol
cmp
or
push
pop
jns
add
das
add
fildll
xor
pop
pop
xchg
mov
jbe
nop
mov
out
mov
and
xchg
movl
jle
ja
jge
inc
xchg
cmc
adc
xor
pop
add
in
fcmovnu
loope
fnstsw
je
xchg
xor
loopne
jno
je
dec
insb
inc
xchg
fcmovnb
shll
push
xchg
jecxz
leave
and
jnp
push
pop
lock
mov
repz
fimull
int
aam
scas
adc
stos
movsb
lahf
lret
loope
lret
add
das
or
pop
sbb
push
rcrb
cs
lods
pop
loop
add
push
pop
iret
xor
xlat
lds
arpl
add
jne
orl
popf
add
repnz
cmpsl
int
ja
fisubl
xor
jo
fbld
jl
dec
iret
fildll
or
mov
addr16
mull
dec
movsb
imul
or
jnp
ret
inc
mov
sbb
jmp
cld
dec
fcmovb
mov
pusha
shrl
xor
in
or
xchg
lods
adc
daa
pop
sar
cmp
rcrb
jb
pop
pop
dec
and
imul
cld
popa
mov
cmp
stos
add
loope
pop
loopne
shl
inc
out
adc
xor
dec
xchg
jns
outsw
mov
cmpsb
dec
adc
sub
pop
or
fdivl
lahf
sbb
fwait
inc
push
sub
jnp
xor
dec
addb
jmp
mov
in
pusha
aad
add
fstp
lods
fsubrs
mov
adc
xor
movsb
xchg
ret
ds
mov
mov
push
mov
lret
mov
mov
xchg
fiadds
pop
jb
mov
out
imul
add
hlt
cmpsl
cmp
or
fmul
aaa
movsl
pop
jl
mov
add
jg
cmpl
out
sbb
out
or
pop
mov
js
ret
fs
push
scas
adc
hlt
mov
xchg
and
call
push
cmp
fwait
adc
sti
xchg
dec
xchg
sbb
lret
pop
lock
enter
iret
rorb
sti
mov
mov
lret
fidivs
xchg
or
mov
or
mull
add
or
imul
pop
push
lfs
dec
push
push
das
lahf
pop
jge
dec
in
sbb
and
test
ret
sbb
rolb
mov
mov
addr16
jp
cmp
fsubs
cld
shlb
pop
stos
imul
adc
jmp
ljmp
mov
mov
or
shlb
repnz
getsec
jae
popf
add
movsl
inc
xchg
std
inc
out
or
sbb
cwtl
subb
push
adc
dec
jns
pushf
mov
xor
ret
jp
pop
dec
add
loope
roll
lods
mov
cmp
les
push
inc
push
jbe
scas
test
cmp
jnp
cld
movsb
stc
push
push
push
adc
adc
stc
and
push
or
bound
clc
std
dec
pop
lock
xor
xchg
stos
sbb
je
fs
push
popf
mov
hlt
adc
aas
lods
incl
xchg
fidivrs
xor
scas
sub
sub
adc
out
cli
or
lahf
testl
mov
inc
lret
pop
push
es
and
xor
jle
mov
cwtl
sub
in
arpl
pop
mov
xchg
nop
stos
and
fldcw
mov
push
out
test
push
aad
in
leave
fiadds
inc
jnp
jp
pusha
dec
inc
clc
mov
sbb
push
jg
mull
je
cmp
fimuls
fisubrl
and
andb
mov
mov
or
fidivrs
adc
jnp
insl
mov
push
mov
aam
jb
jno
out
cltd
or
iret
das
sbb
push
push
push
sbb
and
cmc
xchg
pop
nop
mov
loopew
test
lret
iret
adc
pop
sbbb
sub
dec
sbb
xchg
xchg
fs
test
push
das
inc
cmc
mov
lret
pop
jmp
xchg
popf
inc
push
mov
xchg
arpl
incl
xor
push
jge
imul
negb
mov
dec
pop
notl
push
adc
int3
loopne
dec
popa
and
mov
jmp
push
lcall
sbb
sahf
cmp
aam
fstl
mov
fdiv
cmp
lret
lods
popa
js
data16
cltd
int
cmp
cmpsb
in
push
mov
cld
adc
fists
inc
stos
out
iret
dec
push
enter
fucomi
sti
pushf
and
adc
and
mov
and
mov
sub
jno
movsl
lcall
in
nop
test
or
into
push
pop
mov
jb
outsl
sbb
or
mov
cmp
sbb
addl
pop
xchg
or
mov
rorb
push
pop
sbb
outsb
cmpsb
inc
sub
mov
inc
inc
andl
cs
lds
adc
mov
push
push
mov
jo
mov
jmp
and
pusha
andl
adc
cwtl
inc
mov
sbbb
cmp
mov
outsl
xor
movsl
shrl
and
int3
in
dec
test
mov
adc
shr
jne
sarb
insb
and
cli
dec
sub
mov
adc
xor
clc
xor
clc
push
add
cmp
dec
jle
mov
ret
cmp
mov
jl
cmp
sbb
inc
inc
or
inc
in
gs
in
xchg
aam
add
dec
pop
test
cli
in
out
dec
sarb
xorb
mov
mov
jl
xchg
ss
rcrb
ss
lret
test
jl
and
push
pop
mov
mov
test
xchg
ds
js
pop
outsb
cmpsl
adc
gs
sbb
jmp
push
sbb
dec
into
fidivl
add
xchg
fcoml
cmp
aaa
xchg
cmp
xor
popa
addr16
dec
cmpl
les
stos
fidivl
mov
fmull
lahf
lock
in
cmp
sbb
popf
pop
std
stc
mov
movsl
xchg
std
sahf
xor
sub
in
xchg
or
push
dec
outsb
aaa
push
sub
ja
sbb
inc
les
ret
jmp
push
adc
sub
and
cmp
pop
scas
mov
or
pushf
adcl
repnz
cmp
out
xor
cmpsb
or
push
pop
notb
aas
adc
pop
xor
lods
adc
scas
roll
inc
mov
insb
push
sbb
jg
xchg
sub
sub
sub
mov
cld
xor
div
adc
lds
es
jecxz
pop
ljmp
push
dec
out
pop
sar
sahf
jb
cmp
rol
lock
push
mov
mov
repz
sbb
jp
rclb
mov
imul
dec
sbb
adc
insb
repnz
add
cmp
xor
push
dec
xlat
or
cs
mov
jge
cmp
pop
push
xor
mov
in
sub
jae
cmpl
jnp
popf
or
jae
clc
or
mov
popa
cmpb
jecxz
mov
lcall
mov
out
es
adc
cmp
mov
jbe
iret
stos
xor
push
xor
jmp
clc
add
fcomps
arpl
les
rclb
add
sbb
mov
adc
jo
dec
jno
mov
push
les
cs
scas
mov
mov
inc
jl
js
push
into
pop
xchg
push
int3
pop
mov
int3
adc
mov
jo
pop
lods
icebp
inc
mov
insb
and
mov
addr16
sub
jge
daa
xor
xchg
xor
push
clc
stos
jb
loop
ret
sbb
sbbl
lahf
mov
out
in
shlb
dec
mov
sub
jmp
push
mov
sbb
loop
lock
out
testb
and
adc
jle
std
frstor
fwait
push
adc
cs
gs
out
push
cmp
shll
cmp
addr16
pop
iret
lahf
mov
cmp
sahf
and
or
xchg
push
std
lcall
call
sbb
dec
cmp
xor
jle
test
mov
inc
call
jmp
fs
pop
negb
sbb
lods
repnz
loop
pop
inc
ret
xchg
pop
or
arpl
inc
int3
sub
data16
jecxz
push
dec
mov
and
es
test
xchg
mov
and
cmp
ficoms
int3
inc
mov
aad
fnstcw
imul
sbb
and
popa
xchg
sub
pop
test
leave
xlat
jbe
jecxz
fisubrl
loope
fidivrl
push
test
mov
ds
stos
mov
cltd
insb
jg
inc
insl
iret
loop
loop
fdivs
cmp
popa
sar
pop
pop
adc
push
inc
pop
xor
imul
pop
sub
cmp
je
rcl
outsb
push
aam
je
test
sbb
inc
xchg
js
add
pushf
rorb
nop
adc
cmp
adc
adc
push
jnp
pusha
mov
outsl
scas
pop
test
fwait
pop
rcrl
imul
cmp
or
sahf
jne
dec
jbe
mov
sub
xchg
push
aas
sbb
push
push
rorl
filds
rep
push
xor
mov
nop
lock
clc
out
adc
rcrl
sub
mov
mov
data16
inc
or
cmc
cli
cli
push
or
sbb
cmpsb
dec
jne
mov
pop
add
xchg
loope
xlat
mov
adc
mov
jmp
jg
pushf
sti
pop
jb
scas
pop
in
sbb
or
jne
push
inc
sub
jl
jno
or
mov
out
jae
lret
lahf
cmc
ret
adc
outsl
jl
or
mov
push
pusha
add
push
push
nop
test
mov
mov
or
shll
rol
lret
into
mov
push
jnp
shll
jmp
dec
outsb
add
cmp
adc
gs
and
cmp
fstpt
inc
test
xchg
push
or
das
cmc
inc
sbb
inc
out
filds
xchg
mov
push
inc
sub
mov
push
in
or
xchg
jae
fisubs
jp
jecxz
cmp
xchg
cwtl
ss
in
xor
xchg
mov
xor
jg
push
xor
and
sbb
xor
cmp
sub
das
scas
aad
in
cmp
lea
jle
and
sub
xorl
sub
mov
push
pop
mov
sbb
dec
dec
adc
push
push
shrb
or
pushf
das
mov
mov
adc
pop
mov
loop
fists
loop
mov
pop
dec
add
imul
sbb
xchg
scas
scas
lods
ret
inc
or
aad
xchg
dec
sub
or
je
inc
addb
xchg
xchg
or
add
adc
xchg
pop
mov
and
adc
je
jns
sbb
pop
fwait
aaa
outsl
lods
mov
fwait
outsl
add
popf
xor
xchg
into
or
adc
sahf
out
xchg
shrl
clc
pop
push
mov
xchg
scas
mov
jg
fwait
pop
push
imul
popf
jb
je
xlat
mov
lods
cld
cld
add
and
xor
arpl
xchg
test
adc
inc
jbe
jmp
add
shl
mov
lea
mov
jbe
ds
sbbb
call
insl
lods
repnz
mov
push
or
jmp
lea
test
outsl
mov
stos
std
mov
punpckhbw
xchg
in
cmp
bound
push
xor
call
dec
xchg
sarb
xor
push
clc
dec
repz
cmpsl
inc
adc
sbb
mov
stos
jl
push
adc
dec
jo
mov
xor
decb
repnz
rcrb
mov
sbbl
jne
cmp
out
test
call
push
dec
movswl
inc
inc
inc
pop
mul
cs
aaa
insl
popa
push
stc
jae
xchg
mov
inc
stos
and
faddl
pop
cmp
cli
jecxz
cmp
or
xor
dec
push
xchg
outsb
in
mov
and
mov
loopne
fs
add
cmp
and
push
sti
test
mov
cmp
lods
cmpsl
inc
xchg
icebp
pop
cld
icebp
add
mov
sbb
push
test
call
ljmp
and
fisttps
xor
push
xor
icebp
outsb
pushf
out
addr16
rorb
fs
ret
add
lea
add
push
push
push
scas
pop
setbe
dec
fcmovne
ja
call
mov
mov
jb
push
dec
out
dec
loope
cmp
and
out
adc
push
arpl
scas
fdivl
out
and
dec
or
cwtl
movsb
aaa
pusha
stc
xor
xchg
daa
inc
out
jae
push
adc
fsubrp
fwait
lcall
pushf
pop
pushf
out
fcompl
sbb
pop
imul
cmp
int3
jle
push
mov
in
popf
ret
dec
cmp
cmp
stc
data16
sub
xchg
fmuls
sub
push
lcall
aad
ds
and
dec
jecxz
add
inc
fnstsw
mov
push
or
xlat
pop
les
aam
dec
push
popa
ss
mov
add
rorl
jns
int
mov
jge
dec
xchg
inc
xlat
jo
std
jns
movsl
push
and
pop
stos
xor
push
mov
out
sub
stos
loopew
cmpsl
aad
mov
xor
lcall
jo
mov
fildll
mov
notl
xchg
push
fmulp
dec
shlb
mov
adc
jnp
pop
inc
insl
adc
lock
test
add
push
shll
ret
mov
movsb
test
mov
pop
orl
orb
xlat
fiaddl
enter
or
adc
mov
push
xorb
iret
jo
loopne
dec
inc
sti
iret
outsl
pop
int
decl
fcoml
xchg
xor
pop
data16
iret
pusha
adc
pop
sti
scas
jl
ret
fildl
imul
addb
add
fcoml
mov
inc
mov
pop
dec
cmp
gs
cltd
lret
popf
dec
inc
lea
inc
rcrb
sti
leave
lret
cmpsl
bound
mov
sahf
pop
or
je
and
leave
lret
jp
cwtl
push
shlb
dec
dec
fcompl
imul
mov
sbb
outsb
imul
pop
popa
cmp
icebp
jns
sarb
pop
js
jnp
aam
sub
xchg
dec
cmp
inc
ret
pop
les
cwtl
scas
enter
int
in
lcall
inc
enter
sete
aam
dec
jno
mov
pop
testl
test
and
pop
pop
sbb
lds
ljmp
sub
xor
cmp
xchg
jecxz
mov
lret
sbb
sar
xchg
ret
xchg
mov
leave
inc
pushf
inc
or
xor
jmp
mov
pop
mov
fcoml
loopne
lods
mov
ss
std
xorl
ja
jecxz
pop
test
imul
pop
mov
lea
lahf
test
fistl
loopne
insb
into
jns
sbb
out
mov
push
dec
ds
jne
pop
jne
fsubrs
push
push
aas
in
jae,pn
mov
fwait
mov
cmpsb
dec
jle
pop
cli
mov
add
dec
test
outsb
subl
cmp
insl
xchg
push
lcall
jg
or
xchg
push
jl
mov
pop
push
mov
cmpsl
mov
jbe
mulb
jne
or
cmp
outsl
and
push
imul
jmp
or
mov
pop
cmc
bnd
mov
imul
xchg
or
repz
test
stc
sbb
jo
push
and
lods
mov
imul
or
mov
leave
out
sbbl
xchg
stos
dec
push
clc
xchg
cld
aad
jb
mov
addb
aam
inc
mov
mov
das
sar
dec
push
lock
mov
cs
dec
cmpsl
push
repz
jp
stos
mov
cli
add
fcoms
fstp
shll
test
add
mov
adc
jp
pop
jle
shl
mov
pop
sub
inc
mov
sbb
cs
out
sub
in
cmc
push
xchg
out
fmuls
test
pop
iret
lret
inc
add
lds
enter
arpl
ret
mov
sbb
aam
jecxz
ret
mov
subb
mov
leave
dec
jmp
lcall
fiaddl
stc
mov
lret
mov
insl
push
cltd
and
and
mov
jae
fldt
in
jge
jns
iret
pop
and
std
push
aad
xchg
aas
dec
testl
nop
sbb
xorb
pushf
outsl
xorl
dec
mov
xchg
xchg
pop
loop
mov
add
sub
cmp
push
mov
add
in
push
punpckldq
les
jb
js
inc
mov
or
bound
daa
fwait
and
pop
cs
cmp
mov
int
dec
sbb
dec
stos
or
movsb
mov
or
fs
or
adc
xor
cmp
adc
fwait
popa
mov
leave
or
repnz
stc
outsl
push
pop
ficompl
xchg
sbb
ds
jp
and
ret
loop
ds
adcb
aam
paddd
imul
loopne
xchg
xor
jae
xchg
mov
sarl
sub
data16
or
cmp
shll
in
or
mov
sti
jg
cmpsl
dec
fsubl
jno
mov
in
add
ret
or
mov
arpl
push
jnp
test
movsl
out
mov
out
lcall
mov
xchg
pop
pushf
repnz
or
and
cwtl
sbb
add
int
movsb
xor
popa
mov
jp
push
out
sbb
out
je
pop
jl
iret
push
sbb
insl
mov
jns
cmpsb
dec
add
jmp
cmc
std
jmp
bound
fdiv
and
lcall
sbb
mov
and
ss
add
adc
lret
test
xor
xchg
fdivrl
inc
or
sbb
add
outsl
or
imul
inc
lcall
jbe
mov
rcll
hlt
inc
lock
xchg
sbb
cmp
loopne
int
sbb
ficomps
mulb
xchg
or
popf
pop
popf
push
xor
xchg
movsl
mov
std
mov
hlt
divl
pop
je
mov
xor
fdivs
dec
fdivs
inc
xchg
fldenv
loop
scas
mov
mov
dec
mov
es
aaa
repnz
jb
popf
push
pop
scas
adc
push
cld
add
and
cmpsb
out
cmp
xchg
push
imul
cvtdq2ps
sarl
int
mov
fld
jb
ss
dec
lea
lahf
xorb
pop
sti
scas
add
and
inc
lcall
dec
jl
gs
loope
jo
sbb
mov
push
and
imul
cmc
xor
or
jno
and
lcall
sahf
mov
xchg
and
push
pop
push
inc
subl
push
push
into
cmp
nop
in
fs
js
or
shlb
jo
push
inc
cmpsl
test
into
pop
inc
sub
addb
sbb
cmp
in
lret
sbb
sub
aaa
std
dec
or
push
mov
or
fldt
mov
push
mov
fs
repnz
mov
outsl
jnp
ficoms
fistps
inc
pusha
rcrl
cmc
das
call
data16
jmp
lods
pop
mov
leave
enter
push
orb
or
dec
push
ds
pop
mov
mov
sub
lcall
jecxz
das
dec
mov
cmpsb
mov
call
push
in
rol
push
cmp
jp
cmp
or
adc
mov
cmp
xchg
call
mov
sbb
xor
mov
orb
lock
push
aaa
mov
mov
xchg
mov
dec
xchg
pop
jnp
mov
xchg
pop
int
int
sbbb
or
ss
pusha
in
ja
mov
mov
mov
mov
mov
sub
mov
ja
pop
rorb
inc
shrb
rolb
fwait
ja
lcall
subb
sbb
xor
cmpsb
mov
xchg
xlat
ret
stos
bound
mov
mov
mov
jge
fadd
add
je
adc
aam
bound
dec
jmp
sub
push
clc
adc
in
enter
jo
push
xor
push
stos
test
mov
add
lea
mov
inc
add
dec
xor
cmp
add
dec
push
xchg
fsubp
jbe
fisttps
mov
mov
les
fs
lret
add
int
fs
mov
mov
lcall
gs
adc
clc
xchg
stos
stos
sub
fcompl
aam
jno
jmp
aad
aas
inc
jp
pop
ret
aam
push
sub
push
cmp
push
xor
sahf
je
loop
mov
jp
jne
fmull
pushl
ljmp
adc
das
inc
pop
mov
jp
lods
push
mov
or
sti
cld
jo
inc
add
hlt
xlat
ss
xor
mov
inc
sbb
jge
mov
iret
adc
lahf
out
sub
scas
adc
popa
mov
cld
mov
cld
dec
lcall
pop
and
iret
mov
mov
insb
jecxz
mov
adcb
pop
inc
insl
inc
int3
sbb
pop
inc
out
call
stc
fwait
pusha
fdivrl
ret
stos
dec
data16
push
xchg
pop
add
xor
clc
and
lods
inc
add
aas
sahf
aam
imul
imul
xchg
daa
sbb
insb
xor
jns
cmp
call
pop
jno
cmp
jmp
insl
daa
xor
push
decl
sub
sti
stc
gs
push
movl
das
cmovns
jb
or
loope
sbb
mov
sbb
stos
in
js
push
pop
cmp
cmp
lea
test
test
mov
loop
push
xor
adc
test
loope
mov
in
inc
pop
lret
xor
lods
sub
fdivrs
and
aam
inc
aaa
enter
push
mov
inc
mov
shrl
rorb
adc
clc
mov
faddl
xchg
inc
and
or
xor
dec
mov
movsb
cltd
fisttpll
lea
inc
in
push
repnz
lcall
lret
push
movl
mov
mov
cmp
hlt
loope
adc
cli
dec
or
or
xchg
dec
loope
inc
lcall
lcall
idivl
dec
xor
jle
icebp
pop
leave
mov
movsb
sbb
xor
mov
mov
adc
push
stos
addr16
ljmp
jcxz
push
mov
jmp
sub
adc
and
ret
shll
sub
sbb
inc
fstpl
xor
cltd
cmpsl
or
dec
sbb
xor
js
xchg
sbb
add
and
mov
inc
mov
push
popf
out
loop
in
xor
cmc
mov
xor
in
fs
push
jg
pop
gs
enter
aad
stos
xchg
int
hlt
cli
mov
sbb
dec
cwtl
sub
adc
jecxz
sti
mov
imul
aas
test
gs
aad
jnp
mov
out
mov
mov
sbb
and
sub
cwtl
sub
ffree
add
je
repz
sbbl
out
jmp
push
popf
shlb
test
inc
out
sbb
outsl
shlb
mov
or
mov
subps
jg
push
punpckhwd
mov
jl
in
inc
xor
xlat
insl
aad
insl
stos
sub
pop
mov
adc
cmpsb
call
xchg
push
cltd
sub
out
xorl
mov
cwtl
data16
repnz
mov
push
or
mov
hlt
sahf
pop
push
sahf
lock
lods
xchg
dec
fdivrs
mull
xlat
rorl
aad
out
xor
sub
pop
pop
lahf
pop
cmpsb
lock
out
mov
inc
sub
mov
inc
mov
std
insb
mov
enter
xor
lods
sarl
frstor
rorb
ljmp
sbb
add
cmpsb
pusha
cmpsl
xor
xchg
movb
and
adc
popf
mov
ficompl
shr
aam
bound
cmp
bound
lods
inc
xchg
shl
and
stos
ret
loopne
shrb
shlb
xchg
lret
mov
sbb
cs
insb
int3
mov
add
inc
mov
mov
pushf
lea
xor
jle
xchg
push
jmp
fwait
and
or
movsl
jmp
out
adc
or
cmpl
cwtl
out
xor
xchg
es
roll
mov
cmp
mov
jle
push
insl
out
stc
aad
mov
jp,pn
lods
adc
mov
or
jbe
dec
js
iret
jbe
lret
push
fildl
cwtl
cli
out
fstpt
daa
das
bound
outsl
lea
jns
mov
outsl
out
xor
std
outsb
fwait
mov
call
loopne
aas
lcall
sub
xchg
cli
adc
sub
pop
pushf
xlat
mov
outsb
fmuls
in
cld
stos
jl
add
adc
arpl
push
jmp
mov
cmp
jns,pn
mov
lret
jb
scas
movb
add
add
rcrb
test
lods
pusha
pop
gs
pop
in
inc
fisttpll
mov
enter
std
divb
adc
pop
cmp
dec
outsl
daa
icebp
mov
xchg
cmpsl
pop
jmp
shrb
jmp
in
rcrb
jp
mov
in
ret
cwtl
cmp
scas
and
or
pop
in
dec
and
subl
mov
ss
repnz
pop
subl
lret
push
sub
push
mov
fisttps
outsb
insb
lret
pop
jg
testl
popf
mov
dec
out
pusha
leave
xabort
xchg
lock
repz
mov
cmp
mov
fdivs
inc
test
sbb
pop
enter
ljmp
fs
es
xchg
andl
mov
dec
mov
cmc
lahf
xchg
push
cs
adc
adc
push
idivb
dec
xor
cmp
xchg
stos
sahf
scas
mov
cmp
out
repnz
jmp
sbb
scas
add
sub
xchg
aaa
pop
cmp
push
int
sbb
popa
into
pop
in
sub
push
cmp
sarl
and
and
loopne
dec
rcll
sub
pop
push
leave
lea
xchg
stos
mov
jge
mov
popf
test
in
jmp
clc
mov
mov
adc
sub
mov
dec
es
decl
in
cltd
rcrb
ljmp
fldt
jnp
dec
test
fwait
mov
shlb
leave
adc
xchg
test
and
test
arpl
fsubrs
outsl
int3
into
xchg
notb
pop
scas
movsl
xlat
aas
push
das
jecxz
mov
inc
lret
std
mov
pusha
cltd
ja
pushf
loop
mov
and
xor
pushf
and
movsl
nop
mov
mov
mov
or
mov
loope
mov
aad
icebp
inc
aas
out
xlat
xor
cmc
xor
das
pop
push
push
cmc
dec
xchg
test
push
testl
sub
lcall
int3
in
xchg
aad
lods
subl
nop
sub
lods
or
mov
daa
jge
subb
les
push
jmp
loope
lods
fildl
in
and
lcall
push
outsb
daa
enter
xor
fucomip
fnstsw
jo
mov
lahf
pop
call
inc
loop
je
rcl
mov
xor
add
aad
mov
dec
cmp
or
pusha
add
mov
aaa
mov
inc
into
lods
inc
xchg
in
iret
mov
push
push
push
xor
ret
call
clc
xchg
rcl
mov
mov
xchg
lea
xchg
mov
xor
cmp
or
test
jae
fnstcw
ret
mov
aam
cltd
xor
cmc
xchg
lret
nop
ret
dec
out
daa
xchg
sub
add
test
jnp
int
dec
shll
pop
push
test
divb
cmp
push
add
sbb
lcall
dec
adc
stos
pop
sbb
jo
or
jmp
push
lcall
test
sub
dec
in
mov
and
mov
cwtl
sbb
sub
xor
mov
mov
xchg
lret
repnz
push
cmp
xor
mov
mov
xor
loope
mov
lcall
mov
add
lahf
fisubs
pop
xchg
hlt
add
stc
sub
mov
inc
pushf
xor
outsb
mov
push
in
lods
iret
mov
adc
data16
enter
into
in
into
jbe
hlt
ret
test
mov
sbb
push
insb
mov
mov
mov
push
xchg
int
shlb
dec
xor
negl
pop
push
add
insl
pop
lods
mov
cmp
jl
inc
sub
les
sub
pusha
in
mov
ds
adcb
or
notb
jns
mov
sbb
push
sarl
mov
sub
adc
fs
jmp
mov
inc
arpl
jmp
dec
shll
sbbb
lcall
jae
pop
fs
mov
imul
insl
jl
jl
lock
pop
loopne
out
loope
jl
iret
xorl
aad
gs
xor
pop
jae
mov
jecxz
sub
xor
pop
stos
pop
sti
dec
jg
cmp
loope
adc
cmp
rorb
popf
jp
movsb
or
adc
mov
enter
sbb
push
cmc
pop
das
gs
and
push
push
mov
dec
lods
xlat
jecxz
push
fildl
cmp
adc
sbb
popf
dec
mov
es
or
call
push
orl
jno
loope
pop
into
push
pushf
jmp
sbb
outsl
into
rolb
imul
mov
je
fists
mov
scas
lcall
fstp
ror
enter
out
loop
dec
ljmp
test
test
xchg
jno
int
mov
add
push
out
lret
popf
add
xor
mov
inc
push
add
push
push
aad
mov
push
push
xor
movl
push
addr16
in
xchg
fucompp
jp
nop
and
jl
fnstenv
add
mov
mov
lret
cmp
rclb
popa
push
mov
lret
loopne
aaa
aaa
sti
mov
testl
or
jo
fcomip
xor
mov
lea
xchg
mov
nop
imul
notb
shl
xor
cltd
xlat
bnd
xchg
cmc
jb
rorl
xchg
jno
fs
sbb
gs
add
cmp
push
jb
ljmp
inc
pop
xor
xlat
xor
lea
cmp
mov
fstps
lds
xchg
inc
mov
out
fmuls
mov
mov
test
push
and
outsl
lret
inc
outsl
test
xor
push
test
ret
cs
ret
xor
jnp
mov
cmpxchg
jg
scas
aas
movsb
call
decl
int
jp
xchg
frstor
mov
fwait
in
popa
mov
sbb
fcom
lret
jl
negl
stc
stc
mov
stos
out
cmpsl
and
cmpsw
inc
or
and
test
addb
mov
add
in
sub
cmp
push
bound
popf
mov
add
xor
sbb
neg
fstl
leave
lds
movsb
testl
jb
cmpsl
pop
jmp
sbb
repnz
pop
pop
fisubrs
and
fcomps
cvtps2pd
sbb
fadds
or
decb
fdivrp
into
cmp
inc
xchg
out
inc
outsb
jmp
and
xchg
pop
pop
xorl
jo
stos
cmp
push
sbb
test
mov
and
in
xchg
add
pushl
fsts
cmp
outsb
pop
xor
popf
aam
orl
push
das
repnz
sbb
movsl
ror
jns
mov
xchg
cmp
pop
shr
popa
and
sti
sahf
insl
ret
daa
js
cli
nop
adc
xchg
out
inc
xchg
mov
xor
lock
add
insl
push
sub
lods
insb
sbb
mov
inc
dec
push
cmp
lahf
or
mov
popf
es
xchg
fisubrs
pop
in
and
inc
push
idivb
fldcw
gs
dec
loopne
pop
add
xchg
add
lret
add
cmp
push
cmp
iret
fldl
jne
sub
pushf
lea
push
inc
std
jmp
call
ds
cltd
int
arpl
mov
flds
inc
sub
dec
inc
xchg
outsb
pusha
ja
and
sti
cmpsb
sahf
sub
and
sbb
orb
test
sbb
xor
jb
adc
cmp
pop
mov
mov
pop
stc
pop
lahf
mov
xor
mov
push
je
jo
sbb
hlt
jmp
insl
cmpsl
push
dec
jecxz
in
les
repz
aad
jno
adc
jge
fldenv
push
mov
adc
repnz
jns
ret
fdivrs
jmp
xchg
sub
push
push
out
add
inc
shll
movsl
lock
es
push
shlb
add
cmp
cltd
mov
inc
arpl
or
adc
enter
mov
sbb
rclb
jmp
xchg
jo
roll
push
inc
mov
mov
andb
in
and
cwtl
sbb
xchg
or
push
jge
lcall
mov
mov
idiv
or
push
rcll
push
sbb
int
out
fsubl
and
test
xchg
mov
sbbl
jmp
data16
imul
in
lds
outsb
stc
sub
xchg
sub
push
xchg
divl
sub
mov
cmp
add
cmp
aad
cmp
push
stc
mov
inc
xor
cmp
push
ret
loop
imul
rcr
in
mov
int
push
xor
cmc
clc
mul
pushf
mov
lret
push
xor
outsl
notl
lret
jecxz
inc
jp
fmul
xchg
lds
xor
or
adc
out
addr16
mov
sub
dec
ljmp
xchg
mov
inc
fcompl
push
push
xchg
ds
pusha
insl
cmc
pushf
pop
bound
pop
or
ret
test
mov
aaa
dec
push
imul
inc
shll
mov
xchg
dec
fisubl
clc
mov
shlb
ret
outsb
out
pop
shl
xchg
aad
daa
cmp
sub
cld
dec
imul
cs
popa
mov
lods
mov
mov
mov
jne
sub
lret
push
push
push
mov
or
pop
add
fwait
sbb
dec
mov
cmp
inc
adc
icebp
cmpsl
push
push
int
in
inc
test
push
inc
int
adc
dec
xchg
stos
inc
dec
aas
and
imul
gs
jns
adc
mov
fistpl
repnz
sub
xor
ret
jb
cli
pop
icebp
add
pop
cmp
shll
add
jg
dec
pop
pushf
xchg
aad
hlt
lea
rol
aaa
push
pushf
sti
adc
xchg
ffreep
int3
mov
jae
hlt
adc
rorl
fdivrl
mov
pop
jl
movsl
lret
in
pusha
pop
xchg
test
push
in
cld
inc
and
jle
pop
xlat
inc
cmp
or
or
ret
sub
lahf
nop
arpl
push
add
lods
sub
cmpsb
fistpll
sahf
and
fs
jne
and
cli
das
lea
add
ret
add
or
mov
in
into
add
push
mov
xor
push
xchg
sbb
test
scas
shll
sbb
cld
jle
adc
into
jmp
ret
mov
aas
jge
aam
sbb
loope
xchg
xchg
outsb
int
inc
mov
xchg
div
test
xchg
fcoms
movsb
mov
repz
insl
das
stc
fistl
xchg
dec
shlb
icebp
loop
jno
push
or
xor
xlat
xor
push
inc
and
xorb
sbb
pop
lods
enter
int
mulb
ret
test
adc
sbb
xor
add
addb
add
outsb
dec
sub
in
scas
fst
mov
mov
cmp
int
sub
out
sbb
cmpsb
mov
jb
in
inc
add
sahf
add
pop
inc
xchg
hlt
mov
scas
in
cld
xor
add
or
xor
xchg
jne
mov
dec
sbb
xor
sub
clc
lret
sar
mov
adc
xor
inc
and
cmc
sbb
add
sbb
jp
int
cmp
and
cmp
jns
test
jg
mov
sub
lock
fistps
aam
add
pop
sub
scas
xchg
lea
and
divb
and
push
aas
adc
pusha
aas
inc
out
mov
popf
stos
fisubrl
xor
aam
aam
mov
mov
mov
add
test
mov
popa
jne
cmp
insl
add
xchg
fucomi
and
add
xor
sbb
jns
or
dec
sbb
cmp
pop
das
loopne
movsl
sarb
retw
int3
fdivrs
repnz
nop
insb
aas
inc
sarl
sbb
push
call
outsl
cmp
std
aam
mov
sti
mov
or
mov
cltd
outsl
and
jae
jae
adc
fs
and
jb
repnz
mov
xchg
push
repz
sbb
mov
ret
jnp
xor
mov
data16
add
xlat
jbe
push
adc
mov
movsl
mov
and
push
daa
sub
add
cmpsb
push
push
mov
mov
insl
pop
sbbb
jns
inc
das
cmp
mov
lcall
shr
mov
jno
jecxz
sub
mov
lcall
cmp
mov
jo
lods
mov
outsb
xlat
js
push
imul
lock
inc
jns
sub
lods
arpl
lock
data16
mov
outsl
cmp
push
mov
das
repz
sub
leave
inc
loop
sub
push
mov
nop
testl
mov
pop
lcall
sbb
test
leave
xchg
stos
mov
or
out
or
xchg
sub
or
inc
xor
imul
mov
push
push
jae
loop
sub
pop
in
int3
pop
xchg
sub
shl
jge
outsb
dec
or
roll
lret
aaa
cld
das
int
hlt
iret
push
insb
dec
cwtl
or
sub
adc
push
pop
lret
out
push
popa
imul
xchg
jb
dec
popa
jp
mov
and
xor
push
fdivs
cmpsl
data16
pop
ss
clc
lret
cld
dec
std
out
xchg
mov
loop
iret
negb
aaa
mov
setnp
sahf
mov
subb
xabort
shll
mov
mov
pop
jle
mov
mov
cmp
repnz
dec
rolb
push
sub
dec
inc
add
push
outsl
mov
mov
jle
sub
jl
jmp
sub
out
fadd
imul
stos
xchg
fbstp
inc
jecxz
imul
gs
sub
jns
out
push
es
jp
lods
hlt
mov
lret
stos
jae
cmpsb
lcall
jecxz
sbb
dec
inc
adc
es
add
shrb
adc
aas
enter
cmp
fcmovnbe
pop
push
mov
insb
mov
lret
inc
add
fidivs
mov
jmp
push
pop
lret
mov
cmpsl
mov
xchg
dec
sbb
mov
insl
or
adc
mov
push
push
int
mov
jle
aas
rol
xchg
outsl
roll
pop
adc
lds
loop
ret
loope
dec
and
repz
mov
and
ds
sub
jmp
jle
and
xchg
insl
inc
push
xchg
loope
cmp
iret
test
jns
jae
mov
mulb
or
and
ss
imul
sbb
mov
addr16
fists
xchg
jae
in
jge
dec
aas
dec
sub
sbbb
push
xchg
sahf
arpl
repz
out
and
adc
push
ret
or
ficompl
in
jge
mov
sub
mov
push
and
sbb
sub
frstpm(287
cwtl
lock
jo
leave
lcall
stc
aam
insl
pop
add
data16
sbb
mov
jp
nop
mov
js
rcrl
pop
push
sbb
pop
mov
xchg
jl
xor
sub
hlt
push
dec
iret
sbb
fnstcw
and
std
gs
test
mov
jo
movsl
in
inc
jl
nop
imul
stos
jb
jae
inc
aas
lret
loope
mov
jns
aad
cs
push
int
ja
test
pop
jae
push
out
sahf
sbb
scas
cmp
pop
int3
std
xor
scas
jns
cli
pushl
inc
pop
cmp
mov
sub
xchg
and
jmp
cmp
sub
sarb
movsl
push
ret
mov
jns
xlat
in
sub
push
pop
push
sbb
cli
es
aad
mov
fadds
fwait
sti
movsl
ret
test
push
mov
loope
aam
dec
mov
cld
in
shl
loop
xchg
pop
mov
mov
and
test
mov
fs
or
into
pop
dec
pop
jb
mov
mov
divb
cmpsb
xor
add
dec
xor
in
jmp
jmp
lcall
or
aas
pop
xchg
or
sbb
mov
int3
push
add
pop
daa
jno
mov
or
jg,pn
push
out
rcrb
jmp
nop
xlat
sti
test
fwait
movsb
jnp
cwtl
loope
pop
mov
aam
pop
add
mov
push
mov
std
xor
push
test
sub
gs
orb
outsb
dec
xor
ljmp
call
dec
pop
addr16
les
imul
mov
icebp
cli
adc
clc
adc
daa
bound
mov
in
test
pop
int
push
or
iret
or
xor
mov
clc
mov
nop
stc
in
inc
lods
mov
incb
mov
andb
stos
std
sarb
out
inc
stos
and
sub
xor
leave
dec
push
push
fstl
pop
test
xor
lock
into
xchg
in
sub
lods
inc
mov
cltd
sbbb
loopne
dec
stos
mov
hlt
or
sub
aaa
xchg
dec
push
call
push
mov
sub
xorl
clc
push
mov
insb
leave
dec
mov
jge
lods
push
jns
sahf
sti
jle
ljmp
fnstsw
inc
pop
xchg
ret
jge
push
and
repz
pop
or
lods
addl
cmpsb
iret
lock
stos
fwait
clc
andl
mov
test
cld
icebp
adc
mov
sbb
insl
stos
cld
pop
or
lods
xchg
imul
mov
sub
je
mov
push
and
adc
add
xchg
push
shll
sahf
aas
dec
test
lds
ja
sub
fidivl
lods
dec
mov
dec
repz
scas
mov
aad
pop
mov
lea
push
xchg
shll
cmp
adc
sub
or
jecxz
and
aaa
jns
sahf
xor
inc
in
rolb
adcb
add
fadds
into
mov
xorb
dec
gs
rorb
or
mov
in
inc
inc
dec
shll
jns
sbb
test
lret
push
cs
call
cmp
lret
pop
mov
insl
or
fiaddl
mov
push
movl
mov
into
jl
jl
pop
xor
fidivrs
ret
jns
in
adc
xor
push
rorb
push
out
enter
fistpl
sub
sbb
stc
addb
push
divb
xor
test
xchg
in
faddl
nop
sahf
sbbl
mov
adc
enter
test
cld
mov
mov
push
xor
pop
ds
sub
sub
test
loop
stc
dec
popa
cmp
xlat
mov
orb
repz
lds
adc
lea
insl
arpl
popa
shrl
mov
in
adcl
jne
out
mov
sub
ret
mov
push
mov
mov
push
or
ja
test
outsl
jb
pop
jle
lcall
jge
insb
xchg
jecxz
xor
je
ljmp
sub
or
gs
push
xchg
daa
inc
pcmpeqw
and
pop
mov
imul
jle
stos
mov
pusha
ljmp
ss
dec
sub
pop
ljmp
jnp
sub
xchg
or
mov
pop
sub
mov
or
sbb
mov
jecxz
dec
add
fisubrl
pop
push
movsb
sbbl
adc
cwtl
std
and
inc
mov
mov
xchg
fidivs
xchg
js
mov
jp
test
sbb
scas
cmpsb
xchg
mov
filds
pop
xlat
jecxz
lock
mov
jle
int3
or
sub
int
pop
test
in
imul
sub
dec
je
dec
mov
jge
or
xor
jnp
out
sub
test
fistpll
jge
lret
imul
popf
enter
xor
push
dec
sbb
mov
jl
xchg
fistps
icebp
add
fbld
dec
xor
mov
mov
sub
xchg
xor
arpl
sbb
jns
xor
adc
mov
fsubrl
or
xchg
cmp
pop
jae
mov
push
adc
outsb
adc
mov
push
movsl
js
and
dec
pop
push
cli
icebp
mov
mov
inc
cmp
ds
shr
mov
xor
std
enter
fcomp
cmp
or
or
mov
push
mov
xor
cs
xchg
dec
fcmovnb
das
mov
fisubrs
popf
outsl
clc
adc
adc
pop
sbbb
xor
or
jg
pop
pop
xor
xchg
out
mov
sbb
cmpsl
sub
clc
and
push
dec
xor
and
cmpsl
lods
push
adc
lods
xor
push
dec
arpl
and
sbb
jne
fildll
ss
push
add
dec
inc
inc
in
or
mov
xchg
cmpsb
sbb
cli
sbb
into
cmpsl
adc
pusha
popa
lock
mov
xlat
rclb
insl
repnz
mov
lea
adc
xchg
jno
cmpsb
mov
and
sbb
dec
data16
stc
stc
sarl
sahf
lcall
dec
fwait
leave
sub
aaa
mov
mov
imul
pop
mov
fs
andl
jne
repnz
sub
sbb
adc
pop
gs
sub
jb
mov
sbb
sub
sbb
fsts
out
or
and
mov
jns
xchg
addr16
fisubs
popf
push
dec
sti
andl
fiaddl
pop
xor
mov
leave
pop
xor
hlt
inc
hlt
lcall
cmpsb
and
fiadds
ret
stc
sti
aas
stos
cmp
sub
mov
pop
mov
pop
hlt
dec
mov
sbb
cmp
cmp
pop
xor
or
add
test
pop
test
ss
outsl
insl
xorl
sti
jle
imull
int3
fsub
cmp
or
sbb
push
jl
out
add
push
stc
cmpsb
cmpsl
mov
add
imull
cmp
push
mov
mov
or
sub
jno
enter
xorl
jns
scas
iret
cld
push
sub
mov
filds
mov
stos
js
jge
xchg
call
push
inc
mov
sbb
xchg
xchg
pushf
jge
jmp
fdivp
fnstenv
lock
orb
sub
sbb
shrl
cmpb
sbb
jle
add
cmpb
pop
loop
xor
mov
loop
inc
aam
hlt
jb
sub
xchg
adc
xchg
ret
ret
dec
mov
mov
outsb
js
pop
xchg
repnz
pop
xlat
adc
xchg
dec
mov
in
add
pushf
sahf
cmpsl
xor
sub
mov
push
lcall
fildll
mov
fcomi
cmpb
jge
lods
add
jns
mov
nop
mov
mov
pop
add
mov
push
rcr
or
cmpsb
aas
sbb
call
dec
and
mov
xchg
mov
rorl
xchg
pop
daa
negl
mov
ja
cmc
daa
aam
lahf
pop
stc
int
into
and
xchg
jecxz
mov
test
xor
lods
mov
push
cli
cs
push
pop
sbb
or
adc
add
sti
cmc
mov
inc
int
imul
jns
into
call
xchg
repz
in
fildl
dec
and
dec
and
lock
lods
dec
movntps
mov
cmpsb
push
or
icebp
in
jne
xor
dec
sub
dec
imul
cmovns
push
shlb
or
aam
pop
add
xor
jno
hlt
xor
pop
cmp
jbe
jae
sbb
pop
sahf
xchg
xchg
addr16
ficompl
stc
test
dec
aas
or
pop
call
xchg
shll
cmp
mov
popa
iret
adc
mov
push
outsl
insb
mov
mov
push
fstpl
xor
arpl
notb
sbb
push
outsl
fwait
and
mov
insb
cmp
add
sbb
mov
data16
popf
loopne
add
cmc
xchg
dec
xor
sahf
jl
sbb
pop
imul
mov
mov
add
mov
sub
push
jl
dec
imul
xchg
test
fdivr
daa
cmpsb
aas
cmp
test
sti
pop
clc
and
cwtl
add
out
popa
sahf
addb
fidivrl
shrl
mov
loopne
adc
inc
imul
cmp
adc
movsb
outsl
or
mov
sahf
outsb
aad
mov
lret
push
mov
repz
mov
cli
pop
insl
push
in
add
dec
notl
mov
mov
sbb
inc
or
push
sub
push
lods
aas
mov
xchg
ds
js
pop
sahf
push
shrb
xchg
xchg
subl
or
das
mov
test
imul
pushf
cwtl
mov
lods
xor
push
mov
xchg
sbb
scas
dec
jb
xor
cmpsb
aas
sub
popa
and
mov
lahf
add
cmpsl
sub
add
and
hlt
and
mov
mov
shrb
orl
jne
push
and
test
cs
adc
lahf
and
mov
lret
xchg
fcomi
mov
das
mov
mov
cli
das
lds
in
mov
mov
clc
fnstenv
out
jns
cmc
int3
shrb
ds
loopne
mov
lock
jae
cmpsl
xor
cmp
in
dec
aaa
add
jp
inc
ret
xor
hlt
int
xchg
jecxz
xchg
in
pop
imul
push
xchg
and
sub
ss
aad
cmc
movsb
fsubrl
inc
xor
mov
bound
addr16
xchg
dec
jb
and
add
pop
fwait
movsl
sti
adc
in
arpl
cmpsl
pop
xchg
mov
lds
fwait
jl
sbb
xlat
aaa
push
add
jmp
pop
movsb
pop
sub
pop
mov
ja
add
imul
push
sub
jge
addr16
add
adc
nop
and
mov
mov
rorl
add
pushf
and
hlt
and
sti
push
inc
push
push
clc
inc
push
lahf
push
pop
xor
in
adc
fwait
das
mov
insl
mov
aad
adcb
aas
cmpsb
mov
xchg
fstpt
push
xlat
push
and
ret
cmp
icebp
in
jmp
cmpsb
mov
ds
jae
icebp
fsubr
lret
lret
pop
or
pop
sahf
inc
jg
imul
lahf
repz
mov
mov
jp
ja
inc
and
mov
mov
sbb
insl
add
jne
cltd
movb
in
lahf
fimull
jbe
iret
out
and
int
pop
and
mov
push
xor
lea
add
stc
xchg
or
out
fsubrs
cwtl
xchg
add
inc
fcompl
mov
dec
mov
push
clc
les
lahf
stos
push
mov
or
add
inc
and
mov
add
std
iret
add
mov
sbbb
xor
adcb
icebp
arpl
xor
int
xor
dec
mov
mov
scas
push
repz
daa
mov
cwtl
cmpsl
mov
xor
dec
jmp
fwait
xchg
mov
imul
aam
dec
int3
fildl
ret
sub
xchg
test
popa
subl
and
addr16
popl
add
dec
mov
adc
pop
push
push
ds
int
adc
pop
rolb
push
cwtl
test
adc
mov
rcl
lods
push
aad
sahf
dec
gs
mov
adc
adc
int3
enter
mov
add
sarl
or
shrl
jnp
lahf
mov
mov
cli
sbb
sub
jmp
shll
repz
sub
push
ss
lcall
mov
mov
pop
dec
sub
add
fs
cli
cmpsl
pop
pop
xor
test
xchg
jl
enter
cmpsl
inc
test
jecxz
jne
mov
pop
jl
jo
jp
mov
mov
or
pop
dec
mov
push
scas
cld
or
cmp
mov
xor
fisttpll
jle
out
repz
out
mov
adc
mov
xchg
inc
cld
xor
or
in
mov
mov
mov
out
cmp
bound
pop
sbb
dec
jo
sub
loope
xlat
push
test
lret
jnp
in
adc
mov
subb
aam
fildll
adc
imul
jo
inc
sahf
add
sub
imul
sti
jge
mov
and
mov
cmp
int
and
movsl
jmp
rcrl
sub
inc
addb
jae
fcoml
daa
pop
lcall
mov
xlat
mov
mov
stos
bound
or
add
mov
nop
out
jl
xchg
xchg
test
sub
or
fadds
pop
fwait
ljmp
mov
cld
outsb
ds
xor
cwtl
push
mov
mov
mov
test
arpl
mov
cltd
sti
shlb
mov
fdivrl
push
xor
pop
ja
jbe
arpl
ret
aad
sub
fwait
test
rcl
mov
js
sub
xchg
jne
push
clc
xchg
push
daa
cmpsl
mov
and
daa
outsb
xor
add
jbe
mov
jl
jp
movsl
mov
push
or
int3
sub
in
and
mov
bound
and
fidivs
push
fsts
push
repnz
xchg
dec
movsb
scas
scas
enter
aas
or
sti
cwtl
das
je
jge
jle
lret
jl
inc
push
jbe
pop
xor
mov
test
dec
and
in
push
lods
or
push
sbb
jecxz
shlb
inc
movsb
ds
jno
loop
sbb
sub
push
shrb
int
dec
lock
inc
cmp
ss
arpl
xor
or
jo
repz
stos
push
xor
xchg
push
imul
pop
add
or
adcl
mov
push
in
inc
add
and
fidivrl
idiv
cmp
pop
dec
inc
roll
cmpsb
jmp
xchg
mov
and
mov
fdivrl
nop
inc
insl
push
mov
inc
rol
stos
outsl
into
mov
insb
sbb
dec
jno
lret
mov
jp
xchg
jb
inc
mov
movsl
loopne
cli
lods
sub
int3
test
lcall
imul
inc
int3
lcall
ret
sbbl
je
xor
mov
lods
mov
and
sub
jp
push
or
inc
mov
add
movsb
inc
das
into
lods
jp
dec
xor
data16
cltd
xchg
sti
cmpsl
call
and
mov
daa
dec
idivl
jne
mov
inc
sub
xor
ja
sub
jl
fnstenv
jne
cwtl
dec
gs
inc
push
pushf
xor
scas
push
push
pop
or
dec
test
insl
inc
fidivl
push
pop
lcall
mov
rolb
mov
rcrb
mov
fbstp
jae
xor
sub
rclb
mov
mov
repnz
xchg
add
loop
repnz
scas
outsb
adc
push
stc
inc
mov
mov
xchg
pushf
mov
ret
repnz
sub
outsb
test
mov
xor
aas
pop
jp
sbb
mov
inc
rcrl
xchg
xchg
sbb
jbe
adc
aam
cmc
es
jo
idiv
cld
icebp
add
fcoms
mov
lea
test
fadds
arpl
mov
jne
and
movb
add
or
push
adc
mov
imul
movsl
in
fidivrl
loopne
adc
ret
ret
dec
repz
xchg
std
leave
add
xor
call
pop
dec
es
dec
xor
mov
cltd
dec
mov
dec
lcall
outsl
mov
fstpt
cs
mov
arpl
ljmp
xchg
rcll
inc
outsb
xor
add
btc
jle
cmpsb
fcmovnb
fisubl
or
push
daa
sbb
in
sbb
jae
push
jnp
mov
or
pop
lods
mov
jo
and
in
call
xchg
dec
mov
pop
aad
loopne
inc
jne
cmp
rorb
mov
lods
jo
and
xchg
dec
xchg
cwtl
cs
pop
pop
ds
outsl
pop
or
push
dec
jl
push
or
sahf
fsubs
hlt
mov
movsl
mov
or
nop
pop
add
into
push
sbb
add
mov
pusha
sbb
jmp
ja
ss
jg
adc
incb
push
mov
dec
jae
vrsqrtps
stos
mull
pop
or
mov
sub
aaa
add
ret
cmp
push
xor
jae
sar
pop
jno
adc
or
jle
shll
and
jnp
ffree
dec
lock
mov
sub
imul
mov
jbe
imulb
push
cmpsb
fidivl
lea
cltd
nop
cmp
leave
loope
add
inc
push
in
lods
push
xor
jmp
outsl
mov
xlat
ss
sub
cltd
fimull
jno
dec
and
pop
inc
lahf
aam
leave
icebp
push
mov
jle
fxch
out
and
mov
and
pop
pop
fwait
cmp
shll
js
das
movsb
push
ret
leave
aas
stos
add
and
pop
hlt
test
pop
hlt
add
cmp
scas
xor
ja
aas
jl
in
icebp
ficomps
bnd
sbb
sbb
mov
mov
mov
mov
mov
xor
out
jle
addr16
sar
loop
or
jl
xchg
daa
shll
adc
int3
int
dec
andl
movl
movsl
bnd
cltd
sub
mov
sub
push
rclb
test
repnz
ret
test
jle
scas
jl
mov
cmpb
cmp
or
mov
call
cli
xchg
cs
js
pop
loopne
adc
int
push
addr16
mov
push
test
push
inc
push
insb
repz
ret
mov
cmp
ret
lea
mov
mov
jmp
popf
mov
mov
add
pop
mov
lea
test
jo
inc
dec
xor
icebp
dec
jns
sub
nop
push
out
ja
cltd
adc
jo
idivb
cmc
loopne
leave
adc
repz
outsb
add
mov
pusha
aas
or
loop
xchg
dec
outsb
adcl
imul
sub
xchg
jg
loop
push
or
out
xchg
in
push
cltd
mov
mov
push
scas
sti
data16
movsb
mov
int3
lcall
divb
jns
cmp
sti
hlt
out
dec
in
add
dec
add
in
mov
arpl
xor
mov
out
or
mov
icebp
test
pop
add
jbe
leave
cmp
dec
pop
sbb
lods
xchg
enter
popa
sbb
int
outsb
pop
out
xchg
jg
icebp
fdivrl
adc
in
cmp
es
mov
stos
sbb
pusha
jno
inc
enter
add
mov
mov
ss
add
icebp
iret
mov
mov
test
jg
sbb
cmc
rclb
jmp
into
lret
fnsave
pushf
jns
mov
insb
shll
mov
jb
jae
jns
fldt
jnp
mov
mov
sub
sti
push
jl
xor
or
fwait
cmp
jne
mov
aam
outsl
jmp
pop
ret
mov
xlat
xor
ror
in
pop
sub
cmpsl
shlb
add
mov
repz
add
xchg
mov
add
sbb
sbb
into
ss
adc
scas
aad
aas
sbb
fs
into
xor
mov
daa
fisttps
or
or
scas
insb
xchg
lods
pop
outsl
sti
mov
lret
rcll
lret
and
jns
cmp
adc
cwtl
sbb
neg
int3
imul
sub
push
pop
jae
das
andl
dec
xor
ret
mov
add
sahf
lret
adc
lea
pop
insl
dec
inc
andb
bound
mov
cmp
pop
or
push
outsl
jp
inc
test
xor
imul
mov
mov
mov
sub
lods
adc
addb
mov
jg
xchg
sub
jb
jo
add
pop
out
xchg
iret
sub
aaa
lcall
mov
stc
add
scas
ret
pop
cmp
nop
dec
or
ds
cmpb
xor
not
insb
adc
jl
inc
scas
and
icebp
mov
sbb
dec
pop
fs
sbb
idiv
mov
in
adc
pushf
cmc
xlat
sbb
test
sub
lea
push
mov
imul
add
or
cmc
cmc
insl
repnz
jecxz
imul
data16
sub
and
pop
xor
mov
mov
mov
push
stos
push
lret
aas
sbb
add
push
dec
adc
xor
and
popa
and
push
adc
inc
cmp
sbb
ret
jb
movsb
sub
adc
xchg
ret
push
ljmp
aam
cli
insb
xchg
xchg
jecxz
enter
push
out
fldenv
ja
pop
sub
sub
or
pushf
pop
hlt
add
pop
and
xchg
and
das
aam
ljmp
or
fcoms
loop
loop
nop
xor
mov
dec
push
pop
add
sub
add
popa
pop
imul
add
arpl
dec
inc
jmp
outsl
or
cs
adc
ja
jae
call
dec
adc
and
jg
dec
ja
lea
cmp
movsb
push
xor
dec
inc
in
xchg
std
sub
pop
push
or
cmp
push
call
xor
call
push
pushf
fwait
repnz
adc
pusha
insl
out
out
arpl
sub
stos
pop
push
call
sbb
hlt
jg
dec
pop
mov
jmp
and
subl
xchg
jns
inc
in
inc
je
mov
aas
stos
and
dec
leave
addb
jo
adc
xor
ljmp
inc
mov
loope
jnp
loop
xchg
sub
jae
xor
cmp
lods
xchg
mul
xchg
mov
sahf
mov
sub
call
cltd
orl
sarl
dec
aam
ss
push
fisttps
hlt
cmpsl
nop
jle
dec
aad
aas
push
and
iret
movsb
push
outsb
mov
mov
jl
adc
call
scas
out
push
cmp
lcall
das
jno
mov
lods
adc
popf
or
stc
les
fldl
ret
aam
scas
sub
mov
xor
or
push
loop
xor
stos
jp
loop
xchg
mov
push
sbb
imul
cli
xchg
lret
and
fmuls
fwait
or
xchg
pusha
lret
fdivr
outsb
scas
pop
mov
push
cs
add
data16
ja
mov
popa
repz
aad
dec
lahf
xor
std
inc
addr16
jp
pop
and
les
call
xor
pop
aas
outsb
push
jbe
jl
adc
mov
adc
adc
fadds
mov
mov
int3
jp
jo
pop
mov
sub
fsub
scas
stc
fs
shll
fidivrl
mov
mov
adc
aas
addr16
sub
popa
fs
out
sub
pusha
lea
jmp
rclb
xor
or
fidivrl
movsb
ficoms
sbb
lods
xor
sub
call
loopne
fistpll
adc
jbe
mov
dec
mov
fwait
pop
or
scas
sbb
jbe
xor
cmp
fs
and
sub
push
sar
sub
sub
mov
shl
xchg
pop
mov
and
mov
adc
ss
popf
aad
and
mov
sbb
xchg
jo
test
push
sub
lods
mov
cltd
loopne
inc
jp
mov
mov
sbb
jge
movsb
imul
bndldx
pop
add
fwait
insb
cmp
stc
fxtract
shlb
cmpsb
hlt
lcall
sbb
rcll
jg
rcr
push
cli
dec
inc
jmp
xchg
popf
cwtl
add
jle
mov
pop
push
or
cmp
clc
sahf
fwait
sub
stos
insl
aam
sbb
ss
push
xchg
mov
xchg
and
into
lahf
lahf
jge
shll
movsb
ficoml
xchg
dec
sbb
mov
mov
lcall
inc
pop
std
out
mov
mov
cs
sub
dec
int3
js
cmp
xor
bound
scas
inc
lret
mov
xchg
dec
mov
inc
int3
adc
mov
pop
bound
call
add
mov
orl
push
je
cltd
dec
ficoms
push
je
push
subb
jnp
dec
cwtl
pop
clc
push
divb
pop
pop
sahf
pop
mov
push
ss
inc
cmpsl
mov
jge
cltd
psrlq
sti
int
push
sub
daa
jle
jl
jecxz
int3
fs
fadds
shrb
daa
in
mov
add
cmp
cmpsb
jne
roll
imul
test
int
lret
add
mov
js
xor
inc
jle
push
cmpsb
sarb
push
pop
enter
fnstcw
outsb
cmpsb
push
ficoms
or
adc
cmp
insb
mov
cmc
lds
aaa
cmpsl
out
shl
sbb
ss
add
adc
mov
int
enter
cmp
rclb
pop
xchg
mov
jmp
cmp
repnz
dec
push
add
pop
int3
jge
js
dec
mov
xor
mov
loopne
cmp
push
lret
mov
push
push
sbbb
sbb
xchg
xchg
sub
cli
pop
lods
ret
and
jne
cmp
popf
loope
jae
repnz
jle
icebp
jnp
push
add
push
int
iret
jno
sarb
xchg
lahf
mov
into
mov
xorb
enter
aas
pushf
jo
adc
cmp
ds
push
cmp
mov
in
js
cmp
jge
jns
pusha
test
cli
and
fs
push
xor
push
popa
lret
lahf
cmp
and
cmpsb
and
xchg
arpl
cld
push
mov
xchg
push
fildl
jns
ss
jmp
add
sti
ds
or
push
ss
out
and
std
gs
dec
movl
pusha
hlt
hlt
sub
sarl
xchg
pusha
cmpsb
add
frstor
fists
jmp
push
push
rcll
sub
mov
mov
outsb
pushf
cmp
aaa
fbld
inc
dec
pop
scas
mov
ja
test
jge
mov
xchg
call
jmp
outsl
repnz
lret
jnp
pushf
adc
mov
in
push
loop
inc
fs
mov
imul
ja
xor
mov
xchg
clc
adc
orb
xchg
xorb
push
xor
bound
clc
jbe
pop
in
ret
adcl
mov
bnd
shlb
push
cmp
or
mov
or
mov
push
pop
jp
mov
je
enter
sbb
enter
in
mov
or
mov
aad
sub
jle
and
sub
out
std
dec
adc
and
mov
mov
dec
adc
mov
inc
or
xor
lret
cmpps
dec
xchg
push
jg
enter
in
js
loopne
adc
stos
adc
xchg
and
cli
dec
faddp
mov
push
repnz
jns
inc
cmpsl
ja
pop
in
shr
outsl
inc
out
mov
mov
mov
imul
popa
mov
pop
xchg
cld
pushf
in
lcall
push
das
adc
adc
rorl
or
dec
inc
loope
shrl
add
pop
lret
and
int3
lret
test
fucom
je
aas
inc
push
sbb
adcl
adc
push
fnsave
xor
and
sbb
push
mov
outsl
xchg
mov
add
ret
mov
andl
pop
outsb
imul
cmp
or
jecxz
mov
sbb
jl
icebp
scas
popa
sbb
pop
jecxz
pusha
sub
pop
aaa
sub
loop
mov
add
jb
int
push
mov
rcrb
jmp
inc
dec
xchg
and
cli
and
and
mov
clc
sub
push
xor
test
jno
int
and
pop
pop
call
les
scas
call
dec
movsl
aam
jg
mov
push
stc
jae
fcomps
in
push
mov
call
imul
out
and
jb
jl
mov
rcrl
dec
cmpsb
aam
test
mov
flds
mov
pusha
cmp
mov
imull
hlt
add
mov
cmpsb
cmp
repnz
mov
out
push
fisubrl
stos
lahf
popa
aas
sbb
popa
mov
jns
mov
mov
clc
in
pop
pop
jae
insl
repz
dec
mov
xor
mov
cld
loopne
inc
jecxz
les
push
rolb
jmp
imul
stos
popf
lahf
imul
mov
mov
ret
jns
cli
and
icebp
xor
xor
ret
jne
movb
jmp
push
sub
div
das
sbb
jp
jbe
imul
or
jae
xchg
sahf
jmp
jnp
cmp
lds
jge
stos
loop
aad
fistps
pop
data16
sub
insl
nop
hlt
pusha
cmp
xorl
sbb
mov
cmp
pop
jns
add
cltd
arpl
rolb
repnz
jmp
lret
adcb
pop
sub
fidivrl
stos
insb
stc
push
mov
mov
pop
push
mov
push
in
push
inc
in
clc
in
mov
ja
mov
lods
out
mov
sbb
cmp
int
xor
pusha
mov
aam
and
sub
int3
dec
in
pop
enter
cmp
out
sbb
inc
loopne
inc
sbb
sbb
out
inc
inc
jp
std
and
fisubs
sbb
cltd
push
mov
fwait
xor
stos
sub
dec
adc
xchg
fmuls
insb
icebp
outsl
mov
fs
dec
arpl
subb
je
insb
dec
bound
mov
mov
add
add
xchg
ljmp
in
cmp
pop
jmp
jb
adcl
scas
adc
add
pop
sbb
mov
jns
ljmp
pop
scas
xor
push
jnp
and
fdivrs
test
pop
andb
inc
mov
outsb
hlt
jne
jne
cld
fcom
popf
js
cld
int
jb
in
imul
and
adc
jo
fst
scas
aam
mov
stos
into
pop
xchg
push
fs
jmp
mov
pusha
or
decl
fisubs
jb
outsl
inc
in
mov
rolb
push
inc
jno
std
and
divb
pop
repz
mov
mov
lret
dec
or
pop
xchg
mov
cmp
pusha
cli
out
pop
adc
inc
and
sbb
adc
lret
and
shll
adc
sub
inc
sti
mov
fwait
xchg
faddl
stos
inc
mov
aam
sub
orl
mov
mov
jp
xchg
pop
sub
inc
popf
enter
push
push
pop
jae
dec
aam
cwtl
jnp
push
xor
arpl
mov
adc
adc
out
mov
test
inc
jp
mov
adc
jbe
dec
je
ja
or
sub
mov
jno
lcall
pop
out
mov
mov
into
push
cld
fsub
and
or
test
lock
or
xor
mov
notb
fwait
dec
fstpt
xor
mov
cmpb
add
orl
mov
add
test
jnp
clc
cltd
jno
in
xchg
rcr
jne
int
xor
mov
mov
lods
add
add
mov
add
mov
jecxz
notw
mov
test
and
push
jno
outsl
dec
jmp
jg
pop
into
or
mov
add
push
arpl
xlat
adc
mov
sbb
ret
fsub
icebp
pavgb
in
lcall
lahf
push
mov
cmp
mov
clc
data16
cli
shrb
bnd
push
pop
inc
mov
sarb
jns
jecxz
mov
lret
jnp
xchg
lock
mov
lea
fisttpl
jle
jmp
push
sbb
pop
flds
sub
sub
in
cmp
sub
sbb
xor
je
sti
ret
xlat
push
mov
mov
sbb
push
xor
movsb
mov
imul
xchg
arpl
xchg
cli
or
pop
stos
mov
inc
xchg
loope
hlt
adc
lods
fisubl
mov
test
aam
jmp
xchg
nop
xor
lcall
xchg
cmpb
dec
xor
fcomip
fnstcw
ficoml
test
into
or
orb
and
shl
pop
pop
imul
rorb
fcompl
insb
cli
lret
cmp
lds
pop
push
in
shr
std
mov
push
gs
loope
push
notb
outsl
inc
sbb
cmpsl
jmp
adc
sub
jb
or
sbb
cltd
popf
sbb
sbb
xchg
sbb
fnstcw
add
mov
sarl
sub
cwtl
sbb
cmpsl
cltd
int3
inc
cmpsl
in
sahf
pop
subb
mov
push
insl
push
mov
lahf
xchg
mov
fsubrl
sahf
xlat
add
jp
test
xor
jl
push
mov
lahf
scas
lods
loop
sub
pusha
add
lods
jge
sub
pop
jnp
inc
cwtl
imul
adc
aas
cs
sub
cli
push
inc
xlat
lds
mov
mov
iret
xchg
sbb
push
sub
mov
mov
cmp
andl
cmp
lea
es
sbbl
or
and
insb
cli
std
call
mov
outsb
stos
test
fisttpl
xlat
sbb
and
mov
jmp
lret
dec
pop
cld
dec
out
movsl
arpl
mov
xlat
scas
jl
and
jno
push
xchg
jnp
cs
pusha
sahf
imull
clc
add
shll
xchg
pop
pop
inc
pop
movsl
aad
push
ret
sbb
or
xor
fidivs
and
mov
xchg
or
pusha
mov
popa
push
cmp
in
in
dec
stc
mov
and
sub
cmc
ss
aas
rcll
pop
push
testl
add
pop
repz
out
push
rep
test
sbb
jmp
cmp
cmc
jmp
repz
imul
push
sbb
stos
adc
popf
dec
pop
aas
dec
das
mov
cmp
ss
push
mov
cmp
dec
test
push
sbb
push
or
pusha
test
pushl
xor
imul
cmp
or
aad
cmpsl
dec
jae,pt
repnz
ds
shll
out
in
mov
orl
add
daa
jns
adc
fldcw
rcll
dec
sbb
or
mov
shlb
jmp
push
aaa
aaa
gs
lcall
sub
mov
pop
add
rcr
mov
adc
mov
js
and
jns
pop
cmc
leave
push
xchg
jnp
xchg
ljmp
pop
mov
cld
or
nop
jmp
inc
ret
stos
xchg
xchg
add
mov
or
pop
cmp
cmp
sub
push
push
outsl
push
rol
sbb
repz
add
fcom
fimull
ficomps
imulb
outsb
lret
jmp
out
lock
jecxz
repz
push
fnstenv
xchg
insb
ds
inc
arpl
cmp
cmp
popf
inc
jmp
pop
out
testl
add
scas
push
shrl
mov
dec
adc
rcl
leave
scas
mov
pop
cmp
push
pop
dec
stos
inc
and
cmp
and
dec
adc
xchg
call
leave
fucomp
sub
fbld
push
pop
cmp
sbb
push
repz
xor
sbb
jecxz
and
sbb
adc
jo
repnz
and
add
and
into
dec
int3
loopne
popf
loope
xor
mov
cmp
leave
dec
xchg
jo
cmp
fdivs
mov
dec
ja
jbe
loope
cli
mov
and
repz
das
push
bound
imul
pop
jne
mov
nop
mov
xchg
push
sub
xchg
adc
adc
mov
jb
sbb
or
push
mov
cli
jmp
add
mov
push
mov
lea
push
vpshaw
sbb
pushf
idivb
inc
sbb
aad
lcall
js
add
dec
popa
jne
mov
pop
das
pop
and
pop
push
lock
insl
push
lcall
xor
lea
pop
mov
in
pushl
lret
loope
out
jne
xchg
adc
mov
push
fcmovnu
jg
and
arpl
in
sub
int3
push
adc
in
xchg
outsl
sbb
std
inc
sbb
test
adc
lcall
push
sub
pop
icebp
in
sbb
jns
lock
enter
cltd
fadd
out
outsb
fidivl
xor
lods
test
jmp
les
stos
sti
cwtl
lds
and
fimull
fcoms
shll
inc
lret
sub
stos
out
mov
movsb
movsb
jo
popa
repnz
fwait
aaa
jp
enter
movsb
sub
fwait
mov
inc
test
cli
iret
orl
dec
xchg
aam
andl
mov
lock
dec
pop
sub
mov
lds
sbbl
dec
cmpsb
rcr
insl
cmp
jge
pop
out
test
call
cltd
mov
push
push
xchg
mov
lcall
adc
cmp
xchg
or
cmp
outsl
andl
stos
mov
aam
cmp
cmpl
hlt
inc
out
imul
xchg
clc
cmp
ret
jne
loop
inc
test
jno
test
fldcw
in
push
aad
fists
fwait
sbb
inc
mov
outsb
shl
cmp
jae
scas
cmp
mov
pop
pop
jmp
hlt
push
jb
sub
push
movsb
stos
or
xor
push
sub
pusha
add
rcrl
into
push
fsubrl
mov
int
mov
dec
xchg
cwtl
and
xchg
frstor
jb
jb
inc
fbld
mov
jecxz
stos
adc
mov
sub
or
lock
xchg
sub
jecxz
bound
mov
pushf
je
xlat
in
pop
jbe
mov
test
lods
rorb
add
das
push
adc
push
xchg
push
jle
cmp
cmp
mov
mov
enter
dec
and
pop
sbb
lock
adcb
xchg
lret
insb
add
fnstcw
aaa
inc
popf
jne
dec
and
bound
sbb
shl
add
aas
rcrl
pop
push
cmpl
aas
stos
daa
ss
lea
inc
pop
jg
dec
mov
popf
mov
sub
cld
lret
loopne
adc
mov
or
push
test
loopne
imul
jns
cmp
mov
jae
test
and
jge
inc
outsl
cltd
xchg
mov
xor
mov
shll
jmp
cli
aad
adcb
mov
repnz
not
xor
lcall
xchg
jb
fwait
adc
popa
mov
sbb
mov
loope
xor
fs
and
adc
pop
and
mov
inc
lret
bound
push
and
lock
adc
cli
and
jl
inc
jg
sub
les
lods
dec
pop
pusha
imulb
push
mov
outsl
xlat
push
jae
test
ljmp
mov
es
or
sub
cwtl
jae
adc
sub
push
jl
adc
fxam
int3
inc
shrb
mov
mov
aam
mov
test
xchg
dec
mov
mov
jge
jmp
gs
scas
cmp
out
imul
jno
lea
adc
mov
pushf
aam
pop
and
and
pop
mov
cmpsb
mov
popf
mov
xor
dec
mov
pop
xchg
popf
fsts
mov
jmp
movsb
lcall
inc
fstpt
lods
ficoml
mov
mov
jb
mov
sub
repnz
xchg
lret
dec
inc
cmpsl
push
nop
inc
movsl
test
and
sub
jne
inc
pop
fmulp
fsubl
inc
andl
popf
mov
ja
sti
dec
cmc
adc
push
mov
dec
or
fsubr
mov
xor
into
test
sarl
cmc
testb
hlt
pop
int3
shrl
jp
notb
add
jns
repz
adc
jb
imul
in
mov
xchg
xor
inc
or
inc
shl
lea
ljmp
xchg
outsb
ja
clc
sbbb
sbb
inc
mov
dec
xchg
adc
fs
push
aad
andl
inc
arpl
cli
cli
les
mov
add
inc
and
mov
xor
add
jp
psubusw
sbb
adc
loope
xor
add
pop
daa
xlat
nop
aaa
pop
mov
into
aad
sahf
jae
ds
pop
into
jmp
inc
push
lock
outsb
cmpsb
cmp
sbb
jecxz
mov
repz
push
roll
enter
jp
xor
add
jecxz
cld
sbb
aas
loope
inc
push
cmp
sbb
ds
fxch
pop
and
scas
aad
inc
xlat
out
jl
xor
imul
loop
movsl
sbb
pop
cmp
loopne
les
jecxz
pop
add
and
int3
hlt
inc
cmp
ret
cltd
decl
mov
addr16
push
mov
xor
rcrb
or
movd
movsl
inc
mov
andb
outsl
adc
adc
push
ljmp
mov
gs
dec
insb
and
or
sbb
das
or
sbb
scas
shlb
jnp
xchg
vmaxss
pop
jne
ds
mov
jmp
push
rol
pop
outsl
out
lock
rcrb
dec
pop
and
fsubl
pop
andb
jae
jp
sbb
push
pop
push
idivb
fld
les
dec
inc
push
fwait
lock
cmp
push
or
das
int3
lahf
sbb
mov
icebp
and
push
lahf
pop
das
pop
test
repz
add
mov
xor
mov
inc
cli
out
mov
sub
and
jo
pop
add
outsb
xor
pop
kxorb
pslld
fnsave
cli
fs
mov
mov
imul
icebp
shl
shl
lret
out
repnz
adc
mov
jno
sbb
xor
jno
lock
push
lcall
sbb
xlat
sub
mov
adc
in
mov
cmc
pushf
cld
jl
mov
movsb
pushf
int3
clc
fisubrs
icebp
inc
sbb
inc
hlt
insl
lret
cmp
mov
xchg
or
cltd
jl
fwait
pusha
arpl
bound
repnz
repz
push
xchg
pop
fisubrl
pop
mov
inc
dec
out
inc
push
in
mov
rorb
jge
pop
and
cli
movsl
jecxz
das
jo
insb
vprotb
leave
insb
xor
es
push
es
ljmp
add
data16
loopne
add
sahf
loop
or
roll
movsb
push
test
sti
fs
popa
pop
fstl
and
out
push
mov
mov
xor
insb
push
add
xchg
mov
repz
addb
jno
das
pop
pop
outsl
sbb
mov
repz
es
sub
adcl
pop
push
jbe
lods
push
xchg
in
inc
or
ror
insl
xchg
jne
xor
pop
jecxz
sti
mov
adc
mov
inc
addr16
cmp
cwtl
dec
xchg
push
and
loope
idivl
inc
dec
cmpsl
xchg
pop
das
sub
push
imul
dec
aaa
pop
call
pop
xchg
dec
mov
inc
mov
or
sub
lock
iret
jle
es
jno
test
cli
jo
fldenv
mov
inc
fiadds
insb
das
ret
adc
pop
ljmp
cmp
add
sub
fbstp
mov
lret
cmpsl
js
subl
xchg
loop
xorl
push
fs
fwait
and
iret
mov
jno
mov
adc
out
cmpl
push
out
mov
xor
cmp
dec
jmp
mov
and
je
sahf
xchg
mov
fidivs
out
outsb
sbb
loope
test
pop
ficoml
aad
in
mov
clc
ror
lahf
dec
sub
and
loop
pop
dec
mov
mov
popf
xor
outsb
dec
dec
js
mov
mov
add
mov
push
jp
maxps
scas
mov
sbb
or
gs
dec
xadd
jg
std
jmp
push
pop
pop
cmp
insl
hlt
hlt
dec
adc
sbb
lahf
sbb
add
cmpsl
lods
fnsave
leave
xchg
data16
imul
sbb
bound
xchg
push
adc
add
and
xor
mov
repnz
mov
in
sar
push
push
jbe
mov
inc
loopne
jg
repz
cltd
mov
leave
movsl
into
je
das
add
stc
addr16
push
add
cmp
jbe
jle
jo
mov
jne
mov
jno
fldenv
scas
andl
jno
mov
mov
push
push
inc
loop
sub
mov
fwait
into
popf
xor
xor
jne
hlt
cmp
push
aaa
fwait
andl
sti
and
movsb
adc
push
fcom
nop
mov
xlat
test
das
icebp
hlt
cmp
out
ret
lret
xchg
inc
out
pop
je
pop
int3
xchg
mov
xchg
pop
xor
rcrl
inc
pop
mov
jg
cmp
jno
out
push
xchg
in
mov
fidivl
cmp
jae
iret
add
cmp
xlat
inc
dec
jne
jcxz
push
adc
sub
mov
jmp
inc
push
gs
das
in
jecxz
push
loopne
lds
mov
dec
addr16
cmp
out
outsb
cltd
aas
sub
movsb
inc
jo
mov
cmp
pop
inc
les
xchg
in
sub
addr16
stos
cmp
mov
sahf
mov
dec
subb
sbb
pop
bound
gs
cli
lret
sub
ret
mov
mov
cmp
dec
fs
push
or
add
das
cmp
insb
xchg
adc
test
stos
rcrb
lock
dec
sbb
add
cmp
jns
mov
das
nop
mov
xchg
and
repnz
inc
fwait
ret
jmp
mov
mov
push
out
cltd
push
sub
ss
fiadds
repz
cld
les
sbb
jle
in
lock
adc
mov
in
mov
or
cmp
cli
push
popa
dec
into
aam
xor
lock
push
xchg
jnp
mov
fwait
push
xor
ret
pop
gs
lretw
cmp
pop
cmp
icebp
les
into
leave
xchg
cmp
ds
stos
jmp
cmp
nop
imull
mov
addr16
pop
sbb
int
mov
fs
mov
push
test
bound
cmp
es
scas
fidivs
notl
aas
xchg
repnz
movsb
mov
xchg
cmpsb
mov
cmpsl
sarb
cmpsl
movsb
movsb
jns
xchg
mov
popf
dec
mov
xchg
movsb
adc
pop
push
sub
mov
std
adc
lds
mov
pusha
cmp
fnstsw
xchg
jle
outsb
push
in
jns
add
jmp
inc
sbb
cld
mov
inc
pop
bound
pop
imul
cwtl
dec
add
pop
fadd
or
dec
pop
movsl
insb
push
inc
and
xchg
aas
jecxz
add
jae
and
mov
inc
jmp
aam
testl
insl
dec
jp
xor
pop
push
repz
cmp
sub
aaa
pop
mov
pop
fcmovnb
aad
subb
lcall
mov
lds
fnstenv
ds
or
jmp
inc
jge
cmp
jbe
addr16
jge
adc
cmp
xchg
iret
test
lret
pop
mov
add
inc
idivb
jb
xchg
xor
mov
or
push
outsl
lods
sbb
xor
jbe
out
and
jo
ss
push
dec
lods
arpl
sbb
dec
adc
sahf
pop
sahf
lfs
int
push
mov
loopne,pt
in
jb
or
ret
pop
stos
or
pop
xchg
idivb
out
in
ret
pop
mov
cmp
xor
xlat
jb
jge
lret
pop
add
lret
mov
cmp
sub
psubsw
push
cld
mov
jnp
cmc
gs
fwait
jne
sarl
jmp
inc
pop
cmp
add
pop
aas
ljmp
inc
push
xchg
xor
clc
jno
sub
fs
rorb
xchg
xlat
adc
pushf
jge
cmp
loopne
inc
dec
loope
das
xchg
cs
push
ret
mov
jae
out
adc
sub
inc
push
out
nop
and
add
jmp
pushf
push
imul
ror
jo
or
and
outsl
pop
orw
movsl
or
stos
mov
cmp
mov
push
mov
fisubrl
fs
ror
jp
sub
in
jbe
xor
fimuls
sbb
shrb
repz
mov
or
pop
cli
and
xchg
cmc
popa
xor
dec
xchg
jge
addl
js
sar
jge
ret
loope
leave
nop
fstpl
jbe
stos
call
xlat
orb
mov
cmp
adc
jno
xchg
cmp
dec
cmc
dec
cltd
cli
push
sub
pushf
push
shrl
aas
mov
lret
xchg
push
mov
lret
sub
pop
mov
sub
ret
pop
imul
repnz
loope
icebp
cmp
or
adcl
pop
fiadds
sti
push
jae
or
inc
pop
pop
mov
mov
push
push
ret
clc
insl
mov
inc
inc
cmpsb
lds
test
dec
loopne
loop
ficomps
xchg
jmp
int3
pop
inc
mov
das
incl
subl
hlt
das
sbb
cld
mov
cltd
pop
std
stos
clc
xlat
jmp
push
inc
movsb
sub
movl
adc
jb
cmpsl
das
sbb
rcll
jmp
add
fwait
dec
sub
dec
inc
push
sahf
cmpsl
sbb
xor
xchg
and
sbb
mov
nop
in
in
les
adc
dec
movsb
pop
adc
lret
pop
cmp
loop
js
lret
and
jl
aas
cs
push
xor
je
push
dec
push
lcall
xor
sub
ror
xlat
pop
fidivl
iret
scas
call
sub
outsl
cmp
aam
dec
arpl
dec
pop
push
mov
mov
ret
pop
mov
fisubrs
fimuls
sbb
flds
clc
pop
jb
mov
adc
pop
push
loop
jl
sbb
lock
std
pop
cmp
jge
fldenv
arpl
std
inc
fucomip
bound
test
cli
jg
mov
aas
inc
or
pop
jbe
cmp
push
movsl
movl
in
xchg
scas
out
lock
aas
or
cmp
gs
pop
cmp
stc
adc
jnp
mov
rcl
adc
outsl
pop
push
mov
mov
mov
cmp
scas
add
stos
imul
in
test
daa
call
jp
inc
dec
cmp
aam
jp
push
jmp
dec
push
pop
mov
sub
lret
ret
shl
jnp
mov
shrl
sbb
cmp
lahf
pushf
ja
mov
fs
stos
cmpsl
jno
xor
test
icebp
xor
cmpl
jle
jge
outsl
xchg
jl
push
inc
inc
mov
and
outsl
adc
mov
lods
push
bound
int
xlat
decl
ljmp
insl
cltd
xchg
xor
mov
xchg
push
fcompl
test
dec
add
bnd
andb
loope
in
imul
outsl
arpl
sub
bound
rcr
push
pop
das
sub
out
aaa
xor
aas
orb
and
inc
addl
sbb
inc
pop
mov
or
jmp
adc
repnz
xchg
lret
out
lret
aam
push
in
dec
dec
pop
sbb
mov
pop
lds
sub
sub
pop
mov
cmp
fnsave
xor
leave
loope
sar
mov
cmpsl
cmp
inc
adc
inc
lcall
sub
sub
mov
movsb
cli
pop
scas
in
loopne
xchg
pop
iret
inc
mov
lahf
lahf
sub
xchg
pusha
icebp
mov
mov
sar
roll
add
push
loope
fcoml
shl
int3
mov
inc
push
outsl
dec
test
pop
into
dec
into
dec
lret
lahf
adc
cmp
cli
mov
mov
into
jl
inc
xchg
leave
in
test
jmp
mov
cmp
or
push
mov
jbe
pop
xchg
imul
xchg
imul
jge
xor
push
sub
push
mov
in
mov
mov
and
xchg
cmp
jbe
sbb
sub
pop
outsb
pop
icebp
test
or
nop
cmp
xchg
ror
cmp
mov
sbb
mov
ljmp
mov
lfs
jle
sub
lods
sub
jns
lea
aad
push
ret
mov
aaa
mov
arpl
mov
imul
and
dec
adc
pop
lock
pop
mov
push
lods
mov
mov
dec
subb
mov
in
and
lret
ficoml
push
movsb
andl
cld
inc
es
xor
add
lcall
sbb
gs
sub
icebp
ret
insl
pop
sbb
test
das
js
dec
mov
adc
jno
fs
into
mov
outsb
xchg
fcomps
aas
inc
sub
in
mov
xchg
push
jmp
add
cmp
push
fimuls
or
or
aaa
inc
dec
push
popa
adc
icebp
sub
shrl
in
jae
mulb
mov
add
shrb
jns
imul
push
out
or
ja
clc
ret
mov
or
aam
xlat
in
sbb
sub
fcomp
dec
push
add
and
mov
repz
mov
xchg
sti
mov
cmp
lret
xchg
popa
jg
jae
fwait
xor
and
out
faddl
sbb
out
in
jbe
jae
jnp
ret
test
stos
les
int
xchg
push
mov
jecxz
adc
loope
std
inc
ficoms
push
pop
xchg
adc
xlat
arpl
push
pop
shrb
fs
dec
mov
inc
push
movsl
dec
jne
jge
shufps
scas
lahf
icebp
ret
dec
je
cmp
push
aad
mov
jno
mov
dec
addr16
sbb
push
mov
cmpsl
cmp
push
cmp
pop
xor
rcll
nop
mov
add
sahf
in
pop
pop
loope
scas
mov
push
pop
sbb
mov
sti
jnp
mov
es
outsl
cltd
jo
or
cmc
sub
fwait
sbb
mov
mov
adc
xor
jecxz
pop
int3
xor
shlb
xor
sub
lea
xor
test
jne
pop
cs
fucomip
pop
cmp
push
popf
mov
cmp
and
rcrb
mov
pushf
notb
lret
fstp
shll
inc
xor
mov
sub
cmpsl
jbe
pusha
sub
xchg
repz
cmpsl
shll
xchg
das
jne
mov
mov
shlb
addb
ds
sti
mov
inc
aad
sahf
mov
lret
call
nop
ja
pop
sub
inc
xchg
outsl
adc
jne
jp
mov
out
imul
adc
in
movsl
push
fwait
or
cmp
add
test
je
pop
fnstsw
mov
mov
push
xchg
lock
sahf
call
sbb
push
loop
cld
mov
jp
cmp
test
cmpsl
xor
dec
jb
push
xchg
aam
nop
cmp
mov
das
je
fists
out
int
out
push
mov
fwait
or
insl
insl
ret
sbb
inc
jl
pop
dec
and
dec
adc
sarl
jp
fildll
jg
push
and
sub
pop
inc
mov
insb
pop
inc
dec
or
das
loop
pop
lret
movl
mov
out
repz
xchg
pop
cmc
adc
push
xor
add
pop
and
jo
push
push
in
mov
sub
jge
call
mov
pop
sahf
sub
and
arpl
xchg
dec
push
aaa
enter
mov
popf
sub
sbb
les
push
adcl
and
mov
mov
cmp
mov
push
mov
std
push
jb
fisubs
outsb
dec
add
leave
dec
mov
xchg
cmp
aad
cli
addr16
into
xchg
fbld
xor
cs
cwtl
jnp
and
aaa
jl
sbb
ficomps
jae
repz
bnd
jl
pop
shrb
push
fsubr
xlat
sti
push
adc
loope
repz
fcoml
lahf
arpl
out
jns
xchg
cltd
fidivl
adc
sub
leave
lods
loopne
push
pop
add
popa
in
sub
out
out
out
mov
cld
in
lret
pop
or
pop
xor
xor
push
lcall
mov
rcr
sbb
sbb
insl
push
orb
sarl
insl
aam
pop
dec
bound
xor
cwtl
mov
dec
push
adc
outsl
test
dec
ret
cmp
cmp
mov
repz
sbb
xor
fnstsw
cmpsl
fistpll
push
sbb
pop
sub
rcl
jo
sti
add
aaa
dec
dec
roll
jecxz
std
jae
pushl
out
jns
lcall
cmpl
andb
mov
out
aaa
cli
aam
testl
add
inc
repnz
gs
scas
nop
nop
lahf
ret
cmpsl
jns
aaa
xchg
test
add
mov
or
inc
xchg
out
popf
enter
push
mov
pop
addr16
es
jbe
jmp
arpl
xchg
dec
push
lret
adc
loopne
cmp
cmp
and
xchg
mov
push
and
and
icebp
add
pop
lds
enter
scas
subb
sar
inc
jge
add
test
setns
add
nop
outsl
xor
int3
mov
jp
cmpsl
das
aad
sbb
dec
and
rcrl
sbb
jle
cmc
aam
or
popf
test
xchg
mov
xchg
jmp
sub
cmp
mov
dec
arpl
shll
call
mov
arpl
jg,pn
subb
lret
cli
sub
adc
xchg
jmp
lods
cwtl
xchg
and
pop
lcall
xchg
lds
sti
fdivrl
scas
sahf
push
mov
cld
stc
bt
push
or
lds
mov
lret
bound
aad
popa
movsb
ficomps
mov
aaa
dec
jb
cmp
inc
inc
mov
inc
mov
push
push
sbb
fdivrl
and
rcrl
sub
inc
xor
rcr
mov
out
hlt
and
movsl
xchg
ljmp
popf
mov
and
xchg
ret
je
popa
imul
cmp
push
insl
mul
stos
pop
sahf
push
je
sahf
int
inc
sahf
test
lahf
scas
push
pop
sar
lret
ret
out
ss
shr
subb
lds
je
adc
mov
cmp
mov
mov
sub
aas
push
mov
scas
jns
push
push
out
movsl
xchg
les
clc
pop
imul
lock
add
sahf
add
jle
test
js
das
inc
add
cld
lock
enter
leave
sbb
or
jmp
popf
and
imul
push
lcall
jg
pop
outsb
iret
cltd
rcrl
int
mov
sarb
or
xchg
inc
xor
sti
daa
mov
and
pop
dec
ss
cmp
xor
sbb
outsl
mov
int
les
push
dec
mov
sbb
jno
mov
pop
ljmp
dec
mov
aad
cmc
loop
iret
in
shr
das
dec
xchg
loop
fidivs
xor
sub
stos
out
ljmp
mov
inc
xchg
scas
fstpt
stos
sbbl
loopne
sti
or
jl
xchg
fists
push
mov
xchg
aas
pusha
mov
stc
lcall
loope
add
dec
cld
in
sbb
push
lods
mov
aas
adc
out
mov
test
pusha
xor
and
lods
scas
and
insb
inc
popf
stos
je
push
js
cli
sub
cwtl
icebp
add
pusha
sub
pop
cmp
push
fistpl
or
mov
rcrl
mov
sbb
mov
xor
pushf
mov
lea
mov
and
cmp
stc
jns
mov
adc
loop
psubq
mov
sbb
xchg
push
push
cmp
popl
dec
push
dec
outsb
mov
jmp
int
outsl
arpl
xchg
notl
xor
pop
push
mov
gs
fisubrs
and
imul
fisubrl
imul
jmp
push
jle
lret
sbb
push
fcoml
xor
nop
insl
stos
jmp
xor
scas
pushf
in
out
outsw
stos
xlat
push
daa
lea
aaa
jo
push
inc
testl
push
mov
jno
imul
lret
lahf
iret
aad
ljmp
jmp
mov
popa
cld
inc
adc
dec
xor
inc
je
ja
add
jg
sbb
pop
pop
cld
push
scas
aaa
fildl
fwait
or
mov
out
sbb
mov
ss
lret
mov
inc
xchg
lret
mov
dec
fiadds
ret
sarl
test
mov
inc
fdiv
cmp
add
cmp
sbb
push
int
arpl
aaa
push
pop
pusha
dec
scas
mov
aas
and
sub
xchg
or
mov
call
mov
cmp
push
ljmp
or
dec
out
mov
orl
shrb
jnp
and
push
cmpsl
in
jg
test
mov
pop
cmp
add
sub
xchg
mov
jno
pop
shll
shlb
xlat
xor
jnp
subb
clc
sbb
inc
pop
test
mov
push
addr16
pop
movsb
and
les
jecxz
cmpxchg
mov
dec
fisubrs
fwait
enter
xchg
and
cmpsb
lahf
out
sarb
or
outsl
cltd
jae
mov
fiaddl
sub
inc
cmp
lret
cmp
insb
bts
and
ds
in
pushf
popf
je
push
rclw
sub
es
cltd
pop
cmp
adcb
pop
push
lcall
mov
inc
sbb
sbb
lcall
xor
jge
aaa
sbb
or
push
jge
pop
push
fdiv
or
int3
adc
fdivs
stos
mov
lock
mov
xlat
addr16
pop
fistpl
jmp
or
popf
mov
shll
jmp
das
xchg
nop
pop
push
or
popa
cmp
out
add
js
fbld
test
in
mov
repnz
jg
je
and
loope
fimull
mov
or
mov
xchg
sub
mov
das
cmp
xchg
shr
cmp
roll
pop
fsubs
push
outsb
jle
stos
repz
rclb
jl
shrb
cmpsb
fdiv
pop
je
pop
inc
mov
cmpsl
ror
mov
pusha
jne
in
sbb
xor
fisttpl
pop
ret
xorl
add
and
adc
jns
push
dec
lods
lret
pop
subb
jle
cmp
cmp
fnsave
stc
pop
fldenv
lea
adc
testb
pop
sub
out
sahf
mov
jmp
div
lret
sbb
std
imul
add
lods
pop
push
add
mov
cltd
hlt
sbb
outsb
into
inc
stos
inc
imul
mov
add
push
icebp
jmp
xorb
lods
js
bound
jecxz
movsb
enter
lret
hlt
pop
inc
outsl
adc
dec
xor
fnstenv
cmp
mov
and
imul
mov
push
lods
mov
pop
bound
xchg
stos
lods
fildl
push
jle
and
js
lock
xor
push
push
sbb
hlt
insb
repz
sahf
mov
and
mov
push
xor
sbb
sub
mov
popf
gs
imul
shlb
dec
in
or
lds
xor
rcrl
ficoms
push
into
push
cmpsb
pop
adc
rcrl
dec
mov
cmc
mov
call
addr16
jns
xchg
and
jb
pop
fsubs
addr16
mov
ret
iret
insl
test
scas
pop
jne
xchg
mov
jae
fldenv
xchg
sbb
and
out
jno
push
fwait
dec
jmp
cmp
xlat
add
adc
jecxz
insb
out
and
sbb
xor
lret
add
aas
imull
out
add
sbb
mov
ficompl
pop
repz
fisubrl
mov
xchg
lahf
je
cltd
add
xor
ret
rclb
call
cmp
lds
or
mov
sbb
shll
popaw
pop
into
sbb
adc
aam
out
notl
repnz
bound
push
js
mov
dec
data16
and
push
add
cmp
fadds
arpl
int3
pop
rcr
pop
xlat
jne
aaa
mov
sbb
pop
cmp
xor
inc
lret
int
insb
insb
push
lahf
cmpsb
cmp
test
dec
dec
adc
inc
addr16
dec
xchg
roll
fwait
loop
into
pop
sbb
rorl
pop
inc
adc
mov
test
shrl
push
mov
fidivrs
shr
mov
popf
xchg
dec
imulb
out
xor
push
addr16
in
push
cltd
aaa
xlat
pop
and
mov
fsubrl
fsts
pusha
add
repnz
pop
sti
mov
xchg
pop
in
out
mov
aas
pop
ret
mov
dec
popa
or
popa
nop
cmpsb
fs
int3
and
mov
scas
mov
pop
lret
mov
push
add
mov
inc
xlat
out
lods
aad
scas
mov
xor
popf
scas
xchg
arpl
shl
lods
jns
out
nop
sbbb
sbb
insl
outsl
or
test
pusha
inc
ljmp
push
stos
jnp
mov
stos
shll
int
add
mov
daa
dec
lock
lods
inc
cs
insb
movsb
ss
stc
fcmovnu
jno
add
fcoms
inc
mov
test
daa
popa
adc
inc
push
repz
pop
inc
pop
int3
push
pop
inc
add
xchg
or
das
xchg
loope
ret
jp
jecxz
out
lea
xlat
dec
cmpsb
mov
movl
inc
into
inc
jp
adc
addb
das
push
ret
dec
inc
adc
shlb
pusha
mov
fs
jno
mov
cli
jae
mov
mov
int
mov
add
shlb
in
mov
xor
fcom
filds
fistpll
and
mov
addr16
mov
popa
lea
pop
lods
mov
cld
cmpsl
inc
dec
test
clc
jae
shrl
sbb
aaa
repnz
push
ret
scas
pop
out
jl
cld
cmp
push
pop
insl
sub
xchg
cmp
sub
flds
lret
scas
cmpsl
sbb
inc
stos
inc
sub
sbbb
sub
insb
inc
mov
test
sub
mov
fsts
xchg
ljmp
lcall
jnp
scas
mov
es
loop
ret
daa
add
out
sbb
adc
clc
dec
mov
out
sbbb
jns
loopne
xchg
test
xchg
and
mov
lods
sbb
iret
push
movsb
in
fcomp
xlat
enter
pop
filds
xchg
loop
clc
and
or
jae
test
unpcklps
mov
imul
lcall
mov
mov
outsb
out
mov
cmc
mov
in
shl
out
cmpsl
jae
mov
mov
sahf
das
inc
cmp
mov
sub
and
bound
adc
cwtl
loope
adc
adc
adc
pop
and
sarl
mov
jecxz
sbb
or
cli
dec
out
cmp
mov
in
jge
fdivs
and
xchg
pop
cmc
mov
pop
mov
imull
adc
aad
adc
sbb
mov
inc
dec
jle
ds
mov
scas
sub
fcompl
cmp
pop
movsb
or
jbe
push
nop
stos
leave
cmpsl
jg
enter
das
pop
je
mov
loopne
push
jg
mov
aaa
arpl
iret
or
outsb
push
out
aas
pop
scas
mov
fcompl
jecxz
cmp
push
cmc
and
ja
fistpll
pop
cmc
js
je
int3
daa
pop
push
xchg
rcrb
mov
cmpsl
xor
sbb
stos
inc
push
adc
pushf
add
push
pop
and
gs
pop
sbb
insl
ret
ror
or
add
xchg
fsubl
xor
fsubs
lods
push
dec
sti
push
xchg
popf
mov
lds
push
mov
push
int
loope
cmc
fimull
add
xor
xor
shlb
insb
pop
mov
inc
dec
scas
js
pop
lods
xor
imul
mov
add
jge
mov
lods
xor
and
fldl
xor
outsl
xchg
cmc
sbb
lock
pop
test
popf
xlat
xchg
jo
mov
mov
stos
in
push
mov
aad
mov
xor
and
jecxz
test
mov
mov
sbb
push
add
jecxz
mov
lahf
cmp
dec
jno
inc
loope
dec
mov
pushf
fstpl
fwait
ds
pop
test
rol
daa
scas
push
mov
add
addr16
pop
push
pop
ror
idiv
mov
mov
and
es
fidivl
in
mov
jmp
ret
out
sti
cmp
dec
rolb
lret
fs
hlt
sub
inc
scas
and
test
and
or
fdivr
cwtl
call
sbb
loop
ja
jo
mov
mov
mov
lods
mov
stos
xchg
mov
sub
pop
push
jns
pminub
add
sbb
or
dec
lods
xchg
es
jno
ljmp
jo
cmpsb
insl
add
mov
or
sbb
arpl
js
fisubl
and
mov
repz
pop
mov
adc
dec
mov
push
sbb
xor
arpl
lds
ljmp
mov
mov
bound
loop
xlat
xor
in
fisttps
and
loopne
out
push
sti
dec
or
and
push
cmp
xor
and
outsl
fnsave
cmp
sbb
rcrb
jp
pushf
sub
or
cmp
fistpl
inc
cmp
sub
jl
xor
int3
js
scas
jmp
fisttpll
inc
xchg
jmp
xor
xor
mov
inc
adc
xchg
pop
bound
and
push
inc
mov
imul
dec
sbb
test
stc
inc
mov
arpl
push
sahf
stos
shrb
aad
and
add
clc
ret
addr16
inc
mov
jmp
aaa
inc
arpl
sbbb
out
push
sbb
sbb
sbb
dec
xchg
fsubrs
xchg
mov
nop
decb
daa
xchg
shl
pushf
aam
jne
xchg
imul
arpl
pushf
sarb
cmp
outsl
inc
mov
loop
sbb
ret
xor
dec
dec
lcall
mov
push
jo
push
and
inc
outsb
mov
mov
dec
jecxz
xchg
loope
sbb
repnz
and
clc
jmp
popa
ret
push
stos
jle
sub
jne
sbb
lods
xchg
sub
add
push
fwait
or
fwait
xor
pop
pop
stos
mov
icebp
add
jnp
mov
rcr
inc
orb
mov
outsl
adc
sbb
iret
dec
pusha
test
adc
out
pop
mov
repz
mov
in
and
call
dec
fadds
cltd
cmpsb
fistpll
cmpsl
outsb
out
rcrl
jae
xor
and
cmp
mov
loopne
call
mov
ljmp
rorb
or
inc
int
and
loop
pop
fidivs
jmp
mov
pusha
fucomip
and
rcl
xchg
ret
popf
cmp
xchg
imul
roll
sahf
daa
xor
stos
insb
mull
call
ljmp
push
cs
xor
adc
jne
jns
push
fistps
sub
fidivrl
sub
js
pop
fisubs
sbb
sbb
stos
aaa
xor
lcall
repnz
shrb
insl
dec
sbb
push
dec
pop
sub
in
inc
jge
mov
pop
sbb
jmp
fwait
mov
pop
pushf
jo
sub
push
xchg
mov
dec
xor
mov
xor
dec
fmuls
mov
incb
dec
mov
or
push
push
sub
shll
cmp
mov
xor
jns
jmp
mov
fidivrl
xchg
test
mov
call
cmp
mov
mov
lret
xor
pop
out
push
mov
mov
and
sub
das
shll
sbb
dec
divl
cwtl
jg
scas
xor
ja
inc
and
cwtl
lret
les
cmp
jmp
mov
ret
sahf
jmp
xchg
xlat
addr16
xor
jno
pushf
mov
jl
mov
test
cmp
cmp
push
cmc
divb
les
sub
stos
push
mov
or
enter
jmp
adc
aam
fistl
int3
mov
pop
fwait
js
js
jecxz
cs
loopne
xchg
stc
insl
stos
xor
push
es
and
pop
repnz
and
mov
aaa
int
fidivs
arpl
sub
mov
jmp
mov
repz
loop
sub
or
in
pushl
in
xor
cld
movsl
or
xchg
fisubl
mov
dec
xchg
hlt
stos
pop
dec
roll
adc
xchg
lds
stos
xchg
cmpb
mov
inc
pop
add
jo
decb
cmp
data16
shlb
push
add
mov
dec
dec
inc
xor
sub
fcomps
js
mov
mov
xchg
mov
lea
adc
and
int
lods
inc
xchg
leave
jae
ret
sub
adc
out
aaa
stos
add
add
ja
mov
pop
sbb
mul
int
push
inc
xor
leave
test
lahf
push
pop
jg
cmpl
outsl
sub
into
mov
insl
mov
pop
in
cmp
xchg
test
scas
push
popf
ja
jle
cmp
xchg
dec
daa
movsb
scas
xchg
jo
in
out
push
pushf
scas
popa
dec
lods
xor
and
fcmove
xchg
sbbb
xchg
jg
ret
inc
insb
inc
mov
fs
push
jmp
lcall
fiaddl
dec
mov
sbb
pop
repnz
lret
and
push
lods
mov
cmp
dec
and
repnz
pop
aas
xchg
add
aaa
iret
push
out
push
adc
icebp
push
jl
orb
sub
js
in
int3
hlt
inc
pop
xchg
mov
sub
repz
inc
stc
push
loope
ja
or
hlt
aam
add
nop
gs
mov
dec
sahf
pop
jnp
xor
hlt
mov
sub
rcr
add
mov
cmp
sub
sbb
and
call
icebp
out
mov
and
push
mov
sti
xchg
inc
sub
sti
push
dec
jns
aad
shlb
adc
fsubrp
add
outsb
pushf
js
shlb
outsl
gs
outsl
sbb
mov
sbb
cmp
inc
add
cmc
into
push
bound
jmp
ss
rcrl
hlt
inc
pusha
sbb
sub
and
das
dec
aaa
jns
push
rcrb
insl
jl
aam
add
test
ffreep
and
es
fisubl
sub
popf
mov
jge
lahf
push
add
call
lea
xchg
cltd
aam
cmpsl
fldt
sbb
inc
stos
icebp
and
inc
cmp
arpl
lds
rorb
sbb
into
ret
mov
push
sub
sbb
jle
hlt
inc
test
js
fdivs
fisubrl
movsl
push
movsl
jp
add
in
dec
cmp
pop
fadds
lcall
leave
jecxz
cld
js
mov
sub
sahf
push
mov
fmuls
nop
loope
popf
or
shll
and
jmp
push
inc
andl
stc
movsl
xor
mov
loopne
sub
stos
jecxz
mov
push
movsl
mov
fstps
and
lcall
aaa
insl
dec
outsl
or
push
cmp
imul
mov
fidivs
mov
lods
or
movsb
mov
outsl
jo
les
out
fsts
inc
cld
jp
mov
aas
cs
fstpl
hlt
js
push
sar
repz
roll
push
sbb
mov
imul
sti
roll
jg
ret
leave
stos
insl
pop
ds
sbb
pop
pop
and
icebp
int3
cmc
hlt
out
test
cmpsb
push
dec
and
outsb
mov
lahf
mov
mov
scas
out
inc
sbb
cmpsl
mov
or
sbb
xor
or
adc
pusha
fimull
jp
cltd
mov
mov
mov
movsl
or
incb
pop
daa
dec
adc
out
pop
ret
cwtl
ds
gs
xor
sarb
divb
jle
lahf
ror
cmp
jge
and
pop
cli
xchg
dec
jo
mov
cltd
insl
push
sbb
testl
popl
adc
je
lcall
sub
xchg
push
pushf
icebp
leave
mov
dec
pop
es
mov
cmp
mov
pop
imul
jae
jbe
mov
jmp
adc
fimull
loope
sub
sbb
jne
jbe
xchg
or
cwtl
fnstenv
xchg
fsts
shrl
jne
std
pop
insl
cmpsb
lock
push
inc
xchg
adcb
or
dec
xchg
jae
sub
loope
fldcw
imul
insb
xor
jle
mov
roll
cld
add
xchg
pop
dec
ret
or
jp
cmc
jns
loopne
and
or
arpl
icebp
push
xor
jmp
stos
adc
push
jecxz
inc
rcr
inc
lea
out
rorb
cmp
xor
xor
int3
lea
fldl
out
inc
shrb
lcall
cld
mov
popa
push
imul
aas
outsb
mov
mov
inc
add
mov
mov
dec
enter
test
push
aad
inc
icebp
bound
jbe
sarb
pop
cmpsb
jbe
lret
adc
dec
fsubl
aam
lret
xchg
ficompl
in
and
jne
mov
pop
lock
imul
inc
jae
push
in
pushf
jbe
push
dec
cmc
push
ja
fnsave
sbb
js
pop
xchg
sub
cltd
in
adc
push
cmp
mov
test
jns
sub
orb
mov
fmuls
or
xor
xchg
sti
mov
icebp
inc
scas
or
imul
xchg
dec
mov
std
lret
in
and
sbbl
pushf
cmp
cli
outsl
inc
lock
mov
add
jbe
stos
cwtl
sub
jl
popf
xchg
scas
add
jg
or
adc
lcall
test
push
dec
cltd
or
and
xor
jbe
and
popa
inc
mov
add
lods
hlt
pop
std
clc
orb
rclb
sub
and
cmpsb
testb
xchg
adc
pushf
hlt
data16
movsb
push
push
push
test
mov
mov
cltd
jle
jb
push
inc
aas
cmpsl
nop
or
cli
xchg
push
push
or
xchg
jb
mov
je
outsb
xor
inc
push
dec
sbb
pop
sub
or
xchg
lahf
daa
sahf
dec
fsubrs
cmp
decb
ja
xchg
lock
mov
jns
sub
add
lcall
or
add
add
and
in
adc
or
and
mov
subb
mov
xor
movsb
mov
js
inc
outsl
jle
adc
mulb
fst
or
adc
pop
movsb
xor
in
mov
loopne
mov
and
insb
sbb
test
xchg
adc
and
push
jnp
sub
sub
out
mov
out
sti
rorl
outsl
cmc
mov
mov
inc
xchg
mov
xor
repz
inc
in
lods
movb
or
mov
jl
jg
sub
stos
jp
das
push
and
inc
mov
sbb
mov
movsb
fimuls
xchg
inc
pop
or
les
into
pushf
and
fidivrl
jne
in
mul
cmp
dec
and
mov
lcall
scas
stos
mov
sub
fs
pop
rolb
pshufw
or
ficomps
jmp
mov
ret
rcr
pop
hlt
js
xchg
and
rcll
cmp
dec
jne
sti
or
push
ljmp
into
sbb
mov
sbb
mov
jecxz
stc
out
and
mov
adc
fcoml
jae
pushf
imul
xor
mov
out
sub
dec
mov
incb
mov
mov
movsl
mov
mov
scas
lcall
rclb
cmp
insl
cmp
icebp
in
jl
decl
and
xlat
or
std
inc
jne
roll
dec
imul
in
cmpsb
gs
inc
mov
sahf
mov
incb
ds
dec
cmp
push
fwait
hlt
out
outsl
jg
push
loopne
add
or
push
pusha
add
mov
mov
lds
pushf
sub
cmp
dec
mov
ljmp
dec
jno
pop
cmpsl
sarb
inc
clc
jnp
insb
test
int3
repnz
or
jmp
mov
jae
in
outsl
inc
adc
mov
lds
xchg
pop
ja
lahf
mov
test
mov
mov
mov
inc
stos
cmc
adc
call
stc
call
int
xor
jmp
dec
mov
mov
outsl
push
mov
add
sbb
xchg
dec
stos
pop
orl
pop
shlb
loope
mov
sbb
inc
shrl
mov
sti
xor
add
imul
sbb
fiaddl
sbb
mov
idiv
ret
push
xchg
or
add
pop
jl
inc
xchg
outsl
mov
inc
insl
mov
aaa
aam
mov
push
xorb
inc
dec
shll
or
adc
mov
or
mov
jae
xor
mov
cmc
pushf
stos
ret
pop
adc
jmp
outsb
adc
sub
cmp
push
out
jmp
ja
xlat
inc
sub
ja
outsl
pop
dec
xor
mov
out
lods
mov
push
repnz
jnp
xchg
lods
fsubrs
filds
xor
shll
jecxz
mov
ror
aad
xor
fsts
inc
mov
addr16
xchg
or
xor
sub
push
subb
repz
scas
cmp
lock
fdivr
dec
fwait
sub
and
cwtl
outsl
test
pushf
shrb
cmp
idiv
cmc
mov
inc
mov
popf
jae
inc
jne
dec
jge
cmp
clc
mov
mov
mov
mov
fstl
add
mov
push
jne
pop
mov
xchg
dec
jb,pn
push
push
shrl
mov
mov
lcall
js
xor
mov
cmp
mov
add
rorb
cli
ja
das
sbb
mov
add
pushf
lret
sbb
adc
jle
mov
jno
fstps
cwtl
sbb
sar
xchg
dec
sbb
dec
or
mov
pop
popa
adc
push
rcrb
push
adcb
push
es
xor
test
cmp
cmp
les
out
push
xchg
pop
loope
loope
add
test
xor
pop
ljmp
xor
sbb
jle
xchg
xor
leave
or
pop
mulb
clc
mov
xlat
push
decl
movsl
fmul
adcl
jne
add
push
push
js
adc
cmp
sbb
ljmp
je
dec
cmp
jae
rcrb
inc
lahf
cmp
mov
or
jo
leave
ja
pop
shll
xchg
loop
and
add
cli
mov
xchg
repnz
sarb
pop
std
adc
push
mov
xchg
mov
fnstsw
sbb
int3
ds
push
mov
jmp
dec
js
sbb
xlat
popf
fisubs
stc
pop
or
clc
mov
add
lods
dec
push
sub
jl
loope
shrb
dec
or
add
lods
loopne
sub
xor
in
mov
mov
js
pop
aam
int
mov
mov
cmpsl
imul
mov
inc
add
cwtl
divl
mov
movsl
pop
pusha
into
loope
jecxz
ljmp
jne
xchg
push
xor
icebp
fsubrs
cltd
setge
jo
mov
inc
ficoms
push
cld
aam
mov
adc
xor
dec
dec
lds
adc
push
movsb
icebp
iret
cmp
int3
and
pop
sub
pop
mov
fadd
dec
iret
daa
lea
mov
cld
adcb
data16
mov
in
sub
imul
mov
fadds
xor
je
push
dec
sti
or
or
int3
add
sti
inc
cs
loope
inc
cwtl
mov
adc
cmp
or
lea
idivl
out
sbb
jno
mov
cmp
incl
mov
or
std
dec
loop
cmp
mov
leave
jo
test
sub
xor
rorl
sub
scas
sbb
shll
ds
push
dec
rorb
pop
scas
mov
scas
int3
jne
test
cmp
add
mov
push
cld
mov
push
cmp
sti
aad
mov
adc
jmp
movsb
inc
add
adc
scas
mov
fsts
mov
jmp
mov
adc
ret
inc
mov
inc
adc
xor
xchg
or
inc
and
inc
mov
mov
mov
out
sbb
jns
sbb
xor
lods
mov
popa
push
addr16
mov
mov
pop
rcrl
repz
mov
pop
sub
fmuls
jns
data16
jg
mov
lods
out
push
dec
jmp
mov
ret
or
xor
fwait
in
mov
scas
aad
sahf
or
ds
cs
inc
ljmp
and
insl
data16
popa
gs
bswap
andl
outsb
and
sti
das
sub
into
arpl
push
daa
cmc
xchg
xchg
cmp
inc
data16
fstpt
lods
jle
stos
adc
lods
fisubrs
outsl
das
sub
jmp
fdiv
pop
xor
mov
jno
jecxz
cmp
or
lods
mov
lds
jnp
js
add
out
lret
mov
lds
push
mov
jae
push
aas
push
fnstsw
jo
pop
xlat
mov
repz
mov
enter
test
les
outsb
push
scas
fstl
addr16
fs
xchg
jmp
inc
gs
mov
fwait
xor
push
mov
push
xor
inc
sub
mov
sbb
sti
jp
lret
and
add
sti
or
xor
paddw
sub
std
dec
and
mov
loope
rol
hlt
enter
add
or
loopne
sub
rcll
pushf
adc
push
into
cmp
jp
movsl
pop
dec
and
dec
inc
mov
popf
out
dec
fldl
scas
ficomps
sub
inc
dec
lock
cwtl
xchg
add
jns
dec
push
fsubl
mov
iret
cmpsl
cmpsb
add
sbb
faddl
adc
xchg
cs
mov
je
cmpsl
mov
shll
insb
mov
ret
hlt
inc
xchg
arpl
lds
loop
mov
sub
jg
mov
jecxz
mov
jno
test
je
filds
outsl
push
sub
adc
aam
dec
lret
push
pop
push
xchg
push
cmpsl
dec
xchg
sarl
fdivrl
leave
cmp
or
push
jge
sti
loope
pop
sarb
and
out
inc
dec
leave
jns
mov
lds
xchg
lods
sarl
xchg
insl
jno
mov
stc
dec
xor
cmovnp
shll
imul
std
cwtl
stos
aaa
adcb
mov
mov
iret
loope
mov
fldt
mov
loopne
scas
add
mov
ret
dec
loopne
pop
enter
xchg
inc
xchg
ljmp
repz
inc
add
lcall
addr16
dec
cs
inc
mov
cmova
ret
xor
shlb
xor
pop
sub
xchg
ljmp
ffree
pop
lahf
push
mov
inc
xchg
es
mov
mov
ret
adc
aam
push
stos
adc
rorl
imul
adc
cmp
xor
divl
negb
jg
aad
movsl
xchg
fs
pop
fsubrl
dec
aaa
call
repz
fidivs
cld
push
cmp
stos
xor
lahf
mov
ja
cmpsb
aam
repz
lcall
out
mov
mov
out
or
jle
and
loop
test
xor
cmc
sub
jb
ret
jnp
cmp
inc
or
cmp
sub
or
mov
adcb
jns
jno
inc
clc
stos
xlat
les
fbstp
add
push
insb
fsubr
dec
idiv
cmp
int3
mov
shll
mov
imul
sub
jae
adc
jg
lea
inc
nop
jecxz
ret
orb
xchg
in
out
ja
lods
divl
ja
std
lret
sti
dec
rcrb
inc
das
lods
pusha
xor
sbb
cmpl
std
mov
nop
outsl
aam
lcall
pusha
or
add
xchg
sub
cmp
stos
lock
xor
pop
push
and
aas
int3
pushf
shlb
xchg
mov
scas
push
das
sbb
add
sub
popa
cmp
popw
mov
imul
icebp
xchg
call
push
int
xlat
adc
dec
clc
cli
mov
dec
int3
ds
out
hlt
insb
push
fisttpll
sub
inc
sbb
xor
ffree
xchg
sbb
mov
or
dec
jnp
pop
enter
sti
dec
push
mov
and
xchg
nop
sbb
mov
test
je
test
jecxz
cltd
push
fisubs
fimuls
xor
test
mov
int
aas
outsl
jbe
int3
cmc
cmc
fisubs
xor
jnp
sbb
hlt
test
bound
and
adc
mov
xchg
pop
sar
dec
je
xor
mov
pop
faddp
test
xor
outsl
js
leave
cmpsl
adc
in
push
fucomp
aas
mov
xchg
mov
out
int
cmc
pop
add
pushf
fstl
scas
fs
sti
movq
pusha
jae
mov
clc
in
lods
inc
shlb
daa
in
mov
repnz
loop
js
stos
push
xchg
jle
add
dec
and
and
mov
push
inc
popf
icebp
mov
adc
mov
ds
sbb
pop
push
ror
shrb
aas
dec
inc
insb
loopne
test
fs
push
mov
cmp
ja
xor
push
sarl
mov
mov
add
mov
adc
xchg
jecxz
loop
rclb
mov
push
stos
scas
sub
add
xchg
jp
rolb
xor
mov
inc
in
dec
mov
les
test
jg
and
xchg
inc
pop
dec
lret
adc
inc
pusha
jmp
mov
int
aaa
fbstp
test
jb
dec
xor
rol
fistps
push
or
int3
add
xor
repz
mov
and
out
fcomp
lock
pushf
jecxz
lds
loop
sbb
or
pop
or
xor
mov
sbb
xchg
dec
mov
adc
xor
ret
xor
inc
stos
xchg
mov
cmp
imul
ficompl
pushf
dec
adc
scas
or
dec
es
ret
push
repz
out
mov
pop
inc
inc
fistl
aas
sub
loopne
push
or
push
out
jb
lods
sbb
sbb
jns
jle
and
sub
ret
mov
mov
inc
gs
arpl
push
cmp
mov
cmpsl
adc
jb
dec
out
xlat
jmp
popf
outsl
cs
sub
loop
shrb
push
imul
inc
lret
jp
cld
add
mov
movb
cmp
bound
add
icebp
dec
js
sti
jnp
nop
xchg
ficompl
pop
aam
lcall
lret
test
inc
data16
sub
aas
jl
fmul
or
js
or
hlt
out
push
loop
in
jmp
lret
cltd
xor
nop
jl
pop
mov
into
and
adc
add
sub
jb
insb
divl
jmp
loopne
fs
leave
cltd
push
aaa
xlat
loop
aad
xchg
sti
sub
add
mov
jnp
mov
adcb
inc
cmpsb
cwtl
outsl
orl
push
cli
shrl
mov
bound
out
aam
push
daa
fstl
repz
xchg
pushl
nop
int
mov
and
and
and
pop
xor
enter
dec
cmp
pop
push
inc
jnp
xchg
fs
mov
ss
dec
and
hlt
jp
loop
gs
fs
popf
xchg
cltd
pop
jge
movsl
data16
loop
rcr
cwtl
and
loopne
popa
pop
call
mov
mov
in
int3
mov
add
addr16
adc
jmp
out
pop
adc
repz
add
push
add
xchg
arpl
push
jg
into
popf
cli
mov
inc
mov
stos
mov
nop
in
in
cmp
push
mov
dec
int
sti
sub
jno
sbb
adc
pushl
mov
ret
shr
repnz
aam
mov
cmp
xor
push
stos
into
sahf
xor
sbb
scas
mov
cltd
gs
incb
hlt
inc
popf
sbb
pop
jle
fdiv
fsubrl
xchg
push
mov
inc
sbb
cmp
inc
sti
jae
fdivr
add
out
fsubrl
sbb
jbe
push
inc
lahf
loopne
mov
adc
daa
and
ds
aaa
sahf
jmp
or
inc
repz
xor
adc
push
push
lret
sub
icebp
cmp
std
aaa
jmp
cwtl
lods
sub
dec
jmp
cvtps2pd
push
pop
jmp
je
arpl
sbb
inc
nop
cs
mov
mov
or
lea
mov
ret
stos
pop
push
and
sub
jle,pn
sarl
ljmp
mov
iret
add
xchg
lea
pop
jo
cmp
popa
pop
sub
mov
jecxz
fwait
mulb
sahf
add
shr
inc
pop
lds
rcrl
fstpl
sub
outsb
pop
lock
xlat
jne
out
pop
jns
pop
adc
nop
mov
notb
dec
xchg
dec
insb
push
mov
mov
out
push
fstpt
call
push
in
out
or
int3
adc
cltd
shrb
stos
repz
dec
or
xor
mov
pusha
daa
fistl
pushf
pop
pop
cmp
dec
push
add
or
out
repnz
insb
mov
push
push
popf
adc
icebp
jg
inc
xchg
push
rorl
cs
cmp
cmp
mov
xor
xchg
mov
sbb
sbb
test
stos
cmc
pop
mov
out
mov
cmpsl
mov
gs
shlb
js
orl
jae
mov
push
shll
sbb
pop
repnz
cs
lahf
loope
cld
jae
cltd
mov
stos
push
je
scas
xchg
cli
or
jnp
fcomp
and
cmpsb
cmp
mov
data16
sahf
mov
call
xchg
insl
pop
sub
mov
pop
add
mov
clc
les
scas
imul
fldt
ss
and
jmp
aad
fistpl
cltd
jo
xchg
int3
mov
mov
adc
inc
xor
pop
scas
xchg
mov
xchg
insl
jnp
add
xor
mov
and
add
fnstenv
lods
hlt
outsl
jmp
iret
mov
mov
inc
jb
scas
and
adc
lds
out
lds
cmp
aam
scas
cmp
testl
insb
aaa
pop
cltd
push
and
cmpsb
xchg
hlt
iret
cmp
cpuid
mov
imull
scas
xor
lahf
or
adc
sti
aaa
mov
adc
stos
pop
std
fcmovbe
subb
xchg
in
aaa
roll
jge
das
imul
jl
mov
sbb
mul
jecxz
aas
fcoms
ss
mov
add
cmpl
idivb
add
je
mov
ja
mov
ret
mov
iret
pop
imul
cmp
test
adc
mov
jne
nop
cld
fldenv
or
loop
lods
or
movsl
pushf
std
sbb
xchg
mov
xlat
repz
sarb
and
ss
pop
dec
ja
dec
sbb
mull
dec
mov
fsubl
es
test
ds
faddp
cld
scas
fidivrl
jo
cmp
and
pop
test
jnp
out
xor
and
jmp
addr16
jg
push
jns
jb
cltd
rcr
das
xchg
rorl
imul
xchg
addr16
mov
jl
dec
aas
lock
adc
jp
sarl
mov
ljmp
xchg
xlat
jnp
xchg
xchg
je
and
lods
cmp
dec
mov
scas
stc
arpl
mov
bound
jb
cmpsb
xor
pop
stos
lret
repz
mov
insb
and
ret
sbb
test
scas
or
repz
xlat
inc
dec
aas
pop
xchg
cmpsb
or
mov
dec
mov
mov
cmc
mov
or
mov
movsl
faddl
orb
push
inc
lcall
mov
push
jle
mov
test
mov
sbb
mov
adc
adc
rcrb
outsl
sahf
test
cltd
mov
mov
and
rcrb
mov
mov
fwait
push
add
push
jnp
sbb
push
je
inc
jae
mov
jnp
xor
lret
push
pop
pop
push
pop
push
ret
mov
adc
cmp
dec
jno
sahf
fisttpl
cli
pop
out
ret
push
mov
sahf
push
imul
sbb
daa
hlt
mov
in
jnp
leave
lock
cltd
dec
in
out
sbb
xchg
inc
pop
addr16
out
imul
ljmp
inc
push
add
inc
mov
ret
out
or
inc
ds
cmp
mov
ret
xchg
lret
pusha
adc
outsl
decb
test
push
sbb
adc
in
das
jge
repz
jns
out
popa
and
mov
repz
pop
les
loope
mov
push
sub
jno
je
stc
and
ret
xchg
mov
xorl
jnp
loopne
add
popa
nop
mov
fdivrs
sub
pop
mov
in
jne
mov
or
cld
push
dec
aad
jo
mov
dec
enter
push
rcrb
or
shll
gs
es
xchg
jno
push
leave
fdecstp
les
xor
movb
jo
mov
xor
js
sub
pusha
movsb
lods
or
arpl
rolb
pop
arpl
jo
stos
jns
inc
jp
pusha
shlb
cs
xchg
popa
daa
jmp
adc
std
aam
inc
out
shl
pop
cmpsl
cmpsb
nop
andb
lock
pushf
in
jecxz
roll
jl
addl
fbstp
sbb
jmp
dec
jecxz
loope
arpl
data16
js
fwait
sarl
scas
call
js
xchg
mov
int3
frstor
mov
rolb
jns
div
cmc
cmp
jno
pminub
rclb
scas
sbb
adc
and
add
or
mov
jnp
mov
mov
and
arpl
insb
lret
das
les
and
test
sbb
test
push
cmp
push
in
ret
mov
inc
pop
cmp
shrb
xor
jns
sbb
out
mov
push
mov
je
into
xor
daa
mov
adc
cld
mov
pop
jp
aam
loopne
sbb
lret
mov
or
into
cld
xchg
mov
or
decb
mov
call
stos
and
mov
cmp
int
add
sahf
and
or
mov
adc
sub
rolb
lods
sub
les
outsl
leave
mov
dec
fcmovbe
add
ret
popf
jle
xchg
pop
jnp
fistps
mov
adc
outsb
test
mov
mov
fldt
push
jae
and
call
xor
add
lret
inc
jl
cmpl
rcrb
xor
push
stc
mov
ljmp
pop
out
jecxz
in
push
fwait
pop
adc
stos
or
xor
mov
mov
popa
mov
cmp
fcmovnb
push
adc
inc
xor
and
addb
mov
cmp
outsl
jno
dec
dec
frstor
adc
push
jns
mov
fstp
jno
out
inc
testb
cmp
cmc
loopne
fnstenv
dec
lret
pusha
pusha
test
mov
in
je
and
push
test
and
xor
rclb
daa
or
sbb
jns
fsubs
mov
cmc
sar
aad
pop
jmp
std
inc
mov
movsl
xor
xchg
xor
out
push
dec
jle
or
clc
xchg
mov
mov
mov
loopne
sbb
jmp
xrelease
mov
push
mov
push
mov
pop
cmpsl
call
out
jns
jns
fwait
jns
in
dec
jae
std
insl
fstps
xchg
js
and
lret
popf
jecxz
xchg
sub
cmova
xchg
push
gs
inc
mov
mov
movsb
sub
xor
popa
xlat
dec
mov
lahf
repz
mov
fsts
aas
inc
jge
out
in
push
divl
cmp
push
push
fstl
jg
arpl
adc
push
xchg
cli
pop
jle
jnp
loop
push
movsb
mov
add
add
jns
xchg
popa
mov
cmpsl
mov
mov
mov
pop
pop
aaa
push
call
repnz
mov
hlt
inc
scas
jg
out
sub
lods
xor
cmp
jbe
lea
xchg
sbbl
repnz
jnp
mov
in
outsl
inc
pop
xchg
in
imul
repnz
pop
leave
lret
dec
push
fidivl
test
enter
and
push
xchg
xor
xchg
xor
add
stos
push
jbe
jb
mov
addr16
sbbl
jp
add
aas
mov
test
addr16
mov
das
imul
lds
test
mov
aam
lahf
cld
test
push
sbb
mov
xchg
test
xchg
movsl
inc
lret
sub
mov
loope
jno
xor
mov
fs
pop
mov
sbb
cli
push
invd
jp
fcompl
imul
aam
inc
jae
dec
push
pop
fs
mov
scas
in
and
out
imul
idivb
repnz
adc
cmpl
sub
pop
pushf
movsl
aad
inc
push
cs
movsb
cmovp
subb
pop
outsb
movswl
and
push
cmp
sub
lcall
or
call
jnp
xor
fdiv
divl
cld
xchg
repnz
scas
add
dec
and
inc
loopne
mov
xor
loope
jl
stc
lds
mov
loope
std
inc
adc
loope
xchg
subb
out
jbe
pushf
dec
dec
inc
and
das
adc
fstpt
push
push
cmp
icebp
lock
sub
sub
adc
jp
mov
inc
pop
lret
sti
test
nop
fildll
call
icebp
xchg
dec
pushl
inc
into
arpl
or
jns
dec
call
push
popa
jae
jg
inc
out
mov
out
sub
sbb
adc
adc
pop
scas
cwtl
cmp
sti
fwait
sbb
lods
loope
outsl
mov
push
loope
adc
shl
icebp
rcll
dec
jo
gs
mov
rolb
xchg
add
scas
sahf
lret
push
mov
mov
push
add
out
mov
jge
int3
mov
ss
pop
ljmp
sub
icebp
dec
and
into
imul
mov
scas
push
bound
mov
orb
sahf
add
xchg
imul
jbe
add
int3
icebp
dec
mov
aas
int3
xchg
pop
sbb
and
mov
mov
lcall
dec
enter
clc
leave
movb
pop
inc
add
adc
fs
and
imul
out
push
pop
sub
cli
inc
imulb
sub
or
push
imul
popa
or
mov
pop
andl
andl
clc
push
repnz
fsubs
push
sbb
cmc
movsl
scas
mov
lods
xor
test
aad
repnz
mov
inc
xchg
mov
dec
push
outsl
xchg
mov
or
inc
pop
nop
data16
jns
loop
inc
sub
inc
in
movsb
test
sbb
insl
and
add
test
mov
loope
insb
int
pop
mov
and
push
lods
in
inc
lods
pop
movsl
dec
scas
popa
outsl
fstl
rorb
mov
out
popf
and
xor
xchg
inc
mov
mov
cmp
xchg
das
or
push
daa
call
jns
cli
lret
add
sub
mov
das
cmp
jle
js
mov
xchg
adc
test
xchg
stc
scas
xchg
cli
ffreep
xor
jns
in
mov
in
pusha
inc
mov
outsb
jb
bound
arpl
mov
lret
push
in
xor
push
and
pushf
adc
jmp
scas
or
mov
xor
js
xor
push
xchg
add
imul
jo
cli
fisttps
mov
repnz
dec
push
inc
testb
jno
mov
les
xchg
clc
leave
sbb
out
stos
push
mov
mov
das
ds
nop
sahf
adc
je
cwtl
push
add
adc
repnz
aas
or
movsb
je
popf
and
out
inc
add
negl
xchg
ffreep
stc
div
arpl
mov
pop
add
cmp
jecxz
mov
add
fcoms
inc
mov
mov
push
mov
xchg
dec
jno
dec
daa
jnp
cld
inc
pinsrw
repnz
xbegin
repz
sbb
inc
and
outsl
outsb
or
xor
fstpl
shll
mov
out
add
sub
outsb
stos
sbbb
sbb
pop
push
sub
inc
jns
sub
cld
fidivs
push
out
mov
cs
xchg
les
loopne
out
nop
ret
mov
jb
jmp
cmp
add
sarl
jnp
cmpsb
cmp
in
push
mov
fldt
loopne
pop
pop
push
mov
int3
push
aaa
cmp
bound
add
jno
ljmp
aas
cmp
lods
lods
mov
test
pop
cmp
movsl
xchg
mov
fcoml
in
lahf
in
lcall
xor
pop
adc
xor
in
loope
push
jnp
popa
shlb
and
ljmp
arpl
jnp
jmp
mov
dec
inc
imul
and
ret
mov
pusha
lods
mov
cmp
repnz
lock
mov
int3
icebp
dec
mov
rclb
dec
inc
stos
mov
xchg
push
scas
jmp
add
mov
dec
add
lds
shll
sbb
adc
cmp
mov
dec
mov
sub
push
and
adc
loopne
push
incl
orb
push
popf
mov
call
cmp
into
add
cltd
popf
mov
push
adc
jo
lahf
jae
push
mov
jle
movsl
loopne
adc
mov
sub
pop
push
fcmovnb
and
pop
mov
loope
sbb
in
push
cmovge
stos
sub
or
test
jl
or
pop
mov
std
xor
lea
pop
adc
sbb
rcrb
mov
imul
out
xrelease
subb
xchg
inc
dec
lahf
sbb
adc
insb
cmpsl
insl
pop
dec
hlt
arpl
cmc
notl
pop
rcrb
dec
and
je
xchg
in
in
dec
cmc
mov
incb
outsb
mov
sbb
xchg
jp
inc
and
add
jno
movsl
dec
repz
lahf
or
pop
jno
mov
dec
and
mov
or
int3
push
je
cltd
popa
in
push
jnp
fcmovb
xchg
push
adc
inc
rcr
movsl
cmp
fimuls
or
push
adcb
scas
or
xchg
aam
icebp
adc
movsl
add
ljmp
popa
test
inc
push
push
xchg
mov
push
jmp
push
push
push
mov
repz
jns
lock
cmp
repnz
test
test
sub
imull
out
lret
int3
lds
cmpsl
mov
sbb
test
aas
push
rep
xor
sbb
or
mov
stos
xor
adc
inc
loopne
pusha
mov
adc
sub
mov
adcb
gs
push
push
xor
imul
xchg
jmp
push
xchg
mov
arpl
push
into
jg
in
fimuls
es
fadds
in
cmpsl
data16
shlb
and
in
lock
xchg
push
inc
mov
and
arpl
lret
insl
or
inc
dec
pop
ljmp
int
push
jle
pop
cmp
add
xlat
hlt
mov
repnz
test
dec
adc
cmpsb
loope
push
in
push
imulb
test
dec
push
and
adc
mov
data16
aas
jne
mov
pop
leave
adc
or
loop
sarl
mov
stos
gs
adc
nop
sub
in
sbb
imul
pop
mov
mov
in
sbb
push
dec
xor
pop
ret
push
js
sub
clc
scas
je
mov
fistps
cs
dec
sub
inc
mov
cmc
int
test
fisttps
sbb
push
mov
fwait
out
sub
dec
xor
pop
outsl
mov
mov
hlt
inc
out
jnp
pop
sub
jae
lcall
cmp
adc
jp
bound
mov
vmovdqa
mov
imull
outsl
mov
add
jo
lds
in
jge
or
pop
int
out
in
xchg
leave
mov
xor
sub
loopne
and
movb
jge
xorl
cmp
gs
negb
insl
cmp
data16
and
pop
add
out
int
aad
xchg
lret
loop
mov
cmp
leave
pusha
jp
push
das
loop
test
icebp
stc
test
jg
fdivl
fildl
rorb
cmp
or
or
jg
xchg
or
push
in
movsb
mov
add
movsb
sub
cmp
inc
sbb
ss
vpextrw
lds
fneni(8087
jl
scas
out
adc
sbb
inc
out
jno
mov
inc
mov
and
popf
pop
xchg
ret
jg
cmp
in
int
shl
mov
jne,pn
lock
cwtl
xchg
push
sahf
leave
inc
hlt
call
das
cmp
push
jbe
mov
daa
cli
pop
mov
les
push
xchg
mov
inc
int3
stc
mov
mov
popf
mov
xchg
daa
enter
mov
fmull
es
xchg
stc
xchg
dec
add
ljmp
mov
fsts
loope
xor
das
pop
push
iret
inc
jnp
out
sbb
or
cmp
xadd
in
cmc
jnp
adc
mov
rclb
xchg
jnp
popf
cmp
std
dec
mov
xchg
aas
xor
or
hlt
insl
sub
insl
push
lret
mov
imul
and
lds
mov
aam
jg
cmpsl
insb
les
mov
into
push
ror
xchg
sbb
push
mov
fdivs
cld
mov
mov
xchg
movsl
jmp
push
sub
mov
ljmp
push
inc
cmp
insl
loop
adc
data16
pop
movsb
cmp
int
add
out
loop
imul
pop
idivl
scas
jp
aad
mov
outsb
cld
in
and
enter
push
and
out
test
inc
ror
out
pop
out
test
push
lahf
ret
xchg
xchg
scas
adc
aam
xor
push
sarb
jb
pusha
scas
inc
mov
mov
out
fsubs
icebp
sbb
xor
sahf
xchg
lahf
add
clc
add
fbstp
sahf
pop
adc
jb
popf
stc
sbb
xchg
inc
or
push
js
lahf
push
and
mov
xchg
out
jae,pt
jge
mov
shll
or
ljmp
int3
pop
ja
or
push
testl
cwtl
mov
stos
imul
cmc
inc
sub
in
scas
cmpsb
xchg
loopne
push
push
cmp
ret
pop
cmp
and
std
pop
sbb
xor
rep
aas
sbb
int3
fsubrs
imul
and
push
fdivrl
mov
out
rcrl
xlat
pushf
insb
or
xor
mov
in
mov
lock
mov
in
mov
add
sub
shl
dec
mov
outsb
pop
das
mov
sahf
cld
jo
test
lods
sub
xor
outsl
jge
unpckhps
mov
push
test
pop
xor
lods
aad
pop
int3
sbb
test
cmc
sub
mov
cmpsl
push
push
cmp
addr16
je
mov
fsubrl
popl
sbb
pop
and
sarb
aam
scas
lock
push
pop
sahf
inc
aas
roll
popf
iret
cmp
dec
sti
cli
xchg
mov
add
or
cmpsb
add
insl
test
enter
push
jecxz
add
cltd
push
dec
sbb
push
lods
push
ds
shl
sar
iret
inc
cmp
lret
adc
mov
mov
bound
xchg
sqrtps
in
and
xor
in
negl
jae
jmp
adc
xchg
xchg
pushw
lods
dec
outsl
lahf
adc
inc
pop
xchg
mov
cmp
or
pop
shlb
dec
fsubrl
out
jb
js
ja
pop
ja
push
aaa
aad
imul
je
or
adc
call
movsb
adc
dec
stos
ret
out
scas
dec
or
jg
or
xor
in
ja
add
inc
or
les
rol
frstor
cmp
icebp
xor
dec
pushf
sub
fistps
std
inc
iret
nop
lret
mov
scas
adc
les
insl
rep
std
pusha
dec
daa
xor
cmp
mov
sub
fucom
stc
js
ljmp
hlt
jne
sub
adc
jge
lcall
notb
in
js
js
inc
adc
lds
adc
sbb
mov
sbb
and
push
push
sbb
mov
or
xor
xor
adc
dec
push
and
ljmp
insl
imul
out
rorb
push
adc
add
inc
or
ja
sbb
adc
push
xor
mov
es
loope
das
mov
add
jno
dec
sbb
add
les
mov
jne
cmp
jo
jge
dec
jbe
mov
adc
shlb
inc
not
fs
pushl
push
push
ss
inc
pop
imul
xor
dec
subb
push
jl
insl
fimuls
dec
cltd
sbb
scas
stos
inc
jno
xor
shrl
repz
dec
pop
xchg
mov
ficompl
int3
int3
pop
fdivrl
jb
fwait
shll
jle
sub
xor
jnp
cltd
outsb
in
mov
lds
mov
inc
scas
or
push
xchg
adc
adc
mov
hlt
loope
aaa
fwait
dec
pop
xor
mov
loopne
or
jmp
ret
xor
js
adc
jge
fstp
sbb
testb
mov
pop
xchg
clc
add
lcall
and
mov
test
mov
inc
push
das
xchg
sahf
xchg
test
push
popa
cmpsb
xor
mov
sbb
mov
or
and
cmp
fcmovbe
out
dec
dec
push
insb
sub
inc
out
xor
js
out
cmpsl
test
cwtl
aam
ret
sub
lahf
jno
jbe
aas
sbb
mov
jmp
jnp
divb
les
inc
fmull
cltd
lds
push
cmp
sbb
xor
xchg
and
pop
and
xchg
outsl
push
data16
push
jns
lods
push
jno
fs
bound
rcrl
cmp
inc
fistpl
sub
into
scas
das
paddw
int3
push
cmp
mov
adc
inc
lock
mov
scas
mov
mov
bound
add
mov
fmuls
mov
push
mov
rcll
add
sub
cmc
nop
jbe
aad
xor
fcoml
push
into
repz
cmp
or
repz
loopne
add
lds
sbb
imul
stos
mov
out
orl
jb
dec
iret
insb
loope
push
fistpll
stos
sbb
inc
xchg
pushf
inc
sub
loop
xor
or
adc
outsl
add
cmp
mov
xorb
mov
adc
repz
ja
aam
mov
or
xchg
xlat
xchg
fs
pop
scas
addr16
push
shrl
dec
pushf
mov
int3
punpckhdq
sub
cmp
xor
aaa
push
lret
sub
mov
xchg
out
inc
stos
xor
sub
jns
xor
xor
jmp
cli
and
and
scas
and
lods
inc
int
adc
fs
push
adc
mov
and
mov
push
mov
add
aad
fwait
cmp
neg
mov
dec
xchg
ret
inc
cltd
outsb
loop
insl
bound
or
lds
adc
cltd
add
push
push
movsb
sarl
lds
pusha
lods
mov
loop
add
cli
cmp
sbb
add
xchg
or
push
inc
dec
adc
add
xchg
pop
or
add
inc
sub
repz
jl
push
and
icebp
jbe
into
repz
push
shrb
fwait
lock
mov
add
shrl
fstpt
mov
movsl
mov
dec
pop
jb
xor
push
movsb
lods
ret
dec
xor
stos
mov
sbb
pop
fwait
cmp
addl
mov
jb
gs
xchg
cli
xor
adc
push
mov
fmuls
lods
cmc
mov
dec
xor
in
out
mov
mov
and
mov
cs
mov
test
lods
daa
imul
xor
test
lds
xor
xchg
dec
outsb
stos
pop
cli
std
or
sbb
test
xchg
loopne
mov
inc
arpl
adc
jae
into
push
lds
stos
icebp
xor
fwait
movsb
add
jae
inc
hlt
nop
adc
pop
loopne
stc
cmp
imul
sbb
mov
mov
mov
gs
add
lds
mov
jl
pushf
cld
rcrb
sahf
sub
dec
fadd
rorl
sub
call
jl
lock
notl
dec
or
pushf
les
cmp
mov
sbbl
fcoml
ficoms
test
xor
sbb
in
cmc
jno
inc
in
outsl
lret
cltd
pusha
and
jge
repnz
push
repnz
bound
jne
call
push
jne
push
mov
inc
inc
loope
inc
push
xchg
and
imul
pusha
xor
sub
and
xchg
mov
pop
jne
mov
repnz
pop
add
mov
pop
push
push
sub
ds
fisubrs
ret
lahf
imul
in
xchg
int3
xchg
ret
mov
fstpl
ljmp
mov
xor
fs
jo
inc
or
aaa
roll
sub
pop
into
mov
imulb
push
cmc
xlat
out
xchg
inc
shrb
leave
push
or
cmc
xor
sahf
jbe
loopne
dec
mov
push
faddp
sub
in
jle
pop
mov
cmpsl
sbb
lods
push
and
pop
movsl
les
lret
mov
stos
in
pop
dec
dec
push
jg
fisttpll
sbb
xchg
lea
ficomps
sbb
mov
leave
add
or
js
insb
add
jo
xor
test
arpl
sahf
xrelease
jae
inc
cmp
sub
out
xor
clc
adc
inc
and
jno
push
stos
or
inc
mov
cwtl
fstpl
data16
les
inc
mov
stos
push
and
inc
mov
xor
mov
inc
movups
test
add
leave
inc
loope
notb
pop
inc
jbe
cmpsl
inc
and
pop
mov
push
adc
in
data16
add
dec
cmc
mov
mov
fwait
addl
pop
sbb
rol
dec
jge
repnz
jl
adc
push
cmp
aad
xchg
test
arpl
les
xchg
sub
or
jae
mov
aas
mov
mov
cmp
gs
jb,pt
mov
push
out
xor
cld
movsl
jecxz
stos
add
xchg
inc
pop
insl
push
mov
push
mov
mov
jle
xchg
ret
scas
add
mov
jns
ret
push
mov
mov
cmp
push
iret
and
dec
sbb
test
xor
call
pop
jno
xorb
in
fsubrl
inc
test
mov
jl
out
imul
push
movsb
fbld
lock
lcallw
lret
xor
ret
repz
jp
lods
inc
cmp
jns
dec
addr16
mov
jmp
jns
cmp
push
mov
rcll
bound
cmpsb
lret
push
dec
mov
inc
jecxz
sbb
dec
mov
mov
or
int3
movsb
or
xor
mov
mov
je
popf
test
dec
mov
push
adc
out
mov
ds
cmp
mov
pop
jl
mov
sti
rolb
hlt
mov
inc
jge
or
pop
push
shlb
dec
cmp
mov
xchg
lcall
inc
mov
mov
sbb
fisubrl
cmpb
push
xor
and
int
push
cmc
mov
enter
lcall
dec
cmp
daa
inc
xor
repz
int
push
or
sub
add
push
fdivrs
decl
cmp
jno
sbb
adc
push
jmp
and
fs
lea
add
push
icebp
aas
mov
test
inc
movsb
and
pop
fsubs
jmp
repz
ret
dec
movsl
inc
mov
call
xchg
cmp
jns
and
jno
and
or
jg
movsl
mov
sbb
ljmp
lods
movsb
repz
loopne
das
stc
testl
sub
pusha
sbb
aad
shrb
sub
insb
aas
or
pop
pop
in
xor
xor
stos
pushf
loopne
sub
mov
out
mov
and
or
decl
mov
add
push
jle
sbb
pop
out
sub
ja
or
and
xchg
ja
sarl
lock
enter
jmp
pop
dec
hlt
push
jns
dec
sub
jl
and
and
or
mov
es
mov
daa
data16
inc
jo
div
inc
popa
dec
or
clc
fwait
jno
mov
aam
push
test
pop
shll
sub
add
cmp
fstpt
std
fs
or
movsb
add
aaa
adc
loop
lcall
xchg
in
movsl
or
fcoml
sub
pop
xchg
jae,pt
sub
lcall
adc
insl
loopne
daa
fimull
fadds
jle
or
ror
push
pop
cmp
pusha
shll
enter
xor
sbb
or
push
lcall
jmp
aam
push
in
incb
fldlg2
pop
out
repz
or
pop
fcoms
loop
ret
adc
sub
pop
mov
pop
repnz
nop
arpl
out
adc
dec
test
scas
xor
pop
mov
gs
inc
cmp
mov
ret
jo
int
cltd
loop
mov
dec
aad
sbb
into
test
ret
pop
adc
lods
and
imul
loope
or
sub
cmp
inc
aam
adc
inc
mov
loop
outsb
inc
clc
mull
sbb
pop
movhps
cltd
sahf
adc
and
xchg
cmpsb
or
adc
int
in
mov
movsl
enter
sub
lock
xchg
je
ljmp
in
push
or
in
sub
stos
les
adc
das
hlt
dec
mov
mov
jnp
stos
test
rcl
jbe
mov
fwait
add
inc
insb
xlat
adc
and
data16
jecxz
mov
js
int3
addb
dec
repz
fwait
adc
dec
cld
lret
mov
enter
sub
jl
push
lds
addb
sbb
mov
jmp
add
dec
or
nop
cmp
flds
jp
data16
movb
sbb
jb
inc
fsub
movsb
lret
or
scas
fildl
in
clc
pop
and
jae
es
push
adc
inc
add
enter
jmp
jmp
pop
add
xlat
mov
daa
adcl
out
jmp
pop
lods
mov
jb
pop
rclb
call
sbb
mov
in
das
jne
pop
fs
adc
jo
or
repz
rcrb
push
push
sti
xchg
mov
pushf
jg
pop
sarb
flds
sti
dec
pushf
ja
int
mov
mov
imul
and
movsb
jns
lcall
test
add
pop
cld
sub
lret
adc
push
jmp
jp
mov
popf
push
inc
sub
or
cwtl
dec
cmp
pop
pushl
lods
mov
movsl
cmovl
cwtl
cmp
mov
cmp
loopne
xor
ss
ficompl
mov
inc
mov
inc
jb
xor
pusha
in
dec
add
cmp
dec
add
jne
out
sbb
movsl
clc
loop
enter
in
jecxz
mov
jns
push
rcr
sub
add
loop
out
int
mov
cmp
cwtl
adc
bound
scas
mov
mov
mov
decl
or
fsubrl
scas
lods
fsubrl
test
shr
into
xlat
cli
push
in
jne
mov
jnp
add
orb
pop
lds
and
jecxz
adc
and
pop
sub
leave
sbb
inc
xor
or
sbb
call
ss
out
hlt
outsl
xor
jbe
cmp
cmp
insb
jle
mov
mov
std
sub
test
iret
sti
mov
xchg
adc
cmp
sbb
fldt
dec
mov
or
lock
imulb
mov
imul
inc
les
inc
or
aad
nop
sti
add
xor
cld
inc
idiv
jns
sub
sub
lret
xchg
ret
test
cmpsl
aad
rolb
mov
sub
add
inc
and
xchg
xchg
sahf
sub
add
leave
repz
loopne
or
dec
rcr
cmp
jmp
ret
lahf
dec
jmp
loope
and
pop
jo
fidivrl
adc
mov
xchg
push
popa
and
xor
shl
mov
mov
in
out
movsb
js
dec
dec
in
sahf
jno
icebp
outsl
call
dec
pop
int3
movsb
adc
insb
nop
cld
push
inc
sti
cmp
cmp
mov
sub
fs
arpl
imul
loop
sub
leave
nop
outsl
jmp
cmc
scas
dec
std
scas
ja
add
mov
fstpt
push
cld
shrb
lret
inc
leave
mov
pushf
jle
rep
push
ja
pop
sbb
jbe
pop
daa
lea
xchg
adc
js
xlat
rorl
into
ljmp
inc
ret
jp
movsb
stc
in
jmp
push
out
mov
mov
lcall
scas
jbe
or
push
daa
pop
sbb
mov
jae
or
xor
jg
sbb
push
mov
lahf
or
loop
jnp
ret
jl
add
and
add
in
dec
xor
int
int3
sbb
pop
add
mov
sbb
pop
push
push
xchg
mov
mov
mov
dec
std
xchg
jl
pop
adc
out
in
inc
insl
daa
stos
dec
sbb
cmp
add
pop
sbb
les
jnp
out
shrl
push
cs
lea
loopne
dec
xor
add
jge
popa
push
or
inc
cmp
adc
xchg
pop
sub
fisttps
pop
sub
cmp
imul
sub
lea
int
fnstsw
cmp
mov
stos
xchg
hlt
aaa
xchg
loope
data16
dec
mov
fs
into
or
jbe
mov
xor
int
pop
aaa
sub
jns
jo
stos
pop
cmp
ljmp
dec
push
movsl
add
lret
fistpl
push
jns
push
mov
arpl
jo
mov
cmp
fcomip
and
movsb
mov
mov
dec
mov
cld
or
shrl
cmc
in
in
jmp
sahf
fists
out
call
pop
sbb
dec
lock
cltd
jo
push
iret
or
test
jne
sbb
push
mov
mov
inc
and
pop
jns
or
subb
push
data16
add
pop
ljmp
xchg
jmp
pop
xlat
push
sub
sub
inc
nop
popa
adc
xchg
fists
ljmp
mov
inc
test
movsb
fsubl
mov
or
pop
test
adc
jge
jmp
je
mov
ljmp
add
sbb
jg
jecxz
jns
add
pop
xor
arpl
mov
mov
push
mov
ret
push
fdivs
mov
es
mov
fiaddl
pop
je
mov
in
dec
fistl
jbe
out
and
mov
leave
rorl
adc
cmp
inc
jg
icebp
rorl
jle
fiaddl
enter
add
cmp
aas
in
inc
imul
mov
xchg
mov
mov
cmp
xchg
popa
mov
xchg
les
mov
inc
fimull
arpl
inc
xchg
dec
fwait
sub
jbe
ret
ds
inc
jae
inc
mov
adcl
xchg
imul
mov
add
pop
and
call
mov
pop
clc
mov
cmp
in
inc
cli
and
or
std
cmpb
cs
add
add
lret
push
cld
aam
mov
pop
out
inc
test
jmp
int3
xor
mov
int
xor
inc
mov
cwtl
mov
in
or
shrl
lcall
inc
or
inc
roll
xor
mov
mov
jle
pop
adc
push
adc
call
mov
aad
repnz
call
ss
orb
test
popaw
jle
ss
cmp
ja
xchg
inc
sbb
lock
sub
outsb
sub
add
pop
stc
or
mov
push
in
jle
popl
inc
sbb
jp
mov
cmp
fbld
mov
cmp
fisubs
pop
mov
out
mov
and
jle
outsl
pop
imul
lret
fiadds
outsl
sub
int3
dec
repz
adc
ret
lahf
rclb
imul
or
in
jp
insl
insl
in
mov
movsl
push
push
and
mov
mov
push
movsl
js
mov
ss
clc
xor
mov
dec
mov
pop
mov
aas
lret
ret
stc
out
jae
addb
push
stos
xchg
lcall
fwait
jnp
push
jecxz
test
jle
fcmovnu
adc
pusha
out
push
mov
dec
fs
outsb
pop
data16
sbb
out
push
repz
scas
pop
outsl
stc
out
shll
lds
aaa
jno
ljmp
fwait
clc
imul
mov
sahf
push
out
push
xor
xor
or
cmp
fidivrl
cmp
xchg
xchg
loope
and
test
fbstp
lret
sti
nop
stos
xchg
inc
dec
jp
inc
xor
mov
outsb
jnp
pushf
xchg
dec
sbb
in
popa
jns
mov
clc
arpl
xor
and
test
std
or
out
ret
mov
sub
mov
sub
das
lcall
not
stos
mov
mov
cmp
push
lock
test
push
int3
inc
icebp
jno
cld
jg
fmulp
pop
lea
mov
dec
push
mov
jb
cli
cmp
arpl
fisttpll
in
sbb
dec
xchg
adc
adc
loope
cld
inc
out
icebp
jnp
int
pop
sbb
aaa
addr16
or
arpl
adc
fdiv
out
addr16
fsubr
sti
pop
scas
mov
mov
fldcw
cmp
xchg
cmpl
sub
fisttps
mov
jo
xchg
xchg
inc
bound
and
mov
cwtl
lea
push
lea
stc
iret
mov
pop
ljmp
dec
pop
lcall
and
adc
test
dec
xchg
roll
mov
mov
or
ret
pop
push
xor
cmp
aam
fsubs
sbb
add
fstpl
ss
sub
aaa
repnz
jmp
jmp
sti
sbb
scas
dec
jl
push
sbb
sbb
addr16
stos
lahf
xchg
lcall
les
add
pusha
fdivp
sub
sbb
mov
sub
jno
inc
mov
call
push
xchg
jle
in
sbb
in
out
lret
loopne
add
loope
sbb
call
add
icebp
cmpsl
sti
inc
push
je
jmp
mov
dec
ss
mov
daa
cs
dec
push
or
movsb
iret
inc
add
in
xchg
movsb
in
mov
sahf
or
les
stos
jge
loopne
inc
cmp
mov
mov
test
xchg
push
mov
push
out
jp
das
push
mov
xchg
sub
loopne
out
xchg
ja
and
sbb
sub
mov
adc
outsb
jae
insl
fsubl
les
add
popf
sti
fwait
inc
ss
pop
or
hlt
pop
or
dec
pushf
call
mov
adc
push
adc
adc
frstor
lock
cmp
mov
adc
mov
mov
push
sbb
jb
jecxz
es
push
add
loopne
js
dec
repz
ret
or
imul
movsl
mov
aam
scas
jg
daa
push
notl
mov
sbb
cmp
pop
int
fisubl
sub
in
ss
jle
popa
enter
and
adc
push
and
adc
fcompp
cmp
inc
inc
dec
mov
and
fcoml
cmp
jae
leave
imul
sub
cmp
pop
cmp
push
les
fstps
fsubs
aaa
pop
sahf
mov
cmc
test
cmp
shlb
jle
xchg
lds
test
pop
cs
les
adc
xchg
push
dec
lret
shrd
sbb
dec
ljmp
out
test
sub
insb
pop
add
xlat
movsl
cmc
mov
fs
xor
aaa
popa
push
repnz
mov
adc
pop
and
mov
xchg
mov
dec
pop
bound
ja
imul
add
icebp
mov
cmp
sub
es
lds
pushf
in
les
inc
mov
nop
sbb
xchg
popa
fisubs
fdivl
and
cmp
cmpsb
call
cmpb
add
adc
sub
mov
test
clc
push
mov
jae
nop
cmp
mov
cltd
aam
orl
mov
mov
dec
adcl
int3
push
ds
or
xchg
sub
sahf
outsl
mov
and
inc
insb
in
outsl
int3
fcoml
insb
mov
cmpsl
dec
adc
xor
mov
add
cli
fwait
add
push
testb
lahf
fwait
jns
inc
mov
fimull
sbb
inc
loop
out
daa
cmpsb
in
push
hlt
repnz
jno
cmpsb
scas
pop
mov
clc
ljmp
subl
cld
scas
mov
mov
mov
adc
xchg
xorb
adc
mov
push
fdivs
mov
cwtl
xchg
inc
sti
pop
xor
roll
push
dec
xchg
lods
dec
fisubrl
andl
mov
jo
notb
icebp
add
les
inc
mov
jmp
sarl
insb
das
pop
std
mov
jl
jmp
enter
xchg
out
pushf
call
mov
repnz
dec
aaa
stos
sti
xor
test
fadds
ret
fsts
push
inc
push
add
aas
es
sub
and
mov
rcl
adc
repz
sbb
sbb
sub
cli
mov
add
js
lea
pop
dec
scas
xor
in
dec
xor
dec
cmpsl
shrl
mov
jbe
cmovle
cmp
sbb
cltd
push
subb
in
shll
dec
pop
sub
loop
xchg
or
ja
pop
push
cltd
fstpl
cmp
ja
add
sti
pop
cmc
push
dec
cmpsb
pop
xor
mov
outsb
dec
xchg
mov
rorb
ret
xor
sub
pop
into
sbb
mov
addr16
movsb
pop
ret
rcll
or
test
sahf
adc
sbb
lds
loop
scas
cwtl
and
out
lret
inc
pop
repnz
test
ja
daa
shrl
in
ja
in
and
jge
cmpsl
xor
push
sub
push
nop
sbb
je
add
push
int
mov
inc
lds
enter
sub
icebp
mov
pop
jne
out
sbb
loop
aad
push
add
and
std
mov
cmp
jecxz
sub
and
les
and
jo
mov
std
aas
repnz
add
jb
dec
pop
jae
popa
dec
mov
dec
push
rcrl
ret
push
loopne
rcrl
xchg
xchg
ds
pop
movsl
fisttps
xor
pop
call
sub
adc
out
adc
into
dec
and
push
sahf
fidivs
pushf
movsl
pop
push
xlat
xchg
inc
fwait
xor
xchg
das
dec
lods
addr16
imul
and
test
push
loop
xchg
sub
cs
dec
inc
push
cmpsl
jp
addr16
xchg
pop
andb
dec
adc
lret
rorl
lahf
dec
sbb
loop
stos
sti
adc
fisttpl
scas
mov
sbb
or
orl
shlb
or
shrl
int3
repz
mov
iret
mulb
cmc
mov
fimuls
daa
xor
add
push
in
pop
pop
leave
mov
xchg
add
cld
fwait
inc
push
leavew
loop
mov
lret
push
sub
mov
jecxz
mov
pop
xor
or
and
pop
mov
xlat
and
pop
test
push
fs
rcr
and
fs
mov
lock
daa
jo
and
xchg
or
fcomps
testb
cmc
lds
lcall
loope
pop
ret
sub
jmp
mov
or
xor
jecxz
jae
mov
cld
mov
or
and
je
add
into
mov
pushf
sub
testb
pminsw
insl
adc
push
jge
fists
inc
or
mov
nop
dec
ret
cs
pop
add
cmc
pop
divb
inc
push
push
push
jne
bound
imul
dec
add
movsb
popa
adc
gs
js,pn
jmp
inc
inc
outsb
pop
jge
mov
inc
jmp
popf
arpl
int
fdivs
aaa
adc
xor
shl
bound
movlhps
jecxz
test
test
pusha
fistps
fdivr
or
jp
cs
add
dec
lret
in
xchg
xor
add
out
fsts
mov
insb
int3
arpl
adc
jno
pop
fwait
mov
fstp
mov
dec
dec
cmpsl
imul
icebp
mov
push
push
mov
icebp
ljmp
or
or
filds
jne
into
push
ficoms
test
mov
push
pusha
cmp
ss
and
and
push
xlat
fwait
lahf
mov
nop
xchg
leave
xchg
iret
imul
daa
cmp
and
push
cli
mov
mov
jp
cmp
sbb
aam
mov
xor
jmp
in
loop
cmp
dec
jmp
mulb
jb
ret
or
js
inc
mov
in
adc
add
mov
cld
orl
in
cmp
jle
dec
sbb
inc
dec
cmp
ja
inc
cwtl
adc
scas
inc
loop
mov
xchg
mov
or
mov
jae
mov
adc
mov
push
pop
adc
sub
out
mov
sbb
and
and
sahf
mov
sbb
test
out
int3
in
xor
push
stc
jno
into
inc
out
cmp
rcrb
loopne
inc
bound
sub
adc
leave
or
cmpsl
pop
jo
jg
dec
addr16
out
pop
out
aad
and
push
fimuls
popf
sub
push
andl
test
enter
cwtl
roll
cmp
push
or
xchg
pop
pop
mov
aad
popf
push
sbb
mov
mov
sub
lock
in
popf
dec
adc
pop
cmpsl
jmp
scas
mov
inc
clc
fwait
iret
cmp
inc
ds
jbe
push
xchg
enter
sti
notb
push
hlt
ljmp
xchg
int
pop
pop
push
mov
adc
scas
xor
mov
mov
std
insl
cmp
xchg
lea
xor
dec
data16
test
mov
gs
fbstp
les
mov
test
sub
dec
sub
bound
add
test
test
sbb
pop
mov
xchg
sbb
lock
jnp
xchg
es
and
xchg
adc
pop
pop
ret
stos
mov
in
dec
mov
test
in
scas
ljmp
repnz
cmpsl
mov
xor
hlt
xlat
cmp
or
mov
sti
out
std
jle
jl
and
or
jg
ljmp
adc
mulb
cli
and
shr
jmp
fucomi
inc
ret
ficoms
fcmove
aas
or
mov
mov
add
push
dec
sub
adc
out
in
dec
lods
sub
mov
das
and
cmp
cwtl
jg
add
loopne
daa
stc
les
mov
leave
mov
inc
std
push
and
outsb
rorb
mov
hlt
or
call
sti
push
inc
loope
cwtl
mov
xchg
leave
loopne
xchg
dec
shll
sub
adc
aam
adcb
push
fsts
movsb
inc
push
xchg
movsb
mov
dec
cmp
loopne
lea
pop
aam
iret
call
icebp
popf
push
jne
mov
mov
push
sbb
arpl
mov
arpl
dec
sbb
shll
aad
sbb
shl
push
andl
testl
pop
mov
ljmp
fcompl
xor
js
inc
sbb
sbb
mov
inc
and
sahf
out
mov
adc
lds
rclb
add
jno
sub
fcoml
fisubl
mov
mov
mov
lcall
je
pop
imulb
test
cmpsl
lret
lahf
cmpsb
mov
or
rcrb
bound
pop
add
call
ljmp
lea
push
insb
xchg
sbb
mov
xchg
pop
adc
push
push
test
fldl
add
aad
int3
ret
mov
cmp
sahf
mov
cmp
js
mov
cmp
mov
loopne
mov
out
jle
mov
inc
xchg
test
movl
mov
loop
scas
lret
xor
fldt
add
sub
xor
xor
loope
or
inc
leave
xor
and
lahf
in
mov
mov
or
jle
add
shl
pop
cltd
jmp
int3
or
xor
dec
xchg
les
lcall
test
cld
mov
lods
pop
adc
les
fs
cmc
and
rorb
sbb
add
into
stos
mov
xchg
sub
push
or
mov
popa
adc
push
mov
xchg
call
or
js
mov
mov
jp
or
aaa
in
dec
jmp
adc
cmp
push
jae
idiv
popa
and
arpl
loop
popf
popf
test
fcoml
xor
xchg
into
loopne
fdivrs
xchg
and
sbb
in
test
movsl
repnz
int
icebp
je
lcall
push
mov
mov
or
into
repnz
lahf
in
sub
bound
cltd
jns
bound
push
xchg
lahf
dec
ret
fcompl
and
in
idiv
push
nop
jae
push
gs
sbb
mov
and
xchg
int
sti
lock
jle
xor
lret
movl
mov
stc
cld
add
push
lods
shl
push
fildl
xor
push
mov
cmpsl
cld
lock
aad
xor
pop
sbb
lock
sbb
in
dec
add
ja
and
mov
inc
dec
divl
inc
inc
xchg
mov
aaa
pop
in
or
popa
adc
insw
imul
outsb
sarb
lret
and
mov
cmp
iret
pusha
mov
push
xchg
pushf
mov
lret
clc
push
cmp
sbb
lcall
movsl
cli
and
mov
aad
cmpsl
negl
aad
test
mov
dec
add
cltd
mov
mov
shll
adc
cwtl
fmull
mov
inc
test
inc
add
and
hlt
int
mov
xor
shll
push
sub
adcb
dec
mov
xchg
std
xor
adc
dec
fcomps
cmp
out
dec
enter
or
adc
or
iret
cwtl
mov
pop
sub
xor
outsb
rclb
jg
mov
std
fidivl
add
jge
and
fistl
jp
cwtl
push
pop
dec
xor
sbb
xchg
mov
fidivs
loop
or
adc
and
sbb
cmpsb
je
jmp
sub
mov
cmpsb
shl
mov
rorl
stos
and
mov
je
sbb
sbb
add
inc
fwait
mov
test
aam
das
push
adc
roll
pop
or
sbb
xchg
sbb
lods
jge
xchg
aam
jbe
dec
in
and
mov
cmp
mov
mov
test
push
sbb
lret
nop
xchg
jo
jp
pop
mov
push
or
insb
dec
inc
nop
in
popf
jge
es
popa
aas
jb
lcall
inc
pop
xchg
aam
js
popa
iret
xchg
fs
or
notb
xchg
int3
iret
xchg
jnp
stos
das
or
xchg
dec
pop
push
lret
and
repnz
mov
iret
sub
adc
pop
mov
adc
mov
adcb
xor
and
mov
mov
jecxz
xor
mov
lahf
mov
rolb
fmull
jae
sahf
jg
jno
ss
xchg
movsl
and
out
ret
test
xor
cli
outsb
ret
adc
mov
cld
sub
movsb
mov
inc
stos
xchg
or
movsb
gs
das
push
add
inc
hlt
scas
cmp
call
fwait
cwtl
mov
je
mov
and
inc
movsl
xchg
cli
ret
pop
fistpl
push
call
outsb
adc
inc
xchg
out
inc
xchg
xchg
stos
testl
out
pop
lods
jne
pusha
addl
stc
or
xchg
adc
icebp
pop
movsl
pop
sbbb
jns
sub
xorl
lret
xor
push
pop
or
packuswb
mov
or
mov
mov
xchg
lahf
or
sbb
push
and
in
push
xor
mov
sbb
cld
pop
xchg
sub
add
sbb
and
aaa
aad
adc
cmp
xor
and
rcrb
xchg
cltd
out
xlat
call
pop
wbinvd
mov
cmp
lock
lods
mov
aad
ja
add
sbb
fucomi
cmp
int3
and
mov
and
cmpsl
es
push
stc
mov
fwait
jle
test
cmp
sbb
sahf
inc
pushf
in
or
mov
adc
sbb
cli
loop
lds
aas
sbb
or
movsb
mov
xchg
jmp
and
pusha
add
iret
push
mov
stc
insb
fsubrl
insl
jbe
les
iret
std
inc
pop
xchg
fisubrl
adc
ds
mov
mov
popf
mov
arpl
imul
test
pop
mov
and
andl
movb
xor
pop
pop
scas
addb
xor
mov
cmp
mov
cmp
inc
cwtl
arpl
in
jnp
fldcw
mull
mov
mov
xchg
mov
sbb
mov
leave
mov
dec
fisttpl
std
ja
add
popa
movsl
into
and
pcmpgtw
fcoms
xchg
jnp
jns
ret
incb
sarl
inc
in
stos
push
sbb
dec
push
mov
mov
hlt
mov
mov
fs
sub
rcrb
jne
sbb
jl
call
push
xlat
and
cmp
shll
gs
roll
fsubrs
aad
sub
dec
lret
in
jb
mov
jno
push
xchg
sub
sti
adc
mov
jae
mov
xchg
jo
dec
pop
mov
adc
jns
out
rcrl
and
call
sub
std
xor
jmp
mov
lret
cmp
je
xchg
cmc
in
xchg
push
push
add
sub
stos
xchg
sub
insb
loop
adcb
or
cs
cmpsb
fidivrs
pop
scas
in
das
dec
fisttpll
add
cld
lahf
incl
push
jecxz
outsb
lock
dec
adc
das
lret
je
fs
cmp
fcomps
es
in
rolb
cmpsl
dec
adc
jne
les
jbe
mov
xrelease
pop
add
fs
pop
mov
fwait
inc
stos
or
xchg
mov
test
movsb
dec
fidivrl
dec
mov
cld
repnz
hlt
pop
aaa
and
mov
cmp
xor
adcb
sbb
sub
xlat
jmp
pop
or
mov
cmp
push
and
icebp
mov
or
fstp
mov
push
nop
xchg
adc
in
mov
xchg
or
pop
rcrl
out
ds
aas
add
jg
loope
test
fcmovnu
shl
mov
xchg
ds
in
das
into
cltd
icebp
les
pop
andb
scas
clc
test
cwtl
adc
les
mov
into
movsb
test
insb
adc
xchg
mov
cmpsl
sub
cmp
or
movsl
jge
push
ss
scas
mov
cmp
dec
ficoml
cmp
aaa
in
popf
jp
jle
lea
outsl
add
das
sub
and
sbb
sub
es
in
push
popf
and
adcl
repnz
push
pop
sub
hlt
shll
imul
push
inc
cmpsb
mov
repnz
and
aas
shrb
inc
adc
xor
mov
cwtl
pop
movsl
bound
fwait
xor
add
mov
sbb
jle
andl
test
ljmp
pop
inc
ss
or
dec
notl
into
insl
repz
pop
fistpl
jmp
rolb
fnsave
add
shlb
sbb
fildl
jae
and
xchg
mov
adc
ret
dec
ret
xor
fisubrs
call
sub
mov
popf
jns
sbb
ljmp
arpl
pop
pop
scas
and
mov
sbb
ja
sahf
lods
pop
push
sbbb
pop
js
xchg
mov
adc
and
popf
mov
xchg
dec
outsb
mulb
dec
mov
or
or
adc
inc
mov
or
mov
xor
inc
daa
xchg
fidivrl
jb
aam
cmp
clc
mov
cmp
jmp
mov
add
xchg
stos
les
sahf
lcall
and
mov
jae
rol
int
gs
fdivrs
cmp
sti
daa
arpl
and
or
das
xor
pusha
sub
out
jbe
scas
adc
scas
push
xlat
mov
sti
xchg
xlat
aas
dec
lahf
add
pop
movl
insb
out
arpl
test
adc
shl
pop
data16
icebp
mov
dec
inc
mov
xchg
es
cmpsb
xchg
fstl
xchg
sbb
aaa
ljmp
jb
xchg
es
addr16
popa
and
imul
add
stc
outsl
add
or
jge
add
in
pusha
add
mov
negb
pop
aam
ja
shlb
cmc
pop
mov
jb
mull
jb
gs
xchg
pop
orl
mov
mov
int
mov
pop
add
ror
leave
inc
sbb
call
or
aad
inc
push
dec
inc
inc
xor
cwtl
xor
ret
loop
xor
jns
add
push
inc
and
push
cmc
mov
dec
out
mov
pop
std
cltd
out
dec
fwait
add
add
sbb
aam
repnz
into
adc
xor
xchg
jle
aad
cs
leave
das
bound
ja
and
aas
lret
cld
ja
and
lret
popa
jp
mov
inc
xchg
movsb
mov
inc
popf
xchg
adc
arpl
and
or
pop
out
xor
loopne
lcall
leave
lock
xor
cs
iret
fmuls
lret
std
ljmp
aas
jecxz
cmp
mov
pop
je
pop
pushf
stos
pop
in
je
cltd
inc
push
iret
adc
cwtl
popa
rorl
cmp
or
pop
inc
nop
mov
and
ror
clc
xchg
jns
xchg
xorl
xor
out
adc
push
sub
fimuls
xlat
rclb
push
out
pop
and
and
pusha
aad
das
xor
hlt
cmp
cli
mov
xchg
cmpsl
jae
jmp
aam
lret
pop
aaa
mov
in
sbb
mov
enter
xchg
xchg
dec
or
sub
sbb
mov
or
aam
inc
inc
sbb
and
and
test
mov
mov
xor
adc
or
xchg
cmp
mov
mov
lods
out
fsub
push
mov
sbb
adc
cmpsb
fmuls
loope
cmp
pop
shlb
fs
lods
scas
or
mov
inc
or
jmp
sbb
stos
jg
xor
rclb
jge
dec
out
ds
test
dec
add
arpl
jbe
sub
imul
movsl
cmp
cs
xchg
mov
dec
dec
sub
lret
xor
xorl
jecxz
cmp
lds
sbb
xor
popa
mov
imul
loope
shlb
cmpsb
dec
xor
mov
add
xor
sub
pop
fcmove
lds
popl
dec
dec
pushl
push
fistps
sbb
hlt
div
mov
inc
mov
dec
xor
mov
push
dec
aaa
pusha
pusha
scas
sub
fcmovbe
dec
stos
sarl
sarl
iret
add
aam
inc
pushf
jo
or
sbb
xchg
jns
rcrb
dec
rcl
mov
xchg
shrb
mov
xchg
pop
icebp
dec
xchg
repz
xor
or
popa
xchg
jb
out
inc
pop
cmp
int3
and
add
ret
pushf
ret
lock
or
cmp
fdivrs
sbb
push
in
xchg
pop
std
ss
je
sbb
cmc
scas
loope
pushf
inc
sbb
cmp
jb
xor
xabort
stos
mov
sub
scas
mov
enter
mov
cmp
enter
xchg
add
jo
jne
xchg
fwait
imul
mov
lds
repnz
outsl
popa
stos
cld
aad
jg
sbbl
pop
aaa
rcrl
out
sbb
and
ja
int
lret
out
dec
mov
add
bound
test
fldcw
jl
cmp
dec
bound
dec
adc
push
add
sub
cmpsb
or
in
ret
xor
and
movsl
xor
ret
inc
sub
decl
mov
or
or
cmp
aaa
iret
imul
xchg
mov
adc
sub
xchg
gs
pop
mov
adc
jnp
fstps
mov
push
sub
mov
addl
adc
roll
scas
push
push
lea
or
jns
push
mov
mov
mov
cmpsl
rcrl
out
xlat
pop
pop
dec
add
adc
ja
jne
add
lcall
sub
or
mov
movsl
jecxz
push
sahf
and
push
ljmp
inc
dec
insl
cltd
inc
mov
ja
sbb
movsb
pop
pop
add
stc
sub
push
lods
fsubp
clc
fwait
shlb
arpl
mov
xor
push
mov
cltd
pop
mov
mov
roll
or
xchg
das
sbb
jle
and
adc
sbb
adc
pop
adc
or
pushf
lcall
test
aas
lahf
pop
xor
subb
mov
inc
mov
fcompl
dec
stos
sbb
mov
sub
es
ja
pop
repnz
mov
negb
es
stos
sbb
mov
inc
dec
mov
loope
leave
cmp
mov
cmp
ret
movsl
int3
or
adc
insb
fwait
lock
jo
test
les
or
mov
insb
mov
mov
leave
out
stos
push
ret
loop
sti
pop
test
mov
addr16
cmp
xchg
jmp
xchg
sub
adc
shll
sbbb
lock
je
mov
push
jg
popa
sub
add
into
jecxz
arpl
push
or
xor
jae
int3
xor
hlt
bound
rcr
outsl
mov
jp
push
movsl
push
push
add
insb
imul
mov
in
pop
cmp
mov
and
xor
push
push
mov
push
pusha
jbe
jmp
ret
repnz
fnstsw
add
dec
push
sbb
mov
mov
sti
dec
inc
in
mov
mov
fadd
push
and
cmpsb
dec
cmpb
scas
xchg
lret
arpl
arpl
rolb
push
out
scas
inc
push
lock
and
and
aad
daa
or
ja
faddl
hlt
repnz
cmpsb
jle
rclb
in
xlat
rorb
out
leave
dec
mov
fnsave
mov
jno
inc
inc
jmp
pushf
sub
outsb
lahf
push
dec
stc
adc
jecxz
xor
imul
push
jle
xchg
push
cld
loopne
mov
les
sbb
fwait
ds
jne
stos
jmp
cwtl
jns
call
movsb
mov
cmp
aaa
or
dec
popf
mov
icebp
loopne
cmp
xchg
push
sbb
addr16
andl
mov
aam
sub
lock
ljmp
lods
jno
jl
push
fs
mov
pop
push
xor
pop
or
loop
or
lcall
jbe
cmp
scas
and
shlb
imul
inc
pop
subb
sub
ficomps
test
push
mov
push
adc
push
xor
xchg
pop
jg
add
cmpl
inc
je
cmp
scas
dec
inc
pop
cvtps2pi
inc
loopne
lds
mov
pop
inc
lds
int
int
and
and
imul
mov
mov
icebp
aam
pop
addr16
stc
jp
stc
adc
cmp
ret
divl
mov
das
in
mov
std
ss
je
out
jge
dec
fildl
inc
cmp
das
push
cli
xchg
xchg
std
lcall
mov
pop
je
and
xchg
dec
and
xchg
ljmp
outsb
push
scas
add
lods
aaa
or
or
in
fists
mov
test
cwtl
mov
add
push
test
cmpsb
cmpsl
imul
mov
fstpt
dec
sbb
jge
shrl
leave
add
xor
mov
rclb
mov
cmpb
fbstp
ficoms
loop
fbld
pusha
fmuls
iret
push
mov
push
sahf
in
cmpl
stos
xchg
lahf
call
sub
jmp
pop
cmp
lret
xchg
xor
adc
arpl
or
inc
xchg
ds
in
inc
movsl
inc
cwtl
lahf
sbb
out
sub
iret
and
ret
aaa
popa
frstor
cmp
rcrb
lods
jae
and
aam
xchg
mov
push
and
ret
out
mov
lods
or
pop
in
xchg
mov
outsb
scas
xor
adc
cmpsl
mul
push
cli
pop
adc
sbb
addb
adc
jno
fsubs
push
in
out
shrl
mov
and
out
sarb
pop
cs
nop
dec
or
jns
or
daa
ds
loope
sub
mov
cmp
sbb
sbb
mov
cmp
mov
mov
or
or
ret
div
sti
scas
pushf
add
xchg
jae
jge
jb
sub
mov
sub
fisubrl
and
push
push
jno
dec
fiaddl
lods
push
ret
xchg
les
and
gs
sub
mov
pop
nop
mov
mov
icebp
or
jl
sbb
fists
cmpsb
ja
xchg
imul
out
inc
lahf
mov
mov
lcall
aam
jl
cmc
dec
mov
jmp
gs
pop
and
int
mov
loop
inc
arpl
fisttpl
pop
adc
loop
dec
or
mov
cmpsl
fst
aam
add
mov
mov
jno
or
lock
imul
std
ljmp
fcoml
jns
and
add
push
in
cmp
cld
nop
cld
xchg
addr16
adc
outsb
mov
push
call
xlat
repnz
mov
in
pop
aad
mov
push
out
test
add
pushf
test
nop
push
pop
mov
lods
fistpll
pusha
fdivrs
jmp
mov
movb
dec
cli
out
filds
cmp
mov
cmp
daa
dec
mov
inc
pop
or
push
dec
aam
in
bound
lahf
clc
sub
sarb
fs
popa
add
shlb
mov
or
inc
inc
inc
lods
inc
js
pop
int
sti
jo
cmpl
pushf
std
or
dec
push
out
pop
or
popf
dec
add
lahf
aam
lds
in
jno
push
int
sbb
movsb
decb
outsl
gs
popf
push
pop
cmpl
ljmp
mov
adc
fwait
nop
inc
jns
pop
push
jle
jb
loopne
sarb
sbb
fisubl
ljmp
push
jae
pop
filds
ja
push
fldt
adcl
pop
cwtl
fstps
pop
cmpl
out
add
mov
mov
cmp
inc
mov
dec
stos
ja
mov
fstps
lods
cs
dec
push
je
xchg
clc
nop
jg
test
xchg
jns
icebp
loopne
mov
hlt
outsl
data16
imul
icebp
cmpsl
scas
in
pop
jbe
pop
aam
xor
in
call
lret
cmpsb
push
rcll
xorl
cmp
leave
and
mov
mov
test
gs
xchg
stc
sbb
call
imul
mov
mov
pop
push
sbb
js
cmpl
call
in
xchg
test
sbb
lcall
sbb
dec
inc
sarb
adc
out
cwtl
cmp
cmp
outsl
ds
xchg
adcb
sbb
inc
cmp
pop
loop
push
push
jnp
mov
sbb
jb
imul
shrb
mov
les
pusha
ret
mov
push
out
sar
mov
mov
dec
out
pop
loopne
mov
xor
mov
cmp
add
push
push
jns
mov
cs
jmp
push
cmp
enter
inc
mov
loopne,pt
sub
imul
fwait
cmp
pop
add
jo
jnp
and
out
push
sti
mov
out
fxch
test
ror
loope
jae
xchg
ja
loopne
clc
cmp
inc
xor
cmp
lods
xor
int
mov
or
mov
shll
jp
sub
cmp
icebp
movsl
test
xor
cmp
mov
sub
pushf
pop
sub
loopnew
fadds
push
cltd
stc
and
mov
lret
and
cwtl
mov
mov
sub
daa
and
aaa
mov
mov
jecxz
cmp
cltd
popa
fisubrl
jo
cs
xor
inc
sbb
sbb
lock
hlt
xchg
adc
fists
jnp
xor
push
xchg
xlat
jbe
fstl
dec
loopne
cmc
push
popf
getsec
addr16
stc
fucom
pop
or
in
cmpsb
js
andl
data16
mov
push
ss
sbb
mov
push
cwtl
scas
cmc
loopne
xor
or
and
repnz
int3
lock
rolb
icebp
pop
lret
jg
das
pushf
movb
mov
mov
xor
bound
xchg
xchg
nop
mov
fs
pushf
jb
nop
loopne
mov
push
repnz
hlt
test
xor
sub
scas
call
scas
xor
leave
pop
or
xchg
mov
jmp
xlat
in
nop
sbb
xchg
dec
push
insb
mov
pusha
icebp
pop
aad
jle
cmp
adc
lods
sub
cmc
sub
xor
pop
movsb
pop
hlt
cltd
in
clc
fs
test
loopne
and
dec
pushf
xchg
loopne
push
iret
pop
repz
jne
mov
popf
mov
test
push
int
dec
std
stos
out
cmp
vpslld
lret
push
into
fs
xor
repz
mov
jae
movl
inc
push
jecxz
jge
mov
jae
dec
mov
dec
lret
mov
push
mov
sbb
cwtl
iret
ret
jo
mov
xorb
aaa
adc
outsb
or
and
push
pop
pushf
jmp
lds
das
jg
xor
mov
in
daa
cmp
xchg
das
aaa
ljmp
mov
lahf
cmpsl
adc
pusha
mov
pop
stos
cmp
stos
cltd
test
push
sbb
push
lcall
lods
mov
xor
push
imul
push
xchg
dec
push
cmp
idivl
sub
pop
loope
lods
mov
cmpsl
scas
push
jno
in
hlt
int
push
xor
pop
mov
pop
call
in
aad
xor
sub
js
mov
mov
ret
lock
lahf
xor
xor
out
aam
mov
cwtl
movsl
inc
pop
xor
cmp
in
fisubs
or
pop
mov
ljmp
in
push
fisttpl
in
cmp
fldl
insl
cli
loop
dec
cltd
push
push
dec
mov
popa
enter
jns
jp
push
lcall
jp
cmp
adc
imul
adc
shll
fdivl
shl
sti
leave
jecxz
fsub
mov
in
scas
lods
cld
gs
mov
inc
int
insl
dec
int
pop
xor
sub
dec
sub
mov
mov
test
jne
pop
pop
mov
out
xchg
in
dec
jb
sub
int3
xchg
stos
pop
jnp
xchg
in
jg
xor
dec
mov
je
movsb
push
jmp
dec
stc
adc
sub
pop
pop
faddl
push
lcall
mov
mov
stos
add
push
add
push
notl
fwait
mov
test
lret
call
and
imul
icebp
mov
popa
mov
enter
or
frstor
mov
jns
jae
sbb
arpl
push
ret
cmpsb
dec
cmpsb
xor
xchg
mov
fisttpll
out
jnp
pusha
rolb
mov
pop
pop
imul
aad
cmp
out
jmp
push
dec
es
add
cmp
sbb
add
out
dec
imul
sar
adcb
jle
pushf
insl
mov
in
stc
clc
addb
pop
dec
out
dec
mov
insl
cli
rcrb
sub
dec
test
dec
jg
mov
std
leave
sub
or
movsb
mov
fdivs
idiv
data16
sbb
mov
cld
add
call
cmp
push
add
dec
out
jge
jne
idivl
and
loopne
scas
push
mov
sbb
enter
pop
sti
sub
pop
xor
mov
push
adc
xor
vpsubusb
daa
adc
and
sbb
dec
xchg
ror
movsb
push
pop
sub
test
enter
cmp
jge
stos
sub
push
sub
adc
cmp
pop
sub
jae
push
ror
and
popf
dec
cmp
xorl
jp
xor
lahf
mov
bound
xchg
das
xor
sti
movsl
pushf
fsubr
inc
push
or
jg
inc
inc
lahf
call
jae
outsb
jb
je
lock
mov
rol
in
shlb
movsb
mov
adc
sbb
lock
xchg
inc
lea
and
mov
int
cmp
ljmp
ret
std
adc
and
jge
in
dec
mov
sbb
sub
xlat
cmp
in
inc
xchg
dec
loop
cli
test
inc
jmp
xor
pop
sbb
pop
lcall
xor
mov
pusha
outsb
adc
mov
outsb
jmp
mov
jnp
out
sbb
aas
fnstenv
add
adc
pop
cmpsl
loopne
dec
dec
rcrl
ds
pop
insb
dec
ljmp
ds
in
das
jne
mov
push
scas
or
jno
outsl
dec
jl
movsl
jmp
mov
or
sub
out
fwait
xchg
mov
mov
cmp
jmp
inc
xchg
jmp
mov
out
pop
and
ljmp
cmpsl
test
jb
dec
aas
aas
ret
cmp
and
push
cmc
push
iret
inc
mov
jg
ja
fdivl
clc
lock
mov
dec
cmp
ss
mov
mov
stc
xchg
add
push
loope
push
clc
jne
arpl
push
sbb
pop
cmpsb
jno
xchg
iret
xor
mov
sub
dec
pushl
fcmove
test
xlat
xchg
shlb
ds
ret
rorl
pop
mov
hlt
mov
adc
stos
scas
stc
leave
lea
jmp
orl
imul
leave
and
cwtl
fistl
dec
int3
in
mov
aas
fs
int3
mov
pop
xchg
inc
xchg
lahf
addr16
imul
test
js
mov
xor
cmp
ret
xor
ss
mov
and
test
adc
aam
mov
dec
inc
sbb
insl
sbb
lahf
mov
jae
xchg
pop
dec
js
in
fstps
sahf
fmuls
cmp
icebp
fisubs
jl
call
cmpsb
popf
sub
mov
add
les
repz
bound
mov
push
into
add
movsb
push
cld
hlt
pop
mov
pusha
jg
or
or
mov
mov
adc
cwtl
fisttpl
pop
push
add
cmp
adc
test
es
xor
lcall
iret
add
addr16
out
sub
sbb
in
hlt
loope
mov
xchg
sbb
test
filds
or
mov
mov
mov
cmc
mov
xor
jg
in
inc
jb
in
aam
mov
cmp
push
out
sub
out
mov
loope
push
lock
mov
into
dec
xor
inc
and
mov
push
sbb
mov
neg
stos
iret
mov
sti
cwtl
cmp
orps
fnstenv
fwait
sti
xor
cmp
xchg
clc
xor
popf
xor
inc
jae
and
jmp
mov
fs
out
dec
push
xchg
cmpsb
inc
mov
lahf
les
gs
shl
push
lcall
outsb
fisubrs
inc
inc
adc
rclb
enter
in
in
addr16
push
fucomip
aad
jle
cmpl
sti
and
lret
aad
cmc
insb
bound
adc
imul
adc
add
sbb
cmp
pop
mov
ds
xchg
lock
mov
adc
xchg
inc
leave
add
push
xchg
jmp
or
int3
icebp
mov
mov
xlat
jp
xlat
jns
lret
repnz
and
xor
mov
or
out
neg
in
pop
pop
lret
sub
xchg
outsl
jp
test
xchg
mov
cmp
push
daa
push
mov
mov
ficompl
mov
xchg
push
and
dec
shrl
ljmp
jnp
lods
aam
loop
mov
mov
in
mov
lods
add
jecxz
fsub
mov
lock
push
test
shll
pusha
sub
fnsetpm(287
in
add
fistl
std
std
fnstenv
insl
int
ljmp
fiadds
lret
bound
stos
and
lock
sub
fcomps
in
orb
xor
xchg
pop
aad
loopne
push
fisubrs
lret
std
mov
ss
ret
dec
in
or
fisubs
push
xor
lea
loope
lret
lea
lock
sub
inc
ret
or
push
pushf
rorl
imul
lea
push
dec
btc
popa
sbb
add
arpl
pop
ljmp
add
mov
ja
lock
mov
testb
out
add
xchg
leave
bound
mov
in
dec
cmp
repnz
fidivs
push
lret
cmc
in
pusha
fst
outsl
dec
or
inc
xor
out
or
inc
shl
sbb
cmp
outsl
adcb
data16
jecxz
inc
mov
daa
sub
movsl
mov
dec
mov
test
xor
dec
xlat
dec
scas
in
xchg
mov
add
mov
scas
sub
and
js
inc
aad
fnsave
push
movhps
das
mov
push
test
xchg
push
je
pushf
mov
xor
iret
cltd
mov
and
dec
enter
bound
cmp
adc
sub
jo
or
cmpb
pop
jl
movsb
stos
jns
loop
les
mov
js
mov
push
lea
ltr
and
mov
jnp
dec
loopne
xor
push
jo
inc
and
neg
cmpsb
inc
idiv
pusha
mov
loopne
data16
cmpsl
stos
test
outsl
push
push
xor
cmp
mov
gs
adc
mov
mov
test
fcomp
cmp
pop
cmpb
clc
sbb
push
mov
in
push
xchg
aam
enter
cld
stos
cmp
inc
repz
or
adc
ljmp
xor
pop
out
lock
pop
imul
and
out
pop
push
jnp
enter
clc
scas
movsl
rorl
push
fildll
mov
lea
cwtl
push
sbb
dec
aas
xor
dec
or
mov
sub
mov
cmp
mov
mov
push
mov
lret
jge
push
outsb
xor
push
js
jbe
mov
or
mov
mov
jge
scas
sti
and
sbb
add
je
inc
cltd
inc
lds
mov
jne
ljmp
jg
cmpl
test
outsl
scas
pop
fdecstp
jle
xchg
stos
aas
lea
inc
and
sbb
cmp
dec
jno
sub
xlat
repnz
push
xor
lock
sbb
loope
xchg
xacquire
sarl
fisttpll
js
xorl
or
mov
jp
sub
dec
xchg
fstpl
mov
mov
es
inc
push
jl
pop
mov
jp
adc
fldenv
fcomps
inc
icebp
inc
aas
push
into
pop
arpl
das
mov
mov
insb
andl
pop
je
lahf
jp
iret
xor
ss
pop
icebp
xor
pop
push
inc
rolb
scas
into
imul
mov
jns
fsubs
int3
aaa
shr
outsb
inc
xor
cmc
outsl
adc
loopne
sub
clc
mov
clc
into
pop
pop
push
fiaddl
xchg
repnz
mov
lret
inc
jb
aam
bound
in
mov
adc
bnd
xchg
fsts
inc
push
adc
or
pop
add
sbb
mov
js
fcompl
cmp
dec
and
cltd
inc
repnz
mov
es
pop
clc
jl
mov
mov
test
cltd
xchg
push
mov
aam
jno
insl
adc
rcrw
lods
dec
fcompl
push
sub
add
popf
mov
roll
mov
js
daa
jbe
mov
jb
push
test
leave
mov
repz
cmpsl
lahf
pushf
push
xchg
xor
data16
mov
xchg
aam
aad
leave
or
sub
out
add
sub
inc
bound
sbb
lods
mov
cli
mov
mov
push
shr
mov
outsb
pop
repnz
jmp
cli
inc
rorb
les
and
jge
in
filds
out
pop
fimull
lret
repz
roll
mov
gs
test
ss
pusha
packuswb
add
rolb
mov
shlb
fs
push
xchg
ror
sub
mov
sub
add
dec
push
lahf
and
call
jl
in
mov
mov
and
bound
test
rcrb
mov
xchg
xor
ficomps
jns
xor
ja
xor
in
jp
rcrb
loopne
ljmp
rclb
mov
mov
data16
outsl
jbe
push
jo
xchg
cmp
and
mov
mov
xlat
lea
mov
int3
and
mov
int3
or
add
cmp
loope
stc
lret
ret
mov
xchg
mov
iret
sar
sub
iret
add
aad
cmp
fs
pop
or
stc
fbstp
cli
scas
sub
ret
jl
cld
xchg
xor
scas
pop
mov
cld
xor
in
int
mov
add
sbb
pop
jl
je
or
lahf
lods
cmp
in
fisttps
push
inc
xchg
cmp
mov
das
push
pop
popf
xor
imul
fdivrl
jle
gs
mov
mov
mov
in
mov
inc
and
cmp
movsl
and
leave
xchg
xchg
nop
rcrb
mov
mov
popf
cmpl
loopne
in
test
icebp
mov
pop
add
mov
cmp
cmp
mov
lret
out
fdiv
xor
lods
ret
testb
inc
xchg
and
std
xchg
or
add
les
or
sbbb
std
aaa
cltd
xor
inc
push
aad
jo
scas
fwait
int
pop
ljmp
nop
pop
pop
shll
mov
aam
and
pushf
incb
xchg
cmpsl
adc
dec
dec
in
add
imul
jmp
ret
outsb
ljmp
mov
xor
testb
sar
dec
cmpb
and
or
aad
jl
call
push
or
into
and
and
jae
test
fstpl
sti
xchg
lods
fstpt
mov
inc
or
aaa
jge
add
jno
jmp
mov
nop
adc
or
fstl
sub
cmc
lds
inc
outsl
lahf
xchg
xchg
jg
test
faddl
pop
sub
dec
jb
push
enter
mov
ret
ret
sub
test
out
inc
dec
loop
aad
pop
jecxz
loope
or
neg
pop
add
je
jl
adc
cli
sarl
sbb
and
int3
dec
mov
test
iret
out
jmp
sbb
add
shll
lods
test
sbb
and
add
movsb
jno
push
out
jbe
cwtl
and
lahf
out
add
popl
xor
std
xor
cmp
ret
push
push
cmc
jecxz
mov
sub
xor
xlat
xchg
out
jle
popa
in
or
stos
out
jne
jns
xchg
mov
push
pop
lahf
data16
xchg
add
mov
popa
and
pop
sbb
sub
subb
loop
mov
imul
or
inc
das
mov
pop
sub
aaa
int3
xlat
jge
scas
mov
mov
sub
out
lods
frstor
inc
push
jne
sub
popa
inc
add
notb
cmpsl
adc
mov
cmpb
sub
sahf
dec
pop
cmc
enter
subb
mov
jno
sbb
js
xchg
std
or
sub
insb
xchg
sub
inc
insl
pushf
mov
loope
mov
data16
clc
js
repnz
or
push
ret
or
pop
dec
arpl
nop
sub
dec
jmp
sbb
fiaddl
pop
mov
push
xor
cmpsl
daa
into
pop
pop
jne
add
cmpsb
xor
lret
in
pop
xor
daa
cmp
shr
out
and
int3
pop
mov
sbb
sub
or
movsl
push
push
nop
mov
xor
inc
xchg
mov
sub
pop
sub
cs
cmp
sahf
aad
add
cltd
push
push
jecxz
sbb
dec
mov
mov
test
call
mov
into
inc
mov
xor
js
test
rcll
sub
jnp
dec
fildll
xchg
jne
sub
adc
mov
xor
xor
pop
add
push
ret
into
mov
ror
mov
repnz
push
pop
ror
scas
push
push
into
add
xor
cmp
negb
lcall
or
xchg
adc
sub
movsl
dec
cmp
xchg
inc
dec
sarb
out
push
out
ds
aam
in
or
dec
test
enter
cmpsl
test
mov
mov
pop
inc
int
lods
inc
movsb
test
out
pop
jge
mov
sbb
push
test
test
pop
mov
xor
movsb
in
icebp
fidivl
jo
jns
les
dec
rcl
addl
jne
mov
inc
in
add
fsubrs
rolb
jl
addr16
mov
cmp
imul
xor
inc
jnp
pop
xchg
or
mov
xchg
inc
push
sbb
shlb
cmp
xchg
add
push
repnz
push
inc
roll
mov
into
xor
mov
sbb
add
xor
add
sti
scas
int3
addr16
scas
push
mov
or
data16
xor
pop
xlat
lock
pushf
or
int
jecxz
cs
cld
pop
es
push
push
es
mov
in
jno
cmp
movsb
push
push
push
stc
cmp
sbb
scas
add
mov
pushf
xchg
sbb
jb
outsb
add
and
pop
rep
jno
pop
or
pop
int3
dec
test
lahf
xor
test
xchg
pop
bound
push
push
push
aas
jmp
scas
cmp
and
mov
int
mov
jge
ja
out
cmp
jb
in
jge
pop
sbb
mov
push
push
stos
pop
xchg
test
xchg
pop
sbb
jle
insb
mov
repnz
mov
push
xchg
dec
cmp
add
orl
jmp
fcmove
orl
and
or
shlb
fs
pop
aad
sub
fbld
iret
sbb
clc
xor
das
cmp
add
outsl
xchg
dec
or
xchg
ret
ret
mov
xor
shrb
nop
sbb
jecxz
mov
and
sbb
cli
cmp
iret
or
iret
cmpsl
in
push
xchg
pop
shl
jl
lret
gs
sub
loopne
insl
mov
mov
bound
mov
sub
nop
add
leave
inc
or
test
cmc
dec
add
jge
out
sbb
or
push
xchg
dec
sahf
add
xchg
int
enter
dec
cmpsl
lods
mov
jge
adc
sbb
ljmp
mov
fldt
loope
les
adcl
add
add
test
xchg
outsl
lret
cld
inc
mov
das
push
and
push
xor
gs
outsb
call
cmp
jno
fisttpl
jp
cli
data16
dec
mov
mov
outsb
mov
dec
outsl
push
and
sbb
inc
or
xchg
adcb
jge
cmp
push
loopne
and
cmp
leave
test
adcb
pop
ja
and
inc
leave
int3
sbb
push
nop
insb
rorl
or
in
pop
fcomi
or
dec
mov
in
test
in
mov
push
test
add
push
xor
std
push
pop
fs
lcall
into
sbb
stos
adc
nop
rcl
adc
inc
pushf
cmp
jle
push
loopne
lods
es
enter
mov
outsb
cwtl
mov
and
jl
xor
nop
cwtl
xchg
fmul
fcmovbe
jns
repz
lock
in
mov
sbb
inc
xchg
adc
pop
repnz
jo
pop
mov
push
inc
repz
lea
loop
sub
xor
les
mov
rorl
in
add
sub
or
mov
jns
int3
pop
pop
data16
scas
or
mov
sarl
hlt
sarb
addl
mov
inc
rorb
pop
fwait
and
jp
xchg
lods
dec
aas
popf
scas
jp
dec
jbe
xchg
in
paddd
cmp
mov
inc
stos
das
adc
xchg
mov
add
pop
xor
nop
sahf
imul
jbe
sbb
push
movsb
mov
xor
repz
mov
pushf
cmc
mov
sub
jne
ja
cmp
sub
xor
xchg
lret
sar
mov
sub
push
out
sti
inc
jp
lahf
imul
pop
xchg
inc
mov
orb
rclb
pusha
rclb
jge
js
adc
push
jl
ret
enter
dec
ja
js
push
or
or
sbb
inc
fnstcw
inc
icebp
mov
cmp
inc
test
push
xchg
sub
mov
cmc
and
test
xor
inc
int3
jmp
loopne
jmp
sbb
push
lods
mov
cli
xlat
add
mov
xchg
or
inc
and
jbe
sahf
scas
int3
fistpll
pusha
jmp
adc
bound
lods
inc
or
lock
stc
push
sbb
xor
into
jl
inc
sahf
or
mov
paddsw
lds
sarl
mov
xchg
push
push
lock
fdivrs
cmpsl
jl
inc
push
push
mov
push
test
cmc
lret
test
loop
es
or
clc
push
mov
movsl
pop
bswap
pop
jl
dec
cmp
dec
fbstp
pop
subl
mov
sbb
cmp
xchg
adc
push
cmpsl
repnz
in
cmp
jp
stc
push
fld
cmp
inc
shrb
push
call
rolb
adc
lcall
jmp
sub
adc
xor
cmp
rcrl
sbb
cmp
or
pusha
std
adc
xchg
iret
testl
lods
out
lret
xchg
xchg
dec
icebp
popa
cmp
or
call
std
mov
loop
pushf
sarb
cmc
daa
fcomps
arpl
insl
jae
xor
shl
push
sub
movsb
xor
and
lcall
sbb
jbe
cmpb
ss
pop
inc
push
and
insl
lods
xchg
imul
jecxz
jge
cmp
imull
fstpt
xchg
add
div
test
xchg
mov
sbb
ret
xchg
add
lahf
inc
xlat
rorl
cmpsb
divl
sub
fwait
icebp
xor
push
mov
js
push
push
adc
popf
call
iret
cwtl
sbb
or
sti
cmp
xchg
xor
inc
sar
mov
xor
xchg
dec
sbb
test
test
mov
jno
xor
cmp
cmpsl
cmp
cltd
pushf
mov
xor
mov
sbb
adcl
inc
xchg
jg
mov
adc
push
pop
shlb
push
clc
std
enter
lret
jnp
jo
fdiv
or
idivb
mov
add
mov
mov
push
jb
inc
mov
inc
popa
xchg
cs
stc
icebp
shll
or
dec
inc
and
mov
push
stos
xchg
maxps
test
ss
cmp
dec
sti
jnp
ja
pusha
xor
mov
xchg
lock
int
jmp
add
xor
fildl
push
aad
inc
jg
push
mov
ret
int
mov
xor
aaa
addl
filds
and
fadds
pop
outsl
aaa
jmp
jno
sub
mov
jne
mov
mov
aad
dec
lcall
adc
mov
mov
ret
add
out
sub
mov
push
and
movsb
pop
jecxz
shll
pop
pop
in
jno
and
cmp
rorl
leave
sahf
dec
fcmovne
in
cltd
cmp
bound
xchg
mov
ret
mov
push
push
xchg
push
stc
out
sub
sub
out
rcl
dec
add
cmp
inc
cltd
push
xor
xchg
lock
xchg
and
std
jmp
cmp
testl
fidivrs
in
add
xchg
or
cmpsb
lds
into
mov
jae
sub
mov
fcomi
and
ss
test
mov
push
imul
push
pop
fsubs
repnz
jmp
add
xchg
mov
outsl
adc
xor
arpl
insb
stc
daa
inc
test
sub
pop
flds
pusha
shlb
scas
dec
pop
push
xchg
adc
mov
cs
fs
sbb
outsb
jmp
or
cs
shrl
imul
bound
lds
cmc
mov
gs
inc
push
stos
scas
shll
and
dec
cld
mov
xchg
jl
and
insb
daa
push
adc
mov
sub
xor
pop
inc
dec
mov
loop
repz
and
in
xlat
jbe
mov
mov
leave
iret
fwait
leavew
xlat
push
iret
mov
dec
mov
xor
jl
and
mov
xor
bndstx
roll
test
addr16
xor
loop
lcall
xchg
in
sub
test
fildl
adc
or
and
inc
pop
mov
sub
inc
lods
jg
push
imul
fsubrp
sbb
out
cli
and
pop
jg
mov
test
xor
test
insb
in
cmovns
push
fs
lcall
push
loop
push
xor
push
std
hlt
in
push
mov
lods
fdivrs
add
pop
jl
popa
rcrl
xchg
movsb
pop
xor
and
sbb
mov
fldenv
mov
lods
lret
hlt
stos
jno,pn
in
push
fnstcw
xchg
outsb
rolb
daa
aas
inc
sbb
test
mov
pusha
int3
fisubrl
jnp
ljmp
cld
push
mov
or
les
pushf
sub
sub
mov
in
xchg
mov
pop
mov
mov
adc
jns
xchg
leave
lods
mov
lret
lret
and
sahf
jmp
dec
aam
lahf
imul
jp
adcl
xor
inc
cmp
add
push
jp
lret
adc
sub
xchg
iret
sbb
mov
in
loop
jge
fmuls
xor
jp
out
aad
enter
fistpll
ja
sub
mov
sub
loopne
jmp
cld
gs
ret
sub
sub
inc
fcmove
sbb
fistpl
loopne
jecxz
inc
and
cmc
std
sub
jl
outsb
test
jl
sbb
sbb
mov
test
outsb
shlb
jae
jno
push
lods
pop
test
stc
and
ljmp
inc
dec
add
push
outsb
add
mov
pusha
mov
daa
dec
insl
cmp
popf
sub
jbe
lods
jp
inc
push
ret
mov
lods
pop
ffreep
cmp
aaa
dec
push
cs
test
popa
adc
out
mov
mov
xchg
jecxz
jns
cmp
mov
aam
mov
cmc
inc
lret
loope
adc
and
fdivrp
push
enter
lds
jae
test
test
ficoml
cmp
cld
mov
adc
cwtl
ret
xchg
aam
push
arpl
popf
push
fistps
push
push
insl
jbe
sub
jl
pop
fs
in
cmpsl
aas
insl
lahf
loop
hlt
stos
dec
test
xchg
pusha
or
xchg
fdivrl
sub
test
mov
dec
xor
ret
stos
sbb
cltd
ds
dec
mov
imul
cwtl
dec
jne
aam
dec
call
mov
sbb
jnp
ret
int
cltd
out
scas
sub
sub
aas
sbb
inc
xor
push
cmp
scas
mov
lcall
dec
arpl
test
fdivr
adc
adc
lret
mov
test
add
cmpsb
xor
lea
inc
addb
adc
ficoml
les
test
aas
ret
or
push
cli
das
mov
nop
and
out
sbbb
mov
mov
imul
add
std
into
pop
dec
out
push
mov
xor
xchg
ss
aas
std
push
xor
mov
mov
inc
push
jbe
cld
adc
or
pop
aaa
hlt
mov
rorl
push
iret
dec
inc
dec
mov
das
pop
xchg
dec
fsqrt
ja
or
xchg
cli
leave
jno
lods
push
cld
mov
mov
lret
fistps
inc
xchg
shr
jbe
rorb
mov
or
adc
inc
add
adc
push
sbb
xchg
jp
shrl
leave
xchg
cmpsl
sbb
outsl
mov
inc
sub
xchg
sti
jmp
fs
stos
sahf
out
xchg
sub
inc
scas
lods
lret
iret
xchg
xchg
xor
sahf
sub
aad
pop
cld
dec
xchg
stos
lahf
cli
mov
dec
pop
in
loop
jae
xor
xchg
imul
pop
dec
cli
add
inc
incl
leave
jmp
add
in
adc
lret
lret
pop
gs
pop
idivl
repnz
es
xor
inc
mov
or
dec
sub
inc
xlat
push
adc
jle
and
in
mov
mov
js
mov
mov
icebp
sub
stos
jg
sub
or
ficoml
popf
dec
loop
stos
mov
mov
pop
stos
push
adcb
filds
jb
jb
xchg
cmp
neg
xchg
lods
add
inc
outsl
add
imul
test
jp
adc
push
pop
mov
rorb
cmc
and
add
in
mov
adc
mov
dec
dec
mov
inc
dec
jno
push
and
mov
xchg
scas
mov
sti
add
rorl
mov
sbb
fisubs
add
out
mov
push
mov
cmpsl
and
mov
lret
and
sbb
or
rclb
negb
pop
cmp
or
std
cmp
add
mov
popf
mov
clc
fistpll
nop
test
mov
cmp
mov
aad
mov
js
cmp
mov
ret
loope
and
popf
pop
repz
repz
mov
lock
and
mov
out
int3
inc
sub
idivb
pushf
mov
icebp
repnz
incb
lret
lods
lcall
mov
or
ss
inc
jno
sub
mov
mov
jl
popf
fsubrp
pop
xor
mov
shll
je
std
inc
jecxz
pop
add
dec
out
pusha
lret
xor
xlat
fmuls
fwait
sbb
hlt
xchg
out
sub
add
and
out
sarl
xchg
and
push
pushf
ja
movsb
or
in
sub
call
xor
test
scas
adc
rcl
dec
jg
test
pushf
pop
push
sbb
sbb
icebp
push
push
sahf
adc
shll
scas
inc
sub
xchg
and
lea
shl
and
sub
outsl
pusha
cmp
sbbb
test
add
push
lcall
cmp
shlb
xchg
sar
pop
in
sbb
pop
xchg
push
jns
add
leave
jle
je
ret
ss
out
push
add
movl
pop
lds
cmp
cld
in
outsb
mov
test
rorb
imul
jo
mov
xlat
pop
mov
outsl
fstp
sbb
int3
push
fistpll
xchg
scas
jb
hlt
mov
sub
cli
std
stos
mov
mov
ret
dec
sbb
ljmp
fisttpll
push
fidivl
pop
cmpsl
aad
add
rcrb
pop
cld
ret
ds
mov
ljmp
jmp
inc
rclb
xor
adc
pop
inc
pop
push
or
scas
mov
mov
daa
loopne
cmpb
into
adc
jp
addr16
push
loope
jne
or
loopne
inc
cwtl
xorb
mov
adc
push
enter
add
mov
popa
jmp
mov
into
sub
pop
sub
cmp
ds
scas
pop
lahf
mov
repnz
dec
mov
dec
cmp
gs
movsl
cmp
pop
dec
mov
push
lea
call
frstor
shlb
fsub
mov
dec
call
jmp
sub
imul
rcrb
mov
xchg
lahf
mov
lods
add
cli
pop
mov
mov
mov
in
bound
add
sbb
xor
bound
jnp
cs
jno
mov
cmpsl
sahf
xchg
xchg
aas
xor
fs
push
std
jb
dec
mov
mov
push
inc
or
cltd
add
mov
out
sub
and
mov
dec
push
or
movsl
and
enter
push
leave
push
xor
sub
jle
stos
sete
scas
jp
loop
inc
inc
xchg
into
pop
cmpxchg
adc
dec
inc
jns
sahf
lret
jbe
mov
adc
in
imul
pop
lret
pop
mov
incl
add
test
cmp
push
add
gs
and
fstp
call
xor
add
jb
jmp
sub
adc
mov
push
or
add
cmc
xor
shl
ror
ja
aad
lcall
adc
inc
pop
adc
xchg
insl
orl
fs
pop
push
leave
sub
sbb
lret
bound
fwait
mov
mov
adc
testb
leave
bound
enter
lret
mov
xor
cmc
pop
or
sbb
pop
pop
fsubrl
fs
pusha
sti
inc
inc
bound
or
lods
jge
call
test
add
mov
insl
cltd
add
cmc
mov
stos
mov
imul
jl
inc
mov
aam
sahf
fwait
aad
jbe
pop
push
dec
xlat
or
inc
lock
in
add
mov
mov
ds
jns
cmp
sbb
mov
mov
les
xor
mov
aad
in
jp
jl
pop
leave
push
xchg
lcall
sti
cwtl
jbe
sub
in
loope
push
pop
xchg
outsb
inc
push
cmpb
ja
pop
fisubs
mov
daa
fiadds
lods
add
outsl
xor
push
mov
jecxz
lds
pop
fistl
jbe
test
aaa
dec
mov
xchg
insb
cwtl
push
pop
or
dec
cmp
lret
sub
mov
das
cmp
jno
call
stc
loopne
dec
xchg
jmp
js
pop
add
xchg
jb
push
cmp
xchg
xchg
cmp
mov
stc
arpl
dec
cmp
xchg
scas
shll
sub
mov
cmpsl
push
gs
outsb
mov
gs
sbb
and
jne
les
test
lds
push
imul
jns
gs
movb
cmp
xor
pusha
clc
mov
xchg
shl
and
out
xchg
and
and
mov
movsb
and
jae
jge
xor
clc
iret
int3
push
pop
clc
cs
pop
pop
lcall
mov
scas
pop
xchg
std
mov
or
mov
dec
sub
outsl
lret
dec
sbb
call
push
testl
jnp
pop
enter
push
test
js
pop
inc
sub
push
fnstenv
xchg
inc
nop
fsubrs
test
pusha
or
lret
jae,pn
inc
enter
insb
jecxz
add
and
lret
out
and
fisubrl
pop
jo
inc
xor
mov
push
fidivs
pop
fwait
sbb
mov
or
cmp
inc
inc
mov
or
pop
dec
add
mov
nop
insl
adc
push
imul
pop
inc
mov
orl
xchg
es
movsl
push
inc
pop
and
fdivr
test
mov
mov
or
jnp
adc
into
cmpl
mov
ja,pt
lods
pop
add
or
cltd
dec
imul
pushf
jg
stos
mov
pop
add
add
ljmp
cs
in
xchg
add
mov
push
add
inc
pop
jge
xchg
popa
popf
mov
mov
stos
fiaddl
jg
mov
or
cmp
lret
add
cmpl
cmp
cmp
rcl
in
sub
sub
jmp
dec
xor
inc
cs
mov
lods
mov
xchg
add
and
jle
gs
mov
dec
movsb
pushf
inc
ret
mov
adc
sar
cmc
std
stc
pop
rolb
xchg
shrl
xchg
outsl
push
sti
in
cmp
adc
push
mul
mov
cmp
out
iret
dec
pusha
jecxz
fisubl
mov
xchg
addr16
das
mov
and
hlt
add
imul
cmp
ds
xchg
in
add
xchg
mov
dec
add
movsl
cmp
fs
mov
lcall
inc
aaa
cmp
jae
mov
pop
push
or
aaa
xor
ja
sub
jecxz
aas
movsl
jg
inc
push
mov
mov
sarl
dec
xchg
pop
push
lea
mov
ljmp
imul
ljmp
dec
cmp
inc
out
shll
jge
mov
or
ret
addr16
jmp
jo
sbb
cmp
xchg
movhlps
cli
inc
jp
out
test
mov
sbb
les
lret
fdivs
orl
clc
pop
jb
xor
xor
push
pop
jp
jne
xor
pop
aas
jns
js
adc
ja
bnd
jecxz
lods
sub
fcomps
jb
icebp
ljmp
shlb
cmp
jmp
dec
out
mov
lret
lods
rcrb
je
push
xchg
push
push
and
or
mov
push
dec
mov
and
dec
jnp
pop
mov
mov
mov
adc
push
rcr
aas
add
insb
mov
jle
shll
mov
cli
lea
jecxz
xor
pop
icebp
push
mov
fiaddl
xchg
adc
jno
icebp
jp
add
sbb
imul
aas
mov
add
test
dec
sbb
mov
sub
xor
push
arpl
fnstsw
xchg
fs
ficompl
movl
xchg
popa
xchg
or
inc
outsb
pop
mov
jnp
shll
ficoml
push
mov
inc
stos
outsl
jb
mov
imul
lret
das
xchg
cmp
mov
lds
lahf
mov
jle
in
cld
pop
mov
adc
add
mov
adc
xor
stos
in
ds
lea
call
cs
das
cwtl
addr16
imul
addl
aam
cmp
addb
sbb
dec
out
cmp
push
addr16
jb
popf
fst
in
mov
cmp
push
cmpl
and
ss
adc
in
inc
inc
mov
sub
repnz
aad
pop
mov
mov
jne
sbb
pop
add
jae
les
test
repnz
sub
movsb
cwtl
stc
inc
inc
inc
pop
pop
stc
cmp
or
pop
stos
sbb
push
pop
cld
push
jge
xor
xor
fimuls
sub
inc
int
mov
or
out
sub
cli
mov
cmc
lock
push
mov
iret
loope
dec
ljmp
mov
aad
into
mov
sub
sti
daa
movl
mov
in
mov
aaa
out
or
insb
mov
mov
xor
lcall
lods
in
outsl
xchg
gs
aad
jo
sub
add
push
lods
xor
test
iret
xor
pop
je
std
inc
dec
cmpsl
xor
test
sub
xchg
pop
test
movsb
mov
mov
mov
addr16
jp
sti
pop
add
sbb
les
rorb
push
cmp
lret
add
popf
stos
and
lret
shrb
scas
mov
mov
xchg
pop
inc
pusha
aad
adc
mov
lods
jg
test
gs
fbstp
and
add
int
bound
xor
scas
ss
push
xchg
mov
xor
ss
push
jne
dec
test
sbb
push
jbe
fs
negb
or
push
stos
daa
push
adc
or
xor
cmp
loope,pn
cmp
cld
mov
mov
scas
fadd
or
movsl
fstpl
pop
add
mov
shr
lock
cmc
xor
in
imul
arpl
and
mov
scas
test
jge
aad
xchg
sti
dec
cltd
test
jmp
mov
imul
and
jp
sub
jl
mov
jbe
lds
mov
pop
inc
sahf
lock
inc
mov
cmp
cmpsl
in
imul
cli
clc
call
loop
cld
xchg
dec
pop
and
mov
arpl
sahf
adc
jmp
fists
and
out
mov
xor
or
insb
pop
push
test
mov
xor
pop
xor
jge
addr16
popf
dec
popf
mov
dec
shll
cld
cmovb
cmp
xchg
fistpl
jnp
ss
orl
jle
pushl
fcoml
push
inc
and
inc
cwtl
seta
pop
xor
sahf
pop
inc
or
scas
adcl
jl
test
cltd
mov
mov
mov
incb
lahf
jmp
ja
add
push
and
add
sbb
inc
sub
testl
and
movsl
test
fnstsw
filds
aas
movsl
jno
iret
addr16
lret
es
ret
sbb
loope
push
scas
add
xchg
aas
jnp
xor
mov
cmp
call
int3
cld
cwtl
dec
mov
add
add
add
sbbl
mov
inc
xchg
or
and
mov
test
ss
jne
inc
repnz
sbb
sub
addr16
push
test
je
xlat
mov
leave
es
push
jmp
mov
cmp
cs
lds
and
aaa
xchg
aam
mov
imul
sbb
xor
scas
add
pop
adc
inc
jecxz
outsl
mov
cmpsb
aas
sub
sub
push
mov
pushf
pop
aam
push
scas
mov
mov
mov
and
and
xchg
hlt
dec
cmp
xchg
adc
fisttpll
cmp
stos
shrb
sub
cmp
popa
clc
mov
push
pop
int3
push
sbb
rcrl
or
test
sbb
sbb
in
sub
mov
jmp
and
inc
xchg
pop
das
les
sbb
jae
ljmp
in
daa
roll
and
push
daa
mov
int
sub
and
cli
out
push
ds
cmp
stc
mov
mov
add
lahf
xchg
ss
imul
mov
or
popa
punpckhdq
nop
dec
mov
or
sub
shr
inc
idivb
jne
and
add
test
mov
or
dec
mov
push
add
int3
inc
stos
xchg
in
dec
dec
lds
xchg
sub
xchg
cmpl
in
jne
lcall
xchg
bound
es
popf
xor
data16
cld
inc
xlat
xchg
fimuls
movsb
jl
mov
pop
lds
sbb
sub
sbb
popf
add
inc
aas
add
les
sahf
mov
mov
repnz
mov
sti
xor
lret
jmp
pop
cmp
stos
stos
inc
and
mov
mov
fs
out
sub
sub
pop
imul
mov
pop
data16
movsb
das
or
adc
push
stc
push
icebp
pop
pop
out
shll
lock
imul
cmp
dec
loop
adc
gs
fisubrs
insl
fidivrs
sub
mov
pop
jmp
mov
inc
dec
sub
mov
and
pop
xchg
fists
loope
xchg
mov
sbb
xchg
push
clc
shl
push
cmp
mov
xchg
jecxz
into
dec
mov
cltd
sub
jno
fists
es
pop
xchg
xor
adc
jge
xlat
or
mov
push
cmc
mov
ret
rorb
or
jle
pop
ja
rcrb
push
popa
cwtl
ds
mov
loopne
sub
mov
push
push
xchg
mov
jmp
mov
push
fimuls
mov
cwtl
jns
cmpb
idivl
xorl
mov
xchg
bound
into
ljmp
aam
ret
in
xchg
out
mov
cmp
push
lods
cmp
push
in
insl
dec
mov
data16
fidivl
rcl
out
shlb
xchg
jno
pop
mov
add
jo
mov
test
sub
js
inc
mov
sub
enter
inc
pop
aam
xchg
repz
aad
lahf
sbb
or
shlb
jmp
lods
inc
mov
xor
xor
aaa
fldl
and
aas
clc
pop
add
mov
add
pusha
lahf
sbbb
clc
xchg
and
cmc
sbb
adc
add
add
jb
jo
hlt
mov
jo
roll
iret
mov
jb
mov
add
sbb
cli
out
outsb
rolb
cmp
cmp
push
adc
pop
out
pop
data16
xorl
pop
bound
inc
xchg
mov
xchg
iret
push
jns
sti
or
xchg
jmp
add
loope
xlat
insb
in
jb
andl
loop
mov
test
out
je
adc
add
daa
xor
jl
pop
cmpsl
pop
jb
adc
call
repz
divl
sub
pop
cli
xor
repnz
or
sub
inc
out
adc
mov
int3
pop
pop
data16
jae
mov
je
xchg
or
pop
dec
sub
loope
add
adc
adc
das
push
fbstp
bound
mov
xchg
repnz
lea
test
je
add
or
sbb
pop
jns
add
add
int3
add
and
stos
pusha
mov
inc
pushf
pop
mov
mov
dec
in
shr
data16
out
lret
cltd
test
lret
xchg
adc
aas
outsb
xchg
fldt
icebp
enter
jp
pop
movsl
test
add
outsb
mov
test
popa
lea
xor
mov
fiadds
cld
aaa
je
ret
pop
out
adc
add
xchg
xchg
sub
push
mov
jmp
into
mov
das
jp
mov
push
aam
mov
cmp
xchg
arpl
pop
sub
sub
loope
dec
inc
push
adc
sbb
jl
je
xor
scas
cmp
jae
ret
xor
enter
ljmp
out
mov
cld
sti
dec
mov
sub
xchg
das
jp
inc
xor
xchg
xchg
mov
jo
push
push
loop
dec
push
add
mov
inc
jns
ficoms
bnd
int
pop
fwait
push
mov
cltd
data16
inc
jb
inc
inc
cltd
jno
mov
ret
cmpsb
push
int3
pop
mov
cmp
and
repz
mov
mov
mov
push
mov
loopne
mov
push
push
ja
mov
adc
sar
insl
xchg
cmp
adc
sbb
xor
inc
lret
push
jo
mov
push
push
xchg
mov
stos
dec
xchg
dec
sbb
inc
sub
pop
out
icebp
xor
stos
adc
xchg
pop
mov
sub
imull
cld
push
mov
or
leave
adc
or
int3
sub
sahf
cmc
test
jecxz
mov
pop
sti
push
cmp
mov
cwtl
dec
and
cmp
repz
out
sbb
xor
dec
ret
push
push
lock
mov
enter
cli
inc
inc
sbb
xchg
jb
and
clc
pop
pop
sti
mov
jno
mov
sub
or
sub
in
lods
or
jmp
jecxz
sbb
daa
test
imul
pop
or
or
enter
outsb
out
lret
ja
sub
pop
xor
mov
mov
inc
scas
lods
add
lea
leave
stc
xchg
scas
loope
mov
or
popf
adc
inc
sub
cmpsb
xorb
mov
lret
dec
push
fwait
insl
int3
pop
dec
xchg
and
fisubl
sub
jmp
cmp
pop
add
fnsave
sub
mov
mov
mov
xor
mov
xchg
xor
adc
aas
pushf
sahf
pop
dec
mov
dec
push
ret
lods
inc
adc
and
js
bound
addr16
fisubrs
adc
lods
out
cmpsb
test
out
lock
dec
push
mov
jle
adc
scas
cmp
outsl
and
lcall
or
pop
sbb
pop
out
inc
cwtl
push
inc
push
mov
xor
and
cmp
idivl
xlat
xchg
jecxz
mov
sub
call
push
call
aad
mov
mov
imul
push
lods
xchg
nop
push
lret
inc
pop
mov
std
pop
sub
sbb
adc
xchg
scas
mov
in
bound
push
mov
xor
out
mov
mov
out
mov
sub
push
fsubrs
xchg
stos
mov
nop
pusha
rorl
pop
lret
lcall
rcll
mov
xor
shrb
subl
push
cmp
or
jo
ret
stos
call
leave
cmp
ss
xor
mov
popa
and
negl
loope
push
es
pop
add
push
xor
aad
scas
icebp
rclb
jno
pop
xchg
ret
mov
inc
nop
xchg
insl
add
mov
sbb
enter
mov
xor
shrb
xorb
push
sub
cmp
mov
stos
xchg
xchg
pusha
in
cmp
cmp
mov
sbb
stos
outsb
mov
or
rcrl
adc
and
push
jle
and
dec
mov
nop
shrl
pop
loopne
cmc
xlat
mov
fs
and
jge
test
or
add
sbb
xchg
div
mov
fucomp
addr16
lods
std
cmc
xchg
and
sbb
or
bound
daa
or
arpl
or
cmp
mov
dec
dec
dec
xchg
mov
sti
pop
les
adc
jnp
out
in
icebp
inc
pop
roll
out
iret
xor
jne
mov
popa
lret
cmc
out
inc
lahf
sti
lods
dec
call
lcall
sbb
dec
xlat
into
mov
xchg
push
fildl
dec
xorl
sub
jo
mov
in
fiaddl
mov
fimull
ds
aad
lds
xor
jns
mov
lods
sub
inc
push
xchg
mov
pop
loope
jl
add
pop
push
and
aaa
into
scas
movsb
or
and
std
xor
jo
mov
dec
aaa
mov
jge
pop
and
jbe
aaa
inc
fiadds
dec
sbb
mov
pop
sbb
fildll
xchg
jmp
or
cmpsb
inc
mov
jne
cmp
scas
ret
push
les
sub
mov
mov
xor
or
ljmp
sbb
shl
xor
sbb
lds
lods
xor
adc
jle
inc
or
and
movl
xor
std
mov
cmp
mov
xor
xchg
iret
add
hlt
stc
imulb
mov
mov
inc
sbb
pop
mov
xlat
mov
xor
lds
fdivrs
mov
je
add
add
adc
fbld
stc
ss
pop
cmpsl
fucom
and
mov
int
mov
jp
fdivrl
loopne
mov
xchg
jecxz
je
sahf
or
push
sahf
sbb
jmp
push
add
cltd
mov
sub
pop
mov
clc
and
cmpsl
jl
cmp
pop
je
mov
cmp
xor
mov
jge
mov
popf
hlt
arpl
imul
jecxz
sti
mov
daa
jmp
jne
iret
inc
push
or
mov
sbb
ljmp
insl
test
add
aas
inc
mov
cmp
mov
cwtl
add
push
aam
or
mov
int
dec
mov
push
sub
movsl
xchg
cli
out
lods
sbb
iret
xchg
cmp
jb
dec
adc
aas
fstp
xchg
into
mov
lea
or
push
outsb
es
xchg
je
jl
dec
rolb
push
xchg
cmc
mov
js
mov
in
fistpl
mov
dec
dec
js
or
pop
arpl
jo
fdivrl
cmp
mov
mov
inc
repz
cmp
lahf
in
enter
push
pop
movsl
je
ficoms
inc
sub
sub
mov
mov
flds
lahf
mov
xchg
loopne
imulb
movsl
out
mov
inc
fs
adc
sti
dec
cs
xchg
push
dec
popf
nop
xchg
dec
daa
push
call
cs
mov
loop
sub
mov
inc
xorl
dec
cmp
dec
xor
adc
mov
in
dec
dec
lcall
enter
jge
mov
add
fwait
loopne
push
mov
jbe
outsl
test
jb
js
mov
popf
out
dec
mov
sbb
rcrl
mov
jp
xchg
pop
popf
int
out
fbstp
movsb
outsb
jle
test
bound
push
xchg
bound
loope
pop
add
cmp
aaa
leave
les
and
push
sbb
iret
lahf
je
and
sub
adc
xchg
fwait
lods
jmp
xchg
addb
cltd
sub
dec
aaa
int3
arpl
sbb
jg
je
push
shrl
sbb
add
insb
xor
les
addl
and
iret
jno
jne
ret
cli
and
and
and
lret
aaa
jle
or
out
jns
add
ja
outsb
idiv
movsl
icebp
insb
sbb
stos
jg
dec
sarb
mov
mov
xchg
insb
pop
xor
push
add
or
jp
adc
popf
jecxz
dec
ja
int
add
insl
das
sahf
das
xor
into
cltd
mov
xor
mov
in
adc
mov
xchg
jne
or
add
test
aaa
into
jne
mov
idivl
xor
mov
incb
lods
js
inc
das
jo
dec
outsl
pop
outsl
pop
adc
aaa
decb
mov
mov
ja
mov
push
fwait
dec
mov
lods
int3
dec
cmpsb
cmp
ljmp
stos
push
mov
call
popa
lret
or
mov
repz
push
nop
sbb
adc
pop
into
dec
clc
enter
add
mov
cmpsb
jmp
test
lcall
out
imul
ja
mov
xorl
addr16
lock
adc
mov
mov
cmp
test
psadbw
mov
dec
jb
mov
add
movsl
push
push
jbe
stos
in
fsub
in
and
cli
adc
xchg
fsubp
test
sbb
lods
outsb
lret
mov
mov
subl
shll
pop
jmp
xor
es
in
loope
jp
mov
addl
data16
mov
sbb
int
add
jle
in
or
bound
cmp
lret
mov
mov
fdivrl
jo
cli
enter
adc
sbb
push
std
pusha
mov
imul
dec
mov
call
mov
addr16
fnstsw
imul
adc
sti
mov
lods
out
js
test
pop
out
and
movsl
push
in
aas
jbe
or
in
push
cmc
sub
sbb
xchg
mov
into
aam
add
jmp
outsl
popa
jb
dec
pop
ljmp
jns
js
xchg
scas
sbb
mov
xor
cmp
jbe
sub
xchg
jo
mov
push
mov
or
lods
aam
lret
nop
cmc
sub
mov
rcl
mov
sbb
stos
in
rcrl
mov
and
mov
dec
push
adc
sbb
inc
loop
dec
push
mov
divl
jbe
and
mov
jle
cmpsb
insl
lcall
out
lea
int3
aas
mov
cmp
cmp
push
xchg
jo
roll
stos
adc
data16
sbb
daa
stos
push
pop
popl
push
adc
movsl
gs
icebp
outsl
mov
add
je
add
push
push
pop
mov
jae
inc
mov
mov
xor
outsb
inc
lock
xor
stc
fidivrs
jae
jne
aad
or
stos
mov
sarl
and
pop
popf
sbb
adcl
imul
mov
inc
fnstcw
cmc
add
xchg
mov
xchg
pop
pop
pop
arpl
xor
imul
mov
jg
sti
test
int3
push
dec
adc
mov
jno
xchg
ss
mov
inc
lcall
rolb
idivl
repnz
cld
rclb
cli
andl
js
xor
add
mov
inc
jge
push
in
push
lcall
out
sbb
push
sar
movsb
pop
mov
bound
mov
hlt
cmpsb
pop
movsl
inc
xchg
fcmovnbe
clc
push
xchg
mov
xor
add
fisubs
sub
sub
rcrl
cmpsb
sub
mov
or
xchg
int
fs
fsts
ds
fwait
push
aas
dec
andb
shlb
fsubrl
jl
mov
aam
imul
rcll
call
inc
ds
out
imul
mov
lea
sahf
int
lods
or
prefetch
loopne
mov
adc
rorl
out
or
dec
and
push
or
push
mov
pop
dec
cli
push
imul
sbb
in
fnstenv
adc
mov
rolb
adc
adc
outsl
rclb
sub
rcrb
jno
mov
sbb
add
xchg
and
icebp
out
xor
dec
loop
adcb
adc
mov
pop
lods
out
cwtl
add
mov
lret
test
gs
inc
mov
xor
call
pop
xlat
std
and
push
iret
in
stc
inc
stos
xor
jns
mov
test
lock
jmp
mov
mov
or
jg
or
pop
mov
aas
call
push
mov
pop
or
nop
jnp
and
pop
mov
mov
xchg
or
insl
out
in
lods
cltd
fists
xchg
mov
mov
inc
jbe
mov
pop
jg
cmpsl
fsubrl
repnz
jecxz
je
push
jo
mov
imul
dec
mov
int3
shrb
dec
push
dec
cmp
xchg
mov
out
dec
push
xor
cwtl
jne
mov
adc
fmul
ret
dec
jo
jns
popl
jno
hlt
cmp
ret
pop
mov
cmp
xchg
fcompl
jmp
jnp
pop
cmpsb
add
jns
shrl
fisttps
xor
inc
outsl
sarl
mov
jmp
int3
sub
and
mov
leave
lcall
mov
fs
js
pop
lret
and
cmp
pop
add
stos
and
icebp
aad
mov
sub
inc
xchg
fwait
int
inc
xchg
xlat
pop
out
stos
pop
aas
cmp
sub
pop
repz
or
push
cli
call
add
test
repz
xchg
jg
and
mov
in
test
fmul
andl
push
pushf
cmc
mull
cmp
xor
xchg
out
pusha
adc
outsl
mov
adc
repz
sbb
outsl
ficoms
in
mov
test
lcall
xchg
ret
lret
cmpl
cmpsb
mov
ja
or
mov
dec
mov
sub
jbe
mov
add
inc
lock
sarl
dec
ss
mov
fcomps
xor
shll
cmp
jae
pop
dec
inc
jns
les
fisttpl
push
mov
mov
ret
pop
or
inc
test
add
lret
lods
or
arpl
mov
inc
or
xor
add
dec
rcr
gs
jmp
and
sbb
call
add
xor
or
adc
xchg
aaa
lock
jmp
xchg
push
arpl
push
push
xchg
jp
add
and
iret
test
sub
sub
inc
out
shr
pop
cmp
shrb
jno
fbld
outsl
test
lcall
mov
icebp
or
in
in
jbe
xor
adc
cmp
enter
adc
jns
pop
pushf
shlb
inc
jnp
pop
jmp
stos
shlb
xor
xchg
es
dec
sub
xor
outsl
daa
jecxz
subl
add
cmp
fcomip
jge
movsb
aam
out
sub
dec
dec
test
lods
arpl
mov
fwait
jns
sbb
daa
pcmpgtb
shlb
sub
test
inc
popa
and
xlat
mov
jp
sbb
scas
push
add
fcomp
inc
stos
push
xchg
xor
inc
fcos
test
jecxz
jmp
or
cmp
or
jecxz
es
add
mov
and
jp
outsb
pop
fwait
fwait
inc
adc
ja
pop
fnstcw
xchg
ja
cld
call
stos
jnp
jne
pop
adc
in
jecxz
and
dec
add
jno
pop
cld
popf
push
mov
call
sbb
mov
xchg
sbb
js
fldcw
add
sti
rolb
add
lret
sub
cmpb
mov
mov
aam
sub
aaa
in
cmpsl
push
rcrb
sub
mov
iret
add
push
xor
negb
xor
repz
popa
jo
push
push
xchg
inc
cmpsb
aas
push
xor
loopne
shl
aam
xor
sti
aas
inc
enter
pusha
mov
push
aas
mov
lret
mov
or
lret
mov
mov
in
xchg
outsb
int
add
pop
and
mov
sbb
and
outsl
push
addb
and
sbb
mul
ret
imull
pop
lods
dec
push
stos
shr
cmp
inc
cmp
xchg
arpl
inc
inc
pop
add
loop
sarl
pmullw
sub
lahf
lahf
and
add
outsb
push
adc
xchg
xchg
add
sub
cmpsl
js
add
xor
xchg
bound
inc
notl
add
shll
inc
cltd
cmc
lahf
imul
shrb
pop
xor
das
xchg
cmc
les
sar
fdivrl
stc
cmc
mov
inc
jnp
stos
inc
pop
mov
enter
ljmp
repz
repnz
in
xchg
push
jg
leave
mov
mov
cltd
imul
in
push
in
jmp
cwtl
and
popa
jbe
int3
call
adc
lods
or
and
mov
ret
fnsave
rcrl
push
and
aam
xchg
push
push
and
adc
aas
and
lcall
push
fiadds
in
adc
std
or
sub
shl
push
movsb
scas
icebp
clc
sbb
int
cwtl
cli
rclb
movsb
add
inc
bound
xchg
mov
sahf
jnp
push
xchg
inc
pushf
mov
sbb
ret
nop
adc
lahf
cbtw
or
cmpsl
fwait
jmp
movb
sbb
cltd
testb
jmp
je
out
inc
int
clc
cmc
add
movsb
ljmp
pop
push
sbb
arpl
pop
jb
out
aam
dec
pusha
sti
mov
popf
shrl
cwtl
mov
push
nop
jmp
push
hlt
test
ljmp
cmp
cmp
add
jge
dec
jg
dec
push
stos
adc
js
mov
mov
rcrl
ret
lock
sbb
push
mov
test
cmp
xchg
xor
xor
ret
push
xchg
push
mov
mov
popa
testl
fistpl
and
add
mov
fisubl
inc
cmc
data16
inc
lahf
dec
mov
mov
cmpsl
push
pop
jp
fdivs
pop
pop
loope
ljmp
xchg
gs
clc
jg
daa
push
mov
fistl
jle
adcb
adc
adc
dec
or
ret
jno
out
in
int
cmc
add
xchg
jno
mov
imul
xor
jae
mov
gs
lods
lahf
daa
mov
pop
fldenv
in
cmp
mov
test
lods
pop
mov
in
push
mov
movsb
jmp
insb
push
movb
loopne
aam
add
jnp
xor
fimuls
push
pop
test
in
out
xchg
hlt
icebp
jmp
and
das
outsl
jp
pop
addr16
fisubrl
rcll
fisttpll
add
popf
xchg
push
mov
in
repz
pop
data16
mov
mov
call
pop
movb
lret
dec
mov
hlt
shr
cltd
xorb
das
cmp
aaa
hlt
add
sarl
pop
div
in
fiaddl
xchg
hlt
cwtl
xchg
inc
lock
add
mov
mov
outsl
jno
mov
xchg
lock
js
add
out
jnp
mov
cli
or
mov
add
mov
jo
sbb
lods
mov
and
mov
pop
das
xlat
cmpsb
adc
into
pop
test
in
ljmp
xor
mov
jne
loope
xchg
clc
leave
mov
jmp
xchg
out
and
push
xorb
inc
xchg
and
pop
into
pop
sub
mov
fcmovnbe
lea
xor
sahf
fcomps
xlat
in
mov
loop
xor
mov
repnz
les
xchg
xchg
mov
call
cmp
push
lods
popa
cmp
loope
xor
js
adc
adc
sub
mov
jbe
call
inc
adc
adcb
push
mov
test
lock
xchg
ss
mov
pop
and
sahf
dec
xchg
or
mov
xor
bound
dec
call
ud2
adc
test
ret
sbb
lret
sbb
cmp
in
ljmp
mov
sub
cmp
int
mov
cmp
adc
negb
cld
cmpsl
adc
std
xchg
shll
jecxz
push
movsb
lods
cs
cmc
xchg
jnp
lea
cld
xlat
sbb
test
lods
sub
and
jge
push
shll
lret
lods
hlt
mov
and
in
mov
outsb
pop
pop
insl
push
fsubrl
xor
std
xchg
cli
call
adc
movsl
mov
mov
mov
sub
dec
and
mov
mov
pop
adc
or
popf
pop
push
fldcw
enter
imul
push
cwtl
jle
inc
pop
popf
adc
push
ror
cmpl
test
es
or
bound
add
loop
ljmp
xchg
jno
sbb
inc
das
or
lret
xchg
scas
dec
jge
push
mov
leave
sbb
pushf
test
pop
enter
popa
cmp
adcb
fst
adcb
and
icebp
arpl
mov
insl
imul
lods
aas
loope
mov
sbb
cmp
mov
sub
sbb
and
mov
mov
adc
and
push
fcoml
dec
ds
sti
xchg
push
movsl
pop
testb
lods
pop
xor
jnp
inc
js
or
out
filds
push
fnstenv
int
fldl
invd
pushf
mov
aas
ret
jp
add
sbb
popf
cmc
or
xchg
lock
hlt
inc
fs
or
out
mov
clc
pop
lock
mov
sub
inc
mov
testl
mov
int3
dec
mov
cs
jge
add
pop
cs
inc
out
lahf
fwait
sbb
loop
rcll
mulb
or
sub
shll
subl
test
stc
test
inc
mov
in
push
pushf
jmp
cmp
pop
mov
loope
pop
push
mov
cmp
jo
movsb
cmpl
outsl
notb
sbb
xchg
aad
cmp
scas
sbb
pop
stos
rol
imull
je
mov
mov
imul
subb
js
cmp
shlb
add
clc
stc
pop
xor
add
es
in
dec
fstl
push
mov
xadd
ficoms
imul
xchg
sub
dec
push
cmp
and
negl
push
sub
call
inc
xor
adc
inc
imul
push
stc
push
imul
push
sbb
popf
gs
jecxz
xchg
jnp
lods
and
mov
cmp
or
out
dec
out
in
jg
cs
insb
notl
js
je
dec
sahf
hlt
xchg
scas
dec
mov
movsl
shlb
xchg
mov
movsb
and
pop
adc
dec
lods
inc
divb
scas
inc
push
xlat
push
cmp
loopne
xlat
scas
mov
out
push
fsubs
xlat
xchg
or
and
orb
es
daa
mov
or
inc
mov
test
push
inc
repnz
push
lods
cwtl
push
or
mov
cmp
xchg
insl
cld
sub
fcomps
fnstsw
adc
xchg
pop
rcrb
xor
add
std
in
paddsw
fistpl
dec
mov
notl
mov
push
push
inc
nop
adc
je
out
jns
lahf
pop
and
mov
subb
in
shlb
or
push
mov
pop
imul
in
scas
testl
lods
movsl
dec
add
jno
lahf
cmc
mov
in
pop
jne
xor
jno
dec
push
and
fs
lds
mov
pop
push
loope
test
mov
test
mov
mov
push
stos
push
sub
xchg
movsb
cltd
cmpsl
adc
dec
shl
push
push
dec
push
xchg
inc
call
push
mov
jmp
loope
leave
or
adc
cmp
test
mov
imul
sub
dec
add
inc
cmp
fisttpll
and
fstpt
mov
push
xchg
xor
cmp
jg
cmpsl
out
fs
sti
sbb
cwtl
add
cli
lods
out
inc
call
mov
dec
inc
sbb
xlat
cmp
mov
faddl
jecxz
pminsw
sub
ret
stos
ljmp
loop
inc
and
jbe
dec
jecxz,pt
test
mov
adc
mov
and
in
scas
add
mov
stc
mov
leave
cmc
pop
dec
pop
sbb
lock
mov
cmc
pop
rcrb
sub
xchg
fdivl
jecxz
jnp
jb
mov
lds
pop
sbb
dec
or
faddp
jbe
mov
ja
mov
pusha
jp
pop
stos
mov
inc
jecxz
mov
jle
incl
insb
mov
cwtl
xchg
xchg
test
data16
imul
fwait
aaa
pop
lds
movl
enter
loop
jb
sbb
mov
loopne
jl
cs
notb
dec
adcb
movsl
test
lea
dec
stos
inc
pop
lds
mov
push
je
jb
or
inc
jecxz
loop
xchg
jmp
pop
pop
xchg
movsb
pop
xchg
int
jae
or
bswap
daa
mov
aas
shlb
dec
xor
enter
inc
push
in
pmulhw
xchg
jge
xchg
sub
adc
das
lahf
or
stos
bnd
mov
push
aaa
mov
adc
out
test
fdivrs
test
push
outsl
scas
orb
adcl
into
rclb
push
adc
in
movd
push
xchg
mov
add
leave
sub
mov
movsl
incl
clc
stc
push
pop
jg
stos
cmp
xchg
gs
pop
ljmp
fadd
ljmp
add
out
mov
incl
push
sub
js
in
mov
lds
ret
idivl
xlat
mov
mov
sub
decb
add
cmp
lods
pushf
and
lahf
and
fstps
cmc
faddp
sbb
lock
insb
cld
or
push
and
daa
or
add
in
mov
pop
push
add
loope
fs
ds
test
cmpsb
repz
mov
in
frstor
and
jl
push
iret
rorb
fdivrs
jl
repz
popf
out
int
rcrb
js
mov
enter
pushf
rcll
pop
cmp
mov
shll
dec
mov
sbbb
mov
clc
mov
fistl
add
cmp
xchg
cmpsb
pop
lret
scas
addr16
mov
mov
inc
cld
jnp
jno
cmp
push
pop
aas
std
mov
push
jp
out
xchg
jbe
mov
sbb
cmp
iret
jne
xor
call
arpl
cs
lds
in
lods
es
inc
sar
xchg
rol
push
mov
push
aad
stc
addl
fdivrl
movb
push
sub
lea
pushf
dec
xchg
addl
stc
fld1
das
aaa
orl
push
cld
cmpsb
or
lcall
xchg
loope
add
inc
mov
sbb
mov
mov
loope
hlt
dec
mov
testl
loopne
adc
dec
dec
xor
jne
xor
ss
mov
data16
lcall
mov
int
lods
and
and
mov
test
mov
daa
push
mov
dec
cmpsl
xchg
mov
es
lret
add
lcall
dec
xorb
stos
mov
inc
or
scas
push
sbb
ja
mov
ss
xchg
movsl
dec
xchg
sbb
mov
insl
push
pop
push
sub
stc
lcall
jnp
push
xchg
xor
into
sbbb
into
shrl
jo
stos
rclb
in
sbb
jge
push
movsb
icebp
inc
sbb
test
loop
xorb
and
xchg
jg
jmp
out
ret
xor
push
sar
lock
into
bound
fsts
rol
jnp
stos
sbb
sbb
mov
int
mov
loope
xchg
jns
mov
aam
inc
and
fcomip
and
pop
or
jae
mov
lcall
dec
cmp
stos
scas
gs
lret
jae
mov
sbb
fs
sbb
mov
xorb
test
mov
aas
je
incb
daa
dec
pop
int
dec
into
ja
sub
daa
add
mov
sahf
fcoml
addr16
dec
lret
pop
stc
in
nop
sbb
mov
loope
out
inc
push
add
sbb
mov
stos
and
gs
sti
lahf
cli
fisubrs
sarl
cltd
gs
add
rcl
cli
xchg
popf
addr16
xchg
dec
test
pop
mov
dec
cmp
and
addr16
fldenv
into
inc
add
add
sti
call
scas
mov
ficoml
cltd
ficomps
ljmp
addr16
aad
push
fcoml
lods
hlt
xchg
sub
clc
lahf
mov
inc
xchg
ds
mov
ficoms
je
xor
pop
xchg
movsl
enter
stos
imul
xchg
or
xchg
nop
clc
in
xor
jg
add
ffree
push
and
pop
das
in
ret
lcall
iret
sbb
dec
aad
jl
outsl
stc
into
and
and
enter
cltd
aad
fcomps
lahf
popf
or
ljmp
push
lcall
lds
mov
call
cmc
ljmp
mov
xor
cmp
xchg
xor
sub
mov
ret
test
psrad
scas
fwait
ret
or
andl
or
or
mov
cmp
xor
inc
pop
jne
hlt
dec
roll
sti
fwait
enter
imul
mov
push
sbb
cli
sti
pop
test
les
and
sbb
add
rorl
jp
arpl
push
mov
inc
jle
ret
int3
das
or
stos
pop
jg
testb
pop
int3
fcompl
mov
or
or
gs
les
jecxz
popf
ds
cmp
aam
adc
mov
mov
pop
stc
cli
inc
mov
mov
push
das
push
mov
cmp
cwtl
popf
gs
xor
inc
xchg
loop
loope
xchg
and
push
outsb
das
sub
enter
jo
cmp
sbb
cmp
scas
aaa
adcl
dec
insl
or
mov
or
adc
std
xchg
or
cmp
popf
adc
in
mov
test
ds
movsb
mov
xor
sbb
in
xor
mov
sub
push
jg
aam
dec
add
lds
dec
jp
push
mov
xor
movsl
inc
iret
mov
mov
ret
les
jae
push
stos
pop
bound
xor
push
sub
and
rcrb
mov
sar
inc
cld
sub
mov
negl
jp
mov
stc
jp
sbbl
adc
jp
in
fs
mov
ss
mov
scas
fld
outsb
sub
test
into
push
fsubl
lcall
sbb
pushf
xchg
dec
xchg
mov
mov
les
aad
gs
add
aam
aaa
inc
push
pop
xchg
sbb
xor
sub
in
daa
adc
push
xchg
aas
sbb
dec
mov
gs
adc
mov
mov
movsb
mov
bound
sub
iret
xlat
movsb
mov
push
int
andl
arpl
adc
ds
stos
mov
movsb
xor
cs
jmp
adc
pop
scas
jno
xor
pop
jbe
xor
cmpl
mov
scas
mov
scas
push
mov
inc
xchg
mov
inc
inc
adcl
mov
xor
into
push
adc
pop
push
sbb
pusha
rcrb
push
nop
dec
out
xor
xor
fsubl
pop
jge
fcmovnu
ret
movsl
mov
lock
aam
scas
iret
inc
xchg
ja
pop
pop
mov
xchg
ljmp
or
push
xor
mov
pop
add
lods
pop
xchg
stos
scas
cmpsl
push
mov
inc
push
xor
cwtl
sti
and
cmp
and
bound
ret
ficoml
add
sbb
or
add
push
imul
mov
into
xor
outsl
jno
mov
xorb
jns
lret
xor
mov
cld
aas
jle
popa
sbb
popa
adcb
lret
loop
mov
push
faddp
out
sub
insb
ljmp
push
test
sbb
jnp
jmp
fisttpl
sub
pop
ret
and
inc
pusha
push
adc
test
mov
sbb
or
in
adc
sahf
test
bound
fwait
xor
xchg
pop
xchg
add
jle
test
inc
rcrl
popf
cmp
jno
add
and
and
cmp
sbb
xor
or
xchg
fistpll
pop
xor
repnz
dec
jb
loopne
pop
push
inc
xchg
test
jne
out
pop
out
push
adc
loop
mov
lea
lock
stos
dec
mov
xor
dec
out
sbbb
mov
sbb
mov
notb
adcb
inc
xchg
je
adc
mov
or
push
or
mov
aad
movsb
pop
sub
or
pop
sbb
push
in
xchg
sub
lret
jo
or
push
mov
push
fisubl
in
or
jmp
lods
pop
mov
mov
adc
clc
sbb
aaa
in
mov
xor
inc
addl
adc
push
sub
popa
xor
enter
loop
mov
movsb
push
imul
add
aaa
xor
sbb
stos
jmp
movsl
cmp
inc
and
dec
and
std
into
mov
sarl
push
pop
or
pop
fbstp
add
jo
in
add
sub
mov
je
lds
xor
inc
jo
dec
lea
add
dec
lods
js
mov
daa
int
loope
fcomps
adc
pusha
jge
sbbb
pusha
xor
or
or
push
sti
mov
mov
inc
inc
jecxz
inc
out
shrl
test
lods
xchg
mov
adc
data16
mov
cmp
add
jmp
scas
xor
mov
mov
test
gs
sub
xchg
cmp
inc
xlat
pop
aad
cmp
call
cmpl
jg
adc
repnz
jl
scas
cmpsl
mov
mov
mov
jb
mov
sbb
rcr
pop
push
xor
cli
enter
je
test
das
mov
ljmp
out
loop
xor
stc
clc
fwait
and
xchg
mov
test
push
rorb
add
ja
xor
hlt
sahf
pop
xchg
xchg
test
jns
inc
dec
push
jle
ljmp
jl
mov
testb
aam
dec
loopne
sarl
rorb
std
sbb
scas
mov
pop
mov
pop
data16
test
nop
mov
push
cmp
rcrb
pop
fists
jae
mov
fnsave
sub
jns
js
inc
dec
pop
push
loope
xorb
xchg
sub
int3
dec
push
cli
pcmpgtd
or
pusha
dec
xor
jg
push
sbb
mov
add
dec
pop
sub
xchg
mov
cld
or
sbb
rep
leave
pop
movsb
dec
in
or
mov
mov
xchg
push
xchg
outsl
rcll
add
add
rcrl
mov
les
stos
idiv
in
mov
outsl
ret
inc
xchg
test
jge
out
leave
push
and
add
fnstcw
outsl
mov
outsb
inc
mov
iret
popa
push
and
inc
sti
pop
push
in
dec
out
outsl
adc
push
fnstsw
setno
call
jp
shl
pop
rcrb
repnz
out
arpl
imul
call
cs
aam
js
add
mov
ret
rol
leave
cmpsl
sbb
call
mov
sbb
cmp
data16
mov
pop
in
test
jno
leave
lcall
pop
sub
add
fwait
sbb
fcmovne
dec
idivb
sub
add
sub
std
add
iret
hlt
fcmovnb
js
or
das
cmc
cmp
pslld
sahf
scas
outsl
mov
notb
scas
sub
aaa
xchg
cmp
outsb
cmp
outsb
daa
xchg
mov
mov
out
mov
in
ja
es
sub
jns
jmp
jb
jbe
jns
mov
subl
cmp
aas
cli
xchg
inc
xlat
xchg
and
int3
popf
js
clc
rol
idivl
jg
int
pusha
or
fs
lret
xchg
mov
adc
sub
mov
mov
or
jl
lret
adc
jg
xchg
je
adc
aam
stc
push
rcl
mull
repnz
sti
cwtl
jne
add
and
gs
mov
std
pop
sub
pusha
daa
loop
mov
push
leave
std
jb
mov
outsb
hlt
push
rclb
jg
leave
inc
sti
enter
sbb
lahf
lds
or
push
pop
add
push
add
shl
cmc
aad
mov
mov
fldt
cmpsl
les
xor
add
xchg
popf
sbb
movsl
ds
mov
jge
xor
mov
out
push
test
es
cli
mov
xlat
adc
jle
cmp
push
rolb
movsb
pop
cmp
jno
out
jno
and
je
es
mov
pop
pop
int3
and
shrb
mov
test
sahf
mov
outsl
jmp
fadds
fsubrp
cmp
and
hlt
xor
jmp
pop
mov
pop
push
ds
jecxz
add
lds
cs
mov
mov
insb
into
out
or
pop
mov
cmpsl
push
and
jo
sbb
pop
and
dec
rcll
aam
or
shll
outsl
jmp
sub
pop
jmp
sbb
ja
xchg
decl
mov
push
in
mov
sbb
dec
jge
mov
dec
stc
cmc
popf
nop
jecxz
sub
mov
dec
shll
and
fiaddl
cmp
out
mov
vsubpd
push
imul
xchg
pop
and
nop
ljmp
xchg
sub
test
sub
test
cltd
addl
lret
sbb
cmp
jns
and
ret
pop
shlb
jge
dec
xor
movsb
lret
popl
arpl
mov
mov
xor
fstpl
scas
cmp
mov
ret
bound
push
sub
mov
push
rcrb
sbb
adc
push
shl
and
stos
add
mov
inc
arpl
pop
jne
add
lret
add
sbb
mov
jge
mov
mov
shlb
lea
xor
scas
mov
jo
or
xor
or
insl
arpl
stc
roll
aas
addb
sub
inc
pop
mov
push
mov
pop
mov
dec
pop
and
pop
incb
enter
jp
push
pop
xchg
mov
pop
test
push
or
inc
mov
int3
dec
push
push
fadds
jns
and
andb
stos
xchg
adc
mov
or
jg
movsl
ret
push
pushf
sbb
jmp
xchg
push
jns
jns
push
cmp
pop
insl
lret
popf
pushf
cltd
cmp
lcall
jo
loop
daa
daa
jbe
mov
mov
jne
dec
mov
and
fidivrl
dec
movsb
imul
jnp
xor
lock
hlt
jae
aaa
outsl
in
ljmp
dec
stos
push
aas
ret
mov
and
insl
and
jbe
sbb
pop
mov
lock
movsb
mov
js
mov
dec
mov
mov
pop
fstpl
cmpsl
int
inc
hlt
adc
mov
ljmp
xor
xchg
sarb
int
into
push
pop
hlt
sbb
push
adc
jae
dec
std
pop
fiadds
sub
adcl
push
int
loop
and
jmp
xchg
inc
hlt
jno
shl
jmp
adc
nop
fcomps
insl
jge
gs
decb
int
push
orl
dec
and
flds
int
aam
minps
mov
sbbl
loope
mov
sub
leave
or
pop
sarl
inc
insb
mov
cltd
mov
pop
test
cmp
push
call
jl
push
fstpt
mov
push
inc
sti
into
ret
mov
xor
inc
dec
ret
movsl
scas
mov
mov
push
mov
out
out
fistl
xchg
in
push
push
aam
jnp
mov
sahf
hlt
dec
jo
nop
mov
jb
lods
adc
repnz
fidivrs
adc
or
les
mov
bound
fsts
sbbl
outsl
pop
push
push
shrd
lea
inc
data16
out
je
fcoms
mov
pop
cmp
ss
mov
lret
cwtl
sbb
xchg
xchg
out
repz
dec
cmpsb
test
cvtps2pi
xor
out
sahf
mov
push
inc
mov
push
ss
push
movsl
jnp
mov
sub
in
js
push
inc
cmpsl
sub
mov
cmp
jl
repz
pushf
std
lret
insl
shll
cwtl
sub
sbb
or
imul
out
lods
xor
out
imul
rcrb
xchg
push
xchg
adc
sub
push
jmp
jecxz
jp
mov
push
mov
lcall
xor
xor
sbb
fisubs
es
dec
shrl
cmpsb
arpl
mov
add
jl
jle
or
jg
aam
ja
outsl
mov
fcmovu
hlt
pop
push
and
adc
mov
adc
or
jno
arpl
rcrb
mov
imul
push
shll
cwtl
sbb
sub
jno
mov
in
mov
adc
loop
scas
xchg
mov
call
pop
inc
sti
adcl
push
lcall
icebp
jp
lret
sub
xor
fsub
mov
mov
jae
add
fcmovnu
imulb
xchg
stos
cmc
push
in
jmp
repz
ljmp
inc
test
cmp
cli
rorb
dec
inc
mov
jp
sti
pop
ret
js
loop
mov
inc
add
inc
inc
mov
lret
stc
jge
sbb
sbb
xchg
mov
sti
scas
cmp
sub
jmp
in
inc
adc
sbb
mov
orl
xchg
das
test
mov
push
pop
jo
iret
jbe
nop
fwait
loopne
insb
pop
sbb
add
stc
mov
mov
pop
pop
loop
push
fwait
xchg
dec
pushf
aas
shll
pop
or
add
lcall
adc
inc
fs
push
push
shl
push
or
push
nop
adc
rcrb
test
sbb
cmpsl
or
call
sub
mov
pop
sub
je
xor
and
xor
dec
mov
mov
adc
ss
cmp
mov
mov
test
stos
inc
cli
cmc
ja
dec
cmp
add
xor
push
mul
mov
ds
rolb
mov
pop
fadd
inc
fidivrs
aad
jne
sub
sbb
and
fsts
and
push
addr16
daa
dec
out
dec
lret
pop
jnp
fists
and
and
rcrb
iret
test
lds
shlb
mov
and
mov
mov
cmp
scas
les
je
or
sbb
mov
jp
icebp
test
sahf
and
cwtl
subl
mov
into
lret
xorl
icebp
inc
popf
push
pop
mov
cmpsl
push
lds
mov
cld
aad
inc
dec
mov
push
test
nop
filds
mov
dec
imul
xchg
or
sub
cwtl
mov
push
mov
sub
add
in
test
xchg
fnstsw
xorb
scas
adc
cmp
or
inc
scas
and
mov
jo
add
xchg
and
stos
pop
or
mov
jle
mov
and
push
call
dec
xlat
out
shll
xchg
cld
imul
mov
cmp
mov
mov
jmp
outsb
push
ret
pop
mov
and
or
adc
jno
adc
xchg
test
sbb
lds
xor
sub
cmp
lea
ja
jne
fistl
xor
xchg
sarl
adc
xor
daa
ds
addr16
sub
daa
or
sub
pop
aas
repz
xchg
push
aaa
scas
cmp
lahf
mull
pop
adc
jnp
int3
jb
mov
adc
lods
mov
mov
repnz
fs
mov
adc
scas
lahf
fldcw
mov
aas
xchg
outsl
jae
cltd
jae
fmull
dec
je
imul
pop
or
push
cmp
cmpsb
and
or
les
cmp
daa
dec
mov
loope
rolb
xchg
ret
xchg
sbb
mov
mov
andl
push
enter
outsb
sbb
mov
movsl
push
js
aam
shll
mov
cmp
adc
shll
ss
addr16
imul
in
enter
lods
xchg
loope
shlb
cmp
adc
mov
daa
or
out
mov
je
mov
cmpsl
rol
bound
in
lods
mov
or
cltd
xor
fldenv
lods
xchg
inc
fadd
push
sbb
add
xchg
xor
out
jmp
fisttps
pop
pop
sub
inc
idiv
pop
xchg
sbb
popa
fldcw
xchg
out
or
imul
fisttpll
add
or
or
ljmp
into
pop
dec
nop
scas
pop
insl
or
iret
inc
push
test
lcall
mov
xor
jnp
push
push
push
andl
adc
lahf
push
or
lcall
mov
pop
fmuls
cmp
pop
lret
aam
xor
xor
adc
mov
xor
inc
in
fimull
jb
lea
iret
jg
cmp
jcxz,pt
dec
ds
xor
push
cmp
addps
and
xchg
fiaddl
shl
and
movsb
shlb
xchg
mov
jns
mov
int
inc
rorb
pop
divb
mov
inc
int3
movsl
mov
pop
fidivrl
xchg
ret
cmc
pop
data16
das
movsl
aaa
jns
fldenv
add
popa
stos
shlb
fildll
scas
int3
jno
push
mov
pop
stc
sub
pop
es
gs
xor
mov
hlt
jns
jno
xor
loope
jne
insl
cmp
cmp
repnz
jno
je
cmpsl
in
push
dec
insl
sbb
int3
lret
adc
mov
xor
sub
rorl
fimuls
imul
outsl
adc
fidivrl
mov
pusha
xor
jle
stos
iret
mov
mov
in
mov
int3
in
mov
xor
insb
jmp
pop
in
int
push
shlb
xchg
rcrb
inc
xchg
or
xchg
orb
and
arpl
cltd
popf
sbb
sahf
xchg
fstpt
and
push
mov
pop
adc
push
jbe
mov
leave
out
aaa
loop
das
aaa
nop
movsl
rcrl
adc
icebp
push
hlt
hlt
xor
popa
ss
sub
cmp
pop
repnz
xchg
mov
pop
or
push
cltd
xchg
xchg
rcrb
pop
pop
int
dec
stos
je
fnstsw
xor
cmp
sub
jecxz
inc
ljmp
sahf
cltd
adc
js
xor
sub
xchg
adc
xchg
mov
in
xchg
push
dec
popa
and
cmc
shll
xchg
adc
mov
adc
aaa
bound
mov
and
mov
push
sbb
test
pop
pop
jmp
jle
xchg
sbb
jbe
or
fidivl
xchg
cmp
icebp
in
jae
ja
popf
lock
and
data16
mov
sbb
rorl
outsl
es
mov
sub
repz
pushf
add
in
dec
or
jo
jns
dec
jle
imul
ficompl
and
test
loopne
mov
fisttps
ss
dec
pop
mov
or
out
cmpsl
mov
cld
xchg
aas
xor
sub
ss
push
jp
out
jp
shll
jp
mov
cmpb
push
fimuls
and
push
popf
nop
out
cmpl
leave
fidivs
lret
mov
mov
mov
decb
push
push
jbe
sar
lods
cmp
iret
shr
ret
xchg
je
pop
push
xor
jbe
imul
sbb
cmp
and
cmp
mov
mov
cmpsl
add
xlat
lret
mov
mov
push
outsl
inc
mov
daa
pop
or
mov
xacquire
hlt
fwait
cltd
aaa
jnp
jae
fidivs
test
fisubrl
dec
push
ror
into
pop
loopne
aad
ds
addb
mov
pop
dec
in
enter
add
xor
push
mul
mov
mov
cmpsb
xor
cmpsb
insl
leave
fwait
jle
or
xlat
dec
mov
jo
leave
shrl
cld
inc
jae
popa
xor
mov
mov
pusha
ja
clc
cmp
mov
sub
xchg
imul
jg
int
dec
adc
cwtl
fcoms
mov
call
inc
cs
cld
daa
mov
icebp
push
filds
ss
sbb
les
pop
addb
insl
jnp
loope
and
dec
outsb
pop
dec
cld
cmp
es
addb
dec
sub
cmp
sbb
sub
in
aad
jg
test
sbb
pop
out
jnp
sbb
test
pop
stos
nop
and
sub
mov
cli
std
pop
mull
cmp
xchg
bound
inc
jbe
andl
test
shlb
fisttpl
scas
popa
pusha
xor
das
jne
jp
popa
dec
imulb
dec
jbe
inc
out
and
mov
dec
jmp
push
and
lret
js
dec
mov
lcall
dec
add
jno
mov
movsl
cmp
mov
pop
fidivrs
cld
aad
mov
lahf
mov
scas
les
das
jno
shrb
cmp
iret
pop
or
lea
jle
mov
ficoml
xchg
jbe
popa
push
adc
aas
xor
push
cs
xor
cmp
or
push
jne
mov
or
and
jge
cmpsl
or
rcll
cmp
or
call
xchg
pop
mov
stos
xchg
mov
pop
fmuls
pop
lcall
sti
xchg
xor
int3
std
in
pop
out
dec
insl
lods
pop
mov
cli
outsb
sbb
insb
mov
sub
sti
mov
jns
fwait
mov
sbb
pop
jle
push
mull
sbb
push
enter
inc
rep
sub
insl
mov
jmp
mov
into
iret
clc
sbb
je
pusha
xchg
cmp
adcb
js
popf
add
and
xchg
mov
mov
sub
stc
lea
aaa
cltd
dec
hlt
mov
aam
jecxz
lcall
sub
loope
in
movsl
mov
clc
lcall
xor
inc
outsl
int
jb
pop
loopne
cmp
mov
lock
cmpsl
mov
mov
div
pop
push
jns
dec
sbb
jns
mov
clc
movsb
cwtl
and
movsb
pop
sbb
mov
mov
dec
inc
push
repnz
pop
movsl
lods
push
in
xchg
inc
jne
mov
sub
lds
push
imul
mov
or
xchg
push
inc
push
jnp
jnp
not
add
adc
test
pop
pop
bnd
mov
pop
out
add
mov
ds
daa
pop
cs
nop
pop
pop
mull
stc
xchg
pushf
cltd
je
ret
movsb
pop
adc
sbb
inc
adc
sub
scas
and
sub
enter
sbb
in
pop
xor
add
cwtl
push
adc
inc
sahf
pop
xor
lods
loop
in
popf
inc
mov
pop
stos
xchg
insl
pop
movsl
sub
imull
xchg
push
jns
fistps
sbb
mov
mov
add
test
pop
xor
inc
pop
dec
in
gs
in
fisubs
cwtl
pop
outsl
js
int3
sbb
mov
jp
push
insb
mov
pop
aad
aad
call
adcl
aad
notl
push
add
mov
aas
mov
pushf
add
imul
fiadds
jmp
sbb
mov
and
movsb
js
or
mov
inc
or
mov
jp
cmpsb
je
inc
lahf
ret
scas
fldcw
jae
arpl
ret
dec
div
sti
xchg
xchg
shrb
mov
xor
pushf
push
div
adc
and
in
adc
add
lret
cld
cwtl
jo
pop
je
scas
sbb
jns
dec
fwait
es
lcall
jp
mov
sub
sbb
sbb
or
mov
mov
cli
popf
jno
ret
xlat
lcall
pop
mov
mov
gs
mov
push
es
xor
mov
test
icebp
mov
into
push
mov
nop
adc
push
mov
ret
mov
and
push
arpl
adc
sub
inc
in
mov
mov
imul
lock
jns
adc
add
inc
push
mov
out
shll
in
jge
mov
xchg
aaa
cmpb
testl
and
push
mov
cltd
ljmp
test
inc
or
jne
jns
in
dec
mov
into
pop
add
dec
lea
mov
out
icebp
rorl
insb
mov
cmc
loope
xchg
mov
mov
inc
scas
les
mov
mov
push
daa
out
cmp
sbb
push
addb
pop
mov
cs
mov
sbb
xlat
jae
repnz
fisttpll
test
jge
imul
xchg
loope
xlat
call
add
arpl
mov
sub
xacquire
push
cmp
fnstsw
stos
arpl
int
jnp
xchg
in
out
mov
jecxz
rolb
call
sub
int
cmp
adc
cs
insb
in
cmpsl
mov
in
ret
lret
push
nop
out
sbb
bound
mov
jge
rorl
add
jns
push
ret
scas
int
mov
or
mov
stc
adc
aas
adc
fcoms
dec
in
cmpsl
jo,pn
cmpsb
mov
movsl
movsbl
into
rolb
lahf
jmp
pop
dec
push
cli
xor
add
xchg
and
sub
pushf
roll
push
cltd
adc
dec
sahf
mov
xor
or
imul
push
xchg
sub
jo
and
sub
xor
mov
adc
xchg
mov
sti
pushf
sub
add
rcr
xchg
adc
sbbl
insb
jmp
cmp
xor
jb
mov
in
mov
insb
aaa
aad
icebp
pop
pusha
cmp
push
push
clc
out
sbb
outsl
mov
mov
movsb
lock
icebp
shrl
inc
gs
addr16
push
xchg
mov
jb
inc
movsb
hlt
mov
or
cmp
les
stos
fists
lock
jmp
orl
pop
mov
push
cmp
lods
fwait
lret
dec
pusha
ret
sub
in
dec
and
xor
sbb
stos
push
mov
adc
mov
icebp
fidivl
mov
mov
mov
adc
push
dec
mov
jmp
in
add
mov
or
push
lods
jmp
int3
imul
lock
clc
loopne
dec
rcll
lsl
imul
push
std
jecxz
inc
sub
sbb
movsb
rolb
mov
sub
fidivrl
xlat
inc
dec
lods
xchg
jo
int3
and
jne
orl
pop
in
jmp
in
loopne
mov
loopne
scas
dec
arpl
ja
xor
xor
in
fwait
mov
repz
adc
sbbl
leave
pop
lods
and
dec
or
sub
stc
ljmp
js
jns
shrl
addr16
xchg
mov
and
mov
cmp
xchg
mov
icebp
adc
jl
sahf
ret
fwait
add
sti
mov
sti
adc
cmp
scas
sub
pop
jns
leave
add
jg
fdivrl
iret
popa
push
fwait
pop
pop
inc
mov
and
scas
es
push
fs
mov
xchg
scas
mov
mov
mov
inc
mov
add
xchg
imul
call
scas
and
cld
scas
rol
cmc
pop
pop
and
popf
lret
pop
mov
clc
push
rcll
iret
and
push
in
or
ret
lret
sub
test
jmp
shlb
iret
jg
dec
xor
adc
lahf
adc
orb
fildll
lret
inc
popf
sbb
pop
adc
and
mov
adc
add
sub
das
dec
mov
jo
insl
push
mov
sub
jp
adc
test
jns
and
fs
jg
add
pop
ljmp
pop
xchg
push
push
jae
aas
mov
lods
xchg
mov
fs
push
imul
dec
jl
aam
icebp
out
add
add
add
push
sahf
int
insl
and
xchg
dec
pop
inc
dec
mov
or
adc
inc
ss
push
sbb
xorl
or
lcall
jp
mov
roll
aam
jge
js
in
sbb
rolb
leave
xor
inc
push
push
scas
sarl
mov
outsb
lret
inc
push
inc
sbb
test
call
cmp
mov
insb
fs
dec
xor
inc
push
mov
lcall
lock
lods
jecxz
sbb
dec
data16
dec
mov
sub
cmp
mov
jno
add
pop
or
jno
je
addr16
es
sti
call
inc
das
inc
jns
pop
push
adc
subb
jge
icebp
cs
or
in
test
repnz
adc
jmp
cmp
in
add
adc
int3
daa
cmp
xlat
mov
jns
xchg
fists
ret
in
dec
movsl
xor
mov
mov
or
cmp
or
push
incb
pop
ss
jg
je
pop
dec
push
in
ja
add
mov
fwait
das
mov
xor
cli
pop
push
pop
add
sar
sub
mov
insl
pushf
fsubl
clc
jb
lret
pop
xchg
add
push
mov
dec
test
into
sbb
mov
lahf
dec
cltd
cli
inc
mov
fimull
repz
cmp
mov
aam
and
push
aad
lods
fwait
mov
pushf
in
xchg
cld
lahf
subl
add
mov
out
pop
mov
adc
ja
jnp
adc
mov
add
push
pop
or
test
mov
cmp
add
pop
mov
movsb
in
and
sbb
cli
cmpb
pop
pop
rcrb
stos
aas
in
ficompl
mov
xor
cmc
pop
repz
xor
das
and
and
xor
iret
adc
or
push
push
rcrb
mov
das
sub
mov
stos
data16
lea
pop
adc
pushf
sbb
jno
mov
das
lods
jp
dec
fldt
mov
push
les
dec
int
out
adc
aas
pusha
in
sbb
addb
testl
xor
push
mov
add
in
js
dec
jo
faddl
js
out
fisttpll
xor
inc
roll
cwtl
xchg
iret
dec
aam
xor
push
popa
cmp
fcomip
sbb
sub
loope
out
or
dec
in
lahf
or
dec
or
loopne
cmpsb
jmp
sub
insb
daa
xchg
outsl
fimuls
lods
es
add
push
ret
in
lret
leave
imul
rol
les
jle
aad
inc
cmp
rcrl
mov
dec
jle
and
pusha
mov
dec
jmp
push
daa
dec
fildl
leave
repnz
dec
test
adc
mov
cmp
push
adc
lret
mov
ret
in
adc
mov
ljmp
repnz
cmp
test
mov
lods
loop
das
je
mov
or
sahf
popf
cmp
jnp
inc
jne
pop
mov
into
or
dec
int
call
add
lcall
and
lea
mov
or
les
push
inc
push
sub
inc
sahf
mov
jno
lock
add
insl
es
in
and
and
jne
xor
loopne
lret
xchg
ds
add
mov
sub
stos
in
fisttpll
mov
inc
fcom
js
test
add
std
loope
cltd
mov
add
jne
push
loop
push
addb
xchg
add
cs
out
hlt
je
xor
or
arpl
push
jne
lcall
mov
les
sub
adc
add
lea
cwtl
push
pop
fsts
mov
cmp
push
clc
jns
push
add
scas
jbe
ret
outsb
dec
and
push
push
mov
sub
mov
and
sti
jmp
push
or
jo
inc
dec
jno,pn
pop
in
jno
int
xchg
sub
xchg
int
loop
out
jae
pop
sti
insl
es
test
sbb
cmpsl
push
jmp
movsl
jecxz
divl
lock
xlat
fdivr
sti
inc
hlt
arpl
sbb
mov
pushf
mov
adc
es
sbb
mov
ljmp
push
or
or
mov
jg
cmp
lret
in
or
mov
mov
scas
call
jbe
adc
addr16
ss
mov
subb
sbb
cmc
cs
test
aaa
adc
jne
mov
hlt
fwait
mov
jp
jle
iret
mov
mov
in
mov
idiv
mov
data16
add
fcoms
test
cmp
cltd
mov
mov
xchg
sahf
lea
mov
jb
clc
out
cmp
ret
cmp
rcrb
sub
mov
cli
mov
loopne
scas
push
mov
aam
negb
or
push
nop
push
mov
fistpl
adc
stos
or
cmp
addr16
jo
fmulp
dec
fld
lods
mov
jbe
insb
subl
sub
push
fwait
or
addr16
inc
dec
addb
shrl
or
mov
out
sub
and
loop
cmp
xor
ss
cmp
push
dec
scas
imul
mov
inc
cmc
and
sbb
outsb
movsb
xlat
inc
out
add
adc
js
ss
mov
adc
out
clc
xchg
or
aas
or
adc
dec
inc
pop
mov
xor
sub
jmp
sarl
or
jp
imull
mov
scas
ss
xchg
cltd
adc
xchg
stos
gs
aaa
call
arpl
inc
ficoml
in
jo
insb
mov
jecxz
push
pop
or
lahf
cmp
loopne
add
inc
xor
cmpsl
cmp
out
call
mov
test
inc
sub
add
loop
sbb
adc
dec
and
mov
orb
push
fnstenv
add
dec
out
pop
mov
mul
dec
imul
lock
jne
test
cmc
cmp
js
pusha
insl
test
stos
fcmovnb
aaa
mov
xor
outsl
mov
inc
outsl
push
dec
and
pusha
js
push
mov
into
mov
data16
mov
mov
dec
sbb
sbb
mov
or
pop
add
pop
popa
call
add
stos
pop
push
bnd
inc
cmp
pop
push
xlat
mov
push
or
pushf
mov
in
xchg
xchg
and
setns
lret
push
push
stos
mov
out
push
stos
movsl
pop
push
push
mov
pushf
dec
cmp
push
mov
xor
push
mov
cmpsb
pop
push
mov
dec
loop
pusha
sub
or
jns
xor
mov
inc
xlat
xchg
aaa
ljmp
mov
pop
push
mov
jge
fists
adc
int
mov
inc
imul
shld
mov
push
xor
lret
ret
in
fsubrs
dec
aam
ja
push
repnz
mov
shlb
ret
clc
xchg
rcll
std
add
ret
and
ret
jmp
in
cmp
and
xchg
js
pop
subb
push
insb
or
cmp
jmp
loop
mov
std
movsl
je
fs
pop
mov
mov
add
jp
ja
and
adc
xchg
jnp
popa
and
js
xor
sub
cmp
xor
lret
loop
sbb
dec
inc
les
or
pop
xchg
mov
dec
xchg
flds
mov
enter
mov
movsb
outsl
aaa
ret
into
xor
lods
fs
out
pop
add
jb
inc
sub
jmp
push
idiv
push
sub
cmpsw
loope
mov
cs
call
movsl
cmc
dec
pop
and
xor
add
sub
sbb
sbb
pop
aad
movsl
mov
xor
xchg
fs
fbld
into
stos
add
leave
ljmp
mov
or
mov
cmp
jbe
push
xor
sub
sub
mov
les
ja
daa
jnp
mov
fisubl
sub
dec
cmp
ja
in
mov
and
fstl
test
dec
push
mov
dec
push
xor
push
out
aaa
mov
push
pop
out
mov
leave
in
jmp
jmp
gs
test
and
inc
imul
int
cmp
in
mov
push
push
dec
js
test
mov
rol
and
in
and
loope
imulb
push
pop
andb
int
mov
adc
in
dec
fbld
aaa
xrelease
test
mov
aas
stos
lret
dec
dec
popf
and
push
jbe
popa
add
inc
jo
jl
pop
rorb
jnp
or
mov
fcompl
xor
push
out
sbb
sub
dec
ret
movsl
pop
les
mov
inc
in
or
jns
scas
jo
mov
mov
jae
dec
iret
jne
sub
int3
inc
jg
fistps
and
jbe
push
jae
lcall
jge
insl
mov
xchg
cmp
aaa
mov
stos
aam
jmp
lcall
and
rolb
sbb
adc
jae
add
aad
divl
in
sarb
push
sub
xor
jecxz
xchg
subl
das
pop
inc
sbb
std
mov
inc
xlat
stos
lds
push
js
sub
jo
aad
int
xor
loop
cs
or
cmp
inc
in
test
xchg
lds
ja
lret
loope
sbb
int3
stc
jmp
outsb
ror
mov
xchg
lea
lcall
mov
aas
add
ja
ret
fsubs
call
aam
outsb
jl
ds
mov
nop
ret
xchg
pushf
jmp
int3
inc
dec
ds
pusha
icebp
fwait
mov
aad
mov
cmp
cmp
rorb
ds
jnp
lods
dec
xor
jo
out
inc
dec
decl
ficoml
pop
testb
mov
in
mov
push
inc
xchg
daa
mov
repnz
sub
shld
mov
into
push
sar
les
mov
lahf
lret
sbb
shlb
sub
loopne
ljmp
push
scas
xor
sbb
pusha
das
cmp
adc
mov
jmp
sbb
xchg
nop
push
jecxz
repnz
aam
xor
xchg
sbb
int3
in
ds
sub
mov
movsl
in
scas
int
inc
movsb
sti
enter
cmpsl
test
jne
cmpsb
lret
stos
mov
repz
test
enter
fucom
pop
sahf
pop
dec
adc
cld
out
push
sub
adc
inc
fs
test
mov
add
es
sub
cmpl
out
push
arpl
mov
popf
xor
adc
scas
push
into
iret
flds
enter
lods
push
lcall
in
cmp
jle
jle
sbb
subb
jnp
xchg
xbegin
jg
mov
aaa
pusha
cld
dec
push
pop
add
dec
sub
mov
or
xor
or
fsts
xchg
mov
fdivl
test
sub
inc
mov
push
adc
push
xor
mov
pop
imul
arpl
sti
add
xchg
cmp
ret
negb
ror
testl
xor
loop
dec
test
xor
paddw
inc
adc
imul
xlat
push
dec
sub
outsb
inc
ss
repnz
jg
out
addr16
lock
jle
cmp
inc
ja
icebp
fwait
mov
pop
adc
faddl
repz
and
xor
outsl
sub
std
mov
xchg
dec
cmpsl
imul
leave
imul
sbb
rol
push
push
pop
fisttpl
ss
je
lock
shl
pop
pushf
test
adc
into
daa
in
icebp
push
push
add
shlb
sbb
cli
pop
mov
loope
or
inc
ss
cmp
in
push
jg
scas
jmp
xchg
sub
insb
xor
in
pop
xor
shlb
mov
call
dec
pop
loope
hlt
mov
std
stos
arpl
cmp
push
pop
pop
loopne
icebp
outsb
adc
aam
ljmp
xor
xor
in
inc
scas
jl
push
pop
loopne
dec
ja,pt
push
lret
mov
popl
das
or
cmp
mov
adc
fisubrl
mov
push
clc
sbb
mov
add
xor
mov
inc
mov
stos
add
inc
js
imul
xchg
xchg
std
dec
push
frstor
jbe
or
cmpsl
aad
lea
sbb
aas
bound
adc
cmp
dec
xchg
movsb
addr16
outsl
fistpl
mov
cld
leave
xor
jmp
loop
test
cli
leave
pop
loope
scas
in
xchg
flds
pop
pop
aad
and
mov
cmpsb
cmp
and
or
shr
push
ja
xchg
mov
es
gs
push
xchg
das
out
outsb
lret
enter
or
push
xlat
sahf
stc
pop
jns
inc
je
and
nop
int
sub
je
xlat
test
xor
dec
popa
dec
push
mov
mov
pop
pop
rolb
repz
mov
fmuls
jmp
and
mov
xor
xchg
adc
mov
add
sahf
dec
mov
add
lea
popf
add
aaa
and
add
in
jbe
fisttps
das
mov
outsb
xchg
cmp
repz
push
dec
dec
inc
ds
or
dec
mov
jae
and
dec
popa
movsb
mov
mov
or
leave
dec
rcll
adc
dec
fistl
adc
jle
loopne
bswap
pop
mov
lea
dec
sbb
mov
adc
stc
mov
push
dec
lret
aam
xchg
movsl
mov
nop
jp
dec
inc
movb
xchg
int
adc
imul
jnp
and
in
and
sub
test
xchg
mov
or
dec
push
imul
and
xchg
xchg
xchg
cmc
mov
sub
outsl
push
fnclex
fsts
xchg
test
fistpl
fmull
jecxz
sbb
push
mov
lock
imulb
mov
push
mov
in
jbe
cmp
das
inc
mov
out
mov
jne
inc
mov
jns
push
dec
js
iret
and
mov
dec
inc
or
lea
ds
jg
cs
push
stc
sti
sbb
testb
cli
or
add
mov
fs
add
lret
test
repnz
xchg
in
mov
dec
ret
cmp
inc
frstor
push
jo
mov
les
scas
or
xor
call
push
jns
jnp
arpl
adc
rcll
aas
inc
arpl
fbld
pop
xor
leave
roll
xor
int3
cmp
mov
push
lods
jle
push
mov
xlat
sub
xchg
ja
jno
mov
daa
sub
bound
sub
sbb
leave
clc
daa
mov
jae
popf
cmc
pop
push
adc
push
add
cmp
adc
sti
shll
mov
and
push
push
push
cld
sub
out
scas
mov
dec
bound
adc
cmp
cmc
nop
inc
test
mov
test
jmp
pop
cmp
out
movsb
outsl
add
jmp
cmp
xchg
loop
or
and
xor
aad
add
aad
cwtl
idivl
aaa
xor
jnp
lds
pop
stos
idivb
xor
cltd
subb
fdivl
mov
inc
sub
pop
cmp
xor
add
sub
int
pop
pop
push
bound
adc
scas
lcall
jge
cmp
outsl
daa
subb
add
stos
dec
jae
jecxz
cmpsl
int3
push
fldcw
sbb
pop
mov
pop
mov
ret
lret
popa
pop
mov
mov
xor
int3
or
add
bound
jo
mov
mov
jmp
cmc
pop
push
inc
inc
jp
shrb
pusha
pop
mov
je
addb
pop
rcl
jle
cmpsb
rcll
movsl
in
stos
ds
jmp
or
push
adc
outsb
in
test
ret
or
lock
pop
js
lea
jmp
adc
fmuls
or
pop
mov
data16
sbb
cmp
ficoms
push
mov
mov
pop
jmp
mov
imul
push
filds
xchg
mov
mov
adc
sub
data16
jb
lea
in
xchg
adc
loopne
jae
mov
fimull
cmpsl
iret
xchg
stc
mov
movsb
dec
pushf
jns
sti
stos
arpl
push
pop
into
in
mov
xchg
and
je
test
jno
addr16
lock
ret
or
push
adc
xlat
out
enter
jmp
mov
mov
lods
jl
xchg
jae
fwait
pushf
cmp
mov
cmc
addr16
cs
mov
fwait
jmp
in
xor
mov
ret
pop
push
stc
pop
jb
mul
pop
das
mov
jg
adc
mov
cltd
out
pop
mov
mov
jo
dec
push
jnp
lcall
push
mov
xchg
mov
adc
dec
mov
cmpsl
psrlw
lods
bound
imul
das
sub
jmp
test
sub
out
in
loopne
fucomi
sbb
push
mov
sbb
push
out
int
stc
ret
imul
cmp
push
sub
xor
clc
loopne
mov
or
fistpll
mov
mov
cmp
loop
jge
push
mov
pop
pushf
iret
out
pcmpeqd
pop
sbb
xchg
call
dec
lret
imul
mov
psubd
or
jae
es
inc
fwait
add
adc
jl
pop
sbb
mov
xor
sti
pop
mov
push
mov
dec
ss
test
sbb
jne
xor
push
divb
cmp
ja
mov
inc
out
gs
xchg
stos
push
insl
pop
jg
dec
movsl
adc
pop
pop
mov
cltd
jnp
xor
push
lds
movsl
cwtl
jbe
pushf
stos
mov
cmp
test
adc
call
add
mov
push
popf
mov
cld
sub
dec
jmp
sbb
imul
or
or
add
mov
bound
pop
sub
inc
loopne
add
int
push
mov
in
adc
jo
xchg
sbb
sti
test
cltd
mov
out
test
fxch
sbb
out
sub
loope
mov
in
inc
dec
ret
lods
test
sbb
insl
adcl
xor
xchg
add
or
pop
pusha
mov
jbe
fsubs
and
mov
or
cmpsb
inc
jbe
in
scas
fmuls
jle
shll
insl
fs
pop
outsl
repz
lods
mov
jl
ret
sahf
xchg
push
and
cmp
pop
cmp
lock
clc
scas
ret
sbb
inc
insl
shl
int3
fidivrs
pusha
clc
inc
jecxz
ror
cmpsl
and
cmc
scas
scas
test
movsb
pop
aam
jle
test
sbb
jne
dec
mov
cmc
sbb
dec
xchg
mov
pusha
cltd
std
stos
mov
jns
pop
fmul
shrb
ret
dec
loope
inc
or
jmp
insl
bnd
cmp
stc
inc
adcl
pop
imul
pop
gs
js
dec
pushf
jmp
push
aas
mov
push
mov
dec
dec
inc
sbb
dec
inc
cmpsb
or
out
pop
xor
sub
push
cmp
pop
cs
fdivrl
jns
push
rcrl
add
mov
dec
sahf
sbb
mov
cmp
lea
setb
ret
lds
enter
imul
pop
xor
fdivr
call
and
or
inc
and
cmp
in
popf
push
pop
cmp
iret
inc
adc
mov
dec
xor
and
int
loope
adc
mov
test
xchg
insb
stos
ficompl
pushf
xor
mov
xor
clc
js
out
popa
mov
and
pop
and
mov
xchg
and
sub
addr16
adc
push
in
subl
mov
loop
stos
adc
sbb
repz
imul
and
es
cmp
das
sub
pop
mov
sub
add
test
cmp
inc
push
mov
leave
ret
movsl
loop
sub
pop
cmp
jl
lds
out
jae,pn
dec
jg
adc
and
outsb
in
stc
cmp
sbb
xchg
push
flds
stos
scas
lret
push
lahf
adc
test
dec
dec
push
adc
fcomps
push
test
bound
xchg
push
mov
mov
shl
jne
inc
fwait
jecxz
out
mov
add
int3
outsb
mov
decb
cltd
lods
scas
push
pop
push
mov
jp
lret
mov
loopne
adc
test
jge
insb
pushf
adc
fstpl
sub
mov
subl
mov
xchg
fiadds
cmpsl
add
mov
hlt
leave
sar
push
jbe
or
idivb
sub
mov
ret
mov
mov
leave
ret
les
imul
sub
jne
int3
adc
or
stos
or
push
out
aam
orl
pusha
leave
dec
dec
xchg
orl
gs
mov
out
leave
lock
push
push
mov
sbb
inc
mov
shrb
sub
jge
dec
xor
or
jp
int3
sbb
sbb
out
mov
jne
add
pusha
push
popf
jb
mov
cs
sub
leave
mov
or
sub
lods
sahf
sub
lea
stos
mov
mov
push
cs
rol
jb
inc
add
imul
gs
inc
fs
cltd
addr16
jmp
inc
and
adc
jbe
aam
dec
xchg
orb
lods
orl
jae
inc
mov
lret
ds
dec
xlat
jge
cmp
mov
jno
out
or
lret
adc
out
mov
cmp
sti
test
not
dec
imul
push
out
sti
sahf
neg
inc
stc
and
fildl
xor
mov
jbe
fwait
aas
jbe
mov
or
xchg
sub
subl
fldenv
pop
bswap
xor
test
xor
inc
jb
negl
add
leave
mov
fldt
mov
lcall
js
in
std
mov
es
adc
pop
mov
jmp
add
pushl
nop
mov
fdiv
add
dec
pop
inc
dec
addr16
lcall
dec
insl
enter
mov
mov
or
mov
cmp
leave
or
push
and
es
out
or
jno
dec
mov
ret
push
jg
mov
imul
rcrl
lock
shlb
sbb
ljmp
test
sub
lahf
inc
and
push
and
add
insb
xchg
inc
pushf
push
mov
jmp
or
out
lahf
push
and
loope
pop
xlat
and
xchg
sub
test
xchg
cmc
sbb
push
ret
dec
jb
out
inc
les
adc
xchg
jno
sbb
pop
add
or
test
mov
jle
add
mov
jge
inc
and
add
pop
popf
inc
daa
out
lds
ret
cli
cmp
cmp
inc
or
jge
add
int3
iret
out
rol
stc
add
mov
or
xchg
std
rcpps
dec
sbb
jl
mov
adc
mov
mov
mov
and
jp
clc
mov
ja
and
adcb
add
lcall
loope
shr
push
mov
jecxz
xchg
xor
xchg
xlat
push
fldenv
fbstp
fcoms
inc
shl
aam
outsb
mov
or
xor
mov
xor
movsl
call
cmpsb
into
out
daa
add
insb
jno
pushf
mov
mov
hlt
ds
sbb
pop
mov
push
rclb
cmp
rcl
xchg
test
add
mov
pop
ja
out
inc
mov
gs
iret
inc
push
mov
outsb
jne
xor
cmp
vmovntps
xor
pop
cwtl
lret
dec
clc
mov
out
enter
inc
xchg
and
cmp
mov
fcmovb
ficoml
orl
dec
push
dec
addr16
jb
mov
cmp
ja
mov
movsl
outsl
pop
mov
out
hlt
mov
arpl
cli
push
or
pop
inc
jno
push
popf
mov
enter
mov
in
hlt
jb
das
dec
xchg
mov
lea
inc
adc
add
mov
popa
sbb
inc
ja
sub
rclb
push
les
push
push
pop
mov
fwait
and
je
gs
sub
cmc
push
pop
xchg
popa
test
ja
push
repz
fsubrp
addr16
jbe
test
and
adc
test
std
insl
jns
js
cli
std
cltd
pop
hlt
jmp
jmp
push
lcall
xchg
mov
jae
dec
mov
sti
mov
out
adc
lock
jmp
es
or
cmpsb
lods
pop
repnz
inc
test
pusha
jbe
mov
mov
mov
dec
or
subb
imul
popa
adc
xor
outsb
jecxz
into
add
nop
fcoms
jae
add
sub
arpl
jnp
mov
sbb
jnp
xor
add
pop
inc
shlb
clc
adc
jl
mov
jo
mov
adc
jg
lea
mov
cld
popa
scas
and
out
ljmp
and
mov
mov
jmp
fucomp
dec
loop
push
fidivl
mov
mov
jns
std
xchg
jbe
ss
addr16
imul
push
xchg
idiv
pushf
push
fisttps
fimull
stos
mov
or
lret
push
xchg
out
addl
jmp
in
xchg
cmp
add
mov
mov
iret
cmc
mov
cmpsl
cmp
aaa
sub
iret
dec
dec
or
or
and
pop
jmp
lock
push
mov
xchg
add
insl
sti
xor
push
xchg
icebp
filds
imul
mov
xchg
arpl
adc
jmp
sbb
out
aad
notb
testb
ret
pop
sti
mov
sub
mov
mov
mov
out
cmc
pop
jne
scas
pop
sbb
loope
push
imul
iret
pop
outsl
add
outsb
sub
cmp
cli
out
or
mov
or
xor
mov
je
or
xchg
in
push
dec
arpl
gs
test
sbb
test
jg
aad
adc
mov
pop
push
fsubs
mov
add
push
push
pop
sub
cmp
movsb
jns
pushf
xor
mov
fmul
push
xor
ret
out
jnp
cmpsb
clc
aas
mov
jp,pn
call
pop
or
push
xor
gs
pop
hlt
sub
scas
or
xchg
imul
sub
sbbb
movsb
jne
les
xchg
adc
lods
cmpb
hlt
aam
fnstcw
or
imul
repz
sub
pop
jne
mov
scas
fwait
and
std
push
cmpsl
add
cmp
test
and
movsb
xor
call
push
movsl
xor
xor
pop
jne
daa
and
and
or
push
push
inc
adc
xchg
add
test
push
mov
xor
or
lods
repz
mov
xor
rcrl
pushl
push
cmpl
push
icebp
push
fdecstp
frstor
push
jecxz
int3
aam
addr16
les
mov
ret
stos
addr16
mov
pop
loope
add
inc
xchg
fucomip
jno
and
movsl
fwait
das
pushl
test
adc
leave
mov
pusha
cwtl
jno
push
pop
in
adc
scas
cmp
jge
inc
cmpsb
pop
jl
xchg
sub
jge
cmpsl
and
add
sbbl
cmp
xor
mov
leave
mov
bsr
and
dec
pop
mov
mov
test
push
adc
sbb
adc
lock
cld
into
repnz
jecxz
lahf
dec
test
xor
ret
pop
fldl
xchg
xchg
jno
jb
into
mov
or
jge
add
shlb
jae
out
sbb
addr16
xchg
lret
mov
or
cmpsl
ficompl
push
adc
mov
or
and
nop
push
pop
filds
add
gs
pusha
outsb
xor
rcrl
xor
cmp
loope
sbb
shufps
sbb
les
cmpsl
pusha
sbbl
lods
or
xchg
mov
mov
into
stos
outsb
jp
adc
mul
cmc
ja
xor
pop
cmp
insl
ljmp
xchg
out
sub
scas
hlt
sub
mov
iret
hlt
int3
xor
icebp
mov
mov
sbb
and
jno
icebp
lret
lods
scas
push
mov
cli
mov
adc
and
or
cmp
rcr
push
out
mov
mov
inc
sbb
outsl
inc
iret
sub
xor
or
sub
mov
iret
dec
lds
sub
cmp
and
mov
lods
xchg
jns
or
andl
push
inc
gs
ja
movsb
add
xchg
dec
xchg
mov
arpl
dec
out
lds
ret
sub
aam
xlat
pushf
fbstp
inc
jns
cmp
sub
je
sbb
into
movsl
imul
mov
pop
inc
lods
sti
aaa
cmpsl
aad
mov
outsl
inc
outsb
xchg
jae
je
mov
sbb
es
push
mull
pop
sti
int3
iret
jp
and
pushf
and
push
inc
sti
std
mov
jns
mov
xchg
cltd
repnz
sarb
addb
lret
jne
jge
xchg
xor
test
out
and
call
or
xor
inc
push
movsl
adc
xlat
loope
testb
inc
int3
out
mov
sbb
xchg
xlat
mov
and
mov
gs
jo
pop
sub
sub
xchg
insl
fcompl
test
jge
cmp
xchg
xor
lock
cmp
sahf
loope
jmp
enter
int
insb
jno
outsl
imul
sub
cmp
das
xor
lret
push
xor
jae
push
mov
pop
xchg
pop
jecxz
out
pop
xor
dec
add
sti
dec
add
outsb
pop
push
xchg
aaa
sbb
sbb
mov
pop
adc
or
sub
mov
sbb
out
pop
lret
sahf
xchg
js
fcoml
xchg
pop
sub
in
jae
cld
pop
sub
rcl
mov
popf
pop
xchg
insb
inc
arpl
inc
sbb
ljmp
mov
sub
push
xorl
inc
adc
mov
repz
lods
and
xchg
cmp
inc
imul
outsl
xchg
movsl
jge
arpl
data16
andl
js
jge
xor
adc
out
int
dec
mov
add
cs
popf
push
test
add
sub
sub
jle
test
movsl
push
clc
js
stos
aaa
cs
ds
gs
loopne
mov
daa
add
scas
mov
jmp
mov
dec
movsl
pop
outsl
imul
ffreep
cmpsb
xchg
xchg
cmp
rolb
out
sbb
enter
push
jle
loop
inc
rclb
out
leave
sbb
add
fcomps
ds
cmp
adc
xor
notb
aas
jbe
inc
aad
out
jmp
lcall
cltd
sti
stc
sbb
push
xor
lock
insb
cmpsl
dec
out
mov
xchg
inc
push
jae
cmpsb
mov
pop
cmp
popa
pop
mov
bound
or
cmp
fimull
rcrb
push
adc
and
repnz
jg
adc
in
das
aaa
or
inc
sub
cmp
test
jmp
xchg
test
inc
xchg
hlt
push
mov
jl
loopne
mov
adc
aad
or
sub
push
ret
repz
out
stc
out
stc
ret
pop
fs
dec
push
or
and
xor
inc
lea
ds
xchg
add
movsl
add
lret
call
push
mov
mov
inc
out
pop
inc
xchg
pop
mov
mov
sbb
addr16
ret
mov
addl
mov
in
fucom
insb
scas
pop
push
pop
mov
cmp
mov
adc
movl
out
xchg
les
mov
jecxz
das
mov
mov
sarb
mov
outsb
or
enter
mov
mov
mov
shlb
cmpsb
mov
jns
and
mov
adc
add
and
hlt
aam
clc
pop
dec
sbb
jne
mov
and
inc
dec
mov
pushf
clc
dec
in
cmp
test
adc
shrb
and
lcall
fs
test
loop
and
rorb
rcll
bound
sbbb
push
lret
adcl
xchg
mov
mov
xchg
xchg
cli
xor
bound
int
lcall
push
nop
outsl
xchg
dec
arpl
out
fdivs
pop
adc
mov
mov
iret
stc
xchg
fisttpl
xchg
pusha
pop
xchg
mov
xchg
int
lods
inc
xchg
vmovsd
push
inc
jge
or
out
aad
cmp
arpl
pusha
popf
je
std
jo
push
in
subb
hlt
outsb
add
aas
dec
jno
pop
xchg
mov
test
lret
arpl
addr16
cmp
scas
mov
push
lea
int3
shrb
dec
cwtl
pop
xchg
mov
pop
movsl
sub
hlt
mov
jae
ffreep
pop
push
xor
lcall
pusha
mov
push
movsl
idivb
int
pop
adc
jle
mov
fwait
stos
icebp
in
inc
pop
jo
bound
xlat
sbb
mov
sahf
clc
sub
jmp
jno
jp
adc
iret
pop
sub
imul
sub
pop
inc
lea
dec
ret
mov
adc
aad
pop
insl
cwtl
test
jae
lods
shll
xor
dec
cs
xor
in
pusha
jg
jmp
jmp
sahf
dec
ret
xlat
loopne
aam
pop
loope
adcb
ds
fldcw
aad
insb
data16
jne
sbb
xchg
cmp
dec
add
rorb
and
dec
sbb
sbb
jmp
fadds
sbb
paddw
dec
pop
mov
stos
mov
mov
xor
or
movsb
loope
cmp
add
cmpsl
ss
adc
imul
mov
decb
pushf
orps
and
imul
rorb
add
cs
sbb
adc
lods
popf
adc
fimull
cmpsb
jg
mov
lods
shlb
fidivrs
out
data16
stos
imul
and
jbe
jle
repz
add
or
inc
push
nop
sub
dec
sub
and
add
ljmp
or
cmp
jmp
sbb
push
sbb
stc
in
shl
jl
lea
xchg
sti
dec
push
mov
jecxz
stos
lcall
xor
lods
dec
cmc
in
or
inc
jno
ds
sub
jae
mov
iret
adc
das
hlt
iret
ret
mov
sub
push
pop
outsb
adcb
add
mov
xor
pop
lock
inc
test
jbe
or
push
ja
test
or
add
das
subps
pop
in
andl
and
pop
clc
dec
mov
inc
dec
ss
fsubrs
and
popa
arpl
sub
lods
mov
mov
lods
mov
xor
pop
mov
xlat
fisubrl
mov
shll
aad
push
sub
pop
xorl
push
mov
cmpsb
adc
xor
fisttps
fistl
jne
stos
cmp
sub
add
xlat
into
hlt
mov
int
inc
int3
xchg
loope
push
in
dec
sahf
popa
icebp
push
mov
add
push
adc
rorb
push
in
lcall
and
pop
nop
cmp
fsubp
add
scas
pop
xchg
lods
inc
jb
in
push
rcll
in
out
test
lock
mov
mov
cmpsb
jae
mov
sar
daa
xchg
push
aad
mov
je
in
loop
push
das
fiaddl
icebp
jge
xchg
and
inc
jb
mov
dec
jle
fdivp
add
repnz
mov
sti
sbb
arpl
sub
or
sub
stos
add
in
out
or
lods
fnstenv
lahf
test
mov
loopne
xchg
jbe
movsl
cmp
lock
pop
adc
movsl
je
adc
mov
data16
fldcw
inc
mov
xchg
sti
xlat
call
stc
test
repnz
mov
lods
and
mov
sbb
adcl
mov
sub
lock
xchg
test
mov
push
insl
xchg
adc
or
sbb
pop
mov
sbb
push
cltd
jl
xor
int
add
mov
xchg
test
pop
in
mov
out
les
dec
insb
push
loop
orl
sbb
inc
cmp
data16
jne
int3
xchg
mov
jno
or
xor
xlat
xor
mov
test
fisttps
sub
mov
loopne
xor
stos
mov
mov
dec
lcall
jne
popf
fistl
in
lahf
jge
add
mov
mov
push
dec
lahf
push
push
push
mov
pop
adc
dec
lods
xlat
rcl
mov
insb
xchg
dec
in
pop
rclb
cltd
jno
mov
in
pop
jmp
fisttps
mov
lock
sahf
data16
xlat
aaa
mov
mov
stc
das
add
nop
movsb
or
stos
cmp
leave
ljmp
test
out
sbb
cmc
jp
sbb
pushf
cmp
jns
add
std
pop
bound
ss
lods
push
movsb
push
inc
jbe
mov
xor
ficompl
lret
mov
add
adc
loopne
aad
sarl
xor
jmp
inc
int
arpl
fmull
aas
sbb
jmp
fld
sbb
dec
cmp
dec
pop
cmp
jbe
rol
dec
into
pop
cmpsb
dec
into
andb
jl
adc
jecxz
outsl
inc
dec
fnsave
mov
xchg
xor
and
and
shlb
jo
add
mov
jmp
nop
jp
xor
pop
pop
jl
mov
or
push
xor
xor
cmpsb
jns
lock
cmp
lret
mov
cmp
mov
insb
jae
adc
test
sub
xor
dec
into
mov
xor
repz
pop
int
icebp
lret
js
enter
gs
inc
mov
pop
dec
cmp
mov
pop
ds
jecxz
xchg
jb
sti
in
ds
cmpb
jle
into
push
aam
jbe
jae
mov
loope
stc
xchg
call
aas
lcall
push
pusha
mov
jns
fisttpll
pop
out
xor
adc
or
cs
aaa
sbb
fisubrs
in
dec
pop
push
push
bound
movsb
popl
in
jp
in
daa
sbb
mov
clc
stos
enter
fwait
push
cmp
sarl
dec
add
hlt
lods
flds
cmp
cmpl
and
pop
leave
pop
sub
xchg
fistpl
ss
xchg
out
push
cwtl
divl
mov
dec
push
mov
fsts
cmp
daa
mov
cmpsb
sahf
mov
add
pop
add
inc
jne
and
bound
dec
mov
and
pop
and
popa
cmp
jne
iret
mov
xchg
inc
lods
imul
sarb
leave
cmpsb
cltd
mov
imul
mov
std
push
je
and
xor
movsl
xchg
std
leave
jnp
test
mov
repz
xchg
lds
std
jge
or
mov
pop
lahf
fld
xor
inc
das
rcrb
xchg
ljmp
cmp
cmp
jge
cmp
aaa
and
xor
movsb
test
jecxz
mov
xchg
jge
lcall
add
fldl
fdivs
pop
ret
hlt
aam
pop
ror
cmc
jb
mov
mov
ljmp
aaa
push
inc
cmp
sub
stc
loop
rclb
mov
fptan
adc
pop
idivl
dec
or
dec
call
mov
mov
pusha
dec
popa
jg
mov
inc
sub
sub
mov
or
mov
in
pop
push
xchg
repnz
adc
ljmp
cmc
jmp
out
scas
js
lds
inc
mov
inc
mov
jae
mov
xor
bound
fwait
jp
lods
cwtl
ljmp
clc
xor
xchg
pop
test
enter
fcompl
pop
pop
call
adc
mov
mov
pusha
mov
inc
js
test
bound
jae
adcb
push
jns
push
sub
mov
adc
cmp
das
push
sub
scas
jae
mov
mov
je
pop
das
or
sub
cmp
out
and
lcall
push
push
sahf
repz
adc
repnz
ret
out
jns
mov
aaa
mov
dec
in
nopl
add
mov
sub
repz
gs
xchg
ja
movsl
subb
mov
xchg
pop
rcr
inc
leave
add
sub
jle
add
xor
cmc
adc
fbld
mov
outsl
test
lahf
into
sti
cli
loope
pop
in
mov
inc
shrb
push
mov
sahf
push
test
cmp
in
push
pop
pop
sub
mov
xchg
out
inc
push
xor
pop
ljmp
jo
inc
es
xor
push
arpl
fsubl
xor
mov
lret
repz
xor
mov
call
push
fcmovbe
pop
scas
pop
lods
in
mov
cwtl
addb
lock
add
std
pop
mov
dec
daa
lret
xor
sbb
cmp
test
dec
and
int3
mov
icebp
sbb
out
adc
jbe
cmc
sbb
sub
adc
jbe
inc
es
xchg
pop
inc
xor
adc
pushf
test
loopne
les
mov
and
push
mov
fbld
inc
add
xor
xchg
fldt
inc
loop
mov
push
push
jge
rep
shlb
push
adc
dec
xor
lcall
ficoml
enter
inc
popf
xor
nop
ss
jmp
or
scas
mov
adc
das
lcall
adc
mov
xchg
sahf
cwtl
add
in
mov
shl
mov
or
sbb
cmp
xor
and
js
adc
mov
jne
mov
xor
sbb
pop
push
mov
and
jmp
movsb
clc
and
fadd
mov
mov
sbb
xchg
hlt
stos
jl
lahf
mov
lock
cwtl
leave
cmp
cmp
ljmp
pop
lret
flds
mov
test
in
aaa
js
add
test
jb
ss
push
jmp
or
mov
cmp
cmp
or
sbb
dec
gs
xchg
add
addr16
dec
xchg
push
pop
sub
add
mov
xchg
scas
xor
addr16
xchg
mov
mov
lret
pop
test
xchg
xchg
shll
je
frstor
repz
jno
stc
mov
jecxz
adc
ja
dec
ret
mov
jmp
or
and
pop
push
addr16
ds
into
mov
je
loope
mov
push
into
xor
dec
cli
adc
addr16
mov
mov
shlb
clc
add
pop
gs
mov
or
push
inc
mov
adc
push
hlt
gs
mov
mov
mov
mov
in
inc
add
pop
loope
mov
jo
mov
xchg
mov
mov
pusha
shlb
add
outsb
cmp
mov
add
pushf
scas
jbe
stos
repz
cmp
jbe
ss
test
sub
iret
sbb
jl
add
and
repnz
cs
fs
mov
jb
clc
daa
xor
inc
xchg
dec
jne
leave
pop
mov
rorb
adc
loope
lahf
inc
jo
stc
cmp
jbe
inc
mov
cwtl
sti
cmp
jns
pop
xlat
mov
je
xchg
test
lods
fnstcw
imul
loopne
xchg
sbb
xor
lahf
out
movsbl
pop
lds
sti
pop
push
xchg
pusha
call
mov
pop
push
sbb
pushf
int3
lcall
inc
jae
sub
or
sbb
ret
insl
shl
mov
push
iret
aas
inc
out
movsl
loope
xchg
arpl
movsl
fdivl
dec
sub
jg
mov
pusha
out
repnz
sbb
pusha
loopne
sti
xor
sub
dec
icebp
cli
ret
adc
push
jno
xor
adc
mov
movsb
loope
mov
and
loopne
mov
sbb
pop
out
mov
xchg
sbb
imul
call
mov
aad
insb
hlt
clc
cmp
pslld
xor
mov
mov
push
scas
loopne
push
scas
sbb
cmp
xorl
xchg
enter
lods
pop
aam
or
cmc
in
inc
mov
iret
cmp
mov
cwtl
add
je
xor
inc
lahf
jnp
add
mull
shr
cld
repz
outsb
adc
mov
lret
mov
jmp
push
lods
push
clc
loopne
mov
mov
add
jne
aam
xchg
fdivr
fs
lea
dec
movsb
adc
arpl
sti
lods
mov
xchg
shlb
mov
cmp
dec
jge
repz
xor
hlt
add
aam
scas
mov
push
xlat
mov
cmpsb
add
adc
and
fidivs
das
icebp
jg
adc
xorb
jno
inc
cmp
movsl
in
xor
push
in
dec
ss
sbb
cmp
jge
mov
push
cmp
popf
lds
push
dec
int
jp
jnp
lahf
shlb
loop
push
push
cwtl
dec
outsl
jnp
pop
jbe
in
fisttpll
or
sub
mov
push
mov
fstp
adc
enter
test
mov
cwtl
adc
cld
inc
pop
pop
nop
outsl
xlat
fisttps
pop
push
clc
sub
cmp
popf
sarb
push
mov
lahf
into
imul
fisubl
cld
cmp
cmp
mov
inc
sbb
xchg
pop
outsb
fidivl
popa
rcll
or
lds
fnstcw
push
ror
lret
mov
or
aaa
pop
fimuls
lock
mov
pop
scas
mov
mov
sbb
dec
jbe
mov
xor
sti
push
fnstcw
loope
add
inc
pop
arpl
inc
popa
xor
mov
sub
into
sbbb
jno
pop
add
add
shlb
daa
nop
sbb
dec
jb
pop
into
jbe
lret
push
jmp
loopne
or
pusha
ret
ja
into
movsl
push
aad
stc
or
cmc
ret
ljmp
imul
leave
stc
shr
pop
jb
sub
arpl
shrl
xchg
pusha
in
mov
arpl
mov
pop
jp
pmullw
inc
mov
adc
inc
mov
inc
cs
in
test
outsl
cmpsb
xchg
repnz
sub
push
pop
push
lods
ficoms
or
sbb
dec
pop
mov
fsubs
mov
sbb
inc
xor
add
sub
cld
cmpsl
nop
dec
int3
and
or
scas
or
fwait
pop
cmp
and
jecxz
mov
stos
jbe
sub
int
out
pushf
mov
push
add
push
pop
setp
movsl
mov
iret
fcmovu
xchg
mov
jno
or
xchg
repz
cwtl
jp
push
or
adc
push
aam
push
mov
sub
and
arpl
daa
dec
and
cmp
mov
xchg
push
sub
mov
lret
mov
lock
notb
insb
xchg
or
xchg
scas
add
movsb
mov
gs
jae
pop
ds
inc
mov
mov
bound
mov
movsw
jp
mov
repnz
cmc
push
pop
push
adc
xchg
mov
push
jbe
or
jno
inc
outsl
xchg
mov
sub
lock
iret
mov
stos
mov
adc
or
fstpt
xchg
jge
or
loope
sub
or
xchg
xchg
push
std
hlt
pop
adc
mov
loop
cmp
dec
pushf
adc
imul
fnstsw
nop
mov
mov
and
cmp
mov
cwtl
xor
xchg
movsb
pop
insl
and
ds
fcoms
push
xchg
push
cs
dec
iret
ljmp
js
ror
test
mov
test
cmp
push
mov
adc
neg
ljmp
and
ljmp
add
ljmp
mov
push
mov
rol
js
cmpsl
ljmp
fists
into
and
adc
or
test
jae
cmpsl
push
test
xchg
jae
or
sbb
pop
aam
and
lcall
pop
test
mov
pop
shll
dec
movsl
fwait
ss
mov
add
sub
out
repz
out
dec
test
push
mov
sbb
push
stos
fwait
aas
mov
into
mov
jmp
jmp
push
adc
ds
imul
pop
or
daa
mov
and
mov
jnp
jne
lods
je
outsb
pop
push
mov
dec
pop
outsb
mov
shrb
jo
pop
pop
les
dec
imul
push
iret
mov
push
jl
clc
lea
push
cmpsb
xchg
xchg
pop
mov
hlt
jno
jle
jmp
out
bound
popf
mov
cmpsb
mov
add
xchg
mov
cmp
jl
push
dec
bound
push
fst
shll
sbb
fdivs
dec
mov
dec
shrl
xor
movb
pusha
jmp
test
inc
sarb
sarb
mov
in
inc
dec
jge
push
push
cmpsl
test
leave
jmp
jmp
mov
fidivrs
adc
int
out
repnz
mov
or
lahf
cs
pop
ret
dec
dec
aam
cmp
and
gs
insb
iret
aad
out
arpl
or
lret
sti
jle
push
cli
push
iret
fisubrl
jp
dec
loope
fidivs
sbb
pop
les
stos
shrb
pop
push
xor
out
cmpsb
push
mov
test
push
inc
mov
les
shrl
bound
lcall
push
pop
mov
xchg
fisttpll
jns
or
lret
imul
sbb
mov
cmpsb
fstpt
daa
xchg
mov
fsts
mov
cs
pushf
lahf
fsubl
imul
push
lahf
shr
mov
lcall
inc
dec
sub
outsb
xor
lods
repz
cmp
and
dec
adc
cs
cwtl
fwait
push
ljmp
test
pop
pop
movsb
adc
sbb
jecxz
subb
jg
adc
pop
push
jl
fldenv
cmp
sub
in
je
cli
pop
dec
jmp
popf
xchg
inc
inc
push
mov
in
xlat
repnz
mov
sbb
test
cmp
xor
fisubs
add
enter
or
rcll
add
xor
loop
pop
push
cmp
lahf
or
imul
mov
and
gs
scas
ja
in
test
andb
jl
in
cld
bound
inc
aas
mov
mov
xchg
nop
jmp
xchg
push
outsb
push
and
cmp
mov
cld
insl
push
or
lcall
cltd
jbe
movsl
push
pop
movsb
int3
adc
dec
adc
aas
ja
into
addr16
xor
out
mov
or
and
push
add
and
mov
ret
test
lods
mov
mov
dec
adc
mov
lds
mov
icebp
addr16
leave
xchg
jecxz
xchg
xchg
mov
out
jns
jmp
cli
mov
mov
roll
add
je
lcall
and
push
scas
dec
imul
lahf
testb
push
ret
mov
lock
inc
add
js
movb
jb
insb
fwait
nop
sbb
loop
mov
rorl
dec
pop
xor
mov
xchg
push
negb
jmp
cmc
xchg
push
pushl
mov
cltd
sbb
cmp
aaa
jmp
lahf
cmp
in
and
push
add
jae
jne
jo
mov
rorl
out
jg
adcl
pop
adc
pop
push
repz
data16
xchg
daa
ret
pop
inc
call
lock
sbb
imul
orl
mov
iret
inc
imul
call
inc
add
mov
jb
push
pusha
es
jge
lret
in
dec
sbb
lock
pop
imul
push
aad
leave
pop
add
jge
out
sbb
xlat
decb
mov
scas
adc
stc
jmp
add
fldl
scas
and
out
dec
adc
into
lahf
mov
cmp
rorl
mov
out
mov
cs
mov
sub
ret
iret
test
mov
stos
mov
mov
ret
mov
push
mov
cld
sub
and
mov
repz
pop
aaa
push
adc
push
loop
and
mov
sbb
xor
test
popl
stc
sbb
outsb
shll
inc
sbb
xchg
push
pop
es
and
dec
and
sbb
push
push
les
lcall
push
inc
mov
jb
jecxz
pop
mov
hlt
push
push
popf
cmp
out
pop
loope
mov
cmp
in
dec
sarb
add
addl
mov
subl
nop
jb
call
adc
push
adc
xchg
add
aaa
in
cltd
into
shll
pop
sub
sahf
pop
iret
add
add
iret
pop
xchg
pop
aad
and
popa
xor
sarb
ret
fists
sbb
jo
mov
daa
cmp
inc
xchg
inc
test
loopne
outsl
cmpsl
xchg
gs
mov
test
adcb
xor
aad
jne
push
and
jb
jecxz
das
pusha
sub
in
mov
daa
xchg
add
mov
inc
test
xchg
dec
dec
test
jecxz
mov
or
divb
daa
dec
xor
leave
pop
in
int3
and
adcl
xor
pop
xchg
out
sti
fs
jge
pusha
xor
jno
lahf
jmp
lret
mov
cld
mov
out
and
fstpl
or
push
sbb
pop
jg
flds
rorb
js
test
into
nop
adc
popl
cmpsl
add
arpl
lcall
sbb
xchg
mov
dec
fmul
pusha
cmp
mov
push
push
popa
sbb
jecxz
in
cltd
xchg
iret
in
fdivrl
ja
xchg
xchg
jle
pop
imul
pop
inc
cmpsb
ja
insb
test
and
jmp
arpl
movsl
and
popa
subl
cmp
push
and
stc
adc
ljmp
sub
cli
loop
inc
scas
shll
fs
movsb
dec
setge
mov
andb
jne
sub
insb
sub
jge
pushf
or
pop
test
jmp
lcall
mov
push
pop
int3
sbb
xchg
ljmp
mov
lds
sti
xor
subl
jo
call
xchg
cmp
jbe
out
mov
lods
shll
pop
mov
mov
arpl
stc
pushf
dec
cs
inc
stos
incb
sub
pop
lret
adc
test
adc
mov
fldt
insb
and
and
push
stc
sbb
pop
adc
int3
jp
daa
or
pop
add
ret
sarl
int
cltd
addb
gs
pop
jmp
adc
sbb
add
lods
imul
push
in
dec
adc
or
lock
out
lds
and
and
loop
outsb
mov
test
cs
dec
add
out
stos
dec
sbb
aam
js
ret
sub
mov
or
mov
jno
xchg
insb
hlt
add
shl
mov
xor
cmpb
and
inc
jbe
dec
xor
fsubrl
mov
lahf
dec
clc
movsl
pop
or
dec
into
pop
mov
push
dec
cmp
xchg
popa
dec
out
xor
lock
cltd
sti
mov
push
subl
xchg
jmp
xor
mov
or
jb
mov
int
leave
adc
jnp
in
mov
mov
hlt
in
push
das
inc
jne
push
push
clc
shlb
and
popa
loope
push
xchg
adc
sbb
movsb
pop
dec
cmpl
sub
cmpsb
adc
push
loopne
inc
scas
add
sahf
add
mov
pop
lss
push
mov
pop
into
lcall
out
fs
inc
ljmp
movsb
pop
outsl
dec
push
jmp
hlt
stos
rclb
repnz
dec
xor
mov
cli
mov
sub
insb
cli
sarl
xchg
test
jle
mov
ffree
ljmp
nop
jnp
and
lods
push
rorb
iret
lods
loopne
sar
or
mov
adc
lcall
call
jl
jle
jl
and
xor
fwait
xchg
dec
or
insb
stos
mov
and
pop
lret
lock
dec
push
push
xor
inc
lods
jne
xor
call
popf
lcall
loope
call
and
filds
cmpsl
clc
rcll
or
mov
mov
and
push
dec
cmp
jg
cmc
roll
lcall
loope
movsb
xchg
dec
pop
push
repz
sbb
loopne
xchg
mov
jl
mov
test
or
jecxz
faddl
in
dec
mov
leave
mov
out
cmpsl
pop
pop
mov
mov
push
sqrtps
push
out
dec
das
in
xchg
inc
push
dec
pop
mov
push
rorl
xchg
rcll
shl
outsl
push
push
adc
jbe
andl
in
rcl
aas
cld
mov
mov
mov
lret
lret
adc
add
call
out
xchg
lahf
faddl
mov
lahf
xchg
push
dec
xchg
jecxz
push
pop
mov
and
lret
or
mov
sti
xchg
out
shll
sbb
xor
inc
lahf
mov
movsb
fsubs
loopne
push
mov
inc
mov
leave
push
xchg
ret
add
lods
test
lret
add
sbb
adcl
aas
arpl
cmpsl
jp
xchg
inc
cld
cmp
es
adc
shlb
lret
jl
mov
pop
adc
mov
lods
dec
push
jge
cmp
sbb
ja
in
xchg
inc
mov
cmp
pop
icebp
mov
xor
in
sbb
pop
shlb
clc
dec
mov
push
clc
test
push
inc
mov
adc
jae
das
in
insb
out
push
ss
mov
xor
stc
and
sar
or
sub
jnp
add
das
jne
inc
lret
ret
ja
mov
in
aas
jnp
dec
pushf
cmp
in
adc
fsubrs
push
mov
lock
adcb
mov
sbb
test
ja
inc
adc
mov
cmpsb
int
add
in
sub
xchg
xor
xchg
jg
push
mov
dec
insl
jns
sbb
sahf
repz
sbb
push
inc
add
sbb
push
in
cwtl
pop
lcall
aad
pop
int
push
inc
xor
push
sar
je
dec
or
xorb
adc
stc
mov
mov
in
jle
push
fisttpll
push
pop
xchg
stos
dec
or
repnz
scas
in
sti
lods
xchg
sub
dec
xlat
repnz
add
sbb
sbb
pushf
loopne
push
mov
movsl
jns
mov
xchg
out
lret
test
mov
pop
or
cs
out
mov
fnstcw
rcrb
gs
xchg
jo
sub
sbb
add
pop
cltd
xor
or
out
mov
mov
xor
or
mov
dec
jbe
xor
mov
in
loopne
ja
xchg
xor
popf
arpl
pop
and
jl
flds
scas
pusha
sahf
cmp
out
addr16
dec
jb
or
bound
ror
cltd
cmp
xchg
jo
cmpsl
jg
and
loopne
jno
inc
push
fwait
dec
cmpsl
fstpt
pop
xorb
fucomi
je
mov
jle
xor
push
adc
leave
xor
adc
test
fsubrs
pop
mov
pop
cmp
sbb
call
mov
and
movsl
or
pop
cmpsb
push
mov
leave
cmp
xor
pop
sbb
adc
ljmp
mov
arpl
iret
dec
add
cld
pop
enter
dec
loop
mov
mov
sub
mov
int3
outsl
cmp
das
or
inc
mov
jo
inc
out
scas
insb
cmpsb
insl
cmpsb
cmp
pop
mov
push
test
and
add
dec
ja
pop
mov
lods
into
mov
mov
test
negl
pusha
psubd
iret
adc
adc
cwtl
inc
int
xchg
dec
ret
cltd
mov
test
mov
mov
push
loopne
pop
int3
fcoml
dec
xchg
cmc
int3
fcomps
cmp
inc
xchg
fistpl
pushf
mov
mov
test
mov
pop
icebp
push
loop
pusha
das
rol
pop
xlat
and
pop
inc
xlat
in
jno
loope
out
ja
enter
add
cmp
nop
aam
ja
arpl
nop
and
out
subb
test
pop
jg
gs
sbb
stc
loopne
cmp
push
pop
sub
sub
push
mov
mov
lcall
stc
sub
cmp
in
inc
dec
ret
fs
aas
jbe
jmp
add
add
jne
or
es
add
mov
or
cmpsb
orb
fs
outsl
pop
and
lcall
pop
inc
cmpsl
mov
mov
add
push
test
inc
xor
pop
mov
and
int
add
xchg
mov
dec
pop
sbb
lods
dec
lret
pusha
shll
jmp
cs
and
jecxz
fsubrl
and
push
iret
cmp
pop
or
push
adc
jns
jl
sbb
inc
adc
mov
das
in
ret
movsl
insl
enter
rcrb
les
jle
sub
incb
in
xor
push
shr
in
in
mov
adc
leave
add
int
pop
int
into
scas
sbb
dec
and
ja
mov
rcr
push
mov
fmuls
iret
xor
lods
mov
adc
dec
das
enter
lea
xor
mov
imul
or
pop
cmp
xor
dec
inc
cmpsl
int3
imul
test
jnp
cmpb
xchg
jb
jns
movsl
es
xchg
ret
adc
lock
scas
or
sub
repnz
repz
fists
xchg
movsb
int3
sub
ss
dec
dec
ficoml
xchg
push
shll
or
jno
loop
ds
fstpt
mov
movsl
xchg
adc
ja
cmpsl
rclb
stos
push
jg
inc
adc
lahf
push
insb
ds
xchg
fldenv
in
xchg
cmpb
das
repnz
pop
int
xor
cs
mov
dec
dec
xorl
lods
daa
push
add
mov
jmp
add
push
mov
in
cld
xlat
jno
shr
jmp
adc
push
mov
sub
fdivrl
push
in
roll
fstp
mov
jbe
test
sbb
inc
clc
jl
mov
aad
aas
fiadds
dec
push
clc
mov
push
arpl
mov
add
inc
cs
push
xchg
and
add
loop
mov
push
rcll
push
dec
xor
loopne
fadd
pusha
shrb
repz
push
sbb
lret
push
aad
jge
rcrb
rcl
add
jmp
adc
xor
jne
pop
mov
imul
dec
pop
cwtl
rcrb
adc
lods
or
xorl
cmp
or
lret
sbb
rclb
cmp
jae
scas
inc
cmc
inc
stos
icebp
adc
sti
fwait
add
cbtw
inc
mov
sbb
mov
outsl
mov
dec
adc
push
xor
xchg
pop
xchg
mov
xor
sub
fnstenv
sbb
jne
divl
push
mov
sti
mov
inc
ret
cmp
push
imul
or
int
out
adc
mov
bound
xchg
or
ljmp
scas
sbb
pop
push
adc
jmp
cmp
insl
xor
mov
or
fsubrs
sub
std
jb
xchg
add
sub
cmp
insl
cmpsb
addr16
inc
mov
aas
cmpsl
xor
xlat
cmp
sbb
sar
adc
jecxz
sbb
jo
andl
lods
dec
fcmovnb
bound
call
cmp
jecxz
lea
pop
mov
lods
stos
orb
dec
push
pop
imul
ficompl
sbb
in
xor
popf
mov
fnsave
mov
sub
pushf
pop
mov
jge
in
jmp
xor
mov
in
mov
dec
ja
mov
cmpsl
xchg
in
scas
sbb
and
stc
ljmp
inc
inc
bound
jl
inc
mov
bswap
cmpsl
fnstenv
pop
andb
std
ret
mov
pop
jecxz
ja
fisubrl
aaa
mov
addr16
jne
fisubrl
xchg
dec
cwtl
ficoms
mov
add
add
fsubrs
loope
jno
cmp
ds
sub
iret
icebp
pop
lret
pop
stos
rorb
scas
fisttpl
and
xchg
rcl
dec
mov
int
mov
mov
jl
cmpsb
je
cltd
hlt
or
mov
or
inc
xor
push
adc
and
cmp
dec
dec
aas
sub
decb
mov
fiaddl
cmc
xor
sbb
aad
dec
lods
sbb
adc
lods
adc
dec
jge
push
pop
jge
int
push
enter
sbbl
test
mov
out
lock
inc
dec
xchg
push
and
and
sub
push
in
sbb
daa
lods
lahf
test
adc
mov
rcll
jae
inc
std
sarb
les
sub
add
dec
mov
sarb
les
sub
cmp
add
andb
sbb
mov
lods
es
mov
adc
lret
push
mov
push
xor
xchg
addr16
loope
in
lret
inc
mov
mov
into
mov
lret
xor
bound
shrl
lret
pushf
xchg
sbb
icebp
inc
gs
xor
adc
sbb
dec
push
dec
inc
dec
push
dec
das
mov
jo
je
xorb
cwtl
cmpsl
jmp
mov
pop
imul
out
popf
imul
pop
jl
mov
mov
in
jecxz
shl
inc
cmpsl
inc
pop
sub
push
imul
arpl
mov
inc
fidivrl
pop
xchg
test
dec
add
mov
push
cmp
inc
ljmp
or
sti
rclb
sbb
mov
inc
jle
aaa
arpl
sub
push
in
mov
iret
mov
adc
xor
xlat
mov
je
das
in
lahf
aaa
movsb
push
or
and
lahf
sub
xlat
icebp
sar
push
jl
add
out
lods
mov
fs
stc
jo
test
mov
movsl
loopne
subb
test
ret
jg
sub
xor
mov
mov
jmp
sub
sub
out
dec
mov
and
xchg
cmp
push
jb
ret
out
or
repz
fldcw
testb
adc
cmpsl
cltd
lret
cmp
mov
daa
mul
dec
addl
xchg
push
push
sbb
out
and
clc
dec
fidivl
xchg
in
push
add
and
push
mov
mov
add
mov
inc
lods
gs
push
fcomps
clc
stos
inc
mov
popa
dec
daa
inc
pop
dec
mov
orb
outsl
bnd
mov
inc
push
and
mov
fiaddl
stos
ret
push
lcall
fistpll
pop
outsb
das
icebp
xor
adc
dec
mov
and
arpl
mov
pushf
mov
jl
daa
mov
xor
rorb
add
or
sub
sbb
int3
xor
iret
in
mov
inc
or
push
lods
adc
jp
aam
inc
push
xor
xchg
xor
imul
into
add
push
adc
push
jp
inc
lret
ret
sbb
xor
scas
movsl
mov
repnz
in
ja
in
pusha
mov
shr
sbb
push
sbb
mov
mov
daa
mov
mov
hlt
mov
mov
fwait
push
mov
gs
ret
or
inc
cwtl
ftst
jmp
pop
dec
data16
jp
push
xor
rcl
xor
sbb
cs
int3
rcrb
cld
xchg
push
cwtl
cmp
sahf
dec
jp
inc
lahf
pop
scas
pop
ds
xchg
mov
insl
pop
fidivs
push
cmpb
add
in
adc
test
lea
xor
xchg
fistps
out
aas
jp
xor
cmp
ss
lea
ljmp
subl
xlat
push
movlhps
mov
cmpsl
enter
lods
sub
andl
dec
enter
loopne
insl
mov
xchg
outsl
fs
push
sbb
cwtl
mov
or
out
cld
mov
inc
out
jl
aad
bound
inc
xor
fisubs
mov
sub
xchg
repnz
daa
xor
loope
mov
lret
leave
sub
dec
mov
aas
adc
das
xlat
mov
mov
notb
rolb
pop
ret
sub
outsb
adc
mov
and
hlt
movsl
add
mov
popf
movsl
sbb
lea
sbbl
push
sbb
imul
test
dec
sbb
pop
and
sub
cmp
jb
mov
pop
lds
mov
dec
mov
sub
add
in
aas
ljmp
inc
fistps
lahf
jmp
jno
lock
cli
les
push
or
test
and
mov
mov
mov
ret
xchg
arpl
or
loop
inc
sbb
fwait
ret
jl
xchg
jecxz
pop
out
sbbb
push
pop
inc
out
lret
shll
aaa
push
pop
xor
popa
cmpsl
jmp
push
mov
out
mov
dec
sahf
test
sahf
out
pop
jo
andl
cmp
movsl
std
pop
nop
cmpsl
adc
mov
dec
fwait
aad
leave
dec
fstpt
pop
push
sub
pop
call
lret
cmc
xor
cmpsb
cmp
mov
push
pop
sti
mov
inc
mov
dec
jecxz,pn
inc
lea
rcrb
nop
adc
daa
enter
dec
inc
mov
incl
nop
sub
cs
jecxz
push
dec
addr16
sbbb
sub
inc
inc
or
push
xor
sbb
or
pop
fldt
and
in
add
mov
rcl
call
xchg
pusha
xchg
sbb
mov
xchg
mov
sub
inc
jg
repz
xchg
jno
leave
repz
ret
cmp
ftst
outsb
jl
sub
outsb
lret
add
xchg
test
cmp
xor
pop
mov
and
sbbb
mov
gs
lods
jecxz
pop
jmp
add
scas
in
sub
in
push
dec
cmp
push
jns
push
push
sbb
mov
mov
popf
fdivrl
sbb
push
das
mov
dec
lahf
xchg
dec
mov
stc
xorl
mov
ja
lock
lea
ds
mov
pop
bound
mov
das
push
sub
add
sub
fisubs
pop
sbb
in
imul
ret
fdivs
mov
aas
cmpsl
icebp
test
sub
js
sub
dec
mov
mov
push
pop
add
mov
pushf
fwait
mov
push
imull
mov
gs
decb
shrb
or
and
fldenv
mov
mov
seta
orb
pop
push
sbb
pushf
icebp
inc
dec
mov
jne
dec
fbstp
loopne
test
inc
insb
fwait
mov
es
je
sub
xor
gs
ret
mov
sarb
jno
bound
in
adcl
loopne
pop
or
movsb
sub
sub
xor
sbb
and
push
fnstenv
arpl
mov
test
aaa
fwait
popa
mov
and
in
xchg
adcl
pop
and
popf
jb
lods
mov
mov
inc
jae
popf
push
adcb
mov
mov
mov
imul
stos
adc
xchg
adc
cwtl
fimull
test
lret
mov
inc
dec
push
fwait
jle
mov
mov
or
aas
subb
dec
ret
mov
mov
adc
arpl
movsb
cmp
or
pushf
movsb
mov
pushw
push
js
inc
and
in
and
data16
push
pushf
add
cmc
insl
add
mov
fs
int
filds
mov
inc
pop
add
push
inc
sbb
sbb
lds
sub
test
outsl
pop
push
and
test
pop
in
jecxz
testl
pop
rcll
sub
faddl
cmp
mov
das
mov
jb
repnz
das
fdiv
outsb
add
movsl
add
lahf
arpl
sbb
and
inc
fstpt
push
das
xchg
cmp
pop
cmp
imul
or
pop
jnp
sahf
gs
pusha
not
out
test
lods
iret
xor
lret
cs
fdivrl
ja
clc
mov
add
mov
sbb
or
mov
jnp
mov
sub
push
imul
ja
lcall
out
xchg
aam
and
outsl
xlat
jns
xor
in
sahf
jmp
arpl
sbb
test
popf
lcall
jo
cmp
mov
lahf
dec
or
add
jl
testb
jb
inc
pop
mov
inc
inc
loope
push
sub
leave
fnsave
test
stc
loope
adc
mov
cwtl
jmp
outsb
xchg
cmp
jns
xor
fidivrl
lock
inc
xor
mov
lret
xor
outsl
mov
leave
mov
push
sbb
jg
or
jmp
ja
jecxz
scas
cmp
negb
adc
xchg
fidivrl
ja
ficoms
cwtl
shrd
dec
mov
div
lods
add
movsb
add
inc
cltd
test
aas
pop
cmp
fstpl
ds
mov
jae
fcmovbe
ds
and
in
cmp
iret
shll
les
push
sti
add
testl
hlt
addl
in
icebp
enter
mov
stc
inc
mov
and
sbb
out
mov
addl
mov
xor
mov
push
shlb
mov
pop
icebp
enter
mov
cmp
pop
loopne
movsb
fisubrl
mov
hlt
movl
push
jp
push
ret
imul
sbbl
xor
fnstcw
sarb
cld
push
aaa
xchg
pop
push
adc
call
mov
xor
enter
insl
es
fisubl
insb
ljmp
pushf
je
jne
cmp
pop
push
mov
lods
scas
test
cmp
leave
xor
out
enter
add
jnp
pop
in
jnp
xchg
adc
fdivp
addr16
inc
or
fiaddl
lret
int
push
rolb
and
jne
mov
cmp
popf
xor
roll
push
and
sarb
adc
arpl
push
sub
mov
pop
sbb
or
hlt
mov
inc
loope
inc
dec
or
pop
in
fistpll
cld
cs
push
ss
in
lock
jge
mov
xchg
mov
push
imul
xor
inc
sub
dec
ret
mov
lret
or
ljmp
cmp
jne
xor
pop
adcl
outsb
lret
mov
mov
push
push
mov
mov
dec
lds
sbb
jae
jo
xor
adc
adc
ficoml
jae
pop
inc
into
ss
outsb
inc
xchg
rorb
adc
int
fsubl
adc
and
xor
push
adc
and
jnp
dec
cmpsl
mov
rorb
fidivrl
sbb
mov
dec
jbe
ret
add
lcall
mov
push
mov
int3
cmpsl
mov
imul
and
stos
mov
icebp
fisubrl
xlat
add
xorl
adc
mov
cmpsb
pop
aam
out
jg
ja
xor
pop
sahf
and
pop
adc
dec
xchg
test
adc
out
lea
test
mov
fs
in
lock
lret
mov
clc
add
lret
adc
fsts
or
jno
loop
mov
ret
push
lret
std
clc
dec
je
xlat
adc
push
mov
fbld
jbe
fwait
push
xor
dec
push
mov
add
push
cmc
jmp
add
jmp
xchg
iret
movsl
mov
stos
xlat
daa
testl
sub
mov
xor
pop
mov
xchg
jbe
cmc
loope
adc
pop
jecxz
sub
mov
pop
cmc
rclb
popa
push
out
xchg
aam
sub
fidivs
jns
and
icebp
add
gs
pop
cmc
fptan
adc
test
filds
test
ret
sub
je
mov
cmp
aad
adc
mov
mov
push
mov
pop
mov
mov
stos
mov
mov
mov
mov
lret
hlt
repz
mov
cmpsb
cmp
filds
push
in
cli
mov
adc
push
in
or
dec
cltd
lods
xchg
pop
xchg
inc
jge
adc
add
test
adc
cmp
mov
lock
push
add
xchg
stos
cmp
outsl
or
xchg
lcall
in
fwait
push
xchg
cmp
mov
adc
mov
out
into
leave
lahf
iret
and
loop
sbb
es
cli
xor
daa
adc
insl
stos
scas
add
inc
sub
or
in
inc
sarl
ret
shlb
out
and
repnz
into
shlb
repnz
nop
cmpsb
pop
sbb
lcall
adc
dec
mov
pop
popf
xchg
push
fists
jb
mov
jnp
fidivl
inc
mov
fucomi
push
cmp
xchg
mov
arpl
cli
arpl
add
jle
xchg
test
aad
jns
fsubrl
and
push
mov
loope
test
sbb
shrb
outsb
mov
or
mov
and
aad
inc
ret
mov
cmp
aaa
std
inc
std
push
adc
ds
mov
cmp
test
add
xchg
sub
jno
dec
or
push
icebp
scas
xchg
sbb
push
mov
lods
adc
pop
ljmp
dec
fidivs
cmp
dec
adc
xor
or
push
loop
jne
std
or
scas
cltd
pop
inc
lret
xchg
push
flds
add
and
lahf
jmp
pop
mov
int
test
add
add
mov
shl
arpl
aad
test
push
loop
jbe
rorl
sub
clc
xlat
hlt
sahf
cmp
and
fdivrl
adc
popf
pop
sbb
std
sub
inc
jo
push
mov
xchg
cli
iret
gs
and
add
daa
jo
sub
xchg
popa
jl
pop
and
adc
push
int3
repnz
sti
sbbl
cmpsl
ret
cmp
xchg
inc
mov
xchg
mov
ss
fs
lds
inc
sbbb
mov
xor
xchg
or
sub
call
or
and
aaa
scas
hlt
lret
cmp
jns
dec
cmp
mov
inc
xchg
mov
mov
mov
push
sub
jmp
cmp
leave
cmp
pusha
stos
je
pop
jns
mov
mov
lock
adc
mov
pop
sbb
push
jne
bound
inc
and
js
mov
xorb
jp
mov
xchg
hlt
sub
inc
stos
cmpl
dec
and
jmp
mov
daa
stos
icebp
sbb
push
or
xadd
pop
fwait
into
in
mov
fidivl
mov
in
loop
xor
fcoms
jp
rcr
decl
in
mov
or
sbb
pop
xor
movsb
cli
jae,pt
mov
xchg
pop
mov
sub
jge
and
cs
out
stos
push
iret
ret
outsl
mov
das
push
enter
xchg
imul
or
cmpps
jb
mov
mov
jle
pop
mov
adc
and
mov
adc
sub
add
ds
sbb
lahf
jge
lret
pusha
lods
and
cltd
dec
enter
in
pop
cmpsl
andb
xor
call
mov
fmuls
add
pop
sbb
add
inc
dec
repz
test
cmp
data16
and
out
pop
sbb
mov
add
dec
sbb
jns
leave
mov
decl
push
sti
popf
pop
shlb
in
or
fwait
gs
cld
hlt
mov
jne
sahf
in
in
mov
adc
mov
aaa
xchg
mov
loope
rcrb
out
add
in
jp
popf
aad
hlt
mov
cli
cli
mov
in
shrb
push
out
mov
mov
fsubrp
shrb
adc
adc
aaa
dec
inc
sub
jne
bound
xchg
stos
test
push
fistps
sbb
sti
add
mov
scas
ja
adc
dec
loope
icebp
js
xlat
mov
pop
or
jecxz
or
cmp
dec
stc
imul
fwait
push
testl
lcall
fbstp
xor
in
pop
push
push
into
pop
or
push
inc
test
cmp
sbb
sbb
dec
daa
fimuls
adc
call
imul
sbb
les
lahf
sbb
add
push
dec
xchg
inc
push
jp
mov
stc
nop
and
rcrl
push
int3
mov
push
fmuls
in
sbb
filds
jg
test
insb
mov
add
sub
leave
icebp
pop
cmp
les
or
in
inc
pop
andl
mov
flds
fs
cmp
aaa
bound
insl
inc
xchg
push
mov
lock
ret
add
jne
pop
daa
icebp
cmpsl
xor
jnp
push
lods
mov
sub
mov
shrb
cmp
loop
sbb
sbbl
lahf
sub
cmp
data16
push
fwait
rcrb
dec
pop
inc
mov
adc
cld
clc
rcrl
mov
lahf
rcrl
out
fisubrs
or
dec
mov
js
xor
and
add
and
daa
orl
lret
cmp
or
in
shlb
cld
lret
fucom
and
cmpsl
mov
jne
pop
jge
int3
int3
mov
lods
xchg
icebp
pop
pushf
fld
xchg
lret
enter
out
inc
adc
cwtl
stos
pop
pop
in
shl
and
jle
scas
xor
icebp
jl
cld
cmc
repz
and
ds
xchg
cs
push
cmp
xor
jg
cmp
jle
mov
mov
jo
push
fistpll
jle
les
pop
xlat
sub
cmp
inc
jbe
and
add
data16
push
out
decl
mov
or
push
mov
lcall
xchg
mov
push
scas
jmp
out
leave
cmpsb
xchg
jmp
movl
jo
lods
mov
loop
push
push
xchg
dec
mov
pushf
clc
jb
fidivs
jns
fwait
dec
sbb
pop
ja
pop
lahf
add
xchg
xchg
sbb
mov
push
lods
mov
data16
jae
jae
sbbl
pop
cmp
mov
mov
cmp
inc
pop
dec
jnp
sbb
mov
xchg
sub
pop
mov
repnz
pop
xor
leave
push
out
xor
cwtl
loopne
popa
movsl
cmp
pop
into
cmpsb
adc
inc
int
aas
mov
js
movsl
popf
sub
ljmp
fldcw
push
sbb
fnstenv
icebp
ja
mov
sbb
imul
dec
add
out
and
std
fidivrl
push
xor
dec
subl
add
or
jo
mov
sbb
dec
mov
shlb
hlt
sub
enter
ljmp
movsb
push
xchg
xor
imul
ficomps
jp
popf
xor
or
mov
mov
push
enter
lahf
mov
pop
aad
hlt
das
add
push
jae
addr16
dec
adc
test
add
push
mov
dec
rcrb
lahf
outsb
cmp
je
and
pop
stos
inc
shlb
push
mov
cmp
imul
stos
sti
or
test
cs
bound
mov
or
rcll
jmp
or
stos
mov
dec
sbb
and
pop
stc
sub
fstpl
lret
sub
cld
mov
jb
mov
popf
imulb
xor
or
outsl
sub
jbe
popf
sbb
ret
xor
into
loope
jbe
idivl
popa
mov
fs
jbe
push
call
mov
test
fdivs
outsl
adc
sub
mov
push
or
jb
insl
cvtdq2ps
inc
sbb
lret
addr16
sub
aas
push
sbb
dec
test
xor
adc
cmp
loop
call
les
incl
xor
lcall
dec
lret
cmp
adc
sbb
mov
fildl
pop
sahf
push
enter
cmpsl
mov
cmp
imul
out
pushf
subb
jb
je
mov
add
cs
mov
icebp
pusha
mov
xor
aaa
aas
push
cmpsb
sub
test
mov
pushf
mov
fwait
ja
jl
or
or
sbb
scas
pop
fst
mov
repz
jno
fsubs
jae
jb
or
jnp
mov
sbb
mov
lahf
rcrb
pushf
repnz
xchg
in
dec
and
shr
imul
sti
mov
lods
jl
into
or
cmpb
push
repnz
lds
stc
xchg
sti
inc
loope
pop
or
mov
jne
xchg
fwait
push
outsl
add
push
mov
test
je
and
orb
stos
fcmove
enter
fs
rclb
mov
sti
or
adc
int
ret
add
lret
movsl
and
jg
dec
jmp
add
adc
sar
daa
or
sub
pushf
mov
aam
cmp
mov
js
mov
hlt
mov
imul
cmp
xchg
aad
aam
mov
add
cmp
rcll
push
je
adc
push
xchg
ret
arpl
loope
pop
int3
sub
pop
inc
scas
lret
xlat
pop
je
daa
movsl
test
insl
dec
mov
push
repnz
sbb
js
mov
hlt
and
das
lcall
je
ret
push
xchg
insb
loop
add
mov
jnp
xchg
sbb
sbb
dec
and
in
imul
mov
inc
sti
in
or
cmpsl
jae
xchg
inc
cmpsl
push
sub
fsubs
or
in
sbbb
mov
imul
push
pcmpeqb
and
lret
test
jge
mov
mov
fldl
and
cmpsl
out
cmp
inc
inc
xor
push
jo
test
mov
mov
dec
add
push
scas
xchg
loop
add
into
or
idivl
je
mov
mov
add
stos
xchg
sub
mov
and
cmc
sbb
and
jmp
mov
out
mov
mov
hlt
xor
icebp
mov
imul
call
sub
mov
mov
mov
std
imul
orb
bound
xor
or
mov
mov
jno
lods
out
mov
sub
push
aas
lods
xor
lods
mov
test
iret
lds
dec
in
movsb
dec
das
popf
loope
push
xor
jmp
dec
dec
out
popa
lret
push
movsb
mov
test
les
and
xor
movsl
out
aaa
andb
jmp
xchg
push
add
nop
sub
mov
sub
daa
stos
out
fdivl
push
pop
inc
xchg
rcl
sbb
jno
cmc
or
jns
add
loop
aam
inc
imulb
daa
js
jge
insb
testl
mov
mov
fcom
addr16
je
scas
cmpb
xchg
data16
pop
insl
mov
fstpl
icebp
cld
into
repz
lcall
lods
inc
mov
mov
aaa
xor
ljmp
lcall
lcall
lods
cmp
jle
mov
inc
cmp
inc
stos
add
jl
test
sbb
cmp
das
negl
cmp
sahf
and
es
cwtl
test
insl
push
xchg
sbb
sbb
stos
icebp
adc
es
fs
xor
pop
jb
movsl
ljmp
lret
cld
aad
fwait
loop
mov
subl
sbb
testb
aam
test
mov
mov
mov
daa
out
fs
lds
lods
aaa
or
push
sahf
fwait
out
xchg
scas
jo
aaa
mov
ret
jl
jne
jg,pt
lcall
pop
xor
lods
es
sbb
rorb
sbb
sub
das
xchg
dec
mov
fcoml
lods
sub
psadbw
clc
cmpsb
inc
xchg
fcoms
push
adc
add
fsubrp
dec
cmpsl
sub
and
mov
fadds
jmp
push
aam
push
into
dec
mov
call
mov
js
pop
aam
popa
cmpl
lret
adc
xchg
rcrl
add
cmp
jecxz
mov
insl
push
push
in
int
pop
fs
loopne
pop
add
adc
push
xchg
jnp
es
out
or
lods
hlt
cmpsb
je
sbb
lret
xchg
in
iret
sub
ret
xchg
cld
sti
cmp
sbb
mov
in
xchg
gs
jle
push
shr
ja
and
addl
adc
int3
mov
inc
mov
and
xchg
shl
cwtl
jno
jno
inc
mov
sbb
dec
mov
pop
es
loop
aad
leave
lea
out
cmc
lea
dec
adc
rcrl
dec
and
dec
fistps
ret
icebp
imul
iret
push
cmp
invd
stos
leave
jns
gs
xlat
xlat
fimull
jo
sub
and
repz
and
lahf
mov
mov
call
or
stc
popf
dec
jge
push
gs
cmc
add
lret
lods
push
pop
cmpsb
stos
into
mov
add
sarb
icebp
lea
sti
rolb
pop
xchg
add
xchg
adc
pop
push
inc
adc
out
lods
push
inc
cmp
xchg
mov
imul
rcr
jmp
cmc
iret
push
mov
aad
sbb
scas
jp
in
inc
outsb
push
imul
jle
or
adc
mulb
xchg
pop
inc
insl
fcomps
lods
sbb
fs
fidivrl
into
mov
cli
jge
or
cmp
push
mov
mov
and
jle
ljmp
movsb
cmp
test
add
push
mov
repz
fldenv
mull
xor
in
movsb
jns
mov
push
cmp
les
xchg
mov
je
sub
mov
add
xchg
sub
pop
icebp
xor
test
inc
inc
push
xchg
testl
fdivp
sbb
clc
jae
inc
fcomps
lods
pop
in
jecxz
bound
dec
cmc
dec
add
cmp
cs
push
xchg
inc
test
stos
subl
xor
shl
sbb
mov
movsb
jecxz
int3
cmp
ret
push
shr
cwtl
mov
test
pop
repz
mov
iret
fcmove
stos
jmp
jecxz
fisttpll
into
xchg
out
mov
cmp
or
lret
scas
movl
xchg
mov
mov
add
sbb
push
fnsave
and
xor
pop
mov
xor
movsl
jnp
adc
fisttpl
into
mov
out
pop
mov
and
leave
jae
cmp
sbb
iret
subl
cmp
loopne
insb
subl
lods
xchg
fdivl
jne
lock
push
and
adc
pop
insb
mov
jecxz
lret
subl
bound
scas
mov
add
mov
sahf
push
popf
fsubs
lock
push
movl
int
movsb
mov
ret
pop
ficoml
push
xchg
aas
and
push
and
mov
movzwl
cmp
push
or
adc
or
xor
xor
push
in
gs
add
jge
and
scas
sub
std
inc
aaa
arpl
leave
dec
jne
stos
xchg
xchg
movsl
mov
mov
inc
cmpsl
mov
stc
test
mov
je
mov
daa
pop
pop
cmpsb
dec
mov
arpl
rorb
leave
mov
jo
xor
cmp
or
or
mov
std
jb
adcl
push
mov
aas
mov
pop
test
pop
push
or
pusha
inc
imul
and
xchg
movsb
xor
mov
lret
pop
jnp
mov
lods
or
stos
mov
add
jl
repz
add
fs
sbb
dec
pop
ja
ret
jg
and
cmp
and
inc
sbb
and
mov
into
dec
add
mov
xor
cld
pop
inc
pop
mov
iret
mov
sub
aad
dec
int3
pusha
imul
jno
or
loope
mov
or
push
mov
les
mov
shlb
filds
jnp
out
aaa
je
aam
outsb
fistl
jl
mov
mov
std
jno
jl
outsb
movsl
cmp
xor
lock
aas
xor
fwait
cmp
inc
aam
adc
inc
aam
jbe
js
xchg
pop
std
sub
inc
inc
mov
jns
xchg
imul
mov
cmpsl
add
sbb
int3
int3
sbb
shrl
jge
call
fs
adc
mov
inc
xchg
inc
mov
int
sbb
or
js
jns
enter
mov
in
das
enter
insb
stc
adc
stc
mov
daa
fwait
test
mov
testb
xchg
test
jg
cmp
adc
fs
push
ds
xchg
js
in
jae
jb
push
popa
sub
sbb
js
inc
or
test
mov
or
sub
push
add
decb
int3
data16
cltd
rcrl
into
mov
or
xchg
ret
inc
nop
jecxz
frstor
fidivrl
or
xchg
xrelease
std
adc
mov
cmp
arpl
lock
sbb
cld
add
rclb
fcoms
lret
mov
inc
adc
test
pop
xchg
mov
push
imul
sbb
rorb
sub
xchg
pop
jae
out
mov
mov
sub
add
rcll
sub
outsl
shlb
push
add
push
loopne
xlat
dec
jle
icebp
xchg
or
jecxz
lret
aaa
inc
mov
push
fsubs
inc
stos
mov
stos
fsubrs
jecxz
xlat
pop
jae
pop
pusha
orl
pop
and
data16
enter
ret
mov
sbb
jmp
fisubl
rclb
sti
pusha
add
andb
push
fadds
addr16
jns
sbb
jmp
pop
in
leave
gs
jp
enter
dec
shll
xchg
xchg
dec
loope
xor
cmc
loopne
outsb
clc
and
cltd
nop
insb
fwait
pop
test
push
lea
add
pop
pop
andb
xor
pop
jne
loop
inc
mov
je
inc
mov
push
mov
or
lods
sub
add
push
pop
inc
fwait
int
js
adc
mov
push
leave
repnz
pop
adcb
fs
adc
pop
xor
adc
xrelease
jae
mov
and
scas
cmp
in
adc
cwtl
xor
dec
and
pop
mov
imul
sub
xor
cs
jmp
pop
fbld
es
testl
test
ljmp
or
ja
jp
or
mov
or
in
mov
mov
aam
mov
xor
sbb
fsubrs
jle
mov
in
loope
push
lds
jg
lret
cmc
addr16
sbb
sbb
jle
pusha
jno
lret
or
in
xchg
setno
sbb
jb
xchg
data16
outsl
sub
add
sub
in
push
mov
pop
fldcw
xchg
jmp
stc
sub
mov
xchg
icebp
cwtl
and
out
aam
inc
adc
je
sbbl
fld
lods
inc
adc
es
xor
loop
xor
xchg
cmpsl
mulb
scas
or
pop
jecxz
and
xlat
and
rclb
aas
insb
jp
or
sbb
shl
xchg
jb
adc
das
je
scas
cmpsb
outsb
nop
xchg
sarl
mov
divl
ror
decb
ficomps
mov
sub
shll
das
shll
sub
dec
push
int
mov
cmp
push
int
cmpsl
push
mov
enter
je
daa
and
movsl
sbb
mov
xor
cmp
and
xchg
and
shll
sahf
call
ja
inc
push
nop
mov
idivw
scas
cmp
adc
mov
dec
jmp
add
push
mov
mov
xor
add
out
stos
fildl
popa
loop
jge
insl
xchg
aas
mov
arpl
jnp
lret
int
les
xor
hlt
sub
in
mov
cmpsb
xor
std
xchg
lret
xlat
sbb
cmpsl
push
mov
int
push
mov
inc
add
aad
outsb
pop
xor
test
mov
lahf
cmp
jnp
xchg
pop
or
mov
enter
cmp
and
movsb
mov
into
stos
nop
jns
out
adc
stos
out
lds
mov
std
insb
mov
mov
or
push
pusha
cmp
mov
xor
jecxz
ret
jb
fistpl
sti
test
push
daa
dec
jmp
test
in
adc
scas
fldenv
popf
xor
cmp
and
dec
pop
sub
nop
xchg
into
cmp
xchg
iret
sub
mov
out
in
push
aam
jno
mov
push
mov
adc
leave
mov
inc
push
xlat
in
mov
aad
in
add
adc
and
cmpsb
in
int
sub
arpl
and
jmp
pop
xlat
dec
push
repnz
andl
jmp
pop
scas
popf
mov
ret
xchg
mov
push
daa
add
add
mov
mov
ss
dec
fldl
les
popf
repz
mov
in
in
icebp
pop
ja
mov
xchg
les
cltd
int
push
and
mov
icebp
repnz
enter
loop
scas
push
mov
jmp
mov
xor
out
cs
or
xor
inc
leave
popa
cltd
add
aaa
push
mov
test
xchg
cli
popf
jb
sbb
jmp
inc
pop
mov
cmpsb
or
imul
and
into
push
pop
bound
jnp
adc
int3
xchg
aam
ret
out
mov
fisubrl
fdivrs
aas
xor
xor
push
push
dec
cltd
sub
pop
or
je
aas
cmp
or
xchg
adc
pushf
std
bound
push
pusha
push
or
cltd
and
or
cwtl
out
dec
out
das
mov
call
jns
sub
inc
jge
add
in
in
mov
sbb
xchg
fisubrs
lcall
fnstenv
cmp
fsubrl
xor
mov
sbb
mov
outsb
or
imul
aas
adc
dec
and
sarl
pop
and
lods
mov
jno
adc
xor
aas
dec
push
mov
or
push
mov
jge
out
jecxz
mov
adc
call
ja
mov
mov
into
pop
cmp
xor
add
mov
or
rorb
add
push
sahf
dec
and
push
and
add
xor
mov
cltd
lea
mov
lahf
xchg
jmp
sub
cld
mov
test
adc
mov
and
xorb
sbb
outsl
pop
in
sahf
mov
into
movsb
xor
gs
push
test
xor
iret
sbb
pop
cltd
nop
push
ja
je
sbb
pop
dec
xchg
sbb
fildl
data16
jl
lods
pop
ljmp
jl
push
sbb
and
jg
push
mov
pop
daa
fisttps
mov
jecxz
pop
xor
or
and
pusha
push
lret
and
adc
lcall
xlat
stc
sub
movups
pop
daa
inc
ja
stos
orl
and
jne
repz
inc
shrl
jo
push
fs
inc
and
lcall
sbb
jl
mov
shl
fwait
push
in
ja
outsl
mov
pop
xchg
scas
jle
mov
jecxz
call
in
test
xchg
mov
fistpl
test
mov
fldenv
fcompl
cmp
xor
cmp
out
aas
in
jp
sbb
lret
sti
cmpsl
fcomi
mov
jl
nop
xchg
jmp
dec
xchg
xchg
jecxz
jo
sbb
fwait
xchg
pushf
dec
add
sbb
sub
shll
add
mov
adc
cli
fistl
loopne
fidivl
int3
sub
popa
and
inc
jae
sub
mov
add
mov
enter
jne
jo
add
loope
or
cwtl
push
mov
and
mov
mov
gs
cmp
rorb
in
test
test
sub
xchg
push
in
fiaddl
lret
and
xor
mov
inc
lcall
jnp
mov
stos
aaa
lods
cli
lds
ja
pop
push
mov
xchg
mov
or
fidivl
mov
cmp
pop
push
push
mov
inc
sub
mov
dec
mov
and
pop
iret
nop
out
sbb
push
cmp
jg
test
sbb
lcall
fisttpll
je
loop
pop
mov
jno
xor
nop
and
push
int3
cmp
movsl
ljmp
jns
mov
pop
out
div
sbb
dec
sub
imul
sbb
xor
fwait
out
leave
push
fwait
std
aad
movsb
mov
inc
data16
pop
cltd
mov
xchg
jle
pusha
add
inc
gs
fistpl
or
jae
xchg
sbb
insl
push
sarb
mov
popa
mov
ljmp
test
pop
fidivrl
inc
fisubrs
mov
shrd
int
and
insl
repz
pop
mov
pusha
sub
cld
test
cmc
inc
xorl
lods
mov
inc
push
cmc
add
jge
cld
sti
stos
rcl
xchg
call
clc
or
outsl
push
js
xchg
sbb
pop
inc
roll
into
and
or
in
into
mov
push
dec
ss
loopne
pushf
cmp
sub
ljmp
cli
out
cld
inc
xorl
fcompl
ret
aas
jmp
mov
pop
mov
sti
aaa
fdivrl
cmpsl
and
sub
pop
jle
dec
jns
mov
jne
mov
fisubs
sub
test
ffree
or
clc
xchg
dec
lds
fnstsw
cmp
cmp
jo
test
movsl
sbb
mov
cli
pop
inc
dec
pop
outsb
jge
or
mov
inc
addr16
cltd
adc
int3
pop
pop
jmp
cmp
mov
mov
roll
icebp
adc
xor
je
push
sub
enter
lahf
xor
fcoms
inc
xchg
pop
popf
popf
sub
mov
push
add
lcall
adc
ljmp
hlt
out
add
adc
xchg
imul
inc
std
xchg
jl
int
dec
pop
jo
pop
fildll
out
pop
iret
cltd
lret
jmp
mov
inc
imul
push
adc
stos
ss
add
xor
add
aas
rorl
rclb
cmpsb
mov
xor
cmpl
pop
xor
std
in
pop
sti
mov
xchg
imul
push
sub
das
sub
fidivrl
sbb
fs
cld
loop
pop
movsb
testl
cmp
add
das
movsl
dec
orb
mov
fistpll
push
ficompl
test
sub
push
mov
mov
scas
addr16
cmp
hlt
mov
bound
nop
and
js
and
iret
sub
test
loop
lods
xchg
popa
cmpsb
insl
pop
xor
pop
lods
mov
loope
jge
movsb
je
and
repz
stc
call
mov
sub
fs
inc
dec
sarb
fwait
lds
hlt
jae
js
fldl
sub
pop
dec
jae
sub
pop
cmp
fimull
fisubs
movsl
sbb
and
xchg
xor
movsb
xlat
pop
xor
and
pop
clc
dec
inc
dec
pop
es
mov
out
stc
mov
and
gs
push
je
pushf
dec
sti
cmp
mov
nop
sbb
inc
cld
testl
enter
ficoms
cmp
mov
push
cmpl
pop
rorl
in
xlat
jb
cwtl
xchg
mov
mov
shr
nop
sub
sub
mov
out
pop
xor
push
in
sub
pop
xchg
mov
out
jno
inc
bound
sub
gs
sbbl
popf
cld
and
mov
pop
in
insb
mov
sti
ret
aas
aaa
mov
stc
dec
mov
lret
adc
inc
dec
int3
and
cmp
push
add
dec
sub
sub
fistps
adc
and
fcmovb
push
or
stos
inc
push
push
jmp
xchg
fistps
cmpsb
dec
dec
pop
cmp
cli
mov
cmpps
outsl
adc
dec
sbb
repnz
xchg
mov
loopne
fstpt
sti
dec
es
orl
imul
out
push
in
lock
jle
mov
mov
inc
and
push
dec
mov
stos
sbb
fbstp
out
lret
push
mulb
push
xchg
icebp
push
add
stos
rorb
stc
mov
divl
xlat
icebp
xchg
sarl
cmp
sub
cmpsb
out
push
mov
pop
aaa
mov
std
pop
add
sar
in
incb
jno
arpl
inc
and
sub
push
pop
dec
imulb
mov
inc
xchg
aas
cmpl
ja
fsubrs
rdmsr
add
roll
xchg
enter
ret
sub
jecxz
pop
ljmp
cmp
out
test
in
ret
pop
xor
lcall
jnp
std
test
jnp
js
pop
sub
fiadds
scas
icebp
mov
lret
out
sub
jo
jo
movsl
xor
shl
jmp
add
pop
idivl
jo
xor
xchg
add
in
mov
sti
int
jle
pusha
push
movsb
out
test
popl
cmp
xorb
int3
xor
sbb
push
in
cli
cld
pop
pop
shl
repz
and
into
push
cmpsb
fisubs
sbb
adc
sti
hlt
pop
xchg
in
sub
xchg
jle
jmp
faddl
adc
imull
into
push
xor
mov
add
or
out
and
sbb
mov
lcall
dec
idivb
add
jp
cmp
bound
dec
mov
int
pushf
xor
inc
cmp
outsb
pop
mov
sbb
jp
and
mov
daa
add
dec
cmp
rclb
scas
test
adc
fs
inc
push
or
pop
loopne
adc
dec
adc
inc
mov
inc
xchg
lods
mov
xchg
popf
lea
inc
xor
dec
push
shlb
add
pop
mov
push
add
loope
push
add
std
jnp
fildll
aam
mov
scas
xor
dec
popa
cmp
rclb
int3
notl
bound
lock
jo
repz
mov
loope
mov
push
cmp
mov
jns
push
mov
jge
xchg
or
dec
xchg
and
cmp
pop
jo
insl
subb
add
fdivl
push
sbb
inc
outsl
cld
push
aad
inc
inc
data16
or
leave
in
outsb
push
xchg
xchg
out
lea
imul
mov
addr16
push
sarb
popa
cmpsl
js
jb
bound
int3
clc
sbb
aas
mov
aad
enter
jle
loope
inc
das
sbb
ljmp
sahf
cmp
cltd
call
mov
out
mov
test
jne
hlt
push
lock
cmpsb
dec
int3
shll
test
rcl
xor
dec
or
aas
outsb
cltd
or
fcoms
adc
scas
cmp
push
aam
gs
call
sti
je
adc
dec
ret
push
jns
add
xchg
xor
xchg
xchg
sub
aaa
cld
and
mov
pusha
test
ja
xchg
and
mov
into
je
pushl
mov
mov
outsl
ljmp
out
mov
xchg
sbb
or
je
rolb
les
sub
int3
xchg
and
sub
jb
inc
scas
insl
fildll
jle
push
push
arpl
pop
mov
ljmp
inc
xor
enter
or
jl
xchg
sub
cmp
mov
adc
xlat
ljmp
pusha
test
out
popa
dec
sub
mov
stos
inc
movsb
cmp
loopne
push
std
int3
sub
out
jmp
cld
or
pop
sub
mov
jg
nop
imul
mov
repz
cld
xlat
insl
push
and
cld
dec
jecxz
push
or
iret
in
pop
mov
outsb
and
cmp
stc
and
inc
jg
push
dec
daa
mov
aad
popf
add
adc
scas
je
fidivrs
es
outsb
or
jg
leave
xchg
cmp
lods
xlat
add
xor
mov
popa
cmc
ja
and
mov
movb
push
cwtl
cwtl
mov
pop
sbb
shlb
mov
aam
xor
mov
fsts
ret
and
push
dec
mov
jne
push
mov
adc
in
movsb
mov
jmp
enter
aad
sbb
xchg
rcll
cmp
and
cmp
mov
add
sbb
xor
iret
popa
mov
int3
movsb
hlt
dec
fst
dec
mov
mov
jmp
jne
mov
into
jns
add
sbb
xchg
bswap
in
fdivl
pop
stos
movsb
enter
imul
rclb
mov
sbb
mov
or
and
scas
lret
mov
dec
lahf
sahf
pop
xor
mov
out
fmul
push
aaa
sub
int
push
push
and
cltd
scas
rorb
test
dec
repnz
lcall
or
out
hlt
mov
lea
or
fildl
movsb
dec
loop
sbb
mov
mov
cmp
mov
jl
mov
movsb
mov
and
and
adc
push
cwtl
cmp
mov
aad
and
clc
dec
pusha
repz
xor
shrb
negl
inc
mov
or
js
cmovg
mov
push
add
mov
popa
sti
mov
lods
mov
inc
stos
pop
lret
repz
push
or
push
cs
movsb
mov
jno
cs
inc
iret
mov
movl
int
call
xor
ss
cmpsl
pop
int3
sub
cmp
mov
pop
es
mov
xchg
icebp
pop
cmpsb
lods
das
adc
repz
dec
orl
mov
jbe
add
ljmp
sub
adc
jae
mov
push
push
jae
xlat
sbb
xor
mov
jp
flds
test
sbb
loopne
add
movsb
inc
int3
add
ds
cwtl
pop
jmp
xchg
and
adc
test
mov
and
popa
xor
cli
xchg
jge
cmp
cmp
enter
xor
popa
into
std
rcrb
je
cli
ret
and
mov
mov
test
rorl
scas
dec
push
push
mov
xor
pop
xor
fsubs
scas
dec
imul
icebp
pushf
sar
dec
in
sub
push
loopne
icebp
mov
push
inc
xor
stos
push
aaa
rcr
fdivl
mov
xorb
mov
xchg
cmp
js
pop
sbb
cmp
xor
add
jns
popf
pop
mov
enter
cmp
fbstp
mov
cmc
out
sub
repnz
sub
mov
add
shrb
mov
testb
out
xchg
out
cwtl
and
cmp
xor
adc
scas
mov
jb
fsubl
into
test
test
dec
cmpps
pop
jo
inc
add
pushf
mov
push
insl
pusha
jmp
imul
cs
in
xchg
out
cld
lods
mov
cli
push
mov
mov
es
int
push
fcmovu
mov
mov
jnp
sbb
loopne
sbb
jge
fdivs
jecxz
pop
gs
loope
fimull
ljmp
add
push
sti
mov
or
ret
insb
sbb
in
lods
adc
mov
add
push
dec
loop
inc
ret
mov
es
rcrb
orb
jge
xorb
xor
in
cltd
loope
pop
lods
mov
mov
jbe
cmp
push
ret
enter
aam
xor
push
mov
js
cmc
rcrb
test
inc
loopne
xlat
aaa
lret
gs
call
push
out
sbbl
int
in
jp
inc
cmp
movsw
cmp
push
idivl
imul
mov
imul
push
pop
sbb
cmp
lcall
jg
dec
mov
imul
jnp
inc
repnz
fnstsw
mov
lret
out
add
pop
mov
cmp
xor
mov
lods
xchg
xchg
pop
imul
mov
test
cltd
sbb
jp
pop
and
jb
mov
ds
dec
push
push
jns
punpcklwd
icebp
insb
xchg
out
add
mov
lret
stos
cmp
mov
fmull
cmp
cmp
ficoml
push
inc
bound
inc
iret
nop
mov
setbe
scas
shll
sbb
or
mov
clc
xchg
outsl
dec
in
mov
fimull
nop
imull
sbb
inc
jg
pop
popa
push
sub
out
add
xchg
dec
jnp
and
ja
inc
sub
inc
pop
pushf
and
ret
adc
push
or
imul
out
in
cmp
test
sub
call
pushf
and
std
imul
mov
mov
push
imul
xorb
xorb
dec
repz
aad
hlt
inc
movsb
arpl
insb
mull
subb
sub
or
or
test
push
sub
jg
pop
sub
mov
out
nop
pop
dec
mov
inc
lret
aam
mov
out
in
jno
loop
inc
xor
les
movswl
sbb
or
mov
lcall
cmc
loop
add
sub
jnp
fcmovu
ret
shlb
xor
and
add
cs
daa
push
lret
mov
jnp
pop
adcb
mov
cmp
add
push
cmp
cmpsl
mov
cwtl
cli
push
imul
sbb
add
mov
cs
xchg
jo
bound
cmp
fisttpll
hlt
pop
lret
incl
fwait
ja
xorl
mov
js
fucomp
repnz
movsl
in
movsl
push
je
sbb
std
dec
dec
fs
lods
jns
lods
sbb
sbb
mov
xor
sahf
xlat
and
arpl
xchg
jns
mov
jmp
add
xchg
mov
in
filds
xor
aas
mov
jmp
push
cs
cmc
mov
push
leave
adc
arpl
icebp
scas
jae
push
sarl
cmp
icebp
das
mov
mov
lods
mov
popa
pop
xchg
fwait
iret
mov
or
dec
push
fldt
popf
sbb
dec
xchg
jmp
repz
and
sti
leave
cmp
jno
addb
jl
pop
sbb
and
xor
mov
jae
movsb
mov
iret
pusha
mov
dec
nop
cld
push
jp
jne
cmp
mov
icebp
nop
pop
fistpll
cmp
sbb
and
gs
sub
cmc
xor
enter
nop
cmp
push
jnp
out
stos
fsubrs
cltd
mov
stc
sub
cmpsl
push
movsl
je
pop
loope
dec
inc
daa
lock
or
lds
test
inc
mov
jg
push
jg
out
cmp
adcb
fs
enter
xor
leave
cs
stc
jno
cmpsb
or
andw
int3
pop
and
mov
testl
jp
inc
and
lret
shll
fnstsw
add
dec
mov
or
sbb
or
scas
sbb
mov
or
jae
movsl
outsb
movsb
cmpsl
test
out
mov
and
dec
pop
stos
test
cmp
push
loop
loop
pause
sub
std
insb
sub
out
cpuid
mov
fisubl
call
fucomi
cmp
sub
cs
pop
mov
dec
imul
adc
cltd
fwait
mov
enter
xor
fisttpll
or
in
mov
cmpsb
push
pop
xchg
repnz
push
push
roll
inc
nop
loopne
mov
mov
movsl
push
mov
pop
insb
fsubr
sbb
add
mov
adc
loope
int3
cwtl
jns
in
sbb
mov
pop
pop
fdivl
sbb
xchg
fiadds
in
xchg
mov
and
shrl
add
test
or
mov
roll
sub
or
loop
jmp
sti
add
push
ret
xor
xor
fwait
inc
fsub
mov
mov
xchg
xchg
outsl
xlat
push
jns
cmp
ret
lret
dec
imul
mov
test
xchg
mov
xchg
sbb
mov
xlat
fwait
pop
add
in
dec
test
shlb
mov
int
cmp
or
mov
cltd
psllq
jnp
cmpsl
inc
cmp
stos
pop
adc
xchg
xchg
push
sub
sub
rcll
cmp
mov
in
or
jbe
adc
rcrb
das
pand
sbb
addr16
xcrypt-cbc
cmpsl
push
adc
and
movsb
dec
push
repz
outsb
mov
cli
imul
pop
pop
leave
cmovge
int3
mov
in
fnstsw
pop
mov
xor
xchg
cmp
int3
ret
lea
pop
dec
lods
jnp
inc
pop
out
rcrl
lods
out
jmp
xor
loope
hlt
std
add
lods
call
or
jp
test
pop
mov
jbe
stc
fidivrl
xor
sbb
outsl
pop
sbb
xor
pop
sub
mov
shlb
dec
dec
sbb
xchg
dec
xchg
mov
ss
inc
jmp
mov
add
aas
sti
jns
fdivr
rol
out
pop
mov
aaa
jne
in
adc
insl
arpl
outsl
movsl
movsl
test
jmp
cs
shll
lcall
sub
lods
mov
add
rcll
fsubr
jecxz
inc
fwait
inc
aaa
add
rolb
lods
pop
pop
inc
sbb
xchg
aam
mov
and
mov
roll
mov
and
cmp
jmp
sbb
cli
sub
fisubs
stos
inc
cmp
in
ljmp
les
mov
cmp
push
mov
jne
fsubl
cmp
push
add
lcall
mov
jae
add
pop
inc
or
lds
movsb
cmp
xor
cmc
loope
dec
or
out
sbb
pop
std
mov
push
xchg
cli
or
xlat
pop
movsb
rorb
popf
xor
mov
jb
mov
inc
xor
jge
sahf
sbb
mov
loopne
pop
xor
jnp
jnp
cli
mov
mov
movsl
or
outsb
lods
xchg
add
rorb
add
int
xchg
lahf
xchg
lds
push
sub
sbb
notl
or
dec
test
in
shll
pcmpeqb
and
dec
mov
or
pop
int3
pop
jns
inc
in
out
stc
ret
and
mov
cmp
popa
xor
imul
scas
xor
lods
sbb
bts
adc
add
inc
in
arpl
cmc
cmpsb
jge
aas
push
sahf
loope
icebp
or
call
mov
hlt
dec
fldenv
mov
cmpsl
mov
movsb
or
add
mov
gs
pop
in
pushl
xor
or
dec
cs
fsub
lahf
jo
in
mov
adc
lret
cmp
sbb
mov
mov
fdivs
jns
and
pop
jae
sbb
inc
add
xorl
sub
cmp
mov
hlt
jmp
movsb
jno
sbb
ljmp
jns
and
jne
rorl
add
push
jb
cmp
cmp
xchg
lock
sbb
into
lds
aad
nop
add
and
shl
ret
rol
push
jp
aas
out
dec
adc
and
or
jne
lret
adc
push
lods
cli
cmp
mov
pop
xor
aam
insb
fptan
das
dec
pop
sub
inc
mov
addr16
pop
cmpsb
lods
roll
add
or
leave
cli
repz
rcrl
mov
bound
sub
inc
xchg
int3
jecxz
cmc
leave
jnp
mov
ret
aad
push
aaa
shlb
add
jmp
cld
mov
mov
shlb
dec
neg
insb
inc
or
out
cltd
dec
lds
sbb
lds
popf
mov
pop
add
aaa
repnz
hlt
scas
and
jle
inc
jnp
add
add
and
negb
rcrb
test
dec
xchg
cltd
mov
stc
fs
inc
scas
mov
cld
orl
add
stos
inc
mov
cltd
fsts
push
out
xor
gs
fwait
test
sbb
rcrl
sbb
fldenv
lock
pushf
movsb
in
jl
mov
adc
popl
test
cs
dec
mov
jle
stos
inc
xchg
xor
adc
add
cmp
mov
nop
jnp
xor
or
in
xchg
in
sbb
faddp
lea
enter
pushf
adcl
pop
push
adc
pop
mov
outsb
jp
icebp
repz
aam
repnz
fadds
lcall
mov
cmp
jle
shll
xor
lds
mov
mov
test
cli
mov
or
jecxz
lcall
je
adc
dec
test
jecxz
out
mov
push
inc
sbb
aaa
fisubs
loop
aam
stos
rcll
lods
adc
enter
adc
jge
or
mov
loop
movb
out
call
xor
dec
movsl
pop
adcb
nop
pop
add
mov
loopne
push
jle
popf
mov
mov
fdiv
add
je
xor
xor
stos
icebp
mov
add
es
aad
aas
nop
jnp
insb
or
adcl
jae
popf
lods
les
repnz
push
push
jecxz
into
pop
dec
bound
and
jle
sahf
inc
and
or
ds
inc
mov
mov
add
lret
jge
sub
jge
sub
cs
aas
inc
fdivp
add
jmp
stc
push
popf
mov
xchg
push
mov
xchg
add
dec
fs
test
adc
pushf
cwtl
inc
lcall
sub
leave
pop
shl
pop
cmpsl
test
pop
orb
adc
loope
xor
xor
xor
or
pop
dec
jae
ss
add
mov
push
fs
stos
inc
popa
inc
lret
xchg
xchg
sub
xchg
sahf
push
sub
fmuls
bound
int3
nop
xchg
shlb
nop
and
mov
pop
push
int3
push
push
iret
ror
cmpsb
test
pop
xchg
adc
sub
je
jne
or
mov
xchg
add
jmp
mov
jg
xor
or
and
lds
aad
lahf
mull
mov
lock
fistl
inc
inc
hlt
cmp
jne
int3
dec
scas
outsb
call
movl
imul
jno
cmp
xor
and
or
cltd
js
mov
adc
aaa
inc
fsubs
arpl
lea
jmp
hlt
out
mov
gs
outsl
xchg
ret
adc
xor
add
ficompl
mov
pop
aam
push
das
xor
xchg
push
push
mov
push
mov
mov
jns
bound
pop
pop
rorl
out
xchg
mov
leave
xchg
movb
cmpsl
cli
icebp
clc
sbb
sbb
pop
clc
mov
cwtl
dec
fldcw
jmp
and
xor
xchg
add
cwtl
xlat
and
ret
stos
mov
int
add
insb
xchg
nop
jo
xchg
in
mov
fisttpl
pop
fisubl
notl
rorb
sahf
pop
jge
call
fmuls
adc
les
gs
mov
push
cmc
adc
test
insl
shll
mov
sbb
sub
insb
js
cmovbe
add
scas
outsb
jbe
cld
int3
ja
jmp
scas
lret
jle
scas
inc
mov
add
sbb
std
iret
lock
leave
sbb
mov
jns
lret
movsb
xchg
pop
leave
mov
sub
insl
pushf
inc
outsb
shll
hlt
cmp
pop
push
pop
inc
pop
enter
inc
inc
sbb
cmp
inc
pusha
mov
ljmp
imul
xchg
jl
cmpsb
sarl
dec
ja
lret
mov
aaa
dec
or
pusha
je
les
cmp
push
xchg
js
mov
subl
cmpsb
pushf
push
xchg
inc
aam
sbb
inc
fadds
cld
popf
mov
cmp
das
sub
push
repz
push
shlb
mov
push
cmpsl
pop
testl
cmp
loope
lods
pop
or
imul
sbb
negb
dec
xchg
sbb
jle
cmp
dec
push
or
nop
jae
dec
cmpsb
mov
push
jl
mov
sbb
sub
push
inc
shrb
cmc
and
lcall
mov
idivl
fwait
xor
loop
add
mov
add
adc
mov
ja
jle
in
fidivl
movq
mov
int
shlb
jns
dec
dec
out
push
mov
ljmp
xor
daa
mov
cmp
test
adc
dec
push
gs
scas
xchg
test
mov
jno
arpl
data16
add
hlt
push
sbb
das
ds
imul
addr16
sbb
add
mov
jne
cltd
pop
jo
or
jge
adc
addr16
pop
lock
ret
push
out
imul
js
mov
enter
inc
ret
mov
push
sbb
aaa
cmp
cmp
lea
in
inc
test
cmpsl
mov
jne
jg
scas
testl
faddl
divb
mov
je
test
in
fiadds
pop
dec
cmp
mov
fcomp
add
insb
ret
and
push
ret
es
in
add
lret
push
inc
xchg
das
xchg
mov
jne
shll
push
lods
mov
xor
sub
xlat
loopne
pop
inc
pop
arpl
pop
arpl
mov
jl
aas
jp
push
popf
push
ds
inc
jne
inc
fisubrl
je
mov
sbb
mov
adc
dec
xchg
sub
pop
rdmsr
imul
adc
fdivrs
sbb
pop
push
in
icebp
xor
leave
fcmovb
lret
loop
or
leave
lcall
or
mov
adc
cmp
cmc
adc
or
out
cmc
imul
xor
and
sarl
xor
mov
pushf
or
mov
cmpsb
inc
mov
testb
leave
fistps
add
lcall
gs
sub
or
rcr
xor
xor
sbb
xlat
orl
daa
movsl
cmp
push
mov
mov
dec
fsubs
iret
sarl
mov
cmp
adc
in
cmp
jns
push
clc
inc
hlt
rol
addr16
inc
inc
cmpsl
jnp
dec
add
xchg
inc
xchg
ficoml
mov
cli
bound
pop
push
fildl
jmp
movsb
jb
in
jg
fwait
shrb
inc
xor
inc
dec
lods
xchg
inc
addr16
out
dec
ss
jmp
and
mov
inc
out
int
jmp
cltd
mov
cwtl
jmp
lea
add
push
int
xchg
or
mov
pusha
shlb
add
test
outsb
push
fnstsw
inc
mov
push
sbb
test
sub
push
pop
loopne
movsb
in
xor
jge
arpl
outsl
mov
fstl
lcall
fisttpll
pop
daa
or
add
pop
or
xor
in
pop
popf
das
and
jns
repz
jns
into
add
subl
nop
aas
outsl
int3
mov
loopne
sbb
mov
mov
push
push
push
lods
jl
aas
imull
daa
dec
iret
adc
xchg
add
arpl
inc
testb
inc
mov
loopne
rorl
sti
jo
loope
shrl
imul
repnz
movsb
push
and
mov
lret
and
cmp
add
pcmpeqw
pop
fs
inc
jl
and
stos
jl
cmpsl
sbbb
pop
mov
or
dec
pop
scas
push
jae
repz
into
xchg
jae
mov
mov
lcall
cmp
icebp
adc
mov
scas
adc
mov
mov
mov
adcb
mov
inc
imul
dec
dec
push
mov
fstpl
cld
shlb
push
daa
pop
test
sub
mov
mov
cmp
aas
adc
jge
ret
clc
xchg
mov
jmp
sub
dec
inc
test
jl
pushf
hlt
cwtl
fdivrl
cmp
fwait
inc
int3
mov
add
mov
mov
lcall
in
xchg
stos
jbe
and
movsb
xchg
ljmp
shrb
fmul
inc
xchg
mov
stos
lahf
sub
dec
add
fs
dec
jl
fstpl
inc
dec
xchg
mov
mov
push
cld
cmp
rolb
ja
aaa
ret
adc
shll
or
ss
out
xor
hlt
fsubs
xlat
inc
les
xchg
add
cmc
stos
dec
adc
pop
pop
leave
out
adc
xor
ficoml
pop
pop
pop
xchg
mov
mov
pop
sub
pushf
fwait
test
into
or
mov
loopne
dec
jo
test
dec
cltd
jge
adc
test
pushf
dec
int3
mov
sbb
pop
shrl
pop
cmc
lods
popf
stc
xor
sub
jno
insb
lods
xchg
and
aaa
pop
leave
jo
mov
pop
mov
add
mov
es
rolb
loopne
jmp
pop
xchg
cmpsb
test
rclb
jmp
gs
pop
dec
xchg
jmp
pop
pop
cli
testb
cld
push
stos
insb
shll
lret
or
cmp
call
and
enter
mov
mov
lret
pop
frstor
lret
sub
push
outsl
ljmp
and
scas
jl
inc
mov
cs
mov
cmpb
rcll
xor
sub
sbb
pop
in
in
shr
mov
sub
sub
inc
pop
xchg
mov
fisubrs
int3
scas
push
insb
sbb
out
dec
addb
nop
mov
cmc
fs
jle
notb
mov
pop
mov
rcrb
loopne
xchg
push
movsb
and
add
sbb
mov
popf
mov
ret
andl
adc
popf
fdivrp
cmpsb
ret
icebp
push
fiadds
xchg
push
xchg
iret
pop
jl
lock
leavew
mov
ss
sub
aaa
cmp
mov
adc
jge
outsl
sti
jno
or
shrl
push
cmp
cmpsl
sbb
push
adc
and
add
jmp
ret
mov
add
add
fistpll
sub
xchg
cmc
out
lcall
mov
push
call
lds
push
push
xchg
rorl
inc
and
push
scas
add
xchg
data16
fwait
jl
aam
lret
cmpsb
fsubrl
pop
clc
xchg
and
pop
jp
mov
jb
sbb
jecxz
sub
inc
and
and
or
push
add
insl
mov
cmp
es
hlt
lret
mov
mov
insl
sbb
orb
xorl
lods
mov
jge
je
lds
pusha
pop
or
scas
jo
push
xor
je
sub
mov
push
jg
hlt
dec
jecxz
int3
and
lret
xchg
lret
cwtl
call
inc
or
pop
lea
mov
push
cli
clc
inc
pop
adc
sbb
pop
or
inc
cli
mov
and
arpl
outsl
out
outsb
pop
sahf
xor
pop
add
or
test
jge
mov
in
sbb
pop
cs
cli
fildl
ret
int3
pop
inc
and
xor
int3
pop
data16
jns
arpl
pop
dec
scas
xchg
jp
pop
popa
pop
cs
dec
pop
cmpsl
dec
movsb
and
xchg
es
mov
dec
jl
js
mov
mov
addr16
xor
aas
shl
jb
cmpsb
cmp
arpl
pusha
stc
push
inc
and
mov
enter
pop
outsb
jo
push
int
popa
lahf
push
mov
hlt
inc
xchg
xor
xor
cs
cmp
js
inc
jmp
push
rcrb
inc
insl
lahf
leave
ss
inc
inc
fcoms
in
daa
andl
movb
data16
cmp
mov
cmp
ficoms
mov
ja
int3
mov
cmp
xor
in
leave
jno
std
movsb
mov
dec
add
add
jo
cmp
dec
push
pusha
mov
ljmp
dec
xchg
cmpsb
mov
and
roll
mov
notl
cmpb
pop
test
push
sub
and
fisubrs
inc
push
ja
imul
ljmp
cwtl
cmc
cmpsb
jmp
xor
les
push
lcall
sarb
mov
jge
pop
mov
lods
mov
or
mov
push
loope
dec
out
sar
ja
inc
sub
lods
pop
and
out
mov
aam
lret
adc
shlb
inc
and
sti
cli
adc
xchg
cmp
mov
arpl
jbe
fimuls
test
ja
cld
push
xchg
sbb
inc
iret
popa
fisttps
ja
scas
sub
lea
bound
adcl
lcall
mov
cmp
lcall
xlat
out
xchg
pop
push
and
mov
stc
lea
cmpsb
add
xor
inc
xchg
jbe
arpl
imul
in
popa
mov
sahf
aaa
jns
cmp
scas
sub
aam
das
aaa
imul
iret
pop
stos
out
lahf
push
ret
or
ljmp
mov
bound
cmp
aad
mov
fisubs
push
fsub
test
mov
add
add
bnd
enter
inc
sbb
lret
je
mov
mov
call
add
add
idiv
aas
inc
pop
icebp
mov
fptan
cmc
inc
lock
outsb
outsb
popf
movq
test
repz
fwait
outsb
jb
add
dec
fiaddl
sub
adc
in
sahf
lods
jbe
push
sub
fisttpl
cwtl
dec
lcall
mov
jge
xor
or
outsb
cmpsl
inc
call
popaw
mov
insl
mov
loope
dec
test
dec
ds
nop
out
cmp
mov
arpl
add
pushf
pusha
ds
inc
cli
mov
jl
div
fidivs
scas
cmc
testb
mov
inc
add
lods
adc
mov
xchg
mov
sbb
hlt
jmp
addr16
lods
jns
mov
mov
push
xor
pop
movsl
jp
mov
fldt
push
jnp
xchg
jae
sub
xchg
loopne
aaa
jo
xor
pop
dec
in
push
ret
js
mov
inc
pop
pop
adc
mov
fnstsw
das
sbb
jo
inc
cmpsb
xor
xor
push
cmp
push
mov
lea
inc
sub
add
out
int
xchg
mov
jb
fwait
test
pop
mov
lret
cmp
shlb
fcmovu
cli
ret
adc
int
mov
out
xor
pop
fcmove
roll
cmp
push
xchg
fdivrs
ss
push
loop
add
mov
shrl
mov
xor
clc
insl
mov
adc
test
cltd
rcrb
xchg
movsl
mov
mov
inc
pop
out
xchg
add
sub
cmp
leave
lahf
loopne
inc
sub
pop
daa
mov
mov
loope
in
sahf
loopne
mull
sub
in
int
or
into
rorb
jle
push
or
xchg
lods
push
out
imul
shll
js
popf
movsb
je
loop
repnz
sub
adc
adc
mov
mov
addl
sbb
mov
cmp
cmp
sbb
mov
dec
or
dec
pop
sub
mov
or
pushf
pop
imul
sbb
fldenv
out
sbb
icebp
push
xor
cmp
pop
mov
lret
repnz
xor
xor
pop
pop
mov
popa
mov
mov
xor
in
mov
and
dec
add
cld
dec
cmp
lahf
sub
repnz
imul
sub
fdivrp
sysenter
pop
cli
push
dec
or
dec
add
and
test
iret
and
xchg
dec
repz
test
dec
lods
push
into
xchg
scas
add
test
jnp
mov
pop
or
mov
lods
cmpsb
dec
sub
fsubrs
pusha
inc
mov
jne
fs
jnp
mulb
fstpt
jl
lcall
mov
mov
dec
xchg
sti
pop
mov
aad
cltd
cmpsl
sbb
in
and
iret
sbb
hlt
fwait
mov
stc
in
dec
pop
add
dec
push
add
jno
add
push
jo
je
jbe
je
test
cs
push
lsl
add
scas
add
popf
out
jbe
cmp
lods
cli
stos
add
inc
ficoml
push
int3
int
jmp
pop
push
sti
imul
push
cmp
cmp
repz
ss
mov
mov
push
mov
add
and
jno
mov
nop
out
js
sub
push
rcrb
insb
popf
and
cmpl
pop
rclb
out
pop
aas
xchg
dec
jnp
jne
test
and
jmp
aaa
stc
imul
add
mov
xor
cmp
xchg
jb
add
xor
mov
std
ret
adc
daa
adc
push
push
dec
mov
push
push
mov
in
ficoml
xor
daa
add
fbld
out
idivl
ret
ss
mov
out
add
call
ljmp
sbb
mov
inc
fdivl
out
xchg
lcall
scas
cltd
lret
mov
adc
cmc
xchg
cmpsl
dec
jmp
mov
mov
jns
sarl
loope
add
lahf
rcrb
lock
or
mov
adc
out
push
js
xor
jns
les
push
lret
add
dec
mov
jb
cltd
sub
arpl
or
push
scas
xlat
cltd
aaa
andl
ror
and
cmp
push
jae
push
push
cmp
mov
push
jle
hlt
xchg
pushf
jne
xchg
jbe
adc
pusha
xor
pop
and
pop
iret
mov
jl
leave
or
sub
push
loopne
sub
fwait
clc
fiaddl
mov
xchg
and
cmp
cmp
mov
mov
cmp
and
cli
sub
gs
sbb
push
ret
mov
rep
insl
xor
xchg
mov
inc
cwtl
repz
hlt
divb
sbbb
adc
and
movsl
orl
in
sti
pop
loopne
popa
rcr
repnz
push
lcall
lock
sub
bound
iret
dec
pop
mov
insl
enter
push
or
push
xlat
push
sub
test
add
add
sub
or
mov
imul
scas
dec
sub
pop
dec
and
dec
out
cmp
push
xor
sbb
jno
ja
or
loopne
aaa
pushf
xor
cmp
test
fadds
cmp
rclb
sbb
loope
dec
or
push
mov
arpl
or
xor
mov
aaa
dec
es
push
pusha
xor
adc
jns
test
pop
sub
adc
gs
sub
jp
lea
and
mov
out
jmp
adc
fisubs
cmp
pop
mov
mov
lahf
imul
aas
fwait
inc
mulb
stc
add
push
mov
in
std
daa
ficompl
jns
xchg
mov
mov
insl
jg
rcrl
sub
sub
sub
roll
cmp
pop
sti
ret
mov
dec
cltd
cmc
mov
adcb
fisttps
mov
icebp
jno
xchg
push
int3
outsl
in
push
out
insb
xchg
mov
scas
xchg
xor
sarl
aaa
es
cmp
mov
xchg
dec
add
push
dec
out
int
int3
push
push
and
lret
add
mov
pop
jmp
decb
xchg
cmp
xor
and
and
cld
sub
sar
add
enter
insb
orl
push
into
orl
popa
sub
jge
test
adc
inc
insl
jecxz
cmp
or
rcll
jmp
jp
sub
pop
mov
xchg
aad
xor
fucomip
fnsave
pushf
dec
add
cwtl
addr16
pop
pop
push
ja
addr16
arpl
je
dec
fst
dec
xor
sti
jae
or
call
dec
fisubl
les
aam
push
xchg
fcomip
xor
inc
cli
mov
aad
or
ds
xor
ret
xor
mul
shll
mov
xchg
cmp
push
in
mov
push
pop
adc
nop
roll
pop
popa
mov
fmuls
push
jne
pop
add
fidivs
cmp
push
xor
jae
jb
in
fidivl
pop
lock
aas
movsl
cmp
add
popf
scas
es
push
or
xchg
je
in
push
xchg
adc
hlt
dec
ficomps
aad
shr
push
pop
js
jle
scas
data16
int3
dec
test
aas
sahf
out
pop
nop
lea
sbb
or
leave
mov
mov
jno
mov
clc
stc
clc
jae
pop
ljmp
or
imul
xor
icebp
lock
sub
inc
sbb
mov
fwait
push
cmp
dec
xchg
push
cs
dec
ja
inc
out
sbbl
int3
iret
orb
jnp
fsubrs
cltd
push
lahf
lods
or
sub
daa
or
cmpl
flds
inc
pop
out
and
jge
push
jne
push
mov
add
xor
cmp
js
into
add
stc
in
cld
fistpl
cmp
sub
mov
sti
inc
xchg
lds
xor
mov
pop
sub
cwtl
and
jp
mov
es
fwait
vpavgw
insb
cwtl
dec
lds
and
push
into
aad
jmp
or
test
xchg
insb
mov
int3
mov
bound
ljmp
add
fists
movsl
repz
in
xor
jp
insl
inc
scas
push
jmp
jmp
subl
push
repz
int
lret
cltd
ja
sbb
sbb
stc
jl
mov
frstor
add
fsubp
mov
inc
mov
popf
orb
fcmovnbe
nop
mov
sti
add
lock
repnz
addr16
push
das
mov
sub
cwtl
mov
xchg
mov
ret
mov
add
ret
mov
mov
outsl
ja
sti
mov
sbb
lods
icebp
cli
inc
xchg
pop
fnstsw
lods
int
push
mov
iret
jecxz
mov
stos
loope
cmp
push
std
ret
lods
or
pop
imull
cmc
jp
inc
cmp
ficoml
mov
cmpsb
add
outsb
es
rcll
cwtl
pop
fiadds
mov
push
sub
pop
xchg
adc
movsb
test
mov
add
mov
in
push
stc
ret
out
je
cmp
fstpl
push
int3
and
mov
mov
mov
je
xor
leave
nop
sbb
lods
hlt
aas
je
mov
dec
mov
dec
dec
xor
cmp
dec
xchg
cmp
in
cs
or
enter
jno
pop
dec
lock
negb
out
lock
lods
lock
pop
imul
jg
add
jae
lea
mov
or
xchg
ja
addr16
mov
lds
repnz
int
jbe
mov
int3
pop
test
sub
call
mov
dec
mov
insb
push
mov
ret
add
mov
les
dec
inc
fbld
mov
cmp
sbb
cltd
ret
mov
push
pop
xchg
mov
jmp
push
jns
lcall
call
sub
loopne
fwait
bound
frstor
or
hlt
jnp
aas
dec
push
mov
insl
out
and
jns
ret
mov
icebp
sti
popa
test
neg
mov
leave
inc
jp
in
dec
in
popa
push
mov
shll
jne
push
dec
aaa
into
inc
cmp
jb
cmp
dec
sbb
mov
popa
mov
sub
mov
dec
ljmp
mov
add
fisttps
inc
and
push
aam
mov
jae
iret
icebp
pop
jge
repz
loop
add
sbb
mov
xorl
xchg
cmp
into
mov
and
pop
shl
jnp
enter
cs
stc
mov
xchg
ret
cmp
bound
cmpsb
xchg
inc
rolb
add
insb
out
push
and
push
hlt
nop
mov
cmc
jl
cli
nop
mov
mov
nop
aad
sub
jl
jae
ret
lock
std
sub
pop
pop
cmp
jg
jo
or
jnp
cltd
jge
faddl
js
inc
pop
loop
ja
fsubl
fadds
flds
xlat
lds
or
xchg
pusha
xchg
mov
repz
pusha
xorb
or
mov
hlt
and
mov
dec
push
push
sbb
inc
ret
mov
mov
mov
out
loopne
rolb
xchg
mov
adcl
test
aaa
sub
dec
push
aaa
push
daa
fidivrs
cmp
ret
outsl
and
outsl
mov
jno
dec
in
addr16
add
aaa
adc
in
cli
lret
xchg
and
dec
into
addl
ret
shrl
push
vphaddubw
sub
dec
sahf
add
xor
mov
pop
lea
cmp
sub
test
mov
test
testl
cs
lods
ret
xor
loop
js
sub
sbb
es
mov
and
loop
or
inc
sbb
mov
test
mov
xchg
jno
popa
rclb
fwait
push
rclb
fldcw
dec
or
mov
add
repnz
dec
test
fcomi
rorb
mov
into
dec
test
pop
mov
jns
push
pushf
popf
mov
cmp
mov
pusha
mov
sub
sbb
mov
adc
and
sbb
fwait
notl
push
mov
cmp
xchg
xlat
xor
push
adc
jnp,pt
or
jns
pop
es
sarl
mov
pusha
ja
lret
xor
jecxz
imul
adc
sbb
sub
sbb
bound
cwtl
mov
xchg
insb
mov
or
ss
jno
movsb
mov
or
cmpsl
ds
scas
test
adc
jne
fsubrs
fsubl
lret
and
push
xorl
mov
je
jmp
icebp
stos
mov
push
lods
insb
sub
pop
stos
out
pop
fwait
lret
xchg
lea
mov
sbb
xor
lret
pop
mov
push
imul
rcrl
shrl
or
sbb
lods
sbb
sub
mov
in
mov
hlt
mov
outsb
lcall
push
cmp
xchg
loopne
rolb
sbb
push
dec
mov
jmp
add
sub
sub
sbbb
es
loopne
sub
mov
mov
cli
lock
rcll
jp
loope
test
mov
sbb
push
test
fadds
das
dec
jno
push
repnz
add
decl
aas
push
xchg
push
jmp
jge
xor
outsb
pop
je
adc
xor
ljmp
clc
jp
test
xchg
pusha
outsl
cld
push
mov
sbb
faddl
adc
push
fsubrl
inc
push
fistps
arpl
mov
add
jmp
sub
mov
cmp
int3
push
test
or
jmp
sub
mov
rol
dec
and
sub
lahf
dec
test
jae
rclb
test
mov
out
pop
ljmp
stos
xor
gs
pop
and
xchg
cld
decl
push
shrd
movb
into
cld
ret
inc
frstor
je
bound
jns
pop
xor
sbb
outsb
pop
clc
movsb
xchg
cmp
pop
lock
lods
sbb
movsl
sahf
or
xchg
insl
loop
mov
sbb
insl
lret
rol
and
add
xchg
data16
pop
dec
add
push
jecxz
xor
or
popf
ds
jecxz
sti
les
incb
dec
psadbw
pavgb
or
pop
sub
test
jno
outsb
add
js
mov
or
jmp
mov
mov
cmp
test
cs
mov
dec
dec
sahf
adcb
lds
iret
or
mov
jp
mov
ret
das
cmc
aad
inc
movsb
dec
sub
sbb
enter
pop
hlt
jb
loopne
and
imul
in
popf
pop
lcall
inc
add
mov
pop
mov
inc
xchg
cmp
fs
loopne
pop
fdivl
mov
cmpsl
mov
je
test
aad
icebp
aad
push
pop
test
mov
mov
pop
rcr
imul
adcb
jns
stos
sarb
outsl
inc
shlb
cmc
jae
xor
cmp
xor
clc
push
int
lods
pusha
sub
mov
fstl
negl
sbb
nop
test
aad
mov
aad
dec
lds
adc
fisttps
cmp
add
je
cmp
pushl
xchg
outsb
lcall
fwait
repnz
nop
xchg
sub
ss
push
sub
mov
pop
fsts
js
shl
mov
and
inc
sbb
mov
movsb
aad
sbb
add
lods
jmp
pop
dec
jg
push
lock
mov
mov
cwtl
push
add
sahf
mov
je
js
lcall
and
es
cwtl
loopne
cmc
jo
mov
out
xor
fxtract
and
pop
mov
cmpsl
or
inc
lods
mov
fnsave
xchg
test
cmp
add
int
adc
ljmp
cmpsb
imul
cmp
xchg
int
pop
jge
xchg
repnz
imull
or
jae
pop
xchg
sbb
mov
jno
jae
pop
outsb
push
mov
ds
mov
je
scas
lahf
or
iret
stc
inc
mov
movsl
bound
and
pop
sti
sahf
pop
enter
jmp
push
sarl
push
mov
hlt
dec
je
add
adc
loopne
sbb
fs
enter
cs
rolb
ljmp
insl
dec
lods
daa
xchg
popa
mov
mov
mov
mov
inc
in
xchg
pop
in
jecxz
and
fstl
cmp
push
jae
and
jne
bound
sbb
leave
test
jne
test
clc
jns
pop
adc
addb
roll
inc
or
fldl
xor
pop
mov
das
add
lret
nop
movsb
lods
addl
stc
pop
pop
fimuls
cld
movsl
and
add
xor
xor
test
mov
mov
test
imul
hlt
imul
pop
hlt
sbb
ret
sahf
aam
sarb
mov
or
adc
mov
inc
mov
test
cmp
push
cmpsl
jl
iret
shlb
pop
mov
adc
std
sub
push
lods
xor
push
mov
mov
sti
jecxz
jge
xchg
push
jns
cmp
xor
in
or
loop
pop
cwtl
scas
xchg
push
xchg
pop
xlat
xor
fs
cmp
push
mov
inc
mov
testl
sub
decb
mov
xchg
jg
iret
inc
imul
jno
out
rolb
in
fisubl
push
adc
mov
repz
out
popf
ret
dec
shr
out
mov
mov
aam
in
testb
jl
jns
pop
fnstcw
loope
adc
sbb
dec
add
jne
push
rcl
jecxz
xchg
xor
inc
addl
adc
jle
xor
and
aaa
sbb
out
mov
test
out
stos
enter
cwtl
int3
test
rcll
adc
popa
loop
jl
leave
mov
cwtl
cltd
xchg
fwait
int3
sub
es
shrl
std
xchg
jle
adc
lods
fcmovu
xor
cld
xor
xlat
and
imul
jne
pushf
inc
dec
jo
mov
ss
add
insb
xchg
shl
icebp
inc
mov
adc
dec
loopne
rorl
add
add
in
dec
pop
pop
cwtl
insl
sti
pop
jnp
inc
mov
mov
jmp
push
lahf
stos
hlt
dec
sbb
xor
jecxz
loopne
ficoms
sub
ret
jnp
inc
push
shlb
dec
xchg
data16
jmp
push
mov
lods
fldenv
mov
aam
outsb
scas
mov
lcall
pop
lret
ret
or
outsl
pop
xchg
dec
adc
or
sbb
xor
add
pop
daa
push
inc
int
push
arpl
stos
ljmp
in
outsb
sub
cltd
orb
push
jle
test
sub
popa
repnz
insb
mov
pop
jge
stos
pop
ljmp
xor
or
and
lds
stc
std
ret
fwait
outsl
rcrb
ljmp
adc
icebp
pop
jo
roll
xor
jmp
sub
push
add
fstps
mov
jge
push
lea
es
bnd
out
add
cmp
mov
popf
pop
jl
out
sbb
scas
cltd
loope
mov
pop
xchg
add
popf
push
mov
pop
rcrl
pop
and
mov
jns
or
xchg
test
arpl
insb
pop
mov
movsl
mov
sbb
mov
push
push
loopne
test
push
shl
fcmovu
into
enter
xchg
imul
daa
cmpsb
jge
push
sbb
cs
mov
sbb
xchg
daa
mov
add
push
inc
loope
test
fiaddl
xchg
pop
cs
push
test
cmp
mov
jnp
lea
adc
push
lret
and
mov
mov
lock
mov
adc
jae,pn
xchg
xchg
sbb
xchg
cmp
adc
push
jp
jns
xor
hlt
test
stc
pop
loop
arpl
ss
out
cld
push
jne
adc
icebp
sbb
inc
subb
mov
mov
or
jne
les
mov
and
cld
lock
cwtl
movsb
jno
or
int
test
hlt
lret
cld
aam
idiv
pop
roll
pop
mov
inc
sysret
dec
xchg
out
orb
lcall
fwait
xor
xchg
aam
pop
int
and
stos
push
cwtl
ljmp
sbb
aaa
fisttps
dec
pushf
push
es
call
jo
and
addr16
fistpll
or
or
shll
fsubp
insb
dec
mov
xchg
pop
ljmp
lret
jp
aam
ss
pop
xor
mov
push
shl
sbb
rorl
fisubl
adc
cmp
nop
int3
jp
test
dec
adc
in
sbb
in
and
xor
call
mov
xchg
jne
cmpb
xor
fildl
dec
fwait
mov
or
movb
loopne
or
cmpsl
int
out
jo
inc
cmpsb
mov
mov
shl
out
push
dec
dec
mov
xchg
test
rcll
cmpsb
mov
mov
adcb
add
test
jne
dec
mov
adc
xcrypt-ecb
cmpsl
mov
fnstcw
dec
les
lret
or
or
mov
cmp
in
mov
cmp
mov
mov
cmp
pop
cmc
movsb
cmp
push
fcoml
mov
add
aas
icebp
ret
dec
aaa
sub
outsl
repz
pop
xchg
subb
dec
movsb
add
ficompl
cmc
clc
icebp
adc
lahf
into
mov
push
mov
adc
mov
inc
and
dec
fstps
dec
add
add
in
jne
push
sub
test
test
push
cmp
orb
les
mov
sub
test
lea
inc
inc
shrl
inc
xor
aas
push
mov
mov
clc
mov
cmp
sbb
push
out
lea
mov
inc
xchg
stos
sub
lcall
mov
gs
mov
iret
sbbb
xor
loope
cwtl
inc
dec
es
jl
dec
xchg
sub
add
mov
sub
insb
ds
add
xor
lcall
mov
jo
std
nop
je
add
lret
add
rcll
mov
add
fisttpll
mov
scas
cmp
orl
jecxz
test
aaa
test
repz
push
lock
inc
movsl
cmpsl
loop
hlt
fcmovne
sbb
int3
push
mov
in
adc
in
bound
mov
rcll
push
cmc
push
dec
inc
gs
insl
cli
jge
scas
push
mov
ds
or
ficoml
int3
or
imul
fwait
sarb
add
jp
push
adc
in
add
shlb
mov
out
out
or
rorl
mov
cmp
lret
les
aam
test
jbe
test
xchg
adc
xchg
dec
sbb
shll
cmp
mov
jg
sub
add
out
xchg
push
dec
aam
jmp
pop
or
addr16
xor
or
mov
test
aaa
sbb
ja
jae
mov
and
push
fs
mov
cmpsl
in
lcall
inc
push
imul
outsb
andb
mov
xchg
inc
and
ljmp
sub
nop
popf
pop
fisttpl
imul
fscale
jb
les
lret
sub
je
ja
sbb
pop
add
add
adc
jecxz
cs
aaa
and
iret
xchg
gs
lods
jmp
cmp
mov
insl
or
mov
int3
imull
or
push
xlat
xchg
int3
addl
and
idiv
xor
xchg
xor
jno
cmp
scas
inc
test
pcmpeqb
adc
out
movsb
call
rcrl
sbb
pop
mov
std
rol
sahf
aad
insl
xchg
rolb
add
out
adc
ret
dec
loopne
sub
cltd
into
hlt
or
daa
xor
xor
testb
in
push
push
lret
sbb
push
lods
jo
scas
or
or
ljmp
mov
xlat
enter
aad
cwtl
jae
pop
repnz
xchg
and
jmp
mov
inc
sbb
test
sbb
cmpsb
add
mov
dec
xor
cmp
adc
sbb
fistl
or
sub
sti
hlt
mov
xor
mov
and
daa
out
ret
test
lcall
mov
sub
and
pop
je
inc
std
scas
inc
adc
cmp
out
push
sbb
mov
dec
pushl
xor
lods
xor
imul
mov
sbb
pop
fbstp
push
xor
mov
xlat
test
push
add
fcomps
sbb
cmp
roll
out
into
jle
mov
rcrb
add
pop
popf
mov
sbb
sbb
dec
lds
sahf
out
arpl
xchg
sbbb
sub
cmpl
dec
mov
cmp
iret
cmpsl
mov
pop
pop
icebp
ss
insb
jns
mov
enter
sub
dec
xchg
dec
mov
adc
xchg
adc
jnp
repz
adc
xlat
out
gs
pushf
ja
int
xchg
push
jmp
jne
imul
push
adc
xchg
push
rcll
mov
cmp
cmpsl
dec
inc
pop
push
inc
xchg
push
fwait
mov
jnp
insl
lcall
lcall
xor
out
clc
dec
jecxz
xchg
jg
fidivrl
lahf
cmpsl
enter
int
leave
stos
dec
xor
stos
pop
adc
insb
mov
incl
jno
data16
mov
xor
mov
lret
imul
push
xchg
ret
insb
mov
mov
out
aam
sar
es
test
adc
mov
jge
jns
notb
inc
mov
push
testb
ret
xlat
pop
xor
mov
pop
pop
sbb
sbb
jmp
or
or
pusha
jae
shrb
shr
sti
popa
pop
outsl
cltd
jne
inc
cwtl
push
xchg
pop
xor
push
adc
or
adc
push
adc
jno
fsubrl
iret
repz
mov
cli
cmpsb
enter
fcomip
push
repz
movsl
or
dec
sub
test
popa
lret
mov
push
sti
shrb
mov
xor
push
aaa
inc
push
pop
enter
inc
and
call
fisttpl
add
testb
cld
xor
xor
pop
jp
jns
scas
lods
xchg
inc
cmp
mov
xchg
add
push
stos
test
stos
in
and
lret
jecxz
jbe
ret
pushf
mov
fimull
mov
push
shlb
pop
xor
popf
jne
sub
xchg
test
cltd
xor
sub
inc
mov
cmc
ret
xchg
jle
inc
adc
adc
lods
aaa
and
xorl
icebp
add
xchg
lods
outsb
int
jnp
outsb
movsb
loopne
mov
gs
xchg
adc
xor
mov
mov
jp
fdivrs
push
mov
inc
imul
xor
gs
xchg
sub
sub
pop
and
das
inc
lret
lret
pop
push
xchg
xchg
mov
mov
fstps
cmpsl
lods
or
jg
movsl
adc
popf
out
lahf
fwait
dec
mov
out
or
jmp
sbb
fidivl
lahf
pop
or
out
ja
xor
inc
das
bound
xorb
mov
mov
sbbl
xor
cmp
jge
mov
sbb
inc
sbbb
mov
addl
inc
int3
adc
adc
and
cmp
test
hlt
xchg
mov
xor
jmp
dec
adc
pop
xor
sbb
adc
ljmp
shll
in
inc
lret
xchg
push
lea
mov
xchg
dec
mov
repnz
cmpsb
mov
jle
nop
cmp
and
es
mov
aas
cmp
sbb
stos
mov
sub
mov
jne
xor
ret
pop
icebp
sbb
mov
jno
faddl
int
rorb
jb
adc
mov
cmpsb
push
out
out
xchg
add
stos
js
test
mov
out
cmp
stos
cmp
xadd
adc
inc
int3
aam
push
sbb
push
test
mov
addr16
rolb
mov
sbb
push
push
call
add
icebp
movl
push
mov
ja
inc
xor
shrl
or
das
mov
outsb
mov
jmp
je
bnd
dec
cmpsb
sbb
out
or
pop
ja
mov
dec
cmpb
jl
jne
sbb
pop
bound
adc
push
insl
sub
mov
gs
mov
push
xchg
insb
sub
insb
ret
and
test
sub
pop
jno
mulb
lods
pop
outsl
vpmulhw
lods
xchg
in
movsl
xchg
aaa
cltd
mulb
ljmp
dec
add
mov
xlat
outsl
pop
scas
add
push
insl
pop
in
cld
movb
aaa
loop
movsb
sbbl
sti
mov
fs
adc
into
push
fnstenv
jmp
popf
movb
lods
int3
jne
frstor
gs
shlb
insb
ret
cmpsl
aam
cltd
jns
out
in
imul
andb
jnp
loope
lea
jbe
outsb
lods
mov
adc
xchg
jl
pop
mov
lods
ret
sub
mov
mov
aad
mov
ret
push
fildll
lods
outsb
and
xchg
jno
pop
int
xchg
imul
nop
adc
cwtl
insl
lret
inc
xchg
and
push
jle
inc
cmpsb
int3
jbe
loope
push
inc
lahf
pop
push
stos
inc
std
vpcmpeqw
out
mul
xchg
aaa
add
bound
sub
push
sub
test
pop
out
and
mov
arpl
mov
jne
lds
adc
in
add
fldcw
push
dec
arpl
cli
jns
out
mov
movsl
and
les
pop
popf
xlat
lret
fsubs
outsl
push
xlat
lods
mov
dec
mov
inc
std
push
sbb
stos
lods
sub
inc
mov
fstps
or
testb
dec
push
call
pop
pop
inc
adc
scas
push
lcall
mov
aaa
mov
mov
pop
push
out
fldt
ljmp
arpl
dec
mov
sti
cmc
or
into
xor
mov
aas
imul
push
in
jle
bound
push
jmp
lahf
cltd
lds
fmuls
test
adc
cmp
stos
ret
lahf
lods
repz
imul
lret
or
stc
xor
dec
fnstenv
popa
hlt
out
out
pop
in
fs
adc
mov
je
push
push
adc
dec
outsl
scas
icebp
fs
adc
and
pop
sbb
lahf
gs
mov
adc
or
jl
pusha
dec
test
or
or
movsl
pop
mov
pop
int
push
into
pushf
fldt
lods
in
arpl
dec
add
xor
subl
stos
out
aad
xchg
xchg
or
jnp
jo
xlat
cmp
sbb
jecxz
or
and
cmp
outsl
jbe
xchg
aas
add
xchg
movsl
xor
std
fs
mov
mov
inc
test
adc
push
clc
outsl
pop
xchg
jle
sbb
mov
pop
xor
and
insl
insb
or
dec
dec
fiadds
and
jecxz
xchg
mov
push
js
std
iret
sarb
cltd
imul
jg
push
test
jb
inc
pop
cmc
jno
call
fs
hlt
or
imul
adcb
push
pop
push
out
out
inc
js
or
fidivrs
pop
repz
clc
cmp
out
pop
enter
dec
enter
or
popl
sti
mov
ret
andl
test
add
lds
gs
push
scas
push
mov
enter
or
adc
xchg
fidivrs
ja
sub
pop
in
adc
mov
sub
mov
sub
out
pop
xchg
mov
dec
out
js
cmc
imul
sub
jl
dec
jge
pop
ds
inc
xor
mov
inc
fimuls
mov
push
lret
push
xlat
es
movsb
jmp
jo
pop
shrl
addr16
ret
loope
and
cmp
inc
rcr
daa
stos
lods
insb
jge
mov
push
int
cwtl
and
push
cmp
sub
pop
or
cmp
mov
dec
sbb
test
subb
cmp
jns
jno
push
xchg
mov
ficomps
push
add
inc
or
push
push
icebp
adcb
push
addr16
cmpb
dec
mov
fldt
test
repz
cltd
es
mov
add
in
xchg
test
cmp
sub
subl
ret
jns
dec
int
sub
aas
out
hlt
mov
test
fistl
aas
or
popa
rcrb
dec
mov
or
subl
mov
cs
loop
icebp
pop
ss
fs
mov
fnstsw
mov
lods
or
jl
ret
ret
jl
sub
xor
and
inc
fmul
ror
aad
push
iret
test
testl
and
fwait
xchg
call
pushf
cmpsl
leave
imull
and
scas
sub
std
test
sbb
out
push
xchg
xlat
or
mov
jns
mov
xor
stos
enter
je
or
adc
mov
cmp
ret
ret
ficoms
mov
scas
mov
fmull
and
mov
fsubs
ret
nop
adc
xchg
enter
int
movsl
cmc
loope
stos
loop
push
cld
jae
mov
in
movsb
jo
int
fwait
lea
xchg
dec
or
xchg
mov
orl
mov
mov
les
mov
push
mov
inc
in
jnp
aad
mov
fistpll
xchg
scas
xchg
shlb
dec
adc
repz
xchg
outsl
pop
mov
dec
test
dec
inc
ror
push
hlt
xor
rol
loope
sbb
decl
mov
cltd
movsb
or
mov
icebp
mov
and
mov
gs
mov
mov
xchg
js
popa
lock
cmpsb
or
in
rclb
dec
mov
loope
arpl
push
xor
sbb
dec
cs
out
test
fs
sarb
pop
and
int3
push
adc
je
jmp
movsb
sub
leave
ja
push
push
ljmp
or
pushf
sbbl
in
pop
xchg
gs
cltd
push
pop
shl
or
movsl
push
loop
mov
jo
add
dec
out
xor
adc
xlat
imul
incb
push
cmp
imulb
ret
pusha
xchg
mov
mov
out
sbb
jl
scas
jecxz
ds
push
xlat
out
imul
in
pop
push
jp
push
mov
or
sbb
add
icebp
jg
push
push
mov
loopne
or
fnstcw
cmpsb
ret
pop
cltd
or
inc
mov
dec
cmpsl
aad
mov
or
in
std
filds
mov
rolb
aaa
jnp
pop
mov
mov
leave
ljmp
adc
ret
addb
mov
shll
mov
mov
mov
mov
jo
nop
lods
scas
int
xchg
sub
sbb
pusha
fisubrl
xor
roll
loopnew
cmp
push
adc
cmp
inc
mov
je
stos
les
push
imul
notl
jle
arpl
sbb
push
add
in
jmp
xor
cmpsl
ficompl
xor
pusha
test
inc
add
inc
jnp
popa
bound
ljmp
or
iret
cmp
out
jnp
aas
pusha
jne
std
add
jg
loop
aam
mov
sti
cs
cwtl
add
ror
pop
arpl
imul
inc
adcb
lcall
inc
xchg
mov
jl
lds
cmp
stos
mov
sub
or
test
test
rorl
adc
pusha
shll
sbb
or
pushf
sbb
enter
inc
ljmp
push
xor
arpl
pop
loop
and
push
or
pop
lret
rcll
adc
xchg
jns
mov
adc
push
or
divb
filds
js
sub
cmp
arpl
pop
xor
shrb
insl
js,pt
icebp
pop
cwtl
pusha
push
xorb
xchg
xchg
rdpmc
mov
gs
xor
xor
add
pop
lods
push
mov
inc
mov
push
popa
mov
mov
jbe
outsb
and
mov
std
fisttps
fists
lcall
dec
lock
add
mov
xchg
push
jno
imul
repz
cmp
ja
push
bound
jl
lea
jo
dec
inc
faddl
adc
iret
fbstp
and
fstpl
cmp
add
loop
mov
push
movsl
sbb
push
lret
mov
adc
sbb
cmpsb
andl
mov
sar
or
pushf
or
fadd
pop
mov
jmp
daa
imul
aad
stc
mov
push
lret
js
sbb
aad
and
aam
push
enter
shlb
loop
add
outsb
and
push
add
ds
and
lds
movb
incl
inc
inc
bound
test
mov
sub
mov
dec
jo
stos
lcall
pop
cmp
pusha
mov
sbb
push
sub
pop
mov
lahf
pop
xchg
xor
cmp
mov
hlt
mov
or
sub
or
and
dec
popa
pop
jns
and
repnz
xlat
repnz
pop
sbbl
jp
sub
or
int
sub
sub
cmpsl
jo
fwait
js
push
cmp
out
and
leave
icebp
es
sub
add
xchg
jge
imul
inc
mov
sbb
fisttpl
std
sbb
or
imul
pusha
fs
or
movlps
dec
add
insb
mov
xchg
ja
stos
imul
push
or
mov
dec
mov
cs
sbb
mov
sub
inc
repnz
hlt
ja
test
ljmp
mov
insl
ret
icebp
or
cld
mov
mov
jl
lea
cmpsl
jecxz
xor
xchg
cmp
fs
add
mov
cs
fidivrl
test
loope
cltd
je
shll
scas
cmpsb
lock
rcll
aas
in
mov
ret
loop
outsb
fwait
xchg
in
xor
fstl
inc
adc
xor
xlat
idivl
pusha
jnp
pop
pop
aam
vmovupd
adc
push
lock
inc
cltd
data16
in
sub
adc
xchg
test
insl
xor
push
sbb
ret
lret
icebp
push
rorb
into
mov
lock
imul
sbb
out
push
ljmp
insl
adcl
std
lock
xchg
sbb
sub
mov
cmpsl
jo
jmp
sbb
mov
out
std
mov
pop
andl
push
mov
lea
fmulp
in
pop
pop
mov
xchg
pop
push
or
pop
xor
dec
ja
in
xlat
inc
test
ss
xor
cltd
jns
movsb
bound
shll
clc
jno
aaa
cmc
fimuls
fadd
dec
mov
jecxz
fisttpll
cs
push
adc
xchg
dec
jmp
jae
mov
andb
jl
cwtl
push
je
xchg
lret
in
rolb
fsub
and
les
sarb
pop
into
push
sbb
lds
mov
cmpsb
je
jb
mov
push
andl
jl
add
shl
jge
stc
jnp
lods
dec
in
das
xchg
jl
cwtl
jp
inc
xor
mov
mov
sub
fstpl
cli
jl
shl
ljmp
cmp
mov
pop
and
or
fsubl
sti
xchg
mov
cmp
repz
insl
xchg
imul
mov
jle
ja
push
out
xor
lret
ret
xchg
movsb
or
mov
or
mov
add
and
xor
xor
inc
sbb
scas
cmpsl
daa
outsl
sub
int
iret
shr
popa
sub
sub
xor
popf
mov
loopne
dec
cmp
jbe
rcl
jge
nop
sbb
dec
call
inc
lcall
pop
xlat
xchg
push
pop
dec
mov
mov
imul
mov
aam
fimull
sub
mov
movsb
sti
mov
fimuls
shl
mov
jns
fs
adc
add
ljmp
aas
cwtl
sbb
andb
insb
and
lods
clc
les
dec
shl
or
pusha
insb
rcr
call
dec
pop
mov
sbb
and
or
scas
aam
add
lcall
frstor
stc
xor
mov
pop
lock
fdivrs
sbb
mov
mov
and
lods
inc
insb
lahf
jp
jnp
ficomps
dec
push
clc
and
stc
gs
bound
std
repz
adc
inc
jns
push
mov
out
mov
xlat
mull
sub
test
repz
push
push
xchg
cmc
fnstenv
mov
mov
dec
jg
out
add
xlat
mov
push
or
cmp
popa
jmp
stc
mov
xor
loope
pushl
dec
cmpsb
int3
dec
and
mov
jns
dec
std
aam
testb
icebp
pusha
xor
out
or
xchg
ja
push
xor
outsb
test
stc
imul
insb
or
pop
ret
in
aam
jns
lea
or
sbb
scas
xchg
add
jle
push
mov
jge
adc
inc
mov
stc
stos
movsl
or
lods
dec
out
cmp
mov
xchg
sbb
outsb
jge
mov
inc
mov
popl
push
imul
cmpsb
loope
fs
rol
clc
stos
adcl
pushf
lret
xchg
aaa
ficompl
iret
rcrb
mov
or
arpl
das
jne
ret
cld
mov
adc
pop
daa
or
ja
lock
test
push
mov
xor
push
jae
or
jnp
push
iret
pop
subl
daa
in
mov
popf
lret
jno
push
mov
adc
adc
jle
inc
jae
push
into
mov
xchg
mov
stos
cld
dec
ficoms
out
mov
stc
lods
ja
and
and
push
ret
sbb
cmp
divb
je
inc
loope
adc
mov
int3
dec
pop
inc
jle
fs
adc
dec
pop
mov
lret
xor
jg
cmpsb
in
sahf
test
pop
or
xchg
dec
and
sub
in
and
inc
arpl
and
inc
popf
arpl
dec
cmp
cwtl
in
xlat
sbb
add
xor
xchg
lds
lret
add
ret
jnp
jecxz
push
mov
cmp
push
test
fstps
stos
jge
mov
dec
movsb
push
sub
scas
inc
adc
sbb
lods
push
or
mov
mov
ret
or
mov
lods
imul
pop
ds
jmp
aad
xchg
pusha
mov
out
loope
or
inc
or
mov
adc
inc
add
mov
insb
inc
testl
movl
inc
jae
lock
push
mov
clc
inc
addr16
outsl
std
jb
push
into
test
inc
arpl
inc
jae
cmpsb
cmp
lahf
imul
pop
daa
ret
lods
adc
pushf
pop
or
cld
iret
pop
cmp
fistpll
inc
negl
loop
or
mov
sub
push
or
jle
sbb
lret
adc
jge
je
in
push
int3
jns
dec
outsl
bnd
test
in
and
ja
call
loop
sub
jecxz
mov
xchg
adc
mov
sti
cmp
adc
nop
push
jecxz
dec
stos
stos
xchg
js
xchg
mov
lods
adc
aas
jno
daa
jmp
movsb
int3
insb
or
arpl
mov
cpuid
jne
xchg
rcll
sahf
cmp
fldl
mov
mov
insb
dec
mov
mov
ret
xor
xor
jb
out
sbb
scas
das
test
push
pop
push
pop
mov
jge
popf
mov
out
cmpsb
push
nop
int3
push
fsubrs
mov
push
jne
insb
fninit
out
xchg
and
aam
arpl
ss
mov
cwtl
push
in
dec
or
ret
xchg
add
push
lret
leave
ret
add
shrl
pop
inc
mov
xchg
fsubrs
xor
stos
rorl
mov
inc
add
pushf
ss
xor
imul
sti
xchg
in
cmpsl
mov
jge
add
in
fcmove
xor
outsl
inc
pop
lahf
push
jns
xor
inc
xchg
jb
inc
mov
xchg
push
dec
xor
imull
mov
xchg
sub
aaa
mov
xchg
cli
imul
mov
jge
test
pop
xchg
cmp
sarl
lea
pop
push
adcb
test
test
push
dec
push
push
push
in
xor
inc
jae
add
rclb
adc
scas
das
into
popa
dec
jecxz
cmp
lock
nop
mov
inc
sub
sbb
movsb
push
test
push
inc
testb
adc
movsl
jge
sub
push
aad
dec
jmp
cmp
add
jae
or
call
jp
mov
inc
and
mov
cmp
jge
shl
add
popa
push
mov
or
mov
jp
test
imul
add
mov
or
cmpb
jecxz
into
outsb
and
mov
jge
or
push
xchg
stc
pop
mov
sbb
jo
lret
xchg
iret
loop
call
jge
in
mov
in
cmp
int
stos
clc
xchg
adc
or
xchg
adc
sub
test
iret
and
pop
push
pushf
push
cmpsl
aas
icebp
enter
int3
shll
aam
ret
adc
stos
inc
sub
push
push
pop
mov
pop
adc
mov
jmp
sbb
clc
outsl
xor
mov
sbb
mov
test
loopne
lret
sbb
push
iret
hlt
lahf
jne
out
testl
lock
mov
fnstsw
mov
fwait
mov
sub
bound
rol
mov
dec
iret
dec
imul
fistpll
movb
in
mov
mov
loope
daa
push
push
adcl
push
loopne
add
sahf
cs
cmpl
cmp
mov
pop
jns
call
stos
outsb
scas
lret
movsb
add
lret
mov
dec
testb
or
adc
mov
mov
movsl
jp
adc
pusha
popf
cmp
pop
sub
inc
bound
sbb
adc
pop
adc
dec
inc
cmc
jo
fnstsw
cmpsl
mov
or
fwait
ds
mov
and
outsl
push
mov
stc
xor
pop
mov
pop
int3
jmp
lea
pop
test
leave
rcrb
inc
iret
mov
gs
popa
repnz
push
push
in
add
rcrb
ljmp
xchg
bound
dec
or
push
jmp
cmpsl
mov
call
add
adc
outsb
imul
cmc
or
sbb
sbb
xor
incl
sbb
and
inc
push
imul
pop
iret
hlt
lret
pop
mov
cmp
xlat
jecxz
loop
stc
jmp
mulb
push
int
idiv
xchg
sti
mov
out
clc
and
inc
rcrb
ss
or
stos
repz
outsl
jo
popa
fcomps
pop
roll
jb
imul
ret
test
or
mov
mov
xlat
mov
mov
xor
pop
add
stc
mov
mov
jns
inc
jo
push
add
fiaddl
mov
xor
pop
xor
lahf
add
jle
insl
int3
sbb
test
jl
ds
nop
dec
hlt
mov
cmp
sub
adc
imul
mov
mov
pop
loop
sub
lds
loopne
enter
jnp
pusha
rcrl
lahf
mov
pop
call
movsl
push
jae
ret
mov
mov
xchg
insl
xor
mov
lods
push
adc
push
scas
or
imul
iret
jno
sbb
and
arpl
shr
in
fldl
cwtl
cmp
outsl
mov
jle
mov
add
push
aam
repnz
xor
ficompl
js
scas
or
andps
shlb
rol
xchg
jo
and
cmpb
ret
and
xlat
int
and
inc
xorb
adc
js
xchg
jge
cli
cmp
enter
lret
lock
dec
std
clc
mov
lcall
int
cmpsb
shlb
cmpsb
icebp
adc
aam
scas
xchg
scas
add
xor
inc
xor
sub
scas
mov
xor
gs
shl
push
ja
xor
xor
repz
int
gs
in
out
rol
aam
gs
addr16
add
cltd
mov
sar
jmp
jo
lock
scas
insl
pusha
xor
nop
incb
sbb
sub
sbb
orl
adc
jmp
jae
inc
aaa
in
mov
lods
sbb
notl
stos
stos
and
jo
imul
mov
insb
sbb
inc
or
mov
pop
sti
xchg
jmp
ds
sub
dec
xchg
mov
repz
test
add
cli
or
imul
xorb
adc
jl
sahf
or
lea
jne
jmp
aas
dec
push
mov
popa
dec
insb
mov
mov
or
or
lret
inc
addr16
jl
sbb
pop
rorl
popa
addb
dec
aas
jo
aas
pop
xchg
pushf
or
jb
push
or
mov
sub
jae
mov
sub
ja
and
test
sarb
pop
add
call
leave
xchg
inc
pusha
inc
sbb
in
mov
xor
xor
add
stos
mov
pop
xor
mov
lahf
cld
pusha
ret
sub
push
insl
enter
stc
mov
sbb
lods
dec
stos
or
jle
cmp
enter
xchg
daa
test
xorl
sub
mov
out
lods
push
imul
xor
rcll
mov
jo
add
jno
and
mov
jnp
pop
jle
insl
mov
hlt
fs
adc
popf
adc
inc
sbb
inc
sub
mov
leave
pop
add
push
cmp
cmpsb
pushf
out
and
in
adc
add
mov
cmpsb
cmp
mov
fs
ret
inc
jmp
ja
fisubrs
and
popf
push
or
mov
mov
jecxz
pop
dec
cmp
push
mov
shll
pop
scas
mov
xor
xor
jnp
sar
cmp
mov
into
mov
jno
insl
pop
int3
push
loope
aaa
push
xor
inc
outsl
inc
adc
push
and
ret
inc
jp
cmc
adc
frstor
ret
xor
les
fmull
push
stos
pop
sbb
outsl
push
sub
mov
outsl
test
add
xlat
icebp
flds
ds
cmp
dec
sub
fsubrs
fstpl
mov
mov
xchg
inc
xchg
subb
cwtl
and
xchg
psubd
mov
xlat
mov
push
xchg
push
outsb
jb
lahf
pop
inc
jge
ficompl
push
xorb
sbb
aad
pop
dec
ror
xlat
es
cli
arpl
es
gs
into
hlt
out
xor
andl
repz
cmp
jecxz
nop
sbb
dec
shlb
rol
in
push
sbb
push
mov
cli
mov
pop
sahf
data16
rolb
cmc
test
test
pushf
sahf
stos
jge
fisttpl
scas
cmc
test
icebp
dec
and
inc
mov
and
push
pop
cmp
cmp
orb
aam
jne
jnp
insl
dec
sbb
pop
das
inc
mov
push
shll
ljmp
mov
ret
es
fisubrs
sti
inc
aas
mov
stos
mov
andl
sub
shrl
or
adc
es
jns
sahf
cmpsl
xor
int3
xchg
fwait
sub
leave
mov
and
lahf
inc
shrb
pop
stos
aas
movsb
loopne
test
add
and
mov
dec
xor
aaa
sub
adc
lods
popa
in
and
inc
cmp
cmpsl
lret
pop
mov
sub
xorb
sbb
inc
pop
sti
mov
mov
in
push
aad
push
xorb
push
pop
xchg
push
shll
addl
jl
sub
mov
jecxz
add
and
xchg
or
out
push
negl
xor
and
mov
daa
xchg
lcall
mov
sbb
or
jns
mov
and
mov
xorb
dec
daa
ljmp
sub
fisttps
mov
iret
imul
dec
push
pop
enter
and
mov
pop
sbb
cmp
lds
jmpw
das
cld
leave
stos
mov
jge
js
test
dec
std
push
pop
das
mov
cmpsb
shlb
adc
insl
pusha
fldcw
push
mov
in
in
pop
repz
inc
sub
popf
fisttpll
push
adc
sub
push
xchg
or
cmp
aam
movl
mulb
mov
xchg
pusha
dec
jge
fbstp
cmpxchg
add
repnz
adc
scas
das
call
sub
sub
pushf
or
pop
lret
pop
daa
push
mov
cmp
inc
mov
aam
or
leave
repz
and
and
jnp
inc
rorl
pushf
out
dec
sbb
fmuls
xchg
aaa
push
loop
xor
or
fsts
shrb
mov
pop
push
mov
push
outsb
pusha
aad
inc
add
shrl
mov
es
div
outsb
outsl
mov
fisubl
cld
popf
iret
or
jb
mov
add
add
inc
add
sub
or
addr16
sbb
push
sbb
mov
ret
pop
sub
add
mov
dec
push
cmp
addr16
in
jecxz
leave
inc
lods
xchg
dec
mov
insl
add
mov
lock
repz
mov
jp
pop
je
push
xor
icebp
add
push
stc
loope
out
lds
cmp
sub
stos
jo
jnp
push
add
mov
inc
jns
hlt
and
pop
fsts
pop
or
outsl
jl
ljmp
inc
lock
repz
mov
jl
xor
add
addl
push
mov
dec
imul
pop
pop
or
lds
mov
mov
cld
hlt
push
mov
xor
jnp
pop
push
jbe
xchg
or
push
aas
and
adc
jo
outsb
scas
fs
cmp
sahf
in
jb
xchg
sbb
into
or
adc
adc
mov
dec
cmp
push
or
mov
adc
sbb
lahf
daa
jb
add
int3
stos
shrl
lahf
fdivs
lret
jae
ret
or
cld
and
dec
inc
or
stos
push
fiadds
pop
push
test
or
ror
dec
xchg
rcll
sub
mov
daa
rcll
in
imul
popf
push
xor
in
inc
in
dec
add
xchg
push
add
mov
sahf
cs
sbb
lahf
psrld
sbb
push
inc
and
cmp
out
push
sub
je
adc
in
iret
sub
test
pop
add
sbb
fidivrl
mov
adc
xchg
mov
xchg
out
stos
icebp
dec
sbb
out
iret
cmp
imull
mov
mov
arpl
out
xchg
iret
pop
jnp
push
fsts
sbb
lods
popa
icebp
mov
dec
daa
mov
add
movsb
call
roll
add
ret
cmp
pop
lret
into
rorb
xor
xor
or
cmp
and
inc
adc
jl
data16
dec
pushl
test
dec
mov
daa
xor
data16
push
lock
fwait
fs
mov
sub
pop
dec
orb
bound
pusha
or
lea
push
jb
mov
cmp
sbb
add
ds
imul
repnz
inc
xor
repz
jbe
bound
pop
xchg
dec
fs
cmc
test
mov
mov
inc
xor
add
je
xor
mov
shl
mov
xor
xchg
ds
xor
testb
inc
jle
in
or
cmpb
mov
inc
push
cmp
loop
cld
jo
jbe
cld
or
leave
adc
xchg
in
mov
push
cmp
mov
cltd
cmp
push
out
jmp
int
out
add
xchg
xchg
idivb
and
cmp
inc
test
insl
cmp
xadd
push
mov
outsb
push
outsb
fidivs
outsb
das
js
outsb
mov
mov
sbb
jge
jne
fwait
mov
add
mov
shlb
mov
lcall
imul
lods
mov
nop
sub
lods
in
inc
mov
sub
cwtl
or
fsubrs
repnz
pop
test
sbb
sbb
cli
imul
frstor
mov
mov
jbe
xchg
cmp
adc
rolb
cmp
mov
jnp
subb
addr16
push
sub
movsb
movsl
sbb
lds
or
call
inc
rolb
out
test
scas
or
std
out
xchg
out
or
push
adc
pop
nop
push
outsb
into
sbb
jnp
lods
and
xor
in
push
mov
fwait
or
ret
inc
jns
rorl
ja
pop
lock
push
mov
pop
cmp
pop
scas
adc
and
dec
stc
movsb
push
fnstcw
cltd
enter
loope
lock
cltd
int3
ljmp
les
rorb
rclb
andb
enter
inc
loop
test
clc
mov
jo
in
leave
push
pop
popf
mov
xchg
or
and
pop
mov
pop
push
dec
fdivl
sbb
push
pop
or
sbb
repnz
mov
xchg
jno
xchg
loope
fcomip
popf
in
fwait
pop
test
xchg
add
jmp
les
mov
fcmovnu
jbe
sub
lds
imull
push
and
iret
cmp
mov
leave
inc
stc
xchg
bound
ret
xchg
pushf
cwtl
daa
push
push
and
jp
add
repnz
add
cli
sub
pop
not
cs
cmpsl
ja
fmull
lds
inc
shl
out
sub
or
lock
push
push
cmp
insb
fmul
dec
shrl
lret
cmpsb
outsl
pop
mov
mov
data16
mov
popf
clc
popf
scas
jb
cmc
loope
add
iret
repnz
cli
lcall
xchg
xlat
or
fildl
xchg
or
adc
fidivs
aas
stc
daa
popf
lds
pop
movsb
pop
push
push
icebp
jl
in
jo
loopne
fcoml
arpl
lods
loop
mov
cmp
jnp
std
ljmp
jg
fcomp
rcrb
fwait
inc
push
ret
mov
xchg
f2xm1
lret
and
nop
ret
cmpl
aam
mov
enter
xchg
cmp
leave
into
sti
xor
jb
jmp
push
lods
lods
cmp
in
pop
jg
sarb
mov
ret
shr
xor
hlt
imul
das
int3
lret
out
add
cmp
mov
and
loope
idivl
out
sub
adc
mov
cmp
pop
out
js
inc
push
das
mov
fisubs
mov
xor
xor
xchg
inc
ret
ss
xchg
fcomps
mov
jo
push
int
fucomip
fldcw
mov
mov
cld
mov
setp
aaa
xor
movsl
out
sbbl
sub
xlat
mov
mov
and
jnp
sbb
clc
pushf
dec
adc
bswap
xchg
xor
int3
movb
dec
push
adc
adc
in
xor
and
lret
insb
pop
imul
daa
shll
shl
daa
fldenv
dec
and
int3
mov
or
adc
mov
mov
fisubs
fxch
jge
shl
cld
mov
popa
mov
int3
scas
push
push
in
aaa
lds
mov
movsb
or
mov
and
jne
push
adc
or
mov
add
inc
addb
mov
dec
lods
dec
sbb
jbe
push
ret
or
pop
mov
bound
aaa
jge
cmpsb
push
loopne
fmull
mov
jbe
pop
xchg
mov
shrb
adc
out
bound
push
cmp
mov
jae
test
testl
aam
test
fwait
or
jo
and
dec
mov
out
xchg
call
ja
push
mov
aaa
fs
inc
bound
sahf
pop
psrlq
xchg
ret
cltd
ret
dec
scas
inc
mov
inc
pushf
int
popa
xor
mov
das
inc
icebp
adc
jg
fwait
and
clc
test
pop
lods
mov
pop
call
lcall
sarl
mov
aad
psrad
aam
mov
pop
aad
sub
pusha
std
pushf
mov
cmpsl
out
mov
mov
dec
push
es
inc
push
aaa
ret
mov
mov
mov
push
mov
jo
mov
or
push
xchg
bound
incb
cli
outsb
sub
dec
adc
test
cmp
roll
xor
pop
xchg
incb
mov
jae
lahf
lock
jp
iret
xlat
lcall
jle
ficomps
int3
add
push
sahf
xchg
imul
mov
adc
in
lock
scas
ds
xchg
mov
nop
push
push
jnp
adc
sub
jmp
sub
push
mov
rcrl
pop
loope
mov
fisubs
sbb
rolb
mov
and
out
and
mov
int
scas
push
push
push
add
xchg
and
xchg
sbb
fimuls
or
into
sbbb
cli
pop
pop
fscale
push
add
push
jo
cwtl
lock
js
or
sbb
sub
mov
mov
popa
ret
pushf
push
jne
mov
ljmp
lret
jmp
jo
add
jb
jmp
lods
jno
loopne
je
scas
sti
cmpsb
add
xchg
push
or
adc
jno
in
data16
fsubrp
loopne
int3
sbb
shl
cmp
jnp
sbb
pop
add
fwait
mov
out
jae
push
call
lcall
sub
mov
jge
lods
xlat
in
jbe
enter
nop
pop
loop
in
sub
pop
fcoms
aaa
loop
jl
les
pop
pop
insl
jecxz
mov
pop
aas
mov
cmp
mov
or
dec
lret
adc
test
aaa
and
add
cld
testl
pop
xchg
jno
sbb
xor
xchg
dec
pop
leave
xchg
jge
ja
cmp
jbe
adc
scas
sbb
int3
popf
adc
sbb
mov
sbb
xor
cli
push
in
mov
int
das
cwtl
daa
add
fwait
push
ljmp
fs
into
add
in
fs
add
jmp
dec
jl
mov
repnz
stc
add
ja
adc
cmp
xchg
ds
pop
lea
lea
into
xlat
ljmp
or
outsl
lods
aaa
int
outsl
test
or
xor
scas
jae
sub
xlat
cmp
ret
test
inc
mov
fildl
dec
es
mov
rclb
aad
mov
xor
les
jl
xchg
mov
inc
fwait
out
insl
dec
mov
out
cmp
add
fsubrl
data16
jns
addr16
jns
pop
sbb
cwtl
and
imul
rcll
test
jnp
mov
jo
push
testl
bound
int
scas
mov
test
into
push
sbb
sbb
push
xlat
push
xchg
xor
and
sub
sbb
add
push
test
ss
sub
mov
sbb
bound
dec
cli
sub
andl
clc
pushf
pushf
inc
mov
adc
mov
sahf
subl
insl
lea
mov
addl
and
stos
or
fwait
xchg
push
mov
jno
cmp
lea
aad
and
xlat
pop
cs
add
out
mov
pushf
sbb
imul
rolb
mov
fwait
arpl
xor
mov
das
add
mov
xchg
addr16
lret
push
jmp
sub
jle
cmp
cwtl
xor
rol
mov
loop
sub
mov
dec
cli
jae
jae
push
add
cwtl
xor
push
sub
scas
mov
test
out
rcr
test
lahf
mov
jb
into
xchg
int
and
loop
dec
in
out
das
sbb
pop
adc
inc
jbe
out
cmp
sbb
fcomip
jno
jbe
inc
cwtl
std
jnp
dec
xor
jmp
push
jo
xor
pop
xor
aas
sbb
sbb
rclb
or
icebp
push
mull
mov
outsl
fisttpl
or
popf
pop
mov
cmp
repz
ljmp
push
clc
in
mov
jbe
pushl
mov
xor
sbb
mov
xchg
push
je
push
clc
cli
push
mov
test
mov
mov
xchg
xor
mov
mov
pop
xlat
add
int
jl
das
add
sbb
jo
adc
shll
into
repnz
pushf
jbe
clc
sarb
xor
pop
loop
dec
idivb
imul
test
mov
lock
dec
add
lcall
dec
leave
ret
inc
cwtl
sarl
jle
pop
pop
cmp
xor
pop
cltd
xchg
mov
rcrb
jmp
push
xchg
push
sub
sub
pushf
xor
xor
pop
mov
insl
inc
pop
fcoms
xor
mov
iret
fs
outsb
cmpsl
imul
add
push
or
fistps
xor
shlb
in
mov
push
out
sbb
dec
adc
sar
popf
cmp
jb
repnz
popa
pop
xchg
pop
lret
hlt
inc
cmp
test
jp
in
adcb
inc
rcrb
jg
loop
or
or
mov
clc
repz
in
orl
mov
addr16
lret
aam
push
lds
sub
movsl
lock
xchg
pop
cmpsl
out
jne
inc
pop
es
lret
push
mov
push
xchg
ss
xor
ficomps
mov
and
or
jns
jo
jecxz
aaa
xchg
daa
sub
adc
enter
mov
in
mov
or
pop
add
adc
lock
cmp
das
lcall
jb
pop
aam
jno
dec
mov
inc
sbb
add
popf
push
int
cmp
push
cmpsb
jnp
hlt
iret
xchg
xchg
sbb
pop
cmp
adc
mov
inc
sub
int3
mov
sbb
aad
jmp
lock
pushf
jmp
sub
ret
add
jbe
xchg
jecxz
das
mov
adc
cld
arpl
mov
push
mov
xchg
mov
mov
shll
dec
xor
add
xor
fidivrl
repnz
ret
add
xor
dec
adc
pop
mov
mov
insb
sti
cmp
aas
in
mov
or
dec
sbb
push
pop
fwait
mov
aaa
xchg
je
repz
push
push
dec
lret
xchg
aad
pop
sti
lea
add
sub
jmp
xchg
out
xor
cmp
jge
mull
cmp
inc
mov
sub
filds
push
mov
cmp
lcall
or
lea
sbb
dec
sbb
cmp
sub
xchg
movl
cltd
mov
push
add
sbb
nop
cmp
ret
add
loop
lods
aaa
fwait
das
mov
outsb
icebp
ljmp
les
mov
enter
or
xchg
insb
hlt
xor
add
push
arpl
pop
mov
insl
sbb
clc
es
insl
jmp
push
pop
mov
lea
or
push
mov
sbb
ja
std
and
sbb
push
loopne
or
push
push
lret
sbb
and
and
sub
mov
push
jae
dec
fsubl
jmp
loope
mov
aaa
jl
xchg
movsb
jnp
jg
in
jmp
and
sbb
push
insb
and
sbb
stos
stc
js
cli
cmp
dec
pop
mov
cwtl
nop
push
loope
cmpsb
ds
jbe
sub
mov
sub
lock
push
ds
sbb
notb
push
fucomi
pop
inc
mov
lret
mov
fnsaves
cld
jge
jecxz
notb
cmc
je
jl
lret
dec
push
aam
sbb
or
mov
pushf
push
lea
lret
jae
nop
in
add
mov
push
xchg
rcll
jg
and
push
loop
cmpsl
nop
mov
lret
or
mov
push
xchg
test
adc
in
lret
nop
xchg
fisubl
xchg
mov
repnz
dec
and
stc
in
fwait
int
pop
and
dec
or
or
sub
aam
push
jae
inc
mov
movsb
add
clc
xchg
std
addb
ja
out
aad
sbb
bound
xchg
sbb
mull
push
xor
iret
ficoml
stos
xor
pusha
mov
lods
je
nop
sar
int
aam
mov
stc
mov
sbb
xchg
adc
adc
mov
notb
or
dec
push
cmp
data16
inc
dec
or
pusha
and
sbb
insl
test
xchg
pop
std
test
mov
aam
mov
rclb
xor
push
movsl
sbb
cmp
imul
in
out
gs
rcr
cmp
repnz
inc
icebp
dec
adc
ret
sahf
or
inc
mov
or
mov
jmp
stos
das
xor
insb
mov
ja
rorl
pushf
enter
and
rep
scas
inc
cmc
mov
jo
mov
cwtl
add
add
push
inc
dec
call
and
pmullw
xchg
dec
mov
jae
inc
push
sbb
daa
sar
scas
loop
inc
movsl
jecxz
xchg
xchg
scas
cld
or
fwait
push
jle
dec
test
ficompl
pop
popf
and
shll
loopne
xor
mov
pop
inc
mov
dec
jae
scas
rcrb
cli
in
sub
xchg
daa
testb
pop
cmp
or
shll
or
imul
xchg
daa
dec
ja
rolb
mov
sbb
mov
or
test
fcoml
insb
dec
loopne
jle
add
xchg
stos
xchg
nop
cmpsl
shl
xor
gs
rorb
xchg
sub
add
sub
xchg
mov
scas
adc
mov
mov
jns
xchg
or
pop
or
lea
stos
push
popf
packsswb
jbe
jecxz
sbb
mov
jmp
fbstp
dec
fwait
cmp
hlt
imul
cli
adcb
sbb
sbb
fdivrs
jae
inc
lock
stos
std
dec
jo
xor
push
stos
clc
and
daa
mov
imul
push
inc
mov
and
mov
inc
jb
cmp
jl
scas
sti
add
int3
sub
xor
addr16
mov
xchg
imul
icebp
out
cmp
fcomps
aas
sbb
cltd
cmpsl
ljmp
loope
fisttps
add
lock
push
mov
xor
insb
sub
sahf
mov
mov
fisubl
inc
nop
inc
aam
iret
fbld
movsb
ljmp
mov
aas
cmp
sbb
inc
leave
imul
xor
xchg
adc
mov
repz
mov
in
scas
mov
clc
repnz
icebp
dec
inc
fadd
outsl
mov
hlt
cmp
int3
xchg
or
add
cltd
jb
mov
arpl
in
loopne
pop
dec
cmpsl
push
icebp
mov
xchg
sub
and
inc
jbe
insb
insb
repnz
idiv
ja
mov
andb
sti
arpl
push
push
aad
jmp
cmp
mov
in
imull
pop
fimuls
sbb
sahf
cs
add
push
mov
cmp
xchg
das
adc
test
lret
icebp
cmp
xchg
and
xor
jmp
rcrb
mov
or
lea
adc
push
dec
loope
les
pop
in
mov
push
or
ds
sbb
cmpsb
stos
and
aad
inc
sub
jge
in
ror
cmp
xchg
arpl
xor
out
nop
pop
mov
sbbb
adc
aam
adc
or
std
inc
movsl
mov
pop
add
out
mov
mov
fisubl
jp,pn
mov
inc
xchg
sub
fcompl
jo
jo
inc
mov
inc
push
xchg
loope
sub
lods
pop
mov
pop
mov
and
jbe
push
scas
ljmp
sahf
in
push
cmpsb
test
or
xor
or
aas
or
dec
add
stc
cmpsb
hlt
loop
push
aam
jno
out
in
es
inc
ds
sahf
loope
xlat
sub
pop
mov
in
mov
rolb
cltd
and
push
mov
ficompl
xchg
pop
lds
std
pop
jge
cmp
sbb
dec
fisubs
xchg
pop
lcall
lods
and
test
fsubr
flds
fs
ss
rclb
mov
dec
xor
mov
pushl
movsl
pop
lret
dec
jno
leave
mov
scas
or
aaa
lcall
mov
iret
testl
shrb
in
mov
lcall
in
movsl
sbbl
sub
xchg
imul
clc
pop
test
test
popf
add
jne
jno
adc
adc
add
mov
es
adc
cs
xlat
lds
les
sbb
lods
icebp
pop
inc
shlb
loope
test
adc
pop
mov
loopne
push
mov
sub
lcall
insb
sub
and
xlat
add
xor
xchg
and
xor
push
add
sub
push
rsm
jo
adc
movsl
aam
sbb
roll
add
mov
and
fcomp
jnp
sub
and
shrb
cmc
sbb
sub
jne
mov
mov
cmpsb
dec
iret
and
mov
xchg
inc
popf
pop
fistps
nop
cmp
push
mov
test
int
or
pop
insl
jae
enter
push
mov
jge
addl
mov
lahf
nop
jo
imul
push
insl
dec
inc
addr16
cmp
in
leave
lret
fs
lea
arpl
cltd
jecxz
mov
fstl
mov
mov
add
lock
lea
pusha
inc
or
fdivrl
arpl
sbb
int
pop
divb
inc
xchg
pusha
sbb
loopne
leave
ds
mov
sub
add
fstps
dec
and
stc
frstor
adc
push
stos
xor
dec
lret
shll
lods
jle
ret
ret
or
jo
xchg
or
sub
and
les
sbb
dec
fwait
cwtl
popa
lcall
add
inc
add
lods
daa
out
ja
mov
add
icebp
push
es
dec
lret
xor
fdivrl
mov
sbb
and
icebp
inc
xchg
aam
das
cmp
jnp
arpl
push
in
mov
dec
leave
lds
jne
lahf
test
sub
cld
mov
pop
loope
stos
mov
pushf
xor
pop
mov
mov
cmp
fdivs
pop
and
pop
jp
xorb
mov
dec
pop
ret
aad
push
jg
push
xlat
mov
add
push
dec
loop
mov
addl
adc
out
cmpsl
jmp
nop
call
pop
pop
into
push
xor
in
or
shrd
add
fwait
pop
jo
pop
mov
and
cs
fiadds
fs
fisttps
inc
sub
pop
dec
xor
mov
mov
les
mov
fstpl
hlt
xchg
mov
mov
sub
inc
add
popa
adc
add
add
dec
int
dec
jne
sub
addr16
subb
into
jmp
rcll
arpl
ds
clc
or
mov
aas
subb
and
or
cmp
cmp
pop
stc
dec
mov
add
insb
in
inc
mov
clc
insl
cmc
arpl
cmpsb
in
mov
int3
mov
mov
mov
test
fdivr
fldl
cmp
mov
popa
push
cmp
pop
mov
fwait
movsl
bound
cmc
daa
push
ficoms
push
sub
pop
jo
mov
out
inc
and
insb
mov
hlt
mov
push
lods
fdivrs
dec
bound
outsb
cmp
jo
mov
stos
push
jb
xor
js
push
subl
mov
popa
stc
addr16
out
ja
test
jo
jg
jbe
inc
push
mov
andl
xor
cmp
or
xor
xor
add
scas
mov
sbb
cmc
out
xorl
fildl
xchg
push
leave
jecxz
js
pop
push
fisttps
int3
imul
mov
sub
int3
out
bound
adc
aas
sbb
es
je
mov
inc
das
js
push
cmpsl
div
mov
jb
ljmp
adc
lcall
gs
nop
rorl
clc
fmuls
inc
out
xor
mov
adcb
cs
test
nop
mov
dec
xchg
xor
push
in
mov
or
arpl
je
mov
gs
dec
mov
add
jge
incl
sub
sub
leave
lahf
jne
loopne
mov
push
or
xor
pop
stos
mov
push
mov
in
inc
inc
ror
and
popa
xor
fs
fs
mov
int
push
push
jl
popa
call
hlt
jmp
or
or
add
fnstenv
add
pop
dec
cmp
out
fldcw
pop
adc
dec
inc
sub
inc
adc
leave
sbb
loop
mov
push
pop
dec
inc
jle
insl
bound
pop
enter
sub
inc
xor
add
jge
inc
insl
fwait
les
xlat
stos
fmull
paddd
int3
push
add
addl
or
icebp
cltd
in
jnp
das
ret
and
or
pop
mov
mov
or
cmp
xor
iret
mov
arpl
mov
enter
and
lar
divb
xchg
or
push
cmp
and
fdivrl
leave
xchg
aam
cmc
stc
mov
pop
enter
dec
jb
fucomip
mov
inc
ja,pt
pop
cmp
in
jno
jns
sbb
cltd
add
loopne
adc
sbb
inc
jnp
push
xchg
inc
mov
push
add
sbb
aaa
arpl
popf
fwait
ja
mov
and
sbb
sub
sti
cltd
push
lea
mov
imul
mov
xchg
mov
jg
mov
xor
popa
fbld
sbb
loop
add
adcl
shrb
popa
cmpb
add
jecxz
lods
sbb
jle
xchg
jmp
cmc
cmp
mov
xorl
or
sahf
dec
insb
add
outsl
sub
sbb
test
movsl
inc
cmc
inc
inc
inc
test
ret
jae
mov
mov
les
clc
out
inc
dec
adc
jle
xor
js
lods
sbb
or
test
push
xor
add
mov
adc
xchg
cs
jecxz
or
sbb
stos
jbe
cmp
hlt
insl
sub
or
mov
inc
popf
pop
dec
lds
adc
mov
popf
hlt
xchg
inc
jb
inc
pop
fisttpl
push
sbb
pop
je
push
into
pop
xchg
xor
stc
cmp
xchg
fstps
xchg
xchg
or
sti
insl
aaa
jb
imul
xchg
push
pop
sub
dec
mov
ret
gs
dec
fildl
aad
pop
or
imul
sub
insb
test
popa
push
jo
xchg
lea
imulb
ret
xor
mov
ss
std
pusha
mov
cs
xchg
adc
lret
loope
les
add
adc
fwait
mov
dec
fsubl
fmuls
cmp
mov
jle
xlat
pusha
jg
jl
pop
loope
mov
lds
pop
fisttpl
ljmp
ficomps
clc
sub
rol
inc
push
cmpsb
cld
insb
jmp
out
pop
ja
into
pusha
hlt
and
adc
or
jecxz
inc
sbb
cmp
dec
jno
jp
les
popa
insl
push
mov
cwtl
icebp
jge
idiv
mov
inc
and
call
fsubs
jecxz
gs
cltd
mov
mov
inc
in
inc
adc
sub
push
xchg
imul
jle
andl
jg
xchg
pop
lret
mov
jp
xchg
lcall
in
popf
push
pop
repz
in
gs
jno
daa
bswap
test
jle
and
je
movsb
push
popa
sub
test
popa
dec
out
jge
outsl
mov
int
mov
dec
jl
sbb
jns
mov
add
xor
sub
xchg
jb
outsb
out
dec
pop
and
es
inc
gs
mov
add
in
fstpl
cli
sub
cmp
add
fsubrl
ljmp
cmp
sbb
or
sub
lahf
icebp
add
shrl
jno
sub
mov
fbld
das
mov
fprem
jns
addr16
int
adc
sub
in
lods
aam
out
sub
sbb
and
jns
insb
pop
mov
add
pop
push
add
or
pop
aad
sbb
mov
pop
and
inc
ret
cmp
rcrl
xlat
push
push
fdivl
mov
xor
in
push
or
loop
xchg
mulb
mov
iret
mov
and
or
xchg
scas
jg
jae
scas
leave
sub
sbb
in
scas
push
sarb
mov
xor
aam
stos
inc
call
fisubs
iret
inc
outsb
xchg
xchg
mov
xchg
mov
enter
nop
pusha
mov
popf
jnp
ror
mov
in
jne
dec
imul
jmp
psllw
sti
xchg
bound
addr16
ds
ds
in
push
xchg
dec
pop
pop
xchg
adc
fdivrl
dec
push
jo
sahf
fldcw
lcall
sub
lock
jns
mov
fwait
cmpsb
stos
movsb
sub
xchg
cli
pop
inc
mov
stos
or
jnp
fimull
mov
loope
adc
push
shlb
push
jae
in
lods
movsb
imul
inc
pushf
jb
int
pop
jae
aam
jns,pt
mov
mov
and
sub
pop
pop
pop
test
mov
stc
inc
or
or
in
cmp
sahf
mov
call
fisubl
jae
je
sbb
sub
jle
mov
mov
jb
sbb
mov
mov
pop
mov
rol
cltd
movsl
inc
rolb
aam
fnstcw
mov
mov
shll
arpl
les
call
and
adc
inc
push
neg
cmc
push
mov
call
ss
aaa
fcoms
rcrl
in
lahf
cwtl
imulb
fstps
fstpt
pop
or
std
fistps
test
cmp
test
lcall
mov
pushf
mov
popf
or
pop
mov
shrl
inc
cwtl
or
pop
pushf
sbb
out
shll
push
sbb
mov
mov
mov
or
cs
rorb
mov
mov
mov
jb
and
add
shlb
dec
or
cli
xchg
js
xlat
xchg
inc
ljmp
and
adc
test
mov
cmp
xor
push
jbe
cmpsb
adc
jns
adc
outsl
push
sub
ret
stos
ja
mov
outsb
lcall
out
loope
data16
std
gs
gs
mov
addb
outsl
mov
cltd
sub
lcall
jns
incl
add
fisubl
mov
xor
aam
inc
xlat
push
xchg
scas
out
push
leave
bound
mov
add
cltd
xor
and
inc
and
cmpsb
adc
subl
icebp
adc
and
inc
ret
mov
fwait
pop
sahf
adc
fmuls
mov
lcall
pusha
dec
jge
push
pop
inc
sub
xor
cltd
push
cmp
mov
roll
mov
jne
mov
es
and
sbb
pop
out
bound
mov
mov
lock
cmpsb
or
pop
call
sti
imul
jnp
addb
mov
int3
jns
ret
scas
popf
cmp
popf
sbb
rcll
and
pop
popa
push
popa
push
fidivs
or
pop
and
cmp
sti
mov
jno
mov
sbb
add
xchg
cltd
dec
lods
inc
cwtl
repnz
mov
dec
xchg
int
sbb
das
push
orb
stc
jo
lods
pop
cmp
cltd
insb
xchg
pop
mov
movsb
ret
mov
mov
lcall
mov
jo
sub
push
mov
adc
jne
cmp
fistps
inc
xchg
xchg
mov
movsl
fiaddl
movsb
or
lcall
pop
jbe
jno
gs
into
inc
divl
movsb
push
push
mov
ds
ret
pop
and
enter
xchg
jno
push
fcom
dec
das
or
mov
pop
mov
jmp
icebp
mov
pop
mov
jno
xor
mov
inc
adc
mov
mov
int3
inc
fsubp
rcrl
movsl
pop
or
mov
or
mov
aaa
in
adc
mov
add
add
jns
out
jne
mov
add
jo
stc
cmpsb
xchg
jns
stos
imul
out
mov
bound
lcall
jb
popa
movsb
sbb
xor
push
mov
lods
pop
xchg
gs
loopne
xor
cmpl
push
adc
repz
sub
in
sbb
dec
push
jecxz
outsb
mov
and
lods
loope
mov
dec
dec
test
andb
aam
popa
popf
mov
lock
jle
popf
cmp
lret
add
cld
pop
syscall
imul
mov
cmpsl
cltd
out
stc
sub
pushf
popa
shlb
aad
mov
inc
mov
push
dec
xor
sbb
mov
dec
stos
das
push
xchg
loope
std
cmpsb
xchg
mov
jl
mov
dec
sub
pop
mov
mov
xlat
out
inc
imul
cmp
andb
adc
pop
inc
sub
inc
xchg
jp
out
sbb
outsl
out
adc
sub
jp
scas
jp
out
in
ss
lods
or
mov
pop
cmpsl
mov
sbb
inc
das
out
aaa
ja
ljmp
or
xor
jns
xor
scas
scas
push
lret
repz
push
clc
xor
jg
add
sbbl
sahf
bswap
add
ja
xor
xchg
jbe
filds
push
jbe
hlt
movq
mov
mov
mov
andl
or
mov
sub
scas
stos
mov
je
pop
jnp
xchg
pop
jbe
iret
xor
add
je
xchg
mov
inc
mov
outsl
sub
adc
stos
cmp
push
inc
jg
xchg
push
sahf
lahf
mov
dec
test
inc
and
dec
out
loope
push
dec
lcall
push
xor
clc
mov
xor
mov
or
lret
or
mov
push
xchg
sub
nop
mov
ret
xchg
outsl
xor
insl
and
push
ss
lods
aas
dec
dec
fnstcw
inc
movsb
lret
int
popa
popa
test
sbb
xchg
mov
lret
adc
xchg
dec
dec
ret
testb
jecxz
cmp
mov
jp
sbb
fldl
sbb
iret
sbb
insl
lods
pop
in
add
inc
hlt
add
adc
cltd
loope
pop
loopne
or
hlt
mul
jmp
mov
out
push
jbe
mov
lds
or
mov
or
sahf
push
push
loope
pusha
insl
icebp
bnd
loope
jl
mov
push
rcrl
icebp
and
mov
call
ds
and
rcl
sub
sub
or
mov
js
fwait
iret
or
cmp
aas
ret
aad
mov
mov
dec
rol
jns
jo
xor
pushf
sbb
or
test
inc
mov
mov
or
adc
fmull
fstpl
ret
aad
ja
mov
add
fisttps
cs
repnz
std
lds
or
sbb
push
movsl
jg
es
testb
add
paddsb
mov
sbb
sti
push
lret
loope
in
xor
aad
inc
mov
mov
test
movsb
in
xor
sbb
jl
push
add
test
and
push
shll
push
rorl
push
push
stos
out
sub
es
cwtl
ss
incb
test
xor
popa
sub
jbe
test
sub
push
sbb
cs
jo
sahf
out
aas
or
jbe
dec
gs
repz
mov
jne
loopne
rclb
mov
xchg
mov
ficoml
cmc
mov
mov
mov
lcall
lds
insb
test
shlb
nop
and
testb
adc
pop
jge
lahf
lret
lds
xchg
add
mov
stos
xor
lods
inc
out
adc
mov
jnp
inc
mov
jb
leave
enter
sti
inc
push
in
adc
add
mov
dec
push
mov
xchg
xor
dec
xor
out
jp
mov
lods
imul
push
fwait
mov
mov
fs
inc
ret
clc
clc
ds
and
cmpb
cs
sti
rorb
pop
push
mov
mov
and
inc
jo
mov
jns
push
js
adc
pop
mov
lods
push
cli
or
push
in
dec
pop
addr16
cmp
xchg
aas
or
xor
cmp
movsb
clc
gs
mov
stos
pusha
xorl
and
notl
xlat
dec
xchg
mov
jae
push
fmulp
jecxz
nop
mov
icebp
cmp
loope
adc
or
dec
mov
sarl
add
push
adc
movsb
insl
aas
push
push
cmp
mov
fwait
jne
sbb
push
xchg
imul
dec
fiaddl
int3
lock
dec
xlat
or
sub
push
and
mov
sbb
shl
xchg
arpl
outsl
xchg
int3
or
ds
push
sbbb
pushl
mov
roll
dec
or
push
sbb
xchg
rcrb
mov
imul
aas
fmuls
and
clc
inc
mov
mov
xchg
fdivrs
or
popf
ljmp
dec
push
mov
cmp
negb
in
inc
adc
cmp
andb
jae
icebp
insl
push
xor
or
and
in
push
jns
loope
pushf
push
mov
mov
cwtl
pop
idivb
mov
push
sbb
aam
mov
lcall
out
in
inc
sbb
push
xor
push
in
and
pushf
leave
or
xchg
mov
dec
xor
mov
jmp
push
pop
js
mov
fdivrs
adc
stc
cmp
xchg
or
xchg
cmpsl
aas
retw
fdivrs
add
or
pop
popf
nop
stc
mov
pop
push
sarb
ret
shll
push
pop
mov
adc
sahf
or
cld
mov
or
and
pop
jae
cwtl
add
xchg
lcall
cmp
cmc
in
pop
dec
out
add
mov
mov
mov
fadd
repz
dec
aad
imul
stos
orb
mov
mov
pop
cmp
xchg
stos
mov
data16
cmc
mov
mov
out
testb
mov
rclb
fstpl
jmp
lea
js
ret
lods
inc
aam
int
sbbl
cmp
push
dec
push
les
or
push
xlat
xor
sub
lret
jns
loopne
fidivrs
or
cmp
imul
stc
sbb
and
dec
add
ret
sahf
gs
cmp
popf
inc
scas
adc
adc
cmp
arpl
mov
inc
stos
xchg
sub
xchg
jae
inc
sbb
in
ret
out
push
xor
in
add
push
cltd
ss
int
imul
pop
mov
push
pop
shll
jmp
fsubrl
call
add
adc
cmp
mov
inc
std
or
mov
out
in
mov
mov
data16
data16
xchg
sbb
add
das
repz
xchg
mov
mov
lods
ds
in
adc
add
sbb
mulb
dec
bound
movsb
ss
daa
dec
repnz
loopne
xchg
sar
mov
incb
sahf
sbbb
mov
jae
inc
add
or
add
push
aad
pop
jge
dec
push
popl
adc
in
lret
sbb
push
lock
xchg
lds
loope
lcall
mov
mov
in
int3
jmp
js
mov
adc
inc
dec
dec
jae
pop
fisttpll
sub
mov
fidivrs
cmp
pop
ja
push
pusha
add
daa
dec
data16
pop
stc
lock
inc
aaa
ds
jecxz
mov
dec
lret
sti
or
shr
aad
cltd
in
push
in
cmc
jno
movsl
ret
ja
gs
fcmovne
jle
xchg
xor
popf
sub
add
mov
hlt
adc
pop
and
sbb
testb
jno
test
inc
stos
sbb
and
insl
jns
inc
jle
imul
dec
push
stos
sub
cmpsb
ss
push
cmp
outsb
add
aas
xorb
ficompl
mov
adc
xchg
pop
sbb
sahf
xlat
cmp
lods
ja
mov
adc
push
or
sti
jp
inc
mov
jns
sbb
push
adc
push
xor
sbb
push
shrb
mov
fistps
jecxz
inc
sub
nop
push
jmp
mov
jge
dec
xor
jp
push
push
hlt
pop
loopne
inc
andl
loope
dec
mov
adc
je
sub
mov
addr16
and
in
jno
xorl
push
addr16
inc
imul
inc
testb
loope
cmp
imul
xchg
push
leave
stos
or
pop
loope
or
pop
test
mul
jge
addr16
cmp
notl
adc
adc
xor
out
es
xchg
adc
mov
sub
fisttps
popa
movsb
leave
std
inc
xor
jmp
jno
adc
mov
int3
rcl
clc
sarb
adc
jnp
jbe
mov
mov
cmpsl
xlat
out
pop
jnp
sub
dec
jne
push
dec
rcl
push
add
sbb
je
jo
or
mov
into
insb
sbb
leave
sub
movb
mov
shll
push
push
push
inc
pop
xchg
cli
aas
push
rclb
and
popa
adc
enter
sarb
dec
cli
mul
mov
imul
fsubp
fs
aam
inc
push
xchg
push
xchg
add
or
and
mov
sbb
stos
or
jle
mov
jg
in
scas
jl
or
jle
xor
rcrl
addl
pop
or
mov
cld
sbb
mov
andb
push
push
mov
or
in
test
je
and
mov
mov
cld
lods
ja
icebp
rclb
mov
scas
mov
iret
cs
jno
or
xor
sti
cmp
pop
adcl
or
repnz
insl
enter
or
mov
sbb
mov
inc
loop
xchg
sbb
or
in
xor
movsb
test
add
fcomps
ljmp
sub
jg
lds
xchg
add
xorl
fsubrs
mov
and
jmp
or
jmp
js
es
inc
mov
adcb
sbb
cmpsl
or
jb
or
sub
mov
into
lea
sbbl
lods
add
add
out
sub
xchg
bndldx
cmp
aaa
push
and
mov
and
xchg
movsl
mov
dec
cwtl
pop
shll
add
mov
jmp
xchg
sahf
fcmovnbe
sbb
dec
std
jnp
dec
jmp
pop
scas
jns
push
mov
push
bound
das
lock
mov
push
jo
repz
mov
or
out
mov
dec
mov
mov
outsb
scas
push
inc
imul
mov
push
cwtl
dec
test
xchg
push
cli
and
in
or
rcrb
xor
xor
add
lds
mov
jecxz
adc
sub
mov
push
push
inc
mov
ror
sbb
jg
aas
inc
dec
lret
xor
mov
cmp
add
or
leave
fsubrl
std
xor
lds
out
push
push
xchg
mov
xchg
stos
jo
enter
sub
xchg
or
ljmp
jnp
dec
icebp
out
sahf
and
cmp
or
jmp
mov
fmuls
xchg
dec
mov
push
into
push
and
and
repnz
sbb
pop
lods
inc
push
imul
cmp
lods
enter
mov
icebp
out
loope
pop
mov
mov
adc
mov
test
into
xor
lret
aaa
push
out
rorb
and
sub
lcall
imul
and
or
andl
ret
mov
mov
push
mov
jae
jae
cwtl
pop
inc
mov
adc
xchg
cltd
push
or
into
addr16
lods
pop
add
ffree
pop
enter
pop
out
pop
lret
mov
stos
fists
push
fwait
stos
or
scas
mov
sub
inc
inc
insl
mov
mov
aam
pusha
mov
jo
jne
xor
sub
insl
test
inc
adc
jns
loop
pop
dec
cld
pminub
pop
mov
fldt
mov
sub
les
rcl
sbb
xchg
lea
and
insb
cmpsl
dec
test
lret
into
xchg
int
push
sarb
jecxz
sub
xor
shlb
pop
xchg
lahf
or
pop
jmp
push
adc
les
jno
cmp
stos
pop
loopne
mov
and
mov
lret
add
sbb
hlt
loope
inc
or
clc
ror
addr16
mov
xchg
clc
xor
and
dec
dec
mov
xor
movsb
pusha
sub
nop
mov
cmp
and
fldenv
gs
adc
lods
inc
cmp
mov
fnstcw
loop
lods
iret
jne
cmp
hlt
or
adc
ret
inc
jp
dec
test
shrb
stos
pop
xor
jl
and
xor
lret
je
dec
sbb
pop
inc
xor
and
jmp
push
repnz
int
pop
jp
push
mov
fnsave
push
lds
mov
mov
inc
sbb
or
mov
pop
subb
pop
mov
add
add
loopne
mov
ljmp
mov
test
pop
fcmovbe
cmp
cmp
cmp
inc
scas
repz
imul
lock
inc
add
jns
cmp
mov
mov
mov
cs
push
sti
mov
addl
jmp
jecxz
xor
sub
adc
pop
in
mov
dec
fnstsw
out
lret
sbb
arpl
repnz
and
mov
lret
push
pop
dec
pop
push
xchg
pop
sub
sbb
dec
xchg
mov
cltd
add
fimull
push
dec
xchg
mov
fcompl
out
jnp
adc
aaa
push
iret
bound
adc
sbb
adc
jle
inc
mov
xlat
mov
cmp
mov
sub
arpl
add
pop
sbb
cmp
adc
test
negb
fbstp
ljmp
mov
divb
cmp
mov
movsl
insb
pushf
and
and
testl
test
call
das
mov
loopne
and
out
popa
inc
push
xor
leave
fmull
pop
notl
mov
in
aam
pushf
popf
in
jmp
jae
js
push
pop
or
shlb
aaa
push
or
xchg
movsl
lret
lcall
mov
xchg
mov
dec
pop
dec
shrl
dec
mov
ja
xor
mov
sub
scas
insb
lock
mov
shr
enter
cmpsl
cmpsl
ss
pop
ljmp
xor
cwtl
pop
out
les
inc
lds
xchg
lock
cmp
xor
xchg
jb
sbb
in
push
lods
adc
push
bound
fdivr
test
add
and
bnd
sti
add
negl
mov
enter
adc
mov
stc
enter
cmp
clc
dec
xor
sbb
sub
movsb
inc
xor
int
fcmovnb
lret
fwait
push
xor
cmc
cli
cmp
iret
or
lds
dec
sbb
add
lods
lret
stos
push
es
cld
aaa
jge
jmp
nop
cmp
mov
xchg
xor
push
mov
pop
rolb
aas
push
and
sbb
les
sub
or
add
andb
dec
sub
js
fdiv
inc
pop
jmp
lret
pop
jnp
cld
pop
xchg
in
dec
push
int
rcrb
pop
les
mull
mov
mov
add
mov
push
pop
inc
arpl
mov
addr16
sahf
std
inc
inc
jmp
mov
sbb
roll
stc
or
in
lods
outsl
push
in
inc
mulb
rorl
and
and
sbb
xchg
mov
xor
xor
scas
sar
xor
inc
push
dec
movsb
xor
inc
or
fnsave
xchg
insl
xchg
jmp
mov
adc
imul
imul
scas
outsl
push
mov
or
clc
adcl
jmp
mov
cmp
fcomi
push
dec
mov
je
push
daa
cmp
sub
lea
push
aaa
in
pop
sub
dec
out
outsb
lret
popf
dec
cmp
inc
shll
test
push
xor
inc
inc
enter
pop
addr16
dec
sti
jmp
fiaddl
ljmp
scas
retw
mov
out
movsl
pop
ljmp
mov
movsb
pop
lock
mov
cmpsb
push
and
aaa
add
pop
xor
sbb
sbb
or
jecxz
adc
cwtl
rorb
pop
jmp
shrb
or
jns
mov
xchg
incl
or
movsb
mov
xchg
fidivs
addr16
fwait
jge
imul
test
in
mov
add
fiaddl
std
fadds
ljmp
int
xchg
out
sbb
movsl
aaa
int3
mov
shrb
jae
icebp
mov
mov
leave
add
es
cmp
jbe,pt
lods
fsts
mov
imul
and
push
push
add
ret
fisubl
enter
and
addr16
je
test
sbb
xlat
test
xlat
push
push
lret
test
mov
mov
dec
jne
push
adc
sahf
fcompl
int3
xchg
fldt
sbb
dec
mov
inc
fdivrs
in
movsb
ja
gs
pop
xchg
cli
pop
scas
mov
enter
mov
stos
fstpt
stc
sub
and
mov
mov
in
cmp
dec
jae
jp
add
lret
jns
sbb
or
cmp
xchg
push
movsl
xchg
out
stc
xor
inc
lods
jmp
inc
enter
lock
lret
mov
lea
fldt
outsl
stc
jae
lods
sub
add
test
inc
xor
cmp
inc
inc
pop
push
andl
aas
lods
nop
adc
test
lds
add
test
lret
inc
cli
incl
xor
mov
nop
dec
cwtl
add
xor
dec
dec
xor
jnp
push
mov
xchg
test
cltd
mov
xchg
test
addl
and
cmpsb
insl
add
pop
fwait
movsb
movsb
sbb
cld
clc
sbb
add
or
cwtd
pop
xchg
fnsave
cmovl
lcall
and
sub
imul
rcr
or
dec
pusha
jge
outsl
pop
mov
or
or
sbb
xchg
aaa
inc
imulb
and
and
or
lcall
lret
push
lret
inc
cmp
xor
sub
xchg
push
pop
xchg
adc
xchg
out
jge
mov
stos
jae
cmp
cwtl
filds
mul
iret
lret
inc
in
fildll
dec
mov
inc
mov
nop
cmp
cltd
je
xchg
pop
dec
gs
mov
scas
push
or
fsubrl
dec
fldenv
adc
int3
cmp
pop
aas
fiadds
dec
out
stos
stc
pop
shl
sub
jo
mov
es
scas
xchg
ljmp
mov
scas
lea
fstl
stos
add
mov
mov
hlt
out
lret
jecxz
pushf
test
clc
and
daa
rcr
jmp
andb
pop
jl
lahf
push
xchg
outsl
sti
sbb
lcall
fs
testb
fwait
inc
fdiv
xchg
sbbb
sbb
adc
jp
hlt
cmp
mov
adc
lds
xlat
test
mov
imul
call
aad
out
mov
adc
shrb
jg
insl
call
dec
repnz
sub
roll
sub
dec
subl
mov
fcoms
push
pop
xchg
jne
movsl
xor
push
cld
call
inc
add
aad
cwtl
imul
test
dec
push
mov
or
mov
int
and
hlt
lret
fbstp
scas
pushf
pusha
sbb
movsl
sub
adc
aaa
xchg
jge
push
sub
rorb
rcll
and
mov
stos
inc
push
ret
cmp
adcb
add
adc
add
pop
jmp
jp
sub
scas
lret
int
insb
add
cmp
inc
in
scas
add
jle
mov
inc
add
push
lret
in
xor
cmp
cmp
orb
and
bound
inc
xchg
mov
and
mov
mov
and
scas
jnp
jle
aas
imul
mov
bound
fs
xor
gs
xlat
lock
push
lea
orl
imul
push
xchg
fwait
inc
int
cmpsb
and
jge
es
jns
sub
inc
mov
cmp
xchg
dec
sbbb
js
fwait
pusha
fs
idivl
fs
addl
rcr
subl
ds
pop
adc
in
xchg
mov
out
sbb
icebp
and
xor
in
aas
in
inc
dec
push
arpl
mov
scas
lret
pusha
xor
jns
inc
xchg
sahf
or
mov
shrb
push
test
jg
pop
push
push
inc
in
sbb
push
push
nop
filds
adc
add
test
cmpsb
pop
sub
mov
mov
popl
imul
add
outsl
pop
incl
pop
test
call
jle
dec
mov
cmpsl
lds
fcmovnu
insl
cmp
inc
pop
dec
adc
cmp
mov
stc
cmp
lret
cli
mov
sbb
adc
insl
sub
addr16
pop
cmp
sbbl
cmp
popa
out
scas
inc
rcll
cwtl
mov
push
sbb
sub
es
cmp
repnz
stos
dec
lcall
cli
add
mov
sahf
enter
jmp
std
aaa
pusha
mov
add
push
insl
jb
insl
or
shrl
cmpsb
aaa
mov
pop
lods
adc
aaa
and
jl
dec
mov
fcomps
addr16
fists
je
xor
mov
aam
outsb
ljmp
add
pop
add
jmp
ljmp
mov
aas
or
mov
clc
jmp
out
inc
add
or
cmp
pop
pop
cmp
nop
cli
ljmp
divl
gs
pop
or
in
nop
cmp
or
add
mov
mov
push
rclb
stos
xchg
push
cs
incb
mov
aam
jmp
jp
test
in
testl
or
cmpsb
fimull
mov
out
sbb
xlat
std
xchg
lret
pushw
cmp
dec
cmp
stos
jmp
loope
xchg
xorb
or
xor
xor
das
jecxz
ret
subb
ja
push
push
add
sahf
cwtl
or
fnstsw
jl
lds
mulb
jmp
dec
imul
and
iret
jb
ffreep
inc
or
mov
shll
add
mov
pop
push
jg
cmp
hlt
add
incb
cwtl
pop
inc
fnstsw
mov
adc
mov
sahf
xor
xchg
xor
mov
xor
mov
cmc
in
xchg
jl
jmp
add
lahf
stc
nop
sub
mov
sub
xor
enter
fcmovnb
inc
adc
addl
xlat
mov
negl
aaa
cmp
push
test
repnz
in
xchg
in
xchg
jp
mov
sti
jg
std
cmp
fldl
cmp
frstor
mov
xchg
mov
dec
ret
and
jae
fdivs
loopne
sub
jp
cmpsb
cmp
xchg
loopne
adc
cmp
inc
mov
lcall
in
dec
mov
adc
mov
sub
sub
loopne
jbe
dec
sub
cmp
movsl
dec
ss
mov
and
cmp
mov
mov
mov
xor
das
mov
push
test
ds
pop
xor
adc
sbb
mov
movsb
bound
cmpsb
push
add
inc
movsb
loop
ss
aaa
dec
ret
fcomps
fsubrp
xchg
outsb
pop
jmp
ss
in
lret
sahf
into
repnz
mov
cwtl
sbb
mov
stos
scas
xor
sub
adc
add
test
ret
and
push
test
add
daa
aam
xor
ja
arpl
inc
sub
add
inc
in
jae
pop
add
enter
sub
pop
in
push
mov
dec
pop
xor
test
int3
jmp
mov
or
lcall
sbb
cmpsl
push
jb
je
push
mov
xor
inc
cwtl
popf
pop
test
push
fistpll
mov
rolb
xchg
dec
out
and
adc
pop
jne
lock
add
jge
movsl
or
outsl
push
ljmp
inc
sbb
es
pushf
xlat
add
je
in
push
mov
fdivp
add
jmp
add
in
jb
xor
insb
push
dec
mov
pop
gs
mov
lds
aad
cmp
or
pop
jo
aam
xchg
cmpsb
or
ljmp
push
sbb
mov
jmp
jb
les
pop
push
mov
loopne
push
jmp
and
test
xor
xchg
jnp
in
sarb
std
pop
add
dec
andnps
pop
and
xor
mov
loopne
out
scas
mov
cld
or
sbb
cmp
dec
pop
mov
xlat
pop
add
xchg
lea
pop
and
test
cmpl
loop
and
stos
jle
cli
mov
ss
out
test
dec
negl
adc
imul
imul
push
xchg
or
daa
aaa
fdivrs
xchg
dec
subl
movsl
adcb
sbbb
mov
xchg
mov
mov
adc
sub
fwait
xchg
cmp
mov
scas
rolb
arpl
dec
add
inc
das
shrb
ja
inc
inc
loopne
inc
sahf
aad
inc
push
dec
iret
fwait
or
mov
push
cltd
not
inc
js
mov
xor
popa
mov
shr
mov
and
jle
bound
addw
push
hlt
sub
push
xor
or
sbb
pop
and
xchg
je
dec
out
out
rcr
cmp
ror
scas
pop
jo
jno
or
in
lret
mov
xor
movsl
xchg
xchg
mov
shlb
pop
cltd
jl
jg
iret
mov
mov
decl
out
or
ja
xor
push
sbb
in
andb
sub
push
dec
and
cmpsl
pushl
jp
or
data16
sub
push
movsb
dec
mov
les
rorl
mov
clc
push
xchg
nop
jmp
icebp
in
inc
scas
cmp
rorb
push
sahf
mov
xchg
cmpb
fdivr
out
je
or
insb
and
out
mov
jno
mov
in
test
int3
nop
xchg
adc
es
lcall
repnz
fldenv
fwait
xchg
les
pusha
and
gs
xlat
je
out
add
xchg
mov
dec
clc
mov
jne
dec
mov
stos
call
push
jge
xchg
mov
std
nop
sub
repz
mov
pop
sbb
push
or
mov
mov
dec
xchg
loop
and
inc
in
xchg
push
cmp
push
fwait
movsl
jle
int3
test
cmpsb
outsl
iret
adc
mov
cli
xlat
xor
ret
jnp
rorl
mov
data16
xor
bound
cmpsl
adc
dec
loopne
xchg
pop
clc
out
adc
movsl
mov
ret
sub
jmp
sarl
xchg
inc
xchg
mov
mov
cltd
jp
jns
movsb
es
pop
cwtl
mov
icebp
dec
jae
add
stc
mov
mov
dec
std
adc
sti
mov
dec
leave
cmp
scas
xorb
es
jge
sbb
xchg
outsb
std
daa
mov
adc
cmp
pop
repz
xchg
jnp
les
and
xchg
push
add
mov
test
ljmp
mov
adc
or
leave
mov
cmc
jne
stos
stos
push
cwtl
icebp
mov
inc
jmp
or
inc
jmp
ret
push
sub
lock
stos
and
fisttpll
aas
mov
mov
or
sbb
inc
jecxz
or
pop
mov
stos
cld
lret
add
adc
cmp
inc
in
jg
fisttpll
push
push
lea
ret
repnz
out
mov
ja
outsl
jl
sarb
dec
sti
dec
scas
out
and
enter
sub
movzwl
mov
pop
pushf
mov
xchg
or
test
xorb
pop
dec
imul
and
es
cmpsl
mov
xchg
jp
shlb
sbb
outsl
jp
in
loope
in
scas
xor
in
pop
jb
repnz
fiadds
mov
xchg
mov
and
fnstsw
test
std
scas
das
imulb
dec
add
push
pusha
pusha
push
mov
sbb
mov
mov
sub
jg
xor
fildll
in
pop
sub
in
std
xchg
sbb
or
mov
and
fucom
mov
fwait
je
call
dec
cmpsl
push
xchg
es
shlb
xchg
test
ret
inc
pop
and
mov
inc
jecxz
les
sahf
addr16
dec
adc
pop
in
or
imul
sbb
sub
pop
mov
popf
js
sti
sbb
test
movsb
pop
jge
gs
repnz
adc
push
sti
nop
push
gs
sub
sbbb
jmp
adc
or
ss
dec
sub
adcb
inc
cmp
rcr
sub
sbb
mov
fdivrs
cmpsl
push
in
mov
int3
jge
mov
xchg
movsb
pop
push
add
inc
and
popa
lahf
push
out
neg
inc
add
scas
sbb
fisttpll
ret
push
dec
inc
mov
out
adc
orb
xchg
push
sub
in
stos
mov
cmp
inc
push
data16
cmpb
push
outsb
test
adc
ret
rcr
into
and
sti
test
aad
ljmp
mov
or
movsb
mov
jns
hlt
dec
xor
sar
xor
dec
sbb
ret
and
xchg
call
jmp
test
insl
test
cmp
neg
mov
pop
xlat
ret
xor
in
imull
fwait
push
adc
in
sbb
mov
cld
cwtl
les
add
inc
mov
dec
iret
clc
bound
mov
ret
xchg
cmp
jnp
hlt
stos
adc
and
popa
jl
stc
pushf
mov
sub
loop
mov
movsb
cmp
mov
enter
jae
movsl
adc
sahf
cwtl
arpl
sub
and
or
daa
sub
adc
add
iret
sub
xchg
cmp
dec
popf
int3
lods
xor
rep
xchg
aas
aaa
insb
negl
ja
cmp
jge
xor
mov
mov
scas
and
mov
mov
xor
xchg
stos
daa
mov
cli
mov
push
inc
sub
jae
rcrb
xor
fs
jp
dec
cmp
pop
outsb
cwtl
int3
or
inc
xchg
dec
add
fs
out
or
scas
push
loop
pop
cmc
lret
lcall
mov
dec
push
mov
jnp
lahf
inc
outsl
fldenv
fistps
lods
cmp
jge
imul
inc
xlat
cli
js
adc
call
ror
mov
addb
fmuls
outsl
fcmovnb
sub
lea
pop
mov
icebp
les
popf
adc
rolb
adc
add
jnp
inc
mov
jae
in
xchg
dec
in
xchg
loop
ljmp
jp
xor
xor
jmp
or
mov
cwtl
pop
iret
je
jge
stc
repnz
lock
or
loope
jb
call
iret
inc
xor
inc
sub
inc
lea
lret
aas
jmp
xchg
fldcw
mov
aaa
jle
and
mov
or
je
loopne
les
stos
arpl
mul
mov
inc
pop
sbb
out
adc
push
in
data16
mov
scas
mov
pop
lret
popf
jae
dec
mov
cmp
push
out
xchg
mov
mov
mov
test
fs
add
sub
stos
mov
dec
or
push
loopne
mov
mov
ja
das
sbb
daa
add
into
js
inc
or
mov
pop
inc
add
cmpb
inc
mov
inc
jbe
out
jnp
pushf
add
add
lock
pop
mov
mov
ljmp
jae
jno
pop
sub
and
scas
xor
mov
jl
add
dec
xor
pop
lock
or
icebp
popf
jg
loop
lods
cmp
and
das
int
lods
add
mov
test
xor
adc
outsb
xor
and
andb
lret
adc
mov
lcall
jmp
lcall
pop
aad
inc
nop
push
enter
loop
sbb
das
je
sbb
clc
cltd
cs
fwait
push
push
cltd
movsl
rcl
stos
push
mov
out
ret
and
stc
mov
ljmp
out
push
aaa
ror
adc
or
lds
rclb
insl
fdivs
ret
cmc
mov
mov
sub
push
jp
rcll
in
add
xchg
rolb
jo
inc
sbb
jb
inc
scas
add
dec
roll
repz
sub
mov
sbb
sbb
cmp
rcr
outsl
pop
or
cmp
or
add
or
or
mov
scas
mov
call
xchg
aad
push
adc
mov
mul
ret
jp
jmp
jle
mov
rcrl
xlat
mov
repz
fcmovbe
push
mov
ja
hlt
pop
int
push
lea
jnp
mov
je
shll
lods
or
cltd
into
stos
out
in
ss
mov
adc
cwtl
add
mov
sub
mov
add
mov
mov
test
mov
mov
orb
add
push
lret
fstps
movsl
mov
insl
mov
dec
push
lds
sbb
repnz
dec
xchg
ljmp
stc
push
dec
test
or
push
add
xor
lea
mov
inc
scas
push
jmp
or
inc
push
sbb
ror
pop
scas
adc
sbb
or
mov
pop
ss
xchg
jl
les
xor
icebp
mov
mov
mov
dec
pop
loope
mov
xchg
loope
imul
cmc
cmp
push
call
movsl
clc
or
lcall
xchg
xchg
and
rcrb
add
dec
jb
mov
das
or
fs
mov
mov
ljmp
xor
dec
pusha
push
gs
int3
movsl
add
sub
jge
jmp
dec
pop
xchg
cmp
mov
adc
sti
sub
dec
jae
jne
movsl
mov
movsl
and
xchg
rorb
fwait
lds
lods
jno
xor
pop
dec
push
jge
jl
scas
nop
div
scas
sbb
pop
loopne
pop
mov
int3
sbb
push
inc
cli
jmp
mov
jp
push
pop
leave
hlt
or
adc
gs
imul
imull
loope
rcrl
mov
pop
dec
fidivl
movaps
pop
inc
ss
in
xor
xor
movsb
ffree
lahf
out
enter
adc
stos
fldl
pop
in
pop
int
out
xor
test
sti
cmc
add
in
outsb
xchg
cli
dec
sbbl
cmp
mov
rolb
pop
cmpsl
pop
jo
cwtl
sub
sub
mov
jb
aaa
xchg
aad
push
push
inc
mov
outsb
cmp
pop
sub
sahf
sbb
lahf
mov
xchg
pop
push
js
sub
popa
add
xor
iret
repnz
dec
add
cmpsl
push
outsb
xchg
arpl
jl
jae
iret
add
ljmp
stos
jo
lock
cmpb
mov
insl
sub
rorb
lea
jns
into
cmpsl
loope
stos
cld
sbb
in
pop
push
pop
jmp
icebp
mov
in
aam
leave
mov
sbb
adc
adc
int3
xchg
lea
push
imul
sbbb
pop
scas
ret
and
addr16
pop
mov
dec
popa
mov
outsl
push
mov
movsb
or
fwait
push
add
iret
pop
add
int
sub
stos
sub
lods
cltd
mov
lahf
sbb
push
in
inc
stc
xor
jno
ret
adc
push
insb
jae
and
into
sbb
add
xchg
popa
ret
sti
xchg
ret
fdivrs
hlt
loop
cmp
clc
mov
je
cli
fidivs
loope
ljmp
add
negb
xchg
push
addb
inc
sahf
lods
mov
pop
insl
mov
ret
sbb
out
push
sbb
pop
adcl
movsl
dec
lods
int
cmp
pop
iret
cwtl
cli
and
aaa
push
ds
aas
push
cmc
sbb
fnstsw
mov
aaa
fs
nop
shrb
push
and
xchg
cs
mov
push
fldl
cltd
cmpsb
mov
fstpt
mov
popa
daa
inc
xor
cmp
fadds
push
loop
adc
les
shrb
sbb
in
jecxz
pop
dec
andl
cmpsb
subl
jnp
push
insl
mov
mov
ss
movsb
mov
fcoms
pop
cmp
daa
lret
push
mov
cmpsb
inc
loope
push
call
xchg
cmpsl
lods
pop
and
mov
pop
imul
aam
sub
jl
push
jbe
adc
mov
mov
pop
mov
or
pop
in
dec
push
aad
pop
mov
out
cmp
in
cmp
cwtl
out
push
jo
std
jmp
pop
lcall
pop
insb
jne
out
fisttps
push
outsl
inc
or
pop
enter
cmp
lock
push
push
jmp
mov
loope
dec
mov
push
ja,pn
pushf
nop
or
test
in
std
adc
pop
and
push
popf
fiadds
push
fwait
inc
jnp
dec
pop
imul
adc
stc
shrl
jp
jg
arpl
ja
rcrb
mov
in
rcrb
cwtl
push
scas
sti
xchg
inc
cmc
adc
out
hlt
and
popf
and
cli
lock
adc
jnp
sub
lds
addr16
jne
sub
je
cld
outsb
stos
xlat
dec
pop
mov
sbb
js
test
xchg
push
jne
sub
enter
xor
fs
mov
inc
popf
lods
mov
pop
adc
jbe
int3
xor
add
fs
mov
mov
mov
dec
push
mov
repz
and
ret
pop
fisttpl
or
push
fisubl
jb
andb
dec
add
xor
jle
jo
cld
adc
pusha
mov
xchg
or
push
out
int3
adc
cmp
xor
imul
test
dec
mov
lret
inc
mov
inc
mov
cmp
inc
mov
sub
jle
and
sbb
jns
decl
mov
in
and
shlb
pop
jo
into
lret
paddusb
pop
fisubrs
cld
and
xor
sub
and
cmp
ficoml
sbb
dec
cmp
push
aad
mov
fstpt
jp
pop
call
inc
daa
fadd
cltd
in
enter
xchg
pop
aam
aad
and
fcmovnbe
or
mov
jmp
xchg
outsl
cmpsl
mov
frstor
xchg
add
movsl
aaa
outsl
fdivl
xor
sbb
aas
xchg
fstpl
out
mov
fmuls
nop
push
push
xor
rcl
popa
lea
lahf
sti
nop
std
mov
inc
jbe
add
nop
adc
orb
stc
dec
xor
dec
test
cmp
rcll
insl
jmp
mov
dec
sbb
int3
add
loope
push
enter
jl
arpl
cmp
push
push
xchg
in
push
std
subl
jp
xchg
data16
pop
loop
adc
xor
push
popa
out
adc
push
insb
pop
aas
or
adc
loope
push
xchg
dec
shll
cmpsl
pusha
insb
rclb
mov
cmp
pop
mov
mov
lahf
mov
std
outsb
pushf
je
movsl
into
add
mov
inc
clc
push
pop
mov
mov
sbb
enter
jno
pusha
sub
inc
mov
pop
fidivs
inc
inc
pop
jmp
outsl
cmc
cld
sti
das
adc
jmp
xchg
jb
int
in
sbb
int
lea
ja
cmp
cs
push
lock
cmp
test
js
or
fadds
mov
das
sbb
xor
scas
push
das
push
push
cmp
pop
icebp
mov
movl
stos
stc
rorb
insb
xchg
cmp
push
xchg
mov
ljmp
scas
mov
shl
or
sub
in
or
jae
arpl
lret
add
sub
bound
iret
push
aaa
enter
push
mov
mov
cmp
sbb
mov
popf
mov
fs
add
stos
int3
sahf
roll
aaa
std
pop
adc
ds
clc
aas
cmp
es
rcr
jbe
shlb
push
jp
xor
arpl
pushl
inc
mov
push
xchg
pop
out
leave
test
mov
cmpsl
xchg
andl
ljmp
adcb
roll
and
mov
lds
test
data16
push
xor
push
pushf
mov
pusha
enter
xchg
mov
jo
sti
push
fmuls
pusha
sub
in
adc
inc
fwait
incl
or
call
leave
sbb
test
mov
sub
aas
mov
xor
lcall
cmp
pop
aam
addb
stos
dec
cld
push
ds
add
sarl
mov
push
xor
adc
in
ret
sbb
cmpsb
pop
lahf
jnp
inc
xchg
push
test
repnz
mov
pop
aam
mov
sbb
or
mov
mov
sarb
push
test
mov
pop
nopl
cmp
inc
jnp
rclb
push
orl
stos
dec
aas
lea
cmc
scas
aas
or
lods
ss
cmp
jmp
dec
sbb
cs
push
push
test
add
sbb
inc
pop
add
sub
ds
push
push
les
jle
xor
es
cmpsl
sar
dec
xchg
and
dec
das
aaa
push
pop
test
pusha
cwtl
mov
orb
popf
sub
in
cmp
lods
sahf
push
push
and
mov
mov
add
fcmovbe
movsb
in
dec
adc
sbb
fisubrs
push
fmuls
add
inc
sar
ror
jo
sahf
jo
movsl
sbb
out
jle
cmp
jns
cwtl
add
mov
jnp
sbb
cmpb
jb
fmul
cli
jno
test
lock
je
lcall
minps
mov
lods
jmp
cmp
in
push
xlat
mov
rorl
repnz
sub
roll
out
call
lea
stos
andb
mov
lahf
cmp
arpl
xor
sbb
or
push
jl
in
adc
xchg
xchg
not
push
test
test
add
jg
ss
cmp
adc
xchg
cld
inc
cmp
stos
sbb
fistps
sbbl
aam
lea
icebp
sub
add
push
fdivl
xor
mov
rcrl
inc
inc
pop
ljmp
push
push
sub
mov
cmp
dec
and
rclb
push
inc
test
add
das
stos
inc
in
sub
in
xchg
lds
in
pop
sbb
lret
sahf
mov
loopne
jmp
sbb
inc
scas
inc
push
inc
mov
in
int
ret
mov
cmp
jo
pusha
xorl
mov
mov
cmpsl
das
sbb
xor
xor
mov
out
push
lret
dec
insb
lods
cmc
idivb
sbb
sub
ljmp
sub
mov
and
ficoml
loopne
lea
jnp
fsubrs
jp
mov
inc
rclb
imul
or
push
in
sub
push
or
popf
xor
cltd
mov
sbb
in
pop
dec
xor
aaa
insl
jmp
push
sub
dec
pop
jl
cmp
int3
cli
ds
test
imul
nop
and
pop
stos
into
aam
fidivrl
insl
decb
insb
repz
shlb
shrl
rorb
fadd
jbe
das
lahf
mov
cwtl
sahf
xchg
clc
and
mov
mov
gs
and
stos
mov
ja
push
inc
clc
es
fldenv
jo
sbb
insb
sub
pop
adc
add
inc
xchg
cmp
std
out
xor
sbb
cmp
pop
dec
jecxz
push
sbb
add
mov
cmpsl
adcl
es
mulb
or
outsl
cmpsb
jl
xchg
xor
sbb
jp
movsb
jb
out
xchg
or
jge
xor
mov
mov
stc
dec
test
lds
sub
dec
xchg
mov
pop
cmp
sbb
out
cmpsb
xchg
push
inc
iret
xchg
pop
dec
jns
fisubrl
mov
sub
aad
and
mov
add
pop
xchg
pop
adc
inc
and
or
fdivrs
enter
pop
test
enter
add
cmpb
push
in
sbb
mov
movsb
xor
dec
icebp
lcall
int3
inc
jmp
daa
call
outsb
lods
mov
outsb
xchg
push
imul
loopne
js
and
jl
out
jb
cmp
jbe
mov
sar
ss
cltd
mov
popa
shrb
xor
pop
in
add
loopne
mov
jno
sbb
adc
lcall
fistps
cmp
ljmp
leave
pop
push
cvtps2pi
mov
imul
adc
mov
mov
sbb
std
add
fs
xor
cmpsb
sub
leave
xchg
dec
jg
mov
bound
insl
push
jbe
lock
mov
imul
lds
ja
add
lods
call
lods
leave
jg
push
ds
rolb
adc
imull
decl
pop
jmp
testl
testb
inc
aad
or
divb
dec
cmp
pop
and
mov
popf
ror
xchg
cld
jne
sahf
fidivl
sub
fldl2e
and
inc
dec
add
lds
push
mov
inc
hlt
xor
mov
cli
cmp
mov
out
adc
inc
mov
into
loope
xor
sub
dec
lahf
mov
nop
pop
popa
fdivp
into
push
sub
arpl
lret
xor
lret
leave
sub
loopne
mov
inc
inc
add
pop
outsb
mov
test
iret
std
mov
out
fwait
out
cld
pop
or
jge
or
cmpsl
jns
mov
inc
and
in
nop
and
xchg
mov
push
xchg
cmpsb
pop
and
add
ss
pop
mov
fmull
scas
pop
test
inc
outsb
jmp
imul
mov
loopne
cld
les
out
adc
inc
xchg
xchg
sbb
test
xlat
lds
scas
jge
xor
loope
in
mov
bound
nop
or
je
out
xlat
repz
sub
and
je
push
out
jo
lock
mov
adc
mov
jns
imul
sub
xor
mov
out
sarl
xor
test
repnz
xlat
and
push
add
in
jp
pop
cmp
push
mov
xchg
mov
dec
rcrb
stc
popf
pop
sti
imulb
xor
fwait
or
out
add
ljmp
dec
and
jmp
cmp
mov
pushf
mov
sub
test
jns
imul
movsb
sbb
clc
jle
insb
cmp
push
loope
aad
mov
pop
pop
jecxz
and
roll
pop
sub
orl
pop
add
cli
cli
push
int
xlat
xchg
xor
dec
into
popa
xchg
or
add
and
cld
sbb
into
scas
jecxz
pop
and
movsb
xor
sti
adc
dec
lock
fisttpl
in
in
aam
push
int3
mov
fwait
dec
jae
lret
xor
lahf
push
pop
xor
xchg
cmpsb
xor
inc
mov
ss
dec
push
or
out
insl
push
add
mov
and
fcomps
jmp
add
testb
out
flds
cmc
je
scas
arpl
mov
sub
mov
icebp
in
movsl
cmp
stos
sub
shlb
or
sahf
stc
jno
and
pop
inc
imul
das
adc
js
shrl
imul
xchg
add
clc
and
in
mov
test
aas
jne
push
add
fmull
xlat
push
out
xor
and
mov
push
test
cmp
add
sbb
mov
sbb
pop
and
and
movsb
mov
test
add
adc
mov
push
out
dec
xchg
std
or
mov
mov
pushf
repnz
mov
mov
testl
xor
adc
sbbl
in
cmpsb
mov
int3
test
fcmovnb
jae
sub
and
in
push
sub
divb
jne
lock
mov
xor
push
mov
in
js
fstp
mov
inc
xor
js
or
hlt
ljmp
pop
aam
in
arpl
push
insl
jbe
mov
sbb
add
xchg
lock
inc
xlat
and
jmp
add
mov
popa
cwtl
mov
aad
les
outsb
mov
mov
jp
inc
lret
pop
add
fsubl
mov
addl
das
pop
push
push
aas
ret
xchg
mov
jp
in
cmp
xlat
inc
loope
xchg
inc
push
aad
push
cs
cmp
jg
arpl
in
rcl
mov
in
popa
movsl
in
mov
iret
into
sub
int3
xchg
dec
aad
es
flds
lahf
lock
push
in
mov
pop
cmc
push
sbb
imul
sub
adc
adc
cmc
mov
or
sahf
sbb
pop
push
out
or
jo
insb
loop
adc
or
call
mov
adc
fdivl
cmpsl
stc
cmpsl
mov
inc
dec
xor
aam
pop
jge
cwtl
xchg
inc
repnz
les
or
and
arpl
in
out
add
das
mov
mov
bound
popa
xorb
mov
or
pop
in
lret
push
jl
add
fsubr
xor
dec
iret
aad
dec
inc
repnz
imul
push
dec
ret
std
mov
jne
sub
iret
and
cmp
jae
arpl
scas
int3
insl
mov
les
sub
push
jae
inc
cld
or
sbb
inc
iret
bound
insb
mov
data16
add
out
daa
mov
or
imul
mov
xchg
mov
int3
sub
xor
outsb
jle
int3
stos
xorb
jae
adc
mov
pusha
add
and
add
inc
sbb
mov
lret
enter
sbb
je
adc
mov
mov
ret
jmp
call
lret
popf
out
jle
movsb
repnz
mov
sbb
and
fs
repz
mov
mov
ret
not
add
cmc
aam
cmp
testl
cltd
adc
cmp
inc
ja
push
fcompl
mov
data16
push
loop
mov
sub
decb
ds
push
fs
orl
cs
scas
push
mov
in
pop
negl
imul
outsl
jnp
sub
test
sbb
cmp
stos
sub
test
xchg
pop
jne
xchg
js
adc
sub
xchg
push
out
add
mov
ret
addb
mov
add
sub
outsb
out
scas
loop
jne
ret
xor
sub
mov
js
fidivrl
mov
mov
cmp
std
or
mov
jo
fdivrp
mov
xor
jecxz
dec
ret
add
cli
push
mov
and
adc
or
leave
mov
or
or
shl
ret
test
push
sbb
and
jb
xorb
pop
push
mov
into
mov
out
push
lock
repnz
inc
in
ret
jo
pushw
inc
sbb
rcrb
in
aaa
sbb
jo
pop
dec
jl
bound
cmp
cmp
dec
add
aad
les
iret
test
outsb
xlat
imul
push
adc
cmpsb
outsb
mov
mov
insb
adc
clc
mov
xchg
inc
dec
shrl
ret
and
xchg
pop
das
inc
jle
push
inc
fcmovnbe
xchg
dec
shr
sbb
mov
sbb
push
adc
rorb
test
pop
psubb
adc
xchg
adc
or
in
lods
jg
addb
cld
pop
je
rolb
pop
mov
out
mov
mov
jne
xor
xchg
mov
pop
insl
imul
dec
rcrb
or
pop
stc
aas
cmc
push
mov
mov
sub
pop
ljmp
push
mov
insl
cli
outsl
stos
inc
and
adc
imul
sbb
hlt
pop
data16
push
cli
pop
test
mov
scas
test
and
cltd
insb
sub
cmp
and
fisttpl
xlat
bound
test
xchg
test
mov
dec
xchg
ljmp
cli
lret
mov
stos
stos
sbb
or
cmpsb
dec
ret
jno
mov
or
add
sahf
push
loop
in
mov
xor
mov
sub
out
bswap
lea
sub
loope
add
dec
es
xbegin
ret
inc
cmp
inc
in
add
push
fwait
lret
dec
ja
fidivrs
ret
adc
pushf
and
sbbl
or
rcrl
mov
fdiv
cmp
in
cs
pop
pop
inc
arpl
outsb
pop
inc
lea
push
adc
fwait
pop
sbbl
movsb
or
adc
pop
int
sbb
outsb
mov
and
fwait
xor
mov
sbb
ret
mov
in
lods
push
xor
pop
ret
fidivrs
xchg
ljmp
jmp
cltd
insb
adc
sub
fcom
mov
pop
xchg
addl
nop
lret
adc
mov
sbb
fwait
mov
ds
xchg
nopl
or
adc
repz
mov
jns,pt
scas
in
in
mov
into
test
out
idivl
or
imull
fs
test
and
sub
mov
in
xor
ss
xor
cld
cmpsl
cwtl
orl
dec
or
sub
insl
jb
jbe
lock
lods
jo
pop
mov
ret
inc
push
xor
repz
movsb
jmp
mov
adc
clc
pop
sbb
dec
mov
push
push
mov
push
sbb
lods
mov
mov
ja
std
and
outsb
jo
dec
call
movsl
jns
test
repz
jmp
and
jb
push
mov
sub
mov
loope
into
cmp
fisubs
inc
aam
xchg
or
jb
movsb
mov
adc
movsl
pop
xchg
xor
js
aaa
ja
outsl
or
mov
jmp
mov
jg
iret
sbb
mov
repz
adc
mov
stc
sti
push
lret
das
sub
pop
das
add
pop
push
jecxz
fcomi
lds
xchg
push
icebp
sub
xor
or
and
pushf
adc
das
hlt
cltd
or
adc
inc
jno
jge
and
sub
aas
push
sbbl
dec
adc
or
jge
inc
lcall
mov
xor
mov
jp
fimuls
sbbl
fadd
in
rcrl
test
push
pop
xchg
enter
or
pop
jnp,pn
or
fucom
in
sub
jae
jge
push
stc
out
push
dec
and
mov
repz
jecxz
je
pop
mov
aas
pop
sbb
lcall
push
leave
rcll
jns
bound
mov
cmpsb
jns
into
inc
jge
pop
mov
pop
fwait
xor
icebp
push
dec
movsl
in
mov
mov
iret
cmc
mov
mov
pushf
insl
or
jb
mov
jo
testb
sbb
or
std
add
lods
lret
mov
mov
daa
je
pop
dec
paddusw
lods
push
cmp
dec
sbb
decb
adc
stc
fldt
aad
jb
push
push
mov
mov
add
mov
mov
lret
enter
arpl
sbbb
popa
mov
icebp
popl
dec
lds
lds
jo
rcll
je
dec
adc
div
xchg
fnsave
mov
xor
lods
loope
ficoml
stc
adc
sbb
pop
repnz
inc
jmp
mov
sub
lret
push
fidivl
sub
mov
adc
sbb
xor
out
lock
mov
cmpl
xor
pop
jle
mov
aaa
push
inc
loop
inc
or
dec
mov
or
or
sbb
mov
fs
lahf
nop
ret
js
mov
pop
bt
out
stos
xor
sti
into
sbb
cmc
or
in
sbb
scas
pop
mov
insl
negl
shl
sub
or
inc
pop
js
pop
jmp
movsl
inc
jmp
out
out
popa
pop
aas
pop
cld
test
xor
ds
inc
inc
pusha
les
jg
sbb
flds
sub
loope
lret
mov
mov
icebp
add
push
scas
cmp
lcall
jns
lret
sbb
call
shlb
nop
xor
mov
imul
jg
test
xchg
ljmp
dec
test
xchg
xchg
insl
push
out
cs
inc
sbb
xchg
pop
jnp
or
out
or
or
push
scas
inc
fistpl
test
enter
lret
push
aam
mov
push
jno
mov
imul
adc
movsb
and
cmp
imul
lods
push
cli
sahf
push
shll
inc
loope
add
dec
outsb
adc
test
and
int
movsl
pop
mov
or
mov
xchg
add
test
ficoms
sahf
das
and
gs
in
xchg
ja
or
adc
imul
test
sbb
pop
add
dec
stos
sbb
pop
es
jle
mov
push
fimuls
add
aad
xchg
mov
push
dec
cmp
sub
jb
pop
sub
ds
or
inc
inc
nop
icebp
in
fwait
int3
imul
mov
inc
push
cmp
push
imul
mov
adc
xlat
pop
dec
out
ja
fsubl
aam
andl
jb
dec
fbld
pop
imul
scas
push
sbb
std
ss
inc
or
xor
dec
pusha
test
mov
movsl
ss
inc
cmp
out
ds
or
test
cltd
xchg
jo
and
cmp
movsl
pusha
cmp
mov
push
fiaddl
lea
cmp
bound
mov
aad
sub
stc
sub
loope
aad
stos
andb
push
in
xlat
adc
jo
mov
std
push
xchg
fs
leave
xor
pusha
repz
imul
loopne
ljmp
and
fst
dec
xor
xchg
andl
shll
cli
int3
xor
jecxz
mov
cmp
loope
iret
call
cwtl
mov
insl
test
test
or
push
aam
daa
lods
fildl
xchg
je
out
jmp
data16
mov
mov
out
lods
movsb
lret
or
cmpl
cld
sub
add
dec
sub
lahf
xor
cmp
jp
gs
lods
jg
cmpl
sar
mov
mov
xorb
mov
and
xchg
cwtl
iret
inc
sti
arpl
sbb
jmp
imul
jne
xchg
and
in
mov
int3
mov
jno
pop
mulb
scas
xor
sahf
sbb
ds
dec
dec
adc
mov
iret
and
cs
adcb
push
cmc
inc
mov
or
jle
fprem
mov
stc
int
scas
rolb
mov
fsubrs
fimull
cmp
mov
shl
adc
insb
int
push
lret
inc
fcompl
push
push
daa
sub
pushf
sbb
nop
mov
cmp
mov
icebp
xor
mov
test
lds
mov
mov
aam
icebp
sar
gs
icebp
sub
or
jae
stc
cmp
jb
out
out
ret
test
mov
adc
sti
or
cmp
addl
fnstcw
fwait
and
test
rcrb
pop
lcall
mov
shlb
lds
cmp
mov
mov
testl
xchg
xchg
adc
call
jle
mov
jb
jge
lcall
sbb
add
repnz
mov
pop
int3
addl
cmc
test
aaa
push
mov
lock
nop
fstpl
ljmp
inc
xor
stc
inc
fs
mov
cmpsb
sti
out
xchg
add
mov
mov
jns
inc
cli
jne
cld
int
mov
outsl
hlt
imul
inc
iret
daa
sbb
mov
insl
lret
testb
adc
shll
mov
sbb
sub
cltd
gs
mov
push
loop
or
xlat
push
addr16
jo
or
pop
aad
out
jne
and
push
jge
xlat
ljmp
and
add
cmp
outsl
ss
aas
into
test
das
les
cmp
cmp
fistps
mov
repnz
adc
jle
xor
dec
dec
es
jl
xchg
int3
mov
sahf
aam
pushf
shll
pusha
lret
lret
into
rorl
pop
aas
fs
or
mov
data16
cs
add
lret
add
cmp
stc
mov
stc
scas
mov
adc
aam
fiaddl
jnp
daa
sbb
sub
adcb
sub
fnstenv
dec
imul
outsb
and
sbb
add
mov
sub
push
pop
add
inc
out
mov
jl
mov
test
ljmp
mov
xchg
jo
or
push
stos
xchg
and
inc
cld
inc
xchg
arpl
jge
sbb
outsl
mov
xchg
or
jp
dec
xchg
iret
pop
fdivrp
imul
mov
xchg
test
imul
sbb
repnz
fwait
mov
test
int3
sub
dec
mov
sbb
cwtl
mov
test
stos
cmpsb
lret
lods
cmp
scas
push
sti
mul
cmp
enter
mov
repnz
aad
push
aaa
leave
out
or
sbb
dec
dec
add
insl
jnp
mov
pushw
lret
jp
xchg
add
or
rorb
cmp
shrb
pop
xchg
cs
mov
movsb
and
imul
or
pop
mov
and
ja
mov
icebp
test
sbb
adc
leave
mov
push
mov
inc
in
int3
xor
pop
fcoms
testb
outsl
pop
inc
xchg
push
sbb
dec
cmp
cld
push
repnz
stos
mov
jp
xor
in
mov
mov
and
idivb
icebp
push
repnz
clc
iret
loope
fdivr
xchg
dec
adc
add
adc
mov
xchg
sti
pop
xchg
scas
dec
loopne
mov
push
rorb
neg
dec
rcll
mov
scas
stc
sbb
test
fstp
movsb
or
xchg
sub
fbld
sub
outsl
aad
fidivrl
xorb
pop
stos
cmp
adc
jg
mov
cmp
sarl
aad
fidivs
fmull
fsub
mov
mov
movsl
xchg
repz
fcomip
fcoms
repnz
mov
jmp
ss
data16
sub
inc
icebp
rcrl
pop
adc
ss
jno
cmp
fsubr
aad
mov
data16
mov
xlat
cmp
leave
iret
hlt
xor
jb
sub
mov
cmpsb
cmp
xchg
push
dec
pop
sub
mov
nop
mov
je
sub
inc
push
loope
or
mov
push
leave
jno
mov
pop
lds
ljmp
imull
sbb
jecxz
xchg
xchg
xchg
mov
pushf
dec
fs
pop
xchg
xchg
and
rcrl
subl
js
and
mov
out
xor
stos
repnz
pop
push
xor
jp
pop
push
nop
in
addr16
or
xor
xchg
sbb
stc
add
lret
fistl
jmp
push
jmp
inc
inc
fwait
mov
daa
and
cmp
das
push
push
js
jno
and
jns
insb
pop
out
outsb
jl
jmp
pop
enter
and
ret
sbb
into
inc
sbb
aam
popl
mov
adcb
sub
ret
mov
notb
jmp
jo
mov
jp
or
dec
in
push
out
shl
jbe
inc
mov
xor
loop
iret
stc
mov
xor
and
movsl
clc
add
xchg
pushf
cmp
push
and
dec
nop
lea
aas
lods
ficoml
jo
cmp
adc
sub
lods
or
std
ret
add
call
leave
int
mov
mov
mov
repnz
jno
lea
adc
mov
push
xor
xchg
mov
inc
pop
mov
mov
bound
int3
sub
xor
pop
fnstsw
mov
mov
fnstcw
adc
mov
push
fstpt
scas
xchg
insb
sub
addr16
addb
dec
sbb
xor
inc
push
scas
pop
dec
out
cmp
mov
ss
scas
dec
into
pop
cmp
sbb
xchg
movsb
enter
push
sarl
adc
insb
sbb
push
jecxz
mov
mov
mov
shll
lods
jecxz
push
push
fcoml
les
xlat
das
push
cmp
mov
ss
xor
inc
mov
mov
int
xchg
xchg
ja
cmpsb
das
dec
xor
mov
popa
std
out
cmp
mov
pop
hlt
lea
push
leave
jbe
outsb
rcrb
adc
or
adc
lock
jae
xchg
fstpl
dec
pop
add
into
adc
or
cmp
out
pop
out
and
xor
push
xchg
mov
fs
movsb
mov
inc
jb
jmp
out
push
mov
push
mov
cmpsb
jbe
xchg
mov
mov
mov
or
repz
cltd
fcoms
push
cmp
test
loopne
or
dec
sbb
mov
dec
je
dec
inc
jge
jnp
in
mov
leave
repnz
and
jp
fldl
scas
fists
xor
mov
cmc
pop
aas
adc
test
dec
sbb
push
lret
hlt
scas
stc
xor
out
cmp
js
sub
dec
jmp
fidivrl
mov
mov
inc
pop
loopne
mov
fwait
sbb
mov
lock
leave
xchg
inc
mov
jle
xchg
xor
xor
pusha
jl
andl
adc
push
mov
enter
pusha
clc
mov
cwtl
decb
mov
les
hlt
pop
insb
cltd
int
rcrb
inc
aaa
dec
mov
leave
pop
add
lods
filds
mov
and
ja
xor
fwait
push
clc
out
iret
mov
lock
out
arpl
inc
add
sub
lods
cmp
cs
loope
or
mov
pop
or
movsb
into
je
stos
jle
test
ds
add
pop
jb
fdivrl
lea
sbb
and
addr16
inc
adc
inc
shlb
rol
iret
adc
out
push
enter
inc
loope
pusha
dec
std
sub
mov
and
cmp
jo
xchg
aaa
shl
mov
in
sub
mov
data16
mov
push
pop
mul
outsb
push
or
fistpll
addr16
jecxz
add
mov
mov
jl
lea
and
adc
ss
fldl
push
rol
dec
shlb
mov
dec
or
in
call
enter
add
lods
ljmp
add
mov
add
inc
mov
pop
jmp
add
fwait
das
jnp
outsb
xchg
pop
dec
nop
cmpsb
fs
out
add
insb
push
pop
lods
add
jg
adc
cs
mov
xchg
addr16
adc
mov
pop
add
xchg
dec
ror
xchg
pop
xor
or
rep
xor
add
cltd
inc
int
movsb
sbb
js
shll
mov
mov
rolb
pop
dec
test
jb
sahf
mov
outsb
and
push
and
push
xchg
cmp
mov
je
in
iret
cmp
jne
lds
jns
repnz
pop
movb
lea
les
pop
jmp
pop
cmp
test
xor
xlat
aaa
pop
loopne
imul
bound
mov
inc
in
pop
lods
lea
insb
js
xor
sub
or
lret
jge
pop
repnz
pop
sbb
les
jnp
scas
jne
add
xor
imul
dec
shrb
test
je
aas
jb
sbb
jmp
or
push
mov
mov
cld
loop
sub
add
setb
dec
in
mov
cs
ss
mov
fisttpl
add
push
je
jmp
sub
jg
sti
add
add
lahf
std
test
cmc
je
lahf
fs
scas
cs
push
cli
loopne
hlt
add
imul
daa
push
push
pop
cmpl
ljmp
xchg
cld
scas
sbb
xorl
push
lret
mov
cwtl
push
fldl
push
pop
inc
push
mov
mov
push
inc
pop
jmp
lret
mov
std
mov
ljmp
xchg
aam
push
repz
lcall
dec
xchg
imul
mov
dec
data16
mov
and
jb
jns
mov
add
xchg
into
push
sbb
xchg
and
repnz
xor
and
sub
gs
jns
lret
nop
arpl
dec
js
bound
mov
mov
and
das
cmpb
aaa
loope
sbb
ret
movsb
cld
cld
cmc
rclb
flds
dec
lods
jno
cld
sbb
and
sbbb
mov
xor
stc
jg
call
xor
add
mov
faddl
repz
sbbb
or
mov
mov
xchg
cmp
xchg
movsb
adc
cmc
stos
pop
std
les
push
pop
int
mov
sbb
out
cltd
pop
cmpsl
and
stos
arpl
xchg
xchg
aas
mov
or
inc
imul
ss
mov
jl
cld
ret
repnz
outsl
popf
dec
inc
inc
shl
inc
cmpsb
test
pusha
mov
lret
mov
pop
fs
pop
jle
stc
and
mov
cs
and
imulb
inc
jo
sarl
aaa
jmp
push
jmp
mov
inc
data16
enter
adc
inc
adc
mov
adc
stos
addr16
pop
sbb
inc
inc
pop
mov
aaa
mov
jp
sarl
mov
mov
lods
mov
add
test
int
pop
mov
xor
shlb
fsts
repnz
and
xchg
and
ds
push
sub
lods
jb
mov
insl
addr16
in
not
pushf
dec
daa
push
and
mov
xchg
pop
outsl
cmp
mov
push
jb
mov
dec
adc
adc
loop
or
loopne
aad
and
std
add
or
xchg
or
jb
jb
lcall
mov
jnp
int
adc
mov
dec
pop
in
fadd
inc
jb
and
cmp
pop
sbb
test
fistpll
inc
dec
sub
lock
out
mov
pop
inc
sbb
jne
pop
pop
gs
jo
rcll
push
or
inc
push
scas
fisubrs
xchg
xchg
jb
jno
cwtl
jnp
xchg
add
mov
loopne
xchg
push
push
addb
inc
sub
lea
aad
fwait
sub
popf
out
mov
push
xor
push
xor
mov
pop
test
and
add
mov
lock
fdivl
xor
adc
ds
inc
inc
jb
sub
lea
test
lahf
out
sahf
sarl
sarb
cltd
gs
add
les
andb
ret
dec
data16
dec
rcl
lods
sahf
imulb
xchg
js
mov
mov
aaa
ja
push
movnti
call
arpl
sbb
xchg
cmp
xor
es
inc
inc
jmp
lds
aam
cs
in
xor
call
lahf
pop
mov
shll
orb
hlt
cli
js
jns
add
aas
inc
popf
sub
pop
mov
mov
mull
mov
bound
scas
or
xor
cmc
adc
cmp
xchg
mov
shrb
or
pop
sub
dec
mov
and
loope
bound
leave
jno
cmp
push
inc
ret
cwtl
inc
int
scas
movsl
ss
iret
lea
rcrl
lds
xchg
int3
jg
jno
scas
mov
inc
adc
mov
dec
mov
pop
roll
mov
cs
jl
out
movsb
pusha
lret
mov
fsubl
lea
push
es
sbb
roll
push
outsb
clc
lock
fstpl
and
wrmsr
jo
pushf
sbb
arpl
mov
into
lret
in
inc
outsl
cltd
pop
pop
sarl
repz
cld
lcall
les
sahf
sbb
mov
ds
fdivrl
ret
das
lret
cld
push
fs
or
pop
xchg
arpl
dec
stos
ljmp
push
addr16
push
popa
js
pusha
xlat
aad
and
adc
pushf
js
sub
add
aas
cltd
es
out
mov
iret
sti
add
push
push
jmp
outsb
mov
sbb
lret
testl
pmaxub
xchg
adc
dec
dec
outsb
mov
sub
lea
mov
lcall
outsb
addb
push
test
addr16
cmp
fsubr
push
sbb
sahf
jmp
ja
or
xor
outsb
js
mov
js
in
pop
fnstcw
xchg
stos
ret
pop
push
jnp
mov
adc
out
add
lahf
pushf
xchg
dec
lods
inc
push
sti
pop
gs
imul
or
pop
xor
stc
out
push
insb
push
adc
sub
cmp
popf
xorb
inc
xchg
repz
popf
loope
mov
jg
and
mov
inc
mov
jecxz
dec
data16
pop
sub
leave
inc
jmp
clc
push
lret
adc
sub
inc
cmp
fwait
clc
inc
and
sar
push
dec
ret
fisttpl
xor
jno
test
bound
imul
jbe
inc
in
loope
cld
pop
movsl
jnp
in
cmpsb
and
xchg
ret
or
lahf
lahf
lock
inc
xor
jno
addr16
push
mov
rcrb
into
add
and
add
jb
pop
hlt
cmc
push
test
pop
icebp
mov
test
jb
push
cmp
cmpsl
mov
adc
ret
lcall
push
cltd
mov
sbb
or
mov
sub
test
filds
and
sahf
repz
sarl
sbb
jae
push
into
mov
sub
fldt
push
andb
pop
ss
pop
adc
loope
std
adc
pop
dec
or
xorb
orl
bound
cmp
and
into
cmpsb
jg
sub
out
rcr
cmp
pop
xchg
hlt
loopew
lods
adc
sahf
inc
adc
add
mov
mov
push
std
fcmovu
sbb
xor
popa
pop
shlb
push
cmp
cmpsl
mov
sbb
pop
js
je
jo
jecxz
or
ds
dec
push
adc
push
fldt
dec
icebp
mov
push
sbb
pop
outsb
mov
cmc
call
stos
mov
and
mov
pop
mov
jns
pop
xlat
out
or
aad
push
out
out
das
xchg
and
cs
inc
clc
dec
jmp
dec
out
mov
outsb
lahf
imul
movsl
cmp
adcl
push
mov
sub
xchg
dec
lock
mov
mov
sbb
add
mov
mov
dec
int
inc
stos
mov
pop
dec
and
pop
dec
into
adc
and
jmp
call
mov
adc
cmp
mov
aaa
mov
fld
dec
jg
mov
fsubr
pop
sbbb
adc
gs
repnz
bound
pop
pop
in
or
mov
je
test
lods
jl
hlt
cmp
fldl
dec
dec
cmpsb
loop
int
and
push
adc
cmc
ret
push
inc
jne
in
sbb
dec
aam
mov
fldl
mov
xchg
cmc
sahf
jbe
adc
cmp
mov
mov
add
push
lods
xlat
scas
mov
das
xchg
scas
mulb
outsb
jns
cli
and
push
pop
jns
movl
out
in
cs
xchg
mov
in
ds
pop
mov
jge
dec
mov
leave
add
xchg
xchg
mov
mov
out
cs
ret
adc
and
inc
jecxz
dec
dec
in
inc
lret
and
outsb
xlat
or
pop
mov
mov
icebp
dec
pop
test
es
pop
push
mov
imul
popa
xchg
pop
int
lret
push
jb
jns
xchg
xchg
xchg
scas
xchg
cmp
sbb
cwtl
push
cmc
cli
or
ds
jle
sbb
jge
or
or
or
sbb
push
int
cmp
rolb
pop
add
pop
insb
aaa
loopne
sub
mov
es
stos
orl
pop
les
mov
xchg
sahf
test
test
sarb
mov
mov
cmp
stos
inc
dec
sub
adc
lcall
cmp
sub
repz
xchg
mov
hlt
push
roll
jge
push
leave
mov
inc
push
loope
inc
cmp
jbe
and
push
imul
pop
ds
mov
push
out
cmpsb
mov
pop
mov
ds
enter
in
rolb
cmp
pop
loope
std
lcall
xchg
pop
pop
inc
cli
test
lds
in
mov
mov
push
xchg
add
stos
je
push
pop
adc
lea
sbb
xor
sbb
mov
fprem1
push
sbb
jb
pop
dec
or
pushf
push
loopne
dec
push
aas
and
dec
dec
fsts
out
fs
add
stos
repnz
cwtl
fldcw
int3
push
mov
in
push
mov
or
xorl
out
push
xchg
jg
cltd
mov
and
jne
movsb
xchg
xchg
lea
xchg
insl
mov
cmpsb
push
pop
add
loop
lcall
sbb
jno
cli
mov
loop
hlt
aaa
in
inc
mov
adc
out
lock
lret
xor
orps
iret
xorb
or
xchg
jo
lods
push
pop
out
and
xor
cwtl
sub
ja
iret
dec
xor
outsb
rolb
testb
and
ds
sub
adc
and
jmp
insl
sbbl
cmp
bound
sub
int3
mov
loopne
pop
xchg
pop
imul
lret
pop
dec
jae
ret
jb
jnp
in
out
jno
scas
cmp
popf
mov
movsb
push
mov
jbe
push
icebp
dec
adc
cwtl
push
inc
lock
jg
xchg
ret
cmp
sub
lahf
hlt
movd
add
dec
mov
inc
mov
and
stos
push
mov
xor
sarl
cmp
mov
insb
les
inc
jno
dec
jno
add
aas
mov
in
movsl
pop
fistpll
jns
fidivrs
push
pushf
push
inc
and
dec
shl
repz
mov
mov
notb
mov
jne
pmulhw
mov
jg
sbb
jo
add
daa
js
mov
xchg
ljmp
test
add
ja
sti
or
outsl
xchg
dec
jmp
in
and
xor
imul
rcll
mov
push
ds
dec
pop
es
lods
cwtl
mov
add
push
add
repnz
fs
cmpsl
insb
jmp
adc
jns
aaa
jb
mov
int3
test
out
sbb
or
cmpsl
dec
pop
adc
popa
pop
cmpsb
cmc
orl
mov
nop
lock
addr16
pop
sbb
push
jae
adc
push
std
aad
into
mov
pop
ja
jo
dec
xchg
push
in
call
add
icebp
out
aam
xchg
adc
pop
push
push
loop
xchg
jmp
xchg
aam
dec
sarl
cltd
push
mov
mov
sbb
cmpl
out
sbb
and
movsl
sbbb
cld
notb
dec
popa
sub
xchg
xchg
lret
push
push
pushf
int3
inc
xor
inc
sbb
inc
push
test
addl
iret
pushf
aaa
lret
into
inc
dec
xchg
inc
ret
sbb
xchg
pop
clc
fcom
lea
cld
dec
xor
adc
dec
xorb
mov
adc
lds
adc
mov
sbb
cld
cmp
sar
mov
gs
dec
pop
negl
inc
arpl
push
rorl
xchg
cmovg
popf
jnp
lahf
repz
dec
sbb
out
mov
hlt
outsl
in
rcl
and
mov
into
jmp
in
sbb
out
fucomp
push
popl
adc
dec
xor
jnp
dec
mov
addb
arpl
mov
pop
jnp
int3
xor
neg
and
and
mov
cmp
orl
repz
adc
pop
cmp
sub
xor
rorl
cmpsl
shlb
je
cmpsl
pop
jns
push
mov
pop
js
dec
lahf
push
int
cmpb
mov
mov
cmp
mov
sub
sbb
sbb
adc
pop
or
mov
cmp
pusha
xchg
and
stos
sbb
cmc
testb
mulb
mov
movsb
stc
pusha
xor
push
jmp
sahf
mov
fisttpl
hlt
js
lods
mov
ljmp
cmpsb
xor
lcall
jmp
xor
adc
or
add
rorl
stos
xor
jmp
xor
pop
in
push
loope
push
fisttpll
in
lret
fcmovnb
mov
sub
in
cmp
iret
imul
mov
sub
mov
aam
cmpsb
sub
add
inc
popf
enter
mov
jmp
in
push
adc
cmp
lret
sub
rorb
jmp
xchg
pop
pusha
enter
lret
stos
jae
lret
jle
fdivrl
cmp
sahf
daa
stc
xchg
push
ret
mov
pop
add
fistl
jl
pop
pop
leave
mov
add
repnz
xor
pop
test
ss
push
loopne
jb
dec
jb
pop
sbb
insb
adc
push
loop
lahf
mov
mov
cli
sarb
and
xchg
push
mov
xor
or
cmp
nop
into
xchg
out
push
in
mov
add
sbb
mov
add
addr16
sbb
mov
aas
out
dec
inc
xlat
push
jb
pop
aam
inc
ljmp
shrb
ror
lock
das
and
mov
in
rcrb
call
popa
pop
ss
push
sbb
jno
sbb
test
js
cmpsb
mov
fimull
push
in
xchg
inc
mov
or
out
pop
mov
enter
or
cwtl
hlt
out
add
jp
and
js
in
dec
inc
icebp
das
inc
pop
pop
dec
in
push
push
jecxz
mov
xchg
arpl
fcomi
cltd
js
and
xor
insl
ja
jg
test
sub
les
cwtl
jg
jnp
fmul
ds
mov
fwait
jb
addr16
cmp
jo
xor
mov
into
jns
push
dec
mov
sbb
pop
mov
sbb
xchg
inc
xchg
je
mov
xchg
mov
outsl
xchg
ss
pusha
and
jl
mov
out
add
push
mov
xchg
cmpsl
popf
out
mov
out
fistpll
adc
daa
repnz
es
cs
add
add
jmp
fsubrs
fcom
cmp
xor
inc
push
je
out
add
cld
mov
pop
imul
pusha
push
imul
pop
xchg
dec
leave
mov
mov
jb
inc
push
outsb
sahf
push
sub
addr16
push
pop
fsubrl
es
loopne
addr16
sub
mov
dec
movsb
outsb
sub
xchg
imul
aam
adc
aad
mov
sbb
cltd
int3
xor
or
cld
ja
dec
jne
mov
je
in
cli
fmull
daa
cmp
xchg
stc
sbb
jl
mov
movsb
mov
cld
clc
cs
jge
push
cmp
les
jo
mov
jmp
loope
aad
repz
dec
xchg
leave
mov
movsb
addr16
in
bswap
inc
sub
jne
mul
mov
xchg
lcall
xlat
sbb
aam
test
or
enter
mov
movsl
repnz
push
jmp
in
mov
scas
xchg
pop
cmp
pop
bound
push
psubsb
cmp
sti
xchg
mov
sbb
jmp
inc
stos
lahf
ds
ffreep
aaa
pop
decl
push
or
insb
test
sub
mov
into
xor
fisttpl
jg
xchg
call
inc
hlt
pop
xor
out
into
ret
sub
xchg
dec
xor
outsb
hlt
or
les
add
rol
add
das
stc
in
ds
push
sub
arpl
ss
jp
rcrl
sbb
hlt
mov
fwait
push
mov
ror
mov
lock
or
lahf
in
dec
and
stos
mov
cmpb
insl
ss
cwtl
shl
inc
jp
cld
push
cltd
addr16
scas
mov
and
andl
xchg
iret
repnz
fidivrl
scas
pop
mov
das
int
sarb
cmpsl
pop
sbb
mov
add
shll
cs
pop
mov
dec
push
sub
push
push
push
cmpl
cmp
testb
push
out
addr16
repz
xor
dec
mov
movsl
lret
adcl
in
pop
je
insb
pop
fldenv
popa
dec
mov
arpl
clc
xchg
jbe
mov
jb
addl
cltd
aas
and
mov
daa
out
fisubl
sub
add
mov
sub
rorb
inc
adc
or
pop
pop
scas
sub
mov
test
jnp
jmp
mov
push
add
iret
addr16
xchg
das
push
in
inc
lret
ror
mov
and
push
aam
ret
sub
mov
loop
shll
outsb
iretw
add
pop
gs
and
popa
xor
push
imul
mov
cli
xor
dec
lods
xor
jge
mov
imul
int
out
inc
jnp
aad
daa
outsb
insl
xchg
ljmp
mov
inc
jb
push
push
loop
adc
push
xorb
repnz
add
sbb
pop
xor
enter
dec
ds
inc
test
mov
sbb
gs
mov
push
jb
fidivrl
adc
cwtl
inc
mov
dec
add
sarl
stos
orl
inc
cmp
jo
mov
jnp
mov
out
loop
lret
dec
rcrb
cmc
mov
das
loope
mov
inc
xchg
xchg
movsl
mov
pop
insb
jle
outsl
pop
xchg
mov
inc
rcll
sti
fisttps
in
inc
and
mov
jecxz
push
mov
enter
adc
scas
jb
adc
daa
incb
mov
notb
dec
inc
mov
cmc
mov
add
mov
mov
lret
out
jne
fisttps
cmp
in
fucomi
fstl
sub
mov
mov
mov
mov
negl
fldt
dec
sbb
cli
js
dec
arpl
shlb
inc
fstl
xchg
mov
aaa
sub
not
lcall
pop
out
jl
cmp
mov
jp
es
sbb
and
dec
xor
xor
mov
dec
cli
sti
into
test
in
ds
jae
mov
and
filds
dec
mov
xchg
gs
push
cld
fcmovne
pop
dec
out
test
js
jmp
mov
repz
xor
cld
mov
into
outsb
cmp
add
or
mov
push
jg
pop
leave
ror
cmc
mov
arpl
imul
scas
aam
outsl
inc
imul
add
cmp
mov
xchg
jmp
pop
fildll
test
push
add
mov
inc
adcb
add
rol
and
sbb
loope
and
je
dec
dec
movsb
loope
cmp
enter
aaa
ret
inc
and
out
pop
ds
ss
nop
lods
mov
imul
rcr
xor
push
or
fsubrl
aad
inc
inc
push
mov
lds
adcl
lret
push
iret
hlt
push
mov
or
fdivrs
loop
and
and
mov
lock
out
movsb
sbb
nop
adc
cld
jo
sarb
inc
mov
imul
jl
xchg
push
int3
xchg
iret
xor
adc
fs
lret
inc
mov
cmp
or
inc
xchg
mov
pop
sarl
adc
jp
mov
dec
int3
adc
outsb
mov
ljmp
and
jmp
jnp
je
popa
cmc
mov
je
call
sahf
icebp
sbb
test
rolb
imul
icebp
dec
add
xchg
inc
mov
imul
jnp
test
lods
outsb
rolb
cmp
fs
loope
lods
shrb
clc
hlt
stc
test
xor
push
adc
mov
aaa
test
mov
iret
sahf
push
cmp
sbb
lret
cmp
xor
pop
push
and
adc
leave
lds
add
and
imul
divl
cwtl
loop
xor
mov
jl
or
xor
pop
dec
lcall
or
cmp
push
push
inc
in
lret
mov
flds
rcrb
fs
jmp
jnp
cwtl
pusha
cmp
xor
jmp
xor
mov
loop
mov
scas
ljmp
dec
mov
pop
dec
xor
lea
les
pop
repz
inc
icebp
push
push
mulb
loop
push
adc
xchg
sbb
or
mov
mov
in
icebp
and
adc
push
push
push
mov
jle
outsb
loopne
mov
clc
mov
or
fmull
mov
sbb
and
pop
mov
push
sub
inc
push
xchg
xor
fcoml
mov
imul
ljmp
orb
not
lahf
int
mov
dec
or
pop
test
frstor
jnp
call
xor
xor
movsl
mov
insb
out
dec
aad
outsl
jo
aam
in
jg
mov
and
sbb
sbb
sti
in
sbb
inc
fwait
outsb
iret
push
jae
mov
jp
in
add
repnz
not
jp
ja
stc
idiv
clc
loope
push
inc
and
bound
cmp
mov
pop
movaps
call
fcmovb
mulb
sahf
js
xor
pusha
xor
mov
sub
cwtl
sub
xchg
xchg
mov
pop
xchg
aas
mov
outsb
cs
sbb
test
push
xchg
insl
adcb
test
xor
in
pop
push
icebp
iret
pop
pop
out
cmp
cwtl
ds
cmpsb
bound
or
in
decb
xchg
pushf
lea
pop
fs
push
jmp
mov
jo
mov
pop
push
xchg
mov
mov
mov
jmp
pop
loop
insb
int3
xchg
xor
scas
xor
inc
sar
pop
in
mov
aam
cmpb
inc
cmp
pop
cmc
in
fistpl
xchg
imul
mov
cmpsb
repnz
repz
stos
into
jbe
inc
leave
xor
jecxz
or
push
cld
pop
ja
addl
pop
loopne
cs
mov
dec
std
push
or
mov
movsl
dec
jg
sub
hlt
loopne
push
mov
pop
test
jl
mov
push
xchg
xor
arpl
inc
out
mov
adc
xchg
xlat
adc
dec
clc
mov
sbb
adc
xor
sahf
add
cmpsl
xchg
xchg
pusha
jl
add
fdivrp
test
bndstx
dec
neg
xchg
inc
cmp
lcall
push
mov
mov
fiadds
shlb
addl
jecxz
lods
repz
gs
add
mov
in
sbb
scas
cltd
repnz
jmp
inc
movsl
push
lock
nop
sub
push
mov
movsb
xchg
and
and
icebp
lahf
mov
shll
dec
fdivr
das
push
mov
test
decl
and
mov
cmp
lcall
jecxz
push
clc
leave
call
mov
orl
xlat
loope
movsl
xor
jo
inc
mov
js
test
fimull
push
stc
int
mov
or
call
push
ret
sbb
stos
and
mov
xor
push
stc
stos
xor
test
xor
lret
and
fwait
jl
shll
fbstp
and
movsl
cwtl
cmc
test
dec
mov
js
fisubs
cmp
xchg
aaa
lret
into
adc
in
push
iret
push
cmpsb
sub
int
xor
enter
pop
mov
or
js
stos
daa
fidivrs
pushf
lock
push
cli
pop
dec
das
mov
cmp
cltd
rclb
sahf
xor
mov
or
in
sbb
dec
sarb
sbb
adc
cmpsb
movsl
pop
cmp
daa
push
jmp
inc
leave
mov
mov
stos
jg
xchg
test
adc
jbe
push
cmp
and
sub
dec
mov
mov
iret
push
jecxz
test
or
mov
mov
jecxz
mov
dec
out
inc
sbb
or
jmp
data16
dec
data16
shrl
cmp
dec
filds
out
fs
movsb
mov
lock
popa
ss
pop
add
jmp
push
and
sbbl
lret
push
jno
and
setno
push
mov
cli
cmp
dec
repz
adc
pop
nop
dec
es
jnp
xor
sub
cmp
test
push
or
jb
jno
roll
in
xchg
inc
pop
add
cvtps2pi
iret
addr16
aam
mov
cmp
cmp
imul
mov
and
ret
movsl
jl
xchg
push
xchg
and
jbe
ror
movsb
push
in
inc
or
adc
adc
sbb
mov
nop
ss
stos
insl
pop
xlat
popf
xchg
push
or
pop
sidtl
xor
jne
sub
scas
and
mov
push
add
out
ja
inc
int3
iret
call
rorb
cli
add
imul
push
loop
idiv
aaa
leave
push
popa
jbe
pushl
adc
test
ds
insl
mov
push
xchg
mov
divb
scas
push
lock
push
add
lcall
jns
xchg
push
repz
cmp
xchg
add
cmp
push
stos
cmp
popa
push
jecxz
and
orb
loope
and
shl
mov
test
lret
sti
pushw
xor
gs
pop
mov
hlt
xorl
out
sbb
mov
sbb
gs
jg
out
scas
pop
push
test
das
pop
xchg
sub
dec
test
lock
shrb
fcmovnb
push
int
jns
lods
arpl
out
jbe
inc
push
mov
jo
xchg
dec
adc
cmp
mov
mov
mov
das
add
fwait
ljmp
pop
shrb
aas
flds
negb
scas
cmp
jl
ljmp
stos
mov
jo
scas
adc
in
mov
xor
pop
dec
insl
mov
in
sbb
push
gs
imul
mov
or
es
jno
dec
mov
sti
push
or
fninit
in
mov
push
outsb
mov
mov
arpl
loope
and
jbe
pop
stos
inc
lds
adc
mov
fistps
in
dec
lock
jmp
mov
mov
add
notb
jne
daa
sub
fistps
lahf
mov
mov
adc
sbb
sbb
lret
adc
xchg
mov
xchg
aam
rol
arpl
subl
movswl
sarb
cmp
into
shl
scas
inc
jne
or
lcall
ffreep
xor
jbe
and
aaa
adc
xor
sub
mov
dec
sub
lret
inc
sahf
jle
mov
xchg
add
nop
stc
mov
in
inc
cmpsb
test
xor
sub
fcos
pop
and
dec
cmc
mov
rorb
rcrb
hlt
je
movsl
icebp
lods
in
push
nop
pop
sub
adc
mov
adc
testl
cmp
into
out
es
cmp
inc
mov
sub
pop
push
aad
sbb
mov
adc
push
push
fimull
roll
stc
andb
mov
ror
mov
inc
fisubl
repnz
arpl
out
mov
push
mov
roll
aaa
and
jecxz
cmp
cmp
or
jge
pop
pop
mov
dec
jnp
lock
xchg
rcrl
imul
dec
movsl
aaa
mov
jnp
loope
dec
sbb
sub
sub
adc
and
or
sarl
jbe
add
loop
sbb
call
psrad
mov
add
stos
call
cmpsb
fstp
lock
sbb
xor
xchg
aas
push
movsb
stos
xor
insl
daa
mov
sti
cmc
cmp
adc
aaa
ja
pop
xor
popf
es
fildl
scas
mov
fsubrl
mov
pop
mov
mov
push
pop
adc
lret
xchg
jp
mov
cltd
stc
push
jl
aam
cmp
cmp
call
sub
call
and
ret
cld
mov
imul
repz
mov
mov
repnz
popa
cmpsb
ret
push
jno
stos
add
xor
nop
sbb
add
mov
test
cmp
scas
rorl
lods
out
inc
xchg
inc
into
pcmpgtb
or
and
int3
jp
loope
outsl
movb
push
jo
mov
scas
data16
cltd
fildl
or
iret
xor
cmp
sahf
out
jno
push
repz
mov
imul
jno
adc
lds
sbb
dec
sbb
imul
les
jl
add
fistpll
inc
bound
pop
fldenv
fwait
mov
adc
pop
inc
aad
int3
cli
mov
inc
xor
mov
cs
clc
dec
ja
addr16
or
add
mov
call
cmp
sub
mov
push
xchg
push
mov
adc
addr16
ficomps
out
subb
orl
insl
mov
sbb
inc
pop
shrl
and
pop
jae
sahf
inc
dec
pop
xchg
cmp
push
ds
jle
and
inc
mov
jmp
fst
cltd
inc
jge
loope
or
mov
xchg
or
es
mov
or
pop
shrb
in
or
cmp
es
test
sti
inc
stc
cmc
fxch
sub
mov
sar
cmpsl
cmp
adc
and
and
rclb
leave
cmp
pushf
push
adc
sbb
add
sahf
addr16
test
test
popf
sbb
pop
jo
lcall
shl
dec
dec
cmpsl
test
mov
imul
add
sbb
andb
and
mov
out
mov
mov
aad
adc
mov
jb
pop
test
jae
push
call
push
fisttpll
pop
mov
lcall
jns
lahf
mov
pop
ret
imul
push
sbb
xor
movsl
shlb
insl
mov
and
rcrl
pop
pop
std
popa
push
jae
mov
into
mov
leave
jnp
scas
sub
rcr
js
jmp
idivl
sbb
cltd
mov
adc
jg
and
scas
push
and
xchg
in
push
or
imul
push
dec
aam
fwait
into
xor
dec
jbe
mov
and
and
test
pushf
xchg
dec
pop
jno
xchg
and
in
cld
or
pop
testl
push
lock
cld
in
jecxz
sub
push
cmp
rcr
jae
sbb
jecxz
and
dec
xchg
test
inc
mov
xor
imul
xchg
and
std
cmpsb
aam
adc
popf
rolb
mov
repnz
mov
filds
and
adc
xor
sub
or
mov
jbe
pop
adc
add
xchg
addr16
das
add
jns
mov
idivb
aaa
stos
jmp
and
cmpb
mov
xor
xor
sti
jb
dec
jae
aad
iret
fdivrs
push
leave
adc
in
int3
or
push
repnz
mov
shl
jbe
popa
loope
and
mov
mov
xchg
das
mov
pop
stos
data16
fmuls
xchg
xor
lret
lods
or
sub
std
pop
cmp
sub
addl
movnti
jo
pop
inc
dec
into
xor
and
into
mov
xor
shlb
xor
sbb
push
leave
mov
in
decb
cmpsb
insl
leave
scas
mov
aaa
jb
stos
ljmp
bound
pop
adc
sub
push
rolb
orl
or
fists
pushf
pop
test
ret
das
in
push
adc
pop
add
enter
out
mov
dec
or
inc
pushf
jns
xlat
hlt
mov
aas
out
pop
mov
das
les
jne
ret
xor
inc
in
loopne
pop
sub
pusha
sub
or
ss
xchg
pop
pop
daa
adc
sbb
jmp
lret
lcall
lock
jg
or
daa
mov
filds
xchg
xchg
push
cli
pop
cmp
into
inc
sub
jnp
xlat
jge
arpl
sub
mov
rorb
xchg
out
aad
mov
subb
loop
pop
insl
push
xor
jnp
repnz
mov
lds
loope
int3
jno
mov
sbb
shlw
fisubl
iret
fcom
and
loopne
lock
imul
shrb
repnz
in
pop
daa
ret
out
in
sub
dec
out
jg
mov
mov
cmp
test
adc
rcrb
das
push
and
out
mov
xchg
sub
sub
mov
pop
push
sub
cli
mov
es
mov
insl
outsl
subb
std
xchg
test
aad
push
in
or
push
dec
lock
pop
cmp
adc
js
xchg
fistl
out
gs
movsw
je
cmp
inc
pop
inc
mov
outsb
iret
mov
mov
push
xlat
gs
jnp
data16
pop
pop
js
fldcw
clc
adc
xor
mov
xchg
cmp
push
jg
loop
jmp
push
and
cmp
dec
pop
inc
roll
cmpl
fisubrs
add
in
dec
xchg
inc
add
inc
loop
dec
push
int3
stc
jb
fldenv
enter
mov
cmpl
nop
ja
and
sbb
popa
inc
add
xchg
inc
imul
cmp
cmpl
pop
sbb
mov
jg
mov
adc
les
lahf
jnp
fiaddl
scas
dec
add
cltd
js
das
mov
aad
arpl
sbb
jl
getsec
adc
sub
lea
push
sbb
int
cmp
repz
std
movsb
aam
and
or
jp
insl
cmpsl
roll
loop
cmpsb
test
sub
add
shrl
pop
roll
pop
mov
movsb
add
pop
call
nop
loopne
push
push
pop
xchg
mov
and
xchg
cmc
cmp
sbb
cwtl
inc
add
pop
fsubrp
les
imul
call
mov
mov
in
mov
cmc
jnp
jecxz
mov
gs
adc
fisttpl
mov
movsb
pop
mov
jnp
adc
cmp
sub
dec
lock
ret
dec
add
movsl
dec
ja
out
pop
clc
aad
sub
adc
cmc
push
mov
jns
pop
mov
sub
mov
test
add
xor
and
mov
les
inc
cmc
and
pop
sub
xlat
stos
mov
sub
stos
xor
data16
jne
jmp
sbb
mov
sbb
adc
jge
icebp
insb
inc
pop
cld
aam
scas
mov
ja
jns
out
icebp
jae
clc
pushf
aas
inc
fisubrl
jb
sbb
mov
cltd
push
mov
jae
call
jnp
scas
xor
push
inc
mov
stos
das
cld
push
mov
and
in
test
and
inc
xchg
mov
push
mov
jmp
ds
xlat
push
mov
push
mov
pop
divl
mov
and
fildll
mov
fneni(8087
push
add
lret
shlb
rcr
loop
mov
and
das
dec
fiadds
cld
out
insl
inc
dec
xchg
push
mov
les
mov
and
jg
push
sub
sub
ja
sbb
mov
mov
sahf
clc
movsl
jne
dec
mov
push
andb
push
and
mov
adc
and
add
movsl
loop
es
sbb
in
repz
aam
lods
sbb
mov
bound
pop
fstpl
movsb
mov
aas
xchg
jbe
das
jo
dec
popf
sbb
test
seto
push
xlat
mov
movsb
xlat
add
int3
inc
jno
lret
and
push
outsb
aam
aad
in
testl
test
xor
arpl
dec
and
mov
mov
cmpb
add
sar
jg
push
and
add
lock
sbbl
insl
or
add
inc
int
mov
leave
add
push
sbb
cmc
push
dec
push
add
push
fxtract
data16
xchg
cmpsl
add
call
fdivr
inc
and
inc
and
fidivrs
ret
inc
stc
shl
std
out
pop
mov
push
jbe
fimull
xchg
ja
jbe
cs
icebp
lcall
call
mov
cmc
jmp
lock
loopne
mov
push
sub
repz
mov
cwtl
fucomp
mov
jmp
mov
xchg
loopne
and
lahf
lds
data16
outsl
jl
sbb
popf
aad
push
popf
fcmovne
movsb
xor
ret
ja
mov
jo
xlat
cmp
cmpsl
adc
lds
and
daa
mov
repz
push
int
jge
adc
jbe
mov
push
mov
xchg
inc
adc
or
xchg
mov
mov
sbb
or
dec
push
sbb
stos
rclb
jle
repz
cld
arpl
test
mov
lock
mov
repnz
out
and
fdivs
add
xor
insl
mov
push
inc
leave
mov
arpl
repz
pop
fdivr
xchg
repnz
in
xchg
scas
push
sbb
sub
push
in
notb
popa
dec
gs
popf
cltd
fbstp
lock
loopne
add
lods
and
mov
stos
fiaddl
inc
xchg
adc
jb
add
repnz
push
add
repz
mov
lds
lahf
shl
movsb
ljmp
in
add
jae
fstps
mov
mov
into
data16
jle
aas
or
aad
sbb
cmp
and
push
xchg
loop
roll
or
stc
cli
mov
mov
in
ret
mov
jecxz
push
int3
cmp
mov
xchg
enter
test
push
pop
dec
push
or
or
imul
dec
adc
sbb
push
insb
addr16
cs
xor
std
sub
mov
call
sub
add
cld
xor
pop
scas
fs
jle
das
mov
dec
test
xchg
jb
daa
loopne
enter
or
ja
loope
dec
pop
push
sahf
rcrb
stos
cs
cmpsl
imul
in
mov
mov
mov
xor
sbb
xchg
or
inc
pop
in
cltd
jne
cmp
inc
xor
ffree
leave
repnz
jecxz
pop
rcrl
faddl
push
push
sarl
fs
sbb
lods
mov
mov
enter
stos
fldl
out
adc
pop
or
imul
cmp
lock
jb
rdpmc
into
xchg
clc
pop
scas
mov
je
push
movsl
mov
insl
cmp
repz
idivb
xchg
cmpsl
dec
int
xchg
sahf
hlt
xchg
popa
inc
sti
dec
js
and
add
stos
aad
and
jns
lret
inc
lcall
dec
fstl
call
test
insb
mov
pop
in
jmp
xchg
and
jb
xor
decl
and
mov
mov
mov
clc
dec
pop
js
mov
dec
xchg
dec
sbb
out
ret
dec
adc
ja
or
test
gs
lahf
scas
adc
mov
push
mov
out
mov
and
icebp
repz
add
lods
push
and
les
xchg
xchg
repnz
mov
sbb
cmp
lock
and
les
in
xchg
jo
shr
out
loope
adc
fsubp
in
cwtl
push
les
or
repz
mov
xchg
pusha
xchg
mov
push
in
xor
and
or
jns
ja
cmp
cld
repz
shll
mov
and
rorl
mov
mov
pop
jae
out
lret
daa
iret
xchg
mov
mov
pop
push
sbb
mov
scas
scas
ja
mov
or
push
mov
xor
je
lock
insb
cmp
daa
push
rcrl
and
cmc
mov
mov
idiv
mov
cmpsl
or
xchg
pop
and
test
sti
ja
divl
aas
add
fdivl
mov
cmp
aaa
pusha
int
lret
jmp
xchg
sub
jbe
fildll
out
sub
in
into
lret
mov
cmpsb
inc
lcall
or
push
shl
cli
ret
insb
in
mov
add
stc
insl
add
pop
pop
ss
aad
mov
mov
inc
shll
test
psadbw
std
popa
icebp
push
and
insl
arpl
xor
cltd
mov
or
addb
cltd
imul
cmc
mov
xchg
sub
lret
sarl
sbb
jmp
decb
scas
mov
pop
xchg
lock
or
adc
or
testl
stos
push
cmp
mov
jo
mov
sub
add
subl
aam
adc
push
sahf
and
das
dec
mov
notb
fcompl
and
mov
das
pop
stos
pop
pop
push
fimull
mov
push
sub
mov
adc
xchg
mov
adc
ljmp
sahf
sub
inc
inc
adc
xor
mov
ret
int
lods
sub
jle
mov
js
pop
push
mov
or
rorb
jnp
xchg
xor
and
jmp
mov
add
aad
call
pushf
lea
addr16
mov
add
add
into
pop
mov
movsl
je
in
dec
cmp
das
pop
push
jecxz
cmpsl
les
insl
les
mov
push
pop
es
and
gs
movsl
clc
push
inc
pushf
mov
mov
cmp
pop
insl
ret
jmp
lret
mov
test
hlt
imul
enter
push
xlat
in
fnstenv
ja
jp
sub
adc
pop
lods
hlt
dec
cwtl
test
repz
mov
mov
sbb
jns
cld
push
sub
push
xchg
stos
in
or
inc
mov
outsl
fsub
push
jb
pusha
xlat
jno
inc
repz
rcl
push
pop
xlat
stos
outsl
iret
cmpsl
sbb
mov
lds
mull
or
cmpsl
xlat
lret
push
jns
xchg
and
fdivs
or
adc
mov
push
jge
or
mov
add
ret
pop
inc
ffreep
out
test
div
fcmove
movsl
in
test
jp
dec
orl
add
xchg
rolb
les
pushf
mov
fnstcw
lret
sub
fisttps
pop
lahf
and
mov
cld
mov
movsb
cmp
xor
mov
mov
mov
aad
popf
jmp
jp
mov
mov
scas
aaa
dec
jnp
sti
mov
and
fsts
pop
push
mov
fistl
mov
fwait
xor
pop
sbb
adc
push
mov
sbb
int3
mov
lods
sbb
mov
mov
repnz
repnz
fiaddl
pop
and
dec
and
pusha
pop
adc
into
push
es
add
pop
repz
cmpsb
in
int3
fs
mov
pushf
int
push
pop
xchg
mov
sub
push
sub
xor
xchg
neg
dec
or
push
dec
stos
push
pusha
inc
cltd
frstor
push
jmp
sbb
xlat
dec
dec
pop
in
push
mov
xor
inc
int
and
gs
insb
cmpsl
imul
cli
xchg
mov
push
scas
hlt
or
imulb
cwtl
fnstenv
daa
lods
inc
lods
aad
aad
mov
xor
pop
repnz
dec
dec
push
xchg
sbb
notl
push
push
xchg
insl
fldl
test
mov
test
mov
fstpl
rcl
pushf
or
or
fs
cmp
cmpl
jb
add
rcrb
hlt
fwait
sahf
iret
fistpl
sub
scas
mov
cmp
add
xchg
ret
ljmp
int3
push
lcall
int3
mov
fcomps
mov
xor
jae
movsb
movsb
xchg
mov
lea
hlt
sarb
inc
xchg
out
xlat
sahf
pop
cmpsl
push
inc
pop
adc
aad
cmp
inc
adc
sub
push
pop
js
push
and
push
ret
cmpl
mov
or
jb
hlt
addr16
push
sbb
daa
xor
sub
pop
mov
je
mov
lret
incl
lret
xchg
pop
jecxz
clc
mov
dec
add
test
pop
mov
mov
push
loop
pusha
orl
ljmp
pop
jg
add
or
xor
pushf
mov
into
cltd
loopne
xor
push
hlt
in
mov
in
outsl
jne
and
fs
jecxz
push
xchg
dec
shlb
jnp
mov
stos
cld
sub
in
jecxz
fwait
sub
sub
aaa
push
and
stos
fdivrl
xchg
scas
sti
movb
cmpsb
push
imul
inc
shrl
push
lock
inc
movsb
arpl
lock
sbb
iret
cmp
jno
pop
pop
sti
test
mov
ja
movsl
mov
jo
cli
sbb
andl
or
jle
aad
faddl
adc
dec
jae
sub
jmp
pop
std
xor
xor
dec
mov
jb
mov
xor
jge
dec
pusha
hlt
or
adc
sbbl
sbb
imul
sbb
pop
adc
roll
or
sbb
dec
popa
gs
lea
xor
mov
hlt
or
ljmp
loopne
lahf
push
imul
leave
or
lods
adc
mov
xchg
sub
mov
mov
loopne
lea
xchg
mov
mov
shlb
adc
notb
loopne
xor
mov
fwait
add
cmp
pop
mov
pop
sub
call
leave
pop
ljmp
out
out
sub
pop
xchg
mov
dec
jae
out
and
jmp
push
ficomps
in
or
loopne
add
fsubrl
scas
or
fdivrl
les
dec
ljmp
das
sbb
movsl
jns
mov
jmp
jecxz
sub
inc
mov
push
jnp
sbbb
cmpl
call
mov
sub
pop
sti
inc
dec
insb
inc
push
push
adc
pop
gs
sub
int
outsl
mov
add
cmp
imul
scas
sarb
push
scas
shl
dec
les
mov
imul
scas
andl
push
adc
mov
fsubs
adc
imul
or
bnd
jmp
test
movsl
add
inc
inc
mov
inc
push
clc
test
mov
push
daa
push
test
push
gs
filds
cs
sar
jne
test
clc
in
and
cmp
enter
sahf
adc
das
shr
icebp
xchg
jae
jns
or
dec
mov
out
jl
arpl
mov
cmp
rcrb
cmpsl
pop
cmp
fwait
mov
mov
dec
cmp
shlb
mov
pop
mov
out
jmp
stos
fwait
popf
pop
sub
test
jns
inc
mov
mov
fcoml
int
inc
pop
sbb
repz
push
lds
sub
fxam
test
inc
push
sub
inc
fwait
movsl
cmpsb
insl
sub
push
mov
fnop
out
push
or
jno
sbb
test
jecxz
xor
push
jge
or
adc
shl
jge
dec
shll
call
cmpsl
jnp
ficompl
mov
testb
je
cmp
xor
iret
or
sub
mov
dec
pop
incb
sbb
loopne
inc
mov
ljmp
leave
aad
mov
subb
adc
sti
call
mov
dec
push
mov
sti
fwait
dec
push
das
fistps
mov
adc
pop
lds
stos
jbe
hlt
mov
add
int
loopne
inc
jnp
cmc
ljmp
cmp
adc
shlb
popa
out
sti
cmp
jp
xor
lods
cwtl
scas
shlb
adc
xor
jecxz
ss
push
popa
cmp
movsb
mov
sbb
dec
pusha
clc
mov
cmpsb
jge
pop
repnz
mov
adc
pushf
cmp
jnp
lods
test
sbb
pop
add
jle
mov
imull
call
mov
xchg
inc
into
lret
fcomi
pop
mov
pop
sub
jl
pop
cmpb
xchg
and
mov
and
je
jl
jo
cli
jmp
popf
jg
stc
dec
leave
loopne
xchg
out
mov
xchg
clc
loope
out
sub
cmpl
adc
xor
sub
inc
push
icebp
ds
mov
out
fsts
mov
or
jno
lea
add
mov
cmp
rorb
sbb
mov
xor
jo
jp
mov
aas
sub
jmp
mov
add
cltd
loop
cmp
inc
sti
adc
test
xorl
push
outsb
jmp
sahf
clc
scas
xlat
jge
es
ror
sahf
popa
cmp
xor
adc
jns
call
loop
imul
popf
dec
arpl
in
inc
lret
sbb
gs
stc
aaa
lret
ret
nop
push
orb
nop
test
cmpsb
aas
or
ds
les
test
movsb
in
movb
loop
and
sbb
popa
sahf
add
loopne
ffreep
das
push
and
mov
xchg
push
loopne
out
push
out
out
hlt
dec
ds
in
imul
fs
dec
push
adc
lret
mov
add
or
lret
jbe
cmpsl
das
ss
sub
mov
sbb
pop
ds
imul
xor
pop
and
cmp
out
add
push
xchg
mov
mov
cli
push
pop
push
push
filds
icebp
jl
inc
or
push
mov
mov
repnz
into
lock
push
cwtl
xor
sub
jne
jnp
aam
or
in
jg
sbb
rdmsr
and
sarl
and
mov
popa
cmpl
push
dec
inc
ret
fdivl
sti
xchg
out
std
pusha
xchg
divl
fsubrl
popf
movsb
add
js
sbb
clc
mov
into
push
int
fidivs
mov
mov
dec
fsts
addr16
or
testb
stos
mov
fldt
xorl
lret
cmp
adc
je
sub
push
sub
insl
xchg
test
jo
or
mov
sub
fsubs
testb
xchg
sbb
pop
or
jno
in
je
cmpsb
or
mov
sub
sbb
filds
cmp
xor
pop
pop
scas
mov
in
mov
jb
lods
dec
insb
xchg
jge
aad
jge
mov
cmp
mov
insb
push
xchg
fildll
rclb
jae
lods
and
scas
les
out
mov
sarl
loop
mov
movsl
sbb
mov
rcl
mov
gs
jg
les
mov
sub
daa
popa
fsubrs
and
ja
repz
pop
inc
adc
out
mov
call
test
mov
movsl
push
xchg
imul
stos
sbbb
xchg
lea
lcall
fwait
adc
xchg
jp
sub
mov
cmp
mov
sub
add
test
dec
enter
jns
xchg
andb
movsl
lahf
push
mov
loope
xchg
sahf
jns
dec
ss
pop
and
nop
add
insb
mov
ret
cwtl
inc
movsb
fstp
or
lds
pop
bound
push
dec
fptan
mov
push
push
cli
fs
sub
push
ret
scas
fnstsw
out
scas
push
mov
and
rolb
test
imul
test
daa
or
cmp
mov
out
dec
cmpsl
shll
js
sbb
sti
mov
inc
jmp
aad
or
sbb
push
sti
insl
mov
push
sub
adc
push
psadbw
cmp
bound
sbb
mov
mov
insb
or
dec
mov
roll
js
or
aaa
lcall
fsubrl
in
add
ss
xchg
xchg
mov
jle
pop
jae
notl
lahf
mov
flds
mov
add
sar
and
cld
into
repz
in
in
pop
lcall
inc
or
xlat
mov
sahf
add
jmp
jnp
and
daa
arpl
xor
arpl
add
cmp
cmc
sbb
cmp
std
pop
das
xor
mov
pop
daa
push
adc
add
cld
and
mov
xchg
push
push
dec
mov
mov
mov
sub
sti
into
fdivrl
xlat
mov
xor
out
pusha
push
and
and
data16
repnz
jmp
rorl
jg
js
adc
daa
addl
ljmp
adc
add
jno
mov
pop
sahf
int
fnstcw
enter
and
mov
outsl
mov
shrl
lret
cmp
mov
ret
sbb
and
cmp
push
mov
push
pop
mov
dec
bound
push
cmp
fwait
push
xlat
cwtl
xlat
addr16
cmp
and
or
stos
orb
cmp
stos
mov
ljmp
sarl
sbb
aas
or
xor
push
rcll
sub
popf
dec
mov
lahf
test
or
out
popa
mov
inc
imull
repz
push
addr16
adc
xorb
lods
aaa
mov
fidivrs
roll
jp
sar
movsl
cmpl
add
mov
adc
call
scas
mov
int
inc
js
xchg
lock
stos
cmpb
test
cmpsb
xchg
in
push
or
push
lock
icebp
fcoml
es
int3
push
out
inc
std
push
ds
aas
outsb
and
shll
xchg
adcb
pop
and
adc
inc
lcall
xlat
js
push
xchg
out
aas
movsb
cmp
sbb
xchg
add
pop
insl
loope
add
int3
cmp
push
enter
les
rol
push
leave
or
mov
movsb
pop
lods
in
xchg
int
rcr
pop
pushf
mov
and
cltd
push
xchg
ss
mov
lret
sahf
fidivrl
or
cld
fbstp
repz
jge
aas
imul
loopne
out
mov
inc
xchg
nop
xchg
cmp
xchg
and
ljmp
and
mov
adc
push
cltd
adc
ss
mov
enter
pop
mov
push
dec
sarb
mov
std
bound
in
mov
fsubrl
pop
les
lods
call
add
test
imul
icebp
loop
jge
cmp
adc
lcall
shlb
bound
xor
mov
inc
inc
cwtl
mov
clc
movsb
push
mov
cmp
ja
dec
ficoml
mov
xor
mov
hlt
pushf
xchg
enter
out
faddl
adc
popf
loopne
pop
cltd
pop
mov
movsb
xor
xlat
push
jnp
negl
fs
pop
sbb
out
mov
fldt
pop
add
out
out
or
add
lds
movsl
hlt
push
and
je
imul
notl
ljmp
dec
push
sbb
in
or
xor
and
aam
and
cmpsl
jno
dec
scas
inc
xchg
iret
xchg
push
cmp
pop
ja
jmp
dec
sub
mov
addr16
mov
pop
cmp
lea
jecxz
mov
pop
rolb
icebp
mov
test
je
lods
movsl
shll
xchg
int
call
in
cmp
pop
or
pushf
inc
mov
cld
sub
sti
movsl
imul
jo
subl
data16
ret
jge
arpl
xor
jle
mov
mov
push
pop
pop
sbb
sub
jle
mov
xor
scas
cwtl
movsl
outsl
lods
add
sbb
rorb
inc
push
dec
test
dec
ljmp
pop
sbb
add
mov
fidivrl
jno
and
insl
push
jne
mov
es
jmp
xchg
xor
jb
jno
mov
sar
or
insb
and
lret
mov
call
dec
dec
jae
jns
es
adc
stos
lcall
add
push
push
loope
jmp
jo
and
fldt
fcomps
jecxz
mov
push
inc
movsl
insb
mov
test
add
jbe
dec
inc
xor
xchg
pushf
dec
and
test
fsubs
dec
insb
xchg
cmpsb
or
shlb
lods
aam
rcrl
jbe
scas
jecxz
mov
insb
les
loopew
pop
jecxz
jbe
ret
and
stos
loope
inc
insl
and
jge
out
xchg
popf
das
inc
outsb
fdiv
add
xor
sbb
andb
test
xor
shll
push
or
pop
inc
mov
stos
enter
mulb
pop
xchg
call
aaa
std
lcall
cmp
mov
daa
ds
js
sbb
das
adc
or
sub
in
popa
add
decb
add
mov
bound
xchg
shrl
repnz
das
inc
lods
stos
sar
mov
mov
jo
pop
outsl
and
push
clc
call
rorl
push
mov
shlb
test
negl
push
or
mov
dec
jecxz
fwait
stos
int
push
sub
fbld
fdivp
stc
cmp
decl
push
push
push
out
jecxz
out
aad
imul
push
cmpl
adc
jo
hlt
test
repz
mov
mov
and
sub
push
mov
add
pop
adc
jecxz
pop
clc
add
jb
and
mov
jno
push
int3
cmp
je
ret
cwtl
xchg
es
in
dec
cmpb
inc
cld
test
nop
pop
add
lds
mov
or
out
mov
cmp
cmp
jp
sbb
pop
push
add
mov
lods
jne
and
sbb
out
aas
cmpsb
dec
or
mov
xchg
push
xor
loope
es
inc
jne
sti
cmp
clc
mov
jb
mov
jnp
jnp
lods
insb
pop
jmp
mov
adc
xchg
pushf
scas
mov
sub
add
lods
movsl
add
xchg
aas
outsb
jne
or
xchg
mov
pop
shrl
cwtl
nop
mov
out
mov
or
arpl
jno
xchg
lods
or
pop
and
mov
and
lods
pop
pusha
aad
sti
ja
ret
test
js
xlat
out
add
add
aas
and
out
cld
sbb
sbb
jbe
call
pusha
pop
repnz
lret
mov
jbe
jp
jnp
dec
inc
push
mov
addb
daa
nop
loope
roll
jo
push
mov
ret
test
fbstp
push
xchg
pop
mov
mov
mov
pop
call
cmpl
idiv
and
xlat
popa
inc
adc
mov
mov
mov
in
sub
and
pop
xchg
sub
popf
sub
mov
add
sub
fistps
pop
xlat
xor
lcall
push
es
daa
jns
insl
cmc
test
sbb
mov
jo
cmp
in
iret
ljmp
dec
shrb
fcompl
cmpsl
inc
mov
pusha
ret
fmuls
add
and
mov
insb
sbb
jo
negl
xchg
pop
fucomp
xchg
mov
popl
cltd
fists
sarb
in
pop
call
jmp
mov
sbb
and
rorb
into
inc
addb
ds
xchg
lods
iret
xchg
leave
stc
lods
pushf
mov
pop
cmpsb
jecxz
inc
push
cltd
jl
pop
dec
push
xchg
xchg
pop
push
mov
pop
dec
and
lea
test
sbb
xor
fucom
push
mov
es
rep
outsl
jb
mov
jne
in
ret
jge
mov
les
into
mov
aaa
cmpsl
pop
loope
push
ljmp
sub
or
xlat
and
and
sub
jbe
out
lods
adc
inc
sub
adc
xorb
fdiv
repnz
inc
jecxz
add
mov
scas
cmp
fldt
pop
stos
aam
mulb
xchg
pop
cmp
sub
fcomps
gs
and
jae
cmp
xchg
lahf
jae
mov
outsb
pop
inc
in
aam
pop
cmp
iret
push
xor
stc
rcrb
ret
loop
jae
add
mov
iret
push
xor
rorb
push
popa
dec
pop
cmpsl
cmp
fstpl
ds
scas
lahf
jno
in
pop
aaa
pop
pop
mov
popf
sub
out
pushf
xchg
xor
movsl
rorl
and
push
sub
ficoml
stos
jb
das
leave
int3
shrb
roll
sub
or
sub
xlat
dec
imul
dec
xchg
jbe
dec
sub
inc
movsb
test
xor
jge
xchg
imul
push
clc
jae
jae
add
inc
pop
js
out
inc
lds
jg
cmp
mov
jbe
mov
add
pop
outsl
decb
loop
sub
into
add
arpl
xchg
push
dec
ds
mov
sub
xor
ucomiss
inc
xor
jne
int
clc
ret
inc
pop
mov
pop
imul
mov
je
inc
adc
in
mov
xchg
cmp
inc
push
push
jecxz
and
xchg
fistpl
les
jno
or
pop
sub
pushf
add
push
test
cli
xchg
jb
andl
mov
jecxz
jb
clc
ss
mov
rcrl
mov
dec
sbb
push
jge
inc
mov
iret
fimuls
ss
push
lea
mov
jmp
cltd
or
jnp
ja
xchg
cmc
je
sti
or
sbb
sub
jmp
lret
test
inc
adc
call
dec
mov
add
inc
insl
and
xor
pop
int
mov
push
in
sub
xlat
mov
jnp
sbb
out
pushf
cs
mov
push
push
push
mov
mov
xor
push
ss
mov
sbb
repz
sub
loopne
or
shl
je
aas
mov
xchg
pop
cmp
inc
pop
aas
jb
jo
push
movb
outsl
sub
je
cmpsl
pop
ja
icebp
std
mov
stos
jnp
push
insl
add
pop
cltd
dec
bound
sub
cmc
adc
call
xor
or
popw
push
push
pop
test
test
cmc
cmp
add
das
mov
push
push
or
or
cmp
jge
ss
jne
mov
mov
jae
mov
lret
cmc
pop
icebp
imul
fldcw
push
mov
movsb
movsl
mov
push
out
pusha
popa
or
xor
pop
inc
mul
mov
jp
pusha
push
fisubl
cmp
sbb
sub
push
aad
jae
or
or
and
test
pop
arpl
push
in
sarl
or
es
pushf
or
mov
xor
xchg
pusha
or
push
mov
insb
cmp
leave
push
call
adc
fsts
or
out
pop
ret
rorb
and
dec
and
scas
sti
mov
jae
inc
mov
mov
addr16
mov
gs
jle
sbb
lea
rclb
pop
rcll
xor
push
loope
lds
sbb
and
and
test
and
stos
or
cmp
and
into
dec
adc
fwait
scas
inc
jno
sbb
fwait
mov
jge
push
orb
int3
jne
ss
and
mov
sub
or
arpl
addr16
cli
add
inc
push
push
cs
mov
inc
inc
outsb
cmp
xchg
dec
cmp
mov
xchg
mov
stc
mov
sbb
mov
mov
push
out
xlat
loope
sub
test
sbb
xor
mov
idiv
mov
adc
cmpsb
inc
cmp
das
stc
sahf
push
mov
pop
mov
ret
decl
repz
mov
sarl
mov
scas
ficompl
and
mov
sbbb
frstor
cmc
data16
movsl
iret
sub
mov
xlat
test
xchg
cld
mov
pop
fdivp
ret
push
push
mov
push
fs
xchg
stos
xor
sub
and
dec
mov
jg
mov
or
fwait
ja
outsb
jge
rol
xor
xlat
das
sub
sbb
mov
pop
ret
xchg
sub
and
push
xor
pop
gs
ljmp
ja
loopne
dec
pop
dec
push
icebp
inc
push
push
adc
or
xchg
ds
scas
cmp
push
loopne
xchg
pop
fidivrl
pop
jl
jecxz
xor
mov
jmp
inc
mov
test
test
mov
cmp
cmp
mov
stos
mov
inc
aas
outsb
rorl
nop
std
imul
inc
clc
sbb
lret
mov
notb
pop
test
jo
and
xor
dec
pop
push
mov
jno
mov
adc
insb
rol
iret
mov
jo
xor
xchg
adc
inc
int
and
popa
xor
pop
rcrl
lret
push
inc
ret
mov
loop
sub
rcrb
fldt
mov
pop
mov
sub
mov
lods
mov
pop
and
mov
rcll
pop
bound
fxch
out
cmp
mov
dec
mov
add
lret
mov
cmc
test
jl
or
pop
pop
mov
aas
sub
hlt
mov
lcall
repz
push
lret
xchg
push
adc
stos
sbb
adc
cmp
aaa
imul
adc
xchg
pop
cmp
test
push
test
out
push
adc
push
cmc
jmp
stos
mov
mov
push
dec
sub
adc
sti
mov
push
loopne
add
stos
sub
and
mov
pop
out
sbb
xchg
lea
leave
pop
fisttpll
mov
xchg
xchg
push
mov
lds
push
fisttpll
es
rorb
ljmp
mov
dec
mov
add
mov
mov
xor
inc
imul
mov
flds
in
mov
jnp
sbb
les
adc
out
mov
sub
hlt
sub
sbb
cld
sbb
cltd
cwtl
aam
aas
inc
lds
insl
push
xor
fs
add
push
popa
cmpsl
add
dec
mov
inc
data16
lahf
orl
loop
xor
in
call
and
mov
cmpsb
add
inc
sti
enter
bound
mov
xor
jno
xchg
pop
stc
sub
xchg
inc
pushf
inc
lret
ds
sbb
cmpsb
or
inc
test
data16
xchg
dec
pop
push
shl
pop
mov
add
xchg
dec
rclb
ss
push
mov
sbb
push
lods
sbb
cmc
dec
mov
jae
mov
rorl
pminsw
mov
adc
icebp
xor
pop
fs
and
push
jle
push
addl
pop
nop
pop
ja
out
dec
jmp
adc
aad
dec
inc
clc
test
jae
adc
sbb
sbb
imul
stc
ret
addl
lahf
aaa
nop
imul
adc
add
inc
push
mov
repnz
fs
push
lcall
mov
sbbb
stc
adc
cmp
in
in
sete
push
shlb
mov
in
fimull
mov
pop
stc
test
push
fiadds
inc
test
sbb
loope
cld
mov
pop
fistps
mov
insb
sbb
add
dec
in
nop
push
inc
cltd
xor
push
xchg
test
bound
divl
sbbl
mov
adc
or
orl
mov
movsb
loopne
in
daa
cmp
mov
xchg
jmp
out
pushf
cs
add
or
adcb
mov
outsb
mov
mov
and
inc
fnsave
or
sarl
sub
int
pop
or
enter
je
ss
stc
lcall
add
loopne
lods
pop
jp
or
or
lock
mov
xor
je
lahf
adc
mov
xlat
lock
in
cld
fcomi
inc
shlb
loope
or
rorl
lcall
adc
inc
xor
or
sub
adc
fistps
stos
fisttpl
cmp
scas
adc
fiadds
cltd
pop
cmp
loopne
add
push
repnz
in
add
cmp
mov
insb
push
mov
incl
inc
repnz
ds
idivl
testl
push
repnz
push
cmp
sub
mov
mov
mov
mov
into
mov
push
jmp
loopne
leave
in
ret
mov
xchg
sarl
dec
add
xchg
lea
loope
icebp
mov
push
or
test
fsts
addr16
jecxz
or
xchg
lahf
sub
inc
mov
pop
sbb
ja
out
cs
pop
test
ret
data16
ss
cltd
push
jecxz
es
xchg
mov
jb
int3
aam
mov
mov
lds
aas
fwait
or
lock
aam
sub
jnp
dec
adc
or
popf
shlb
rorb
adc
mov
mov
jl
mov
mov
xor
and
and
inc
pop
mov
or
jns
xchg
sbb
adc
push
mov
push
ror
mov
out
movsb
cmpsl
ds
mov
fiadds
addr16
jmp
fiadds
and
cmp
pop
shll
fnstenv
aaa
dec
call
dec
sub
lods
ficoms
dec
sti
arpl
jle
pop
cld
mov
fs
adc
mov
jae
rclb
push
sub
add
or
dec
mov
clc
std
iret
xor
adc
insl
rolb
out
cwtl
sub
mov
loop
jmp
das
sub
add
and
cld
pop
inc
jge
sub
insl
stos
cmp
sarl
xor
fmull
pop
lret
dec
or
dec
cmc
xchg
data16
adc
sbbb
xchg
cmp
sub
push
ja
adc
sub
es
sti
outsb
sbbb
cli
je
cmp
bound
add
sbb
xor
xor
xor
insl
and
sub
aas
stos
mov
orl
stos
cmp
sarl
or
in
add
aas
dec
and
stos
fsts
imul
test
outsb
add
jae
jne
push
sub
outsl
bound
outsb
fldt
stos
in
lods
sbb
mov
jmp
push
pop
sub
inc
push
mov
xchg
sub
dec
in
and
pop
pop
adc
pop
sbb
cmpsl
loopne
lea
adc
pop
inc
pushf
add
sub
sbb
and
mov
lea
push
adc
inc
push
popa
shl
xchg
popa
pop
jg
or
gs
push
cwtl
loopne
in
sbb
add
out
arpl
and
sub
movsw
call
pop
mov
stos
sbb
in
mov
xlat
mov
das
jne
pop
into
lret
push
scas
fistl
sti
mov
sub
jle
or
popf
imul
mov
xor
xchg
xlat
ss
aas
ljmp
testb
jo
xor
inc
insl
inc
sbb
push
xor
mov
enter
ljmp
bound
add
call
subl
or
sarl
jb
xor
cmpsl
push
push
int3
push
stos
or
mov
dec
cmp
mov
adc
mov
pop
in
int3
pop
bnd
jecxz
mov
outsb
mov
repnz
cmpsl
pusha
arpl
or
pusha
ret
jmp
fadd
inc
cmp
loopne
aaa
pop
lcall
mov
cmpsb
fsubrl
jae
imul
xchg
mov
add
out
dec
notl
mov
insb
inc
sub
cld
test
jecxz
push
ljmp
test
inc
xor
cmpsb
mov
mov
leave
push
aad
cli
stc
pop
or
fists
sbb
jo
popf
sbb
inc
das
lds
addr16
and
cld
add
push
jle
and
mov
fs
cltd
sbbl
cmc
insl
dec
mov
xor
arpl
fstpt
in
cld
pushf
mov
adc
fldt
xor
pusha
xchg
in
pop
mov
leave
and
std
nop
je
mov
inc
mov
dec
xor
pop
daa
cmp
mov
int
pop
in
mov
fildl
push
mov
fdivl
mov
ret
subb
cmp
and
mov
pop
lea
mov
and
std
mov
ja
pop
or
mov
adc
ror
rcrl
mov
repnz
dec
sub
les
stc
daa
xchg
xor
mov
and
outsl
xchg
addb
jns
test
dec
inc
das
jmp
loop
xchg
adc
testb
das
hlt
add
insl
jecxz
cmp
xor
outsb
pop
add
or
jae
mov
mov
jbe
mov
and
mov
mov
xlat
push
addb
fcmovnbe
jne
add
inc
es
cmp
inc
sbb
out
sub
pop
in
jnp
mov
arpl
push
pop
inc
scas
lcall
jg
pop
mov
call
hlt
sub
addr16
mov
leave
push
sub
cmpsb
test
enter
xchg
mov
gs
sbb
mov
pop
int3
pop
rcrb
stc
out
xchg
jmp
mov
icebp
out
push
jp
sbb
mov
jle
or
lret
addr16
cld
dec
notl
pushf
push
push
mov
negl
inc
mov
jne
push
in
enter
out
cmpsl
rcrb
pop
test
xchg
je
inc
daa
pop
and
mov
int
xchg
bnd
movsb
mov
adc
imul
mov
lock
adc
rolb
add
xor
or
xchg
cs
lcall
mov
leave
xchg
sbb
popf
ja
insl
push
push
cmp
xor
xchg
mov
adc
pop
adc
sub
faddl
jne
xor
or
ds
out
mov
mov
iret
mov
mov
sub
stos
test
mov
ljmp
sbb
dec
insb
aaa
leave
and
mov
pop
push
pop
cmp
pushf
jns
lahf
xor
lock
add
mov
vxorps
outsb
mov
xor
xchg
mov
inc
sbbl
jle
shrl
arpl
xor
pop
add
cwtl
test
into
out
jbe
in
subw
daa
inc
adc
xchg
xchg
or
iret
mov
push
and
pop
clc
push
je
rcrl
movsb
fdivrl
push
fdivrl
push
and
cwtl
out
into
adc
movl
adc
lret
jbe
cltd
hlt
lock
xchg
pop
mov
xchg
ja
xchg
cmp
push
call
das
test
add
nop
push
push
mov
cli
cli
xor
jg
test
cmp
popa
notb
xor
sub
lods
jnp
inc
cli
jmp
ret
rolb
ja
outsb
push
int
mov
mov
push
adc
ss
loopne
cmp
int3
or
stc
fwait
mov
xlat
les
lods
push
push
das
loop
out
test
xchg
dec
mov
sbb
inc
sub
or
mov
dec
mov
inc
add
fnstenv
mov
call
xchg
insb
xchg
lgs
repz
xchg
rcr
cmpsb
mov
sbbb
pusha
sbb
iret
mov
dec
popf
loopne
mov
loop
mov
scas
jno
je
imul
mov
push
lods
xchg
das
cli
xchg
xchg
in
out
loopne
cmpsl
shll
xor
gs
xchg
sarb
push
movd
rorl
sub
rorl
mov
movsb
jo
xor
sti
in
jp
adc
cmp
adc
push
cmp
cmpsb
adc
lret
pop
std
jp
jns
aaa
lea
cmp
xor
sbb
xchg
imulb
fldcw
lahf
dec
push
repnz
mov
shrl
or
mov
mov
cmc
mov
jne
rcl
mov
mov
push
fdiv
imul
pop
pop
fwait
xchg
add
pusha
fldcw
xchg
sub
pop
jns
xchg
xlat
or
loope
cwtl
outsl
cmpsb
push
lret
add
fisubs
stos
jns
mov
mov
daa
pushf
sub
xor
rolb
jl
paddsb
outsl
in
or
adc
out
stc
cld
ret
jb
sub
iret
mov
loop
in
push
imul
push
and
andl
dec
pop
and
mov
mov
dec
pop
movsl
jge
sub
mov
out
aaa
sarb
jp
cmc
mov
sub
mov
dec
fwait
faddl
mov
je
insb
lods
mov
pop
aam
mov
fs
mov
cltd
xor
and
insb
ja
ret
xlat
cmpb
sbb
xor
inc
inc
int
pop
cwtl
xchg
jg
in
adc
je
dec
outsl
sahf
pop
mull
adc
sbb
inc
in
mov
lcall
sarl
int3
inc
in
lds
jne
into
adc
test
aaa
sbb
pusha
cmpsb
pop
psrad
ljmp
frstor
clc
arpl
mov
push
imul
xchg
mov
mov
fwait
mov
inc
stc
pop
cmc
ret
mov
cli
imul
shr
test
shlb
or
mov
jge
ficoml
out
pop
iret
sub
and
notb
cmpsl
in
mov
push
in
mov
dec
stos
dec
push
enter
and
fdivl
fisubl
cmp
jp
fsts
aas
pop
jl
xchg
mov
xchg
add
mov
inc
addr16
sbb
mov
mov
outsl
push
push
adc
mov
imul
adc
in
call
xorl
in
cmp
sub
in
fs
mov
mov
scas
repz
add
pusha
adc
mov
jge
loop
ljmp
lds
cld
pop
cmpl
stos
cmp
mov
out
mov
sub
lahf
sub
pop
lock
xchg
xorl
fucomi
and
jns
fcmovnbe
outsl
mov
push
mov
xor
sub
xchg
and
scas
jmp
dec
outsb
dec
cwtl
sbb
add
cld
jae
cwtl
in
fnstenv
inc
ljmp
xor
mov
jle
jno
loopne
add
push
mov
cmp
andl
push
sub
bnd
adcl
jns
and
int
jnp
cld
lret
and
cmp
inc
ljmp
loopne
inc
push
inc
cmpsl
je
mov
push
mov
orb
jecxz
mov
dec
cmp
fnstenv
fsubl
insl
insl
adc
daa
and
popaw
and
inc
pop
mov
lret
js
or
ljmp
jle
mov
lods
icebp
or
xor
int3
aad
shrl
adc
js
mov
inc
frstor
gs
or
and
mov
adc
test
sub
xchg
ds
arpl
dec
jno
or
aad
aaa
add
lods
std
or
push
adc
push
xor
addr16
mov
scas
stos
les
in
mov
das
dec
ss
movsb
int3
jl
subl
imul
mov
mov
push
pop
xchg
arpl
ljmp
cmpsb
stos
scas
mov
pop
xchg
subl
test
es
fstl
enter
aas
add
bnd
inc
push
addr16
clc
clc
dec
jae
or
cltd
ret
std
pop
push
lret
inc
xor
dec
stos
push
sub
push
sbb
imul
push
movb
shll
ds
sahf
and
xor
mov
and
dec
xor
stc
rorb
insl
mov
int
cmp
xor
rorl
mov
inc
aad
andb
test
rorb
pushf
ret
adc
jno
adc
les
fucomp
movsl
xchg
cs
adc
cltd
mov
cmp
pop
push
xchg
cmc
lcall
pop
rcrl
rcll
xor
mov
cmp
mov
pushl
je
ret
shr
idivl
mov
xchg
rcrb
movb
xchg
icebp
lret
xchg
adc
cmp
in
adc
xchg
sbb
ret
sti
fstp
pop
addr16
leave
jmp
ret
fs
pop
lahf
adc
cltd
sbb
inc
mov
es
in
es
in
xorb
xor
repnz
adc
bound
sarl
cmc
jnp
test
popf
lds
iret
jo
push
lret
fstpl
imul
mov
xchg
pusha
dec
andl
mov
inc
sti
js
dec
gs
or
cmp
and
add
int
out
sbb
icebp
or
mov
push
mov
push
xor
inc
scas
or
in
jb
mov
sbb
dec
push
mov
mov
cmp
pop
loop
push
dec
stos
pop
push
add
inc
xor
mov
out
push
addr16
mov
aad
sti
xchg
clc
and
jns
cli
push
pop
inc
stc
mov
imul
lret
lods
pop
pop
pop
outsb
nop
repnz
sti
sub
stos
push
pop
adc
ljmp
cmp
filds
in
xchg
mov
mov
sbbl
add
push
sub
sbb
out
addl
mov
inc
xor
lret
int
mov
js
popf
pop
fidivl
cwtl
je
imull
out
lea
mov
fabs
sbb
jnp
test
jne
sbb
and
out
dec
mov
pop
imul
sub
aaa
scas
mov
popf
out
insl
test
pop
push
in
pop
pusha
mov
inc
nop
inc
mov
lret
loop
mov
out
add
sub
sbbl
fnsave
xchg
sub
mov
loope
test
mov
xor
int
jb
jbe
add
mov
imul
inc
test
or
add
sbb
mov
jno
cli
xor
push
cmc
fildl
xorl
xor
and
enter
mov
jecxz
sub
jg
jb
sbb
jae
dec
mov
outsb
cmp
adc
xchg
cld
jno
fisubl
out
roll
and
scas
dec
hlt
mov
mov
rcl
cmpsb
inc
cmp
xchg
inc
jne,pt
fadds
xor
pop
in
arpl
push
out
sub
or
pushf
lods
add
pop
ret
or
xchg
xor
insl
add
cmp
loopne
stc
inc
and
inc
enter
fwait
mov
add
gs
fpatan
in
out
cmp
dec
add
xchg
xchg
orl
test
popa
and
sbb
sbbl
insl
aad
into
aas
lret
and
mov
sub
sbb
sub
hlt
mov
mov
mov
outsb
fs
cmp
imul
iret
shll
sub
fs
cmp
xor
cmpsb
insl
sbb
jle
mov
add
xchg
sbb
out
nop
test
lahf
fstp
int3
mov
shlb
pop
add
push
or
xchg
sub
dec
sti
add
aaa
push
repz
es
adc
repz
add
fsub
jge
xchg
cli
lahf
shlb
imul
cmp
jp
inc
jg
dec
add
add
leave
lret
movsb
popf
mov
in
fisubl
jp
jne
sub
push
cwtl
dec
enter
enter
pop
pop
popf
push
push
sbb
not
sahf
inc
mov
pop
dec
fdivp
iret
cmp
mov
sti
jecxz
jp
inc
mov
dec
loopne
xor
iret
loope
xchg
xor
inc
test
mov
stc
dec
and
mov
jp
and
jmp
movsb
hlt
sbb
mov
push
mov
cmpsl
xchg
aam
jmp
cwtl
leave
push
outsl
and
pop
xor
mov
sbb
xor
mov
xchg
mov
inc
pop
xor
mov
rcl
js
pop
sbb
leave
adc
jp
mov
mov
pop
pop
cmp
push
arpl
loop
mov
xchg
add
pop
out
sub
aaa
scas
mov
int3
mov
outsl
shl
cmp
jb
add
into
imul
icebp
scas
lcall
test
mov
push
cli
jp
test
fisttps
leave
push
leave
inc
and
adc
fidivl
mov
and
insb
dec
and
call
rorb
or
lock
loop
jne
adc
mov
xor
bound
cmp
cmp
sarb
sbb
and
cmc
pop
push
cmp
aas
jae
pop
out
leave
sbb
sub
dec
into
dec
js
insb
cmp
lret
pop
sub
mov
mov
daa
mov
test
pop
add
test
jnp
push
xor
mov
or
leave
inc
or
xor
aam
cmp
mov
mov
sbb
pop
test
iret
es
pop
js
sbb
out
or
mov
loop
sbb
clc
inc
jb
push
lds
pop
xor
xor
lcall
or
jecxz
push
inc
inc
pop
jle
popf
cli
mov
leave
pop
cmp
mov
mov
sbb
inc
sub
imul
pop
outsl
rclb
movsb
mov
out
jbe
js
scas
mov
jl
enter
inc
decl
jns
sbb
push
jge
mov
and
jae
imul
push
jo
cld
mov
stos
scas
lret
dec
add
sti
xchg
aaa
pop
jg
repz
cmpl
and
push
add
jae
out
push
or
outsb
jb
test
imul
mov
xor
hlt
mov
leave
mov
dec
inc
pop
sarl
flds
test
add
imul
ss
add
mov
cs
mov
shr
dec
fiadds
cmp
cmpsl
mov
fistpl
ljmp
test
jnp
adc
push
scas
into
mov
xchg
ud0
shrb
xchg
les
leave
jae
or
cs
and
jne
cwtl
in
rcll
mov
mov
jg
pop
push
push
addr16
add
ret
sbb
cmp
adc
push
out
add
sbb
and
cli
fists
xchg
comiss
mov
inc
mov
lret
jg
adc
adc
int
outsl
or
in
imul
ja
clc
jp
jbe
or
mov
loop
xor
adc
xchg
repz
add
rorl
push
mov
xchg
iret
push
push
leave
rcr
sbb
mov
dec
mov
cmp
mov
mov
stos
jmp
mov
ja
pusha
push
scas
or
push
sarl
mov
sub
lahf
push
jg
or
ret
pop
cmp
nop
jecxz
mov
clc
or
sbb
insl
mov
inc
das
arpl
outsl
pop
sub
out
cmp
es
adcl
pop
cmp
mov
fcomip
fs
lods
test
iret
testl
cmp
adc
adc
jp
mov
roll
and
mov
adcb
les
adc
pushl
aaa
mov
adc
and
push
into
movl
mov
fdivs
mov
fidivrl
mov
mov
xor
int3
roll
repz
mov
and
filds
repnz
mov
add
add
push
pop
lods
add
adc
pop
shll
dec
lcall
mov
mov
xor
call
les
xchg
add
in
movsl
jno
push
inc
out
inc
int3
pop
int3
int
lods
fldl
rorl
xchg
ror
frstor
mov
add
mov
stc
mov
dec
push
sbb
add
sub
addb
ret
lret
xor
in
inc
adc
pop
add
inc
fs
mov
xchg
and
jns
das
push
notl
sti
cmp
test
adc
xor
cmpsl
insb
mov
repz
bnd
push
jle
ja
lcall
xchg
cmpsb
push
push
push
inc
sbb
outsl
jp
scas
pop
cltd
and
fidivs
sbb
cmpsl
jne
fwait
shll
popf
mov
outsb
push
mov
das
or
or
and
iret
hlt
sarl
aad
mov
aaa
fucomip
out
pop
imul
jle
std
sbb
or
popf
fs
jbe
daa
or
inc
sub
stos
bound
cmp
xor
jp
daa
fiadds
xchg
gs
mov
push
imul
je
sti
pop
rcr
adc
scas
jecxz
out
jo
out
loope
insl
loop
xchg
orb
push
jbe
stc
lds
mov
push
mov
mov
gs
inc
popa
push
cmp
dec
sub
add
hlt
test
data16
fiadds
or
hlt
inc
and
addr16
xchg
fnstenv
fbld
dec
inc
cmp
jno
cmc
addr16
movsb
es
pop
mov
dec
xchg
jo
jbe
jle
in
scas
and
dec
cmpsb
not
dec
sbb
ficoms
inc
push
jmp
push
adc
stc
je
test
mov
jle
xchg
mov
cli
push
push
mov
int
daa
adc
dec
je
xchg
xchg
aam
push
addr16
fisubl
adc
aas
xor
lea
xlat
pop
imul
cmp
cmp
pop
mov
insl
addps
push
xor
jle
xorb
cmp
stos
xor
push
in
push
lea
push
jl
lods
cmp
xchg
fdivr
cmp
inc
xor
call
inc
xor
jne
dec
jae
insl
push
arpl
out
mov
repz
pop
arpl
adc
mov
pmaddwd
dec
call
add
inc
mov
mov
stc
loopne
jge
rorl
stos
hlt
aad
fbstp
clc
jmp
enter
pop
test
sbb
out
sahf
daa
jg
and
shrb
cmc
insl
pop
mov
jns
push
mov
dec
arpl
test
xor
ret
lods
imul
lods
add
mov
sbb
mov
pushf
test
fisubs
adc
pop
mov
adcb
cld
fiaddl
lea
push
mov
mov
scas
push
dec
fwait
into
dec
mov
daa
lcall
mov
mull
je
mov
mov
mov
pop
ljmp
int3
push
popf
sbb
fst
jge
push
sbb
sub
and
xor
or
mov
sbb
xchg
aas
call
push
xchg
push
in
js
pop
mov
push
mov
daa
mov
add
lret
adc
aas
xchg
or
cmp
je
jo
xorl
lods
mov
out
data16
xchg
out
xor
daa
loop
movsb
cmpsl
rcrl
shll
lcall
inc
sahf
cmp
pop
in
sbbl
jmp
dec
dec
mov
mov
push
cmp
cmpsl
fisubrs
add
insb
repz
addb
add
imul
lock
inc
fnstsw
shl
xchg
lret
pop
inc
rcl
jle
mov
outsb
subb
and
lahf
into
adc
mov
xor
xchg
xchg
and
dec
push
insl
mov
stos
add
mov
cmpl
pop
and
sbb
popa
or
xor
pop
fwait
xchg
or
sub
rorb
mov
xor
js
xchg
scas
das
jo
sbb
sub
sbb
and
je
daa
fisubs
pushf
cli
lods
stc
push
pop
sti
sbb
mov
cmp
inc
inc
jns
push
mov
add
imul
jp
push
aas
nop
and
sti
add
imul
mov
adcb
es
lahf
pusha
push
add
in
push
sub
add
repnz
add
cmpsb
mov
mov
adc
adcl
imul
daa
fdivrl
xchg
or
push
loope
xchg
mov
push
dec
sbbl
and
pop
ds
jne
cmp
enter
add
imul
add
cltd
sub
es
dec
or
movsl
dec
enter
xchg
lds
daa
inc
or
jnp
test
sub
notl
testl
sbb
jge
and
into
and
mov
pop
frstor
xchg
inc
sarb
outsb
fs
jnp
rcrl
mov
sbb
jp
adc
in
xorl
jl
movsl
jnp
cs
push
pop
pop
mov
or
ffree
pop
or
xor
mov
pop
jp
xchg
jge
js
push
repz
shr
sbb
mov
ja
jno
gs
std
xchg
nop
add
push
aad
fidivrl
fcmovb
adc
dec
jg
push
push
lcall
cmp
aaa
imul
int3
mov
in
dec
sbb
mov
mov
pop
test
and
jae
mov
adc
popa
push
pop
jl
push
mov
ja
dec
dec
cmp
sbb
mov
fcmovbe
jbe
hlt
push
sub
in
or
inc
out
jne
cld
jbe
jmp
jne
lods
adc
les
mov
sbb
pop
sbbb
mov
jne
lahf
xlat
xor
push
outsb
push
jp
sbb
xlat
xchg
cmp
insl
je
je
lahf
push
cld
or
push
push
out
scas
psrad
popf
mov
pusha
je
cmp
push
scas
mov
xor
in
in
leave
sub
ds
cltd
imul
pushf
xor
cmpsl
fs
push
and
or
adc
lock
cmp
out
dec
xchg
data16
add
aam
inc
out
enter
mov
sbb
stos
push
fildl
add
jecxz
mov
test
fwait
mov
mov
shrl
sub
imul
and
sti
push
hlt
sbb
mov
and
enter
lds
iret
data16
pop
in
dec
xchg
mov
aam
loop
mov
jne
xchg
add
jnp
iret
popa
adc
out
xchg
in
xchg
clc
xor
rcll
lods
arpl
iret
inc
lcall
push
loope
leave
subl
jecxz
jg
pusha
pop
fcomps
in
iret
pushf
xchg
ja
mov
repz
and
lret
xchg
dec
je
or
fwait
addr16
sub
push
add
xor
popf
icebp
or
cmc
push
pop
add
inc
aad
insb
xchg
dec
lods
and
xchg
xor
mov
push
cmpsb
sbb
pop
ret
test
pop
pusha
pop
or
ret
pop
or
dec
sbb
enter
pop
ret
cli
test
mov
cli
xorb
fsubr
or
lods
xor
jl
enter
je
push
int
insb
lret
mov
mov
lret
sbb
icebp
xchg
pop
roll
sub
movsb
pop
sbbl
daa
push
push
add
repnz
pop
xor
loop
sbb
stos
mov
push
dec
dec
and
fsubl
mov
cmp
inc
xchg
insl
loope
xchg
mov
mov
inc
or
push
lock
pushl
pop
add
lcall
cmp
je
cmp
mov
in
adc
sahf
pop
ljmp
push
lea
xor
divb
aas
mov
lds
cmp
aad
inc
call
mov
mov
cltd
jge
dec
ds
mov
stos
xchg
and
aam
pop
shrl
inc
sbb
mov
jge
ja
js
jle
sbb
nop
inc
ljmp
dec
sbb
adc
dec
aas
xor
cmp
rcl
inc
sbb
mov
popa
ret
xor
pop
aas
pop
addl
js
xor
mov
mov
leave
mov
pusha
mov
mov
fucom
pop
movsl
inc
inc
bound
int3
int3
and
jno
shlb
mov
sub
cld
pop
xchg
jp
push
xchg
je
and
mov
mov
sub
xor
xor
jle
gs
pop
mov
inc
mov
pop
dec
repz
in
mov
dec
ja
fadds
outsl
sbb
pop
lds
or
pop
pusha
xlat
bound
and
cmp
orl
mov
cmp
aad
or
lods
mov
test
pop
sahf
ficoms
jnp
popf
das
sbb
mov
mov
lahf
pop
mov
test
push
adc
cmp
adc
or
push
mov
lcall
call
in
dec
dec
dec
dec
clc
adc
or
sbb
popa
mov
and
subb
or
sub
icebp
jge
outsl
imul
shrb
cmp
jnp
and
inc
sarb
adc
xchg
push
inc
popf
dec
sbb
pop
cmp
je
addl
add
gs
negb
cld
lods
xor
jns
mov
xchg
outsl
xchg
jnp
jno
jp
loope
mov
cs
pop
fucomi
sbb
lock
xlat
add
jmp
cmp
pop
je
jle
loopne
fstpt
xor
pop
pushf
enter
in
sbb
sub
mov
mov
fs
dec
fists
fbld
push
mov
add
xor
push
stos
lods
xchg
pusha
add
pop
add
stos
in
mov
test
lcall
add
ret
xchg
jle
dec
push
inc
loop
push
push
add
arpl
insl
push
test
fldcw
cmp
lds
movsl
or
in
and
inc
xorl
pop
clc
xchg
inc
jne
sahf
faddp
push
sub
add
imul
ljmp
xlat
push
addr16
out
lock
xchg
movsb
flds
lret
inc
rolb
fcoms
mov
sbb
inc
ja
mov
addr16
test
insl
iret
dec
dec
les
ljmp
jg
add
test
in
xchg
je
jmp
aad
jle
lret
movsb
mov
cli
lods
lods
xchg
xchg
cmp
daa
imull
stc
adcb
ss
sti
fstl
imul
or
or
das
out
hlt
adc
imul
jb
out
dec
and
inc
add
jp
mov
das
push
mov
cld
sbb
imul
push
or
roll
lock
inc
scas
enter
mov
cs
jl
jle
insb
inc
jo
adc
sbb
into
and
stos
adc
sub
dec
jge
ret
mov
insb
dec
push
adc
das
xor
test
sbbl
ss
cld
add
data16
mov
jl
cmpb
adc
ds
lcall
add
jmp
sbb
cli
jb
pop
loope
icebp
cld
lods
and
sub
aas
loopne
addr16
call
gs
add
adc
stos
sub
leave
jmp
push
mov
shll
jno
out
xchg
inc
stos
push
cmp
addr16
faddp
clc
push
sbb
xchg
push
fs
int3
aad
stos
mov
loope
cld
andl
stc
out
in
insl
sbb
cmp
outsb
test
pop
xchg
and
inc
daa
add
mov
mov
into
or
fstl
mov
cmp
fcoms
mov
jne
mov
push
add
mov
xor
cltd
mov
sub
aam
cs
shl
into
xor
je,pt
ss
xchg
mov
shlb
push
dec
ret
cmp
movsl
cwtl
adc
mov
loop
pop
test
mov
dec
jp
ret
mov
push
inc
pop
mov
leave
lods
or
sbb
cld
jp
mov
cmp
emms
mov
jmp
mov
adc
std
dec
sarb
test
adcl
dec
jnp
inc
mov
add
out
jge
jge
out
loop
mov
sbb
testb
fucomp
fldenv
xor
lcall
shl
aas
inc
push
icebp
movsb
popa
inc
xchg
add
fildll
test
cmpsb
push
cmp
cmp
in
mov
inc
cmp
addb
popf
push
dec
addl
inc
and
mov
sbb
pop
and
sbb
pop
lret
dec
lds
nop
mov
pop
cmp
xchg
adc
mov
movsb
xchg
or
imulb
and
ret
jmp
mov
scas
movsb
jle
or
push
cltd
movsl
pushf
jmp
int3
popa
dec
pop
mov
or
loop
test
sbb
stc
lds
jne
hlt
push
adc
mov
add
push
xor
je
movsb
sbb
jbe
inc
leave
loope
rcll
faddp
xor
adc
lock
and
ja
lahf
sbb
scas
je
out
inc
sbb
addr16
pop
ss
iret
outsl
sbb
lea
push
int3
aaa
push
sbb
fmull
or
gs
pop
test
and
icebp
bnd
rorl
int3
cwtl
add
loopne
mov
mov
pusha
cli
orb
out
iret
add
ret
jp
mov
xor
das
call
shll
xlat
rcl
test
loopne
mov
sbb
scas
xchg
les
repz
cwtl
jno
arpl
cmpsb
adc
and
add
cmp
pop
adc
xchg
mov
push
out
inc
stc
inc
cmp
sub
push
cwtl
fwait
insl
cmpsb
out
and
inc
cmp
pushf
jle
loopne
inc
scas
mov
int3
mov
xlat
xchg
inc
and
inc
scas
sbb
idivb
mov
fidivrl
xor
outsl
imul
jl
lcall
sbbl
jge
push
cmp
mov
add
sbb
iret
add
xchg
addr16
push
stos
pop
notl
dec
jo
stos
out
mov
stc
add
sub
pusha
or
xchg
xor
inc
ljmp
pop
dec
testb
stos
test
shll
roll
sbb
insb
pop
aas
aam
jno
mov
xchg
arpl
add
shl
in
inc
or
ret
bound
mov
icebp
test
sub
xchg
fs
shlb
jns
dec
les
outsb
stos
aas
xchg
call
push
test
jns
stos
int
push
sbb
popa
loopne
mov
push
out
je
js
or
je
mov
mov
ret
inc
or
pop
loop
fwait
jb
lcall
mov
add
fsub
inc
cwtl
in
sub
mov
imul
xchg
jb
push
in
or
lret
dec
or
fdivl
nop
arpl
jp
and
cmp
add
pop
cmp
incl
je
negb
repz
ja
xor
mov
push
jp
incl
or
lret
push
dec
dec
data16
ret
jns
enter
mov
ja
add
mov
sahf
cld
imul
gs
in
push
xor
or
jecxz
mov
lcall
ss
lahf
xlat
mov
pminub
shlb
mov
nop
scas
fbld
cmc
push
test
jle
std
dec
gs
jg
dec
pop
sub
and
int
rorb
sbb
pop
shll
add
pop
cmp
xor
nop
in
inc
hlt
xchg
pandn
or
push
loope
rolb
les
out
nop
sub
pop
loopne
pusha
insl
in
mov
mov
bound
imull
cmc
sbb
mov
into
or
mov
out
jo
out
arpl
outsl
inc
in
mov
cli
in
push
pusha
out
int3
xchg
or
outsl
test
xlat
fldenv
pop
repnz
addr16
add
pop
test
imul
sub
mov
xchg
inc
dec
ljmp
fistpll
xchg
test
cmc
xor
enter
loop
into
fwait
dec
mov
push
and
jg
das
stos
mov
fs
enter
out
orb
pop
pop
pusha
outsl
pop
jnp
mov
mov
outsl
pushf
lret
fcoml
pop
xorb
lret
dec
jno
leave
es
dec
cmp
inc
and
push
jmp
dec
outsl
jno
dec
add
pop
xchg
das
mov
popa
push
mov
jb
xchg
movb
mov
push
lcall
sbb
and
lret
nop
sbb
std
in
pusha
les
data16
xchg
fstpt
mov
inc
shlb
mulb
push
insl
fiadds
jmp
enter
xchg
xchg
xor
int
ja
jbe
xchg
clc
movsl
inc
lods
idiv
and
out
xor
stos
cmp
stos
and
inc
loop
insl
lahf
fmul
repnz
mov
hlt
in
sbb
xchg
cmpsb
insb
or
fbstp
mov
mov
test
leave
mov
dec
test
adc
xor
clc
or
repz
cli
in
insl
mov
shrb
inc
jb
adc
roll
mov
rol
or
xchg
xlat
sbb
sbb
push
in
inc
loope
gs
push
lods
in
clc
cmp
xchg
add
cmp
or
mov
inc
pop
lcall
cmp
insl
pop
ret
lods
mov
sbbb
dec
ret
roll
iret
xor
call
inc
add
mov
mov
or
test
mov
fistps
sub
call
subb
loope
stos
inc
nop
or
cmp
mov
jbe
pop
stos
push
cld
or
imul
out
call
jno
enter
xchg
pop
test
mov
fidivs
mov
je
fwait
push
hlt
imul
cmp
cmp
jne
test
pop
cmp
enter
mov
xor
ret
add
dec
pusha
mov
enter
loopne
sbbb
negb
sahf
icebp
sbb
jb
pusha
fisubl
and
lahf
mov
daa
cld
lcall
mov
xchg
pop
or
push
pop
or
in
psubsw
outsl
push
adc
arpl
cwtl
fldt
fildll
mov
data16
popa
out
mov
push
inc
jmp
rcll
jno
mov
std
lret
xlat
jns
xchg
dec
cmp
xor
mov
popa
into
sti
test
ror
sbb
push
cwtl
lods
mov
frstpm(287
push
cmpl
sti
push
movl
in
movsbl
inc
out
xorb
push
lods
jmp
adc
dec
cmp
sub
inc
lods
aam
clc
rolb
and
dec
jne
inc
pushf
sbb
push
jb
inc
xor
lds
ret
dec
push
mov
negb
adc
ret
mov
mov
xor
idiv
rcrb
jnp
cltd
adc
loope
push
js
jns
idiv
mov
gs
push
inc
pop
fisubl
aam
xor
mov
std
mov
dec
inc
push
mov
cmpsb
stos
lret
push
add
pop
jge
fstpt
sub
aad
fsubp
inc
mov
mull
jge
jo
mov
mov
xchg
arpl
jnp
or
pop
movb
cld
sbb
xor
andb
push
and
jae
sub
pop
xor
inc
pop
adc
push
pop
es
mov
outsb
or
pop
and
lea
mov
int3
outsl
xchg
aam
adc
pop
test
pop
test
fcmovu
jne
outsb
jno
sbb
loopne
gs
enter
push
pop
adc
in
rolb
sti
inc
je
out
js
data16
sahf
mov
xchg
cmpsl
sti
pushf
pop
push
jo
jns
outsl
and
dec
and
cltd
insb
xor
mov
lret
mov
xor
push
push
push
cmpl
ret
push
pop
pop
pop
out
adc
outsb
adc
sahf
sbb
loopne
cli
inc
or
push
jl
cmp
data16
adc
pop
dec
jmp
lret
sub
pop
dec
jecxz
sub
dec
fcoms
mov
push
nop
push
test
lret
out
subl
sub
inc
push
sub
aas
add
xor
int
push
and
jo
jns
jle
dec
fldt
pop
or
cmpsl
sub
loopne
dec
push
and
loope
mov
clc
sub
xchg
sbb
mov
in
mov
xor
jae
or
jecxz
rorb
lock
or
std
scas
and
shl
sbb
inc
shl
mov
cmp
mov
mov
cmc
hlt
mov
test
push
mov
mov
in
jle
adc
ljmp
jne
sbb
mull
in
mov
nop
int3
add
int
pushf
sbb
jb
int
adc
jge
cltd
mov
in
pop
in
push
cmp
sti
imul
or
jo
sub
xchg
xchg
dec
sahf
or
movsl
xor
mov
cmp
cmp
or
rorb
imul
jb
int
mov
or
cld
mov
pop
inc
add
cs
arpl
pop
fildl
out
mov
xchg
bound
mov
inc
jo
xlat
mov
iret
jns
add
je
dec
inc
push
lcall
movsb
daa
pop
mov
xchg
cmp
sub
push
lcall
jle
decl
xchg
inc
or
imull
and
lods
imul
sub
test
jl
xchg
fwait
sub
fs
lods
add
cmp
mov
inc
rcl
fsubrl
inc
pop
shll
cwtl
nop
cld
adc
dec
fists
fildl
jno
test
orb
cwtl
fldt
cmp
hlt
adc
mov
pop
cmp
call
fbld
adc
cmpsb
mov
push
and
nop
movsb
cltd
repnz
aas
adc
mov
repz
testl
sbb
xor
scas
mov
mov
dec
sahf
xchg
test
xchg
cltd
fwait
int
cmp
cmp
and
adc
sahf
push
inc
sub
adc
outsb
dec
pushf
push
mov
inc
cmc
add
pop
clc
add
out
js
dec
pop
sub
pop
out
fs
and
lea
mov
mov
sub
or
adc
cmp
fisubrs
shl
int3
mov
jmp
mov
jbe
push
fnstsw
into
cmp
xchg
jmp
mov
in
push
movb
adc
fisubl
sub
push
mov
les
inc
std
mov
xchg
mov
cld
mov
icebp
ror
push
pop
or
jno
in
sbb
test
int3
and
in
dec
es
cmp
push
adc
or
test
repz
jbe
ljmp
fsts
jae
inc
and
inc
enter
fnstenv
rcrl
repz
arpl
lcall
cmp
lock
mov
lret
pusha
add
jno
mov
inc
lcall
and
ds
lock
inc
shll
mov
sbb
fldenv
cmc
inc
jae
xchg
push
pop
and
ret
jecxz
mov
inc
fnsave
mov
aas
shl
mov
dec
loope
ss
rcrb
icebp
add
xchg
dec
mov
cmp
mov
dec
out
mov
mov
and
and
xchg
int
add
pop
outsl
cmpsb
dec
mov
xchg
xor
push
xchg
add
iret
mov
in
ret
sbb
add
mov
pushf
outsb
jle
leave
pop
loopne
dec
mov
sbb
scas
xchg
aam
sub
lret
jne
das
xor
xchg
xor
mov
cmpb
outsb
jp
push
inc
cld
add
sti
js
pause
test
clc
pop
fmull
in
orl
xor
pop
enter
sbb
ficoml
adc
leave
push
sahf
outsl
lods
jp
push
mov
jge
inc
jle
push
ljmp
movsl
mov
call
and
inc
xor
jb
inc
lea
jmp
lods
pop
in
rcr
in
mov
mov
xchg
adc
inc
or
addr16
daa
movsb
cld
ds
mov
jle
jecxz
xchg
cs
imul
cltd
adc
les
fistl
je
loop
sahf
sbb
loop
in
xor
mov
jecxz
rclb
push
es
pop
jns
mov
cmovbe
repz
fisttpl
xor
mov
js
ja
pop
inc
repz
cmp
ret
lods
repz
lds
inc
insb
out
das
cmp
pop
ss
mov
jg
loop
inc
rcll
test
js
sti
and
push
ja
sbb
mov
cmc
scas
in
xchg
inc
push
jle
das
rcll
jbe
mov
imul
addr16
push
push
cli
jnp
xchg
mov
pop
mov
stos
lret
jae
lods
arpl
sub
jmp
lods
mov
adc
popf
clc
cmp
jne
nop
mov
rcl
loopne
xlat
jmp
int3
js
fistl
xlat
movsb
dec
inc
mov
scas
sub
mov
adc
cmp
in
repz
in
xor
lea
orl
clc
or
or
mov
dec
inc
dec
aam
jmp
outsb
jae
ss
jns
pop
sbb
loope
dec
cmp
cmp
cli
push
and
or
xchg
ss
sub
popf
push
iret
cmp
inc
mov
jnp
pop
into
scas
xor
ret
mov
xchg
jge
push
into
sub
push
push
pop
ljmp
mov
clc
test
enter
xchg
jg
es
lea
imulb
das
sti
sbb
subb
sbbl
scas
popf
push
xchg
test
cs
inc
ljmp
iret
mov
in
push
sbb
outsl
loopne
mov
sub
inc
cmp
xchg
sub
xor
jo
push
xchg
sub
pop
bound
ljmp
and
mov
or
outsl
mov
add
aas
xchg
mov
cmpsb
push
xor
xchg
cli
cmp
pop
lds
jmp
shll
push
icebp
mov
inc
push
mov
ret
push
fs
pop
divb
rclb
ret
push
inc
xor
test
popa
xchg
pushl
test
hlt
push
dec
arpl
sarb
xor
xchg
sub
rcl
jge
push
test
xchg
mov
shlb
jb
stos
pop
or
enter
fdivrp
in
dec
push
fwait
imul
xchg
xor
mov
push
rorl
push
rorl
jae
mov
inc
inc
or
shrl
xlat
lock
in
jg
rolb
mov
mov
pushf
pop
push
mov
xor
movsl
repnz
int
out
mov
add
mov
mov
push
sub
arpl
mov
mov
inc
in
pop
sbb
mov
test
jl
ljmp
xchg
push
imull
movsl
sti
in
add
shr
jle
adc
mov
insl
xchg
je
insb
jp
cltd
iret
cmc
dec
sbb
jne
test
mov
gs
aaa
or
push
js
sarl
sbb
and
pop
pop
inc
inc
inc
call
add
mov
xchg
dec
popa
dec
fsubl
mov
mov
or
fs
sub
data16
dec
int
and
fisttps
orl
arpl
dec
js
mov
and
movsl
and
add
mov
pop
in
mov
out
adc
sub
mov
in
lea
arpl
fdivs
sub
pop
cs
push
cmpl
pop
pop
rcrb
fstl
enter
and
push
ret
sti
int3
pop
adc
sbb
pop
sub
es
xchg
cwtl
mov
shll
sub
inc
adc
lea
fs
pop
sbb
ret
inc
fistpl
push
cld
lods
inc
shrl
int
loop,pt
clc
xchg
push
cmp
add
adc
aas
push
or
out
push
mov
xor
jmp
sbb
cmpb
ret
and
gs
popa
aad
ret
imul
dec
add
sbb
and
pop
fcoms
cmp
push
push
nop
sub
push
cmpsb
sub
xchg
and
sbb
mov
divl
xchg
popf
test
ljmp
xchg
test
or
or
fnstsw
xor
mov
stos
roll
jle
not
ret
sbb
addr16
push
mov
mov
and
dec
mov
rorl
lock
insb
lcall
incb
fistl
movsl
leave
and
and
fistps
clc
sbb
jl
sbb
rcrl
and
out
lahf
adc
cmp
and
cmp
add
xchg
mov
sbb
mov
mov
pop
mov
and
popa
jnp
mov
shll
fs
inc
pop
js
xor
adc
movsl
pop
inc
and
in
shll
roll
mov
xchg
inc
xchg
icebp
and
xchg
and
mov
mov
mov
dec
inc
outsl
push
dec
in
repnz
das
mov
cmc
movntq
dec
test
incl
rcr
cmp
fdivrl
mov
adc
popf
mov
addr16
jecxz
fdivs
sub
adc
sahf
jmp
add
push
jmp
sbb
fildl
movsl
outsb
mov
lret
push
movl
inc
add
aaa
or
mov
sub
into
mov
bound
fnstsw
ds
sbb
inc
sarb
jl
in
mov
mov
cmp
mov
icebp
cmp
lds
and
es
mov
out
sub
subps
push
jmp
fcomps
sbb
inc
push
lahf
mov
enter
mov
mov
xorb
add
xchg
stos
mov
dec
es
xor
daa
xor
pop
lret
add
dec
push
mov
cli
fistl
xchg
mov
adc
jp
insb
fs
mov
lret
cs
mov
mov
adc
xor
loopne
mov
mov
insb
repnz
push
jo
and
scas
aas
in
cmp
arpl
add
cmp
sbb
dec
lods
insl
push
test
rcrl
jg
dec
rolb
jge
cmp
cltd
repnz
lods
xchg
jne
jmp
popa
mov
push
inc
fwait
ss
xchg
outsl
pushf
push
cmpsl
and
arpl
or
mov
fucom
fnsave
scas
repz
repnz
xor
mov
hlt
aam
cmc
loop
test
psubw
push
test
das
nop
mov
stos
lret
mov
in
div
adc
les
movsl
mov
mov
xor
pop
les
mov
mov
fisubs
xor
sub
fcoml
pop
mov
sub
jno
or
test
jae
repnz
and
mov
pop
aad
mov
sbb
fsub
loope
outsb
push
push
sub
sbb
pop
or
enter
sarb
push
shl
fcomps
insb
cld
jl
add
fwait
inc
sahf
cmpsl
pop
cmc
lds
mov
fwait
xor
test
test
sub
pop
je
cli
shlb
mov
mov
dec
out
mov
js
adc
push
decl
push
add
lods
cmpsb
mov
inc
add
mov
cmp
fwait
icebp
jno
push
clc
xchg
and
enter
sahf
outsl
imul
test
outsl
stos
sbb
mov
sbb
aam
dec
in
inc
cmp
pop
inc
mov
test
push
xchg
sbb
insl
dec
adc
repz
loop
and
mov
das
sbb
jne
or
pop
jns
iret
popa
push
std
xchg
adc
mov
mov
dec
stc
mov
jp
jp
xor
push
ss
mov
stos
xor
pusha
mov
stc
add
or
xor
out
movsl
lock
xor
push
out
xchg
call
into
iret
jb
std
testb
rolb
ficoml
test
mov
or
ficoms
pop
outsb
outsb
jne
add
jl
inc
cmpsl
in
mov
adc
xchg
mov
mov
mov
fistpl
pop
fldl
cmpsl
ss
and
sarb
in
pop
test
popw
jo
test
sbb
jp
ret
push
jmp
xor
mov
loope
xor
int3
push
sub
les
xchg
mov
loopne
or
outsb
add
int3
icebp
es
pop
lret
ljmp
xchg
iret
enter
movl
lret
cmp
rclb
fs
or
les
jmp
xchg
stos
mov
lea
mov
data16
ret
sarb
pop
xor
aaa
stos
pop
push
pop
or
cmp
shrb
mov
jge
nop
jne
inc
fdivrl
inc
data16
ljmp
mov
dec
mov
mov
shl
pop
test
int
es
fildll
mov
add
pop
jge
xor
pop
js
aas
fsubrp
es
pop
sbb
mov
xchg
xchg
cmpb
mov
push
shrl
dec
cmpb
popa
dec
and
jle
or
cmp
xchg
rsqrtps
cwtl
add
add
cwtl
or
shl
cmp
push
mov
xchg
mov
sbb
aam
lcall
movsl
push
or
ret
ds
mov
xor
pop
gs
ficomps
jge
out
jle
out
stos
jno
out
movsl
pop
sarl
pop
outsl
daa
xchg
mov
shll
sbb
cli
idiv
stc
loopne
or
in
popf
pop
loop
mov
repz
in
insb
sbb
mov
popa
mov
stc
xchg
insb
into
mov
xchg
mov
jl
jne
call
mov
cmc
gs
outsl
sti
sub
dec
test
movsb
imul
inc
ret
add
pusha
sbb
cltd
dec
and
cli
or
xor
mov
iret
pop
fstpl
jg
or
jns
fldcw
push
scas
sub
push
in
sub
cmp
xor
jge
sub
xchg
dec
je
xchg
jns
adc
bnd
xchg
jae
or
xchg
ret
pop
pop
into
sub
push
mov
orb
in
imul
repnz
test
sub
jmp
out
xlat
sbb
loopne
in
xlat
lock
mov
std
ljmp
out
jnp
jae
mov
insl
lcall
mov
adc
vinserti64x4
jge
mov
and
or
push
cmp
mov
dec
aaa
mov
sbb
jo
or
xchg
jbe
sub
sub
sub
add
fsubl
shl
mov
xchg
mov
inc
stos
sub
fistl
xor
mov
adc
push
movsl
mov
push
mov
xor
stc
fimuls
jle
lods
movl
in
dec
mov
cmc
mov
arpl
mov
or
movsl
gs
ret
xor
mov
cs
push
sbb
sub
adc
fcomps
ret
mul
insl
inc
js
ja
fdivl
daa
sbb
xchg
sub
pop
imul
sub
pusha
movsb
out
repz
rol
xlat
ss
into
mov
sub
jg
das
gs
jecxz
dec
mov
xrstor
cmp
test
lea
xchg
mov
ss
ss
add
jo
sti
and
jmp
sbb
sbb
sub
sub
jmp
xchg
lret
mov
push
inc
adc
add
and
mov
into
cltd
add
sub
xlat
add
sub
std
aad
and
scas
pop
js
add
scas
sub
push
adc
and
xor
inc
shlb
xor
ficoms
and
dec
xchg
jp
scas
lret
in
stos
jb
inc
adc
je
pop
cmp
out
test
sub
push
mov
aad
in
jl
xor
pop
mov
push
or
test
xlat
mov
mov
sub
jae
nopl
mov
stos
and
adc
cmc
icebp
add
mov
sahf
cmp
push
xchg
xor
hlt
xchg
fidivrl
pop
mov
cli
iret
jmp
call
mov
lds
sub
rorb
sub
in
adc
out
xor
mov
cwtl
inc
sub
andl
or
cs
fwait
aad
sbb
leave
dec
repnz
ljmp
outsl
or
cld
xchg
xchg
inc
je
cmp
cmpsb
add
ret
adc
roll
adcb
imul
mov
movsb
in
rorb
jg
jp
mov
jne
sub
cmp
pop
add
jno
inc
dec
sbb
sbb
aas
or
jns
or
dec
push
les
idiv
ljmp
les
sbb
jnp
popf
push
fnstenv
daa
xor
subl
sub
push
mov
pop
mov
bound
or
xor
mov
inc
xchg
gs
push
mov
dec
stos
fldl2t
sar
fidivrl
fcomp
pop
or
adc
add
sbb
stos
cs
inc
ja
cmc
xlat
mov
inc
into
rorl
add
addr16
inc
and
add
dec
js
sahf
sub
or
in
out
lds
sub
mov
xchg
dec
lret
jecxz
xor
loop
cmc
ret
subl
jg
mov
pop
dec
cmpsb
out
fimuls
and
es
mov
repnz
xchg
pop
xchg
jb
popf
popf
jne
rep
into
sub
cltd
pop
jbe
xchg
pop
mov
xlat
jmp
test
popf
fwait
jge
mov
and
sbb
push
stos
cmp
pop
jle
stc
adc
inc
inc
incl
pop
shr
dec
mov
jecxz
or
push
out
fdivs
fcoms
hlt
xchg
pusha
lahf
xorb
sbb
outsb
mov
das
mov
push
in
jne
sbb
and
push
test
mov
js
push
xchg
into
push
sub
xor
jnp
test
cmpsb
sbb
jno
out
pop
inc
ret
movsl
cmp
sahf
jmp
jl
iret
ja
mov
clc
xor
pop
pushf
aas
movsb
cmp
icebp
cmp
or
push
fwait
pusha
mov
fucomp
fidivl
mov
fstpt
cmpsb
jl
roll
sub
sbb
frstor
addr16
mov
scas
insb
cmpsl
and
shll
or
divb
mov
dec
mov
aas
nop
jmp
inc
lods
xorb
in
aas
sub
in
cmp
mov
outsb
mov
flds
pusha
lock
xor
bound
sub
outsb
cltd
mov
gs
or
lds
sar
adc
and
mov
jo
repz
mov
push
imul
pop
cmp
dec
sub
push
add
scas
iret
mov
ret
xchg
xchg
sbbb
mov
ss
not
pushf
iret
add
lret
cmp
in
leave
dec
hlt
pop
lods
pop
add
xchg
test
xchg
je
orb
mov
mov
je
mov
mov
mov
and
testb
jns
lret
rolb
xor
int3
lcall
ffreep
sbb
pop
test
mov
and
repz
testl
shr
xchg
jp
outsb
test
jg
jecxz
and
xor
push
cmp
pavgb
push
adc
cld
and
xchg
dec
mov
ret
jge
sbb
test
lret
push
ljmp
shrl
sub
jl
push
mov
cmp
out
das
enter
xlat
or
das
pushf
int
unpcklps
mov
add
ja
sbb
lods
xchg
js
aas
sbb
or
mov
inc
inc
sub
call
lods
lahf
aam
adc
fdiv
inc
xor
aam
xor
cmpsb
movsb
and
popf
xchg
jg
jge
xchg
movsl
push
push
ret
insl
sahf
fwait
into
inc
and
jmp
icebp
mov
popa
es
arpl
or
fnsave
cmp
dec
fucom
sub
and
js
sub
and
out
fcoml
subl
inc
jmp
in
dec
aad
lods
pop
dec
mov
push
repz
adc
aad
rorl
xor
pop
cli
mov
cs
aam
cld
jbe
out
push
ja
and
xchg
mov
clc
adc
pop
es
xor
xchg
or
popa
imul
or
jle
xor
dec
arpl
mov
loopne
nop
pop
dec
repz
imul
add
sbb
mov
stos
cmp
mov
pushf
mov
mov
mov
scas
les
or
test
mov
add
lock
cltd
setne
jp
insb
mov
cmp
xlat
add
scas
into
sbb
shll
and
call
sbb
sub
dec
lods
pop
fidivrl
mov
xchg
out
mov
mov
cmp
stc
fwait
pop
addb
mov
mov
xchg
sub
fs
mov
in
add
rol
mov
cld
andb
outsb
imul
sub
scas
es
int3
cmpsb
out
mov
cmp
cmp
push
sbb
sti
or
stos
fadds
dec
pop
mov
xor
xchg
mov
mov
scas
add
mov
lock
fimull
sbbb
pop
xchg
jp
loope
cmpsb
addl
fiadds
cmpsl
pushf
fadds
out
mov
pop
ret
jne
addb
mov
xchg
inc
xor
fsubs
push
ljmp
iret
ja
push
rcr
xor
subl
sub
mov
mov
cmpsl
and
es
pop
fidivl
adc
in
hlt
jecxz
popa
or
out
push
add
jge
mov
fidivrl
xor
mov
xlat
ljmp
fists
mov
xchg
out
imul
sub
mov
mov
mov
mov
cmp
jg
sub
sub
jnp
add
fists
fistl
movsb
iret
push
cmp
pop
and
iret
mov
jnp
popf
add
mov
lods
loope
jp
mov
lahf
jnp
adc
test
fcomps
push
jmp
push
push
hlt
xor
adc
sub
add
aaa
sahf
das
cmp
push
outsb
outsb
cmpsb
sub
jp
xchg
push
in
inc
pusha
sbb
or
enter
jp
imul
inc
xor
sub
adc
pop
xchg
das
fstp
fcmovbe
das
rorb
aas
mov
scas
dec
cltd
jae
mov
imul
add
pop
popf
enter
in
and
mov
mov
xlat
es
nop
fwait
xchg
add
ljmp
adc
and
xchg
mov
in
push
lods
xchg
sbb
jge
sub
adc
jmp
sarl
mov
add
push
lods
imull
enter
out
adc
inc
sbb
cwtl
test
mov
lcall
int3
pop
fiaddl
adc
imul
pop
xchg
adcl
out
jge
xor
fs
icebp
je
cli
inc
push
call
mov
jp
add
sbb
rcrl
fcmovu
int
push
negl
add
cmp
xor
shll
sbb
mov
sarb
aaa
subb
add
xchg
jecxz
addr16
add
lds
sub
adc
cld
loopne
outsl
jno
test
mov
adc
loope
jmp
dec
fs
mov
aad
dec
cltd
sahf
xor
inc
sbbl
sbb
sub
push
inc
iret
push
les
xor
mov
push
dec
inc
mov
jg
mov
adc
aam
test
xor
mov
xchg
es
test
or
out
popa
or
cli
cld
cmp
lock
add
lcall
stos
imul
sbb
lods
nopl
fisttpl
jmp
ja
cld
cmp
or
inc
data16
mov
js
and
fiadds
bts
dec
xlat
test
jb
nop
movsl
mov
int3
cmp
stc
sti
inc
cmpsl
sbb
jge
fidivrl
fistpl
push
nop
push
or
xor
jmp
and
cli
push
pop
xchg
clc
mov
fstpt
mov
jp
repnz
addl
nop
movsb
out
dec
jmp
sbb
push
pop
fstpl
fbld
sbb
test
adc
insl
mov
shlb
mov
pop
xchg
inc
add
notl
add
faddl
mov
xor
mov
stos
stos
loope
sub
mov
iret
xor
outsb
pop
lock
decb
cmp
jp
test
cmp
sub
shll
fistpll
in
dec
mov
inc
jle
test
addb
mov
aaa
cltd
and
lds
xchg
push
sbb
hlt
insb
and
adc
push
cmpsb
imul
lahf
mov
push
imul
mov
add
pop
push
pop
mov
inc
adcl
in
cmp
jge
inc
mov
or
aas
mov
movsb
mov
mov
das
cld
mov
lret
or
lods
push
mov
xchg
inc
clc
je
jp
or
cs
aad
pop
push
and
test
xchg
lahf
js
test
sbb
rclb
out
inc
stc
in
mov
xchg
test
xchg
xchg
enter
fimull
push
and
or
cli
test
movsb
pop
lea
xchg
jbe
add
into
cmp
shlb
mov
ss
pop
sub
cmp
cmp
pop
pop
daa
outsl
iret
mov
rolb
into
testl
mov
jg
leave
pop
inc
or
cwtl
rolb
fsubs
inc
mov
mov
pop
xchg
sub
add
pop
stos
cli
sub
arpl
cwtl
and
cmc
inc
cld
stos
data16
fiaddl
add
les
out
xchg
int
lret
pop
cmc
xlat
sub
cwtl
push
pop
in
dec
out
cmp
outsl
push
or
jp
jmp
hlt
xchg
mov
rolb
sbb
mov
daa
aaa
xchg
mov
pop
jbe
scas
pop
lock
cmpsl
adc
cwtl
mov
fldl
lods
xlat
arpl
add
sbb
movsl
call
pop
sahf
rclb
ret
xchg
lret
xor
filds
cmc
aam
xchg
in
cli
std
inc
jno
roll
cmp
insb
mov
mov
scas
cmp
aam
or
jnp
cltd
mov
in
outsl
jns
push
jmp
or
sarb
sarb
push
lret
pop
cmpsl
inc
inc
shrl
lcall
adc
cwtl
loope
aam
xchg
std
pop
sub
insb
jge
into
xor
out
out
lods
cmp
jns
popa
leave
xchg
cmp
nop
xchg
dec
repz
je
cld
sbb
adc
add
hlt
sahf
movsl
push
insl
das
lds
repz
sbb
xor
or
rolb
push
fistl
and
xchg
sbb
mov
sub
jbe
xlat
jbe
xchg
xor
pop
rcll
jmp
into
cltd
out
int3
mov
inc
fs
add
daa
jo
jg
sub
aas
cs
fidivrl
sahf
jecxz
test
jl
pop
sub
push
xor
xorl
imul
jbe
mov
cmp
xchg
mov
stos
xchg
mov
adc
jbe
outsb
jne
cmp
les
ljmp
in
push
xchg
and
cmpsb
mov
add
pushl
movsl
pop
js
mov
jg
das
mov
cmp
insb
or
or
add
adc
dec
scas
lcall
pushf
push
xlat
inc
jle
cltd
sbb
movsl
into
aam
flds
call
mov
adc
adcl
or
sbb
cmp
adc
or
pusha
rolb
popf
addl
popf
popf
push
cli
popf
lods
sbb
ret
sbbl
sub
dec
arpl
popf
xchg
divb
pusha
mov
adc
mov
jg
sub
mov
inc
xor
xchg
dec
cltd
cmpsb
inc
sarb
xor
dec
and
leave
xor
rorb
aad
pop
mov
push
mov
test
mov
cmp
lds
jg
scas
aad
out
cwtl
sbb
xchg
mov
mov
sbb
or
inc
scas
xchg
bound
jmp
aas
mov
in
sbb
fstpt
mov
imul
jl
sbb
in
mov
ljmp
lods
cmp
mov
loop
push
out
cmc
sbbb
rolb
jno
xor
dec
imul
cwtl
jns
imull
fscale
sbb
inc
pop
mov
pushf
mov
sbb
push
ret
jnp
in
sub
add
adc
out
js
and
dec
andb
push
sahf
test
mov
and
xchg
mov
cwtl
popf
jb
inc
pop
mov
push
test
sbbl
sbb
or
cmpsb
xor
out
mov
or
outsl
jmp
adc
dec
add
sub
lds
and
xor
or
aam
iret
adc
dec
push
icebp
xor
sub
das
jnp,pt
inc
and
daa
das
mov
dec
and
movq
cmpb
loopne
mov
ds
xchg
int
les
xchg
out
inc
mov
stos
mov
shll
cmc
in
movsb
out
out
fnstsw
fsubrs
subl
push
push
sub
jno
aas
mov
pop
lahf
data16
xor
loop
adc
push
lahf
jl
insl
adcb
dec
pop
or
movsl
push
push
mov
mov
pop
ds
mov
mov
xchg
jns
jnp
ret
sbb
les
pushf
dec
add
jne
das
push
aam
or
or
xorl
outsb
jg
sub
inc
adc
add
scas
jns
jno
or
mov
push
push
mov
inc
cwtl
pop
js
jns
dec
scas
test
int
and
and
mov
push
xor
jb
mov
testb
cld
outsb
mov
pop
inc
adc
in
dec
mov
inc
mov
movsl
pop
leave
and
xor
mov
xchg
incl
aad
sbb
sub
outsl
adc
xchg
pop
push
push
pop
lock
bound
or
test
int3
sub
jns
insl
sub
add
push
pop
mov
mov
lea
inc
cmpsl
enter
stc
push
xor
lock
xor
popf
jb
push
les
inc
jne
xchg
pop
xchg
cmpsl
imul
dec
movsl
popa
in
sub
mov
fiaddl
xor
out
das
jae
inc
mov
aad
cmp
ficoml
in
mov
or
mov
cltd
or
or
jmp
dec
dec
call
and
imul
add
mov
inc
mov
push
out
pop
pop
dec
sbb
mov
push
mov
sub
xlat
push
bound
sub
xor
iret
out
test
ret
pusha
out
mov
cwtl
push
test
cmp
xchg
mov
shr
jg
das
test
mov
data16
clc
je
fsubrs
testb
sarb
cmpsl
std
push
rclb
pop
in
push
movsl
add
aam
mov
xor
cwtl
or
adc
sbb
and
mov
in
std
data16
adc
or
jp
push
lods
mov
mov
out
xchg
xor
pushf
fs
pop
in
add
out
sub
in
sub
insb
xchg
ss
insb
jnp
or
pusha
dec
insb
cmp
and
sahf
dec
push
lds
ds
jecxz
sti
mov
and
add
add
sbb
orb
mov
faddp
cmp
bound
js
mov
cmpsb
stos
dec
inc
cwtl
mov
xchg
dec
dec
scas
lods
mov
test
or
aam
imul
bound
shrb
push
push
xor
nop
inc
in
dec
jle
andb
dec
sub
dec
cmp
sub
ret
jmp
xor
jmp
std
pop
lods
repnz
sbb
mov
fisttpl
xor
repnz
mov
in
ja
mov
out
rclb
xchg
bound
lods
jle
pop
push
lea
inc
cltd
inc
push
scas
mov
mov
int
and
xchg
fcoml
stc
push
outsl
add
inc
pop
or
xor
inc
jo
repnz
adc
fwait
js,pt
lock
imul
loope
add
ja
and
call
xor
fstl
test
dec
gs
mov
cmp
sahf
in
stc
xor
inc
or
fisubrs
xor
sub
mov
repz
adc
push
mov
js
lahf
or
xchg
pop
frstor
pop
mov
and
sub
mov
mov
xor
aaa
and
pop
lock
movsl
adcl
xchg
pop
stc
sahf
xchg
or
add
lock
dec
sub
add
inc
push
inc
adc
gs
stos
pop
push
imul
ljmp
ficoms
sbb
outsl
pop
mov
push
sbb
icebp
fisubrs
js
cmp
sbb
cli
insb
out
mov
pop
push
inc
dec
jp
lea
mov
rcrb
sub
adc
daa
aaa
gs
faddl
cmpsb
gs
nop
mov
negl
addb
scas
xchg
and
cmp
mov
push
push
pop
cwtl
sbb
pop
imul
adcb
jae
mov
ljmp
and
ljmp
cwtl
pop
mov
jmp
jg
in
mov
js
fdivl
xchg
pop
xlat
movsb
mov
in
rorb
das
jecxz
pop
pop
adc
cmp
dec
dec
or
roll
repz
nop
test
jno
cmp
cmp
aad
inc
out
out
sub
mov
cli
mov
lds
sub
jo
addr16
jle
fwait
pop
dec
mov
leave
jo
mov
mov
out
add
add
jl
pop
insb
push
cmc
adc
lds
mov
iret
push
xor
pop
ds
jb
jae
sbb
mov
call
rclb
or
mov
mov
or
adc
icebp
mov
jns
mov
cmp
mov
or
sub
push
es
leave
push
js
push
out
andb
out
jp
sub
test
push
pop
ljmp
pop
mov
cmp
sbb
mov
or
cmc
loope
push
push
inc
mov
repnz
push
jb
imul
cmove
and
stc
mov
dec
sub
mov
jmp
xor
cld
mov
lock
or
mov
push
or
sub
or
xchg
enter
inc
push
sbbl
lods
outsb
mov
push
add
cltd
sbb
sbb
adc
or
stos
pop
movsb
jp
gs
xor
inc
sbb
cwtl
std
mov
cmpsb
decb
mov
stos
sbb
jle
dec
clc
jp
addb
sar
mov
gs
mov
inc
adc
enter
sub
outsl
jg
push
aaa
cmp
call
cmpsl
mov
inc
sub
sbb
cmp
sub
adc
test
cmpsl
or
call
push
addps
aam
loopne
arpl
pop
lods
pop
jae
sbb
xor
arpl
pop
ljmp
aaa
mov
subb
and
push
lcall
push
or
popf
fisubl
inc
dec
cmpb
in
or
adc
xchg
aaa
jne
lock
js
cmp
mov
jno
imul
dec
outsl
imul
push
int
mov
nop
mov
mov
adc
mov
imul
int3
mov
jb
mov
xchg
cmp
fcompl
xlat
push
daa
sub
loopne
push
and
and
or
leave
mov
push
jno
mov
jge
testl
push
lock
icebp
lea
and
jge
loop
push
bound
ss
mov
in
lea
movsb
clc
push
mov
out
jmp
fists
xor
outsb
cmp
xor
popf
xchg
and
jb
cltd
inc
or
test
cwtl
sti
lds
cmp
dec
outsl
ds
cmp
cmp
call
adc
lods
inc
mov
push
sbb
push
rcll
ljmp
jns
xchg
mov
sbb
cmpsl
push
cltd
jae
jno
adc
and
and
in
lods
dec
loop
pop
stc
cmpsb
lea
into
pushf
repnz
add
scas
fadds
xchg
cmpsb
add
fmulp
jno
fdiv
cmp
daa
or
lods
add
ljmp
iret
and
push
xchg
push
fidivrl
push
sub
enter
cmpsb
xor
mov
aaa
mov
and
test
jge
xchg
mov
mov
sbb
shlb
sbb
pop
mov
add
mov
inc
inc
pop
jno
sbb
sahf
adc
ret
adc
stos
jno
fcomip
dec
aas
fiadds
and
aam
popf
testl
xchg
xor
dec
movb
mov
jns
xchg
dec
mov
jb
push
movsb
and
ljmp
inc
and
xchg
mov
out
jp
mov
jl
shlb
mov
loopne
je
dec
stos
cwtl
and
xchg
add
inc
and
daa
scas
lahf
cbtw
stos
fadds
sbb
out
mov
aam
mov
sbb
shlb
in
xchg
ret
dec
push
icebp
out
xchg
xlat
inc
leave
sbb
icebp
adc
jne
ss
icebp
lret
lods
js
ja
adc
adc
push
sub
mov
cltd
xchg
setg
push
pop
sbb
in
iret
xor
addl
mov
je
int3
jle
sub
nop
mov
in
ret
adc
in
fisubl
mov
andl
daa
push
xor
rclb
imul
pop
jbe
sub
cmp
movsb
mov
loope
sbb
sbb
pop
pop
inc
adc
aad
movsb
adc
hlt
lea
push
rorb
mov
int3
push
sti
xor
sub
dec
and
push
rolb
testl
push
test
sti
inc
adc
jmp
bound
add
fistpl
fidivrl
fs
jno
mov
and
add
lods
push
jb
mov
nop
or
mov
sahf
insb
push
push
shll
lret
enter
aaa
push
jge
pusha
fs
dec
and
add
test
in
in
and
pop
mov
test
jmp
nop
and
xorb
int
sbb
and
xlat
pusha
sub
xchg
hlt
movsb
sbb
mov
cmpsb
and
insl
jbe
xchg
imul
in
and
iret
iret
mov
mov
ja
xorb
push
lea
or
lods
aad
adc
dec
daa
push
xchg
les
and
push
mov
js
xor
lods
dec
ljmp
push
sbb
mov
adc
sub
pusha
daa
jge
repz
repnz
xchg
push
icebp
xchg
ljmp
push
aad
clc
mov
insl
add
ret
push
out
je
push
pop
and
pushf
inc
ja
into
aad
test
enter
sbbb
nop
sbb
jecxz
ret
jnp
cmpsl
insl
sbb
push
test
rcrl
or
xor
es
cmovs
mov
xchg
int
imul
addr16
cmc
jl
inc
fcomip
iret
cwtl
movsl
add
fsub
fwait
xchg
and
pop
call
out
push
xchg
inc
mov
dec
inc
andb
sbb
ja
incb
outsb
jne
je
mov
sub
pop
xor
pop
jb
lahf
sub
outsb
insb
aas
cmp
pop
sub
mov
jg
jle
mov
cmpsb
dec
insb
jge
shlb
test
cmp
sub
stos
in
mov
inc
pushf
pushf
xchg
inc
mov
sbbb
mov
stos
sbb
fs
inc
jp
lds
subl
lock
xlat
sub
xor
jge
test
adc
add
push
jo
out
mov
out
mov
leave
enter
jne
sub
mov
repnz
adc
adc
xchg
mov
fidivrs
jecxz
jge
lds
adcb
hlt
iret
std
aaa
mov
or
mov
xchg
pusha
dec
mov
lret
mov
frstor
or
ret
aad
mov
outsb
mov
mov
and
adc
push
insb
pop
sub
push
out
aas
cmpsl
xor
into
repnz
or
lock
mov
call
sbb
push
xor
or
loopne
sbb
js
dec
xchg
mov
adc
test
ror
sbb
adc
mov
pusha
aas
popa
sub
push
or
inc
and
push
jge
arpl
scas
mov
or
insl
test
mov
std
adc
mov
pop
imul
and
out
ljmp
fsubr
aam
int3
jb
xchg
icebp
enter
or
lahf
mov
add
cs
sbb
stos
out
int3
or
pop
sub
int3
xchg
outsb
les
fimull
mov
and
js
ss
lea
xor
movsl
jecxz
cmp
stc
mov
cmp
jb
subl
fs
vxorpd
repz
sub
inc
jl
adc
jp
add
xlat
stos
jg
inc
lock
fisubl
cli
xchg
mov
sub
cmp
pop
imul
xor
xchg
enter
sar
stos
aad
dec
add
stc
mov
imulb
sbb
icebp
cmpsb
inc
pushf
jmp
mov
leave
lahf
mov
jl
lea
cmp
jge
mov
bound
fstps
adc
ret
fldenv
adc
cld
dec
add
repnz
inc
mov
xchg
mov
inc
pop
jle
shlb
jo
and
cwtl
push
pop
lret
mov
fdiv
inc
pop
mov
inc
aam
mov
insb
outsb
xchg
ljmp
repz
jno
icebp
sarb
xchg
or
repnz
js
das
xor
ljmp
or
call
rclb
add
adc
subps
enter
mov
arpl
and
icebp
addr16
fldpi
xchg
fdivrl
jg
and
into
outsb
xchg
add
aaa
inc
jecxz
dec
test
mov
dec
lcall
je
xchg
nop
jle
lods
xchg
dec
mov
jp
cmc
cli
inc
sub
push
mov
cmpsb
and
stc
push
out
xchg
loopne
jmp
pushf
into
into
aam
xlat
aas
or
cmp
into
xchg
push
fs
lods
aad
ds
div
addr16
xor
int3
imul
hlt
popa
pop
ret
iret
stos
sbb
out
pop
mov
sub
lahf
aad
and
cmp
repnz
xlat
in
repz
pop
mov
mov
jb
aaa
xchg
lret
lock
jg
lock
inc
pop
adc
mov
fcmovne
mov
mov
je
add
jmp
ljmp
cltd
sbb
scas
fadd
xchg
mov
loop
mov
icebp
lods
ljmp
and
rcrl
test
inc
scas
mov
pop
mov
and
pop
dec
xor
jp
add
and
div
mov
inc
fwait
scas
hlt
sbb
out
repz
adc
call
sub
jno
fcoml
jns
jge
mov
jecxz
aad
and
mov
mov
mov
lea
sti
ret
loopne
push
ja
cmc
push
pop
cld
dec
popf
divb
push
test
cs
push
aaa
aas
xor
xchg
pusha
in
pop
jecxz
jne
cltd
cbtw
notb
push
dec
mov
pusha
test
fcompl
xchg
aaa
ret
dec
ss
mov
daa
push
fistpll
lock
add
or
pusha
dec
sbb
js
int3
inc
mov
std
lret
aad
cmp
leave
add
inc
and
ds
xchg
jge
clc
popf
mov
sbb
in
mov
push
call
ja
or
stos
lea
cmpsb
mov
mov
adc
xchg
imul
sbb
stc
aas
arpl
es
daa
jae
cwtl
pop
out
and
cmpsl
mov
cmpsb
leave
out
xor
lcall
fisttps
push
jmp
not
and
mov
lods
or
popf
popf
mov
mov
insl
hlt
xchg
insl
or
shrb
fs
test
mov
jbe
dec
mov
mov
xchg
jbe
xchg
sub
outsb
xchg
pop
cltd
cmp
hlt
mov
into
call
je
or
dec
fsubrl
incl
addl
add
or
ret
test
adc
in
push
aam
out
lock
mov
cmp
jb
mov
jno
pop
add
and
fsubl
push
in
or
mov
pop
mov
add
pop
inc
lea
or
popf
jns
fldt
lret
mov
daa
mov
mov
cs
shll
call
hlt
sub
mov
enter
std
mov
cmc
adc
lds
in
xchg
dec
aaa
outsl
cmc
jnp
ljmp
stos
pop
sub
inc
sub
mov
test
xchg
inc
and
sbb
mov
mov
inc
jb
pop
xchg
sahf
mov
inc
add
xor
popa
outsl
inc
lods
data16
fwait
sub
lcall
lcall
orb
jmp
cmp
lret
xchg
pusha
out
add
pop
out
ljmp
lock
cmp
icebp
adc
push
sbb
out
test
adc
xchg
test
cmp
sub
push
add
xor
mov
mov
push
sub
cmp
out
dec
push
xor
pop
dec
clc
inc
sar
xchg
out
dec
popa
push
ss
stc
aad
mov
push
sub
sbb
ret
lods
ds
inc
lret
rclb
mov
repz
pop
imul
test
cmpl
inc
push
inc
subb
mov
pusha
xchg
cmpb
push
bound
sbb
repz
mov
scas
ljmp
inc
inc
pop
aas
inc
test
cmp
and
popa
ret
faddl
push
cmpsb
sti
sub
adcb
cmp
mov
pop
push
pop
jb
inc
hlt
add
roll
jae
mov
add
ret
mov
mov
inc
imul
aas
mov
mov
ljmp
ss
scas
xchg
maskmovq
negl
addb
dec
cmp
sbb
xchg
movsb
mov
xchg
orb
das
cli
leave
push
js
dec
sbb
movsb
mov
mov
dec
in
dec
and
xor
dec
and
jb
out
fcomps
in
push
lock
cmpsl
cs
daa
mov
lahf
mov
mov
push
movsl
pusha
aad
mov
shll
test
push
es
das
dec
repnz
push
aaa
push
test
dec
mov
cmp
popl
sahf
push
sbb
ds
fsub
je
adc
ret
adc
addr16
insl
inc
mov
pop
pop
sub
jnp
out
call
sbb
call
cwtl
ret
inc
into
cmp
jge
fadds
movsb
aaa
cmc
sbb
push
mov
inc
subb
sub
aam
ss
fwait
jne
cs
mov
rcr
leave
lea
lds
push
daa
adc
icebp
or
mov
push
arpl
shll
scas
xor
daa
fwait
mov
pop
xchg
push
andl
mov
call
stc
les
jp
inc
jp
pop
add
pop
push
pop
jecxz
sbb
sti
adcb
fistps
das
int3
scas
jp
mov
inc
sub
mov
cmp
push
das
xor
push
mov
mov
dec
sbb
or
clc
imul
lods
and
push
add
mov
jb
xchg
lods
mov
out
jg
test
lods
in
mov
aam
ficompl
pop
or
notl
push
inc
shrl
sbb
in
push
bound
addr16
jns
cmp
mov
loope
inc
es
jp
push
push
adc
cmp
or
leave
bound
nop
subl
push
and
ret
jo
pop
aas
in
fadds
xor
ljmp
add
clc
push
pop
ret
or
pop
mov
cltd
hlt
or
adc
fsubs
push
test
cmp
push
scas
add
push
int3
mov
fisttpl
pop
mov
loop
or
mov
xchg
stc
mov
lcall
pop
fisubrs
inc
lock
jp
fsts
add
xor
jo
xor
movsl
gs
enter
cmp
ficoms
in
movsl
jecxz
mov
jo
ds
gs
inc
push
mov
loope
cltd
insb
pop
fcmovne
mov
mov
ret
xchg
mov
ret
or
inc
or
inc
cli
adc
popf
mov
sub
leave
outsb
pop
test
or
stos
inc
sub
push
in
adc
xlat
enter
lret
cmpsb
addr16
xchg
jle
push
int3
adc
movsl
scas
pushf
mov
in
icebp
mov
xchg
dec
neg
cmp
stc
add
mov
push
push
xchg
inc
outsl
cmpsl
stc
cmpsb
rorl
cmpb
xchg
and
das
ljmp
in
push
ljmp
push
pop
pop
in
out
out
pop
mov
int
pusha
xlat
repz
adc
cli
cmpsb
leave
sbb
fs
push
mov
mov
fwait
add
xchg
pop
dec
sub
xchg
jne
scas
movsl
sbb
int
inc
cmpsl
jg
scas
add
lret
lods
and
inc
push
pushf
insb
repz
dec
test
or
roll
cli
roll
cld
imul
cmp
sarl
dec
inc
cmp
movsl
lret
push
xor
inc
add
addr16
jae
ljmp
adc
sarl
call
cmpsl
mov
mov
dec
fdivl
xchg
mov
fcompl
mov
add
mov
xorl
cwtl
jns
pop
pushf
bound
push
ljmp
out
or
enter
cmc
stos
push
shll
cmp
jg
shl
or
stos
push
add
dec
cmpsb
push
adc
mov
adc
ja
push
lods
xchg
mov
out
fstl
arpl
shr
mov
adc
jecxz
mov
out
fs
mov
push
sahf
jmp
cmc
pop
adc
fld1
out
mov
faddl
cwtl
bound
icebp
cmp
jmp
push
sub
daa
stc
and
fcoml
cmpsl
mov
and
inc
jne
sub
in
inc
fwait
pop
jno
sub
jmp
lods
insb
mov
das
mov
bound
cmp
ljmp
mov
push
mov
sahf
pop
pop
rcrl
test
out
sub
sbb
arpl
fcomp
sub
lods
sbb
and
mov
scas
sahf
xor
outsb
popl
dec
push
add
sub
and
push
fs
or
int3
ljmp
sbb
mov
imul
pop
inc
adc
je
mov
idiv
mov
lods
jmp
dec
enter
ss
test
inc
mov
sahf
sub
daa
pop
dec
notl
test
mov
icebp
movsl
je
jo
pop
xor
addb
scas
loope
jle
xchg
xchg
add
hlt
cmp
orb
mov
outsb
sub
icebp
jp
aas
fs
outsl
mov
fmul
stos
mov
jmp
mov
jecxz
jmp
jmp
sbb
sbb
adc
fists
sub
arpl
dec
out
add
mov
pop
into
dec
push
pop
lods
dec
xor
aaa
subl
cmp
pop
fwait
dec
into
inc
es
int3
adc
cwtl
sti
insl
ss
call
xlat
xlat
mov
das
std
cwtl
jmp
popl
mov
test
stos
fs
or
sbb
pop
adc
cmp
je
mov
out
cmp
test
jo
sarb
test
xor
je
adc
rcrl
loope
movsl
into
inc
push
sub
lahf
icebp
jmp
or
xor
bnd
sub
pop
jae
xor
mov
cmc
inc
fneni(8087
jp
mov
push
outsl
pop
sub
or
aas
pop
rclb
pop
xchg
sbb
push
jmp
xchg
insl
push
pushf
sbb
fwait
pop
dec
mov
imul
xchg
push
xor
mov
or
icebp
add
mov
or
mov
idivb
pop
xchg
xchg
jl
mov
stc
outsl
xchg
cs
in
jns
in
add
dec
mov
jge
aaa
aaa
frstor
test
dec
xorb
call
leave
outsb
inc
add
je
lods
ret
orl
addr16
jns
in
inc
aas
sahf
and
mov
stc
mov
mov
inc
mov
add
lahf
mov
inc
aas
adc
test
inc
ljmp
cmpsb
and
xchg
in
mov
push
jge
rcl
or
pop
sub
inc
int3
out
popf
push
stos
outsl
popl
mov
out
jp
and
inc
dec
xchg
sahf
jmp
cmpb
mov
cmp
pop
pop
fcomp
push
fs
enter
jne
jns
xor
aas
into
icebp
push
inc
inc
clc
cltd
mov
or
int3
sahf
test
outsb
aas
dec
inc
mov
rcll
inc
cs
outsl
mov
jp
scas
lahf
pop
sarl
cmp
mov
pop
ds
cmp
out
rcll
aaa
insb
fistpll
jecxz
or
mov
mov
push
std
mov
or
jo
clc
test
repnz
pop
xor
push
or
pop
sub
pop
lods
pushf
sbb
push
xchg
pop
stos
fildll
add
push
adc
out
or
hlt
pop
fisubl
fsincos
jae
js
adc
pusha
sub
sbb
and
lcall
mov
xor
jl
jl
pop
sbb
enter
cmp
pop
test
out
push
mov
sub
dec
push
mov
imul
mov
fdivrs
aam
push
push
push
push
cmp
aas
mov
fidivs
in
dec
clc
inc
call
xchg
cmp
pop
mov
mov
ja
hlt
in
stos
outsb
pop
xlat
lret
pop
add
inc
dec
push
push
aad
scas
arpl
jp
push
es
inc
jne
es
jae
cld
inc
les
movsl
fdiv
xchg
fmull
inc
pop
inc
mov
fdivrs
notl
push
jae
mov
mov
icebp
repnz
jg
movsb
scas
aas
xchg
sub
xor
scas
or
data16
imul
ror
fucomip
pusha
popa
mov
gs
cmp
push
xchg
xchg
inc
xchg
repz
dec
or
cld
or
fcoml
ret
and
adc
mov
cltd
ret
xor
mov
cmp
add
stos
stos
xchg
sbb
mov
push
mov
mov
jecxz
leave
lret
lret
or
popf
in
add
adc
xor
pop
add
aam
sub
aam
pop
call
inc
mov
mov
decb
out
shrb
in
mov
adc
xorb
push
enterw
sbb
outsb
fisttpl
lods
xor
movsb
sbb
add
mov
sbb
jecxz
dec
pop
xchg
push
xlat
icebp
js
inc
loopne
cmc
inc
mov
pop
popf
pusha
mov
xor
cmpsb
ja
les
mov
push
fildll
in
sti
xchg
or
push
jl
jne
push
mov
jge
ja
adc
sbb
inc
jecxz
inc
jle
lods
pop
fwait
adc
int3
xor
cwtl
mov
inc
ja
xlat
sub
jo
push
pop
jo
dec
or
inc
push
movsl
xchg
sbb
adc
push
lea
sub
push
mov
push
icebp
inc
je
inc
subb
rclb
insb
es
adc
cmp
xchg
mov
xorl
aas
inc
cmp
aaa
mov
jmp
push
push
mov
xlat
jmp
cmc
enter
inc
fists
clc
add
aam
jmp
push
adc
test
mov
iret
mov
std
enter
push
fcmovb
pop
jnp
cld
xchg
negl
test
std
call
mov
cmpsl
repz
pop
fidivs
inc
icebp
test
fucomi
adc
or
add
out
aaa
adc
sub
add
lods
ret
push
mov
orl
mov
sbb
imul
mov
xchg
xlat
sbb
lock
sub
and
sbb
andl
inc
into
mov
xchg
in
rcr
or
xor
adc
cmp
in
xor
sub
xlat
jle
ret
pop
out
add
and
inc
jmp
mov
clc
add
or
mov
cs
shr
cltd
add
mov
repz
sbb
push
pop
fwait
fs
bound
jmp
lcall
mov
pushf
inc
sbb
xor
stos
test
xor
fs
aad
sub
sbb
ss
dec
xchg
pop
repnz
in
xchg
or
pop
adc
mov
and
push
add
lahf
in
jge
nop
adc
cmpsl
mov
inc
pop
in
cwtl
je
sahf
lcall
fcmovu
mov
stos
sub
je
xorb
loop
push
scas
mov
jne
loop
adc
sbb
push
dec
stc
cmpsb
stos
lods
test
lret
scas
das
add
sahf
fwait
cltd
pop
jle
push
loop
add
test
js
int3
scas
mov
movsb
fisubrs
lds
testb
repnz
xor
adc
fldl
cld
loopne
pop
fwait
lahf
dec
aad
mov
sub
and
jnp
das
scas
jge
sbb
mov
and
sbb
inc
out
add
aas
jl
push
mov
push
dec
imul
pop
out
mov
xor
jns
sahf
push
mov
pop
xchg
sbb
scas
sbb
ds
inc
adc
sbb
mov
add
ja
pop
inc
xchg
push
xor
push
int3
popl
adc
and
daa
fsubp
sbbb
xor
lret
push
aam
ja
sbb
mov
idivb
or
push
ret
cmp
in
cmpsb
notl
push
and
jg
mov
inc
push
orb
sub
jge
dec
lcall
xchg
loopne
mov
jno
negl
push
pop
repnz
dec
push
inc
test
mov
rol
jle
divl
js
inc
add
stc
pause
daa
mov
out
sub
int3
cltd
mov
int3
adc
pop
pop
pop
jae
sbb
adc
and
adc
jnp
imul
pop
and
sbb
or
mov
push
test
out
add
jno
jp
testb
in
sbb
xchg
enter
xor
shl
int
cmp
pusha
movsl
lock
shrb
inc
push
mov
ret
adc
shr
sti
mov
ret
setne
in
push
popa
jge
inc
sbb
loop
test
adc
arpl
xor
or
arpl
movsl
aad
out
mov
mov
add
faddl
inc
adc
outsb
push
jg
loope
jg
mov
stos
or
adc
pop
cld
movsb
push
lahf
push
mull
enter
decb
jmp
jnp
push
sbb
aaa
dec
pop
pop
mov
push
lret
imul
cmpl
xor
leave
mov
iret
lcall
xor
lret
movsl
ss
in
lcall
mov
fwait
or
mov
lds
cmp
outsl
mov
cmp
jno
mov
inc
int3
add
and
xor
and
int
scas
sub
hlt
push
mov
pop
mov
jmp
cmpsl
outsl
scas
sbb
cmp
test
imul
sub
stc
mov
xchg
fnstsw
push
xor
fildl
mov
imulb
push
repz
sti
ret
in
mov
shlb
push
fldt
scas
or
pusha
jne
fidivs
add
dec
xchg
add
roll
cmc
and
mov
sub
mov
jb
mov
push
inc
adc
pop
inc
stos
mov
loopne
movsl
lahf
xor
enter
sub
cli
xlat
jmp
push
cmc
loope
xchg
insl
adc
das
bound
pop
aas
arpl
xor
lds
push
rcll
pop
adc
clc
cmp
xchg
rcll
popf
push
push
or
and
cmc
fists
sbb
test
mov
adc
loopne
mov
xchg
and
ja
push
imul
jl
mov
icebp
jo
mulb
cli
call
jp
stc
mov
inc
mov
cmpsb
sahf
cli
sub
insb
insb
stos
fsts
gs
imul
pop
je
in
or
and
arpl
mov
inc
test
bound
ljmp
push
fsubl
mov
loop
mov
xchg
aas
pop
pop
push
or
inc
xorb
cs
in
push
xor
scas
hlt
mov
mov
or
mov
add
popf
push
push
add
test
cwtl
lret
push
ror
in
pusha
imul
adc
shlb
ja
adc
lcall
pop
arpl
loopne
test
cmp
in
ret
sub
in
jb
dec
push
repz
loope
out
in
jge
dec
sbb
pusha
lret
clc
and
addl
mov
dec
mov
hlt
sub
dec
cmpsb
movsb
sarl
repnz
std
clc
dec
mov
mov
mov
mov
push
ds
jmp
mov
ds
test
out
or
lret
pop
addr16
stos
pusha
push
xchg
cltd
lock
or
sub
fldcw
jmp
cmc
xsha256
cmpsb
xlat
sub
xor
lods
cmp
or
std
int3
stos
addl
outsb
aam
dec
fcompl
mov
shlb
roll
std
fldenv
pop
push
cmpb
inc
iret
xchg
adc
dec
mov
fisubs
js
mov
mov
fsubrs
xchg
mov
ret
das
lret
push
and
into
out
jecxz
add
fmull
test
mov
push
mov
push
scas
stc
mov
mov
arpl
aad
pop
imul
sub
dec
mov
pop
push
sbb
sbb
sti
dec
pop
fsubrl
dec
cmp
loop
sub
cmpb
fdiv
adc
mov
sub
shl
mov
out
sbb
or
pop
bound
lods
imul
cmp
imul
fucom
lds
andl
push
pop
adc
sbb
pop
and
xchg
fcomp
mov
xor
test
xor
andl
pop
mov
push
mov
push
add
mov
xor
es
icebp
mov
testb
mov
insb
jecxz
dec
jne
mov
mov
out
jne
pop
adc
and
or
sbb
jmp
loop
add
or
add
je
in
cmpsb
outsb
shrl
insl
insl
scas
jge
out
dec
xor
push
sbb
pop
cmp
popa
xlat
movsl
rcll
repnz
pop
sub
hlt
cmp
jl
jmp
mov
push
pop
iret
or
les
push
imul
sub
fildl
iret
xorps
into
repz
push
inc
add
orl
rdtsc
pop
das
int
xchg
xchg
jns
mov
mov
or
dec
xchg
xchg
sub
pop
jecxz
cmp
dec
out
and
xor
mov
enter
jp
add
mov
iret
mov
cmpsb
scas
aam
xchg
xchg
fidivs
gs
notl
cmpsl
and
inc
sbb
fidivl
cs
cmp
insl
loopne
pop
pop
push
add
les
cmp
lret
dec
repnz
sub
mov
les
xchg
das
cmp
inc
xlat
jge
push
test
inc
pop
sarb
xor
push
ljmp
cmp
sahf
fs
jl
dec
stos
in
pop
inc
jge
repz
pop
jecxz
lods
or
xchg
scas
stos
sti
adc
cmp
push
mov
jbe
and
jne
mov
and
addb
pushf
xchg
cmp
push
ds
out
adc
adc
lods
jne
xchg
out
dec
clc
sub
xchg
fnstsw
jge
dec
cmp
ja
sti
mov
mov
xor
addb
dec
aad
mov
notb
adc
lods
outsl
pop
outsb
inc
xor
or
iret
lahf
cmc
repz
dec
mov
cmp
cmp
les
add
xchg
in
mov
pushf
movsl
cmp
shrl
xchg
or
mov
loopne
test
cwtl
fwait
inc
cbtw
xchg
pop
or
imul
cltd
mov
shll
sysenter
add
sub
xor
xor
iret
lods
push
adc
jo
xorl
aaa
jmp
sbb
add
pushf
sbb
jns
pop
pop
xor
add
jmp
xor
inc
jp
adc
stos
popa
in
int3
out
jbe
gs
test
sbb
xchg
and
lods
shrl
jbe
arpl
mov
lods
mov
fs
mov
aas
shrb
imul
jecxz
pop
mov
shlb
ja
iret
les
inc
data16
cmp
cld
jp
mov
pop
jecxz
adc
mov
fdiv
mov
rolb
in
aad
mov
adc
fsubrs
push
daa
push
xor
mov
mov
add
out
cmp
loope
adc
mov
add
insl
jns
stc
xchg
js
dec
push
rol
test
add
or
and
pop
push
mov
testb
mov
adc
pop
xor
stos
popa
das
mull
adc
aaa
cmp
int3
vmovss
sbb
pop
cs
scas
or
loop
data16
inc
out
or
js
pop
mov
xchg
mov
shrb
add
cld
std
mov
test
inc
push
pop
in
xchg
mov
cs
push
add
or
jbe
sbb
adc
adc
test
cmp
add
pop
lock
leave
xchg
sti
push
pop
ret
xor
jl
fsubr
lahf
je
xchg
sbb
fisttpll
ljmp
sub
pushf
jnp
adc
push
xlat
inc
inc
and
lahf
mov
pop
hlt
jle
mov
icebp
jnp
adc
data16
adc
orb
push
dec
popf
test
dec
into
mov
cmpsb
add
inc
xchg
jnp
sub
dec
and
fdivrs
cmp
xor
inc
inc
negb
jns
mov
xor
mov
subl
jge
cmp
or
push
imul
pop
xor
xchg
mov
fs
mov
xor
out
jmp
stos
mov
leave
push
and
pushf
sub
cwtl
out
cwtl
fidivrs
movsl
pop
mov
fs
cmp
pop
cmp
sbb
rcrl
add
xlat
add
out
js
test
movsl
jge
inc
xchg
out
sbb
add
rclb
push
movsl
push
sub
imul
xchg
mov
and
lods
cmpsl
rolb
lret
popl
inc
add
jmp
dec
loope
test
mov
mov
clc
xchg
push
test
sub
addr16
add
data16
inc
aas
mov
scas
sbbl
and
inc
dec
into
pop
cmpsl
push
jg
insl
mov
test
shlb
data16
jno
dec
outsb
sbb
dec
ljmp
mov
ret
shlb
fldenv
and
gs
pop
or
jle
scas
cmpsb
mov
adc
add
mov
andb
xchg
pushf
repz
mov
lea
xchg
jp
imul
mov
out
push
clc
add
jbe
ss
loope
fimuls
push
dec
xchg
mov
push
andb
mov
push
xchg
pop
dec
pop
xchg
les
sbb
aas
ret
mov
fcompl
test
mov
pop
loopne
dec
fsts
or
mov
cmp
sbb
loope
mov
aam
fidivrl
add
adc
dec
imul
push
call
insl
in
imul
mov
insl
stc
fwait
push
out
mov
xchg
ljmp
inc
in
ds
mov
sub
xchg
add
lcall
xchg
or
js
xchg
leave
movb
in
popf
xchg
mov
ja
cmp
sbb
add
inc
fs
out
adc
mov
mov
cwtl
je
pop
sbb
test
subl
testb
cmp
pusha
bound
stos
sub
lret
stos
fsubs
mov
das
inc
lock
imul
rorb
or
shlb
sbb
mov
sbb
sbb
aad
mov
jge
cmp
aad
xor
test
das
iret
shlb
mov
leave
in
inc
sbb
gs
mov
sub
insl
nop
push
andb
mov
aas
ret
add
pop
testl
cmp
lret
pushf
clc
push
stc
dec
push
mov
ret
sahf
jne
mov
adcb
in
ret
add
inc
push
pop
dec
dec
pop
add
loope
stos
pop
lret
ficoms
xchg
data16
pop
test
rcr
sbb
push
dec
mov
imul
mov
pop
ret
push
push
mov
pop
cmp
out
add
add
ret
and
idivl
xchg
outsb
in
jnp
and
test
or
ret
add
lcall
pop
push
insb
adc
pushf
imul
in
loop
cwtl
inc
add
ret
jp
lods
mov
add
xor
jne
cmpsb
lock
push
xlat
mov
xchg
and
shl
add
mov
fnstenv
int3
arpl
and
push
pop
xchg
and
pop
iret
dec
sbb
leave
lret
mov
sbb
xchg
mov
mov
popa
pop
mov
adc
xchg
outsl
cmp
scas
sub
fisubs
or
mov
push
lods
jmp
aad
les
xor
imul
out
pop
add
dec
int
mov
pop
sbb
lds
sbbb
jl
mov
add
test
pop
xchg
sub
push
pop
add
push
and
pop
xchg
test
scas
jmp
dec
stos
lock
jmp
pop
pop
les
push
mov
sbb
sti
fwait
sarb
pop
and
dec
push
lcall
adc
outsl
fistps
pushf
in
inc
push
inc
and
inc
sbb
cmp
std
movsb
clc
das
pop
test
ja
rcrb
rorb
dec
jns
arpl
inc
push
lahf
into
pop
ret
scas
and
mov
cmpsb
mov
imul
mov
pop
out
arpl
in
clc
adc
dec
ret
test
imul
outsl
sbb
sahf
add
xor
mov
pop
or
rol
mov
lds
lock
push
mov
mov
adc
pop
xor
orl
insl
std
dec
shll
fstl
imul
or
pop
pop
and
jmp
or
adc
int3
xchg
std
sub
add
add
iret
outsb
mulps
into
sbb
cs
repz
dec
sbb
sbb
adc
xchg
xchg
xchg
sarb
xchg
test
sbb
and
push
xor
fwait
sbb
sbb
shl
das
jg
lea
jnp
scas
scas
mov
inc
dec
push
fidivs
mov
pop
das
lret
pop
rol
jl
mov
pop
movsb
cmp
ss
ret
je
fisubs
pop
das
addr16
fistpll
dec
icebp
mov
aas
js
add
movsb
sbb
rcrl
in
scas
rcll
or
int
cmp
pop
ss
sub
lret
push
jae
out
aas
hlt
jge
cmpb
scas
sub
sahf
adc
fimull
lock
inc
mov
clc
jae
inc
iret
movsb
mov
popf
daa
shlb
cmp
in
jae
or
push
and
push
xchg
lret
out
ss
xchg
sub
adc
in
scas
xchg
dec
ret
dec
cmp
inc
and
cld
add
shlb
mov
rclb
outsb
fucomi
sbb
loop
add
out
ja
loop
dec
xchg
sbb
sub
mov
lahf
repnz
imul
lahf
add
nop
dec
push
inc
or
dec
mov
adc
mov
out
and
and
or
cltd
add
jno
mov
mov
fcmovnb
or
sarl
loope
push
pop
push
test
and
faddl
aam
cwtl
or
and
inc
mov
out
push
pop
dec
adc
jb
sbb
in
or
repz
imul
bound
mov
into
sbb
push
xchg
push
or
lcall
data16
add
jne
jne
add
insb
pop
fldcw
imul
mov
sbb
mov
and
in
aaa
push
pushf
sub
sarb
adc
cmp
insl
pop
inc
sahf
inc
xchg
mov
gs
and
mov
addb
ljmp
std
aaa
mov
add
mov
mov
or
pusha
icebp
xlat
leave
cmp
aas
orl
out
inc
popf
scas
pop
pop
shlb
mov
push
push
shrl
test
xchg
into
mov
insl
mov
push
or
push
sub
jae
or
mov
xorl
fxch
loop
fwait
mov
stc
cli
mov
sub
lret
mov
mov
and
ja
hlt
xchg
xor
in
or
repnz
fs
popa
mov
cmpb
jmp
out
je
jnp
xor
nop
jge
insl
add
mulb
jle
test
pop
add
in
fnstenv
jo
mov
dec
test
add
mul
insl
cmp
aas
pop
sub
pop
inc
sub
lahf
mov
sub
xor
int
cs
xchg
push
pop
adc
and
shlb
sbb
movsl
mov
cmp
sbb
fisttpll
scas
cmp
ror
sbb
sahf
dec
fsts
fs
bound
je
out
jp
inc
push
jnp
pop
nop
fwait
in
jns
cmpb
lods
push
jecxz
add
dec
lret
ror
mov
sbb
int
xor
mov
dec
fisubrl
and
or
dec
cmp
xor
in
fwait
pop
add
pop
pop
xor
adc
inc
mov
cmpsb
add
and
js
and
pop
or
push
divl
popa
xchg
ror
pop
mov
inc
xchg
xchg
fs
lahf
adc
adc
jbe
push
xlat
rorl
inc
sbb
aaa
push
push
rolb
fnstsw
xchg
fiaddl
cmp
rolb
inc
add
pop
inc
pop
adc
mov
pop
xor
in
ljmp
dec
sbb
push
addr16
jl
lods
cmpsl
xchg
sub
hlt
repz
outsb
inc
adc
jns
movsl
ror
sbb
xchg
push
dec
cwtl
add
cmp
and
xorb
out
inc
and
ja
mov
jae
and
adcb
icebp
mov
js
xchg
ficoml
jp
int
in
jae
test
push
push
mov
inc
xchg
imul
pmuludq
pop
xchg
andb
fadds
stc
enter
pop
lcall
sbb
pop
pushf
enter
pop
in
mov
push
out
andb
sbb
mov
sbb
or
lcall
dec
scas
imul
pop
mov
int3
mov
adc
jp
mov
pop
mov
xchg
mov
stc
int
les
hlt
stos
and
jge
cltd
sub
idivl
and
pop
xchg
sahf
ficomps
repz
push
in
test
adc
bound
add
movsl
int
dec
jmp
mov
xchg
pop
incl
sbb
mov
arpl
sahf
in
mov
hlt
jae
scas
jl
mov
mov
mov
mov
mov
xchg
adc
adc
push
add
jno
lcall
mov
mov
pushl
push
push
cmp
sub
into
rol
cld
dec
sub
movsl
mov
mov
jmp
jns
inc
je
add
add
fbstp
jl
movsb
inc
lds
push
fs
xchg
push
mov
mov
stos
sub
in
and
cmp
add
add
mov
push
add
cmp
dec
decl
mov
push
lret
scas
mov
mov
rolb
lea
pop
mov
jmp
movsb
ret
jno
std
mov
jns
inc
or
jp
arpl
lock
cmp
das
stos
bound
das
stc
sub
outsl
jmp
fadd
mov
jo
push
addl
repz
xor
pop
enter
mov
movsl
inc
add
test
mov
std
daa
inc
and
adc
push
inc
nop
dec
xchg
push
pop
sub
sbb
lahf
shrb
arpl
pop
dec
xor
aas
lods
movl
cmc
lods
repnz
push
mov
fucompp
test
adc
and
fsubs
andb
fisubs
hlt
loope
clc
sub
jl
cwtl
sbb
jle
adc
or
pop
ja
daa
xorl
mov
pop
mov
aaa
aam
imul
dec
adc
repz
arpl
lar
or
jle
loope
arpl
mov
push
xorl
sbb
dec
and
imul
mov
popf
push
ljmp
lret
inc
jnp
xchg
or
arpl
xorl
sbb
fcoml
xchg
dec
mov
mov
cmp
mov
pop
cwtl
lret
cmp
rcrb
push
and
sti
jle
sub
lock
xor
pop
adc
movsl
cld
into
mov
pop
jle
icebp
sub
daa
mov
adc
push
mov
adc
ss
inc
xor
add
lahf
jg
jp
adc
iret
lret
mov
mov
push
jbe
pusha
fsubrp
inc
pop
inc
outsl
pusha
mov
testl
sub
ds
jnp
mov
sub
int
and
add
std
inc
xor
xlat
outsl
insb
mov
adc
adc
ja
or
inc
dec
push
xor
mov
dec
pop
dec
es
scas
adc
sub
fnstenv
xchg
mov
nop
das
fldenv
xor
jo
mov
pop
cmp
push
mov
out
and
fcomip
cmp
add
mov
add
stc
xor
mov
es
enter
mov
shlb
push
rclb
ds
xchg
mov
pop
into
rcll
aam
fsts
or
pusha
add
sbb
lret
and
jo
sbb
xchg
call
cmp
push
jl
fs
or
loop
push
inc
adc
adc
lock
push
push
je
mov
cs
lahf
add
cmp
jmp
jle
jbe
stc
push
out
sbb
sahf
frstor
out
jae
inc
jle
popf
icebp
cmp
inc
scas
and
scas
in
xor
or
xor
lcall
dec
xchg
aaa
imul
add
rcll
bound
addr16
push
lahf
faddp
and
dec
iret
pusha
push
inc
sub
repnz
rorl
xchg
pushf
in
cmp
xchg
mov
aas
fadd
xor
add
jle
sub
jb
jo
xor
in
push
push
daa
adc
sbbl
in
mov
push
ljmp
lods
lock
mov
rcll
mov
es
enter
add
faddl
std
scas
lahf
cmp
push
lret
add
add
or
aam
paddd
jae
jp
ss
shrb
lahf
ret
repz
rorl
mov
push
cmpl
into
jo
ret
mov
shlb
pop
adc
jmp
das
jns
inc
cmp
ja
mov
stos
mov
outsb
lds
dec
btcl
aas
adc
cwtl
cli
sbb
cld
pop
xor
add
imul
push
enter
aam
daa
loope
int
imul
fucomip
cmpsb
mov
sub
enter
xor
dec
sub
sbb
mov
pushf
cmp
fmuls
cltd
add
sbb
cli
mov
or
or
shll
pop
sub
xchg
mov
mov
hlt
stc
inc
lahf
sub
or
xor
sbb
mov
notb
lods
sub
dec
loop
pushf
fwait
clc
ja
and
rcrl
push
mov
mov
mov
push
and
inc
dec
js
je
mov
xchg
jge
jmp
icebp
lods
pop
mov
push
dec
adc
shll
cmp
in
inc
and
jb
cmpsl
jb
mov
and
and
mov
cmp
inc
inc
ss
stc
jge
into
icebp
cs
arpl
ja
or
sub
scas
push
xchg
int
bswap
fs
mov
ret
ja
or
dec
inc
adc
sahf
repnz
shll
dec
in
addr16
inc
mov
pop
sbb
push
flds
xchg
inc
lock
sub
add
popf
stos
enter
rcrl
add
jg
xor
leave
xor
dec
movsl
cmpsb
sub
out
xor
cli
hlt
ja
lods
pop
mov
pop
fs
add
jecxz
dec
push
fistpl
adc
fisubl
mov
out
aad
pop
enter
and
sbb
cmp
xor
outsb
cmc
dec
jo
dec
cwtl
orl
imul
stos
cli
test
dec
xchg
icebp
add
cli
rclb
jbe
shr
roll
jecxz
ror
out
add
int3
xor
push
pop
jbe
int
adc
cld
sahf
bound
cltd
push
dec
sub
pop
lret
in
loope
mov
sbb
ds
movsl
fwait
lock
push
push
pop
icebp
lret
sbb
push
xchg
and
std
push
movsl
ljmp
mov
sub
lods
ljmp
test
cmp
dec
inc
es
jge
push
xor
jle
and
lock
cs
sub
inc
or
mov
xlat
loop
xchg
sub
push
fisttpl
push
enter
dec
and
adc
dec
jle
rclb
push
into
mov
add
pop
sub
loop
dec
xor
mov
jp
inc
push
or
push
test
movsl
clc
mov
dec
cmp
stos
pop
xor
popa
aas
roll
insl
add
pop
in
push
out
stos
add
cmp
lret
sbb
test
inc
inc
mov
cltd
hlt
shr
cs
inc
or
ret
les
cmpsb
push
ret
xor
out
sub
int
ret
je
sbb
outsb
sbb
rolb
push
loop
pop
adc
pop
cld
pop
add
sub
ret
outsl
nop
leave
jo
and
push
add
mov
int3
pushw
adc
mov
mov
mov
cmpsl
mov
inc
push
js
jle
dec
jbe
xchg
cmpsb
bound
outsb
outsb
push
sub
addb
pushf
popa
orb
cmp
cmp
or
pop
mov
jno
inc
fstl
arpl
pop
imul
cld
inc
in
jmp
jo
ficoml
aaa
mov
in
mov
test
cmpsb
sub
add
scas
add
stc
dec
es
and
test
es
mov
in
xchg
xchg
clc
cmp
loope
pushf
adc
repnz
fldenv
fldt
lret
ja
jge
jo
mov
outsl
ret
cmp
out
lods
pop
lcall
leave
in
icebp
add
cld
jle
mov
mov
jns
or
iret
mov
xorb
dec
bound
or
xchg
and
fwait
mov
mov
stos
dec
adc
imul
inc
out
pop
sub
icebp
lea
push
iret
imul
adc
repz
mov
jbe
in
pushf
daa
add
push
mov
jmp
push
xor
push
fcompl
gs
aad
jb
jmp
inc
cmp
pop
sub
ret
clc
or
out
mov
xchg
cmc
aaa
loop
inc
test
xchg
sub
mov
in
ljmp
or
pop
mov
gs
push
dec
push
inc
lcall
inc
pop
inc
mov
jns
test
sbb
mov
add
lret
test
cmpsl
or
dec
jnp
xchg
arpl
push
mov
jnp
xchg
repz
dec
add
jbe
jmp
shll
je
inc
xchg
fdivrl
test
das
into
orb
lret
mov
adc
and
adc
push
push
ss
out
cltd
mov
adcb
lret
mov
or
dec
mov
xor
mov
nopl
jo
cmp
ljmp
xchg
add
cwtl
scas
adc
and
orb
push
xor
push
xchg
mov
gs
fcoml
and
je
push
out
test
and
xchg
cs
test
cmp
add
jle
imul
out
mov
push
adc
or
sbb
mov
out
pop
popf
xor
xor
iret
repnz
insl
icebp
sub
mov
jmp
clc
ret
pop
outsb
cltd
iret
or
sbb
or
mov
inc
mov
cltd
sahf
sub
push
cs
aam
stos
insl
jb
loopne
das
loope
jnp
idivl
lods
mov
out
out
sbb
out
rorl
aad
jbe
add
push
sbb
gs
testl
push
mov
ret
mov
cmc
and
lods
insb
andl
repz
xchg
sbb
roll
fs
popa
add
movsl
cwtl
sub
and
dec
xchg
sbb
lret
call
mov
aaa
sti
xor
push
push
icebp
mov
dec
mov
pop
dec
movsl
stc
test
mov
push
sub
cltd
cld
push
and
movsb
imul
mov
imul
mov
cmp
iret
cltd
push
nop
adc
shrb
mov
lcall
inc
je
testl
jle
lods
sti
mov
pop
insl
les
fistps
pusha
mov
adc
xor
cli
repz
dec
add
xlat
sbb
shrl
push
jmp
dec
mov
in
pop
popf
pop
push
vpcmov
cmp
loope
xchg
sub
push
or
mov
add
shrl
into
arpl
int
movsb
adc
hlt
cmc
js
pop
xchg
sbb
pop
ret
mov
dec
imul
iret
rcrb
push
cmpsl
pushf
addr16
sub
scas
das
repnz
jnp
and
mov
rep
mov
xchg
jle
stos
sbb
dec
test
push
xor
push
pushf
sbbl
adc
mov
sub
cmp
pop
adc
sbb
lods
and
pusha
cmp
or
sbb
jg
push
jg
cmp
pop
rcrb
arpl
lcall
sub
insl
pop
mov
jge
shl
mov
jns
mov
pop
sub
into
mov
mov
push
or
sti
scas
test
jle
or
mov
mov
in
movsb
int3
pop
mov
iret
push
cmpsl
cmpsl
push
inc
push
mov
jb
xchg
lcall
pop
add
jecxz
fimull
lea
cmpsb
pop
push
mov
ficoms
fsubs
cmp
pop
dec
push
icebp
sub
loop
and
test
test
mov
push
addr16
jae
or
frstor
adc
mov
outsb
inc
lret
mov
push
fisubrl
jo
arpl
or
ret
inc
ljmp
daa
add
repz
and
adc
frstor
sbb
sbb
test
xchg
movsb
maxps
inc
pop
xchg
in
daa
in
sbbb
inc
les
aad
jecxz
cmp
cwtl
cmp
addr16
mov
sarl
imul
adc
xor
hlt
outsl
rorb
sub
pop
mov
loopne
jecxz
mov
pop
push
fistpl
xor
loop
or
int
add
pop
jl
lods
mov
in
jmp
sub
mov
mov
inc
or
mov
rcl
cmpsb
mov
shll
cmpsl
scas
lds
and
sub
push
mov
lret
mov
xor
mull
mov
into
xor
iret
clc
incl
jbe
subl
hlt
lcall
mov
aam
ja
pushl
daa
mov
xchg
mov
cmp
lds
loopne
cmp
pop
lcall
or
mov
dec
adc
jp
push
test
inc
das
das
pop
cwtl
insb
scas
stos
pop
nop
mov
or
daa
and
and
outsl
fxch
sub
push
fmulp
lock
lock
cmp
jmp
ret
lock
in
jnp
repz
dec
adc
ds
jg
stos
xchg
imul
sarl
es
jg
loope
cmp
sub
insl
cmp
insb
mov
and
andl
imul
dec
mov
cmp
adc
pop
int
xor
repnz
ja
enter
mov
jns
jmp
daa
es
cmpsb
enter
xchg
mov
add
aad
mov
mov
ljmp
loop
leave
fbstp
imul
jae
pop
inc
mov
sub
inc
or
js
push
arpl
aaa
fdiv
nop
sub
pop
push
mov
loope
lds
je
inc
arpl
fsubrl
adc
pop
jae
dec
gs
clc
rclb
hlt
cli
or
or
int
push
movsb
mov
add
sbb
testl
xlat
mov
sbb
lcall
add
les
das
ret
jmp
pop
in
cltd
imulb
push
or
je
and
adc
pop
cmp
and
push
aam
out
or
jb
popf
je
notb
stc
and
sbb
fildl
jecxz
imul
mov
sub
xchg
push
mov
cltd
dec
addr16
sbb
aam
xor
dec
in
dec
xchg
or
or
adc
jp
push
testb
mov
or
sbb
dec
movsb
mov
pop
call
mov
lods
add
mov
js
push
es
outsl
test
adc
rolb
push
xchg
je
imul
xor
push
inc
sbb
lock
adc
xor
add
loop
inc
mov
cmp
jmp
lret
cli
dec
xchg
dec
dec
adc
popa
cmc
fdivr
mov
ljmp
imul
mov
out
jge
sbb
dec
out
mov
cs
adc
out
test
fs
mov
int
cld
pushf
sub
sub
mov
fwait
test
sub
sub
push
repz
pop
gs
pop
xchg
or
in
pop
and
sub
adc
popa
xor
sub
fisubs
sbb
mull
cmp
add
ret
push
inc
pop
cmp
and
rolb
gs
push
ja
pop
xor
xchg
scas
nop
jo
shll
mov
mov
cwtl
adc
pop
push
sbb
cmp
xchg
xchg
ljmp
add
decl
cs
nop
sub
loop
or
lea
cli
push
adc
push
je
mov
sub
xor
inc
into
shl
jecxz
sub
js
mov
sbb
mov
pop
stos
inc
fisttpl
lods
pop
xchg
fnstcw
pop
add
pop
sub
mov
jg
lahf
or
push
in
jmp
xor
pop
mov
fsubp
mov
jbe
jecxz
icebp
and
xor
andps
cmp
sbb
push
adc
jo
mov
icebp
adc
dec
mov
shrb
es
inc
cmp
test
lods
jb
in
jp
xor
lods
rep
sbb
ljmp
cmp
pop
push
mov
stos
imul
popl
mov
fisubrl
jb
mov
pop
cmpsb
sub
mov
jle
dec
adc
adc
or
adc
nop
push
jbe
popf
aas
mov
pop
popa
mov
popf
lock
xchg
pusha
std
sbb
lods
cmp
cmp
mov
sbb
cmp
or
xlat
fidivs
pop
xchg
shrl
inc
shlb
xor
orb
xchg
mov
out
fcmovne
stc
jle
xchg
mov
jno
sti
cmp
fcoms
mov
inc
push
cmpsb
pop
leave
pop
or
sahf
jo
push
sub
cld
or
mov
imulb
pop
pop
push
repz
pushf
aad
push
repz
movlps
out
pop
repz
jl
in
push
or
or
aaa
ss
repz
fsubs
frstpm(287
pop
push
int3
adc
xchg
adc
xchg
cmp
out
mov
sarl
inc
cmpsl
inc
repnz
fs
mov
popa
repnz
mov
mov
es
aad
pop
int
xchg
addl
std
dec
push
es
mov
pop
loope
sbb
xchg
cmpsl
int
scas
lods
inc
in
cmp
adc
dec
xchg
stos
jmp
mov
inc
pushl
mov
div
lahf
or
stc
mull
movsl
std
push
mov
aam
aas
pop
sub
call
sub
push
mov
adc
inc
adc
xchg
push
mov
xchg
imul
lret
negl
movsb
push
icebp
mov
sub
mov
inc
push
adc
and
test
sbb
or
cmpsl
cmp
pop
cmp
pop
cld
sahf
inc
testb
icebp
add
mov
test
stos
lret
inc
dec
push
mov
mov
add
pop
mov
fdivrl
sbb
xor
sub
sub
jae
test
push
dec
mov
lods
mov
cs
mov
mov
and
mov
and
negb
scas
mov
adc
es
pop
add
incb
and
add
in
pop
out
imul
es
sub
ljmp
int3
bnd
cltd
jne
pop
xlat
add
fbstp
cmp
lods
es
dec
lods
in
test
inc
jb
out
jecxz
or
xchg
xchg
lods
ja
rolb
stos
jl
push
cs
int
idivb
iret
test
pop
int
repz
jnp
aad
xor
push
fbld
sbb
test
push
pop
out
imul
xorl
test
clc
sbb
dec
loopne
xchg
dec
fwait
dec
inc
push
jecxz
mov
push
repnz
inc
call
aad
lods
aaa
notb
push
clc
or
movsl
dec
lds
pcmpgtw
pop
jne
xchg
xor
jl
mov
les
cmpsl
or
in
cmp
push
or
cwtl
or
jp
cmpsb
aam
xchg
cwtl
jle
leave
loop
fcompl
lock
iret
cld
jae
inc
jne
enter
or
loope
and
xchg
je
shll
pushf
filds
repnz
xchg
adc
jge
jo
mov
sti
pop
arpl
out
out
inc
mov
fdivr
dec
jg
insb
popf
int3
icebp
mov
lods
and
or
cmp
jge
add
data16
fcmovbe
add
jl
jecxz
and
es
in
push
sub
cwtl
cmpsl
imul
adc
dec
add
test
sub
jge
pop
xchg
mov
and
add
mov
xor
mov
jb
mov
and
push
mov
addr16
inc
rorb
jb
in
das
push
test
dec
dec
sub
loopne
jns
jns
inc
aas
daa
sahf
jbe
cld
xor
repz
int3
sahf
repz
iret
dec
ret
addr16
push
dec
les
insl
aad
or
mov
sub
push
push
jno
adc
and
push
sbb
scas
inc
mov
mov
sbb
loop
pop
outsb
xor
addb
stos
or
mov
adc
cmpsb
mov
lret
cmp
xor
sbb
sub
ds
xchg
cmp
push
push
add
sti
test
jae
in
mov
inc
popf
pop
jmp
inc
add
xor
js
sbb
lods
xchg
inc
push
insb
into
mov
mov
sub
leave
adc
hlt
ffreep
gs
cmp
mov
adc
push
shrb
push
cld
hlt
ficomps
pop
inc
push
add
jne
rcll
ds
or
stos
shlb
ss
data16
repz
dec
jnp
push
jne
mov
or
sbb
loope
test
loope
ret
sub
or
xlat
or
xchg
push
fstpt
cmpl
ss
mov
pop
sbb
mov
fucomp
mov
mov
fldl
adc
jmp
out
ljmp
stos
cli
pusha
mov
or
in
enter
mov
push
push
dec
add
sub
lods
sahf
insl
test
and
mov
mov
cmp
adc
xor
jns
in
ss
jb
and
mov
out
sub
adc
xchg
xchg
mov
push
fcoms
xchg
jnp
aad
jb
lods
push
jge
inc
sub
and
push
dec
dec
test
sbbl
jmp
stc
dec
sub
roll
ds
shrl
cmp
or
mov
or
imul
sbb
push
mov
ss
fs
jo
div
mov
xor
loope
jecxz
pop
iret
pop
cmp
and
stos
scas
addr16
cmp
lcall
pop
test
fiaddl
sub
in
adc
push
xchg
push
jb
lcall
bswap
icebp
inc
mov
ret
sbb
xchg
mov
and
divb
repz
stc
jne
mov
push
ja
jne
mov
pusha
popa
aas
test
dec
lahf
incb
jb
es
test
push
and
or
mov
jle
lds
fildll
outsb
cmp
ret
mov
adc
jns
or
sbb
xor
leave
xchg
fcoms
shlb
mov
js
xchg
lods
cltd
lret
lret
shrl
sbb
pop
fucomip
push
loop
and
cmpsl
hlt
rolb
int3
lcall
enter
scas
mov
xchg
shll
pop
pop
fs
cmp
out
mov
mov
fsub
mov
cmp
cmp
arpl
cmpsb
xchg
xor
jle
in
adc
sbb
add
pop
in
fs
loope
inc
stos
sub
test
pop
imul
mov
out
adc
enter
inc
jl
and
pop
mov
imul
dec
dec
pop
xchg
sub
scas
jmp
fs
ds
jmp
call
sbb
mov
mov
xchg
lret
cmc
ja
xchg
inc
leave
jle
call
adc
loopne
bound
jo
mov
mov
push
das
lods
std
sub
in
in
ficoms
or
xchg
fistpl
rcll
jle
pop
xor
jge
and
lahf
jb
sti
pop
loopne
inc
dec
cmp
filds
xchg
sbb
or
cmpsl
xchg
mov
sbb
jecxz
jae
and
stc
lret
lds
xlat
or
cmp
xor
xor
dec
cmp
ror
jb
jne
dec
jmp
stos
push
repz
jg
stos
xchg
and
dec
adc
push
cwtl
ja
add
lsl
cmp
xchg
lea
pop
mov
jnp
xchg
jl
ret
popa
aam
jmp
or
or
sub
clc
bound
push
adc
insb
xchg
inc
xor
stos
rorl
push
jg
cmp
test
adc
das
enter
and
adc
adc
ret
pop
fs
pop
mov
or
mov
mov
das
scas
aaa
popa
mov
add
mov
mov
popf
cltd
cltd
lret
xchg
fdivrl
lds
pop
nop
inc
leave
jns
push
push
mov
dec
push
sbb
or
mov
jge
push
das
mov
push
and
rcll
xchg
sbb
bound
push
inc
push
xor
mov
cmpsb
dec
push
loopne
aaa
out
and
ss
aas
mov
aas
scas
loop
lods
cld
xor
aad
mov
mov
add
sti
in
mov
cmc
pop
push
cmp
rcrl
cmpxchg
cld
daa
xchg
jmp
jecxz
jne
pop
push
dec
cmp
movsb
stos
aad
push
jp
lret
mov
pop
lods
iret
mov
push
cmp
sbb
xor
sbb
sti
mov
lcall
inc
mov
pop
jbe
dec
neg
vunpcklps
test
cmp
pop
push
cmp
mov
stc
and
nop
xchg
cwtl
dec
pop
mov
fcompl
clc
mov
push
jbe
scas
fsubs
jo
adc
iret
addr16
mov
jmp
aad
mov
push
pushf
dec
xchg
xchg
mov
pop
mov
pop
shlb
jmp
mov
scas
xchg
jmp
out
jnp
mov
fxam
nop
mov
shrb
xlat
dec
ja
add
aad
cmpsb
jb
push
add
xor
pusha
or
das
adc
add
cmp
push
scas
gs
jle
mov
insb
fucom
cmp
mov
or
and
pop
inc
adc
repz
shld
and
shlb
ficoms
cmp
push
push
jno
add
pop
push
inc
xor
mov
sbb
mov
cmp
scas
leave
jmp
adc
push
adc
xor
add
sbb
mov
inc
das
fstpl
sbb
jmp
jl
es
push
pushf
and
mov
jbe
cmp
pop
enter
enter
inc
ret
roll
jge
fs
in
xor
pop
mov
push
lods
leave
add
sar
outsb
adc
cltd
jmp
add
and
adc
clc
shlb
cwtl
or
adc
sbb
aam
xlat
aaa
lods
cmpsl
out
movaps
lret
xchg
sbb
pop
sub
int3
scas
xor
popf
pop
ret
pop
jl
icebp
fnsave
and
cld
movsl
xor
mov
push
lcall
jo
aas
sbb
pop
sub
push
insb
stos
inc
xchg
pop
xor
or
inc
and
outsb
cmp
cmp
adc
add
xchg
stc
dec
inc
out
cld
jo
xchg
mov
fiaddl
adc
sbb
lret
imul
mov
ficompl
stos
cmp
lds
mov
xchg
mov
cmpsl
shl
lds
shrb
bound
das
in
xchg
push
pop
xchg
pop
push
out
mov
inc
aas
add
cmp
add
inc
adc
push
ret
shlb
mov
mov
fistpl
mov
enter
pop
sub
sbb
out
rorl
out
push
fstps
jbe
adc
mov
testl
repz
loope
cmp
sbb
hlt
ss
scas
jae
dec
leave
or
into
sarl
test
push
sbb
pop
jns
not
add
loop
jb
or
xchg
cmpsb
les
roll
inc
pusha
jns
xor
xor
lods
icebp
sahf
push
into
inc
push
push
cltd
sub
xchg
leave
or
or
xchg
js
or
adc
dec
aaa
inc
lcall
mov
add
and
dec
outsl
mov
lock
fs
pop
mov
arpl
adc
jmp
jae
jbe
cmp
ss
rcrl
inc
fisubrs
jg
push
or
lock
lahf
xor
dec
pop
xor
adc
inc
dec
mov
adc
movsl
adc
std
les
int
push
xlat
push
out
jg
daa
dec
dec
call
mov
lret
mov
bound
and
sbb
mov
mov
loope
out
incl
ficompl
xor
subl
popf
clc
rcll
mov
jp
or
lahf
push
jnp
movl
push
cmp
sub
arpl
mov
int
enter
or
pusha
out
into
mov
aad
pop
add
fimull
mov
cmp
xor
aaa
inc
jo
and
cmp
out
mov
jnp
lret
pushf
jl
sub
sub
and
mov
dec
and
ljmp
outsb
iret
test
shrl
inc
callw
mov
mov
fiaddl
sbb
ret
ljmp
ficoml
scas
stos
cwtl
sti
cld
pop
sbb
jns
pushf
ja
outsb
and
fldcw
mov
sbb
insb
test
mov
add
cwtl
aaa
or
add
cs
inc
lret
pop
jecxz
insl
lods
es
add
xchg
dec
or
add
mov
adc
push
pusha
add
das
jns
outsb
xchg
mov
mov
pop
jns
sbb
inc
sbb
dec
pop
xchg
hlt
or
jmp
aam
shll
adc
shlb
lock
aaa
jae
and
dec
jg
sti
ds
sbb
cmpsl
movsl
lret
aad
call
push
gs
scas
iret
outsl
subb
inc
inc
outsl
out
add
dec
imul
test
mov
ret
addr16
lds
lock
jnp
fstl
cmpsb
in
lock
push
scas
jg
or
mov
xchg
push
insl
arpl
inc
vcvttpd2dqy
jns
test
fs
lods
sbb
in
data16
shlb
jno
mov
inc
jle
fdivs
add
push
pushf
insl
dec
ret
mov
xchg
std
stc
addr16
outsb
ja
mov
dec
xor
jp
pop
add
and
das
pop
jnp
cwtl
cmp
adc
iret
jp
jb
dec
movsb
fucomi
gs
stos
lcall
out
mull
and
fwait
iret
xor
push
dec
fisttpll
clc
cmpxchg
nop
rcrl
xchg
stos
call
aaa
add
push
aas
aad
mov
jns
fimuls
cmpsb
fcmove
ljmp
js
jne
sbb
mov
pusha
sub
adc
adc
add
pop
adcl
lcall
insl
ss
iret
aam
xor
jb
into
sbb
test
cmp
jg
ret
mov
outsl
jmp
out
jns
mov
outsb
mov
cmpsb
andl
rolb
stos
mov
jo
or
fisubrs
lods
push
daa
andb
shr
pop
arpl
xchg
pop
rcl
pop
or
mov
mov
fiaddl
outsl
mov
inc
int
and
dec
cwtl
dec
jp
mov
repz
out
jmp
jp
pusha
repnz
xchg
inc
xchg
jb
cmpsl
sub
jo
mov
lret
dec
sarl
dec
movsb
sbb
adc
orb
je
inc
xor
das
mov
into
jno
push
fisubrl
popf
rolb
xorl
out
iret
jp
add
ja
jmp
out
cmp
psllq
and
jnp
push
jmp
dec
and
imul
xor
cmp
jle
sbb
loop
sbb
fists
or
shll
push
sbb
fcoml
mov
pop
add
pop
jl
and
imull
mov
mov
insb
jne
imul
movsl
test
and
fbstp
data16
pop
push
push
push
xor
adc
mov
shl
push
cmpsl
mov
adc
cmpb
inc
rcll
enter
mov
pop
fbld
rcrl
ss
mov
je
fistpl
inc
icebp
mov
mov
xchg
sbb
inc
xor
and
out
sub
inc
dec
pop
xor
pop
lock
mov
fwait
push
or
push
sub
push
pop
jns
mov
arpl
and
xchg
jg
xchg
xchg
mov
sarb
lods
cmpb
xchg
incb
dec
js
fstpt
jnp
loop
mov
lds
std
loope
pushf
jo
dec
shrb
cmp
mov
aaa
mov
xchg
gs
pop
pushl
fisttpll
xor
mov
xchg
adc
shrl
mov
movsb
insl
ret
add
jmp
sbb
stos
cmp
jns
xchg
pop
int3
push
mov
pushf
push
and
adc
sub
and
mov
shrl
fdivrp
gs
xlat
jg
adc
mov
movsl
in
fistl
decb
push
nop
pop
adc
enter
sti
ffree
and
pop
jp
jmp
mov
adc
dec
inc
hlt
push
mov
loop
xchg
mov
push
mov
xlat
fdivrl
push
into
icebp
aad
jmp
cmpsb
mov
ret
cld
xchg
aam
loop
or
inc
mov
decl
mov
mov
push
pop
pop
stc
shlb
pop
mov
and
or
divb
mov
mov
cmpsl
mov
adc
jp
test
cltd
scas
or
mov
add
pop
mul
loop
push
popa
jne
mov
ljmp
ficompl
test
sti
stos
sqrtps
mulb
ljmp
hlt
xor
inc
pushf
pop
int3
adc
testb
sbbb
mov
mov
adc
fisubrs
loopne
push
jb
mov
int
sti
ret
out
inc
daa
mov
cmpsl
lods
in
mov
test
inc
adc
mov
test
and
inc
out
std
push
mov
sahf
sar
xor
aas
inc
jle
imul
subb
lds
fiadds
dec
insl
stos
fwait
mov
sbb
adc
jecxz
outsb
ss
fistpll
push
scas
lcall
loop
jg
into
stos
and
push
jmp
in
cmp
out
ret
jb
ljmp
push
stos
inc
inc
inc
or
inc
pop
jo
pop
pop
testb
sbb
sub
scas
mov
test
mov
roll
enter
mov
push
sbb
mov
pop
jle
fisubl
mov
and
ss
andl
dec
cmp
sub
fmulp
adc
adc
and
es
in
mov
jno
shl
jmp
push
rolb
icebp
mov
pop
mov
or
cli
push
stos
stc
leave
incl
sub
int
pushf
sub
inc
out
pusha
mov
mov
inc
jge
cmp
mov
notl
adc
inc
add
shl
insl
rep
ret
pop
fldenv
mov
cwtl
lret
adc
and
add
xor
mov
ja
xor
pop
adc
jl
jge
adc
and
dec
loope
mov
jmp
adc
xchg
push
out
in
and
inc
pop
inc
cmc
jmp
mov
push
ss
xchg
rcl
out
lahf
cmp
dec
dec
sub
push
mov
xor
dec
cwtl
ficompl
push
sub
cltd
dec
les
mov
xchg
jmp
lds
dec
cmp
repnz
gs
sbb
fs
mov
xchg
sub
or
lods
ljmp
ss
mov
ljmp
mov
pop
sbb
adc
outsl
insb
mov
rcll
mov
jmp
pusha
or
inc
repz
sub
mov
lods
in
push
push
cmp
lret
jnp
cwtl
lahf
cmc
push
xchg
adc
lahf
fimuls
stc
cmpb
or
movsb
enter
push
push
out
test
cmc
loopne
and
cltd
loopne
out
xor
inc
jne
popf
div
cmpsb
fnstenv
cmp
jmp
push
push
or
push
push
jns
lds
sti
inc
sub
and
sub
int
dec
fcomi
shll
xchg
cmc
and
mov
cmp
cli
cmc
sub
or
aas
in
cmp
jnp
push
xor
and
xchg
in
scas
jle
ja
mov
das
mov
mov
orb
in
mov
lret
push
adc
lea
rcrl
dec
daa
arpl
dec
push
pop
add
sahf
adc
pop
fcomip
sbb
or
adc
nop
scas
push
ret
xchg
mov
repz
push
jecxz
lcall
push
mov
lods
sarb
adc
jg
std
inc
popf
fisubrs
push
subps
mov
sbb
das
cmc
xchg
aam
rcrb
push
lds
xchg
mov
mov
dec
sub
jmp
cld
and
dec
xchg
pop
imul
cmp
test
shll
push
inc
adcb
lahf
jcxz
pop
popa
fistl
loop
popl
or
pop
mov
int3
sti
or
int
in
mov
loope
push
mov
jbe
popl
pop
mov
nop
cmp
rolb
add
xchg
push
repz
add
fcmovnbe
push
int3
out
pushf
fidivrl
fs
leave
inc
shll
out
pop
pop
cli
nop
divb
jne
and
in
insl
fwait
pop
in
lock
sbb
jnp
xor
in
mov
ds
push
fldpi
lahf
notl
enter
fucomip
sahf
lods
mov
jecxz
lods
and
mov
es
inc
loopne
sub
jle
inc
in
sub
fstpl
imull
les
fisubs
les
xor
mov
sub
and
jp
sbb
cld
xlat
in
ss
mov
lds
pop
pop
hlt
xchg
pop
cmpsb
mov
lret
push
push
jg
inc
iret
int
push
out
mov
sub
or
pop
jmp
mov
and
and
push
and
and
movsb
in
mov
stos
add
dec
lods
mov
jge
mov
inc
leave
xchg
xchg
xor
dec
xlat
divl
lcall
outsl
pop
add
xor
sbb
enter
or
push
or
testb
lea
mov
leave
xchg
cmp
cli
jae
push
jo
sahf
roll
adc
pushf
dec
pop
cmp
divl
rorl
push
adc
insb
sub
cs
test
push
xchg
sbb
or
scas
fstps
mov
pop
movsb
jecxz
sahf
sbb
mov
inc
outsb
subb
shr
pusha
movsb
iret
ffree
movsb
shlb
inc
mov
lret
mov
out
cmp
test
je
rclb
out
in
sbb
dec
jbe
jp
jne
sarb
bound
rcr
pop
cli
sahf
mov
and
push
jne
cmpsb
sbb
pop
ret
outsl
in
ss
mov
sub
into
loopne
sub
popf
pop
cltd
out
push
mov
jl
mov
push
out
adc
and
fldenv
mov
outsl
das
push
jg
mov
add
sub
and
push
stos
push
mov
fwait
xlat
repz
xlat
mov
or
cmp
xchg
push
cld
test
sub
push
jg
jle
jns
rorl
aaa
aaa
mov
testb
dec
lock
jecxz
jl
xchg
mov
imul
push
outsl
es
mov
aas
pop
mov
ljmp
movsl
lea
lock
ljmp
or
push
pop
mov
push
enter
pop
push
mov
jp
xlat
jnp
cs
jae
subl
or
mov
ss
ds
pop
leave
idivb
push
data16
inc
add
rorl
arpl
icebp
cmp
movb
aas
lods
outsb
xor
pminsw
insb
xchg
push
mov
xlat
cli
and
mov
pop
es
jl
xchg
js
fcoms
push
sub
aad
and
xlat
enter
mov
xor
in
insl
jmp
dec
cmp
jle
mov
sahf
inc
out
xchg
xchg
nop
xor
pop
shrl
xor
jnp
popf
xchg
mov
insb
cwtl
or
bound
mov
movsb
pop
xchg
cmp
cmp
scas
ss
sti
jno
jmp
lea
push
dec
push
cltd
cmp
js
sbb
sub
ret
imul
dec
mov
pop
lds
lret
icebp
ljmp
ja
mov
mov
pop
pop
out
jnp
in
mov
sub
adc
cwtl
cmp
mov
dec
inc
es
fwait
push
pop
jns
cltd
and
and
nop
dec
faddl
xor
pop
inc
leave
jno
jne
jnp
mov
aas
scas
mov
fs
insb
or
pop
hlt
ret
lea
ficompl
dec
out
adc
jge
pop
sbb
stos
outsb
mov
jo
xchg
lret
in
xor
inc
dec
daa
mov
jo
xlat
xchg
xor
fsubp
xchg
insl
jno
adc
rolb
pop
xchg
inc
fcoml
pop
int
mov
jb
push
ds
lea
movsb
scas
xchg
enter
xor
jmp
ret
out
push
js
mov
lcall
push
sub
add
jp
mov
pop
push
sbb
sbb
xchg
or
xchg
mov
daa
sti
sbb
mov
or
xor
push
jnp
inc
or
sbb
outsb
popf
iret
mov
lret
dec
add
and
out
jmp
out
fsub
inc
and
scas
pop
notb
mov
pop
add
cmpl
adc
sub
cmpsl
xor
jns
sahf
popf
cmp
fldl
push
dec
js
push
rol
jl
shr
stos
in
inc
add
mov
cvtps2pd
mov
lods
in
mov
scas
scas
mov
jnp
scas
inc
mov
outsl
inc
push
sahf
jns
push
ja
aaa
stos
push
dec
cmp
fnstcw
mov
dec
push
bound
jp
mov
mov
adc
push
and
xchg
movsb
pop
pop
cmp
in
int3
add
inc
jo
xchg
inc
ss
cmc
xor
sbb
pop
dec
jmp
xlat
out
into
push
xorl
mov
xchg
jl
cmp
mov
mov
cltd
sahf
repz
fidivrl
ss
out
jmp
nop
mov
js
jmp
lock
push
mov
stos
std
or
lods
xor
fisttpl
addr16
mov
cmp
rcrb
sbb
fisubs
in
fildll
cmp
push
and
iret
ret
xor
sbb
push
push
and
inc
scas
lods
xor
mov
test
sbb
mov
iret
les
pop
lahf
test
jge
ss
xchg
ret
clc
jo
shrl
cmp
push
mov
xor
xchg
push
cmc
sub
dec
shlb
pop
or
pop
mov
dec
fnstcw
nop
jmp
pop
lods
fnstenv
mov
mov
leave
inc
mov
cltd
ret
push
push
add
xor
lahf
dec
inc
shll
xchg
mov
inc
sub
cmpsl
mov
adc
mov
fldl
sti
fsubl
iret
push
dec
mov
jne
ud1
xchg
jne
iret
imul
pop
mov
jmp
pop
mov
sbb
sbb
into
dec
mov
ja
adcl
repz
jae
ss
dec
rcl
cmp
es
int
test
shr
and
rcrb
xor
jno
xor
loopne
xchg
jmp
mov
mov
and
sbb
es
lahf
rcrb
cmp
xor
rclb
inc
lret
enter
mov
xchg
rcrl
cmpsb
xchg
cmc
out
fdivs
loopne
stc
pusha
mov
rolb
xor
dec
push
dec
dec
sbb
and
mov
stos
jbe
pop
xchg
mov
xchg
pop
jo
outsl
bound
mov
jno
fsubr
xchg
stos
imul
iret
jne
ret
push
es
test
mov
mov
add
test
ret
shll
mov
aaa
push
imul
push
cmp
adc
jmp
push
push
cmp
mov
mov
xor
sets
insl
jl,pn
loope
inc
shlb
pop
gs
inc
stos
inc
xlat
shrb
pop
xchg
dec
sbb
or
in
dec
mov
xchg
sbb
and
mov
repz
test
pop
xchg
in
leave
adc
inc
fdivl
fadds
mov
cld
mov
repz
out
mov
push
pop
test
outsl
mov
loope
sti
rcl
fimuls
xchg
jne
xchg
push
je
mov
sbbb
lret
rorl
ljmp
and
movsb
pop
out
pop
push
pop
push
inc
inc
push
mov
movsl
ret
ret
icebp
adc
loopne
cltd
add
push
div
fiadds
mov
ret
inc
push
jae
pop
lret
jg
adc
xor
ja
outsb
add
aas
xchg
mov
repz
fisttps
push
call
add
jg
pop
int
mov
dec
clc
test
cmpsl
test
scas
clc
aam
xchg
aam
xor
xchg
cli
fsubs
imul
adc
sub
repz
imul
xlat
jge
push
aam
push
pop
mov
sub
jb
jne
mov
xor
and
sbb
mov
test
jne
jbe
std
inc
sub
iret
or
sbb
sbb
push
clc
and
xchg
popf
in
mov
sub
lds
mov
test
dec
nop
out
cmp
mov
add
sub
dec
iret
dec
adc
sub
mov
out
outsl
dec
push
divb
dec
sahf
push
fistpl
bound
je
jae
lahf
xchg
nop
or
sub
mov
mov
out
xchg
adc
fdivrs
sbb
scas
shlb
loop
or
cmpsl
in
cmp
scas
loop
gs
mov
push
cmp
in
scas
add
mov
sbb
ja
int
dec
daa
andb
loop
pop
out
mov
popa
ds
adcb
inc
out
pusha
push
pusha
out
mov
enter
adc
xchg
lret
fidivrs
xlat
mov
adc
test
ja
dec
mov
cmp
test
xorb
xchg
rorb
push
fists
js
call
or
test
outsb
and
jmp
inc
lret
hlt
lret
add
insb
ret
sub
dec
mov
sbb
js
sub
adc
cmc
dec
int
loope
shlb
mov
outsl
in
cmp
pop
adc
fiaddl
pop
pop
fstpl
out
sahf
or
xlat
fsubs
xchg
rorb
les
push
dec
and
jl
mov
mov
mov
idivl
vucomisd
mov
mov
or
and
dec
loopne
xor
mov
jns
arpl
lock
mov
jb
mov
fidivrl
popf
out
mov
inc
outsb
cwtl
call
push
and
jnp
cli
xor
fiadds
cmp
enter
push
jl
sbbl
sarb
iret
xor
cmp
add
imull
dec
mov
test
fists
pop
push
pop
jbe
lret
stos
aad
sub
lahf
xor
ss
pop
sahf
gs
fisubs
sahf
jmp
loop
ds
adc
das
jne
mov
pusha
inc
out
pop
push
std
xchg
icebp
cmp
fistpl
cwtl
mov
imull
or
pop
popa
inc
sbb
xor
mov
jmp
data16
insl
pop
xor
mov
out
push
jp
lcall
push
mov
in
movsb
ds
mov
inc
fstps
lods
and
push
dec
clc
mov
mov
insb
out
mov
enter
jnp
imul
std
mov
add
les
fcomps
in
test
xor
ja
popa
lods
loope
lock
nop
adc
lods
and
or
fists
lock
or
int3
and
rorl
subb
or
imul
sbb
das
ss
ds
je
xlat
mov
jb
jnp
imul
jns
mov
push
sbb
andps
stos
in
push
sbb
cltd
dec
popf
dec
aaa
add
pop
push
mov
xor
jbe
gs
or
out
and
popa
insb
cmp
std
and
push
ffree
inc
add
mov
int3
mov
insl
hlt
jg
or
in
nop
sub
arpl
das
cmp
mov
sbb
leave
push
add
imul
or
jecxz
sahf
push
jb
std
in
ljmp
out
push
into
out
push
test
mov
sbb
mov
or
adc
cmp
sti
xor
cmpsb
out
inc
cmp
push
ds
sbb
bound
or
int
sub
mov
jbe
adc
mov
out
popf
bnd
add
rorl
lret
pop
inc
jbe
lea
cmp
out
and
add
cmpsb
pop
push
add
mov
xchg
jno
mov
xchg
mov
push
mov
push
pop
outsb
add
pop
and
pop
jbe
cmp
xchg
cwtl
xchg
sbb
nop
jg
sbb
lret
dec
incl
adc
add
in
iret
add
popaw
inc
mov
ja
fisubs
and
xchg
scas
xchg
ret
js
mov
xchg
sbb
ja
xchg
cmpsl
mov
xchg
sub
aaa
xchg
pop
and
jmp
lds
or
sbb
pop
fdecstp
out
adc
imul
lock
pop
and
push
push
inc
push
stos
inc
or
std
pop
test
xchg
push
mov
mov
loopne
adc
and
xor
push
push
fsubr
mov
stc
push
leave
xor
test
push
jmp
fs
cmpsb
cmp
mov
add
sub
inc
setnp
mov
add
lret
outsl
lret
or
lcall
dec
sub
mov
loopne
movsl
mov
ret
xlat
cmp
xchg
les
jp
sahf
rorl
jo
iret
sbb
lods
xchg
pop
fimull
adc
arpl
pop
aas
adc
and
aam
ds
add
sub
loop
dec
and
adc
mov
dec
sub
add
xchg
stc
bound
mov
test
bound
insl
loopne
dec
push
dec
enter
xor
in
cld
lret
lea
sub
sub
cld
pop
push
sub
movsb
adc
and
pop
jo
fs
je
ret
data16
lods
sub
inc
xchg
push
cs
ret
sbb
sti
in
adc
and
jne
adc
mov
dec
daa
mov
inc
fbld
in
mov
xor
mov
addb
into
jno
idiv
jge
mov
xchg
stc
jnp
sub
cs
dec
insb
cmpsl
mov
arpl
add
mov
push
test
leave
xchg
les
adc
cld
cmp
mov
pop
into
mov
xchg
lods
fs
pop
jbe
mov
push
and
das
push
add
lea
movsl
out
dec
xchg
dec
xchg
push
push
bnd
jae
mov
mov
xchg
pop
pop
push
push
and
pop
inc
fsubrl
adc
cmp
or
into
push
sub
or
push
test
outsl
jno
jmp
inc
inc
inc
scas
jne
mov
js
je
rcrb
fwait
data16
jne
clc
inc
fwait
mov
lret
mov
adc
dec
cmp
lret
mov
dec
pop
pop
in
push
xlat
ljmp
in
inc
xchg
aad
iret
xor
dec
ret
push
cmpl
inc
sub
gs
mov
sbb
daa
aas
ficompl
stc
mov
clc
es
jnp
or
push
add
cs
jle
adc
or
push
fwait
andl
in
ljmp
insb
and
insl
adc
add
jge
or
jns
cwtl
aas
ret
bound
push
or
out
xlat
and
clc
lcall
xor
lods
test
jg
or
inc
ja
das
cmp
mov
in
lret
popa
xor
fcmovnb
push
imull
in
loope
test
mov
stos
or
cmp
mov
xchg
push
lds
test
adc
adc
jle
fs
fsubs
fwait
add
sub
sub
mov
xor
lods
inc
les
dec
xchg
pop
mov
mov
inc
and
pop
mov
push
pop
sahf
push
arpl
pop
or
inc
jg
je
sti
daa
sub
insl
push
clc
test
jge
es
add
xchg
and
jp
bound
push
negb
jge
xchg
std
push
jmp
sahf
and
test
loope
test
pop
cmpsb
mov
pop
sub
ljmp
xor
adc
cmp
pop
aas
mov
je
mov
out
je
ja
addr16
shlb
addb
negb
xchg
inc
mov
sub
xor
sbb
test
leave
aad
push
shlb
leave
sub
in
xchg
push
fadds
bound
push
mov
nop
icebp
push
jno
xor
sbb
cmp
fwait
xor
mov
iret
paddsb
pop
xchg
mov
cli
scas
out
lahf
fnstsw
add
out
test
jmp
adc
add
test
push
xor
dec
pop
neg
sub
mov
or
dec
add
push
sub
rcr
leave
imulb
mov
mov
sbb
adc
lahf
test
pop
push
sbb
dec
jne
xchg
out
imul
ds
ror
out
out
loop
cmp
in
popl
pop
movsl
insl
jmp
adc
rol
mov
push
lods
mov
aas
mov
adc
and
mov
repnz
nop
sub
and
das
push
lret
repz
stos
pop
and
movsb
mov
pop
push
std
mov
mov
leave
or
add
mov
ljmp
sub
jb
pop
aaa
or
xor
mov
sbb
lret
subl
sbb
mov
mov
pavgw
dec
rclb
ret
xchg
stc
in
add
or
mov
jo
daa
sub
mov
inc
xor
es
cmp
out
jp
and
push
jmp
sub
sub
sub
subb
sbb
inc
addr16
in
push
mov
push
aaa
push
test
jle
popa
cwtl
fwait
mov
inc
push
pop
lds
fcoms
cmp
add
es
push
gs
add
je
adc
dec
jg
scas
sbb
mov
mov
xchg
sub
insb
jmp
pop
ret
adc
aaa
inc
jecxz
or
jp
movl
and
mov
bnd
dec
movsl
daa
stos
cmc
shlb
fisttpl
pop
add
inc
dec
pop
sbb
addr16
jge
iret
aaa
jb
mov
bound
sub
or
jo
dec
jmp
xchg
xchg
mov
out
adc
jmp
inc
fstps
call
sbb
roll
icebp
inc
mov
push
das
out
faddp
mov
sbb
lods
loopne
or
mov
add
cmpsb
push
adc
and
insl
inc
dec
push
pop
sbb
and
xor
ret
xlat
mov
dec
xchg
flds
mov
fcoml
out
int3
cmp
cmpsb
jmp
sub
pop
outsb
into
mov
xor
add
int3
test
stc
jbe
push
loopne
daa
int
loop
lea
cli
lods
arpl
adc
push
jno
lret
push
add
out
lahf
daa
repnz
add
lret
pop
sbb
out
sbb
and
push
shl
push
or
push
loopne
mov
sti
fnstcw
js
adc
push
pop
cmc
pop
add
repz
fimuls
lcall
test
filds
cmpsl
js
les
adc
les
cli
inc
aad
mov
movsl
lock
or
adc
insl
push
js
pop
movsb
es
pop
call
push
stos
int
and
test
mov
jnp
push
sub
movsb
cmp
pop
int
addr16
fwait
jg
mov
xchg
cmp
or
xor
cmp
or
add
jnp
add
inc
pop
jbe
popf
xchg
sub
cmc
cmp
mov
aam
lret
test
xchg
xchg
rolb
adc
sbb
xor
and
sarb
cs
cmp
ror
adc
push
dec
cmp
sti
lods
addb
or
cmpsb
std
sbb
ret
repz
int3
jmp
test
sbb
mov
popa
dec
xor
jae
pop
rorb
sbb
clc
or
mov
je
jns
mov
add
adc
mov
xchg
dec
pop
in
dec
mov
sub
es
mov
int3
add
outsl
push
mov
mov
sbb
cmp
jnp
out
inc
iret
jo
mov
lahf
mov
xor
lea
sbbb
cli
sub
xchg
mov
pop
mov
ljmp
push
pop
fisttps
push
push
fiaddl
inc
cmp
xchg
mov
pop
fsubs
lret
js
lahf
sbbb
sbb
int3
xor
mov
inc
popl
aas
cmp
and
pop
repnz
js
dec
cmp
xchg
nop
lret
imul
clc
int3
or
mov
cwtl
ss
aam
mov
push
sbb
in
icebp
adc
xchg
test
jle
dec
fisttpl
push
adc
data16
fiaddl
sub
mov
dec
jb
sbb
sub
subb
lahf
sub
out
or
mov
push
ret
mov
ret
sub
movsb
loopne
add
mov
lcall
imul
lret
xor
out
mov
sub
in
fldl2e
and
jb
mov
leave
mov
pop
push
and
hlt
cs
cld
mov
xor
lock
xlat
ss
cmc
inc
ljmp
push
fs
aas
push
daa
testb
mov
jne
jae
sbb
mov
xchg
xor
daa
jle
rcl
jmp
add
hlt
xchg
push
movsb
lahf
rcll
cwtl
jo
sub
pop
mov
adc
sti
mov
test
leave
pop
sbb
aas
sub
and
mov
mov
mov
mov
enter
cld
sub
mov
pop
jo
test
scas
xlat
orb
push
lock
in
jbe
repz
mov
inc
pop
leave
mov
jb
mov
hlt
push
in
lahf
xchg
pop
test
inc
ret
sti
sub
cmpsl
or
gs
cmp
push
xor
adc
add
jnp
outsl
stos
xlat
xor
jp
mov
rclb
mov
fsub
shrb
lea
repnz
das
popa
sbb
dec
sti
cli
pop
movsb
shrd
xchg
jp
shlb
cmpsb
jae
movsl
dec
mov
and
cmp
adc
add
dec
lcall
loope
scas
cmp
dec
push
icebp
imul
setns
sbb
lds
jmp
mov
mov
xor
lock
cmp
repz
cld
add
roll
dec
jge
sbb
sbb
insl
or
push
mov
mov
cmp
pop
inc
xchg
sub
xor
lret
or
cmp
gs
xor
les
pop
pop
pop
insl
nop
sbb
jle
jbe
imul
rcrl
inc
cmp
cmp
and
xorb
je
in
aaa
movb
xchg
inc
pop
and
adc
bound
nop
shll
ja
loopne
fwait
xor
jnp
arpl
negb
add
adc
xchg
pop
cmpsl
jnp,pn
sbb
sub
sbb
pop
xor
dec
nop
or
pop
lods
loopne
iret
xor
js
es
jo
add
popa
pop
in
mov
outsb
sub
out
mov
enter
enter
push
leave
mov
inc
adc
sbb
mov
out
sub
jae
lret
insb
xor
dec
andb
popa
cmp
das
xor
mov
pushf
js
jle
scas
inc
or
ret
push
test
and
lods
clc
iret
cs
leave
fmulp
xlat
push
out
adcb
scas
aad
sar
inc
xchg
out
xlat
jecxz
icebp
out
pop
xlat
xchg
mov
sahf
aaa
add
xchg
sbb
dec
scas
mov
pop
addr16
pop
push
pop
mov
nop
imul
clc
cmp
mov
dec
shll
pop
aas
sbb
sub
in
jae
push
fdivrs
add
push
stos
roll
test
iret
jl
inc
and
xchg
popa
mov
push
inc
sub
sahf
inc
push
or
aad
out
xchg
push
sub
aam
cmpsl
mov
loop
mov
and
aad
imul
inc
xlat
subl
or
sub
jno
aaa
fldcw
or
imul
cmp
pop
imul
or
push
leave
es
stos
pop
xchg
es
insb
in
xchg
jno
mov
pop
sbb
jecxz
xor
inc
push
xchg
lret
jl
xor
mov
fidivl
jg
jno
scas
stc
hlt
repz
sti
and
fxsave
jecxz
test
push
imul
dec
mov
aaa
pop
int3
and
or
xchg
push
call
repz
fdivp
xchg
dec
jo
ss
mov
shlb
lods
fisubl
cmp
pcmpgtd
movb
das
cmp
outsl
mov
fsts
jmp
insl
ljmp
pop
jg
xchg
in
out
jno
pop
lahf
push
push
int
setbe
mov
ret
xchg
data16
adc
sbb
fcom
and
lret
add
cmp
adc
stc
iret
movsl
inc
inc
sbb
mov
jmp
je
fs
popl
pop
dec
insb
pop
rcl
add
imul
insb
ret
xchg
adc
stos
sub
cld
ret
fwait
adc
in
lret
push
pop
aad
sbb
sub
pop
pop
pop
pusha
mov
add
add
movsb
pop
aam
repz
and
inc
je
mov
push
inc
daa
lods
pop
push
xchg
mov
outsb
shrb
inc
insb
out
stc
jl
sbb
xchg
mov
stc
pop
xchg
sbb
out
sub
pop
imul
imul
inc
mov
iret
add
loope
xor
setnp
fisubrs
aas
sahf
mov
mov
push
fistl
xchg
rcll
xor
inc
pushf
add
fsubrl
mov
adc
sub
dec
pop
ret
cli
ficompl
or
stc
ret
dec
sub
js
cmpsb
fsubrs
lcall
jmp
cmpsl
jmp
sub
insl
fmuls
push
mov
and
mov
mov
enter
pop
sbb
adc
mov
stos
sbb
inc
mov
call
addl
addr16
fmuls
xchg
mov
push
cltd
hlt
mov
rorl
push
insl
xchg
cmp
cwtl
roll
cmova
out
jle
add
push
xchg
adc
das
aam
notb
add
stc
mov
imul
lods
xchg
sub
lods
hlt
pop
data16
ss
fsubrs
cmc
mov
pop
fwait
sbb
xor
push
js
fstpt
aaa
push
jne
and
stos
jne
jle
stos
cmp
fldl
out
mov
arpl
fs
sahf
push
int
push
cmp
ds
xchg
mov
scas
pop
mov
mov
dec
xor
leave
in
xor
scas
dec
mov
ret
mov
in
dec
xchg
mov
lcall
sub
push
xchg
adc
clc
out
je
ss
addr16
sub
sub
add
imul
imul
mov
and
mov
je
push
or
add
aad
in
test
jb
cltd
xor
jnp
stos
add
lods
ret
int
in
dec
lret
js
loop
adc
cmp
pusha
hlt
add
sub
inc
mov
inc
repz
adc
mov
test
in
cmp
cwtl
loope
add
mov
inc
pop
cwtl
and
popa
js
sahf
and
push
push
loope
sub
push
in
sbb
sbb
and
in
xchg
mov
test
scas
mov
xor
dec
mov
out
scas
mov
pop
jae
lods
or
mov
mov
ja
cmp
mov
daa
lea
push
push
or
lret
xor
jo
imul
dec
and
push
lahf
inc
dec
sub
dec
mov
and
or
popf
xor
pop
jecxz
cli
cmpsl
in
mov
add
cmp
ret
out
imul
mov
lret
dec
hlt
jmp
mov
mov
fnstsw
push
mov
out
aaa
daa
cmc
adc
push
inc
sarl
or
repnz
popf
clc
scas
and
imul
ss
jns
test
xor
and
das
iret
jbe
push
je
pop
daa
lods
mov
mov
clc
jnp
rcll
push
pop
mov
pop
cmp
js
cmp
jno
inc
fiadds
scas
aaa
add
push
mov
adc
in
jne
outsl
int
daa
add
sub
repnz
xchg
mov
sbb
jae
jge
xchg
mov
fldenv
mov
int
fwait
shrb
xchg
mov
mov
mov
or
out
mov
mov
icebp
pop
scas
dec
sub
data16
push
jnp
test
cwtl
mov
lahf
inc
xor
cld
add
dec
xchg
cmpsl
sub
sbb
cwtl
or
testl
fisttps
add
lock
sbb
push
and
adc
jg
push
xchg
insb
enter
adc
aas
lock
cwtl
cmpsb
xchg
inc
xor
imul
jl
cwtl
and
stos
push
pop
icebp
jmp
jmp
mov
xor
repnz
and
nop
mov
jbe
lcall
mov
lock
mov
ret
sahf
sub
adc
and
imul
shll
lret
adc
jno
hlt
lock
flds
ret
lock
inc
lds
hlt
test
push
out
rclb
or
sub
iret
subb
push
xchg
lea
sbbl
mov
mov
sarb
sub
xor
stos
add
stos
inc
mov
daa
icebp
testl
xor
sbb
fwait
ss
repz
cmp
xchg
add
jmp
jmp
loopne
push
push
movsl
test
lds
adc
ret
out
push
enter
jmp
ljmp
mov
cmpsb
fisubl
int
data16
stos
iret
shlb
add
push
mov
pop
fsub
cmc
aas
mov
repz
push
fucom
push
lock
xor
fildl
push
ljmp
inc
popa
xchg
push
and
jns
push
movsl
cltd
mov
cli
fmuls
mov
xchg
pusha
mov
adc
push
inc
testl
fs
inc
sti
out
mov
adc
push
sub
cltd
dec
inc
mov
out
arpl
mov
jnp
mov
xor
stos
dec
pop
cmp
lds
fwait
push
in
aaa
ret
leave
dec
push
frstor
lods
cli
das
into
lods
pop
hlt
mov
cli
pop
jbe
lret
mov
sub
jns
pop
xchg
in
aas
jno
inc
stc
cli
sbb
xor
pop
aam
jo
jo
sub
stc
lret
insb
addr16
and
inc
dec
ret
jo
lahf
inc
dec
jl
sub
mov
inc
fsubrp
scas
mov
cmp
xchg
repnz
cmc
loope
ds
xchg
xor
sti
test
or
cmp
popf
sarb
mov
jge
gs
and
mov
jnp
pop
pop
incl
and
js
fwait
or
xor
xor
repz
in
add
adc
fisttpl
sub
mov
aas
and
or
jbe
add
out
and
jl
sarl
cmp
pop
insl
pop
jle
xor
pop
or
hlt
add
andl
repnz
fisttpl
mov
jbe
scas
pop
xchg
xor
push
cmp
inc
mov
je,pn
jne
fldenv
mov
movsl
xchg
sahf
iret
iret
pop
sub
mov
jle
mov
cmpsl
loopne
pop
mov
arpl
cmp
jmp
leave
out
lea
jne
xchg
das
icebp
outsb
es
inc
scas
mov
outsb
fisttps
push
imul
insb
xchg
loopw,pn
and
mov
mov
insl
cmp
cmp
pop
sub
pop
mov
add
jge
sbb
xchg
into
imul
or
or
iret
pop
jb
imul
dec
and
jne
mov
mov
data16
fwait
out
fldt
jne
add
dec
into
in
xchg
dec
adc
adc
or
pop
loop
lret
jno
fnstsw
in
subb
leave
into
in
xchg
loope
fimuls
lods
loopne
int
sbb
pushl
push
rcr
in
inc
pop
sub
push
jb
mov
xchg
popf
dec
cmp
mov
and
in
cmpsb
std
loop
pop
leave
xchg
pop
mov
mov
add
xchg
mov
dec
shll
shrb
pop
imul
shl
cmpb
jg
xor
jns
les
xor
xchg
mov
add
mov
jg
adc
into
or
lret
test
stc
mov
sub
lret
add
pop
test
insb
out
pop
sbb
lods
jae
insb
xchg
adc
leave
inc
or
push
mov
fiaddl
cmovle
call
jns
inc
jmp
push
mov
and
popf
mov
orb
add
aas
gs
or
jecxz
int3
ljmp
sar
push
jecxz
jl
and
xchg
popa
cmpsl
or
xor
in
or
inc
push
lods
cld
pop
dec
gs
or
sbb
loopne
sub
adc
or
mov
enter
and
adc
dec
push
sarl
pop
lock
push
push
mov
int3
cwtl
loopne
ljmp
pop
xor
shrl
outsl
jl
or
sub
push
les
add
jg,pt
lea
scas
into
adc
sub
add
add
cwtl
mov
jecxz
pop
and
sub
sbb
mov
imul
cmpsl
push
sahf
out
ret
gs
jg
sub
imul
add
insl
enter
repnz
push
add
in
fisttps
mov
cmp
add
ret
mov
adc
add
mov
ja
push
cltd
adc
rcll
es
lods
pop
into
clc
jle
mov
sbb
push
xor
scas
and
outsl
xor
sub
orl
shr
mov
mov
loop
jp
pop
jmp
or
sbb
mov
rolb
and
dec
push
cmp
lods
into
in
sbb
sub
test
es
jle
das
in
xor
mov
sub
repz
sahf
ja
cltd
push
rcrb
add
cmp
push
lods
xor
pop
mov
pop
aas
jmp
loope
pop
cltd
jg
ror
cmp
jns
out
mov
lea
jns
aam
ljmp
push
mov
scas
and
pop
adc
adc
sarl
sub
leave
imull
pop
repz
sti
cltd
push
add
les
dec
and
lcall
in
sbb
orb
pusha
push
je
stos
shrl
in
lds
push
pusha
push
icebp
mov
inc
inc
sahf
mov
mov
inc
ljmp
and
xchg
fwait
addl
or
ss
xor
int3
pop
mov
jo
push
outsl
sub
xor
fstl
sub
cmpsl
push
pop
das
imul
hlt
inc
inc
stc
loopne
sbb
push
outsl
mov
xlat
jmp
inc
lods
xor
xlat
cmp
stos
stc
push
sbb
mov
mov
or
in
dec
js
mov
push
mov
pop
mov
mov
cs
xor
xor
fstpt
jl
ud0
push
mov
or
ret
pusha
push
lods
loopne
das
jmp
or
addr16
gs
or
pop
mov
fistl
pop
icebp
loopne
in
mov
cmp
cwtl
out
fldenv
test
ficomps
dec
dec
orb
jae
aad
jg
cmp
fsubrs
fwait
outsl
shlb
cmpl
adc
mov
mov
cltd
aam
aaa
adc
mov
pop
sahf
adc
ret
cmpsb
cmp
pop
aad
dec
xchg
test
addr16
test
fcoml
or
push
lret
js
lahf
cmp
inc
icebp
push
arpl
pop
and
fidivrs
vhsubpd
sub
jns
mov
lret
pop
mov
inc
mov
push
and
stos
lods
iret
insl
xor
inc
sbb
dec
insb
ret
pop
sub
mov
cmp
test
xchg
and
inc
sub
jno
sbbb
push
cmp
rcr
hlt
inc
inc
pusha
xlat
cwtl
jg
mov
pop
stos
xchg
daa
mov
iret
push
fildll
je
aam
xchg
out
jp
cmpb
sarb
xchg
movsb
jp
or
pushf
push
icebp
les
adc
xchg
push
int
dec
arpl
sbb
ficoms
mov
mov
inc
jmp
repz
dec
sbb
lahf
or
in
sub
adcb
das
xchg
dec
push
dec
sbb
lods
jae
dec
mov
shr
mov
fsubs
sbbl
in
movsb
pusha
movsb
cmp
movsl
ret
inc
push
lcall
mov
sti
into
inc
cmc
andl
lock
push
aas
insl
jl
jmp
add
push
or
cwtl
add
mov
pop
cltd
cmp
nop
std
int3
fnsave
cmpsl
dec
mov
mov
adc
pop
add
and
daa
or
ror
xchg
ffreep
mov
xor
dec
mov
iret
xor
inc
inc
loope
push
mov
roll
sub
sar
fs
test
xchg
int3
leave
shll
xchg
test
sub
aaa
ret
lds
sbb
shlb
jle
xor
shrb
mov
jg
adc
xchg
or
mov
dec
aad
rorl
out
jne
fisubrl
jae
and
jae
sub
addr16
mov
adc
gs
out
and
cmp
out
push
and
ficomps
cltd
leave
xor
popw
cmp
imul
mov
cwtl
loopne
jae
mulb
lods
pop
inc
sub
push
mov
inc
xor
rcrb
iret
adc
jge
sub
jl
js
sarb
int3
subb
incb
mov
test
adc
mov
add
lock
cmp
pop
iret
mov
mov
insl
xchg
jno
mov
sbb
les
adc
push
push
adc
or
sbb
arpl
adc
mov
fdivl
xchg
sub
xchg
stos
fdivrl
jle
dec
sbb
jo
adc
orb
popf
jp
js
jp
cmp
push
mov
mov
pop
xor
test
pop
aam
fs
popf
insb
movsl
loop
mov
sahf
scas
sahf
xor
mov
fists
pop
adc
mov
mov
xchg
jp
lea
dec
pop
mov
mov
into
fists
insl
les
jo
stos
inc
xchg
cmpsb
inc
bound
nop
adc
sbb
sbb
lahf
xchg
jecxz
mov
inc
and
pop
sub
outsl
js
mov
divl
mov
ret
mov
shlb
ljmp
je
pop
jne
jbe
xor
adc
inc
int3
fistps
les
div
dec
and
adc
or
sub
mov
add
lods
stos
es
xchg
xlat
xchg
ja
in
dec
mov
ret
push
pop
pop
mov
sbbb
cmp
cmpsb
mov
and
inc
fucomi
pop
and
xor
or
pusha
xor
adcb
sub
jne
mov
cltd
cltd
pop
or
jle
adc
mov
ret
dec
sub
sbb
call
addr16
cmp
xor
sbb
xchg
je
adc
inc
out
sub
push
outsl
xchg
rorl
iret
dec
sar
lret
pop
rclb
cmp
repnz
mov
sub
sub
xchg
cmp
jmp
mov
sar
xchg
loop
push
or
add
pop
iret
arpl
in
and
dec
adc
cmp
test
jbe
inc
movsb
mov
cwtl
in
cmp
push
aas
cs
repz
ja
mov
add
adc
push
xchg
idivl
mov
cmp
pusha
mov
jbe
sub
mov
gs
cwtl
cmp
xlat
pop
js
xchg
in
xchg
sub
and
addr16
orb
mov
lock
mov
mov
lahf
mov
mov
xchg
mov
std
cli
hlt
cmp
sbb
ljmp
jnp
push
or
sbb
dec
mov
dec
loopne
pop
cmpsb
cmc
cltd
xor
rol
pop
cmp
daa
insl
and
push
xlat
adc
xor
hlt
fmul
icebp
aam
insb
inc
fwait
addr16
nop
cmp
outsl
in
mov
fs
xor
bound
iret
imul
dec
jmp
leave
pop
cmp
imul
adc
pop
adcl
mov
jle
jo
and
fldl
jb
inc
mov
dec
clc
adc
cwtl
outsb
movsb
push
adc
xchg
dec
jbe
mov
inc
aaa
sbb
xchg
mov
mov
cmpsb
xchg
test
mov
lret
push
pop
inc
push
cwtl
enter
test
push
push
mov
sub
xor
dec
mov
lds
inc
out
ljmp
arpl
fildl
mov
sbb
dec
push
sbb
fisubrl
test
xchg
clc
sbb
mov
or
mov
add
mov
imul
jmp
adc
and
rcl
and
jg
lock
lret
xor
mov
inc
adc
or
sub
test
int3
dec
imul
in
pop
mov
or
sub
outsb
into
mov
das
repnz
dec
outsl
fisubs
ljmp
mov
pop
je
mov
and
mov
test
push
lahf
fistps
movsb
dec
xchg
lahf
fstpt
cld
popa
pop
push
call
jne
jmp
out
sbb
fcoms
ljmp
xchg
sub
xlat
pop
jp
lea
push
dec
mov
cs
shll
aad
sbb
insl
lahf
out
adc
xchg
xor
mov
dec
in
and
movsb
jnp
lret
push
adc
pop
scas
jle
adc
pusha
popa
out
sbb
mov
or
insl
pop
dec
rorb
dec
dec
repz
mov
mov
sbb
cmp
sub
js
pop
ret
add
les
sbb
aas
jle
cmp
pop
sbb
mov
je
mov
daa
xchg
mov
cwtl
insb
fdivs
out
cs
out
aas
shll
imulb
lcall
fs
inc
inc
aam
fisttps
hlt
dec
jnp
add
popf
cltd
jb
ret
loope
notl
lret
cwtl
cmp
mov
cli
jno
andb
testb
xchg
int3
and
mov
push
out
mov
xor
mov
jl
adc
mov
iret
fcompl
clc
inc
xor
in
pushf
lcall
adc
pop
js
inc
enter
aam
lcall
push
push
adc
xabort
mov
fwait
push
sbb
out
adc
fildl
mov
ret
push
aaa
cmp
data16
jmp
xchg
in
cwtl
inc
mov
mov
stc
xchg
loopne
and
loopne
mov
lea
pop
jmp
and
popf
add
add
mov
lods
in
arpl
or
jns
js
mov
movsb
roll
hlt
mov
dec
adc
mov
pop
or
lret
test
mov
fndisi(8087
and
push
or
in
lcall
lods
in
pushf
sets
add
jp
or
xchg
sbb
push
cs
sbbl
lcall
push
pop
adc
cmpsl
xchg
xchg
pop
and
imul
enter
inc
fisttps
mov
sbb
xor
cmc
jbe
add
in
and
bound
int
inc
push
pop
stos
aad
mov
cmp
fidivrs
faddp
adc
sub
dec
push
iret
push
sub
fcmovnb
idiv
add
xorb
cli
test
sarl
cmp
or
xor
in
repnz
push
mov
sbb
cmpsb
clc
jle
addr16
pop
pop
cmpsl
pop
lock
push
sbbl
dec
ret
ds
dec
fmuls
cmp
add
call
in
push
cld
push
xchg
jge
xor
loop
dec
xchg
adcb
cmp
gs
fdivrl
or
idiv
xchg
daa
cli
dec
sub
cmpl
test
pushf
movsl
pusha
push
and
and
mov
out
out
rcll
sub
pusha
jae
ffree
and
andb
mov
inc
fstl
mov
lock
cli
cmpsb
pop
stos
dec
cltd
scas
push
std
bound
add
sbb
mov
add
mov
in
mov
sbb
sub
in
andl
pop
mov
jmp
adc
inc
mov
inc
minps
shll
dec
cltd
dec
xor
popa
in
popa
dec
sbb
pushf
mov
pop
mov
mov
inc
push
out
push
aam
es
push
test
lret
cmp
clc
filds
dec
cli
pop
lcall
fcmove
filds
lret
mov
leave
cmpsb
adc
scas
adc
out
cmp
sub
mov
xchg
xor
ja
popf
imul
inc
movsb
das
mov
mov
insb
xlat
sti
inc
pop
xchg
xchg
mov
clc
ret
mov
push
fldt
sub
jl
shl
ret
mov
sbb
xor
les
mov
mov
add
repnz
loope
xchg
scas
cmp
sahf
xchg
out
sub
movsb
jbe
ja
out
cwtl
sub
pop
data16
sub
push
push
shlb
jecxz
fstl
mov
sahf
pushf
cltd
mov
cmc
dec
sbb
outsl
sbb
jle
stos
aam
jb
lock
in
mov
mov
jb
or
inc
scas
hlt
ss
mov
mov
inc
cmp
add
xor
in
inc
movsb
enter
leave
xchg
imul
das
dec
ds
pusha
scas
aad
push
sub
pop
push
flds
rcrl
and
lea
bound
xor
bound
mov
jmp
mov
das
pushf
aaa
push
adc
mov
push
lds
xchg
out
cltd
pop
dec
les
pop
lcall
cmpb
rcrl
push
pop
mul
sti
dec
cs
xor
adc
mov
cmp
movsl
xchg
push
add
stos
outsl
cld
icebp
movsb
test
stc
add
or
cmpsl
mov
loop
pop
mov
hlt
jns
xchg
and
out
imul
sbb
in
push
nop
sbbl
mov
xchg
ljmp
mov
addr16
xchg
sbb
daa
jl
add
ss
mov
test
push
xorb
push
or
imul
add
push
fistpll
mov
fst
cmp
mov
das
fcmovnu
mov
sbb
adc
jbe
mov
mov
nop
mov
cmpsl
jo
mov
cmc
xchg
pop
adc
xchg
stos
xchg
cmp
inc
test
lods
loopw
cmp
jnp
xchg
xchg
sahf
loopne
pop
test
mov
lods
xor
icebp
cmpsb
jmp
inc
add
imul
xlat
jns
dec
shrl
sti
dec
lock
mov
cmpsb
mov
or
loop
cmpsl
mov
cmp
fisubrs
push
and
sti
and
les
int3
or
push
jne
addr16
push
jmp
mov
add
mov
push
xchg
inc
mov
fs
pop
lcall
jle
test
bound
pop
xchg
xor
push
outsl
jmp
pop
sbb
lods
fcomp
in
imul
fists
xchg
popf
pop
push
mov
sub
xor
ss
bound
inc
sub
and
jmp
xchg
pop
sbb
sbb
xchg
cs
in
and
fdivrs
sbb
fadd
rcll
jp
dec
push
dec
data16
fdivrp
test
push
dec
enter
or
mulb
cli
sahf
test
mov
jns
adc
call
mov
pop
std
inc
cmp
jns
jno
mov
adc
sahf
mov
xchg
out
das
insl
in
push
into
loope
mov
ret
adc
mov
mov
push
xchg
mov
mov
mov
scas
int3
jnp
push
mov
sbb
mov
mov
aam
ret
xchg
popf
cwtl
jb
adc
and
sub
in
xor
push
out
add
mov
arpl
orb
pushf
test
leave
xor
dec
push
scas
xchg
clc
out
loope
pop
cmpsl
inc
and
dec
xchg
lcall
out
mov
cs
sbb
arpl
adcb
jmp
lds
mov
test
cmp
dec
decb
jmp
xor
fsubrs
insl
sub
lret
enter
cmp
rep
dec
inc
cmp
add
aas
mov
mov
push
outsb
lea
pusha
mov
into
into
outsl
es
shll
xchg
movsl
pop
adc
pop
outsb
xor
inc
fdiv
pop
xchg
roll
xchg
loope
mov
inc
vmaskmovdqu
in
fs
jge
fimuls
xchg
test
mov
sti
mov
mov
repz
rclb
mov
jne
pop
mov
je
mov
movsl
cltd
xlat
movsl
in
mov
push
dec
and
or
stos
sbb
fsubrl
mov
cwtl
rcll
or
fcompl
mov
cmpsb
loopne
push
idivb
mov
incl
in
jae
sbb
pop
xchg
jne
sbb
lea
sub
xchg
lods
jg
lock
push
sub
popa
and
pop
xchg
push
pop
jle,pn
pop
or
add
fwait
dec
pop
mov
mov
test
mov
adcl
js
pop
or
mov
inc
mov
out
repnz
ja
dec
push
ret
mov
cmp
dec
in
xor
cmp
dec
lcall
loope
mov
mov
sbb
imul
pop
pop
jmp
lret
dec
leave
enter
aam
mov
xchg
sbb
scas
and
fxch
or
and
or
sub
fcmovnb
sub
ja
pop
pop
or
pop
ss
jno
dec
sbbl
xchg
mov
inc
xchg
jge
or
popf
ss
loop
mov
push
popa
and
jmp
jo
fcoms
push
adc
nop
jecxz
mov
dec
cmpsl
pop
es
inc
sbb
in
jae
pop
fwait
add
dec
call
jne
cld
add
into
lds
cmc
push
adc
cltd
push
mov
test
mov
movsl
ds
fidivl
inc
xorl
test
scas
and
test
pop
and
arpl
cmp
pop
loopne
mov
lea
push
je
pop
lret
xchg
dec
cmp
repz
ficompl
inc
pop
pop
orb
cmp
dec
shll
dec
jnp
xor
loopne
add
sub
dec
sarw
lret
out
or
inc
sbb
mov
jo
dec
aad
imul
addr16
ja
inc
jl
mov
pusha
inc
mov
jnp
fnstsw
pop
or
dec
andb
subl
mov
xor
xchg
inc
jmp
cmp
repnz
addr16
adc
or
jnp
mov
adc
or
pop
mov
mov
ja
inc
adc
mov
xchg
flds
ret
push
mov
test
add
inc
adcl
roll
push
jecxz
mov
pop
sbb
xchg
or
stos
into
fs
mov
in
jo
or
add
mov
pop
push
inc
shlb
js
and
and
sarl
mov
xlat
pop
pop
cli
lret
push
xor
jmp
mov
xor
mov
ss
sub
mov
pop
aaa
cmp
add
add
loope
jmp
mov
loop
sbb
outsl
out
inc
adc
jns
xchg
iret
rep
add
cmpsl
cmc
in
les
je
insb
call
xchg
push
lahf
pop
out
push
jbe
aaa
push
mov
in
mov
sub
xor
pmulhw
fisubl
sub
and
mov
cmpsb
push
iret
aaa
pop
out
in
mov
xchg
lahf
mov
cwtl
cld
movsb
jmp
pop
inc
pop
out
dec
popf
mov
orb
adcb
add
pop
mov
adc
fidivs
mov
gs
loop
lret
scas
xlat
lea
xchg
sub
fwait
xchg
pop
shrl
ss
cwtl
rcl
mov
loopne
add
sub
xchg
das
imull
xor
mov
sbb
aas
xor
aas
decb
sbb
push
emms
repnz
push
addl
cld
iret
ja
pop
fsts
xchg
xlat
mov
in
stos
mov
sub
or
cli
in
jp
mov
out
jge,pn
dec
test
and
shlb
pop
cmpsb
das
mov
cwtl
ja
inc
cmp
std
out
imul
inc
cmpsl
je
ret
scas
out
jmp
mov
cmp
imul
sub
xchg
lret
add
jne
aaa
inc
pop
in
fisubs
jl
cmp
dec
xlat
cmp
dec
dec
imul
push
lahf
sub
ror
inc
jb
aam
popf
jns
xor
cmp
sahf
jle
pop
test
aad
pop
xchg
pop
movsl
scas
fdivs
inc
ljmp
inc
subl
out
idivl
dec
mov
sbbb
test
ljmp
mov
cld
mov
jne
sbbl
xor
mov
sub
cmpl
mov
dec
cmc
dec
gs
adc
and
jns
leave
xchg
outsb
in
pusha
mov
mov
xchg
out
xchg
in
adc
pop
ljmp
xlat
ja
or
dec
sbb
or
xchg
pop
enter
push
add
push
sbb
jg
sbb
xchg
cmp
xor
dec
imul
sub
gs
out
or
inc
fcompl
loopnew
movsb
in
ja
lods
aaa
inc
stc
aam
add
push
dec
fs
movsb
sbb
mov
notb
jle
aam
dec
aas
outsb
pop
or
xor
es
adc
pop
inc
cmp
loop
mov
inc
shrl
xlat
mov
cmpsb
xor
fildl
mov
lret
enter
rorl
loopne
add
imul
das
xchg
insl
fwait
cmp
fcomps
je,pt
pop
sti
imull
clc
out
stos
mov
mov
clc
mov
es
clc
and
cld
rorb
lahf
adc
inc
mov
xlat
imul
mov
mov
mov
ror
cmp
push
sub
test
test
push
fwait
jns
shr
inc
sbbl
adc
roll
cmp
push
ret
push
pop
fidivs
mov
adc
dec
jbe
fwait
mov
arpl
jmp
sub
fistl
inc
test
loopne
or
aaa
pop
adc
int3
out
addr16
pop
xchg
add
push
scas
xchg
sbb
mov
jle
aam
mov
xor
test
repnz
jmp
cmp
imul
sahf
or
add
fsubr
pop
xor
mov
lods
stc
adc
mov
jns
inc
inc
lret
in
mov
add
adc
and
in
xlat
add
xchg
clc
lock
mov
int
pop
push
fiaddl
pusha
cmp
sub
jne
cltd
jecxz
ds
test
push
jns
mov
rorl
aam
jns
inc
shl
sbb
les
js
test
das
popa
inc
push
sub
inc
sub
or
sub
dec
pop
jmp
fstp
lret
pop
xor
idivl
xchg
imul
xor
imul
clc
loop
mov
mov
cli
std
mov
sub
test
pop
mov
dec
and
inc
sub
xor
scas
and
pop
dec
repz
rcrb
cmp
cltd
inc
insl
xchg
pop
push
and
inc
out
cs
mov
sbb
or
int3
mov
ret
aam
in
aam
mov
fucomi
pop
push
aam
push
inc
add
outsb
mov
in
insl
mov
jb
xchg
xor
in
xor
sahf
lahf
addl
dec
aad
jb
sub
jns
push
ljmp
or
xor
maskmovq
mull
jmp
mov
aas
outsl
push
mov
mull
fcompl
std
mov
testl
ss
inc
jnp
movsl
jmp
jg
and
fstpt
inc
pop
lock
adc
adc
adc
jno
mov
setae
aas
scas
into
out
aad
sub
les
pop
mov
add
mov
xchg
cmpsl
fidivl
cwtl
and
lods
jmp
insb
and
xor
push
xor
xor
pop
ret
in
pop
xchg
dec
add
pop
adc
xor
adc
mov
outsl
repz
pop
lcall
sbb
sbb
and
adc
sbb
adc
imul
xchg
negl
shlb
mov
pop
jp
xchg
stos
fdivrl
jg
dec
and
push
add
inc
add
xor
test
dec
test
sti
mov
push
aas
stos
cmpsl
xchg
mov
movsb
dec
push
aas
jne
pop
call
out
inc
and
subl
fucom
cmp
mov
inc
not
aad
cli
push
add
cmpsb
aas
outsb
mov
xor
das
adc
jb
or
cli
mov
mov
add
mov
int
mov
mov
sbb
xlat
mov
mov
dec
out
xor
imul
pop
sbb
clc
flds
and
and
push
cmpsb
out
and
inc
cwtl
imul
adc
xlat
jae
or
pushf
jo
enter
fwait
ret
xor
aad
sarb
out
pop
sbb
or
jnp
xchg
movsb
outsl
dec
jmp
test
mov
push
xchg
popf
scas
mov
push
dec
mov
xchg
mov
dec
mov
adc
inc
push
in
in
sbbb
aad
shrl
xchg
in
rcll
lea
cli
fstpl
fcomi
loope
int
or
adc
mov
shlb
jecxz
test
xor
dec
gs
mov
or
ret
cmp
jge
ficoms
xchg
shr
test
inc
push
push
pop
lahf
popa
cvttps2pi
arpl
jnp
stos
mov
sbb
jno
lods
xlat
xchg
adc
push
adc
cmpsl
mov
xorb
dec
cmpsl
test
xor
push
mov
mov
xchg
push
js
enter
jb
dec
cmpsl
ret
dec
dec
mov
leave
push
aaa
mov
cmpl
mov
jne
pop
jns
popl
push
sbb
jl
lret
std
fimuls
iret
jmp
adc
sub
call
cmp
sbb
adc
fcoml
lods
mov
rclb
in
pop
push
xchg
int3
sbb
pop
js
lods
enter
jno
xchg
xor
out
fs
lods
insl
push
in
outsl
leave
mov
mov
popf
pop
rcll
and
decl
out
push
cwtl
inc
mov
xchg
push
or
pop
inc
cmpsl
add
adc
rcr
es
sub
mov
pop
dec
jae
call
pop
pushl
and
add
jns
notb
stos
insb
stos
pop
sbb
pop
xchg
in
lock
pop
push
dec
inc
dec
mov
push
mov
mov
pushl
cvtps2pd
ljmp
int
lcall
cmpsb
lret
addr16
jne
jl
adc
dec
cmpsb
add
add
push
icebp
mov
call
adc
int
cmp
push
clc
cltd
mov
mov
dec
sub
popa
call
ljmp
fnsave
nop
pop
jmp
clc
add
jno
sub
and
adc
out
sub
adc
and
jle
jg
mov
out
stos
mov
push
jecxz
jl
cmpsl
and
vmovntps
lods
lds
jne
ret
in
jmp
mov
les
mov
and
outsl
leave
clc
add
mov
lock
shr
fs
loope
cmp
fcmovbe
mov
in
push
jo
push
adc
lock
in
jge
push
das
sub
push
dec
cld
or
xchg
adc
push
int3
mov
xor
push
iret
rcrl
cmpsl
mov
jns
cmp
ret
aam
inc
loope
cltd
adc
test
jne
or
and
mov
scas
push
cmpsb
sbb
movl
mov
inc
xchg
mov
mov
jge
and
in
jne
mov
xor
stos
jo
or
xchg
push
cld
movsb
outsb
pop
jl
mov
jmp
insl
ret
pushf
int3
mov
xchg
lock
enter
and
add
das
pop
push
nop
dec
cmp
lcall
xor
add
dec
pushf
xor
bound
mov
add
sbb
lods
xor
xchg
fdivs
or
xchg
in
fisubrl
add
xchg
xchg
push
sti
or
pop
in
pop
or
negl
jnp
popf
leave
inc
jmp
sub
cmp
arpl
cmp
insb
pop
aam
mov
cmp
adc
cltd
push
fstpl
mov
sbb
lea
stos
xor
pop
in
out
and
fs
cmp
loope
in
insl
push
bnd
out
mov
cmp
cmp
jp
push
jo
mov
js
adc
sub
mov
xchg
jmp
add
negb
aad
push
addr16
xor
fldt
sub
das
maskmovq
idivl
mov
lock
lea
insb
inc
lods
shll
jo
insb
movsb
cli
js
fsubl
lahf
or
adc
subb
inc
mov
icebp
data16
sbb
sub
mov
ss
shll
dec
popf
jmp
repnz
fdivs
mov
repnz
cmpsl
mov
xchg
pop
mov
int
lea
idivb
aas
loop
mov
xchg
sbb
add
xchg
mov
cmp
out
and
fistl
cmp
aad
popf
mov
pop
cmp
dec
insb
fdivs
decl
stos
rcr
mov
pop
dec
jmp
sbb
add
sub
cmpl
in
inc
add
repz
cli
and
popf
add
das
mov
mov
data16
fmull
xchg
int3
or
sub
inc
icebp
pop
imul
daa
test
push
inc
jmp
imul
pop
fstpl
inc
push
iret
fnstcw
popf
lret
mov
cmp
sti
jp
pop
rclb
scas
adc
lea
xlat
lret
call
ficompl
movsl
daa
xchg
shll
es
adc
rorl
add
out
mov
jno
lea
fstp
test
pop
lock
pop
dec
cwtl
cmpsl
lods
dec
mov
push
lea
imul
mov
mov
pop
popa
mov
mov
jp
gs
fsubp
dec
int
ret
imul
repnz
mov
mov
in
fcmovu
mov
pop
nop
repnz
jnp
add
imul
mov
inc
mov
and
pop
repz
cmp
lds
fsubl
mov
xchg
inc
loopne
in
shlb
mov
aas
xor
push
adc
push
pusha
lahf
rcrl
enter
mov
or
cmp
mov
dec
adc
mov
mov
stos
xor
or
imul
aaa
or
test
sub
leave
addb
xchg
pop
inc
dec
or
xchg
movsb
pop
add
mov
es
mov
call
pop
or
pop
and
sti
pushf
cmp
mov
stos
pop
mov
mov
cld
inc
testb
xlat
lds
mov
adcl
movsl
mov
std
scas
gs
add
test
pop
ret
pop
push
mov
fnstsw
add
xchg
imul
jo
arpl
enter
hlt
ja
ss
pop
dec
sub
mov
lahf
shrb
jg
adc
adc
ffreep
out
jns
or
ret
xor
ljmp
mov
adc
movsl
jp
shlb
add
mov
mov
mov
stc
pop
cs
mov
ljmp
cld
enter
rcrl
xchg
pusha
int
daa
mov
jnp
leave
adc
push
outsb
icebp
pop
inc
cmp
or
adc
push
out
in
loopne
mov
divb
and
dec
loopne
xor
sub
sub
jo
fcompl
pop
jnp
cltd
daa
mov
fs
loop
aam
pop
mov
fwait
lods
pop
jne
js
enter
cli
cvtpi2ps
testb
xor
pop
and
jp
pop
ficoms
test
loopne
in
jo
mov
enter
sub
pop
or
add
xchg
push
pop
cs
push
push
jge
sbb
xor
mov
into
sti
pop
cmp
cli
shll
nop
jb
add
dec
orl
inc
mov
mov
xchg
jo
ficompl
add
mov
notb
and
es
fimull
shlb
inc
out
das
lea
xchg
push
xor
sub
pop
xor
outsb
mov
mov
jp
loop
out
inc
fistl
cld
ss
mov
arpl
cmpsl
inc
add
loopne
shrb
fbstp
daa
xor
push
or
cmpsb
add
mov
shlb
and
cmp
add
scas
aam
testl
push
outsb
or
fs
or
jbe
shll
jns
pop
int
scas
jp
and
push
jb
jno
mov
nop
jne
push
out
mov
sbb
and
xchg
fstpt
xchg
cmp
arpl
mov
repz
push
jg
or
xor
scas
dec
add
mov
std
mov
mov
and
movsl
repnz
stos
call
fdivl
mov
mov
mov
int3
jne
call
mov
pop
ljmp
xchg
sahf
sarl
jne
mov
addl
jge
int
into
clc
rcrl
divl
pop
popa
test
sub
dec
out
fnsave
xchg
mov
sub
push
sbb
test
insb
leave
shrl
fcomps
adc
insl
aam
int3
jp
cmp
lret
xor
add
inc
les
push
dec
and
or
push
mov
pop
sub
mov
push
sbb
mov
sbb
push
inc
adc
out
push
adc
popa
mov
test
adc
push
adc
lea
xor
or
out
dec
in
xchg
dec
stos
add
xchg
add
out
out
jecxz
hlt
inc
cltd
sbb
test
aam
mov
jle
pop
inc
xor
lret
subb
adc
or
sub
add
lret
sti
or
movsl
int
lock
sahf
cwtl
dec
sub
jmp
cmp
in
std
icebp
mov
adc
xchg
mov
lods
xchg
xor
cmpsl
dec
dec
push
cmp
mov
rcrl
cs
inc
cmc
mov
cmp
insl
inc
push
lods
icebp
cmpsb
push
cmp
ret
gs
xchg
jno
mov
add
out
add
outsb
mov
add
jne
mov
aam
imul
testl
adc
pop
adcl
or
cmpsb
adc
xchg
jns
shlb
cwtl
lock
loope
jb
fisttpl
int3
sub
adc
cmp
push
or
push
out
and
dec
xchg
jo
mov
pop
push
ret
xlat
icebp
gs
push
test
xchg
aam
iret
cld
cwtl
fs
sbb
pop
sbb
pop
mov
out
push
xor
rorl
inc
repnz
lahf
mov
pop
insb
fbld
lea
sub
gs
shll
inc
cmp
ja
jle
shrl
jno
inc
dec
into
sub
adc
loopne
fidivs
arpl
mov
sbb
mov
ja
lcall
fldenv
gs
mov
and
adc
stos
jb
push
lods
stos
xchg
jae
xchg
xorb
insl
jns
add
lret
dec
mulb
sub
mov
push
xor
sbb
inc
cmp
insb
pop
xchg
dec
and
push
aaa
jns
out
mov
in
cwtl
cmp
int
dec
push
inc
fsts
jp
imul
or
xchg
xor
leave
insl
mov
data16
icebp
lods
cs
sbb
pop
lods
xchg
mov
mov
pushf
int
xor
lret
addl
push
adc
cmp
inc
js
jb
pop
xlat
mov
inc
je
pop
movsl
leave
mov
xor
mov
or
mov
rorl
or
jle,pn
mov
add
jle
mov
lods
std
mov
xor
stos
sbb
fs
out
push
imul
lods
fists
lods
mov
int
mov
mov
xor
pop
mov
sbb
mov
jg
xor
push
js
test
mov
mov
ds
daa
stos
and
inc
filds
fabs
jb
stos
frstor
out
mov
or
andb
test
shlb
inc
idiv
adc
testb
jecxz
test
loopne
adc
imul
xchg
cltd
xchg
in
rorl
or
add
pop
orl
bndldx
test
and
std
adc
loopne
adcl
jl
movsb
push
orl
iret
push
sub
lock
or
mov
data16
xchg
jnp
std
mov
scas
notb
add
outsb
outsl
pushf
jge
xlat
sub
aaa
push
cmp
aad
push
and
jnp
xchg
test
sbb
adc
or
or
dec
lret
add
inc
cmp
and
mov
aad
cs
sti
ss
loopne
and
mov
fwait
jns
pop
cs
mov
xchg
push
lds
lock
out
jnp
loopne
mov
je
pusha
pusha
adc
pop
cwtl
shll
lcall
jl
test
or
pop
ljmp
scas
loope
mov
pop
sbb
push
mov
adc
scas
and
cmpsb
cmpsl
sub
mov
stos
imul
pop
dec
jnp
loopne,pn
adc
mov
mov
rcrb
scas
cmp
mov
add
pop
cltd
int
js
and
fldcw
jge
mov
or
xchg
sbb
cmc
xor
xchg
inc
stos
or
stc
mov
aam
ret
aas
sbb
lahf
jno
test
pop
ficomps
cmc
jge
pop
lahf
in
push
push
imull
arpl
lds
mov
hlt
and
sbb
mov
fnstenv
sub
jo
inc
lods
ds
push
fldcw
enter
cmp
pop
inc
mov
ret
push
jp
fs
idivb
in
xchg
into
mov
or
leave
fistpl
in
hlt
les
add
xchg
adc
dec
jns
inc
scas
shlb
xchg
mov
mov
xchg
divl
and
xchg
mov
mov
js
inc
outsl
std
cmp
xchg
pop
decb
sub
jge
das
pop
sahf
mov
xchg
aas
xchg
add
loop
mov
and
test
repz
clc
std
scas
int3
loopne
aaa
sub
ds
add
insl
in
or
je
or
jmp
aam
push
or
jae
pop
shl
sbb
sub
mov
stos
enter
rcrb
popf
loop
ds
aam
repnz
push
cmp
pop
sbb
rcrl
xorb
mov
or
daa
cmp
ret
in
add
jmp
inc
mov
inc
clc
dec
inc
gs
mov
fidivs
inc
xchg
mov
test
imul
dec
jl
imul
inc
inc
mov
loopne
nop
int3
addr16
pop
movsb
mov
lods
pop
and
es
xchg
data16
icebp
dec
ret
pop
bound
mov
out
xor
push
mov
mov
add
inc
inc
psrlw
xchg
push
dec
jbe
sbb
test
cs
add
inc
call
out
rcr
jb
addr16
inc
pop
mov
inc
fbstp
cmc
jns
mov
jg
fcmovnb
push
iret
addr16
push
mov
ficoml
pop
jmp
pop
jb
iret
loopne
mov
fdivs
pop
movsl
cmc
pop
movsl
les
jecxz
add
fidivrl
mov
aaa
xchg
movsl
pop
jg
in
data16
adc
scas
ljmp
pop
jno
sbb
loope
pop
roll
mov
imul
loop
adc
pop
jl
lds
jecxz
dec
movsb
xor
punpckhbw
test
mov
mov
and
ret
rcrb
jbe
sbbl
addl
out
add
jge
dec
add
push
scas
adc
xchg
ja
jnp
push
fcom
push
cmpsb
pop
xorb
imulb
repnz
dec
lock
add
xchg
pmullw
lea
stos
jge
outsb
dec
adc
sub
xor
scas
sub
mov
call
dec
imul
in
scas
push
cs
add
push
lahf
aad
push
sub
insb
dec
lahf
sub
push
sub
push
mov
dec
mov
xchg
fisubrs
cwtl
adc
cmc
nop
fimuls
test
and
push
into
jle
add
push
cmp
mov
inc
sbb
enter
or
mov
dec
cli
fwait
mov
mov
clc
daa
gs
cmp
addb
out
cltd
repz
pop
xchg
mov
xorl
or
idivb
mov
xor
cltd
push
test
popa
xchg
notl
lret
sahf
push
js
jae
adc
popf
mov
stc
jbe
das
sub
xor
mov
cmp
mov
xchg
xchg
inc
loopne
in
lds
and
fisubs
adc
inc
jb
and
call
loop
inc
or
loop
jg
adc
sub
mov
add
hlt
cmp
inc
lret
int
inc
xchg
pop
je
stc
clc
hlt
clc
movsb
jg
and
mov
jp
pushf
lods
jecxz
into
fidivs
inc
jl
call
ljmp
xor
dec
sub
pop
pusha
aas
xchg
mov
lds
adc
rcrb
lea
fiaddl
fidivl
pop
leave
and
mov
mov
jbe
mov
test
sub
in
imul
cmp
lahf
lret
cmp
xor
rcl
lcall
call
popa
add
jae
mov
mov
out
pop
fdivrs
aas
inc
dec
out
dec
ja
xlat
pop
ret
mov
icebp
pop
pop
je
mov
out
sub
rol
jg
pop
test
aas
xlat
mov
cmpsb
test
ret
sbb
jge
xchg
and
inc
adcb
jbe
mov
aas
sub
mov
add
dec
fcoml
pusha
hlt
jo
and
xchg
and
lahf
cmp
add
mov
sbb
stc
sbb
jl
xchg
jmp
lods
xchg
jmp
sti
andl
mov
cs
dec
fwait
pop
sbb
and
xchg
mov
mov
test
arpl
jae
adc
pop
xor
push
fs
fisttpl
jg
push
mov
bound
fstpt
sub
js
fmuls
gs
dec
add
rorb
fimull
lret
in
push
fcmovnb
push
push
gs
inc
stc
mov
ss
mov
scas
mov
cmpsb
mov
shll
cs
sub
fs
filds
mov
xchg
popa
lea
loopne
aam
sbbb
and
lock
mov
insl
cmp
lcall
popf
or
mov
xor
jno
test
push
bound
jae
sbb
stos
nop
sub
loopne
mov
flds
pushf
and
shll
bound
mov
lea
xchg
out
cmpsl
outsl
jno
dec
or
cmp
cmp
ret
lret
xchg
imul
jno
pop
sbbb
andb
jo
out
cmp
sub
movsb
jge
xchg
jle
inc
ljmp
repz
cltd
add
inc
movsb
mov
push
xor
orb
jp
xorb
xchg
shll
fsubrs
inc
jg
push
jb
jae
int3
movsl
pop
cld
or
insb
cmpsb
push
sbb
sahf
push
xor
stos
jmp
jecxz
inc
rorb
loopne
imull
push
aaa
lret
stos
adc
sbb
mov
and
inc
cmp
int
mov
xchg
push
rcr
lds
add
gs
repnz
popf
insl
jge
lods
ja
inc
mov
ret
fstpt
outsb
fldl
cmpsb
ss
cmpsb
mov
sub
fld
inc
dec
scas
jg
mov
inc
orl
mov
les
mov
clc
fs
sbb
dec
xorb
pusha
pop
mov
out
fsts
adc
mov
or
pop
xchg
fsubrl
bound
mov
daa
and
dec
cmp
imul
cmp
dec
sub
movsl
sub
cmpsb
adc
repz
xor
lods
jp
fnstenv
testb
inc
mov
xchg
ja
push
sub
mov
test
push
mov
movsb
dec
in
jae
jo
insl
fdivrl
adc
in
icebp
ret
cmp
pop
insb
jge
mov
push
or
inc
leave
mov
push
pop
lea
xchg
addr16
sub
push
adc
nop
adc
out
test
int3
lods
dec
lods
movsb
mov
sub
aaa
adc
ljmp
lock
cmpsl
lahf
test
adc
add
js
add
inc
enter
jbe
mov
cli
adcb
gs
loop
repz
pop
inc
jb
pop
push
mov
xor
xchg
jecxz
enter
stos
inc
outsb
push
adc
push
xor
daa
mov
sahf
inc
dec
aas
mov
push
cmp
sbb
push
ret
and
dec
pusha
in
out
cwtl
repnz
inc
int3
jnp
js
push
out
das
mov
xor
cwtl
dec
push
stc
fs
add
loop
fs
mov
adc
push
ret
or
xchg
sbb
outsb
mov
movaps
push
cmpsb
push
pop
jbe
stc
push
sarl
outsl
and
cmp
lahf
xchg
add
test
dec
sti
aam
xchg
lds
jno
push
shll
mov
push
jmp
push
push
iret
and
pop
fwait
mov
mov
xchg
imul
outsb
adc
movsb
adc
push
xor
sbb
inc
pop
cmp
movsl
xchg
pusha
xor
push
leave
xchg
xchg
mov
mov
xor
test
bnd
push
jnp
mov
xchg
mov
and
sbb
sbb
or
je
jl
fisubrl
outsb
inc
outsl
mov
adc
inc
mov
lahf
xorl
fstpl
jmp
call
mov
mov
out
ss
pop
addr16
out
fsubrl
iret
mov
loopne
cmpsb
rolb
mov
xorb
stos
shll
add
inc
or
fmul
push
jl
dec
adc
xor
mov
repz
jge
cwtl
sti
inc
ret
sbb
pop
dec
add
sbb
adc
in
sub
dec
or
pop
lcall
pushf
mov
add
and
pop
push
adc
repz
stc
push
loope
sub
clc
pop
sub
xorl
stc
add
arpl
test
pushf
sub
xor
mov
rorl
mov
inc
pop
lods
push
and
mov
fists
js
add
push
dec
and
xor
cld
mov
mov
adc
mov
cwtl
jl
repnz
in
bound
xorl
xchg
xchg
or
push
sbb
adc
mov
add
xor
cli
ficoml
jecxz
stc
sbb
arpl
add
test
sarl
jle
scas
test
addr16
clc
out
push
movsl
cmp
mov
lahf
addr16
push
push
aam
dec
xlat
pop
cmpl
mov
ss
push
cmp
leave
adc
inc
mov
adc
outsb
and
out
sbb
xchg
push
jb
and
cmp
sbb
insb
and
cmpsb
fdivs
icebp
jo
add
xor
out
adcb
fbstp
xor
pop
mov
sti
inc
jg
or
cmc
push
divb
aas
jecxz
inc
out
shrb
xlat
or
lcall
xor
dec
pop
pop
adc
jecxz
add
mov
rorb
dec
mov
mov
cmpsl
ret
mov
jo
dec
jl
mov
mov
lods
pop
sarb
les
dec
adc
insl
dec
fidivs
jo
inc
jl
mov
into
in
rcll
push
adc
inc
pop
mov
mov
push
adc
xor
movsb
daa
fidivrl
sbb
pop
mov
mov
add
push
sbb
pop
mov
push
shlb
int
mov
cmp
sbb
aas
dec
xchg
imul
inc
pop
push
std
xlat
fidivl
ljmp
test
mov
push
les
push
xchg
lods
xchg
inc
or
xchg
pop
enter
not
mov
cmp
orl
dec
cld
xor
jle
icebp
pop
fwait
xor
ja
outsl
out
out
cmp
mov
lods
outsb
fsubl
xor
fimull
inc
outsb
pop
push
sub
jmp
mov
add
andb
push
fs
dec
lahf
xchg
je
insl
mov
mov
mov
pop
pop
in
xor
mov
inc
mov
or
pop
pop
insb
inc
mov
in
inc
ss
and
aad
jb
sbb
sub
ja
dec
nop
imul
int3
arpl
xchg
cmp
push
xchg
sub
dec
sbbb
adc
or
inc
mov
jecxz
or
mov
das
jle
adc
mov
sarb
jns
icebp
stc
incl
cmp
sub
fcoml
out
xor
dec
jae
cmpb
inc
fidivs
out
repz
or
adcl
xor
sbb
dec
jg
jb
pop
scas
rolb
push
inc
cwtl
lret
stos
lock
inc
addr16
lret
cli
xchg
pop
sbb
mov
int3
pop
icebp
mov
pop
cmp
insb
incl
es
movsb
lock
addr16
sbb
add
out
sbbb
call
xchg
fsub
pop
clc
out
in
mov
pop
xchg
pop
rol
cmp
dec
movsb
shlb
xchg
add
mov
rorb
gs
js
xchg
or
cmpsl
idivb
in
addr16
std
cmpsb
push
add
sub
div
jg
mov
dec
push
xchg
adc
push
cmp
mov
pusha
and
test
add
outsb
push
xchg
ds
clc
std
jp
sbb
out
lods
xchg
and
push
adc
out
or
inc
mul
jne
in
add
sarb
push
add
dec
fldenv
lods
data16
clc
sub
jnp
out
mov
add
sub
sub
fxch
and
or
jp
cmp
outsl
mov
cmp
cmc
xchg
sbb
loopne
and
mov
add
jmp
pop
push
xchg
adc
xor
fwait
cmp
mov
sbb
cmpsb
mov
mov
loope
leave
inc
shll
push
push
xchg
add
je
imul
add
mov
enter
rcrb
xchg
pop
push
iret
hlt
fs
out
clc
jmp
dec
mov
scas
cmp
scas
adc
pushf
cmpsl
xor
cmp
add
ret
xchg
dec
push
ss
insl
cmp
jne
jp
into
sti
mov
lods
icebp
inc
ret
pop
adcb
inc
cmp
jle
mov
push
adc
and
xlat
sti
popf
clc
push
rcll
fs
out
pop
mov
stos
enter
xor
xor
and
push
popf
movsb
out
jnp
xorl
mov
xchg
gs
mov
mov
or
rcrl
in
mov
mov
jnp
and
jo
mov
mov
faddp
xchg
bound
roll
lea
jg
imul
fs
scas
mov
add
mov
push
repnz
push
xchg
cmc
mov
mov
shlb
out
gs
mov
stos
cwtl
test
sub
push
mull
daa
jb,pt
push
out
sbb
cmp
stc
pop
push
leave
popf
or
add
push
jmp
out
negb
test
ljmp
xchg
sbbb
popf
and
xor
divb
jl
outsl
into
pop
push
push
stos
jnp
jle
pushf
inc
icebp
mov
mov
pop
mov
add
mov
jbe
dec
lods
jge
push
sarl
icebp
fwait
push
mov
mov
inc
inc
clc
pop
rcl
or
ljmp
iret
jl
loope
jecxz
dec
cmp
roll
jbe
sbb
mov
aad
cmp
cmp
adc
push
jbe
es
xor
jecxz
push
fcmovnu
add
std
add
add
mov
or
lcallw
xchg
fnstcw
push
iret
fnstcw
ret
in
test
ret
jnp
and
shll
jl
inc
sbb
dec
or
lds
cwtd
add
mov
fs
rcrb
inc
scas
and
dec
loope
and
into
pop
scas
enter
dec
in
adc
jmp
fiaddl
movsb
jl
mov
movl
adc
cld
pop
call
pop
inc
inc
addr16
mov
mov
adc
or
cmp
test
sahf
inc
push
lcall
jbe
ja
scas
add
and
mov
lahf
push
dec
rorl
repz
push
hlt
push
sbb
cs
testb
mov
outsb
or
add
pop
sti
pusha
mov
sub
mov
pop
out
sbb
xorb
pop
xchg
pusha
es
and
fists
mov
pop
in
out
mov
mov
mov
mov
inc
push
mov
cltd
adc
xor
xor
push
dec
mov
jle
cmp
inc
adc
sbb
mov
loopne
clc
sbb
cmp
aam
ljmp
je
lcall
add
jb
dec
loopne
mov
aaa
insl
es
xchg
sub
sbb
inc
loopne
sahf
pop
ds
fsts
std
aaa
xchg
jp
mov
inc
test
enter
cmp
rcrb
sub
aaa
cmp
dec
sbb
cld
sub
add
rcr
mov
mov
xchg
icebp
add
xor
mov
cmp
push
das
xor
and
fiaddl
aam
inc
mov
lcall
aas
add
xlat
int3
call
enter
or
in
test
inc
movsl
ret
mov
or
cmc
testb
lds
gs
xchg
movsb
mov
andl
mov
rol
mov
das
mov
mov
mov
pop
mov
aam
int3
mov
jmp
movsl
xor
cld
enter
sbb
xor
mov
push
clc
jae
add
push
data16
enter
imulb
cwtl
lock
and
jl
adc
xchg
loopne
mov
stos
xchg
push
xchg
lods
aam
and
adc
jecxz
out
bound
jno
xlat
mov
adc
push
xchg
jg
out
add
out
add
sti
mov
shll
push
push
and
test
sbb
push
sbb
inc
mov
sub
cmp
clc
sbb
fbld
cmp
pop
jg
lods
sub
jge
cmpsb
jne
je
lret
pop
out
sub
cwtl
cmpl
mov
pop
mov
push
fisttps
and
adc
lds
pop
test
xor
mov
push
insl
inc
cwtl
ret
pop
adc
inc
push
rcrl
mov
daa
ljmp
jg
add
sub
enter
mov
jl
inc
iret
dec
inc
in
aam
into
push
mov
adc
mov
gs
dec
mov
std
movsl
sub
mov
cmp
mov
sub
jbe
movsl
mov
int
cmc
cmpsb
pusha
jecxz
pop
jg
add
das
sbb
mov
leave
and
js
xor
push
xor
jle
add
in
repz
mov
sbb
add
enter
out
fs
mov
pop
xor
js
pop
jne
test
out
pop
mov
mov
inc
xor
movsb
lret
std
scas
push
les
push
loopne
pop
cmp
mov
sub
dec
mov
cs
jmp
int3
enter
int
pop
shrb
mov
mov
pop
scas
cltd
js
jnp
notl
mov
mov
inc
scas
out
hlt
xor
fwait
notb
fcoml
mov
jl
je
inc
leave
test
adc
std
pusha
mov
xchg
lds
das
in
orl
ss
mov
cs
jns
add
cmp
fsubrs
in
pop
mov
repnz
scas
es
mov
subb
fwait
je
mov
jp
gs
xchg
das
or
roll
pop
inc
dec
xor
insl
push
outsb
jnp
lock
loop
jb
sub
adc
in
pop
dec
pop
jnp
mov
adc
xor
and
mov
mov
popa
cmp
adc
pop
fadd
imull
adc
lahf
dec
adc
dec
arpl
in
inc
lods
cmc
sub
cmpsb
popl
add
loope
mov
mov
jle
js
sbb
imul
loope
dec
fiadds
adc
ss
ljmp
mov
push
sti
jnp
test
int3
imul
push
insb
imul
aad
push
jecxz
adc
mov
inc
jae
mov
loopne
jo
jne
in
pop
inc
cmpsb
dec
aaa
in
mov
jae
fstps
addr16
movsb
fstl
push
lahf
inc
mov
int
pop
push
stos
in
add
sub
popf
push
mov
rorb
sub
push
aas
iret
jecxz
and
lea
inc
xlat
or
shrl
test
push
sbb
rol
test
scas
pop
popf
add
sbb
xor
mov
sbb
test
mov
jb
aaa
lds
xor
aaa
in
fwait
mov
inc
outsl
js
jp
loope
aad
sub
loope
cmpsb
aaa
jbe
cs
cli
inc
into
mov
or
sub
loop
and
sbb
std
fisttpl
sbb
inc
mov
fucomip
rcrl
js
mov
add
mov
xchg
and
dec
leave
inc
icebp
out
in
lahf
aaa
imul
mov
loope
push
push
popf
mov
inc
lret
lcall
dec
xchg
imulb
stc
int3
mov
and
sbb
jl
dec
sbbl
push
daa
test
ss
or
mov
flds
aad
fidivs
pop
nop
je
movsl
mov
std
adc
and
push
jl
inc
subb
imull
push
or
xchg
bound
inc
push
or
fsubrs
adc
pop
push
inc
and
add
mov
jbe
insl
jbe
and
pushf
jne
push
adc
cmp
push
pop
jg
cld
xor
std
fcmovbe
dec
push
mov
and
je
mov
stos
cmpb
adc
xchg
mov
lods
and
stos
out
test
pop
dec
scas
pop
push
in
fs
std
out
shlb
dec
mov
sub
inc
xor
shl
pop
inc
xor
bound
inc
mov
or
lret
sub
in
pusha
mov
cmp
xor
mov
pop
adc
lods
cmp
or
add
mov
ljmp
rol
mov
fdivl
fistpl
cli
icebp
add
fdivrs
xchg
mov
adc
or
int
push
aad
std
pop
pop
xor
enter
xorl
pop
cmc
cmpsl
mov
enter
rolb
xor
xchg
outsl
mov
push
adc
dec
enter
push
cmpb
into
mov
sbb
mov
shl
cs
cmp
cmp
cmp
std
or
and
inc
push
jo
add
rolb
xchg
bnd
ljmp
jne
cmpsb
insb
addr16
xchg
test
push
out
xor
scas
int
inc
test
add
adc
sbb
popf
add
mov
out
fwait
and
cltd
mov
stos
imul
int
ds
and
adc
xor
dec
inc
jl
pop
jl
fdivrp
outsb
pop
clc
js
jnp
sbb
add
sbb
icebp
sub
inc
cmp
jl
or
cmp
jg
sti
fisubs
aaa
cmp
jl
xor
dec
jbe
movsl
call
sub
outsb
push
jle
sbb
mov
fmuls
and
js
lahf
push
push
rcrb
mov
or
or
movsb
add
inc
add
sub
adc
sub
cmp
stos
xchg
inc
sbb
mov
xor
cmp
mov
dec
shlb
dec
sub
cmc
jmp
inc
sarl
push
jno
jb
in
lods
ret
imul
mov
mov
rol
divb
jmp
clc
pop
lea
adc
sets
mov
scas
xor
sub
xchg
sbb
repz
imul
and
mov
and
push
jg
fdivrl
or
and
loopne
loope
xor
dec
lds
test
addb
rclb
ljmp
or
std
fmuls
movsb
xchg
mov
and
cmpb
pushf
push
push
lds
adc
rorb
jg
out
popf
sbb
jo
shl
add
and
test
popf
arpl
call
add
dec
rolb
or
adc
inc
pop
sbb
loop
push
inc
lds
mov
in
fucom
or
sub
fs
pop
dec
mull
lcall
push
xor
and
jo
repnz
mov
test
mov
or
pop
or
cld
jge
shrl
repz
into
in
fmul
mov
ror
push
or
xchg
add
inc
push
test
fidivrl
dec
jle
outsb
inc
cs
jle
test
push
lea
jl
scas
mov
cmovp
outsl
jo
mov
mov
sar
jl
inc
out
dec
test
cmc
dec
sub
aad
jae
pop
out
inc
sbb
in
pop
idivb
xchg
sbb
or
push
xor
xchg
in
clc
enter
jno
dec
rcll
or
mov
sub
adcl
shlb
rolb
jbe
xor
dec
mov
push
ret
or
jg
sbb
in
gs
add
xchg
sub
das
pop
ljmp
enter
daa
test
enter
pop
lret
xchg
cmp
mov
jmp
pop
les
dec
sti
or
dec
jmp
js
pop
inc
push
xchg
dec
xor
stos
fwait
outsl
sahf
sti
montmul
cmpsb
addl
scas
jecxz
xchg
jae
test
dec
mov
lds
xchg
mov
adc
std
and
dec
dec
pop
lret
dec
int3
inc
divb
mov
adc
pop
imulb
mov
jge
out
mov
and
mov
cwtl
test
jmp
test
xchg
pop
pop
gs
mov
fisubrs
xor
out
and
arpl
lock
dec
push
mov
add
cld
ret
xor
jnp
das
jecxz
into
sub
les
cmpsb
in
fadd
cmp
sbb
mov
int3
adc
inc
adc
cmp
outsb
mov
je
mov
xor
pusha
loopne
inc
xchg
mov
sub
jns
lahf
mov
sub
push
sub
call
adc
test
xor
sub
out
insl
inc
cmpsb
ds
or
inc
push
addr16
sub
cmp
jnp
mov
sti
xchg
sub
push
dec
mov
cmc
fnstenv
mov
and
lods
lds
rorl
fcmovbe
mov
scas
fcmovbe
jmp
cmp
int
inc
cs
addr16
add
pop
mov
out
cmp
daa
cli
sti
push
mov
pop
arpl
xor
rolb
xchg
push
lods
jle
test
cmp
aad
xchg
dec
cmp
dec
scas
xchg
outsb
dec
adcb
push
inc
cmp
repnz
mov
mov
mov
lds
fdivrl
cltd
adc
lds
adcb
sahf
sub
mov
imul
mov
xorl
rorb
ds
xchg
jnp
jl
in
outsb
mov
stc
mov
adc
repnz
in
mov
mov
adc
adc
aaa
stos
mov
fidivrl
sbb
sbb
mov
lret
jmp
int3
int3
outsb
fwait
jnp
xor
add
clc
aas
xor
dec
fcomps
jl
rcr
data16
xchg
fdiv
xchg
and
inc
dec
lret
in
xor
in
test
pop
or
inc
divl
pop
or
mov
push
mov
mov
leave
loopne
push
lret
and
fwait
xlat
jecxz
jge
sahf
sub
add
add
test
jge
mov
int
cmovb
lods
jecxz
pop
dec
mov
or
sbb
push
fcoml
or
fwait
inc
mov
push
fwait
pop
push
add
inc
test
aam
repz
aam
jecxz
xchg
mov
xor
push
mov
push
cli
fldt
inc
mov
setns
ret
inc
xlat
or
or
iret
xor
testb
rolb
stos
test
cmp
xor
subl
test
je
insl
dec
scas
outsb
in
dec
movsb
cmpsb
out
in
push
xchg
cmp
inc
cs
sub
mov
orb
std
test
repnz
sahf
inc
sub
movsb
or
jno
int3
sub
mov
std
mov
add
push
push
push
pop
or
aad
xchg
push
add
jns
sbb
add
push
or
inc
lods
adc
shll
adc
xor
mov
push
push
ret
and
pushf
pop
cmpb
js
push
dec
mov
sub
sbb
cs
daa
pop
insb
dec
and
clc
and
xor
popf
into
out
daa
cmp
jecxz
loope
ja
sub
fdivrp
inc
pop
fnstcw
xor
int3
jmp
jo
jb
xchg
iret
jmp
cmc
or
dec
in
std
push
xchg
ljmp
repz
hlt
jb
mov
or
jne
and
leave
popf
imul
int3
movsb
cld
pop
mov
lret
sub
xor
pop
add
roll
jae
cmp
mov
mov
mov
adc
push
cmp
loope
xchg
add
aas
loope
mov
mov
outsl
ret
mov
cmp
dec
xor
adc
sub
fwait
dec
sbb
bndstx
fs
cmp
hlt
and
movq
addb
adc
divb
xchg
adc
sbb
inc
cld
jecxz
rcll
roll
mov
fldcw
scas
arpl
xchg
lds
or
fcomps
shl
cwtl
push
cwtl
pop
jae
xlat
and
enter
ja
or
insb
mov
pusha
mov
je
jnp
xor
lret
jns
mov
enter
mov
jb
pop
addr16
call
jecxz
je
dec
inc
adc
xchg
mov
pop
pop
dec
outsl
lods
inc
mov
cld
movsl
ss
shr
mov
stos
inc
ret
jne
ja
inc
cmpb
xchg
fildl
popa
or
lea
lods
mov
aas
outsl
and
fadd
cmc
adc
pop
loopne
insl
mov
loop
lret
sbb
fs
ds
mov
sbb
shrb
fbld
jo
je
cmp
mov
pop
mov
jne
push
sbb
xor
cmpb
mov
adc
hlt
or
pop
and
jae
sbb
inc
inc
clc
xor
pop
stos
pop
aad
sbb
adc
repz
cmc
jo
ud2
push
test
and
or
outsb
in
orb
movsb
and
push
sub
xor
leave
ss
push
cmp
push
rcll
mov
imul
int3
lcall
js
fsubs
sbb
lret
pop
push
repnz
sub
sub
movsl
push
sbb
pop
xor
cmpsl
outsb
pop
push
outsw
cld
repnz
test
push
pop
stc
mov
jbe
sbb
jbe
call
cmp
cmp
or
fidivl
call
popa
out
dec
frstpm(287
mov
mov
clc
cs
addl
fbstp
nop
aam
inc
cmpsb
rcll
mov
mov
sub
es
out
inc
aaa
out
jecxz
mov
pop
adc
pop
xor
xchg
mov
fucomip
nop
scas
fs
and
mov
pop
push
xchg
and
or
jae
fnsave
jo
jl
sub
mov
xchg
xchg
jb
clc
gs
push
repz
flds
outsl
xor
inc
dec
fldcw
mov
outsl
adc
mov
out
pop
lds
aas
jp
rol
outsl
nop
jno
adc
jmp
cmp
mov
xlat
mov
or
test
cli
cmp
jge
pop
das
scas
cmp
sbb
daa
and
cs
sub
add
shl
sahf
lcall
fisubl
mov
in
fisubl
jns
cmp
or
or
lahf
syscall
mov
inc
jne
push
push
mov
insl
xchg
daa
and
xchg
dec
and
jg
aam
dec
cli
out
ret
gs
mov
and
sbb
fstpt
or
sub
sbb
sub
jno
xor
xchg
inc
jp
testl
imul
inc
ljmp
cmp
pop
inc
repz
cmpsl
pop
xor
inc
sub
outsl
shll
dec
add
mov
dec
sub
imul
je
jnp
sbb
cld
outsb
rcrl
out
push
push
loopne
fcoms
cmp
scas
xor
jecxz
xchg
mov
xor
pop
addl
dec
test
je
or
es
inc
pusha
cmpsb
call
in
xor
xlat
xor
orb
test
sub
dec
inc
push
faddl
xchg
inc
imul
push
arpl
jle
mov
fldenv
ret
loop
add
outsl
pop
cld
xor
dec
xchg
mov
jae
mov
enter
xchg
repnz
and
lret
sbb
mov
mov
xchg
and
test
pop
loopne
mov
mov
add
mov
lahf
mov
das
xchg
add
clc
repnz
das
xor
in
and
pusha
jmp
lret
cmpsb
xchg
pop
pop
and
xlat
cmpsl
xlat
mov
sti
mov
cwtl
jge
adc
and
jo
ljmp
cmp
emms
push
xchg
cmp
insl
scas
das
dec
cmp
jns
les
cmc
adc
imul
inc
cmp
cmp
xor
popf
movsb
push
jp
sbb
icebp
fildl
mov
jl
or
sahf
rcrl
push
push
jmp
xor
movsl
addr16
rorl
adc
imul
mov
stos
cmpsb
ja
rcll
in
in
or
nop
xor
mov
dec
inc
xor
insb
mov
shll
sbb
dec
loop
stos
in
mov
out
out
push
sbb
jnp
cmp
out
add
cs
test
dec
sqrtps
nop
sbb
ret
ja
test
push
mov
mov
lcall
adc
lock
fsubrl
jo
ss
dec
lret
movsl
dec
fdivl
xchg
in
xor
add
stos
shlb
ja
xor
jmp
lods
fldcw
jb
stc
leave
sub
mov
pop
cmc
add
test
adc
cmp
dec
stc
cli
test
bound
lds
mov
cmp
push
mov
das
jb
dec
shll
mov
ret
mov
mov
xlat
jge
push
stos
rolb
shlb
out
in
push
sub
bound
loope
push
addl
or
push
lds
sub
daa
testl
inc
pop
push
popa
aam
aas
das
pop
sbb
mov
out
mov
test
dec
popa
insl
add
pop
push
pop
pop
mov
outsb
fadd
sub
jge
push
add
clc
addl
mov
js
mov
enter
add
mov
fidivrs
pop
jg
leave
sbbl
and
adc
dec
push
cmp
pop
out
sub
loop
in
cs
push
lods
pop
ret
fwait
dec
stos
dec
cmpsb
dec
push
push
test
jmp
pop
push
lcall
int
mov
add
sbbb
cli
and
fldlg2
inc
test
lret
push
shlb
clc
xchg
fimull
mov
iret
sub
mov
adcb
pop
mov
push
ds
stos
icebp
or
sbbb
fldt
mov
sbb
xchg
lds
pop
gs
cmp
call
js
mov
sub
adc
movsb
lret
dec
in
inc
lcall
rolb
inc
adc
fsts
push
pushf
sub
mov
cmp
mov
adc
inc
in
insb
sbb
js
jnp
cmp
enter
mov
jecxz
fbld
pushf
or
sub
inc
pop
gs
in
pop
pop
jb
xchg
jecxz
adc
adc
into
jg
mov
neg
arpl
and
push
adc
cmc
cwtl
loop
xor
out
inc
push
les
out
mov
int
int
sbb
std
adc
ljmp
sub
mov
fwait
push
addr16
push
mov
sbb
xchg
ljmp
or
lds
add
sbb
ficomps
lock
loope
jg
out
push
and
xor
fldt
sub
dec
mov
clc
xchg
inc
mov
int3
cmp
jno
loop
je
rcrb
pop
mov
outsb
xlat
or
push
fwait
sub
jnp
mov
or
xor
test
imul
movsl
cmc
out
jns
lret
movsb
mulb
xchg
orb
test
xor
pop
xchg
aam
pop
or
andb
sub
fnstsw
pop
pop
data16
fnstsw
lock
mov
lret
movsb
jns
sti
inc
sub
je
jbe
mov
dec
lock
lret
int
inc
icebp
xor
and
movsb
and
dec
sahf
or
lock
subl
popf
or
stc
cmp
sbb
pop
stos
jp
imul
adc
cmp
pop
insb
gs
aad
imul
dec
push
movsb
jb
std
cld
and
scas
out
call
mov
adc
xchg
sub
xor
shl
lret
arpl
out
loope
test
inc
jnp
pop
sub
ljmp
test
mov
lods
xor
pusha
leave
addr16
xchg
mov
mov
sub
lahf
jne
mov
xor
jecxz
mov
mov
repz
sub
pop
inc
mov
xor
push
movsl
jnp
mov
insl
rolb
movsl
add
mov
jp
mov
mov
jb
into
or
aaa
mov
xchg
xor
xor
js
push
jmp
repnz
sbb
dec
xor
fcom
jg
iret
shrb
lds
push
call
xorb
mov
in
loopne
stos
lcall
lar
mov
popa
jbe
enter
shlb
lea
jne
movsb
jge
leave
sbb
inc
aad
jg
fwait
sub
xor
jmp
xchg
ljmp
inc
jns
sub
cltd
mov
mov
in
rorb
repnz
test
sub
pop
gs
insl
scas
fnstsw
pop
mov
mov
aas
iret
shlb
jnp
jecxz
mov
push
xchg
mov
add
mov
lcall
jl
inc
xchg
jp
ficompl
sub
sub
ud0
xchg
sbb
jnp
cmp
mov
jbe
je
jge
sbb
add
push
mov
mov
cli
sahf
mov
jmp
and
les
push
jg
lock
push
test
push
mov
pop
xor
imul
insb
insl
and
pop
pop
pop
add
inc
lea
fcompl
mov
mov
mov
cltd
adc
jbe
jbe
push
pusha
imull
mov
inc
pop
test
and
aad
mov
pop
mov
push
imul
xor
fsubl
enter
fdivrl
scas
push
aam
xor
xor
inc
mov
mov
lret
fistl
sbb
loop
test
popl
dec
push
or
or
push
jnp
or
and
inc
test
inc
cmp
cmc
mov
dec
out
jle
mov
mov
call
cmc
push
fcomip
ret
andb
iret
mov
xchg
imul
add
and
jecxz
cmc
je
loop
nop
pop
out
fisubrl
push
out
dec
jno
jnp
cmp
sub
icebp
lea
inc
mov
xor
inc
xor
dec
arpl
push
cmp
ret
ret
int
jae
jnp
cmc
fbstp
ret
mov
aad
cld
hlt
jns
push
push
scas
add
jecxz
mov
out
dec
or
push
aas
stos
popa
mov
mov
inc
jp
and
add
jne
jp
pop
ljmp
stos
jge
mov
mov
lret
out
pavgw
bsf
scas
jl
insl
dec
int3
mov
mov
inc
mov
scas
inc
jae
xlat
inc
mov
movl
mov
cmpl
sbb
sbb
jnp
cwtl
and
fwait
jecxz
in
inc
jecxz
mov
sti
adc
cmp
loopne
scas
mov
adc
lock
jno
femms
jmp
push
pop
imul
xor
shlb
mov
mov
sbb
addl
rcrl
cld
push
mov
xor
enter
rcrb
mov
arpl
dec
jl
cltd
jg
into
xchg
pop
loope
jg
lock
testl
lret
xchg
sarb
mov
mov
adc
dec
mov
or
jl
aaa
popa
adc
fistpl
xor
fs
repz
sbb
inc
mov
xchg
test
cmp
mov
push
jecxz
loop
pop
mov
push
shrb
mov
mov
movsl
outsl
iret
mov
jb
ss
ror
lock
daa
push
push
sbb
push
into
scas
lahf
pop
lret
push
imul
les
xchg
xchg
pop
nop
push
cltd
mov
inc
mov
repz
or
cmpsb
lret
xchg
add
xchg
cmp
dec
and
sbb
stos
cwtl
inc
mov
adc
cmp
inc
lret
imul
addb
xchg
dec
adc
cltd
das
scas
gs
and
divl
in
ja
jbe
call
jmp
mov
or
dec
push
testl
cmp
dec
mov
popa
inc
jnp
std
jg
cmp
repnz
and
cmpsb
xor
jb
idivl
xlat
jnp
adc
movsl
hlt
repnz
xchg
je
ficomps
adc
lcall
inc
xor
std
movsl
push
cmp
mov
sbb
inc
sub
ljmp
xchg
sbb
addr16
and
sub
xor
loopne
jnp
jl
cmp
ja
ret
adc
cmc
jmp
mov
add
clc
xchg
and
and
lock
nop
lcall
les
and
sti
out
cmp
leave
adcl
inc
add
add
aad
and
sub
mov
sub
stc
pop
andl
test
sub
lahf
xchg
daa
xchg
mov
and
inc
jns
pop
scas
sahf
fstl
cmp
sarb
pop
mov
test
prefetch
negl
bnd
lea
icebp
xor
int
mov
cld
out
je
xchg
pop
leave
dec
xchg
pop
inc
out
xchg
bound
lea
mov
insl
add
xchg
out
mov
push
fs
pop
cmpb
insb
push
add
bound
mov
ja
mov
test
xchg
js
scas
inc
fadds
insb
jne
ljmp
jge
popf
lds
jge
jp
testl
mov
aaa
jnp
xlat
hlt
pop
sub
cmp
jmp
xchg
into
cmpsl
nop
nop
cmc
fiadds
mov
fsubl
rcl
loopne
mov
pop
les
rcrl
cs
xlat
and
xchg
fisttpll
push
lock
dec
pop
adc
adc
adc
icebp
pop
sub
mov
mov
movsl
lea
andl
adc
sub
xor
mov
cmpsb
xchg
fdivrp
cltd
rorl
pop
mov
mov
imul
inc
xlat
icebp
mov
xor
cmp
pop
and
adc
out
pusha
ret
xlat
je
jl
push
test
pop
inc
cmc
fsubl
inc
loop
sub
movsb
pop
fwait
je
mov
pop
out
shlb
scas
add
pusha
sbb
stos
and
pop
mov
mov
jmp
lahf
aad
xorl
jg
mov
repnz
pop
push
lods
inc
rorl
fimuls
pmaxub
or
cmp
jne
int
mov
mov
cmp
lods
push
lods
mov
cmp
jle
xor
dec
cmpsb
sarb
xor
adc
cltd
jno
xchg
jae
add
ljmp
and
cmp
mov
nop
ficomps
dec
into
or
fstp
jmp
inc
push
xor
rorl
les
pop
dec
fstpt
mov
cmp
xchg
pop
or
add
cltd
into
shlb
xchg
mov
mov
push
jecxz
push
cmp
push
adcl
lcall
push
pop
pop
sub
lahf
scas
repz
and
push
mov
mov
xor
sti
pop
dec
dec
ret
or
cmpb
inc
nopl
lods
mov
mov
add
bound
inc
shrb
inc
sbb
adc
mov
cltd
das
icebp
outsb
xchg
loopne
and
lret
mov
cmp
jb
xor
data16
xchg
mov
lret
inc
sub
arpl
mov
adc
push
inc
aam
jb
or
xlat
popa
xchg
pop
xchg
dec
cmp
pushf
inc
xlat
cmp
sub
add
and
fsubrl
dec
pop
mov
pop
inc
adc
adc
cmp
lcall
loop
mov
lods
pop
shrl
data16
xlat
lahf
add
arpl
imul
add
mov
in
stc
jns
cli
iret
push
pop
xor
arpl
xor
ret
adc
stos
mov
mov
mov
pop
mov
cmpsb
test
jno
pop
jge
lea
add
cmp
pop
lods
and
push
enter
xor
xor
aad
repnz
ljmp
xor
int3
das
pop
pop
sbb
mov
xchg
lock
orl
scas
xor
sub
xor
xchg
add
sub
es
sub
enter
lret
push
lea
lds
ds
sbb
sarb
repz
in
es
cli
das
pop
test
inc
rorl
fsubr
or
pop
imul
sub
pop
sub
inc
mov
mov
sarb
push
mov
fsts
pop
sbb
inc
mov
mov
pop
fstpt
add
scas
and
jb
ret
and
call
sbb
int3
or
ljmp
into
nop
xlat
test
push
mov
loope
test
shrl
into
mov
xchg
pop
adc
push
iret
aam
sub
jb
dec
or
fldcw
insl
jg
push
dec
lea
cmpsb
push
rcrb
mov
lds
pop
add
pop
loop
xor
sub
bound
pop
test
xchg
mov
mov
add
dec
pop
sti
jmp
sub
jle
and
pop
dec
adcb
or
xchg
mov
arpl
ss
sub
lret
or
lods
cmp
fwait
push
mov
cmpsl
cmp
gs
jae
ret
mov
std
cmp
les
sbb
sub
xchg
pop
test
mov
cmpsl
ja
dec
adc
fs
jae
and
xchg
fstpt
leave
sub
cmp
psubw
andl
ja
push
sub
icebp
test
lods
movsl
loop
mov
jg
xchg
add
stc
cltd
jle
pop
inc
fucomip
shrb
sub
push
nop
out
jmp
orl
mov
lcall
fimull
jno
insl
popf
loopne
mov
sbb
xchg
inc
xlat
inc
insl
pop
rcr
push
pop
outsl
push
popw
data16
cmp
pop
js
lods
jb
adc
fists
lret
mov
jle
pop
mulb
pop
jno
repnz
inc
cmp
popf
bound
in
mov
daa
cmp
sbb
popa
cmp
inc
sysexit
xchg
jge
push
mov
lret
scas
in
jbe
jb
mov
xor
loopne
adc
pop
cwtl
cld
les
in
mov
int
dec
mov
mov
mov
mov
mov
cs
xlat
movsb
inc
sti
pop
push
pusha
xor
mov
jae
cld
pop
sub
pop
insb
mov
xor
fcoml
leave
fstpt
outsl
mov
in
daa
jnp
gs
or
pusha
add
and
addr16
stc
push
shlb
insb
mov
inc
pop
lret
mov
popa
out
mov
adc
and
cmpsl
and
xchg
fisubs
dec
stos
mov
push
push
stos
imul
pop
xor
cmp
mov
pop
xor
jg
xchg
pop
cmp
imul
jge
hlt
arpl
pop
mov
lock
sbb
fisubs
mov
mov
cmp
add
andl
jle
rol
loopne
lock
and
push
and
mov
jp
push
xor
pop
inc
rclb
or
sti
pop
mov
sbb
sub
xorl
inc
add
jb
cmp
int
call
dec
jnp
sub
or
jge
xor
sbb
jno
sub
test
bound
dec
sub
mov
out
sbb
aas
shrb
add
mov
adc
enter
lret
xor
adc
sbbl
sub
rcll
mov
sub
cmp
out
fdivr
rcrb
dec
cld
loopne
jo
inc
push
pop
loopne
shr
outsl
xor
fmull
icebp
mov
leave
addr16
enter
mov
mov
jnp
and
lahf
mov
pop
rcl
bswap
mov
and
push
arpl
xlat
js
jecxz
sbb
mov
xchg
aas
cmp
mov
push
mov
aaa
call
lcall
int
sbb
inc
xor
mov
std
mov
mov
inc
cmp
xor
mov
gs
or
dec
jb
mov
subb
pop
adc
lods
xchg
movsl
cs
mov
add
mov
push
and
iret
hlt
xchg
fnsave
test
out
xor
lret
pop
cmp
or
jns
fidivl
lea
mov
scas
mov
cltd
mov
sbb
xor
scas
fsubrl
adc
lret
imul
clc
mov
mov
ret
iret
je
fstpt
int
icebp
sbb
daa
inc
inc
inc
inc
mov
lods
cwtl
xchg
xchg
pop
and
fnsave
lock
jmp
into
add
insb
jge
out
cs
push
lret
or
jl
mov
rorb
cmc
jne
adc
testl
xor
jmp
outsb
dec
insb
out
sbb
popa
int3
add
mov
mov
test
test
jmp
jmp
shr
add
jle
inc
scas
cmp
sbb
inc
insb
sub
imul
push
dec
cmpsb
or
sub
in
loope
fwait
sub
mov
scas
mov
xlat
in
sarl
xchg
add
dec
cld
jle
cmp
std
arpl
pop
push
jo
mov
push
xor
and
addps
jle
scas
cmpsl
call
sub
cmpsb
cld
ret
inc
or
insb
cltd
xchg
jbe
inc
mov
cli
mov
xchg
push
or
jo
add
push
vpmacssdql
inc
stc
fidivrs
clc
test
dec
inc
mov
mov
enter
loope
mov
cwtl
dec
xchg
das
push
outsb
popa
fmull
lcall
cmpb
pop
call
xchg
lods
cmp
mov
in
lds
jmp
mov
push
xor
add
or
push
push
cmc
jmp
scas
cmp
leave
mov
cmp
stos
lret
sub
scas
test
mov
fs
dec
mov
cmp
rorl
loope
push
xlat
mov
ja
das
push
inc
outsl
xchg
lea
rorb
lcall
adc
lods
jb
fimull
loope
sbb
push
popw
add
or
lcall
ljmp
push
or
pop
push
adc
cld
dec
insb
popa
cli
aaa
test
scas
sbb
dec
mov
pop
inc
stc
mov
test
lea
call
or
mov
sbb
ds
mov
shll
lods
or
lret
pop
bound
xchg
cmp
fadds
mov
loop
dec
pop
pop
pop
call
jbe
lret
sbb
std
push
pop
stc
ds
fs
push
lods
sar
shrb
mov
test
pop
popa
jmp
add
lahf
addl
dec
push
sbb
out
push
jb
xor
mov
and
push
int3
ljmp
xlat
sbb
sahf
test
fwait
int
je
push
cmp
dec
push
stc
cmpsb
mov
sbb
test
sub
or
xor
push
movsl
repz
cvtpi2ps
mov
sub
adc
and
pop
dec
sbb
jb
ds
push
push
xor
pop
and
mov
pop
sbb
push
or
cmpsl
jns
push
fiaddl
xchg
xlat
xchg
mov
sub
pop
ret
fsub
sti
fcmovnu
dec
jmp
dec
mov
lret
mov
push
jns
int3
and
sub
testb
cwtl
cwtl
js
mov
adc
pushf
mov
dec
cmpsl
sbb
xor
add
fucomi
mov
mov
sbb
out
jne
mov
addb
push
dec
aas
add
jbe
adc
and
std
xchg
cmpsl
inc
into
xor
jl
sahf
dec
mov
insb
or
xchg
jae
xor
pop
fcompl
loope
mov
and
adc
sbb
idiv
adc
js
inc
orl
sub
shrb
xchg
cmp
hlt
ss
lahf
mov
repz
and
xchg
push
mov
pop
mov
xchg
mov
test
push
ja
jp
sbb
or
sub
in
cli
pop
cmp
push
jae
in
divb
fs
aam
rorl
std
nop
mov
pop
dec
and
inc
jmp
or
push
data16
les
lret
iret
ret
lret
clc
pop
lea
nop
ret
ret
dec
pop
cmp
mov
push
das
cld
mov
je
sbb
lods
pushf
push
mov
lcall
negb
inc
jl
add
aas
into
andl
jmp
mov
pop
aas
inc
cmp
ret
iret
xor
jae
pop
jno
sub
popa
ret
cmpsb
cvtpi2ps
jne
inc
push
scas
enter
pop
rcrb
sbb
mov
cmp
push
ja
xor
test
outsl
pop
hlt
sarl
out
es
shll
jb
mov
mov
lret
sahf
or
outsl
xor
inc
adc
mov
cmp
jg
ds
add
enter
push
push
out
stos
cmp
xlat
inc
pop
outsl
jae
adc
clc
lea
mov
push
and
jmp
inc
lock
cltd
mov
xchg
inc
xchg
adc
add
cs
mov
cltd
inc
lock
push
inc
adc
aam
pop
mov
arpl
push
repnz
xor
fsubr
std
loope
sub
jns
incb
testl
dec
cmpl
scas
repz
sbb
inc
fdivs
rol
mov
xchg
jge
into
ja
jb
add
or
and
add
or
scas
ja
iret
xor
fcmovb
mov
push
jg
enter
in
out
xor
mov
mov
les
inc
pop
xchg
xchg
movsl
mov
out
pop
push
sbb
mov
cmpsb
cmpb
inc
sub
push
add
xchg
icebp
dec
push
cld
jne
jbe
xchg
dec
or
mov
and
or
push
xor
xchg
xor
int
mov
addr16
cld
push
in
lahf
out
lahf
mov
sub
imulb
int3
mov
push
push
fstl
fdivs
xor
mov
push
cltd
push
xchg
stos
roll
dec
adc
js
jbe
out
sub
mov
dec
scas
bound
test
xchg
js,pn
adc
sbb
mull
or
cld
fwait
push
js
pop
test
cmp
jo,pt
push
adc
add
or
test
pop
adcl
lods
xchg
je
test
bound
sbb
shll
sub
mov
mov
jne
test
xchg
out
and
pop
cltd
cmpsl
jg
mov
roll
lret
adc
xchg
adc
les
aam
jns
outsb
sub
jl
sti
jnp
arpl
push
adc
sbb
xor
enter
mov
add
xchg
add
cmp
cmp
shrb
cmc
pop
sbb
jmp
sbb
out
xchg
or
and
sahf
dec
imul
lods
neg
imul
push
xchg
cmp
lods
stos
cmp
push
mov
sti
sbb
sub
dec
insb
call
fstps
cmp
loopne
xchg
loop
movsl
loope
inc
lods
sub
pop
mov
dec
sub
jmp
insl
sbb
and
into
cmpsl
out
ss
add
push
dec
movsb
out
hlt
sarl
jl
orl
push
sub
das
mov
rcrl
and
dec
ss
add
fildl
push
inc
xlat
lds
xchg
mov
fdivrs
icebp
pusha
add
add
push
hlt
or
shll
in
xchg
lods
cmp
jmp
cld
or
pop
cmp
subl
push
xchg
and
test
xor
xchg
xlat
push
fstl
or
test
add
dec
loop
xchg
or
imul
fistpll
dec
iret
scas
ljmp
push
xor
push
pop
lahf
les
cmp
and
fwait
dec
mov
jg
add
mov
cwtl
sub
repnz
cwtl
sub
repz
sub
add
std
leave
or
pop
pop
std
sbbb
in
adc
dec
inc
jne
dec
inc
test
nop
push
add
pushw
ljmp
xchg
inc
mov
inc
sbbb
mov
add
dec
mov
sahf
lret
pop
test
test
push
into
fwait
popa
add
filds
xchg
push
scas
dec
cmp
aaa
dec
xchg
sub
jecxz
jo
pop
data16
jge
mov
ret
fcmove
jle
gs
repnz
add
std
loope
sbb
mov
pop
mov
in
mov
sbb
push
mov
xlat
iret
xchg
sub
push
lcall
les
jns
in
mov
push
lret
and
jo
js
pop
push
cmpsl
xor
inc
mov
data16
inc
inc
xchg
mov
test
mov
cmp
lods
xchg
xor
or
xor
dec
lods
sub
jg
gs
call
push
sub
adc
xor
cltd
adc
incb
jns
aad
pop
add
popf
sbb
out
leave
push
hlt
lret
stos
jnp
dec
jb
pop
inc
das
lods
popa
popa
mov
rcrl
in
test
dec
mov
mov
pop
add
add
out
movsl
rolb
lcall
jecxz
and
js
push
js
hlt
jp
cmc
jle
sub
rcrl
les
hlt
lcall
push
mov
xor
or
fisubl
call
mov
data16
xchg
sbb
jle
xchg
mov
mov
iret
mov
jne
aaa
push
push
lods
ss
ficoms
or
pop
cmp
lock
gs
dec
xchg
jge
test
pushf
dec
daa
or
mov
pop
jmp
icebp
sub
popa
cmp
or
mov
and
xchg
ja
lcall
jbe
movsb
mov
inc
mov
add
and
mov
cmp
adcl
xor
cmp
mov
mov
and
and
add
mov
in
js
mov
mov
sarl
or
shlb
incl
xchg
sbb
pop
xchg
jp
and
jo
and
in
cmp
int
cmp
jnp
stos
dec
push
push
dec
xor
loope
mov
xchg
es
test
lods
xor
xor
push
das
inc
jb
mov
inc
fsubp
lahf
cmp
gs
pop
clc
pop
mov
pop
pop
popa
mov
adc
cmp
nop
sub
mov
test
gs
mov
mov
movsl
jle
push
aaa
or
ja
adc
flds
jg
mov
ljmp
mov
call
test
popf
aaa
jno
pop
fstl
out
sbb
push
xchg
dec
movb
pusha
push
or
sub
dec
clc
ret
jg
xchg
enter
add
jae
arpl
fisttpll
sub
jp
ret
lds
pop
adc
mov
ljmp
mov
xor
sbb
dec
rcl
pop
dec
xor
adc
xchg
and
mov
rol
icebp
jb
jno
daa
mov
pop
jl
arpl
aas
es
outsl
mulb
es
xor
ret
or
dec
sbbl
movsl
in
js
fwait
es
push
cli
inc
sbb
sti
sub
sbb
xchg
ss
add
inc
push
dec
inc
int
or
popa
ds
mov
inc
loopne
and
and
mov
adc
push
push
imul
jae
mov
push
mov
and
add
cltd
dec
lods
repnz
sub
pop
xor
shl
std
pop
mov
sbb
lods
rcrl
push
jne
or
jb
cltd
pop
loop
fwait
gs
pop
mov
stos
sub
mov
jns
es
push
daa
ret
adc
mov
jae
rcrb
sbb
fsts
push
stc
push
incl
mov
jecxz
jnp
or
hlt
xchg
jg
imul
gs
fldt
sub
fldl
cmpsb
repnz
jge
inc
jo
shrb
jbe
cvtdq2ps
mull
lods
les
dec
hlt
mov
aam
cli
xchg
cs
inc
loopne
add
inc
pop
popf
mov
pop
arpl
shrb
in
lock
sub
push
lret
lock
adc
rcrb
in
sub
xchg
push
jg
mov
push
xchg
fistpl
clc
push
pop
popa
cli
mov
mov
xchg
out
leave
int3
mov
and
jp
in
popa
outsl
sub
mov
cmp
jl
adc
adc
cmp
ljmp
pushf
add
repnz
or
inc
ficompl
sbb
mov
inc
int3
stc
or
pop
insb
stos
xchg
pusha
mov
movsb
iret
dec
lods
and
xchg
and
into
in
mov
outsl
sbb
lods
inc
cmp
shrl
mov
mov
out
pop
xor
sahf
test
sbb
and
iret
sbb
jle
mov
sub
add
mov
and
shr
and
dec
movsb
sbb
mov
xor
inc
mov
jae
movsb
popf
scas
mov
pop
out
lea
leave
enter
pop
sbb
lret
faddl
push
les
jne,pn
xor
repz
or
xlat
push
mov
in
call
call
filds
sbb
pop
test
add
jle
mov
add
mov
pop
fidivs
or
mov
leave
in
idiv
jge
mov
pop
dec
mov
dec
sti
mov
loope
xchg
add
aas
out
stc
pop
clc
mov
insb
fisubrs
xchg
xor
testb
add
ret
addl
loop
jge
mov
cmp
movsb
in
outsb
jl
sub
jnp
push
jg
adc
sahf
or
out
inc
sbb
and
nop
cmp
jns
repnz
popa
cld
int
push
mov
sub
enter
cmp
adc
pop
jp
push
adc
popf
in
insb
and
in
fwait
push
sub
inc
jb
xor
popa
jbe
les
fmull
jns
pop
and
lcall
rcl
adc
pushf
cmp
dec
inc
xor
or
pop
iret
loop
icebp
xchg
sub
pop
loopne
sbb
push
pop
mov
xor
jmp
adc
add
imul
xchg
arpl
cmp
push
out
imul
fbstp
pop
cmp
mov
jno
jg
sahf
and
sub
mov
sub
cmp
add
insl
pushl
cs
stos
lret
fisubrs
xor
cmp
pusha
aam
xorb
icebp
mov
andb
mov
imul
and
lock
xchg
push
fsubrs
xor
in
sahf
addr16
ret
dec
mov
orl
mov
lea
adc
sub
je
shll
add
cmp
stc
add
arpl
xor
rcrb
decb
cs
pop
mov
push
and
dec
loope
add
dec
xchg
push
push
jns
cmpsl
adc
addl
shl
jns
push
std
jb
daa
mov
sbb
int
orl
and
call
inc
out
ret
mov
mov
int
jae
mov
or
ja
addr16
xchg
jmp
add
mov
rcrl
or
push
nop
xchg
mov
dec
or
mov
imul
and
imul
cmpsb
lret
stos
mov
popa
test
jo
lcall
dec
adc
sahf
push
push
stos
push
frstor
inc
push
sub
or
scas
sbbl
aaa
fdivrl
jmp
mov
xchg
jle
or
movsl
jno
mov
adc
add
mov
loope
and
stc
add
lods
push
lahf
cld
mov
roll
xchg
dec
leave
lods
mov
sbb
fsubrl
enter
xchg
cmpsb
mov
and
mov
lock
stos
xor
jns
shl
inc
movsb
pop
cmp
addr16
js
jb
inc
mov
insl
pushf
push
sbb
ljmp
adc
cmc
bound
ja
lcall
int3
and
les
pushf
inc
jp
mov
or
mov
jbe
jg
inc
sub
rclb
test
inc
xchg
lcall
fmul
sti
adc
pop
cld
fwait
inc
cld
jae
sbb
sbb
add
out
xor
cmpsb
and
xchg
jl
aad
mov
dec
lods
stos
test
inc
push
mov
push
sbb
loop
adc
cld
xchg
and
mov
cmpsb
xchg
jbe
cmp
pop
mov
out
push
je
outsl
xchg
out
mov
mov
into
or
add
call
in
setb
sti
decb
es
repz
std
xchg
jo
jle
jno
out
or
outsb
adc
iret
addr16
in
cmp
mov
cmpl
je
cmp
adc
inc
lret
or
js
push
pop
jp
sahf
aad
xchg
jp
lret
pop
notw
dec
inc
insb
mov
jge
sub
cli
lods
xchg
sub
push
push
lret
movsl
push
in
cmpsb
mov
jp
test
sbb
rorl
adc
aam
push
movl
ja
xchg
andb
in
lret
xor
jae
movsw
dec
std
fdivl
or
dec
mov
mov
mov
jp
add
ja
stc
mov
rol
jmp
test
int3
in
out
cmp
insl
rcr
add
lret
or
cmp
and
xchg
push
mov
les
pop
loope
repnz
cmp
rcll
lahf
ret
sti
lea
mov
dec
in
cmp
je
inc
jae
dec
clc
in
or
xchg
xchg
mov
lcall
lods
sub
push
adc
fadds
cmp
imul
xor
adc
dec
in
xorl
enter
mov
dec
mov
jmp
xor
mov
pop
int
or
addr16
filds
pop
in
test
xchg
mov
jno
aas
cmp
test
movsb
jg
test
rcr
adc
mov
push
mov
cltd
sbb
aam
sbbl
fstps
insb
inc
lds
outsl
inc
rorl
inc
dec
stos
scas
pop
sbb
jb
push
push
xor
stos
insb
loope
outsl
xlat
cltd
ds
inc
bound
mov
xlat
and
pop
sub
nop
xchg
movsl
xor
jo
mov
js
pop
add
dec
ret
adc
mov
rcr
add
fisttpll
adc
dec
adc
or
shll
xchg
lcall
xchg
ret
sbb
popf
mov
inc
lds
ja
push
pop
leave
pop
into
sub
xor
sub
jbe
add
cltd
dec
xchg
push
loop
xchg
push
ret
pop
add
inc
in
jae
adc
add
jno
popf
push
jnp
pop
push
inc
inc
add
sub
mov
addr16
xchg
fsubrl
xchg
add
insb
cwtl
push
pop
mov
push
pop
pop
int3
push
mov
xchg
dec
dec
pop
outsl
jl
mov
and
and
pop
mov
or
es
setno
add
inc
mov
insl
loopne
dec
sbb
add
or
pop
in
pusha
lea
fs
outsl
jge
ret
jecxz
or
adc
cmp
mov
mov
add
xchg
sbb
xchg
xor
iret
jmp
push
add
sub
stos
out
ret
cmpsb
sub
jmp
pop
push
fisubs
out
xchg
xchg
xchg
jns
mov
mov
lahf
mov
cmovne
jo
popf
fidivl
xor
or
mov
lds
dec
loop
aas
dec
movsb
ja
pop
mov
or
repnz
mov
or
add
xchg
jo
jmp
dec
inc
cld
mov
adc
adc
or
mov
pop
je
sbb
pop
push
xor
xchg
aaa
mov
fucomip
mov
pop
sbb
pop
dec
test
les
es
sti
xchg
repnz
incl
sbb
or
pusha
lcall
in
sbb
enter
mov
cmpsb
mov
test
jae
jl
xchg
mov
inc
push
sbb
fwait
testb
loope
push
stos
pop
es
mov
push
jp
and
mov
and
daa
das
in
mov
hlt
inc
je
and
bound
xor
aad
jle
adc
adc
jbe
sub
push
cmp
insl
shrd
lods
mov
sti
push
aad
in
notb
stc
xor
mov
loopne
cmp
and
mov
stc
fwait
es
push
inc
add
mov
dec
mov
pop
push
xor
icebp
jl
pop
adc
nop
fwait
aaa
add
in
push
lcall
insl
pop
mov
sbb
push
ljmp
les
sbb
mov
test
mov
sub
imul
mov
addr16
or
and
mov
je
mov
xor
push
jae
push
pop
pop
subl
push
loop
pop
jae
and
das
fstps
inc
cmp
clc
cmp
lds
sbb
jno
out
xor
push
mov
inc
xchg
out
pop
jb
push
jb
shl
call
mov
mov
sbb
pop
repnz
lods
pop
push
lcall
or
pop
ja
ss
and
xchg
inc
or
test
imul
bswap
push
sbb
mov
lods
jo
mov
jg
mov
out
sub
sbb
pop
divl
xchg
enter
scas
push
popf
shrl
sub
mov
jp
clc
cld
int3
fidivrs
stc
roll
test
jb
js
mov
in
in
rclb
movsb
movl
xchg
gs
adc
jo
cmpsb
lods
shll
jno
pop
ljmp
xlat
fcomps
dec
and
sbb
cs
fcoms
and
push
sbb
mov
repz
push
in
call
pop
test
in
dec
add
leave
je
stc
sbb
leave
lret
mov
cmpps
mov
fisttps
xlat
testl
rclb
xchg
scas
cwtl
das
and
push
mov
mov
testb
add
inc
jl
lods
dec
inc
cmp
adc
push
int3
je
adc
mov
mov
lock
jo
hlt
jbe
sarl
mov
cmp
cmpsb
jmp
pusha
sbb
xor
inc
pop
cwtl
mov
ret
out
aaa
lods
std
pop
int
or
pop
inc
rcrb
push
adc
imul
dec
mov
add
scas
jne
dec
xchg
jns
je
push
add
les
add
sub
jne
mov
dec
jecxz
xchg
test
pop
pop
jne
in
adc
and
popf
mov
roll
bound
push
jo
inc
int
bound
mov
or
test
and
pop
daa
or
call
cmp
and
movsl
scas
xor
movsl
ror
lods
pushf
xchg
outsl
scas
lds
ret
repnz
xor
shll
rcl
clc
cmp
test
test
out
sub
mov
ljmp
iret
mul
add
mov
jge
cs
rclb
jae
push
cld
lds
rol
repnz
gs
dec
int3
mov
push
movsl
outsl
out
mov
insl
aad
and
fistpl
outsl
or
pop
sub
mov
jge
lcall
adc
rolb
pop
stos
lret
xor
add
lods
ja
cmp
cs
dec
popa
mov
in
dec
movsb
push
hlt
lock
push
std
dec
dec
mov
mov
ds
ljmp
inc
xchg
cmp
ljmp
scas
xor
orb
pop
jg
popa
sbb
clc
sub
adc
lret
in
sahf
in
dec
pushf
cmpsl
add
das
leave
push
mov
popa
loopne
scas
xor
jno
rolb
rorb
aam
out
dec
push
dec
add
in
cs
iret
int3
inc
out
das
inc
mov
mov
mov
mov
and
and
xchg
js
in
pop
xchg
out
mov
mov
xorl
int
pop
cmp
sub
sbb
sbb
mov
dec
rolb
movsb
jle
or
iret
push
sbbb
aaa
aad
mov
cmp
dec
pop
test
jecxz
lock
dec
adc
xchg
inc
mov
jl
push
bound
popa
fwait
push
out
mov
stos
push
dec
sti
xlat
cmpsl
mov
push
or
std
insb
or
and
adc
jbe
daa
movsb
pusha
add
sahf
ja
out
ja
or
fbld
out
ret
jp
add
mov
rolb
jp
jecxz
and
xor
jle
add
xchg
add
and
lcall
sub
inc
xlat
jg
sub
xchg
mov
es
inc
cmc
and
push
insb
pusha
ljmp
jne
mov
iret
mov
cmp
jae
sbb
orl
add
and
out
mov
sti
cmp
push
or
in
xchg
leave
pop
es
mov
mov
pop
mov
cmp
jl
jge
icebp
xchg
dec
or
loop
ja
sbb
mov
hlt
popa
lods
ret
js
and
movsl
dec
xchg
sbb
mov
movsl
dec
in
cmc
stos
or
push
lea
lds
dec
roll
cmp
andb
push
cmc
pop
out
dec
int
in
pop
ret
hlt
mov
mov
lods
push
push
inc
insb
pop
sub
push
adc
mov
insl
ret
sbb
cltd
ss
add
mov
inc
mov
xchg
sbb
rorb
subl
and
cmp
xchg
aam
fs
out
xchg
aam
lahf
jbe
xor
mov
fildll
in
out
push
mov
or
pop
stos
sub
sahf
push
jle
xor
in
adc
addr16
out
add
mov
pop
out
xchg
dec
mov
mov
stc
mov
sbb
mov
stos
sti
push
cmc
and
push
pusha
pushf
and
mov
mov
mov
insb
sbb
cmpsb
mov
xorl
nop
mov
sub
or
out
mov
movsb
jnp
repnz
or
push
imul
popf
pop
std
cmc
jmp
cmp
jge
sub
xchg
mov
shrb
mov
popa
testb
and
jbe
pop
cmovno
inc
jl
mov
and
sbb
call
inc
shrb
xchg
push
out
push
mov
and
shl
out
lds
popf
shrl
jbe
loope
sbb
pop
pop
shrb
mov
push
push
jno
jecxz
imul
pushf
cmp
mov
fadds
sub
pop
dec
not
adc
jne
addb
cmc
outsb
ret
cwtl
sbbb
ucomiss
aaa
lods
adc
mov
add
adc
sbb
es
mov
movsl
push
jmp
mov
xchg
mov
loop
stos
outsl
scas
test
push
in
dec
fstpl
and
aam
icebp
aam
mov
cmp
add
lea
push
and
in
shl
daa
xchg
ret
xchg
andl
fwait
xchg
subl
mov
xor
loope
jecxz
mov
adc
loope
add
inc
js
xchg
mov
xchg
sbb
gs
and
scas
ret
sbb
dec
dec
or
fsubp
aas
popa
cmc
push
js
hlt
ret
sub
lock
jns
pop
jmp
bound
lods
pop
neg
jp
and
xor
inc
pushw
pop
out
xor
xchg
pop
dec
lods
mov
push
shl
pop
add
mov
mov
out
xchg
lods
xchg
inc
xchg
rcrb
loope
es
sbb
push
subl
sahf
jae
sbb
fcoms
ret
pop
cmc
stos
and
ficompl
cmp
movsb
subl
sub
inc
scas
sub
xor
lds
xchg
clc
jle
shrb
sbb
xor
dec
or
stos
mov
ret
jns
pop
lds
push
mov
sub
insl
repz
jae
insl
xchg
popa
mov
scas
int3
out
jae
add
mul
mull
popa
push
push
in
sahf
pop
stc
sbb
jb
cmp
push
nop
xor
dec
out
sub
pop
xor
clc
lods
movsl
mov
arpl
adc
inc
cmp
xchg
mov
lret
in
pop
pop
in
pop
xchg
das
cmpsb
mov
jle
xor
and
scas
loop
mov
ljmp
xchg
add
add
ret
push
push
ret
jl
adc
jbe
xor
pop
pop
add
bound
jl
xor
sub
mov
jl
xchg
cmpsl
push
stos
mov
adc
adc
scas
jnp
dec
popa
fwait
inc
mov
dec
mov
jnp
hlt
pop
std
pop
movsl
aaa
push
or
scas
in
std
sbb
inc
andl
cwtl
pop
cld
rol
add
out
popf
mov
mov
mov
lock
xor
insl
push
outsl
push
cmp
stos
xchg
sti
arpl
imul
cmp
pop
ret
lea
sbb
adc
xchg
movsl
inc
cmp
out
hlt
in
test
scas
sbb
push
cltd
sub
xchg
bnd
movsl
int
mov
test
lret
insl
outsb
pop
sbb
aam
pop
ljmp
ficomps
cmp
bound
addr16
inc
out
imul
imul
out
cwtl
inc
loope
xchg
xchg
sbb
stos
rcll
fstpt
push
sti
mov
popa
mov
pusha
cli
or
dec
xlat
pop
lds
mov
aad
icebp
cs
stos
xor
and
xchg
jns
pop
das
push
dec
adc
dec
dec
xchg
sti
es
imul
xor
ret
pop
mov
shrl
xor
push
or
lret
sbb
testb
fnstenv
movsb
lret
fiadds
dec
pop
movsl
mov
mov
out
loopne
leave
jge
sti
mov
cmp
scas
ja
sub
test
mov
jp
addr16
into
sbb
mov
insl
cmp
cmc
mov
sbb
mov
rcl
cmp
lret
sbb
imul
out
inc
das
pushf
out
mov
cmp
cmp
mov
js
cs
cmp
adc
add
movl
fistps
sbb
adc
test
orb
xchg
dec
pop
jmp
hlt
jb
sbb
cmp
lret
out
pop
dec
into
jge
out
mull
cld
jmp
scas
lahf
gs
xchg
add
cmpsb
rcrl
daa
pop
inc
mov
pop
imul
cmp
adcl
xchg
or
or
fs
mov
mov
jne
roll
fisttpll
icebp
add
inc
mov
dec
adc
jno
push
arpl
jb
inc
push
xchg
inc
mov
xor
mov
call
adc
cmp
mov
jb
popa
iret
xor
js
add
sbbl
scas
dec
mov
in
dec
loope
arpl
dec
add
jae
jb
adc
push
cmp
loope
push
sub
stc
xor
shll
sbb
mov
dec
mov
fadds
xor
je
aaa
or
cmpsb
mov
aad
adc
aaa
mov
enter
pop
inc
sbb
xlat
jno
test
imulb
adc
in
loope
test
mov
roll
add
into
pop
jl
mov
outsl
lcall
test
mov
mov
insb
stos
mov
subl
mov
mov
fcoml
pusha
sub
out
add
xchg
lods
outsb
out
adc
jg
jmp
imulb
lods
jg
int
adc
mov
loopne
pop
lock
sbb
movsl
out
stos
mov
inc
fwait
xchg
xor
jns
insb
out
stos
lock
iret
cmc
sbb
pusha
mov
test
xchg
lcall
mov
cld
mov
push
or
cmc
sahf
stos
mov
mov
jl
inc
fdiv
int3
mov
movsb
mov
jne
adc
out
vxorps
cmpxchg
jbe
addr16
sahf
or
adc
pop
jb
cmc
sti
fcmovne
inc
stos
aam
ret
pop
dec
subb
mov
xor
addr16
ljmp
jge
psraw
arpl
mov
xor
xchg
test
xchg
cwtl
mov
call
adc
push
sub
xor
daa
mov
out
ja
add
sti
insl
jmp
leave
sbb
push
and
pop
lahf
push
test
out
ss
dec
xchg
jb
xor
pop
gs
pop
lds
dec
sub
mov
add
dec
cmc
shll
je
lcall
rep
sub
mov
jns
negl
jnp
mov
movsb
movsl
movsb
leave
outsb
push
sbb
push
les
enter
cs
mov
cmp
in
lock
dec
std
stc
cmp
fidivl
push
lahf
insb
mov
loopne
imul
popf
imul
cli
in
adc
insb
or
leave
aam
xchg
xchg
inc
int
push
or
mov
enter
and
ss
and
cwtl
pop
sti
push
mov
or
or
imul
cwtl
cld
mov
popf
psraw
lds
cli
mov
xchg
and
dec
pop
push
mov
subb
out
pop
push
or
mov
mov
fbstp
fs
xor
fcomps
adc
ret
test
push
ja
addr16
push
mov
jo
arpl
fdivs
std
jle
mov
in
cmp
sbb
loop
mov
dec
fstps
dec
fiadds
lcall
dec
xchg
or
data16
and
jne
enter
dec
lcall
loope
in
ror
jno
imul
mov
xchg
xor
popa
ss
dec
in
scas
fwait
cmp
lods
out
adc
cmp
pop
cmp
pop
scas
out
mov
or
ss
xor
adc
mov
fcmovbe
aam
cltd
fsub
pop
mov
mov
add
jl
mov
pop
and
and
lret
into
mov
clc
sti
es
aad
scas
fdivp
add
sbb
pop
xchg
push
add
mov
and
sub
fsubl
ds
stos
fdivrl
ljmp
push
jle
sbb
add
insb
adc
inc
sarl
das
outsb
push
cmp
mov
xchg
js
mov
leave
lcall
xor
cmc
popa
lret
dec
sbb
inc
or
aaa
sbbl
stc
dec
xchg
cmc
lods
nop
fcmove
jb
fisubrs
jo
stc
out
sahf
xchg
xchg
cmc
sbb
cmpsb
sub
jns
xchg
cmc
dec
mov
adcl
pop
out
push
jmp
lret
sbb
jbe
and
mov
xor
add
mov
xchg
dec
lea
cli
jecxz
xor
dec
mov
mov
push
mov
fdivrl
xlat
fmuls
push
es
outsb
loopne
je
jg
stos
xchg
insl
loopne
push
insl
mov
inc
stc
sub
mov
arpl
bound
icebp
sub
cmp
pop
push
xchg
cltd
cmp
pop
jl
insb
push
lea
jg
ljmp
sbb
popf
sbb
adc
xor
mov
adc
jnp
gs
shr
lahf
cmp
jae
cwtl
xor
lock
xor
scas
sbb
mov
sti
xor
push
dec
mov
js
jo
es
nop
mov
lret
in
daa
lcall
cmpsb
cmp
sbb
lods
rcl
popa
mov
out
pusha
or
jne
cmpsb
pop
test
cltd
push
and
std
push
clc
outsl
or
jns
int3
and
mov
ljmp
es
test
mov
inc
out
xrelease
and
sbb
aad
jg
sbb
inc
shlb
adc
dec
imul
mov
jecxz
movb
inc
test
mov
mov
pop
dec
ja
mov
fcmovu
dec
dec
lea
fbstp
loop
lock
inc
test
pop
negl
mov
lcall
pop
or
xchg
cs
lods
push
fdivrs
inc
jmp
outsb
out
arpl
out
adc
fcoms
jbe
les
jmp
xchg
test
ljmp
jmp
bound
sub
js
jno
jae
in
fstpl
sbb
mov
cmp
lret
push
cltd
dec
std
cmpb
pop
mov
into
js
xchg
mov
sahf
mov
jecxz
test
repnz
aam
shl
inc
lea
cmpsl
jmp
fsubrs
psllw
scas
les
pop
dec
xchg
loop
arpl
mov
lret
mov
imul
bound
mov
sbb
dec
mov
rsm
or
in
adc
mov
xlat
iret
dec
mov
les
repz
inc
dec
jnp
and
pop
sub
cmp
and
mov
fdivrl
in
pmulhw
out
sub
ficoml
mov
xchg
sbb
xchg
pusha
loopne
int
inc
xchg
push
push
jge
xor
pusha
push
xor
insl
xor
jp
gs
call
jno
aad
movsb
les
fs
push
mov
sub
fstl
mov
pop
xchg
push
fwait
jg
mov
mov
sub
and
out
and
hlt
leave
imul
loope
inc
lret
inc
jb
push
nop
rcr
cvtps2pi
xor
ret
or
mov
mov
pop
test
cmp
and
sub
sub
stos
fsubr
xor
scas
push
loop
dec
clc
pop
xchg
sahf
jbe
push
push
shl
push
call
addr16
shrl
clc
outsl
mov
xchg
mov
xor
adc
nop
fs
std
iret
push
adc
repnz
mov
cmpl
in
inc
adc
in
rorb
dec
cmp
mov
sbb
xchg
cli
dec
adc
mov
push
stos
sub
dec
sti
fs
push
mov
dec
daa
sub
pop
les
jns
adc
call
test
xchg
divb
dec
pop
pandn
leave
or
ret
int3
jno
in
popa
xchg
jge
mov
or
pop
je
adc
popf
and
mov
cmpsb
and
adc
xchg
or
pop
xchg
dec
push
test
pop
movsl
cld
sahf
addr16
pop
hlt
lds
nop
scas
imul
out
pop
cmc
test
sub
ss
pushf
mov
aad
sub
cmp
insb
std
shlb
test
out
sub
mov
jbe
inc
sbb
icebp
pop
ss
pop
cmp
outsl
lock
les
mov
adc
dec
inc
dec
mov
inc
or
jp
mov
les
int
mov
mov
push
fists
pop
cmpsb
addl
xlat
aas
jp
addr16
adc
sub
push
push
shll
mov
ret
mov
pop
movsb
repnz
or
roll
cwtl
or
outsb
mov
adc
cli
dec
popa
ret
pop
out
cmpsb
push
js
ss
jne
dec
pop
ss
cmp
ljmp
sbb
lods
jbe
aaa
cmp
lret
xchg
insl
test
xor
or
jmp
cmp
and
stc
in
rol
ljmp
ljmp
mov
jg
je
hlt
mov
inc
stc
or
sbbb
jecxz
outsb
xlat
addr16
out
jl
enter
sub
xchg
test
rolb
dec
mov
fcmove
pop
addb
imul
jbe
out
test
dec
push
or
mov
mov
ror
lahf
addl
mov
cmc
mov
outsl
fsubs
in
xchg
je
loopne
gs
mov
push
aad
xchg
pop
inc
ds
cmp
pop
cmp
nop
pushl
mov
pop
movsb
fidivrs
loopne
lret
rcrl
into
popa
mov
jp
mov
mov
lods
mov
adc
sahf
fcmovne
jnp
scas
inc
mov
pop
mov
xor
ret
ficompl
lods
and
hlt
mov
pop
push
lahf
stc
push
mov
pop
decl
xchg
inc
mov
inc
ret
add
jae
cli
loopne
mov
mov
scas
sub
pop
rcrb
dec
lods
clc
dec
test
fs
adcb
outsl
test
sub
inc
in
add
xchg
bound
arpl
leave
movsl
cwtl
jecxz
xor
cld
movsl
fidivrs
shl
mov
fwait
mov
repnz
pop
push
sub
jmp
jge
jl
data16
pop
inc
repz
mov
addr16
jb
mov
out
pushf
imul
mov
push
enter
and
insb
mov
push
sbb
mov
pop
sti
adc
push
movsb
je
inc
idivl
pushf
dec
mov
sbb
cld
xchg
xor
aas
sub
test
jo
and
xchg
ret
scas
add
xor
test
pop
out
addl
dec
sub
sti
shll
or
mov
pop
pop
clc
fldcw
push
ret
or
mov
js
sbb
push
jp
mov
or
lahf
ljmp
add
popl
int
inc
pop
nop
push
push
jno
es
jo
popa
jmp
jo
dec
in
cmp
icebp
jl
xchg
xchg
bound
sbb
int3
lds
push
adc
push
lods
fcmove
insb
mov
cmpsb
aad
adc
sbb
lahf
adc
fs
xchg
arpl
pop
flds
clc
clc
sti
es
popa
aas
xchg
jge
les
cwtl
or
push
or
jmp
aaa
imul
roll
icebp
jecxz
aas
or
loop
loope
ljmp
push
pop
clc
int
hlt
mov
add
ja
inc
jl
test
shr
sbb
data16
sub
add
pop
sbb
add
add
xchg
fstps
fnstenv
sarl
imul
add
jge
add
mov
xor
cltd
fnstsw
mov
enter
jbe
mov
sub
sub
sbb
repnz
popa
in
or
out
sbb
shlb
rclb
aam
movb
add
ud0
mov
mov
xchg
ja
inc
and
scas
adc
outsl
fldenv
rcrl
out
sbb
xchg
sbb
les
mov
fs
loopne
push
outsb
cmp
int
and
adc
xchg
in
push
loopne
fwait
dec
pop
lret
out
arpl
arpl
mov
sub
push
out
rorb
xlat
adc
notb
insl
addr16
pop
add
adc
jmp
aam
mov
enter
addl
mov
mov
dec
mov
jg
pop
cltd
mov
xor
mov
rcrl
jle
lods
adc
mov
popf
scas
rcrl
dec
out
push
inc
popa
jb
stos
push
mov
test
sahf
cmp
push
cmpb
popf
ja
mov
pop
sbb
dec
mov
ret
jno
jae
jne
es
dec
push
insl
repz
sbb
sbb
push
ds
mov
movsl
andl
add
lock
fisttpll
mov
cmpsl
jae
je
mov
pop
fdivrl
in
push
adc
mov
jno
sbb
and
shl
mov
lods
ror
xlat
mov
out
jae
out
cmpsb
mov
lods
mov
repz
imul
mov
loopne
arpl
ja
adc
or
jle
cmp
fsts
sbb
jns
in
rcrl
sub
fistpll
adc
test
or
sbbb
xchg
push
xor
out
cld
popf
ret
and
cmp
hlt
and
and
rolb
test
gs
dec
and
sub
add
pushf
daa
movsb
sub
dec
adc
in
jne
push
fstl
outsb
pop
pop
rclb
mov
mov
popa
xchg
xchg
pushf
je
mov
sbb
push
cmpsl
pop
test
mov
dec
xlat
mov
mov
xor
xchg
mov
xchg
scas
sub
outsb
vmovaps
cmc
rorl
xorb
inc
mov
divl
push
fdivrp
pop
cmp
push
push
cmp
lret
jns
das
fstpl
adc
lds
in
xchg
loope
movsb
push
dec
les
ljmp
pop
aam
xchg
mov
das
gs
push
inc
or
push
mov
fdivp
adc
repnz
outsb
shl
fneni(8087
shll
dec
sub
jge
inc
aaa
mov
or
cwtl
arpl
pop
inc
mov
dec
ds
movsl
or
std
jne
sub
ds
mulb
push
xchg
shl
inc
in
mov
jnp
inc
scas
in
mov
lds
vpmullw
jecxz
push
decl
clc
dec
mov
push
xchg
xor
inc
or
frstor
ljmp
scas
ficomps
ret
xor
sbb
das
dec
mov
pop
cmp
pushf
mov
sahf
popa
xor
jmp
and
pop
imul
pop
jle
mov
lea
popa
dec
pop
inc
daa
imul
mov
test
push
stos
jle
cld
pop
in
das
and
sub
or
cs
inc
cs
enter
loop
sbb
test
and
sbb
cmpsl
shr
es
adc
mov
and
filds
or
push
xchg
mov
cs
add
fsubs
rolb
mov
mov
mov
enter
pop
sbb
out
mov
cwtl
jns
jge
mov
and
cwtl
stos
pop
xchg
shlb
cs
aad
adc
cwtl
fstpl
sbb
popf
shll
cltd
das
xor
std
imul
mov
jno
test
pop
pop
xor
xor
hlt
mov
ffree
adc
push
jmp
imul
jmp
cwtl
cmpsl
sahf
pop
jmp
loope
push
outsl
test
mov
fnstcw
aam
pusha
cmpsb
adc
cwtl
gs
pop
pop
push
loop
pop
jmp
push
dec
mov
je
cltd
and
pop
mov
dec
sti
out
inc
xchg
mov
popa
mov
inc
sti
shlb
test
stos
loope
sub
push
mov
test
or
mov
ja
xor
add
jl
and
inc
lock
add
push
push
pushf
jne
push
pop
add
imul
iret
aaa
or
jmp
xor
in
inc
cmp
cmp
sbb
pop
jbe
ljmp
mov
xor
fisubrl
and
inc
inc
dec
adc
fdivrs
adc
andb
popa
icebp
orb
push
inc
xchg
rorl
cmp
fimull
jecxz
lea
repz
int3
jbe
ret
inc
addr16
dec
pop
inc
arpl
xchg
sbb
sbbb
addr16
daa
inc
int3
imul
insb
in
lods
in
adc
or
pop
mov
sbb
outsb
mov
aam
stos
fidivrl
shlb
mov
dec
cmp
aas
push
mov
inc
jl
jmp
mov
and
adc
push
sbb
adc
jge
push
sub
pop
jg
sub
jecxz
cmp
dec
bnd
loop
scas
mov
xor
cmp
xor
dec
mov
lods
mov
or
xor
je
sarl
sbb
andl
das
xchg
mov
clc
and
pop
cmp
into
lret
sbb
pop
iret
negb
cmp
and
jle
fisubl
mov
xor
stos
push
add
sbb
sub
add
in
enter
push
sub
in
test
imull
ds
jp
ret
cmp
mov
mov
ja
pop
pop
jg
mov
mov
loop
mov
xor
call
pop
divl
fadds
xchg
mov
dec
mov
pop
in
roll
test
pusha
sbb
sbb
jl
mov
xor
pop
xor
pop
inc
loopne
sbb
icebp
adc
sahf
rolb
xor
dec
pop
out
cmp
add
pop
mov
jo
xor
xchg
insl
imul
mov
std
loopnew
icebp
mov
shr
sub
mov
int
jns
ret
clc
sub
sub
roll
fstpt
pop
xchg
jle
imul
inc
nop
mov
std
out
push
add
test
adc
and
outsl
mov
test
mov
pop
aas
dec
and
hlt
lods
int3
aad
rolb
sub
pop
jae
cltd
sbb
and
ret
sbb
push
cmpsl
stos
imul
xchg
cld
mov
in
and
repnz
std
popa
cmp
push
jae
cld
shlb
fwait
dec
pop
pop
pop
jecxz
xchg
mov
loop
mov
fwait
sahf
into
popa
xchg
call
ret
cwtl
je
aad
movsb
cmpsb
test
add
dec
add
rorb
test
push
movsl
lds
jmp
ret
nop
mov
insl
lea
mul
push
xor
scas
js
movsl
out
inc
and
mov
xchg
mov
xchg
inc
stos
fiadds
pop
or
add
mov
pushf
jl
icebp
sti
mov
inc
addl
inc
inc
push
int
pushw
hlt
mulb
mov
xchg
repnz
aaa
jns
inc
push
push
ret
lcall
scas
xchg
pop
fldl
gs
sub
stos
lods
outsl
jg
or
cmc
or
pop
inc
lcall
xchg
mov
cmp
mov
pusha
sbb
outsl
jle
or
nop
insl
mov
push
movsl
or
mov
cmp
sbb
insl
data16
jmp
pop
xor
dec
call
mov
mov
incl
arpl
movsb
ljmp
dec
orb
sub
repnz
jle
jmp
cwtl
xchg
pop
es
xchg
ret
fidivl
adc
inc
addr16
sarl
movsb
pop
imul
jmp
sub
test
in
mov
adc
pop
xchg
xchg
loop
aad
pop
pop
xchg
scas
in
aaa
lret
inc
mov
mov
insl
cmpl
int3
lds
out
test
fistl
les
fisttpl
inc
jbe
or
sar
mov
imul
jae
push
or
ret
push
sbb
sbb
pop
cmp
xor
dec
mov
adc
jne
std
orb
push
in
lea
fwait
mov
test
pop
shll
xor
dec
gs
sub
dec
or
dec
test
icebp
inc
lds
mov
shl
pop
add
nop
pop
cld
inc
push
aad
cltd
push
shlb
rcrl
inc
cmpl
adc
rcr
inc
lret
das
xor
popf
loope
jae
add
pop
add
dec
sbb
idivl
xor
jne
jns
mov
test
push
add
mov
add
cmp
loopne
repnz
insl
mov
test
and
mov
imul
mov
jo
rorl
cmpsb
pusha
mov
push
push
iret
cmp
push
arpl
fnstcw
js
mov
push
add
xchg
lds
adc
inc
xor
mov
ret
sahf
shll
mov
inc
mov
aam
das
lret
leave
jb
adc
jae
or
sbb
mov
loope
enter
sub
and
or
ljmp
outsb
add
adc
js
xchg
adc
xchg
sbb
jns
sub
das
push
cltd
scas
scas
adc
cltd
lock
push
sbb
or
dec
rcrb
xchg
rorl
lret
jno
stos
pop
inc
shlb
in
and
ret
push
lret
aas
sahf
jl
or
rcrb
pop
or
pushf
in
xchg
push
mov
inc
jmp
push
mov
and
clc
xchg
pop
fsts
pop
addr16
mov
int3
mov
lcall
jb
insb
xor
lods
sub
push
adc
pop
shrl
mov
cmpsl
pop
popf
xchg
test
mov
shrb
adc
cmp
fs
stos
xlat
ret
out
jge
or
fisttpl
or
jge
mov
test
aam
cli
loope
ds
or
pop
bound
add
jb
imul
add
sub
sti
sub
dec
adcb
jl
movsb
outsb
fstpt
es
fwait
mov
fildll
xor
rol
icebp
adc
lea
ss
add
rcrl
mov
mov
mov
mov
lret
mov
lods
leave
cwtl
mov
push
xor
insl
fwait
maskmovq
negl
add
jns
push
inc
mov
cli
push
popf
xor
stos
fmull
rorl
lea
ret
xor
and
stc
out
rolb
mulb
jle
in
push
test
xchg
jmp
inc
pushf
adc
and
test
fsubrs
lret
jb
rol
cmp
dec
shrl
jb
lahf
jae
rorb
fwait
gs
add
cmp
insb
nop
dec
and
out
sub
negb
iret
sbb
and
fidivrl
jnp
popa
loop,pt
into
mov
jmp
mov
rcl
gs
mov
jbe
das
pop
pop
jle
mov
inc
fwait
jge
enter
mov
or
shrb
add
pop
jo
jae
outsb
js
inc
lock
and
in
xchg
mov
mov
sbb
add
sub
jmp
xchg
iret
mov
cmp
test
and
adcb
sahf
jb
inc
fmuls
loopne
inc
or
iret
stc
and
cmp
push
mov
push
mov
ja
in
push
inc
jb
push
pop
sbb
push
push
adc
rclb
cli
push
std
xchg
in
pop
jmp
leave
test
pop
mov
adc
adcb
ror
pop
mov
sar
xor
jnp
into
inc
mov
lods
jge
add
sbb
test
fnsave
push
lcall
mov
xor
xchg
mov
dec
std
jle
mov
popa
xor
push
jmp
add
adc
cli
test
addr16
and
outsb
pop
nop
es
mov
outsl
lcall
loop
or
jcxz
pop
pop
jbe
loope
leave
adc
jb
leave
jb
sub
push
mov
push
bound
fists
aas
lock
sbb
mov
repnz
adc
test
je
push
cmpsl
mov
push
and
push
inc
adc
push
xchg
adc
mov
add
xchg
aas
xor
push
je
push
lods
popa
add
and
dec
in
mov
popa
or
mov
push
fists
pushf
cltd
dec
enter
inc
arpl
pop
and
mov
mov
aam
sahf
pop
or
ret
jne
ss
jl
mov
cltd
xchg
not
cli
jnp
and
ret
lods
and
xor
test
push
cmp
push
sub
pusha
in
fcmovnu
iret
mov
xor
push
icebp
leave
roll
add
idivb
cld
int
fisubrl
rclb
pop
jp
pop
data16
jmp
repz
and
xor
dec
xchg
je,pn
mov
sbb
pusha
cwtl
push
mov
cmp
outsl
jo
xchg
sahf
mov
mov
mov
mov
cld
int3
xor
mov
pop
sub
mov
dec
ror
ja
sub
add
call
add
out
fs
push
fs
adc
ret
xchg
test
jle
adc
repz
jne
iret
mov
or
testb
leave
lock
sbb
inc
fmulp
out
cmp
and
pop
sbb
pusha
icebp
scas
mov
cmp
cmpsb
or
pop
lret
lods
movaps
data16
sbb
push
dec
xlat
out
pushf
cli
xchg
push
sbb
mov
inc
leave
dec
test
lret
sub
pop
test
adc
js
sub
int
es
pop
mov
shll
mov
incl
pop
lret
xchg
dec
lcall
rorb
sub
mov
or
and
idivb
fiaddl
insb
loopne
jmp
subl
mov
adc
push
test
dec
xor
xchg
xchg
push
add
mov
cmc
xor
xchg
xchg
lret
adc
arpl
shl
push
idivb
xchg
stc
cmpsb
dec
xorb
jg
imul
loope
pop
sbbb
das
daa
sub
pop
dec
pop
iret
iret
adc
fwait
in
xchg
mov
push
jb
xchg
pop
cmp
arpl
inc
dec
test
jl
aas
fnstsw
mov
outsl
aaa
dec
in
mov
popa
sbb
divl
subl
or
aas
xchg
jb
push
movsb
iret
lock
mov
scas
lret
or
push
fs
in
mov
je
jmp
ret
popa
sbb
pop
insl
cld
data16
mov
push
inc
jns
cmpsl
adc
hlt
push
mov
shll
out
jo
dec
clc
xchg
movsb
fbstp
rep
daa
aam
xchg
sbbb
or
mov
daa
insb
push
negl
repz
and
pop
fsubrp
inc
inc
inc
addb
shlb
xor
cmp
mov
dec
aaa
add
jb
xchg
mov
mov
sub
in
dec
mov
movb
cs
shll
jno
cmpsb
test
repnz
cli
cmpb
pop
ljmp
out
add
in
ds
xchg
cwtl
fiadds
bound
mulb
pop
pusha
je
xchg
test
enter
dec
sub
cmp
sbb
arpl
mov
ds
sub
sti
pop
frstor
and
aas
mov
sub
xchg
jbe
cltd
mov
mov
addr16
cmp
pop
dec
out
into
hlt
stc
repz
lds
outsb
xchg
inc
pop
inc
add
les
push
jo
mov
aam
lcall
mov
out
arpl
fwait
xchg
roll
lods
arpl
adc
or
inc
daa
xchg
es
and
or
jge
jns
insl
loopne
push
in
and
aaa
ds
pop
pop
loope
rcpps
test
push
or
xlat
loopne
xchg
sti
inc
clc
cmp
out
iret
push
lret
mov
sub
mov
pop
xchg
scas
lret
test
fidivrs
push
lea
gs
mov
das
dec
cltd
mov
addl
mov
fmul
mov
mov
mov
pop
cmpsb
faddl
jb
mov
in
movsb
and
mov
and
les
adc
call
dec
mul
ror
gs
loopne
out
pop
mov
or
scas
popf
enter
repnz
jecxz
jae
inc
cmp
cmpsl
aas
adc
xor
xchg
cli
stc
repnz
sti
mov
adc
adc
dec
shrl
push
and
mov
outsb
dec
aaa
cld
or
js
out
push
fidivs
iret
out
adc
mov
fstl
pop
xchg
bound
aam
mov
xchg
scas
sub
xchg
xchg
and
xor
and
cs
nop
pop
fst
cmp
sub
iret
mov
into
and
cmp
andb
add
pop
outsb
test
add
push
out
aad
cwtl
movsb
sti
test
inc
testb
xor
pusha
stos
lods
fwait
inc
adcl
adcl
mov
jns
sub
mov
je
roll
add
clc
xor
test
andl
mov
cmp
jmp
dec
push
in
and
aam
cmpsb
lds
mov
xchg
test
xchg
incb
mov
jmp
mov
or
hlt
fisttpl
and
sbb
decl
ds
inc
mov
xchg
mov
loop
movsb
cli
in
fadds
inc
sub
cli
rorb
mov
test
mov
mov
stos
and
pop
shlb
or
pushf
sbb
add
popf
ss
addl
pushf
adc
ret
push
dec
nop
mov
and
sti
jno
jle
aaa
mov
iret
adc
or
add
and
sar
cli
fldl
adc
push
lods
mov
xor
cmp
dec
leave
cmpsb
fsubr
sbb
test
jl
inc
mov
pop
cmp
mov
add
popf
xorl
jp
fwait
jge
fisubl
movsl
lret
or
fsubrs
pop
out
pushl
rcll
mulb
mov
fs
cli
cmpsl
je
inc
repz
cmc
mov
cld
adc
in
mov
and
pop
push
xchg
sub
push
dec
stos
adc
jge
jecxz
jne
mov
cmp
outsb
mov
fnstcw
leave
sarl
cmp
aad
andl
pop
lcallw
xlat
shl
lret
push
shlb
test
push
in
out
subb
and
sbb
dec
ret
xor
pop
lea
adc
jle
pop
jmp
xchg
dec
inc
adc
loope
int
call
iret
cmovnp
data16
jge
shrb
out
paddusw
je
ja
mov
loop
push
out
cmp
mov
test
inc
icebp
cmp
xor
je
inc
adc
xchg
sahf
test
xchg
movsb
xchg
add
sub
adc
movups
xchg
aam
pop
xor
rcl
lds
std
bnd
inc
jmp
or
repnz
pop
shll
fstps
add
and
sbb
xchg
pop
pusha
call
push
sbb
adc
ds
or
test
or
sti
je
sbb
fwait
xor
adcl
sbb
pop
inc
dec
xchg
fisubs
dec
xchg
cli
jmp
jno
std
cmp
push
filds
lods
sub
mov
ljmp
mov
or
pop
cmc
jl
gs
fs
shll
jnp
sbb
and
inc
fistl
test
int
stos
enter
aas
mov
mov
aaa
and
ds
pop
lret
add
jmp
jl
jae
inc
jecxz
sti
jl
or
pushf
call
cwtl
inc
push
fisubrs
or
les
mov
pop
enter
and
ds
sti
stos
add
loope
cmp
add
push
lock
ja
jl
dec
popf
mov
pop
lods
mov
xchg
cmpsl
adc
cmp
ja
arpl
lock
fst
jp
mov
jb
dec
inc
or
xchg
mov
sub
divb
jnp
jmp
sbb
fxch
rcrb
int3
pop
das
push
cld
pop
adc
push
sub
sbbl
xchg
mov
out
dec
push
inc
insb
in
jmp
sub
push
mov
dec
ljmp
mov
sub
sub
andl
cmp
cmp
ja
imul
pop
fs
xor
int3
aad
nop
dec
arpl
in
shll
mov
and
imul
xchg
sub
dec
cmp
dec
jbe
mov
sub
mov
lahf
pop
pop
popa
gs
fistps
xchg
rcl
adc
pusha
fdivrl
jbe
aas
popf
add
pop
cmp
xor
lods
mov
jno
add
push
cmp
jg
cmpb
add
ret
cmp
add
cld
pop
mov
imul
je
jp
fdivrp
ljmp
add
mov
ja
jle
adc
out
adc
pop
dec
rorb
add
dec
jg
pushf
inc
lea
fsub
aas
or
ljmp
add
data16
mov
mov
in
aaa
mov
aaa
mov
fs
add
inc
dec
aaa
push
addr16
rorl
jecxz
fildl
ffreep
jp
jl
lcall
stos
cs
clc
dec
lods
clc
xchg
push
test
pop
loopne
jnp
lods
jnp
adc
ja
leave
xchg
icebp
mov
repnz
cmpsl
cmp
imull
stos
cld
push
jbe
or
mov
ja
adc
subb
iret
mov
mov
imul
push
gs
pop
mov
ret
jae
pop
adc
fsub
rcrb
cmpsb
xchg
mov
add
mov
xor
add
lea
jnp
int
aas
loop
push
inc
sahf
jg
inc
adc
aas
and
incl
rorb
and
mov
dec
lret
test
pop
aaa
and
call
push
xchg
push
out
mov
and
cmc
stc
pop
mov
sub
arpl
loop
into
test
pop
loope
or
lods
mov
sbb
stos
outsb
mov
dec
mov
bound
cmp
mov
negl
sub
jl
mov
scas
dec
imul
pop
jl
mov
sbb
xchg
outsl
pop
lea
jp
sbb
pop
and
inc
dec
xchg
aaa
lods
sahf
cld
jle,pn
pop
lods
aaa
lret
push
out
and
sbbl
cli
xchg
inc
out
fs
repz
xchg
mov
xchg
dec
mov
pop
div
imul
push
add
std
shlb
sbb
pop
jbe
push
add
sbb
mov
insb
pop
or
xor
mov
jnp
mov
lahf
pop
popf
data16
int
mov
stos
loope
jb
nop
sbb
faddl
mov
push
lea
mov
mov
movsb
xchg
jecxz
pop
add
gs
and
add
jecxz
lods
cmp
mov
mov
sub
xlat
push
mov
push
add
cmp
nop
pusha
push
push
mov
jbe
mov
fldt
mov
jp
mov
sahf
inc
jle
jmp
inc
mov
test
nop
sub
clc
rol
jno
adc
dec
loop
mov
or
cwtl
ja
lcall
cli
movsb
add
inc
shlb
std
out
shl
mov
les
setge
push
cli
ret
iret
jecxz
push
adc
xor
jnp
jg
push
mov
iret
mov
mov
movsl
push
leave
std
test
mov
xchg
jl
jg
xlat
push
inc
mov
push
xor
jge
dec
add
data16
pop
and
fisttpl
mov
aad
je
or
cld
movl
dec
dec
outsl
fidivrl
add
push
les
mov
int
inc
mov
vcvtsd2si
and
jl
int
pop
insl
cmpsb
iret
fcompl
sub
sub
mov
mov
push
rorl
enter
loopne
test
test
cmp
cmp
or
insl
aaa
push
jne
cmp
sti
xchg
adc
pop
push
dec
push
icebp
jae
push
sarl
std
adc
or
stos
cmc
test
cmpsb
test
rcll
in
jo
mov
cmp
lcall
sbb
call
inc
lods
xorb
push
dec
mov
or
sub
dec
xchg
cmp
out
sub
cmp
repz
subb
js
add
xor
mov
dec
sbb
or
inc
cwtl
mov
repz
addr16
add
or
adc
push
adc
xchg
faddl
mov
adc
loop
jg
mov
pushf
inc
inc
aam
ljmp
dec
mov
les
jge
add
sub
pop
push
mov
rorl
cmp
inc
fstpl
jbe
imul
inc
sahf
in
sub
out
inc
outsb
push
gs
cwtl
mov
mov
mov
fmuls
lret
push
iret
pop
inc
pop
dec
mov
push
or
mov
jnp
pop
out
loope
lahf
sbb
jnp
imul
adc
mov
mov
push
cmpsl
jne
cmp
icebp
movsb
das
int3
hlt
adcb
divb
inc
or
jl
ficomps
cmp
stc
lock
jp
dec
pop
movsb
test
imul
mov
andl
add
out
into
dec
lret
jl
or
add
pop
test
cmp
lods
jno
int3
shll
ljmp
sti
call
ss
xchg
outsb
int
push
mov
sbb
cmc
mov
ret
xor
pop
pop
mov
call
sub
leave
popa
frstpm(287
dec
sahf
push
mov
push
jo
out
loopne
mov
add
mov
ljmp
pop
sbb
sbb
mov
ret
in
aaa
cmp
pusha
sub
xor
out
sahf
sbb
adc
bound
iret
adc
clc
push
fstl
int3
cld
jae
lods
xlat
and
cli
into
sub
ja
jecxz
cmpb
push
movsl
xchg
or
or
cmp
xchg
inc
inc
je
dec
or
andl
test
mov
lods
movsb
push
cmp
fidivrl
ds
popf
and
add
dec
js
xor
cmpsb
jno
out
dec
and
mov
aas
sbb
aad
cmpsl
lock
stos
int3
pusha
adc
xchg
fdivl
jno
xor
or
mov
mov
stc
xor
int
mov
notb
sbb
sarl
sbb
shl
repnz
jbe
fidivl
sub
in
imul
and
loopne
sbb
adc
lcall
repz
fisubrs
dec
rcrl
lahf
scas
gs
add
mov
mov
xor
in
imul
enter
addr16
dec
testl
and
mov
cli
xor
push
pop
mov
cmp
decb
bound
pop
cld
sti
and
jecxz
lahf
and
xchg
movsb
movaps
es
ljmp
mov
scas
lret
jnp
xchg
cmp
aaa
or
lret
push
cmp
sbb
or
mov
jnp
adc
push
xchg
lock
enter
push
fcompl
icebp
aaa
movsl
add
adc
push
push
mov
mov
fs
sbb
aaa
xchg
lods
stos
xchg
or
mov
xchg
or
shrl
lret
mov
sbb
roll
gs
and
inc
jns
cmpsb
imul
les
and
xlat
lcall
lock
sbb
xor
add
clc
aas
lods
adc
jae
xchg
jge
push
fisubl
adc
stos
xchg
daa
pop
pop
mov
inc
into
add
hlt
orb
pop
mov
daa
inc
mov
pop
into
fidivs
fsub
jmp
jbe
movsl
fwait
sub
fnsave
es
mov
adc
fwait
sti
cwtl
out
faddp
push
jns
or
mov
repnz
lret
pop
stc
fstpl
int3
sbb
test
jns
hlt
jmp
adc
dec
cmp
cli
std
push
inc
jno
dec
mov
in
dec
or
mov
xchg
loop
pop
push
inc
jo
jne
clc
jns
jo
fcmovnu
pop
ljmp
sbb
adc
add
jmp
sahf
sub
out
cli
stos
sub
xlat
adc
jno
mov
adcb
lods
cmc
jo
push
xchg
push
xchg
and
bound
in
stos
je
mov
je
loope
add
cmp
pop
mov
pop
fildl
pop
lods
out
adc
push
insl
outsl
js
lea
int3
sub
aam
sbb
inc
cmp
or
insb
push
sbb
popf
push
adc
aaa
mov
cmpsl
mov
lret
int
jb
mov
movsl
fcom
push
loopne
inc
fsubr
push
dec
add
repz
lea
loope
es
jecxz
outsb
call
add
dec
nop
xor
cmp
in
xchg
stos
xor
int
stos
inc
jns
mov
cmp
pop
mov
daa
xor
iret
or
and
dec
lcall
scas
ret
and
jo
pusha
leave
int3
cmp
imul
xchg
pop
add
filds
leave
imulb
xchg
and
jp
cmp
hlt
mov
inc
jl
sub
int3
jnp
xchg
push
sbb
icebp
sbb
shrl
aas
push
mov
and
ror
fmulp
inc
xchg
xor
ret
inc
xor
cli
adc
push
pusha
inc
in
pop
add
arpl
test
leave
cwtl
lea
cmp
push
fs
js
xor
adc
test
aam
adc
sub
mov
mov
pop
mov
daa
pop
push
dec
and
call
jg,pn
pushf
leave
subl
aaa
inc
jmp
fs
scas
mov
or
into
insb
ja
xchg
je
cli
xchg
mov
pop
push
fdivrs
stos
mov
pop
adc
testl
or
js
emms
movsl
in
sub
jmp
and
repz
adc
arpl
mov
dec
lock
shlb
mov
rep
pop
jmp
popf
mov
pusha
cltd
addr16
dec
adc
ljmp
not
push
fimull
mov
mov
adc
rcll
inc
xor
mov
outsb
jbe
imul
fptan
dec
mov
add
mov
xor
stc
xchg
push
sbb
test
or
in
pop
fadds
ja
dec
enter
sub
test
popl
clc
ja
adc
xor
popa
xor
inc
inc
cmp
test
les
jnp
pop
arpl
addr16
mov
test
jmp
imul
inc
out
andb
outsb
jns
mov
cmc
cmp
sub
rol
xor
movsl
mov
pop
rcrb
sbb
adc
nop
pop
xchg
mov
inc
cltd
jae
inc
sti
pop
mov
sbb
add
pop
in
sub
mov
xchg
or
xor
push
scas
scas
cmc
dec
mov
sbbb
pop
dec
push
cmp
nop
call
mov
xor
lret
ss
idiv
add
loope
xchg
inc
inc
popa
jo
jo
les
push
lret
xor
sbb
sub
in
dec
add
popl
insl
fadds
mov
cld
ds
pop
adc
pop
xchg
sub
dec
ljmp
mov
and
dec
call
xchg
fdiv
inc
cmp
push
out
lock
jo
sub
scas
mov
inc
add
cli
sarb
jg
adc
stos
arpl
ret
pop
mov
or
adc
jo
mov
jp
test
popa
cmp
jp
and
pop
cmp
mov
dec
or
pop
mov
outsb
notb
xchg
add
rolb
cwtl
xchg
out
mov
and
es
les
js
xor
stc
or
repnz
mov
out
out
enter
scas
cs
push
mov
aam
jle
invd
gs
xor
xchg
das
sbb
pop
movsl
sahf
mov
inc
sub
xchg
cmp
jns
dec
popa
xchg
xor
popf
hlt
int3
push
mov
fs
movsl
xchg
in
mov
dec
push
push
lock
stos
push
jge
rcrb
adc
push
add
arpl
xchg
push
ss
mov
aad
xlat
ret
push
les
dec
ljmp
fs
aaa
lds
mov
add
mov
sub
and
enter
mov
jmp
icebp
cli
add
xchg
in
mov
imul
xchg
adc
mov
push
xlat
test
fs
jbe
cmp
loop
subl
push
mov
lahf
cmpsb
mov
cmp
ret
mov
and
push
adc
add
rcrl
jo
out
enter
inc
push
lock
xchg
push
mov
jbe
sti
jnp
xchg
into
sbb
and
idivl
out
dec
pop
movsl
adc
in
pop
mov
fldt
addb
inc
jae
jge
inc
out
dec
imul
stos
mov
jb
out
pop
inc
subl
into
cmp
shr
shll
adc
rorl
push
cmp
sbb
fsubrl
mov
cld
inc
je
inc
lock
inc
sbb
add
mov
loop
xchg
imulb
jno
and
inc
rcrb
popf
rcrb
lcall
or
xchg
and
in
jg,pn
jne
inc
sbb
ret
jbe
inc
and
in
shl
negl
shll
lds
mov
mov
xchg
int3
add
addb
sbb
aas
jbe
pop
stc
xchg
mov
shrb
dec
mov
into
pop
ret
xchg
sbb
and
and
adc
cmp
mov
outsl
lahf
js
int3
insl
or
mov
and
rorb
mov
in
adc
push
popf
arpl
adc
js
insl
mov
test
test
or
dec
push
lds
or
sbb
xor
or
ljmp
jbe
dec
mov
xchg
mov
aaa
repnz
inc
mov
adc
push
xchg
pop
in
mov
subb
orb
loop
xor
outsl
nop
aas
sti
push
sub
cmp
mov
sub
or
dec
pusha
sub
mov
cmpsb
xchg
leave
add
ret
xor
ret
mov
ret
dec
pushf
xor
jl
mov
mov
push
dec
sbb
jge
and
es
mov
out
movsl
outsl
mov
xchg
xor
aam
inc
add
inc
cmpsb
in
aaa
cmc
int
mov
mov
add
xchg
bound
lahf
adc
push
pop
icebp
sarl
pusha
mov
mov
mov
adcb
jle
push
jbe
mov
or
fiadds
lds
lods
imul
stc
cmc
mov
push
sub
test
fbstp
sub
dec
fnstsw
ljmp
dec
mov
dec
mov
mov
xchg
xchg
int3
cmp
and
roll
or
les
xor
pop
mov
pop
mov
jg
sahf
pop
enter
popa
push
mov
shrl
lock
int3
xor
mov
mov
xor
imul
xor
cmpsb
test
pop
pop
xor
jne
pop
cmp
lret
xor
jno
mov
jno
nop
adcb
pop
nop
jecxz
pop
adc
imulb
sub
dec
enter
in
pop
test
in
sahf
testl
add
fiaddl
mov
lahf
lret
int3
cmp
stc
pushf
xchg
and
fldt
es
and
push
mov
loop
mov
into
pop
icebp
pop
mov
push
sbb
out
xor
enter
loop
adc
mov
sbb
cmc
jnp
pop
push
sti
out
call
fs
mov
sub
enter
in
sbb
mov
pop
scas
hlt
and
gs
xor
loop
sbb
push
fwait
cmp
jns
push
jecxz
mov
sarb
inc
mov
loopne
push
pop
mov
adc
mov
cld
sub
pusha
js
xor
mov
xchg
lcall
in
mov
mov
sbb
and
add
mov
loopne
int3
lds
std
push
push
or
or
xor
inc
rcl
clc
movsl
pusha
clc
cmpb
imul
pop
push
or
popf
in
push
repz
adc
jmp
or
jge
mov
shrb
cld
jge
test
fcom
lods
jns
add
ret
push
or
fst
mov
mov
test
push
popf
mov
pop
pop
sbb
cmp
inc
ret
mov
lock
mov
es
out
cmp
mov
cmp
push
jnp
test
mov
aaa
or
jmp
and
rolb
fistl
jmp
push
dec
jbe
inc
xchg
or
pop
js
inc
fisttps
adcb
xor
inc
pop
push
push
sub
movsl
aas
push
jg
ljmp
mov
cmpsl
ja
xchg
movsl
cmp
imulb
jl
mov
daa
aam
xor
push
stos
shll
stos
mov
adc
cmc
incb
cmp
dec
push
out
repz
lcall
push
xchg
je
arpl
pop
cmp
push
lods
mov
cwtl
cs
outsl
insb
bound
jecxz
jmp
and
inc
jle
mov
pushf
inc
lods
int
lods
cwtl
filds
mov
test
sbb
ljmp
lods
mov
lahf
adc
pop
jmp
dec
aad
lods
pop
dec
lea
bound
test
jl
ja
push
sub
cmp
icebp
pop
adc
scas
mov
mov
or
jle
insl
push
or
popa
xor
outsl
mov
les
and
jl
fdivrs
rcrb
mov
dec
cmp
or
enter
and
sub
inc
lods
mov
repz
mov
int
aad
loopne
lret
cmpb
fcmovbe
jl
fucomi
out
xlat
stc
imul
dec
jge
xor
mov
imul
jo
xchg
inc
mov
leave
adc
ja
add
dec
cmp
jno
jnp
subl
push
push
scas
xchg
enter
inc
xchg
pop
xchg
jecxz
adc
stc
adcb
lods
cltd
mov
sub
cli
pop
fs
test
fs
pop
cmpsl
ja
xor
out
xor
int3
jp
lea
adc
sbb
fildll
xor
lcall
mov
int3
in
nop
inc
xchg
or
or
enter
lock
insb
cmpsb
jmp
les
jo
mov
xchg
sub
mov
test
dec
pop
inc
shlb
rclb
aas
jno
cmp
push
aas
out
pop
xchg
mov
sarl
mov
repnz
sub
popa
es
adc
js
notb
and
jle
or
sub
cmpsb
movsb
sub
test
repz
jl
sub
ja
and
iret
aad
mov
inc
movsl
lods
or
pusha
jecxz
aam
and
sbb
mov
insb
mov
lods
xchg
sti
push
int
xchg
pop
push
mov
jge
inc
aad
or
or
xor
xchg
add
jb
test
xchg
pusha
or
scas
mov
pop
push
out
or
in
mov
adc
lods
pop
enter
mov
pushf
jns
or
fldenv
ljmp
sbb
push
inc
fs
jno
mov
loopne
mov
pop
jno
pop
cmp
sbbb
sbb
es
mov
mov
dec
mov
xchg
sahf
pop
push
outsl
addps
xor
idiv
push
push
stc
mov
outsb
lcall
cwtl
inc
das
dec
jg
mov
movsb
push
rcll
xor
xchg
shrb
aam
xchg
push
stc
int
popf
inc
jnp
scas
in
inc
shlb
push
pop
xchg
add
addr16
leave
movsb
outsl
aam
jle
or
push
jb
xor
adc
outsb
into
clc
js
jl
jno
and
mov
dec
ds
testb
rclb
lret
adcl
sti
sbb
xor
inc
insl
xchg
and
jb
pop
rcrl
jbe
push
lahf
and
rolb
mov
mov
popa
sub
mov
or
mov
pop
and
arpl
adc
sub
repnz
cmpsl
sbb
scas
out
sbb
jne
scas
cmc
xor
arpl
loop
jle
pop
jne
pop
sub
fdivr
xor
dec
shl
inc
cli
lea
inc
sbb
sub
inc
in
sbb
pushf
outsb
fimuls
pop
cmp
pop
shlb
ljmp
testb
je,pt
sub
pop
mov
ja
sbb
dec
lea
stos
cmp
lods
imul
cltd
push
sub
aas
sub
test
mov
mov
xchg
sub
lret
inc
sbb
xchg
gs
mov
enter
pop
sub
push
js
lea
mov
scas
jno
cmp
shrb
cmp
or
or
and
and
pop
mov
xor
pop
pop
mov
pushf
or
movsl
jo
fimuls
dec
xor
rorl
icebp
jp
mov
and
and
push
cli
pop
sub
push
addb
mov
bnd
xchg
fstl
int3
xor
push
add
inc
ret
and
jmp
sub
sub
sub
bound
inc
dec
mov
fsubl
test
and
fildl
lcall
daa
sub
xchg
cmc
fucomp
mov
pop
lods
enter
std
sbb
xor
arpl
xlat
jl
popa
in
jge
and
adc
jmp
or
xchg
test
jle
mov
insb
fildl
mov
lock
sub
dec
ss
stos
xor
xorb
std
add
push
dec
or
test
dec
test
sub
js
jns
sahf
lcall
stos
lock
sub
mov
or
mov
adc
xor
mov
jbe
pushf
adc
add
cmpsb
aad
cmp
ljmp
imul
aad
sbb
cmpsl
je
lock
mov
and
std
fwait
repz
dec
cwtl
cli
pop
mov
mov
pop
jle
int3
faddl
xor
sub
mov
imul
cmp
dec
fsub
das
and
add
inc
adc
pop
stos
cwtl
jnp
pop
push
imul
mov
shll
jo
int3
mov
cwtl
jno
adc
adc
idivb
adc
js
xorl
xchg
js
testb
sbbb
leave
push
std
mov
jnp
imul
sahf
addr16
mov
in
in
aas
sub
pop
repz
icebp
in
mov
jl
mov
lods
arpl
push
pop
aaa
loopne
xchg
movsl
jb
call
cmp
xchg
mov
or
and
enter
cmp
pop
inc
jno
popa
ret
clc
jnp
stos
lahf
jecxz
push
xor
push
lcall
xlat
out
dec
xor
fldcw
into
test
pop
push
out
mov
ja
cmpb
dec
pop
fadds
lds
mov
jmp
jge
push
dec
outsb
repnz
mov
xchg
inc
push
sub
aaa
push
fldln2
adc
jp
add
stos
push
adcb
sub
add
xor
sub
mov
push
mov
into
push
jg
and
xor
insb
gs
ror
jl
fadds
stos
test
scas
dec
dec
std
xchg
shr
shr
loope
jo
mov
jecxz
mov
in
in
popa
mov
in
jl
xor
xor
fbstp
dec
cmp
xchg
xchg
lret
push
imul
push
sbb
cmp
js
rorl
stc
pop
push
fistpll
jmp
cwtl
dec
xchg
cmc
pop
out
jecxz
push
in
lds
bound
out
test
stos
outsl
mov
mov
and
sub
or
loope
sub
pop
pop
out
cmp
insb
cld
xor
lcall
aad
pop
mov
dec
push
loopne
xlat
fwait
or
pop
inc
cmpsl
add
pop
rcrl
pop
inc
sar
into
daa
adc
dec
sub
out
imul
cmpsl
jno
iret
sti
push
mov
std
sarl
add
push
pop
fcomp
mov
sub
loopne
push
inc
mov
xchg
icebp
adc
stc
add
scas
jne
lret
addb
jo
fnstcw
movq
lret
icebp
sub
xchg
and
or
fisubrs
pusha
hlt
std
xor
and
dec
lods
int3
daa
cmp
arpl
adc
lahf
xchg
fcomp
pop
pop
mov
mov
xor
mov
ljmp
or
dec
inc
scas
lahf
jae
addr16
mov
mov
mov
shl
stos
out
in
xchg
test
inc
jp
out
testb
icebp
jno
mov
xchg
or
jae
xor
adc
adc
lds
mov
sub
and
into
and
ss
push
sub
cwtl
fldcw
and
jg
in
repz
aaa
mov
inc
in
pop
insb
mov
lahf
aaa
arpl
pop
mov
cmp
pop
dec
xchg
loope
and
adc
or
mov
jne
jecxz
jb
pushf
orl
mov
into
sbb
inc
inc
mov
jae
loop
sbb
cli
testb
addb
mov
and
icebp
jl
jb
dec
in
repnz
push
outsb
lds
push
hlt
lods
dec
arpl
rorb
pop
cmc
add
mov
cltd
int
dec
cmp
rclb
pop
stos
data16
mov
movb
lods
dec
mov
cmp
mov
jns
sub
sbb
xlat
aas
jg
mov
mov
dec
inc
dec
shrb
insb
inc
test
stos
pop
adc
das
inc
cmpsl
pusha
sbb
imul
ja
ffree
imul
nop
mov
inc
dec
mov
cmp
push
xor
push
and
into
imul
push
xchg
mov
fldl
fistps
mov
xchg
mov
mov
cltd
add
cmp
into
shr
xor
pop
imul
xor
cmpsb
or
add
out
std
mov
jle
inc
pop
inc
inc
ds
stos
scas
jecxz
jp
add
mov
stos
xchg
pusha
loop
test
enter
pop
test
cmp
fs
cmp
arpl
stos
push
cmpl
pusha
jo
rcll
repz
bound
test
inc
xchg
subl
stc
mov
hlt
cmp
mov
pop
daa
fcoms
jno
xor
push
sbb
popf
scas
push
jb
nop
jne
pop
out
add
fdivl
lea
mov
add
push
jbe
xchg
or
in
ret
int
jbe
test
pop
and
pop
loop
movsb
leave
xchg
push
xlat
pop
loop
imul
sub
xlat
jp
mov
clc
mov
and
mov
stc
jne
pop
popl
jae
and
sti
scas
push
jp
fstl
les
test
stos
test
jmp
mov
mov
adc
icebp
lds
jmp
fldcw
sbb
adc
clc
xor
add
pop
dec
scas
add
cmp
lret
mov
sbbb
add
sub
leave
andb
pusha
test
sahf
cltd
in
insl
xchg
cmp
xchg
insl
leave
jnp
mov
inc
cmp
and
cmp
push
daa
xor
icebp
fidivrl
xchg
jp
imul
lcall
test
lret
stos
add
aaa
pushf
test
das
lret
xchg
aam
dec
xlat
push
add
add
mov
add
mov
fcoms
add
je
stc
xchg
cltd
push
fidivl
scas
sahf
mov
lea
mov
push
clc
shrl
dec
mov
icebp
sub
lock
mov
or
stos
scas
jo
das
mov
in
inc
testb
jne
lcall
or
mov
test
pop
sahf
mov
jmp
jae
push
out
movsb
add
hlt
pop
pop
rol
outsb
lret
sti
mov
movsl
lock
and
inc
lret
popa
adc
inc
jmp
js
mov
cmp
jmp
adc
push
aad
sub
sub
fs
sbb
enter
jecxz
ss
mov
mov
mov
inc
sub
mov
fistpll
lds
dec
ror
les
shlb
mov
ja
mov
int3
sub
sub
add
arpl
hlt
jno
mov
mov
mov
sbb
mov
sbb
cltd
addr16
and
test
sarb
jle
lcall
fistpll
sbb
scas
jge
repz
daa
pop
pop
mov
pop
xlat
add
jle
xchg
in
pop
imul
loope
cli
call
dec
sub
xchg
test
adc
mov
les
iret
fld
das
xchg
sub
lret
fstps
into
cmp
jbe
mov
xchg
xchg
sbb
inc
inc
adc
pop
in
test
ret
mov
cmpsl
shr
or
and
jge
test
sbb
jo
les
out
xchg
icebp
xchg
jle
in
jns
push
cli
enter
outsb
sbb
push
jp
in
adcb
or
xchg
test
ja
cmpsl
mov
xchg
jecxz
mov
inc
lcall
fwait
mov
sbb
dec
xchg
xor
fisubrs
jnp
js
orl
fstl
mov
mov
imul
cli
loope
xchg
cmpsb
popa
jne
cmc
addl
xor
fisttpll
cmp
jbe
je
lods
adc
popf
adc
add
jle
push
in
and
push
inc
sub
lcall
dec
mov
push
cmp
mov
roll
push
pop
sbb
out
xchg
repnz
adc
fdiv
cmp
pusha
mov
jbe
dec
sbb
mov
movsb
and
dec
repnz
push
call
inc
pop
fs
inc
pop
pop
xorb
jo
mov
pop
movsb
adc
lods
ss
fdivrs
sti
jmp
and
xor
mov
stos
sbb
mov
xchg
add
cld
pop
cmpsl
repnz
mov
enter
shl
or
icebp
dec
fstpt
xor
enter
enter
mov
ljmp
fisttpll
sbb
aad
cmpsb
data16
hlt
mov
mov
dec
jmp
lret
test
lea
mov
icebp
xchg
or
pop
out
mov
loope
or
xor
or
clc
lret
fstpt
push
aaa
pop
sbb
inc
out
and
clc
xor
mov
std
iret
ds
push
jge
repz
cld
pusha
push
insb
sti
stos
cmp
or
in
arpl
mov
mov
mov
jge
xchg
jge
ljmp
xchg
loopne
push
and
lahf
sbb
and
xchg
fisubl
jg
dec
insb
jnp
and
sarl
add
jnp
ljmp
sbb
inc
adc
lods
mov
cwtl
inc
flds
leave
sub
adc
popf
jne
xorl
xor
xchg
sbb
cli
sub
xchg
stos
shrb
test
cmpsl
repz
xlat
cld
or
and
cmc
mov
jno
pop
shll
repnz
jno
mov
stos
inc
das
rcrl
push
andl
daa
aas
in
xchg
or
push
sub
int3
in
lret
fdivs
movsl
jns
sbb
xor
pop
push
rcrl
sbb
sbb
sub
jno
dec
stc
pop
into
fisubl
add
xchg
out
loopne
pop
pop
mov
add
pop
inc
nop
addr16
jle
int3
out
lods
mov
dec
lods
lahf
jl
fisttpll
iret
cmp
data16
push
pop
pop
nop
mov
cmp
test
lret
fimuls
aaa
or
mov
iret
mull
pop
and
imul
mov
sub
enter
jge
scas
mov
insb
lods
out
mov
jg
pusha
jmp
popf
in
shrl
add
popf
ljmp
xor
sub
in
inc
mov
dec
mov
aad
sbb
pushf
mov
and
jl
sar
sub
ljmp
arpl
scas
movsb
mov
pop
and
mov
ret
sahf
push
xchg
cmp
jg
mov
add
jl
enter
xchg
imul
cmpsb
jmp
cwtl
sub
adc
adc
fsubrl
mov
scas
out
loopne
scas
sahf
add
js
xor
loope
out
xor
push
roll
mov
mov
call
aas
xchg
pop
cwtl
cmp
les
push
sbb
addb
push
jnp
mov
cmp
std
test
imul
pop
popa
mov
and
das
js
idivl
sub
inc
cmc
ja
iret
lret
movsl
and
scas
jnp
into
js
xlat
cmp
loope
call
push
sbb
outsl
mov
jle
xor
popa
sar
daa
sahf
mov
popf
xchg
jne
pop
sarb
add
fdivs
stos
loope
mov
jle
iret
fnstsw
mov
fimull
jp
scas
in
mov
xor
mov
cs
xchg
xor
pop
mov
add
pop
stos
mov
and
jmp
scas
je
ret
mov
es
sub
sti
pop
cmp
fidivrl
lret
cltd
adc
adc
data16
div
cmpsb
cmpsl
mov
push
stos
jle
or
jle
xor
push
aam
je
sbb
aam
sbb
insb
call
in
jne
outsb
sbb
fcompl
mov
inc
and
cltd
mov
mov
jle
ljmp
out
jl
sbb
add
pushl
das
xchg
int3
decb
pop
ja
and
mov
inc
jmp
or
lea
and
loop
pop
xchg
sub
cmpsb
int3
or
test
dec
or
aad
les
cltd
mov
bound
in
sbb
cmp
clc
sbb
es
fsubs
mov
or
jl
stos
inc
and
sarb
jp
jb
xor
stos
mov
cli
xchg
add
in
xchg
mov
ja
lods
mov
jo
and
dec
cltd
filds
push
rcrb
push
cwtl
cltd
pop
xor
mov
pop
cmpsl
sbb
sahf
pusha
cwtl
jno
jne
or
dec
xor
clc
loop
cmc
in
adc
orb
and
sub
fld
idiv
inc
mov
test
mov
xchg
aam
pop
and
sarb
sub
inc
cmpsb
jp
js
push
jae
mov
sbb
test
pusha
jmp
push
leave
ljmp
pop
rcr
xchg
sbb
insb
mov
and
mov
leave
jle
add
jecxz
out
cmp
add
sbb
int
mov
lods
push
xor
jb
sub
cwtl
lret
xor
xchg
nop
and
aaa
jmp
jl
adc
pop
mov
fsub
imul
jb
and
popa
lds
push
mov
inc
addr16
cwtl
cli
push
mov
fadds
dec
test
stc
sti
inc
fsubrs
testl
fdivrp
or
aam
push
rcr
lret
or
pusha
add
in
pop
or
sbb
notl
dec
cmpl
ret
shll
jbe
out
sti
data16
sub
fnstenv
test
push
jmp
cmp
add
add
xchg
stos
adc
jbe
std
aam
fisubrl
out
hlt
fisubs
add
imul
stos
mov
in
mov
dec
xlat
and
daa
sub
mov
inc
sub
sub
in
pusha
cmp
jp
test
shlb
std
inc
pop
in
xchg
lret
jp
dec
ss
jmp
inc
arpl
call
inc
std
sbb
ss
push
dec
pop
xor
call
mov
xchg
pop
sub
push
pop
xor
hlt
lock
jnp,pt
mov
push
mov
iret
dec
dec
and
sbb
inc
xchg
jl
cli
rorl
hlt
cmc
xchg
out
fcoms
out
bound
or
sti
iret
push
xchg
mov
loope
enter
push
mov
cli
repnz
loop
popa
add
mov
leave
xor
xor
sub
jae
jecxz
inc
mov
mov
scas
imul
adc
mov
lcall
dec
mov
push
test
ret
fiaddl
stos
push
sbb
mov
loopne
xchg
sbb
mov
into
xchg
adc
add
sti
mov
mov
xchg
adc
dec
jmp
sti
push
push
push
push
pop
testb
test
cmp
in
decb
je
pop
add
aad
pop
cmpsl
cmp
adc
add
sbb
shll
mov
cmp
push
add
xchg
repz
jg
stos
xor
mov
loopne
ret
popa
icebp
orl
pushf
cmp
cmpl
pop
js
sbb
arpl
xor
sub
jne
in
iret
out
push
pusha
fmull
inc
sar
inc
lods
add
jg
push
xchg
xor
dec
cmp
bound
dec
lea
sbb
loop
cmc
ret
aad
ds
out
icebp
xor
adc
out
mov
sub
mov
adc
mov
insl
jo
outsl
cmp
pop
test
addb
stos
jbe
lahf
inc
inc
cld
inc
pop
inc
divb
sbb
xor
cmp
mov
adc
loop
shr
adc
movsl
stc
ret
arpl
xchg
rcl
call
in
or
xor
fisttps
scas
popf
testl
jle
fisubrl
or
shr
or
aam
int3
and
rolb
sbbl
jp
aam
jns
in
push
mov
shr
add
dec
ss
fwait
push
xor
scas
add
ret
cmp
in
inc
inc
out
int3
outsb
pop
data16
fwait
mov
or
fwait
daa
sub
jae
sti
popf
sbb
mov
popf
inc
xor
fsub
lahf
movsl
mov
in
cmp
cmp
push
mov
pop
push
jge
cmp
fwait
cmp
lods
mov
mov
jg
jns
lcall
mov
dec
add
add
add
pop
pop
add
into
mov
in
sarl
inc
xchg
jae
jmp
clc
cmpsb
cmpsl
mov
mov
sbb
or
test
sti
incl
sub
and
lds
sbb
mov
cmp
and
sarl
push
push
sub
add
sbb
cs
mov
retw
in
mov
xchg
cltd
fstpt
sbb
std
xchg
inc
pop
jle
inc
repnz
scas
dec
inc
pop
rep
sbb
leave
popf
xchg
out
lock
mov
shrl
loope
sbb
rcrl
and
pusha
or
xchg
sub
call
loop
das
pop
pop
cmp
xchg
out
pushf
jnp
and
or
dec
ja
pop
out
nop
sahf
mov
add
cld
aas
xor
leave
mov
ja
andb
sarb
cld
dec
pop
mov
or
mov
movsb
aas
xlat
mov
aaa
mov
sbb
jns
dec
xchg
pop
stos
xchg
decl
and
pop
xlat
out
test
inc
rcr
mov
mov
fdivs
scas
jbe
aam
fsubp
jo
inc
scas
add
rclb
imul
sub
bts
inc
lock
pop
pop
xchg
adc
pop
sbb
dec
cld
or
push
cmpsl
sub
cwtl
pop
leave
jmp
push
xor
lret
inc
ss
cmp
inc
inc
leave
scas
push
mov
shrb
sahf
rorb
jbe
scas
lds
xlat
or
mov
add
call
xchg
sub
lods
jge
mov
call
in
push
cs
cld
ret
xor
mov
fidivrl
adc
repz
pop
fs
shlb
js
test
inc
scas
inc
lret
mov
dec
dec
fldcw
jecxz
hlt
or
xor
and
pop
nop
cmpsb
mov
push
or
pop
inc
sbb
dec
and
and
jbe
mov
inc
push
loop
icebp
shlb
gs
insb
sub
xchg
loope
adc
add
pushf
adc
ret
mov
xlat
fstp
xlat
mov
sub
pop
cs
ds
mov
adc
add
pusha
sbb
inc
mov
lcall
push
xchg
pushf
dec
jge
and
push
lahf
xor
outsl
test
repz
mov
mov
adc
push
add
xor
test
les
xchg
mul
or
lds
mov
lret
popa
push
sahf
jne
pop
adc
fmulp
and
sub
mov
mov
cmp
sbb
push
xor
push
inc
sbb
mov
xchg
stos
xchg
ret
arpl
imul
fadds
cmp
pop
loop
pusha
lcall
mov
sti
mov
ror
lods
dec
add
insb
sub
gs
cli
test
jo
test
xor
lcall
fnsave
aam
jmp
jp
cmc
cld
push
lret
insl
or
mov
inc
in
cltd
orb
xor
sub
ret
dec
lock
pop
mov
shlb
and
clc
in
lcall
sub
leave
adc
and
outsl
add
push
loope
outsl
sbb
jmp
cmp
mov
push
icebp
sahf
cmc
out
movsb
std
add
adc
fcomps
xchg
jo
icebp
mov
stos
mov
add
out
add
mov
adc
mov
mov
int
mov
or
clc
sbb
inc
cs
loopne
add
mov
cmp
sbb
stos
mov
inc
push
les
xchg
mov
jb
push
aas
stc
xchg
xchg
xchg
clc
jnp
sahf
sub
adc
adc
movsb
nop
sbb
insl
mov
dec
pop
mov
pop
push
push
nop
stos
rcrl
in
add
stos
das
in
or
adc
cmpl
dec
movsl
mov
movsl
cld
or
repnz
add
and
sub
sbb
mov
push
adc
mov
cmp
push
jno
adcl
data16
xorb
inc
add
xchg
push
addr16
mov
out
hlt
xchg
or
mov
lcall
xchg
sti
lods
or
test
mov
sbb
es
je
pushf
pop
cli
xor
rorl
mov
push
jp
fidivl
dec
add
mov
jns
mov
aaa
lret
pop
out
push
test
popa
pop
or
aam
into
cmc
push
pop
data16
add
xor
repnz
xchg
pop
lea
cmp
sub
fistpl
daa
hlt
aad
icebp
cmp
outsl
cmc
arpl
fmul
int3
inc
sub
pop
fs
subb
fs
xor
xchg
jmp
mov
mov
in
icebp
imul
push
adc
int
in
push
jno
pop
gs
imul
mov
inc
mov
popa
or
mov
dec
cli
add
subl
mov
mov
dec
stos
in
ret
dec
out
fcompl
push
scas
mov
jge
addr16
inc
jle
mov
push
jmp
insb
adc
add
das
push
and
in
addl
pusha
enter
outsb
loope
into
jb
push
mov
sub
testl
aam
call
mov
adcl
int3
test
icebp
popa
cmp
aam
outsl
adc
std
or
jb
cmpsb
add
or
pop
dec
mov
je
cmp
cmp
enter
addr16
add
pushf
adc
sub
xchg
jo
inc
xchg
popf
nop
insl
scas
test
mov
stos
test
xchg
mov
scas
roll
insb
mov
arpl
mov
cmpsb
popa
enter
jle
lods
lahf
adc
test
sahf
and
fucomip
mov
cmp
adc
ficoml
call
shl
push
frstor
cmpsl
dec
push
jb
ja
or
dec
addb
push
lods
add
mov
sbb
rorb
loopne
popf
insb
mov
mov
or
mov
jmp
cmp
jg
filds
divb
mov
int
lock
cmpsl
fbstp
aaa
lods
mov
testl
sbb
dec
or
fwait
out
shl
and
push
fiadds
mov
mov
addr16
push
addl
sbb
rcrb
jb
push
roll
jl
pop
add
jae
mov
inc
fstl
lahf
inc
je
fcoml
push
jnp
in
mov
jns
loope
out
insl
arpl
push
js
sub
pop
into
fcom
inc
sbb
sbb
mov
ret
lret
out
mov
out
sub
idivb
cmc
and
and
push
push
test
cmp
imul
sub
sbb
or
out
add
andb
int
mov
sbb
pop
inc
adc
push
mov
dec
test
sub
scas
xchg
lret
jb
popl
es
push
outsb
subb
pop
sbb
sub
adcl
sbb
fdivs
lea
ss
test
cmp
ja
jg
dec
push
insb
in
xorl
out
gs
test
sarb
rolb
bound
add
jno
xchg
pop
mov
xchg
xchg
hlt
mov
mov
sub
push
and
xchg
mov
ljmp
xor
push
xor
push
mov
leave
js
cwtl
daa
ficompl
push
mov
lcall
call
jl
and
movsl
jp
xor
cmp
test
cvttps2pi
sbbl
jg
jmp
fstpl
test
sha1nexte
ljmp
cmp
pop
dec
sahf
test
add
movb
cmpsl
mov
inc
daa
shlb
jp
out
addr16
jnp
jg
ss
jge
add
jmp
add
mov
xchg
cmpb
fidivrs
and
cwtl
mov
add
jl
nop
stc
adc
mov
movsb
push
cmc
mov
aaa
std
mov
scas
insb
dec
mov
in
andb
lret
mov
add
sbb
jmpw
sahf
test
aaa
fstpt
std
jnp
push
cmp
or
mov
sbb
es
jnp
aaa
sti
jle
mov
mov
int
and
xor
test
sub
xor
je
jmp
int3
mov
ja
and
ret
inc
dec
sbb
jge
fwait
inc
mov
inc
cmc
or
into
cmp
iret
xchg
add
cli
xchg
push
mov
sub
or
cltd
bound
repnz
fadd
push
mov
mov
add
fs
add
test
xchg
xchg
loope
mov
orl
sti
stc
adc
cmpsb
mov
sbb
stos
mov
cmp
jae
jno
and
mov
and
ja
add
push
adc
cmp
in
outsb
mov
ljmp
inc
ss
lea
cmp
je
or
popa
jns
cmc
cwtl
jne
in
iret
jmp
in
push
adc
iret
loop
dec
int
aas
cli
imul
ss
cmp
inc
repz
out
push
cmp
xchg
jae
testl
sub
lods
xchg
xchg
out
test
testb
inc
dec
xchg
pop
jns
out
stc
aas
lods
sub
or
push
cmc
adc
ss
push
jo
pop
test
mov
jae
xor
subb
lea
adcl
ljmp
cmp
xor
repz
sub
mov
sub
push
iret
xchg
scas
sahf
mov
js
lods
jp
cs
outsb
push
out
insb
lret
subl
push
aam
add
movsb
cld
inc
add
mov
or
test
jno
daa
cli
push
sbb
jge
shlb
xor
cmp
into
dec
xor
repz
icebp
mov
iret
inc
xor
dec
push
stos
js
in
arpl
push
outsl
xor
pusha
movsl
sarb
xlat
jmp
lock
dec
cmp
adc
pop
lock
mov
adcl
ret
cmp
fdivs
cmpsb
js
pop
xchg
sti
jb
in
inc
lret
mov
sti
addr16
fld
push
sbb
test
ljmp
enter
xchg
cmp
arpl
sub
add
adc
mov
popa
push
sub
fs
xor
addr16
add
sub
arpl
jnp
inc
jge
outsb
jb
adc
inc
shlb
adc
mov
pop
aad
pop
js
mov
push
inc
sahf
push
idivl
mov
stc
out
jl
jno
and
xor
add
je
stos
jae
fsubs
xchg
sbb
shrl
push
xor
stos
aaa
lods
push
scas
idivb
or
in
dec
and
insb
push
sub
mov
jmp
pop
out
mov
sbb
pop
or
inc
pop
push
dec
or
and
mov
cwtl
iret
add
icebp
sbb
stos
pop
pop
faddl
push
xchg
in
mov
xor
jb
and
jns
mov
and
push
sbb
je
es
popl
fcmovne
or
insb
mov
jo
mov
jp
sbb
push
cmp
call
inc
push
in
adc
mov
bound
pop
dec
sbb
in
dec
jo
ljmp
mov
dec
sarl
jo
popa
je
jnp
mov
mov
mov
call
pusha
fwait
jne
add
rclb
in
int3
test
mov
mov
pop
outsb
add
cmp
fcoms
out
sbb
mov
xchg
test
stos
stc
mov
pop
insl
mov
sbb
mov
push
hlt
pop
jl
push
int3
jno
stos
cmp
ljmp
xchg
insl
pop
test
and
xor
mov
add
adc
sub
pop
mov
js
nop
cs
sbbl
pop
lods
sbb
jge
lcall
gs
fwait
jb
jle
aad
test
call
fiadds
scas
mov
add
fiaddl
mov
dec
push
add
jg
add
sbb
inc
imul
push
or
pusha
or
ret
dec
fldenv
or
enter
pop
imul
shlb
lcall
xor
popa
push
dec
sarl
sub
das
mov
sti
push
and
mov
push
dec
jge
push
xor
add
fnstenv
ret
xchg
sub
and
lods
lret
add
lcall
inc
sti
orb
addr16
sbb
sbb
pop
push
pop
xchg
pop
adc
adc
je
cwtl
out
repnz
int3
aas
ss
mov
mov
popl
cmpl
lret
sub
pop
scas
xchg
dec
inc
push
pusha
es
mov
xchg
mov
daa
insl
orb
sahf
divb
outsl
jae
xchg
dec
inc
imul
xorl
mov
or
imul
repnz
and
dec
cwtl
mov
mov
int
fdivrl
fcomps
and
and
test
frstor
mov
xor
adc
adc
arpl
ljmp
xor
or
dec
sub
and
jnp
ss
testb
xchg
dec
xchg
lcall
cmp
xor
in
in
add
bound
jp
jmp
cmp
loope
fstpt
inc
push
in
loope
inc
cltd
adc
int3
popa
out
jge
das
pop
hlt
in
or
dec
lock
adc
and
cmp
nop
xchg
pop
sbb
mov
mov
lea
or
bound
sub
inc
iret
mov
jecxz
pop
nop
adc
pop
decb
cmpsb
xor
pop
mov
and
adc
mov
dec
mov
rcl
pop
mov
xor
add
pop
sub
es
stos
inc
aaa
mov
call
adc
or
ret
jmp
or
inc
cmpsb
sbb
shlb
hlt
sub
insl
movsl
sub
int
or
cmpsl
frstor
mov
rclb
shl
push
mov
jmp
data16
fwait
loop
ds
jne
mov
loope
cwtl
push
pop
cwtl
jmp
filds
push
inc
pop
test
mov
rclb
aas
dec
lods
or
mov
test
lahf
jecxz
push
imul
sbb
ret
dec
xchg
es
adc
jb
cmp
jae
insl
and
cld
ja
insl
sbb
pop
jae
push
adc
mov
mov
in
push
inc
shll
movsb
push
pop
xchg
push
push
imul
xchg
cmp
daa
pushf
pusha
jns
cmp
dec
inc
jl
movsl
cmp
cmc
inc
inc
test
push
div
mov
inc
in
mov
les
loopne,pn
push
jne
ds
outsb
test
dec
mov
mov
js
scas
ficoms
xchg
pop
sahf
inc
cmpsb
cmp
xchg
adc
dec
scas
or
es
mov
mov
ficoml
dec
cmp
lods
leave
mov
dec
lahf
pop
out
pop
in
out
ds
pop
arpl
xorl
out
jle
dec
scas
std
jp
mov
jp
mov
je
enter
out
popa
push
shl
das
out
insl
jecxz
imul
in
aad
inc
outsl
fsubrs
mov
aaa
xchg
xchg
mov
pop
lea
nop
repz
addb
jp
shr
mov
pop
shrb
enter
push
push
pusha
jnp
xor
faddl
mov
iret
popa
fadd
pop
mov
add
popf
push
loop
imul
push
lahf
sub
movsb
dec
sbb
jo
or
iret
sub
das
mov
adcl
add
imul
xor
shll
lods
int
loopne
pop
sbb
sub
sbb
lret
arpl
pushf
aad
test
mov
lret
mov
adc
clc
jb
hlt
push
mov
xchg
imul
xchg
dec
outsb
mov
ud2
sub
jae
add
inc
xor
ds
jnp
lcall
adc
scas
loope
dec
in
dec
jbe
jecxz
fldcw
jmp
gs
mull
push
fcomps
cmpl
adc
les
and
jecxz
imul
fisubrs
sub
sub
mov
iret
sbb
xchg
xchg
push
pop
mov
ret
popf
jp
ljmp
pop
xchg
cmp
sahf
mov
mov
push
sbb
mov
enter
and
popl
or
xchg
add
cltd
cld
call
cwtl
or
or
stos
add
mov
and
mov
ret
add
jmp
shll
stos
dec
and
xor
xor
dec
call
loopne
sbb
xchg
dec
popa
fwait
ret
ret
or
pushf
les
outsb
ret
push
sti
in
outsl
mov
push
inc
ret
cmp
scas
outsl
adc
cmp
call
imul
leave
adc
adc
lock
mov
into
outsb
xchg
lock
mov
or
aas
movsl
scas
push
mov
mov
cli
rolb
testl
jmp
cmpsl
lds
mov
xor
jmp
and
xor
and
iret
cmpl
xchg
lahf
stos
lods
mov
add
mov
cwtl
jne
shrl
sub
lds
inc
push
sti
jecxz
fs
dec
inc
mov
jne
roll
repz
std
push
cmp
nop
dec
add
sahf
cmp
jmp
adc
pop
inc
cmpsb
xor
add
jp
adc
lea
insb
repz
xchg
movups
ljmp
mov
jb
rcrl
xchg
sub
subl
sub
call
sbb
inc
xchg
sub
cmp
cmpsl
jnp
test
ret
mov
movsl
shr
mov
mov
mov
cli
or
loope
inc
aas
iret
sbb
iret
jl
and
dec
or
and
xor
push
or
sub
jmp
enter
push
cmp
pop
push
jmp
jbe
je
test
jmp
or
xchg
pop
gs
pop
addr16
pop
mov
mov
lods
mov
jle
jge
outsl
bswap
or
sti
ja
xchg
dec
movsl
or
loope
fists
xchg
push
jg
int
outsb
or
cwtl
aas
xchg
mov
dec
sub
icebp
imul
popf
or
sarl
adc
in
pop
rcll
test
sbb
push
jb
jno
mov
cmp
and
mov
pop
mov
outsl
ret
inc
mov
rorl
xlat
pop
lock
mov
jne
loop
push
push
mov
inc
aad
hlt
add
or
pop
addl
mov
fidivs
stc
in
dec
jb
mov
lret
clc
xchg
xchg
shlb
pop
std
daa
mov
movsl
js
mov
nop
adc
cmpsl
add
imul
icebp
insl
fistpll
fcmovu
xchg
frstor
cmp
adc
in
pop
data16
aaa
pop
fabs
jmp
xchg
scas
xor
mov
hlt
movsl
sbb
in
int
icebp
or
xor
jne
aaa
fadds
jno
fisubs
mov
cmpsl
jle
in
sub
cmp
mov
movl
out
jno
push
mov
jno
xchg
out
and
mov
out
stc
mov
pop
pop
pusha
push
jae
jl
loop
inc
mov
roll
pop
xchg
xchg
xchg
jg
arpl
pop
leave
jo
jb
sbb
inc
test
xor
in
pop
stc
int3
imul
in
es
fimuls
lds
sub
loop
ror
bound
cmp
jge
push
iret
adc
std
pushf
mov
sbb
in
cmp
out
add
jle
pop
nop
adc
js
imul
out
jnp
out
jno
jge
mov
push
or
and
jmp
enter
out
mull
push
dec
sub
mov
mov
mov
scas
das
insl
ret
loopne
fsub
cmc
mov
add
inc
scas
jb
aam
out
pop
xor
sub
xor
ficoml
shrb
ret
mov
rcrb
cmp
repz
dec
add
insb
dec
pop
cmp
inc
adc
mov
xor
inc
jo
pusha
fstpt
in
adc
push
out
mov
xchg
repz
xor
fidivs
jbe
add
iret
or
movsb
xor
mov
inc
sbb
sub
scas
faddl
std
jb
add
lock
mull
cmp
sbb
mov
lock
adc
les
jg
mov
fsubrl
repnz
and
inc
into
cwtl
xorl
leave
test
jl
push
or
addr16
and
inc
in
repnz
insb
push
ljmp
fimull
dec
in
mov
jae
fistps
je
xor
call
testb
jle
loopne
addr16
insl
add
pop
fwait
lods
jl
sub
aam
mov
xor
pop
mov
movsb
xchg
out
iret
mov
jae
jmp
lret
cmp
subb
ret
insb
gs
test
push
mov
cmpsl
dec
jge
out
cmpsl
add
cmp
mov
push
sub
fnstsw
es
mov
dec
mov
lea
out
pop
mov
push
xchg
or
fstps
rorb
push
push
dec
je
mov
xchg
push
outsl
test
xchg
xor
jae
adc
int
cmp
fsubrs
lahf
jp
dec
adcb
rolb
mov
int
test
cmpb
imul
out
mov
sub
fsubrs
test
imul
or
jb
xor
and
test
pop
scas
sbb
and
dec
into
dec
jns
ret
jo
fildll
test
pop
sbb
xchg
xchg
jbe
adc
fcomip
sub
mov
mov
push
cmpsb
xor
lret
lcall
pop
push
and
outsl
call
xor
dec
sbb
jae
push
dec
in
adc
xor
daa
shlb
mov
jge
adc
daa
push
sbbb
adc
pop
and
mov
dec
adc
cmpsb
and
adc
daa
add
int
adc
stc
repnz
xlat
in
idivb
popa
and
mov
push
add
out
jmp
addr16
loop
xchg
fstl
xor
xor
sar
xor
lods
push
jns
lods
int
dec
dec
adc
jb
in
mov
xor
and
ss
insl
dec
xor
push
adc
iret
sub
sbb
mov
addl
sbbl
rolb
arpl
pop
pop
jmp
cmc
mov
into
scas
push
into
push
cld
leave
ret
lods
cmp
lret
cli
ja
add
imul
inc
xchg
push
mov
push
inc
pop
mov
outsb
dec
int3
loopne
stos
and
sahf
or
test
cmpl
pusha
xchg
adc
pop
jg
cld
popf
xchg
fstpl
jae
jg
jge
lock
or
dec
daa
xor
sbb
lods
xchg
pop
mov
pop
mov
dec
gs
ret
push
mov
pmovmskb
push
jle
inc
push
sbb
mov
mov
add
add
mov
shr
lret
sub
loope
xor
into
pop
dec
mov
jb
js
insl
and
pop
cmp
xor
jp
or
sub
add
mov
push
sbb
sbb
push
in
cmp
pop
adc
mov
outsb
cmp
sub
pop
mov
mov
or
scas
jmp
push
xchg
add
push
or
adc
inc
inc
inc
jo
shll
push
outsb
pushf
push
inc
xchg
int3
sub
decb
jp
jnp
rcrl
jmp
inc
jl
pop
mov
mov
rep
mov
stc
int
repnz
pop
mov
and
enter
push
sbb
imul
fisubrl
pop
xchg
inc
mov
aad
insb
pop
pop
dec
mov
clc
aad
dec
xlat
enter
fsubr
fbld
mov
mov
scas
xchg
fdivs
xor
nop
mov
fsubrs
imulb
cmp
hlt
push
loopne
subb
hlt
repz
cmp
mov
test
in
ja
pop
mov
sub
or
pop
dec
scas
dec
jo
pop
pop
lret
mov
pop
and
outsb
xorb
bound
xor
jle
pop
jg
bound
movsb
out
inc
lods
rcrb
sbb
shl
mov
mov
push
inc
gs
inc
arpl
xchg
lods
lds
add
ljmp
fs
jb
xor
popl
cmp
add
ds
add
jl
xchg
mov
pusha
mov
fisubrl
push
mov
xchg
insl
mov
dec
sbb
xchg
cmp
dec
fstpt
cmp
push
notl
hlt
jae
aaa
aad
pop
cld
or
pop
setae
mov
pushf
adc
mov
sub
mov
loopne
push
inc
scas
std
inc
mov
fs
aam
xchg
or
mov
add
out
fsubrs
mov
fcompl
xor
dec
and
mov
dec
xchg
dec
stos
pop
movsb
dec
outsb
mov
loop
xlat
or
out
xchg
int3
adc
push
cmp
xor
dec
pop
mov
cli
inc
cmp
xchg
test
test
std
sbb
cli
stos
add
mov
push
jle
cmp
mov
xor
popa
mov
sub
out
dec
fidivs
sbb
mov
sbb
call
or
les
jne
mov
sub
jae
fldcw
push
sub
dec
mov
loop
call
stc
and
fs
and
sbb
std
outsl
mov
insl
add
in
jl
mov
repnz
adc
add
lret
outsb
jg
adc
jbe
xchg
inc
iret
scas
rorl
mov
scas
sub
loopne
xlat
lahf
adc
out
cmp
pop
add
ljmp
pop
enter
test
xchg
popa
in
ljmp
bnd
sbb
xor
cltd
xchg
clc
push
or
imulb
inc
movd
call
mov
jb
insb
das
repz
test
shr
cwtl
fwait
push
sub
mov
ljmp
push
and
lret
es
mov
cltd
jns
push
cmp
pushf
sub
aaa
hlt
clc
into
insl
cwtl
subl
ret
fld
pushf
outsl
xchg
cmp
mov
stc
and
add
inc
daa
fmull
dec
lock
cmpsl
rorb
dec
testl
fidivrs
and
jge
ror
pop
lods
cmp
dec
jno
xchg
push
xchg
sub
or
jo
mov
insl
jg
and
dec
daa
stos
pop
nop
cs
push
adc
pop
std
mov
mov
xchg
jb
into
and
sbb
daa
ret
imul
std
jb
xorps
xchg
aas
xor
idivl
mov
testb
jmp
jl
cmpsl
jb
ret
dec
add
mov
xor
shl
push
jg
and
std
mov
mov
add
clc
cli
es
insb
aam
and
popf
mov
fdivrs
jmp
mov
add
push
int
ffreep
fldenv
jp
cmp
inc
fnstsw
cmovno
jns
out
jmp
adc
sub
inc
push
sbb
jl
jne
mov
aad
xor
jno
aaa
scas
loop
lods
sub
sub
cwtl
int
xchg
sahf
pusha
adc
imul
cmpsl
jge
inc
mov
inc
test
cs
mov
stos
cltd
arpl
xorl
mov
ret
lcall
lahf
and
xchg
test
iret
dec
lock
cmc
rcr
in
shll
jp
dec
imul
mov
test
jl
sbb
iret
arpl
jp
push
or
fnstsw
lcall
push
rolb
test
lods
xor
add
lcall
xchg
pop
pop
je
inc
scas
into
in
ret
call
scas
test
sub
xchg
add
bound
and
mov
data16
xlat
fldt
adc
mov
insb
outsb
or
lret
jp
jle
call
out
sub
popa
stos
push
pop
out
sub
int
ret
jns
inc
sub
je
cwtl
in
inc
add
call
hlt
aam
mov
push
adc
pop
mov
jbe
nop
cld
or
dec
je
pushf
loopne
pop
and
xchg
lock
inc
nop
shll
xor
lret
ja
xor
xchg
inc
jns
int3
jns
lods
jae
rorl
jns
mov
fidivrl
pusha
and
mov
pop
outsb
mov
ds
dec
ret
jnp
repnz
push
fcmovnb
cmpsl
xchg
xchg
pushf
sub
ret
jno
mov
lock
imul
mov
push
enter
push
and
xchg
in
ds
push
inc
stos
andl
mov
jge
ret
movsl
and
sub
mov
sti
in
rcl
jne
outsb
aaa
es
fbstp
cmp
fiaddl
sbb
enter
jne
mov
incb
mov
sub
rcrb
pop
dec
adc
xchg
mov
cmc
mov
subl
in
movsl
or
and
test
mov
out
mov
and
pop
inc
jne
inc
jmp
aam
dec
add
pop
es
mov
mov
jb
push
adc
sbb
xchg
add
jo
cmp
xor
and
cmp
aas
mov
inc
cmp
xchg
sub
mov
cmpsl
arpl
jg
jne
push
dec
test
xlat
pop
mov
mov
xchg
sbb
mov
imul
jmp
sarl
cmp
mov
sahf
inc
pop
push
mov
sub
jnp
xor
xlat
push
sbb
repnz
xor
enter
sbb
shl
mov
xor
push
or
mov
mov
xor
lock
jecxz
addr16
jns
or
jg
stos
jp
outsb
and
clc
xchg
mov
aas
mov
pop
repz
ret
dec
push
or
out
inc
push
call
add
insb
pop
xchg
inc
xchg
push
inc
dec
lahf
mov
jae
cmp
insl
pushf
clc
mov
leave
fnstsw
std
cmp
ret
out
sub
push
or
cwtl
repnz
sub
testb
fbstp
fidivl
cltd
jmp
popa
xlat
mov
jmp
nop
out
inc
outsl
js
adc
push
test
or
xchg
dec
add
push
enter
adc
imul
mov
xchg
jmp
js
jo
out
das
addb
stos
inc
lret
mov
repz
sbb
add
imul
mov
cli
pop
sar
lahf
cmpb
adc
iret
pop
cmp
ret
or
or
icebp
cmp
push
xor
cmc
push
cmp
and
mov
xchg
pop
sbb
push
mov
fnstenv
mov
inc
int
or
add
fisttpll
in
addr16
xor
mov
xchg
pop
pop
scas
sbb
das
sbb
inc
xchg
jge
int3
push
fisubrl
pop
bnd
pop
shl
cltd
dec
and
movsb
push
mov
mov
fists
jmp
xchg
cli
xor
or
jo
push
xchg
outsl
mov
add
jbe
pop
jne
loope
pushw
js
cltd
mov
pop
sbb
iret
xor
out
lahf
xchg
mov
incl
cmpsl
adc
xchg
mov
sbb
cmpl
and
xchg
adc
xlat
mov
mov
pop
adcl
or
and
loopne
xchg
cwtl
orl
or
adc
outsl
push
ret
idivb
aas
lods
ljmp
dec
dec
sbb
sub
dec
inc
add
inc
cmpb
jg
inc
js
jne
dec
cli
pusha
das
xor
mov
lcall
fwait
add
outsl
insb
sbbl
fmul
or
sub
cmp
dec
jmp
inc
ss
sarl
xor
push
lock
and
jo
mov
lcall
jmp
outsl
rolb
mov
push
sub
jbe
addr16
inc
pop
cli
stos
sub
popa
sbb
and
in
push
inc
aad
out
cli
aaa
lds
insb
xchg
fldl
std
ror
in
outsl
sti
and
pop
out
mov
jp
out
repnz
aaa
mov
push
mov
or
adc
int
test
scas
mov
insl
pop
xchg
test
adc
daa
mov
xor
or
mov
push
test
adc
lcall
sahf
add
mov
add
and
jb
jmp
dec
pop
lret
cmpsb
add
loopne
pop
je
call
in
in
add
shl
iret
dec
pop
scas
out
dec
or
jbe
stos
cmp
xorl
and
aas
push
fisubrs
jle
and
mov
popa
lret
ljmp
cmp
mov
movsl
push
stc
jp
test
fisubrs
fcmove
and
pop
test
outsb
xor
enter
pop
pop
jnp
add
adc
lock
mov
scas
add
fbld
lods
lret
sbb
ret
xchg
cmc
fstl
insb
push
adc
dec
dec
and
push
popf
adc
add
sbb
divb
std
int
mov
inc
out
je
int3
jne
jns
inc
test
nop
or
mov
add
xlat
mov
push
mov
int
and
repnz
rep
jp
add
dec
xchg
in
aad
push
scas
pusha
mov
sahf
xchg
frstor
add
cmp
inc
jb
ja
and
mov
lods
or
xchg
mov
dec
xor
add
xchg
push
xchg
or
sbb
jo
adc
add
cmp
push
inc
mov
add
mov
and
std
xor
aas
jbe
xchg
cmpsb
dec
icebp
mov
jecxz
mov
popa
testl
dec
push
inc
xchg
aaa
push
fwait
push
xchg
xor
mov
xor
push
xchg
cli
adc
push
sub
pop
dec
mov
std
fucomi
pushf
ja
pop
add
adc
and
xchg
popf
and
mov
mov
cmpsb
insl
subb
xchg
cmp
mov
xlat
test
loop
push
xor
and
sub
push
fistpl
fldl
shl
mov
adcl
out
push
aad
add
xchg
xor
repz
iret
jle
orl
adcb
sbb
lcall
mov
cmp
stos
icebp
je
push
mov
loop
ja
add
xchg
jo
stc
jmp
jne
sbb
dec
mov
or
add
cmpsb
dec
dec
xchg
xor
loopne
aad
and
xchg
xor
clc
xchg
pop
mov
pushf
test
jge
arpl
mov
push
or
push
and
insl
pop
in
mov
dec
sbb
or
pop
mov
fldcw
pushl
fdivr
push
sbb
fstl
bound
mov
loop
cmp
mov
xlat
dec
cmp
pusha
sbb
roll
jns
ret
mov
sub
cli
jmp
rorl
es
enter
xchg
add
mov
subb
pop
aam
stos
cmp
repnz
popf
arpl
pop
aam
pop
test
or
sbb
lods
and
and
xchg
cld
mov
rorl
pop
fsts
ljmp
pushf
ljmp
mov
jp
dec
int
jno
cltd
jne
icebp
adc
das
imul
stc
test
ret
jmp
jnp
add
rcrl
pop
scas
shrb
dec
pop
mov
cmp
push
jno
xor
call
xor
add
out
adcb
loopne
testb
daa
mov
push
mov
daa
xor
pop
lods
add
sub
lea
xchg
xor
es
jl
xor
dec
mov
or
add
mov
lcall
jns
mov
pop
ret
mov
iret
jg
push
mov
mov
ja
or
jmp
cmp
pushf
out
clc
cmpsl
scas
in
lods
or
pop
lods
or
mov
adc
ret
stos
out
xchg
inc
movsl
lock
addr16
fistpll
cmp
leave
mov
xor
ss
jmp
jo
out
jb
fsubrs
xchg
push
movsl
inc
cmp
mov
pop
sbb
mov
pop
cmpsb
and
pop
cmc
cmp
jl
lahf
and
or
cmp
dec
inc
mov
mov
xor
cld
mov
cmc
jge
pop
and
add
xor
mov
inc
dec
int
mov
and
adc
push
cld
or
push
and
inc
sub
ret
cld
pop
stos
sub
mov
loopne
inc
lret
or
dec
jbe
pop
sub
lahf
jl
andb
inc
addr16
fsubrs
dec
and
add
add
jne
sub
fcmovne
arpl
inc
push
sub
push
fstps
test
jg
shlb
iret
and
imul
inc
call
inc
inc
mov
sahf
inc
push
pop
jecxz
sub
test
fwait
adc
mov
jl
mov
dec
push
push
xor
repz
and
xchg
cmpsl
lods
sub
xlat
mov
jne
cmp
test
push
mov
fmuls
dec
dec
dec
std
sub
mov
lahf
dec
mov
test
outsl
jbe
jp
jb
cmpxchg
int
sub
jnp
inc
ficompl
jae
dec
sbb
pop
popl
aad
sub
mov
lods
cld
pop
and
xchg
nop
cmpsb
movsb
push
data16
dec
and
mov
jl
and
mov
aam
pop
popf
and
and
out
and
out
aaa
ffreep
negl
mov
jmp
mov
bt
mov
pop
paddb
mov
push
sbb
xor
mov
loop
xor
xchg
pop
repnz
push
inc
mov
adc
inc
aam
andl
mov
int
ror
ss
out
lods
aas
sbb
pop
je
pop
clc
xchg
lods
push
test
and
pop
push
fs
insl
stos
adc
movsl
xchg
lods
xchg
jns
push
sub
inc
js
or
loopne
inc
loope
lods
sbbl
adc
fildll
inc
aad
flds
into
cs
scas
xor
and
hlt
push
mov
enter
or
in
cmp
stc
gs
addr16
pop
push
jg
rclb
divb
sub
cltd
xor
fcomps
inc
pop
mov
pop
xor
stos
out
mov
and
push
xlat
and
dec
bound
dec
push
iret
adc
mov
test
stos
ror
fcmovne
push
xchg
scas
jl
xor
cmpsb
out
jb
xor
adc
push
push
ljmp
sub
add
sbb
scas
ljmp
xchg
popl
mov
addb
push
jecxz
adc
addr16
mov
and
lret
hlt
mov
add
add
sbbb
mov
sbb
push
pushf
push
shrb
cmp
mov
pop
mov
loope
dec
mov
repnz
xor
push
movsb
sub
xor
lock
clc
xchg
xchg
incl
pop
or
bound
mov
cmp
sbb
enter
icebp
mov
adc
lcall
inc
rcrb
xchg
mov
dec
sbb
pop
sbb
mov
xor
and
inc
out
paddq
cmp
stc
dec
hlt
mov
push
mov
mov
mov
fdivr
int3
xchg
mov
xor
xchg
aam
mov
mov
pop
jbe
ja
sub
cmpsb
lret
or
xor
mov
das
or
dec
mov
das
or
add
and
test
jno
fldt
mov
stc
mov
das
xor
mov
jmp
or
inc
fwait
adc
stos
icebp
idivb
subb
andb
incb
movsb
sub
push
fcompl
xchg
push
rclb
inc
cmp
pop
movsl
adc
jp
mov
int
es
ret
dec
inc
cmp
lret
pop
adc
mov
ret
cmp
push
push
sti
rcrl
dec
je
push
insl
push
and
and
adc
jle
inc
sbb
jb
and
repnz
push
or
cmp
cmp
xchg
nop
sbb
fisubs
pop
enter
dec
inc
dec
hlt
pop
movsb
leave
inc
daa
stos
jbe
ja
or
dec
rorl
fnstenv
lcall
and
and
sahf
xchg
dec
or
sbb
ljmp
lods
in
sbb
dec
push
outsb
mov
pop
out
adc
and
ret
sub
and
mov
outsb
mov
call
xchg
cwtl
jge
add
xchg
fstps
inc
dec
dec
out
xorb
and
shr
and
fldt
insb
xor
pop
sahf
mov
mov
mov
imul
fnstsw
out
in
mov
das
cmp
icebp
xchg
imul
adc
sub
push
jmp
and
dec
movsb
orl
mov
in
mov
sub
push
pusha
outsb
lea
xor
fisttpl
popf
dec
movsl
shrb
cwtl
enter
pop
inc
dec
xor
add
cltd
sbb
cli
or
sti
movsl
mov
mov
lea
inc
shl
loope
jl
or
sbb
aam
pop
jns
and
jae
add
insl
gs
cli
pop
cltd
mov
jne
nop
dec
fnstcw
cmp
cmp
hlt
mov
sahf
push
xor
or
popa
sbb
mov
cmp
pop
aas
lret
mov
imul
xor
and
mov
test
iret
jp
mov
gs
lahf
xchg
enter
int
pop
lahf
mov
push
sub
add
sub
cmc
jns
flds
aaa
sub
testl
add
push
cmp
loopne
push
jmp
mov
out
inc
push
xor
dec
scas
outsl
sahf
pop
movsb
pop
jns
mov
sub
into
dec
cmp
cltd
mov
fwait
movsb
xor
push
imul
jecxz
sbb
int3
outsb
xor
aad
iret
fs
jp
pop
xchg
pop
pop
and
fs
inc
in
popa
loope
add
dec
inc
push
jb
dec
lds
inc
mov
dec
into
insb
and
ja
push
jne
mov
std
clc
sarb
and
je
faddl
pop
xorb
test
cli
mov
push
dec
test
les
lcall
decl
adc
pushf
adc
jbe
nop
aas
jecxz
inc
adc
mov
int3
pop
adc
addr16
add
xchg
inc
inc
xchg
inc
cld
push
pop
jbe
call
aad
pop
imul
push
outsb
test
push
xchg
pop
mov
imul
pusha
inc
jno
push
inc
jae
sub
lock
cmp
or
add
rolb
sub
inc
mov
sbb
in
ss
xor
dec
aas
pop
out
xor
xlat
xorb
into
imul
scas
ja
cli
or
or
movsl
jmp
push
add
add
mov
clc
mov
xchg
in
mov
fbld
pop
mov
jns
arpl
mov
bound
aaa
test
imul
push
mov
cmp
les
add
negb
push
jmp
fs
sbb
cmpsb
jle
cmpsl
cmp
ficoml
scas
data16
outsl
and
cwtl
and
sahf
push
jno
xchg
dec
test
popf
ljmp
jne
push
rol
and
orl
iret
sub
movb
sbb
outsb
ljmp
lock
pop
repnz
adc
mov
iret
jno
adc
push
mov
sbb
scas
rclb
jno
xchg
xor
or
ror
jns
xchg
pop
subl
adc
xlat
push
pop
sub
adc
jno
mov
mov
add
dec
sub
popa
mov
mov
adc
fisubrs
jge
mov
daa
sbb
cmpsb
pop
mov
mov
xchg
sahf
push
ja
ja
sub
in
nop
mov
stos
and
sbb
push
scas
sahf
inc
jecxz
out
mov
add
jnp
out
in
insb
inc
xor
adc
loopne
mov
and
cmp
int
pop
jp
mov
scas
das
cltd
stc
lds
ret
adc
and
add
dec
fnstsw
icebp
pushf
xorl
sub
jb
inc
sub
and
mov
sbb
mov
lcall
mov
xchg
cmpsl
ss
fwait
in
cmc
mov
and
adc
stc
pop
jge
movsb
loop
lret
push
in
xor
repnz
popf
loop
or
inc
jp
ljmp
inc
aaa
cmp
mov
adc
loopne
stos
imul
mov
clc
push
inc
test
loop
test
sub
rcll
mov
enter
shl
enter
and
ja
mov
jp
stos
jb
bswap
mov
movb
addr16
or
mov
lahf
imul
ret
sbb
inc
andl
sub
jno
scas
xchg
movsl
sub
pop
xorl
test
and
pop
scas
cmp
xor
test
fistps
pop
popa
jl
aaa
ret
mov
popa
jno
jnp
test
cs
push
push
inc
movsl
cwtl
sbb
pop
daa
ja
pop
pop
test
lahf
push
lret
loope
insl
xchg
adc
xor
pop
push
pop
jg
sub
mov
xchg
pop
push
push
decb
std
cld
push
cltd
movsb
popa
repnz
pinsrw
jmp
xor
cwtl
gs
xchg
xchg
jb
push
mov
stos
xor
xor
add
sbb
les
mov
xor
cmpsb
and
sarb
mov
rclb
ljmp
stos
xchg
jl
mov
mov
mov
mov
adc
sbb
lods
inc
ljmp
push
cmp
dec
pop
inc
outsb
in
aaa
jae
loope
leave
pop
xorl
stos
or
jmp
call
xchg
jns
mov
int
sub
jl
in
test
orl
mov
mov
mov
fstl
inc
sub
mov
pop
addr16
bound
jne
push
pop
xchg
dec
cmpsb
cmp
cmp
sbb
pusha
push
jo
popa
test
out
inc
adc
adc
mov
stos
shrb
xchg
cmpsb
loop
push
fsubr
enter
leave
sbb
cmp
jns
add
orb
and
mov
sub
lods
mov
stos
test
xor
inc
fldenv
test
in
mov
aaa
lock
push
or
ljmp
out
inc
scas
in
push
stc
jae
xor
popf
stc
mov
push
loope
sub
psubusb
adc
rclb
and
lret
push
rcll
ds
pop
aam
sbb
xor
popa
cmp
mov
repz
out
mov
inc
cwtl
shlb
popa
leave
iret
test
inc
dec
sub
jl
mov
or
test
arpl
mov
push
xor
dec
in
icebp
xor
dec
pop
cs
mov
jne
iret
out
clc
je
pop
pop
add
negl
dec
mov
and
xor
mov
movsb
shrl
ja
xchg
nop
mov
mov
xor
cmpsl
pop
aaa
int3
fbld
jnp
mov
ror
dec
mov
adc
ret
mov
jge
pop
cld
fidivs
dec
popf
xchg
in
js
xchg
mov
stos
in
dec
sbb
aas
rorl
mov
in
inc
lock
outsl
cmp
out
xchg
psllq
fdivs
pop
lock
push
mov
fsubrs
adc
xchg
test
icebp
xchg
dec
push
outsb
loop
jb
mov
sub
lods
shlb
nop
lods
push
lret
mov
mov
xchg
push
cmpsl
pop
mov
mov
aaa
ljmp
pop
movsl
ret
cmp
adc
jmp
push
xchg
rcll
cmp
clc
and
jbe
ds
inc
mov
dec
jle
lret
cwtl
xchg
mov
mov
out
popa
pop
cmc
mov
xchg
xchg
pop
mov
fisttps
cmp
test
cld
or
arpl
pop
mov
or
sbb
mov
mov
inc
and
xchg
add
pop
or
sbb
push
cld
fwait
jbe
dec
add
subb
scas
xor
mov
cvtpi2ps
pop
sbb
sti
mov
push
cmpsl
xchg
pop
xor
ss
shrl
pop
sub
push
imul
push
dec
or
in
and
int3
inc
jle
jne
dec
sub
mov
enter
sarb
push
sahf
out
mov
xchg
lahf
mov
leave
sti
push
adc
pop
insl
inc
add
dec
xchg
or
aaa
aas
clc
push
insb
push
pop
sub
ds
xor
ret
test
push
mov
ds
jge
into
mov
inc
push
inc
hlt
ss
sbb
pop
sbb
addr16
add
ds
scas
stos
mov
aas
fildl
imul
mov
cmp
popf
enter
pop
mov
jl
scas
clc
mov
pushf
inc
gs
lret
jg
das
int3
bound
inc
je
addl
call
dec
adc
js
or
cmp
jns
lret
ds
fcoml
and
test
test
out
arpl
xor
sub
sub
shl
add
iret
jl
arpl
sbb
adc
push
lea
insb
mov
sbb
rep
inc
pop
add
ret
das
stos
icebp
inc
orl
xchg
loope
es
movsb
movsb
add
mov
mov
and
and
jno
xchg
push
lret
dec
popf
bound
daa
or
or
xchg
loop
add
cmp
and
xor
add
xorb
cltd
xor
leave
xchg
test
out
and
adc
test
xor
pop
sbb
orb
sbb
rcll
call
push
pop
push
pusha
inc
insb
jge
xor
fldt
ret
rcrb
mov
mov
sti
cmp
imul
pop
test
repnz
jg
fidivrl
dec
xchg
lcall
das
xchg
pop
push
aas
dec
jp
loope
lcall
mov
aaa
sbb
sub
xlat
pop
fldt
daa
cmp
mov
push
sub
xchg
xor
push
cmp
sbb
pop
fwait
aaa
pop
add
fsubrs
cmp
mov
inc
fxch
xor
in
cwtl
push
mov
add
pop
stos
fwait
push
xchg
dec
test
cmpsl
cwtl
and
mov
ljmp
jg
mov
push
fildl
in
into
ja
mov
sti
scas
lcall
lret
lods
fsubrl
fcomps
xor
xchg
push
xchg
ficompl
shrl
jno
arpl
leave
fcompl
add
ret
test
loopne
fnstsw
inc
fimull
xor
dec
das
adc
mov
dec
sub
or
popf
icebp
mov
mov
inc
or
and
xor
sbb
mov
imul
in
jno
lods
je
lret
inc
fwait
imul
fmull
int
aad
xor
sbb
es
mov
push
in
loopne
repnz
outsl
ds
test
subl
sub
push
sbb
mov
mov
sub
enter
test
lcall
imul
filds
fucomi
pop
inc
and
decb
dec
lods
xor
adc
ljmp
xchg
jno
pop
mov
mov
fwait
sub
fmull
mov
pop
sub
adc
in
mov
sbb
imul
push
insb
sti
lea
cmpsb
mov
or
jge
xchg
xor
out
scas
pop
xchg
mov
lds
sahf
or
in
cwtl
xchg
adc
or
cmpsl
mov
mov
sarl
mov
shlb
sbb
into
test
adc
mov
adc
xchg
push
adc
mov
mov
push
inc
cmpsl
push
jnp
pop
insl
enter
push
or
dec
xchg
jne
jns
and
xchg
push
xlat
in
or
and
test
jns
mov
xchg
insb
data16
xchg
inc
xchg
imul
xchg
sbb
sbb
cs
inc
adc
pop
pop
lahf
stos
lret
cmp
push
in
push
push
xchg
mov
mov
inc
sub
adc
mov
test
test
fmull
and
pop
adc
into
jae
cmpsl
mov
mov
ss
loope
xchg
or
mov
mov
jnp
jp
sub
inc
int
jle
sub
inc
xchg
inc
jmp
lret
push
lods
ret
loope
push
inc
cmpsb
jle
in
ds
xorl
add
hlt
fldl
jns
mov
iret
mov
call
mov
les
adc
fiaddl
test
mov
fsubrl
popa
push
in
lods
mov
fnstenv
scas
xchg
xor
mov
mov
jmp
mov
xchg
popa
enter
cmp
call
sub
xchg
pop
and
bound
mov
rcrb
mov
rol
push
and
sti
pop
sti
push
mov
or
and
mov
mov
add
jmp
js
dec
pushf
out
mov
jle
mov
or
mov
aam
notb
movb
nop
push
outsl
std
dec
pop
rclb
fsubs
lock
repz
or
ds
mov
push
cld
scas
lahf
hlt
lahf
mov
push
pushf
adc
push
xor
ret
inc
pop
push
cmp
jecxz
and
scas
cld
mov
mov
in
test
test
inc
lcall
jge
in
mov
jge
cmp
loopne
cmp
loopne
pop
je
lods
jle
mov
sub
js
xor
mov
mov
sbb
push
mov
std
orl
hlt
dec
test
cmpsb
dec
dec
stos
pop
pop
popa
sbb
pop
mov
pop
pop
add
mov
adc
or
rorb
test
mov
push
xchg
dec
aaa
mov
addl
mov
outsb
mov
add
cmc
rcrb
movsb
aad
jmp
mov
mov
out
add
lds
mov
sbb
xchg
ds
lock
lods
bound
mov
xchg
ret
cmp
push
sbb
xchg
jb
sub
inc
dec
sbb
out
lret
and
jmp
sbb
and
imul
insb
imul
adc
idivb
xor
dec
cmpl
out
ret
inc
int3
clc
mov
xchg
push
add
cs
jg
adc
cmp
adc
ljmp
pusha
outsb
pop
mov
inc
jmp
loope
inc
cmp
mov
in
sub
out
xchg
add
insb
mov
andb
rcrl
cmp
inc
sbb
and
je
cmpsb
xor
mov
dec
pop
shll
jmp
mov
or
out
jbe
subb
je
or
push
in
pop
pop
pop
out
imul
movsb
add
sub
mov
pop
mov
push
xchg
into
test
aaa
movsb
rcrb
xor
shll
xor
and
xchg
sub
push
mov
sbb
iret
jle
lds
mov
shlb
mov
add
and
push
mov
and
inc
aaa
arpl
sub
jmp
cmp
filds
rolb
mov
mov
movsb
sub
cmp
cwtl
movsl
mov
ljmp
ret
pusha
lea
daa
outsl
imul
or
les
mov
jbe
ret
xor
inc
and
dec
and
sbb
xor
cs
ret
cmc
or
sarb
sbb
sub
cli
test
shr
push
rorl
inc
mov
insl
xchg
out
ret
pop
sub
rcll
fstl
enter
lahf
repnz
push
bound
push
lods
negl
adc
inc
loop
add
jb
call
es
pop
xorl
leave
xor
xchg
fisubrl
push
dec
sub
push
popf
and
inc
stos
cmp
xor
cmp
out
cmp
push
js
jp
sub
pop
pop
jl
mov
lds
repz
inc
mov
loope
mov
loopne
xor
mov
faddl
ret
iret
out
push
sbb
mov
cmp
sub
mov
arpl
dec
mov
out
mov
pushf
daa
lahf
or
mov
mov
and
pop
test
dec
call
addb
pop
jl
push
mov
loopne
xor
pusha
add
out
xchg
mov
iret
in
mov
mov
pusha
mov
mov
jbe
xchg
inc
fidivl
mov
mov
stc
adc
inc
lahf
jns
test
and
icebp
cmpsl
add
fcmovne
add
repnz
lods
lods
xlat
adc
sbb
xlat
adc
lds
sbb
mov
xchg
push
popf
out
sbb
sub
test
lahf
adc
and
mov
inc
pop
sub
int3
xchg
sbb
clc
xchg
pop
mov
out
push
cmp
sahf
or
in
dec
ds
inc
mov
sub
mov
fldenv
stos
es
imull
hlt
sahf
cmp
aam
test
scas
fidivrl
imul
pop
jnp
xchg
incb
mov
sub
pushf
sahf
jns,pn
sti
pop
mov
adc
addr16
gs
xor
pop
sahf
inc
sbb
or
cmpsb
mov
push
fwait
mov
xorb
xchg
aas
dec
add
or
call
push
adc
sbbl
adc
mov
lods
das
jno
mov
dec
ret
inc
aas
insb
push
lcall
leave
add
pop
test
push
add
cmp
mov
lret
repz
mov
mov
addr16
push
dec
jnp
shrl
enter
dec
lock
imul
xchg
repnz
mov
and
mov
xor
dec
or
sti
push
or
jb
cwtl
mov
iret
ds
jno
or
ljmp
and
mov
inc
cld
lods
jecxz
xchg
and
or
xlat
sbb
mov
push
adc
jl
loop
pop
pop
adc
or
insb
pop
arpl
lods
insl
push
psrld
push
xchg
inc
stc
les
or
and
testl
pop
data16
mov
dec
jmp
or
js
mov
test
out
daa
fmul
flds
testl
mov
ret
lods
pushf
test
lea
push
push
scas
test
lret
add
popf
mov
hlt
xor
roll
pop
add
loop
mov
int3
mov
push
cmp
repz
out
sbb
out
mov
push
dec
push
rcr
or
push
fstpl
or
pop
and
adc
pop
mov
out
das
and
pop
sbb
adc
into
mov
rcrl
repz
lret
jno
rclb
jae
sub
in
fcmovbe
sahf
xchg
cmp
pop
ljmp
das
dec
pop
mov
lahf
in
mov
popf
mov
mov
lea
call
scas
mov
mov
mov
add
mov
sub
pop
lods
cmp
outsb
jecxz
in
in
adc
js
xor
insl
cltd
sbb
jo
aad
hlt
dec
cld
mov
xor
imul
jmp
jno
sbb
shll
jge
push
cltd
dec
xchg
xor
sub
sbbb
ljmp
ret
out
rcll
sbb
mov
cld
mov
subb
lea
pop
adc
sub
loope
hlt
outsb
lret
inc
enter
fsubrp
imul
and
and
lock
nop
in
sub
test
xor
mov
das
imul
sub
test
into
add
pop
out
jns
mov
dec
mov
in
iret
into
pop
mov
cmc
sub
jl
jo
or
fwait
idivb
test
out
dec
jns
sahf
push
mov
int
lods
mov
lea
xor
mov
add
ds
jne
push
add
dec
dec
cmpsl
idivl
stos
pop
add
adc
andl
push
xchg
lock
xchg
int3
xor
pop
push
inc
out
lahf
hlt
push
pop
scas
jl
jno
sub
gs
mov
icebp
xor
sti
adc
or
cwtl
lret
mov
mov
loop
adc
pop
push
cmp
lea
push
aad
add
testl
fldl2t
xchg
icebp
push
mov
jns
adc
in
and
jp
xlat
ljmp
push
movsl
lcall
aam
mov
jl
sbb
loope
push
adc
daa
and
cmp
and
fsub
in
lcall
jmp
imul
pop
es
sub
call
adc
rcr
and
mov
push
insl
adc
iret
clc
mov
out
jb
mov
xchg
cmp
xorl
int
and
jle
mov
loop
in
inc
jne
jge
xor
stos
and
cltd
cli
stos
push
sbb
dec
mov
push
fs
jp
jb
jae
and
dec
fcom
dec
mov
mov
lea
xchg
fwait
cmp
pop
rclb
bound
jmp
cmp
pop
scas
arpl
xor
inc
or
lds
fwait
or
imul
pop
mov
add
adc
xor
movsl
xchg
in
adc
sub
pop
fs
mov
push
arpl
scas
aad
stos
lods
mov
fcomip
jno
push
mov
testb
mov
push
addb
outsb
negl
pop
add
or
fcmovne
push
sbb
cmp
mov
nop
out
scas
inc
mov
psrlw
lcall
jno
loopne
or
into
mull
lahf
dec
xorb
jge
cmpl
lods
fbstp
loop
sbb
adc
add
push
dec
test
cmp
repnz
or
mov
sub
adc
sub
lods
fwait
call
sbb
inc
sub
inc
xor
test
lods
jno
ret
testl
sarl
shrl
xor
in
cmpsl
or
test
cmp
cld
xchg
adc
scas
mov
adc
and
les
sub
pop
add
outsl
xor
gs
mov
mov
inc
nop
cmp
sub
aam
rcl
loopne
xor
cmp
leave
iret
jns
xchg
mov
pop
inc
add
xchg
jmp
add
test
push
loop
mov
push
repnz
fstpl
mov
mov
inc
clc
pop
pop
pop
and
cmpsl
je
fwait
in
sub
jo
cmc
movsb
or
sbb
cmpsl
jp
dec
xchg
ljmp
push
xor
sbb
cli
cld
xor
cmp
shl
fisubl
imul
sbb
mov
addl
xor
push
iret
add
jle
mov
cwtl
js
xchg
push
fbstp
addr16
lock
jbe
sbb
lds
shll
push
adc
lret
mov
test
cmp
jae
call
inc
nop
mov
adc
xlat
aad
xchg
ret
xor
stc
push
and
xchg
inc
sub
ss
ljmp
adc
mov
in
xor
test
scas
addr16
jecxz
mov
inc
mov
jns
cmpl
xchg
fstpt
cmp
dec
jg
jne
inc
dec
cltd
outsl
clc
mov
push
xchg
aad
jae
jnp
or
cs
xor
into
cmp
ljmp
inc
cld
push
ja
push
jbe
sbb
xchg
or
cmp
fcmovnb
cmc
pminsw
aas
jne
sbb
xor
xchg
cmpsb
add
das
sbb
movsb
jmp
pop
sub
dec
aaa
call
jl
jae
add
arpl
movsb
push
dec
clc
jbe
dec
jno
outsb
mov
mov
into
sub
dec
out
pop
mov
adc
xor
mov
xchg
ds
xchg
jnp
fs
jl
leave
push
dec
popf
cld
mov
mov
pop
inc
rclb
ret
or
mov
mov
out
test
and
cld
dec
je
dec
aad
stos
lods
imulb
push
push
mov
out
xchg
adc
mov
pop
fldt
shlb
test
add
push
mov
test
pop
sbb
sub
cmp
scas
mov
or
xor
mov
jno
scas
std
xchg
test
mov
pop
test
mov
adc
inc
in
divb
dec
xor
das
ret
out
cmp
rolb
mov
push
adc
mov
add
leave
mulb
lea
movsb
cmpsb
and
jbe
mov
stos
lcall
xchg
mov
xchg
clc
ret
aas
sbb
adcl
pop
xor
movsb
in
xchg
aam
bound
pop
lret
hlt
inc
cmp
fiaddl
cwtl
mov
jecxz
add
adc
xchg
and
popa
mov
mov
cld
andl
lods
insb
orl
or
movsb
lcall
adc
jle
adc
cmpsb
rclb
gs
fcmovu
mov
mov
push
cmpl
mov
imul
inc
sbb
mov
lods
scas
mov
std
adc
mov
cmp
fmulp
sbb
mov
pop
pop
mov
jae
push
mov
fwait
sub
lcall
cmp
xor
mov
add
pop
mov
lret
pop
pop
xchg
jns
sbb
jbe
lret
sbb
or
add
xor
in
outsb
or
cmp
pop
clc
data16
fcomp
cmp
jb
mov
ja
fwait
out
aaa
push
push
movsl
sub
dec
test
push
dec
aaa
frstor
lret
adc
dec
test
test
lahf
jbe
cmp
sti
jno
add
fisubl
clc
xor
xchg
or
call
es
or
fsubrp
repz
mov
imul
ja
iret
or
inc
jge
pop
jbe
or
mov
test
insl
mov
aas
dec
mov
inc
jne
push
push
jmp
xchg
popa
div
xchg
dec
lods
shll
xor
add
sarl
stos
outsb
out
into
mov
out
push
pop
in
xchg
xor
cmpsl
test
jp
inc
sbb
fwait
je
test
mov
adc
outsl
aas
bound
lret
sbb
or
pop
movsb
ss
push
mov
or
sbb
imul
xchg
and
pop
mov
xchg
push
cmp
sbb
jae
or
popf
dec
daa
add
mov
andb
insl
sahf
xor
fwait
mov
jbe
sub
jno
sbb
add
shrw
adc
xor
adc
add
cmpsb
mov
call
cltd
sub
xlat
in
push
pushl
imul
out
lcall
mov
scas
lahf
pop
call
mov
xor
lods
insl
cwtl
push
loop
mov
push
insl
adc
mov
sub
or
shl
sbb
mov
add
ljmp
push
mov
cmp
adc
popa
sbb
jp
mov
mov
ficoml
sbb
push
mov
sub
dec
std
mov
mov
or
xchg
dec
pop
pop
or
rorb
push
sub
add
add
shl
mov
cs
mov
push
adc
and
je
sub
mov
xor
adcb
xor
sbb
ficompl
cmp
in
loopne
sahf
xor
xchg
adc
imul
push
mov
fdivl
cli
test
cmp
fildll
sti
outsl
and
aas
sub
jmp
aad
shrl
mov
sahf
or
in
dec
pusha
aaa
or
aam
mov
xchg
mov
mov
jmp
push
push
sbb
lcall
jb
xlat
jmp
sub
dec
add
adc
stos
xchg
xor
sbb
insb
inc
lcall
inc
es
mov
push
inc
test
xchg
incb
pop
pop
mov
pop
cmp
and
lret
fs
test
clc
pop
fs
bnd
push
pop
add
jecxz
cli
or
lods
xorl
push
xchg
jb
ds
xlat
push
mov
cwtl
or
mov
pop
sahf
mov
ljmp
xor
dec
out
lock
mov
push
mov
adc
leave
push
push
into
pushf
sbb
push
adc
mov
inc
daa
lods
and
dec
scas
ret
cvtps2pi
lret
rorb
xchg
lods
push
insb
mov
jne
insb
adc
aam
dec
add
test
sbb
jecxz
adc
dec
mov
test
mov
daa
dec
pop
inc
cmp
mov
push
jmp
sbb
fs
addr16
daa
and
jecxz
fs
jno
int3
mov
aam
sbb
rorb
adc
sub
xchg
scas
shlb
mov
imulb
test
fcoms
cmp
mov
adc
in
and
stc
iret
jbe
sub
nop
jns
fsubrl
stos
int
lea
pop
mov
xchg
push
adcb
inc
into
xchg
or
inc
add
sahf
pop
mov
sbb
push
shl
dec
lret
mov
mov
jmp
sbb
push
add
jecxz
push
mov
inc
lods
test
sahf
cmc
sbb
and
xorb
int
sarb
ja
mov
lods
mov
repnz
pop
cmp
ret
adc
adc
lret
sub
sub
pop
dec
pop
push
jl
xor
fmul
aam
cli
sbb
pop
test
leave
aas
je
adc
push
int3
adc
lret
int3
adc
xchg
mov
sbb
push
mov
hlt
ret
push
dec
ror
aam
xchg
lock
adc
push
jo
test
dec
or
fidivs
hlt
sub
sbb
mov
jge
push
es
pusha
mov
pop
mov
inc
je
inc
jmp
or
cmp
loopne
xchg
movsl
sub
scas
stos
mov
cltd
pop
lret
jns
xchg
and
sarb
iret
repz
or
adc
addr16
pop
jge
stos
cmp
out
insl
adc
xchg
xor
out
cmp
push
mov
mov
cld
jge
xchg
or
pop
je
jno
lock
dec
lcall
lock
jle
push
mov
scas
inc
xorl
lods
cltd
in
movsb
mov
jno
fcompl
dec
dec
xchg
sub
sub
and
xchg
dec
adc
sbb
sarl
mov
loopne
pushf
mov
dec
pop
in
fistpl
sbb
or
dec
aaa
mov
mov
fwait
dec
stc
push
mov
xchg
cmp
movsl
dec
mov
pop
lods
call
scas
inc
fisttps
sahf
pop
int3
popa
movsl
outsl
push
mov
inc
adc
adc
mov
lret
stc
sub
cmp
and
cmp
popf
lea
add
sti
mov
push
sti
push
lcall
or
bound
aaa
push
in
mov
fldl
test
and
sub
lock
inc
lret
xor
mov
mov
ja
arpl
adc
lahf
jae
cmc
js
mov
aad
xchg
stos
push
push
ret
xchg
mov
mov
out
sldt
pop
fdivrl
adc
arpl
push
dec
pop
out
adc
insl
sbb
into
jge
imul
add
jne
lret
iret
mov
push
ja
je
fwait
popf
sahf
xor
cld
adc
sbb
mov
movsl
js
aam
adc
push
mov
cltd
fdivl
cmp
adc
aam
or
rolb
xor
shll
inc
rclb
pop
mov
xor
mov
and
cmp
std
pop
int
in
outsl
out
aaa
cmp
inc
dec
fnstenv
cli
popa
push
push
fsts
fidivrl
adc
rolb
push
call
sub
in
repnz
adc
scas
clc
cmp
jb
add
sub
fidivrl
or
mov
sbb
stos
mov
cs
into
push
push
mov
cmpsl
sbb
nop
cwtl
mov
mov
sbb
bound
imul
push
jp
rcrb
jb
cs
fwait
push
and
cltd
in
and
dec
jne
shrb
push
int
jge
mov
div
aas
shlb
mov
cmpb
mov
cwtl
and
inc
sbb
fwait
inc
cwtl
ret
cmp
add
jno
mov
inc
ds
cld
divb
adc
ret
mov
popf
loopne
push
insb
dec
xor
jns
into
xchg
ljmp
and
mov
jle
jge
and
mov
push
sub
out
fbld
push
sti
mov
pop
sub
out
cmp
loopne
sbb
and
into
popf
aam
addr16
clc
or
xor
inc
mov
enter
call
mov
mov
or
and
cmpsb
cltd
sahf
dec
mov
push
dec
movl
pop
std
loop
rcll
int
adcl
stc
cs
or
or
fiaddl
push
lock
add
gs
xchg
test
sbb
xor
dec
cmovnp
fmulp
aas
sbb
mov
je
pop
in
xchg
jns
sbb
sub
push
push
push
lods
pop
sahf
fbld
sub
mov
shll
fs
xor
aad
popa
jg
in
nop
xor
sub
call
popa
gs
jb
jns
sbb
mov
xor
pop
iret
leave
dec
stc
cwtl
pop
jno
jb
push
pop
loope
or
mov
cmp
lds
mov
inc
and
fcmovu
fldl
out
sub
push
das
sbb
push
lods
and
imul
clgi
loope
cmc
test
pop
xchg
pop
jnp
xchg
outsb
push
lret
fldt
adc
pop
cltd
sub
push
test
mov
xchg
out
push
mov
inc
outsb
xchg
cli
mov
sarl
xor
mov
vprotq
xchg
test
cli
jecxz
lea
clc
cltd
icebp
out
xchg
mov
sub
aam
roll
sub
and
jno
hlt
or
addr16
cmpsb
cmp
insl
dec
push
gs
pop
xor
push
jecxz
xor
dec
repz
cli
cmp
or
shrb
inc
out
jae
clc
mov
adc
fisttpl
mov
std
mov
jb
mov
fstl
pop
mov
mov
fwait
mov
dec
pop
movaps
sbb
pop
pop
arpl
lock
cmp
add
fadds
xor
push
mov
fildll
xchg
jmp
xchg
nop
inc
inc
out
test
rcll
inc
call
dec
and
pop
xor
mov
jns
add
fcmovnbe
test
ss
jo
divl
mov
pop
movl
push
lcall
pop
lret
jae
scas
adc
in
sbb
mov
or
sub
ss
fsubs
shrl
sub
in
or
pmaxub
push
out
hlt
mov
outsb
lods
or
das
inc
notl
ret
and
gs
xor
jle
xor
sub
dec
jl
subl
aaa
adc
push
or
enter
es
je
out
shl
mov
push
sbb
mov
jne
mov
xchg
cmp
inc
mov
sahf
cs
adc
rolb
ss
popf
js
cld
jmp
and
orl
out
push
jno
aad
push
mov
pop
dec
xchg
ss
int
idivl
jmp
inc
or
into
fidivs
jge
in
scas
loope
xchg
xor
cmp
mov
js
adc
iret
sub
and
aam
or
pop
ficoml
xchg
insb
mov
jmp
adc
fldt
sbb
out
sbb
rorl
cmp
mov
sub
adc
add
xor
jge
xchg
lret
repnz
and
mov
addr16
into
das
sbb
mov
or
loop
cmc
dec
jp
rorl
fistps
movsb
stos
push
adc
movsl
fdivl
pop
mov
aam
outsl
sub
and
mov
cmp
sub
int3
and
cltd
insl
fs
int3
imul
cmp
das
xchg
gs
int3
nop
add
aas
iret
clc
adc
movsb
loope
xchg
out
push
xor
push
andb
add
in
ret
nop
adc
or
out
in
ret
or
call
fiadds
and
scas
and
xchg
add
in
hlt
mov
out
and
stc
negl
hlt
push
arpl
lea
in
into
mov
adc
outsl
sahf
mov
xor
pop
incl
jo
pop
mov
mov
cmp
popf
pop
mov
ds
lret
shlb
testl
push
in
arpl
cmp
std
into
mov
stos
dec
cld
jl
lock
movsl
sbb
inc
into
sahf
adc
adc
in
fdivl
into
fisubrs
adc
addr16
enter
push
pop
loope
test
ja
js
pushf
cmc
je
mov
ss
ret
aas
add
push
push
push
roll
sahf
addl
out
fcom
mov
ds
mov
jge
sbb
push
dec
test
mov
loop
xor
mov
mov
not
or
loopne
jge
popa
fs
cld
sub
cwtl
or
into
imul
dec
int
xor
andb
fidivs
cmpsb
cmp
stos
sbb
jnp
push
outsl
or
pop
cld
add
pop
push
notb
pop
scas
jecxz
mov
es
pop
cmpsl
jne
test
or
fcomps
clc
sbb
ja
jle
dec
push
adc
mov
fwait
push
mov
insl
std
repz
sub
and
repz
xchg
subl
and
ds
sbb
xor
pushf
lret
mov
xchg
out
cld
sub
pushf
subl
add
adc
push
addr16
fadd
lcall
or
mov
push
push
in
pop
insb
sahf
mov
jae
adc
popf
in
loopne
add
out
movsb
dec
fdivs
mulb
mov
sti
sbb
push
inc
mov
and
push
pushf
fmull
push
mov
mov
dec
es
xor
stos
jp
aas
mov
xchg
cmp
cmp
gs
fwait
push
fdivl
mov
and
mov
mov
sbbl
shlb
sbb
pop
sbb
xor
loop
xor
icebp
lret
popa
add
test
loopne
sub
add
mov
mov
arpl
pop
or
pop
xchg
sub
lock
cmp
cmp
cmp
adc
push
roll
xchg
loop
lret
sahf
loope
mov
fimull
clc
dec
data16
loopne
sbb
insb
cwtl
push
xchg
xchg
fistps
xchg
add
pop
mov
out
push
mov
rorl
or
mov
cmpsb
pop
xor
insb
imull
dec
cmc
xchg
shrl
or
arpl
push
shll
mov
jb
adc
js
std
dec
mov
xor
dec
sub
push
sub
out
sbb
fnsave
adc
dec
mov
pop
xlat
xchg
sbb
orb
paddq
es
jp
cld
orl
call
enter
jno
out
out
aad
orl
dec
dec
lret
cmc
sub
mov
cmpsl
pop
fmuls
adc
jb
sub
xlat
pop
adc
inc
out
aas
and
mov
js
jnp
mov
jecxz
pop
sub
mov
dec
jp
in
xlat
and
or
ds
mov
iret
pushf
mov
lods
je
and
mov
aas
pop
shld
mov
and
mov
mov
cmp
stc
lret
xchg
imul
mov
pop
lods
faddl
jne
fsubrl
and
push
cmp
lods
test
and
into
scas
out
inc
decb
repz
lods
or
mov
xor
push
xchg
insl
sub
and
inc
inc
mov
outsb
adc
jp
repz
sbb
fstps
daa
clc
pop
test
imul
repnz
ret
sti
popf
mov
lcall
xchg
jns
test
repz
jne
mov
cmp
inc
das
popl
sub
shlb
clc
add
jge
das
subb
xchg
das
or
fwait
xlat
cwtl
add
jns
icebp
faddl
ja
jnp
leave
inc
push
das
sahf
mov
jo
ljmp
jle
xchg
mov
shl
xchg
mov
test
pop
shrb
lock
cli
shr
leave
mov
add
mov
das
inc
inc
sbb
xor
stos
xchg
push
std
orl
incb
jb
aam
xchg
ja
cmpsb
push
sbb
xor
pop
inc
roll
inc
xchg
add
adc
xchg
cltd
and
inc
bswap
xchg
fisubl
loop
cmp
dec
dec
pop
jb
jb
aaa
fwait
gs
add
pop
pushf
scas
fstl
je
inc
int3
cli
mov
inc
std
xchg
mov
jne
pop
mov
sti
inc
jnp
test
mov
add
in
lods
add
dec
or
in
lods
aaa
sub
jnp
jp
data16
lret
dec
push
fistps
or
fcmovnbe
adc
inc
js
mov
orb
test
jmp
add
mov
sub
aaa
into
fildl
aas
and
mov
adc
inc
gs
mov
lea
adc
push
push
xchg
xor
and
ds
push
bound
jle
add
outsb
aad
adc
lea
daa
loop
push
xor
pusha
int3
and
test
sub
push
push
fdivrp
xor
jge
xchg
adc
jae
xor
lret
xchg
mov
leave
iretw
mov
lret
std
sbb
xchg
es
jmp
adc
xchg
jecxz
inc
lock
out
mov
xor
adc
mov
push
movsl
mov
mov
pop
mov
insb
out
xchg
jnp
mov
push
push
push
jge
xchg
push
mov
xchg
mov
popf
sbb
popa
aas
jecxz
fwait
test
mov
and
and
orb
mov
inc
popa
stos
stc
or
scas
pop
xor
jmp
add
mov
es
inc
lods
lods
xchg
xlat
fstpl
xchg
cltd
jmp
and
pop
ja
insl
rcrl
sub
and
jg
stos
inc
jb
in
add
outsl
dec
iret
cld
sbb
cmp
movb
and
mov
push
outsb
and
dec
js
and
sahf
sbb
enter
mov
push
push
insb
out
ficompl
xor
mov
sbb
adc
movsl
mov
jecxz
mov
rcrb
xor
cmp
sub
add
mov
push
jg
pop
add
dec
lods
cmpsb
repz
cmp
addr16
push
into
test
lods
popf
nop
cli
arpl
xchg
ja
mov
sub
stos
insl
ja
out
mov
aad
mov
fldcw
pop
rorb
jae
mov
push
dec
out
or
jb
inc
ds
xor
xchg
repnz
and
addr16
fists
lahf
and
lahf
addb
mov
data16
daa
fcoml
cmp
roll
and
mov
jp
xchg
cli
aaa
xchg
movsb
cmpsl
push
insb
pop
loopne
mov
lahf
jp
imul
insb
mov
add
pop
iret
mov
push
pop
cmc
call
lcall
insb
test
push
inc
out
in
inc
aas
test
and
pusha
sbb
imul
mov
adc
cwtl
cmp
push
push
sbb
or
jae
add
cwtl
gs
std
ss
push
inc
jp
loopne
mov
add
test
or
sbb
out
mov
xchg
ficomps
dec
je
mov
aaa
xchg
jne
nop
adc
test
nop
cs
add
push
lret
xchg
gs
mov
mov
pop
add
or
es
push
fldl
jp
imul
pushf
iret
jne
pop
in
sub
dec
addl
jp
cmp
adc
xor
or
and
sahf
test
push
hlt
xor
inc
subb
and
xchg
cs
stos
stos
data16
jmp
sub
jo
movsb
idivb
pop
in
in
sbb
mov
test
ret
xor
mov
and
int
das
test
adc
out
mov
movsl
cmp
in
pushf
repnz
or
das
fldt
int3
mov
pop
inc
pop
adc
mov
xchg
push
sbbl
stos
test
arpl
jmp
fdivrs
push
mov
imul
fidivrs
sub
rorl
push
push
inc
jns
in
xor
mov
xor
push
xchg
mov
push
fucomp
rorl
leave
pop
ret
es
int3
push
sbb
and
shrb
push
xchg
xor
mov
ja
add
push
int3
xchg
lea
stos
mov
dec
test
add
jnp
movsb
inc
les
les
nop
stc
rcll
std
loop
xchg
in
mov
out
data16
and
xor
arpl
pop
pop
ficoms
inc
jnp
cmp
scas
fstpl
fcmovbe
jo
dec
push
pop
shlb
push
mov
push
mov
pop
dec
adc
loop
dec
xchg
mov
jns
cwtl
xor
dec
adc
mov
inc
pop
aaa
jp
mov
fldenv
movsl
sub
jnp
rorb
mov
inc
inc
jecxz
rcl
dec
cmpsb
add
leave
pop
xchg
mov
xlat
inc
mov
push
mov
push
mov
in
nop
push
mov
xchg
clc
push
sbb
iret
pop
daa
test
adc
push
mov
jge
xor
ss
idivb
aas
pop
xchg
inc
add
or
cmp
inc
insb
mov
mov
lcall
jnp
xchg
jle
lock
push
or
mov
subb
in
adc
dec
dec
mov
sub
mov
or
sub
test
sub
mov
mov
jb
enter
cwtl
xor
shll
negl
arpl
mov
sub
pushl
mov
push
call
lds
int
and
inc
bnd
inc
in
lret
mov
jne
cmp
aas
jns
and
cmp
jg
jl
pop
xchg
adc
or
pop
push
fiadds
sbb
aam
scas
push
sbb
adc
fdivl
btr
add
jg
dec
and
and
aaa
push
lcall
mov
cmpsb
imul
aad
jle
cwtl
mov
cmpsb
adc
cmp
add
in
sbb
and
les
adc
or
bnd
sbb
jnp
mov
ljmp
dec
ret
arpl
fidivrs
mov
sarl
mov
das
push
mov
loop
jecxz
inc
shlb
insb
aad
cmpsb
pop
js
xor
addr16
movb
aaa
hlt
sub
mov
cmp
je
popf
test
inc
pop
or
fcmove
push
adc
lcall
cmp
add
popf
fidivl
mov
dec
xchg
cmc
testb
adc
cltd
push
lods
pop
add
dec
jle
adc
cmpsl
bound
jge
or
adc
xor
out
and
and
popa
pushf
pop
iret
add
pop
mov
insb
fisubrs
insl
jnp
jne
push
call
push
sub
adcb
fs
dec
jle
sbb
fwait
aaa
push
and
les
rolb
fmuls
fs
mov
cmc
mov
cmpsb
lods
adc
ljmp
lods
sub
frstor
mov
add
stos
adc
mov
adc
mov
addr16
push
pop
push
sbb
addr16
gs
push
or
dec
repz
mov
xchg
or
movsb
inc
in
loope
mov
negl
xor
xchg
fwait
out
je
pop
xor
adc
mov
cli
pop
lds
push
push
std
mov
mov
mov
inc
roll
cmp
sub
out
imul
add
scas
mov
and
mov
mov
push
cmp
aad
pop
jp
mov
dec
insb
xchg
inc
loop
add
int
jmp
xor
je
push
outsl
leave
clc
adc
sub
mov
addr16
pushf
pop
pop
cmp
mov
jmp
pop
sbb
les
mov
popf
ret
loopne
insb
jb
les
test
inc
mov
dec
pop
mov
lret
aad
or
clc
lahf
ljmp
in
lods
mov
xor
dec
movsb
scas
imul
sub
xchg
insl
aaa
addl
jl
pop
xchg
test
jnp
rcrl
jmp
mov
adc
pop
mov
out
add
clc
jle
add
rorb
insl
insl
in
inc
lock
jp
hlt
jl
dec
flds
cltd
popf
out
adc
pop
cmp
out
or
add
ljmp
push
push
inc
stos
out
jo
mov
push
negb
pop
mov
mov
mov
dec
adc
sbb
lahf
ds
xor
mov
pop
into
lcall
pop
inc
and
dec
stc
mov
lret
mov
jecxz
mov
stc
jle
inc
add
mov
mov
jo
dec
push
push
lret
sub
xchg
lcall
pop
aad
dec
mov
rep
push
cmp
cmp
mov
bound
jl
mov
pop
mov
inc
out
xlat
dec
mov
call
dec
int3
mov
in
cmpsl
sbb
or
add
orl
cltd
pushf
cld
xlat
mov
insl
lea
mov
inc
enter
sbb
data16
xchg
in
mov
and
fnstsw
mov
mov
jmp
rcll
sbb
repz
shlb
xorb
bound
mov
and
or
cmpsb
pop
dec
xchg
rorl
jbe
mov
rorb
mov
loopne
fs
jae
push
jo
cmpsb
shlb
cmp
xor
inc
or
in
xchg
and
mov
lret
test
adc
inc
sbb
inc
iret
in
fcomps
aas
out
aad
outsb
aad
adc
int
pusha
mov
fwait
imull
test
jl
jle
out
add
mov
jle
lcall
xchg
cwtl
repz
push
jae
aam
adc
sub
sub
mov
sahf
in
std
popa
or
sbb
cld
lea
dec
adc
pop
dec
xchg
dec
push
lds
mov
mov
xchg
adc
cmc
inc
mov
push
scas
sbb
test
add
in
test
aad
xor
mov
sub
fsubrs
mov
and
cmpsb
scas
dec
movsl
fbld
fcompl
rolb
jl
icebp
sbb
mov
mov
insl
pop
jns
push
loope
movsb
sub
cli
lret
dec
or
adc
leave
rorb
sub
mov
dec
data16
cltd
sub
mov
in
xchg
in
movsl
and
push
aaa
sub
out
pop
in
add
adc
mov
rorl
iret
sbb
mov
sub
or
testb
pop
ret
xchg
insb
aam
subb
and
aas
data16
stos
mov
test
mov
call
mov
mov
xorb
fsts
out
repnz
lods
inc
push
data16
rcr
jne
cmp
test
es
pop
lds
test
rorb
pop
imul
add
mov
mov
adc
sub
jle
dec
push
fldlg2
mov
in
clc
cli
aas
sbb
xchg
sub
call
pop
mov
dec
out
cmp
sub
adc
inc
mov
cltd
aas
loopne
popa
subl
daa
add
sarl
fisubl
and
xor
and
scas
sbb
sarl
or
pop
repnz
sbb
jle
ja
xchg
vmovmskps
adc
jbe
sbb
sub
addr16
out
fwait
pop
jg
dec
test
add
mov
xchg
imul
inc
pop
and
mov
xchg
adc
aam
sbb
mov
shll
ret
or
popa
ss
and
mov
stos
mov
mov
repnz
mov
or
enter
dec
in
hlt
push
sti
dec
dec
inc
adc
adc
adc
js
les
or
mov
mov
jp
and
jae
cwtl
mov
dec
clc
or
or
jge
add
push
add
cld
loope
jbe
jbe
testb
into
out
out
fwait
ja
gs
fidivrs
push
adc
ret
insb
push
shll
jle
dec
pop
fcomi
imul
addr16
xchg
popa
mov
pop
push
addr16
mov
and
xorb
loop
aas
into
test
and
jns
cmpsl
pop
pop
les
push
sbb
pushf
sbb
mov
sbb
sar
mov
xchg
stos
scas
pop
adc
mov
mov
movb
ret
adc
cltd
popa
lret
and
jge
rcrl
cwtl
fiadds
cmp
jo
test
pop
cltd
int
cs
xchg
cwtl
push
bound
push
scas
stos
xchg
push
mov
cmpl
add
mov
imul
mov
push
dec
pop
movl
daa
je
pop
cld
push
adc
int
mov
insl
mov
je
cmp
xchg
sub
mov
es
jg
gs
mov
and
cmp
mov
aaa
xchg
adc
inc
pop
daa
or
jb
lods
xchg
dec
pop
push
mov
scas
in
icebp
xchg
cld
push
cs
cmp
jne
xor
lcall
inc
add
mov
dec
push
pop
inc
fisttpl
sbb
fnstsw
add
pop
inc
stc
imul
sbb
or
and
xchg
pop
xchg
dec
inc
inc
ljmp
pop
test
repnz
shl
aam
xchg
xor
mov
mov
push
jo
out
cmp
ficomps
ljmp
cmp
fmul
into
mov
xor
push
cld
sub
daa
fisubl
mov
daa
dec
xchg
add
int3
mov
mov
ds
push
in
cwtl
dec
pushf
nop
ljmp
fists
mov
xchg
ds
xor
pop
jb
jg
shlb
cmpsb
mov
adc
cmp
sbb
pop
aas
push
movsb
aam
xchg
out
cmp
xlat
mov
mov
dec
std
ds
jno
mov
push
jg
mov
pop
sub
out
sbb
negl
push
out
pop
int3
jp
cltd
push
fcom
cmp
out
cmpsl
sbb
inc
mov
popf
aaa
mov
adc
icebp
inc
push
mov
or
and
push
aas
inc
popa
add
pusha
push
jno
data16
adc
ficomps
adc
mov
fnstsw
jmp
and
fildl
mov
imul
enter
or
and
mov
test
xor
or
ret
scas
sub
cwtl
ret
push
inc
rorl
enter
lret
mov
addr16
pop
mov
movsb
add
mov
hlt
pop
loop
jge
inc
cwtl
pop
mov
sub
cld
sbb
pushf
push
mov
add
xor
cwtl
sub
js
movd
call
aam
mov
mov
inc
inc
sub
pushf
adc
dec
ljmp
leave
xchg
jne
or
mov
and
sbb
ljmp
fst
lock
add
push
in
fwait
rcrb
bound
jbe
fs
jae
ljmp
gs
aad
xchg
push
sbb
push
cmp
cmp
push
adc
jae
and
cmpsl
notl
pop
mov
lcall
cmp
movsl
mov
pop
jmp
mov
fldt
jae
dec
cli
adc
xchg
add
fcomps
pop
cmp
or
into
push
cmpsb
loop
lods
sub
inc
push
call
repnz
shlb
xchg
cmp
sub
jno
jl
in
sahf
dec
and
mov
add
popf
sub
pop
mov
and
push
hlt
das
dec
inc
frstor
aas
cmpsb
cmp
xchg
test
loope
aam
fwait
xorl
mov
push
dec
scas
push
dec
shrb
in
daa
pop
inc
dec
xchg
mov
imul
mov
inc
pop
in
mov
and
sub
mov
cmp
stc
out
and
outsl
imul
gs
jge
dec
or
or
mov
or
shl
xchg
movsb
ret
in
push
shlb
sub
inc
push
adcb
xor
lock
add
repz
add
jb
cmpsb
pop
pop
mov
jo
or
sub
loope
dec
out
pop
enter
stc
gs
mov
movsl
jno
in
ret
mov
dec
add
adc
xlat
into
into
mov
xlat
xlat
scas
sbb
out
or
loop
lcall
call
adc
in
mov
lods
add
cmp
rcrl
cmpsb
xchg
out
mov
movsl
jecxz
push
cltd
jnp
cmc
mov
xor
fldlg2
frstor
jno
cmpsb
out
mov
shll
test
int
dec
mov
lea
test
xor
or
xor
testl
xchg
sub
mov
push
or
fstps
mov
sub
adc
pop
fistpll
aas
int
lahf
push
pop
sub
add
fldl2e
sub
lret
add
sbb
aad
cmpsb
xor
add
icebp
push
jmp
adc
clc
sbb
push
xor
sbb
jns
test
xchg
or
repnz
lret
push
int
movsw
enter
cwtl
sub
cmp
out
lds
inc
mov
mov
test
fidivl
decb
mov
inc
cmp
add
mov
cmpsb
mov
dec
push
dec
pmaxsw
add
stos
jmp
out
test
adc
mov
ljmp
ljmp
add
fistps
add
movsb
sbb
jns
xor
mov
mov
lock
add
lahf
outsl
cmpb
clc
mov
push
or
insb
int3
daa
xchg
imul
scas
stc
mov
and
fdivr
pop
fadds
fdivl
test
int3
fcoml
addr16
xchg
insl
mov
clc
aad
dec
lea
repnz
addb
cs
sub
sbb
xchg
mov
dec
iret
lret
fs
push
pop
jb
mov
in
xlat
pop
push
push
aam
mov
fs
fwait
push
lret
mov
rcrb
lahf
cmp
pop
mov
sbb
hlt
cmp
test
int3
movsb
outsb
xchg
in
sbb
out
test
cmp
inc
jle
or
and
push
gs
incb
icebp
dec
shll
push
in
push
dec
mov
in
adc
lcall
adc
outsb
xchg
je
dec
jbe
mov
je
pmulhw
in
in
enter
fwait
jmp
cld
add
mov
repz
jl
push
xor
push
sub
sbb
dec
test
sbb
xlat
fisubrs
icebp
cmpl
out
fisubl
pop
xor
mov
pop
in
insb
jne
mov
add
into
ret
into
cmp
mov
cmp
mov
xor
mov
mov
adc
js
mov
or
mov
mov
inc
outsb
addb
sbb
das
adc
xchg
push
sub
cmp
lret
mov
xchg
and
fdivrs
jne
push
and
sbb
jmp
sub
push
sahf
jl
inc
mov
add
addb
and
mov
adc
xor
mov
sar
push
notl
or
mov
cmp
mov
loope
int3
ljmp
ljmp
inc
arpl
push
aaa
sub
xorb
pop
xor
pop
mov
rcrl
subl
xchg
les
add
mov
cmp
mov
jle
add
lcall
cmpsl
fsub
pusha
lds
mov
jge
repz
stc
jmp
cs
push
imul
xchg
pop
stos
pop
pop
mov
ds
pushf
and
mov
and
ds
je
pop
inc
cltd
in
xorb
aaa
cwtl
hlt
mov
mov
leave
xchg
push
lret
mov
mov
out
clc
stos
out
ljmp
shl
inc
or
inc
pop
ljmp
xchg
es
int3
mov
mov
push
dec
and
mov
cmp
push
scas
es
dec
lds
mov
enter
shl
dec
xchg
jo
fcoml
mov
mov
lret
mov
or
popa
cmp
sub
xor
push
mull
sub
mov
mov
or
cmp
xchg
subl
mov
xor
mov
shlb
scas
mov
sbb
adc
sub
sub
pop
cs
jg
or
data16
sbb
push
into
pop
jns
das
xor
pop
mov
out
lret
iret
and
and
fcmovnbe
xchg
cltd
ficoms
cmp
mov
adc
leave
daa
mov
and
push
jl
sub
jne
jnp
or
cmpsb
sub
scas
inc
jl
icebp
mov
sbb
dec
popf
imul
jo
pop
and
mov
notl
jge
call
shrl
jns
mov
mov
pop
outsl
pop
sbb
xchg
sarb
mov
mov
call
jae
mov
adc
loope
cmp
rcll
mov
pop
push
aaa
ret
outsb
shlb
bound
sbb
inc
and
xchg
push
outsb
mov
mov
sub
adcl
jno
jns
clc
pop
cmp
lret
cltd
adc
fildl
daa
shll
fsubrs
pop
lods
sbb
rcl
mov
mov
ja
pop
int3
flds
mov
nop
ret
mov
or
push
lock
mov
std
sti
push
mov
mov
sub
shrl
stos
xchg
call
pop
sti
flds
cmp
es
dec
adc
test
das
push
in
xor
dec
sub
repnz
jmp
repz
pop
repz
loopne
cmc
mov
out
cld
push
into
pop
pushf
add
jo
dec
test
jns
xchg
mov
add
fiadds
cmc
or
rorl
jge
repnz
loopne
ret
test
stc
dec
mov
mov
jl
stc
dec
dec
scas
rorl
xor
sbb
xchg
sahf
loop
inc
mov
mov
out
sbb
pop
cmp
fcmovnb
out
loop
pushl
fxch
push
dec
jg
jle
negb
icebp
loopne
ret
inc
mov
clc
std
shl
popf
mov
inc
imul
inc
inc
aam
cmc
adc
jne
add
movsl
jb
inc
jbe
and
pop
imul
fsubl
mov
jge
cmp
and
sahf
das
jmp
push
pop
fstpt
push
adc
fisttps
cmpsb
out
pop
les
ficomps
mov
jp
std
add
out
adc
ret
or
mov
jne
in
sahf
push
lods
dec
pop
mov
jne
cmp
mov
sar
aas
xor
cmp
test
sti
mov
into
in
cltd
jl
movsb
inc
xor
mov
test
in
dec
int
inc
add
stos
pop
adc
jns
cmp
dec
addr16
dec
ret
iret
jae
mov
add
and
lahf
jmp
inc
push
stos
xchg
nop
or
mov
sbb
arpl
mov
mov
and
dec
mov
inc
jle
adc
je
into
ljmp
mov
xchg
in
jbe
cld
or
mov
xor
imul
xchg
cltd
nop
std
icebp
test
adc
jno
push
mov
cmc
sbb
loop
shl
int
push
negl
adc
cmc
xor
or
jl
pop
xchg
cltd
add
jg
cmp
icebp
int3
sarl
sbb
in
cmp
xchg
pop
dec
mov
shl
lret
and
adc
sub
push
and
jecxz
cmp
push
pop
lods
mov
mov
test
clc
movsb
lret
adc
mov
cmp
push
out
xchg
mov
mov
sarl
mov
outsl
push
js
repnz
add
jecxz
mov
inc
lods
subb
mov
cmpsl
mov
xchg
test
in
in
push
jnp
pop
mov
arpl
mov
scas
in
dec
lods
scas
loop
lock
and
data16
inc
cmp
and
loop
inc
outsb
xchg
scas
orl
and
or
inc
pop
sbb
xchg
scas
fnstcw
and
test
fsts
ffree
mov
es
lret
inc
sub
orl
sub
lods
insb
lcall
xor
enter
sub
adc
stc
jnp
divb
shrl
inc
out
repnz
insl
push
dec
xorb
sbb
addl
push
aas
mov
sub
lock
in
orb
cmp
negb
jo
jmp
inc
or
jecxz
xor
xlat
and
pop
jl
lock
stc
dec
in
pushf
cmp
out
pop
stos
and
mov
mov
cmp
test
cs
iret
jecxz
hlt
adc
fisttpll
mov
jle
xchg
clc
mov
icebp
loope
in
cmp
fmull
icebp
xchg
push
je
cs
std
shr
xchg
mov
pop
dec
fcompl
pusha
jb
pop
and
cmc
fldcw
mov
outsl
popa
push
in
mov
push
sub
mov
fldcw
pop
iret
lods
or
add
sub
clc
and
in
ss
int3
jge
imul
xlat
add
pop
lahf
imul
outsb
mov
out
lea
pop
jmp
int
pop
xchg
add
push
aas
mov
shr
adc
lret
push
shrb
fs
or
aaa
or
mov
xorl
rcr
xchg
addl
xor
mov
sti
sub
out
dec
leave
vpsraw
mov
mov
cmp
adc
out
outsb
dec
xchg
adc
xchg
push
cmp
mov
imul
into
dec
push
test
loope
push
enter
xchg
and
dec
int
pop
int3
pop
jbe
in
mov
adc
int
xor
lea
pop
lea
loope
inc
fbld
pop
imul
into
inc
or
xor
mov
dec
out
icebp
test
pop
xchg
add
ljmp
in
xor
jl
and
popf
bound
divb
jge
or
inc
push
push
mov
inc
call
arpl
imul
loope
call
mov
dec
push
and
orb
ja
push
loop
daa
mov
scas
cmp
cmpsl
imul
cmp
pop
scas
xchg
push
aam
sbbb
scas
mov
js
push
call
sbbl
fildll
cli
pop
sbb
je
and
xor
int
mov
cmp
add
in
adc
aad
push
shlb
sub
pusha
stc
mov
or
lret
daa
inc
sub
lea
sbb
mov
rclb
cmc
and
jl
lds
add
xchg
or
mov
movsb
sub
xchg
test
mov
out
mov
in
lea
clc
inc
ja
mov
push
iret
fs
xor
xor
ljmp
lahf
mov
movsb
icebp
xchg
mov
jg
out
mov
dec
outsl
jecxz
push
vphaddudq
adc
cld
in
in
aad
xchg
in
pushw
mov
mov
sub
mov
negl
pushf
test
inc
or
add
imul
pop
fs
push
mov
cmc
rclb
push
lock
hlt
xorb
mov
add
frstor
hlt
cs
push
popf
jg
pop
push
sub
jbe
xor
imul
cmpsb
xchg
and
xchg
fldcw
mov
stc
popa
xchg
movsl
and
roll
repz
fucom
call
pop
mov
inc
imul
les
pop
xor
push
mov
mov
imul
sbb
jp
pop
xlat
lods
dec
xchg
es
inc
and
sahf
xchg
mov
mov
out
pop
test
nop
inc
idiv
jg
fadds
jno
enter
ja
mov
fmulp
adc
mov
pop
shrl
pop
cmc
lock
sbb
mov
ljmp
inc
sub
push
or
dec
js
jg
or
sub
cmpsl
cmp
es
sarl
and
sub
mov
inc
inc
sub
aad
cld
mov
mov
push
mov
push
arpl
je
je
and
inc
cmp
cmp
ret
test
les
or
ljmp
mov
comiss
js
clc
out
mov
iret
adc
inc
ret
push
cmp
rclb
leave
cld
andl
pop
fsubrp
inc
or
xchg
push
dec
inc
xchg
sub
in
inc
jbe
xchg
rcrl
mov
cmp
pop
xchg
jo
add
shll
adc
fisubrs
fs
xchg
mov
in
aad
pusha
jmp
test
dec
movsb
or
out
jp
push
jge
dec
daa
inc
sbb
fmul
sahf
fiaddl
sbb
loop
or
into
insb
enter
test
pop
icebp
data16
fnstsw
lods
pop
repnz
jo
in
push
sbb
mov
int
sub
hlt
mov
mov
push
xchg
xlat
sbb
dec
aam
pop
xor
aad
jge
sbb
sub
shl
rcr
jp
inc
dec
xchg
jb
mov
xlat
cli
add
in
sbb
movsb
sar
mov
in
shll
ss
call
mov
dec
imul
int
arpl
push
add
mov
insl
jmp
dec
jecxz
test
in
jp
orb
in
pop
outsl
aaa
mov
push
icebp
out
push
cli
add
inc
mov
int
inc
outsl
das
mov
out
imul
mov
cmpsl
xchg
xchg
scas
lock
adc
aaa
fisubrl
mov
orl
and
lcall
xlat
push
dec
sbb
test
pop
adc
notb
mov
pop
adc
cmp
fstps
pushf
sub
lds
ds
mov
pop
iret
xor
pop
push
pop
cld
or
frstor
or
iret
inc
outsl
stc
xchg
scas
and
adc
aas
sbb
xor
aaa
subb
xlat
arpl
jns
and
adc
pop
sub
jae
jge
mov
push
adc
mov
dec
sbb
and
pop
outsl
mov
test
push
icebp
jl
mov
mov
aaa
iret
cli
rcrl
jmp
push
cld
cmp
les
pusha
loop
test
xor
or
push
mov
stos
adcl
loopne
mov
mov
clc
push
je
pop
lret
mov
xor
dec
sub
adc
loope
roll
push
pop
out
and
dec
jl
lods
xchg
fcmovnb
push
arpl
jl
shll
pop
stos
xchg
loope
add
jne
iret
inc
sti
xabort
ficoms
movntps
sbb
jmp
cltd
and
xor
dec
roll
push
xchg
fwait
add
or
sbb
push
push
push
lret
rcrl
xor
fisubs
and
divb
mov
sub
popf
pop
xchg
adc
stc
cmc
jo
inc
mov
rorl
test
xorb
dec
dec
lret
movsl
or
xchg
jo
jnp
pushf
adc
dec
nop
xor
loope
div
cli
dec
lret
jnp
andl
enter
jo
pop
insl
xchg
jo
xlat
out
jecxz
mov
sub
push
pop
cmc
xor
mov
jnp
inc
jnp
add
add
in
sahf
ficomps
in
ret
inc
push
jo
adc
sar
insb
dec
ret
cmp
cmp
lahf
rcl
data16
nop
out
push
or
dec
cmp
fnstenv
lcall
dec
sahf
rcrl
cmp
ljmp
loop
mov
test
in
push
clc
sub
xchg
jb
sbb
ljmp
repnz
inc
cli
mov
mov
add
stos
add
aaa
fstp
mov
mov
clc
adc
bound
mov
cmpsb
mov
push
sahf
daa
lahf
mov
mov
jne
fcom
jecxz
or
fucom
sbb
iret
pop
shll
or
mov
sbb
mov
das
xor
dec
and
mov
les
pop
push
xchg
pop
fistpll
inc
out
call
dec
jmp
dec
in
insl
repz
ljmp
mov
nop
out
lret
mov
popa
scas
xchg
add
and
and
mov
scas
rcrb
mov
imul
cmp
into
pop
test
adc
lret
rclb
pop
call
ror
cmp
in
fisubrl
pusha
xor
or
mov
popa
test
pop
pop
adc
mov
pusha
push
gs
and
lret
jnp
xchg
dec
popf
mov
testl
mov
andb
ss
jae
negb
jno
test
daa
inc
xor
xchg
arpl
dec
rolb
outsb
fisttps
adc
cmp
inc
dec
dec
ret
cmp
iret
and
call
fnstsw
cltd
pop
mov
sahf
imul
mov
xchg
push
xchg
inc
out
stos
shll
mov
or
in
push
test
mov
cld
push
xor
jbe
scas
lahf
sbb
xchg
cmpsb
dec
mov
sbb
and
xlat
insl
push
jp
pop
push
inc
mov
fstpl
push
sub
imul
jl
push
push
dec
xor
sar
mov
test
cmc
ja
push
call
xchg
mov
add
xor
cmp
lcall
push
hlt
test
scas
mov
dec
jecxz
inc
or
add
or
test
mov
ds
lret
push
je
mov
or
test
pop
cli
dec
je
inc
cmc
mov
adc
loope
pop
into
push
or
addl
movsl
sti
les
arpl
les
lds
scas
lods
lcall
mov
sbb
xchg
pop
or
mov
repz
ss
std
cli
ja
test
addr16
push
pop
leave
inc
pop
lcall
cmp
sub
clc
dec
fwait
jge
ficoml
sub
stc
xchg
sbb
inc
into
or
in
dec
movsl
in
stos
test
clc
pop
ret
xor
adc
inc
pop
jg
ret
or
mov
cmp
hlt
push
xchg
shlb
mov
cs
mov
daa
pop
jno
aas
pop
xchg
outsb
icebp
fstpl
nop
inc
mov
add
cmp
rcl
mov
int3
hlt
dec
mov
flds
push
mov
adc
loopne
mov
idiv
pop
ret
jl
jge
jp
mov
jmp
pop
mov
mov
pop
icebp
cs
inc
sbb
dec
xchg
insb
call
adc
jnp
imul
test
add
arpl
inc
repz
mov
xchg
jae
dec
pop
adcl
xor
adc
mov
pop
test
cmp
push
pop
mov
mov
xor
mov
pop
in
mov
les
js
inc
cmp
aaa
rol
iret
jmp
pop
or
mov
and
lret
dec
cmc
push
xor
xlat
fs
add
shll
mov
in
cmp
and
enter
push
xor
mov
fisubs
testb
xor
out
xor
insb
xchg
cmpsl
add
mov
mov
sbb
xchg
fistps
fcmovnbe
or
int
mov
cmp
sar
cltd
mov
cwtl
cmp
pop
inc
sti
fadds
mov
arpl
mov
pop
jl
xchg
sub
add
js
mov
leave
jmp
xor
jmp
and
inc
in
sahf
mov
jle
lods
mov
push
movsb
push
popa
sbb
lret
test
cmp
repz
jle
int3
add
fildl
push
sub
jae
cmp
pop
ret
imul
inc
or
inc
fistpl
xchg
push
xor
sub
cli
pushf
mov
mov
shr
push
shrb
cmc
ret
and
fidivrs
and
xchg
stos
mov
fwait
repz
nop
les
jns
mov
sbb
sub
shl
sbb
es
mov
insl
push
pop
sub
popf
and
or
xchg
push
cltd
add
mov
dec
jg
and
inc
outsb
mov
or
test
addl
xchg
stos
adc
fcomi
das
cld
cmp
movsl
gs
test
loop
out
cmp
jle
or
or
inc
rcrb
movsl
loope
test
nop
repnz
mov
repz
dec
sarl
int
out
into
or
sbb
dec
or
cltd
add
lods
add
or
sub
sub
mov
lds
les
call
test
dec
pop
test
int
and
inc
insl
pushf
ret
add
addr16
cmp
mov
out
lods
aas
leave
sbb
push
ja
outsl
sbb
pop
rorb
dec
mov
or
mulb
aad
in
test
cld
out
sub
adc
pusha
jge
dec
aad
rclb
jl
mov
data16
pop
jne
mov
pushf
adc
jmp
loop
addr16
arpl
nop
ljmp
dec
xor
aaa
imul
dec
mov
xor
test
fmul
add
ja
shl
or
rcrb
inc
add
xchg
xchg
pop
ljmp
sub
cmc
daa
dec
imul
imul
fwait
aaa
inc
mov
in
sub
notl
ret
sub
mov
test
lret
pop
ss
ljmp
loope
js
xor
int
shrb
push
dec
cs
mov
adc
sti
dec
adc
cmp
ds
mov
pop
xchg
les
push
test
fcoms
test
inc
sbb
mov
pop
mov
mov
clc
or
adc
jl
and
mov
clc
inc
test
cmp
lret
scas
push
daa
dec
push
cmp
inc
mov
pop
aas
xchg
stc
push
jo
inc
test
push
repnz
lcall
push
cmp
pop
sub
adc
pop
add
mov
and
jmp
mov
xchg
or
pop
not
push
mov
and
loop
jp
rcrb
rclb
clc
pmaxub
fxch
shr
aam
js
push
mov
adc
icebp
dec
fs
or
mov
lcall
aaa
pop
imul
test
add
sbb
inc
popa
ds
negb
xchg
lea
xchg
shlb
jl
jmp
sub
sahf
xchg
mov
leave
or
ret
sbb
ud1
xchg
fnstsw
bound
pop
or
or
rcl
icebp
cltd
push
xchg
mov
cltd
shll
ljmp
das
incl
ljmp
imul
xchg
lds
rcrl
sub
test
sbb
loop
rcl
loopne
stc
jb
cmpsl
out
xchg
fisubs
arpl
xchg
jnp
outsb
inc
dec
cli
ljmp
sbb
mov
mov
mov
push
stos
addr16
shlb
or
or
inc
pop
or
jg
xchg
mov
divl
fistps
rcl
leave
adc
addr16
mov
popa
out
sbb
js
dec
fisubrl
jae
jns,pn
lcall
scas
dec
jl
mov
jae
roll
mov
std
loop
gs
sub
or
daa
into
xchg
mov
insl
push
fmull
outsl
icebp
mov
jmp
or
mov
add
jmp
iret
mov
jmp
push
cmc
cmp
or
adc
notb
lret
rorl
loop
in
stc
push
xor
xor
jg
mov
inc
cld
dec
mov
arpl
push
cmp
inc
sbb
jbe
fisttpl
arpl
pop
insl
xchg
cmp
inc
dec
cmp
stos
mov
mov
ss
shlb
outsl
outsb
sub
js
adc
ja
xchg
fstl
das
shll
mov
push
loope
ljmp
mov
ljmp
sbb
test
loop
addb
dec
nop
push
orl
sub
jo
mov
int3
ds
aad
nop
cmp
push
cmp
sti
mov
addr16
mov
mov
aam
cli
sbb
aaa
fwait
les
das
mov
jne
pop
or
aad
and
add
xchg
cld
jne
into
dec
adc
fstpt
xchg
push
and
adc
mov
leave
pop
mov
dec
sub
lret
lock
scas
push
pop
enter
mov
xor
enter
bndstx
sub
fwait
das
jns
mov
or
iret
addr16
aas
test
jle
mov
call
aas
pop
pop
xchg
and
sbb
clc
cmp
sti
xchg
das
test
adc
les
and
push
cs
test
pop
sbb
xor
in
out
bound
cmpsl
repnz
inc
ret
imul
xor
xchg
jmp
push
out
sub
sbb
rolb
cmc
scas
rclb
fwait
push
les
push
test
inc
mov
mov
gs
xlat
pop
cmpsb
outsl
add
jno
mov
pushf
inc
lock
fwait
icebp
jge
sahf
daa
mov
dec
pop
mov
xor
in
push
adc
jno
jbe
lcall
mov
xchg
push
jae
add
adc
dec
dec
das
mov
pop
iret
mov
aad
in
mov
mov
or
xchg
nop
sub
les
xor
or
xor
jg
or
sbb
cmp
mov
and
repz
cmpsl
mov
mov
adc
outsl
ret
sets
xor
pop
stc
xor
es
mov
push
xlat
pop
add
jnp
xchg
pop
push
iret
jle
pop
test
ret
cmp
roll
jo
or
add
adc
and
push
jnp
roll
out
out
sub
pop
cli
stos
dec
clc
movsl
icebp
mov
std
jo
mov
dec
cli
lahf
xchg
lods
add
movsl
cmpsb
fcmovnu
add
out
mov
shl
fdivl
mov
xor
mov
push
jne
in
lods
subl
popf
cltd
fsts
and
push
xor
mov
mov
xlat
pop
mov
shll
ret
cmp
sbb
das
inc
movsb
cmp
adc
adc
into
pop
pushf
ja
pushf
pushf
mov
aad
jo
dec
lods
out
or
or
shlb
jnp
jl,pn
pop
lods
or
in
xchg
mov
es
push
andl
ljmp
pop
dec
adc
movsl
fimuls
add
bound
pop
iret
idivl
das
and
mov
xor
or
cmp
jp
sub
mov
sbb
fistpll
jecxz
mov
xchg
mov
sbb
mov
incb
mov
cltd
xor
inc
inc
sbb
nop
adc
rcll
mov
pusha
pop
fnstcw
shll
jae
push
outsl
mov
icebp
sahf
insb
or
sbb
pop
ja
in
push
inc
es
mov
andl
dec
adc
movsb
jge
sbb
mov
loope
movsb
enter
or
mov
pop
jo
jb
pop
lds
mov
mov
xchg
idiv
inc
imul
jbe
shlb
mov
inc
icebp
pop
adc
divb
into
xor
test
lock
fmulp
push
shlb
mov
sub
test
push
mov
test
mov
xchg
pop
sub
gs
sti
jp
mov
add
xorl
inc
les
add
sub
int3
mov
sbb
jle
sti
in
loopne
jmp
lret
sti
xchg
mov
jge
mov
mov
loop
in
in
mov
adc
insb
repz
mov
aas
stos
push
cmpb
cmp
xor
lods
mov
popf
fsubrp
push
std
or
in
mov
orl
cmp
inc
mov
or
and
filds
dec
fxch
sub
push
and
andl
pop
lock
enter
adc
repnz
ljmp
cmp
divl
cltd
jb
pop
jmp
and
hlt
pop
mov
dec
pop
lds
sarl
mov
push
or
jbe
movsl
lret
jp
add
es
mov
insl
add
sbb
pop
icebp
mov
cmpsb
push
mov
jle
and
cmpsl
push
adc
push
and
lret
js
xchg
out
cmp
lret
aas
cwtl
das
cmp
push
and
in
push
sub
sub
pop
bound
aaa
jmp
in
cli
xor
inc
pop
pop
inc
or
aas
mov
jno
pushf
repnz
shr
jecxz
inc
adc
sub
and
imulb
loope
jnp
dec
popa
mov
push
ficoms
lods
dec
aas
in
rcl
xor
or
pusha
into
dec
push
and
mov
in
loopne
in
mov
push
adc
in
cmp
mov
std
js
cmp
mov
adc
repz
lcall
mov
test
inc
push
mov
push
push
xchg
subb
shlb
push
xor
pop
add
jb
lret
out
xchg
pop
scas
xchg
add
jb
gs
outsb
loope
or
sub
sub
scas
clc
xor
lods
pop
pushf
loopne
fildll
divb
addr16
divl
stos
mov
mov
fildll
cmpb
mov
or
and
xorl
jae
insl
repz
sbb
jge
mov
shrl
pop
stc
in
mov
or
int3
push
mov
stos
push
mov
ret
jne
sbb
neg
fcmovnbe
sbb
push
cmp
pop
cmp
shrb
mov
jmp
scas
dec
or
imul
shlb
jbe
fisttps
lock
sbb
pop
push
ret
shl
cld
mov
add
pop
jle
shl
mov
enter
mov
mov
nop
test
cmp
xchg
ret
push
scas
xor
or
cmpsb
xchg
jnp
dec
fisttpll
push
pop
incb
push
dec
mov
movsb
int
cmp
cli
outsl
bound
add
xor
dec
enterw
aam
ror
sub
imul
sarb
adc
cmp
xchg
movsb
arpl
add
or
pushf
add
iret
or
pop
inc
test
fildl
int
adc
outsl
xchg
mov
push
je
push
cmc
loope
cmp
adc
leave
jbe
rolb
push
adc
pop
adc
call
mov
cmp
jg
jle
or
gs
dec
mov
pop
cmp
aaa
xorl
cmp
arpl
adc
rorl
es
xchg
mov
ret
pop
sub
test
in
sarl
ret
push
cmc
add
mov
jbe
jl
jnp
lret
lret
scas
loop
sub
inc
sbb
push
or
inc
jp
dec
mov
ss
jo
cmp
clc
dec
movsb
jmp
push
stc
jo
adc
jne
xchg
adc
push
pop
insl
xor
repz
cmpsb
ljmp
sbb
pop
pusha
sbb
mov
leave
gs
xorl
sbb
cmpsb
andb
push
mov
xchg
xchg
jno
or
outsl
adc
jno
enter
mov
mov
stc
cs
pop
inc
ja
loopne
xor
mov
xor
mov
lcall
faddl
push
mov
cmp
out
pop
in
out
test
mov
inc
pop
cmp
out
pop
push
pop
pusha
bound
bound
or
ljmp
mov
bound
sbb
push
and
adc
aam
dec
pushf
add
pop
adc
push
sarl
add
jae
lret
int
pop
xor
stos
mov
sbb
mov
pusha
je
sub
cltd
xchg
test
push
fwait
mul
stc
and
call
rcl
imul
xchg
dec
push
pop
cmp
push
scas
push
outsl
ljmp
aam
insl
mov
push
or
adc
xchg
lret
in
stc
out
aad
je
xchg
les
daa
xrelease
cli
mov
mov
mov
lret
fcomi
or
scas
dec
aam
xchg
xchg
outsb
and
in
or
ret
add
rorl
ret
fucomp
popf
mov
inc
push
mov
hlt
hlt
mov
push
subb
push
stos
or
movsl
mov
movsb
cwtl
dec
jp
push
xor
imul
mov
imul
xchg
cld
mov
xchg
dec
shlb
or
mov
or
rorl
addr16
dec
je
shll
xor
lahf
or
ficomps
push
add
pop
in
adc
xchg
mov
add
pop
fwait
loop
data16
call
lock
aad
mov
dec
adc
out
popf
mov
in
mov
pop
mulb
jb
sub
jl
add
adc
cs
xor
mov
lret
out
mov
adc
or
ret
leave
mov
ret
mov
add
jno
sbb
mov
imul
mov
inc
sub
out
jno
leave
addr16
sub
aas
dec
data16
pop
sbb
push
test
adc
pop
shl
push
adc
test
shll
dec
cmp
pusha
in
cmpsl
out
shr
or
adc
xor
enter
shrd
cmpsb
lret
jns
or
lahf
lret
call
movsb
mov
inc
xchg
rorl
fisubrl
xor
adc
inc
fs
push
cmp
mov
pop
or
fmuls
fstps
in
xchg
sahf
inc
int
dec
in
jb
jge
mov
xor
add
mov
xchg
loope
cmp
jno
jecxz
jbe
mov
jle
push
repz
outsl
pop
in
xchg
repnz
ficompl
fisubl
lss
pop
mov
popa
mov
mov
rorb
sub
popf
jmp
lods
pushf
outsb
fdivr
inc
lcall
in
dec
and
pop
inc
sbb
int3
or
adcl
lcall
add
xchg
pop
jb
add
xorl
sub
adc
movsb
subb
movsb
cmp
lahf
das
or
hlt
pop
or
jo
pop
push
out
scas
outsl
xor
lret
in
push
mov
jmp
mov
pop
add
insl
push
lods
sbb
movsb
sbb
dec
clc
pop
mov
idiv
cmpsb
fwait
ss
popa
pop
cs
mov
fidivl
and
fidivl
jle
inc
outsl
shlb
dec
nop
popf
hlt
dec
cmp
mov
xor
sub
sbbl
out
cwtl
ds
sub
push
mov
int3
outsl
mov
imul
mov
ljmp
and
xchg
and
xchg
js
or
xchg
pop
fcmovnu
mov
out
notl
gs
dec
push
lcall
fdivl
cs
mov
adc
addb
mov
jl
adc
xchg
xchg
xchg
scas
and
mov
test
in
cwtl
lahf
mov
pop
push
sbb
adc
mov
popf
jg
or
out
aas
and
imul
xchg
lret
mov
imul
mov
dec
out
int3
pop
or
repz
dec
sbb
call
jne
cwtl
dec
dec
js
lock
push
leave
pop
or
out
ret
cmp
push
cmp
push
js
inc
push
mov
sbb
cmp
out
jb
sarb
mov
pop
xchg
je
dec
mov
sbb
xor
mov
stc
ds
add
jns
sbb
xlat
cmp
xchg
add
push
and
aad
pop
jge
dec
xchg
mov
adc
inc
aaa
xor
cmp
mov
cltd
in
xchg
xor
mov
aas
mov
aas
jns
sub
jnp,pn
fnstsw
jns
pop
popa
jo
cld
sub
mov
sub
mov
xchg
add
popa
fst
xchg
call
or
adc
bound
adc
xchg
push
movsl
adc
pop
iret
hlt
cld
subl
ret
cmpb
or
mov
or
xor
popa
dec
jmp
sahf
pop
imul
out
and
aaa
cmpsb
mov
out
fdivl
jmp
ja
jb
and
adc
jo
jbe
lfs
ret
mov
dec
loope
ret
sbb
push
or
ret
out
sbb
fwait
add
cmp
add
sbb
call
jl
fsubl
ficoms
cltd
or
test
fwait
pop
sbb
push
xor
loope
mov
xor
adc
adc
adc
xlat
arpl
xor
out
lods
lret
push
lahf
ja
enter
xchg
aas
and
ret
mov
jmp
lods
jecxz
adc
add
aam
sbb
mov
jbe
jle
stos
xlat
pop
in
pusha
adc
and
scas
xchg
or
xchg
dec
lahf
leave
pop
inc
pop
daa
sub
or
xor
arpl
test
add
sbb
xorb
loope
pop
fucomip
orl
jo
xchg
rcrl
xlat
stos
mov
unpcklps
adcb
outsb
sub
jbe
jg
inc
xchg
push
ja
xchg
xor
adc
out
gs
and
dec
xchg
sahf
jmp
xor
ret
jne
inc
push
fs
mov
inc
mov
cmp
das
xor
add
mov
inc
fs
adc
movsl
mov
stos
dec
dec
dec
lahf
lods
div
ja
push
and
outsl
mov
cli
fsub
es
mov
leave
aad
sbb
push
or
loope
dec
ljmp
lock
cmc
sbb
popa
cmpsb
pushf
pop
or
enter
fnstcw
cld
jne
insl
frstor
lahf
popf
mov
and
insb
not
into
add
repnz
push
inc
lahf
in
aaa
mov
loopne
pushf
cli
cmp
xor
dec
popa
mov
pop
add
push
sbb
add
shrl
divb
dec
into
jo
push
mov
repz
jg
pop
mov
pop
mov
and
add
xchg
and
mov
dec
xchg
lret
ljmp
std
roll
cmp
insl
jb
int3
iret
rcr
adc
lret
or
addb
jmp
fiaddl
mov
ss
cmc
jmp
subb
lock
mov
into
aam
mov
or
cld
xchg
insw
sahf
xlat
lahf
in
dec
push
jnp
out
icebp
lahf
sub
add
and
add
movsb
sbb
xchg
push
or
daa
or
cmp
inc
outsb
mov
imul
inc
cmpsb
lods
cli
std
mov
and
ja
jo
daa
xor
insb
adc
cwtl
mov
test
cmp
leave
add
ss
movb
out
lcall
repnz
idivb
rclb
or
add
cwtl
push
xchg
inc
and
inc
lea
mov
std
mov
or
push
stc
xor
addr16
xor
mov
outsl
dec
ss
xorl
call
add
repz
ja
repnz
pop
int3
jno
out
push
insb
scas
lods
les
gs
jg
test
ret
xor
push
mov
sub
jae
sbbb
push
or
adc
enter
repnz
std
pop
cs
cmp
jmp
sti
pushf
in
or
dec
cmp
inc
mov
cmpsl
pop
fldenv
cmp
jbe
add
in
arpl
pushf
xchg
paddsw
push
and
inc
loope
add
divb
outsl
xlat
jmp
jge
mov
ds
sbb
popa
push
stos
cmp
insl
daa
fstpt
aad
add
rcl
sbbl
adc
mov
push
clc
les
sbb
lock
jmp
or
add
jecxz
insb
mov
in
or
sbb
xchg
sahf
jmp
jle
pop
hlt
sbb
shrl
int3
xor
int3
sbb
scas
jge
xchg
shll
xor
adc
pop
loopne
ljmp
jl
push
ror
mov
push
repz
stos
test
push
and
shl
in
das
xor
mov
jge
push
jae
shrl
call
xchg
add
rep
sub
add
xor
xchg
jp
mov
xor
and
rsm
jle
jge
mov
js
inc
lret
add
sti
paddsb
jo
roll
xchg
mov
push
mov
cmpb
enter
mov
mov
sbb
imul
jae
out
pop
xchg
xor
cmp
mov
lret
outsb
adc
dec
mov
xor
out
pop
or
pop
pop
xchg
fldenv
jge
jp
in
xchg
fmul
rclb
dec
mov
pop
xor
jo
add
frndint
dec
sbb
cwtl
scas
add
idivl
jno
pop
lret
aas
inc
mov
push
and
or
cmpsl
pop
push
lock
mov
xchg
adc
lret
xchg
test
pushf
xchg
repnz
insb
lea
das
int
shll
push
pop
mov
inc
xchg
pusha
mov
mov
dec
fnsave
adc
or
jae
js
stos
addl
push
inc
fsubr
xchg
pop
pushf
movsb
clc
inc
aaa
outsb
push
idiv
enter
sbb
flds
inc
and
or
sub
mov
ja
add
and
mov
jnp
sub
sub
aad
jae
fdivrl
mov
lret
sbb
push
jl
mov
mov
daa
mov
mulb
addr16
pop
test
or
ljmp
mov
xchg
lods
es
add
cmp
in
dec
int3
outsb
xchg
daa
leave
adc
imul
lods
test
and
add
ljmp
mov
push
fisubs
test
push
les
test
popa
cmp
fisubs
mov
stos
lea
jecxz
cmc
movl
faddp
add
push
std
fldl
insl
lcall
and
pushf
jb
fs
rcl
xor
loopne
sarl
roll
mov
lret
dec
addr16
add
ljmp
cld
mov
push
mov
sub
jae
and
xor
lret
imul
popf
dec
or
stos
or
mov
adc
sbb
jae
pop
sbb
mov
xchg
push
repnz
test
pushf
mov
notl
xor
push
mov
push
rcrb
pop
aaa
and
fstps
mov
adc
adc
aaa
mov
cmp
adc
mov
out
inc
ja
mov
jb
and
jno
sub
outsb
aam
test
into
sar
loopne
jne
mov
call
lahf
and
in
jae
rcl
call
mov
shll
xor
je
pop
or
movsl
stos
xlat
jg
mov
into
int
push
popa
mov
inc
add
dec
jecxz
clc
jae
jmp
adc
mov
xchg
out
shll
idivb
push
idivl
test
popf
jbe
cmp
jo
fwait
shll
popa
mov
imul
xchg
pushf
lret
in
lock
jl
and
lods
lods
insb
loope
jg
std
in
gs
cmp
cmp
rcrb
fcos
dec
pushf
sub
and
sbb
fsubs
inc
lahf
inc
push
xchg
loopnew
add
jo
push
pop
frstor
or
je
adc
je
lods
mov
xorb
lret
jnp
mov
sar
or
mov
mov
mov
out
cmp
jg
iret
popa
jle
out
jmp
neg
add
xor
push
pop
cltd
adc
jg
pusha
in
jg
notb
fwait
mov
mov
insb
cs
add
cltd
cltd
or
subb
movsb
aad
xor
mov
cmp
mov
iret
xchg
xrelease
call
cmp
jecxz
lock
mul
cmpsb
or
fildl
test
cmpb
xor
pop
dec
rol
lds
fsubrp
xor
call
cmp
pop
dec
xlat
and
stos
shl
fdiv
sub
test
sub
jmp
dec
mov
mov
mov
fs
mov
mov
icebp
mov
bound
or
mov
testl
cmp
rolb
or
inc
and
stos
idivb
popf
std
dec
loop
mov
mov
cmpsb
insb
sbb
pop
fadds
sbb
pop
loop
movsb
je
xor
add
shrl
fnstenv
cmc
xchg
sub
lcall
push
lock
and
sub
aad
jno,pt
xchg
xor
call
je
pop
and
pop
jnp
or
lods
arpl
inc
xchg
dec
xor
mov
dec
arpl
repz
mov
cmp
popa
inc
sti
outsl
xchg
popa
stos
lods
ret
dec
sbb
sub
outsl
stc
pop
mov
lods
adc
xor
test
sub
sub
outsl
das
pop
or
aaa
leave
dec
pusha
jbe
pop
add
outsb
lea
jmp
xchg
adcl
sub
jmp
fdivs
aaa
call
pop
lcall
ret
lret
mov
push
mov
fsts
dec
jp
mov
adc
test
add
or
push
lock
fstpl
sbb
psllw
add
cmp
ja
fcmovu
lcall
dec
outsl
outsb
cld
and
sbb
mov
pop
jecxz
lods
adc
mov
div
out
and
push
into
xchg
stos
pop
aad
mov
sbb
scas
cwtl
pop
and
loope
jae
jo
in
jb
xor
pop
mov
jno
pop
loop
mov
mov
pop
stos
inc
or
jecxz
js
lods
jle
data16
addb
xor
sbbl
xchg
sub
shll
test
decl
insb
imul
lock
dec
cmp
imul
loopne
cmc
daa
sbb
popa
mov
ja
pushf
test
jmp
jp
fsts
lds
mov
inc
orb
dec
mov
loope
int
inc
in
into
shll
jbe
sub
cmc
mov
or
repz
call
imul
out
and
dec
scas
cmp
test
push
sar
sahf
cmpsl
jno
popf
sub
jbe
pop
cltd
mov
inc
enter
push
sub
out
gs
xchg
xchg
xor
lahf
adc
add
push
pushf
jge
insb
test
pop
fdivl
cmpsb
movb
pop
movsl
call
stc
int3
lock
inc
pop
sbb
hlt
inc
insb
rcrl
out
mov
addb
sbb
mov
and
fisttpll
or
lea
jne
mov
adc
rcl
pop
out
frstor
pop
and
faddl
adc
push
lods
ficompl
arpl
add
inc
inc
imul
jno
int
push
mov
dec
repnz
lahf
subb
lds
mov
dec
pop
movl
sub
mov
adc
cmpsb
dec
nop
outsb
out
std
or
sbb
xlat
jecxz
push
adc
sbb
add
out
xchg
nop
and
stos
xlat
mov
or
stos
inc
pusha
and
push
and
sub
lea
jge
mov
push
cltd
xor
pusha
jp
mov
and
mov
lcall
push
push
cmp
ret
lret
xlat
jecxz
xchg
jbe
pop
insl
daa
inc
je
mov
add
movsb
fcomi
loopne
aas
xchg
loope
sbb
adc
lcall
pop
xchg
xchg
movsl
sti
sbb
mov
add
fcomps
mov
mov
cwtl
push
inc
sarl
cs
ds
call
js
in
or
cmp
ret
test
xor
lods
inc
inc
sbb
pop
leave
nop
sub
cmpsl
ds
xor
cmpsl
int3
pop
negb
lea
and
addr16
pop
aam
adc
ja
cld
mov
sbb
dec
repnz
mov
dec
aas
test
mov
cmpsb
sti
push
push
dec
pop
je
out
cli
in
ret
mov
bound
and
mov
daa
xchg
push
dec
or
pop
mov
loope
inc
sub
jnp
jnp
ljmp
jnp
in
sbb
test
inc
mov
out
lea
sbb
mov
stc
aam
pop
and
sub
movsb
aas
mov
mov
sub
outsb
jnp
nop
pop
add
out
cmp
loopne
subb
mov
jno
inc
mov
mov
xchg
js
mov
pop
jmp
pop
push
frstor
sbb
pop
mov
dec
and
sahf
inc
stc
fidivs
jno
cmc
xchg
jg
sbb
in
pop
sbb
mov
mov
pop
cwtl
sub
mov
adc
jmp
je
ljmp
cmp
add
divb
inc
and
aad
insb
cld
addr16
push
push
mov
lods
cmp
js
repnz
mov
xor
xchg
push
rorb
xor
movsb
cmp
leave
push
jbe
call
cmp
in
fdivs
cltd
cmp
loopne
shrb
stos
inc
mov
jnp
stos
cs
lods
add
popa
int3
mov
adc
test
adc
adc
movsb
add
pop
out
or
outsb
not
mov
push
loopne
pop
stos
cmpsb
cmp
push
popf
in
jl
sahf
jnp
jcxz
in
mov
mov
shl
aad
outsb
bound
cld
sub
aam
in
loope
adc
fsubrs
test
inc
xor
mov
inc
mov
push
insb
dec
pop
ror
xchg
shl
sbb
xor
cmp
repnz
dec
imul
sbb
fucomip
jae
mov
enter
mov
cmp
add
adc
jmp
icebp
cmp
aas
mov
arpl
aad
icebp
push
push
jmp
cld
pop
push
add
les
leave
stc
aas
fdivs
sahf
push
das
fwait
mov
mov
xchg
std
jp
mov
mov
mov
fisttps
push
ss
dec
adc
jg
call
add
stc
and
loope
daa
rorl
pop
push
out
add
cmp
adc
rcll
mov
mov
mov
daa
xor
ret
loop
pop
mov
loop
mov
lcall
dec
dec
push
adc
cmpsl
fmul
insl
and
dec
icebp
adc
pusha
mov
sbb
cltd
mov
ljmp
testl
cmp
adcb
mov
lcall
sbb
stos
inc
mov
clc
test
mov
bound
clc
mov
push
jb
jno
arpl
sbb
call
mov
mov
lret
mov
insl
jp
sub
inc
or
test
xlat
jmp
sar
add
pop
push
jge
and
cs
mov
in
mov
sub
mov
sahf
mov
pop
mov
rcr
push
mov
cmc
scas
pop
xor
sub
jo
mov
mov
jne
xor
jns
loope
push
mov
int
mov
inc
fidivl
cli
adc
cmpsl
dec
mov
mov
out
or
push
sbb
fwait
jns
les
imul
xor
into
cmp
out
mov
in
das
lahf
sub
adc
aad
cmpsl
lahf
mov
scas
int3
mov
pushf
lea
pop
push
push
mov
imul
dec
jb
pop
rolb
ds
fldenv
cmpsl
adc
xor
pusha
or
fs
pop
sbb
xchg
fstpl
mov
lea
inc
lods
and
or
cmp
xor
jb
cs
cmpsl
xchg
aaa
out
sbb
daa
mov
int3
mov
mov
xchg
pusha
inc
lret
in
fsubrp
popa
js
test
mov
xor
fdivs
add
or
ficompl
lea
xchg
pop
sub
or
jmp
ljmp
test
or
mov
and
sbb
inc
add
mov
xor
cwtl
pop
sub
lock
pop
mov
cmp
jns
cmpsl
gs
xorl
fnstcw
loope
sbb
add
mov
test
push
cmp
cmpps
in
push
mov
adc
mov
ljmp
dec
addr16
mov
aad
fisubrl
shl
lock
ss
push
xchg
mov
mov
inc
out
sbb
xchg
pop
sbb
dec
bound
test
push
cmp
xchg
inc
out
xor
fisubl
hlt
movsl
jmp
mov
xchg
jns
enter
xchg
adc
mov
mov
xchg
outsl
repnz
lods
leave
sub
xor
out
cwtl
mov
push
push
pop
popf
addr16
nop
in
jl
mov
stc
cmpb
repz
std
out
inc
cmp
in
data16
daa
mov
inc
adcl
cli
cmp
fdivrs
jne
outsl
mov
in
sub
lock
inc
ss
cli
mov
add
mov
mov
stos
in
sbb
and
or
xlat
jge
ja
dec
push
in
or
sbbb
ret
xchg
mov
mov
movsb
lret
xchg
insl
aam
insb
jae
pop
or
popf
pop
xor
sbb
push
leave
jae
cmp
push
es
jno
jo
ror
pmaddwd
ja
dec
roll
ja
repnz
outsl
lods
int3
addr16
cmpsl
in
dec
jle
or
sbb
out
dec
mov
in
dec
adc
imul
cs
ficomps
inc
or
aas
mov
push
add
sub
jl
insl
icebp
dec
imul
xor
inc
jg
xchg
mov
xchg
dec
push
rcrb
aas
orl
cs
fdivrl
sub
dec
add
push
or
test
jmp
adcb
or
mov
and
std
adc
cwtl
js
scas
pop
jb
ljmp
or
push
dec
nop
ret
cmpsl
test
stos
sbb
cmpsb
pop
pause
jns
mov
add
xor
daa
xchg
out
pop
popf
pop
push
pop
push
sub
mov
and
in
test
cltd
mov
in
sub
jecxz
test
inc
pop
jae
movb
xchg
lods
cmp
pop
lds
sbb
adc
int
addb
push
pop
cmp
nop
mov
xchg
addl
inc
scas
sub
pop
fldt
jmp
mov
call
out
lds
ss
sbb
fistpll
insb
bound
add
loope
jnp
js
pop
in
je
jb
pusha
cmp
cs
scas
mov
enter
fwait
ljmp
shll
pop
mov
pop
sub
jecxz
sbb
mov
shl
test
movsb
sbb
in
aas
xchg
push
sbb
dec
inc
mov
xor
dec
xor
push
inc
jbe
cli
cmp
data16
daa
clc
pop
cwtl
add
adc
inc
pop
fiaddl
mov
cmp
mov
pop
push
iret
jmp
pop
ret
test
stos
inc
mov
adc
clc
fwait
sti
sti
aam
mov
adc
or
enter
sub
fs
aas
xlat
pushf
adc
ret
fcmovu
je
subb
xlat
pop
and
loopne
int
push
and
jns
inc
push
ljmp
cmp
repz
inc
add
xor
pusha
pop
lods
pop
out
mov
nop
out
negb
mov
inc
xchg
mov
outsb
repnz
test
mov
bound
mov
dec
es
adc
xor
push
lds
cld
test
mov
in
mov
in
add
dec
fcmovnb
rcl
dec
lods
xchg
or
add
in
push
push
sti
mov
push
clc
jp
adc
pop
test
out
mov
mov
lret
js
lret
mov
xlat
dec
aad
sub
lods
adc
xchg
fistpll
out
jno
xor
into
cs
sbb
xchg
call
jecxz
pop
xchg
faddl
or
inc
xor
push
mov
dec
inc
adc
fstps
dec
addr16
push
mov
xor
push
dec
mov
adc
insl
shlb
xchg
pmaddwd
movsl
ffreep
adcl
jp
ljmp
cs
adc
xchg
or
lock
push
ret
xchg
cmc
daa
out
test
push
std
mov
movsb
xchg
roll
fs
in
ficompl
dec
das
rcrb
or
call
xor
jae
xor
add
xchg
dec
pop
or
sub
enter
jns
or
jle
aad
sbbl
adc
call
scas
test
addr16
test
adc
mov
ficomps
incb
sbb
add
call
inc
jb
xor
dec
loope
push
lds
lods
mov
xchg
adc
jns
jp
and
and
mov
xchg
outsb
jbe
dec
jle
mov
cli
adc
add
ret
mov
and
sbb
dec
adc
pop
std
jg
out
mov
out
scas
pop
dec
add
pushf
mov
sub
xchg
sub
xor
xor
cwtl
in
test
xor
sbb
or
inc
xor
or
cli
ret
xor
fildll
adc
pop
or
push
pop
stos
lcall
ret
jl
sahf
mov
gs
test
and
lret
sti
pop
or
lret
cmpsl
jmp
dec
gs
push
jl
bound
lret
fbstp
sbb
into
jmp
jae
mov
sbb
psubb
dec
pop
dec
mov
pop
sti
subl
in
fimull
add
dec
out
enter
lret
loop
inc
inc
lods
push
es
test
icebp
aad
stos
mov
xchg
push
cmp
ret
pusha
mov
call
cli
xor
adc
fistpl
outsl
fisttpll
jbe
mov
and
dec
insl
mov
push
incl
push
mov
lahf
mov
sbbl
roll
mov
out
inc
inc
mov
sbb
pop
dec
lock
idivb
subl
pop
mov
xor
aad
jp
lret
roll
sub
mov
stos
inc
push
or
xlat
std
mov
ja
pop
or
in
xchg
or
sbb
mov
test
push
loope
frstor
or
sub
pop
xor
mov
and
pushf
test
mov
aad
pushl
fnsave
jae
pushf
movswl
push
cs
xor
sub
cli
mov
aas
cmp
dec
jp
inc
mov
ret
dec
and
out
xchg
testb
dec
ss
sbb
inc
mov
jp
inc
test
sub
dec
pop
cmc
ljmp
std
icebp
inc
pop
cmp
cmc
insl
ss
popa
sbb
bound
jg
push
dec
cld
loop
cmc
mov
enter
push
stos
push
and
mov
insb
cs
dec
sbb
cmp
or
loope
adc
add
adc
enter
inc
adc
dec
dec
call
je
in
aad
pop
sarl
pop
mov
mov
mov
icebp
adc
dec
push
out
inc
sbb
adc
cmp
xor
cmp
or
adc
mov
sbb
lods
pop
rorb
mov
mov
outsb
cmp
dec
cs
or
scas
das
mov
mov
out
or
inc
filds
add
in
or
mov
sbb
test
cmp
mov
jmp
movsl
dec
pop
pop
cmc
std
fidivl
xchg
pop
mov
pop
lds
std
push
or
mov
push
and
xor
xchg
mov
arpl
inc
jg
iret
popa
mov
sbb
mov
adc
shr
call
sbb
out
repz
xor
jp
je
mov
adc
imul
inc
inc
pop
js
arpl
push
dec
or
ss
sub
jp
xor
mov
scas
sub
shl
mov
push
or
stos
mov
cmp
fwait
out
pop
shlb
xor
jno
inc
push
adc
jae
sub
cmp
leave
pop
clc
fwait
inc
pop
push
lds
aaa
xchg
pop
les
gs
stos
sbb
cltd
rcll
sbb
pop
data16
push
bnd
sbb
popa
lods
repnz
adc
movsl
aad
mov
js
sub
xor
mov
xchg
nop
mov
push
adc
stos
fildl
sub
aas
inc
cmc
nop
movb
les
fadd
mov
sub
outsb
adc
mov
cmp
mov
jl
mov
pop
mov
add
aad
in
mov
mov
pop
repz
and
nop
dec
aam
mov
out
sub
scas
xor
loop
in
decb
test
jo
lcall
sbb
jmp
fdivs
sub
push
and
xchg
dec
mov
mov
pop
jge
pop
testb
and
popf
lret
test
bound
icebp
and
xor
rolb
sbb
addr16
insb
and
insl
aam
decb
js
movsl
dec
scas
jge
cmpsb
jle
movsb
cwtl
ljmp
lret
rorb
shl
and
cmp
sarb
popf
dec
mov
dec
movsb
lcall
jbe
cltd
or
inc
aaa
in
or
mov
out
mov
das
cmovle
add
subl
sub
popf
mov
scas
hlt
sbb
or
and
mov
mov
outsb
and
popf
dec
sub
xchg
outsb
jno
int3
push
and
jnp
mov
push
push
xchg
pop
mov
or
push
sbb
movsl
mov
les
lods
jecxz
xor
push
mov
aad
jnp
jg
aaa
lods
jo
pop
add
insl
mov
cmp
jge
mov
pop
or
pop
loope
iret
jns
ss
sbb
mov
ss
dec
push
mov
fs
mov
arpl
xor
fcoml
rolb
dec
pop
insl
sub
rorl
mov
jmp
leave
inc
cwtl
mov
movsl
cmpsl
mov
out
mov
push
or
mov
mov
inc
mov
ja
fwait
and
repnz
movsb
sti
cltd
cmpsl
sub
or
or
pop
mov
add
lcall
or
jg
mov
lock
mov
bnd
movsl
lods
mov
lds
rol
mov
adc
mov
mov
cmp
pop
adc
xorb
xchg
inc
adcb
xor
pop
mov
mov
mov
mov
mov
movsb
enter
mov
addb
push
cmp
jecxz
push
hlt
pop
mov
sub
dec
mov
in
jns
orb
push
popf
or
fiadds
insl
push
jl
xorl
es
inc
lds
rcr
les
cmc
and
outsb
push
mov
aas
dec
adc
push
arpl
push
add
fisubl
cld
push
xchg
daa
push
jge
mov
lret
clc
jae
add
jb
sbb
fdivrl
testl
adc
push
inc
stos
into
cmp
xor
in
fsub
or
call
and
cmc
scas
xchg
dec
sbb
adc
xchg
gs
mov
scas
xchg
push
sti
and
cmp
add
nop
xor
xchg
mov
cltd
repz
or
sbbb
and
xor
xlat
push
dec
loop
jg
mov
cli
dec
ds
add
testl
imul
loop
ljmp
mov
aaa
pop
cmpsb
push
dec
cwtl
sbb
xor
dec
mov
jmp
push
movsb
jle
sbb
or
sbb
scas
sub
mov
ss
jle
ss
adc
ret
lods
mov
add
push
pop
jmp
into
jl
aaa
insb
sarb
xchg
pushf
push
pop
jns
mov
inc
adc
sahf
mulb
ret
scas
rorb
mov
mov
test
sub
ror
stos
jnp
aaa
sub
mov
jp
sti
insl
xor
leave
adc
mov
int
mov
xchg
inc
lods
xchg
sbb
dec
cmpsb
mov
mov
mov
mov
data16
fisttpl
cmp
pushf
rol
mov
push
inc
jbe
popf
and
mov
mov
scas
loope
and
into
mov
push
imul
mov
fildll
xor
pop
pop
dec
arpl
fsub
mov
pop
clc
test
mov
movsb
xchg
andb
inc
fsubrl
icebp
mov
shll
mov
pusha
and
or
jg
hlt
jge
xor
mov
xchg
inc
es
pushf
add
push
jle
adc
data16
les
test
mov
pop
push
xor
sub
xchg
inc
mov
cmp
pop
pop
lods
std
mov
inc
push
push
mov
mov
adc
xchg
inc
aad
add
pop
pop
pop
adc
inc
pop
rclb
ja
jo
mov
mov
push
dec
mov
lahf
jg
scas
xchg
push
in
ds
cmpsb
dec
mov
out
insb
pop
sub
mov
sarb
jns
hlt
push
movsb
sub
mov
imul
lods
je
adc
cltd
push
cwtl
loop
inc
or
aas
dec
xchg
xchg
xchg
outsb
repnz
mov
repz
aad
push
push
inc
jg
xchg
dec
add
cmpsl
ljmp
adc
es
inc
in
icebp
push
mov
sarb
add
loope
test
js
cs
pop
pop
scas
push
xor
dec
mov
fwait
js
mov
ret
ds
add
pop
cwtl
mov
js
dec
jge
sbb
mov
cld
into
inc
inc
mov
dec
push
nop
insb
ja
or
fsubl
push
xchg
and
shrb
faddp
or
mov
or
push
or
dec
in
aad
test
fwait
movsb
lret
outsb
fildll
out
cmp
aaa
outsb
pop
jns
in
repnz
ficompl
subb
mov
mov
cmpsb
dec
lods
mov
lea
mov
fildl
fwait
mov
sbbb
shll
cmc
aad
fisubs
xchg
imull
mov
fnstenv
or
jmp
sbb
mov
xor
es
loopne
je
sub
and
lcall
dec
sbb
cmp
inc
sbb
push
add
jno
pop
fidivrs
add
cmpb
xlat
mov
sbb
loopne
clc
ret
xlat
movsl
or
sub
mov
mov
repz
out
pusha
stos
js
test
or
cmp
addr16
scas
dec
movsb
jp
dec
into
or
adc
xor
dec
add
pop
std
jns
add
jmp
push
xor
scas
xor
xor
repnz
outsb
sub
enter
add
cld
push
mull
repnz
fbstp
popf
testb
cwtl
jns
cld
repnz
faddl
dec
sbb
fwait
mov
aas
das
jmp
sbb
nop
add
cmpsb
cmp
test
cmpsl
jl
enter
pop
shlb
jno
xchg
jmp
rorl
ss
dec
xor
es
mov
ss
mov
jnp
adc
loope
mov
jp
std
divl
ud1
xchg
xchg
les
imul
jns
jp
subb
jne
nop
jle
mov
mov
or
and
adc
adc
mov
and
cmp
pushf
popa
daa
add
fdivs
out
fisubrs
ds
pushf
jo
icebp
stc
sbb
lock
inc
push
js
repnz
stc
stos
inc
das
and
stos
mov
int
fxch
je
mov
mov
fucomip
stc
test
fbstp
scas
mov
lcall
arpl
xor
xor
int
movsb
das
jbe
test
rcrb
dec
or
aam
test
decb
orb
jnp
mov
ljmp
es
notl
bound
xchg
ret
scas
in
mov
push
add
push
mov
arpl
fdivs
or
mov
mov
and
imul
loope
inc
dec
aad
leave
xlat
movsl
in
adc
movsb
xor
cmp
js
or
mov
std
push
mov
cmp
mov
xor
jge
negb
sbb
fimull
outsb
addr16
inc
xchg
jmp
sub
fisubrs
mov
popa
cs
cmp
pop
cmpsb
stos
iret
cmpsb
cmpsl
inc
and
mov
push
lcall
sub
push
cmc
lds
lods
out
cs
imul
sbb
and
adc
fsubl
adc
lahf
push
mov
std
cli
lahf
sarl
xchg
in
lds
fwait
jl
test
std
nop
cmp
push
push
into
ret
or
shll
sub
xchg
adc
push
jbe
imul
jle
mov
mov
stos
cmp
scas
xchg
fcmove
mov
add
xchg
push
enter
das
inc
clc
lods
adc
jo
push
jl
cmpsb
mulb
test
pushf
out
push
fildll
inc
in
push
dec
pop
jl
sbb
push
in
fdivrl
inc
mov
js
inc
scas
mov
cmp
cmc
test
lcall
ret
insb
xor
pop
inc
add
mov
cltd
sub
fwait
mov
ficomps
outsb
cmc
nop
aaa
and
les
adc
nop
adc
adcl
or
test
popf
in
xchg
popa
push
cmpsl
push
or
jno
jno
adc
adcl
fwait
or
mov
push
sbb
popf
cmp
sub
inc
mov
or
sub
adc
movsb
mov
jp
mov
push
xchg
cmp
push
and
shlb
clc
add
cmp
inc
out
jge
adc
cmc
in
jge
mov
sub
add
push
icebp
icebp
loop
dec
test
not
xor
divb
fcmove
int3
xlat
adc
notl
dec
lods
sbb
and
jne
mov
lahf
imul
flds
hlt
mov
xor
mov
and
pushf
ficoms
cmp
cmp
and
jns
roll
pop
sbb
or
leave
inc
push
rorb
cmp
sub
mov
add
xchg
mov
lods
inc
pop
lods
dec
scas
dec
xlat
pop
fbstp
pop
push
cltd
mov
sbb
ret
mov
jp
ret
test
mov
inc
jae
ss
push
rolb
add
xor
cld
sbb
repnz
les
pop
pop
mov
call
dec
add
and
arpl
cmp
mov
ss
xor
inc
insl
std
test
ja
sbb
test
sub
negl
cwtl
fs
jl
adc
sub
movsb
push
or
test
mov
roll
das
les
push
mov
push
jne
adc
xchg
ret
shll
add
cld
sahf
ds
inc
inc
in
lds
push
daa
repnz
lock
adc
add
cmpsl
loop
shlb
push
mov
mov
clc
mov
shrl
jae
add
fsubs
lret
shll
fucomip
mov
cmp
xor
mov
daa
or
xchg
adc
rorb
cld
lods
clc
jnp
jno,pn
pop
sbb
outsb
pop
push
and
in
std
mov
push
and
jno
push
mov
sahf
in
adc
adcb
stos
mov
xlat
sub
js
insl
iret
call
mov
dec
popa
ret
add
sub
nop
jnp
inc
lds
pop
shlb
xor
lret
mov
inc
inc
cwtl
xchg
mov
jle
xchg
rol
icebp
sbb
lock
add
ret
cmp
aad
sbb
cs
shl
int
movsb
shrl
fistpl
shrl
dec
push
mov
sub
push
fbld
aad
cmpl
daa
sbb
add
andl
enter
mov
arpl
cwtl
enter
mov
push
je
stos
out
fwait
add
cwtl
sbb
rep
add
imulb
dec
ljmp
arpl
iret
int
xor
mov
outsb
lcall
mov
sbb
dec
push
mov
lahf
aas
add
pop
mov
inc
popf
adc
cmpsb
sub
pusha
mov
pushf
lcall
stos
lahf
addb
pop
shl
sbb
in
lock
les
add
inc
and
imulb
pop
andl
iret
pop
bound
arpl
sbb
shr
ss
ljmp
mov
mov
arpl
enter
xor
inc
rorl
rorl
xchg
lahf
push
push
xor
inc
pusha
lods
sahf
sbb
mov
iret
stc
sub
fiadds
fs
push
daa
xchg
ds
pusha
dec
and
ret
xor
lods
cltd
pop
xor
and
neg
icebp
in
loope
js
add
es
cmp
cli
pusha
shl
adc
pop
dec
push
mov
push
cmp
stc
inc
inc
scas
push
xchg
psubusb
xchg
in
jmp
mov
les
inc
jbe
mov
push
sbb
pop
mov
or
shrb
cmpsl
repnz
mov
mov
fwait
push
mov
mov
jo
pop
inc
mov
mov
xchg
andl
mov
cmpb
xchg
pusha
sbb
sub
aaa
push
dec
or
testb
shl
push
ret
inc
call
popa
ja
or
and
pop
jno,pt
xor
mov
int
gs
ljmp
cli
and
ja
packuswb
sbb
mov
cwtl
popf
lods
xchg
hlt
mov
in
test
popa
adc
nop
sub
fnsave
andb
lock
dec
ss
dec
or
filds
jecxz
xlat
adc
bound
fldl
xchg
lock
sarl
popl
inc
icebp
cmp
sarl
xchg
je
or
mov
sar
mov
sub
cmp
lcall
pop
stos
shlb
lret
aas
add
mov
testb
sbb
xchg
fwait
cs
pop
xor
cli
xchg
insb
or
or
mov
mov
pop
pushf
or
outsl
sub
xchg
and
inc
test
ret
cwtl
nop
mov
and
jo
cli
movsb
cmp
faddp
mov
dec
hlt
imul
pusha
stos
or
cmp
push
scas
rolb
pop
in
push
xchg
lret
mov
cltd
xchg
push
jl
sbb
jae
add
rolb
mov
adc
push
stos
lcall
addl
cwtl
and
add
jmp
pusha
scas
mov
add
loopne
pop
jp
mov
push
xchg
pop
aaa
sub
test
xchg
rorb
fwait
dec
out
xor
mov
adc
add
jl
xchg
xchg
lea
les
popa
pusha
sub
adc
pop
lods
pop
sbb
test
lcall
xchg
jb
xor
scas
loopne
inc
push
lods
rcrl
mov
push
test
ljmp
fnsave
mov
aad
add
ss
xor
test
sarl
mov
fxch
mov
js
das
loop
add
jl
shlb
push
xchg
or
xchg
pop
adc
lock
lret
mov
pop
mov
in
push
mov
ret
sti
pop
pop
aaa
insb
mov
or
xlat
pop
adc
sbb
leave
mov
dec
pop
cwtl
or
and
je
gs
test
cs
insl
pusha
sub
fldenv
shll
das
dec
push
mov
sahf
jnp
or
ret
cmpsl
hlt
fs
jle
pop
leave
push
xchg
out
stc
loope
outsl
adc
push
in
test
jg
sub
insb
fildll
popf
lock
rclb
jbe
pop
repnz
jno
add
cld
shrl
jle
push
sbb
inc
dec
in
push
pusha
shlb
ds
inc
loope
mov
testl
and
ret
leave
push
cmp
aaa
inc
push
pop
cpuid
ficoms
inc
dec
jg
popa
arpl
addr16
pop
scas
std
pop
sbbb
pop
jo
xorl
cltd
or
dec
xor
push
imul
das
movsb
cmp
xchg
ds
push
or
xor
mov
aam
jmp
adc
sbb
add
mov
insl
mov
mov
or
dec
push
dec
in
popa
int3
mov
iret
cs
shl
dec
decl
mov
mov
int3
repnz
xor
and
cmp
mov
clc
or
shll
sbb
inc
ss
lret
jge
and
fstps
add
jns
pop
add
mov
mov
jno
and
or
pop
cmp
add
push
and
es
push
mov
jecxz
mov
xchg
xor
xor
jns
cltd
jg
push
mov
arpl
fisubl
fadds
mov
sbb
sub
mov
idiv
inc
dec
xchg
jp
stos
mov
or
call
xchg
mov
lahf
cmp
pop
mov
adc
push
dec
jns
lahf
mov
loope
jno
test
mov
fistpl
push
scas
adc
cwtl
inc
mov
inc
mov
fdivs
mov
and
aad
cmc
jl
push
adc
xor
or
pop
adc
inc
lret
cmc
fisubrs
mov
dec
mov
popa
add
repnz
pop
scas
adc
jo
lret
rep
sbbl
pop
nop
pushf
movsl
cwtl
push
inc
scas
enter
loopne
sub
fsincos
mov
xchg
inc
sbb
hlt
mov
call
adc
lcall
out
push
jbe
shl
insl
push
pop
mov
pop
sub
mov
out
push
pushf
out
iret
push
enter
mov
cmp
pop
or
ret
xor
inc
insl
inc
ret
mov
loope
jbe
push
cs
add
adc
pop
inc
in
addl
test
ja
outsb
lods
stc
out
jne
arpl
ficompl
sbb
mov
lret
mov
out
push
lods
lds
lcall
jnp
inc
push
mov
pop
dec
mov
xchg
mov
sahf
in
dec
sar
cs
pop
in
sbb
js
test
sub
repnz
lea
lea
jb
addr16
mov
mov
push
daa
bound
test
jo
mov
adc
out
hlt
loope
push
adc
or
pop
mov
push
nop
add
xchg
sbb
mov
insl
aaa
or
dec
imul
test
lret
jne
cs
and
lret
add
cmpb
notl
icebp
test
sti
and
dec
adc
rcrl
dec
fwait
fwait
cmp
movsb
sub
es
movsb
jge
xchg
test
stc
mov
aas
aad
sarl
insl
repnz
fwait
out
es
call
or
jb
add
lcall
clc
in
aaa
out
fisttpll
loopne
addl
movb
nop
aad
lret
inc
xchg
fidivrl
call
push
test
dec
roll
pop
adc
mov
mov
out
imul
test
ja
pop
ret
into
sarb
cmpsb
test
fstl
xchg
sarb
adc
xchg
inc
add
adcl
dec
xor
adc
push
pop
imul
bound
lea
stc
sub
xor
push
xlat
jb
stos
imul
xchg
lods
data16
adc
out
jmp
fimull
xor
ss
xlat
cmp
ja
cmp
mov
mov
jecxz
xchg
insl
cltd
out
xchg
cmp
xlat
cmpsb
jb
repnz
loope
aas
jmp
and
and
cmp
in
leave
push
pop
sub
inc
aam
js
daa
mov
out
fwait
jecxz
adc
int
and
or
pop
jle
jnp
mov
sub
xor
cmp
mov
imul
dec
jb
shld
adc
add
mov
outsl
stos
jecxz
test
mov
dec
jp
add
fidivrs
imul
inc
mov
pushf
jne
adc
lret
out
mulb
out
mov
jmp
incb
repnz
cmpsl
fsubrs
imul
add
cwtl
push
int3
xchg
lcallw
jns
clc
mov
pop
lret
mov
add
cwtl
out
push
out
or
sub
mov
imul
xchg
xor
cmpsl
in
lret
shlb
inc
test
call
lds
in
push
adc
dec
mov
popa
push
xor
test
pop
sub
out
or
sti
jae
mov
pop
into
xor
mov
jo
sbb
inc
movsb
add
mov
test
sub
sbb
nop
xor
imul
rorl
stos
test
or
add
mov
pop
jb
insb
mov
push
push
test
xchg
into
iret
movb
stos
and
sbb
push
shll
push
into
test
stos
cmp
pop
icebp
ret
sbb
jg
jae
out
mov
xchg
or
clc
mov
and
mov
sahf
push
arpl
sbb
mov
dec
repnz
arpl
imul
mov
lock
sti
test
imul
push
imul
xchg
ficoms
mov
pop
mov
push
sub
clc
push
clc
into
popa
push
stos
add
or
daa
pop
mov
dec
xorb
mov
inc
mov
mov
jg
xor
vpinsrw
push
out
pop
inc
adc
xchg
mov
cwtl
inc
push
inc
cmp
add
adcl
cmp
cli
fdivrs
xchg
insl
imul
mov
lods
insb
mov
imul
or
popf
movsl
fdiv
xchg
mov
je
outsb
or
push
cltd
cmp
cwtl
pop
jne
adc
inc
fisubl
inc
loope
or
push
mov
cmp
cmp
out
jp
mov
sbb
sbb
sahf
sub
shlb
jnp
pop
rcll
lret
popf
fcmovnu
dec
pop
sub
stos
pusha
sbb
push
fstl
cmpsl
sahf
xchg
or
mov
or
cmp
data16
sub
sbb
cwtl
push
mov
jp
push
jae
pop
fs
test
pop
rolb
push
mov
subb
mov
ds
inc
adc
pop
arpl
lods
jle
mov
xorb
mov
cld
or
dec
pop
sbb
rorb
pop
out
pushf
cmc
push
sbbb
das
dec
jge
jl
mov
mov
ljmp
imul
popa
add
dec
inc
pusha
shrb
loope
aaa
dec
repnz
pushl
push
and
rcll
sub
mov
fstpl
stos
xchg
and
jl
enter
lds
mov
and
or
pop
int3
outsl
cmp
xchg
inc
test
iret
dec
push
mov
stc
jb
aas
jb
je
mov
mov
in
pop
sub
lea
insl
or
xor
inc
jae
in
mov
les
movsl
dec
inc
mov
jae
lods
cmp
pop
les
and
out
dec
loopne
insl
pusha
mov
cmp
pop
mov
jns
outsl
dec
insb
scas
daa
loope
mov
cmp
sti
mov
sub
push
pop
outsb
mov
loope
rcl
ret
add
adc
add
jg
dec
adc
rcll
mov
xor
pop
lret
xchg
add
imul
movsb
aas
dec
dec
mov
xlat
inc
cmc
repnz
or
inc
sub
aam
ds
pop
in
jo
aad
jno
inc
repz
mov
push
mov
fistpll
movsl
and
out
jle
hlt
bound
jle
lret
mov
clc
xor
popf
add
add
or
and
dec
enter
mov
sbb
lds
sub
out
mov
mov
dec
mov
mov
jg
mov
adc
sub
aam
stc
in
adcb
and
xor
lock
adc
and
jg
sbb
outsl
xlat
scas
repnz
mov
daa
js
nop
jp
lods
xchg
fsubp
pop
imul
sub
cmpsb
int
sbb
sub
scas
or
lahf
fcmovnbe
adc
stc
fnstcw
repz
movsl
adc
jg
push
xor
addr16
negb
fld
je
sbb
js
dec
fst
stos
daa
or
pushf
add
cmc
push
je
in
fsubrs
or
leave
mov
cmpsl
sub
add
cmp
arpl
fisubs
sub
xchg
lahf
movsl
push
out
inc
jge
gs
addr16
cmp
in
mov
loop
mov
or
xor
out
stos
xchg
stos
enter
jle
pusha
das
nop
add
inc
pop
scas
subl
jmp
pusha
xchg
mov
stc
aaa
mov
jge
mov
pop
imul
cmpsl
sub
in
xor
jne
jle
xchg
xchg
pop
negb
mov
in
lods
push
jg
sbb
out
add
pop
mov
inc
rclb
out
mov
xchg
mov
mov
mov
pop
cmp
adc
or
adc
dec
popa
mov
and
push
stos
in
fidivl
bound
pop
sbb
xchg
into
addr16
mov
adc
xor
sahf
loopne
xor
mov
in
and
push
sbb
scas
mov
sub
dec
mov
jp
cmp
sub
repz
dec
sbb
pop
xchg
je
sub
xchg
xchg
dec
xchg
dec
sub
push
leave
or
xchg
ja
mov
ja
jle
push
mov
or
js
and
addr16
sub
add
popf
aaa
lret
bound
pop
cs
sbb
cmpsl
enter
movsb
dec
mov
and
pop
mov
aaa
push
mov
push
dec
lret
dec
mov
pop
pop
sbb
and
insb
comiss
push
and
roll
jbe
fstpl
cld
dec
pop
inc
pop
pop
push
decl
and
add
int
add
test
loop
ret
mov
sbb
clc
pop
dec
push
iret
mov
scas
push
pop
xor
jns
cmp
loopne
xchg
xor
lcall
adc
xchg
jns
push
mov
out
or
mov
pop
dec
push
subl
stos
lret
adcl
lds
mov
pop
and
mov
and
mov
test
xor
pushf
dec
lret
pop
dec
and
mov
xor
adc
mov
out
dec
mov
lods
fs
popa
popa
xchg
xorl
insb
dec
mov
clc
notl
mov
add
xor
sti
cmpsl
and
and
ss
mov
shrl
shll
clc
sub
sub
addl
adcb
mov
aad
cltd
cmc
jae
xor
stos
nop
inc
jecxz
les
lds
mov
mov
sahf
xchg
mov
test
cmc
jb
sub
pop
data16
dec
jg,pn
adc
clc
cmpsl
in
stos
push
enter
loop
xchg
mov
jge
jne
mov
jmp
cmp
or
xchg
sarl
pop
mov
dec
push
pop
cmp
rorb
imul
adc
les
or
xor
lock
stos
and
pop
dec
add
jmp
sub
mov
jae
xchg
aad
cmp
adc
push
mov
pop
inc
stos
inc
js
shl
adc
out
pop
xlat
mov
jnp
divb
cmp
mov
xor
pushf
in
mov
pop
mov
lahf
sbb
adc
popf
sbb
pushf
imul
lds
in
sbb
loopne,pt
insl
aam
insb
jmp
incb
test
adc
enter
cmc
mov
mov
je
pop
mov
add
xor
add
fs
pop
cs
test
push
ljmp
outsl
xor
and
inc
ffree
push
test
fs
lcall
lds
push
mov
adc
dec
es
sub
mov
sahf
cmpsb
int
jmp
ficomps
scas
addr16
addb
stc
fidivrl
push
fidivl
div
orl
shll
adc
and
aaa
stos
adc
es
fwait
in
mov
cltd
mov
mov
mov
jae
cli
mov
adc
test
js
dec
mov
pop
push
push
out
rclb
ret
fiaddl
sbb
leave
ss
and
aam
int
dec
jl
push
ret
mov
pop
inc
adc
movsb
mov
aaa
cmpl
addr16
inc
dec
ds
dec
and
or
clc
cltd
movsl
scas
jmp
ror
pop
fmuls
xor
je
xchg
lea
inc
mov
pop
mov
lret
pop
jno
add
popa
jp
dec
mov
stos
sti
and
sbb
sub
xchg
inc
sub
push
xchg
aaa
dec
and
fcmove
rorl
push
ss
in
lea
in
icebp
ds
push
in
cmp
cmp
ss
movsl
scas
add
mov
fstl
aas
ljmp
pushf
mov
pop
fisubs
mov
pop
js
jne
int3
mov
out
mov
inc
pop
jnp
scas
push
inc
popa
cmp
int
jl
stos
jge
xchg
cmp
mov
inc
lock
xchg
cld
pop
and
into
cwtl
aad
mov
pop
jbe
lea
mov
addl
mov
jb
sbb
add
iret
or
out
inc
lret
in
ret
enter
cmp
jb
repz
jno
cli
or
mov
pop
push
int3
out
lcall
jp
in
fisubl
or
sti
adc
in
jbe
sbb
jge
aaa
repz
mov
jne
jb
call
nop
enter
out
loopne
cs
imull
and
xchg
and
mulb
sahf
inc
fwait
jmp
xchg
add
mov
mov
sbb
jno
test
lahf
jmp
cwtl
push
pop
jp
sti
lcall
pusha
or
outsl
jo
aas
jno
mov
outsl
in
nop
js
imul
arpl
and
movsb
das
call
dec
push
adc
push
pop
out
fdivrp
add
cmp
add
iret
rclb
cmpsb
test
cmp
test
aaa
pop
mov
mov
or
in
mov
sbb
fcmovbe
sti
in
lea
sbb
je
movsb
test
push
lcall
cs
mov
int3
ret
mov
dec
inc
xchg
icebp
lahf
mov
mov
jb
lock
cmc
int
xchg
fidivl
shrl
sub
pushf
or
sub
sub
inc
test
add
mov
aam
es
mov
in
lret
pop
add
popa
cmpsb
xchg
notb
cmpsl
stos
inc
jge
ds
add
push
popa
call
mull
hlt
lcall
mov
test
sti
lahf
push
mov
jle
or
xchg
sbb
jbe
adc
jmp
jnp
in
adc
das
nopl
mov
cmpsl
mov
xchg
das
rcll
push
int
lahf
add
test
adc
test
pop
cmp
cmp
ljmp
aad
jbe
dec
test
fwait
inc
adc
mov
cmp
int3
fistl
loop
je
add
mov
js
fs
sbb
icebp
cmp
sbb
mov
adc
or
out
push
lods
pop
or
lahf
lock
pop
ljmp
scas
cwtl
scas
in
jns
push
xchg
repz
jne
sar
cwtl
cld
xor
pop
push
jg
scas
clc
into
xor
in
inc
sbb
orl
das
sub
adc
lahf
stc
push
xchg
test
inc
dec
je
ror
inc
adc
loop
dec
loope
test
pop
adc
push
adc
xchg
les
mov
fimull
push
movsb
xchg
pop
popf
mov
sbb
notb
mov
adc
mov
xchg
xor
xor
pusha
push
sbb
push
add
xchg
repnz
int3
not
out
je
adc
movsb
jl
std
pop
push
out
cli
or
or
imul
scas
dec
pop
mov
mov
fbld
jb
call
push
aam
daa
pusha
or
inc
clc
shlb
push
out
bound
inc
subb
ret
stos
cmp
lea
lock
push
leave
xor
push
hlt
mov
xchg
add
gs
xor
aam
loop
cmp
rcll
adc
add
mov
xchg
adc
mov
fbstp
roll
insl
mov
mov
pop
outsl
adc
mov
push
xor
arpl
leave
cmp
daa
cs
hlt
mov
mov
hlt
scas
sbb
mov
fcmovnbe
pop
loope
lea
hlt
rcrl
lea
dec
mov
or
shll
sbb
sub
aaa
mov
lcall
sbb
pusha
outsb
cmp
loopne
fnsetpm(287
popf
call
lds
mov
dec
jp
negl
cmpsb
inc
fbstp
imul
mov
outsl
ja
dec
sbb
outsl
dec
js
fdivrp
mov
sub
inc
pop
jbe
mov
out
ror
outsl
mov
xor
hlt
inc
jb
rclb
mov
icebp
push
push
mov
jg
stos
loop
cli
ret
lods
fwait
sahf
pop
insl
xor
call
cmp
mov
aaa
xchg
test
out
pop
ret
inc
lret
sbb
xor
fmull
pop
adc
adc
int3
sub
xor
nop
orb
fs
stos
cmp
push
rolb
mov
pop
int3
cmp
xor
mov
cld
xor
and
lcall
in
aaa
aas
lods
in
sarb
insl
xor
and
sub
inc
xor
ret
and
insb
fisttpll
push
iret
int3
xchg
enter
scas
aad
pop
mov
outsl
sub
enter
and
out
mulb
fmull
mov
push
jns
dec
and
int3
fnstcw
out
scas
iret
shl
pusha
add
stos
mov
daa
nop
mov
pop
out
xchg
cltd
mov
jmp
and
mov
dec
adc
roll
xchg
movsl
xchg
popf
pop
sbb
push
int
or
xor
stos
bound
xchg
mov
pop
xor
fs
mov
add
bound
rep
add
out
out
inc
cli
lds
pop
out
sbb
jp
lcall
scas
jmp
jne
or
push
jne
leave
cmc
popf
jecxz
inc
sbb
push
push
inc
and
or
leave
mov
pop
rcrb
dec
mov
inc
mov
mov
divb
xor
sahf
sahf
or
out
ret
jmp
in
sub
sub
push
sub
cmpsb
aam
movsl
pop
jp
sub
shr
out
lods
mov
stc
inc
inc
cmpsl
and
xchg
jns
int3
mov
adcl
cmp
jmp
jns
xchg
dec
inc
fnstcw
add
je
gs
fstpl
adc
inc
les
stos
incl
pop
nop
mov
adc
sbb
mov
cmpsl
addb
inc
mov
add
jne
mov
xor
dec
out
insb
outsl
loope
arpl
hlt
pop
push
sbb
push
jl
mov
dec
lds
jno
ret
jo
xchg
inc
pop
jp
mov
mov
repz
dec
aas
add
clc
ja
loope
imul
jae
jg
jmp
sub
out
mov
dec
stos
xor
mov
or
dec
mov
and
scas
roll
sub
gs
outsl
jno
mov
pop
mov
xchg
push
push
lahf
inc
inc
orb
add
inc
jbe
xchg
fwait
mov
add
in
incb
cmp
imulb
cmc
xlat
pop
push
fildl
or
sti
ret
clc
push
mov
pop
add
lods
cld
negl
incb
push
mov
mov
ret
stos
outsb
xor
cwtl
in
and
cmp
push
shrl
adcl
ficomps
clc
inc
stos
fwait
push
xor
mov
mov
repnz
les
pusha
leave
stc
popf
cli
lods
xlat
lahf
negl
add
popl
push
inc
stos
ljmp
rcll
movsb
sahf
mov
aad
arpl
jb
loope
les
cmpsb
sbbl
testb
test
mov
pusha
sub
cld
xor
sbb
sub
mov
cmpsl
mov
lcall
or
push
pushf
inc
mov
out
adc
inc
xor
xchg
loope
pop
and
push
cmp
sarb
iret
movsl
push
inc
mov
insl
loope
xchg
aaa
daa
or
inc
es
lock
mov
enter
pop
cmpsb
xchg
sbb
test
fldl
inc
inc
lret
aas
ss
test
notb
pushf
test
repz
mov
jmp
push
mov
sub
pop
sub
mov
inc
mov
insb
fisttpll
inc
and
outsl
inc
dec
push
gs
in
sbb
or
inc
enter
and
lea
cltd
ja
jae
nop
mov
xchg
dec
dec
int3
add
push
loope
add
pusha
sbb
pop
addr16
jae
push
sub
sbb
xchg
jo
or
rcll
push
lret
mov
push
xchg
jl
and
out
aas
loope
shll
mov
cmp
lods
push
cmovnp
repnz
sbb
mov
cmpl
je
cmp
fidivl
fsub
arpl
dec
push
pop
ss
icebp
aaa
test
push
fldt
stc
out
in
add
fistpll
daa
cmp
add
xchg
ja
ss
jns
scas
cmp
arpl
pop
imul
fidivrl
xor
insl
rcrl
sahf
and
sbb
or
iret
push
sahf
pop
mov
push
cmp
xchg
pop
cmpsl
rcrl
out
dec
fdivrl
dec
dec
enter
test
dec
xor
gs
ds
or
mov
inc
xlat
or
mov
push
inc
pop
sub
nopl
mov
mov
out
sbb
les
lret
movsb
adc
or
xor
int
bound
movsl
inc
sub
xchg
sahf
mov
sti
and
cs
lret
add
das
inc
sbb
mov
aam
insl
adc
shld
push
fimuls
lcall
test
pop
mov
add
jbe
insb
hlt
xchg
repnz
scas
xor
push
sbb
jmp
pop
mov
cmpsb
push
mov
aad
repnz
mov
loopne
mov
add
pop
aam
xchg
or
mov
movsb
mov
shlb
scas
insb
fs
push
push
pop
xor
pop
movsl
pop
mov
inc
nop
jae
push
cld
call
or
mov
or
out
popl
out
and
xchg
sarl
in
test
xchg
ljmp
outsl
imul
clc
repz
adc
sub
cmpsb
inc
das
inc
mov
mov
mov
push
add
sub
fs
ja
fsubl
mov
shlb
push
jne
leave
pop
arpl
jbe
cli
rorl
mov
and
and
cwtl
mov
xchg
lods
out
dec
roll
sub
sbb
pop
adc
clc
imull
add
xor
add
ds
push
pop
mov
loopne
ror
int
or
das
sbbb
data16
ret
xor
pop
jno
pop
or
pushw
jge
jge
in
pop
push
ret
or
xchg
in
iret
cltd
cwtl
out
andb
push
pop
fisubs
dec
sub
popf
bound
mov
or
push
jno
inc
lahf
rclb
int3
test
push
sub
je
mov
xchg
pop
into
call
std
lods
or
jb
pop
pop
mulb
hlt
negl
sbb
add
push
mov
pop
push
jb
shll
xchg
jg
test
jle
dec
jecxz
xor
xchg
inc
pop
int3
xor
inc
pop
pop
or
mov
or
int
enter
xor
divl
push
cmpsl
ljmp
push
inc
jno
or
cmpb
sbb
out
test
mov
pop
or
jns
nop
mov
or
int3
daa
test
mov
inc
les
xchg
pop
aaa
adc
hlt
sub
shll
and
sti
pop
push
mov
iret
inc
dec
cmp
test
das
ror
mov
shlb
jge
adc
jle
ss
shrb
adc
push
mov
xchg
clc
shrb
jmp
xchg
add
pop
in
lods
lods
out
test
mov
inc
jp
inc
js
loope
xlat
and
mov
les
das
xchg
dec
mov
sub
xchg
imul
dec
fdiv
dec
or
es
mov
inc
xchg
adc
fildll
int3
test
jle
inc
imul
add
dec
std
add
xchg
push
mov
dec
adc
lret
aaa
dec
ret
xor
lret
and
iret
shl
and
push
jg
loop
test
sub
data16
lds
dec
jbe
sbb
or
jge
sub
loopne
movsb
or
pop
dec
sahf
add
mov
add
add
jb
inc
dec
rorl
les
mov
pop
dec
ja
jp
sub
repnz
out
pusha
iret
cmovge
sbb
inc
xchg
mov
xchg
adc
cwtl
nop
ss
pushf
arpl
jns
pop
inc
mov
fwait
cmp
sti
nop
cmp
rcrb
lahf
cltd
push
faddl
mov
sub
int
inc
sbb
add
scas
push
lret
lea
repz
rorb
xchg
sbb
xor
pop
jae
imul
inc
push
add
add
ret
xchg
add
pushf
negl
aaa
push
and
lret
xor
icebp
inc
adc
pop
sbb
rorl
fbld
pushf
adc
ljmp
popa
and
lea
pop
jp
ret
lcall
stc
inc
cmp
or
push
cmp
jecxz
jbe
jl
enter
test
push
jmp
ds
ss
sbb
int
mov
fsubrs
test
jb
pushf
mov
imul
adc
cmc
mov
sbb
cmpb
call
pop
or
cli
adc
or
jb
sahf
mov
pop
mov
test
data16
mov
int3
out
or
and
add
fnsave
pop
mov
outsb
jl
add
add
xor
call
pop
or
fwait
mov
loope
lods
jne
maskmovq
testl
mov
in
adc
mov
test
pushf
lahf
test
cmp
bound
dec
clc
daa
loopne
stos
cmpsb
addb
hlt
leave
hlt
push
ss
dec
fisttps
jo
xchg
hlt
push
ret
fdivl
cs
js
mov
in
imul
sub
insl
mov
stos
sub
mov
mov
cld
inc
xlat
scas
sub
sub
and
push
enter
fstpt
sbb
mov
int
dec
mul
and
jmp
cmp
pop
push
fists
mov
mov
mov
or
xchg
xchg
inc
push
mov
stos
inc
aaa
inc
pop
pop
dec
cmp
xchg
or
inc
xchg
ljmp
jmp
aam
insb
aam
inc
int
pop
popl
shrb
je
add
adc
cmp
inc
push
or
imul
pop
std
inc
rol
rorl
add
je
repnz
fcoml
test
ljmp
in
ja
or
and
insb
mov
enter
cld
mov
int3
imul
mov
push
mov
push
fsubrs
daa
push
xchg
xchg
test
add
into
sub
test
in
pop
stos
popf
mov
leave
cmp
cs
sbb
lock
dec
outsb
xchg
aaa
repz
mov
nop
mov
jns
sbb
mov
pop
mov
add
jne
push
mov
add
stc
mov
lret
dec
cmp
in
sub
shlb
fimull
test
loop
sub
repz
pop
pop
test
aam
test
cmp
in
dec
fnstenv
stos
shl
and
cmp
aad
xor
sub
je
test
xchg
scas
out
sbb
loope
cmp
and
pusha
and
jae
xor
fstpl
jns
push
mov
mov
mov
mov
lock
das
mov
mov
ds
push
cmp
jnp
fcomps
dec
jp
daa
xchg
lret
fistps
or
lret
or
and
nop
cmc
add
sub
xchg
loop
ds
jge
shlb
mov
mov
cmp
stc
cwtl
or
lahf
aaa
pop
mov
mov
insl
jl
mov
xchg
push
fadds
and
test
jmp
sub
push
insl
ds
mov
mov
out
mov
xor
loop
out
and
dec
fcomps
xchg
adc
adc
icebp
adc
pop
xchg
pop
mov
pop
or
out
fisubrl
dec
clc
push
add
cltd
pop
das
xchg
xor
dec
jge
test
push
enter
loopne
jbe
cmpsb
movsb
push
test
jmp
call
clc
shrl
xchg
cwtl
js
cwtl
sub
xchg
dec
dec
shll
add
and
in
or
enter
test
dec
shll
dec
cmpsb
cli
test
test
mov
imul
mov
sbb
cmp
xor
jg
mov
cmp
not
sub
outsl
add
dec
mov
mov
fwait
test
mov
pop
movsl
pusha
fwait
out
sbb
jb
repnz
js
push
enter
push
das
jmp
out
test
sub
pop
aam
adc
dec
stos
repz
cli
gs
movsb
push
mov
add
mov
adc
movsl
mov
nop
mov
fcoms
adc
sahf
xchg
stos
and
and
or
and
sbb
fildl
lods
or
ret
int
addr16
pop
cmp
mov
dec
mov
xchg
jne
sbb
ret
sbb
mov
imul
jo
sbb
jl
pop
int3
cmpsl
adc
adc
mov
push
or
sbb
jle
rolb
fcmovnb
insl
mov
mov
mov
stos
jae
shlb
in
push
or
xchg
aaa
aam
ret
arpl
jecxz
jo
out
dec
mov
rorb
xchg
mov
jb
sahf
cli
cmp
and
and
arpl
pop
push
and
mov
fcoml
xchg
inc
or
aam
arpl
cmpb
mov
stos
mov
push
adc
cltd
push
mov
pop
movsl
repnz
dec
and
cmpsl
mov
lock
sub
subb
scas
insb
repz
xor
jnp
lock
jg
repnz
cmp
add
sbb
push
sub
subl
cmp
ret
jp
xor
adc
cmp
shlb
imul
es
pop
ds
xchg
hlt
addb
dec
xchg
mov
ret
sub
stos
lock
repz
or
cmp
push
push
sub
pop
jns
into
insl
xor
mov
sbb
adc
push
sbb
popa
inc
add
mov
in
sbb
sbb
pop
ret
sbb
outsb
imul
xor
scas
and
inc
pushf
push
mov
mov
xor
call
movsb
dec
dec
mov
pop
add
out
sub
jle
mov
sub
push
pop
fxch
sbb
mov
mov
and
cmp
mov
push
adc
cmovge
fsubs
lods
inc
sarb
mov
ljmp
xchg
mov
xor
fstl
ficoml
pop
add
ret
jecxz
shll
sub
mov
inc
hlt
jbe
outsb
addl
dec
add
lcall
fisubl
fisttpll
pushf
xchg
fcmovbe
mov
dec
and
sarl
lcall
mov
loop
addr16
and
je
shlb
mov
repz
fistl
mov
out
jmp
sub
rorl
mov
xor
loope
or
faddl
pop
cmp
rorb
aam
cmp
call
jle
or
adc
cli
mov
inc
lret
jae
outsl
cld
das
aas
hlt
fstl
popa
sti
pop
hlt
mov
cmpb
icebp
rol
push
orb
adc
adc
into
mov
imul
repnz
adc
lods
mov
dec
cmpsb
sahf
js
dec
lods
and
out
loopne
adc
das
mov
filds
test
js
ds
test
push
jl
dec
adc
pop
andb
cwtl
rcl
jl
xchg
notl
inc
jae
fisubs
push
aaa
andb
daa
js
mov
jecxz
push
push
loopne
mov
lock
or
insl
mov
fcomps
mov
dec
xor
dec
sub
out
rcrl
inc
out
sub
jae
mov
dec
in
fbld
mov
or
fiaddl
sbb
push
ss
and
fnstcw
cmp
xchg
cmp
enter
jmp
jmp
imul
xor
pop
xor
jns
inc
ss
pop
aas
lea
jno
inc
movsb
and
in
adc
fbstp
insl
jne
jnp
jae
jl
pop
fiaddl
ljmp
mov
mov
mov
mul
inc
das
mov
cmpsb
aad
add
or
icebp
inc
sti
lods
cmp
enter
ljmp
rclb
shl
fidivrs
pop
pop
dec
mov
scas
jecxz
sbb
daa
rcll
cltd
cmpsl
mov
js
shrd
lret
or
out
rorb
lret
and
jae
sarl
dec
xor
mov
fildll
in
or
xchg
mov
xchg
lock
or
jns
inc
xor
pop
sub
xchg
movsl
push
aaa
jnp
andb
clc
mov
sbb
add
add
in
adc
inc
vorps
ss
nop
andb
jecxz
and
ja
mov
cmp
jae
cmc
lret
dec
sti
aas
cmp
nop
xchg
xor
sub
in
push
push
jg
pop
dec
movsb
mov
mov
pop
js
add
repz
ret
sbb
ds
push
insl
lcall
jmp
sub
cmp
rcrb
xchg
arpl
fistpl
xchg
into
mov
outsb
ljmp
ss
cs
add
jb
xor
push
int
gs
rorb
fcomi
sub
xor
cmp
fsubl
push
cs
stos
je
ret
xchg
aad
cs
jno
fdivrl
je
jge
add
arpl
xchg
loopne
imul
dec
movsb
xor
lock
xchg
sahf
jmp
lds
dec
cmp
or
xchg
xchg
lock
lcall
out
pop
std
lea
jmp
push
cmp
add
pushf
xor
addr16
mov
arpl
insb
add
stos
insl
test
push
stos
out
mov
mov
ss
jp
adc
sbb
push
je
xchg
push
add
rcrb
insb
enter
dec
pop
xor
mov
pop
aam
icebp
addr16
xchg
dec
xchg
popa
stos
push
out
push
sbb
mov
xor
pop
adc
sahf
out
pop
pop
mov
adc
cmp
test
rol
les
fwait
sub
mov
mov
sbbl
orb
fucomp
arpl
jno
xor
jecxz
lret
js
or
push
outsl
push
mov
ficomps
cwtl
out
jae
ss
inc
mov
cmp
dec
jnp
or
or
decb
jge
fcoml
mov
sbb
js
xchg
add
xchg
std
pushl
lods
mov
rcl
es
sti
mov
jbe
mov
gs
mov
sahf
mov
std
mov
dec
mov
push
shrl
loopne
mov
cmp
stos
inc
sbbl
mov
cmp
sub
or
push
or
adc
mov
leave
mov
xchg
cmp
shlb
pop
outsb
movsl
cltd
mov
dec
cmpsb
xchg
into
loope
cmp
ret
and
adc
in
mov
xor
ss
xchg
push
mov
cmp
xchg
test
xor
pop
cmpsb
cmp
nop
mov
scas
cmp
dec
adc
ljmp
cmp
popa
or
xor
call
add
pop
xor
mov
leave
addr16
lcall
and
lcall
xchg
lods
imul
jecxz
cltd
insb
andl
inc
jp
and
pop
testl
sub
or
popa
leave
sti
jnp
push
push
shlb
insl
xchg
cmovg
insb
cld
je
into
fidivs
xlat
cmpl
fsubr
out
out
rorl
fwait
hlt
xor
ret
add
and
out
and
jo
xchg
push
scas
mov
dec
into
pusha
push
jae
bt
rcll
dec
out
jae
fistl
lahf
into
hlt
jne
mov
rcll
sub
add
or
gs
sahf
out
lcall
dec
repz
flds
mov
insb
sahf
inc
or
jl
add
fnsave
pop
pop
mov
cli
fcoms
cmpsl
arpl
jle
cmpsl
cmp
ss
adc
xor
fidivs
xchg
aas
push
cmpsb
and
or
loop
and
mov
lcall
jg
loope
adc
xchg
mov
adc
cli
dec
pop
lret
ficoms
inc
or
dec
sub
xchg
ljmp
lock
fmull
jnp
add
cwtl
and
jge
add
sti
jmp
adc
pop
mov
pop
add
sub
into
cmc
test
jle
mov
jmp
fistps
xor
sbb
test
test
cltd
iret
mov
mov
add
cmp
xchg
push
or
inc
pop
mov
iret
sbb
lret
or
jnp
or
out
iret
dec
dec
hlt
push
and
scas
lcall
sbbl
cmp
repz
sahf
aad
inc
xchg
daa
xchg
jbe
insb
sbb
ljmp
mov
sub
pop
out
mov
adc
les
push
cmp
xor
mov
mov
push
aas
stos
xor
and
xchg
scas
mov
mov
pushf
jnp
mov
jnp
test
clc
push
test
xchg
leave
xchg
cwtl
ljmp
jl
mov
stos
mov
adc
pop
stos
inc
cmp
lock
cmp
push
hlt
enter
fucompp
dec
imul
sti
test
xor
out
inc
cs
repz
cmpb
xor
sbb
and
inc
jecxz
mov
shlb
mov
sub
jnp
ficoms
add
shll
inc
cmpsl
xchg
aas
cs
sub
scas
out
and
aas
into
test
nop
fildll
adc
aas
fidivrl
and
or
mov
int
lods
add
add
rcl
adc
or
jge
cmpsb
dec
pusha
mov
iret
mov
or
sub
ret
ficoml
orl
push
cmp
inc
cmp
in
imul
jl
mov
mov
adc
pushl
dec
icebp
and
mov
mov
dec
sbb
fucomp
ja
daa
outsl
lahf
or
or
mov
mov
dec
sbbb
clc
popa
and
pop
stc
jmp
cmc
and
insl
jns
cmp
lods
addl
sbb
add
ret
ljmp
pop
sbb
pop
loop
test
nop
fs
cld
ss
add
jp
les
jg
arpl
stc
push
sub
cmpsb
sbb
js
xor
push
jecxz
jecxz
mov
add
push
sub
imul
scas
push
sbb
xchg
pusha
adc
xchg
cs
movb
sub
ret
lds
loopne
out
mov
or
pop
pop
lods
js
mov
inc
loopne
jns
jo
iretw
dec
fcmovu
out
insb
cmp
nop
jg
lret
xlat
ret
loop
cmp
je
mov
mov
inc
rcrb
call
ficomps
pop
adc
mov
out
ss
lock
ds
adc
mov
fidivrl
clc
sbbl
xchg
out
test
ror
ret
jle
mov
inc
imul
in
mov
add
cmp
loope
add
lahf
mov
xlat
add
add
or
add
cmc
imul
xor
push
sub
es
xchg
add
xchg
jae
adc
cmpxchg
notb
push
insl
and
test
cmp
sub
inc
enter
cmpsl
adc
dec
ret
lahf
pop
call
sbb
and
xchg
lretw
and
insl
dec
lret
push
in
sub
cmp
pop
js,pt
pop
pop
mov
push
rclb
push
mov
xor
mov
mov
xchg
xchg
divl
mov
arpl
scas
movsl
insb
into
mov
adc
adc
sub
hlt
ret
cmp
cltd
fldcw
mov
add
rcl
mov
mov
andl
pop
push
inc
dec
and
int
dec
shl
or
mov
xor
insb
loop
dec
xchg
lcall
out
insl
test
pushf
mov
jnp
cli
mov
adc
xlat
test
and
jo
movsb
lea
add
mov
fcomip
dec
clc
ss
ret
cltd
cmpsb
jno
jl
aam
dec
xor
mov
ljmp
sar
lods
repz
cmp
xor
push
mov
mov
test
repz
outsl
mov
sbb
int
test
bound
mov
cmp
adc
or
fistpll
cmpsb
shll
ficoms
sub
xlat
shll
movsb
in
jns
mov
insb
sub
dec
inc
inc
inc
fs
xchg
addr16
jge
xchg
xor
sbb
dec
pop
ss
cltd
dec
mov
jecxz
arpl
dec
jnp
sbb
inc
xchg
jp
stc
and
sub
in
xchg
jns
bound
test
aaa
sub
loope
mov
orb
pop
ss
mov
es
jge
into
and
or
leave
mov
sbb
int3
add
and
jl
jne
inc
jne
push
int3
ret
xchg
sub
push
xchg
mov
pushf
lret
outsb
or
xchg
mov
xor
lahf
mov
or
jno
push
dec
pop
cmpsl
mov
push
add
push
jge
or
leave
lods
adc
xor
cs
icebp
loop
cmc
test
jnp
pop
insl
adc
jnp
push
fcomp
mov
decb
pop
clc
push
mov
int
das
add
fistps
bound
and
or
shlb
push
dec
cmp
jns
mov
pop
bnd
mov
mov
dec
roll
mov
cwtl
or
pop
outsl
mov
add
jns
jb
push
push
es
or
mov
push
mov
push
leave
std
push
jmp
jmp
jns
mov
mov
xor
dec
add
fmuls
das
jecxz
and
stos
add
fcmovnbe
es
mov
sbb
sub
fcoms
lret
adc
rorb
mov
ljmp
mov
pusha
ja
inc
mov
add
sahf
pop
adc
testl
je
mov
add
cmp
pushf
aaa
dec
push
dec
cmp
xorl
cmp
aaa
cmp
add
fwait
adc
sbb
or
xchg
xor
xor
cmp
out
jae
ds
pop
cmp
jmp
and
daa
andb
cmp
jl
inc
cmpsb
xchg
lret
xor
mov
ret
in
mov
mov
push
sbb
stos
sti
cwtl
test
mov
mov
mov
cmp
and
lods
scas
nop
jle
and
testb
out
ror
inc
push
xchg
hlt
cs
push
xchg
xor
int
pop
xchg
shrb
push
sub
mov
imull
pusha
popa
aas
pop
sub
pop
clc
sbb
mov
cmp
push
xchg
sbb
pop
add
or
mov
je
rorl
addl
sbbb
sub
or
std
insl
test
sub
in
jmp
mov
test
adc
fs
push
lea
scas
popf
cmp
inc
mov
mov
xchg
in
lcall
jle
pop
lret
mov
sub
out
mov
or
pop
fsubs
nop
jns
dec
dec
inc
stos
dec
je
cmpsb
out
jle
mov
jae
xor
data16
sub
lock
mov
dec
ret
mov
jmp
movsb
cmp
in
lcall
pop
not
jecxz
sub
dec
xchg
test
mov
inc
int
xor
stos
push
aad
nop
int
scas
sub
jae
pop
leave
mov
sbb
push
shlb
xchg
sub
pushf
hlt
out
test
jne
xchg
mov
out
jl
outsl
negb
sbb
jb
outsl
cld
xlat
jo
cmp
mov
jl
enter
inc
pop
cmp
loop
inc
pop
sub
or
or
cmp
cli
call
repnz
scas
mov
or
mov
sub
movl
in
or
scas
push
stos
cmp
js
sti
mov
cli
cmp
mov
std
sbb
push
into
xchg
add
add
inc
adc
fsubrs
test
push
repz
mov
lret
push
mov
xor
mov
cmpb
pop
inc
mov
push
nop
mov
cmp
fadds
jb
lret
jge
xchg
mov
push
inc
negl
push
outsb
cmp
mov
cmp
cmc
ss
mov
xchg
sub
jge
ds
subl
pop
sbb
jno
mov
cmp
or
push
sub
mov
stos
mov
lods
popf
aaa
pop
cmp
mov
fisubrl
dec
aas
sub
test
subb
jecxz
adc
icebp
shll
cmc
dec
mov
xchg
push
dec
lea
sub
push
mov
adc
or
dec
mov
lret
les
stos
sub
jb
arpl
and
cmp
in
pusha
sub
mov
ficomps
out
mov
sub
outsb
mov
inc
cwtl
and
test
mov
and
bound
movsl
repz
mov
dec
mov
dec
fidivrl
push
in
aas
mov
popa
loopne
insb
dec
add
bound
fidivrs
fsubrs
lret
mov
dec
les
out
pop
lret
add
cmpl
lcall
mov
and
inc
mov
repnz
adcl
fisttpl
int3
aaa
and
imul
add
mov
iret
sti
add
ficompl
mov
std
xlat
call
lcall
ljmp
mov
repz
adc
sbb
xchg
push
addr16
repnz
sbb
mov
mov
ljmp
insl
xchg
ds
or
insl
inc
sub
xchg
xchg
loop
pop
xchg
test
movsl
scas
test
insb
mov
adc
and
add
and
mov
pop
adc
or
sbb
hlt
mov
push
std
imul
addb
cltd
rclb
inc
adc
sbb
mov
xchg
mov
mov
stc
adc
adc
into
bound
add
sbb
sbb
aam
lahf
loop
adc
jo
rolb
lods
mov
cltd
push
inc
jb
pop
sbb
int3
jae
jmp
mov
sarl
insl
cmp
aad
adcl
add
push
enter
push
stos
imul
sub
into
dec
and
lods
and
cmp
addr16
incb
add
mov
dec
adc
pushf
mov
test
scas
adc
fwait
jecxz
jne
push
jge
lea
adc
jo
sbb
add
insb
imulb
fists
rcl
popf
add
xchg
ljmp
fidivs
or
add
xchg
mov
fwait
push
scas
inc
push
jp
sub
int
push
clc
sub
sub
imul
test
mov
or
out
leave
imull
lret
cmp
xchg
scas
xor
mov
xor
dec
xchg
movsb
xorl
cmpsl
shll
push
mov
inc
sahf
push
add
pop
lods
aam
mov
push
pop
xlat
scas
pusha
dec
adc
xor
test
xor
mov
inc
and
cmp
fs
mov
movsb
pop
in
pop
cmp
ds
in
scas
sbb
aad
jb
sub
mov
adc
add
pop
mov
aam
pop
jns
pop
in
inc
es
sbb
mov
test
jecxz
adc
jns
or
stos
test
test
or
pop
xchg
add
xchg
test
cwtl
push
imul
cs
jl
push
sub
gs
mov
adc
adc
stos
sahf
hlt
xor
mov
xchg
xor
adc
xchg
dec
je
add
adc
mov
inc
test
xchg
bound
lods
mov
fimull
fmuls
sbb
jnp
or
movsb
dec
lret
outsb
loopne
pop
gs
lock
push
xor
inc
xchg
imul
inc
movsl
fdivl
adc
ja
push
in
mov
push
xchg
imul
jo
jo
scas
sbb
adc
movzbl
rolb
sub
xchg
inc
loop
jb
adc
sub
jbe
fs
adc
mov
sbb
xchg
or
int3
xor
cltd
pop
adc
or
outsl
adc
adc
mov
imul
mov
dec
stos
mov
test
mov
inc
xchg
std
pop
in
and
pop
sub
enter
mov
push
test
fsub
mov
nop
adc
or
insb
subl
cmp
fisttpll
and
stos
pop
out
jo
in
int3
xchg
xchg
push
inc
push
nop
xor
call
test
addr16
sbb
shll
stc
ficoms
pop
inc
cmp
inc
pop
shr
jmp
data16
mov
std
sub
dec
jne
inc
jbe
cmp
dec
mov
out
dec
orl
std
outsb
dec
ds
cmp
pop
mov
dec
pop
push
mov
sti
add
cmp
xchg
imul
lods
push
icebp
push
wbinvd
in
mov
mov
or
jo
popa
pusha
sbb
dec
jl
cmpb
sbb
outsb
jl
pop
add
les
adc
fiaddl
adc
cmp
push
sahf
push
push
mov
stos
cli
add
mull
jge
add
mov
stos
mov
scas
shlb
addl
fistl
jo
lret
add
cmp
jge
mov
stc
adc
out
pop
adc
add
xorb
xchg
lock
mov
fldl
sahf
mov
mov
imul
shll
daa
push
xor
dec
or
dec
das
pop
lret
mov
sti
in
xchg
addr16
inc
mov
insb
push
mov
xchg
jg
cs
and
dec
dec
fwait
shlb
jo
or
stos
in
rorl
or
lahf
sbb
or
lret
mov
adc
xchg
stc
mov
cwtl
fcoml
loop
cwtl
cld
testb
daa
dec
inc
out
pop
mov
int
js
shr
push
jae
das
fidivrl
dec
rclb
or
xor
pusha
inc
xlat
xor
jge
or
fdivrs
push
adc
cmp
and
mov
inc
jnp
mov
adc
gs
cmovne
in
jb
imul
push
pusha
and
insl
xor
leave
jae
xor
jmp
aad
fldl
jmp
cltd
xchg
push
jno
pop
cmpsl
or
push
inc
leave
push
push
sbb
nop
pushf
sbb
shlb
inc
sarl
outsl
out
fs
push
push
mov
rclb
mov
enter
out
pushf
cmc
mov
mov
xchg
pop
mov
jo
push
jecxz
adcb
aas
out
movntq
imul
incb
inc
mov
es
mov
or
push
mov
adc
jle
vsqrtss
addb
jo
jmp
dec
call
sbb
add
xchg
mov
xchg
push
cs
imul
pushf
imul
push
cmp
aas
push
popf
sbb
or
cmpl
pop
add
pop
xchg
call
jno
dec
cmp
mov
sbb
inc
sbb
les
jno
cmp
es
xchg
or
ret
mov
leave
push
sbb
jl
popf
xlat
in
out
in
add
imul
pop
stc
push
dec
cmp
jl
arpl
test
add
ficoml
dec
push
stos
rol
push
jbe
test
into
or
in
jns
fidivrl
mov
in
in
push
xor
fwait
enter
mov
dec
inc
insl
and
mov
jle
pop
add
cmc
sub
aam
or
into
shrb
sub
test
xor
arpl
int3
into
lcall
movsb
mov
test
in
fbstp
bswap
and
lock
mov
mov
mov
add
scas
add
iret
add
jbe
sbb
cmc
in
mov
jo
inc
leave
ss
sarb
lds
push
sub
lcall
loop
lret
push
add
jb
jmp
xor
xchg
pop
arpl
lea
and
mov
jno
std
mov
cmp
fsts
std
insb
or
push
mov
mov
jg
ds
mov
mov
dec
mov
inc
push
imul
push
add
call
sahf
mov
fisttpl
mov
add
inc
mov
xor
loop
add
fstpt
push
addl
std
cmp
mov
test
lret
xchg
insb
nop
or
cmp
dec
dec
aas
jge
xchg
fwait
adc
xchg
pop
or
in
inc
inc
xor
in
scas
addl
loop
jmp
ret
sbb
test
cmp
lds
lea
pop
jecxz
cltd
jne
popf
cwtl
mov
mov
test
lea
lret
mov
xchg
test
in
add
sbb
pop
mov
dec
xor
outsl
xor
jl
inc
mov
jge
mov
lahf
cmp
dec
pop
xchg
loop
insl
mov
icebp
mov
out
adc
outsl
push
push
mov
xlat
shll
std
test
pusha
push
cwtl
add
mov
adc
fs
decl
loop
jl
orb
jae
std
dec
lock
pushf
push
push
fcmovnbe
and
psllw
jge
xlat
insb
inc
xchg
fistps
imul
jno
loope
mov
pop
xchg
fsubl
fisubrs
rep
sti
fdivrp
pushf
push
lahf
mov
ds
loope
mov
jae
add
jo
or
jnp
cli
inc
sahf
or
add
scas
cli
mov
add
std
sahf
mov
subb
fsubl
bound
xchg
sbb
add
stos
sub
push
dec
stos
cli
loop
mov
test
cltd
invd
push
cwtl
sbb
stos
jg
inc
dec
inc
aam
sbb
push
jb
lret
shrb
pop
scas
into
mov
cmpsl
inc
jmp
aaa
cwtl
imul
lods
rclb
movsb
in
in
adc
add
mov
movd
js
xchg
and
jb
das
cmp
out
mov
sbb
push
rcl
aaa
in
enter
stos
hlt
xchg
xor
xor
lcall
test
lock
or
js
jnp
mov
mov
pusha
or
mov
cmp
and
cmp
xor
insl
inc
xchg
or
inc
mov
dec
lock
outsb
xorb
fnstsw
daa
cmp
mov
jle
cmp
shrb
pop
mov
cmp
xchg
jge
lcall
cmp
mov
cmp
lahf
cmp
sbb
dec
cmp
sbb
pop
or
loope
jne
adc
insb
ja
jb
jmp
pop
and
les
lea
test
push
mov
sub
scas
ljmp
inc
stc
or
dec
or
mov
popf
out
test
lahf
xchg
insl
xor
imulb
and
mov
jg
xchg
sahf
dec
cmp
andb
test
enter
sub
adc
mov
dec
jg
data16
sbb
or
pop
in
mov
test
das
imul
lahf
mov
xlat
iret
mov
icebp
pop
movsl
int3
lods
mov
xor
es
push
xchg
mov
jo
push
ret
jle
aad
in
leave
fsubrs
repz
lret
out
xor
addl
push
fmuls
add
mov
out
imul
call
test
pop
int3
stos
popf
outsl
enter
dec
jbe
mov
cs
push
xchg
inc
jle
jnp
pop
aaa
das
neg
xchg
mov
dec
out
push
andb
pusha
mov
xchg
test
jecxz
fidivrl
imul
push
out
mov
mov
jmp
push
lahf
subl
outsl
cli
shl
add
sti
or
dec
loope
aaa
imul
sub
movsb
es
or
push
xlat
clc
push
fwait
adc
jno
es
shlb
jns
fisubl
popa
mov
imulb
mov
push
cmp
testb
add
subl
mov
dec
cmpsb
les
cld
mov
mov
mov
push
mov
rcrb
push
scas
lds
negl
add
adc
dec
mov
std
sbb
stos
dec
repz
repnz
out
pop
leave
dec
pop
scas
push
nop
outsl
push
outsb
imul
and
push
mov
mov
rcrb
mov
adc
roll
dec
idivl
xchg
popa
in
push
movsl
test
insl
xlat
sub
test
and
sarl
inc
dec
mov
cmpsb
sbb
ds
mov
inc
xor
jle
cmp
movsb
fwait
mov
test
dec
dec
jg
add
mov
pusha
xlat
pop
shl
jle
xorl
cmp
fs
subb
jnp
push
mov
jbe
int
mov
or
repnz
popf
dec
cmpl
adc
sub
hlt
mov
stos
or
pop
pushf
xchg
sti
jge
jns
jae
faddl
lret
mov
xor
jl
or
nop
add
fimuls
test
sub
sarl
mov
stos
rcr
mov
in
ss
in
push
daa
mov
testb
xlat
cmp
arpl
cli
gs
sbbb
sahf
xchg
mov
mov
mov
mov
inc
jno
cmpl
lds
and
in
out
add
repz
lods
fdivrp
mov
jp
std
enter
xorb
mov
sbb
in
repnz
adc
insl
repnz
addr16
loopne
pop
aad
scas
cli
bound
mov
scas
es
or
ret
fs
repz
cmp
fdivs
scas
jl
js
adc
lods
les
into
sub
push
xor
pop
scas
adc
xor
popa
push
or
dec
stos
out
jle
fidivs
js
jg
rorb
fildl
cmp
movsb
mov
cmp
or
add
bound
int3
add
jns
xchg
xchg
sarl
jo
jnp
inc
cmp
sbbb
sbb
add
xchg
add
push
into
and
sub
and
mov
cli
and
adc
hlt
aaa
xor
cmpsl
push
enter
jl
xchg
sub
outsb
jbe
xorb
in
xor
jnp
add
lret
ret
cmp
lret
xchg
jge
outsl
or
pop
lret
xchg
dec
cmp
mov
insb
add
call
push
push
mov
dec
orl
dec
arpl
xchg
pop
lret
pop
mov
mov
sub
sub
outsw
lcall
xor
jae
jb
adc
push
or
xchg
icebp
rcl
aam
push
push
inc
lea
popa
xchg
jle
jb
outsb
cmpsl
sub
ret
mov
mov
iret
cmpsl
inc
push
jmp
pop
or
fdivrl
sub
add
popf
or
or
shlb
movsl
popa
sbb
pop
mov
mov
js
sbb
add
xor
repnz
sub
push
les
ss
int3
adc
leave
push
or
push
dec
add
repnz
sti
xor
cmp
fmull
mov
cmp
cli
xchg
xor
out
daa
iret
jl
stos
adcb
das
scas
sub
dec
jne
xor
adc
popa
aas
rcr
arpl
or
dec
fisttpll
fxch
nop
imul
arpl
clc
jge
lds
xchg
inc
gs
test
test
outsl
add
push
sarl
out
sbbb
test
dec
pusha
ja
adc
gs
aam
into
push
mov
inc
mov
push
adc
cmp
insb
pop
test
jno
daa
jae
daa
jl
add
push
push
jnp
mov
xchg
push
add
fincstp
sub
ss
jbe
and
ds
clc
cmp
int
adc
js
lock
jecxz
sti
pop
push
shr
xchg
sub
cmp
iret
and
push
jae
add
add
lret
in
rol
dec
mov
mov
negb
movsb
outsl
mov
xchg
pop
sahf
hlt
scas
sbb
sbb
test
arpl
outsl
adc
xor
int
cld
inc
mov
dec
testl
inc
and
xor
cld
jns
loope
jmp
xchg
cmp
push
outsl
push
dec
lea
ficoml
jp
mov
movl
sub
mov
dec
and
jmp
aas
lret
rcl
test
addr16
cmc
loop
stos
cs
adc
mov
lods
ss
fwait
push
push
xchg
ret
ret
sub
sub
mov
dec
sub
data16
sbb
or
outsb
sub
imul
pusha
test
jp
mov
insl
mov
data16
lret
out
pop
push
mov
dec
pop
cmp
inc
scas
icebp
mov
lahf
push
fs
loopne
into
mov
stc
cmpsl
adc
cmp
gs
mov
iret
out
pushf
and
mov
mov
sub
and
popa
and
stc
in
stc
imul
shrl
dec
test
pop
rclb
and
call
cmc
xor
fcmovb
add
and
pop
adc
jno
sub
mov
jl
mov
or
mov
jecxz
dec
xor
mov
or
arpl
jg
adc
and
in
or
xor
rcll
insl
sbb
jg
xchg
mov
dec
fwait
mov
ja
in
xlat
jmp
rclb
cmc
test
cli
mov
lds
jg
test
xchg
add
fidivrs
and
mov
inc
stos
leave
arpl
test
add
negb
fwait
popa
mov
and
fdivrl
cmpsl
mov
inc
fnstcw
pop
inc
jns
stos
loopne
push
inc
or
pop
mov
data16
push
dec
sbb
in
push
cmp
adc
push
mov
aad
mov
pop
push
cmp
inc
test
xchg
notb
leave
aas
cld
in
int
mov
shll
adc
inc
fisttpll
les
repz
or
lods
arpl
xchg
in
mov
cmp
lcall
mov
inc
mov
mov
sbb
fcomps
lea
dec
fwait
stos
jmp
add
xchg
mov
or
dec
and
push
xchg
cltd
cwtl
js
cmp
into
push
pop
lods
jmp
mov
fsubs
mov
dec
cmp
cmp
jle
or
negb
lock
xchg
lea
repz
cli
inc
xchg
xchg
mov
xchg
pop
rorb
and
outsb
push
pushf
adc
ja
pop
repnz
lahf
xor
aam
mov
xor
cmp
mov
lods
jl
cs
dec
push
stos
stos
rol
pop
cli
cmc
jne
lret
icebp
aad
and
xor
in
mov
icebp
insb
loop
pop
imul
sbb
inc
int
imul
jns
jecxz
cmc
repnz
pop
dec
shl
mov
in
popa
xchg
xchg
mov
sarl
lahf
xchg
xchg
xor
aaa
mov
loopne
pop
ss
mov
push
jmp
out
in
jb
ret
mov
call
das
shl
insl
stos
mov
iret
xor
jo
movsb
add
insb
xor
aas
pop
lods
inc
rorl
rcll
ljmp
outsb
pop
pop
cwtl
sub
adc
push
push
repz
dec
adc
and
xlat
ss
sub
iret
jp
movsb
pop
pop
xchg
sti
push
and
dec
imul
nop
bound
add
test
adc
cld
loope
add
push
std
xchg
push
call
insl
mov
out
mov
je
xlat
mov
add
pop
or
lret
ror
vaesdec
mov
dec
fdivrs
adc
mov
xchg
xchg
pop
cld
add
add
cli
frstor
xchg
cld
icebp
mov
not
cwtl
outsl
xchg
cltd
out
xchg
enter
pop
imul
aas
jle
and
jg
push
jmp
xchg
pop
xor
icebp
push
repnz
inc
inc
aaa
xchg
xchg
inc
pop
sbb
push
xor
out
jge
cmpsl
sub
mov
mov
inc
out
push
xor
cmp
mov
jg
fists
out
and
sub
imul
adc
push
pop
ret
scas
cmc
pop
jne
iret
cmp
movsb
addr16
outsl
mov
daa
adc
loop
cmovo
imul
imul
gs
pop
jo
mov
imul
dec
push
ret
dec
fsubrs
inc
push
ss
sahf
cwtl
dec
pop
push
lea
pop
inc
xchg
out
and
add
or
stc
pop
pusha
inc
add
popf
dec
fisttpl
jnp
adc
movsb
jmp
pop
lods
inc
lahf
sbb
sub
sub
inc
push
dec
push
je
pop
wbinvd
test
bnd
jae
repnz
test
sti
inc
pop
jnp
sbbl
sti
mov
cli
scas
jecxz
xchg
jne
out
stos
orl
adc
pop
je
jb
jb
sub
add
cs
mov
cmpsl
lock
add
xchg
sti
sbb
testb
ret
mov
fs
mov
out
into
pop
and
bnd
sbb
jae
hlt
loope
insl
fisubrs
mov
mov
inc
sbb
divb
cmp
and
ja
ret
xchg
mov
inc
cltd
shrl
aaa
call
xchg
sbb
imull
enter
data16
pop
lods
in
mov
stos
fmul
jb
xor
xor
adc
mov
stos
add
in
jbe
cmc
mov
rolb
mov
pusha
scas
sbb
sbb
pop
mov
cmp
and
cmp
data16
in
mov
inc
mov
inc
daa
mov
clc
mull
xchg
test
mov
add
leave
data16
in
pop
aas
or
aam
push
mov
rcrl
test
or
xchg
cmp
div
popf
inc
jge
mov
les
notb
fisttps
jmp
push
pop
mov
and
push
mov
nop
test
call
fucom
clc
mov
lds
int
lods
dec
frstor
jno
xor
lods
or
test
mov
ret
les
popa
ret
lods
push
pop
lods
fistpll
pop
inc
push
scas
cmp
sub
fcomps
fildl
dec
scas
adc
sub
inc
lods
movsl
call
out
add
ret
xchg
cltd
gs
les
adc
mov
cwtl
aaa
sub
rcll
out
test
adc
pop
cmp
bnd
stos
mov
xchg
flds
dec
push
sbb
xor
stos
or
xchg
les
das
hlt
mov
dec
push
scas
loope
insb
lret
mov
jo
push
push
andb
cltd
mov
mov
in
and
dec
dec
imul
getsec
int3
push
div
popf
addr16
lret
xlat
inc
or
xor
pop
mov
add
push
call
push
call
fs
fnstenv
add
mov
dec
inc
mov
outsl
call
mov
pop
int3
jecxz
push
cmp
imul
mov
jno
daa
sub
push
mov
xor
out
aam
xchg
rorb
in
into
sub
sbb
pop
movsl
enter
hlt
and
add
cmp
ljmp
aam
jle
lret
rcrb
shrl
les
cmp
std
or
sti
imul
jle
pop
pop
cltd
mov
mov
les
inc
cs
insb
sub
hlt
mov
sbb
lahf
in
into
push
xchg
movsl
adc
scas
xor
in
push
push
lcall
lret
das
mov
in
adcl
aad
stc
xor
popa
add
shr
frstor
orl
pop
fadd
xor
push
push
ljmp
mov
add
js
lret
or
inc
or
stos
dec
icebp
popl
les
pop
adc
xor
jg
std
es
cmp
fwait
out
pop
mov
js
add
pushf
mov
aam
and
hlt
add
call
scas
lods
xchg
cmpb
sub
fsubrs
shl
push
out
jns
mov
sahf
sbb
xchg
sbb
addr16
mov
mov
push
mov
lcall
dec
aad
inc
jp
les
jnp
sub
mov
repz
jnp
pop
dec
icebp
dec
sbb
mov
mov
insl
test
adc
push
sub
inc
repnz
sub
jge
int3
pop
dec
test
scas
hlt
pop
jge
lds
push
inc
orl
xchg
in
xchg
or
incb
test
call
cld
jbe
out
adc
lods
or
iret
daa
das
dec
xor
idivb
mov
mov
sahf
jb
cmc
push
arpl
cmpsb
and
add
in
jnp
xchg
movsb
insl
les
cmp
movups
and
add
adc
lea
icebp
dec
push
jmp
ret
shl
out
fbld
or
loope
pop
fnstcw
mov
insb
shl
sahf
test
jae
pushf
repnz
mov
aaa
dec
in
dec
pop
mov
mov
adc
addb
out
das
mov
jae
cli
loope
dec
mov
or
cli
inc
rclb
test
push
and
lcall
dec
jne
mov
int3
loopne
push
imul
jecxz
movsb
cs
inc
mov
mov
mov
jnp
pusha
popf
fwait
xchg
in
ja
mov
dec
cld
fucomp
jecxz
dec
pop
jp
sub
or
mov
lret
aam
in
sub
inc
mov
pusha
add
mov
jecxz
sbb
mov
push
pop
inc
cmp
jnp
repnz
orl
insb
mov
mov
imul
movsb
arpl
jp
das
jmp
or
mov
aas
test
shll
pushf
pop
addr16
out
add
mov
inc
cs
xor
sub
add
out
pop
mov
xor
ret
stc
and
dec
repnz
cmp
hlt
dec
push
out
push
test
dec
inc
loope
push
inc
bound
clc
test
xor
xchg
push
aaa
sub
inc
fisttps
lock
or
shrl
lahf
loopne
or
mov
sbb
movsl
enter
jg
pop
test
bound
adc
mov
scas
xor
xor
sub
lahf
icebp
xchg
jnp
mov
out
sub
cmpsl
xchg
pushf
mov
out
push
jl
sbb
repz
add
sbb
mov
gs
imul
daa
pop
or
mov
int3
fimuls
jae
sti
mov
adc
add
ret
pusha
ja
pop
and
xchg
sbb
fcmovnb
mov
aaa
ljmp
loop
jle
mov
pop
popf
cltd
ljmp
and
lea
sub
stos
xor
stc
xor
ret
mov
inc
fidivs
fists
jno
cwtl
enter
cli
add
dec
inc
fnsave
jns
mov
movsb
mov
icebp
insb
push
rclb
les
dec
jnp
outsb
icebp
fimuls
mov
sub
lcall
inc
inc
mov
pop
lcall
mov
es
lret
push
pop
jle
jo
inc
pop
mov
cmp
aad
fwait
mov
push
sub
insl
xor
xchg
sahf
addr16
inc
adc
gs
and
cld
js
inc
lods
lds
xlat
cmpsl
jo
std
or
lds
jnp
jne
mov
sub
mov
or
stos
cmp
push
lcall
leave
lds
pushf
iret
fisttpll
cmc
cltd
subb
dec
repz
and
mov
sti
sub
xchg
movl
popl
lods
cmp
lds
sbb
sbbb
repz
out
push
mov
pop
pop
add
fsubrl
sub
sub
pop
testb
mov
enter
xor
shrb
xchg
in
dec
lret
mov
inc
xchg
lea
pop
in
mov
xor
mov
xchg
or
cs
gs
loop
and
cmp
pop
or
xor
dec
sub
xchg
and
jmp
mov
mov
frstpm(287
dec
pop
into
add
ja
incb
xchg
not
data16
xchg
adc
sti
lods
ljmp
cltd
dec
adc
cltd
adc
cli
in
mull
mov
popf
sbb
mov
lret
inc
in
cltd
sbb
inc
rol
adc
pop
test
lea
xchg
adc
push
cmpl
lret
int
ja
cmp
sahf
xor
pop
add
jecxz
in
aas
out
out
movsl
pop
cwtl
sbb
xlat
push
xchg
push
daa
xchg
inc
sbb
lcall
pop
jns
add
and
mull
shlb
cmp
daa
xchg
insb
icebp
test
fidivrl
push
adc
xchg
mov
scas
popf
nop
xor
and
test
scas
mov
lds
mov
subl
cmp
repnz
dec
push
jnp
mov
mov
jno
xor
mov
data16
ljmp
imul
iret
pop
ret
mov
repz
out
add
or
pop
stos
nop
push
jb
rolb
jmp
sbb
inc
push
xor
cmp
sahf
in
pop
mov
negb
xchg
inc
nop
mov
jbe
movsl
ss
jle
sar
jne
pop
add
data16
leave
xchg
out
jl
std
add
jg
fs
mov
adc
stos
shr
movsb
mov
nopl
sbb
rcrb
pop
popf
adc
jne
mov
in
or
imull
stos
sub
inc
aas
jg
sahf
fmull
fdivrs
sub
push
in
test
pop
or
adc
insb
addb
mov
sbb
adcl
adc
xchg
push
lahf
dec
sahf
push
mov
push
in
add
das
jmp
add
jne
jmp
mov
dec
mov
add
push
pusha
xchg
cmp
lret
sbb
push
xor
shll
add
ja
push
xchg
ss
outsl
fs
push
lahf
xchg
leave
jae
jge
xchg
stos
int
inc
xchg
gs
int3
mov
leave
mov
dec
add
sub
popa
notl
mov
dec
arpl
jns
leave
mov
std
or
dec
sbb
movsb
sbb
pop
mov
xchg
pop
mov
pop
add
sub
je
mov
cmp
jl
mov
push
cmp
jae,pn
es
sbbl
xchg
addr16
out
or
scas
mov
sub
sub
push
decl
stc
cmpl
mov
in
loopne
scas
dec
push
clc
mov
xchg
sbb
aad
and
mov
xlat
push
push
and
les
cmpsb
jnp
lret
inc
fnsave
icebp
cs
inc
fwait
jnp
scas
movd
add
sub
mov
fcomi
jle
idivl
push
fucomip
jmp
and
in
mov
or
adc
mov
mov
cwtl
dec
or
adc
jb
inc
xor
ret
dec
mov
pop
dec
push
ljmp
push
sahf
push
push
test
mov
xchg
or
mov
push
jae
cmp
stos
push
dec
lahf
xchg
shl
inc
pop
jmp
lock
into
movsb
loope
push
pop
sub
mov
jo
aam
adc
dec
test
ficompl
adc
dec
pop
sub
mov
pusha
xchg
imul
mov
lods
in
xchg
test
das
push
test
sbb
sub
xor
popa
push
jns
inc
mov
lahf
jl
adc
ss
or
fsubp
mov
imul
call
push
jne
or
inc
call
and
sahf
pop
and
cmp
adc
and
add
mov
or
ret
push
repnz
test
push
pop
cmp
cwtl
fcomi
add
inc
pop
rorb
scas
mov
xor
pop
ss
popa
dec
and
pop
lret
add
movsb
cmpsb
int3
aaa
test
jbe
mov
and
add
lods
mov
or
ret
lea
mov
sub
fldt
adc
mov
mov
mov
std
push
and
mov
addr16
dec
lcall
out
aam
scas
in
iret
mov
shl
stc
mov
dec
add
and
repz
icebp
push
xchg
lcall
imul
daa
scas
dec
sub
pop
pusha
mov
mov
push
loope
xor
push
xor
mov
mov
dec
repz
shrd
inc
es
pop
push
mov
jg
mov
xor
xor
xor
cmc
test
or
fwait
pop
lret
sbb
sub
push
and
ja
sbb
pop
cmpsl
in
test
lock
movups
cmc
std
sar
mov
sbb
and
movsb
inc
fildl
jl
pop
cmc
xchg
cmpsb
jmp
add
sbbb
int3
test
mov
in
pop
adcl
mov
mov
aas
rorl
mov
push
rcrl
mov
mov
insb
hlt
xchg
aas
dec
aaa
fistpl
loopne
jb
fidivrl
cld
cli
repz
mov
sahf
sub
fsubl
jmp
in
inc
sub
imul
in
adc
jecxz
ret
fsubrl
push
stos
add
shrb
sub
add
pop
jae
rorb
jl
dec
add
sbb
jmp
out
hlt
xchg
adc
notl
adc
pop
scas
lock
test
jle
sub
ljmp
sub
or
xlat
mov
fldt
mov
cmp
add
outsb
cmpb
sbb
push
out
mov
je
loopne
aam
and
insb
adc
iret
push
push
js
bnd
jb
stos
xor
adc
sbb
sub
jae
push
add
jle
sub
pop
das
sub
outsl
insl
popa
jo
fdivrl
push
mov
sbb
mov
push
jle
ret
ljmp
daa
ljmp
ret
fiaddl
test
mov
xchg
clc
movsl
mov
lea
mov
fistpll
adc
xor
sub
lahf
inc
mov
inc
or
lcall
neg
pop
xlat
lods
nop
dec
lods
add
sbb
xchg
adc
out
cmc
dec
call
adc
out
jmp
xchg
aad
dec
cmp
and
cmp
sarl
push
movsb
xchg
stos
adc
lret
xchg
pop
call
js
push
cmp
stc
cmp
sti
faddl
popf
and
lea
fdiv
or
xchg
sub
rorb
cmp
out
mov
bound
lock
cmp
and
outsb
dec
add
adc
pop
or
mov
iret
fistps
outsb
jge
insl
dec
outsb
repz
xchg
mov
insb
mov
mov
pop
adc
mov
addr16
js
push
int
lock
clc
xchg
mov
es
adcl
testl
cli
dec
jmpw
push
pop
aam
push
xor
cmp
or
sub
adc
jae
add
mov
roll
cli
adc
into
mov
push
sbbl
push
imul
int
or
adc
frstor
cmpsl
lds
sbb
cmp
xchg
xor
shrl
ja
cmp
jg
mov
push
stos
enter
test
lcall
pop
mov
shlb
rcrb
mov
adc
out
loopne
mov
xorb
or
dec
jecxz
shrb
lods
in
pop
inc
pop
icebp
jl
adc
aad
jno
fdivl
xchg
push
mov
jl
ficomps
add
imul
jmp
jmp
out
inc
sti
insb
xor
xor
push
ficompl
test
mov
jbe
lods
adc
xor
jae
dec
xor
sub
sub
sbb
stos
or
daa
cmp
icebp
cmp
mov
lods
movsb
fnstcw
pop
ja
pop
ja
pusha
les
fsubr
mov
pop
es
idivl
xor
dec
jmp
xchg
and
dec
jnp
dec
dec
push
and
call
adc
stos
cmc
out
dec
push
test
or
ret
cmpsl
sti
cwtl
out
loope
xor
push
mov
mov
mov
daa
fnsave
push
mov
fists
sub
mov
outsl
mov
mov
pop
xor
xlat
testb
and
or
add
sbb
sub
jae
xor
add
lahf
pop
mov
sbb
gs
popl
jns
pop
sub
sbb
cltd
nop
repz
iret
dec
dec
xlat
loope
nop
fstps
jae
adc
push
push
mov
ja
jne
fcmovne
pop
les
dec
push
and
aas
rcr
and
add
add
cmc
repz
inc
lcall
out
pop
imul
repz
cmpsl
ja
xlat
js
mov
bound
adc
push
or
sub
loopne
lods
xchg
pop
mov
in
out
inc
out
pushf
sahf
mov
insb
push
pushf
pop
inc
lock
mov
out
mov
jno
jmp
les
loopne
das
jecxz
push
orl
ds
daa
imul
sarl
jmp
movsb
call
iret
movsl
cmp
mov
out
pop
inc
into
or
jge
xor
lods
mov
push
pop
rclb
push
and
cmp
jp
je
notl
icebp
aas
in
jb
pop
movsb
loop
xor
inc
xchg
lock
adc
aam
fidivl
mov
xchg
dec
or
fmuls
cmpsl
sarb
stos
or
mov
mov
bound
inc
adc
in
loop
sarl
test
sbb
push
ret
add
mov
cmpb
loop
sbb
push
xor
xchg
call
inc
lret
sbb
pop
addr16
jl
aaa
rclb
inc
stc
stos
jmp
dec
dec
cmp
int3
loopne
sub
or
sbbb
cmp
adc
push
clc
inc
inc
push
sub
cwtl
sbb
or
mov
or
cltd
fisttpl
sub
fldcw
rclb
outsl
shlb
ret
cmp
push
lcall
insb
sbb
cwtl
aas
sub
jns
aad
out
xor
aaa
add
jmp
loopne
fwait
cmpsb
shlb
fbstp
enter
dec
or
jb
add
gs
repz
shr
mov
and
xchg
out
repz
inc
ret
fcomps
xor
adc
cmc
lcall
lcall
xchg
insb
adc
mov
call
xor
jae
or
pushf
mov
or
mov
adc
inc
daa
cmp
bound
ljmp
incl
inc
cmp
push
cmp
xchg
ret
jl
insl
clc
arpl
adc
jns
cli
stos
cmpsl
pop
inc
lods
xor
fwait
movsb
cmpsl
push
inc
pop
sbb
imul
mov
xorl
xchg
enter
jl
out
or
imulb
roll
ficomps
in
xchg
jecxz
fistpll
jecxz
dec
inc
sub
cmpsl
jnp
hlt
stc
add
push
dec
sub
js
jb
mov
xor
jbe
pop
scas
inc
mov
iret
aam
hlt
fidivl
and
adc
cs
les
out
lea
inc
lock
mov
test
lret
dec
sub
enter
pusha
jnp
inc
test
add
popf
inc
xor
ljmp
dec
dec
pop
mov
dec
or
xor
cld
ror
rclb
xlat
mov
ds
and
push
mov
out
enter
add
jns
js
fcmovnu
rclb
loope
pop
dec
mov
stos
sub
mov
test
adc
mov
jmp
subl
pop
cmpsl
push
dec
fdivr
adcb
lcall
cmp
or
cltd
addr16
int3
movsb
cmp
sub
xchg
rcrb
cmpl
sbb
add
scas
xchg
dec
dec
jno
jmp
inc
je
mov
sub
or
push
aas
push
jne
sbbl
lcall
cld
mov
sub
mov
sub
xchg
sub
loope
or
sub
gs
repnz
popa
mov
push
mov
addr16
cltd
and
and
cld
adc
cltd
cwtl
jecxz
lods
jno
mov
fidivs
js
fildl
or
std
pop
jecxz
fs
pop
aad
fldcw
fcoms
test
mov
add
lds
sub
test
inc
xchg
jp
mov
pop
enter
fidivrs
sbb
leave
movsb
les
pushf
and
xchg
int
sub
cmp
out
fcomps
cwtl
xor
out
mov
mov
mov
pop
lea
jmp
lret
orl
data16
xor
in
leave
inc
into
mov
lock
lcall
ffree
inc
lods
and
arpl
xchg
repz
js
pop
xor
clc
add
mov
mov
bnd
mov
out
scas
mov
enter
icebp
loop
or
mov
icebp
or
lahf
jle
cmp
adc
jae
xchg
jmp
lock
mov
lret
cld
loopne
sbb
cmp
push
push
dec
mov
rcrb
cmp
mov
mov
fsubr
aam
insl
negb
jne
adc
mov
add
cld
icebp
mov
shll
mov
fistl
mov
ljmp
xchg
sarb
jge
aad
stos
pusha
jl
sbb
int
mov
mov
xchg
push
sub
xor
lahf
add
inc
add
pusha
lcall
pop
hlt
adc
jl
cmp
sbb
leave
add
jns
lods
ret
pushf
test
insb
iret
in
stos
jecxz
push
inc
les
mov
jo
adc
pop
stc
mov
dec
fisubrl
mov
adc
sbb
fidivrs
movsb
sub
fsubrs
mov
pop
pusha
dec
pop
decb
cmp
and
jne
cwtl
outsb
xlat
push
mov
popa
push
jno
xor
xor
xor
pop
pusha
iret
arpl
ja
sarl
dec
adc
jl
or
fdivs
pop
repnz
stc
cltd
fimuls
sub
orb
xor
mov
pop
and
xchg
add
repnz
jecxz
enterw
shll
lea
es
jnp
push
mov
ficomps
adc
cmpsl
sbb
jmp
pop
sbb
push
loopne
dec
push
jmp
je
adc
sti
and
mov
pop
inc
mov
cmpsb
test
push
and
insl
lret
adcb
sbb
mov
sub
movsb
test
add
insl
cld
fwait
std
fcompl
es
inc
mov
mov
test
stc
jp
das
adc
push
fdivrp
inc
cmpsb
in
jae
mov
or
enter
stc
gs
lea
xchg
adc
cli
movsl
mov
jl
or
mov
or
jmp
xchg
int
imul
jbe
cmc
pop
mov
pop
rclb
sub
scas
icebp
in
add
mov
push
clc
iret
outsb
fmuls
mov
shl
pop
ljmp
hlt
mov
mov
or
sub
sub
cs
sbb
fldl
xor
inc
lret
es
jge
sub
xor
subb
mov
call
faddp
inc
mov
aam
cmp
iret
outsl
xchg
mov
arpl
in
cmp
mov
insl
in
lock
mov
adc
add
mov
scas
lock
add
sub
push
outsb
mov
or
addr16
and
push
xchg
cmpsb
sbb
out
ss
push
mov
shlb
jne
sub
shr
adc
notb
inc
pop
imul
lock
ret
dec
test
cwtl
mov
fwait
xlat
enter
out
jge
jb
sbb
xchg
fdivr
mov
xor
jbe
or
or
inc
or
insl
pop
push
pop
movsb
adc
fsubr
add
les
in
test
popa
clc
dec
hlt
ja
int
xor
mov
out
pop
test
sub
jg
loope
and
push
and
lret
test
mov
sub
mov
cmp
push
movsl
inc
sbb
test
jae
jge
inc
xlat
outsb
inc
adc
test
dec
push
and
bound
xchg
mov
mov
add
call
pusha
pop
out
cmp
sbb
add
mov
sarb
sbb
stc
stos
insl
or
xchg
adc
inc
ja
cmp
int
pop
stos
sbb
and
inc
adc
ret
test
push
add
jb
test
leave
jnp
xchg
push
ret
xchg
inc
cmpsb
ret
jne
pop
ja
cmp
sub
popa
pop
rcr
inc
arpl
sub
insl
loopne
mov
inc
pop
or
push
push
sbb
pop
pop
sbb
lods
xlat
arpl
jge
ss
test
in
pop
pop
xor
fisttpl
ret
in
fisubl
stos
and
xor
mov
sub
arpl
hlt
push
and
add
icebp
sar
std
filds
push
pop
fistps
popa
mov
insb
shl
notb
daa
mov
jmp
ret
cmp
xlat
cmp
xchg
shrl
scas
mov
mov
sub
ja
mov
lods
sti
xchg
jnp
jp
cmpsl
jo
insb
jo
or
jmp
mov
mov
mov
mov
cltd
fwait
outsb
push
xchg
outsl
repz
add
sub
pusha
out
fisubs
xchg
adc
pop
lods
and
pop
pop
stc
push
jecxz
jl
xchg
add
out
loop
dec
inc
fidivrl
dec
andl
cli
ds
xor
mov
mov
adc
xor
jmp
mov
cli
daa
fstpt
sahf
jno,pt
jp
dec
or
fnstsw
adc
mov
mov
adc
xchg
or
and
std
xchg
mov
push
sbb
push
xlat
xor
dec
aas
cmp
outsl
or
cmc
addb
clc
sbb
shrb
xchg
test
popa
movsl
pop
or
cmp
mov
pop
push
movsb
call
int3
dec
jp
xor
sub
adc
out
jmp
pop
sub
jne
test
aas
push
lods
icebp
int3
jl
jns
add
insl
jno
jge
inc
xchg
mov
cmc
shll
inc
push
in
push
aad
pop
mov
xlat
mov
mov
adc
stos
rcll
ret
int
lock
pop
movsb
dec
cltd
movsb
stc
cmc
jl
sub
xchg
mov
cmp
add
jne
jp
inc
mov
xchg
cmp
cmpsb
sub
sub
cmp
icebp
jl
jne
xor
in
inc
add
int3
mov
push
add
add
ret
push
les
push
and
rolb
dec
int3
cmp
shlb
mov
jns
pop
adcl
xchg
leave
mov
pop
add
movsb
roll
notb
add
cwtl
cmp
icebp
int3
adc
jns
jecxz
sti
jge
push
xchg
cmp
sbb
lahf
push
xchg
add
add
aad
aad
push
lods
xchg
fmuls
sub
pusha
adc
mov
ret
les
scas
shlb
adcl
jg
sti
or
mov
jecxz
je
test
xor
test
push
mov
addb
mov
sbb
xchg
into
orb
xchg
sbb
push
movsb
scas
test
lock
inc
dec
in
cmp
fisubrs
xlat
adc
pop
jno
insb
jmp
sti
test
in
rorb
sub
mov
add
stc
adc
mov
mov
or
sbb
addr16
push
icebp
add
ljmp
rcl
cs
ss
dec
iret
or
aad
dec
fxch
fmuls
pop
jg
push
cs
dec
mov
lds
fstpt
test
inc
add
rorl
push
or
loope
in
xor
pushf
mov
mov
dec
lock
jmp
dec
fcoms
shrl
ret
lock
or
outsl
sbb
cwtl
inc
mov
jb
cmp
sub
and
add
ficoms
iret
std
mov
aaa
int
test
xor
mov
outsl
loopne
fcmovbe
xchg
xchg
cmp
repz
and
sarl
adc
divl
hlt
rcrb
in
sbb
push
test
or
outsl
add
loopne
mov
sahf
out
cmpsl
jp
cmp
test
bound
pushf
adc
jnp
adcl
testb
movsl
or
stos
or
mov
outsl
arpl
daa
es
jnp
xchg
jmp
subb
lcall
fs
cmpb
lret
pop
add
push
cmc
xchg
gs
ret
jp
fsubl
mov
mov
sbb
or
iret
nop
aas
sub
testl
or
pop
xor
adc
jl
xchg
mov
jl
and
cmp
mov
pop
jns
sub
inc
shlb
mov
mov
inc
push
jns
int
mov
enter
cmp
jo
clc
popf
loope
in
jp
jno
out
pusha
xor
fstl
add
jne
xorb
inc
cmp
in
inc
push
mov
ja
cmp
jg
cmpsb
pop
aas
outsl
mov
inc
data16
cmpb
roll
movsl
testl
cld
lods
stc
push
mov
stc
outsb
and
aaa
in
xchg
je
pop
lods
cs
faddp
fs
jl
or
test
sahf
add
sub
lods
push
aad
repnz
cwtl
inc
cmpsb
inc
cmpsb
lds
inc
cmp
xor
rcrl
dec
mov
call
fdivrs
adc
mov
mov
or
add
bound
stos
scas
add
or
jge
rorl
mov
xchg
mov
cmp
inc
cmp
loop
in
arpl
mov
pop
in
mov
jp
sub
icebp
adc
mov
dec
and
and
bound
inc
test
jg
mov
mov
in
hlt
mov
std
sti
sub
int3
mov
les
insb
dec
add
nop
mov
test
mov
push
sar
sbb
and
jp
mov
mov
sbb
adc
inc
out
push
pushl
bswap
iret
inc
fwait
test
mov
inc
addb
jmp
dec
xchg
test
inc
out
sbb
inc
les
dec
cmp
fcoms
out
jg
pop
push
xchg
stos
xor
inc
mov
jb
aaa
shrb
stc
and
cwtl
dec
xchg
aam
mov
cli
aaa
push
sbb
jns
aas
pop
std
fcomps
sub
icebp
loop
inc
movsl
push
inc
dec
xlat
arpl
test
dec
cmp
frstor
fldl2t
push
sub
or
xor
add
dec
mov
push
or
jnp
mov
push
leave
adc
ss
push
test
mov
int3
scas
shl
cmpsl
repz
mov
pop
scas
scas
sarb
add
daa
push
mov
mov
sbb
js
shr
xorl
inc
pop
push
aam
mov
xchg
lret
sub
dec
mov
mov
or
stc
xchg
call
push
push
adc
sub
daa
mov
movsl
lret
jo
ret
les
movsl
shl
mov
xor
pop
lods
test
test
cld
pop
push
mov
pop
lcall
loope
stos
mov
repnz
imul
sub
inc
and
dec
xor
outsl
sub
pop
pop
fwait
add
add
add
fists
ret
and
mov
and
je
std
cmp
or
fdivrl
add
pop
push
jecxz
push
shll
cltd
xchg
add
lahf
scas
mov
ja
icebp
mov
icebp
inc
mov
lret
add
xchg
dec
or
out
xor
int3
cmpl
cli
call
imul
dec
test
mov
outsb
push
mov
jo
mov
add
jmp
ret
xchg
inc
adc
xchg
mov
jns
ret
jns
cmp
cmp
xchg
push
idiv
fnstcw
das
out
movsb
push
out
inc
adc
sub
and
jne
cmpsb
ss
mov
mov
mov
inc
sbb
push
out
rcl
iret
xor
xor
arpl
push
pop
repnz
movsl
lret
ja
add
or
pop
imul
mov
inc
out
sub
sbb
lock
or
mov
aaa
js
push
sbb
and
aas
lods
xchg
mov
loopne
mov
sbb
stos
fwait
mov
nop
fs
sbb
addb
mov
pop
stc
inc
pushf
out
cmp
xor
sbb
add
frstor
jb
das
pop
pop
rcrl
mov
mov
popf
in
push
push
int3
jecxz
lret
out
dec
inc
gs
call
sbb
sbb
pop
int3
rolb
out
sbb
xor
idivl
jnp
sti
sbb
lods
and
add
mov
sbb
repz
lret
xchg
jb
xor
sub
test
fnsave
lods
je,pt
jge
scas
add
xchg
jl
sbb
xchg
cld
mov
xor
hlt
ret
adcb
add
mov
mov
mov
leave
jo
xchg
jno
push
jle
sub
jnp
push
mov
lcall
testb
or
test
rcrl
pop
mov
arpl
push
movsl
push
dec
push
and
sbb
inc
cmpb
lods
loope
adc
pop
sub
pop
ret
enter
jle
push
jge
jne
inc
xchg
outsb
adc
jae
lret
jp
popf
add
adc
add
aas
push
inc
gs
decl
iret
pop
lcall
test
or
cmp
pop
or
jl
mov
sbb
mov
sbb
repz
sub
lahf
jl
xor
sbb
or
pop
jns
sbb
sbb
xchg
sbbl
pop
or
in
jo
inc
or
in
orl
aad
fdivrs
xlat
or
sarl
xchg
mov
mov
sbb
dec
mov
sub
sub
ja
or
sbb
push
mov
jp
jae
dec
dec
jae
jl
and
xor
cmovo
push
lcall
and
mov
pop
mov
sub
into
push
lahf
mov
mov
loopne
add
mov
add
xchg
or
adc
shr
mov
inc
flds
or
pop
les
lock
fmul
mov
and
scas
pop
add
jge
js
movsb
out
sti
outsl
mov
ffree
dec
sub
in
aas
shll
ljmp
insl
and
xor
push
mov
pop
cmpsb
push
jl
xchg
movsl
out
sub
popf
ret
mov
addr16
xchg
add
and
inc
hlt
xchg
insb
jb
mul
les
pusha
mov
fisubs
dec
js
ds
scas
add
imul
push
sahf
pop
out
cmp
xchg
or
scas
lret
inc
shrb
lahf
stc
rcrb
sub
fwait
jp
cmp
mov
push
mov
push
pop
add
jo
repnz
pop
xchg
cmpsl
mov
sub
mov
mov
negb
sub
and
in
cmp
or
roll
insl
mov
dec
addr16
insb
lods
popa
xorb
int3
insb
stos
jae
stos
fwait
inc
jmp
dec
scas
outsb
test
aas
sbb
loop
cmp
inc
cli
hlt
enter
ja
mov
jmp
fidivl
es
xor
test
lahf
sub
push
xchg
fbstp
inc
adc
fldcw
fldcw
in
cmp
xor
divps
adcl
adc
cmp
cmp
pushf
sbb
add
test
xchg
hlt
xchg
ljmp
dec
or
icebp
imul
cmpsb
in
sub
inc
jbe
mov
repz
or
aas
in
pop
sub
mov
push
fwait
dec
xchg
push
ret
dec
js
imul
push
int
in
sbb
mov
sbb
lcall
aad
imul
loopne
lods
cmp
jns
push
add
jnp
add
repz
dec
cmp
inc
call
popf
lea
jle
xor
int
shll
rolb
inc
jmp
lock
add
cltd
js
xchg
jmp
sub
xchg
repnz
ret
push
lds
out
or
aas
shll
mov
je
inc
sub
dec
jecxz
lods
icebp
mov
sub
lahf
sbb
insl
mov
ds
rorb
popa
push
push
repnz
mov
or
and
lods
jb
lods
ss
leave
mov
outsl
fnsave
pop
mov
inc
call
adc
in
jo
dec
dec
xorb
data16
daa
mov
mov
insb
insl
pop
in
sub
imul
pop
jle
jl
lods
fiadds
test
iret
and
xlat
jg
sbb
push
out
mov
mov
pop
iret
xor
ss
mov
push
jo
shrb
sbb
scas
mov
jecxz
push
mov
inc
mov
repnz
dec
andl
addl
sti
lds
inc
stc
sbb
or
mov
jne
scas
rcrl
fiaddl
push
int
mov
jle
dec
test
mov
adc
lea
sub
insl
mov
push
insb
or
jo
jbe
xchg
cs
shrb
ljmp
mov
or
inc
push
mov
sbb
push
and
ret
lea
and
popa
enter
mov
xorb
mov
xchg
lret
lock
decl
mov
or
jns
nop
sub
out
sbb
adc
cmp
mov
js
int
orb
dec
call
test
adc
aam
sub
dec
pop
ds
stc
jmp
jp
xor
js
jo
and
add
stc
push
mov
shrb
ss
jb
dec
jnp
adc
pop
add
and
out
xchg
lret
sub
negl
mov
rorl
rcrl
aad
je
xchg
mov
sub
fnstenv
pand
adc
pusha
loop
fistpl
cmp
cli
fists
inc
pop
nop
jns
daa
mov
mov
sbb
neg
enter
aas
aam
mov
push
dec
fwait
hlt
lods
sbb
xor
movsl
mov
pop
mov
adc
mov
xchg
mov
inc
mov
mov
dec
inc
inc
dec
in
stc
xchg
scas
cwtl
out
lahf
add
mov
sub
stos
js
and
cmp
pop
push
dec
jae
sub
leave
fs
enter
shrb
jg
repz
push
js
loopne
mov
push
push
outsb
rclb
jns
decb
jl
scas
movsb
jae
rorl
and
pop
fcompl
fiadds
mov
jb
aam
adc
jl
pop
hlt
sub
mov
sub
test
cli
stc
mov
fsub
mov
push
push
pop
xchg
mov
lds
js
cmp
pop
ret
xchg
xlat
fcoms
mov
sub
lock
sti
fiadds
adc
mov
mov
jno
pop
nop
jb
filds
popf
clc
movsl
cmc
dec
repnz
not
cld
dec
aam
outsb
push
sub
js
rclb
sbb
or
fnstenv
stc
cli
xor
or
test
lahf
lahf
in
mov
imul
cmp
nop
mov
sti
lea
cld
push
push
adc
pop
and
mov
jne
inc
aaa
dec
roll
push
stos
xorl
jne
mov
clc
or
xchg
lods
or
mov
dec
xor
xchg
mov
mov
xchg
push
cmpsl
mov
mul
xor
rolb
mov
loope
jp
stc
insl
inc
xchg
je
fdivrs
out
repnz
add
pusha
fadd
jb
push
cmp
sub
sub
jo
mov
cli
adcb
scas
mov
dec
lock
xor
xor
test
sahf
stos
push
je
jg
das
push
cli
out
push
arpl
pop
xchg
das
pop
lods
cmp
and
in
sub
in
sbb
sbb
es
aaa
insl
adc
sti
negb
pop
adc
or
sbb
xor
fnsave
lock
ja
or
mov
jns
inc
daa
inc
bswap
rol
pop
sub
xor
pop
add
mov
push
jecxz
rol
pushf
adc
ret
outsl
lret
into
repz
pop
pop
push
scas
adc
gs
inc
hlt
jp
fmuls
and
adcl
push
xor
pop
pop
das
pop
js
pop
jecxz
inc
dec
mov
mov
or
push
mov
xchg
outsb
movsl
testb
pop
icebp
outsl
dec
adc
jmp
mov
mov
mov
and
mov
pop
mov
int3
lock
fs
int
adc
cmp
je
cmp
dec
f2xm1
mov
xchg
iret
neg
push
loopne
jae
leave
pushf
dec
movsb
mov
imul
out
cmpsl
cmp
push
push
xchg
imul
out
push
jecxz
add
dec
jno
imul
sbb
fdivrl
mov
shll
pop
and
push
mov
adc
mov
cld
inc
cmp
jle
scas
ja
outsl
and
dec
cmp
fiadds
les
jbe
mov
inc
ss
or
sbb
inc
jmp
add
or
ss
outsb
cld
enter
inc
repz
mov
fnstenv
insl
dec
ds
mov
push
daa
cmpsl
adc
imul
lods
sbb
or
or
fstps
daa
ljmp
imul
xchg
test
sbb
and
cwtl
std
jge
jl
popa
jge
mov
and
jle
stc
mov
xchg
out
sbb
xchg
insl
adcl
fstpt
dec
std
mov
dec
fists
mov
add
frstor
int3
mov
psubq
push
test
repnz
cmc
test
pop
xor
ret
cs
sbb
sub
ffree
add
in
dec
cmp
fisubrs
cld
std
ja
xchg
icebp
lods
ljmp
dec
aad
jecxz
out
dec
pop
push
cmp
sbb
insl
loope
insl
pop
leave
xchg
mull
jmp
enter
jb
lea
xor
or
dec
lret
popf
pop
pop
cltd
cmp
mov
jp
ret
mov
cli
mov
in
es
or
call
mov
sbb
add
insb
mov
pop
dec
pop
push
xadd
popa
movsl
xor
mov
mov
popa
mov
lds
flds
mov
lea
dec
pop
or
mov
addb
lds
mov
lock
mov
lds
dec
mov
mov
out
es
in
ror
jl
sub
into
xor
insl
dec
add
mov
add
adcl
sbb
jl
cli
push
icebp
mov
mov
lods
pop
mov
pop
or
jo
out
rcll
fadds
fwait
lret
orb
and
stc
cmp
movsl
pop
inc
scas
and
add
cli
hlt
cmp
or
mov
loop
lock
fs
stc
xchg
aaa
inc
aad
iret
arpl
mov
call
dec
xchg
inc
xchg
pop
jo
mov
or
aaa
xchg
fwait
xor
mov
xchg
adc
clc
test
outsw
sbb
inc
jae
ror
lea
insb
adc
inc
sti
and
lods
popa
std
push
sbb
test
jne
xor
test
fsts
test
icebp
jge
push
mov
sbb
aad
push
adc
adc
jns
mov
xchg
xchg
insl
test
mov
fdivs
sbb
dec
movsl
leave
push
or
shr
dec
sti
repz
lcall
sahf
into
notl
add
aad
jbe
rolb
jle
scas
pushf
push
xchg
rclb
xor
inc
cmp
cli
jo
mov
xchg
jbe
add
sbb
mov
dec
mov
xor
pop
stc
addr16
jb
and
xchg
jp
int3
test
icebp
mov
pop
pop
call
xor
jmp
pop
xchg
xchg
dec
mul
fdivrl
xor
mov
adc
bound
push
movsl
popa
mov
sbb
pop
icebp
loopne
or
sub
dec
scas
jmp
test
dec
cld
jo
ss
ret
fcmovb
jb
jne
mov
ljmp
fildl
or
pop
roll
sti
fwait
outsl
push
outsb
jp
adc
enter
jle
stc
out
inc
xor
and
call
and
clc
add
pop
cltd
sbb
jne
fwait
and
add
dec
lcall
sub
das
dec
sti
sub
cmp
jmp
clc
push
call
inc
lock
dec
shrl
nop
jae
loope
push
ucomiss
sbbl
jnp
scas
pusha
pop
push
push
aad
jge
or
stos
out
inc
leave
inc
out
jne
out
test
lds
lret
jbe
sbb
imul
or
pop
test
xchg
inc
or
xchg
sbb
outsb
insl
jl
sbb
mov
aas
das
or
insl
ret
inc
std
outsl
mov
xor
xor
dec
mov
imull
out
je
hlt
add
into
andl
movsl
popf
sti
mov
pop
jp
dec
leave
sbb
or
mov
aad
xchg
push
aas
xchg
xchg
popf
aaa
inc
sub
int3
jp
or
pushf
mov
sbbl
cltd
mov
push
pop
iret
sub
xlat
fcmovne
mov
mov
or
mov
add
xor
lods
icebp
outsl
cmpb
std
sbb
mov
addl
lahf
mov
inc
data16
icebp
pop
repnz
aam
js
sub
xchg
lret
cmp
out
fstl
mov
icebp
dec
pop
cmpsb
mov
push
dec
fstpt
idiv
loop
ficoms
sub
cmp
and
push
inc
in
loope
lret
or
je
or
ljmp
push
rclb
addr16
stos
lcall
cld
mov
dec
std
shll
push
jl
mov
sbb
clc
jp
lds
pop
mov
gs
mov
das
dec
les
out
call
ret
push
sub
fnsave
or
bsf
xchg
add
sbb
ss
dec
xor
ja
pushf
and
rcrl
pusha
jmp
xor
std
push
mov
add
lret
sbbl
adc
mov
pusha
mov
adc
scas
push
sub
or
cs
cmc
mov
mov
ret
in
dec
mov
mov
test
or
mov
adc
je
mov
sub
divps
or
incb
mov
aad
fwait
stc
andb
into
scas
loop
push
mov
dec
rcr
dec
fcomp
dec
or
bound
jp
inc
jns
xlat
mov
scas
dec
daa
popa
ficomps
jne
ds
mov
imul
mov
pop
xchg
push
outsl
je
mov
mov
lret
push
lds
mov
fcoml
and
movsb
cmp
fisubs
sub
or
and
or
xor
push
aad
nop
in
push
dec
xchg
mov
pop
mov
inc
xchg
add
dec
mov
psraw
sbb
push
cmpsb
lock
mov
imul
andb
xor
jmp
repnz
test
aam
leave
in
push
sub
add
mov
inc
and
mov
bound
or
incl
dec
mov
outsb
push
adc
pop
andb
insl
pop
mov
jo
fld
fnstenv
xor
jle
and
movsl
adcl
dec
mov
insl
cmpsl
adc
dec
in
sahf
test
test
push
das
xor
cltd
and
enter
push
mov
test
push
adc
pop
icebp
pusha
or
call
scas
pop
or
inc
add
pusha
inc
jle
cwtl
adc
lds
xchg
hlt
push
les
xchg
addr16
sub
push
cltd
test
jl
sahf
mov
outsl
icebp
cmp
pop
ljmp
lods
aaa
mov
and
xor
mov
add
scas
cmp
and
insb
lds
sbb
dec
mov
iret
push
mov
sub
or
mov
iret
insl
sbb
cmc
cs
inc
int
jge
push
stc
mov
repnz
imul
rorb
insl
das
and
rol
push
loope
pop
lods
je
lods
pusha
lock
jnp
mov
sti
mov
stos
imull
stos
inc
sub
mov
iret
stos
out
jbe
xchg
xchg
fstpt
leave
pop
push
dec
xchg
cli
jo
xchg
in
fs
mov
imul
pop
scas
ret
sbb
mov
enter
pop
mov
enter
fcoml
sbb
call
jo
cmp
rorl
imul
fcoml
pushf
inc
xlat
xor
cmc
push
cwtl
push
dec
lds
mov
mov
jbe
push
mov
mov
fldt
lea
and
mov
inc
or
xor
jno
out
jns
ret
cmp
xchg
test
and
rol
push
movsl
dec
mov
cmp
rclb
and
and
cmp
push
inc
adc
sbb
xchg
cld
rolb
sahf
test
ds
add
or
nop
push
adc
jno
test
lds
sbb
arpl
mov
adc
dec
mov
sub
xchg
mov
mov
push
fndisi(8087
js
jle
push
test
push
jnp
adc
jb
and
xor
jle
int
sti
sbb
pop
mov
std
push
jp
inc
pushf
call
leave
inc
out
push
mov
inc
loopne
shll
aam
mov
data16
repnz
movl
adc
rorb
enter
jbe
nop
movsl
sub
or
cs
sahf
sbb
inc
and
lcall
and
push
dec
test
or
xlat
cmp
mov
lods
imul
jb
inc
addl
test
cli
fyl2x
push
cmpsb
insb
sub
or
xchg
mov
and
add
sti
dec
pop
in
lahf
daa
or
jl
mov
jbe
dec
out
pop
orb
imul
lds
mov
fcmovne
ficoml
pop
or
repnz
push
out
jecxz
loopne
rol
push
inc
inc
jne
aam
je
sbb
add
mov
aad
addb
aas
xchg
insl
jle
out
rolb
fmull
sbb
sbb
lret
icebp
push
popf
mov
cmpb
std
cmp
leave
popf
xchg
adc
sbb
mov
mov
and
or
cmpsb
push
call
cmp
pop
in
fsub
add
cmp
jbe
mov
inc
cmp
pushf
shl
insl
int
loop
xorb
mov
xchg
dec
adc
pop
scas
mov
jb
subb
add
cmp
sub
or
mov
insb
add
testl
or
shlb
mov
stc
pop
insb
jmp
jno
enter
cmpsl
test
jle
aas
cmp
mov
pop
clc
js
jbe
mov
pop
xchg
cmp
add
hlt
add
sti
dec
imul
in
push
cmpsb
dec
sbb
fidivl
lcall
jge
out
sbb
jmp
imul
jg
or
inc
push
cmp
xor
jne
fmuls
das
sahf
push
and
mov
jnp
xor
jnp
push
mov
in
dec
addr16
inc
jae
adc
cmp
or
xchg
in
lahf
in
repnz
jnp
cmp
xchg
loop
dec
int
mov
xchg
and
add
add
fidivrl
aad
cmp
lods
cmpsl
mov
jmp
test
dec
mov
push
imul
mov
inc
lods
rcll
sub
test
jne
cs
xchg
xchg
mov
sti
leave
repz
out
fsts
mov
and
enter
ss
je
dec
cmp
and
mov
pop
add
and
pop
or
fs
jns
dec
cmp
xchg
clc
stos
jl
sub
sarl
test
inc
leave
mov
cmpsl
push
nop
insl
rcrb
lea
xchg
xchg
and
pusha
stos
int3
dec
test
sbb
fisttps
fs
or
push
inc
xchg
pop
test
test
dec
fwait
dec
add
pop
xorb
push
out
or
jb
cli
ds
push
cmc
call
push
pop
or
sahf
sbb
sbbl
insl
add
push
push
roll
dec
and
and
call
roll
cmc
dec
mov
push
dec
xchg
pop
pop
cmpsl
dec
mov
sbb
xchg
inc
mov
sahf
mov
pop
push
cmpsb
lock
inc
test
sub
cmpsb
inc
mov
push
pop
out
hlt
mov
jmp
adcb
add
lock
movsb
xchg
mov
xchg
and
cmpsb
add
rorl
fsubl
lods
ljmp
adc
popf
sub
decb
push
xchg
xor
sub
lret
movsl
popf
mov
scas
mov
filds
cmp
fnsave
adc
xor
data16
fildl
xchg
mov
adc
ja
xor
lcall
cmp
inc
dec
rorb
ret
dec
nop
gs
imul
push
out
xor
cmc
test
lret
mov
sub
pop
add
sbb
sub
popf
jmp
mov
std
xor
push
jge
cs
xor
push
imul
aam
inc
jmp
dec
stos
iret
push
cltd
adc
adc
loopne
nop
jmp
cli
adc
adc
popa
out
mov
lods
push
test
adc
pop
dec
pop
inc
mov
inc
incb
cmp
adc
cmc
lahf
mov
lret
or
and
xchg
inc
cwtl
sbb
add
push
cmc
ds
lods
loopne
repz
enter
sti
sbb
xlat
sbb
lret
xor
lea
push
jecxz
jo
cmp
pop
jmp
lahf
mull
dec
cld
and
repz
cli
and
or
dec
mov
addb
js
sub
pop
cmpsb
and
add
add
int3
mov
je
ret
or
pop
sbb
inc
jne
push
repz
mov
ss
sahf
int3
popa
mov
xor
orl
mov
xor
pop
pop
sub
xor
movsb
popa
pusha
addl
or
ss
fstp
cs
shll
gs
mov
fmuls
enter
push
test
cmp
add
adc
lock
jb
xchg
xor
js
sahf
mov
arpl
add
lret
add
cmp
adc
sub
mov
mov
cmp
rcr
inc
pop
sbb
xorb
popa
lret
xor
jge
xchg
gs
pop
push
or
xchg
je
test
ss
jl
cmpsb
mov
mov
aam
sar
outsl
lcall
jmp
les
icebp
scas
ds
cltd
push
mov
jp
leave
pop
data16
pop
sub
jbe
pop
loop
scas
loop
adc
jge
roll
aad
movsb
jbe
mull
insl
inc
cmpsl
mov
or
sub
clc
icebp
shlb
mov
mov
repnz
sub
push
push
inc
push
call
mov
shl
push
jne
bound
fcompl
xchg
lcall
ds
das
out
jl
scas
cmpsl
shrl
sahf
or
out
dec
pop
push
in
xor
sbb
push
mov
mov
inc
xorb
mov
pop
xchg
xchg
into
or
sub
nop
push
stos
adc
cltd
xor
cmpsl
pushf
gs
xor
nop
adc
cld
cmp
adc
pop
sub
adc
stos
push
push
jae
loop
lea
mov
adc
cmp
inc
sub
xor
das
repz
popa
das
and
not
sarl
push
or
iret
mov
lret
stos
pop
movsb
jmp
mov
je
shr
xchg
mov
mov
daa
test
test
or
lahf
outsb
xchg
sahf
int3
jne
stos
sub
xor
imul
mov
in
pop
inc
icebp
cmp
popa
xchg
xchg
setp
add
dec
mov
ds
and
jnp
popa
lods
das
xchg
inc
mov
sbb
inc
dec
adc
and
xlat
in
testl
inc
out
gs
sub
loope
lea
enter
sub
adc
aad
sbb
gs
fsubrp
es
adc
adc
push
jo
aam
dec
mov
gs
jp
sub
sbb
xor
lret
mov
outsl
xchg
js
daa
bound
jo
mov
pop
cmp
jl
xchg
jmp
xchg
stos
lret
leave
and
dec
adc
or
mov
arpl
push
pop
cmp
test
dec
lahf
les
jg,pt
inc
arpl
mov
shrb
lods
cmp
popf
bound
xchg
and
xor
xchg
mov
popa
sbb
mov
dec
scas
adc
les
std
leave
ss
cmp
scas
scas
mov
ret
scas
xchg
repnz
sar
hlt
pop
testl
xor
push
stc
mov
pop
cs
movl
lret
adc
mov
out
adc
or
cld
out
sub
in
adc
jmp
inc
in
scas
addr16
sbb
xchg
nop
icebp
call
pop
imul
adc
scas
and
mov
push
sbb
inc
outsb
lods
in
lcall
push
cwtl
and
mov
xchg
or
dec
lods
ret
jb
pusha
in
add
ljmp
pop
imul
sub
test
jbe
test
jnp
or
mov
push
out
jmp
sahf
icebp
xor
test
dec
js
cmp
inc
mov
sub
dec
add
or
jg
sub
ljmp
jns
sbb
outsb
fnstsw
xchg
and
pop
cmp
subl
clc
jno
iret
mov
into
dec
mov
inc
pop
cld
pop
sub
add
xchg
mov
loop
sub
cmp
popf
fwait
int
push
cmc
cmp
or
adc
ja
mov
inc
test
jae
aad
pop
xor
adc
dec
jecxz
rclb
push
icebp
inc
iret
mov
fs
in
dec
in
aam
add
mov
test
or
ljmp
iret
or
cmp
mov
inc
push
lea
pop
jp
pop
push
daa
ljmp
push
add
pop
sahf
outsl
adcl
inc
and
adc
and
mov
outsb
inc
xchg
ja
sbb
or
or
ds
sbb
iret
sub
cli
subl
mov
xor
xor
out
xchg
ljmp
sbb
mov
shr
lahf
idiv
lods
lcall
dec
call
std
daa
cmp
pop
arpl
pop
test
mov
in
sub
aaa
not
or
data16
xlat
mov
mov
adc
add
mov
xchg
dec
xchg
stc
mov
cmc
rorb
or
call
bswap
insl
xchg
sbb
cwtl
or
ret
lahf
xchg
jb
es
icebp
in
les
sbb
hlt
adc
inc
rorl
lods
or
je
cli
jae
mov
add
mov
push
insb
cmpsl
adc
call
xor
stos
pop
mov
shlb
sub
mov
jnp
add
je
pop
xor
mov
loop
out
push
lret
mov
mov
lds
aaa
lods
repz
jno
and
mov
jno
jl
test
rcrl
or
imul
hlt
mov
push
ds
mov
pop
pop
cwtl
or
int3
std
mov
scas
pop
icebp
push
out
dec
mov
or
popa
xor
data16
jne
push
sub
xlat
mov
dec
loope
xchg
pop
xchg
mov
lods
and
seta
subl
jle
cli
inc
jo
hlt
es
pop
test
or
mov
outsb
in
push
test
cmp
fisttps
cmpsl
psubd
fwait
rcr
mov
adc
pop
mov
lods
lret
sub
out
jb
pusha
inc
mov
mov
jle
scas
loope
push
fsub
push
mov
inc
mov
insl
sbb
testl
pop
xchg
pop
jmp
mov
ror
add
adc
sbb
ja
sbb
sub
and
push
dec
dec
sarb
dec
sub
mov
sub
pop
into
sub
pusha
sub
push
jg
sub
hlt
sbb
push
roll
out
leave
hlt
scas
push
js
std
rcpps
jle
sbb
cli
mov
pop
mov
inc
das
out
es
iret
in
mov
mov
or
aam
mov
fs
int
pop
or
cld
cmp
dec
mov
in
mov
and
and
clc
xor
subb
test
test
sub
je
adc
xchg
xor
cmc
jp
cltd
cmp
jp
cmp
pop
and
xchg
jp
dec
stos
sbb
les
mov
test
xchg
jge
and
pushf
xchg
mov
cwtl
or
les
cs
ds
push
in
inc
sub
imul
das
mov
scas
aaa
icebp
jne
fidivrl
hlt
push
ds
dec
cmp
out
shlb
push
jle
aas
js
xchg
mov
xchg
jge
inc
jmp
push
leave
sbb
cmpsl
inc
xchg
hlt
push
cmp
dec
and
fsts
out
jo
hlt
cmp
stc
xchg
xchg
dec
shrl
lods
mov
mov
lds
cli
je
mov
fisubs
mov
movb
mov
leave
sarb
repz
cld
mov
adc
add
pop
mov
fdivs
or
xchg
pop
aaa
sbb
and
out
jge
ja
decl
add
popf
inc
bound
ret
jmp
sbb
sub
jb
dec
push
pop
test
push
or
into
mov
scas
xlat
ds
cmpsl
cld
inc
sbb
test
xchg
inc
sbb
ss
jecxz
add
or
add
fisubrs
cmp
nop
ss
or
and
push
gs
fmuls
js
dec
push
push
or
or
xchg
out
or
outsl
sti
pushf
jmp
inc
push
es
dec
out
jmp
sbb
cltd
stc
pop
repz
jne
adc
mov
sbb
dec
and
and
or
std
push
and
mov
sub
xchg
jnp
mov
add
pushf
aad
adc
ds
shlb
and
stos
nop
xchg
add
rclb
add
push
fcompl
cltd
call
adc
mov
cli
or
cmpl
loopne
sub
xchg
jmp
je
dec
std
pushl
fwait
outsl
sbb
mov
or
push
sbb
push
test
inc
jp
jl
ds
outsb
stos
cmp
mov
pushf
mov
add
sti
sbb
ret
stos
sahf
incl
adc
fdivrl
pop
and
mov
iret
mov
sti
movsl
ljmp
addl
subl
hlt
in
push
aas
dec
adc
pop
popf
lds
in
les
push
mov
jo
ret
imul
cs
pop
hlt
sub
pop
in
mov
shll
in
inc
cmp
fdivrl
enter
xor
push
dec
outsb
dec
mov
dec
test
and
aad
cmp
cmp
xlat
es
fcmovb
push
push
xlat
jb
into
sbb
daa
lock
sub
je
pop
in
adc
or
or
jge
lahf
rorl
mov
in
add
sbb
jge
out
test
lea
fs
inc
test
cmc
adc
xor
push
mov
inc
cwtl
push
mov
mov
repz
mov
add
mov
in
outsl
mov
shr
lds
add
nop
sub
xchg
xor
dec
jne
imul
insl
push
push
dec
lock
or
or
into
jo
sbb
push
adc
cmp
in
dec
cmp
loope
mov
add
inc
dec
les
clc
inc
ret
mov
sahf
or
in
pop
nop
push
repnz
pop
ret
pop
stc
subb
repz
inc
ss
mov
sbb
mov
jns
ljmp
inc
fidivrl
dec
sti
jno
orl
inc
jl
mov
cmp
push
mov
cld
sub
sub
mov
std
daa
inc
ret
xsha1
sbb
mov
mov
sub
aas
inc
cld
dec
popa
aad
or
mov
push
and
mov
and
xor
mov
xor
pusha
xchg
cwtl
fs
push
dec
movsb
into
mov
inc
and
stos
nop
movsb
mov
fstps
icebp
add
pop
xchg
push
stos
dec
cmp
add
jl
ja
sub
pop
arpl
sbb
insb
mov
and
jo
cmp
xchg
and
fmulp
sub
lcall
mov
jae
cltd
push
cmc
push
xchg
sub
dec
rcrb
cmp
hlt
repnz
in
sbb
out
imul
iret
ljmp
inc
pushf
or
adc
pop
ja
push
daa
xchg
lahf
adc
pushf
pop
cmp
dec
repz
xorl
mov
es
pop
cmp
jecxz
call
loopne
mov
insb
test
jbe
lret
lock
mov
xor
cmpsb
sub
scas
rcrb
iret
inc
cwtl
xchg
add
scas
mov
ds
sbb
dec
adc
je
mov
std
aam
adc
rcrl
pop
fmuls
push
sbb
mov
push
mov
cld
pop
gs
rol
push
out
xchg
xchg
xor
cmp
jo
push
xchg
xor
pusha
push
cmpsb
sbb
cmp
out
ret
mov
leave
dec
jb
fnstenv
mov
call
xchg
push
fwait
pop
mov
inc
or
mov
push
sti
out
cmc
mov
icebp
inc
dec
sub
xchg
cs
sub
xchg
cli
inc
lahf
lret
out
inc
pop
add
mov
popa
loope
test
mov
mov
mov
push
mov
outsl
mov
iret
outsb
inc
mov
js
minps
push
cwtl
and
rclb
test
popf
cmp
mov
sbb
or
pop
repnz
aaa
shrd
pop
lods
rep
test
pusha
jne
cmp
pusha
add
imul
dec
mov
pop
daa
popf
mov
js
test
push
xor
jne
aam
sbb
sti
es
dec
fmuls
jmp
insl
ficoms
sbb
in
aaa
or
push
imul
sbb
outsb
jge
push
lret
xchg
into
push
mov
sbb
push
scas
shlb
add
loop
pop
mov
or
sti
dec
ret
xor
insl
incb
adc
out
inc
xlat
xchg
xchg
ret
and
cmp
cmpsl
mov
push
jecxz
cmpsl
imulb
sbb
and
aam
loop
mov
fcoml
orl
addr16
adc
shlb
fidivs
negl
mov
ret
pop
test
xor
out
inc
lds
push
adc
push
into
stos
and
mov
cmpsb
dec
ret
icebp
push
push
fiadds
cmp
adc
inc
add
vpextrw
lds
int
inc
jge
repz
in
int3
rcrl
jle
inc
pop
dec
sbb
mov
jns
sti
mov
pop
push
sti
addr16
test
cmp
jno
xchg
mov
mov
loope
jecxz
aas
sbb
ja
lret
dec
outsb
pop
ljmp
ljmp
mov
cmp
fisubs
ret
push
std
testl
adc
ja
push
xchg
push
adc
fcomip
loope
inc
dec
mov
bound
fmuls
or
add
es
mov
xlat
jnp
test
jle
roll
movsb
mov
sub
mov
mov
mov
inc
jmp
pop
jmp
cmp
mov
xor
cmp
fidivrl
xchg
inc
leave
inc
mov
lods
mov
scas
xlat
or
imul
mov
jae
repz
jnp
push
bound
aad
nop
lods
cwtl
sarl
outsl
test
or
scas
popf
lds
mov
pop
push
test
mov
popf
popf
xor
icebp
jae
sub
test
movsl
rorl
test
xor
popf
push
fprem1
test
fucom
xchg
scas
mov
or
mov
mov
out
mov
mov
cmpsl
mov
mov
repz
xchg
in
and
adc
pop
pushf
lods
sbb
mov
daa
dec
ret
adc
sub
push
imul
mov
leave
sub
jae
cmp
cmp
push
imul
push
jmp
lahf
dec
mov
arpl
jmp
or
adc
cmp
orl
notb
mov
lahf
jecxz
sbb
push
shll
mov
rolb
lock
add
dec
or
out
scas
lock
mov
pop
inc
xchg
push
and
gs
int3
add
or
lret
lock
clc
aaa
loope
out
xchg
mov
imul
mov
dec
inc
fs
test
xchg
sub
jg
scas
adc
pushf
push
aas
in
adc
neg
cmp
lret
stos
mov
dec
lods
lds
push
loopne
cmpb
fdivs
in
mov
mov
outsb
adc
and
mov
rcl
ljmp
gs
xor
dec
mov
cmpb
push
mov
in
cmp
or
ret
jl
lods
mov
mov
sahf
push
dec
cltd
push
repnz
scas
jl
outsl
js
cli
test
mov
fs
lahf
adc
pop
movsb
sbb
xchg
loopne
and
push
xor
push
lock
ljmp
adc
mov
mov
pop
jns
and
stos
jg
into
jne
or
sub
jnp
into
sahf
call
add
scas
scas
jg
cmp
insb
sbb
xchg
pop
adc
push
lock
dec
insb
cmp
or
out
adc
int
test
sub
xchg
and
and
out
cmp
adc
pop
sbb
in
jmp
pusha
idivl
and
shr
jg
in
faddl
jnp
ja
push
adc
fidivs
add
int3
cmc
mov
popa
rcll
int
xchg
scas
mov
xor
setb
push
fnstcw
mov
pushf
push
into
or
test
repz
dec
mov
mov
data16
adcl
xchg
outsb
pop
fsubl
fcompl
stos
lret
js
les
pop
mov
add
or
test
outsl
lret
lret
in
lds
push
int
inc
dec
in
or
xor
lea
dec
cli
pushf
adc
mov
out
xor
dec
out
push
mov
test
iret
imulb
lods
mov
add
dec
test
xchg
jo
add
mov
inc
push
mov
mov
dec
sub
jl
push
adc
shr
jecxz
cmp
push
add
ja
popa
aaa
stos
std
xchg
loope
add
popa
xor
inc
cmp
cltd
ja
pop
lds
mov
or
js
stos
add
in
ds
pop
push
sti
and
bound
lcall
mov
sub
dec
xchg
lret
orl
js
aaa
ja
pushf
mov
jg
ds
outsl
inc
jecxz
shl
pop
mov
iret
arpl
mov
and
aas
mov
mov
cmc
stc
rorb
mov
in
daa
push
sti
inc
in
sbb
in
xchg
add
mov
ret
insl
or
and
or
and
aas
lret
sub
mov
js
adc
jnp
and
pop
cmpsb
movsb
shl
mov
test
fisttpl
and
dec
fldenv
outsl
aad
addr16
repnz
pop
loop
sbb
repz
aaa
addr16
xchg
pop
mov
dec
adc
mov
loopne
dec
test
pmaxsw
push
aad
adc
dec
movb
loop
aaa
popa
in
sub
fstpl
xchg
mov
cmp
popaw
pop
jb
daa
push
push
addb
test
inc
sub
and
jp
cs
ja
sub
sbb
icebp
xchg
fs
mov
js
xor
stos
fnstsw
push
pop
dec
cmp
mov
rcl
cli
mov
repz
arpl
cli
cmpsb
or
clc
jne
add
insl
push
scas
sub
ficompl
cmc
enter
xchg
ret
lock
imul
loopne
js
dec
outsb
xchg
in
int
mov
xchg
movsl
arpl
popa
arpl
pop
out
fdivl
not
iret
incb
les
push
aad
bnd
cmpsb
icebp
and
popa
sbb
outsl
mov
fwait
inc
mov
lea
and
mov
push
repz
push
and
lahf
sbb
shlb
test
lret
jmp
fmul
pop
aam
les
loop
pushf
sub
lret
movsb
lret
cmpsl
lds
add
cwtl
jns
xchg
out
ret
test
jge
xchg
mov
or
or
out
cmpl
mov
add
sbb
fisubrl
cmp
pop
or
or
pop
xchg
fimuls
mov
push
xchg
cs
in
inc
nopl
cltd
shlb
pop
movsl
movsl
cltd
rolb
cmp
sbbl
inc
push
test
leave
and
pop
div
idivb
add
mov
imul
fsubs
cmpsb
inc
movsl
shl
push
popa
popa
inc
lret
out
xchg
jne
push
xor
mov
rcrb
xlat
fisubrl
dec
adc
cld
rcll
lods
dec
ror
in
push
shll
jno
inc
addr16
mov
out
or
aad
stos
pop
fiaddl
in
fisttpll
pop
insb
adc
int3
cmpsb
mov
ret
xor
aaa
xchg
pop
sbb
xchg
dec
out
mov
in
out
dec
stc
xchg
dec
xor
sahf
in
mov
shll
pop
popa
or
pop
pop
sti
jle
cmc
ljmp
dec
mov
cmp
xchg
ss
mov
pop
lds
into
jl
shl
pop
add
mov
out
cltd
fs
ja
movsb
inc
cwtl
or
sbb
lea
lcall
add
into
repz
or
and
mov
and
in
push
mov
in
push
mov
xchg
psubb
mov
sub
leave
lea
add
rcrb
scas
sub
pop
pusha
aaa
stos
push
out
leave
testb
or
sbb
clc
cmp
mov
sar
clc
xchg
in
dec
testb
xchg
jg
fldenv
mov
hlt
pusha
push
xor
push
outsl
cld
iret
add
mov
add
xchg
hlt
movsb
sub
cmpsl
sub
sbb
jge
sub
push
cmp
xor
and
popa
add
shll
mov
xlat
inc
test
sub
jge
xor
push
pop
ret
mov
xor
jo
sti
stos
enter
jne
lahf
sbb
and
jo
aam
push
lock
out
add
mov
jne
pop
pop
adcl
cli
add
push
add
mov
mov
arpl
popf
dec
shrd
pop
roll
mov
daa
xor
mov
cmc
aaa
jbe
icebp
mov
movsl
and
dec
inc
lods
lret
imul
addl
push
fildll
push
popl
mov
mov
push
frstor
or
dec
jl
sbb
mov
mov
mov
aad
out
push
pop
aas
xor
xor
mov
add
js
push
test
mov
lret
push
sub
fildll
jp
lret
scas
cltd
xor
les
push
in
les
imul
and
adc
scas
mov
xchg
sarl
daa
or
xor
aaa
int
test
push
and
ss
jle
dec
pusha
lods
movsl
or
xchg
jp
sbb
mov
js
mov
movl
pop
int
pop
sub
inc
cmp
xchg
jb
pop
jp
mov
cmp
push
inc
cmovs
adc
jae
test
mov
cmpsl
aam
jp
and
adc
test
jns
sbb
test
jno
dec
ja
dec
in
cmc
or
sbb
rcll
push
ljmp
inc
and
out
pop
pusha
inc
dec
test
sbb
inc
push
lds
adc
jno
in
jb
popa
mov
das
sbb
jb
mov
jae
mov
shll
jnp
xchg
mov
xor
subb
sbbb
into
and
and
sbb
fildll
dec
and
sub
push
add
int3
sahf
mov
push
cmc
in
ss
movsb
or
test
cmpsl
push
dec
push
aas
int3
outsb
mov
frndint
cltd
jnp
pop
mov
push
adc
addr16
lahf
popa
cmp
cmp
push
cwtl
dec
sbb
incl
and
cmp
push
pop
call
add
nop
inc
and
mov
jnp
fisttpl
sbb
cmp
xor
cmp
cmpsb
push
inc
push
jnp
shlb
pop
mov
and
repz
shrb
aas
in
sar
dec
sub
loope
arpl
xchg
repnz
fsts
pop
inc
xchg
lcall
dec
clc
mov
sbb
inc
addb
nop
std
repz
mov
xchg
lea
ds
pop
push
sbb
insb
xor
mov
push
xchg
push
sbb
in
scas
pop
sbb
loop
cmp
ds
add
adc
mov
cmpsl
mov
fwait
and
jle
jo
cmpsw
push
push
mov
sbbl
cmpsl
jnp
sub
jmp
inc
push
mov
das
jl
imul
push
adc
push
loop
fldcw
dec
add
clc
int
sti
inc
sub
cmp
push
cmp
loop
jns
sub
mov
mov
aad
int
jae
lods
test
pop
ret
cmp
jmp
movsb
inc
int
je
mov
mov
push
jae
je
imul
push
rcr
xlat
lock
inc
push
mov
iret
jns
std
fsubl
or
mov
cmc
mov
inc
clc
in
xor
shlb
jae,pn
addb
into
mov
repnz
fists
lret
imul
shll
out
jl
test
adc
fldl
mov
gs
mov
pop
fwait
xchg
inc
add
mov
std
gs
shll
adc
and
mov
out
push
lods
mov
mov
mov
leave
or
pop
in
lods
outsl
inc
jno
push
mov
xchg
hlt
cmp
mov
scas
in
push
lcall
nop
fcmovnb
add
ljmp
inc
je
addr16
outsb
push
inc
in
xor
sahf
popl
lret
adc
pop
rcrb
repnz
aad
lods
imul
dec
scas
call
adc
lret
cmc
daa
mov
in
data16
scas
fildll
jns
inc
add
out
mov
popf
pop
sbb
xor
adc
ljmp
push
popf
lods
pop
js
lds
int3
pop
js
sar
in
mov
shll
dec
sbb
sub
pop
or
negb
loop
inc
xlat
dec
jns
cs
aad
sub
adc
sub
das
test
jp,pn
adc
sub
jg
in
fstp
aad
mov
aaa
push
ret
inc
fadd
cmp
or
pop
orl
push
jb
mov
inc
test
pop
dec
pop
orb
sti
insb
insl
rcl
fmul
push
aad
sbb
pop
add
out
aas
or
lds
sbb
les
sti
icebp
fstp
push
jg
mov
lock
jae
add
xchg
movsl
in
or
ljmp
lods
adc
vmovupd
inc
dec
or
outsl
and
pushf
lea
movsb
mov
xchg
test
into
out
push
stos
jbe
mov
sub
add
jmp
repnz
dec
mov
fstpl
je
inc
xor
aad
push
or
andl
xchg
sbb
stc
xor
mov
sub
or
pop
mov
daa
inc
call
adc
cmp
shrb
loop
loopne
ja
pop
idivb
fwait
and
pop
ds
sbb
sub
dec
pop
add
pop
add
and
out
sub
bound
ds
cmp
fldenv
add
into
xchg
add
cmp
dec
pop
xor
jp
rcl
fdivrs
mov
push
cltd
jnp
push
adc
jne
xchg
outsl
lahf
jne
fs
insb
jge
and
scas
or
nop
or
sti
or
int
sbb
mov
in
add
fisubrs
fstpl
shll
sub
inc
adc
int
jo
das
jmp
xlat
add
inc
dec
cld
pop
jbe
dec
ja
shrl
push
nop
xchg
cmc
out
out
and
mov
mov
inc
xchg
into
lock
out
clc
pop
cmp
pop
or
imul
add
inc
mov
cmpb
sub
cmpsb
dec
xchg
cmp
pop
push
and
sub
fidivrs
cltd
bound
clc
pop
mov
int3
push
rorb
out
mov
in
pushf
stos
leave
out
sub
xchg
mov
fstpt
jo
arpl
pop
jnp
ret
dec
jg
dec
scas
mov
lods
or
mov
cmp
sub
popa
outsl
sbb
adc
push
cmp
pop
subb
jecxz
push
call
cltd
or
in
jl
lret
mov
add
sbb
sub
imul
sub
cmp
movl
icebp
mov
inc
clc
fisubrl
mov
inc
lock
arpl
add
cs
adcl
subl
jmp
cwtl
cmpsl
and
popa
xor
or
clc
bound
das
cmp
lcall
les
js
int3
repz
cvtdq2ps
addr16
push
popf
fcmove
inc
aaa
sbb
push
lods
jae
inc
mov
mov
jnp
mov
dec
out
push
lcall
cmp
repnz
cltd
lahf
jns
sbb
inc
mov
pop
rolb
pop
mov
mov
cmp
sub
stos
clc
aas
fldl
data16
and
inc
jb
or
pop
xlat
arpl
dec
hlt
ljmp
icebp
rcl
cmp
jp
mov
test
push
mov
jae
xchg
mov
rorl
inc
out
jne
cli
jb
fisubrs
push
in
dec
out
or
stc
mov
loop
xchg
addr16
dec
jae
dec
aad
pusha
rorb
int3
jmp
xor
mov
nop
cmp
sbb
das
push
jae
rsm
je
xor
push
add
jl
cld
adc
inc
je
mov
jmp
insl
and
scas
out
mov
or
jg
mov
xchg
and
or
movsl
sahf
repz
cld
pop
cmp
and
les
mov
fstps
lret
negb
mov
icebp
iret
pop
jnp
sub
cmp
out
aas
sub
pop
push
mov
mov
xor
jnp
adc
cmc
test
xor
xor
and
aaa
shl
dec
imul
jae
xchg
cli
arpl
into
lods
fwait
mov
xchg
and
adc
jge
nop
cmc
mov
es
pop
sbb
dec
test
jle
pop
push
aas
roll
mov
or
filds
push
movsb
xor
xlat
enter
pushf
mov
mov
dec
iret
xor
inc
lea
mov
jmp
je
jecxz
mov
outsl
add
pop
lret
arpl
mov
movsl
shll
push
pop
jmp
shlb
add
rcl
lahf
dec
add
test
repnz
enter
pop
into
lock
adc
xor
fcoms
cmp
mov
cmpsl
push
popf
loope
out
add
adc
lret
pop
jb
add
xor
popa
pop
fwait
jnp
test
out
nop
ja,pt
jo
in
fistps
out
mov
repnz
lods
dec
cmpsb
push
add
and
add
mov
outsb
call
pushf
xchg
adc
pop
stos
loopne
je
mov
pusha
xlat
pop
rcrb
dec
arpl
mov
aaa
mov
and
pop
stc
mov
mov
sub
aas
fsubs
sbb
pop
pushw
add
cmpsl
push
lods
aad
fisttpl
or
add
popa
es
in
or
inc
fpatan
ds
lock
and
jb
movsb
add
xchg
mov
cmpsb
sub
push
mov
dec
leave
or
arpl
xor
ljmp
inc
test
es
mov
or
sub
enter
dec
insb
in
lods
adc
cmc
cmp
sbb
or
rcrl
aam
scas
into
test
sbb
inc
jb
imull
repz
mov
std
cmp
mov
sub
mov
shlb
sbb
add
adc
je
dec
push
out
inc
bound
andb
insb
dec
jp
fidivl
mov
cmp
mov
nop
push
push
call
mov
push
incl
sbb
jnp
subl
mov
bound
xchg
cs
addr16
fsts
testb
cmp
rorb
push
hlt
sub
rcrl
sti
loop
pop
in
loopne
mov
gs
shl
or
mov
test
das
popa
outsl
movsb
lds
pop
shrb
pop
adcl
testl
repz
xor
jl
fsubrs
ds
int
dec
pusha
pop
dec
adc
cmp
or
and
gs
into
push
dec
inc
test
sbb
jle
movsb
das
test
scas
call
ljmp
xchg
fimuls
cmp
dec
mov
pop
rorl
sub
nop
ljmp
outsl
fisubrl
data16
int3
xchg
cmp
inc
sub
jb
push
repnz
mov
out
pop
aaa
es
mov
cmp
cmpsl
filds
idiv
xchg
push
add
mov
xor
xchg
fs
fbld
adc
lds
cmp
aaa
loopne
cvtps2pd
test
in
cmp
mov
sub
mov
or
repz
xchg
mov
jno
shlb
xchg
and
xor
dec
sbb
or
sar
cmpb
es
adc
xor
shll
mov
lods
push
mov
loope
cmp
outsl
scas
pop
es
xor
cmp
push
inc
rcr
add
sbb
fcomps
addb
add
shrl
cmp
loop
imul
lret
mov
add
int
fsubs
mov
shll
add
or
popa
add
movsl
push
jp
cmc
mov
mov
mov
add
into
mov
mov
int3
pushf
xlat
xchg
fwait
adc
daa
outsb
jo
inc
test
push
pop
std
jb
push
into
inc
mov
insl
pusha
add
xchg
push
jg
ret
rol
dec
mov
fsts
ficompl
bound
ds
fsub
fldt
in
lock
pop
pop
mov
repnz
pop
insl
xchg
hlt
clc
and
push
xor
lret
pop
int3
imul
cmp
shll
or
add
lods
cmp
dec
adc
js
sub
ret
aas
mov
aam
dec
out
enter
mov
jo
mov
xchg
mov
lods
add
out
jmp
push
xorb
aam
add
xor
stos
imul
dec
cmp
cmp
inc
sbbb
lods
lret
pop
movsb
push
xchg
add
sarl
in
cmc
in
dec
fstps
and
sub
jbe
mov
pop
jo
popa
fwait
shl
andb
lock
lock
cmpsl
leave
pop
outsb
gs
cmp
nop
push
aam
add
adc
imulb
mov
jae
ja
add
outsl
sub
mov
or
imul
shll
mul
lds
push
loope
mov
push
fs
jne
jg
popa
adc
test
lea
fcmovnu
adc
jno
or
push
and
fmull
stc
repz
rcll
loope
and
cmp
cld
or
jp
test
cmpsl
jge
shl
inc
fs
or
pop
ja
rorb
jle
mov
les
inc
movsb
mov
addr16
push
or
sub
inc
mov
push
xchg
cmp
out
xchg
push
sub
push
enter
or
insb
js
stos
clc
jge
and
xchg
insb
idivb
inc
push
outsb
add
adc
inc
xor
mov
sbb
std
pop
lret
mov
mov
push
jb
add
imul
push
mov
cld
add
inc
add
xchg
das
and
iret
pop
out
dec
sub
adc
rolb
xchg
jae
xchg
popa
xor
xchg
aad
outsb
mov
sahf
add
pop
ljmp
mov
or
adc
adc
int3
or
mov
pop
movsl
clc
imul
sub
jge
repz
or
popf
out
ret
pusha
and
inc
shrd
pop
mov
dec
mov
test
std
inc
sub
ficomps
push
dec
add
push
ljmp
xor
mov
adc
pop
mov
mov
xchg
bound
push
pop
test
repnz
divb
mov
daa
push
lcall
mov
mov
pop
scas
rcll
mov
mov
mov
cmp
insl
jno
mov
jecxz
in
pop
mov
imul
and
push
jb
shll
rorl
jg
jle
ljmp
sti
repz
aaa
pop
xor
jae
psllq
jne
mov
push
enter
out
repz
mov
subb
jecxz
popf
lret
frndint
dec
add
push
not
push
inc
push
pop
mov
mov
dec
mov
out
push
pushf
jbe
cmovnp
fs
or
ror
fidivs
push
and
adcl
and
lock
jb
jmp
inc
xor
scas
lds
lcall
add
mov
sbb
mov
cmp
lea
lods
cmp
push
insb
jnp
cmp
mov
cwtl
pop
sahf
xlat
xlat
ret
cs
ds
popa
sbb
outsb
jl
lea
xor
push
pushaw
js
dec
cmp
fidivrl
mov
not
push
mov
cmp
fucomi
dec
pop
std
bound
jg
in
pcmpeqw
lcall
or
or
xlat
mov
inc
fcoms
or
rcrl
lret
andl
mov
mov
test
and
sbb
rorl
xor
loop
push
jp
push
jnp
push
push
mov
push
and
and
push
mov
sub
add
add
inc
mov
pop
insl
dec
push
call
mov
ja
or
cwtl
lods
loopne
inc
mov
dec
stc
xor
mov
lret
pop
xlat
sbb
dec
mov
out
cmp
and
cli
les
inc
shll
mov
mov
sbb
fisubs
repz
fisubrs
sbb
lea
fnstenv
ljmp
xchg
mov
xchg
leave
and
sub
int
out
mov
lds
adc
sub
pop
jle
inc
stos
fsubrs
sub
sub
dec
fistpll
push
push
outsb
popa
push
jo
sbb
pop
mov
mov
dec
lret
in
xchg
clc
mov
adc
clc
add
cmp
dec
test
add
xorb
sbb
pop
test
jmp
int
push
push
out
sahf
pop
sarb
jbe
sahf
scas
and
push
loop
cmc
push
outsl
and
data16
inc
pusha
out
js
jmp
adc
out
pushf
or
lret
xor
push
xchg
pop
mov
insb
and
sti
fbstp
mov
ljmp
popf
sbb
sbbl
push
popa
mov
movsb
mov
cmp
cs
sti
mov
pop
cvtdq2ps
mov
lret
pop
add
cmp
pushf
ss
mov
inc
xor
xlat
pop
inc
mov
mov
mov
lret
add
adc
xor
inc
jg
mov
mov
in
jae
mov
scas
push
out
in
cli
pop
dec
and
adc
leave
cmp
lahf
jmp
fisubs
pop
inc
call
mov
lret
movb
and
lds
push
into
jle
daa
arpl
pop
enter
or
dec
mov
and
pop
pop
xchg
dec
mov
lret
and
jg
movsb
push
jae
adc
hlt
sub
dec
mov
jp
or
xchg
pop
jg
cmpsb
cmpsb
dec
xchg
aaa
fistpl
xor
into
add
fstl
outsl
aam
jae
stc
mov
test
jb
jno
dec
inc
cltd
mov
push
lock
pop
fwait
push
or
sub
subl
movsb
dec
cli
scas
jge
xchg
adc
mov
loope
jno
cmp
pop
or
stos
xchg
js
mov
mov
push
xchg
add
jb
mov
add
int3
mov
inc
mov
xor
cmp
stc
sub
andl
push
insb
sub
sbb
cs
out
jns
xchg
imul
jmp
sub
sbb
sbb
mov
pop
xor
leave
sbb
sbb
xor
push
jp
scas
mov
std
mov
mov
mov
ja
pop
aas
sub
faddp
test
test
cld
xor
lahf
mov
pop
cwtl
cmp
mov
clc
mov
sbb
aaa
repnz
push
gs
cld
dec
popf
cmp
insl
enter
inc
mov
mov
cld
div
jge
xlat
dec
jp,pt
aaa
mov
jle
hlt
jnp
sub
sti
dec
inc
jo
sub
fldcw
pop
jb
scas
shll
xchg
cld
mov
add
dec
mov
loopne,pt
dec
loopne
adcl
imul
fwait
outsb
pop
scas
cmp
xlat
gs
movsb
pop
cmp
mov
mov
sub
insb
mov
in
cmp
aas
pop
call
stos
out
repz
fdivs
cs
pop
xor
pop
jnp
cmp
pusha
int
jp
add
fisttps
jecxz
sahf
xor
movsl
or
das
pop
hlt
cld
pop
adc
mov
pop
push
add
scas
lcall
cmc
movsb
cmp
jns
mov
inc
cs
or
js
sbb
fwait
sub
lahf
mov
and
xchg
sub
dec
xlat
in
sub
bound
frstor
inc
fwait
pop
pop
stos
jle
loopne
movsb
mov
adc
stos
jge
and
adc
adc
pop
fwait
in
cmpsl
lcall
pushf
flds
adcb
jg
imul
jge
rcr
or
sub
js
dec
lret
out
or
lods
js
pop
sbb
js
aas
mov
fiadds
dec
or
push
pop
dec
fistl
mov
mov
fsubs
mov
cmp
scas
ret
pop
mov
mov
lcall
fs
ficompl
jns
cld
adc
ljmp
popf
push
sbb
jno
lock
lea
negb
daa
loop
jg
add
jb
fwait
inc
frstor
fwait
stc
xlat
jle
jmp
jno
dec
sub
divl
or
pop
mov
sub
mov
push
sar
or
cltd
scas
jbe
dec
push
jno
mov
jae
push
hlt
dec
repnz
ret
inc
mov
push
mov
mov
xchg
or
notl
in
push
cmpsb
in
mov
popa
sarl
fdivp
and
or
sub
std
cmp
xor
mov
jno
xor
iret
icebp
pop
push
inc
int
mov
insb
add
pop
mov
fstl
xor
hlt
test
pop
insb
jo
jns
add
jle
inc
or
fs
sbb
mov
push
lods
jb
mov
inc
sub
popa
cs
lret
adc
cmpsl
sub
cltd
shlb
insl
and
inc
jno
cmp
jbe
inc
lahf
push
xchg
arpl
aas
jp
movsl
fcoms
mov
movsb
lret
in
sbb
mov
fld
xchg
push
xor
push
inc
push
outsl
mov
sbb
or
rol
jnp
inc
xor
leave
jmp
mov
jp
push
les
pushf
fists
js
mov
and
sbb
push
inc
mov
int
in
dec
jae
pop
test
nop
dec
or
into
ljmp
pop
lret
data16
sub
test
and
testb
sbb
mov
mov
cld
and
dec
pop
mov
sbb
push
in
inc
fistpl
mov
sub
fstpl
mov
enter
int
mov
push
mov
jb
push
cmp
push
fistl
lods
popa
push
ret
std
jp
out
jb
rclb
cld
shr
ret
jne
cwtl
rol
hlt
push
sahf
popf
cli
out
mulb
and
stc
and
imul
or
add
subb
or
mov
outsl
jge
and
or
jecxz
mov
mov
jo
ss
mov
push
pop
loop
pop
adc
loopne
mov
enter
jns
pop
rcrb
or
pushf
jl
sbb
inc
push
call
push
mov
push
xchg
movsl
pop
cmp
sti
dec
cmp
ja
bound
pop
fmull
jl
xchg
push
adc
push
jmp
dec
jl
cmpsb
push
ljmp
pop
mov
imul
jl
sub
cmpl
lret
dec
dec
cli
or
and
pop
cmp
mov
outsb
mov
jno
dec
add
icebp
jge
inc
push
loop
outsl
sub
loopne
sbb
jae
mov
aas
sbb
rcr
mov
leave
xor
push
pop
adc
jae
or
ja
sbb
cld
clc
cmp
push
mov
sub
dec
je
int3
cmp
and
adc
lds
sti
xor
in
sub
pop
movsl
pusha
xchg
mov
int3
push
or
movsl
or
jle
mov
and
push
fsubrs
les
sbb
nop
push
and
mov
mov
jmp
idivl
adc
mov
or
adc
sub
mov
mov
add
jb
aam
xchg
movsl
lret
mov
mov
into
dec
mov
mov
push
jae
xorl
gs
fcomi
pop
mov
jl
cmp
fdivrl
pop
aas
popf
cld
call
loop
lea
aas
add
pop
aas
push
dec
popa
fstl
imul
imul
fxch
add
in
dec
xchg
stc
mov
inc
dec
xchg
cmp
pop
lahf
mov
jae
movsl
out
cmpsb
cs
js
loope
push
orl
sbb
fmuls
fcoms
pop
mov
mov
xor
sarb
aas
jae
jl
or
sbb
sbb
jg
cli
xor
ljmp
inc
sbb
lcall
cmp
popf
sti
out
push
and
cmp
or
lds
sbb
xor
mov
jmp
fstpl
push
xor
in
mov
push
lret
pop
pop
jle
das
pop
shrb
mov
test
xor
imul
inc
stos
repz
inc
fcomp
adc
mov
hlt
push
mov
lahf
mov
jg
inc
push
in
xchg
mov
lock
int3
mov
push
std
test
inc
mov
dec
sub
cltd
push
lahf
push
ljmp
jmp
movsl
lcall
pop
adc
sub
clc
movsb
push
movntq
lods
in
loop
push
fwait
mov
lds
lock
sub
add
sbb
mov
mov
add
inc
pop
mov
mov
or
fndisi(8087
or
subb
icebp
dec
cmc
cld
jne
dec
xorl
mov
les
outsl
inc
jle
xchg
nop
inc
pusha
pop
mov
lret
mov
push
adc
and
dec
push
rclb
stc
insb
outsb
dec
popa
mov
pop
dec
int
mov
sarb
outsl
jge
xchg
or
out
clc
dec
xor
int
jl
pop
dec
push
es
das
sbb
mov
addr16
dec
adc
adc
lods
dec
jns
xlat
dec
stc
pop
sbb
add
jb
xchg
adc
jbe
add
xchg
mov
xor
adc
pop
gs
mov
aas
mov
cmpsb
popa
pop
xor
stos
mov
movsl
pop
jns
nop
iret
in
rorl
in
adc
sub
dec
shlb
pop
fdivrs
iret
push
cmp
jo
xchg
mov
mov
int3
je
sbb
insb
divb
jle
xor
cmp
sahf
jecxz
pop
insb
push
cmp
xor
cmp
push
inc
mov
inc
popa
jge
fcoml
stos
jo
pop
cwtl
push
shr
mov
out
dec
repz
pop
sbb
dec
mov
icebp
inc
sbb
std
mov
inc
jecxz
lea
sbb
lret
mov
push
pushf
hlt
fildl
jge
test
es
mov
shrl
push
mov
mov
cld
shlb
in
into
jne
mov
mov
push
jmp
xchg
mov
insl
loope
push
es
cs
insl
ds
stos
jnp
jge
jne
test
sbb
dec
dec
cmp
std
jno,pn
pop
ljmp
mov
sub
mov
sub
sbb
or
arpl
ret
fcoml
sbb
cmc
icebp
loope
inc
or
mov
xor
loopne
pop
lea
and
xchg
jae
jg
out
xor
call
push
adc
test
repz
dec
movsl
cwtl
xchg
popf
in
fistl
or
pop
inc
adc
daa
sahf
jne
dec
xor
sub
sbb
inc
xor
pop
cmc
dec
iret
push
xchg
stc
inc
mov
leave
mov
insb
pop
call
and
scas
loope
mov
cmp
hlt
push
les
add
and
jns
mov
pop
xor
popf
fbld
dec
cltd
stos
pop
adc
and
mov
push
sbb
lods
adc
int
xor
loopne
dec
xor
jge
jns
sub
pop
add
sti
and
jp
call
inc
add
fcomp
loope
and
in
push
xchg
xor
sbb
jns
je
out
insl
in
std
out
gs
mov
sbb
repnz
fadd
fchs
adc
adc
js
or
popa
xor
jbe
or
shll
outsl
aam
js
fwait
push
jns
cs
and
xchg
push
mov
lock
lret
mov
or
movsl
jo
mov
sub
rolb
popl
repz
inc
repnz
jp
insl
pop
aas
pop
fidivrs
or
sbb
pushf
sti
pop
jg
iret
sti
pushf
xchg
insl
and
dec
sahf
xor
ficompl
or
negl
dec
sbb
das
dec
lret
lret
lods
jmp
add
out
outsl
fisubl
clc
sbb
mov
sub
iret
stos
ds
shrl
movsl
push
mov
flds
jmp
or
mov
ficompl
mov
jl
mov
les
jo
push
lret
insl
inc
sub
inc
aam
mov
call
mov
scas
test
imul
inc
test
xchg
shll
xchg
insb
cmc
mov
sub
xchg
sbbb
xor
fbstp
out
fadds
xor
jns
data16
xorb
mov
in
push
mov
or
mov
cmp
add
ret
cmp
div
mov
sub
out
xor
xor
shl
xchg
sbb
jg
xor
jg
in
jecxz
sub
adc
sbb
mov
adc
rol
es
sahf
lahf
fcmovbe
add
push
and
jae
stos
pusha
repz
popa
inc
mov
sbb
jp
or
shlb
and
dec
xor
xchg
xor
inc
outsb
fwait
je
pop
rcr
mov
outsl
pusha
filds
pcmpeqb
xchg
stc
stos
aad
cmp
sbb
jle
cmp
into
add
mov
scas
jne
xorl
mov
jbe
mov
mov
scas
insl
das
mov
lods
das
adc
cmp
cli
andb
ret
and
pop
cmp
and
pop
push
dec
insb
or
sbb
ret
in
lods
pop
add
stos
pusha
not
inc
adc
push
sti
idivl
jmp
ret
mov
sub
mov
pop
lea
xor
cltd
sbb
jnp
add
cmpsb
dec
sub
xorb
shll
fwait
pusha
cmp
daa
iret
clc
fldt
mov
dec
das
movsb
push
mov
xor
push
add
shlb
inc
and
cmp
lds
inc
sub
sub
push
pop
ret
xchg
lea
shrb
pop
bound
jo
pop
mov
push
dec
divb
push
push
ds
sbb
inc
mov
push
cmp
and
fstpl
sbb
xchg
xchg
in
gs
mov
cmc
mov
addr16
cwtl
fs
add
jbe
insl
insl
bound
mov
sbb
pop
mov
push
pop
not
lahf
aad
loope
adc
out
sbb
or
cltd
lahf
pop
movsl
call
repz
cmc
addr16
lret
dec
mov
and
pop
lods
test
push
cmp
das
shll
subb
mov
out
in
xchg
stos
adc
mov
int3
loop
pop
cwtl
inc
sub
jno
and
imulb
ficompl
jbe
cltd
sbb
cmp
pop
stos
cmpps
inc
cmpl
fwait
lea
mov
daa
sub
dec
dec
ss
pop
pop
cmp
aas
data16
cmp
jne
ljmp
jns
push
cld
test
in
mov
push
lea
push
add
int
jl
dec
and
pop
enter
cmpsb
pop
jle
push
add
add
rorl
data16
pop
iret
add
test
push
push
popa
xchg
outsb
and
in
fdivl
stos
iret
das
mov
push
outsl
or
xor
cmpsl
or
out
jl
out
loop
mov
pop
sub
jnp
lods
sbb
jbe
push
adc
lea
or
aaa
enter
xchg
fldl
jg
or
orl
insb
out
jb
push
and
push
xchg
mov
xor
xchg
sbb
hlt
cmp
mov
aam
lea
mov
push
pushl
inc
and
push
pop
adc
pop
call
shll
ljmp
loope
cmp
dec
mov
insl
int
and
mov
or
iret
ds
aas
jbe
int3
jo
jle
test
sbb
xchg
push
scas
lods
out
add
call
in
inc
icebp
or
push
lock
mov
pop
mov
decb
inc
mov
xchg
jge
or
rcrl
or
cmp
jno
insl
test
out
jbe
mov
jns
in
loop
cmp
pop
jno
in
imul
xor
inc
push
lret
jp
jle
in
orl
repnz
and
push
lcall
dec
in
mov
xor
ljmp
push
xchg
ficomps
sbb
lret
bound
rcll
aas
push
movsb
jo
dec
loope
jecxz
sahf
pop
jno
iret
cmp
movsl
adc
movsb
int
outsl
sbb
xchg
pop
sbb
test
mov
lock
xchg
or
bound
in
imul
mov
inc
adc
cmpsb
popa
lret
pop
mov
jae
xor
inc
pop
mov
int3
in
mov
fbld
push
add
mov
cmpsb
inc
popl
sbb
arpl
mov
jmp
pop
pop
mov
jg
lods
out
jmp
cmp
mov
and
mov
call
push
inc
in
inc
push
sub
loop
les
dec
mov
js
xchg
pushf
pop
sub
adc
fcoml
jne
add
sbb
lds
pop
xchg
dec
inc
sbb
testb
xor
inc
mov
or
mov
push
fmuls
pmullw
mov
cmp
and
jg
in
fiaddl
dec
pop
mov
mov
push
clc
sti
xchg
pushf
push
pop
pop
int3
int
fdivrl
arpl
insb
arpl
mov
clc
adc
jmp
jmp
mov
pushf
adc
jecxz
arpl
mov
inc
sbb
xchg
xchg
xor
mov
aam
inc
inc
in
test
clc
fimuls
push
jnp
or
mov
enter
jp
mov
cli
test
sub
pop
scas
clc
or
fdivl
stc
adc
mov
cmp
mov
inc
std
mull
pop
mov
in
mov
test
scas
add
or
and
rolb
fists
into
xor
or
mov
xchg
jl
sahf
jecxz
add
mov
sub
and
jbe
and
sub
mov
mov
and
mov
mov
mov
adc
mov
aas
mov
fisttpll
repz
or
push
mov
pmuludq
outsb
jl
or
ss
xor
leave
mov
sbb
pop
rcrl
les
sarb
pop
push
hlt
call
enter
xchg
daa
lds
mov
aas
push
fnsave
xchg
xchg
hlt
lods
int
std
mov
xor
jo
das
repnz
jne
jae
adc
or
push
repz
cmp
and
adc
mov
popa
push
mov
fbld
push
les
push
fmuls
xchg
pop
mov
or
lahf
lret
sti
test
jo
xchg
bound
pop
outsl
pop
in
lret
add
mov
loopne
or
jle
stc
jne
dec
lock
std
cld
fwait
cmp
scas
and
repnz
xlat
push
outsb
jb
mov
adc
push
es
xchg
jl
jge
test
pop
sysret
lods
dec
push
fs
lds
stos
lahf
pop
cmp
cmp
int
arpl
mov
sub
push
bound
sbb
xchg
js
pop
mov
push
pop
lret
dec
mov
inc
push
scas
pop
dec
into
sbb
icebp
sub
jb
pop
xor
ds
lock
aam
sbb
cwtl
sbb
jmp
pop
or
push
stc
push
mov
movsb
lods
mov
push
test
cld
push
and
pushf
fidivrl
cli
cmp
or
out
lret
mov
mov
shrb
inc
lret
clc
loop
shl
and
inc
pop
pusha
sub
sahf
test
jns
sbb
sbb
mov
jg
addr16
dec
inc
fsin
pop
push
das
xchg
lahf
mov
pushf
add
repnz
negl
js
ja
sub
or
or
stos
dec
xor
mov
lret
add
adc
testb
insb
es
aad
icebp
cli
xor
aaa
int
lret
dec
xor
mov
shll
xor
repnz
pop
insl
push
ljmp
pop
pop
pop
int3
fmul
mov
daa
and
shll
mov
cs
xor
mov
rolb
sbb
repnz
ja
xchg
data16
dec
fcomi
imul
xor
mov
mov
outsb
lret
imul
push
mov
jg
cmp
mov
in
push
addr16
or
xor
loop
roll
repnz
sahf
popf
aam
pushf
hlt
add
mov
jmp
lods
xchg
shll
sbb
inc
jmp
sbb
fstpl
sub
jecxz
cmpl
jge
pop
les
mov
cmp
add
pop
out
fs
xor
jg
scas
pop
xor
ja
mov
test
js
fsubrl
sahf
insb
jne
rcrl
lods
xchg
push
or
push
js
adc
scas
enter
repnz
push
nop
loope
inc
adc
xor
jp
fisubs
jns
rolb
mov
outsl
push
hlt
in
jp
shll
xor
pop
add
stc
fmull
push
xchg
inc
cwtl
mov
push
add
pop
bound
addr16
sub
pushl
xchg
loopne
cld
mov
aam
jmp
cmp
rcrb
xchg
test
stc
leave
and
insl
cmp
jae
pop
arpl
sbb
ret
shl
dec
fists
pop
push
lahf
js
daa
out
ss
pop
xchg
adc
js
stos
push
dec
imul
fs
inc
cli
rorb
dec
fwait
mov
and
jno
xor
jg
rcl
out
lock
test
pop
xor
xlat
lahf
lret
mov
xchg
inc
into
cld
mov
mov
and
mov
jne
ret
mov
inc
decl
adc
mov
imul
sub
imul
clc
lea
test
fwait
xchg
sub
out
mov
arpl
sub
sub
cwtl
and
repnz
or
jbe
push
mov
jae
movsb
scas
cld
add
neg
pusha
pop
dec
aad
ljmp
jno
mov
pop
lret
jae
lret
stos
stos
jne
xlat
pop
ret
sub
pop
loopne
pop
push
adc
mov
or
mov
sbb
test
mov
push
test
lds
pop
pop
mov
jo
cli
ret
jp
ljmpw
int3
repz
or
jne
int3
ret
adc
ss
cmp
dec
push
mov
cmpsb
std
cmp
sbb
mov
test
sub
push
push
cltd
leave
dec
cmp
faddl
roll
jne
out
jl
mov
xchg
out
mov
cmc
les
loopne
xchg
inc
loope
cmp
mov
rclb
pop
loopne
out
jecxz
adc
in
jnp
lcall
jns
xor
sub
push
dec
dec
scas
cmp
stos
pop
jecxz
fistpll
sub
jae
push
insl
lahf
je
dec
mov
mov
filds
mov
xor
mov
dec
xchg
and
xchg
cmc
jmp
iret
aam
dec
jno
xchg
in
push
inc
push
ja
mov
nop
jcxz
jmp
icebp
out
push
and
xchg
das
xchg
add
dec
xchg
adc
or
pop
push
lret
jo
add
lds
cmp
call
push
mov
cmp
popa
out
jno
mov
inc
adc
sub
popa
cmp
leave
mov
push
nop
addl
cli
pop
fcmovnu
dec
or
cltd
jecxz
push
fidivl
mov
mov
fistpl
aam
cmp
inc
cmpl
mov
pusha
pop
xor
sub
mov
or
lea
mov
fimull
mov
jecxz
push
mov
ljmp
andb
cmc
dec
subl
pop
outsb
cld
jmp
dec
movsl
and
push
out
mov
mov
test
push
fildl
cs
push
xor
ljmp
lret
iret
lcall
arpl
fsubs
mov
subb
xchg
imul
adc
mov
outsl
pop
xchg
push
sub
and
repz
dec
testb
xor
fcmovbe
adc
cld
ret
in
or
imul
out
subl
pusha
aaa
scas
lock
cmp
inc
repnz
push
cld
test
cwtl
gs
stos
leave
push
test
dec
js
faddl
popa
cmc
leave
adc
fcomps
pop
jmp
pop
dec
cs
cld
xchg
dec
out
inc
push
inc
sbb
adc
test
and
iret
je
dec
xor
push
and
inc
xchg
jp
adc
iret
adc
jecxz
jae
divl
scas
rclb
js
mov
mov
sbb
imul
xor
and
imul
nop
adc
inc
das
sbbb
sbb
aas
cmp
rolb
mov
and
xchg
sub
and
iret
sti
xchg
cmp
sub
cmpsb
in
aas
add
cmp
jge
mov
mov
add
aas
sub
shlb
sahf
lds
cmp
stos
push
fdivp
cld
and
sub
push
dec
js
popa
hlt
les
xchg
cld
cmp
jecxz
fwait
mov
push
xor
aas
rcrl
aam
data16
sub
mov
ljmp
aas
sahf
jmp
insl
push
repz
mov
add
in
sbb
mov
jnp
dec
pop
mov
mov
or
and
sbb
addr16
sub
jne
mov
scas
into
into
adc
mov
test
mov
and
cmp
add
lahf
jns
push
out
js,pn
xchg
ret
xchg
test
jecxz
pop
ja
jl
xor
fcmovne
mov
movsb
aad
insl
bnd
xchg
inc
mov
lea
and
jge
xchg
in
inc
mov
sbb
mov
push
fwait
into
mov
push
cmp
lds
cli
adc
push
cmp
cmp
jo
mov
sub
je
sbb
jle
cs
and
lahf
lods
ret
mov
movsb
sub
cld
cwtl
fistpll
cld
repz
and
jae
aaa
and
push
mov
fisubl
cmpsl
pop
cmp
jmp
adc
push
mov
pop
test
mov
out
lret
mulb
add
ret
mov
inc
xchg
addr16
cmp
insl
ss
jmp
shlb
pop
int
cmp
das
inc
jle
jne
or
scas
int
clc
inc
and
adc
pop
fwait
sbb
lret
sbb
inc
enter
cld
or
and
cmp
fimuls
outsl
or
test
gs
lock
xor
rcr
wbinvd
pop
pop
cmp
inc
jae
imul
fnstsw
cmp
push
sub
push
mov
addr16
mov
insb
js
sbbb
enter
test
xor
sbb
in
mov
mov
push
lods
cmpsl
test
daa
data16
push
and
popl
repnz
leave
mov
mov
and
fdivrl
pusha
mov
add
jecxz
lds
les
push
mov
push
loop
ds
jecxz
ret
ljmp
jle
imul
push
std
pop
sbb
into
cmp
push
pop
or
rcrl
iret
inc
xchg
xchg
or
pop
pushf
movsl
sbb
or
movb
aaa
pop
scas
shr
inc
sahf
mov
lods
cmpsb
jl
lods
sub
jecxz
jl
mov
pop
add
movups
push
sahf
pushf
cmp
mov
adc
push
adc
dec
leave
mov
mov
popa
pop
ds
add
xchg
inc
sub
in
sub
imul
or
ss
ja
add
std
scas
or
xchg
fisttps
and
xchg
or
sub
scas
jp
adc
adc
lods
lock
and
das
dec
rclb
movsl
cwtl
sbb
or
mov
mov
in
cld
add
es
jmp
xorl
int3
mov
movsb
mov
enter
test
in
dec
stos
mov
dec
mov
cwtl
cmp
sub
xchg
cs
pop
call
ret
mov
xor
imul
sti
sub
dec
push
mov
mov
cmp
or
bsf
daa
mul
mov
mov
xchg
rclb
les
xchg
inc
xchg
xor
sub
loop
lock
cmpb
adc
xor
cmp
lret
movsl
jmp
dec
jg
cmp
aam
shlb
mov
lods
pop
push
stc
dec
lret
adc
stc
jp
jmp
gs
mov
xor
testl
push
adc
jns
push
lea
push
std
adc
pushf
sbb
cmp
dec
in
jmp
sub
adc
xor
mov
mov
nop
push
jno
insb
and
mov
dec
or
fdivs
sbb
jns
fdivr
sbb
xchg
xor
sbb
nop
and
jecxz
cli
stos
push
adc
or
pop
xor
cmpsl
lods
cmp
mov
daa
enter
fsubs
mov
xchg
ret
inc
add
mov
daa
insl
aam
mov
mov
aas
pop
xchg
sub
sbb
int
fmull
or
cmp
inc
scas
inc
mov
sub
cli
movsb
mov
movsl
jp
pop
std
shrl
and
lret
outsb
xchg
cmp
mov
pop
mov
test
insl
or
addr16
jmp
sbb
decb
push
aam
push
mov
movl
pop
pop
jb
pop
pushf
iret
mov
pop
jb
sub
sub
or
ss
sub
sub
bound
dec
jae
xor
or
push
out
dec
imull
call
fisttpl
add
repnz
ljmp
fldenv
ja
dec
push
xchg
mov
inc
sbb
imul
pop
and
adc
jb
sub
in
in
sub
pop
sti
dec
mov
pop
pop
jecxz
mov
out
loopne
dec
loopne
pop
or
testl
repnz
pushf
sarb
fsubp
scas
sarb
jno
xlat
cmpsb
cmp
add
push
cmc
mov
adc
inc
cltd
xchg
dec
inc
clc
ja
cmp
cld
xchg
lret
dec
inc
outsl
gs
es
pop
int3
cmp
dec
cmpl
push
sbb
pop
shll
ja
mov
rcrl
jl
arpl
jnp
xchg
mov
repz
xchg
leave
movsb
pop
push
fsubrs
sbb
andl
jb
int3
adc
jne
loopne
push
and
fucomi
dec
gs
sahf
outsb
out
lahf
rcll
minps
in
out
bound
adc
imul
out
xchg
xchg
movsb
jg
or
push
push
sub
mov
push
sub
push
bound
push
ljmp
sub
cld
sub
dec
fsubrl
rcl
rcrl
les
mov
mov
adc
jmp
data16
fmul
add
loope
lock
arpl
arpl
sbb
in
mov
ljmp
cmp
sahf
adc
inc
lods
out
cmc
mov
add
icebp
setp
adc
jo
jns
int3
sbb
cmp
jb
leave
xchg
push
dec
cmp
add
das
mov
fidivl
mov
inc
imul
pop
sti
xor
sbbb
nop
pop
enter
dec
mov
jb
sub
lret
jno
mov
sbbl
stos
mov
sbb
and
push
pusha
cwtl
jl
insl
cmp
test
or
fcoml
daa
in
sbb
pop
test
pop
jecxz
aam
fidivrl
test
shlb
aam
jg
sub
mov
add
cmp
push
adc
cmp
mov
sbb
and
dec
out
mov
scas
mov
adc
mov
xchg
hlt
ror
jne
pusha
mov
push
cmp
into
add
mov
mov
inc
push
aad
pop
pop
cmpsl
out
mov
aam
imul
add
jbe
cmp
pop
and
jae,pn
cltd
or
xchg
cmp
jb
xchg
cltd
and
or
ljmp
adc
xchg
mov
out
dec
lea
aas
mov
xor
push
or
lock
outsb
jo
inc
sbb
adc
jl
out
les
mov
mov
insb
repnz
call
mov
out
icebp
dec
sub
mov
insl
pop
push
mov
mov
fcompl
out
sbb
cmpsl
mov
fwait
cmp
and
shlb
xor
mov
fwait
daa
rol
sbb
mov
mov
hlt
add
push
xor
cs
clc
ljmp
mov
stos
jecxz
add
pop
repz
fucomp
inc
popf
icebp
popf
inc
dec
cmpsb
jecxz
shrl
mov
xor
add
pop
lret
add
push
ja
mov
jb
lahf
lret
dec
dec
push
in
mov
and
outsb
ljmp
lods
lock
movsb
fbld
cmp
mov
test
cmpsb
lods
xchg
cltd
and
ret
shlb
or
in
lods
sub
les
into
dec
into
and
and
push
xchg
push
test
mov
cmp
cmp
jae
dec
cmp
mov
or
dec
lea
mov
into
in
jb
dec
lods
in
loope
icebp
scas
inc
call
inc
movsl
addl
sub
in
jbe
adc
lahf
mov
xchg
dec
sbb
or
adc
xor
in
mov
jl
cmp
mov
xchg
cmpsl
xor
sbb
je
into
int3
faddl
pop
js
lret
shlb
fstps
add
inc
aas
clc
je
sbb
in
stos
outsl
sbb
pop
mov
cli
xor
sub
lcall
push
jecxz
inc
in
jnp
push
xor
sub
test
xor
cs
cmc
adc
xchg
push
aad
jnp
xor
ljmp
dec
xor
dec
jmp
lea
out
ja
pop
xor
lds
pop
fs
stc
orl
push
dec
sahf
in
fsts
sahf
pop
adc
negl
sub
scas
outsl
add
divl
push
movsl
repnz
fcom
inc
xchg
mov
mov
jo
cmp
adc
push
sub
in
out
sub
shl
mov
jl
mov
xchg
ss
loop
lods
and
stos
sahf
out
aas
dec
ss
add
and
xlat
mov
addl
js
jp
or
mov
pop
push
mov
sbb
arpl
mulb
ret
lret
dec
mov
add
xor
adc
lret
add
and
jmp
xchg
jno
mov
sti
out
ss
in
xchg
mov
test
or
bound
sub
mov
test
pop
sbb
mov
adc
xor
leave
mov
jb
add
fildl
mov
aas
cmp
and
push
sub
xchg
inc
push
mov
jne
adc
stos
xchg
imul
sub
out
or
fnstcw
jae
mov
hlt
cmp
jno
stos
test
mov
pop
ja
shlb
xchg
dec
cs
cmp
jae
push
xchg
xchg
pushf
leave
hlt
call
fiadds
fbld
mov
imul
adc
mov
iret
adc
xor
rcll
lret
je
testl
cmp
loop
cwtl
hlt
test
sub
shlb
or
stc
andb
jg
jnp
lea
jno
sub
insl
cli
stos
cwtl
dec
adc
popa
xchg
dec
push
dec
mov
mov
xchg
out
addl
xor
xchg
xchg
enter
dec
or
stc
out
cli
jp
push
mov
mov
popa
push
outsl
push
lods
or
inc
ljmp
fldl
add
fidivs
sti
add
mov
je
xchg
sub
sbb
insb
push
fldcw
jae
out
pop
cmc
mov
xlat
pop
movsl
mov
cmp
sbb
sbb
repnz
sarb
mov
push
or
jno
and
bsf
pop
sub
push
je
aad
cmc
mov
call
or
jmp
jno
cmp
sub
sbb
ss
xchg
push
add
aaa
xchg
xor
jp
xor
bound
lods
mov
jns
jmp
xlat
add
xchg
and
dec
stc
ret
in
cmp
movsl
add
jnp
movsl
sti
cmp
push
adc
jp
nop
and
mov
jl
in
adc
divl
mov
lods
js
jl
or
sbbb
xabort
mov
divl
mov
sub
loope
or
sub
fnstsw
mov
mov
popf
mov
call
sbbl
cmp
test
ss
int3
in
cmpsb
pop
orb
insl
aaa
es
jg
mov
ljmp
pop
test
jg
scas
in
push
and
out
push
aad
pop
xchg
fadds
out
js
inc
add
or
popa
dec
inc
jecxz
out
in
mov
pop
imul
scas
insl
mov
imul
cmp
adcl
pushf
xchg
gs
mov
iret
imul
adc
push
int
pop
test
dec
maskmovq
mull
add
outsb
pop
sub
loop
mov
mov
inc
mov
mov
out
xor
repnz
push
inc
es
jl
scas
jp
push
xor
sbb
jbe
cli
fwait
mov
dec
mov
push
inc
push
jae
or
and
sbb
push
mov
fisttps
pop
pop
loop
cmp
mov
inc
jl
int3
mov
dec
bound
orb
in
lahf
add
shll
loopne
outsl
mov
xlat
loopne
xor
ret
mov
lds
clc
push
ja
adc
pushf
out
fsub
addb
push
mov
fmul
outsb
mov
daa
nop
sub
scas
jnp
movsb
xor
call
int3
pop
mov
sub
add
dec
nop
or
shl
notb
and
sub
out
fnstenv
dec
pop
lea
insb
push
negb
jae
mov
sahf
mov
sbbb
dec
popa
out
outsb
stc
add
loope
pop
add
movsb
sub
and
aam
and
lret
hlt
fldcw
stc
loope
mov
int
jnp
scas
pop
and
jle
mov
clc
negb
mov
mov
mov
cs
ja
sti
push
addr16
test
ret
lods
in
jmp
mov
testl
bound
sub
inc
mov
xchg
xor
sbbl
push
jg
fwait
mov
mov
int
xchg
add
and
scas
inc
inc
pop
pushf
pop
mov
dec
and
jge
jb
out
push
fcompl
stc
inc
or
xor
dec
xor
mov
or
in
roll
sbb
js
jne
jge
cmc
push
adc
mov
js
div
movsl
hlt
mov
add
mov
and
adc
xlat
adcb
out
mov
scas
fcmovb
ja
in
mov
push
fcomps
pop
lret
out
repz
jbe
das
sub
addr16
lds
rorb
mov
data16
dec
loop
ss
adc
sbb
popl
mov
insb
xchg
cmovnp
lea
or
cmp
and
lret
cmp
push
aaa
dec
loopne
pop
insl
jle
idivb
or
and
loopne
movsb
lods
cld
cltd
dec
les
dec
mov
arpl
repz
inc
icebp
add
dec
push
aaa
dec
push
jb
js
int
addr16
cmpsl
dec
pop
xchg
dec
mov
notb
xchg
and
cli
fs
pop
or
jp
adc
adc
fcoml
into
mov
dec
xchg
lds
jg
pop
adc
add
pop
fistl
mov
cld
pop
pop
jp
mov
pop
mov
or
dec
xchg
or
cmp
stos
sbb
pop
xlat
adc
adc
movsl
ficoml
lret
int3
lds
adc
pop
shrl
cmp
inc
rcrl
movsb
out
enter
call
push
orl
jl
cltd
xchg
adc
jecxz
xor
lcall
or
mov
test
xchg
sti
scas
lret
and
or
lcall
nop
xchg
add
xchg
loope
lea
fadds
addr16
fisubrs
rclb
push
movl
test
leave
mov
ret
cmpl
insw
cmc
and
mov
sbb
push
sub
jmp
in
or
sub
rclb
and
xchg
enter
scas
js
out
stos
inc
or
mov
inc
add
imul
cmp
jae
lret
aaa
mov
imul
adc
insl
push
jo
into
lcall
dec
fsubrs
mov
jl
mov
pushf
out
in
xchg
jb
call
call
mov
out
int3
dec
push
sbb
inc
inc
pop
fcoms
inc
ret
cli
add
mov
dec
mov
and
sub
daa
outsb
xor
mov
jns
sbb
xchg
test
mov
loop
pop
jno
imul
decb
mov
icebp
mov
mov
lret
ja
into
loope
sbb
dec
mov
ljmp
push
decb
sub
sub
jecxz
and
repz
stc
push
test
mov
pop
les
insl
lret
push
nop
rclb
ret
dec
jge
dec
nop
cld
pop
fildl
xor
push
aad
mov
ficoml
xor
call
clc
lcall
addr16
arpl
inc
push
push
and
pop
xchg
push
stos
cltd
sub
xchg
xor
and
jb,pn
sub
jno
fs
mov
shlb
mov
mov
mov
icebp
jge
fsubrs
inc
mov
pop
cmp
hlt
in
and
sub
jne
dec
mov
hlt
in
xor
ds
movsl
cmp
int
jb
aas
lds
es
lahf
ljmp
mov
popa
sbb
push
inc
out
cmp
push
pop
mov
add
mov
in
push
and
stc
xchg
xchg
add
js
fwait
or
repz
mull
cmpsl
pusha
rorb
jp
xchg
mov
xor
cmp
dec
sbbb
mov
mov
sub
xlat
into
mov
sbb
bound
repz
fs
mov
jno
mov
out
dec
cmp
dec
jb
outsb
jne
inc
dec
test
in
sbb
add
testb
addr16
lcall
cmpsb
and
and
movsl
scas
test
test
and
loop
dec
ss
sbb
inc
loop
incl
aad
lods
cli
sub
and
add
push
jns
int3
and
adc
daa
rolb
mov
les
cmp
or
and
jg
xorl
dec
cmp
mov
sbb
lcall
shrl
daa
push
sub
sbb
lret
aas
dec
decl
ss
xchg
sbb
das
mov
jne
jge
loop
xchg
cmp
inc
or
push
test
scas
xchg
pop
out
inc
mov
inc
inc
xchg
xchg
repz
scas
xor
and
mov
sbb
fs
in
push
xor
jp
jp
adc
xchg
call
mov
mov
dec
sbb
mov
cmp
fs
adc
xor
dec
fldl2t
sub
cld
inc
mov
jo
mov
dec
into
gs
ret
adcl
pop
mov
les
cmp
pop
repz
dec
and
pop
inc
ret
sar
test
lahf
lea
repz
ljmp
add
xchg
out
movsbl
sahf
push
scas
outsl
aad
dec
push
insb
andl
outsb
or
fdivr
add
cli
sbb
push
clc
das
les
stos
and
ret
mov
loope
push
add
mov
sub
dec
pop
push
ds
paddw
rorb
jecxz
adc
cmp
out
ficoml
jecxz
ljmp
jg
or
mov
and
ljmp
mov
lea
cmpsb
aas
fbld
or
ds
sub
pop
ds
arpl
clc
fsubr
rorb
or
ljmp
jb
adc
push
jbe
mov
nop
sbb
in
es
cmpsl
or
add
mov
fidivrs
adc
popa
mov
add
call
add
fcoml
xchg
add
jmp
push
cli
sbb
dec
push
jae
xor
cld
add
dec
cmpsl
jmp
inc
fdivs
mov
in
mov
mov
jg
xchg
push
icebp
add
dec
mov
inc
pop
lret
fisubl
cmp
jg
cmp
cmp
mov
es
sbbl
adc
sbb
pop
stc
mov
pop
xchg
xchg
cmc
js
jecxz
inc
test
inc
insl
loopne
inc
fldt
shlb
out
pop
vmovntps
add
or
mov
ss
or
fwait
sub
mov
mov
data16
fistps
mov
cmp
fstl
pop
movsl
pop
mov
outsl
jo
arpl
andb
adc
xor
outsl
lea
int3
jo
add
sub
fwait
inc
fs
pop
lea
jge
popa
push
and
sub
cwtl
mov
dec
pop
jne
in
cld
jge
cmp
loopne
ja
out
add
ret
inc
neg
xchg
jne
push
outsb
cmp
enter
xchg
pop
cmp
lods
mov
cmp
push
shrb
ret
mov
mov
mov
lret
mov
arpl
fimuls
bt
mov
jne
mov
add
orb
inc
xchg
add
hlt
out
mov
aas
cmp
mov
in
xor
in
inc
mov
lods
pop
gs
imul
pop
andl
inc
xchg
shlb
js
sbb
inc
xchg
xchg
sub
in
aas
mov
cmp
xchg
test
aad
pop
push
ljmp
movsl
ret
mov
js
das
push
dec
jae
add
sub
jle
xchg
dec
jecxz
out
cmpsl
dec
mov
push
inc
hlt
or
hlt
push
push
adc
daa
xchg
insl
cmp
into
divl
cld
fadds
cli
imul
cs
inc
iret
jmp
add
mov
insb
repz
sahf
loope
rclb
jnp
push
dec
testl
stc
sub
add
fisubl
dec
pop
loop
sbb
movsb
aam
mov
lcall
pop
pop
fnstcw
clc
mov
pop
push
loopne
dec
add
fcoml
mov
pushf
fidivrs
add
lds
mov
cli
dec
js
dec
push
mov
adc
add
xor
cld
adc
pusha
pop
adc
in
xchg
rorl
jns
jl
jg
sahf
pop
je
stos
inc
stos
xor
into
fs
mov
ret
cmpsb
aaa
mov
hlt
mov
aas
sbb
dec
fldcw
add
stos
push
push
jne
into
in
and
cld
lret
pop
push
andb
mov
fistpl
mov
and
inc
cmp
fstpt
or
and
stos
stos
push
sbb
cmp
mov
and
mov
ja
jnp
iret
mov
push
test
aas
adc
outsl
push
test
cltd
fnstcw
add
int3
xchg
mov
stos
data16
jecxz
push
mov
sbb
ss
xor
mov
int
push
lods
stos
outsb
dec
lret
mov
gs
clc
popa
sbbl
pop
lcall
mov
call
aas
in
outsb
inc
dec
jns
shrl
pop
mov
and
mov
int3
int
sub
xchg
mul
mov
mov
cmp
push
lea
pop
and
xchg
mov
xor
mov
ss
xchg
fcoml
mov
mov
jecxz
test
lods
xor
pop
adcb
add
xchg
or
ljmp
imulb
push
es
or
mov
call
pop
adc
pushf
shrb
pop
lret
nop
es
cmpsl
scas
lods
js
fwait
es
push
aad
mov
pushf
push
or
dec
mov
mulb
idivb
outsl
jecxz
mov
dec
cmpw
mov
sbb
iret
jl
and
add
cld
xchg
lret
sbb
inc
outsl
js
lods
into
idivl
sub
xlat
shl
ror
sub
addr16
add
or
cmc
test
test
jmp
push
xchg
in
loopne
or
cld
xchg
sbb
gs
and
mov
out
mov
lcall
and
xchg
pop
inc
cmp
xchg
dec
sahf
std
xchg
loopne
push
or
sahf
int3
icebp
ljmp
xchg
repnz
sqrtps
jo
push
inc
stc
mov
stos
fwait
and
push
jbe
mov
imul
pop
xor
stos
divl
fimuls
xchg
adc
jle
lds
cmc
and
daa
push
movsl
enter
mov
andl
sub
les
stos
rolb
ret
xor
inc
sbb
test
jmp
push
or
mov
jp
gs
loop
push
out
sub
loope,pn
mov
inc
jb
or
jb
es
js
pop
es
xor
pop
into
lds
and
mov
mov
fcomps
xor
iret
rcll
cmp
cmp
push
jo
pop
pop
xor
imul
pop
or
mov
jp
sub
mov
push
add
dec
jl
sbb
lret
lahf
mov
dec
push
loop
test
fldcw
add
jb
add
fwait
add
xchg
imul
out
pop
jmp
mov
pop
test
mov
pop
in
pop
cs
dec
jno
popa
frstor
push
outsb
inc
dec
cmp
ss
add
cmc
je
out
jo
xlat
mov
mov
cvtps2pd
mov
pop
enter
aam
add
xchg
dec
add
mov
test
outsb
xchg
mov
in
aaa
imul
and
cmp
inc
or
ja
out
cmp
jbe
shrl
punpckldq
pop
repz
lea
pop
dec
pop
add
fdivrs
xor
cld
sub
fwait
xlat
lret
js
mov
ljmp
aad
test
and
das
adc
push
cmc
adc
movsl
jmp
pusha
and
jle
fldl
cltd
cs
sbb
add
frstor
repz
rcrl
lcall
mov
stc
pop
lock
inc
lret
jl
sub
stos
hlt
push
pop
std
test
jnp
pop
mov
sti
imul
insb
add
cmp
stos
adc
test
dec
sub
arpl
shll
mov
push
mov
sub
call
es
loope
jbe
out
jns
out
or
aaa
adc
test
ret
dec
cltd
sub
enter
push
jbe
fistpll
sbb
movsl
sbb
outsb
mov
mov
ljmp
inc
sbb
mov
mov
cli
fisubs
add
dec
sahf
sbb
adc
loop
shll
dec
push
inc
sbb
and
or
jl
mov
pop
mov
notl
lds
outsb
cltd
sub
pop
fldlg2
clc
and
pop
ds
jne
xchg
and
icebp
fldcw
mov
adc
push
jp
dec
adc
mov
mov
lods
int
pop
nop
in
sub
inc
push
sbb
std
rclb
ret
insb
jo
mov
popl
xor
fisubl
mov
fidivrs
mov
lock
adc
data16
sahf
lahf
or
in
mov
movsb
insl
inc
roll
fucomp
mov
stos
adcb
push
cmp
mov
push
hlt
inc
addb
cmpsl
and
shlb
pop
jecxz
loopne
add
sahf
cmp
fldl
sti
sbb
das
jo
sbb
xor
adc
cmpsb
or
and
decb
insb
jmp
push
call
cmp
mov
push
sbb
mov
mov
or
and
inc
shll
aas
mov
or
lcall
daa
ljmp
sub
mov
in
std
jg
mov
mov
sbb
pop
inc
loop
in
imul
insl
addr16
shll
pop
je
negb
orb
loope
lret
jno
adc
xchg
aam
lret
adc
mov
das
push
pop
dec
or
cltd
fs
and
enter
sbb
cmc
std
scas
or
cmpsl
mov
xor
inc
test
subb
scas
or
jmp
pop
inc
repnz
push
mov
xchg
enter
outsb
xor
loope
hlt
repz
mov
sti
std
popf
mov
dec
orb
push
repnz
imul
repnz
shrl
lods
fsubrs
ds
loop
cli
jne
nopl
push
cwtl
push
mov
push
icebp
out
cmp
xor
out
adc
pop
insb
pop
inc
cmp
add
pop
lret
cmp
xchg
push
and
adc
xchg
jg
rolb
sbb
xchg
dec
rcr
pop
pop
sub
push
mov
inc
jb
stos
push
int3
rcrb
fdivl
adc
mov
mov
push
insl
gs
subb
gs
fcoms
mov
pop
mulb
push
gs
insl
rcrb
outsb
scas
cmpsb
and
imul
mov
lods
mov
jbe
mov
xchg
cli
daa
popa
or
push
out
inc
xor
push
dec
test
mov
and
cli
adc
xchg
mov
outsb
mov
dec
xchg
sahf
mov
je
movb
rol
add
xchg
xchg
sti
xchg
loop
int
cmp
movsb
push
gs
aad
and
les
mov
add
mov
or
xor
mov
nop
ror
jecxz
sub
or
push
mov
mov
in
je
dec
push
mov
sbb
jo
icebp
mov
repnz
and
in
rcrb
pop
or
mov
xor
inc
mov
sub
push
add
lcall
cmpsl
push
sub
sbb
scas
pop
popa
fnsave
sti
mov
sarb
rcrl
pop
xor
and
fnop
and
movsl
clc
inc
scas
xor
dec
pushf
and
inc
stos
push
or
mov
xlat
inc
aam
nop
add
outsl
cmpw
add
in
inc
sbb
mov
fcmovne
or
push
jae
mov
push
ret
bound
push
pop
outsb
addr16
stc
or
test
out
ss
xchg
sub
repnz
outsl
lahf
and
fistpll
jne
out
jmp
fstps
dec
lret
xor
out
pusha
jle
outsb
inc
bnd
pop
stos
orb
add
mov
test
inc
inc
mov
add
jmp
push
push
mov
pop
das
bound
and
mov
cwtl
pop
or
mov
mov
xor
idiv
ss
shrl
inc
andb
ss
mov
cmp
cmp
std
stc
lcall
cmp
push
or
bound
fsubrs
cmp
mov
push
in
sarb
xchg
pushf
sub
mov
inc
popa
mov
mov
and
adc
pop
minps
std
ret
je
sahf
mov
dec
not
push
lahf
test
xchg
les
sub
in
or
stos
mov
xchg
ds
addr16
roll
icebp
dec
aaa
lock
add
xor
jb
sti
cmc
cmpsl
or
fistpl
xor
iret
cmp
divl
loop
roll
cmp
das
sub
cld
ljmp
jbe
lret
bsf
xchg
adc
mov
xchg
inc
out
xor
xor
sub
sub
dec
insl
mov
mov
adc
lret
jge
aas
cmc
adcb
jmp
jmp
pushf
or
in
mov
mov
inc
sbb
cmp
inc
sub
mov
jns
fwait
jb
sub
cmp
or
mov
fnstcw
fstpl
cmpsl
movsl
add
sub
lock
sub
out
sub
ss
adc
mov
ja
mov
mov
sbb
lock
jle
je
xor
ds
cld
inc
adc
jnp
enter
sub
loopne
mov
or
mov
cmp
sbb
test
stc
sbb
repnz
test
inc
testl
in
test
or
mov
pop
leave
mov
gs
gs
cltd
add
adc
pop
dec
cmp
cs
sub
pop
fldt
rcrl
xor
test
jae
dec
test
xor
xlat
add
lods
dec
and
cltd
mov
push
mov
pushf
mov
mov
add
addr16
jmp
push
adc
pushf
pop
bound
pusha
hlt
das
stos
ds
inc
pop
data16
js
js
popa
in
add
popa
nop
fstpl
xchg
sahf
cmpsl
pop
push
or
jb
subl
je
in
or
out
lods
in
inc
xlat
movsb
push
sub
icebp
lret
inc
pop
inc
jb
in
icebp
cmp
std
pop
ror
adc
stos
cld
fnsave
sbb
jnp
es
es
cltd
push
pop
sbb
or
incb
pushf
sub
sub
outsl
fs
push
mov
fstl
mov
mov
jo
jg
int
lods
mov
mov
movb
dec
sbb
xlat
les
dec
stos
sub
fs
mov
xor
lds
mov
mov
hlt
and
sub
movsb
andl
movsl
jmp
or
or
movsb
jg
add
popf
cmp
aas
inc
scas
cmp
push
cltd
xor
push
add
int3
imul
imul
es
stc
xor
out
adc
test
inc
loope
imul
jne
pop
mov
jg
jmp
mov
cmc
mov
test
adc
shll
mov
dec
add
jne
mov
cmp
mov
pop
push
mov
mov
xchg
scas
daa
and
cmp
les
sub
cltd
cmpsb
mov
lea
pop
or
loopne
xchg
sub
xchg
push
or
xor
and
sbb
dec
push
dec
jbe
divb
pop
dec
outsl
jmp
add
movb
push
xlat
cwtl
sbb
jb
push
push
inc
outsl
mov
inc
test
mov
in
aas
out
andl
data16
mov
add
sub
cmp
inc
jb
hlt
fbstp
mov
jne
mov
mov
addr16
fwait
push
jbe
jl
dec
decb
in
insl
mov
sub
mov
pop
pop
mov
jecxz
push
ljmp
jp
loopne
lret
mov
ret
je
dec
adc
out
jb
icebp
or
inc
imul
enter
dec
dec
cmp
ret
in
in
add
int3
gs
cmp
push
mov
std
pusha
cld
cmp
push
sub
xchg
adc
orb
xchg
sub
mov
jge
add
mov
lock
jb
xor
adc
mov
or
insl
push
rorb
inc
mov
call
std
mov
popa
mov
mov
xlat
and
lret
mov
into
addr16
mov
xchg
push
pop
or
daa
mov
and
mov
jle
rolb
out
out
das
outsl
jno
or
xchg
sti
xchg
mov
xchg
jle
aas
adc
insl
pop
jmp
icebp
cmp
test
xchg
lcall
testb
popa
mov
mov
adc
ret
mov
sbb
in
lea
ljmp
push
mov
std
pop
clc
repnz
daa
ja
mov
xor
test
call
add
push
push
jl
movsl
sub
lret
pop
dec
lock
xchg
add
jg
fsub
rol
push
pop
xchg
pop
repnz
shlb
cmp
int
pop
bound
mov
push
xchg
mov
fwait
mov
cltd
xor
mov
or
dec
push
mov
mov
js
stos
xor
and
mov
cwtl
add
cmp
imul
xchg
ss
fldenv
aas
push
jmp
dec
rcll
loop
cmp
push
jns
out
icebp
adc
sbb
xchg
les
push
cmc
ret
mov
int3
insl
pop
pop
adcb
or
mov
mov
out
jnp
insb
sbbl
inc
cmc
and
mov
adc
pop
bound
ret
out
inc
pop
in
sbb
mov
lock
int3
jo
pop
fisttpl
repz
aas
jne
cmp
mov
in
jge
or
sub
fwait
jl
test
gs
and
je
cmpsb
cli
add
sbb
sbb
mov
cmp
pusha
jp
in
call
mov
jno
imul
sub
clc
aas
adc
inc
jmp
out
mov
sub
das
fs
push
stos
mov
jg
sub
lahf
leave
fldenv
sahf
push
adc
jle,pn
leave
hlt
lods
popa
test
fdivrp
int
mov
int3
lea
lcall
cmp
push
dec
pop
gs
mov
fs
enter
movsl
push
sub
arpl
mov
or
fwait
add
push
push
sbb
add
cmp
ffree
mov
in
push
push
es
cmp
fs
insl
jo
xchg
xor
mov
jl
mov
repz
dec
mov
jbe
sub
popf
lods
cmp
lret
mov
jmp
cmp
jp
pusha
and
inc
idiv
mov
mov
insb
scas
shll
push
jge
cli
inc
xchg
or
mov
cmp
std
inc
je
imul
sub
pop
or
rorl
mov
rol
fs
int3
inc
aad
pop
xchg
push
mov
jp
insb
xchg
int3
dec
test
std
cmp
xor
jae
addb
inc
cmp
or
xchg
clc
inc
sub
scas
test
scas
fucom
rclb
rorl
sbb
mov
jne
and
imul
popf
xchg
pop
mov
outsl
cli
dec
dec
pop
ss
jl
jo
inc
xchg
imul
push
out
popa
insl
sahf
dec
out
cmp
sbb
xor
mov
cli
xorb
xchg
bound
add
push
mov
jp
cmp
aas
into
adc
movsb
cmp
jg
ret
lds
xor
das
pop
jno
lea
mov
insb
pop
mov
mov
adc
shr
cmp
pop
adc
jmp
js
add
jb
cld
scas
out
inc
inc
dec
mov
mov
mov
clc
sar
in
cmp
or
cmp
out
push
in
mulb
adc
mov
mov
test
jecxz
adcb
push
push
test
in
pop
nop
pop
dec
inc
repz
rolb
adcb
insb
add
popf
test
push
mov
sti
movsl
pop
nop
jbe
mov
fcompl
sub
cld
sbb
cmp
sub
cld
inc
rcll
fwait
pop
int3
mov
sub
lahf
ret
arpl
fmuls
rolb
js
dec
push
clc
call
inc
movb
addb
cmp
push
dec
hlt
cmpsl
pop
mov
ret
cld
hlt
test
mov
pop
dec
xor
sub
out
xchg
xchg
cmp
fstps
add
out
stos
int
add
test
call
jle
xor
iret
jp
cmpsb
and
push
and
ficoms
rcl
movb
aad
jno
pop
adc
sub
inc
mov
aaa
into
notl
dec
xchg
fisttpll
dec
jmp
push
mov
scas
in
jo
faddl
mov
pop
movsl
push
dec
pop
xchg
rorl
cmc
mov
cwtl
lock
xor
xor
mov
pop
pop
cmp
in
imul
inc
and
leave
mov
or
fdivrl
dec
pop
jmp
pop
sti
or
pop
pop
in
xchg
mov
push
cltd
arpl
out
pop
xorl
sti
nop
and
add
movsl
movsl
sbb
inc
jb
test
jmp
sub
and
faddp
adc
inc
pop
fcomps
xorb
mov
jp
mov
and
ret
sub
mov
ss
fmuls
bound
push
mov
lods
mov
adcl
cmp
movsl
ret
xor
inc
xor
lret
or
repnz
int3
dec
inc
scas
jb
cmpsb
jp
in
sub
cld
mov
mov
push
stos
mov
repz
in
aad
pop
push
lock
insl
popa
rcrl
xchg
add
or
in
out
pop
lds
mov
test
xchg
inc
xchg
xor
out
pop
mov
cmp
leave
stos
js
int
sub
mov
daa
jecxz
cmovg
movsb
or
lods
cli
push
sbb
add
dec
loope
imul
or
fs
or
ljmp
adc
inc
push
mov
or
dec
loop
stc
dec
or
das
push
and
sbb
mov
lret
ffreep
or
repnz
iret
mov
movsb
movsl
or
or
mov
sbb
pop
adc
rorb
inc
or
jp
lcall
in
fsubs
and
test
das
jecxz
repz
call
cmp
nop
pop
mov
jp
out
sti
sub
xor
push
xchg
mov
cmp
sbb
jecxz
cltd
insb
fiadds
inc
in
pop
push
sbb
cmp
cs
mov
inc
mov
and
data16
jne
into
mov
in
add
mov
push
icebp
sbb
mov
cli
cwtl
bound
push
pop
lods
sub
shrl
fwait
mov
jbe
xor
pop
inc
cmpsl
mov
dec
pop
mov
insl
scas
adc
imul
fucomi
xchg
cmp
and
lods
mull
sbb
mov
insl
out
nop
lock
and
movsl
mov
shl
mov
in
sahf
add
popl
inc
fldl
mov
jne
dec
fldcw
jl
outsb
jno
mov
mov
jp
or
inc
inc
cmp
pop
xor
out
mov
pusha
fbstp
xchg
pop
xchg
cwtl
inc
xor
inc
sbb
jecxz
push
push
sbb
mov
shlb
les
adc
or
sbb
dec
jecxz
mov
pop
inc
mov
repz
imul
adc
int3
push
inc
sbb
fcoms
call
lahf
lret
and
xlat
cmp
dec
enter
mov
ljmp
cmpsl
pop
in
push
aam
neg
ret
repz
cmp
sahf
xlat
mov
psraw
xor
lret
ret
adc
inc
cmp
add
mov
test
mov
dec
sub
sub
mov
lret
mov
sub
pop
cmp
movsb
addl
xor
sub
imul
pusha
int
inc
mov
jle
les
cltd
jg
mov
sub
fs
cli
mov
push
pop
lcall
das
imul
lahf
loop
adc
rorl
fwait
cli
jg
or
das
hlt
dec
dec
inc
sub
sahf
cmp
fdivl
icebp
fxch
inc
push
test
int
ja
test
mov
aad
mov
push
add
out
mov
cltd
xor
cli
add
mov
addb
fwait
cmp
cmp
test
sbbl
sbb
movsb
mov
out
stos
xchg
add
push
addr16
pop
jb
imul
sbb
mov
lret
inc
sbb
in
pop
push
negb
xor
jmp
xor
adc
sub
cmpsb
test
test
sub
push
in
bound
add
inc
or
push
xchg
pop
jb
into
lret
out
ss
adc
je
dec
adc
inc
mov
call
lcall
cs
filds
je
in
aas
cwtl
xorb
cmp
adc
adc
xchg
adc
ss
fdivrp
push
aad
xor
leave
add
xchg
lahf
adc
cli
mov
repz
mov
scas
lods
aaa
cmpsb
rolb
lods
mov
mov
outsb
rorb
xchg
inc
int3
mov
and
in
ss
sbb
cs
add
dec
push
xor
jle
cmp
or
sti
ja
shrl
jg
lods
sbb
push
mov
jp
add
pop
push
pusha
sarb
in
daa
mov
or
pop
clc
or
dec
xor
out
mov
imul
mov
and
mov
sub
mov
js
cmp
fdivs
cmp
jecxz
and
xchg
hlt
incl
ret
sti
mov
jg
insl
mov
outsl
lods
into
add
in
and
loopne
mov
xchg
sub
or
sbb
mov
shlb
jl
sbb
lods
notl
push
fmuls
xor
hlt
iret
xchg
idivb
add
xchg
push
cmp
das
or
sbb
adcb
cs
daa
mov
pop
mov
push
xor
pop
ja
loopne
out
ret
js
and
adc
push
add
lahf
adc
add
and
les
repnz
call
cltd
cld
inc
fistpll
mov
ss
rcl
jbe
jae
test
cltd
sbb
mov
lahf
lret
xor
jmp
jbe
daa
jbe
jecxz
mov
in
or
pop
push
leave
push
inc
jns
or
cmp
mov
loop,pn
mov
andl
jae
xor
cli
scas
pop
scas
fcomip
sub
pop
xor
fsubr
xor
fcomps
cld
sub
dec
in
dec
dec
rcl
in
fsubrs
mov
sbb
inc
arpl
cmp
adc
js
push
push
imul
xchg
mov
push
lahf
je
jecxz
outsb
xor
xor
rcl
xchg
mov
sub
cmp
sarb
cmpsl
mov
out
push
jg
xchg
incb
imul
and
inc
jmp
xor
sub
imul
jb
cmpsb
or
add
int3
or
shll
rcrl
sub
lahf
jp
mul
xchg
fwait
or
dec
jle
push
aaa
sti
xor
xchg
xor
mov
pop
fisttpll
sbb
mov
test
nop
cs
sub
sti
mov
cwtl
inc
sar
mov
mov
pusha
roll
xor
sbb
rol
test
loopne
loope
test
push
push
jne
pusha
inc
cltd
outsl
jp
pop
pop
jmp
mov
inc
cmpl
add
jg
push
add
jnp
stos
mov
mov
xchg
xchg
sub
adc
rclb
mov
adc
pop
xlat
mov
mov
jae
ljmp
or
inc
gs
cmpsl
pop
es
push
or
and
add
sbbb
mov
movsl
or
jb
inc
push
test
add
inc
aaa
and
pop
pusha
jecxz
insl
in
les
ds
popa
cmpsb
push
xchg
jne
bound
jbe
cmpsb
cmp
sub
add
mov
xchg
pop
pop
scas
addb
fcom
pop
xchg
sub
push
loope
cli
sub
fsubl
push
and
cld
in
jbe
mov
pop
sbb
imul
mov
cwtl
adc
addr16
daa
std
inc
xchg
arpl
int
push
js
and
mov
and
push
sbb
mov
loopne
cs
nop
cmpsb
jecxz
lret
mov
repnz
dec
xor
ficoms
push
sti
dec
rcr
inc
insb
in
loopne
push
cld
cmpsl
fldt
outsb
loop
popf
lcall
mov
pusha
jmp
xchg
repnz
cmp
sub
pop
rcll
cmp
notb
jle
int
inc
mov
mov
xor
cmpl
les
faddl
jno
fsubs
cli
or
pop
mov
rcr
push
cltd
repz
outsl
lods
rep
cld
jb
std
imulb
mov
jle
inc
mov
inc
das
xor
dec
lods
adc
cltd
mov
test
mov
out
loop
mov
js
insl
ja
add
jno
in
xchg
inc
cmp
insl
hlt
and
enter
repnz
ds
adc
lcall
adc
or
mov
loope
sbbb
jl
push
adc
dec
jecxz
dec
repz
cmc
push
jge
xchg
xchg
push
jns
pop
push
aam
lcall
je
push
notb
std
pop
mov
repz
int
jge
and
sbb
xchg
dec
xor
push
fidivrl
fstpl
sahf
push
scas
outsb
sub
cmp
outsl
stos
aas
mov
sub
shlb
aaa
das
stos
adcl
and
cmp
fldl
cmp
dec
fistps
push
mov
mov
jbe
lds
xor
stos
pop
adc
nop
loop
shll
arpl
gs
and
sbb
mov
jge
pop
or
dec
jge
outsb
push
add
or
imul
mov
jno
mov
dec
rcll
adc
shrl
popa
mov
dec
jns
push
dec
add
in
sbb
and
outsl
mov
pop
xchg
add
inc
sahf
or
push
pop
lret
test
loop
repz
ja
not
mov
aam
test
sbb
pushf
lahf
out
loope,pt
das
loope
arpl
rolb
or
xchg
insb
lods
pushf
fdiv
lock
fistpll
cmc
inc
movsb
sbb
xchg
cld
cmp
fucomi
sub
xchg
push
adc
clc
test
jno
push
push
mov
icebp
jle
jecxz
fs
mov
or
push
mov
push
sub
pop
mov
data16
adc
pop
fisubl
into
mov
mov
cmpl
adc
xor
in
aas
pop
mov
pop
imul
lret
push
cld
jmp
cwtl
dec
cld
mov
dec
test
idivl
push
cli
add
fldenv
pop
sbb
je
daa
movsl
test
mov
fcomip
and
xor
fsubrl
or
jg
jbe
sar
push
outsl
jg
stc
or
xor
push
add
pop
cmp
jne
stos
pushf
insb
sbb
cmp
sbb
or
dec
out
push
not
ror
sbb
test
xchg
jb
jl
cltd
xchg
les
test
xchg
mov
js
scas
data16
cmp
mov
adc
add
xlat
outsl
dec
xchg
pop
jl
test
add
mov
data16
aaa
arpl
divb
xchg
and
sub
xor
movsl
sub
shrb
push
dec
ret
inc
xchg
xor
cmc
jecxz
rcrb
pop
out
clc
je
movsl
pusha
lea
cmp
loope
adc
pushl
cmp
out
and
pop
clc
cmp
adc
push
mov
sbb
fwait
out
out
jg
int
aam
jnp
loop
ret
xor
arpl
inc
add
lret
sbb
xor
xchg
in
faddl
hlt
xor
push
sbb
scas
jae
xor
xchg
test
mov
lret
add
xor
sub
movsb
mov
xchg
cmp
fwait
daa
out
jo
pusha
lock
mov
hlt
les
test
xchg
mov
fidivl
imul
xor
jbe
loop
pusha
dec
outsl
cmc
mov
aas
loop
mov
fsubrs
sbb
xchg
dec
inc
jae
and
es
xor
mov
cmp
mov
mov
mov
pop
push
mov
imul
rcrl
cmp
mov
bound
add
in
subl
and
outsb
hlt
mov
jns
sub
loope
sub
mov
xchg
jle
inc
mov
dec
inc
jle
and
sub
fcmovnb
ljmp
add
out
lds
and
pop
adcb
sub
adc
mov
cmc
out
iret
add
pop
push
cmc
fisubrs
or
sar
push
mov
ds
pop
mov
scas
pop
test
cmp
mov
dec
sbb
cmp
sbb
cwtl
enter
push
imul
jg
fdivl
int
inc
jmp
mov
jbe
shl
mov
ja
jns
jo,pt
and
xor
daa
je
std
jg
cltd
xor
iret
outsl
mov
pop
xlat
xchg
out
pop
mov
push
or
xor
in
fidivrl
in
testb
push
mov
mov
fisubl
jnp
and
fdivrl
into
dec
stc
add
cmp
daa
sub
push
jecxz
mov
or
std
push
push
and
imul
sub
sbb
inc
dec
mov
cmp
jnp
jbe
fcomps
inc
and
in
sbb
movsb
lods
and
mov
jae
jbe
dec
sbb
int3
adc
push
sub
mov
or
imul
pusha
inc
or
pop
mov
mov
adc
add
inc
mov
lret
sub
pop
lock
jle
scas
xchg
and
repz
mov
and
sub
dec
dec
fsubrs
mov
fisubrl
rcrl
jge
out
xlat
mov
sti
cmp
sbb
outsb
hlt
dec
sub
sub
cmpb
mov
pop
mov
adc
mov
loop
jmp
adc
test
add
add
xchg
out
aam
xchg
sbb
dec
or
xor
xor
dec
mov
or
dec
gs
cld
mov
sti
jmp
cmp
and
push
dec
idivb
fidivrs
int
stos
dec
push
fwait
xor
cltd
fnstsw
add
mov
add
aam
dec
and
xor
adc
mov
lret
scas
jle
sub
shrl
iret
xchg
ds
pushl
imul
into
mov
mov
movsl
push
orb
jecxz
fwait
mov
xor
mov
sub
xlat
dec
pop
dec
int3
lea
iret
ja
xlat
dec
lods
cmp
and
scas
xlat
or
inc
jle
stos
cli
xchg
cmp
shlb
mov
enter
push
cmpsl
sar
pop
cmp
dec
daa
in
cli
cld
mov
jmp
mov
sbb
sbb
fisubrl
pusha
push
inc
mov
add
outsb
and
lock
addr16
arpl
into
out
jns
dec
ret
out
adc
adc
cmpsl
fwait
call
or
add
sub
pop
mov
ds
mov
scas
xlat
mov
sub
or
outsb
jle
push
data16
sub
ds
cmp
pop
jl
mov
jno
gs
loop
inc
fsubrs
cmc
dec
bound
das
dec
pop
sub
add
shrb
and
lcall
adc
icebp
addl
fcmovnbe
and
shll
sub
mov
cmp
fstps
sub
rorb
xchg
mov
sar
mov
sub
xchg
xchg
adc
mov
lahf
sub
pop
pop
and
adc
jge
shrb
adc
popa
int3
dec
fsub
and
mov
dec
mov
lcall
fildll
js
xchg
pop
ja
ljmp
dec
xchg
loopne
or
lods
xchg
mov
ret
push
test
xlat
fbstp
inc
add
pusha
jp
mov
xchg
dec
mov
add
or
mov
inc
je
dec
mov
jnp
pop
call
xchg
xchg
xchg
jne
inc
popa
jno
dec
int3
mov
inc
dec
add
push
in
movsl
test
jo
jbe
ss
mov
and
dec
test
xchg
jmp
xor
mov
mov
push
fistl
pop
ljmp
pushf
in
jae
mov
loop
push
fists
add
lcall
out
mov
sub
loope
stos
push
outsb
cmp
mov
adc
outsb
repz
or
call
inc
xchg
andl
in
jae
dec
cs
aas
mov
dec
jnp
dec
sub
ret
jno
in
fildll
test
or
pop
jmp
mov
lea
push
xor
mov
pusha
mov
nop
stos
out
rcrl
icebp
or
and
sbb
push
enter
sub
add
insl
add
push
in
jecxz
gs
iret
adc
shll
add
cmp
rolb
out
sti
xchg
jo
ds
leave
add
cs
cmpsl
inc
pusha
gs
push
adc
and
mov
mov
aam
and
ja
nop
in
pop
test
mov
push
mov
mov
fsubrl
and
insl
xchg
das
shr
out
xsavec
dec
xchg
fcoms
sbb
mov
mov
in
inc
or
pop
jmp
inc
pop
mov
pop
cltd
arpl
mov
xchg
and
pop
xchg
xlat
je
add
add
lret
clc
inc
andl
jl
xor
stos
jg
mov
sbb
das
pop
push
je
std
stos
insb
pop
sbb
inc
aam
cld
xchg
pop
bound
jecxz
std
mov
mov
pcmpgtw
add
fcoml
mov
sti
rcrl
xor
ss
jno
int3
add
test
jg
and
xor
aaa
in
jp
pop
lods
mov
pop
scas
mov
pop
pop
mov
cld
pushl
jbe
mov
cli
mov
negb
push
mov
sbbl
push
pop
sbb
pop
or
sub
jno
enter
shlb
jb
fisttpll
pop
and
jb
cmp
xchg
adc
and
imul
adc
mov
daa
iret
leavew
popf
sahf
and
out
sub
fiadds
movsl
int3
sub
mov
popf
dec
cwtl
mov
sub
aad
cs
hlt
int
test
xchg
cmp
test
sbb
mov
leave
popf
cmpsl
adc
inc
repz
imul
hlt
rcr
ds
push
sbb
clc
shl
mov
dec
nop
adc
sub
lcall
pop
jns
int3
sub
sbb
test
add
or
dec
adc
test
push
sti
scas
pop
xlat
fiadds
test
and
push
out
mov
push
cli
cmp
mov
bound
sub
data16
fcmovnbe
dec
mov
adc
sets
cmp
inc
sbb
call
ja
in
dec
int
clc
jge
dec
in
mov
addr16
dec
xor
xchg
std
dec
pop
cmpsl
or
lcall
or
into
outsb
into
mov
dec
adc
xor
cmp
insl
nop
pop
jp
shlb
dec
movsl
and
inc
adc
xorb
push
mov
sub
push
dec
sti
cmp
subb
cmp
push
cmp
xchg
inc
shr
lods
popa
enter
lea
jnp
sbb
xchg
lcall
lods
clc
fildll
jecxz
dec
fisubs
jg
pop
jp
arpl
es
sbb
jl
loopne
pop
push
jmp
scas
pop
and
sbb
jb
sub
push
adc
and
fsubrs
lahf
xchg
sbb
in
push
rorl
mov
lods
ret
imul
xchg
scas
test
push
cs
and
sbb
dec
dec
fnsave
inc
jno
cmpsl
enter
in
outsl
pop
cmp
mov
xchg
push
dec
dec
jbe
iret
mov
push
outsl
push
mov
aas
stos
sbb
arpl
or
loope
sbb
mov
xor
es
call
mov
sbb
xchg
adc
inc
or
add
fimull
jno
stos
shrb
ss
popf
shll
adc
dec
jae
add
je
je
ret
lods
and
or
mov
loop
dec
dec
mov
mov
das
pop
xchg
int3
jne
sbb
je
or
mov
xchg
aam
jmp
inc
scas
sti
inc
push
cmp
gs
push
fwait
sbb
push
icebp
cmpb
js
ss
inc
xor
cwtl
sarl
aaa
fwait
leave
call
cli
shlb
cmp
movsb
lds
out
cmp
xchg
push
adc
lret
dec
jo
loopne
sbb
push
or
rolb
and
jg
sub
mov
std
cmc
gs
xor
cmp
mov
out
mov
sarb
jp
ffree
mov
aam
or
stc
lret
loop
cs
xchg
mov
mov
int
mov
nop
add
movsb
hlt
push
inc
mov
mov
int3
sbb
xchg
sbb
mov
sub
repnz
mov
jl
pop
popf
lret
cli
push
js
cmp
movsl
rcl
dec
jne
sbb
cmp
sub
cmp
sahf
xchg
dec
fisttpll
mov
mov
cmp
push
enter
ja
mov
mov
lods
mov
outsb
jl
sub
lahf
std
push
xchg
lret
pop
lock
push
ficoms
pop
je
insl
rcr
dec
cmc
int3
jno
icebp
push
jl
mov
sub
push
sahf
xchg
add
xchg
repnz
pop
pop
pop
fnstsw
popf
fdivs
je
sub
push
jge
out
jae
pop
ds
ljmp
mov
pusha
fcmovnu
gs
jecxz
mov
cs
and
sub
leave
add
sub
scas
fwait
out
push
lcall
cld
stos
sbb
popf
jle
ret
scas
call
jp
xlat
dec
mov
addb
lret
fs
pop
push
jnp
stos
cmpsl
pop
mov
cmc
mov
lea
fmuls
mov
jmp
and
push
cmpsb
jnp
fwait
lea
orl
push
mov
ss
or
hlt
mov
imul
sub
xor
inc
pop
push
sarl
pop
dec
or
mov
out
mov
inc
shl
fucomi
cwtl
fists
rcrl
and
imul
pop
test
ret
lcall
push
das
imul
jnp
push
or
movsb
sub
fabs
out
sub
inc
ja
push
mov
cli
stos
mov
and
loop
aaa
mov
pop
dec
mov
outsl
lds
mov
dec
pusha
jnp
inc
mov
xchg
mov
arpl
aaa
or
dec
xor
test
stc
jp
adc
and
sub
adc
arpl
mov
and
inc
dec
ficomps
andb
cmpsb
rcrl
das
hlt
fidivrs
fldenv
sub
inc
mov
loope
mov
and
and
shll
stos
test
cmp
cmp
xor
or
cld
ljmp
and
fidivrl
jl
int3
and
imul
fwait
cmpb
xchg
or
das
mov
cmovne
repnz
stos
add
or
mov
test
cmp
fstp
sbb
into
je
xchg
mov
int3
adc
rcr
js
xchg
aaa
sub
mov
push
mov
cli
lods
mov
daa
outsb
loop
mov
fdivr
and
insl
xchg
movsb
loopne
nop
into
icebp
dec
xchg
lret
push
movsb
xchg
in
inc
push
mov
sarb
movsl
cmp
rolb
sti
dec
xor
cmp
sub
dec
lds
call
shll
roll
dec
jecxz
in
arpl
sbb
je
jnp
les
sahf
pop
mov
pop
imul
pop
lea
mov
jae
push
nop
push
xchg
movsb
dec
adc
mov
inc
aad
mov
aam
icebp
push
cmp
outsb
sbb
inc
xchg
adc
bnd
pop
getsec
add
pop
js
arpl
pop
mov
dec
jae
pop
aad
push
push
push
jns
inc
pop
outsb
push
adc
sbb
dec
lcall
push
or
test
cmpsl
sub
popf
pop
dec
ja
test
cmp
cli
movsb
loope
movsl
jge
sub
mov
mov
inc
jno
mulb
les
divl
movsb
inc
jbe
fmull
dec
aas
inc
dec
pop
push
fadd
insb
gs
ficoml
cmp
jg
xor
mov
les
lods
int
mov
mov
in
test
dec
add
mov
out
dec
aas
inc
daa
xchg
jg
xor
insb
pop
cmp
sbb
lret
jne
out
cli
inc
pop
cli
es
jecxz
leave
push
adc
push
dec
cmp
jge
rolb
mov
aad
out
loop
or
xchg
mov
rclb
fsts
mov
add
add
jecxz
pop
sbb
mov
jo
cmp
int
inc
sbb
sbb
les
pushf
pusha
test
mov
and
or
mov
shrl
stos
jl
dec
add
sub
mov
les
jmp
rcll
pop
das
jmp
xor
xor
mov
ficoms
mov
xchg
fdiv
outsb
mov
in
mov
shll
inc
out
in
les
sbb
mov
xchg
ret
jl
fsubl
shlb
lea
mov
xor
cmc
lret
sbb
loop
stc
and
jae
cltd
cmp
jl
testb
mov
adcl
aaa
hlt
ret
data16
outsl
stos
sub
adc
rolb
cmp
xor
les
cmpsb
test
lea
aaa
movb
lret
enter
push
push
int3
test
push
xor
sbb
adc
pusha
adc
add
push
mov
and
xlat
sti
sahf
pop
paddb
pop
in
cmpsb
mov
push
xchg
inc
pusha
ljmp
mov
rorl
stos
push
repz
pop
mov
repnz
sub
adc
jg
dec
int
dec
push
pop
test
push
sub
or
lret
sahf
pop
dec
fcoms
add
test
sub
mov
lods
packuswb
sti
and
add
lods
dec
rclb
lods
movsl
out
icebp
orb
stos
sbb
sub
adc
push
outsb
in
es
sub
push
int3
lcall
cmp
decl
mov
push
out
ljmp
mov
lahf
cmp
or
daa
movsl
rcr
push
xchg
mov
repnz
xchg
sbb
pop
out
push
xchg
stc
test
fs
add
in
outsb
xor
mov
hlt
cmc
arpl
mov
imul
into
fsubp
popf
stos
sbbl
popf
xchg
jmp
mov
inc
xor
or
push
fs
sbb
cmpsb
fimuls
inc
outsb
out
insl
ret
fwait
arpl
pop
test
push
mov
dec
pop
and
test
xchg
xorb
mov
pusha
pop
scas
loopne
dec
les
pop
pop
dec
push
outsl
dec
push
xor
adc
aam
pop
inc
rcl
and
mov
outsl
int3
sub
lock
loopne
es
mov
xchg
xor
xchg
lods
jmp
sbb
mov
imul
nop
aam
pop
jmp
jge
test
inc
ja
mov
lods
and
repz
adc
imul
inc
cmpsb
and
icebp
push
and
popf
lcall
lcall
jne
add
xchg
das
xchg
xchg
cmp
aas
mov
mov
shrl
movsl
fsubrs
mov
sar
mov
les
mov
loop
in
mov
dec
xor
sti
fwait
jb
jmp
add
insl
dec
negb
or
sbb
and
stos
movsl
in
and
sbb
jle
xchg
clc
xor
lret
das
pop
pop
out
les
ret
mull
clc
jg
adc
repz
ret
adc
push
mov
cltd
pop
fcomip
mov
mov
repnz
xor
push
ret
ficoms
jp
das
ss
adc
loop
imul
add
rcl
push
movsl
lea
mov
adc
movsb
fwait
mov
sbb
outsb
push
out
jmp
xor
jle
push
stos
cmpsb
lds
lock
aaa
addr16
test
dec
ret
ret
add
fadds
sbb
into
dec
aaa
jnp
jle
fcoms
or
push
repz
xlat
and
pop
lods
aaa
cmp
setae
adc
add
in
or
test
ja
xor
int3
inc
cmp
aaa
add
push
sarl
les
jecxz
sbb
rcrl
arpl
repz
cwtl
adc
xchg
out
daa
push
int3
mov
xorb
mov
mov
mov
sub
and
pop
stos
cld
gs
ret
jg
mov
loop
mov
lcall
cli
or
push
int
in
jmp
imul
std
dec
or
dec
fs
cmp
cltd
or
sbb
adc
xchg
es
mov
and
out
jg
movb
push
or
mov
inc
adc
mov
cmp
in
xchg
nop
xlat
pop
mov
and
addr16
dec
jnp
xor
hlt
in
lock
sbb
xchg
sti
push
cmpsb
add
push
shrb
xchg
dec
in
gs
push
mov
jo
pop
or
in
add
sub
add
in
mov
sbb
push
icebp
mov
pop
outsb
xchg
fdivrl
popf
mov
mov
loope
sbbb
push
cmpsl
adc
dec
push
or
or
addb
fmulp
push
jg
add
sti
mov
jp
dec
and
ret
push
lret
mov
idivl
xor
fdivrl
push
jl
arpl
pop
dec
rcrl
ljmp
or
test
stc
jnp
fstps
cli
xor
pop
mov
mov
shlb
fadd
out
lods
mov
add
jg
push
lods
mov
jnp
movsb
sarl
or
pop
ds
dec
jmp
ja
into
icebp
mov
aaa
arpl
shll
mov
mov
movsl
xchg
and
lret
lds
in
dec
xchg
outsb
sti
jae
pop
push
push
ror
dec
test
xchg
and
out
inc
pop
and
je
sub
mov
aad
movb
dec
insl
xor
pop
sarb
mov
icebp
dec
out
inc
add
mov
mov
mov
pop
das
fwait
mov
ret
lret
or
leave
pop
movsb
mov
iret
repnz
fisubs
pop
in
iret
test
push
enter
inc
int
das
adc
jb
pop
dec
pusha
xor
xchg
mov
rorl
sbb
stos
pop
leave
rcrl
div
dec
jb
xchg
lcall
andb
and
in
push
ret
cmp
bswap
inc
scas
jne
popa
adc
mov
fcmovbe
and
popf
sahf
jbe
pop
ds
xchg
popa
xchg
add
insl
push
jae
stc
pop
lcall
jge
pushf
leave
pop
outsl
into
xchg
imul
cmpsl
leave
idivb
insb
xor
push
inc
jno
ret
imul
out
xchg
cmp
out
adc
negl
jmp
jb
xor
mov
xchg
shll
cmp
jge
je
pop
stc
inc
dec
and
adc
in
sbb
in
in
adc
xchg
stos
mov
cmc
ds
mov
pop
mov
push
dec
jle
out
movsb
pop
jle
ds
pop
mov
mov
sbb
popa
rorl
xor
xchg
stos
mov
fwait
sbb
sub
popl
push
and
popa
aam
dec
jmp
repz
xlat
sahf
xor
cmpsl
into
pop
push
mov
pop
dec
jne
out
popa
cwtl
inc
dec
test
mov
push
push
sti
int
push
fs
shrl
xchg
jbe
xchg
call
add
ja
add
sub
out
gs
mov
ret
lret
into
jecxz
fiaddl
rcll
jns
mov
push
or
hlt
cmc
in
ss
sub
xchg
test
imulb
outsl
sbb
mov
or
arpl
mov
dec
scas
jo
arpl
mov
stc
movsl
je
or
les
adc
fs
stos
je
pop
add
sarb
mov
pop
aas
in
jp
nop
inc
or
decl
popl
arpl
push
out
push
popf
hlt
mov
pop
mov
inc
jp
out
inc
and
mov
adc
mov
icebp
mov
test
into
bound
mov
cs
rcrl
xchg
loop
jb
loop
xchg
bswap
mov
xchg
sub
or
into
insb
mov
imul
cmp
loop
stos
cmp
sub
xchg
imul
push
or
adc
push
dec
xchg
mov
jns
das
push
shl
xor
mov
fwait
or
in
dec
pop
and
movsl
into
mov
sahf
into
or
mov
movsl
mov
insl
repz
scas
mov
lds
dec
mov
push
fists
popf
in
xchg
cli
int
arpl
xor
aad
dec
lcall
push
xchg
xchg
pop
jbe
push
vpsubusw
xchg
mov
out
push
xor
adc
sub
xchg
fistpl
dec
dec
xor
dec
imul
cmpsb
ja
test
aad
xor
xchg
mov
and
dec
lea
in
lret
lret
mov
aam
cmp
cmp
adc
repz
sub
out
cmp
ja
sub
adc
fucomip
pop
rclb
mov
aaa
mov
cmpsb
shlb
scas
cmp
inc
clc
mov
or
mov
mov
push
add
out
push
sbb
push
int3
push
cli
pop
fwait
enter
imul
sub
scas
dec
call
ret
hlt
add
ret
or
sbb
push
dec
add
ss
sbb
loop
push
and
mov
iret
stos
jmp
or
testb
mov
ret
jno
cs
xchg
fwait
pop
icebp
inc
or
or
fcoms
insb
dec
add
mov
aad
cmp
mov
or
adc
lock
repz
mov
sub
into
jb
sbb
repz
sub
pushf
arpl
test
xchg
ret
rcl
push
icebp
and
js
jns
xchg
shrb
sahf
loope
sbb
pop
cmp
or
mov
gs
push
or
push
out
nop
inc
or
sub
pop
cmp
mov
fprem
imul
xchg
mov
mov
pop
dec
xlat
dec
dec
arpl
push
adcb
cltd
mov
ss
sbb
pop
mov
inc
cmp
push
push
xchg
and
sbb
lahf
ljmp
sbb
shrl
aad
pop
rcll
xor
flds
xchg
es
inc
jge
xchg
dec
inc
cmpsl
fidivs
push
fstpl
xchg
in
or
pop
mov
addr16
in
sar
adc
xchg
aad
add
outsl
sub
repnz
xchg
enter
pop
adc
xchg
jmp
andb
xchg
lret
aas
mov
jb
aaa
ljmp
jbe
jmp
sub
or
enter
cmp
test
mov
xchg
push
ffreep
insl
cmc
cmpl
mov
dec
add
rorb
out
movsl
cmp
ljmp
outsl
add
or
test
xchg
dec
pop
js
inc
push
xor
add
add
fs
mov
push
jb
stos
jns
in
xlat
jae
imul
cld
sbb
dec
daa
lods
push
imul
iret
jne
jae
mov
push
mov
call
out
clc
sub
dec
dec
jecxz,pn
out
daa
inc
sbb
iret
push
sub
xchg
sub
xchg
pop
xchg
test
xchg
data16
mov
xor
push
fidivs
popf
aaa
xor
lret
cmpsl
mov
sbbb
sahf
adcb
roll
lods
jge
int
jae
and
icebp
xchg
xor
cmp
inc
out
fwait
enter
or
mov
adc
loopne
sbb
movsb
nop
xchg
lods
stos
adc
adc
sub
iret
cmpsb
icebp
fisubl
cwtl
lahf
jl
inc
inc
push
mov
out
sub
pop
pop
out
xor
rol
mov
repnz
lcall
mov
xchg
inc
jmp
mov
aas
mov
mov
movsb
test
repz
testl
jns
pop
push
adc
inc
int3
repz
xor
and
and
pop
std
insl
mov
add
out
dec
fldl
adc
pop
lods
stos
data16
mov
into
mov
mov
int3
xchg
and
out
fwait
add
out
push
inc
nop
scas
filds
dec
lret
scas
mov
adc
xor
push
fld
jbe
cmp
jmp
and
sub
cmp
cld
adc
push
cmp
ds
sub
data16
jbe
enter
push
xchg
mov
xor
aaa
push
xchg
push
movsb
pop
sub
test
xchg
inc
test
mov
inc
fcmovu
cmp
cltd
dec
sbbl
push
arpl
or
sbbb
pop
fcompl
cmp
push
xchg
add
push
sub
jne
and
push
inc
test
cmp
dec
orb
inc
or
inc
ds
jbe
ret
cmc
adc
or
adc
inc
ret
xchg
sbb
popa
lret
mov
or
push
sbb
outsb
inc
add
xchg
dec
or
ljmp
dec
in
adc
shrl
maskmovq
imul
adc
jae
aas
int3
clc
fs
fcoml
cs
clc
xchg
dec
jmp
adc
mov
and
shrl
dec
sbb
popa
pop
popa
cli
sbb
ljmp
adc
or
and
push
jno
or
cmpsb
cmp
xor
mov
xor
pop
pushf
xchg
or
les
or
mov
xchg
xor
sbb
into
pop
jmp
add
add
repz
shlb
mov
dec
jno
mov
cltd
xor
push
movsl
jbe
je
push
push
inc
push
stos
lahf
mov
fs
cmc
inc
andb
or
pop
xor
push
ret
out
repnz
push
cmpsb
mov
add
jb
lock
mov
dec
pop
fildll
jmp
stos
or
push
and
ffreep
jmp
cwtl
mov
mov
pop
or
cmpsb
es
ret
add
leave
mov
push
push
add
cmp
fists
mov
inc
imulb
push
fwait
popf
cli
xor
sub
xor
in
dec
mov
mov
or
dec
pop
insl
sub
pop
testl
call
sub
lcall
xchg
lcall
push
cmp
pop
xchg
xlat
xor
push
mov
gs
popf
sub
pop
clc
pop
push
gs
xchg
in
pop
inc
sub
xlat
jns
mov
adc
mov
test
xor
cwtl
cli
in
add
sbb
in
xchg
cwtl
repnz
add
iret
dec
data16
mov
lea
push
jp
pop
adc
jg
bound
out
cli
xchg
sbb
je
jne
sbb
dec
and
int
mov
insl
xchg
leave
and
xor
popa
pop
cld
mov
jb
movsb
push
cmp
push
adc
outsl
in
repz
clc
fiaddl
jnp
xor
imul
sub
and
xor
cmp
or
out
xchg
ja
aad
pop
mov
loop
cmp
jnp
test
gs
cltd
xor
cmc
xlat
jl
xchg
add
cli
jmp
adc
adc
repnz
mov
xor
sub
shlb
int3
pop
add
adc
shl
jno
pop
repz
or
lods
sbb
lret
popa
mov
jmp
fmull
xorb
mov
data16
mov
sbbl
fsts
xchg
or
leave
adc
icebp
mov
enter
pushf
dec
loope
push
mov
or
pop
inc
pop
inc
sub
loopne
pop
out
scas
aad
call
pop
dec
mov
xor
int
sub
sarb
xor
aam
aam
jmp
out
outsb
js
sub
cmp
nop
bnd
clc
lret
out
xor
cmpsb
gs
outsb
mov
data16
int
sub
rcrl
sub
mov
bound
mov
js
mov
test
mov
hlt
push
xchg
mov
js
jb
movsl
cwtl
jno
fidivl
and
rol
pop
cmp
push
add
pop
aas
insb
pop
insl
fildl
out
call
sub
testl
mov
shll
mov
ss
jnp
pop
dec
push
in
dec
jg
enter
aas
std
jg
lea
out
repnz
inc
dec
push
fsubr
mov
sahf
les
xchg
lods
sbb
jo
iret
pop
int
lock
xchg
aad
cld
int
mov
cmp
or
or
pop
mov
or
mov
pop
cmp
pop
aad
sti
fdivrs
shll
incb
std
sbb
adc
roll
jl
mov
push
jl
popa
mov
mov
lock
mov
fs
jb
popa
add
adc
iret
push
push
cmp
adcb
stos
mov
and
lea
outsl
test
dec
arpl
jle
jl
push
pop
sbb
mov
flds
xlat
cmpsl
std
mov
cld
sub
rcr
leave
jne
aam
push
mov
pop
lret
gs
loop
mov
and
mov
jp
jp
dec
or
imul
sbb
cmp
sub
pop
lods
xchg
inc
push
push
add
xchg
jns
push
or
mov
fistpl
inc
out
dec
sbb
sbb
sbb
cmp
jp
ja
je
xchg
pop
xchg
add
cmpsl
mov
movsl
xor
lahf
inc
sbb
jnp
pusha
divl
fs
call
cmp
arpl
jecxz
outsb
mov
popf
lea
mov
leave
pusha
sahf
jge
and
into
jns
ret
mov
orl
int3
outsl
out
jmp
or
dec
dec
fwait
pop
xchg
mov
pop
jecxz
adc
xchg
xlat
cld
and
jmp
sbb
rcrb
push
jmp
aad
or
test
and
mov
movsb
or
and
imul
repz
jb
mov
shll
push
xchg
outsl
pop
inc
push
push
cmp
push
push
hlt
pop
mov
pop
ffreep
push
add
imul
cmc
movsl
les
mov
gs
jecxz
adc
jl
dec
sub
lret
test
or
adc
pop
or
or
sbbb
add
jl
insb
cmc
mov
roll
insb
loop
mov
sub
adcb
xor
dec
enter
dec
pushf
shrb
xor
sbb
mov
repz
xor
jo
add
out
dec
and
pop
mov
cs
cmp
in
fcoms
data16
xor
sub
fs
test
xor
sub
xchg
adc
add
pusha
or
inc
imul
ja
xor
adc
rcrl
stos
sbb
insl
mov
pop
std
pop
hlt
lea
dec
cmp
sub
mov
cmp
sub
test
lock
fisubs
mov
jecxz
in
movsb
xor
sub
cmp
lcall
jmp
pushf
sbb
sub
xchg
or
jbe
cmp
pop
pusha
fs
das
imul
inc
enter
aad
ja
out
bnd
int3
dec
cmpsl
mov
jae
jb
mov
mov
add
inc
mov
pop
and
dec
leave
sub
mov
mov
xchg
mov
out
push
pop
out
push
movsl
mov
ret
adc
fsubr
stos
push
arpl
or
xor
jno
jb
lock
aas
cld
test
mov
or
daa
cmp
out
mov
xlat
jp
jae
and
xchg
orl
push
add
mov
hlt
flds
push
jecxz
hlt
jecxz
gs
icebp
mov
outsl
push
xor
mov
push
add
gs
cmpsl
test
cli
jb
dec
dec
movsl
ret
or
cmp
test
jl
xchg
insl
jo
das
insb
push
rcrb
scas
pop
daa
mov
sub
stos
outsb
test
xchg
add
lods
push
xchg
pop
pop
fidivs
jo
iret
cmp
lock
add
test
xor
call
loop
pop
shl
lahf
lret
mov
mov
dec
adc
jl
add
push
xchg
sbb
mov
adc
jns
mov
fidivrl
push
lock
xchg
lret
fildll
inc
aad
jae
mov
das
in
loopne
ret
pop
sub
idivl
in
pop
dec
cmpsb
jge
cltd
mov
mov
sti
cltd
push
sbb
jnp
inc
cs
cmp
sbb
dec
daa
test
inc
pushf
add
movsl
cs
mov
bound
jecxz
mov
xchg
sub
cli
mov
pop
adc
or
cwtl
cmp
mov
push
sub
push
mov
mov
cli
out
jge
notl
mov
inc
in
jae
xor
xchg
cmpsb
testl
push
xchg
push
adc
mov
or
mov
into
push
pop
push
cmpsb
and
aam
xchg
xor
cmp
or
jnp
aad
into
mov
and
and
stos
std
jne
rol
aad
jp
subb
mov
dec
xchg
pop
pop
mov
das
lret
lcall
call
pusha
pop
dec
arpl
jae
inc
rclb
mov
aam
jmp
and
push
mov
loop
or
in
or
and
popf
mov
dec
inc
pop
lods
les
cld
loopne
push
dec
sbb
lds
push
inc
inc
adc
xor
shl
je
inc
loope
filds
scas
xchg
fbstp
imul
xchg
shlb
xchg
and
loopne
jge
jecxz
test
shrb
mov
jb
dec
leave
xchg
pusha
cmpsb
sub
inc
loopne
out
lods
xchg
ja
ljmp
nop
fstp
mov
pusha
mov
push
test
in
xchg
pop
inc
jno
adcb
mov
mov
dec
pop
fdivl
jg
jg
add
jge
dec
and
mov
add
inc
cmp
mov
or
jl
pop
push
add
push
xchg
cmpsb
mov
dec
hlt
push
jmp
testl
sub
dec
sbb
les
or
fldl2t
mov
push
push
faddl
gs
or
mov
imul
dec
pop
rcr
gs
xchg
movsb
fimull
add
loop
mov
ja
jns
mov
aaa
or
mov
jg
lds
mov
aaa
adc
enter
fcoms
add
jb
jl
lea
sbb
mov
inc
pop
pushf
add
jle
fisttpl
cltd
ljmp
push
call
dec
jns
hlt
int3
lea
lds
es
mov
jge
incl
pop
repnz
sbb
and
push
mov
sub
mov
mov
inc
movaps
dec
xchg
pop
dec
movsb
insl
rolb
inc
aaa
push
mov
or
and
xchg
push
and
outsb
sbb
ja
rol
xor
es
inc
push
push
jp
lea
lods
loopne
clc
fstps
and
pushf
pop
push
pop
lcall
shll
mov
repz
lcall
inc
mov
and
xchg
repz
adcb
inc
and
call
dec
mov
mov
aad
xlat
dec
mov
test
and
push
and
sbb
in
orb
mov
scas
sub
xchg
pop
mov
imul
dec
cmp
sbb
mov
jae
aam
in
xchg
add
add
mov
xchg
shrl
add
inc
jae
aaa
mov
dec
mov
mov
iret
xchg
addr16
loope
cli
test
aad
aas
jnp
sub
lret
pop
iret
jmp
cwtl
inc
jl
enter
sbb
aam
cltd
lods
imul
xchg
push
mov
pop
gs
mov
push
outsl
into
jecxz
ljmp
repz
ret
in
pop
jp
fsubrl
es
xchg
and
dec
push
xchg
cs
fldl
mov
sbb
addr16
and
pop
movsl
cmp
dec
xor
ret
hlt
pusha
pop
mov
xor
xchg
dec
clc
out
cmp
cwtl
enter
inc
fists
adc
jnp
jmp
mov
push
jae,pn
dec
mulb
mov
inc
and
and
sub
jl
mov
mov
cmpsl
xor
test
cmpsl
jnp
cld
movb
or
pusha
sahf
xchg
test
push
mov
bound
outsb
and
out
jns
rcr
loope
jge
call
cmpsb
sahf
or
inc
add
test
or
aam
jmp
ja
sti
xchg
jle
cmp
jno
dec
dec
fnstcw
sbb
sbb
dec
dec
cmp
aad
xor
pushf
stc
out
xor
sbb
push
xchg
cld
xchg
jecxz
and
mov
sahf
ljmp
lret
inc
data16
pop
outsb
testb
mov
mov
xchg
mov
dec
xchg
arpl
out
mov
or
pop
sub
pusha
xor
je
out
incb
mov
rcr
inc
hlt
sub
mov
pavgb
scas
sub
insb
mov
arpl
aad
xchg
pop
xchg
in
arpl
movsl
cli
mov
pushf
mov
xor
jl
and
sub
adc
cmp
add
push
aam
daa
pop
mov
add
in
sub
sub
sbbb
mov
insb
lock
mov
jmp
jl
dec
cmp
jecxz
add
jle
inc
push
ret
mov
scas
xlat
sub
xor
test
push
mov
dec
lods
pop
inc
adc
fwait
inc
xchg
add
aam
dec
cltd
inc
lea
lock
inc
or
push
mov
mov
sub
cmp
int
stos
jge
lahf
loopne
stos
ficompl
pushf
xor
dec
and
push
push
or
xchg
push
out
mov
cmp
pop
sub
xchg
xchg
rorb
jno
dec
lret
xchg
mov
add
add
mov
jg
fldcw
stc
stos
nop
cltd
jp
incb
cs
dec
jb
mov
dec
push
fld
sub
lret
scas
cmp
leave
rorb
jl
fdiv
inc
cltd
pop
cmpsb
mov
test
mov
lods
adc
mov
sbb
lods
mov
outsb
push
test
mov
xchg
inc
or
lahf
pop
mov
adc
sub
sbb
mov
xchg
pop
adc
sarb
dec
push
mov
mov
adc
mov
and
xchg
cmp
push
fbstp
sbb
fimuls
adc
rcrl
or
gs
xor
push
gs
or
cld
xchg
and
pop
or
daa
scas
mov
xchg
loope
sub
cs
in
xchg
outsb
imul
call
push
sub
or
xlat
or
sub
adc
push
pop
test
daa
pop
pusha
and
popa
pop
pop
into
pusha
mov
dec
ss
inc
push
imul
xor
xchg
mov
sarb
fcompl
ret
les
pop
cmp
ss
xchg
decl
shl
iret
inc
jl
cmp
mov
mov
push
js
orb
imul
add
dec
out
push
clc
add
sar
push
dec
add
notl
dec
add
js
add
ret
mov
xor
dec
jle
insl
cmp
mov
gs
pop
mov
jmp
and
or
jo
adc
ret
fistl
sbb
jmp
sbb
xchg
pop
pop
hlt
jmp
push
lds
adc
pop
fmul
push
mov
xor
dec
jae
sbb
push
lods
push
sbb
mov
imul
mov
pop
mov
icebp
push
pop
xchg
inc
call
inc
rcrb
in
lea
test
xor
xchg
in
mov
push
mov
sbb
xor
rolb
mov
push
jbe
in
mov
int
mov
sub
lea
imul
mov
xor
mov
sub
in
cmp
fdivrs
jae
cmc
push
cmp
mov
cmc
dec
mul
xchg
pop
inc
pop
dec
shlb
int
dec
addb
xor
add
sub
lret
and
and
push
jno
mov
mov
adc
jnp
and
sti
out
out
mov
cmpsl
in
dec
pop
in
cmp
xor
jmp
ljmp
out
jnp
adc
test
ret
lods
sbb
roll
mov
pushl
push
insl
push
push
mov
push
add
inc
fwait
inc
mov
pop
adc
aaa
mov
xlat
lcall
out
mov
daa
and
xchg
out
call
inc
out
fildll
loop
aas
out
adc
out
repnz
xchg
test
pop
movsl
sahf
pop
xlat
xchg
shll
adc
adc
clc
pusha
pop
xor
jb
aas
js
pop
les
pop
xchg
hlt
push
inc
sub
shrl
dec
jbe
mov
addr16
and
xchg
jbe
fs
imul
divl
pop
jns
test
xor
mov
xor
sbb
mov
fidivrl
into
sbb
and
or
adc
pop
mov
or
cmp
mov
pop
aaa
dec
push
sbb
mov
cli
lods
push
jb
jg
fildl
jae
push
nop
mov
inc
lcall
sub
adc
inc
ds
lods
mov
or
pop
leave
xchg
shl
push
decb
push
pop
push
shlb
pop
stc
fcmovnb
faddl
mov
dec
rolb
lcall
dec
cltd
jmp
adc
push
outsb
orl
movsb
inc
pop
ljmp
dec
dec
add
jae
cmpsb
lds
scas
stc
sbb
ljmp
add
dec
adc
pop
mov
xchg
ja
xchg
mov
mov
lea
sahf
and
jp
adc
mov
in
jnp
leave
int3
jmp
movsl
adc
movsl
dec
popf
inc
mov
and
sti
xchg
add
lcall
sub
mov
add
dec
or
sub
pop
outsb
cltd
js
hlt
je
pushf
fldenv
sub
push
push
ret
push
sub
or
fisttpl
lret
sub
push
jnp
clc
nop
test
nop
inc
jno
icebp
xchg
test
lods
loopne
mov
pop
push
pop
or
inc
mov
pop
into
sbb
mov
int
cs
mov
mov
xor
dec
pop
sti
lahf
sbb
sub
out
icebp
faddl
fwait
cmp
pop
sbb
xchg
repz
push
push
aam
in
jns
bndstx
aas
imul
repnz
jl
hlt
add
arpl
mov
imul
and
jnp
popa
rorb
sub
aad
ret
les
test
jge
test
inc
movsb
out
pop
cmp
shlb
fiaddl
and
and
fldcw
in
mov
xor
pop
loope
and
ja
stos
xor
cmpsb
movsb
ret
sbb
jecxz
fisttpl
outsb
sar
ret
add
push
insb
jp
arpl
xor
popf
or
fists
pop
fs
cmp
add
push
dec
js
mov
pop
icebp
in
scas
sbb
inc
inc
jno
mov
outsb
mov
mov
out
insl
je
sub
ds
std
repz
out
int3
mov
iret
adc
push
testl
mov
cli
lds
sbb
and
xor
outsl
movsb
ljmp
incl
or
xchg
add
and
sbb
dec
fisubl
push
dec
jns
jae
and
ja
jb
sti
adc
jg
aam
insl
mov
bound
push
imull
xorl
std
std
repz
mov
push
jmp
lahf
lcall
test
push
js
or
add
pusha
inc
pavgw
bsr
fldl2e
leave
ljmp
pop
pop
bound
lahf
addr16
test
jne
shr
push
mov
stos
rclb
jg
jle
jae
mov
xlat
in
pop
cmp
adc
mov
adc
xchg
mov
fldt
pop
mov
mov
rcrl
ja
cmpsl
insl
and
cmp
cmp
push
adcl
std
dec
es
ficomps
mov
scas
lahf
stc
int
pop
scas
out
pop
aas
iret
inc
add
popa
outsl
adc
lea
or
loop
gs
mov
aas
jo
test
in
aam
ljmp
je
jb
ret
loope
dec
nop
sarb
mov
push
mov
aaa
jp
pop
ljmp
lahf
jae
int3
loopne
xchg
fsts
dec
into
mov
sbb
fcoms
mov
ds
ja
popf
in
shlb
shrl
sub
adc
icebp
xor
lds
fldenv
lret
adc
hlt
pop
sub
into
and
lea
fldenv
test
insl
shlb
inc
out
jle
out
adc
inc
xor
std
rorb
in
scas
sbb
sbb
fdivp
leave
push
mov
in
mov
cmp
lds
idivl
xchg
pop
gs
pop
inc
push
sarb
or
inc
sbb
pop
lds
test
sub
in
pop
sub
daa
mov
movsb
aad
jns
jno
jg
sbb
inc
sbb
loop
movsl
sbb
dec
cmp
add
fs
xlat
jl
xor
lds
sbb
out
push
mov
xchg
fldl
gs
les
ja
inc
sbb
or
stos
dec
add
dec
inc
cmp
push
adc
inc
aas
pop
jl
out
push
fnstsw
jge
fcmovnu
sub
pop
inc
sbb
pop
pusha
and
cmpsb
jnp
and
mov
leave
pop
xor
cld
jne
out
jmp
xchg
jno
cli
jbe
inc
pop
mov
inc
hlt
mov
xchg
add
xor
push
push
cwtl
lret
stos
btcl
ss
orl
cmc
xchg
sbb
push
or
and
fwait
xor
pop
jp
mov
js
mov
dec
dec
fisttps
aad
cmp
inc
add
nop
push
inc
xchg
insl
pop
rolb
test
in
xchg
xchg
test
jno
lea
cld
adc
mov
push
mov
and
decl
and
xchg
pop
cs
addl
inc
clc
jl
pop
lret
jne
cmp
sbb
rcl
cmp
outsb
cli
sub
or
test
jge
xchg
movsl
out
mov
jne
icebp
push
aam
dec
repnz
test
iret
push
scas
inc
iret
jno
sub
xor
arpl
mov
cltd
push
loop
mov
enter
inc
bound
sub
xor
into
dec
dec
loopne
mov
dec
inc
adc
pusha
ss
mov
xchg
or
mov
jne
lods
xchg
icebp
scas
and
dec
mov
xchg
xchg
and
pop
mov
push
xchg
addr16
sub
lcall
mov
cld
sub
jns
and
call
adc
or
arpl
sbb
movsl
lret
mov
push
add
sub
dec
popl
push
xchg
jp
call
pop
cld
xor
cmpsl
sbb
pop
ret
inc
jns
jmp
stos
sbb
or
mov
lret
lahf
and
push
xchg
xor
shrl
xor
mov
sub
add
pop
cmp
cmc
xchg
mov
js
fs
ds
jmp
push
push
cs
call
rorb
xchg
testl
aas
mov
and
cs
jmp
inc
sti
cmpsl
mov
inc
lods
fs
rolb
in
insl
push
xchg
std
pop
and
mov
xlat
jg
stos
nop
mov
push
mov
pusha
fdiv
sti
mull
mov
aas
cmp
mov
ljmp
dec
es
lock
fldenv
and
pop
mov
verw
or
mov
pop
addr16
dec
int3
ds
cmp
sub
pop
daa
pop
test
cmp
push
stc
mov
dec
std
pop
out
xchg
xchg
cwtl
lret
add
pop
inc
push
adc
mov
test
lahf
std
inc
add
xor
lock
lea
in
inc
mov
push
into
push
insb
inc
rorl
add
dec
jb
imul
jg
popf
out
push
cmp
dec
insb
stos
mov
xchg
enter
push
sbb
call
xchg
call
xchg
cmp
pop
in
sub
sub
and
js
push
ficompl
movsb
nop
inc
mov
adc
pop
push
jno
aam
add
dec
in
popf
mov
add
lods
bound
arpl
jb
push
adcl
ljmp
int3
xchg
mov
inc
or
mov
and
mov
jge
lods
pop
jle
nop
popa
outsl
inc
xlat
cmp
dec
pushf
xor
std
pusha
pop
arpl
clc
inc
lods
cltd
add
fidivs
pusha
jg
jbe
test
mov
sti
and
inc
ja
jge
sub
cmp
and
fisttpl
jb
mov
ret
fdivrl
in
js
std
lret
jp
test
outsb
xor
and
cmp
fnstcw
dec
push
push
out
sub
inc
sbb
or
inc
cmc
test
push
pop
xor
sub
mov
sub
rorl
pop
dec
mov
cmpsl
push
dec
push
mov
xor
out
into
adcb
loop
sahf
jg
out
call
mov
in
xchg
ficoml
push
adc
add
jp
int3
inc
xlat
pop
shrb
xchg
jbe
test
or
dec
pusha
mov
out
out
in
pushf
lods
jmp
fisttpll
add
sub
adc
sbb
in
leave
jg
insl
into
sarb
dec
sti
sti
popf
pushf
adc
das
mov
and
les
dec
and
loopnew
inc
dec
xchg
xor
divb
xorb
ljmp
movsb
mov
fbld
cltd
jecxz,pn
into
xchg
insb
mov
cmp
add
mov
pop
sub
shrb
inc
loope
sub
test
aas
lock
pop
data16
fs
ds
mov
or
push
cmp
scas
aad
xchg
push
cmp
xor
test
mov
cltd
pop
sbb
inc
mov
inc
mov
or
xchg
and
or
jno
lret
mov
repz
sbb
cld
jmp
or
sub
xorb
int
dec
or
movsb
int
xchg
enter
xor
js
call
imul
dec
jns
xchg
mov
outsb
test
mov
jno
test
sbbb
js
icebp
test
or
das
mov
mov
push
push
or
xchg
jne
pop
addr16
std
push
mov
sbbl
inc
adc
push
lock
jns,pt
pop
adc
ret
sbb
test
xlat
aad
in
outsl
fwait
call
sbb
inc
jae
mov
aam
cltd
cltd
imull
fcomps
dec
add
pop
sahf
das
out
add
stos
pop
xchg
enter
lods
sbb
jmp
mov
fs
rorl
fs
mov
mov
leave
lret
les
sub
mov
lret
sbb
cmp
mov
icebp
movsl
sahf
in
cmp
std
inc
jne
cmpsl
mov
dec
iret
push
jae
and
dec
push
fcompl
lds
dec
rol
loopne
in
cmpsl
dec
dec
push
daa
mov
pusha
xchg
les
cs
subb
jg
mov
cmpl
push
mov
out
add
lea
sub
neg
jo
data16
xor
push
out
stc
inc
cwtl
cmp
cmpsl
outsl
and
xchg
stos
ss
dec
movsb
fsubrl
repnz
ret
or
or
push
in
fcmovne
dec
mov
in
inc
mov
dec
lcall
in
dec
jne
mov
ret
gs
xor
xchg
add
inc
add
ja
jmp
mov
jp
and
aaa
adc
mov
adc
inc
dec
jno
jns
push
sub
push
in
stc
mov
cmp
loop
add
xor
mov
mov
aas
adc
mov
cs
test
in
push
insl
repz
jnp
xchg
mov
pop
fwait
les
jo
xchg
daa
dec
outsb
cmp
sarl
incl
outsb
aas
test
push
fnstcw
push
jecxz
jo
mov
or
cwtl
adc
popf
hlt
mov
jbe
sub
or
mov
adc
jmp
rolb
jo
inc
loope
mov
lea
jb
repz
stos
icebp
std
test
test
loopne
push
cmp
fnstcw
mov
add
add
push
roll
push
ret
ret
addb
loope
sub
and
filds
into
adcl
xor
lcall
dec
fstpl
mov
xor
push
mov
pusha
js
sarl
das
repnz
les
imul
pop
rcl
dec
imul
inc
cli
aaa
add
mov
pop
ret
jnp
add
out
bnd
pushf
xchg
mov
loop
inc
adc
cs
into
jl
daa
inc
jmp
jne
add
add
xchg
test
inc
and
sub
mov
dec
dec
aas
jno
fbstp
cmp
imul
cmp
fs
push
ljmp
fisttpl
xchg
stos
ss
lds
push
push
mov
es
add
mov
pushf
fdivr
sbb
cmc
je
aas
cmpsb
stc
insb
aaa
and
lret
pop
mov
orl
cmp
push
ja
iret
push
cs
and
xor
pop
cltd
stos
out
sbb
adc
das
out
add
ss
xchg
xchg
mov
scas
imul
or
mov
push
fildl
lods
scas
pop
xor
lret
ljmp
add
dec
inc
popa
and
aaa
sub
dec
adc
or
mov
cmp
inc
xlat
nop
pop
in
cmpb
jecxz
gs
lock
inc
add
in
adc
pop
pop
pop
pushf
add
int
push
enter
add
lock
leave
repz
add
in
sahf
dec
scas
sarl
pop
fcoms
push
das
faddl
ficoml
ljmp
sti
jns
mov
xor
das
dec
mov
xchg
inc
push
push
aam
inc
inc
hlt
push
sbb
or
mov
xchg
mov
and
xor
mov
adcl
cmp
rclb
xor
sar
subb
jle
pop
mov
arpl
jnp
xor
sub
pop
loopne
jnp
or
mov
test
orl
sti
adc
push
cmp
jo
cli
mov
and
rcr
cmp
jns
sub
and
mov
mov
inc
xchg
cmp
dec
aam
cld
into
cltd
sub
xchg
fdivs
sbb
mov
in
push
mov
iret
inc
and
cmp
xor
clc
es
xchg
or
sbb
or
and
arpl
cwtl
loope
pop
push
jbe
adc
movsl
jns
testb
lret
nop
mov
jo
les
call
insb
mov
in
push
rcll
xor
sbb
daa
jl
and
in
mov
test
mov
jp
push
fmuls
stos
stc
pushf
mov
testl
xchg
add
icebp
mov
aam
bound
icebp
js
addl
jb
mov
mov
loopne
cltd
jnp
cli
gs
or
adc
lock
dec
sarb
lret
add
sarb
add
mulb
popa
mov
push
fcmovnbe
loopne
clc
cmp
outsb
pop
popf
into
fldt
sub
jg
rcll
mov
mov
push
mov
fmul
xchg
xchg
cli
aad
mov
inc
mov
in
and
push
insb
dec
inc
leave
outsl
gs
mov
sub
push
call
fidivrl
mov
push
push
sarb
arpl
mov
pop
ret
cwtl
movsb
mov
andl
ret
test
stc
inc
sub
and
xor
sbb
inc
and
xchg
inc
add
mov
push
mov
jb
adc
xchg
mov
mov
repz
imul
push
lods
jb
sub
jecxz
xor
jl
repnz
lret
sarb
dec
in
or
sahf
dec
xor
mov
xchg
je
mov
ds
and
movsl
pop
into
sti
sub
lock
xchg
test
mov
inc
adc
nop
or
pusha
pop
aam
cmc
rep
or
cmp
ja
lahf
sar
mov
cmp
stc
stc
dec
jae
in
clc
std
pop
add
adc
insb
mov
mov
pop
xor
mov
xor
pop
mov
push
faddl
jbe
je
mov
int
xor
adc
movb
jne
xorl
fstpt
jno
nop
cli
mov
inc
scas
pop
push
sbb
in
in
ss
xor
subb
add
add
push
push
mov
pop
mov
repnz
das
outsl
adc
xor
or
push
cmpsb
mov
movsb
test
repnz
daa
ret
data16
cmp
jmp
fldl
mov
fs
sti
jl
js
xor
mov
or
jne
shrl
outsb
jl
push
mov
adc
in
dec
sbb
cmp
sub
ret
int3
in
lea
sbb
sbb
arpl
sarl
lock
xchg
inc
pusha
adc
in
fldt
add
fisubrs
std
ja
cmp
mov
lcall
fstl
sub
loopne
je
jmp
mov
jl
jo
sahf
cmp
or
sub
xchg
test
xchg
loope
shrl
xchg
je
pop
lret
jne
stc
jb
add
enter
xor
dec
add
hlt
iret
shlb
popa
mov
mov
pop
inc
or
dec
into
xor
outsb
in
xchg
mov
mov
cmp
pop
dec
loope
adc
sub
add
daa
das
cmp
in
xor
dec
jno
sub
inc
addl
shrl
mov
test
pop
inc
mov
sub
jbe
test
mov
insl
lods
inc
subb
out
cmpsl
cmp
or
xlat
loopne
xchg
cmp
push
jae
fs
push
imul
and
fs
sub
mov
lcall
rcll
add
mov
sbb
jp
mov
sbb
out
xchg
xchg
cmp
cmp
imul
xor
repz
and
mov
inc
stos
fstps
pop
pop
xchg
cmp
ds
mov
sub
test
subb
out
fisubl
outsb
push
arpl
aam
fildl
dec
pop
adc
add
stos
jnp
xor
dec
insb
add
and
mov
loop
xchg
int
test
ds
push
insb
jl
test
or
call
out
daa
pop
jge
mov
rcrl
sub
pop
and
xchg
inc
lds
cmp
cmp
mov
vcvtsd2si
lcall
cmc
jnp
std
jne
mov
add
sbb
dec
mov
sbb
jmp
hlt
scas
into
mov
jno
iret
outsb
lret
mov
jae
mov
sbb
sub
pop
or
inc
pop
cmc
push
in
mov
sub
add
ds
xor
sbb
out
cld
cmp
cltd
sub
and
jle
aad
sti
cltd
pop
push
es
push
xor
js
lds
inc
inc
mov
jmp
mov
andl
lea
xchg
cmp
push
mov
add
cs
cmp
add
out
stc
int3
cs
sub
cs
mov
ss
bound
mov
inc
fdivs
xor
mov
dec
shll
aaa
mov
or
daa
mov
mov
adc
xor
add
jns
pop
cmc
mov
jle
cld
scas
lret
jno
add
xor
iret
mov
mov
xchg
popf
add
js
out
inc
or
jo
and
jmp
cmp
out
jae
popa
js
sub
bound
lret
dec
sbb
ret
sub
shl
jp
cmp
sbb
push
dec
sbb
js
jmp
cmpsl
stos
stos
movsb
cmpsl
jbe
adc
cmc
lock
lahf
xor
scas
loop
and
dec
cmpsl
scas
pop
mov
push
xor
hlt
xor
stos
arpl
inc
xor
mov
xor
js
arpl
in
stos
cltd
sahf
loopne
sub
add
test
mov
mov
lahf
xchg
or
push
int3
movsl
mov
inc
jb
jbe
mov
fcmove
out
xchg
arpl
das
push
jo
loop
xchg
jne
inc
pop
mov
xor
les
push
popf
stc
pop
xor
into
jo
popf
cld
inc
push
jge
jbe
lods
adc
nop
lret
mov
mov
mov
mov
mov
mov
xor
das
aas
or
mov
mov
sbb
jno
cmc
jecxz
stos
leave
jae
shr
mov
or
adc
mov
fcoms
sbb
je
sub
add
push
push
jge
push
push
xchg
enter
jl
leave
shr
out
dec
xchg
jns
enter
inc
fistpll
cld
xor
sub
inc
mov
mov
test
rorb
fdivs
fs
mov
mov
sub
inc
pop
mov
add
pushf
and
cmp
pop
sub
mov
sbb
aam
add
sbb
jno
ja
scas
lock
push
mov
push
inc
jmp
add
cmpsb
test
lret
ja
mov
mov
pop
push
inc
inc
mov
sub
test
mov
jo
pop
inc
mov
pop
push
and
and
dec
pop
xchg
setg
inc
inc
lret
inc
inc
icebp
xlat
int3
lods
add
sahf
push
xchg
int
into
pop
lcall
jno
or
push
dec
pop
stos
mov
insb
cmp
cmpsl
xchg
or
sub
pop
xchg
lock
repnz
sarl
mov
push
xchg
fiadds
lahf
dec
xchg
ret
dec
inc
fstl
lods
andl
repnz
sub
inc
inc
sti
stos
pop
test
insl
aad
in
dec
rcrb
jmp
mov
jmp
mov
xchg
adc
mov
adc
shll
pop
cmpl
jmp
insl
jae
out
test
push
jo
je
test
or
push
dec
lahf
xchg
xchg
jno
rorl
sub
fwait
mov
cmpsl
sbb
push
mov
jno
das
cmp
pusha
je
je
rclb
xor
sbbl
cli
jne
adc
mov
es
stos
jl
dec
int
jecxz
out
or
fcoml
add
jl
iret
mov
ja
int3
das
xor
sub
and
lea
je
mov
jp
jge
shll
cmp
in
inc
lret
aaa
push
cltd
sbb
cmp
jae
arpl
add
mov
inc
push
mov
sub
aas
cld
mov
jno
inc
sbb
outsb
ds
mov
and
int3
cld
lock
sbb
lods
stos
imul
hlt
aam
scas
pushf
pop
push
leave
jb
pop
jecxz
lcall
mov
xor
dec
sub
enter
push
pushf
ret
ja
push
icebp
scas
shl
cwtl
jne
das
repnz
aas
jae
and
xchg
xchg
mov
adc
cmp
mov
or
popf
mov
je
rep
pop
inc
push
sub
mov
sub
aaa
fstps
test
repnz
mov
fwait
lods
cld
adc
aaa
icebp
mov
ret
jae
mov
lds
mov
cmp
dec
hlt
aad
and
pop
test
aad
lods
mov
popa
imul
fidivs
mov
lock
sahf
pop
cmp
inc
popa
cmp
inc
push
test
and
xchg
cmc
psllq
mov
test
es
and
fisubrs
popf
les
adc
cwtl
push
test
inc
popf
in
inc
and
adc
lea
mov
div
jg
cmp
mov
push
js
lret
lfs
cmp
fcoml
xchg
scas
mov
loop
cld
or
testb
clc
push
arpl
jno
mov
fisttpl
outsb
xchg
gs
adc
int3
call
movsb
mov
jle
sarl
setl
push
pop
pushf
sarl
lods
xchg
xchg
movsb
les
out
outsl
and
push
cld
ja
dec
mov
test
int
sti
test
or
and
dec
push
xchg
sbb
jae
stc
test
xchg
lods
lds
movsb
std
out
add
dec
adc
pop
subl
pop
cmp
cltd
mov
inc
clc
adc
call
pop
mov
xlat
dec
sub
pop
mov
cmpsb
push
repz
sub
pop
orl
and
mov
mov
test
aam
in
mov
mov
xchg
cmp
ficompl
xor
test
xchg
pop
popa
mov
or
outsl
mov
mov
sub
mov
adc
in
add
fcomps
xorb
adc
mov
cmc
mov
pop
dec
add
mov
sbb
or
cmpsl
arpl
or
xlat
mov
jnp
js
sub
mov
sbb
cmp
mov
das
add
data16
mov
xor
aam
xchg
in
and
stos
xchg
xchg
push
into
mov
addr16
dec
sub
xlat
add
mov
push
jns
fucomip
aad
cld
push
xor
push
leave
mov
pop
push
sub
mov
lcall
stos
popa
or
inc
jo
repz
js
iret
fidivl
ljmp
jmp
xchg
in
ret
pop
mov
xor
in
in
jl
insl
jmp
mov
adc
pop
lock
pop
out
and
lods
aaa
sub
push
ds
repnz
xchg
and
fs
into
or
mov
mov
and
in
dec
cmpl
jb
rcl
adc
xor
mov
int
loopne
mov
xor
add
ja
into
adcl
xor
and
inc
fmulp
push
mov
negl
negb
dec
push
mov
jne
adc
add
xchg
pop
aaa
push
fcmove
mov
mov
icebp
xchg
adc
gs
lock
pop
test
es
popf
jmp
cmp
js
test
pop
repz
cwtl
test
mov
popf
sub
out
lea
dec
mov
dec
mov
pop
rclb
in
jo
mov
sbb
mov
mov
push
div
xchg
in
jno
aam
lret
icebp
ljmp
mov
inc
fucomip
push
stos
mov
mov
fwait
mov
std
gs
nop
mov
and
jo
xchg
shrl
add
push
in
dec
push
mov
fsubs
add
rcl
xchg
fldcw
fbstp
rcll
sub
adc
inc
pop
mov
test
push
cmp
out
popa
addl
sub
push
mov
mov
pop
jp
ror
xchg
out
arpl
addb
mov
or
arpl
out
xchg
mov
icebp
xchg
or
or
pop
inc
rcrl
lods
jbe
lret
lea
imul
pop
fildll
rolb
push
and
pop
icebp
dec
enter
and
js
xor
dec
xor
mov
push
cmp
outsb
insb
les
les
cmp
sti
test
sbb
or
mov
add
ret
pop
iret
adc
fldt
aas
mov
subl
mov
sbb
adc
je
sbb
je
xlat
push
mov
pop
xchg
test
cmp
je
cmp
push
stos
add
gs
inc
jmp
dec
push
sbb
push
pushf
sub
cmp
cmpsb
rolb
push
xchg
clc
fidivrl
ret
mov
ljmp
mov
loope
sahf
push
jns
out
ja
mov
push
arpl
fmuls
leave
sbb
in
pop
adc
push
pop
pop
dec
mov
xor
mov
add
aaa
out
int
push
out
enter
leave
cwtl
jle
fmull
sbb
stos
fneni(8087
movsb
movsb
xlat
or
fnstsw
int3
call
nop
out
mov
ss
mov
dec
mov
push
mov
pop
mov
add
jl
dec
jne
movsb
mov
pop
xchg
outsl
lock
push
push
enter
daa
cmp
bnd
popa
inc
cs
mov
or
dec
movsl
or
sbb
les
fsts
or
pop
mov
inc
adc
pop
pop
in
xchg
or
rol
pushf
ljmp
bound
pop
lahf
fcmovnbe
xor
sti
jge
stos
cmp
lock
jb
xorb
sbb
push
sub
orl
lods
pop
mov
in
or
subl
insb
mov
or
pop
movb
cvttps2pi
push
aad
int3
adc
add
bound
int
xchg
jne
movsl
and
push
mov
lret
mov
fcoms
inc
push
push
test
pop
das
popf
push
jno
mov
aaa
arpl
push
pop
leave
iret
xchg
or
lcall
mov
sbb
loopne
sar
shll
or
jmp
mov
les
or
jo
mov
push
and
sbb
mov
jno
fsub
jmp
push
lods
and
fdivs
sbb
cmp
mov
xchg
or
pop
jne
mov
mov
arpl
hlt
mov
jp
test
das
mov
pop
popa
mov
sbbl
or
mov
mov
mov
jb
imul
and
cmp
je
and
or
stos
les
fsubrl
enter
xchg
sub
sbb
jo
mov
loop
jmp
mov
adc
inc
inc
sbb
or
cmpsb
shrb
bnd
hlt
out
ficomps
popf
fwait
jp
test
sub
scas
jle
push
xchg
adc
push
jo
repnz
in
idivl
add
fdiv
mov
adc
aaa
and
jno
dec
mov
inc
push
pop
dec
inc
call
out
loop
sti
sbb
adc
jnp
fbstp
pop
loopne
mov
xor
push
jle
dec
sub
add
xchg
dec
repz
inc
xchg
sti
add
push
insl
jge
mov
fistl
in
xchg
cltd
stos
dec
xchg
rolb
ss
xchg
and
xchg
cs
stos
shlb
js
lock
shr
fdiv
in
ret
inc
repz
ret
movsl
icebp
aas
addb
sub
imul
addr16
jmp
jle
xchg
popa
inc
pop
push
cwtl
and
jae
xor
mov
adc
cmp
stc
iret
lret
in
jne
insl
call
dec
bndldx
mov
xor
shrl
add
mov
aad
ss
and
daa
inc
sub
aad
sub
cs
or
loopne
lock
mov
nop
mov
mov
test
jle
xchg
pushf
mov
and
test
test
pop
inc
test
fwait
dec
outsl
jg
pop
stos
ret
pop
insb
mov
daa
push
int3
mov
push
xor
pop
or
lock
outsb
mov
xchg
sub
mov
jnp
sub
xchg
pushf
sub
lds
shll
lods
dec
loopne
testb
pop
rclb
xor
mov
vmwrite
loopne
push
leave
jmp
dec
push
push
fisubrs
stos
mov
iret
mov
xchg
cmp
cli
es
sti
cmp
mov
repnz
pop
mov
xchg
adc
je
pop
push
cld
inc
jmp
add
push
cmp
lcall
xchg
in
leave
jbe
inc
sbb
push
push
and
xchg
mov
sbb
add
dec
sbb
fsubrs
push
cltd
cmp
jbe
fidivs
or
fwait
cwtl
cmp
leave
test
add
mov
adc
test
pop
repz
jb
fxch
repz
cmp
loope
cwtl
mov
iret
popf
jmp
hlt
lret
mul
add
mov
add
push
and
mov
mov
sarb
inc
jns,pn
add
mov
mov
ss
fs
es
in
jp
aaa
or
jmp
pop
jnp
mov
mov
mov
or
cmp
jmp
mov
or
es
and
or
arpl
or
xchg
jg
testb
std
and
imul
sbb
jle
mov
insb
mov
xor
hlt
mov
adc
punpckhwd
cmpl
std
and
ss
addr16
addr16
lret
push
push
mov
jo
cwtl
fisubl
mov
adc
test
sbb
mov
mov
shlb
xchg
movsbl
mov
int
paddd
je
cmc
cmp
sbb
dec
sub
sub
insl
daa
pop
aad
sbb
jl
fldenv
lahf
ret
enter
int3
movsb
xchg
popf
cwtl
sub
mov
sbb
sbb
ficompl
inc
testl
mov
push
xchg
in
mov
sub
jecxz
xor
es
cmp
repz
int3
mov
add
ficomps
pop
push
pop
pop
and
jecxz
fs
or
mov
pop
lock
dec
pop
push
in
icebp
pop
push
stos
repz
je
mov
mov
mov
pop
cmp
inc
mov
mov
addr16
pop
push
dec
lret
fldenv
mov
inc
aad
xchg
aaa
mov
adc
or
aas
mov
and
es
adc
in
and
mov
xor
clc
mov
xchg
lods
lods
sbb
sarb
movsb
out
pop
test
das
mov
cmp
mov
adc
jg
loop
mov
das
adc
int
leave
popf
and
jne
testl
adc
mov
lods
fistps
repz
cmp
leave
mov
inc
and
addr16
jecxz
mov
push
xchg
or
xchg
mov
xchg
jno
in
mov
lods
lret
arpl
shll
xchg
ds
lcall
adc
cmp
push
movsl
ljmp
dec
je
mov
jecxz
in
push
shlb
sahf
cli
cli
jp
hlt
pushf
test
in
sbb
cmpsl
test
cmp
das
lods
call
mov
sub
imul
sub
dec
sahf
test
adc
mov
imul
insb
fcomi
jmp
js
mov
cmp
sarl
inc
xchg
cli
imul
mov
mov
and
fisttpll
sbb
mov
int3
jo
orl
jnp
xor
pop
or
xchg
push
mov
in
outsb
cmp
cmpb
cmp
cmpsb
jg
into
xchg
test
sbb
mov
sbb
int
inc
dec
clc
adc
fnsave
lea
jne
jo
lds
in
nop
jmp
sub
ror
into
sub
stos
hlt
jno
movsl
notl
addr16
push
adc
xor
loop
pop
cmpsl
pop
pusha
or
pushf
cmp
jecxz
jae
lcall
mov
adc
daa
push
dec
inc
inc
fcomps
push
out
bound
inc
pop
divl
loope
mov
pop
roll
mul
jge
adc
fsubl
push
xor
and
cmp
icebp
mov
cmc
notl
in
enter
jl
ficoml
push
mov
sub
push
insl
das
inc
push
in
decl
lahf
bound
test
mov
pop
xchg
pop
jp
sti
subl
add
mov
bound
fnsave
cmp
rcl
cmp
pusha
jp
mov
cs
mov
and
lods
sub
jmp
in
scas
push
cld
inc
lock
in
cwtl
push
add
or
ret
movsb
add
mov
orl
out
xchg
xor
adc
or
arpl
test
jl
fdivs
add
mov
mov
and
scas
leave
and
pop
push
mov
push
xor
incl
adc
cli
scas
negl
push
imul
jo
xlat
sub
fbstp
mov
mov
inc
imul
cmp
lret
cld
aam
push
xor
dec
push
adc
test
jnp
out
adc
fcomps
mov
insb
xchg
xor
mov
dec
jbe
push
stos
lock
jecxz
jnp
jo
pop
lret
leave
cmp
cmp
in
dec
adc
lods
jg
pmovmskb
pop
data16
popf
movsb
sub
in
lret
std
insl
ret
shll
xor
cli
arpl
push
mov
rorl
int
clc
sahf
je
xchg
icebp
cmp
xchg
data16
jo
push
add
inc
loop
dec
je
or
push
lock
fs
cmp
test
cmp
les
lahf
jp
add
add
xor
loopne
pop
ss
jmp
sub
cmc
sbb
nop
mov
js
inc
outsb
fisubrl
ret
push
mov
out
xchg
outsl
into
adc
scas
sbb
adc
stos
xor
dec
fs
std
fcomps
iret
lret
sub
pop
add
into
cltd
jg
cmp
sub
sarb
inc
fimull
jl
pop
dec
ficomps
inc
add
pusha
loop
add
movsb
pusha
test
adc
adc
lret
mov
int3
push
pushl
cmp
iret
mov
out
lea
pop
loope
and
pop
add
mov
pop
dec
mov
sbb
xchg
xchg
sub
mov
shr
mov
push
pop
and
dec
sbb
sub
inc
popa
cmp
loop
movsb
insb
push
cmp
push
add
sbb
inc
jg
mov
in
movsl
add
iret
arpl
mov
jns
push
inc
popa
orb
test
xor
mov
push
ret
aas
stos
jnp
sti
jb
add
jmp
dec
jp
jb
lret
in
jae
clts
and
insl
or
cltd
clc
push
daa
sub
mov
sub
data16
in
sub
mov
or
or
fildll
push
and
stos
addl
jge
mov
inc
shlb
jae
aam
pop
mov
sbb
pop
jb
push
cmp
mov
jmp
fs
rcll
stc
loopne
test
xchg
stos
fsubrl
loop
movsl
push
mov
scas
jp
ret
add
jbe
sbb
js
outsl
imul
inc
mov
xchg
insl
inc
icebp
inc
das
scas
mov
fsub
mov
mov
and
cs
lcall
mov
daa
scas
cli
mov
mov
jno
rol
out
mov
imull
dec
ret
xorl
jecxz
pop
sub
xor
lds
enter
lret
pop
add
xchg
adc
xlat
push
decl
stos
mov
sahf
test
or
clc
sbb
mov
mov
rcl
sub
movsl
roll
fs
les
aas
mov
testl
mov
pop
scas
inc
cmp
inc
das
mov
out
in
in
jg
sub
sub
xor
test
into
cmp
lahf
movsl
inc
imul
or
mull
stc
lods
xchg
lods
daa
pop
aas
cmp
mov
xor
scas
and
data16
sbb
pop
sub
lret
in
cmp
ljmp
pop
add
sbb
shr
push
mov
xchg
push
mov
sub
or
call
adcb
call
gs
scas
mov
dec
es
adc
imul
jp
ja
mov
or
shlb
jg
rorb
lret
adc
shrl
sbb
in
pop
pop
dec
iret
loop
xchg
outsl
enter
push
mov
sub
adc
pushf
xchg
dec
xchg
xchg
int
jecxz
lock
fld
lods
and
ret
inc
sti
or
ret
jle
rolw
mov
insb
jg
add
orb
mov
decb
jl
pop
mov
sub
dec
sbb
or
jle
scas
loopne
add
test
push
lock
inc
or
outsl
fs
lret
pop
or
pop
mov
or
lgdtl
cwtl
or
aam
enter
mov
arpl
or
push
push
out
pushw
add
es
sahf
push
pusha
or
push
js
mov
jo
insl
add
cwtl
mov
mov
fildll
lcall
sbb
movsl
mov
pmulhw
xor
rcrl
gs
or
xchg
xor
ds
add
push
lret
imul
out
hlt
in
sbb
cmp
shr
xchg
cmp
iret
popf
sub
lods
icebp
and
or
lea
bnd
and
inc
xor
pop
repnz
rorb
sbb
dec
out
xchg
stos
xchg
and
push
add
divb
xchg
mov
jo
mov
sub
xchg
outsb
add
jmp
push
xlat
or
and
cmpsb
push
add
lea
xorb
mov
ret
xchg
xchg
or
inc
pusha
jmp
pusha
insl
fldenv
xchg
mov
pop
mov
mov
adc
push
stc
cmp
lahf
lret
test
mov
lods
ret
out
outsl
punpcklwd
cwtl
sarw
cmp
xchg
ja
dec
lods
push
mov
gs
xchg
cli
pop
xchg
lret
push
or
adc
jg
rclb
or
add
ljmp
mov
mov
push
test
insb
mov
inc
or
repnz
adc
mov
dec
xor
fstpt
sarl
aam
xchg
ret
out
jb
adc
pop
push
sbb
mov
sbb
shrb
stc
subl
ds
inc
mov
xchg
push
pop
mov
dec
imul
cmpb
adc
sub
pop
mov
push
jo
or
push
and
cli
out
pushf
add
addl
ffree
cmc
inc
cmp
enter
in
push
cmpsl
xor
pop
nop
out
fldt
and
xor
leave
mov
adc
icebp
rorl
clc
xchg
adc
and
push
call
inc
jb
push
inc
stos
sub
ret
jmp
sarl
push
sub
lret
call
incl
cmovne
xlat
loopne
mov
hlt
push
repz
ljmp
and
xlat
pop
fimuls
pop
jnp
lret
sahf
push
xchg
cmp
and
jmp
fdivrp
jb
outsl
and
leave
sbb
lcall
out
adc
pusha
das
sub
insl
popf
xchg
lcall
add
cmp
sbb
shrl
xchg
push
rcll
jecxz
adc
xchg
sbb
xchg
adc
push
push
repnz
pop
add
aam
xchg
loopne
imul
lret
mov
xchg
push
pop
sbb
dec
decl
ret
lock
stc
push
loop
xor
int
aas
fisttpll
sbb
sub
push
mov
adc
jo
sbb
lea
ror
ret
jge
jg
xlat
mov
add
fidivs
xchg
mov
mov
test
enter
dec
ds
pop
push
pushf
cwtl
add
lret
mov
adc
or
leave
out
mov
out
or
xor
dec
js
mov
mov
dec
mov
mov
mov
xor
dec
cmc
xchg
dec
pop
jl
mov
jbe
mul
cmpb
je
jo
adcl
sub
out
mov
in
in
lret
push
insb
sub
movsb
orb
cmp
add
cwtl
das
push
test
fwait
mov
lret
pop
into
dec
dec
or
jnp
repz
lods
in
dec
jne
in
lret
stos
out
sahf
lods
bound
jecxz
or
inc
add
fsubs
and
sub
or
out
push
js
add
nop
mov
das
in
dec
mov
fisubs
ss
mov
cmp
in
rolb
imulb
push
shlb
sbbb
gs
xor
pop
and
pop
pop
adcb
jns
popf
arpl
in
adc
subl
divb
fmul
mov
jmp
out
pushl
jmp
cmp
and
or
inc
insb
jns
in
xlat
cmp
inc
push
adcl
in
or
mov
iret
jle
push
sub
nop
imul
out
and
xor
push
enter
pop
pop
xor
push
push
and
ficomps
mov
hlt
or
test
fstpl
xchg
pusha
hlt
inc
add
mov
jmp
mov
mul
xor
mov
fs
cmpl
dec
pop
ret
aad
lahf
inc
into
cwtl
in
roll
aam
add
jo
sub
cmp
repz
jecxz
cmpsb
mov
mov
lret
in
and
popf
add
bound
stos
mov
sub
and
inc
jbe
repz
or
mov
rcrl
push
lcall
insb
jae
jae
out
fstps
adc
scas
shl
jmp
es
les
pop
test
loop
add
or
icebp
mov
fsub
ret
mov
mov
xor
repnz
mov
xor
jo
inc
push
js
scas
mov
pop
outsb
push
fildll
filds
or
bound
and
xlat
sbbb
test
sti
in
int3
hlt
sahf
push
fadd
shll
flds
jl
add
sbb
jp
cmp
or
test
lods
sbb
inc
jnp
cld
sub
addb
pushf
adc
mov
mov
add
xchg
mov
and
js
incb
scas
shr
mov
mov
dec
or
dec
mov
push
or
std
daa
xchg
iret
jp
add
push
out
push
xchg
jo
popa
pop
sub
gs
gs
jle
pusha
stos
or
stos
xor
movb
leave
inc
adc
jno
inc
mov
nop
shll
lea
scas
dec
fdivs
xor
jmp
jp
mov
cwtl
mov
test
mov
xor
sbb
mov
and
pop
push
enter
fsubrl
pop
leave
cld
mov
test
mov
sbb
loope
iret
pop
lahf
data16
bound
notl
adc
or
ja
ljmp
jecxz
cmp
mov
sbb
jp
mov
mov
sub
insb
jns
pop
std
jbe
stc
lcall
sbb
movsb
icebp
push
into
nop
out
jp
js
dec
dec
addr16
mov
lds
add
mov
sbb
cli
std
aam
insl
lahf
imul
xor
add
add
inc
and
shll
stc
xor
mov
pop
cld
insb
lock
das
ja
jb
arpl
imul
xchg
test
mov
ja
sub
cmpl
jge
jecxz
cmpsl
cmp
inc
addr16
imulw
push
cs
xor
gs
enter
mov
adc
sbb
cmp
sub
jle
push
loop
and
ja
adc
fs
push
or
fstl
ljmp
mov
mov
xor
out
pop
or
mov
out
jne
fstpl
or
or
lret
add
das
lret
subl
sbb
xor
fs
jbe
subb
cmp
or
cmp
insb
pop
cmc
mov
push
cmpsb
loope
and
or
test
jp
ja
mov
pop
jo
lock
mov
scas
mov
inc
add
loopne
gs
mov
add
cltd
outsl
sbb
insl
jns
ds
mov
flds
push
dec
cmpl
dec
test
mov
jb
rcll
js
pusha
int
or
insb
hlt
cmpsb
adc
jne
adc
jge
inc
or
sub
adc
cmp
sbb
xor
pop
leave
test
pop
and
xor
lret
or
jmp
sub
scas
loope
jnp
pop
data16
cmp
push
data16
movsl
rorb
push
xor
leave
fwait
dec
into
cs
lcall
roll
shll
mov
sub
popa
xor
je
hlt
in
and
pusha
test
mov
xchg
xchg
mov
mov
mov
xchg
gs
aad
pop
dec
mov
data16
mov
ljmp
xchg
xlat
imul
movsl
hlt
cmp
or
in
inc
pop
sbb
xor
or
mov
push
shrb
ljmp
leave
in
sti
lret
cmp
cltd
mov
iret
nop
sbb
into
pop
mov
jns
mov
lods
pop
push
mov
enter
sub
xor
jns
fcoml
add
notl
mov
mov
push
mov
adc
mov
rcll
fidivrl
pop
or
fisubrl
cld
mov
adc
push
or
add
dec
gs
sbb
dec
add
fistpl
sbb
mov
iret
xor
jle
jo
in
mov
cmc
ror
xchg
jle
and
pop
loopne
cld
cwtl
push
xor
imulb
jge
insb
cmp
cmp
inc
cmp
aam
pop
scas
sbb
imul
cld
test
fisttps
add
dec
sti
sbb
in
faddp
and
and
out
push
push
leave
mov
lods
push
test
sbb
imul
xor
inc
push
into
sub
push
dec
mov
dec
cmp
mov
ljmp
lods
test
pop
add
jno
dec
cwtl
mov
outsl
stos
rclb
popa
sub
fwait
add
loope
mov
xchg
lods
sbb
mov
adc
pusha
jecxz
lock
int3
mov
into
sbb
out
lods
addr16
popl
test
fdivl
xor
test
cmp
dec
aad
cld
pop
inc
mov
outsb
subb
js
sti
push
sbb
loopne
push
cmp
pop
out
shrb
mov
inc
mov
shl
add
xchg
jg
xor
push
or
adc
add
sti
pop
mov
mov
fsubs
outsb
pop
lds
pushf
adc
sti
stos
mov
lcall
inc
xor
ftst
mov
cmp
jae
stos
into
iret
std
push
cld
stc
add
test
and
xchg
jb
fiadds
sbb
push
mov
adc
int
fdivr
outsl
adc
mov
adc
or
jno
daa
pop
jge
push
ret
inc
scas
jo
pop
mov
outsb
or
shlb
sub
pop
mov
mov
dec
icebp
mov
jne
lret
and
jmp
call
addr16
cmpsb
jno
jo
jbe
arpl
sbb
pop
arpl
sbb
xchg
mov
xor
sbb
pop
mov
dec
add
incl
push
jl
mov
pushf
mov
stos
mov
outsl
dec
lcall
cmpsl
movsl
jae
bound
dec
inc
jge
int3
rclb
in
pop
daa
inc
ret
leave
pusha
xlat
jne
jl
xchg
mov
mov
dec
sbb
lret
jo
leave
mov
ljmp
or
inc
or
lahf
mov
daa
cld
pop
or
pop
popa
dec
jmp
adc
out
adc
jmp
mov
dec
nop
xchg
xlat
sub
pop
in
add
sti
ljmp
xchg
cmp
mov
sub
or
xchg
out
cmp
sbb
inc
repnz
dec
inc
add
lds
cmp
pop
mov
cli
xchg
mov
enter
outsl
dec
lods
pop
pusha
inc
and
rcrl
mov
pop
adc
mov
das
xor
enter
mov
sti
jg
lods
xor
sub
test
scas
in
xchg
repz
bound
inc
test
leave
in
sub
out
xorb
pop
fdivl
ret
test
pop
xchg
mov
fisttpl
movsl
movsb
stos
or
sahf
jb
inc
jecxz
xchg
loopne
jne
lahf
xchg
sub
mov
pop
push
ret
pop
ret
js
adc
ret
jg
add
repnz
out
pop
pop
add
idivl
xchg
sub
mov
add
scas
push
xchg
jecxz
movsl
mov
mov
sbb
ret
cmp
dec
sbb
mov
pop
and
sub
movq
gs
dec
jne
mov
lods
and
xor
js
cld
push
add
mov
mov
jo
aam
mov
dec
xor
push
jbe
inc
cmp
ret
and
into
enter
sub
xchg
gs
mov
push
test
fdivr
pop
mov
in
add
stos
mov
mov
call
lret
push
ficompl
test
cs
mov
xchg
push
div
dec
push
cltd
aad
cmp
fbstp
aam
jmp
mov
xchg
mov
scas
and
iret
or
mov
mov
lret
or
sub
mov
arpl
xlat
xchg
into
cmpsl
insb
sub
addr16
pop
pop
xchg
add
test
call
dec
call
xchg
sub
sub
int
mov
sahf
jae
mov
and
pop
in
xchg
inc
jns
xlat
int3
rcl
pop
out
addl
jmp
cmp
or
cli
cmpsl
push
hlt
leave
jbe
mov
cltd
sub
ljmp
outsb
dec
test
pop
mov
jl
mov
push
addl
push
xor
pop
retw
stc
xorb
rorb
or
pop
rorb
mov
sarb
dec
cs
lcall
dec
push
in
cs
and
rcll
sbb
cmp
sbbb
sbb
adc
or
stc
cmpsb
push
xchg
add
mov
dec
dec
shrb
fbstp
xor
push
add
inc
out
inc
add
jp
scas
aam
jae
push
lods
adc
stos
je
mov
and
movsb
fadds
cltd
scas
push
and
push
jmp
inc
pop
pushf
jl
mov
sub
xlat
mov
int
inc
mov
icebp
jno
xchg
xchg
xchg
jle
repnz
mov
cmp
xchg
sub
ficompl
xchg
xchg
pop
xchg
jo
loop
cltd
adc
ret
fs
xchg
push
loop
dec
stos
mov
cmc
xchg
in
loop
push
lods
popf
lret
adc
and
leave
sti
fs
out
jecxz
outsb
pop
xchg
bound
add
add
cmpsl
and
push
mov
xchg
inc
jle
outsb
sbb
rorl
test
inc
fs
inc
into
mov
fxch
or
mov
cld
iret
jp
ss
into
mov
aad
mov
and
lret
push
xor
mov
cmp
push
mov
add
xchg
pop
adc
lcall
sbb
dec
xor
jl
mov
mov
ds
cld
push
movsb
gs
ret
ja
scas
sbb
gs
dec
dec
push
inc
loope
enter
mov
mov
subb
iret
lcall
repnz
dec
xchg
mov
sbb
fld
pop
les
jp
lds
fsts
add
insb
mov
fnstsw
sbb
rolb
xor
outsb
mov
gs
cmpsb
pop
mov
popa
hlt
inc
inc
xchg
cld
cli
push
adc
sbb
ja
xor
and
adc
adc
fmul
inc
pusha
arpl
and
fiaddl
cwtl
fildl
je
jl
shlb
dec
adc
cmp
cmp
ret
nop
testb
push
push
popf
inc
inc
testl
and
inc
insl
pusha
sub
mov
lret
cmpb
xchg
iret
jl
xchg
push
pop
mov
movsl
repnz
and
lahf
fistpl
into
push
push
add
scas
hlt
into
jp
hlt
xorb
push
dec
lds
cld
or
cmp
es
sbb
cmp
sub
add
sub
mov
adc
repz
jb
jo
mov
sti
push
jbe
out
cmp
in
adcl
adc
mov
fldcw
push
sub
aas
mov
filds
les
cmp
movsl
cmp
test
or
ljmp
test
lcall
or
je
jl
mov
test
push
adc
insl
mov
fimuls
test
push
inc
sub
outsl
movsl
xchg
and
ljmp
ror
nop
mov
and
fsts
xchg
mov
out
mov
adc
pop
loope
dec
mov
mov
outsb
push
sub
xor
loop
les
pop
mov
mulb
push
lcall
lahf
clc
push
es
test
inc
or
xchg
pop
in
xor
jb
mov
loope
repz
jne
xchg
stos
pop
xor
sahf
mov
xchg
cmpsl
stc
adc
pop
in
cmp
fists
lahf
cltd
loop
xchg
xchg
pop
icebp
jecxz
pop
into
add
dec
push
jb
lret
sbb
jb
mov
mov
mov
sub
cmpsb
or
in
xchg
mov
add
cwtl
push
xlat
arpl
cwtl
in
xor
dec
add
popa
xchg
jmp
cltd
cmpsl
adc
or
aaa
sub
adc
adc
mov
push
mov
cmp
jmp
fwait
jns
aaa
int3
mov
inc
rorb
jmp
cmc
inc
xor
push
into
loopne
movsl
rcr
shrb
mov
scas
aad
insl
imul
sbb
mov
mov
cmpsl
mov
cmp
pop
pop
inc
roll
arpl
sbb
mov
in
cld
sub
cmp
das
shrb
out
aaa
aaa
xchg
adc
cmp
xor
sub
in
or
test
mov
push
sub
stc
or
out
mov
int
inc
in
testb
xor
xchg
cmpsb
mov
or
outsl
adc
out
sub
ret
lods
lcall
mov
loop
or
pushl
sbb
mov
fsubrs
dec
icebp
jl
sub
cbtw
insb
push
imul
adc
nop
add
int3
lcall
daa
enter
sti
test
pop
lret
enter
xchg
cmpsl
sub
xchg
fimull
dec
in
fmull
popf
jae
push
sahf
jmp
xor
clc
jl
dec
repz
test
in
int
out
mov
push
ja
and
cmp
ja
pop
mov
les
fcmovnbe
ja
sbb
adc
stos
hlt
sub
xor
xor
aas
push
aas
pop
test
lret
repz
and
pop
pop
insl
xchg
pushf
popf
mov
mov
xchg
rolb
mov
testl
stc
lret
sbb
inc
sub
cld
mov
ds
xchg
sti
dec
jmp
cmp
mov
cmp
mov
xchg
and
mov
jb
mov
loope
hlt
call
pop
adc
dec
pop
jne
xchg
mov
adc
sub
imul
xor
movsl
in
push
pop
cmc
cmp
out
add
cmc
adc
mov
in
ljmp
imul
rorb
arpl
jecxz
push
or
and
xor
pop
in
out
sub
sub
in
sbb
sbb
fxch
xor
insb
and
push
mov
cwtl
rcrl
outsb
shll
mov
xor
lret
aaa
lods
ror
pop
out
mov
sub
dec
stos
mov
test
add
mov
stc
fiadds
pop
enter
cld
xchg
in
dec
mov
cmpsb
and
lret
mov
aad
popa
mov
add
jne
inc
sbb
add
xchg
es
stos
mov
stos
and
pop
mov
lret
and
push
aas
test
xchg
push
jnp
push
mov
push
mov
sub
lods
jne
les
out
fidivrs
out
sbbb
loopne
mov
mov
incb
stos
jno
popa
std
and
or
adc
jno
mov
jb
movsb
dec
sub
in
jbe
mov
fnstcw
sub
xorb
rcr
pushf
mov
iret
stc
xor
fiaddl
ret
jb
sbb
jno
cmpsb
stc
ret
out
popf
jbe
scas
enter
nop
andb
xor
lahf
and
or
roll
idivb
lret
shl
pop
mov
mov
shrb
adc
les
lret
mov
mov
mov
mov
sbb
lahf
push
inc
inc
mov
in
add
cmp
shrb
xchg
scas
ret
or
shrl
sbb
mov
in
test
cwtl
inc
push
scas
lods
aas
gs
loopne
das
or
mov
ds
xchg
in
and
jno
test
jne
lcall
test
xor
stos
scas
aaa
std
xlat
dec
jns
lahf
icebp
aaa
mov
test
xor
shll
adc
xchg
rol
clc
mov
dec
aaa
xchg
dec
shll
fsubs
fcoml
mov
mov
xor
stos
int3
aaa
sarb
int
adc
subl
in
inc
aad
inc
popl
test
push
pop
xchg
fldcw
cld
pop
xchg
imul
or
mov
movsl
inc
sub
add
cmp
xor
in
fidivs
fs
pusha
adc
lods
and
sbb
cli
xor
add
xchg
xor
test
inc
test
fcmovu
mov
loop
xchg
mov
fbld
pop
stos
pop
add
sbb
mov
mov
ss
repz
mov
jo
xor
dec
cmp
push
xor
hlt
push
pop
xor
push
xor
lods
sub
std
adc
cmp
daa
pop
in
int
fimull
add
sub
arpl
mov
pop
xor
addr16
xor
push
xor
push
mov
and
int3
lods
xchg
in
out
and
sub
out
push
xchg
push
insl
imul
sbb
das
cmp
jp
gs
mov
das
or
mov
and
xor
clc
adc
xor
push
jmp
je
rcl
lahf
out
jg
rolb
movsl
adc
mov
lods
lea
sub
mov
jae
mov
xor
pop
push
cmpsb
outsb
push
xor
lods
mov
in
cmpsb
out
ss
mov
int
scas
rcll
and
nop
jge
mov
push
pop
jmp
lahf
dec
sub
mov
mov
push
jecxz
cld
js
sti
pop
arpl
jg
pop
aad
sbb
xchg
filds
dec
test
in
fstl
mov
sub
inc
aaa
clc
add
iret
repz
xchg
sbb
xor
xor
sub
mov
movsb
xchg
lea
ljmp
or
out
mov
sahf
outsl
sub
pop
cltd
pusha
dec
mov
hlt
mov
das
mov
sbb
out
xor
les
inc
cmp
jmp
stc
lds
mov
jp
mov
add
mov
add
aad
mov
push
xor
addr16
sub
insb
lret
fwait
rorl
nop
inc
mov
aaa
xchg
vxorps
int3
add
mov
sti
push
pushf
shrl
mov
cmc
hlt
fistpll
mov
int
pop
mov
xor
fs
es
iret
mov
out
cmp
adc
adc
push
jb
stos
inc
inc
cli
pop
mov
dec
jmp
int3
sub
test
fbstp
cmp
call
lea
inc
pop
xor
xchg
or
jnp
pop
out
push
mov
negl
xor
popf
mov
insl
mov
or
xor
cmpsb
xor
imul
insl
out
fdivl
cwtl
popf
orl
jbe
mov
mov
aad
aas
push
les
popa
stos
fsubrs
mov
cmp
pop
fwait
and
xor
push
aaa
addl
hlt
sbb
jnp
jo
dec
dec
jne
mov
fisubrs
jl
loop
cmp
adc
pop
loope
pop
je
adc
and
push
and
inc
xor
mov
lods
xchg
dec
lods
push
mov
fwait
dec
xchg
sahf
incl
rcrb
lret
inc
aas
mov
and
dec
aad
xlat
jle
ja
push
sbb
jnp
jmp
test
adc
je
mov
out
adc
cmpsb
fisttpll
add
dec
cmpsb
and
mov
or
jmp
cwtl
inc
jmp
arpl
fadd
pop
je
push
jne
in
clc
cwtl
ds
cmc
xchg
add
cmp
add
nop
add
int3
jmp
dec
ficoml
pop
add
fimuls
jno
aam
mov
add
xchg
filds
dec
int
inc
mov
shlb
jnp
dec
or
lds
dec
lret
adc
or
jae
sub
push
xor
repz
dec
cmc
adc
aas
mov
push
daa
into
xchg
pop
push
sub
imulb
out
mov
jecxz
sbbl
icebp
sahf
pusha
cmp
rorl
jl
xlat
or
iret
or
mov
cmpsb
mov
push
rcll
mov
push
cmp
sub
lahf
loop
add
insb
movsb
stos
arpl
ret
loopne
xorl
or
and
cmp
add
and
sub
mov
test
pop
cltd
jbe
xor
nop
mov
decb
pop
dec
sub
push
xor
aas
mov
in
and
sbb
test
pusha
loopne
sub
mov
lods
jb
bound
decb
adc
mov
or
fcoml
int
and
ds
mov
adcl
arpl
aad
lret
loop
das
enter
xor
pushf
jae
sub
testl
cmp
inc
or
jae
and
sub
xchg
jns
sub
mov
pop
mov
pop
adc
jmp
loop
test
push
cmc
aad
imul
sub
jb
mov
add
jle
sbb
fistpll
les
jg
cmpsl
and
pop
dec
jmp
adc
into
outsl
test
jbe
bound
pop
pop
mull
pop
cmp
dec
adcl
loop
inc
mov
int
mov
bound
mov
pusha
sub
xchg
pop
sbb
outsl
fwait
cwtl
pop
rorl
push
xchg
movsb
cmp
orb
stos
mov
lcall
mov
inc
arpl
mov
xor
xor
add
adc
and
mov
cmpsb
pop
xchg
outsl
inc
jo
mov
enter
push
mov
xor
addl
repz
int3
arpl
jge
adc
arpl
aas
or
and
push
and
xor
cmp
mov
or
in
sbb
and
dec
testl
lods
js
mov
push
inc
dec
mov
push
mov
jge
mov
jne
xor
cmp
lds
pop
imulb
dec
ds
cmc
movups
mov
push
into
popf
sbb
leave
andl
pop
or
adc
lock
cmp
stos
out
or
pop
insl
in
jnp
push
fcomps
xor
call
ds
jno
mov
mov
adc
lock
hlt
or
sbb
jae
test
jp
fs
imul
aas
fcoms
mov
cs
scas
aam
xor
mov
sbb
clc
jp
rcrb
xchg
xchg
pop
pop
jmp
mov
xor
jae
mov
jo
push
mov
stos
xchg
pop
fidivs
cmp
subl
mov
mov
push
and
push
in
pushf
fwait
adc
or
adc
outsb
hlt
enter
in
in
dec
add
xchg
call
mul
fs
stos
dec
in
mov
xor
shl
pop
aas
push
add
daa
jmp
mov
enter
jecxz
jnp
xor
mov
in
xchg
push
outsb
add
test
pop
mov
cld
or
add
push
icebp
sub
mov
and
sbb
xchg
icebp
sbb
int3
mov
push
enter
push
call
mov
icebp
in
int3
imulb
out
add
adc
aas
push
mov
fucom
test
test
or
mov
idivl
js
mov
jo
cwtl
xchg
lods
cmp
sti
xor
pusha
jo
scas
sbb
mov
inc
cmc
adc
pushf
mov
stc
jo
mov
mov
fstpl
mov
add
inc
lret
push
mov
stos
adc
add
std
cli
cmp
loop
adcl
push
sbb
xor
js
cmp
lods
cmc
mov
add
ss
ds
shl
hlt
add
ret
data16
aas
insb
sahf
pop
or
rcr
push
or
and
pusha
loope
in
dec
sub
sub
jle
mov
in
mov
xor
mov
push
xchg
cmp
push
mov
insl
stos
out
inc
jmp
mov
andl
mov
inc
push
test
test
sbb
add
inc
ret
cmp
lret
jg
xchg
mov
ret
subb
shrl
enter
lahf
lcall
cmc
dec
xchg
shl
sub
sbb
xchg
std
orb
cmp
adc
jne
pushf
sbb
mov
inc
fidivrs
push
icebp
fs
inc
add
fbstp
out
fstpt
sbb
inc
pop
adc
lahf
or
call
cmp
fdivs
mov
push
pop
dec
stos
pop
cwtl
arpl
add
scas
in
mov
jo
lods
shll
out
int3
rclb
test
movsl
dec
mov
sbb
test
push
jnp
adc
adc
dec
push
daa
pop
sti
icebp
dec
pop
sbb
push
into
int
pop
cltd
arpl
js
mov
mov
jbe
iret
mov
imul
adc
cs
lds
mov
popf
hlt
movsl
xor
sbb
pop
xchg
and
jg
and
xchg
cli
iret
adc
mov
nop
jecxz
lahf
clc
arpl
test
ja
addr16
cmpl
mov
scas
pcmpeqb
cmp
jnp
push
add
pop
in
adc
push
cmpsb
jne
and
and
inc
push
pop
cld
cmp
call
in
add
pop
push
fimuls
mov
jmp
mov
pusha
rcl
mov
push
shlb
jae
cmp
push
fdivs
aad
jb
cwtl
xor
nop
negb
push
adc
mov
dec
fnsave
mov
cld
sub
jno
hlt
cmp
mov
cli
jge
mov
mov
sub
adc
scas
jne
push
lds
popa
adc
add
test
iret
sbb
repnz
inc
cmp
mov
scas
push
ret
ds
xlat
stc
into
ja
loopne
notl
cld
and
cli
and
outsl
cmp
ret
je
shll
or
and
cmp
cwtl
cmp
or
xlat
mov
mov
xchg
cmp
sub
push
lods
ja
jo
jp
pop
push
sbb
xor
pop
push
icebp
lcall
das
dec
popf
ja
inc
inc
fisttpll
scas
inc
pop
pusha
in
xchg
mov
mov
lea
popf
cmpl
sub
xor
inc
sbb
shlb
dec
lock
adc
bound
mov
js
sahf
xor
cmp
lahf
sub
inc
sti
loopne
push
hlt
mov
adc
in
inc
sbb
scas
in
idivb
mov
dec
into
jg
sbb
dec
ljmp
dec
push
cmp
aam
xor
mov
lods
aad
mov
lcall
mov
push
stc
je
and
mov
aad
fsubs
cmc
mov
pop
popf
shlb
ss
push
rolb
sti
stos
inc
and
in
je
lea
aas
out
adc
into
inc
or
adc
nop
lds
divb
lods
cli
and
sub
push
shrl
push
jno
cld
loope
mov
rolb
or
sub
divl
repnz
sub
je
xor
mov
lods
xchg
lea
mov
shlb
push
push
mov
hlt
mov
mov
lods
addl
fmul
jns
or
jp
pop
adc
cmpsl
aad
jmp
cmpsl
lcall
or
scas
lods
inc
adc
xor
push
ret
sbb
xor
jnp
xor
imul
lock
mov
push
cmpsl
inc
outsb
fucomp
cmp
mov
pushf
inc
divl
cmp
inc
jge
neg
loopne
aas
fs
lods
xchg
dec
inc
cmp
and
data16
fnstcw
add
icebp
and
add
mov
xor
add
mov
cmc
gs
fnstsw
setae
js
xchg
das
xchg
loopne
jbe
shl
scas
jae
pop
das
mov
inc
pushf
rol
inc
bnd
adc
shrb
out
in
mov
mov
es
dec
ret
rolb
cmp
inc
gs
fidivrs
xor
xchg
adc
sahf
or
cmpsl
rep
lret
pop
xchg
mov
cli
sub
inc
ds
mov
call
mov
fldl
pop
jle
outsb
xchg
aas
test
out
jecxz
jl
sbb
loope
push
call
mov
inc
nop
add
push
repnz
call
shr
addl
or
jp
pop
div
shl
les
out
and
repz
es
loopne
add
xchg
stos
jbe
movsb
iret
sarl
cli
or
xor
and
xchg
pop
cmp
xchg
hlt
dec
sti
orb
jp
inc
rcr
mov
bound
loopne
clc
out
inc
lock
jle
mov
into
out
jmp
pop
lods
fimull
xchg
or
mov
pop
jnp
pop
jns
lea
mov
ds
inc
test
adc
jnp
and
inc
fisubrs
push
mov
adc
int
push
pop
xor
rcr
jae
inc
cwtl
add
push
dec
mov
lret
fcoms
xor
jl
addr16
out
int3
sbb
cmp
dec
adc
jmp
jp
jmp
push
dec
enter
push
cmc
xor
pop
adc
mov
fcmovne
enter
adc
add
dec
lret
push
lods
xor
hlt
dec
pop
add
imul
fisubl
ret
jge
jge
out
dec
jae
mov
jb
adc
xor
out
shr
or
jmp
cmpsb
movsl
aaa
hlt
sbb
mov
cmp
mov
in
mov
adc
jae
rol
pop
mov
movsl
imul
adc
mov
std
in
dec
sbb
pop
xchg
dec
push
call
mov
push
sbb
jb
sbb
mov
jae
or
lds
sahf
enter
icebp
sahf
jge
es
and
jbe
out
adc
aaa
notb
loopne
jns
es
rcrb
xchg
pop
sub
xchg
in
ds
lret
jns
push
out
add
pusha
push
test
rorb
out
mov
add
hlt
gs
xor
cld
sbb
jecxz
or
loopne
add
pop
aaa
nop
cmpsl
mov
test
sbb
ficoml
sbb
sub
xor
flds
rorl
idiv
xor
and
xor
scas
inc
jae
cltd
sub
shrb
lods
mov
fldl
test
or
test
mov
push
xchg
or
cmpsb
icebp
push
insl
test
inc
fdivs
inc
xor
xor
cld
insb
or
pop
int
push
and
push
dec
dec
in
jno
pop
push
repnz
sbb
jb
btr
out
cltd
incb
and
clc
jne
mov
gs
lods
inc
scas
adc
jmp
cmpsb
lock
mov
adc
add
std
sub
add
mov
push
cs
jns
out
push
addr16
jmp
sub
aad
daa
add
jmp
jmp
adc
push
jns
dec
scas
out
fld
lds
fbstp
ds
cmp
inc
lods
inc
push
xchg
popa
mov
mov
add
fsubrs
mov
scas
scas
dec
and
neg
push
mov
sarb
lods
mov
xor
pop
popa
adc
sahf
fistl
push
xor
jmp
fsubrs
adc
adc
out
cmp
mov
les
xor
idivl
mov
add
imul
out
subl
inc
push
sbb
ror
ds
inc
inc
cmp
rorb
sar
mov
into
fistpl
sbb
mov
jecxz
adc
fldt
xor
add
mov
arpl
jle
mov
push
jmp
test
fdivrs
fdivrp
mov
lock
pop
iret
pop
push
lret
push
jne
daa
out
add
mov
push
lahf
mov
or
mov
sti
test
mov
xor
push
popf
mov
out
das
in
test
fs
push
xor
scas
mov
mov
cmc
lods
imul
or
in
jp
or
mov
pop
scas
outsb
and
cmp
lock
lcall
testl
testl
push
sarl
mov
xchg
jp
aas
ror
repnz
or
shlb
call
in
adcl
fwait
and
push
mov
test
js
clc
cwtl
test
fcoml
sub
fisubs
pop
clc
push
inc
daa
lods
inc
in
and
sbb
aaa
hlt
cmpl
xor
xchg
call
fwait
jnp
add
test
stc
add
adc
adc
adc
xchg
sahf
cmp
adc
sbb
pushl
lret
aam
mov
out
ficoms
imul
imull
jns
push
subb
and
mov
inc
mov
xchg
movsb
fisttpll
mov
je
xchg
pop
repnz
pop
negb
pop
sbb
mov
mov
cltd
std
mov
add
mov
addps
mov
mov
stos
in
fildll
pop
mov
sbb
push
sti
jp
mov
inc
fwait
xor
add
mov
test
fs
push
daa
or
lock
cmp
fcmovne
scas
shll
sbb
lea
pop
dec
faddl
shlb
pop
xor
imul
xchg
sub
in
mov
adc
das
cmp
addr16
das
add
pop
jnp
loope
scas
pop
push
outsl
and
sbbb
nop
lods
and
inc
inc
idiv
mov
int3
icebp
shlb
mov
iret
imul
sbb
mov
nop
mov
sti
movl
and
or
stos
sub
push
xchg
mov
xor
xor
imul
out
xchg
cmp
call
mov
sbb
push
mov
xchg
dec
inc
ss
adc
cmp
xorl
adc
or
into
inc
movsl
fisubrs
and
and
sti
push
pop
rcll
cmc
fnstcw
pop
jp
mov
fisubrs
sbb
inc
rcll
adc
inc
ds
or
movsb
and
sbb
fisttpll
fisubl
xchg
push
jnp
rcl
jle
sbb
out
xchg
repz
mov
lahf
jo
lret
cld
inc
mov
sbb
and
mov
xchg
bound
test
stc
fstl
and
inc
popf
pop
push
push
adc
mov
adc
mov
adc
mov
shlb
pop
push
scas
leave
cltd
sbb
adc
jo
push
shld
cmpsl
push
mov
ds
std
ss
mov
sbb
dec
push
lods
mov
test
pushf
sahf
shr
jp
sbb
mov
push
pop
sbb
popf
hlt
pop
inc
mov
lea
sbbb
mov
sbb
in
test
outsl
sti
jecxz
pusha
notl
shll
mov
lahf
adc
fdivl
pushf
cmp
fmul
lods
mov
sub
mov
push
out
push
loopne
insl
ds
jo
rcrl
loope
scas
lods
adc
loope
jno
pusha
leave
pop
int
cmc
add
sbb
das
mov
mov
scas
add
push
dec
shlb
lcall
jp
lcall
mov
cmpsb
dec
aad
in
sahf
imul
pop
mov
mov
out
in
je
xchg
fwait
jecxz
es
push
pop
pop
sbb
dec
mov
push
in
les
imul
insl
je
and
gs
sbb
stos
arpl
sub
lret
bound
cmp
test
andl
mov
loope
daa
sbb
cmp
dec
aam
pop
adc
mov
sarb
loopne
jbe
push
aad
push
mov
or
aas
mov
imul
fwait
test
or
sbb
xor
sbb
dec
cld
mov
bnd
out
int3
bound
mov
fldl
inc
movb
pop
mov
jle
ffreep
loop
xchg
sahf
fwait
sbb
dec
sbb
rcll
sub
mov
sbb
mov
shll
push
inc
insl
adc
arpl
popa
fsts
stc
pop
or
aam
mov
mov
and
int
xchg
out
cmpsb
dec
popa
sbb
out
es
gs
mov
push
cmp
scas
jg
inc
mov
mov
sub
and
jnp
xor
lahf
adc
xor
mov
lret
pop
xchg
adc
xchg
movsl
mov
loope
cmpsb
test
xchg
outsl
fs
sbb
mov
rcrb
out
jb
gs
icebp
pop
add
ljmp
or
scas
ret
or
mov
mov
mov
sbb
cmpsl
push
xlat
push
out
in
or
aam
or
dec
mov
stos
cmp
imul
pop
fwait
shrl
dec
loope
in
mov
xor
pop
mov
ss
fimuls
hlt
dec
cmp
cmp
xor
dec
and
jp
add
xchg
xchg
bound
iret
push
and
repnz
adc
or
ret
cmp
pusha
in
mov
stos
les
inc
add
bound
dec
daa
outsb
int
shlb
in
inc
and
das
mov
mov
rcrb
pop
int3
sbbl
jl
add
and
dec
scas
dec
mov
insl
xchg
sbb
xor
aam
sub
mov
dec
stc
jnp
cmpsb
sub
test
iret
jg
inc
bound
dec
push
cmp
jmp
push
std
pop
jo
in
adc
adcb
aad
xor
test
inc
fwait
pop
lcall
movsb
addr16
les
flds
pop
jno
fimuls
inc
jae
out
xchg
mov
push
mov
jp
lret
xchg
jecxz
iret
loopne
jmp
and
mov
push
jo
cmpsl
adc
cmpsl
movsl
push
cmp
sbb
push
mov
inc
or
sbb
push
pop
jle
lret
jl
mov
rorb
add
add
cmp
cwtl
cld
jb
or
xchg
daa
or
push
or
arpl
xchg
push
or
mov
and
push
popa
mov
mov
sbb
in
insl
int3
sub
js
add
fstpl
fadds
dec
fnstenv
fs
mov
and
sbb
rol
cwtd
in
xlat
aad
icebp
sti
cli
xchg
inc
int
jge
int3
je
xor
mov
push
inc
add
xchg
mov
icebp
es
fists
mov
ficoml
in
mov
xor
enter
jecxz
mov
pop
clc
std
xchg
xchg
cmp
sbb
xchg
imul
cmpsb
or
ret
xchg
jns
dec
adc
call
fcomip
bound
std
leave
ds
or
add
inc
test
cmp
loope
popf
push
dec
push
fwait
loop
sub
mov
xchg
and
sbb
mov
or
pop
push
ds
lahf
xchg
xor
pop
addr16
mov
adc
push
rolb
push
push
mov
push
xchg
or
inc
fldlg2
jbe
adc
shrb
aad
popa
shl
mov
mov
lret
jb
inc
jmp
inc
add
out
jno
mov
xchg
inc
push
fs
push
jp
pusha
push
jns
dec
inc
scas
and
xchg
xlat
orl
in
mov
jne
scas
jnp
mov
out
dec
cmp
aaa
lret
icebp
xchg
ret
loop
add
dec
roll
mov
pop
or
sub
pusha
fwait
in
std
mov
adc
pop
sbb
test
sub
dec
pop
mov
and
stos
sub
cmp
jb
das
sbb
cmp
xor
rorl
ret
xor
pop
ret
repz
dec
jne
mov
mov
sbb
sbb
jbe
and
add
jb
xor
cmp
cltd
sub
jb
jmp
icebp
leave
jbe
aam
xchg
aad
jo
clc
add
cli
jb
divl
aad
aad
inc
out
and
push
inc
xchg
mov
push
jns
cli
ucomiss
dec
ja
or
sahf
std
add
cmp
xorb
int
fmuls
aas
cmp
inc
mov
jmp
fisubrs
jo
daa
imul
sti
ljmp
lcall
out
push
inc
popa
jo
jo,pt
push
xchg
mov
or
jne
mov
out
in
aas
and
mov
jmp
rcrl
stos
mov
pop
fs
insl
ret
pusha
push
addr16
xchg
hlt
lret
loopne
jecxz
jae
lea
out
outsb
adc
add
cmp
js
jne
rcrl
in
cmpsl
and
jbe
cmp
or
jbe
fdivr
aam
push
xchg
inc
sub
out
xchg
enter
popa
xchg
mov
stos
orb
add
and
gs
lret
xor
mov
es
fcoms
cli
setge
test
xchg
mov
xor
call
mov
pop
idivl
mov
sbb
jmp
aam
aam
push
ror
fisubrs
or
dec
mov
in
mov
lret
add
or
ret
cltd
stos
mov
ss
mov
bound
push
inc
xlat
out
call
in
outsb
loopne
xor
sub
nop
fadd
idivb
mov
lahf
leave
mov
pop
xchg
and
inc
xchg
push
or
sub
or
rolb
sbb
push
mov
or
cli
das
mov
ljmp
and
in
pop
aad
mov
mov
sub
mov
roll
stc
push
stos
add
jg
pop
je,pt
addr16
in
jp
push
sub
mov
lret
out
movsb
add
insb
xor
mov
push
jb
mov
sahf
aas
xor
jge
out
mov
cmpsl
mov
sbb
xchg
or
add
lea
daa
pop
push
es
and
mov
cld
xchg
jl
icebp
sub
adc
xlat
bound
int
les
lcall
lock
xchg
adc
jecxz
dec
in
cs
loope
dec
idivl
sub
pop
xorb
movsb
loopne
popf
lea
mov
icebp
imul
int
sbb
and
pcmpeqd
imul
mov
lahf
lret
mov
addr16
test
add
jae
adc
adc
xchg
and
cmpsl
inc
mov
pop
jge
leave
mov
pop
lds
nop
pop
repnz
push
pop
aaa
fdivp
popa
fsts
push
fsts
fnstenv
out
into
out
push
xchg
out
fsub
cmp
xchg
fnstenv
mov
sub
hlt
je
xchg
or
pop
outsb
outsb
and
insl
int
xor
push
pushf
repnz
andl
pop
xchg
rclb
xlat
and
inc
sub
jns
int3
nop
popf
sti
dec
aas
mov
xchg
jbe
mov
xchg
xchg
in
push
xor
jne
push
pop
sahf
sbb
jno
inc
loopne
mov
push
mov
dec
pop
xchg
cmc
xchg
icebp
lea
rorb
sbb
aaa
and
adc
dec
cltd
ret
aaa
adc
loopne
pop
shr
das
sbb
jp
mov
or
sub
jns
pop
mov
pop
pop
sti
mov
loopne
jp
lret
loopne
push
in
ljmp
mov
pop
jmp
aaa
dec
inc
call
xchg
mov
outsb
outsl
sbb
je
lds
shll
pushf
mov
cld
xchg
lock
mov
cmpsl
push
outsb
fbstp
or
icebp
ljmp
lods
mov
sbb
pop
push
jg
mov
pop
jns
and
andl
push
test
xor
adc
push
fidivl
stos
and
stos
mov
imul
fimuls
aam
data16
stos
add
inc
dec
test
sub
cmc
push
lock
es
xor
jge
scas
jp
xchg
lock
test
adc
ret
cmc
jg
scas
test
inc
push
mov
lock
cmpsl
pusha
mov
dec
jp
testl
in
mov
test
fs
cli
lahf
out
mov
xchg
dec
ja
lods
inc
fcmove
popa
jno
xor
sub
and
or
lods
sbb
je,pn
mov
jo
lods
adc
or
xor
jmp
cmpsl
shl
call
or
jnp
push
mov
shl
dec
xchg
pop
stc
mov
dec
dec
mov
add
inc
and
add
cmp
enter
sti
daa
pop
iret
aas
or
xchg
daa
mov
adc
and
fbld
push
cwtl
mov
leave
gs
sub
add
arpl
ret
mov
pushf
sbb
push
testb
int
and
xor
leave
cld
cli
jp
xor
lea
fcom
pop
clc
adc
movl
pop
popa
mov
mov
popa
stc
in
jnp
outsl
mov
add
and
arpl
inc
ss
call
xchg
or
fists
xor
ljmp
mov
orw
nop
rorb
jo
aaa
push
mov
push
xor
cmc
sbb
outsl
lods
out
xchg
inc
aam
xchg
cmp
ds
insl
aaa
add
cmp
xchg
or
int3
xlat
loop
sbb
std
das
aaa
jg
mov
divl
daa
test
in
cmpl
rcrb
lahf
lcall
xor
dec
sbb
je
push
jae
int3
mov
dec
sbb
mov
push
insb
inc
out
add
jbe
sbb
lods
sbb
loopne
enter
pop
mov
dec
cmp
insb
movsb
jl
pop
out
out
adc
aaa
sub
xchg
aad
ja
inc
sub
inc
mov
sub
pushl
cmp
sub
cmpsb
mov
imull
pop
adc
jl
jb
and
das
fcoms
fisttps
into
stos
insb
xchg
or
loop
repz
dec
fsubl
in
shrl
sub
adc
push
and
jmp
or
adc
push
inc
icebp
stc
mov
imul
andl
pop
mov
iret
pushf
scas
sbb
dec
lcall
adc
mov
xchg
mov
adc
fwait
lods
into
jmp
or
loope
cwtl
loopne
jae
movsl
inc
es
mov
push
nop
push
aas
imul
mov
mov
jl
fbstp
idivl
addr16
mov
mov
shld
inc
outsl
mov
ja
pop
mov
pushf
xchg
push
mov
mov
and
sbb
ret
jno
mov
stos
add
outsb
or
push
aas
cmp
cmpsb
jp
push
ljmp
enter
icebp
mov
jg
or
push
adc
popa
jge
ficoml
scas
ficoms
mov
inc
arpl
cmp
rclb
cwtl
mov
fistpll
push
push
sti
mov
repz
mov
xor
or
push
gs
sahf
pop
xor
cmp
push
loopne
sub
push
sbb
mov
jp
andl
sub
pop
mov
mov
hlt
add
popa
and
sarb
jp
bound
push
xchg
cltd
adc
lahf
gs
ss
adc
mov
push
mov
jo
sbb
inc
mov
in
in
inc
gs
jns
pop
pushf
sub
ret
push
mov
test
aad
cwtl
gs
negl
mov
addl
xlat
push
and
lods
mov
repnz
pop
out
cs
inc
cwtl
loopne
and
lds
dec
cmp
adc
es
cmp
pop
dec
daa
ss
xchg
mov
scas
movsb
out
aam
mov
xlat
or
pop
push
repz
push
cwtl
dec
rcll
xor
cmpsb
sahf
shlb
pop
mov
cmp
cmp
mov
imul
in
lea
into
or
push
jbe
mov
in
xchg
mov
add
arpl
das
push
jns
cltd
push
imul
les
aad
mov
fisttpl
dec
sti
jno
inc
and
sti
inc
jmp
sub
push
js
or
pop
or
arpl
rcr
jl
sub
fdivrs
cli
rcrl
mov
dec
and
fs
and
or
xchg
imul
mov
pop
or
mov
mov
add
jecxz
out
and
xor
dec
jne
js
push
in
pop
cmp
mov
subb
dec
push
mov
push
pop
addr16
sub
push
mov
jns
lods
out
push
mov
adc
adc
cld
sbb
mov
insb
iret
dec
int
leave
ss
add
jp
call
aad
jecxz
ds
xchg
push
stc
out
fstl
cld
mov
in
mov
fbstp
outsl
jns
add
pop
cmp
dec
outsl
iret
dec
out
push
subb
stc
jns
nop
dec
fsubrl
aaa
aas
ret
je
lea
push
cmc
inc
test
and
lret
cli
clc
dec
mov
cmp
jg
insl
cltd
mov
mov
popa
inc
popf
cwtl
lods
std
int3
mov
fs
int3
xor
repnz
lods
je
push
push
xchg
test
xor
sbb
mov
inc
cmp
mov
faddl
cmpsb
js
jge
movsb
sbb
cmpsb
test
push
mov
rorl
insb
mov
pop
mov
icebp
imul
fsubrl
sub
push
ds
xorl
jge
xchg
or
aaa
fdivr
xorl
popa
or
add
dec
fucomi
adc
divb
pop
mov
inc
sbb
cmp
nop
incl
xor
mov
scas
int
test
jle
and
adc
mov
shrb
test
or
in
mov
insl
xchg
mov
cmp
int
jge
sub
cmpsb
fdivs
xchg
les
xor
mov
out
iret
or
popf
ljmp
ljmp
jecxz
sbb
movsl
aas
mov
cltd
and
into
push
fbld
les
sbb
mov
aad
mov
and
imul
mov
pop
and
mov
push
or
lahf
test
aam
cmp
aas
stos
lods
mov
je
sub
adc
jno
mov
push
mov
pop
stos
icebp
sti
xor
xchg
or
loop
inc
fdivs
ja
ror
aas
push
mov
out
fidivrl
and
mov
js
pushl
popf
movsb
das
sub
shlb
mov
pop
mov
inc
lcall
jge
in
and
add
das
and
ds
mov
cltd
mov
mov
cmp
jle
pop
stos
inc
fstpl
xchg
lods
test
mov
jb
jmp
data16
sub
cmp
sbb
dec
cmp
mov
push
fnstsw
mov
loope
popa
dec
ja
mov
and
aam
sbb
push
mov
mov
sahf
lret
dec
sbb
inc
cmpsb
push
lds
adc
inc
fmull
imul
arpl
cmpsl
sub
cmp
rorb
bound
mov
mov
mov
addr16
mov
pop
popf
inc
mov
andb
jecxz
mov
sub
pop
adc
addr16
adc
insl
xchg
or
notb
xchg
mov
inc
test
xchg
das
xlat
out
xchg
push
sub
lahf
push
clc
sub
flds
dec
mov
pop
mov
imul
mov
mov
sbb
aas
xchg
pop
gs
add
cmp
test
nop
push
fwait
les
lret
inc
cmpsb
shl
add
xchg
fsubr
cltd
insb
dec
cmpsl
outsl
mov
or
addr16
cltd
decb
in
roll
xlat
sbb
or
add
test
inc
xchg
imul
lahf
cltd
dec
and
sbb
cmp
inc
jp
inc
loop
mov
push
inc
jle
jb
bnd
xchg
ret
sarl
mov
jmp
aad
mov
xor
iret
mov
jp
dec
ret
mov
add
xchg
iret
rcrl
push
xor
imul
repnz
and
adc
jg
adc
lock
out
jp
ja
cltd
jle
pop
add
mov
pop
fs
jl
jecxz
and
cmp
adc
in
xor
call
push
push
dec
mov
and
lcall
repnz
lret
std
mov
cltd
popf
addb
mov
push
dec
mov
jge
dec
sbb
es
mov
sbb
sub
test
repz
imul
xchg
mov
stc
mov
pop
dec
ljmp
imul
popa
fmull
je
xor
iret
mov
dec
xor
jg
pop
mov
out
in
and
repnz
loop
cmp
pop
xchg
dec
stos
stos
movsb
mov
ljmp
incl
sbb
push
mov
xor
leave
and
test
imul
movsl
rcrl
andb
ret
nop
add
lods
and
lods
rcr
push
cmc
adc
jl
test
testl
jecxz
lahf
push
clc
sub
xchg
add
loopne
sbb
ja
aad
add
push
jo
or
fcom
inc
lret
push
push
mov
xor
add
pop
jg
seta
pop
mov
in
xchg
sbb
ds
fnsave
addr16
adc
jmp
hlt
mov
sub
cmpsl
shrb
popa
gs
jl
or
lea
in
push
push
mov
out
mov
lods
xor
bnd
data16
mov
or
mov
xchg
xor
scas
jo
jo
movsb
sub
in
add
mov
fstps
test
inc
sti
fdiv
jle
das
or
xor
repnz
lret
jnp
lret
sub
imul
jns
pop
test
ljmp
push
xor
jg
jecxz
sub
icebp
xor
in
sbb
mov
mov
sbb
mov
insl
jmp
mov
sub
mov
arpl
clc
jae
fildll
in
fs
in
cmpsl
lods
inc
xchg
pop
xchg
ljmp
movsl
inc
cli
xchg
daa
or
bound
sub
xchg
test
es
adc
ja
jle
mov
or
pop
lods
sbb
pop
out
push
or
xchg
pop
xchg
jnp
jnp,pn
repz
shlb
and
ret
sbb
push
dec
pop
sub
mov
cmp
das
out
mov
mov
dec
and
aas
std
and
insb
mov
es
or
push
mov
ret
rcrl
pusha
jbe
fwait
mov
push
adc
add
pop
dec
test
cld
cmp
sbb
sub
push
cmc
mov
mov
and
sub
mov
push
out
loope
inc
add
jecxz
lock
fdivl
push
testl
lods
std
and
movsb
cmpsb
mov
mov
inc
or
xor
jns
mov
inc
aad
xchg
mov
pop
fmul
test
icebp
pusha
insb
aam
jge
int3
pop
mov
push
pop
sub
shlb
xchg
push
sub
cli
orl
pop
cltd
in
pop
pop
add
in
push
mov
nop
xchg
dec
test
dec
das
pop
insl
add
pop
std
dec
mov
mulb
jae
jns
adc
lods
fwait
lock
push
repz
rclb
je
jbe
fmuls
cmp
fdivrl
push
xchg
mov
xor
dec
ret
insl
jb
cwtl
adc
inc
hlt
les
mov
and
dec
or
mov
out
mov
sbb
add
cmp
push
stos
and
lcall
dec
jns
int
push
push
fs
push
sbb
xor
shl
int3
push
in
leave
sbb
sahf
cmp
cld
sbb
inc
in
mov
aam
call
jns
and
inc
in
or
std
lods
cmp
inc
fldenv
js
cmc
and
les
xor
pop
adc
add
xchg
cmp
out
adc
fimull
sahf
movsb
dec
or
ds
cmp
adc
ficompl
test
outsl
sti
lds
mov
xor
push
mov
pop
and
cmp
les
add
ljmp
in
xchg
int3
cmp
in
imul
xchg
outsl
sahf
adc
xchg
inc
inc
jns
fistpl
xchg
sarl
icebp
sub
jae
inc
inc
in
incl
mov
inc
adc
dec
pusha
jle
lock
int3
dec
into
cmp
lahf
cmp
hlt
xor
insl
mov
adc
out
cli
adc
mov
mov
clc
xor
mov
push
sbb
fcom
mov
cmpsl
ret
jmp
pusha
js
test
add
fdivs
arpl
out
jnp
pop
in
mov
dec
ljmp
scas
inc
or
xor
lcall
aaa
repnz
xchg
dec
lods
sub
xor
fsubr
jecxz
in
es
cmp
pop
mov
das
adc
mov
xor
loop
mov
mov
jl
mov
sbb
scas
mov
ss
stc
mov
mull
mov
into
idiv
imull
jbe
pushf
repz
popa
jne
ja
loopne
out
xchg
clc
into
dec
xchg
push
sbb
pop
int3
push
jns
pop
push
ds
jg
add
rcll
mov
or
dec
push
cltd
test
push
sti
movsb
pop
push
mov
and
scas
push
aaa
mov
jns
ss
sbb
xor
cmp
xlat
pushf
das
xor
into
adc
iret
mov
xchg
mov
dec
push
shlb
int
cmpsb
dec
rcrl
les
shrl
call
push
push
xchg
jmp
inc
daa
lock
pop
xchg
loope
push
mov
xchg
dec
xor
addb
aad
fs
xchg
aas
lods
sub
add
xor
lret
jmp
mov
orl
push
mov
jp
push
ja
mov
mov
jmp
jbe
roll
lods
jge
push
leave
loopne
sti
jne
mov
rclb
inc
push
dec
jb
stc
sbb
jmp
lahf
inc
test
mov
sbb
rcl
or
push
cmpsl
fldl
jae
popf
inc
mov
mov
sbb
nop
cmp
ret
and
xchg
and
int3
gs
cltd
xchg
mov
jne
xchg
sbb
in
sub
dec
jb
push
sbb
dec
sahf
sbb
loop
js
pop
shr
xchg
adc
fcmovnu
aad
sbb
pushf
std
inc
xchg
jmp
adc
mov
adcl
sahf
test
jge
imul
add
xchg
push
lods
or
pop
jl
cmp
or
xor
nop
xchg
das
jmp
sbb
pop
sahf
dec
cmp
mov
ret
iret
inc
lret
mov
out
sbb
loope
or
push
or
stos
out
hlt
rorl
mov
imul
sub
push
test
mov
js
xor
jmp
cmp
out
test
ljmp
into
fistps
inc
xor
mov
sub
jge
add
sub
mov
loope
popa
xor
inc
sub
jno
mov
imul
sub
mov
in
addr16
clc
and
std
notl
stos
or
jecxz
in
adc
insl
or
adc
js
push
sub
in
xchg
xchg
cmp
arpl
xlat
jmp
sbb
adc
iret
lcall
test
inc
aaa
mov
push
sbb
mov
jp
jnp
xor
push
xchg
mov
sti
xor
add
popf
aas
add
inc
dec
cwtl
fs
or
icebp
add
push
mov
clc
inc
jmp
movsl
jg
sub
fs
dec
hlt
mov
xlat
pop
repnz
inc
sub
das
jo
out
ror
sbbl
sbb
jnp
mov
mov
stc
cmp
and
or
jle
mov
inc
nop
mov
mov
jge
jp
adc
lods
dec
inc
xor
vsqrtss
in
ds
xchg
sbb
and
pop
outsb
shll
test
mov
push
lods
insl
fs
rolb
mov
gs
mov
popf
lock
mov
dec
sahf
sub
js
pop
jae
pop
mov
sbb
xchg
pop
pmovmskb
stos
les
sbb
subb
stos
fdivs
test
stc
xor
insl
ficoms
cwtl
pop
icebp
pop
inc
mov
insb
in
aad
lods
mov
inc
add
arpl
ja
push
pop
cs
push
ret
outsb
mov
add
cmp
bound
push
lock
xlat
stos
ljmp
jno
popa
ret
jbe
test
cmp
xchg
loope
mov
cmpsb
dec
dec
arpl
dec
out
cmp
movsl
xor
mov
cmp
aad
notl
in
xchg
xchg
mov
rclb
inc
mov
stos
pop
fsubl
push
ret
imul
sahf
iret
mov
sub
insb
fdivrl
inc
repz
orl
dec
imul
jl
lods
and
sbb
or
pop
loopne
dec
pop
das
fs
xchg
out
dec
loopne
fimuls
push
xchg
in
sahf
add
jb
adcl
loope
dec
stos
jbe
fs
lea
or
add
and
push
pop
mov
adc
xlat
mov
clc
sub
sbb
aas
dec
jb
adc
sub
mov
inc
clc
fcmove
rol
lea
inc
mov
jb
test
movsb
cs
sub
xor
or
mov
mov
xor
and
mov
xor
mov
std
add
mov
cmp
adc
shr
or
std
jg
mov
add
add
pop
scas
mov
adc
sub
scas
call
xchg
loope
sub
xor
cmp
jbe
aam
xor
cli
aas
adc
mov
push
iret
dec
idiv
xchg
jecxz
push
pop
lds
push
cmp
lret
sbb
cmp
pop
xor
mov
and
xlat
mov
call
xchg
and
pop
mov
aas
je
shll
dec
fwait
lea
iret
cmpsl
nop
fsubrs
imul
decl
fsubrl
rorl
shl
inc
or
dec
stos
xchg
mov
xor
rclb
push
xchg
lret
pop
jnp
cmp
mov
jns
gs
pushf
rol
push
xchg
mov
jmp
cmpsl
xor
fsubrp
and
test
shll
mov
dec
fidivl
shll
daa
out
in
stos
cmp
push
imul
fdivs
out
in
inc
dec
mov
movsl
out
push
push
decw
out
adc
test
ljmp
cmp
popf
lods
pop
mov
arpl
inc
mov
roll
and
and
inc
push
pop
inc
mov
cltd
sti
inc
mov
in
and
pop
mov
xor
icebp
xchg
cld
cli
add
outsb
std
test
push
pop
and
in
fwait
xchg
mov
cld
adc
adcb
push
and
cmp
xchg
inc
xchg
ret
repz
rcr
outsl
xor
xor
fisttpl
loop
jno
xchg
mov
dec
fstps
mov
test
pusha
fsubl
fidivl
outsl
cmp
sbb
pusha
xchg
arpl
flds
xchg
leave
mov
sbb
mov
out
push
aaa
leave
lods
mov
pop
hlt
popf
and
inc
cmp
sbb
ret
loopne
out
mov
adc
movsl
lcall
sbb
adc
sti
jbe
lods
stos
push
testb
dec
mov
mov
pop
jno
daa
mov
push
in
pop
das
inc
mov
cmp
enter
hlt
mov
sbb
je
test
inc
mov
jo
es
pop
push
fidivl
push
jl
aam
test
int3
sbb
and
mov
es
pop
xor
sbb
popf
jo
sbb
ja
jno
aas
and
mov
lea
stc
mov
cli
adc
jl
repz
mov
jo
jno
or
mov
add
sub
mov
int
adc
and
imull
into
in
mov
fwait
add
jns
xor
adc
sbb
and
sbb
add
out
mov
sbb
fstl
jae
bound
xor
mov
aad
int
or
fisttpll
les
sti
sarb
or
cmpsl
lea
pop
and
inc
rolb
clc
xchg
mov
xlat
and
cmpsl
int3
push
mov
out
xchg
mov
shll
fsubrp
mov
or
das
sub
jae
lret
jg
add
sub
add
jne
popf
dec
inc
addr16
dec
insb
mov
cmpb
sub
jo
leave
pop
cmp
cmp
test
rorb
lods
or
jle
or
adc
lcall
sbb
and
cld
stos
push
addr16
push
cmp
pop
push
aas
stos
xchg
mov
and
push
mov
sbb
mov
lcall
setge
out
leave
cmc
xchg
inc
or
xchg
sarb
rclb
push
inc
mov
sbb
pop
mov
and
dec
fs
cmc
pop
lods
mov
aaa
rol
jb
sarb
jl
clc
cmp
or
scas
pop
adc
xchg
push
cs
cld
fildl
ja
out
sbb
mov
pop
stos
ja
push
in
and
into
std
cld
fwait
je
mov
dec
cwtl
nop
dec
cmp
loop
xchg
push
mov
std
int
dec
push
jp
sub
lret
add
mov
jg
inc
bnd
fidivrs
test
adc
add
leave
lods
sti
xchg
testb
in
push
fldenv
orl
call
pop
or
cltd
test
fs
gs
inc
jmp
mov
push
sbb
or
add
mov
into
fs
test
cwtl
roll
pusha
inc
lcall
pop
les
adc
or
mov
push
xchg
cmpsb
adcl
adc
out
aas
pushf
in
adc
mov
loope
das
pop
xlat
jno
cmp
dec
jnp
and
mov
mov
shll
xchg
stc
scas
aad
cmp
sub
daa
mov
inc
xorl
xchg
push
xchg
insb
and
sbb
sub
mov
lcall
pop
adc
das
jnp
aad
insb
out
scas
clc
psraw
jb
insb
imull
add
push
insl
pop
aaa
xor
in
clc
xchg
lahf
push
insb
not
js
cwtl
popf
xchg
aad
sti
insb
push
or
xorl
out
popa
ffree
lret
bound
sbb
rorl
outsb
xchg
out
loopne
fmulp
int3
addr16
ret
fisubl
int
cmp
pop
in
int3
jb
fildll
and
cwtl
jno
scas
bts
push
or
in
pop
xor
or
cmp
test
sbb
cmc
into
sti
rorl
cmp
fisubrl
push
pop
imul
sbb
adc
inc
mov
adc
aas
push
push
js
sbb
clc
xor
popf
leave
data16
pushf
jnp
jnp
mov
add
and
pop
dec
jl
xchg
and
leave
out
mov
jo
movsl
jnp
push
mov
scas
lods
xlat
and
xchg
jnp
loop
rcrb
sbb
adc
dec
and
mov
jge
adc
push
lcall
dec
push
jne
adc
pusha
push
jnp
inc
cmovae
shlb
movsb
push
outsb
rcl
nop
test
movsb
jmp
jae
repz
xchg
jnp
mov
mov
dec
mov
adc
xchg
adc
out
mov
daa
xchg
testb
in
dec
jg
ret
out
pop
jp
call
push
adc
mov
and
shll
jae
lret
div
jb
xor
enter
or
jl
mov
lea
cmp
cwtl
jmp
iret
shlb
add
fcom
pusha
lods
or
inc
mov
inc
jne
jmp
push
iret
jb
iret
leave
cmpsb
push
lods
dec
xchg
icebp
faddl
imul
push
jle
xchg
sti
push
std
negb
fdivrp
sbb
pop
cmp
movsb
inc
xor
mov
das
push
sahf
push
dec
scas
mov
adc
jmp
cltd
je
dec
leave
cmp
cmp
lods
sub
push
push
adc
xchg
pop
test
pushf
mov
jmp
add
int
sub
pop
or
lret
jle
cmc
mov
hlt
scas
inc
aaa
lds
sahf
mov
push
sbb
sub
sbb
mov
fs
out
push
sbb
cmp
fistpl
mov
pusha
mov
cmp
ficoml
inc
aas
sub
push
jg
sbb
mov
insl
cmp
jmp
loopne
fnop
and
lret
push
lods
mov
or
test
aam
and
and
adc
lret
xchg
adc
push
or
cli
movsb
aaa
scas
push
fiaddl
fistpl
mov
push
cld
enter
out
popf
ret
mov
sti
sti
pop
out
pop
mov
mov
mov
lcall
mov
sub
jns
enter
in
dec
lahf
add
add
pop
mov
sbb
cmc
pop
mov
sbb
out
rclb
arpl
inc
loop
outsl
jne
jle
and
pop
add
xchg
adcl
dec
adc
jg
repz
in
inc
int
mov
mov
scas
hlt
dec
movsl
sub
imul
ja
jnp
decl
dec
fists
xor
jle
and
jno
addb
xchg
test
dec
ds
xor
arpl
xchg
xor
push
ret
mov
aam
imul
cmp
subb
imul
dec
dec
das
push
repnz
jmp
sarl
int3
push
rorl
movsl
hlt
addr16
dec
jp
stos
sbb
pop
or
mov
lock
stc
test
lods
pop
adc
sbb
test
jg
lahf
pop
addr16
jno
jle
mov
jle
ret
insb
pop
data16
jbe
and
jb
xchg
imull
push
xor
rclb
pop
jg
cld
pusha
xchg
aas
pop
sbb
adc
dec
fdivs
je
pop
scas
xchg
enter
aam
mov
sar
xchg
jae
sahf
cli
outsl
fadd
mov
inc
dec
gs
mov
dec
pop
ret
jb
xchg
jo
add
add
push
mov
pop
int3
leave
cmp
mov
or
icebp
xchg
stc
dec
push
adc
mov
outsl
rorl
cmpsl
adc
xchg
sub
or
or
sub
inc
imul
pop
push
sub
lods
push
loope
movsb
cld
xchg
and
push
dec
mov
or
xchg
push
xchg
xor
sahf
call
mov
inc
cmp
mov
xchg
inc
mov
shll
mov
mov
gs
int3
dec
loopne
adc
lahf
xlat
and
inc
inc
sahf
lods
ja
mov
out
cmp
imul
divb
in
inc
xchg
decl
pop
and
or
or
xorb
mov
fisttps
rorl
sub
mov
pop
icebp
divl
mov
stos
push
push
testb
push
adc
rcr
xchg
movl
loopne
ret
inc
test
cmp
push
push
xor
mov
adc
push
cmp
cpuid
xor
mov
loope
in
dec
inc
and
stos
and
scas
jge
scas
adc
cmp
xor
mov
cs
js
jb
pop
or
cmpb
mov
and
pop
dec
push
inc
shlb
lock
push
cmp
rcrb
jg
sub
pop
pop
ss
cmp
jecxz
str
daa
roll
ljmp
in
out
sub
pop
scas
sub
fnstenv
lock
add
cmp
clc
cwtl
xchg
and
rcrl
jge
mov
adc
sbb
dec
mov
into
and
ljmp
push
icebp
jno
pop
shl
test
lock
arpl
lcall
aas
je
jno
sbb
out
stos
push
rcrb
movsl
xor
hlt
aaa
jo
mov
adc
test
mov
lcall
stos
mov
sbb
lret
rolb
adc
ljmp
clc
test
ja
push
jno
movsl
sub
and
fistps
add
sub
fnstcw
add
push
cmp
or
ffreep
push
mov
xchg
and
push
mov
jne
test
jl
and
pop
inc
sar
fisttpll
into
scas
jle
xor
push
cmp
xchg
andl
jno
out
pop
outsl
sub
xlat
lods
and
test
mov
pop
pop
outsl
cmp
jle
cmp
out
fwait
add
call
mov
pop
movsb
xchg
andl
cmp
sub
xlat
jg
jne
and
dec
daa
sahf
mov
sbb
int
mov
mov
xchg
jo
add
cli
stc
or
jb
test
or
push
mov
mov
mov
rcrb
mov
sbb
daa
mov
cmp
pop
xor
rcl
nop
dec
pop
sbb
mov
cmp
cwtl
sbb
push
aam
push
and
push
pop
and
in
jle
sub
inc
lods
movsl
adc
xor
lret
stc
pop
sbb
and
imulb
push
mov
or
fs
stc
icebp
jns
or
push
or
inc
fnsave
xchg
popa
pop
jle
int
aaa
pop
xchg
jo
add
shll
cmp
ljmp
arpl
je
mov
add
or
mov
pop
cltd
jmp
or
jne
lods
stos
mov
xor
outsb
gs
cmp
mov
sbb
sub
and
fs
dec
mov
dec
dec
clc
test
xor
and
pusha
add
mov
test
pop
stos
xor
popa
cmp
insb
xlat
xchg
jae
scas
sub
cmp
rcrb
clc
cmp
cli
addr16
mov
fiadds
insl
mov
dec
xchg
jb
push
pop
leave
and
iret
pop
push
mov
das
insl
mov
mov
orl
out
loope
add
and
cld
xchg
push
les
shrb
test
int
jne
out
imulb
xor
jne
push
cltd
sti
decb
aam
jno
insl
mov
dec
aad
cmp
sahf
enter
rorb
fistpl
filds
fcom
mov
pop
mov
test
push
xor
inc
cwtl
je
fwait
scas
mov
lahf
xor
mov
sbb
xchg
out
xchg
popf
or
mov
out
sbb
cwtl
push
rol
inc
xor
pop
bound
add
rcr
mov
mov
push
popf
mov
loopne
mov
xor
stos
insb
push
dec
cs
jnp
pop
leave
movsb
mov
fwait
mov
fcmovnbe
xor
push
jl
loop
daa
xrelease
adc
imul
mov
repnz
movsl
push
push
mov
mov
gs
cmpb
jns
loope
push
out
xor
xchg
out
dec
mov
mov
outsl
and
les
sahf
and
fldt
mov
xlat
ret
cmp
not
out
aaa
fisubl
repz
movsl
inc
lods
mov
mov
dec
inc
sub
insb
fmull
popf
mov
leave
dec
shl
daa
sbb
sub
in
sbb
psubd
or
scas
bound
pop
mov
fisttpll
loope
scas
pop
enter
cmpsb
mov
rep
xor
loope
scas
dec
mov
add
nop
and
push
xor
int3
pop
fwait
div
popa
jl
lahf
daa
jle
dec
and
inc
stos
out
mov
sbb
add
push
enter
outsl
testl
mov
mov
mov
out
pop
in
pop
inc
push
xor
push
add
jle,pn
xchg
push
mov
insl
popf
jge
pop
addr16
insl
aaa
pop
mov
roll
and
mov
sbb
cmpsb
jne
das
mov
push
cmp
lcall
hlt
out
imul
add
or
scas
dec
mov
cmpsb
sbb
add
andb
jp
pusha
sbb
mov
sbb
aam
shlb
pusha
jae
lods
loop
cmp
das
xchg
movsl
inc
or
imul
mov
lea
out
pop
add
mov
rcll
andb
xchg
push
aad
inc
and
jp
test
bound
inc
push
outsl
push
push
push
in
adc
pop
aaa
movsb
lods
adc
or
pop
repnz
arpl
push
jno
movsb
pushf
fstpl
rolb
pop
sbb
dec
sub
add
pop
lret
hlt
xor
fsts
test
push
in
dec
mov
outsl
scas
inc
jno
icebp
movsb
jmp
hlt
xchg
test
adc
stos
mov
xchg
addr16
pop
icebp
pop
aad
shrl
xchg
lret
addr16
mov
int
or
fimuls
mov
andb
je
push
or
gs
mov
sbb
sub
pop
pop
or
mov
addr16
cmp
lret
icebp
push
sti
insb
adc
in
js
movsb
ret
imul
mov
cmp
aam
xlat
int3
ret
lds
xchg
mov
enter
jo
pop
push
cld
xchg
mov
out
lahf
lret
mov
aaa
jg
sub
divl
pop
xchg
stos
push
dec
sub
dec
mov
xchg
loopne
scas
push
push
lret
sbb
popf
mov
pop
cld
pop
fstenv
sbb
and
into
xchg
gs
dec
cmp
jle
push
pop
sub
rolb
test
pusha
mov
push
addr16
cmc
jecxz
adc
mov
adc
pop
sbb
cmp
jne
hlt
movsl
sub
ljmp
stc
and
add
inc
jecxz
enter
and
and
ror
negb
nop
cmc
dec
repz
lahf
push
movsl
sbb
in
inc
int
shlb
cmpsl
fdivl
mov
xchg
dec
sbb
outsl
enter
subb
mov
mov
loopne
out
cmp
dec
cmp
sub
lret
sti
or
push
jo
icebp
lock
mov
mov
cmpsl
pushw
int
lcall
movsb
sarb
mov
inc
outsl
jno
jp
jne
cmp
ja
or
cli
pushf
inc
push
cmc
mov
adc
scas
insl
jecxz
sbb
and
xchg
pop
pop
push
data16
addr16
iret
mov
and
cmc
icebp
jno
push
fdivrp
pop
push
inc
bound
notb
and
sub
ret
rcrb
cld
out
cmp
scas
hlt
pop
mov
push
sahf
jb
je
fldl
rorb
cmp
call
orl
dec
and
xchg
pop
aad
fadd
test
clc
insl
popa
lock
movq
sti
push
mov
mov
addr16
sarb
mov
lcall
or
cmp
pop
jecxz
in
mov
lods
jae
xor
sub
dec
cmc
dec
push
test
loopne
cltd
int
push
add
out
dec
es
inc
jno
sbb
xchg
push
sub
pop
sbb
lods
cmp
add
int
xorb
out
inc
dec
sub
sbb
mov
loopne
fsubrs
repnz
out
leave
jecxz
fadds
lods
repnz
or
sub
xchg
fidivs
and
test
fsub
pop
push
popf
add
pop
xchg
pop
insl
ljmp
dec
dec
int3
cmp
mov
int
jmp
sahf
mov
nop
test
xchg
js
sbb
fsubs
push
xchg
or
inc
mov
lods
jg
xor
mov
xlat
push
int3
jbe
and
ficompl
pop
cmp
fstpl
movsb
lcall
or
pop
dec
lods
xchg
mov
adc
jmp
jnp
adc
loope
xchg
dec
mov
icebp
or
xchg
aam
in
jp
adc
rorb
and
imul
xlat
and
push
in
popa
push
pop
pop
xor
fildl
jae
sub
sti
cld
cmp
add
sub
rcl
adc
clc
push
in
arpl
rcrb
mov
mov
xchg
lahf
mov
shlb
add
movsl
inc
enter
nop
xchg
xchg
cmp
and
mov
adc
ljmp
push
adc
xchg
jbe
fwait
inc
or
jne
adc
xchg
leave
inc
repnz
and
inc
frstor
addl
scas
sbb
movsl
and
int3
testl
lret
xlat
mov
push
out
rcrb
mov
or
add
out
bswap
push
dec
sbb
cmp
xchg
ret
and
sti
add
or
push
jecxz
in
outsb
sub
add
cld
or
jb
ret
push
test
sub
adc
and
jg
mov
mov
jp
mov
popf
dec
and
jbe
ds
mov
sti
sbb
mov
lods
jmp
iret
mov
je
mov
mov
outsl
out
add
mov
clc
nop
sub
and
dec
mov
addr16
mov
cs
add
jg
pop
xchg
shll
das
mov
mov
pop
sbb
das
inc
sub
mov
push
jle
mov
xor
ss
mov
lret
out
aaa
xchg
sti
mov
fbld
outsl
je
mov
icebp
or
add
fwait
test
xchg
sub
std
pushf
push
fmull
loopne
mov
or
pop
xchg
test
push
adc
testl
rcl
mov
or
jl
push
pop
mov
sbb
ret
hlt
sub
jnp
ret
movsl
lods
push
test
fists
dec
jmp
inc
and
cmp
insb
rcl
and
push
mov
imul
mov
out
enter
rcll
cmp
sub
scas
mov
mov
out
popa
sub
jl
xor
mov
mov
insl
mov
std
jne
push
mov
cmp
pop
cli
into
nop
xor
adc
mov
ja
xchg
xchg
and
dec
xor
outsb
bound
add
loop
arpl
sbb
scas
in
hlt
dec
ljmp
xchg
mov
sbb
ds
add
and
pop
push
call
sub
fs
jge
inc
jmp
sarb
stc
hlt
jne
xor
fists
stc
sbb
cmp
insb
out
sub
cltd
sbb
enter
mov
in
out
fildll
mov
popa
lds
in
jmp
xor
xchg
ret
mov
add
shrl
gs
in
and
aaa
inc
push
loopne
loopne
loop
dec
repz
inc
dec
cmpsb
adc
xchg
imul
push
sub
lods
popa
adc
ud2
push
add
sbb
insb
sbb
cwtl
movl
push
outsb
mov
add
cwtl
fists
mov
movsl
push
and
sbb
fldcw
mov
clc
adc
addb
or
clc
add
ss
or
mov
pop
aad
adc
cli
das
mov
sahf
ds
xchg
shrb
cmpsl
inc
dec
lret
cmp
fistpl
jle
sub
test
lods
pop
das
jmp
add
pop
pop
sub
mov
std
divb
std
jns
sub
sub
sub
sbb
movsb
sahf
sbb
jmp
std
jae
push
sbb
add
mov
pop
sub
lods
ja
mov
inc
loop
add
cld
iret
mov
cltd
jp
sbb
push
sbb
dec
inc
in
sub
outsb
dec
out
cmp
and
mov
test
jmp
nop
mov
mov
cld
dec
stos
pop
fs
scas
cmp
lahf
mov
cmpsl
into
inc
std
negb
fwait
fs
or
sub
ret
loopne
arpl
xor
adc
push
adc
mov
push
and
dec
test
inc
loop
sub
sbb
dec
mov
daa
jae
mov
jb
sar
xorps
repnz
out
jno
pop
ss
push
pop
dec
nop
les
pop
shl
ror
outsl
cmp
sahf
into
xchg
cmp
sbb
xchg
xchg
lock
sbb
xorb
test
or
dec
jb
bound
xor
mov
outsb
cmp
lret
xor
dec
mov
ja
mov
adc
and
xor
nop
js
cmp
or
jae
arpl
dec
popf
jno
ds
sbb
lods
push
cmpl
mov
lock
iret
xchg
dec
lock
cmp
addl
pop
test
inc
jo
pop
xor
sahf
in
sbb
dec
cltd
dec
mov
shll
inc
xor
clc
bound
out
sub
ret
shll
cld
sub
rolb
out
push
outsb
mov
cmp
sbb
jmp
call
pop
sub
test
push
jae
inc
add
out
jecxz
and
push
cmp
sbb
push
daa
mov
cmp
outsl
xchg
adc
mov
pop
cli
mov
outsb
ss
mov
cmpsb
data16
ja
loope
or
push
sbb
mov
mov
inc
inc
push
inc
lock
mov
ret
aaa
dec
gs
xchg
and
jp
cmp
mov
jnp
jmp
ficompl
adc
lcall
cwtl
mov
jb
mov
lcall
inc
mov
jno
outsb
ds
xchg
mov
mov
lret
mov
mov
mov
shrb
jecxz
adc
pop
xchg
movsl
mov
and
enter
jae
push
stos
aad
or
lods
xor
mov
and
dec
sbb
cmpl
clc
testb
push
mov
mov
hlt
sti
insb
push
xchg
aaa
jle
in
pusha
jg
jbe
jb
or
sub
scas
in
stos
adc
out
mov
lock
mov
push
fcom
lock
in
in
dec
pop
mov
xchg
fnstenv
add
into
mov
ds
jae
mov
fdivl
xor
push
cmpsb
or
pop
and
imul
sub
shl
ficoms
jp
inc
dec
sub
dec
or
push
xlat
push
cltd
push
mov
addr16
imull
and
stc
fists
pushf
jbe
imul
je
pusha
xchg
jl
xor
push
push
iret
stc
and
fwait
inc
mov
rolb
cmp
gs
inc
mov
push
outsl
stc
dec
mov
mov
mov
add
pop
pop
lods
add
jmp
push
es
and
cld
sbb
or
stos
outsl
sub
pop
inc
add
mov
cs
sbb
xor
push
imulb
loopne
pop
push
jno
int
outsb
mov
mov
jg
mov
leave
ss
mov
sbb
dec
and
dec
pop
scas
in
fsubs
push
xchg
pop
cmpb
imul
je
push
sbb
dec
clc
scas
and
stos
mov
jo
xor
fs
sbbb
push
dec
fcoml
push
shll
imul
sbb
mov
dec
int3
mov
pop
pushf
xlat
ljmp
ret
mov
lods
dec
ja
push
sbb
pop
push
std
js
or
pop
and
mov
test
xchg
mov
pop
xchg
je
sbb
ret
pusha
sub
stos
out
int
and
xchg
pop
xor
ret
cmp
out
xor
sbb
and
pop
rcr
das
adcb
sbb
xchg
sub
xor
xor
dec
sub
mov
mov
xlat
xchg
addb
movsb
mov
dec
and
and
loop
pusha
mov
mov
in
jl
mov
push
sahf
or
cmp
mov
dec
xchg
push
adc
mov
outsl
mov
mov
fisttpl
or
xlat
xchg
xchg
cmp
std
jge
lds
sub
xchg
mov
xsaves
into
mov
adcl
ja
gs
jge
stc
pushf
sbb
fnsave
mov
sti
scas
push
loopne
nop
out
push
xchg
push
loopne
jb
mov
pushf
xchg
pop
idivb
inc
popa
sub
jge
lret
popf
mov
pop
dec
lret
sub
repz
lret
cmp
xor
or
out
test
add
psubsw
cmp
nop
icebp
push
sub
cmp
pop
sbb
addr16
push
loope
mov
cltd
cmp
jmp
xchg
jmp
test
in
mov
xor
pop
mov
fs
cmp
aam
adc
rorl
cli
pusha
arpl
sbb
lds
mov
push
in
mov
xor
enter
lods
sbb
sarl
xchg
test
movsl
aad
stc
xor
inc
idiv
add
dec
mov
add
bound
jg
idiv
push
push
sub
inc
pop
not
lock
inc
adc
aad
lahf
mov
into
or
pop
jmp
dec
mov
and
sub
dec
out
lds
cmp
cmc
mov
call
jne
arpl
mov
sbb
inc
dec
ficoml
inc
and
loopne
fidivs
cwtl
xchg
mov
mov
enter
mov
adc
clc
test
adc
stc
es
push
inc
push
jo
sub
dec
cmp
cmp
xchg
test
or
lods
xor
clc
or
sbb
aam
das
insl
pop
inc
bound
roll
xor
insb
rcrb
hlt
popf
sarb
and
or
inc
pop
lahf
test
dec
dec
es
push
xchg
lcall
fstps
mov
mov
fs
popa
dec
dec
push
sub
dec
mov
pop
cmp
fwait
cmp
sahf
fld
add
mov
and
into
movsb
push
inc
mov
lea
xor
push
mov
cmp
stc
mov
and
in
ja
pop
xchg
lods
hlt
dec
fildll
pop
out
push
aam
in
out
jle
mov
call
ljmp
data16
fisubrl
and
or
sahf
iret
mov
dec
inc
pop
stos
fadds
gs
mov
cmp
ja
sti
pop
out
and
push
add
je
xor
repnz
aam
xchg
bound
aas
popa
pop
scas
fcomps
int3
mov
cmpsl
fisttps
xor
add
sti
adc
fwait
cmp
repz
lcall
cmc
into
scas
rcl
jmp
js
xchg
xchg
subl
dec
nop
mov
adc
dec
jbe
push
and
or
loopne
nop
dec
dec
test
dec
lea
scas
and
int
jmp
pushf
push
movsl
out
fdivrl
es
cmp
push
sub
or
jp
movsl
lea
test
dec
add
inc
mov
hlt
or
insl
xchg
adc
rorb
mov
xorb
aam
or
jnp
pop
imul
mov
jecxz
xor
mov
mov
mov
bound
sub
lahf
push
sub
and
xchg
fdivs
cmp
xor
jecxz
test
push
nop
leave
int3
add
lds
sbb
sbb
hlt
jo
icebp
jl
jmp
sarb
and
shll
sarb
daa
cmpsl
cmp
inc
pushf
gs
ljmp
js
inc
push
add
sbb
cld
push
in
pop
push
ds
bound
out
add
imul
icebp
out
repz
pop
push
adc
clc
add
daa
jnp
push
adc
mov
in
daa
adc
popf
lds
cmp
imul
sbb
inc
sbb
push
sub
add
ret
cs
pop
outsb
pop
imul
mov
pop
fcoms
nop
sub
lock
jmp
jle
call
xchg
sahf
cmp
int
cmc
gs
test
jp
incl
pop
jae
and
pop
xchg
and
push
in
outsb
push
add
jae
inc
mov
sbb
stos
jmp
jb
jl
adcl
jb
jge
cmpsl
and
pusha
xchg
push
shlb
outsl
inc
mov
lcall
xor
mov
push
cld
cmpl
xor
and
push
mov
pop
push
cvtpi2ps
push
dec
out
pop
inc
adc
pop
pop
enter
je
sbb
scas
jbe
pop
lea
loope
push
fld
insb
lret
pushf
push
pop
lods
mov
push
rcll
add
push
cmp
mov
clc
cmp
jo
fs
dec
clc
sub
or
enter
lea
shl
dec
and
sbb
xor
and
iret
pop
aam
xlat
push
jg
fs
inc
adc
xchg
push
cmpsb
or
push
and
sahf
popa
pop
mov
dec
and
ds
clc
cmp
mov
clc
jns
mov
notl
push
addl
arpl
and
mov
add
out
addl
cs
pop
pop
push
stc
ret
xor
sbb
fisttps
dec
iret
sub
mov
clc
cmp
mov
leave
clc
mov
push
jmp
xchg
loopne
stos
cld
iret
call
dec
popf
loopne
mov
dec
test
shr
data16
repz
fdivrl
lahf
sbb
nop
push
fimuls
testb
sub
mov
xor
repnz
std
jmp
les
mov
loop
les
push
es
jnp
cli
mov
sbb
adc
int
aaa
fst
in
dec
and
fstps
pop
mov
inc
nop
adc
xorb
ja
add
call
ss
sarb
dec
add
and
jl
outsl
or
rorb
push
rolb
jle
inc
sbb
stos
out
inc
cmp
mov
pop
pop
push
mov
scas
aam
mov
jp
and
push
cmp
push
adc
push
or
or
sbb
pop
sbb
mov
xor
ret
inc
xchg
cmp
inc
push
adc
inc
enter
ja
sbb
loopne
lock
inc
lods
insl
cs
dec
xchg
call
ljmp
out
inc
fsubl
js
xor
divl
cmp
push
jno
sarl
mov
insl
ficompl
out
push
jno
pop
ja
loope
push
out
push
inc
cs
mov
or
stos
xor
push
ss
add
test
popa
addb
out
rcr
lea
cs
aad
ljmp
repz
inc
dec
ret
mov
adc
int3
les
xchg
add
pop
jecxz
xchg
fnstenv
fbstp
pop
mov
scas
leave
sbb
add
lea
out
mov
faddp
xchg
mov
mov
inc
lahf
add
cmpl
inc
ljmp
adc
out
bound
xor
sub
jae
test
lahf
shlb
push
in
test
xchg
sysenter
mov
int
xchg
xlat
loopne
outsb
idiv
mov
test
daa
cmp
mov
js
popf
fs
decb
movsl
stc
inc
xchg
aam
push
push
pop
sti
sub
test
inc
mov
aaa
loope
call
mov
imul
cmp
lods
xor
push
push
jno
xchg
negl
movsb
push
lods
out
push
scas
int3
cltd
decb
push
add
mov
sub
mov
incb
push
lcall
in
mov
in
outsl
mov
or
xchg
dec
pop
xor
or
adc
xchg
dec
inc
sbb
sbb
and
mov
mov
mov
mov
stc
ljmp
xchg
in
shll
xchg
xor
addl
mov
push
call
fdivl
pop
fimull
jle
dec
xor
or
jg
inc
clc
dec
add
xorl
lock
call
mov
dec
cmpsl
aaa
adc
jno
popf
sbb
aas
fnstsw
cmp
dec
mov
hlt
adc
outsl
fmuls
rolb
lret
into
xchg
std
jge
lcall
cmp
push
cltd
mov
sbb
adc
outsl
inc
push
dec
sbb
dec
push
nop
mov
lods
pop
cmp
incl
bound
lock
std
test
into
inc
push
push
out
fwait
es
adc
xchg
jp,pn
sub
mov
pop
test
push
nop
cmp
js
stos
jl
fldenv
jp
push
or
mov
sbb
mov
shll
pop
and
ret
adc
pop
rol
xlat
mov
aaa
pop
mov
gs
push
mov
and
mov
call
mov
xchg
insl
cmp
xchg
mov
cs
test
xchg
mov
jns
sbb
and
sarb
cli
lea
cmpsb
inc
xor
vmread
ret
push
sbb
dec
lret
arpl
insl
mov
xor
out
cmpsb
dec
jmp
js
cld
pop
popf
addr16
fildl
mov
test
fidivrl
xor
leave
or
jbe
popf
mov
sbb
in
mov
ret
imul
add
cmp
or
aaa
and
xorb
pop
movsl
loopne
int
pop
xchg
pop
pop
jge
sub
ds
add
sbb
scas
inc
mov
mov
cmp
imul
mov
cmp
sahf
xchg
push
and
hlt
or
mov
dec
dec
cltd
mov
clc
push
in
es
aad
push
ror
push
add
test
pop
clc
inc
inc
dec
cltd
lds
cltd
fldt
jnp
and
jl
imul
or
sbb
add
xor
xchg
add
add
int
cmp
sub
aas
subb
pop
cmp
push
inc
dec
cmp
bound
shlb
scas
scas
cmpsb
imul
shlb
sub
daa
mov
push
icebp
add
sub
dec
xlat
leave
mov
xor
adc
mov
xchg
sub
jle
ss
loopne
imul
jecxz
or
cmpsl
mov
ja
shll
pop
mov
pop
fisttpll
popf
and
movsb
push
cli
inc
ret
adc
stos
push
gs
dec
mov
adc
cltd
add
sub
push
scas
inc
je
mov
repz
xchg
mov
cmp
mov
sub
pusha
mov
sbb
push
push
dec
inc
push
inc
mov
push
rorb
or
adc
pop
and
enter
sub
and
jnp
push
mov
cmp
fisttps
cld
leave
scas
sub
mov
daa
add
xor
int3
mov
jno
jno
popa
push
mov
pop
in
push
ja
adc
dec
mov
push
push
sub
lods
mov
push
cli
mov
mov
insl
call
mov
sub
rcl
sub
mov
daa
pushf
mov
stc
fsubs
add
mov
sub
mov
or
mov
fs
push
pop
rorb
push
mov
cmpsb
push
sbb
test
dec
inc
push
out
test
lret
int3
cmpsb
lret
push
or
sbb
adc
loopne
cmc
or
hlt
jb
in
nop
dec
sbbb
adc
ds
mov
into
imul
xchg
rcll
mov
pop
xchg
lret
jnp
enter
hlt
push
es
xlat
inc
icebp
lret
sub
testl
cltd
loopne
out
or
repnz
aas
mov
fidivs
ss
jecxz
sub
ret
and
lods
mov
aaa
adc
xchg
mov
ss
leave
add
xor
fidivrl
dec
dec
jle
shlb
jp
pop
adc
psrlw
movsl
add
imul
mov
jp
bound
dec
jb
leave
pushf
jnp
jg
xlat
lahf
xor
stos
or
xor
mov
inc
jg
enter
lret
xor
icebp
out
outsl
mov
and
daa
add
jmp
sbb
sahf
in
xor
cltd
cmp
adc
xor
mov
rcl
inc
loopne
sub
xchg
cmp
push
dec
out
stc
mov
cmp
into
xchg
push
cmp
shlb
pop
sub
fdivrl
push
push
jo
movsb
stos
mov
dec
ljmp
sub
pop
xor
inc
push
push
fsubrl
sbb
sub
mov
clc
dec
fiaddl
sbb
movsb
adc
sbb
popa
lret
and
subl
jo
icebp
cmp
rcrl
in
sbb
push
in
ss
cmc
shll
jae
les
scas
insl
xchg
in
gs
ret
jecxz
test
in
leave
sbb
enter
add
fdivr
insb
jle
fisttps
aaa
mov
test
mov
in
sbb
xor
cmc
ja
inc
nop
jmp
inc
mov
mov
in
push
cmp
cmp
push
loope
lret
movsl
int3
push
fists
subb
inc
jl
mov
rcr
arpl
fyl2xp1
fwait
and
add
add
or
cmp
stc
pop
clc
nop
adc
sbb
pop
dec
ds
and
lock
rcr
xchg
mov
sbb
orb
int3
mov
je
sub
push
pop
cli
or
cmp
sub
jne
frstor
loop
jecxz
push
fidivl
jns
xor
fxch
sub
jge
adc
aas
xor
jecxz
jl
popl
rcrb
inc
sahf
adc
pop
fsubrs
add
rclb
mov
inc
mov
pop
into
ret
mov
inc
fisubrl
in
sub
nop
dec
fldenv
push
inc
adc
push
icebp
add
icebp
mov
xor
push
ret
lahf
pop
ljmp
fidivrs
pop
push
shrb
mov
pop
shr
mov
mov
dec
aad
pop
into
inc
add
xchg
fisttps
int3
cli
in
mov
mov
adcb
or
cmp
add
adc
lods
mov
cmp
cmp
add
leave
pop
xchg
stos
inc
addl
lcall
fs
andl
ret
sti
bound
leave
xor
popa
fisubrl
incb
rcrl
sarl
repnz
cmp
jnp
repz
inc
pop
into
push
mov
insl
inc
xor
fldl
stc
mov
movsl
add
in
mov
mov
bnd
ja
lock
adc
fists
daa
jnp
sbb
lds
fcoml
inc
imul
dec
push
mov
in
lcall
in
xor
mov
pop
cwtl
fimuls
mov
int
aaa
int
jp
xchg
in
fwait
adc
fdivrl
adc
fists
dec
int3
or
sbb
pop
adc
lret
scas
cmpsl
repnz
icebp
push
cmpsb
and
out
xrelease
test
leave
xor
dec
cmp
out
fistl
push
insl
add
pop
jl
outsb
aaa
dec
stc
adcb
arpl
imul
ret
imul
xchg
and
mov
or
inc
mov
inc
out
ss
xchg
ret
mov
in
in
outsl
data16
adc
aas
add
mov
xchg
ss
shll
jns
in
aaa
std
mov
rorl
pusha
loope
xchg
dec
cs
sub
bound
or
dec
adc
movsl
pop
adc
mov
imul
dec
or
leave
inc
inc
imul
mov
adc
and
adc
inc
jae
insb
fists
mov
push
xor
xlat
divl
xchg
or
into
outsl
mov
xor
nop
and
jnp
js
mov
jo
cmp
mov
stc
jge
mov
dec
int
cld
inc
lcall
push
pop
lods
je
dec
xchg
jl
mov
mov
cmp
mov
dec
das
adc
fstps
cmp
outsb
push
pop
and
mov
iret
xchg
mov
pop
mov
sbb
shl
dec
dec
faddp
dec
pop
cmpsl
push
fists
adc
rorb
cld
mov
mov
mov
mov
sbb
outsb
or
in
test
inc
push
lds
jno
rcrl
arpl
jbe
push
rcl
test
mov
pusha
fidivrl
adc
aaa
ss
push
dec
rorl
push
ss
in
ret
and
or
cli
mov
push
nop
and
and
pop
cmp
jne
pop
pop
mov
pop
mov
cmpl
xchg
add
jno
add
std
dec
int
enter
mov
inc
popa
mov
inc
pop
mov
mov
fadds
out
mov
mov
mov
jmp
shll
fmull
jbe
lods
xor
jb
fidivs
pop
mov
mov
sbb
cmc
adc
mov
mov
mov
mov
inc
sbb
out
pushf
push
lahf
decb
insl
repnz
fimuls
add
mov
jne
movsl
insl
ja
in
cmpb
pop
inc
ss
push
xchg
jne
in
cmp
mov
xor
into
cld
sub
call
add
xchg
or
outsb
add
dec
sub
sarb
ss
mov
int3
aas
add
push
cmpsl
mov
inc
jle
and
cmp
test
jge
xchg
into
ret
jns
hlt
in
push
imul
or
pop
fs
push
xchg
je
dec
repnz
jle
and
mov
ret
xlat
scas
insb
or
fcmovne
cmc
fs
pushf
lods
rolb
loopne
xchg
and
test
sti
leave
aam
outsb
sbb
pusha
mov
sbb
xorb
mov
insl
add
in
cmp
icebp
pop
into
pushf
lds
lahf
les
sub
pushf
outsl
inc
mov
addr16
mov
adc
sub
or
mov
jno
fisttpll
lds
int3
in
cmpsb
xchg
mov
push
inc
jns
insb
ficomps
scas
popf
in
push
inc
mov
fmuls
ret
sub
cmp
adc
add
out
std
in
sbb
lahf
repnz
push
ds
nop
jle
sub
mov
andl
rol
insb
push
xchg
and
push
mov
cmp
pop
cmp
cmovo
stos
pop
sub
sbb
outsl
imul
xchg
sub
push
inc
mov
aas
dec
enter
pop
sbb
adc
and
or
and
lds
and
jne
test
push
lcall
enter
imull
nop
sub
aas
jl
les
add
and
mov
insb
fs
ljmp
jmp
ljmp
testb
das
mov
out
jno
mov
lahf
and
sbb
xchg
cs
pop
or
shl
int3
pusha
aad
rcl
cmp
adcl
mov
gs
inc
lea
mov
jnp
pusha
mov
push
xor
push
lock
adc
daa
sbb
ss
or
icebp
pop
lret
test
mov
iret
mov
sbb
cld
cs
cmp
inc
push
dec
fiadds
mov
ret
mov
std
pop
xor
add
popa
pop
sub
xchg
or
add
nop
sti
pop
pushf
cmp
mov
jae
mov
aad
jecxz
jb
rcrl
or
or
daa
mov
jns
ret
clc
xchg
popf
push
xchg
mov
in
or
xor
cld
bound
mov
pop
ficoms
jno
gs
cli
call
stos
add
sub
add
dec
fsub
loopne
enter
mov
int
test
decl
insb
push
loop
push
push
or
and
in
adc
daa
je
js
mov
clc
cmp
mov
inc
jmp
pop
jg
idivl
jecxz
movsl
idivl
or
je
movsl
dec
push
mov
pop
mov
ficoms
push
push
add
and
lcall
mov
add
lods
mov
xchg
loopne
movsb
ja
shrb
xchg
imul
loop
mov
out
adc
sbb
lahf
push
push
clc
ds
cs
xor
xchg
lret
add
mov
fnsave
push
loop
stos
sarb
mov
cmp
pop
pushf
mov
cmp
or
popa
mov
sub
push
cmp
stos
and
ss
and
inc
cmp
ljmp
or
mov
jmp
shll
fwait
pop
inc
iret
sar
dec
inc
jnp
mov
xor
mov
inc
mov
push
adc
loopne
cmp
cmp
dec
or
xchg
cmp
jns
xchg
add
inc
aaa
inc
loope
sub
fadds
popa
cltd
je
jp
je
xchg
imul
ljmp
gs
mov
mov
xchg
mov
sub
ret
repz
mov
and
mov
pop
inc
test
mov
dec
sbb
jns
add
orb
mov
push
inc
xchg
jne
fildl
and
int
lods
in
mov
jb
dec
dec
adc
and
lods
or
fabs
adc
jo
fidivs
xchg
jo
cmpsl
aad
pushf
mulb
and
inc
cli
or
xchg
jmp
xlat
idivb
test
xchg
lock
mov
fsts
mov
jg
outsb
subb
xchg
shlb
push
stc
arpl
out
sbb
cmp
adc
jp
lret
notl
lret
cli
mov
sub
push
ja
in
popf
sub
xchg
inc
fidivrs
add
push
lods
ljmp
rclb
aas
jno
adc
ret
loop
mov
inc
repz
xchg
xor
orl
cltd
lods
add
mov
scas
jl
and
lahf
imul
mov
inc
push
into
pushf
jb
inc
mov
ss
mov
add
test
push
out
adc
sti
mov
mov
ljmp
pop
add
cmp
out
add
das
sbb
lock
jbe
or
pop
xlat
sbb
imull
and
push
aaa
mov
scas
inc
popf
mov
insl
in
lock
add
icebp
cmp
inc
mov
mov
imul
mov
jge
pop
dec
mov
pop
gs
jg
dec
insl
fimull
or
push
jno
mov
clc
push
mov
cs
dec
jb
push
pop
inc
mov
push
xchg
rclb
pop
clc
add
jle
push
adc
xor
push
cmp
push
fldenv
pop
jno
xchg
xor
dec
ljmp
sub
pop
dec
pop
sbb
rcrb
popl
add
lret
movsb
sub
inc
daa
push
call
adc
sbb
jmp
sub
mov
test
push
sbb
fldt
packssdw
push
negb
psllw
pop
jne
cmp
arpl
push
popf
pop
negl
dec
and
aam
mov
mov
dec
sbb
mov
pop
in
jb
push
cmp
jne
mov
movsb
pop
mov
or
jecxz
push
int
aad
loopne
shrb
pop
inc
and
lods
dec
push
jbe
inc
div
pop
and
and
cltd
sbb
xchg
mov
push
add
add
enter
pushl
rcrl
rorl
cmp
sub
push
mov
mov
das
adc
rorb
mov
fisubl
lcall
push
cvtps2pi
xchg
cmp
mov
lock
pop
sbb
mov
mov
lea
jge
scas
ja
dec
out
mov
scas
aaa
mov
pusha
test
pop
and
xorl
pop
jne
cmp
jg
insb
into
xchg
out
jmp
cmpsl
push
js
mov
movl
inc
fwait
and
jge
pop
adc
loope
lock
clc
test
mov
sub
jb
imul
shrb
cld
mov
outsb
js
in
lock
pop
loopne
adcb
mov
inc
or
mov
xchg
pop
sub
lods
int
ja
scas
ret
pop
repnz
mov
push
adc
daa
nop
mov
pop
fst
out
jge
pop
mov
mov
pop
push
jne
cmc
adc
test
in
dec
inc
fdivl
mov
fwait
enter
push
xchg
xchg
adc
push
sbb
mov
shrl
inc
pop
xchg
sbb
xor
mov
pop
dec
fsubrs
dec
stc
jg
fadds
js
mull
clc
pop
push
push
shll
fadds
push
aad
rcrb
ss
push
divb
mov
and
gs
mov
into
inc
jb
push
add
cmc
aas
jne
int3
lahf
sbb
rorb
fiaddl
jbe
xchg
lahf
or
lods
js
push
out
mul
rorl
enter
call
fistpll
stos
nop
out
dec
cmp
jg
xchg
pop
push
scas
inc
mov
aad
sahf
xchg
cmp
sti
or
push
fcoml
dec
mov
and
out
and
jmp
fneni(8087
mov
incl
in
sarl
ja
cmovl
int
sub
iret
jp
lcall
and
fwait
nop
pop
jae
xlat
lods
out
cmp
fst
lcall
and
ljmp
jge
add
loopne
push
aad
xcrypt-cbc
cmpsl
push
mov
cld
clc
xor
inc
jge
lea
xchg
cmp
xor
cltd
pop
cmp
add
les
popa
shl
push
ljmp
rorl
fmull
mov
mov
mov
xor
notl
addr16
and
xchg
in
nop
inc
or
adc
shlb
lcall
xchg
ret
jl
mov
mov
aaa
sub
xor
insb
popf
mov
and
lret
push
push
notl
mov
out
icebp
and
add
mov
add
stos
aaa
push
nop
or
popf
cmp
push
ds
add
sub
add
iret
scas
lahf
or
dec
es
mov
stos
aad
inc
cld
shlb
pop
clc
cmpsl
daa
jno
ret
mov
push
sbb
xor
sub
dec
mov
ljmp
data16
jp
sahf
xor
fwait
sbb
xchg
call
loope
jmp
jbe
popa
dec
cwtl
loopne
sti
dec
lahf
mov
push
add
jl
subl
daa
jp
jns
out
adc
and
outsl
fs
push
pop
mov
fstps
je
repnz
mulb
mov
dec
jmp
aad
test
repnz
xor
mov
movb
nop
imul
xor
popf
lcall
or
loope
push
ret
ljmp
pushf
pop
adc
xchg
push
ja
cmp
out
xchg
cmp
stos
mov
mov
imul
iret
stc
adc
stos
add
movsl
push
jge
std
pusha
pop
aad
fistps
incl
adc
adc
jb
int
cmp
xchg
mov
pop
imul
das
inc
dec
or
clc
pop
ja
lret
cmc
push
sub
xchg
fstps
sarb
adc
sub
push
nop
mov
adcl
mov
and
push
mov
ret
xchg
jge
add
mov
imul
pop
pop
sbb
xlat
add
or
pop
cmpsl
sbb
and
test
cmp
add
adc
sub
ret
sbb
pop
sub
popf
pop
sahf
mov
lea
xchg
jo
ds
dec
stos
ljmp
mov
xchg
sub
dec
ret
jp
scas
dec
mov
sbb
repz
ret
ljmp
mov
mov
xor
fnsave
fisubrs
mov
mov
lahf
aaa
pusha
pop
popf
movsb
lea
sti
jo
aam
or
ret
add
out
daa
dec
ret
popf
mov
fs
inc
mov
loopne
pusha
lcall
and
xchg
aam
mov
pop
hlt
push
loop
or
test
out
pop
cmc
dec
push
ds
loop
add
cmpsl
mov
fcoml
push
lds
xor
mov
clc
popa
fcompl
mov
imul
adc
in
push
mov
cs
test
pop
pop
mov
mov
sub
jbe
movsb
or
lahf
push
stos
push
pop
into
leave
gs
inc
mov
or
xor
inc
cld
int
popf
into
adc
fmuls
popf
jp
int
cwtl
mov
add
sub
addr16
cmc
nop
loopne
out
xchg
std
stos
das
jge
movsl
inc
and
outsl
sub
lret
bound
add
idivl
int3
mov
mov
ss
lea
xorb
jo
out
les
clc
sub
das
aas
dec
pop
into
sub
stos
sub
call
jns
xor
xchg
popa
mov
decl
xchg
or
xchg
jle
adc
shrl
mov
popf
aam
scas
xchg
mov
and
shll
icebp
xchg
sbb
push
jb
movsb
xor
xor
mov
xor
enter
testl
test
dec
cmpsl
push
loope
mov
fsubp
mov
iret
shrb
andl
push
pop
inc
jmp
add
loopne
add
sbbl
mov
xchg
cmc
dec
jge
cmp
mov
add
xor
in
jl
movsl
xor
inc
fwait
dec
mov
outsl
into
mov
xchg
jnp
testl
sub
jp
cmpsb
negl
cmc
int3
jns
add
aaa
push
mov
or
and
xchg
mov
cmp
xor
dec
bound
outsl
mov
cmpsl
xlat
sub
xchg
lods
lret
pop
push
mov
std
mov
cld
sbb
adc
test
imul
js
xor
out
mov
stc
dec
jno
pop
es
mov
xchg
in
jno
ret
je
mov
ss
cmpsl
fidivrl
or
ja
jbe
insb
lock
leave
es
inc
jb
xchg
cmp
in
add
mov
cld
push
jle
sbb
adc
jl
mov
stos
sub
stos
mov
dec
mov
mov
stos
stc
sub
rcl
stos
mov
pusha
loope
ret
adc
and
cltd
jg
mov
cmpsb
push
cmp
stos
or
pop
pop
rcl
jns
movq
push
test
pusha
das
adc
icebp
xor
inc
jae
lods
addb
gs
ret
pop
or
subb
sub
xor
or
mov
test
lods
adc
nop
je
repnz
push
data16
loopne
dec
imul
xchg
sti
fistpl
cwtl
aas
and
test
and
rclb
add
sub
rolb
fst
adc
rcrb
cmp
mov
mov
adc
int
add
aad
sbb
cld
gs
lods
inc
push
lcall
in
lret
add
cmpsl
mov
push
dec
xor
push
cmp
jnp
fstps
ror
sti
je
pop
out
pop
cmp
call
iret
inc
xchg
push
out
aam
cmpsl
adc
out
pushf
mov
cltd
fistps
sbb
lock
icebp
jecxz
mov
mov
push
cmp
in
jle
lcall
cmp
fbstp
cmp
in
jle
lods
pop
cltd
jbe
mov
sub
addb
pop
fsubrs
and
ljmp
sub
ret
adc
repnz
das
and
pop
inc
inc
sub
xor
data16
lea
in
sbb
push
and
ret
icebp
repz
sti
xchg
jge
jp
aas
leave
and
stc
dec
jecxz
stc
mov
out
adc
in
cmp
cmp
xchg
int3
cmp
aam
je
test
mov
jnp
stos
mov
lret
lock
mov
push
vmovd
aaa
out
xchg
xchg
ficomps
and
sub
lds
mov
pop
mov
push
mov
xchg
add
push
mov
xchg
into
stc
pop
mov
stc
int3
loop
enter
dec
ss
xchg
repnz
test
push
or
mov
adc
fisubs
inc
dec
push
inc
push
inc
dec
add
add
iret
dec
les
jge
mov
pop
popa
lock
adc
xchg
adc
into
or
cmpl
adc
push
sar
in
sbb
xor
or
sub
fistpll
sahf
cmpsb
lea
inc
mov
scas
push
sti
les
or
es
adc
mov
fwait
sub
mov
ffreep
movsb
cltd
push
or
or
jns
push
in
lret
dec
jnp
xor
sbb
jmp
xor
aas
std
xor
xchg
bound
or
insl
loop
dec
leave
insb
ds
cmp
mov
daa
mov
mov
repnz
in
dec
jmp
dec
cmp
scas
call
push
mov
sub
pop
mov
pusha
lret
jmp
jno
stos
jbe
and
dec
pop
lods
mov
movsl
lret
push
cwtl
jns
dec
dec
enter
repnz
jb
cmp
push
scas
inc
push
sub
add
addr16
out
das
in
pop
jno
or
lret
xchg
xchg
push
sbb
ret
mov
or
add
xchg
cmp
push
test
pop
scas
insb
cmpsb
push
int
push
lahf
mov
cmpsl
inc
push
jge
adc
call
jno
cmp
pop
mov
into
push
sbb
les
dec
setbe
xchg
lds
mov
mov
in
in
dec
stos
mov
jne
das
and
dec
test
aam
mov
into
fldt
dec
push
fwait
or
push
out
push
out
xchg
ljmp
lret
adc
push
test
arpl
aas
jne
cltd
loopne
push
clc
inc
aas
out
movsl
cmc
cmp
icebp
or
adc
gs
les
mov
nop
dec
mov
sbb
xor
nop
xchg
xchg
sbb
test
int3
pop
fcomip
hlt
outsb
dec
pop
into
jle
adc
and
fwait
push
mov
and
mov
mov
arpl
lds
pop
fistpll
pop
or
nop
gs
aas
sbb
jne
cmp
aas
out
sub
or
popl
inc
or
dec
out
push
neg
xchg
jns
xor
pop
push
mov
fstpl
fs
or
push
push
aas
dec
cmp
outsb
jge
into
aas
dec
pop
cmc
ja
lea
das
jecxz
aam
mov
sbb
dec
test
into
cmp
fdivl
pop
rcrb
pop
xchg
cmpsl
aam
insl
jg
mov
shl
pop
add
cltd
pop
pop
decb
repnz
outsl
dec
fbld
daa
shrb
imul
xor
in
push
pop
pop
cli
sbb
mov
pushf
dec
aaa
pushl
sbb
xchg
mov
dec
jno
fisttps
or
jle
or
roll
cs
sti
dec
daa
pop
loope
cld
pop
pop
mov
mov
or
insl
fcoml
cmp
test
in
jb
cmc
out
jno
cltd
imul
nop
stos
scas
jle
mov
cmp
aad
pop
dec
jg
lcall
and
stc
push
xchg
fdivs
push
jle
mov
daa
dec
mov
iret
test
std
test
mov
jge
cld
in
jg
mov
fisttps
jge
fnstsw
test
xchg
push
pop
jle
fimull
scas
cmp
loope
ljmp
and
cmp
imul
sub
rcl
hlt
fucomp
aas
pop
pop
mov
outsb
in
jge
dec
mov
pop
jg
mov
das
add
lahf
pushf
imul
aas
rcrb
jle
push
sub
cmp
add
jns
sub
js
imul
cmp
fsubrs
cmp
lds
jnp
dec
pop
xor
pusha
std
movsb
mov
dec
in
sbb
xor
add
in
ss
jg
jnp
cli
jg,pn
mov
push
sbb
stos
call
mov
lcall
inc
fadd
or
mov
lea
arpl
cmpl
test
rolb
inc
roll
push
icebp
int3
mov
aad
pop
xor
or
mov
call
xor
cld
in
lcall
test
adc
sbb
or
fwait
pop
je
jg
clc
adc
add
mov
subb
and
lock
or
dec
push
test
ret
cli
jp
jb
pop
gs
hlt
dec
pop
inc
out
fsubs
or
cmc
jne
loope
pop
adc
clc
mov
scas
fwait
or
int3
pop
pop
add
push
jnp
inc
add
pop
in
in
inc
pop
pop
test
xchg
dec
sbbb
and
lds
in
jo
sub
ret
mov
pop
shlb
imul
add
sub
lock
sub
adc
enter
sub
inc
test
jno
lahf
in
push
loopne
xor
dec
mov
lret
push
mov
inc
push
xor
mov
dec
cmpsl
jg
lret
and
push
das
push
mov
int
push
add
mov
jecxz
mov
cmp
jno
imul
jmp
daa
mov
dec
mov
leave
push
jg
add
shlb
mov
aad
popa
xchg
shrl
js
out
loope
out
mov
pop
mov
mov
orl
lret
scas
mov
inc
cmpsl
jl
lret
xor
pusha
mov
adc
cwtl
subb
out
adc
mov
mov
out
lret
jb
and
jns
das
or
rcll
xor
outsb
iret
loope,pn
subb
jb
lds
xchg
push
iret
aas
jbe
push
pop
and
clc
add
cmp
loopne
outsb
xchg
mov
adc
push
push
xchg
jecxz
cmp
sub
or
subb
push
and
xchg
fs
push
cmp
and
add
repz
movsb
adc
test
lret
sahf
loop
repnz
mov
inc
dec
xchg
movsb
push
dec
mov
mov
push
xchg
mov
cmp
rcl
test
xchg
cld
pop
packsswb
inc
lahf
enter
gs
or
xor
addr16
les
adc
adc
xor
mov
fsub
cmp
or
icebp
popf
jmp
fstp
testb
in
jno
push
js
fwait
mov
ret
xor
push
adc
ja
sbb
inc
cmp
and
push
rep
cmpsb
xchg
jae
ds
addb
and
aaa
jle
dec
ljmp
add
or
xor
iret
mov
mov
push
js
mov
mov
inc
sub
rcl
insl
cmp
xchg
jmp
inc
std
xchg
inc
xor
mov
mov
ljmp
pop
ret
xor
inc
push
xor
mov
pop
add
mov
punpckhbw
jl
shrl
shl
ljmp
out
fdivrl
daa
jne
xor
rolb
cmp
inc
push
rcrb
lahf
push
xchg
test
inc
cmp
jo
leave
aaa
adc
daa
je
add
adc
adcl
push
stos
mov
dec
icebp
dec
push
sub
in
inc
pop
in
addr16
insl
xor
dec
cmp
add
shl
imull
mov
das
jecxz
xchg
push
outsl
jb
mov
xchg
jb
sub
test
sti
sbb
in
inc
outsl
loop
jp
data16
mov
jecxz
sub
loopne
mov
jne
ret
nop
outsl
stos
cmpsl
loopne
xchg
js
shll
jl
fwait
dec
ficoms
fwait
aam
pushf
sbb
orb
pusha
jmp
push
pop
cwtl
inc
pusha
xchg
lods
stos
sub
and
push
pop
sbb
leave
fwait
addr16
jne
and
mov
mov
adc
je
xor
test
fstpl
xchg
fsubl
mov
mov
sub
push
jnp
push
dec
cmpl
hlt
popf
push
inc
sub
data16
xchg
inc
ja
and
xchg
mov
pop
flds
cmpsb
cld
ss
mov
xlat
mov
stos
inc
aaa
cmp
sub
push
add
ljmp
loope
adc
arpl
aaa
jns
mov
inc
or
scas
inc
and
dec
add
mov
jge
sahf
jae
add
dec
pop
adc
xchg
sbb
insb
cmpsb
dec
jo
push
repnz
or
fadd
fsubs
inc
inc
push
sub
dec
push
push
cmp
nop
leave
out
ret
push
xor
push
and
or
mov
dec
mov
sbb
fwait
add
pop
int
jle
mov
pop
push
add
or
gs
ss
jb
dec
cli
sarb
outsb
sub
adc
stos
cmp
les
inc
jnp
mov
shrl
sub
pop
add
fwait
leave
mov
and
je
aam
cltd
lahf
cmp
test
jae
fnstsw
leave
pop
cmpsb
sbb
push
pop
sahf
or
data16
adc
mov
jge
enter
out
push
scas
loopnew
clc
mov
addr16
fdivp
mov
cli
in
loop
out
pop
dec
outsb
push
fidivrs
lcall
cwtl
into
or
das
aad
pop
mov
dec
jno
cs
inc
jnp
sub
mov
xorl
xchg
call
xchg
mov
cs
shlb
leave
sbb
fadds
sbb
out
push
xor
movsb
xchg
mov
lahf
lcall
loop
rol
mov
dec
inc
and
stc
ss
xor
jbe
sbbb
sub
push
xchg
testb
cmpb
sub
mov
and
pop
adc
push
ljmp
xchg
fdivrp
cmc
sarb
leave
jne
rol
xor
jne
nop
add
jge
jns
out
aaa
inc
cld
fisttpl
xor
ss
imul
wbinvd
enter
mov
std
fs
aas
int3
ja
or
daa
shll
mov
mov
push
iret
gs
push
inc
into
sbb
subb
xor
cmp
ds
mov
pop
lea
xor
fwait
pop
rolb
pop
jmp
in
aas
mov
push
xlat
movsl
test
or
add
js
hlt
addr16
cmp
dec
test
mov
lahf
dec
aas
cmpl
cmp
mov
jecxz
int
das
cltd
cmc
clc
cmp
sbb
rcl
pop
or
in
adc
jl
pop
jg
jne
fcoms
jge
sbb
sub
jae
cltd
jp
adc
scas
aas
xchg
xchg
outsb
cmc
pushl
jae
mov
lods
adc
mov
jns
jbe
mov
hlt
inc
rorb
mov
sbb
out
or
pushf
out
hlt
add
and
xchg
scas
scas
inc
and
pop
or
mov
add
sub
cmp
pop
ret
shll
bound
jae
pop
test
mov
cltd
aas
mov
adc
mov
mov
jbe
inc
icebp
push
cli
dec
cmpsb
cmpb
mov
jmp
fidivl
hlt
frstor
cmpsb
and
xchg
sahf
int3
push
pop
xlat
dec
jo
sahf
add
data16
sbb
pop
repnz
dec
sbb
push
pop
xor
xor
push
add
dec
inc
or
adc
jnp
jg
lahf
dec
and
mov
fstpt
add
dec
lret
dec
inc
ret
stos
mov
js
call
or
loop,pt
pop
mov
inc
bound
jecxz
inc
in
cmp
xchg
inc
push
mov
test
xor
mov
sti
mov
xor
cmp
mov
insb
mov
movsb
mov
daa
lret
cld
mov
ss
pushl
adc
sahf
int
icebp
pop
hlt
cmpsl
shrl
mov
ja,pt
js
or
cmp
push
push
call
jmp
mov
lret
mov
scas
dec
and
in
mov
cmpsb
stos
mov
rcll
sub
push
push
sub
out
sub
mov
fwait
xchg
xchg
or
cmp
mov
jbe
inc
or
or
mov
shlb
in
ss
add
adc
sbb
cmp
mov
scas
mov
mov
cli
jnp
and
and
or
add
adc
ret
xchg
ljmp
clc
scas
test
fucom
lea
or
daa
inc
into
push
dec
dec
sub
push
jb
aas
sbb
xor
stos
test
adc
leave
test
mov
clc
leave
push
mov
aad
xchg
addl
push
cmp
or
mov
imul
rolb
push
scas
lahf
test
int
sbb
pop
xor
testl
stos
ret
push
fs
pop
xor
insl
movsb
pop
into
hlt
dec
lods
or
sbb
cmp
cwtl
adc
rolb
xor
or
and
jne
lods
xchg
push
js
pop
or
mov
jb
push
push
call
imul
fs
jae
mov
jae
mov
xchg
call
insl
mull
out
push
daa
cli
aad
sub
xor
fwait
xchg
jle
sbb
sahf
ja
fsubl
or
mov
pop
cmp
scas
inc
jno
mov
lcall
inc
lods
jmp
pop
out
enter
incl
mov
fcmovbe
pop
lcall
ss
add
or
movl
icebp
push
aas
or
shr
js,pn
clc
aas
pop
mov
pusha
stos
cltd
inc
cmp
test
daa
call
sub
sbb
xor
jmp
push
cwtl
mov
xor
negb
cmp
repnz
loop
inc
fstp
xchg
or
push
sbb
in
jg
jl
pop
clc
sti
popa
inc
in
pop
adc
xor
mov
das
inc
jae
push
push
push
push
pop
adc
mov
mov
sub
and
mov
pushf
sbb
lods
mov
or
lret
mov
stc
icebp
jg
mov
sarb
lods
mov
jns
popa
xlat
dec
fsubrs
in
sbb
ret
adc
xor
mov
pop
xor
push
and
mov
lea
pop
mov
subl
cwtl
cmp
jmp
insl
push
and
sbb
out
in
loopne
adc
pop
cmp
mov
mov
inc
inc
xchg
cltd
gs
out
repnz
ret
xor
sahf
push
xchg
fs
xlat
pushf
mov
test
shl
or
outsb
or
fsubr
sbb
jg
cmp
scas
jb
dec
stos
ja
lds
xchg
test
lock
push
stc
or
adc
sub
outsb
mov
leave
scas
scas
dec
cmp
lret
stc
test
add
aaa
jne
pop
rclb
movsl
aad
loopne
bound
shll
repnz
add
lret
inc
and
lock
adc
inc
or
sbb
mov
jle
add
pop
fs
popf
sbb
pop
sbb
in
mov
pop
bound
jns
out
shll
cmp
movsb
pop
pop
fcmovb
jp
mov
mov
lret
out
push
pop
cwtl
lea
fisttpl
xor
cwtl
add
xchg
in
and
jnp
sub
in
jno
test
jne
sbb
adc
bound
push
imul
adc
add
mov
or
mov
ds
or
into
je
rcrb
mov
loopne
adc
ljmp
movsl
fdivrs
movsb
js
cld
js
out
es
xchg
jl
test
dec
xchg
pop
fldt
cltd
mov
sub
adc
test
ret
cltd
subl
sub
dec
lods
mov
test
jg
fsubs
inc
inc
mov
out
outsb
adc
mov
inc
mov
jmp
dec
jg
scas
lahf
xor
sub
inc
sub
arpl
push
mov
outsl
or
xor
xchg
sub
or
xchg
cmp
pusha
push
add
cmp
je
addr16
out
fs
idiv
int
inc
imul
in
stos
mov
sarb
jp
mov
dec
push
pop
xor
imul
cmc
dec
lfs
popf
sub
push
ror
arpl
sbb
cmc
or
aad
enter
pop
das
xchg
xchg
andb
pop
mov
mov
call
repz
fdivrs
mov
lods
movsb
lods
pushf
push
repz
add
xchg
pop
call
mov
stos
and
insb
mov
scas
imul
fidivl
stos
xchg
sbb
sub
push
ret
pop
jp
scas
daa
shlb
xchg
into
stos
push
inc
cmp
rcrb
sbb
push
and
rcrb
or
int
jo
shlb
test
xchg
loopne
adc
leave
cmpl
addr16
push
and
test
cmp
xor
cmpsb
add
add
mov
mov
pop
xchg
cmp
in
jecxz
cwtl
mov
pusha
xchg
les
loop
push
aam
jecxz
popf
das
add
add
inc
push
outsl
lahf
jge
pop
xchg
outsl
mov
sbb
pop
cltd
adc
test
aam
nop
jp
mov
int3
add
sub
fcmovnbe
daa
push
push
les
cmp
cmp
fs
cmc
loopne
cmp
repz
rcl
jno
jge
int
std
or
push
stos
or
inc
pop
push
jo
cmp
fcompl
mov
shlb
ss
cmp
cmp
mov
mov
jns
rclb
lcall
jnp
xchg
inc
fwait
push
decl
mov
enter
mov
xchg
out
movsl
dec
mov
int
adc
fidivs
out
jnp
mov
scas
ret
dec
lds
sahf
inc
push
in
jae
mov
jmp
add
inc
adc
inc
lock
mov
imul
popa
nop
push
daa
arpl
mov
mov
popf
dec
and
loopne
out
adc
adc
or
repz
xchg
test
lcall
push
mov
ss
sub
push
jge
push
mull
fisubl
sti
iret
movsb
pop
and
dec
into
cmp
jbe
mov
iret
sub
mov
cmp
jne
xor
add
or
cmpsb
pop
add
rorb
lods
loope
in
jae
add
leave
imul
ficomps
xor
repz
jb
dec
imul
lods
pop
leave
mov
popf
ss
out
mov
popa
loopne
or
clc
inc
int
dec
xchg
into
std
and
mov
or
xchg
jg
push
arpl
out
inc
mov
loop
cmpsb
inc
loop
lret
mov
and
xchg
mov
gs
sahf
in
lea
loope
jp
adc
sub
or
xor
adcb
xor
sar
arpl
enter
push
fidivrl
sub
xor
test
scas
add
in
pop
insl
out
or
cmpsb
fsts
pop
pop
pushf
jno
or
daa
sbbl
fildll
xor
xchg
aas
jae
or
push
es
inc
cmp
scas
jl
ljmp
cmp
cmp
jb
dec
mov
pop
aas
xor
jle
enter
lret
outsb
aam
dec
push
stos
repnz
inc
inc
jmp
out
shrb
push
mov
imul
aaa
dec
sub
cli
jno
mov
xchg
ds
popa
mov
lret
les
mov
decb
imul
mov
mov
xchg
fidivs
mov
mov
mov
add
out
popf
add
subl
pusha
xor
cwtl
xor
mov
aad
or
cs
lods
clc
jecxz
std
sbb
cs
inc
mov
dec
rcl
ljmp
adc
lcall
xor
or
cwtl
cmpsb
jge
adc
xchg
leave
in
cmp
mov
lret
sahf
outsb
jle
and
mov
addr16
lret
lret
out
adc
sahf
adc
mov
stos
add
hlt
dec
xor
test
and
xchg
aaa
dec
lret
pop
andl
int
cmp
popa
aad
insl
paddusb
stos
or
mov
in
mov
out
mov
mov
popf
jb
pusha
cld
inc
mov
sbb
jo
xchg
nop
in
xchg
push
sahf
out
popf
sbb
icebp
aad
dec
pop
hlt
loopne
dec
iret
mov
shll
add
fucomp
loopne
insb
das
int3
xchg
dec
adc
push
ret
out
pushf
loope
or
jle
mov
jbe
loope
test
ss
push
inc
cmp
aas
sbb
cmp
add
shrb
and
or
sbb
mov
jecxz,pn
popf
mov
mov
test
daa
roll
or
sarb
add
xor
stos
lds
push
jge
mov
sbb
repnz
xchg
and
push
inc
bound
dec
out
xchg
mov
xchg
dec
and
sti
mov
movsb
orb
pop
clc
fldl
add
adc
add
sub
ds
jl
mov
lret
pop
xchg
cmp
push
repnz
stc
xor
fidivs
jb
add
loope
and
hlt
jo
sub
hlt
daa
out
jnp
mov
ficomps
inc
push
sbb
cld
sar
sbb
xor
in
testl
pop
stos
popl
sbb
jp
push
repnz
pop
xor
pop
jecxz
dec
adc
cmp
dec
mov
pop
or
lods
mov
cltd
inc
push
pop
ret
jg
bnd
jp
adc
cs
jb
mov
ss
jns
lret
popl
mov
enter
push
popa
xor
sti
insl
dec
inc
stos
iret
scas
es
and
and
pop
leave
xor
mov
xchg
cmp
pop
mov
push
jb
lea
dec
mov
imul
adc
jg
sarl
jno
xchg
jns
negb
scas
insl
jo
mov
loopne
sbb
stc
out
loopne
mov
sub
jmp
inc
jmp
test
sbb
mov
cmpb
enter
into
call
jge
mov
adc
cmpb
mov
js
push
lea
fst
sbb
int3
js
and
sub
mov
xchg
jle
sbb
sub
jge
aad
pusha
dec
jbe
fsubrl
in
inc
je
stc
fcoms
mov
inc
and
lret
mov
xchg
fistps
popf
popf
xchg
dec
sbb
ds
sbb
xor
mov
xchg
movsb
shll
xor
or
insl
jne
movsl
sub
jecxz
mov
jl
sti
cmp
mov
insb
sbb
pushl
add
mov
ss
pop
pop
aam
jo
or
pusha
cld
cmp
leave
xor
bound
or
hlt
and
out
imul
and
js
out
aad
dec
xchg
mov
push
mov
push
lahf
int3
jp
pop
shl
or
add
mov
jge
push
xchg
mov
mov
out
jmp
sub
fcmovnu
rcll
fstpl
or
sub
pop
stc
push
mov
adc
test
push
and
stos
xchg
pop
adc
mov
inc
jle
and
jno
push
mov
pushf
fstps
andb
jae
aad
jae
or
and
les
movsb
call
addr16
arpl
int
push
inc
dec
daa
mov
mov
or
cld
and
inc
ss
dec
adc
and
cmp
out
test
out
clc
dec
mov
or
xor
insl
push
popf
mov
xchg
xchg
sbb
movsb
mov
movsb
insl
loope
sbb
into
mov
mov
jbe
xchg
cli
es
ffreep
push
push
out
sbb
sbb
adc
pop
push
and
mov
mov
cmp
int3
repnz
pop
jb
imul
subps
clc
xchg
jne
sub
fdiv
or
xchg
jns
fldenv
and
movsb
scas
mov
jle
out
pop
test
hlt
loope
xorb
mov
int3
call
fistps
popa
or
loop
or
inc
into
jp
mov
bnd
lods
or
inc
cmp
pop
dec
push
pop
dec
xor
sti
and
fwait
push
jnp
mov
or
adc
dec
mov
push
std
stos
lods
inc
mov
dec
cmp
insb
fwait
adc
jmp
rorl
movsl
xchg
inc
das
cs
outsl
fwait
sbbl
loop
push
cmc
xchg
dec
fsubrs
cmp
adc
loop
mov
je
daa
sahf
scas
std
or
inc
hlt
das
stc
mov
leave
mov
jb
icebp
sub
es
ret
movsb
int
cltd
inc
xchg
adc
inc
in
dec
add
test
cwtl
ss
jns
imul
and
add
loop
mov
lock
pushf
ret
cmpsb
inc
inc
cmpsl
xor
push
xchg
lds
jl
decl
and
imul
das
cmpsl
xchg
adc
mov
cmc
mov
pushf
pop
mov
push
jns
push
sub
arpl
sbb
ja
adc
mov
or
xlat
mov
aaa
repnz
js
and
mov
pushf
push
mov
xchg
jge
dec
nop
pop
xchg
mov
push
xor
sti
mov
xchg
test
nop
cmpl
and
movsl
outsb
sbb
pop
popf
addr16
and
sbb
xchg
dec
or
xchg
jbe
mov
and
lret
jne
push
movsb
add
cli
pinsrw
aam
test
pop
scas
daa
and
xor
cld
push
test
js
add
pop
js
test
push
jecxz
push
pop
ret
sbb
clc
fwait
repnz
jecxz
push
mov
and
adc
push
cwtl
inc
notb
jecxz
adc
sahf
orb
xchg
pop
mov
fwait
in
enter
arpl
loop
mov
xor
mov
cmc
repz
leave
stc
mov
cmp
in
mov
fisubrl
push
lea
mov
and
push
add
aas
ret
inc
aam
std
or
loopne
shrl
cmp
mov
sti
test
movsl
aad
push
and
sub
jp
push
push
xchg
sbb
mov
inc
inc
les
add
mov
mov
cltd
mov
xchg
loopne
fs
aaa
lcall
xchg
stos
or
lcall
cld
cmp
sub
lods
sbb
jl
test
popa
outsl
mov
out
int3
jp
pop
bound
push
xor
jo
sahf
sub
rorb
mov
hlt
insl
fadds
xchg
ret
sub
lret
lds
adc
or
push
pop
mov
mov
pusha
or
mov
mov
sub
pop
orb
aaa
lds
loope
add
inc
in
dec
jns
stos
ljmp
ljmp
outsb
jp
lock
iret
push
mov
push
test
mov
lods
call
movsb
or
loop
movsb
fidivl
sbb
rclb
mov
cmc
inc
decb
sub
mov
sbb
jb
jl
les
push
in
imul
push
insl
push
fnsetpm(287
das
mov
xor
adc
fmulp
push
subb
jle
repz
rol
ss
adc
add
testb
mov
push
rol
xor
xchg
jnp
adc
or
or
hlt
jbe
or
sarl
adc
int3
and
mov
arpl
push
mov
inc
lods
mov
mov
imul
jnp
jge
movsb
repnz
sbb
scas
xchg
rcl
or
push
mov
xchg
mov
xor
mov
mov
loopw
aaa
aaa
and
xor
jge
in
imul
mov
repnz
adc
mov
pusha
pop
iret
dec
cwtl
inc
xchg
add
gs
mov
xor
lret
fdivl
rolb
sub
and
adc
mov
addr16
scas
xorl
fwait
pop
xchg
cmp
pop
dec
mov
cmp
push
mull
pop
pushf
adcl
xchg
jbe
les
imul
sub
dec
aam
sbb
repz
leave
cmp
test
dec
dec
mov
sub
push
inc
popa
jp
shlb
cld
xchg
pop
push
jmp
push
xchg
ret
addb
inc
xor
xor
test
xor
sub
loop
cmp
imul
mov
pop
ss
or
fs
mov
lcall
push
test
cli
addr16
sbb
and
lods
jge
test
mov
test
push
xor
fiadds
adc
cwtl
push
jle
add
mov
jp
xchg
xchg
stos
arpl
ror
mov
add
push
stc
xor
and
sub
jg
ficomps
push
popf
jl
jle
sub
push
mov
inc
lret
cmp
je
in
xor
dec
mov
inc
test
popa
add
mov
xchg
xchg
gs
shlb
sub
inc
dec
pop
fbld
int3
sti
push
sub
sbb
dec
adc
lahf
cmpb
lea
cwtl
jge
add
loop
das
mov
cmp
in
sub
mov
repnz
add
sbb
cmp
andb
cmp
fbstp
shrl
rorl
dec
jmp
loope
push
xchg
inc
cmp
popf
testl
xchg
push
jmp
inc
sbb
ficompl
pop
jle
xor
icebp
out
push
xor
dec
es
mov
adc
sbb
scas
inc
push
mov
sbbl
xchg
sti
mov
add
push
xor
lods
pop
aas
adc
push
push
xchg
mov
xchg
test
rorl
pusha
jp
cmp
jecxz
xchg
enter
adc
pop
lahf
and
sub
inc
inc
out
mov
shrl
ljmp
shl
fisubs
mov
mov
xor
dec
in
mov
mul
rep
fcoms
pusha
inc
lods
sti
mov
loope
in
pusha
xchg
int
sub
pop
dec
or
jns
ja
imul
xor
aas
arpl
pop
mov
dec
call
call
mov
add
xlat
jo
jo
push
jle
subl
xchg
sub
adc
enter
movsl
inc
lods
popf
out
adc
jecxz
daa
sti
dec
pushf
or
daa
rcr
dec
inc
enter
mov
jb
push
loopne
lcall
rcll
pop
xchg
add
mov
test
sbb
mov
movsb
pop
add
dec
fcomp
scas
xor
push
aad
add
pusha
add
pop
sbb
fwait
js
sub
pop
into
out
dec
adc
xor
mov
ljmp
pop
and
sti
jno
ss
lret
outsl
pop
imul
lds
cltd
push
pushl
mov
test
aam
mov
dec
aad
jae
jg
jne
push
sbb
pop
pushf
xor
fwait
dec
push
pushf
cwtl
iret
hlt
jns
mov
scas
std
ror
aaa
mov
dec
sbbb
xor
mov
or
arpl
in
iret
fdiv
daa
push
cmp
outsb
pusha
and
and
movsl
sub
cwtl
ja
int3
icebp
shl
mov
mov
frstor
mov
push
mov
mov
xor
mov
repnz
xchg
scas
inc
sub
mov
jge
mov
ja
jecxz
icebp
lahf
and
imul
loop
imul
push
hlt
loope
mov
sahf
imul
xchg
out
mov
and
mov
fucomi
icebp
pop
lds
add
push
lds
jb
mov
icebp
or
add
out
cld
arpl
or
mov
adc
and
cwtl
sti
lods
mull
fs
or
mov
mov
insl
lret
or
mov
shll
mov
clc
mov
mov
std
insb
jge
test
pusha
mov
cmp
rcrb
js
mov
sub
xor
daa
adc
mov
dec
pop
xchg
fs
lret
cmp
cltd
add
xor
and
mov
stos
sub
dec
test
shlb
xchg
xlat
mulb
mov
stc
rcrl
add
push
mov
lret
test
mov
jge
popa
add
or
xchg
mov
and
mov
add
mov
xchg
add
cwtl
adc
pushf
jmp
adc
mov
jmp
dec
gs
adc
aas
test
repnz
inc
or
cmp
mov
es
popa
shrl
sub
sbb
std
sub
cmp
cmpsl
bound
mov
testb
xor
pop
inc
inc
jno
or
or
jmp
les
jne
sub
pusha
test
and
pop
sbb
ljmp
fiadds
das
lret
out
push
cli
cs
test
sub
scas
or
xchg
cmp
sub
sbb
repz
sub
mov
nop
test
mov
cmp
lods
aaa
pminub
mov
sub
sti
lock
xchg
cli
cmp
lea
mov
lds
jg
pop
push
testb
sub
xchg
cmp
pop
mov
xor
es
lock
inc
jle
add
popa
jo
std
push
test
sbb
xor
dec
inc
ljmp
lcall
aas
loop
xor
push
mov
repz
mov
pop
mov
rcrl
ret
gs
mov
loopne
ret
pop
ja
daa
and
mov
xchg
dec
dec
push
jne
lea
movsl
jae
sbbl
call
push
outsl
inc
insb
test
mov
lcall
and
jp
add
inc
in
mov
add
push
jp
inc
and
aad
adcl
jp
and
sub
sbb
repz
push
aad
mov
movsl
fcoml
mov
inc
mov
in
adc
ret
lret
mov
decb
shlb
inc
rolb
xchg
dec
jle
aas
cvtpi2ps
clc
pop
das
sbb
xchg
push
outsb
test
repnz
mov
push
push
or
mov
push
fisttpll
add
cs
test
ljmp
lds
gs
loope
sub
fdivl
inc
roll
dec
lret
rcrb
add
mov
loop
mov
fnsave
push
dec
fwait
les
fcoml
pop
add
stos
pushf
sbb
and
cmc
mov
scas
pop
jle
pop
sti
cmpsb
mov
cwtl
inc
push
cmp
jecxz
and
mov
and
push
fistpll
arpl
pop
inc
imul
shrl
or
pop
xchg
pop
test
mov
mov
mov
and
pop
sbb
dec
lods
dec
sub
sub
dec
mov
mov
arpl
std
pushf
aad
aam
mov
inc
stos
iret
popa
push
cmpsb
insb
dec
out
out
add
mov
lds
inc
aam
adc
push
inc
or
adc
sbb
clc
fisttps
stc
cmp
movsb
mov
das
clc
je
pop
jge
push
lock
mov
push
push
out
lods
inc
mov
or
sbb
push
sbb
add
movsb
cmc
in
push
enter
mov
test
std
push
add
ds
mov
stos
pop
mov
xor
jp
mov
loopne
lahf
out
push
inc
loop
jb
pop
jp
lock
addr16
js
xchg
int3
enter
ja
arpl
enter
test
xchg
gs
jg,pt
dec
cld
adc
push
bound
pop
xchg
pop
jl
notb
xorl
daa
ljmp
or
fs
and
adc
xchg
and
cmc
js
int3
divb
xlat
arpl
cwtl
mov
pop
test
pop
stos
int3
sbb
and
and
sub
icebp
xchg
push
xchg
imul
xor
cmpsl
mov
aaa
into
out
mov
and
movsb
add
pop
dec
out
out
or
scas
cmc
jg
cmp
cmp
or
mov
push
xchg
jo
mov
in
mov
jno
dec
push
and
adc
push
std
sub
out
outsl
jns
push
inc
push
rcrl
ja
fldcw
scas
add
nop
xor
loopne
pushf
cmp
pushf
dec
mov
dec
test
rorl
nop
ja
addr16
icebp
les
pop
xchg
jg
sub
jge
jl
dec
jo
imul
movsl
cmp
cmp
test
ja
xor
mov
fsubl
test
inc
dec
dec
or
push
out
lds
iret
and
aad
inc
ror
shll
xchg
adc
sarl
xor
and
pushf
pushf
lods
jae
pop
mov
movsl
inc
push
or
outsb
fsubr
int
lods
in
decl
cld
addb
hlt
fdivl
outsb
lcall
test
adc
cmp
cmc
outsb
lret
xor
cltd
repz
jle,pt
addr16
cltd
jbe
popa
cli
icebp
pop
int3
xchg
outsl
ret
xor
sbb
cs
test
mov
sub
dec
cmp
psubsb
ret
cmp
push
inc
dec
sahf
aad
inc
push
xchg
imul
in
das
mov
pop
mov
sub
and
sarl
cmp
mov
cmp
negl
shll
ja
push
arpl
insb
nop
adc
in
icebp
push
adc
shrb
mov
inc
cld
adc
jmp
jge
into
adc
add
mov
divl
push
jmp
push
es
mov
sub
dec
mov
out
pop
push
stos
or
lret
test
xchg
outsb
pop
ret
push
mov
mov
adc
xor
pop
dec
int
test
jns
out
push
jb
dec
xor
test
bnd
cmp
add
push
sub
xchg
push
sbb
adc
test
fidivrs
inc
push
mov
cmp
add
cmp
jmp
stos
sub
lcall
sub
adc
sub
cmp
cmc
fmull
inc
std
pop
mov
adc
js
pop
add
test
mov
test
inc
mov
sub
xchg
jle
mov
inc
sahf
aas
pushf
mov
insl
hlt
icebp
mov
loopne
jne
cmp
or
js
out
in
mov
xor
leave
mov
leave
dec
adc
pop
mov
or
jmp
push
je
mov
loop
sarb
repz
mov
cmpsb
incb
mov
adc
sub
mov
dec
mov
int3
icebp
sub
mov
scas
sahf
lret
dec
fnsave
mov
in
sahf
jbe
outsb
scas
es
mov
out
mov
pop
aam
in
and
repz
lcall
stos
add
fadds
lods
lods
push
fisttpll
push
pusha
fisttpl
aad
fs
lds
test
lahf
jns
pop
mov
inc
jmp
cli
int3
xor
dec
movsl
jmp
and
sbb
sub
lds
or
jg
fiaddl
ficoml
aam
push
addr16
push
or
mov
cmc
mov
addb
mov
add
sub
mov
std
ja
lahf
jb
adc
lahf
pop
xchg
sub
leave
test
xchg
pop
scas
repz
cli
dec
pop
sbb
mov
testb
aaa
aaa
sti
in
and
repnz
cwtl
xor
movsl
mov
gs
add
jo
push
lods
jo
jnp
jno
jl
subl
jle
in
sub
and
xor
push
xchg
gs
shrb
push
add
stos
lret
negb
sbb
mov
lea
sti
test
bound
adc
mov
or
ljmp
cmp
test
mulb
xchg
mov
mov
iret
inc
or
mov
scas
shrl
pusha
cmp
xchg
subb
mov
je
aam
lods
aad
mov
fstpl
or
rol
shr
mov
push
inc
fildl
pop
ja
test
lret
cmp
push
aad
cs
in
mov
adc
sub
ja
or
fistl
inc
insb
call
shll
xor
xlat
not
mov
xor
outsl
adc
push
jmp
cmp
adcb
rorb
cmp
popf
sbb
leave
int3
mov
pusha
pop
xor
or
pop
rorl
in
mov
les
adc
mov
fs
lock
add
or
in
xorb
xchg
xor
push
push
jne
outsl
mov
ss
xchg
cltd
sbb
adc
adc
xor
lods
inc
loop
ja
dec
push
push
jns
test
lock
or
xchg
inc
aad
inc
lods
cld
jge
dec
repz
mov
push
cltd
and
push
insb
pop
xchg
bound
and
insl
inc
arpl
data16
adc
aaa
negl
insb
adcl
insb
push
cmpsl
xor
xor
stc
sbbl
scas
jl
cmp
mov
mov
daa
adc
int
sbb
pop
aas
push
shrb
int3
or
mov
and
cmp
inc
or
cmp
sub
fstpt
cli
rcrb
imul
mov
mov
inc
jbe
jle
mov
xor
add
pop
mov
out
stos
jae
out
jno
push
push
lods
iret
dec
lret
hlt
lods
ss
mov
add
mov
sub
dec
cli
in
push
rcl
mov
xor
call
sub
mov
ret
divb
xchg
sbb
lods
cmp
ficompl
hlt
aas
in
out
cmpsb
repnz
sbb
push
pop
ljmp
andl
inc
aas
add
and
and
es
mov
ljmp
cmp
out
xlat
addb
or
aam
dec
pop
cmp
insb
pop
cli
clc
push
rorl
xchg
shll
pop
inc
jmp
xchg
inc
sub
rcrl
nop
into
fucomp
pop
je
jnp
aas
inc
inc
cwtl
sbb
inc
lahf
lret
sbb
sbbb
push
into
nop
pop
shr
lock
loope
pusha
mov
mov
xchg
mov
mov
clc
mov
or
movups
xchg
into
mov
cmp
cmpsb
out
push
lea
in
stos
xchg
mov
gs
push
leave
xorb
xchg
adc
movsl
mov
push
mov
cmpb
imul
jns
mov
mov
adc
repnz
adc
or
cmp
roll
cld
pop
call
mov
sbb
or
aad
mov
mov
test
sarb
jo
fnstenv
jp
push
and
dec
fcomps
fwait
push
and
insb
push
mov
je
imul
ds
or
test
lret
sub
insb
mov
or
fisubs
ljmp
sbb
mov
add
push
sbbb
sti
cwtl
std
mov
js
or
mov
push
js
xor
mov
mov
jge
insl
dec
lock
pusha
dec
mov
or
sbb
pop
jge
lock
pop
out
flds
sar
ss
aam
mov
xchg
dec
cmp
sub
repz
popa
cmp
cmp
fcoms
fdivp
cmpb
cltd
jg
dec
rcrb
mov
shll
jnp
jnp
pop
dec
test
ret
mov
std
adc
imul
imul
loop
mov
lretw
pop
aas
insl
adc
lret
lds
fsubrl
lret
pop
jo
into
pop
enter
sbb
nop
ficomps
pop
loop
jo
inc
cmp
xchg
xchg
mov
cs
cmp
sub
add
and
lods
negb
adc
mov
fisttpll
pushf
stos
sbb
sub
lods
mov
ret
fnstsw
jle
aaa
xor
stos
lret
jne
gs
insb
jge
imul
call
mov
rcrb
stos
mov
imul
test
stos
mov
mov
fwait
lret
xor
push
push
sub
bnd
inc
inc
or
lcall
jecxz
sub
fimull
cmp
test
data16
fwait
cmp
mov
pusha
mov
jg
xchg
repnz
jl
fistpl
dec
pop
cmp
inc
inc
mov
push
inc
ret
sti
insb
inc
stos
cmp
add
cmp
add
pop
cld
pusha
cmp
add
mov
adc
inc
xchg
dec
insl
lods
ss
jnp
in
and
rorb
jge
sub
out
push
stos
test
imull
mov
adc
sti
and
jecxz
pushf
mov
out
inc
or
pop
dec
fisttpll
test
fists
subl
inc
jnp
dec
lcall
jno
pusha
pop
jp
and
or
sar
or
xor
enter
pushf
aad
push
pop
mov
mov
ds
sbb
adc
inc
mov
ljmp
jae
imul
gs
adc
inc
mov
ja
popf
pop
sub
sbb
rcll
jb
sub
xchg
mov
pop
xchg
mov
and
and
dec
leave
pusha
gs
xchg
call
fdiv
mov
add
lods
mov
loop
or
insl
leave
mov
outsb
inc
xor
mov
jnp
sbb
sub
pusha
add
adc
sbb
lret
dec
add
lea
insb
jo
int3
leave
mov
nop
lods
mov
fcoml
pop
xor
test
lods
dec
push
ret
lods
rcll
xchg
int3
add
cmp
mov
mov
icebp
sti
frstor
and
mov
push
idivl
jnp
jle
xchg
mov
cwtl
jl
lahf
cmp
jp
imul
pop
les
in
loope
loopne
mov
cmp
scas
je
mov
and
sbb
adcb
ret
cmpsl
mov
adc
stos
sysexit
shlb
dec
push
in
scas
add
icebp
jns
or
icebp
or
call
movsb
call
pusha
cmp
push
lahf
out
xlat
and
push
in
fidivrl
test
adcb
xor
insl
pop
adc
stos
shll
pop
jecxz
push
xor
jmp
dec
add
pushl
nop
ret
push
mov
out
add
sarb
add
xor
sbb
outsl
icebp
aad
dec
std
adc
loopne
mov
insb
fsubl
loop
pop
add
adc
inc
jno
push
jg
shll
addb
push
xchg
je
push
lcall
xchg
inc
repnz
ja
int3
cmp
es
jecxz
mov
xchg
jl
sub
mov
aas
fs
movb
sbb
out
pop
push
fnsave
and
in
shlb
into
lods
add
pop
sub
xlat
sub
push
scas
xchg
mov
pop
arpl
fprem1
adc
adc
add
bound
push
enter
mov
pop
je
fs
pushf
sahf
or
mov
pop
outsl
pop
lods
out
cmp
sbb
jbe
out
sarl
jl
aas
sub
repnz
sub
push
push
inc
sub
fiadds
mov
sub
pop
xor
or
jge
jp
dec
or
mov
mov
push
mov
jb
stos
inc
inc
lcall
or
jns
lds
pop
aam
ret
repz
rcr
xor
or
jge
lahf
insb
sub
and
scas
inc
mov
push
loopne
push
movntq
sahf
xchg
sub
pop
fisttps
xchg
cltd
loopne
fucomip
cltd
pushf
repnz
cmpsb
aam
mov
dec
insl
das
sarl
cmpsb
clc
aam
or
push
adc
adc
push
sbb
out
dec
jno
repnz
rcrl
pop
shlb
and
sbb
dec
roll
lock
push
sarl
mov
shrb
pop
sbb
aas
repz
add
sub
sbb
mov
jno
in
out
mov
ja
pusha
pop
add
lods
xchg
mov
add
cs
xlat
frstor
das
xchg
mov
ret
cmp
inc
fbstp
jae
ss
dec
lret
shlb
cmp
push
cmp
or
cld
mov
loop
add
imul
fadd
cmp
sub
stc
ja
jg
fistl
jno
popf
movsb
add
fcompl
push
das
mov
pusha
fsubrl
or
sbb
add
jbe
movsb
push
ret
rorl
cmc
fisubs
lcall
fadd
mov
lock
jb
cmp
mov
jl
scas
fs
or
sub
jbe
sbb
adc
es
jo
adc
les
decb
and
sbb
push
adc
cwtl
daa
es
fwait
add
ret
or
test
pop
jae
mov
push
mov
hlt
addr16
roll
push
test
enter
and
adc
mov
movsl
ret
jnp
or
pop
lret
xor
mov
data16
push
add
mov
pop
xlat
addr16
das
in
std
mov
mov
movsl
cwtl
test
sbb
imul
jne
test
out
jg
fdivs
fisubs
pop
ljmp
inc
clc
push
adc
test
sbb
adc
jae
aam
ficoml
jmp
jl
dec
dec
mov
mov
fiadds
iret
mov
push
jae
roll
jbe
leave
fildl
js
mov
enter
mov
dec
out
jl
scas
fs
sarl
xor
add
lcall
stos
hlt
jecxz
mov
cmp
cli
adc
mov
orl
inc
stc
dec
mov
imul
fnstsw
dec
in
sub
mov
aaa
in
insl
sbb
jb
push
clc
add
xor
in
mov
std
popf
pop
aad
push
fs
aas
mov
mov
outsl
inc
pop
cmp
cltd
in
test
aam
sub
fs
in
jg
cmp
sbb
mov
and
pop
inc
jge
pop
int3
pop
xchg
mov
jns
lahf
call
pop
sbb
in
cmp
cmp
sub
movsb
cld
cmpsl
pop
cmpsb
pusha
add
mov
ret
add
popf
fdivs
pusha
cmp
inc
out
adc
ficompl
mov
movsb
cmc
je
lods
sbb
es
cmpl
adcl
test
cmp
subl
movsl
adcb
daa
mov
dec
mov
mov
in
jo
in
jns
cmpsl
rcr
inc
leave
cmp
ljmp
sub
jmp
cmpsl
out
out
out
pop
icebp
fs
leave
adc
clc
fs
aas
mov
cmp
pop
or
inc
gs
scas
rcrb
push
xor
out
push
sub
add
pop
xchg
stc
push
repnz
or
in
jge
jge
push
aaa
insl
mov
xchg
div
add
pushf
dec
push
shll
enter
daa
dec
sbb
lahf
xchg
insb
out
xchg
push
iret
mov
xlat
pop
pop
enter
scas
repnz
sahf
repz
leave
jbe
jnp
hlt
repnz
out
arpl
push
outsl
inc
dec
and
aam
push
in
rolb
mov
push
xchg
call
mov
jp
mov
test
popa
rcrb
jae
mov
fisttps
mov
push
cmpl
fsubrs
xor
dec
mov
mov
lds
call
add
outsl
jo
xchg
xchg
pop
and
jmp
and
setno
mov
std
scas
adc
rcll
sarl
lock
popa
and
ds
push
jnp
in
inc
sahf
mov
jle
cld
stc
mov
fisubrl
cld
mov
xchg
mov
mov
popf
scas
mov
cli
cltd
enter
repz
adc
sahf
es
xor
fdivs
mov
repz
mov
arpl
scas
cmp
cmp
adc
lods
sbb
int3
repz
shlb
dec
outsb
xorb
idivb
xchg
insb
pop
ret
or
enter
cmp
fucomp
enter
sbb
movl
jle
or
dec
call
mov
cmp
add
lret
jne
sbb
adc
pusha
insb
sub
lods
lds
jp
pushf
push
ss
sbb
cmp
out
mov
pop
ja
sahf
or
cmp
mov
push
sbb
jb
sbb
jnp
ret
push
test
pushf
sub
fwait
xlat
xchg
dec
insl
jne
pop
mov
pop
pop
sbb
into
jo
scas
mov
push
xchg
adcb
dec
add
add
dec
in
test
or
pop
pshufw
lcall
push
aaa
sbb
xor
mov
pop
mov
gs
cmpsb
icebp
adc
cltd
push
pop
jnp
xchg
push
and
lods
fidivrs
inc
fwait
cmpsb
push
loope
lea
xchg
sbb
lods
cmpsl
mov
jp
sub
jbe
xor
sub
xchg
cmp
xchg
push
push
xchg
jmp
pop
loope
pop
add
xor
jnp
ret
ret
insl
jbe
sahf
rolb
mov
xchg
xchg
xor
push
jne
xchg
lret
in
aas
push
sbb
aam
push
bsf
sbbb
addr16
dec
and
imul
sub
sahf
inc
fists
in
mov
adc
into
fldl
and
test
mov
inc
xor
jl
xchg
jns
or
jmp
lahf
or
aaa
push
adc
push
jne
jmp
icebp
incb
popf
cmpsb
mov
adc
xor
sti
jne
stos
sub
mov
sbb
inc
scas
push
sub
pusha
jmp
in
std
mov
sahf
or
mov
jo
lds
xchg
dec
or
mov
pop
jb
into
or
arpl
jge
loope
mov
andl
mov
jo
cmp
ss
push
mov
mov
pop
push
xor
popa
inc
xchg
lahf
dec
inc
add
jg
xor
aas
shrb
jg
orl
xor
inc
pop
pop
sbb
test
push
jne
dec
movl
ds
sub
shl
gs
xorb
pop
push
and
cmpsb
xchg
out
in
or
push
scas
adc
xchg
ss
push
cwtl
shl
gs
daa
xchg
push
mov
or
adc
adc
adcb
jmp
arpl
lods
jge
cmp
cwtl
lock
int
adc
dec
lea
aaa
popf
fwait
ja
or
insl
pop
arpl
add
mov
movsb
in
mov
outsb
fnstcw
stos
lahf
scas
inc
nop
iret
pushf
add
pop
inc
rclb
in
icebp
rcrb
stc
das
jo
scas
arpl
push
or
in
xchg
jg
jle
fnsave
clc
std
loope
push
loope
pop
shrl
imul
lock
loop
or
imulb
rcrb
jb
aaa
stos
out
movsb
mov
fidivs
mov
in
xchg
loopne
push
lods
test
mov
dec
or
loop
sahf
arpl
test
insb
adc
pop
fwait
mov
stos
jb
mov
mov
iret
mov
push
lret
in
jbe
movsl
mov
xchg
xchg
ret
add
repz
in
adc
xor
mov
sbb
push
mov
iret
in
sub
in
xchg
js
int3
stc
inc
or
and
mov
push
xchg
ss
pop
bound
sub
in
pop
inc
xchg
aas
and
sti
insb
out
cltd
mov
xor
test
loopne
cmp
pusha
adc
or
or
mov
sub
mov
lods
xor
pop
xchg
cltd
jnp
inc
cmp
cmp
loopne
bound
scas
push
aad
pop
test
rcl
or
sqrtpd
push
out
xor
or
fsubrs
nop
icebp
icebp
xchg
sbb
inc
gs
pop
sahf
pop
cmpl
call
add
xchg
xor
add
push
cmpsb
imul
pop
cli
inc
mov
shl
outsl
inc
push
xchg
inc
and
jmp
int
iret
ret
ficompl
jo
sub
adc
dec
cmp
arpl
sub
xchg
xorb
jae
mov
sbb
mov
rcr
cs
rol
les
fs
xchg
imul
icebp
dec
jns
xor
adc
enter
scas
mov
mov
xor
cmovae
add
adc
pop
jmp
cld
out
and
aam
leave
jecxz
xor
es
pop
aaa
rcll
and
aas
movb
scas
gs
push
push
dec
sbb
out
mov
and
test
pop
jnp
jne
inc
stos
fistpll
fstl
and
mov
popa
mull
sub
pop
dec
or
jns
in
push
push
and
sub
enter
fwait
ds
les
or
xor
xorb
ljmp
xchg
mov
leave
out
lcall
in
les
lret
cmpb
adc
sahf
ds
add
es
sbb
popa
scas
lea
insb
movsl
lret
testl
call
iret
popa
cmp
push
sub
dec
rcr
adc
out
cmp
xor
in
mov
mov
inc
adc
push
add
dec
loope
ljmp
xor
int3
adc
lcall
lcall
push
xor
outsl
inc
movsl
push
push
jae
test
in
cmp
psrlw
test
enter
into
push
jl
jge
fwait
xor
aas
inc
inc
push
jle
inc
orb
iret
and
sub
aam
xlat
sbb
adc
xor
xchg
lcall
mov
add
in
pop
add
mov
cmp
pop
ficoml
in
mov
arpl
sub
dec
hlt
cmp
jae
mov
mov
int
aad
cltd
outsb
lea
cmpsb
cmp
pop
and
movl
add
xor
cmpsb
stc
clc
xchg
xor
mov
in
adc
cmp
lods
es
push
cmp
xor
cmp
mov
ss
or
orl
dec
dec
js
sahf
lods
shl
mov
clc
add
lods
lea
mov
ret
adc
outsl
dec
jl
scas
sbb
fnsave
data16
daa
and
jns
sbb
or
dec
cli
sbb
lcall
movsb
xchg
movsb
add
in
push
jb
icebp
inc
imulb
rolb
cmp
movsb
or
sti
decb
nop
stos
inc
mov
xor
js
arpl
cmp
insl
xchg
fs
or
imul
or
pop
mov
out
xor
aam
test
into
inc
xor
jecxz
lods
adc
pop
mov
or
sbbb
xchg
add
lahf
pusha
push
sti
xchg
xchg
and
shl
cwtl
test
out
shll
ret
cs
jno
pop
xchg
jp,pt
int
push
mov
sbb
je
dec
and
xor
ret
xchg
das
dec
push
jbe
adc
pushf
in
fsubrs
jecxz
lods
sahf
cld
sub
or
and
xor
and
xchg
out
daa
xlat
call
das
sbb
pop
fwait
test
push
int
jae
sarl
aas
ja
xchg
nop
pop
adc
out
fs
ljmp
pop
scas
push
pushf
and
popa
add
pop
jns
push
push
pop
jne
ret
pop
adc
imul
rorl
out
xor
lods
jb
scas
out
lods
xor
jb
or
sbb
aaa
sbb
cmp
lods
sbbb
outsl
in
subl
cs
cltd
std
pusha
popa
add
pop
pcmpgtw
jp
pushf
sub
xor
push
mov
mov
push
pop
aaa
pop
call
ret
arpl
push
ficoms
fsts
mov
lahf
ja
stos
lret
mov
out
push
frstor
sbb
dec
cltd
add
or
movsb
cs
and
iret
nop
xor
std
les
flds
and
push
scas
pop
sbb
dec
jae
mov
push
push
scas
push
loope
test
mov
mov
ds
sub
cltd
cmpsl
data16
mov
testb
mov
mov
fcoms
lret
hlt
push
pop
mov
xorl
pop
mov
call
data16
jne
xor
fldt
sub
pusha
xor
and
lock
loopne
jle
ret
inc
ret
fucomip
pop
adcb
mov
jno
push
mov
pop
movsb
xchg
dec
gs
mov
jg
jno
add
adcl
cs
bound
addl
repnz
jnp
sti
insb
sbb
in
xor
fsubrl
xchg
aaa
xlat
adc
push
scas
call
inc
pop
jnp
sbb
sbb
scas
xlat
mov
push
xor
fwait
push
hlt
mov
xchg
call
cmp
scas
in
push
sbbb
aas
mov
imul
xor
adc
and
loopne
loop
add
ds
pop
or
xor
sarl
lds
lods
push
js
es
push
mov
mov
cmp
shl
jmp
pop
jge
cmp
ret
dec
movl
mov
jge
jb
mov
and
xor
sarb
xchg
push
pop
aas
out
inc
cmp
dec
push
mov
jae
lret
das
leave
loop
jno
mov
jne
jp
in
mov
pop
add
sub
jecxz
orl
sbb
push
sub
mov
adc
int3
stos
mov
pop
and
repz
add
icebp
repz
bound
roll
repnz
popa
in
movsl
xchg
cmp
rol
adc
xor
lcall
inc
inc
sbb
lds
out
int3
or
add
cmp
popf
stc
push
sbb
lea
in
imul
lock
xchg
jle
mov
sbb
dec
dec
mov
subl
pop
in
mov
out
mov
test
fwait
xchg
jb
out
and
outsb
add
inc
and
mov
rcl
aad
flds
dec
rcrb
pop
sahf
in
test
sub
cmp
adc
jo
adc
popa
pop
pop
adc
jecxz
mov
mov
mov
adc
insb
sbb
cmpsl
addr16
inc
xchg
and
mov
mov
test
add
push
jno
pop
outsl
xchg
icebp
sub
cltd
rcl
adc
pop
out
and
call
sub
pop
inc
in
daa
das
lcall
jb
xor
push
mov
cli
dec
inc
push
jmp
xlat
cltd
pop
mov
sub
outsb
mov
nop
loope
sub
pop
xor
ret
pop
cmpsl
dec
subb
clc
cwtl
sti
xor
and
fstps
pop
stc
add
jecxz
and
jno
arpl
adc
pop
cltd
aas
pop
mov
inc
pop
add
xchg
pop
fbld
or
enter
xor
popf
mov
mov
inc
dec
arpl
xchg
pop
mov
ret
in
inc
add
jle
sarb
mov
das
mov
cmc
pop
or
lret
mov
pop
jnp
shll
sbb
adc
sub
loopne
and
popf
mov
xchg
xor
mov
pusha
enter
xor
cmc
out
mov
adc
add
lret
insb
cld
inc
xchg
mov
cmp
fucomi
ret
jns
iret
jns
into
push
cmp
fcmovne
push
mov
popf
inc
add
cmpb
pusha
push
test
pop
inc
imul
stos
cmp
lcall
mov
lcall
out
pop
std
cmp
xor
xor
mov
xchg
rcr
test
mov
sarl
imul
arpl
int3
lahf
mov
mov
lods
jg
dec
nop
sbb
mov
inc
insl
leave
popf
div
mov
or
jnp
inc
xor
orl
icebp
fs
adc
sbbb
or
sbb
adc
sub
fs
jle
ss
jmp
ret
mov
inc
in
in
test
ljmp
jl
mov
or
test
sbb
sub
iret
sarw
test
xor
push
jbe
je
adc
mov
adc
hlt
ljmp
iret
loop
pushf
add
test
mov
test
add
fstpt
cmpsb
fisubrs
movsb
inc
in
jns
adc
push
in
movsl
push
jnp
pop
enter
inc
mov
xchg
fstpl
cmpsl
mov
mov
jmp
xchg
out
add
popf
push
cmpsb
stos
sub
in
ds
adc
adc
enter
outsl
mov
out
or
movsb
loop
loopne
or
sub
dec
test
rcrl
jnp
lock
popf
fldl
sub
loop
inc
sub
xchg
fisubrl
mov
and
mov
adc
js
sbb
sbb
dec
jp
xor
or
gs
nop
pusha
xchg
sar
dec
pop
leave
cld
jbe
mov
mov
fidivl
ret
jno
movsl
std
iret
and
data16
cltd
subl
imul
imul
sub
imul
mov
cltd
lods
push
add
sar
mov
jae
xor
push
lea
shrb
mov
mov
xor
adc
add
jno
in
dec
int
dec
iret
sub
scas
int
data16
xor
and
mov
or
xor
jno
push
jo
mov
les
les
test
xor
call
cwtl
fnstcw
xor
mov
cmpsb
in
lret
pusha
stos
fimull
sbb
cld
jbe
dec
repnz
out
push
loope
testb
std
test
push
inc
popf
mov
icebp
sbb
dec
ja
popa
sub
mov
adc
inc
cmp
lahf
les
aad
mov
xor
cltd
mov
pop
inc
sub
icebp
add
dec
xchg
out
sbbb
dec
out
inc
inc
inc
test
or
cmp
push
das
in
or
sbb
push
jecxz
fnsave
sub
cmc
dec
dec
and
jns
insl
negl
adc
push
add
pop
test
and
push
push
inc
jmp
cmpsb
ds
int
pop
pop
push
roll
jbe
ret
xchg
imul
pop
fwait
lods
mov
xorl
cmpl
add
pop
addr16
push
movsb
jb
daa
inc
je
filds
stos
ss
popf
jns
push
out
ja
stos
jl
jp
adc
dec
mov
arpl
shlb
xchg
and
mov
cltd
pop
lcall
sbb
imul
push
jp
cli
lods
xchg
int3
sahf
push
add
xchg
out
sarb
fwait
sub
or
loope
cli
xchg
fdivp
sub
dec
hlt
adc
iret
imul
pop
cmp
push
fucomp
insb
xchg
into
sub
mov
fdivrl
imul
test
add
xchg
and
out
out
push
add
inc
push
xchg
adc
add
dec
fwait
jno
call
sbb
imul
stc
inc
mov
xor
adc
mov
xchg
jns
icebp
iret
out
jecxz
test
xchg
xchg
test
rcrb
inc
sbb
xlat
lea
mov
mov
mov
xchg
in
stos
xchg
xor
pusha
inc
dec
int3
cmovbe
sub
jmp
add
add
enter
mov
mov
sub
cli
lahf
fisttps
add
sub
out
xor
leave
std
xorb
add
sub
shl
iret
shrl
loope
xchg
fistps
cmc
pop
fdivl
and
data16
das
aas
pop
test
repz
insb
pop
mov
lods
scas
xchg
out
pop
push
push
or
and
inc
dec
sbbb
arpl
dec
xlat
arpl
jmp
push
lods
dec
inc
xor
pusha
dec
addl
cmp
pop
push
lret
jle
or
addb
fidivrs
cmpsl
sub
push
and
dec
add
pop
mov
call
push
xchg
cmpsl
dec
ss
dec
fldcw
adc
xchg
inc
mov
pop
dec
jle
addr16
scas
pop
mov
sbb
sbb
sub
addr16
sub
addb
add
push
mov
push
mov
insl
out
xor
xchg
or
xchg
into
int
aam
scas
pop
mov
mov
int3
dec
adc
loop
in
add
pop
lret
shrl
cltd
dec
ret
sbb
jmp
mov
popa
hlt
shlb
fdivs
adc
int3
cbtw
pop
movsl
xchg
jle
sbb
mov
mov
add
andl
test
adc
icebp
roll
cs
jmp
push
hlt
sbb
or
cli
mov
mov
aam
popa
push
out
lret
outsb
andps
pop
arpl
dec
push
sbb
sbb
or
decl
dec
test
and
in
sarb
add
inc
inc
call
inc
mov
stos
cs
dec
int3
adc
imul
adc
mov
retw
je
testl
inc
inc
xchg
lods
das
lret
fistpll
push
jecxz
repnz
push
dec
test
xchg
lock
mov
fiaddl
in
and
in
ds
in
imul
sub
sub
test
mov
or
lods
push
inc
and
popa
sub
sti
and
cmp
xchg
inc
and
xchg
decl
test
cs
mov
xor
repnz
iret
jo
jecxz
mov
mov
in
jle
stos
xchg
ss
outsb
fisubs
sbb
or
ficoms
pop
sbb
in
push
test
out
and
jo
outsb
mov
sbb
dec
inc
cmp
or
xchg
inc
sub
filds
lds
lcall
lcall
adcl
push
xor
outsl
call
stos
push
or
mov
repz
jnp
pop
pop
sbb
push
mov
pusha
push
fs
add
mov
stos
pop
sbb
sarl
into
cmp
jecxz
cmp
and
js
repnz
shll
pop
xchg
shl
ja
test
out
gs
or
push
xor
ja
and
dec
jmp
shrl
push
jne
test
fists
mov
imul
rcrl
repnz
pop
jbe
push
sbb
cmpsb
rcll
sub
and
addl
or
sti
jo
dec
out
leave
dec
rclb
jo
or
adc
or
adc
pop
push
cmp
icebp
test
int
push
das
inc
xchg
cmpl
movsb
iret
cmp
in
outsb
stos
inc
mov
iret
out
ret
or
movsl
push
fbld
pop
shl
cmp
xchg
push
ficoml
push
mov
mov
sti
in
or
dec
mov
xchg
and
add
cmp
jns
adc
lds
andl
pop
cmc
scas
test
std
push
loope
jg
shrb
enter
pop
mov
pmaxsw
sbb
sti
xor
repz
mov
imul
push
adc
adc
aad
outsl
arpl
pop
cmp
or
stos
lret
cmpsb
lret
sub
test
inc
xchg
jecxz
ficoms
lock
mov
adc
inc
push
shr
repnz
sub
roll
aaa
ret
insl
mov
jnp
mov
sub
sbb
mov
xlat
jle
xor
or
dec
iret
sub
fwait
inc
dec
xchg
xchg
cs
pop
movsl
movsl
mov
mov
pop
mov
data16
push
xchg
fisubs
dec
mov
int
push
jmp
lods
jmp
xor
pop
aad
inc
insb
adc
jo
test
jge
jmp
mull
and
cs
fistl
mov
mov
pop
ret
lret
dec
adc
sub
push
leave
test
push
out
push
push
divb
cmp
adc
call
loope
jmp
dec
mov
jmp
das
addr16
popf
push
lods
sbb
ljmp
lcall
fs
add
adc
or
in
pop
data16
lds
dec
mov
mov
fwait
cwtl
out
sbb
daa
daa
mov
aas
xchg
mov
popf
shrl
cld
xor
mov
push
and
fdiv
pop
fisubl
es
lea
inc
and
jg
inc
cs
clc
mov
sbb
les
fisubs
mov
xchg
mov
xchg
js
inc
pop
dec
dec
jmp
xor
loope
xor
pusha
test
pop
jo
jg
sarb
shl
mov
in
adc
clc
mov
push
sub
push
loopne
out
xchg
cmp
or
cmpl
adc
xchg
xchg
push
cld
pop
cmp
std
push
mov
cld
lret
or
mov
leave
pop
sbb
and
inc
jecxz
push
mov
mov
or
add
mov
loopne
add
outsb
mov
cwtl
dec
push
adcl
jno
xor
cmp
push
xor
push
lds
pop
loopne
jp
jl
popa
fwait
push
lock
adc
pop
inc
mov
cmc
fisubs
mov
add
cmp
loop
add
mov
mov
aas
inc
in
jns
push
xchg
cmovb
sahf
mov
jo
ja
jp
std
cmpsl
xchg
jne
ljmp
jmp
pop
xor
jb
dec
mov
das
mov
cwtl
sub
ljmp
insl
fimull
movsbl
cmp
adc
mov
jg
sub
andl
pop
add
in
push
xchg
scas
mov
stc
cmp
adc
add
inc
xlat
mov
insl
cmp
clc
cmp
mov
inc
scas
mov
and
fnsave
xchg
xorb
and
in
inc
mov
rorb
cli
outsb
push
sbb
sub
fwait
mov
jmp
jmp
push
push
xchg
out
icebp
xor
stos
pushl
lcall
dec
pop
fcmovnu
leave
lahf
sub
xchg
add
xchg
push
jne
xchg
push
mov
add
js
test
adc
jp
pop
xchg
out
xchg
sub
fisttpl
dec
jns
cmp
rol
test
jae
mov
inc
loopne
jo
add
inc
mov
mov
lds
pop
push
shrl
and
cmp
out
mov
mov
insl
nop
jg
and
add
leave
pop
stc
insl
jne
inc
and
cli
inc
nop
xor
or
jb
test
testl
push
dec
sub
sbb
ds
ss
dec
inc
cmp
cmp
iret
adc
dec
inc
test
adc
lret
cmp
dec
jns
mov
out
cmp
pop
rorb
push
in
mov
testl
arpl
push
mov
jp
lds
nop
int3
jp
aad
mov
adc
adc
in
sub
shr
push
xor
xchg
add
jg
sub
or
jb
shll
jb
push
and
jne
pop
mov
ret
sub
and
idivl
pop
mov
inc
sbb
adc
imul
ret
cmp
sub
out
loopne
mov
pop
dec
into
mov
dec
dec
sbb
inc
jo
mov
lahf
sub
add
and
rcrl
les
notl
gs
and
sub
in
clc
mov
pushf
add
das
mov
sbb
pop
adc
jecxz
or
testb
jg
into
xor
leave
xor
pop
cmpsb
imul
xchg
sbb
and
mov
xchg
adc
aaa
leave
jl
mov
jle
jb
inc
ret
fidivl
jl
adc
push
push
ss
adc
xlat
fs
pop
aam
movsl
mov
dec
xchg
mulb
cmc
ficomps
mov
ljmp
sbb
sbb
es
das
popf
inc
cmp
xor
mov
add
sti
mov
xor
inc
cmpsb
in
roll
adc
into
lds
mov
xchg
call
dec
jmp
lahf
cmp
adc
cmpsb
loop
stc
add
pop
stc
dec
push
inc
mov
xor
xchg
sti
pop
inc
daa
gs
push
mov
inc
fmull
mov
adc
pop
sub
mov
mov
enter
stos
fbld
sti
inc
test
rorl
jnp
dec
inc
fwait
rclb
pop
test
jecxz
push
movsl
xor
outsl
imul
push
mov
mov
xchg
testl
dec
add
or
cltd
push
cli
mov
dec
addr16
pop
ret
enter
lahf
pop
repnz
xor
and
ja
je
dec
inc
out
loope
cmp
sub
ljmp
pop
mov
fisttps
pop
mov
imul
jbe
repnz
insb
add
push
xchg
sub
push
mov
jno
mov
ljmp
loope
jb
inc
popf
in
mov
cmp
mov
push
mov
adc
sbb
je
add
shr
sahf
xor
out
stc
sub
adc
test
wbinvd
and
push
push
pop
sub
jne
loopne,pt
out
sarb
cltd
pop
mov
outsl
data16
push
sbb
xchg
popa
dec
inc
jmp
pop
cmpsl
iret
cmp
mov
dec
mov
aas
xchg
inc
movsl
ljmp
lcall
movsl
jmp
jp
mov
repnz
out
xchg
sti
xor
jno
js
mov
pop
and
jae
push
ret
adc
sub
sbb
mov
mov
in
jb
jne
out
loop
sub
ficomps
pop
sbb
add
outsl
lock
or
inc
cmp
mov
dec
jnp
lret
rol
insl
pop
test
xor
inc
call
push
pop
and
dec
fdivp
push
xchg
inc
xchg
or
mov
fwait
sbb
mov
pop
jmp
jns
mov
adc
mov
in
or
mov
mov
adcl
arpl
cmp
stc
pop
sub
inc
cmp
or
pop
mov
sub
pop
scas
std
scas
jmp
test
enter
mov
xchg
shrl
jl
mov
je
outsl
add
jmp
loop,pn
sbb
mov
mov
insl
mov
jbe
cwtl
jle
iret
js
in
les
or
test
xchg
popa
fidivrl
addr16
lahf
xchg
pop
mov
stos
add
cmp
adc
outsl
dec
lret
dec
ror
rorl
out
call
pop
xor
xlat
pop
mov
lock
jmp
rcll
pop
mov
push
cmp
js
ret
pop
lret
lock
inc
insb
or
dec
inc
dec
mov
in
and
jbe
and
insb
test
cltd
enter
dec
xchg
jbe
in
ficoml
xor
xchg
fmull
sub
imul
std
dec
fwait
add
cmpsl
hlt
mov
mov
jmp
mov
out
dec
mov
call
mov
imul
mov
jno
xor
cli
and
mov
pop
sbb
fsin
mov
cltd
hlt
push
cmp
jmp
push
clc
xor
mov
call
and
push
lahf
popf
aam
pop
sbb
mov
ja
cltd
std
in
in
out
addr16
xchg
cmpsl
test
movsb
sub
ja
xor
movb
xor
pop
jle
mov
gs
out
fsubr
pop
and
pop
clc
mov
aaa
arpl
cmp
push
lret
adc
push
ss
inc
sti
out
lods
lret
mov
rorl
xchg
push
or
xchg
push
cmp
mov
mov
daa
cmc
push
mov
mov
subl
fistpll
push
into
lcall
xor
cmc
loop
xor
mov
out
dec
into
jne
pop
jmp
fldenv
call
add
iret
movsl
jle
divb
cmp
lods
fwait
mov
test
dec
es
jo
cmpsl
mov
aam
scas
dec
sbb
push
leave
sub
scas
lcall
fistps
xor
pop
out
jge
dec
ss
mov
mov
mov
or
push
sarb
and
mov
pop
lods
cltd
dec
or
mov
cwtl
enter
jp
out
jbe
xor
sub
test
push
mov
mov
sub
iret
inc
push
test
mov
aaa
push
mov
fists
push
push
rorb
rcr
ljmp
mov
jge
js
cmp
insb
xor
daa
mov
push
sub
jne
cmp
insb
cmp
pop
loopne
fstps
jae
adc
lcall
cmp
mov
in
lods
xchg
add
repz
dec
xorb
inc
push
aad
movsl
cli
mov
xor
push
mov
adc
ret
daa
push
mov
mov
xor
push
cmc
dec
test
cld
jno
loope
push
insl
rorb
xor
incl
jmp
jecxz
pushf
pop
add
cwtl
or
cmp
and
dec
int3
addr16
les
pop
jg
or
pop
enter
sub
movsl
adc
lret
pop
push
pop
jno
and
jecxz
lock
les
push
sbb
ja
inc
adc
mov
dec
sub
mov
push
iret
mov
mov
add
call
pop
jle
jmp
xor
int
pop
iret
dec
and
add
fincstp
pmaxsw
push
int3
push
jns
and
cwtl
imul
in
imul
xchg
enter
cli
xor
inc
and
gs
xchg
aad
cli
lods
ja
jb
fisubs
mov
in
cs
push
lcall
aaa
ret
fs
shll
adc
outsb
sub
mov
mov
adc
pop
sbb
jmp
aaa
mov
xchg
inc
mov
mov
out
out
ds
push
cmc
sbb
pop
scas
cmc
lcall
mov
mov
xchg
adc
leave
pop
xchg
pop
xor
sbb
imul
mov
mov
imul
out
test
int3
push
dec
push
sub
mov
jl
ljmp
mov
and
lods
cmp
cs
daa
pop
aas
imul
in
cmp
push
pop
jb
sbb
pusha
int3
enter
in
out
jns
and
adcb
popf
mov
jle
xor
jne
cltd
mov
inc
jnp
pusha
pop
je
js
sub
cs
imul
adc
xchg
cmp
xchg
idivl
pop
insb
stos
ljmp
fs
xor
sbb
fisubrl
jg
inc
jp
call
dec
dec
ficoml
jbe
fidivrl
inc
add
mov
sbb
xchg
repnz
pop
pop
movsl
cli
add
je
pop
inc
cmpsb
insl
in
xor
jle
jg
pop
test
sbb
jle
fwait
jmp
arpl
pusha
negl
push
pusha
loope
dec
out
aaa
mov
or
in
adc
push
xchg
addr16
shlb
dec
iret
dec
roll
dec
dec
pop
xchg
rclb
adc
adc
pop
mov
mov
sub
mov
dec
pop
fcoms
movsl
cwtl
out
mov
lcall
scas
es
shll
xor
inc
inc
es
lds
sarb
mov
mov
sbb
jnp
xchg
imull
in
push
jmp
push
repz
pop
push
and
mov
outsb
sub
pcmpgtd
dec
lret
scas
or
mov
fistps
popa
pop
mov
sbb
mov
cmpb
sbb
adc
fcompl
fwait
je
aas
ret
pop
pop
das
negb
mov
inc
lods
push
add
pop
repz
pop
insb
pop
icebp
push
inc
push
insb
mov
jecxz
scas
mov
adc
inc
xor
sbb
scas
lahf
mov
cmpsb
push
into
push
hlt
int3
inc
mov
lret
mov
mov
out
ror
shrl
mov
mull
repnz
out
dec
jno
and
fmull
das
shrb
sbb
adc
cmp
es
leave
dec
aad
mov
sbb
dec
adc
inc
cld
sarl
push
notb
jbe
lods
mov
je
fistpll
mov
into
adc
pop
or
fimuls
ret
or
add
cmova
std
outsb
in
stc
fsubrp
aaa
lock
inc
outsb
pushf
push
mov
sbb
adc
js
mov
push
divl
sub
sbb
cmpb
jb
icebp
inc
addr16
lods
push
mov
sbb
xor
stos
xchg
popa
pop
xor
cmp
push
ret
repz
cld
mov
fadd
sub
xor
sub
mov
in
pop
lds
test
lock
mov
cmpsb
lahf
aaa
and
jg
xlat
out
mov
out
sbb
jo
dec
inc
xchg
sbb
dec
push
insl
pusha
dec
jecxz
mov
xchg
mov
pcmpeqb
imul
daa
in
arpl
xchg
xor
scas
lods
add
cmp
cmp
adcl
ss
xor
xchg
add
and
pop
insb
pop
mov
call
pop
and
aad
cmp
fst
mov
sbb
movsl
cmp
mov
daa
mov
cld
xor
mov
rolb
mov
adc
das
bound
shl
cmp
inc
mov
xor
insb
xor
jecxz
hlt
push
or
or
jns
iret
subb
addb
xchg
shl
pop
and
dec
rcl
inc
add
add
dec
pop
push
fsubrs
movsb
fcmovb
loop
aas
jno
push
out
fldcw
mov
mov
loope
jo
jg
mov
xchg
es
and
fwait
jg
push
push
adc
aaa
jmp
pop
xlat
loope
mov
imul
hlt
cmp
stc
mov
xor
in
dec
test
addr16
stc
jg
testb
aas
mov
xchg
mov
aaa
pop
cwtl
pop
jae
push
ret
mov
cld
mov
sub
jle
das
adc
push
jmp
mov
jge
mulb
dec
clc
je
mov
push
sub
and
lods
adc
adc
cld
mov
outsl
jge
sub
les
cs
out
imul
sub
push
push
jb
xchg
push
add
push
nop
cmpsl
add
or
lods
push
notl
aaa
pop
shll
jbe
test
pop
add
arpl
loope
mov
add
movsl
adc
call
popa
push
inc
fwait
outsb
ss
mov
adc
sub
mov
mov
sti
push
loope
cmpsl
sbb
xchg
xchg
xchg
aad
mov
adc
ljmp
andb
rorl
pop
push
or
out
stos
jnp
mov
mov
push
mov
fwait
arpl
lcall
mov
pop
jnp
and
dec
push
cli
or
out
popa
pusha
shll
popa
bound
dec
mov
bound
push
adc
xchg
cmp
sub
scas
push
push
sahf
aam
cmp
div
sub
inc
loopw
lds
pushf
fbstp
lods
ljmp
sbb
push
xchg
loopne
mov
xchg
pop
dec
push
xor
ror
cmpl
add
xorb
mov
pop
mov
idivb
sahf
js
fs
scas
lods
xchg
cmpsb
cmc
roll
hlt
push
das
ficoml
dec
sub
out
sub
addr16
jb
outsl
inc
shlb
stc
mov
test
jle
ror
cmp
scas
jg
lock
int
adc
push
addr16
pusha
jbe
mov
pop
jmp
adc
divb
xor
adc
jmp
rcr
mov
mov
into
push
int3
push
repnz
xor
movsl
push
dec
xor
mov
andl
and
sub
loop
cld
add
hlt
gs
mov
nop
fwait
stos
lahf
dec
shlb
mov
cmp
repz
or
sub
push
or
cmp
inc
mul
js
mov
nop
push
repz
pop
stos
fisubrs
in
dec
not
xor
ljmp
aas
inc
stc
jae
add
push
into
addr16
sbb
cmp
mov
mov
sarl
pusha
jnp
iret
cmc
inc
ss
mov
jmp
or
pop
scas
or
push
jno
jmp
mov
fidivrl
dec
add
fidivrl
xlat
ja
inc
mov
dec
mov
fimuls
pop
outsl
xchg
sub
stos
les
es
in
xor
push
leave
fistl
jae
ret
mull
xor
iret
mov
mov
adc
hlt
fisubl
fisubl
js
push
rcrl
mov
out
push
out
movsl
and
mov
out
inc
jle
ror
sub
adc
xor
hlt
testb
hlt
rol
mov
scas
pop
xchg
rclb
inc
mov
push
mov
xor
dec
sbbb
pop
loopne
shr
push
sarl
push
int
outsl
mov
sbb
daa
imulb
lret
or
pop
dec
and
push
notb
add
add
orb
adc
rorl
sub
fwait
rcrb
pop
cmpsb
icebp
mov
push
mov
sbb
lods
std
inc
xchg
inc
insl
pusha
mov
cmp
mov
push
pop
fmuls
add
imul
mov
mov
cmp
insl
inc
stc
repnz
push
rclb
hlt
outsb
xor
inc
jecxz
filds
ret
mov
jbe
pop
hlt
or
or
dec
mov
in
stos
mulb
jno
xchg
jmp
sub
ss
fs
pop
movsb
push
mov
inc
nop
outsb
jg
rol
jae
shl
sub
lret
dec
cmp
pop
xor
mov
mov
data16
jg
mov
divb
rcrl
test
push
mov
dec
mov
jns
ds
pushl
mov
cwtl
mov
pop
xor
ret
xorl
pusha
push
add
xor
sbb
and
mov
pop
sbb
inc
and
xchg
mov
popf
in
mov
fstpl
mov
into
out
sub
mov
scas
rorb
rol
cmp
pop
cmp
mov
pop
fimuls
sbb
fists
or
jae
icebp
jno
pop
out
sbbl
push
lock
sbb
test
ror
inc
jl
cmp
rcl
out
pop
mov
adcl
fsubs
sbb
popf
add
jle
add
psubw
inc
enter
subl
and
or
jnp
jp
lods
std
sbb
push
rcl
or
push
sub
test
adc
dec
aaa
push
push
and
test
mov
adc
sbb
mov
sbb
jg
cld
cli
sub
lahf
repz
cmpsb
aaa
inc
mov
mov
out
int
mov
mov
notb
jl
fcomps
clc
mov
and
ror
jnp
jns
insb
stc
xor
popf
sub
adc
fisubrs
movsb
ds
jecxz
lods
or
aaa
imul
inc
dec
and
clc
jl
adc
push
lcall
jno
adc
jge
push
add
mov
and
lds
movl
xor
and
rclb
sub
push
mov
push
shlb
fldenv
inc
cmc
pop
push
sbbb
enter
imul
ret
rcr
int
cmp
cwtl
xchg
pop
aaa
jno
pusha
xor
shrl
xchg
stos
adc
lods
jle
fbstp
mov
mov
fadds
cmp
stc
gs
sub
fisubrs
inc
mov
mov
adc
aam
test
xlat
pop
popl
loop
sbb
enter
ljmp
adc
cwtl
and
xchg
and
jo
pop
out
js
cmp
push
mov
fistl
in
scas
adc
loope
jecxz
out
adc
adcb
icebp
pushf
fmull
jg
sub
fwait
pop
int
push
xchg
add
ja
outsb
push
fnstenv
push
fcomi
shlb
out
insb
hlt
icebp
and
in
jnp
mov
jnp
or
rol
lds
ljmp
adcl
adc
insl
and
jne
mov
mov
jp
jbe
adc
sbb
ljmp
pushf
cmc
ret
movsb
addl
subl
add
mov
test
jne
push
jns
add
outsb
xor
je
dec
mov
inc
and
xchg
das
jmp
in
stos
mov
push
add
scas
imul
into
lahf
xorl
fbld
pop
jae
mov
fcomp
sbb
dec
mov
test
cmp
shll
jne
ret
lds
dec
xchg
pop
bound
popf
out
and
jne
lcall
xchg
mov
outsb
and
push
jb
add
cmp
out
aad
popf
add
cmpsb
addr16
push
dec
repz
scas
sarb
or
sub
inc
dec
mov
std
jecxz
xchg
push
int
add
xor
or
dec
pop
mov
pop
outsb
mov
and
sbb
sbb
xor
ljmp
cmp
xchg
sbb
pushl
mov
xchg
sbb
daa
fs
insb
push
or
inc
pop
in
adc
out
daa
roll
push
out
insb
pop
mov
mov
push
imul
add
scas
test
jmp
scas
sarl
jae
test
dec
mov
cmc
ret
fwait
das
push
pop
xor
out
jb
mov
jne
jg
add
and
dec
sbb
out
mov
scas
sub
mov
sub
inc
neg
mov
mov
jb
pop
testb
outsb
enter
out
int3
push
leave
incl
inc
out
subl
xor
lret
pop
xor
pop
cli
add
jmp
mov
repz
dec
push
fsubrp
je
adc
ret
les
sub
sbb
cmp
popa
outsb
push
or
mov
pop
loope
sub
inc
cli
dec
fistpll
nop
leave
fidivl
repnz
dec
jg
mov
jae
es
clc
rclb
adc
stc
int3
outsb
sbb
rcr
pop
lahf
popa
idivl
xchg
mov
xchg
cld
push
jbe
icebp
lea
sbb
movq
inc
and
imul
leave
stos
ljmp
xchg
mov
fnstcw
cmpsb
mov
mov
imul
inc
sbb
shl
mov
ret
outsb
ret
xchg
leave
aas
stos
outsl
cmpsb
dec
lds
and
mov
mov
adcb
mov
movsl
shlb
jns
mov
shlb
mov
pop
inc
or
inc
xchg
fistps
ja
rcll
ret
es
inc
lcall
mov
mov
or
fsubp
cld
pop
cmc
push
add
cmpsb
int
push
xchg
aad
popa
lcall
rolb
dec
mov
js
lret
and
je
outsl
jno
scas
ret
cmp
dec
pop
ret
jle
xor
adc
xor
cmp
sub
fistpl
mov
adcb
cmp
ficomps
pusha
xchg
dec
shlb
mov
jae
pop
jo
insl
loopne
js,pt
adc
test
das
outsb
addr16
xchg
fstpl
mov
or
rcrl
mov
adc
jbe
outsl
pop
imul
cltd
xlat
pop
cwtl
xchg
ret
xor
add
mov
sbb
push
xor
aas
or
push
sub
and
in
mov
inc
dec
mov
lahf
or
int3
jp
and
mov
imul
xchg
xor
lcall
cmp
jmp
dec
or
popf
mov
pop
and
movsb
mov
and
push
or
in
inc
sbb
dec
shl
sbb
or
mov
js
sbb
scas
jns
mov
xchg
test
or
push
mov
pop
push
stos
mov
sarl
inc
push
dec
mov
xor
or
shl
or
pop
sbb
push
cwtl
jno
sub
stos
xchg
mov
jb
pop
ds
addr16
pop
jnp
sbb
xchg
add
mov
inc
xor
insb
sub
ficomps
icebp
mov
sahf
les
and
xchg
add
xor
and
sbb
test
xlat
dec
add
dec
in
add
inc
cld
jae
adc
mov
js
jmp
loopne
cmp
sbb
pop
js
out
sti
jg
lods
pop
loop
das
jmp
arpl
jle
testb
mov
push
xorb
jno
aad
jo
icebp
data16
stc
jne
setne
pusha
hlt
mov
or
fwait
mov
or
std
hlt
lods
mov
adc
fsub
sahf
ss
jge
and
les
mov
inc
lock
xchg
popa
movsl
and
add
mov
cmp
loop
jmp
sub
mov
shrl
mov
mov
and
sub
jle
pop
push
and
adc
cmp
xchg
mov
and
mov
jbe
divb
pop
mov
gs
gs
cmp
aad
sub
push
mov
xchg
in
mov
repnz
push
ja
ja
push
inc
ja
push
fs
xchg
frstor
mov
out
sbb
ss
fists
cltd
daa
sub
inc
mov
push
cmp
fisttps
jmp
sti
stos
test
push
popa
bound
rolb
fsub
mov
xchg
test
push
out
jnp
sbb
aaa
aaa
outsb
and
xor
mov
shll
dec
sbb
pop
mov
adc
jb
icebp
or
ficompl
stos
leave
mov
pop
jo
dec
adc
cmpsb
js
scas
fisttps
int3
adc
cmp
jno
mov
hlt
iret
icebp
ss
in
jo
sub
inc
mov
imul
xchg
inc
adc
ja
loope
xlat
in
mov
rorb
pop
xor
inc
stos
shlb
mov
jp
add
mov
lods
and
jo
inc
sbb
in
lods
hlt
jge
scas
ljmp
cmp
xchg
fwait
or
mov
ret
out
js
cs
rcrl
outsl
inc
jp
xor
adc
mov
mov
and
out
pop
adc
and
std
mov
jno
mov
into
loopne
outsl
int
jns
dec
sbb
fs
sbb
jp
jns
push
ss
pop
sti
mov
lea
fisubrl
sub
and
stc
cs
or
xor
dec
jns
xchg
inc
xchg
movsl
ret
imul
and
out
ret
stc
cli
jbe
in
cwtl
js
mov
add
cmp
dec
jb
dec
mov
sbb
jo
lret
sub
mov
or
xlat
xchg
pop
fwait
mov
ljmp
out
xor
in
fldt
bound
clc
cli
hlt
insl
in
sbb
cwtl
adc
insb
rol
xlat
push
jo
sbb
jp
jo
mov
sbb
divl
xor
lods
loope
xor
jnp
jp
mov
xchg
xchg
push
fistpl
add
das
pop
lods
enter
cld
lea
and
sbb
push
xor
or
cmp
pop
inc
cmc
jno
shrb
ja
loope
aas
insb
leave
cmp
add
sbb
jo
jnp
or
stos
xor
mov
adc
mov
cmp
fisttpll
push
dec
dec
fdivl
or
fcomp
cs
addr16
shl
jno
cwtl
repnz
ret
jecxz
unpcklps
sahf
sbb
orb
lahf
mov
lea
or
sub
jo
ror
and
ret
pause
test
pop
dec
inc
cmpsb
mov
ljmp
or
rorb
add
cmpsb
xor
rorb
push
aas
jecxz
or
aam
lcallw
test
flds
or
pop
outsl
jno
fdivl
sarl
push
mov
dec
xchg
inc
lea
and
inc
scas
cmc
int
xchg
jne
cmp
dec
cltd
mov
aaa
pop
xchg
push
add
pushf
dec
sbb
add
test
mov
sbb
nop
add
sub
inc
repz
test
fcmove
test
bound
cwtl
adcl
clc
sbb
in
jmp
das
jne
cmp
stos
jecxz
les
mov
pop
shl
lods
jb
lret
inc
mov
mov
add
xchg
movsb
xor
addr16
ja
mov
xchg
pop
mov
xor
push
mov
sub
pop
jmp
loopne
mov
dec
sub
scas
inc
ret
data16
adc
bound
pop
mov
roll
popl
das
out
dec
dec
in
jp
ljmp
sbb
and
push
clc
loopne
shll
mov
imul
or
mov
or
sbb
push
test
jle
jbe
dec
jmp
push
cld
repnz
nop
mov
rcrl
add
mov
outsl
inc
outsb
sbb
jg
call
sahf
sti
mov
mov
imul
jp
dec
mov
roll
dec
push
in
or
adc
jns
jmp
addr16
cs
cmp
lahf
in
hlt
pop
dec
stos
add
mov
jb
sub
xor
out
out
clc
loopne
inc
nop
cltd
lret
or
xor
mov
adcl
xor
inc
mov
push
outsb
xchg
daa
pop
cmc
fistpll
mov
pusha
enter
in
jle
mov
cmpsb
stos
fcomip
inc
movsl
push
pop
outsb
pop
jbe
hlt
and
xchg
es
imull
sti
pop
pop
scas
pop
or
subb
add
aaa
insb
popf
push
jno
inc
pop
and
mov
addb
xchg
cld
mov
fdivl
or
out
cmpsb
fistpll
inc
or
lods
movsb
je
stos
ds
mov
or
push
test
lret
and
mov
test
jge
adc
inc
ret
shrl
insl
xor
xor
mov
xchg
lret
inc
sbb
sbb
xchg
std
adc
push
and
add
jae
or
push
mov
mov
roll
xor
cmp
sbb
jg
mov
rol
mov
sbb
loop
or
and
mov
dec
push
and
inc
or
sub
xchg
fdivrs
aad
es
sub
cmc
mov
xor
cmp
push
imul
xchg
inc
test
xchg
addr16
jmp
call
push
add
xchg
cmp
inc
fisttpll
addr16
xchg
cmp
cli
daa
cwtl
mov
xchg
int
stos
fnstcw
cmp
xchg
sarb
inc
addl
cltd
jp
mov
inc
adc
dec
loop
enter
or
sti
dec
mov
sbb
mov
dec
addb
fucom
cld
inc
xchg
bound
cs
jbe
ds
inc
rcl
mov
in
das
mov
icebp
es
fldenv
call
popf
icebp
gs
js
pop
lds
xorb
jmp
fldl
pop
ds
je
lock
bound
sub
in
push
xor
inc
addr16
insb
loopne
cmp
andb
movsb
fnsave
jns
fiaddl
lcall
mov
into
jge
sub
dec
dec
mov
dec
xor
mov
pop
outsb
shrb
scas
push
xchg
roll
lea
fs
enter
mov
cmp
mov
cmp
xchg
les
add
cwtl
pop
add
adc
push
dec
xor
or
mov
adc
out
xchg
das
dec
pop
mov
pop
add
and
jbe
ret
cmc
pop
dec
stos
aam
push
dec
scas
xor
adc
mov
inc
das
add
jmp
mov
dec
imul
pop
push
cltd
push
test
shll
mov
stos
outsb
into
mov
cld
jl
es
and
out
lea
push
or
leave
pop
ljmp
adcb
xchg
test
mov
and
scas
jmp
pop
sahf
cld
and
aas
push
shrd
inc
sarb
mov
dec
mov
insb
xlat
add
enter
jge
push
js
sub
loop
push
mov
xchg
cmp
loopne
jle
mov
jmp
dec
pop
xor
sub
add
mov
jmpw
mov
dec
outsl
inc
mov
inc
or
mov
ret
popw
mov
xchg
push
js
push
xchg
in
inc
mov
repnz
dec
shll
jae
jb
cltd
cli
in
int3
nop
cwtl
andb
ljmp
int
int
mov
pop
jge
ss
mov
daa
mov
jl
xchg
push
mov
test
daa
mov
jl
ljmp
test
pusha
andl
lods
lods
mov
repnz
mov
xrelease
jo
xor
clc
xchg
cmc
aaa
clc
repz
pop
xor
sbb
lahf
mov
gs
dec
les
and
into
xlat
shr
cmp
rclb
cltd
mov
add
pop
out
xor
call
sub
clc
inc
cmp
add
jno
ret
and
repz
xor
scas
cmp
fisttps
add
movsb
fwait
lcall
jecxz
insl
mov
repz
inc
roll
fildll
fsubrp
cld
aaa
add
mov
orl
add
fsubs
leave
pushf
inc
lret
lcall
hlt
add
nop
sub
add
xor
iret
xchg
rolb
fbstp
sbb
and
cmp
sub
mov
std
inc
xlat
mov
out
outsb
adc
pushf
add
xor
push
xchg
push
push
pop
in
inc
fldenv
inc
adc
mov
mov
push
fnstcw
inc
dec
sti
jbe
stos
gs
fs
enter
scas
pop
lcall
ljmp
add
hlt
notb
shrb
fistpll
lahf
xchg
sub
out
xor
mov
iret
mov
or
xor
aaa
imul
sub
out
add
icebp
pop
faddl
mov
push
pushf
adc
jae
add
int3
mov
enter
ja
popa
mov
cltd
out
adc
jbe
mov
ret
test
mov
jae
bnd
jmp
pop
lcall
cmp
test
adcl
insl
xlat
stos
inc
nop
and
movsl
fistpll
mov
inc
cwtl
mov
pop
sti
fistl
xchg
cmp
jmp
pop
mull
inc
or
push
push
mov
jg
jnp
inc
mov
push
ffreep
test
test
adc
test
fwait
xchg
sbb
sbb
shlb
and
cli
cmp
xor
mov
mov
jg
inc
and
adc
xchg
out
dec
insl
gs
pushf
jno
test
add
insl
mov
pop
and
lahf
aam
in
sahf
mov
ds
ds
mov
dec
cmp
shrb
add
push
dec
stc
testl
xchg
jns
mov
lds
or
loope
shll
loopne
jns
in
sub
jae
cmp
pcmpgtb
push
push
push
dec
xor
fldenv
imul
mov
rcrb
xlat
roll
outsl
cs
cs
xor
repz
adc
push
or
sub
jns
jg
or
fsubs
sub
sahf
cmpsl
out
rcrl
std
cmp
push
hlt
cmp
nop
pop
push
ret
xlat
cltd
sub
sahf
dec
inc
mov
mov
cmp
cli
ret
sti
push
jl
dec
sbb
aaa
adcl
or
xor
repz
xchg
jmp
clc
jno
fwait
dec
andl
inc
fsubrl
dec
push
push
jne
ljmp
loopne
pusha
push
int3
in
inc
inc
iret
cmp
add
in
xchg
jne
sub
jmp
bswap
mov
insl
pop
pop
jne
fs
je
jecxz
fisubs
sub
daa
out
cmp
jmp
loope
fsts
ss
jl
loope
int
jg
fwait
mov
sbb
add
xor
aad
mov
and
imul
fdivrs
ret
ljmp
lahf
pop
jp
icebp
mov
movsb
sti
sub
inc
pop
and
punpcklbw
cmp
std
jb
add
cli
mov
or
clc
stc
adc
outsl
sub
adc
sbb
cmp
lods
test
add
sti
or
test
test
outsb
pop
sbb
xor
adc
iret
inc
xor
sub
cmc
sbb
rcrl
dec
mov
icebp
jbe
mov
loope
jle
jb
adc
inc
pop
lods
jmp
push
test
dec
sub
sarl
aam
or
pop
fst
addr16
hlt
iret
push
es
push
push
adc
xchg
imul
or
outsl
push
sub
fisubs
mov
or
mov
fidivl
ds
lods
hlt
int
xchg
or
mov
lret
gs
jo
xchg
ficompl
sahf
dec
imul
lds
imul
iret
jge
sub
dec
out
je
sbb
mov
cld
call
mov
push
pop
fisubl
inc
call
xor
pop
lcall
shl
adc
loop
fcomps
push
pusha
pop
sbb
movntq
mov
lcall
fcompl
add
arpl
xor
dec
std
inc
sahf
out
pop
pop
or
lods
pop
sbb
cmp
fcomps
lods
adc
pushf
xchg
pusha
xor
unpcklps
pop
insl
sbb
push
rcrl
adc
or
adc
call
add
fst
xor
xor
xchg
xchg
shlb
mov
add
adc
and
mov
or
mov
cmp
jbe
add
in
add
mov
xor
dec
ja
lea
mov
pop
add
inc
xor
into
inc
sub
push
pusha
mov
adc
cli
push
cmp
outsl
cs
in
js
mov
inc
inc
daa
lahf
sub
lds
lods
mov
push
bound
jno
cmc
add
xchg
jnp
sbb
addb
mov
out
jg
ljmp
pop
add
clc
xchg
xchg
cmp
cmc
pop
adc
ja
sbb
pop
add
cmpsl
mov
mov
out
aaa
dec
cmpsl
adc
lahf
cmpsb
nop
or
lcall
lea
iret
in
cmp
mov
pop
adc
insb
push
or
rol
stc
mov
xchg
test
jne
leave
ror
scas
in
adc
push
mov
fldenv
push
mov
repnz
repnz
insl
cli
sub
leave
sbb
mov
push
adc
cmpsb
es
cmpb
and
or
xchg
repnz
mov
fwait
and
xchg
int3
ss
jo
pop
popf
sbb
idiv
pop
std
nop
movsl
sahf
sbb
stos
pop
mov
loope
mov
out
and
sbb
xchg
pop
push
lret
and
lea
filds
cmp
cmp
or
mov
insl
sbb
xchg
mov
and
daa
loope
das
dec
imul
mov
cmpsb
movsl
jg
fsts
lret
xlat
lahf
sub
test
outsb
adc
and
or
xor
cmp
mov
jge
cmp
cld
push
fldt
xchg
mov
hlt
or
cmp
shll
es
push
inc
and
and
pop
nop
movsl
adc
fcoml
inc
mov
sub
int
mov
fisubrl
pop
les
mov
filds
call
shlb
pushl
adcl
fldcw
int
ret
jo
push
dec
mov
xor
add
popa
fimuls
fwait
xchg
pop
clc
shl
fcmove
loop,pt
es
mov
inc
aam
leave
push
mov
cmp
shlb
popf
xchg
lds
inc
and
adc
xchg
loopne
clc
aad
pop
imul
mov
mov
out
das
outsl
decl
popa
call
adc
mov
jns
adc
sbb
insl
or
imul
imul
arpl
hlt
insl
aas
pop
pusha
pop
mov
dec
jo
push
push
mov
addr16
pop
pop
mov
xchg
movsb
inc
xor
mov
stos
mov
dec
hlt
insb
pop
and
sbb
mov
dec
sub
dec
push
in
xchg
arpl
sahf
mov
xor
sbb
jae
xor
xchg
inc
insb
cmp
test
or
push
in
mov
mov
test
xor
xchg
inc
js
rolb
adc
mov
clc
aaa
cmpsl
jecxz
jb
cld
out
inc
cs
inc
cmp
pop
cmp
popa
and
cs
pop
bswap
xchg
aaa
push
push
jge
jbe
ss
mov
aaa
pop
mov
mov
pop
daa
pop
in
mov
adc
aaa
or
fimuls
call
pop
movsb
adc
inc
int3
sahf
xchg
jg
pushf
mov
mov
shrl
xchg
sub
sbb
in
adc
or
fistl
jnp
adc
mov
cs
add
add
mov
mov
add
ficoml
push
inc
jl
loope
loope
jnp
lret
sbb
insb
popa
insb
loop
pop
subl
jmp
pop
mov
xor
pop
mov
mov
add
push
xor
clc
data16
popf
ror
clc
lods
jecxz
sub
sub
sub
adc
cmp
inc
test
push
sti
decb
inc
je
push
movsb
test
inc
rcl
sbb
or
cltd
cs
test
daa
sahf
loopne
lahf
adc
out
out
daa
pop
hlt
adc
stos
loop
popf
mov
inc
daa
ja
dec
dec
or
xchg
and
mov
cmc
lods
dec
repnz
xor
mov
mov
push
add
cmp
jbe
xchg
lret
inc
bound
pop
mov
addr16
cmpl
dec
sar
imul
push
xor
stc
leave
std
out
or
jmp
pusha
sub
fildll
jb
dec
cmp
or
mov
test
xor
mov
sbb
in
sbb
fs
xchg
lds
sub
push
push
movl
mov
push
out
jp
and
in
add
les
xor
xchg
push
or
lret
xchg
push
push
inc
divl
sbbb
das
xchg
and
test
bound
mov
inc
cmc
adc
add
and
jbe
push
jbe
fidivs
dec
ret
ffreep
jge
js
popa
xorb
xor
or
adc
std
pushf
mov
dec
cmp
data16
js
testb
add
lret
xchg
and
inc
mov
push
cmpsl
jne
sahf
push
cwtl
jmp
into
test
popa
dec
push
aas
xor
jnp
nop
sbb
clc
or
sub
xchg
shlb
xchg
inc
mov
std
sub
pop
sub
jne
adc
das
aas
adcb
inc
clc
int3
or
and
inc
hlt
out
or
mov
ss
mov
iret
daa
xor
dec
js
in
dec
rcrl
pop
jmp
enter
out
andnps
and
das
out
rolb
dec
inc
cltd
cmp
outsb
mov
pusha
xor
pop
es
adc
push
in
pushf
ret
test
arpl
and
mov
mull
shlb
ja
inc
jle
popa
lcall
push
inc
shlb
add
aas
jb
jmp
jb,pt
int
cltd
loope
mov
cmp
push
mov
insl
inc
push
addr16
mov
movntps
xchg
xchg
dec
cli
mov
mov
cs
jmp
add
dec
sub
pop
aam
pusha
or
mov
dec
add
or
aas
pop
test
sti
xchg
repnz
cmpsb
cmp
mov
add
aaa
jmp
push
mov
call
call
movsb
rcrl
or
or
add
lea
mov
add
or
movsl
fwait
sbb
xor
sti
sbb
xchg
dec
or
or
cltd
mov
outsl
mov
sub
enter
mov
mov
iret
dec
cltd
out
sub
xor
push
add
jnp
rolb
push
subb
cltd
aad
outsb
into
ficoms
cmp
push
pop
mov
cli
mov
out
pop
adc
jmp
pop
sub
jno
test
scas
popa
dec
andb
jmp
cs
mov
sbb
mov
sub
std
mov
ja
shlb
pop
pop
cwtl
popf
cmp
sahf
xorb
stc
pushf
fidivs
ljmp
dec
popa
jge
xchg
mov
scas
jnp
xchg
mov
bound
jnp
xorl
call
loopne
in
jle
insl
js
leave
mov
out
je
xlat
int3
int
stos
cmp
jge
and
fs
test
mov
fdivl
mov
pop
ret
xchg
lret
sti
incb
adc
push
pop
cwtl
xchg
mov
xor
adc
xor
mov
std
cmpb
loop
cltd
int3
xor
shrl
xchg
pop
loopne
mov
mov
sub
jo
cmpsb
fwait
loope
pop
fildl
mov
adc
sbb
mov
subl
rcll
xchg
jge
mov
in
movsb
push
xchg
mov
idivb
inc
sbb
gs
outsl
mov
loope
cmc
add
stc
mov
rorb
push
cli
pop
sbb
xchg
cs
xchg
outsl
jno
cld
iret
in
mov
push
shlb
imul
mov
jno
daa
jae
push
push
ja
fwait
sbb
test
rcrb
test
and
xor
stos
inc
les
mov
in
leave
sbb
xlat
sub
ret
adc
aam
js
or
rcr
stos
out
ret
test
cmpsl
sbb
in
jmp
xchg
sbb
sbb
in
out
jbe
add
sub
mov
imul
nop
cltd
add
push
push
jmp
adc
inc
jns
mov
adc
adc
push
loopne
cli
lahf
lahf
pop
popa
scas
adc
jecxz
cmpsl
outsb
cmp
mov
mov
and
jge
cmc
out
adc
mov
addr16
jo
xchg
adc
addb
cmp
lods
add
in
mov
movsl
mov
aad
mov
rcrb
lret
xchg
mov
js
loopne
mov
stos
in
push
loop
inc
mov
fnstcw
int3
mov
addr16
xor
xor
inc
das
sti
bound
mov
es
add
pusha
addb
dec
push
mov
inc
push
mov
fs
add
out
leave
std
cwtl
lahf
adc
outsb
es
xor
rolb
stc
das
testb
rorb
cmp
fs
inc
or
mov
mov
gs
sub
mov
dec
inc
jae,pn
add
inc
int3
xchg
and
stos
sahf
sbb
inc
mov
rcl
ffreep
pop
xlat
mov
push
imul
imul
jb
pusha
jle
shrl
rol
mov
fimull
pop
dec
fwait
sbb
imul
sub
mov
loop
repz
cmp
movsl
jo
jne
xor
in
push
int3
mov
enter
arpl
stc
xchg
xchg
mov
int
jge
aam
or
adc
jno
push
mov
hlt
xchg
ds
std
cmp
xor
pop
imul
jp
sbb
jae
mov
out
or
mov
cmp
cli
ja
and
and
cmp
shlb
cmp
mov
and
fmulp
mov
icebp
cld
xor
inc
xchg
jns
push
adc
xor
and
dec
pop
movsl
add
out
mov
mov
shlb
cmp
fists
icebp
decl
mov
test
inc
pop
les
jo
push
cmpsl
cmc
lods
adc
jno
bound
xor
loop
xor
popf
into
aad
cmp
jne
rcrb
inc
or
outsl
add
pop
sbb
xlat
pop
loop
add
mov
adc
xor
loop
jmp
jl
mov
adc
xor
lock
aaa
aam
jg
nop
bound
movsl
lret
sti
adc
int3
adc
push
mov
jbe
and
fsubs
packssdw
pop
mov
mov
cs
enter
pop
movsb
cs
mov
sbb
sub
notb
fimuls
stos
mov
mov
add
xor
push
cltd
mov
cli
sub
das
ret
aaa
shl
adc
mov
lret
pop
in
fidivrl
es
mov
out
sbb
push
loop
fistl
ds
nop
mov
add
adc
adc
in
sbb
xor
cs
pop
ret
jno
jb
inc
cmp
pop
in
xor
fdivrl
mov
dec
leave
mov
cli
out
clc
fsts
push
pop
jns
xor
add
add
ja
push
aad
mov
dec
jg
ja
push
lods
cmpsb
movq
pop
mov
fwait
gs
xchg
subl
es
jl
shlb
lods
jg
mov
jmp
pop
dec
add
es
or
cmp
sbb
adc
xchg
mov
and
mov
icebp
stos
int3
push
and
scas
popa
lods
outsl
leave
aam
ds
pushf
into
push
std
mov
xorb
repnz
sbb
push
mov
rcr
pushf
push
add
ficompl
xchg
mov
fadds
out
xchg
sub
xchg
pop
push
dec
mov
mov
mov
cmp
out
xchg
cmp
mov
stc
xchg
cmp
xchg
xchg
scas
idiv
mov
loope
pusha
pop
into
jne
jne
in
shrl
js
fst
scas
mov
xor
mov
rcl
sub
or
mov
push
mov
cmp
xchg
inc
aaa
xor
or
and
lods
bound
adc
pop
mov
in
sub
mov
mov
sbb
or
push
leave
mov
push
adc
faddl
cmp
jno
sbb
xchg
test
jmp
pop
data16
addr16
dec
arpl
adc
add
jle
cmp
negl
pop
fisubrl
imul
shl
fmull
jg
mov
popf
lock
and
outsl
mov
jnp
dec
iret
adc
fwait
pop
in
xlat
and
or
jne
subb
jo
push
icebp
leave
loop
mov
test
mov
es
loope
jle
xchg
or
adc
and
and
jae
ret
xchg
add
loop
or
push
xor
cmp
sahf
sub
xor
pop
cmpb
fwait
pusha
xchg
push
adc
lcall
int
aad
or
push
out
dec
push
dec
hlt
sti
and
mov
scas
hlt
insl
inc
xor
out
pop
add
cltd
les
push
push
mov
loop
mov
pop
jb
insb
adc
je
adc
pop
inc
aam
fdivrs
imul
push
ret
pop
add
lock
jnp
pusha
scas
mov
xchg
mov
mov
jle
and
jecxz
sub
mov
xchg
fimull
add
hlt
inc
dec
xor
scas
loop
je
inc
data16
pop
and
push
push
mov
iret
cwtl
fisttpll
data16
push
cmp
ret
lds
inc
rclb
mov
push
test
dec
dec
xor
mov
inc
fbstp
imul
mov
mov
add
cmp
sub
es
xchg
fsubrs
jecxz
cmp
adc
pop
not
lods
mov
aam
add
and
ljmp
pop
or
xchg
js
mov
mov
xchg
mov
inc
ja
psrld
aaa
pop
push
push
mov
stc
mov
dec
dec
insb
iret
sti
push
cmp
mov
cmp
xchg
inc
mov
loope
cwtl
pop
shr
icebp
imul
pop
push
addb
in
in
cmp
xor
sub
mov
add
dec
sub
loop
sub
repnz
cmpsl
into
mov
pop
mov
insl
in
dec
xchg
adcb
daa
push
aaa
js
shr
in
inc
sbb
and
out
jnp
fs
jle
or
cmpl
dec
stos
sub
inc
pop
mov
mov
push
jno
loopne
outsb
in
nop
loopne
movsl
xchg
adc
repnz
inc
je
dec
push
test
testl
pop
addr16
mov
pop
testb
mov
fisttps
pop
pop
inc
rorl
and
mov
inc
daa
pop
arpl
test
adc
sub
aam
daa
add
arpl
adcb
or
add
pop
cmp
mov
mov
inc
ljmp
stos
in
xchg
adc
lods
xor
mov
adc
dec
cs
int
popa
mov
outsl
ret
sbb
shrb
push
call
xor
shl
sub
test
xchg
daa
pop
hlt
jne
or
push
mov
or
clc
jo
stos
jnp
popa
jns
movsl
aaa
hlt
shrb
aam
in
jns
pop
subl
les
stos
push
out
popf
mov
std
clc
lds
in
lahf
xchg
inc
xchg
lock
push
insb
mov
ret
ficoms
xchg
cwtl
jl
pop
inc
in
xor
jns,pn
add
xor
xchg
es
xor
sub
movsb
or
dec
jecxz
xor
cmp
insb
scas
pop
and
jle
in
cmp
sub
inc
pop
add
jbe
mov
bound
das
push
in
test
and
push
clc
lea
or
pop
xchg
jne
inc
cmpsl
or
dec
shlb
arpl
adc
xchg
and
inc
xor
pop
inc
sbb
dec
pop
xor
jno
dec
mov
hlt
xchg
enter
outsb
lret
add
sbb
mov
loopne
or
and
push
mov
pop
push
xlat
or
mov
fs
jl
and
push
push
aaa
dec
mov
sbb
pop
pushf
inc
mov
loope
mov
push
cmp
dec
or
dec
arpl
dec
fwait
rcll
jmp
out
pop
aas
out
clc
or
mov
jbe
add
mov
pop
and
test
inc
pop
pop
mov
inc
sub
pusha
int
int3
lret
mov
ds
rclb
das
pushf
add
fcmove
test
popf
stc
int3
lods
lcall
add
jmp
sbb
das
out
in
mov
fisttpll
and
xchg
repnz
or
pop
inc
pop
or
pop
jnp,pt
jmp
loopne
fldenv
push
xlat
xchg
notl
loopne
dec
add
and
shl
incl
rclb
mov
outsl
push
jns
int
addl
sub
rcll
inc
ja
jo
adc
mov
loopne
mov
xchg
test
pop
jbe
out
cmpsb
jo
movsl
pop
xchg
push
ret
dec
push
sub
xor
addb
mov
push
pop
imul
push
push
and
lret
push
sarb
das
or
xchg
inc
repnz
std
loop
mov
inc
jge
inc
add
movsl
mov
jnp
jae
xchg
add
ja
sahf
sub
jno
xchg
push
mov
out
inc
jns
pop
lods
mov
cli
push
xchg
xchg
jl
cmp
push
sbb
sub
lahf
mov
jb
push
jo
lods
jbe
xor
xor
mov
js
dec
out
lea
inc
push
and
inc
mov
adc
cmp
dec
or
fadd
xor
movsl
inc
aam
pushf
mov
fsubl
jmp
ds
fnstenv
data16
and
push
lock
dec
cmp
rolb
jmp
int3
mov
rorl
or
ss
ljmp
std
ret
mov
cld
and
cmpsb
add
loope
mov
lods
lret
jb
or
lcall
jl
mov
sub
stos
movsl
lret
push
push
push
xchg
mov
stos
jp
jb
dec
inc
fs
cmp
mov
sub
inc
and
xlat
das
cmp
xor
dec
dec
dec
pushf
mov
ret
jno
aad
lods
and
jbe
ljmp
fistpll
jle
pop
xor
sbb
inc
pop
sahf
xor
jmp
jbe
pop
pop
mov
pop
jle
cmp
adc
inc
mov
data16
add
and
adc
sbb
push
or
imul
in
and
idivb
fisubrs
jmp
add
push
jge
jne
add
cmp
or
mov
cs
add
xchg
daa
mov
jge
ljmp
pushf
fisttpll
xchg
adc
js
push
popa
cltd
ljmp
or
push
cmp
ret
jl
in
addb
inc
rolb
fldl
or
adc
fwait
mov
add
inc
mov
aam
cwtl
jmp
mov
pop
dec
in
push
lea
scas
test
cmp
sbb
mov
pop
jle
lds
and
mov
loop
sub
jae
sbb
push
inc
in
pop
aad
addb
cwtl
lcall
cli
stos
sbb
push
repnz
aad
and
push
mov
cld
xchg
aam
aad
and
sbb
cmp
jb
popf
xchg
lahf
test
imul
sbb
imul
shlb
pop
loope
jne
adc
mov
adc
xor
mov
inc
int3
sub
outsl
xchg
mov
pop
scas
pop
in
mov
push
dec
add
in
aaa
jo
rcr
lret
cltd
mov
lahf
jno
push
test
les
xor
out
stc
dec
scas
cmpsb
fadds
shlb
cmc
inc
jmp
xor
add
loope
push
fwait
fs
pusha
test
testl
andb
lahf
sub
lods
movsb
sbb
movsb
out
sti
add
or
xchg
cmp
xchg
stos
dec
mov
test
into
pop
mov
sbb
sbb
aaa
adc
je
sbb
outsb
push
pop
xchg
xchg
icebp
filds
or
dec
push
xchg
sbb
xor
jcxz
add
sub
int
insl
push
jo
mov
xchg
cmpsb
dec
dec
test
xchg
das
push
out
fistps
addl
dec
jle
mov
lods
cld
data16
sbb
sbb
pop
cld
or
xchg
rcr
push
popf
cmp
xor
imull
pop
jg
rorl
fs
mov
sbb
mov
lock
mov
xchg
imul
sub
xchg
hlt
incb
ja
lock
int3
sub
mov
insl
mov
fcomps
cwtl
out
sub
xchg
insb
adc
addl
rcll
cmp
jo
fstpl
inc
dec
jge
test
mov
ja
cmpsl
jo
shll
comiss
mov
aad
add
gs
jmp
rolb
cmpl
mov
jbe
mov
ss
fisttps
pusha
bound
fcomp
or
xor
sbb
lcall
xor
add
mov
mov
int3
cltd
mov
inc
cmpb
dec
mov
aas
ds
fmuls
or
or
or
xchg
lcall
jbe
xchg
xchg
fcomps
aaa
popa
xor
xlat
mov
into
dec
mov
xor
dec
fisubrl
fstpl
sub
subps
inc
mov
mov
xchg
cmpsb
shl
cmp
sbb
xchg
adc
mov
ret
and
add
mov
mov
sbb
mov
dec
jbe
mov
loop
in
inc
negl
ficoms
test
mov
add
pushf
int
jl
lret
jbe
pop
pop
mov
mov
nop
or
out
ret
in
loop
fbstp
xchg
imul
cmp
push
lods
jmp
ficoms
das
in
out
mov
out
int
mov
mov
cltd
lret
mov
xchg
lea
popf
push
stos
lea
jp
sbb
jnp
jg
cmp
push
in
lcall
pop
push
mov
mov
in
mov
addr16
jnp
test
sbb
mov
fsubp
mov
pushf
add
imul
shl
adc
fsubrl
test
dec
push
jns
fists
sbb
test
xchg
mov
sbb
add
pop
icebp
sub
jbe
push
fmull
stc
addr16
xor
push
add
inc
xchg
mov
mov
jl
shlb
dec
js
xlat
rolb
adcl
out
test
dec
and
or
xor
push
jno
cmpsb
xchg
xor
push
push
sbbl
push
mov
xor
mov
pushf
cmp
nop
nop
add
xor
daa
test
rclw
jecxz
loop
dec
and
jmp
lods
roll
cmp
mov
adc
xchg
mov
inc
push
addl
int3
cmp
jo
xchg
sub
mov
daa
sub
jecxz
rclb
mov
imul
cmp
add
adc
push
out
insl
arpl
ljmp
test
push
das
mov
push
dec
pop
repz
jne
fs
or
in
test
cmpsl
xchg
and
and
or
adc
gs
sti
or
push
out
add
sbb
mov
inc
pop
sbb
lcall
mov
int3
xchg
cmp
xchg
out
sub
jb
fs
inc
xchg
dec
add
mov
stos
push
xchg
sbb
loop
adc
pushf
imull
push
mov
fdivl
push
add
leave
aam
or
cmp
loope
ret
daa
mov
and
in
cltd
bswap
dec
and
andl
mov
movb
mov
and
stos
or
push
or
mov
stc
icebp
adc
lahf
pop
push
out
sarb
jecxz
out
mov
shlb
lcall
popf
test
mov
ret
rolb
fidivrs
or
lds
rcrb
clc
fs
mov
mov
stos
fisubs
lods
aaa
into
sbb
shr
fwait
push
aas
cld
mov
imul
add
cld
sbb
push
inc
fmull
dec
xchg
les
push
dec
inc
or
incb
adc
dec
push
icebp
sbb
xlat
inc
ficoms
jae
jp
mov
sbbb
leave
cmpsl
movsb
mov
xchg
sbb
inc
sti
in
loope
pop
icebp
stos
mov
lock
arpl
mov
pop
and
sahf
sub
loopne
mov
xchg
cmpsb
loop
loopne
or
push
adc
scas
pop
xor
dec
push
rcl
xor
and
or
ficomps
ret
jmp
std
popl
int
fdivl
les
int3
mov
mov
gs
loopne
shlb
popa
fiadds
pushf
test
in
mov
cmp
and
out
mov
loope
xchg
adc
jo
ret
mov
cld
adc
mov
in
int3
jnp
add
fdivr
sub
xor
inc
cmp
shlb
xchg
pop
sub
mov
repz
cmp
inc
cmp
cwtl
lahf
sbb
cli
sub
int3
test
mov
cmp
push
imul
pusha
xchg
fmul
push
mov
pop
psubsb
rcll
enter
inc
rcr
inc
lods
pavgb
xchg
arpl
loopne
in
push
push
clc
cmp
sub
rcr
mov
jno
pop
jae
leave
pop
es
mov
fwait
mov
sahf
xor
push
dec
xlat
dec
outsb
int
lock
out
dec
xlat
pop
fiaddl
lods
fbld
mov
fbstp
iret
push
dec
pop
pusha
sub
lods
jnp
popf
jbe
jecxz
mov
add
dec
sahf
lods
imul
lahf
repz
leave
push
sub
pop
repnz
inc
xor
add
mov
out
sbb
aam
data16
sahf
cmpsl
addl
pop
mov
push
mov
imul
push
and
lock
xchg
cld
jno
jno
das
jmp
sbb
mov
adc
add
and
xchg
pusha
mov
jmp
loopew
imul
xchg
shll
fcomps
or
jbe
pop
xlat
or
incl
ljmp
mov
hlt
sti
mov
lret
in
stos
xlat
addb
add
lret
jge
dec
test
outsl
pop
int
adc
mov
lcall
ds
dec
cmpsb
adc
aam
mov
cmp
sub
and
nop
mov
dec
dec
or
or
aas
pop
push
ret
insl
cmp
mov
mov
pop
pop
rcrl
mov
xor
cwtl
imul
jl
pop
lds
push
and
dec
xor
push
cmpsb
push
cmp
jb
pop
cltd
sub
leave
and
fsubs
sub
das
insb
jecxz
mov
hlt
dec
push
add
or
movsl
push
cmp
stc
stos
data16
fwait
push
lods
out
pop
and
aad
sbb
add
jp
xchg
les
mov
gs
xor
and
mov
adc
mov
push
cmp
cmp
lcall
negl
jns
rcl
cmp
lret
xlat
enter
in
popf
mov
and
jnp
sbb
mov
mov
popa
hlt
jge
and
inc
rol
lods
mov
hlt
fcomps
loopne
aad
adc
push
or
mov
mov
fwait
sbb
xchg
push
mul
push
push
cmp
xchg
and
aam
jbe
test
mov
jb
mov
xchg
adc
sbb
mov
pop
aas
dec
mov
mov
fdivs
cli
movsl
or
pop
adc
scas
jno
mov
jmp
dec
or
loop
in
push
shl
test
test
mov
inc
mov
fs
ret
cli
in
cmc
cmc
stc
jne
push
xor
das
mov
loopne
or
sahf
xchg
orb
inc
push
mov
push
shll
cld
push
mov
mov
scas
cltd
xchg
push
in
add
icebp
daa
out
les
adc
mov
cld
inc
addr16
mov
mov
sub
sbb
mov
jle
sub
xchg
es
push
push
and
or
mov
sbb
mov
sub
mov
add
mov
cmp
mov
mov
push
jmp
push
int3
pop
push
and
sub
jle
mov
xchg
mov
into
push
sbb
ret
or
dec
dec
and
or
adc
test
cmp
sbb
xor
inc
loopne
mov
mov
push
ret
dec
scas
popf
scas
scas
aaa
pop
ds
mov
or
mov
push
movsl
pop
pop
pop
fcoml
aaa
stos
dec
ds
xlat
lock
lds
sbb
fstl
sarb
xor
sub
cmp
add
mov
pavgb
mov
push
mov
mov
in
cmp
inc
imul
add
push
mov
loop
sub
add
sahf
push
lret
jbe
les
stos
push
cmp
add
icebp
test
cmp
mov
flds
jo
sbb
aam
int
imul
adc
inc
mov
and
pop
jne
data16
rol
and
cltd
lcall
sub
lret
adc
and
mov
sahf
push
ss
les
or
cld
or
hlt
or
sub
jo
leave
aas
fsubrs
into
push
xor
jp
pop
dec
testb
sbbb
sbb
in
mov
xchg
mov
inc
shrb
out
mov
mov
xor
loop
notl
lea
sbb
and
adc
dec
test
cmp
inc
aam
addb
sbb
jmp
jmp
outsb
mov
cs
add
jg
mov
decb
in
pop
cmp
xor
mov
repnz
sub
test
pop
loopne
ljmp
aad
out
mov
xor
insb
xor
push
add
enter
jno
stos
fnstenv
fisttps
sub
xor
pop
dec
out
dec
popf
cmp
iret
es
insl
sbbl
ja
data16
lods
cwtl
rcl
adcb
inc
loop
stos
jp
dec
mov
inc
and
sub
pop
add
rolb
jg
add
push
dec
cli
cmpsl
mov
and
lea
je
jbe
ja
jno
fs
mov
add
jp
or
mov
fistps
out
faddl
outsb
pop
cmp
push
pop
call
sar
dec
nop
add
adc
hlt
sar
in
adc
adc
push
jne
ljmp
dec
xor
mulb
leave
mov
loope
adc
ror
daa
mul
mov
inc
cmpsl
push
aam
inc
jbe
add
cmpsb
outsb
adc
jle
std
sub
movsb
mov
pop
xor
fimuls
push
sti
sti
mov
les
jb
cld
xchg
repz
cmp
lret
or
shll
mov
push
cmc
xchg
or
enter
add
lods
xor
jnp
xchg
pusha
add
stos
pop
mov
jnp
and
in
imull
call
pop
test
pop
dec
sub
mov
inc
or
fwait
xchg
leave
subl
inc
lea
mov
sti
insb
inc
jns
fwait
in
lret
mov
imul
inc
xor
dec
pushf
popf
xor
mov
and
jb
pop
inc
and
inc
sbb
in
pmaxsw
xchg
jg
push
or
jno
nop
jnp
inc
or
xchg
daa
cmp
test
sbb
mov
dec
fidivrl
and
push
add
sti
ljmp
ja
in
fisubl
lea
sub
aas
adc
out
cld
pop
daa
sbb
out
xor
lea
test
jg
stc
cmpsl
xchg
xlat
inc
mov
shlb
mov
fwait
mov
pop
xchg
scas
sbb
xchg
orb
add
ret
sahf
aaa
mov
ret
xchg
out
out
out
and
or
test
je
aam
outsl
mov
push
bound
cmp
cmovnp
lret
lcall
sbb
loope
or
shlb
pop
loop
shr
xchg
cs
dec
adc
aam
add
inc
ret
fldt
leave
cli
das
adc
shll
jne
movsb
push
jnp
not
sub
lods
leave
mov
out
shll
push
jecxz
fbld
fsubrl
out
sbb
fsubrl
sub
dec
in
ret
xchg
clc
cmp
sub
cmp
fidivrl
loope
xchg
cmpsl
lds
push
in
popa
fisubrl
psubusw
fcoml
sbb
int3
inc
push
iret
arpl
cmp
insb
push
in
in
jo
xchg
mov
push
shrb
jbe
jne
sub
call
into
pop
rol
repnz
arpl
lea
test
or
sbb
ret
mov
xchg
shll
test
iret
out
hlt
jg
cli
neg
cmp
sti
push
xor
aad
je
inc
fisubrl
xchg
scas
jns
sub
ds
xor
mov
add
testl
inc
into
cmp
cmp
sti
aas
xchg
aas
mov
xor
stos
sub
mov
xchg
ja
xchg
lret
mov
and
lds
sbb
mov
push
sbb
cmp
faddp
push
std
jns
pop
and
ss
fistps
loope
dec
shll
subb
sahf
add
rclb
rorl
xchg
neg
sub
cltd
mov
push
in
xor
mov
fchs
testb
mov
repz
mov
imul
push
loop
cmpsl
lcall
xor
in
ret
nop
mov
test
cmp
cmp
adc
or
rclb
shll
sub
inc
mov
inc
stos
cwtl
pop
roll
xor
push
test
fcmovne
enter
shrl
das
sub
mov
int3
repz
mov
xchg
pop
cld
mov
push
addb
jp
jle
cmc
rcll
jp
mov
les
add
cmpb
dec
insb
and
inc
loop
test
xchg
mov
sub
pop
jecxz
jecxz
or
inc
fnstenv
or
das
out
addl
and
mov
popf
sub
sub
shlb
aad
mov
adc
jae
cmp
sbb
adc
jmp
scas
into
stos
inc
ret
xchg
xor
xchg
sar
sub
xchg
pusha
or
lahf
sbb
cmc
jg
repz
add
jbe
mov
icebp
testb
popa
push
dec
rolb
dec
sub
and
decb
jl
repnz
fists
imul
inc
test
call
sar
push
in
sub
pop
cmp
mov
insb
pop
ljmp
ljmp
xlat
addr16
sbb
out
mov
or
hlt
pushf
mov
fs
fildl
push
or
add
add
das
mov
js
imul
mov
rcr
mov
in
fdivrs
dec
mov
in
jno
xorl
inc
sti
pop
imul
push
and
imul
mov
fildll
repz
mov
test
push
add
subl
mov
movsb
jmp
jl
push
xorl
into
or
cmp
mov
mov
ja
push
les
das
fwait
pushf
loope
dec
fcom
sub
pop
pop
int3
inc
adc
cmp
jo
xchg
out
pushl
mov
push
repz
push
cmpsb
mov
mov
imulb
pushf
mov
aam
stos
js
mov
jae
jns
shlb
and
ficompl
and
push
lret
jg
sbb
repz
popf
in
mov
sbbl
sub
outsb
lea
cmpsl
popa
testl
outsl
andb
outsl
sbb
ret
cmpsb
jae
sahf
sbb
cmp
and
jb
xorl
loope
out
mov
cmc
sub
xlat
push
aad
in
test
sti
dec
dec
fisubrs
xchg
inc
inc
repz
aaa
lods
inc
ss
push
cs
fwait
xchg
inc
xchg
adc
aas
subb
cmpsl
inc
mov
cmp
movsl
sub
mov
jge
mov
test
xchg
mov
xchg
xchg
sti
xchg
dec
sbbl
xor
shlb
pop
xor
pusha
inc
out
pop
lcall
ja
mov
lock
push
push
std
ret
mov
and
dec
inc
xchg
jmp
int3
adc
xor
fmuls
or
arpl
bound
push
or
and
jo
mov
or
adc
addr16
jbe
popf
sub
jl
and
fwait
xor
ror
fstpl
mov
mov
cmpsl
push
out
in
mov
fimuls
mov
push
ret
xlat
cs
rolb
out
loope
mov
jge
in
jno
or
das
ds
outsb
xchg
gs
xor
inc
dec
xor
je
xor
inc
mov
mov
lods
ss
inc
jno
inc
inc
xlat
lods
xor
cmpsl
sub
dec
loopne
clc
jns
and
mov
dec
adc
mov
and
xchg
decb
enter
and
xchg
xor
mov
ds
loopne
pop
dec
xor
or
sbb
mov
xchg
pop
mov
das
inc
hlt
mov
inc
mov
cld
mov
fnstsw
push
mov
pop
adc
xor
sbb
xchg
push
int3
addr16
jg
imul
ja
xchg
and
mov
mov
jecxz
mov
add
setl
jnp
loop
push
divb
frstor
xor
movsl
repz
mov
ror
mov
sarb
mov
jae
mov
mov
sbb
ja
loopne
inc
push
enter
push
rolb
ret
mov
and
adc
aam
pop
pop
sbb
jp
nop
shll
les
ret
subl
in
jle
test
pop
mov
aam
pushf
jge
ret
mov
lret
sub
jle
push
ficomps
cmp
repz
imulb
lcall
jnp
mov
gs
push
and
sahf
cmp
mov
xorl
push
xor
scas
sbb
ljmp
hlt
dec
adc
test
shlb
loope
push
xlat
sar
std
jo
adc
test
pop
add
and
shlb
xchg
jns
sub
fsubl
int3
nop
cmp
lret
mov
mov
jl
pop
aas
push
cmp
inc
pop
push
aas
add
stc
int3
inc
rcl
fs
adc
push
xor
js
rcrb
out
es
adc
add
or
pop
out
push
jmp
inc
sbb
loope
sbb
aaa
pusha
cld
in
jecxz
pop
and
loopne
mov
div
jb
ficompl
or
jmp
sbb
push
repnz
xor
mov
sbb
shl
pop
xlat
sub
mov
mov
push
dec
stos
and
pop
mov
mov
xor
pop
imul
add
and
jno
into
sbb
repz
cmpsl
aas
movsl
repnz
ss
or
sahf
push
cmc
push
icebp
fdivrp
jae
jo
addr16
dec
cmpsl
jae
inc
cli
inc
outsl
mov
inc
call
jge
jnp
lret
cli
fwait
and
push
mov
cmc
les
mov
jno
pop
cmp
xor
and
or
xor
dec
cmpsl
into
jne
jmp
pushf
sarb
mov
pop
dec
xor
mov
inc
or
aad
stos
lods
std
mov
movsl
testb
into
sub
dec
mov
sbb
jne
xor
imul
jl
mov
aam
in
pop
and
pop
iret
enter
mov
mov
data16
scas
aad
jcxz
xchg
push
out
outsl
mov
dec
in
mov
rol
push
icebp
xchg
fs
test
scas
cmpb
lret
sbb
mov
sbb
mov
cmpsl
add
mov
jecxz
lea
pop
testl
mov
mov
out
pop
cltd
mov
cmp
adc
test
sub
stc
ja
insb
pop
ljmp
and
mov
fsubrl
adc
loopne
repz
cwtl
fwait
lds
pusha
outsb
inc
mov
mov
xor
subb
mov
add
sbb
xor
mov
fldcw
and
mov
mov
cmp
jno
inc
scas
dec
fildl
lahf
jae
pop
sub
mov
shll
mov
jns
jb
icebp
cmp
sarl
xchg
and
add
lahf
fildll
js
add
pop
xchg
xchg
dec
rcrl
into
xchg
push
ret
pop
add
popa
jno
xchg
sti
mov
in
dec
push
pop
addr16
push
cmp
adc
pusha
pop
adc
mov
loopne
inc
dec
push
fisttpll
sbb
clc
addr16
mov
repz
add
test
and
jge
divb
les
xor
xlat
jo
mov
inc
xor
sbb
jb
dec
mov
or
pop
xor
idiv
out
inc
daa
push
cs
push
outsl
jmp
push
sbb
addl
add
sub
adc
or
mov
sti
pop
das
pop
ljmp
inc
inc
push
cmpsl
lcall
aaa
cli
movsl
clc
jb
ss
sub
fucomi
mov
movsl
ljmp
loopne
bnd
mov
cld
or
mov
cmp
mov
addl
pop
and
add
mov
ds
jo
dec
adc
lret
nop
icebp
mov
fcomip
xacquire
add
aam
loop
and
pop
mov
inc
divl
loopne
stc
sub
mov
inc
push
and
sysret
xchg
push
pop
xlat
out
dec
lahf
insb
push
mov
hlt
cmp
loope
adc
jp
sub
mov
xor
int
scas
dec
ret
pusha
pushf
fcmovb
mov
fcoml
test
push
xchg
cmp
sbb
mov
aad
push
mov
mov
sbb
fisubl
lcall
gs
xchg
or
pop
js
test
pushl
sub
out
mov
push
jl
sub
mov
bound
hlt
mov
jno
cmp
insb
nop
pop
dec
cltd
mov
sub
jecxz
sub
push
lods
sbb
testb
into
lret
fcmovnb
cmpsb
pop
or
scas
pusha
sub
cmp
sub
jb
or
jge
fs
cmp
mov
push
mov
insl
call
add
ficomps
xlat
into
xchg
aad
bound
mov
inc
aad
mov
jg
mov
in
cs
mov
mov
fwait
sub
sub
push
pop
fmul
sti
jmp
or
jmp
pop
sub
sbb
jge
jg
movl
pusha
mov
push
and
sbb
xor
scas
or
mov
shlb
xor
lods
jne,pt
insb
insl
inc
adc
jmp
lahf
jnp
adc
push
ss
push
fs
add
test
test
clc
fwait
lahf
scas
push
das
pop
xchg
fwait
scas
data16
jecxz
mov
out
test
mov
jo
jbe
int
and
mov
mov
pop
mov
fdivrl
jp
clc
push
sbb
pop
mov
mov
xchg
pop
mov
aam
adc
pop
xchg
mov
cmp
xor
fucom
rol
mov
dec
mov
dec
repz
jle
outsl
pop
sahf
dec
mov
sub
cmp
or
xchg
pop
jle
mov
add
pop
and
inc
xor
and
mov
mov
inc
shrl
jge
loopne
inc
dec
test
adc
dec
aad
mov
pop
cmp
add
les
sbb
test
or
add
mov
test
adc
flds
fbld
xor
xchg
mov
aam
push
ret
mov
cmp
hlt
mov
push
test
stos
ljmp
jge
dec
push
push
xchg
push
icebp
imul
repz
dec
dec
pop
out
jp
sub
adc
sub
or
mov
cmp
inc
fistl
inc
not
ficoml
adc
fiadds
incl
mov
add
push
in
ss
or
or
int3
mov
stc
mov
xor
fmull
dec
scas
out
sbb
push
fstpl
pop
subl
jl
pop
stos
mov
in
or
and
adc
pop
gs
cmpsl
stos
jp
push
mov
fsubl
shll
xchg
sahf
jb
fists
fdivs
mov
mov
or
xorb
mov
cmpsb
jmp
rorb
inc
gs
sarb
aaa
loop
inc
daa
test
sub
outsl
jge
xchg
mov
push
mov
sbb
mov
cmp
sbb
std
or
mov
aaa
fsub
pop
testb
jge
xchg
xor
jg
stos
dec
pop
stc
es
mov
enter
mov
mov
xchg
out
and
sbb
lret
xchg
sub
pop
dec
shrb
stc
cmp
cmp
clc
mov
imul
jno
sbb
clc
mov
es
mov
pop
sbb
cmc
lock
rorb
fwait
adc
add
movl
push
and
inc
mov
adc
or
nop
rorb
cmc
xchg
or
xor
lods
testb
mov
pop
cmpsl
or
jae
cli
sahf
add
cmc
fdivs
fadds
sub
pop
fstp
add
out
jae
sarl
inc
jmp
adc
ficompl
inc
ret
sbb
iret
les
sarb
movsl
push
mov
mov
mov
inc
test
jbe
xor
and
stos
pusha
outsb
push
rorl
negl
push
inc
adc
cmp
inc
push
pusha
insl
sub
sbb
lret
mov
or
sub
insl
sub
sub
out
in
daa
mov
jp
fsts
mov
mov
insb
outsl
dec
xchg
mov
dec
scas
mov
into
sub
adc
dec
cwtd
js
mov
sarb
repz
inc
hlt
cmp
lahf
xor
sub
jbe
sbb
daa
enter
aas
addr16
repnz
call
xor
out
pop
mov
mov
push
nop
fwait
lods
jne
mov
xchg
dec
pop
inc
and
aas
daa
stos
test
pop
jno
enter
lret
lods
add
inc
dec
repz
inc
push
pop
fcomps
popf
cmp
mov
jp
mov
adc
jo
dec
mov
push
nop
shll
data16
adc
sbb
xchg
in
jb
repz
jno
adc
pop
ffreep
xor
add
clc
xlat
push
and
inc
in
push
cmpsb
fisubs
and
cmc
jmp
inc
fwait
inc
aam
dec
xor
push
and
mov
jmp
mov
int
pusha
test
inc
pop
push
bound
stos
push
sub
inc
xor
pop
pop
lea
into
pop
ret
repnz
adc
dec
cmp
shll
or
or
imul
fldl
sub
iret
push
rorb
sbb
dec
pop
add
jbe
adc
sysexit
fstl
pop
sbb
ds
inc
shll
jnp
or
pusha
enter
shl
in
jge
sub
and
pop
cmpsb
rclb
add
mov
jae
sbb
fists
outsl
xchg
xrelease
inc
xchg
pop
mov
sub
sub
push
mov
lods
xor
mov
out
xchg
jmp
pusha
adc
arpl
push
mov
daa
pop
popa
ret
cmpsb
dec
popf
out
adc
xor
xchg
pop
mov
in
mov
lret
jmp
mov
cmc
fs
xchg
inc
cmc
xor
cmp
jns
xchg
iret
jmp
fisttpll
out
and
pop
dec
sti
adc
mov
je
mov
pop
dec
sbb
enter
pop
sub
sbb
mov
add
push
dec
loope
inc
aam
push
pusha
outsb
clc
xchg
fisubl
movsb
ret
cmpsb
stc
xchg
out
xchg
je
lret
imull
dec
push
push
inc
xor
adc
adc
cmp
push
dec
xchg
in
adc
lcall
push
out
jp
add
out
lret
mov
jl
aaa
sahf
aam
mov
into
loopne
push
pop
scas
xchg
and
xchg
pop
pop
mov
std
inc
ficoms
inc
movsb
lock
out
inc
lss
and
adc
test
out
xchg
mov
cmp
mov
aad
mov
stc
adc
mov
push
scas
xchg
add
mov
bound
repnz
push
ja
jbe
cli
sub
ds
push
cwtl
not
int
fstpt
test
lock
xor
xchg
cmpsb
je
dec
and
fstpt
insl
push
inc
pop
call
dec
cmp
adc
mov
or
push
cmpb
outsl
push
sbb
xlat
sbb
mov
fnstenv
idivl
andb
je
inc
sub
cs
sti
out
mov
shrl
push
enter
ret
mov
insl
pop
xchg
rcr
mov
scas
mov
pusha
cmp
add
out
pop
clc
or
lahf
imul
xor
jmp
ljmp
imul
mov
add
jmpw
cwtl
movsl
xor
mov
adc
or
cli
xor
ljmp
repz
arpl
mov
cmpsb
je
add
jo
repnz
dec
inc
mov
dec
scas
dec
and
addr16
sti
ljmp
lods
xor
addr16
pop
shlb
mov
lock
gs
adc
xchg
in
xchg
ja
xor
mov
movsb
lock
pop
jl
sahf
ja
and
xrelease
pop
aaa
mov
pop
xor
jb
xor
shl
dec
cld
mov
xlat
rclb
push
jne
das
imul
cmpsl
int3
jno
hlt
dec
fs
or
mov
or
cwtl
jge
mov
popf
lods
sub
ljmp
aad
movaps
cmp
mov
enter
clc
hlt
jl
add
sub
mov
fmuls
or
cmpsl
into
pop
ja
jmp
jae
pushl
leave
adc
adc
shlb
pop
push
mov
add
shlb
cmpl
or
push
inc
addr16
or
andl
sbb
cli
push
push
cmc
test
out
lret
mov
mov
mov
idiv
stos
icebp
ret
shrb
fsts
out
outsb
sub
add
outsl
jb
popa
pop
sahf
sbb
inc
popa
pop
jo
sbb
xchg
push
pop
rcr
loope
cmp
and
fnstcw
jnp
dec
loop
mov
fcompl
push
in
and
mov
pop
mov
dec
movsl
sbbb
and
lcall
mov
and
mov
jae
mov
std
dec
lock
scas
jo
cmpb
insl
mov
mov
pop
jp
cmp
push
cli
inc
pusha
lods
push
jbe
arpl
xor
sbb
hlt
push
dec
xchg
insl
outsl
sbb
imul
mov
out
test
sub
mov
int
cmpsb
pop
in
or
mov
mov
or
aad
inc
fbstp
dec
mov
int3
imul
clc
mov
sbbl
cmp
cmp
out
iret
mov
ds
jg
push
imul
sub
ds
stos
jno
ja
mov
sbb
mov
icebp
push
popa
call
shl
xor
mov
cmp
das
jecxz
adc
icebp
js
sbb
sub
pusha
repnz
pushf
sub
rorb
sbb
cmp
out
add
ds
dec
out
les
push
adc
int3
dec
mov
adcb
xchg
les
out
fmuls
dec
mov
adc
jg
jp
pop
sbb
mov
push
mov
add
xchg
arpl
sub
repnz
adc
dec
jb
fsubs
outsb
imul
mov
stos
call
push
lahf
outsb
jns
je
dec
stos
loopne
jge
loope
neg
cwtl
aas
cmpsl
notl
enter
jnp
pop
sahf
mov
xchg
mov
cmp
into
and
or
call
movsb
dec
nop
dec
xorb
pop
pop
inc
test
imull
adc
js
idiv
mov
xlat
cmc
xchg
insl
ja
mov
cld
shlb
mov
xchg
mov
stc
flds
ret
jmp
mov
pop
loope
or
push
aam
ljmp
lret
ss
push
jle
scas
fsubrl
jp
jp
jne,pn
xor
mov
inc
pusha
cmp
mov
fisttpl
adc
and
int3
push
or
dec
inc
xlat
cltd
fs
aas
pop
adc
insl
adc
mov
bound
popa
aaa
cmpsb
inc
or
adc
ja
xchg
mov
cli
mov
int
mov
and
xor
jo
imul
dec
or
in
xchg
ret
addr16
jg
adc
adc
fs
not
adc
fs
lret
das
jg
out
orl
jge
inc
dec
or
es
push
fidivs
mov
in
mov
int
xlat
and
out
test
lcall
lods
inc
or
call
xor
lcall
popa
xchg
xchg
inc
in
lcall
movsb
pop
pusha
jecxz
push
dec
and
aad
div
pop
lock
mov
imul
and
xchg
cwtl
xchg
and
leave
mov
pusha
push
pop
bound
xor
stc
sub
cli
push
aam
shl
lods
mov
add
mov
loopne
icebp
pushf
lods
inc
cmp
mov
test
lea
cmc
xchg
loop
test
mov
cmpsl
dec
or
add
adc
gs
xchg
jb
pop
mov
aas
leave
stos
daa
jnp
jbe
pop
sbb
andb
sub
pop
int3
pop
outsb
inc
stc
loopne
dec
adc
jg
pop
pop
imul
or
popf
lret
cmpsl
push
out
mov
cmp
cld
mov
pop
push
xlat
mov
ret
rcll
xchg
fstps
les
pop
add
mov
ja
imul
popf
xor
dec
mov
mov
test
clc
je
fldl
jb
fisttpl
xlat
fsubs
mov
mov
aaa
xchg
imul
xchg
aaa
js
sub
gs
push
fnstenv
push
ret
jae
dec
push
xchg
clc
movb
push
addr16
scas
push
cmp
jns
outsl
loopne
ja
cmp
dec
ret
adc
das
jp
aam
pop
cmc
fs
xor
xchg
xor
loopne
mov
add
pop
and
popf
shrb
mov
es
sbb
fst
lea
add
lods
fisubs
and
out
subb
xchg
movsl
xor
inc
xchg
dec
ljmp
lock
cltd
fbld
dec
cmp
lret
xor
jmp
popa
push
xchg
pop
out
fmuls
push
test
jbe
jge
push
mov
adc
xchg
int
and
and
cmp
out
jae
addr16
pop
fsubl
push
iret
mov
sbb
call
adc
and
cmpsb
mov
and
fisttpll
mov
cltd
dec
rclb
leave
popf
jle
lods
aad
dec
orb
scas
lea
mov
fldl
ret
sbb
jp
aas
mov
sub
mov
inc
jp
call
sub
inc
in
xor
cmc
sub
jb
and
fdivp
jmp
xor
fidivrl
lock
jmp
jo
push
jbe
ror
xchg
leave
outsl
xchg
push
pop
cmp
pop
pop
sbbb
mov
add
in
dec
adc
addr16
or
call
pop
clc
xchg
es
in
xchg
loop
je
dec
cmpsl
mov
test
addl
sbb
aad
mov
imulb
mov
rolb
pop
jle
or
add
fildl
xor
jne
sarl
pop
les
push
out
jecxz
dec
sub
fisubrl
std
in
popa
addr16
pushf
test
xorl
lcall
jb
out
jns
push
push
adc
jne
stc
jae
stos
adc
sbb
ds
and
pop
in
das
test
out
dec
outsl
and
pop
pop
ss
dec
into
lock
cmp
jo
cmpsl
dec
es
lsl
pop
mov
jno
jne
sub
xor
lods
fiadds
xchg
scas
fisubrs
xor
push
fisttps
iret
jp
bound
aad
and
mov
mov
mov
and
push
js
dec
mov
jmp
sarb
and
in
ret
vpandn
xor
mov
es
push
add
push
pusha
inc
je
int
sar
divl
bound
icebp
imul
xor
mov
jg
movl
lods
out
test
rorb
cmp
jl
hlt
mov
jb
xor
push
sub
jb
jle
pop
mov
mov
lret
jnp
frstor
sub
les
sahf
sbb
ret
inc
add
jge
neg
or
mov
add
inc
push
mov
loop
dec
lea
lcall
jp
addr16
sbb
mov
stos
je
xlat
push
cmp
repz
dec
push
push
inc
or
stos
lea
notb
sub
insb
inc
cmc
inc
adc
daa
repnz
lea
mov
sub
ss
dec
mov
mov
push
adc
xor
add
inc
inc
fcmovb
xchg
fs
mov
add
iret
jl
jecxz
movsb
filds
cmp
aaa
xor
jle
cld
bound
add
dec
inc
ljmp
iret
ja
dec
int
nop
sarb
xchg
inc
outsl
into
xor
addl
aas
int3
bound
sahf
stc
mov
pop
mov
bound
in
stos
fisttpll
push
ror
jp
jge
stos
dec
sbb
das
hlt
mov
cmp
inc
push
std
out
dec
outsb
pop
test
dec
into
mov
mov
xor
jno
shl
movsb
fdiv
mov
fsubrs
jns
mov
adc
je
push
jp
shl
lea
lcall
jmp
mov
cmp
jmp
inc
add
sti
adc
scas
mov
xchg
decl
addps
dec
xor
jne
xor
and
fistpll
cmp
and
sub
push
cld
mov
out
add
jle
mov
xchg
pushf
loop
lahf
cmpsb
outsl
mov
adcl
jge
mov
cmpsl
outsl
mull
dec
mov
ds
add
xchg
pop
ret
inc
cmp
mov
out
dec
mov
sbb
fwait
sbb
xchg
movsb
data16
aam
jno
test
xor
cmp
or
mov
cli
les
jno
inc
push
les
loopne
arpl
jmp
lcall
dec
lcall
inc
popf
pop
ds
andb
ds
fucom
and
sbb
sbb
dec
ss
push
push
cmpsl
sbb
bound
data16
mov
rcpps
sbb
stos
mov
jnp
sahf
jl
lods
dec
push
and
xor
sbb
mov
mov
and
xor
movsb
xor
lcall
repz
sbb
test
sub
dec
cltd
insb
cwtl
leave
pusha
insl
imul
push
call
stos
cmp
jns
lea
dec
xor
adc
sub
fwait
mov
outsb
adc
push
pop
pop
and
mov
test
fadds
addr16
xor
std
mov
lods
cwtl
mov
and
and
shrb
sub
adc
jo
mov
or
cli
jbe
int3
out
aad
mov
aam
mov
dec
or
inc
or
push
sub
imul
addl
mov
mov
loopne
mov
add
jge
fstpt
adc
arpl
out
xchg
jno,pt
pop
push
pop
and
xchg
jmp
pop
jg
sub
fldt
lods
dec
jne
loopne
xor
push
push
stos
divb
dec
sahf
add
mov
xorb
mov
out
loop
insb
cmp
jno
dec
sbb
cmc
frstor
mov
in
mov
mov
out
lret
mov
cmp
jae
aaa
adc
xchg
or
insl
sbb
mov
mul
mov
fsubrs
int3
iret
sbb
test
leave
xor
adc
das
fsubrl
and
clc
cmpsl
scas
sahf
push
popa
mov
pop
int
or
fcomps
dec
push
out
mov
adc
flds
sub
add
xchg
ljmp
in
add
push
cld
jo
out
mov
sbb
xchg
hlt
push
dec
xor
dec
movsb
std
mov
out
data16
ljmp
sub
or
xchg
lods
outsb
out
fld
cmp
mov
gs
fnstsw
divl
adc
xchg
push
mov
ret
cltd
cmp
dec
fisubrl
cmpsb
out
lea
mov
or
mov
jp
push
sbb
lock
adc
scas
dec
jmp
int
in
dec
push
jg
fwait
lods
ds
lcall
ljmp
mov
inc
jno
mov
and
mov
test
adc
sahf
jae
std
inc
mov
xor
push
scas
push
xor
sub
fisubs
jge
dec
pop
pop
fsubr
mov
inc
cmp
out
sub
xchg
test
sarl
pop
jmp
mov
lahf
cltd
mov
rcrb
add
shr
lds
inc
or
shr
lret
mov
rorl
mov
add
mov
nop
imulb
mov
loopne
mov
ljmp
mov
push
sub
fists
data16
mov
jecxz
lods
lods
mov
pop
xor
in
lods
jae
cwtl
vrcpss
xchg
pusha
jo
aam
cmp
adc
sub
mov
scas
pop
popf
ret
mov
and
jnp
dec
inc
jae
ds
mov
jno
loop
sub
mov
xchg
andl
pop
pop
xchg
push
test
adcb
cmp
sti
inc
ficoml
test
add
pushf
div
lret
adc
loopne
cmpsb
push
sbb
sub
xchg
cs
ret
cmpsb
and
jg
or
lret
mov
dec
push
add
outsb
icebp
sub
inc
lcall
mov
loop
or
in
outsb
dec
fldt
xchg
dec
xchg
int
or
push
int3
dec
in
inc
sbb
lock
aad
push
adc
lods
lahf
and
xchg
xchg
jmp
jle
mov
jo
out
ss
or
adc
in
dec
call
je
mov
cltd
sarb
test
loope
sub
orb
arpl
push
out
xchg
out
add
pop
sub
ret
cli
mov
data16
cwtl
dec
cmp
mov
sahf
pop
inc
test
dec
jns
mov
and
adc
ds
dec
inc
fxch
imul
rcrl
mov
push
adc
push
push
ret
clc
jl
pop
cld
repz
addr16
fwait
gs
sbb
adc
mov
movsb
fidivl
cld
jmp
in
cmc
stc
shl
loope
jge
in
fcmovbe
inc
addl
push
pop
icebp
enter
nop
mov
outsb
mov
xchg
sbb
adc
cmp
bound
ret
clc
pop
xor
stos
imul
mov
js
addl
jb
adc
mov
into
mov
mov
arpl
inc
in
loope
xchg
add
fadd
fcomps
pop
push
xchg
adcb
inc
testl
insl
add
dec
ret
inc
daa
adc
adc
shll
movsb
js
push
popa
inc
cwtl
js
jp
push
cwtl
mov
mov
in
inc
push
stos
fidivrs
lcall
mov
and
iret
loope
jle
pop
fldl
dec
js
je
and
adc
mov
lods
push
loopne
adc
add
push
loope
mov
jno
mov
loopne
popf
mov
fcompl
in
int
jae
inc
xor
pushf
jb
and
inc
xchg
or
dec
mov
mov
mov
xchg
fists
dec
lds
les
push
fdivl
pop
cmp
inc
push
cmp
push
fcmovnu
lahf
mov
imul
insl
or
je
stc
push
lds
xchg
mov
das
test
dec
bound
fmuls
push
cmpsl
sbb
pop
add
fcoml
mov
shlb
push
enter
pop
dec
add
mov
xlat
in
insl
aaa
icebp
sbb
sbbb
add
in
mov
fs
cmpb
sbb
enter
rclb
or
jle
mov
andps
sbb
and
mov
rclb
mov
leave
leave
push
pop
push
addr16
or
jmp
cmc
pop
mov
and
or
data16
sbb
sub
mov
repnz
xchg
push
mov
fxch
pop
lcall
ds
lea
jno
dec
loope
inc
andb
sub
test
lods
pop
sub
les
and
pop
mov
mov
jae
pushf
sub
fwait
jnp
inc
cmp
imul
lods
or
mov
xlat
xor
xchg
add
cld
aam
and
add
pop
add
dec
je
pop
bnd
mov
ficoms
je,pt
xchg
js
mov
pop
hlt
cmc
adc
out
jmp
ja
xor
add
sbb
lods
cmp
xorl
into
sbb
stos
dec
shll
sub
xchg
aam
and
mov
lret
sub
or
inc
and
push
enter
inc
out
in
std
cmp
xor
inc
mov
out
xchg
in
mov
jl
dec
icebp
cltd
push
adc
push
jp
es
das
and
cmp
cwtl
dec
fld1
add
adc
das
mov
mov
mov
or
fmulp
jo
jp
leave
mov
push
inc
mov
enter
repz
sub
test
ret
mov
xchg
push
lret
xor
and
jp
jmp
xchg
pop
scas
and
iret
je
aas
pop
xlat
repz
pop
mov
cmc
mov
add
in
dec
cmpb
dec
cmpb
xchg
mov
test
sbb
xor
pop
jg
lea
mov
dec
lret
jle
pop
add
testl
loopne
dec
icebp
out
jge
repz
adc
add
mov
out
pop
ret
push
dec
or
mov
and
xchg
add
cld
pop
and
mov
in
jge
packssdw
inc
sbb
lret
cld
fildl
arpl
cwtl
mov
xchg
test
xchg
add
fs
stos
sbb
mov
sub
dec
test
incb
int
sub
push
jle
mov
jl
jno
xchg
sub
adc
mulb
test
mov
sub
dec
jbe
es
mov
xor
mov
mov
imul
add
sbb
fdivrs
push
mov
inc
xchg
fs
jbe
out
pop
xchg
pop
inc
push
or
push
xor
outsb
sbb
iret
push
push
and
push
push
das
mov
lcall
jg
in
add
dec
xchg
lock
cmp
or
icebp
and
mov
sub
repnz
pop
mov
mov
push
out
aaa
jns
subl
mov
hlt
je
sub
enter
andl
cmpsl
fidivs
daa
into
pop
das
sbb
jp
lods
push
scas
xor
fmull
into
xor
cmp
imul
add
or
lret
add
ds
jbe
push
mov
insb
jg
xlat
jle
arpl
lock
xchg
repz
dec
adc
repnz
imul
or
leave
sbb
test
movb
mov
cmpsb
mov
es
jae
cmp
iret
ret
clc
je
cmp
xlat
or
stos
hlt
sub
jne
enter
ljmp
mov
scas
xchg
mov
push
leave
mov
imul
bound
test
or
daa
and
lods
xlat
shrl
testl
loope
aam
orl
mov
cmp
std
lea
or
mov
fwait
icebp
mov
or
int
jp
insl
push
pop
aam
out
adcb
cmc
test
mov
mov
es
mov
mov
cmp
xor
mov
inc
add
mov
testl
pop
adc
mov
mov
inc
divb
fidivl
push
mov
jno
les
aad
mov
iret
pop
mov
push
pand
pop
xor
add
sbb
mov
or
fstpt
stc
cmc
scas
ds
sub
mov
mov
and
movsl
sbb
jnp
shlb
leave
movsb
jmp
stos
not
and
fsts
ret
push
cmpb
push
push
imull
mov
mov
in
add
es
adc
cmc
or
imul
or
xchg
xchg
lahf
add
xor
inc
xchg
jns
sbb
outsl
gs
pop
fidivrs
sub
inc
rorl
es
je
scas
xchg
js
jmp
jno
leave
rorl
sbb
out
ss
in
iret
push
pop
btsl
rorl
adc
sbb
mov
mov
lahf
push
cltd
push
cltd
mov
ret
cmpsb
shr
adc
cmpsl
push
push
sarl
shrl
repz
pop
andb
add
int3
pop
push
pop
pop
mov
adc
arpl
fbstp
and
lea
jno
fwait
adc
rcl
lret
popf
push
push
in
cmp
sbb
lods
dec
sub
xor
jmp
lods
sar
aas
scas
inc
push
add
in
add
sbb
pushf
add
inc
mov
add
mov
inc
cmc
inc
cmp
pop
sbb
into
scas
mov
inc
cwtl
and
dec
sbb
popf
in
lcall
in
inc
cmp
inc
movsl
mov
stos
or
in
repnz
mov
mov
dec
imul
push
sub
jp
mov
mov
xor
cmp
mov
fadds
inc
das
addr16
pop
in
mov
pushf
xchg
loop
rcrl
les
test
jl
mov
xchg
jmp
out
add
popf
jnp
jno
jbe
mov
call
movsl
sti
test
lret
sbb
pop
push
push
push
push
cmp
add
fldl
mov
xor
mov
inc
mov
jmp
jl
fcoml
sub
fnclex
pop
popf
in
cwtl
push
cwtl
mov
iret
sbb
roll
sub
mov
and
ljmp
adc
sbb
pusha
mov
shr
das
sub
std
mov
and
xchg
outsb
je
and
add
ds
hlt
lret
cmp
jno
cld
sub
xchg
nop
sbb
push
lret
xchg
imul
mov
test
add
dec
jbe
mov
icebp
fmuls
adc
mov
outsl
pop
fs
jns
in
stos
cmp
loopne
repz
mov
jnp
scas
dec
push
js
mov
fistl
jle
cmp
lret
adc
movhps
jecxz
jle
pop
loop
pop
jl
or
mov
das
or
popf
push
test
push
xorb
mov
sbb
mov
std
jg
push
or
cmpsb
cwtl
and
out
mov
mov
je
cmp
mov
xchg
jle
les
and
mov
dec
enter
mov
and
outsb
int3
jae
cmpsl
jg
cld
mov
icebp
add
push
and
movsb
daa
cmc
loopne
jle
push
test
fstl
mov
ret
int
mov
mov
in
adc
mov
lea
loopne
jmp
outsl
push
in
xchg
dec
xchg
pop
cmp
push
cmp
fldenv
dec
mov
js
les
imul
mov
ss
andb
push
and
dec
jns
sub
and
std
mov
add
mov
test
lcall
ljmp
repnz
rcrb
fdivs
imul
loopne
mov
sti
andb
push
and
inc
cld
mov
and
ds
jnp
mov
pushf
add
jg
ss
cli
aas
repnz
adc
jae
add
sbb
mov
imul
mov
int
cs
dec
and
pop
fists
cs
ficoms
data16
filds
xor
xor
dec
pop
leave
dec
sub
subb
xchg
loopne
adc
aas
add
push
daa
clc
add
pop
mov
xor
mov
jbe
mov
ja
cli
jge
ficompl
mov
aam
push
gs
pusha
mov
lahf
lods
xor
pop
pop
pop
push
maskmovq
pop
out
out
jl
fsubl
cs
sub
cmp
mov
test
rolb
xor
mov
fdivs
subb
sub
mov
cmp
shlb
add
icebp
call
sbb
xor
fildl
mov
fcomps
shr
push
mov
rclb
adc
inc
jge
fwait
mov
push
sbbb
call
lea
test
mov
cmp
pop
daa
int
pop
mov
je
arpl
stos
ret
and
add
icebp
cmp
lods
arpl
sub
mov
sbb
cmc
in
and
dec
cmp
sarb
addr16
inc
int3
mov
jmp
test
push
addr16
xchg
inc
movsl
fcoms
lea
lahf
xchg
out
xchg
lret
cmpsw
ror
fdivp
sbb
lret
repz
mov
out
jl
push
jge
push
mov
fidivs
dec
xor
mul
ja
cs
push
push
cmp
or
int3
sbb
insb
cmc
inc
inc
cmp
pop
dec
xor
ss
pop
gs
lahf
dec
rol
hlt
add
shl
xor
xor
dec
sbb
dec
out
mov
fmul
jp
test
add
or
sub
in
push
into
sbb
lret
jne
push
push
imul
ja
hlt
pusha
addr16
inc
sbb
mov
out
ja
add
pop
call
pushf
popa
stos
xor
push
push
in
pop
inc
imul
mov
movsl
lock
jb
adcb
push
dec
aad
ds
out
mov
dec
insb
xchg
cld
prefetch
or
jae
in
mov
fwait
jge
cmp
ret
and
mov
mov
push
lcall
std
inc
mov
leave
dec
loopne
push
mov
lods
out
mov
ret
dec
or
insl
lock
pop
push
mov
push
mov
lcall
ret
mov
imul
loopne
fmulp
imul
std
sbb
rclb
sbb
mov
and
ljmp
mov
js
mov
xchg
loope
lret
cmp
shl
jnp
rclb
xchg
dec
jmp
fs
hlt
mov
xchg
fstpl
jbe
adc
dec
cmp
imul
or
shlb
ret
out
pop
and
fsts
aad
in
fidivl
inc
xchg
jle
mov
mov
cmpl
loopne
out
mov
lods
xchg
dec
bound
add
xchg
xchg
es
out
stc
or
cmp
mov
push
in
in
cltd
scas
mov
aad
mov
inc
popf
mov
xor
mov
xor
fimuls
mov
dec
push
gs
xchg
aaa
push
daa
in
lahf
inc
push
inc
loopne
dec
and
pop
mov
int
pop
cwtl
shrl
add
xchg
push
pop
in
leave
push
insl
rcrl
cmp
xchg
cmp
inc
sbb
mov
jle
pushf
aaa
repz
mov
filds
hlt
cmp
and
shl
inc
cmpsl
inc
rorw
nop
jae
daa
xchg
stos
imul
dec
lock
enter
cli
fs
in
cmpsb
xchg
dec
sahf
pop
push
dec
into
sbb
inc
cltd
xor
popl
mov
cmp
insb
jp
and
and
mov
iret
aaa
mov
insb
les
insb
xchg
push
das
ja
add
in
add
adc
int3
dec
jno
fiadds
sbb
and
inc
je
inc
fdiv
rclb
aad
cmpsb
ss
in
movsb
sbb
sbb
mov
pop
and
pop
icebp
icebp
mov
fdivrs
dec
add
out
jne
lock
js
jae
or
rcrb
aad
push
mov
adcb
fistps
pop
xchg
je
sbb
pop
inc
mov
test
jmp
inc
cmc
lahf
pop
mov
inc
ficompl
pop
xor
and
fnstenv
push
mov
test
inc
cli
fstl
cmp
jmp
push
dec
cwtl
or
inc
push
fisttps
call
lret
push
lds
xor
int
iret
movsl
arpl
add
or
or
jp
test
hlt
push
out
dec
inc
add
loope
lds
in
rcrl
std
pop
mov
je
outsb
cs
not
jo
cmp
cmpsl
mov
stc
outsl
lcall
sbb
cmpsb
adc
sbb
daa
cmp
push
jg
ret
es
dec
mov
lret
jno,pt
xchg
sub
jno
in
jne
shl
jb
psubusw
jno
mov
cmpsl
pop
jmp
std
xchg
pop
pop
mov
pop
sbb
mov
inc
call
imul
jecxz
ljmp
mov
mov
pop
iret
outsl
mov
jno
fs
cmp
inc
dec
or
sahf
fcmove
dec
sub
adc
scas
repz
outsb
ja
add
lds
jbe
pop
sub
aam
rol
mov
fdivs
aam
mov
dec
aad
rclb
mov
lret
xchg
pop
fsts
inc
fwait
mov
cmp
mov
inc
mov
mov
sbb
push
mov
xor
add
cmp
add
pop
stos
sbb
pop
shrl
sub
pop
cmp
dec
mov
jg
es
es
mov
push
addr16
xor
aad
xchg
aam
inc
mov
pop
xor
adc
mov
pop
mov
sbb
mov
sbbl
int3
xchg
in
sbb
arpl
xchg
add
stos
xchg
test
cmp
scas
adc
and
movsb
hlt
push
mov
ja
xorl
sub
dec
push
stc
gs
mov
dec
jge
cmp
xchg
jecxz
test
cs
repz
jmp
std
jbe
sbb
pushf
jbe
xchg
sbb
mov
cmpl
push
add
data16
push
test
dec
cltd
push
filds
dec
loopne
push
push
mov
in
sbb
fcomip
xlat
add
cmp
push
jns
mov
fadd
in
popa
jns
jmp
xor
inc
aad
jl
jb
fists
aam
int
pop
xchg
jne
adc
inc
enter
cs
adc
mulb
xor
pusha
filds
cmc
xchg
mov
fistpl
jnp
icebp
xchg
inc
lcall
mov
push
ds
rcrb
sub
sbb
jp
xchg
cmpsl
push
pop
int3
lds
lods
popa
pop
mov
cwtl
dec
pusha
sbb
lods
imul
inc
xor
push
and
daa
mov
les
push
and
inc
clc
add
jl
sbb
push
jnp
aad
lea
int
divb
xor
xor
jp
xorl
mov
adc
sub
add
insb
fucomi
xchg
jmp
outsb
jbe
dec
dec
psrlw
sub
in
popf
insl
sub
jnp
jb
fnstcw
popa
jo
xchg
jecxz
push
das
ret
dec
adc
xchg
ds
cwtl
pop
adc
scas
mov
mov
cmp
jmp
lret
and
cli
aam
pusha
mov
and
cmp
jg
adc
sub
pusha
cmp
cmp
cmpsb
push
out
cmp
iret
jp
or
push
mov
imul
jnp
std
inc
mov
insl
rorb
mov
xchg
mov
and
shlb
addr16
lods
cmp
xchg
ret
sub
push
push
xor
outsb
pop
mov
xchg
stos
add
shlb
or
push
mov
daa
stos
xchg
test
or
add
inc
lds
fcmovb
cmp
xor
mov
pop
adc
negb
mov
xchg
mov
pop
pop
ret
int
pop
filds
and
add
ds
sbb
xchg
inc
sub
inc
lock
aas
mov
mov
xor
add
mov
adc
test
pop
fbld
mov
fwait
int3
adc
mov
movsl
inc
sub
push
fmuls
and
cltd
dec
mov
das
push
xchg
test
jp
movsl
inc
arpl
fiadds
sbb
jno
xchg
lret
fiadds
ret
fwait
ret
sbb
push
sub
gs
mov
es
clc
mov
int
adc
sahf
push
pop
nop
lret
scas
aad
add
movsl
xchg
aas
lock
insb
movsl
xor
xor
test
dec
jae
jecxz
add
add
insb
ret
mov
adc
in
cmpsb
inc
jne
push
mov
aam
mov
outsl
inc
imul
scas
fcmovnbe
rcrb
test
adc
jge
fstpl
aas
adc
xor
pop
xor
xlat
jns
xchg
or
fstp
sbb
sub
pushf
iret
out
xchg
int
fwait
inc
mov
xchg
inc
sbb
in
sbb
arpl
jnp
jne
lock
mov
or
fisttpll
xor
dec
dec
clc
js
adc
mov
pop
fcomi
ja
loope
stos
add
xchg
mov
xlat
inc
xor
jo
jbe
add
outsl
out
or
cmp
sub
mov
repz
sbb
cmp
ror
sbb
push
mov
or
inc
stos
adc
dec
popa
daa
mov
dec
adc
lcall
lahf
xor
iret
cmp
push
clc
pop
sbb
js
cmp
xchg
mov
rclb
dec
scas
or
add
insl
cmpsb
cmp
jmp
sub
je
imulb
out
imul
pop
inc
shll
dec
in
daa
sub
in
and
xchg
xor
push
jo
inc
xchg
daa
nop
adc
pop
jmp
pusha
insl
mov
aaa
push
sub
shrb
out
inc
shrb
imul
cmp
in
mov
add
mov
jno
dec
xchg
fcoms
mov
pop
int3
in
jp
or
inc
int3
jle
sahf
fs
xchg
dec
and
inc
div
aad
repnz
cmp
xor
and
jmp
or
movb
fbstp
js
push
test
lock
push
es
cmp
repnz
insb
insb
inc
xchg
outsl
out
pop
cmc
mov
imul
jecxz
daa
push
ds
sahf
push
mov
in
outsb
test
imul
in
fsubr
push
lret
add
sbb
cmp
and
adc
dec
dec
stos
insl
test
sub
sbb
leave
pop
mov
lret
in
aas
mov
loope
jo
test
lret
cmp
dec
fiadds
dec
sbb
lret
or
lods
pop
adc
fstpl
out
jb
xor
push
pop
loop
mov
lret
jmp
fwait
cmpsb
and
repz
sbb
pushf
xchg
scas
sbb
lods
ret
mov
lret
mov
jbe
fsubrs
mov
das
out
push
dec
fwait
in
ror
nop
xchg
mov
test
sub
sub
dec
mov
outsb
xor
sub
bound
adc
cltd
mov
add
pop
scas
shrl
sahf
cli
mov
pop
hlt
scas
cmpsl
stos
mov
inc
xor
jecxz
jge
aas
sti
xlat
cmp
jp
lea
stc
sti
repz
fucomip
cmp
mov
xor
mov
xchg
ljmp
cmovae
pop
and
fsub
cwtl
int
mov
pop
shlb
sub
cmp
sti
popf
xchg
adc
comiss
pop
fsubr
or
jnp
movsb
inc
dec
push
mov
xor
clc
and
pop
add
leave
mov
imul
clc
lahf
inc
jns
push
shlb
xlat
pop
push
mov
dec
mov
inc
push
sub
lahf
inc
fldt
ret
shll
or
scas
jo
test
test
hlt
sbb
test
jecxz
rolb
rclb
aas
scas
fisttps
das
mov
push
aaa
inc
out
inc
shl
pop
out
jb
adc
mov
pop
push
bound
js
mov
dec
lods
add
mov
lahf
popf
or
gs
ja
mov
cmpl
xchg
inc
jnp
pop
xchg
shrb
inc
icebp
add
cmpsl
adc
and
mov
rep
mov
js
scas
das
inc
xchg
mov
add
inc
jmp
movsl
popl
mov
stos
int
adcb
dec
jecxz
out
sbb
pop
es
and
adcl
lea
fisttpll
popa
pop
out
lcall
sbb
push
or
and
int
lcall
sub
test
push
aaa
push
and
inc
add
pop
push
stc
or
je
sub
pop
jns
adc
xchg
dec
jl
jno
stos
push
stos
lahf
mov
add
fcmove
mov
sbb
movsb
mov
mov
orb
lcall
lret
loop
fbstp
mov
cmp
and
dec
pop
into
leave
mov
mov
outsb
mov
pushf
mov
and
inc
leave
cmpl
push
add
cld
test
daa
xchg
mul
xor
mov
sub
mov
es
cmpsb
add
jp
add
mov
jb
or
ret
pop
xchg
push
jae
push
lret
adc
xchg
mov
aad
sbb
imul
cmp
insl
dec
dec
imul
add
test
test
inc
add
fcmove
daa
jno
hlt
cmp
cmp
fcmovnbe
iret
jne
jae
lock
mov
sub
es
inc
je
mov
dec
jns
addr16
repz
movsl
inc
stos
fwait
pop
push
adc
adc
adc
inc
sub
pop
push
add
inc
dec
xor
mov
xor
fs
xchg
ss
push
mov
dec
mov
sub
lahf
out
leave
dec
inc
iret
call
lods
cmp
pop
loope
in
ljmp
and
and
adcb
sbb
adc
and
xlat
bound
cmpsb
sub
adc
xchg
mov
or
ljmp
xlat
je
cmp
test
adc
and
dec
xlat
push
jno
mov
clc
dec
jo
push
lahf
jl
sbb
cmp
jo
xchg
add
dec
add
lret
jno
xchg
xorb
add
test
jecxz
pop
roll
xchg
repnz
mov
inc
pusha
push
int
frstor
mov
out
jno
jo
in
add
testl
out
stos
dec
sbbl
imul
push
iret
out
mov
mov
inc
decl
divl
pop
mov
pop
int3
jecxz
sub
push
cld
lret
xor
scas
fiaddl
ss
pop
cmp
stos
sbb
test
out
fstpt
xchg
cmp
mov
pop
add
movsl
lcall
scas
sbb
and
mov
pop
scas
call
mov
sbb
dec
xlat
sub
mov
push
mov
sbb
adc
push
cmc
cmp
adc
xchg
push
add
push
shr
out
cmpsl
test
int3
ret
pop
call
adc
adc
fldl
das
mov
jne
mov
clc
adc
and
iret
mov
mov
stos
repz
scas
or
rcrl
out
sub
js
mov
jo
out
xorb
pop
bound
dec
fstpl
mov
lahf
dec
cwtl
add
arpl
inc
dec
push
ja
sbb
mov
cmp
hlt
call
fcmove
pop
or
jp
inc
pop
loope
mov
je
faddl
xor
inc
aad
or
test
mov
jo
js
lcall
push
in
mov
xor
mov
adc
mov
repnz
ficoml
adc
mov
divl
cmpsb
lcall
insb
gs
dec
push
pop
pop
out
lds
filds
insb
dec
push
jmp
sub
bndldx
push
daa
mov
fistl
call
dec
xor
cmc
pop
push
popl
sbb
inc
cmp
fwait
sbb
inc
cwtl
fisubrl
iret
stos
push
push
adc
and
stc
push
xorb
ret
dec
movsl
fs
mov
shrl
dec
and
xor
ret
xchg
mov
lret
in
xchg
and
jp
push
jmp
inc
jmp
hlt
or
mov
scas
adc
push
enter
push
push
jns
cwtl
mov
cmp
das
fs
jne
xchg
sbb
fcompl
sbb
add
push
mov
sbb
xchg
stc
repnz
mov
cld
inc
cmpsb
subl
clc
das
xor
sub
sbb
dec
pop
xor
xor
les
fistpll
push
or
xchg
cld
sub
pop
mov
jmp
insb
repz
stos
or
cwtl
aaa
rcrb
sahf
mov
jecxz
pop
sahf
pusha
inc
ret
sub
sbb
rclb
xchg
push
sbb
pop
aam
test
js
rcrl
call
in
cmpsb
pop
gs
and
dec
xor
mov
cmp
stos
and
push
inc
or
inc
xchg
jo,pt
mov
lods
sub
cs
lock
movsb
mov
enter
arpl
mov
sbb
xor
insl
in
pusha
fcmovne
test
repnz
cmp
fldcw
push
jns
push
push
mov
push
test
mov
call
and
and
clc
sbb
cmp
hlt
push
nop
repz
cmp
lods
sti
sub
icebp
negl
rolb
fisubs
std
leave
jne
mov
or
pusha
mov
lock
inc
movsb
push
mov
lahf
jmp
movsl
mov
int3
in
jne,pn
cmc
nop
mov
push
stos
loope
sub
lret
rorl
sbb
mulb
loope
popf
push
cmp
dec
cmpsl
ljmp
mov
fs
out
ja
mov
jae
fisubrl
and
sbb
shlb
jns
cmp
adc
inc
jmp
aas
jmp
jecxz
pop
mov
mov
jg
or
add
repz
cmpsl
adc
es
fcom
in
dec
in
xor
addl
pop
popa
stos
adc
adc
das
add
jp
sub
mov
jge
dec
dec
dec
jg
dec
mov
mov
inc
pushf
subl
imul
sub
add
ljmp
mov
jno
ds
iret
jo
sub
ss
out
sub
xlat
shll
ror
cltd
mov
mov
jne
push
js
and
dec
push
sub
mov
sub
stos
std
out
push
inc
mov
add
or
add
push
in
xchg
ds
inc
sbb
imul
pop
ljmp
iret
adc
fsub
mov
adc
adc
add
dec
lret
mov
ret
sti
cmpb
mov
push
xchg
mov
sahf
pop
xchg
and
ds
xchg
scas
xor
dec
pusha
ret
cwtl
mov
push
inc
cmp
ficoms
cmp
addr16
call
int3
or
inc
or
jne
or
mov
aad
cmpl
nop
pop
jb
loopne
sar
add
and
mov
push
mov
mov
cwtl
cltd
rclb
mov
dec
andb
jp
aaa
lds
or
mov
inc
push
icebp
pop
inc
iret
mov
xor
cmp
xor
sbb
mov
lea
cmp
jp
jmp
jmp
push
mov
lcall
cmp
rorl
mov
xor
pop
add
cmp
mov
test
ror
push
mov
daa
out
inc
pop
jo
pushf
cmp
outsb
xlat
ss
jp
cs
inc
icebp
cltd
inc
sub
pop
sub
es
add
and
imul
outsl
ss
mov
push
test
xor
sbb
mov
rcrb
mov
cltd
xchg
xchg
inc
jae
adc
xchg
ret
adc
test
out
cmp
lds
pop
and
or
pushf
repz
or
xchg
in
xor
cmpsb
xor
xchg
pop
aad
lds
cld
adc
adc
cli
dec
lock
xchg
cld
enter
in
push
or
cs
or
mov
fwait
jne
sbb
sbb
cmp
dec
nop
lea
sub
cwtl
sub
cwtl
imul
repnz
pop
push
pop
dec
test
inc
les
cltd
jg
mov
movsl
shlb
rclb
mov
cmp
and
fadds
flds
cs
pop
mov
int
incb
jg
pop
sub
lea
add
stos
stos
sbb
subb
adc
test
imul
xchg
jno
mov
sbb
loop
movsb
mov
cmp
mov
nop
dec
hlt
and
popf
mov
jo
popa
ret
adc
inc
leave
adc
jle
movsb
pop
ret
push
sub
mov
mov
daa
shlb
xor
out
loopne
lock
or
subl
cmp
in
into
enter
cltd
adc
mov
mov
and
xchg
add
jecxz
aas
loop
pop
mov
testb
shlb
cmp
sbb
sub
mov
rorb
inc
adc
mov
out
dec
scas
sub
lret
or
jge
notb
pop
ret
rdmsr
cmpsb
movsl
orb
xchg
push
mov
iret
adc
lret
test
pusha
scas
mov
adc
data16
loope
mov
fucomp
enter
add
stos
loop
lods
insl
jo
roll
cmp
je
xchg
sub
add
pop
push
fdivrl
jg
insb
fcompl
inc
cmp
fdivs
jl
mov
pop
test
add
or
xlat
fsubrs
out
mov
shll
jmp
lret
fiaddl
lret
mov
sti
push
dec
data16
clc
sub
adc
fimuls
inc
jmp
or
data16
sbb
dec
cmpsl
mov
icebp
popa
push
mov
loop
cmpsl
pushf
adc
sub
mov
hlt
xlat
jp
add
outsb
xchg
add
cmp
mov
loopne
lods
rorl
sbb
inc
imul
iret
push
bnd
cmp
in
jo
cmp
je
pop
decl
fstpl
xchg
mov
adc
or
fwait
inc
pop
adc
dec
cmc
scas
xchg
outsl
gs
xor
lock
in
aad
popa
or
jns
pop
push
loope
fnop
nop
sahf
adc
jmp
push
xchg
jnp
lahf
mov
xchg
cmp
xchg
pop
dec
jge
sbb
mov
cld
bound
int3
cli
je
pop
xor
repnz
push
cwtl
mov
cmp
outsb
sahf
xchg
inc
mov
in
add
test
aam
outsb
dec
int3
sbb
sub
cmpsb
or
xor
sub
into
lea
movsl
cli
xchg
xchg
push
pop
ja
mov
mov
jecxz
cs
xchg
cmc
push
gs
adc
cmpsb
insl
mov
pop
cmp
mov
add
mov
push
sbb
xor
clc
loopne
ss
xchg
test
clc
orl
movsl
jmp
mov
test
and
adc
stos
aad
mov
fsts
fdivl
fsubr
cmp
push
mov
repz
das
aad
cwtl
fs
sti
mov
aaa
xor
pop
mov
xor
mov
test
mov
pop
sub
fwait
xchg
dec
int
fdivr
fcmovb
scas
call
pop
xor
cmp
push
xchg
and
mov
jb
mov
int
and
cwtl
jns
test
inc
ffreep
ret
sub
xchg
add
pop
xor
inc
inc
xor
es
jns
cmp
mov
xchg
outsb
and
mov
dec
ss
xchg
mov
xor
test
jo
cmc
inc
sub
jmp
mov
lds
inc
jnp
sti
inc
pop
inc
les
out
in
movsb
movsl
cmp
and
aad
xchg
das
inc
nopl
mov
ds
or
mov
jmp
cmp
jno
xor
pop
stc
dec
adc
mov
jg
les
into
les
mov
neg
cmpsl
out
test
and
pusha
jmp
ds
jl
push
addl
jae,pt
adc
lcall
lcall
or
cmpb
mov
cmpsl
xchg
out
jecxz
pushf
jae
and
adc
pop
je
push
jae
fcoms
push
aaa
testl
push
push
lods
xchg
push
and
xchg
ret
cmpsb
or
fdivrl
sub
pop
iret
pop
les
imul
push
in
jae
ss
fiadds
sub
insb
sarb
pop
xchg
shl
mov
push
sbb
ss
test
clc
subl
xor
xor
pusha
mov
jl
imul
repnz
icebp
iretw
or
push
or
mov
add
icebp
or
sbb
mov
jg
incb
inc
das
jmp
nop
es
pop
sbb
mov
scas
dec
mov
in
xchg
sahf
rorl
adc
fsubrs
vmovdqa
fisubrs
xchg
sub
xchg
jp
out
aam
mov
and
cmp
inc
jge
hlt
dec
add
call
aam
ret
aas
insl
bound
fistpll
mov
stos
xor
and
xor
sub
outsb
test
sbb
loopne
out
jle
psubb
outsl
push
cmpsl
jmp
sbb
ljmp
test
insb
stos
adc
stos
pop
fstps
or
aad
fsubrl
out
mov
push
stos
cwtl
je
inc
and
jnp
xchg
pop
cmp
divb
mov
into
scas
testl
aam
sub
cmc
sti
adc
inc
cmp
push
or
sub
sbb
stc
xlat
push
adc
xchg
out
jbe
ret
dec
cmp
sub
arpl
add
addr16
xor
out
lret
mov
and
adc
dec
insb
aad
in
cwtl
pop
dec
inc
insl
add
scas
pop
sbb
std
imul
clc
add
xchg
sti
add
push
ret
inc
and
mov
pop
pop
imul
and
sub
jbe
cs
lret
push
fwait
mov
adc
adc
cmp
fisubl
shrb
inc
fiadds
rorl
popf
jo
lcall
sub
dec
xor
mov
pop
pop
pop
dec
jae
leave
lock
push
ds
xor
leave
xchg
or
mov
mov
popf
push
mov
cmpsb
push
or
mov
pop
sub
sub
sbb
jnp
push
aaa
mov
pushf
clc
rorl
into
or
leave
out
fisttpll
seta
add
mov
nop
and
ret
into
push
lods
or
jle
or
movl
decb
int3
or
outsl
daa
imul
inc
push
jb
insb
ja
push
enter
mov
jb
add
jle
out
sbb
out
movsl
mov
adc
cld
push
adc
inc
fisubs
stos
adc
popa
mov
cmpsb
add
and
jns
jge
cmp
rorl
and
and
sbb
sarb
mov
mov
and
aam
or
sbb
fstpt
adc
push
lods
push
push
push
mov
mov
popf
xchg
je
jecxz
scas
mov
std
inc
enter
jg
divl
xchg
xor
mov
cmp
push
scas
xchg
mov
mov
pop
or
push
stc
jo
js
out
mov
test
mov
stos
insb
insl
sub
jg
cmp
out
and
lcall
cmp
cmp
ljmp
fisubrs
inc
fs
xchg
fistpll
into
cld
jns
loop
mov
stos
bound
add
int3
mov
cs
enter
add
and
ljmp
push
xor
jecxz
je
inc
shrl
mov
mov
jge
fldcw
xlat
push
sbb
test
adc
aad
ljmp
call
dec
push
lahf
and
cmp
cld
insb
and
pop
mov
jae
mov
sbb
xchg
jg
push
mov
inc
je
pop
sub
inc
outsb
nop
sub
ficompl
mov
hlt
je
rcl
dec
jae
enter
mov
adc
data16
jbe
xchg
mov
movl
jae
in
jle
add
js
and
add
loope
test
sbb
cmpsb
sub
das
push
in
add
inc
cmp
mov
push
lods
inc
addr16
int3
rcrl
test
ds
mov
int3
jbe
scas
lea
cmp
inc
adc
pop
xor
inc
mov
jge
adc
lods
in
sahf
mov
cmc
movsl
mov
jecxz
lods
outsb
sbb
jecxz
cwtl
xor
pop
lcall
jl
and
jo
and
scas
call
push
dec
lcall
ja
adc
imul
jmp
test
pop
xchg
call
push
fdivrl
push
mov
data16
pop
xlat
pop
sbb
addr16
xchg
jecxz
lea
push
jmp
insl
push
rcrb
cld
pop
xchg
dec
cmpsb
mov
iret
mov
mov
mov
pushl
dec
or
lock
add
aad
insl
arpl
push
jl
call
pop
ja
jno
jg
rclb
push
sub
dec
js
or
mov
test
mov
pop
adc
addr16
daa
sub
inc
arpl
data16
sub
aad
repnz
ret
out
test
loopne
mov
in
lods
movsl
adc
and
ror
scas
sub
sub
dec
jmp
mov
xor
push
in
shl
jge
push
add
jae
js
and
mov
mov
inc
push
add
pop
push
jmp
pop
fcomp
les
inc
lahf
lds
mov
dec
dec
jge
dec
stos
mov
mov
sarl
mov
xor
stos
addb
xor
push
fsts
jnp
or
fists
rclb
jno
sbb
ja
push
outsb
pushf
dec
sahf
cltd
mov
pop
repz
pop
out
sub
cmpsb
xchg
adc
mov
insb
mov
xorps
rorb
sarb
je
test
xchg
mov
xchg
xchg
or
inc
add
adc
rcl
es
or
inc
inc
loope
loopne
into
mov
lret
cltd
add
mov
sub
test
xor
outsl
out
inc
enter
and
ss
fldl
rorb
or
mov
inc
push
movsb
daa
add
xor
push
adc
or
imul
shlb
push
lods
loopne
std
adc
push
mov
xchg
add
lea
adc
lahf
scas
cwtl
adc
ret
xchg
mov
dec
lcall
add
mov
les
xchg
lcall
fnclex
cmp
dec
adc
pop
fcmove
je
or
jbe
mov
inc
test
mov
arpl
push
mov
sub
outsb
push
or
cmpsb
fwait
adc
daa
pop
addr16
imul
es
popf
xlat
inc
imul
movsl
cmp
cmp
aad
xchg
repnz
sbbl
cmp
fisubl
and
add
pop
nop
clc
rcpps
cmc
adcl
sbb
mov
sbb
inc
scas
pop
xchg
pop
pop
mov
jmp
nop
js
inc
inc
jb
iret
arpl
shrb
aaa
cld
add
and
jo
cmp
mov
mov
mov
filds
mov
leave
sbb
int3
mov
dec
pop
addb
push
push
ret
cli
xor
xchg
jmp
arpl
je
pop
push
stc
adc
movsl
jl
mov
push
cmpsl
jcxz
das
pop
inc
sub
sarb
push
push
cltd
cmp
pop
ret
mov
sub
inc
jb
xchg
mov
sar
enter
xor
cmp
mov
daa
xchg
insb
lea
loop
gs
ror
mov
dec
sub
cmpsb
jb
mov
add
popa
jmp
mov
fildl
push
into
popa
test
lods
jo
sahf
fcmovnbe
dec
shlb
mov
xlat
xor
popf
aad
dec
sti
mov
adcb
sub
sub
repnz
sub
dec
xchg
and
jae
es
movsb
cmp
mov
xor
sbb
sahf
adc
xlat
insb
cs
rcll
xchg
pop
jp
lret
or
pop
jmp
jb
inc
cmpsl
sahf
or
int3
test
push
mov
repz
add
out
sub
cmp
cmc
enter
fistpl
out
cmp
fwait
cs
inc
repnz
mov
or
jle
jno
or
xor
xlat
add
dec
pop
mov
repnz
in
fs
arpl
stc
das
addr16
mov
movsl
shlb
in
add
addb
fsts
and
std
mov
adc
cmp
shl
enter
aas
stos
xchg
mov
sbb
pop
icebp
popf
mov
mov
inc
cmpsb
mov
adc
push
enter
insb
add
test
pop
pop
sub
adc
jbe
xchg
imul
sti
push
sub
rcll
std
pop
lods
add
cmpsl
ss
iret
mov
cwtl
sub
pop
xor
pushf
arpl
je
popa
xchg
mov
sbbl
dec
stc
out
xchg
mov
or
ret
push
in
push
movsb
jns
ds
xchg
xchg
sbb
pop
gs
out
cmc
xchg
dec
mov
arpl
ss
clc
adc
xchg
lea
xchg
adc
clc
out
mov
pop
add
pusha
ds
and
inc
enter
inc
mov
push
insb
cmp
bound
add
pop
arpl
add
add
xlat
dec
sub
out
inc
and
addb
pop
mov
movsb
out
test
pop
cmp
pop
push
adc
addr16
movsl
ds
xchg
std
ret
scas
fildll
sbb
es
mov
bound
xor
jl
mov
ljmp
push
les
add
pushf
xabort
mov
gs
rcpps
mov
addr16
adc
fsub
inc
jmp
xchg
cmp
push
dec
pop
mov
cltd
xchg
jmp
cmpsb
mov
add
pop
sub
pop
sahf
cmpsl
movsb
jmp
sbb
xor
repz
out
add
jp
mov
loopne
out
aam
pushf
mov
nop
test
aas
js
and
cmp
xchg
std
pop
mov
sbb
cmp
fildll
sub
loopne
inc
enter
mov
imul
imull
lods
xchg
and
stc
mov
dec
insl
xor
jmp
adc
sub
jp
outsl
or
or
push
into
pop
dec
mov
push
lock
pusha
repz
push
jae
into
sub
dec
pop
test
xchg
adc
gs
dec
xlat
test
push
dec
inc
je
shl
xlat
jbe
loopne
movsl
xlat
cmp
les
cmp
fnstenv
mov
mov
jmp
cmpsl
fmuls
aaa
inc
dec
cmp
adc
stos
cltd
xor
hlt
je
xchg
inc
push
adc
inc
pop
and
sbb
imul
or
fadds
sti
jmp
shrl
testl
push
inc
add
movsl
scas
and
cmpb
shll
fnstsw
or
pop
dec
sub
pusha
push
lods
fnstenv
test
andb
aam
scas
mov
add
mov
inc
mov
push
aas
mov
int3
or
mov
ja
push
fistpl
ficomps
push
add
imul
or
add
das
xchg
pushf
fistpl
aaa
int3
mov
pop
outsb
and
ds
add
and
lahf
mov
sti
push
cmp
mov
xchg
pop
xchg
mov
outsl
fwait
xchg
sub
inc
jo
cmp
push
or
push
push
adc
ror
cld
mov
fistl
xchg
inc
pop
pop
fildl
dec
out
das
pusha
imul
dec
aaa
jg
push
adc
in
lods
clc
xchg
cmp
mov
pop
orb
pop
mov
mov
and
into
fs
insb
jns
push
inc
jle
adc
cmp
mov
pop
imul
mov
dec
or
aas
and
or
sbbb
ds
incl
xchg
xor
nop
and
in
addl
sub
in
pop
mov
lds
fbstp
int3
add
daa
dec
add
je
push
in
cmpsl
adc
sub
mov
cmp
mulb
or
pop
mov
jnp
and
xorb
dec
roll
push
ret
and
fadds
lret
mov
fdivp
mov
pop
sbb
inc
add
insl
sub
daa
lock
push
rorl
cli
andl
movsb
pop
gs
ja
or
into
xorl
jmp
sahf
xchg
xor
cmpsl
pop
cmpsb
jle
and
lods
jecxz
xor
ljmp
xor
sub
nop
sub
and
ret
dec
lea
xor
gs
mov
out
gs
dec
ret
iret
jns
sbb
jae
adc
jnp
inc
cmc
loop
jnp
movsl
imul
vunpckhps
pop
test
xor
push
add
pop
cs
push
aas
mov
pushf
mov
insb
mov
bnd
aas
repnz
imul
outsb
xor
xor
xchg
adc
pusha
cld
lcall
fwait
cmpsb
add
data16
add
ds
arpl
push
fnstsw
repnz
inc
inc
in
pop
xor
push
mov
int
jne
jb
rorl
clc
sahf
sti
mov
xchg
push
xor
scas
test
in
dec
sti
hlt
cmpb
scas
bound
jo
cs
inc
push
into
je
jno
mov
inc
bound
into
stc
sub
movsb
inc
jg
cmc
add
shrl
arpl
or
cmp
inc
xlat
lds
repz
scas
mov
inc
scas
loop
insb
jg
daa
adc
mov
aad
mov
adc
sbb
insb
xor
mov
jb
mov
pop
sahf
mov
push
xor
or
add
jns
loope
scas
lea
jmp
inc
enter
test
mov
lods
sbbb
xchg
pop
shl
ds
cmp
and
stos
mov
fistps
inc
xor
xchg
sbb
mov
xchg
divl
or
push
mov
mov
mov
xor
aas
lock
aad
std
dec
ds
pop
mov
das
sub
jge
push
and
push
xlat
or
adcl
push
dec
adc
fcoms
xchg
dec
outsb
ja
mov
cmp
or
nop
jge
leave
mov
test
shrb
lahf
rolb
pop
dec
jecxz
lods
lahf
and
xor
xlat
pop
inc
xor
pop
or
int3
xorb
lods
dec
pop
cmp
mov
outsl
inc
or
mov
mov
outsl
pop
mov
jecxz
dec
daa
xchg
ss
testb
call
mov
and
pop
cmp
add
cmp
xor
leave
test
and
mov
add
and
push
inc
xor
loopne
push
cwtl
inc
pop
add
jae
xchg
inc
repnz
inc
ss
push
jne
xor
fmuls
cmpsl
lret
jb
sub
ljmp
mov
push
jns
cmp
and
stos
or
mov
jp
push
lods
xchg
pusha
add
mov
add
cmp
pushf
fs
test
inc
adc
adc
pop
xor
fisubrs
mov
adc
outsl
fnstenv
jle
xchg
xor
or
cmp
mov
test
notl
ja
cli
call
add
shlb
dec
insl
divb
or
add
out
popf
inc
mov
dec
jl
test
fs
push
or
stos
or
cmp
incl
cmpb
gs
xchg
xchg
pop
arpl
scas
push
push
mov
scas
push
dec
lods
fstp
pop
jmp
stos
movsb
out
mov
jmp
jmp
jp
lret
lahf
mov
push
mov
rcrb
popa
out
dec
pop
scas
fisttps
repz
lcall
mov
dec
mov
popa
xchg
cli
add
mov
dec
dec
das
cmp
shlb
ds
int
add
dec
pushf
pusha
mov
xlat
cmp
dec
hlt
shrl
push
int
add
push
enter
add
mov
mov
sahf
and
scas
sbb
pop
dec
mov
push
mov
xchg
imul
jle
push
jl
movsb
sbb
cltd
repnz
sub
int3
sub
jno
cmp
and
js
sub
cmp
popa
jnp
mov
in
xchg
out
jl
addl
cmp
jno
in
adc
push
jle
testl
pop
push
mov
mov
inc
icebp
push
pop
mov
gs
in
sub
rcrb
dec
andl
mov
jno
jnp
cmp
cmpsb
dec
xor
mov
lods
and
mov
push
xchg
push
inc
mov
push
nop
fnsave
mov
iret
enter
xor
fidivl
subl
mov
jbe
icebp
xor
ds
and
repz
inc
add
mov
adc
scas
add
dec
mov
test
push
add
push
add
icebp
out
pop
sti
hlt
ret
fucom
les
jns
pop
imul
push
dec
lods
int3
cmp
push
popf
stc
xchg
cmp
xchg
popf
push
fsubr
in
or
not
adc
repnz
push
out
mov
add
pop
shlb
icebp
xchg
in
scas
cs
out
jb
in
jmp
in
add
daa
sbb
imul
xchg
push
arpl
lfence
or
xor
jge
xchg
orl
add
sub
inc
push
decb
inc
lods
test
cwtl
xor
lahf
je
and
insb
mov
into
sub
pop
pop
cli
mov
push
xchg
jbe
xor
movsl
and
test
jge
inc
lcall
xchg
outsl
call
outsl
aas
stos
dec
mov
mov
mov
rcrb
je
cmp
out
adc
mov
nop
js
insb
call
jno
out
add
fisttpll
ljmp
xor
sub
sbb
out
pop
jno
sub
jle
mov
mov
call
dec
arpl
xor
cmp
add
fwait
pusha
xor
cmp
lret
ror
ss
jp
pop
mov
cmpsb
daa
dec
andnps
and
icebp
ja
jmp
sbb
or
sub
and
rcll
jl
aaa
sbb
cli
xor
fadds
aam
mov
shrb
mov
and
or
flds
cmc
push
lock
jnp
mov
test
repz
pop
leave
sub
mov
ja
cmc
cmc
mov
pop
pushf
sbbb
add
mov
xchg
iret
aas
es
hlt
push
fisttpll
fidivrl
mov
pop
dec
cmp
fimull
mov
imul
pop
pop
fnstcw
clc
lret
push
leave
fldt
in
cld
leave
addb
dec
push
mov
cltd
sub
sahf
ljmp
das
xchg
pop
push
and
dec
arpl
push
out
mov
cmpsb
ret
lock
out
nop
bnd
test
aaa
popa
jmp
sbb
aad
jno
adc
xor
hlt
push
aaa
pop
add
dec
rorl
jb
push
leave
xor
inc
stos
ficoml
cmpsb
pop
jl
fstpt
popf
fmull
jnp
fisubs
fucomp
ror
xchg
mov
push
mov
pop
adc
rolb
imul
loop
mov
shrb
jl
sbb
push
movsl
mov
aas
lcall
out
lea
sub
das
adc
out
xchg
xor
enter
sub
hlt
lahf
loope
addr16
int
or
sbb
pushf
scas
mov
sub
cmp
xor
in
arpl
mov
imul
push
lahf
aas
and
mov
stc
test
je
or
mov
sti
jge
xor
or
push
rolb
push
mov
dec
inc
lcall
fstl
xorl
cmp
or
xchg
pop
nop
or
lret
scas
ret
push
fimull
adc
inc
cmp
iret
mov
xchg
pop
iret
pusha
xor
add
out
push
ja
lock
cmc
into
addr16
sub
cs
mov
test
and
lds
int
lock
sbb
cmp
and
loopne
lds
mov
lock
adc
pop
jbe
or
xchg
sub
cmpsl
popf
sbb
xor
push
pop
lods
add
add
insb
fs
and
and
std
cli
les
fidivl
pop
movsb
repnz
lret
mov
loope
pusha
jmp
xchg
or
mov
insl
mov
jp
in
movsl
jno
outsb
jmp
vmulss
xchg
cmc
das
repnz
mov
jne
enter
mov
dec
push
sbb
lret
xchg
lock
and
add
mov
mov
sahf
inc
cmpb
cmp
sub
mov
aaa
jbe
je
pop
fldt
jno
pop
or
sub
or
mull
jno
pop
and
mov
adc
push
inc
test
cmpsl
adc
daa
sbb
mov
jb
aaa
js
movsb
mov
les
push
push
into
adc
lds
scas
insb
mov
inc
jg
rclb
scas
and
mov
xchg
data16
lret
fcompl
outsl
sub
loopne
arpl
call
je
dec
scas
xor
add
mov
out
xchg
jae
daa
hlt
mov
mov
jb
xor
inc
das
gs
and
add
cwtl
pop
push
jbe
jb
pop
push
push
insb
ret
fadd
add
mov
mov
lods
pop
stos
std
pop
int
xchg
stos
pop
outsl
insl
fstpt
sahf
fwait
ljmp
jb
or
insb
cmp
push
push
xor
in
fnsave
inc
adc
fwait
xchg
imul
scas
jp
jg
push
and
roll
mov
mov
inc
or
aas
mov
lea
lock
jg
rorb
mov
cld
xlat
repz
stos
push
jo
cmp
sub
xchg
lock
inc
repz
xchg
mov
mov
xorb
rcrl
icebp
pop
mov
xor
outsb
dec
ljmp
adc
shlb
mov
dec
jmp
ret
mov
nop
repnz
lret
or
repnz
mov
adc
inc
test
xorl
push
in
jns
data16
aas
xchg
call
popf
ret
mov
cmc
mov
push
dec
pop
mov
inc
mov
js
icebp
push
xor
inc
shll
sub
and
shlb
mov
jp
jne
push
popa
xor
outsb
int
popa
lock
adc
movsl
or
jns
pushf
push
cmp
fldenv
cwtl
sbb
add
lods
mov
sti
adc
mov
xchg
push
adc
call
xchg
orb
xchg
jmp
popf
or
into
xchg
cmp
test
or
dec
mov
mov
pop
jo
scas
stos
sub
pop
sbb
jb
jmp
addl
sar
icebp
rcrb
pop
nop
pop
call
test
mov
push
push
out
push
dec
dec
fldcw
add
stc
mov
mov
movsb
lahf
mov
adcb
stos
and
fcmovbe
das
add
ret
sbb
cld
push
test
shrl
add
push
pop
out
xchg
fbld
dec
jecxz
push
inc
lcall
jmp
js
fsts
aam
jle
jns
arpl
cwtl
insb
sub
out
cltd
insb
push
add
nop
or
ret
fsubp
inc
adc
sub
or
push
add
dec
mov
jae
rol
ljmp
adc
shrl
jecxz
test
lret
std
lods
icebp
xchg
ja
mov
mov
mov
xor
xchg
push
ja
rcl
xchg
inc
xchg
mov
xchg
ja
cltd
hlt
fucomi
mov
ds
mov
scas
add
lods
aam
xchg
inc
ja,pt
sbb
adc
cld
ret
pop
arpl
insb
xor
inc
jnp
inc
add
pop
fldl2t
jmp
jmp
out
xchg
jo
cmp
jmp
iret
insl
js
idivb
loopne
mov
cmp
adc
mov
mov
movsl
mov
repnz
es
dec
dec
inc
fistpl
imul
lock
call
cltd
ret
sub
stos
ret
lock
mov
ja
sub
or
adc
dec
scas
jae
adcb
push
inc
push
ficompl
dec
subl
stos
or
dec
fiadds
imul
mov
shrl
subl
jae
imull
addb
movsl
out
js
cmpsl
cmp
push
xor
lret
imul
divl
dec
sbb
call
ja
pop
call
jnp
xor
mov
push
out
mov
inc
out
and
inc
adc
pop
push
fsubrl
icebp
fs
inc
pushf
cmp
inc
fs
add
pop
cmc
push
jle
jge
lock
les
jno
call
loop
inc
dec
mov
in
inc
sbb
push
jmp
js
lahf
fistpll
sahf
adc
aas
mov
push
add
push
xchg
inc
scas
jecxz
sti
hlt
xchg
pop
fimull
xchg
popf
and
push
jnp
ret
aam
jp
cld
xchg
adcl
scas
mov
test
or
mov
loop
jl
ficoml
jp
dec
xchg
andl
int3
and
pop
iret
jne
orb
in
test
mov
lods
int
jp
push
pop
pop
cli
push
lahf
lcall
dec
arpl
add
xchg
push
stos
xor
lods
xchg
push
mov
movsl
sub
and
add
sub
fsubs
subl
imull
cmp
mov
mov
xor
sbb
and
inc
insl
xchg
push
jle
pop
imul
shlb
test
jp
mov
cmp
test
pop
addl
sbb
sub
push
xchg
arpl
jo
push
lods
popa
lahf
je
fs
and
sbb
gs
ss
ja
ret
push
sbb
cmp
movsl
cwtl
mov
add
lods
xchg
outsb
mov
insl
xchg
mov
sbb
push
into
aas
push
in
stos
sti
mov
cld
movsl
xchg
out
not
insl
das
add
fstp
idivb
cmp
mov
ret
jnp
mov
iret
movsb
cld
push
enter
inc
add
test
out
push
jne
cld
pusha
mov
pusha
outsl
add
movsl
jg
sarb
and
lock
in
inc
or
pop
and
shlb
sti
sub
sub
inc
pop
lret
or
pop
shrl
pusha
jne
mov
pop
lock
sbb
jmp
pop
pop
xchg
add
int
insb
mov
addr16
xchg
cs
push
inc
cmpsl
push
or
pop
xorl
nop
clc
icebp
sub
push
lea
cld
mov
or
jl
inc
lret
scas
jnp
mov
fstps
xor
movsb
and
fld
push
jne
ljmp
mov
mov
aas
fs
adc
jns
aam
add
xchg
inc
mov
cmp
mov
push
jmp
cmp
dec
mov
jnp
jne
stos
outsb
xchg
add
mov
push
rcll
sbb
push
inc
inc
arpl
and
adc
jle
addb
push
dec
adc
cmpsl
pop
jg
loopne
jnp
inc
jbe
cmc
popf
and
mov
push
or
and
out
fisttpll
cmpsl
aas
xor
adc
dec
iret
or
inc
push
xchg
lahf
dec
leave
push
inc
popf
push
mov
mov
cmp
xchg
cltd
call
push
push
cmp
fs
mov
adc
rorl
jecxz
push
inc
ss
frstor
daa
jge
mov
adc
mov
dec
lods
and
call
cmp
test
sub
xlat
stos
sbb
ds
notb
pop
add
xchg
jecxz
sub
call
shr
inc
sbbl
cmpsb
jp
dec
or
andb
push
xlat
inc
mov
popf
mov
fildl
bound
xor
rorb
mov
stc
sub
pop
test
cmp
or
callw
repnz
repnz
and
push
das
je
daa
scas
je
fisttps
outsl
lods
lods
sub
jle
shlb
shll
mov
sbb
sarl
jnp
lahf
aam
xor
pushl
and
stos
cmp
imul
pop
bound
push
and
push
jns
ja
in
sarl
inc
and
lret
movsb
imul
adc
popa
in
rorl
fsubrl
sub
dec
xchg
cmp
mov
lret
fldenv
adc
adc
les
insb
les
xor
mov
bound
cmp
sbb
add
xor
and
or
xchg
mov
dec
sub
pop
addr16
bound
rolb
cltd
gs
inc
jbe
and
cmpsb
mov
lahf
cmp
xchg
inc
mov
lods
dec
je
mov
dec
ja
mov
addl
and
xor
jge
test
xor
repz
loope
es
pop
mov
mov
movsb
js
and
not
sub
nop
ljmp
sub
cwtl
mov
mov
mov
testl
pop
adc
mov
scas
pop
scas
add
push
nop
xor
adc
cmp
rorb
mov
dec
shrl
xchg
mov
mov
add
sbb
imul
scas
popf
jne
pop
jecxz
cmp
fs
aaa
jns
dec
xchg
and
sbb
out
push
sahf
jno
in
jnp
sub
in
fdivs
cs
push
dec
pop
jge
imul
mov
inc
rcrl
mov
mov
adc
cmpsb
outsb
xchg
ss
and
mov
dec
cmp
fmull
mov
push
nop
xchg
pop
out
mov
jbe
stos
divl
testl
mov
mov
cmc
mov
movsb
mov
int3
stos
fsub
imul
push
sbb
or
test
iret
add
dec
ret
add
hlt
adc
pop
xchg
push
xor
stos
adc
mov
dec
mov
imul
jecxz
cmpsl
cld
and
out
inc
sub
lret
jno
or
das
test
mov
jae
int3
mov
mov
aaa
imul
lahf
mov
push
lahf
rcl
lods
loope
and
sbb
jnp
mov
hlt
icebp
push
mov
mov
mov
xor
cltd
xlat
fldenv
xchg
imul
pop
cld
jae
inc
ret
jo
mov
mov
dec
or
icebp
push
mov
mov
adc
mov
push
hlt
sti
and
cmp
mov
dec
mul
mov
shlb
int
jle
mov
jo
ret
int
cld
lahf
adcb
mov
sbb
mov
mov
push
adc
add
mov
xchg
sub
add
pushf
sub
jb
test
andb
add
push
loop
mov
test
pop
in
iret
xchg
xchg
mov
cs
aaa
jae
ret
push
insb
jmp
mov
and
push
cmpsb
shrb
push
mov
loop
jle
mov
push
divl
ss
pop
ja
mov
stos
cmp
xor
stc
lea
sbb
push
jge
mov
insb
cmp
push
lcall
jmp
iret
mov
mov
cmp
xor
icebp
mov
xor
ja
xchg
jle
xchg
js
mov
nop
sbb
aam
or
sub
mov
fsubl
ds
xor
lock
jno
xor
lea
cmc
loop
jmp
fidivs
lock
out
mov
sub
cmc
fdivrp
clc
scas
mov
push
xor
dec
and
subl
fmull
insl
pusha
jmp
roll
jno
sbb
inc
fisubrs
mul
lahf
test
sbb
jne
insl
and
cmp
pop
repz
repnz
imul
outsb
jno
aaa
lock
rcrl
push
stc
shlb
shrl
cmp
aam
out
movsb
pop
jmp
dec
cltd
xchg
test
jb
adc
xchg
cmp
in
adc
stos
outsl
cmp
dec
pop
ret
xor
sbb
loopne
cs
shll
xchg
add
fimull
lods
xor
imul
cmc
pushf
loop
call
mov
jnp
xchg
mov
lock
and
rclw
test
daa
mov
inc
sbb
rcrb
xor
adc
jecxz
mov
mov
jb
hlt
insb
repz
lea
lahf
inc
bound
or
subb
and
or
rorl
mov
push
sti
ret
mov
adc
stc
andb
dec
addr16
inc
mov
bnd
jg
cmp
cmp
mov
adc
jo
push
pop
jne
xor
jae
arpl
pop
pop
cmp
adc
fiaddl
mov
sub
ds
lret
movb
in
movsl
js
lods
mov
in
jmp
imul
sub
js
mov
or
lret
sbb
daa
xchg
dec
je
mov
dec
xlat
xchg
sbb
cmpsb
fstps
push
stc
mov
xchg
into
xor
push
imul
mov
dec
pop
xorl
push
inc
cmp
test
inc
test
lret
mov
ret
lahf
or
xchg
lods
fwait
test
xor
pusha
leave
sbb
add
push
inc
xchg
mov
mov
cli
cs
push
into
sub
cmp
lods
outsb
mov
mov
seta
imul
les
js
adcl
mov
rorb
popf
in
nop
cmp
jbe
inc
jno
sbb
icebp
mov
jmp
jbe
adc
shll
js
leave
sbb
pop
pop
jecxz
addl
mov
ss
xlat
sbb
dec
loope
sub
and
pop
mov
jb
pop
enter
pop
inc
scas
mov
cmp
call
xor
outsl
stos
mov
inc
mov
mov
incb
add
std
insl
mov
lock
jg
xor
sbb
aaa
test
jno
inc
jp
mov
out
fnsave
bound
out
mov
push
shll
mov
pushf
pop
iret
add
fisttps
out
mov
sti
icebp
mov
pushf
fnstcw
insb
cmpsb
shrb
mov
aam
lds
ret
pop
mov
ss
repnz
and
pop
leave
and
stc
jbe
roll
mov
fbld
xchg
sub
test
sub
cmpsl
jecxz
inc
lahf
outsb
lds
mov
mov
push
jp
fwait
push
xor
xchg
adc
lock
dec
sub
outsl
gs
pusha
xchg
dec
mov
cld
sbb
mov
or
mov
pop
push
cs
das
inc
aas
mov
cmp
and
cld
dec
in
data16
and
mov
xchg
repz
adc
leave
and
inc
arpl
sbb
jne
pop
mov
adc
pusha
lret
shlb
cltd
js
or
xor
aaa
daa
xchg
mov
nop
cmp
aaa
cmp
xor
sub
ds
fistpll
ret
sbb
mov
jno
adc
decb
xor
dec
mov
aam
in
pop
or
fists
sbb
pop
enter
inc
xor
xchg
pop
jne
in
pop
loopne
sbb
or
xor
fildl
stos
dec
movsb
das
insb
sub
test
xor
out
or
pop
movl
inc
fs
into
out
mov
push
sub
dec
lret
xor
scas
sub
sbb
inc
add
ja
fcoms
andl
jge
sub
dec
fsubl
scas
adc
mov
leave
aaa
iret
or
sbb
pop
test
mov
xor
jl
cltd
iret
xchg
add
les
mov
sbb
flds
mov
jmp
sbb
xchg
lock
int3
mov
adc
clc
xlat
out
insl
sbb
jge
in
sub
jp
fldcw
aaa
mov
push
sbb
ds
ja
rcrb
inc
sub
sub
cs
mov
adc
jl
dec
mov
dec
add
jo
lods
lcall
repnz
test
cmp
xor
enter
rclb
pop
stos
adc
popa
es
mov
shl
inc
cltd
in
or
jmp
or
icebp
iret
addr16
sbb
test
and
lods
lret
int
mov
or
fcmovnbe
mov
imul
jns
out
jo
cmp
xchg
and
jp
pop
daa
movsl
inc
rol
mov
mov
arpl
data16
les
mov
int
cwtl
push
sbb
cmp
movsl
cmc
mov
int
add
into
rolb
loopne
or
fldenv
scas
iret
fildll
fwait
in
daa
mov
dec
mov
cs
push
clc
sbb
mov
xor
mov
loopne
jbe
or
test
repz
shlb
lea
iret
push
push
push
nop
test
mov
stos
inc
fnsave
adc
inc
mov
aad
xor
movsl
jb
imul
mov
outsl
sub
sti
dec
fidivl
divl
pop
dec
push
mov
sub
sbb
cmp
sbb
mov
rol
xchg
sbb
fldcw
push
inc
adc
in
ljmp
addl
or
sub
adc
push
fcoml
push
xlat
push
mov
xchg
mov
clc
fs
lds
insl
cmp
fsubs
subb
imul
fsts
adc
cs
unpcklps
imul
mov
cmc
pop
out
insb
jg
cmc
out
pop
add
or
int3
incl
out
adc
and
pop
test
push
loopne
roll
test
loop
stos
cmp
mov
xchg
bsr
xlat
and
fsubrs
xor
pop
addr16
xchg
dec
enter
out
mov
xchg
popa
insb
out
out
cmp
test
mov
shr
aas
xlat
jg
dec
stos
mov
xor
stos
ds
je
loop
pushf
negl
jge
negb
mov
mov
push
inc
sbb
loop
xor
inc
jge
mov
insl
inc
xchg
clc
das
mov
mov
add
lods
mov
xchg
push
mov
cli
xor
stos
adcb
pop
cs
out
pop
jns
stos
js
fstps
les
xlat
pop
inc
sbb
mov
or
pop
ja
cld
popa
adc
outsl
or
mov
xchg
jp
xchg
inc
cmp
std
push
insl
or
fdivs
pop
and
jl
loopne
call
cmp
jne
inc
into
fs
mov
push
jo
ret
cmp
mov
dec
sbb
enter
lods
xor
dec
loopne
pop
mov
outsl
repz
xor
mov
push
sbb
add
xchg
push
push
shll
andl
push
repnz
mov
iret
fnsave
pop
dec
ljmp
shlb
or
jo
add
lds
jno
ret
push
dec
mov
jns
in
stos
jl
test
xor
pusha
and
and
jo
loope
movsb
cmc
xor
dec
lea
ret
je
xchg
int
jo
inc
call
xchg
jae
mov
push
sub
cmp
test
xchg
movsb
mov
and
fisubrs
adc
inc
out
mov
sub
cwtl
push
adc
sub
cmc
mov
xchg
mov
std
mov
jb
ja
outsb
ja
jp
pop
xchg
cmp
mov
inc
adc
and
xor
insb
push
inc
fadd
adc
xchg
jbe
inc
xchg
dec
lcall
xchg
mov
xlat
cltd
ficompl
sub
push
mov
ljmp
push
das
jmp
push
in
bound
nop
imul
sbb
movsl
lds
outsl
gs
mov
repnz
jg
lods
mov
int
dec
in
jb
scas
dec
or
mov
hlt
jg
rolb
je
dec
dec
call
shll
out
imul
or
adc
inc
loopne
mov
adc
xlat
int
sbb
scas
cltd
cld
in
cmp
cs
cwtl
dec
mov
mov
mov
dec
outsb
in
mov
mov
arpl
push
xor
repnz
in
jl,pt
ret
or
xor
fwait
xor
cmc
sbb
rcr
nop
rorl
decl
fidivl
adc
sbb
ljmp
jns
pop
sbb
stos
outsl
movsl
cmp
ret
lcall
xor
out
add
leave
icebp
pop
and
and
lea
adc
ljmp
fisttps
cli
jb
cmp
jo
mov
std
idivb
ret
loope
cmpsb
mov
out
loopne
leave
xor
dec
out
pop
inc
daa
cld
jne
and
je
mov
push
gs
popa
or
push
aaa
cmp
loope
mov
mov
xor
or
addb
stc
popl
hlt
pop
jmp
mov
push
insb
xor
mov
sbb
mov
sbb
dec
sbb
adc
sbb
loope
call
ja
pop
jmp
mov
aas
mov
sbb
aas
mov
mov
pop
stos
mov
push
gs
addr16
loope
sbb
sti
fldcw
cmp
jle
mov
flds
jl
negb
aas
fsubr
push
pop
push
int
mov
rep
mov
aas
cmp
dec
ss
iret
dec
pop
clc
ja
xor
jmp
xchg
jnp
jg
call
fs
mov
mov
fdivrp
pop
push
jbe
jnp
cli
cmp
testb
hlt
ficompl
insb
popf
inc
ret
cld
in
add
add
pop
pop
cli
out
movhps
mov
pushf
inc
and
rolb
or
loopne
jg
xchg
lret
outsl
cmp
jmp
enter
loopne
pop
adc
sti
popa
jle
pop
push
roll
and
adc
js
push
outsb
push
cld
mov
mov
or
aas
arpl
hlt
jecxz
inc
ljmp
pop
sbb
rcrb
mov
ss
mov
rclb
popl
push
pop
sti
popa
sti
movsl
pop
jb
pop
ljmp
adc
push
test
and
jmp
insl
xchg
jmp
repz
gs
jbe
adc
test
adc
filds
into
cmpsb
xor
cmp
enter
pop
cmpsl
test
iret
mov
xchg
ret
cmp
xchg
int3
mov
arpl
jae
es
jmp
xor
and
add
frstor
sbb
or
pop
sbb
hlt
jg
push
pop
mov
dec
repnz
xchg
mov
mov
inc
fwait
add
test
pop
jo
in
fists
mov
cs
adc
lods
aas
push
mov
inc
jle
sbbb
adc
xor
sub
push
xor
cmp
je
gs
adc
je
sti
aam
js
pop
push
addb
xchg
fcompl
and
cmp
xchg
decb
nop
or
sub
jg
xchg
std
sub
movsl
dec
loope
add
movsl
pop
adc
sahf
dec
loop
stos
mov
mov
outsb
orl
xchg
jno
ds
fstpt
sbb
les
dec
push
push
es
and
sahf
pop
ret
cwtl
pop
pop
pop
repnz
xor
aas
dec
cmpsb
std
jmp
mov
sahf
out
cmp
test
popa
add
adc
ja
fcoms
pop
orl
jnp
lods
test
rcr
cs
hlt
loop
inc
or
xchg
cld
rcrl
push
cmp
dec
dec
lahf
push
fildl
dec
sub
or
dec
lods
outsb
popf
inc
sbb
ss
in
sub
xchg
testl
push
sub
in
push
jo
sub
lods
jle
push
test
push
pop
jl
push
fdivrl
imul
adc
scas
mov
add
mov
sbb
xor
push
push
sbb
fsub
cmc
xchg
in
jge
inc
fwait
xchg
jmp
lret
popl
cmp
xchg
iret
cmp
dec
cmp
das
push
mov
nop
xchg
ljmp
mov
pop
sub
xchg
fidivrl
xor
adc
je
imul
pushf
jp
cs
sub
fnstcw
add
std
dec
rclb
aas
repz
mov
mov
dec
incl
jecxz
jle
ss
outsl
test
sub
out
lods
lods
mov
insl
or
mov
insl
add
subb
insl
clc
ficoms
dec
pusha
fnsave
jno
sub
jmp
fiadds
fdivrs
aas
int
aam
push
pop
xor
fisubl
add
scas
pusha
adc
mov
sbb
pop
jle
ret
push
test
adcb
xchg
add
shrb
mov
ds
xchg
push
call
xor
xchg
out
inc
insb
dec
sbb
push
ss
cwtl
mov
stos
jecxz
add
sbb
sbb
sbb
loope
xor
push
test
not
clc
xchg
adc
clc
clc
rcrl
aam
int3
mov
jle
cmp
cmpsl
fs
ret
testl
bnd
sar
fwait
test
or
rcrl
cltd
in
je
mov
into
pop
adc
dec
dec
mov
sub
add
mov
mov
inc
jo
jnp
into
push
and
aam
push
sub
add
inc
or
jg
jmp
push
repnz
popf
xlat
test
pop
or
cmpsb
xchg
xor
sub
outsb
cmp
xchg
xchg
push
dec
clc
xor
cwtl
in
cmp
enter
or
addr16
jle
lret
das
push
push
loope
pop
addr16
jno
add
xchg
xchg
dec
fadds
jge
mov
lock
add
rol
pop
jle
leave
xor
mov
adc
loope
sub
mov
rolb
sub
push
jo
adc
aam
call
call
pop
sub
jg
push
cli
add
inc
test
sbb
je
test
xchg
lea
rorb
dec
mov
mov
fnstsw
xchg
lea
sbb
movsb
sub
imul
push
mov
xorl
sbb
mov
out
add
movsb
nop
sbb
and
xchg
stos
lahf
scas
aaa
movsl
push
add
sub
xor
lret
cmp
shll
pop
test
xchg
cs
movsb
movsl
add
push
das
add
sub
jmp
sbb
mov
ret
dec
pushf
push
inc
and
pop
and
push
sti
sub
lret
dec
pop
jnp
cli
pusha
sub
mov
jg
xor
mov
mov
fistl
xchg
hlt
out
mov
pop
adc
imul
mov
incl
iret
dec
sbb
shll
rorb
inc
rol
xchg
pop
and
inc
and
jg
jns
jge
test
fdivrl
insl
mov
test
jle
mov
fstl
loopne
sti
cmp
push
out
inc
std
push
xor
fisttps
cmp
ficomps
cmp
jecxz
dec
sbb
dec
cmpsl
push
mov
je
xor
inc
dec
push
je
adc
add
xchg
xchg
adcl
int3
and
pop
ret
movsb
iret
test
dec
scas
lcall
inc
movsb
shrb
hlt
sub
out
dec
cld
js
push
inc
cltd
adc
rorb
adc
pushf
jo
jg
lds
iret
inc
stc
in
cmp
mov
filds
fbld
pop
out
mov
clc
jmp
jg
js
jae
mov
jns
lcall
dec
mov
add
jbe
lods
sub
xchg
out
add
js
jecxz
mov
out
out
and
xlat
dec
repnz
nop
jbe
ss
and
ljmp
notl
mov
ret
lods
adc
stc
inc
pop
mov
dec
out
and
inc
nop
and
scas
ret
ds
inc
shl
xor
jno
out
jae
or
imul
pop
data16
push
jmp
dec
addl
mov
popl
push
cltd
into
cmp
loopne
mov
mov
movb
mov
pop
leave
lret
adc
testl
in
enter
pop
mov
jl
bound
test
xor
sbb
nop
jmp
cld
pop
xchg
mov
or
pushf
adc
push
aad
pop
inc
sahf
in
imul
xchg
ja
xor
pop
sarb
scas
xchg
jle
rol
mov
add
pop
inc
sbb
jno
jnp
roll
cwtl
fisttps
xor
fstpl
adc
popa
mov
dec
fdivs
popa
aad
hlt
xor
push
clc
mov
test
push
mov
aam
push
xlat
push
jl
cmp
dec
sub
cmc
push
push
jnp
push
or
xlat
push
mov
inc
adc
cltd
add
dec
push
dec
das
xlat
cmpsb
push
mov
and
lahf
add
movb
cmp
xor
dec
xchg
popf
push
sahf
mov
loop
stc
pushf
lcall
jp
vaddsd
inc
jnp
jne
repz
cmp
ss
jo
lods
shll
push
cmpl
adc
jae
or
call
pusha
cwtl
adc
mov
mov
test
cmpsb
adc
mov
fildl
xor
cmpsl
sbbl
mov
xor
and
xor
jecxz
jmp
and
inc
call
cmp
cmpb
mov
mov
dec
addr16
xlat
mov
fisubs
outsb
icebp
imul
aad
fcomp
sti
in
outsb
or
or
push
rolb
mov
inc
inc
or
icebp
adc
dec
dec
xchg
bound
dec
out
fucomi
jecxz
sub
enter
push
push
sbb
bound
mov
mov
jmp
test
out
jb
aas
mov
aaa
movsl
or
xor
movsb
std
sti
int
xor
mov
loop
xchg
sbbb
popf
test
add
cmpl
stc
or
movsl
mov
call
jb
push
sbb
das
mov
mov
test
lods
out
adc
mov
push
fcmovnb
or
aaa
loop
aaa
int
or
mov
loop
add
mov
lods
inc
sbb
add
in
jg
jl
loope
inc
mov
add
cld
inc
cmc
dec
push
aaa
inc
gs
mov
pop
sar
pushf
inc
lret
pop
jbe
dec
mov
inc
in
call
fisttpl
jnp
loopne
test
imul
mov
aaa
insl
push
mov
xchg
clc
ja
nop
pop
lret
sahf
inc
icebp
adc
clc
lock
enter
or
cli
and
icebp
insb
movsl
mov
fdivrs
rorb
jbe
outsb
jg
jmp
push
lock
cmp
dec
sbb
adc
xchg
xchg
mov
mov
jo
xor
test
xchg
sub
lods
sub
cmp
push
pop
fwait
movsl
cmpsb
push
xchg
icebp
add
sbb
adc
jno
push
or
aas
xor
outsb
push
shll
loopne
adc
cmpb
dec
cmp
sbb
dec
das
int3
adc
sub
sbb
xor
push
sbb
outsl
push
xchg
cmp
clc
cli
sub
sbb
sub
cwtl
mov
imul
xor
jge
mov
fimull
insl
lret
pusha
push
imul
pop
add
adc
rorb
jg
into
sbb
cmpb
jbe
inc
mov
ficompl
push
fadds
ds
adcb
and
popf
ret
es
ret
movsb
and
imul
and
aas
aaa
xchg
dec
sti
mov
pop
mov
xor
or
shlb
and
or
or
sbb
xchg
paddd
fcoms
xorl
pusha
inc
inc
cld
int3
sarb
pop
orl
pushl
cmp
sub
and
stos
and
add
shlb
jne
xor
lret
dec
inc
sub
sbbb
mov
mov
je
pop
dec
jmp
sub
mov
or
add
nop
or
shrl
cmp
fidivrs
sbb
rol
xor
push
popf
jge
push
in
cmpsb
xchg
lds
jl
or
dec
xor
or
cmp
add
mov
ficoml
sbb
cli
sub
mov
lods
fsubl
sbb
sub
cld
orb
loopne
fsubs
adcb
mov
or
pushf
popa
out
mov
cmp
mov
mov
cmp
or
xor
negl
jmp
sub
xorl
out
popa
inc
lcall
jmp
into
icebp
cmp
pusha
cmpsl
mov
test
fcomps
mov
out
lds
mov
dec
and
lds
daa
or
adc
jae
sbb
stos
mov
aam
inc
daa
dec
cs
mov
nop
jp
and
xchg
jne
aas
xchg
stos
gs
sub
in
cmp
cld
cli
pop
in
sbb
inc
mov
mov
jbe
das
fsubr
push
dec
sbb
push
cltd
jle
jl
xor
fisttpl
int
ret
in
push
pop
out
jl
pop
xchg
mov
xor
pop
fcoms
push
daa
inc
lahf
lahf
aas
cmp
sbb
out
push
cmp
add
pminsw
rolb
sub
call
sbb
and
aam
mov
push
std
or
leave
popw
xlat
pop
add
jecxz
setp
or
in
sbb
lds
adc
sbb
mov
clc
jp
shr
add
sub
movb
fiaddl
jns
fistpl
imul
movsb
int3
inc
adc
mov
xchg
pop
jnp
lds
loop
outsl
movsl
add
dec
push
notl
xlat
clc
jnp
push
adc
std
push
cwtl
sub
je
outsl
decl
mov
fucomp
fcomps
xor
stos
sahf
pushf
out
lcall
movsb
hlt
add
cmp
icebp
aam
jmp
int3
nop
cli
mov
movb
bswap
loop
int3
sbb
pusha
imul
push
aaa
sub
and
add
lds
dec
inc
ret
dec
and
clc
or
xor
adc
leave
cmp
je
push
test
or
push
sbb
ljmp
daa
sbb
jp
mov
dec
pop
push
pop
aaa
xchg
xor
mov
negb
ret
and
cltd
rorl
test
out
lods
das
mov
sub
not
stos
sub
sub
inc
sub
sbb
rcrb
mov
out
adc
shlb
mov
pop
fwait
ds
negb
sbb
pusha
cmp
leave
hlt
aaa
ja
lret
mov
sbb
inc
dec
xor
mov
int3
ja
mov
dec
inc
cmpsl
inc
sbb
and
and
mov
jno
pop
push
mov
movsb
push
sbb
xor
test
jne
dec
out
mov
mov
dec
or
or
pop
fisttps
lea
and
pop
xor
enter
adc
dec
adc
pop
fbstp
jg
jne
xchg
lahf
mov
xchg
jp
pop
jne
loope
nopl
mov
pop
and
imul
jnp
inc
dec
xchg
jo
fisttpl
icebp
dec
fs
mov
pop
ds
sbb
dec
jnp
in
xchg
cmp
and
dec
js
pop
aas
call
dec
stos
sbb
mov
idivb
push
and
arpl
repz
xor
cs
popa
fidivrs
fs
add
xchg
imul
fimull
jecxz
ss
lea
cmc
mov
mov
lock
jp
out
mov
in
pushf
jne
cmpb
daa
fidivl
mov
popa
add
scas
add
mov
mov
ret
cmpsl
sub
lds
xor
xlat
inc
mov
add
xor
push
add
shrb
lret
lds
push
iret
popl
dec
out
mov
dec
lock
mov
mov
inc
inc
repz
outsl
jge
daa
addr16
cvttps2pi
addl
loop
int
lcall
flds
ret
pop
outsl
dec
push
incl
jecxz
inc
lods
call
insl
mov
inc
das
leave
lock
mov
movsl
aaa
pop
ret
cltd
xor
mov
and
mov
xorl
fdivl
jecxz
inc
and
popa
fwait
push
pushf
pushl
popa
loop
or
xchg
das
inc
jg
push
js
int
dec
std
loop
stc
clc
jns
test
fstpt
sti
lcall
mov
lods
xor
imul
cs
fistpll
xchg
cwtl
xchg
shl
imul
mov
cmp
fistl
cmp
movsb
jae
pop
add
mov
pop
fistpl
outsb
insl
dec
out
xor
out
adcl
ja
and
or
push
adc
xor
cmp
and
sahf
hlt
push
jg
ljmp
xchg
sbb
shll
sub
test
hlt
aad
div
inc
add
insb
push
jl
xor
sub
notb
adc
addb
adc
test
mov
adc
or
rolb
sbb
sti
adc
add
or
lret
cmp
inc
adc
fld
mov
mov
jno
aaa
notb
xlat
cmp
or
jg
or
aas
lds
leave
inc
jne
push
add
bound
ljmp
loopne
add
dec
sub
movsl
mov
dec
mov
or
pop
xchg
ret
inc
and
jmp
into
stos
cmp
inc
sbb
movsb
bound
out
jb
xchg
fistpl
testl
test
lock
push
imul
or
inc
cmpsl
daa
and
shld
xor
mov
scas
leave
lret
leave
add
cltd
jecxz
stos
xchg
sub
fcmovb
add
fadds
lret
cmpsb
mov
push
mov
cmp
outsb
pop
inc
fildll
scas
adc
test
mov
sbb
xor
call
jo
lret
mov
sbb
aas
cmp
clc
jno
int3
xchg
fs
clc
cmp
lods
cld
dec
dec
sub
outsb
push
push
dec
or
mov
shll
mov
sti
mov
nop
aam
nop
fidivrl
hlt
mov
mov
pop
aaa
jl
adc
xchg
sub
lds
mov
inc
imul
ljmp
outsl
shrl
jle
push
mov
or
lret
lret
sarb
mov
sbb
or
mov
jl
inc
lea
mov
push
out
mov
mov
dec
shll
mov
lods
jne
push
mov
pop
inc
mov
incl
jno
test
scas
incb
cltd
and
das
jl
les
aad
or
loope
pop
cmp
xlat
lods
and
insl
rclb
pop
sahf
pop
sti
repz
out
xchg
fstp
lcall
sub
shll
sub
pop
sbb
sbb
mov
cmc
mov
rorb
pop
dec
jle
in
inc
add
dec
loop
iret
or
mov
test
ss
enter
mov
jns
xchg
ljmp
jno
fimull
add
sub
lds
call
sti
daa
mov
lret
mov
pusha
mov
mov
xchg
addr16
das
mov
es
fldenv
jo
dec
jmp
ss
inc
out
rcrl
inc
sbb
repnz
mov
out
cld
adc
int
cmp
out
add
mov
push
popl
xlat
lret
and
xchg
sbb
lea
sbb
adc
cmp
pop
jb
or
mov
cmc
jge
icebp
pop
cmp
pusha
adc
cmp
jle
mov
xorl
push
stc
jno
lock
test
jno
jl
adc
test
cltd
mov
and
movsb
cmp
pop
sbb
arpl
push
and
sbb
and
test
sub
sbb
dec
mov
stos
mov
movsl
dec
cmpsl
sub
pushf
add
xchg
cli
outsb
and
stc
stos
add
aaa
test
jbe
fwait
adc
aam
adc
jo
out
pop
ja
sahf
insl
pop
les
xorb
ret
mov
flds
mov
ja
rclb
lea
std
outsb
cmp
in
pop
inc
dec
push
mov
xor
dec
push
insb
idivb
sbb
repz
add
cmpsl
pop
fcmovne
and
dec
jp
movsl
ficomps
pop
jmp
ja
ret
aas
dec
mov
ss
dec
xor
lock
addr16
add
adc
cld
pop
gs
les
orb
push
add
xchg
sub
scas
pushf
call
call
xchg
and
xchg
jecxz
sub
rorb
or
fimuls
xor
push
jg
data16
fwait
mov
dec
insl
roll
andl
loope
add
pushf
ss
rorl
xchg
fmull
fwait
xchg
xor
add
xabort
lcall
and
sti
and
fnclex
and
mov
xchg
mov
push
fucompp
push
mov
jecxz
sbb
test
add
inc
scas
sti
sub
mov
jo
mulb
cli
xor
lock
push
sbb
fistpl
mov
in
fxch
int3
adc
xchg
sub
jbe
push
xchg
adc
aad
sbb
packssdw
jae
mov
push
stos
out
mov
adc
icebp
mov
cmc
and
xor
repnz
add
cltd
lcall
push
dec
lret
pop
stc
fucomip
les
xchg
jne
int3
nop
adc
out
es
adcb
and
lods
bound
out
lock
jns
mov
and
adc
pop
lods
mov
mov
ds
rorl
scas
adc
shlb
call
xchg
ja
movsl
rorl
pop
in
push
or
mov
dec
mov
enter
push
cmpsb
test
mov
pushl
jno
arpl
int
jnp
setno
arpl
mov
call
jecxz
int
mov
push
push
pop
aaa
sub
out
lahf
jmp
ss
sub
jae
xor
in
and
push
hlt
fistl
lock
push
xor
es
or
insb
jg
mov
pop
dec
add
cmpsb
jnp
xor
push
shl
mov
mov
imul
mov
xor
mov
mov
mov
fwait
pusha
repnz
mov
cmp
and
ja
inc
aad
xor
and
fdivrs
lret
daa
sub
jbe
xchg
stc
inc
loop
int3
fisubrl
adc
int
stos
negl
and
shl
in
lret
rcrb
push
cltd
sub
insb
out
les
dec
sti
cld
pop
cli
imul
or
stc
push
enter
cmc
mov
test
rcl
ds
enter
cwtl
inc
subl
scas
cmp
ss
inc
push
lods
dec
dec
adc
or
mov
mov
adc
xchg
adc
sbbb
mov
rcll
or
aas
xchg
dec
cld
shrl
add
or
mov
push
or
lods
jno
mov
sub
or
and
jns
add
add
les
mov
adcb
cld
and
mov
mov
xor
repnz
jae
push
sbbb
jg
push
dec
jmp
inc
lods
shll
mov
mov
clc
xchg
mov
cmpsl
sbb
std
test
stos
lods
mov
jno
push
jno
add
loop
std
dec
jbe
inc
lcall
mov
icebp
or
or
scas
test
cmp
in
push
adc
test
xchg
int3
pop
imul
sub
in
mov
cmc
outsl
scas
fwait
aas
mov
xor
cmpsb
divb
cmp
call
pop
inc
rolb
incb
sub
sbb
aad
add
repnz
popf
cwtl
add
sbb
mov
aam
movsb
sbb
push
das
js
xchg
xor
repz
xchg
xorb
clc
fadds
fsts
andl
dec
sbb
scas
jge
dec
int
repz
sbb
out
pop
icebp
repnz
push
push
sub
filds
mov
test
outsb
cld
mov
ljmp
jb
negl
sbb
insb
movsb
cmp
xor
and
push
mov
shlb
addl
lock
pop
push
test
xor
cmp
push
clc
jmp
dec
adc
pop
adc
dec
in
adc
mov
pop
int
in
or
jb
mov
or
inc
pop
stos
or
add
dec
js
hlt
pop
cmp
movsb
ss
mov
xor
in
fwait
xchg
push
pushf
hlt
push
or
in
fbld
pop
lahf
dec
inc
test
or
xchg
scas
insb
cmp
mov
mov
mov
mov
mov
call
js
xchg
and
aam
cmpb
scas
enter
dec
xchg
aas
add
fistps
xchg
fnsave
aad
dec
gs
inc
push
sub
jne
jg
cmp
das
adc
inc
fxch
iret
push
add
mov
fildll
icebp
cmpsb
enter
sbb
aaa
mov
clc
mov
fdivs
stos
loopne
movsl
mov
pushf
aaa
popf
arpl
das
out
push
ljmp
dec
into
jb
pop
push
aad
je
inc
loop
add
in
repz
stos
lods
lods
bound
or
add
and
cmpsl
mov
push
sbb
cmp
xor
jb
pop
rol
imul
inc
jg
leave
hlt
or
sub
xchg
sti
arpl
jecxz
cmp
imul
enter
pop
push
ds
fsub
dec
out
cmp
addb
leave
js
jno
xor
mov
cmc
xchg
pushf
dec
imul
outsb
mov
aad
es
push
xchg
pop
push
inc
iret
or
fisubrl
mov
cmp
hlt
sbb
ja
pop
cltd
dec
sub
mov
cltd
adc
dec
dec
and
inc
rorl
mov
test
inc
test
pop
sysenter
pop
test
sahf
adc
jbe
pop
push
sahf
cmp
jno
pop
es
jge
mov
sub
and
stc
loop
outsb
push
test
clc
sbb
push
ss
jbe
inc
jns
mov
inc
inc
pop
ljmp
cmp
push
sar
notb
es
in
fisubrs
cmp
icebp
shrb
pushf
fnsave
inc
movsb
cmpsb
mov
stc
jg
dec
js
xorb
adc
test
movsl
push
sbb
xor
jg
dec
ret
sbb
mov
loope
pushf
pop
cmc
xor
pop
nop
lods
pcmpeqw
pop
ret
push
pop
jno
push
or
ljmp
cmp
push
cmpsl
in
sti
push
jb
ss
mov
inc
data16
hlt
mov
jb
dec
pop
sub
out
pusha
jmp
scas
sub
adc
scas
push
ficoml
mov
shlb
cwtl
testb
sub
bound
add
movsb
stos
das
clc
pop
into
cmp
pop
inc
int3
mov
loope
push
ret
xor
imul
mov
push
cmp
push
or
lds
push
fwait
call
mov
xchg
cmp
ja,pt
int3
pushl
dec
mov
push
mov
cmp
xor
adc
testb
mov
sarb
pop
aad
dec
popf
push
jl
dec
nop
cmp
int
mov
lret
add
inc
dec
add
cmp
dec
std
cmp
add
pop
fistps
xchg
arpl
movsl
loope
add
aad
dec
add
dec
or
lret
cmp
mov
filds
jnp
xchg
cs
in
jmp
popf
mov
dec
push
push
mov
cmp
rcl
jo
shl
sub
xchg
jnp
sub
popa
fnsave
mov
ja
mov
sub
adc
mov
subps
xor
outsl
mov
pop
jl
gs
mov
cmpsb
aas
int
jbe
or
push
call
cmp
pop
cwtl
push
loopne
inc
pop
sarb
xchg
mov
cmpsb
dec
inc
inc
push
sub
push
outsb
dec
dec
add
mov
lahf
mov
xchg
inc
sbb
push
jl
mov
shll
add
sub
push
pusha
dec
dec
sbb
movsl
test
lea
rcrl
repz
and
jne
outsl
inc
sbb
jge
mov
xchg
leave
mov
cmp
adc
lock
cli
jne
mov
ss
mov
out
fistps
jecxz
mov
pop
fisubl
sub
and
pop
aad
in
push
icebp
and
mov
or
xor
or
loopne
cmp
hlt
or
pushf
icebp
push
scas
mov
and
shlb
jne
mov
call
fnstenv
pusha
es
shl
xor
xchg
pop
test
ret
mov
mov
mov
aas
mov
sub
add
cli
les
adc
loop
and
jbe
add
push
push
mov
int
psubsw
out
cmp
dec
jge
cld
add
pop
dec
loopne
cmp
js
and
rclb
addr16
repnz
test
adc
ret
mov
mov
gs
outsl
lret
push
push
loop
or
loop
into
call
fisttps
aad
scas
cltd
mov
lock
adc
mov
mov
sbb
and
repnz
xlat
cmp
jbe
and
notb
push
inc
sbb
xchg
sbb
into
push
add
imul
pusha
inc
ljmp
fldenv
mov
sahf
jb
cs
lods
sbb
adc
ja
out
or
pop
dec
stc
or
jl
inc
mov
movsb
arpl
sbb
in
ret
cwtl
ds
gs
jp
inc
lock
cwtl
jmp
lds
push
cs
ss
mov
push
cmc
cmc
inc
jne
xor
push
push
xor
sbb
in
sub
sbb
inc
aas
cwtl
pop
dec
xchg
xor
in
push
or
inc
push
call
xlat
movsl
dec
push
and
xchg
popf
jnp
or
inc
jp
sub
movhps
inc
sbb
cmp
das
dec
push
flds
push
test
pop
movsb
jne
loope
or
arpl
sti
sbb
mov
push
xor
int
cld
imul
xchg
inc
in
xchg
cmpsb
ja
out
lret
imul
fs
push
mov
sbb
mov
xchg
adc
nop
insl
gs
loope
inc
cli
push
xlat
pushf
mov
pop
sbb
cmp
pop
push
sbb
inc
jno
mov
in
add
xchg
dec
ja
xchg
pop
push
scas
shrb
loope
cmc
dec
negl
adc
jbe
sub
pop
out
sub
aam
mov
push
scas
ss
mov
lods
and
into
xchg
js
cmp
pop
adc
lahf
mov
cwtl
cmp
imul
mov
call
jnp
jb
ljmp
fs
inc
es
repnz
and
push
push
mov
les
xchg
mov
testb
inc
mov
mov
inc
xchg
add
scas
mov
mov
call
gs
ficomps
inc
cld
dec
push
mov
fnstsw
xor
mov
outsl
nop
outsl
aam
mul
jne
push
daa
push
add
jmp
sub
mov
loopne
inc
or
aaa
mov
jge
mull
sub
fistpl
sarl
or
fstps
sti
add
das
sbb
mov
push
adc
fidivrl
aam
enter
mov
adc
rol
xor
enter
insb
clc
mov
or
fimuls
cs
dec
repz
out
add
xchg
call
in
sbb
sbb
add
jnp
iret
push
sub
sahf
pop
add
scas
call
mov
mov
inc
sub
xchg
into
fbstp
lcall
gs
lods
fldt
pop
arpl
jbe
fists
sbb
ret
mov
popf
fadds
es
mov
in
cli
push
pop
cmpsb
scas
mov
mov
test
mov
std
mov
notl
mov
lret
sbb
cltd
or
adc
fsubl
sub
cmp
push
rcl
cmp
pop
andps
xorb
loopne
nop
xor
adc
xor
mov
mov
in
dec
movsb
xor
mov
jne
add
imul
fiadds
or
fdivl
push
add
xor
inc
shl
jmp
addl
popa
cmpb
pxor
test
cmp
cmc
push
mov
push
ret
aam
pushf
mov
mov
movsb
xchg
das
subl
sub
mov
mov
or
sub
dec
outsl
sub
lahf
sbb
cltd
jns
sub
rcll
gs
adc
nop
mov
dec
fwait
aas
and
adc
or
adc
lods
in
sbb
es
or
aad
call
scas
pop
and
jmp
jecxz
mov
push
inc
dec
cmpl
jmp
addr16
adc
inc
cli
dec
repz
std
adc
inc
xlat
in
js
lcall
je
es
out
sbb
scas
cmc
out
aaa
sub
inc
jnp
xchg
data16
pop
jns
push
mov
push
mov
fdiv
cmp
xchg
sbb
sub
inc
andb
sbb
or
pusha
insb
cmp
shll
mov
lds
stos
jae
inc
dec
and
into
movsb
ret
leave
lahf
inc
mov
xchg
in
mov
or
repz
adc
and
xor
add
test
mov
and
test
add
xlat
addr16
add
push
aaa
mov
loopne
repz
jge
xchg
mov
out
rcrb
js
pop
lds
pop
dec
enter
iret
les
and
or
sbb
fst
repnz
sbb
xor
leave
jmp
lret
fmull
cmpsl
push
push
inc
dec
push
sub
jae
mov
fwait
sub
pop
enter
xchg
std
mov
jno
sahf
rcrb
in
push
pusha
frstor
or
stc
push
xor
cmp
bound
aam
sbb
and
fwait
lcall
shr
cltd
iret
cwtl
int3
les
sub
push
js
out
insl
mov
add
cmp
jle
sub
fbld
mov
mov
pop
lods
add
mov
cwtl
mov
jge
or
jge
loope
dec
mov
fsts
mov
imul
jb
pushf
xchg
jl
fcmovnu
xchg
jg
das
mov
jg
ret
scas
negb
jbe
stc
mov
sbb
cmpsl
arpl
mov
stos
scas
mov
xor
jecxz
add
insb
dec
insb
imul
mov
in
push
notl
arpl
lret
int
xor
fldcw
xor
jg
pop
xchg
inc
xor
mov
mov
aas
popf
cmpsl
nopl
jg
pop
push
int3
jnp
or
js
jmp
scas
xor
rcr
or
aad
or
push
rorl
sub
cmpsl
test
mov
das
pop
pop
test
and
mov
dec
mov
fistps
and
rorl
out
jbe
out
dec
icebp
jl
sub
pop
sbb
scas
rcr
enter
dec
lock
adc
xor
in
ja
rorl
inc
sbb
xor
nop
mov
cltd
mov
outsl
sbb
fsts
jne
push
mov
xchg
loop
inc
sub
popf
add
mov
mov
inc
hlt
push
jl
or
push
sub
std
movsl
mov
cmpsl
dec
mov
dec
out
xor
inc
sahf
jmp
adc
adc
adcb
dec
and
daa
inc
iret
repz
and
xor
hlt
aam
mov
ja
shlb
or
sti
xchg
xchg
fdivl
insb
fimull
into
jnp
xor
data16
scas
xchg
jbe
cmp
not
jnp
hlt
cld
scas
in
orb
in
inc
icebp
push
repz
add
xor
pop
out
loope
loope
lods
sbb
ss
mov
adc
mov
mov
and
sbb
test
int3
lret
xchg
pop
dec
dec
sarl
mov
sbb
jae
xchg
sbb
rolb
xchg
lds
and
dec
jle
testb
push
push
mov
jo
loope
lock
loope
mov
jecxz
sbb
bound
jo
and
push
sub
jp
adc
dec
jns
ja
scas
adc
notb
dec
sahf
jmpw
je
mov
int
lods
and
cmp
call
and
roll
sub
fs
stos
inc
or
inc
in
jecxz
adc
inc
xchg
out
mov
xor
shrl
call
call
mov
sbb
adc
adc
mov
scas
xchg
loopne
push
mov
jecxz
das
mov
or
mov
or
fcomip
adc
mov
dec
push
add
xchg
movsb
mov
push
test
out
js
jbe
out
leave
lret
fs
popf
testb
fsubrs
push
sahf
loope
push
test
mov
jae
cmp
mov
xchg
add
jbe
cmp
lods
fwait
adc
ja
js
xchg
mov
pushf
test
sbb
jge
lods
std
ret
jno
lret
and
repnz
push
mov
sbb
fs
hlt
mov
int
or
rcr
jo
aas
jns
subb
das
adc
xlat
adc
dec
idiv
cli
jns
add
add
in
jbe
pop
pop
repnz
out
mov
insl
fadds
xchg
leave
notb
cmp
and
iret
xor
jecxz
shrb
or
pop
xchg
orl
mov
sbb
dec
adc
mov
or
adc
mov
and
sahf
adc
push
jg
sbb
imul
add
insb
sbbb
lds
xchg
jb
and
add
push
bound
or
sbb
mov
repz
sub
cmp
fwait
add
xchg
pop
add
adc
rclb
and
push
mov
popf
sahf
mov
rolb
repnz
inc
mov
cld
int3
and
mov
xor
xchg
popa
mov
aas
cltd
ret
push
mov
push
mov
loope
addr16
lock
cmpsb
xor
hlt
test
or
iret
push
fistps
adc
pop
lea
test
push
pop
movsl
xor
stos
adc
imul
jmp
mov
adc
jbe
mov
sub
shlb
out
int
int
or
es
add
sub
rclb
nop
in
addr16
inc
push
push
lahf
xor
leave
push
das
leave
jmp
ss
xor
xor
push
jno
lods
xchg
in
pop
shl
ret
pop
jmp
in
dec
aam
rcll
push
add
push
enter
xor
flds
pop
scas
roll
xchg
mov
push
out
mov
mov
rclb
ficoml
imul
cmp
dec
cmp
sbb
clc
xchg
bound
leave
test
jb
push
xor
and
insb
push
sub
sub
fnsetpm(287
cltd
add
inc
jecxz
cmpsl
mov
in
les
lods
push
push
aas
cwtl
or
jb
adc
popa
mov
adc
mov
xlat
in
lahf
adc
pop
fs
enter
fsts
mov
cmp
cmp
sar
xchg
hlt
cmp
loop
push
fiadds
add
ss
cld
pusha
fists
pop
sub
fcmovnb
or
repz
adc
lods
pop
je
fcompl
jg
jle
adc
mov
mov
addl
fwait
fs
loopne
imul
fdivrs
mov
adc
mov
lret
out
or
arpl
in
push
lods
outsb
inc
cmp
sub
movsl
push
xchg
pop
cmp
cmp
push
jb
cwtl
adc
xchg
lea
and
sub
nop
cltd
xchg
out
movb
std
mov
jb
xchg
lret
out
jecxz
aad
push
xor
xchg
shlb
or
arpl
in
dec
mov
xor
and
test
fbld
xchg
adc
push
inc
mov
dec
push
daa
sbb
add
inc
adc
testl
pop
or
dec
mov
xchg
push
add
jge
test
rorl
inc
mov
outsl
dec
arpl
loope
mov
lods
outsl
mov
shlb
ss
and
sbb
fst
andl
test
insw
nop
out
sbb
testl
sbb
cmc
out
or
add
push
inc
jl
cmp
inc
lret
mov
data16
movsb
into
inc
mov
outsl
add
jg
lret
popf
inc
mov
insl
addl
jae
xor
cld
jne
leave
aad
cmp
fcoms
subb
lahf
and
out
push
iret
inc
popa
dec
mov
std
mov
into
aas
data16
popa
sub
dec
push
lods
sub
in
out
mov
jg
aam
hlt
insb
pop
aam
outsb
sbb
inc
leave
mov
cmc
daa
xor
inc
lret
repz
jno
mov
or
mov
lods
ljmp
xchg
daa
test
xor
add
inc
inc
sbb
fldt
or
and
xchg
sarl
push
push
repnz
push
loop
mov
mov
fcomps
rcll
jb
andl
insl
jecxz
add
sbb
sub
lods
mov
pop
das
xor
lahf
adcb
sahf
aaa
mov
rcl
outsb
mov
into
dec
call
cld
xor
pop
dec
mov
jbe
jecxz
arpl
push
ret
adcl
call
mov
and
xlat
sub
dec
dec
xchg
loop
jle
lahf
xchg
sbb
jne
xchg
or
xchg
lahf
xchg
sub
cwtl
ret
out
nop
jmp
cs
xchg
jp
mov
cmc
ds
jp
loopne
rcrb
xchg
jmp
out
cwtl
jbe
test
and
mov
push
test
pop
movsl
outsl
push
nop
aas
or
das
mov
mov
dec
fdivs
out
cmpsb
inc
ror
mov
mov
jp
outsl
sub
rcrl
dec
or
jg
ljmp
loopne
push
jl
icebp
xor
inc
pop
repnz
dec
es
nop
inc
les
adc
dec
dec
xchg
jp
aad
cmp
shrb
movsb
dec
out
push
inc
mov
or
mov
sub
sarb
out
aaa
sub
or
jecxz
pop
dec
xor
dec
sbb
imul
mov
insl
or
dec
popf
popa
imul
flds
pop
hlt
nop
add
cmp
pusha
into
enter
xlat
mov
mov
lret
leave
xchg
insb
cld
je
push
inc
leave
mov
out
mov
pop
add
rcr
sub
test
ror
shr
pop
out
imulb
jle
xchg
mov
xorl
test
sub
std
push
gs
orl
xor
aas
in
adc
inc
das
or
cmpsl
jle
cmp
icebp
cmp
js
popf
adc
in
mov
pushf
ja
daa
leave
aam
jl
mov
xchg
cmp
fistl
sarb
push
cmp
pop
push
movsl
mov
icebp
sub
clc
jae
jo
scas
sbb
test
mov
mov
push
pop
sbb
add
push
sbb
pop
scas
or
xorb
jle
mov
sbb
lods
test
jl
in
push
shll
or
or
aad
out
std
testb
adc
xchg
shrd
mov
pop
jnp
xlat
sbb
loopne
mov
adc
out
add
sub
jo
add
repz
test
cltd
flds
and
test
dec
lret
insl
test
fldenv
push
stos
or
xchg
xor
rcll
icebp
mov
add
or
fiadds
mov
data16
push
xchg
jle
loope
std
xorb
mov
adc
outsb
jge
xchg
mov
ret
xchg
and
mov
fimull
iret
das
pop
movl
fildl
and
fdivrs
xchg
das
inc
cmpsb
add
push
pop
sbb
jo
mov
data16
ret
mov
xor
push
sub
push
xor
sbb
test
fwait
cmp
xor
add
fs
or
decb
popf
xor
inc
movsb
push
cmc
sahf
and
test
sbb
xchg
cmp
adc
outsb
mov
outsb
mov
pusha
jp
sbb
dec
daa
pop
xor
pop
int
cmpsb
xchg
inc
loopne
int3
repz
sbb
stc
dec
cltd
xchg
test
xor
jge
out
lods
add
mov
fs
shrl
xchg
sarb
iret
add
sarb
sub
mov
pop
daa
inc
fwait
push
xor
mov
rcl
fs
jae
js
xchg
dec
cltd
jae
cmc
push
mov
mov
mov
mov
sbb
dec
mov
mov
adc
push
and
lret
push
cmp
or
xor
and
sbb
fwait
aad
xor
add
inc
insb
or
notb
xchg
pop
mov
sbb
sub
fwait
cmpsb
xchg
je
lret
sbb
das
into
das
cmc
fdivrl
and
test
adc
mov
lret
mov
pop
push
push
in
clc
pop
incl
add
in
gs
adc
sbb
stos
mov
jmp
test
jp
jl
les
mov
daa
out
aam
inc
ljmp
cmp
and
jnp
loop
into
mov
sub
mov
and
cs
adc
and
xchg
pop
pop
push
and
inc
int3
pusha
adc
repz
pop
cmp
jnp
mov
sbb
or
call
dec
xor
jnp
ficoms
mov
mov
jae
test
add
shl
lods
push
in
out
fwait
push
push
notl
clc
xor
pop
in
cmp
cmc
sbb
les
aas
mov
adc
sbb
out
sbbb
sar
out
fstpl
xchg
pop
pop
xchg
outsl
shrb
push
movsb
sbb
roll
clc
xor
call
or
pop
jecxz
inc
inc
shrb
leave
lods
push
or
jo
mov
mov
mov
ljmp
ja
out
leave
jle
mov
js
jecxz
repnz
lea
addr16
push
js
mov
in
outsl
std
sub
push
xchg
adc
in
lahf
push
add
jnp
lea
mov
orb
lret
sbb
sbb
out
push
fidivrs
ret
test
pop
sbb
push
or
fwait
cmc
subl
outsb
es
jecxz
dec
mov
pop
xor
in
ss
sbb
add
aam
dec
test
cli
aaa
push
icebp
push
addl
xchg
imul
jne
and
mov
inc
iret
mov
dec
cmp
inc
inc
mov
popa
dec
pop
lea
mov
add
mov
mov
jl
sarl
sbb
xor
push
xor
cmp
sbb
cli
sub
stc
repnz
xchg
aam
movsl
mov
js
or
dec
jno
adc
std
test
les
fisubrs
inc
fiadds
outsl
mov
je
fadds
gs
pop
xchg
enter
insb
std
das
push
lret
add
jbe
mov
xor
xor
out
push
and
add
pop
test
mov
ret
pop
mov
testl
sbb
jno,pt
sub
hlt
add
lret
rcll
dec
xor
ret
es
fistl
cs
imul
xchg
rcrl
mov
leave
jg
data16
test
xchg
sbb
ss
xor
rolb
cmp
mov
mov
add
daa
jno
lret
push
stos
or
aad
outsl
out
add
jns
jnp
cwtl
mov
adc
inc
mov
dec
outsl
lods
jo
inc
lock
sub
repnz
and
pusha
xchg
loopne
mov
gs
push
jp
cs
rcl
dec
rcr
out
fisubl
fwait
sbb
aam
push
xor
jbe
mov
shlb
push
mov
cmp
pop
daa
out
ss
shrl
and
adc
dec
push
psubsw
lods
mov
lods
in
data16
and
cmp
fisubrs
xor
repz
fcmovb
inc
push
adc
stos
imul
mov
out
int
pop
push
sub
mov
mov
inc
xor
xchg
or
cwtl
jae
pop
mov
mov
xchg
cld
push
lock
or
call
mov
mov
mov
addr16
sbb
aas
mov
adcb
jb
scas
imulb
aam
fstpl
xchg
icebp
cld
sub
mov
dec
mov
jle
lret
or
test
fidivl
fcoms
or
xlat
mov
xlat
outsl
pop
movsl
push
test
push
aam
clc
aaa
pop
outsl
stos
lods
out
push
popf
aas
cmp
cmc
mov
and
jo
fwait
inc
out
lods
pop
push
fwait
push
bound
xchg
js
mov
stos
push
jge
mov
pop
dec
jo
incl
add
fistl
movsb
jecxz
notl
push
mov
mov
and
push
in
cwtl
in
imul
subb
aaa
stc
testl
lock
sub
in
mov
cmp
ret
mov
call
pop
pop
inc
push
sub
jmp
mov
pop
jge
push
mov
int
scas
jge
jns
inc
into
call
fmuls
inc
icebp
sub
sub
mov
mov
sahf
popa
push
iret
mov
cs
and
cltd
stos
icebp
xchg
push
hlt
mov
adc
pop
sbb
divb
je
add
mov
push
mov
test
mov
xchg
cmpsl
cmp
jne
subl
add
pop
je
mov
adc
pop
cltd
fiaddl
int
movsb
sti
inc
mov
jnp
lret
dec
inc
dec
mov
ljmp
mov
and
fldt
mov
add
imul
outsl
fiadds
jbe
mov
inc
jp
xor
mov
in
lds
push
pop
jmp
adc
inc
mov
js
adc
and
or
ret
and
movsl
or
out
sbb
mov
fistpl
or
mov
mov
or
mov
hlt
xchg
ljmp
js
add
js
sub
xor
push
or
mov
lcall
inc
aam
dec
inc
mov
insb
shll
dec
insb
pop
cltd
out
stos
imul
inc
cmpb
scas
inc
int3
outsb
cli
and
mov
popf
scas
add
lock
cld
mov
sbbb
jb
in
xchg
push
adc
mov
add
xlat
mov
mov
stc
inc
lcall
mov
add
or
mov
mov
ss
xor
push
mov
ficompl
ljmp
cli
ret
mov
add
nop
test
jle
or
loope
adc
mov
xchg
notb
xchg
cmp
push
fwait
outsl
fisttpl
sti
rclb
cmp
push
add
mov
jae
pop
sub
xchg
mov
add
pop
xchg
add
cli
push
jmp
aas
mov
cmp
addr16
lret
movsl
lret
mov
push
mov
inc
mov
rol
cmp
and
mov
mov
pop
sub
jbe
iret
mov
jae
jae
aad
scas
cwtl
outsb
mov
dec
mov
pop
je
and
mov
jb
cmp
fldcw
cmp
rorl
addr16
xlat
lea
and
popa
cmc
mov
mov
mov
pop
xlat
ficoms
cli
sahf
arpl
test
enter
mov
and
incb
sub
dec
and
push
or
xchg
push
xchg
repz
les
scas
or
fisubrl
mov
stos
xor
pop
push
notb
and
jb
rorl
mov
jns
int3
aad
sbb
pop
mov
sbb
xor
pop
dec
mov
gs
fs
dec
stos
das
lods
jl
jecxz
pop
popf
push
pop
iret
xchg
scas
add
cmp
scas
orb
pop
cltd
adc
sbb
arpl
repz
push
pop
clc
sub
bnd
pop
ljmp
mov
adc
pop
stos
xchg
cltd
gs
cmova
xor
sahf
leave
sub
xchg
call
sub
cmp
loop
cmp
prefetcht0
mov
addb
xor
jnp
sub
mov
and
lahf
xchg
pusha
loop
in
sbb
sub
in
dec
shlb
and
int3
mov
fbstp
sub
out
rorb
xchg
mov
mov
cmp
jae
jae
pop
jbe
lea
lock
push
jmp
push
shll
data16
sbb
lcall
stos
jns
and
or
sarl
sub
inc
lock
or
adc
push
pushf
mov
jmp
mov
mov
pop
lock
or
cmp
ljmp
leave
ret
cmp
cmpsb
mov
cld
adc
daa
jmp
lods
adc
repz
or
imul
or
cs
mov
sub
aaa
dec
test
hlt
mov
inc
mov
and
dec
fcmovbe
lods
adcb
dec
in
loop
test
inc
xor
sub
mov
filds
std
and
ja
daa
sub
mov
lret
adcl
fwait
jbe
test
mov
inc
push
push
inc
call
loop
loop
mov
xchg
sbb
cmpsb
dec
sub
cmpl
jo
rcll
andl
rcll
enter
inc
dec
nop
xchg
cli
lcall
scas
jmp
sub
cmp
ret
fldt
and
xchg
stos
sahf
add
pop
aam
sbb
sbb
std
outsl
adc
out
pop
mov
lret
lea
das
aaa
mov
stos
sbb
xor
add
xchg
push
xchg
aaa
dec
cmp
jb
lods
jl
jp
iret
pop
enter
ss
push
sahf
mov
bound
bound
std
movsbl
sub
jle
roll
sub
or
loopne
or
sub
ja
inc
or
mov
xor
test
ljmp
shll
fcomps
jne
inc
jmp
shrb
jg
scas
jecxz
mov
mov
aaa
push
bound
inc
adc
push
out
sti
into
imul
mov
pop
test
push
sarb
jecxz
mov
sahf
xlat
jge
push
lea
leave
subl
mov
push
shrl
roll
xchg
xchg
xrelease
sbb
xor
std
imul
iret
sahf
pop
push
xor
mov
dec
xchg
and
mov
xor
pop
sbb
jle
ds
adc
lahf
dec
jno
cmp
lock
nop
mov
flds
repnz
test
loop
sbb
pop
cmc
movsb
sbb
test
mov
fwait
sub
fistpll
cwtl
or
aad
pop
pop
push
sub
cmpsl
jae
out
sub
push
mov
sbb
jecxz
mov
in
mov
add
leave
sbb
add
inc
in
shlb
dec
adc
pushf
add
mov
add
bound
aaa
test
add
popf
shrl
xor
jae
lods
imul
mov
inc
adc
faddl
scas
sub
mov
stos
and
insl
pop
dec
js
dec
push
jb
xor
cwtl
mov
dec
pop
jb
xor
pop
xor
popf
stos
cmp
fidivl
dec
mov
popa
mov
aad
xchg
inc
lret
mov
mov
mov
xchg
mov
mov
push
fwait
int
out
test
add
fisubrl
lret
inc
adc
push
aam
jae
and
mov
mov
repz
insb
add
push
pop
inc
cs
xlat
inc
and
test
test
pop
sbb
outsb
lea
mov
stos
std
popa
into
mov
push
call
loope
sub
pop
push
xchg
jb
aam
jl
jg
sarb
lock
push
aas
fldl
push
or
jae
xchg
or
cmp
test
hlt
add
xor
xor
lods
pop
lahf
xchg
add
add
mov
xchg
push
daa
cmp
jbe
or
loope
ret
inc
pop
idivl
sbb
das
xchg
loop
das
bound
jg
inc
jmp
mov
inc
pop
test
cmp
cmp
mov
call
daa
cmpsl
mov
pop
pop
imull
push
shrl
adc
jmp
ja
adc
cmpsl
dec
hlt
stos
mov
divl
sbb
shll
sbb
cmpsb
add
les
repz
mov
push
imulb
mov
sub
push
mov
mov
icebp
adc
cmpsb
fs
adc
fisttpll
pop
mov
sub
popa
loopne
popa
add
xchg
ret
lods
push
lret
jbe
arpl
popa
or
repnz
mov
lock
dec
ror
popa
mov
pop
xchg
push
mov
sbb
jo
mov
add
push
cmp
or
pop
sbb
mov
cmp
jnp
inc
pop
push
mov
inc
sysexit
adc
ss
xor
push
xor
hlt
push
es
xor
fisubs
adc
dec
subl
cltd
mov
das
loop
push
pop
add
stc
pushf
arpl
mov
jno
sub
xchg
inc
lcall
pop
jne
les
cli
in
xchg
cmp
imul
sub
out
shl
imul
xor
or
jmp
jmp
xlat
ret
inc
mov
add
iret
sbb
fwait
xor
sbb
out
rcll
enter
lock
mov
clc
jp
xor
mov
aaa
shl
rclb
test
inc
test
pop
daa
adcl
andb
in
les
dec
sar
pop
mov
hlt
test
add
lea
push
xlat
cmc
fildl
xchg
arpl
mov
test
jne
scas
or
mov
or
lods
pop
and
divl
cmp
jge
andb
leave
shlb
jle
cli
mov
in
inc
mov
push
mov
mov
add
xchg
pop
sub
out
push
push
dec
ljmp
in
repz
gs
jg
pop
jge
jns
xchg
mov
jp
mov
mov
into
fidivs
jg
test
cltd
aad
adc
roll
mov
fstl
sub
jbe
in
jo
fwait
xchg
aad
insb
std
inc
adc
mov
ret
fmull
jae
and
stos
dec
adc
xorb
dec
jecxz
sbb
xchg
mov
fistpl
mov
jle
nop
mov
inc
adc
movsb
insl
jl
jb
dec
movsb
inc
popf
fsubrl
cltd
mov
xchg
daa
sbb
sub
jp
mov
cmpsb
xor
mov
inc
test
outsl
leave
push
jo
mov
cmp
stos
add
gs
dec
sbb
pop
jb
sub
jo
movsl
add
sbb
shll
pushf
cmpsl
pop
push
xchg
fidivl
insb
mov
mov
jbe
dec
fcomps
fidivs
popa
loopne
add
pop
pop
lock
mov
adc
mov
stos
xor
adc
je
mov
and
mov
inc
mov
stos
shll
inc
pop
inc
add
xor
inc
and
sahf
aaa
xor
repz
icebp
mov
mov
push
mov
in
mov
add
out
pop
push
inc
arpl
sbb
mov
jecxz
mov
jno
loopne
mov
push
sub
and
addr16
fimuls
in
sub
mov
dec
xor
pop
cltd
cmp
push
xchg
loopne
es
xor
sub
sbb
loopne
dec
pop
dec
push
mov
add
jbe
pop
xor
push
jle
jns
es
int3
pop
mov
test
jmp
dec
and
popf
cmp
call
std
sbb
stos
xor
inc
pusha
arpl
unpcklps
jo
push
fs
out
fsubrs
fistpl
out
mov
mov
push
adc
fucomi
std
mov
mov
dec
sbb
add
imul
arpl
adc
xchg
push
pusha
inc
mov
popf
fildll
ljmp
ret
pop
fildl
jl
loope
or
fdivl
jmp
sub
pusha
mov
inc
loop
lret
sub
mov
mov
out
or
ljmp
dec
mov
push
dec
inc
out
scas
inc
sbb
xor
xlat
jp
and
mov
mov
mov
fwait
dec
or
mov
out
fwait
jmp
mov
lds
and
xor
dec
mov
mov
es
push
xor
cmpsl
popa
and
add
xor
xchg
xchg
xchg
leave
ja
mov
sti
cmp
push
lret
lds
xchg
gs
mov
xchg
pop
sbb
rclb
hlt
and
xor
cltd
add
xchg
cld
gs
gs
fidivs
jp
mov
push
loopne
jmp
pop
mov
ror
mov
mov
lods
push
xchg
mov
xchg
jle
insb
in
frstor
loope
ds
movsl
mov
sub
sub
adc
scas
or
push
mov
out
inc
icebp
cmp
fst
ljmp
cmpb
dec
fs
dec
xchg
loopne
shr
into
in
jno
scas
xor
mov
dec
icebp
mov
pop
outsl
or
test
xchg
sub
loopne
and
push
js
outsl
shll
lds
cwtl
xchg
xor
mov
lcall
push
stos
inc
jno
inc
push
sbb
inc
cltd
mov
imul
and
jbe
xlat
xor
push
test
push
mov
test
pop
xchg
mov
mov
into
lock
sbb
lret
add
pop
int
out
mov
dec
mov
cld
sub
mov
xor
pop
not
frstor
inc
cmpsb
fnsave
adc
pop
adc
xor
nop
addl
pop
lea
mov
int3
adc
lods
jne
int
mov
stc
or
hlt
pop
pop
out
jnp
into
mov
pop
fsubrl
int3
in
add
xchg
je
push
test
pop
push
out
rorl
aad
and
mulb
sub
dec
inc
push
aad
pushf
pop
and
mov
das
imul
test
push
ret
adc
or
or
pop
push
xor
mulb
xchg
sti
cmp
pop
lods
jne
xchg
aad
jb
sbb
scas
loope
std
jnp
pop
push
jb
stos
add
and
adc
sub
ja
stos
cltd
addr16
cmc
cmp
std
or
in
jge
push
push
dec
xor
cmpsb
pop
mov
mov
mov
rcl
mov
fsubs
loope
test
mov
shl
inc
sub
int3
lods
addr16
daa
and
mov
ret
call
ss
daa
stos
xchg
jl
subl
data16
fs
aas
mov
aas
and
adc
sahf
outsl
jl
je
das
push
jp
jmp
dec
cmp
inc
jle
test
jne
fwait
and
sbb
lods
sub
mov
loope
jl
addr16
jp
shrb
xlat
cs
stc
pop
pusha
cmp
push
arpl
mov
jnp
pop
dec
push
add
mov
popa
pop
dec
xchg
and
lock
pushf
xor
inc
fs
vdivpd
shll
popf
pop
and
cmp
xchg
test
in
mov
shr
xor
jge
jne
enter
xchg
dec
rorb
jb
loopne,pt
cwtl
repz
arpl
sbb
mov
sahf
mov
push
xchg
fstcw
and
mov
aas
mov
scas
adcl
arpl
fimull
xchg
push
fistpl
pop
cmp
cli
dec
lds
sbb
cmp
push
test
jp
xor
mov
std
ds
mov
pop
cld
lcall
xor
mov
add
inc
xchg
jmp
mov
sti
and
ret
psraw
xor
fnstenv
cmp
rorl
ret
xchg
push
and
cmp
sbb
out
xchg
fdivl
fs
adc
fwait
test
fwait
insb
movsb
push
push
jecxz
push
mov
push
out
dec
fnstcw
sub
pusha
fimull
shl
das
dec
mov
incb
in
sub
fildl
cmp
andb
mov
sbb
cmp
lods
jg
je
push
or
popa
loope
inc
iret
ret
mov
popa
mov
sub
pop
rcll
push
scas
sbb
rcr
adc
xlat
enter
movsb
push
insl
jecxz
ss
sub
xchg
cmp
imul
and
call
lods
cmp
iret
inc
push
pushf
and
aam
dec
jb
or
pop
xchg
add
jp
sub
xchg
sbb
imul
movsb
fisttps
imul
mov
imul
pop
mov
pop
leave
lahf
cli
mov
arpl
push
push
adc
cmp
mov
stc
mov
cld
push
push
cmc
jecxz
push
pop
or
mov
push
pop
je
sub
pushf
je
or
or
rorl
mov
cmpsb
push
jmp
fisttps
jbe
das
aas
sbb
pop
test
inc
inc
mov
mov
bound
das
in
jae
loopne
dec
xor
jno
inc
pop
xchg
lahf
push
jl
mov
rorb
testl
push
fstpt
fcoml
shl
inc
stos
sub
enter
shll
or
out
ja
mov
loopne
push
and
ds
mov
pushf
cltd
mov
insb
inc
and
and
pop
xchg
out
sbb
loopne
dec
inc
dec
loopne
ficompl
mov
mov
pop
aas
dec
and
imul
mov
mov
cmp
lret
int3
mov
jp
sbb
xchg
repz
mov
enter
ret
dec
mov
jb
mov
ret
xchg
cmp
or
jo
inc
and
pop
scas
sub
jo
mov
xchg
cmpsl
sub
lahf
cmc
mov
movsb
insl
mov
nop
imul
xchg
mov
aam
push
ss
into
fisubs
jle
pushf
xchg
sbb
pushf
mov
xor
xor
les
or
push
aad
and
cmp
xchg
xchg
out
hlt
jge
and
shll
test
mov
mov
imulb
cmp
jns
xchg
adc
lock
inc
add
dec
lret
mov
add
scas
adc
or
xor
pop
mov
fimull
xlat
call
cmp
mov
push
jle
mov
pop
stos
mov
mov
loopne
fcom
repz
adc
inc
sbb
inc
das
ret
mov
sarl
dec
sbb
lahf
popa
aas
enter
mov
repnz
push
jnp
push
mov
pushf
xchg
jle
push
mov
xchg
mov
dec
dec
push
sar
mov
mov
sbb
lret
push
scas
mov
jecxz
jb
xchg
out
nop
movsl
sarl
jl
and
pop
and
addl
test
inc
pop
or
sahf
clc
sbb
mov
sbb
push
push
pop
pop
pop
int
xchg
imull
mov
fsubrs
inc
outsl
mov
dec
stos
aas
push
sbb
je
and
sub
mov
jbe
sti
ja
repnz
fistpll
fldcw
ljmp
cltd
mov
push
out
adc
add
mov
and
pop
loop
fldcw
xchg
mov
xchg
adc
mov
lock
push
inc
push
leave
dec
sub
push
xor
jne
mov
imul
mulb
dec
adc
loope
loop
add
inc
and
inc
pop
mov
std
movsb
push
stos
jno
lock
lock
or
sub
bound
enter
push
push
jle
pop
push
mov
push
push
cwtl
mov
push
pop
insl
xchg
ds
add
push
data16
rcll
inc
sub
pop
test
nop
sub
mov
into
dec
je
xchg
cli
dec
inc
mov
outsl
dec
mov
xor
loop,pn
xchg
es
xchg
mov
fs
dec
stc
sub
dec
js
mov
push
shl
ss
hlt
mov
into
mov
movlps
daa
dec
sti
loop
call
filds
or
stos
hlt
out
cs
mov
rcll
repnz
cmc
daa
ds
sub
push
lea
lock
xchg
mov
xor
sti
loope
daa
dec
xchg
or
jae
pop
jne
jb
sub
int3
inc
sub
data16
movsb
insb
mov
fmull
pop
cld
xor
mov
mov
das
fnstsw
addb
mov
fs
push
jb,pt
fwait
scas
negl
fs
cmp
out
sub
fldt
int
outsb
ret
mov
ds
mov
and
sub
push
pop
cmp
mov
lcall
cmp
lret
ljmp
insb
xchg
add
into
mov
push
lods
inc
les
or
inc
xchg
test
das
add
push
lds
hlt
jnp
push
pop
arpl
lcall
icebp
ljmp
and
popa
mov
addr16
xchg
iret
xorb
dec
jle
xchg
fldl
jmp
js
sti
jg
adc
int3
stos
jge
sub
jecxz
mov
jmp
dec
es
mov
jae
mov
mov
cmp
push
jp
adc
push
adc
or
into
xchg
xlat
fidivrs
and
mov
setnp
push
adc
popa
fwait
hlt
push
add
out
lods
outsb
adc
cmp
shl
xchg
jp
mov
sub
mov
jno
sbb
je
or
mov
scas
mov
ljmp
xorl
repnz
push
inc
imul
jmp
bound
dec
jle
test
scas
dec
cmp
ret
mov
insb
out
je
xchg
or
and
enter
sar
cld
cmc
lods
lods
sbb
sub
mov
cli
outsl
sbb
iret
mov
in
fists
mov
out
addr16
sbb
sub
xchg
and
jmp
daa
dec
mov
xchg
or
daa
into
lret
iret
loopne
inc
jne
mov
inc
test
call
or
sub
or
cmp
leave
mov
les
popf
jg
mov
movsb
sub
scas
sub
pop
fnsave
cmp
adcb
xor
arpl
and
push
mov
push
cmp
mov
movsl
pop
jno
loop
sub
idivb
and
xchg
in
aas
lahf
push
stos
xor
scas
jnp
xchg
aam
fwait
dec
and
out
outsb
in
or
aad
or
jb
popf
jle
mov
cmp
ret
jmp
clc
cmpl
mov
lret
or
pop
out
pop
stc
mov
cli
jl
stc
scas
fisubl
push
jae
xor
rclb
insl
inc
jbe
testb
cmpsl
dec
pop
lret
loopne
dec
xchg
sbb
shll
mov
push
fiaddl
dec
mov
or
jle
sbb
mov
out
int
aas
cltd
pop
nop
sub
xor
rcl
xor
pop
jge
dec
into
and
insb
and
push
outsl
sub
mov
and
movsl
cmp
data16
imul
ds
dec
daa
xor
push
mov
clc
and
shrb
ja
pushf
sahf
jnp
mov
jle
popf
push
mov
mov
xor
sbb
mov
cmp
or
and
xlat
int3
ljmp
cltd
pop
jge
pop
arpl
sti
mov
scas
xchg
aad
cmp
cwtl
movsl
jae
sbb
or
add
inc
arpl
mov
addb
lahf
sbb
lret
dec
add
inc
or
adc
rolb
mov
leave
jecxz
cmp
fadds
pop
push
xchg
ljmp
mov
add
popf
cmpsb
jae
mov
cmp
sti
stc
mov
cltd
inc
and
xor
sbb
mov
ds
pop
loope
xchg
jle
push
mov
jne
jno
dec
adc
aas
sbb
mov
fdivs
add
or
clc
imull
pusha
dec
inc
xor
lock
pop
adc
inc
jns
outsb
iret
mov
test
jno
cwtl
pop
in
cwtl
cs
jl
pushf
push
imul
or
lret
addr16
jb
movsb
fwait
out
jge
loope
daa
fcoms
daa
mov
inc
pop
mov
aas
xor
dec
test
mov
cld
loop
push
ljmp
push
jecxz
cs
fidivrl
jb
insl
xor
push
shll
xchg
sub
or
scas
scas
and
cmp
xor
dec
hlt
lods
nop
orl
xchg
xor
lcall
jle
pop
iret
xchg
xchg
lods
xchg
popa
arpl
cmpsb
xchg
insb
jne
test
sahf
mov
push
sub
dec
repnz
jecxz
inc
adc
addr16
mov
imull
imul
add
mov
mov
in
popf
leave
mov
imul
popf
loope
mov
xchg
dec
js
add
inc
fiadds
lods
pop
xor
mov
cld
movsb
xchg
cmp
inc
jmp
sti
cmpsb
mov
std
movsb
and
mov
adc
out
dec
inc
and
inc
jbe
xlat
dec
xor
mov
gs
add
cmpsb
xlat
jo
loope
sti
mov
mov
cmp
lahf
pop
inc
jmp
mov
adc
fnstsw
or
push
cmp
les
adc
fisubl
xor
enter
xchg
push
xchg
fwait
repnz
int3
jl
shrl
jnp
fdivs
cmp
bound
and
xor
nop
xchg
mov
jno
fucomip
push
inc
xor
mov
fstpl
xor
push
mov
xchg
or
mov
push
loope
or
std
orl
repz
and
out
std
fcomp
icebp
pop
fsubs
jmp
daa
sbb
and
rol
mov
xchg
mov
movsb
xchg
mov
adc
dec
lock
ja
aad
jb
pop
cwtl
pop
fsin
xchg
dec
in
mov
es
push
adc
cld
mov
mov
fsubrp
jbe
fwait
int3
jecxz
cmp
cmp
ja
jge
add
and
push
push
ss
add
mov
in
enter
sbb
xchg
pop
mov
out
sbb
mov
addr16
aas
in
xchg
es
mov
jno
mov
mov
or
aaa
mov
xorb
mov
mov
mov
adc
push
pop
lods
hlt
jge
cli
call
sub
js
push
adc
lods
mov
ret
sbb
repnz
lcall
cwtl
fidivs
out
das
nop
jmp
push
adc
jne
lock
inc
cmp
in
cmp
addr16
pop
pop
xor
jmp
outsb
pop
mov
mov
mov
mov
dec
push
mov
fs
jns
shrl
sub
stc
push
inc
mov
ss
mov
adc
cwtl
std
add
inc
pop
fwait
mov
sbb
mov
clc
jae
pop
mov
arpl
jae
arpl
pusha
mov
pop
movsb
dec
inc
xorl
pop
stc
cmp
iret
js
arpl
ud1
sbb
mov
cs
das
mov
push
cmpsl
pop
inc
cmc
jmp
ja
dec
test
adc
clc
pop
sbb
lret
movsl
mov
pop
mov
fwait
xor
fisubl
sti
lds
xor
mov
xor
push
outsl
fsub
dec
imul
je
push
popa
out
cmp
movsb
dec
inc
and
aad
pop
and
jo
pushf
sbb
rcl
testl
ret
hlt
inc
cli
sub
push
out
lret
popa
pop
xor
in
mov
push
adc
scas
mov
cwtl
rorb
jns
dec
arpl
pusha
mov
or
jmp
push
loopne
sbb
pop
enter
push
bnd
xchg
jl
icebp
xchg
jnp
ja
das
mov
je
jge
add
jae
out
jle
lahf
movsb
das
loop
xchg
push
pop
xchg
les
lods
insb
jl
push
and
cwtl
mov
mov
lods
loopne
sbb
jbe
mov
movsb
push
pop
adc
sbb
stos
pop
dec
movsb
fucomp
leave
adcb
mov
cmc
sbb
mov
sub
push
sub
inc
bound
out
out
sub
or
test
je
mov
daa
lods
lahf
add
adc
aam
jg
lods
adc
in
mov
mov
mov
xchg
fs
sub
add
mov
in
mov
call
xchg
cs
pop
scas
outsb
stos
loopne
fld
popa
jae
pop
adc
sbb
popa
ja
or
call
rep
add
addr16
add
nop
pusha
sbb
jecxz
cmp
and
loop
outsl
inc
mov
dec
lahf
push
xchg
bnd
out
mull
insb
movsb
xchg
adc
push
sub
mov
push
inc
jbe
hlt
test
out
rcrl
mov
mov
iret
mov
in
jge
ja
cmpsb
lcall
clc
pop
fs
js
sbb
shrb
out
and
push
jbe
jecxz
into
inc
mov
xchg
aaa
add
out
cmp
fdivl
xor
mov
test
cmc
nop
cltd
loope
xor
rcrb
popf
ficomps
ds
mov
pop
jbe
test
fadds
dec
xrelease
adc
test
movsl
inc
fisttpl
scas
fdivl
test
push
inc
iret
stc
xchg
inc
xchg
cs
push
dec
cs
je
jp
lea
inc
sbb
insb
xchg
call
sub
push
ret
xchg
cmp
in
and
hlt
sbb
sbb
lret
lods
push
sbb
jno
das
aad
into
out
subl
xor
dec
push
outsb
sarb
or
jno
andb
inc
ffree
clc
or
in
and
xor
fdivl
inc
scas
mov
lret
xor
rol
inc
sti
add
repz
xchg
mov
andl
rcrb
sbb
or
test
sahf
and
dec
cmp
sarb
cmp
nop
hlt
shr
iret
jle
leave
sbb
xor
add
push
stc
mov
dec
xchg
xchg
fisttpl
push
or
inc
adcb
push
add
push
ror
mov
aad
xor
inc
fdivr
imul
mov
aam
inc
adc
scas
pop
fs
inc
cmpsl
pop
mov
pop
add
cmp
aas
add
aaa
shll
sbb
dec
xchg
fsubs
stc
test
jno
ret
dec
repnz
mov
adc
dec
stos
into
or
fidivrl
and
mov
and
dec
into
das
sbb
insl
loopne
mov
sbb
sub
cltd
dec
lahf
hlt
mov
ljmp
clc
lea
aaa
iret
push
and
das
mov
icebp
dec
jo
mov
stos
popa
rol
mov
and
xor
xchg
inc
movsb
stc
mov
arpl
das
inc
pusha
push
pop
leave
mov
jne
mov
xor
mov
shll
pushf
sahf
lret
and
xchg
addr16
aas
pop
sub
sub
lahf
add
sarl
jbe
xor
lds
xor
mov
pop
and
pop
add
in
insl
jle
push
inc
jae
enter
ja
mov
roll
cmp
add
jae
imul
rcrb
sbb
fnstenv
icebp
sub
fcomps
pop
psrad
sti
add
insl
fmuls
movntq
test
xchg
clc
push
fwait
decl
cli
xchg
call
ds
pop
pop
xor
cmp
or
rol
sub
clc
ja
cmpsl
push
jno
dec
imul
adc
cmp
cmc
push
inc
mov
loopne
push
lret
insb
pop
xchg
inc
xchg
insb
jecxz
push
or
mov
clc
cmp
mov
out
dec
dec
jmp
mov
jae
jns
rorb
pop
pop
or
icebp
sahf
adc
movsl
dec
nop
push
push
imul
push
sbb
lret
xor
lock
hlt
pop
shrl
pop
ja
out
adc
shll
lret
pop
aas
dec
pop
daa
lret
cmpb
add
lcall
xchg
sub
pop
ss
push
or
push
mov
xchg
sbb
mov
enter
push
xchg
xchg
add
fsubrs
insl
mov
inc
dec
ss
mov
rcrb
jp
xor
sahf
testl
test
and
mov
and
scas
imul
jle
push
iret
scas
push
cld
mov
es
and
lds
cld
scas
stos
mov
mov
data16
mov
add
gs
mov
sbb
jns
cwtl
push
sbb
push
jl
adc
out
aad
xchg
movsl
cmpsl
push
aas
cmpsb
lds
std
cmp
pop
inc
loope
cmp
xchg
mov
cwtl
pop
jno
std
push
pop
rclb
into
ficoml
push
mov
adc
lds
xor
aad
pop
add
subl
imul
xchg
mov
mov
jnp
int3
clc
jae
lcall
pop
imul
loope
in
add
dec
ja
fldt
imul
jecxz
inc
mov
inc
std
sub
cld
xchg
scas
xlat
in
into
jns
in
das
incb
aad
add
mov
xchg
jge
mov
rcll
and
mov
push
popa
mov
shr
outsl
cs
icebp
sub
mov
mov
les
outsl
andb
xor
js
inc
mov
movsb
push
mov
sub
sbb
lds
mov
stc
jne
dec
repz
fcompl
repz
mov
mov
in
stc
dec
scas
jns
xchg
pop
cmpsl
sub
popf
repz
loope
test
xor
fistl
ss
lea
xor
and
mov
sarb
shrl
fdiv
pusha
aam
xlat
mov
scas
bound
sahf
push
clc
cmpsl
pop
and
sbb
fs
inc
mov
loope
ljmp
and
int3
int3
ljmp
and
mov
xchg
nop
xchg
mov
addr16
mov
cmpsl
idivb
or
add
add
and
loope
loop
lods
hlt
movsl
pusha
inc
add
xor
sub
incb
addr16
fiadds
mov
in
test
idivb
xor
lret
ficompl
jmp
sbb
lahf
das
inc
sub
in
xor
add
xor
sbb
call
sbb
iret
fldl
push
jae
sub
jp
clc
lcall
jne
push
popa
add
push
jle
arpl
cmpsb
xor
mov
addr16
xor
jg
test
mov
fmulp
inc
das
push
in
outsl
stc
mov
mov
mov
lods
mov
rcrb
inc
mov
in
insl
out
les
mov
pop
jnp
add
pushf
out
sbb
lahf
daa
mov
lcall
in
repnz
mov
aam
dec
scas
sbb
xchg
lret
aam
in
cmpsb
sbb
incl
aaa
sub
jno,pt
jne
inc
push
insl
push
mov
out
inc
enter
loopne
cmp
stc
push
stos
cmp
jl
pop
jnp
and
xchg
mov
movsl
shlb
jno
push
ret
mov
mov
call
or
aas
dec
jmp
ss
ficoml
pop
negl
std
or
gs
in
loop
test
sub
hlt
in
cmp
lret
cli
push
int3
mov
leave
pop
sti
testb
sub
mov
or
mov
imul
or
int3
pop
jmp
push
xchg
jl
std
test
aaa
out
frstor
dec
aas
jmp
in
fcomp
insl
out
aaa
xor
mov
out
mov
jnp
pop
pop
scas
mov
out
adc
adc
daa
ss
movsb
jge
dec
mov
pmaddwd
aad
mov
cmp
into
push
addr16
and
mov
jp
dec
push
test
sub
popa
add
aaa
pop
mov
xlat
stos
mov
xor
cmpsb
add
jg
pop
jne
out
xor
mov
gs
mov
adc
mov
ret
add
pusha
leave
ret
test
jmp
aaa
and
push
add
or
lret
scas
and
jnp
cmp
rclb
jnp
fs
dec
mov
shrb
into
and
outsb
cwtl
xor
or
cltd
mov
pop
out
jle
and
cwtl
in
cmp
inc
shlb
es
ss
mov
stos
lods
dec
and
out
mov
push
in
mov
xchg
dec
in
je
shll
movsb
mov
adc
pop
mov
out
test
out
lea
sahf
push
xchg
sub
jge
cmp
mov
pop
hlt
push
pop
dec
xchg
fwait
fs
fwait
aaa
xor
scas
movnti
pop
pop
pop
repnz
and
and
out
insl
mov
clc
daa
dec
xchg
filds
mov
mov
adc
mov
sahf
out
stc
xchg
mov
dec
cmpsb
sub
fisttpll
stos
int
arpl
and
xchg
orb
push
mov
mov
pop
mov
sbb
mov
adc
mov
outsb
scas
lods
push
stos
and
mov
adc
inc
push
iret
rcrl
cwtl
cmp
or
int
xchg
notl
insb
les
mov
inc
adc
xchg
dec
lret
ficoml
out
mov
movsl
xchg
jae
adc
andb
xchg
loopne
les
jno
je
sahf
push
xor
sbb
std
fiaddl
stc
or
es
cmp
lret
in
push
stos
pop
out
mov
outsl
lcall
lds
jmp
push
sub
out
xor
nop
ljmp
jno
sbb
sbb
mov
xchg
popa
int
add
xchg
cmp
daa
adc
jne
loope
mov
frstor
mov
fldenv
inc
mov
mov
rcll
cmp
cmpsb
or
pop
push
cmp
dec
cmp
mov
push
pop
pushf
orl
movsl
lcall
repz
ja
push
mov
mov
sbb
push
jle
or
pusha
cld
test
les
jae
insb
jns
and
xlat
scas
sub
cld
das
mov
in
xlat
outsl
iret
push
gs
mov
xchg
sub
sub
lods
sbb
push
add
sub
pop
xor
sbb
push
jae,pn
pop
jb
lods
lock
fcoml
jp
push
or
pushf
daa
ret
fdivrl
pusha
or
in
sub
scas
scas
inc
jp
or
repz
cld
xchg
pop
push
ja
fcompl
push
sub
jecxz
pop
sbb
loop
cmpsl
pop
add
outsb
mov
push
jns
lods
repnz
stos
push
pop
jno
outsl
iret
mov
pop
movsb
into
push
in
shr
and
mov
mov
and
push
sbbl
mov
dec
dec
cmp
test
push
sub
mov
push
mov
mov
cwtl
push
mov
loopne
xor
push
xchg
dec
mov
sub
cld
push
insl
je
fwait
mov
popf
add
decl
outsb
add
add
and
dec
scas
cmp
ja
adc
les
mov
xlat
in
add
xchg
dec
mov
js
aad
xchg
push
mov
or
mov
pop
sbb
int
adc
push
pop
push
adc
pop
rcrb
sub
loop
mov
dec
rorl
sbb
cmp
pop
lock
loope
test
add
add
inc
xchg
inc
and
rclb
sbbl
or
outsl
in
lcall
cmp
lods
jns
aaa
dec
lds
outsb
add
jo
js
or
push
adc
sub
cmp
inc
push
nop
leave
sar
cmpsl
dec
cmp
out
stc
inc
xchg
aad
int3
test
lds
jmp
mov
subb
sub
add
out
inc
sbb
or
les
cmp
mov
adc
loopne
or
and
fsincos
or
icebp
sub
jecxz
push
add
femms
or
push
dec
sub
mov
sbb
mov
hlt
inc
dec
mov
or
push
dec
movsb
fisttpl
mov
push
xchg
sbb
ja
cmp
and
test
flds
mov
incb
repz
shrb
jl
sbb
nop
xchg
repz
ja
adc
push
push
int3
int3
cld
aad
loope
jne
cmp
mov
push
or
jmp
mov
cmc
push
loop
sar
mov
xchg
lods
int
inc
sahf
xchg
and
subl
sub
sbb
cmp
in
jge
test
rorl
mov
into
iret
sub
inc
insb
pop
test
in
divb
mov
and
outsl
push
into
mov
mov
xchg
dec
sbb
into
aaa
push
clc
mov
inc
pop
loopne
cmpsb
inc
loope
fistl
leave
add
mov
fildl
test
pop
mov
aaa
int3
jmp
and
call
aaa
aad
test
mov
push
mov
movaps
ret
rep
lret
inc
sub
xchg
clc
test
inc
jle
cmp
sti
inc
loop
shlb
push
inc
xor
add
mov
pop
jge
jecxz
add
in
cmp
not
dec
jno
xor
outsl
inc
icebp
xor
inc
mov
sub
mov
lahf
rorb
sahf
in
imul
sarb
ss
nop
stos
sbb
loopne
xor
pop
xchg
mov
xlat
adc
xor
or
lret
into
out
and
fists
mov
or
sbbl
mov
insb
sbb
test
xchg
data16
push
or
mov
mov
sub
gs
imul
ja
jb
jb
cmc
pushf
imull
cmpsl
jg
test
or
pop
adc
adc
cld
mov
mov
push
push
dec
xor
and
or
dec
dec
push
clc
in
pop
push
out
mov
pop
jae
push
lcall
scas
es
js
push
jmp
pushf
int
outsl
dec
mov
sbb
jne
lret
mov
mov
add
or
xchg
arpl
inc
inc
call
lahf
pop
mov
sbb
inc
addr16
xor
jle
mov
xchg
mov
int
es
jae
pop
pop
sbb
dec
rcll
adc
or
leave
fwait
clc
jg
fldl
hlt
bound
int3
fstl
mov
lods
aam
stos
inc
in
pop
add
decl
jg
cli
cmpsb
lret
cld
xor
aad
adcb
inc
xor
cmp
sbb
mov
icebp
adc
es
mov
loope
xchg
fsubrs
fs
pop
or
pop
jp
cmpsb
jmp
cmp
iret
repz
repnz
fldenv
push
jmp
jecxz
call
cli
gs
push
pop
hlt
xor
mov
dec
sub
jp
jne
mov
jbe
xchg
daa
add
addr16
push
adc
lret
mov
push
xor
dec
dec
std
into
cmp
fadds
xor
and
out
mov
mov
mov
push
mov
call
and
xchg
jle
or
fdivl
dec
dec
mov
daa
shrb
jle
decl
dec
push
mov
inc
testb
sub
mov
mov
fs
dec
mov
mov
xor
or
xchg
dec
nop
mul
or
ja
leave
and
sbb
popf
out
fs
insl
mov
push
jl
cli
outsb
sub
inc
cmpsl
jne
int
lea
mov
jbe
scas
out
inc
scas
data16
sub
popf
dec
popa
push
xor
add
pop
sub
dec
scas
adc
adc
jno
jmp
mov
push
stos
divl
out
int
xchg
push
dec
mov
scas
sbb
xchg
not
aad
out
push
popf
rclb
pop
pusha
in
neg
test
cs
ja
test
mov
cli
out
shlb
add
daa
jbe
fsubl
das
pop
enter
lods
inc
xchg
std
and
or
fistl
push
sbb
mov
pop
pop
aaa
nop
or
daa
loopne
clc
jl
and
scas
into
lock
sbbb
insl
pop
dec
jne
jb
xchg
xchg
and
dec
std
jns
push
xlat
fisubs
xlat
cld
rorl
push
lahf
xchg
jl
xchg
js
out
sahf
pushf
cs
mov
mov
inc
and
cmpsb
lds
or
outsb
dec
cmp
aas
pop
adc
push
in
pop
inc
dec
lods
adc
jnp
jae
jbe
cld
or
sub
popf
xchg
loopne
add
jne
sub
out
pop
mov
insl
movsb
daa
outsl
mov
jmp
mov
xchg
js
inc
xchg
mov
adc
icebp
dec
out
inc
stos
sub
out
mov
push
pop
faddl
scas
test
sbb
shlb
jle
cwtl
jge
adc
scas
cmp
jecxz
mov
shl
cmp
mov
dec
es
adcl
xor
jo,pn
push
xlat
mov
out
dec
enter
stos
rcl
mov
std
mov
ja
xor
jo
cmp
mov
or
xlat
lock
push
jno
ds
repnz
shl
mov
push
and
and
push
lock
fimuls
xchg
mov
sub
out
mov
fmul
jle
test
les
je
sahf
or
or
add
mov
arpl
ds
fldl
hlt
fcomip
mov
or
scas
xchg
xchg
mov
xchg
and
ret
gs
inc
aad
insb
gs
rcrl
pop
and
in
xor
fdivrs
nop
pop
hlt
fcoms
arpl
aas
jns
and
pop
xchg
scas
xchg
and
stos
adc
pop
gs
cltd
iret
fsubl
test
add
iret
pop
test
cmc
xor
pop
mov
and
pop
sub
insl
dec
rorb
incl
imul
and
out
cmp
mov
mov
ret
cmp
add
icebp
out
scas
mov
sbb
push
dec
cmp
and
cmp
dec
leave
or
out
divb
popf
xor
cmp
imul
arpl
push
outsl
jns
jmp
jg
hlt
mov
lret
jbe
jmp
dec
or
jl
push
outsl
jns
arpl
cmp
pop
lock
jg
loope
cmpb
shrl
push
or
sti
popf
jmp
addl
js
xchg
out
mov
fnstsw
arpl
les
inc
or
sahf
mov
sbbb
and
add
mov
cmp
cli
xchg
shl
cld
test
lahf
std
es
cli
jle
mov
sub
dec
pop
mov
or
mov
nop
in
mov
enter
push
sub
shll
jg
inc
lahf
cmpsb
xchg
imul
mov
push
out
pop
inc
lods
xchg
add
jae
add
adc
mov
push
fwait
and
nop
enter
dec
push
mov
mov
pusha
into
andl
xor
shr
xor
mov
sarl
mov
push
ss
sbb
insb
mov
push
cmp
lcall
repnz
repnz
and
fsubp
test
pop
xchg
adc
hlt
xchg
pop
inc
jmp
cmpl
incl
int
xchg
popf
sbb
inc
fdivrs
and
js
pusha
pop
inc
stos
aam
xchg
push
in
dec
lods
xor
push
sahf
pop
loope
inc
enter
sti
mov
sbb
or
mov
push
or
movsl
pop
std
aam
cmp
inc
adc
push
dec
call
xchg
ffree
adc
fistps
lahf
xchg
jp
sbb
and
ds
and
adc
mov
repz
push
xchg
aad
pushf
or
shlb
ja
xor
or
inc
aam
fiadds
sbb
sahf
scas
aad
cs
shrb
inc
fidivs
jae
inc
inc
roll
mov
int3
shll
iret
ds
add
rcl
daa
pop
movsl
mov
lds
aad
add
inc
addb
and
cvtdq2ps
push
mov
inc
das
cmp
aam
mov
push
mov
mov
xor
sub
hlt
out
add
ret
movups
mov
out
popa
pop
js
push
jo
or
push
mov
pop
es
dec
cli
adc
pop
sub
jno
lock
pop
mov
push
add
inc
dec
test
bound
movsl
sub
into
ret
and
das
mov
fisubrl
fsubrs
pop
lret
in
jne
jg
lahf
in
mov
je
adc
lods
push
pop
push
ret
xchg
xchg
dec
or
inc
cli
mov
mov
jb
sbb
mov
mov
sbb
ret
popa
dec
or
cmp
hlt
shlb
mov
scas
xor
jecxz
or
add
mov
loopne
rcr
out
lret
std
add
sgdtl
mov
js
bound
fdiv
int
adcl
mov
sarb
scas
jae
push
jne
cmpsl
adc
test
and
fisttps
ds
notl
repz
dec
js
add
pushf
inc
inc
addl
xchg
push
mov
pusha
lods
jge
inc
rorb
aaa
out
loope
xchg
dec
cmp
test
jle
cmp
push
mov
cld
fsubrl
push
cmpsb
stos
cmc
and
jae
dec
cmpsb
pop
rcrl
dec
movsb
adc
iret
pop
fdivrp
push
mov
incb
iret
inc
ficoms
enter
xchg
arpl
out
pop
pop
test
sub
icebp
and
imul
jle
test
or
test
inc
xor
insl
fstl
cmp
popf
mov
mov
jle
mov
daa
or
ss
mov
lods
test
push
cmc
push
cmp
leave
dec
ds
mov
bound
cltd
mov
imul
pop
lcall
push
mov
xchg
movsb
and
addb
leave
cld
es
cltd
int3
fsubrs
sub
dec
jge
movsb
clc
idivb
mov
lea
xchg
sub
jge
aad
sub
mov
push
xchg
lea
into
sahf
loope
sub
sub
add
xchg
cmp
shrb
inc
sbb
getsec
mov
push
int3
pop
dec
mov
push
icebp
push
stc
out
pusha
sub
mov
cli
neg
aas
icebp
mov
add
ficoml
ret
rcl
ljmp
jecxz
push
mov
jno
rcr
inc
and
push
mov
sbb
test
out
jle
push
lret
cwtl
into
push
add
test
mov
and
loope
aaa
sub
cld
insl
icebp
sub
negl
mov
push
jg
mov
pop
call
mov
jl
sbb
out
cmpsl
gs
mov
add
std
inc
and
iret
xchg
jle
pop
add
lcall
cld
mov
dec
push
lcall
ljmp
fcompp
jb
ret
adc
xlat
scas
cmp
push
hlt
repnz
jb
cmpsl
adcl
lock
addr16
push
movsb
dec
cmp
sbb
mov
pop
and
pop
and
pop
sub
and
lea
cmp
push
push
mov
sub
sbbl
outsb
enter
cmc
push
jl
in
jle
pop
in
fidivrl
push
pop
cmpsl
adc
dec
dec
pop
aam
push
pop
pop
jae
mov
xor
or
xchg
test
aaa
mov
test
dec
jbe
dec
inc
sar
jne
pusha
xor
cmp
sbb
pop
mov
cmp
out
add
outsl
sahf
fidivrs
stos
xchg
xchg
rclb
push
rcrl
fwait
loop
xchg
xorl
cmc
ficompl
decb
repnz
sbb
lret
sub
jns
js
jb
xor
xchg
or
xchg
stc
jbe
or
daa
sti
das
sbb
into
cld
loopne
cmp
or
jg
mov
sbb
xor
pop
dec
cmpsl
sbb
inc
and
cwtl
inc
test
in
xchg
mov
es
in
xor
test
scas
gs
sub
lock
jo
loopne
stos
inc
add
xchg
push
and
adc
mov
push
lock
adc
add
pop
lahf
imul
jmp
sub
das
xchg
loopne
dec
std
scas
mov
or
in
xor
xor
xlat
pop
outsb
fstpl
out
jnp
sub
xchg
xchg
mov
aad
loopne
movsl
ljmp
xchg
jb
lock
mov
cmc
movsl
aad
in
pop
ds
std
jae
ds
jbe
add
fisubs
inc
pop
pop
push
push
sbb
push
push
ret
jne
arpl
scas
jo
dec
addr16
xchg
in
ficoml
or
sbb
and
adc
in
mov
in
jne
cmc
les
dec
dec
fwait
movaps
roll
adc
lea
mov
adc
insb
fbld
daa
pop
push
push
or
aaa
and
hlt
mov
jno
arpl
in
ret
test
pop
divl
aas
js
cmc
xchg
sbb
mov
test
push
cltd
repz
mov
sbb
pop
mov
jecxz
iret
sbb
imul
jnp
mov
or
mov
lods
or
sti
cltd
dec
add
test
inc
aam
sti
test
pause
popf
sbb
popf
jb
popf
xor
xchg
cmp
cs
lcall
dec
sbb
lret
and
insl
test
idivl
or
cmp
std
pop
lret
lods
adc
push
push
xchg
fcompl
push
call
jne
es
lods
cld
jmp
add
jle
sahf
mov
popa
push
jle
mov
pusha
add
mov
imul
pop
push
ret
addr16
xor
mov
xor
sub
fidivrl
sub
xor
cmp
addr16
adc
aam
js
and
cmp
push
dec
mov
cwtl
and
xchg
jl
out
fisubl
mov
cmp
inc
sbb
mov
fcomps
aad
popf
xor
sbb
fnsetpm(287
sub
mov
mov
xchg
test
outsl
xchg
xchg
ficomps
inc
hlt
sbb
sub
in
xchg
incl
mov
test
cld
leave
aaa
cmpsl
faddl
lock
push
sar
dec
lock
push
jb
aas
test
xor
push
fisttpl
fldt
ror
rorl
adc
xor
iret
jns
mov
pop
sbb
inc
lea
data16
fs
fisubrl
jns
inc
push
ljmp
mov
ror
fidivs
jne
cltd
mov
cmp
add
imull
jbe
mov
pop
add
xor
push
jmp
movsb
xchg
fists
mov
xlat
int
mov
cltd
pop
popa
sbb
xor
mov
call
jb
flds
aam
dec
aad
loop
xchg
mov
push
push
dec
lret
out
add
push
dec
lss
idivl
lret
js
iret
in
push
sub
adc
or
mov
mov
rcll
loopne
cs
adc
xor
pop
out
jle
aad
jl
in
es
cltd
mov
xchg
icebp
push
cmp
ds
add
mov
xor
fnstenv
cld
jl
mov
mov
jnp
insl
fmulp
out
stos
iret
movsl
dec
mov
stc
test
mov
cmp
sub
jge
jl
into
mov
aaa
scas
jl
adc
mov
xchg
stos
pop
add
and
mov
test
add
jb,pn
adc
arpl
mov
push
mov
sarb
dec
ljmp
mov
pushf
lahf
scas
aam
jl
mov
adcl
push
fisubs
jl
mov
sahf
push
mov
push
out
ja
sub
outsb
ret
lods
inc
ljmp
inc
rorl
pop
xchg
add
xor
cmp
and
mov
adc
mov
mov
fimull
sub
jae
out
lods
subb
dec
aad
or
loop
add
in
int
or
aam
inc
mov
inc
daa
pop
push
jmp
sbb
addr16
mov
dec
add
pop
push
fcomip
nop
gs
out
out
mov
lds
loope
sub
cli
pushf
shrb
xchg
int3
imul
shlb
mov
push
mov
cmp
addb
push
adc
lods
xchg
fldcw
push
scas
bound
cltd
fnstcw
in
xor
scas
lods
je
lahf
pusha
cmpsb
lret
aas
lret
aam
shll
mov
jnp
xor
out
mov
dec
cmp
and
mov
aam
xchg
cld
inc
and
fldt
dec
add
mov
inc
lea
mov
jbe
jmp
mov
xor
push
mov
call
ficoml
lods
dec
enter
mov
cmp
lods
out
je
pop
mov
in
push
popa
sbb
in
fbstp
sbb
cltd
push
pop
mul
mov
cmc
push
cmp
orb
mov
mov
mov
mov
mov
add
push
cmpsl
aas
das
sub
pushf
pusha
mov
scas
popa
xchg
push
push
mov
push
divb
insl
and
adc
pop
push
cli
jbe
xchg
push
cld
fnstsw
xchg
cmc
inc
sbbb
sub
dec
dec
inc
clc
sbb
mov
pop
std
inc
and
and
mov
add
xor
ja
pop
mov
dec
data16
mov
filds
cmc
and
inc
dec
mov
jmp
cmc
test
cltd
jl
data16
cmpsl
sub
xchg
dec
lods
push
bound
stos
xor
inc
xlat
jge
mov
xchg
push
cmpsb
add
jno
aas
cmp
iret
loopne
add
in
add
pop
push
pop
rorl
in
jmp
mov
add
pop
int
adc
inc
out
cli
jb
enter
stos
scas
cmc
xchg
mov
clc
shll
pop
and
js
fnstenv
push
scas
xchg
mov
inc
fsubrs
dec
adc
rorl
dec
clc
add
add
loopne
jo
adc
das
mov
ja
js
push
or
pop
mov
test
adcb
sub
or
jp
mov
movsb
popf
add
int3
jmp
decb
scas
aaa
jecxz
dec
inc
outsb
add
outsl
test
out
or
jp
cmp
mov
cs
insl
and
push
lret
xchg
aas
out
push
add
lods
sub
fisttps
jb
inc
push
test
outsb
test
sub
xchg
jl
pop
jnp
jg
jo
repnz
sahf
lock
pop
mov
lahf
aam
add
and
fwait
or
daa
fdivs
js
lret
je
xchg
pop
push
adc
cmp
cmpsb
sbbb
add
andl
add
pop
outsb
test
outsl
sbb
cmp
pusha
inc
out
jge
inc
adc
jae
cmpsl
adc
push
ds
bound
movsb
pop
push
je
je
xlat
lds
pop
add
jecxz
bound
adc
adc
lret
leave
mov
push
out
les
xlat
scas
scas
ret
pop
adc
inc
adc
dec
cld
mov
imul
stos
enter
add
mov
push
jbe
xor
dec
movsl
lea
aad
jae
orb
jp
pop
sub
out
addr16
pop
fs
inc
push
mov
ret
enter
orl
shrl
fstpt
xchg
idiv
test
mov
push
popa
dec
sub
movsl
rorb
das
jp
int3
ja
xchg
cmp
ds
jo
sbb
jmp
out
repz
into
cmpsl
inc
test
jp
fsub
repz
gs
sbb
jge
jne
lret
repz
push
jo
std
fwait
push
xchg
sbb
cli
mov
lds
cmp
stc
andl
outsb
shll
lods
test
dec
inc
jbe
lret
cwtl
inc
cld
imul
push
lret
push
addr16
movsb
lahf
adc
mov
fsubs
push
inc
add
jmp
lods
push
lcall
adc
outsb
cli
je
mov
lea
movl
jg
and
int3
mov
dec
adc
sub
mov
lahf
imul
xlat
jg
pop
lahf
lahf
pop
nop
sti
pop
std
mov
cmp
repnz
in
mov
push
xor
push
mov
addl
or
aam
aaa
lods
ret
daa
inc
jns
bound
inc
cltd
clc
mov
inc
mov
mov
cmp
cltd
fsincos
sbb
adc
div
mov
in
mov
pusha
ret
test
jp
pop
add
or
dec
sbb
mov
mov
add
sub
cmp
cwtl
imul
push
sub
cmp
je
cmpsl
dec
push
in
sub
cs
inc
subl
movsl
sti
aaa
popa
aad
lea
popf
mov
xchg
inc
outsb
jg
std
test
into
in
dec
sbb
and
testb
mov
imul
xchg
test
mov
jbe
jecxz
popa
mov
cmpsl
mov
popf
cmpsl
sahf
daa
pop
cld
dec
pop
cli
ss
pop
ret
in
push
out
out
into
outsb
out
or
dec
sarb
mov
aaa
aas
pop
cmp
inc
arpl
mov
sbb
loop
xlat
jg
aas
dec
aam
adc
dec
push
add
call
cmp
sub
popf
jae
shll
leave
push
pop
jb
mov
sbb
aam
push
js
in
test
cmp
xor
mov
sahf
inc
add
mov
flds
jg
je
xchg
or
fisubs
pop
mov
cmp
sbb
out
ss
sbb
xchg
push
dec
mov
jle
inc
dec
push
sub
jge
std
lock
dec
add
cmp
push
ret
lret
sub
loope
xchg
movsb
xor
subl
movsl
sbbb
aad
or
adc
jo
push
in
push
cld
xchg
mov
cmp
pop
fstps
mov
lods
in
rcrb
inc
in
xchg
test
insb
jno
mov
pop
je
pop
dec
mov
sahf
or
cli
or
aaa
imul
incl
xor
jo
in
add
jo
std
and
sub
cli
aas
and
cmp
push
add
and
outsl
xchg
push
vmovlps
sbb
and
fcoml
cwtl
xor
lret
sub
mov
gs
jmp
aad
out
push
mov
push
cld
lahf
jbe
aad
add
clc
xchg
es
out
popf
mov
into
stos
adcl
push
or
lcall
mov
repnz
or
fwait
jne
ljmp
xchg
insb
jno
sti
adc
dec
xchg
sub
enter
mov
jns
and
aaa
addr16
int
clc
sahf
push
inc
movsl
rclb
mov
les
mov
cmpsl
test
pop
mov
int
or
out
movsl
aaa
fidivrs
repz
jg
jmp
push
mov
or
or
lahf
adc
pop
mov
sub
sbb
or
out
sbb
popf
inc
ret
ja
movsb
xor
mov
insl
lods
repnz
inc
flds
sbb
fbld
test
jmp
mov
adc
mov
inc
nop
cmp
xchg
mov
enter
cli
clc
adc
mov
cs
movsl
push
je
xor
fldl
inc
lcall
cmpsb
pop
popf
sti
jb
jecxz
xchg
inc
inc
cmp
cli
cld
pop
adc
lret
fdivrl
aam
dec
and
xchg
push
sbb
ret
mov
add
mov
push
jbe
les
imul
enter
insl
pop
pop
insb
xchg
sub
xchg
inc
leave
push
xor
inc
jecxz
aam
push
pushf
xchg
mov
pushf
ss
add
sbb
out
mov
sub
aam
lcall
mov
fists
inc
sbb
xor
outsl
push
dec
mov
imul
cmp
and
cmp
lahf
cltd
pop
insb
frstor
add
ja
xor
lock
jp
insl
jo
call
sbb
push
mov
jnp
inc
mov
sti
fmul
loope
movsb
xor
inc
xchg
lcall
cltd
nop
or
sub
fcompl
mov
ficoml
bnd
les
je
ficoml
fmuls
dec
jno
inc
xor
xchg
cmp
mov
or
inc
xchg
mov
movsb
mov
adc
call
pop
stos
aaa
push
jbe
xchg
mov
gs
dec
pushf
push
inc
nop
or
jp
push
push
jg
in
fldt
aaa
adc
loope
mov
sub
xchg
inc
ret
scas
jno
mov
fdivrl
test
icebp
popa
or
sbb
rcll
jl
mov
jg
in
cmc
sub
inc
jge
je
and
or
mov
shll
jne
mov
push
sub
out
popf
stos
ja
jmp
mov
xchg
jns
xchg
dec
pushf
test
clc
xchg
fisubrs
lods
or
push
cmpsb
scas
xor
jo
cmc
sbb
adc
push
test
jo
lea
in
mov
xchg
or
nop
int3
or
test
int3
daa
roll
jmp
in
xchg
pop
inc
ret
xchg
mov
aaa
mov
sbb
and
push
outsl
sub
std
push
fsubp
call
stos
dec
dec
lcall
int
jae
cwtl
add
push
and
aas
xchg
imul
movsb
bound
fimull
sub
movsl
or
mov
dec
sahf
inc
lods
cmp
loopne
push
fimuls
xor
xor
lods
cmp
fstpt
cld
fisttpll
xchg
das
popa
ret
cmp
cld
dec
sahf
aam
fucomip
out
adc
jecxz
add
xchg
loopne
push
mov
outsl
push
and
xor
push
xchg
cwtl
dec
lcall
add
mov
lret
orl
or
sbb
cmpsl
adc
jge
jns
cmpsl
ret
test
xchg
jnp
sarl
jbe
cld
es
dec
popa
into
jge
fwait
shlb
mov
xchg
push
mov
mov
fnstsw
sub
inc
push
add
adc
add
mov
testb
jecxz
dec
mov
adc
out
jb
pop
jg
lods
or
sub
mov
insb
sahf
sub
cli
enter
and
push
sahf
pusha
adc
movsl
je
adc
adc
and
mov
repz
adc
push
inc
or
movsl
into
shll
sub
pop
add
fdivs
lods
ja
outsb
mov
es
shrl
imul
adc
xorb
addr16
mov
jns
loop
adc
jmp
insl
push
stos
xor
mov
cli
jo
insb
popa
out
mov
sbb
xchg
adc
movl
scas
inc
iret
xor
lcall
out
and
mov
in
dec
rcrl
pusha
sub
mov
call
adc
add
push
ja
or
fnsave
push
idivl
pop
pusha
iret
std
outsb
mov
push
rep
push
mov
sub
cmpsl
icebp
mov
shl
cmp
test
ret
test
add
jns
loop
cli
and
shll
fldenv
lcall
inc
mov
ret
dec
repz
sbb
jno
aaa
cmpsb
das
mov
pop
jl
les
xor
int3
imul
cmp
pop
add
pop
pop
cmp
fcoms
xor
add
and
shrl
inc
jge
pop
xchg
or
insb
cmpsb
fisttps
lods
dec
mov
jb
pop
hlt
nop
loope
pop
cmp
and
test
dec
adc
lock
cmp
mov
pop
push
jns
dec
addb
cmp
lods
cmp
lret
ljmp
cmp
adc
pushf
mov
je
cli
test
sti
push
dec
xor
cmpsl
jns
sub
std
adc
xlat
lock
mov
jae
push
or
out
adc
pop
inc
pop
orl
mov
idivl
rcl
inc
fwait
adc
shlb
mov
pop
divps
sub
lea
xor
inc
js
sbb
js
aad
cmpsl
xchg
loopne
pop
addr16
in
std
pushf
stos
mov
out
pop
or
dec
fmuls
xor
int
notb
aam
cld
fadd
jle
push
dec
aad
xchg
inc
jns
iret
add
inc
push
stos
pop
jecxz
or
out
push
push
and
adc
lds
movsb
cwtl
adc
jns
sbb
cmpsl
scas
lahf
push
xchg
out
popf
and
scas
es
stos
into
xchg
sub
pop
test
pusha
test
mov
pushf
xchg
mov
call
lahf
rcrb
push
and
loop
xchg
out
inc
adc
notl
mov
inc
insb
xor
dec
mov
add
repnz
das
cmpsl
dec
sub
out
pop
mov
or
cmc
dec
dec
outsl
xor
pusha
sbb
inc
sbb
mov
mov
out
lods
outsl
jmp
test
movsb
jne
sbb
mov
sub
jl
push
mov
sbb
sub
pop
in
adc
testl
xchg
mov
cmp
sub
ret
inc
push
mov
inc
jp
dec
cmp
scas
adc
push
ret
jg
xor
orb
in
xchg
mov
out
or
imul
inc
out
jge
ss
mov
les
cmp
pushf
out
push
jg
test
andb
add
or
or
mov
inc
test
xchg
lock
test
or
push
cmp
lds
sub
or
mov
mov
push
jle
aaa
xchg
xchg
cmpsl
xchg
enter
jle
dec
out
lods
inc
mov
dec
nop
dec
add
test
sub
xorb
lret
sub
dec
sub
sub
mov
xor
nop
rep
lock
mov
test
mov
mov
jp
jae
inc
mov
cli
push
mov
ljmp
imul
je
mov
sub
sti
xchg
jle
cmc
jbe
scas
inc
mov
lea
enter
clc
push
mov
xchg
pop
xchg
cmpsl
cwtl
push
inc
fistps
pop
jne
shrb
mov
sti
shlb
outsb
jmp
jo
cmpl
push
adc
sarb
adc
push
movsb
add
pop
loop
int
mov
and
vdivpd
ljmp
aaa
ljmp
fwait
adc
push
pop
sbb
nop
fists
imul
adc
push
pop
jecxz
mov
fwait
sti
sub
cmp
sub
repnz
xchg
ljmp
cmp
fisubrs
lahf
inc
es
lds
push
sbb
xchg
icebp
xchg
xchg
cld
cwtl
dec
dec
xor
aaa
mov
dec
call
cltd
push
int
xchg
add
addr16
gs
adc
xchg
cmpsl
out
inc
and
lahf
lahf
idivl
jo
test
test
pop
or
fildl
pushf
sub
jge
xor
sbb
clc
cltd
xor
xchg
fstl
cltd
mov
jo
jge
mov
and
mov
test
in
nop
push
inc
pop
mov
pusha
xor
int3
in
mov
fisttps
or
cmp
adc
jl
outsl
insl
xlat
cmp
adc
or
std
sub
mov
unpcklps
cmp
mov
adc
in
cmp
subl
mov
pusha
push
cli
mov
adc
mov
ret
sbb
idivb
sbb
shlb
jge
xor
xor
popf
es
std
test
mov
add
les
loopne
and
test
fchs
dec
jae
aam
nop
push
or
adc
fiaddl
mov
int
stc
andl
pop
lea
popf
mov
out
dec
mov
mov
xor
pop
movsl
xchg
loop
aad
pop
es
jb
jae
push
mov
daa
adc
jo
add
mov
stc
mov
lret
loope
mov
xchg
in
daa
stc
repz
add
hlt
loop
adc
out
leave
add
pop
or
mov
ljmp
mov
sbb
xor
jge
jbe
mov
aad
pushf
sbb
cmp
pop
jo
jo
int3
test
test
data16
push
push
je
mov
fwait
and
in
sbb
stc
mov
push
push
shl
xor
ds
adc
lods
icebp
mov
insl
lret
adc
movsl
xor
movsl
data16
sahf
mov
xchg
mov
shll
jns
clc
arpl
and
xchg
js
push
mov
call
sbb
aaa
pop
leave
in
jne
pop
lds
jecxz
lock
scas
pop
jg
flds
ljmp
xchg
test
movsl
sbb
pop
scas
movl
jmp
mov
ret
add
mov
jne
lcall
jnp
movsl
and
insb
pushf
mov
aas
stos
mov
test
jo
insb
push
and
add
cli
jne
test
or
pop
jno
mov
adc
icebp
jmp
cmp
sub
int
stc
jp
lret
jmp
shrb
or
fisttps
and
add
cli
rcll
aaa
add
inc
xchg
jbe
pop
or
sbb
js
shr
repnz
sub
cmc
pushf
mov
outsl
into
mov
sbb
adc
add
leave
pop
push
sub
xor
std
mov
repz
in
adc
cltd
pusha
movsl
fidivs
xlat
push
dec
sub
jno
mov
cmpsb
push
adc
leave
mov
mov
aad
das
fwait
adc
mov
nop
dec
dec
lret
sbb
pop
imulb
mov
mov
lods
mov
nop
int
or
mov
mov
mov
lahf
imulb
sbb
pop
out
push
aaa
addr16
xchg
data16
cmp
imul
adc
mov
cmp
imul
shll
cli
insb
mov
mov
push
mov
mov
cs
test
aas
sub
push
pop
idivl
aad
sub
cmp
mov
mov
pop
cmpsl
push
fcmovbe
dec
js
and
adc
lret
dec
lcall
pop
inc
inc
aad
in
repnz
adc
imul
jnp
inc
add
jns
adc
cmp
sub
cmp
jmp
mov
push
xor
enter
bound
lcall
pop
js
popf
lahf
mov
dec
imul
mov
in
add
jne
hlt
cmpsb
movsb
mov
sar
push
xchg
ja
mov
int
adc
mov
mov
add
mov
fisubs
adc
mov
push
dec
in
repnz
movsl
jle
lea
sbb
sub
push
ret
sbb
xchg
inc
mov
icebp
xor
cmp
mov
mov
mov
sbb
daa
das
cltd
test
rorl
cmp
sahf
dec
or
xchg
or
jne
sti
push
adc
and
mov
mov
mov
jb
mov
push
testb
xor
xor
and
test
adc
in
push
repnz
clc
clc
dec
in
push
sub
orb
int3
inc
adc
pushf
push
jg
scas
xor
out
push
jo
xor
int
mov
std
les
out
in
sub
sbb
fdiv
push
fisubl
outsl
jnp
or
xor
aas
pushf
add
push
xchg
xchg
push
sub
les
mov
repz
sub
cmp
mov
ljmp
cmc
mov
xor
or
lds
outsb
push
cli
jae
inc
pop
and
lcall
mov
out
sub
getsec
daa
and
ds
fs
repz
jge
push
cli
cmp
cld
cli
add
sbb
movsl
es
scas
pop
xchg
es
jle
xorl
rolb
icebp
popa
mov
cmpsl
sbb
lods
inc
add
push
adc
popa
ror
push
mov
add
jno
jp
leave
bound
pop
sbb
in
imul
pop
sbb
out
clc
xchg
outsb
sbb
popa
popf
pop
in
add
adc
and
xchg
jnp
out
loopne
add
pop
xor
and
mov
cs
ficompl
pushf
icebp
sbb
inc
sbb
and
ja
shlb
push
cmp
inc
mov
mov
lcall
test
in
pop
out
fsubrs
cmp
not
or
pop
xor
push
into
xlat
into
push
pop
or
push
xchg
scas
shlb
adc
lret
lods
ret
mov
in
push
stos
sbb
std
mov
push
inc
pop
lcall
gs
add
xchg
xor
sub
xchg
sbb
mov
jg
lret
cwtl
leave
les
cmp
and
mov
mov
rcll
add
xchg
pop
lods
or
out
rcr
cltd
decl
aaa
and
jb
sub
les
sti
enter
les
adc
imul
pop
xor
dec
mov
inc
fs
ja
cltd
xchg
mov
pop
daa
aam
mov
int3
pop
dec
jnp
fs
fcmovu
mov
sub
push
popa
lds
dec
mov
mov
std
popf
jge
fsubs
sbb
hlt
add
pop
sbb
cli
repz
xlat
insl
jns
adc
jp
push
pop
cmp
das
dec
ds
inc
jg
icebp
pop
cmp
cmc
mov
hlt
fidivs
pop
pop
add
lret
out
cmp
mov
add
adc
mov
data16
lahf
cmp
push
pop
js
sti
cmpsb
ja
jle
fadd
mov
cs
mov
jne
cmpsl
sarb
mov
and
outsl
stos
insb
sbbl
nop
xchg
lds
scas
pop
jge
xor
movsb
out
insb
jno
lcall
and
dec
xchg
stos
fsubrs
pusha
cmp
clc
mov
pop
stos
sub
add
rorb
xor
testb
imul
or
clc
stc
add
insb
daa
push
add
mov
aas
pop
mov
ss
jge
testb
fstpt
mov
sub
lea
or
or
jbe
ficoml
sub
clc
fisubrs
xorb
jp
dec
add
orb
ja
insl
jmp
add
and
pop
mov
jb
cwtl
xor
pop
inc
loopne
add
test
or
xchg
rorl
mov
scas
imul
nop
sbb
in
inc
ja
test
jo
into
cli
ror
leave
jnp
or
std
clc
xchg
pop
mov
inc
ret
pop
test
push
out
add
aad
pop
mov
fistps
dec
inc
push
or
dec
push
adcl
lods
cmp
repnz
adc
fdiv
cmp
mov
mov
lods
sbb
push
inc
popa
fimuls
mov
jb
jge
es
and
addr16
adc
jge
cmp
adc
and
push
in
xchg
push
setge
jecxz
mov
mov
push
mov
push
pop
sub
xor
cmp
sahf
mov
sub
fdivl
dec
add
lock
lret
addl
outsb
push
jb
xor
inc
push
dec
sub
and
and
or
mov
jmp
dec
pop
dec
mov
jl
mov
push
xchg
xor
arpl
std
xlat
dec
lcall
fadds
mov
add
xchg
out
sub
ds
jnp
popf
call
cmp
int3
and
aam
outsb
nop
mov
call
and
sub
and
sahf
enter
rcr
ficoml
hlt
daa
js
rcrb
inc
push
pop
push
sub
jne
lret
jns
lret
push
shld
dec
sub
in
adc
das
int
sub
xor
lods
repnz
out
decb
add
push
les
and
cli
cmp
les
jbe
roll
cmp
jae
in
jbe
xchg
iret
jp
je
dec
pop
jmp
mov
xlat
aad
adc
mov
xchg
sub
jno
pusha
cmp
aad
xchg
in
fistpll
outsb
popa
out
out
cmp
cmp
sub
call
je
inc
pop
lcall
pop
in
inc
push
inc
xor
popf
inc
fdivrp
and
mov
inc
shr
or
mov
mov
iret
ret
add
inc
add
stos
ret
fsub
jmp
add
xchg
out
stos
js
push
mov
ljmp
divl
xchg
mov
sbb
in
xor
push
mov
outsb
in
jl
int3
mov
cmc
adc
pop
push
pop
fiaddl
pop
stos
out
push
adc
sub
push
lock
cli
inc
push
mov
xor
test
inc
push
mov
call
fcmovnb
push
add
push
add
pop
xor
daa
loop
call
rcrl
adc
mov
and
loopne
test
inc
sti
mov
lods
ret
and
inc
pop
rcl
loop
pop
xadd
mov
add
cmp
sahf
loopne
fsubs
xor
add
shlb
repz
xor
lea
pop
fnstenv
xchg
jno
nop
stc
fxch
or
pop
push
mov
add
mov
push
xor
inc
inc
pop
cmp
mov
es
lods
outsl
nop
mov
dec
mov
push
push
inc
icebp
daa
mov
cmp
pop
insl
pop
push
les
mov
xchg
adc
push
icebp
sbb
adc
stos
xchg
imul
inc
add
inc
dec
sbb
loopne
sub
add
test
pop
dec
into
pop
test
jns
mov
xchg
or
adc
hlt
test
xchg
mov
cs
cmp
mov
mov
sbb
insl
imull
xchg
rcrb
or
pop
sub
iret
cmp
cmp
mov
imul
cld
pop
sub
cmc
mov
xlat
add
jbe
mov
pop
scas
imul
pop
xchg
hlt
adc
aas
cmp
std
outsb
mov
aad
test
pop
mov
lret
adc
push
int
dec
xor
and
insl
sbb
pop
push
icebp
adc
icebp
cs
fnstenv
cmp
jns
jmp
sbb
aaa
sub
lahf
daa
gs
add
push
sbb
out
insb
int3
fcompl
or
adc
nop
jl
cmp
pop
push
out
aaa
mov
and
sub
sbb
dec
mov
js
jmp
out
jo
xchg
movsl
fwait
iret
cmp
notb
adc
pop
or
push
jle
xchg
icebp
lods
rcl
pop
adc
out
cwtl
mov
pop
int
lahf
push
cmp
out
enter
dec
mov
cld
and
idivl
test
loopne
jo
pushf
or
mov
les
mov
out
leave
xchg
sub
in
cmp
pop
mov
inc
insb
xchg
rorl
xchg
dec
stos
dec
stos
mov
lock
and
int3
mov
and
pop
sbb
adc
subb
and
fisubrs
js
nop
outsb
js
insl
push
cli
jecxz
iret
cltd
sub
push
inc
mov
jne
cmc
popf
dec
inc
push
cmp
jo
mov
outsb
insb
xor
addr16
xor
aas
rclb
lods
push
vpmacsdql
aam
lret
jp
leave
xchg
cmp
dec
addr16
sbb
scas
pusha
push
push
cltd
popa
rclb
sahf
cli
into
xchg
cmp
and
int3
les
movsl
push
mov
sbb
push
cmp
xor
sub
mov
pop
inc
xchg
xor
cmp
jb
or
inc
dec
popa
pushf
popa
cli
mov
mov
loopne
mov
mov
or
xor
cmp
cvtps2pi
ss
pop
ljmp
mov
push
cmp
loop
jbe
arpl
fwait
sbb
and
nop
cwtl
and
xchg
cmp
pop
or
xor
lea
jbe
ss
adc
shlb
mov
std
xor
sarl
sbb
inc
popa
mov
pop
push
inc
js
push
lret
or
mov
out
rclb
icebp
and
enter
pop
dec
mov
xchg
stos
clc
sbb
push
push
punpckldq
ror
into
jb
sbb
dec
loopne
jno
pop
lds
dec
sub
mov
push
inc
outsl
das
mov
sarl
jg
in
xor
push
addr16
lahf
gs
pushf
lds
shll
in
and
fcoml
jmp
ja
mov
ds
pop
jp
divl
cmp
sub
cmpsl
mov
cmp
dec
dec
inc
or
shr
cmpsb
push
cmpb
pop
or
aam
sub
shrb
dec
int
push
aam
push
arpl
xchg
rolb
jns
mov
jecxz
fucomp
fistpl
inc
fists
jbe
cmp
imul
adc
clc
push
mov
fcmovnbe
test
push
xlat
je
push
mov
lcall
mov
mov
lea
mov
daa
mov
ret
jne
add
pop
mov
push
dec
pop
shll
mov
mov
dec
add
pop
addr16
cmpsl
es
notl
out
mov
cmp
sub
adc
insb
sub
scas
xlat
divb
cli
inc
enter
les
fsubrs
stos
sub
cmp
lock
mov
sti
dec
add
and
scas
mov
aaa
dec
sbb
mov
ret
mov
out
jne
aas
dec
xchg
bound
dec
jg
xchg
ret
cmp
jb
popa
jno
add
push
int3
fisttps
jnp
push
sbbl
adc
das
out
ss
mov
jge
lret
sti
mov
dec
inc
test
lods
sbb
pop
fsubrp
adc
movsb
pushf
xchg
insb
jecxz
lds
adc
mov
cld
xchg
fidivrl
lahf
jg
mov
or
mov
ss
fcompl
mov
shl
dec
orl
mov
sysenter
inc
adc
pushf
pop
xchg
pusha
int3
ficoms
aam
mov
mov
pushl
push
std
jno
pop
mov
dec
add
insl
movb
xchg
jge
sbb
xchg
std
imul
and
clc
or
sbbb
in
push
scas
sub
add
mov
jp
aad
cmp
hlt
mov
mov
je
aas
cmp
sarl
aas
cmp
call
js
movsl
cmp
std
cli
xchg
jae
or
scas
mov
sbb
or
enter
inc
sahf
push
or
mov
xchg
insl
aam
cwtl
mov
push
cmovle
jae
push
push
mov
movsl
mov
dec
out
mov
mov
je
dec
adc
sub
dec
jmp
loopne
cmpsl
xchg
test
inc
xor
iret
aaa
pushf
xor
push
frstor
mov
pop
cmpl
outsl
pop
sbb
and
ret
push
mov
xchg
stos
sub
mov
sub
popa
lret
lods
mov
xorb
test
xor
pop
repnz
ret
or
std
addr16
pop
mov
js
inc
sbb
pop
in
test
std
adc
push
xchg
outsl
ret
jns
xchg
notl
dec
js
ror
into
cmpsb
sbb
je
cld
outsl
sbb
mov
leave
rcrl
jl
stos
or
out
push
cmp
mov
add
cmp
out
fisubrl
mov
inc
nop
fs
push
fwait
divb
push
cltd
jge
insb
rolb
mov
xor
cmp
mov
out
rolb
push
stos
xchg
inc
push
dec
rcrl
jns
call
dec
or
in
sbb
mov
mov
jle
mov
lret
bound
adc
stos
icebp
push
push
sti
mov
cmp
test
adc
sahf
roll
int
and
fisttps
ja
push
imul
xchg
jb,pn
loope
push
jmp
inc
or
sbb
cmpsb
jl
xchg
ds
fdivrs
and
mov
popf
fcompl
shrl
jmp
jmp
int
mov
jo
test
aam
sbb
cmp
popa
fmulp
test
cmpsl
sarb
push
lods
mov
lret
and
cld
jge
int3
int3
xor
repnz
fwait
dec
out
test
mov
xchg
sub
ljmp
lods
adc
xchg
enter
mov
stos
lsl
add
or
aas
stos
mov
scas
mov
repnz
mov
loopne
ret
repz
mov
hlt
fsubs
dec
mov
mov
xchg
ficoml
and
jg
inc
aaa
popf
inc
lock
pop
shrl
loope
cmp
loope
or
iret
inc
push
sub
jmp
es
mov
nop
les
inc
aas
push
mov
scas
or
mov
pop
movsb
inc
js
nop
nop
adcl
repz
and
aaa
xchg
jbe
jg
data16
in
fs
adc
push
lods
shll
push
adc
lahf
cld
iret
leave
sub
sbb
jo
ror
pop
test
aad
mov
mov
inc
ss
lods
mov
fldcw
repnz
jle
jae
sub
addr16
nop
sbb
hlt
ficompl
mov
mov
mov
out
clc
dec
enter
dec
sbb
mov
test
scas
ss
roll
jbe
and
lret
mov
std
xor
insl
adc
call
out
outsl
and
arpl
adc
bound
jno
add
nop
cltd
and
push
lods
test
pop
add
dec
sarl
out
out
pushf
lods
cmp
sbb
mov
outsb
hlt
out
jno
xor
pop
ljmp
shl
ss
jl
jp
out
jbe
xor
cmp
movsb
dec
loope
pop
js
aad
ss
std
sub
lahf
xchg
inc
imul
jl
fcompl
in
int
mov
xchg
add
xchg
scas
gs
jne
in
pop
jo
pop
dec
push
push
cs
sti
inc
sbb
clc
mov
xchg
mov
dec
xorb
popa
and
mov
mov
sub
jl
imul
fidivl
loop
xchg
jo
test
movsb
xchg
and
jnp
test
popf
sub
fcompl
scas
js
aas
ds
cmp
xor
push
xchg
push
lret
jle
mov
mov
cwtl
icebp
push
mov
comiss
mov
xor
mov
int3
fildl
dec
cltd
dec
xor
jmp
xchg
out
sbb
movsl
test
cld
js
fwait
or
fcmovu
push
mov
jb
stc
xor
lods
inc
popa
testb
cwtl
dec
mov
xor
pop
adc
adc
arpl
js
test
lcall
lds
ret
mov
and
insl
test
adc
daa
mov
icebp
fsub
xchg
mov
jb
ds
xlat
sbb
rcll
call
cmpl
cwtl
js
idiv
arpl
imul
ds
and
jmp
adc
scas
cmp
add
imul
sbb
fwait
inc
mov
arpl
subb
sahf
int3
jnp
test
stc
jae
fmuls
mov
repz
outsb
pop
add
mov
rcrb
test
xchg
das
push
sbb
or
fs
pop
movsb
dec
test
movsb
jge
into
arpl
mov
push
rcl
in
insb
mov
xchg
dec
inc
and
sub
popf
jae
mov
shlb
pop
shrb
call
addr16
dec
adcb
mov
push
pushf
dec
call
in
rorl
and
fsts
mov
leave
adc
jae
jmp
push
cmpsb
sub
jmp
loop
sbb
or
mov
adcl
dec
bound
pop
sbb
fcoml
push
rcl
mov
xchg
clc
jge
sub
ja
loopne
mov
movsb
push
outsb
push
xor
mov
sbb
les
imul
test
xchg
sub
pop
sub
arpl
mov
aaa
xchg
aam
pop
test
add
xchg
xchg
outsb
in
rclb
rcll
in
mov
cmpsl
dec
mov
mov
mov
push
and
mov
cmpsl
fistpll
mov
xchg
sub
insl
adc
movsl
fs
sbb
in
sbb
in
fimull
mov
sbb
jg
out
sbb
mov
or
insl
adc
daa
mov
pusha
clc
or
jp
cli
ds
out
mov
add
mov
das
push
scas
loope
add
pushf
xchg
adc
mov
in
mov
data16
pop
daa
bound
rcl
inc
push
pop
inc
dec
pop
jbe
mov
xor
inc
inc
pop
pop
shll
xchg
out
jnp
add
mov
js
fldcw
cmp
inc
cmpsl
or
xor
ror
push
pop
fcomp
shll
clc
daa
in
pop
mov
scas
mov
xlat
xchg
mov
sti
dec
inc
popa
jnp
popa
sub
nop
test
ret
out
fimull
das
inc
cmpsl
ja
fsub
cs
lcall
mov
rcrl
jecxz
xor
inc
stc
loope
mov
shl
and
inc
clc
jne
pop
add
sahf
popf
loopne
flds
and
sub
lock
in
mov
add
and
int3
fnsave
pop
push
push
jl
mov
bound
inc
dec
icebp
les
enter
gs
cmpsb
jg
push
push
pop
popa
and
testl
xchg
call
jg
xchg
sub
and
add
xor
cmp
jg
xchg
and
push
arpl
xchg
xor
cmp
inc
out
sub
sbb
or
add
aaa
loop
mov
jp
adc
sub
int3
fmuls
pop
std
jne
cli
pop
adc
leave
mov
ret
push
dec
insb
lret
pop
mov
fs
cs
xchg
add
push
arpl
jge
xchg
pushf
pop
xor
insb
push
inc
or
push
rcrb
mov
cmp
or
push
cmp
pop
arpl
orl
sub
pop
int3
in
mov
clc
adc
push
dec
in
push
daa
cmovno
push
repnz
adcl
sarb
fnstsw
push
in
pop
andl
stos
lods
pop
gs
fcoml
and
jmp
in
add
cs
jo
aad
rcll
mov
lds
xchg
test
inc
add
push
addr16
cmp
test
rcr
pop
mov
ja
push
dec
es
pop
fistpll
out
pop
mov
lock
shr
test
clc
enter
bound
and
cmp
ret
movsl
push
mov
fnsave
sub
fdivrs
xor
inc
push
outsl
mov
nop
dec
mov
add
psubd
lret
lret
xchg
push
adc
decb
shll
adc
scas
dec
pop
mov
and
dec
andb
fldl
push
test
xchg
lds
xchg
dec
add
cmp
orb
fdivp
mov
mov
xchg
mov
adc
cmp
inc
in
mov
inc
div
mov
sbbl
xor
xchg
xlat
lock
dec
cmp
lret
imul
dec
pop
or
mov
jmp
or
lods
loop
ficomps
outsl
adc
jbe
pop
fsubrl
insb
mov
mov
adc
popf
fisttpll
add
lods
clc
cmc
andl
lds
sub
js
addl
shlb
jnp
and
or
push
pop
push
push
or
or
cmp
ret
mov
sbb
mov
mov
sahf
cmp
loop
daa
popa
jg
and
movsb
gs
pusha
or
mov
insb
insb
aas
xor
pushf
clc
sbb
ljmp
loop
out
add
sub
fisttps
jo
aas
loope
mov
adc
inc
pop
int
test
jno
sbb
ror
mov
shrl
jbe
das
leave
mov
lods
insb
pop
xchg
sub
push
in
add
dec
int3
hlt
add
repz
movsb
pop
xor
xchg
xchg
and
inc
jmp
jmp
test
stos
add
das
mov
xor
mov
and
push
xor
in
lods
es
jmp
xor
fs
frstor
lea
pop
adc
sub
sbb
cmp
fildl
into
xchg
arpl
cmp
sbb
cmp
fsubs
js
push
ljmp
fstl
push
js
sub
inc
pop
out
xchg
imul
cwtl
or
incl
mov
gs
jae
pop
pop
and
dec
inc
lock
adc
cmpsb
repnz
mov
xchg
cmp
jecxz
lds
jp
inc
sbb
mov
mov
into
dec
xchg
xor
in
int
mov
ret
dec
test
add
jno
lods
imul
add
cmp
dec
icebp
lcall
pop
fmull
add
shlb
jle
sbb
mov
jb
adc
mov
jge
push
inc
stos
fwait
mov
adc
mov
mov
jmp
sarb
ja
test
sub
imul
arpl
mov
xlat
xchg
or
mov
xchg
movb
addr16
je
mov
fistps
pop
dec
cmp
in
inc
shll
lods
push
es
push
divl
jae
mov
pop
jmp
inc
test
adc
cli
mov
loope
dec
xor
data16
bswap
inc
dec
xchg
iret
sbb
daa
inc
out
cs
xlat
jae
dec
mov
push
ljmp
mov
mov
xor
and
lods
mov
jp
inc
popa
stc
add
jmp
cltd
mov
adc
aam
pop
cmp
cmp
aaa
xchg
lods
aad
and
push
lods
mov
inc
mov
lods
daa
cwtl
mov
adc
mov
mov
or
fs
daa
jo
mov
and
daa
scas
pop
mov
push
sub
sub
nop
cmp
cmpsl
jecxz
and
fs
cltd
jae
xor
stos
lds
in
mov
mov
mov
andb
mov
nop
daa
push
aaa
dec
arpl
js
sub
rcrl
outsb
and
and
pusha
ljmp
mov
push
mov
xchg
je
cmp
push
loop
push
xchg
lret
dec
fdivrs
inc
dec
test
leave
mov
or
lahf
out
ja
or
mov
mov
or
ret
push
shl
out
call
adc
xor
mov
fidivrs
cmpsl
xor
arpl
mov
and
or
or
mov
mov
loope
dec
push
cmp
add
mov
sahf
insb
adc
dec
adc
aaa
mov
jmp
icebp
push
xor
cs
jns
arpl
ror
je
mov
shl
int
xor
stc
inc
pusha
ljmp
xchg
mov
sbb
adc
sub
arpl
xor
rol
lret
call
fimuls
xchg
xor
fimuls
fldt
mov
xchg
fcmovb
push
lea
push
dec
push
mov
fsub
add
out
daa
outsb
push
push
mov
xchg
cmp
stc
arpl
jecxz
mov
popa
leave
xchg
sbb
rcrl
add
mov
cmp
inc
je
xchg
dec
popf
sbb
aad
cmp
into
ds
negl
push
pop
inc
push
test
je
ja
xor
aaa
mov
push
ds
dec
mov
subb
push
adc
push
ret
sbb
xchg
push
mov
jnp
in
and
stos
jae
add
rcrb
fnstcw
push
fdivs
imul
movsb
jbe
dec
cmp
shl
out
sub
fstps
dec
std
or
inc
jle
call
int
pop
inc
inc
xor
and
mov
xchg
mov
add
push
push
jae
push
pop
sub
cld
and
repz
add
ljmp
sbb
dec
lea
xlat
data16
mov
xchg
pop
mov
inc
jecxz
fildl
icebp
int
imul
imul
push
pop
mov
fsubrs
int3
mov
shlb
push
cld
and
or
sub
out
sub
cmp
sbb
out
fimull
subl
repz
cmc
inc
push
andl
orl
sahf
add
mov
cli
sub
xor
fimuls
add
out
insb
xchg
call
subl
pop
dec
rclb
push
cwtl
dec
pop
popf
sbb
clc
sahf
xor
jbe
add
stos
in
fimuls
pop
aaa
dec
mov
sub
push
lock
lea
and
das
and
mov
mov
mov
inc
push
aam
jne
push
jl
ja
push
lret
or
adc
mov
jns
push
ret
xchg
lock
je
or
mov
or
int
mov
jmp
dec
push
jp
sbb
sub
sahf
shll
inc
pop
push
jb
xchg
push
dec
bound
push
enter
dec
adc
das
out
js
jge
or
adc
pop
push
loopne
pop
sub
inc
andl
fstps
jge
out
adc
rol
fwait
adc
mov
fidivrs
jb
shrb
mov
dec
gs
xchg
iret
xor
aas
cld
test
sahf
ds
gs
test
notl
cmp
xchg
pop
sbb
mov
lods
in
push
in
jmp
lock
add
mov
test
hlt
and
add
inc
hlt
loopne
mov
push
in
imul
mov
dec
rcll
pop
test
icebp
inc
stc
lds
cmpsb
mov
jmp
sub
cmc
outsl
and
aaa
mov
stc
addr16
insb
stos
mov
jne
lret
jo
ljmp
and
jne
aam
dec
test
and
add
out
js
out
mov
lret
sbb
push
aas
xlat
inc
in
push
or
lods
sub
xor
dec
es
lods
pop
jg
jmp
stos
faddp
sub
cmpsb
xchg
cmc
jge
test
mov
jg
sub
loopne
dec
cld
push
lock
cmp
dec
in
and
mov
mov
int3
mov
dec
lahf
seta
aas
call
inc
dec
fdivp
fiaddl
xchg
inc
cmp
mov
sub
imul
add
inc
mov
ret
hlt
mov
xor
cmp
lea
pop
popf
sti
cmpsl
and
pop
in
int3
inc
test
and
push
sarb
jo
add
and
bound
ffree
stos
push
scas
sti
sahf
aam
push
in
jmp
mov
stos
push
int3
or
seto
aas
dec
out
ret
in
lds
imull
cld
adc
xor
out
mov
pushf
cmp
mov
or
or
sub
push
sahf
jne
push
add
insl
jbe
mov
and
shll
xor
xchg
ljmp
mov
mov
fcoml
jmp
fwait
notb
mov
es
aam
mov
pop
jne
dec
add
and
push
jnp
ret
sub
push
xorb
pop
into
ds
lods
ss
les
aam
ja
fisubl
push
fcompl
stos
sbb
and
lds
cmp
out
pop
dec
std
and
push
das
aas
cmp
cli
jo
lods
jl
xor
pop
leave
sbb
pop
jno
mov
aaa
test
mov
insb
lret
xor
pop
and
arpl
add
cmpsb
negb
mov
fstps
aas
dec
mov
mov
jg
mov
mov
call
push
adc
sti
fwait
push
je
and
orb
sahf
mov
imul
outsb
fdivp
orl
inc
cmpb
lock
outsb
lret
push
xchg
inc
scas
inc
push
xor
frstor
in
xchg
mov
adc
popa
push
scas
dec
pop
push
jbe
pop
fbstp
pushl
fildll
fwait
or
mov
push
xchg
dec
mov
aad
mov
rclb
test
outsb
cmpsl
and
cmp
mov
aas
sub
rorb
cmp
pop
push
daa
icebp
in
shrw
ja
inc
mov
loopne
xchg
movsl
and
dec
aaa
cli
xchg
test
mov
leave
lds
and
and
lds
dec
gs
or
gs
mov
lds
and
mov
dec
insl
movsb
out
pop
loopne
daa
dec
push
mov
shrl
mov
push
mov
ss
pop
sti
hlt
xchg
cld
out
cmp
inc
daa
loopne
xchg
sub
outsl
mov
and
leave
ss
sbb
cmp
stos
shll
mov
push
pop
add
daa
sti
or
fcmove
jnp
jl
cmp
xchg
jns
xor
sub
in
daa
and
inc
pop
or
shlb
and
cs
je
dec
and
cmp
jge
testb
aaa
cmp
sbb
inc
sbb
adc
sbb
inc
mov
sub
lcall
mov
imul
shll
cmp
xor
xchg
int
mov
les
push
das
and
jl
pop
and
mov
dec
sar
or
mov
insl
test
mov
mov
jb
mov
jmp
jb
mov
jo
in
loopne
test
mov
mov
clc
push
mov
out
in
testl
pop
sbb
mov
fs
incl
repnz
test
imul
je
icebp
and
loope
mov
cwtl
inc
push
mov
push
cmp
sub
jno
jb
mov
mov
lea
fmulp
test
fadds
rorl
add
push
mov
xchg
and
push
jno
pop
push
cmp
add
sub
arpl
xchg
or
loope
test
fmull
stos
push
and
out
fwait
rorb
clc
inc
adc
ret
xchg
call
stos
mov
das
xlat
jl
repz
inc
or
loope
cs
mov
push
mov
popa
pop
xchg
fdivrs
addr16
lret
lods
push
rcrb
pusha
add
ljmp
jb
aad
cmp
cmp
push
mov
push
mov
cli
ret
xchg
movsb
jg
xor
icebp
sbb
out
arpl
xchg
xor
sbb
push
mov
addr16
les
test
adc
sbb
fdivr
inc
xchg
mov
pop
out
or
mov
mov
out
imul
fcompl
aas
int3
fbstp
cmp
je
xchg
adc
pop
dec
cmp
jmp
mov
sub
jge
jns
bound
jp
hlt
mov
es
out
xor
sbb
sarb
mov
dec
lock
test
jg
int3
xchg
addr16
or
clc
ss
out
push
arpl
movsl
fucom
shrd
jne
pop
aas
push
pop
pop
test
lods
sbb
stos
subl
icebp
test
mov
int
xchg
mov
lea
std
sbb
aad
loopne
aad
lcall
adcb
xor
cmp
dec
mov
cmc
es
jp
dec
inc
fmuls
andb
sbb
imul
lea
add
dec
inc
outsl
shr
and
jecxz
jl
test
sbb
mov
outsl
pushf
add
ret
popa
mov
aas
push
bound
sbb
ja
mov
xlat
loop
mov
mov
pop
imul
loopnew
sub
pushf
jae
pop
ret
mov
test
cltd
imul
dec
mov
mov
dec
cmp
cmp
add
or
inc
add
enter
cmp
inc
push
or
xchg
jbe
ret
imul
push
mov
jmp
sbb
test
leave
enter
enter
xchg
adc
or
cwtl
popa
push
aaa
aas
insl
dec
popa
bound
mov
sub
daa
lods
repnz
imul
add
mov
movsb
inc
test
lods
out
xor
stc
add
xchg
mov
xchg
xlat
jno
push
and
push
push
jle
xlat
jmp
mov
xchg
test
addb
jle
inc
sti
in
cld
rcrb
mov
and
gs
cmp
pop
cmpsb
mov
sti
sub
lods
pop
pop
xor
and
in
mov
hlt
xchg
insl
mov
jae
mov
mov
lret
xlat
mov
data16
push
cmp
adc
sbb
sbb
push
rcrl
cmc
adc
jle
adc
xor
out
sbb
cli
xor
mov
dec
stos
xchg
stc
dec
adc
nop
xchg
cs
mov
fucomi
pop
in
dec
sbb
adcl
lret
lods
insb
mov
jecxz
leave
fs
mov
adc
add
fsubp
jmp
adc
pop
lcall
mov
inc
lcall
in
mov
movsl
push
add
sub
or
cli
popf
fwait
cmp
xchg
out
aam
mov
mov
ficoml
rorb
mov
xchg
or
push
popf
inc
jle
std
mov
dec
sub
or
out
movb
jge,pn
sbb
out
popf
fcmovnbe
xchg
mov
pop
popa
jne
cld
sub
and
ja
pop
mov
sti
add
or
sbb
mov
jg
aam
test
dec
push
xorb
jecxz
pop
lock
jae
cli
push
movq
js
xor
arpl
cmc
bound
call
xorb
stos
lahf
mov
push
pop
arpl
jp
orb
dec
pop
in
jl
test
fcmovnbe
lea
lock
adc
jns
add
scas
mov
cmpsb
sub
cmp
pop
out
test
xor
mov
cmp
push
in
sbb
inc
std
pop
jg
test
mov
or
push
mov
sbb
fs
call
mov
ds
xchg
out
ss
pop
push
mov
rol
sub
adc
ss
jmp
dec
lahf
ss
jb
out
leave
mov
outsl
insb
dec
aad
repz
daa
aas
jg
outsl
test
insl
mov
aam
out
test
aaa
jle
movsl
or
pop
ss
fisubs
cmpsl
pop
cmpsl
lea
sbb
cmp
adc
sub
or
nop
lock
divl
pop
cld
xchg
outsl
ljmp
scas
or
mov
imul
jmp
adc
lds
in
mov
in
test
scas
add
filds
jg
dec
or
mov
add
pop
cmp
inc
sar
mov
cld
add
adc
into
popf
adc
int
lahf
push
pushf
sbb
out
fnsave
mov
pop
out
mov
sahf
imulb
lcall
dec
stos
inc
push
ja
mov
push
lods
bound
inc
mov
xorl
pop
addr16
push
and
inc
add
dec
pop
push
pop
jl
ret
pusha
mov
inc
negl
in
dec
mov
mov
mov
out
pop
cmpsb
bnd
add
cltd
sub
int3
sbb
inc
pop
mov
inc
mov
cmp
jae
pusha
lcall
sub
subb
test
loop
add
or
rclb
adc
xlat
fbstp
pushf
push
push
mov
or
enter
lods
push
add
rclb
mov
leave
data16
fcoml
xlat
xorl
cmpb
popf
ja
orb
cld
push
fsub
push
fmull
hlt
loope
daa
jb
mov
mov
ljmp
inc
adc
fistpll
adc
pusha
outsl
stos
xor
enter
dec
xor
inc
jae
mov
xor
pop
cmc
pop
push
fsts
pop
xchg
or
sub
mov
sbb
pop
xchg
sbb
pop
xchg
xchg
cmp
js
add
pop
shr
lahf
test
xchg
push
gs
add
iret
push
mov
jmp
xor
inc
inc
dec
imul
xor
int
jge
add
popf
mov
adc
jp
adc
jae
js
sbb
or
mov
in
jne
fs
stc
pmaddwd
jge
sub
inc
dec
ljmp
sbb
into
add
std
imul
fcoml
iret
sbb
xchg
mov
and
jp
xor
pop
sub
sub
aas
push
hlt
mov
dec
fdivl
and
popa
ds
loop
xchg
out
outsb
or
aam
pop
xchg
or
sub
loop
int3
inc
adc
push
gs
adc
aad
or
dec
jmp
cld
push
aad
daa
xor
into
insb
and
lret
pop
enter
jg
std
sbb
adc
arpl
nop
cld
adc
mov
and
dec
or
pop
add
pop
adc
mov
int3
xchg
inc
mov
mov
in
xor
mov
dec
and
jbe
adc
movsl
mov
inc
popf
rcr
fmuls
and
imulb
lcall
adc
push
out
ljmp
jl
mov
addl
daa
aam
xor
mov
push
sub
cwtl
pop
mov
xchg
jmp
jno
lahf
pop
and
xor
hlt
adc
jnp
ja
loope
insb
ljmp
rcll
adc
scas
loopne
sub
pop
test
addr16
ret
push
pop
pop
and
dec
dec
xchg
imul
rcl
push
jb
test
jbe
push
mov
add
scas
jg
sbb
je
jecxz
lret
rcll
pop
out
imul
inc
inc
mov
in
ror
or
jle
outsl
dec
mov
es
adc
cmp
or
jno
mov
push
push
xchg
adc
or
jp
or
adc
insl
adc
leave
jmp
pop
lock
pop
das
icebp
ret
movsl
es
rorb
dec
cmp
adc
xchg
sub
int
or
adc
or
fwait
nop
mov
insb
call
das
test
jne
and
inc
or
jg
xor
rolb
xchg
push
push
pop
dec
push
std
dec
dec
repz
int3
cmp
push
push
dec
push
cmpb
test
repz
sbb
shrb
or
cmpsl
jecxz
cmc
inc
ljmp
xchg
xor
test
pop
mov
xchg
repz
arpl
and
nop
adc
loopne
add
mov
icebp
push
insb
fwait
in
test
cmp
scas
pop
movsl
cmp
jns
test
push
imul
test
loope
xchg
and
mov
jge
add
cmp
outsb
xor
dec
pop
out
jnp
sbb
jns
int3
mov
stc
clc
inc
mov
mov
pop
aaa
sti
sti
in
in
mov
cli
mov
pusha
dec
sub
cwtl
ss
imul
imul
ret
dec
jnp
jno
loope
xchg
mov
fwait
and
xorb
adc
notl
jmp
or
cmpsb
inc
jecxz
mov
xchg
imul
aaa
pop
aas
adc
pop
sbb
mov
xchg
mov
jl
xor
cwtl
xlat
subl
mov
mov
stos
subl
sahf
mov
sub
int3
in
and
aam
dec
lds
xchg
add
in
in
jno,pn
retw
push
mov
loop
adc
mov
push
add
lret
jae
pop
adc
les
sub
aam
dec
dec
cwtl
jne
adc
aad
movsb
adcb
jnp
out
jo
shll
and
jecxz
dec
aad
dec
sbb
mov
sbb
lret
lods
and
lods
ja
jmp
popa
lods
cmp
das
xchg
icebp
loope
outsb
icebp
pop
and
arpl
arpl
xchg
pop
andb
mov
paddusw
aaa
movsl
sahf
pop
callw
jnp
sbb
cmp
push
push
sub
xor
jle
ficoms
jb
dec
sbb
ja
sti
sbb
loopne
xchg
cmc
or
iret
repnz
enter
aam
dec
ret
ljmp
pop
push
mov
test
lret
cmp
push
sbb
cmp
in
psubb
pop
push
lret
adc
leave
xchg
cmp
adc
add
jle
sbb
popa
cmc
dec
pusha
sub
fsubrs
imul
pop
mov
movsl
sub
and
pop
cmp
enter
cmp
cld
sbb
shlb
adc
sub
lods
cltd
stos
daa
cli
mov
push
mulb
test
bound
lret
dec
inc
xor
dec
mov
fstps
mov
push
mov
add
cmpsb
pop
add
shll
pushf
add
sub
push
out
adc
jp
iret
xlat
add
sub
rcrl
or
sub
or
test
divl
test
pop
and
sahf
lret
and
stos
mov
mov
stos
je
fwait
or
lds
test
jae
sub
fisubrs
xor
or
shrl
jno
sub
inc
jmp
sub
adc
dec
mov
xchg
inc
jns
fstpt
smsw
outsb
outsb
sbb
movb
imul
inc
push
ja
xchg
mov
mov
lret
loope
jne
mov
pop
cwtl
shrl
mov
pop
push
mov
mov
mov
mov
scas
jb
xor
leave
test
cmp
xchg
mov
jecxz
adc
lret
and
xchg
inc
sub
aaa
pop
orb
mov
lea
loop
insl
mov
flds
mov
mov
ja
arpl
adc
pop
ret
mov
xor
repz
adc
mov
pushf
repz
and
dec
mov
adc
pop
arpl
push
cmpsb
jns
and
xor
addr16
jno
into
jae
mov
inc
outsl
lcall
jbe
out
xor
out
popf
into
sub
xor
pop
xor
repnz
aam
push
loope
rorb
rorl
es
shlb
outsl
std
aas
mov
mov
add
pushf
leave
inc
fidivl
scas
repz
int
outsb
jae
popa
xlat
xor
add
imul
icebp
je
stos
cmp
mov
pop
inc
cmp
dec
arpl
js
dec
lods
and
xor
lods
inc
xchg
mov
outsl
sbb
cld
fldt
pop
std
test
adc
jno
xchg
loop
mov
in
inc
mov
out
cmp
mov
adc
sbb
into
call
ficompl
pop
mov
loop
jle
push
pop
push
and
push
call
add
arpl
fwait
sahf
push
andb
mov
insl
inc
nop
jns
ja
lods
pop
ljmp
inc
sbb
inc
xor
mov
subb
xchg
fdivrl
jg
stos
mov
filds
es
nop
pop
pop
ret
fwait
inc
push
sub
lods
jl
push
leave
jmp
imul
xchg
jp
xor
icebp
xchg
inc
jno
iret
sub
lods
mov
jno
in
shl
add
scas
jno
out
xor
adc
aas
and
jns
mov
scas
sbb
popa
ja
cmpsb
jp
inc
push
sub
adc
ficomps
jbe
test
mov
mov
jo
xchg
shr
or
mov
pop
fisubrs
in
or
add
shll
xor
cmpsl
or
cmp
mov
mov
es
movsb
ljmp
push
mov
push
xchg
pop
sub
cmp
cmc
and
fmull
rorl
adc
in
fidivrs
outsl
mov
adc
dec
mov
push
mov
cmp
xor
or
jg
mov
and
adcb
add
and
stc
ds
cmpsl
adc
push
inc
push
jge
mov
jmp
aas
ret
xchg
push
lret
sbb
and
or
push
cmp
mov
mov
dec
pop
cmp
neg
mov
negb
fmuls
xor
imul
cli
stc
jnp
dec
sbb
lret
sub
pop
lock
mov
xor
jbe
inc
push
and
inc
sub
sub
pushl
adc
in
repnz
add
fnsetpm(287
movl
test
adc
inc
icebp
sub
cmp
mov
pusha
fwait
pop
jbe
pop
filds
mov
mov
jl
jp
mov
fidivs
and
pop
sahf
xor
cs
dec
fucomp
sahf
or
repnz
xchg
dec
icebp
adc
pop
cmp
es
movsb
xchg
ds
xor
jg
adc
jp
jge
and
add
out
inc
js
imul
lcall
jmp
lret
sub
in
adc
mov
cmp
dec
mov
inc
scas
in
test
xchg
cmpb
mov
imul
ja
int3
popf
xchg
sbb
sbb
cmc
fs
inc
cld
sbb
dec
jne
int3
push
cmp
jno
lods
jl
frstor
enter
je
pop
xchg
mov
jnp
mov
arpl
ret
adc
jbe
mov
aaa
loop
shlb
cwtl
jo
xor
cmp
leave
je
bound
adc
ja
popf
fwait
push
loope
test
call
int3
repz
aad
pop
movl
nop
lret
pusha
imul
mov
inc
push
imul
cmpsl
pop
sub
pop
mov
pop
jge
in
idiv
or
shrb
je
jb
sbb
testb
movl
mov
ret
std
shl
inc
or
mov
adc
mov
xchg
adc
mov
mov
ljmp
fs
popf
clc
das
stos
and
icebp
or
pop
aam
push
dec
test
pop
lahf
cmp
repz
sbb
push
cmp
sub
ss
fs
ja
lods
mov
mov
inc
popa
dec
call
jae
cld
xchg
xor
in
push
push
xor
dec
ss
roll
movsl
dec
lahf
ljmp
decb
jns
ljmp
jnp
adc
iret
vminpd
mov
loop
sub
dec
idiv
and
jbe
jp
cmpsb
dec
sub
cmpsb
mov
sbb
inc
cli
popf
data16
mov
xchg
aas
adc
cmp
int3
xchg
xchg
dec
jno
testb
gs
aam
repnz
mov
pop
roll
lods
stos
fstps
push
test
or
mov
das
jns
push
ss
push
push
mov
mov
lret
in
adc
out
fcomps
xchg
jb
push
and
lret
int3
push
ret
push
mov
sbb
cmp
inc
push
sub
in
insb
sbb
jmp
mov
jne
aam
scas
fsubrl
rcrl
jge
dec
icebp
lret
in
or
dec
xchg
or
add
movsb
xchg
mov
sbb
adc
inc
fs
lea
sub
add
fwait
sbb
sbb
sar
mov
push
mov
push
mov
scas
inc
jnp
mov
outsb
and
mov
cmpsb
lods
loopne
insb
jb
jmp
cltd
add
rcrl
mov
mov
mov
dec
fwait
icebp
push
jb
jmp
loopne
push
and
test
xchg
mov
add
les
lds
lds
pop
or
dec
stos
adc
out
xchg
dec
xchg
clc
jp
int
int
in
jl
ljmp
gs
aad
mov
sub
popa
shrl
xchg
insb
xchg
pusha
cwtl
das
xchg
cli
mov
mov
adcl
lds
dec
and
xor
xchg
mov
aaa
xchg
call
sarb
add
xor
bound
test
orl
mov
fsubl
pusha
repnz
pop
out
sarb
or
xchg
stos
mov
fistpll
jge
sub
aas
sbbb
daa
stos
lret
inc
loope
daa
fists
xchg
dec
jo
aas
imul
in
repz
ret
nop
loop
jbe
inc
pushf
adc
test
ds
xchg
es
pop
frstor
mov
add
inc
push
clc
ret
adc
cld
cmp
xchg
xor
cmpsl
fisubl
mov
int3
adc
or
aaa
outsl
fisttpl
clc
pop
sbb
pop
xchg
push
cli
kmovb
fwait
shl
dec
loop
sbb
dec
dec
mov
pop
mov
xchg
or
mov
adc
out
in
push
das
sbb
and
loope
scas
xchg
xor
out
jns
or
xchg
lcall
or
aam
stc
cmp
test
sub
cmpsl
insl
cld
mov
xor
gs
pop
subb
int3
sahf
nop
fsubs
sub
dec
pop
addb
fistpll
and
ss
lret
cmc
ss
cmp
add
or
inc
xchg
inc
mov
jns
inc
flds
lock
push
mov
in
faddp
loop
mov
into
cs
pop
shrb
iret
in
or
int3
xchg
pop
xchg
insl
cltd
fcmovb
mov
imul
and
adc
mov
mov
sbbb
mov
mov
ret
pop
rol
lret
imul
fsubl
outsl
cmp
mov
pop
dec
repz
sbb
es
jge
pop
cmc
cltd
shrl
sbb
enter
fildl
shrl
jb
xchg
jno
mov
pop
pop
pop
fsubr
sub
dec
es
hlt
cmc
push
cs
mov
testb
fdivr
mov
mov
push
jae
add
fs
add
cmp
sti
push
inc
push
in
insb
inc
leave
fisubl
mov
jg
sahf
loopne
cmp
cmc
pop
pop
mov
aaa
and
ret
adc
jae
cmp
cmpsl
fistps
dec
inc
mov
mov
call
dec
es
mov
push
inc
inc
or
cmp
pop
icebp
fcmovnb
scas
xchg
mov
clc
mov
test
or
jecxz
loop
adcl
popf
test
scas
adc
js
push
xchg
and
adc
test
sarl
mov
mov
pop
and
xchg
lret
fldcw
pop
fbld
dec
fisubl
stc
dec
lahf
inc
adc
repnz
aaa
sub
pushf
loope
dec
add
leave
push
and
movsb
sub
out
test
inc
lea
add
ja
sub
in
in
mov
push
dec
push
mov
outsb
repnz
out
push
dec
cmc
mov
lret
or
iret
out
push
xor
les
push
sub
push
addb
fsubl
dec
sbb
lcall
shrl
xchg
lods
pop
xchg
add
dec
sub
ss
adc
jmp
jle
xor
xchg
out
out
sahf
aam
pop
mov
push
jl,pn
shrb
test
sbb
das
mov
nop
icebp
adc
test
jnp
sbb
inc
jo
mov
jnp
fs
sub
xchg
add
in
enter
mov
dec
or
add
outsb
sbb
out
sbb
insb
in
xor
push
dec
xchg
out
sbb
les
push
xlat
add
mov
mov
mov
mov
dec
stos
jmp
mov
sahf
cmp
and
movsl
jne
in
adc
lods
fsubl
sub
xor
sbb
in
in
mov
pop
scas
mov
jo
dec
xor
mov
or
mov
xchg
call
inc
ljmp
jle
aad
push
sub
aam
test
ficomps
das
pop
xorl
pop
cli
mov
jmp
jae
mov
add
cmp
in
cmpsl
inc
fiadds
rolb
xchg
loope
fldl2t
cmpsb
xlat
jg
rcll
mov
out
jge
mov
mov
jge
push
data16
lret
scas
xor
dec
mov
jne
cld
jno
xor
mov
cmp
add
push
out
jb
lea
mov
popf
outsb
push
push
xchg
lock
test
add
lods
jbe
js
cmp
pop
and
jnp
mov
test
sub
dec
xor
add
aad
cmp
jmp
pop
stos
mov
fmull
mov
into
and
ljmp
shrb
lods
inc
push
dec
xchg
add
int
ds
test
mov
inc
test
push
fcom
sbb
xlat
call
or
in
push
xor
push
sbb
addr16
dec
jmp
mov
xor
mov
sub
lods
and
mov
mov
repz
add
or
push
fisubs
inc
sub
mov
scas
push
arpl
jne
pop
lahf
cltd
inc
dec
pop
and
pop
movsb
push
ret
shrl
adc
stos
adc
lahf
fs
pusha
popf
popa
cltd
leave
sti
jge
orl
xor
xchg
sbb
loope
xchg
stos
push
int
pusha
pop
aam
pushl
popa
mov
ret
inc
lret
lods
ja
xchg
stos
xchg
pop
je
fsub
pop
jle
lret
jbe
sahf
lahf
push
test
xchg
push
lods
mov
jbe
sbb
rorb
and
outsl
test
push
jns
adc
xor
enter
and
lret
pushf
xlat
mov
xchg
test
ja
sbb
jecxz
mov
stos
outsb
push
adc
dec
cmp
sahf
sbb
pop
pushf
pop
into
shrb
mov
dec
in
aam
jecxz
mov
dec
dec
out
adc
and
mov
fs
in
incl
or
dec
cmp
mov
movsl
add
cwtl
popa
clc
jmp
cld
sahf
adc
dec
clc
pushf
inc
xchg
sbb
pop
out
es
jle
fmull
int3
movl
outsb
pop
and
fistpll
and
mov
pushf
rcrb
rclb
jl
lods
into
adc
scas
xchg
std
xchg
inc
cmp
leave
dec
lock
dec
jns
pop
out
popa
imul
cmp
or
ja
xor
ficoms
cs
pop
push
inc
cmpsl
jns
mov
sti
cmp
jl
xchg
xor
adc
push
mov
icebp
out
dec
xchg
sub
shrb
sub
pop
insl
out
lds
lahf
insl
cmp
insl
mov
daa
cmc
filds
insb
cmp
mov
lods
mov
int3
sbb
inc
jae
iret
lea
pop
sub
and
js
test
xchg
xor
sbb
movb
xchg
daa
adcl
pop
xor
cmp
test
dec
pop
cmc
sub
push
and
shr
mov
mov
nop
dec
cmc
inc
mov
cli
stos
push
outsb
ficomps
mov
test
cwtl
and
pop
cld
lds
push
movsl
int3
aaa
imul
pop
aad
mov
jo
xchg
dec
imul
icebp
mov
add
test
filds
add
rcl
jmp
xchg
cmpsb
push
mov
mov
adc
lret
sbb
xor
aaa
fwait
add
mov
and
push
in
mov
push
jae
inc
mov
ja
jae
add
xor
add
ss
dec
icebp
jne
push
jbe
cmp
cld
loope
pop
jno
and
or
stos
inc
pop
rorb
mov
push
jmp
push
cmp
and
xchg
mov
mov
push
stos
ds
ficoml
mov
pushf
iret
add
iret
jmp
sub
das
cli
movsb
mov
push
popf
jecxz
fdivrs
push
outsl
push
fbld
cli
test
cli
insl
sbb
gs
lds
mov
inc
mov
bound
xor
lret
pushf
pop
fcomps
jmp
adcb
mov
adc
ds
mov
xor
push
dec
xor
or
fwait
push
call
and
add
inc
gs
lock
push
mov
mov
xchg
add
loopne
fsubrs
mov
lods
enter
jo
adc
ror
arpl
push
cmpsl
xor
dec
aaa
std
push
inc
es
ja
pop
es
and
jo
jnp
sub
adc
call
jne
mov
inc
movsl
mov
enter
xor
popf
push
lds
mov
in
faddl
and
lret
and
sarl
xchg
bound
pop
xchg
stos
in
movsb
xchg
dec
clc
mov
lret
or
pop
in
adc
add
jns
pop
push
nop
lahf
imul
xor
psubsb
dec
dec
flds
xchg
xchg
rclb
jp
test
jne
ja
add
cmp
add
das
movl
jp
stos
mul
test
cmp
stos
push
insb
negl
mov
jnp
imulb
xor
stos
stos
mov
mov
inc
cld
daa
mov
jl
adc
xor
inc
sub
or
sbb
fldenv
jne
pop
stos
js
jmp
movsl
jne
scas
aas
aam
inc
pushf
mov
jne
scas
push
sbb
cs
stos
ret
pop
call
fldl
and
inc
push
daa
pop
nop
mov
mov
jp
sub
loope
loopne
push
adc
imul
pusha
jnp
pop
iret
push
jb
mov
push
dec
pop
cmc
mov
movsb
lods
inc
mov
test
fcoml
push
popa
mov
mov
xchg
jecxz
je
inc
fstps
std
add
mov
icebp
rcrb
xchg
iret
xchg
orl
subl
jo
in
mov
inc
adc
jge
popf
jle
stos
inc
adc
mov
xor
mov
xor
fldl
icebp
imul
arpl
dec
movsl
xor
jecxz
jno
outsl
dec
cmp
test
shll
xor
push
ret
pop
daa
jno
cs
and
sub
sbb
sbb
movsl
adc
mov
cmp
lret
pop
inc
in
push
cmp
pop
inc
outsl
sar
repz
jns
addr16
xor
mov
mov
dec
pop
stc
pop
add
jmp
pop
xor
out
dec
adcb
xor
push
popa
add
jae
add
in
sbb
mov
insl
int3
or
lret
lea
jno
pushf
int3
mov
scas
out
out
xchg
in
dec
add
stc
popa
scas
stos
cmp
sbb
fadd
subl
lret
adc
sub
pop
and
mov
mov
mov
xor
mov
push
ja
sbb
andb
out
icebp
mov
and
lcall
inc
insb
lcall
enter
loope
imul
xchg
addr16
mov
xchg
add
cltd
mov
pop
dec
imul
mov
jmp
sub
dec
lods
imul
loop
dec
mov
or
hlt
inc
repnz
scas
stos
cmpsb
rcrb
dec
in
ret
gs
push
icebp
xchg
inc
testl
mov
push
xor
outsl
xchg
je
xor
cs
jp
fsubr
lods
repz
arpl
lcall
test
sbb
repz
or
iret
xchg
popa
or
mov
ror
addr16
int3
inc
popf
loopne
dec
ret
add
inc
xchg
lret
test
cmp
xchg
sbb
movsl
nop
aam
inc
shll
rolb
enter
add
adcl
repnz
sbb
jmp
imul
call
add
push
cli
ds
dec
lret
movsl
jb
jp
push
test
cmp
lret
call
pop
shll
cmpsb
icebp
int
adc
enter
pop
out
data16
jle
push
xor
rep
cwtl
jb
lret
loop
jb
xchg
or
mov
popf
add
gs
mov
es
adc
clc
mov
mov
inc
stos
cmpsb
inc
mov
out
ljmp
mov
pop
mov
stos
scas
mov
nop
int
add
int3
out
cmp
ss
popa
push
popf
sub
ret
ja
dec
mov
sbb
fdivs
popa
jle
lods
add
push
cmp
mov
aas
sub
push
ficoms
fcom
ds
js
fiadds
and
cmp
leave
add
je
pusha
jnp
jecxz
inc
incb
fs
mov
aad
lods
mull
rorl
ja
ss
cmp
aad
flds
aaa
cmp
imul
movsb
push
dec
mov
jno
xlat
pop
rclb
add
cltd
clc
or
fldenv
gs
mov
out
subb
sbb
repz
bound
popa
or
cli
jmp
mov
les
out
cmp
push
mov
mov
pop
idiv
jnp
jbe
pop
cmpsl
cmp
dec
and
jge
cli
test
adc
mov
pop
dec
mov
jbe
lock
xchg
je
adc
and
aam
mov
andb
fdivp
in
xor
sub
mov
in
sti
out
jmp
je,pt
aam
add
lret
lods
mov
dec
fdiv
mov
sar
pusha
mov
sub
push
xchg
xchg
ficomps
test
faddl
in
fildl
mov
ds
xchg
or
cmpsl
outsb
aam
movb
or
jecxz
mov
mov
mov
iret
lds
movsl
add
gs
leave
jg
repz
mov
mov
mov
je
inc
mov
enter
rcrb
add
dec
test
test
pop
in
fldcw
xchg
int3
dec
rcl
or
rcrb
xor
je
sub
jo
mov
cmp
fwait
daa
gs
xchg
mov
mov
mov
fstp
pop
and
std
mov
dec
xlat
mov
xchg
int3
fldcw
test
cmp
das
mov
pop
roll
mov
clc
xor
mov
inc
mov
mov
xchg
mov
jnp
mov
test
ja
cmp
mov
enter
jg
inc
rcrb
mov
es
inc
ja
stc
lret
mov
leave
sbb
adc
push
and
dec
testb
push
inc
pop
movsb
out
decb
pop
adc
icebp
cmp
inc
xor
mov
int
mov
fucomp
dec
sahf
mov
aam
out
popa
ficoms
icebp
clc
mov
nop
pop
xor
inc
mov
push
mov
xchg
add
sbbl
xor
cli
sbb
enter
xor
lret
dec
int3
mov
test
insl
lret
sub
sbb
xchg
ljmp
mov
adc
sti
in
addl
sahf
push
mov
in
cld
loop
lock
ror
into
aaa
and
cmp
mov
jno
daa
sbb
outsb
push
jg
ljmp
jbe
fildl
test
in
fisubl
lock
xchg
das
sarl
shll
fsubrs
inc
mov
add
xor
sub
mov
pop
ret
in
enter
in
jb
outsb
inc
mov
jmp
call
lock
jno
test
sub
cltd
lcall
sub
mov
dec
and
sbb
xchg
cmp
sub
jne
das
movsl
jge
adc
das
pop
add
xchg
lret
imul
mov
and
out
mov
push
ret
jne
aad
aas
mov
or
stc
cmp
test
lret
jbe
imul
push
fcomps
sub
insl
and
xor
clc
cli
dec
or
adc
jg
sbb
scas
pop
mov
mov
push
int3
lahf
or
scas
fyl2xp1
dec
fwait
enter
lahf
xor
pushf
pop
stc
in
les
sub
insl
cmpsl
movsb
stos
mov
jle
xor
movb
out
dec
jge
mov
subb
sahf
push
cmp
std
push
movsb
pop
fucomp
dec
lcall
mov
jb
pop
or
xchg
xchg
adc
mov
jae
ficompl
es
jne
imul
xchg
push
in
jl
fmul
xor
mov
push
lret
adc
and
add
insl
mov
cmp
mov
fistpll
fmul
test
in
xor
xchg
cld
icebp
stos
pop
ljmp
popf
sbb
ret
jecxz
inc
test
cld
call
stc
mov
or
inc
or
sbb
test
and
jle
cmp
fdivrp
cmp
xor
xor
lret
adc
mov
pop
movsb
js
sub
dec
jo
stos
hlt
clc
loop,pn
imul
dec
mov
aad
inc
xor
loop
les
loopne
ret
push
fisubs
jecxz
push
adc
je
loope
cmp
push
popf
and
mov
dec
add
sub
js
push
xchg
mov
pop
ss
cmp
add
sbb
cmpsb
xor
add
aam
mov
adc
lret
pusha
jg
mov
add
dec
movl
cmp
and
movsb
jl
xor
sbb
jb
rcrb
loop
adc
subb
xchg
out
packuswb
or
rolb
sbb
sub
dec
les
mov
in
shl
add
daa
lret
js
les
mov
pop
mov
in
je
xlat
fs
repz
movsl
mov
or
aad
call
mov
xchg
xor
test
xor
fidivrl
fildl
cmpsb
xchg
rcrb
mov
and
cmp
inc
fisubrl
fwait
in
push
sbb
aas
pusha
cmpsb
pusha
out
inc
inc
mov
pushf
fdivrs
mov
out
and
outsl
pop
or
add
sub
jmp
rcrb
jmp
flds
pop
sub
movsl
xchg
jb
mov
push
jle
mov
sahf
jns
cmp
lods
icebp
popa
mov
hlt
push
push
ljmp
stc
jecxz
mov
mov
leave
negb
xor
aam
jae
mov
psrlq
adc
aad
push
and
sub
gs
mov
or
sti
mov
test
add
push
xchg
jne
je
dec
dec
inc
ret
sub
push
ss
shlb
adc
jae
mov
pop
nop
and
fisttpl
sahf
jge
lock
add
mov
mov
add
mov
mov
jecxz
mov
jo
jne
xchg
mov
icebp
jae
jnp
xchg
sbb
repnz
and
mov
shll
dec
and
mov
ja
icebp
jbe
scas
fwait
and
imul
insl
dec
adc
stos
sbb
cmp
push
jo
pop
mov
and
je
push
mov
insl
iret
pop
mov
push
decb
repnz
xor
ret
xchg
movsl
iret
arpl
push
sub
xchg
rclb
jo
xchg
sub
push
cmp
gs
add
addr16
sbb
roll
push
lret
inc
adc
sub
mov
push
or
mov
xchg
stos
repz
out
cmc
jmp
mov
jmp
pop
pcmpeqd
sbb
fisubrl
stos
gs
pushf
or
out
bound
out
pop
push
pushf
adc
mov
iret
push
lret
fisubs
mov
xor
jle
adc
dec
shl
test
inc
imul
mov
ret
jle
jb
nop
jbe
out
in
xchg
jp
sbb
pop
mov
or
inc
adc
leave
in
push
lahf
rorb
xor
push
adc
neg
pop
das
je
fidivrs
out
pop
aam
cmpsl
xchg
stos
add
pop
insb
push
mov
push
mov
mov
movsl
imulb
stc
andb
cltd
imul
idivl
pop
rcl
aam
push
pusha
xor
mov
sti
pop
lret
jo
gs
mov
xchg
and
in
fiaddl
jbe
sub
ss
and
enter
ljmp
je
push
xchg
mov
sub
dec
cmpsl
push
xlat
fwait
std
pop
lea
xchg
stc
lods
jmp
xor
cmp
pop
adc
insb
xchg
sub
repz
mov
mov
ret
adc
sbb
imul
mov
les
inc
into
sbb
xchg
test
cmp
cli
stos
sub
jb
push
je
mov
jne
movsb
gs
cmp
in
push
or
push
enter
loopne
cmp
and
clc
pop
in
jmp
adc
push
cmpsl
mov
rolb
std
push
je
pusha
add
fisubs
sub
loop
mov
or
mov
cmp
xorb
imul
cmpsb
mov
add
or
mov
jb
pop
mov
dec
push
loope
cmp
inc
test
push
popa
mov
sahf
aad
outsl
pop
dec
lds
push
fwait
pusha
outsb
dec
mov
sbb
fadd
mov
scas
sub
data16
or
cmpsb
inc
pop
adc
push
push
movsb
xor
jno
xchg
and
jne
sub
icebp
push
mov
aas
and
nop
cli
mov
jle
push
adc
inc
adc
inc
ds
inc
cmp
xchg
cli
adc
cli
cmp
outsl
fstpt
jp
divb
add
mov
cmp
shrl
shlb
ss
ljmp
sti
dec
lret
push
aaa
or
scas
stos
pop
sarl
loopne
insl
lahf
cltd
dec
sub
cwtl
or
test
dec
push
es
cmp
xor
or
loop
jge
lods
aaa
pop
movzwl
mul
fcoms
leave
add
mov
xlat
dec
sbb
and
xlat
dec
int
outsb
lds
outsb
xor
adc
sbb
repz
push
pop
xchg
jge
xor
test
movsl
mov
enter
rorl
in
xchg
cmp
sub
mov
shll
xorl
pop
pop
out
imul
sub
jo
in
mov
jl
insl
daa
cmpsb
faddl
sahf
push
adc
inc
sub
jle
push
std
dec
mov
out
pushf
fidivrl
ljmp
inc
or
imul
and
mov
xor
aaa
fwait
je
pop
dec
and
sahf
lods
sub
js
sbb
jbe
fsubrs
scas
mov
cmc
out
sbb
jnp
xchg
dec
pop
pop
xchg
out
or
cmp
cmp
push
push
mov
and
insl
push
inc
dec
dec
ljmp
fistpl
movd
insb
sti
dec
dec
call
xchg
and
adc
popf
sbb
pop
pop
fistpl
xchg
popa
jge
and
addb
jl
push
clc
out
adc
sbb
mov
jns
iret
pop
mov
push
stos
ror
and
aas
dec
cs
arpl
lock
xor
cmp
repnz
jns
mov
xchg
push
pop
test
stos
addl
dec
movsl
mov
outsb
or
push
inc
xchg
ja
dec
jecxz
daa
push
jns
cmp
xor
push
xchg
test
sub
sbb
jmp
mov
lret
arpl
ss
pop
popf
or
dec
pop
xchg
daa
push
inc
add
jl
inc
out
ja
negb
mov
mov
mov
push
push
push
incl
jge
xchg
inc
pop
add
pop
rol
xor
pushf
xor
insl
ret
subb
jp
mov
mov
mov
cmp
jb
xchg
mov
lock
movsl
aaa
xor
loope
inc
cld
jle
outsl
push
jp
js
loope
stc
dec
adc
fdivrl
jmp
cli
push
stos
addr16
and
lcall
aaa
ds
or
xchg
popf
pop
push
sub
jge
icebp
cmp
pushf
jo
jne
push
adc
loopne
ds
outsl
mov
cltd
push
dec
xchg
add
xchg
add
jne
outsl
inc
adc
xor
jle
cmp
test
stos
fnstcw
in
or
cmp
stos
idivl
js
dec
xchg
fnstcw
mov
loop
adc
enter
jae
mov
dec
mov
dec
into
cmpsb
imul
stos
jmp
data16
ds
xchg
stos
mov
mov
mov
sbb
jp
pop
mov
es
inc
cmpsl
pop
mov
dec
pop
ljmp
xchg
inc
mov
cvtpi2ps
fwait
and
sub
sub
out
sbb
mov
ror
or
pop
and
int
mov
sub
ret
fbld
cmp
loope
cmpsl
adc
mov
ror
jg
sbb
ret
je
dec
xlat
stc
and
mov
in
mov
test
push
lcall
dec
inc
jmp
jge
cmp
or
out
mov
hlt
add
push
and
shll
cld
andl
push
ja
xchg
xor
mov
test
addb
add
adc
mov
adc
imul
add
leave
jo
jns
mov
cmp
mov
cmp
mov
out
sbb
push
into
or
in
push
cmp
lret
xchg
mov
jnp
cmp
testl
xor
pop
dec
add
fwait
addl
xor
sub
imul
mov
xor
push
dec
lret
xor
inc
cmp
sub
shr
repnz
xchg
xchg
adc
scas
cwtl
movsl
mov
daa
imul
aaa
in
scas
outsb
lret
ret
rorb
pop
add
mov
dec
icebp
push
or
inc
inc
jg
movsl
fadd
sub
adc
pusha
shrl
rclb
into
push
sbb
jg
add
push
sub
xor
loope
aaa
lea
xchg
into
push
stc
sbb
pop
sub
mov
out
xor
sub
mov
sar
sub
sbbl
js
lcall
popa
mov
cmp
clc
cmpsb
lret
leave
cmc
xchg
scas
xor
xor
xchg
inc
inc
sbb
mov
mov
mov
dec
popa
add
jg
cwtl
in
dec
xor
pushf
adc
fadds
xor
cmpsb
pop
test
xor
sbb
ljmp
stos
push
add
cmpsl
ret
sub
sub
sub
and
in
insl
outsl
sub
lock
in
adc
push
int
icebp
mov
outsb
xor
xor
shlb
ret
mov
pop
sub
add
xchg
mov
mulb
push
lret
cmpsb
outsl
ret
test
add
cmpsb
add
and
test
add
inc
mov
add
imul
push
shl
cmc
out
or
shrl
mov
mov
aaa
and
push
xor
movsl
pushl
cmp
sbb
xchg
xor
fdivrs
xchg
dec
out
cmc
lahf
test
inc
testl
loopne
mov
mov
fcomp
in
mov
push
in
sbb
jns
dec
dec
adc
jmp
mov
push
xchg
or
cmp
fmull
fwait
fs
inc
in
das
mov
enter
loop
outsb
lods
push
add
sbb
int3
cmc
jo
les
addr16
cmp
pop
mov
cwtl
add
bswap
lcall
test
scas
pop
add
push
repz
pop
cmpsl
nop
sbb
es
mov
mov
jbe
and
mov
sti
movups
pop
xlat
push
lods
jl
dec
stc
andb
xchg
pop
adc
fiaddl
jmp
or
rol
push
adc
sbb
in
lret
sub
insb
lahf
sbb
lock
jge
add
popa
or
sub
test
addl
or
cmp
mov
in
dec
fs
sbb
cmp
jl
popf
pop
scas
inc
addl
sarl
decl
and
call
mov
movsl
faddl
inc
loope
repnz
jle
ds
mov
jo
cmpl
psrad
sbb
adc
jne
push
andl
lods
insl
adcb
orl
repz
mov
adc
push
fwait
sub
lret
pop
xor
jbe
pop
adc
add
iret
xor
sub
aad
stos
cmp
mov
and
jg
sub
sarl
mov
push
mov
shrl
inc
ret
mov
insl
inc
push
mov
jl
add
cmp
mov
dec
or
pop
xchg
mov
push
jb
pop
mov
cmp
fidivrl
sbb
fldl
jle
cwtl
insl
leave
repz
negl
fstpt
pusha
inc
xor
repz
call
inc
adc
repz
jp
divb
and
push
int3
mov
fisttpll
mov
fisttpl
cmpsb
sahf
or
cwtl
inc
outsl
push
sarl
enter
mov
push
mov
and
pop
lods
lret
ret
mov
jae
mov
mov
adc
bound
std
xlat
mov
pop
adc
dec
dec
dec
dec
sahf
shl
pop
into
or
sbb
jbe
xchg
push
outsb
mov
cld
repnz
outsb
and
pop
sbb
and
sbb
outsl
outsl
jl
cmpsb
lea
push
je
incb
or
jmp
and
or
test
mov
push
mov
adc
ja,pn
loope
pop
lods
jmp
pop
dec
inc
inc
cmp
inc
test
adc
push
sbb
dec
sti
lahf
in
add
sti
popa
jb
sbb
adc
inc
les
rclb
push
dec
mov
sub
clc
fs
lods
lcall
push
and
mov
push
call
cltd
cmpsb
fwait
test
mov
xchg
pushf
test
mov
in
lret
push
lds
ret
pop
in
xor
mov
xchg
and
dec
mov
mov
out
add
cli
int
mov
cli
push
sub
or
or
lahf
jne
fmull
add
fiadds
adc
and
int
cmc
lahf
loop
out
popa
aas
xor
xchg
or
leave
das
fbstp
cltd
inc
mul
out
imul
ss
pushl
mov
rclb
pop
pop
pop
sub
daa
inc
mov
inc
insb
adc
jbe
dec
adc
lret
xor
imul
into
inc
lods
rorb
enter
loop
enter
lds
jmp
call
and
mov
iret
inc
js
add
mov
ret
xchg
or
test
jne
cld
clc
rcl
sbb
mov
mov
sub
sbb
lahf
shll
je
lods
fs
fwait
fs
or
mov
lahf
xchg
push
sub
mov
test
lock
imul
mov
jg
mov
fstpt
fstpt
and
insb
andb
add
cmpsb
push
daa
int3
inc
pop
mov
push
stos
orb
sub
mov
dec
daa
sub
push
sub
imul
enter
pusha
movsl
fdivs
inc
sub
test
jge
aad
mov
iret
out
inc
xchg
pop
xchg
pop
jecxz
xchg
fcomps
outsb
faddp
rclb
data16
iret
add
mov
insb
mov
xchg
inc
and
sbb
mov
jo
mov
mov
lea
pop
and
test
sbbb
cmp
fstpl
mov
add
add
push
dec
adcl
sub
les
xor
push
sub
jecxz
add
gs
popl
mov
dec
loope
push
jb
jno
pushf
gs
sarb
push
repz
dec
mov
ficompl
mov
or
xchg
pop
mov
ljmp
add
outsb
es
dec
out
xor
mov
std
icebp
jle
add
jge
xor
cltd
aas
je
test
sub
outsb
push
mov
push
loopne
sub
mov
ficoms
cltd
xchg
sbb
lock
addr16
mov
dec
pop
push
scas
das
sub
les
mov
mov
shrl
push
add
and
dec
xchg
lds
rcl
shl
sahf
cmp
cli
cmc
sbb
das
add
rclb
lret
or
enter
stc
fstpl
xchg
push
outsl
jmp
insl
pmulhw
in
insb
fidivl
dec
xor
mov
sbb
jnp
add
push
movsb
enter
mov
jnp
in
jo
orb
pop
add
lcall
lds
and
insl
sbb
stos
push
inc
xor
inc
mov
dec
cmp
add
fdivrs
add
hlt
mov
mov
or
push
outsb
xor
aas
sub
xchg
or
lahf
sub
popf
jae
cmpb
in
push
xchg
aaa
pop
adc
in
push
adc
xor
sbb
mov
cmp
xor
ret
flds
mov
mov
inc
mov
pop
in
cwtl
ret
testb
aad
stos
cmp
mov
mov
push
imul
cwtl
and
sub
es
and
dec
divl
inc
or
mov
jp
jmp
sub
sti
sbb
popf
add
or
fs
xor
out
rol
sub
add
mov
into
fisttps
iret
mov
jmp
ds
lock
pushf
movsl
ja
mov
sub
lcall
mov
add
mov
sahf
lock
pop
xlat
mov
sbb
mov
sub
outsb
mov
jne
and
rol
mov
cs
bound
pop
mov
xor
jge
xlat
fld
icebp
xor
mov
mov
pop
cmp
fscale
cld
das
push
xchg
stc
xchg
cld
dec
mov
push
outsb
push
aam
leave
xchg
pop
jae
cmc
lcall
push
push
mov
fldcw
call
insl
outsb
rcrl
cmp
ja
in
les
mov
shrb
xchg
les
xchg
jae
sbb
or
gs
jg
cmp
mov
mov
adc
jp
popf
mov
inc
lods
adc
cwtl
inc
sbb
fnsave
push
shrl
jp
and
pop
pop
ret
sub
mov
push
cmp
fstl
mov
pushf
es
dec
insl
mov
xchg
jbe
sbb
or
mov
pop
nop
pusha
sub
ret
cmp
stc
lods
xchg
cmc
in
inc
rcrb
mov
arpl
rorb
jb
pop
loopne
loope
jge
movsb
push
sub
pop
lock
ljmp
call
inc
test
jo
aad
or
sbb
pop
mov
dec
mov
movsb
mov
outsb
or
into
sbb
mov
lahf
and
pop
jmp
ljmp
or
test
adc
call
test
and
push
mov
fstps
aas
mov
lods
xor
stc
lcall
mov
dec
pop
stos
cmpsl
inc
and
pop
int3
xchg
add
mov
fwait
adc
dec
addr16
iret
ss
inc
dec
cwtl
cwtl
mov
int
push
insb
sbb
mov
xchg
je
dec
mov
sub
mov
cltd
in
mov
lret
sub
daa
insb
push
or
outsb
dec
mov
lds
mov
testl
jne
cmp
icebp
addr16
imul
xor
imul
fcoml
jbe
xlat
mov
ss
jle
xor
arpl
icebp
xchg
and
sbb
sbb
clc
popf
fldcw
fcoms
sti
mov
add
mov
or
xor
jg
inc
push
dec
testb
mov
out
mov
push
mov
aam
sar
or
cmp
in
pop
les
xor
cmc
lds
ja
push
xor
shl
enter
aad
sub
out
sti
push
mov
xchg
aaa
pop
test
and
shll
sub
std
loopne
mov
jae
ficoms
cmp
lea
in
imul
mov
dec
mov
mov
xchg
mov
mov
adc
jb
fldl
popf
jo
mov
mov
and
andl
out
xchg
add
inc
xor
iret
sti
adc
mov
mov
sbb
sbb
ja
arpl
dec
jecxz
les
jo
mov
cmpsb
sub
mov
or
add
push
mov
fisubrl
scas
pop
dec
scas
pop
loopne
test
hlt
mov
pop
aad
push
into
cmp
jl
popa
insb
mov
adc
sub
xor
sbb
jl
loop
jmp
rcll
sbb
mov
idivl
arpl
pop
cld
mov
jg
imul
or
out
push
xor
jge
aas
pop
les
sub
add
popa
scas
mov
mov
cs
subb
ret
pop
mov
mov
pop
cltd
ficomps
push
aaa
int3
inc
dec
sbb
xchg
fwait
stc
daa
je
imul
add
stc
mov
ljmp
add
add
or
cmpsl
and
lret
xchg
rol
cmp
and
fnsave
cmp
clc
inc
or
arpl
sbb
sbb
inc
fisubrl
cmpsb
out
sub
fidivs
cs
pop
cltd
dec
pusha
adc
or
lahf
push
ret
negb
mov
xchg
sub
stos
lea
adc
jl
nop
lret
and
sti
sub
xchg
and
into
pop
out
popa
aam
lret
call
mov
shlb
xor
fsts
and
sbb
outsb
push
in
lcall
mov
add
out
mov
mov
pushf
xor
lret
fadd
call
lds
sbb
stos
add
lret
inc
add
ja
push
xor
stos
test
inc
mov
inc
int3
inc
xlat
stos
jo
pop
repz
ds
mov
cmp
test
dec
sub
pop
mov
pop
sbb
out
cmp
lds
js
mov
stc
dec
inc
andb
cmp
std
xchg
hlt
adc
jbe
cltd
xor
inc
adc
scas
and
cmc
or
jmp
shlb
pushf
inc
cmpsl
inc
dec
fidivs
mov
add
xor
mov
xor
fwait
pop
or
out
dec
or
xor
in
lahf
add
add
inc
outsl
dec
in
out
xor
xchg
dec
cmp
mov
jge
cwtl
mov
imul
popf
or
cmp
cltd
fs
ret
jns
and
fcoms
aad
or
mov
push
fisttps
loop
fisttpl
xor
dec
jo
xchg
adc
sbb
mov
bswap
jne
stos
and
cmp
mov
add
mov
inc
bound
mov
cmp
push
pop
je
in
sbb
test
out
mov
push
loope
insl
cmc
or
pop
out
into
stos
shll
repnz
aad
dec
mov
push
sbb
xchg
fsubrl
cmp
mov
push
mov
daa
testb
jle
fcmovb
pop
sbb
pop
jno
inc
adc
scas
ret
insl
test
add
daa
add
mov
hlt
or
jne
imul
loop
lcall
dec
sbb
jge
test
and
jo
pop
call
out
fisubrs
les
imul
daa
lcall
mov
cmp
std
jb
xchg
mov
pop
hlt
jns
inc
nop
lret
repnz
lods
mov
stc
mov
inc
xlat
lock
mov
ret
inc
ss
fists
je
call
dec
int3
pop
jl
and
sub
sbb
cld
sbbb
mov
and
mov
adc
cmp
hlt
push
and
aam
and
loopne
cmpsl
mov
sbb
ror
cmp
and
xchg
push
sub
js
add
inc
pushf
cmp
loope
add
aam
cli
insb
add
push
and
ja
movsb
pop
adc
addr16
mov
shl
insl
setae
fsubrp
lret
in
push
sub
ror
jns
push
jo
inc
inc
in
je
les
pop
ret
addr16
insl
lret
push
or
lea
adc
push
add
xchg
or
mov
sbb
pop
insb
loop
adc
adc
lret
jmp
mov
xchg
clc
aam
sahf
xor
sub
ljmp
fisttpll
add
pop
insl
cmp
dec
mov
or
cltd
pop
hlt
mov
js
xlat
jae
mov
movsl
imul
es
sbb
or
movsb
xchg
mov
jno
jnp
xor
addr16
movsb
fwait
jns
sbbb
fcoms
repnz
mov
pop
mov
mov
and
jnp
mov
mov
xor
jl
das
push
ret
or
push
inc
sbb
test
dec
sub
ror
push
inc
icebp
stos
dec
mov
mov
xchg
sahf
loope
call
xlat
mov
mov
sahf
adc
or
pop
adc
call
in
pop
lcall
enter
xorl
outsb
lods
push
inc
add
jae
pop
or
iret
out
repnz
or
push
fdivs
pop
push
mov
loope
cmp
push
lcall
shlb
push
clc
cs
cmp
popa
or
fisttps
jb
clc
and
jg
push
leave
pop
sub
xchg
cltd
push
xlat
jo
xchg
popf
stos
jle
jo
jbe
int
and
push
jne
out
cmp
call
loope
mov
and
sbbl
je
shrb
fnstsw
cmc
inc
fwait
jmp
or
mov
mov
rcll
cmpsb
inc
adc
jge
ret
mov
xchg
mov
lcall
push
mov
or
push
cmc
xor
sbb
outsb
int3
fdivl
xor
push
rcr
mov
imul
sub
jg
mov
mov
outsl
push
sbb
test
leave
jl
je
imul
loop
add
negl
xlat
jl
pop
pop
jp
ds
std
mov
call
inc
bound
orl
repnz
shlb
ja
sahf
sbb
cmpl
dec
aaa
fldt
pop
insl
mov
pop
adc
mov
sub
imul
pop
inc
and
push
push
inc
pop
iret
jbe
sub
pop
jne
cmp
push
arpl
inc
out
xchg
dec
mov
dec
ss
push
popa
or
push
pop
dec
adc
jbe
pop
loope
fs
push
inc
insb
xchg
outsb
sub
add
movsl
fdivr
and
mov
push
push
int
push
bnd
adcl
adc
xor
nop
filds
jmp
lds
sahf
in
movsb
and
movsl
pusha
sbb
bound
push
scas
scas
stos
int
jo
cld
imul
cmc
xchg
and
loop
sbb
es
decl
push
fildll
jnp
fs
sub
outsl
xchg
xchg
ret
insl
ret
cs
adc
aam
int3
andl
repnz
xchg
das
jg
mov
push
mov
push
lcall
loopne
ficomps
mov
push
pop
cs
push
inc
push
loopne
and
dec
testb
inc
jl
push
or
sarb
sub
xchg
in
mov
push
arpl
nop
cmpsl
cwtl
filds
push
and
sbb
shr
aas
nop
and
lea
clts
mov
out
push
sbb
stc
dec
dec
movsb
sbb
js
test
dec
icebp
cmp
push
testb
mov
shl
ljmp
mov
fists
repz
insl
pop
rclb
xchg
outsl
adc
sarl
cltd
and
fwait
xchg
notl
leave
loopne
lock
inc
aam
cmc
push
pop
repnz
sub
insb
xor
xor
mov
mov
and
cli
jbe
cmp
jo
push
mov
scas
push
shlb
pop
dec
sub
ja
int3
shlb
xor
mov
sahf
lcall
outsb
mov
and
mov
and
test
pop
xchg
add
or
jne
or
dec
out
out
lds
pop
repz
mov
orb
mov
pusha
je
bound
call
mov
mov
cmpb
repz
xchg
lds
mov
cs
in
push
mov
inc
lods
sbbb
cmp
jmp
test
int3
lock
pushf
cli
mov
adc
scas
pop
pop
dec
mov
jp
inc
sarb
gs
xor
inc
sbb
lds
xor
les
adc
add
subb
lcall
xchg
xchg
dec
inc
dec
dec
xchg
pushf
inc
dec
adc
and
loop
or
cli
sarl
lcall
mov
adc
aas
push
dec
enter
mov
bound
notl
nop
fildll
cmpsl
repz
cld
adc
pop
mov
mov
test
enter
push
shll
xchg
push
pushf
pushf
cld
pop
icebp
xchg
cmp
call
add
push
scas
cs
jne
aad
cmp
shrl
mov
ret
das
or
fcmove
addr16
xor
xor
in
scas
int3
cmp
or
lcall
mov
out
pop
mov
jle
sbb
push
jl
imul
xchg
daa
ja
jmp
push
jo
sbb
pop
imul
insl
and
push
enter
mov
fidivrl
xor
aad
je
add
ret
mov
inc
in
jae
test
xchg
into
push
ja
inc
and
mov
outsb
sbb
je
out
lea
dec
test
sbb
jbe
movsl
ror
mov
xchg
dec
inc
loop
xor
icebp
cmp
gs
lea
jae
jge
test
loope
mov
call
push
in
popa
add
inc
shll
lods
cmp
out
inc
mov
dec
dec
les
mov
mov
mov
in
mov
lods
xor
mov
stc
movsb
stos
xchg
data16
lret
icebp
xor
aaa
sbb
jmp
inc
ds
xor
jg
fstpl
and
popa
inc
pop
jae
inc
iret
jo
incb
sbb
cs
test
push
xchg
in
adc
mov
dec
aas
sti
mov
add
xchg
data16
insb
cwtl
aas
xor
lret
inc
lock
lock
push
mov
ss
stos
popa
mov
cmp
fnstenv
xor
pop
out
lret
fs
scas
repnz
push
and
ds
clc
aaa
mov
orb
dec
adc
stc
add
or
mov
clc
push
sarl
insl
dec
imul
mov
inc
lcall
xor
cli
cmp
gs
jle
ds
push
sahf
cs
xchg
test
mov
and
push
xchg
aam
addr16
cmpsl
fildll
dec
in
outsb
std
int
mov
ja
mov
add
inc
sbb
add
arpl
fidivrs
repz
xor
pop
imul
pop
ret
outsl
out
repz
xchg
popa
xor
push
popa
push
xchg
jno
je
xchg
dec
push
stc
pushf
ljmp
pop
stc
aad
movsb
adc
mov
jns
jae
int3
jp
pop
inc
out
popa
lret
sbb
popa
stc
and
pop
outsl
and
movsb
pop
stos
ret
push
add
jae
xor
lcall
pop
push
outsb
push
inc
roll
jl
jnp
dec
adc
pop
loope
fcomps
scas
jno
dec
pop
and
das
cmpsl
leave
lret
fbstp
fimuls
add
add
jbe
mov
cmp
int
repz
addb
js
lea
mov
sbb
loopne
jae
pop
inc
cltd
adc
dec
dec
outsb
out
cmp
dec
jnp
adc
test
mov
dec
xchg
das
cmpsl
adc
and
xchg
popa
cmpsb
jns
sti
sbb
sub
test
and
imul
in
mov
addl
aaa
cld
cwtl
xchg
out
dec
lahf
push
out
insb
data16
lds
mov
adc
jo
jne
stos
or
popf
lock
aad
lds
push
aas
out
jmp
jle
scas
movsb
adc
test
push
add
ret
push
inc
add
sbb
outsl
lcall
sbb
and
insb
add
out
fcoms
dec
mov
dec
shlb
jp
mov
sbb
jmp
xchg
fsts
popa
loope
xchg
mov
sarl
push
mov
cmpsb
mov
cmp
imul
and
inc
xor
out
mov
pop
mov
shrl
and
xlat
inc
xor
stos
out
sbb
jno
pop
inc
dec
push
xchg
dec
out
pop
enter
or
inc
push
mov
lret
mov
jne
xchg
and
out
push
ss
ljmp
popa
jg
data16
pop
xchg
es
push
xorl
pop
loopne
and
sbb
popa
xchg
push
or
daa
push
mov
out
xchg
stc
add
jae
out
movsb
ret
pushf
cmp
movsb
jecxz
mov
jnp
fwait
cmp
jle
mov
fstpl
sbb
rcl
call
jecxz
xchg
pop
jb
mov
mov
fistl
mov
lret
xchg
pop
mov
mov
loope
fwait
mov
mov
xchg
inc
mov
or
outsb
and
hlt
cwtl
icebp
xchg
or
add
xorl
faddl
das
sar
or
nop
jb
pop
fcmovne
outsl
aaa
lds
fldt
daa
int3
rcll
ret
xchg
push
and
sbb
dec
xchg
sbb
mov
out
jo
jg
arpl
cs
and
cmp
jns
frstor
push
jae
cmpl
sbb
dec
push
pop
xchg
subl
aaa
push
test
xchg
lea
shrl
out
xor
mov
lret
lret
clc
pop
mov
adc
xor
sbb
stc
lds
pop
or
fdivr
cmp
scas
inc
pop
mov
out
nop
and
in
into
jmp
enter
mov
insl
mov
jnp
push
jg
sub
jb
cmpsl
out
cmp
inc
movsl
jp
fs
jmp
lock
icebp
ja
in
lea
xor
std
jno
jns
lea
mov
add
loope
sbb
xchg
sub
push
or
subl
push
daa
popa
inc
cmp
lods
fnstcw
cld
push
xchg
sbb
push
stc
mov
movsl
xchg
cmpl
loope
sti
pop
mov
ficompl
imul
imul
subl
inc
sub
das
pushf
push
adc
push
mov
and
xchg
loope
std
push
and
movsl
and
sub
shl
cmp
clc
jecxz
jb
inc
leave
in
imul
pop
jb
idivl
mov
shl
mov
stos
and
daa
mov
jo
sahf
decb
add
sahf
push
outsb
push
insl
mov
std
push
mov
fnstenv
addl
lret
xor
cmpl
inc
mov
push
xchg
mov
addr16
test
push
jbe
and
mov
and
mov
sbb
or
push
lret
mov
test
hlt
pop
adc
test
cs
jns
pushf
lock
adc
test
push
popf
mov
leave
xor
arpl
jle
test
loopne
mov
lods
mov
push
bound
test
add
jl
je
movsl
mov
cli
pusha
addr16
pushf
scas
push
jp
mov
adc
adc
mov
jmp
aad
int
outsl
jl
cs
inc
push
inc
dec
pop
inc
or
cmp
ds
pop
cmp
lea
fisubl
sbb
mov
xor
adc
pop
pop
pop
xchg
mov
movsl
xchg
mov
into
sub
scas
cld
enter
mov
or
push
outsb
and
stos
push
fwait
or
insl
dec
jno
bound
inc
sub
xorl
andl
mov
int3
rcll
dec
popa
lock
outsl
test
jbe
fcoml
mov
xchg
dec
adcb
cmp
pop
insl
jae
jo
lods
ret
adc
pop
inc
jb
test
ljmp
imul
fs
mov
test
or
pop
mov
scas
mov
jb
pop
adc
mov
iret
xchg
mov
xchg
in
pusha
mov
xor
int3
ficoml
ja
leave
fistps
mov
dec
push
sarb
sbb
shrb
sbb
adc
mov
mov
sbb
lods
mov
xor
jo
ljmp
insb
aas
imul
inc
je
pop
pusha
sbb
adc
ljmp
inc
mov
mov
mov
aaa
or
mov
xor
cmp
sbb
mov
fmul
mov
cmpsl
ds
mov
sbb
mov
push
out
std
cwtl
loopne
ja
or
xchg
int3
js
pop
jne
fnstenv
inc
xor
in
sbb
xchg
cmp
push
mov
daa
leave
or
xor
mov
mov
mov
jo
mov
aam
mov
xchg
cmp
add
fs
jp
fisubrs
outsl
pop
je
cld
pop
jb
mov
popl
push
loopne
cmpsb
and
xchg
jl
add
mov
sub
xchg
or
hlt
hlt
mov
ret
cmp
jno
xor
cmpsb
lret
roll
dec
outsl
fcompl
in
cmp
pushl
xchg
xchg
pop
mov
mov
mov
xchg
cmp
mov
mov
lea
pop
repnz
neg
cmp
sbb
jne
jmp
fisttpll
popf
insb
pop
scas
pop
imull
cmpsb
xor
loopne
icebp
shlb
mov
stos
jecxz
inc
push
scas
aas
jo
in
std
imul
sahf
xchg
aas
and
js
ss
out
rcl
or
out
xor
out
iret
scas
inc
pop
pop
mov
or
test
adc
sbb
push
repnz
push
add
fiaddl
out
xchg
xor
andb
enter
rorl
mov
testb
add
adc
mov
test
shlb
adc
jo
shll
repz
fwait
pop
adc
adc
loope
xlat
lods
or
inc
lahf
jnp
dec
ret
dec
push
xchg
xchg
sti
daa
push
repz
fwait
sbb
ror
ja
and
lock
push
outsb
fs
sub
fildll
ja
sub
in
sti
pusha
jae
popf
inc
int
pop
xor
jo
pop
jl
jno
xlat
adc
mov
fildll
cmpsl
inc
jo
cmpsb
inc
ret
cmp
orb
mov
stos
sahf
xchg
movsb
adc
inc
mov
jmp
add
loope
int
add
xchg
aaa
sub
cmpsb
lret
sub
jnp
sub
aam
iret
popf
mov
stos
lcall
sbb
mov
fwait
cli
punpcklwd
clc
sub
into
repnz
popa
mov
cmpsb
out
ja
push
adc
sub
dec
add
scas
cmp
hlt
call
push
or
es
iret
and
out
roll
jo
push
loop
push
sbb
icebp
add
dec
cmp
clc
xchg
pop
jmp
pushf
idivb
adc
pop
in
cmp
fucom
pop
xor
fldz
xchg
cmp
imul
es
jb
sub
and
mov
test
lds
aaa
cmp
jnp
rorl
out
invd
adc
pop
xor
jno
dec
inc
fistpll
shrl
dec
pop
xlat
push
insl
scas
inc
pop
xlat
shll
lds
js
into
mov
pop
fisubrl
aad
sub
mov
and
sub
cmp
cltd
shld
stos
aaa
jb
std
ds
fcoml
cmp
push
mov
sub
test
xchg
cmp
pop
mov
push
cltd
mov
imulb
fadds
ds
sahf
ret
or
sub
testl
call
ret
jg
xchg
push
xor
sar
cmp
fstps
push
sub
loope
insl
xchg
imul
mov
daa
andps
and
and
and
lea
and
les
and
jmp
fld
imull
cmpsl
mov
jne
add
mov
push
and
cmp
mov
or
rcrl
xor
jae
fistpl
mov
mov
sub
dec
add
jmp
movsl
adc
xchg
call
lret
stos
pop
rorl
xchg
pop
out
xor
addr16
out
cmpsl
cmp
push
push
int3
push
pop
push
negb
imul
hlt
shrb
cmovl
push
xor
sbb
sub
mov
add
testb
add
pop
inc
fwait
ss
pop
cmp
inc
or
xchg
adc
cld
fprem
mov
mov
inc
lret
jae
call
xlat
mov
jp
pop
mov
cmp
xchg
mov
lds
aaa
pusha
push
push
fisubrl
cmp
clc
dec
adc
enter
inc
inc
xchg
or
lods
dec
add
fmull
xchg
insb
and
mov
jge
test
dec
testb
fldl
ljmp
sub
mov
add
adc
inc
pop
mov
or
and
shl
sbb
ffreep
inc
sti
adc
ss
ljmp
cmpl
mov
xchg
lds
rol
or
iret
testb
pop
sbb
or
cmp
sti
arpl
out
xchg
inc
xchg
scas
daa
push
cmpb
rol
sbb
scas
xchg
jnp
movsb
mov
test
shl
sub
in
mov
pop
or
mov
push
mov
mov
pop
and
icebp
int3
xor
in
xchg
xchg
xchg
cmp
lret
iret
lods
push
outsb
ja
repnz
rcl
mov
dec
test
fldt
xchg
gs
daa
dec
test
push
testl
adc
add
scas
arpl
jl
ljmp
adc
movb
stos
adc
xor
sub
push
fwait
cwtl
in
outsb
call
fidivrl
pop
pop
out
daa
xchg
pop
pusha
iret
ret
and
scas
clc
fcoms
xlat
rclb
xor
dec
and
test
lock
jecxz
xchg
push
push
lods
das
jmp
ret
push
mov
jb
out
fisubl
inc
stos
pusha
and
loop
jo
add
js,pt
rcr
pop
mov
pop
repnz
movsl
stos
or
pusha
shl
cmc
faddl
loopne
cmp
sti
adc
inc
out
mov
push
xor
push
dec
jg
das
sti
orl
fcompl
mov
fwait
jp
enter
rorl
lahf
das
push
push
rcrb
popf
pop
scas
scas
popf
lcall
xchg
push
push
call
xor
popa
add
jp
or
mov
or
out
es
out
cmp
jge
fcomps
outsl
mov
xchg
cmpsl
loop
mov
das
jno
sub
push
pop
lods
out
xchg
mov
das
in
mov
clc
clc
test
and
outsb
lods
cmp
jb
push
xor
rolb
adc
int
or
and
leave
dec
xchg
lret
sub
xchg
sarl
mov
pop
mov
das
xor
push
in
and
imul
inc
inc
inc
xchg
pop
popf
xchg
mov
and
scas
mov
mov
mov
and
pop
aas
and
subb
sub
test
mov
out
sbb
xchg
fildll
fidivrl
mov
fimull
xchg
mov
sahf
or
dec
sbb
add
adc
jnp
cmp
xchg
inc
es
das
pop
popf
in
mov
aaa
add
pop
leave
cmc
sbb
sahf
cmp
ds
outsl
pop
lds
jo
mov
loopne
nop
sti
loope
pop
lahf
mov
adc
outsb
scas
dec
xor
push
inc
insb
jge
adc
cli
adc
pushf
xchg
in
inc
ja
inc
movsl
test
pop
mov
jecxz
rcrb
cmpsl
adc
mov
aam
in
ss
lds
ja
les
xchg
sahf
xor
popa
jl
mov
notb
xor
cmp
es
jne
add
mov
sub
es
mov
std
outsb
push
aad
fwait
push
rcrb
enter
or
arpl
xchg
inc
aas
cmp
push
push
xchg
and
rorb
mov
aad
lds
sarl
aad
add
arpl
cltd
cmp
jno
xor
movsl
adc
sub
rcrl
jp
js
push
jp
mull
lods
mov
out
outsl
test
shl
outsb
xchg
stos
adc
mov
push
pop
ljmp
mov
mov
out
arpl
jb
or
mov
mov
dec
icebp
sbb
add
sub
std
popf
mov
and
jecxz
jno
cmpb
faddp
cwtl
sub
shrb
cmp
adc
sbb
push
aad
or
cmc
out
mov
lods
adc
add
dec
mov
lods
adc
dec
cli
int
shrl
insl
xchg
aas
push
pop
adc
imul
and
push
int
sub
xchg
pusha
inc
in
adc
push
sbb
dec
add
ja
std
jbe
jns
dec
outsb
jl
ja
jne
xchg
outsb
mov
mov
mov
mov
shlb
or
shlb
pop
inc
jne
and
aaa
imul
dec
push
or
imul
mov
cmp
ljmp
dec
mov
push
fmull
or
sub
fstp
sbb
mov
xchg
adc
stos
out
mov
mov
gs
lds
add
jecxz,pt
push
jle
push
mov
or
or
test
jne
ja
cli
loopne
sub
sbb
xchg
sbb
adc
call
xchg
insl
lock
jl
dec
mov
ret
cmpsb
out
xchg
push
aas
mov
push
push
add
pop
mov
or
pusha
in
test
pop
rep
mov
xchg
sbb
dec
leave
sub
dec
test
in
inc
push
fimuls
in
fstpt
sbb
sti
pop
jp
call
outsl
mov
into
pushf
stos
in
pusha
test
int3
and
jbe
mulb
cmp
mov
test
pop
enter
xchg
fists
adc
adc
imul
repnz
nop
or
inc
cmp
int
push
xchg
cmp
inc
sbb
fdivr
add
add
dec
mov
and
push
lock
fwait
xor
pop
shl
in
adc
fistl
aas
js
xor
or
jae
mov
sub
jecxz
and
movsb
inc
repnz
repz
shll
mov
sahf
aad
jecxz
js
ret
shl
mov
fwait
mov
mov
es
jg
jmp
sbb
test
dec
jle
xor
pop
sahf
fucomi
xchg
les
lcall
rolb
jo
das
cwtl
rcl
jp
and
dec
cwtl
lods
inc
stos
mov
pop
add
pop
dec
loopne
mov
inc
inc
cmpsb
mov
dec
shlb
xstore-rng
cmpsl
inc
adc
adc
test
cmpb
dec
xlat
mov
lea
cli
adc
adc
push
mov
rorl
xlat
add
mov
sub
subl
cmp
scas
lea
das
or
jmp
fmuls
sub
push
int3
xchg
xor
cmp
sub
fwait
sub
leave
js
pop
xor
and
shl
jae
push
out
or
gs
imul
popf
pop
jl
leave
pop
xchg
fwait
movsb
jbe
mov
dec
repz
rcrb
mov
sbb
jno
lea
jo
sti
movsl
shl
and
mov
push
jae
lahf
dec
adc
jle
sbb
sub
dec
test
ss
int
xor
frstor
dec
pop
adc
xchg
dec
adc
push
xor
les
les
out
lahf
sub
in
arpl
jae
mov
ljmp
stos
pop
int3
mov
xchg
or
fisubl
loop
aaa
add
push
fidivl
lcall
push
call
mov
mov
xchg
jmp
adc
or
cmp
lahf
push
test
out
jg
icebp
xor
lret
in
mov
int3
inc
sub
in
jo
cli
xor
js
pop
cmp
cmp
cmpsb
push
nop
jge
sub
jg
fmuls
popa
adc
andl
mov
inc
je
movsb
xor
or
mov
sbb
pop
cmc
jge
stos
in
movsl
lahf
inc
incb
mov
and
repz
addr16
pop
push
repz
jge
dec
inc
jns
jo
pop
inc
mov
lret
movsl
fsub
jle
dec
mov
out
int3
inc
gs
mov
jb
cmpsl
test
in
lods
repnz
pop
daa
fs
xor
out
sahf
and
cmpsb
pop
mov
or
out
pop
mov
ret
lret
in
lret
pop
arpl
mov
rcl
in
mov
nop
or
insl
mov
jbe
jge
push
push
xchg
mov
or
sti
into
rcll
int3
inc
cmpsl
mov
pop
je
jp
dec
sti
sub
faddl
pushl
in
iret
lock
xor
cmp
adc
imul
cmove
stos
or
clc
int3
pop
repz
xchg
push
pushf
les
fimull
cmp
je
xor
movsb
cwtl
test
pop
mov
sbb
sub
sahf
ja
mov
and
mov
sub
xor
scas
adc
imul
mov
mov
or
out
mov
popa
push
arpl
mov
cmc
jmp
movsl
in
insb
and
std
or
dec
leave
cmpsb
incl
add
push
sahf
inc
push
mov
pop
xchg
sub
popl
inc
mov
pop
adc
push
into
fisubl
sbb
test
xchg
mov
sbb
xchg
shrl
in
mov
fdivrp
mov
mov
mov
inc
aas
or
add
mov
cli
push
and
xchg
sbb
out
outsb
dec
jmp
cmp
push
faddp
movsb
xchg
mov
repz
jle
push
inc
xor
jne
lock
inc
pusha
add
push
in
ficomps
add
push
data16
sbb
je
iret
faddl
inc
aam
rcrl
pop
sbb
and
cmpsb
jns
xor
hlt
andl
shrl
jmp
ficoml
test
call
gs
pop
jecxz
pop
adc
push
sti
je
add
je
inc
jl
sub
add
and
stc
pusha
push
pop
fcomip
sahf
out
sub
movsl
mov
fbstp
mov
dec
mov
cmc
in
mov
inc
jmp
orl
fldcw
arpl
push
dec
mov
movsb
cmp
shrb
daa
or
ret
pop
pop
popf
add
incb
lods
insb
push
xchg
push
adc
mov
mov
adc
mov
pop
pop
pushl
or
mov
into
jne
mov
insl
push
cmp
cld
sub
outsl
xor
dec
mov
and
or
xchg
xchg
daa
inc
inc
int
jbe
loopne
add
insb
popa
cmc
mov
rol
cmp
lods
sub
lahf
sbb
lcall
push
add
pop
adc
and
pcmpgtd
jge
cli
xchg
out
les
sar
push
pushf
sub
xchg
dec
push
in
lods
lock
out
mov
jnp
aam
repnz
ljmp
sbb
cwtl
imul
loope
inc
dec
popa
xor
lea
mov
mov
arpl
and
imul
js
pop
lea
out
dec
push
lods
jnp
loopne
jno
jns
xchg
loope
xor
push
popa
outsb
or
add
push
in
inc
data16
rcll
jp
sbb
ret
jmp
std
pop
xchg
pop
mov
push
dec
bound
or
push
hlt
pop
pop
and
or
cmc
or
mov
stos
sbb
and
jnp
cwtl
lret
cmpsl
xlat
ss
leave
jmp
mov
mov
clc
leave
leave
jbe
inc
in
es
arpl
lock
mov
stc
fldlg2
sub
sub
xchg
adc
shlb
inc
sbb
dec
mov
or
ret
push
pop
movb
xor
cmc
sub
dec
fsubrs
add
ss
out
popf
cmpl
mov
stos
mov
lods
inc
push
push
in
scas
mov
fsubs
dec
adc
mov
mov
lret
mov
xchg
jnp
dec
insl
mov
push
mov
adc
ljmp
dec
or
adc
sbb
xor
or
and
xchg
cmpsb
imul
fsubs
xor
xor
cld
adc
loopne
or
mov
mov
sbb
add
jns
sarb
je
jbe
test
loopne
popa
stc
das
mov
push
or
pop
arpl
inc
insl
into
add
ret
pop
cmpsl
pop
insb
and
mov
sbb
je
dec
adc
pusha
xchg
mov
ja,pt
incb
enter
add
xor
sbb
cmp
rcll
jecxz
sahf
and
xchg
xchg
inc
xor
mov
movsb
ja
clc
push
in
aad
push
adc
xchg
jmp
mov
dec
mov
pop
mov
mov
and
add
nop
push
into
lcall
adc
xchg
jns
pop
jne
push
data16
sub
lret
sub
push
and
push
add
sbb
mov
ds
push
sbb
mov
xor
jg
push
dec
pop
mov
negl
dec
xchg
or
cs
mul
lret
mov
xchg
mov
push
adc
cld
adc
lret
push
adc
jnp
imul
cmp
addr16
mov
sbb
cmpsb
mov
ja
inc
mov
lcall
sbb
inc
adc
shll
mov
test
into
and
and
sub
sub
pop
mov
xchg
cmovns
test
cltd
mov
xchg
mov
stos
test
jnp
shrl
jae
movsb
push
jle
mov
daa
xor
cmp
xor
xlat
scas
sub
push
xchg
ljmp
imul
adc
jno
jle
inc
pushf
dec
insl
scas
sbb
pop
stos
jo
icebp
fildll
jbe
popa
outsb
add
and
in
mov
sub
fmuls
in
sub
mov
adc
mov
lods
les
lock
fwait
rolb
aam
ret
mov
fcomps
inc
mov
loop
xchg
jmp
jp
mulb
lret
lahf
arpl
loop
sub
push
xchg
cli
sbb
jg
lds
mov
mov
lds
inc
arpl
imul
jne
mov
mov
pusha
dec
pop
mov
mov
sbb
inc
xchg
in
fisttpll
adc
pop
pop
cmc
jl
add
xchg
cmc
push
sahf
and
sahf
stc
lcall
inc
pop
adc
aam
test
ret
call
test
ret
mov
mov
repz
dec
or
xchg
inc
fisubl
leave
mov
and
dec
mov
adc
fsubs
mov
lahf
test
dec
xor
sub
and
mov
mov
cwtl
sarl
xchg
ss
add
add
xchg
inc
dec
jne
or
gs
mov
xor
fimull
adc
stos
jo
mov
jge
mov
lea
mov
mov
fadds
cs
scas
and
pop
popf
add
mov
pop
and
aas
jno
loopne
fcmove
out
icebp
stc
movsl
inc
mov
insb
es
test
jne
push
in
jbe
insb
fwait
dec
jl
or
mull
pop
push
jnp
fisttpl
xchg
xchg
fiadds
xchg
or
dec
xor
inc
scas
and
sbb
push
test
daa
stos
das
das
rcrl
inc
out
push
mov
add
ss
loop
xor
ljmp
and
aaa
jp
fldcw
mov
jg
das
inc
test
dec
and
in
outsb
pop
pushf
adc
iret
jnp
ret
addr16
imulb
notb
stos
add
testb
jo
aad
cwtl
push
inc
push
pop
pop
loopne,pn
sbb
adc
inc
mov
push
mov
mov
mov
cmp
aas
mov
cmp
adcb
inc
test
aaa
shrb
cmp
pop
decb
popl
jmp
cltd
xchg
ds
jbe
mov
out
rcrl
pop
jo
lcall
cmc
scas
mov
pop
lcall
push
and
clc
sahf
push
aas
push
ja
scas
pop
enter
inc
push
xchg
js
sahf
xchg
mov
cmp
push
dec
sub
mov
and
js
das
cmpsb
imul
mov
imul
pop
pop
cs
jmp
sub
add
inc
and
jbe
cli
pop
and
fsubp
push
add
pop
lock
sbb
or
js
push
and
les
cltd
in
cli
xchg
mov
mov
lret
cmp
xchg
pop
cmp
sbb
loope
xchg
sub
loop,pn
iret
dec
loop
cmp
xlat
inc
cmc
push
test
sbb
adc
ret
repz
sbb
add
mov
test
mov
pop
mulb
add
addb
jg,pn
mov
lock
mov
movsl
mov
out
ret
dec
inc
insb
jl
incb
mov
in
and
cmp
add
mov
and
jl
sahf
aam
pop
fildl
test
pop
stos
fs
jmp
adc
push
nop
movsl
arpl
adc
push
cwtl
pop
rcl
sbb
ja
mov
xlat
cmp
push
sahf
popf
out
mov
insl
xchg
je
adc
jg
pop
clc
bound
jb
and
ret
ret
mov
push
inc
fstpl
test
aaa
iret
cmpsl
stos
cmp
mov
sub
shr
fldenv
popf
imul
jnp
bound
pop
mov
hlt
loopne
and
loop
sbb
testl
dec
jnp
std
enter
mov
adc
adc
call
loopne
iret
jnp
js
sub
xorb
push
js
sub
lock
cmpsb
xor
pop
pop
mov
test
lea
and
dec
insb
push
mov
fucom
jge
in
shr
mov
mov
inc
negb
aad
in
cmp
leave
sbb
lds
jl
imul
sbb
push
dec
or
dec
testl
mov
cmp
xor
push
or
cmp
arpl
imul
sti
adc
movaps
add
jbe
and
adc
lds
mov
jge
stc
sbb
cli
mov
movsb
sbbb
or
dec
jmp
xchg
dec
iret
mov
jnp
dec
pop
mov
fisttpll
inc
push
cmp
mov
imul
mov
cld
jl
or
mov
dec
iret
and
cmp
hlt
lea
pop
mov
add
sti
pushf
add
inc
push
test
out
cmp
lods
cmp
jbe
in
popf
or
and
outsb
lcall
jbe
pop
ljmp
mov
xchg
js
push
ret
movsl
xorl
ss
push
loop
jae
xchg
jb
or
cmc
mov
sub
dec
xchg
pop
nop
shl
pop
xchg
sbb
push
mov
or
jge
xor
mov
fs
jmp
xchg
scas
jb
jl
and
arpl
xor
sti
mov
jle
push
call
aaa
sahf
add
xchg
lahf
xchg
je
xchg
xor
sub
mov
push
jb
test
jnp
pop
movsb
es
mov
xor
cmp
jnp
sbb
xor
mov
mov
popf
dec
pop
mov
mov
sub
shll
sub
ret
fcoml
and
in
push
fucomip
xchg
add
lds
mov
ret
imulb
and
xor
dec
int
xor
mov
jecxz
pop
cmc
shll
loope
hlt
mov
lahf
mov
jge
outsl
mov
jge
cmp
loope
loopne
rcrl
cmpsb
fcmovnb
int3
push
ss
dec
movsb
mov
aaa
pop
xchg
iret
dec
push
popa
punpckhwd
inc
in
imul
jl
shll
push
test
lahf
notb
ret
push
es
jmp
bound
sbbb
inc
xor
loope
jg
call
shlb
push
pop
fisttps
dec
loope
jmp
lods
sbb
loop,pt
fldcw
bound
dec
push
lahf
cs
jle
aas
loope
xchg
push
gs
or
cmp
or
aam
enter
shll
xor
inc
in
mov
adc
jns
and
pop
jg
mov
inc
js,pn
xchg
push
loope
mov
clc
mov
add
into
inc
mov
insb
jo
bnd
movsl
stos
stc
dec
movsl
cmp
mov
fiaddl
or
fwait
jbe
pop
cmpsl
and
push
or
adc
sub
stos
cmpsb
add
add
pop
jns
and
xor
cmp
or
clc
mov
push
push
pushf
jo
mov
ds
repz
insl
and
mov
lret
and
mov
xor
xor
in
adc
xor
inc
sbb
jns
and
jnp
lahf
movsl
ljmp
setp
mov
xchg
push
mov
push
lock
es
inc
pop
xor
rcrl
psadbw
dec
mov
movsb
std
jne
jle
mov
inc
ss
dec
gs
xchg
sub
je
addl
std
xchg
add
push
cmp
and
inc
cmp
cli
ds
pop
adc
pop
movsb
jne
into
pop
rclb
dec
int
in
ret
mov
add
sbb
hlt
inc
dec
xchg
pop
test
scas
push
add
shl
repnz
push
or
loopne
inc
cmp
pop
pop
jmp
test
inc
jmp
cmpsb
mov
xor
call
pop
cs
cmp
inc
and
mov
jno
pop
loope
movsl
lret
fwait
or
pop
xchg
inc
sbb
inc
xchg
sti
push
outsl
in
stos
pop
jecxz
testl
test
pushf
mov
stos
dec
lods
cmp
sti
js
out
dec
adc
adc
mov
pop
ja
aam
mov
mov
dec
xchg
xor
mov
dec
rorl
inc
pop
push
mov
loop
ljmp
jns
add
into
push
push
mov
sub
roll
xor
into
ljmp
insl
int3
or
ret
shll
xor
loop
test
adc
bound
mov
movsb
rcrb
push
std
mov
jno
jnp
sbb
ret
sub
lcall
mov
or
inc
and
xor
mov
dec
lret
dec
push
adc
push
pushf
xor
fdivrs
xchg
sbb
jg
pusha
sbb
test
jg
cmp
push
fs
mov
in
jmp
shll
pop
adc
xchg
jge
roll
jae
pop
out
mov
movsl
icebp
aam
xchg
mov
lcall
xor
sbb
add
cmp
test
les
aad
push
xor
mulb
and
sbb
adc
lods
loopne
jbe
mov
cltd
add
stos
stc
jge
xor
test
push
leave
mov
jno
ret
jmp
pop
or
xchg
push
jge
and
mov
enter
push
xor
pop
divl
fsubrp
js
dec
sub
loopne
xlat
aaa
cmp
dec
jmp
or
and
or
jo
movsl
pushf
test
push
sub
pop
out
push
dec
imul
es
jnp
clc
arpl
lods
in
or
push
xor
mov
xchg
add
pop
push
inc
dec
fnstsw
push
jecxz
and
mov
rcrl
pop
mov
mov
mov
hlt
or
repz
push
loope
addb
push
in
add
aad
push
scas
outsb
sub
sub
mov
jb
lea
daa
in
cwtl
test
jge
jecxz
into
cmp
sub
nop
std
cmp
rorl
dec
das
push
sbb
icebp
jg,pt
sub
inc
int
add
mov
out
add
xchg
jbe
xchg
and
clc
push
or
pop
loopne
ret
xor
cmp
inc
add
xchg
sub
jecxz
stos
movsb
sub
stos
sbb
mov
add
je
inc
fisubrl
lods
js
test
movsl
out
xchg
push
push
leave
loope
pop
cmpl
dec
in
jae
fldenv
daa
cmp
adc
dec
pop
clc
push
lret
imul
sub
adc
inc
aad
in
loop
mov
ss
lahf
sbb
mov
inc
lods
jo
xchg
jne
cmc
mov
pop
notl
push
pop
xchg
test
inc
xchg
push
das
fadds
cwtl
aad
push
sbb
in
ljmp
push
xchg
leave
jb
xchg
jae
cmp
and
xchg
adc
push
or
pushf
pop
sub
aam
hlt
scas
inc
sub
ljmp
mov
lods
enter
jmp
sub
in
and
loopne
das
imul
mov
push
aaa
out
fisubs
enter
sbb
sub
or
ja
inc
mov
loop
add
xor
rorb
mov
test
cmp
sbb
out
aaa
hlt
cmp
xlat
insb
mov
push
rorl
imul
pop
dec
aam
mov
aaa
mov
out
lods
inc
push
int
jmp
popf
cs
xor
fidivrl
xchg
mov
push
push
sti
stc
lock
insl
cmp
sbb
test
lret
add
sti
imul
dec
inc
rcll
adc
push
stos
sub
push
dec
cmp
push
mov
lea
dec
push
inc
andb
in
arpl
mov
pushf
xchg
out
xchg
sbb
sub
jl
add
push
and
sub
sbb
dec
out
leave
clc
stos
imulb
mov
dec
lea
inc
aam
and
inc
jl
add
inc
pushl
pop
jnp
ljmp
xchg
jg
xor
adc
push
push
xchg
adc
lods
mov
stos
dec
or
out
adc
jg
jne
dec
adc
jbe
lds
add
data16
shr
adc
push
lea
aad
incb
cwtl
push
clc
or
pushl
ss
push
xor
xor
out
xchg
shlb
push
push
pusha
inc
mov
xor
push
xchg
cmpb
mov
mov
aaa
jno
mov
ja
shll
cmp
shlb
mov
pop
and
add
loopne
mov
pusha
fisubrs
add
fmulp
iret
jno
and
call
inc
pop
dec
ss
add
ret
sub
movsl
ret
shrb
xchg
clc
out
jg
or
stos
mov
mov
movsb
lods
push
add
mov
sub
jge
pop
test
jmp
ret
outsl
mov
push
push
xchg
xor
push
or
outsl
dec
aad
mov
insb
fsubrs
lcall
xor
jecxz
jno
aam
pop
inc
mov
lret
inc
shrl
popa
in
repnz
jnp
mov
pop
or
inc
and
xchg
dec
xor
mov
push
mov
pop
jae
and
testb
push
mov
ror
cltd
fildll
sub
std
xlat
cmpsl
sbb
dec
mov
inc
jb
jnp
pop
jecxz
loope
iret
std
gs
rcrb
mov
mov
addr16
out
imul
into
fcom
movsb
cmp
mov
mov
add
fcoms
insb
pop
lret
les
cmc
mov
pop
jno
ss
and
enter
adc
xlat
mov
fwait
out
inc
adc
repnz
inc
into
cld
jmp
fs
lcall
cmpsl
ficomps
pop
stos
jnp
testb
in
fisubrs
inc
pop
or
jo
cli
add
push
xor
push
popa
and
fs
fcmovb
in
add
mov
mov
jle
aam
jne
jp
aam
fwait
inc
pop
xor
out
inc
int3
lock
sbb
rcll
jb
lods
movb
sbb
mov
ds
adc
loop
movsb
push
push
lcall
pop
or
cmc
fwait
jl
fbld
hlt
mov
mov
fildll
mov
push
shrl
sub
sbb
cltd
fnsave
mov
stos
sbb
stos
stos
out
es
mov
xor
imul
dec
and
mov
movb
leave
dec
jmp
sbb
movsl
lret
shr
cmp
xor
adc
popf
sbb
add
sbb
dec
jmp
mov
mov
xor
inc
cmp
loopne
out
ds
out
fsubrp
xor
lret
xchg
cmp
daa
jg
test
dec
gs
pop
push
repnz
lea
data16
and
icebp
les
sub
lods
pusha
cmpsb
popa
pop
iret
clc
sbb
xchg
push
jg
jo
xor
sub
cmp
mov
ljmp
mov
mov
leave
lds
adc
mov
adc
pop
sbbl
and
xchg
cmp
inc
push
lcall
inc
mov
dec
dec
or
cmp
jnp
xor
gs
divb
shll
cmp
in
push
fucomp
cmpsb
sub
stos
mov
xor
mov
hlt
insl
push
add
mov
outsl
jp
cmp
sbb
pushf
ds
out
ret
addr16
fsubs
ja
fs
push
sub
cmp
imul
pop
mov
repz
ja
inc
scas
mov
mov
adc
notb
pop
xor
inc
dec
movsb
sub
add
insl
int3
lret
jne
jnp
sbb
add
and
sbb
sbb
jo
aad
push
mov
or
jno
jp
add
pop
pop
repnz
sub
loopne
jle
inc
push
mov
pushf
popf
ret
mov
hlt
lea
cmp
jae
repnz
int3
cmp
data16
imul
xor
cmpsb
ret
inc
rcrl
mov
movsl
cld
pop
out
dec
adc
xor
sbb
sub
std
or
call
xor
or
xor
inc
test
sbb
es
or
rcrb
cld
xchg
es
mov
or
mov
xchg
inc
adc
jmp
jo
jl
pop
mov
adc
lods
fstpl
sub
daa
lods
out
rclb
sub
mov
adc
adc
pop
rolb
cltd
lds
xor
pop
hlt
adc
or
imul
dec
out
inc
dec
cmp
inc
fisubrl
shlb
fstpt
adc
xlat
and
ljmp
repz
mov
and
mov
gs
sar
xor
movsb
sbb
mov
adc
dec
cmp
loopne
dec
inc
dec
push
xchg
cmc
mov
pop
mov
xchg
shll
and
shll
jo
fstp
int
pop
and
cwtl
repnz
jl
fstl
in
stos
push
mov
push
js
out
call
addr16
outsb
xor
mov
add
cwtl
sbb
test
daa
mov
ficomps
dec
mov
cmp
push
cmp
mov
dec
scas
cmp
dec
xlat
pop
inc
pop
test
dec
jno
das
sbb
cmc
push
cmpsl
cmp
ret
lods
mov
loop
dec
out
mov
push
xor
ds
shlb
jl
aam
inc
pop
mov
jb
popa
xor
push
mov
dec
xchg
addr16
inc
ror
inc
xchg
mov
xor
cld
mov
push
lods
in
pusha
sar
sub
call
imul
xchg
or
jg
stos
cltd
fidivs
std
jmp
imul
dec
mov
push
popa
ja
clc
xor
xor
cmp
insl
jmp
aam
jge
mov
and
shll
mov
popf
or
jg
int
subl
test
xchg
test
nop
mov
movsb
insl
lods
xchg
pop
in
mov
scas
popf
cwtl
mov
sub
enter
scas
rorb
pop
mov
push
lods
imul
mov
das
mov
push
rorl
popf
inc
js
xchg
pop
pop
repz
add
shlb
pop
pop
or
jae
xorl
xchg
sub
pop
jl
cmovl
gs
xchg
pop
mov
dec
dec
popa
das
jbe
mov
aad
adc
test
pop
or
pop
popf
aad
add
sub
ds
loop
lea
mov
sub
or
xor
out
mov
jo
add
das
clc
lock
xchg
mov
push
addr16
pop
outsb
stos
push
cmp
ljmp
mov
pop
icebp
repnz
cmp
inc
and
push
out
outsb
xchg
pusha
movsl
mov
loope
cmpsl
mov
repnz
int
pop
rcrl
leave
push
lea
xchg
inc
lcall
pop
mov
pop
shrb
mov
push
xchg
flds
mov
in
add
xor
push
lret
add
jae
xor
enter
subb
xchg
push
cwtl
cmp
fildl
jl
pop
fndisi(8087
xchg
cmpsb
je
dec
in
in
mov
enter
cwtl
fldt
rclb
mov
pop
test
push
out
or
adc
fcoms
shrl
pause
imul
pop
sbb
jae,pn
leave
inc
add
cmp
or
fsub
sbb
push
jno
loope
das
or
jle
int3
nop
jl
mov
jge
in
in
jmp
xor
cli
mov
stc
ret
leave
mov
out
inc
call
mov
movsb
jo
popa
fsubrp
in
aas
push
lea
in
mov
rcrl
mov
lcall
lret
sbb
shll
stos
or
lock
sbb
xchg
xor
push
sub
mov
pop
enter
and
pop
or
xchg
mov
push
outsl
jne
mov
mov
sbb
mov
inc
xchg
sub
pop
sub
js
sub
dec
clc
sub
outsl
push
mov
jg
iret
stos
and
in
mov
cmp
into
rclb
call
push
incl
or
adc
jns
shrl
out
sub
inc
jnp
rsqrtps
xchg
cmc
insb
cmc
sub
ficompl
sbb
jle
sahf
xor
and
icebp
scas
sub
inc
cmc
mov
mov
sub
or
movsl
push
push
int3
lret
rclb
lret
mov
or
and
fcmovnb
int
call
add
cmc
xlat
ret
in
inc
cmc
fcomps
andb
mov
cmp
dec
push
fsubrl
imul
cmp
jle
mov
scas
jae
mov
stc
lcall
shll
cmp
sbb
shll
jns
fsubrl
std
mov
inc
pop
jg
mov
jae
repnz
movsb
mulb
mov
out
mov
dec
xchg
mov
mov
fnstenv
jmp
std
test
arpl
and
xlat
dec
xchg
stos
xchg
mov
cmpsb
lcall
sbb
jno
pusha
into
int3
ds
mov
jp
mov
dec
bound
stc
jp
or
lds
add
dec
inc
fsubrl
adc
loopew
add
and
rcrl
mov
push
xlat
loopne
adcb
xchg
push
mov
enter
jns
cld
cmp
push
jo
out
ja
fistpll
mov
in
test
or
js
jmp
loop
xor
out
jmp
adc
in
bound
dec
jnp
jnp
adc
or
sub
les
mov
xor
insb
xorb
xor
mov
aas
movsl
xchg
sub
repz
sub
inc
cmpsl
mov
add
and
insb
repnz
xor
arpl
lds
std
jns
xor
popf
fisubs
mov
lock
or
sbb
jle
in
mov
idivb
jae
mov
repnz
mov
subb
push
stos
jle
and
nop
int
mov
pop
mov
je
cmc
dec
in
inc
adc
loope
adc
movsl
mov
mov
or
jne
dec
adc
cmpsb
push
pusha
or
adc
lret
mov
pop
add
mov
xchg
add
sbb
in
popl
jnp
jge
sub
pop
inc
sub
mov
jmp
das
les
leave
and
mov
or
cmpsb
push
into
and
xchg
xor
popf
xor
cmp
pop
pusha
popa
addl
outsb
out
push
into
xorl
lahf
sbbl
jae
push
fsub
ror
xor
inc
aas
aaa
decl
rcll
sub
mov
gs
movsl
in
pop
xchg
outsb
mov
or
fadd
test
mov
lea
or
push
mov
fistpl
nop
movsb
outsb
cmp
das
pop
xor
adc
or
push
test
mov
add
add
cld
je
iret
fwait
pop
aad
or
mov
in
cmp
ret
sarl
sbb
mov
cmp
roll
xor
push
lods
lods
jmp
outsl
jg
sbb
sub
jp
pop
cmp
ret
sbb
pop
cmp
daa
mov
jno
or
push
and
inc
mov
inc
pop
mov
nop
mov
mov
jne
jle
jge
leave
mov
mov
mov
push
mov
xchg
jmp
jmp
repz
int
dec
sahf
test
out
out
cs
mov
loope
test
jno
mov
mov
pop
push
in
jg
outsb
add
adc
jae
dec
inc
lret
dec
insl
mull
cs
std
aas
sbb
int3
mov
push
stc
aad
lods
and
dec
lahf
gs
or
lcall
inc
sub
pop
pop
lahf
js
out
lds
adc
xlat
das
movsb
mov
ds
adc
mov
inc
jae
test
mov
not
fiaddl
dec
mov
cmp
sub
scas
sar
dec
sub
in
jno
popfw
dec
jmp
imull
adc
das
push
stc
sarl
lods
iret
sbb
xchg
xchg
pop
aad
mov
and
insb
lcall
and
fildll
cmpsl
xorl
jmp
mov
insl
ret
push
mov
sbbl
les
test
lcall
outsl
pop
fcomip
mov
shrb
jbe
or
pusha
jmp
aam
pusha
jmp
insl
call
adcb
pop
push
and
pop
sti
mov
out
jns
adcb
and
lds
testb
fldcw
divps
js
push
mov
outsb
mov
inc
push
enter
cmc
addr16
lods
mov
scas
stos
add
aam
stc
je
jb
cltd
mov
aam
and
push
insl
sub
loop
cmp
ret
xchg
xor
aaa
xchg
sub
ret
push
mov
jg
mov
fisubs
roll
jbe
aad
imul
stos
jp
aam
call
cmp
xor
inc
adc
imul
shr
int
in
cwtl
push
or
dec
pop
les
repz
xor
add
jo
mov
jb
xchg
jle
ds
leave
pusha
push
xor
mov
mov
mov
xchg
lahf
cwtl
dec
daa
xor
fstpt
jae
inc
inc
jb
cli
dec
sbb
add
ffree
mov
cmp
mov
lahf
push
popf
mov
jmp
call
mov
roll
shrb
pop
add
inc
cwtl
inc
jb
dec
lret
pop
add
add
pop
leave
dec
cmp
xchg
inc
or
jno
negl
addr16
xchg
lret
push
mov
out
xor
xchg
test
xor
mov
or
leave
xchg
or
xchg
fbld
test
ret
cmp
fiadds
cmpsb
inc
jmp
xchg
pop
push
int3
inc
in
cmp
xchg
adc
lcall
ficoms
stos
scas
in
push
les
pop
and
imul
jmp
out
ja
shrl
sub
sub
mov
dec
fisubs
xor
sbb
push
cld
fnstsw
jl
push
cmp
and
out
dec
mov
push
testb
push
fwait
push
sub
pushf
jo
iret
inc
cmp
insb
ficoml
adcl
pop
lock
imul
mov
pop
mov
in
icebp
aam
mov
popf
fmuls
cld
neg
add
roll
xor
insl
daa
out
int
pusha
mov
mov
fcmovne
add
incl
cmp
jb
cmpsb
xchg
xchg
cld
cli
and
cmp
pushf
push
push
iret
js
and
or
nop
cmp
mov
pop
rorb
inc
add
sbbb
dec
mov
nop
add
loope
fstpt
loopne
scas
mov
std
mov
or
jle
mov
sti
jmp
ds
in
insb
subl
fcomi
mov
mov
inc
mov
mov
push
pop
push
repnz
repnz
jno
sbb
hlt
pop
xchg
aad
stc
xchg
sbb
jo
loop
cwtl
or
insl
cmp
jbe
mov
push
mov
mov
push
cwtl
stc
xlat
js
mov
jo
fcoml
orb
cs
mull
add
xchg
dec
xor
popf
push
xor
jo
push
scas
inc
ficoml
movsb
and
cmp
mov
fbstp
xchg
shl
cmp
rorl
jl
sbb
xchg
loop
or
lcall
test
and
xor
sbb
and
push
cmpsb
aaa
jle
or
mov
dec
outsl
cltd
or
add
jg
iret
mov
aam
aad
fimull
lret
sbb
dec
jae
pop
ret
fmul
sti
and
nop
es
jno
and
jl
pop
jg
mov
cmp
dec
lret
pusha
xchg
push
mov
leave
gs
mov
fs
sub
mov
aad
sbb
cmpsl
mov
adc
nop
mov
mov
mov
push
addr16
pop
out
aam
lahf
leave
mov
cs
add
clc
jmp
in
pop
cmpsb
imul
adc
das
mov
xchg
fwait
shll
or
call
and
and
add
movsb
and
pop
shll
lret
xlat
jne
jmp
adc
jmp
mov
inc
mov
mov
pop
or
sub
lods
xor
cmp
fisttps
push
inc
call
stos
insl
pop
popa
mov
ret
cmc
pop
mov
arpl
fdivl
mov
jg
rorb
sub
mov
test
and
gs
mov
mov
and
cwtl
push
push
les
cmpsl
mov
mov
add
loopne
in
je
mov
push
jmp
aam
dec
sbb
add
loope
inc
mov
and
pop
xlat
jle
jmp
push
cmp
and
sbb
fistpll
and
adc
jns
test
fcoml
mov
or
jecxz
push
jb
and
hlt
es
enter
xor
jno
jb
mov
pushf
ret
insb
sarl
or
rolb
cs
jbe
adcl
push
jb
inc
rolb
pop
dec
and
jns
cmp
test
dec
mov
pop
fxch
pop
jl
pushf
enter
add
dec
ret
pop
jp
jns
stos
xor
and
test
aaa
sar
sub
enter
xchg
cltd
stos
bound
sbb
lcall
sub
out
sbb
or
mov
fiaddl
cmp
adc
aam
or
mull
lods
mov
mov
lds
fidivrs
inc
test
and
mov
pop
dec
ja
je
sub
fs
lcall
call
inc
push
cmp
sbb
adc
jbe
pop
repz
jge
xchg
test
jge
dec
fwait
je
inc
ret
mov
or
cmpb
fsts
pop
and
pop
dec
and
sbb
sub
outsb
das
pop
mov
cwtl
xchg
cs
loope
xchg
ss
mov
inc
jbe,pn
jo
jp
lcall
pusha
mov
sbb
mov
mov
or
icebp
pop
fsubs
xor
sub
aas
inc
mov
loop
sbb
add
cwtl
xor
adc
pop
xchg
jo
and
int3
hlt
fwait
inc
jbe
jno
jmp
pop
filds
sub
inc
rcrl
sti
push
jbe
es
sbb
or
adc
cmp
lods
sarb
pushf
sub
jae
mull
mov
cli
ret
and
iret
je
mov
cmc
ds
add
pop
arpl
dec
rclb
fwait
or
imul
and
xchg
xchg
insb
xor
cld
jmp
nop
mov
and
and
push
cmpsb
inc
mov
mov
imul
xchg
out
dec
push
test
jmp
in
pop
fisttps
fnstenv
cmp
test
xor
mov
popa
xchg
cmc
mov
pop
sbb
lcall
add
and
ret
cmp
dec
repnz
and
fwait
jnp
xor
subb
cwtl
xor
add
xchg
and
insb
xchg
lret
mov
sbb
adc
or
sub
mov
sti
repnz
ret
xor
shrb
adc
clc
or
arpl
inc
cmc
rclb
cmp
fstpl
insl
dec
fsubrs
push
inc
scas
orb
cmpsl
lret
adc
jns
lret
dec
into
add
dec
daa
mov
loopne
stos
data16
aam
adc
add
mov
fldenv
shll
xchg
and
outsl
notb
xor
mov
out
push
mov
xchg
ja
pop
ret
jo
mov
cmp
scas
out
inc
in
or
into
test
aad
in
gs
icebp
ror
push
ret
cmpsl
fwait
sub
les
dec
add
jl
xchg
xchg
shll
outsl
inc
xor
cwtl
cmp
divl
sarb
test
sub
sbb
stc
loopne
out
aam
and
push
cmpsb
pop
lcall
mov
test
mov
out
cld
pusha
mov
xchg
push
ljmp
mov
shrb
int
test
pop
repnz
jl
sub
and
jnp
xchg
sub
jb
aad
jmp
nop
imul
sbb
sbb
out
push
sbb
adc
stos
in
inc
or
in
aam
pop
sbb
sbb
sub
and
add
repz
arpl
xor
push
push
daa
cmp
push
loopne
mov
fxch
popf
dec
mov
xor
out
jmp
lret
add
xor
ljmp
sbb
or
cli
clc
xor
ljmp
mov
in
sti
mov
sbb
pop
lahf
ret
ja
and
fwait
mov
cmc
fistl
icebp
dec
lcall
mov
fstl
or
jl
imul
in
outsl
mov
mov
jg
xchg
mov
or
sbb
mov
inc
nop
rorl
xchg
pusha
push
movsl
clc
int
jno
fadd
outsb
cmp
push
lock
jae
lods
cmp
fldenv
nop
mov
dec
bound
clc
xorb
jns
subl
add
pandn
sbbl
js
pop
bound
mov
int3
fwait
out
lds
cwtl
lock
bound
ljmp
movsb
imul
insl
std
dec
push
sub
jmp
push
sub
xchg
mov
cmpsl
clc
adc
dec
inc
cmc
pop
push
mov
popf
jne
repnz
nop
fsts
dec
faddl
movsl
xchg
add
dec
mov
cwtl
mov
pop
cmp
dec
lahf
mov
mov
mov
dec
icebp
mov
inc
sbb
ljmp
xchg
mov
in
inc
fldt
xor
push
jmp
cli
jo
test
lret
mov
sbb
jb
sub
and
in
dec
xchg
dec
out
sbb
mov
ret
inc
cmp
sub
repnz
push
arpl
int3
les
add
xor
and
sub
js
sub
fiaddl
mov
mov
mov
adc
add
addr16
rcr
andl
cmpsl
pop
jecxz
cltd
push
outsl
call
mov
sbb
lahf
add
pop
mov
int
lods
mov
xor
adc
inc
push
out
popf
sub
xchg
push
lahf
mov
push
or
sbb
call
push
xlat
cmpsl
rolb
popa
push
xchg
fiaddl
mov
push
cmp
add
lock
mov
xor
sbb
jle
aad
es
es
mov
mov
or
test
fcoml
lds
pop
repnz
jno
sarl
mov
jae
pop
addr16
inc
nop
into
fstpl
repz
lret
sub
mov
inc
pop
stc
mov
arpl
popf
sub
ret
movsb
enter
into
stos
sub
push
xor
cmpsl
mov
std
ficompl
jecxz
aaa
repz
or
das
xor
cld
loope
push
mov
add
ffree
add
xchg
ds
push
jo
loope
lretw
inc
inc
clc
xchg
jmp
pop
pop
ret
cmp
xchg
shr
pop
das
mov
dec
ret
mov
pop
xlat
push
repnz
xchg
fisttpl
jmp
cmpsl
ljmp
xchg
sub
push
into
lcall
test
movsb
test
fildll
sti
adc
pop
popf
insb
call
mov
mov
mov
negl
xor
push
jno
cmpsl
mov
mov
incb
xor
push
adc
pop
mov
and
arpl
lods
nop
xchg
sti
jno
fisubl
insl
xchg
xchg
mov
shll
mov
or
push
mov
cmp
adc
int
dec
add
xchg
jle
imul
pop
dec
mov
flds
pusha
push
hlt
in
out
xor
cmp
movsb
out
lods
int3
or
out
xchg
imul
arpl
mov
loope
and
test
scas
cli
jg
push
push
mov
and
call
sarb
add
lret
nop
nop
cmpsl
sub
jmp
cmp
dec
pop
add
mov
js
in
jns
inc
sbb
addr16
dec
adc
ja
and
fs
and
pop
nop
xor
mov
sub
pop
mov
and
pop
inc
jo
cmpsl
xchg
imul
int3
ljmp
les
mov
repz
repz
leave
xlat
rcrb
mov
imul
test
pop
rcrb
mov
dec
js
mov
sti
sbb
push
dec
leave
les
fs
cmc
adc
push
add
sarl
cli
xchg
andl
jmp
jae
or
xchg
mov
push
or
repz
xor
shlb
rorb
outsl
jl
xlat
dec
xchg
ja
push
leave
inc
pop
aas
iret
ficompl
mov
ljmp
jo
cmp
inc
add
add
imul
dec
add
cmpb
and
xchg
cmp
jb
stc
jle
mov
xor
cmp
inc
outsl
popf
ja
sbb
xlat
cmc
insl
jp
outsb
cmp
test
jbe
stos
pop
push
xor
stc
xor
pusha
fiaddl
aad
sbb
fisubs
sbb
push
cltd
rcll
cs
fidivs
mov
icebp
sbb
lret
inc
leave
cmp
pop
stos
js
movsl
fldt
add
aad
lds
cmp
jns
mov
jle
or
pop
addr16
sub
rcr
inc
pop
lahf
lret
jb,pt
dec
insb
or
jecxz
jp
lret
int
and
xor
lods
insb
out
or
popf
mov
ja
clc
mov
in
add
fdivs
and
mov
sub
leave
xlat
push
push
jp
jl
xchg
ss
data16
jge
fidivs
icebp
cs
in
add
mov
iret
mov
xor
jnp
push
test
adc
in
cli
mov
add
xchg
ret
in
mov
nop
lret
dec
or
inc
mov
dec
add
and
mov
cmpsb
xchg
mov
adc
sub
adc
push
testl
bound
outsl
xchg
aad
add
adc
xchg
hlt
xchg
nop
cmpb
push
fsubl
mov
pop
xor
inc
fnstcw
jl
in
repz
jae
jbe
nop
pop
outsb
inc
movb
xchg
adc
sub
mov
js
cmp
add
dec
pop
push
out
dec
jbe
mov
ja
jae
mov
stc
jmp
jne
int3
call
inc
lds
cmp
adc
jns
mov
adcl
push
cmp
mov
cmp
lret
xchg
and
push
xchg
add
dec
sbb
add
shl
add
jl
test
fbld
bound
fcmovu
mov
pop
das
in
mov
sub
sahf
sub
nop
xor
andb
outsb
cmp
in
subb
lahf
ljmp
dec
cli
lods
add
push
ror
sbb
pop
sahf
aaa
jecxz
pop
pusha
xchg
inc
cmp
pop
ja
and
pop
stc
push
inc
xchg
cltd
sub
push
nop
aaa
mov
dec
jnp
jecxz
sti
bound
je
xchg
frstor
mov
aas
movsl
mov
mov
jbe
mov
jnp
aad
pusha
hlt
jnp
test
movsl
pushf
push
test
jp
xchg
inc
iret
cmp
push
pop
xchg
cmc
jp
test
xchg
test
add
aad
ret
mov
mov
mov
loope
mov
push
jmp
frstor
adc
stos
inc
std
test
loop
pop
hlt
push
xchg
fdivs
mov
push
mov
inc
lods
negl
mov
push
inc
popa
int3
out
sarb
mov
lret
jecxz
repz
les
imul
and
dec
and
aas
xchg
sub
add
xchg
hlt
out
and
jge
xor
aad
inc
scas
dec
and
pop
sub
aad
mov
aas
cmp
psadbw
mov
mov
xor
ds
and
xor
xchg
mov
imul
test
push
push
mov
imul
or
mov
push
test
mov
sbb
in
sub
pop
out
notl
cmp
orb
jne
mov
cmp
push
repnz
mov
mov
pop
test
cltd
stc
test
fwait
sbb
rorl
inc
dec
rolb
test
icebp
leave
inc
mov
test
sbb
add
add
jne
jecxz
xor
cli
popa
int
int
int
xchg
push
inc
lcall
out
add
mov
pop
and
sub
addb
mov
test
or
xor
mov
inc
cmp
cld
dec
in
inc
adc
push
mov
sub
sbb
mov
mov
inc
fmuls
cmpsl
and
movsl
and
sbb
xor
and
dec
outsl
lret
movsb
xchg
ljmp
and
pushf
dec
pop
addr16
je
daa
int3
lds
mov
or
cwtl
ljmp
mov
mov
loope
dec
mov
inc
in
push
fisubl
or
mov
jnp
shll
fnsave
xor
inc
add
pop
and
mov
fnstenv
aam
inc
xchg
stc
pop
insb
jnp
dec
dec
dec
inc
lahf
adc
loope
fnstcw
jg
scas
dec
inc
cmpb
mov
adc
aad
xchg
orb
and
stc
lahf
mov
mov
pop
les
push
mov
and
test
repz
icebp
mov
sbb
push
pop
mov
or
mov
jne
and
loop
and
dec
dec
bound
xchg
add
or
or
jo
add
cmpsl
xor
fwait
repz
das
sbb
add
in
push
mov
jo
adc
cmp
pop
mov
jmp
jno
sarl
xchg
rclb
rcrl
cmc
in
xchg
adc
pushf
and
aaa
shlb
in
mov
pop
inc
or
jmp
and
arpl
icebp
mov
push
push
mov
inc
dec
sbb
into
or
out
aad
jne
xor
test
add
inc
cld
lahf
out
out
cmc
movsb
sbb
test
jl
or
cmp
sti
jp
xor
inc
pop
inc
in
insb
aas
dec
mov
shrl
and
sbb
add
icebp
dec
insl
xlat
push
jge
fsubrs
mov
fistpll
inc
fs
leave
loope
and
fiaddl
iret
adc
xor
rcrb
not
mov
sbb
enter
jo
inc
xchg
insl
lret
out
jns
cltd
mov
cmp
jne
xchg
jae
movsb
inc
cmpsl
xor
mov
out
or
and
add
and
push
rol
cmpsl
jle
jg
shll
ljmp
ret
jb
push
push
test
mov
xor
mov
sarl
ja
test
cmp
loop
sub
cmpsl
psubsb
loopne
and
push
mov
cmp
ljmp
addr16
shr
in
mov
mov
stos
add
in
jae
pop
adc
loop
nop
lds
mov
test
xor
sbb
xor
stc
xor
dec
jmp
push
daa
aas
and
fwait
sbb
or
or
fistpll
in
call
pop
push
jae
arpl
push
and
imul
negb
test
mov
scas
addr16
mov
xor
dec
or
inc
jle
jmp
pop
xlat
fs
aas
sbb
pop
pop
ljmp
add
push
scas
dec
mov
adc
push
adcl
mov
inc
punpcklbw
jb
leave
mov
or
imul
jbe
sbb
and
mov
insb
sub
shrl
in
jno
xor
test
or
inc
cwtl
pop
lods
pop
jbe
pop
fcoml
dec
fldl
leave
pop
aam
jo
pop
mov
cmp
pop
pop
fimuls
jl
loopne
loope
xchg
mov
adc
imul
cmp
cmp
pop
loop
and
inc
lret
gs
jns
psrld
out
mov
fs
jns
mov
cmp
mov
jae
xchg
movsb
iret
and
inc
stos
mov
ja
cmp
dec
sti
les
stc
add
pushf
test
jo
jecxz
mov
cs
dec
test
cmpsb
cmpsl
dec
or
jmp
pop
es
pop
jnp
inc
in
pop
mov
hlt
outsb
cmp
negl
in
lret
loopne
fistps
or
inc
mov
inc
mov
in
into
push
or
mov
je
add
inc
jb
rclb
inc
xchg
jp
orl
test
clc
faddp
test
xor
outsb
jecxz
sahf
xor
mov
mov
lahf
ljmp
lret
push
jl
cmp
or
xor
ja
ja
and
mov
fsubrp
pushf
mulb
sbb
dec
insb
out
mov
sbb
jae
jnp
bound
xchg
je
mov
movsl
in
add
xor
inc
and
mov
pop
or
shrl
lods
sbb
mov
movsb
pusha
or
mov
incl
mov
inc
test
sub
push
mov
push
mov
push
cmp
jmp
dec
call
xlat
leave
mov
frstor
pop
mov
sub
and
xchg
int3
lret
sub
cmpb
add
xlat
insb
stos
jl
jne
or
mov
cmpsl
mov
adc
jg
pop
dec
push
dec
jns
cmp
in
xlat
mov
cld
cmp
scas
fildll
xor
int
sub
and
jno
cmc
inc
mov
xchg
adc
pusha
aas
push
bound
mov
or
sub
fs
aad
sahf
sbb
or
pop
pop
fildll
movsb
add
dec
dec
xchg
nop
filds
aaa
mov
clc
pop
jb
scas
pop
gs
mov
jns
fwait
and
leave
repnz
in
lahf
sub
sbb
popa
xchg
icebp
pop
mov
movb
mov
adc
pop
fisubrl
add
pop
jecxz
push
and
xchg
add
in
pop
mov
nop
arpl
in
add
repnz
lret
push
fbld
jns
out
sub
add
cmc
data16
sub
mov
mov
xor
mov
push
and
loopne
push
xlat
cs
in
inc
loope
sti
push
pop
call
mov
mov
adc
mov
jbe
jg
hlt
cmp
and
dec
add
test
push
mov
mov
pop
push
sti
mov
into
fs
cltd
cli
leave
mov
or
mov
push
add
stos
repz
addl
pop
movsb
mov
jae
or
push
xchg
jp
fldcw
ret
cmp
test
test
pop
and
push
jno
adc
jl
jl
popa
adc
xor
pop
adc
jae
icebp
int3
push
push
insl
pop
adc
sti
paddusw
out
iret
std
xchg
jae
repz
push
popa
mov
cmpsb
daa
mov
outsb
pushf
cld
movsl
xchg
lret
aaa
sub
push
lcall
pop
xchg
cmp
pop
inc
sub
mov
push
mov
lahf
inc
jecxz
testb
sub
out
test
std
inc
out
mov
imul
and
in
fs
xor
pop
xor
std
rorl
sub
pop
mov
inc
enter
add
aas
mov
sbb
cli
xchg
jns
into
cmp
adc
shll
cmp
jg
rcll
adcb
mov
xchg
call
jecxz
dec
inc
rcrl
mov
sti
jge
shrw
cmc
rorb
sahf
sbb
pusha
inc
js
add
incl
call
mov
or
arpl
mov
pop
pop
lret
mov
pusha
loope
scas
ljmp
add
jmp
sbb
mov
daa
add
pusha
sbb
pusha
mov
mov
jne
imul
sub
es
orb
push
sbb
sub
clc
xlat
lcall
sub
int3
test
not
out
jns
pop
lea
xor
xlat
push
testb
xchg
fstpl
je
and
imul
ret
aad
and
into
pop
mov
add
cmpsl
insl
out
repnz
pushf
movsl
xchg
xchg
loopne
ss
pop
jp
xor
adc
mov
push
gs
sub
int
dec
addr16
lods
test
mov
dec
aad
inc
mov
xchg
xor
test
cmp
xchg
inc
jp
dec
sbb
scas
sbb
lcall
nop
inc
add
les
ror
push
js
sbb
inc
xchg
jbe
mov
in
and
inc
imul
cmpb
inc
push
cmc
rolb
adc
add
cmp
pop
sbb
jnp
rorl
psubusb
rcrl
or
fld
pushf
pushf
inc
add
xlat
stos
push
push
mov
add
xor
or
in
popa
sub
lds
xchg
in
adc
scas
jb
inc
push
mov
or
daa
arpl
fildll
mov
fcomps
cmc
sub
rcl
out
lcall
pushf
jmp
je
jns
push
stc
in
popa
aaa
nop
iret
movsb
mov
inc
xor
out
repnz
int3
and
test
dec
mov
sarb
cmp
sbb
pop
dec
shrl
add
push
lods
and
cmp
fimull
out
data16
test
and
in
pop
into
and
add
push
mov
mov
xor
or
ds
rcrb
xchg
fimull
ret
cmc
lods
leave
jg
rclb
enter
mov
sahf
ficompl
pop
mov
imul
mov
add
flds
xchg
movsl
pop
jg
lcall
in
rcrb
lods
movsb
cmc
mov
in
xor
mov
pop
push
gs
adc
outsl
out
inc
loope
cltd
jmp
jl
lcall
mov
into
sbb
divb
sbb
dec
in
nop
and
xchg
jns
push
ss
arpl
mov
popa
mov
mov
xchg
es
mov
adc
and
addr16
ds
ror
add
clc
or
in
pop
out
and
and
sbb
cs
mov
add
push
cmpb
dec
jle
jbe
sbb
sub
xor
ds
dec
pop
push
pushf
imul
into
lret
in
dec
xor
ss
mov
fwait
les
and
test
xchg
mov
fistps
add
pop
insl
cmc
inc
xchg
xchg
push
hlt
outsl
fcmovnu
dec
aad
js
fcomip
pusha
jns
js
push
xchg
sub
mov
cmpsb
test
iret
sbb
ss
push
xor
aam
xor
pop
sti
jmp
rcrl
js
xlat
xchg
icebp
mov
fldz
and
decb
sahf
jl
xor
cltd
in
fildl
adc
xchg
pop
jbe
mov
addb
mov
xchg
pop
cmp
shrb
jge
cvtps2pd
pop
inc
aam
pop
pusha
xchg
bound
or
data16
neg
fcoml
div
pushf
adcb
inc
push
sbb
lret
lcall
pusha
inc
and
xor
mov
dec
sub
lcall
aad
daa
ret
mov
ss
lret
sub
roll
ljmp
rcrl
push
sub
or
mov
dec
inc
fsub
je
pop
test
fmuls
mov
sbb
aad
add
adc
mov
sub
sub
sub
inc
arpl
pop
mov
mov
push
bound
cwtl
mov
cmc
gs
aas
aaa
add
jns
or
sub
loopne
mov
add
jge
or
push
adc
fimull
mov
xor
xor
aam
arpl
imul
in
cwtl
sbb
inc
enter
sub
add
jno
add
loope
add
enter
cmc
ljmp
push
cmp
les
jno
int3
loope
mull
stc
add
jp
push
insb
mov
cltd
jno
xchg
frndint
cmp
scas
mov
mov
or
insb
mov
adc
xchg
andl
cvtps2pi
lods
lds
repz
xchg
mov
mov
js
dec
shlb
test
jno
call
xor
daa
push
loop
loope
mov
add
mov
cmp
inc
pop
ljmp
loope
inc
mov
sahf
cltd
clc
xchg
and
push
adc
dec
add
mov
shlb
mov
test
jns
lods
nop
sub
lcall
mov
and
lahf
cmp
std
mov
adc
sub
mov
movsl
ljmp
xchg
es
fiadds
fmuls
nop
fsub
pop
mov
movl
jns
adc
ud2
popa
push
movsb
stos
add
jecxz
mov
fiaddl
inc
sub
lods
add
jno
ja
sbb
xor
xchg
pop
adc
in
push
mov
cmp
sub
sub
xor
pop
add
lods
ja
xor
push
xchg
out
xor
fmull
or
stos
lods
jo
xchg
sub
faddp
xor
sbb
cli
pusha
jb
shr
pop
int
iret
fadds
mov
xor
jb
cmpsl
and
mov
add
mov
sti
jg
mov
sub
movsb
pushf
cmc
cli
mov
jns
inc
pop
nop
aam
adc
sbb
jnp
movsl
int3
jb
hlt
shrb
push
adc
push
repz
ret
ja
dec
adc
push
push
xchg
push
xor
mov
leave
std
sub
dec
xchg
addl
or
inc
dec
ljmp
je
add
jb
iret
cmp
fisubl
sbb
cmp
add
ljmp
jmp
sbb
dec
ds
xor
es
loopne
sbb
out
add
pop
and
sti
pop
mov
and
fs
pop
sub
push
std
pushf
mov
sbb
xchg
sbb
arpl
mull
xchg
rcll
inc
clc
add
pushf
mov
sti
inc
mov
lcall
inc
pop
or
adc
mov
or
icebp
out
roll
or
mov
or
mov
jb,pn
xchg
jle
jp
mov
xlat
hlt
ret
xchg
addl
sahf
addr16
test
xchg
pop
sbb
pop
mov
mov
std
cmp
or
js
sbb
test
mov
popf
pop
sub
inc
pop
daa
sarb
rorb
push
stc
dec
xor
pop
mov
push
jecxz
sbb
adc
in
dec
jg
loopne
inc
pop
idivb
dec
pop
jge
dec
and
and
frstor
dec
cmpsb
ljmp
lods
cmp
mov
stc
jns
adc
mulb
aas
or
sbb
subl
ror
jno
inc
test
jb
hlt
lret
aas
push
mov
sbb
rolb
loope
jg
xchg
add
inc
and
mov
addr16
mov
sbb
sti
add
dec
xchg
gs
pop
jl
mov
adc
mov
cmp
xchg
jle
mov
call
lock
pushf
xchg
jo
xor
lds
loopne
loop
mov
mov
or
dec
loop
sar
or
pusha
bound
jae
mov
jmp
iret
mov
push
sub
push
shl
sub
ljmp
pop
sbb
inc
cmc
fnstcw
jmp
aas
out
sahf
mov
aas
mov
mov
rol
dec
push
cmp
xchg
mov
lret
mov
dec
andl
cmp
loop
in
cli
adc
jmp
sub
sbb
push
hlt
pop
push
xlat
cmpsb
mov
and
cmpsb
sub
lds
jb
or
nop
popa
js,pn
push
or
pop
xchg
cli
repnz
mov
insb
cmp
sub
pop
aam
insl
mov
shll
pop
xchg
and
add
ja
clc
push
outsb
dec
cmp
shlb
stos
fisubrl
test
int
mov
in
ljmp
mov
push
inc
cmp
sub
cli
adc
mov
movsb
std
call
mov
jnp
bndldx
loop
push
int
pop
lds
in
std
ret
add
aaa
pop
inc
bound
int3
or
fs
jg
shll
call
inc
fsubrs
sarl
aaa
push
frstor
fisttpl
xchg
jl
jl
xor
jl,pn
and
mov
mov
pcmpeqb
xor
pop
stc
lods
push
lods
cmc
movsb
sti
xor
lcall
mov
jnp
test
shr
cltd
inc
adc
in
icebp
pop
jmp
hlt
pop
push
pop
pop
push
icebp
jp
or
ljmp
inc
inc
sbb
adc
jbe
pusha
clc
xchg
sbb
jae
push
ret
dec
inc
fsubrs
and
sub
xor
inc
sub
cwtl
repz
dec
in
loopne
cmp
enter
pop
pop
xchg
scas
je
sub
cmpsl
rclb
aaa
int3
lret
push
inc
lcall
jecxz,pt
or
in
dec
push
aas
pop
push
or
pop
xchg
sub
icebp
ss
cmpsb
stc
scas
cmp
pop
gs
cmpsb
out
xchg
movsl
sbb
push
fimull
data16
jp
pushf
cmpsl
xor
es
cmp
xor
pop
lcall
pextrw
rcrb
xchg
ds
xchg
dec
test
into
cmp
mov
and
aaa
dec
fstpl
ds
in
test
dec
in
xchg
aas
mov
inc
mov
sti
sub
push
div
or
stos
stc
scas
push
out
xor
lods
jp
add
push
rorl
mov
stc
xchg
out
aas
push
push
mov
xorb
dec
int
mov
or
xor
aad
jnp
dec
jp
push
sbb
xor
inc
mov
pop
pop
mov
int3
movb
orl
aad
add
insl
fisubrs
pop
cld
mov
jb
sbb
dec
shll
cmp
mov
les
xchg
sub
lahf
push
cmp
or
scas
jl
mov
fnstenv
pop
cmc
mov
xchg
in
out
clc
lock
fildl
bound
insb
mov
ss
and
adc
inc
out
lock
xchg
gs
sbb
dec
add
fists
ret
sub
xor
mull
ret
std
js
imul
jecxz
sbb
jl
and
repnz
les
add
jl
jbe
jb
pop
adc
mov
dec
in
inc
push
fiaddl
ret
jae
push
inc
xor
test
mov
jge
inc
or
and
sti
or
stc
sbb
std
fstl
pop
push
lahf
add
inc
mov
inc
or
imul
jge
iret
gs
mov
fxch
in
int
sbb
js
aad
fs
pop
shrb
jle
stos
pmuludq
hlt
loope
clc
sub
xchg
movsl
jge
cmp
cmp
shlb
jecxz
jno
test
loop
cvtps2pd
push
sub
in
inc
int
pop
insb
punpckhwd
sbb
push
ss
gs
aas
jne,pn
push
das
mov
test
xor
cmp
cmpsb
inc
mov
testl
lahf
out
inc
pop
jecxz
inc
orb
repnz
mov
ss
mov
jmp
mov
orb
dec
adc
in
jecxz
dec
test
sarb
frstor
movsl
sub
jbe
or
push
aaa
adc
or
popa
push
xchg
outsl
push
test
call
ret
lahf
fisubl
and
arpl
jb
out
cmc
push
sbb
pop
push
outsl
rcrl
rcr
jbe
adc
daa
lock
pusha
testl
insl
sbb
push
add
sub
dec
push
sbb
fcomp
pop
sbb
decl
push
push
rcll
jge
inc
inc
faddl
mov
pushf
test
sahf
mov
inc
cmp
and
mov
call
pusha
xlat
es
jns
push
data16
sahf
lods
lock
inc
lret
add
ds
cmp
jno
xchg
shlb
push
loopne
push
jl
xchg
mov
lcall
daa
push
lret
sub
cmp
cmpsl
inc
dec
inc
jb
ficoml
fwait
sbb
push
inc
aaa
sub
fnstenv
test
mov
lea
or
add
or
sahf
xor
push
mov
lcall
aaa
mov
xchg
jl
mov
leave
dec
inc
add
adc
fiadds
or
out
test
ret
sub
xchg
out
push
gs
out
loope
or
pop
shrl
pop
and
shll
dec
mov
dec
jae
cmpsl
adc
sub
mov
pop
insl
or
lea
movsl
push
cmp
arpl
ljmp
mov
sbb
stos
xor
out
repnz
ss
mov
dec
loopne
jecxz
ds
jp
and
fstpt
int
loope
lret
vpaddsb
mov
test
adc
push
addr16
adc
inc
std
jno
sti
mov
cwtl
into
addr16
and
dec
adc
xchg
pop
insl
aad
test
cmp
cli
paddd
and
mov
popa
or
dec
lods
sub
lods
lret
sub
mov
arpl
lds
lret
shr
jmp
fwait
rorl
lret
add
mov
or
push
adc
mov
mov
movsb
mov
mov
sbb
mov
pop
dec
and
mov
xchg
cld
outsl
fdivrl
jbe
push
aad
jmp
and
in
ret
jae
fcompl
dec
jae
ljmp
aam
fs
in
and
stc
outsl
inc
int3
fucomip
test
pusha
dec
pop
es
aad
push
mov
jno
es
mov
loopne
les
lcall
mov
mov
xor
out
mov
in
pusha
stos
adc
jp
lea
daa
adc
inc
adc
push
sbb
std
je
fs
outsb
inc
lea
pop
dec
fidivrl
add
jge
pop
mov
in
int
js
inc
add
cmp
mov
repz
inc
jecxz
pop
mov
jmp
orb
sub
insb
cld
testb
out
push
jecxz
lea
imul
popf
imul
mov
fwait
sub
xor
adc
add
mov
xor
xor
or
xchg
gs
xlat
mov
pop
imul
pop
jne
bound
flds
or
adc
es
nop
outsl
cltd
shll
inc
mov
lock
stos
and
icebp
int3
rcr
jl
and
ss
cwtl
cs
pop
loope
and
in
sbb
or
fildll
jo
mov
rcrb
cltd
inc
mov
outsl
xor
loopne
mov
hlt
adc
sbb
movsl
xchg
fsubrp
stos
notb
sbb
push
mov
int
push
push
leave
loope
imul
cmp
cmp
mov
iret
inc
push
into
stos
test
dec
mov
add
out
daa
or
mov
dec
jnp
xchg
jge
pop
enter
je
call
mov
int
fistps
movmskps
das
insl
xchg
jns
outsb
shrl
inc
test
sbb
and
cmp
adc
fidivrl
fbstp
push
push
inc
pop
imul
pushf
inc
aam
scas
imul
xor
out
sbb
xchg
fiadds
and
adc
test
lret
or
xchg
xchg
adc
pop
push
mov
adc
cwtl
sbb
rep
mov
pop
add
xchg
push
xor
bound
push
sbb
mulb
mov
push
or
xor
xchg
call
or
sbb
addr16
push
pop
adc
inc
in
or
mov
cmp
jle
ss
stc
jmp
or
xor
mov
xor
xchg
ret
stos
inc
pop
xor
dec
xchg
repz
mov
cmp
stos
fwait
xchg
dec
inc
dec
pusha
sub
mov
leave
sti
addr16
adc
cltd
pop
imull
icebp
aad
pop
dec
clc
jo
test
or
xor
aad
loopne
inc
push
lock
or
int
out
sub
cmp
cltd
or
add
xor
subb
shr
stc
and
xor
iret
xchg
push
mov
fisttpl
mov
sub
xlat
mov
dec
push
lcall
jb
cmp
sbb
jno
div
aad
test
stos
mov
xchg
test
inc
test
loopne
fisttpll
mov
cmp
sub
cs
dec
xchg
jno
push
cmp
mov
mov
add
fisttpl
xlat
cmpsb
lods
sub
repnz
dec
add
push
aad
cmp
mov
jecxz
pop
movaps
imul
loop
push
imul
hlt
mov
int
pop
sarb
dec
xchg
insb
roll
mov
ret
xchg
jge
stc
sub
cmp
popa
bound
xchg
cmp
lods
push
pop
and
mov
in
ret
adc
jmp
aaa
cmp
in
cmp
jmp
enter
xor
mov
cmc
inc
psubsw
xchg
mov
inc
xor
xorl
fucomip
ret
clc
and
outsl
lcall
test
mov
fisubrs
lea
inc
test
adc
add
xchg
lcall
push
adc
cld
stc
push
mov
pop
daa
insb
test
cli
or
push
pop
dec
popa
sub
jno
mov
lds
bound
repz
and
inc
fildll
cmpsl
int3
lods
dec
jo
pop
outsl
dec
xor
adc
call
jge
inc
insb
pop
inc
xor
rcrl
mov
dec
add
pop
jmp
push
inc
outsl
insl
and
jno
mov
in
iret
dec
jl
jbe
leave
lock
or
lahf
add
xchg
nop
call
scas
cs
pushf
in
ds
mov
inc
clc
or
add
shrl
or
xchg
push
lds
cmpsl
xor
xchg
rcrb
lock
and
push
dec
inc
ds
lret
sub
mov
mov
sbb
xorb
sub
xchg
mov
xor
enter
push
inc
cli
lods
cltd
nop
lock
sub
out
cmp
outsb
ret
jle
pop
and
pushf
inc
mov
insl
int3
jae
ja
mov
xlat
push
xor
cmpb
notl
sbb
or
imull
fdivr
push
jns
or
sti
xor
enter
adc
mov
scas
cmp
js
lock
mov
loop
pop
adcb
insb
fidivrl
lods
sahf
sbb
popf
fs
sbb
ljmp
in
xor
int3
dec
ljmp
xor
test
into
hlt
jns
jnp
stos
mov
int
sub
lods
inc
mov
sbb
sbb
div
mov
jb
out
mov
or
and
sub
jmp
and
xor
jmp
hlt
in
jo
pop
call
pop
inc
xchg
xchg
pusha
test
clc
negb
rorb
cmpsb
xor
xchg
std
add
inc
mov
inc
add
adc
or
frstor
fsubp
andb
lcall
gs
rcl
fcoms
mov
jb
fstpt
fistpl
and
and
cmc
cs
out
es
icebp
or
incl
or
push
adc
dec
pop
cmpsb
xchg
js
cmp
shr
push
pusha
xchg
mov
push
negl
and
push
sbb
pop
in
rcr
outsb
mov
inc
sbb
jle
mov
sti
push
pop
jo
dec
mov
fisttpll
sub
xchg
pop
cltd
jb
mov
adc
aam
cmpsl
leave
ret
ret
cmp
xchg
xor
sbb
xchg
add
call
nop
jno
rcl
bound
xchg
jp
es
insb
loopne
mov
daa
dec
xor
cmp
insl
out
fwait
mov
jle
movsl
iret
or
out
call
stos
clc
addr16
mov
adc
sbbb
pop
imul
ljmp
leave
pop
sub
mov
pushf
push
enter
jns
jp
jg
pop
bound
jp
stos
imul
push
movsl
jle
fs
jg
nop
push
add
jns
insl
fimull
sbb
cwtl
push
cmp
pop
mov
pusha
lock
cli
fbld
sbb
js
xlat
xorb
push
cmc
xor
insl
adc
mov
jno
paddd
mov
xchg
pop
in
inc
mov
loop
or
inc
lods
mov
in
aad
cwtl
push
sub
icebp
imul
rcll
fnstenv
mov
outsb
pusha
inc
out
add
mov
jp
pushf
sub
loop
mov
test
sahf
push
inc
dec
sahf
divl
aaa
inc
dec
xchg
mov
or
leave
add
inc
mov
in
sahf
aam
jl
je
sti
movsl
lcall
jbe
dec
leave
leave
jb
add
and
mulb
lahf
call
loopne
sub
cmp
xchg
mov
sti
and
pop
scas
aaa
sub
ret
pop
dec
aas
mov
movsb
out
mov
add
movhps
mov
dec
daa
dec
int
xor
add
push
cmp
jmp
xor
popf
cmp
mov
xor
pop
cmc
cwtl
push
popa
dec
push
gs
jno
xchg
dec
jns
sub
cmc
rorb
adc
scas
xor
jne
xorl
push
jae
jge
add
cmp
icebp
mov
adc
sbb
sub
xchg
mov
flds
jge
mov
out
xor
dec
sub
and
sub
mov
xor
sbb
push
push
loope
cltd
imul
add
inc
ds
mov
es
fld
push
int
pop
jne
ret
xor
mov
push
jne
dec
xchg
cltd
mov
mov
mov
pop
mov
mov
in
xchg
pop
imul
pop
jb
jnp
add
and
and
xchg
ret
mov
add
mov
or
xor
add
mov
icebp
dec
popf
push
mov
jae
adc
enter
lods
aas
clc
cld
xorl
outsl
add
adc
insb
mov
push
test
cld
aas
fldcw
out
in
pusha
mov
cs
sbb
sbb
cmp
cmp
cmp
inc
rclb
and
xchg
push
loop
and
pusha
jg
pushf
jmp
imul
add
aas
jo
ss
and
mov
xchg
shlb
dec
shll
imul
dec
mov
icebp
adc
xlat
push
push
fwait
pop
xchg
xchg
addr16
test
clc
push
sub
mov
call
sub
mov
insl
nop
jo
xchg
jle
mov
xchg
adc
or
lds
push
pop
pop
inc
lret
and
pop
cmp
lods
cld
or
and
push
and
aam
and
jne
imul
lcall
push
xchg
notb
or
js
pop
sub
jge
fwait
xor
int3
pushf
ss
clc
pop
imul
adc
lcall
pop
out
leave
and
cmc
jg
fmull
dec
cltd
test
xchg
movsl
sar
addl
lea
out
mov
dec
xchg
mov
into
mov
mov
adc
ja
arpl
push
inc
scas
or
cli
push
and
sub
int
pusha
inc
and
sub
cmp
inc
sti
mov
xor
cmp
sub
or
inc
and
repnz
push
sub
sub
mov
int
enter
nop
push
cmp
popa
stc
mov
adc
sbb
cmp
lock
pop
fsubrp
clc
xor
inc
movsl
or
scas
insl
sub
push
mov
mov
mov
adc
mov
stos
push
loopne
xlat
cmc
popf
imul
push
lahf
aad
testb
outsb
idivb
icebp
cmp
adc
dec
mov
xchg
adc
cld
xchg
gs
sub
xchg
dec
mov
gs
repz
psadbw
cmp
mov
into
rorl
pop
outsl
sub
js
shrb
cli
ret
loop
call
add
pop
imul
loope
xchg
ror
pop
test
xor
dec
mov
fstl
pop
stos
stos
fisttpl
mov
mov
test
dec
fdivl
mov
les
ljmp
xchg
loop
mov
jae
fisubs
aaa
bnd
ljmp
in
adc
pop
insl
mov
cmp
xchg
mov
popf
sbb
rolb
push
cmp
push
mov
cmpsl
inc
aam
jecxz
and
inc
mov
push
mov
fisubrl
popa
es
and
ret
add
dec
jns
and
jns
xor
mov
neg
popf
mov
lods
pop
mov
push
mov
dec
test
aam
dec
pop
and
and
xor
fdivrs
or
push
sbb
jb
fildl
cwtl
into
sub
jle
jmp
cmp
mov
imull
mov
les
das
out
fsubl
and
insb
jecxz
sbb
sub
ret
daa
xchg
vsubps
in
jmp
sbb
sub
xchg
les
subl
fwait
xor
js
add
jg
xchg
into
adc
push
and
test
roll
ss
cmpsb
jbe
out
loop
pop
test
ror
inc
shrb
dec
insb
loop
cmpb
xlat
int3
and
gs
xor
and
lret
divb
aad
mov
mov
nop
mov
je
ret
pop
push
push
enter
adc
adc
repnz
pop
loop
pop
aas
push
addr16
xor
pop
inc
cli
jb
mov
ret
push
mov
cmpsb
cld
aam
jmp
inc
fildll
jnp
scas
push
in
jg
sub
outsb
iret
lock
inc
and
mov
in
adcb
enter
lahf
xchg
lea
out
insl
mov
imul
dec
inc
pop
int
loope
mov
adc
movsb
lods
add
sub
dec
divb
shl
pop
outsl
adcl
inc
bound
sbb
out
inc
sub
xor
lret
sub
xor
cmpsl
lcall
jb
and
pushf
mov
jmp
adc
sbb
lcall
lahf
sbbl
jns
push
popa
pop
enter
jbe
mov
and
aaa
mov
mov
dec
les
andb
jle
mov
mov
jnp
mov
lcall
aas
pop
add
pop
cmp
pop
mov
movsb
xchg
mov
jnp
pushf
int
lcall
popf
fidivrl
fcomi
cmp
out
orl
cmp
jecxz
int
cli
mov
mov
test
inc
loop
loopne
fs
es
dec
les
inc
sub
xor
test
cmp
mov
ret
cmc
out
inc
popa
push
das
mov
or
jecxz
xchg
xor
inc
popf
ret
sub
and
jnp
sarl
pusha
cli
mov
add
test
gs
cld
nop
adc
sti
adc
mov
mov
push
movsl
testl
int
xor
pop
pop
insl
repnz
jo
pushf
je
or
std
mov
cmovnp
jns
sbbb
or
pop
push
es
movsb
int
dec
jo
stos
sbb
jno
jl
xchg
push
inc
cmp
outsl
mov
jnp
movsl
cs
mov
adc
inc
xor
xor
lock
jb
ljmp
mov
in
push
dec
or
xchg
and
fsubl
lds
push
outsl
xchg
push
dec
nop
pop
sub
icebp
lea
push
add
popa
dec
push
rcr
int
loope
cmpb
outsb
aam
sub
or
jg
test
icebp
jno
inc
hlt
cld
jo
stc
mov
addb
aaa
pop
mov
xorl
xchg
mov
sub
jmp
mov
dec
je
imul
xor
sbb
jp
push
mov
scas
repnz
sbb
daa
clc
insl
sti
mov
adc
dec
mov
imul
in
xor
pop
scas
and
mov
fs
jle
es
pop
jge
adc
aam
push
test
push
push
dec
or
xlat
xor
sbb
mov
jo
xor
fmull
lret
loope
inc
in
shl
mov
and
xchg
in
std
pop
sub
stos
dec
ljmp
es
or
adc
xchg
adc
push
fnstsw
inc
insb
sbb
mov
xchg
cmp
imulb
bnd
cmp
xor
int3
jno
xor
cmp
cli
pop
es
push
xchg
push
dec
jnp
fmul
mov
sbb
adc
and
pop
iret
push
repnz
xor
sbb
xchg
adc
test
ret
into
fldenv
mov
in
xchg
sbb
stc
shl
mov
call
stc
or
xlat
cmp
aad
mov
adc
add
mov
ja
fptan
fsubrl
dec
push
enter
mov
jge
cmpb
fstps
mov
movsl
in
mov
sub
sbb
das
dec
xor
popw
xor
adc
ret
dec
ljmp
bswap
scas
and
xchg
pop
sti
mov
inc
cmp
fwait
mov
call
outsl
stos
filds
or
push
cmp
je
orl
or
cmpsb
xchg
adc
pop
pop
jecxz
jge
popa
sti
cs
add
cmpsl
sti
adc
xchg
mov
xbegin
pop
bound
mov
clc
std
sahf
aaa
mulb
inc
pop
ljmp
gs
lods
pop
test
mov
fists
fmull
mov
mov
in
cmp
sbb
or
in
inc
ljmp
fsubl
mov
xchg
jg
add
mov
in
sub
in
pop
push
mov
shrl
sbb
push
push
pop
iret
fisubrl
cmp
shll
push
dec
insb
gs
mov
call
mov
pop
std
xchg
xchg
mov
and
xchg
insb
jno
xchg
fsubr
fists
mov
sbb
xlat
mov
inc
jp
cmp
mov
cld
pushf
dec
rcl
lret
pop
inc
adc
fwait
sbb
sbb
dec
push
es
addr16
movsl
nop
mov
shrb
pop
bound
sub
loope
inc
jnp
xchg
push
lcall
cwtl
jle
std
push
sbb
mov
adc
and
lods
sbb
add
mov
out
je
inc
stos
xor
cld
push
push
mov
fnstsw
and
popa
mov
xlat
dec
orb
test
dec
mov
xor
add
mov
and
mov
add
ds
xchg
sbb
andb
repz
mov
push
sbb
or
imul
inc
jecxz
lea
jmp
fsubl
jecxz
fdivrl
pop
stc
sbb
fwait
add
sbb
xchg
push
sub
je
mov
sub
fsub
in
loope
addb
outsb
and
xchg
faddp
mov
mov
jmp
mov
push
dec
mov
stc
add
into
push
cmp
push
xchg
lock
bnd
rorl
jo
push
arpl
mov
push
hlt
and
out
and
xor
push
sub
test
jecxz
sub
scas
dec
pop
or
icebp
xchg
movsl
cwtl
adcb
int
or
insl
cs
in
adc
xlat
pop
sarb
clc
pop
sti
aas
cltd
inc
loope
out
ljmp
lret
ss
or
adc
cmp
push
xchg
mov
mov
cmc
push
or
adc
and
scas
adc
ja
fwait
jle
cmp
xlat
inc
repnz
xlat
pop
je
mov
sahf
loop
pop
clc
cmpsb
fimull
push
sbb
sub
fisttpll
inc
push
pop
mov
outsl
push
std
sub
push
add
xchg
xchg
adc
imul
pushf
dec
push
mov
inc
mov
out
aam
in
insb
add
mov
ret
inc
lock
jmp
and
sbb
rolb
jne
sub
xor
les
mov
sub
sbb
popa
hlt
lods
test
xchg
fadds
mov
lea
std
jge
shll
mov
inc
jae
fimull
scas
cli
push
sub
mov
jns
data16
cmpsb
jns
cmpsl
sarl
pop
cmp
mov
stos
pushf
repz
push
jl
xor
jmp
xchg
lods
sub
mov
ret
js
adc
into
lret
cli
daa
sbb
pop
adc
cmpsl
js
enter
pushf
leave
jg
xchg
mov
hlt
stos
dec
jp
cmpsl
in
or
sub
inc
xchg
mov
lock
push
cs
sbb
std
out
orb
dec
test
scas
in
loopne
pop
frstor
sbb
movsb
popa
inc
icebp
cmp
outsb
mov
ja
mov
jp
jno
and
adc
mov
adc
lods
clc
clc
push
xchg
adc
in
add
jecxz
inc
mov
outsb
jp
xchg
sahf
sbb
push
xchg
mov
aad
push
cwtl
lahf
jmp
int3
gs
aam
jecxz
mov
out
lret
dec
loope
clc
lods
imul
dec
push
inc
mov
pop
adc
lock
adc
orl
mov
adc
adc
arpl
test
arpl
pop
mov
test
mov
push
js
inc
xor
fdivl
rolb
push
or
nop
push
cmp
int3
mov
push
pop
lret
adc
pop
stos
sbb
stos
loop
stos
andl
popl
jle
adc
jp
add
mov
lods
shlb
lcall
gs
adc
mov
and
pop
adc
dec
int3
popa
arpl
jbe
data16
mov
test
xchg
imul
adc
ds
adc
sub
out
std
cli
loop
ss
sbb
loope
push
push
ljmp
pusha
jp
add
mov
lea
test
push
adc
xchg
xchg
outsl
xor
mov
out
inc
test
insb
es
pop
inc
xchg
push
mov
int3
sub
push
je
jmp
lahf
jne
movsb
int
ficoms
pop
pop
fwait
mov
in
jl
jl
mov
pop
dec
jmp
daa
call
pop
and
aad
out
mov
cmp
mov
je
xchg
adc
notl
and
movsl
xor
rclb
dec
sub
repz
fisttps
jge
mov
popa
test
cli
adc
mov
movsb
clc
jbe
addr16
push
leave
push
ja
cs
fdivrs
add
je
int
xor
in
shrb
pop
sub
adc
xorl
les
lods
mov
stos
inc
push
ljmp
fmuls
adc
jns
adc
sub
pushf
shrl
jp
jne
dec
insb
xchg
std
inc
lea
mov
test
and
pop
jne
add
test
push
inc
loopne
inc
push
in
nop
js
push
adc
mov
inc
push
out
in
test
adc
xor
sbb
mov
inc
sub
cmp
std
jl
lock
cld
shll
aaa
into
test
leave
pushf
mov
mov
scas
add
add
icebp
xor
mov
sbb
cmp
rolb
dec
pop
xchg
mov
pop
sub
xchg
leave
add
lods
sbb
sbb
push
stos
ljmp
jne
ja
jae
rcl
add
aas
jg
mov
gs
orl
sbb
push
jl
subb
repz
fstpl
xchg
into
pusha
fistpll
jae
rcrl
cltd
pusha
fildll
sbb
push
icebp
jge
mov
xor
xor
lret
gs
ret
jb
fldz
daa
sub
jge
mov
mov
fisubs
addr16
in
jns
mov
lcall
leave
test
mov
push
mov
push
fisubl
bnd
andl
mov
stos
mov
or
mov
sbb
loope,pt
fs
dec
fwait
add
gs
inc
call
mov
pop
mov
cwtl
and
imul
lds
mov
lock
jl
mov
movsb
inc
or
dec
and
neg
adc
cmpsb
aad
ds
test
repz
std
mov
mov
adc
jg
mov
pop
fstpt
inc
push
imul
sbb
add
xchg
int3
cmp
sub
mov
xchg
pop
or
pop
nop
movsb
jno
sub
fdivl
xor
dec
into
out
aad
cmp
shl
sbb
test
ljmp
jge
jns
jl
clc
xchg
enter
push
sub
int3
jae
mov
xchg
aas
sbb
sub
or
mov
lods
or
mov
mov
sbb
test
sub
pop
dec
jb
cs
scas
pop
pop
daa
repnz
add
and
inc
mov
daa
mov
inc
test
scas
inc
negl
mov
ds
sub
in
and
mov
cltd
pop
mov
add
push
fbld
in
push
sbb
call
out
push
mov
in
and
ret
push
arpl
push
jmp
mov
sub
mov
inc
pop
mov
jg
mov
and
fadds
fldenv
roll
cli
cs
dec
mov
adc
movsl
es
xchg
pusha
cmp
xchg
cmp
inc
push
inc
jbe
sbb
mov
pop
outsl
mov
lds
xchg
int3
in
in
addr16
imul
xchg
lea
and
fstpt
incl
xchg
out
inc
insb
enter
xor
cld
fnstenv
mov
jbe
stos
mov
xorb
in
mov
lea
and
ret
jne
mov
outsb
bound
cmp
push
outsl
jno
bound
enter
xchg
loop
ret
pop
lds
pop
fiadds
pop
jl
mov
sub
mov
into
push
dec
or
adc
mov
out
push
addr16
push
shrb
clc
mov
adc
sbb
and
in
shlb
xchg
inc
pushf
push
arpl
arpl
sbb
inc
icebp
out
mov
and
adc
or
jle
scas
int3
outsb
mov
lret
jnp
push
cmp
fmull
xor
push
cmpsl
shlb
stos
enter
into
dec
add
int3
in
fimuls
push
adc
mov
int
sbbb
jmp
divps
pop
add
mov
cmpsl
mov
pop
push
mov
xchg
mov
xchg
sub
adc
mov
dec
add
pop
in
dec
mov
sub
and
fdivrl
fiadds
sub
or
and
mov
pusha
cmp
and
pop
push
mov
bound
imul
or
sub
cmp
sbb
adc
ret
aas
outsb
and
xchg
mov
adc
and
mov
mov
xchg
cli
fwait
loopne
or
fcmove
or
mov
mov
mov
popa
xchg
inc
fimuls
je
cmpsb
inc
pop
lea
mov
cmp
sub
dec
mov
sahf
test
ret
stc
in
mov
mov
in
sahf
cwtl
cwtl
push
push
xchg
push
shrl
and
mov
in
or
aam
jle
push
adcl
decb
mov
xor
ret
lds
cwtl
cwtl
fdivs
cmp
adcl
mov
mov
cmpsb
dec
inc
cmp
dec
loope
pop
cwtl
dec
xor
scas
loop
mov
inc
inc
scas
and
inc
and
pusha
es
leave
push
push
or
xchg
ss
test
or
sti
ljmp
inc
push
aas
xchg
test
pop
jle
mov
cmp
call
shlb
cmpsb
lods
adc
push
lea
call
into
adc
cltd
lea
les
adc
jp
sub
adc
jbe
mov
xor
cmp
lahf
mov
xor
sub
push
addr16
and
shr
dec
cmp
xor
inc
fucomip
out
xchg
das
adc
int3
clc
jp
ss
jno
lods
dec
pop
xchg
leave
jnp
je
clc
lea
jl
fs
cmp
bound
pop
pop
inc
outsl
mov
mov
lods
aad
cli
xor
and
inc
jecxz
mov
lods
les
sbb
mov
xor
into
jp
push
xor
or
inc
push
jne
dec
cltd
add
add
adc
push
shl
jbe
dec
pop
mov
and
fistpl
jle
test
sub
and
pop
jnp
movl
out
lret
sbb
mov
scas
sbb
jns
mov
jmp
into
mov
adcb
popa
loopne
sbb
cmp
in
orb
adc
cmp
xor
fildll
pop
push
push
dec
pop
insb
jmp
push
loope
mov
xor
rcr
lods
jl
jecxz
add
es
jbe
fistpl
and
jecxz
outsb
or
and
ret
sbb
shll
mov
sbb
jg
jae
xor
nop
fldl
insl
outsl
xor
stos
mov
push
xor
cmp
repz
inc
mull
enter
divl
stos
pop
mov
in
or
push
sbb
push
and
mov
mov
arpl
addl
mov
mov
mov
stc
sub
mov
addr16
aam
bound
push
in
es
bound
mov
mov
divb
popa
push
mov
dec
dec
xchg
popf
inc
cmp
xor
pusha
push
mov
push
hlt
hlt
fsubl
mov
fcmovb
aaa
xlat
mov
xlat
cmp
or
mov
in
shlb
arpl
js
dec
jle
movb
dec
cmp
imul
xor
bswap
jmp
fists
push
jecxz
pop
cld
xor
ja
push
stos
aas
pop
sbbb
icebp
xchg
jnp
mov
jmp
insb
repnz
jne
push
int
dec
sub
lock
add
stos
add
sub
or
and
sub
inc
aad
mov
add
sbb
in
pop
add
ret
ficoml
inc
jae
out
cltd
lods
cmp
or
rclb
push
pop
cmpsl
xlat
pop
dec
cmpsb
iret
mov
test
cs
mov
sbb
mov
aad
mov
push
add
pop
outsb
jns
or
xor
mov
fwait
add
cmp
push
repz
leave
insb
xor
int
imull
inc
in
mov
and
mov
outsl
incl
mov
xlat
xchg
arpl
in
movsl
jle
addr16
test
and
movsb
sarl
dec
mov
xor
test
sub
in
sub
sbb
push
sbb
popa
clc
mov
sbb
out
lcall
stos
loope
and
leave
xchg
cld
popa
push
push
gs
push
rcr
or
pop
and
xchg
hlt
mov
push
push
xor
add
xchg
xor
or
xchg
cmp
jmp
adc
js
test
mov
int
test
rcl
cmc
lock
mov
std
cmp
or
test
loope
push
mov
pop
ss
and
aaa
in
mov
pop
nop
inc
jnp
fcmovb
mov
sbb
cmp
pop
push
movsb
sub
cli
sub
icebp
dec
mov
cld
cmp
test
and
dec
inc
rorl
jmp
repnz
cwtl
into
cld
lret
clc
jecxz
out
aas
jne
aaa
sti
divb
cld
adc
sbb
adc
jge
adc
out
mov
insb
or
cli
xor
into
outsl
or
je
add
mov
xchg
pop
mov
test
fsubrs
fiaddl
jmp
pop
sbbb
push
sub
enter
jns
rcrb
arpl
sub
pop
mov
push
mov
xchg
scas
ret
push
decl
insl
add
mull
jne
sbb
inc
scas
je
mov
dec
adc
int3
and
xlat
mov
enter
xor
push
aas
lock
in
mov
sbb
shrl
push
scas
xor
out
call
loope
add
push
stc
mov
sbb
clc
dec
cmp
pop
cwtl
jb
inc
mov
aad
push
outsl
add
fistps
jl
jne
sub
stc
jnp
xchg
mov
or
pop
xchg
mov
stos
add
inc
push
pop
les
jbe
lcall
adc
sbb
idivl
daa
adc
scas
iret
stos
or
mov
jmp
mov
lret
jle
jns
inc
rorl
mov
inc
inc
bound
cmpsb
pop
mov
inc
adc
clc
cli
xor
xchg
rolb
add
fwait
cmp
xchg
clc
lcall
es
adc
ret
cmpsb
mov
aam
xchg
dec
jns
fcoms
lret
pop
imul
xor
cmp
testl
mov
iret
jnp
jp
jae
cs
mov
jo
dec
jecxz
sub
xor
xchg
mov
inc
je
clc
cmpsl
and
jle
sub
sbb
pusha
jo
sub
mov
into
xchg
leave
sahf
jno
push
enter
pop
sbb
cmc
psadbw
sub
or
mov
mov
adc
push
mov
ret
push
push
nop
dec
inc
mov
test
xchg
pop
leave
data16
push
je
mov
cmc
sub
pop
ds
add
mov
push
adc
push
cmc
lcall
test
or
inc
xchg
in
addr16
or
fwait
cld
in
aam
dec
jo
nop
gs
sub
ret
mov
movsl
into
jge
mov
sti
sub
mov
test
ss
in
xorb
cwtl
outsl
cmpsl
add
xchg
stos
jmp
in
jo
int
dec
jnp
call
cltd
or
aam
cwtl
add
push
sbb
test
mov
clc
push
mov
aaa
and
xchg
ljmp
pop
or
push
mov
xor
ret
fistpl
sahf
cltd
push
out
sub
in
lret
jge
ljmp
add
lret
or
pusha
loopne
adc
mov
push
jae
movzbl
inc
jl
testl
popf
repz
icebp
sub
loope
xor
mov
clc
aam
sbb
jp
jne
je
jp
ret
jnp
and
scas
mov
je
mov
push
mov
stos
cmc
aas
xchg
cmp
pop
inc
sbb
cld
dec
xor
out
push
push
mov
inc
popf
or
cmc
push
sbb
inc
pop
mov
pop
jle
jno
call
insl
pop
ret
push
push
jo
test
cmpsl
mov
imul
mov
mov
in
mov
fisubrl
rclb
xchg
or
and
mov
mov
cwtl
dec
call
mov
int
pop
dec
mov
es
xor
sahf
rorl
pop
ficompl
std
scas
cmpsb
movsl
xor
aas
xchg
or
push
push
es
push
xchg
cmp
loopne
xchg
xchg
add
enter
sub
fwait
push
mov
mov
das
mov
mov
mov
mov
lods
adc
ret
cmp
adc
sbbb
mov
stos
lock
mov
and
sub
cmp
fldcw
xchg
into
xlat
xchg
dec
popf
xor
cmpl
je
aam
cwtl
adc
sbb
mov
mov
movsb
popf
gs
test
pop
push
nop
imul
mov
andl
mov
push
sbb
sarl
popf
mov
shr
icebp
movsl
and
pop
dec
lods
pushf
loope
adc
pop
lret
fdivl
popa
leave
hlt
add
insl
fadd
pusha
dec
push
xchg
push
push
hlt
jmp
fidivrs
cli
into
push
das
pop
imul
dec
mov
cmc
dec
add
xchg
pop
popa
mov
scas
outsb
xor
jge
or
shlb
gs
nop
sbb
pop
out
out
test
inc
hlt
int3
frndint
mov
filds
fnsave
cmp
repz
sbb
ljmp
scas
pop
xor
push
sbb
call
mov
adc
sahf
icebp
lock
or
xchg
mov
rorb
sbb
sarl
je
inc
shrb
pop
mov
xlat
test
iret
jecxz
cmp
cmp
sub
push
cmpl
and
out
imul
scas
test
push
fs
xchg
jmp
jmp
frstor
xchg
nop
fimuls
lods
cli
test
aad
inc
cs
adc
cwtl
sbb
enter
ljmp
icebp
nop
loope
push
lret
and
rolb
and
jbe
mov
mov
xor
lret
stos
insb
movsl
cld
cmp
bts
sub
sbb
xchg
cs
test
or
and
fbld
stos
iret
mov
jle
push
lock
fmuls
and
xchg
std
xchg
stos
call
shlb
lods
pop
cltd
mov
fnstcw
cltd
mov
cmc
sbb
dec
aam
xor
idivb
mov
xchg
xchg
mov
dec
test
cmp
mov
lods
add
mov
pop
mov
bound
ret
mov
roll
inc
leave
les
and
jmp
mov
or
psllw
or
test
mov
mov
std
and
mov
push
sub
movsl
das
movsb
pop
push
bound
notl
mov
jo
push
ds
cmpsl
call
mov
in
aad
cmp
mov
lcall
call
cmpl
xchg
bound
in
jne
imul
push
pop
repnz
pop
xor
sbb
je
lea
jo
add
fnstsw
addr16
in
adc
or
outsl
data16
inc
loop
fdivrl
push
sbb
adc
mov
enter
in
fisubrl
pop
adc
lret
stos
in
or
fistl
shlb
fisttps
mov
lods
in
add
or
pusha
and
insb
out
outsb
aad
sub
and
pop
lcall
pop
lods
pushf
add
dec
jle
mov
jp
cmp
je
sar
cmpsb
sub
push
pop
test
adc
notl
cli
aas
mov
pop
in
cli
aam
dec
pop
mov
dec
mov
sahf
repz
popf
inc
ljmp
dec
mov
jae
add
imul
cmp
sbbl
cmp
xor
push
dec
pop
insl
xchg
push
fs
js
adc
xorl
pop
xchg
add
dec
adc
mov
fstpl
cmp
mov
ror
repz
mov
aaa
mov
adc
cmp
fisubl
cmp
push
pop
nop
push
scas
cs
pop
sub
inc
ja
sbb
rcr
ror
jbe
cltd
addr16
lahf
lea
fiaddl
fbld
in
mov
dec
jb
iret
dec
adcl
xchg
dec
sub
add
pop
in
movsl
and
stos
sbb
jo
pop
pushf
scas
dec
sbb
mov
test
adc
or
add
out
mov
fimuls
sarb
arpl
mov
scas
pop
sarb
jne
in
jmp
mov
cs
cmpsl
lret
or
and
push
sbb
int3
mov
cli
adc
sbb
imul
cmpsl
cltd
dec
or
imul
push
aaa
or
jno
adc
out
mov
cld
adc
ret
adc
lods
push
repz
xchg
sub
std
dec
cmp
fdivrl
inc
imul
dec
sahf
mov
cmp
mov
in
faddp
out
negl
inc
sbbl
push
outsl
xchg
inc
ret
jg
push
dec
aaa
pop
lds
jns
sti
jmp
mov
mov
jl
int
xchg
into
mov
adc
dec
jns
and
pop
jns
sub
jae
mov
loop
scas
pop
sub
call
aad
outsb
inc
insl
inc
pxor
popf
into
sbb
in
mov
xor
pop
bound
add
rcrl
pusha
mov
dec
imul
ds
bound
icebp
ja
pop
add
ljmp
lds
daa
mov
data16
daa
push
add
lods
cmp
scas
je
inc
mov
jge
mov
addr16
mov
xchg
adc
lcall
jae
inc
and
iret
fstl
inc
int3
out
sbb
push
out
dec
mov
dec
sti
pushf
xor
and
sahf
testb
adc
test
and
push
add
leave
fwait
jmp
push
popf
mov
cmpl
sub
jns
shlb
or
ljmp
sub
fbld
cmp
push
scas
pop
push
pusha
call
vmovshdup
stc
dec
jne
out
rolb
in
roll
jl
ss
inc
xor
repz
dec
shll
scas
fst
mov
or
mov
repz
shll
addb
in
les
loopne
lret
sub
les
mov
xor
cmp
pop
testb
mov
cmp
lea
xor
stos
stc
call
das
je
mov
jo
lea
out
loope
lds
insb
call
jnp
push
cmp
sti
pop
pop
jo
mov
scas
mov
pop
sti
mov
repz
pop
mov
mov
test
mov
lods
jno
lea
jbe
add
cmpsl
test
rorl
mov
dec
mov
shrl
aaa
mov
inc
fs
scas
add
aas
cmp
cmp
xchg
push
in
push
sub
movsb
addr16
scas
inc
adc
movsl
aaa
add
je
xchg
dec
frstor
xchg
push
fxch
cmpxchg
and
mov
gs
and
dec
xorl
mov
jns
sub
ds
repnz
inc
jno
xchg
fstps
ja
das
xchg
push
mov
imul
mov
mov
fwait
outsb
mov
daa
outsl
out
sbb
out
int3
lcall
cwtl
push
les
call
rorl
cmp
mov
jb
sub
idivb
dec
dec
rcr
jle
mov
repz
das
in
mov
je
stc
movsl
orb
rol
mov
inc
lea
pop
fsts
les
and
je
xor
stos
stos
sbb
push
mov
xchg
sti
jg
outsl
or
xchg
mov
pop
pop
pop
push
push
xchg
js
xchg
mov
clc
push
xor
inc
ret
subb
jae
and
fimuls
adc
add
jge
out
adc
jge
or
arpl
or
pushl
xchg
in
xor
clc
mov
mov
in
xchg
sbb
and
je
rolb
mov
outsl
push
loopne
or
jl
mov
push
arpl
xchg
loop
aas
pop
push
stc
adc
imul
xor
adc
dec
or
test
popf
pop
jo
ret
mov
testb
cmp
test
mov
jb
push
jmp
pop
pop
mov
outsb
and
filds
pop
lea
in
cmp
lock
frstor
mov
adc
jo
cmp
dec
or
out
ss
std
fldl
push
push
rorl
loope
push
add
mov
sti
test
jl
xchg
les
iret
insb
daa
xorl
or
sbb
mov
adc
jle
jnp
xor
xchg
cmp
mov
jl
mov
xor
es
divb
pushf
scas
mov
add
lahf
mov
push
stc
mov
and
fistpl
mov
adc
fcmovb
jle
rolb
pop
in
add
sbb
xchg
add
pop
fld
cltd
es
addr16
or
mov
dec
inc
daa
pop
out
sub
pop
es
cltd
dec
sti
popf
lods
sub
mov
jmp
sbb
lahf
jno
jae
pusha
pop
jmp
pop
and
mov
mov
jae
sub
pop
xor
cmp
das
xor
inc
or
in
mov
push
sbb
adc
adc
nop
jns
inc
mov
cmp
out
test
mov
ljmp
push
push
addl
lret
imul
aas
mov
jbe
xchg
mov
push
pop
loope
pop
cmp
mov
outsl
nop
xor
sti
mov
mov
notb
sub
in
in
out
jnp
ds
popa
bound
push
sbb
or
je
sbb
cwtl
test
mov
sti
lock
addr16
rcll
aam
pcmpgtd
arpl
and
cmpsb
mov
enter
cmpsb
or
clc
mov
adc
jbe
repz
repnz
lds
repz
lods
sbb
ret
and
pop
shrb
stos
jno
in
push
std
push
sub
outsl
into
ret
jmp
out
ljmp
jge
in
jo
adc
dec
adc
sub
pop
mov
cmp
pop
test
and
rdtsc
cwtl
pusha
pop
sarl
cmp
sarb
mov
jbe
cmp
sub
mov
ss
xor
and
mov
inc
and
andb
cmp
decl
xor
jns
movsb
xor
into
mov
and
fisubrl
xor
push
roll
cmp
mov
add
lods
pop
mov
leave
push
insb
out
orb
pop
imul
inc
mov
popf
cwtl
push
inc
call
jb
cmp
xorb
cmpsb
dec
jge
xlat
adc
pslld
cmp
and
or
mov
pushf
lcall
ljmp
stos
mov
ret
push
imul
xor
xor
or
scas
sub
push
enter
pop
mov
jmp
fwait
out
jge
pop
push
inc
movl
adc
mov
cli
ss
jbe
inc
enter
sbb
outsb
stc
leave
in
or
or
pop
cmp
push
das
and
dec
adc
or
inc
pushf
mov
popf
or
and
divl
inc
daa
adc
mov
clc
jmp
das
aas
popf
sub
push
pushf
loope
sbb
in
ljmp
push
dec
and
test
xchg
outsb
lea
repnz
dec
lcall
sub
pop
movsl
stos
fwait
mul
dec
clc
in
decb
aaa
rcr
pusha
das
repnz
loope
xchg
lods
es
repz
add
push
addr16
inc
jmp
add
sbb
nop
aad
mov
in
ds
sub
jp
popa
cltd
and
mov
les
sbb
cmp
scas
test
push
mov
lret
xor
pushl
dec
loopne
loopne
je
cmpsl
sbb
andb
insl
cmp
pop
cmp
clc
cli
fwait
imul
sahf
jnp
dec
push
gs
sahf
mov
jo
xor
notl
pop
sbbl
cltd
adc
inc
je
jp
mov
sti
adc
xchg
incb
xchg
sahf
leave
mov
or
xlat
out
jae
mov
in
fstl
mov
hlt
sbbl
adc
jns
insl
imul
outsb
aaa
lock
aam
sahf
push
mov
ja
js
int3
je
adc
sbb
and
add
xchg
push
rcrb
test
ja
rolb
inc
adc
ret
test
cld
add
fs
lock
bound
int3
inc
jp
ljmp
cmp
inc
dec
orb
and
int3
out
mov
mov
adc
inc
shll
aaa
xchg
cmp
sahf
push
inc
jp
ljmp
push
popf
sbb
pop
inc
cltd
rorb
sub
xchg
jmp
add
movsl
and
sub
cmpsl
mov
adc
pop
jg
nop
xchg
mov
imull
fmul
adc
inc
and
stos
sahf
cmp
xchg
ljmp
cmp
adc
mov
push
call
sbb
in
push
int
and
add
mov
cwtl
out
mov
push
loope
insl
ja
pop
inc
push
adc
sbb
std
cmp
fnstenv
xchg
pop
mov
jp
scas
test
loopne
or
add
imul
push
xchg
loop
fimuls
jmp
jg
test
stc
idivl
rcrb
mov
inc
add
inc
pop
cmp
and
mov
mov
lods
xchg
bound
shlb
inc
and
push
ja
jae
sub
fdivr
addl
jg
xor
inc
pop
scas
fildll
push
inc
pop
into
mov
adc
mov
sub
pop
mov
mov
fmuls
cmc
mov
adc
xchg
dec
sub
and
jb
sub
popf
mov
and
cwtl
jo
mov
dec
mov
push
cmpsb
inc
pop
addr16
pop
mov
fisubs
sahf
add
push
sub
test
add
mov
xor
jecxz
ds
adc
jecxz
and
add
sbb
cmpsb
loop
or
mov
push
cmp
mov
cmc
jmp
and
push
mov
arpl
enter
mov
sbb
lret
loopne
and
sub
je
arpl
es
mov
xor
sbb
xlat
push
pushf
xchg
or
fwait
scas
push
gs
shrb
addr16
les
push
pop
mov
push
add
cmpsl
ffreep
cli
lock
fucomi
push
stos
mov
fidivl
jns
mov
das
ret
xor
jecxz
and
ja
mov
shlb
sbb
sar
jmp
fidivrs
in
dec
jb
out
sbb
aam
aaa
bnd
aam
cmc
adc
clc
test
add
sbb
sahf
and
mov
icebp
ret
test
jp
out
jb
clc
jne
scas
fwait
cmp
jno
into
pop
xchg
enter
pusha
mov
mov
lods
mov
clc
xor
mov
shrb
and
xchg
sub
loopne
sbb
xor
or
dec
std
ja
pushf
mov
and
jmp
lds
pop
xor
sbb
repz
and
pop
xor
sbb
sar
sbb
insl
cs
mov
mov
popf
mov
mov
sub
shl
lahf
sub
sbb
scas
mov
sbb
xchg
pop
loopne
mov
scas
popf
fistl
cmp
out
or
ja
les
es
fdivs
xor
jp
cmp
jno
sbb
sub
sub
cmpsl
jnp
repz
xchg
add
cmpsb
adc
xchg
loope
mov
in
pop
push
addr16
mov
pop
inc
es
es
dec
pop
or
pop
and
cmpsb
ficomps
cmc
in
jecxz
sarl
mov
inc
jl
mov
sub
test
addr16
lods
nop
mov
or
inc
in
adc
push
mov
pusha
test
dec
pop
push
je
mov
ds
dec
mov
cmp
ja
imul
xchg
pop
adc
adc
xchg
and
xchg
insl
inc
les
sbb
lds
fs
fldl2t
lea
push
pop
pop
sub
hlt
xchg
and
cs
inc
mov
add
xchg
dec
dec
mov
cmp
jb
lret
and
sti
lea
andl
test
lret
enter
fsubp
jns
inc
add
lock
xor
out
jb
add
les
push
fldl
cwtl
cmp
faddl
jmp
and
fldenv
test
loope
jmp
movsb
test
mov
das
ret
out
rcrl
mov
mov
mov
jge
cltd
jno
push
cmp
or
lock
out
xchg
je
imul
xor
xchg
ljmp
ja
clc
pusha
push
jmp
ficoml
jle
or
cli
call
or
adc
mov
xor
repnz
sbb
xchg
add
data16
pop
daa
jecxz
cmp
icebp
sub
adc
in
sbb
stos
push
xor
les
dec
mov
sub
aam
jp
sub
sbb
push
setge
and
mov
ja
iret
sbb
daa
imul
and
outsb
push
or
cwtl
push
dec
add
pop
pop
aaa
or
cmp
inc
sbb
movsb
mov
xchg
xchg
push
pop
push
push
mov
fimuls
outsl
mov
cltd
mov
xor
add
sub
inc
fildl
mov
imul
das
mov
insl
iret
test
jp
nop
rclb
xlat
fnstcw
cmpsl
or
mov
cld
mov
ljmp
mov
lea
les
dec
cmpsb
jge
sub
arpl
mov
sbb
aas
inc
dec
adc
clc
sub
lea
cmpsl
mov
or
pushf
fdivrl
mov
inc
push
cli
cmp
fprem
mov
movsb
daa
mov
inc
leave
bound
or
lret
in
pop
pop
insl
adc
adc
cmc
xchg
cmc
mov
adc
lods
fsubrp
xchg
insl
pushf
cmp
imul
mov
shlb
loope
xchg
stos
mov
jge
push
xchg
scas
push
icebp
dec
lcallw
out
adc
test
xlat
jbe
insl
pushf
mov
andl
pop
push
dec
repz
subb
scas
mov
sub
push
sub
into
pop
inc
in
out
dec
gs
push
test
in
outsb
insb
fs
sti
clc
adc
dec
cmpsb
push
addb
or
popf
daa
fmull
jmp
mov
sbb
or
pop
fwait
out
ret
mov
in
lods
in
cmp
inc
ja
fsubrp
lahf
push
mov
ja
xor
jbe
movsl
mov
call
fcomps
mov
cpuid
mov
adc
pop
jno
imul
gs
outsl
hlt
or
mov
test
xchg
push
jg
in
imulb
stos
dec
dec
les
shll
add
int3
popa
int3
rcrb
dec
push
aaa
cmpsl
pop
fnstsw
movsl
stc
mov
push
adc
lret
lcall
inc
dec
or
cmp
addr16
sub
and
jg
mov
mov
movsb
shll
push
xlat
imul
mov
loope
repz
mov
fcmovne
shrl
mov
inc
mov
mov
in
lret
aas
popf
xor
enter
mov
shll
pop
inc
push
pop
das
cmpsb
call
inc
pop
push
repnz
mov
cmc
insl
adc
add
data16
je
cld
adc
pop
jno
repnz
and
xchg
mov
negl
stos
inc
xorl
lock
pop
pop
stos
xchg
cmp
repz
dec
pop
mov
in
dec
jp
adc
dec
and
xchg
sub
icebp
in
xchg
adc
xchg
into
mov
imul
push
mov
or
test
cmp
add
mov
cmp
mov
xchg
dec
js
and
addb
aad
jecxz,pn
jae
icebp
lret
outsl
sub
xor
pop
je
add
push
outsb
mov
jbe
push
outsl
popf
in
std
inc
add
pop
dec
push
cmp
insb
sbb
cld
sub
mov
insl
rclb
imul
cmp
mov
movsl
jne
ret
imul
int
add
and
pop
in
cs
lods
xor
int3
xor
pop
sbb
or
push
cmpl
add
in
ret
bnd
pushf
dec
sub
pop
inc
inc
xchg
cli
xorb
shll
mov
and
repnz
cmp
jp
in
stc
cmp
add
outsb
or
gs
scas
mov
call
push
inc
push
in
xor
xchg
or
push
dec
sub
cmp
mov
xlat
inc
push
je
lret
and
pop
dec
fs
pop
out
xlat
lods
push
lock
add
xorl
iret
stos
push
mov
mov
lret
xor
xchg
pop
jo
fwait
movsl
bound
mov
push
lods
hlt
lahf
mov
fs
clc
xlat
lea
test
adc
dec
ret
cmpsb
subl
js
outsl
add
add
add
pop
mov
daa
data16
scas
lahf
movsl
ror
test
xor
xchg
inc
sub
cmpsl
push
lds
sbb
jecxz
pop
push
xlat
jge
sub
scas
int3
mov
mov
icebp
push
stos
in
in
lds
or
and
sbb
push
es
mov
test
add
and
jne
dec
sbb
add
in
cmpb
cwtl
jmp
mov
xchg
add
scas
fldl
fistpll
adc
pop
sub
out
add
cltd
push
mov
pop
outsl
sub
mov
ds
jo
lds
fldt
push
add
mov
mov
pop
out
nop
dec
inc
hlt
cmpl
std
arpl
lods
fld
push
in
xchg
shl
sarb
cmp
add
test
mov
mov
sub
outsb
push
popf
inc
out
xchg
in
int
mov
sbb
nop
incb
cmp
loope
sbb
insb
mov
std
les
out
xlat
mov
popf
test
pushf
add
dec
and
fcmovnbe
add
and
xchg
ret
es
mov
push
pop
sub
test
inc
rorl
dec
stos
mov
popa
movsb
rcll
xor
sarb
ja
xlat
dec
mov
out
xor
mov
bound
addr16
insb
stc
nop
and
mov
push
jns
je
fstpt
inc
mov
or
pop
xchg
fnstcw
std
repnz
loopne
gs
mov
jg
and
into
push
push
inc
mov
aam
dec
lods
add
inc
inc
movsl
movsl
push
cmp
shlb
ja
aaa
and
mov
out
sub
add
pusha
pop
mov
add
addr16
lcall
xlat
addr16
cmpsb
ja
jns
xchg
add
inc
nop
mov
dec
addl
jo
inc
xor
pop
and
arpl
mov
lea
sbb
mov
add
arpl
lds
push
xchg
push
push
popf
mov
dec
jo
mov
sti
repz
jl
sub
lods
dec
jae
stos
cli
jg
outsl
inc
adc
sbb
sub
nop
js
mov
or
icebp
lret
sbb
add
jmp
xor
mov
in
adc
xor
push
test
jecxz
movsl
pop
push
bound
scas
daa
and
sub
pmaxub
push
into
aad
outsb
mov
cmpsl
aas
pop
jo
aad
pushf
cmc
push
fcoms
rorl
dec
xchg
xchg
sbb
inc
and
jp
shrb
and
test
pop
or
fldt
ljmp
int3
and
enter
fildll
lcall
inc
aam
ss
xchg
pop
rorl
mov
bound
rolb
and
repnz
popa
xchg
dec
mov
repz
aad
sub
ret
cmp
repz
stos
shll
add
repz
push
adc
fs
sub
sahf
sahf
ret
pushf
push
xlat
pop
and
lret
call
mov
mov
dec
cmpsb
shr
jnp
testb
fisubs
mov
lahf
stc
inc
addr16
pop
mov
shl
daa
nop
add
pop
and
jbe
xchg
push
out
inc
adc
pop
push
aas
cmp
cs
adcl
inc
dec
test
inc
inc
inc
andb
xlat
cmp
mov
jle
js
movsl
push
dec
push
dec
int
insl
adc
or
add
mov
add
aaa
sub
xor
test
push
fwait
lea
sahf
popa
jle
in
dec
aam
hlt
int
ds
add
adc
iret
test
sub
adc
lcall
pop
xchg
mov
dec
inc
xor
sbb
cmp
lods
xchg
mov
pop
adc
add
enter
js
orl
jne
ret
add
daa
xchg
lods
cmp
sbb
setns
xor
clc
ljmp
sbb
sahf
pop
jno
dec
mov
lar
push
or
daa
pop
in
jg
into
test
inc
mov
shrb
iret
mov
lcall
lods
pusha
insb
xlat
xchg
cmc
xchg
inc
and
cmpsl
ret
or
into
or
pop
cs
dec
test
rol
popa
jb
fcmovne
dec
mov
push
and
jge
pop
mov
pop
aad
ret
fisubrs
dec
mov
pop
test
push
mov
fwait
aad
aaa
xchg
enter
cltd
cltd
ds
shrl
dec
fstps
adc
pop
and
xlat
stos
pop
mov
add
jle
ffree
out
inc
fnstsw
jb
mov
popa
mov
mov
or
fwait
cmc
insb
jb
xor
in
inc
daa
not
lea
repz
and
sub
mov
cwtl
das
jno
sub
adc
pop
int
movsb
pop
cwtl
sbb
jns
sub
cwtl
imul
jnp
fldcw
sub
imul
pop
cltd
sub
mov
test
mov
inc
push
push
loope
cmp
push
xor
mov
rdmsr
popa
cwtl
repz
cmp
adc
pop
ret
scas
clc
daa
lcall
xchg
mov
sbb
push
ljmp
or
or
mov
movsl
or
mov
lahf
mov
mov
mov
clc
dec
imul
adc
mov
mov
mov
push
and
pop
dec
adc
pop
mov
sub
push
fs
inc
jg
cmp
div
mov
mov
push
pop
mov
int3
sti
subl
add
sbb
mov
xchg
push
aas
pushl
push
xchg
sbb
ret
pop
pop
mov
dec
out
call
dec
int
pop
xor
sub
pop
inc
mov
iret
sbb
dec
call
mov
jle
pusha
std
pop
lahf
sahf
insb
jae
arpl
sub
xorb
sbb
xor
jmp
inc
add
fcmovbe
int3
popa
mov
enter
pop
in
jmp
mov
sub
fsubs
jae
fisubrs
mov
push
orb
ret
xchg
insl
adc
sub
sbb
lods
jns
adc
jnp
jmp
aas
sbb
push
rorb
scas
mov
or
mov
push
mov
stos
stos
iret
dec
test
in
jecxz
ljmp
cmp
fs
dec
dec
std
gs
insb
inc
inc
push
aad
push
je
pop
inc
shll
xchg
out
mov
push
cmpsb
push
mov
cs
pop
sbb
icebp
into
mov
push
xchg
jmp
or
js
cwtl
repnz
add
jmp
cmpsb
loopne
loope
aaa
xor
add
and
dec
xor
pushf
or
mov
push
leave
jg
test
sbb
adc
ds
inc
push
xchg
sub
pop
fs
dec
aaa
sarb
jno
daa
pushf
mov
mov
jns
sbb
bound
sbb
push
dec
stos
xor
rcrb
jb
jmp
or
cmp
adcb
mov
ja
lock
sbb
pusha
mov
add
roll
xchg
pop
or
subl
icebp
ret
jno
cmc
or
xchg
arpl
je
pop
out
outsb
ss
outsl
cmp
sti
ss
lahf
test
dec
add
sbb
xchg
pop
ss
cmpsb
ret
dec
adc
movsl
or
mov
xchg
daa
icebp
cmpsl
pop
xchg
mov
aad
push
and
xor
adc
mov
push
and
push
icebp
cmp
inc
test
cltd
fsubs
cmp
jne
aam
push
pop
cli
xchg
test
and
sub
sbb
mov
inc
push
repz
push
rclb
pop
hlt
jno
sahf
push
inc
push
leave
aas
test
test
jmp
push
pop
pop
xchg
jp
pop
jo
nop
movsl
inc
xor
inc
push
cmp
add
pop
mov
pushf
les
test
dec
xchg
sarb
inc
in
cmpsl
inc
adc
outsb
pushf
fistps
lock
repnz
xor
and
sbb
push
fistpl
and
xor
lea
stos
call
and
and
push
popf
push
or
movsb
pop
sub
aad
lret
rolb
add
dec
dec
sbb
dec
icebp
pushf
rdpmc
sbb
inc
and
stos
fcmovnb
jbe
or
mov
imul
xchg
cwtl
stos
jne
jp
rcl
ja
inc
int
in
push
fiadds
push
sbb
ret
ds
insb
clc
add
sahf
lock
scas
xor
scas
gs
repz
pop
pop
inc
into
imull
xor
sub
lds
jle
adc
xor
aaa
int3
movswl
mov
icebp
xchg
pop
insb
test
testl
sbb
add
mov
adc
sub
xor
movsl
icebp
scas
subl
and
sub
fbstp
popf
stos
xchg
mov
daa
aad
jns
imul
xchg
push
insl
cs
clc
sub
and
pop
shlb
sbb
inc
mov
loopnew
mov
and
out
cmp
mov
cli
ss
leave
jmp
cmp
andb
jecxz
mov
adc
mov
data16
jne
adcb
stos
xor
sbb
and
pushf
jnp
xor
sub
pusha
adc
cmpsb
mov
pop
lock
sahf
dec
push
jle
add
decb
xor
cmp
mov
add
mov
and
aaa
out
adc
mov
in
ljmp
pop
pusha
mov
je
movsl
sub
fldcw
mov
loope
outsb
dec
subb
lret
sbb
cmp
loop
fcmovnbe
mov
mov
sub
in
adc
xchg
xchg
jg
push
mov
stos
loope
fists
inc
jo
ja
push
sub
es
iret
fwait
cmp
scas
imul
test
bnd
sbbb
div
push
aaa
test
rorb
repnz
dec
xor
iret
dec
scas
push
fcmove
sahf
cmp
repnz
scas
sbbb
xchg
mov
movsl
or
mov
das
ret
adc
imul
jns
mov
add
fnstcw
cli
mov
cmp
xor
aad
das
push
or
iret
jmp
pusha
sbb
jbe
cltd
loop
xchg
inc
sub
scas
sub
fs
pop
mov
sbb
imul
mov
inc
aad
in
arpl
pop
mov
push
lret
jns
out
das
pop
pop
fcoml
dec
and
or
cmp
call
call
push
jmp
xor
ret
inc
push
popa
nop
jo
dec
in
lock
inc
inc
push
cmp
imul
cltd
scas
xor
cmp
xchg
push
add
cmp
movb
sub
fldt
sahf
push
icebp
ret
jo
add
cmp
icebp
bound
repnz
add
or
pop
out
mov
xor
cmp
shr
cltd
sub
fwait
mov
test
fidivrs
sbb
pop
xlat
ret
inc
and
or
out
lds
pop
push
addr16
lea
jp
mov
das
addr16
jmp
mov
rolb
mov
lods
inc
iret
adc
inc
out
push
sbb
jb
incl
push
in
jmp
jmp
inc
fimull
into
out
stc
xchg
outsb
loopne
xor
enter
inc
mov
fdivl
cltd
mov
jns
fdivrl
leave
rorb
fnstenv
dec
or
cmp
xor
cmp
push
mov
sar
es
and
xchg
cmp
bound
jle
mov
sbb
adc
push
ljmp
sbbb
mov
xlat
adc
icebp
daa
lret
adc
inc
adc
ss
repnz
mov
fs
in
aam
aas
gs
dec
int3
daa
stc
jo
repnz
fldt
and
int3
adc
xlat
fcoml
rcr
inc
add
mov
jne
pop
cmp
jo
or
out
dec
cs
mov
adc
sbb
iret
push
jg
or
jp
fs
enter
adc
movsl
push
pusha
int
cmpsl
ljmp
inc
adc
sbb
inc
scas
sub
push
aas
ljmp
adc
push
addb
testl
loope
mov
cmp
pop
daa
ret
push
rorb
sub
mov
fs
call
mov
fsubp
or
lds
mov
xor
adc
jns
iret
mov
xor
mov
xorl
test
fstpt
pop
repnz
sub
cmpsb
jp
loopne
sbb
jmp
mov
lret
loope
sbb
mov
lcall
cld
pushf
adc
shll
sbb
fwait
mov
push
out
test
lret
and
pop
or
pop
les
push
xor
cmp
addl
jl
mov
or
loopne
mov
out
mov
and
mov
cmp
pusha
ljmp
mov
pop
cmp
scas
pop
sbb
mov
lea
lret
pop
repz
mov
cmp
mov
mov
cmpsl
movsb
mov
push
xchg
cltd
pop
push
cmp
push
scas
pop
inc
mov
pxor
ds
and
cmp
or
nop
int3
push
fwait
sub
sub
shl
mov
xor
pop
fs
sub
add
out
jae
iret
add
incb
int
pusha
into
jge
ljmp
js
fnstsw
out
or
jecxz
add
data16
mov
das
push
lds
add
adc
sub
test
mov
jno
dec
stc
or
mov
xchg
push
cmpl
fwait
xchg
sbb
fisubl
pop
adc
popf
xchg
mov
mov
jb
xchg
pop
icebp
jle
scas
ret
mov
pop
or
push
aas
pop
imul
std
test
int3
dec
loop
faddl
push
aad
cltd
pop
or
cmp
pop
movsb
push
sbb
inc
add
divb
and
stc
pop
iret
jg
cs
xchg
aad
push
fsub
pop
aas
out
fimuls
adcl
jo
cmp
mov
mov
jmp
add
xchg
mov
mov
inc
pop
ret
mov
dec
xor
sbb
inc
dec
mov
in
or
aas
outsl
xlat
xor
sbb
inc
stos
pusha
dec
iret
xorb
mov
cltd
sub
push
nop
push
and
mov
loop
lock
mov
jge
je
pop
push
fs
pop
fwait
sarb
mov
jmp
in
fwait
les
jae
sbb
enter
jg
inc
mov
jle
in
pop
jns
loopne
xchg
push
mov
pushf
add
mov
mov
mul
dec
outsb
lcall
push
add
or
add
xlat
jp
in
rcrb
mov
mov
subl
mov
sbb
inc
or
mov
out
divl
mov
xchg
mov
test
push
aad
aas
pop
ljmp
jno
out
insl
clc
js
leave
lahf
or
fwait
aad
pop
xor
mov
mov
addl
cltd
inc
or
out
outsl
aad
sbbb
sbb
xchg
add
jae
xchg
mov
out
stc
cltd
xor
fldcw
repnz
imul
daa
pop
repz
mov
inc
lcall
rclb
and
out
mov
push
lcall
dec
dec
ljmp
ds
mov
jl
aam
adc
pop
std
mov
mov
and
lret
pop
xor
cwtl
outsb
loopne
mov
lret
in
shlb
scas
lcall
in
dec
jne
sbb
xor
popa
scas
push
mov
in
mov
mov
cli
cli
movsb
jle
mov
lcall
outsl
mov
or
cmp
icebp
mov
mov
shl
mov
fcomps
popf
xchg
ss
sub
mov
loopne
mov
out
dec
cs
addr16
popa
push
jg
jge
out
repz
and
add
mov
ds
pop
icebp
aas
xlat
mov
inc
and
out
rol
and
gs
add
or
inc
push
int3
jmp
mov
insb
je
dec
mov
sbb
ja
jbe
repnz
pop
dec
int3
shrb
repz
imul
in
mov
adc
fstpl
lock
jne
repnz
dec
and
in
or
test
pop
jo
dec
pop
cmpsb
fxch
xor
pusha
push
mov
xchg
pop
das
inc
mov
imul
pop
push
xor
cs
mov
js
xchg
xor
xchg
idiv
mov
call
xor
inc
inc
mov
push
xchg
adc
xchg
xchg
sub
mov
aas
xchg
jae
in
mov
jnp
sbb
push
out
insb
lods
adc
xlat
sbb
aaa
jae
jl
jge
subl
sbb
jmp
fistps
mov
pop
movsb
pop
repnz
mov
frstor
jmp
repz
mov
cmp
cli
out
cmp
into
mov
test
sbb
and
ds
inc
cmp
cmpl
nop
add
xchg
pop
cwtl
dec
mov
popf
pop
pop
andl
popa
push
dec
adcl
pop
mov
mov
loopne
arpl
je
mov
push
xor
ds
cmpsb
cs
or
js,pt
mov
aaa
mov
lret
jmpw
outsl
dec
movsl
add
sub
imul
stos
cmp
insb
jnp
fwait
test
mov
sets
xlat
aam
mov
ss
xchg
mov
roll
add
fstl
and
xchg
rorl
add
mov
lods
and
cmp
hlt
push
mov
imul
dec
enter
movsb
in
xchg
int3
bound
call
sub
in
rcl
iret
hlt
mov
aad
lds
sbbl
addb
mov
mov
adc
popa
fnstsw
lds
mov
cmp
mov
pop
fimuls
pop
sahf
bound
sub
dec
jae
adc
xchg
pop
les
outsb
xor
fsts
aad
dec
test
xchg
jo
jo
mov
cmp
and
jmp
dec
lret
lcall
fildl
fsts
ret
cmpsl
ret
jmp
cwtl
sahf
push
pop
or
lock
sti
fildll
lcall
ret
cld
test
jmp
pop
imul
sbb
icebp
pop
outsb
inc
fistpl
scas
lea
call
pop
or
sub
and
fidivrs
out
orb
mov
push
lods
mov
mov
push
inc
inc
arpl
mov
xchg
cmpsb
jg
mov
push
arpl
dec
stc
push
xchg
fsub
std
push
dec
sbb
loopne
xor
mov
ret
push
push
fisttpl
mov
inc
push
dec
sbbb
inc
add
mov
enter
fsubl
xchg
sub
loop
into
push
sub
loop
inc
out
addr16
adc
pop
clc
movsl
pop
xor
sub
sti
mov
xchg
into
scas
add
sub
iret
in
mov
push
movsl
xlat
xchg
cmc
lods
nop
loopne
sub
xchg
or
inc
dec
add
rolb
cld
out
pop
inc
addr16
pop
les
dec
stos
adc
movsb
mull
mov
hlt
push
aaa
andb
sti
fisubrs
arpl
mov
daa
pop
test
movsb
or
stos
push
cmp
inc
inc
cmp
push
cmpb
xor
icebp
mov
inc
sbb
push
xchg
jmp
sbb
xchg
inc
push
sub
and
and
adc
shlb
or
mov
ljmp
and
scas
std
mov
cmp
mov
pop
sarl
sbb
xchg
and
pop
mov
fdivs
jle
mov
sub
xchg
popf
stos
movsl
mov
in
xchg
pop
inc
imul
aas
or
subw
or
or
mov
fadd
dec
xor
in
mov
lods
mov
add
stc
stc
jle
mov
and
push
daa
and
dec
jns
shlb
jo
push
mov
jle
jmp
xor
int
aad
arpl
rclb
insl
xchg
xchg
out
inc
jle
cmc
cmpsl
xchg
mov
xchg
or
jg
dec
daa
cld
jnp
jno
ret
mov
push
mov
lods
les
mov
mov
ljmp
pop
std
out
cmp
inc
insl
cwtl
sarl
dec
ss
add
cwtl
mul
outsl
cltd
aad
pushf
xchg
das
int
inc
xchg
repz
fcompl
stos
fs
aam
loop
push
lods
xchg
insb
cli
jno
ja
pop
pusha
adc
stos
sbb
pop
movsb
mov
cmp
stos
and
sbb
mov
gs
xchg
jl
push
sub
call
js
cmp
xchg
aad
mov
dec
sbbl
ja
in
jg
out
or
out
pusha
xor
lret
out
push
xlat
stc
sbbl
or
adc
mov
xor
jnp
inc
mov
sar
dec
imul
mov
loope
in
gs
dec
aam
shll
lods
adc
xchg
or
mov
adcl
sbb
jbe
or
dec
pop
or
js
ret
xor
das
pop
xor
fcoml
dec
jbe
clc
add
sub
adc
push
push
pop
addr16
dec
out
cmc
shlb
dec
xlat
cmp
adc
xchg
cmp
cli
push
pop
test
jbe
pusha
loope
mov
ljmp
mov
xor
shlb
testb
in
insl
test
pop
jne
sti
inc
imull
outsb
clc
mov
and
xor
xchg
loope
iret
dec
fbstp
andb
cmc
adc
lods
pop
push
push
insl
icebp
inc
cmpsl
inc
mov
jnp
xor
xlat
cs
outsb
mov
push
aaa
cmp
jge
or
flds
jae
lret
inc
dec
push
xchg
and
sbb
sbb
mov
movsl
pop
dec
and
xor
outsb
test
inc
xchg
nop
sbb
stos
sbb
arpl
push
arpl
mov
mov
aam
sub
inc
jmp
push
iret
test
insl
adc
out
cmpb
sbb
sbb
jae
loope
or
push
lret
das
enter
jnp
div
and
lret
nop
cmp
movsb
sub
xor
add
and
fildll
mov
mov
sbb
xchg
icebp
cmpsl
cmp
aad
incl
subl
hlt
push
dec
sbb
pop
add
test
xchg
dec
ss
jmp
xchg
sub
sbb
jb
ljmp
inc
sbbl
mov
scas
fs
jne
aas
das
das
push
add
std
xchg
scas
cwtl
sbb
sti
add
adc
jns
cwtl
inc
or
rorb
in
sbb
testb
popa
or
xchg
es
je
mov
inc
jae
sub
jecxz
xchg
pop
lock
arpl
shll
mov
lret
and
and
or
add
fdivrp
xchg
jne
sarl
mov
push
mov
scas
push
xchg
ljmp
out
cltd
loopne
pop
call
icebp
mov
popa
test
xlat
sub
cmc
insl
das
cmp
std
test
mov
out
adc
cmp
loopne
xchg
or
inc
stos
int
test
fmul
lahf
dec
dec
icebp
enter
shll
or
mov
adc
repz
aas
and
add
add
movsl
fwait
loope
mov
mov
addb
ja
in
sub
and
and
into
shrb
cmp
xchg
cli
add
mov
dec
arpl
inc
xor
stc
fs
out
pushf
xor
adc
mov
and
adc
fadd
sbb
int
shl
xchg
lea
jnp
daa
pop
ret
xchg
out
mov
clc
jle
lock
es
sub
dec
xchg
mov
fisttpll
scas
loopne
test
inc
mov
testb
aam
sub
mov
out
std
mov
pop
adc
mov
xchg
xchg
mov
or
mov
clc
cmc
sbb
imul
aad
lods
or
add
mov
lds
add
dec
in
pop
fdivrs
jae
mov
popf
push
fldl
dec
gs
out
mov
call
mov
lahf
fisubrs
es
mov
adc
inc
out
ljmp
loopne
pop
xchg
and
mov
inc
je
mov
xor
dec
ret
in
gs
cld
arpl
popa
pop
cmc
setb
fisttpl
cwtl
aaa
pop
adc
test
mov
outsb
sbb
sti
adc
mov
fstps
inc
lcall
xlat
mov
insb
push
jno
cwtl
xchg
andb
aaa
dec
lods
mov
nop
inc
aam
int3
jnp
stos
lods
mov
popf
int
push
cmc
das
or
adc
test
jge
incb
xor
dec
fiadds
fs
sahf
bound
out
insb
xor
in
mov
cmp
jmp
in
fwait
sti
cwtl
je
sub
test
or
mov
negb
sub
mov
bound
pop
sbb
inc
or
cli
rcll
nop
iret
add
mov
pop
loop
cmpsb
pop
fucompp
rcrb
push
xchg
call
dec
add
decl
dec
sbb
inc
test
mov
inc
inc
mov
gs
pop
ljmp
fs
int
pop
es
and
testb
aad
sbb
xor
loope
ret
mov
mov
fbstp
xlat
mov
daa
pop
sti
add
shlb
out
cmc
push
adc
lahf
sbbl
scas
adc
mov
pop
aaa
add
mov
loop
pop
add
cmp
cli
dec
sbb
pop
movsb
les
push
or
xchg
mov
add
movsl
stmxcsr
push
scas
xor
dec
or
sub
jge
mov
xchg
add
xor
sub
and
aad
outsl
mov
jae
leave
pop
popa
sub
sub
add
sbb
mov
pop
jns
lret
fwait
jg
das
sub
int3
out
dec
int3
aaa
andl
inc
aad
push
and
add
in
ja
ret
scas
popf
movsb
into
stos
mov
sti
adc
shlb
jno
pop
aad
shlb
cltd
test
and
dec
mov
lahf
jg
mov
xchg
std
lods
lcall
jbe
push
cmp
leave
inc
loope
outsl
xor
or
mov
xlat
flds
mov
insb
push
push
pop
stc
mov
daa
jmp
les
jno
xchg
push
xchg
ror
les
out
lcall
mov
jle
mov
aaa
dec
jno
adc
mov
jmp
jge
imul
adc
cmpl
dec
jne
sub
arpl
mov
mov
fsubrl
add
clc
mov
fadd
add
pusha
cli
push
insl
subb
add
iret
inc
dec
jo
mov
js
or
imul
xchg
jnp
das
movsl
pushl
pushf
push
outsl
stos
cmc
push
inc
faddl
push
push
mov
aaa
push
fwait
inc
jle
rcrl
jl
aaa
xorl
mov
out
sub
push
and
int
lock
cwtl
dec
jg
adc
pusha
das
bound
sbb
jl
fstps
cmp
orl
inc
inc
and
aaa
int
xchg
ret
test
dec
popa
xchg
mov
or
je
mov
add
aaa
cmp
push
or
out
mov
iret
xchg
sub
insl
sbb
dec
sbb
mov
loop
pop
adc
lock
aam
mov
inc
cmp
out
popf
lods
pop
mov
and
xchg
mov
ret
addr16
ficoms
sarb
inc
jb
sti
clc
dec
mov
in
cli
dec
push
cmp
xchg
mov
loop
adc
leave
cmp
popa
mov
push
push
mov
movsb
std
fidivrs
pop
ficoms
mov
bound
in
jb
add
in
in
addl
sbb
jg
cmp
inc
icebp
inc
movsb
or
add
pop
xor
dec
and
mov
or
xchg
ja
mov
mov
ret
adc
popf
jg
fdivr
jae
rolb
mov
jb
sarl
mov
jno
insl
sbb
or
pop
mov
jecxz
mov
jb
ja
push
and
lods
inc
xor
mov
je
ficompl
mov
repnz
lcall
ljmp
mov
mov
jne
xchg
xchg
dec
cmp
mov
push
aas
mov
and
call
jp
icebp
xor
loopne,pt
jb
sub
mov
fwait
mov
mov
jp
test
jp
stos
push
adc
ret
sub
ljmp
aas
aaa
inc
ret
jbe
add
movsl
outsl
aam
jp
pop
inc
and
jno
addr16
or
daa
xchg
mov
hlt
in
dec
push
lahf
sbb
push
or
mov
adc
fwait
and
neg
and
add
dec
out
adc
push
pop
das
cmp
and
xor
or
dec
cmp
adc
mov
pop
in
lret
shll
fadds
and
out
int3
sbb
adc
cli
in
popf
icebp
push
mov
test
lcall
push
aad
or
test
or
fists
movsb
sub
fwait
inc
jecxz
push
mov
test
push
mov
aaa
lret
rcrl
push
mov
xchg
jae
outsb
popa
xchg
outsb
je
or
mov
sbb
xchg
outsl
mov
shrl
test
rcr
shll
xchg
nop
insl
fs
mov
xchg
aad
outsb
fldcw
pop
movl
cmp
std
xchg
xchg
aad
test
dec
inc
lds
xor
xchg
inc
mov
xchg
test
or
stos
xlat
or
sti
sbb
popl
sbbl
or
test
xchg
testl
mov
cmpsb
jle
adcl
lods
xchg
lock
test
lahf
adc
in
int
mov
ret
jecxz
jmp
sbb
aas
push
sub
imul
inc
sti
cmp
push
inc
dec
inc
cmpsl
out
les
inc
sbb
ss
pushf
push
arpl
add
cmp
push
jbe
ss
pop
push
outsb
dec
pop
xchg
mov
sbb
pop
shll
rclb
cmc
cmp
mov
rcrb
mov
pop
pop
pop
test
enter
mov
movsb
imul
cmpsb
lcall
xchg
jne
stos
push
push
inc
arpl
jecxz
int3
je
jmp
sub
or
dec
repnz
rcll
xchg
and
leave
mov
stos
addb
cwtl
pop
dec
testb
popa
jg
rcrb
outsb
ljmp
fwait
pop
mov
xor
mov
sub
sahf
adc
or
pop
jmp
and
push
sub
test
in
inc
xchg
insb
pop
or
mov
cltd
mov
out
incl
dec
out
xchg
xchg
mov
stos
mov
aaa
sbb
xchg
pushf
xchg
sub
xor
inc
or
sahf
mov
mov
adc
add
push
aad
repnz
push
xor
movsl
pop
notb
push
mov
inc
test
push
aas
xchg
fisubs
push
or
push
pop
fadds
or
mov
scas
jne
dec
push
insl
daa
fwait
mov
xor
dec
xor
mov
cld
inc
sub
adc
cmp
cmp
jge
sbb
pop
aam
dec
pushf
lock
sub
jne
pop
ds
sbb
push
cltd
push
pop
pop
out
loopne
add
inc
push
mov
add
inc
test
adc
adc
ficompl
xchg
cwtl
or
jne
pop
xchg
mov
out
jecxz
hlt
jecxz
shrb
jp
popf
xor
pop
aaa
sahf
mov
sub
mov
fucomip
cs
ret
jne
push
outsl
adc
dec
adc
push
pop
cld
ret
pop
pop
bound
or
notl
push
and
cmp
push
xchg
mov
fmull
mov
arpl
sti
shr
xor
mov
pop
mov
cli
dec
lea
mov
jmp
nop
outsb
rol
mov
loopne
stos
cli
cmpps
fbld
enter
in
jle
js
or
pop
pop
ds
pop
cmc
mov
fbstp
pop
adc
sbb
pop
clc
fwait
test
sub
add
push
xor
push
stc
icebp
cmc
movsb
pop
mov
aam
or
rolb
fcmovne
mov
push
ret
insb
sbb
daa
lcall
push
fidivl
mov
jno
loopne
adc
mov
dec
inc
cmp
mov
addb
test
fsubrl
sbb
jge
sub
inc
ja
cwtl
int3
enter
jb
stc
dec
mov
stos
fstpl
xor
stos
in
lock
pop
lret
stos
fidivl
in
jmp
xchg
pop
arpl
inc
in
pop
pop
sub
rcrl
or
sub
rcrb
arpl
lods
scas
dec
jge
add
and
lods
cwtl
adc
mov
or
and
lret
pop
push
movsl
jle
mov
cld
inc
and
stos
divb
sub
pop
jbe
xorb
aaa
fsubrp
sbb
lock
in
lock
mov
mov
jnp
sbb
pop
pop
je
lds
sub
cs
adc
jae
dec
lods
call
dec
int3
pop
xor
push
aam
fmuls
in
mov
ret
mov
ss
jge
cmp
mov
enter
jl
arpl
mov
dec
sti
in
sbb
enter
push
adc
fbstp
aad
mov
imull
clc
jnp
ja
aas
fisttpll
daa
and
inc
loope
mov
pop
arpl
int
mov
push
popa
clc
jmp
jl
pop
fmuls
adcb
and
popf
mov
pop
adc
movsb
xlat
sbb
sbb
fcmovu
outsb
xchg
icebp
mov
cmpsb
popa
sub
mov
iret
int
add
pop
jg
ja
lods
pop
pop
sub
sahf
cs
xchg
or
inc
and
fcmovnu
nop
jg
pop
cmpsl
dec
repnz
mov
loopne
mov
jmp
enter
mov
dec
push
int3
es
mov
xchg
sbb
xor
lock
movsl
push
sbb
push
pop
push
repnz
iret
lea
inc
pop
jecxz
push
daa
adc
cmp
je
mov
push
mov
cs
repz
in
mov
mov
cltd
mov
mov
iret
xor
out
xor
call
dec
movsb
ja
jge
cmpsb
es
inc
in
xchg
dec
call
jecxz
jge
mov
in
mov
fistpll
push
out
enter
scas
hlt
sbb
inc
mov
std
adc
push
dec
rcrl
mov
cmp
aaa
lods
scas
cmc
mov
cmp
mov
cmp
push
mov
popa
jecxz
or
inc
test
ret
leave
or
scas
pop
or
cli
jae
pop
xor
jmp
and
cmp
push
xor
fnsave
pop
and
or
clc
data16
loop
cmpsl
lcall
push
mov
cmp
xor
adc
popf
dec
jb
jmp
xchg
outsb
fwait
and
adc
sub
mov
dec
scas
fmuls
push
mov
clc
mov
mov
sahf
repz
xchg
push
push
insl
call
jge
adc
dec
out
sbb
jmp
fcoml
sbb
jg
inc
idiv
std
cmp
sbb
popa
and
and
movsl
pop
aad
movsl
push
pop
add
in
std
in
or
xchg
or
mov
sbb
or
mov
icebp
push
in
add
xor
sti
sub
or
mov
push
das
mov
push
and
inc
test
mov
add
in
xor
fwait
loop
rcr
xchg
mov
ja
cltd
xchg
lock
mov
inc
aaa
je
mov
sbb
fdivrs
fcompl
fs
pop
xchg
std
or
loopne
xchg
aad
xchg
push
inc
sti
xor
sub
mov
pop
jg
xchg
push
loop
fwait
sub
imul
push
cmc
cmc
cld
sbb
jmp
dec
leave
clc
xchg
sbb
cmpsb
bnd
pop
mov
test
dec
jmp
sahf
pop
sbb
ret
add
aad
mov
into
jl
ds
mov
cwtl
mov
mov
enter
testl
pop
xchg
push
xlat
pushf
sbb
lock
in
push
enter
add
lods
jmp
nop
fwait
imul
std
mov
dec
xchg
call
fisubrs
jg
cmp
vmovapd
mov
stos
xchg
push
or
xor
ss
sahf
inc
mov
sbb
xlat
lock
loope
paddq
xor
push
cwtl
cmp
mov
das
or
pop
mov
cmpsl
int3
sub
and
shlb
addb
jns
ds
aam
or
movsl
stc
lock
inc
stos
fisubrs
ss
pop
lea
dec
pusha
xorl
sub
mov
movsl
stc
push
call
scas
xor
mov
fildl
mov
testl
inc
es
dec
push
sbb
addb
and
push
sbb
jne
clc
movl
popa
ds
aad
mov
stos
lret
sbb
cmpsl
jg
test
sbb
mov
das
push
in
out
das
pop
adc
aas
push
and
aad
sub
jns
cltd
int3
pop
inc
pop
in
push
inc
push
inc
inc
add
aaa
fists
sbb
data16
mov
dec
pop
or
xchg
loop
or
cmp
aam
pop
and
adc
jb
push
hlt
mov
mov
mov
add
test
lods
cmpsl
outsl
mov
in
iret
sub
das
int3
lret
data16
mov
push
cmpsb
sbbl
in
popf
out
dec
push
aam
xchg
sub
add
fimull
sbb
sub
or
es
shrl
iret
jge
or
and
push
mov
dec
rcrb
pop
adc
movsb
call
add
fwait
insl
fsin
jne
movsl
loop
out
sbb
in
xor
inc
xor
push
sub
sti
cmp
add
mov
test
xor
lcall
mov
dec
inc
fucomi
sbb
lret
jns
mov
add
out
daa
or
test
and
cs
mov
pop
mov
lahf
or
add
mov
lods
inc
fiaddl
mov
lret
into
arpl
xchg
jmp
cmp
push
cmp
mov
fwait
repz
outsl
cmp
shll
xchg
ret
ss
pushf
add
pop
lret
cmp
or
fiadds
pop
fwait
push
sub
stos
push
sarb
in
mov
and
pop
adcl
testb
mov
out
std
mov
movsb
dec
cmp
add
subl
push
jns
data16
xchg
sahf
lea
push
loope
dec
repz
ljmp
fwait
cmpsb
push
adc
pop
lods
std
fimull
mov
pop
adc
inc
in
mov
cld
push
mov
add
dec
ds
gs
scas
jecxz
les
ja
add
add
sti
outsl
in
sub
fnsave
ret
xor
loopne
dec
or
xor
inc
pop
mov
xchg
xor
insb
adc
mov
aam
sub
bound
imul
enter
aam
shlb
lret
sub
pusha
testb
xor
test
pop
xlat
mov
sbb
sub
aas
icebp
decb
mov
mov
xchg
sbb
cmp
out
mov
fstl
hlt
pop
jns
mov
sub
xchg
movsb
test
jnp
out
mov
mov
scas
pop
cmpsl
imul
insl
add
add
or
div
int
sbb
mov
fwait
xchg
pusha
pop
aam
push
addr16
xor
cwtl
rorb
xchg
lret
ja
lea
in
lea
xchg
jle
jmp
mov
cmpsb
cmpsl
add
pop
adc
push
xor
or
mov
inc
ljmp
xchg
inc
and
in
in
mov
and
or
scas
xorl
mov
gs
lret
inc
call
mov
sub
lods
pop
dec
jb
test
sbbb
fisttpll
xchg
mov
popf
loop
or
add
mov
in
cmpsl
dec
mov
cli
mov
lcall
out
dec
jecxz
int3
bnd
ss
sbb
sbb
orl
mov
jnp
pop
mov
mov
cmp
jae
push
cmp
cmp
aaa
fcoms
mov
movzwl
xor
cmp
lods
pop
jmp
inc
fists
xlat
out
or
lahf
inc
in
popa
stc
addl
enter
les
push
jp
ret
lret
lods
inc
mov
xor
jne
xor
xchg
dec
sti
sbb
int3
cmp
xchg
lret
sti
mov
dec
psubsw
xchg
jp
cmpsb
test
insl
lahf
adc
add
mov
pop
xchg
add
jle
aaa
adc
roll
mov
mov
lods
imul
inc
dec
push
fdivrs
rcll
xchg
cmp
mov
sub
xchg
and
mov
jae
xor
adc
stc
sub
mov
adcb
lds
sbb
frstor
sbb
sub
adc
les
push
repz
mov
inc
adc
cmp
mov
loop
int
mov
add
jmp
mov
push
mov
mov
cwtl
dec
pop
sub
cmp
ja
addr16
lahf
lret
cmp
shl
xlat
cltd
dec
popw
jnp
loop
negl
xchg
xor
lea
xchg
xchg
je
dec
loope
pushf
enter
call
ljmp
xchg
adcl
mov
jae
dec
adc
mov
pop
mov
push
or
push
mov
mov
shll
inc
lock
and
add
pop
stos
fnstenv
scas
xchg
stos
mov
fstpt
inc
mov
dec
repz
mov
mov
iret
mov
outsl
jecxz
adc
inc
pop
push
or
and
cwtl
mov
es
daa
aaa
xor
fcmovnu
les
test
ja
in
mov
mov
or
repnz
stc
cmp
jbe
pop
jmp
and
sbb
std
add
addb
lea
and
jae
and
mov
test
test
sub
adc
imul
mov
es
sub
ret
gs
cltd
int3
je
jle
jns
adc
sub
lret
mov
jle
scas
loope
pop
hlt
movsl
jnp
mov
sbb
jle
mov
test
push
aam
or
aam
adc
or
inc
arpl
popf
rclb
scas
pop
test
lock
sub
push
loope
sub
stos
inc
pop
pop
enter
je
mov
das
int
addr16
push
dec
aad
mov
fcom
xorl
cmp
call
xchg
push
inc
lahf
pop
jmp
nop
rol
and
mov
cmp
mov
rcll
loope
test
pop
adc
aad
or
mov
fnstsw
test
popa
mov
fwait
mov
adcl
test
or
es
inc
jg
mov
sbb
ror
or
mov
int3
scas
mov
aam
jecxz
lock
or
xor
call
out
imul
rolb
cld
push
lods
std
cmpsb
sub
into
hlt
fbstp
jmp
adc
push
push
shlb
in
shlb
scas
dec
cmp
arpl
movsl
daa
mov
xor
cli
lahf
std
loop
dec
jge
mov
pop
iret
jae
push
jo
cli
in
add
out
cmp
rclb
xchg
xchg
mov
add
and
push
popa
cmp
jge
sub
insb
pop
outsb
ds
jo
aam
push
xor
mov
push
test
out
mov
mov
popa
inc
push
xor
mov
xchg
dec
sub
sahf
pop
lcall
leave
pop
out
clc
mov
and
add
lods
fs
stos
inc
jp
push
adc
ret
icebp
dec
ficompl
repnz
sub
enter
sub
jb
inc
add
sub
mov
and
jge
inc
adc
mov
xor
pushl
dec
add
xor
aam
in
dec
test
loop
inc
adc
mov
insb
bound
cmp
inc
sub
int3
das
lahf
cli
in
enter
fwait
inc
ror
mov
xchg
lcall
in
sub
xor
test
addr16
decl
xchg
push
pop
pop
mov
es
or
sub
and
nop
out
cmp
jae
pop
xchg
loopne
dec
pop
vfrczsd
popa
imul
push
pop
xchg
aam
cmp
cmpsb
rclb
addr16
inc
aam
inc
push
cmp
scas
cmp
pop
mov
mov
push
pop
cmp
gs
dec
mov
idiv
and
rcll
jns
cmpsb
inc
xor
movsb
addr16
loope
adc
adc
inc
into
leave
jmp
or
mov
jle
mov
enter
and
adc
pop
addr16
ljmp
adc
adc
dec
loope
or
cld
cs
mov
cmpsl
cs
imul
jl
inc
sub
push
jae
fistl
xor
pusha
jmp
dec
movntq
pop
rcrl
stos
mov
decl
mov
das
inc
mov
std
outsb
out
pavgw
shll
jo
mov
add
imul
adc
jp
cmp
mov
and
addb
fidivl
call
popa
mov
fs
outsb
insl
ret
cld
insb
mov
adc
push
cld
or
mov
jle
cltd
lret
pop
jp
xchg
cs
in
ror
xchg
data16
cmpsb
int3
dec
inc
decb
pop
cwtl
pushf
mov
mov
ja
test
fisubrs
jno
cmp
jge
std
add
xchg
or
lret
rcrb
xor
lods
and
jecxz
jecxz
movsb
inc
cltd
orb
lahf
pop
jnp
jge
xor
test
mov
mov
sarl
lods
scas
ret
adc
push
idivb
jbe
aam
lahf
sub
xchg
fwait
cmp
in
xor
cmp
adc
dec
icebp
enter
arpl
sub
pushl
aas
mov
js
mov
adc
arpl
mov
outsb
out
push
dec
sub
inc
lds
mov
add
cli
call
cmp
es
hlt
mov
push
cmpsl
in
xchg
adc
push
jp
mov
testl
dec
outsl
aas
or
pop
imul
out
loop
cwtl
pop
xlat
mov
jo
dec
in
dec
outsl
push
stos
mov
push
aaa
inc
inc
mov
xchg
inc
xorl
inc
scas
cmp
lods
xchg
dec
inc
mov
or
fs
cmc
outsb
sbb
sti
popl
ja
pop
cld
stos
mov
cld
arpl
mov
inc
jecxz
loop
test
jmp
out
dec
pop
mov
or
je
pushf
mov
repz
enter
enter
leave
lods
lods
adc
cld
fdivl
stc
adc
pop
roll
xor
add
push
pop
outsb
mov
aad
cmp
imul
inc
mov
clc
or
idivl
notl
xchg
insb
std
shrl
mov
lahf
gs
adc
fsubrs
aaa
imul
adc
popf
add
jbe
in
sbb
popf
or
loopne
cli
xor
mov
sbb
jne
and
fiaddl
rcl
pop
cmpsl
out
xchg
and
test
adc
or
out
das
jge
jns
hlt
inc
sbb
pusha
push
and
popf
cmp
add
arpl
shrb
inc
mov
enter
scas
jns
inc
cld
fs
cli
popf
and
scas
fbstp
fldt
nop
cmpsb
dec
addr16
adc
cmc
push
cwtl
mov
mov
xchg
and
into
sub
int3
mov
adc
cmp
adc
out
out
mov
int
dec
test
xchg
or
ret
mov
pop
stos
in
jl
mov
inc
scas
inc
int3
xor
jg
mov
xchg
mov
mov
enter
lahf
add
ljmp
jecxz
in
add
popa
into
decl
mov
push
lret
mov
adc
push
and
mov
lea
movsb
dec
inc
pop
and
or
xor
pop
negl
dec
dec
jg
mov
jnp
jae
imul
dec
xor
add
cld
stos
rcll
out
inc
mov
out
cmpsb
mov
popa
and
xchg
pop
shl
push
outsb
lds
mov
pop
loopne
cld
mov
fisttpll
sub
sti
cmpsl
pop
mov
xchg
hlt
mov
push
es
popa
jecxz
ret
mov
adc
and
mov
lods
in
or
pop
in
push
pop
jno
or
sbb
notl
pop
jnp
repz
jmp
popf
sub
cmpsb
pushf
loop
or
addb
aam
rolb
test
and
mull
das
fcmovnbe
xchg
cld
pop
xchg
pushf
jnp
pop
mov
xor
jle
lahf
cmpsb
pop
add
roll
mov
pop
mov
pop
cli
xor
adc
shlb
pop
clc
fsub
cmp
or
cmc
shl
sbb
push
les
lahf
cwtl
pusha
inc
push
sub
push
dec
adc
inc
lods
xchg
xchg
dec
movsb
call
jo
add
in
push
jne
xor
cld
push
jle
sub
inc
loop
je
mov
jno
roll
sarb
and
push
xchg
in
mov
adc
repnz
push
insb
es
arpl
loop
mov
shlb
hlt
in
and
jb
sub
bound
inc
test
inc
test
data16
lret
push
or
pushf
jno
fiadds
and
adc
jb
fdivs
inc
and
or
mov
cmp
jle
mov
das
or
stos
jecxz
add
ss
mov
rdtsc
mov
pusha
sbb
dec
lahf
repz
in
xchg
xchg
shll
push
mov
xchg
test
inc
xor
addl
stos
inc
mov
fs
push
fs
loopne
xor
and
inc
add
or
jecxz
adc
adc
sub
xor
cmp
push
lahf
cmp
pop
xor
jmp
adc
push
xchg
dec
cmp
in
lret
pushf
sarl
lahf
inc
push
push
bound
pop
xorl
xchg
pop
movsb
divb
or
imul
pop
leave
inc
out
bswap
or
jbe
pop
cmp
mov
add
and
push
mov
popa
imulb
xchg
xchg
fisubl
xchg
and
lea
and
or
mov
xor
mov
dec
jo
cmp
jge
fcompl
scas
cmp
je
add
pcmpeqb
aas
inc
mov
xchg
icebp
lret
imul
jo
iret
sub
sub
push
xchg
inc
cmpsb
repz
inc
pop
enter
jg
shll
cltd
imul
fcmovnb
subl
push
add
inc
in
lret
push
fmuls
cltd
and
rcll
addl
jle
mov
subl
jge
fistl
dec
lds
addr16
xor
inc
sub
scas
icebp
scas
inc
into
push
mov
xor
add
pop
fisttps
push
dec
sbb
arpl
es
fmul
out
mov
movsb
pop
mov
adc
out
xchg
sub
cltd
adc
push
loope
adc
int3
mov
ss
lcall
mov
movaps
jmp
fidivrs
lds
test
hlt
and
and
fldt
pop
sarl
pop
xor
mov
pop
mov
add
push
repnz
jns
push
add
fdivrp
lea
cltd
mov
ret
out
into
jle
addb
aaa
pop
in
roll
sbb
and
or
pop
xor
fists
int3
cld
xor
dec
sub
push
aas
and
cmpsb
arpl
ds
or
jp
aas
mov
shlb
mov
push
aas
insl
test
cmp
fcom
lret
out
lods
int
mov
push
out
fisttpl
out
clc
or
push
dec
inc
or
and
cltd
inc
in
pavgb
aas
dec
and
arpl
in
sbb
push
mov
lods
push
xor
and
ja
lret
inc
mov
push
fisttps
or
adc
jmp
jo
inc
add
enter
enter
call
cmp
loopne
mov
jbe
xchg
jge
int3
push
xchg
or
in
insb
sub
add
pusha
jo
sbb
lea
pop
nop
mov
test
cltd
out
add
mov
mov
adc
out
call
sbb
mov
jmp
add
push
cwtl
insb
mov
sbb
fwait
filds
int3
clc
out
imul
sbb
or
in
xorb
cmp
pushf
add
sbb
repnz
xor
fsubl
mov
xchg
dec
cmp
push
and
jmp
push
pop
xchg
daa
xchg
lret
bound
inc
sbb
pop
int3
xchg
sbb
pop
fidivl
lods
adc
jnp
sub
xchg
pop
mov
xchg
sub
jmp
jbe
adc
push
repz
ja
fstps
mov
insb
sti
xchg
sub
add
aas
push
fstps
in
popf
cli
or
out
cs
jecxz
sbb
push
push
je
xchg
mov
add
aaa
arpl
and
sub
int
push
ror
pop
ds
icebp
data16
or
insb
out
into
sbb
mov
jl
mov
or
andb
xchg
sub
mov
dec
and
sbb
or
push
jmp
jno
hlt
fiaddl
repz
mov
jno
xorb
stos
jns
xchg
rcrl
mov
ja
paddusw
pop
inc
pop
adc
lret
mov
shll
shlb
shlb
mov
bound
jb
xchg
xchg
fs
mov
jns
pop
sahf
xchg
pop
ja
jno
dec
push
mov
xchg
in
ret
outsb
cli
je
cmpsb
sub
out
xchg
pop
mov
add
inc
jbe
fwait
je
fwait
sub
in
mov
cs
call
scas
xor
push
dec
stc
aam
dec
adc
and
ja
aad
push
call
cmpsb
jb
xor
aas
pop
mov
dec
cmp
jbe
xlat
sbbb
push
stc
lods
rcrb
mov
adc
or
adc
aam
aad
mov
int3
data16
fidivs
and
ret
lcall
push
xor
inc
js
push
mov
das
lock
and
je
xlat
pop
mov
or
frstor
mov
xchg
and
sahf
repnz
or
cltd
rorl
sub
xchg
push
test
and
inc
mov
mov
sub
pop
out
cltd
imul
mov
in
pop
outsl
repz
nop
push
push
fildl
sbb
es
nop
out
cmpl
cmc
fiaddl
sbb
push
and
iret
daa
inc
cwtl
addr16
sbb
mov
ja
mov
mulb
mov
jno
sbb
jmp
xchg
lods
push
loopne
dec
adcb
iret
lret
jnp
test
fs
je
adc
xchg
mov
adc
pop
pushf
cmp
jne
dec
rcll
sub
std
cmc
lret
jl
repz
enter
jae
mov
pop
jl
mov
jnp
mov
dec
jo
xor
inc
add
in
bound
cmp
sbb
pop
pop
push
xchg
push
push
icebp
mov
pushf
sbb
jp
mov
pop
push
ds
xor
lods
pop
cld
mov
xchg
stos
psubd
sbb
test
or
inc
clc
in
xchg
fiadds
andb
aaa
cmpsb
mov
xchg
fistpll
jne
scas
jb
imul
add
cmp
xor
adc
xchg
push
xor
sti
cwtl
mov
ret
adc
lret
test
adc
and
cli
and
aad
jns
jns
sbb
xor
stc
mov
ret
pop
insl
arpl
mov
andl
or
data16
shlb
ljmp
mov
mov
mov
mov
test
loope
lock
sbb
dec
sub
xchg
adc
xchg
ret
icebp
or
out
sbb
ljmp
in
mov
gs
and
addb
xorb
pop
xchg
and
cmp
gs
push
fwait
imul
mov
cli
mov
sbb
nop
fimuls
dec
mov
iret
xchg
leave
sub
outsb
jmp
mov
clc
testb
ret
add
das
pop
stos
outsl
cmpsl
insb
fcmovne
cmp
inc
nop
adc
pusha
adc
or
mov
pavgb
pushf
addb
mov
nop
jg
mov
or
mov
data16
dec
stos
aam
dec
mov
outsl
addr16
cwtl
test
adc
jmp
ljmp
dec
std
sub
add
inc
loop
rorb
or
movsl
addb
cmp
pushf
aas
and
cmpsb
xchg
in
push
int
or
test
or
mov
pop
adc
scas
xor
dec
cmpsb
pop
dec
sti
adc
and
inc
movsl
xchg
jnp
call
incb
stc
add
lds
jbe
pushf
das
xor
inc
aas
incb
xlat
sbb
fucomp
cs
xchg
sub
popa
insb
cli
fwait
cmp
movsl
aad
pop
xor
ljmp
std
add
fists
int
int3
aad
jnp
mov
xor
push
sub
mov
fucom
and
in
aas
xchg
cmp
mov
das
repnz
cli
add
pop
inc
push
pushf
mov
leave
aam
push
adcl
mov
ret
fucom
push
dec
adc
mov
adc
sbb
out
fstpl
dec
or
out
push
mov
loopne
scas
mov
adc
add
mov
aad
push
xor
dec
mov
inc
nop
in
jge
inc
push
push
in
icebp
sbb
xchg
lea
cmp
ret
mov
je
rcll
mov
or
imulb
jp
sbb
cmp
arpl
ja
scas
cmova
popl
stos
inc
outsl
fnstcw
std
jns
mov
lock
xchg
dec
push
push
pop
stos
aaa
test
xor
push
pusha
xchg
loop
push
mov
or
jg
jne
loope
frstor
sub
rolb
inc
rorl
movsl
pop
aad
mov
pop
out
imul
jg
xor
aas
push
outsb
xor
push
sbb
in
jno
jmp
sub
fldt
or
lretw
pop
inc
xlat
clc
cmc
int
add
aaa
arpl
outsb
add
mov
dec
fcompl
push
lods
out
cmp
add
sbb
daa
into
jbe
aas
sub
imul
out
cwtl
push
test
insl
outsb
add
dec
cmpsl
pop
loop
jl
into
pop
cmpsl
inc
mov
lcall
cmpb
xchg
sub
cmp
pop
sub
dec
decl
inc
out
mov
mov
fwait
lcall
jno
mov
pop
popa
lods
sbb
ret
jp
inc
dec
jbe
jae
lcall
ret
aaa
sbb
mov
jae
adc
adcl
dec
out
out
jno
stc
lcall
insl
fimuls
fsubs
add
ret
pop
add
imulb
in
dec
mov
arpl
ss
shrb
lea
jbe
cmc
stos
xchg
or
fidivs
or
dec
lahf
dec
hlt
dec
jne
es
jmp
frstor
mov
push
cs
in
adc
stos
xchg
adc
xor
inc
xor
push
outsl
cmp
dec
sub
popf
jbe
adc
sub
lea
mov
hlt
xchg
mov
jle
sub
cmp
sti
in
sbb
cmc
mov
in
test
dec
cwtl
push
inc
jae
movsb
shll
cmpsb
jno
mov
xchg
jl
out
xor
sbb
lds
test
xchg
jne
ljmp
pop
call
dec
iret
dec
sub
xor
insb
and
outsl
pop
test
loopne
push
lock
loop
negl
lret
notl
cmpl
cs
sahf
dec
xchg
stc
or
inc
jbe
movl
sub
cmp
hlt
cmp
fisttpll
pop
xchg
mov
pop
sbb
lds
jo
cmpsb
jbe
stos
scas
icebp
xlat
or
push
push
fistl
repz
push
adc
mov
sub
inc
jle
push
jnp
jg
sub
shrb
pop
sbb
repz
mov
cmc
andl
jle
jo
push
or
stos
adc
pop
ret
mov
cmpl
imul
adc
push
cld
test
xchg
ret
mov
xchg
inc
or
mov
mov
jo
scas
dec
and
add
gs
mov
pop
sarb
xchg
dec
addr16
roll
fildl
add
inc
cs
add
xor
dec
xchg
lfs
dec
enter
cmp
rcl
mov
lahf
les
xchg
into
add
hlt
les
ja
stc
clc
push
push
lahf
pusha
ret
aam
mov
mov
xchg
lcall
test
pop
shll
ss
jl
push
xor
dec
jmp
push
mov
fstl
nop
js
or
inc
jb
jge
jge
mov
mull
inc
adc
mov
adc
xlat
jae
jmp
loope
or
jg
mov
xlat
jecxz
call
enter
inc
loop
ljmp
or
leave
inc
outsl
mov
jmp
aad
pop
dec
and
clc
aad
sbbl
xor
fld
mov
jo
adc
add
imul
adcb
loopne
or
jnp
lock
imul
fldl
mov
int
add
push
jbe
fs
into
pop
sbb
adc
add
subb
xor
dec
xor
stos
push
lahf
push
addr16
or
lcall
lods
fldcw
sbb
andb
fstl
cld
pop
lcall
pop
into
mov
jp
sar
pop
aad
mov
adc
inc
mov
mov
icebp
lock
ds
mov
mov
jne
outsl
fidivl
push
stc
and
mov
movb
xchg
outsb
lods
sti
movsb
xor
mov
out
xor
aam
add
mov
arpl
nop
cmpl
push
test
pop
sub
pavgw
cld
js
test
negb
lcall
into
cli
les
hlt
inc
mov
cmp
and
dec
xor
mov
adc
imul
push
dec
std
mov
jno
push
fst
loope
sub
sbb
lret
inc
mov
ds
mov
imul
push
lods
cmp
sti
xchg
hlt
in
test
xchg
xchg
xchg
mov
cmp
add
mov
daa
mov
in
stc
jo
jecxz
lods
xchg
repz
push
inc
jg
popa
outsl
jb
test
arpl
push
dec
sbb
lret
insb
call
jo
push
sbb
xorl
cmp
add
and
jb
std
out
adc
jecxz
push
jp
out
xchg
sbb
adc
shlb
adc
xchg
jmp
leave
pop
pop
aaa
leave
leave
jno
insb
mov
mov
fistps
push
mov
lcall
jecxz
pusha
jo
adc
cmp
adc
and
sbb
sub
and
sti
ret
je
cmpsl
nop
xlat
mov
inc
insl
ret
adc
ds
sbb
xchg
jnp
inc
jae
mov
gs
rcrb
xchg
shr
test
lods
mov
sahf
mov
and
iret
sbb
dec
jmp
mov
mov
clc
cmc
xchg
clc
add
incl
mov
hlt
out
xchg
sbb
pop
notb
jp
mov
and
fcoml
sbb
pop
into
mov
loopne
jo
loop
xor
int3
sbb
test
mov
insb
in
jg
mov
push
dec
fisttpll
notb
js
inc
repz
popl
pop
jle
jecxz
or
daa
ja
mov
mov
and
in
ss
fistpll
and
repz
pop
outsl
cwtl
xor
in
shlb
addr16
inc
popa
iret
mov
out
rclb
dec
lret
xchg
jne
xchg
lahf
rcll
dec
mov
aaa
add
adc
fs
add
xlat
loope
inc
add
mov
xchg
xchg
push
sub
cltd
lcall
dec
push
adc
repnz
xor
fs
dec
mov
in
jmp
sahf
sbb
mov
lds
stos
jne
icebp
ss
push
mov
lds
sbb
or
test
add
jge
mov
loopne
insl
or
lea
xlat
mov
cmp
rcrl
mov
hlt
stc
inc
or
mov
mov
cmp
inc
icebp
loope
or
fdivrs
scas
movsl
jb
or
dec
out
xor
int3
or
push
fs
adc
aam
stos
mov
mov
cmpsl
xchg
dec
ffreep
jo
dec
adc
jmp
fisubrs
mov
out
or
or
mov
lea
sub
pop
das
cwtl
mov
jl
enter
into
test
or
movsl
lea
div
dec
les
pop
in
dec
lock
xchg
sahf
xchg
mov
sub
call
dec
sbb
inc
sub
xchg
idiv
loopne
lock
iret
lock
hlt
dec
mov
xor
xor
cwtl
mov
jmp
clc
sbb
cmc
jo
lock
add
aam
outsl
into
push
dec
in
cltd
js
sbb
dec
cs
jecxz
js
and
add
test
push
jl
mov
out
setb
jbe
adc
xchg
sbbl
xor
cltd
cmp
aas
shl
mov
mov
mov
jg
into
movsb
addr16
scas
lret
add
je
inc
aam
push
in
shlb
loop
enter
pop
cltd
dec
jno
push
aam
sbb
popa
dec
outsb
sub
in
jo
push
sbb
add
mov
add
dec
lcall
imul
imul
out
stos
lods
mov
cmp
aam
jne
xor
pop
sbb
mov
cli
out
jmp
call
jb
inc
or
js
pop
sbbl
xor
cmpsl
pushf
jae
ljmp
out
es
into
mov
lret
mov
andb
jbe
lods
mov
inc
inc
lea
lret
cmp
loope
add
push
dec
push
mov
xchg
popf
dec
fwait
in
popf
mov
mov
rcrb
cmpsl
test
repnz
pop
fwait
mov
or
xlat
ret
dec
inc
out
or
out
xchg
cltd
cmp
mov
stos
sldt
pop
mov
push
xor
fwait
das
roll
ret
int
mov
jmp
out
clc
xchg
cld
aaa
loop
sti
or
cld
fadd
cld
and
in
mov
sahf
aaa
insl
gs
bound
adcb
scas
es
mov
fdivrs
scas
pop
push
bound
pop
mov
inc
dec
push
mov
sbb
jae
pop
adc
inc
mov
add
xor
pop
movsl
pop
je
daa
shrl
jg
pop
jle
jmp
push
mov
and
les
imul
fiadds
test
in
stos
js
adc
xchg
js
std
pusha
inc
packssdw
adc
shll
rcl
pop
das
loopne
or
sbb
push
fstl
jnp
nop
test
and
dec
cltd
sahf
loopne
pop
mov
and
mov
jbe
cmpsl
mov
divb
mov
xlat
fcmovne
and
insb
mov
repnz
pminsw
popa
sti
sub
jne
mov
or
in
lcall
std
in
cmpsl
leave
push
xchg
and
std
xor
sub
aam
loop
andl
test
adc
pop
mov
loope
pop
mov
push
jnp
pop
adc
addr16
addr16
jb
cmp
cmp
push
mov
arpl
jl
pop
inc
lret
ret
mov
cmpsl
fxch
loop
aad
mov
mov
imul
cmp
mov
stos
adc
adc
into
xchg
and
inc
xchg
adc
xor
loop
pop
pop
inc
xchg
loope
inc
push
mov
dec
sub
imul
pop
testb
mov
or
insb
pand
mov
mov
and
or
into
pop
mov
xor
repnz
and
pop
adc
cmp
sbb
into
mov
ja
cmpsb
add
les
cld
out
mov
adc
xchg
mov
loopne
arpl
add
add
push
lahf
mov
imul
mov
data16
mov
mov
popa
shrb
dec
cld
lods
test
push
cmc
inc
gs
mov
jnp
push
xchg
ficoml
jbe
sti
pop
xchg
insb
pop
add
dec
in
imul
stos
clc
cwtl
lea
inc
mov
sub
jae
ret
cmp
fistps
sub
pop
push
test
and
xchg
dec
loope
gs
sbb
loopne
loope
sub
adc
jbe
jnp
lcall
sbb
push
sbb
pusha
sub
xacquire
or
fistpl
inc
sbb
movsb
hlt
pop
mov
popl
shlb
es
sar
jmp
cmp
stos
mov
jns
repz
or
cs
sub
gs
repz
cmp
cmp
pop
js
push
pop
movsl
fnstenv
out
mov
mov
cwtl
lea
jle
push
out
mov
repnz
push
or
fcmovnbe
jbe
cli
int
mov
sahf
stc
rcrl
jp
sti
cmp
ja
push
or
and
push
pop
and
inc
xchg
popf
push
stc
cltd
icebp
mov
ja
out
adcl
mov
icebp
call
adc
xchg
sarb
add
pop
sub
fiadds
out
sbb
add
mov
push
lods
add
imul
lods
jo
les
lock
xor
or
pop
xchg
xchg
jecxz
mov
fmulp
repnz
sarb
fcmovbe
dec
xor
fs
xor
push
xchg
mov
aad
mov
nop
ds
repz
lock
pop
sbb
jl
ja,pt
push
xchg
lret
pop
xor
repz
push
push
sahf
fs
js
mov
mov
mov
jae
aam
mov
mov
inc
adc
ss
fcoms
outsb
jb
aad
ja
cmp
jne
insb
int
call
inc
inc
push
fmull
pop
stos
ror
adc
leave
cmpsb
leave
inc
jo
pop
insb
sub
pop
mov
push
fisubrl
lds
cmp
scas
in
cmp
pop
int
push
jmp
rorb
shrb
dec
lahf
dec
fwait
jecxz
cmp
mov
xchg
inc
roll
sbb
sti
sub
inc
pop
sub
sub
cld
daa
or
popf
daa
xor
cmpsl
sub
filds
push
shll
xchg
and
loope
push
sahf
jb
test
lret
pusha
outsb
mov
ds
imul
pop
sub
and
jl
cs
adc
xor
rol
dec
mov
push
pop
mov
dec
pushf
jmp
sub
mov
loope
in
test
lret
dec
sahf
inc
in
or
xor
loopne
inc
imul
sbb
cmp
mov
xchg
aaa
out
jle
insl
in
jns
or
dec
in
sbb
call
fbstp
lahf
sarb
js
in
jge
mov
lock
xchg
pusha
sbb
mov
cmp
dec
push
dec
js
ja
lret
mov
idivb
aas
cmc
cltd
subl
or
sbb
push
mov
pusha
inc
inc
jl
outsl
mov
subb
jecxz
xor
add
lock
pop
pop
arpl
dec
repz
inc
xchg
mov
pushf
test
adc
sbb
cmpsb
mov
mov
mov
add
mov
push
adc
scas
les
sub
pushf
adc
test
jne
jecxz
movsb
mov
fmul
int
int3
lcall
mov
sti
jp
pop
push
xchg
in
fidivl
or
xor
jo
and
daa
xor
pop
cmpsb
xchg
mov
fs
stos
stc
mov
lcall
or
es
popa
push
rcrb
icebp
imul
lcall
loope
adc
lods
add
mov
jne
cmp
or
int3
push
fiadds
and
sbbl
push
shll
dec
xchg
faddl
pusha
or
clc
xchg
scas
fcmovnb
push
push
sub
jbe
aam
fwait
add
push
jge
mov
cmp
jno
scas
fmuls
sub
sbb
call
and
adc
data16
xor
push
lahf
add
pop
and
jg
pop
xor
into
mov
push
insl
cld
mov
clc
lcall
push
pop
cmp
fwait
sub
push
cmp
inc
pop
mov
xchg
sub
ds
jno
add
cmp
push
sar
pop
ljmp
loopne
add
imul
jg
pop
push
insl
mov
add
sar
adc
xchg
mov
je
ret
imul
fdivl
sar
mov
mov
popf
mov
add
nop
int3
popf
push
cmp
test
lock
decb
pop
shlb
inc
in
xor
xlat
fwait
stos
outsl
adcb
inc
addr16
repz
jmp
add
pop
clc
cmp
pop
adc
shr
and
mov
adc
in
inc
sbb
inc
xor
shrb
popf
xchg
and
cmpsl
and
sarl
cwtl
sub
iret
pusha
divb
lods
mov
or
mov
cmpsb
dec
nop
lods
add
sbb
lock
cmc
divb
mov
mov
xor
and
dec
in
in
je
push
std
rorl
ds
inc
adc
xor
mov
hlt
mov
fwait
out
test
mov
jns
fs
movsl
xlat
stos
adc
push
jo
ja
adc
or
pop
aas
pop
mov
shl
xchg
data16
xor
pop
xchg
sbb
cmp
sub
addl
fisubrs
xor
mov
mov
dec
insl
xchg
dec
sub
jp
loop
push
mov
cmp
adc
adc
fmuls
leave
or
jp
pop
adcl
push
and
jnp
mov
fdiv
inc
sbb
or
lcall
jl
pop
test
mov
cmp
call
lret
and
arpl
jge
xlat
ds
mov
adc
ds
loop
mov
jmp
fmuls
out
lret
push
mov
sbbl
jg
fs
out
mov
ficoml
daa
in
jge
mov
lret
add
push
nop
nop
in
xlat
cmp
arpl
xchg
stos
fsubrl
jmp
jle
icebp
clc
push
xor
push
fimull
movsl
mov
xchg
or
into
fldl
push
dec
movsl
mov
mov
aas
ds
cmpsb
sub
and
add
addl
and
ja
jnp
xor
adc
jle
jo
test
in
xor
push
dec
cmp
jae
dec
jg
mov
sub
roll
outsb
aaa
fldpi
pop
mov
call
jo
into
out
cmpsb
and
jl
lds
sub
xor
push
cli
xor
mov
sub
xchg
ret
sub
jle
jno
xor
sar
push
test
xchg
push
xlat
or
icebp
pop
fisubl
out
in
xchg
jne
subb
jecxz
fnsave
xchg
daa
and
push
shlb
xchg
push
outsb
daa
stos
pusha
jns
sub
lcall
cli
repnz
into
pop
cmp
fstpt
cld
inc
scas
xchg
cmp
jecxz
arpl
adc
jg
sub
hlt
daa
outsl
fsubr
test
pop
lahf
daa
add
pop
pop
mov
mov
cmpsl
adc
or
mov
mov
ds
push
fwait
fs
inc
scas
imul
je
push
add
jecxz
push
sarl
xchg
jae
ds
dec
orl
mov
sti
inc
jbe
lret
mov
ja
sbb
pushf
jmp
movsl
sbb
out
xchg
pop
out
loopne
push
mov
cmp
ret
mov
aaa
repnz
cmp
dec
sbb
inc
in
pop
jecxz
jne
rol
cmpb
inc
pop
in
mov
mov
jmp
in
xchg
sub
fidivrs
add
mov
mov
pop
daa
lret
rcll
mov
sub
push
cmpsb
pop
enter
jg
ss
mov
enter
cli
dec
and
cmp
pop
test
dec
imul
stos
repnz
cltd
mov
hlt
mov
cwtl
mov
xor
shlb
movsb
xor
xor
sub
push
xorl
clc
pushf
jne
lods
xor
inc
inc
sub
fstpl
adc
in
jl
sbb
cmp
mov
out
lea
cmc
ret
aas
shll
out
xchg
or
mov
push
xor
insb
inc
mov
out
je
mov
mov
repz
push
pusha
cs
or
loope
cmpsl
jle
out
mov
push
xchg
xchg
out
adc
lea
test
bound
subl
cmp
add
gs
subb
or
push
movsl
mov
pop
jnp
cli
adc
lret
jns
add
pop
or
lret
mov
cmp
gs
adc
mov
mov
insl
stc
cltd
pop
mov
xor
fwait
and
fistl
mov
mov
sbb
rcl
lahf
das
dec
dec
call
lret
and
shlb
repnz
xor
sbb
push
insb
jmp
andl
add
cmc
pop
add
addb
test
mov
into
inc
inc
movl
and
test
xchg
in
xchg
std
sub
rol
test
fs
lock
aaa
mov
jmp
jne
jae
mov
pop
adc
add
push
lahf
and
pop
sbb
sub
addb
leave
shlb
jle
xor
sub
jp
xchg
mov
xor
or
fimuls
lock
test
or
imul
or
xchg
push
xor
int
insb
cld
ret
xor
movsl
stos
mov
aas
xchg
push
xorl
mov
in
mov
adc
stos
iret
jmp
shl
mov
fwait
cli
mov
mov
jp
mov
ror
enter
loopne
xor
mull
fs
hlt
mov
pusha
ret
scas
fcmovnbe
jle
ljmp
sbb
mov
inc
and
rol
in
adc
lods
negb
and
inc
aaa
ljmp
xorl
std
mov
aad
jo
cmp
jecxz
icebp
jle
xchg
repnz
fadd
pop
iret
movsl
sarb
movsl
fsubrs
and
in
sbb
jae
cmp
into
ss
push
pusha
sbb
jae
pop
push
fwait
leave
push
mov
test
cwtl
into
fldcw
cltd
jb
fs
stos
pusha
fidivrs
dec
scas
out
add
cmpsl
out
xor
add
mov
push
gs
sahf
mov
lret
xor
icebp
jnp
into
mov
xchg
sub
pop
pop
jnp
xor
shr
adc
pop
lods
mov
mov
jo
add
mov
sbb
add
xchg
and
pop
loopne
mov
ss
ljmp
sbb
fdivp
stos
inc
pusha
rolb
and
ljmp
push
aam
test
mov
in
jno
and
lcall
sbb
jp
in
xchg
lret
jo
gs
jns
rcrl
mov
push
bound
mov
inc
adc
out
cmpsb
out
lahf
jge
shlb
in
scas
das
push
lock
jnp
sub
push
pop
push
jg
inc
push
or
fdivrl
xor
xor
xchg
sub
mov
dec
es
jecxz
lods
inc
pop
cmp
negl
or
nop
mov
jg
add
cmp
xchg
mov
adc
mov
call
dec
cmp
xor
lret
dec
dec
mov
mov
outsl
push
pop
cmpb
stc
iret
lret
in
fildll
push
outsl
out
xchg
pop
sbbl
lds
movzwl
das
in
std
push
cwtl
es
test
xor
adc
push
out
jns
test
fdivrs
lods
fsubrs
adc
pop
pop
aaa
xchg
mov
mov
scas
jmp
sub
mov
popf
in
push
sbb
jmp
mov
pop
scas
mov
pop
push
imul
scas
mov
add
pusha
popf
sbb
loope
fadds
enter
punpckldq
mov
out
aam
cmc
ret
mov
mov
into
adc
add
xchg
mov
aas
loope
xor
add
cwtl
cmp
pop
repnz
dec
mov
orb
push
popa
jg
cwtl
push
cs
inc
imul
icebp
test
pop
out
jle
push
std
sub
lret
sahf
insb
xchg
ret
lods
inc
sub
and
cmp
daa
inc
inc
mov
dec
mov
sub
lret
pop
test
fmuls
lahf
imul
mov
cs
aas
iret
sbb
xor
ja
bound
inc
orl
add
adc
pop
test
adc
movsl
push
shr
orl
xor
pop
or
adc
divb
push
negb
push
out
jle
push
sub
xchg
adc
xchg
das
pusha
aad
or
dec
sub
data16
in
jns
pop
adc
addr16
rclb
add
loope
or
in
nop
mov
adc
pop
mov
dec
lods
sbb
and
sti
jo
pop
mov
popa
fldenv
into
lods
mov
xlat
pop
std
mov
and
popf
xlat
out
mov
or
xor
in
cmp
push
sub
mov
jno
pop
adc
mov
leave
xor
daa
xchg
gs
adc
push
jg
and
pop
xchg
cmp
in
add
loope
mov
scas
lock
sub
xor
ror
mov
jmp
sub
adc
inc
imul
repz
ljmp
sti
mov
xor
ljmp
sbb
cmp
mov
shlb
or
push
xchg
xor
fcoms
fmul
cmp
cltd
push
cmp
push
fimuls
sub
add
mov
andb
in
sbb
and
xchg
imul
bound
sub
cmp
movsl
cmp
cwtl
pop
xor
out
pop
lcall
push
push
out
lret
es
out
clc
dec
mov
xchg
lcall
hlt
mov
sub
mov
daa
into
scas
or
in
mov
jb
mov
ss
cli
cmpsb
lds
loope
xchg
xor
ljmp
test
arpl
mov
icebp
sarb
xor
inc
cmpsb
pop
mov
pop
aad
xchg
sbbl
jp
fdivrl
enter
cmp
xor
mov
shlb
loope
movsb
or
and
imul
sbb
pushf
push
pop
scas
lcall
sbb
jae
scas
call
push
insl
xorl
mov
lret
push
adcb
lahf
mov
dec
dec
pop
mov
sub
pop
fadd
test
mov
mov
mov
or
sub
lahf
es
cltd
and
ret
fdiv
into
jb
mov
movsb
aaa
daa
add
adc
std
cmp
sub
je
in
xchg
mov
int3
movl
out
pop
xorb
jo
jnp
pop
ja
mov
add
cmp
mov
xor
sub
popf
mov
cwtl
dec
cltd
rdmsr
les
es
in
inc
push
add
filds
fucomi
push
incl
jp
jl
adcl
jns
xor
push
mov
sub
mov
sub
sahf
cli
enter
repz
jecxz
cmpsb
xchg
fistps
jmp
fisttpll
xor
sbb
lret
adc
fcmovb
pop
inc
cmp
jl
das
push
pop
flds
xchg
sbb
rcr
or
add
mov
aas
xchg
inc
ret
lret
cmp
xor
xchg
push
movsl
cmc
and
and
inc
xchg
cmp
and
clc
push
es
mov
sub
sbb
inc
gs
into
imul
add
add
or
and
and
movsb
ret
mov
test
mov
mov
sbb
fadds
pop
rdmsr
xor
psubusb
inc
inc
scas
and
adc
and
jle
sub
shlb
call
or
lods
mov
jnp
inc
mov
jp
js
aad
jnp
dec
out
cli
outsb
xchg
out
and
adcb
xchg
sub
fcompl
fsub
mov
cmp
shll
cmp
stos
and
push
add
push
dec
mov
insb
and
xchg
imul
jno
lods
jo
adcb
and
jmp
mov
push
adc
mov
xchg
pop
pop
divl
jge,pn
in
xchg
pop
adc
fnstenv
mov
movl
es
add
inc
mov
stos
les
adc
push
mov
jge
sti
cmp
cmp
loope
mov
js
adc
mov
push
xorl
clc
hlt
add
dec
sub
xchg
sbb
ja
rclb
sti
mov
push
xchg
cmp
fnstenv
xchg
pop
dec
add
sub
push
jge,pt
into
inc
mov
repnz
mov
sbb
jbe
das
pop
inc
cmpsb
and
fisttpl
cmp
or
or
movsl
or
iret
aam
lcall
insl
jmp
mov
sbb
ret
ret
popl
add
lret
movsb
adc
mov
imull
pop
cli
js
xor
xchg
enter
adc
sbb
sbb
xchg
mov
xchg
int3
lock
mov
adc
movsl
or
adc
pop
dec
jmp
sbb
cmp
mov
pop
xchg
leave
jae
dec
cld
movsb
dec
into
es
push
pop
sub
rorl
movsl
mov
into
inc
sbbl
cwtl
sub
mov
jp
adc
mov
jo
int3
pop
sarl
bnd
repnz
mov
lods
inc
out
nop
outsb
mov
scas
add
mov
sbb
adc
mov
js
daa
dec
fnsave
aad
or
cmp
pop
jg
xlat
mov
cmpsl
pop
add
je
dec
test
and
in
in
jmp
int3
mov
cs
push
pop
mov
lcall
add
jne
push
ljmp
mov
dec
call
in
inc
pop
xor
push
subb
inc
xchg
inc
fcmovnu
scas
notrack
sub
inc
repz
arpl
insb
mov
mov
fs
adc
pop
in
cs
aam
inc
sbbl
pop
xor
test
xor
lahf
daa
pop
xor
push
rcr
aas
pop
mov
or
mov
cmp
and
sub
aaa
ficoml
test
popf
jp
rcl
test
push
jge
hlt
repnz
xor
push
cmp
xor
mov
pmulhuw
push
aas
rol
inc
enter
iret
jae
adc
bound
mov
mov
mov
pavgw
fxch
je
out
dec
sbb
ljmp
clc
add
adc
or
mov
push
cmp
sub
xor
jecxz
jecxz
inc
xchg
mov
daa
push
mov
nop
pop
das
cmp
sbb
mov
enter
cmpsb
mov
xchg
mov
ljmp
mov
mov
test
jno
xor
mov
fwait
aas
adc
and
rcll
or
lret
adc
xchg
cmpsl
xchg
jne
push
sbb
add
pop
test
cmp
std
das
test
mov
push
or
sub
push
ss
mov
movsl
int
clc
push
inc
sar
movsl
out
fmull
xorb
scas
jp
fldl
cmp
sbb
dec
xchg
pop
adc
test
inc
xor
inc
imul
adc
leave
jp
jle
repz
sbb
lretw
out
mov
jbe
xlat
outsl
mov
push
leave
cwtl
movl
call
adc
inc
xlat
scas
push
test
subb
insb
fcomip
mov
js
int
add
add
pusha
test
inc
and
leave
out
inc
cld
mov
cmp
arpl
stos
xchg
test
sbb
mov
scas
mov
inc
jbe
test
movsb
pop
jecxz
aam
cmp
sub
mov
aam
jno
cmpsl
sbb
int
mov
bound
jb
std
gs
aad
push
into
je
movsb
sub
xchg
pop
in
fiadds
mov
sbbl
fstpl
mov
bound
cli
int
dec
mov
jge
test
pop
push
and
inc
push
jo
jl
lret
lds
gs
mov
cmp
lods
data16
insl
cmp
aaa
add
jo
scas
push
pop
bound
pushf
cmp
movsb
jno
test
leave
xchg
jp
adcb
incb
mov
push
inc
sti
push
push
cltd
mov
sbb
add
repnz
ss
push
inc
cmp
das
sbb
lods
mov
add
les
pop
and
xor
int
xlat
iret
cmp
xchg
and
cmp
jbe
add
je
jge
pusha
dec
clc
aad
jo
pop
popa
cmc
popf
jmp
cmp
mov
out
loop
sbb
xchg
cmp
inc
sbb
add
in
adc
push
fiadds
or
sahf
mov
dec
movsl
pusha
or
cmp
outsl
xchg
or
sbb
fsubs
sub
push
pop
clc
dec
leave
push
mov
cmpsb
dec
cwtl
push
out
movsl
fisubrl
jae
mov
jp
cwtl
sbb
and
cltd
and
fmul
or
cmp
jno
lea
or
popa
stos
pop
xor
scas
lea
lcall
mov
and
push
in
call
dec
mov
xor
push
lock
mov
sbb
mov
adc
adc
mov
xor
pop
dec
jp
js
sub
inc
fldcw
xchg
xchg
jae
sub
push
dec
jne
push
sahf
mov
arpl
wbinvd
test
rcr
add
outsb
add
mov
sub
fcomps
jp
cmp
mov
loope
and
push
test
iret
jle
or
sbb
lcall
xor
repnz
add
out
nop
mov
sbb
lahf
xor
mov
pop
addb
inc
dec
movsb
add
jbe
inc
stos
hlt
mov
sub
sbbb
scas
shll
cs
push
mov
push
jle
pusha
loopne
lret
sar
adc
sub
sar
sbb
jo
lret
stc
mov
and
popa
sbb
ss
jp
int
inc
dec
adc
aaa
or
mov
inc
mov
pop
dec
cmp
inc
popa
popa
inc
xor
sarl
data16
fisubs
push
mov
mov
mov
push
or
pop
test
push
sarl
xor
push
sbbb
aad
jno
mov
fsubrl
inc
jecxz
mov
add
out
push
xlat
pop
xchg
and
jae
movb
xor
xchg
stos
inc
pop
dec
imul
push
inc
je
push
ret
test
fldcw
aad
or
shll
adc
or
inc
mov
jb
fmul
jno
inc
inc
in
fisttpll
lock
xlat
cmp
dec
insb
sbb
push
adc
adc
and
test
cmp
fdivl
and
ficoms
push
fwait
out
outsb
and
insb
adc
pop
jns
stc
cmp
xor
ds
dec
outsl
dec
and
or
sbb
push
pop
ss
and
mov
data16
int
push
or
adc
inc
push
stos
dec
pop
inc
stos
dec
push
ss
jo
cmp
cmpsb
xlat
pop
mov
xchg
loopne
loope
sbb
jl
dec
pusha
ja
pop
xchg
incl
lea
pop
nop
aad
loop
aaa
inc
pop
xchg
jb
mov
xchg
call
xchg
sti
enter
mov
xchg
into
adc
movsb
out
dec
dec
push
out
add
ret
xchg
mov
jbe
dec
xchg
dec
test
push
lea
add
cwtl
out
lds
adc
aas
sbb
lcall
push
cmp
xor
in
add
lods
push
xchg
sbb
sbb
or
repnz
inc
sub
ja
popf
xor
cwtl
imul
xorl
dec
and
push
inc
xchg
sbb
dec
inc
imul
clc
stos
iret
bound
daa
scas
xor
leave
add
cmp
andl
leave
sbb
leave
pop
movsb
mov
cmpsl
cmpb
cmpsb
push
sub
adc
push
pop
adc
mov
cwtl
inc
push
sbb
jns
xchg
xchg
add
mov
dec
inc
adc
icebp
das
loopne
cmp
adc
mov
pop
mov
fwait
arpl
notb
stos
sbb
faddp
xor
mul
fldt
jnp
mov
jbe
notb
sbb
inc
in
add
cs
cmp
popa
mov
jmp
pop
sahf
add
es
xor
cmp
adc
jg
bound
sub
test
into
lcall
je
leave
stos
in
in
xor
rcrl
testb
shlb
orb
lcall
xchg
inc
cli
sti
pop
iret
out
inc
cmp
jmp
xor
leave
iret
dec
test
inc
pop
cmpsl
xlat
popa
jbe
std
mov
jg
dec
mov
and
sub
test
inc
push
jge
ljmp
jo
push
push
xchg
pop
mov
stc
jbe
pushf
imul
outsb
rcll
rolb
pop
sub
and
jo
dec
cmp
into
and
fcompl
into
mov
das
enter
cmp
ret
dec
jae
mov
ja
xor
cmp
dec
test
push
sbb
movl
mov
adc
dec
insb
dec
js
sbb
inc
enter
ficoms
popa
aaa
lcall
cmp
xchg
scas
cmp
fdivrl
xchg
push
push
out
jp
jle
cltd
ljmp
test
cmpsl
mov
mov
pop
inc
add
loopne
stc
movsl
outsl
or
mov
dec
hlt
fstl
imul
sub
jns
lcall
push
cmp
cmc
cwtl
mov
int
sub
cmc
repz
add
lods
cmp
inc
pop
mov
mov
fadd
jle
test
pop
out
pop
fnstcw
test
out
lret
and
lods
int3
stc
dec
lods
xor
or
and
add
pop
bound
nop
jno
adc
cmp
mov
ljmp
push
loop
push
mov
ror
pop
inc
mov
jae
mov
add
sar
ljmp
dec
cmc
test
sar
jecxz
imul
notb
inc
out
and
cltd
test
mov
cld
and
scas
jle
cmp
pop
xchg
shl
inc
and
rcrb
in
shrb
cmp
inc
loopne
and
repz
push
stos
and
and
fidivs
push
adc
out
shll
xor
inc
dec
inc
test
cltd
cwtl
jae
xchg
mov
aas
sub
mov
into
sbb
aaa
mov
push
rcll
lcall
add
stos
fcoml
xchg
mov
add
xchg
push
jno
out
and
cs
mov
loop
mov
les
cwtl
loope
adc
pop
push
sub
cmp
xchg
sbb
mov
int
adc
jae
loopne
fdivrl
popa
lea
icebp
jmp
inc
ret
rcl
int3
in
sahf
sub
xor
sbb
mov
dec
ret
adc
lods
ss
icebp
mov
pop
add
jp
sbb
insb
notb
jmp
xlat
pop
xor
jmp
fs
movsl
loop
sbb
fisubrl
mov
inc
test
mov
mov
mov
lret
and
in
faddl
cs
add
cmp
stc
xor
pop
inc
frstor
push
pop
adc
bound
mov
ds
sbb
inc
mov
js
ja
xchg
xlat
std
xchg
inc
add
pushf
cmc
pop
repnz
fucomi
adc
out
fldenv
popa
jo
push
into
xlat
add
push
enter
cmp
iret
ret
ret
pop
fdivl
in
and
adc
lds
mov
xchg
cmpsb
xchg
aam
mov
iret
mov
xor
push
xchg
adc
xlat
add
mov
and
lsl
pop
fldenv
add
lods
mov
mov
mov
and
pop
push
fwait
shll
mov
mov
mov
inc
push
movsl
cwtl
shl
or
and
cmp
adc
les
sub
adc
jmp
mov
pop
xchg
mov
push
daa
pop
aam
sub
mov
mov
repz
dec
mov
fwait
pop
cwtl
in
rcl
shlb
aas
bound
mov
sbb
std
xor
xchg
jb
addr16
xor
sti
pop
enter
lret
jo
and
shl
push
xchg
jl
test
add
scas
movsb
inc
sub
mov
sub
cmp
and
jg
test
mov
shrl
lea
mov
pop
push
push
pusha
mov
shr
or
jle
sbb
bnd
lds
jnp
or
xchg
push
jae
lock
jp
inc
out
adc
adc
xchg
add
cmpsb
inc
fwait
add
push
inc
dec
les
stos
sub
bound
jge
inc
xchg
je
mov
cs
movsb
push
push
xor
in
cmp
adc
clc
nop
test
sti
mov
xchg
lock
or
in
mov
xchg
xchg
mov
and
adc
inc
sbb
insb
xchg
adc
fcoml
and
pusha
out
pop
push
test
dec
mov
ficoml
ja
push
test
mov
jo
mov
mov
adc
push
call
cmp
or
jnp
mov
repnz
and
fs
frstor
adc
sub
push
lock
jo
sahf
lret
scas
test
sbb
xchg
adc
xchg
or
js
cmp
in
push
add
popa
or
pop
cld
cld
sub
push
adc
cmp
cmpl
sub
psubsb
negl
popf
scas
dec
sub
inc
in
dec
cmpsl
jmp
mov
in
mov
mov
scas
xchg
or
mov
push
xchg
repz
xchg
neg
rcrb
mov
or
mov
loope
inc
mov
stc
adc
das
add
jmp
sbb
test
mov
je
add
fcmovu
pushl
outsb
mov
test
sti
push
fcoml
lods
das
mov
mov
pop
cmpsl
jbe
push
mov
push
test
std
outsb
mov
dec
adc
addr16
icebp
jno
add
test
out
scas
push
into
call
xor
pop
xor
cmp
inc
call
mov
xchg
and
xchg
fadd
out
jecxz
leave
and
das
jno
frstor
lock
out
fmull
clc
cmc
push
iret
adc
aam
mov
loopne
idivl
mov
repnz
test
imul
jbe
pop
out
mov
pusha
mov
mov
imul
pop
or
js
popa
pop
je
stc
mov
pop
lret
stos
rcll
mov
dec
pand
xchg
dec
jmp
mov
pop
jmp
sbbb
andl
roll
daa
ja
adc
inc
cmc
daa
ja
pop
ss
negb
pop
outsl
loop
pop
loopne
movsl
loopne
pop
mov
sarl
and
jmp
jge
sub
adc
jae
daa
mov
inc
arpl
xchg
or
mov
cld
adcb
pop
dec
xchg
push
mov
push
mov
sub
aaa
mov
sub
cmc
js
mov
sahf
push
cltd
insb
adc
repnz
cltd
rolb
jne
mov
adcb
pop
lcall
pop
cmp
insb
xlat
mov
cmpsl
dec
inc
call
jp
int
enter
scas
xor
push
xchg
cs
jecxz
mov
popf
mull
push
mov
adc
lds
out
cmp
jno
aam
addr16
mov
add
inc
movsb
pushl
jns
xor
inc
bound
leave
adc
push
pop
dec
jnp
dec
ret
jbe
ja
adc
push
fdivs
cmp
lods
mov
add
jne
cs
scas
inc
lds
cmp
sub
aaa
add
mov
adc
lahf
or
cmp
jbe
insl
insb
inc
push
lods
cmp
sub
fcompl
mov
loop
repnz
pop
sub
arpl
ja
cmp
jne
pop
out
iret
and
sub
or
jnp
lods
push
xchg
jbe
mov
pop
addr16
fwait
add
sbb
jp
add
jmp
gs
cmpsb
test
or
ret
cmp
cmpsb
sbb
cmp
dec
das
jbe
push
pop
push
cmp
mov
or
pop
xchg
jg
inc
popf
ja
push
xchg
shlb
sub
and
nop
rcrl
aad
inc
mov
pop
sub
add
push
fs
mov
cmp
jo
sub
cli
inc
fidivrs
enter
mov
add
leave
mov
movb
dec
out
fcmove
mov
sub
xlat
and
xlat
popf
dec
mov
mov
jb
sahf
out
push
pop
mov
repz
sub
cli
mov
cli
mov
or
out
jg
jae
enter
rcll
mov
mov
mov
xchg
clc
outsb
xlat
push
out
gs
and
mov
cmpsl
mov
push
ljmp
mov
mov
nop
mov
jmp
xchg
jb
jns
aas
ret
int
and
sbb
int
in
inc
aam
cmp
fstpl
pop
or
popa
xor
loop
push
mov
and
enter
stc
mov
jmp
sets
je
jbe
add
cmpb
inc
inc
stos
lret
adcb
cmc
mov
in
in
das
jg
xorl
movsb
jno
mov
cwtl
shl
gs
rclb
xor
xor
cwtl
movsl
xchg
jbe
pop
lea
push
test
lret
sub
mov
das
lods
and
mov
les
sbb
jg
add
mov
inc
and
jno
shlb
mov
cmp
pop
pop
les
mov
or
push
iret
push
dec
repnz
test
sub
dec
daa
or
out
add
rcrl
cli
jg
les
adc
ljmp
lods
jne
iret
call
dec
pop
xor
cmc
sub
inc
mov
aam
int
xchg
pop
repz
dec
and
adc
dec
push
jmp
pop
xchg
sub
adc
xchg
stos
adc
jmp
push
push
fcomps
push
jnp
mov
popf
addr16
sub
ja
adc
xorb
loope
cmp
inc
mov
push
adc
mov
arpl
movsl
ret
xor
loope
fisttps
test
inc
lock
jae
xor
inc
or
aaa
scas
js
push
push
scas
mov
pop
mov
lahf
out
int
sbb
int
orl
xor
in
mov
scas
cmp
cmp
xchg
fdivl
call
pushf
testl
in
insb
cltd
dec
adc
outsl
test
mov
out
ror
sarb
xorb
sbbb
mov
shlb
loopne
push
inc
aas
xor
dec
inc
sbb
mov
pop
call
add
addr16
mov
mov
xor
jmp
push
push
in
scas
sub
mov
ss
pusha
loop
shr
mov
into
pop
popf
jp
frstor
mov
add
mov
shlb
mov
out
jge
xor
outsb
stos
xchg
pushf
loopne
int
dec
jl
xchg
arpl
inc
sahf
leave
adc
and
lock
nop
insb
shrl
sub
flds
fsubrl
push
decb
mov
popa
arpl
cwtl
pop
jp
sub
shr
scas
pushf
xor
push
mov
xor
aaa
and
adc
into
xor
mov
cmp
pop
or
test
ss
xchg
pop
out
daa
push
pop
or
rcr
dec
fldl2e
stc
fdivl
push
jg
les
xor
out
mov
sub
cs
rol
pop
ret
aaa
insb
mov
pop
xchg
in
cmp
dec
fdivr
jp
adc
cld
push
lret
decb
sbb
mov
xchg
aaa
pop
outsb
inc
roll
cmp
stc
inc
mov
hlt
push
adc
or
shll
cs
call
jno
cmp
adc
lods
stos
push
js
or
sub
add
stc
sti
notl
fsub
bound
mov
mov
andb
mov
add
xor
stos
xchg
mov
or
inc
sub
dec
sbb
or
push
xor
or
jl
es
aas
cmp
imul
int
dec
cmp
icebp
lds
cmp
fs
lods
add
push
scas
xor
sub
pop
rorb
cmp
adc
jmp
mov
out
push
push
insb
mov
les
mov
addr16
dec
out
addr16
rcll
idivl
shrb
inc
and
outsb
dec
jno
xchg
mov
fnsave
add
dec
mov
or
push
inc
mul
mov
daa
push
lock
inc
stc
out
or
or
sbb
int
adc
mov
imul
rcr
inc
out
add
dec
out
xor
out
add
xchg
stos
inc
jb
jo
xor
xchg
jmp
ja
pop
jp
mov
adc
loope
cmpsb
xchg
lods
daa
ss
lret
cmp
lods
bound
sahf
and
lret
jo
andb
fs
cmp
jnp
xchg
aad
xchg
or
insb
mov
push
mov
mov
jl
test
xor
mov
push
frstor
xchg
push
mov
imul
mov
sub
jmp
sub
fsub
pop
scas
pushf
push
push
loopne
sahf
sub
push
adcl
mov
incl
stos
test
loope
push
test
jecxz
inc
aam
sbb
push
mov
inc
sub
xchg
sahf
mov
inc
stos
incb
frstor
lds
xor
mov
test
mov
rclb
xor
xlat
gs
test
jmp
das
in
adcb
cwtl
jbe
gs
or
stos
or
mov
aaa
mov
push
fsubrs
or
mov
add
dec
icebp
xor
xchg
push
inc
xor
stos
stos
mov
push
movsl
jl
cmovae
arpl
out
movsb
sub
pop
aad
xchg
mov
xlat
mov
leave
ret
sub
sub
sbb
push
xchg
lcall
in
std
add
pop
adc
pushf
xchg
or
jl
pop
testl
mov
nop
push
out
int3
pcmpeqd
xchg
xor
xchg
pop
sbb
add
push
out
or
xchg
push
mov
loop
lret
lea
popa
sbb
fists
inc
cld
je
sub
daa
mov
dec
cwtl
add
xor
in
imul
aas
dec
cltd
xor
xor
dec
jne
pusha
and
shll
xchg
sbbb
fdivrs
jno
xlat
roll
imul
lods
xor
add
pop
mov
adc
inc
xchg
es
imul
jmp
dec
out
xor
mov
out
mov
mov
inc
jno
or
sub
aaa
xchg
imul
ja
lods
pop
imul
sub
push
sub
mov
sub
mov
mov
jl
jl
daa
push
adc
icebp
xor
jmp
bt
sbb
push
pop
push
xchg
push
lret
mov
rorl
aam
test
std
jecxz
pop
inc
insl
lret
cmp
jmp
dec
and
icebp
xor
aad
jbe,pn
pop
roll
push
adc
cmpsb
out
adc
lcall
dec
ret
rorl
sub
fcmove
and
push
mov
adc
or
mov
mov
push
jns
xor
push
push
daa
push
mov
inc
fs
and
ljmp
mov
jp
cmp
shlb
setb
outsb
pop
lock
in
or
xchg
pop
shll
repz
inc
pop
inc
inc
test
popl
repz
aas
pop
xchg
aas
mov
lret
jb
or
scas
idiv
pop
mov
stc
inc
mov
aaa
inc
das
out
dec
xlat
nop
mov
mov
cld
repnz
test
lods
xor
cmp
js
nop
sub
push
fcmovbe
dec
mov
xchg
mov
out
popa
mov
sarb
sub
push
aad
leave
test
or
icebp
fs
inc
jb
nop
aaa
jne
pop
add
push
ss
inc
mov
mov
test
mov
pushf
sub
repz
mov
test
in
out
cmpsl
loop
ss
insl
mov
lods
mov
call
dec
sti
and
xchg
jmp
mov
dec
adc
xchg
and
jmp
hlt
pop
push
pop
jp
sbb
push
mov
cmpsb
in
xor
jge
jle
jecxz
pop
pop
xor
in
dec
jb
cli
nop
jns
adc
ljmp
cs
inc
aad
sti
mov
test
repz
sbb
and
mov
xchg
mov
cli
jno
mov
aam
or
push
imul
xchg
sub
add
mov
jecxz
shl
js
mov
adc
enter
enter
scas
jbe
testl
imul
pop
daa
sbb
dec
in
push
lods
aas
fwait
sub
shrb
mov
fcmovnu
mov
sbb
xor
push
sbb
pushf
sub
mov
mov
jecxz
push
shlb
adc
ret
sahf
and
pop
jecxz
sbb
bnd
xor
xchg
dec
adc
pop
dec
or
push
xchg
bound
cmpsl
repnz
out
or
rcl
mov
popa
jne
xor
shlb
or
sbb
inc
add
aas
mov
sbb
jbe
sub
push
das
pop
add
adc
sbbl
cmc
test
jmp
ja
lods
cmp
xor
lret
fisttpl
fcmovnu
pop
adc
push
xchg
ret
in
mov
mov
enter
adc
lock
jns
push
adc
arpl
jge
cmpl
jb
shlb
push
cmc
addr16
pop
fimull
push
push
push
mov
and
pusha
sbb
mov
in
inc
mov
pop
xor
and
push
ror
lea
test
xor
les
pop
fdivrs
rcrb
loope
cmc
mov
popa
cwtl
sub
mov
jecxz
sarl
in
pop
sub
mov
or
xchg
mov
iret
rcl
test
setno
xchg
mov
cmpsb
xor
lods
and
loop
dec
les
add
out
sub
sub
int3
xchg
mov
cmp
mov
lds
cmp
sahf
iret
mov
jp
dec
inc
inc
adc
out
testb
add
mov
xor
ret
inc
int3
push
sti
test
pop
sarb
loop
ret
dec
add
sub
cmp
jge
cld
sub
addr16
mov
int
movsl
xchg
out
mov
out
adc
sbbb
fcoml
sub
jae
dec
and
and
mov
add
outsl
in
jbe
jae
push
xor
imul
ss
in
popa
add
pusha
test
lahf
jno
jnp
mov
add
lea
pop
test
xor
push
mov
inc
roll
cmpsl
out
push
js
out
mov
sub
xchg
xchg
cmpsl
pop
inc
test
leave
les
push
test
and
pop
xor
outsb
jg
lret
enter
rorb
jnp
dec
orb
sub
mov
sahf
fdivs
outsb
mov
lcall
add
mov
mov
jbe
mov
xchg
dec
lcall
jbe
pop
jg
rclb
xchg
mov
mov
mov
enter
pusha
clc
loop
aas
dec
push
stc
std
sbb
jbe
notl
js
hlt
mov
outsb
jl
cmp
pop
rolb
repnz
dec
dec
movsb
pop
or
aam
push
roll
adc
inc
out
mov
mov
stc
cmpsl
shrb
scas
cli
lret
cmp
mov
cmp
xchg
ret
adc
jb
cmp
and
in
sahf
inc
ret
or
adc
out
jecxz
add
mov
cmc
push
les
ret
cltd
imul
lcall
movsl
subb
mov
lea
mov
fstpt
insl
fcom
or
push
adc
mov
fildl
fnstenv
cmc
add
stos
psrlw
andl
enter
test
roll
pop
add
lods
enter
and
and
or
push
mov
inc
inc
cmp
or
push
push
test
push
push
mov
inc
into
ss
mov
pop
mov
push
out
stos
ja
loope
mov
pop
fisubrs
pop
xchg
shrb
pop
jo
daa
push
xor
push
push
and
mov
pop
call
gs
repnz
jns
loop
ljmp
sbb
mov
push
imul
and
push
aad
mov
movsl
mov
sbb
sub
fst
cld
insb
cltd
and
jle
mov
pop
jmp
rcll
add
sub
or
ss
lods
inc
dec
jnp
dec
push
xor
repnz
xchg
mov
sub
loopne
jmp
fisttpl
lds
xchg
jg
mov
incb
sub
and
mov
sbb
std
fsubl
repz
cld
mov
mov
out
insb
loopne
icebp
icebp
push
gs
add
xor
pop
stc
jle
pop
in
shr
jl
inc
and
mov
lcall
cmc
push
sub
push
add
sub
add
xchg
loope
inc
lea
add
sub
push
inc
cmpb
add
test
insb
push
pop
or
sub
push
pop
arpl
out
inc
jns
flds
add
mov
sub
mov
mov
sub
xor
jns
stos
jmp
cmc
test
adc
cmp
icebp
lea
pop
test
sbbb
xor
ret
in
fstpl
stc
mov
incl
inc
stos
aaa
mov
inc
mov
jge
jnp
add
ljmp
jp
jno
lods
psllw
xchg
add
fsts
lods
insb
mov
push
add
out
mov
sbb
arpl
stc
jge
mov
push
mov
shl
sub
xor
pop
hlt
mov
mov
or
andl
int3
sub
cmpsl
sti
popa
mov
xlat
inc
pop
test
mov
jb
pop
cmp
or
inc
imul
mov
movsl
sub
adc
and
xchg
stos
xchg
cmp
mov
hlt
bound
and
cli
mov
xor
or
inc
or
jmp
fcmovne
frstor
mov
lods
sahf
dec
push
add
enter
sub
sub
nop
and
les
mov
add
pop
subl
pop
sub
jo
add
push
mov
js
cwtl
pop
mov
sbb
xor
push
sub
lahf
insb
pop
sbb
lock
in
into
fcoml
mov
ret
loope
nop
aaa
push
fs
add
jnp
push
das
sub
mov
jo
or
cmpsl
in
cmpsb
sbb
nop
dec
cld
sub
cmp
das
lahf
loope
dec
jns
fwait
mov
mov
mov
pop
add
xlat
fsub
xor
test
push
dec
int3
stos
lds
push
leave
or
jbe
mov
fcoml
jle
cmp
sub
in
mov
iret
push
cmp
repz
jecxz
mov
xor
data16
sti
in
pop
loop
out
dec
xchg
add
push
je
push
stos
stc
test
movsl
out
jns
outsl
dec
jnp
test
or
mov
jbe
mov
jno
aaa
adc
inc
xchg
mov
ficomps
cmpsb
loopne
test
popa
and
sbb
cltd
or
jbe
scas
enter
push
xchg
pop
iret
pop
enter
push
inc
xchg
test
sub
call
addr16
in
push
xchg
jo
je
mov
add
sub
fnsave
push
or
push
cmpsb
xchg
fstps
adc
lds
leave
dec
dec
popf
repz
out
gs
test
add
xchg
std
dec
jb
xchg
mov
call
int
jne
cmp
dec
cmp
adc
gs
xchg
cltd
repnz
rorb
inc
add
adc
in
adc
imul
nop
cmp
pushf
lcall
jno
in
push
push
lret
movsb
jbe
outsl
lret
and
jp
mov
dec
mov
sub
mov
sti
jge
inc
sub
subb
push
into
stc
ret
inc
enter
addr16
popf
cli
lahf
push
in
in
lods
test
sbb
lret
gs
inc
or
add
lea
loopne
out
fisttpl
ljmp
fs
cli
mov
xchg
jp
jbe
push
frstor
sub
pop
sbb
jp
push
push
gs
shlb
fcmovnu
inc
mov
ljmp
shr
mov
pop
fnstsw
test
mov
roll
jno
test
sahf
cmp
push
adcl
jbe
pop
mov
mov
mov
jb
je
inc
push
not
hlt
mov
aam
pop
add
lret
xchg
sub
cmp
data16
mov
movsb
cmp
jno
cwtl
cltd
jp
sub
jb
ds
shr
aas
add
fbstp
lret
stos
mov
push
je
cmp
aaa
add
inc
lds
imul
icebp
imul
outsb
xlat
and
push
xlat
lcall
bound
negb
loopne
jo
adc
jae
add
add
ret
mov
pop
mov
movsb
hlt
add
lahf
add
je
sub
sbb
aaa
lods
mov
push
mov
mov
mov
xchg
pop
shr
aas
mov
mov
movsl
cmp
mov
lods
insb
lahf
cwtl
pop
sti
jle
cmp
dec
test
push
inc
sub
xor
xlat
lods
adc
sbb
mov
lahf
mov
cli
iret
or
jmp
or
idivl
ljmp
push
sub
xor
fists
adc
inc
loopne
icebp
mov
in
shl
adc
mov
in
jecxz
sub
sub
pop
cmp
lret
sub
gs
jns
ret
idiv
ret
cs
out
cmp
insb
pusha
jmp
push
pop
flds
pushf
shrd
mov
sbb
xor
aas
mov
xchg
decb
aas
std
cli
into
imul
lds
in
in
xchg
xchg
cmp
lds
sbb
imul
dec
add
dec
sti
mulb
das
lock
or
rcrb
sbb
xor
iret
pop
stos
inc
insl
mov
add
adc
jae
movsb
cmpb
mov
scas
sbb
jb
scas
adc
inc
jnp
hlt
aaa
pshufw
xchg
aam
pop
xor
data16
cld
divb
rorl
and
jae
mov
xchg
mov
add
rclb
xchg
cmp
sahf
dec
pop
inc
jp
shl
sbb
btr
or
iret
aad
inc
loope
out
dec
mov
scas
sbb
inc
cltd
daa
add
popf
cmpsl
in
sbb
adc
pop
outsl
push
pusha
test
push
loop
push
lcall
aaa
xchg
sarl
lods
movsb
test
repz
in
addl
xor
cmp
adc
hlt
int
test
test
pop
outsb
sbb
sbb
mov
push
xor
inc
sbbb
pop
push
cwtl
mov
outsl
rcrl
mov
lcall
sbb
jnp
fidivrl
fs
adc
int
mov
adc
mov
inc
out
mov
negb
jle
cli
cmp
loopne
lret
int3
dec
xchg
test
inc
add
aas
push
lock
jle
xor
pushf
cmc
stc
test
cwtl
xchg
cli
push
xchg
add
enter
mov
xor
mov
jo
dec
push
or
mov
pop
mov
jle
or
mov
rcrb
lcall
int3
ret
jmp
dec
mov
pop
mov
jae
sbb
and
xchg
ds
rclb
mov
add
and
pop
ljmp
loop
cld
out
in
jne
scas
sub
dec
arpl
movsb
scas
sub
pop
lea
jbe
in
mov
repnz
ret
pop
jae
loope
or
sub
cmpsb
sbbb
mov
mov
mov
repnz
pop
dec
mov
xor
pop
mov
rcrl
mov
jnp
shll
sub
jmp
or
xchg
loope
sti
test
insb
fimuls
or
cli
xchg
jmp
loope
xor
mov
push
push
int
ja
mov
xchg
shr
repz
mov
out
outsl
inc
jp
xlat
dec
fwait
sub
dec
testl
daa
push
inc
not
push
scas
push
not
and
mov
ret
pusha
imul
mov
int3
adc
insl
and
pop
mov
pop
icebp
inc
and
mulb
jge
xchg
jb
mov
insb
mov
inc
repz
repz
repnz
jb
insb
int
stc
rcll
jns
mov
outsb
sbb
pop
sbb
inc
aaa
fists
out
stc
mov
cli
and
movsb
aam
adc
js
movsl
pop
insl
scas
shr
or
out
mov
inc
aaa
cli
xchg
cmp
mov
pop
mov
xor
lret
mov
dec
cwtl
and
cmp
dec
push
jbe
mov
mov
inc
xor
xchg
cld
orb
rolb
fs
jmp
push
add
inc
push
jns
and
out
jg
outsl
mov
sbb
lcall
mov
lret
pop
pusha
addr16
ret
xor
dec
fnstenv
mov
add
les
ss
add
push
jbe
xor
rclb
ficompl
loopne
test
pushf
or
idivl
mov
popa
ljmp
andl
mov
shll
sub
adc
or
xor
call
mov
jp
sbb
push
mov
push
inc
mov
stos
sti
out
cmpsb
gs
leave
mov
out
popa
lahf
lahf
enter
fisttpl
scas
jle
dec
jmp
pop
inc
aaa
jne
inc
adc
jno
sbb
daa
andl
out
mov
loop
int3
mov
out
rcrb
jnp
adc
push
dec
xchg
jnp
cmpsl
push
inc
mov
pushf
rorl
out
sarl
lods
cltd
add
mov
es
les
add
lea
rclb
jecxz
sbb
repz
mov
mov
neg
push
dec
mov
or
movl
lods
push
test
xor
ss
xor
test
fs
mov
iret
je
adc
ja
mov
mov
test
es
mov
dec
push
sbb
adc
mov
in
push
sub
test
fisttpl
push
mov
ja
movsb
push
or
int
rol
dec
js
mov
fcomip
out
mov
out
incb
test
jmp
stos
jbe
loopne
cltd
or
xchg
sarl
out
push
pop
mov
mov
stos
aam
pop
pop
repnz
mov
repz
mov
add
or
mov
fsubp
enter
push
sbb
mov
sub
cwtl
inc
mov
adc
in
in
in
xlat
fwait
cmp
xchg
pop
mov
xlat
cmp
push
adc
fldenv
mov
fisubs
negl
into
fstpt
les
scas
ror
pop
icebp
or
mov
adc
and
mov
repz
popf
into
sbb
addr16
mov
or
xchg
pop
sub
shr
pop
rorl
bound
mov
xor
stc
or
mov
scas
les
fisttpl
sub
sbb
xor
and
adc
mull
jno
test
push
pop
push
fstpl
or
xchg
mov
movsl
mov
mov
stc
lret
xchg
popaw
jle
hlt
inc
cli
test
mov
hlt
test
xchg
out
pop
inc
leave
pop
lds
xchg
mov
add
add
or
and
stos
in
nop
daa
fnstsw
sbb
mov
scas
cld
addr16
fistps
ss
xlat
stc
ljmp
pop
adc
mov
addr16
ljmp
push
mull
rorb
sbb
sbb
or
add
xlat
in
dec
pmaxsw
out
cmp
jns
inc
hlt
movups
aad
dec
dec
jne
es
pop
add
lret
rclb
movsl
lcall
jo
push
mov
and
xchg
pusha
fyl2x
sbb
pop
mov
xchg
imul
add
mov
sbb
leave
pushf
add
rcl
mov
mov
cld
pop
add
lret
cld
push
push
or
aam
scas
push
jmp
test
mov
mov
test
jb
je
sbb
jnp
fidivl
mov
mov
adc
xor
loop
dec
lcall
mov
sub
cvtpi2ps
test
lods
sbb
inc
sub
sar
cmp
jns
mov
into
xor
inc
sbb
rolb
idivl
mov
push
nop
test
ljmp
shll
mov
jnp
scas
adc
or
cld
in
lods
test
test
movsl
push
inc
or
incb
jns
pop
sbb
mov
add
inc
adc
lods
loopne
iret
sbb
in
movsb
push
mov
jg
rcl
push
sbb
pop
sahf
ror
xchg
inc
je
push
imul
stc
sbb
mov
jo
out
or
push
xor
mov
inc
xlat
imul
lret
scas
in
sahf
mov
sub
out
jb
test
push
lock
mov
cs
in
les
sub
insl
push
inc
je
fiadds
les
fcoms
out
aam
dec
dec
repz
divl
jecxz
xchg
mov
and
dec
inc
xor
cmp
loope
test
push
hlt
add
jo
pop
filds
cmpl
dec
pop
je
push
inc
sub
lea
cli
dec
es
pop
scas
aas
ss
loope
or
lahf
sub
jno
xchg
lahf
pop
imul
fimuls
gs
into
mov
mov
pop
add
push
rolb
push
xor
add
lea
popf
pop
dec
sub
xchg
cmpsl
add
mov
rclb
push
jg
push
mov
xor
xchg
shll
sarl
out
mov
and
outsl
or
pop
popa
pop
add
xor
test
dec
pusha
jge
js
pop
and
stc
scas
data16
mov
je
xor
jmp
or
jecxz
inc
jno
imulb
dec
xorb
rcrb
push
adc
jbe
mov
aaa
aad
iret
cmp
jbe
sub
or
mov
add
loopne
ja
loope
xor
or
sar
les
inc
sbb
dec
std
aaa
rolb
cltd
add
pop
test
or
lea
inc
insb
sbb
shll
xchg
das
dec
out
sbb
or
dec
iret
imul
dec
outsl
fdivr
gs
outsl
push
repnz
mov
push
jbe
fcomps
jmp
xchg
outsl
popf
sarb
mov
sahf
test
sar
daa
xor
hlt
push
sub
aad
cmp
pop
loop
popa
sahf
mov
inc
and
mov
mov
sub
scas
pop
sbb
sub
sbb
and
mov
rcrb
cmpb
addr16
aam
mov
sarb
mov
and
cltd
push
test
aam
enter
aas
insl
push
jg
test
hlt
pop
popa
scas
filds
cmpsb
inc
dec
mov
mov
js
test
xor
lds
ss
data16
ret
pushl
popa
mov
lret
les
xor
sub
int3
mov
or
inc
sahf
cwtl
idiv
stos
insb
in
xor
cmp
mov
test
insl
cmp
shrl
insb
and
stos
jl
cwtl
cmpsl
xchg
cmp
in
insl
aaa
aaa
pop
push
inc
mov
xchg
adc
sarb
push
in
mov
xchg
push
rcrl
ja
xchg
out
jp
jnp
in
mov
ret
scas
cmp
int
xchg
mov
inc
rolb
movsb
stos
leave
mov
sbb
push
mov
and
xchg
cmp
cmp
aaa
repnz
lods
fs
aaa
xor
leave
inc
mov
push
neg
and
mov
jl
pop
fcoml
mov
sub
push
or
sbb
mov
cmp
dec
rorl
scas
adc
or
jp
pop
xchg
clc
xor
cmp
sbb
mov
ss
js
aam
and
sbb
pop
push
jae
push
dec
int3
repz
icebp
mov
stos
pop
loopne
imul
mov
dec
sub
add
les
pop
jecxz
loopne
push
ja
std
jbe
int3
notl
dec
int
push
mov
dec
sub
cmpsl
jp
sahf
dec
xor
cmp
cld
ljmp
fisubs
pusha
test
sub
movsb
das
push
pop
jg
jno
jmp
enter
in
pop
clc
push
mov
and
mov
stos
leave
xchg
adc
repnz
mov
adc
movsl
xor
mov
mov
and
cld
scas
add
xchg
push
repnz
out
dec
adc
mov
adc
iret
je
in
aas
add
faddp
push
dec
ret
imul
and
add
xlat
rcrl
outsb
pushl
fwait
mov
icebp
lcall
loop
int3
cmp
mov
ror
mov
les
sub
and
cwtl
inc
pushl
sub
inc
inc
pop
pop
mov
xchg
in
aaa
or
push
adc
xor
jmp
push
mov
mov
pusha
adcb
into
dec
lcall
push
jle
insl
cltd
mov
jmp
jnp
xchg
in
notb
and
pop
insl
push
adc
movsl
cmp
dec
fidivrl
mov
xchg
iret
xchg
mov
or
sub
xor
sbb
dec
rorb
or
adc
sbb
mov
fwait
xlat
push
mov
orb
xchg
adc
mov
pop
fiaddl
jno
jae
cltd
pop
adc
icebp
push
lcall
outsb
lods
push
jg
cwtl
jnp
cmp
cmc
rol
inc
cld
inc
sbb
inc
jb
aas
sub
mov
mov
out
pop
aad
mov
pop
loope
xor
ja
and
jbe
call
inc
xchg
cmpsb
cmp
fstpt
dec
push
out
push
cmp
popl
xchg
and
and
aad
xchg
imul
push
fs
lret
sub
adc
xchg
jns
jo
sub
mov
adc
xor
mov
clc
mov
xchg
std
gs
cltd
pop
pusha
daa
add
ret
mov
bound
scas
pop
cmp
sbb
outsl
add
pop
sbb
cmc
inc
lcall
leave
and
into
adc
gs
testb
pop
out
shlb
lcall
mov
mov
jae
pop
push
inc
cmc
mov
out
sbb
pop
flds
loop
gs
push
mov
push
nop
call
and
sbb
clc
cmp
lea
dec
in
out
scas
or
daa
test
loope
aad
adc
mov
push
fst
or
pop
push
test
cmpl
movsl
jne
sarl
jecxz
shlb
mov
mov
and
je
pusha
mov
mov
imul
sbb
lock
daa
in
out
or
cs
repnz
jnp
out
notb
push
mov
or
or
pop
jp
testb
and
mov
mov
push
fadds
mov
ss
xchg
leave
pop
pop
das
mov
pop
sbb
adc
cltd
in
mov
pop
sbbb
jns
sti
xor
mov
sub
mov
test
imul
cmp
jp
lahf
orb
clc
idivb
lds
push
stc
fwait
lret
sub
push
lret
mov
jle
mov
sbb
mov
jecxz
inc
dec
inc
imul
sbb
addb
sbb
aam
mov
mov
in
xor
arpl
pop
int3
or
into
add
mov
les
mov
dec
rol
jmp
fists
lcall
movsb
pop
push
movsl
ja
enter
in
roll
rdtsc
inc
push
out
inc
sub
mov
push
in
insl
xor
in
push
and
repz
daa
mov
pop
shll
movsl
loopne
mov
das
sub
mov
outsl
mov
test
xchg
xor
or
xor
pop
out
xor
pop
mul
mov
rcll
mov
fistps
push
pmullw
fwait
call
into
daa
adc
enter
mov
adc
sub
sub
mov
mov
xchg
push
mov
popf
cmp
push
push
aas
add
pop
cmp
dec
sbb
inc
cmc
addl
inc
ljmp
scas
test
add
lods
ret
cmp
leave
arpl
push
shlb
pop
pop
xor
xchg
cmp
or
jne
dec
adc
call
mov
pop
rorl
jmp
imull
mov
cmp
mov
inc
xchg
xchg
hlt
jl
call
test
inc
and
or
fstps
xorb
shl
out
push
les
scas
popa
inc
add
sub
push
mov
gs
xchg
pop
mov
inc
movb
jl
into
and
je
popa
mov
aad
mov
leave
incl
push
mov
xchg
test
addl
mov
push
mov
adc
pop
cmp
xor
ret
je
adc
jmp
stos
jle
jns
pop
mov
mov
lret
dec
shrb
sub
push
lret
inc
lret
inc
inc
bnd
mov
mov
dec
in
mov
mov
mov
mov
pop
dec
xchg
pand
out
shlb
sti
push
int3
fstpt
pop
repnz
iret
inc
push
out
and
inc
add
stos
adc
orl
xchg
push
aas
jl
cltd
jge
sbbb
adc
xchg
inc
push
jo
ljmp
pop
jb
ja
das
stc
iret
jp
fstl
in
aas
inc
cltd
sar
push
in
repnz
and
sbb
dec
popf
sahf
sbb
test
push
add
sub
enter
int
jg
xor
cmp
adc
jb
pop
inc
js
repz
inc
jb
idivl
movsb
jo
xchg
popf
sub
add
andl
or
sub
lcall
inc
push
stc
nop
and
imul
jne
daa
insb
add
adc
adc
pop
rolb
pop
fisttpl
inc
in
enter
cmp
sub
out
pop
push
mov
jge
sub
fcomps
pop
insl
outsb
push
stc
fisttpll
inc
add
aaa
xchg
and
pop
pop
std
mov
mov
movsl
sub
aas
mov
xor
dec
xor
lea
hlt
rorb
cmc
inc
sbb
fsub
pop
add
push
in
and
movsb
jecxz
jecxz
cmp
push
sbb
push
add
repnz
pop
fs
lods
xor
sahf
jecxz
ret
scas
mov
stos
sbb
ficompl
push
adc
stos
or
lds
fimuls
inc
and
in
scas
jns
lea
mov
or
mov
mov
cmp
out
arpl
ja
xor
shrb
and
cwtl
mov
test
outsl
addb
inc
stos
jb
push
xacquire
pop
leave
mov
jle
aad
sbb
test
cli
xchg
jge
in
test
movsb
movsl
shrb
outsb
inc
jge
popf
and
fdivrl
inc
int3
mov
cld
fcmovne
shrl
xor
push
icebp
js
push
xchg
in
mov
push
or
aas
fldt
push
mov
orb
out
rorl
mov
mov
xchg
stos
std
adc
les
adc
pop
idivl
sbbb
daa
call
mov
movsb
movsb
fnstcw
shl
insl
cwtl
pop
in
xlat
pop
cmp
sub
cmpb
insb
out
xchg
lds
and
xor
fs
jp
dec
aas
and
push
adc
jecxz
sub
fdivs
add
jnp
cmp
daa
mov
mov
mov
dec
mov
scas
push
sti
dec
or
dec
into
inc
sarb
mov
roll
cmpsb
pop
or
adc
inc
movb
ret
xchg
push
aaa
test
iret
sub
push
lods
test
test
ds
pop
lahf
inc
ror
in
pop
ds
daa
addr16
dec
sub
insb
push
sar
pop
cmp
sub
iret
gs
les
fcmovb
mov
push
cwtl
fwait
rcll
pop
jb
add
aad
ljmp
adc
sbb
lods
xchg
push
push
jo
in
in
jmp
lret
movsb
or
shll
cli
cmp
inc
loop
sahf
mov
mov
adc
sbb
or
scas
add
std
xchg
inc
je
popf
xchg
mov
cmp
cmp
push
cmp
js
pop
outsb
lea
dec
inc
adc
pop
fsubrs
outsl
popf
gs
jo
and
dec
movsl
push
dec
jg
or
andb
adc
mov
mov
mov
lods
fidivrs
fsubrs
insl
inc
cmp
or
push
inc
and
loop
aad
sbb
pop
mov
and
dec
cmpb
stc
cmpsl
xchg
cwtl
adc
push
xchg
sbb
stos
sbb
mov
jmp
lock
sub
mov
push
or
or
cmp
adc
out
repz
test
sbb
dec
iret
pusha
rcll
outsb
mov
sbb
mov
mov
xchg
xchg
dec
xchg
lods
pop
es
loope
clc
popf
icebp
mov
sub
pop
cmpsl
fimuls
push
addr16
cwtl
arpl
or
push
int
scas
sbb
movsb
dec
sbb
out
pop
xchg
jns
insb
enter
push
mov
outsl
int3
arpl
mov
and
or
or
adc
push
in
pop
xor
add
inc
insl
psllw
ljmp
xchg
std
pop
js
stc
push
jl
dec
lea
mov
test
addb
sub
dec
movsl
push
jmp
ret
cmpsl
push
jmp
push
fwait
xor
das
add
fsubs
mov
pop
adc
dec
repnz
jp
cmc
push
add
pop
jecxz
jge
push
lods
hlt
fadds
mov
inc
out
ror
outsl
outsb
mov
push
scas
fisubl
jb
je
add
push
jmp
xor
cmp
test
and
cltd
jg
pop
mov
or
push
in
sbb
xchg
std
mov
pushf
dec
js
pushl
leave
lods
dec
test
jl
stc
das
jge
int3
loop
jno
inc
pop
and
loop
add
outsl
xor
or
mov
adc
and
xchg
loope
mov
mov
and
ss
dec
pop
xchg
jo
es
aad
xor
ficompl
stos
es
cmpsb
adcb
xlat
mov
jnp
add
out
icebp
std
and
pop
enter
and
jno
enter
dec
or
cmpsl
sub
leave
pop
adc
rcr
xchg
pop
or
fscale
push
and
ss
mov
and
inc
pop
inc
jb
loop
and
xorl
fildl
jge
aad
inc
idivl
repnz
orl
hlt
xor
int3
mov
out
pop
popf
or
cld
sarb
and
cmpsb
pushf
adc
sbb
and
mov
leave
pop
inc
loope
mov
dec
xchg
stos
inc
mov
aam
imul
cltd
xchg
scas
mov
and
arpl
adc
mov
scas
pop
pop
clc
es
call
insb
mov
sbb
clc
cmp
stos
aad
push
shl
cwtl
or
adc
je
push
out
arpl
addl
ret
jmp
sub
dec
aad
cmp
rorb
inc
push
pushf
sbbb
insl
cmp
and
inc
inc
xlat
inc
mov
fisttpll
rcrb
or
adc
dec
daa
shll
push
int3
push
test
fwait
inc
jle
inc
and
or
rep
ja
jp
cmpsb
dec
mov
pop
sub
je
mov
xor
movsb
in
sbb
add
int
cmp
push
pop
bound
popa
push
insl
sahf
fdivs
daa
outsb
dec
into
je
inc
out
and
ljmp
pop
or
pop
mov
and
mov
jle
mov
sub
push
dec
lock
in
scas
loope,pn
push
pop
adc
fsubl
pop
mov
pop
push
and
es
xor
mov
imulb
mov
aaa
lret
push
jne
xchg
xchg
xchg
or
lods
push
mov
mov
xor
jae
out
psubusw
mov
adc
dec
movsl
imul
adc
out
pop
xchg
in
hlt
lea
push
sbbl
cltd
xlat
daa
and
push
adc
xchg
test
add
push
cmp
and
jge
dec
pop
stc
cmpsb
dec
jne
push
stos
sub
cmp
lods
or
imul
push
adc
out
call
push
mov
mov
and
out
loope
push
sbb
repz
test
fistps
sahf
ret
mov
xchg
mov
scas
push
clc
ss
lods
stos
cmp
jno
jno
mov
mov
inc
jbe
push
loop
ljmp
ja
cs
or
mov
xchg
leave
js
pop
cmpsl
fstl
xlat
call
js
push
add
aad
mov
lea
data16
or
mov
mov
sub
loop
aam
lret
jge
add
out
lea
mov
ljmp
mov
add
adc
fbld
push
pop
clc
mov
cltd
mov
andl
cmp
call
popa
les
adc
int3
lods
stos
push
sub
jns
xchg
sbb
stc
sub
int3
mov
sub
xchg
cli
xor
test
fcmovnb
aas
imul
jecxz
inc
clc
lret
push
ja
mov
enter
and
rclb
cmpsl
xchg
and
sub
imull
mov
pop
add
or
push
fs
pop
push
pop
cmp
push
into
bound
lcall
pop
pusha
loope
sbb
sbb
pushl
xlat
addr16
cld
push
add
and
push
inc
iret
imul
push
cmp
sbb
test
adc
xchg
or
xchg
push
cmp
cmp
mov
inc
xchg
rolb
iret
xor
xchg
sbb
rorb
xor
clc
jb
pop
and
repnz
dec
fs
sub
movsb
sbb
push
sub
pop
push
into
dec
imul
addr16
call
aad
inc
xchg
pop
mov
xor
and
rcl
leave
mov
push
mov
mov
add
lods
daa
dec
in
rorl
mov
nopl
jg
mov
arpl
xchg
mov
xor
jae
cmc
decl
jmp
xor
sub
loop
test
xor
iret
push
cltd
dec
push
sahf
xlat
cmp
xor
mov
mov
add
in
int
pusha
inc
push
cmpl
sbb
jae
int
fcmovu
mov
rorb
hlt
push
or
call
es
and
sahf
dec
push
sbbl
std
mov
adc
jp
mov
lods
push
fcmove
inc
add
xor
pop
es
aas
enter
lcall
test
jbe
xchg
stos
js
xchg
dec
dec
fs
push
pop
pop
add
data16
sbb
xor
xchg
mov
push
and
repnz
loopne
mov
shl
stos
out
mov
dec
mov
or
ja
ss
xchg
cmp
push
mov
imul
jecxz
iret
cwtl
mov
ss
int3
dec
xor
mov
push
xor
push
mov
sbbb
mov
iret
push
add
mov
mov
inc
mov
lcall
pushf
fistpll
mov
push
cld
push
imul
mov
les
mov
sahf
bnd
aas
xlat
les
sahf
jno
popf
aad
adc
jb
scas
xchg
mov
add
enter
push
sete
rcll
rcrb
lret
adc
aas
add
pop
dec
jmp
lret
jecxz
outsb
lods
xchg
and
ja
imul
aad
sbb
outsb
pop
out
mov
daa
cmpsl
and
bound
push
sbb
xchg
push
hlt
and
mov
and
dec
jae
mov
dec
sarb
cmc
dec
mov
pop
or
sub
inc
andl
cmc
xorl
adc
pop
imul
dec
pop
lret
addr16
cmp
inc
icebp
pop
or
mov
imul
out
push
cwtl
sti
fstl
pop
add
mov
dec
and
or
orb
rorl
sbb
loope
and
or
dec
jmp
test
push
jnp
mov
xor
mov
scas
xchg
mull
jno
shlb
cmp
adc
pushf
idivb
imul
jbe
mov
lret
orl
fstpl
outsl
dec
dec
inc
popf
or
in
mov
ret
xchg
mov
in
daa
mov
push
or
jecxz
iret
cs
rcll
mov
es
ljmp
inc
push
xlat
and
adc
xor
in
leave
cld
enter
mov
repnz
inc
lea
sbb
or
fs
jns
test
or
popf
push
cld
cld
aad
into
je
dec
mov
jb
pop
mov
sti
in
das
xchg
stos
mov
sbb
lahf
mov
jo
cwtl
xchg
jle,pn
daa
testl
mov
scas
cmp
jae
les
test
lods
pop
inc
cwtl
jecxz
fs
sysret
out
loopne
or
pop
lds
dec
imul
cmp
lods
and
jl
push
jb
das
add
pusha
mov
lods
pop
cltd
outsl
inc
call
test
pusha
xor
ret
adc
ljmp
imul
into
or
mov
rcrl
lahf
ss
mov
cmp
fnsave
add
stc
cltd
sti
lods
psrld
andb
lret
cmp
jmp
add
dec
adc
test
pop
xor
mov
clc
sbb
add
clc
dec
mov
add
jmp
sub
stos
movsb
push
test
push
jmp
mov
mov
lcall
push
test
lock
and
cmp
add
mov
mov
xchg
outsb
test
or
enter
sub
int
cltd
sub
jb
popf
xor
aaa
jno
add
mov
add
mov
mov
cmp
js
das
add
insb
add
push
dec
inc
in
mov
cmp
rcl
sti
cmpsl
pop
out
imul
pop
pop
pop
dec
push
movsb
push
cmp
rcl
mov
push
mov
mov
dec
je
xchg
xchg
std
push
lods
pop
movsl
andb
aas
and
iret
xor
adc
jo
test
lret
inc
mov
clc
sub
xchg
cmovp
in
ds
aam
adc
sbbb
loop
iret
cmpsb
ficompl
stc
cmpsl
ficoml
jge
mov
mov
jo
out
xor
imul
out
test
out
and
test
js
mov
stos
arpl
adc
js
sbb
sbb
jle
mov
int
hlt
lret
add
out
push
xchg
inc
pusha
jl
sbb
js
test
mov
leave
daa
push
loopne
jnp
inc
es
loop
pop
sbb
mulb
fstl
shll
and
repnz
adc
repnz
jo
mov
inc
lcall
movsl
sbb
out
dec
dec
lods
loopne
inc
pushf
sub
iretw
insl
cmp
mov
sub
xchg
ljmp
scas
lods
cmpsl
xlat
repnz
sub
aaa
in
mov
xchg
jmp
mov
cmp
pop
loop
adc
fisubl
das
sbb
xchg
jp
cli
lret
outsb
shlb
out
ret
pop
pop
and
loope
add
or
xor
dec
and
cmovne
sub
jp
insb
push
pop
lcall
js
fucomi
hlt
faddp
xchg
cmp
movsb
jno
and
mov
rclb
lds
loop
inc
outsl
mov
bnd
jne
fbld
add
push
mov
arpl
pushf
or
dec
insl
mov
sub
mov
mov
in
xchg
jnp
test
fnstenv
iret
jmp
pop
and
in
jl
pop
ja
pop
inc
shr
pop
push
push
xchg
add
pop
into
lods
pop
aaa
mov
in
ror
popf
mov
in
mov
je
pop
fwait
clc
cmp
insb
jnp
cmp
movq
and
int
leave
imul
dec
xchg
test
xor
sub
cmp
inc
jmp
in
jge
pop
xchg
xor
enter
call
inc
xor
sub
es
jo
mov
in
sar
call
sbb
cmp
xchg
inc
lret
out
lea
lds
dec
les
sbb
jecxz
and
and
into
dec
jae
mov
nop
dec
int
or
mov
rcr
sbb
dec
cltd
mov
cmpb
mov
testl
sbbl
cmc
sub
jl
add
ljmp
jp
roll
mov
out
iret
movsl
imul
stos
or
mov
pushf
daa
dec
jle
push
dec
push
sbb
mov
lea
push
pop
add
lea
and
dec
jbe
aaa
sub
test
movsb
test
add
out
xchg
icebp
imul
iret
int3
jo
out
xor
arpl
ds
adc
or
inc
sbb
insl
add
xor
jge
inc
push
xor
inc
pop
mov
adc
dec
push
inc
movsb
fsubrl
pop
loop
movsb
out
gs
decb
jne
out
sbb
mov
in
add
dec
pop
adc
fdivl
inc
mov
enter
sub
movsl
pusha
aas
je
push
inc
mov
ja
fcoms
shrl
sarb
int
pop
xchg
pushf
loope
jno
sahf
popa
xor
push
dec
sbb
int
push
mov
mov
icebp
dec
mov
pop
outsl
dec
sub
loope
pop
divb
cld
inc
dec
ljmp
inc
push
clc
rcr
and
movl
inc
mov
sbb
mov
jnp
movsl
xchg
cmp
je
movups
dec
loope
outsl
jb
push
cmp
fldz
ret
dec
cli
fs
dec
dec
stc
pop
mov
mov
cmp
inc
pusha
mov
sub
sar
or
pop
scas
addb
out
in
insb
sbb
mov
outsl
imul
loope
mov
popa
test
in
jno
fnstsw
mov
mov
jmp
in
sub
push
fstpl
adc
in
cmp
fs
loopne
dec
iret
pop
fcomps
imul
faddp
adc
mov
loope
push
punpckhwd
push
cmpl
dec
and
and
rol
test
bound
xchg
rcll
stos
mov
mov
xor
add
adc
xor
ret
enter
adc
pop
pop
iret
inc
xchg
adc
ret
adc
fwait
std
inc
cld
icebp
pop
mov
stos
xchg
sarl
das
add
mov
pop
cvtpi2ps
mov
mov
std
int3
or
test
sarb
jns
in
dec
add
popa
cwtl
gs
lret
add
lods
pop
neg
test
push
mov
nop
jno
insb
cmc
pushf
add
mov
mov
fcmovnbe
outsl
push
sub
pop
movsb
add
ss
and
mov
hlt
nop
or
scas
gs
pop
sbb
inc
stos
push
fwait
mov
sti
das
dec
scas
jo
inc
loopne
fildll
mov
or
mov
iret
xorb
or
outsb
movsl
xchg
fcoms
sbb
dec
cmp
cmp
mov
mov
dec
sub
and
xor
xchg
and
xchg
cmp
push
dec
pusha
mov
jl
cwtl
mov
fidivrs
sbb
daa
pop
jl
je
int
addl
lcall
dec
mov
mov
icebp
dec
mov
jae
jne
pop
fxch
mov
push
dec
lahf
pushf
leave
rorl
mov
mov
adc
insb
and
sub
imull
xor
adc
out
fldt
lds
nop
lret
sub
mov
popa
sbb
sub
pushf
or
adc
lahf
push
shl
shlb
shlb
adc
sbb
or
les
loope
mov
xchg
dec
sbb
dec
das
cmp
roll
bswap
test
test
lcall
call
icebp
mov
jge
cmp
je
push
icebp
dec
movsl
aas
out
sub
pop
sbb
mov
push
sub
sub
cmpsl
clc
rol
mov
or
mov
adc
mov
sbb
mov
or
ret
rclb
mov
imul
jg
dec
repnz
andb
andb
scas
jae
ret
dec
push
mov
repz
jge
adc
jp
jmp
shlb
add
cmp
sbb
sub
inc
xchg
div
push
rcrl
push
dec
cmp
rolb
pop
pushf
inc
cmp
mov
into
js
pushf
add
xchg
jl
add
push
in
daa
mov
xchg
mov
pop
adc
inc
push
aaa
pop
cmpsl
sub
lret
cmp
cmp
dec
xchg
outsl
jae
je
push
push
push
and
aad
push
out
sub
je
inc
rcr
and
sbb
sti
decb
in
ljmp
sbb
sbb
and
add
mov
inc
test
outsl
or
dec
data16
data16
xchg
xchg
setb
or
ficoml
popf
mov
cmp
cwtl
mov
or
fisubrl
mov
jmp
lcall
mov
pop
pushf
jge
in
addl
enter
lret
loope
je
cld
ret
shl
pop
sub
xchg
cmpsl
roll
push
and
sbb
movsb
or
cli
sub
push
cli
mov
jae
ficoms
cmpsb
mov
jmp
and
mov
test
pushaw
into
in
cmp
xchg
movsl
in
int3
jge
out
mov
ret
scas
aaa
insl
mov
ds
into
rcrb
mov
push
and
add
movsl
pop
or
cltd
into
mov
mov
sbbl
jo
mulb
inc
cmpsb
mov
ds
push
xor
or
adc
mov
shlb
aam
fwait
inc
cmp
in
cli
dec
mov
mov
arpl
fwait
pop
xor
inc
or
jae
call
or
cs
add
and
jmp
push
sbb
cli
aam
jne
cmp
xchg
jb
jecxz
push
and
loope
in
xor
mov
addr16
bound
inc
insb
sub
popf
popf
aas
adc
aad
fs
and
leave
mov
xchg
dec
cmovnp
sarl
cmp
sub
mov
hlt
cld
mov
adc
xchg
cmp
ret
sbb
lock
ds
pop
xchg
and
xorl
jbe
push
xor
call
loop
dec
adcl
les
add
sbb
and
imul
push
mov
shll
xor
jp
out
mov
dec
dec
es
and
sbb
sub
mov
aaa
pop
dec
arpl
xchg
flds
lods
jp
jg
or
dec
loope
test
pop
cltd
mov
jbe
and
insl
push
jns
pop
dec
mov
mov
ja
mov
push
subl
mov
nop
sub
xlat
xchg
pushf
mov
push
push
jp
sahf
fsub
jge
dec
mov
fistl
xchg
popf
loope
out
lcall
xchg
scas
shlb
test
sbb
adc
shlb
repz
int3
stos
mov
pop
les
push
test
adc
adc
lahf
ss
subb
jno
mov
mov
stos
mov
xchg
int
fsubl
mov
push
out
shrb
in
sbb
sub
ds
divl
icebp
push
stc
shlb
xor
jne
fnsave
dec
in
mov
out
xchg
add
ss
fcmovnbe
mulb
leave
jno
test
pushf
ret
lock
pop
sub
mov
and
nop
arpl
sbb
lods
xchg
and
rcl
lcall
std
adc
push
mov
xchg
fldt
insb
insb
mov
inc
in
cmp
insb
mov
int3
repnz
hlt
pop
dec
sbb
mov
jmp
mov
mov
fcomps
mov
ss
in
iret
out
gs
mov
adc
sbb
or
or
in
fwait
xchg
pop
mov
test
loope
out
cmp
clc
xchg
leave
lret
pop
dec
mov
mov
inc
ljmp
scas
ret
adc
jne
in
loop
xor
cmp
mov
imul
sbb
pop
paddusw
repz
repz
in
sub
faddl
vfrczpd
mov
outsb
mov
ss
frstor
jbe
dec
repnz
or
pusha
lods
dec
inc
add
hlt
popa
ds
and
leave
pusha
ja
int
test
movsl
cmp
push
dec
cmpsb
dec
jge
jnp
mov
sbb
xor
shlb
mov
cltd
add
adc
mov
pop
les
data16
mov
icebp
lret
xchg
loopne
test
fwait
test
mov
cmp
pop
fisttpl
jbe
dec
push
popa
or
icebp
repnz
mov
rcrl
cmp
jge
pop
ljmp
mov
cltd
sbb
xor
mov
sti
int
pop
cmpsl
or
pusha
xchg
and
int
lret
and
lcall
sbb
adc
js
insl
int3
add
and
out
or
xchg
imul
add
xchg
insb
enter
cmp
and
rcll
pop
jp
push
cmp
sub
outsb
aaa
mov
shrl
out
fldl
and
add
lcall
mov
leave
out
mov
popf
jo
xor
push
ja
adc
and
lcall
enter
mov
out
shr
dec
and
push
mov
mov
pop
rclb
mov
lret
in
push
arpl
jge
loope
std
xor
xchg
xor
shl
repz
in
or
sahf
sbbl
xchg
pop
insl
push
inc
fistl
ss
pop
jbe
lret
push
xchg
insb
int3
iret
mov
mov
orb
popa
mov
sahf
das
sub
mov
jle
bnd
xor
and
outsl
pop
xor
fwait
int
push
out
dec
push
pop
pushf
fisubrs
nop
push
xchg
push
test
add
xor
or
push
inc
cmpsb
aas
cmc
int
loopne
push
mov
jmp
test
hlt
push
jge
scas
xor
cs
daa
xlat
sar
int
lods
mov
je
mov
or
or
pop
in
cmp
jg
fisubs
dec
inc
jbe
in
std
mov
lods
std
ret
add
xchg
sbb
dec
mov
or
xlat
mov
lret
mov
inc
mov
movswl
sub
and
mov
dec
aad
jmp
sti
sub
xlat
jne
addr16
cmp
movsb
insb
bnd
dec
sub
outsb
and
pop
push
adc
arpl
pop
and
sbb
adc
in
fdivrl
mov
mov
xchg
cmpsb
push
cmp
pop
fisttpl
add
je
in
push
nop
cmp
idiv
dec
jg
cmc
popf
xor
mov
mov
push
jecxz
cmp
jp
adc
xchg
cmp
sbb
pop
mov
ljmp
scas
rcrl
pop
imul
inc
push
dec
fwait
lret
mov
sub
pusha
ret
xchg
xor
loop
rcl
bound
sub
push
mov
mov
and
out
sar
push
inc
push
inc
sahf
mov
rorb
inc
and
or
stc
mov
push
xchg
and
ja
sti
jo
xchg
lret
inc
xor
sub
sbb
push
lea
orl
or
add
sub
mov
outsb
out
test
dec
fsub
mov
pop
adc
sub
stos
adc
xchg
in
in
mov
ret
sbb
mov
mov
push
gs
out
sub
jb
mov
loop
rcl
in
iret
iret
int
pushf
xchg
cmp
lock
mov
lock
shlb
xor
pop
jne
mov
and
pop
test
jne
adc
and
sub
aas
push
inc
int3
adc
out
es
xor
in
out
mov
dec
xchg
sbb
insl
push
dec
addr16
pop
divb
out
mov
bnd
sub
sarl
mov
jbe
add
sbb
sbb
in
sbb
data16
and
leave
adc
mov
lods
in
shll
je
xchg
and
popa
cmpsb
sbb
push
push
pop
sub
pop
ss
pop
out
ljmp
repnz
idivl
mov
or
mov
dec
ljmp
addr16
imul
cmp
popa
imul
bound
add
push
cli
sub
mov
cmpsl
arpl
in
out
fidivl
lods
inc
jl
out
hlt
inc
sub
sub
push
jmp
sahf
or
pop
inc
inc
pop
inc
jp
pop
daa
push
test
movsb
jne
popa
call
pop
adc
mov
cmp
pop
lock
adc
int
pop
mov
outsl
pop
push
add
into
lcall
aas
xorb
pop
sbb
inc
negl
ja
sub
sub
test
xchg
out
fwait
gs
stos
fisubrs
stos
test
shll
push
subb
dec
out
mov
cwtl
sbb
in
mov
inc
or
iret
jb
inc
ljmp
lret
outsb
loop
loope
mov
push
ds
xchg
roll
nop
imul
push
outsl
lcall
and
rcr
rep
and
xchg
fisubs
mov
stc
cmc
mov
cmpsl
stc
test
in
jnp
stc
xor
mov
cmp
ss
ja
outsb
xchg
aad
cwtl
mov
adc
inc
xor
notb
ja
iret
lods
pop
cmc
int
inc
jno
pop
xor
ret
data16
sub
inc
xor
int3
shlb
inc
and
dec
rorb
arpl
or
rol
inc
sbb
pop
pop
mov
scas
dec
push
push
cmp
push
xchg
cwtl
cmp
sub
mov
das
sti
pop
add
pushf
dec
pop
mov
xor
mov
andb
mov
and
adc
and
or
add
cmp
push
lds
adc
xchg
pushf
pop
imul
xchg
dec
xchg
lds
loopne
and
in
adc
and
cmpsb
pop
cmp
movsl
mov
bswap
cmp
jne
mov
cmc
adc
mov
icebp
lock
add
je
mov
mov
notl
nop
pop
repnz
xchg
lret
jne
ljmp
les
nop
inc
fidivl
jns
loop
mov
daa
sti
lods
andb
ret
push
mov
cmp
dec
add
mov
lret
or
dec
movsl
call
cmp
cwtl
mov
inc
jmp
loop
cmp
jle
jbe
into
sbb
xchg
sbb
pop
adc
pop
test
dec
inc
in
jp
negl
imul
fmull
mov
and
adc
dec
jge
popa
dec
shlb
xlat
lcall
fisttpl
loope
imulb
outsb
inc
inc
inc
dec
mov
mov
push
xchg
out
jnp
stc
fs
iret
loope
jno
in
push
movsl
fnstenv
mov
pop
clc
fld
ljmp
and
jmp
divb
cmp
jne
cmpsb
mov
mov
mov
dec
inc
xchg
and
xchg
inc
jl
popa
mov
mov
call
cmp
sbb
ja
or
repnz
xchg
and
xor
es
push
xchg
and
rcrb
mov
jmp
jnp
pop
xchg
sbb
inc
cmp
jno
ss
cmc
inc
mov
push
push
js
add
pop
dec
add
je
ss
in
pop
ljmp
ljmp
mov
icebp
push
add
jge
insb
nop
pusha
addr16
dec
or
ficompl
inc
cmc
cmpsl
jecxz
repz
sub
les
aaa
loope
test
bound
push
hlt
pop
ficomps
jns
pop
cmpl
jb
mov
int3
repz
cmp
lock
xor
aam
or
pop
cmp
jge
sbb
outsl
ret
imulb
jecxz
dec
insb
xchg
mov
aaa
sahf
dec
mov
divl
pop
jb
pushf
sub
jg
xchg
xlat
dec
sub
jp
jecxz
pop
fadds
sbb
scas
ret
or
inc
adc
pop
and
int
gs
call
sub
ss
push
leave
aam
mov
add
pop
add
jecxz
std
scas
lds
push
into
add
cmpsl
jnp
filds
sbbl
jmp
aam
cmp
int3
pusha
jp
xlat
or
jl
sub
sbb
imul
sbb
xlat
rcll
sahf
cmc
sub
xchg
fldenv
push
adc
ss
cmpxchg
sbb
bound
push
in
push
sub
in
mov
repnz
out
test
repnz
pop
call
insb
lret
sub
xorb
aad
inc
in
mov
jmp
or
pop
or
inc
out
adc
insb
mov
pop
push
jo
cmp
or
xor
rorl
pusha
ret
sub
test
pop
jg
dec
aad
stos
lea
push
cwtl
scas
lahf
push
in
inc
sub
sub
or
jne
mov
mov
out
push
ljmp
lock
call
ljmp
outsl
push
mov
insb
pop
mov
ss
adcb
hlt
repnz
jae
mov
mov
lret
nopl
xchg
rcl
add
aad
popa
or
std
repz
push
cmp
push
inc
std
and
cli
lea
rclb
jp
push
test
mov
sbb
adcb
xchg
sbb
xchg
leave
in
or
in
adc
imul
mov
dec
arpl
xchg
xchg
xor
push
mov
or
sbb
fwait
loope
stos
mov
sbb
sbb
push
xchg
into
jle
loop
popa
push
xchg
gs
fistps
mov
and
cmp
jae
je
sbb
sbb
scas
or
shrl
sub
dec
pop
lock
lock
jnp
mov
lcall
mov
sub
mov
std
int
mov
addl
cmpl
sub
hlt
in
sbb
fs
addr16
jns
test
addl
fldenv
push
js
or
mov
add
push
mov
dec
bnd
mov
cmp
dec
dec
dec
in
jne
xor
jmp
stc
mov
outsb
es
je
jmp
sub
xor
enter
sub
cmp
dec
popf
paddq
mov
shl
ds
xchg
and
jmp
push
lods
das
sub
sub
mov
dec
in
enter
decb
and
arpl
dec
and
mov
xchg
popf
sbb
dec
mov
int
xor
sub
rcrl
push
mov
inc
nop
fwait
dec
insl
xor
lods
sti
enter
mov
leave
movups
xor
mov
xor
mov
pop
pusha
fistpl
subb
sbb
cmp
call
adc
aad
jbe
aad
pop
or
cwtl
rolb
and
push
add
jmp
sbb
cmpsl
sti
adc
dec
mov
nop
pop
add
fistps
mov
dec
xchg
das
test
xor
fimuls
lock
cmp
push
xor
cli
mov
sar
sub
mov
inc
ljmp
loop
in
fs
rorl
lret
add
jl
stc
mov
xchg
mov
rolb
std
imul
xchg
cmpsl
jae
mov
mov
insl
xchg
fsubp
push
js
cmp
pop
push
imul
fwait
inc
and
xchg
test
out
sti
xor
xchg
sub
sarl
sub
xor
xchg
sbb
loop
push
cmp
orl
adc
mov
ds
mov
shrb
push
mov
mov
sbb
fildl
pop
push
or
popa
shrb
sti
arpl
jmp
jle
xchg
pop
push
imul
or
mov
mov
test
aas
int3
fisubl
push
pusha
push
sub
jno
rolb
xor
cs
insb
pop
pop
fistl
imul
dec
movsb
repnz
mov
shrb
out
jle
pop
addb
fs
dec
hlt
clc
sbb
repnz
sub
and
sahf
sbb
addr16
mov
pop
cmp
sub
icebp
push
mov
mov
push
lods
push
mov
cmp
pop
mov
aad
es
lods
push
sti
mov
mov
push
jns
insl
push
pop
adc
xor
popf
imulb
push
imull
cmp
xor
jle
xchg
jg
lock
test
pop
or
fisttps
and
leave
sbb
es
test
sub
out
insl
popf
sarl
popf
out
decl
push
xor
pushf
mov
out
add
daa
movntps
push
cmpsb
out
inc
jnp
in
sub
mov
sbb
popa
loope
daa
dec
es
pop
pop
mov
and
cmp
jno
fnstsw
pop
repnz
cs
aas
pop
or
mov
pop
mov
push
push
push
inc
loopne
jecxz
mov
enter
addl
xchg
imul
mov
add
dec
xchg
adc
test
dec
mov
outsl
sahf
test
add
mov
add
push
into
sub
push
shl
xchg
loop
aas
xor
mov
in
xor
push
pop
or
cwtl
jl
mov
sub
aad
aaa
in
insl
push
push
xchg
cli
shrb
and
daa
inc
sti
movsb
xor
mov
push
push
sbb
dec
xor
xor
and
inc
movsb
inc
orl
out
cmp
into
pop
xchg
or
mov
inc
cld
push
sub
inc
int3
pusha
xor
inc
lds
fstpt
out
daa
es
mov
popf
inc
jle
jp
rcr
ss
lods
pop
and
mov
pop
sarb
out
andl
sbb
mov
fnop
mov
scas
pop
movsb
sub
adc
mov
mov
pop
je
repz
jle
inc
and
adc
pop
jns
xchg
inc
sbb
test
pop
sub
mov
hlt
int3
sahf
sbb
jns
or
cmp
sti
in
xor
cmpsb
insb
cmp
push
imulb
in
iret
mov
cmp
adc
jbe
xor
sbbl
sbb
mov
sbb
fwait
decb
decb
fxch
mov
inc
cmp
aas
nop
pop
push
into
jg
push
add
test
jno
jp
xor
lods
lea
sub
outsl
hlt
dec
inc
leave
cmpsb
psubd
aas
lods
ds
loop
ds
adc
arpl
pusha
iret
pop
and
and
push
push
incb
xor
in
dec
fcmovnbe
sbb
mov
mov
pop
xchg
loopne
ffree
lods
add
mov
lret
add
mov
push
mov
xchg
sub
ss
push
sbb
fisubl
cs
outsl
cwtl
into
sub
push
mov
arpl
aas
dec
mov
sub
les
leave
adc
push
mov
test
mov
xlat
dec
jo
sbb
lock
fsubl
roll
or
inc
gs
sbb
ds
rorb
sbb
arpl
push
mov
jmp
popf
movsb
and
repnz
out
cmp
in
and
shl
stos
mov
sub
jmp
xlat
lock
iret
jb
jae
add
mov
jae
je
addr16
inc
jle
pop
lock
movsb
adc
push
lcall
ret
adc
mov
fisttpl
mov
cmp
sub
inc
or
xchg
daa
daa
lods
fcmovnu
lea
jg
cmp
mov
mov
push
mov
addl
add
or
xor
push
vmread
shr
pop
xor
ds
xchg
rclb
cmp
addr16
inc
fstpl
push
push
loop
xchg
ljmp
mov
cmp
push
jle
add
mov
adc
lea
push
push
cld
rolb
and
mov
fsts
outsl
gs
jne
add
xlat
inc
xor
ror
mov
dec
pop
mov
push
lret
aas
gs
test
xchg
test
fmul
xor
mov
movsb
sub
dec
inc
and
sbb
pusha
hlt
cltd
je
mov
lock
mov
aas
dec
xchg
fs
les
loope
outsl
inc
stos
mov
cld
mov
and
lods
imulb
or
je
rorb
push
xor
je
stos
rcrb
rcl
ds
movsb
je
cmp
and
xor
sub
sbb
xchg
cmp
jb
push
cli
int
scas
sahf
xchg
inc
xor
adc
fldt
mov
iret
sub
pop
dec
in
jp
nop
or
xchg
into
pop
stos
pop
ds
lods
scas
push
sub
es
into
es
sbb
and
insb
add
push
lods
repnz
arpl
stos
in
lcall
mov
and
in
outsl
pop
es
push
mov
pop
push
xchg
push
jno
mov
sbb
xor
sbb
or
sbb
out
nop
mov
cmp
add
out
mov
mov
mov
ret
stos
xchg
js
ficompl
xchg
les
jnp
or
jo
sbb
xor
rol
rorb
fidivs
add
jbe
pop
bound
pop
test
inc
imull
fdiv
mov
jbe
cld
sub
mov
xchg
fimull
pushf
inc
int
sbb
adc
movsl
rolb
push
popa
add
mov
pop
pop
cmpsl
std
jmp
push
iret
hlt
mov
mov
mov
inc
jne
scas
and
ja
daa
ja
mov
add
nop
mov
pop
ss
sub
lods
cmp
fildl
rcr
stc
jo
fsubrp
add
out
and
call
pushf
sub
xor
icebp
aam
test
sub
mov
sub
xchg
dec
pop
sbb
mov
mov
or
jnp
dec
and
stc
testb
jp
cli
iret
push
outsl
cwtl
mov
jge
cltd
fcoms
mov
and
out
jg
add
cmp
fsubs
jne
mov
ja
xor
add
dec
or
mov
stos
adc
push
xchg
mov
orl
in
movsb
mov
addr16
gs
xchg
test
iret
enter
rclb
fbstp
pop
lret
out
test
mov
xor
lock
xlat
xor
sub
jno
cmpsw
jl
loope
imul
jmp
cmp
mov
mov
push
ja
out
mov
dec
cltd
xchg
arpl
jns
lea
pop
mov
pop
aam
dec
inc
dec
xor
xchg
out
popa
jne
out
les
sti
cmc
es
sub
mov
scas
mov
sbb
stc
or
test
pusha
push
dec
push
sub
fisttpl
push
lds
mov
inc
decb
lcall
push
aaa
std
loopne
or
bnd
mov
repz
stos
sbb
ficoml
cli
das
shlb
cmpsb
xchg
add
lahf
xchg
enter
lahf
mov
int3
adcl
adc
repz
cli
jns
push
out
sar
fisttpll
fwait
fs
mul
dec
movsb
xor
mov
push
mov
cli
cmc
jl
mov
push
xlat
add
mov
aam
imul
mov
jne,pn
jle
nop
addr16
scas
rolb
lea
mov
mov
push
inc
movsl
cli
ja
ret
cwtl
int3
fidivrs
sbb
hlt
fisubs
inc
pop
insb
pop
shlb
stos
icebp
negb
roll
inc
stos
cmp
xor
cld
mov
pop
dec
xor
push
lret
inc
jbe
enter
sti
cmp
cmp
add
cmpsl
lock
sbb
clc
mov
jae
sbb
mov
cmpsb
inc
aam
dec
cmpsl
or
scas
pop
mov
icebp
shlb
jno
cmp
mov
popa
inc
jae
test
mov
mov
cmovle
stos
lods
inc
inc
xchg
sub
nop
or
mov
inc
inc
fiaddl
fiaddl
dec
stos
cmpsl
aas
dec
shll
in
mov
repnz
mov
sbb
fisubs
push
lock
addl
xor
fistpl
dec
sbbl
es
and
shrb
daa
mov
cli
lods
nop
insb
or
cltd
add
inc
pop
pop
dec
mov
stc
jno
fists
pop
out
pop
cwtl
je
and
fdivrl
mov
pop
shl
sahf
insb
rorb
mov
inc
popa
pop
sbb
or
hlt
std
mov
out
jl
jne
sbb
xor
inc
cmp
repnz
inc
fstpt
xchg
cmpsb
mov
repz
jg
nop
push
dec
and
sti
cmp
or
pop
je
dec
and
xor
or
popf
orl
in
jmp
push
and
inc
or
repz
mov
xchg
cwtl
gs
or
cmp
add
jle
adc
dec
dec
outsl
leave
mov
sahf
mov
cmp
lods
icebp
outsl
aaa
xor
add
jge
lahf
xor
out
data16
cmp
mov
orl
sub
mov
cmpsl
adc
jae
call
jbe
xchg
xchg
and
in
ss
clc
and
push
dec
or
or
add
mov
pop
adc
adc
mov
sahf
cltd
xor
aad
lea
rsqrtps
mov
or
test
xor
mov
test
clc
or
or
add
cmp
mov
xor
les
insb
mov
lods
nop
clc
jbe
inc
fcoms
aad
add
mov
mov
inc
cmp
mov
jnp
mov
adc
enter
mov
pop
mov
pop
loopne
shlb
addr16
mov
sub
mov
xchg
and
jne
bound
push
std
int3
mov
sbb
pop
adcb
sbb
dec
inc
lcall
sbb
imul
push
xor
mov
push
jecxz
out
jp
xchg
nop
data16
in
cltd
rorl
ds
ret
add
sub
pop
xor
outsl
pop
cmpsl
ja
daa
cmp
popf
jmp
pop
lods
mul
daa
into
fsubr
mov
mov
pop
mov
or
cs
inc
and
push
mov
push
inc
pop
fisubl
pop
ret
loopne
adc
push
inc
imul
pop
fs
sbb
jnp
insb
mov
ficoml
mov
loope
es
je
xchg
repnz
pop
imul
ss
jbe
lret
xchg
dec
ss
sbb
jno
cmp
adc
pop
xlat
ret
test
mov
push
sub
push
aaa
sbb
cltd
fldcw
leave
dec
int3
movb
clc
inc
and
cmp
xor
movsl
imul
mov
push
imul
ljmp
out
rcl
push
sahf
hlt
cltd
or
dec
and
xor
fidivrl
cmpsb
mov
into
mov
xchg
xlat
jmp
fbld
test
xlat
push
push
add
loopne
adc
mov
stos
push
out
test
mov
ss
mov
xchg
push
ss
in
stc
es
cmp
pop
mov
xchg
jecxz
daa
mov
fsts
lret
sbb
mov
fsubs
std
hlt
lret
jl
mov
and
inc
lea
aaa
outsb
imul
mov
sub
sbb
fisttpll
cmp
ljmp
orb
cmp
adc
xor
push
sti
cmpsl
xor
jne,pn
dec
lcall
rorb
mov
stc
dec
mov
or
outsl
incb
ret
cmp
fsubl
jno
outsl
std
inc
inc
add
push
call
mov
leave
lcall
mov
call
xchg
loopne
fsubl
test
sbb
stos
stos
fcmovnbe
loopne
and
out
mov
arpl
xor
add
in
jmp
insb
xchg
mov
test
pop
sub
or
fcomp
dec
push
pop
les
and
lret
lcall
or
and
cmp
mov
fidivs
jb
pop
jae
jmp
out
mov
bound
bswap
outsb
iret
inc
lea
pop
mov
scas
dec
bound
jb
inc
sub
movsl
push
mov
insb
fists
jbe
sbb
inc
stc
sbb
mov
sub
pusha
push
jne
pop
pushf
mov
orb
xchg
lods
fsubrs
adc
imul
inc
xor
test
push
jo
shrb
iret
idivb
mov
pop
mov
fcmovnbe
xor
and
mov
cli
mov
nop
xchg
clc
decb
ffreep
jle
sub
sbb
outsb
xchg
cs
pop
or
gs
inc
xchg
mov
out
dec
inc
xchg
outsb
addl
cld
test
addr16
leave
sub
jae
xchg
dec
dec
repz
push
add
xlat
jl
jbe
mov
movsb
out
add
push
inc
in
push
lcall
mov
push
dec
shll
dec
or
mov
imulb
ss
mov
add
int3
lods
leave
ja
leave
or
adc
out
mov
adc
sub
icebp
das
mov
xlat
out
mov
int
pop
jecxz
fisttpll
dec
mov
and
add
cmpb
cmp
lret
fnstenv
lock
push
pusha
jbe
icebp
cli
ja,pt
lock
lods
pop
and
out
mov
cmpsb
jbe
movsl
stos
xor
add
inc
mov
loopne
pop
xor
jno
cmc
mov
sbb
in
aas
sarb
je
leave
or
outsb
je
add
pop
pop
imul
and
repnz
sub
loop
fwait
jmp
mov
inc
outsl
adc
sub
push
jne
or
xchg
stos
mov
mov
pushf
xchg
int3
fisubs
mov
jne
mov
xchg
sahf
inc
pop
sbb
aas
pop
ja
mov
pop
add
inc
inc
jno
or
sub
xlat
sub
dec
inc
jmp
les
nop/reserved
push
imul
jmp
std
mov
mov
repnz
fstpl
scas
dec
pushf
in
dec
fwait
idivb
xchg
ffree
cmp
cwtl
jno
jge
or
jo
cltd
test
adc
cmp
pusha
ds
aam
mov
cltd
jmp
ficomps
sub
jl
ja
lret
roll
mov
loopne
negb
std
repz
js
push
jns
ret
fsts
add
mov
jns
add
dec
mov
outsl
popf
fbld
test
or
jbe
push
insl
inc
xor
xchg
add
stos
loopne
add
jmp
mov
jns
fistpl
xlat
in
sub
in
inc
stos
add
iret
or
ret
dec
push
fbstp
adc
gs
enter
or
das
sar
sub
ret
lcall
xor
cmpsb
xchg
pop
clc
or
fidivrs
jmp
sbb
fdivr
pushf
inc
aas
int3
cmp
cltd
fisttps
mov
jo
int
repnz
cwtl
mov
inc
movsb
xchg
mov
aam
jbe
sti
inc
pop
add
xorb
pop
lock
mov
pop
inc
push
cmp
fwait
and
mov
jo
orb
jnp
prefetch
andb
mov
divb
adc
add
mov
fwait
outsl
stos
hlt
cmc
inc
adc
ret
inc
sti
pop
jecxz
rolb
mov
call
arpl
mov
jl
inc
pop
add
inc
add
or
inc
jecxz
or
ss
xchg
ljmp
push
dec
jecxz
cltd
lds
xchg
or
adc
lods
addl
add
or
inc
xchg
mov
dec
push
pop
outsl
sbb
or
adc
mov
cmp
dec
push
and
loopne
mov
or
mov
xor
xor
mov
rcrl
out
pop
js
cmp
popa
pop
and
clc
loopne
inc
adc
jmp
les
lahf
xchg
icebp
imul
cmp
xor
sbb
pop
dec
mov
or
or
mov
xor
sbb
mov
aaa
xchg
xor
mov
push
jl
test
cs
and
mov
cmp
add
cmp
dec
icebp
ror
xchg
stos
mov
movsl
lods
nop
sbb
fwait
push
sahf
scas
ret
cs
xchg
aad
ret
mov
dec
imul
out
lods
sbbl
insb
int3
pop
mov
arpl
lahf
mov
lea
mov
insb
lret
xchg
inc
addr16
add
rcr
mov
adc
clc
mov
push
jp
into
shr
imulb
jnp
xor
int3
mov
or
and
aam
or
inc
sub
in
mov
shrl
push
dec
jnp
hlt
into
stc
aas
jg
lock
lret
mov
cmp
gs
cmp
dec
dec
xchg
add
pop
jb
imul
pop
xchg
fwait
add
outsl
out
mov
and
test
loope
pop
push
pop
imul
decl
sahf
fimuls
test
out
js
sbb
push
dec
sbb
xchg
adc
jp
aam
sbb
into
xchg
mov
divl
and
xor
push
push
xor
daa
dec
cs
jg
mov
mov
jnp
mov
dec
fildl
sbb
test
andl
aam
fildll
pop
arpl
and
dec
repnz
push
hlt
test
ja
inc
sub
xor
fsts
cmpsl
sub
jbe
mov
add
leave
add
mov
data16
leave
mov
imul
movsb
sub
mov
inc
fildl
out
lcall
mov
leave
lahf
repnz
nop
test
ljmp
in
out
cmp
xlat
stc
out
repz
dec
loope
xchg
mov
sub
sarb
add
xchg
mov
jge
in
mov
add
std
fisubs
stos
cwtl
int
jo
loope
add
and
lahf
les
add
xor
movsb
sub
pop
pop
popa
add
sahf
add
enter
aas
mov
lea
cld
pop
shll
inc
cmp
xor
cmpsb
decb
das
scas
mov
dec
pop
ret
wrmsr
fisubs
sbb
mov
cmp
aam
and
mov
jns
inc
int
fisttpl
mov
jnp
pop
imul
push
es
int3
mov
xlat
push
sub
push
call
cmp
pop
push
jle
mov
sbb
int
sbb
ss
hlt
inc
in
sarb
aas
push
icebp
fucom
in
jmp
repnz
adc
shrl
cmpsl
lret
bound
xor
pop
fwait
pop
into
les
push
jl
adc
cli
enter
popl
testl
repz
repz
push
movsb
rcll
lea
or
int
sbb
aas
pusha
mov
mov
int
jns
xchg
out
xchg
push
lcall
loope
cli
jo
std
push
jl
aad
pop
dec
mov
mov
movsb
out
mov
push
stc
rcl
in
outsb
cs
push
pop
sbb
outsb
pusha
push
inc
inc
jbe
rorl
cltd
mov
out
adc
mov
insb
adc
pop
jl
test
ret
dec
cmp
loop
cmp
mov
int
mov
and
mov
cmpsl
ds
rcll
jmp
aas
push
add
cmpsl
mov
iret
xsavec
inc
jmp
in
xor
jbe
arpl
add
jae
vphsubdq
cs
mov
lods
or
into
push
shl
lahf
jns
xchg
sbb
push
and
mov
fcoml
sub
cmp
loope
data16
iret
mov
xor
pushf
xchg
out
mov
xor
xor
and
push
scas
imul
inc
sahf
shrl
ja
lea
sbb
fisubs
xor
mov
adc
mov
mov
in
bound
gs
push
es
pop
maskmovq
notl
out
addr16
ss
rcll
or
inc
sub
out
fnstcw
mov
decb
add
sbb
sbb
jle
rcr
leave
jge
fldenv
jnp
sub
lret
cmp
push
shll
out
add
xlat
cmp
push
scas
shrd
jg
dec
stc
or
fdivs
ss
shrb
popf
fistl
ja
mov
mov
cmpb
lods
hlt
xor
cld
mov
adc
and
leave
lret
add
imul
cmp
loopne
notl
pop
add
gs
mov
lret
into
xchg
shlb
rclb
insb
fwait
nop
loope
mov
jo
movsb
push
jno
mov
jbe
stc
jbe
pop
fs
testl
adc
std
loope
ret
ret
insb
inc
or
push
sub
scas
outsl
movsl
inc
adc
add
push
daa
xor
rorb
pop
dec
cmpb
addb
test
xor
dec
icebp
popa
es
fwait
nop
cmp
push
lds
inc
mov
scas
jno
sub
out
lret
mov
pop
jne
mov
enter
sahf
xchg
jmp
pop
stos
addr16
pop
or
xor
out
or
loop
loope
jb
enter
jecxz
sbb
repnz
sub
sub
mov
inc
xchg
test
lret
mov
movsb
mov
fsubs
repz
push
bound
daa
push
mov
add
mov
loop
das
scas
scas
lock
cmp
sub
lcall
jmp
inc
sbb
in
aam
jg
add
and
call
xor
insb
and
in
push
jo
rolb
fadd
mov
push
xor
fcmovu
sbb
xchg
cld
push
loop,pn
leave
loop
push
stc
leave
xor
sbb
mov
cli
jno
cmp
call
hlt
movsb
dec
and
mov
test
daa
and
inc
hlt
jl
mov
ds
lods
es
and
imul
cltd
mov
repnz
cmp
xor
mov
inc
cmp
xchg
jecxz
out
mov
repnz
pushf
stos
movsl
jl
das
inc
lahf
pop
mov
adc
jmp
and
cmp
mov
xchg
loop
mov
jnp
loop
jecxz
sub
lret
mov
jno
xchg
in
enter
fstcw
mov
mov
iret
or
push
aaa
jbe
or
mov
fwait
cs
inc
pop
test
pop
das
mov
mov
ret
std
inc
rcrl
ret
icebp
inc
sub
push
iret
xchg
cli
outsb
adc
mov
aas
out
repnz
add
sahf
adc
test
cltd
aaa
or
fldcw
fcmovu
lret
pop
push
cmpsl
lods
popa
add
sbb
ret
mov
cmp
jmp
enter
inc
or
xor
jg,pn
mov
push
jmp
push
dec
repnz
xchg
inc
mov
xor
cmp
jle
in
jnp
in
and
fisubrs
inc
or
or
inc
mov
stos
xor
stc
or
loop
mov
dec
sub
je
jge
pop
popa
dec
incl
hlt
pop
fisubrl
dec
imul
repz
push
adc
hlt
data16
and
xchg
into
adc
xchg
add
scas
fwait
popa
sbb
jmp
push
cltd
cmp
nop
repz
pushw
in
outsl
xchg
mov
int
movsl
pop
stos
push
sub
cmp
adc
xor
cmp
cmc
leave
add
int
insl
or
push
test
xchg
inc
pop
mov
mov
sti
inc
aad
pop
or
xchg
notb
addr16
xchg
lock
push
mov
int3
cmc
xchg
inc
cmpsb
sbb
sbbb
cmp
xchg
enter
imul
and
mov
scas
xchg
or
push
inc
sti
test
inc
push
xchg
sub
es
dec
mov
fbld
inc
and
js
cmp
cli
mov
dec
xor
jae
stos
lock
mov
mov
and
aas
lock
dec
pop
sub
pop
add
scas
inc
jnp
pop
cmp
sti
inc
rcrl
and
or
cltd
push
loop
mov
adc
sahf
sbb
insb
xor
mov
cli
ja
and
sbb
and
ret
adc
repz
xchg
test
xor
pop
pop
lcall
push
dec
fildll
or
rcpps
fucomp
bound
push
cltd
lds
lahf
fwait
xor
dec
scas
out
arpl
aad
cmp
push
rclb
mov
repz
pop
adcb
and
mov
repnz
ret
dec
and
mov
lahf
int
jge
or
xchg
int3
sub
nop
mov
jns
nop
repnz
jle
jecxz
dec
pop
test
test
sti
mov
mov
out
shlb
repnz
mov
in
pop
repz
mov
push
inc
enter
loope
fisubl
inc
and
pop
mov
xor
add
data16
into
sarl
mov
inc
aam
adc
mov
ss
fsubs
es
jmp
fyl2xp1
xchg
roll
in
fidivrl
pop
xchg
ja
inc
xchg
fimuls
jbe
in
mov
push
mov
roll
in
call
add
mov
adc
popf
mov
insb
imul
jmp
adc
inc
sbb
clc
arpl
aaa
adc
enter
jge
jbe
add
shll
adc
sbb
jl
ljmp
and
mov
sub
stos
cltd
dec
add
xchg
adc
pop
xor
ljmp
icebp
loopne
jecxz
repz
jnp
add
mov
inc
mov
and
mov
xchg
lods
jo
adc
sbb
mov
dec
adc
imul
sbb
pop
adc
mov
stos
xchg
inc
pop
jl
mov
aaa
movsb
inc
lret
das
add
xchg
xchg
int3
out
xorl
jg
pop
lahf
mov
xchg
pop
out
pop
shlb
ficomps
inc
aam
and
int3
loope
sbb
mov
mov
inc
and
pushf
notb
ljmp
xchg
fisubrs
fildll
sub
das
movsl
mov
sub
mov
imulb
in
cmp
call
lcall
shll
aad
add
addr16
and
stc
jbe
mov
push
add
dec
jo
ror
push
das
out
adc
adc
or
lret
pop
rorl
mul
gs
dec
add
rcl
insb
adc
jo
cs
mov
mov
xchg
pop
xor
mov
jne
cmpsl
arpl
jns
out
inc
lods
cs
jnp
testl
push
xor
je
das
lock
je
pop
push
into
mov
push
cmp
fistps
sahf
scas
cmovge
dec
jo
add
dec
fsts
adc
stc
mov
lret
xor
jbe
movsl
fwait
sbb
mov
sub
mov
push
push
sub
mov
ds
fistl
push
mov
out
inc
pop
push
inc
dec
or
gs
push
jl
out
mov
jae
dec
pop
addr16
adc
mov
shlb
adc
enter
frndint
mov
pmullw
in
xchg
ljmp
int3
dec
xor
into
adc
orb
xchg
iret
jecxz
negl
or
mov
sbb
notl
adc
ss
out
dec
out
fildl
mov
add
push
inc
jns
mov
out
loope
cld
dec
ja,pn
push
xor
mov
jp
mov
lret
cmc
pop
sbb
cld
out
loope
pop
mov
xchg
dec
idiv
xchg
sub
xchg
add
adc
hlt
ss
stos
mov
aaa
inc
jno
mov
jle
pop
dec
push
pop
pop
mov
in
fidivs
push
xor
popf
hlt
or
sarl
xor
push
fldl
fldcw
test
cld
pop
jo
and
aas
inc
or
es
cld
jno
dec
loope
xorb
sbb
pop
xor
in
mov
inc
int
outsl
mov
jbe
int
pushl
imul
das
in
sti
mov
xor
pop
or
add
outsb
xchg
loop
add
dec
sub
sub
xchg
aas
push
fcmovb
mov
pop
jo
movsl
mov
mov
lods
pop
ljmp
lods
fcomps
cwtl
jp
pop
fisttps
imul
sbb
mov
mov
daa
sti
xorl
in
dec
outsb
lds
js
cmp
cmovae
pusha
xchg
pop
push
jb
cmp
inc
dec
mov
xchg
shrb
andb
add
fcom
int3
cmp
xorb
das
or
scas
xor
mov
insb
adc
add
in
xor
punpckldq
mov
iret
inc
xchg
roll
xchg
scas
push
mov
pop
mov
sbb
push
shr
jg
insb
adc
in
aaa
lds
into
pusha
out
sbb
test
add
testl
sub
push
aad
sti
mov
lods
in
out
call
and
insl
sar
inc
aaa
jge
ja
push
push
je
mov
loopne
iret
dec
inc
jne
imul
or
popa
pop
fwait
add
cwtl
fmuls
lret
jg
sub
mov
pushf
pop
adc
and
xchg
lods
push
inc
hlt
inc
jecxz
inc
sahf
mov
cmpsl
xor
das
fneni(8087
cld
loop
push
imul
pop
ljmp
popf
xlat
jne
ljmp
pushf
repz
xchg
das
mov
adcb
shlb
in
mov
rcl
inc
sbb
aad
sub
mov
out
mov
mov
and
sub
push
jns
mov
ss
and
cltd
xlat
enter
add
xchg
imul
mov
scas
ret
push
jecxz
out
out
cmc
jp
sbb
movsl
jns
pop
mov
cwtl
adc
push
movsb
cmp
mov
call
jge
jns
pushf
inc
les
mov
mov
dec
fcoms
hlt
push
mov
fmuls
ljmp
mov
movsl
mov
ja
imulb
stos
dec
test
xchg
cli
pop
mov
test
mov
dec
sub
jb
jle
sti
shrl
mov
pop
aam
sbb
addb
inc
movl
cmp
inc
jg
push
test
lods
cmp
pushf
iret
fisttpl
movsb
test
negb
sbb
dec
bound
cmc
pop
iret
mov
dec
sbb
jo
jnp
adc
sub
in
mov
mov
mov
dec
jp
test
jp
ret
cmpsb
cmp
aam
add
subl
sub
xchg
lret
inc
mov
addb
adc
aas
call
inc
in
dec
sbb
sub
inc
add
gs
dec
pop
data16
cld
xor
cld
pop
adc
inc
fists
les
push
jmp
shrd
mov
inc
sub
out
or
sbb
adc
push
fwait
scas
xor
cwtl
rolb
dec
cwtd
inc
xor
mov
test
xor
mov
pop
aaa
ds
data16
mov
dec
add
add
dec
mov
aam
or
lods
cli
fadd
out
dec
sub
mov
push
xor
ffreep
rorb
cmp
push
scas
mov
jmp
fwait
mov
mov
out
sbb
push
mov
dec
pop
bndstx
fs
test
cmp
push
fsts
cmp
call
fldt
addl
js
xlat
sub
test
cmp
or
xor
mov
clc
dec
call
add
pushf
sub
mov
add
xchg
cltd
cmp
mov
push
test
rol
dec
mov
fiaddl
jmp
jnp
jnp
movsb
push
add
xchg
ret
mov
enter
jcxz
shrb
fldenv
dec
cmp
xor
scas
mov
or
cmp
loop
xchg
jnp
or
rolb
cmp
jno
adc
xchg
rcrb
sub
sbb
popa
data16
adc
inc
cwtl
push
mull
inc
xchg
push
xor
xchg
jecxz
push
pop
data16
data16
inc
jg
cs
stc
mov
mov
roll
hlt
out
push
sub
sbb
cmp
loop
bound
or
into
lods
fidivrs
loopne
fmuls
mov
push
push
sbb
ds
pop
xor
fs
pop
mov
mov
mov
icebp
in
jle
hlt
mov
leavew
mov
mov
cmp
lcall
mov
and
cmc
shlb
dec
cmp
gs
mov
jnp
xlat
mov
es
popa
xor
sbb
inc
xchg
pop
mov
pop
mov
xorl
lods
mov
adc
pushf
mov
fnstcw
sub
rcl
push
incb
lock
xor
push
pop
and
inc
dec
outsb
data16
fnsave
mov
cmpb
push
arpl
js
jnp
hlt
cltd
mov
clts
clc
mov
fwait
nop
ljmp
pop
mov
cmp
xchg
movsl
mov
fdivr
mov
lret
sbb
jbe
jne
iret
cld
mov
fdivrs
xor
out
lds
iret
adc
mov
mov
test
js
das
shll
mov
dec
cmc
pop
in
cwtl
iret
jmp
sbb
movsb
inc
cli
push
popf
enter
mov
sahf
mov
sub
icebp
push
fstl
ja
mov
sbb
in
or
or
pop
jecxz
ret
in
sbb
fildl
test
xor
jecxz
pushf
add
divb
mov
in
or
mov
rcr
mov
clc
jmp
leave
mov
and
push
cmpsl
xor
and
mov
movsb
adc
pop
inc
outsl
dec
push
pop
mov
push
je
xchg
inc
jp
enter
das
ljmp
sahf
mov
mov
cltd
inc
add
stc
sbb
mov
jno
dec
gs
inc
movl
jns
sbb
jbe
pushl
mov
dec
or
sahf
aam
or
out
setge
lret
cli
mov
idivb
daa
pop
mov
mov
aam
xchg
movsl
lcall
inc
outsb
cld
fldcw
jns
hlt
mov
shl
popf
xor
je
xor
push
dec
mov
scas
push
sub
mov
pop
cmp
stc
fsubl
shrl
pop
or
xor
sbb
cld
sub
cwtl
fildll
or
cmp
sarb
mov
fmull
cmp
xor
div
xor
es
jns
movsb
sarl
fisttpll
mov
cmpsb
xor
jb
mov
pop
jae
xchg
and
xor
mov
iret
pop
push
insb
push
adc
and
aad
add
dec
mov
mov
movsl
fstps
push
gs
sahf
xor
fsts
xor
cmp
packsswb
loop
xchg
xor
mov
add
imul
push
sub
out
insl
xchg
into
ret
cli
test
ja
mov
pop
or
mov
jle
ja
jb
imul
out
lcall
mov
pop
int3
add
sbb
pop
push
cmpsb
cmp
mov
int
repnz
mov
cmp
rorb
jecxz
dec
sbb
mov
mov
stos
lahf
jb
mov
imul
mov
fdivrs
sbb
sahf
pop
daa
movd
push
bound
jge
jmp
aas
mov
stos
cmp
mov
call
cmp
mov
es
fiadds
mov
push
pop
scas
dec
add
outsb
es
je
xor
xchg
aam
jmp
or
popa
shll
xchg
mov
jmp
ss
sbb
das
add
xor
mov
repnz
push
sahf
stos
cmp
rolb
test
les
add
pop
aad
gs
mov
addl
fs
mov
sti
push
shl
lret
sub
addr16
cmpsb
pop
daa
cmc
pusha
or
pop
rcl
out
iret
in
push
push
pmulhw
sbb
pop
icebp
cmp
or
arpl
dec
pop
push
adc
call
pop
movsl
cltd
cli
jnp
push
imul
jge
dec
jne
cwtl
test
or
xor
cmc
xchg
xchg
cs
stc
cmp
loop
xchg
mov
or
lcall
mov
mov
cmp
subl
mov
popa
xor
pop
loop
mov
nop
or
jl
mov
bound
adc
sbb
and
mov
lret
loop
or
push
ja
cwtl
and
aad
hlt
cwtl
sub
sub
test
pop
push
and
mov
push
push
add
cli
adc
daa
clc
jbe
mov
cs
xchg
xchg
movsb
mov
rorl
jmp
jnp
test
daa
test
gs
cltd
xlat
lcall
pop
jae
loope
xor
cmp
jge
jb
push
into
jge
in
add
jecxz
faddl
lds
sahf
in
test
jg
shl
push
mov
inc
xchg
inc
or
pop
loop
xchg
jmp
stos
loopne
pop
mov
test
xchg
cmp
ljmp
and
cld
movsl
in
std
aas
cs
inc
loopne
popf
loope
mov
hlt
xor
xchg
popa
and
movsl
cmp
in
and
or
popa
test
cwtl
in
xor
inc
dec
sub
mov
stc
xor
inc
adc
lods
and
sub
fidivs
lahf
dec
adc
cld
fidivs
repz
jo
sbb
add
outsb
les
jp
dec
mov
test
mov
xor
mov
iret
jno
stos
cmp
cmp
shlb
jae
jne
inc
sti
push
and
jnp
sti
daa
dec
rclb
and
jge
jno
sub
icebp
mov
sbb
pop
std
pop
dec
mov
jmp
xchg
test
mov
mov
adc
mov
jl
or
test
fiaddl
or
test
jg
lea
cltd
inc
xor
es
fwait
or
adc
mov
out
cmc
pop
daa
invd
mov
lds
adc
nop
icebp
ss
xchg
icebp
add
adc
or
dec
dec
cmc
or
cmp
lods
inc
xchg
cwtl
pop
lret
mov
sbb
repnz
sahf
sub
push
movl
pop
cmp
movsb
push
sahf
imul
js
cmp
and
sbb
jg
sub
hlt
ror
data16
lret
and
call
aam
pop
and
imul
dec
fcmovnu
xlat
imul
push
cmp
stc
dec
ret
or
and
addl
push
leave
cmp
test
flds
or
lods
and
sbb
enter
mov
mov
mov
leave
out
lret
cmpsl
adc
daa
mov
xchg
jmp
sub
dec
sbb
pop
cmpsb
push
insl
mov
in
mov
push
xor
mov
test
in
iret
sarl
data16
pop
cmc
flds
ds
rclb
xchg
pop
mov
mov
jmp
popf
add
incb
mov
movsb
push
mov
jb
cmc
pop
xchg
lods
dec
xor
mov
inc
inc
arpl
add
outsl
shlb
add
mov
xchg
in
jno
xlat
movb
and
ret
cmc
out
addb
push
ljmp
jns
movsl
inc
adc
xor
xchg
pusha
adc
mov
test
push
insl
adc
std
pop
push
pop
and
movsl
mov
mov
xlat
and
lcall
inc
dec
add
pushf
insb
mov
imul
sub
jmp
movsl
jo
adc
ffreep
mov
sub
and
jge
rolb
push
daa
dec
das
jle
int3
jno
xchg
mov
movsb
cltd
sbb
mov
roll
bound
iret
sub
and
pop
dec
cmp
stos
into
nop
mov
testb
aas
les
je
dec
sti
jnp
adc
stos
sub
jmp
lods
cltd
xchg
popf
adc
fstpl
test
sub
shll
in
cmp
mov
pop
push
scas
mov
mov
imul
aas
fidivl
jle
lahf
addr16
cmp
mov
repz
add
fisubl
imul
fisubrs
xchg
lea
aam
clc
push
loope
lret
lret
pop
xchg
cmovbe
jl
iret
das
sbb
incl
stc
movsb
adc
or
xchg
pushl
cmp
sbb
jmp
mov
aad
jbe
lret
xor
xchg
adc
push
out
gs
lea
push
add
outsb
or
jb
push
das
adc
pop
sbb
adc
or
xchg
movsl
aad
adcb
pop
pop
jbe
fadd
mov
xor
push
jnp
movsb
push
pop
ja
sti
fwait
rorb
inc
jecxz
aaa
out
call
lret
js
cwtl
sub
ret
push
dec
movsl
jnp
inc
xor
xor
add
cli
in
loop
mov
bound
rolb
out
pop
dec
shll
inc
out
stc
inc
mov
jg
jg
pusha
xchg
fisubs
mov
mov
les
add
bound
push
sarb
je
jle
xchg
sbb
imul
mov
push
mov
dec
arpl
xchg
inc
lret
es
mov
fildll
xlat
add
inc
cmc
cmp
sbb
inc
pop
cmpsl
inc
in
insb
xor
dec
pop
fsubrs
mov
sbb
jnp
pop
push
fdivrl
cmpsl
and
es
mov
enter
xor
flds
xchg
shll
and
mov
mov
xor
fpatan
push
jp
inc
mov
push
imul
imul
mov
lods
nop
sti
stos
repz
outsl
sahf
es
ret
dec
push
and
or
in
andb
in
fnstcw
insl
jmp
mov
add
pop
shlb
out
adc
popa
jp
mov
mov
sahf
dec
call
loop
dec
xchg
test
inc
in
push
pop
bound
pop
js
pop
push
xchg
pop
adc
arpl
fildl
movsb
fldl
data16
push
dec
and
outsl
pop
fchs
outsl
cmp
shll
loop
dec
sbb
cltd
lahf
add
test
or
mov
cli
lock
or
xor
jns
jbe
mov
iret
push
or
testb
cwtl
dec
cmp
jnp
fldt
adc
leave
add
inc
and
cmp
out
ret
mov
ret
or
pop
lods
cld
xchg
cmpsl
cmp
dec
sub
pop
or
lods
fildl
push
leave
stos
adc
outsl
mov
cmp
lods
add
xorb
xchg
jbe
xchg
outsb
shlb
push
cmc
jbe
lods
inc
mov
mov
mov
stos
shl
xchg
std
mov
mov
lods
push
jns
xlat
push
add
inc
mov
pop
stc
jmp
cmp
xchg
insl
push
jmp
clc
outsl
cmpsl
mov
js
in
mov
mov
push
enter
and
lea
rolb
test
cmpsb
orl
cltd
cli
ficoms
mov
mov
cmp
aaa
sbbb
mov
test
clc
pop
lods
int3
push
push
dec
sahf
loope
push
pop
aaa
shll
enter
rcr
push
add
das
inc
push
mov
push
adc
sbb
pop
and
js
sbb
movsl
test
pop
popa
movsl
mov
imul
cmp
jb
push
mov
ret
ret
inc
or
aas
notb
xchg
out
shrb
push
jae
lret
jle
dec
out
xchg
pop
sub
rclb
fcmovnu
sbb
pop
cmp
pop
mov
push
test
add
orl
out
lret
ja
outsb
sbb
andl
jle
loopne
mov
jo
sbb
cltd
dec
cmp
in
sub
cmp
leave
dec
sbb
mov
stos
rolb
loopne
test
lods
test
repnz
aaa
mov
sub
mov
xchg
xchg
jnp
inc
jp
pop
adc
loopne
pop
rcll
mov
mov
insl
dec
pusha
mov
stos
xor
mov
xor
icebp
repz
push
popa
mov
lcall
jmp
sbb
repz
xor
push
lret
mov
and
fst
push
or
cmp
pop
and
sbb
sub
mov
test
hlt
jl
jp
pusha
cmp
pop
pop
or
dec
inc
lahf
jnp
int
and
cmpsb
movsb
cld
xchg
and
lock
cld
fisttpll
sarb
xor
faddl
mov
mov
pop
and
repz
jb
imul
dec
sub
daa
xchg
in
ret
cmpsb
mov
push
push
test
sub
movsl
mov
jl
popf
lcall
inc
lcall
sarb
pop
ds
bound
mov
pop
aam
pop
dec
ds
mov
dec
jo
outsb
ret
or
gs
jmp
mov
push
sub
jmp
cmc
mov
dec
loop
dec
adc
out
mov
movsb
and
out
mov
dec
xchg
mov
test
push
popf
pop
lcall
dec
aam
jmp
clc
cltd
es
xchg
jns
icebp
mov
das
adc
popf
push
fwait
xchg
jmp
cli
adc
fldcw
fbld
fists
shll
loop
leave
jno
xor
cmpsl
sarb
sbb
adc
dec
js
sub
test
lret
add
fisttpl
push
xchg
neg
inc
je
push
mov
xlat
pusha
out
jnp
sub
cmpl
sbb
loope
fwait
cmpsb
lahf
push
aaa
mov
ja,pt
cmc
push
add
cmp
and
movsl
cwtl
shl
jl
scas
das
push
jnp
sbb
inc
cmp
mov
out
das
mov
lcall
push
call
je
pop
outsb
sub
roll
jno
ffree
push
ds
xchg
repz
mov
cld
js
fcmovb
fs
pop
leave
je
and
cmp
dec
adc
je
mov
mov
sbb
xchg
mov
cmp
xchg
std
cmp
fsubrs
add
hlt
cli
jb
inc
imul
xor
nop
jmp
sbb
xchg
in
mov
cld
sub
mov
cmp
cs
les
pop
inc
jmp
pop
mov
cmpsl
stos
stc
pcmpeqb
jmp
ljmp
imul
lret
int3
outsl
cwtl
add
sahf
shll
push
sbb
imul
mov
les
imul
jae
cmp
filds
mov
pusha
inc
inc
cmp
cmp
movl
out
mov
mov
fs
cld
inc
mov
pop
outsl
mov
pop
je
fldt
call
sub
xchg
outsl
negb
out
hlt
jnp
add
in
outsb
inc
scas
fadd
jp
pop
sahf
test
xchg
and
inc
int3
in
adc
jg
cwtl
repz
scas
cmpl
jo
test
shr
and
jno
mov
xchg
xchg
dec
mov
push
loopne
jl
mov
pushf
sbb
jle
push
or
and
xor
xchg
out
test
out
in
add
fmull
jge
push
sub
lahf
andl
popa
hlt
lea
ret
mov
jbe
inc
and
ljmp
sbb
pushf
xchg
les
or
aam
test
inc
inc
push
push
sbb
ficompl
aad
push
or
adc
mov
pop
sarb
fstpt
sti
add
pop
out
xor
mov
inc
scas
test
addr16
and
sub
inc
jae
xchg
inc
xchg
push
jle
addr16
bound
lret
cwtl
fistpll
pop
dec
out
push
sub
xor
pop
out
rclb
add
xchg
shll
add
push
dec
sbb
hlt
jp
inc
cmp
jge
push
mov
pop
push
jge
rorb
rolb
ret
xor
mov
inc
cmpsb
inc
add
clc
dec
xchg
aaa
jno
pop
mov
stos
leave
inc
pop
pusha
popa
sbb
mov
fstpl
mov
fwait
test
cmp
dec
jne
xor
lret
push
xchg
fcompl
shrl
movsl
notl
pop
or
ljmp
scas
fldenv
test
out
cmp
adc
xor
push
rorl
pop
fcomps
pop
fisubs
sbb
push
ljmp
or
enter
int
ftst
xchg
cmp
lock
stc
je
sbb
jae
and
xlat
aam
loop
stos
les
cmpsl
mov
mov
sub
add
xchg
add
or
popf
scas
xor
call
sbbb
adc
inc
cmp
popf
lods
aam
test
pop
jp
fistpll
xchg
fs
dec
dec
xor
rcl
jnp
or
pop
and
cmpsb
out
sub
and
nop
lret
adc
pop
mov
test
pop
adc
icebp
sub
mov
jo
ss
das
push
pop
fcoms
or
push
push
adc
jb
inc
outsl
icebp
fnstenv
lcall
ss
pop
or
jbe
out
fisubrl
cltd
enter
jne,pn
idivb
fstpt
sub
mov
or
xor
mov
pop
testl
and
leave
pop
pop
mov
into
arpl
insb
int
xor
les
mov
and
cmp
jp
sbb
sti
cmp
push
mov
popf
popf
lock
mov
lds
sub
out
insl
jbe
and
sub
or
adc
sarl
xor
lods
in
pop
mov
xchg
push
dec
xchg
mov
mov
lea
lahf
fisubs
adc
sbb
arpl
pop
in
cmp
sub
push
jmp
mov
test
ds
mov
mov
out
push
cwtl
lret
mov
push
sbb
fdivrs
or
add
gs
lods
inc
jno
icebp
int3
sbb
mov
fbstp
cmp
xchg
push
test
inc
arpl
out
lcall
fcomps
cmp
call
push
imul
clc
sbb
mov
jp
aad
mov
fnstenv
sub
xchg
fwait
divl
int3
mov
cmpsl
gs
out
xchg
sbb
xor
sahf
insl
sub
scas
cmpsl
shrb
xor
xchg
into
data16
mov
xor
xor
mov
pop
sub
or
pop
pop
and
leave
lahf
js
push
fmulp
lret
dec
loope
adcl
clc
lcall
lahf
gs
push
xor
fwait
test
loope
sub
into
cmc
popa
mov
faddl
pop
dec
lock
mov
stos
or
jae
pusha
pusha
addb
popa
mov
mov
outsb
push
iret
inc
sbb
mov
mov
out
pop
mov
jns
rcrb
data16
push
das
adc
stos
mov
push
mov
and
add
ja
iret
adc
push
inc
mov
xchg
out
lret
dec
and
jnp
adc
xchg
cwtl
inc
xchg
insb
xor
mov
sub
cmp
gs
shll
xor
dec
out
cmp
and
dec
leave
out
sahf
dec
jb
mov
jo,pn
in
stos
mov
daa
mov
jae
leave
lret
stos
xchg
mov
out
sti
mov
mov
clc
ds
ja
and
outsl
bound
cmp
repz
aas
in
div
test
cmc
xchg
fmull
stos
push
add
cmpl
xchg
push
xchg
jno
jecxz
xchg
inc
in
sub
hlt
add
inc
pop
mov
xchg
xchg
add
les
mov
jge
pop
ss
test
mov
aam
mov
aas
push
addr16
outsb
cmp
mov
lret
push
mov
out
jnp
sbb
mov
cmpsb
xchg
jo
dec
mov
lret
mov
push
push
dec
mov
stos
mov
pop
or
pop
and
leave
outsl
pusha
popf
xor
in
dec
clc
lcall
cwtl
out
gs
pop
test
dec
loope
cmpsl
dec
in
ret
sbb
xchg
ret
movsb
jecxz
push
xlat
lock
push
out
imul
xor
xor
sub
in
loop
adc
pusha
call
ja
jns
repz
pushf
mov
mov
leave
js
loopne
sbb
inc
push
dec
xchg
mov
pop
movsb
jae
lock
or
xor
in
sbb
sbb
pop
cwtl
push
xchg
mov
repnz
lahf
sub
shl
dec
cmpl
inc
push
sbb
insb
test
mov
mov
decl
jns
lret
add
sarl
add
cmpsl
jbe
jmp
cmp
in
lea
sbb
adc
mov
mov
testb
call
cmp
cmovbe
test
bound
and
loopne
dec
icebp
xor
pop
test
gs
lcall
imulb
push
pop
aad
js
addl
mov
pop
call
arpl
je
inc
mov
ja
mov
inc
push
mov
mov
jl
dec
mov
orb
lret
mov
test
jg,pt
xchg
dec
mov
mov
test
dec
xor
in
mov
popa
and
sub
scas
jecxz
bnd
imul
es
or
test
int
xchg
gs
sub
stos
imul
into
addr16
icebp
mov
lods
mov
mov
in
les
imul
dec
mov
mov
and
scas
ret
cmp
dec
cmp
call
imul
out
and
scas
aam
imul
lret
addb
stc
and
fstpt
inc
shll
mov
lock
sbb
icebp
stc
iret
push
aaa
hlt
pop
add
xor
scas
aaa
sti
std
cwtl
xor
js
mov
insb
lock
test
push
lcall
movsl
lock
pop
push
dec
aaa
lods
jbe
imul
mov
movsb
pop
pop
pop
inc
pop
sub
xor
jb
lcall
inc
mov
xchg
push
jae
sti
ja
fscale
arpl
fdiv
mov
dec
fscale
jne
lods
cltd
cmp
popa
inc
int
movsb
shl
fisubrl
inc
test
adc
mov
lds
dec
outsb
mov
sahf
inc
jns
sub
xchg
add
rcrb
adc
mov
mov
mov
adc
addb
insl
sub
pop
jae
push
mov
lock
dec
add
push
push
mov
mov
inc
pop
mov
inc
xchg
jmp
fmulp
ror
push
xchg
aaa
mov
xchg
push
xor
pop
loop
stc
notb
xor
push
sbb
push
mov
testl
xchg
mov
mov
fisubl
imul
mov
icebp
mov
test
repz
inc
repnz
cmp
inc
sbb
and
mov
sbb
repz
push
mov
jno
jmp
push
xchg
add
push
mov
in
and
mov
or
mov
sbb
mov
andb
mov
jo
xor
xor
sub
es
mov
cld
lahf
arpl
int
mov
idivl
cmp
xchg
and
xlat
mov
dec
adc
dec
dec
wrmsr
xchg
inc
mov
jmp
push
xchg
stc
lret
jb
fadds
xchg
repz
sbb
fdivrs
mov
jns
mov
push
leave
push
and
ja
scas
dec
cmp
icebp
mov
leave
repz
jno
scas
push
jle
lds
xchg
pop
dec
jne
inc
push
adc
adc
cmp
lock
mov
mov
rorb
jp
push
cmpsb
or
pop
dec
push
sti
imul
push
xor
or
and
dec
mov
lock
pop
mov
pop
inc
xor
mov
xchg
push
js
pop
and
data16
pop
jl
mov
shll
sub
cmc
stc
notl
out
mov
das
or
xor
or
fmuls
sub
xor
mov
lret
in
add
inc
fidivs
sbb
dec
push
adc
clc
ror
jmp
mov
jo
pop
stc
inc
movsb
fcoms
mov
sub
out
jns
pop
les
idivb
mov
jl
lock
adc
pop
and
cmp
pop
mov
xor
adc
cltd
mov
loopne
popa
fcomip
jle
je
xchg
je
pop
test
out
xchg
or
pop
popf
test
and
add
repnz
push
pop
mov
inc
incl
xchg
xchg
rcl
pop
mov
and
pop
ficoml
aad
test
enter
loop
mov
xor
popf
popf
in
repz
push
ret
sbb
dec
push
movsl
mov
add
adcl
cmp
pop
in
out
push
sbb
divl
jmp
gs
lea
addr16
jmp
sub
inc
addr16
stc
cli
mov
cmp
or
or
add
movsl
xor
sbb
push
push
loop
jns
pop
jb
sub
mov
mov
mov
inc
inc
xchg
push
into
icebp
hlt
adc
dec
inc
imul
adc
cld
jge
cmp
mull
jbe
mov
push
mov
jecxz
inc
sbb
iret
pusha
cli
das
bound
mov
mov
sarb
loopne
mov
es
hlt
add
add
inc
xchg
imul
jo
fidivl
es
iret
push
jmp
jbe
add
rcl
push
jmp
fistps
mov
scas
ljmp
fwait
lcall
lea
jne
mov
push
and
test
enter
decb
adc
inc
stc
sbb
stos
cmp
rcrl
xor
scas
rcr
and
out
in
push
or
aaa
xor
stos
and
fldt
mov
js
and
lret
cmp
rol
aas
and
mov
ss
adc
insl
hlt
aam
ss
cmp
add
mov
and
repnz
sarb
sbb
jbe
scas
push
push
jle
insb
shr
jl
fs
adc
cmp
pop
sbb
addr16
mov
loope
jo
xor
push
mov
jg
xchg
aas
pop
fadds
fsubrs
leave
test
cltd
test
roll
mov
inc
inc
popf
push
dec
rorb
xlat
inc
pushf
push
das
sti
mov
and
push
stos
out
add
cmpsb
mov
xchg
adc
cmpsb
pop
sbb
std
popf
stos
inc
pop
pop
push
add
fdivr
pop
pop
stc
pop
imull
in
adc
sub
pop
lret
and
je
fimuls
cmpsb
xor
adc
cmp
shlb
in
xor
jg
fsubs
jb
scas
jl
in
rcrb
sub
mov
insb
aas
test
add
xor
pop
mov
dec
add
mov
rcll
arpl
cmpsb
loope
lods
xchg
mov
icebp
or
and
cmc
ret
jne
push
cmp
aad
push
cmp
inc
test
mov
push
lahf
or
movsl
add
xlat
or
rol
inc
push
jo
test
push
ficoms
xor
out
ret
inc
out
and
push
mov
mov
xlat
es
cmp
mov
jmp
jo
xchg
jb
fwait
js
ja
loope
xchg
add
insb
and
cs
xchg
cwtl
rcrb
sub
inc
lock
and
sub
sbb
jl
ret
pop
adc
divl
test
out
clc
xor
push
mov
outsb
or
int3
loope
jns
arpl
push
std
pop
sub
scas
jge
cmp
pop
jp
adc
lret
xchg
fs
sub
add
jecxz
sub
sahf
xor
cmpb
cli
repz
sti
pop
loopne
hlt
sar
mov
fidivs
cmp
cli
sbb
push
je
adc
in
push
inc
jnp
mov
push
pop
and
push
lock
into
hlt
jle
cmpsl
add
xchg
xchg
push
pop
divb
push
es
fidivrl
icebp
lcall
in
mov
and
push
in
shl
imul
xchg
addr16
push
or
mov
test
xchg
aaa
and
or
xchg
cmp
outsl
pop
out
xchg
dec
mov
cmp
jns
shl
and
mov
mov
push
mov
or
lods
test
add
cld
jnp
std
imul
stos
ja
or
lods
out
in
out
scas
repnz
aam
loope
and
cmp
sbb
pop
add
pop
pop
fmul
cld
push
outsb
sbbb
dec
push
aaa
loop
std
sub
stc
insb
mov
xor
sub
mov
jns
inc
aam
or
lahf
mov
lods
jg
int
fidivs
les
imul
icebp
cltd
std
scas
or
mov
inc
cmp
mov
cmp
ljmp
dec
ljmp
inc
das
mov
adc
mov
mov
add
and
mov
mov
push
adc
mov
lock
push
xlat
xchg
mov
push
push
fsubrs
aaa
gs
stos
mov
or
xchg
mov
inc
leave
test
mov
xchg
xor
test
fistl
pop
or
popa
pop
mov
or
jns
xchg
cmpsl
xor
sahf
ret
inc
inc
nop
arpl
mov
std
sub
lahf
fidivrl
jl
dec
mov
dec
mov
iret
cmp
mov
jp
push
jo
in
pop
cltd
cwtl
xchg
sub
scas
gs
xchg
mov
les
test
sub
jno
daa
and
clc
faddl
les
std
movb
stos
sub
jl
int
dec
inc
jecxz
sbb
pop
pushf
cli
sub
inc
hlt
loopne
mov
mov
add
ja
and
mov
cwtl
ret
jb
jbe
pop
mov
cli
pop
or
push
fucomp
mov
push
or
xchg
outsb
mov
aaa
or
out
js
shrb
es
sarl
push
addr16
xchg
pop
adcb
rcrl
popf
in
cvtps2pi
subps
and
aam
insb
in
ja
adc
mov
cli
sbb
stos
or
mov
jle
cmp
jbe
adc
dec
add
xor
sub
je
or
aad
pop
out
pusha
ret
sbb
mov
jns
fsts
call
mov
aad
dec
out
push
push
jae
fs
mov
gs
ret
rorb
mov
pop
lret
adc
jp
cwtl
sbb
rcr
fcmovu
xor
jecxz
out
pop
inc
in
aam
fs
cmpb
jge
subb
pusha
fdivrp
adc
sbb
fldt
lcall
or
addl
insb
cmp
sarb
mov
dec
xor
sub
test
leave
out
push
jae
cs
in
call
sbb
xor
xlat
sbb
fildl
ret
hlt
add
aad
iret
add
fmuls
ss
jecxz
aad
loopne
aad
cld
mov
cmpsb
cld
xchg
mov
inc
and
in
sbb
ljmp
les
lcall
cmp
pop
mov
and
imul
inc
out
inc
and
aas
lea
jb
lock
adc
orb
adc
out
jnp
sub
add
out
fstps
inc
outsb
xor
cmp
adc
shlb
sbb
and
push
pop
sbb
cmp
xor
and
mov
les
jl
inc
cmp
inc
fwait
mov
andb
jle
dec
mov
cmp
bound
mov
cmp
jmp
adc
out
lcall
jae
cmc
loopne
in
xchg
in
es
sbb
into
add
cli
lds
xchg
xchg
imul
data16
jae
fisttpl
movsb
dec
cmp
xor
scas
sub
push
enter
ret
adcb
push
dec
test
mov
iret
inc
cmp
pushf
mov
dec
jp
mov
lahf
mov
sbb
mov
adc
lret
fisubl
jo
sbb
aas
pop
sub
ss
lcall
and
pop
and
icebp
cltd
outsl
shlw
inc
xchg
mov
inc
lock
std
mov
push
iret
ss
jnp
mov
fmull
and
sbb
and
int3
jecxz
push
sub
jmp
sarb
mov
jp
fwait
movsl
pop
int3
int
sub
mov
lcall
test
loop
mov
cmc
sub
push
fsubs
xrelease
sbb
cwtl
lret
cmpsl
outsb
std
or
and
dec
dec
inc
mov
cmp
fucomi
jo
dec
repnz
shll
adc
imul
bound
andb
aad
jp
jae
mov
rcrl
int3
adcl
call
mov
lcall
cmp
xchg
jae
adc
add
outsb
mov
inc
or
and
rorb
xor
test
cmp
jl
cwtl
pop
jge
int3
pushf
test
rcr
dec
xchg
pop
iret
sub
dec
adc
xchg
xchg
sbb
jp
fsubl
pop
int
int
in
xchg
and
loop
jmp
or
mov
clc
or
pop
adc
mov
xchg
dec
mov
ror
cld
bnd
lock
addl
ljmp
cmp
ds
xor
xchg
popa
push
cmp
out
sbb
lock
dec
pop
inc
fs
testl
shl
xor
sub
pop
sbb
cmc
pop
int
xchg
movsb
cmp
popa
lret
xchg
add
pop
ficoms
scas
jne
movsb
out
cmp
adc
fsubs
pop
jle
stos
pop
js
and
sbb
add
rolb
cli
shlb
popf
popf
xor
xlat
jb
pushf
stos
imul
cwtl
jae
sub
xor
xchg
mov
sti
mov
notb
xchg
pop
out
and
xchg
mov
daa
and
rcr
and
inc
lods
test
std
dec
xor
scas
in
or
fadd
aad
mov
add
jne
lea
jmp
iret
outsl
fstl
ret
mov
fs
push
mov
or
cmp
push
pop
adc
cli
cld
push
gs
push
rorb
lret
cmpsb
rcl
pop
add
pushf
sub
lods
push
into
and
or
push
and
ja
shlb
jb
loop
in
mov
outsb
jnp
or
mov
rcrb
pop
inc
adc
jbe
sbb
popf
imul
cmp
out
xchg
push
pop
adc
mov
add
fwait
popf
loopne
rclb
push
lea
scas
out
punpckldq
in
cmp
jo
rorl
loope
insb
testl
dec
lock
dec
lahf
push
sbb
xchg
mov
sarb
sbb
out
mov
and
xor
sub
push
mov
cmpsb
data16
adc
lods
orb
ss
movsb
loopne
fs
add
jle
sahf
mov
imul
jb
dec
inc
mov
jae
roll
lahf
adc
je
rol
inc
out
shll
adc
mov
dec
or
dec
out
jb
in
data16
sbb
lods
outsl
ret
cld
enter
xchg
adc
testb
aad
push
rorl
ret
add
push
mov
xor
add
jecxz
stc
stos
test
outsl
add
xor
jg
ljmp
xor
sub
adc
popa
cmpsb
or
and
stos
pop
or
test
cmc
pop
jecxz
push
leave
cli
ficomps
add
dec
jp
sub
cmp
push
add
repz
inc
and
mov
mov
inc
mov
cli
into
mov
mov
loopne
inc
mov
jno
bound
adc
and
jb
and
mov
inc
daa
mov
outsl
cs
cmpsb
jg
fiaddl
jns
lea
ret
xchg
pop
xchg
add
xchg
push
xor
loopne
adc
jmp
out
rclb
push
or
xor
push
out
inc
mov
mov
int
mov
sbb
icebp
xchg
out
lcall
loop
nop
dec
sub
cli
sbb
xchg
loope
or
dec
in
xlat
mov
mov
lods
cmpsb
or
sbb
lock
aam
add
or
hlt
pop
jne
xor
and
add
cmp
pop
stc
push
cli
repnz
xchg
das
in
pop
js
mov
lret
mov
mov
cld
dec
das
and
mov
sbb
push
sbb
mov
xchg
or
xor
jns
jae
mov
test
mov
scas
mov
mov
push
mov
shll
fidivl
unpcklps
shll
push
fs
mov
pop
test
or
add
ss
es
orl
loop
jb
mov
les
jg
sub
int
dec
dec
and
fistpll
sti
mul
sbb
lret
nop
cwtl
jl
dec
jl
cs
jg
xor
clc
fistl
test
jae
jge
push
fcomps
loopne
sbb
cmp
fists
lret
outsb
test
mov
in
ljmp
push
cltd
add
jb
push
ror
fucomi
das
adc
stos
fwait
xor
std
jnp
push
addl
xor
lahf
imull
push
jns
adc
adc
in
fistps
mov
out
jne
xchg
in
jno
inc
pop
sub
cmp
test
loopne
sbbl
push
ds
add
xor
mov
scas
scas
jns
jmp
inc
mov
push
rol
out
int3
scas
sbb
xlat
out
nop
sbb
or
repnz
mov
dec
xor
or
jnp
mov
movsb
test
aas
cmp
leave
mov
leave
dec
ret
pop
mov
adc
ret
inc
mov
and
into
push
int3
pop
lret
push
jp
hlt
notl
mov
arpl
or
stc
adc
inc
call
add
out
cmp
xchg
shlb
lret
mov
insb
loopne
or
xchg
pop
or
bndstx
xor
push
jb
lock
test
stc
aad
bound
ds
test
icebp
inc
pop
leave
icebp
lods
jp
cli
in
popa
xchg
out
jp
mov
es
pop
shll
mov
lahf
pusha
pop
das
xor
test
or
les
mov
mov
add
and
ljmp
and
push
push
and
xchg
mov
jns
dec
mov
xchg
in
lds
arpl
adc
push
mov
sub
jecxz
jmp
add
loopne
cmp
add
mov
sub
cmp
cmp
push
shr
int
aas
jmp
out
pop
pusha
fdivl
push
sti
push
add
shrl
lock
mov
sahf
rorl
aam
ljmp
in
nop
mov
xor
in
mov
lcall
jle
pop
xchg
arpl
nop
sub
fiaddl
dec
cld
mov
clc
mov
fabs
test
fldt
fwait
inc
mov
scas
mov
repz
cmp
or
in
sub
push
push
adc
xor
sbb
in
dec
pop
lret
popa
mov
pop
add
repz
insb
call
pop
ficoml
sub
jg
sub
lahf
testb
push
lea
test
je
adc
cmp
and
and
dec
xchg
cld
pop
mov
mov
jns
out
mov
sub
xchg
out
cwtl
jbe
into
insl
psrlw
frstor
inc
sub
xor
insl
fiaddl
ja
mov
test
mov
jo
push
mov
and
insl
cmp
lock
aam
fwait
mov
pop
out
hlt
add
mov
pop
fcomip
and
jne
and
aam
or
popa
jmp
xor
dec
loopne
adc
cwtl
mov
mov
dec
movsl
jo
mov
stos
gs
out
and
mov
ja
test
pop
pop
push
pop
aaa
push
rorb
std
jle
gs
mov
out
xchg
sbb
pop
ret
lods
ds
cmc
call
bound
mov
add
mov
push
or
xchg
adc
add
pop
fistpl
loope
pusha
rolb
xchg
nopl
jnp
dec
je
xlat
test
dec
sub
push
cs
aam
lds
pop
xchg
xor
sbb
repz
fisubrl
inc
nop
xchg
push
inc
jb
xchg
cmp
icebp
jbe
xchg
stc
mov
insl
pop
and
fidivrl
mov
pop
cmpsl
jns
in
mov
arpl
jbe
sub
mov
bound
pop
jns
xor
nop
cli
into
mov
in
lret
lock
cmc
sub
ficompl
cmp
test
mov
aam
or
stos
cltd
adc
ficompl
pop
sar
inc
mov
xchg
ss
jge
frstor
xchg
iret
int
mov
add
xchg
sub
jnp
fsubr
sbb
xor
cmpsb
je
sbbl
cmp
pop
or
call
mov
adc
cmp
sar
mov
lods
loopne
sar
mov
aam
xchg
test
repz
xchg
in
xor
pushf
ficomps
mov
std
add
popf
add
pop
inc
aam
mov
dec
adc
jne
mov
jmp
filds
inc
or
adc
mov
inc
xchg
mov
adc
orb
lock
and
push
xchg
and
pop
push
push
dec
scas
movsb
and
rolb
enter
push
movsl
out
jno
mov
cwtl
adcb
mov
in
test
popf
repz
bndstx
mov
pop
and
cmp
out
add
xor
addr16
adc
mov
mov
inc
jg
outsb
jno
inc
sub
and
pop
out
popa
and
test
test
pop
leave
sahf
and
rcrb
iret
loopne
out
sbb
and
add
adc
lret
repnz
push
mov
sub
cmc
dec
incl
push
into
ja
push
out
int
cs
cmp
xchg
sub
cmp
mov
test
outsb
pop
pop
out
test
orl
es
mov
es
xchg
sbb
mov
cli
mov
mov
lret
pop
cmpsl
and
into
out
and
iret
inc
insl
mov
icebp
shl
dec
lods
repz
cmp
or
inc
int
or
or
imul
jnp
dec
xchg
movsl
xchg
out
pop
hlt
aaa
pop
cmp
sbbb
cmpl
cmp
jp
loop
aad
pop
outsl
sbb
movsb
out
push
aad
in
fcomip
sub
mov
andl
push
and
stc
mov
or
inc
fsubrs
and
mov
push
inc
gs
imul
iret
sub
jp
push
stc
xor
xchg
sub
jl
and
dec
xchg
lahf
scas
jb
mov
sub
dec
sub
je
imul
mov
push
lret
popf
in
ja
mov
jecxz
xor
fisubrs
loopne
xorl
bound
jle
std
jb,pn
stos
and
mov
jae
adc
and
xorps
mov
fstpl
pop
sub
ja
mov
sbb
mov
setl
or
pusha
xor
sub
mov
and
pusha
stos
or
out
insb
fldt
popa
push
scas
icebp
leave
push
sbb
dec
xlat
loop
scas
popa
mov
jle
movl
mov
roll
adc
lods
fdivrs
jge
lea
repnz
mov
out
or
or
fnstsw
mov
ret
and
and
xlat
shr
aam
sub
ljmp
mov
jb
sub
stc
push
shrl
pushf
in
in
stos
adcb
add
xchg
daa
cmpsl
les
and
and
sti
adc
cmp
cmp
cmp
sub
pusha
hlt
imul
push
mov
sub
lock
scas
cmp
dec
jp
mov
dec
je
adc
mov
int
in
push
cld
sbb
pop
nop
jl
sub
scas
in
lret
add
sarl
xchg
scas
inc
sub
adc
add
sahf
iret
push
popf
push
xor
imul
xchg
fldenv
movb
popa
jp
pop
movsl
fistl
scas
lea
stos
xor
mov
lods
and
fldt
pop
pusha
sti
mov
es
les
adc
add
mov
jo
mov
push
push
nop
ja
popa
loop
in
pusha
mov
adc
xor
shrl
test
jbe
das
rol
push
mov
mov
or
sub
movsb
orl
fsub
dec
pushf
call
imul
stos
out
push
xor
mov
cs
or
push
test
inc
daa
sub
jns
push
stos
xchg
jo
lds
jle
ret
into
or
adc
iret
cmp
xchg
stos
add
loope
push
mov
shll
or
mov
push
sbb
jp
lea
cmp
mov
sbb
push
sbb
mov
cmp
xor
push
pop
mov
xlat
in
inc
loope
gs
push
inc
adc
std
fwait
xor
xchg
fildll
jne
sub
fwait
pop
jmp
pusha
and
ja
push
xor
aad
add
imul
dec
xor
lahf
cmc
dec
xor
ds
in
jo
scas
sbb
xor
out
rcll
add
mov
cmc
cmp
mov
test
mov
rcrl
push
pop
sbb
int
adc
xchg
pop
repnz
pusha
shlb
dec
test
int
jnp
movsb
rorl
movsb
ret
add
stos
inc
loopne
dec
jle
je
jg
mov
incb
mov
lods
jnp
pop
cmc
pop
and
xor
cmp
je
xor
in
jecxz
push
cmp
push
in
sub
xlat
js
xlat
or
cwtl
in
inc
rcrl
mov
test
mov
cld
popa
cmpsb
xchg
imul
clc
wbinvd
and
dec
mov
jecxz
das
sub
cmp
daa
push
and
or
mov
sbb
inc
movsl
outsb
mov
push
mov
inc
cmp
mov
push
push
mov
ror
push
mov
xor
ret
test
dec
dec
popf
adc
cmc
mov
push
pop
fdivrs
fisubrs
ret
lret
outsl
adc
dec
iret
call
mov
mov
jo
mov
faddl
faddl
ja
iret
xchg
mov
test
push
jae
inc
les
cmp
repz
pusha
mov
jne
jecxz
cmpsb
lods
pop
and
popf
dec
mov
nop
jo
mov
cmc
jns
cmp
jmp
sub
inc
push
outsb
mov
sbb
loope
mov
add
aad
jno
pop
mov
aas
and
mov
cmc
lret
jge
movsl
bound
shlb
jp
cwtl
fisttpll
push
adc
cli
mov
mov
int
jmp
aas
int3
lret
jno
adc
sbb
mov
icebp
add
in
mov
jne
push
jcxz
push
data16
or
fsubr
inc
mov
mov
push
rcl
testl
lods
xor
xor
maskmovq
negl
out
mov
xor
pop
mov
insl
loopne
and
jle
popa
dec
adc
fdivs
adc
mov
fnstsw
scas
mov
push
sub
in
int
cli
sub
lods
repnz
or
mov
xchg
mov
mov
test
test
mov
outsb
lcall
movsb
mov
test
insb
pop
or
mov
push
outsl
orb
out
lahf
pop
cmpl
xor
fsubrl
out
pop
and
jecxz
scas
jbe
mov
and
decb
pushf
mov
out
repz
imul
lret
repz
xchg
cmp
jp
and
test
das
int
and
jb
xchg
inc
movsb
and
std
aas
jl
les
mov
or
lods
inc
sub
mov
sbb
or
dec
push
pop
pushf
jp
test
out
out
adc
imull
lcall
fwait
xlat
push
adc
aad
push
sub
xor
xchg
cmp
dec
shrb
popa
arpl
dec
mov
cmp
adc
test
das
push
push
sub
mov
aaa
inc
test
cmc
jb
dec
xchg
in
mov
ret
sub
add
cmp
dec
push
jnp
xor
xchg
test
icebp
jbe
lods
xor
ljmp
and
xchg
ret
addr16
mov
mov
pop
jmp
dec
test
mov
xor
aad
cmc
jg
fistps
bound
pop
adc
sbb
fwait
out
dec
dec
jo
in
jmp
pop
int
test
sti
mov
and
or
mov
popf
pusha
pop
fcmovnbe
imul
sub
jmp
in
out
mov
jno
jl
loopne
in
insl
push
inc
push
push
cmp
sbb
xor
jne
fidivl
lods
inc
jne
pop
ror
dec
and
negb
xor
adc
insb
cld
and
movsl
lret
adc
fcomps
roll
mov
in
and
jns
push
int
lock
xchg
and
xchg
jnp
imul
cmp
xchg
mov
sbb
fcompl
xor
std
jle
in
inc
lds
repnz
sahf
sub
push
aad
ss
mov
jo
and
adc
jge
fidivs
aas
ret
lock
iret
mov
xchg
sub
mov
cwtl
fmul
xlat
sbb
xor
imul
and
cvttps2pi
rclb
jbe
imul
dec
and
mov
mov
fs
push
pop
mov
cmpsl
ds
sub
popa
cmc
push
testl
mov
loop
fildl
icebp
ljmp
jecxz
popf
std
data16
sbb
aaa
xor
mov
adc
xchg
mov
inc
inc
sub
or
inc
lret
dec
mov
mov
cmpsb
cmp
out
fbstp
xor
inc
and
loope
mov
shlb
jge
aad
jle
shlb
sbbl
push
ljmp
xor
mov
mov
mov
mov
mov
xor
push
lock
ss
or
ficoml
ljmp
mov
pop
xor
lcall
dec
ret
pop
push
jmp
mov
push
push
cmp
popa
xchg
imul
sahf
mov
mov
mov
push
mov
dec
sub
out
movl
mov
mov
fistps
dec
stos
dec
xor
rcrb
mov
mov
scas
add
loopne
pop
jmp
fs
loope
xchg
sbb
roll
cmpsb
cs
jne
mov
jb
mov
push
mov
push
cmp
add
pop
cmpsb
xor
jecxz
ljmp
mov
and
mov
adc
and
in
sub
pusha
negl
mov
jns
jbe
pop
mov
in
in
xchg
daa
pop
mov
cmc
vaddpd
jbe
fldt
cli
jl
mov
rcl
adc
xchg
jmp
and
fmull
push
xor
outsb
sub
fcompl
mov
pusha
repz
pushf
pop
inc
sahf
inc
and
jmp
sub
xor
pop
and
jp
cmp
and
push
jb
fstpt
jmp
push
push
push
inc
lds
pop
dec
pop
in
divl
sbb
sub
in
add
jae
jecxz
in
inc
fsqrt
jmp
push
sti
cmp
inc
cmc
jp
adc
in
jo
push
and
mov
xlat
mov
pop
fs
ret
push
subb
inc
jb
mov
adc
out
jecxz
outsl
das
hlt
push
pushf
fadd
lods
ret
mov
jb
push
mov
loopne
inc
jecxz
sahf
pop
sub
out
mov
movsl
xchg
jo
fstp
and
lahf
adc
and
das
mov
inc
pop
lret
xchg
in
insb
adc
out
sbb
dec
fisubrl
cmc
add
sbb
sarl
in
xlat
mov
xor
adc
sbb
lret
cmpsl
idivb
and
inc
jge
jo
push
xor
clc
fiaddl
mov
in
mov
sbb
xchg
lods
pop
xor
jl
xlat
jg
and
sbb
push
push
lea
mov
popf
dec
lcall
sbb
cmp
pop
stc
sbbl
mov
and
in
clc
cwtl
and
mov
in
jmp
jns
cmc
icebp
adc
sub
cld
adc
cmc
fs
inc
sbb
xor
lahf
sbb
sbb
pop
cmp
sub
or
pop
dec
idivl
repnz
out
pop
pop
jno
mov
rclb
das
gs
xchg
insb
inc
push
dec
lock
inc
xchg
js
and
sub
xor
pop
xchg
sub
jl
imul
loopne
mov
cmpsb
add
ret
jae
mov
fwait
push
mov
fiadds
test
imul
add
and
adc
inc
stos
mov
fs
lret
or
mov
inc
cmc
das
das
mov
pusha
repz
into
into
mov
ret
imull
sub
out
push
test
xor
fs
push
dec
add
jp
ja
or
lods
dec
adc
add
dec
mov
movsb
cmp
or
or
inc
inc
sbb
jbe
mov
lahf
jnp
add
mov
sub
add
mov
mov
and
pop
jl
xchg
cmp
xchg
cmpsb
cld
pusha
sbb
incl
xor
lods
cmp
pop
push
mov
aas
jbe
sub
fadds
mov
clc
jle
inc
inc
lret
hlt
mov
inc
pushf
adc
lret
popa
pop
jge
inc
out
leave
sbb
jg
gs
jl
enter
mov
test
inc
pop
and
mov
mov
pop
cwtl
jge
ficoms
les
mov
pop
imul
popf
stc
pushf
shlb
out
cmpl
push
cmpsb
mov
push
mov
mov
or
xor
sub
jmp
jne
lea
xor
dec
out
gs
inc
adc
sbb
lods
ret
or
pop
dec
dec
movsb
and
or
mov
popa
inc
scas
lret
pusha
jb
mov
jmp
push
sub
out
notb
add
dec
leave
ja
sti
xor
ja
mov
jo
in
pop
insb
xchg
lahf
add
popf
dec
das
ss
cmp
fdiv
add
dec
lock
loope
push
xor
in
jbe
lahf
sarb
das
lea
lods
push
orb
and
sbb
fbld
mov
jno
jno
cmp
sub
cmp
xor
push
movsl
nop
roll
pop
insb
inc
mov
out
pushf
adc
js
xchg
mov
jg
sbb
out
mov
icebp
cmp
lea
sbb
jnp
mov
inc
xlat
js
xlat
pop
mov
push
push
nop
cmpl
ss
pop
mov
dec
ds
push
inc
subl
dec
ret
hlt
fsubrp
inc
dec
push
out
sub
sub
cwtl
push
mov
sub
mov
dec
xchg
mov
jae
xchg
filds
pop
adc
inc
aas
insl
data16
dec
addr16
out
movsl
xchg
xchg
xchg
dec
mov
mov
lea
insb
xor
inc
xchg
pop
jmp
movsl
push
scas
mov
and
adc
fsubrl
mov
andl
cs
das
cmp
lods
cmp
icebp
mov
sub
lock
into
mov
xchg
nop
cmpsb
imul
jbe
pop
mov
mov
sub
jo
add
cltd
adc
lret
mov
jmp
repz
sub
mov
fwait
cmp
lds
inc
sbb
rcll
add
int
pop
pusha
and
ret
hlt
in
jge
sbb
jg
xor
mov
xchg
dec
addl
rcl
jle
or
fsubs
adc
jge
fldenv
cmpsl
sub
fidivrs
les
insb
sbb
xchg
xor
in
pop
jmp
movsl
xlat
pop
lock
mov
iret
pop
in
push
loopne
and
shll
adc
push
cli
fisttps
popa
cwtl
jbe
hlt
sarl
jge
clc
into
sub
dec
push
dec
insl
lods
data16
jle
fcoms
adc
lock
movsl
aaa
adc
out
push
push
dec
inc
mov
imul
cmc
mov
lods
fldl
iret
test
leave
dec
jecxz
jmp
jmp
test
inc
adc
xor
and
subb
mov
xor
jmp
push
mov
jb
mov
dec
std
arpl
xor
dec
jp
inc
not
fdivs
std
xchg
inc
lahf
arpl
daa
std
mov
mov
jecxz
imul
push
loope
in
pop
or
jmp
pop
xchg
and
fisubrl
jo
in
push
adc
jp
leave
xor
rcr
dec
xchg
cs
inc
cwtl
jbe
aaa
shrl
clc
je
xchg
cmp
ss
xlat
cs
mov
pop
roll
xchg
mov
xchg
sbb
icebp
or
inc
pop
js
sarb
out
pop
or
sbb
xchg
adc
fldcw
dec
loope,pt
ja
dec
cltd
andl
xchg
sbb
cmc
pop
lock
cmc
popa
cmp
lods
repz
aam
cmc
xchg
jl
add
jg
xor
pusha
push
not
add
test
cmp
inc
fwait
call
leave
hlt
dec
outsl
sub
pop
jge
aad
scas
pusha
cld
xchg
fisttps
int3
fwait
in
pusha
jl
xchg
and
fistl
dec
enter
push
mov
mov
push
jne
lahf
cmp
mov
fucomi
xchg
fcoml
daa
loopne
and
push
mov
push
lcall
mov
divl
in
out
aad
mov
clc
and
cltd
ret
in
mov
inc
lret
xchg
push
mov
mov
pusha
jns
mov
pusha
lcall
movsl
add
out
in
inc
shl
call
mov
or
jno
adc
addl
push
or
ja
sarb
testl
rclb
jnp
mov
fimull
clc
mov
sar
cli
push
push
enter
shrb
int3
mov
stc
iret
add
out
and
jmp
xchg
testb
rcrl
nop
pop
jge
mov
std
in
icebp
movsb
shlb
in
loopne
lret
xor
aas
mov
mov
jecxz
pop
inc
outsl
cmp
sbb
jns
int3
orb
jp
xor
repnz
int3
ljmp
es
ljmp
push
push
cwtl
mov
loope
rorl
jecxz
in
lea
sbb
add
or
pushf
stos
push
lock
sbb
push
mov
testb
pop
lret
js
mov
sbb
sbb
fcoml
sub
fdivs
cmpsb
outsl
les
and
xlat
ret
dec
ret
pop
xchg
in
mov
sarl
cmp
mov
mov
push
stos
mov
adc
fwait
mov
inc
mov
jbe
cli
or
jae
mov
push
arpl
or
repnz
dec
ds
ja
cmp
arpl
shll
insb
inc
sbb
mov
inc
stos
jbe
push
out
push
test
outsl
repnz
hlt
repz
clc
inc
mov
out
mov
je
loop,pt
std
inc
out
clc
insb
push
fisubrl
movsb
fs
lds
xor
xor
popf
sub
fs
test
sbb
pop
push
icebp
loopne
aaa
out
fbstp
test
stc
jg
dec
mov
in
jne
sub
xchg
sbbb
cmp
loop
cmp
rorb
xchg
jmp
cltd
sbb
mov
sbb
add
orb
mov
mov
add
pop
shll
jmp
mov
mov
in
leave
imul
lahf
adc
scas
and
cld
iret
push
stc
out
mov
mov
pop
shl
fidivrl
shl
pop
add
and
mov
repz
and
push
sahf
dec
jno
pop
push
sub
into
ljmp
mov
jge
je
lret
movsl
inc
dec
push
sub
popl
in
out
jecxz
jns
mov
and
push
out
int
mov
setl
mov
xchg
cli
les
mov
sub
outsb
fistpll
popf
sti
adcb
jecxz
dec
add
xchg
ja
das
mov
xchg
xchg
lods
out
jns
loope
sub
mov
sahf
inc
dec
pop
cmp
push
je
cmpsb
ror
rcll
adcl
pushf
adc
xchg
or
adc
mov
push
repnz
jmp
push
popa
leave
xchg
push
daa
inc
push
lods
movsb
scas
xchg
pusha
xabort
mov
ljmp
lcall
rcrl
add
xlat
push
clc
stos
cmp
mov
sub
stc
mov
mov
insl
js
pop
dec
ret
jo
mov
loopne
add
and
repz
loop
and
sub
xor
insl
pop
mov
add
adc
pop
mov
int3
sub
bound
popf
xchg
xor
fdivrs
xchg
dec
dec
call
mov
mov
aaa
ss
cmp
mov
sub
lret
and
js
in
push
lret
insb
or
movsl
xchg
pusha
pop
xor
mov
sub
fcmovbe
jle
lock
orl
mov
filds
pop
xchg
dec
jnp
jge
jle
repz
xchg
stos
pop
les
in
das
lahf
bound
leave
jle
movaps
cmp
bound
or
pop
rcll
cmpl
insl
or
push
test
mov
mov
jmp
mov
addr16
cmc
lds
pop
cltd
jle
ss
pop
movsb
push
mov
push
mov
ja
insl
sbb
imul
pop
gs
xor
jmp
inc
cwtl
test
inc
imul
ja
or
dec
push
lea
pop
dec
ret
mov
jle
mov
dec
cli
test
rolb
adc
scas
data16
adc
mov
xor
add
xchg
imul
gs
pop
jo
jecxz
sahf
sahf
les
bound
in
push
lock
dec
std
sbb
in
jnp
jle
dec
stos
jle
aam
xor
mov
sahf
data16
mov
call
xchg
hlt
mov
push
push
in
imul
xor
xor
hlt
cmc
or
fs
mov
xchg
fistps
xor
je
outsl
out
push
or
aaa
pop
iret
aad
in
cmp
xchg
jno
insl
sub
loop
push
jnp
xor
and
imul
add
roll
aaa
leave
jl
cld
push
subl
out
xor
cltd
push
insb
stos
aas
jp
pop
push
mov
movsl
pause
ds
fnstsw
call
loopne
rcl
ret
pop
pop
cmp
sub
jge
jle
add
addb
inc
in
popf
lea
in
xorl
aam
mov
adc
cmp
jge
mov
mov
pusha
dec
jbe
lret
xor
es
lea
dec
dec
dec
in
mov
adc
adc
addl
jno
jae
mov
lock
cmp
xor
sub
mov
std
mov
sbb
jecxz
cmp
js
jl
stos
push
pop
pop
lahf
cmpsb
cltd
mov
xchg
andb
iret
mov
xchg
push
mov
out
cmp
fildl
movsb
and
fs
lcall
xchg
std
dec
xchg
adc
subb
inc
mov
das
mov
sti
bound
cltd
ds
leave
adc
mov
shll
cmp
sbb
add
ret
sub
mov
gs
lahf
test
and
push
rolb
mov
pop
adc
xchg
and
jg
lds
je
jb
cmpsb
fs
fs
arpl
add
lods
loop
or
cli
pop
add
push
jecxz
gs
xchg
jne
add
mov
jns
or
xor
cli
cmp
in
fistps
mov
push
fldt
add
mov
pop
cmpl
std
and
pop
adc
xor
jmp
xor
nop
jg
sbb
rcrb
xchg
bound
mov
enter
dec
arpl
jb
push
fidivrs
ret
xchg
jmp
int3
test
cwtl
mov
dec
cmc
xchg
nop
in
inc
insb
daa
mov
lahf
inc
xchg
jb
push
cmp
push
and
repz
adc
ret
or
lds
lea
jg
mov
dec
sub
pop
cmp
or
sub
dec
jmp
mov
scas
mov
dec
negl
inc
jl
lcall
cmc
lea
adcl
mov
fbld
mov
mov
mov
nop
data16
mov
mov
into
jo
clc
fcoms
out
out
mov
sub
les
cmpsb
sbb
dec
inc
xor
and
sbb
sub
dec
mov
icebp
lahf
jp
jecxz
jge
mov
aam
outsl
repnz
cmp
xlat
sbb
fistl
sub
xor
xor
mov
scas
cmp
aaa
mov
pop
sub
cmpsb
push
hlt
cwtl
xlat
jmp
stc
test
adc
xor
pop
cs
iret
clc
xor
inc
xor
mov
jne
adc
mov
cmp
inc
repnz
lea
and
mov
popf
pusha
mov
cmp
push
push
in
pop
test
in
mov
shlb
dec
jp
pusha
adc
test
jbe
aad
rorb
pop
ficoml
jo
inc
aas
jne
fcomps
jo
hlt
cs
mov
jecxz
dec
push
sti
lret
mov
cmc
popf
stos
mov
push
and
leave
inc
test
mov
es
xor
lret
ss
shr
fsubr
mov
jecxz
lods
sarl
adc
dec
sbb
fdivrp
test
sub
jl
rclb
dec
arpl
ret
inc
dec
push
mov
int
mov
lahf
aad
mov
or
mov
imul
xchg
movsb
dec
stos
idivb
stc
mov
fnsave
push
std
add
and
fadds
xchg
fld
rorb
jp,pn
clc
lods
repz
in
lahf
and
mov
mov
test
add
sub
mov
add
add
stos
nop
lcall
push
mov
test
inc
push
stc
push
data16
push
repnz
mov
loopne
loope
ret
xchg
cmp
dec
rcrb
jbe
dec
popf
push
ss
data16
call
nop
cmp
jae
popf
jne
fistps
mov
pop
lret
xor
mov
cwtl
cmp
sub
cmpl
jg
fnstcw
cmp
pop
add
or
lods
jl
inc
and
mov
jnp
sbb
cmp
pop
mov
add
loope
mov
imul
bound
loope
lret
pop
jp
fmuls
fsub
adc
jecxz
les
ss
xchg
push
rorb
shl
fidivs
fsubr
mov
fs
xor
xchg
lds
aaa
sub
mov
fistl
pop
xchg
or
mov
mov
in
push
int
cltd
jno
xchg
popa
mov
add
add
fucomip
xchg
adc
cmp
stos
lods
lock
bswap
fucomp
hlt
mov
mov
cwtl
cli
cmp
data16
test
fists
inc
movsl
cmp
xor
ret
mov
nop
mov
imul
fsts
arpl
mov
dec
pop
cmp
mov
or
push
add
xor
leave
cmp
jp
test
xchg
inc
dec
xchg
sbb
fsubrp
gs
dec
outsl
dec
stc
inc
cmpsb
mov
xchg
dec
test
inc
dec
dec
pop
inc
add
mov
clc
into
xor
or
mov
lcall
mov
cmc
xor
pop
shl
add
scas
jp
nop
into
in
cmpsl
or
jp
loope
lods
sub
fwait
cmp
aad
adc
mov
fdivs
fwait
decl
enter
push
dec
xlat
add
inc
fsubs
pop
testl
jmp
pop
movsl
and
ficoml
dec
cmc
mov
xchg
mov
daa
mov
pop
mov
das
jge
es
sgdtl
outsl
movswl
cmp
sbb
sar
out
cmp
icebp
mov
push
and
mov
cltd
addr16
pushf
lahf
add
jb
enter
out
sbb
sbbl
loope
sub
sub
mov
add
xchg
inc
lret
sub
mov
es
fisubs
adc
int
xchg
pop
adc
stc
dec
jae
sbbb
xor
bound
inc
jecxz
mov
int3
fistl
or
fs
and
push
inc
arpl
orb
inc
mov
sbb
and
sub
push
hlt
das
in
or
and
push
lret
lods
sbb
mov
pop
or
movsl
xchg
mov
icebp
xlat
jb
push
movsl
push
and
sbb
xor
clc
and
mov
mov
ljmp
mov
andl
mov
mov
dec
daa
aaa
insb
dec
stos
int3
in
outsl
pop
mov
sub
pusha
por
es
mov
and
xor
es
mov
or
jl
ret
pop
jns
gs
nop
cmp
cmp
lahf
iret
daa
sbb
fcoms
adc
imul
sbb
push
fwait
push
cmp
shlb
ret
jnp
pop
add
inc
inc
in
movsl
insl
sub
pop
mov
adc
jl
xor
les
push
mov
push
inc
mov
out
in
and
jl
or
jecxz
aam
ljmp
jae
cmp
add
pusha
inc
fstpl
sub
push
mov
xchg
push
int
mov
fnsave
xchg
lret
lahf
jae
lods
push
bound
out
lock
data16
andb
fistps
mov
into
mov
adc
aas
pop
jns
cmp
sbb
adc
jo
pinsrw
daa
lcall
mov
fwait
sub
cmpsb
pop
ret
sub
sub
adc
out
sti
rcll
nop
mov
adc
int
pop
sbbl
jecxz
test
mov
jae
notb
nop
mov
sub
mov
jl
repz
mov
jne
pushf
jge
and
iret
aas
scas
iret
mov
out
dec
imul
xor
jl
pusha
xor
push
dec
jbe
in
xchg
lods
in
inc
push
in
test
xchg
xor
ret
xchg
push
out
sbb
lcall
mov
and
les
div
negb
mov
adcb
pop
hlt
ret
lods
rorb
fwait
and
pop
scas
or
fstl
gs
sbb
sti
idivl
mov
mov
push
sub
xor
mov
jbe
scas
out
dec
imul
mov
out
in
jns
and
leave
push
xor
xchg
jno
adc
xlat
aad
mov
pop
xchg
shrb
add
mov
outsb
xchg
mov
dec
push
ds
ss
and
cwtl
jbe
sub
jb
add
bound
inc
push
dec
out
jmp
sarl
sahf
cmpsl
cltd
pushf
sbb
xchg
inc
mov
xor
insb
aam
dec
bound
sub
pop
cli
sub
inc
out
xchg
jmp
xor
fpatan
inc
fnsave
jo
loopne
mov
add
adc
push
jecxz
outsl
mov
mov
mov
and
push
std
in
adc
sar
jns
out
pop
xorl
mov
xor
lret
sub
repz
push
mov
adc
int3
repnz
jl
add
fstl
stc
mov
or
cli
sbb
jo
lea
in
inc
cmp
mov
or
pop
int3
std
adc
adcb
loope
fidivs
add
inc
and
leave
adcb
cld
pop
ret
mov
mov
orb
addr16
lock
fdivp
and
out
jae
dec
ret
mov
loop
jle
orl
push
adc
arpl
push
adc
dec
add
ss
test
xor
push
fmull
pop
push
dec
push
ficoms
jg
sub
rcrb
addr16
fsubl
xor
das
pushf
arpl
stc
std
fcom
fnsave
pop
jl
fimuls
mov
ret
cs
dec
xchg
jl
inc
sub
jbe
or
cltd
mov
pop
cltd
call
sbb
hlt
jge
pop
mov
add
mov
or
add
cmp
out
mov
bound
push
cld
ficoml
add
jne
push
sbb
mov
lock
jnp
add
add
aaa
in
sti
jae
fldcw
adc
cmovne
mov
rorl
or
or
popa
fstp
inc
jl
bound
pushf
mov
fidivl
jl
or
sub
cmovbe
dec
clc
cmp
cmp
or
int3
xor
daa
cmp
push
out
adc
stos
mov
dec
jns
addr16
cli
cmp
pop
mov
dec
pushl
jl
aam
incl
sbb
xor
leave
movsb
enter
mov
push
mov
mov
mov
loopne
pop
frstor
sub
push
ror
sbbb
inc
out
outsb
jle
inc
pop
mov
scas
push
xor
jno
jae
insb
sti
daa
push
jno
adc
jo
adc
aad
mov
dec
or
sub
jne
cmp
mov
repz
mov
mov
repz
gs
out
addb
push
aam
sbb
mov
jg
out
lods
jmp
push
push
xchg
jl
and
imul
cmp
sbb
add
scas
xchg
xor
mov
jecxz
xchg
out
xor
mov
test
sub
in
rorl
pop
or
inc
mov
xchg
xor
ljmp
lahf
fisubl
mov
or
lcall
sbb
fdivl
pushf
inc
int3
xor
inc
push
addr16
inc
mov
scas
push
jb
test
jmp
dec
je
push
mov
mov
stos
mov
add
fwait
test
into
pop
mov
xor
in
fisubrl
js
cmpb
jbe
pop
into
sbbb
jle
push
or
xchg
sahf
ret
inc
xor
aaa
pushf
into
ljmp
addr16
call
sub
in
bound
jmp
cmpb
test
push
shrb
es
unpckhps
and
sbb
xor
jecxz
xor
xchg
gs
or
xchg
add
mov
jns
enter
hlt
cmp
xchg
adc
leave
xor
lcall
mov
inc
pop
aas
mov
xchg
js
pop
mov
mov
mov
adc
adc
pusha
out
jnp
cltd
es
mov
insb
sub
jg
cmp
stc
cmp
cmp
sbb
dec
jae
nop
hlt
cs
xor
rorb
fbstp
lret
xor
ds
mov
fstpl
pop
mov
jb
test
cmc
add
cmp
jb
cmp
fdivl
sarl
ljmp
adc
pop
inc
scas
add
inc
mov
daa
lds
pop
jl
push
add
cmp
aam
inc
into
loope
mov
dec
jecxz
pop
jle
jne
ja
mov
jae
and
push
arpl
fdivl
fisubrl
int
jp
xor
lods
mov
out
xchg
mov
movsb
scas
mov
divps
stos
aas
orl
sarb
jl
sahf
jnp
stos
and
or
aaa
xor
xor
adc
arpl
ret
mov
mov
or
aas
or
dec
push
loope
or
popf
push
add
mov
popa
sbb
lahf
cmpl
and
push
mov
dec
push
add
mov
enter
push
xchg
loopne
ljmp
pop
xchg
pop
enter
xor
push
cmp
and
das
cmpsl
dec
and
fs
pop
into
push
xor
out
mov
xor
call
stc
dec
sarb
xlat
xchg
mov
mov
fs
sbb
mov
mov
jbe
add
cmp
ret
mov
dec
mov
push
pop
adc
orl
out
dec
jmp
outsl
rolb
outsl
stc
pop
push
push
xchg
cmc
test
sbb
xor
sub
sbb
es
push
adc
addl
cmpsb
push
pop
cwtl
jne
jno
jae
jp
loop
add
xchg
xor
inc
mov
outsl
dec
insl
or
in
lret
mov
fcompl
pop
ss
or
fimull
adc
icebp
cmpsl
sub
or
stos
clc
fwait
cmpsl
jg
filds
push
jae
in
leave
jmp
and
add
and
fidivrs
cmp
dec
cmp
outsl
inc
xor
out
mov
mov
shrl
dec
leave
sbb
popf
fisttpl
jg
adc
xor
push
adc
cwtl
xchg
mov
mov
add
mov
daa
mulb
shl
scas
xchg
sbb
int3
js
mov
sbb
in
push
jp
stos
adc
aas
lret
jge
add
inc
and
loopne
fmul
in
dec
icebp
pop
push
dec
addb
cmc
pop
xchg
inc
popl
clc
notb
ret
call
sbb
push
jno
push
pop
push
sub
inc
cmp
popf
lret
cld
dec
sarl
pop
stc
sub
sbb
lock
sub
xor
add
cld
je
or
daa
repnz
adcl
cmp
mov
mov
cmpl
es
xchg
push
cmp
mov
sbbb
shll
dec
cld
int
mov
mov
inc
push
adc
cmc
fiadds
pop
shlb
mov
das
mov
sub
hlt
std
push
sub
jnp
adc
addl
fisttpll
pop
movsb
add
les
inc
sub
or
loopne
loope
in
push
stc
pushf
jne
xchg
mov
lods
dec
sbb
fsubrp
fnstsw
aaa
dec
arpl
movsb
dec
stos
std
js
xlat
add
push
shll
or
fs
or
mov
enter
add
push
pop
imul
in
enter
aas
imul
aam
add
out
fiaddl
pop
push
mov
inc
loope
loop
data16
xchg
xchg
mov
pop
push
dec
imul
ja
cwtl
cld
inc
sysexit
rcl
bound
pop
mov
outsl
daa
lcall
xchg
roll
dec
inc
dec
das
or
cmp
fidivl
xor
push
sub
aam
push
sub
rcl
leave
sbb
out
loop
push
sub
pop
test
cli
inc
push
in
xchg
sbb
inc
adc
push
pop
cmc
stos
push
movsl
jns
lds
dec
arpl
pop
mov
in
jg
push
idivb
push
adc
popf
inc
mov
xchg
cs
lea
std
cmp
pushf
scas
imul
leave
int3
xor
pop
push
mov
ret
outsl
push
cli
lods
in
flds
pop
pop
inc
insb
lret
mov
into
cmpsl
into
xlat
dec
out
das
pop
shlb
stos
in
hlt
jo
stos
test
addr16
dec
jle
pop
lea
xor
cmc
fs
push
or
int3
xlat
adc
mov
mov
push
mov
dec
dec
stos
iret
push
outsb
xor
cmp
jp
and
mov
sub
sub
mov
sbb
movsb
dec
rcrl
or
in
clc
xchg
mov
inc
cmp
or
fldt
out
outsl
cltd
bound
jns
and
and
pop
fwait
and
test
fbld
dec
mov
jb
xor
sbb
aas
in
jb
sti
ret
mov
jecxz
int3
mov
push
cmpsb
sti
cmpps
pop
xor
imul
sub
mov
push
int3
pusha
lahf
movsl
mov
scas
lea
sub
movsb
imul
inc
sub
ds
outsl
cmp
movsb
mov
int
addr16
cmpsb
call
sub
test
popa
decl
int
rcr
dec
inc
cmpsb
push
stc
push
adc
mov
adcb
test
add
test
add
out
push
add
outsb
fwait
pop
xchg
int
push
cmp
cltd
std
ret
push
int
mov
stos
sbb
pop
sti
dec
push
mov
loope
fwait
int3
je
fs
shr
inc
test
rcrb
xchg
int3
push
shrb
pop
outsl
cwtl
rcrl
push
ror
xchg
iret
int
or
fwait
push
cmc
dec
and
add
or
pusha
pop
xor
mov
xor
add
xor
movsb
sbb
int
call
arpl
inc
dec
rcrb
mov
roll
clc
lret
sbb
inc
hlt
mov
push
loopne
pop
mov
pop
jecxz
pusha
push
xlat
cld
out
js
xchg
int3
loopne
lods
cwtl
enter
pop
pop
pop
rclb
sub
dec
icebp
xchg
fs
sbb
cltd
jbe
hlt
mov
xlat
mov
movsl
inc
pusha
test
je
and
adc
mov
in
popa
test
test
mov
pop
inc
es
inc
sub
xchg
je
jbe
cmp
ds
or
cmp
out
pop
lds
sahf
sub
stc
mov
iret
repnz
mov
jmp
imul
or
scas
push
pop
pop
mov
mov
jno
inc
mov
daa
xor
test
testl
mov
sahf
ret
jecxz
push
sbb
fildll
movsb
shlb
repz
fwait
push
aad
loope
outsb
sahf
inc
arpl
adc
jecxz
mov
xor
adc
lock
dec
mov
aaa
fwait
lahf
fldt
aaa
ljmp
cmpsb
stc
data16
push
mov
mov
mov
ret
test
inc
pop
push
je
cmp
xchg
pop
lcall
cmp
rcr
add
pop
cmpsb
jg
and
pop
xchg
pop
sti
jno
adc
push
pop
inc
dec
es
xchg
popa
dec
mov
xor
out
mov
fidivs
inc
pop
ret
xchg
leave
mov
adc
daa
dec
push
mov
pop
into
out
cmc
or
les
jp
arpl
cmc
mov
fsubrl
dec
xor
daa
hlt
stos
in
int3
pop
out
mov
adc
mov
push
orb
fmul
cmp
xor
adc
insl
loope
sbb
push
pop
movl
sub
lahf
cmp
mov
add
mov
push
or
inc
shlb
jae
lcall
lret
data16
pop
pop
and
jb
sahf
mov
cmpsb
aam
mov
test
xchg
adc
adc
insb
aam
or
insb
xchg
jne
mov
inc
mov
js
xchg
pop
in
lret
lds
xchg
movsl
inc
ds
and
gs
out
xor
ljmp
sbbb
loope
test
hlt
xor
jns
rcrl
fstl
lods
xor
xor
fs
jle
repz
mov
roll
mov
jecxz
ljmp
movsl
xchg
push
fiaddl
out
lret
xor
mov
mulb
dec
fldl
xor
sbb
cmp
jne
dec
dec
cmp
out
mov
cmp
cmp
mov
cmp
xchg
dec
sbb
jp
popa
js
mov
mov
xor
sahf
adc
test
and
xchg
aad
into
out
or
lret
push
push
pop
cmp
repz
or
and
clc
sub
ss
xlat
lds
rcr
jae
adc
not
dec
push
call
loope
or
es
adc
xchg
in
xchg
sub
pop
jne
jns
adc
mov
pop
cltd
xchg
dec
in
dec
loop
jbe
xchg
adc
inc
jp
add
movsb
dec
aaa
sub
adc
arpl
cmpsb
icebp
sub
add
fwait
int
std
inc
shlb
jno
inc
test
shrl
sbb
sub
xchg
iret
xchg
lods
ret
push
mov
outsb
sahf
xor
inc
fdivrs
aam
cmp
jnp
adc
mov
dec
and
andl
cmpsl
ret
sbb
cltd
and
xor
dec
lods
pop
enter
xchg
xlat
ds
int
xor
ret
ss
movb
ljmp
or
mov
mov
cmp
dec
pop
bound
fdivr
cmpsb
fnstsw
je
or
add
rcrb
aad
jecxz
dec
std
out
mov
push
sub
aaa
mov
mov
xor
inc
loopne
or
popa
mov
lret
sub
jbe,pn
xchg
or
hlt
in
movsl
ds
jge
sbb
shrb
jmp
es
lahf
cmp
dec
fs
xchg
jb
push
push
or
lock
xchg
mov
jb
xchg
nop
frstor
repz
sub
mov
outsb
addb
mov
push
and
push
shlb
call
scas
dec
cld
xor
and
push
xrelease
mov
clc
les
int3
mov
mov
stos
xchg
movsb
fimuls
lds
pop
cmp
inc
imul
push
xor
pop
lods
in
cmpb
enter
lret
push
jg
cli
loopne
fisubrl
adc
in
mov
in
fsubrs
push
and
aas
imul
es
mov
out
faddl
jns
dec
sbb
xchg
loopne
test
dec
pop
daa
xchg
scas
sbb
push
push
pop
popa
adc
jns
aas
aad
test
xor
xchg
cwtl
dec
fyl2x
sbb
fbstp
fistpl
fbld
adc
or
push
dec
jbe
dec
cltd
sub
lcall
repnz
inc
je
cwtl
loopne
mov
popf
fcom
mov
test
les
fstl
dec
sahf
ss
rcr
and
xchg
xchg
outsb
nop
pop
imul
popa
inc
sti
and
incb
imul
fisubs
cwtl
adcb
mov
jl
stc
adc
inc
je
ficompl
movsb
pop
in
lods
adcl
pop
mov
push
cs
mov
filds
push
ljmp
dec
pop
jno
lea
and
jle
push
out
adc
add
pop
sbb
inc
les
mov
insb
cmp
rcrl
popa
ljmp
sbb
push
push
jb
cmp
add
cltd
mov
pusha
sub
iret
push
and
cs
cmp
cs
push
mov
icebp
cmp
pop
shlb
out
and
mulb
inc
icebp
test
cmc
mov
rcrl
fldt
loopne
mov
xor
arpl
adc
pop
cmpsl
cs
cmp
rorl
call
cmc
xchg
imul
xchg
arpl
and
pop
cmp
adc
and
or
cltd
outsl
fs
iret
notb
sarl
mov
xor
or
cwtl
std
mov
xchg
and
xchg
mov
in
xor
mov
push
sub
dec
lods
dec
push
add
fistps
lahf
data16
mov
mov
or
in
sub
inc
jno
cmp
push
mov
ficomps
or
push
scas
sub
std
sub
inc
mov
cld
lahf
clc
sub
lret
xor
pop
jae
test
lock
push
lea
add
jle
orb
mov
test
cltd
xor
xchg
test
popf
loop
push
jge
push
pop
and
sub
movzwl
cmp
test
mov
jo
fsubrs
lea
inc
into
hlt
fcompl
out
pop
scas
gs
sub
inc
adc
data16
loope
inc
inc
jnp
jg
test
inc
dec
out
call
pop
xlat
pop
popa
mov
xor
sub
inc
xor
mov
das
ret
dec
dec
scas
cld
sbb
mov
ficoms
xchg
mov
xchg
sub
sbb
dec
mov
mov
fistpl
mov
lods
shl
ret
or
add
pop
dec
gs
das
shrb
lods
sbb
mov
pop
mov
xchg
sbb
addr16
sti
inc
and
jnp
mov
cwtl
mov
or
push
lock
cmc
xchg
fadd
jns
dec
jle
pop
dec
mov
add
enter
mov
mov
pop
fcomps
push
xchg
call
sub
ds
push
inc
mov
xchg
sub
popa
dec
pusha
push
and
daa
ret
stos
aas
sub
stos
cmp
sti
mov
inc
sahf
jg
sarl
fsubrl
mov
mov
out
stc
add
jp
imul
xor
cli
jmp
jmp
and
cmp
movsb
imul
subb
add
jl
call
mov
hlt
mov
push
scas
sub
add
out
clc
jns
in
mov
pop
addr16
mov
into
sbb
xor
repz
adc
add
clc
mov
cmp
push
test
or
filds
ljmp
inc
std
push
ds
cmpsl
sbb
popa
out
fisubs
xchg
ss
sarl
push
mov
sub
sub
adc
push
stc
arpl
mov
push
andl
movsb
push
insb
mov
inc
xor
call
daa
lods
pop
adc
fsubp
stc
xor
jns
pop
jle
cmp
jmp
or
out
jl
cmp
xchg
jno
sarb
mov
call
loope
in
and
lds
inc
or
movsl
push
push
fs
sbb
inc
jge
add
ret
lahf
mov
ret
test
pop
jmp
lds
orl
mov
sub
jl
cmp
push
mov
jbe
lds
dec
xchg
lret
les
je
jns
fcoml
pushf
jno
idivb
ret
loopne
inc
jecxz
sub
and
lods
mov
js
push
xchg
cmpsl
or
rclb
add
gs
rorl
adc
shrl
push
inc
outsb
ficoms
fadds
push
add
cmp
mov
inc
stos
je
dec
pop
lock
in
nop
pusha
ds
push
pop
pop
pusha
ret
dec
sub
test
inc
mov
popf
scas
cmp
push
ljmp
xor
sub
dec
lret
inc
and
lret
imul
mov
repnz
or
mov
notb
or
js
jl
xchg
ret
xor
or
mov
mov
sub
mov
inc
test
push
adc
add
movsl
and
mov
rcrl
cmpsb
push
jge
dec
adc
push
fmul
pop
mov
sbb
addr16
imul
aad
inc
mov
daa
test
jp
icebp
arpl
cmpsl
test
fstpt
mov
iret
sub
mov
push
rcrb
xlat
mov
xor
cs
repz
mov
xor
add
in
cmp
adc
and
pop
js
xchg
mov
clc
and
out
mov
loope
sub
inc
mov
mov
fstpt
or
icebp
cmp
in
aaa
or
mov
scas
add
in
add
push
push
mov
clc
mov
arpl
sub
mov
into
jg
mov
xchg
ror
mov
and
or
aas
or
and
add
aam
jl
loop
xchg
xchg
ja
mov
hlt
call
mov
icebp
or
notb
inc
pop
ret
push
outsb
mov
fstpt
or
xchg
cmp
nop
mov
addr16
imul
jp
int
cmpsl
or
leave
sbb
xor
shlb
dec
out
das
shl
adc
xchg
mov
pop
xchg
outsl
add
mov
add
jb
in
push
mov
fwait
sbb
and
and
pop
xor
mov
adc
sbb
loopne
sub
imul
repz
mov
outsl
pop
shl
loop
dec
cmp
cmp
sbb
or
xor
cmpb
sub
dec
pop
inc
cld
repnz
adc
cmp
mov
pop
jnp
sahf
daa
ret
pop
sub
pop
out
addr16
jge
jle
ficomps
mov
cmc
dec
sub
cld
sbb
and
fimuls
or
leave
leave
xchg
mov
jle
mov
and
cwtl
xor
mov
add
rolb
push
mov
stos
mov
add
faddp
sbb
cld
popf
les
xor
pop
mov
subl
jmp
sub
sub
mov
push
mov
test
ljmp
sahf
sarb
sti
insb
test
cmp
movsb
bound
or
adc
dec
xor
sbb
pop
or
mov
sbb
pop
cwtl
shll
add
jae
mov
and
and
dec
hlt
inc
out
popf
push
pop
es
out
jne
loop
xchg
lcall
xchg
mov
mov
mulb
sub
pop
lret
fisubrl
cmp
mov
lods
es
inc
or
add
mov
adc
ret
or
mov
std
adc
cmp
inc
xorb
sbb
xor
sbb
popl
es
add
lret
cmc
xchg
push
cmp
cwtl
ljmp
mov
xlat
cs
dec
mov
adc
add
int
insb
notb
add
neg
jo
xchg
test
call
dec
jge
pop
sbb
jae
stc
mov
adc
fdivrl
mov
addr16
aam
or
xor
int3
cmp
xchg
inc
aad
leave
call
in
sahf
push
movsl
dec
pop
inc
fistpll
test
sbb
cli
sti
out
sub
lock
dec
lret
lret
jns
je
push
shrb
and
lds
rcr
hlt
sar
adc
pushf
inc
fldcw
jae
ds
fnstcw
or
popa
and
cs
xchg
test
inc
xchg
pop
xchg
adc
lcall
insb
popf
loope
call
mov
add
addr16
jno
lret
aaa
pop
inc
scas
push
xchg
sub
fldl
mov
push
push
aam
popf
sbb
iret
sub
jnp
cmc
leave
dec
ficomps
jo
cmc
loop
pop
adc
jle
or
mov
push
sub
and
sub
icebp
cs
loopne
aaa
pop
imul
ret
mov
cmp
jne
scas
pop
mov
sarl
dec
jp
out
rorl
outsl
push
add
jle
hlt
hlt
les
js
fwait
cmpsb
ss
scas
inc
loope
push
sbb
push
out
rol
in
xchg
movsb
inc
ret
dec
aaa
pop
cmp
sahf
cmp
xor
imul
ret
stos
cmpsl
call
mov
adc
or
mov
repz
mov
inc
nop
adc
ljmp
mov
aad
mov
movb
hlt
cmpsl
xorl
in
psrld
or
mov
das
mov
popa
movl
adc
loope
xchg
repz
mov
into
dec
push
jbe
adc
cmp
xor
pushf
sti
mov
and
lds
mov
push
sti
lret
mulb
xchg
pop
sub
lahf
xchg
lock
mov
daa
adc
leave
mov
mov
out
loop
lret
cld
xchg
xor
iret
incb
in
dec
enter
or
xrstors
data16
mov
pop
pop
mov
push
mov
andl
mov
scas
out
sbbb
mov
repz
sub
xchg
rclb
mov
mov
lods
dec
inc
out
dec
loop
inc
sbb
into
cmpl
mov
or
xchg
push
cmp
rcrl
in
pop
pop
mov
mov
push
repz
rorl
cwtl
push
fadds
lret
loope
int
mov
inc
cmpsb
add
out
hlt
xor
add
sbb
cwtl
inc
and
dec
outsb
pop
icebp
inc
and
ljmp
xlat
xchg
add
and
xchg
xor
cmp
ds
iret
jns
push
pop
inc
xchg
mov
repz
xchg
outsl
push
dec
sahf
xor
add
adc
push
or
mov
xorb
add
imul
jp
push
aaa
outsl
cmp
push
mov
sub
add
jge
add
loop
shr
jo
jbe
xchg
daa
lea
xor
xchg
es
in
lret
adc
gs
xchg
pop
pop
fisttps
and
out
aam
push
mov
int
rcrl
xchg
movsl
push
arpl
pop
call
addr16
jbe
stos
xchg
mov
jo
or
dec
out
movsl
add
insb
in
rclb
lods
cmp
aam
rcrb
jne
loope
mov
mov
dec
jge
mov
idiv
dec
lock
fsubr
sub
and
loop
pop
mov
or
push
shlb
stos
popf
out
pusha
in
sbb
sbb
sbb
sbb
mov
xchg
es
push
fs
sbb
shlb
int
inc
or
pop
fs
in
je
jp
lcall
ljmp
pop
inc
idivl
iret
mov
mov
out
popf
out
subb
int3
test
stc
loope
les
xchg
xor
movsl
mov
xor
testl
lea
pop
xchg
ss
and
lods
xor
dec
je
enter
xor
adc
dec
mov
ljmp
adc
test
inc
aad
les
dec
ficoms
mov
lahf
sbb
mov
inc
movsl
push
xlat
loopne
movsl
add
sbb
arpl
mov
jle
dec
xchg
mov
popf
jecxz
inc
std
pop
pop
je
sub
jge
inc
or
xchg
int3
or
jge
push
outsb
jae
adc
xchg
xchg
loop
inc
mov
cli
sbb
xor
sub
sub
push
pop
sub
adc
mov
lods
adc
inc
mov
arpl
jl
jbe
push
cmp
fsts
jg
lret
dec
mov
into
pop
das
sbb
mov
fnstsw
or
out
jl
repz
loope
mov
dec
cmpsl
lods
pop
and
dec
sbb
dec
cmpsl
cmp
into
bound
xchg
push
pop
xor
pop
cmpsb
mov
inc
repnz
sti
add
lds
push
adc
and
jmp
rorl
xchg
sahf
enter
push
ja
inc
sub
mov
cld
cmpsl
lcall
call
fldt
mov
divb
ret
inc
inc
movsb
jne
mov
ljmp
in
add
das
xchg
into
call
loope
mov
jg
push
jg
dec
stc
xchg
aas
icebp
sub
lret
lret
pop
dec
add
loop
repnz
leave
dec
fistpll
cmpl
out
adc
adc
dec
dec
push
jne
fwait
pushf
mov
add
shll
sub
dec
cltd
xorl
push
lock
aaa
sub
aam
ror
repz
xor
push
lsl
fnstenv
cld
cmpsl
addr16
mov
mov
xchg
scas
xor
fiadds
movsb
int3
imul
push
pop
dec
mov
mov
loope
orb
sub
or
je
fisubrs
mov
jmp
mov
or
cmp
or
jae
sub
fimuls
data16
fidivrl
ficomps
outsl
pop
mov
rcr
rorb
insb
insl
out
aas
inc
mov
xlat
inc
cli
in
shll
xchg
lods
xor
out
jno
pop
lret
add
aad
push
and
sbb
inc
sbb
das
mov
push
out
jg
mov
jnp
mov
or
cld
add
shlb
pop
int3
cmp
push
pushl
insl
sti
fidivrl
xor
mov
ret
imul
mov
adc
lods
test
and
cli
mov
loopne
ficomps
testb
fdivs
out
sbb
imul
xchg
rclb
cmp
push
sub
aad
cs
cmc
lahf
test
shrl
lahf
jno
push
popf
loop
fiadds
jbe
dec
mov
sbb
xchg
sti
js
outsb
test
lcall
push
imul
push
pop
cld
cmp
bound
cltd
push
in
jp
iret
xor
pop
fcmovbe
scas
and
out
jno
and
mov
inc
icebp
cmpsb
lret
sbb
ror
pusha
push
stos
pop
sahf
jo
in
and
xchg
jl
aas
add
cmp
gs
sbb
addr16
xchg
out
lret
push
jecxz
mov
pop
rorl
sbbb
je
sub
fcmovnb
xchg
loop
js
imul
cs
sbb
loopw
cmpsl
jae
dec
or
dec
push
hlt
loopne
popa
loope
and
sarl
bound
xlat
push
push
subb
jns
xor
das
xor
aad
xchg
sub
mov
mov
push
mov
xor
sbbl
add
pop
test
and
xor
mov
popa
xor
cmp
stos
daa
insl
jecxz
cmpsb
xor
fstps
insb
add
imul
dec
dec
sub
pop
dec
insb
aad
jp
imul
push
sbb
ret
stc
mov
sub
dec
push
cmp
cli
or
mov
cmc
pushf
dec
sub
lds
xor
mov
or
dec
aaa
lods
sub
adc
imul
mov
rcll
jecxz
lcall
xchg
push
mov
data16
imul
shrb
dec
fnstcw
push
mov
adc
iret
rcrl
test
enter
sbb
cmc
fcomps
add
outsb
cld
imul
pusha
lret
xchg
and
mov
ja
out
sti
push
ja
cmp
sub
mov
pop
jmp
in
mov
cli
pusha
mov
fld
mov
add
xor
xlat
addr16
lea
lea
pop
clc
sub
imull
mov
es
jge
in
jno
xchg
push
lds
sub
sbb
in
cltd
lahf
dec
xchg
imul
out
push
shr
push
aaa
icebp
mov
cmp
pop
cmp
lods
jg
or
leave
pop
xor
inc
sahf
rcrb
xchg
xchg
jne
or
push
popf
loop
ret
stc
hlt
test
dec
pop
xchg
lea
and
mov
pop
add
dec
sub
shlb
pop
movsl
sub
sahf
add
and
call
cmp
cli
sti
loope
lods
xor
pop
mov
insl
cli
jle
push
pop
std
pop
xor
sub
stos
sbb
ljmp
divb
xor
push
lret
int
push
test
fmull
daa
shl
push
mov
lea
jle
inc
lds
movsl
xchg
inc
sbb
lret
aam
lock
negb
jmp
mov
stos
add
fistpll
imul
aas
sbb
cmc
test
fucomi
or
out
cmp
ret
push
xchg
mov
fs
addr16
mov
rcl
rcl
cmp
addr16
rorl
lock
jnp
dec
ds
add
jo
pop
out
nop
mov
inc
arpl
mov
or
int3
gs
cwtl
xchg
rorb
movsl
mov
mov
je
sbb
arpl
cmp
les
lock
pop
xchg
pop
push
dec
sahf
dec
addr16
push
adc
test
out
mov
imul
int
cwtl
and
adc
repnz
sahf
scas
hlt
out
cltd
inc
inc
inc
repnz
pop
xlat
pop
loope
sbb
and
mov
sub
jg
ss
ljmp
out
lods
push
or
mov
std
add
dec
or
enter
sub
xorb
movsl
jnp
cltd
mov
test
lret
mov
and
addl
jnp
mov
das
xchg
dec
dec
iret
ret
orl
mov
cltd
dec
mov
lds
add
sbb
ficomps
sarl
cmpb
cmp
daa
cmpsl
push
loopne,pt
adc
pop
fwait
mov
pushf
out
divl
repz
mov
addb
mov
add
les
out
or
xchg
push
mov
aas
push
jo
lods
mov
mov
inc
nop
stc
hlt
add
pop
lret
and
add
pop
and
out
fldt
pop
stos
and
or
cld
adc
out
shll
jp
pop
mov
ret
pop
loope
in
xchg
dec
dec
push
mov
in
aaa
jge
imulb
shr
cmpsl
stos
sub
out
je
cmp
inc
inc
dec
dec
dec
pusha
dec
lds
or
mov
cli
inc
cmp
cmpsb
sub
mov
jae
aaa
loopne
aam
push
jecxz
mov
jno
sbb
fildll
and
mov
lahf
and
mov
rclb
sbb
xorl
rcr
inc
cmp
fisttps
adc
cwtl
cmp
adc
push
enter
cmpsl
lock
sarb
mov
pop
cmp
sub
mov
mov
dec
fsin
mov
add
fs
scas
test
out
pop
mov
pop
mov
fwait
cmp
mov
aad
xchg
adcb
sti
sti
xchg
mov
pusha
jns
inc
aam
scas
xor
les
jnp
mov
adc
mov
xchg
lods
fstps
in
arpl
adc
or
mov
inc
xor
cltd
or
mov
xchg
repz
and
jecxz
xchg
or
jns
subl
stc
mov
stos
cmp
lock
ss
sbb
aad
jecxz
out
aam
addr16
in
sbb
push
in
out
mull
sbb
lods
test
cmpsl
mov
xor
xchg
mov
test
cmpsl
insb
sbb
dec
js
sbb
sub
dec
leave
xor
xchg
jge
push
cld
jno
mov
out
lret
jns
loop
jno
aad
cld
cmpsl
add
stos
inc
iret
out
rorl
pop
stc
inc
int
std
mov
iret
sbb
mov
aas
scas
cwtl
add
add
sbb
cmpb
cmpsl
jmp
loope
leave
incb
cmp
call
pop
rcll
and
push
pop
push
jno
xchg
addr16
lods
imul
and
nop
inc
sahf
jae
testb
loop
sub
daa
stos
dec
scas
xchg
push
pop
sub
xor
lret
jb
mov
pop
mov
pop
movsb
mov
iret
fidivl
push
and
push
cli
fnstsw
sub
adc
movsb
or
and
repnz
jbe
jnp
aaa
cmp
pop
xchg
lea
pop
xor
aad
stos
andl
jle
into
lea
xor
sub
jb
cs
pop
pop
loop
mov
adc
stos
das
out
add
mov
xchg
insb
lods
add
addl
test
shl
and
cmp
inc
pusha
mov
pop
imul
lods
pop
inc
test
cld
push
mov
sbb
mov
pop
icebp
cli
mov
popf
imul
or
add
cmp
dec
sbb
adc
stos
sub
add
push
inc
add
cmpsb
add
repz
mov
ljmp
mov
js
fs
test
dec
cmp
dec
add
jmp
cmp
jp
cmp
repz
call
pop
pop
inc
mov
shrb
add
int
push
addr16
lcall
mov
and
outsb
mov
cmpsb
cltd
adc
daa
fisubl
xchg
mov
mov
xor
ret
stc
lock
mov
xchg
test
inc
xchg
mov
test
xchg
das
xchg
cmp
jle
jns
lea
outsb
adc
adc
pop
xor
hlt
and
dec
lret
lock
fildl
push
stos
test
add
or
xchg
out
lret
fs
mov
pop
ss
mov
push
scas
push
int
xor
es
test
xor
or
fwait
pushf
push
jns
subb
inc
imull
and
xchg
in
or
mov
clc
test
arpl
or
mov
pushf
or
fninit
xlat
cld
mov
mov
stos
stos
or
nop
in
dec
sub
xchg
scas
mov
lea
repnz
and
push
fs
pop
leave
mov
pop
in
add
jno
jcxz
outsl
fiaddl
fmuls
mov
outsl
test
adc
pop
ds
xor
add
daa
xlat
mov
nop
sub
jmp
push
out
jbe
mov
je
or
mov
or
xor
shlb
jp
sar
jecxz
stos
in
xchg
scas
repz
mov
testb
pop
adc
dec
push
push
sbb
lret
fnstsw
inc
enter
dec
push
in
dec
xchg
inc
jp
dec
inc
mov
push
das
and
or
outsb
and
jnp
sbb
or
lods
daa
sti
aad
inc
jecxz
xor
push
scas
push
jb
mov
pop
not
jno
xchg
cmp
pusha
pusha
daa
nop
mov
push
testl
mov
sub
pop
dec
add
sbb
push
inc
inc
xchg
push
sub
pop
xorl
aam
scas
ja
je
cmp
push
mov
movsl
mov
stos
ror
cmp
icebp
sub
gs
mov
mov
push
sbb
leave
in
scas
call
aad
andb
sti
ret
das
dec
ds
sub
cmp
fisttpll
dec
sub
rcrl
outsl
add
and
outsb
xlat
xlat
mov
inc
gs
mov
mov
jae
ret
out
fistps
mov
fbld
inc
adc
mov
cltd
lds
pop
idivb
sar
fildl
pop
orl
sub
addl
scas
enter
lds
test
cld
mov
pushf
leave
dec
xor
das
sub
mov
pop
xchg
mov
cmp
sbb
mov
mov
cmpsb
pop
fiaddl
popa
loope
imul
xchg
jbe
and
or
mov
pop
push
mov
mov
dec
or
mov
fildll
jno
ss
scas
mov
repz
scas
push
or
nop
fnstenv
dec
cltd
movsb
push
mov
ret
clc
inc
mov
fsub
sti
sbb
jg
je
xchg
adc
popa
dec
sbb
hlt
imul
mov
push
inc
xchg
inc
jae
mov
push
aaa
push
pop
push
stos
sub
mov
mov
cmp
jle
aad
inc
adc
in
ss
psubsw
out
inc
iret
sbb
xor
lcall
mov
pop
insl
cmpsb
fs
adc
inc
popa
hlt
gs
cmp
sbb
and
dec
stc
test
adc
cld
fldcw
dec
xlat
cmp
popf
repnz
test
shll
mov
mov
pop
mov
dec
scas
sti
xlat
push
aam
jl
test
pop
push
add
in
adc
mov
adc
jecxz
mov
into
faddl
in
mov
xor
shlb
mov
ficompl
adc
stos
rcr
mov
inc
mov
lds
repz
inc
pusha
jae
pop
lds
mov
jle
cmp
inc
gs
arpl
and
sbb
sbbl
cwtl
cmp
xchg
dec
xor
in
shlb
testl
inc
into
and
jo
pop
das
mov
push
adc
fs
popf
rcll
xchg
mov
scas
mull
cmpsl
cmpb
cli
adc
repz
push
and
sarl
mov
dec
out
adc
inc
jne
cmpsl
mov
mov
dec
stos
add
push
add
out
dec
mov
loopne
cld
test
rolb
xchg
sub
das
or
inc
adc
pop
data16
je
mov
inc
addr16
inc
out
adc
cmp
push
add
and
mov
pop
pop
push
insl
or
pusha
dec
inc
cmp
lock
xchg
shrb
arpl
pop
mov
sbb
lgs
sbb
and
data16
cmp
inc
jno
pop
rcll
and
and
xor
pop
jo
jne
jnp
les
movswl
sbb
stos
xorb
lahf
testb
cmpsl
cld
fisubrl
dec
fdivp
and
jbe
insb
jp
push
fisttpll
jle
dec
hlt
mov
and
or
jmp
call
sub
es
xchg
lret
stc
push
and
repnz
sub
pop
push
test
mov
in
mov
sub
jp
scas
xor
push
push
in
and
in
push
repnz
mov
es
rolb
aas
inc
jbe
sarb
add
dec
repz
cli
xlat
inc
pushl
jge
out
gs
loop
mov
data16
pop
mov
mov
mov
pop
mov
dec
push
add
out
pop
imul
sub
jo
stos
adc
std
int3
sbb
adc
cmpsb
outsl
mov
les
push
cmp
mov
test
mov
inc
sbb
add
inc
inc
test
mov
rep
or
push
fnstsw
adcb
pop
in
inc
mov
pop
insl
jg
outsl
mov
inc
xchg
testb
cmpsb
or
mov
hlt
add
sti
imul
push
jle
mov
lea
loopne
mov
mov
std
lock
and
repnz
mov
addr16
jb
pop
mov
cld
cmp
xor
and
rorl
mov
notl
pop
test
mov
ja
loop
sub
es
push
inc
mov
shlb
dec
push
lock
sbb
sbb
sbb
mov
outsb
clc
lahf
dec
cmp
sub
fnstsw
push
cmpsl
ds
mov
jb
rolb
std
lret
fmul
jmp
insl
sub
jecxz
out
out
add
iret
fsub
push
fstpt
jl
scas
fcmovnb
les
imul
nop
jnp
stos
iret
xor
mov
movsb
popf
aad
mov
shr
inc
mov
mov
imul
pop
call
jecxz
xor
jmp
fildl
gs
test
out
add
sbb
inc
pop
sbb
fisubrs
inc
dec
scas
cmp
test
hlt
dec
cmp
js
mov
orl
mov
fistl
mov
jmp
mov
pop
xchg
das
nop
into
sbb
push
fcomp
out
sbb
scas
test
cmp
jbe
pop
cmpsb
xchg
pop
xchg
or
mov
icebp
mov
test
lcall
popa
les
aad
jne
lcall
sbb
pcmpgtb
adc
mov
rorb
and
call
xor
dec
cmp
xlat
xchg
inc
jmp
inc
xlat
sbb
mov
inc
mov
mov
shrb
mov
out
mov
push
ds
fcoml
out
sbb
fcoml
pop
aad
fcoms
xlat
es
ja
repnz
loope
enter
xorb
pop
pop
pop
cmp
or
mov
adc
push
lret
sbb
xchg
sub
xor
test
adc
inc
sbb
icebp
jle
mov
fwait
out
sahf
cmp
jno
scas
and
inc
adc
and
and
inc
in
adc
cmp
in
in
push
push
outsl
sbb
adc
xchg
das
push
gs
push
adc
inc
out
in
out
xchg
cmp
fwait
dec
test
outsl
jge
out
dec
mov
bound
mov
pop
sub
cmp
movsl
add
mov
cltd
aas
lea
jo
cmp
in
xchg
out
je
cmpsb
adc
in
jae
sbb
cltd
add
jg
mov
xor
xor
data16
mov
inc
mov
fld
jmp
or
add
mov
xlat
lods
mov
dec
sahf
or
push
int3
fstp
scas
xlat
pop
xor
sub
mov
pop
into
xchg
imul
pop
mov
or
js
imul
jbe
outsl
push
xor
int3
xchg
sub
mov
lret
fstps
adc
add
fldl
ret
cmpsb
mov
sub
inc
fimuls
js
push
mov
clc
test
mov
xor
xorl
jnp
scas
dec
int
add
dec
sahf
push
xor
mov
add
ja
push
push
xor
pop
and
popa
adc
test
sbb
inc
sahf
adc
and
adc
test
fildl
movsl
sbb
xchg
sub
int
out
jl
pushf
mov
or
sub
mov
cmpsl
icebp
mov
aam
mov
scas
push
dec
inc
imul
ss
sub
mov
cmp
sub
ds
test
or
fldcw
adc
xchg
repnz
lret
outsl
xor
sbb
loopne
test
fistl
scas
push
adc
mov
in
pusha
dec
rcrl
sub
sbb
jge
pop
jle
push
jnp
push
jbe
cs
icebp
xor
mov
mov
popa
add
inc
and
xor
mov
pop
mov
push
cmc
xchg
inc
lds
xor
std
ds
ret
lods
aaa
mov
ret
sbb
mov
pop
dec
lret
test
jmp
int
sbb
push
pop
lock
addr16
sub
fwait
pop
lods
mov
int
cmpsb
enter
jno
xchg
adc
in
repnz
push
hlt
scas
insb
pop
jnp
sbb
or
shrl
pop
pop
xchg
add
jne
push
or
push
mov
mov
push
jno
pop
daa
leave
clc
xlat
jmp
and
mov
cwtl
out
inc
popa
jle
or
push
outsl
out
xchg
out
xor
icebp
iret
mov
jmp
mov
sbb
loope
rcrb
stos
cmp
xchg
sbb
inc
in
outsb
pop
mov
in
cmp
test
insb
dec
clc
loopne
lods
sbb
outsl
push
outsl
ljmp
xchg
mov
mov
sti
nop
imul
inc
push
push
cmpsb
xor
popf
test
push
pop
jmp
mov
jno
ret
cmp
repz
mov
xchg
cwtl
adc
fiadds
add
pop
sub
xchg
pop
pop
pop
adcl
and
pop
int3
cld
dec
sbb
mov
test
es
ficoms
insl
fisubs
mov
add
adc
mov
xor
lods
push
sub
lret
push
mov
mov
insl
aaa
das
aas
daa
jge
nop
pop
lcall
cmpsl
repnz
xchg
orb
sahf
or
loope
inc
mov
aas
daa
cmpl
lahf
add
insl
loopne
fcomip
sbb
shl
xchg
push
jle
pushf
or
jge
inc
cmp
mov
stc
jmp
sub
dec
sub
outsl
xor
jnp
dec
sub
ret
outsb
jno
pop
adcl
mov
add
lret
out
nop
sbb
sbb
xor
and
jl
shlb
cli
xchg
cmp
or
mov
inc
cld
pop
adc
pop
push
sbb
sub
sbb
fucomp
aad
push
test
pop
dec
mov
inc
repz
scas
dec
mov
and
mov
lock
or
xchg
es
scas
fs
lret
lcall
addr16
cmp
je
scas
loop
cmp
xchg
and
jno
xchg
cmpsb
mov
dec
push
add
in
ljmp
jnp
enter
xchg
rcrb
mov
push
outsl
mov
xor
push
stos
popf
out
jp
adc
lods
cmpsl
into
lret
mov
jge
pop
sbb
and
and
mov
xchg
fs
ret
cmp
xchg
pop
into
scas
cwtl
das
add
addr16
pop
bound
mov
jno
and
cmp
fsubl
push
jne
xor
or
fs
test
push
repz
push
aas
jle
xor
mov
xchg
testl
mov
inc
or
frstor
xchg
std
pusha
lcall
xor
and
adc
mov
addr16
cmpsl
adc
add
in
lods
insl
jmp
or
stos
push
outsb
xlat
push
pushf
sub
rclb
sti
cmp
std
xchg
xor
pop
inc
mov
icebp
add
movsb
insb
inc
test
sub
push
push
shll
adc
inc
pop
push
icebp
iret
sub
rorb
lds
or
mov
jo
fistpll
xchg
decb
pushf
dec
jle
push
add
fsub
in
into
dec
orl
pop
stc
jg
jmp
and
adc
sub
adc
xchg
mov
adc
aam
stos
clc
or
sub
ror
mov
xchg
data16
mov
and
sbb
mov
jge
out
sub
lds
lret
push
push
inc
push
pop
mov
sahf
push
pop
lret
addr16
in
subl
adc
jmp
dec
xor
imul
cmp
push
adc
pop
fs
xor
push
add
sub
sarl
mov
pop
or
in
and
jo
sub
add
pusha
leave
ljmp
subb
clc
inc
mov
jmp
push
mov
jae
fildll
or
push
scas
pop
cmp
jb
lret
mov
clc
testl
xchg
jnp
inc
jnp
les
xchg
stos
or
push
ret
cmp
add
push
out
cwtl
aaa
pop
outsb
xor
cld
xchg
fxch
stos
mov
cltd
lock
sub
loop
push
mov
xchg
add
ds
cld
imul
jmp
in
push
adc
dec
pop
pop
sub
jne
sub
pop
jmp
adc
push
xor
nop
cmpsl
push
push
mov
inc
jg
lret
out
cs
scas
mov
shl
jg
enter
data16
adc
fdivrs
pop
mov
rol
pop
sbb
mov
mov
add
xchg
xchg
sub
cs
ja
lret
lods
and
cmpsb
mov
hlt
sbbl
or
push
ret
pop
test
addr16
jnp
test
inc
sbb
jno
movsl
jecxz
push
sbb
aas
xor
rcrb
push
sub
add
sbbl
pop
adc
xlat
xchg
rol
xchg
out
push
mov
add
sbb
repnz
lods
mov
mov
sbb
into
rcrl
dec
imul
fildl
stos
pop
fcoml
pop
pusha
jge
dec
adc
frstor
aas
sub
ret
pop
lds
cmpsb
aam
xchg
gs
mov
icebp
adc
shrl
cs
add
dec
push
sti
mov
mov
jne
popa
xchg
dec
or
dec
lods
cmp
inc
jmp
mov
inc
hlt
cmpl
out
aam
dec
mov
push
mov
xchg
scas
popf
or
sbb
push
mov
mov
enter
sub
xor
lods
les
push
sub
mov
in
popa
mov
pushf
sub
xor
jg
jmp
xchg
ja
fdivr
add
fildll
dec
cs
mov
inc
cmp
push
mov
jg
xor
mov
stos
push
jecxz
popf
mov
add
xchg
mov
cmp
int3
mov
cmc
jle
sbb
mov
jb
in
es
inc
and
xor
pop
cli
and
sbb
shl
pop
sub
lahf
mov
cs
dec
mov
sub
cmp
jge
mov
adc
lea
add
pop
test
ffreep
or
ljmp
ficompl
xchg
cmp
out
dec
mov
cmp
shll
clc
sbb
add
scas
sbb
das
cli
pop
sbb
subb
pop
mov
and
dec
jmp
mov
jg
jl
adc
in
icebp
aaa
cmp
test
int3
dec
enter
jb
loopne
sub
mov
push
out
scas
orb
mov
push
movsl
xchg
cmp
mov
lcall
inc
jecxz
sbb
cwtl
mov
xor
inc
movsb
rorb
sbb
or
cmp
sbb
cmp
xor
mov
mov
xchg
jp
dec
jmp
add
push
dec
add
sarl
lcall
xor
jp
push
stos
mov
inc
addr16
bnd
dec
dec
push
fnstsw
int3
inc
outsb
adc
jnp
pop
jnp
cmp
imul
push
fidivrs
aas
subb
pop
lret
aas
loope
lods
dec
jecxz
ds
stos
mov
ret
push
rolb
out
mov
insl
mov
mov
mov
pop
pop
jmp
mov
sti
loopne
jbe
mov
ret
outsb
data16
movsb
push
xor
push
js
mov
xor
pop
push
mov
inc
aaa
pop
je
ds
mov
ret
cmp
imul
xor
ret
ret
pop
pop
inc
out
inc
test
sahf
gs
int
pop
or
aas
xchg
sbb
push
mov
xor
jg
jecxz
sbb
dec
pop
xchg
mov
fs
dec
cwtl
test
loopne
insb
lret
dec
dec
lds
adc
pop
pop
dec
lcall
push
jns
sbb
lret
arpl
pop
fisttpl
mov
jl
test
or
and
daa
xchg
fadds
hlt
xor
rorb
in
cmp
jp
or
cld
add
insb
aaa
sub
sbb
push
push
movsb
dec
mov
mov
cmp
ret
stc
rcrl
fidivs
scas
js
iret
dec
pop
jle
in
insl
lcall
sub
test
mov
cmp
jbe
pop
push
xchg
sbb
sub
add
jae
cmp
paddusw
ja
out
push
test
cmpsb
push
sub
repnz
mov
xor
insb
fbld
nop
out
jecxz
lock
xlat
jg
je
outsl
adc
pop
sub
mov
fincstp
inc
test
adc
mov
xchg
cmc
jns
sbb
mov
sbb
pop
mov
adc
cmp
out
arpl
sub
icebp
lahf
clc
xlat
add
sub
stos
bound
xor
inc
in
gs
mov
pop
sbb
scas
arpl
aam
pop
xchg
shll
repz
add
movsb
dec
xor
pop
or
sub
dec
jp
shlb
sbb
sar
movsl
add
dec
test
daa
into
das
ficompl
mov
adc
adc
inc
addb
xor
fadd
add
mov
xor
jae
test
mov
fbld
fidivs
out
cmpsb
imul
fs
jp
jl
outsb
add
sub
jbe
sbb
iret
iret
scas
ss
lds
xor
jmp
mov
out
push
xor
push
xor
pop
xlat
inc
js
xchg
sbb
mov
lea
cli
xor
or
sbb
sbbb
shlb
ljmp
mov
stos
mov
cs
mov
shlb
aaa
das
out
mov
cld
je
mov
sub
adc
cld
jbe
cmpsb
lcall
cmpsb
push
push
jge
and
dec
in
jg
push
and
xchg
dec
jecxz
push
les
std
xchg
sub
xor
pop
and
jne
push
fxch
and
xlat
cmc
into
xchg
cs
add
sub
imulb
leave
jno
test
lock
push
test
sub
xor
test
imul
loope
cmp
add
fnstsw
adc
xor
movsl
inc
adc
xor
xor
dec
popl
push
push
push
in
adc
das
dec
dec
ja
rcrl
lods
add
jecxz
and
inc
xor
xchg
sub
sbb
sub
sub
fwait
inc
mov
scas
in
faddl
mov
dec
fcmovnb
pop
fiaddl
lret
js
pop
jl
test
xor
int3
test
fnstenv
and
add
mov
cltd
sub
pop
cmp
add
adc
divl
insl
cmpsl
movsl
cmpl
and
inc
sbb
lock
fcoml
out
push
mov
pop
imul
pop
sub
testb
adc
and
xchg
pop
in
int
inc
adc
ret
mov
xlat
jle
jns
pop
repnz
sbb
inc
rol
xlat
int3
cmpsb
bound
jecxz
jl
stos
adcl
popf
cli
dec
aas
jmp
jb
push
cmpsl
adc
xchg
out
jle
inc
xchg
pushf
mov
xor
hlt
jp
sbb
mov
rorl
cmpsl
aam
xchg
insb
jmp
push
fiaddl
in
inc
cmp
mov
lds
xor
mov
mov
mov
mov
fcmovne
cmc
cwtl
jno
push
fldl
loopne
les
xor
das
push
pop
cmp
imul
lods
rcrb
mov
sahf
shl
call
inc
loope
push
inc
sti
and
js
scas
add
xchg
add
subb
xor
push
push
movsl
int
int3
mov
sub
sub
outsl
adcb
inc
mov
iret
cmp
adc
movsb
mov
pusha
popf
adc
or
add
pop
mov
add
mov
dec
sub
rclb
pop
add
popf
dec
adc
xchg
iret
inc
adc
hlt
arpl
mov
cmp
addl
xor
ja
je
dec
out
adc
pop
jae
mov
dec
hlt
inc
decb
add
das
sarb
scas
stos
jae
push
in
dec
add
fldenv
adc
add
push
jb
stos
and
lods
pop
jle
dec
sub
popa
int
push
insb
shr
lea
iret
sbb
cld
jmp
test
xor
push
in
push
inc
daa
arpl
inc
push
es
jp
aas
andb
mov
xchg
adc
mov
into
inc
mov
in
cld
ficomps
mov
xchg
repnz
fcoml
adc
mov
fmuls
mov
xchg
dec
mov
add
mov
lock
lret
xchg
and
mov
lods
hlt
sub
daa
out
or
enter
jmp
imulb
and
cwtl
aas
in
inc
adc
test
adc
lods
stos
cs
out
dec
aaa
out
lods
adc
lcall
xabort
roll
pop
testb
lea
lret
add
sub
mov
cmp
sbb
mov
enter
repz
les
pushf
or
in
insl
push
enter
arpl
inc
mov
or
dec
and
lods
lods
leave
cmp
pop
cmpsb
push
out
xlat
cmpsl
cmp
add
pop
add
sbbl
aaa
mov
ds
push
push
pop
mov
pop
mov
outsl
jb
xor
xlat
xchg
push
cld
sbb
xor
jbe
dec
gs
loop
push
mov
cwtl
daa
xchg
inc
cmp
pop
cli
in
and
cmp
push
aaa
popf
stc
popf
xlat
les
test
popa
jbe
hlt
xor
cmc
inc
pusha
jae
fidivl
and
jbe
mov
imul
stc
xor
jp
xor
pop
nop
mov
mov
and
dec
sbb
inc
lods
mov
out
fistl
jmp
fists
push
enter
jmp
xchg
fldenv
adc
rcrl
test
stos
mov
and
jmp
inc
scas
push
popa
test
dec
enter
pop
push
add
dec
xchg
repz
xchg
clc
and
lds
jne
sbb
repnz
jae
enter
pop
pop
aad
sub
sbb
sahf
mov
push
addr16
loopne
stos
in
aaa
fstps
mov
mov
lea
pop
mov
paddsb
out
xchg
movsl
sub
push
aaa
not
sbb
fwait
shrb
mov
jecxz
mov
sub
decl
imul
push
test
test
xchg
fists
push
sub
mov
mov
mov
cli
xor
lea
ret
cmp
out
repnz
movsb
std
subl
mov
stos
fmul
pop
mov
adc
mov
mov
fs
ss
out
inc
shrb
push
sub
bound
ja
out
icebp
mov
push
sti
mov
sub
scas
xor
test
dec
leave
fwait
mov
push
mov
mov
mov
sbb
mulb
adc
mov
lds
jnp
or
aam
jnp
lret
les
stc
jo
loope
lods
cmc
mov
lock
and
roll
mov
outsb
mov
inc
mov
loope
out
out
icebp
lret
repnz
mov
cmpsl
mov
repz
pop
into
xor
iret
popf
sarl
popf
into
test
ja
xchg
sub
jns
adc
add
lfs
lcall
dec
mov
jno
jns
in
mov
ds
in
sti
aas
mov
push
inc
xchg
adcl
push
sahf
int3
and
mov
pop
jo
aaa
bound
ret
aam
out
inc
outsl
lock
cmp
add
pop
pop
lcall
sbb
sub
enter
or
lods
push
flds
loop
push
fwait
dec
add
lret
xor
add
aam
pop
cmpb
or
stos
subl
dec
test
movsb
data16
ficoml
mov
inc
cld
sub
ret
mov
sarl
pop
adc
std
jmp
mov
jae
mov
add
in
stc
xchg
loop
jecxz
outsl
clc
sub
ret
ror
lods
add
outsl
jnp
lret
xchg
mov
scas
aam
loop
push
call
rdpmc
add
cli
or
jg
xchg
jb
movsl
int
mov
mov
jmp
push
imul
lret
aaa
cmp
rcll
mov
mov
inc
sbb
call
lds
push
popa
scas
sub
std
test
xor
and
sbb
test
jno
mov
xor
inc
sbb
outsb
rolb
jns
arpl
mov
push
dec
dec
lahf
scas
sti
in
mov
cmp
and
cld
sub
subb
stos
mov
inc
xchg
mov
rolb
mov
jp
test
stos
fs
clc
leave
xor
and
xchg
cmp
pop
adc
pop
pop
out
push
jp
ja
aam
xor
mov
jg
ficoml
addr16
inc
dec
idivl
int3
jg
outsl
push
inc
mov
dec
mov
sub
ficoml
jb
test
je
popf
or
xchg
jo
lahf
notb
outsb
mov
fcoml
mov
adc
mov
jle
sub
push
lds
pop
sbb
lods
imul
cmp
test
stos
loop
xchg
xchg
outsb
fnstsw
push
inc
test
mov
or
sub
icebp
fstpt
shll
call
mov
ret
mov
in
xchg
fucom
call
jp
iret
mov
xchg
stos
rclb
jo
sbb
js
push
sub
lock
jp
xor
push
pop
sub
pop
lea
or
push
xchg
ss
stos
push
cwtl
dec
mov
mov
sub
insb
clc
mov
inc
or
mov
push
xor
jecxz
imul
jmp
scas
mov
inc
call
pop
stos
dec
pop
ds
rcll
cmc
inc
flds
fstp
add
or
push
sbb
mov
push
imul
xchg
nop
inc
es
imul
jae
push
xchg
pushf
mov
cmc
aad
add
andl
cltd
insl
mov
aam
repnz
out
adc
fwait
xor
xchg
xchg
inc
xchg
in
dec
icebp
enter
cli
sub
push
imul
mov
es
test
fsts
pop
cmp
repz
push
push
pusha
mov
repz
sbb
cli
call
xchg
js
out
cmpl
out
pop
jne
lds
test
xor
cmpsl
dec
pop
rcr
mov
fcmovbe
or
pop
lods
mov
xchg
inc
inc
fists
stos
movsl
inc
xchg
mov
daa
mov
jle
pushl
adc
pop
adc
int
inc
dec
mov
cmpsb
out
xchg
roll
fstpt
sub
jae
jne
jge
mov
sub
pop
jecxz
lock
xchg
iret
xor
jnp
pushf
pop
fldt
mov
dec
repz
cmpsb
insb
inc
jmp
push
arpl
arpl
lock
xor
stos
push
mov
lods
aaa
pop
pop
jbe
arpl
mov
fimuls
xchg
dec
stc
rcl
cmp
cmp
xor
cwtl
jbe
mov
mov
in
stc
lahf
mov
add
jmp
push
dec
jl
push
push
lcall
push
iret
fidivl
notl
popf
lds
std
sbb
andl
add
loop
jp
in
cwtl
mov
and
js
std
js
iret
ret
stos
xchg
or
leave
sub
mov
mov
push
add
out
sbb
movsb
fbld
add
int3
sti
lods
loope
aas
addb
sbb
jae
pop
inc
adc
and
cli
push
fidivs
sbb
aas
inc
mov
fwait
mov
lock
pop
jnp
lcall
lods
insl
inc
hlt
sahf
push
rclb
fisubl
inc
sbb
xchg
aaa
imul
inc
sbb
shll
stc
ss
leave
inc
sbb
jge
or
enter
addr16
xor
xchg
mov
in
movsb
mov
inc
daa
aad
add
cmp
leave
xor
jle
add
xchg
imul
jmp
add
iret
mov
in
jae
fcoms
sahf
aaa
sub
cli
push
pop
imul
mov
xor
lret
jae
xchg
sub
mov
pop
mov
lods
mov
dec
mov
jnp
inc
fdivl
dec
xchg
mov
or
mulb
inc
out
pop
pusha
repnz
shlb
sub
push
xchg
pop
outsl
and
out
mov
mov
jbe
mov
push
mov
hlt
jle
enter
aam
aad
sub
and
aad
mov
enter
ljmp
xor
mov
dec
pop
inc
push
sbb
into
ds
repnz
out
daa
outsb
scas
int3
cmpsb
push
es
xchg
jg
roll
xchg
mov
adc
inc
and
dec
and
mov
jmp
popf
shrb
dec
dec
or
aaa
dec
div
push
in
mov
push
push
mov
lods
add
sbb
add
aad
xchg
and
sbb
dec
decb
mov
sub
jle
mov
jg
and
pandn
inc
loopne
sahf
test
or
xchg
xchg
je
scas
insb
jne
mov
aas
js
add
lahf
adc
lock
jb
aas
pusha
sahf
loopne
pop
stos
cmc
std
xchg
sub
shlb
dec
push
sbb
add
scas
adc
lods
xor
sbb
rcll
xchg
sti
mov
scas
aaa
mov
outsl
fdivrp
pop
sub
mov
mov
sarb
mov
inc
sub
push
jle
mov
addr16
mov
lret
sub
xchg
jne
sarb
repz
shll
fldt
add
mov
nop
fs
and
or
popa
shlb
dec
adc
sar
dec
add
jge
push
add
cmp
bnd
push
pop
adc
clc
inc
ficoms
and
cs
mov
jge
in
hlt
test
xchg
ror
jb
fsubrl
and
xlat
sbb
inc
lcall
out
xor
scas
or
outsl
jns
cs
je
fdivl
es
push
or
adc
fcmovnu
inc
xlat
cmc
fidivl
nop
mov
cmpl
sub
adc
mov
inc
sbb
mov
sub
movsl
add
and
push
ss
xchg
je
repz
int
add
out
sbb
mov
mov
and
mov
test
cmpsb
lods
add
out
mov
lods
mov
xchg
in
push
adcl
cli
mov
movsl
loope
or
mov
sub
int3
push
call
push
ljmp
mov
xchg
xchg
pusha
pop
dec
push
mov
dec
mov
push
sub
repnz
lret
nop
mov
rcl
movsb
add
std
in
jg
mov
int3
pop
fcomip
mov
jge
xchg
xor
cli
jg
sbb
xchg
jno
mov
cmp
dec
cmp
adcl
mov
xor
cmp
cmp
or
inc
sub
cltd
lahf
xchg
out
insb
cltd
jbe
mov
lock
xor
stos
testl
mov
mull
in
pop
cltd
xchg
or
push
xchg
pop
sbb
lods
imul
push
scas
call
into
mov
inc
add
test
mov
xchg
aam
lcall
int
mov
outsb
das
cmp
inc
jmp
cli
dec
xchg
sub
pop
xor
cmpsl
xchg
hlt
push
ds
out
inc
mov
inc
out
cmpsb
sbb
aad
jg
mov
popa
push
ss
lods
rcll
mov
push
and
mov
mov
dec
or
xchg
jg
idivl
push
in
adc
shlb
jp
mov
cmp
mov
insb
pop
xchg
dec
test
imul
stos
addr16
js
ss
pop
lahf
pop
xchg
jbe
idivl
shlb
stc
sbb
push
lods
cmovns
outsl
mov
mov
mov
imul
aaa
add
mov
inc
fdivrl
scas
repz
dec
adc
cld
test
mov
insb
popf
mov
xor
je
dec
lods
push
mov
mov
leave
out
sbb
cld
mov
mov
test
pop
and
mov
ret
jp
xchg
push
dec
les
sub
lret
jbe
popa
sbb
sub
or
out
mov
cmp
pop
cmp
rcll
and
ret
inc
add
scas
lods
arpl
pop
jle
add
in
outsb
ljmp
dec
inc
xchg
pop
das
stos
and
mov
jp
cwtl
cmp
sbb
lods
and
mov
inc
cltd
lock
pushf
lahf
mov
or
out
loopne
loope
lods
add
push
pusha
fsubl
mov
adc
ret
gs
int
inc
repnz
in
pop
adc
and
stos
enter
and
xchg
add
leave
jecxz
mov
add
xlat
fs
scas
jae
xchg
test
aad
or
dec
ror
dec
inc
cmpl
fs
shll
xor
cwtl
lret
int
pop
xor
push
popa
pop
jnp
clc
andb
test
inc
mov
nop
xor
jg
cmc
in
ret
nop
aas
imulb
stos
dec
add
push
xchg
xchg
test
shr
and
inc
mov
stos
shrl
push
and
jg
pop
and
lds
xacquire
and
in
push
lds
lret
cld
xchg
pop
in
sub
fwait
sub
pop
mov
rcll
sbb
ds
rcll
pop
dec
jle
in
scas
jmp
jg
test
xchg
in
cmp
pushf
lret
lea
les
cmp
ror
mov
jbe
sub
ret
sbb
pop
or
pop
outsb
mov
mov
in
pop
lock
sbb
clc
jle
mov
fmuls
add
mov
inc
lods
or
mov
add
cmp
daa
sub
mov
pop
int
gs
or
fwait
push
xor
fiaddl
add
add
sbb
int
inc
inc
and
test
test
push
scas
xchg
adc
fadds
mov
in
mov
or
lcall
add
pusha
mov
sub
mov
xchg
insl
testb
cmp
outsb
ljmp
lret
jne
mov
shl
ds
jne
xor
movsl
or
sub
mov
jle
pop
add
pop
inc
jne
dec
jo
mov
jecxz
jbe
adc
pop
pop
ret
ljmp
cld
je
das
sub
inc
mov
xor
mov
mov
rcrb
xor
in
adc
push
gs
xchg
gs
pop
lock
sub
leave
mov
mov
out
mov
sbb
ficomps
mov
xlat
add
cmp
fsubrl
pop
dec
jl
add
js
inc
ficoml
repnz
hlt
mov
sarb
ss
scas
lds
insb
inc
xor
outsl
dec
sub
mov
shl
push
mov
inc
and
fidivrs
pop
ret
adc
rcll
adc
cmp
test
roll
pop
push
xchg
rorb
imul
inc
ss
mov
xchg
call
cmovle
aam
out
out
shlb
mov
inc
dec
fsubr
lcall
and
imul
cli
xchg
mov
test
cld
insl
ret
daa
pop
shl
xor
add
xor
pop
adc
push
pop
cmpsb
cli
sarb
jnp
fs
pop
and
ret
ljmp
push
fmuls
fimull
in
fs
xlat
loopne
rcrl
push
jge
mov
ret
fistl
and
mov
sahf
mov
jno
popa
xchg
xchg
inc
add
popf
mov
shll
mov
ds
cmova
mov
mov
arpl
and
scas
jns
and
pop
test
divb
pop
aas
icebp
xchg
pusha
sub
rcrl
push
lods
jmp
push
movsb
cmpsl
sbb
mov
mov
outsb
in
adc
lea
cmc
mov
xchg
idivb
repz
xor
push
push
ret
add
mov
lods
add
adc
dec
fiadds
xchg
shll
test
cs
cs
adc
add
insb
jl
js
mov
dec
sbb
dec
imull
and
inc
pop
fmuls
push
mov
or
int
cmp
sbb
jge
xor
aam
mov
cmp
dec
jecxz
icebp
call
in
push
scas
sub
xor
mov
pop
mov
lret
pop
push
and
add
hlt
out
addr16
sti
jne
aam
jo
outsb
dec
xor
mov
pusha
lahf
fildll
add
shlb
jae
jle
adc
sub
cmpsl
cmp
scas
gs
xor
push
push
mov
movsl
mov
test
cli
hlt
dec
push
ds
mov
pop
jle
gs
xchg
stos
add
loop
jae
lods
dec
push
lds
mov
and
pop
add
out
std
mov
pop
imul
outsb
testb
testb
or
jg
dec
mov
test
or
push
in
daa
test
loop
test
lock
pushf
push
in
dec
in
push
popf
das
add
leave
cmc
xchg
push
add
aaa
adc
sub
ss
lcall
sbb
das
sub
jnp
jo
outsl
mov
mov
push
lock
dec
sbb
call
test
mov
je
pop
inc
fcom
test
xlat
jl
lock
jmp
sub
imul
cmp
mov
jo
and
mov
fldenv
fldt
repz
sub
pop
sbb
add
push
movsl
cmp
xor
add
fsubrl
mov
jle
stos
push
pop
lret
jb
xchg
test
mov
mov
push
fnstsw
cmc
repz
lds
ret
pop
ljmp
sbb
mov
shlb
jg
jno
int
sarl
push
fwait
fwait
loop
out
es
push
arpl
mov
pop
out
push
mov
inc
hlt
out
call
vmovdqa
jecxz
insw
jmp
aas
aad
scas
inc
push
cmp
and
in
push
pop
sahf
xor
dec
push
inc
jbe
sbb
mov
divb
xchg
lock
js
lods
cli
adc
aaa
je
lods
jecxz
pop
and
pop
icebp
aad
mov
roll
xor
into
cmpsl
out
in
and
sbb
add
sbb
pop
loope
popf
dec
das
movsl
test
lret
sbbl
popl
fbstp
clc
push
inc
adc
fistl
xchg
enter
pop
test
xchg
aam
pop
mov
test
pop
mov
push
icebp
bound
in
mov
mov
sub
push
push
cmpsb
pop
xchg
insb
or
out
mov
fs
fldt
test
pusha
int
adc
adc
stos
cmp
xlat
lahf
fdivrl
negl
into
popa
dec
sbb
push
inc
jecxz
test
lcall
push
iret
aaa
cs
arpl
movsl
mov
push
mov
pusha
sbb
ja
sub
cmc
or
xor
cwtl
fcmove
cmc
pop
xorb
jbe
test
xchg
out
inc
adc
mov
in
or
xor
inc
sbb
jae
ja,pn
cmp
and
push
dec
sti
dec
dec
xchg
mov
aas
lds
mov
into
imull
push
imul
mov
cli
sub
pop
sub
mov
std
xchg
mov
push
mov
pop
fs
repnz
and
jo
std
mov
and
dec
je
shr
out
jl
mov
pusha
nop
ljmp
mov
sub
pop
push
lods
int
xlat
popa
dec
insb
lret
jbe
jecxz
mov
mov
cld
pop
xor
mov
scas
out
dec
leave
or
or
out
popf
rol
repz
cmp
sti
mov
lret
or
aam
mov
sub
arpl
inc
jecxz
xchg
and
jge
popa
into
out
loope
fsubs
movsl
gs
aas
dec
inc
daa
sbb
sbb
push
sbb
mov
std
dec
add
gs
pop
ljmp
cmp
dec
aam
sbb
mov
push
lret
cmpsl
xor
ds
cmpsl
bound
jl
add
pop
aam
cmpsb
push
or
ret
inc
cmp
aas
insl
icebp
lods
pop
xchg
mov
sub
mov
dec
cwtl
iret
dec
or
lret
in
mov
lahf
loope
and
adc
std
sbb
xor
test
sub
mov
mov
icebp
test
sub
jae
jne
notl
inc
inc
mov
test
mov
ds
mov
add
cmp
fimuls
test
clc
aad
hlt
and
and
sbb
cmp
cli
push
outsb
mov
mov
mov
add
movsb
mov
push
jecxz
outsl
mul
mov
xchg
mov
add
mov
pusha
or
jmp
mov
test
adcl
xor
push
cmp
xor
dec
inc
movsl
inc
sbb
das
scas
xchg
mov
dec
jecxz
movsl
pusha
cmp
loop
push
adc
add
mov
in
mov
or
hlt
rcrl
pop
xor
leave
fnstenv
cli
imul
gs
xchg
lcall
stos
jge
mov
dec
test
in
fwait
in
das
or
cmpsl
loop
cwtl
or
xor
cmc
xorl
ss
jp
mov
push
in
scas
popa
rdpmc
test
and
in
adc
pop
xlat
jecxz
shl
xor
repz
sahf
sbb
imul
adc
out
mov
jns
and
icebp
adc
and
push
pop
in
jle
es
push
cld
mov
rclb
cmp
subb
push
xor
jl
push
push
xchg
sbb
inc
adc
in
aad
adc
sub
mov
rcll
cld
or
sti
mov
rorl
lea
imul
ss
cmpb
in
nop
xchg
inc
fcoml
repnz
mov
sub
xor
mov
xchg
xor
ss
push
push
repz
aam
icebp
fwait
lods
faddp
daa
adc
mov
jmp
out
push
sub
sbb
sub
fistpll
push
jae
les
xchg
sbb
int
pop
bound
ret
addr16
add
jae
dec
fidivl
adc
ljmp
inc
mov
repz
repnz
push
sbb
jmp
push
rclb
pop
out
test
jno
xor
xchg
test
adc
jae
sbb
xchg
adc
popa
int3
and
mov
in
add
jnp
push
pop
cmpsl
sahf
fdiv
dec
xor
sbb
insb
sbb
inc
cld
cmp
lods
test
push
das
scas
mov
scas
jne
push
or
pop
ret
test
or
inc
push
xor
addr16
aaa
loopne
dec
nop
mov
pop
neg
lahf
jmp
add
insl
cwtl
dec
cmpsl
sub
loopne
and
leave
mov
mov
push
int
mov
scas
daa
repnz
pop
loope
and
out
and
push
rol
aad
adc
dec
cmp
ja
xchg
pop
loop
fdiv
sbb
stc
dec
xor
enter
cmc
pop
and
mov
sbb
pop
scas
mov
aas
or
cmc
sbb
mov
cld
mov
push
repnz
push
inc
scas
jle
jb
in
add
ja
or
inc
xlat
stos
push
add
push
out
jbe
pusha
and
xchg
fsubs
mov
ret
int3
aad
icebp
inc
sbb
push
cmc
es
cs
fs
push
mov
int
xchg
cmp
jb
data16
iret
mov
mov
test
cmp
aas
hlt
xor
sbb
mov
sbb
xor
xchg
xlat
je
adc
cmpsb
fsubrs
in
arpl
popa
fldcw
fildl
sbb
mov
fisubrl
mov
lock
add
mov
or
mov
inc
daa
sti
jmp
mov
sub
out
mov
gs
pusha
adc
dec
out
mov
push
leave
js
test
adc
jnp
out
inc
xchg
jo
sbb
push
es
lcall
inc
cmp
sahf
and
testb
imul
or
mov
addr16
jmp
cmc
mov
cwtl
mov
dec
mov
lret
aam
xchg
pop
xchg
xchg
ret
xor
into
out
rolb
mov
mov
divl
cli
or
lea
popf
sub
push
lods
adc
pop
cld
dec
jle
sbb
popf
repz
dec
or
jg
pop
dec
push
hlt
testb
fldl
sahf
xchg
ss
xchg
lahf
and
je
int
or
adc
inc
push
clc
xor
insb
std
cmp
stos
adc
cltd
mov
out
mov
lea
pop
pop
sarb
pusha
out
adc
sbb
shl
repnz
adc
outsb
leave
daa
xchg
lods
inc
adc
pushf
dec
in
lahf
adc
shl
jmp
aad
adc
pop
out
testl
add
push
add
mov
sub
inc
adc
adc
stos
and
and
adc
xchg
loope
push
insb
push
sbb
jp
pushf
in
sbb
sbb
mov
cld
jl
int3
mov
leave
sbb
mov
lds
arpl
test
add
lds
push
pop
out
aas
xchg
mov
xor
cmp
jmp
enter
popa
je
pop
fldt
xchg
mov
jb
shrb
xchg
sub
dec
mov
xor
cltd
repz
imul
out
xchg
pop
lods
movsb
and
shl
dec
lods
jmp
inc
push
stos
sub
iret
hlt
cmpsl
jo
lcall
mov
or
and
jmp
and
jnp
movsl
adc
jne
and
insb
je
pop
mov
mov
pop
fstps
lods
add
xor
es
mov
lock
pushf
add
xchg
or
xchg
add
iret
jb
aas
sbb
jg
call
sub
inc
mov
iret
jno
inc
add
ja
ljmp
arpl
repnz
pop
outsl
ficoml
int
fs
aam
dec
sbb
xchg
push
jno
push
adc
cmp
xchg
and
sarl
aam
nop
jo
js
scas
push
or
int3
sbb
cmp
xchg
outsl
jp
mov
jbe
jmp
cmpsl
push
xchg
xchg
rcl
in
cld
in
xor
mov
clc
int
fneni(8087
pop
ljmp
sbb
imul
xchg
sbb
mov
cmp
out
push
f2xm1
in
cld
jl
push
adc
enter
xchg
jle
cmpl
imul
dec
xchg
push
sbb
cld
xor
fbstp
adc
shrl
adc
shl
inc
and
outsb
pop
or
mov
ret
mov
cwtl
add
jmp
mov
cli
idivl
inc
xchg
std
sarb
sti
in
jecxz
mov
sbbb
scas
movsb
addr16
lods
sub
in
xchg
dec
int3
int3
jae
cmpb
out
dec
ds
jp
sbb
fsubl
adc
les
sub
imul
cmp
mov
insb
push
rorb
loope
mov
aam
icebp
in
pushf
ljmp
sub
std
mov
xor
test
and
mov
pop
add
out
jle
dec
or
pop
movsl
lods
ret
xchg
mov
push
lret
clc
dec
clc
add
inc
loope
test
inc
push
mov
loop
lahf
pusha
inc
sub
iret
or
push
or
and
test
xor
jne
jae
jmp
daa
xchg
out
fisubs
jl
gs
js
fldenv
xchg
or
popa
in
or
int3
repnz
xchg
push
sub
enter
insb
call
sti
insl
pop
out
lock
in
jns
xor
cmp
mov
rcrb
in
or
pop
sub
and
stc
in
add
dec
aaa
xchg
xor
dec
outsl
xchg
js
and
test
adc
jle
mov
call
jbe
mov
mov
xchg
sub
mov
or
lahf
loopne
les
ret
mov
stc
xchg
lods
mov
and
sarl
adc
lds
cmp
fidivl
inc
xor
xor
mov
or
cmpsl
jns
fldcw
push
adc
mov
stc
add
mov
mov
push
sbb
jle
test
sbb
adc
je
push
inc
pop
ja
push
jg
out
es
jo
add
pop
loopne
or
sbb
daa
cli
jl
je
stos
sbb
xchg
add
pop
push
mov
pop
xor
xor
out
das
mov
sub
enter
shl
cmp
popa
insb
stc
or
enter
arpl
or
add
sub
xchg
es
ja
hlt
jne
bound
adc
cli
xlat
inc
adc
clc
jae
out
or
scas
sbb
std
std
sbb
xabort
popf
xlat
and
cmp
mov
adcl
inc
sahf
out
je
pop
mov
jne
scas
jl
jo
aaa
leave
addr16
mov
jbe
je
jmp
pushf
xchg
insb
subb
dec
sbb
js
cmp
mov
clc
into
shrb
inc
lret
shll
ljmp
jmp
pop
outsb
ret
mov
pop
push
popa
lsl
mov
fcoms
gs
mov
out
std
push
sbb
xlat
inc
cmp
popa
sbb
mov
add
jmp
rep
mov
enter
push
es
xor
cmp
lds
lahf
add
mov
jns
add
push
orb
push
jne
cmc
fwait
les
test
jle
and
mov
xchg
mov
ljmp
pop
sbbl
jb
xlat
inc
mov
daa
sarb
addb
jb
decl
dec
out
cmpsb
cmp
pusha
fwait
in
mov
fmull
push
dec
mov
in
push
sub
test
mov
lahf
cmp
or
mov
mov
inc
cmp
sbb
fs
ss
mov
gs
addr16
test
adc
lea
popa
mov
add
inc
jge
stos
adc
movsl
inc
les
push
cmp
cmp
add
fcomip
mov
je
test
outsl
in
sbb
idivl
xchg
and
in
cmp
rorl
out
mov
sbb
sub
repz
fstpl
mov
test
cmc
ds
and
mov
ret
pop
dec
idivb
jmp
pop
add
dec
pop
roll
pusha
fxam
mov
pop
in
aam
jns
dec
xor
cmp
int
mov
lea
int3
push
sub
add
push
push
pop
lods
jecxz
jo
xor
push
leave
and
xchg
nop
xor
sub
test
outsb
or
lock
sbb
inc
in
xor
jns
jmp
lret
outsl
pop
daa
cmp
out
inc
cmpsl
and
pop
or
icebp
mov
cmpsl
add
sbb
cmp
push
pusha
out
jge
fldcw
push
push
sbb
enter
cmp
cltd
cmc
shlb
xchg
xchg
pusha
sbb
add
test
pop
ret
sub
mov
jge
in
push
xlat
and
and
loope
cs
or
lock
sahf
mulb
mov
insb
mov
dec
inc
jg
lods
andb
cmp
outsl
das
decb
sub
fwait
sub
jnp
fcompl
sbb
and
nop
rorb
sbb
push
jmp
pusha
add
mov
std
sti
push
lret
jg
fs
sub
aam
fcmove
rcll
pop
mov
mov
into
or
ds
aas
jg
les
add
mov
ss
enter
jbe
scas
jle
stos
mov
fcomps
cmp
and
js
xor
sbb
sub
jb
hlt
sbb
mov
sbb
psllq
fcmovb
les
loopne
repnz
rcr
pushf
add
push
jae
arpl
add
cmpsl
xchg
lss
pop
arpl
jl
pop
pop
fildl
mov
jmp
cmp
imul
in
mov
int
mov
mov
and
inc
out
or
xchg
enter
jecxz
xorb
mov
pusha
add
lret
jecxz
in
mov
sbb
in
std
pop
xor
cmp
mov
adcb
lods
shrb
mov
in
sub
mov
aad
cmpl
push
and
mov
popf
icebp
mov
push
test
xchg
sbb
xor
and
ja
fists
cmp
sbb
and
xchg
jge
ret
test
test
es
mov
mov
jae
outsb
mov
ret
ret
add
pop
sbb
orl
int
ret
or
sub
sbb
ja
repz
data16
push
addr16
mov
movsb
push
add
outsb
lret
cmp
cwtl
rcrb
data16
sub
hlt
mov
push
push
mov
clc
into
rcrl
fs
add
fcomps
push
jae
outsl
push
dec
je
mov
rclb
jmp
or
imul
lahf
andb
das
insb
or
lret
orl
icebp
cmp
fiaddl
pop
cmp
cwtl
or
adc
adc
inc
cmpsl
das
aam
mov
pop
in
adc
negl
mov
pop
cs
inc
enter
lods
and
cmp
hlt
xlat
sbb
inc
push
mov
sbb
push
or
dec
cmc
push
test
std
sbb
sarb
mov
pop
std
movsb
popf
mov
mov
addr16
or
rcrb
pop
adc
outsl
int3
in
test
cmpsb
dec
outsb
mov
sbb
sbbl
adc
lods
loopne
js
mov
int3
scas
jge
mov
pushf
xchg
push
repz
rclb
imul
push
gs
or
jge
lods
arpl
shrl
hlt
pusha
dec
xchg
jp
jno
push
aaa
sbb
push
lds
sbb
add
lods
jae
xor
pop
je
pop
mov
sub
mov
xor
cmp
dec
addr16
adc
shl
and
and
fs
aam
ret
or
gs
testl
popf
mov
xchg
call
and
shr
rclb
jle
xor
sub
cmp
or
adc
adc
shl
mov
jmp
sbb
xlat
scas
jg
xor
sarb
imulb
sahf
xchg
fwait
jns
mov
jmp
pop
clc
popa
call
outsb
repnz
pop
push
adc
mov
iret
je
addr16
popf
push
mov
push
into
jge
sahf
pop
dec
sub
cwtl
mov
or
gs
dec
add
lods
inc
cmpsl
push
movsb
jo
xor
data16
mov
lods
je
ljmp
push
subl
call
dec
dec
lock
mov
fxch
jmp
cmpsl
into
pop
cli
xchg
push
mov
mov
fisubrl
leave
mov
andl
aas
ret
mov
cmpsl
cltd
fs
pop
jne
aam
lret
sub
pop
xchg
mov
and
clc
int
sarl
sahf
dec
jg
xchg
sub
inc
xchg
and
cmpl
test
fmuls
and
pop
movsl
mov
mov
mov
stos
mov
mov
sub
cwtl
std
test
push
int3
adc
imul
mov
sti
cmpsl
and
iret
loope
loopne
test
pop
push
dec
adc
mov
arpl
adc
xor
add
adc
dec
sbb
jae
mov
add
js
xor
stos
lcall
cmpsl
mov
movsl
in
std
and
push
cmp
ret
cli
je
ss
ja
push
addr16
or
push
sub
and
int
test
shrl
movnti
adc
or
mov
jmp
mov
adc
loop
ljmp
out
ss
jp
and
push
mov
cwtl
aam
ja
mov
out
fwait
shrl
and
mov
cmp
sbbb
es
fldl
nop
rclb
jmp
cld
aaa
cli
daa
shlb
and
call
and
xchg
ret
lret
xor
dec
fwait
sub
cmpsl
or
mov
pop
add
repnz
dec
push
push
fsubl
cs
and
pop
out
std
add
or
jmp
push
jbe
cmp
jb
addr16
pop
imul
into
cs
aas
mov
out
dec
mov
push
jp
enter
popa
cmpb
mov
xor
test
rcr
mov
pop
fs
sahf
inc
inc
push
xchg
lods
addr16
xchg
enter
cmp
popa
and
cmc
inc
and
jae
andl
nop
je
sahf
repnz
and
iret
xor
push
sub
xor
insl
xor
jns
sbb
jo
adc
pop
addr16
rcll
stos
cli
lods
push
pusha
fucomip
xor
push
pop
dec
mov
dec
xor
cli
ljmp
ja
push
test
xor
cmp
mov
or
pop
adc
jg
dec
orb
jmp
jp
sub
jb
push
cwtl
mov
mulb
push
push
test
sbb
fiaddl
loopew
sti
in
adc
movsb
notl
notb
test
mov
add
mov
jmp
adcl
pop
cmp
pusha
pop
sbb
inc
cmp
pop
push
or
std
lret
nop
pop
daa
add
add
mov
mov
xor
fcmovnbe
mov
shlb
dec
jecxz
mov
mov
sub
dec
mov
push
sahf
fxch
adc
fwait
cmpsl
xchg
sub
out
ret
insl
add
mov
push
pop
shl
jg
movsl
call
lret
push
cmp
xchg
and
add
in
repz
cmp
jmp
stc
les
cltd
pop
sbb
mov
dec
push
test
shrl
out
adc
cmpsb
mov
in
jecxz
sub
push
popa
xchg
mov
shll
mov
call
loopne
mov
icebp
jnp
push
outsb
adc
imul
mov
leave
and
notb
in
inc
inc
inc
pop
push
push
ds
inc
jge
arpl
push
jbe,pn
xor
and
push
mov
iret
xchg
jbe
rol
loopne
jl
inc
pop
popf
fisttpl
jo
popa
repz
xor
iret
jae
xchg
cltd
jge
fwait
lahf
cmpsb
outsl
fiaddl
notb
pop
cmp
sbb
lds
das
stos
push
and
add
cmp
inc
mov
fs
repz
out
mov
mov
sub
int3
aas
push
cmp
cmc
out
mov
xchg
addr16
lahf
cmp
add
ljmp
and
cwtl
out
in
jns
mov
movl
xchg
dec
stos
cmp
jecxz
xchg
mov
es
xor
dec
jl
mov
mov
mov
or
fimuls
into
mov
pop
dec
pop
out
xchg
xor
adc
adc
ss
psubw
or
shll
loop
out
sub
repz
inc
lds
js
adcl
jmp
fs
popa
mov
mov
or
subl
enter
xchg
inc
push
ss
ljmp
std
mov
shll
es
movsb
jmp
mov
fwait
mov
loop
test
insb
xlat
je
pop
jmp
inc
in
out
cmp
or
sbb
or
xchg
sub
sbb
inc
lahf
xchg
xlat
xor
int
int
adc
xchg
shlb
js
test
sbb
pop
add
out
adc
mov
sub
push
inc
es
xchg
cli
mov
fcomps
and
pop
jne
mov
mov
push
mov
sahf
xor
mov
xor
xchg
xchg
loope
and
scas
mov
push
daa
repz
addr16
call
insl
mov
movsb
mov
call
jbe
insb
addl
jb
repnz
dec
jne
mov
rclb
lods
push
in
add
pop
and
daa
cli
cmp
jb
xor
and
inc
idiv
lcall
cmc
or
sbb
mov
xchg
pop
in
leave
leave
add
daa
or
das
stos
sub
imul
insl
enter
scas
cmpl
icebp
bnd
xor
or
xor
bound
jge
test
mov
pop
mov
xchg
sub
loope
mov
pop
enter
cwtl
fdivr
loope
or
inc
xlat
mov
jmp
xchg
std
add
cli
add
pop
fwait
sbbl
xchg
dec
neg
pop
jbe
shlb
aas
adc
in
xchg
imull
or
mov
push
dec
test
lahf
scas
and
mov
or
loope
inc
cmpsb
xchg
iret
jg
mov
rol
dec
mov
sbb
out
fadd
ret
lahf
push
addb
xchg
xor
jecxz
sti
inc
pushf
push
andb
inc
dec
mov
jmp
pop
movsl
mov
push
jmp
jg
dec
jne
outsb
adc
jge
cmpsl
push
sbb
mov
pop
hlt
pop
jnp
call
mov
cmp
mov
sbb
xchg
xchg
lea
xchg
mov
lret
jmp
cmc
lret
addr16
mov
cmpb
fmull
test
mov
add
repnz
hlt
and
lods
rcl
ds
lea
andb
fcoms
or
arpl
inc
and
dec
mov
push
push
les
dec
jnp
sbb
mov
sti
pop
insb
or
repz
lret
inc
scas
sub
xchg
add
xchg
adc
lcall
std
das
pop
mov
lods
sub
scas
or
adc
or
daa
push
push
jecxz
bound
out
sahf
mov
jmp
aaa
mov
pop
mov
pop
mov
aaa
cmpsl
andb
or
mov
fstl
add
mov
les
ljmp
repz
scas
dec
fistpll
insl
mov
xchg
inc
push
cmp
mov
iret
pushf
std
and
xlat
or
mov
out
adc
hlt
push
xchg
xor
mov
xor
enter
pop
cltd
rcrl
leave
cmp
dec
push
pushw
ret
int3
ret
je
mov
jl
aam
fsubrl
mov
or
repnz
jo
idiv
push
xchg
inc
cmpsl
stos
jl
pop
sub
push
fimull
aad
mov
lods
xor
into
lahf
fildll
data16
call
push
lahf
lods
mov
xor
mov
mov
pop
loopne
iret
adc
sbb
call
inc
jb
insl
push
mov
cmp
and
lret
bound
and
lods
xchg
jae
fistl
push
lock
int3
out
mov
pop
sbb
ss
jge
scas
data16
mov
fwait
dec
popf
aad
dec
out
das
pop
jmp
add
fldt
push
jl
mov
ljmp
pop
fwait
push
addr16
mov
jp
pop
shr
jl
aad
push
mov
test
or
jmp
data16
push
cltd
push
scas
dec
sbb
movsb
sub
ss
xchg
dec
imull
or
in
daa
and
sbb
test
xchg
stc
int3
inc
or
stc
pop
leave
ja
ds
xor
jbe
in
ss
rcrb
lret
test
sub
xchg
shlb
cltd
lods
mov
xor
popf
inc
sbb
mov
fisubrs
xor
imul
out
mov
inc
cmp
ret
mov
inc
clc
pop
enter
xchg
add
test
jbe
mov
mov
jne
jae
inc
push
testb
xor
jbe
rsqrtps
imul
inc
adc
popf
pop
outsl
adc
subl
adc
push
scas
call
add
scas
sub
and
xchg
mov
addb
xor
adc
pop
push
stos
inc
aas
into
add
clc
sbb
xchg
jb
in
inc
xchg
mov
xchg
lahf
jns
pop
das
add
popf
out
mov
xchg
jle
xor
int3
cmc
shrb
push
out
ret
mov
clc
loopne
inc
aas
cmc
pop
loopne
cwtl
pop
stos
in
es
jmp
cwtl
rolb
push
pushf
sub
sub
lods
dec
mov
inc
cmp
adc
pop
mov
xor
ja
je
inc
movsl
dec
js
cmp
pop
adc
out
fmuls
or
aam
pop
rcrl
xchg
inc
cmp
jg
xchg
inc
jne
icebp
push
add
hlt
mov
sub
or
dec
jb
inc
push
popf
push
pop
repz
dec
or
in
imul
xchg
lea
ss
test
and
sbb
leave
int
out
shlb
imulb
adc
add
sbb
xlat
pop
sbb
add
or
scas
dec
dec
test
xchg
mov
or
cmp
mov
rorl
rorl
sub
imul
stos
test
sarb
aaa
shll
jge
sub
andl
cmpl
push
push
outsl
fiadds
cmp
hlt
js
jle
pop
rcl
cld
fdivl
add
and
int3
and
insl
aas
repnz
mov
adcl
push
outsb
dec
mov
sub
cmp
mov
fs
or
fildll
out
clc
decb
push
push
xchg
sub
dec
jb
push
or
xchg
inc
pop
cwtl
jge
lcall
lret
push
ljmp
pop
hlt
outsb
lea
cmpsl
outsl
mov
push
push
inc
cmc
inc
dec
mov
xchg
arpl
sbb
stc
dec
mov
mov
jge
pop
fucom
in
fidivrl
xlat
outsl
pop
pop
repz
in
aad
mov
adc
push
cmp
sub
inc
jns
xchg
inc
jo
sub
or
cmp
out
push
jp
push
pop
clc
pop
xchg
xor
sti
das
and
pop
mov
out
lret
mov
imul
stos
cs
bnd
lea
aad
sarl
xor
mov
movsl
scas
add
fstps
and
test
and
xchg
sub
cwtl
test
dec
jne
and
mov
jo
xor
in
mov
pop
dec
clc
or
fmulp
inc
loopne
lcall
test
mov
pushf
mov
ficomps
fs
lahf
movsb
aaa
pop
shrl
xchg
jp
and
add
adc
adc
rcll
jl
push
jge
aas
jmp
mov
out
lret
enter
or
shl
or
pusha
test
sub
cmp
push
push
stos
fs
push
into
mov
add
pop
ret
scas
cmp
sub
mov
push
in
mov
mov
lret
sbb
dec
jl
add
pop
xchg
nop
popf
cli
and
hlt
mull
jns
inc
in
sub
testb
cli
xor
pusha
sbb
testb
mov
dec
mov
cmpsl
pop
pop
or
icebp
jle
inc
test
mov
adc
movsl
popf
stc
jno
dec
mov
xchg
not
adc
mov
jno
jno
and
insl
adc
dec
push
lahf
mov
lahf
mov
xor
sahf
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
movsl
adc
push
inc
mov
dec
sbb
add
gs
push
add
mov
ljmp
fwait
rclb
xchg
sar
aad
dec
sub
scas
and
bound
adc
xchg
cli
fwait
add
xor
cmpl
sti
jle
lret
push
int
test
in
push
mov
repz
xor
into
cltd
das
mov
loop
pop
push
push
or
ja
inc
jo
mov
test
xchg
pop
mov
lret
jl
mov
pop
int3
push
js
popf
and
push
pushf
or
mul
jg
add
repz
mov
sub
pop
sub
outsl
push
sahf
out
add
daa
lahf
negb
xchg
cld
xchg
rcr
out
sbb
std
xor
adc
roll
imul
insb
pop
pop
dec
dec
mov
stos
mov
mov
xlat
push
xor
in
add
call
push
mov
push
push
rclb
push
or
cmpsl
cmpsb
and
outsl
stos
data16
xchg
push
mull
faddl
test
xor
dec
test
push
or
push
fldl
cmpsb
xchg
add
mov
or
fdiv
sub
popf
jp
or
sub
ds
xchg
shll
lret
sbb
push
sti
lods
xchg
dec
dec
xchg
xor
and
push
inc
mov
push
mov
dec
test
jg
dec
dec
mov
into
rolb
push
mov
push
cmpl
aad
and
xchg
jne
jmp
xor
jo
aam
das
jl
push
mov
filds
jmp
popf
jns
mov
sub
or
lea
test
imul
in
xchg
mov
ja
les
mov
cmp
jns
pop
jb
mov
call
mov
hlt
sbb
mov
or
hlt
leave
xchg
mov
pop
xor
jg
xor
daa
sbb
sti
jg
push
loop
lock
mov
pop
jle
into
xor
jb
sub
dec
jg
and
testb
lea
pusha
arpl
add
nop
divl
dec
sbb
or
stc
dec
sarl
data16
test
int
jmp
xor
repnz
jbe
inc
add
daa
xlat
addr16
out
out
outsb
push
repnz
fadds
jno
clc
hlt
ds
testb
cmp
mov
mov
nop
stos
lds
mov
test
call
or
add
mov
inc
pop
mov
test
xor
fisttpll
enter
xor
mov
cmp
in
add
and
cmpb
leave
jbe
sbb
mov
adc
nop
jnp
mov
cmpb
mov
int3
je
stc
jl
add
mov
jns
fwait
movb
andl
push
jge
mov
pop
jge
sbbl
push
mov
sarl
arpl
faddl
clc
fildll
lret
notb
pop
push
nop
nopl
jmp
fdivrp
mov
inc
sub
inc
inc
add
mov
icebp
cld
fildll
jnp
pop
mov
push
sub
dec
sbb
adc
cmp
pop
fstpl
and
sti
stos
adc
ret
scas
pop
sarb
push
ss
repnz
xchg
mov
fiaddl
xchg
pop
pop
aad
inc
dec
jno
add
xchg
mov
in
shrb
ret
lods
js
iret
ss
mull
inc
inc
sub
arpl
inc
lcall
cmp
jno
pop
in
xchg
inc
mov
inc
push
xchg
and
sbb
notl
in
repz
leave
pop
jnp
push
mov
push
inc
jne
inc
jb
sti
sub
enter
push
bound
pop
leave
fadds
and
mov
mov
and
lds
aam
lcall
or
or
adc
dec
mov
cs
cmc
das
into
sbb
push
cs
jg
mov
movb
clc
inc
stos
dec
movl
ja
lea
loopne
mov
xor
and
gs
mov
dec
in
jae
iret
movsl
lahf
hlt
jns
jg
arpl
lea
add
sbb
cmp
cmp
out
pusha
sarb
mov
into
shl
scas
in
movsb
add
adc
dec
dec
inc
cmp
xchg
int
mov
push
in
and
mov
sar
repnz
push
pop
sahf
xor
aas
aam
and
push
mov
cmpsb
rep
and
in
es
mov
stc
inc
xchg
adc
pushl
in
scas
aas
fists
into
mov
imul
and
mov
pop
add
adc
into
xchg
mov
fsubrs
xchg
bound
sub
and
and
in
orl
lahf
sub
and
xor
jp
fs
je
cltd
aam
cmpsl
pop
adc
fbstp
xchg
xchg
outsl
push
outsb
in
dec
imul
sub
stos
std
cld
push
pushf
aad
rorb
xchg
xor
jne
cmp
loop
cmpsl
mov
pop
aas
ljmp
sbb
cmp
iret
sub
sub
xor
jge
jae
andl
mov
pop
add
fdivrl
sbb
xor
int
mov
dec
push
jno
in
data16
push
mov
mov
daa
inc
test
dec
and
add
jb
inc
rorl
push
jb
push
loope
cwtl
push
push
inc
rcl
call
pop
mov
sti
mov
and
lret
fdivrl
ds
mov
push
mov
push
inc
xchg
addr16
aad
and
xor
jg
mov
and
push
jle
popa
sbb
dec
pop
lret
mov
jmp
mov
bound
arpl
repnz
cwtl
int3
test
mov
add
je
dec
dec
fdivs
lea
sbb
mov
adc
int3
sbb
add
mov
test
sub
mov
xchg
in
jp
movsl
mov
cmpsb
mov
push
add
scas
pop
xor
sub
xchg
sub
cmp
inc
jmp
mov
jnp
pusha
addl
arpl
in
daa
jae
jg
movsl
loope
mov
sbb
aam
icebp
mov
mov
push
aad
cmp
mov
push
add
mov
inc
or
inc
xchg
mov
sub
jne
in
inc
mov
lods
mov
sahf
daa
mov
or
rcrb
mov
outsb
pusha
add
cmc
fcmovnbe
cmp
std
cmpb
lret
addr16
sbb
jl
dec
xchg
negb
std
xor
add
lds
es
mov
push
lret
inc
sbb
subb
push
outsb
rcr
sar
or
addr16
icebp
mov
test
rcll
pop
xlat
dec
inc
push
xchg
outsb
repz
jge
cmp
cmpsl
int3
test
adc
jg
sti
pop
repnz
ja
cmpsl
cld
fldcw
and
pop
in
fsubrs
jb
pusha
push
or
test
xor
adc
mov
dec
nop
cmc
push
push
ret
push
push
pop
pop
out
fimull
sarb
mov
sub
jle
mov
movsb
fisubs
ffreep
test
lock
sub
push
outsb
out
sub
enter
dec
out
stos
cmp
ret
icebp
das
cmp
gs
jl
mov
adc
or
xor
hlt
add
stc
lock
xor
call
push
scas
dec
jns
notl
push
bound
xchg
movzbl
mov
or
and
out
stos
push
mov
mov
test
or
idivb
outsb
insl
movsb
loop
xlat
cmp
stos
inc
repz
pop
in
mov
mov
mov
and
add
pop
cmp
fnstcw
stc
push
xor
xchg
enter
sbb
mov
add
sub
sbb
and
jmp
daa
lea
enter
jne
call
clc
dec
mov
ret
mov
xor
push
mov
mov
and
enter
fs
enter
lock
mov
mov
ljmp
lret
cmp
test
es
fwait
sub
adc
inc
cwtl
mov
sub
inc
dec
dec
outsb
fs
loopne
sbb
dec
clc
sub
inc
xor
fdivs
in
mov
loop
lcall
add
xor
out
fcoms
push
xchg
add
mov
addr16
scas
nop
add
outsb
and
push
xchg
test
int
lea
xor
pop
rcll
loop
js
mov
out
cmp
or
xchg
dec
lods
lock
jle
xchg
repnz
scas
ret
xchg
ds
mov
fwait
pop
jbe
fs
ds
push
pop
add
xor
push
jno
xchg
lock
xchg
add
popf
icebp
add
xor
in
add
out
js
je
pop
jo
lahf
mov
pop
push
xchg
pop
scas
sub
cmp
sbb
pop
add
sahf
clc
and
addr16
addr16
ficoms
mov
sub
ljmp
and
mov
mov
add
or
lock
xor
cmc
mov
push
mov
sub
mov
jmp
enter
xorb
mov
out
cmc
ret
or
mov
rcll
test
das
lock
les
cmp
movsb
xchg
pop
cli
popa
test
scas
lods
mov
hlt
lea
pminub
jge
xor
gs
ror
ja
jl
cmpsb
add
mov
xor
push
repnz
xchg
mov
in
pushf
loopne
adcb
jecxz
flds
ljmp
repnz
lahf
imul
js
sbb
outsb
mov
mov
andl
sub
push
ljmp
inc
popf
mov
fistpl
outsl
rep
dec
jle
roll
ret
pop
icebp
int3
adc
or
add
add
mov
scas
ljmp
rorb
rcrl
ss
mov
pop
sub
cli
and
xchg
popf
int
dec
lods
lods
cmpsl
cmp
pop
dec
bound
xchg
sub
das
repz
lcall
push
dec
mov
fwait
and
lret
sbb
daa
or
out
mov
loopne
scas
dec
inc
and
int3
jl
cltd
out
shrb
lock
into
mov
push
in
push
pop
test
dec
cld
fbstp
sbb
or
sbb
icebp
ss
sub
mov
lahf
jne
or
cmpsl
adc
iret
or
pusha
addr16
sub
mov
mov
mov
cmp
push
mov
mov
push
jmp
add
jns
push
add
xor
mov
mov
add
mov
iret
incl
aas
sub
stc
pop
dec
pop
fucomip
jne
inc
xchg
es
mov
nop
fisubrl
imul
or
leave
mov
add
test
push
scas
or
movsl
pop
push
andl
and
les
jb
inc
mov
rolb
cmp
mov
inc
jle
sti
cmp
shr
movl
lcall
xor
cmp
clc
dec
mov
out
rolb
test
rclb
shlb
leave
and
sub
int3
or
jnp
repz
test
add
les
pop
mov
cs
push
mov
sbb
and
mov
push
push
orb
jg
fistps
roll
jbe
in
outsl
repz
imul
aad
lret
xor
out
xchg
push
scas
lea
fists
je
nop
jl
and
cmp
lret
xor
into
into
push
lcall
push
push
scas
cwtl
movsl
xchg
xor
mov
pop
pusha
dec
shl
xchg
sub
daa
jmp
insl
sti
jo
mov
out
mov
cmp
xorb
push
leave
push
lods
stc
repnz
scas
cmp
add
pop
mov
cmp
adc
pushf
sbb
jbe
sub
movsb
out
push
das
mov
bound
inc
sub
test
mov
cs
movsb
insl
and
bound
adc
into
js
dec
push
push
xchg
jecxz
or
cmc
aaa
fcompl
adc
mov
jnp
pop
push
and
xlat
notl
and
cmp
mov
cmp
push
push
stc
mov
push
sub
pushf
jo
outsb
in
leave
sbb
xor
fiadds
ror
xor
xchg
loope
xor
popa
sbb
lods
rcrb
hlt
icebp
cli
push
mov
cs
fs
clc
mov
rcr
cmp
cmpb
cld
scas
or
setle
pop
test
dec
outsb
inc
hlt
add
je
sub
xchg
test
test
or
cmp
jle
popa
aas
adc
mov
icebp
or
rolb
dec
cmpsl
fnstcw
cmp
sub
xor
and
out
les
das
sbb
ja
cltd
movsb
adc
movsb
mov
xchg
cmpsb
test
popa
push
lods
mov
sbb
dec
sbb
imul
sbb
inc
outsl
dec
sti
xchg
daa
test
data16
push
nop
sub
add
lahf
rcrb
pop
xor
leave
mov
aad
das
jb
in
repz
cmpl
add
adc
jle
adc
xor
outsb
sbb
lods
add
enter
clc
inc
ret
iret
js
mov
xchg
adc
xor
dec
mov
pop
xchg
insb
push
jg
sbb
das
add
daa
xchg
pop
and
rcll
dec
movsl
push
xor
jnp
je
leave
dec
sub
sbb
mov
dec
lret
push
jp
aaa
ja
je
data16
jecxz
mov
loopne
sbb
hlt
mov
xchg
outsb
test
cmp
mov
xor
jmp
in
fiadds
jb
cmc
repnz
in
push
dec
insb
fistps
mov
arpl
pop
pop
jae
ds
repz
pop
pminub
add
pop
sub
outsl
push
jle
std
push
jge
pushl
xor
int3
adcl
sar
aaa
lret
hlt
jne
nop
mov
xchg
shlb
jbe
mov
rclb
insl
test
lcall
push
push
mov
xchg
cmc
mov
fnstcw
cmc
dec
lds
jecxz
enter
xlat
pop
loop
fadds
fs
lds
mov
sbb
xchg
imul
add
pop
add
into
cwtl
pop
mov
dec
dec
mov
adc
movsl
fmulp
add
push
xchg
cmp
in
mov
push
push
mov
mov
mov
insb
leave
fwait
cmpsb
pop
add
jns
mov
push
pop
jns
add
stos
cmp
les
das
mov
pop
xchg
dec
or
imul
cmp
gs
in
in
jg
xchg
fiadds
cmpsl
inc
xor
jg
dec
xchg
sub
imul
loopne
mov
mov
mov
sbb
arpl
cmpsb
mov
mov
xlat
mov
cmp
mov
stos
dec
in
pop
adc
cmpsl
pop
mov
mov
rcll
dec
push
adc
lds
jns
in
jno
xchg
rcll
or
and
loope
cmp
cmp
fadd
fs
lcall
cld
inc
sub
mov
lahf
push
stos
cmp
mov
or
cmp
imul
xlat
mov
repz
xor
cmp
enter
or
aad
push
xor
push
lods
push
cmpsl
enter
mov
repz
sbb
push
push
pop
mov
xchg
js
lret
rorb
mov
sub
int
dec
popa
movups
bound
flds
mov
mov
mov
jo
arpl
push
shl
nop
pop
rcll
dec
loop
lock
and
xchg
andb
xor
jne
in
mov
dec
mov
lock
les
into
jb
call
mov
aaa
test
lret
fiadds
pop
loopne
fsubl
sbb
jg
fs
jnp
loop
fld1
cmp
push
ds
mov
daa
mov
gs
or
call
aad
fimull
sti
jge
pop
xchg
scas
xor
int
mov
jge
test
jge
adc
ja
sub
mov
sbb
outsl
add
or
lret
mov
cld
jl
xorb
sbb
push
test
arpl
jge
mov
fsubrs
arpl
pop
inc
and
and
jns
movsl
mov
gs
and
outsb
icebp
rol
and
cwtl
movb
leave
mov
insb
xlat
lds
bound
adcb
fwait
adc
add
cmc
xchg
cli
nop
push
sub
cmpl
sbb
jnp
in
adc
push
rcl
pop
mov
push
pusha
pop
test
das
cmp
xlat
mov
outsl
dec
pop
shll
cld
pop
stos
mov
mov
movsb
mov
cmp
inc
cmp
jbe
hlt
mov
fisubrs
sub
rcl
xor
xchg
movsl
mov
pop
and
imul
mov
sub
std
sbb
dec
mov
pop
es
out
cmp
into
or
in
push
xchg
mov
push
or
xor
jmp
inc
daa
lret
fimull
cmc
jno
lret
movsb
popf
shl
cmpsl
mov
and
or
imul
dec
mov
stos
je,pt
jb
xchg
lret
cld
cmp
iret
mov
call
clc
adc
outsb
jnp
fwait
gs
jl
jbe
shrb
xor
mov
xchg
sub
out
test
xlat
ljmp
scas
test
out
sbb
adc
ficoml
nop
gs
out
in
data16
outsl
loop
and
outsl
out
cmp
mov
cmp
pop
xor
enter
cmp
out
dec
pop
into
xchg
sahf
jnp
inc
mov
mov
adc
push
pop
add
adc
repz
cs
add
mov
gs
mov
mov
lds
flds
inc
jl
cmp
cs
push
lret
xchg
sbb
add
xor
cmp
pop
es
jb
mov
jle
inc
mov
movsb
idivl
arpl
clc
sub
insb
pushf
push
or
icebp
pop
add
out
mov
stos
stos
mov
mov
push
or
push
xchg
and
in
cmpsl
aas
dec
ret
cmp
push
jns
aad
inc
popa
push
mov
out
mov
loope
fidivs
icebp
jns
jg
repnz
inc
rolb
adc
add
sbb
icebp
clc
and
aam
xchg
js
fstps
sub
stc
out
data16
daa
cwtl
and
adc
xor
jmp
push
arpl
mov
sbb
pop
mov
jl
daa
sbb
xchg
outsb
outsb
sbb
and
fldz
dec
psllq
jnp
push
adc
mov
jno
outsb
lcall
adc
inc
ret
out
inc
inc
es
xor
mov
xlat
mov
sahf
clc
cmp
mov
sbb
lret
incl
add
fnstenv
push
movsl
mov
insl
movsb
cld
xchg
or
into
jns
mov
jnp
cmpsb
xlat
push
dec
mov
sarl
jb
icebp
ja
icebp
imul
fisubs
inc
adc
rclb
pop
hlt
jns
out
push
mov
push
fwait
xchg
out
or
clc
xchg
jp
jbe
dec
xchg
cmp
lret
test
sbb
pop
lds
mov
pusha
xlat
lods
mov
icebp
xor
cmp
xor
jp
mov
mov
add
pop
stos
sub
sbb
ja
pop
in
fsubr
outsb
mov
sti
repnz
adc
insb
push
je
inc
xchg
sbb
lock
mov
jp
sub
jmp
xor
loop
pop
sahf
fucom
and
fnstsw
inc
pop
icebp
xchg
and
xchg
daa
lret
shr
fldl
aaa
nop
das
sub
jb
inc
mov
dec
jb
jecxz
or
lods
jae
mov
mov
jmp
pop
das
insb
xor
mov
inc
cmpsb
sub
jbe
sbb
sbb
scas
pop
sbb
shlb
pop
loope
mov
cmpsl
les
cli
cld
inc
push
xorb
repz
or
xchg
mov
pop
rclb
insb
push
cmp
inc
fisubs
push
mulb
rorl
in
xor
inc
and
cltd
mov
mov
cmp
xchg
sbb
sbb
adc
rsqrtps
xchg
dec
xor
imul
mov
ja
adc
xchg
imul
rcl
flds
mov
xchg
xchg
mov
popa
sub
and
xchg
lahf
test
repz
cmp
test
in
fsubrl
mov
shlb
inc
inc
lea
pop
js
rcll
addr16
sub
mov
mov
jo
mov
xor
inc
and
or
xor
or
push
lods
int
fidivs
es
add
mov
aad
sub
mov
fsubs
dec
sub
sub
cmp
movsb
add
adc
jmp
dec
pushf
lods
pop
jae
daa
fcoms
mov
mov
sbb
fwait
insb
fmul
jg
inc
mov
fndisi(8087
out
lahf
loopne
xorl
shl
pop
mov
aam
divl
push
pop
pop
inc
fs
jnp
insb
and
jnp
pop
sub
daa
ds
dec
sbb
push
arpl
sub
aas
test
rorl
repz
nop
loopne
jb
jmp
add
imul
jnp
dec
and
das
jp
iret
scas
add
sub
lret
pop
fistl
fbstp
jmp
mov
push
pop
sti
lret
sub
cmp
jle
push
adc
mov
pop
mov
mov
sbb
sbb
sbb
mov
cmpsb
mov
dec
sbb
push
test
icebp
testl
inc
add
repz
repnz
xchg
dec
mov
jae
sbb
jg
std
push
cli
adc
xchg
pop
xchg
pusha
fcomps
or
xchg
push
pusha
outsl
cmc
test
push
xchg
daa
jg
mov
hlt
xor
inc
cs
mov
dec
aad
sbb
subb
mov
sub
xor
and
or
iret
mov
loopne
mov
mov
push
fwait
sbb
jae
lret
mov
inc
or
or
loopne
and
movsb
xchg
mov
in
stos
sbbl
jg
xor
lea
sbb
cmpsb
mov
push
ret
into
ret
inc
jo
pop
cwtl
jae
mov
pop
xchg
fs
out
add
sbb
pop
and
mov
mov
int
push
popf
ljmp
push
cmp
fdivr
push
inc
jo
sbb
mov
mov
dec
fisttps
data16
int
cld
adc
jmp
pop
mov
cmp
push
pop
mov
push
and
or
xchg
pop
loop
leave
jmp
lds
xchg
loopne
adc
cs
ret
inc
sahf
ficompl
or
or
push
lds
mov
das
mov
cs
add
sub
push
gs
sub
scas
jg
jg
pop
add
and
pop
fisttpl
ret
loopne
in
jg
ds
xor
lock
hlt
sbb
mov
das
adc
sbb
xor
and
mov
out
adc
push
inc
xchg
inc
mov
mov
dec
arpl
push
fidivrl
lods
in
xor
cmpsl
out
mov
ret
ja
pusha
loop
dec
xchg
out
pushf
dec
mov
js
test
ror
lcall
scas
ret
mov
push
out
cmc
or
decb
add
out
mov
mov
mov
sbb
movsb
pop
out
or
dec
mov
loop
idivl
adcl
add
and
jl
and
movsb
mov
jge
fisubrs
push
adc
movsb
cmp
inc
jns
icebp
out
scas
jns
push
xchg
and
dec
sti
cmpsl
mov
jle
pop
test
jns
ja
in
in
fwait
xchg
or
popa
pop
data16
mov
lret
das
inc
gs
bound
lahf
or
enter
push
cmp
fidivrl
pop
jo
add
mov
push
push
aaa
cmp
pop
je
lea
pop
sbb
mov
xchg
ud0
pop
sub
cmpsl
es
std
mov
mov
jp
push
add
movsl
les
pop
push
dec
add
mov
je,pn
mov
repnz
push
popa
aaa
mov
add
aas
mov
aad
jmp
push
testb
arpl
adc
rcll
and
insb
pushf
cli
dec
rcll
push
adc
cmp
xchg
fwait
mov
int3
mov
xchg
cmpsb
or
movsl
dec
out
lret
and
in
inc
repnz
adc
and
dec
ljmp
out
xchg
xor
mov
cmp
sub
jg
sbb
xor
xchg
or
int
mov
faddl
xchg
pop
xchg
int
xchg
mov
push
mov
pop
bnd
adc
xor
test
xchg
or
cmp
je
mov
stos
push
in
arpl
lret
push
fsubs
ljmp
or
daa
stos
mov
adc
in
je
pop
outsb
test
rorl
push
fimuls
out
xchg
cmpsl
xor
pop
rclb
out
dec
lock
pusha
jno
dec
sbb
inc
call
dec
jae
sti
test
icebp
icebp
test
xchg
inc
ss
repz
scas
pop
or
pushf
ljmp
sbb
imul
pop
popa
jmp
fimull
pop
arpl
and
sub
pop
pop
in
mov
into
stos
add
adc
roll
test
subb
sbb
jns
into
sahf
sbb
mov
mov
mul
shl
ret
scas
mov
pop
mov
push
cltd
fstl
in
movsb
xchg
sarb
scas
insb
fldcw
imul
orb
push
xor
add
xchg
stos
sub
push
out
loope
icebp
mov
cwtl
mov
sub
inc
call
lds
xchg
jne
out
dec
mov
daa
jecxz
mov
loop
cli
mov
dec
or
xchg
bound
jae
movsb
scas
pop
xchg
push
loop
fistpll
xchg
jp
dec
loop
mov
stos
jmp
jb
pop
inc
popa
push
xchg
xor
hlt
popa
lahf
push
into
adc
add
mov
pop
out
ljmp
out
je
xchg
dec
push
jp
movsb
sub
stos
jne
cld
mov
popa
mov
jne
dec
mov
ja
cmp
cmpsl
repz
leave
loop
inc
adc
xor
xor
push
sbb
test
xor
xchg
jns
leave
rcrb
jno
rcrl
lcall
pop
mov
adc
xchg
mov
adc
adc
in
ja
inc
mov
fmull
cmpsb
les
lcall
pop
adc
add
add
add
pusha
mov
lea
movl
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
pushf
lock
add
lock
add
pop
insl
